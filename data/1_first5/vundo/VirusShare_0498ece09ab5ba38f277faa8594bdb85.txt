and
mov
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
cmpsl
repz
add
xchg
cmp
nop
jmp
jmp
jmp
push
nop
xor
xchg
inc
xchg
jmp
jmp
jmp
jmp
jmp
jmp
push
nop
add
mov
add
xor
mov
and
nop
sub
xchg
jmp
push
nop
nop
pop
push
mov
push
mov
push
nop
sub
shl
mov
push
nop
jmp
lea
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
mov
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jne
mov
and
add
add
mov
movzbl
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
mov
mov
cld
mov
addr16
movl
xchg
jmp
call
push
pop
lea
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
int
call
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
inc
and
mov
xor
mov
mov
mov
mov
inc
pop
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
or
andl
xchg
push
cld
jmp
cmpl
xchg
jne
push
addr16
lea
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
mov
jmp
jmp
push
xchg
push
nop
jmp
pushl
xchg
call
xchg
jmp
jmp
jmp
addr16
jmp
push
push
pop
jmp
xor
mov
jmp
jmp
push
pop
sub
sub
mov
sub
xchg
xor
dec
mov
mov
mov
andl
xchg
push
mov
add
mov
add
ror
mov
jmp
push
mov
ror
or
mov
or
dec
test
jne
pop
xor
sub
inc
mov
call
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
dec
add
add
jmp
jmp
jmp
push
xchg
call
push
pop
jmp
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
or
add
mov
xchg
jmp
jmp
push
pop
call
xchg
mov
xchg
mov
push
pop
mov
cld
sub
and
rol
inc
mov
jmp
xor
add
shl
or
mov
sub
cld
shr
xor
mov
push
xchg
push
mov
jmp
jmp
addr16
call
xchg
mov
addr16
mov
xchg
mov
nop
jmp
xor
cld
and
mov
mov
mov
lea
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
sbb
add
jmp
jmp
jmp
jmp
xchg
call
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
je
call
xchg
jmp
inc
mov
push
push
pop
jmp
adc
ljmp
in
xor
xor
sub
xor
mov
push
cld
jmp
je
jmp
sub
xchg
jmp
jmp
push
xchg
sub
or
ror
rol
add
mov
push
cld
push
mov
push
xchg
push
push
pop
jmp
mov
sub
and
or
mov
push
xchg
push
push
pop
jmp
push
xchg
or
mov
mov
push
pop
add
push
pop
jmp
jne
xor
cld
jmp
push
mov
add
xor
sub
mov
call
addr16
movl
push
pop
jmp
inc
xchg
jmp
jmp
jmp
push
xchg
jmp
push
rol
and
add
and
push
mov
dec
or
sub
pop
and
ror
dec
test
jne
pop
ror
dec
shr
mov
call
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
je
call
push
pop
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jne
orl
xchg
jmp
and
mov
sub
sub
and
mov
pushl
mov
xor
and
and
push
shr
inc
push
sub
mov
add
xor
pop
or
shr
dec
test
jne
pop
pop
call
test
jmp
jmp
jmp
jmp
jmp
jmp
je
call
mov
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
into
call
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
cmp
decl
adc
add
add
lret
lret
or
pushl
and
pop
add
mov
mov
rep
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
add
add
inc
shl
add
mov
pop
add
add
sub
xor
add
mov
and
shl
mov
sub
addr16
jmp
and
xor
xor
shr
dec
mov
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
add
add
movl
xor
cmc
rol
sub
pop
inc
or
pop
sub
or
rol
sub
pop
call
xchg
nop
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
call
cld
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jne
jmp
inc
cld
jmp
jmp
push
mov
add
or
and
push
dec
inc
or
rol
ror
mov
sub
xor
shl
dec
dec
test
jne
pop
pop
call
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
je
push
xchg
jmp
mov
xchg
mov
cld
jmp
mov
xchg
mov
xchg
jmp
jmp
jmp
add
add
xor
xlat
add
shl
xor
mov
inc
add
inc
rol
mov
shr
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
rorb
xchg
mov
xchg
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
rol
shl
push
inc
xor
add
xor
dec
push
rol
rol
and
sub
pop
mov
mov
xor
dec
test
jne
pop
lea
mov
call
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
add
push
cld
call
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
rclb
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
mov
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
adc
shl
mov
ror
dec
add
and
xor
pop
jmp
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
rol
xor
ror
shr
pop
or
sub
sub
or
shr
pop
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
add
sbb
add
mov
sub
mov
push
or
mov
dec
mov
xor
ror
add
and
add
add
add
ror
dec
test
jne
pop
add
rol
ror
ror
and
mov
call
test
jmp
jmp
jmp
jmp
jmp
jmp
je
call
xchg
jmp
lea
jmp
jmp
jmp
jmp
jmp
jmp
jmp
xchg
push
cld
pushl
mov
pushl
push
pop
call
addr16
leave
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
add
mov
add
mov
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
inc
lock
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
mov
cmp
add
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jne
or
mov
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
add
add
rorb
add
cld
pushl
cld
call
xchg
xor
dec
pop
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
add
push
mov
push
or
add
pop
push
xchg
call
mov
jmp
add
mov
cmpl
xchg
je
push
addr16
mov
mov
mov
jmp
push
push
pop
add
cld
push
xchg
call
mov
sub
and
mov
add
mov
shr
mov
add
nop
jmp
nop
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
cmpb
cld
jmp
and
sub
ror
mov
mov
nop
andl
push
pop
add
xchg
mov
xchg
jmp
and
add
or
rol
pop
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
inc
das
inc
xchg
and
mov
call
push
pop
dec
xor
and
xor
pop
xor
shl
and
shr
pop
jmp
mov
jmp
jmp
jmp
into
jmp
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
add
add
sar
fiaddl
add
push
push
pop
jmp
push
xchg
or
rol
pop
add
or
mov
mov
dec
xor
shl
xor
pop
push
shl
pop
add
xor
cld
jmp
movzwl
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
add
notb
push
sub
into
or
pop
cmp
cld
mov
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
inc
in
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
lea
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
cld
add
add
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
je
nop
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
cmp
add
fisttpl
test
add
nop
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
clc
add
add
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
add
add
sub
rol
mov
sub
mov
movsbl
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
rol
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
lock
pop
incl
cld
xor
ror
mov
jmp
ror
mov
call
nop
rol
and
pop
pushl
nop
push
nop
pushl
addr16
jmp
rorl
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
add
push
pop
dec
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jne
shl
or
sub
add
xor
pop
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
shr
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
lea
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jle
mov
addr16
movzwl
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
and
rol
xor
mov
jmp
mov
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
mov
jmp
jmp
jmp
jmp
jmp
jmp
jbe
add
mov
jmp
shr
xor
sub
mov
ror
inc
dec
mov
add
mov
mov
push
pop
or
mov
jmp
or
xor
mov
sub
mov
nop
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
and
sub
or
mov
pusha
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
pop
and
sub
add
dec
dec
mov
push
push
pop
call
xchg
add
xchg
jmp
push
xchg
call
xchg
or
pop
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
and
mov
cmp
xchg
jne
and
mov
jmp
add
cld
mov
mov
sub
mov
or
mov
shl
inc
mov
rep
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
add
xchg
movzwl
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
inc
cld
xchg
jmp
push
popl
movb
addr16
movl
addr16
call
push
pop
jmp
lea
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
shr
call
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
mov
xchg
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
mov
mov
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
mov
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
fadds
add
add
xchg
add
addr16
add
mov
pushl
ror
and
sub
or
and
pop
jmp
popa
jmp
jmp
jmp
jmp
jmp
jmp
jmp
xchg
pusha
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
outsl
repnz
jmp
popa
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
mov
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
je
call
xchg
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
je
push
xchg
xor
xchg
jmp
inc
lods
pusha
jne
xor
and
ror
mov
inc
mov
cmp
xchg
je
incl
cld
add
mov
cmp
xchg
jl
jmp
mov
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
push
popf
cmp
add
sub
inc
add
and
pop
lea
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
outsb
add
xchg
decl
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
push
aaa
pop
jl
add
mov
mov
shr
mov
mov
mov
mov
shl
inc
rol
mov
add
mov
mov
jmp
out
jne
jp
incl
rorb
jmp
jmp
jmp
jmp
jmp
jmp
and
pop
jmp
xor
shr
and
or
and
mov
jmp
jne
add
push
pop
cmpl
mov
jne
ror
inc
pop
sub
dec
or
mov
mov
mov
addr16
add
mov
jmp
add
xchg
mov
xchg
jmp
jne
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
mov
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
add
add
shll
dec
and
dec
or
mov
sub
cld
mov
mov
jmp
movzwl
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
add
push
pop
add
xchg
and
rol
ror
add
sub
pop
or
rol
and
pop
or
and
pop
leave
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
and
and
add
pop
push
popl
xor
sub
mov
pop
leave
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
or
mov
shl
dec
mov
add
mov
cltd
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
pop
or
nop
jmp
movb
xchg
jmp
or
push
and
push
pop
add
cld
xor
push
pop
jmp
out
adc
inc
and
push
pop
jmp
add
dec
mov
movzbl
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
shr
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
sar
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
mov
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
or
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
mov
add
mov
addr16
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jle
jmp
sahf
mov
inc
and
mov
xor
addr16
inc
xchg
shl
or
inc
xor
mov
mov
and
xchg
inc
nop
inc
mov
shr
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
add
jmp
popl
and
xor
shr
ror
mov
mov
xchg
sub
xchg
sub
nop
decl
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
jmp
jl
adc
xchg
jmp
push
jp
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
add
add
repnz
sub
shlb
loop
push
and
xor
add
rol
mov
shl
mov
sub
xchg
mov
xchg
nop
nop
nop
nop
nop
incl
nop
dec
mov
mov
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
mov
jmp
dec
lock
jmp
jmp
jmp
jmp
jmp
jmp
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
mov
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jle
mov
and
and
mov
mov
add
xchg
add
addr16
nop
nop
nop
nop
nop
dec
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jne
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
mov
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
pop
aad
inc
jne
jmp
mov
xchg
mov
xchg
jmp
aam
sub
add
ror
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
xor
xchg
add
xchg
jmp
or
add
call
mov
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jne
cmp
mov
jne
jmp
cld
dec
push
dec
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
sbb
loope
lea
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
mov
push
ljmp
addr16
pushl
addr16
call
xchg
ror
or
mov
xor
mov
mov
mov
jmp
cmp
call
xchg
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
je
and
mov
sub
nop
ror
xor
mov
or
mov
mov
xchg
incl
mov
dec
addr16
jmp
pop
fcompl
call
mov
mov
push
pop
jmp
call
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
xchg
add
sub
mov
nop
nop
nop
nop
nop
jmp
dec
nop
dec
xchg
mov
inc
sub
mov
movzbl
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
pushl
xor
add
inc
shl
inc
push
xor
shl
inc
and
or
sub
mov
xor
rol
add
shr
ror
dec
test
jne
pop
pop
call
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
add
add
inc
out
cld
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jne
orl
mov
jmp
and
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
add
mov
jmp
out
repnz
mov
dec
lock
mov
ror
xor
mov
or
shl
sub
sub
mov
rep
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
pushl
mov
call
xchg
push
xchg
nop
nop
nop
nop
nop
call
mov
jmp
pop
out
insb
incl
addr16
lea
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
and
inc
mov
mov
call
cld
cmp
addr16
nop
nop
nop
nop
nop
jb
inc
xchg
cmp
xchg
jb
inc
nop
cmp
mov
jae
inc
nop
jmp
or
sub
mov
or
mov
mov
push
pop
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
add
add
xor
add
or
mov
pop
and
or
mov
add
xchg
sub
mov
nop
nop
nop
nop
nop
jmp
and
mov
xor
mov
sub
mov
shr
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
leave
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
lea
jmp
jmp
jmp
jmp
jmp
jmp
jmp
pop
mov
inc
xchg
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
cmp
cmp
add
mov
mov
movzwl
jmp
jmp
jmp
jmp
jmp
jmp
add
xor
xor
mov
and
xchg
cmp
push
pop
jmp
xchg
or
je
or
xor
mov
ror
inc
mov
sub
xchg
mov
xchg
incl
xchg
dec
xchg
jmp
sarl
jne
and
addr16
add
xchg
add
xchg
add
cld
inc
mov
add
add
inc
xchg
jmp
inc
test
sbb
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
decl
leave
xor
push
pop
inc
cld
jmp
jmp
inc
ret
mov
decl
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jne
add
cld
cmpl
nop
jmp
xor
pop
sub
add
and
sub
or
mov
sub
rol
dec
or
mov
mov
xchg
incl
cld
incl
xchg
mov
xchg
xor
push
pop
cmpl
cld
je
jmp
icebp
test
jne
call
xchg
mov
xchg
mov
nop
jmp
sahf
sub
sub
xor
mov
and
pop
sub
mov
shr
pop
dec
mov
ror
sub
mov
xor
add
and
xor
pop
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
add
je
or
shr
add
xor
push
xor
xor
inc
shl
or
and
add
add
shl
dec
test
jne
pop
lea
call
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
out
loop
decl
nop
nop
test
jmp
jmp
jmp
jmp
jmp
jmp
jne
nop
nop
nop
nop
nop
or
xchg
push
xchg
sub
mov
or
dec
mov
call
xchg
push
xchg
mov
xchg
call
xchg
mov
cld
nop
nop
nop
nop
nop
and
mov
nop
nop
nop
nop
nop
shl
mov
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
je
shl
or
inc
xor
mov
nop
nop
nop
nop
nop
add
push
pop
jmp
or
or
xor
sub
add
mov
add
mov
push
cld
call
mov
nop
nop
nop
nop
nop
cmp
nop
mov
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
nop
nop
nop
nop
ror
and
ror
sub
mov
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
add
add
shr
mov
pushl
and
shl
shr
shl
pop
add
inc
add
mov
add
xchg
add
addr16
jmp
nop
nop
nop
nop
nop
jns
nop
nop
nop
nop
nop
movzwl
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
nop
nop
nop
nop
nop
jmp
mov
mov
add
addr16
add
xchg
push
xchg
pushl
xchg
call
addr16
mov
xchg
nop
nop
nop
nop
nop
add
push
pop
add
mov
inc
mov
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
nop
nop
nop
nop
jne
add
xchg
cmpl
cld
jne
call
mov
mov
xchg
nop
nop
nop
nop
nop
shl
ror
and
mov
pushl
and
pop
nop
nop
nop
nop
nop
and
and
mov
sub
pop
inc
and
sub
shr
pop
shr
sub
xor
dec
or
pop
mov
addr16
cmp
xchg
jne
nop
nop
nop
nop
nop
and
and
add
or
and
add
add
xchg
mov
nop
pushl
and
or
xor
ror
or
pop
add
cld
leave
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
lock
jo
push
cmpb
xor
jp
xorl
mov
cvtps2pi
outsb
jbe
pop
sbb
rorb
ficomps
pushf
push
cltd
lds
push
clc
push
mov
rorb
mov
dec
movsb
cmp
sbb
xor
mov
sub
fiadds
mull
sbb
inc
push
cmc
xchg
xchg
sub
inc
mov
imul
ljmp
scas
sub
fimuls
dec
or
fs
xchg
into
mov
dec
pop
mov
repnz
xchg
andb
inc
rorb
push
and
cmp
dec
shl
push
ljmp
testb
pop
sbb
stos
or
xchg
jns
sarl
and
xchg
insb
xchg
int
pop
add
add
mov
and
pop
ljmp
fistps
add
adc
popf
out
sub
sub
in
aaa
xor
fucom
gs
push
mov
pop
jb
xchg
inc
mov
mov
push
mov
push
dec
out
and
test
mov
loope
call
mov
jae
sbb
sub
dec
pop
push
jge
sub
jecxz
pop
pop
pop
frstor
iret
push
js
pop
cs
and
xorl
aaa
shl
fcoml
fbstp
stos
jno
lret
stc
mov
jo
add
test
sti
push
stos
out
cld
jno
push
in
cltd
scas
popf
rcrl
leave
xor
jae
and
fmul
jb
ljmp
cmp
xchg
repz
fsubl
xchg
aam
cmp
lret
add
pusha
jmp
lret
and
xlat
xchg
mov
xlat
inc
scas
push
inc
sahf
pop
adc
and
lahf
sub
iret
daa
jns
test
sbb
fiaddl
xor
xor
jb
nop
or
aas
dec
nop
push
psllw
push
xor
sbb
std
ds
in
aad
adc
scas
mov
xchg
push
out
mov
add
xor
out
add
pop
mov
pop
xor
fbstp
aam
insb
wbinvd
cmpsl
sub
adc
xchg
lret
mov
pop
mov
loopne
jo
enter
sub
sqrtps
out
add
pop
movsb
aad
jmp
jbe
fcoml
daa
pop
cmpsl
inc
adc
in
cwtl
inc
cmc
int3
inc
mov
jno
dec
into
imul
fldl
fistpll
mov
pop
loopne
clc
xchg
pushf
jp
idivb
cmp
rcr
testl
mov
mov
adc
push
sti
mov
xchg
subl
sbb
mov
shrl
jbe
adc
lcall
and
pop
mov
cmp
jne
adc
fmuls
or
repnz
mov
adc
mov
clc
jecxz
cmpsl
clc
mov
mov
jb
repnz
adc
fdivrl
pop
xor
push
pop
vmptrst
ja
push
mov
fs
or
pop
jbe
xchg
jno
pop
xor
inc
jge
gs
dec
pushf
aaa
mov
scas
cmc
mov
xchg
call
or
add
lcall
adc
mov
xchg
testb
add
inc
pop
cmc
jbe
inc
pop
mov
mov
add
out
icebp
sub
push
mov
xchg
mov
mov
add
sti
xchg
pop
and
push
push
sbb
andl
fnsave
add
xor
cld
cmpsb
push
pop
adc
into
fisttpll
fdivrs
and
or
pop
leave
imul
dec
aas
xor
pushf
shr
scas
sub
xor
in
xor
dec
test
sub
push
and
pop
cmp
xchg
mov
push
ret
aas
mov
cmp
adc
dec
sahf
cld
dec
shrb
dec
scas
sahf
push
xor
and
insl
sub
movups
sbb
xor
call
xchg
add
jae
jno
into
push
stc
js
ret
hlt
xchg
shl
jge
jbe
push
xchg
sbb
ljmp
xlat
call
push
cmp
testl
stc
jmp
xor
imul
rorb
mov
mov
es
jge
push
xor
jecxz
mov
scas
push
inc
dec
mov
jp
sub
fidivrl
imul
add
jo
inc
icebp
and
sub
aam
outsl
jae
mov
jb
sub
js
or
ret
jo
packsswb
add
jle
addr16
das
jb
addr16
sbb
repz
scas
xchg
push
into
addr16
inc
jge
add
lods
rcrb
pushl
mov
dec
add
stos
pushf
and
int3
sbb
testb
bound
loope
xchg
cmpsb
xlat
mov
addl
cmc
daa
jle
int
cs
leave
mov
mov
mov
das
int3
sbb
test
push
mov
in
call
shll
and
popa
cmp
xchg
push
ss
pmaddwd
test
arpl
cmp
int
loopne
lret
push
inc
popf
mov
pop
mov
inc
test
popa
pop
je
xor
sbb
add
sahf
lcall
and
sbb
es
and
sbb
pop
or
lock
sbb
std
fnstcw
loopne
cmp
adc
and
lods
int
push
iret
lds
push
das
pop
cmc
mov
popf
jmp
or
push
jmp
jo
cmp
test
jecxz
or
jb
cmpsb
das
sti
jmp
mov
add
lock
repnz
lods
xchg
mov
jno
xor
push
jb
jns
test
ljmp
dec
test
jl
push
sub
mov
lods
fsubrl
pop
sub
xlat
std
movsl
addr16
lahf
fstl
fwait
mov
mov
add
pop
mov
add
sbb
push
mov
xchg
dec
mov
xchg
fldenv
aaa
imul
cwtl
cmpl
test
jae
ja
ja
push
mov
hlt
js
fstl
adc
pop
jne
fbld
inc
js
cli
cwtl
in
xor
jnp
jle
popa
jno
adc
fidivs
inc
in
scas
das
xchg
mov
popf
aam
cmp
mov
jg
sahf
xchg
out
pop
cmc
and
sub
push
jp
pusha
add
jmp
push
xor
mov
bound
shll
push
dec
cld
mov
dec
lea
mov
dec
sahf
ja
popa
jns
dec
jbe
and
pop
test
in
ljmp
shl
pop
aaa
mov
xor
jnp
hlt
jle
or
add
movsl
aas
mov
adc
lahf
cmp
mov
fwait
das
or
dec
pop
addr16
roll
jge
out
and
jae
jb
dec
out
push
mov
enter
sub
int
mov
rcll
dec
jmp
scas
mov
popa
dec
inc
adc
jge
std
arpl
xor
sbb
insb
movsl
add
push
mov
les
jmp
or
lea
adc
jo
out
pop
fidivl
out
das
or
adc
or
push
stos
xchg
sbb
or
sbb
pop
inc
fnstcw
jae
mov
roll
in
gs
addr16
lret
push
push
cmp
repnz
nop
xchg
inc
inc
inc
or
lds
out
gs
push
sbb
and
bound
call
adc
xlat
push
push
fscale
aam
push
xchg
scas
add
jae
cmpsb
sub
jmp
mov
leave
lea
repz
loope
mov
mov
xchg
push
scas
call
adc
push
arpl
xor
jbe
aas
cmpl
mov
clc
leave
cmp
and
pop
cmpsb
mov
adc
test
es
dec
insl
push
ds
loopne
daa
push
iret
mov
add
cs
iret
pop
movsb
add
mov
mov
mov
imul
cmp
mov
push
adc
sub
xchg
jno
inc
ljmp
pop
mov
sti
cmp
jmp
mov
sahf
test
stos
ljmp
call
lods
xor
jns
sub
js
test
sti
sub
xor
ljmp
andb
cmp
or
loopne
gs
and
cltd
cltd
lret
push
loope
cld
ljmp
stos
dec
mov
rcll
and
lock
mov
aad
push
sbb
add
insb
mov
sub
lret
lret
mov
movsb
mov
in
xchg
lds
sbb
enter
xchg
pop
xchg
sahf
adc
pushf
cmp
bound
cmpb
aam
push
in
cmpsl
fstl
imul
int
push
sbb
lods
dec
and
ficomps
pushf
cld
sub
jae
jo
notb
mov
sub
icebp
or
loop
dec
mov
fildl
adc
jnp
pop
cmp
pop
push
in
xorl
movsl
insl
mov
ret
test
adc
pop
add
cmpsb
out
mov
das
orb
cmp
pop
push
nop
arpl
fcoms
popa
cmp
xor
sbb
jmp
in
adc
leave
add
aas
dec
and
in
addr16
mov
lods
xlat
ds
aas
inc
and
sti
mov
movsb
mov
in
sbb
out
movsl
sub
mov
inc
gs
cmp
out
add
loop
or
mov
subb
jp
mov
arpl
dec
rcrl
shlb
mov
mov
jg
sbb
pop
stos
data16
or
scas
cli
cmpsb
les
es
push
xor
fwait
pop
insb
sub
push
pop
out
xlat
lods
pusha
push
fs
mov
and
jnp
mov
gs
mov
sub
dec
movsl
push
add
loope
dec
shlb
mov
and
insb
stos
jae
push
mov
outsb
mov
sub
dec
pop
xlat
jb
ret
inc
inc
outsb
int
add
dec
jecxz
mov
fnstenv
cmp
stos
xchg
sbb
gs
outsb
aam
das
pusha
fmuls
leave
pop
insl
and
ljmp
mov
pop
add
and
ss
and
scas
jmp
and
bound
push
out
imul
xchg
adc
push
xchg
add
pop
or
out
mov
ret
repz
mov
mov
rolb
mov
outsl
imul
inc
jmp
imul
inc
insb
je
aas
imul
cmc
sub
xor
xchg
jbe
inc
stos
test
push
sbb
mov
and
mov
and
in
es
dec
jae
pop
jne
adc
cmp
fcmovbe
lds
movsb
ret
ljmp
fnstsw
pop
out
add
inc
sahf
jle
dec
mov
push
xor
xor
test
stc
loopne,pn
dec
addr16
scas
hlt
cmp
leave
inc
fisttps
leave
xorl
loopne
outsb
mov
push
dec
in
ds
inc
clc
mov
adc
fistpl
xchg
fistpll
aaa
sarl
ret
pop
or
pop
inc
add
mov
lds
jnp
jg
or
xchg
pop
and
adc
inc
push
pop
xchg
call
addl
cltd
dec
mov
pop
rcrl
cld
dec
mov
xchg
jo
hlt
and
dec
ja
ret
call
cmpl
and
pop
mov
mov
inc
mov
dec
add
shlb
rcl
jl
lret
mov
popf
pusha
push
mov
sbb
mov
popf
cmp
decb
and
iret
adc
test
xor
call
ss
imul
push
dec
xchg
sbb
cmp
push
notb
xor
sub
adc
jb
push
sbb
xchg
fucom
pusha
dec
lahf
or
iret
out
pop
pop
das
mov
pop
mov
cmp
aas
lea
and
and
jb
bnd
inc
or
push
lods
mov
cwtl
pop
sub
pop
mov
leave
xor
into
stos
out
ror
int3
xor
daa
push
clc
outsl
cmc
fbstp
aam
jl
clc
stos
pop
je
adc
arpl
dec
push
inc
outsb
lods
lret
and
rcrb
and
lcall
mov
cmp
mov
mov
dec
enter
scas
neg
loopne
adc
add
pop
inc
push
mov
and
mov
ret
or
or
sbb
inc
aas
ljmp
inc
inc
cmp
mov
cmpsl
cmp
shrb
test
lds
inc
sbb
mov
arpl
frstor
pusha
in
sbb
mov
fcoms
mov
repz
mov
or
pushf
test
push
jbe
jns
jo
xor
nop
dec
subps
xor
mov
cltd
test
inc
sub
cmpsb
movsb
push
jne
data16
mov
and
jecxz
loop
pop
in
repz
fldenv
ljmp
inc
fadds
xor
xchg
xchg
mov
pop
or
repnz
pop
insl
sbb
xchg
insl
sbb
and
sbb
jnp
push
mov
inc
mov
call
lock
inc
cmpsb
aas
mov
stc
or
jnp
in
scas
inc
add
rcrl
push
push
lods
xor
pop
cmp
xlat
add
repnz
out
leave
pop
shlb
sub
jne
orb
cwtl
shll
push
int
out
jl
mov
roll
ret
push
lods
mov
pop
mov
adc
aad
jl
insl
pop
pop
pop
and
push
cmp
cmpb
sahf
addr16
jae
xor
aas
scas
mov
imul
push
aad
scas
insl
negl
push
fdivrp
sub
shl
adc
repz
imul
cmp
pop
jmp
std
jge
add
aas
push
cmpsl
pop
pop
cmpsb
fbld
push
or
mov
push
lahf
nop
fcmovnu
in
pop
cltd
and
xor
mov
inc
mov
push
faddl
xor
mov
cmp
add
push
repz
leave
cli
dec
fidivl
xor
lds
xor
jb
add
mov
mov
adc
dec
jnp
shlb
inc
rcl
sbb
cmc
in
popa
popa
out
jle
mov
push
ljmp
push
ret
push
mov
or
aam
lds
pop
jb
and
es
and
repnz
jl
cwtl
scas
in
and
fildll
sti
or
jmp
sub
push
sbb
cmpsb
stc
popf
pop
int3
jo
push
daa
scas
sub
outsl
pushf
cwtl
sub
sbb
adc
aad
ds
popa
pop
xor
iret
mov
lock
push
mov
out
test
mov
or
jnp
inc
mov
testl
jae
test
or
in
rorb
ret
add
test
mov
dec
fwait
lahf
insb
inc
xor
mov
es
and
rol
pop
fldl2t
es
and
pop
mov
nop
and
je
xchg
push
and
loopne
outsb
cmp
sub
cld
sbb
lods
jl
and
or
call
repz
push
push
int
jle
repz
mov
and
mov
stos
ljmp
mov
xchg
add
jg
dec
mov
pop
add
mov
cmpsb
pushf
sub
add
pusha
cmc
sar
nop
ret
mov
fisubrs
cs
sbb
sti
rcll
inc
mov
mov
lods
jl
icebp
jbe
gs
cli
dec
cmp
push
xor
es
into
xor
in
movsb
mov
in
push
lret
inc
add
mov
je
and
pop
push
cmpsl
xor
sbb
test
testb
mov
cwtl
cmc
jge
repz
bound
lahf
jge
inc
mov
lret
pop
cwtl
sarl
jp
xor
test
and
mov
cmc
mov
inc
xchg
dec
fcompl
cld
movhps
aaa
iret
pop
pop
jecxz
test
lock
add
mov
dec
loop
mov
sub
ficompl
loop
mov
aad
or
fwait
sub
push
sbb
arpl
mov
lret
jle
fs
arpl
jae
out
ret
test
xor
push
rol
mov
lret
sub
sub
inc
mov
imul
push
cli
mov
sbb
jg
stos
sub
pop
sbb
jbe
cli
jle
lea
mov
mov
add
fiaddl
push
je
fimuls
mov
inc
push
fildll
fisubs
dec
sub
sub
mov
fldcw
push
sub
lock
jecxz
adc
mulb
inc
inc
movsb
sub
frstor
std
adc
mov
mov
cwtl
out
sub
push
in
fcoml
fmull
jo
dec
pop
adc
icebp
sub
mov
int
mov
into
in
xor
push
jg
fnsave
cli
mov
adcb
mov
jg
xlat
outsl
mov
rcrb
adc
pop
pop
xchg
daa
int
stc
cmp
xchg
sbb
or
dec
in
mov
pop
cmp
clc
scas
loop
cwtl
jnp
dec
jg
push
xor
xchg
test
js
xchg
mov
sbb
dec
sub
pop
dec
push
mov
shll
insl
pop
div
lcall
rclb
iret
xchg
imul
int
mov
dec
cltd
data16
adc
xchg
pop
sub
dec
and
test
sub
sbb
rcll
shl
or
mov
movsb
and
push
test
aaa
out
cmpsl
or
lock
rolb
jl
sub
mov
xchg
lods
fxch
jnp
cld
dec
mov
sbb
dec
divl
lods
mov
rol
cmp
add
adc
and
icebp
dec
cwtl
push
push
mov
and
pop
jg
inc
dec
shl
jo
imul
imul
adc
or
gs
pop
sbb
nop
fdecstp
les
push
pop
testb
add
lods
aam
or
in
shl
lahf
outsb
movsb
mov
push
cs
and
test
xchg
sbb
mov
push
or
inc
sbb
push
das
repnz
rcrb
cwtl
aas
or
and
mov
push
push
inc
xchg
in
rcrl
sbb
dec
dec
cld
inc
fldl
or
xor
or
xchg
les
daa
or
loopne
fwait
sub
mov
cmpsl
xchg
mov
addr16
icebp
jge
loopne
lret
lods
push
or
mov
mov
mov
adc
mov
mov
dec
fmull
push
jne
pushf
sub
imull
icebp
sar
push
sub
dec
outsl
lods
in
fistpll
pop
aad
fstpl
mov
cli
loop
fstl
nop
fnstenv
idiv
repnz
sbb
sbbl
push
arpl
bound
jmp
sarb
push
lahf
cli
push
cmp
insb
fcmovnu
popa
mov
mov
cmp
test
cmc
scas
out
push
sbb
push
cli
sbb
sbb
sbb
das
dec
xchg
cli
test
clc
out
jb
sub
movsl
pop
popa
lcall
sahf
cmp
dec
in
out
mov
pop
mov
mov
nop
leave
and
and
outsl
test
mov
mov
pusha
pop
pop
cmp
int
fld
pop
mov
scas
sbb
dec
mov
jge
mov
jle
out
xchg
and
xor
dec
adc
xchg
or
and
mov
sub
mov
pop
mov
push
sbb
push
pushf
out
rcll
imul
adc
inc
and
notb
and
push
adc
notl
in
xchg
inc
xchg
aas
push
jecxz
push
cmp
add
sub
cmp
ljmp
mov
sbb
mov
cmpsl
mov
or
popf
pop
lcall
pop
lret
xor
pop
cwtl
sub
in
cmp
and
mov
ljmp
pop
sbb
in
ja
xor
movsb
nop
add
pop
jl
es
data16
add
and
loop
mov
lcall
test
pop
mov
gs
je
pop
sbb
pop
incl
add
sbb
js
mov
lock
jg
fs
push
and
iret
movsl
ds
loope,pn
and
xchg
lds
out
sub
sub
dec
or
lea
repnz
add
rcrl
xlat
dec
stos
cmc
and
xor
dec
loopne
gs
cmp
pop
xchg
imul
iret
stc
in
iret
dec
icebp
cmpsb
xlat
lahf
push
es
pusha
es
cld
jecxz
test
or
push
leave
iret
dec
bswap
fists
cmp
jmp
cli
call
dec
xchg
xchg
scas
ds
repz
mov
jae
addr16
mov
mov
insb
shrw
outsl
stc
mov
scas
or
xlat
inc
cmp
mov
insb
or
iret
out
add
inc
daa
push
xor
mov
add
repnz
or
sbb
push
lods
insl
fwait
clc
leave
sbb
loopne
scas
sbb
inc
pop
dec
lcall
aaa
sbb
mov
add
out
or
inc
fndisi(8087
cltd
xlat
mov
push
decl
sbb
push
mov
subl
mov
pusha
out
push
sbb
push
sbb
cmp
loopne
add
imul
lds
popf
mulb
pop
out
int3
add
negb
lea
jge
or
fdivrs
cs
test
movsb
lea
add
mov
jno
add
enter
push
inc
mov
call
add
jne
cs
rcrl
pop
cmp
mov
xorb
sub
pop
cmpsl
mov
and
dec
mov
popa
fcom
stos
rorb
into
icebp
movsb
cld
cmp
dec
xor
mov
jnp
aad
cwtl
pop
loop
sar
orl
fstpt
outsb
hlt
scas
mov
out
mov
adc
cmp
pusha
inc
add
roll
adc
push
dec
sub
jne
jle
xorl
mov
jb
leave
repz
les
lea
insl
mov
push
stc
loop
call
adc
jae
add
pop
movsb
ficoms
push
ds
dec
sbb
ja
je
xor
cmp
sub
fwait
orb
les
dec
push
push
jns
dec
jecxz
jl
sub
or
imul
and
fidivl
flds
push
adc
cmp
jg
jg
incl
inc
mov
stos
lret
jb
pop
pop
test
and
in
mov
sub
movsl
xchg
ret
inc
inc
test
shr
push
xor
test
or
aam
dec
daa
or
xor
push
clc
lahf
in
rcll
adc
in
adc
dec
shrl
divb
mov
pop
sarb
repz
push
inc
xchg
mov
sbb
in
arpl
out
insb
jg
out
xchg
dec
mov
push
mov
jecxz
mov
fwait
nop
xor
and
test
sbb
shrl
pop
cmp
sub
add
mov
and
sub
jns
add
mov
orb
subb
pop
div
fdiv
sbb
push
cld
mov
sub
inc
inc
das
sub
mov
popa
or
pop
inc
lret
sahf
inc
add
add
dec
loop
xchg
adc
rcl
mov
test
leave
pop
sub
xchg
imul
fcomi
ja
inc
outsl
xchg
bound
push
push
in
sbb
dec
mov
incb
add
pusha
out
xor
pop
out
sub
mov
jb,pt
mov
in
test
aam
mov
pushf
lock
ss
lcall
stos
add
andb
data16
out
dec
call
mov
lahf
xchg
sbb
icebp
cld
mov
mov
nop
xlat
or
cmp
movsl
aad
pusha
add
pop
lock
add
mov
jg
popf
pop
ljmp
cmp
loopne
cmp
test
lret
sar
jbe
mov
dec
mov
ficompl
adc
adc
or
data16
testb
push
push
adc
sbb
test
ror
lea
fstl
aas
mov
pop
stos
lds
pop
mov
mov
int
pop
push
and
ja
add
lods
and
sbb
cmp
xchg
insb
cmp
les
jmp
dec
out
shll
mov
test
push
outsl
xchg
and
sub
push
nop
loopne
adc
dec
xor
jp
add
imul
sbb
jp
test
out
dec
pushf
shll
pushf
dec
push
inc
or
xchg
testl
mov
and
or
mov
aad
out
xchg
mov
add
bound
test
bound
repnz
mov
sahf
cwtl
lar
shlb
sub
out
and
xchg
test
inc
sbb
pop
dec
pop
pop
adc
repz
jne
jecxz
jns
aad
idiv
aaa
push
xor
out
in
and
jecxz
in
imul
jnp
ja
sarl
insb
into
inc
orl
xchg
lea
pop
mov
inc
fdivs
mov
mov
test
sbb
stos
test
xor
clc
cmp
mov
jne
int
or
push
mov
sbb
mov
sub
gs
add
sti
icebp
dec
fdivrl
in
arpl
cli
aad
imul
push
subb
negl
test
std
add
push
data16
enter
inc
add
lds
cld
test
push
mov
cwtl
jle
fsubrl
mov
xchg
dec
xor
fwait
dec
inc
mov
adc
adc
and
cltd
sbb
lea
jns
sbbb
lret
mov
dec
call
lock
fstpt
notb
popa
rol
les
and
lods
xchg
inc
sub
pusha
mov
ds
ret
popa
cmpsb
mov
fstpl
and
xor
xchg
mov
adc
jo
ret
nop
pop
and
push
xlat
jmp
mov
push
aam
xor
mov
sub
or
imul
rolb
mov
push
adc
pop
rol
leave
sub
mov
dec
in
dec
hlt
ret
stc
pop
jecxz
jmp
out
cmpsb
pushf
loope
movsl
push
push
push
cli
push
cmpsl
adc
negl
sub
arpl
or
popa
cs
jnp
daa
stos
jae
cmp
xchg
mov
lahf
enter
lods
sbb
lret
sbb
mov
xchg
data16
fs
add
mov
loop
lret
xchg
mov
in
adc
leave
cmpb
and
in
cwtl
push
dec
xchg
stc
xchg
pop
sbb
popf
sub
mov
stos
adc
pop
repnz
xchg
mov
nop
or
push
or
adc
jno
imul
call
scas
es
xchg
dec
sub
sbb
jmp
or
xchg
inc
fmulp
inc
mov
adc
stc
mov
mov
mov
mov
cmp
push
pop
les
mov
stos
clc
xchg
jmp
mov
push
and
inc
cwtl
pop
test
fidivl
lahf
ja,pt
pop
dec
lods
fcmovne
dec
jb
push
cld
je
imul
dec
cmp
es
jo
pop
mov
fisttpll
cmp
mov
iret
jmp
adc
mov
std
aad
xor
bound
mov
and
pop
clc
pop
push
in
repz
jne
sub
test
les
sahf
xchg
xchg
pop
je
and
out
xor
es
aas
sub
in
bound
sub
je
stc
mov
pop
push
mov
test
or
dec
dec
pop
fidivrs
adc
icebp
add
mov
push
xor
aaa
cmp
push
dec
cmp
aas
out
repz
cmp
cmpsl
pop
pop
in
ret
xchg
sbb
roll
xor
or
xor
mov
mov
hlt
movl
mov
mov
ds
xor
ljmp
in
pop
mov
mov
sbb
jg
mov
rorb
imul
shrl
dec
mov
ss
mov
pop
jae
pushf
fisubrl
imul
mov
jmp
in
mov
sbb
inc
cmp
push
push
sti
aas
xor
stc
pop
sahf
fldenv
push
lds
enter
fcmovbe
pushl
test
inc
cmp
mov
fiaddl
inc
ret
je
sti
es
pop
aad
rorl
sar
pop
jno
add
add
ljmp
jb
shlb
inc
fcoml
iret
outsb
pop
int
xorl
fisubrl
push
or
mov
and
or
mov
icebp
jno
lock
gs
lods
add
pop
inc
jmp
cltd
xchg
arpl
mov
sti
dec
stos
or
iret
shr
jmp
adc
xchg
ja
or
rclb
push
jmp
inc
in
sub
jmp
xchg
push
lock
stos
and
fdiv
lcall
mov
push
fldlg2
lret
sbb
cmpsb
je
leave
jb
outsl
aas
push
aad
xlat
sub
mov
pushf
mov
mov
push
mov
scas
call
leave
push
mov
loopne
pop
xchg
pop
in
xchg
cmp
js
ror
mov
ljmp
mov
insl
aad
mov
pushf
fbstp
rcrl
jg
hlt
add
xor
pop
rcr
push
xor
cmpsb
dec
sarb
fistpll
mov
mov
dec
cmp
pop
loop
jl
jmp
sahf
ds
push
imul
stos
iret
loope
adc
lret
sbb
ret
xchg
enter
jg
mov
je
shl
adc
test
aam
xor
pop
xchg
aas
rol
dec
mov
dec
cli
imul
imul
mov
xor
jp
mov
rorl
inc
push
es
ljmp
cli
or
aaa
jl
mov
push
jge
test
ds
incb
ret
push
fmuls
int3
xlat
test
in
and
dec
mov
xor
mov
imul
cmp
stos
sbb
mov
dec
test
adcb
sub
sahf
dec
mov
xor
std
sbb
shll
push
pop
xchg
mov
loope
adc
rcll
dec
cs
cli
mov
mov
mov
icebp
dec
mov
dec
xor
aad
jnp
inc
notl
dec
mov
enter
mov
add
mov
adc
lods
jl
jecxz
xor
sub
popw
xor
mov
and
pop
or
push
push
dec
jp
imul
pop
ja
int
xor
inc
push
mov
fs
call
shlb
jg
cli
cld
inc
adc
fiadds
out
jb
test
insb
jmp
cmpsb
call
mov
and
mov
xor
push
jg
xchg
push
scas
call
sub
and
jg
out
repz
adc
mov
xlat
popa
mov
xchg
xchg
clc
das
outsl
push
sub
xchg
shll
mov
popa
jae
xor
jae
and
or
out
inc
in
add
cmp
mov
and
rcrl
mov
call
les
in
mov
inc
std
adc
mov
adc
jge
mull
fidivrl
stos
insl
fisubl
adc
adc
pop
ds
ret
add
push
movsb
stos
out
pop
push
jne
aad
das
adc
inc
jae
out
pop
les
xor
aaa
notl
jge
sbb
in
sub
fucomp
mov
add
rcll
arpl
and
out
or
icebp
pop
cmp
fs
inc
in
out
enter
shlb
lahf
adc
sub
adc
push
and
cli
jbe
mov
je
push
pop
jae
mov
clc
and
jle
sarl
jbe
cmpsb
cli
rorb
mov
adc
add
andl
jb
fcoml
or
sub
arpl
cli
pop
jb
cmp
push
cmp
dec
cmp
sub
mov
call
jns
out
push
push
push
rcll
lds
sub
lahf
add
sahf
mov
push
xchg
xlat
jae
mov
sbb
lret
jg
jno
mov
ss
clc
dec
mov
xchg
shl
insb
or
cmp
popa
aad
mov
imul
cmp
testl
push
std
int
stos
sti
push
jmp
inc
jmp
mov
mov
bound
and
outsb
test
iret
pop
rol
insb
xor
adc
movsb
sbb
out
ret
test
xor
dec
das
mov
fcmovbe
jnp
mov
mov
test
and
xbegin
sub
jl
call
jle
cmpb
push
add
mov
jb
or
xchg
lret
mov
lds
sti
jno
or
loop
push
mov
shrl
in
and
fdivl
push
xor
negb
stos
adc
insl
cmp
cli
sbb
shlb
repnz
inc
lea
or
js
mov
add
jg
scas
xchg
xor
xor
lcall
or
lcall
dec
loope
jno
xorb
repz
andb
movsl
xchg
or
add
jb
adc
sbb
stos
pushf
or
popa
mov
popa
scas
insb
mov
sub
cmp
mov
pop
insl
pop
iret
mov
cltd
jnp
jo
icebp
jl
mov
sarl
sub
mov
and
adc
lret
push
pop
cmp
jl
mov
in
push
adc
inc
stc
aam
xchg
jbe
mov
xchg
jg
push
popf
add
pop
clc
cmp
repnz
fdivrl
cld
adc
add
adc
subl
imul
jge
in
loope
loope
fmull
aaa
and
inc
inc
pop
seto
push
jo
push
fiadds
jmp
sbb
or
xchg
push
pop
adc
cld
aaa
fsubrp
mov
mov
jns
jb
filds
sbb
sahf
sti
sub
fistps
sti
jmp
pop
rcrb
mov
or
mov
mov
jae
mov
dec
push
iret
dec
mov
pushaw
inc
cmp
scas
mov
jge
pop
mov
mov
mov
movsl
aam
dec
cmp
into
in
add
or
xchg
ds
in
mov
cmpsb
push
imul
stc
push
cld
cmp
mov
adc
dec
into
popf
shlb
or
xchg
xor
imul
dec
shlb
lret
inc
std
fwait
lds
push
and
mov
push
dec
in
dec
pop
mov
xchg
mov
jb
scas
lahf
daa
data16
inc
add
xchg
cld
sub
xchg
in
fwait
push
pop
jne
cwtl
jp
je
adc
and
mov
push
fdivrs
ss
icebp
push
xchg
jecxz
loop,pt
rclb
add
mov
sar
cvtps2pi
and
xor
mov
scas
std
loope
pop
pop
xchg
adc
or
mov
pop
mov
or
mull
sub
ret
jns
jns
in
inc
popa
mov
inc
and
adc
jns
inc
in
dec
jno
stos
int
dec
and
insl
inc
ja
pop
adc
dec
test
cld
sbb
hlt
jae
mov
xchg
mov
mov
shlb
xchg
sbb
pop
dec
cli
push
cmpsl
cmpsb
lret
jns
outsl
cmp
cmp
and
pop
nop
icebp
xor
and
xchg
and
pop
hlt
clc
xchg
gs
xchg
add
in
sub
sbb
pop
add
addr16
and
sbb
push
aaa
cwtl
loopne
movsl
mov
loope,pt
push
jne
call
cld
xor
mov
ja
or
jecxz
lods
xor
push
aam
stos
pop
xor
divb
jo
and
sub
mov
mov
jb
mov
ret
in
ss
out
lcall
mov
subl
push
xor
cmp
inc
cmpsb
std
sbb
sbb
dec
sbb
fs
adc
mov
stc
inc
mov
roll
mov
sarb
scas
sbbb
pop
sub
inc
insb
cmp
jae
add
push
cmpsl
mov
pop
jne
dec
inc
ss
out
lret
fstp
and
push
push
and
mov
jno
mov
dec
mov
fst
sub
lock
std
es
fs
xor
sbb
xor
or
mov
push
andl
mov
roll
sbb
adc
jmp
and
push
movsw
inc
dec
pop
mov
dec
mov
insl
test
push
pop
sbb
jne
mov
push
daa
loop
aad
stos
pop
push
jns
mov
sub
ja
push
lret
bound
cmp
pop
cmp
int3
mov
mov
neg
hlt
cmp
xor
aas
dec
insl
and
adc
cmp
sub
xchg
dec
addr16
std
loope
mov
jns
enter
lods
and
stc
cltd
adc
inc
test
ja
sub
pop
push
sbb
add
je
hlt
aas
fwait
push
insb
mov
repnz
push
dec
dec
mov
jmp
rcl
jns
inc
mov
adc
inc
mov
push
jns
out
insl
jnp
stos
adc
or
mov
mov
in
in
push
aad
cmpsl
add
or
std
sub
pop
mov
pop
and
mov
cmp
cltd
scas
cmp
in
and
sbb
into
das
hlt
arpl
mov
aas
scas
bound
inc
add
lds
outsl
mov
les
jmp
dec
cmp
cmp
dec
testb
mov
or
mov
push
fiadds
cmp
loope
stc
testb
aaa
mov
fimull
jp
xchg
xchg
arpl
and
daa
repnz
add
mov
push
fs
pop
push
les
xchg
pop
pushf
subb
adc
lret
divl
pop
push
adc
in
mov
std
mov
xor
jae
dec
sbb
adc
test
mov
mov
add
cmpsl
cli
xchg
xchg
push
xchg
push
add
sub
in
sbb
push
mov
cld
ljmp
pop
dec
lods
in
shl
aas
fisttpl
je
cwtl
xchg
mov
sub
jnp
sbb
mov
cmp
pop
bt
adc
fsts
aas
push
fisubrl
mov
lret
push
stos
or
sbb
push
or
dec
cmp
enter
out
cmp
dec
fscale
push
mov
fimuls
adc
or
icebp
fildll
mov
shlb
xchg
and
popa
xor
adc
jp
sbb
pop
cmpsb
stos
push
test
sbb
dec
cmp
sub
mov
stos
addl
cli
mov
cmpsb
jae
and
imul
std
daa
cltd
test
mov
add
mov
std
or
out
mov
jp
cmc
xchg
mov
outsl
sub
rolb
loopne
add
shl
sub
push
mov
lret
xorb
xor
rol
in
sti
dec
test
push
dec
cmpsl
adc
cld
pushf
jb
inc
stos
gs
mov
lods
push
les
lods
sarl
dec
sub
repz
je
pop
sbb
xchg
sbb
sub
xchg
mov
inc
sbb
and
inc
fildl
jae
aas
pop
and
inc
outsb
cld
mov
jmp
out
sub
pop
fisttpll
fmull
testl
xchg
adc
sbb
addl
mov
cmp
sbb
mov
adc
jnp
push
mov
mov
lds
xor
add
push
xor
test
insb
sub
leave
fidivrs
sbb
cmp
and
lret
nop
ret
push
jae
stos
lcall
fcoml
sarb
xor
out
subb
call
mov
outsb
inc
sbb
dec
mov
movaps
push
mov
pop
pop
inc
movsl
lds
imul
out
dec
mov
subl
push
pop
push
inc
pop
ret
and
int3
das
icebp
leave
fndisi(8087
pop
in
jb
jo
sub
shl
xor
test
push
cli
fwait
pushf
aam
aad
xor
iret
shl
jl
ficoms
push
loopne
xchg
imul
rol
shlb
dec
xchg
mov
sbb
ja
divl
mov
sarb
dec
push
jmp
or
pop
imull
movsb
mov
out
pop
dec
and
mov
xchg
push
fidivrl
mov
push
push
mov
mov
test
xchg
mov
and
ss
or
mov
xchg
movsb
das
xchg
mov
fwait
sbb
dec
and
mov
lock
jae
aam
das
loope
xor
mov
cmp
inc
push
mov
xchg
in
scas
and
mov
adc
test
mov
or
sub
in
mov
dec
mov
pop
stos
fwait
mov
pusha
mov
dec
adc
testb
jmp
jmp
xor
mov
or
pop
and
jle
pop
fwait
pop
sarl
mov
mov
inc
stos
sub
xchg
xor
cmp
in
and
test
add
sbb
cmp
push
out
adc
bound
push
in
adc
xchg
sbb
arpl
test
dec
idiv
ret
jmp
cmp
fsubrl
imul
or
and
xchg
mov
loopne
test
xor
scas
adc
outsb
mov
xchg
cmp
flds
mov
sbb
mov
mov
mov
sbb
out
adc
in
fsubl
stos
pop
loopne
stc
aaa
inc
push
mov
sbb
addr16
lock
popf
ljmp
pop
cld
mov
lods
cld
or
int3
lcall
ljmp
jns
mov
cli
shr
xchg
push
cmc
xchg
nop
stos
popf
ja
in
cmp
daa
lock
popf
clc
adc
mov
stos
mul
pop
ss
xor
lock
or
sbb
ss
inc
fcoml
xchg
fdivs
sbb
cmpsb
sub
xor
push
repz
je
popf
test
mov
add
xlat
popf
adc
sub
int3
push
loopne
mov
sub
pushf
shrl
clc
stos
in
dec
fnstenv
mov
adc
call
adc
not
and
inc
std
out
dec
andb
jle
negl
pop
inc
sub
adc
xor
fisubrl
outsb
scas
ficompl
or
mov
pushf
cltd
lods
pop
outsb
aad
test
int3
aad
cmp
lods
fdivs
imul
sub
sbb
add
sti
scas
mov
inc
mov
lahf
rcr
sub
mov
and
mov
test
xor
test
rclb
adc
xor
rolb
cmp
aas
xor
sbb
sub
scas
mov
stos
cs
or
xlat
ret
dec
scas
jbe
mov
aaa
xor
fcomps
cmp
daa
pop
adc
push
dec
jbe
mov
outsl
repnz
push
ror
mov
mov
mov
roll
mov
test
lret
aas
mov
mov
add
mov
ds
ds
adcb
stos
dec
add
ljmp
je
sbb
fdivrp
mov
mov
bound
aad
pusha
and
lret
xlat
rcll
mov
ljmp
pop
dec
insl
ret
ljmp
cmpsb
fwait
push
sbbl
inc
mov
fnstcw
mov
jb
js
sub
insb
hlt
jge
inc
inc
loopne
push
pop
adc
ror
add
leave
or
xor
fs
and
sub
iret
lret
lahf
or
sub
movl
je
jno
dec
push
sub
adc
fcmove
push
pop
test
jmp
lahf
mov
ja
fnstsw
cmc
push
and
loop
push
rorl
ljmp
outsl
arpl
cmp
dec
adc
and
jbe
add
iret
cmp
cmp
stos
push
in
pop
mov
jle
je
push
dec
fwait
xchg
ficoms
movl
jecxz
aam
mov
mov
cmp
dec
stos
xchg
sub
popa
adc
jae
sbb
pop
vmovups
add
dec
repnz
dec
test
sbb
cs
adc
mov
js
sbb
push
js
dec
adc
into
es
imul
xchg
mov
or
rep
adc
adc
mov
loop
push
scas
pop
dec
addb
test
jb
aam
xor
aas
pushf
mov
mov
sti
inc
and
ljmp
fadds
or
xor
popf
stc
call
push
das
addr16
pop
lcall
xor
mov
outsl
icebp
idivl
std
mov
dec
mov
lea
movsl
add
mov
and
jb
inc
mov
xlat
in
sbb
cld
lcall
adc
dec
movsl
popw
int3
dec
rorl
push
pop
adc
cltd
cmp
sbb
sbb
ljmp
inc
ficompl
rolb
scas
jo
test
mov
mov
repnz
pop
subl
mov
pop
cwtl
int
lock
rcrl
cmp
enter
or
stos
shll
rolb
sub
or
leave
loop
insb
fs
pop
cmp
ljmp
inc
mov
or
insl
pop
jns
es
aas
pop
sbb
xchg
xor
mov
inc
sbb
mov
inc
and
out
jmp
aas
adc
xchg
fsub
pop
xchg
in
jmp
jo
cli
int
stc
pop
sub
cmpsl
clc
cmp
pop
test
cmp
ja
mov
iret
sub
das
rcr
outsl
mov
push
aad
mov
daa
mov
rorb
stc
les
push
add
and
xor
xchg
pop
cmp
xlat
test
out
mov
xor
mov
fcmovnb
pop
lock
pop
and
cmpsl
inc
add
scas
ret
decb
shl
lcall
bound
mov
arpl
mov
dec
mov
add
data16
inc
jne
dec
cmp
mov
pop
outsl
cli
cmovg
or
lock
dec
mov
jns
pop
pop
add
adc
mov
add
mov
jbe
cmpsl
mov
cltd
sbb
xchg
adc
mov
rcr
inc
xchg
adc
mov
jno
mov
les
es
dec
popa
mov
adc
sub
mov
mov
pop
mov
into
mov
jg
xor
int3
mov
fldt
mov
lods
or
outsb
loop
pop
fwait
cmp
mov
cs
in
jb
push
adc
out
test
push
jg
xorl
sar
in
mov
test
push
lock
push
pop
shlb
je
xor
mov
ja
sub
mov
aam
jns
xchg
pop
sahf
xor
jbe
rcrb
stos
sbb
and
ds
push
in
push
aas
mov
xchg
add
or
jns
push
xor
stos
sbb
jae
fisubl
or
lds
add
add
je
aad
mov
mov
and
loopne
xchg
arpl
pop
mov
sbb
pop
repz
js
adc
mov
add
mov
mov
cli
xchg
cs
jns
cmp
rorb
cld
xchg
xor
icebp
orps
and
scas
and
xchg
lcall
mov
lock
jbe
inc
in
sbb
dec
fbstp
ds
insl
sub
ss
add
pop
mov
jae
mov
mov
mov
subb
ljmp
dec
adc
orl
bound
or
xchg
mov
pop
sub
mov
insl
push
das
xor
movl
jl
rclb
loope
adc
std
outsb
stos
aad
pusha
ffreep
icebp
out
jg
inc
cld
adc
leave
dec
jecxz
inc
or
add
lret
pop
mov
test
mov
sub
mov
clc
cmpsl
das
jae
pop
mov
aas
loopne
sbb
sub
xor
mov
movsl
push
dec
orl
pop
and
test
imull
popa
mov
dec
jns
sti
out
fiadds
pop
sub
lods
mov
test
into
lock
xor
std
push
jns
in
inc
ss
mov
fmull
addr16
add
fimull
addr16
lods
shl
inc
repz
ljmp
xor
pop
fwait
dec
pop
jne
cmp
leave
lock
cmpl
mov
arpl
call
aas
mov
fs
std
push
cwtl
dec
test
out
add
mov
ficoml
cli
cli
out
imul
and
xchg
jae
mov
test
sbbl
rcl
cmc
repnz
push
imul
dec
inc
imul
gs
lods
in
mov
sub
cmp
mov
and
lea
pop
shrb
cmc
cli
stos
or
mov
mov
cmp
dec
push
es
jo
and
jo
jbe
mov
mov
insl
jno
notb
adc
ret
jno
mull
and
imul
jo
shrb
xor
cmpsl
push
adc
pop
mov
div
mov
adc
fisttps
inc
sub
dec
sbb
cmp
imul
cmp
mov
mov
rcl
jb
and
cltd
xor
test
in
adc
mov
pop
repz
jb
enter
cmp
push
loopne
cld
mov
pop
dec
add
xchg
enter
xchg
lea
cmp
nop
addr16
sub
push
or
and
lcall
jnp
daa
lods
das
inc
xchg
jecxz
imul
jb
xor
xor
push
push
pop
into
hlt
push
out
lock
pop
hlt
test
mov
xchg
pop
jg
scas
insb
mov
cmp
push
mov
push
testb
dec
pop
jmp
aas
arpl
in
push
fs
dec
xchg
pop
push
adc
imul
push
fbld
popa
and
inc
ljmp
stos
iret
outsl
push
int
test
mov
outsl
inc
and
or
inc
imul
loope
stos
inc
mov
inc
jg
or
daa
es
fadds
fnstenv
scas
and
jg
mov
js
jecxz
xchg
lret
lahf
push
scas
outsb
adc
in
fbld
movsl
mov
push
xorl
adc
out
lods
sub
data16
mov
xor
mov
pop
jl
rolb
roll
dec
shlb
cmp
movsb
ds
xor
outsb
das
inc
scas
fstpt
mov
push
imul
repnz
push
rcl
mov
shl
jbe
mov
xor
outsb
test
in
loope
popf
pop
sbb
pop
and
clc
imul
mov
cmc
jl
and
mov
btl
cmp
mov
sbb
fs
cli
xchg
addr16
testb
mov
notl
cmp
in
outsb
and
faddl
and
ja
es
xor
mov
loope
jno
or
cmpb
int3
xor
mov
adc
fildll
jge
fimuls
roll
loop
adc
pop
fs
push
dec
and
inc
fwait
mov
sub
loopne
lock
pop
pop
sub
je
imul
cmp
mov
pop
jns
rorl
sti
sub
cmpsl
mov
dec
mov
call
jge
loop
and
xchg
mov
mov
popa
add
inc
pop
movsl
negb
lods
sahf
jb
adc
mov
cmp
in
pop
int3
sub
cmp
push
adc
adc
lods
call
mov
mov
mov
pusha
je
loopne
imul
aam
popa
pop
push
and
sub
push
aad
insl
jnp
and
cmp
mov
mov
fldl
inc
test
jecxz
jecxz
adc
mov
dec
fists
sub
sbb
push
les
pop
fwait
outsl
gs
xchg
divl
fldl
das
add
cmp
movsl
xchg
std
cli
xchg
dec
outsb
sahf
add
loop
stos
fisubl
fsubl
repnz
jo
repz
loopne
repnz
sub
int3
out
in
jae
mov
lahf
daa
xchg
jne
js
adc
push
jae
xchg
or
xchg
aad
lahf
lcall
sub
ret
add
test
pusha
pusha
pushf
cmp
push
aaa
jae
and
adc
ss
add
or
pusha
fisttps
add
or
xlat
inc
mov
cmp
mov
sbb
push
sub
sbb
pop
sub
sub
aam
pusha
mov
adc
mov
clc
mov
decl
repnz
sub
push
push
inc
add
js
imul
mov
incl
pusha
push
icebp
dec
jns
les
inc
lods
in
or
je
mov
inc
push
jge
adc
imul
movsl
int3
push
or
xchg
in
mov
xchg
das
jo
jnp
scas
sub
fisttps
mov
lret
xlat
jns
sbb
pusha
jle
std
jb
lds
repnz
cld
lahf
xor
insl
sbb
xchg
add
push
scas
cmp
adc
xor
leave
push
inc
mov
pop
cwtl
mov
subb
jne
add
mov
out
jg
sbb
stos
xchg
sbb
arpl
jle
add
pop
ret
jo
pop
clc
jae
fs
leave
pop
filds
lret
scas
out
dec
jp
inc
xchg
pusha
shl
pop
jb
and
cmp
dec
popa
and
mov
fnstenv
fcoml
or
mov
adc
jecxz
test
cmpsl
add
cmpsb
mov
mov
sbb
ds
dec
call
fs
sub
pushf
inc
sbb
mov
dec
inc
divl
sub
imul
movsb
mov
adc
push
jecxz
jb
sbb
mov
fnstcw
cmp
or
jno
push
xchg
into
adc
divb
fs
shrb
add
pop
adc
mov
mov
aad
orb
lret
dec
out
cmpsb
fildl
xor
lock
xchg
inc
lcall
in
cmp
loopne
faddl
dec
data16
pop
cmp
mov
add
push
dec
sarl
push
mov
scas
idivb
jb
cmp
int3
sub
testb
jp
fdivs
or
add
cmp
xchg
dec
xchg
xchg
pop
cmp
ret
xchg
rcr
xchg
neg
dec
dec
pop
sub
mov
ss
dec
jo
imul
mov
mov
push
jge
out
mov
xchg
pop
push
jle
jns
mov
cld
sub
jae
cs
lods
arpl
or
jl
icebp
mov
cmp
push
dec
call
xchg
shrb
adc
nop
cmp
xor
cltd
dec
ds
fildll
hlt
xor
inc
dec
pop
in
xor
fsubp
jle
pop
xchg
sahf
push
dec
movsb
add
mov
jb
bound
movsb
pop
inc
jg
fs
fisubrl
jo
jle
ret
mov
cmp
int3
jmp
and
rorl
or
dec
cmc
ret
roll
daa
aam
mov
rcl
sbb
popa
add
data16
sub
movsl
or
pushf
aas
and
cwtl
mov
neg
mov
cs
test
cs
add
cmpsl
fs
push
mov
repz
fdiv
dec
or
out
addr16
push
into
sbb
push
mov
addl
sub
mov
add
inc
out
push
call
inc
cmpsl
pop
adc
and
dec
gs
int3
adc
pop
rcrl
shrl
and
and
xor
inc
mov
xlat
adcl
ja
fwait
push
icebp
pop
lea
addr16
mov
fldcw
xor
xlat
insb
pop
sbb
mov
cmpsl
popa
dec
fstps
lcall
jp
in
das
or
test
ljmp
sbb
das
outsb
ficoms
fsubs
xchg
sbb
jb
test
sub
cmpsl
stc
out
sahf
gs
bound
adc
das
push
pop
or
push
int3
and
ss
pcmpeqb
out
aad
jb
out
mov
loope
add
push
lods
cli
aad
pop
loope
ds
movsb
mov
insl
aam
lcall
pop
add
cmp
out
mov
push
inc
andb
jp
dec
iret
shr
icebp
xchg
mov
xor
repz
mov
mov
dec
inc
xor
mov
mov
lock
fsubrp
add
data16
aad
fisubrs
sub
push
cli
test
xchg
mov
dec
mov
leave
pop
negl
cmpsl
jp
jp
pop
iret
sub
mov
pop
mov
jo
xchg
negl
sbb
and
imul
and
fadd
lds
mov
iret
or
std
pop
xor
or
inc
sarb
movsl
add
jnp
lods
loope
in
push
pop
mov
pop
sbb
and
mov
xor
les
mov
in
cmp
icebp
mov
adc
lret
lcall
jp
aas
out
insl
or
aam
aad
arpl
leave
in
mov
les
inc
lods
dec
mov
in
es
jae
fwait
mov
adc
pop
insl
cld
dec
lahf
mov
movsb
or
mov
push
clc
scas
cmpsl
das
jb
cmp
xchg
pop
scas
aad
mov
sbb
outsl
inc
xor
ret
aam
pop
iret
mov
fimuls
lahf
cmp
add
sarb
cld
inc
jp
dec
sbb
lret
adc
loop
xchg
push
mov
adc
lcall
popf
mov
out
jle
sbb
call
jns
adc
mov
xor
lret
push
mov
or
outsl
mov
into
push
call
xchg
dec
xor
pop
in
out
dec
movsl
mov
pop
enter
sbb
daa
mov
and
adc
adc
push
and
dec
repnz
xchg
enter
imull
ret
push
out
mov
shrl
mov
sbb
xor
jmp
jg
pushf
dec
cmp
stc
and
rcrb
mov
xchg
movsb
mov
xchg
lret
iret
mov
sub
faddl
jno
je
nop
mov
imul
mov
add
mov
pop
iret
mov
bound
arpl
pop
add
mov
sbb
lods
rcl
cmp
sti
sbb
push
sub
adc
mov
bound
popf
mov
dec
mov
fcompl
int3
enter
popw
mov
xor
aaa
pop
jno
sbb
dec
int3
adc
mov
adc
je
xchg
sbb
mov
sbb
aaa
adc
sahf
mov
add
ss
int3
push
test
and
pop
adc
push
nop
xchg
mov
fnstcw
push
je
mov
cld
mov
lods
ret
mov
repz
sub
sbb
sub
xor
dec
stc
lds
dec
fstps
cmp
inc
je
or
sub
cmc
fsts
sub
xor
cwtl
pop
stc
loop
push
pop
dec
cmp
scas
fisttpll
xor
pushf
ja
adcl
movsb
jo
hlt
repnz
aaa
cmp
push
outsl
jg
xor
sbb
outsl
xchg
shlb
sub
fcomps
mov
into
ret
jae
shll
js
adc
in
decb
xor
in
xor
out
mov
test
sub
jmp
mov
sbb
pand
das
xor
push
dec
iret
js
movsl
mov
and
dec
lret
add
mov
adc
cmp
mov
cwtl
push
push
les
arpl
sbb
push
in
inc
dec
mov
xor
stos
jp
fwait
push
lea
pusha
inc
mov
push
xchg
xor
scas
pop
pop
decb
test
cwtl
xor
scas
test
inc
outsb
pop
inc
dec
scas
mov
mov
mov
std
push
pop
push
sbb
xchg
popa
movsl
adc
add
fstps
jne
push
mov
lret
jecxz
jp
test
gs
stc
insb
test
lahf
nop
movsb
jecxz
pusha
out
faddl
stc
sub
fmul
mov
add
mov
push
mov
pusha
inc
fistpll
mov
push
data16
jne
jmp
scas
cld
std
add
lret
aam
xor
out
xor
stc
pop
std
pop
lret
cld
into
es
arpl
mov
int
scas
inc
in
fdivl
imul
pop
rcrb
testb
and
lret
push
inc
int
mov
ror
adc
dec
mov
les
mov
cmp
std
mov
neg
sbbl
sub
sbb
push
sub
cmpsl
clc
mov
lods
xorb
mov
cmp
pop
enter
sub
icebp
inc
scas
mov
dec
dec
jle
mov
rclb
ljmp
js
repnz
fmuls
fucom
shlb
ljmp
scas
ficoml
in
or
sbb
push
push
iret
mov
mov
mov
shrb
setne
add
insl
jge
repz
xchg
ss
xchg
sbb
jmp
out
lea
outsb
pusha
jb
lods
imul
pop
in
sbb
sarl
mov
mov
popf
adc
rcll
data16
sub
aas
lea
pop
cltd
cmp
and
push
mov
insb
dec
jp
je
and
aam
sbb
call
jmp
mov
mov
lods
adc
mov
test
mov
in
ret
ret
xor
jecxz
inc
daa
out
jnp
arpl
cli
lods
loopne
dec
imul
jl
popa
dec
bound
jbe
addr16
outsl
stc
int3
inc
cltd
out
jns
pop
fsubr
jb
js
xor
clc
mov
mov
adc
dec
and
or
pop
test
ljmp
and
ret
push
fmulp
aad
pop
adc
mov
cmp
cvtpi2ps
in
pop
fldcw
push
addr16
loope
adc
dec
cltd
cltd
cmp
adc
push
or
jae
push
jp
xorb
or
cmp
popa
leave
push
test
test
cld
aaa
dec
jo
sbb
aam
rol
pop
mov
lds
jnp
pusha
cltd
ljmp
mov
mov
test
aaa
pop
popa
orb
cmp
sbb
push
xchg
xor
sarl
pushf
cmp
xor
fs
std
lahf
je
mov
paddb
or
pop
mov
adc
outsb
jns
lea
push
rorb
sbb
testl
dec
fwait
or
mov
out
and
shl
sub
fwait
and
inc
in
adc
xchg
jo
xor
dec
lahf
cmpsl
in
or
aad
test
jae
mov
mov
jae
cld
frstor
push
rcl
mov
rcrl
fnstcw
test
js
and
xor
enter
sub
andl
aas
int
add
mov
or
add
lds
inc
mov
or
lods
cmp
loop
notb
gs
jmp
xchg
xor
mov
and
jo
push
icebp
adc
ret
jno
xchg
pop
sbb
sub
xchg
push
lret
push
pusha
in
mov
cmp
jo
xchg
sti
mov
fadd
mov
sub
mov
sbb
and
dec
xor
inc
pop
lcall
jl
mov
mov
xchg
add
ljmp
jl
sub
sub
or
cmp
inc
sub
adc
cmp
mov
sub
mov
sub
inc
out
daa
sub
movsl
cld
lret
and
dec
imul
mov
mov
sub
jg
repz
popw
stc
in
aam
mov
pop
shlb
jl
out
sub
lret
rolb
inc
pop
test
lcall
xchg
pop
xchg
xchg
outsl
xor
or
xor
xor
inc
je
testl
lds
js
jmp
fldenv
es
mov
lods
loopne
lods
pop
pop
push
inc
pop
fdivrs
imul
call
test
popf
sbb
push
out
jb
outsb
std
jl
orb
xor
lods
xlat
loopne
dec
push
mov
jle
mov
es
inc
nop
addl
add
movl
mov
repnz
fiaddl
mov
xchg
add
fwait
shr
nop
into
xchg
add
ljmp
shrl
cmp
mov
leave
ljmp
inc
push
stos
cs
adc
mov
test
and
or
sbb
insl
mov
mov
es
or
adc
mov
push
pop
in
mov
clc
jg
adcb
and
clc
inc
leave
sbb
sarb
daa
inc
add
xchg
das
cmp
pop
and
in
lahf
sub
fildll
repz
insl
ljmp
add
fbstp
lea
inc
pushf
dec
pop
mov
out
shll
mov
lock
repz
xlat
xor
inc
call
fstp
insb
mov
sub
adc
dec
pop
pop
or
lods
pop
jne
add
mov
sbb
mov
lret
lea
xor
pop
adc
sub
adc
mov
mov
scas
xor
cld
mov
int
sbb
pop
mov
or
adc
bound
sub
iret
int3
in
xchg
cmp
mov
sub
xor
and
lods
push
adc
adc
test
popa
jge
mov
cmp
lret
sbb
shll
sub
push
xchg
je
cs
dec
mov
std
pavgb
push
sbb
or
jge
dec
cmp
jo
xor
or
mov
push
jp
insb
xor
int
sbb
jns
mov
mov
push
lcall
pop
das
add
push
dec
jle
pop
cmc
std
fildll
jnp
dec
sti
icebp
mov
mov
jno
enter
inc
jp
push
sub
int3
mov
jecxz
out
mov
gs
jae
or
lret
mov
pop
cmpsb
aas
fnstenv
push
sbb
mov
leave
addr16
dec
arpl
shrb
jle
add
sbb
adc
imull
jns
aaa
out
or
mov
outsl
push
in
or
daa
or
sbb
sbb
test
gs
stos
xchg
and
mov
rorl
or
test
idivb
fcoml
cmp
out
cmc
jb
cmpsl
or
notl
enter
ret
push
dec
stos
or
rcrb
aam
arpl
imul
outsl
jno
or
dec
inc
or
inc
push
fisttpll
jb
jmp
or
fnstcw
sbb
inc
dec
push
push
push
jecxz
ss
pop
xor
add
push
or
inc
movl
add
icebp
iret
pop
inc
and
test
xchg
or
xchg
add
adc
pop
lahf
enter
or
movsb
xor
popf
test
ret
xlat
addr16
lds
fmul
jl
movq
pop
xchg
add
mov
or
xor
test
ffreep
dec
addl
or
ljmp
push
or
xchg
cmp
sti
and
arpl
jg
add
inc
mov
inc
xchg
push
test
sub
mov
in
and
xor
sbbb
cmpl
jb
pusha
test
ret
sbb
sub
jecxz
jb
fisubrl
stos
xor
shl
call
push
pop
fdiv
pop
and
je
xchg
dec
jns
and
test
add
dec
mov
shrl
or
fisubrs
stc
lea
daa
shll
int
mov
jo
cli
mov
dec
fcom
xchg
ss
out
mov
jecxz
and
mov
dec
aam
jne
pop
xchg
lret
mov
or
pandn
push
nop
xor
add
inc
jo
or
lret
pop
ret
paddusb
inc
push
inc
mov
dec
data16
stos
cltd
sub
divb
and
fldt
adc
cmpsl
fadd
lods
bound
pop
cmp
fsts
popa
add
adc
push
push
xchg
add
mov
push
cmpsb
js
jnp
inc
gs
jne
sldt
ret
or
sub
mov
jl
aam
into
std
sbb
jb
ret
dec
stos
adcb
xchg
inc
gs
cltd
pop
dec
test
jle
mov
cmp
add
pop
rcl
cmp
add
xchg
add
lahf
aad
hlt
data16
push
cwtl
mov
sar
aam
xchg
imulb
mov
leave
mov
adc
mov
loop
mov
and
add
push
out
or
loope
dec
xchg
movsb
or
mov
and
stos
gs
or
mov
xchg
mov
cmpsl
cmc
xor
mov
fnstsw
fcoms
xchg
call
inc
hlt
outsb
out
xor
mov
and
mov
push
enter
mov
mov
movsb
test
loop
out
loopne
test
jl
dec
mov
int
mov
mov
dec
test
cmp
rcll
jne
jle
cmpsl
ret
stos
cmpsb
shrl
in
dec
cmp
or
mov
cltd
pop
fsubs
adc
push
lea
xlat
adc
pop
inc
pusha
inc
mov
adc
xor
xlat
xchg
bound
repnz
dec
inc
lock
xor
sbb
iret
insl
xchg
int3
push
inc
ret
mov
mov
out
arpl
sbb
pop
adc
jno
jg
mov
hlt
mov
push
aaa
xchg
movsb
shl
fidivrl
iret
adc
mov
les
movsl
pusha
push
mov
jge
sbb
mov
pop
lock
cld
cmp
das
repz
int3
xor
pop
mov
add
aas
dec
adcb
push
fidivs
sub
mov
dec
lock
pop
or
imul
mov
inc
out
sub
xor
push
sbb
dec
scas
mov
pop
pop
cmpb
fcmovb
mov
dec
test
pop
push
out
cltd
sbb
jne
push
sti
mov
les
cld
mov
lods
daa
rcr
leave
movsb
sub
sub
imul
add
pop
in
mov
out
xor
data16
inc
gs
add
lcall
mov
push
add
mov
push
lahf
sub
mov
js
fidivl
fcoms
inc
dec
fdivrl
dec
adcb
cltd
push
mov
inc
and
rcr
int
mov
enter
adc
pop
or
fmuls
add
jne
add
dec
xchg
das
repnz
or
out
sub
push
mov
repz
dec
or
bound
or
data16
mov
ds
pop
outsb
and
loope
xchg
daa
mov
push
aam
shlb
popa
dec
xchg
ja
and
fiaddl
fstl
test
jbe
outsb
les
push
jecxz
cmp
cmp
aaa
aad
jl
inc
and
rcll
insb
pushl
cs
nop
inc
push
push
fisttps
cmp
std
lahf
mov
push
push
ret
or
out
imul
dec
test
pop
mov
cld
and
clc
mov
out
out
xchg
rol
or
mov
ret
daa
outsb
xor
jg
jl
add
add
cld
in
imul
xor
in
xchg
cmp
pop
ret
aam
cmp
movsb
pop
loopne
and
inc
mov
leave
rorl
mov
ds
ss
xor
adc
rcr
and
inc
aaa
or
mov
jne
or
mov
xor
push
loope
out
pushf
or
cmp
mov
inc
jmp
ds
lods
cmp
cmp
push
js
pop
cmp
sahf
out
push
sbb
shlb
rcll
mov
sbb
and
shlb
fcomp
xchg
cs
ficompl
or
pop
and
xchg
mov
out
bound
add
outsb
jmp
jnp
lods
orl
aaa
aas
sbb
xor
dec
inc
nop
stos
adc
ret
pop
inc
jbe
pop
adc
xor
cltd
addr16
push
dec
shll
andl
cld
dec
inc
jl
xchg
test
pop
iret
arpl
repz
cmp
mov
dec
add
ret
and
mov
adc
push
scas
add
fmuls
sub
pop
add
xchg
aam
mov
mov
fstpt
push
dec
sub
call
mov
push
dec
rorb
push
jb
stc
xor
dec
test
and
inc
movsl
shrl
inc
aad
add
stos
push
mov
gs
sbb
inc
dec
stc
jp
movsl
fwait
sub
adcb
fwait
dec
les
test
inc
or
cwtl
adc
scas
mov
leave
xor
xchg
aas
dec
loop
xchg
cmc
fstps
push
dec
sbbb
inc
jae
enter
xor
push
addr16
jle
and
jae
pushf
pop
div
ja
sbb
leave
and
push
rcrb
shr
mov
push
inc
cmpsb
jmp
insl
into
sbb
push
inc
adc
push
xchg
inc
ds
leave
shrl
insl
push
jecxz
mov
xchg
xor
add
shll
popf
clc
lahf
mov
fdivs
lcall
fidivrs
jp
adc
push
mov
fninit
je
lcall
pop
rclb
xor
shrb
mov
push
addb
popf
push
test
icebp
ja
xchg
pushf
add
outsb
jle
sbb
mov
push
push
jge
and
inc
xor
jne
dec
adc
rclb
mov
int
aas
jle
lock
cmp
out
cmp
or
push
cmp
dec
rcl
mov
mov
rol
xor
repnz
mov
fistps
pushf
push
mov
bound
sti
data16
decb
rcrb
push
add
cmc
dec
dec
jge
inc
dec
mov
in
push
sbb
pusha
movsb
movsb
arpl
leave
lods
cmpsb
int3
dec
aaa
cmc
xchg
outsb
stos
sbb
mov
push
add
mov
hlt
push
mov
or
mov
psubsw
mov
xchg
cmpsb
dec
jge
jnp
or
stos
sbb
jae
in
inc
and
orb
loop
cmp
rorb
sti
sub
cmpl
jmp
sbb
iret
xchg
imul
push
ds
adc
pop
cmp
outsl
incl
movsb
test
addb
cmc
leave
add
hlt
cmp
jmp
xchg
and
adc
and
jmp
fistpll
into
loope
out
out
out
push
or
or
xchg
sbb
pop
pop
faddl
popa
gs
ja
iret
lds
ds
pop
outsb
sbb
insb
sub
push
mov
addr16
ljmp
add
roll
push
orb
shll
and
int3
add
je
gs
notb
icebp
mov
out
movsb
xor
fwait
xchg
or
mov
out
clc
pop
xor
into
or
lret
hlt
in
nopl
leave
sub
sahf
or
mov
leave
add
push
scas
or
sub
dec
jl
sub
sahf
pop
add
push
push
daa
gs
jecxz
rcrb
ficomps
mov
xchg
cli
loop
loopne
push
aad
lea
scas
int3
lock
icebp
lds
adc
push
cmp
or
mov
sbb
push
scas
lea
mov
cli
ja
dec
push
inc
rolb
add
daa
sub
stos
jae
bound
sbb
mov
notl
add
mov
pop
cmp
mov
loopne
loope
cmp
and
mov
sbb
cmc
cmp
incl
std
jge
pushf
movsl
addl
loope
sti
stos
inc
out
or
repnz
adc
movsb
js
repz
add
add
cmp
imul
or
sub
nop
into
mov
insb
push
pop
push
mov
inc
xor
ret
or
sbb
int
ds
xchg
pop
dec
popa
movb
rolb
incb
adc
lcall
or
sub
mov
and
cmpsl
icebp
xchg
lcall
popa
xchg
push
fiadds
xor
push
popa
out
repnz
jbe
push
loopne
arpl
incl
jbe
movsl
mov
gs
es
mov
xchg
pushf
add
xchg
idivb
xor
xchg
mov
ss
jns
or
push
xor
dec
pop
movsb
xor
inc
fs
xchg
cld
movsl
dec
mov
les
jge
loop
mov
xor
fisttps
pshufw
fucomi
pop
gs
nop
push
or
add
jl
orl
mov
loopne
in
jmp
pop
rclb
xor
mov
outsl
jge
jle
inc
shlb
mov
imul
popf
sbb
les
rclb
mov
divl
cld
mov
or
push
cmp
movsb
pusha
fs
lahf
mov
int3
jns
jg
test
cmp
ja
pop
cmp
cmp
xor
movsb
pop
movsb
lahf
jno,pt
ljmp
sbb
xorb
cmp
sub
jno
pop
dec
mov
cmc
jb
jbe
dec
adc
divl
inc
mov
push
mov
jnp
iret
inc
hlt
inc
mov
push
subb
xchg
jmp
mov
jno
das
fdivs
pop
insb
loop
push
mov
xor
pop
stos
xor
or
pushf
sub
xchg
jo
xchg
sbb
roll
cmpl
inc
sbb
pop
in
mov
decl
mov
loope
mov
mov
fldcw
pop
push
test
lock
sarl
in
mov
xchg
outsb
movd
jl
sub
pop
xor
mov
or
xchg
maskmovq
pusha
adc
inc
dec
pop
loop
add
lret
sbb
add
cmp
ja
outsb
jo,pt
into
ret
mov
inc
add
mov
or
fistpll
lahf
xchg
stos
cmp
clc
pop
test
adc
leave
rol
cmp
mov
imul
jnp
cmpsl
ss
xchg
pop
int
je
outsb
xchg
sub
cli
lods
in
pop
int
stc
sbb
mov
ss
inc
outsb
xchg
cltd
mov
in
xchg
imul
std
cmp
mov
inc
mov
mov
fs
cmp
insb
lock
or
push
adcl
orl
xor
mov
lods
and
fdivs
push
mov
xor
xor
gs
or
xor
pop
mov
xor
stc
addr16
cmp
pop
nop
and
fcomps
sbb
ret
mov
loope
or
aas
fbstp
or
jg
jo,pn
mov
xchg
out
jp
hlt
xor
xchg
cmpsb
mov
sbb
shr
stos
test
jno
popa
sbb
jle
dec
xchg
fwait
jb
pop
and
inc
call
stc
adc
roll
hlt
mov
divb
rcll
mov
dec
jne
xlat
scas
idiv
in
cwtl
dec
ret
lret
pop
sub
dec
adc
xchg
pushf
in
stc
int
leave
adc
push
jns
dec
dec
outsl
repz
mov
push
xlat
inc
aam
jge
pop
lods
in
fwait
cmpb
push
ret
push
jg
lret
outsb
push
jmp
loope
push
pop
ljmp
or
mov
sbb
mov
xorb
fldcw
les
mov
lea
mov
mov
jb
sub
into
in
cwtl
mov
jns
dec
xchg
daa
ret
sub
xchg
cmp
sub
dec
idivb
out
push
xor
repz
push
pop
or
mov
cmp
loopne
mov
call
xchg
std
sbb
xchg
mov
inc
xchg
pop
clc
pop
lods
jo
jle
inc
cmp
test
mov
shlb
in
and
aas
jmp
nop
mov
data16
jle
sub
cwtl
dec
bound
pop
lahf
mov
add
sti
test
dec
sub
fdiv
sbb
repz
ret
leave
imul
sbb
mov
mov
mov
jnp
mov
pop
cwtl
xchg
addr16
jecxz
or
or
mov
enter
mov
mov
stos
adc
scas
xchg
inc
fucomip
inc
sub
cmpb
sahf
test
repnz
push
sub
cmp
push
xor
push
cmp
data16
bound
adc
push
dec
dec
iret
or
xchg
pop
sbb
test
mov
addb
push
or
pop
mov
lds
icebp
add
cmp
mov
fwait
adc
shl
aam
sti
push
lret
cld
repnz
lret
jb
nop
jb
lds
iret
pop
loope
insb
fcomps
cmp
movl
sub
incl
mov
sub
pop
pop
mov
lods
imul
lds
push
cs
stos
inc
scas
mov
jb
sbb
or
ljmp
push
xor
or
or
cwtl
shll
mov
pop
or
dec
jecxz
mov
movsl
xlat
mov
test
sub
push
jo
mov
sub
inc
sub
ret
insl
mov
popf
inc
lock
testl
inc
ret
cmp
inc
outsl
sub
fidivrl
cmp
scas
add
inc
arpl
mov
fstpt
imul
xlat
pushf
push
mov
addr16
adc
dec
xchg
into
iret
movsl
dec
pushf
mov
cmp
and
sahf
ret
xchg
push
sub
cmp
mov
inc
mov
pop
pop
aad
sti
jns
dec
nop
and
rcll
in
xchg
and
xor
inc
ljmp
xchg
mov
add
les
jno
pop
add
xor
mov
fistpll
dec
imul
jbe
sahf
inc
pushf
jbe
xor
inc
aad
mov
out
lret
push
fiadds
iret
pop
xchg
repnz
loop
in
mov
push
cmp
cmp
pop
mov
bound
or
adc
push
movsb
push
daa
int
shrl
mov
aam
ljmp
dec
sub
inc
fwait
inc
sti
loop
cmp
out
push
lret
xchg
push
stos
xor
ja
mov
addl
dec
inc
sar
xor
popa
je
cmc
repz
testl
pushf
sub
inc
jmp
or
add
bound
data16
insl
shl
sub
rorl
cmp
add
mov
xor
fidivs
push
jns
jo
rorl
sub
jno
xchg
push
dec
sub
jg
xchg
push
test
cmp
inc
and
repz
mov
add
jg
cwtl
push
cwtl
adc
xchg
add
shr
std
fcomps
sub
xor
xlat
in
jg
and
mov
jg
push
mov
stc
sarb
add
push
or
mov
sbb
cli
fsubrl
xor
xchg
mov
lret
xor
jae
and
insl
cmp
dec
sub
mov
cltd
into
and
rcll
jge
pop
mov
enter
xorb
pop
mov
lds
add
jbe
xchg
aas
dec
and
adc
in
sub
rolb
jecxz
push
and
mov
inc
out
loopne
mov
and
scas
add
roll
mov
dec
notl
sar
imul
dec
mov
add
fsubrp
fiadds
inc
and
rcrl
or
fisubs
sub
ret
scas
das
cmpsl
xchg
fdivl
jg
clc
mov
mov
add
int
xchg
add
jp
into
lock
fwait
out
add
pop
mov
jecxz
mov
popa
shll
stos
push
pop
loop
decl
pop
push
adc
xchg
and
inc
inc
repnz
shrl
lock
mov
fstl
packuswb
lods
aad
jb
out
push
mov
sbb
push
dec
and
cwtl
ja
js
jp
pop
sbb
test
test
gs
push
pop
cmpl
cld
jae
xchg
jl
ljmp
hlt
in
push
mov
testb
stos
rcll
jecxz
test
mov
and
aad
fmull
sarb
pop
ljmp
and
mov
insb
cmpsl
rclb
test
xchg
mov
push
in
push
jmp
enter
add
rcrl
cmp
pop
ljmp
xchg
jle
out
pop
jmp
jo
jmp
lds
cmpl
cmp
stc
imul
cmpsb
inc
imul
dec
sub
pop
daa
xor
lret
cmp
pop
fidivl
jg
sub
sub
mov
out
mov
jo
frstor
out
push
sub
inc
in
cmc
jbe
outsb
lds
pop
icebp
popf
xchg
sbb
dec
and
jb
gs
push
jne
mov
add
mov
lock
ficomps
or
xchg
rorb
stos
lock
add
dec
repz
repnz
icebp
mov
sbb
inc
lret
push
cmp
fcmovnb
inc
mov
shlb
pop
pusha
and
shr
out
sti
rcrb
push
stos
cmpsb
repz
xchg
inc
imul
pop
lods
pop
dec
clc
roll
xchg
jge
or
mov
ss
adc
cltd
std
out
iret
inc
in
lods
stc
sbb
aaa
fs
out
pop
add
mov
cmp
cmp
dec
popf
xor
sbbb
enter
adc
lcall
vhaddpd
cmp
mov
push
mov
and
dec
outsb
rep
fwait
xlat
pusha
les
std
jecxz
and
push
das
rcr
adc
insl
jo
xchg
scas
push
or
js
lods
or
aad
push
pusha
mov
push
into
fucomip
jle
je
pop
js
mov
ret
ljmp
nop
dec
lahf
mov
or
frstor
repnz
enter
sar
fwait
xor
cmp
ja
pop
adc
and
mov
adc
xchg
int
fdivs
mov
cbtw
ja
adc
int3
adc
sbbb
push
or
mov
fidivrl
push
out
imul
mov
daa
lock
pop
rep
mov
pop
xor
mov
jecxz
lea
cmp
lahf
pop
xor
dec
jnp
sub
lds
mov
insl
mov
push
mov
cmpsb
pop
mov
adc
push
jl
xchg
mov
jmp
mov
ret
sbb
movsl
mov
sbb
sbb
out
shlb
lods
aas
or
lret
cmp
les
pushf
stos
lds
mov
xor
stos
lock
dec
adc
jo
outsb
arpl
lahf
aas
nop
rcll
mov
xchg
ds
jmp
int3
push
fidivl
pop
popa
pop
cmp
scas
dec
mov
pop
adc
mov
xor
in
test
ds
dec
int3
sub
cmc
std
fdivl
test
enter
pop
sbb
mov
imul
xchg
rol
testb
iret
push
xorl
push
pop
mov
lcall
mov
nop
add
jmp
int3
clc
pop
in
clc
lcall
xlat
popa
xchg
test
push
inc
add
lods
sub
push
leave
adc
mov
pop
fmul
pushf
sbb
in
cltd
orl
sbb
or
mov
pop
ficoms
adc
dec
sub
sbb
ret
pop
jne
adc
mov
xor
adc
xorps
sub
out
shr
and
or
in
pop
in
or
inc
outsl
adc
cmp
les
inc
jg
sub
sub
cmpsl
lods
movsb
in
adc
call
sahf
or
cmc
push
outsb
push
dec
loop
arpl
xchg
rolb
xor
loop
push
pushl
rcr
das
out
pop
fwait
push
jmp
lahf
test
jbe
xor
loopne
daa
sub
fmulp
icebp
sub
pop
push
in
dec
push
out
sti
jg
aas
mov
ret
lds
mov
jecxz
adc
insb
jae
inc
or
xlat
cs
xor
cmc
dec
cmp
mov
push
pop
adc
rcll
jmp
subb
frstor
jmp
out
rorb
xchg
enter
in
cli
js
lahf
mov
shlb
mov
ret
ljmp
sub
mov
fdivrl
out
aam
xchg
mov
scas
aad
sub
ret
je
inc
dec
test
in
and
mov
sbb
mov
cmpsb
hlt
push
mov
outsb
sbb
orl
adc
xchg
mov
dec
adc
adc
clc
cwtl
xor
sbb
in
xor
dec
cmpsb
pop
insb
stc
add
mov
fcomps
addr16
pop
std
das
xchg
je
mov
rcrl
jbe
xor
in
xchg
pop
pop
xchg
loop
dec
pop
aam
dec
push
push
aad
jnp
mov
icebp
push
dec
xor
xchg
aad
ficompl
cmpl
gs
dec
enter
rcll
leave
mov
frstor
dec
scas
lret
test
les
rorl
cwtl
mov
loopne
or
data16
mov
inc
in
pop
pop
dec
out
loope
push
xlat
rcrl
pop
test
ret
pop
jp
out
xchg
incl
inc
mov
jns
lock
roll
std
cmp
cmpsb
mov
xchg
push
sar
mov
mov
adc
int3
rep
dec
adc
push
addb
mov
test
mov
jo
mov
jno
aas
or
sub
hlt
ret
xchg
push
les
mov
sbb
sbb
add
in
inc
sub
scas
adc
outsb
mov
sbb
and
adc
jno
dec
push
pop
sub
xchg
sahf
cmc
loopne
sbbl
fs
shl
pop
push
sahf
pusha
cmp
lret
in
push
sub
mov
sub
ror
xor
sub
inc
jne
xor
ror
filds
jg
cmp
adc
mov
mov
add
jl
mov
ds
adc
sbb
loopne
adc
xchg
push
xor
adc
pop
and
xchg
xchg
inc
mov
loopne
in
lahf
lret
push
hlt
cmp
out
cmp
inc
and
xchg
sub
dec
out
mov
mov
jecxz
repnz
xor
mov
int3
and
in
mov
add
xor
mov
movsl
and
and
sub
cwtl
iret
lods
xchg
push
sbb
xor
cli
cld
dec
outsb
fistps
sbb
scas
fxch
out
xor
xchg
xor
gs
lcall
jg
invd
cli
andl
push
in
flds
dec
jmp
mov
out
inc
int3
imul
cmp
cli
push
shll
and
sbb
stc
jp
movsb
xlat
test
mov
mov
mov
mov
jns
dec
repz
lods
and
xorl
jl
push
add
or
sbb
std
xchg
add
cmp
mov
inc
sbb
mov
in
loop
enter
push
cmpsl
push
ret
push
push
jle
in
test
add
sub
add
mov
sbb
aad
ss
adcl
push
loope
cmp
or
movsb
in
stos
lret
or
insb
pop
fwait
ja
movsl
stc
and
loop
rolb
lahf
popa
dec
mov
xlat
xor
push
pop
pop
aaa
or
pop
gs
and
icebp
in
test
push
popa
push
dec
lods
push
out
dec
mov
cmc
jecxz
repz
and
mov
js
mov
icebp
pop
push
aaa
jmp
sbb
dec
lods
lods
lea
paddd
jle
jns
jle
js
cltd
gs
dec
repz
pop
mov
imul
or
sbb
cmp
loope
pop
mov
flds
daa
imul
pop
imul
arpl
fimuls
cmp
nop
cmpsb
std
sarl
out
pop
cmp
and
xchg
ret
inc
push
ret
pop
scas
adc
push
mov
ds
loopne
mov
in
dec
cmp
ss
adc
jmp
stc
mov
mov
hlt
ljmp
cmpsl
and
lret
mov
cli
push
rolb
mov
xchg
xchg
add
dec
xchg
pop
or
jbe
fnstenv
sbb
into
dec
pop
and
mov
fistpl
dec
jnp,pt
xchg
outsb
and
mov
into
ret
ret
mov
push
jno
and
inc
or
clc
scas
jmp
lret
sub
adc
or
add
xchg
mul
fdivs
int
xor
out
popa
and
out
mov
add
or
cmp
xor
jne
repnz
sbb
aam
lock
rclb
lahf
dec
push
movsl
shll
je
out
divb
aas
ljmp
xchg
or
pop
cmp
stos
shlb
loopne
sub
out
inc
in
movsb
lods
jo
jbe
mov
sbb
out
pop
pop
mov
push
pop
xchg
add
outsl
cmc
dec
ss
lods
push
jecxz
add
cmpsb
dec
xchg
mov
sarl
popf
repnz
jle
or
xchg
outsb
cmp
xchg
cmp
dec
mov
or
ret
jl
lds
nop
push
insl
fisubl
sub
mov
xor
aas
add
ljmp
and
or
fisubs
outsl
in
inc
or
cmp
mov
and
mov
mov
inc
mov
sarb
cmp
and
cli
xor
cli
inc
xchg
mov
jp
pop
inc
xor
aas
push
decb
and
or
and
sti
mov
fwait
dec
xchg
xor
adc
adc
push
pop
sti
jecxz
adc
mov
inc
mov
scas
je
cmp
fsubrs
pop
insl
lock
xor
daa
lahf
fcoms
int
xor
out
xchg
lahf
and
out
push
int3
mov
sub
daa
nop
dec
and
sbb
add
xlat
les
js
or
filds
add
mov
repz
insl
and
or
mov
xor
loopne
push
pop
hlt
jp
xchg
ljmp
sub
cmp
or
in
andl
mov
lret
frstor
ret
dec
jp
orl
lret
xchg
xchg
subl
add
jo
sbb
adcl
sbb
mov
nop
cmp
lods
sub
dec
and
lods
lock
fst
imul
pop
jmp
sub
std
arpl
test
adc
push
and
aaa
xchg
stc
xchg
mov
xorl
add
hlt
imul
cltd
adc
sbb
mov
shrd
push
pop
imul
pop
hlt
pop
push
mov
dec
cmpsb
adc
stc
stc
jmp
jg
jae
jne
dec
sbb
jae
push
push
xlat
insl
sbb
dec
nop
xchg
mov
jl
push
cmp
sub
cs
sbb
shrl
inc
mul
mov
jecxz
subl
push
inc
les
das
xchg
xor
mov
pop
lods
or
fs
nop
call
pop
rolb
xor
cmp
rcl
test
ss
jmp
aas
jbe
or
into
mov
lock
loope
push
bound
cmp
add
fsubs
xchg
and
call
xor
insb
cmp
xor
out
repnz
cmpsb
jae
pusha
xor
mov
mov
ja
insb
adc
cmpsb
fbstp
sub
jns
add
ret
xrelease
pop
push
shrl
clc
in
xor
and
push
cld
das
out
xchg
jnp
test
fstl
and
es
sub
fistps
sarl
in
data16
sub
dec
pop
jle
into
testl
movsb
mov
stos
cs
pop
or
jbe
push
add
jge
dec
lcall
add
cmpsl
push
jecxz
rcrb
xchg
pop
jb
fbstp
js
js
cmp
gs
dec
lret
lock
sti
cli
sahf
add
or
stos
and
dec
lds
mov
aad
je
out
fucomip
pop
xor
and
mov
imul
test
jo
inc
je
sti
dec
icebp
and
ss
aaa
cmp
rorb
mov
aam
cmc
inc
adc
inc
adc
cwtl
mov
vaddsubps
mov
aas
jl
lods
int
cmpb
inc
xor
ljmp
data16
mov
popf
inc
leave
repz
ds
jnp
pop
pop
int3
test
xor
sbb
inc
outsb
movsl
pop
and
or
sbbb
and
repz
add
daa
subl
mov
sbb
out
add
mov
test
adc
push
arpl
int3
das
mov
sub
jbe
lret
aad
jno
cld
out
pop
cwtl
test
cwtl
xchg
xchg
iret
dec
scas
iret
mov
lret
das
hlt
test
mov
clc
arpl
mov
pop
fnsave
xor
sbb
sbb
fiaddl
aam
out
mull
fstl
mov
scas
mov
jl
lea
cmc
cmc
test
subl
loopne
ljmp
out
dec
testb
fisubrs
outsl
jb
int3
mov
sub
out
repz
add
push
and
xor
pop
sub
fldcw
push
testl
mov
inc
ret
test
es
arpl
and
gs
jg
xchg
cmc
sub
push
mov
filds
cli
pop
mov
in
aas
xchg
fimuls
hlt
inc
cmpsb
cmp
push
jle
fldcw
inc
or
in
cmp
repz
xchg
fcompl
mov
popf
adc
pop
cmp
addl
add
cli
or
mov
sbb
push
cmp
hlt
inc
les
mov
pop
lods
jnp
xor
xor
pop
adc
movsb
lahf
lahf
sub
clc
mov
stos
aaa
mov
sub
fwait
mov
adc
jo
out
push
jle
dec
mov
sub
sbbl
and
outsl
pusha
or
stc
pop
dec
xchg
movsb
pop
stos
sbb
inc
es
mov
sbb
push
push
cmp
dec
xchg
mov
mov
lods
or
cwtl
push
dec
jl
lcall
sti
dec
sbb
mov
je
xor
out
or
or
lcall
sub
jecxz
lock
fwait
lea
lock
popa
push
add
js
movsl
xlat
push
xchg
cmpsb
repz
stos
mov
mov
in
ljmp
stos
rorb
push
test
cmp
stos
mov
mov
js
push
lret
popa
adc
pop
rorb
cwtl
sub
dec
adc
outsl
dec
adc
mov
mov
stos
sub
push
xor
jo
and
scas
leave
inc
jno
add
in
mov
rol
mov
xchg
in
sbb
mov
push
mov
inc
push
test
cs
scas
out
push
daa
push
sarl
push
fnstenv
andl
mov
mov
cltd
aaa
mov
xor
jnp
cmc
cmp
in
in
mov
mov
ret
mov
shr
sub
xchg
dec
mov
mov
daa
imul
fcmovne
pop
idiv
push
push
jno
out
das
lret
lock
clc
dec
push
dec
mov
insl
mov
fxch
mov
arpl
es
hlt
imul
icebp
mov
mov
cmp
mov
mov
lea
loop
outsb
clc
inc
leave
jg
mov
xor
les
bound
dec
push
popa
jns
sbb
and
testl
int3
dec
and
sahf
mov
call
mov
inc
mov
pop
xchg
pop
incl
mov
and
mov
xchg
jne
xchg
mov
add
aad
loopne
mov
cmpsb
xor
jno,pn
push
or
cmp
mov
add
xchg
pushf
sub
ret
repnz
adc
dec
sbb
les
and
sti
addb
scas
loope
lock
insb
mov
and
dec
pop
sub
rcrl
xchg
sbb
mov
jle
in
dec
sbb
and
mov
mov
add
loop
mov
ss
adc
sbb
dec
or
inc
mov
xor
call
and
fisttps
add
data16
iret
orl
inc
mov
arpl
cli
mov
pop
push
jmp
int3
pop
push
aam
daa
jle
pop
lock
push
dec
movsb
or
mov
xchg
inc
sbb
stos
inc
std
adc
cmp
popa
nop
pusha
xor
insl
pop
push
mov
dec
gs
outsl
adc
mul
adc
pushf
mov
test
pusha
xchg
cmp
jecxz
dec
jnp
add
sub
adc
pop
sbb
addr16
out
sub
xor
test
sbb
outsb
stos
xor
dec
add
or
notb
daa
mov
or
xor
jo
ss
xor
adc
add
dec
push
lret
in
pop
xor
adc
repz
xchg
sbb
fwait
inc
dec
pop
mov
sbb
or
enter
pop
mov
jmp
adc
mov
leave
dec
sbb
les
and
push
dec
adc
push
sbb
mov
push
mov
pop
xor
xor
int3
or
movsl
dec
fldenv
fildl
fldl2t
imul
add
pop
jp
divl
mov
movsl
scas
jge
inc
xchg
loopne
jns
xchg
outsb
rcrl
enter
mov
dec
test
dec
or
and
test
inc
and
mov
out
push
loop
ret
fdivr
iret
sarb
hlt
loop
sbb
cli
jg
pushf
cmp
xor
aam
xlat
cmpsl
pop
xor
pop
int3
and
push
inc
mov
mov
push
mov
shl
jmp
pop
push
push
imul
xchg
jnp
in
cmp
lds
ljmp
nop
aaa
gs
jae
mov
clc
and
dec
sti
push
aam
bound
out
sti
pusha
jle
jnp
push
int
ds
xchg
loope
push
xchg
cmp
and
pop
mov
sbb
sub
push
jae
stos
addr16
into
xor
sbb
repz
int
push
cmp
hlt
mov
add
imul
fsts
pop
aad
xchg
daa
lods
inc
test
mov
popf
mov
cmc
fdivl
nop
negl
ss
es
test
subb
ss
mov
dec
jmp
lea
add
jbe
cmp
dec
je
imul
mov
mov
sub
mulb
jmp
mov
fdivrs
push
mov
jo
pop
add
icebp
xchg
jnp
pop
nop
adc
sarb
mov
sbb
jp
stc
scas
out
cmp
adc
mov
add
imul
mov
in
ret
mov
shlb
nop
pop
outsb
mov
mov
sub
inc
data16
or
inc
and
add
cmp
push
test
and
mov
and
ss
mov
enter
lea
sbb
or
movsl
aad
xlat
xchg
lods
test
sbb
fs
sti
int
or
cmp
xor
mov
popa
fnstenv
idiv
frstor
ljmp
push
scas
stos
hlt
mov
dec
out
mov
lret
stos
pop
adc
mov
imul
es
push
scas
push
lahf
pop
jge
enter
std
mov
pop
shl
inc
test
push
add
pop
mov
les
pusha
sub
stos
adc
jne
in
and
jno
mov
push
inc
xor
icebp
cmp
mov
xchg
pop
add
gs
xor
out
jb
fsubp
stc
cmp
mov
mov
adc
mov
cmp
aaa
jnp
xor
in
xchg
inc
sub
stos
addr16
pop
cmp
adc
xchg
fdivrl
shll
inc
inc
cmpl
fstps
push
sbb
data16
dec
mov
add
nop
lcall
push
call
xchg
lret
int3
pop
cmp
mov
or
ds
xor
sbb
fs
inc
push
mov
mov
rcl
stc
pushf
or
sti
jb
loopne
test
jge
sbb
pushf
add
inc
push
outsb
push
cmp
and
dec
cli
jp
sbb
push
mov
jo
adc
test
mov
xlat
pop
sbb
fldl2t
xchg
cwtl
sub
in
and
icebp
xor
lret
jae
mov
mov
push
test
xor
or
sbb
cld
scas
jnp
mov
xor
mov
sub
cmp
loop
add
adcl
push
push
sbb
aas
arpl
addb
daa
xchg
int3
ds
push
sub
jge
in
sbb
mov
nop
lret
dec
mov
push
pushf
jb
pop
out
repz
sub
int3
pop
sub
cltd
shlb
jbe
mov
pusha
lret
push
out
js
in
cmp
cs
repnz
push
push
shrl
das
aaa
sbb
xor
cs
aad
jmp
push
es
xchg
fildl
adc
js
out
imul
add
mov
mov
pop
xor
jp
pop
push
sti
push
mov
stos
lock
or
or
fwait
ss
sub
aaa
stos
aaa
cmp
mulb
lret
or
add
lahf
in
or
and
jle
dec
std
mov
jno
shlb
lea
inc
iret
pop
into
jge
push
lds
push
nop
fstpl
sub
jne
inc
mov
mov
imul
shlb
jg
inc
mov
into
les
inc
sahf
xor
mov
loopne
or
xlat
and
lahf
sub
cmp
imull
mov
ror
cmp
imul
inc
jns
push
sbb
push
dec
int
mov
mov
enter
xchg
jo
stc
ljmp
and
jbe
adc
jo
dec
pop
mov
int
mov
adcb
testb
scas
xor
stos
cmpsb
cmp
repz
mov
aad
jge
in
test
sbb
mov
add
pop
inc
fstpt
xor
loop
inc
das
bound
das
mov
es
cmp
mov
push
scas
push
fbstp
xor
mov
sti
add
cltd
out
xchg
sub
cwtl
mov
inc
loop
mov
jmp
fidivrl
and
movsb
mov
mov
or
inc
push
shrb
int3
xor
subl
sub
sub
test
mov
std
outsl
xor
cmpsb
and
or
lods
push
xor
inc
xor
mov
sti
imul
aam
int3
into
aam
pop
push
loopne
repz
ss
push
or
movb
mov
out
or
iret
out
pop
and
jge
xchg
push
repnz
xchg
or
in
xlat
orb
outsl
xchg
jns
add
jge
inc
jp
sbb
add
rcll
inc
fists
fnsave
inc
lcall
repz
jnp
nopl
loop
add
jo
xchg
shll
loope
sti
loop
push
or
add
inc
andb
repnz
das
in
mov
in
loope
ret
in
rol
pushf
pop
and
and
mov
ja
push
sbb
cmp
outsl
or
xchg
mov
add
rep
push
pop
iret
loopne
fnstenv
and
mov
int
mov
cmp
sub
mov
mov
mov
xor
daa
add
mov
and
aam
incl
adc
or
insl
jg
cmp
pop
ljmp
inc
mov
aad
ss
mov
cmp
mov
pop
enter
xor
shlb
mov
jb
jno
aad
dec
cs
adc
insb
jp
aad
sub
xchg
test
mov
xchg
das
fsubrs
cmp
jne
sbb
outsl
xchg
bound
and
adc
fcmovne
sarb
mov
lock
sbb
mov
jecxz
mov
ss
clc
pop
sbb
dec
shll
sub
mov
xchg
inc
scas
sbb
subl
aaa
pop
out
rorl
outsb
das
pop
test
jo
fldcw
add
in
push
and
adc
shl
dec
dec
cmc
ja
ret
jns
mov
mov
sti
sti
cmp
cmpsb
cmpsl
add
in
inc
adc
xor
shrl
mov
cmp
in
mov
adc
add
push
repz
hlt
movb
loope
dec
add
int3
or
loope
jge
xchg
cmp
ljmp
lods
mov
jbe
mov
jmp
cwtl
mov
cmp
daa
push
push
ja
cltd
jmp
jno
lahf
mov
int3
add
roll
mov
jnp
add
cmpsb
jle
fldcw
cltd
out
lret
jl
mov
in
cmp
xor
insl
lret
mov
lcall
inc
xorl
mov
xchg
shll
add
dec
data16
xchg
mov
jg
or
or
xlat
pop
or
pop
mov
inc
ljmp
sbb
pop
pop
lods
aaa
lahf
loope
out
dec
clc
inc
mov
mov
adc
aaa
aad
add
jmp
mov
cmpsb
je
mov
es
fstl
bound
test
test
enter
in
leave
mov
inc
dec
pop
xlat
xchg
js
dec
ret
push
and
fldt
xchg
cmp
sub
paddsb
popf
push
cld
jle
sbb
scas
or
icebp
pop
or
ret
pop
and
int
lock
xchg
roll
inc
add
stos
fmull
mov
sbb
cltd
data16
fimuls
push
xchg
addr16
mov
jmp
sub
pop
jmp
inc
jle
xchg
inc
or
pop
stos
xchg
aas
xchg
push
inc
lret
jmp
add
lahf
mov
mov
jge
jle
xchg
daa
fwait
pop
sarl
lods
jbe
dec
push
rcll
sbb
push
lock
sub
pop
in
add
dec
mov
lahf
jo
shrb
inc
data16
insb
fs
test
xlat
xor
call
fstpl
pop
jno
adc
aad
sub
test
mov
inc
xor
stc
nop
fcoms
aas
clc
daa
push
aaa
fisttps
xorb
pop
in
or
push
push
push
loop
jl
xchg
dec
xor
andb
xchg
lds
imul
push
sub
pop
xor
push
jmp
movsb
push
mov
mov
es
add
in
andl
movsl
pushf
mov
fwait
popa
cmp
loope
ret
rcl
out
mov
inc
jg
lock
inc
inc
mov
xor
add
sub
aam
jge
aad
adc
pop
mov
aam
sti
and
jp
fwait
test
dec
pop
jae
pop
sbb
pop
ret
dec
push
dec
fidivs
cmp
pop
es
jbe
mov
sbbb
jno
movsl
iret
test
sarb
xlat
sub
and
nop
adc
sbbb
dec
fcmovu
ja
xor
pop
fisubs
popa
icebp
mov
push
dec
negb
ficoms
push
stc
jb
push
popf
cmpsl
out
jnp
lds
lahf
test
inc
in
js
pusha
mov
mov
or
iret
mov
filds
stos
cmp
mov
or
lret
add
xchg
repnz
rcrl
push
jo
push
sbb
into
xor
pop
sbb
sub
inc
out
cmp
mov
cmpsl
sub
js
bound
or
mov
jl
stos
jno
xlat
pop
adc
fstpl
pop
stos
in
inc
aaa
cmp
xchg
jg
cmp
xor
test
xor
and
xlat
test
aas
lock
out
mov
pusha
jbe
inc
mov
or
add
in
mov
adcb
in
rolb
cltd
call
mov
stos
xchg
into
jno
fldpi
hlt
fdivrs
or
inc
xchg
int
stc
add
push
jo
je
push
popf
adc
aad
ss
pop
faddl
pop
and
shrb
fstps
or
lret
xlat
push
loope
mov
std
loope
fcmovne
sbb
cs
jns
cmp
mov
adc
and
sub
mov
lea
loopne
cmp
mov
sbb
vpminub
inc
pop
inc
lds
pop
js
cli
xchg
lahf
xchg
or
lods
movsb
pop
push
mov
inc
push
imul
pusha
push
xor
test
xor
dec
xchg
shrl
cmp
nop
outsb
mov
mov
jmp
shll
enter
ljmp
pop
xor
or
shrl
mov
adc
mov
mov
sarl
adc
adc
jmp
rcr
popa
fdivrl
xchg
inc
movsb
test
fwait
mov
cmp
adc
xchg
push
dec
jecxz
in
gs
cmp
push
jno
sbb
adc
pop
push
push
xor
inc
inc
inc
mov
daa
enter
cs
mov
into
pop
cmc
mov
mov
mov
sbb
lds
pusha
push
jmp
xchg
cmc
mov
loop
aam
aad
push
inc
subb
cmp
mov
pop
xchg
in
fimull
cmp
jp
cmp
leave
dec
popa
ficompl
lcall
jo
pushf
repz
test
jno
push
cmpsl
or
xor
pop
jbe
and
out
scas
sub
adc
pop
inc
mov
xchg
or
arpl
or
lcall
pop
js
push
mov
decb
int3
cmpsl
jg
mov
leave
test
sub
cmp
sub
inc
mov
mov
dec
adc
jbe
loopne
xchg
out
or
mov
pop
cwtl
test
scas
dec
jecxz
test
mov
add
or
popf
jp
jecxz
cwtl
aas
fidivl
push
fistpl
iret
sti
xor
aas
inc
imul
jae
adc
cld
out
cmpsb
push
in
clc
xchg
test
inc
push
cld
fdivrl
add
cmp
dec
fisubl
pop
cwtl
mov
scas
iret
inc
pop
hlt
imul
sbb
dec
fdivs
push
lods
daa
mov
nop
cwtl
xchg
pop
push
fidivs
lret
lcall
loope
xchg
push
test
sbb
pop
test
ret
xor
dec
xchg
dec
xchg
sbb
dec
jge
and
adc
sub
outsb
pop
or
inc
in
flds
loope
mov
cmp
sbb
mov
add
test
mov
cmpsl
and
push
js
or
mov
mov
and
aas
sub
dec
mov
and
cmp
imul
sbb
pop
jae
bound
inc
addr16
adc
mov
loope
cmp
das
cmpsl
fs
out
jg
jp
jae
outsl
test
out
fisttpll
rorb
sub
mov
mov
stos
pop
in
fisttpl
sub
mov
mov
jle
adc
andb
sbb
sbb
sub
push
add
fimull
shr
dec
and
push
fwait
xor
fldl
mov
jge
add
lret
inc
ror
iret
inc
mov
dec
pushf
and
in
es
adc
lcall
mov
into
mov
ja
cmp
jnp
mov
scas
test
je
in
scas
cmpsl
push
cmp
mov
and
or
daa
xchg
sub
mov
pop
adc
sub
dec
roll
pop
dec
jbe
insb
pop
stc
fs
aam
ds
jmp
mov
jge
and
mov
leave
inc
imul
push
push
orl
mov
inc
mov
cmp
pop
test
add
lea
mov
or
sub
pop
shr
negb
std
mov
insb
lock
mov
aam
clc
pusha
cmpsb
mov
inc
pop
inc
sbb
cmp
sub
cmp
bound
or
xchg
dec
pop
in
mov
and
lcall
add
and
mov
jge
mov
aaa
pop
cmp
and
cmp
jecxz
sub
pop
pop
fsubl
adc
shll
push
fnsave
aaa
addr16
add
mov
mov
mov
pushf
cmp
xor
adc
mov
int3
call
jp
dec
mov
pop
into
pop
adc
fnstcw
cltd
aaa
mov
mov
dec
mov
add
mov
mov
les
push
outsl
ljmp
adc
sbb
push
cmpb
cltd
imul
mov
test
fildll
enter
push
fcomip
jne
loope
out
dec
loop
jnp
test
lods
jno
dec
pop
lcall
testl
add
pushf
out
sub
repnz
fcoms
xorl
dec
ds
cmpsl
cs
icebp
pop
lock
push
paddusb
out
fcmovne
fsubr
mov
test
adc
xchg
out
and
repz
in
dec
pop
xor
lcall
mov
test
pop
fxch
cli
das
lret
icebp
nop
push
sub
xchg
pmaddwd
mov
mov
in
lods
icebp
mov
pushf
fwait
or
or
hlt
jo
shrl
ficoms
js
add
psubb
jle
scas
xorl
scas
xchg
cmp
add
add
mov
mov
push
or
jae
mov
xor
sbb
adcb
xchg
push
adc
dec
jnp
add
or
sbb
and
fs
lret
and
inc
xchg
icebp
pop
xlat
push
add
cmp
lods
call
mov
imul
test
xchg
mov
mov
repz
jecxz
mov
or
add
cmp
inc
adc
mov
jnp
inc
repnz
sub
inc
push
fcmovbe
inc
rorb
xchg
inc
ja
imul
mov
xor
movsb
addr16
fs
test
add
insb
test
mov
inc
mov
adcl
adc
cmpsl
and
jg
pop
pop
scas
pop
push
pop
jbe
mov
cmc
xor
orb
dec
stos
push
pop
inc
sub
out
out
sbbb
cmova
sbb
lahf
aam
aaa
add
out
shlb
int3
cmp
movsl
dec
loopne
jne
pop
loop
mov
mov
int3
cmp
popf
sti
mov
inc
test
loope
ss
jo
jmp
cmp
add
sub
pop
sbb
xlat
pop
adc
repz
inc
jns
jmp
sbb
cli
in
movsl
or
lret
aas
insl
popa
or
or
mov
lods
jl
addr16
dec
xchg
ljmp
cs
std
fcoms
fisttpl
mov
sub
mov
jmp
icebp
sti
push
aad
or
cmp
addr16
insl
jb
xchg
dec
pop
sbbb
push
inc
leave
add
adc
stos
jae
inc
std
inc
mov
fimuls
pop
xor
out
outsb
jl
lock
fs
ss
pop
push
iret
rcl
sti
cmp
jg
push
jnp
and
lahf
hlt
inc
into
or
jmp
mov
pop
fcoml
loope
out
ret
in
ret
lods
or
and
jg
rcl
repz
and
pop
xchg
je
and
push
jbe,pn
test
cld
imul
mov
sahf
lcall
mov
jb
push
push
aas
mov
in
mov
or
jg
push
js
dec
jo
push
xlat
jbe
jmp
or
cmpb
je
dec
mov
pop
push
nop
mov
dec
and
cltd
popf
imul
xchg
mov
mov
or
or
fwait
xchg
or
pop
bound
add
jge
mov
lods
push
push
dec
faddl
cwtl
fmuls
or
jl
adc
mov
xchg
push
inc
ss
fcmovnb
iret
cmp
in
mov
jmp
addl
mov
testl
lea
mov
sbb
hlt
loopne
fcmovnb
mov
cmp
lock
and
adc
daa
sbb
jl
mov
imul
sbb
hlt
ss
int
push
mov
loope
sarl
sub
je
or
invd
push
jb
rcll
roll
xchg
pushf
inc
shrb
dec
mov
jo
mov
je
cmp
sahf
pop
and
mov
aas
or
fistl
daa
push
jae
ucomiss
push
push
xchg
push
shll
mov
loope
test
enter
xchg
cs
add
shll
cld
mov
adcb
lea
adc
push
repnz
pop
imul
jl
dec
adcb
cmovnp
push
rcr
xlat
lds
insl
stos
sbb
pop
popf
aam
repnz
shll
jp
mov
or
sub
dec
cltd
lea
lds
repnz
das
arpl
cmpsl
push
stc
inc
cmp
add
scas
sbb
jecxz
movsl
jge
xchg
xchg
mov
dec
outsl
xchg
jbe
jg
push
inc
cwtl
jno
leave
xchg
ljmp
mov
push
jnp
bound
and
dec
jne
es
jb
out
enter
inc
mov
shrl
and
cmp
lret
fistl
arpl
lcall
cwtl
in
jmp
fcmovb
ret
push
fcomps
push
mov
aam
arpl
insl
mov
pusha
test
jle
lcall
add
scas
fstpt
sub
mov
popa
loopne
push
loop
lods
jbe
dec
inc
into
lret
add
cwtl
push
jnp
jle
push
gs
icebp
pop
iret
sbb
mov
fldcw
or
std
xor
pop
fs
adc
ret
pop
pop
negl
sbb
sarl
cmp
cmpb
lret
mov
and
roll
mov
sbb
add
add
mov
insl
dec
in
lret
xor
ds
dec
sti
cmc
les
xchg
cld
out
outsb
lock
cli
sub
pop
mov
aaa
into
adc
in
cmp
sbbl
mov
imul
pop
jnp
leave
adc
xchg
jae
and
mov
bound
mov
imul
insl
paddsb
dec
icebp
pop
pop
dec
sub
sub
mov
mov
loopne
jns
pop
pop
sub
xor
xlat
lahf
mov
mov
test
cmpb
xchg
dec
ret
fdivp
and
cmp
add
mov
gs
stos
inc
cld
cmp
mov
and
scas
mov
popa
xchg
mov
push
inc
lods
adc
test
push
cmp
jne
aam
cmp
loop
shrl
and
call
sarb
sbb
outsb
lret
and
or
adc
int
xor
shl
xchg
mov
sbb
push
push
out
xchg
xor
testl
pop
loop
inc
movsl
dec
imul
data16
pop
xor
test
adc
push
pop
sub
test
xchg
test
call
adc
sbb
stos
dec
jg
mov
stos
cs
xchg
add
cmp
fidivl
popf
dec
sti
xor
enter
mov
xchg
fwait
enter
int
and
ljmp
xor
fisubl
xor
adc
mov
imul
xchg
jecxz
inc
fimuls
loopne
pop
push
xlat
fs
sub
es
cltd
pusha
popf
xchg
icebp
mov
js
imul
add
shr
je
jne
sub
incb
pop
fsubs
xchg
sub
rorb
lret
iret
mov
xlat
out
adcl
mov
stc
xor
pop
mov
test
add
ljmp
jnp
mov
aas
insl
mov
outsl
cmp
outsl
nop
aaa
mov
in
imul
enter
mul
std
mov
mov
xlat
idivl
in
jge
int3
xchg
les
pop
inc
mov
mov
xor
pop
in
out
pop
add
or
adc
inc
jb
push
xchg
out
js
loop
push
mov
aad
pusha
lea
aad
repz
mov
mov
and
cwtl
movsb
fdivr
sbb
pop
andl
mov
inc
jle
or
mov
popa
test
mov
ljmp
push
jne
jno
xchg
fs
or
das
sub
jno
sub
cwtl
push
inc
pop
cs
pop
and
mov
sbbl
xor
in
rorb
leave
pop
ljmp
insl
sub
jne
cmc
addr16
push
xchg
add
cmp
jl
pop
lcall
xor
and
loopne
ds
adc
sub
push
nop
add
pop
pop
inc
cmp
or
sti
lret
test
sub
xchg
xchg
or
mov
popf
sub
fists
test
and
add
icebp
xor
inc
pushf
mov
or
adc
aas
and
cli
stos
iret
and
dec
iret
cltd
push
shrb
mov
mulb
or
jno
push
popf
jmp
aad
inc
mov
ljmp
push
xchg
mov
or
test
clc
sti
xchg
sub
inc
jae
jbe
shlb
out
jg
cmp
mov
mov
dec
mov
shrl
dec
lock
xchg
dec
sub
fdivrs
cli
jno
add
rol
xlat
es
cmp
mov
cli
ljmp
scas
inc
cmpsb
int
push
stc
iret
fwait
mov
push
dec
add
les
adc
sbb
iret
sub
ds
xorl
mov
adc
std
into
insb
leave
les
cmp
xorl
aas
imul
rorl
xchg
sub
es
sbb
mov
mov
xchg
xor
cmpsb
and
test
mov
in
mov
pushf
mov
icebp
cmpsl
scas
mov
lods
mov
shl
ljmp
ret
call
mov
sbb
push
sahf
daa
push
bound
out
jae
sub
adc
cld
lahf
mov
xor
mulb
mov
imul
mov
sbb
mov
mov
mov
mov
sbb
call
or
xchg
pop
mov
dec
fidivrl
sbb
push
pop
push
pop
outsb
xlat
scas
mov
into
ret
mov
jle
shrl
out
int3
loope
mov
in
or
dec
or
out
sub
rolb
ret
xchg
mov
andl
ljmp
cmp
add
aaa
js
and
xor
daa
mov
mov
mov
cmc
mov
push
pop
sbb
inc
sahf
xchg
fdivs
mov
std
and
inc
ja
push
shll
xchg
fsubr
mov
adc
arpl
xor
or
in
inc
mov
out
push
cmpsl
mov
lret
xor
jmp
inc
ret
cwtl
je
pop
ss
add
lea
mov
xchg
push
jno
mov
xchg
inc
cltd
cmp
inc
call
addr16
shl
xor
add
or
cmpsl
push
adc
bound
cmp
xor
icebp
ljmp
cmp
add
dec
fstpl
cmpsb
test
cmc
arpl
gs
jb
jbe
jno
adc
mov
push
dec
insl
enter
fstps
fdivrl
push
out
mov
cmpb
test
hlt
xchg
sbb
int
pop
push
sub
insb
xor
push
test
lcallw
dec
sub
nop
int
xor
xor
repz
inc
or
mov
xchg
sub
mov
inc
in
loopne
xchg
cmp
test
push
adc
in
repnz
pushf
shl
inc
loop
dec
and
pop
and
data16
pop
lcall
dec
sbb
pop
arpl
sti
mov
inc
pop
test
call
add
cltd
call
mov
xchg
icebp
pop
jmp
lock
shll
and
sahf
and
lods
test
mov
push
mov
jmp
loopne
fstps
aaa
aaa
cmpsb
pop
mov
mov
pop
mov
sbb
cltd
sub
pop
out
stos
dec
and
jnp
loope,pn
push
jge
push
cli
leave
adc
cmp
cmp
mov
and
pop
sbb
sub
inc
add
loope
dec
jnp
ljmp
movsl
jbe
jne
and
cltd
test
sub
and
xchg
je
sub
test
pop
mov
lods
lock
jp
mov
xor
adc
outsb
xorb
add
loop
sub
xchg
inc
cmp
cmc
int3
lds
cli
sbb
addr16
lea
xchg
mov
shll
fsts
dec
xorl
out
pop
xchg
xchg
gs
pusha
jb
fidivs
rcrb
adc
jge
mov
sub
shrb
subl
sarl
gs
mov
push
fistps
scas
jb
hlt
inc
int
icebp
cmp
rcl
sti
sarl
cltd
jns
out
pop
dec
adc
jp
mov
push
mov
addb
push
cli
shl
dec
mov
out
fdiv
lcall
xchg
arpl
fucomi
scas
sub
and
pop
not
adc
inc
aam
inc
push
lahf
call
mov
push
xor
fs
int3
push
jnp
mov
and
xchg
xchg
scas
inc
sbb
jae
mov
subb
or
rolb
xchg
dec
loope
fsubs
fsubl
icebp
mov
cmp
cmp
scas
sub
push
xchg
insb
cmpsl
call
int3
and
test
sbb
lods
test
ficoms
loop
sbb
insb
push
jecxz
mov
xor
lods
xchg
gs
mov
shlb
and
push
sub
and
imul
and
outsb
gs
push
sub
mov
imul
fldenv
and
xchg
pushf
in
cmp
lods
pop
les
imul
push
jno
pop
call
mov
adc
cmp
dec
fldenv
dec
aam
mov
imul
and
out
xchg
ss
out
and
mov
ja
mov
and
movsl
cltd
add
iret
or
and
std
lcall
jmp
cmc
pushf
ss
lret
adc
ljmp
jge
ret
push
repz
xchg
jmp
dec
xchg
adc
iret
fisubrs
mov
std
imul
xor
xor
rorl
adc
sub
in
lahf
cmp
clc
add
imul
cmp
sbb
jge
lds
js
and
sahf
aam
sti
sbb
mov
rcl
jl
mov
cmpsl
rcrl
xor
shlb
sbb
xor
mov
lea
movsl
fisttps
je
loop
sub
add
mov
sbb
enter
js
repnz
cwtl
es
std
in
jmp
push
dec
sbb
imul
int3
and
dec
adc
std
push
mov
subl
inc
sub
inc
push
fwait
inc
mov
insl
push
dec
ss
mov
bound
and
sti
xchg
pop
ljmp
and
inc
xor
jge
int
add
inc
and
mov
sub
out
data16
and
scas
jne
xor
in
adc
aad
sarl
pop
out
pop
xchg
mov
in
ret
push
ss
push
dec
idivb
pop
es
xchg
rorb
sub
xchg
sbb
pushf
clc
inc
je
sti
sbb
jae
cmp
sbb
inc
inc
sub
jo
dec
out
lods
loope
mov
jmp
pushf
out
call
test
mov
dec
rolb
mov
push
cmc
push
add
dec
xor
bound
xchg
insl
dec
repnz
cmpsb
jbe
mov
bound
mov
lahf
fldl
xor
inc
out
push
fistpl
test
sbb
dec
xchg
mov
xchg
lock
or
repnz
rclb
shl
fcoml
test
loop
push
std
sub
into
xor
dec
cwtl
sbb
sarb
inc
enter
in
notl
int
adc
lods
and
movsl
je
dec
or
shll
shr
jmp
aaa
sub
pop
inc
enter
mov
xchg
adc
cmp
aas
sbb
ljmp
mov
pop
fucomi
mov
xor
sbb
not
fmuls
jmp
jl
stos
outsb
ffree
shlb
sub
pop
int
andb
aas
imul
std
sbbl
stos
mov
sub
cld
test
or
ret
pushw
xchg
add
je
dec
inc
push
cmpsl
aad
push
lahf
xchg
mov
or
inc
adc
mov
iret
pop
fnstcw
jo
lcall
dec
pop
jo
and
mov
popa
bound
movsl
sub
test
mov
xchg
cmp
das
sbb
hlt
ss
dec
add
pushl
jbe
cmp
mov
orl
out
js
adc
cltd
xchg
cmp
jp
movsl
and
jp
jbe
dec
mov
lcall
fldcw
push
adc
dec
daa
sub
sbb
xchg
sub
xlat
ret
xchg
lahf
dec
test
in
lods
push
push
loopne
in
sbb
or
or
xor
rolb
lret
test
jo
xor
sbb
fwait
xchg
ret
iret
and
aam
push
cmpsl
add
imul
jo
in
and
add
cmp
gs
pop
dec
addr16
ljmp
js
out
adcb
cmp
mov
psubusw
dec
int
out
mov
repz
jmp
push
push
xchg
cli
adc
and
cld
xchg
adc
inc
mov
cltd
cli
cmp
mov
subb
test
addl
dec
out
ljmp
dec
add
mov
int3
sub
or
pop
in
into
xchg
ss
xchg
idivb
dec
and
inc
orl
jno
in
adc
in
add
frndint
lea
push
mov
jmp
pop
add
fidivrs
pop
mov
fsts
pop
ret
loopne
lea
mov
jbe
loope
push
jbe
ret
push
dec
xlat
cwtl
sbb
cmp
aam
shll
test
int
insb
dec
inc
pop
ficoml
addl
rcrb
jbe
inc
fs
shlb
js
scas
push
test
mov
les
pop
xchg
loope
push
mov
mov
shlb
aas
stc
bound
daa
clc
pop
shl
dec
outsb
ljmp
xchg
in
jbe
xchg
sbb
fwait
popa
loop
rcrb
pop
mov
xchg
add
and
cmp
xor
and
inc
xchg
shlb
stos
incb
out
or
push
icebp
jo
test
mov
mov
sub
cmp
xchg
clc
push
xor
lcall
pop
xchg
xor
ljmp
scas
add
mov
push
ret
stos
out
or
jp
cs
int
insl
sbb
mov
js
sub
xchg
push
push
mov
mov
cmp
cmp
mov
jae
mov
bound
jecxz
add
scas
or
inc
pop
repnz
dec
and
cwtl
push
mov
or
pop
insb
andb
jl
add
xlat
mov
jbe
cld
lods
xor
add
xchg
adc
mov
shl
cmp
xchg
adc
adc
insb
or
stc
shlb
sbb
sub
arpl
mov
cmp
inc
in
jl
roll
sti
push
movsb
jmp
fdivrs
xchg
faddl
dec
and
daa
in
daa
rcrb
lret
std
aas
ljmp
sbb
repnz
mov
sbb
mov
jns
aad
test
in
test
jnp
clc
scas
filds
popf
xchg
movsl
pop
repz
fmull
mov
andb
jmp
push
cmp
aas
clc
and
push
daa
sbbl
movsl
shll
xchg
test
adc
popa
add
mov
ss
std
lea
dec
xchg
int3
adc
lea
dec
jno
fnsave
xchg
test
sbb
pop
jg
and
jmp
gs
xor
insb
cli
daa
xlat
sub
out
out
jbe
iret
xchg
and
mov
mov
xchg
negb
shrl
mov
inc
push
inc
sub
adc
pop
and
lock
ficompl
push
les
fcomp
and
xlat
lcall
int
pop
clc
and
lea
pop
fcoml
sub
out
mov
cld
fs
cs
fisttps
js
xchg
and
sub
fldt
mov
cltd
test
or
test
push
sbb
and
icebp
mov
lock
cmp
jmp
lahf
mov
in
mov
jne
jnp
or
ret
jnp
daa
sahf
stos
jne
inc
sub
out
pushf
mov
outsl
pop
xchg
lea
xor
cmp
pusha
pop
fadd
les
mov
inc
cld
jns
xchg
or
movsb
cmpsl
sbb
enter
cld
into
dec
rcr
aad
outsl
stc
mov
enter
shrl
push
mov
pop
mov
push
lret
cmp
push
push
rcrl
stc
jo
push
rcr
fmuls
orl
lock
jns
pop
mov
sarl
adc
xlat
sbb
cmc
and
popa
mov
inc
and
cld
fidivl
push
jo
dec
xchg
adc
push
pop
rclb
in
into
jecxz
mov
lods
addl
xor
scas
iret
call
int
rcl
jae
jo
xchg
xlat
shl
add
sbb
dec
dec
in
aad
push
xorb
sub
jb
and
cmp
xchg
mov
repz
ret
push
lock
fnstsw
mov
mov
mov
xchg
clc
mov
int3
test
adc
xchg
sub
out
aad
mov
fs
aad
dec
cmp
inc
inc
jg
xchg
punpckhbw
imul
jns
sub
leave
push
add
or
mov
daa
pop
sarb
gs
ja
test
clc
imul
dec
es
add
fstpt
arpl
mov
lods
add
push
add
rclb
push
inc
inc
xor
je
pop
jge
sbb
cmpsb
push
addl
inc
sbbl
daa
idivb
mov
xchg
push
lods
mov
outsl
cld
sub
scas
or
out
js
into
and
fildl
jp
enter
dec
loopne
ja
jno
jecxz
pop
rorb
inc
add
popf
out
lds
aaa
pop
cld
mov
ret
mov
dec
jb
jnp
sbb
and
test
notl
pop
shll
outsl
movsl
mov
hlt
sarb
mov
sub
xchg
dec
and
inc
and
mov
out
aaa
stos
roll
loope
insl
hlt
cmp
or
cmp
aam
inc
addb
mov
iretw
push
lahf
addr16
sbb
jmp
lds
jae
scas
gs
sub
inc
mov
cld
xchg
in
jmp
inc
aam
sbb
adc
imul
push
pop
jno
and
sti
int
push
fists
imul
jno
sahf
xlat
cmpsl
lds
popf
dec
xchg
lods
daa
out
push
outsl
add
cmpsl
mov
fs
mov
add
adc
out
fisttps
adc
rcrb
ljmp
dec
inc
icebp
ror
dec
jle
jo
sti
cmpsb
fnstenv
push
movsl
int
out
lahf
push
bound
xor
in
in
cltd
and
sqrtps
xor
xor
sbb
aam
movsb
int3
inc
shlb
jmp
lea
inc
dec
push
je
faddl
sub
mov
mov
mov
and
inc
pusha
dec
mov
pop
xchg
in
es
push
aaa
cltd
push
mov
in
ja
xchg
jnp
outsl
push
push
nop
xchg
xchg
inc
rcl
jg
lods
or
mov
adc
pop
aas
fdiv
cld
push
ss
inc
or
jne
pop
lcall
dec
inc
mov
inc
out
mov
pop
insb
es
outsl
sti
jl
xchg
out
into
inc
mov
inc
mov
add
insl
gs
insb
fildl
loopne
sbb
int3
jmp
ljmp
imul
dec
hlt
sbb
mov
rorb
imul
sub
dec
icebp
xor
aas
mov
in
push
adc
icebp
insl
dec
mov
mov
lea
insl
pushf
xchg
inc
out
mov
push
mov
stc
fdivr
pop
popa
sbb
mov
roll
sub
aas
inc
outsb
daa
pop
ja
das
mov
cmpsl
dec
ret
mov
add
xchg
push
xchg
xor
repnz
cmc
vpcmpeqd
sti
xor
inc
and
mov
jecxz
std
push
in
jecxz
ljmp
out
xor
loope
jnp
lret
add
out
insl
pop
scas
idivb
mov
push
pusha
fs
mov
sbb
movsb
je
ss
pop
gs
push
or
loopne
in
add
push
jae
jb
and
xor
test
mov
orl
in
lea
or
jp
sub
jp
dec
ret
cmpsl
xor
xchg
sub
mov
lahf
imul
jbe
lea
pop
jo
sub
xorb
mov
lock
out
dec
int
adc
lds
testl
adc
mov
test
loopne
push
gs
int3
add
mov
jae
cld
repz
loope
out
xchg
mov
flds
sbb
push
iret
adc
push
adc
sarl
into
outsl
or
aad
cmp
in
lret
or
ficompl
rol
sub
das
push
mov
sub
mov
jl
and
mov
xor
fildl
xor
pop
xor
fnstsw
test
mov
pushf
pop
shlb
sub
pop
bound
push
mov
push
adc
mov
ljmp
aas
xor
lods
cmp
in
sbb
push
jge
je
inc
and
cmp
stos
jbe
xchg
js
inc
xchg
cmp
dec
pop
in
jmp
or
sub
sbb
inc
test
loopne
aas
mov
mov
scas
stos
rcrl
daa
and
dec
add
jno
cmp
lret
push
sub
jp
mov
sbb
insb
or
je
dec
cli
cmp
xchg
paddsw
in
xlat
add
ja
push
push
pop
addr16
sbb
fcmovnu
lods
jnp
cmp
pop
clc
pop
jo
xchg
add
mov
imul
test
stos
cli
mov
mov
sbb
mov
adcb
or
pop
jae
pushf
aam
inc
sbb
inc
and
jle
sub
cld
xchg
rcl
push
lock
mov
lcall
insl
xchg
pop
or
adc
pop
mov
push
rcl
dec
ret
jns
lret
inc
lcall
xchg
pop
ljmp
xor
dec
out
inc
shl
shll
pusha
fcomp
scas
mov
cmc
mov
ret
into
xorl
in
jp
in
inc
mov
out
scas
ljmp
lea
mov
lea
dec
mov
xchg
jo
inc
loop
aas
add
jns
fwait
adc
cmp
adc
adc
orl
xor
loope
mov
jecxz
fnstcw
lods
cmovle
imulb
loopne
inc
adc
test
dec
sbb
cwtl
lds
add
outsb
sub
mov
dec
or
fdivrl
rcl
mov
push
add
test
xchg
jecxz
xchg
sub
dec
ss
repnz
inc
push
int
rclb
nop
daa
mov
mov
aad
dec
out
sbb
xor
lret
jle
inc
adc
outsb
cwtl
fstps
in
jl
pop
inc
and
pop
ret
int
mov
adc
ret
aas
cmp
sbbl
pop
mov
sbbl
inc
jp,pt
adc
imul
movsl
in
fcom
and
loope
sbb
pop
rcrb
into
mov
cmpsl
pop
andps
or
mov
or
xor
cltd
sub
push
pop
in
adc
jl
cmp
ss
push
dec
jp
dec
dec
lret
stos
mov
dec
mov
jb
mov
add
pop
inc
dec
loop
push
push
cmp
scas
insb
stos
sbb
cmp
xchg
mov
or
sub
xorl
pusha
adc
ljmp
push
lds
xchg
or
sub
out
ljmp
mov
cmp
cwtl
xor
lcall
movq
pop
in
push
adc
pop
aam
ret
sub
int3
sarl
xchg
test
mov
push
imul
cs
xlat
les
mov
dec
add
aas
sub
insl
aas
cmpsl
mov
movsb
and
iret
ret
add
xchg
insl
rcll
outsl
in
jae
jmp
adc
push
fiadds
mov
ds
or
inc
not
test
or
sub
add
pop
sbb
nop
xor
aam
into
xchg
sbb
xlat
in
dec
insl
mov
neg
push
push
out
fstpl
pop
gs
out
pop
and
jle
pop
fistl
push
mov
xor
xchg
daa
lret
jns
push
outsl
mov
scas
pop
push
and
sbb
or
mov
cmc
test
sbb
mov
repnz
jns
adc
sti
enter
movsl
loopne
push
and
adc
pop
das
das
filds
aam
xor
pop
leave
mov
sahf
and
fidivs
int
push
out
arpl
adc
cltd
push
jo
test
fwait
jbe
jno
mov
xchg
pop
pop
fs
xor
xchg
stc
add
pop
and
fmul
xchg
les
push
pop
sbb
cmpsb
cmp
or
inc
xchg
jecxz
jge
icebp
mov
mov
and
fcoms
inc
mov
push
into
sub
mov
sub
iret
xor
mov
inc
pop
push
cmp
out
or
rclb
xchg
outsb
xchg
aaa
add
push
shlb
into
shrl
inc
sbb
les
insl
pop
add
loop
lcall
inc
xchg
cmpsb
sub
int
imul
or
mov
gs
in
and
ds
cmc
sub
in
popf
stc
add
jne
repnz
cwtl
repnz
push
cmp
sar
dec
inc
xchg
pushf
cmp
sub
jbe
scas
push
ficomps
pop
jnp
shlb
cmp
sub
lods
cmpsb
xchg
xchg
add
pushf
or
cmp
lods
std
je
cld
popa
cmp
inc
dec
xchg
loopne
and
jle
fnstcw
mov
xchg
loope
jg
lret
and
in
sbb
push
sub
fldcw
adc
and
xor
dec
stc
xchg
mov
adc
xorl
addr16
push
cmp
sti
mov
cltd
sub
push
and
cli
adc
jb
mov
pop
mov
pop
push
and
cmpsb
xor
mov
test
rcrl
pop
xchg
mov
jl
xchg
adc
push
and
loopne
shrl
mov
fnstsw
rol
out
xor
cli
scas
inc
test
jmp
xchg
cltd
cltd
add
pop
xchg
jns
xor
sahf
dec
outsb
rcl
jnp
jb
inc
or
lea
inc
cmp
bound
leave
mov
mov
mov
xor
out
std
iret
mov
cmc
cmp
icebp
gs
aas
sarb
or
addl
ret
sub
jb
and
sahf
ret
scas
xor
jg
int3
cwtl
sbb
lcall
xor
mov
adc
addr16
adc
or
adc
insl
hlt
stos
in
xchg
xchg
mov
repnz
sti
std
push
xor
push
stos
add
adc
stos
push
jg
adc
cmp
mov
fidivrl
fsubrl
jle
cmp
loopne
mov
lret
cmp
mov
xchg
cmp
push
inc
lahf
or
push
mov
jno
mov
mov
push
nop
mov
sub
mov
ja
test
ret
fwait
into
lea
mov
cmp
add
sub
lahf
push
rclb
jecxz
jae
cmp
lods
cmp
dec
jl
push
sbb
ss
imul
out
fistpl
mov
push
inc
jnp
cmp
das
push
xor
xchg
mov
dec
jnp
push
or
mov
mov
xor
add
shrb
jg
mov
loopne
push
ss
mov
cmp
in
stos
lret
es
lods
ljmp
jne
nop
push
adc
imul
jge
dec
dec
xchg
mov
mov
sbb
cld
inc
sarl
hlt
adc
fsincos
rcll
je
and
jne
jp
mov
rclb
iret
in
push
ret
mov
adc
push
cmpsb
insl
mov
adc
mov
inc
pop
rolb
mov
sbb
push
sbb
int
jle
lds
pop
pushl
mov
arpl
mov
fcomp
cs
xor
inc
jg
cli
add
popf
sub
test
jecxz
repnz
orb
dec
pop
lahf
leave
cmp
lock
jg
sub
push
push
or
sti
hlt
sub
nop
push
mov
add
in
lret
jnp
inc
ja
jg
fdiv
mov
sbb
sbb
shlb
aas
mov
mov
fdivr
mov
ret
jno
and
imul
jge
mov
push
cli
xchg
cmp
mov
add
adc
lret
repz
daa
push
lods
inc
xchg
in
lahf
fnsave
out
sbb
loope
outsb
xor
push
int3
jle
ds
pop
mov
leave
dec
jmp
adc
sbb
fwait
push
nop
out
shll
push
shll
or
shlb
and
mov
pop
pop
scas
jae
push
test
mov
cltd
leave
xor
mov
out
or
adc
subl
mov
push
jae
dec
add
inc
mov
dec
xlat
mov
and
xchg
cwtl
inc
pop
mov
mov
test
mov
hlt
faddl
jne
dec
cltd
fsubr
imul
loope
and
stc
xchg
stos
lock
mov
arpl
sub
test
cwtl
lods
lock
js
ds
addr16
mov
mov
enter
das
jge
dec
adc
adc
sub
scas
dec
dec
imul
repnz
xchg
xor
out
adc
rcrl
pop
lods
movsl
lret
jg
cwtl
mov
xchg
dec
sbb
test
repnz
adc
ds
xchg
mov
test
icebp
sbb
sbb
sbb
cmp
les
inc
mov
inc
ret
xchg
push
les
repz
sbb
jmp
xchg
dec
add
xchg
leave
xor
adc
sahf
popf
sarl
mov
pop
inc
adc
nop
fwait
divl
sbb
xchg
ljmp
and
call
movsb
ficompl
xlat
cltd
push
ja
xor
mov
add
jno
movsb
xchg
or
pop
xor
adc
jmp
add
hlt
fcompl
push
insb
jne
movsb
sub
nop
pop
popa
adc
stos
addr16
pop
push
hlt
shll
cmp
sbb
xchg
fnstenv
mov
jg
cmp
and
test
xor
sti
cmc
out
and
mov
cld
jo
lret
fsts
sub
mov
adc
jb
xlat
ljmp
add
push
add
or
shll
mov
das
mov
mov
sub
jl
sbb
fiaddl
xlat
mov
int3
fnstenv
je
shll
mov
push
rcrl
scas
cmpsl
xor
cmp
sbb
adc
enter
divl
fldenv
jnp
xor
jmp
dec
std
pop
cld
fs
repz
sub
push
lds
out
dec
dec
sub
cs
dec
bound
cmp
lret
inc
scas
cmc
movsb
adc
dec
loopne
jg
cli
xlat
mov
outsb
hlt
out
outsl
out
sub
jb
fstpl
mov
movsl
add
mov
inc
cmp
insl
sbb
dec
pushf
ljmp
arpl
xor
lahf
in
and
push
cmp
xor
push
pop
mov
mov
or
xchg
xchg
push
mov
adcb
fstpl
sub
inc
sub
shll
sbb
jno
es
mov
test
testl
insl
inc
lret
jo
jl
sbb
popa
ljmp
add
adc
mov
jmp
mov
push
jbe
inc
ljmp
jbe
daa
cld
pop
lret
jno
jb
or
in
inc
fidivrs
fwait
lcall
jb
sub
and
int3
shll
mov
loope
fwait
pop
xchg
dec
scas
in
jg
sub
sahf
out
enter
out
inc
lret
repz
les
insb
fwait
aaa
movsl
nop
repnz
xorl
mov
xchg
adc
sbb
mov
les
repz
cwtl
dec
push
mov
stc
lds
cmpsl
xchg
pop
outsb
mov
bound
in
inc
push
sbb
xor
mov
inc
inc
mov
call
sbb
mov
jp
pushf
mov
divb
jmp
inc
pop
mov
mov
pusha
pop
fs
dec
dec
pop
mov
pushfw
lcall
mov
addr16
add
nop
imul
push
xor
mov
in
in
mov
push
call
xchg
jg
std
out
push
dec
dec
sbb
imulb
jmp
push
mov
cmp
inc
push
cmc
sbb
pop
inc
movsl
sarl
hlt
ds
jb
mov
cmp
mov
jecxz
mov
nop
and
ja
sbb
push
fiadds
cs
nop
in
jmp
lret
mul
sbb
push
xchg
or
mov
in
lret
xor
repz
add
aaa
mov
outsb
in
jne
arpl
adc
ds
hlt
and
push
dec
mov
loope
and
mov
and
ret
icebp
cmp
jne
jecxz
inc
mov
mov
fsubs
shll
adc
inc
fsqrt
dec
data16
movsl
jo
mov
jge
dec
stos
fmull
xchg
push
adc
scas
loop
xchg
ljmp
sbb
jl
pop
iret
in
xor
cld
and
xchg
mov
pop
mov
hlt
sti
nop
and
xor
xor
sub
insb
inc
lock
adc
fmuls
nop
inc
sbb
bound
faddp
jmp
nop
cmpsl
addr16
sub
push
mov
cmc
sbb
fwait
rolb
xchg
aam
mov
jecxz
sub
push
fwait
mov
inc
loopne
pop
add
dec
int3
pop
mov
mov
pop
enter
fdivs
cmp
lea
sbb
adc
divl
inc
hlt
pushf
mov
and
mov
add
add
mov
push
add
xchg
jp
scas
xchg
sub
push
int
pushw
xor
inc
fstl
mov
fldl
fmulp
xor
push
ja
shrd
test
inc
out
push
movsb
mov
stos
stc
sub
push
mulb
cli
mov
in
xorb
popa
mov
push
or
mov
rclb
sbb
popa
and
movsl
mov
shlb
or
dec
fsts
push
mov
add
sbb
xchg
sub
cmpb
inc
adc
xchg
dec
mov
xchg
and
mov
sub
cs
pop
sbb
ds
sbb
sbb
xor
jge
fs
fisubs
mov
es
push
mov
stos
or
ds
popa
pushf
adc
and
frstor
pusha
and
mov
jne
jns
leave
stos
es
jae
aam
mov
mov
or
sbb
neg
inc
xchg
pop
xor
or
repz
insb
cmp
cwtl
adc
cmp
imul
in
in
push
testb
jne
sub
pop
pop
pushf
and
lret
xor
frstor
int3
out
xchg
pop
ljmp
dec
je
cwtl
sarl
stos
sbb
ficomps
and
fnstcw
dec
sbb
mov
sub
dec
lods
cmp
shlb
call
aaa
inc
aam
lods
out
ds
rcrb
ffree
mov
loopne
mov
bound
cmp
or
shlb
push
lods
jns
push
inc
pop
sub
out
push
xchg
xchg
xchg
push
mov
sbbb
adc
inc
leave
jmp
dec
divb
adc
leave
test
push
movsl
fwait
imul
dec
push
call
movsb
dec
mov
adc
mov
test
add
mov
push
sub
mov
jp
nop
cwtl
sbb
lcall
outsb
push
sbb
or
lcall
es
addr16
sti
icebp
jg
aam
cltd
add
aas
mov
imul
into
hlt
or
xchg
leave
inc
push
pop
inc
ss
int
push
stos
je
das
mov
lea
xor
test
mov
imul
dec
jae
lret
ljmp
aaa
lcall
mov
hlt
adc
push
xchg
adc
aam
lods
lret
adc
sbb
xor
jmp
clc
add
fisubl
adc
jle
imulb
mov
cmc
jge
xor
fld
inc
clc
fs
js
add
sub
sbb
pop
xchg
xor
xchg
icebp
lcall
movsb
pop
lods
scas
call
xchg
outsb
add
cld
xchg
jns
pop
push
je
mov
dec
cmp
sub
and
fidivs
daa
es
push
jnp
cmp
jecxz
or
inc
jbe
or
sub
add
jne
lods
hlt
push
int
mov
hlt
bound
xor
push
xchg
cli
fstpt
bt
lret
outsb
bound
cmp
inc
sbb
cltd
lret
pushf
adc
cli
outsl
test
lock
adc
mov
mov
push
mov
jno
sbb
insb
daa
and
iret
fldcw
adc
ljmp
ljmp
lock
xor
mov
fnstcw
add
xlat
and
mov
mov
pop
xlat
pop
pop
shll
test
sub
push
or
xchg
test
dec
add
fistl
or
lcall
inc
ret
mov
dec
mov
cmp
jg
lock
xchg
out
dec
or
popf
movsb
movsb
xchg
fstl
push
xor
lret
outsl
js
bnd
cmp
out
call
and
push
imul
hlt
add
jns
inc
mov
in
adc
pop
fwait
jbe
into
loopne
lock
cmp
push
jl
into
cmp
mov
insb
out
push
daa
mov
aad
xchg
pusha
clc
xchg
rcr
aaa
mov
inc
cmp
pop
adc
stos
push
subl
jle
or
and
jp
ret
clc
mov
iret
icebp
notl
es
or
sub
xor
xor
int3
out
incb
test
pop
cld
icebp
add
dec
add
jl
in
jle
jae
jecxz
jecxz
iret
sbb
dec
clc
xor
xor
ret
cli
add
xchg
movsb
aas
inc
in
pop
xchg
shrl
or
adc
xchg
orl
dec
ds
adc
into
aas
daa
pop
cmp
xchg
dec
fcmovb
mov
mov
jnp
imul
rclb
in
fmuls
push
or
aaa
jbe
lcall
mov
adc
add
cld
fs
push
in
pop
dec
scas
mov
pop
test
push
imul
arpl
cmpsl
fldcw
jmp
add
dec
inc
sbb
loopne
pop
xor
push
andl
aas
sbb
pop
and
xchg
addr16
pushf
pop
inc
cmp
xor
movsl
push
xchg
out
arpl
test
shlb
ljmp
aad
mov
xchg
and
mov
enter
stos
sbb
cmp
inc
add
pop
dec
mov
icebp
mov
jle
iret
mov
or
rolb
mov
mov
dec
jg
test
mov
je
je
dec
cmc
dec
jo
pop
jbe
mov
fnstsw
xchg
xor
lods
cmp
adc
xchg
imull
or
xor
inc
cmpsb
call
mov
mov
leave
jl
lods
hlt
push
jle
mov
lcall
jmp
push
mov
sbb
or
loopne
add
ja
xchg
inc
pop
push
xor
add
lea
je
jmp
cmp
pop
lods
push
shr
int
cmp
insb
xor
or
and
cli
jp
sbb
push
or
lahf
cltd
jns
adc
xchg
addr16
shrb
pop
cmp
lahf
lods
subb
mov
movsb
das
mov
inc
shll
bnd
dec
push
mull
mov
sbb
mov
xchg
cmp
movsb
jmp
inc
fs
cmpsb
inc
push
pusha
or
scas
stos
xor
les
in
cld
test
xor
int3
gs
push
dec
jae
inc
pop
fadds
out
lock
je
add
sti
scas
outsl
stc
inc
rorl
sahf
dec
xorb
push
das
icebp
daa
insl
push
push
sub
mov
gs
xchg
enter
es
arpl
xor
dec
stos
jbe
jnp
pop
repnz
jmp
fistps
stos
dec
fucom
jnp
jp
inc
jmp
rorl
loopne
imul
and
inc
jae
inc
lret
mov
jmp
and
adc
outsb
mov
xchg
int
sbb
xchg
jb
mov
mov
and
stc
dec
movsb
lods
push
inc
pop
cmp
fdivs
sub
mov
divl
nop
mov
test
cmp
jle
dec
out
lock
lods
rclb
cmp
or
mov
test
lea
cmp
dec
mov
cwtl
jb
cmp
bound
mov
sub
push
sub
dec
lds
inc
imul
mov
jge
mov
fisubl
add
jnp
sbb
mov
jbe
aaa
sbb
lock
add
and
adc
test
mov
mov
outsl
fs
cld
and
xchg
jns
hlt
mov
xchg
jae
out
nop
into
or
xchg
out
sub
cli
dec
lea
out
cld
dec
push
mov
out
out
std
fcomip
sbb
cmp
clts
cmp
cltd
mov
jno
iret
mov
mov
sub
repnz
push
mov
dec
jmp
adc
mov
add
mov
xor
jns
push
xchg
or
and
xchg
ficoms
jecxz
xchg
mov
out
or
mov
fs
add
mov
add
bound
insb
dec
mov
enter
testb
sahf
test
out
pop
and
and
add
leave
stos
fcompl
std
xchg
sub
daa
push
sbb
loopne
xchg
or
xlat
lds
incl
mov
fimull
adc
ret
pop
cmp
mov
cvtdq2ps
out
inc
mov
add
iret
fwait
or
dec
pop
fstpl
lcall
das
sarb
loop
int
fwait
xchg
push
mov
jb
mov
add
test
out
stos
adc
hlt
push
inc
pop
xchg
loope
inc
dec
mov
inc
or
mov
cs
inc
pop
fwait
je
xchg
test
inc
add
pop
cmp
repz
aam
inc
mov
pop
sahf
xchg
outsl
das
jns
nop
mov
lock
ss
cmc
fisttpl
mov
sarb
xor
sub
xchg
mov
mov
jnp
jle
mov
dec
mov
dec
stos
push
stc
xchg
sbb
inc
test
xor
add
mov
xchg
push
int
fisubs
and
sub
mov
push
leave
ljmp
imul
sbb
mov
int3
mov
int3
movsl
scas
movlhps
and
xchg
sbb
xor
lods
rorb
adc
loope
pop
sarb
idivb
jbe,pt
loope
mov
jns
in
adc
data16
lods
jbe
hlt
adc
push
lea
rcrb
mov
ds
into
mov
dec
mov
mov
xchg
push
xchg
push
aam
cmp
xor
adc
xor
dec
add
push
pop
mov
popf
sub
hlt
in
mov
cmp
das
lods
movw
mov
mov
cmpsb
mov
or
int
dec
push
cld
cmp
jb
outsl
and
xor
pop
mov
pop
jno
jae
fsubr
int
push
aaa
xchg
cmp
push
mov
ds
aas
cmp
push
ljmp
xor
xchg
loop
jle
mull
sti
shlb
jg
and
sub
sbb
sub
stos
inc
sahf
sbb
mov
add
out
sub
imul
cs
fcompl
call
xchg
js
xchg
andps
fists
cli
leave
int3
mov
jle
cmc
and
mov
in
in
repnz
or
push
addr16
jg
xchg
mov
pusha
sbb
jb
in
or
lds
popa
xchg
test
and
sbb
ljmpw
pop
dec
mov
fiaddl
ret
arpl
in
and
xchg
inc
mov
and
lock
and
sti
neg
lock
arpl
idiv
ljmp
inc
jae
aam
pop
jns
sbbb
sbb
aas
ja
mov
lcall
push
decl
addb
xchg
mov
pop
insl
les
dec
xchg
dec
jae
mov
fsubs
dec
fistl
cmp
addl
sub
sub
aam
lods
jg
cli
jae
jbe
sti
jae
cmp
dec
in
nop
add
xchg
mov
sarb
cmp
dec
gs
or
loop
and
mov
test
lock
cmp
mov
dec
inc
fnstcw
test
stc
cli
inc
sahf
lcall
not
or
add
mov
nop
xor
shll
sbb
in
aas
add
scas
or
ja
lods
int3
mov
inc
xchg
sahf
in
andb
fistpl
or
lods
sbb
imull
xchg
dec
jg
xor
jno
push
mov
rclb
inc
imul
sti
not
popl
mov
icebp
pusha
jmp
inc
jge
mov
sarl
outsl
mov
and
jmp
ja
sbb
add
mov
daa
fsts
pop
cmp
std
subl
sbb
xchg
fnstenv
dec
mov
sub
mov
out
lods
js
lret
mov
lea
in
cmp
xor
cmc
lock
push
or
and
out
fdivrs
fwait
jbe
arpl
pop
andb
sbb
mov
stc
sbb
or
outsl
pop
pop
inc
fisubrs
rolb
mov
ret
mov
popa
jae
mov
aaa
repnz
pop
stos
xor
loope
mov
mov
clc
loop
js
out
mov
sub
fiaddl
notb
ret
out
fs
cmp
mov
push
xor
jnp
cli
jnp
clc
mov
cmp
jae
xchg
rclb
push
xlat
clc
xorb
cmp
fucomip
xchg
mov
pop
fwait
ret
iret
pop
push
movsb
negl
fsubs
push
loope
dec
xlat
out
cmp
test
leave
sbb
sub
cmpsl
push
inc
cmp
aaa
repnz
cmp
mov
test
rcll
xorl
std
mov
push
jecxz
xor
inc
xor
in
pop
dec
cmp
mov
sub
cmp
dec
sbb
ja
stc
xchg
bound
dec
js
mov
or
dec
sub
xorl
inc
jo
adc
pop
cli
jle
cmpsb
iret
and
xchg
lds
cltd
push
ljmp
rcrl
or
int
imul
mov
or
sub
and
negb
mov
jo
jne
test
sub
or
rclb
and
mov
jb
xor
sbb
fcoml
cmp
sub
add
xchg
aam
pop
int
insl
xchg
push
hlt
xor
xor
iret
jnp
fnstcw
push
shll
sbb
sbbl
adc
lods
pop
clc
and
bound
and
xor
mov
push
gs
aaa
daa
jg
mov
mov
ret
xor
lret
in
inc
mov
jo
adcb
orb
xchg
sbb
shll
push
mov
sub
xor
in
inc
lods
sub
leave
adc
xchg
cmp
mov
cld
pop
pop
lahf
out
pop
into
xor
pop
repnz
lods
stos
xchg
push
sti
test
negb
test
push
cmp
xchg
sub
xchg
fabs
xor
adc
and
inc
loope
adc
sbb
xchg
or
mov
xor
lods
call
out
rcll
push
mov
cmp
sbb
mov
push
mov
test
lcall
push
orl
lods
imul
xchg
dec
adc
or
and
fnsave
lcall
filds
pop
scas
xchg
sub
adc
jg
jae
or
mov
dec
movsl
push
in
aas
sbbb
pusha
cmp
hlt
mov
icebp
shl
cmpsl
pushf
fcmovb
lock
inc
leave
mov
sub
sbb
pushf
enter
mov
mov
test
pop
enter
xor
adc
pop
outsl
xchg
push
xchg
popf
push
nop
cltd
scas
sbb
jns
and
ret
or
xor
jb
jbe
je
lea
out
pushf
or
out
pop
push
scas
lea
sbb
cltd
test
inc
push
xchg
fcomp
mov
mov
dec
ljmp
std
imulb
lock
sub
mov
push
rcrl
iret
sbb
stc
or
test
insb
sar
adc
or
inc
das
jne
mov
stc
addb
jge
or
or
out
fmuls
cmp
inc
addl
inc
mov
scas
mov
out
and
mov
add
arpl
out
xchg
sub
test
loop
mov
imul
in
adc
mov
adc
in
push
xlat
popa
jmp
mov
xchg
mov
mov
jnp
aad
fbstp
lret
adcl
and
aaa
mov
pop
aaa
lods
mov
cmp
or
jns
dec
mov
gs
nop
dec
sbb
or
mov
loope
inc
ljmp
cmp
aas
cs
sub
push
add
mov
int
adc
fildl
mov
xor
mov
push
push
xchg
pusha
aad
adc
repz
int3
cmp
adc
imul
movsl
repnz
ja,pn
test
mov
sbb
test
jns
xlat
dec
aas
das
xchg
mov
pushf
push
das
fwait
push
xchg
or
push
or
hlt
shlb
inc
jecxz
movsb
sub
mov
inc
out
rolb
push
mov
cli
cwtl
xor
sub
into
inc
sbb
inc
rorb
mov
and
test
mov
xor
sub
inc
cmp
xchg
out
pop
pop
hlt
rol
sbb
test
mov
sbb
in
xchg
outsb
mov
stos
fisttpll
scas
inc
mov
cmp
cmp
pop
push
push
mov
mov
rcr
push
int
sub
addr16
mov
xchg
iret
repz
fisubrl
inc
cmc
cmp
push
shll
sub
mov
cmpb
sub
repz
mov
insb
rcll
cmp
dec
push
push
mov
test
outsb
loop
push
mov
rcll
stos
adc
sub
pop
jmp
mov
xor
fisttpl
iret
add
cmp
into
adc
bound
jmp
dec
xchg
clc
and
repz
imul
sub
pop
imul
pop
xchg
ret
xor
push
add
fisttps
add
dec
or
cmp
inc
push
jecxz
lcall
addr16
cmpsl
adc
mov
mov
dec
gs
fldl
shr
push
daa
jecxz
in
add
mov
mov
stc
test
shll
lret
rol
in
mov
stos
out
inc
mov
and
in
mov
and
add
movsb
arpl
pop
dec
aas
add
xor
fildl
adc
es
cmp
pop
pushf
cmpsl
insb
shrb
push
cli
cli
clc
xor
xchg
xor
jb
pop
call
or
inc
mov
int
jl
mov
iret
outsb
mov
add
push
aaa
test
lahf
or
imul
int3
insb
mov
jns
ja
lcall
sub
call
test
subb
shrb
xor
pushf
popf
push
push
stos
or
inc
inc
jmp
insl
sbb
or
mov
push
data16
sahf
jp
sub
or
daa
xor
inc
cltd
mov
xchg
pop
fmull
sub
mov
mov
popa
rorl
pushf
mov
jle
scas
lods
in
lea
rorl
es
out
sub
icebp
mov
sub
mov
cmpsl
outsb
push
jmp
jo
aas
out
adc
aas
mov
fsubl
mov
cmp
adc
xchg
inc
or
xchg
sti
jecxz
push
lahf
xlat
inc
bound
fs
push
mov
sub
ret
xchg
negl
cmp
lcall
cld
mov
sbb
xchg
out
or
jp
aam
add
xchg
negl
fcoml
test
test
dec
pop
sbb
repz
sti
roll
inc
xchg
test
gs
lahf
xchg
test
shrl
dec
fwait
in
cltd
stos
popa
mov
or
dec
sub
inc
mov
xchg
loope
rorb
xor
dec
add
ja
mov
cld
sbb
or
dec
push
cs
test
nop
mov
das
mov
sahf
dec
dec
pop
repnz
push
xor
adc
pop
mov
sbb
fsubl
xchg
pop
cmpsb
pop
imul
shl
dec
js
and
stos
mov
add
jg
in
xchg
mov
adc
push
pop
inc
sbb
jg
fldt
mov
jecxz
fmuls
jb
adc
test
stos
jb
mov
xlat
lret
sub
flds
out
mov
sub
and
mov
or
mov
ret
mov
inc
pop
fstl
iret
subb
addl
and
mov
fcomip
pop
add
out
loopne
leave
andl
sahf
je
or
popf
xor
push
out
and
shlb
adc
test
ss
addr16
cwtl
int
xor
cld
aam
outsb
test
xor
pop
fdivl
mov
dec
sub
sbb
int
ret
mov
pop
lock
xchg
addl
adc
pusha
movsl
xor
mov
cli
fdivrs
leave
xchg
jp
push
outsb
cld
sahf
lds
ljmp
jns
jne
jle
testl
scas
mov
jl
mov
sbb
movsb
sbb
sbb
mov
imul
or
pop
fmulp
fsubs
test
dec
jo
adcb
jns
scas
clc
into
jle
movntq
dec
in
cmc
ja
push
jl
mov
mov
pushf
rcrb
jo
lret
shr
push
cli
pusha
adc
push
adc
sbb
and
outsl
daa
icebp
and
rclb
xorl
xchg
stos
outsl
and
dec
and
jne
add
jae
pop
lods
sbbl
pushf
pop
inc
jge
jl
nop
mov
jmp
nop
out
inc
test
mov
dec
lea
repz
stos
mov
lods
mov
pop
xchg
mov
pop
repz
mov
adc
lahf
xchg
mov
scas
dec
cmp
ret
pop
pop
sub
push
push
jb
loopne
and
mov
sbb
dec
int
mov
jo
sbb
inc
or
xchg
aad
push
stos
movsb
test
movsl
mov
push
lcall
xchg
test
lea
test
cld
mov
jle
int
pushf
pushf
push
loope
shlb
xlat
pminub
test
pop
lock
inc
loopne
mov
js
xor
test
or
mov
cmp
je
repnz
lds
movsb
xchg
popf
fsubr
sahf
testl
pop
sti
repnz
adc
push
or
test
dec
fldl
frstor
fsubr
xor
mov
dec
mov
addl
cmp
push
cmc
push
adc
push
jbe
sbb
mov
push
fadds
pop
daa
adc
lods
adc
int
test
fcoml
pushf
sahf
jb
test
leave
xchg
xchg
cltd
xlat
fnsave
sub
into
test
enter
sbb
pop
insl
idivl
and
lret
arpl
std
rcrl
mov
scas
pop
push
dec
std
push
mov
push
fisttps
inc
in
ja
shrl
sbb
mov
mov
lock
mov
mov
mov
les
or
stos
data16
test
fistpl
mov
and
pop
cld
repnz
mov
sarb
cwtl
jle
sub
sub
mov
push
int3
lret
movsl
test
repnz
push
mov
lods
frstor
fimull
jmp
push
and
in
jle
dec
sub
out
sub
enter
fdivs
popa
add
inc
out
negb
inc
jb
mov
rcrb
sbb
test
out
xchg
jmp
daa
fimull
mov
xchg
loopne
pop
clc
cmp
xor
xlat
in
shll
jg
xorl
notl
xchg
xor
xor
mov
lds
push
movsl
dec
fmull
lcall
push
mov
divl
pop
test
mov
addr16
ss
mov
inc
stos
jb
outsb
sub
sbb
addl
lods
inc
lea
push
ret
sub
out
adc
pop
push
test
adc
mov
push
adc
mov
cmp
inc
mov
jnp
scas
cs
stc
jnp
ret
pusha
movsl
or
fistpl
int
subl
cmp
pop
incb
cmp
mov
les
push
shrb
in
test
test
hlt
or
iret
pop
cld
add
addl
ja
mov
jae
push
sub
inc
push
sbb
adc
hlt
sbb
mov
pop
push
clc
mov
mov
mov
cmp
cmp
jmp
mov
sub
gs
cmpsl
lods
stos
push
push
test
sub
add
add
and
aam
and
sbb
inc
rcl
data16
mov
fdivrl
cltd
rcll
adc
pop
push
jb
adc
xor
and
je
cmp
outsl
aaa
dec
ret
ret
push
mov
pop
lds
mov
in
movsb
pop
in
call
fsubrs
or
cmpsl
aam
sti
arpl
adc
or
mov
and
jmp
pop
jae
repz
addr16
loope
lret
jge
pushf
jbe
ret
adc
pop
jmp
je
sti
xor
out
rolb
movsl
xchg
mov
ret
mov
fwait
sbb
cli
inc
mov
shll
addr16
cmpsb
sbb
in
mov
hlt
out
cld
pop
lret
cmp
jp
pop
mov
xchg
mov
int3
std
sbb
xor
sub
pop
adcb
divb
push
inc
adcl
and
popw
jne
scas
xor
xor
push
jle
insl
pop
sarb
out
inc
std
mov
fstps
pop
or
subb
movsb
mov
sub
std
sub
out
mov
stc
in
adc
jg
jg
outsl
fs
inc
mov
adc
pop
sbb
or
fisttpll
test
inc
rorb
je
arpl
adc
jns
call
inc
sub
push
cmp
sub
out
test
push
cmp
enter
in
jmp
mov
pop
mov
xor
sbb
stos
jne
in
xchg
jge
xor
xor
push
push
mov
sbb
ljmp
sub
les
and
in
push
mov
push
ror
enter
dec
mov
mov
mov
pop
cli
pushf
negb
push
daa
sbb
add
jno
leave
adc
cmp
mov
ljmp
insl
jp
cld
mov
je
rorb
mov
adc
and
outsl
mov
enter
cmp
add
sbb
mov
hlt
xchg
int
pop
out
js
mov
jmp
mov
les
inc
push
out
ret
inc
push
cmp
lds
jg
clc
add
push
movsb
push
pop
pop
loopne
push
imul
xchg
mov
dec
ret
inc
xchg
dec
movsb
mov
and
aaa
dec
mov
fistps
in
lea
addl
repnz
mov
addr16
sahf
xchg
into
xchg
pop
int3
lahf
cwtl
jno
xlat
stos
int
loop
mov
mov
push
xor
inc
xchg
pop
pop
ret
iret
out
mov
fstpl
aas
mov
das
psrad
out
mov
inc
pop
aas
subl
out
test
shll
cmp
mov
dec
fcoms
lcall
testl
dec
mov
add
in
out
xchg
pop
mov
int3
push
pop
pop
sbb
pop
loope
call
add
jecxz
decb
aad
xlat
or
adc
cmp
lahf
mov
cmpsl
mov
imul
cmc
int3
sahf
mov
sbb
inc
loop
add
pop
aas
xlat
push
jg
jmp
jmp
adc
fsubs
sub
in
sbb
mov
or
fs
pop
test
mov
pop
movsb
sub
push
mov
fwait
mov
in
adcb
int3
aad
pop
daa
lret
insb
in
cmp
movsl
jecxz
pop
or
shlb
aaa
fs
push
test
jp
push
jmp
fildl
push
push
adc
push
rcll
ds
adc
and
xchg
gs
mov
sub
cmc
sbbb
xor
xor
inc
imull
lret
loop
cmc
incl
std
cwtl
cmp
jnp
xor
adc
and
jecxz
adc
mov
mov
pop
pop
jae
cmpl
mov
xchg
testb
fistpl
in
icebp
leave
in
push
ret
add
xlat
pop
push
call
lods
test
xchg
mov
push
sbb
aas
xor
fs
int
jge
add
pop
stos
mov
lcall
pop
jle
inc
and
and
rcrl
nop
cmc
lret
xlat
dec
ja
aas
or
les
push
pop
inc
mov
add
sub
inc
adc
loope
fwait
xchg
sar
jle
inc
push
push
filds
or
jle
shlb
out
int
adc
xchg
dec
lcall
pop
and
mov
push
enter
inc
mov
jl
imul
ret
cwtl
and
mov
cmp
cltd
int
or
push
jmp
jp
push
imul
ret
fcompl
icebp
int
adcb
call
mov
xor
shl
pop
push
pop
cmp
mov
jns
lret
push
loop
loope
in
sub
or
iret
test
adc
jmp
shl
mov
xor
jb
and
push
loope
mov
std
or
lds
imull
mov
sbb
sub
into
negb
jnp
xchg
insl
mov
int
repz
inc
popf
shrb
movsb
cli
sub
stos
cmp
xchg
inc
push
xor
inc
mov
cmp
js
cmpb
mov
mov
inc
push
xor
mov
xor
and
int3
lret
dec
add
push
cmc
dec
testl
add
pop
jbe
lds
nop
es
cmc
push
pop
inc
fisttpl
lock
sub
inc
sub
mov
jmp
scas
cmc
inc
fsubr
dec
aas
mov
pop
andl
movsl
dec
out
mov
xchg
cmpsl
jecxz
sti
sbb
fidivl
stos
sub
insb
hlt
call
jmp
add
jb
outsb
imul
pop
mov
jle
fwait
shlb
mov
or
xchg
xor
imul
or
adc
or
mov
mov
jle
jae
cmp
rcr
inc
mov
mov
icebp
cmpb
sub
push
jp
imul
stos
jnp
xor
test
sti
out
out
decl
dec
dec
xlat
mov
loope
cmp
hlt
fnstsw
adc
enter
fstps
lods
cmp
and
mov
jge
loopne
sub
jo
sub
push
xor
mov
into
jo
dec
xor
push
sub
test
fcmovu
std
jp
dec
and
jae
xchg
or
aas
sub
fildl
or
out
dec
int
sub
loop
test
movsl
xlat
mov
mov
out
outsl
test
movsb
sbb
fildll
jl
pop
mov
adc
je
sbb
in
sbb
roll
popf
mov
inc
mov
nop
pop
pop
or
pop
ljmp
jo
ret
outsl
jmp
int
sbb
xchg
mov
add
add
arpl
mov
test
out
cmp
add
push
call
ficomps
xchg
jno
mov
pop
adcl
inc
sbb
fldt
jge
ret
mov
inc
sbb
add
bound
stos
test
aad
push
xchg
pop
adc
jbe
push
mov
out
popa
negb
loopne
and
dec
or
movsb
xchg
ficomps
outsl
xor
fildll
lock
in
jge
cmp
mov
mov
mov
mov
sub
and
xchg
sub
lret
je
fisubl
mov
cmp
cmp
inc
jl
dec
fsubrp
ret
fisttps
add
ja
sti
jbe
sub
pop
js
ret
push
data16
mov
xchg
pop
mov
sub
movsb
outsl
mov
lds
dec
dec
lret
jl
add
add
call
ret
enter
leave
test
pushf
and
and
xchg
sbb
aas
js
mull
cld
xchg
jge
cli
out
push
mov
mov
lcall
push
inc
loop
cmp
flds
pop
fs
cmpsb
rclb
hlt
imul
inc
add
out
loop
movsb
push
jp
pusha
push
push
gs
pop
std
std
push
push
cmp
insl
je
push
and
jae
add
lock
out
push
pop
pop
fldcw
repz
mov
out
fidivl
jge
add
lahf
insb
nop
cltd
push
jo
lret
leave
pop
rolb
test
adc
out
inc
mov
inc
scas
insl
fidivrl
call
lahf
pop
ret
mov
mov
jb
inc
shlb
xor
xlat
jg
out
fwait
or
cmp
out
cmpsl
add
rep
push
movsl
das
pushf
lret
inc
sub
jle
lret
fidivrl
cmpb
push
inc
inc
outsl
sub
in
cli
fstpt
sbb
ljmp
mov
imul
mov
mov
cmp
mov
jo
shll
stos
rcrl
ficoms
jbe
scas
inc
in
jns
mov
popa
cmp
xor
les
insl
lret
sbb
mov
pop
sub
and
mov
leave
outsb
cmp
pop
jg
xor
inc
loop
aaa
pushf
sahf
or
js
sahf
sub
sub
pop
popa
mov
popf
fldcw
mov
push
xchg
cmpsl
cmc
test
push
push
int3
add
push
rol
out
sub
xor
dec
adc
icebp
push
inc
sbb
jbe,pn
mov
movd
mov
xchg
sbb
sub
out
mov
mov
jp
leave
data16
or
jae
cmc
in
cltd
test
mov
ljmp
sarb
cmpsb
aas
dec
push
icebp
cmp
jecxz
cs
jl
xor
or
xorl
push
sub
loop
loope
sbb
loopne
inc
jg
jp
pop
fs
pop
jbe
andl
mull
test
or
aas
mov
pop
add
pop
jmp
cmp
lret
dec
leave
jecxz
ret
ds
fimuls
lods
ja
test
jmp
dec
sub
pop
mov
sub
sbb
daa
xchg
cmpsl
xchg
scas
gs
cmp
mov
mov
pop
mov
mov
pop
and
push
push
push
sub
aas
lcall
shlb
in
sahf
cld
xchg
xchg
mov
in
arpl
jnp
or
data16
mov
adc
and
inc
lods
dec
nop
jle
push
mov
out
rcr
lods
shll
nop
cmp
imul
fucomip
add
adc
mov
fidivl
popa
dec
rclb
ret
push
push
push
popa
adc
inc
jmp
jle
and
push
and
fldt
adc
dec
mov
test
push
aas
mov
cmp
lea
jns
outsb
mov
inc
ret
cli
or
call
jge
lret
dec
cli
out
xor
stos
in
push
xchg
jbe
or
xor
andl
cld
jns
push
xchg
fdiv
inc
loopne
adc
lods
cmp
add
sub
sahf
pop
shlb
dec
lods
pop
mull
add
popa
inc
cmp
cmpsb
mov
add
mov
jp
pop
lods
mov
mov
or
jb
mov
cltd
nop
mov
roll
sbb
std
mov
push
inc
aad
nop
sub
mov
pop
ror
xlat
xor
jmp
jecxz
sbbl
jge
jnp
fwait
popf
les
fs
daa
mov
lret
and
jb
ss
aas
loope
test
adc
nop
and
imul
cmp
jle
cld
or
mov
adc
push
or
in
repnz
jg
adc
shr
decb
in
inc
aaa
mov
testl
push
mov
sub
test
mov
fildl
jle
pop
push
pop
call
jbe
je
aam
out
sti
add
mov
sahf
vpsrad
adcl
mov
mov
in
outsb
ret
sub
inc
cmpsl
ror
out
cmp
testb
arpl
scas
or
outsl
cmpsl
dec
xorl
mov
bound
xor
sub
int
jmp
jnp
push
icebp
sub
pop
in
mov
iret
mov
or
push
out
loopne
sbb
cmp
cmp
jmp
out
jecxz
adc
lcall
leave
negb
add
rol
sarb
adc
push
jecxz,pt
leave
xor
push
dec
pop
inc
xor
sarb
sbb
xchg
repz
sbb
ljmp
xchg
mov
std
fcoms
out
lret
imul
sub
pop
lea
lret
pop
mov
adc
enter
inc
scas
xchg
mov
gs
push
add
stc
movsb
dec
cwtl
sub
mov
mov
sub
scas
jb
pop
insb
and
add
sbb
int
out
and
scas
cmp
cld
sti
ret
lcall
mov
add
cmp
lods
pushf
mov
ds
and
jb
push
loop
enter
dec
adc
aaa
lea
loopne
sbb
xchg
les
or
add
mov
in
insl
bound
mov
into
test
jne
sbb
jns,pt
pop
add
pop
push
push
movsb
js
push
ss
ja
mov
out
jge
rcll
push
lods
add
cld
push
and
pop
aad
mov
orl
insb
cmp
sub
js
mov
xchg
cmp
je
jge
pusha
mov
into
pop
adc
std
scas
fidivl
insb
idiv
add
cmp
jnp
pop
inc
and
mov
cwtl
pop
rorb
mov
add
enter
pop
addr16
fcoml
xor
push
push
addl
dec
popa
inc
fimull
shr
pop
enter
sbb
clc
mov
aas
pop
iret
sub
inc
mov
aas
or
add
adc
xchg
jecxz
popa
and
std
pop
mov
cmpsl
dec
test
cmc
mull
dec
and
sbb
iret
orl
popa
repnz
add
clc
pop
cmp
cmp
mov
dec
pop
rorl
dec
xlat
xor
or
cmp
push
hlt
dec
adc
sbb
mulb
inc
push
cmp
rorl
push
movsl
cli
ret
pop
in
rcl
lret
lods
das
mov
cli
pop
or
iret
jns
push
mov
and
decl
mov
ss
mov
adc
inc
inc
push
mov
es
push
stc
fwait
sbb
out
pop
aaa
das
sbb
adc
push
test
je
insb
dec
hlt
in
jmp
mov
daa
dec
test
push
aam
call
xchg
xor
mov
cmp
pushf
dec
push
or
test
mov
mov
mov
push
or
ds
dec
nop
aaa
dec
sbb
lret
loop
mov
into
dec
outsb
pop
inc
adc
int
push
mov
dec
sub
sub
jge
les
sub
shlb
jl
xor
lret
aad
inc
cmp
fldl
cmp
adc
mov
mov
pop
mull
sub
sbb
push
pop
andl
xchg
adc
negl
cmpl
mov
and
pop
mov
icebp
icebp
push
cmp
aas
int
mov
lret
movsl
adc
loope
fbld
sbb
repz
push
iret
dec
jg
cmp
in
je
mov
fnsave
stc
leave
inc
shlb
fwait
out
inc
das
xchg
push
mov
outsl
loope
push
in
adc
or
cmp
pop
sarb
data16
dec
out
cmp
scas
cmpsb
xchg
and
shl
xor
add
jbe
push
jo
stc
stos
add
mov
or
pop
sub
lods
sbb
repz
sbb
push
mov
jp
pushf
dec
mov
cli
inc
gs
pop
xchg
mov
mov
insl
mov
repz
lret
xor
aaa
jmp
mov
push
movsb
adcb
aaa
imul
lahf
dec
jmp
jge
jb
jge
out
sbb
cmpl
cmp
push
and
fsubr
adc
adc
adc
je
and
sub
dec
lcall
jbe
xor
adc
fsubr
and
fildl
and
push
xchg
movsb
js
mov
enter
lds
cmp
push
adc
jp
ds
pop
adc
out
mov
push
nop
stos
aas
addr16
cwtl
out
jo
popa
dec
adc
jmp
pop
mov
xor
addb
leave
repz
pop
mov
sbb
fisubrs
ret
or
lret
std
ret
rcrb
cld
mov
cs
popf
addr16
inc
mov
adcb
mov
and
cld
into
sub
mov
cwtl
adc
loopne
lret
fucomip
mov
lret
push
test
pop
std
adc
rorl
xchg
cmp
add
data16
shl
mov
int
loope
dec
movsl
adc
adc
rcrb
fsubr
in
inc
insl
test
lods
pop
xor
popf
rclb
or
mov
cmp
popa
inc
scas
ja
xor
test
xchg
jle
jnp
std
and
daa
or
pusha
xor
stos
repnz
sbb
shlb
les
and
int3
je
test
mov
movsb
ret
adc
mov
cmpsb
jmp
jbe
cmp
lret
pop
call
pop
lock
lret
roll
inc
xchg
and
push
iret
test
sbb
mov
popa
daa
mov
or
sub
frstor
dec
jl
ret
sub
mov
sub
push
add
addr16
jb
aad
mov
sahf
mov
jo
ds
sub
xchg
or
sub
bound
ret
stos
inc
or
xor
jnp
and
inc
or
cmpl
inc
int3
mov
sub
repz
pop
aad
into
mov
sbb
or
int
ds
or
or
push
cmp
shll
outsb
pusha
cmp
pop
mov
pop
push
push
adc
scas
cmpsl
xor
pop
add
loop
ret
leave
lcall
mov
dec
pop
add
ja
movsl
icebp
je
shll
mov
aad
xor
pop
xor
or
inc
enter
into
push
adcb
push
xor
in
cmpsl
jl
pop
xchg
xor
aas
movsb
cmpsl
je
sub
jno
mov
adc
mov
xor
jbe
cmp
push
jecxz
in
push
aam
or
mov
test
pop
cmp
mov
popf
nop
sbb
lods
cli
daa
push
or
ret
in
inc
fcomip
ret
mov
cld
idiv
push
mov
cwtl
imul
cmp
mov
jae
jo
cmp
jge
flds
pop
or
fldenv
mov
ss
in
sub
popa
add
sub
mov
stos
sbb
clc
leave
clc
rcl
int3
cmpsl
mov
dec
std
sub
pop
mov
add
sub
inc
or
lcall
xchg
ficoms
dec
repnz
lret
imull
jno
dec
sbb
addb
push
sub
shl
lahf
pop
ret
outsb
sub
fisubrl
fidivrl
pop
pop
xchg
outsl
sbb
imul
cmpsb
cmc
roll
int
fsubrl
out
add
inc
or
sti
in
js
push
aad
sub
cmp
jae
xchg
hlt
mov
addb
lahf
jo
mov
push
dec
cld
addr16
addr16
cmp
sbb
je
imul
ljmp
dec
add
xchg
dec
push
xchg
ljmp
dec
lds
lahf
daa
mov
out
mov
push
nop
iret
lods
pushf
or
jne
cli
out
mov
pop
jo
lea
loope
or
sbb
lcall
mov
xchg
jns
test
stos
imull
jns
push
jo
xor
add
aam
xchg
cmp
pop
fcom
rclb
inc
or
push
jecxz
nop
cmpsb
pop
dec
xor
xchg
pusha
es
mov
pop
jb
or
imul
fdivp
pop
xchg
lret
mov
test
mov
lods
xchg
add
sub
jne
add
in
dec
dec
xchg
jle
inc
clc
and
fs
jp
sub
add
xor
hlt
lock
mov
orb
fidivrs
ljmp
in
inc
pop
mov
dec
adc
leave
jo
pop
js
mov
repnz
add
popa
dec
je
loopne
fyl2x
inc
inc
ljmp
adc
xchg
int3
cmp
add
mov
cwtl
sbb
ds
lock
mov
test
lds
or
imul
es
inc
outsl
stos
adc
mov
mov
xor
pushf
mov
xor
add
jns
fsubrp
fnstsw
je
stos
ja
fld
dec
movsb
pop
or
xor
mov
jecxz
jns
sub
and
es
sbb
xor
mov
jno
cmp
pop
fistps
cmpb
repz
test
pop
xor
ret
xchg
dec
cmp
outsl
push
loop
in
push
repz
dec
mov
add
test
mov
repnz
je
lret
adc
out
pop
push
outsb
or
and
add
mov
ret
dec
ds
mov
push
cli
addr16
xchg
mov
adc
enter
sub
xchg
outsb
bswap
dec
das
push
lea
call
lahf
push
mov
mov
sbb
outsl
pop
sub
push
jnp
repnz
fcom
xchg
mov
sbb
popf
or
sarl
sbb
inc
mov
bound
or
arpl
fbstp
xchg
js
dec
add
in
out
add
mov
shll
cmpsl
ds
mov
push
rorl
push
and
lcall
jecxz
push
into
lea
and
mov
enter
sub
jbe
mov
mov
lret
mov
leave
lds
adc
or
dec
lahf
sub
or
loopne
inc
cmp
mov
adc
inc
iret
and
sub
sbb
push
sub
cmp
jb
aas
jecxz
add
cld
insl
out
cmpsb
cmpsb
test
adc
lcall
sbb
push
cmp
adc
mov
test
mov
add
pushf
lea
inc
push
push
mov
cltd
cltd
je
pushf
sbb
add
dec
fdivp
in
push
push
imul
xor
adc
sarl
jp
js
jno
mov
sub
es
sub
push
lds
push
xchg
xchg
cmp
mov
pop
add
lods
leave
xchg
cmp
scas
movsl
loop
cmp
adc
in
sub
data16
lcall
dec
jp
lret
lds
dec
mov
or
add
jno
mov
pop
mov
jp
and
repnz
and
xchg
or
sbb
int
push
es
mov
cmpsl
call
dec
popa
clc
das
mov
mov
nop
jl
stc
outsl
insl
sub
jge
dec
es
xlat
dec
push
xchg
addr16
ror
les
pop
pop
ljmp
sar
pop
popf
in
movsl
cmpsb
inc
js
sbb
push
mov
cld
pushf
pop
pop
cwtl
sbb
sub
push
dec
cmp
mov
outsl
cmp
and
fimuls
repz
div
add
jmp
mov
cmp
sbb
divb
imul
adc
xchg
or
popf
popa
sarl
jns
loope
inc
aam
sbb
jbe
shll
push
stos
repnz
jecxz
mov
push
xor
jne
xor
pop
or
nop
add
test
addps
nop
icebp
jo
insl
rol
into
ss
stos
in
daa
xchg
jae
aaa
pop
stos
and
jmp
sarl
inc
das
inc
mov
insb
dec
adc
fnstenv
lret
mov
ret
xchg
cmpsl
and
insl
outsb
jae
xor
into
test
je
insl
or
ret
xchg
pop
cmc
cmpsb
mov
cmp
mov
mov
dec
xchg
popa
sahf
scas
mov
adc
shll
fbld
xchg
pop
or
aas
lods
dec
pop
push
inc
pushf
pcmpeqd
push
mov
xor
cmp
repnz
pusha
mov
xchg
push
sub
mov
shl
ret
inc
cltd
and
or
mov
add
xchg
adc
pop
in
mov
dec
jae
test
or
xchg
sub
fists
sbb
cs
mov
les
add
xchg
les
inc
mov
ja
insb
rorl
pop
mov
in
inc
pop
jbe
cmp
es
xchg
pop
testb
in
adc
xchg
test
leave
xor
outsb
fildl
clc
xchg
and
pop
jp
mov
sub
xor
in
sarb
xchg
xor
xor
adcb
mov
xchg
add
cwtl
icebp
outsl
andl
xlat
shrl
mov
scas
pop
and
enter
rcll
xchg
das
rcll
mov
xchg
mov
das
pushf
call
out
mov
xlat
je
int3
popa
push
or
lret
push
or
popa
insl
ds
mov
imull
cmp
mov
add
shrb
enter
call
pop
ds
push
sub
rorb
das
push
or
mov
xlat
push
fists
xor
or
ds
xor
push
xor
lcall
mov
jo
ja
addb
pop
pop
clc
sbb
das
jl
stos
lret
xchg
push
mov
out
mov
sub
lods
dec
outsl
aaa
ljmp
jle
xchg
out
std
gs
jae
test
outsl
push
sbbb
lcall
jl
pop
inc
jnp
roll
mov
test
mov
xchg
ljmp
cmpsl
rorb
sub
and
mov
lds
adc
pop
stos
cmpsb
repnz
dec
inc
and
adc
xor
pop
dec
dec
stc
je
xchg
or
and
add
cli
and
dec
mov
pushf
in
test
jnp
xchg
ss
adc
bound
test
cmp
adc
stc
dec
or
add
sub
mov
sub
int3
jp
shlb
in
insb
push
dec
inc
lds
shlb
mov
dec
std
movsl
ficoml
xorb
enter
call
sub
lea
stos
jbe
inc
sub
in
movl
xchg
imul
xchg
xchg
mov
inc
inc
rcr
imul
ljmp
jge
in
and
and
das
jae
xor
loope
xchg
fisttps
scas
sbb
pushl
jnp,pt
filds
mov
in
lock
push
cs
mov
int3
dec
mov
pop
imul
add
or
mov
adc
addr16
xchg
ret
shl
xchg
dec
idivb
push
cwtl
enter
pop
inc
pop
mov
es
sbbl
je
or
sbb
sbb
outsl
cmp
sub
pushf
loope
popa
jne
or
cmp
sbb
pop
mov
add
arpl
inc
xor
fists
jb
xchg
int
xchg
fcmove
cltd
or
xchg
add
repz
out
jg
cmpb
xor
dec
xchg
daa
shl
arpl
xchg
or
or
mov
pop
repz
or
push
scas
or
insl
dec
mov
test
cld
push
bound
jbe
xor
sahf
xor
pop
hlt
insb
cwtl
pop
sub
imul
gs
in
add
cmp
sbb
out
pop
xor
mov
mov
xchg
in
cmp
cmpsb
jns
mov
enter
or
mov
icebp
push
inc
in
ficompl
xchg
je
inc
jle
inc
cmp
bound
lcall
test
repnz
mov
ds
xchg
fsubrs
pop
cli
sbb
scas
aam
fs
inc
loop
aaa
cmp
repz
fndisi(8087
xor
sub
pop
push
imul
xor
mov
mov
lcall
push
and
mov
sbb
xor
mov
pop
stc
loopne
or
mov
mov
test
or
push
push
mov
in
dec
push
add
fmul
cld
int3
cwtl
out
lcall
jmp
je
xor
xchg
mov
pop
add
call
cmpl
sahf
xchg
push
sub
add
mov
ja
shrl
lret
adc
imul
test
shr
lcall
sub
mov
inc
dec
ficoml
aad
clc
xor
sbb
in
movsb
mov
jle
test
sub
cmp
add
push
pop
inc
push
fstp
loop
sahf
ret
mov
xor
test
out
adc
push
cwtl
mov
cs
jle
pushf
stos
mov
xchg
sbbb
cmc
arpl
lea
add
stos
out
test
into
sbb
add
cmpsb
push
aad
xchg
negb
add
sub
subl
and
ret
rolb
loop
pop
insl
mov
inc
pop
jb
and
push
or
jecxz
push
cmp
imul
mov
pop
inc
sbb
fstl
jne
cmp
cmp
loop
inc
rcl
push
cmp
pop
int3
cmp
enter
data16
xchg
sub
sub
lock
lds
inc
adc
leave
insb
mov
jge
call
test
rorl
adc
mov
xchg
fs
jmp
das
fidivrs
xchg
subl
stos
loop
shl
lret
inc
out
xchg
mov
adc
sbb
loope
inc
into
loop
rorb
xlat
mov
cltd
ret
inc
jne
loopne
mov
popa
mov
xor
mov
ja
rclb
jo
sbb
popf
popf
fdivs
sub
pop
cld
add
mov
ljmp
jbe
test
adcl
dec
xor
mov
imul
mov
pop
push
mov
iret
insl
nop
fs
xchg
out
stos
xor
icebp
pop
jge
scas
mov
arpl
sbb
loopne
jae
nop
icebp
ror
mov
clc
xchg
jecxz
mov
inc
jle
enter
insb
pop
inc
adc
cltd
arpl
mov
movzwl
mov
cmp
jmp
mov
mov
lds
inc
pop
loop
pop
adc
test
insb
dec
out
inc
inc
jno
mov
fsubl
jle
out
dec
mov
sub
mov
fs
sti
test
es
out
ret
push
jb
rclb
cmp
clc
inc
ja
or
popa
idiv
or
dec
add
rclb
cld
mov
jp
push
out
imul
enter
adc
.byte
mov
xchg
gs
.byte
cld
sub
mov
dec
ljmp
add
xlat
dec
mov
mov
sahf
cli
or
cmp
jb
lds
inc
mov
pusha
fs
mov
xchg
sub
scas
mov
jmp
bound
shlb
dec
mov
sbb
sbb
jno
adc
mov
mov
mov
mov
std
std
cmp
adc
push
clc
seto
adc
lret
jmp
xchg
cmpsb
fcompl
std
mov
mov
xor
mov
mov
ds
incb
sub
es
dec
call
dec
in
into
or
popa
sarl
es
iret
xchg
ds
jae
mov
lds
shll
and
mov
adc
pop
fisubs
jb
cwtl
adc
jp
movsl
bound
shll
stos
iret
pop
aas
inc
push
ja
fadd
add
cmovle
out
shll
je
test
push
jno
mov
ss
add
test
shrb
inc
scas
out
outsb
and
jmp
jmp
ret
fadds
pop
test
xor
push
out
cmp
pop
jmp
lret
xor
inc
scas
js
mov
shll
xchg
inc
add
mov
call
xchg
sub
fiadds
fs
popa
pop
xchg
js
shlb
inc
jl
cltd
mov
adc
xchg
pop
push
sbb
fmuls
fcom
es
and
mov
sub
scas
pop
inc
pop
sub
aaa
rcll
sar
jmp
jnp
sti
fisubs
sbb
loopne
cmpsb
imul
xchg
sub
jecxz
aaa
jmp
repz
mov
adc
mov
js
mov
imul
test
loope
push
cmp
add
dec
adc
dec
jp
push
or
push
std
jnp
dec
mov
dec
mov
xchg
jb
or
inc
rcr
adc
pop
subl
mov
mov
push
mov
loopne
and
cmp
inc
push
pop
pop
xchg
cmc
mov
clc
leave
ljmp
pop
xor
push
movsl
loopne
xchg
cmp
xor
or
mov
js
add
cmp
sub
out
jb
je
adc
and
and
push
cmp
rorl
fst
adc
pop
bound
scas
jo
xchg
sbb
loope
mov
filds
pop
fildll
jns
pop
sbb
xchg
repz
push
add
lret
xor
xor
mov
minps
or
mov
adc
inc
test
dec
mov
or
scas
dec
jge
lcall
nop
sub
loop
add
inc
cmp
frstor
push
fisttps
mov
jb
jnp
jle
cmp
push
hlt
mov
lret
push
loope
pushf
test
xchg
das
rolb
and
mov
cmpsl
or
das
cltd
pop
mov
rclb
xchg
les
test
jg
filds
add
mov
pop
rcr
sub
fs
in
xchg
lods
dec
inc
lahf
in
xor
pusha
mov
loop
clc
xlat
inc
inc
jns
inc
sub
repnz
mov
pushf
pop
cltd
sub
leave
mov
out
inc
out
mov
es
add
stc
cltd
lret
adc
inc
sbb
hlt
mov
out
lds
jnp
arpl
jecxz
inc
rcrl
daa
mov
test
mov
sbb
jo
loop
push
xor
out
fmull
shlb
xchg
into
fsubrs
rcll
das
add
test
inc
in
sbb
je
xchg
and
pushf
add
add
xchg
pop
ljmp
in
sbbl
jbe
mov
jmp
fs
testl
les
dec
in
xchg
push
fs
loop
inc
repz
insl
sub
inc
aad
inc
dec
sub
xlat
push
call
xor
jbe
movsl
cmpsl
xor
and
scas
cltd
xchg
jg
or
das
and
mov
loop
pushf
les
fwait
lcall
push
or
inc
fimuls
pop
in
lock
stos
repz
sbb
mov
repnz
std
or
out
aaa
rorb
push
mov
ficomps
std
and
loope
dec
and
les
lret
lds
dec
pop
paddusb
jae
adc
scas
mov
push
fildl
mov
mov
stos
push
adc
cli
orb
aas
clc
xchg
aam
sub
pop
std
fidivl
mov
push
aam
xcrypt-ofb
cmpsl
out
pop
jle
cmpsl
inc
sbb
int3
int3
nop
sbb
mov
stos
push
jmp
shll
sub
hlt
insl
jne
xchg
mov
pop
or
cs
lock
mov
sbb
xchg
imul
mov
leave
mov
mov
push
mov
loop
mov
pop
adc
fisttpl
stc
sahf
mov
das
jmp
or
xchg
shl
mov
inc
xchg
bnd
inc
sbb
test
popa
lahf
mov
pop
xor
data16
addr16
loopne
aas
loopne
icebp
outsl
mov
mov
loopne
jle
sub
pop
xchg
lock
fs
icebp
movsb
adc
mull
mov
mov
rcr
scas
subl
daa
lret
xchg
cmpsb
cmp
mov
jne
xor
loope
flds
mov
ja
out
fwait
inc
scas
lret
fnstcw
mov
cmp
insl
jg
sub
lahf
dec
or
pusha
iret
lahf
push
mov
dec
pop
mov
or
testb
cmp
loopne
dec
repnz
adc
cmp
clc
mov
test
pushf
pop
aam
mov
arpl
out
cmp
test
data16
out
vphaddubw
imul
xchg
cs
adc
cmp
in
mov
andb
rcl
dec
and
into
push
pop
fiadds
fidivrl
gs
repnz
or
push
dec
rcl
mov
push
cmp
mov
nop
xchg
or
mov
call
mov
call
mov
rcrl
mov
es
cmc
or
pop
push
loopne
hlt
lret
push
dec
mov
mov
xorb
cmp
dec
sub
aas
jne
push
mov
daa
inc
xchg
sub
ds
fidivs
sub
fldenv
mov
pop
adc
arpl
nop
hlt
xchg
lods
sbb
push
fs
lahf
jmp
sahf
cmpb
mov
inc
cld
outsl
pop
lahf
cmp
xchg
pop
jle
stos
in
pop
sub
mov
mov
xchg
out
mov
pop
dec
lret
fsubrl
mov
dec
into
shl
out
jbe
xchg
stos
sbb
out
push
mov
xor
mov
push
xor
outsb
add
mov
mov
ja
sbb
pop
push
xchg
jecxz
lret
dec
adc
jg
dec
std
icebp
ret
xchg
cmp
sbb
or
adc
nop
xor
pop
pop
enter
cmpsb
add
sbb
inc
repz
xor
sbb
lock
sahf
in
mov
add
cmpl
es
xchg
cs
aam
mov
mov
ficompl
mov
scas
js
push
sbb
sub
inc
jo
outsb
xorl
add
jmp
adc
mov
sbb
inc
stos
sub
call
stos
aam
ljmp
les
mov
mov
adc
mov
outsl
adc
icebp
scas
xor
stos
mull
push
pop
fcompl
jae
xor
sahf
cmp
movsb
mov
icebp
into
pop
sub
shll
and
xchg
adc
inc
sbb
addl
cmpsb
push
loop
and
adc
jae
xor
mov
in
jl
test
ja
or
imul
lock
fs
cmp
dec
negl
jae
aad
dec
lods
mov
push
adc
mov
cmp
loopne
adc
neg
les
lret
movl
push
xor
jno
clc
negl
cld
or
gs
insb
inc
inc
xchg
lret
mov
insl
xchg
bound
add
dec
jns
ss
js
pop
pop
repz
cld
mov
fiaddl
jecxz
shll
ss
leave
fstl
icebp
mov
pushf
pop
fwait
shll
mov
push
stos
imul
daa
mov
cmpsl
pop
dec
cwtl
adc
cmp
mov
cltd
cmp
sbb
ffreep
mov
mov
andl
loop
push
call
loop
cmp
jns
mov
mov
mov
push
fwait
inc
in
pop
lods
sar
imul
insb
add
inc
orps
stos
int
or
adc
mov
dec
mov
jbe
out
jge
mov
stc
sbbl
inc
mov
pop
sub
fisttpl
xchg
mov
and
shr
lods
mov
sahf
pushf
stos
xor
int
dec
notl
lock
mov
xorb
sub
pop
pop
loopne
mov
push
mov
iret
mov
or
loope
roll
and
or
sbb
dec
pop
dec
sbb
incb
jp
les
mov
xorb
pop
mov
mov
ljmp
xor
cmp
push
add
push
jl
xchg
sub
stc
loopne
sub
enter
inc
add
jbe
push
rol
xchg
add
and
insl
xchg
cld
shrl
inc
cwtl
fnstsw
test
jnp
sub
xor
mov
and
out
push
icebp
fwait
repnz
enter
call
test
inc
xor
scas
or
ljmp
movsl
jo
data16
pop
xchg
pop
xor
mov
into
or
divl
call
fwait
jne
leave
adc
stos
mov
mov
dec
and
pop
mov
inc
sbb
cmp
lock
push
mov
loope
sbb
and
lret
sbb
adc
jp
sub
imulb
fmuls
pop
push
sbb
fcomps
dec
mov
into
fsubl
daa
inc
das
jge
xchg
fldt
aam
jmp
push
les
mov
daa
call
or
jmp
sbb
mov
or
jge
inc
mov
mov
sbb
push
cli
xor
sbb
mov
sub
cld
mov
pushw
mov
xchg
movl
sti
ss
and
xchg
push
cmp
push
mov
sub
jle
icebp
mov
cmp
lret
lret
je
pop
movsl
mov
cmp
jecxz
sbb
lret
test
dec
or
iret
lods
inc
mov
mov
mov
cltd
cmp
xor
lods
cmp
adc
mov
xchg
test
daa
jecxz
push
test
or
or
pusha
cmp
lahf
nop
pop
fdivl
add
push
jbe
jecxz
scas
insl
mov
call
xor
sbb
fldenv
xlat
fisttpll
fstpl
sub
adc
adc
add
push
push
sub
and
call
daa
lea
fadds
adcb
xchg
shrl
or
imul
stc
jecxz
pop
fildll
mov
dec
ds
int3
sub
out
sbb
and
push
mov
xlat
outsl
sub
mov
scas
mov
dec
and
cltd
out
loope
leave
sbb
aaa
inc
xchg
mov
out
mov
inc
repnz
in
pop
mov
pop
or
or
jb
pushl
mov
popf
mov
cmp
cmp
in
dec
fldcw
xor
and
xchg
fldl2t
inc
out
clc
sub
push
adc
pop
mov
cwtl
inc
xchg
sbb
dec
test
in
cvtdq2ps
in
sub
insl
or
fwait
ja
xor
scas
inc
push
lahf
ljmp
fwait
inc
cli
mov
es
int
push
popa
clc
jo
cmp
sti
mov
mov
or
jae
je
pop
pop
clc
sub
subl
add
pop
or
cmp
aas
fmull
mull
imul
add
dec
inc
insl
xor
inc
dec
sbb
imul
inc
mov
adc
sub
mov
inc
jle
lret
iret
les
adc
lods
mov
insl
js
pushf
mov
jp
test
sti
xchg
in
dec
jp
call
fsubs
bound
sarb
xchg
icebp
fisttps
sti
mov
aas
aas
jmp
in
sub
nop
repz
fiaddl
sub
sub
jp
outsl
mov
pop
cmp
pop
and
sbb
cwtl
clc
pop
dec
rclb
xorl
in
cmpsl
mov
shrl
lahf
lods
mov
push
stos
jb
jl
test
fsts
cmp
sbb
jne
pop
cmp
xor
lds
add
hlt
mov
mov
cld
orb
mov
sub
std
cmp
call
out
or
sub
mulb
add
out
fdiv
jl
adc
rcll
cmp
or
and
fmuls
xor
cmpl
jbe
push
mov
imul
outsb
cli
xor
jns
mov
insb
dec
and
inc
push
cmp
mov
call
out
cld
cmc
xor
sub
mov
loopne
pop
outsl
idivb
jb
nop
add
sarb
fs
mov
adc
rcrl
dec
popf
jp
jno
dec
mov
lea
cmpb
ficoms
gs
jnp
sub
mov
pop
ds
and
rorl
pop
sti
scas
lock
sbb
mov
inc
aad
div
xor
sub
cmp
mov
inc
jmp
pop
ja
dec
cmpsl
stos
inc
cmpsb
test
sar
jecxz
les
and
mov
push
dec
inc
outsb
xchg
dec
lds
scas
pop
aam
rcrb
cmp
xor
xor
sahf
xlat
mov
cs
data16
ret
push
cld
jg
mov
jp
jp
xor
dec
xchg
push
sbb
into
xchg
push
mov
add
stos
sub
sbb
arpl
int
cltd
mov
pop
push
lods
xchg
or
mov
mov
dec
mov
xlat
xlat
into
int3
loop
pop
stc
not
adc
sbb
int3
jbe
sub
rcrb
out
add
call
pop
pop
add
inc
outsb
ljmp
fwait
mov
add
mov
mov
jnp
and
cltd
inc
push
mov
pop
adc
inc
shll
fistpl
add
sub
push
sub
shlb
and
loope
leave
lods
in
add
xchg
cmp
cmp
xchg
out
leave
test
pop
pop
movsb
xchg
cmpsb
inc
xchg
loopne
aam
add
enter
lock
xchg
test
push
sbb
pop
leave
dec
ja
jae
pushf
adc
clc
xchg
adc
popf
sbb
ja
test
loop
lds
out
ja
cltd
dec
xor
leave
mov
pop
lahf
call
lret
and
lea
push
lret
cmpsb
mov
aam
xchg
insl
jns
pop
in
xor
xchg
ret
cld
aam
loopne
out
fnstenv
les
xchg
pop
out
mov
cmp
cwtl
ss
and
mov
sbb
sbbb
out
loopne
cmc
or
rcrb
pop
jl
jns
inc
push
mov
cmc
ret
cmp
and
fidivrl
popa
sbb
xlat
cmp
xchg
add
repz
lcall
roll
das
mov
inc
mov
stos
fwait
push
cli
ljmp
dec
xor
in
dec
cmp
leave
movsl
sbbb
sbb
adc
inc
arpl
imul
fcom
pop
test
fnsave
xchg
xchg
jmp
jp
rorl
shrb
dec
cmp
insl
mov
cwtl
pop
cmpsl
dec
mov
cmpsb
pop
dec
rcr
data16
mov
pop
mov
pop
shll
aas
int
stos
dec
cmp
js
gs
es
dec
je
or
adc
incb
dec
fildll
and
and
push
jge
mov
sbb
add
adc
jae
jb
add
push
adc
push
ficoms
mov
sti
cmc
xor
jno
push
xor
out
and
clc
cld
scas
cwtl
repnz
outsl
jnp
movsl
rcrl
inc
rcrl
leave
push
int3
test
mov
shrb
jg
cld
jne
insb
xchg
fnstcw
shrb
outsl
movsl
dec
cmp
cli
jge
push
das
stos
jg
pop
add
and
mov
incl
ljmp
fmull
or
jp
xchg
cmp
into
cmpsb
insl
cwtl
mov
jmp
pop
push
test
mov
insb
dec
js
adc
lea
pop
push
mov
adc
ret
xchg
jl
and
xchg
cmc
repz
scas
mov
jge
cmpsl
inc
xchg
lcall
outsb
add
cs
aam
loope
jno
out
cmp
adc
mov
push
cmp
jecxz
aaa
pop
insl
add
push
jmp
std
mov
push
out
incl
sub
xchg
inc
pushf
sbb
or
shrl
stc
sbb
in
jbe
lock
rcrb
mov
enter
jecxz
roll
imul
add
mov
iret
ss
ss
inc
or
jle
cmc
inc
push
pop
xor
rorl
sti
jl
push
push
mov
pop
mov
aas
sahf
test
dec
outsb
jo
test
loopne
nop
mov
or
popa
push
frstor
sub
cltd
stos
mov
or
sub
scas
jb
int
and
jle
dec
jo
pop
push
mov
pushw
ljmp
and
mov
jns
loopne
xor
mov
or
daa
jnp
aas
xchg
inc
xor
int
in
lea
mov
dec
stos
dec
mov
cld
scas
lods
or
imulb
fcmovu
jecxz
mov
cmc
ds
mov
add
pop
icebp
xchg
in
mov
push
or
icebp
pop
lahf
fildl
pusha
not
jp
xchg
rclb
frstor
insl
mov
sub
jo
into
cmp
push
sub
dec
inc
stc
rclb
jl
mov
std
aad
xchg
or
mov
sarb
sarl
xchg
cltd
fs
xchg
adc
mov
mov
insl
sbb
xchg
jmp
mov
loop
in
dec
or
aas
shlb
mov
jl
jmp
out
jbe
sub
inc
arpl
jbe
dec
or
mov
sbb
fdivrp
inc
dec
jno
movsb
sbb
popa
je
sub
jge
add
rclb
fisttpll
mov
movsb
lcall
rol
adc
loopne
loope
jl
xchg
test
or
ljmp
or
int
dec
add
jge
pop
lea
inc
call
push
xchg
or
cmp
lret
xchg
add
xorl
mov
imul
sbb
jge
or
cmp
and
addl
cli
mov
sahf
sub
je
pop
fisubrs
jg
add
je
adcb
mov
jno
cld
aam
addb
int
xor
or
test
mov
mov
sbb
dec
sub
sbb
fdivl
bound
fwait
out
and
call
cs
mov
shll
arpl
inc
loop
mov
adc
push
mov
jle
fsts
aaa
fbstp
loope
into
clc
push
or
mov
std
push
dec
lahf
cli
sbb
aas
mull
dec
clc
ret
inc
mov
je
sbb
sar
pop
or
add
daa
jo
adc
shlb
stos
xor
sti
jbe
je
add
mov
jle
in
aas
sub
lcall
push
arpl
xchg
fsubrl
daa
add
lcall
mov
ss
push
iret
and
xchg
not
rcrb
mov
ret
in
frstor
push
ficoms
es
sbb
mov
push
add
inc
push
sbb
cmp
test
xor
repnz
push
push
movsb
scas
pushf
test
ud1
inc
lahf
pusha
fs
das
adc
stc
dec
xlat
cltd
mov
pusha
sbb
repnz
add
lret
push
outsb
mov
inc
inc
popl
pop
pushw
psubusb
dec
xor
mov
test
aam
in
or
mov
sbb
add
cmp
inc
movsb
pop
inc
sbb
adc
out
cmpsb
mov
sbb
inc
cltd
push
mov
les
xlat
and
je
mov
loope
and
sbb
cmp
call
and
rorb
mov
loopne
mov
repnz
lcall
xor
sbb
lret
ss
jae
jl
cmp
int3
xchg
daa
jae
ljmp
movsl
sbb
sbb
inc
jbe
pop
repnz
faddl
sbb
loope
dec
out
jmp
mov
sub
xor
xor
cmp
and
sar
stos
jp
andl
cmc
repz
jecxz
pop
fisubl
sahf
jne
sub
xchg
push
inc
jae
out
cwtl
xchg
subl
in
cmc
cmpl
roll
pop
push
push
dec
imul
mov
arpl
jns
push
movsb
dec
stos
mov
add
popf
in
loope
pop
or
shr
pusha
pop
push
lods
cmp
adc
or
in
pop
js
mov
inc
es
sbb
fistl
lret
mulb
add
lods
clc
jne
xor
fistl
push
mov
mov
movsb
mov
and
mov
mov
and
adc
xchg
outsb
mov
aas
mov
fmuls
je
out
data16
push
and
pop
jb
popa
jmp
testb
add
jae
jmpw
movsl
and
jg
adc
in
fbstp
mov
test
mov
icebp
stos
inc
int
test
cmpsl
mov
std
fs
gs
out
inc
or
iret
hlt
mov
out
adc
pop
icebp
dec
dec
inc
imul
xchg
imul
aaa
xchg
insb
xor
or
push
cmc
imul
pop
sub
pop
jns
or
sbb
imul
add
jnp
and
or
xchg
sbb
call
dec
rorl
aam
push
test
xchg
inc
cltd
bound
xor
xor
pop
hlt
call
ret
push
inc
fldl
jg
adcb
or
insl
out
lds
inc
loopne
call
jecxz
adc
fs
cmp
lahf
inc
fimull
and
dec
rcll
or
int
sbb
xchg
subb
or
mov
pushf
jmp
and
or
aam
aad
rcrb
mov
fistps
in
cmp
fs
sub
stos
ja
and
cltd
xor
jg
jmp
rcll
push
test
fmulp
sahf
lock
scas
mov
ja
movsl
lock
mov
sbb
dec
roll
jecxz
push
fildll
mov
pop
xor
fnsetpm(287
cmpsl
cltd
mov
mov
sub
cmc
in
rep
bnd
enter
sar
loopne
enter
mov
dec
adc
push
ds
fdivs
and
lods
pop
icebp
jbe
pop
xorb
cmp
loope
mov
outsb
push
jmp
pop
sub
cmpsl
pop
cltd
fcmovne
push
stos
add
xor
lods
sbb
data16
mull
pop
mov
cltd
add
cmp
jo
jne
sub
sbb
or
cmpsb
loop
test
imul
sbb
push
out
rcll
adc
fsts
aam
xor
jmp
lret
xor
xor
movsb
xchg
inc
jnp
imul
cmp
push
push
mov
inc
mov
cmp
jo
and
adc
jg
addr16
jmp
in
inc
jae
ja
fisubl
mov
mov
iret
xor
sub
ret
lods
xor
push
lcall
xchg
or
aam
pop
insb
xchg
pop
jle
ret
call
cmp
prefetchnta
fs
adc
mov
rol
push
xchg
cs
cmp
cwtl
in
cmp
outsl
add
xchg
out
fcompl
push
lock
and
dec
xor
lds
divb
and
sbb
repz
dec
xor
adc
xor
dec
pop
aad
leave
xchg
jno
cld
dec
nop
adc
mov
cmp
ja
mov
inc
pop
cmc
xchg
aas
jo
push
subb
enter
jae
mov
jbe
lock
jno
lods
pop
sub
push
repnz
dec
xor
mov
test
cli
cmpsl
in
int3
mov
xchg
lahf
mov
loope
mov
push
mov
mov
pop
pop
mov
mov
call
repnz
mov
stos
adc
adc
cmp
mov
iret
out
ret
push
cltd
shll
pusha
add
icebp
lea
inc
dec
sub
fsub
sub
jg
loopne
mov
add
test
pop
sahf
int3
call
jne
enter
and
sub
ljmp
inc
idivl
ret
xor
outsl
or
cli
inc
lock
out
lahf
add
fdivs
push
je
aaa
sbb
xchg
mov
call
mov
jnp
int
iret
mov
addb
push
adcl
flds
test
popaw
cmp
push
pop
and
dec
bound
add
out
xchg
cmp
aam
jmp
dec
dec
adc
leave
push
mov
add
aam
gs
sbb
dec
fcomi
in
adc
decl
jge
sti
popf
or
cmp
inc
orl
cmpsb
sbb
in
pop
aam
lds
cld
adc
sbb
shll
lock
arpl
lahf
sub
mov
and
sti
xchg
into
mov
fcomip
je
xchg
sub
ss
sbb
fists
shrl
push
inc
notb
jo
add
push
aam
loop
loop
fimuls
test
xchg
sbb
dec
lock
fldl
jp
dec
jb
or
data16
xor
push
clc
ja
ficomps
les
lea
daa
mov
es
or
mov
xor
jge
orb
std
dec
push
add
mov
movsl
jge
insl
js
pop
push
and
clc
test
mov
add
rcl
or
push
sub
pop
popf
jp
cmp
rorb
jp
and
subb
xchg
dec
test
notl
mov
popf
sbb
adc
pop
loope
fwait
jnp
iret
pop
inc
lods
and
cmpsb
sbb
mov
negl
and
jno
lock
cmp
in
dec
jmp
lcall
xchg
mov
xor
movsl
mov
pop
mov
pusha
adc
push
mov
and
loope
lods
int
mov
nop
data16
mov
test
mov
jae
and
jmp
jo
xchg
xor
mov
or
cmp
fimull
cmpsl
enter
lods
adc
fcomps
or
lret
das
iret
jge
or
mov
pop
int3
lcall
gs
pop
and
imul
adc
cli
pushf
ds
jle
jl
mov
cmp
popf
pop
cmp
push
lds
ds
loope
outsb
and
mov
dec
push
adc
sar
mov
jge
jo
pop
scas
ljmp
aad
out
dec
cltd
jp
or
out
xor
xchg
sbb
clc
adc
mov
or
jne
imul
int
sbb
inc
fs
cmp
cmp
les
rcr
mov
sbb
xchg
and
jno
dec
sbb
or
in
leave
add
push
gs
fidivs
shr
jns
fisubrl
lea
sbb
push
dec
sbb
xchg
ss
dec
mov
and
mov
lods
test
loope
hlt
mov
mov
cld
mov
test
push
jecxz
mov
sbb
in
scas
sbb
ret
adc
mov
jl
or
aas
jae
sahf
rorb
inc
jmp
outsb
js
pushf
setbe
cmpsb
or
mov
add
fadds
xchg
mov
mov
mov
dec
ljmp
int3
pop
fdivl
add
ret
and
push
leave
push
pop
push
loop
xor
push
mov
test
dec
scas
stos
dec
lods
arpl
jmp
mov
or
cltd
xchg
leave
adc
xor
aam
push
dec
dec
and
cmp
addl
mov
and
data16
dec
adc
mov
stos
xor
popf
xor
mov
std
dec
into
test
outsb
into
es
lods
pop
lods
cmpsb
cli
xchg
icebp
cmpsl
push
pop
leave
imulb
jle
les
inc
in
pop
push
adc
movsl
sbb
sbb
imul
or
push
pop
or
xor
mov
sbb
lea
aaa
mov
adc
and
mov
pop
addb
fnstenv
faddl
push
dec
aad
ds
mov
js
lret
adc
mov
loop
cmc
out
mov
out
mov
pop
adc
and
and
jne
aam
loopne
xor
lea
andl
adc
les
pop
ja
xor
or
test
xor
xchg
pop
mov
add
fsub
lock
add
cmp
sub
push
loope
cmp
inc
jne
jbe
pop
push
in
push
lret
icebp
or
mov
dec
loop
scas
push
out
cmp
arpl
out
and
mov
and
sarl
jmp
daa
mov
cltd
mov
pop
ret
push
loope
sbb
sbb
imul
sub
cli
aaa
sbb
loope
fwait
mov
jl
sub
fnstsw
aam
adc
jns
bound
adc
dec
push
mov
les
push
dec
outsl
out
pop
dec
dec
fwait
xchg
add
loop
sahf
xor
pop
enter
xor
je
leave
in
xchg
mov
pop
jle
and
pop
push
clc
out
adc
fdivl
adc
jle
icebp
loope
and
mov
jbe
roll
push
test
fisttpll
mov
jl
out
test
inc
sub
scas
in
dec
int3
sbb
fiadds
aaa
sbb
sahf
fsubr
lcall
push
loop
insl
movsl
lods
mov
test
inc
push
or
or
dec
xor
aas
gs
shrl
bound
or
les
enter
pop
xor
mov
popa
lods
dec
in
sub
shll
lods
push
je
add
mov
xor
and
cmc
hlt
sub
adc
xchg
subl
dec
push
icebp
stos
cmp
ljmp
cmpsl
jae
jg
lock
or
mov
mov
cwtl
sub
adc
out
xor
push
xchg
fiaddl
nop
orb
adc
or
std
sti
add
sbb
jns
ret
cmc
icebp
outsb
sbbb
imul
sbbb
sub
sti
js
cmp
enter
adc
cld
int3
mov
rcr
test
mov
push
movsb
and
leave
cmp
loop
sahf
mov
mov
ret
loope
push
mov
imul
or
cmp
sbb
ret
jo
jbe
jae
jns
add
sub
lock
mov
cmpl
fxch
call
dec
aas
push
jbe
aaa
or
fucomp
lret
jp
jbe
xchg
ret
mov
roll
cmp
mov
and
sbb
inc
or
sub
pop
shrb
in
add
lods
xchg
fwait
jbe
inc
jp
jmp
sbb
inc
jno
cmp
inc
inc
clc
mov
rcl
and
dec
les
fs
xor
pop
jl
jmp
imul
dec
and
inc
jg
adc
or
daa
xor
repnz
pop
cli
mov
int
mov
cmp
jne
ret
xchg
or
sub
js
mov
xlat
xchg
push
mov
sbb
ret
ja
fdivrp
leave
xor
xor
sub
scas
into
mov
pop
cmp
mov
out
add
lahf
xlat
push
fmull
mov
add
xchg
sarb
inc
mov
fs
push
push
addl
repnz
lahf
outsl
jle
xor
les
popl
dec
sbb
jo
xchg
daa
xchg
fs
icebp
ss
hlt
cmp
ljmp
jle
inc
je
addr16
pop
mov
pop
test
pushf
and
stc
out
loop
inc
mov
fcoml
rcl
test
fsts
lea
xlat
and
mov
orb
iret
bnd
repz
mov
mov
ficoms
add
cmc
js
and
dec
lds
stos
in
outsl
fdivl
dec
bound
iret
enter
sbb
dec
loop
sbb
outsl
aaa
es
ja
push
add
pop
pop
jge
rolb
popf
jl
cmp
dec
mov
pop
xor
jb
add
aas
sub
nop
insl
jne
ficoms
pop
test
or
adc
ds
cmp
insl
mov
mov
jne
jg
ret
xchg
xor
hlt
out
pop
fisubrs
push
icebp
pop
ds
sbb
lea
jae
sbb
les
xlat
sub
fmuls
jo
pop
imul
sti
jnp
mov
cmc
iret
cmp
xchg
loopne
adc
and
jo
mov
adc
xchg
xchg
cld
sbb
pusha
pushf
cmp
dec
cmpsl
xlat
adcb
jl
adcl
jo
xor
inc
inc
adc
aam
adc
loope
push
or
call
out
adc
std
mov
mov
mov
pop
stos
aas
repz
sbb
mov
movsl
ss
sbb
mov
fldenv
mov
push
cmp
push
mov
das
fstpl
cltd
in
das
adc
push
mov
xor
negb
add
popa
loopne
das
mov
cmp
jno
std
sub
adc
xchg
mov
add
cltd
add
jae
pop
dec
push
adc
adc
jb
cmp
inc
mov
loop
xchg
cmp
lret
cmp
addr16
pop
sti
push
cmp
daa
in
mov
je
test
pxor
dec
dec
xor
mov
in
decl
pop
adc
jmp
dec
push
jp
pop
in
test
mov
xchg
outsl
mov
stos
jmp
loop
ss
or
cmp
repz
pop
jo
mov
and
fisttpl
in
fcomip
mov
sub
jle
dec
jecxz
adc
push
pusha
push
cli
pusha
lea
pop
addb
lahf
ss
out
lods
dec
fstps
push
fldenv
lahf
imul
je
dec
cld
mov
xchg
sub
out
add
adc
push
inc
push
push
inc
adc
xchg
sbb
dec
pop
or
sub
pop
adc
in
call
jp
sub
push
outsb
test
jno
pextrw
xchg
lret
cmpsb
cmc
aaa
xchg
dec
push
bswap
pop
daa
stc
dec
das
inc
jns
out
push
or
push
imul
sub
dec
inc
sbb
push
mov
mov
nop
pop
outsl
push
add
stos
pushf
adc
jp
sbb
cmp
mov
mov
insl
clc
sbb
mov
sub
fwait
mov
popf
daa
shll
fsubrs
push
popa
and
add
out
bound
or
loop
jnp
or
jle
sti
ja
daa
xchg
jg
push
pop
add
mov
mov
xor
inc
pop
ja
or
mov
popa
jecxz
jg
stos
pusha
lret
mov
stos
add
inc
mov
jno
mov
sub
or
push
and
mov
lods
cmp
hlt
jae
lret
xlat
adc
and
add
jns
lds
mov
cmp
iret
call
xor
nop
lcall
inc
jge
fcomip
add
jnp
and
insl
mov
rolb
pop
inc
push
insl
xchg
pop
outsb
mov
cmc
ret
call
rorl
xor
int
adc
aam
jge
pushf
add
aad
pop
cmpsb
addl
aad
inc
xor
inc
cmpsl
negl
pop
adc
xchg
or
push
js
gs
fcoml
mov
in
xchg
arpl
lock
mov
adc
sti
pop
push
sbbb
mov
aas
jae
push
mov
sbbb
sub
or
in
push
dec
test
inc
js
fldl
inc
lret
ffreep
mov
mov
xor
pop
dec
fsts
int3
scas
insb
lods
sbb
xorl
decb
test
xor
pop
mov
adc
addr16
imul
mov
fcom
xchg
jp
pop
xchg
icebp
sub
cld
mov
mov
fcmove
int
mov
nop
mov
mov
leave
jns
pop
sbb
call
sti
inc
enter
cwtl
xor
xchg
mov
xchg
push
je
mov
pop
cmp
lret
int
out
adc
cs
sbb
cmp
imul
fiadds
icebp
ds
lods
jmp
test
cwtl
vsqrtps
cwtl
dec
enter
es
daa
jo
aad
outsb
stos
dec
icebp
pushf
sbb
sub
loop
fwait
pop
xor
pop
pop
clc
xchg
push
and
shr
pop
sub
jl
jle
push
cld
sub
sub
push
cmpsl
xor
dec
aad
imul
imul
ja
lcall
cltd
cwtl
sbb
xlat
jnp
stos
jbe
jge
push
and
test
cmc
js
sub
out
dec
pop
pop
jno
shll
js
push
jne
mov
test
lahf
loopne
iret
xor
outsb
adc
push
and
sub
insl
dec
ljmp
call
xchg
inc
adc
movsl
test
sti
es
dec
inc
xchg
scas
jmp
in
dec
adc
outsl
mov
fists
pop
and
xchg
pop
and
xor
and
stc
xchg
out
ss
mov
mov
sub
sbb
push
movsl
jle
into
fsts
push
sub
adc
faddl
or
test
cwtl
lods
fldt
rorb
and
repnz
mov
lret
adc
push
push
mov
aad
and
inc
mov
testl
fldt
push
mov
repz
sti
pop
push
hlt
jne
cmp
aaa
jo
insb
mov
jl
mov
mov
ficompl
sbb
call
dec
lds
xchg
push
out
add
fs
test
fsubl
dec
jg
mov
scas
enter
lds
mov
add
push
lds
iret
cmpl
or
das
lea
scas
adc
repnz
xor
imul
aaa
adc
repnz
dec
shrl
mov
loopne
sbb
pop
jp
les
push
mov
add
inc
inc
pop
mov
out
addr16
adc
pop
inc
add
mov
jmp
cmpsw
adc
jle
mov
dec
andl
inc
shll
sbb
stos
add
jl
jae
imul
loope
call
movsl
leave
xlat
testl
or
mov
add
and
jbe
sub
xor
in
es
insb
jnp
jno
mov
jbe
flds
mov
movsb
sarb
jae
adc
xor
cmp
icebp
lods
daa
aad
sbb
xor
sbb
jb
add
cld
lds
test
ljmp
iret
sbb
cwtl
push
or
mov
arpl
inc
xor
push
fs
es
mov
sub
por
sub
fwait
rolb
pop
in
aad
xchg
out
cli
fucomi
jecxz
jg
iret
xorl
jl
lcall
movsl
and
pop
mov
gs
add
out
mov
push
shll
adc
out
cli
testl
dec
pusha
test
push
test
icebp
mov
ror
add
xchg
pop
or
add
sub
sbb
imul
insl
mov
mov
das
add
mov
imul
popf
in
fwait
mov
test
mov
cmp
movsb
jmp
pop
sub
xchg
inc
xor
mov
pusha
jp
and
xchg
cmp
nop
ficoms
clc
mov
push
mov
cld
imul
adc
arpl
aam
adc
dec
inc
mov
ss
adc
movsl
mov
inc
cmp
data16
push
fidivrs
adc
jp
fdivs
shrb
clc
mov
xor
dec
mov
xchg
pop
das
jmp
jg
cmpsl
cmp
mov
cmp
repnz
mov
enter
fstps
pop
inc
mov
sahf
lahf
pop
test
push
xchg
loope
arpl
movsb
insb
and
xchg
jge
push
lcall
shlb
pop
xchg
add
sti
cmp
inc
fbld
lock
sbb
inc
es
sahf
sbb
mov
out
hlt
ret
hlt
out
jmp
and
add
and
andb
les
pop
sub
xchg
pop
ja
jo
mov
inc
add
add
pop
sub
lcall
xchg
jns
in
enter
in
push
test
add
mov
sbb
push
add
jno
jmp
jge
leave
push
cmpsb
or
out
push
jnp
sub
pop
mov
xor
xchg
mov
xor
dec
pop
pop
in
pop
loope
shl
cwtl
lock
sub
bound
push
dec
test
dec
jle
in
lahf
leave
mov
dec
jle
push
sbb
gs
mov
out
xor
sub
mov
adc
adc
xchg
ljmp
push
sub
xor
add
xchg
out
jno
inc
js
sub
jne
arpl
out
mov
pop
sub
mov
ret
cmc
mov
int3
cltd
push
mov
das
push
sar
jno
mov
cltd
cmp
mov
test
xor
add
das
arpl
mov
sbb
push
daa
pop
scas
inc
dec
rorb
xor
pushf
cwtl
repz
inc
sub
lcall
mov
xlat
sbb
mov
fdivrl
enter
inc
push
xchg
mov
nop
flds
fidivrs
sahf
scas
int
xchg
cmp
in
push
std
xchg
pop
inc
lahf
adc
sub
dec
xchg
loope
jl
adc
xor
outsb
pop
das
mov
inc
pop
sbb
mov
data16
cmc
sub
mov
out
inc
add
loop
cli
dec
cmpsl
aas
lea
cli
test
into
cmp
into
push
fdivp
mov
mov
insl
popf
mov
loop
movsl
jecxz
stos
xchg
movsb
sbb
pop
sub
cs
jb
inc
ror
fsubl
sub
aam
inc
sbb
xchg
push
fiadds
jecxz
push
loopne
mov
fists
cs
ret
and
fidivrl
ficoms
add
xchg
movsb
jno
clc
es
lret
add
lock
int
sti
es
jno
jae
push
or
shrl
push
sub
push
shll
xor
xor
mov
push
push
lahf
push
ret
andb
push
and
jecxz,pt
pop
insb
or
and
add
and
incl
andb
jge
xor
mov
in
int
mov
push
jl
lock
mov
pop
mov
in
int
clc
out
mov
iret
dec
lea
add
ret
or
nop
aam
xor
xchg
lahf
insb
stc
mov
scas
mov
les
sub
iret
outsb
std
push
dec
rclb
inc
lret
push
push
scas
pop
inc
jmp
or
cs
out
test
push
test
push
je
xor
mov
xchg
inc
inc
mov
add
jmp
mov
inc
jmp
jl
aaa
xchg
push
xor
mov
xor
and
mov
or
es
xchg
mov
aad
lods
cltd
cmp
cmp
and
lea
jecxz
dec
notl
add
add
jb
push
dec
sahf
sbb
xor
xchg
test
cmp
add
pushf
sarb
jmp
test
test
int
lds
cmp
outsb
sbb
xlat
add
mov
into
pop
sbb
push
pushf
mov
xchg
jle
ja
insl
out
cmp
cmp
fsubrs
sahf
filds
sub
mov
js
cmp
add
pop
lock
loope
push
fdivrl
jmp
sbbl
mov
inc
xchg
pop
aam
andb
jne
movsl
mov
sub
iret
mov
fxch
mov
or
push
add
jb
fistpl
add
mov
jmp
and
or
test
aas
mov
call
ficomps
pusha
sub
inc
pop
pusha
ljmp
xchg
je
pusha
inc
adc
sahf
inc
xchg
lds
ja
mov
xor
test
mov
jns
pop
inc
add
or
mov
loope
jbe
js
les
mov
xor
jae
pop
or
mov
jge
xor
in
out
xor
fldl
adc
dec
je
pop
adc
adc
sbb
inc
pop
pop
movsb
xlat
sub
inc
or
rcl
adc
test
ret
inc
mov
dec
jle
and
in
enter
and
mov
lods
mov
jnp
mov
jno
sub
xlat
mov
jle
insl
outsb
imulb
test
lcall
lcall
push
int3
ja
mov
fcoml
pop
lret
jo
popa
hlt
sti
lea
cs
rcl
sbb
push
add
cmpsb
cmp
sbb
xor
sbb
gs
push
xorb
mov
jno
addb
adcb
shr
mov
out
add
mov
mov
cmp
les
fs
rorl
dec
sbb
sub
sub
add
fwait
xchg
shl
adcb
cmpsl
repz
sub
cmp
pop
pushf
dec
rolb
cwtl
pop
and
data16
inc
in
mov
and
add
inc
adcb
pop
test
stos
fists
in
push
add
cli
jne
insl
mov
xor
adc
mov
aas
push
popa
fistpll
adc
repz
pop
aam
test
adcb
jnp
mov
mov
fcmovu
je
adc
sar
cmpsl
adc
cmc
nop/reserved
out
daa
lods
in
xchg
add
push
sub
pushf
insb
cwtl
jge
or
dec
push
bound
xchg
mov
sub
data16
xor
mov
fdivp
inc
scas
data16
add
push
pop
shl
arpl
lahf
mov
in
sbb
scas
dec
outsb
es
sub
xchg
push
push
and
pushf
inc
jge
xchg
jle
jnp
fistpl
dec
repz
lcall
push
pop
cmpsb
pop
mov
lcall
sti
js
adc
push
pop
imul
std
sub
pop
cs
adc
push
or
mov
jbe
mov
stos
cmpsb
push
mulb
bound
mov
ds
mov
jo
ret
dec
rcr
fcompl
sbb
push
int3
stc
jl
out
cli
mov
addb
sar
repnz
mov
pop
frstor
setp
pop
push
xor
insb
sti
sub
imul
mov
insb
mov
imul
pop
arpl
push
fwait
fs
in
push
jno
add
bnd
ret
push
mov
xchg
jecxz
insl
pop
orb
fmull
sbb
xor
jp
mov
cs
jbe
dec
mov
aad
xor
fnstenv
xchg
cmp
cmp
pop
push
and
mov
fwait
mov
lods
mov
jge
sbb
pop
sbb
xor
sub
mov
mov
stos
add
mov
aad
sbb
int
cli
or
pop
mov
adc
lods
notl
inc
adc
pop
mov
stc
mov
hlt
xchg
lods
repz
push
jae
std
mov
push
cmpsl
adc
imul
xchg
imul
lds
stc
mov
xor
mov
xchg
in
fcmovu
xor
mov
inc
cli
xchg
fs
lret
call
jmp
mov
lea
or
mov
xor
loop
mov
pushf
dec
xchg
push
ss
add
rcll
push
insb
adc
cmp
into
je
mov
fmulp
stc
xchg
repnz
push
fwait
pop
jns
xchg
outsl
call
mov
dec
adc
push
mov
or
mov
in
sub
push
sub
or
sub
mov
xchg
add
shl
jmp
std
sti
mov
sub
and
pop
mov
out
pushf
pop
mov
xchg
shrb
push
mov
test
sbb
dec
fstpt
inc
or
ret
out
pop
lds
orl
in
stos
je
imul
or
inc
filds
pop
pop
pop
lds
in
and
dec
addb
jb
scas
jmp
sbb
mov
test
fdivrs
push
cs
and
out
sbb
mov
loopne
dec
popf
int3
pop
aas
data16
lahf
push
adc
pop
or
sub
stc
rolb
inc
pop
xor
sahf
insl
pop
cmp
dec
pop
mov
mov
nop
in
xor
enter
mov
clc
xchg
lret
sub
loopne
subl
xchg
fmul
inc
lock
mov
xor
mov
and
loopne
adc
clc
cmc
mov
ret
mov
add
cmp
fbstp
add
arpl
and
push
enter
xor
mov
jb
push
out
in
cltd
imul
xor
push
dec
add
fst
dec
push
ret
cmp
lods
int
fbld
sub
cs
lahf
jg
fldenv
je
or
mov
and
lahf
cmp
pop
in
jbe
jnp
or
add
stos
cs
xlat
sub
test
jb
outsl
icebp
lret
fistl
sub
mov
aad
xchg
cmpsb
outsl
mov
jae
dec
fldt
add
sbb
enter
pop
jae
cmpsb
shl
imul
in
outsb
inc
dec
addl
sbb
push
imul
outsl
push
xor
fldl
sbb
arpl
imul
jno
repz
sub
mov
mov
out
sub
aaa
lea
add
sub
insb
add
mov
popa
jmp
jp
adc
pop
jbe
pop
mov
jae
push
adc
add
or
fsubl
in
data16
adc
scas
fcmovnb
pop
ret
testb
inc
adc
inc
push
and
sahf
fdivs
stos
int3
es
movsl
sbb
push
push
add
and
cmp
push
xor
mov
leave
fisubl
mov
cmp
mov
outsb
mov
jl
or
push
scas
test
popf
cmp
sahf
dec
cmp
mov
push
aad
cmp
mov
mov
mov
dec
mov
add
or
lods
dec
fwait
add
mov
pop
add
aas
movsb
daa
test
lret
and
icebp
out
inc
and
jmp
mov
add
mov
scas
add
ret
mov
ljmp
inc
ret
fs
andl
daa
dec
push
mov
pop
imul
push
test
mov
repnz
ret
popa
xor
loop
mov
mov
sbb
mov
mov
inc
push
insb
push
es
push
mov
or
imul
cmpsl
cmp
lcall
jge
or
loopne
push
or
mov
lds
divl
jbe
xchg
inc
sbb
pop
cmp
in
out
popa
lret
adc
push
enter
jb
push
pop
inc
jg
rcl
pop
repz
movsb
xchg
out
bound
jb
fld1
cltd
push
popf
aam
dec
fiadds
bound
mov
repnz
dec
mov
pop
jge
mov
stc
adc
or
sub
outsl
push
cmp
mov
xor
mov
repz
fwait
mov
int3
dec
or
sub
into
mov
cld
lods
stc
scas
fisttps
popf
test
lock
int
mov
add
push
pop
stos
xor
push
mov
jecxz
pusha
leave
sarb
adc
imul
fadds
rcrb
inc
popa
pop
sarb
and
mov
bound
mov
test
sti
jg
jp
dec
xor
scas
jecxz
scas
push
loope
xor
pushf
dec
addl
mov
mov
sahf
lock
cmp
ret
aad
mov
push
loop
into
imul
ja
dec
sub
ljmp
aaa
mov
enter
faddl
icebp
sar
push
or
mov
test
ret
sbb
add
cmp
leave
aam
inc
jge
test
aad
sbb
sar
aas
test
push
xor
jge
out
loop,pt
lahf
out
stos
sti
imul
add
mov
fcomps
test
out
sbb
push
stos
jns
ss
push
pop
dec
jns
jp
dec
pushf
ficoml
lds
push
add
cwtd
and
pop
mov
hlt
sub
pop
mov
mov
icebp
fdivl
pop
jae
jle
add
xchg
add
xchg
mov
mov
js
xchg
add
dec
int3
jecxz
fwait
push
divb
and
inc
mov
xor
gs
pop
push
adc
and
inc
and
test
out
hlt
aad
push
xchg
cmc
push
dec
popa
sub
popa
inc
addr16
ret
test
mov
sahf
out
xor
inc
mov
arpl
lcall
mov
mov
setp
inc
lret
sub
xchg
push
iret
repnz
cmp
or
imul
popa
aas
inc
ss
pop
mov
xchg
cmp
push
fnstenv
adc
jnp
popf
jne
jge
stc
inc
test
push
mov
adc
mov
adc
iret
cltd
jecxz
inc
les
sub
inc
std
jge
lahf
notb
sub
xchg
movsl
mov
aaa
add
stos
mov
mov
pop
or
mov
imul
jbe
mov
test
lods
pop
inc
pop
dec
mov
jno
jmp
movsb
jle
sub
hlt
jae
dec
subl
lea
mov
in
icebp
aaa
rorl
or
mov
sbb
rolb
int3
xchg
ss
cmp
ds
cld
and
xchg
xor
lock
cltd
mov
enter
adc
sub
sbb
or
loope
insl
inc
jmp
xor
out
movsb
shrb
mov
lods
jmp
scas
jns
out
lods
jl
out
subl
rcl
gs
pop
dec
data16
cmp
test
push
ret
or
fs
jecxz
mov
xchg
push
sbb
sub
stc
ss
xchg
xor
adc
xorl
cs
cmc
in
sbb
nop
into
aaa
xor
es
call
mov
ljmp
adc
add
push
inc
jmp
pop
mov
push
xor
push
dec
ss
pop
mov
mov
jno
movsb
std
xchg
lcallw
shrl
inc
adc
push
jo
ficoml
iret
arpl
xchg
and
inc
xchg
ret
mov
aas
push
mov
sbb
push
xchg
xor
jecxz
cmp
sub
inc
jnp
psrld
lods
pop
arpl
and
pop
aam
xor
jae
es
insb
mov
dec
rolb
push
sbb
pop
adcb
xlat
lea
mov
sub
stos
leave
xor
aaa
push
add
mov
sti
xchg
jbe,pn
cmc
shlb
je
sub
lret
pop
and
scas
push
sbb
pop
mov
push
stc
xchg
mov
stos
and
and
and
popa
imul
jecxz
ja
dec
je
push
sub
jo
daa
mov
ret
stos
stos
ds
int3
cmp
cmpsb
incl
xor
lods
cmpsb
pushf
pushl
ds
jnp
and
lods
lea
bound
sbbb
mov
pop
imul
in
or
imul
xor
mov
incb
lea
pop
aam
fistl
mov
sti
dec
cli
inc
std
lock
mov
mov
jecxz
mov
jmp
in
adc
ljmp
jp
mov
push
sarl
in
cmp
xlat
sub
sbb
push
fidivs
pop
testl
dec
outsb
lds
sbb
movsl
cmp
inc
dec
hlt
xor
xlat
pop
mov
js
sahf
out
inc
push
test
cld
in
pop
cmc
icebp
into
cmp
push
cmp
add
not
adc
outsb
pop
in
je
mov
mov
rclb
out
aaa
xor
mov
call
lret
and
adc
sub
sbb
push
in
adc
sub
sbb
cmc
pop
cmp
movsb
jns
insl
fstl
mov
add
xchg
inc
mov
mov
jo
rcrb
xchg
or
or
dec
imul
iret
adc
dec
xor
mov
loope
test
subl
stos
sbb
add
lods
shlb
lret
js
and
sbb
mov
aas
arpl
lock
int
ret
daa
popl
push
add
scas
pop
dec
sub
outsl
jmp
add
icebp
mov
hlt
and
and
lock
lcall
mov
leave
sarl
enter
out
add
out
mov
push
imul
or
mov
insb
iret
add
fldt
ret
lock
enter
in
dec
aaa
xor
ret
inc
in
xor
jg
and
je
loop
loope
cli
popa
xor
or
or
or
adc
fisttps
or
das
repnz
jb
xorb
pop
jl
in
not
mov
pop
sarl
scas
inc
ja
lret
jp
xor
pop
push
test
sub
push
push
jno
data16
pop
mov
arpl
divl
sub
push
cmpsl
inc
xchg
and
mov
adc
mov
mov
sbb
int3
pop
insl
mov
leave
dec
test
fistpl
loop
stos
out
push
mov
xor
inc
cwtl
xlat
add
and
testl
sarl
pop
jecxz
test
inc
fwait
ljmp
imul
mov
push
sub
adc
ja
add
imulb
sbb
inc
jae
filds
xlat
arpl
pop
and
push
push
loop
imul
xor
lods
leave
or
ss
or
cwtl
movsl
mov
fs
sub
jo
pusha
ljmp
scas
test
adc
mov
add
cmp
jno
and
test
or
adc
test
jb
or
push
arpl
xor
pusha
add
addr16
cmpsl
cmp
adc
jne
popf
jge
dec
and
fistps
popa
xchg
lods
ds
rcrb
mov
das
xor
lcall
mov
xchg
lcall
or
push
push
cmp
ja
dec
pop
sub
jge
inc
rol
cmp
push
notb
inc
mov
ret
mov
mov
lods
movsb
aad
mov
inc
movsl
xorb
dec
pop
cs
pop
push
shr
fistl
pop
sbb
jns
jge
clc
jg
push
out
sub
data16
mov
and
loopne
mov
aaa
adc
adc
sbb
nop
jns
cmp
push
cmpsl
aam
cld
push
xor
sbb
sbb
je
push
aam
adc
fnstenv
push
fwait
fwait
popa
cmp
out
ja
lds
dec
add
xor
cmp
mov
push
or
divl
mov
push
add
mov
sbb
sbb
pop
jmp
mov
mov
fisubrs
dec
icebp
adc
sahf
fdivrl
sbb
jecxz
pop
mov
inc
push
adc
stos
cmp
aam
mov
xor
cmpsb
adc
inc
lock
je,pn
sbb
dec
xchg
cli
dec
addl
pusha
sub
cs
ffreep
test
ljmp
xchg
xchg
shll
test
rclb
cli
stc
dec
fs
xchg
mov
or
rcrb
inc
sbb
pusha
stos
inc
and
pusha
mov
mov
fs
sub
cltd
push
cmc
mov
mov
test
dec
lock
pushf
roll
mov
add
xlat
mov
test
pop
outsl
scas
and
aad
dec
nop
in
scas
test
out
pop
iret
cmp
jo
and
mov
dec
cmp
scas
push
mov
mov
inc
in
pop
and
loope
lods
mov
xchg
xchg
xchg
mov
xlat
mov
ss
in
push
cltd
aad
ficompl
shlb
sahf
mov
aas
mov
xlat
and
ficomps
sub
push
jge
fsts
add
inc
xorl
fs
sbb
orl
stc
xcrypt-ofb
cmpsl
lods
out
cmpsb
int
jmp
cmpsb
lods
dec
xchg
inc
sbb
nop
clc
mov
mov
hlt
sbb
pop
shrl
or
sbb
lret
jge
pop
cmp
or
fildll
cmpsl
jae
or
imul
cmp
dec
outsb
es
repz
popa
cmpsb
adc
inc
adc
in
push
xchg
fstpt
cmc
std
jne
push
xchg
lcall
dec
xor
in
mov
lock
stos
shl
insb
jb
cld
fsub
out
and
cld
push
jge
xor
inc
repnz
and
ret
lock
pusha
xchg
and
pop
push
movsb
idivb
mov
mov
into
nop
enterw
push
sub
ds
rcrl
imul
pop
lods
mov
adc
sub
loopne
data16
sbb
xor
inc
pop
add
in
aam
add
push
rclb
cmp
adc
nop
pop
add
jno
jne
adc
xor
inc
jle
mov
mov
testb
mov
cli
xchg
fidivs
mov
mov
negb
outsl
pop
mov
pop
test
pop
or
push
pop
test
insb
sbb
clc
xchg
outsl
pop
mov
jo
dec
pop
mov
inc
leave
push
aas
add
and
adc
aam
sbb
clc
and
or
dec
imul
push
dec
shrl
sbb
mov
xchg
push
mov
push
hlt
fimull
cs
cmp
loopne
lea
xor
mov
mov
jne
pushf
xchg
lods
jno
lret
adc
int3
add
lahf
add
fsubs
inc
movsb
ficomps
xchg
xchg
lret
xchg
pop
loop
icebp
sbb
pushf
adc
jnp
lahf
jbe
add
jnp
xchg
mov
divb
pop
add
sbb
jp
movsl
and
leave
lahf
daa
cmpsb
pop
movsl
push
aaa
in
cmc
repz
insb
inc
cltd
std
mov
and
xor
xchg
sub
addr16
dec
test
xchg
sbb
stos
jnp
pop
mov
aaa
sbb
inc
push
push
aaa
inc
imul
jns
mov
scas
pop
cmpsl
or
rcrl
dec
fs
xlat
loope
ss
pop
or
scas
xchg
shrl
ds
hlt
and
mov
int
int
jg
jmp
fmul
cmp
lret
push
pop
cmp
mov
lds
bound
sub
out
in
pop
pop
repz
fldt
sbb
xlat
mov
orl
or
negl
les
mov
push
test
pop
addb
pop
push
cmpsl
mov
test
mov
fwait
xchg
call
push
fnclex
rorl
outsb
and
xor
sti
sbb
inc
cmp
aaa
or
not
cmp
push
push
mov
mov
mov
sahf
fsubrl
lret
sbb
sbb
and
push
mov
adc
cmpsb
mov
add
xchg
ja
push
mov
inc
dec
xor
cmp
daa
push
jbe
pop
mov
test
shlb
mov
add
jge
into
scas
and
and
pop
cmp
mov
ret
jno
mov
lods
or
push
adc
out
in
mov
mov
mov
sub
cld
into
and
or
rol
inc
sub
in
or
xchg
js
fists
mov
loope
mov
cmp
std
push
sub
pop
daa
mov
imul
lods
frstor
mov
sbb
dec
add
adc
lods
stc
movsl
xor
int
call
mov
pop
push
push
mov
sbb
sub
das
lea
mov
cmpl
shl
mov
xchg
xchg
lock
out
movsl
loopne
mov
and
inc
cwtl
mov
fstps
orb
hlt
js
js
jns
lock
dec
push
pushf
jne
add
xor
sbb
insl
adc
xlat
fistps
cmp
ja
fdivrs
and
rorl
jne
xor
and
mov
adc
pushf
leave
xchg
mov
or
dec
mov
adc
cmp
push
xchg
cmp
outsl
dec
sbb
mov
push
sub
push
sbb
dec
es
lret
cmp
jns
push
pusha
and
fucomi
loope
nop
hlt
cmp
xor
mov
data16
mov
ljmp
clc
inc
enter
repnz
adc
fcmovu
mov
jne
fwait
sub
and
repz
adc
push
push
adc
mov
es
pop
jle
fdivrl
out
inc
iret
jbe
pop
sub
pusha
test
cmc
pop
push
pop
or
iret
test
rcrb
and
adc
fwait
add
mov
and
lahf
fwait
ret
push
mov
rcrb
adc
leave
out
pop
jge
test
mull
xor
jo
inc
push
xchg
mov
and
rol
mov
enter
in
mov
in
and
mov
scas
xor
testl
jg
xor
addr16
rolb
test
rcl
jmp
cmc
fldcw
xchg
hlt
cli
hlt
push
xchg
test
or
xchg
scas
add
inc
in
inc
push
and
cld
mov
daa
mov
sub
or
inc
jo
push
cmp
test
ret
cmpsl
jl
xchg
mov
sub
jp
out
mov
ljmp
stos
cmp
xchg
cs
pop
dec
cltd
jo
dec
pop
out
sub
pop
outsb
dec
jmp
xchg
bound
dec
sahf
xchg
arpl
in
jb
push
add
mov
js
fwait
add
hlt
mov
out
dec
dec
mov
bound
sbb
push
int
jne
cmp
arpl
pop
mov
cmp
sub
outsl
add
mov
fdivs
mov
push
mov
aam
int3
out
test
adc
xchg
sub
push
mov
leave
or
mov
adc
inc
hlt
loop
push
add
sbb
and
rol
test
inc
pop
stc
mov
or
std
daa
hlt
mov
adc
cmp
push
mov
loop
movsl
mov
pop
test
sbb
xor
sub
or
lods
mov
out
pop
out
and
jae
jo
shrb
stc
sti
xchg
dec
leave
push
mov
and
adc
loopne
cmpb
dec
cmp
movsb
adc
pop
sbb
inc
inc
testb
jno
lods
sar
push
aad
out
imul
sub
lds
jns
dec
xor
shr
dec
dec
xchg
pop
mov
cmp
xchg
jo
pop
enter
test
call
and
cmc
scas
rclb
aaa
pushl
mov
loopne
js
and
mov
out
sbb
out
outsl
imul
mov
daa
sbb
sbb
mov
pop
roll
sbb
dec
ss
mov
push
popf
jno
aad
adc
and
pop
es
inc
adc
stc
and
ds
sub
sti
in
mov
call
mov
lea
dec
xor
inc
sarb
popa
aam
shlb
jne
xchg
nop
into
das
in
jecxz
stc
mov
outsb
mov
sub
es
add
gs
sti
xchg
rclb
sbb
xor
dec
loope
imul
adc
jp
insl
fldenv
add
mov
sahf
cmpl
xchg
adc
adc
pshufw
and
into
dec
mov
int
add
test
js
mov
add
mov
out
jbe
mov
pop
lods
shlb
jnp
shrb
insb
int
lds
add
in
mov
shlb
adc
loopne
sahf
xchg
xchg
out
addr16
sub
cmpsl
pop
jle,pt
out
fs
push
and
adc
aam
call
add
into
icebp
cwtl
dec
cmc
test
jno
sbb
scas
dec
icebp
mov
fnstenv
mov
shrl
imul
inc
or
add
mov
in
or
mov
aaa
fsubl
andb
push
sbb
or
mov
jns
sbb
pop
sub
mov
mov
in
jcxz
sub
jmp
inc
cmpsl
cmpsl
inc
movsb
pop
out
mov
mov
std
mov
inc
sbb
cmp
loope
pop
inc
fcmovu
xchg
push
dec
jecxz
fstpl
sbb
ljmp
cmp
shlb
add
xchg
xchg
adc
leave
or
push
cmp
sahf
lcall
sub
cmp
cmp
jo
mov
aad
scas
test
aaa
cmc
xlat
xor
push
into
sub
shr
mov
pop
mov
jb
scas
xor
xchg
sbb
inc
lods
leave
jge
xchg
ret
mov
loope
arpl
inc
or
inc
mov
jo
stos
mov
addr16
test
dec
int
fmul
sub
fsts
sub
sahf
inc
dec
jne
mov
and
repnz
cmp
scas
cli
lock
mov
jg
add
xchg
fwait
cmpsb
mov
push
and
repnz
int3
adc
test
sahf
sti
int3
std
inc
scas
xchg
dec
jne
pop
scas
rclb
mov
mov
test
sbb
jno
pusha
sub
jmp
shlb
cmpsb
out
inc
movsb
fidivrs
mov
int
mov
or
clc
call
or
mov
cmp
outsb
aas
movsl
jae
jae
or
fldenv
jae
jl
adc
add
mov
ljmp
sbb
sub
sub
jns
negl
hlt
mov
mov
cmp
mov
lret
scas
repnz
pop
mov
in
aas
loopne
xor
push
and
imul
mov
and
push
insl
fldl2e
inc
pop
cmp
pushf
imul
jno
mov
xchg
es
fstpl
shlb
jne
daa
mov
push
enter
out
popf
inc
mov
stc
push
xchg
inc
fsubrs
popa
fildll
cli
inc
sbb
fnstenv
inc
mov
repnz
cmp
fldenv
mov
jae
out
outsl
incb
xchg
mov
popf
jg
scas
daa
lea
rcll
dec
into
ds
or
xchg
notl
push
cs
enter
dec
cmp
mov
xor
inc
jo
subl
ss
leave
mov
xor
sar
xchg
push
inc
push
push
pop
int3
rcll
cmp
stos
xor
in
xor
or
adc
push
mov
pop
push
shr
sti
iret
out
inc
sbb
cmc
cmp
jmp
push
pop
cmp
lret
sub
test
pusha
pop
aas
pop
loope
inc
cmpsb
jae
push
insl
or
and
jmp
jecxz
test
fdivl
test
shrl
sbb
pop
in
insb
aaa
adc
add
adc
scas
jo
pop
movsl
movsl
push
repz
std
lea
pop
dec
rcrl
shl
popa
mov
push
lret
push
test
jns
mov
jge
fisttpl
cld
es
jno
mov
cmpsl
xchg
add
mov
mull
arpl
gs
repz
imul
pop
mov
shl
lret
imul
push
scas
cs
jns
test
cmpsb
xor
and
scas
jae
sbb
xchg
xchg
cmc
repz
test
add
stos
fldcw
mov
pop
cmova
xchg
ja,pn
dec
cld
pop
mov
or
pop
lcall
mov
mov
out
pusha
lock
icebp
add
outsl
mov
int3
mov
out
leave
inc
and
lret
xlat
test
adc
xor
bound
pop
lock
sahf
int
mov
sub
out
xlat
pop
addps
adc
repnz
sbb
fistl
jecxz
adc
stos
iret
sti
lret
dec
das
jle
cmp
dec
filds
aam
push
insl
movsb
or
jo
mov
mov
jae
xor
mov
test
imul
push
movsb
outsl
pop
sbb
mov
dec
xor
lods
adc
dec
adc
test
push
das
daa
insb
and
push
add
mov
and
and
jl
mov
aaa
mov
movsb
mov
lea
or
shll
test
adc
aas
or
push
fdivrs
test
xchg
rcll
pushf
enter
test
shr
cmp
xchg
loop
out
pusha
or
loop
and
lods
sbb
jbe
dec
mov
pop
sti
add
xor
jl
add
addr16
aaa
sarl
addr16
adc
aas
stos
in
adc
int3
xor
fisubrl
push
adc
jae
test
rclb
sti
loop
mov
xchg
clc
pop
push
mov
test
sub
dec
pop
and
xor
in
popf
xchg
add
xlat
push
in
xor
push
bnd
dec
into
mov
lds
std
mov
inc
add
and
mov
lock
jge
bound
and
mov
add
mov
in
out
cmpb
test
inc
mov
add
test
prefetch
mov
push
daa
pop
je
pop
clc
ljmp
lahf
cmpsl
mov
lcall
ret
jg
in
inc
cmp
lds
push
sbb
incb
adcb
cld
rcrl
lods
push
sbb
add
pop
and
fnstenv
data16
int
or
loop
fiaddl
adc
mov
cs
mov
jle
pop
jne
sahf
pop
sub
fwait
shll
in
jne
ds
or
fwait
cmp
ljmp
xchg
fidivs
sub
sti
nop
jmp
aad
dec
ljmp
inc
push
cmc
cld
push
mov
mov
fisubrs
sub
inc
addr16
scas
clc
es
cmp
jno
outsb
jns
cmp
xor
ds
lea
movsl
dec
or
sub
scas
or
mov
or
in
pop
jae
repnz
mov
add
cltd
mov
test
lock
out
jecxz
imul
cltd
roll
dec
pop
rol
test
std
repz
into
fcompl
mov
movsb
add
sbb
ret
sub
sub
dec
push
jnp
add
mov
sub
xchg
cmpsl
call
mov
mov
sub
inc
outsb
or
ljmp
fsubrs
fldz
movsl
loope
xchg
dec
inc
fdivs
sbb
repnz
dec
shll
push
shrb
mov
jecxz
lods
idivl
sbb
inc
push
pop
or
or
lahf
pop
insl
xchg
xchg
neg
jg
jb
xor
dec
xchg
xor
cmp
adc
push
pop
cmpsb
push
lret
je
mov
fimuls
mov
mov
mov
jnp
cld
test
sbb
xor
jp
dec
je
and
nop
ret
jnp
adcl
test
lds
das
push
loopne
add
cmc
jle
sbb
std
mov
pop
mov
call
sub
dec
ds
mov
dec
lret
mov
jle
mov
incb
stos
push
xchg
je
mov
mov
stc
adc
scas
insl
xor
adc
mov
in
aad
out
notb
clc
mov
loope
stc
mov
pop
mov
push
dec
shr
fidivrl
jl
test
mov
imul
in
push
mov
dec
add
mov
adc
cmp
sub
sub
mov
pop
lcall
xchg
fildll
nop
sub
push
jo,pn
jle
movsl
cmp
lret
xchg
sahf
sub
sar
adc
pop
jecxz
jge
and
adc
pop
adc
sahf
loop
mov
pop
mov
pushl
dec
sbb
jmp
pushw
pop
push
mov
loop
hlt
fwait
adc
es
mov
in
adc
loopne
pushf
cmp
mov
or
popa
cmp
cmp
in
loop
xchg
arpl
sub
les
add
loope
mov
or
jmp
jg
pop
dec
push
stc
cli
adc
push
call
rorb
popf
xchg
add
sbb
pop
pushf
sub
inc
jl
xchg
dec
addr16
jg
fisubs
xor
sti
pop
das
mov
daa
jno,pt
mov
enter
mov
dec
cltd
lds
mov
push
mov
xlat
jae
mov
aam
aad
xchg
jo
sarb
inc
pop
add
ret
pop
jp
push
add
inc
push
in
mov
enter
cmc
add
jmp
mov
in
aam
jl
adc
and
inc
mov
imul
cmp
fcoml
dec
ss
ss
sbb
lock
sarl
adc
mov
push
mov
hlt
adc
repnz
jl
mov
scas
imul
fcomp
or
mov
int3
mov
in
imulb
inc
and
cmc
sahf
and
or
jno
arpl
xchg
inc
add
adc
push
push
sub
sbb
arpl
mov
mov
add
lahf
in
icebp
out
sub
das
das
lods
imulb
shlb
outsl
iret
std
in
cs
cli
enter
mov
mov
das
lods
cmpsl
xchg
movsb
adc
add
loopne
pop
inc
mov
cmp
pusha
ja
or
jo
imul
xchg
out
inc
cmp
nop
dec
clc
inc
add
repz
push
xchg
and
sahf
and
sarb
aaa
loop
mov
int3
lret
add
jle
xchg
lret
iret
mov
push
sub
mov
push
cmp
into
in
cmp
lock
mov
xor
in
jp
lcall
fidivrs
or
dec
lcall
push
sbb
fldenv
imulb
mov
lret
jae
xlat
sbb
push
dec
jle
out
pushaw
imul
mov
sub
lcall
xor
test
ret
xor
scas
ds
lea
fistpl
sar
insl
pop
mov
push
divb
aaa
lods
adc
sub
mov
xchg
int
pop
rcll
popa
push
rcll
or
inc
inc
jmp
sbb
ja
inc
leave
cld
data16
lcall
psubb
xlat
lds
inc
rclb
jge
in
ljmp
pop
or
dec
divb
gs
jno
sbb
popf
fdivrl
fsubl
in
mov
ljmp
xchg
shrl
jge
dec
cmp
xor
add
mov
push
xor
xor
sbb
lea
loop
xchg
adcb
aad
loopne
imul
in
inc
mov
pop
fdivl
sti
shlb
cmp
or
push
add
fidivs
sub
loopne
fbld
les
std
cmp
pop
pushl
lahf
jns
push
mov
xchg
in
lahf
test
addl
jne
sub
ficomps
inc
push
push
dec
xchg
cmp
adc
jno
dec
mov
xor
js
inc
add
sub
push
and
mov
mov
outsl
pop
fistpl
in
ja
mov
loop
inc
rclb
loopne
xor
nop
aas
ficomps
sarb
loope
movb
outsb
pop
push
inc
dec
mov
cmc
fst
and
xor
mov
add
les
insb
cmp
add
or
cmp
mov
sbb
mov
lret
mov
push
daa
jnp
in
sti
inc
icebp
and
aaa
leave
or
mov
lret
dec
pop
scas
or
add
cmp
cwtl
js
sbb
stos
adc
fs
sub
out
loope
jl
jae
push
pop
stos
lcall
cwtl
xchg
add
sbb
jbe
xchg
mov
les
mov
les
sub
mov
mov
ret
nop
lea
ds
add
dec
out
lahf
insl
cli
mov
jae
cli
lea
xchg
cs
xchg
or
and
nop
into
mov
int
data16
jp
cwtl
sbb
cli
jo
pop
movsb
arpl
lret
cwtl
shrb
xlat
ret
sbb
cld
scas
movsl
sti
leave
push
mov
dec
mov
dec
cmp
inc
mov
cmp
cmp
pop
xor
cltd
lret
mov
or
mov
cmp
hlt
in
shrb
add
sub
lret
inc
sub
jae
push
je
pushf
inc
cs
inc
inc
sbb
fs
mov
movsl
mov
call
pusha
add
pop
xchg
cltd
lcall
cld
aad
sbb
jno
sbb
jp
dec
in
add
push
test
ret
gs
fadds
fildll
jg
pushf
stos
cmp
push
jmp
nop
enter
movsl
aad
jle
sti
sub
mov
pusha
stos
fdivs
es
mov
inc
pop
pop
mov
jno
rclb
ljmp
and
add
leave
mov
cmp
lcall
aaa
pop
push
jp
idiv
daa
fdivl
ret
push
addr16
in
xchg
test
pop
xor
das
loope
rorl
idivb
pushf
jne
mov
fsubp
mov
mov
adc
fbstp
mov
rcll
sarl
cmp
lods
pop
stos
and
or
ja
pop
sbb
inc
outsb
sbb
shr
std
adc
pop
imul
shrl
mov
out
js
sti
sarl
fisubs
pop
and
popa
xchg
cmp
repz
push
cli
cmp
pushf
mov
xchg
and
bound
mov
data16
int3
js
or
cmp
push
decb
or
mov
scas
dec
sbb
fidivrl
sub
in
mov
adc
push
push
repz
xchg
int
xchg
mov
jmp
clc
adc
push
and
out
daa
mov
out
cld
mov
and
mov
psubsb
mov
cmpsb
jno
fst
cmp
push
adc
pop
add
daa
inc
mov
xor
inc
inc
mov
js
aam
jp
cmp
and
push
inc
adc
mov
in
js
and
movsb
mov
cmpsb
sbb
pop
cmp
push
mov
push
cmc
repnz
and
and
jmp
scas
clc
sbb
xor
pop
xchg
out
ficomps
push
sbb
jge
inc
inc
cmp
sub
rclb
into
pop
jge
movsb
pop
test
addr16
dec
sbb
cmp
add
mov
cli
out
addb
je
jae
mov
jg
outsl
add
and
inc
fdivs
mov
aaa
and
mov
and
push
push
jp
rcr
push
mov
fmul
sub
addb
adc
mov
jp
js
ret
jbe
cmpl
stos
cmp
repz
mov
add
rcl
cmc
or
sbb
aaa
inc
loope
arpl
jnp
in
scas
mov
sbb
std
fadd
cld
pop
popa
mov
out
xor
and
inc
pushf
dec
push
cmp
mov
jmp
mov
fchs
in
inc
adc
add
and
xchg
inc
rolb
add
sub
jle
mov
xchg
jb
imul
or
pushf
jle
dec
xchg
pop
adc
lcall
mov
jmp
and
cmp
inc
xor
test
xor
adc
push
inc
test
test
lret
insl
dec
mov
fcoml
fdivrl
test
and
fsubl
fdivrp
push
cmp
dec
mov
mov
arpl
in
movsb
adc
cmp
loopne
lahf
rorb
dec
add
stos
imul
mov
fsubs
imul
or
xchg
daa
stc
dec
adc
and
into
insl
nop
jl
sbb
add
lcall
mov
int
adc
xchg
mov
imul
and
mov
sub
divl
and
test
mov
or
testl
xchg
or
and
add
int3
mov
out
sbb
add
ret
repnz
pop
lea
or
inc
into
inc
idivb
sub
xor
icebp
sub
or
out
in
ja
int
stc
xchg
lods
and
inc
fistl
pop
cmp
mov
in
add
or
xor
inc
outsl
jae
push
xchg
pusha
dec
scas
or
test
xor
dec
js,pn
xchg
and
and
js
iret
lcall
ret
enter
add
int
daa
or
shl
imul
repnz
aam
into
jo
outsb
jne,pn
adc
stc
push
mov
je
fs
aam
push
test
mov
arpl
mov
mov
ljmp
ret
hlt
mov
inc
jmp
aad
or
push
testl
adc
std
xor
cs
in
arpl
push
push
test
fsubrl
cltd
popf
sbb
or
into
nop
cmp
cmp
mov
faddp
sbb
fsub
mov
test
roll
inc
movsb
fldenv
mov
pop
mov
test
ljmp
lock
sub
iret
dec
negl
imul
lock
lahf
xchg
mov
mov
pop
and
test
das
jmp
decl
push
movsl
out
hlt
mov
pop
out
sub
xchg
in
mov
ret
cltd
mov
mov
icebp
push
push
enter
rcll
mov
test
hlt
push
js
stos
mov
and
js
mov
or
jmp
dec
nop
in
push
fwait
rcrl
frstor
mov
outsl
mov
push
mov
push
mov
cmp
pushf
cmp
sbb
iret
add
cmpsb
js
mov
fiadds
inc
mov
loopne
popf
adc
js
xor
incl
arpl
adc
es
int3
or
push
out
dec
mov
pop
push
adc
xchg
mov
mov
stos
pop
cs
add
mov
je
add
or
mov
or
int3
jne
push
ds
lret
js
cmp
call
data16
xchg
sbb
imul
rcll
enter
syscall
std
sub
nop
adc
xorb
lcall
ja
cmp
xor
mov
mov
lret
xchg
xor
aad
push
inc
enter
mov
lret
xorl
push
adc
adc
mov
mov
in
mov
cmp
lret
mov
imul
mov
out
roll
stc
int3
cmp
fsubrl
rorb
cli
add
ljmp
mov
jecxz
inc
push
jns
subl
mov
and
dec
insb
sbb
adc
or
fistpl
push
in
push
and
mov
cmp
aad
and
dec
or
sbb
lods
imul
xchg
mov
pop
push
leave
jbe
out
rolb
das
sbb
xchg
int
mov
insb
cmpsl
mov
or
sub
jae
fs
or
aaa
xchg
jno
js
sub
add
xlat
or
les
and
in
lods
test
mov
adc
mov
loopne
mov
mov
aaa
sub
mov
sub
out
inc
dec
in
bound
cmp
out
pusha
les
movsl
aaa
mov
push
inc
jo
out
test
lods
mov
xchg
lea
mov
aam
push
subb
xor
out
adc
mov
fisttpll
cmc
jecxz
imul
xor
sub
scas
cmp
push
rcrb
mov
cmpsb
dec
call
adc
lods
mov
sbb
sub
mov
repnz
stc
fs
iret
lret
rcrl
out
andb
mov
repz
pop
loope
cmp
adcl
adc
xchg
aad
push
cmpsl
movb
loop
jge
add
les
jp
into
lods
push
popf
or
insb
push
cmpsl
dec
push
adc
insb
add
lods
js
nop
mov
jb
mov
dec
test
sti
and
loopne
cmp
loop
pop
fldcw
cmpsl
rolb
add
cs
xor
popa
call
push
xor
sbb
lahf
or
int
pop
stos
cmp
out
inc
pusha
cmp
xorb
ja
rcrb
aam
imul
cltd
jno
insb
int
push
mov
enter
dec
lcall
pop
jno
inc
fs
dec
fiadds
adc
inc
push
fisubrl
loope
push
stos
shrl
clc
lods
jge
adc
scas
sub
mov
aaa
mov
mov
mov
jo
adc
lcall
lea
imul
pop
add
xchg
in
outsl
dec
shll
add
and
cmp
xchg
mov
repz
adc
fcomps
mov
pop
cmpsl
jne
cmp
sub
test
sbb
xor
mov
xchg
call
xchg
fildll
inc
adc
adc
ja
adc
stc
pop
cmp
push
cmpsb
stc
add
test
or
pop
push
jae
sbb
lds
inc
xor
ret
sti
mov
ret
scas
mov
imul
pop
push
push
xor
outsl
mov
lahf
repz
sub
xchg
fs
lods
or
test
hlt
lods
sbb
inc
shrb
pop
or
dec
movsb
xor
xor
rcr
cmp
mov
xchg
pop
add
adc
cli
pop
and
sbbl
sbb
dec
lahf
daa
je
sarl
stc
mov
into
cmpsb
pop
xlat
cmp
sub
mov
cld
pop
lods
cmpsl
mov
mov
mov
jecxz
loope
aas
or
vmovlpd
jae
rorb
loope
cmpsl
cmp
and
fnstenv
mov
pusha
pop
push
ret
sub
push
test
and
out
sub
mov
daa
cld
gs
pop
fwait
mov
push
sti
sbb
insb
pop
pushf
shll
dec
sbb
cmc
or
jge
sbb
or
outsb
idiv
sbb
and
inc
scas
mov
and
leave
mov
out
dec
outsl
repnz
imul
xchg
jle
mov
mov
mov
insb
sub
dec
xchg
jns
loop
cmc
push
mov
test
loopne
int3
pop
cmpsl
xor
xor
jnp
sbb
in
pop
ficoml
stc
movsl
mov
jmp
and
icebp
xchg
mov
aas
jne
stos
rcrb
xor
aas
outsb
repnz
and
pop
mov
ss
sbb
add
fisubl
or
inc
mov
lea
int
and
pop
lods
mov
stos
push
adc
pop
ja,pn
pop
inc
mov
sbb
dec
inc
std
in
mov
jbe
addr16
test
andb
leave
or
fs
mov
aam
repz
mov
mov
sub
adc
dec
or
loopne
inc
fcoms
int3
les
xor
in
enter
push
mov
xchg
mov
and
jecxz
shrb
mov
xchg
mov
jecxz
lcall
pop
add
lock
ret
xchg
xchg
stos
and
or
or
cwtl
stc
and
inc
jle
mov
pop
dec
mov
or
fisttps
nop
sbb
call
aaa
ret
inc
test
jge
sahf
xor
int3
lds
ret
adc
cmp
pop
jae
adc
mov
test
out
ficoms
loop
jnp
inc
cli
jecxz
adc
fisttps
shlb
mov
jecxz
xchg
push
call
push
insl
rcll
lods
jne
dec
mov
adc
adc
adc
stos
mov
mov
xchg
or
sbb
fldt
neg
ds
push
dec
push
xchg
inc
inc
cmpl
or
icebp
adc
imul
arpl
cld
pusha
sbb
loopne
notl
cmpl
jl
jle
testb
sbb
adc
out
adc
dec
mov
pop
pop
jl
in
inc
xor
out
mov
lret
mov
jbe
mov
addr16
inc
sub
mov
xchg
aam
insl
lret
data16
lahf
xchg
dec
cmp
jno
xchg
sub
jb
sti
adc
jns
jae
das
jle
mov
or
jecxz
sbb
repz
xchg
jle
lahf
cwtl
mov
lahf
jle
xor
push
sbb
mov
loop
cwtl
mov
leave
dec
lock
mov
incl
subb
rorb
xor
sub
push
inc
dec
and
push
xchg
mov
mov
sahf
testb
push
sbb
in
je
imul
jmp
ljmp
insl
xchg
das
add
les
fcoms
notb
nop
adc
hlt
inc
cli
shr
mov
sar
sub
cmpsb
in
jmp
mov
push
inc
pop
dec
pop
addb
pop
adc
aad
cmp
fstps
call
loope
inc
push
adc
xor
cmpxchg
pop
pop
push
jo
aam
fs
test
and
and
add
hlt
cmpsb
xor
test
pop
sbb
and
adc
xchg
pop
sub
loopne
out
push
fldt
jno
test
sbb
and
pop
xor
sar
jne
aaa
mov
inc
and
lods
sub
inc
out
mov
sub
iret
shrb
pop
xchg
rorl
iret
mov
cld
sub
xor
subb
or
mov
inc
aas
fcoml
aaa
enter
xor
std
sub
add
mov
xorb
stc
jl
xor
fsubrl
adcb
aas
xor
jnp
mov
sbb
cmp
jmp
fwait
xor
outsl
stc
dec
inc
xor
pop
cwtl
add
test
jg
mov
sahf
in
jbe
loopne
mov
sbb
pop
mov
mov
scas
cs
or
arpl
aam
mov
out
and
push
jno
push
aas
sbbb
sarl
jg
push
fistl
fidivs
lret
fistps
out
push
sbb
mov
aas
aas
inc
sub
mov
inc
mov
inc
push
fisubrl
movsl
push
jg
aam
cmpb
inc
inc
cmp
add
out
aas
sti
push
fistps
sub
and
pop
jns
mov
push
movsb
fcompp
push
dec
mov
sub
cmp
bound
add
je
or
shl
sbb
push
add
imull
dec
inc
mov
xchg
pop
lods
ljmp
add
inc
icebp
ret
rcll
and
xchg
mov
and
movaps
push
inc
add
hlt
enter
roll
and
in
cwtl
add
xor
push
mov
dec
pop
dec
inc
jbe
sub
dec
xchg
lahf
xor
push
mov
out
into
lret
ja
mov
lcall
je
sbb
les
mov
mov
inc
mov
adcl
fs
add
sbb
xchg
mov
test
jmp
mov
xchg
lods
cli
ljmp
add
xor
cltd
push
push
sbb
shl
xorb
pop
js
gs
mov
jno
jae
dec
stc
pop
scas
aam
or
push
jl
test
mov
movsb
movd
push
fiaddl
add
sbb
add
fcoml
or
pop
loopne
mov
fcom
inc
mov
push
xchg
popf
mov
shll
std
shl
jae
out
pop
jnp
cmp
push
insl
iret
push
push
cmpsb
ja
sti
xchg
and
mov
dec
clc
jno
xor
cli
ret
pop
ljmp
roll
pop
adc
push
dec
cmp
jecxz
sbb
mov
enter
in
sub
daa
popf
roll
pop
pop
jb
inc
pop
in
mov
or
cmpsb
dec
test
adc
imul
mov
add
movsl
xor
imul
jae
or
aam
sub
xchg
stc
pop
jb
mov
adc
shlb
dec
imul
jl
xchg
inc
cli
in
inc
mov
sub
imul
jmp
mov
fldcw
cmp
rcr
mov
add
pop
adc
jnp
int
add
cmp
cmpsb
arpl
push
mov
movsb
or
clc
dec
enter
js
mov
sbb
adc
addb
or
xchg
add
cmc
ss
adc
dec
gs
ret
lret
mov
mov
movl
inc
mov
and
ds
or
mov
pop
pop
adc
lahf
outsl
nop
pushf
out
mov
jp
pop
inc
inc
and
mov
pop
jno
push
push
mov
mov
ljmp
pop
ljmp
call
mov
mov
jmp
test
dec
outsl
or
cld
mov
sar
aas
xchg
or
mov
fcompl
hlt
xor
pop
jnp
mov
push
add
in
jae
xchg
mov
fcompl
scas
add
adc
ljmp
dec
inc
mov
in
lahf
xchg
fdivp
adc
rorl
mov
ja
dec
push
test
push
sub
popa
cld
mov
stos
or
lods
sbb
xor
aaa
cmp
and
in
pop
mov
in
jae
jg
repz
dec
add
sbb
decb
xchg
test
add
jbe
jl
aas
flds
mov
mov
mov
ret
mov
test
gs
and
mov
imul
mov
cmp
add
pop
ucomiss
mov
enter
xor
cwtl
fimuls
insl
lock
sub
inc
fldenv
push
aas
inc
aad
testl
sti
pop
add
repz
in
push
lods
mov
loop
sub
stos
adc
xchg
jle
test
cli
lea
cmpb
in
ljmp
lods
push
mull
test
cld
inc
fisubrs
lcall
ss
fcoml
add
call
outsb
mov
or
jle
sahf
je
or
addr16
addr16
ret
and
testl
pushf
sbb
mov
mov
xchg
pop
clc
push
out
pop
sbb
mov
mov
out
test
aad
mov
pop
xor
xor
andl
mov
pop
arpl
and
push
adc
sub
xchg
jg
in
faddl
ja
inc
icebp
dec
adc
inc
mov
add
call
imull
cmp
in
xlat
jns
xchg
lods
mov
or
ljmp
ret
adc
jns
pusha
push
xchg
aad
jae
or
divl
sub
fmull
or
mov
dec
mov
bound
jns
mov
xchg
pop
xor
dec
dec
lods
cmc
sub
mov
pop
or
dec
insl
or
jnp
jl
adc
mov
iret
mov
stos
cmpb
stos
jmp
cld
int
adc
int
enter
xchg
inc
into
dec
sub
push
and
sub
inc
nop
pop
jnp
adc
fildl
adc
jecxz
cli
clc
bnd
mov
cs
xor
sub
pop
dec
adc
fists
int
out
cli
cld
xlat
pop
movsl
pop
mov
sar
xchg
andb
stos
sub
test
mov
loope
mov
sbb
xchg
adc
loop
sub
and
test
push
scas
xchg
bnd
mov
cmp
lret
std
inc
mov
gs
enter
add
addb
enter
int3
mul
stos
sub
rcll
xchg
mov
and
out
inc
mov
loopne
out
and
lret
adc
popa
outsb
pop
mov
or
aam
push
daa
aad
mov
xchg
bnd
push
shl
or
push
loope
jae
cmovg
pop
jbe
das
mov
fstp
dec
xor
mov
xchg
push
push
jecxz
jg
leave
dec
movsl
repz
push
gs
out
dec
cmp
scas
lods
shll
add
mov
mov
stc
les
mov
jge
fdivr
inc
das
lods
xchg
mov
pop
inc
aaa
xchg
inc
dec
dec
sbb
seto
ja
repnz
cli
add
icebp
fdivr
inc
push
xor
sbb
movsb
lret
cld
xor
mov
dec
cmp
pop
rcrb
jnp
out
xor
ss
enter
in
hlt
arpl
stos
repnz
cld
lea
loopne
sti
pop
hlt
or
cli
inc
aaa
jg
dec
rolb
sbb
or
push
pop
lret
mov
je
lret
cwtl
sbb
scas
mov
add
push
sahf
or
rcll
inc
out
jl
xchg
clc
sub
sarb
icebp
sbb
idivl
xlat
jbe
sub
not
shlb
sub
xlat
cli
xor
jae
cld
sbb
push
scas
loope
jl
movb
xor
jbe
jo
add
in
insb
fcompl
gs
xchg
pop
and
inc
cmpsb
cs
or
sub
sub
bnd
idivb
cmp
jne
fmulp
ljmp
paddd
xor
fs
mov
jge
std
gs
cmpsl
cltd
nop
js
sbb
cltd
mov
scas
xor
xchg
push
test
push
cmpsl
sub
cmp
xlat
rcrb
add
decb
dec
imul
std
mov
rcl
outsb
and
cmp
ret
mov
inc
fsubl
call
pop
in
dec
int
pop
lds
dec
pop
xor
adcb
aas
insl
loope
adc
ljmp
jo
adc
jo
in
dec
aas
or
movsb
inc
dec
aam
mov
outsl
mov
daa
test
inc
cld
mov
sbb
fnsave
fwait
mov
mov
xor
sbb
jb
push
stc
call
jno
sbb
push
test
mov
inc
or
sub
or
loopne
das
fwait
out
shl
sub
adc
cld
and
pop
xchg
mov
scas
fs
sbb
dec
cmc
pop
into
call
mov
mov
pushf
cs
adc
arpl
jns
test
imul
dec
and
or
jae
fsts
hlt
js
mov
dec
mov
xorl
mov
or
push
jecxz
dec
jl
xor
rcll
jge
and
or
xor
mov
insb
sub
ret
sub
aam
es
jns
out
jg
push
repnz
pop
in
inc
iret
cmp
mov
cltd
sub
sbb
lret
int
sbb
loope
sub
mov
pop
jge
pop
and
inc
sti
adc
arpl
mov
cmpsl
sbb
adc
push
jmp
fnsave
jmp
dec
scas
add
fsubrl
add
xorl
clc
fisubl
mov
sbb
cmp
xchg
jle
mov
loop
je
or
inc
jne
push
mov
mov
popa
sbb
aas
inc
dec
mov
dec
xchg
add
dec
cltd
add
pop
out
pop
outsb
ficompl
or
ds
pusha
les
fsubrs
sub
ljmp
lods
mov
adc
jl
adc
mov
shrb
add
jmp
or
pop
adcb
xchg
sbb
push
insb
add
push
and
aam
mov
imul
inc
lock
adc
mov
imul
sbb
rol
hlt
out
enter
jge
jmp
jge
stos
xchg
or
adc
and
cltd
sub
out
push
in
xchg
aam
jns
jo
lods
stos
dec
jle
mov
cmpl
add
imul
sbb
and
add
dec
cmp
clc
mov
inc
dec
pop
ret
push
enter
push
xchg
pop
cmpsb
fst
push
push
pop
mov
and
xchg
pop
sarl
xchg
adcb
sti
in
dec
out
lods
stc
fs
add
fsubrl
ljmp
xchg
imul
ja
ss
loope
pop
into
cmp
mov
les
lret
jle
in
jo
push
rcrl
adc
or
add
les
mov
out
mov
ret
mov
sub
dec
pop
xchg
mulb
ss
iret
jecxz
sarl
or
xchg
and
clc
adc
mov
inc
adc
aam
pop
mov
cmp
cmpsl
or
push
jae
cmp
or
fnstenv
call
fs
dec
jle
jle
lret
add
bnd
shlb
lret
mov
xor
into
inc
fsubs
leave
add
hlt
push
mov
jmp
xor
jne
mov
jb
cmp
shlb
inc
and
adc
mov
sahf
adc
or
cmpsb
mov
xchg
dec
xchg
mov
and
cs
aam
sub
stos
jno
repnz
xor
pop
add
ret
add
sub
push
and
pop
adc
add
loopne
mov
adc
inc
mov
dec
push
mov
mov
roll
std
mov
movsb
or
dec
ret
xchg
jbe
mov
rcll
lods
stos
push
cwtl
lahf
outsl
inc
inc
loope
xor
cmpsl
sub
mov
idiv
mov
fldt
cli
movsb
fnstcw
xor
pop
inc
je
xchg
popa
mov
pop
push
sub
ja
data16
mov
aam
test
push
push
mov
fsubs
in
pusha
sub
fiadds
stos
stc
mov
enter
and
rcl
sbb
or
mov
rclb
jb
rcll
in
adc
hlt
sahf
insl
mov
add
rolb
push
mov
or
test
lahf
shrl
test
insl
int3
inc
vpsubd
rolb
jns
dec
nop
cmpsb
pop
aaa
xchg
pushf
push
mov
testl
into
std
pop
inc
ror
test
pop
pop
push
popf
jge
arpl
jmp
jae
inc
fdivl
cmc
daa
pop
pop
testl
cmpsl
cmp
mov
push
dec
pop
adc
pop
test
out
push
xor
test
add
out
xchg
add
and
mov
lods
lret
sbb
mov
push
jo
xor
js
dec
pop
sbb
ljmp
int3
dec
insl
xchg
js
sti
arpl
ljmp
popa
inc
orb
mov
stos
or
sbb
mov
mov
mov
mov
sti
imul
ret
mov
inc
cltd
jge
cmpsb
push
fndisi(8087
jecxz
insl
mov
adc
and
push
push
imull
xchg
and
dec
cmp
or
push
fwait
sub
xor
mov
xor
cmp
mov
mov
mov
cmc
or
cmp
icebp
cmpb
cwtl
scas
xor
inc
rorb
outsl
imul
push
mov
pushf
sbb
adc
loope
aaa
jl
add
sub
out
mov
fmull
shlb
cld
shrl
pop
inc
fiadds
push
add
movsl
mov
cmpsb
mov
movsb
xor
sub
aam
add
jbe
add
adc
enter
sahf
sbb
push
repz
xchg
xor
mov
out
and
sbb
in
adc
adc
mov
pop
sub
inc
pop
stc
cmp
mov
xorl
in
fdivr
sub
add
lds
push
and
sarb
push
mov
dec
pop
outsb
ret
jp
push
in
loopne
dec
js
jbe
sahf
movsb
cmp
xchg
xor
sub
jp
inc
es
orl
popa
sbb
xchg
pusha
repz
sbb
mov
jnp
push
sbb
hlt
stos
push
testb
pop
mov
icebp
or
bound
sub
xorl
call
mov
fdivs
pop
xchg
mov
js
push
sti
fdivs
mov
scas
insb
pushf
dec
jne
lret
mov
popf
mov
and
dec
and
pusha
dec
inc
cmp
jne
lcall
repz
mov
and
mov
xchg
punpckldq
fldcw
pop
pushf
mov
icebp
xchg
or
jg
fistl
inc
inc
sbb
add
xchg
push
std
stos
cmp
out
ds
dec
movsb
cmp
xlat
xor
out
jl
sbb
inc
add
fisttpll
daa
inc
test
cmpsl
mov
outsb
lcall
inc
test
mov
aas
add
add
pop
jns
and
cmc
cmp
loop
loope
mov
lret
les
std
repnz
dec
jae
adc
or
popf
sahf
leave
xchg
mov
call
lock
outsb
cwtl
stc
or
and
jge
lcall
jge
outsl
pop
cmpsb
dec
aad
dec
xor
lea
jae
add
xor
and
aad
jg
into
das
rcrb
sbbl
stos
xchg
stos
ss
test
jg
pop
cmp
adc
sahf
addb
inc
test
sub
cltd
addr16
pop
xchg
dec
and
rolb
lfs
fmuls
std
enter
or
cs
xlat
jo
in
sub
pop
push
sbb
jnp
aam
push
dec
movsl
call
inc
bnd
cmpxchg
sbbb
stc
stc
xor
mov
addl
or
mov
popf
test
mov
pop
mov
fldenv
stc
hlt
xchg
das
les
add
rorb
sbb
sub
ja
add
subl
adc
pop
sti
lds
dec
scas
mov
bound
lcall
adc
push
pop
push
cs
adc
stos
dec
mov
sbb
jb
enter
aaa
pop
popa
mov
int3
fldcw
test
xchg
test
pop
sbb
xchg
adc
cld
push
inc
mov
jno
pop
add
rcl
cmp
adc
out
pop
pop
pop
bsf
test
xchg
push
pop
out
add
dec
and
das
rolb
mov
cmp
fsubs
jle
cmpsb
adc
add
sbb
ds
cmpsb
xchg
in
xchg
xchg
lods
push
test
jae
adc
jae
out
adc
mov
push
ljmp
push
pop
sub
mov
pop
inc
fsubrp
stos
ret
aas
insl
pop
out
fldl
inc
mov
mov
popf
and
jg
and
mov
sar
pop
cs
std
xor
or
mov
out
cli
sub
lock
neg
mov
mov
adc
xchg
push
cmp
les
cmpsb
js
lock
jge
in
or
sub
fidivrs
bound
xlat
adc
out
cli
xchg
mov
fs
test
cmp
test
int
mov
mov
xchg
je
es
imul
stc
clc
ss
sub
fidivs
add
mov
or
sbb
jbe
ret
pop
inc
or
fs
and
aaa
inc
jnp
loop
mov
js
sarl
pop
out
push
or
cmpsl
movsb
pop
into
ret
popf
test
daa
pop
mov
jecxz
inc
lcall
rcr
mov
daa
add
sbb
into
scas
jmp
test
out
cmp
lahf
mov
jge
lahf
xchg
sbb
push
imul
push
pop
xor
fldl
fisttps
push
js
adc
dec
xchg
push
test
jb
mov
frstor
sub
out
jp
int
ret
int3
out
repz
xchg
fdivs
add
sbb
pop
and
xlat
or
hlt
es
iret
jne
movsl
jb
into
xchg
sbb
sub
cli
inc
aaa
dec
cmp
setns
adc
add
imul
movsl
mov
push
or
add
sti
dec
jecxz
fisttpll
push
scas
lea
rcr
fcmovnu
rcll
xchg
jmp
rol
sub
jg
dec
sbb
and
mov
js
jmp
jecxz
sar
add
jae
pop
xchg
stos
push
cmp
xchg
dec
push
or
jno
adc
sub
jbe
movsl
movsl
and
or
fiaddl
repnz
dec
ret
lods
fcomps
jno
jmp
sub
out
pop
dec
xchg
loopne
xor
fcmovu
les
popf
or
ud1
into
jb
fsub
sbb
gs
addl
mov
iret
ret
outsb
lret
js
call
xor
fdivrs
dec
inc
rclb
movsb
cmp
or
and
cwtl
icebp
push
or
das
int3
pop
sub
push
shrl
pop
lret
cmp
jb
cmpsb
into
xchg
das
jno
pop
mov
mov
sbb
lds
lahf
arpl
xchg
adc
and
sbb
scas
hlt
fimuls
pop
jge
aad
test
fstpt
push
ljmp
jno
dec
mov
jg
jne
fsubl
and
cwtl
push
lds
push
jae
dec
andb
sti
push
loop
stc
jle
into
inc
mov
test
mov
push
push
sbb
ficompl
fucompp
xlat
or
outsb
jmp
dec
push
push
out
shlb
lods
push
ret
adc
cltd
in
ds
lea
pop
inc
or
xor
scas
mov
jns
inc
movsb
lret
repz
in
cmp
mov
loopne
leave
mov
push
dec
sar
inc
sub
push
inc
mov
enter
popa
mov
aaa
xor
addr16
push
and
ret
add
xor
ss
fcompl
cmp
mov
lret
sbb
inc
test
ja
cmc
adc
stc
push
int3
leave
mov
pop
cmp
adc
pusha
jp
js
push
jo
or
cs
dec
fidivrs
mull
or
lds
insb
cmp
mov
loop
mov
jne
adc
pop
xor
pop
adc
pop
xor
lods
dec
fimull
dec
jp
dec
jne
lds
mov
xor
push
mov
xchg
pop
ret
sbb
add
push
bound
sahf
aam
out
adcb
or
push
mov
inc
idivb
add
sub
das
mov
xchg
jg
or
rclb
jle
xchg
pop
loope
push
cmc
cs
int
mov
add
dec
testb
fistl
inc
push
xchg
test
leave
sbb
pop
or
loope
xchg
push
in
mov
xor
mov
ret
or
aad
mov
stos
movsl
loopne
mov
xor
stos
cltd
sub
icebp
cwtl
nop
movsb
movsb
ljmp
inc
aam
xor
out
adc
out
mov
xchg
mov
lret
pop
addr16
xor
adc
in
movsl
and
popf
dec
push
dec
mov
loop
loopne
xchg
sbb
fisttpll
pop
aas
sahf
inc
mull
sti
mov
int
ffreep
and
push
sti
ficompl
es
mov
mov
mov
mov
repnz
push
push
aam
call
scas
sbb
mov
push
lret
push
jnp
rcl
push
xchg
in
lcall
sbb
mov
inc
pop
mov
add
outsl
xchg
repz
adc
ret
push
sbb
lret
imul
fwait
outsb
adc
imul
out
jnp
add
pop
or
les
lock
out
jecxz
mov
mov
sahf
or
adc
pop
mov
outsb
jb
sbb
js
clc
xor
push
or
sub
adc
or
sub
addr16
jecxz
repz
xchg
mov
pop
jns
mov
dec
out
aam
push
mov
push
ret
dec
add
cld
mov
dec
cmpsl
scas
cmp
subps
fsubrl
gs
lock
mov
xor
xlat
shrl
pop
push
rcrb
std
sbb
std
sbb
mov
xor
xchg
pop
xor
das
aad
jbe
xchg
add
in
lea
cld
mov
mov
push
xorb
je
cmp
das
cmp
mov
or
mov
daa
sbb
or
mov
xor
rolb
out
jge
add
je
std
ret
jge
pop
cli
sub
data16
jns
fisttpl
ss
xchg
imul
pop
mov
hlt
push
push
aas
mov
pushf
inc
aam
sbb
mov
hlt
ficomps
roll
and
clc
mov
adc
aam
sub
mov
icebp
or
stc
adc
xchg
rcl
stos
jmp
testl
aaa
sub
inc
ret
jo
push
fiaddl
mov
icebp
or
xlat
pop
dec
cwtl
popl
or
mov
jnp
inc
ret
stos
jo
sbb
in
and
cmp
rcll
or
outsl
sti
adc
adc
mov
mov
bnd
mov
mov
adc
mov
mov
mov
sbb
hlt
cli
enter
loopne
adc
adcb
mov
inc
pop
push
jne,pn
repnz
inc
stos
shrl
xchg
push
push
cltd
stc
adc
or
sbb
into
je
enter
imul
pop
sbb
xor
jns
inc
xchg
adc
pop
sahf
in
iret
les
dec
in
dec
dec
jno
push
jns
aas
lds
sub
push
popf
sbb
and
rcll
adc
mov
bound
rol
pop
int3
lods
and
gs
adc
pop
les
dec
xchg
sbb
mov
and
xchg
xor
rol
pop
js
ret
cmpsb
fmuls
iret
ds
cmc
mov
mov
call
lods
inc
mov
lret
cld
jb
jnp
jg
aad
xchg
cmpsl
ds
in
jbe
or
cmp
mov
and
cmp
adc
mov
dec
pop
jmp
sub
sub
xchg
aad
adc
inc
out
xor
jno,pn
pop
lock
and
int
jle
pop
jae
data16
push
push
jb
and
sub
lcall
scas
mov
outsb
bound
xchg
push
mov
dec
inc
popl
pop
sbb
inc
push
or
ds
incb
jmp
jno
pop
aas
sahf
mov
roll
stos
fstl
mov
sub
mov
aam
cmp
loop
clc
mov
jmp
inc
push
shl
add
inc
dec
lods
lock
mov
fsts
xor
movsl
xchg
iret
push
cwtl
dec
daa
pop
popa
in
or
in
dec
scas
jno
xor
xchg
add
test
nop
loope
movsb
in
dec
subb
add
and
mov
jl
sub
dec
or
fdivrp
inc
dec
xor
lock
movsb
nop
xchg
push
call
mov
dec
inc
push
sbb
jae
xchg
mov
idivb
jne
mov
mov
leave
aas
xor
out
push
fwait
push
xchg
testl
jo
pop
cli
decl
stos
pop
pusha
fcoml
lcall
xor
stos
jecxz
test
mov
push
gs
ja
insl
insl
push
je
cltd
mov
adc
in
jae
pushf
jns
dec
ds
push
sub
stos
lret
push
xchg
mov
mov
daa
shll
addl
mov
push
and
out
shrb
fistps
aaa
or
out
xchg
pop
xchg
mov
inc
stc
or
cmp
mov
test
cld
aad
gs
dec
push
cmpsl
jge
mov
test
cmp
push
sbb
jg
and
jecxz
ret
cmp
jae
je
call
sub
shlb
or
pop
or
mov
mov
in
push
rcl
aad
sub
aad
mov
pushf
fs
sub
lods
test
xchg
in
lret
cwtl
testl
cli
pop
mov
xor
sub
int
pop
mov
rcrl
aad
jae
and
rcrb
and
sbb
out
pusha
jb
push
xor
popf
nop
push
mov
sahf
dec
outsb
xor
push
jnp
fiadds
pop
mov
cld
daa
in
mov
lock
mov
out
popa
add
divl
fbld
mov
sub
pop
adc
push
and
xchg
jl
shr
xchg
mov
push
inc
or
dec
or
mov
inc
int3
es
fistps
shll
ret
cmp
jo
pop
push
in
mov
lret
jbe
shrb
ja
or
test
das
push
push
subb
lea
cmp
jns
imul
inc
out
lcall
test
in
pop
mov
repnz
dec
out
adc
lds
cs
jnp
fildl
test
mov
aam
stos
and
adc
flds
test
dec
inc
sbb
in
or
cs
inc
and
repnz
sub
popl
in
add
daa
xchg
jle
xor
push
mov
push
add
sbb
or
gs
cltd
sub
in
fisttpl
mov
scas
add
idiv
mov
cmp
subl
or
into
bound
pop
jnp
aad
mov
xor
and
das
sub
out
popf
push
lock
shrl
aaa
ret
test
add
gs
mov
inc
lea
shll
xchg
push
xor
call
mov
scas
es
jo
insb
stos
into
sub
std
jo
push
cmpsl
movl
jb
dec
enter
cmpl
xchg
imul
jg
inc
out
cmpsb
jle
mov
lds
sub
adcl
mov
arpl
xor
xchg
sub
xor
movsb
aas
lahf
xchg
mov
cli
imul
adc
pop
mov
jmp
sarb
dec
shll
sub
lret
jp
mov
dec
xchg
sahf
stos
mov
push
or
xchg
mov
rclb
iret
shrb
js
pop
shl
xorb
inc
and
jns
jns
scas
int3
idivb
cli
push
mov
jl
jge
push
outsl
cmp
cmp
sub
jg
push
iret
cmpsb
sub
ds
cltd
add
loop
sub
mov
bnd
jle
fcoml
sub
push
dec
or
inc
cmp
inc
or
sahf
inc
inc
mov
ss
bnd
mov
and
js
xlat
mov
cmp
xor
xor
jl
lea
in
cmp
sbb
ds
in
fwait
or
dec
fs
push
adc
lret
xor
das
out
addr16
jne
adc
push
in
nop
psubusb
jle
push
std
iret
je
imull
sub
aaa
sub
stos
xchg
mov
cmc
mov
add
mov
cmp
cli
enter
jge
xor
pop
cmp
cld
subl
ror
into
fldl
scas
pop
push
sub
movsl
fimuls
add
jae
pop
jmp
shll
scas
xlat
outsb
orl
sub
shl
jp
mov
pop
cmp
push
cli
jmp
mov
adc
jmp
clc
mov
mov
xchg
test
cwtl
dec
ficoml
and
push
mov
fs
mov
outsl
xor
xlat
and
sbb
ljmp
ret
test
fidivl
shufps
jle
mov
sbb
adc
cmp
pop
dec
inc
xchg
mov
jecxz
and
sub
jns
outsl
ljmp
jmp
pop
add
fbld
rolb
das
lock
cmc
lds
dec
inc
into
dec
cmp
ret
std
xor
fcomi
sbb
es
sbb
jl
xor
pusha
dec
sub
inc
mov
push
addr16
mov
sub
push
inc
jns
je
dec
rcrb
ljmp
add
cmpb
addr16
ret
and
dec
xchg
and
mov
scas
call
jp
sub
std
mov
lahf
push
sarl
dec
push
shlb
int
addl
mov
mov
and
std
or
movsb
push
icebp
add
push
lds
test
or
push
cmp
ret
add
adc
inc
sub
or
sub
loopne
adc
rcl
pop
movsb
pop
and
dec
pop
fadds
test
sbb
mov
call
mov
and
push
xchg
out
insb
xchg
add
mov
shlb
rolb
pop
add
xchg
push
iret
push
sub
popa
repnz
outsb
movsl
sti
out
je
rcrl
push
jp
adc
addr16
inc
cld
sbb
sbb
mov
iret
out
in
shrb
aad
xchg
lret
stos
shlb
fists
loopne
clc
mov
push
xchg
nop
push
dec
leave
add
mov
test
iret
xor
and
imul
fdivl
aas
lret
pushf
jmp
or
xlat
ja
and
mov
popa
mov
mov
lahf
fwait
xchg
sbb
xchg
pop
xchg
sbb
int3
jmp
jo
fcoml
pop
add
jp
add
pop
xchg
mov
out
adc
ljmp
mov
pop
inc
je
aas
inc
mov
lret
push
add
cld
push
sbb
shrb
xchg
adc
pop
leave
stos
data16
sub
cmp
inc
cwtl
pop
insb
adc
inc
out
mov
or
iret
insl
nop
push
xchg
scas
xor
sub
cmp
cmp
cmpl
mov
loopne
pop
jbe
js
ss
mov
std
xor
xchg
jb
cmp
sub
leave
jl
mov
scas
aas
xchg
into
inc
cld
mov
sti
jns
lea
invd
cmp
jno
inc
lcall
fiadds
dec
push
xchg
pop
lods
shl
dec
and
xchg
ss
inc
bswap
idivl
scas
leave
inc
pop
sub
xor
repnz
cmp
pusha
jge
stc
sub
dec
adc
mov
inc
jecxz
iret
mov
fidivrs
add
rcl
out
add
jne
test
sbb
xlat
sbb
lcall
or
outsb
lea
push
pusha
and
jg
addr16
lret
gs
imul
mov
inc
outsl
ss
imul
mov
pop
insl
cmc
mov
xchg
xchg
xchg
mov
pop
fnstsw
lds
repnz
xchg
mov
cmp
adc
lock
push
ja
sub
ljmp
popf
dec
mov
adcb
xchg
push
adcb
sub
cmpsl
sub
push
repz
mov
pop
push
add
add
mov
movsl
roll
add
jle
push
sbb
jb
xchg
pop
mov
icebp
orl
in
mov
push
loopne
pop
mov
movsb
and
and
cmp
push
lods
xchg
movsb
scas
testl
ret
lds
add
out
es
sbb
mov
repz
adc
sbb
hlt
jp
fcmovne
popf
mov
push
mov
push
rcll
mov
inc
out
shll
in
arpl
aaa
jnp
loope
xor
cld
mov
xor
shlb
jbe
in
push
and
xchg
mov
ljmp
adc
mov
stc
sub
test
stc
adc
outsl
xor
pop
je
lret
and
jnp
inc
rclb
mov
jb
mov
in
and
adc
scas
jg
mov
shll
int3
or
push
mov
mov
jb
popa
xor
adc
pop
sbb
push
int
rolb
lret
icebp
push
lret
int
and
aad
cs
nop
in
gs
mov
xor
mov
mov
fprem1
mov
inc
mov
jns
jp
sti
stos
xor
movsb
inc
in
cwtl
jo
push
fdivrs
push
jmp
sar
sub
fidivs
pop
aad
jle
daa
out
mov
adc
jg
lea
push
jmp
mov
arpl
push
sbb
sub
mov
dec
lods
jne
sub
mov
shrl
decb
vmwrite
into
aaa
pop
sub
and
mov
inc
subb
jg
ds
iret
inc
and
aad
xchg
in
mov
lock
sbbb
pop
addb
int3
sti
mov
aam
xor
mov
mov
je
loop
dec
mov
aas
adc
add
rcrb
dec
inc
mov
push
cmpsl
and
pop
rcrb
enter
and
std
mov
mov
pop
outsl
pushf
or
mov
pop
push
push
mov
inc
int3
fs
inc
dec
leave
mov
pop
mov
cmp
clc
xchg
sub
jmp
mov
sub
sahf
jp
subl
outsb
imul
ret
jmp
leave
xor
stc
and
xchg
loop
mov
ja
loope
or
pusha
arpl
sub
clc
dec
fldcw
fimuls
push
and
xchg
pushf
jno
and
out
sub
cmp
ficoml
inc
or
inc
and
lcall
jns
mov
dec
jmp
mov
cwtl
imul
and
test
dec
jne
inc
movsb
out
mov
cmp
cmp
fs
cmp
stos
cmpsl
mov
lds
int3
cmp
mov
mov
xor
mov
scas
scas
xchg
xor
xor
int
jb
mov
bound
popa
cmpsl
adc
mov
pop
jo
or
mov
fucompp
inc
test
imul
xor
call
mov
lods
in
push
repnz
or
pop
stos
cmpsl
push
push
sbb
ljmp
adc
cld
xor
sti
outsb
call
add
adc
pop
std
and
ja
cli
xchg
ss
stc
add
sahf
test
push
mov
sub
inc
inc
xchg
adc
cwtl
arpl
test
adc
loope
push
and
mov
test
mov
and
dec
xchg
imul
mov
cwtl
and
adc
into
mov
negl
fucom
fmulp
mov
xchg
iret
mov
stc
push
negb
push
mov
sub
or
cmpsb
mov
icebp
push
mov
mov
push
movsb
nop
lahf
pop
mov
push
in
push
mov
stos
das
jl
ds
lret
popa
xorb
or
int3
dec
push
data16
mov
je
push
in
aaa
jle
stos
enter
add
dec
hlt
sti
imul
imul
nop
out
xchg
jnp
sbb
jns
add
mov
aam
dec
orb
ds
mov
pusha
push
or
cld
cld
pop
aad
xor
sbb
push
out
dec
jnp
lods
sbbb
mov
pop
add
and
sub
dec
inc
test
in
add
ret
jne
dec
and
dec
mov
hlt
mov
loope
xor
dec
mov
jne
outsl
push
push
jb
pop
mov
xor
mov
jp
popf
mov
cmp
xchg
ja
clc
push
jle
xchg
loope
mov
adc
jp
sub
cmp
push
adcb
mov
sub
mov
xor
sbb
sbb
xchg
xchg
lock
in
sti
cs
push
shll
insb
shll
xchg
sbb
xor
mov
rorl
inc
mov
or
inc
jge
mov
insl
addb
mov
inc
repz
xor
je
adc
in
lock
aam
push
add
xchg
int
stos
xchg
cmp
cmp
fsubrl
mov
dec
mov
jns
fadds
mov
xchg
push
cltd
xor
sbb
mov
mov
push
psllw
faddl
lods
call
jg
xchg
je
dec
adc
jmp
mov
push
seta
lret
push
xchg
lods
call
push
decb
pop
insl
adc
popf
or
pushf
pop
cld
xrelease
add
mov
pop
fcmovne
idivl
mov
out
dec
add
pop
mov
jmp
mov
data16
popf
mov
push
movsb
dec
pop
pop
pop
out
push
jae
mov
testl
scas
jg
lods
sbb
out
mov
or
ja
sbb
sarb
stos
inc
and
sub
add
pop
lcall
cltd
stos
out
adc
leave
sub
jno
mov
push
cmp
xor
sbb
pop
pushf
sbb
sbb
push
mov
fisttpll
lods
loope
or
stos
mov
jno
pushl
das
xor
sarl
sti
or
mov
scas
push
ja
call
jbe
rcll
mov
mov
xor
js
fsubrl
adc
inc
les
repz
mov
subl
test
int3
xchg
incl
mov
or
mov
push
in
call
das
dec
ds
roll
in
scas
jo
dec
sub
ds
shlb
add
rcrl
pop
fdivrs
jmp
in
inc
std
repnz
jo
icebp
xchg
addr16
scas
mov
or
jne
mov
fstps
or
les
out
xor
mov
jecxz
outsl
jmp
adc
out
inc
out
popa
or
or
adc
in
inc
in
dec
add
jmp
add
xor
jbe
cmpsl
mov
pop
aaa
inc
loop
in
cmpsw
daa
cmp
adc
sub
imul
popa
push
jno
repnz
lret
pop
xor
sbb
cmp
pop
test
pushf
pop
js
push
andl
sub
test
lahf
iret
lods
sbb
push
sub
in
in
es
notl
in
ja
insl
sar
and
xor
aad
inc
insb
push
insb
outsl
mov
mul
int3
pop
jle
ja
data16
pop
std
dec
enter
xchg
jb
adc
lret
pop
daa
cmc
sub
fstp
pop
jg
ss
push
in
aaa
adc
push
sahf
jl
mov
adc
or
adc
adc
cmpsl
pop
pop
test
out
mov
sbb
addl
call
sub
ss
loopne
icebp
ds
push
cmpl
add
pusha
lcall
push
jnp
orl
pop
cltd
scas
pop
jbe
imul
mov
ds
cmpsl
fstpl
cmpsl
inc
shll
sbbl
jo
sbb
mov
pop
rorl
das
stc
repz
fstpt
adc
cmc
push
adc
jae
fsubs
and
mov
adc
adc
stos
dec
sub
fimuls
fcmovne
xchg
out
mov
adc
jmp
pop
decl
sub
xchg
dec
dec
outsl
push
lds
enter
aad
push
fcmovnu
pop
fwait
aaa
jmp
pop
mov
scas
fdivs
pop
mov
jmp
leave
mov
ficoml
popf
shlb
mov
rcrb
mov
iret
push
push
pop
stc
clc
call
inc
mov
adc
push
pop
ja
push
pop
xchg
std
inc
loope
push
filds
push
pop
jp
mov
scas
in
push
jmp
sbb
jne
lret
inc
mov
out
adc
xchg
scas
jo
int3
clc
mov
jg
std
sub
push
es
repnz
stc
push
icebp
cwtl
imul
add
int
sarb
testb
sahf
mov
in
jne
inc
add
in
pop
imul
jle
addr16
push
movsbl
inc
fsub
std
xchg
dec
inc
and
mov
jge
pop
cmp
fisttpl
loope
mov
and
lahf
or
movsl
mov
xor
mov
and
call
daa
jno
push
or
xor
dec
lret
pop
jecxz
jae
int3
icebp
push
cltd
pushf
rorb
sahf
mov
mov
pop
fmul
stc
dec
push
xchg
or
jle
xor
jb
cltd
add
sub
jmp
das
jo
rcr
inc
call
popf
pushf
stos
mov
lcall
mov
pop
mov
fwait
sbb
pop
out
pop
popf
dec
sbb
rorb
test
ret
push
lret
ss
and
inc
mulb
bound
aas
les
imul
sbb
fiadds
pop
xchg
sub
jmp
std
mul
mov
sub
sub
adc
or
and
push
into
adc
aas
push
and
fdivp
loopne
add
adc
inc
ret
ss
and
out
push
incl
mov
icebp
repnz
xorl
fwait
je
stc
jne
ss
in
fsubrs
popa
rcrl
das
dec
sub
lds
pop
and
pop
es
aam
cmpsb
pop
movsl
push
sbb
pop
mov
test
xor
out
cmp
mov
xor
and
lds
jns
ja
pop
mov
xchg
pusha
popa
int
mov
push
add
inc
in
jne
fs
testb
std
push
cmp
aaa
jo
lea
sub
sub
push
mov
jg
repz
movsl
cmp
sbb
cs
xor
pop
mov
pop
mov
aas
dec
dec
es
sub
push
out
outsl
stc
or
add
sbb
insl
ljmp
mov
dec
mov
add
pop
and
fstpt
dec
sub
cli
cld
push
movsb
ds
pop
ss
je
add
pop
mov
jno
fs
faddl
cmpsl
jle
xchg
lock
push
ja
inc
fisubrs
daa
pop
sbb
mov
mov
mov
imul
mov
popa
iret
ret
fiaddl
in
mov
xchg
pslld
sahf
cmp
je
mov
push
and
mov
shll
test
data16
sub
pop
dec
xchg
insl
push
mov
gs
mov
cmp
and
stos
ljmp
mov
inc
ss
addr16
mov
mov
pop
mov
les
test
pop
fistl
inc
fstpl
push
cli
test
pop
adc
negl
call
enter
mov
sbb
lahf
es
push
xlat
or
std
sti
out
lods
pusha
ja
adc
ss
lcall
sbb
jl
pop
and
in
jnp
out
das
fstp
push
or
fistpl
into
arpl
lods
mov
and
lds
push
lods
ret
pop
dec
push
push
sub
push
data16
outsl
frstor
ljmp
push
pop
aaa
mov
test
outsb
mov
mov
rcrb
jmp
fiaddl
mov
lret
outsl
dec
add
sub
push
mov
sahf
loop
in
or
xchg
mov
dec
mov
or
or
mov
adcb
aaa
xchg
lret
loopne
shl
mov
pop
mov
insb
sbb
es
sub
repnz
pop
rcr
jmp
xor
or
lock
sahf
icebp
mov
mov
fbstp
inc
daa
popa
subb
outsl
sahf
sub
scas
sti
xchg
mov
lock
jbe
scas
leave
data16
outsl
add
cltd
and
fsubp
cld
ds
gs
mov
lods
pop
dec
shlb
push
es
movsl
je
mov
gs
lea
insl
inc
and
lcall
rolb
rcr
pop
fsubs
jno
inc
xlat
push
push
fwait
mov
imul
popf
cmp
ret
inc
jge
daa
stc
xchg
js
into
mov
push
mov
mov
pop
shll
xchg
mov
fldl2e
gs
or
pop
jmp
add
adc
jo
push
dec
lds
jge
cmp
int3
gs
dec
jl
stos
mov
and
mov
int
pusha
and
loopne
std
scas
mov
inc
sbb
imul
movl
xchg
jnp
fidivrs
adc
addr16
dec
cltd
add
sbb
les
subl
shl
pop
inc
enter
rcr
add
xchg
out
add
les
shrl
aaa
inc
adc
xorb
cmpsl
aad
pop
xchg
ss
jno
sub
aam
jmp
lods
push
dec
push
jae
mov
jl
cld
and
add
flds
mov
inc
lds
loopne
sbb
in
or
aaa
cmc
popa
enter
and
js
and
call
jl
sub
stc
push
jae
inc
cmpsl
xor
cwtl
sbb
lret
repnz
push
js
out
or
pop
pop
sbb
shlb
popa
mov
sbb
fnstsw
lea
in
mov
cmp
sbb
lds
inc
loopne
push
push
je
lret
mov
xor
cmc
sub
mov
jb
addr16
xor
push
repz
push
dec
stc
gs
add
mov
call
and
or
aad
pop
divl
add
daa
lahf
pop
mov
insb
jl
or
jno
out
mov
pop
jnp
rorb
rcr
or
popa
into
aam
lahf
int3
nop
push
std
lods
lret
gs
xchg
pop
cwtl
inc
popf
or
rolb
fld
lret
data16
sub
int3
rcll
pusha
adc
std
hlt
arpl
xchg
dec
arpl
fcomp
xchg
add
test
cmpsl
sbb
test
xor
adc
jae
pop
cmp
adc
mov
cmp
cmpl
and
in
xor
mov
xor
mov
sbb
dec
xor
mov
outsb
xchg
push
adc
cmc
bnd
jo
push
mov
xchg
andl
jbe
movsb
negl
jno
sbb
dec
jne
pop
arpl
movsl
cmp
xchg
popa
mov
jmp
push
dec
xchg
jle
sub
push
clc
mov
fdivs
insl
in
adc
mov
mov
mov
pop
into
xchg
out
add
dec
jns
adc
into
int3
in
orl
outsl
dec
dec
rolb
sbb
bound
mov
jbe
inc
mov
sbb
sub
in
xor
rcl
sub
dec
mov
les
add
test
lds
into
popa
dec
cmpl
push
mov
jnp
aaa
leave
addl
xchg
out
movsb
aad
enter
push
iret
adc
enter
push
lea
bound
mov
add
ret
mov
and
les
jns
fistpl
mov
jecxz
xchg
lcall
or
lock
or
mov
xchg
mov
adc
xchg
outsb
lcall
mov
or
jo
stos
sti
mov
lcall
jp
mov
repz
subl
fwait
js
inc
ja
cmp
addr16
inc
hlt
mov
cmp
sbb
sub
and
push
sbb
hlt
cmp
add
stos
test
cmp
xchg
lods
xchg
push
imul
popa
xchg
push
nop
xor
add
mov
push
out
scas
ljmp
in
or
pop
inc
bound
cmp
in
cmovs
mov
dec
push
lods
lods
sbb
aas
hlt
push
add
in
in
repnz
out
loopne
xor
pop
xchg
jnp
sbb
fs
push
js
xorb
je
movsb
cmp
cmp
outsb
cmp
mov
testb
pop
cmp
outsb
hlt
inc
lds
imul
std
push
push
into
mov
adc
arpl
pop
xor
jno
mov
shl
out
push
shlb
or
bound
sbb
adc
ret
pusha
lea
pop
aaa
pop
fisubrl
cld
adc
push
sahf
icebp
cmp
mov
int3
ljmp
addr16
jnp
sbb
es
rclb
stc
and
mov
aam
push
add
cli
mov
xchg
and
jne
pusha
mov
inc
xchg
inc
out
aas
push
insb
cmp
bound
cld
lock
loope
stc
sub
ret
mov
aaa
lock
out
inc
cmp
push
fwait
inc
push
pop
loope
es
cmp
dec
inc
loopne
sub
jg
loop
fldl
cmp
lods
sub
cmp
xor
stos
inc
jl
lret
xchg
adc
stos
dec
cltd
clc
xchg
inc
test
mov
mov
cmpsb
sbb
cltd
jp
jo
sarl
arpl
cs
or
ret
test
pop
es
stos
pop
push
repnz
sbb
cmpsb
xchg
xor
pop
sub
push
cmp
outsb
push
in
aaa
int3
dec
sbb
add
adc
aas
inc
sbb
loope
mov
mov
inc
mov
insb
xor
ds
cwtl
leave
outsl
ret
insl
jo
push
jmp
inc
mov
les
les
add
jo
pop
add
mov
sub
ss
sahf
bswap
outsb
or
mov
in
pop
mov
iret
enter
mov
aas
mov
gs
call
ss
mov
ljmp
sti
divb
stos
mov
dec
sbb
out
aam
push
fidivrs
data16
xchg
sahf
stos
aas
xor
mov
repz
out
inc
sub
dec
bound
push
jbe,pn
xchg
dec
cmp
push
jg
inc
sub
mov
lods
mov
xchg
xchg
loopne
leave
outsb
xor
sarl
mov
fs
push
aas
dec
rol
dec
jl
icebp
pop
lret
je
inc
aam
pusha
ja
sub
sbb
and
sti
out
dec
pop
outsl
cmp
fcoml
adc
xchg
xchg
cmp
push
ja
xchg
sub
jmp
lea
iret
cmp
mov
push
xchg
dec
scas
xchg
jno
xchg
js
sbb
xor
nop
aad
leave
push
pop
ret
or
inc
shrb
push
inc
outsb
inc
push
and
sti
das
xorl
enter
repz
std
jnp
js
sub
xlat
add
sbb
loope
sub
push
es
push
inc
or
and
imul
out
aas
pop
pop
xor
pusha
xor
mov
test
cltd
mov
call
mov
mov
addr16
jmp
repz
aaa
aam
sub
sbb
inc
mulb
imul
and
lret
imul
dec
push
out
xchg
stos
sbb
icebp
xor
iret
lret
fistps
cmp
lret
leave
mov
push
or
xor
aad
idivl
cmc
or
dec
sub
inc
shlb
mov
rcr
mov
aad
and
scas
sti
cld
xorl
ret
hlt
mov
in
adc
aas
scas
cli
sarl
or
jnp
pop
movsl
fs
out
mov
jle
adc
dec
jecxz
fnstsw
sahf
sub
pop
jns
inc
mov
cmp
pop
jns
cmp
mov
test
lock
sub
jnp
rorb
enter
dec
loopne
dec
pop
fstpt
cmc
sbb
stos
cmp
mov
inc
xchg
jb
sahf
xchg
mov
imul
ljmp
lahf
lcall
push
str
sbb
adc
sub
ret
mov
bnd
dec
in
fidivrs
inc
xchg
divl
and
lea
push
push
pop
hlt
add
pop
jmp
xchg
stos
pop
stc
mov
sbb
jle
push
adc
dec
rorl
fmull
aam
int
push
push
out
adc
outsl
enter
nop
fistps
enter
xor
lret
stos
movsb
addr16
jp
sbb
sbb
push
add
jnp
xchg
xchg
push
ret
in
lea
gs
sub
call
xlat
cmpl
dec
mov
dec
mov
and
inc
loope
sbb
mov
pop
cwtl
fisubs
mov
daa
dec
push
sbb
mov
mov
je
mov
xchg
imul
je
mov
inc
out
shr
lds
stc
bound
js
xor
jecxz
dec
xchg
sub
fbld
jne
push
jb
jne
scas
fwait
mov
int
outsl
xor
rcrl
in
loopne
ljmp
xchg
mov
pop
in
cmpsb
leave
lret
and
cmp
out
test
xor
nop
dec
dec
dec
add
push
cmpsb
mov
push
aad
jb
lods
jmp
cmp
add
leave
je
ds
outsb
mov
ds
mov
jbe
xchg
in
loopne
mov
sarl
cli
jo
orb
sbb
pop
cmc
xchg
pushf
dec
lret
and
dec
enter
std
jl
fs
sub
cmp
clc
sahf
adc
push
test
ss
mov
add
add
inc
bnd
mov
dec
jmp
mov
mov
icebp
daa
out
adc
xor
ficoml
loope
xor
adc
outsb
divb
rcll
pop
mov
jo
push
gs
push
addb
adcl
mov
scas
outsl
jmp
jb
prefetch
in
mov
adc
sbb
inc
stos
sbb
mov
sub
test
imul
bound
pop
mov
repz
or
mov
shll
roll
or
fs
leave
scas
hlt
daa
pop
addl
popa
push
fldt
cmpsb
push
movsl
add
xor
test
sbb
imul
lea
sub
inc
mov
in
push
jne
movsb
aas
fucomi
aaa
mov
mov
pop
cmp
xlat
enter
sub
add
out
and
xchg
inc
fldcw
out
popf
mov
loop
mov
lahf
ret
jmp
and
and
jae
inc
imul
je
in
or
dec
mov
push
xor
lock
and
xchg
fcoml
and
mov
push
movsl
cmp
push
lcall
pop
aad
movsb
inc
pop
iret
push
outsl
mov
push
test
fwait
call
push
out
add
jl
add
int
fisttpl
je
mov
cmp
cmp
dec
add
mov
fdivrl
repnz
mov
sub
rolb
inc
stos
mov
mov
mov
and
in
je
test
jns
pushf
cmpsb
das
repnz
mov
loope
sub
xchg
cmp
es
sub
jl
or
inc
push
inc
stos
cltd
cwtl
jge
imul
pop
pop
stc
jbe
ds
pop
or
sbb
shrl
adc
ret
fisttps
push
in
not
push
pop
add
shlb
jecxz
int
and
cmpsb
sbb
das
insb
jl
or
pop
pop
push
cs
sahf
cmp
xor
loop
or
aam
push
daa
call
lahf
pusha
jo
cmpsb
cmp
push
inc
rcrw
scas
pop
cmp
jge
call
dec
sub
push
xchg
adc
loope
ja
lahf
popa
cmp
stc
mov
rcl
xlat
xchg
inc
sbb
adc
aaa
sarl
loope
mov
mov
xchg
cmp
popf
dec
xchg
mov
fs
cmp
cmpsl
es
repnz
dec
lods
or
jnp
mov
mov
xchg
or
fcom
inc
cs
sub
dec
sub
mov
or
enter
je
jl
ja
dec
cltd
cli
icebp
fs
xor
xchg
jge
insb
shrw
lods
dec
push
shr
mov
mov
aas
xlat
pop
fnstcw
repz
out
cli
push
jge
xor
xchg
gs
pop
cmpsb
inc
outsb
adc
lret
adc
les
fsubrp
mov
bound
pop
movsb
pop
pop
pop
iret
mov
pop
cld
fst
leave
push
sbb
pop
bound
and
dec
dec
int3
stc
xlat
mov
sub
lds
clc
mov
xchg
sti
push
sbb
xchg
ficoml
adc
sbb
lret
adc
ljmp
bound
andl
ret
push
add
xchg
outsb
lret
jns
push
pop
dec
ljmp
and
push
jg
push
push
jp
stos
add
sbb
test
aad
add
pop
mov
mov
xchg
jne
cs
cwtl
add
or
xchg
jg
xchg
test
adc
orb
out
stos
cwtl
pop
ljmp
fcom
mov
leave
stc
inc
xchg
lock
jae
push
loop
sbb
imul
xor
sbb
xor
xlat
insb
fisttps
icebp
adc
xchg
icebp
mov
fdiv
or
dec
inc
jbe
sbb
cmpsl
pop
popa
shrl
and
pop
dec
and
stos
mov
shll
int
jo
icebp
rclb
mov
and
xchg
js
pushf
sub
pop
jp
mov
mov
xor
jae
notl
dec
mov
loope
movsb
arpl
loop
mov
and
stos
mov
mov
pop
cmp
andb
fisttpl
ret
cmp
and
and
inc
pop
fcmove
in
iret
ljmp
sub
je
inc
sti
loopne
nop
cli
lcall
cmp
xchg
jo
add
stos
jg
add
push
xor
dec
push
pop
stos
pop
pop
jp
inc
dec
jmp
fwait
jne
fistpl
mov
cmp
xor
or
and
je
pop
push
imul
mov
mov
adc
data16
sti
adc
jp
inc
in
nop
test
ja
shlb
xchg
pusha
stos
repz
push
mov
xlat
sbb
add
jl
sub
test
fs
adc
adc
lea
call
dec
out
xor
inc
cltd
out
gs
scas
aas
fldenv
mov
inc
and
cmp
push
cli
repz
aad
and
fidivrs
cmpsb
inc
jge
mov
ss
outsb
pop
insb
add
push
add
inc
xor
outsl
cmc
or
movntq
out
fdivr
rcl
sti
outsl
sahf
in
pop
roll
incl
imul
jns
mov
fld1
adc
loopne
out
sbb
mov
sahf
lcall
jns
mov
push
pop
mov
test
pop
inc
fcoms
repz
bound
mov
dec
pushf
fwait
jbe
mov
cld
lock
cwtl
mov
xorb
push
jle
inc
or
sub
sbb
lret
pop
xadd
int
pushf
mov
loopne
cwtl
fbstp
adc
test
popa
jns
add
jmp
popa
test
mov
imul
or
lods
or
and
xor
mov
int3
cmp
xor
push
out
sub
xchg
mov
movsb
push
enter
lcall
into
cld
in
pop
popf
shr
fiaddl
movsl
jb
daa
ret
inc
pop
jae
out
in
loop
les
dec
push
adc
push
jle
test
ficoms
aam
push
add
mov
mov
cmp
and
popl
pop
xlat
dec
inc
pop
push
cmpsb
ror
bound
mov
test
popl
in
add
repnz
adc
mov
int3
sbb
sahf
popl
push
stc
mov
lahf
mov
repz
sbb
clc
xor
mov
data16
js
ss
imul
fldt
cmp
or
mov
pminsw
cs
push
pushf
out
hlt
and
bound
mov
lret
or
lcall
stos
mov
sbb
pop
pusha
adc
stos
pop
mov
xor
movb
xsaves
mov
icebp
in
dec
pop
sbb
push
or
xchg
or
xor
pop
push
lret
leave
cmp
inc
mov
in
adc
add
sbb
and
cltd
add
test
xchg
mov
mov
xchg
xchg
xchg
cmc
add
pop
rolb
cld
fbstp
addr16
lret
xchg
cmc
mov
sarl
mov
cli
sti
cmp
dec
jge
add
add
pop
out
adc
sub
xchg
subl
cmp
dec
xchg
fsubr
int3
cmc
int
xchg
and
add
stc
inc
add
stos
pop
aam
lods
sub
cs
jnp
rcr
cmpsb
sbb
outsl
mov
aad
and
iret
dec
push
jge
xchg
mov
aas
popa
cmp
fdivr
sbb
loope
cli
jnp
jbe
imul
jp
hlt
cwtl
jg
pop
stc
outsb
rcl
push
jae
cltd
cmc
sub
sbb
sbbl
data16
punpcklwd
in
jge
clc
add
jb
loop
jo
xchg
sbb
movsl
cmp
cmp
and
leave
lods
and
jns
xor
inc
sbb
push
dec
fistps
xor
out
mov
mov
and
pop
jo
lock
test
jne
sub
pop
das
movsl
xor
pushf
popa
pop
lret
cmp
and
inc
loopne
xchg
fsts
aaa
ror
mov
cmpsb
fidivrs
cmpsb
aam
sbb
test
shll
ret
out
loop
lcall
inc
xchg
dec
hlt
cmp
fwait
cmp
movsb
mov
mov
xchg
cmpsl
lods
cmpsl
or
sub
push
xlat
inc
dec
scas
popa
or
cltd
add
outsb
mov
jbe
jecxz
daa
cmp
pop
das
mov
xchg
push
xor
shlb
adc
cmpsl
pop
sbb
imul
sbb
adc
jmp
in
das
dec
popa
adc
dec
push
sub
pop
out
xchg
fcoms
div
shlb
fs
and
dec
jecxz
insl
test
ss
sub
fisubrs
nop
mov
push
insl
es
lea
mov
rol
scas
push
jp
pop
jbe
stos
insl
dec
rcl
jne
dec
inc
outsb
lods
inc
stc
add
jle
adc
aam
jmp
pop
adc
jmp
adc
in
fbstp
in
xchg
xor
ficoml
jmp
mov
lcall
int3
sub
mov
lock
fistpll
mov
cwtl
loope
cmp
fdivs
or
shll
jp
jecxz
or
ljmp
mov
and
fimuls
sub
inc
mov
inc
in
jp
cmp
mov
addr16
insb
push
push
cmp
cli
insb
pop
mov
xchg
test
lahf
aam
outsl
pop
xchg
mov
arpl
aas
cli
push
bound
dec
icebp
add
test
mov
mov
adc
das
pop
adc
and
loop
scas
add
or
dec
xor
xor
push
insl
out
test
add
rcrb
ds
notb
out
mov
mov
xchg
xchg
out
lcall
or
mov
mov
xchg
sbb
out
mov
mov
shll
cltd
and
xchg
lahf
cmpsl
push
and
jecxz
mov
or
inc
or
out
lds
or
xor
lahf
adc
cltd
inc
xorl
xchg
out
js
ds
or
xchg
movsl
shrb
push
and
jnp
clc
add
xchg
mov
scas
mov
dec
or
add
ret
repz
cltd
adc
jl
add
pop
push
xlat
loopne
lods
lds
ret
add
mov
and
fsubp
mov
repz
push
add
jp
gs
outsb
xlat
adc
iret
scas
in
push
iret
sub
loope
cmc
cli
cmp
fnstenv
rorb
jnp
mov
jecxz
push
lahf
lahf
insl
sub
add
adc
and
and
ss
pop
test
cmp
adc
pushf
sahf
jp
inc
mov
dec
cmpsb
loop
scas
jl
ret
jno
popf
jecxz
xor
jb
sub
sbb
push
push
loop
je
out
lahf
mov
sbb
jae
in
outsl
dec
mov
fdiv
cmpl
and
rcrl
test
stc
cmp
jnp
dec
inc
in
ds
push
lods
mov
mov
and
repz
pop
dec
addr16
pop
icebp
aaa
mov
sub
scas
pop
in
pop
pop
push
inc
adc
mov
cwtl
adc
mov
sbb
pop
sahf
pushf
lret
imul
sbb
les
push
push
mov
aad
pop
mov
fstps
shlb
stos
cmp
mov
dec
xchg
sbb
dec
sub
icebp
mov
mov
push
cmp
mov
push
scas
test
add
fistl
dec
std
or
cwtl
mov
cld
ds
std
and
mov
mov
push
push
inc
loope
push
xor
mov
ds
dec
sub
sbb
or
movsl
xchg
data16
out
inc
inc
sub
std
cli
mov
das
sbb
mov
push
add
test
aam
aaa
jae
cmp
adc
adc
frstor
into
in
mov
sahf
lret
jae
pop
xor
dec
insl
dec
dec
lahf
jmp
dec
push
int3
daa
mov
cmp
xchg
pop
pop
sub
or
dec
rcr
in
cmp
call
xchg
inc
lea
add
hlt
mov
jb
xchg
faddl
sub
xor
test
shrb
push
mov
inc
or
inc
xlat
mov
imul
pushf
jnp
ds
and
mov
dec
rorl
jno
xchg
jp
xchg
dec
enter
push
rclb
and
jmp
xor
clc
jmp
sahf
js
cmpsb
sbb
scas
lds
and
and
pop
nop
ds
push
inc
in
popa
insb
mov
add
xor
scas
call
cmpsl
mov
rcl
sub
je
add
pusha
dec
fnsave
insb
jp
outsb
jne
xor
dec
mov
push
jo
xor
cmc
in
mov
and
jbe
iret
and
or
nop
jp
cmp
hlt
mov
fcoms
push
fdivrs
inc
pop
stos
in
fmull
adc
icebp
icebp
out
ljmp
cld
cltd
dec
fwait
aas
add
test
sbb
mov
mov
pusha
cmp
imul
cmp
add
cli
jbe
jg
adc
into
scas
ljmp
mov
mov
dec
pop
les
out
and
push
sub
cmp
pop
jmp
nop
mov
sub
or
and
pop
enter
lea
mov
push
cmpsb
jge
jbe
lea
mov
cmp
jnp
into
and
adc
pop
adc
cmp
dec
xor
cli
scas
mov
pop
add
add
xlat
mov
add
xor
ror
mov
fildll
loope
cmp
inc
insl
loope
loope
outsb
stos
lds
push
adc
js
push
xchg
rcrb
int
or
dec
mov
cmp
pop
rcr
enter
cmpsl
sbbb
cmpsb
xor
mov
add
xor
nop
pop
aaa
jecxz
mov
dec
jno
bound
outsb
and
xor
cli
in
out
mov
push
adc
shlb
imul
sub
cwtl
xchg
xor
sbb
sub
bound
xchg
push
jl
push
jl
dec
jo
xor
data16
dec
mov
sub
outsb
inc
mov
int
jb
mov
int
inc
movmskps
cmp
js
jo
js
pop
cmp
ljmp
dec
push
sbb
push
rorl
push
adc
dec
roll
push
sbb
out
mov
mov
mov
or
hlt
loop
sub
push
jmp
jns
xor
push
jmp
mov
and
incl
popf
aas
mov
shrl
sub
out
sbb
leave
inc
mov
fisubrs
push
xchg
dec
scas
cmpl
xchg
mov
inc
sub
adc
cmp
test
xor
sbb
nop
adc
ret
jns
mov
cwtl
lret
mov
mov
loopne
mov
mov
rcl
lea
inc
push
add
pusha
jae
push
cs
pop
icebp
push
int3
int3
push
sarb
mov
cli
in
inc
jl
dec
xlat
mov
in
movsb
jg
mov
mov
push
add
inc
push
sbb
or
aaa
xchg
xor
xor
and
xor
xchg
inc
ror
cmc
testl
ret
pop
and
into
or
pop
cli
adc
cmc
push
insb
mov
push
leave
dec
gs
pusha
mov
and
add
ret
cmp
xor
xor
pop
pop
mov
fwait
js
inc
add
jae
mov
pop
add
adc
movsb
xchg
lods
ret
scas
ja
mov
jb
xor
test
mov
xlat
insb
xchg
rolb
loope
andl
mov
mov
rcr
fmul
inc
outsb
jnp
sbb
push
add
sarl
js
inc
xor
and
adc
loopne
or
or
or
fs
adc
int
leave
shll
or
xlat
and
xchg
jecxz
jno
jmp
popa
fldt
ret
add
mov
push
fwait
mov
lret
popa
mov
jmp
cwtl
psubw
sbb
or
lcall
sbb
jmp
mov
movsl
stos
xchg
add
and
out
mov
adc
fmul
aad
popl
mov
lcall
xor
je
out
xchg
test
sbb
inc
jae
loopne
mov
sub
jne
jge
fsubs
sbbb
or
pop
cmp
fcoml
pop
cmp
and
jp
fcomps
sub
inc
bnd
push
cmp
stos
jns
cltd
push
or
adc
or
xchg
inc
arpl
inc
popl
mov
movsl
xchg
mov
lock
stc
popa
xorl
test
shrl
testb
popa
ret
pop
jl
sub
rcrb
iret
mov
lods
or
dec
loopne
pushf
sbb
mov
push
push
push
dec
add
jns
gs
pop
in
xchg
pop
gs
out
xlat
aad
xchg
popf
cld
sbb
aam
notb
xor
mov
mov
dec
sub
dec
ficoms
das
ja
lcall
inc
add
das
mov
add
stos
lods
dec
mov
into
out
mov
fsubl
orl
nop
negb
sahf
cmp
pop
sbb
sti
fdivrs
outsl
jecxz
pop
in
cmpsl
pushf
popf
xchg
ljmp
lret
add
sbb
lret
pusha
mov
sbb
jge
gs
js
mov
pusha
pop
insl
adcb
cwtl
push
cs
jle
sbb
into
mov
test
sub
aad
cwtl
adc
mov
je
or
leave
mov
cmpsb
inc
pop
fnstenv
or
xor
pop
sbb
sti
popf
test
dec
pop
add
int
jmp
std
mov
xchg
int3
inc
bound
sub
xchg
test
jl
ja
imul
cltd
movsl
cmp
jp
xchg
rorl
in
mov
cmp
and
pop
sbb
ret
add
daa
sub
aam
insb
xor
sarb
aam
pop
jno
lock
arpl
sbb
mov
orb
lcall
arpl
adc
add
fs
and
and
mov
pop
pusha
sbb
insl
jnp
push
add
in
in
loope
xchg
test
sbb
out
enter
push
mov
push
push
imul
in
mov
jge
lock
and
add
call
jle
push
or
add
nop
mov
sahf
sub
arpl
aad
lcall
push
jns
out
aam
xchg
jbe
cmp
xor
mov
fmuls
mov
sbb
sbb
xchg
cmc
mov
fwait
dec
mov
ja
mov
xchg
fstpt
int3
cli
mov
pop
adc
jnp
sbb
jae
in
imul
cmp
or
lea
lods
pop
sahf
pop
jo
call
sbb
inc
stc
int3
sbb
jnp
push
xor
sub
test
pop
sti
sti
in
dec
fisubrs
nop
pop
loop
pop
and
or
or
jmp
jbe
pop
cmc
sub
inc
adc
xlat
pop
xchg
movaps
mov
cmp
mov
push
push
lods
or
push
add
mov
roll
out
mov
add
push
or
mov
cltd
pop
push
cmp
mov
bound
test
repnz
out
cmp
in
mov
imul
fwait
inc
ljmpw
inc
mov
and
and
ss
xor
sahf
pop
xchg
test
ret
inc
inc
loopne
xchg
fisttpl
sbb
jb
outsb
adc
mov
jge
movsl
iret
std
jg
sbb
ja
add
orb
fdivrs
ja
or
popf
imul
mov
addb
push
divl
add
mov
jmp
dec
jecxz
sahf
jecxz
mov
iret
pushf
jmp
mov
adc
inc
mov
test
hlt
out
inc
push
nop
sub
pop
je
pop
adc
xor
hlt
pop
mov
ds
notl
or
pusha
scas
das
sti
lahf
xchg
orb
fucomp
xlat
hlt
mov
or
outsl
jp
fiaddl
pause
xchg
fisubrl
add
jne
aaa
push
fwait
lahf
jno
in
mov
mov
cmpsl
jmp
inc
lds
cld
push
lahf
popa
into
in
or
js
test
cmc
mov
xchg
les
loopne
sub
std
push
mov
push
cltd
xor
stc
cli
test
or
mov
aad
xchg
pop
inc
popf
pop
and
mov
ret
pusha
xor
add
ret
sbb
sahf
xchg
mov
gs
scas
jno
jns
std
mov
mov
sub
sub
add
pop
hlt
movsb
push
cmp
xchg
jmp
dec
ret
sarl
in
adc
test
pop
icebp
mov
and
push
arpl
in
hlt
push
add
les
arpl
das
xor
std
aaa
or
test
pop
repz
cmp
fildll
mov
dec
bound
xchg
xchg
jae
and
gs
pop
loopne
dec
out
sub
ja
jae
xchg
nop
pop
pop
vhaddpd
fs
xchg
dec
mov
dec
es
test
jbe
enter
mov
sbb
cmpsb
sub
push
mov
jo
pop
add
mov
and
add
sub
sub
mov
in
xor
inc
push
and
lods
dec
and
bound
mov
push
repnz
xchg
clc
adc
jle
stc
cmp
movsl
mov
or
rcr
adc
mov
mov
and
aad
jne
sub
lret
jecxz
and
dec
ror
xchg
push
in
decb
push
stos
jb
cmp
fs
cltd
test
jo
test
enter
pop
insb
or
insb
xor
sub
and
jne
sarl
cmove
sahf
daa
sbb
inc
fsubs
sub
test
test
add
cli
lods
inc
dec
sub
mov
add
or
mov
xor
loop
inc
dec
jg
int
jne
shl
scas
push
adc
xchg
aas
in
fistpl
bound
cmp
rcr
movsl
shl
stos
and
mov
ds
les
jne
leave
js
cs
adc
pop
mov
notb
mov
adc
cmpsl
add
jge
jns
popl
jp
ja
stos
cltd
cld
je
mov
adc
jg
test
pop
push
adc
stc
aad
sub
aas
stos
ljmp
and
js
xlat
inc
mov
call
cmpsb
sub
stos
ja
add
scas
les
xchg
sbb
jge
cmpsl
dec
or
jb
daa
js
cmp
cmp
icebp
out
sarl
dec
xor
mov
ja
jp
andl
cmp
dec
mov
mov
and
push
sub
dec
jp
pop
int3
and
popa
dec
mov
movsb
ficoml
rclb
jmp
in
popa
jmp
sbb
adc
rcll
js
sub
outsl
js
pop
xor
jae
mov
and
leave
push
pop
or
sub
je
addr16
mov
inc
popa
dec
lods
scas
data16
xor
cmc
enter
cmp
jnp
adc
pop
outsl
dec
movsl
aam
ss
daa
in
jo
jbe
ss
stos
inc
ficompl
ss
and
push
and
and
inc
mov
push
jecxz
ret
xor
es
dec
cli
sbb
pop
cli
jge
and
dec
or
fistpl
pop
jbe
mov
aaa
mov
test
data16
stc
bound
loopne
cmp
lea
sahf
mov
dec
insl
or
cmp
rcll
shll
jae
mov
jno
mov
daa
neg
pop
sub
xor
xchg
imul
popf
outsb
jo
js
mov
out
stc
cs
xchg
lods
pop
call
inc
mov
inc
pop
mov
int
imul
jmp
fwait
not
mov
push
sub
sub
into
pop
mov
cmp
sarb
dec
fwait
not
mov
das
addr16
int
adc
jmp
cmp
sub
xor
jae
loope
ja
data16
jne
stc
jo
sbb
outsl
pop
xchg
cmp
pop
lds
sarl
fs
sub
fadd
jbe
push
pop
outsl
orb
inc
hlt
sbb
pop
mov
mov
jae
jns
cli
or
sar
int3
mov
jle
mov
jl
inc
pop
cmpsl
shrl
or
sub
add
ret
jl
repnz
fwait
dec
lcall
cmpsb
rcr
pop
mov
loopne
add
iret
loope
lret
mov
pop
mov
rcrb
mov
jae
mov
mov
lret
inc
jne
mov
pop
lock
sbb
fdivrs
into
xor
adc
mov
lock
pop
sahf
cmp
xchg
push
fldt
xchg
jmp
mov
and
fyl2xp1
or
out
outsl
clc
pop
pop
pop
nop
cmp
imul
and
push
xlat
aaa
jle
mov
dec
and
fnstcw
add
hlt
cmp
movsl
test
ret
stos
pop
js
mov
jecxz
int3
cmp
cmc
xchg
cmp
add
repz
outsl
adcl
ds
mov
add
shlb
insl
lret
sbb
adc
mov
pushf
jbe
xchg
aad
sub
mov
and
fidivl
cwtl
loop
dec
int
cmp
add
or
ss
jl
test
mov
mov
mov
cmp
inc
xor
nop
mov
add
push
sbb
pop
adc
jbe
fwait
mov
adc
decl
orl
loopne
sbb
dec
pop
sbb
fwait
push
fneni(8087
into
leave
dec
adc
sahf
movsb
inc
add
icebp
xchg
push
push
sbb
adc
xchg
int
push
mov
mov
subl
jbe
xor
pop
and
add
jmp
or
cwtl
mov
mov
cmp
or
fcomi
dec
pop
mov
cmp
push
in
movsl
std
jno
daa
inc
or
stc
pop
jns
arpl
dec
push
push
xchg
in
add
mov
aad
mov
or
mov
xor
fsubrl
mov
lock
xor
adc
clc
add
xor
push
mov
popa
dec
cli
jle
xchg
stos
and
and
xchg
fcmove
stos
std
enter
shrb
sbb
xor
pop
cs
lret
addr16
iret
lods
cmpb
cld
or
and
jecxz
pop
adc
or
cltd
mov
sbb
cmpsl
adc
fs
aad
pop
push
sbb
fildll
mov
js
jne
and
push
repnz
loop
jg
stos
rcrl
adc
sar
mov
cmpsl
test
jmp
add
sub
sub
add
in
fs
lcall
sbb
mov
cld
aam
pop
repnz
push
pop
adc
add
jge
lret
cltd
lea
and
daa
push
xor
shll
jae
cmp
rcl
and
scas
mov
mov
outsb
out
sub
mov
mov
add
das
jnp
out
popl
lods
cmc
loope
nop
mov
sub
xor
les
or
jo
adcl
inc
test
add
lret
rorl
test
out
add
sbb
pushfw
les
cld
or
sub
rclb
xor
data16
sbb
pop
mov
out
mov
shrl
jns
int
in
jb
sar
xlat
lods
jnp
mov
mov
std
jl
sbb
jg
inc
and
lcall
pushf
cltd
cmp
mov
int3
pop
fcmovb
je
xor
out
sub
xchg
sti
insl
lds
dec
cmc
dec
pop
rcr
mov
sub
sub
xlat
or
fnstcw
cmpsl
call
jno
adc
or
lret
arpl
jno
adc
and
and
leave
cmp
imulb
das
dec
inc
dec
insb
out
shl
or
movsl
dec
jle
adcb
lret
into
icebp
and
adc
adc
call
pop
scas
jge
mov
aad
push
or
and
arpl
lds
dec
and
mov
pop
into
or
pop
push
movsb
fs
aam
aad
je
das
cmp
fcmovne
cmp
push
dec
inc
arpl
xchg
call
and
mov
lds
or
jae
xchg
jl
cmp
sub
jo
pop
sbb
test
loop
mov
mov
push
out
xchg
add
mov
jne
les
and
lds
andps
test
push
xchg
cs
add
ficompl
jmp
shll
sub
mov
inc
ja
lods
mov
aaa
cmp
sbb
testb
cmc
pop
sbb
jae
or
adc
sbb
push
cmp
ja
idivl
lcall
gs
xchg
sbb
push
ljmp
sub
sub
sahf
and
push
lods
fimuls
mov
mov
cmp
fadds
inc
fcomps
roll
sbb
or
test
adc
test
jnp
xor
and
in
push
or
test
sbb
dec
cmpsb
push
mov
mov
xor
dec
movsb
dec
mov
push
in
fwait
int
dec
lahf
aaa
adc
push
rcll
fnstcw
mov
jbe
int
shrb
in
mov
popa
cmovb
or
cmp
adcb
stos
call
cmp
jp
sub
scas
out
fcomip
mov
add
and
mov
jo
jno
mov
out
cli
nop
push
pop
xor
push
sbb
mov
dec
out
xorl
pop
int3
wbinvd
fdivs
lds
and
stos
cmp
jge
mov
sbb
xchg
add
sub
mov
fwait
sbb
loopne
xchg
xchg
mov
and
cmp
inc
enter
ja
inc
sub
loopne
jne
sbb
mov
jle
inc
cmp
jle
inc
add
scas
jbe
nop
or
pop
rorl
jge
xor
jbe
push
push
sbbl
sbb
mov
mov
mov
pusha
decb
inc
inc
pop
push
cmp
rcrb
cld
xchg
imul
arpl
mov
inc
ss
and
repz
dec
xchg
ss
stc
lock
mov
or
adcl
xchg
jbe
stos
scas
adc
sbb
shl
mov
ret
cmp
cld
popa
cmp
dec
popa
in
lods
sar
jbe
add
and
les
push
xor
ja
out
daa
pop
mov
rolb
in
das
push
adc
shrb
repz
dec
adc
inc
jns
inc
pop
fwait
push
sar
pop
sub
lods
fidivrl
jne
mov
fsub
pop
cmp
pop
mov
push
idiv
inc
popa
lcall
std
push
jge
ss
dec
cmp
aad
inc
xlat
jp
stos
call
pop
rorb
or
push
dec
mov
mov
push
xor
imul
jmp
sarl
cmp
repnz
push
jns
jo
sbb
shlb
adc
sub
or
xlat
xchg
stc
movsl
or
cmpsl
ret
pushf
fwait
xor
jne
jecxz
lcall
lcall
test
mov
push
pop
dec
ret
mov
xor
cmp
jo
add
imul
call
imul
into
fisttpl
lea
mov
xchg
and
shrl
mov
inc
pusha
push
add
xlat
and
and
pop
mov
adcb
js
aas
cmp
inc
ss
mov
add
jge
mov
ja
loope
popf
loopne
xchg
lea
pop
shrb
in
idivb
cwtl
pop
pop
pusha
mov
lods
cmp
shll
dec
fsubrs
dec
insb
and
out
and
leave
iret
inc
xlat
push
loop
mov
sbb
stos
stos
scas
add
mov
add
les
dec
lods
cli
add
sub
hlt
mov
mov
mov
dec
outsl
scas
fs
sbb
jg
sub
inc
out
fs
push
int3
xor
ds
sbb
cmc
inc
adc
jne
mov
push
sub
jp
jge
pop
dec
pusha
inc
in
cld
jnp
mov
jle
jno
pop
cmp
das
xor
xchg
push
mov
in
imul
xchg
movsl
inc
fldl
push
and
fmul
cli
jecxz
add
neg
inc
aas
dec
ss
std
loope
gs
bound
bound
jmp
pop
sti
add
cmp
mov
pushf
cmp
jl
sub
pop
xlat
mov
in
dec
cmc
adc
repnz
push
and
xor
push
js
cwtl
rolb
or
lods
aas
movsb
sahf
mov
mov
cmp
mov
nop
cld
or
dec
cmp
outsb
cmc
and
push
pop
jo
stos
repz
sub
and
sahf
repnz
aam
loop
xchg
outsl
pop
cwtl
jns
jno
and
cmp
or
cmp
into
mov
dec
jae
insl
call
mov
hlt
iret
aaa
outsl
push
cmc
push
adc
adc
add
xchg
add
mov
mov
dec
mov
pusha
inc
push
xchg
jmp
rorl
cli
shlb
es
sbb
or
jb
pop
sbb
jb
and
shrl
hlt
jne
jge
ret
xchg
incl
jecxz
mov
loop
inc
fcompl
xchg
mov
dec
movsb
cmp
mov
sbb
lea
aad
pusha
cmp
dec
push
fsincos
lahf
jmp
fisubs
cmp
add
data16
clc
aad
leave
ret
add
addb
mov
mov
rcll
xchg
leave
push
jbe
cmp
aaa
lahf
int3
ljmp
stos
pop
loop
add
movsb
push
fstps
adc
jo
cmp
pushf
fwait
mov
xchg
lea
ficoml
xor
xchg
adc
in
push
jb
repz
icebp
pop
jo
js
int
aaa
pop
xchg
pusha
mov
popf
test
cmp
jne
xchg
dec
movsl
addr16
into
sbb
push
sbb
or
int
mov
and
xchg
push
jae
push
xor
aad
pop
aam
xor
psubd
mov
lret
or
or
mov
jns
xchg
negl
or
call
std
in
test
push
imul
cmp
push
xchg
ret
inc
pop
or
pop
inc
setge
out
pushl
adc
movsl
popa
sti
cmp
sti
jge
insb
test
enter
xorl
and
mov
and
mov
xlat
cli
sbb
cmp
out
jge
fwait
loop
outsl
mov
rcrl
movsl
push
aas
jg
fwait
shrb
dec
pop
aas
or
push
add
mov
pop
stc
dec
test
stc
sub
and
mov
mov
fwait
add
pop
pop
inc
inc
lcall
or
add
jo
adc
shlb
test
mov
fucomi
or
popf
roll
insb
lea
clc
add
fstpt
clc
inc
and
fildl
and
inc
inc
icebp
cli
xor
add
cld
sbb
xor
int
aad
inc
adc
loopne
insb
stos
cmc
cmp
aaa
xor
int
cmpsl
rcrl
mov
pop
pop
cmc
jmp
mov
notb
dec
nop
fisubl
imul
sub
and
sub
cltd
or
push
sbb
in
inc
aaa
cs
xchg
nop
es
adc
mov
xor
mov
test
dec
decb
mov
mov
int
daa
jmp
ja
jbe,pt
push
mov
or
or
push
push
sbb
ja
call
decb
clc
mov
call
mov
lods
js
fidivs
lahf
or
cmpsb
mov
inc
sbb
inc
movsb
out
aad
je
mov
cwtl
adc
mov
adc
xchg
dec
xor
movsb
dec
and
or
cli
add
mov
or
sbb
mov
jo
sbb
push
jg
pop
mov
inc
fnstsw
in
adc
mov
inc
fldenv
lods
inc
mov
pop
adc
cwtl
mov
sub
pop
jbe
inc
call
or
ljmp
testl
or
or
orb
cmpsb
push
loopne
push
push
mov
mov
adc
mov
out
lahf
push
aaa
xor
ret
out
mov
pop
dec
arpl
mov
jle
inc
jnp
cmp
ds
xchg
pop
add
loop
lods
scas
pop
outsl
push
adc
test
adc
lcall
insb
inc
stc
ljmp
mov
pop
and
in
xor
xchg
cmp
inc
mov
and
imul
adc
add
push
jnp
or
cwtl
inc
pop
sub
stos
dec
xchg
insl
mov
sub
xor
mov
mov
adc
addr16
cmpl
jp
sbb
mov
xchg
push
dec
ret
mov
test
popa
adc
mov
mov
jae
repnz
shlb
cmp
xchg
cld
and
jmp
dec
sbb
pop
inc
xor
push
lcall
mov
xor
xor
cmp
mov
cmp
add
mov
push
cmp
lcall
pusha
xor
and
mov
ret
add
cmp
push
call
push
daa
sbb
mull
pop
insb
jge
or
fcmovnb
xchg
jmp
push
aad
addb
test
cmpsb
bswap
mov
add
fxch
repz
push
add
pop
hlt
push
dec
add
adc
or
aas
mov
test
nop
repz
nop
fistpll
push
sahf
cld
imul
push
fwait
mov
test
xor
mov
idivb
sub
outsl
add
push
arpl
imul
cmpb
subl
mov
sbb
out
mov
call
out
inc
xchg
icebp
inc
xor
aad
inc
and
sti
push
pop
fnstsw
pop
sbb
loop
inc
adc
xchg
xlat
xchg
and
loop
xor
or
add
xchg
mov
ljmp
out
jb
dec
andl
dec
aam
repnz
lret
fsubrs
adc
test
int
aaa
lods
cmp
mov
fld1
dec
push
push
mov
loope
sti
loop
pushl
jbe
lahf
xorl
stc
add
ftst
inc
mov
imul
cmp
fisubl
sbb
dec
sbb
jge
outsl
out
aas
in
adc
inc
leave
popf
jo
shll
jnp
out
push
or
push
imul
shlb
mov
enter
lods
lods
lcall
push
cs
into
mov
mov
mov
mov
in
fmull
sub
lcall
subl
dec
sahf
or
jecxz
shll
push
mov
xchg
aad
mov
pop
mov
add
or
jae
addl
fcmovu
dec
dec
mov
push
shlb
lea
shll
jp
xor
test
call
mov
pop
cmp
aad
jp
int
cwtl
pop
je
mov
fisttpl
jl
mov
mov
or
sbb
outsl
lods
xchg
std
fs
mov
mov
inc
call
int
mov
mov
add
scas
les
pop
or
adc
notb
lcall
std
sbb
scas
sbb
and
ret
das
dec
mov
push
cmc
add
fldt
or
pop
lret
or
cmp
and
cltd
neg
jmp
adc
es
stos
xchg
mov
push
aad
call
cwtl
add
rorb
std
lret
cmp
negb
pop
roll
stc
sbb
in
lock
std
roll
adc
data16
push
shlb
outsl
fadds
mov
or
push
mov
xchg
ja
sbb
stos
insl
xor
lds
mov
xchg
xchg
stos
rorl
pop
inc
sti
jp
in
mov
jge
popf
insl
cltd
sbb
in
loope
pusha
subb
std
lret
pop
and
cwtl
test
jnp
movsl
std
cwtl
mov
sbb
xor
jg
test
lods
pushl
lcall
test
or
shrb
ljmp
mov
and
scas
push
cmpsl
and
dec
jb
cli
xor
pop
aam
jbe,pn
lahf
adc
mov
aad
aam
cmp
mov
test
lds
dec
mov
sub
and
pop
jl
add
aam
into
ror
xchg
pop
xlat
cmc
add
fstpl
aam
push
sbb
jno
cmpsb
stos
sub
jmp
pop
fiaddl
pop
iret
sbb
mov
ss
test
and
lret
xor
add
jmp
dec
jle
enter
sbb
sbb
add
aas
mov
sbb
sub
addr16
push
rcrb
outsl
inc
or
and
pop
aad
dec
test
sub
cmp
mov
xor
inc
mov
xchg
clc
scas
in
fst
xor
ret
push
ljmp
jns
hlt
cmpsb
push
sub
mul
ret
jo
bound
xchg
push
push
insl
fldcw
xchg
jecxz
scas
jp
dec
sbb
fstps
out
push
mov
mov
jmp
mov
push
rorl
mull
out
xor
mov
nop
test
cmp
mov
push
inc
sub
je
inc
adc
push
jns
aam
stos
mov
ljmp
mov
lods
lods
enter
sbb
aam
aas
fcmovnbe
or
add
dec
mov
add
popf
push
cld
in
sub
add
test
xchg
stc
je
cwtl
xchg
lods
outsl
xor
clc
xor
cmp
xchg
enter
loopne
xlat
mov
sahf
cld
shlb
pop
mov
jo
mov
dec
xor
pop
lock
pop
or
rorb
jae
outsb
fstpl
cmp
cmp
mov
or
inc
fnstsw
sub
cli
in
rcll
and
mov
xor
mov
cmp
pop
add
sub
and
in
dec
push
aas
nop
push
and
or
sahf
mov
aad
inc
lds
push
daa
sub
cld
in
mov
test
aam
cmp
filds
movsb
pop
or
call
sahf
cs
aaa
icebp
xor
lock
fcoms
mov
bound
push
fdivrl
mov
adcl
lret
int3
cmc
jnp
loope
or
jbe
mov
jge
ljmp
inc
xchg
pop
adc
in
pop
aam
xchg
add
pop
je
notl
call
std
int
and
inc
mov
pop
pusha
push
ds
sbb
loopne
pop
test
icebp
cs
push
mov
stos
daa
jnp
jb
push
loop
mov
cmp
dec
mov
xchg
sbbl
fst
icebp
out
mov
xor
jmp
into
xchg
fimuls
cmp
and
push
sbb
daa
or
jnp
nop
es
roll
aam
pop
in
lds
dec
pop
imulb
mov
sbb
and
lods
mov
aas
stos
mov
mov
fimull
bound
dec
mov
jg
pop
push
test
sbb
push
mov
push
xlat
lods
dec
jns
outsb
xchg
jmp
and
pop
and
inc
cltd
test
mov
roll
out
lcall
shll
test
lcall
lods
sahf
mov
out
pusha
mov
push
mov
add
mov
mov
dec
std
mov
aad
fs
stos
mov
pushf
les
insl
lret
fcoml
ljmp
mov
inc
jne
test
sbb
jnp
cld
xor
mov
sub
cmpsb
xchg
xor
pusha
jnp
fsubrp
in
pusha
imul
clc
cltd
int
sbb
mov
ljmp
data16
pop
iret
imul
lret
xchg
call
push
jge
cmp
and
push
push
gs
mov
into
shll
adc
dec
xchg
inc
pusha
cs
mov
or
xor
xor
xor
sub
fs
or
add
dec
std
mov
out
insl
cli
mov
cmpsb
jno
inc
cmc
nop
sahf
ss
pop
lods
push
lcall
and
xlat
xchg
das
jns
lahf
push
mov
out
in
push
in
negl
and
sbb
mov
stos
sbb
or
add
cmp
mov
mov
fdivs
cli
or
push
repnz
and
cmp
or
es
fwait
loopne,pt
push
das
push
mov
sbb
fwait
std
jae
iret
lds
sbb
inc
imul
xor
add
ja
test
roll
sbb
pushl
xchg
inc
inc
push
inc
rorb
sub
fisttpll
cld
sub
xor
inc
pop
dec
mov
xchg
xor
xchg
test
nop
jmp
sub
aam
mov
lock
jnp
lds
mov
pop
pop
or
push
pop
cs
adc
lods
mov
add
pop
movsl
sahf
dec
xor
idiv
dec
mov
and
add
cmp
mov
outsl
mov
int3
mov
push
jno
push
sbbl
outsb
stos
and
cmpsl
pop
sub
daa
mov
mov
ja
or
xchg
mov
shll
mov
pop
les
aad
mov
ret
push
movsl
hlt
mov
inc
sub
mov
mov
cwtl
sbbl
jnp
pavgb
pusha
sbb
mov
mov
out
in
fcoml
add
pop
lods
loop
loop
mov
inc
adc
dec
insb
lret
sub
pop
int
mov
adc
cltd
fstpl
xchg
leave
mov
in
pop
xchg
push
outsl
cmp
xchg
dec
inc
or
andl
mov
adc
popa
mov
xchg
mov
push
sub
push
fistl
ds
or
xchg
xchg
jle
mov
dec
loop
mov
add
pusha
jle
hlt
cmp
inc
cmp
lock
xor
and
aas
inc
and
ljmpw
into
popa
scas
leave
das
imul
jle
lret
inc
stos
cmp
inc
pop
push
push
mov
sbb
inc
ffreep
jae
in
jg
add
sbb
pop
pop
sub
lret
pop
adc
ja
lods
stc
out
push
ja
push
psubq
out
adc
hlt
and
mov
cmp
fwait
roll
out
es
subb
xchg
jge
push
sub
pop
cmp
out
cmpl
repnz
xchg
xor
or
bts
push
pop
sub
aam
cld
mov
fisubs
cmp
mov
xchg
daa
pop
cwtl
test
add
cmp
les
pop
xor
xchg
in
mov
fdivrl
repz
dec
ja
mov
sub
adc
flds
in
add
pushf
subb
cs
sub
dec
push
mov
ds
jge
pushf
cmpsb
xchg
clc
or
inc
dec
test
mov
ja
les
jno
adc
cli
enter
push
inc
or
inc
mov
lret
pop
inc
pop
and
sub
mov
arpl
push
cmp
iret
inc
insb
out
jne
push
shll
aaa
ror
pop
inc
bt
push
inc
shlb
lret
or
cmp
fimuls
or
mov
cmc
mov
adcl
sbbl
mov
out
xchg
mov
leave
bound
xlat
adc
xor
inc
imul
dec
jo
mov
pop
outsb
mov
insl
hlt
cmp
jecxz
cli
jne
xor
lret
iret
and
cmp
sub
xor
subb
jo
and
lock
addr16
cmpsb
adc
pusha
call
pop
pop
pop
mov
add
inc
lock
decb
jb
mov
popf
das
sbb
arpl
xchg
pop
mov
fprem1
dec
jl
jmp
in
push
cmp
mov
test
xor
test
xchg
stos
cld
lret
movsb
xchg
pop
mov
mov
push
add
xor
and
shl
lds
mov
mov
sbb
cs
out
push
lods
das
and
jbe
push
push
into
dec
pop
out
test
sbb
and
sarb
jae,pt
mov
or
add
insb
add
push
xchg
fld
xor
fnstcw
sbb
outsb
popa
push
addr16
dec
test
lcall
jno
shlb
test
loope
pop
mov
and
call
pop
ss
into
int
adc
lods
int3
lods
mov
jle
fbstp
inc
idivb
xchg
es
stc
jns
shrb
inc
jb
mov
rcrl
mov
cmp
mov
jp
push
and
fidivrs
push
sub
cmp
rolb
sub
jp
lods
mov
xor
push
sbb
mov
out
or
dec
pop
adc
push
stos
jge
sub
pop
xchg
js
in
jbe
loop
imul
ss
cli
scas
xchg
je
sub
ja
mov
dec
mov
jb
pop
inc
and
fcoms
cmpsl
cmp
sub
mov
dec
sbb
mov
jnp
loope
jno
inc
outsl
das
mov
repz
jp
test
aas
and
xlat
punpckldq
and
mov
xor
xor
fstpl
ret
xor
movsl
or
cld
int
or
cmp
xchg
and
mov
dec
repnz
push
mov
jno
nop
lds
inc
nop
jnp
movsb
loopne,pn
push
shll
fmulp
mov
arpl
lahf
je
rclb
xchg
scas
fninit
mov
cmp
repz
and
pop
aad
push
shll
lcall
insb
lods
lahf
subl
jge
shl
adcl
stc
popf
xor
lahf
push
or
cmp
repnz
adc
jp
inc
mov
mov
or
xor
popf
enter
and
not
ret
into
or
pop
test
mov
mov
push
mov
test
xchg
mov
mov
dec
inc
mov
and
lock
adc
orb
push
insl
je
stos
sub
aaa
pop
iret
addl
in
movsb
mov
inc
xor
or
sbb
mov
das
int
popf
repnz
outsl
aad
adc
sbb
mov
aas
mov
fstpt
or
out
xorl
mov
mov
shll
mov
push
mov
push
movsl
jge
mov
push
mov
gs
add
daa
in
xor
pusha
push
jo
pop
sub
xor
lods
sbb
xchg
pusha
mov
data16
add
in
push
push
lcall
rol
pop
adc
inc
sbb
loopne
dec
stos
fs
stc
test
mov
nop
pop
jge
cmpsl
shrb
ja
jg
addb
pop
imulb
imul
inc
jne
cli
mov
mov
push
dec
shl
imul
lahf
or
out
add
clc
andl
dec
adcb
xchg
nop
shll
clc
or
gs
pop
and
lret
arpl
outsl
rsqrtps
mov
sti
and
xadd
lea
mov
mov
push
stc
mov
aaa
xor
outsl
ret
sahf
in
pop
jnp
js
or
or
xor
subl
pop
inc
gs
scas
xchg
mov
jbe
jno
jl
cmp
xor
jecxz
je
adc
pop
xor
jge
jns
jno
xlat
and
pop
or
dec
popl
push
inc
loop
xlat
inc
scas
cmpl
pop
adc
pop
push
aad
cli
pop
aam
inc
xchg
stos
pop
outsl
jne
nop
jbe
inc
jmp
or
sub
mov
sbb
xchg
jb
dec
dec
mov
jle
dec
push
or
addr16
dec
push
js
test
rorb
mov
rcrb
rclb
xor
nop
inc
out
adc
outsb
mov
out
mov
ret
jp
cltd
stc
imul
fistpll
push
ljmp
add
sbb
int3
clc
loope
shrb
nop
jg
aad
js
pop
adc
pop
push
je
push
dec
fldcw
xchg
adc
cld
sti
push
and
mov
rol
dec
dec
loopne
ret
and
push
aam
xchg
inc
movsl
xor
test
pop
sbb
sub
cltd
pop
inc
dec
mov
dec
leave
cmp
xchg
cmp
int
mov
mov
or
push
push
sarl
add
inc
int3
test
popf
out
xchg
into
xor
dec
dec
cmp
jae
xchg
cmp
stos
stos
fists
or
jmp
mov
push
or
rorb
call
stos
fisttpl
les
push
lret
dec
loop
mov
mov
or
mov
lea
imul
adc
jg
mov
mov
mov
les
in
mov
pop
jle
sar
dec
ret
xor
xchg
sub
jmp
loope
pop
imull
push
and
jmp
cmpsl
pop
push
ljmp
sarl
mov
in
mov
or
ljmp
in
mov
push
add
pop
mov
jge
or
sub
rorb
dec
lods
cld
mov
and
sahf
or
fimull
cwtl
movsl
lds
mov
ret
or
mov
xchg
jmp
add
jl
inc
push
and
push
jecxz
mov
ss
insl
divl
cmp
enter
jle
out
push
sarb
es
inc
ret
cmp
or
and
fcomps
jge
push
mov
inc
in
lret
add
or
jns
nop
cmp
sbb
adc
faddp
stc
in
gs
aas
jne
sub
push
movl
mov
sub
push
jp
js
cmp
lret
into
icebp
adc
jmp
or
daa
test
push
push
pushf
das
out
ljmp
cmp
jl
orb
sub
mov
sarb
jle
adc
mov
lea
add
sbb
push
call
in
xor
in
jle
test
js
jecxz
cmp
sub
lret
loop
sarl
xchg
lock
mov
adc
int
jnp
push
in
sbb
flds
adc
add
in
popa
dec
shlb
xchg
cmc
movsb
push
pop
pop
mov
xchg
push
cmp
push
movsl
cmc
lret
loop
ret
cmc
test
adc
adc
insl
mov
test
outsl
fwait
inc
dec
sbb
data16
ret
or
jnp
mov
out
mov
cmpsl
icebp
adc
add
loop
sub
push
test
mov
adc
cmp
int3
loopne
subl
push
pop
sti
aad
push
shrl
or
outsl
aaa
mov
stos
and
and
fwait
fs
push
out
daa
popf
mov
xchg
mov
cld
add
mov
push
in
lea
mov
mov
mov
in
cwtl
out
mov
mov
push
mov
sbb
mov
sub
inc
pop
popa
dec
iret
xor
pop
ficoms
int
jb
cmp
xor
inc
and
shrl
push
imul
xor
xchg
xchg
mov
and
lods
push
pushf
pop
repnz
push
jp
shrb
sbbl
popfw
mov
std
mov
sets
sub
mov
pop
pop
bound
adc
mov
xor
mov
or
mov
add
lahf
push
dec
aas
pop
enter
add
adc
or
mov
or
stos
pop
adc
inc
loope
xor
pop
cltd
mov
xor
imul
int
jecxz
lea
dec
sbb
cmpsl
repnz
mov
cld
jo
int
sbb
mov
jl
insl
or
push
fs
lea
xchg
jecxz
or
and
jb
sbb
pusha
pop
lods
and
sbb
jmp
scas
in
test
test
mov
popf
out
movsl
mov
push
gs
icebp
out
scas
mov
mov
rcl
adc
movsl
sti
aas
movsl
xchg
add
add
inc
je
push
dec
xchg
mov
rcr
inc
orl
cmp
xlat
mov
xchg
in
pop
fwait
push
mov
sbb
cwtl
sub
clc
lret
pusha
jp
out
dec
mov
push
inc
ret
cli
popf
ja
loop
adc
push
push
mov
dec
addl
call
cwtl
test
lret
adc
cmp
jge
aaa
insl
push
mov
sub
mov
fwait
scas
mov
in
pop
lock
scas
inc
lds
lock
call
adc
loope
bound
pop
stos
add
jno
xchg
and
lea
dec
jmp
std
lahf
cmp
jo
push
bound
add
dec
sbb
push
out
push
popf
pop
insb
jg
ret
call
cmp
sub
sub
mov
imul
hlt
shll
addl
arpl
loopne
inc
jae
popa
les
aad
cmc
or
pop
mov
lods
dec
sbb
mov
bound
pop
xchg
fmulp
or
xchg
mov
push
repz
pop
push
lcall
arpl
test
push
xor
sarl
xor
insb
insb
out
decb
sub
cwtl
dec
push
test
jp
les
cmp
fwait
and
subb
sbb
cwtl
rol
and
cvtps2pi
push
outsl
push
add
mov
mov
mov
mov
mov
es
xchg
pop
xchg
data16
jl
mov
pop
cmp
jg
jle
push
scas
dec
push
push
push
sbb
insl
xor
inc
push
pop
in
inc
and
mov
nop
jno
mov
jp
and
add
mov
jp
mov
dec
add
mov
ja
call
mov
in
cli
mov
xor
sbb
test
ja
mov
xor
scas
mov
fsts
push
lahf
jl
int
sbb
jno
inc
sub
add
jecxz
mov
mov
hlt
push
bound
inc
sub
jb
call
inc
jg
lds
mov
add
decb
xchg
mull
mov
push
push
rcr
in
scas
dec
mulb
nop
lahf
jecxz
stc
lahf
lret
cmp
leave
jnp
nop
clc
clc
pop
outsl
fwait
pop
test
xchg
das
push
popa
mov
or
sbb
mov
push
pop
sbb
les
push
dec
cmc
rorb
test
adc
icebp
cmp
push
push
pusha
iret
sahf
scas
cmp
mov
cwtl
pop
lods
stos
mov
jnp
sti
sbb
bnd
loope
pop
sbb
movsl
movsb
jge
aaa
sub
xor
mov
jo
push
xor
aad
and
mov
loopne
sahf
lds
add
dec
mov
loopne
pop
sbb
push
inc
pop
cmovg
xor
outsb
cmpsl
out
in
adc
sahf
fidivs
jb
xor
push
push
das
jmp
lods
pop
mov
inc
bound
jecxz
decl
jb
ficomps
int3
sbb
out
vaddps
pusha
and
out
insb
popf
test
lret
cmovns
push
insl
dec
cwtl
push
ret
imul
dec
popf
mov
or
test
mov
sub
imul
xchg
mov
or
and
dec
or
inc
std
popa
outsb
js
loope
incb
sbb
js
xor
push
lds
push
dec
mov
xor
jg
outsl
sub
fdivrs
inc
and
inc
adc
xchg
mov
cmp
add
repz
mov
cmc
jge
pusha
xor
enter
fmull
push
cmp
lock
movsb
out
jg
push
cmpsl
lret
sbb
pop
mov
xor
inc
mov
loope
idiv
dec
clc
xor
int
sti
gs
stos
push
mov
xchg
cld
andb
xchg
mov
pop
int
fmul
pop
xchg
add
add
adc
dec
jmp
jae
mov
mov
cmp
imul
or
adc
test
add
sahf
ds
repz
jge
mov
inc
cmp
insl
fnsave
es
push
dec
xor
inc
jl
cmpsl
xor
jns
lods
jp
push
out
inc
ss
mov
inc
mov
mov
ja
sahf
gs
mov
icebp
xchg
jo
out
fisttpll
mov
test
repz
xor
inc
pop
cmpb
mov
mov
jno
or
test
jbe
pop
mov
or
cmp
cmc
xchg
lcall
push
into
adc
jmp
std
loopne
in
addb
xchg
cli
push
scas
in
in
icebp
icebp
sti
push
xor
andb
or
mov
test
sbb
lds
adc
dec
sbb
aas
fldcw
mov
cmp
jge
cmp
jns
lret
fiaddl
ret
pop
inc
aas
sbb
sub
sub
inc
cld
dec
notl
insl
pmaxub
or
mov
mov
jno
and
jno
pop
cltd
adc
pop
sub
ret
outsl
and
out
pop
movsb
jae
dec
mov
fwait
and
mov
ret
dec
push
jns
cli
xchg
pusha
push
jg
mov
mov
sar
xchg
cmc
cmp
jne
jb
mov
mov
leave
push
mov
adc
xchg
shrb
lahf
dec
pop
cmp
test
loopne
push
js
xor
pushf
xor
inc
pushw
push
jl
xor
cmp
xor
dec
mov
inc
clc
jno
aam
nop
fists
pop
sub
mov
sbb
fwait
push
shlb
stos
imul
fadd
push
enter
loopne
icebp
fadds
or
bound
adc
or
ret
sbb
inc
adc
std
loope
movsb
lods
dec
in
int3
xchg
cmp
mov
call
shlb
or
add
add
pop
cmc
and
jg
repz
insb
or
sub
mov
std
push
inc
and
pop
int
cmp
fdivrl
jbe
movsb
jge
jb
mov
inc
scas
sti
mov
mov
mov
lcall
arpl
cmp
inc
stc
pop
inc
pop
pop
sub
loope
ljmp
push
addr16
pop
mov
jae
and
rcrl
ja
cmp
movsl
rcrl
jbe
movsl
pop
call
into
dec
ja
dec
mov
push
xor
ds
xchg
scas
pop
in
in
jne
js
orb
in
cmp
lret
loopne
setl
push
adc
jg
push
cmc
jae
jle
nop
ret
xor
cmp
add
sarb
and
pusha
fdiv
pop
mov
sbb
dec
popf
repnz
push
mov
addb
adc
je
fstpt
mov
push
inc
fnstcw
pop
in
adc
into
hlt
gs
es
mov
gs
aam
adc
inc
xchg
jecxz
outsl
into
inc
jae
or
xor
jg
negl
add
push
rcl
sub
adc
movsb
dec
mov
fimull
and
xor
mov
mov
cmp
xchg
adc
jns
in
mov
and
aas
in
add
stos
loope
shl
jle
jns
loopne
dec
js
or
mov
and
jge
cmpsl
xchg
in
sub
jl
rolb
out
in
mov
mov
in
loopne
inc
xchg
jnp
arpl
icebp
mov
jns
and
sub
and
xchg
cwtl
lea
sti
inc
stos
ret
inc
jle
bound
sub
inc
push
push
xor
addr16
test
cld
or
shlb
xchg
add
aas
or
fsub
cmc
push
add
pushf
mov
jno
mov
cmp
fsubrs
fidivs
xlat
cmp
mov
ja
jge,pn
sub
jmp
cmp
mov
outsb
imul
lods
sub
sbb
fimull
test
add
push
mov
add
hlt
mov
cli
sub
xor
cli
pop
sbb
clc
jb
fisttpl
ret
sbb
das
scas
scas
std
cmp
lahf
jmp
rol
lods
mov
adc
push
fisubrs
dec
cli
push
xor
roll
xor
fs
cld
add
jae
xchg
adc
sub
loopne
xchg
add
dec
push
jecxz
addr16
fistl
lret
outsl
mov
or
fwait
imul
jns
dec
adc
cmp
loopne
testl
mov
repz
cmp
or
pop
jecxz
jl
sub
pop
int
adc
shrb
or
xor
inc
inc
scas
push
jae
les
stos
test
xor
es
jno
add
inc
lret
jge
repz
xor
xlat
sub
inc
int
jecxz
push
pop
rcrb
dec
cmp
jne
fwait
inc
and
sti
jmp
out
adc
ja
fmul
loop
ljmp
call
inc
dec
adc
xchg
xor
inc
and
mov
in
js
mov
lret
sub
fs
cli
jg
or
adc
or
stos
cwtl
mov
xchg
cli
xor
ror
lods
jge
push
pop
and
add
mov
mov
rcrl
mov
je
daa
clc
mov
aaa
loope
cltd
lahf
loopne
ja
and
adc
jecxz
movsb
data16
cmpsl
out
cltd
xor
mov
mov
mov
pop
popa
push
mov
mov
adc
jae
inc
je
xchg
daa
cmp
or
js
add
or
aaa
hlt
sbb
push
in
sub
cs
fucomip
roll
jp
subl
in
jne
addr16
int
jno
xchg
adc
movzbl
rolb
sti
push
pop
or
shll
cld
jle
and
push
inc
out
jbe
test
mov
int3
fildl
stos
push
or
mov
mov
xchg
add
jmp
mov
repz
ja
roll
adc
test
out
inc
ret
data16
pop
das
filds
pop
or
xchg
sub
leave
data16
pop
icebp
out
inc
and
out
in
sub
add
jge
out
dec
loope
cmpsb
xchg
fsubr
outsb
data16
sub
jb
push
data16
loop
hlt
sbb
xchg
pop
xor
push
pushf
icebp
sarl
aas
inc
mov
pop
adc
jno
popf
mov
fdiv
nop
or
aas
mov
pop
and
int
nop
mov
sahf
fisubrs
dec
sbb
repnz
sti
mov
adc
and
shll
dec
int3
ds
or
sbb
sbb
pop
loop
faddl
inc
sahf
pop
ljmp
sub
mov
adc
jbe
repnz
and
xlat
dec
subl
outsb
fidivrs
cwtl
in
hlt
cli
sub
fdivp
iret
int
jge
jnp
movw
pop
jns
xor
test
sbb
mov
mov
inc
mov
dec
cwtl
les
pop
sti
or
push
mov
mov
test
sub
xchg
mov
and
xlat
outsb
stc
int3
push
into
mov
cmp
push
loop
test
push
add
out
lcall
xor
cmp
outsb
andb
xchg
xor
shl
dec
mov
mov
ds
adc
jecxz
scas
inc
pop
sbbb
mov
inc
gs
ja
lods
int3
icebp
insb
loop
imul
jg
push
add
aas
or
out
jl
shrb
fistpl
dec
int3
cmp
fsubl
aam
jno
icebp
push
add
out
push
fwait
daa
test
xor
pop
rolb
push
push
xchg
lods
or
jp
inc
jb
and
and
xchg
notb
jno
loop
dec
sbb
sub
xchg
and
cs
pop
fwait
lock
insl
daa
or
xchg
cmc
cmp
add
in
test
adc
jle
lret
adc
jno
mov
jp
aad
aas
sti
iret
test
jns
test
ljmp
push
pop
jo
mov
adc
inc
fnstcw
sbb
mov
push
cmp
pop
repnz
data16
loope
mov
pop
sbb
or
inc
daa
sub
ficomps
movsb
mov
imul
mov
mov
adc
fwait
xchg
daa
fnstsw
shll
push
out
inc
pushf
mov
sbbl
pusha
lods
xchg
std
inc
sub
scas
test
addr16
xor
push
sbb
jle
aas
add
dec
mov
mov
cli
aas
sub
dec
inc
ja
les
lcall
adc
std
mov
xchg
sbb
lahf
ss
inc
cmp
pop
add
imul
jmp
in
pop
notl
jno
mov
cwtl
shll
loop
ja
mov
push
push
pop
cmp
adc
sahf
xlat
fidivs
mov
dec
xchg
adcb
adc
jl
shlb
shrb
daa
mov
sub
push
mov
xor
inc
or
mov
int
mov
fwait
mov
pushf
dec
add
jp
mov
lahf
add
push
cmp
mov
inc
push
sub
xchg
dec
das
cmp
rdtsc
cmpsl
imul
test
fs
xchg
mov
xor
sub
popa
addr16
pop
popf
in
sbb
aam
ljmp
mov
test
cs
xchg
cmp
mov
stos
dec
ss
mov
push
test
test
les
lods
pop
add
lret
js
push
mov
sub
outsb
jns
mov
popf
cmp
mov
call
mov
push
or
mov
mov
hlt
xor
or
in
cs
mov
sbb
sub
xchg
rcr
popf
aas
lcall
jb
mov
mov
fimull
push
outsl
arpl
test
mov
add
mov
adc
jo
xchg
jmp
sbb
aaa
or
in
out
push
jmp
lcall
test
add
pushf
add
push
xlat
push
sbbb
push
in
inc
sub
loopne
mov
mov
mov
mull
iret
fcmovb
ljmp
cmp
fstpl
pushf
idiv
cli
mov
xchg
enter
aam
cltd
mov
into
pop
xabort
lods
std
mov
inc
jb
ljmp
pop
shlb
push
inc
cmp
fdivrs
stos
test
scas
hlt
cmp
out
or
arpl
rcrb
aas
mov
mov
inc
int
int3
loopew
pusha
push
test
mov
mov
xor
push
loopne
nop
pop
dec
mov
in
pushf
lock
jno
call
cli
jno
sub
jae
jns
push
pop
mov
adc
loop
mov
sub
push
cmpb
in
add
push
mov
mov
or
mov
loopne
mov
mov
push
mov
icebp
rcll
push
fiadds
jecxz
jns
or
sub
and
repz
es
and
dec
les
outsb
adc
xchg
lea
pop
insl
pusha
or
into
and
cmpsb
add
adc
xchg
sbb
cwtl
or
out
mov
mov
inc
pop
xor
push
aad
or
stos
push
jae
bound
fisttpll
or
mov
sbb
sub
mov
mov
or
jg
pop
dec
fistpll
mov
and
dec
dec
lcall
notb
jns
add
lods
into
sarl
sbb
mov
and
xor
nop
cs
cwtl
popf
dec
and
dec
scas
mov
mov
xor
out
arpl
pop
mov
xchg
xor
mov
test
outsl
and
cmp
jb
insb
movsl
loop
pcmpgtb
xabort
scas
popf
push
push
or
push
and
lcall
gs
lea
call
aaa
cmp
in
add
punpckhbw
xchg
pop
cmp
add
cmpb
pusha
sub
cs
jb
xchg
add
xchg
popf
testb
push
dec
cwtl
dec
movsl
out
les
test
sbb
fimull
cmpsb
or
inc
mov
imul
inc
inc
idiv
mov
push
xchg
mov
in
adc
mov
jnp
out
pop
imul
int
or
movsl
and
fsts
jno
fiadds
loope
int
push
sbb
sbb
js
popa
js
mov
sbb
dec
add
push
pop
scas
fcom
push
cmpb
jp
jle
inc
push
cmp
push
int3
cs
mov
push
and
scas
bound
rcr
insl
in
push
and
and
loopne
adc
loop
lar
inc
popa
sbb
ds
sbbb
cmp
das
outsl
mov
mov
push
ret
sub
in
jnp
pop
mov
iret
inc
push
xor
add
dec
xlat
bound
mov
mov
push
insl
sbb
add
mov
jge
pop
cld
mov
sub
xchg
fildll
xlat
mov
jbe
mov
stos
inc
or
cmp
lods
jg
pop
roll
cli
ljmp
lret
pop
loope
stos
nop
cmp
jl
or
push
idivl
sbb
daa
and
dec
scas
push
stos
cld
lahf
mov
out
adc
pop
jg
ret
arpl
xor
mov
outsl
xchg
dec
pop
int
sti
add
sbb
sete
xor
punpckldq
jne
in
adc
loopne
xchg
mov
dec
mov
pop
jmp
shl
and
adc
test
jl
cmpsb
test
loope
jp
fsub
sub
jbe
sub
push
loop
cltd
pushf
fstpt
shrl
pop
into
sbb
scas
mov
roll
add
out
adc
lock
out
pop
pop
fucom
cmp
in
xchg
xchg
stos
mov
sub
push
pop
cmpsl
xor
leave
sbb
insl
hlt
jmp
in
scas
dec
popf
xchg
or
and
jecxz
inc
out
mov
imul
jecxz
push
jle
hlt
lods
mov
mov
adc
and
loop
sahf
push
xchg
stos
sub
pusha
lret
mov
inc
fimull
jle
fldlg2
sbb
pop
sub
nop
add
in
jmp
enter
pop
push
jl
inc
cmp
xor
popa
mov
sub
xlat
xor
jg
push
or
xchg
and
out
adc
mov
orb
mov
sub
fistpl
jns
mov
cmp
push
popf
inc
cli
adc
sbb
stos
movsb
jbe
cmp
push
daa
mov
xchg
addr16
inc
scas
ss
aam
inc
adc
mov
test
push
dec
jne
fidivrs
mov
or
mov
repnz
sbb
or
scas
lahf
loop
inc
mov
adc
xchg
inc
or
mov
push
mov
mov
sbb
rcrb
jns
div
add
aam
sub
movsb
std
xchg
add
and
cmp
xchg
or
dec
sbb
sbb
and
ficompl
sahf
lock
adc
inc
lods
jle,pn
dec
cmp
push
pop
mov
lret
and
cmpsl
notb
push
into
sbb
js
sti
dec
and
xchg
imul
mov
pusha
data16
pushf
outsb
pop
in
adc
or
push
rcrb
outsb
leave
jp
xlat
iret
mov
add
es
mov
movl
enter
outsb
jne
add
jnp
pusha
test
pop
in
sbb
out
movsb
popa
and
cmpsl
into
frstor
mov
mov
ret
xchg
cmp
xor
fidivs
mov
push
mov
push
xchg
lret
ret
jae
mov
ds
xchg
ja
cmp
ficoms
mov
pop
ljmp
push
mov
call
stos
rcrl
test
inc
hlt
mov
in
inc
push
sbb
ja
cmp
and
sub
sbb
adc
out
xchg
pop
jp
jecxz
fistps
push
lock
outsl
xchg
repz
pop
fsubs
xchg
xchg
insl
pop
mov
les
inc
push
xchg
or
dec
hlt
inc
pop
fs
iret
cmpsl
adc
in
xchg
lock
lods
sbb
loopne
mov
dec
pushl
and
adc
fcmovne
cmp
or
or
sbbl
testl
sub
jo
outsb
iret
push
jae
push
sub
je
leave
dec
lcall
andb
dec
imul
sar
mov
cmp
and
fadds
aas
jno
xor
aas
test
aad
cwtl
cmp
add
add
adc
insb
jnp
cld
lods
jle
shrl
cltd
scas
ror
jmp
out
jp
or
in
je
dec
scas
inc
cs
das
add
ss
pushf
cmpxchg
sbb
xchg
dec
scas
movsl
xchg
push
xor
cmp
mov
xchg
insl
adc
out
sbb
das
mov
xchg
sbb
adc
cmp
xlat
repnz
and
or
aaa
sarb
ljmp
das
das
xor
ja
adc
rcrl
les
lds
iret
push
sbb
xchg
pop
mov
or
jge
jo
cmpsb
or
push
cmp
pusha
lods
repz
sbb
add
ja
pushf
ret
jmp
aad
mov
stos
cld
pop
jmp
xchg
dec
insl
cli
scas
jg
mov
in
push
mov
inc
mov
push
xchg
std
push
js
shll
jmp
jmp
add
add
dec
or
and
cs
xchg
addb
xchg
adc
test
add
loopne
cli
adcl
sub
arpl
and
jp
mov
and
mov
mov
add
in
sbb
bound
imul
adc
jle
loope
mov
ja
add
fwait
outsl
ds
mov
add
sub
pop
mov
shl
loopne
push
or
pop
inc
aad
imul
leave
jb
aaa
scas
jae
cmp
stc
test
cmp
push
pop
mov
ja
mov
fcoml
mov
out
pop
aam
out
leave
fdiv
jb
int
cli
fdivrs
jno
cmp
xor
inc
xor
sbbb
jae
push
sbbl
mov
cmp
pop
sti
xorl
leave
or
push
push
fisttpl
int3
in
pop
dec
pusha
pushf
inc
ljmp
fisubrl
sub
push
sbb
loopne
jle
add
dec
adcl
sbb
sbb
or
cmpsb
js
mov
add
ret
inc
call
in
xor
shrb
mov
std
jmp
je
pop
test
in
hlt
add
cmpsb
outsb
daa
sub
jns
test
xchg
shr
fnsave
inc
fisttpll
cmp
out
xchg
mov
pop
aas
in
aas
fcoml
adc
nop
xor
popf
pop
outsb
mov
lret
cld
sbb
ja
and
arpl
adc
mov
push
add
movsl
jno
push
pushf
and
sub
jbe
movsb
cwtl
test
xcrypt-ofb
cmpsl
sub
push
shll
test
repz
jg
cltd
inc
repz
daa
mov
jo
insb
push
ret
in
or
es
push
sbb
repnz
push
cld
cmp
push
fs
notl
push
sbb
adc
das
aam
shll
or
aad
jae
jns
test
xor
inc
scas
leave
jmp
adc
in
das
mov
push
adc
les
push
shl
mov
xchg
loop
loopne
push
sub
loopne
pop
inc
sbbl
lock
orb
jb
xor
sub
mov
pushf
add
dec
pop
std
adc
pop
out
add
inc
cmpsb
lods
jno
mov
push
push
jno
data16
xchg
xchg
cmpsl
in
inc
fcomps
lds
or
aad
push
pop
and
lock
mov
jge
fwait
test
or
push
or
cmp
addps
mov
mov
movsb
mov
js
faddl
cltd
push
fildll
lret
mov
addr16
xor
jmp
ret
fdivs
and
outsb
das
push
mov
push
mov
push
inc
icebp
in
push
fcomps
adc
notb
mov
mov
cmpb
push
and
in
cmp
rclb
mov
mulb
fimuls
add
jmp
or
push
inc
pop
icebp
test
in
lods
repnz
sub
imul
hlt
mov
imul
ficoms
jmp
sbb
xor
test
dec
fst
bound
icebp
insl
inc
push
f2xm1
jae
or
mov
push
xor
push
dec
stc
inc
and
pop
mov
pop
cmc
push
lods
pop
jno
sbb
aaa
repnz
inc
stc
mov
inc
jp
dec
mov
jbe
shll
mov
fimull
mov
xchg
mov
out
sbb
push
lock
lahf
inc
xchg
cmpsb
jge
pop
mov
add
int
mov
leave
inc
test
mov
fs
jnp
je
mov
loop
fs
mov
aad
icebp
loopne
and
mov
xchg
imulb
ficompl
mov
pop
mov
mov
loope
dec
cs
push
dec
cmp
xchg
sahf
or
int3
roll
ss
cmpsl
test
nop
jle
sub
pop
cmp
add
fwait
xor
out
sbb
jbe
dec
movsb
jno
shll
push
scas
or
outsl
mov
mov
adc
popf
mov
pop
xchg
mov
cmp
imul
mov
sub
cmp
repnz
xlat
push
lods
rolb
shll
into
mul
mov
in
imul
ja
push
xor
xchg
leave
xchg
sub
ret
push
xchg
sbb
lahf
pop
push
loope
fstps
jmp
packsswb
inc
or
fcmove
jno
inc
ds
loop
shlb
lahf
loopne
stos
rcrb
jg
aas
out
rcrb
pop
jno
jo
out
sbb
mov
mov
jge
pop
mov
or
sub
cmp
xchg
in
leave
xlat
insb
pop
outsb
sbb
rorl
adc
jmp
cwtl
jne
jmp
push
ffree
mov
push
iret
or
sub
push
xchg
mov
jle
bound
fmull
daa
cwtl
mov
imul
and
push
and
mov
add
mov
cld
dec
pop
adc
inc
adc
inc
inc
add
ds
and
fwait
push
scas
enter
jl
or
jno
adcl
dec
jae
test
inc
xchg
cli
sbb
divl
mov
je
imul
lret
nop
scas
mov
scas
inc
rorl
or
popa
test
pushf
jmp
in
pop
popf
insl
xchg
and
push
mov
clc
sub
mov
dec
xlat
jecxz
inc
push
jl
push
hlt
jb
mov
imul
push
push
ret
loop
data16
cmp
lahf
fdivr
inc
shll
loope
divl
fnstcw
into
int
inc
sub
loop
pop
or
cmp
lods
js
mov
xchg
icebp
rep
adc
cmpl
icebp
repz
sub
mov
mov
movsl
fsubl
mov
imul
pop
ret
jbe
out
fs
arpl
mov
ret
icebp
lods
and
xchg
inc
ret
or
mov
or
clc
dec
cmp
outsl
xchg
aas
xor
sbb
mov
lret
fidivl
cli
push
test
les
adc
pushf
sbb
jb
outsb
cmc
inc
mov
sub
adc
push
push
pop
add
jl
dec
xor
pusha
xchg
dec
pop
and
cmpsb
loop
imul
mov
push
cmpsl
mov
lods
bound
mov
or
sti
scas
and
adc
fldcw
int3
sbb
popl
outsb
lret
imul
cmp
cmp
adc
mov
fistpll
mov
xchg
push
jbe,pn
test
cmp
mov
mov
fldenv
push
movsl
ds
inc
rorl
jns
mov
jns
dec
cmp
sti
es
adc
test
or
jb
sbb
icebp
lcall
and
arpl
push
push
movsb
sub
or
jl
popf
scas
pop
bound
cmc
pop
stos
clc
adc
mov
jecxz
out
fbstp
or
loope
je
and
shll
lcall
and
loope
addr16
or
pop
aad
imul
and
add
rorl
pusha
jb
ja
rcrb
mov
mov
pushf
rorl
cs
into
mov
inc
nop
test
ret
cmp
jl
mov
test
mov
fstps
pop
pop
pop
dec
cmp
aas
mov
mov
xchg
fadds
and
imul
cmp
adc
dec
sub
or
mov
out
lret
dec
push
pop
lods
fisubl
mov
mov
jmp
sub
popf
rolb
push
in
dec
popf
insl
es
adc
xor
int
pop
loope
sahf
sbb
insb
jno
adc
cmpsw
out
ficoms
les
push
mov
in
jp
movsl
or
adc
inc
mov
insl
scas
std
leave
mov
cmp
cmp
insl
sbb
aam
aas
mov
int
cwtl
pusha
daa
scas
dec
push
adc
sarb
in
outsl
stc
pop
mov
jns
inc
lahf
mov
popf
sub
add
sarl
out
push
roll
mov
mov
push
and
mov
dec
imul
lret
ss
mov
jo
xor
call
inc
inc
and
shll
sbb
aas
mov
shll
push
jp
mov
fidivl
pop
js
inc
nop
inc
rcll
ret
jg
mov
jge
fidivrs
ret
push
pop
push
mov
shr
xchg
dec
cli
pushl
mov
bound
and
push
das
nop
mov
mov
cwtl
lds
add
mov
outsb
and
jo
outsl
pusha
xchg
jnp
decl
arpl
sti
cmc
movsl
xor
mov
ret
bound
ja
jbe
nop
fadds
push
jbe
mov
dec
push
es
clc
sbb
add
push
sbb
or
pop
adc
decb
hlt
fs
jae
and
into
and
nop
or
int3
repz
cmc
add
popf
lods
gs
outsl
or
andb
xor
push
out
das
ret
movb
push
pop
mov
pop
pop
mov
jae
push
cmp
mov
lret
lahf
mov
push
cmpsb
pop
xlat
lods
fidivs
lods
xor
out
ret
adc
sub
push
mov
mov
stos
bound
mov
jg
je
into
sub
lret
mov
jmp
sbb
sub
fnstsw
clc
pop
cwtl
cmp
popa
jnp
sbb
lds
mov
lahf
mov
cmpsb
pop
mov
add
cmp
lahf
xchg
roll
mov
mov
adc
lcall
testb
int
pop
call
adc
jns
ret
cs
push
sub
out
fadds
mov
jmp
and
jb
movsl
sbb
pop
xchg
cmpsl
sahf
mov
in
ret
mov
int3
jl
pop
sub
inc
push
cltd
dec
sti
cli
arpl
push
pop
iret
pop
and
nop
sub
rcrl
add
add
ljmp
out
popf
aam
dec
sub
shrb
add
pop
jmp
testl
sub
jecxz
sub
mov
dec
xchg
mov
fsts
push
dec
insb
ss
aam
sbb
out
mov
jo
push
xchg
cld
loopne
inc
sub
iret
push
orb
sbb
dec
lret
push
xor
add
rclb
mov
xlat
cmc
jl
sbb
pop
inc
inc
push
loopne
cmp
es
mov
mov
out
sbb
xchg
inc
ljmp
clc
push
add
mov
movsl
mov
popf
and
cli
in
mov
xchg
lcall
in
xchg
mov
adc
lods
inc
and
sub
ret
mov
loop
mov
jbe
adc
mov
popa
fldenv
sti
in
push
adc
jno
shlb
mov
sbb
mov
xchg
push
test
sub
fldt
iret
test
and
mov
cmp
mov
cli
adc
data16
jae
cld
adc
dec
mov
lcall
in
pop
pop
adcl
ret
cld
je
or
lds
add
fldcw
jle
cmpsb
adcb
lods
les
inc
stc
loop
dec
cmpsl
fbld
jl
jecxz
lcall
add
in
pop
orl
bound
lods
ret
pop
ja
das
sub
sbbl
rolb
stc
push
jns
fidivl
inc
dec
and
ss
jp
adc
inc
cmp
jbe
sbb
push
inc
cmp
frndint
hlt
fdiv
or
dec
call
leave
jbe
sub
adc
pushf
fisubs
fists
xchg
jns
jmp
pusha
aam
jbe
lods
pop
pop
test
js
xchg
fwait
xor
dec
inc
xchg
mov
mov
mov
xchg
jbe
repz
jl
insl
dec
lods
fnstenv
jns
insb
std
push
xchg
jl
iret
xchg
or
push
push
frstor
sbb
in
inc
xor
mov
pushf
sbb
aas
es
inc
orl
mov
adc
test
sbb
pop
sub
sub
mov
fwait
stos
push
aam
enter
and
and
loope
in
pop
addr16
iret
das
and
sbb
push
in
sub
push
sub
sub
jmp
xor
sbb
call
xchg
pusha
cmp
sub
adc
add
dec
jo
jge
mov
push
sbbb
push
arpl
cmp
jp
insb
mov
lods
jge
mov
mov
rcrb
stc
push
lock
mov
fdivrl
adc
mov
push
xchg
push
incl
nop
add
or
xor
cmpsb
cmp
xchg
out
add
inc
adc
fsubrl
in
loop
loope
xor
repz
ljmp
dec
bound
mov
icebp
lret
and
ror
cltd
cmp
add
in
xchg
jle
xchg
mov
inc
mov
adc
cmpsl
dec
or
mov
fcomps
cld
dec
push
push
loope
test
stos
adc
fists
mov
and
ficompl
ja
jbe
mov
jno
loope
adc
fsts
into
jbe
mov
jo
push
stos
push
repnz
sub
and
sti
jl
lods
or
push
sbb
test
jecxz
js
js
mov
mov
out
ljmp
call
ret
daa
xor
jmp
adc
inc
int
xorl
adc
repz
mov
adc
in
jp
shll
into
dec
les
pop
adc
data16
dec
sub
push
or
adc
dec
cmc
push
mov
xlat
push
test
adc
fwait
sti
ret
fcoml
js
or
inc
iret
add
call
test
insl
inc
jge
aad
out
lods
cwtl
add
dec
dec
in
sbb
fidivrs
add
push
and
fucomp
popa
inc
add
dec
or
push
into
adc
sbb
lret
rcll
jb
or
fst
rcll
iret
dec
dec
inc
add
test
in
lods
add
adc
out
mov
cmc
int
sbb
xor
call
xchg
dec
mov
add
pop
or
mov
cmp
or
mov
iret
xor
std
aad
loop
sub
sbb
lret
xor
cmp
mov
mov
inc
pop
icebp
das
lea
es
rclb
xchg
mov
or
cmp
movsb
or
ret
sbb
cltd
push
ja
push
xor
mov
mov
sbb
movsl
jmp
loopne
xlat
mov
jb
mov
sar
insl
cwtl
out
ffreep
mov
data16
inc
and
xchg
icebp
js
mov
xchg
push
mov
out
mov
cld
ds
jmp
mov
xchg
dec
in
ds
push
cmp
daa
lock
push
leave
ficoml
fs
xchg
pop
mov
push
xchg
inc
mov
in
stc
loop
imul
pop
je
inc
orl
adc
cmp
cmp
mov
call
gs
aad
repnz
inc
and
pop
imul
mov
mov
pop
fistpll
lods
cmp
cli
sub
lods
gs
aam
gs
xor
cmp
mov
dec
add
ficoml
cmc
sti
notl
xchg
aas
push
pop
or
xchg
enter
stos
jle
adc
jmp
lods
pop
pusha
lds
aad
test
mov
pop
sti
shr
fisttps
mov
xor
or
mov
xchg
and
mov
jl
ficoms
pop
mov
in
movb
push
popa
mov
das
add
xchg
sbb
fdivr
enter
sbb
and
cmp
pop
mov
daa
xchg
fadds
mov
or
cmp
adc
outsb
mov
xchg
pop
sub
shl
cmp
cmp
stc
jmp
jg
ljmp
push
inc
setge
jmp
inc
lcall
popa
inc
add
pop
push
mov
aad
cwtl
mov
popf
and
add
loop
sub
add
sti
cmp
mov
mov
cwtl
and
nop
xor
popf
scas
lret
pop
or
mov
mov
fstpt
add
sub
ljmp
lods
insb
fsubr
dec
xor
aam
hlt
jle
aad
ds
push
es
cwtl
pop
fnstcw
push
mov
int3
test
mov
mov
pop
xchg
sub
cmp
cmp
popa
mov
jecxz
js
cmpsb
lret
repz
mov
inc
cwtl
xchg
push
pop
add
jnp,pn
cli
in
test
popa
dec
sub
sbb
dec
outsl
mov
ds
ja
mov
outsl
jl
pop
sbb
je
repnz
dec
cmp
add
mov
cld
mov
sbb
mov
addb
ljmp
adc
and
inc
into
mov
mov
sbb
adc
js
jmp
add
dec
in
push
xor
mov
mov
rclb
dec
cs
mov
in
out
das
icebp
stos
mov
into
hlt
pop
xor
pop
aam
scas
mov
icebp
ja
enter
mov
cld
cltd
push
jo
and
push
hlt
aas
dec
mov
inc
rol
ljmp
sub
shlb
addb
es
or
cmpsl
jg
out
mov
stos
loope
insl
mov
mov
icebp
test
cmp
xchg
stc
pop
xor
or
data16
sub
add
aad
adc
mov
repz
pop
rcr
daa
cltd
pusha
mov
mov
add
mov
scas
sbb
push
aam
test
in
adc
pop
push
sub
cmp
and
int3
fidivs
cs
daa
loop
sahf
or
add
lcall
dec
bound
divb
sbb
xor
into
mov
dec
xchg
push
jbe
and
daa
fdivrl
cmpsb
or
sub
sbb
sub
out
inc
mov
das
popa
sub
xor
mov
in
add
fstl
fsubrp
ds
push
pop
cwtl
cmpl
in
jne
and
cwtl
jae
fs
lods
sbb
orb
cmpsl
inc
adc
in
push
push
fildl
inc
sarl
lea
ret
loope
jmp
mov
pop
sbb
xor
mov
mov
or
mov
pop
es
gs
and
fwait
movsl
sbb
add
adc
jl
or
xor
loop
lds
iret
mov
lcall
push
test
lret
subl
aam
sbb
aaa
sbb
sub
arpl
lods
ss
pushf
mov
add
mov
lahf
imul
mov
mov
cmp
ret
mov
mov
roll
into
out
sarb
leave
adcb
pop
pop
sti
stos
jb
dec
lods
fs
shl
popl
xchg
push
dec
movsb
adc
xor
xorl
and
sbb
add
xchg
mov
sbb
sbb
mov
in
sbb
inc
int3
scas
jb
pop
add
loop
rcr
sti
setle
sub
iret
mov
jmp
neg
jp
xor
push
xlat
add
mov
or
xor
xchg
fiaddl
scas
subl
pop
jge
pop
inc
cmc
jae
outsl
out
pop
inc
movd
fcompl
jae
mov
popf
fwait
xor
or
cmpsl
aam
inc
or
mov
ror
aam
add
mov
cmp
outsb
mov
dec
or
leave
or
dec
call
aaa
sub
jp
outsb
int
test
mov
les
jg
inc
push
les
lds
xlat
mov
sub
int3
inc
and
mov
jmp
jae
sub
shlb
sbb
sahf
jbe
nop
push
mov
sbb
inc
insl
pop
jnp
add
rcll
andl
aad
xor
shrl
idivb
sub
dec
adc
mov
lds
dec
and
add
mov
and
movsb
jns
fxch
bound
add
lock
and
xor
push
mov
and
aas
sbb
xchg
outsb
jns
int
out
or
dec
add
jle
fwait
add
fstpt
pop
std
daa
pushf
inc
mov
ret
pusha
mov
push
push
jecxz
je
pop
leave
fcompl
jo
in
fbstp
push
pushf
push
loopne,pn
unpcklps
push
mov
mov
push
and
cmc
mov
mov
int
pop
dec
adc
les
sahf
idivb
idiv
test
fidivrl
js
pop
in
roll
dec
lret
arpl
cld
daa
dec
pop
push
inc
mov
int
jo
arpl
mov
icebp
jg
test
add
cmp
loopne
mov
fsubrl
xchg
adc
sub
inc
jo
stos
pop
jne
adc
arpl
repz
xchg
imul
sub
ljmp
inc
movsb
test
lea
out
mov
hlt
mov
pop
popf
cmp
imul
movsl
insb
and
dec
mov
jns
fbld
jno
pop
orb
mov
popf
inc
sbb
xor
pop
aas
mov
push
lods
push
cmpsb
fmuls
pop
pop
cmc
out
sbb
mov
repnz
pop
pop
in
cmp
inc
cmc
pushf
leave
imul
mov
pop
jae
push
scas
adc
hlt
jb
or
and
jno
xchg
mulb
aas
pushf
insl
sbb
or
mov
out
or
adc
add
pop
mov
test
or
pop
xchg
and
hlt
daa
sub
psubsb
data16
in
inc
lret
lret
sbb
xchg
arpl
jne
jb
scas
pop
inc
inc
mov
repnz
or
das
rolb
cmp
lret
mov
gs
sbb
mov
cmp
cmp
sub
mov
mov
sub
mov
jp
push
pop
mov
jg
scas
sbb
jns
mov
lea
enter
stc
pop
stos
lret
lret
mov
aaa
bound
dec
scas
mov
shrl
jl
xchg
push
outsb
cmp
mov
pop
cmpsl
push
or
pushf
pop
jle
ret
mov
push
popa
pop
jnp
pop
je
jge
minps
out
repnz
stos
mov
into
xlat
mov
jns
push
cmpsl
jmp
in
lret
mov
xchg
inc
mov
negl
movsl
in
sbb
ret
xor
pop
push
cs
xchg
pop
sahf
ss
mov
dec
xchg
push
cltd
mov
mov
in
outsb
std
or
push
or
mov
cwtl
ret
jmp
inc
fldt
aaa
mov
cmp
fcomps
sub
sub
out
sub
and
or
adc
pop
cmpb
fstl
enter
dec
dec
jl
mov
sti
repnz
mov
sub
cmp
shl
pop
cmpsb
pushf
pop
mov
imul
lods
idiv
mov
addl
mov
adc
les
pop
lods
cmp
xor
dec
and
adc
aad
sbb
inc
gs
add
scas
and
add
shl
dec
adc
pop
mov
inc
pop
push
incl
mov
inc
add
mov
xchg
nopl
pop
fwait
popf
dec
sbb
icebp
out
ret
enter
cmpsl
orb
lea
sbb
aam
out
push
rcrl
sahf
loopne
cmovbe
push
sbbb
rorl
add
aas
dec
ret
jo
inc
enter
loope
lret
sbb
inc
xchg
pop
stos
out
out
lods
shrl
ficomps
pushf
dec
stc
mov
jnp
test
push
rcl
pusha
gs
movsb
and
dec
out
or
mov
stos
outsl
repz
fldt
fidivrs
and
iret
pop
arpl
push
test
inc
insb
xor
jp
xor
stos
lods
in
outsb
movsb
mov
jno
fistl
subb
push
cs
sbbl
dec
xor
xchg
jecxz
mov
xchg
mov
pop
push
dec
pop
pushf
and
mov
sahf
mov
out
insb
hlt
mov
mov
emms
aas
xchg
mov
jno
mov
cmpsl
stos
arpl
push
aad
sub
cld
and
pminub
insl
and
bound
push
dec
sbb
pop
lcall
sbb
addb
xchg
cli
arpl
mov
and
fcom
cmp
popf
arpl
dec
enter
imul
push
fisttps
js
xor
insb
repz
loopne
test
mov
push
addb
rcrb
fsubrl
push
push
ljmp
dec
fimuls
xchg
xchg
lods
xlat
mov
clc
iret
sub
mov
and
mov
dec
arpl
sub
dec
adc
icebp
lcall
pop
pop
out
sahf
or
in
push
mov
adc
decb
clc
adc
sbb
inc
out
stos
inc
outsb
out
jg
cmp
fldenv
inc
sbb
pop
jmp
or
and
pop
push
bound
push
sbb
ja
pop
sbb
imul
inc
jb
pop
push
mov
enter
xchg
xor
sbb
daa
les
fsubr
and
arpl
jb
sbb
insb
psrlw
dec
mov
inc
js
mov
sub
mov
mov
cltd
incl
adc
sbb
sbb
xor
jo
hlt
imulb
xchg
in
and
cli
imul
testb
mov
cmpsl
or
cmp
add
pop
dec
xchg
cmpsb
add
leave
adc
mov
lcall
sbb
mov
pushw
movsb
out
xchg
inc
test
sbb
dec
fs
push
negb
in
and
insb
push
adc
inc
inc
orl
out
inc
int
js
bound
flds
rdpmc
sti
push
es
std
push
out
xchg
pushf
mov
test
in
sbb
push
mov
and
nop
jo
mov
mov
cmc
push
add
cld
and
inc
dec
xchg
cmp
mov
jge
mov
test
fstl
mov
mov
nop
ret
jmp
inc
jmp
fwait
mov
or
orl
inc
mov
nop
cmp
daa
popa
adc
in
pop
sarb
jns
mov
sub
sbb
add
push
push
out
dec
mov
xor
or
scas
push
mov
and
xchg
bound
jle
mov
imul
gs
jl
dec
loope
and
dec
roll
and
les
push
scas
pop
inc
mov
cmpsl
jl
loopne
push
mov
add
and
repnz
orb
jns
shll
shl
sbb
ljmp
mov
cwtl
enter
sub
rorb
mov
or
pop
faddl
arpl
push
xor
mov
fbld
imull
mov
mov
call
push
dec
lds
loopne
push
pop
pusha
cmpsb
les
cmpsl
popa
mov
mov
stc
lods
mov
xor
sub
push
inc
lods
out
fstpl
mov
fsubrl
sub
sbb
and
jo
mov
xchg
xor
loop
jnp
mov
jle
iret
xchg
inc
lcall
adcl
imul
add
cwtl
aam
mov
das
pop
icebp
rorl
ret
inc
fdiv
xor
add
mov
fcoms
in
out
in
add
insb
cmp
je
or
std
push
fdivp
out
icebp
lea
int3
shll
test
add
ret
fnsave
je
shrb
jnp
jbe
andb
cmp
lcall
aad
lret
int
and
lea
sbb
mov
je
test
push
adc
inc
xchg
fst
pop
mov
les
dec
mov
hlt
mov
xchg
mov
sub
xlat
mov
jl
adc
ds
adc
dec
push
cwtl
cltd
std
movsl
adc
je
orl
mov
mov
mov
out
mov
leave
pop
dec
mov
and
std
mov
adc
fisubl
jns
mov
outsb
dec
movsb
in
sti
mov
xchg
cltd
fstl
or
jge
pop
out
mov
addr16
push
test
cmpsb
outsl
mov
stc
std
pop
movsb
insl
jno
mov
ret
shll
lcall
xchg
std
adc
adc
push
pushf
call
lods
in
test
pop
out
lahf
pop
cmpsl
data16
aam
lcall
pop
xchg
push
jne
sub
fisubrs
je
and
sahf
mov
xorb
fimuls
decb
shl
push
insb
insl
xor
mov
sub
lods
push
test
or
stos
shrb
repnz
bound
mov
cmp
jecxz
fisubrl
mov
mov
pop
jmp
or
pushf
dec
insb
pop
jp
fiadds
in
adcl
cmp
lret
pop
jge
test
jle
push
stc
and
ljmp
call
lods
pop
mov
fwait
shll
adc
jp
lock
mov
jno
dec
cmp
pop
mov
sub
jle
sti
aaa
xchg
pop
mov
shrl
pop
negb
out
inc
push
xchg
or
ficoms
mov
subb
inc
gs
test
mov
call
sbb
mov
fs
mov
hlt
jmp
test
jecxz
xor
inc
mov
loopne
call
ljmp
les
push
and
stos
scas
loope
das
in
mov
fcoms
sub
cmp
imul
outsb
xchg
xor
test
push
or
xchg
jmp
pop
lcall
popf
pop
add
push
je
stos
mov
leave
nop
nop
sub
ss
inc
jo
add
push
xchg
jmp
ret
lret
jnp
int
mov
mov
jg
rcll
sub
int3
mov
or
cmpsb
xor
cmp
lret
or
add
dec
out
in
loope
shlb
add
add
aam
mov
dec
push
out
in
popf
lahf
inc
lahf
pop
insb
test
or
pop
scas
inc
ljmp
xchg
xor
mov
insb
mov
or
inc
jmp
mov
xor
mov
fnstsw
data16
adc
arpl
icebp
or
in
hlt
out
push
xlat
mov
pop
jne
fmuls
jle
xlat
mov
xchg
pop
rclb
jmp
repnz
cmpsb
jmp
in
xchg
xchg
add
xchg
std
adc
xchg
add
insl
xchg
jb
pop
add
xlat
fdivl
scas
test
xchg
fcoms
push
mov
cmp
pop
pop
or
mov
inc
mov
xor
adc
fldenv
cmc
add
push
popa
xchg
mov
fiaddl
jbe
lds
inc
xchg
push
pushf
xlat
into
cmp
jle
jle
cmp
cmpl
jo
faddl
mov
push
add
daa
roll
in
sub
push
cmc
stc
jp
das
push
imul
xchg
punpcklwd
mov
ljmpw
in
dec
push
icebp
idivb
adc
jecxz
fisubl
fwait
jno
adc
pop
test
mov
and
lods
inc
lcall
xchg
sub
mov
sub
shlb
ror
push
enter
outsb
pop
sub
mov
mov
bound
int3
inc
stc
ret
cs
frstor
notb
test
mov
pop
sub
notb
inc
mov
mov
in
cmpsl
jb
xchg
mov
sub
dec
test
lea
mov
rcll
pop
sub
mov
inc
cmp
push
push
aad
pop
data16
pusha
das
js
ljmp
mov
cmp
ret
ja
mov
adc
pop
leave
xor
dec
xchg
fcompl
pushf
pop
and
cmp
rcrb
enter
push
inc
out
std
sub
and
mov
sbb
add
pop
cmp
and
cmpb
fidivrl
idivl
sub
adc
jbe
xchg
data16
sub
scas
je
adc
jmp
pop
mov
repnz
xorb
mov
fildl
mov
lds
jne
mov
sub
arpl
push
mov
dec
addl
add
mov
xor
inc
or
mov
enter
test
dec
push
and
dec
pop
imul
rorb
pop
out
and
and
push
or
into
mov
xchg
jp
inc
sub
bnd
pusha
sub
xchg
dec
iret
test
inc
mov
std
dec
mov
les
cli
scas
scas
ds
dec
pop
sti
sub
mov
sbb
mov
jb
stos
mov
xor
arpl
mov
in
orl
mov
gs
orl
xchg
stos
mov
ss
mov
sbb
mov
xor
lds
cmp
pop
lea
pop
add
mov
loopne
in
aas
loopne
ficoms
dec
mov
or
xchg
sub
pop
add
xchg
imul
mov
scas
fwait
sarb
and
mov
out
stos
sahf
push
fucomip
push
sti
sbb
test
xchg
or
or
aad
in
add
lds
repnz
flds
mov
jb
xchg
pushf
shr
cwtl
ret
jg
scas
xchg
dec
sub
mov
mov
lods
dec
xor
push
adc
mov
test
mov
imul
inc
aad
stos
imul
inc
lock
pop
sbb
mov
inc
or
cltd
mov
mov
lds
fsubs
gs
popf
cli
mov
inc
data16
dec
js
std
scas
adc
mov
orb
outsl
dec
xor
or
popl
jb
aaa
push
test
aaa
and
dec
xchg
pop
mov
orb
jle
jne
lcall
sbb
add
sub
xchg
fbstp
mov
cmp
pop
stos
fidivs
test
jg
dec
stos
call
movsl
xchg
dec
mov
inc
jmp
mov
out
jns
bound
divl
std
jne
mov
vorps
subb
fpatan
insb
mov
ret
push
lods
mov
xchg
fmuls
cmp
ja
mov
mov
cmpsb
xchg
pop
inc
adc
mov
ja
cmpsl
sti
es
xor
imul
xor
nop
cmp
xchg
aad
push
fstpt
aas
bound
out
stos
mov
lcall
jge
dec
and
xlat
sbb
xchg
cmp
lock
mov
aad
xchg
lock
ret
jne
and
outsb
dec
mov
cmp
add
push
push
leave
jg
aam
xchg
lds
push
mov
out
js
mov
mov
fiaddl
aam
sar
adc
aam
out
pop
mov
xor
outsl
dec
jo
enter
inc
scas
mov
cwtl
mov
fucomip
or
addb
shlb
cmpsb
dec
out
lahf
push
ret
in
cmp
jne
aam
jae
cmp
jge
and
or
mov
bound
aas
bound
mov
daa
fdiv
ljmp
push
push
fsubr
lcall
push
arpl
push
repz
adc
addl
in
sub
mov
and
cmp
movsb
fistpll
lcall
dec
fsubl
aas
bound
sbbb
lock
pop
orl
aam
imul
dec
enter
addr16
clc
arpl
adc
jne
movsl
sarl
mov
sbb
stc
mov
in
inc
out
xorb
data16
das
out
mov
mov
pushf
cmp
cmp
mov
mov
xorl
cmp
es
lock
lods
lods
jg
pop
sub
cmp
push
outsl
or
incl
ficoms
and
and
rol
iret
or
fdivrs
or
int3
sbb
pop
push
inc
repnz
outsb
test
pop
add
rcr
or
je
sbb
pop
sahf
xor
clc
inc
out
push
subl
inc
xor
ret
and
mov
push
add
enter
popf
jbe
jne
lret
pop
and
bound
out
and
pop
jns
sub
pusha
jl
or
xchg
lock
shr
imull
sub
incl
test
mov
adc
mov
jae
jae
or
add
lret
sbb
pop
addb
xchg
popf
pop
or
insb
fnsave
jnp
aas
adc
pop
mov
movsl
movsl
aas
or
xlat
cmpl
sub
pop
cs
cmp
ss
lods
or
push
xlat
mov
gs
jbe
mov
mov
dec
int
sub
mov
cmp
push
jne
cmc
aaa
in
aam
xor
lret
or
mov
sbb
push
sbb
mov
push
jne
or
call
sbb
fwait
mov
addr16
aad
inc
inc
sub
xor
pop
das
push
push
mov
shr
cmp
js
inc
pop
mov
dec
das
dec
lds
pusha
lods
fwait
xchg
mov
test
cs
int
test
je
and
test
mov
lahf
rcrl
or
shl
sbbb
hlt
mov
lret
cmpsb
push
ss
jb
mulb
out
fs
lods
lret
xchg
inc
aad
in
cmp
mov
sbb
cwtl
lods
dec
xor
push
aam
arpl
xchg
sub
and
jo
adc
insb
jno
in
push
and
adc
imul
leave
sarb
add
add
push
lods
xchg
mov
push
fldl
adc
sbb
out
or
sub
loopne
aas
lods
rorl
nop
mov
mov
not
in
test
lods
outsl
pop
sub
jmp
mov
ds
js
xor
cmp
and
ja
pusha
push
inc
push
push
enter
fildll
nop
xchg
inc
and
mov
movsb
shll
insl
lcall
sub
cmp
push
and
aas
cltd
hlt
ss
enter
jne
push
ror
and
mov
mov
mov
fcoml
jge
jae
call
add
shr
jnp
hlt
scas
lock
aaa
aam
cmp
mov
test
rcrl
sub
jns
test
stos
std
or
mov
push
adc
sbb
testl
fwait
mov
inc
repz
dec
out
mov
add
lods
test
jl
pop
sub
fsubs
lods
ljmp
mov
mov
icebp
cltd
push
mov
cld
push
dec
and
jnp
inc
mov
pop
lds
cli
icebp
mov
or
adc
cwtl
dec
adc
inc
imulb
movsb
pop
divb
xchg
ret
fstpt
repz
pop
dec
pop
ficompl
jmp
pcmpgtw
repz
xor
imul
cs
mov
and
icebp
and
ficompl
mov
out
mov
mov
pop
hlt
lods
dec
sub
popf
sub
movsl
sub
add
sbb
sbb
out
jge
sbb
test
pop
rorb
push
and
cmp
push
in
push
nop
into
xor
cwtl
test
ljmp
add
adc
call
inc
add
sbb
fwait
shlb
aaa
ret
imul
dec
mov
mov
push
and
push
mov
aas
mov
movsl
or
movsb
out
cli
popa
fs
out
aad
ror
add
push
inc
adc
sbb
fimull
sti
jmp
lock
push
mov
mov
shlb
std
mov
andl
insb
cli
mov
and
jnp
cmp
test
push
pop
out
sub
xor
pop
mov
fwait
es
sub
xor
in
data16
dec
mov
mov
dec
jp
mov
imul
jnp
dec
mov
mov
dec
or
mov
imull
xor
fsubr
sub
stos
lcall
dec
repz
xchg
gs
mov
push
or
hlt
nop
and
fstl
inc
xor
cltd
mov
ss
mov
repz
faddl
sbb
cltd
daa
cmpsl
popa
and
loope,pn
sub
lret
push
iret
lcall
sub
jne
cwtl
or
stos
clc
jbe
or
repnz
or
push
cli
out
mov
adc
mov
push
jo
cmp
repnz
pop
sbb
mov
jbe
pop
les
cmpsb
xchg
sbb
mov
xchg
pop
mov
pop
out
stos
sbb
push
leave
pop
mov
dec
ret
push
sbb
cmp
add
loopne
sbbl
mov
mov
cltd
mov
repz
ss
add
std
sahf
pushf
insl
inc
gs
pop
lea
scas
push
mov
jne
adc
add
mov
sub
imul
cmp
mov
xchg
stc
dec
js
nop
aad
dec
push
sub
das
cmp
pop
nop
inc
mov
int3
mov
lods
fildll
mov
dec
ljmp
mov
aas
jo
ja
pusha
les
test
add
or
dec
jecxz
fisubrl
mov
sbb
or
lcall
sub
pop
dec
add
int3
in
mov
sar
daa
jno
rorl
jae
mov
cmp
and
shl
imul
sbb
xlat
sub
out
adc
pslld
push
push
icebp
mov
dec
insl
fcomp
and
xchg
loope
cmp
push
adc
shr
pusha
stos
into
adc
dec
mov
or
xchg
add
inc
push
mov
stos
in
out
push
add
sub
imul
xchg
shlb
pop
mov
fidivl
dec
xchg
int
mov
jne
ret
fiadds
pop
push
shrl
cmp
repz
les
adcb
fwait
pop
je
mov
insb
test
fnstcw
rcll
jo
jnp
and
pop
icebp
int3
lret
xchg
ds
add
jne
fwait
out
out
pop
adc
pusha
mov
add
jae
or
stos
pop
jmp
pop
stc
cmp
gs
fxtract
aas
pop
push
ds
fcoml
or
lea
out
dec
rorb
das
outsb
mov
mov
mov
clc
inc
call
push
cmpsb
stc
jb
stos
aas
xchg
cmp
arpl
loop
xchg
lahf
into
inc
ficompl
mov
rcrl
cmp
jge
cmpsb
sbbl
xor
and
mov
adc
sub
imul
gs
mov
inc
out
rcll
cs
xor
add
xchg
daa
enter
and
mov
jl
and
jne
or
icebp
push
sbbb
inc
test
repnz
mov
cmp
fst
sub
cmp
pop
lret
cmp
push
sub
pop
lahf
mov
dec
int3
cmovl
insb
orb
lret
or
xorl
mov
mov
call
out
cmp
xchg
popf
xor
scas
enter
cwtl
adc
filds
inc
xor
ficoml
adc
leave
mov
outsb
xchg
arpl
mov
je
inc
add
outsb
out
mov
push
rcrb
ja
lcall
fdivrs
mov
dec
mov
adc
mov
lret
dec
out
scas
pop
popa
mov
loop
dec
dec
inc
ret
jmp
push
mov
movsl
lods
dec
cmp
pcmpeqd
aas
push
jmp
lock
fwait
pushf
and
out
cwtl
outsl
cld
lea
and
add
cmp
bnd
popf
shll
sti
inc
mov
cli
popf
cmp
lock
xor
xchg
cmc
stc
fwait
jmp
lret
das
inc
les
lds
movq
lret
mov
xchg
jno
pop
rcrb
mov
leave
sub
repz
adc
lcall
and
sbb
and
pop
push
fwait
cmp
mov
jl
sbb
pushf
pop
mov
test
js
xchg
in
repz
nop
push
xchg
shll
loope
in
push
push
in
inc
sub
xor
cltd
inc
data16
jg
xorl
cmc
lock
into
dec
mov
pushf
xor
fadds
cld
loop
add
push
cmp
adc
or
mov
pop
mov
fmul
test
adc
stc
adc
mov
jbe
add
mov
push
jl
idivb
fidivl
pop
sbb
std
lea
push
mov
bnd
cmp
pop
dec
cwtl
mov
nop
xchg
leave
adc
mov
out
sbb
lods
repz
push
rcrb
popf
movsb
lret
enter
out
and
push
rorl
pop
xchg
sti
or
leave
xchg
xchg
in
mov
jno
hlt
cmp
enter
fs
pop
insl
cmp
cwtl
lret
jo
bound
sbb
stos
dec
dec
pop
dec
sbb
sbb
jno
xchg
sub
ja
into
daa
int3
mov
push
lods
lret
fwait
push
lock
inc
push
movntps
adc
das
test
mov
jo
repz
dec
aas
js
andb
mov
mov
push
shr
fwait
dec
cld
xchg
in
adc
xchg
mov
ljmp
sub
jnp
mov
daa
cmp
xchg
fwait
outsb
cmp
push
bound
sub
xchg
dec
roll
cmp
adc
in
out
ret
dec
jbe
es
fwait
jg
and
pop
sti
xchg
xchg
gs
shlb
push
fs
test
cli
push
and
adc
push
in
jnp
shrb
push
sbb
mov
stos
push
ljmp
cltd
std
push
lahf
popf
popa
inc
lods
cltd
nop
rol
cmp
pop
adc
fdivs
int3
mov
xor
insb
ja
mov
int3
xor
cmp
cmpsb
popa
ds
adcb
pop
dec
mov
arpl
cli
push
movsl
rcl
sub
loope
mov
ret
push
shrl
inc
pop
jmp
mov
adc
jae
insl
cld
and
inc
xor
scas
mov
mov
jecxz
mov
mov
add
lea
mov
dec
mov
hlt
and
inc
xchg
and
inc
loope
sahf
cltd
jbe
stos
pusha
lret
leave
cmp
push
orl
movsb
mov
sarl
push
jns
pushf
sarl
repnz
xchg
jo
lcall
fs
daa
push
ret
faddl
cmp
push
jmp
mov
sub
sbb
pop
int3
mov
imul
xlat
mov
mov
aaa
add
icebp
dec
test
in
mov
aas
adc
pop
push
or
sub
cmpsl
xor
or
pop
adc
inc
push
jge
into
push
cmc
clc
cmp
aad
adc
pop
pop
adc
sahf
daa
cmc
lret
push
push
clc
call
pusha
aaa
inc
dec
mov
mov
loopne
in
mov
add
jmp
arpl
or
cmp
pop
stc
pop
rcrl
jge
lods
jg
push
pop
pop
sbb
lods
loop
push
jb
jmp
cmp
fimull
stos
mov
jne
mov
pop
imul
imul
cmpsl
ret
filds
js
test
push
mov
test
fistl
inc
jg
fsubs
push
daa
sbb
or
jns
decl
iret
sar
test
andl
iret
sarl
sarl
fcmovbe
mov
jmp
or
out
ss
pushf
shr
jmp
loopne
inc
pop
add
adc
dec
jge
xchg
rclb
xchg
adc
js
and
fdivrl
add
xor
pusha
jg
xor
les
inc
inc
dec
inc
mov
sub
fidivl
xchg
js
hlt
or
movsl
sarb
mov
lcall
and
xchg
push
cmp
xor
sub
jl
outsb
imulb
sub
pop
mov
sub
sub
sub
and
sub
xchg
jnp
push
push
stos
popf
mov
cmp
loop
and
fmuls
xor
cmpsb
aaa
push
adc
xor
jmp
icebp
and
pop
out
cmpb
xlat
fsubrs
js
mov
ss
mov
fidivrs
push
rorb
cwtl
mov
ja
cmpb
xor
xchg
adc
sbb
mov
push
mov
aas
addl
mov
inc
shrl
fnclex
cmc
movsb
lahf
push
mov
xlat
jmp
pusha
bound
pop
lods
shl
push
out
into
inc
sub
es
fucomp
fcoms
cli
out
js
pusha
mov
mov
ja
fs
jp
pushf
into
test
imul
lds
arpl
xchg
sbb
ret
jne
xor
lods
adc
mov
push
jns
xor
push
nop
jle
mov
cltd
imul
pop
stc
div
xlat
sub
mov
mov
xor
mov
es
fld
sbbb
push
loope
repz
push
add
adc
and
sti
dec
ss
int3
data16
jb
out
or
jae
stos
push
or
jle
in
or
call
ja
sbb
outsb
mov
stc
stos
call
pop
inc
xor
imul
inc
sbb
and
fs
sub
jns
mov
icebp
popa
mov
lods
xchg
mov
dec
push
push
sete
inc
int3
les
mov
push
sbb
cwtl
jae
dec
inc
outsl
push
push
call
sbbb
mov
inc
pop
cld
adc
inc
popa
push
sbb
sub
cs
int3
mov
repz
jb
and
push
xor
mov
insl
fwait
lret
stos
dec
das
xor
jecxz
dec
sub
mov
adc
pop
mov
xchg
jnp
lods
outsl
cwtl
cmp
in
outsl
add
fidivrl
inc
ret
inc
fcomp
jo
add
xlat
pop
mov
cmp
sub
mov
push
aaa
push
gs
jle,pn
rcrl
pushf
xchg
cli
ja
sbb
call
lahf
scas
cmpsl
push
push
jge
loopne
testl
mov
ds
je
push
sub
and
xorl
push
lcall
fimuls
test
jl
sti
mov
popa
and
ret
insb
sbb
stos
outsb
inc
scas
mov
add
dec
add
dec
adc
lret
test
and
or
jmp
popa
dec
sub
xchg
jecxz
xchg
fsubl
and
filds
mov
pop
mov
cmp
jmp
rcrb
push
dec
in
and
cmpsl
pop
outsl
inc
scas
add
out
xor
cmp
cltd
mov
add
test
cmp
or
cmp
xor
int3
push
popf
fs
add
add
lret
sub
add
lret
sbb
andl
sbb
pop
lcall
lock
push
xlat
out
xor
add
popa
mov
loopne
into
xchg
sbb
shl
push
jecxz
cmp
sbb
add
sbb
in
rclb
fadds
sub
sbb
test
sti
dec
nopl
rcrl
fistps
mov
fs
nop
mov
fbld
addb
in
test
mov
call
cli
popa
dec
lret
push
push
scas
pop
sti
sbb
out
mov
mov
int3
popf
xor
and
cld
mov
andl
mov
dec
fs
mov
fdivp
jecxz
jns
in
filds
outsb
mov
popa
or
dec
mov
les
mov
jae
xchg
loopne
repz
xlat
ret
adc
or
lods
bndstx
dec
mov
add
and
sbb
out
sub
test
mov
jmp
add
lea
mov
and
mov
imul
rcll
push
dec
xor
and
jge
jge
cmp
int
mov
push
add
push
hlt
dec
loopne
lock
test
cmp
mov
jg
dec
or
xchg
jns
sub
call
cmp
arpl
jb
push
mov
push
pop
insb
mov
cmp
jo
into
push
pop
lock
mov
popf
outsl
stc
and
gs
ds
lds
fidivs
orb
mov
mov
je
jbe
leave
stos
and
xor
dec
jo
jno
ret
xor
push
jecxz
fsubs
sbbb
sub
push
sahf
inc
in
lahf
fdivr
iret
out
adc
mov
cmp
shlb
sub
out
xor
and
cmp
jle
fcmovb
push
test
int
imul
jge
sbb
scas
cmpsb
lods
push
mov
sbb
out
push
bound
pop
sbb
dec
scas
movsl
movsb
push
aad
mov
sub
mov
inc
imul
push
mov
out
inc
sub
int3
call
lds
jmp
push
mov
xchg
aam
mov
and
mov
push
adc
test
push
and
dec
out
cmp
jb
sbb
jmp
mov
mov
sbb
fcmovnb
or
xchg
enter
ret
and
lret
push
outsb
nop
sbb
add
ret
stos
mov
and
aad
cmp
add
push
outsl
jp
loope
xor
cmp
out
pusha
inc
xchg
xchg
dec
jns
repnz
add
and
ja
rcrb
add
call
push
cmp
dec
es
push
insl
es
shll
scas
int
inc
sbb
adc
nop
pop
jnp
adc
je
fs
popf
aas
adc
in
cmp
push
mov
add
xor
imul
popf
fs
ret
subb
into
mov
shlb
mov
jmp
in
xor
xor
sub
sahf
es
sub
call
stc
sub
adc
mov
mov
mov
pop
pop
data16
sub
sub
or
js
dec
mov
push
or
mov
cmp
and
cmp
inc
jo
pop
cltd
rorl
arpl
sub
xchg
mov
jbe
pop
lea
cltd
sbb
loopne
mov
jne
addr16
out
mov
aad
enter
xor
dec
stos
outsb
cmpsl
and
xchg
adc
jnp
jno
fnstenv
inc
adc
js
lcall
or
push
xor
or
and
mov
adc
lods
lock
lahf
push
xchg
xchg
jns
push
jae
jp
push
cmc
movsb
jbe
lcall
mov
test
or
nop
out
add
adc
sub
fs
and
or
mov
shl
xchg
test
jno
shrl
mov
out
push
sbb
mov
aad
jae
ret
insb
fnsave
aas
adc
pop
repnz
jmp
pop
scas
jo
lds
adc
insl
ds
ja
push
loope
leave
dec
sbb
fwait
sbb
je
imul
sarl
mov
cld
cmpsb
dec
outsl
add
mov
jb
pop
pop
xchg
out
sub
mov
mov
pop
jg
imul
sbb
in
pop
in
sbb
pop
jmp
test
mov
movsl
jl
xor
and
shrl
xchg
daa
inc
insb
stos
and
adc
ljmp
xchg
mov
popf
fistpl
popa
jmp
xor
fildl
fbld
mov
xchg
es
out
cmp
xchg
xor
int
orl
mov
cmp
fstps
xchg
sub
or
call
icebp
fcoml
mov
or
popf
lea
xlat
call
push
xchg
mov
mov
sbb
mov
or
mov
mov
sti
bound
imul
in
cmp
jns
cmp
mov
and
lret
aas
adc
insl
mov
mov
subl
push
sub
pop
inc
cmp
jg
sub
ret
mov
cli
loopne
das
outsl
push
mov
inc
in
mov
push
xor
cld
neg
jae
mov
and
aam
sbb
mov
sub
fisttpl
jnp,pn
dec
mov
push
and
and
jmp
inc
lcall
sbb
xor
icebp
push
dec
jo
mov
and
xor
loopne
sub
mov
xchg
and
rorb
mov
inc
cmc
pusha
pop
jecxz
or
pop
cmc
inc
movsl
scas
xchg
iret
cmp
sub
push
std
push
fisubrl
fmuls
inc
fsubl
push
outsb
ret
add
lret
int3
xchg
adc
not
mov
lods
lea
outsl
inc
jl
pop
mov
xchg
clc
inc
dec
les
mov
add
test
or
jge
add
xchg
mov
jmp
cmp
push
pushl
push
out
hlt
les
jp
enter
mov
mov
aad
pusha
mov
xchg
cmpsl
ds
fcoml
xor
pushf
lahf
cmc
shr
xchg
cmp
clc
cmp
shrb
mov
inc
aad
xchg
add
daa
int3
insb
stos
pop
lcall
mov
out
fnstenv
movsl
jo
dec
outsb
mov
add
test
inc
iret
mov
pop
fdivrp
xchg
sysenter
push
cwtl
mov
into
adc
lahf
fldcw
sbb
cmp
or
cmp
adcl
insb
and
int
jg
cld
push
ja
mov
out
cmp
mov
out
in
std
jecxz
push
loopne
adc
fsubrs
xor
pop
adc
arpl
out
mov
fldcw
test
orl
pop
popf
lret
repnz
insl
lret
xchg
mov
pop
fsubp
and
cmp
stc
cmp
or
adc
aaa
cmpsl
mov
cld
xchg
in
dec
sub
mov
xchg
xor
sub
mov
imul
stos
cmp
mov
lods
push
jbe
sets
sbb
leave
movsb
out
pop
jmp
mov
and
dec
pusha
push
cltd
jmp
cmc
leave
sbb
mov
adc
sbbb
stc
es
pop
mov
pop
pop
sub
das
push
dec
or
lahf
pop
dec
xchg
loopne
pop
or
mov
aas
dec
pop
rcll
test
rcll
loop
femms
outsb
shlb
sbb
scas
sub
inc
cmp
test
mov
mov
add
lods
orb
mov
ljmp
das
loope
movsl
push
scas
stos
push
push
stc
add
cmp
leave
subl
xor
gs
cmp
push
sbb
arpl
add
adc
verr
insl
dec
sbb
aas
inc
mov
push
pop
push
int
fwait
xchg
cmp
lret
rcrb
pop
push
dec
addr16
nop
outsb
push
pop
dec
dec
adc
add
mov
sahf
mov
sahf
push
addr16
sub
dec
adc
cmp
mov
mov
mov
js
jo
inc
jb
xchg
and
sbbb
lods
into
add
in
pop
mov
fldenv
dec
mov
pushf
xor
rcl
icebp
aam
dec
int3
push
bound
xchg
lret
push
jmp
fistpl
sbb
fisubrs
ret
jnp
push
repz
adc
pop
out
addr16
stos
aaa
cmp
roll
add
fwait
cmpsb
lods
jecxz
or
or
dec
push
xor
scas
xchg
enter
lods
push
adc
aaa
jecxz
mov
xchg
and
les
outsl
inc
imul
sub
dec
xchg
or
popf
mov
cwtl
shlb
cli
or
cmp
aas
push
bound
loope
mov
pop
fbstp
pop
lret
jne
movsb
xor
movb
cli
loop
xlat
pop
pop
flds
or
sub
jle
mov
aaa
mov
gs
lods
lcall
cmc
aad
inc
and
xchg
int
shlb
and
sti
lods
or
stos
mov
inc
mov
ljmp
inc
sbb
mov
imul
mov
int3
mov
orb
mul
aad
test
push
inc
jb
inc
pop
or
adc
dec
jecxz
pusha
lods
aad
pushf
push
data16
into
inc
addr16
inc
or
fs
ret
push
das
mov
jl
lcall
inc
dec
jb
dec
cmp
stos
fstpl
inc
dec
push
adc
xor
pushf
xchg
repnz
lcall
je
ljmp
hlt
jmp
inc
jno
push
outsl
movsl
sbb
xchg
cwtl
ljmp
ljmp
scas
mov
int3
pusha
dec
add
test
repnz
sub
push
push
mov
inc
xor
lock
nop
stos
sbbb
outsb
dec
das
rcrb
xor
movsb
stc
pop
test
js
xor
xchg
ja
or
mov
xchg
pop
cmpsl
pushf
or
dec
xchg
mov
xor
mov
nop
xchg
mov
pusha
mov
adc
dec
jmp
enter
adc
loopne
mov
fs
fucomip
pop
jb
xchg
call
sub
mov
fnstcw
cltd
cs
lret
dec
hlt
outsl
xorb
insb
jo,pt
cli
movsl
add
aad
lock
jl
jecxz
sahf
call
inc
pop
sti
in
add
imull
or
or
dec
loope
or
stos
es
and
jnp
stc
dec
test
jbe
cmp
and
insb
psubb
test
aas
fsubrs
cmpsl
dec
add
and
pop
test
mov
sbb
jge
test
cwtl
add
inc
insl
out
push
fdivrp
popa
lods
inc
cmpsb
cmpsb
daa
lcall
pop
push
sub
dec
sbb
lahf
xlat
in
xchg
ljmp
jno
ret
lret
imul
push
cmp
mov
sbb
outsb
mov
addb
sub
add
lahf
inc
cmpsb
mov
and
leave
mov
push
jmp
or
dec
mov
mov
pop
subl
arpl
sbb
daa
or
out
dec
sub
xchg
jmp
pop
repnz
cltd
movsb
and
push
adc
jge
push
push
mov
int
arpl
sub
iret
mov
dec
fisttpl
mov
mov
add
cmp
inc
fldenv
lods
mov
cmpsb
iret
std
and
dec
clc
shl
loope
in
mov
mov
mov
inc
mov
mov
push
int
or
lret
aam
mov
adc
mov
add
mov
lcall
cmp
fcoml
sarb
jecxz
sbb
jmp
sub
addr16
int
loope
in
push
pop
inc
xlat
out
std
push
fmull
lcall
hlt
lret
xchg
or
cld
in
scas
sbb
dec
xor
cmp
cltd
pop
xorl
insl
mov
lock
dec
sub
xchg
lahf
or
ljmp
mov
xor
push
popa
stc
adc
adc
ljmp
push
xchg
push
ds
add
xor
or
xor
push
jnp
push
or
in
pop
pop
ret
cmp
popf
data16
enter
lret
and
mov
push
sub
std
imul
insb
add
ret
xchg
out
jne
out
shrb
les
mov
stc
mov
repz
inc
xchg
scas
cwtl
mov
je
stos
sti
sub
pop
test
into
push
mov
pop
fcomip
mov
xchg
mov
mov
das
sbb
cmp
or
cltd
mov
pushf
xor
xchg
or
icebp
loope
fisttpll
stos
movsl
pop
popf
lret
test
aas
les
xorl
jno
jns
lock
ret
fisubl
xchg
mov
jp
je
or
popf
cmc
sub
or
and
lock
pop
lea
into
add
cmc
push
daa
out
sbb
add
jne
scas
out
sbb
lcall
das
inc
mov
popl
fimull
push
cmp
sti
adc
gs
stos
push
mov
es
outsb
out
sub
sbb
repnz
cli
test
mov
xchg
cs
cmp
cld
shlb
mov
mov
leave
push
fistpll
mov
or
push
fwait
mov
es
cwtl
mov
adc
xor
shrl
les
lret
or
ror
adc
cmpsl
add
and
ficoml
mov
mov
push
xor
fs
sbb
push
data16
roll
or
mov
out
push
xchg
push
das
mov
imul
xchg
and
push
jle
sub
es
sub
cmc
mov
mov
sbb
and
sub
inc
outsb
push
cmpl
push
xchg
ss
iret
xchg
jne
jmp
xor
push
jo
mov
add
jnp
or
popf
das
dec
or
daa
std
movaps
mov
fldl
aad
jb
mov
scas
leave
push
cmp
mov
movsb
outsl
icebp
mov
jmp
mov
or
cmp
loope
adc
addr16
and
in
jge
jbe
inc
add
shll
add
div
nop
sbbb
scas
mov
insl
sub
stc
xor
fidivs
dec
xchg
mov
jp
jo
sub
dec
mov
js
testl
or
jle
jo
cmp
aas
mov
xor
fwait
insl
mov
xchg
xor
call
mov
fiaddl
add
ljmp
sbb
mov
xlat
or
insb
lea
sti
incl
out
sub
or
cmpsb
stc
into
loop
mov
movsl
enter
ds
sbb
in
inc
std
jle
pop
test
jle
mov
xor
push
enter
cmpsb
pop
mov
pmulhw
lods
pop
fwait
cmp
xor
cmpsb
cwtl
in
aam
mov
inc
lds
sub
pop
dec
cmp
jle
and
gs
ret
enter
jne
jecxz
arpl
push
in
testl
xchg
stos
or
sub
adc
pop
lods
lcall
adc
xlat
push
pop
mov
sub
stos
mov
mov
loop
mov
call
lods
jmp
pop
arpl
insl
fisttpll
push
cmp
mov
mov
inc
mov
adc
mov
cmp
lods
or
inc
xchg
adc
cmp
into
gs
mov
pop
test
gs
mov
jmp
cmp
xor
add
adc
ja
aaa
test
xor
nop
dec
not
dec
mov
mov
or
insb
pop
mov
stc
sbb
arpl
push
mov
push
cld
outsw
out
int
jns
fdivl
cmp
and
repnz
jo
fsts
xor
xchg
pop
jbe
jns
in
mov
xchg
fsts
cs
cmpsl
test
fs
cs
imul
leave
rorb
aad
xchg
push
cmp
push
inc
ret
rclb
push
fisttpll
cmp
loopne
mov
sbb
inc
movsb
outsl
pushf
lds
mov
divl
out
test
popa
sbb
add
ret
popf
sub
jmp
icebp
cmc
das
sub
scas
aaa
ja
fiaddl
mov
cmp
int
add
lcall
in
test
out
sbb
cld
adc
pop
fisubrl
rol
mov
xchg
xchg
adc
stc
fsubrl
fnsave
lcall
fsts
lods
xchg
inc
movsl
in
jge
cmp
scas
outsl
out
fisubs
jb
mov
mov
fsubs
sbb
cs
xchg
lret
mov
cmpsb
xchg
es
push
je
aam
mov
ja
mov
lahf
outsb
pusha
leave
decb
jmp
fwait
sbb
xchg
sbb
add
int
scas
test
push
rcrb
aas
leave
cltd
jge
dec
and
adc
mov
bound
jne
add
rcrb
add
xchg
adc
sti
mov
aas
pop
ret
aaa
loop
movsl
dec
outsb
mov
lcall
js
test
jp
std
sub
xchg
sarb
xor
imul
mov
add
pop
jae
rcr
aad
jns,pt
lret
or
out
testl
cltd
in
mov
ja
inc
jecxz
dec
mov
inc
loopne
pop
out
in
aas
fisttps
loope
mov
enter
mov
inc
jmp
dec
dec
jno
dec
mov
arpl
dec
mov
jbe
repz
shrl
insb
xlat
cmp
outsb
pop
jmp
jle
inc
aad
std
lret
scas
jecxz
lret
sbb
fisubrs
and
add
gs
xor
jg
insl
data16
js
inc
push
dec
insb
mov
jp
fidivrs
in
mov
fdivr
push
dec
int
js
cmp
imul
es
push
pop
lret
pop
xchg
iret
xor
jno
inc
aaa
ja
jae
jmp
jge
xchg
jmp
add
dec
mov
adc
ss
mov
fdivrs
cmp
lahf
ret
pop
mov
rorb
lea
lret
ret
test
pusha
hlt
add
in
mov
scas
test
add
xchg
add
stos
daa
xchg
sbb
outsb
mov
xchg
outsl
int
dec
mov
adc
jmp
std
call
mov
outsl
divl
jg
mov
sahf
jns
sub
jno
xlat
mov
and
lcall
push
icebp
xchg
out
lahf
nop
add
mov
jae
push
pop
mov
mov
jno
jp
shlb
mov
and
add
sbb
cli
mov
add
loope
cmpsb
dec
mov
pushf
les
jle
sub
mov
jb
les
pop
xor
test
aam
js
jecxz
scas
xor
adc
xor
mov
hlt
cltd
sbb
push
rcrl
pop
or
inc
xchg
inc
lret
sbb
lea
mov
push
jno
jp
shl
aaa
push
out
test
iret
jno
cmc
in
and
adc
inc
mov
and
mov
jmp
cmc
sbb
mov
outsb
mov
sub
xor
xor
mov
add
inc
in
push
sbb
sub
xor
gs
or
stc
int3
push
lock
icebp
jp
in
jno
jae
dec
cmp
and
xor
lret
cmpsb
add
mov
push
sahf
imul
out
lock
push
mov
adc
mov
xor
rorl
adcb
aad
jle
push
stos
addr16
dec
pop
repz
mov
or
notb
cltd
ret
mov
outsb
inc
cmp
jae
sti
or
fsubl
or
pop
sbb
xor
int3
mov
icebp
mov
mov
jno
xor
push
pop
add
xchg
mov
add
movsl
sbb
lret
mov
in
shlb
xchg
sbb
and
lahf
inc
cmp
lods
ret
ret
cltd
jmp
test
es
sub
enter
lcall
insb
pop
mov
daa
std
loopne
mov
inc
es
xchg
lret
or
rorl
stc
enter
out
add
fdivr
jg
filds
repnz
jne
mov
mov
loopne
std
adc
mov
mov
sahf
sub
xor
sbb
cmp
mov
jo
and
cmc
pop
fldenv
dec
dec
mov
add
xor
clc
push
sti
iret
mov
movb
bound
fwait
test
mov
js
xor
es
stos
js
fildll
xchg
jle
movsl
xor
sbb
mov
loope
pop
ret
and
repnz
jle
fstl
cmc
cmpsb
enter
xor
adc
sarl
mov
push
repnz
lods
outsb
mov
jne
lcall
mov
fwait
or
lds
repz
jb
ljmp
gs
in
or
and
in
inc
push
cmpb
xor
cs
mov
lods
test
mov
mov
fadd
mov
test
daa
push
imul
ja
add
pop
jmp
repz
cmpsb
mov
insb
pop
jae
mov
data16
cmc
stc
mov
inc
jecxz
sbb
mov
jmp
jl
add
ret
mov
sahf
repnz
es
mov
add
xchg
and
rcrb
dec
mov
ja
jae
mov
fildll
mov
xor
andl
ljmp
rol
cld
aam
push
cmp
lea
fists
enter
add
mov
adc
jne
pop
mov
mov
or
mov
jg
xchg
loope
sbb
cs
add
or
rcr
movsb
aad
stos
rclb
les
je
dec
jmp
out
jg
out
stc
mov
pop
lods
mov
sub
lret
xor
fsubrp
stos
xchg
daa
mov
insb
cmpsl
ds
in
mov
sub
test
or
adc
xorl
cmc
inc
jne
cmp
stos
adc
testb
pop
les
fiaddl
adc
dec
outsl
pop
mov
pop
inc
and
jmp
das
add
cmp
mov
mov
mov
dec
jo
jae
inc
insl
cmp
push
mov
scas
scas
cmovge
xchg
sub
movsb
aad
stc
jo
pop
and
jae
cmp
or
inc
jge
inc
pop
and
in
jp
cmc
loopne
fisubs
mov
and
aaa
push
fcompl
orl
and
sbb
cwtl
xchg
sbb
xor
xor
loopne,pt
icebp
fadd
sub
mov
xchg
mov
inc
es
pusha
mov
mov
push
icebp
stos
test
cmc
xor
push
in
in
lea
out
push
dec
int
adc
mov
test
and
dec
outsb
sub
imul
test
mov
sbb
lds
push
push
mov
jmp
mov
ss
xchg
int
mov
lods
in
lock
or
dec
in
out
adc
je
out
jae
or
mov
dec
xor
jo
dec
adcl
mov
shll
mov
lret
aam
lods
out
sub
mov
movsl
je
loop
stc
fnsave
jns,pn
sbb
hlt
or
sbb
jb
in
add
xor
mov
lret
test
cmp
add
loope
xchg
jmp
add
jne
test
call
pop
push
je
pop
neg
xchg
sbb
faddl
in
xlat
into
ja
addb
scas
add
test
outsl
xorb
push
or
mov
addr16
mov
adc
xchg
xor
scas
push
fisttpll
jb
or
push
cmp
xor
add
jge
push
xchg
jl
inc
pop
insl
dec
inc
mov
pop
aam
inc
iret
mov
add
mov
jo
fwait
fwait
iret
cmp
insl
or
lock
icebp
and
dec
les
xor
arpl
out
cmpsb
pop
outsl
sub
imulb
mov
xor
fiaddl
rclb
ror
ja
push
lds
mov
mov
enter
out
push
sar
jp
sbb
pop
daa
jne
inc
fs
jo
add
add
sub
js
inc
ljmp
dec
cmp
mov
mov
imul
iret
je
push
stos
jge
inc
or
jbe
add
push
nop
lods
leave
icebp
push
into
cmp
xchg
mov
aam
fstpl
add
mov
repnz
addr16
fs
push
sbb
xchg
inc
or
popa
je
push
xlat
orb
std
inc
jne
movsb
and
call
clc
mov
lret
cmpsl
sub
sbbb
or
inc
ja
pop
pop
jle
fadds
sub
sub
xchg
and
scas
or
dec
jbe
inc
fbstp
inc
popf
fbld
das
icebp
sbb
sbbb
cli
aas
andl
sbb
adc
push
inc
xor
adc
pop
xlat
fnstenv
lock
stos
leave
sbb
in
cmp
outsb
addr16
cmpl
pusha
inc
jae
ret
pushf
bnd
add
pop
dec
stos
cmp
adc
mov
pop
ror
mov
mov
fnsave
mov
jp
fcompl
mov
xor
xchg
dec
lods
mov
outsl
insl
je
sub
and
fstpt
in
sbbb
push
shrl
adc
push
xchg
cmp
pop
mov
rolb
lea
fistl
outsb
fstps
mov
push
push
xchg
ffreep
fsubrs
ret
pop
pop
pop
out
pop
add
mov
cmpl
jg
sub
in
fimuls
leave
loop
xor
sbb
pop
inc
sub
or
inc
sub
adc
or
and
mov
xchg
rorb
jg
xchg
out
pop
xchg
in
gs
sub
out
daa
mov
jp
or
and
cmp
lahf
sbb
pop
sbb
and
test
dec
jl
pop
lret
sub
push
add
adc
aam
dec
cmp
inc
pushf
xor
xor
sub
hlt
ljmp
jns
push
and
lods
imul
int3
sub
clc
xchg
push
cmpl
sub
sbb
sbb
sbbb
xchg
mov
in
push
stos
push
sbb
mov
out
and
and
inc
mov
call
push
pop
dec
imul
mov
insl
push
cmp
clc
push
mov
and
pop
add
dec
lds
adc
sbb
lds
insb
sub
cmp
data16
decl
xlat
fadds
mov
adc
pop
mov
lcall
cltd
jae
xor
push
imul
inc
inc
in
mov
jge
stos
pop
roll
mov
mov
or
push
cli
jle
fsubrs
je
xchg
add
daa
fs
out
xchg
insb
dec
imul
cmp
lahf
xchg
je
aad
rcrl
jmp
lea
daa
jns
adc
movsb
out
inc
jnp
cmpsb
mov
and
sahf
or
pop
out
xchg
ljmp
adc
rclb
cmp
cltd
jne
mov
mov
pop
mov
mov
mov
jge
les
mov
cld
mov
call
cmpl
int3
sbb
loop
or
cmp
xchg
ret
in
inc
fs
mov
cwtl
jno
test
cmp
sbb
xor
sbb
adc
jecxz
jae
stos
sbb
aas
add
push
into
adc
or
je
pushf
push
sahf
outsb
ret
pusha
push
outsl
sbb
pop
xchg
and
jne
jmp
bnd
fwait
xor
cmc
call
jbe
xlat
xlat
mov
in
outsb
pop
out
cmc
imul
cmp
jne
push
xor
and
xchg
lods
test
addr16
inc
mov
push
xchg
out
cltd
xchg
adc
in
out
stc
sbb
jge
jb
outsl
lock
addr16
mov
jle
sbb
roll
test
dec
in
adc
stos
scas
adc
pop
stos
add
int3
jge
lahf
add
std
cwtl
cmc
imul
ds
imul
int
mov
jno
push
lret
cmpsb
fistpl
sarl
adc
xchg
jl
xlat
xchg
repz
xor
aad
shlb
push
rcrb
pop
cmp
repnz
add
popf
cmp
mov
decl
pop
cmpsb
xchg
or
sub
outsb
xor
xchg
fdivrs
xor
in
mov
inc
lret
dec
leave
ds
ja
stc
or
adc
pop
push
sbb
adc
shrl
pop
pop
lods
out
stc
lret
pop
and
cmp
mov
es
test
inc
ret
xchg
jg
mov
sub
es
xor
pop
push
in
rcl
mov
dec
popf
or
sbb
and
mulb
pop
mov
sti
inc
xchg
push
in
cld
and
sbb
add
jge
or
ss
daa
lods
das
pop
push
test
outsl
cmp
mov
test
sbb
or
jne
inc
adc
aad
or
mov
push
and
inc
mov
lods
insl
inc
movsl
daa
inc
mov
dec
dec
mov
mov
mov
cmpl
iret
jns
push
inc
mov
sarb
mov
cmp
test
cmp
mov
ss
or
or
movsl
adc
fdivrs
andl
jg
mov
push
adc
push
xor
mov
roll
mov
loopne
jbe
imul
mov
or
or
add
cmp
mov
cltd
jl
inc
push
out
jno
loopne
add
xchg
sti
adc
xchg
fdivl
mov
int3
jne
mov
stos
fisttpl
out
fwait
sbb
in
push
incb
es
adc
jnp
sbb
mov
andb
out
int3
push
fmuls
aas
sbb
add
repz
push
xchg
cld
mov
imul
pushl
mov
lea
fs
and
mov
lcall
pop
lods
xor
push
add
out
loopne
xchg
sbb
xor
jns
pop
pop
dec
or
pop
cld
inc
jl
xor
insb
jmp
lods
inc
cld
push
mov
sub
es
gs
in
mov
dec
mov
push
daa
test
loope
mov
pop
push
icebp
insb
xor
jo
fisttpll
xor
push
xchg
movb
out
std
jne
std
jmp
mov
ljmp
xchg
not
sbb
xor
dec
bound
sbb
jmp
mov
sub
xlat
js
and
add
cmpsl
test
jno
cltd
jle
fs
inc
mov
add
sub
xor
inc
ja
fisttpl
cwtl
xchg
js
popf
mov
into
add
pop
adc
ja
dec
out
cmc
push
push
aaa
loop
mov
xchg
loop
rcrl
push
cvtdq2ps
jne
subl
orb
out
jle
repz
mov
mov
xlat
sub
in
movsb
outsl
loope
mov
in
shl
aam
mov
push
jo
leave
shl
pop
push
rcl
mov
add
xchg
sbb
cmp
push
leave
stos
inc
jl
repnz
xchg
or
mov
pop
jnp
dec
loopne
mov
or
dec
sahf
or
push
sbb
adc
pop
inc
or
adc
stos
das
jns
pushf
ja
out
jbe
in
and
scas
imul
xor
dec
rcrb
cmpsl
fcoml
stos
outsb
cmp
gs
movsl
push
addr16
push
push
gs
dec
lret
push
pusha
jecxz
js
callw
adc
je
sub
jge
hlt
out
xchg
push
pop
hlt
mov
outsb
mov
out
aaa
mov
mov
xchg
icebp
in
and
aas
fstpt
mov
rcr
lds
enter
inc
and
lret
jne
mov
push
xor
dec
sar
shll
dec
cmp
lods
int3
insl
daa
das
daa
sbb
mov
adc
cmp
dec
sbb
pop
cmp
cmc
add
xor
sbb
jp
xor
push
mov
fdivrs
outsb
stos
jne
cmpsl
add
shlb
test
jle
xchg
leave
pusha
pop
fcom
and
out
jp
or
into
adcl
pop
push
int
data16
rorl
lds
xchg
enter
js
cwtl
cmp
filds
int3
push
add
inc
andb
xor
fsubs
jecxz
lods
jl
cmc
into
lret
sti
xor
or
mov
pop
jo
push
scas
test
jbe
or
sbb
popa
cs
pop
loop
jae
jl
icebp
in
stos
mov
cmpsl
psllw
fstl
and
lods
fisubl
xchg
aam
mov
fmul
cmp
pop
out
lds
mov
push
xlat
loope
jge
mov
xchg
pop
scas
dec
sbb
lock
int3
leave
les
mov
cmp
or
jnp
shlb
dec
aas
pop
lods
mov
into
rol
fistpll
sbb
sbb
and
sub
mov
xchg
imul
xchg
sub
sbb
adc
popf
pusha
xor
ja
lret
push
jmp
das
jl
dec
sarl
out
adc
sti
xchg
pop
int
stos
jne
lahf
jo
or
sarb
ret
mov
cmp
cwtl
cli
ror
push
adc
enter
and
dec
push
insb
cmp
outsb
call
push
int3
dec
aam
fwait
scas
mov
scas
cld
lods
std
sbb
iret
imul
jne
ljmp
dec
cmpsl
shr
xchg
fs
cmp
lret
or
sbb
cs
xchg
xchg
lods
scas
pop
xchg
mov
adc
xchg
cmp
pop
pop
sub
sbb
iret
mov
int
mov
and
mov
das
add
add
push
mov
fwait
lods
mov
lods
push
pushf
adc
loop
xor
pop
cmp
push
add
lds
aad
in
dec
mov
sub
cld
push
cmp
add
pop
cmp
mov
fcmovb
dec
mov
mov
push
xlat
enter
push
xchg
mov
ljmp
imul
dec
mov
scas
rcll
or
or
cwtl
pusha
scas
cmp
pop
sub
pop
xor
mov
push
stc
mov
inc
mov
sub
in
filds
adcb
mov
sahf
mov
bound
pop
xchg
inc
dec
adc
push
push
addl
testl
daa
repz
adc
arpl
xor
dec
cmp
loopne
je
aaa
or
mov
add
push
jge
mov
add
ficomps
fnstenv
repz
lahf
hlt
iret
pop
call
mov
adc
push
std
xor
push
mov
pop
and
sbb
enter
loopne
jne
sbb
pop
jge
jl
loopne
and
inc
ds
aas
xchg
xchg
xor
mov
xchg
mov
jo
fcompl
mov
cmc
push
leave
jecxz
push
xor
stos
fstpt
dec
in
xchg
add
fistl
imul
jmp
sub
lahf
or
scas
xorl
imul
inc
call
add
sbb
cmp
inc
lcall
dec
inc
nop
imul
mulb
cmp
cmp
pop
adc
ja
push
and
pushf
popa
push
cmc
or
sbb
pop
jo
clc
ja
cmp
xchg
fcmovnbe
dec
mov
int3
test
das
jns
lods
inc
sti
add
xchg
mov
shl
outsb
xor
add
add
notb
add
lods
cmp
popa
sarl
inc
push
mov
stos
orl
jl
and
call
xor
sub
dec
std
aas
dec
in
fwait
jno
ficoms
cmpsb
in
pop
push
cmpsb
sub
adc
std
cmpsb
loopne
out
std
test
add
ja
and
sbb
mov
mov
or
pop
aam
pop
inc
neg
push
mov
or
or
popf
adc
insl
jne
ficoms
sahf
xchg
pop
ret
lods
ljmp
je
popa
pop
mov
and
xchg
sbb
and
imul
data16
popf
cmp
idivb
movl
jnp
lea
xor
sbbl
ja
jge
mov
ficoms
insb
push
inc
ja
mov
lds
sub
xchg
jge
popa
and
mov
push
test
es
flds
push
dec
daa
mov
mov
inc
movsl
fisubrl
subb
pop
or
jle
gs
ror
mov
jne
aaa
jg
js
inc
xchg
dec
sahf
xchg
in
decb
xor
jns
pushf
pop
es
lods
outsb
in
sbb
cs
cwtl
pop
aad
inc
xchg
jbe
and
xchg
push
sub
addl
push
mov
out
lods
ja
adc
shr
fs
lods
call
mov
mov
xor
dec
mov
push
push
and
fwait
and
cmp
xor
into
push
sbb
scas
lret
inc
pop
mov
mov
ret
or
inc
out
dec
xor
lret
jg
lea
sub
sub
jp
or
jp
mov
dec
mov
fisttpl
cs
xor
mov
lcall
adc
in
sbb
inc
dec
xchg
lahf
push
mov
or
cmc
cmp
mov
add
sub
call
push
inc
js
jl
inc
arpl
mov
lretw
shlb
daa
xchg
xor
sub
in
popa
subb
sar
cmp
push
mov
gs
sbb
mov
and
fsubrl
dec
or
cmc
icebp
stos
popa
xchg
outsl
loop
and
pop
mov
out
insb
push
loop
shll
aaa
and
or
repz
inc
outsl
dec
fwait
push
push
cmpsl
subl
push
mov
push
icebp
add
das
or
rolb
sahf
data16
leave
or
xor
pop
mov
iret
imul
mov
jle
mov
cmp
push
push
lahf
and
fwait
scas
lds
push
push
lods
dec
ret
and
inc
push
in
packssdw
cmp
add
rcrl
lret
into
adc
pop
pop
pop
cmc
jno
arpl
out
scas
sbb
push
shrl
or
adc
mov
cmp
xor
in
mov
mov
mov
inc
pop
scas
or
or
xor
stc
sub
in
cmp
mov
test
stos
aas
adc
sahf
mov
xchg
imul
or
clc
ljmp
test
dec
mov
jmp
loopne
cmpsb
movsl
dec
xchg
mov
filds
mull
mov
test
xchg
pop
adc
pop
int3
dec
sti
jnp
push
inc
mov
insb
sbb
pop
shl
lock
aam
ljmp
inc
out
stc
pusha
repz
push
stos
jae
data16
jl
pop
xor
rcl
in
adc
push
xor
inc
dec
jp
faddp
sahf
add
dec
pop
mov
sbb
sar
leave
cmpsl
add
lods
std
pop
add
mov
jle
pop
cmpb
imul
pop
ss
js
into
imulb
cmp
sahf
lock
xchg
nop
xchg
or
int3
lcall
or
dec
mov
fs
subb
sti
dec
inc
ja
and
xchg
and
sbb
mov
mov
sub
mov
scas
pop
cwtl
mov
adc
jbe
pop
aad
xchg
add
inc
mov
inc
adc
repz
xor
lods
and
mov
sub
mov
mov
and
push
sub
outsb
or
inc
and
cmp
out
jns
xor
fdivrs
dec
push
add
das
lods
loope
adc
cli
andb
in
sbb
push
daa
fsub
mov
mov
out
adc
sub
scas
popf
push
rorb
sahf
div
shl
or
pop
jge
lahf
mov
lea
xorl
adc
clc
cmp
mov
daa
mov
cmp
addr16
cmp
outsb
fsubrl
mov
cltd
ljmp
int
loop
imul
jno
push
stos
add
xchg
jl
scas
cmp
and
inc
mov
adc
sbb
ficoml
shll
ret
clc
arpl
mov
popa
push
insl
and
inc
rorl
and
mov
arpl
inc
jns
fwait
scas
in
loop
adcl
fcoml
out
lret
pop
jb
and
movsb
jb
mov
in
sub
in
and
lods
pop
clc
addr16
xorb
pop
adc
adcb
ds
rorb
jl
mov
fwait
sbb
inc
adcb
arpl
mov
adc
and
pop
adc
popa
and
adc
xor
bound
xor
arpl
mov
inc
mov
mov
imul
insb
lret
ret
inc
jne
pop
mov
nop
jb
pop
jae
test
int3
lock
adc
mov
cmp
enter
scas
jle
leave
sbb
mov
or
icebp
ret
adc
mov
sub
push
inc
add
sbbl
cmp
xor
into
dec
inc
cmc
cmp
aad
inc
adc
stos
addr16
scas
aad
rclb
mov
outsb
call
test
adc
inc
fwait
sub
test
inc
mov
push
loope
mov
mov
sbb
push
les
fbstp
stos
loopne
outsb
xor
pop
xor
cli
js
push
adc
and
arpl
inc
mov
fs
mov
std
fisttpll
mov
pop
dec
icebp
and
pusha
fsubr
or
out
jecxz
outsb
jb
fwait
cmpsl
arpl
fstl
neg
jae
add
sbb
imul
stos
cmp
fcomps
dec
leave
push
add
push
xlat
adc
cs
outsl
sbb
cwtl
prefetch
or
shll
push
popf
lods
clc
mov
loopne
insl
inc
loopne
outsb
push
mov
xchg
test
or
mov
aam
or
stos
cmp
scas
mov
pop
mov
fwait
xor
push
pop
das
adc
jp
sbb
aam
shl
pusha
scas
cmpsb
cli
pop
adc
fs
ds
and
mov
and
pop
dec
jl
ficompl
fildl
insl
jle
das
push
mov
push
cltd
push
or
jo
cli
js
stos
shr
xorl
ret
inc
aad
mov
add
imulb
pop
pop
pushf
mov
inc
push
add
or
sti
adc
cmp
cmp
and
out
sti
fidivrs
mov
movswl
xchg
arpl
cmp
fldt
mov
dec
scas
inc
subb
mov
cltd
sub
in
push
cmp
movsl
js
aam
leave
test
pop
rcll
jecxz
pop
mov
enter
pop
and
inc
mov
mov
out
clc
or
cmp
adc
push
dec
sub
imul
xchg
bound
xchg
ret
adc
out
jo
pop
mov
fidivs
xor
inc
mov
push
push
xchg
sbb
dec
call
inc
mov
jnp
mov
push
sbb
test
xchg
lcall
or
mov
aas
adc
xchg
or
sbb
mov
mov
aad
fwait
adc
xor
jnp
int
bound
hlt
or
sub
std
lret
xorl
push
xchg
or
push
in
xchg
mov
lret
push
dec
inc
cmpsb
sbb
push
add
jne
subl
es
or
jnp
add
jl
pop
imul
out
subl
mov
orl
sbbl
sub
jecxz
movsb
xor
inc
js
lret
inc
cmpsl
repnz
push
or
cli
mov
loop
or
pop
pop
sbb
mov
lret
or
pop
sbb
mov
mov
mov
mov
jle
add
mov
lcall
jbe
jbe
cmpsb
mov
mov
push
cli
sahf
loope
push
faddl
jge
gs
cmp
pop
jl
inc
and
push
decb
mov
pushf
sub
push
idivb
pusha
adc
mov
inc
pop
popf
mov
stc
std
add
adc
pusha
sbb
mov
ss
test
xor
adc
mov
lret
xor
inc
pop
pop
aam
leave
adc
push
push
call
in
or
mov
mov
divb
bound
shrb
popa
pop
sub
pop
leave
insb
add
sbb
cmp
adc
mov
pushf
push
int3
fmuls
lret
sbb
mov
pop
pop
in
loopne
inc
divb
cmp
ficompl
aad
sbb
add
gs
add
pushf
push
jns
cmp
xacquire
xchg
jnp
push
mov
pushf
jmp
adc
cmp
pusha
jb
mov
jp,pn
lret
and
xchg
loop
outsb
lcall
dec
ljmp
pop
js
ja
and
dec
xor
stos
sbbb
pop
mov
movsb
cltd
mov
mov
pop
push
pop
imulb
inc
imul
push
scas
jb
sub
int
repz
fs
sub
frstor
test
sbb
mov
push
shrb
xchg
adc
mov
fldt
insl
mov
cwtl
and
int
jp
pop
sub
rol
mov
cmpsb
hlt
mov
cmc
stos
xchg
dec
xor
pop
mov
pop
rorl
cmp
sub
jno
sub
stc
jp
or
cmp
jmp
bound
mov
jge
pop
testl
push
cmp
lret
jmp
add
out
add
inc
dec
jmp
xorl
and
scas
mov
and
or
adc
loop
hlt
inc
and
cmp
outsb
cmp
sbb
add
aas
mov
xchg
loop
push
lea
int3
filds
push
add
add
test
adc
popa
dec
add
pop
sub
xchg
out
mov
clc
cs
lock
sbbl
pop
add
sbb
push
jmp
push
arpl
int3
dec
inc
sub
bound
add
fs
bound
fisttpll
int3
xor
mov
inc
nop
push
jno
mov
aaa
les
xchg
mov
fldt
adc
iret
lock
addl
into
pop
stos
pushf
inc
inc
inc
sbb
adc
sub
jle
pop
rcrl
daa
aaa
pop
fidivrs
jmp
add
lret
add
push
pop
xchg
push
popa
ds
filds
lods
push
jnp
scas
sub
leave
stos
daa
mov
popf
mov
repz
xor
add
mov
and
bound
loop
pop
fisttpl
aam
or
add
not
sub
push
cmc
xor
mov
rep
xchg
push
das
out
imul
xorb
xlat
push
push
pop
lock
mov
es
movsb
xchg
and
xchg
or
in
in
fwait
mov
push
mov
lods
fs
ffree
mov
out
fisttps
jge
mov
rcrl
jnp
cmp
jge
xchg
adc
aam
out
xor
jg
icebp
insb
push
sti
je
popa
call
inc
xlat
nop
mov
dec
int
mov
lds
pop
sbb
or
or
ret
ja
adc
push
fidivrl
sbb
xchg
jp
inc
pop
fstp
add
xor
xchg
bound
push
int3
jp
ss
xchg
mov
adc
loope
mov
or
pop
loop
in
add
jae
cmp
clc
mov
clc
push
xor
push
inc
sub
cld
into
sbb
pop
loopne
std
adc
sbb
fsubrs
fisubrs
add
mov
push
adc
sahf
push
sbb
aaa
mov
pushf
mov
repnz
leave
dec
repnz
jmp
sar
pop
repz
push
cmp
mov
lcall
popf
or
insb
mov
sub
push
push
lds
std
cmp
dec
jb
inc
pop
in
jmp
insb
pusha
mov
pop
test
adcl
test
fldenv
mov
sub
sbb
movsl
pop
sbb
add
push
notl
rcl
lock
adcl
std
insl
stos
sbb
decb
int
dec
xor
cmpsb
mov
mov
inc
js
pop
and
aas
cmp
inc
xor
mov
sbb
jl
mov
ja
pop
mov
lea
inc
push
bound
inc
pop
pop
jbe
xor
rolb
es
shl
push
popa
outsl
outsb
jb
mov
test
jns
data16
push
cs
mov
sub
fisubs
push
out
inc
push
fisubrl
lds
xor
stos
push
mov
pop
cmp
jg
sub
pop
cmp
loop
scas
les
push
ret
mov
dec
mov
lea
and
xchg
jecxz
shlb
loope
mov
add
cmp
pushf
aas
inc
pushf
jbe
je
or
dec
lods
dec
xchg
jge
jge
idivb
js
xor
and
dec
mov
out
lock
mov
or
and
loop
inc
add
lret
mov
cwtl
mulb
xor
test
cltd
cmp
mov
arpl
mov
adc
mov
jnp
loop
xchg
fistps
pop
adc
imul
insb
loop
popf
aas
sbb
and
movsl
cmpsl
add
lret
mov
xor
sub
adc
push
pop
test
fcompl
addr16
inc
jne
bound
push
or
imul
mov
add
mov
in
fs
test
ljmp
jg
call
jo
ljmp
xchg
pop
imul
scas
repnz
fcmovnbe
pop
xchg
mov
fcmovnbe
lds
lea
jp
mov
sub
repz
mov
out
xlat
test
xchg
leave
mov
lahf
popa
sub
xor
shll
stc
lods
lret
jae
fldl
pusha
js
stos
jne
in
cmpsb
mov
mov
mov
and
pop
mov
addr16
hlt
push
and
cld
clc
or
pop
ds
mov
popf
popa
aam
das
sbb
inc
or
cs
xor
psubsb
fmull
sub
add
adc
pop
ret
and
scas
mov
mov
jmp
fprem
lods
out
xchg
push
test
add
jp
das
test
mov
inc
es
add
arpl
add
js
add
jbe
pop
mov
push
aam
inc
mov
into
dec
sub
cmpsb
jbe
insl
jl
adc
push
cmp
xchg
or
fldenv
mov
dec
xchg
inc
stc
adc
ljmp
pop
cmpsl
pop
mov
mov
sub
cmp
cmp
insb
jbe
iret
mov
loopne
ret
icebp
ljmp
push
inc
movsb
test
inc
out
pop
cld
test
scas
ret
popa
xor
jno
sbb
enter
ss
lods
mov
sub
push
in
and
jne
xchg
imul
outsl
test
xchg
inc
fidivrl
lahf
pusha
jl
popa
mov
mov
mov
std
ja
cltd
filds
cmp
or
mov
add
fyl2xp1
int
xor
int3
inc
lods
mov
sub
push
cmp
sbb
stos
imul
xchg
sub
xchg
mov
jbe
xchg
es
stos
cli
test
fsubrp
arpl
push
xchg
addb
ja
cmc
js
pusha
cwtl
sbb
subb
daa
pop
push
add
mov
rorl
pop
ss
xor
and
mov
push
sarb
dec
insl
jnp
lahf
stos
push
or
dec
popf
movsb
xchg
push
mov
add
pop
lcall
clc
test
xchg
sbb
mov
jecxz
push
cmc
insl
in
pop
mov
jno
and
pop
add
adcb
adc
cmpsl
fimull
imul
repz
popa
ret
pop
inc
sbb
mov
mov
cmp
popa
aam
data16
sub
out
cmp
and
cltd
call
push
and
push
inc
psrad
int
xchg
andb
mov
test
loope
jmp
sbb
movsb
pop
loope
test
jno
push
or
bound
ficoms
xchg
lock
push
stc
jge
mov
pop
ret
addr16
pushf
xor
test
call
push
mov
xchg
adc
hlt
jno
jbe
jb
xor
dec
cmpsl
adc
sbb
or
mov
dec
sar
xchg
punpckhbw
or
push
loop
ficomps
add
insl
aas
lods
orb
xor
leave
inc
sbb
insb
ret
rol
out
lds
cmp
push
pushf
into
mov
movsl
gs
inc
cmp
dec
push
push
or
daa
sub
shl
mov
jecxz
arpl
movsb
and
cmp
in
stos
fs
pop
and
nop
lock
jno
scas
decb
sbb
mov
shlb
and
cmp
dec
dec
xchg
mov
rcrl
add
ljmp
cmp
adc
pop
sbb
add
mov
xorl
inc
movsb
xor
inc
scas
cltd
mov
insb
pop
js
jmp
mov
ljmp
cmp
mov
xor
xlat
push
and
mov
nopl
ret
iret
ja
inc
mov
testl
repz
fcomip
dec
dec
jge
jne
cwtl
repz
imul
outsb
push
xor
mov
dec
outsb
adc
wbinvd
inc
mov
cli
out
mov
int3
push
inc
push
fisubs
cmpsb
jle
adcl
push
jl
in
xlat
fwait
mov
pop
pop
iret
jp
out
scas
xor
sbb
int3
cmpsl
dec
ja
lret
outsb
cwtl
cmpsb
loopne
jp
lahf
movsb
xor
aam
sbb
int3
pop
xchg
mov
or
iret
inc
mov
repz
cmpsb
inc
insb
std
push
jne
test
cmp
sbb
bswap
fidivrs
hlt
jmp
cmp
dec
ja
mov
push
filds
dec
cmpl
pop
mov
sub
mov
dec
scas
flds
stos
inc
pop
inc
push
aaa
repz
cs
dec
sti
notb
pop
or
loopne
mov
loopne
lea
inc
jbe
adc
xor
adc
sub
push
dec
add
jle
xor
nop
addr16
cli
or
sbb
std
into
jle
mov
add
pop
xor
mov
loop
sub
add
and
dec
aam
mov
das
or
sahf
arpl
aad
ljmp
loop
xor
movsb
out
out
jge
gs
test
adc
jp
cs
jg
add
fmulp
in
pop
gs
inc
pop
je
sub
arpl
cs
int3
jmp
inc
dec
sbb
jecxz
test
adc
out
mov
sbb
cli
hlt
stos
or
or
in
out
cltd
mov
notb
lods
xor
aas
adc
pop
xor
les
lcall
mov
subb
mov
data16
in
lret
xor
cmp
jnp
adc
inc
cmp
mov
cmc
jmp
mov
xchg
sub
rol
out
loopne
je
jns
je
cmp
fidivs
push
jo
into
ds
add
out
neg
mov
pop
cs
cmp
jp
sub
out
cli
sti
cmpsl
out
add
into
inc
lcall
ret
jo
pusha
mov
ds
out
movsl
iret
mov
test
imulb
ss
in
hlt
cmp
pop
shlb
pop
jg,pn
jge
notl
lock
lods
push
mov
dec
adc
in
dec
test
popa
popf
push
inc
into
pop
or
cmpsb
pop
dec
out
push
and
sub
dec
cs
sub
or
imul
mov
out
imul
add
pop
pusha
repz
mov
or
lods
cwtl
xchg
pop
in
push
test
das
lea
dec
pop
inc
outsl
shll
aas
ljmp
pop
pushf
inc
mov
jge
rcrl
cmp
sbb
jb
pop
aad
lock
xor
xchg
sbb
cwtl
push
data16
inc
call
jbe
xor
dec
mov
add
mov
mov
leave
sub
xor
jmp
sbb
xlat
nop
mov
jb
adc
mov
cld
cmp
mov
rol
cld
mov
xchg
and
jle
leave
jmp
add
add
jg
das
or
xor
pop
mov
xchg
mul
lret
fisubl
jge
rclb
push
std
leave
arpl
and
push
repz
lods
sub
cld
gs
in
jecxz
mov
mov
subl
mov
pushf
stos
into
cmp
jbe
ret
out
cmp
fisttps
jp
es
mov
sub
push
or
push
iret
push
inc
sti
adc
inc
xor
push
push
mov
int3
sub
pusha
imulb
sahf
fldt
jp
inc
mov
mov
jl
sub
movsl
adc
nop
sub
jae
aas
cmp
pop
pop
adc
pop
ror
pop
or
adc
xchg
mov
in
jns
mull
stos
stos
lahf
sahf
inc
mov
les
push
pop
push
mov
or
loope
push
sti
pop
mov
in
shr
insl
out
inc
add
scas
xchg
xchg
outsl
mov
lods
popf
push
in
pop
push
or
add
xchg
pusha
and
inc
inc
cmp
xchg
loop
jo
inc
jl
xor
sub
inc
jl
xor
adc
cld
inc
sub
xor
xchg
sbb
ja
xor
loopne
adcl
jns
jo
bound
cmpsb
mov
jns
jp
xor
mov
cmc
jp
mov
xchg
test
sti
sahf
mov
mov
mov
inc
xor
sub
inc
adc
decl
lcall
dec
mov
push
int3
mov
mov
sub
sti
sub
pop
and
aam
enter
lret
jno
xchg
or
insb
test
in
inc
xchg
mov
incb
jp
pop
cmp
clc
push
sub
shrl
cmp
leave
mov
xor
cmp
les
test
insb
and
push
mov
sti
imul
scas
add
shrb
movsb
cmp
pop
jae
push
scas
cmp
cmpsb
call
iret
loop
pop
in
pop
cmp
xor
fcmovbe
cmp
outsl
inc
add
popl
xor
inc
mov
sahf
sub
lret
fs
add
outsb
and
xchg
outsl
loope
sub
insb
xchg
jne
mov
ret
add
popa
ljmp
lcall
jo
adc
mov
dec
jg
clc
cmp
inc
mov
bound
fimuls
fs
push
clc
aad
and
rcrl
enter
lods
jp
add
cld
rolb
xchg
sbb
movsb
add
rolb
push
lahf
mov
push
pop
stc
push
out
fistps
and
push
xchg
push
int
push
sub
sar
scas
loope
sbb
jle
push
add
mov
sub
push
jg
pop
dec
xchg
lcall
or
pop
jbe
aam
and
pop
and
mov
arpl
lds
in
push
dec
or
imul
sbb
pop
mov
daa
inc
insb
lahf
addl
lds
push
imul
sti
xchg
fwait
shrl
call
or
pop
pop
or
insb
fdiv
sbb
fiadds
push
mov
fisttpl
negl
flds
and
mov
rol
jg
loop
cmp
in
leave
or
pop
fcomp
aam
sbb
loopne
push
out
roll
or
dec
insb
ds
out
pop
shrl
mov
inc
inc
mov
shlb
fsub
jno
in
popa
mov
cmp
cwtl
jae
cmp
aaa
push
push
lods
pop
or
jno
jg
inc
add
sub
cmp
enter
add
or
cmp
fsub
cmp
mov
mov
and
and
sub
mov
xor
shlb
pop
inc
shl
lahf
sbb
push
jae
lock
daa
dec
mov
stos
pop
mov
adc
sub
push
loopnew,pn
xchg
out
arpl
stos
push
lods
fidivrs
leave
enter
sub
int
xchg
fstpt
popa
sbb
xlat
lahf
ljmp
loope
pop
ret
add
sbb
fildl
aaa
add
imull
lods
iret
cmp
inc
incb
adc
xchg
mov
arpl
jp
stos
inc
gs
in
in
add
ret
and
xchg
stc
stc
sub
sbb
gs
jo
sahf
out
shl
test
xlat
ds
scas
clc
add
test
rclb
pcmpeqb
cli
push
ret
mov
mov
xchg
das
inc
sub
jmp
sbb
ds
mov
fistl
incb
shlb
jne
fs
andb
dec
mov
fisttpll
mov
mov
jmp
sbb
cmp
addb
jle
dec
add
pop
test
sub
or
daa
lcall
fisubrs
push
add
jle
in
cmp
es
inc
mov
popa
les
leave
push
dec
dec
adc
adc
cmpb
mov
cmp
daa
mov
cli
loop
stos
adc
hlt
inc
cwtl
rcll
rcrl
testl
test
fiaddl
test
cli
and
subl
cmp
jb
repnz
adc
cmp
and
or
data16
jge
adc
mov
pop
std
js
add
sarb
cmpsb
ds
cmpsb
scas
add
cmpsl
sub
loope
arpl
orl
dec
into
popf
ficoms
shlb
push
inc
and
and
xorl
iret
lret
mov
xchg
mov
ja
repz
dec
call
jbe
out
or
sahf
inc
les
sub
adc
lock
int3
inc
into
leave
jecxz
loopne
lods
call
push
repz
out
dec
mov
sub
out
push
das
aad
mov
xchg
push
lcall
mov
inc
leave
mov
jl
jecxz
pop
pop
sub
inc
mov
sbb
push
das
push
sbb
add
adc
adc
jnp
imul
inc
mov
mov
imul
loop
jne
lods
xor
les
inc
ljmp
lahf
stos
lcall
enter
or
mov
and
in
and
dec
fs
push
sbb
mov
scas
mov
mov
mov
clc
push
add
fisubs
and
push
sbb
push
xchg
fcmovbe
imul
xchg
mov
loope
mov
jge
push
cmpsl
add
mov
mov
inc
mov
mov
push
fwait
nop
sbb
loopne
in
adc
jl
hlt
lods
cmc
dec
lds
sub
or
imul
into
and
lcall
pushf
cmp
mov
push
push
mov
mov
cld
and
sbb
sti
and
aaa
les
ret
sub
lret
fnstcw
or
aas
fwait
cwtl
pushf
scas
test
add
popa
jge
or
fildll
je
add
imul
in
dec
sti
inc
fidivs
std
cmp
adc
cli
xchg
outsb
mov
dec
cmp
outsl
sub
test
jo
xchg
push
mov
adc
clc
popf
lahf
shrl
inc
test
xchg
mov
addr16
dec
pop
fucomip
mov
mov
xchg
idiv
mov
out
mov
lret
mov
xlat
jl
ficoml
mov
loop
ret
ja
xchg
jl
ja
fisubs
xor
sub
mov
mov
push
xor
test
lods
inc
fldt
fwait
es
push
jmp
stc
lock
inc
scas
test
insl
and
xchg
lret
lea
out
cmp
cld
add
xchg
or
sbb
sub
das
pop
shll
je
jmp
add
xor
popa
xchg
loop
out
scas
cmp
mov
jbe
cmpsb
mov
arpl
mov
test
add
repz
cmp
mov
lret
test
push
dec
stc
lea
mov
sbb
in
lret
lock
aaa
jbe
test
xor
out
xor
sub
and
mov
stos
jno
mov
mov
popa
mov
jg
xlat
ja
push
mov
sbb
pop
mov
iret
jo
and
sti
lahf
inc
test
push
daa
pop
stc
mov
stos
cmp
aam
pop
jp
dec
or
insb
arpl
dec
inc
pop
stos
cmp
hlt
cmp
int
sbb
add
outsb
repnz
fadd
pop
je
dec
mov
inc
cmp
xlat
dec
sbb
mov
imul
int3
lods
inc
filds
ja
push
or
movsl
sbb
add
int
xlat
adc
xchg
popa
daa
or
scas
mov
ljmp
repz
and
cmp
xchg
outsb
inc
insb
into
pop
sar
pop
icebp
mov
jae
mov
push
iret
xchg
aam
adc
loope
push
pop
jne
je
dec
xor
mov
aam
or
sbb
pop
out
push
xchg
xor
gs
mov
aas
sub
xchg
lahf
cmp
and
sbbl
stc
ret
sti
dec
pop
add
out
mov
lods
lock
test
ljmp
push
jbe
cmp
xorb
mov
js
and
jl
daa
mov
push
lds
psllq
lahf
mov
int
adcl
xchg
sub
xchg
cs
cmp
andl
xchg
hlt
push
and
mov
ret
insb
lock
adc
cmpsb
cmc
or
iret
pop
movsl
jg
btl
sub
mov
mov
inc
iret
add
cmp
or
nop
pop
outsl
xor
popa
cwtl
xor
lcall
add
mov
xchg
mov
mov
ljmp
mov
das
jp
mov
outsb
cltd
inc
into
dec
push
jp
xor
ret
pop
mov
adc
mov
test
or
mov
nop
or
dec
xor
loop
mov
pusha
sub
or
imul
addl
cmp
sbb
add
stos
and
mov
clc
cmp
popa
mov
dec
dec
and
jecxz
arpl
xor
lcall
push
xor
js
movsl
adc
mov
fsubl
add
mov
int3
aaa
inc
lds
sub
jmp
cmpsb
lret
push
fnsave
cmp
lret
jne
int
call
mov
stos
sub
xlat
fstl
adc
nop
bound
stos
add
push
shr
dec
fnstcw
pop
rorb
hlt
sahf
dec
insb
fisttpll
sub
frstor
mov
jmp
aaa
jae
cmp
mov
popf
mov
aaa
sbb
mov
dec
sub
adc
dec
push
xchg
movsb
ret
leave
xor
sbb
or
sub
out
fistpl
mov
shlb
jle
lahf
push
lea
pusha
and
sbb
cmc
mov
xor
lock
cli
xchg
mov
mov
lds
xor
sub
pop
pushfw
ljmp
sub
into
cmp
sahf
loopne
mov
fdivr
cmp
lcall
xor
mov
push
and
mov
sbb
shlb
inc
mov
xor
pop
rcll
in
ficompl
repnz
movsl
add
and
ja
data16
cmp
sbb
xor
loop
sbb
xor
dec
sbb
rorl
ljmp
push
jno
xchg
add
fwait
jae
out
push
js
add
sub
push
push
bound
xor
mov
gs
mov
sbb
aad
mov
push
addr16
mov
cmp
ret
mov
fst
int
es
mov
push
lds
xor
push
xchg
movsb
sbb
sbb
dec
xor
xor
push
subb
sub
bnd
mov
cmp
fiadds
out
xchg
je
sbb
push
sbb
sbb
mov
pop
add
stos
insb
mov
leave
arpl
popa
adc
shl
inc
and
fwait
dec
cwtl
lret
dec
push
sahf
jae
jns
cmpsb
mov
or
stos
cmp
xchg
inc
negl
sub
mov
jle
lds
rorl
incb
pop
push
dec
mov
fcoms
imul
push
adc
shlb
pusha
int3
jo
rcrb
es
movsl
pop
inc
xchg
leave
nop
inc
sahf
test
ret
rorb
mov
mov
inc
sti
sbbb
leave
sti
jae
push
pop
sbb
orl
jne
jne
xor
dec
dec
shr
repz
pop
jns
les
je
dec
sbb
ds
cmc
jmp
mov
fsubr
mov
gs
jo
dec
inc
sbb
gs
adc
jne
jns
lcall
scas
adc
mov
int
in
xchg
fstenv
stc
mov
ror
adc
out
xor
or
jp
sub
aas
xchg
add
pusha
out
push
out
hlt
sub
lock
cs
imul
inc
sub
xchg
out
mov
inc
ret
or
popa
xchg
jmp
setae
sub
icebp
mov
notb
inc
sub
pop
lds
ljmp
loop
pop
sbb
insb
or
cmp
sub
testl
insl
or
int
lods
dec
jns
stos
cmc
fs
jb
mov
jecxz
rcl
or
outsb
mov
rdpmc
test
movsl
xchg
inc
test
push
inc
push
inc
aas
divb
mov
push
aam
add
roll
xchg
sub
xor
std
push
pop
adc
pusha
rcrb
lret
ljmp
outsl
aas
mov
cmc
mov
stos
add
cmp
mov
inc
repnz
push
std
inc
jo
pop
or
pushf
adc
cwtl
adc
das
jnp
leave
sub
pop
fs
dec
out
dec
in
imul
and
xchg
call
dec
mov
in
dec
rcll
mov
mov
inc
add
xchg
jo
jb,pt
rcrl
stc
ss
dec
ficompl
adc
scas
sahf
sbb
adc
les
fs
cltd
xor
or
pop
xlat
cli
mov
mov
cmpl
or
fstp
call
dec
sbb
xchg
mov
daa
jecxz
out
xorps
test
in
shl
inc
je,pt
aas
adc
pop
int
loop
int3
test
add
xchg
test
mov
pop
lea
iret
insl
or
pop
jp
or
loope
test
mov
ret
or
imull
jo
or
mov
adc
xor
aam
xchg
ja
fmull
mov
inc
js
rcll
mov
out
push
test
int3
das
mov
xchg
push
scas
jg
bound
ror
scas
mov
out
adc
stos
insl
in
sbb
push
and
sbb
outsb
add
dec
out
loope
xchg
jmp
test
test
enter
pushl
lock
and
out
sti
add
inc
loopne
pop
fstp
mov
test
mov
push
std
pop
mov
in
sbb
subl
lcall
fimuls
lahf
in
lret
addr16
inc
mov
sahf
jmp
inc
xlat
mov
sub
popf
je
dec
push
adc
and
push
dec
les
sub
arpl
sub
sbb
push
cwtl
aas
sbb
mov
aaa
rcll
test
lods
mov
mov
std
lds
or
pop
and
ss
lret
clc
pop
jge
mov
mul
push
or
adc
int
daa
mov
aaa
xchg
mov
inc
rclb
dec
jp
aam
push
sti
dec
insl
dec
push
inc
and
xlat
sub
roll
insb
aaa
pop
nop
mov
divl
addr16
test
cmpsb
fcomps
pop
mov
incl
repnz
jge
add
jae
and
mov
or
dec
stos
fsubp
out
xor
or
jecxz
test
dec
in
xchg
sub
loop
repz
and
add
das
daa
inc
and
out
andl
pop
lods
cmp
cmp
pop
int3
hlt
jne
out
mov
mov
sbb
lret
dec
pop
es
dec
mov
sub
out
aaa
pop
lods
inc
sub
dec
lret
inc
dec
ljmp
xchg
mov
jno
pop
or
fidivrs
ret
test
mov
aam
push
int
xlat
adc
push
mov
lahf
sub
xchg
stos
jne
popa
je
incl
mov
scas
mov
fildll
xor
and
or
dec
push
inc
inc
mov
mov
and
aad
xchg
fsubs
sarl
aas
pop
xor
aaa
xor
cli
divb
sti
mov
inc
movsb
cwtl
outsb
fcmove
sbb
in
adc
lret
loope
sbb
pop
bound
and
pop
sub
leave
arpl
lods
inc
test
pop
fstpl
sarb
repnz
add
xchg
test
sub
cmpsl
mov
daa
cmpsb
inc
call
lods
xchg
xor
push
scas
fcompl
inc
adc
out
pop
or
adc
lcall
or
aad
jge
popf
test
jg
dec
dec
outsl
push
pop
xor
jmp
ret
or
sub
dec
mov
out
or
adcb
ss
xchg
inc
mov
lcall
stc
mulb
xchg
sub
sub
das
xchg
pop
ds
push
jbe
cwtl
rcrb
jl
add
rcll
inc
xor
lea
ss
push
mov
mov
std
sti
pop
dec
sub
mov
sub
xchg
sub
mov
sti
in
cmp
mov
rorb
dec
or
jbe
mov
aam
shr
daa
add
xchg
pop
rclb
add
scas
lret
pop
pop
stos
xchg
insb
popa
add
dec
xchg
mov
popf
insl
cmp
sti
xor
je
or
adc
pop
hlt
test
out
je
adc
adc
rcrb
in
ror
mov
add
pushf
mov
aam
je
loop
add
ret
mov
fimuls
fbld
xor
mov
sub
mov
lret
xor
mov
es
call
mov
jg
and
mov
lcall
sub
sub
stos
dec
pop
or
jle
shlb
fadds
push
pop
and
xor
psllq
cmp
push
xor
mov
mov
jle
pop
nop
enter
push
data16
pop
mov
fwait
outsb
lahf
mov
jo
out
pushf
push
sub
jnp
dec
add
call
fwait
xchg
das
setl
test
dec
fwait
rcrb
mov
cmp
dec
cmpsl
leave
push
test
test
sti
cmp
mov
in
cmp
lods
pop
ljmp
adc
jne
xchg
pop
outsb
pop
and
fcoml
testl
imul
lods
pop
loop
js
movsl
lcall
xchg
mov
pop
mov
mov
mov
add
jmp
add
or
in
out
loopne
jmp
pop
imul
push
xchg
int
mov
lea
dec
jg
imul
adc
mov
scas
mov
mov
or
jne
sub
insl
and
push
inc
fimuls
pop
adc
mov
lret
cld
sub
dec
lock
mov
lods
mov
lds
mov
cli
xor
fucomp
mov
mov
jge
cwtl
cmpsb
pop
jp
xchg
lods
fwait
inc
out
fnsetpm(287
movsl
rorb
add
inc
mov
inc
xchg
mov
jbe
rol
scas
pusha
mov
aad
dec
push
mov
xor
rcll
out
push
push
lods
aas
icebp
shlb
adc
mov
mov
xchg
adc
add
test
xlat
fiadds
xchg
sahf
push
cmp
cmp
loop
roll
mov
push
lds
jecxz
pop
into
xor
std
dec
mov
push
shrl
jno
dec
lods
sti
bound
push
mov
jmp
or
enter
pop
insl
test
inc
mov
test
fndisi(8087
cmpsb
dec
enter
rcr
mov
cld
movsb
xchg
or
gs
lds
testl
data16
dec
jle
add
stc
in
pop
shlb
sbb
xor
adc
pop
in
add
ds
and
popf
lods
and
jno
push
pop
test
mov
addr16
pushf
add
jp
test
inc
shlb
push
enter
sub
pop
cmpb
jmp
mov
lods
fsts
sub
js
je
dec
lods
stos
movsl
xchg
pop
mov
lock
es
popf
xchg
xchg
cld
add
arpl
subl
cld
leave
pop
lea
inc
clc
js
iret
sub
inc
mov
cmpsb
sti
sub
cmp
cwtl
in
or
jmp
in
sub
rcrb
testb
dec
cmp
in
faddl
add
sbb
lods
xor
fnstsw
enter
fnstsw
push
sub
cmp
pop
dec
xorb
xchg
ret
mov
test
pop
ret
mov
jle
xchg
jp
lods
mov
enter
das
fwait
push
xchg
pop
std
loopne
in
mov
shlb
inc
mov
dec
adcl
and
jecxz
mov
cmp
sub
jl
sbb
ljmp
mov
inc
mov
das
lret
inc
rorb
xchg
leave
pop
sub
and
sbb
jae
jg
pop
repz
inc
push
divps
mov
mov
adc
mov
cmc
sbb
inc
roll
mov
arpl
sbb
mov
jno
aaa
into
popl
mov
shr
repz
insl
add
push
imul
jno
mov
ja
int
nop
cld
push
mov
test
jne
or
pop
lcall
inc
push
data16
ret
adc
mov
dec
xchg
fs
sub
xchg
test
or
int
lock
adc
cmp
xchg
cmp
and
push
imul
rol
ret
ljmp
jle
xchg
clc
xchg
lcall
cwtl
mulb
andw
arpl
lahf
xchg
inc
testb
lea
pop
push
cmc
and
rcrl
lds
mov
push
pop
cmp
or
sub
insb
ficoml
mov
adcl
popa
test
loop
repnz
sbb
sub
mov
repnz
mov
out
jne
jne
mov
mov
sub
lcall
jns
xor
adc
dec
xchg
pusha
jbe
pop
in
out
inc
cmp
jae
adc
in
push
repnz
adc
testl
popa
inc
or
out
or
mov
hlt
dec
dec
inc
cld
stos
outsb
stos
bound
out
test
int3
orb
fstpl
fsts
dec
lock
in
rcll
jns
jmp
or
sub
fisubl
inc
add
add
int3
jmp
psadbw
sahf
mov
insb
push
push
dec
fnstsw
lea
aam
gs
int3
mov
idivl
out
lods
fistpl
addr16
xchg
xor
add
blcmsk
cs
mov
cmp
scas
stc
nop
loope
pusha
daa
push
nop
in
jb
les
stc
and
arpl
adc
cmp
and
sub
stos
and
xor
fcoms
ds
mov
int
xchg
ret
sarb
cmp
mov
pop
imul
fwait
enter
pop
push
paddusb
add
shlb
cmp
fs
jg
xor
xor
es
scas
call
mov
inc
dec
or
insb
xlat
test
cwtl
or
fidivrl
push
pop
add
adc
mov
cmp
jbe
pop
cmpsl
movb
xchg
fnsave
or
adc
lods
sub
push
mov
mov
mov
std
cmp
adc
cmp
pop
ret
dec
stos
push
scas
jle
scas
sbb
mov
fisubl
cs
pop
dec
lea
sub
cmpsb
and
lret
ret
int
lods
movsb
mov
xor
fsincos
fwait
ljmp
cmovo
sub
inc
outsl
aad
xchg
xchg
jo
or
fcmovu
add
xchg
push
loop
stc
or
jecxz
test
cmp
add
out
or
imul
movsl
mov
mov
pop
in
cmpsb
ljmp
ss
sahf
mov
lock
pop
cwtl
stos
pop
xor
stos
pop
pop
filds
dec
adcl
addb
xchg
add
rorl
nop
xchg
sub
sbb
mov
jle
clc
sub
outsl
inc
pop
out
mov
and
fistpl
inc
in
dec
inc
cmp
mov
loop
jne
xor
shrb
jmp
push
jg
push
sbb
pop
repz
mov
add
outsl
jbe
mov
sbb
adc
and
insl
mov
imul
mov
or
loope
cltd
leave
adc
out
movsl
xor
inc
test
aaa
in
test
outsl
mov
gs
mov
cmp
push
ss
mov
lret
arpl
pop
cmp
mov
pop
test
int
adc
and
xchg
les
or
sbb
jg
push
incb
or
pop
fs
push
fcmovbe
orps
jnp
add
xor
jp
jno
call
dec
jmp
lock
pminsw
mov
rcrb
jno
lret
nopl
push
push
ret
sub
dec
lret
cli
jle
pop
popa
adc
xchg
pop
push
bound
xchg
aam
int
pop
adc
daa
loope
mov
mov
adc
jnp
cmpsb
pop
loopne
sbb
push
xchg
pop
aas
jno
dec
xchg
das
and
mov
stc
mov
clc
xor
sbb
arpl
xor
cli
aam
xor
push
sbb
fimull
push
push
or
xchg
add
sub
cltd
imul
out
adc
xor
xchg
xchg
int3
jge,pn
ljmp
negb
mov
test
jne
out
cld
mov
and
cwtl
mov
jl
sub
cmpsb
cmc
inc
sbb
cmp
sub
cmp
mov
rcl
in
mov
stos
inc
pop
arpl
popf
sahf
and
xchg
pushf
sbb
dec
stos
jae
xchg
in
into
cld
mov
sbb
dec
movsl
out
cmpsl
pushf
cmc
jnp
jg
pop
lods
aam
outsl
and
inc
js
sub
mov
scas
mov
mov
jbe
xchg
or
loop
pushl
jmp
inc
mov
jae
iret
cwtl
push
adc
cmp
cmp
xor
xlat
sub
xchg
sbb
out
dec
push
loope
push
xor
mov
lahf
push
jnp
dec
cwtl
mov
push
dec
ja
push
xchg
adc
mov
int3
xchg
and
xor
add
cwtl
xchg
or
scas
pop
inc
out
push
pop
pop
mov
in
cli
repz
mov
sbb
jmp
mull
ret
enter
sbb
pop
je
dec
push
xchg
sbb
popa
sbb
jns
pop
lret
stos
fidivrl
xchg
pop
out
pop
mov
adc
dec
jns
imul
pop
fisttpl
fmulp
jle
push
adc
and
shlb
and
inc
and
idivl
cmpsl
rcll
xor
ret
cmp
cmp
lret
les
and
hlt
dec
sbb
arpl
push
adc
cmc
mov
mov
es
lcall
push
jmp
push
cmp
aad
data16
mov
mov
and
sbb
sub
jno
cmp
int3
inc
fiadds
push
sahf
sub
mov
adc
out
push
jno
and
clc
xchg
jecxz
lret
imull
mov
loopne
and
bnd
inc
add
inc
repnz
pop
divl
iret
and
sbb
push
dec
test
out
sub
stc
sbb
sub
wrmsr
pushf
sti
lcall
test
mov
dec
sbb
cmp
aam
or
ja
push
imul
int3
lret
jne
sub
stos
or
cwtl
test
push
ret
hlt
jbe
enter
test
cs
fcoml
sub
pop
dec
sahf
mov
popa
shll
jne
imul
aaa
cmp
ror
stos
pop
mov
pop
sahf
lahf
pop
sub
scas
mov
jmp
js
lods
mov
mov
cmpsb
sbb
xchg
inc
movsl
daa
fiadds
movsl
add
inc
sbb
xchg
shlb
cmp
push
data16
sub
mov
nop
enter
pop
or
daa
in
scas
pop
mov
or
and
lret
xchg
cmp
pop
mov
in
push
xor
xchg
xor
aaa
push
mov
and
fadds
mov
jne
sbb
sbb
lods
cltd
stos
mov
sub
imul
roll
inc
and
je
jmp
cmp
loopne
popf
daa
pop
test
shll
call
sbb
adc
clc
and
ss
lret
gs
push
pop
adc
fdivrs
mov
sub
incl
or
movsl
and
aad
arpl
add
mov
mov
mov
lret
adc
loope
dec
jmp
insl
push
sub
mov
stc
sub
les
outsb
cmpsb
mov
cmp
lcall
jno
movsb
mov
push
adc
dec
and
push
pushf
push
adc
sub
test
negl
sbb
test
out
ds
jg
sub
cmp
inc
sbb
jno
xchg
push
adc
adc
xor
push
movl
lss
lcall
ret
cmp
adc
movsb
stos
outsb
or
bound
fs
bound
stc
jg
addl
and
xchg
dec
adc
inc
lods
stos
cmp
dec
popf
ret
rorl
mov
and
jge
outsb
sti
jae
and
xlat
sub
dec
push
cmp
sbb
push
test
lahf
jp
mov
pop
out
inc
jp
fs
push
mov
or
xchg
sysenter
dec
fsubr
mov
in
xchg
jae
sbb
push
fcmovnu
popf
add
decl
popa
mov
mov
push
jns
test
fsub
ror
sbb
int3
mov
and
andb
dec
fwait
sub
lds
dec
inc
pop
imull
xchg
mov
add
sbb
int3
sbb
jp
call
cmp
dec
pop
nop
mov
pusha
mov
dec
sbb
xchg
xor
jl
repz
shlb
cmpsl
xorb
jge
or
or
mov
pop
scas
aam
mov
mov
in
and
mov
push
jecxz
fisttpll
pop
xchg
pop
sub
mov
data16
loop
cld
js
mov
add
mov
push
into
subl
inc
out
pop
mov
mov
mov
dec
jnp
add
sbb
fcompl
push
popa
lcall
lods
sbb
pop
and
mov
mov
mov
pop
test
mov
push
dec
mov
xchg
mov
add
daa
adc
cmp
dec
fmul
mov
sub
xor
aas
jp
xchg
xor
and
xchg
pop
adc
enter
iret
pop
mov
scas
cltd
lock
xchg
xor
cltd
xor
sub
inc
sub
adc
popa
cmp
and
ret
daa
inc
and
pop
xlat
int3
stc
fwait
in
inc
mov
fcomip
jne
xchg
mov
cmpsl
out
pop
pop
mov
nop
xor
nop
inc
into
out
or
xor
push
cltd
dec
xchg
addb
sahf
push
sub
pop
clc
jecxz
lahf
lret
pushf
sub
inc
jmp
lcall
imul
jo
enter
lcall
or
mov
gs
push
xor
mov
and
movsl
ja
out
sbb
inc
into
mov
jmp
movsb
or
scas
push
inc
dec
mov
and
lea
bswap
out
lods
dec
mov
fmull
pop
sarb
icebp
out
filds
mov
iret
inc
mov
adc
mov
xchg
icebp
push
sbb
test
into
adc
push
mov
xchg
stc
imul
stos
hlt
push
mov
insl
pop
xchg
sbb
inc
jns
mov
gs
insb
inc
rcrb
inc
jecxz
jnp
cmp
orb
mov
mov
xor
lods
cmc
bswap
mov
adc
cmc
dec
mov
fadd
sti
fdivrs
mov
push
lcall
fdivp
cltd
jp
iret
mov
jmp
shr
or
add
inc
loopne
inc
cmp
lods
data16
sbb
jne
fnstcw
imul
pop
pop
hlt
or
sub
ret
lds
in
inc
add
mov
sbb
sti
adc
jp
dec
mov
loope
jnp
jge
mov
pop
lock
loope
loopne
icebp
lret
jns
clc
xor
pop
pop
pop
and
stos
aas
ret
ja
mov
or
jecxz
inc
sub
push
xor
push
or
cmp
pop
dec
dec
push
push
add
lods
adcl
ljmp
jle
lds
repnz
enter
mov
push
mov
pop
pop
sahf
pop
mov
sbb
lret
xor
jmp
push
push
in
addb
faddl
rorb
and
test
mov
push
mov
mov
lock
sub
or
test
and
ficomps
add
or
cmove
xor
in
shlb
repz
jae
inc
jmp
das
sub
or
jae
fwait
lods
inc
push
stos
push
cmp
xchg
and
cwtl
xchg
mov
dec
mov
fiaddl
gs
sbb
push
mov
daa
or
aas
clc
out
adc
addl
lret
div
inc
mov
add
mov
adc
xchg
shrb
push
subl
lcall
mov
adc
xchg
lods
scas
cltd
fnstenv
jb
fdivrs
sbb
insb
sub
fs
add
cmp
adc
sbb
cmp
cmc
loopne
cmpsb
sbb
xchg
mov
jecxz
lods
mov
imul
jns
cmc
fs
xor
mov
xor
out
add
loop
inc
cmpb
xchg
or
cmp
jbe
inc
jle
repz
out
jmp
shll
mov
enter
push
ljmp
notl
lea
jbe
jb
or
jmp
pop
fnstcw
mov
in
cld
xor
pop
fistl
xor
pushf
jnp
lock
lock
movsl
sub
cmp
fidivrs
add
lock
mov
inc
pushf
outsl
adc
or
repz
pop
in
pop
mov
lods
addr16
mov
and
jb
lahf
adc
xlat
xchg
mov
add
sub
repz
mov
mov
xor
out
pop
mov
cmp
push
pop
add
pop
icebp
movsl
test
lds
dec
mov
test
push
lods
adc
jle
mov
pop
mov
dec
arpl
adc
pop
mov
inc
inc
scas
jle
cmp
pop
pop
ljmp
inc
push
jo
mov
sub
lods
cmp
out
and
pop
sbb
sbb
test
mov
clc
dec
iret
mov
les
mov
or
lret
mov
add
lret
sub
cmpl
adc
or
pop
sub
xor
cmp
mov
and
mov
mov
sbb
dec
pushf
or
lods
sub
insl
push
xchg
ja
jl
test
xor
pusha
xor
addr16
sub
int3
push
fcomip
add
mov
mov
cld
xchg
cmp
lods
mov
scas
mov
pop
or
sbb
push
dec
lods
sbb
sbb
jbe
imul
cmp
mov
xchg
xor
jl
push
punpckhdq
lcall
xchg
jp
xorl
sbb
xchg
inc
jae
mov
push
push
add
mov
aad
mov
sbb
dec
daa
jl
mov
lock
push
inc
and
jns
xchg
mov
mov
aaa
mov
xor
outsl
mov
dec
jecxz
ljmp
popf
pop
xchg
cli
or
pop
pop
cli
push
fisubl
in
leave
out
insb
ds
or
and
dec
adc
inc
jecxz
mov
pop
mov
cwtl
out
jge
lcall
in
jge
nop
jae
rcrb
xor
clc
in
scas
lret
pusha
stos
dec
hlt
xchg
repz
push
repnz
ljmp
push
test
cld
adc
sarl
inc
in
xchg
and
or
mov
mov
in
jne
shlb
push
pop
fstps
jg
jl
aaa
fwait
push
ja
add
push
mov
std
imul
mov
mov
inc
pop
ds
xlat
sbb
mov
sbb
sub
imul
test
mov
dec
jg
cmp
test
cmpsb
adc
pop
push
jl
add
outsb
outsb
xor
mov
dec
xor
mov
mov
lcall
sbb
scas
into
and
loopne
mov
xchg
test
mov
or
mov
xchg
adc
sub
jno
cli
inc
out
sti
into
jmp
add
outsb
sbb
sbb
and
call
and
rol
jne
test
jno
adc
jp
es
mov
in
or
stc
int3
into
xchg
out
dec
incb
popf
and
jl
fldenv
jne
cmpsb
aas
cmp
xchg
jo
ret
rcll
fisubrl
fistpl
mov
pop
cmovo
leave
fcoms
stc
adc
mov
addl
adc
fdivrs
adc
sub
sbb
js
dec
rcrb
or
xchg
test
popa
jns
movsb
or
jne
jmp
out
adc
jns
sub
outsb
out
iret
in
sub
sbb
cld
xchg
and
push
sub
fidivrl
std
inc
dec
scas
es
shll
xor
sbb
inc
dec
sbb
faddp
mov
pop
sbb
or
push
ss
fistl
push
sub
cmp
xor
fwait
add
push
add
jbe
ljmp
mov
loopne
rcrl
aad
cmp
pop
xchg
or
cmp
fsubrs
or
jno
sti
sub
rcl
mov
jbe
and
and
push
dec
pop
mov
test
sbb
cmp
pop
inc
scas
xchg
dec
iret
and
pop
mov
test
mov
mov
xchg
rclb
adc
sbb
daa
stos
add
icebp
xor
mov
push
shr
mov
popa
push
dec
push
arpl
jl
dec
loopne
int
jg
inc
sbb
stos
mov
sbbb
xchg
sbb
pop
dec
and
sbb
lahf
shlb
mov
push
rclb
mov
bound
int
xlat
stos
repz
xor
mov
popa
add
shlb
sub
cmpb
enter
mov
inc
add
xchg
sbb
lahf
xchg
shll
sub
push
add
add
jnp
mulb
out
inc
and
inc
imul
ret
outsl
jl
xor
dec
mov
add
or
add
add
icebp
les
popa
xchg
aam
scas
push
pop
adc
fidivs
xor
push
nop
jl
int3
and
pop
rorl
les
xorl
loopne
popa
and
aam
je
or
jmp
fildll
mov
jnp
and
ds
xor
jp
cld
mov
adc
pop
pop
popa
push
testb
adc
in
push
lret
xor
pop
inc
lock
lods
pop
int3
lret
and
in
sbb
mov
fsubp
idivl
daa
push
cmpsb
inc
pop
push
in
enter
insb
pop
inc
aad
mov
sub
cmp
push
cmp
inc
inc
bound
in
movsb
xchg
imul
negl
fwait
and
lods
xchg
mov
dec
inc
push
sub
test
pop
sub
sub
jl
mov
pop
or
movsl
xor
sarl
jmp
xchg
xor
cld
push
daa
ficoms
aaa
idivl
shr
outsb
into
je
cmp
jns
mov
mov
fisubl
or
jl
mov
outsb
cmpsb
es
push
xor
and
call
jg
popf
lea
popf
shlb
jl
je
sub
std
pop
stos
scas
jp
in
dec
mov
xchg
push
sbb
mov
popf
sub
jb
pop
fisubs
sbb
rcrb
std
push
mov
stos
dec
xor
dec
loopne
mov
mov
jne
out
imul
test
cwtl
sbbl
leave
fidivrl
sbb
in
adc
inc
and
or
sti
push
aam
dec
inc
sbb
jae
adc
or
pop
shlb
and
in
add
scas
outsb
loop
pop
dec
xor
xor
mov
mov
das
test
inc
push
dec
inc
insl
fimull
mov
xor
lods
and
insb
push
add
ja
adc
pop
int
xor
test
add
push
fmulp
mov
jbe
das
inc
movsb
pcmpgtw
push
fninit
push
mov
cmc
jmp
cltd
test
in
sahf
mov
scas
pop
clc
out
in
loope
mov
mov
je
loope
jno
repnz
dec
dec
lret
pop
xlat
sub
cli
ret
cmp
mov
hlt
cs
mulb
repz
xor
mov
add
test
cmpsl
mov
push
inc
xchg
jecxz
les
stos
mov
movsb
mov
pop
imulb
or
pop
sbb
xor
scas
ljmp
loop
xchg
scas
lods
in
daa
aaa
inc
mov
es
daa
cmpsb
add
push
sbb
gs
mov
fsubr
cs
out
mov
push
rcll
sbb
arpl
repz
and
cwtl
cli
ja
pmaxsw
jns
dec
sbbl
inc
mov
pop
les
mov
popf
mov
mov
out
hlt
movl
xchg
rcr
in
fcomps
ss
fwait
sbb
jo
jb
push
clc
sbb
inc
dec
arpl
mov
scas
pop
int
sbb
and
jmp
js
add
sbb
xchg
ds
mov
cmp
jae
and
lods
or
test
jp
shl
movsb
push
call
scas
sbb
adc
repnz
daa
lods
fmuls
shll
xchg
fdivs
shl
jmp
mov
nop
xor
mov
add
jne
adc
sbb
lea
push
ja
mov
sub
mov
pop
sub
pop
int
dec
xor
ret
cmp
movsb
and
jb
inc
loop
das
dec
push
ljmp
xchg
loopne
ret
mov
dec
loop
into
xchg
daa
and
xor
cmp
pop
out
js
push
mov
mov
jp
mov
imul
and
xlat
lods
or
test
jp
push
xchg
ret
mov
mov
dec
cmp
add
pop
aaa
push
mov
mov
clc
cs
mov
or
mov
and
push
jl
fsubrs
mov
add
mov
ret
or
js
or
xchg
clts
mov
push
or
ficoml
sbb
daa
fisubl
mov
and
add
stc
mov
xor
jns
popf
cwtl
lret
jo
jge
or
add
or
into
scas
mov
mov
pop
adc
andl
lods
fildl
jg
mov
mov
jno
loop
sbbb
dec
cmp
sar
test
xlat
sbb
xor
mov
dec
dec
push
sub
xchg
sbb
lretw
lds
rol
jmp
add
add
xchg
add
inc
data16
scas
in
stc
mov
jnp
fsts
push
out
pop
insb
lods
fidivrl
es
scas
add
sub
xchg
push
xchg
pusha
repnz
nop
js
add
pop
and
sbb
iret
push
aas
test
push
pop
inc
fs
sbb
xchg
xchg
aad
jg
adc
lea
loope
jge
add
inc
adcb
dec
rcll
rcr
lret
ss
daa
sub
cmpsb
push
test
add
and
inc
stc
xor
and
dec
vmulps
call
jo
test
push
jecxz
lret
or
xor
ret
sti
sub
jecxz
jmp
outsb
and
push
dec
or
pop
mov
dec
imul
sahf
outsl
repz
sub
mov
cmp
sub
jns
int
inc
xchg
sbbl
dec
xor
mov
adc
jnp
pusha
xor
pop
mov
pop
fsubrs
and
inc
jle
dec
mov
sub
push
lcall
pop
mov
ds
mov
and
out
xor
mov
xchg
arpl
push
in
push
js
iret
sub
dec
xchg
shlb
popf
lods
pushf
push
scas
jnp
push
mov
xor
and
rclb
lods
repnz
aaa
pusha
sbb
mov
in
xchg
adcl
arpl
xchg
in
call
cmp
pop
mov
mov
int3
dec
jmp
add
mov
mov
mov
push
incb
pop
jge
into
inc
jbe
inc
mov
sub
sbb
cmp
cli
cs
jnp
push
mov
or
idiv
lods
pop
add
or
ret
lret
pop
jbe
pop
inc
sbb
shrl
push
xor
jmp
mov
inc
stc
mov
mov
sbb
inc
int
and
sbb
add
decb
in
mov
sti
cmp
sti
cltd
ret
sahf
cmp
inc
arpl
push
cld
pop
sbb
or
gs
xchg
dec
stc
sub
imul
ret
pusha
rclb
or
incb
out
scas
scas
jmp
into
iret
in
cmp
adc
pop
inc
jo
and
inc
dec
loope
mov
das
mov
sarl
jg
push
jae
xchg
daa
inc
lcall
jmp
insl
mov
test
mov
out
in
ror
dec
push
scas
inc
cmp
add
pushf
insb
jg
adc
push
sbb
lret
add
dec
iret
mov
mov
hlt
xor
stos
outsb
test
push
int3
mov
sbb
jp
sti
inc
sub
xchg
push
ret
xor
stc
push
movb
insb
dec
fidivs
or
mov
jae
sbb
sub
sub
pushf
dec
int3
inc
mov
movsb
xor
xor
mov
rolb
fisubs
pusha
ja
lds
mov
das
scas
nop
hlt
xor
je
mov
repnz
sub
lock
lods
int
push
int3
xor
xor
cld
mov
aaa
in
push
outsl
mov
pop
repnz
mov
negl
dec
mov
fists
jnp
sbb
jae
pushf
cmp
fwait
std
sbb
das
inc
jg
mov
fs
xchg
hlt
sub
dec
push
pusha
dec
cmp
and
fldl
xlat
xchg
mov
mov
mov
fcmovnb
mov
jmp
shr
and
push
or
lea
je
repz
push
adc
loope
pop
cltd
jbe
clc
xchg
lods
mov
fstpl
dec
loopne
icebp
or
xchg
sub
inc
stos
aaa
lods
cmc
iret
sbb
mov
test
rcll
in
or
sbb
test
icebp
mov
repnz
data16
lret
xchg
clc
push
icebp
nop
out
mov
pop
add
inc
sbb
adc
std
jns
pop
sbb
pushf
movsl
sub
pop
ljmp
call
outsl
push
icebp
cmp
or
mov
jns
xchg
cs
push
les
jmp
lods
test
jecxz
out
fwait
rclb
out
or
dec
fwait
sbb
jecxz
ret
imul
dec
or
mov
dec
dec
push
scas
rorb
push
mov
jno
mov
lods
mov
popa
dec
pop
into
xchg
jl
push
loope
jg
inc
inc
mov
jecxz
and
add
sub
cmpsl
sbb
in
sub
mov
sbb
mov
mov
mov
pop
mov
push
xor
inc
jmp
out
insb
inc
mov
or
pop
inc
and
insl
aaa
and
push
and
mov
ja
call
out
ljmp
jp
cmp
in
xchg
call
inc
add
dec
adc
jns
pop
push
lret
mov
mov
cmp
cmpsl
cmpsl
lods
hlt
adc
sub
sbb
or
add
test
add
xor
dec
sub
lock
pop
dec
mov
pop
outsl
scas
and
std
dec
negb
pop
adc
jo
mov
mull
adc
or
mov
stc
push
jae
sahf
in
jle
je
mov
mov
xor
aaa
push
dec
push
hlt
mov
and
pop
leave
add
mov
or
es
adc
cmp
stc
in
scas
lea
xchg
sub
fnsave
push
jne
fwait
mov
loope
ja
inc
hlt
bnd
cmpsb
inc
dec
stos
cli
xor
fildl
loopne
mov
aam
sub
mov
inc
std
sahf
xor
lods
lahf
inc
push
xchg
sub
mov
aaa
je
andl
mov
dec
cmp
and
repnz
xchg
nop
and
mov
add
xor
nop
mov
xchg
lcall
ficomps
jp
pusha
lods
je
sub
incl
cmc
xor
mov
mov
mov
out
jae
inc
in
call
rorb
adc
pusha
test
and
aam
sbb
add
cmpsl
sub
mov
jl
mov
popl
pop
js
stos
mov
fisubrs
jg
sbb
sub
xchg
sbb
mov
push
test
add
ja
je
jge
mov
xor
orl
add
dec
aaa
shl
jno
inc
add
out
add
jle
addr16
inc
in
call
jge
mov
into
cmp
pop
andb
adc
mov
fcoml
data16
adc
xor
xor
stos
jne
shll
push
mov
mov
pop
into
cmp
mov
sub
mov
and
add
xor
js
cmpsl
jge
lock
mov
orl
ljmp
cmp
xor
mov
fcmovb
cmc
movsl
iret
push
repnz
aad
xchg
into
pop
lods
addr16
pop
pop
or
jns
mov
inc
cmpsl
and
inc
mov
out
lods
imul
mov
daa
jmp
pop
int
jbe
out
xor
lock
gs
push
ffreep
xchg
insl
and
int3
pusha
js
push
sub
imul
or
adcb
and
mov
ljmp
xlat
xlat
loop
xor
leave
sub
xchg
shll
pop
xor
shr
pop
xor
mov
add
dec
das
xchg
cmp
sbb
push
sbb
pop
lea
outsl
inc
sahf
sub
inc
test
push
test
and
adc
sbb
in
orb
sub
mov
xchg
stc
ds
lret
cwtl
lods
mov
daa
sub
addr16
inc
add
loopne
frstor
enter
in
jl
xchg
out
mov
xor
push
xchg
jo
push
xchg
push
sub
mov
push
mov
mov
arpl
pop
dec
stos
xchg
fistpl
sub
arpl
sti
add
add
aam
movsl
dec
mov
pop
push
aaa
mov
ja
jb
loope
pop
lock
popf
lahf
mov
and
into
or
lahf
out
sti
loope
or
cmp
mov
or
cmp
in
leave
bound
hlt
adc
or
mov
loopne
or
or
mov
adc
out
mov
jecxz
jbe
pop
fcomps
cmp
dec
pop
dec
cmp
fisttps
sub
jl
mov
and
nop
es
push
aaa
inc
loope
jns
stos
sar
mov
jmp
xor
inc
inc
mov
cmpsl
mov
mov
xchg
add
std
mov
movsb
push
arpl
mov
hlt
movsl
pop
addr16
dec
idivb
nop
in
jb
push
jae
sbb
andb
ja
das
push
mov
adc
stos
adc
in
mov
testl
mov
push
loopne
call
ret
jl
or
sub
dec
push
stos
mov
mov
sub
sub
popa
pusha
in
jae
nop
add
sar
popa
mov
ss
stc
sti
not
insl
add
cmp
loopne
adc
pop
xchg
cmc
sbb
clc
insb
out
lret
jae,pt
push
xlat
leave
popf
jo
adc
dec
jle
push
sub
in
mov
call
loopne
mov
or
scas
add
repnz
dec
mov
pop
xchg
out
pop
jmp
push
ss
int
jmp
jmp
inc
push
and
cltd
scas
adc
movsb
xchg
pop
movsb
testb
popa
mov
test
or
movsl
jnp
dec
jg
dec
adc
xchg
mov
orb
loope
test
aad
outsb
cli
dec
call
push
jecxz
cmpsl
and
push
pop
call
xor
pop
add
add
xchg
lret
mov
outsb
fcmovnbe
mov
adc
lds
and
js
in
mov
addr16
inc
mov
push
fidivl
sarl
jecxz
ret
mov
ds
xchg
pop
jl
ljmp
out
data16
and
ret
leave
test
into
dec
shll
mov
mov
out
test
cmpsb
ss
and
hlt
pop
sti
xor
std
movsb
xchg
je
hlt
xchg
shl
xor
sub
sbb
jae
mov
mov
or
mov
fdivrl
add
mov
add
mov
or
rcrl
sub
scas
push
jecxz
cmp
adc
push
and
bound
cmp
add
inc
into
cmp
xchg
leave
clc
cmpsb
inc
mov
stos
pop
addr16
adc
rcr
jno
xchg
enter
lock
out
insb
push
mov
push
addr16
push
inc
out
lods
mov
push
ror
icebp
mov
mov
or
loop
mov
addr16
pushf
aam
xchg
xlat
xchg
mov
nop
mov
bound
inc
adc
in
push
cli
jl
es
fwait
xchg
out
cwtl
lret
mov
test
dec
mov
ljmp
mov
cmp
lahf
or
lret
shl
pop
popf
push
cs
sbb
fidivs
outsb
daa
cmc
jne
pop
jo
inc
stos
pop
push
pop
or
ss
mov
stos
jno
adc
jecxz
xchg
sub
outsl
lea
sub
jbe
mov
inc
repz
dec
xor
lock
push
mov
repnz
push
sbb
xchg
add
pop
data16
fldl
mov
add
xchg
lahf
icebp
outsb
jno
xchg
pop
push
in
fsubrs
xchg
into
movsl
pop
jmp
inc
dec
loop
or
lods
push
iret
sbb
dec
pop
pushf
pusha
inc
xchg
and
aaa
popa
sub
ljmp
lcall
sub
push
iret
rcrb
push
imul
push
pushf
insb
cmp
int3
mov
in
or
xor
dec
cmp
imul
movsb
iret
in
frstor
sub
popf
xchg
mov
xchg
add
std
je
jnp
push
int
mov
fwait
int3
clc
out
aaa
inc
lahf
into
xchg
mov
add
dec
inc
dec
jno
dec
pop
cmp
inc
outsl
xor
mov
test
movsb
add
repz
jp
jno
into
inc
fstl
loop
adc
adc
mov
repnz
shrb
cmpsb
ds
mov
mov
ja
jg
aad
je
bound
mov
test
pop
lods
mov
pop
push
cmpsl
adc
mov
test
insl
mov
add
xor
mov
and
jp
sar
add
ljmp
int3
inc
test
mov
cmp
sarl
mov
fiadds
pop
mov
xchg
sbb
inc
arpl
sbb
adc
xor
shl
and
mov
adc
aas
jmp
sbb
jns
out
pop
out
jg
lock
mov
test
das
scas
or
lret
rcl
adc
bound
out
fwait
repz
xchg
out
orb
xchg
xorl
test
icebp
jecxz
push
movsb
mov
std
mov
std
xchg
lahf
addr16
jne
pop
movsbl
mov
imul
outsl
bound
decb
jmp
sub
lahf
push
and
jnp
cmpps
aam
pop
in
mov
lds
pop
mov
imul
mov
bound
scas
pop
test
lds
push
add
ret
inc
jmp
inc
mov
sbb
jnp
push
negb
sbb
and
imul
pop
push
mov
pop
jo
and
adc
outsl
lahf
mov
xchg
out
mov
add
inc
xor
mov
jnp
adcl
in
and
dec
scas
dec
mov
mov
lahf
sub
mov
inc
push
sub
scas
jne
fdiv
aaa
out
cmc
sbb
sub
sbb
sub
lahf
pop
outsl
and
cmp
gs
cmp
pop
popf
call
ficomps
daa
or
std
mov
inc
cmc
cs
ret
mov
jns
and
test
fucomip
ret
add
dec
add
sub
cs
std
jbe
mov
inc
test
inc
leave
adc
daa
cmp
cld
and
pop
in
lods
xlat
testb
sbb
cli
cmp
movsb
popl
dec
xchg
xchg
xor
popa
xlat
leave
dec
in
mov
xor
dec
jge
and
mov
fisubrs
lcall
movsl
adc
ror
push
jp
out
add
jb
aam
fcomi
jl
pop
mov
xchg
xchg
pop
notb
aam
pop
pop
stos
xor
je
xchg
sub
xchg
mov
inc
nop
xor
call
test
xor
cmpl
das
jne
mov
loopne
sarl
xor
jg
mov
in
dec
add
imull
out
and
adc
push
inc
add
stos
sahf
stc
inc
cmpsl
in
insb
jbe
decl
in
out
jmp
push
jae
adcl
sub
xorb
xor
jmp
add
xchg
rorb
xor
cmpsl
sbb
in
lods
rclb
stc
fcmovnbe
or
lods
pushf
int
leave
and
into
mov
jl
test
lcall
lds
inc
pop
add
leave
dec
aad
in
or
sub
test
add
jo
pop
ret
pop
ss
dec
testb
lock
insl
mov
int
int
incl
mov
adc
pop
cltd
into
insl
lret
aam
xor
fildl
fldenv
sbb
inc
lea
vandpd
cwtl
inc
jnp
mov
je
or
pusha
lods
int3
out
call
adc
mov
ficomps
xor
dec
and
mov
pop
inc
mov
mov
adc
mov
sbb
and
lcall
aas
inc
das
pusha
pop
jno
adc
cli
mov
xor
cmpsb
xchg
push
mov
fisttps
ds
daa
dec
test
inc
mov
das
mov
imull
ja
lret
in
bound
mov
cld
rcrl
popf
cwtl
mov
out
ljmp
and
cmp
lea
inc
cmp
std
adc
in
iret
je,pt
mov
sbb
fdivl
jmp
sub
sbb
fwait
xchg
aad
push
cmpsb
in
out
xchg
sahf
daa
push
andl
xlat
jo
fldenv
fnstsw
in
es
push
sbb
fisubrl
daa
imul
call
into
sar
lods
idiv
sub
mov
addr16
mov
jns
loop
out
push
repnz
mov
jnp
out
cmpsl
outsl
cld
insb
lds
cmp
out
bound
cltd
sub
cmpsb
loope
mov
test
mov
push
mov
mov
insb
mov
sbb
adc
cmpsl
imul
pop
inc
jae
pop
das
pop
adc
clc
pop
int3
dec
loop
adc
mov
stos
insb
sahf
mov
lods
xlat
sub
adc
add
out
pop
mov
pop
cmpsb
cmp
jbe
dec
cmp
in
mov
hlt
arpl
fnsave
dec
les
cltd
pop
stos
test
sub
push
pop
das
fs
push
fistpll
cli
jo
insb
icebp
repnz
push
scas
dec
scas
xchg
sbbb
cmp
pop
scas
cmp
mov
dec
push
es
cmp
cld
jnp
add
pop
pushf
insl
dec
jmp
in
ljmp
and
cmp
pop
rol
icebp
and
aam
push
sbb
ds
add
adc
lea
fstps
or
pushf
xchg
leave
in
ret
adc
mov
imul
les
pop
movsb
xchg
sub
push
clc
insl
loope
loope
std
adc
call
mov
imull
mov
sbb
pop
mov
push
pushf
fnstsw
dec
pop
ds
dec
sbb
mov
jae
pusha
lahf
add
shll
xchg
cmp
push
cli
jns
testl
loope
push
pop
and
lahf
addl
sbb
xor
inc
rclb
or
aam
cmp
mov
ljmp
aam
mov
idivb
and
mov
xchg
scas
sub
dec
pop
or
cmc
cmp
test
ss
lds
test
nop
out
lods
mov
inc
pop
daa
ljmp
jne
cmp
mov
xchg
jae
jae
sbb
repnz
xor
in
push
aaa
ja
les
jno
stos
jp
sbb
pop
out
js
push
loop
jecxz
pop
cs
je
pushf
and
mov
sub
push
aaa
in
lods
ret
inc
loopne
cld
test
inc
xor
mov
push
pop
cmp
push
cmp
out
les
push
aas
pop
cmp
adc
es
sti
xchg
push
adc
lds
insl
pushf
jmp
cmp
inc
pop
add
mov
adc
sub
mov
in
sub
push
adc
popf
sti
xlat
inc
in
mov
repz
cli
into
loopne
bound
dec
pminsw
pop
cmp
mov
test
addr16
sarb
mov
push
xor
mov
shll
lock
or
insl
fst
mov
mov
mov
clc
in
dec
xchg
dec
out
test
ss
jle
pusha
aad
out
push
xor
daa
mov
lret
lcall
loop
sti
xchg
scas
frstor
adc
push
xchg
popf
adc
jl
nop
jg
push
push
inc
mov
lahf
jns
or
fildl
gs
and
push
repz
lods
inc
push
decl
imul
scas
and
lret
cmp
clc
lret
js
push
mov
out
shl
iret
and
jmp
add
test
sub
cs
imul
sbb
pop
push
and
push
repz
stos
adc
push
out
inc
nop
bound
add
int3
jl
ret
sahf
cmp
in
mov
leave
rclb
sub
or
sub
sarl
jmp
insb
mov
shrl
xor
xor
dec
cmp
lods
hlt
and
lcall
adc
shl
lock
pop
pop
mov
rcll
rcrb
inc
sbb
inc
lcall
ljmp
xchg
icebp
mov
mov
mov
es
es
je
jl
out
jne
in
pop
test
lahf
sub
jae
jge
std
ret
das
adc
xchg
push
jmp
pop
cmp
or
movsl
dec
cmp
ja
scas
xchg
into
push
aaa
xchg
gs
popl
lea
and
cmp
stc
sarb
push
add
lret
imul
jo
ret
mov
inc
jbe
insl
dec
fstps
cmpl
in
imul
sbb
mov
add
ficoml
fs
mov
sbb
loop
fisubs
clc
in
cmp
and
repz
aaa
in
loop
cmp
stc
add
sub
iret
out
mov
insl
das
imul
ret
mov
push
inc
filds
cli
bndstx
jp
pop
add
pop
inc
lods
xchg
push
inc
sbb
fisubrl
test
pushf
mov
test
lcall
pop
stc
push
arpl
arpl
xchg
mov
mov
fidivs
arpl
xchg
push
imull
xchg
std
lds
out
sub
imul
leave
mov
mov
aas
xchg
lahf
sub
sbb
stos
imul
cmp
pusha
imul
leave
out
call
stc
fwait
add
std
push
mov
icebp
jge
push
inc
push
loope
mov
loop
ss
xor
cmp
dec
or
idivl
push
pushf
dec
aaa
jecxz
mov
fwait
jns
mov
sub
add
sub
in
cltd
sti
outsb
pop
int3
mov
dec
inc
jns
mov
ja
mov
adc
repz
cmpsl
mov
mov
pop
movsb
in
loope
pop
mov
ljmp
cld
push
mov
and
cmp
pop
xor
push
mov
adc
mov
es
sub
pop
lret
pop
cmpsb
adc
icebp
push
les
cld
pop
sub
xorl
sbb
lds
dec
cmpsl
cmpsb
and
popf
fisubs
insb
pop
sub
jae
inc
dec
lea
xchg
xor
cmp
sbb
sbb
popa
lea
xor
push
test
sub
fmulp
add
out
push
xor
outsl
lahf
inc
loopne
inc
test
cmc
inc
cltd
dec
insl
insb
stc
xchg
stc
add
lret
insb
pop
inc
mov
mov
adc
pop
loop
das
test
inc
repnz
add
mov
sbb
add
in
jmp
xchg
mov
js
mov
ret
mov
and
dec
mov
mov
cmp
sbbb
mov
rcll
mov
jo
outsl
mov
repnz
es
add
lods
sti
xor
lcall
fwait
dec
dec
push
sub
aam
sbb
in
lret
std
xlat
push
out
add
add
jo
imul
or
lret
gs
jg
mov
push
imul
and
ds
cmp
aaa
sbb
mov
pop
imul
xchg
pop
icebp
and
adc
pop
call
test
arpl
mov
add
push
push
mov
sub
roll
jbe
in
loope
jbe
aam
jge
adc
addr16
or
and
in
xor
aaa
push
ret
inc
ja
shll
stos
xchg
xor
popf
outsl
testl
inc
scas
adc
int
data16
out
mov
std
push
mov
push
push
mov
mov
or
sbb
xchg
movaps
scas
xor
aaa
dec
push
cltd
cmp
sbbb
inc
add
jns
mov
int3
sbb
pop
test
shll
push
and
addr16
inc
repz
xchg
add
xchg
dec
sbb
push
cld
mov
mov
lahf
stos
adc
popf
cmpsb
call
pop
pop
pop
rcl
add
push
sahf
inc
push
add
and
push
dec
xchg
mov
sbb
push
loopne
cmp
divl
popa
lcall
mull
shrb
pop
add
cmp
stos
icebp
xchg
mov
pushf
sbb
clc
popf
and
sti
push
pop
bound
dec
fwait
xor
cmp
mov
add
pop
xchg
add
rorl
jmp
xchg
and
dec
push
cmp
lock
outsb
outsb
adc
push
pop
cmpsl
inc
cmp
test
xchg
ss
push
dec
cltd
enter
add
jno
sub
jo
cltd
mov
sub
in
imul
mov
dec
insl
sbb
stos
cmp
das
flds
dec
mov
stos
fwait
dec
aad
and
push
cmpsb
stos
jo
add
and
inc
aam
out
mov
or
mov
jne
fiaddl
fsubl
adc
mov
mov
xorl
out
sbb
fildll
pushf
es
dec
loope
shrb
test
aad
rclb
frstor
xchg
cs
jecxz
mov
adc
ret
repnz
xlat
xlat
outsl
mov
or
cvtpi2ps
inc
pop
sbb
inc
sub
int3
int
dec
jbe
mov
dec
lods
daa
mov
cmp
les
ds
loop
sub
push
lahf
fdivp
sahf
cmp
push
and
arpl
leave
dec
cld
call
cmpsl
sbb
test
repz
adc
cmp
fistps
das
stos
es
and
loop
push
mov
xchg
inc
jmp
sbb
cmp
in
or
mov
mov
adc
loop
fs
out
fs
push
xchg
cli
icebp
hlt
and
add
adc
adc
mov
dec
loope
and
pop
lods
pop
push
jl
fnclex
dec
lock
jmp
mov
les
jae
call
fs
fidivs
clc
lahf
ret
stos
ljmp
sbb
je
fwait
push
insb
adc
inc
xchg
dec
jp
add
xor
mov
stc
sub
adc
sbb
xor
xlat
std
std
data16
pop
ret
test
sbb
jo
cmp
cld
inc
test
lret
in
int
icebp
cli
inc
cmp
cmpsl
inc
mov
add
arpl
bound
jb
loope
jp
dec
sbb
pop
in
xchg
xlat
sub
repz
sbb
sub
cld
pop
push
dec
xchg
scas
or
rorb
jecxz
dec
cltd
loope
cmp
mov
xchg
mov
or
arpl
and
xchg
int
mov
mov
insl
xchg
std
mov
jno
xor
sub
inc
popf
mov
mov
xor
pop
sbb
add
cmpsb
mov
sar
addb
or
rcrl
int
outsl
jne
icebp
push
jecxz
faddp
jns
movsb
dec
push
daa
sub
xor
mov
jbe
and
out
adc
or
jns
cmp
or
pop
sti
shll
sub
bound
jns
out
cwtl
adc
pop
lock
mov
bswap
cmpsb
clc
mov
popf
scas
and
lcall
leave
push
pop
push
sub
jne
mov
cmpsb
shll
xchg
aas
dec
dec
cmp
jno
add
adc
jmp
push
cmp
add
push
jo
lret
add
repz
add
repnz
sbb
ret
inc
adc
js
pushf
push
repz
ds
xor
xchg
je
hlt
sub
cli
lret
jne
mov
mov
mov
and
mov
loopne
xor
push
xor
add
testb
push
xchg
out
sbb
subl
xor
fdivl
xor
sub
dec
sub
loop
bound
sarl
mov
pop
int3
adc
std
lods
adc
cmpsl
aas
dec
mov
js
lret
and
pushf
popf
xor
jl
fisubl
fistps
dec
loopne
testb
gs
sarl
js
dec
mov
or
jo
push
push
lds
arpl
mov
and
dec
sbbl
mov
repz
cmp
fildl
cmp
mov
js
cwtl
cmpb
push
xor
cwtl
or
loopne
mov
out
pop
dec
lods
dec
notl
les
fstpl
mov
or
inc
jmp
insl
mov
inc
jno
in
ret
xchg
jno
xor
idivb
add
adc
inc
jg
and
js
adc
sub
nop
test
stos
and
push
push
repnz
stos
scas
sub
popa
inc
loopne
test
das
roll
shrl
push
lahf
fmull
in
add
lock
push
aas
nop
das
xor
cmpsb
lea
rcrl
or
sub
sbb
or
jecxz
in
sbb
lahf
daa
adc
out
cs
cmp
loopne
das
mov
addb
lahf
sub
or
mov
push
cwtl
mov
mov
in
and
push
cmpsl
loop
dec
push
bound
cmp
in
dec
sub
enter
inc
pushf
sbb
lret
outsl
dec
sbb
aam
lahf
stc
leave
jbe
data16
mov
test
pop
mov
xor
pop
mov
xlat
fidivl
dec
pop
push
mov
aaa
inc
push
mov
jmp
jle
dec
daa
fnsave
dec
jb
jns
xchg
aaa
fadds
call
in
ja
shrb
mov
xchg
and
adc
cmpsb
cld
in
stc
sahf
sbb
lret
dec
push
jbe
test
popa
ja
adc
jle
insl
cmp
addr16
sub
add
inc
mov
push
mov
jns
sub
lcall
xlat
inc
out
testl
dec
sbb
out
mov
push
push
and
pop
adc
pop
stc
xor
push
push
fidivs
xchg
cmp
ds
shll
sbb
rol
sub
inc
cltd
jae
xor
pop
in
arpl
js
xchg
and
mov
push
xchg
out
inc
add
sub
test
mov
pushf
gs
pop
cli
adc
faddp
add
shrl
jnp
daa
inc
aad
out
adc
bound
lahf
dec
es
and
pop
adc
mov
popa
test
inc
mov
adc
pop
cltd
movsl
sbb
enter
aaa
stc
negl
dec
mov
movsl
mov
pop
loope
in
ss
test
outsl
les
push
repz
jg
shlb
and
cmc
in
cmpsl
rclb
sahf
mov
pushf
jbe
mov
outsb
adc
bound
and
cmp
je
enter
pop
scas
push
xor
jl
ret
cmp
inc
xor
fstpl
cmp
das
insb
jne
aad
inc
inc
imulb
xorb
xorl
pop
xchg
sbb
and
mov
and
call
jge
gs
outsb
mov
pop
mov
les
pop
ja
test
jg
stos
popl
xchg
stc
add
sub
pusha
jb
outsb
sub
cmp
push
out
test
into
dec
push
fcmovu
test
xor
inc
sub
pop
stos
inc
pushf
sub
ficompl
insl
insb
pop
subl
mov
mov
shr
leave
test
cmp
rclb
xchg
sbb
loopne
icebp
mov
mov
int3
adc
fdivrs
mov
jae
mov
ror
sbb
lea
push
cmp
jne
cwtl
in
lcall
cld
subl
in
dec
pop
jmp
adc
mov
imul
add
popa
sub
mov
adc
pusha
jbe
pop
pop
jns
jg
fisubrl
jnp
fdivp
mov
jl
cli
mov
movsl
push
imul
movsb
fldcw
lret
ljmp
push
or
adc
scas
mov
push
add
popf
inc
pop
jb
adc
movsb
cmp
mov
sarb
push
bound
xor
sub
xor
les
dec
outsl
xor
xchg
outsl
std
out
loop
fs
out
subl
push
mov
mov
nop
stc
jbe
mov
mov
cmp
stos
sub
adc
mov
or
nop
inc
pop
out
into
inc
cmp
dec
stc
int
push
cmp
rcr
sub
cli
or
xor
cmp
fcom
mov
and
xor
jnp
xor
stos
sbb
cmp
mov
das
call
mov
mov
add
inc
pusha
sbb
enter
or
jle
out
mov
bound
gs
bound
jns
fstl
repz
pop
sub
rcrl
clc
xor
mov
cmp
and
pusha
mov
and
inc
fmull
andb
push
pop
xchg
pusha
aam
sahf
stc
repz
xchg
shl
mov
mov
aas
loop
xchg
or
sbb
pusha
xchg
pusha
cli
mov
aam
mov
lds
push
popa
sub
mov
push
push
in
popa
cmpsl
ret
sub
xchg
pop
aaa
jne
pop
xchg
adc
sub
xchg
inc
mov
inc
mov
jge
fcompl
jns
insb
out
cmp
fldenv
addr16
out
nop
jns
xor
xchg
jecxz
pop
push
cld
or
or
rcl
in
and
icebp
mov
movsl
in
push
fistpll
xor
push
subl
add
cmpb
xor
addr16
mov
ret
adc
cmpsb
ret
and
sub
out
icebp
sbb
adc
imul
dec
and
xorb
or
jecxz
aad
gs
pop
movsl
loopne
cmpsb
stc
jno
gs
imul
mov
ja
jnp
out
sub
jg
add
in
aad
push
jae
mov
pop
stc
je
or
pop
cs
mov
and
aad
jno
sub
scas
add
rcr
cmpsl
jmp
lods
subl
ljmp
dec
cmp
xchg
aas
adc
mov
movsb
mov
mov
push
xchg
and
fs
scas
fdiv
popf
ret
out
push
jns
jp
in
lock
or
push
or
ret
orl
dec
lcall
je
icebp
jb
xor
mov
cmc
mov
mov
pop
test
scas
pop
movsb
scas
fcoml
shlb
adc
dec
fstpt
daa
adc
xor
bswap
sub
out
add
ss
ja
ds
cltd
xor
adc
sbb
out
cmp
pusha
test
aam
mov
push
lret
sub
dec
lcall
dec
and
mov
lret
scas
movsl
dec
popa
jl
mov
pop
cmp
cmp
xchg
stos
ss
cld
leave
into
imul
stc
adc
sub
sbb
mov
pop
loop
clc
pop
mov
inc
and
jp
imul
stos
sti
inc
int
dec
out
fsubs
pop
roll
sub
insb
pop
xchg
outsb
test
pop
scas
sti
mov
adc
add
xor
pop
push
in
ljmp
cmp
imul
iret
loopne
pop
mov
dec
and
inc
mov
aam
cld
xor
int
fucomi
add
push
cwtl
gs
jae
adc
mov
cmp
adc
outsb
test
cmp
test
xchg
ret
dec
notl
scas
push
stos
inc
sarb
dec
aas
out
adc
outsb
lods
adc
les
popa
fldt
jg
pop
clc
jl
mov
out
jb
mov
imul
icebp
push
movb
idivl
ja
pop
xlat
cmc
sbb
mov
mov
sbbb
test
pop
int3
ds
shl
pop
mov
shlb
push
mov
repz
and
xor
pop
adc
in
out
and
adc
scas
loop
dec
xor
pop
jno
fs
repnz
jbe
cmp
std
dec
jl
testl
xor
xchg
in
outsl
cmp
fdivr
cmp
adc
xchg
mov
lahf
and
sbb
aam
pusha
mov
mov
leave
in
arpl
mov
push
inc
jbe
mov
or
ss
cltd
ja
aas
jns
lds
sub
hlt
outsb
aaa
dec
addr16
add
or
jecxz
fnstenv
ds
push
jp
jbe
mov
dec
mov
push
sub
pop
fsubrl
push
add
xor
cmc
lret
insl
pushf
mov
sub
push
cld
ja
sbb
push
les
jg
add
and
jne
push
xor
push
and
push
jmp
fs
xor
icebp
inc
popa
fistps
or
dec
mov
loopne
shll
xchg
jl
sbb
lock
mov
ljmp
rcrl
mov
mov
adc
lock
mov
add
mov
sub
mov
out
xchg
dec
sbb
mov
leave
fstps
push
adc
push
hlt
fcomi
iret
inc
cmp
add
push
xlat
int
add
ss
add
jne
jl
xlat
in
mov
push
dec
dec
cs
xlat
int
pop
int3
into
ljmp
add
in
xor
clc
push
xlat
pusha
hlt
push
scas
sbb
xchg
add
imul
rcrl
cmp
loop
pop
dec
sub
jp
cmp
aaa
sbb
push
adc
inc
test
mov
xlat
ja
mov
lret
push
mov
xchg
fs
sub
push
push
insb
adc
js
lcall
cmpsb
pop
xor
xorps
jo
cld
insl
imul
es
adc
and
leave
xchg
leave
popl
dec
imulb
cmp
sub
mov
sahf
lds
ja
les
xor
loop
add
insb
push
dec
xchg
cltd
mov
sub
inc
aas
addr16
inc
push
test
xor
outsl
jns
jnp
fcomps
mov
dec
loopne
pop
cs
test
cmp
ret
das
and
jg
fisubl
insl
mov
xchg
fidivl
adc
in
jmp
imul
fisubrs
ret
xor
imul
and
outsb
and
or
fnstenv
roll
pop
loop
lods
gs
and
addb
outsb
add
aas
sub
cwtl
leave
in
jbe
fcoms
pop
mov
in
inc
mov
sar
and
xchg
inc
add
add
mov
jo
mov
and
xor
xchg
inc
xchg
aaa
mov
hlt
clc
ja
shr
and
stos
sub
ret
outsl
sub
mov
popa
addr16
cs
xor
das
mov
cmp
mov
js
arpl
xor
add
mov
and
mov
jg
pop
push
lahf
or
movl
pop
push
lret
movsb
xlat
add
inc
mov
into
out
hlt
stos
jns
jne
insb
outsl
xchg
out
imul
or
stos
jg
push
das
push
dec
sbb
inc
xchg
cltd
pop
jp
rol
fwait
push
pop
in
mov
inc
test
sbb
sub
mov
mov
out
es
push
mov
int3
or
in
dec
js
outsb
or
dec
dec
xchg
ja
lea
addr16
rcll
call
outsb
cmp
cmpsl
aam
jnp
das
push
mov
pusha
push
test
pop
pop
mov
or
mov
shll
mov
cmp
and
xchg
aam
nop
push
mov
dec
mov
cld
int3
push
addr16
clc
cmp
sbb
test
inc
or
fists
frstor
sbb
cmpsb
dec
dec
dec
add
jle
dec
out
aam
sahf
mov
pop
sub
xchg
hlt
int3
adc
aad
sbb
jo
fs
cmpsb
jns
movsl
sbb
aad
jg
and
push
adc
bound
mov
pop
push
lea
xchg
das
add
cmp
dec
aaa
push
lcall
xor
mov
cwtl
fucomip
mov
xor
mov
adcl
xchg
sti
jns
sub
push
inc
emms
lret
fmulp
sti
stc
adc
sub
les
ss
sub
inc
adcb
jns
xchg
and
sbb
clc
sub
arpl
pop
push
popf
enter
outsb
lods
psraw
sbb
mov
pop
pop
mov
sahf
sbbb
adc
imul
pusha
mov
and
dec
inc
add
aaa
repnz
stc
pop
sub
in
sbb
clc
inc
sahf
insl
push
pop
push
inc
xchg
aam
adcl
scas
out
mov
fcomi
mov
inc
enter
lods
aam
scas
cltd
loope
cwtl
inc
or
lea
std
mov
mov
xchg
mov
cld
jae
mov
dec
inc
adc
xchg
lret
sub
cmp
jns
or
add
lods
stos
or
mov
js
xchg
std
icebp
rolb
jl
sub
push
call
pop
jnp
aam
sarl
jns
mov
sbb
call
shlb
lret
push
popf
and
xchg
jmp
loope
and
inc
test
mov
ljmp
in
sub
mov
pushf
pop
lds
xchg
imul
inc
jg
arpl
pop
jp
in
nop
stc
std
mov
stos
shlb
pop
shl
push
gs
mov
pop
les
adc
insb
add
xor
popa
ret
cmp
or
test
adc
mov
jmp
mov
xor
das
pusha
fidivl
and
int3
fstpt
scas
mov
lods
cmp
add
mov
mov
xchg
insb
push
xor
pop
xor
ror
out
cltd
in
pop
xchg
les
int3
call
out
jns
dec
fldcw
sarl
or
push
mov
push
push
jne
dec
xor
jle
add
lods
and
imul
lods
pop
out
out
mov
pop
xchg
outsb
and
xchg
fldcw
das
xor
or
pop
and
sub
int
push
lds
lcall
stos
jmp
addr16
fcom
or
lahf
inc
and
and
cmpsl
sbb
loop
pop
js
stos
out
mov
add
mov
pusha
das
pop
push
mov
dec
fstpl
xchg
mov
lahf
movsb
iret
subl
mov
mov
sahf
ds
cmc
or
cmp
push
sbb
mov
dec
jne
lcall
add
sbbl
fs
outsl
dec
enter
insl
ret
add
cltd
stos
dec
push
jae
mov
xchg
nop
iret
jmp
clc
into
imul
into
push
int
imulb
pop
mov
movsb
movl
icebp
sti
incl
xor
mov
pop
andl
jg
sbb
jge
mov
mov
and
rcll
lea
cmp
test
ljmp
cmp
add
push
mov
mov
into
ss
leave
test
shrl
xor
adc
aaa
ret
decl
lcall
test
jne
aad
lock
pop
fs
inc
fstpl
and
pop
movsb
icebp
push
inc
out
dec
add
cmp
adc
add
xchg
test
jo
xor
in
mov
jecxz
jae
aas
xchg
jmp
pop
push
stos
out
and
pop
adc
fistl
stos
lock
movq
jnp
and
test
mov
out
arpl
lods
sti
jo
inc
andl
add
jns
icebp
mov
pop
testb
jecxz
fsubs
adc
inc
jae
cmc
sub
mov
sub
sub
add
aas
inc
xchg
popa
mov
sbb
jae
outsb
leave
dec
into
fadds
loopne
jne
cmpsl
sahf
sbb
je
xchg
jl
gs
lock
xchg
sub
or
xor
mov
fwait
dec
jecxz
mov
dec
pop
mov
sbb
orb
hlt
cmpb
jb
mov
mov
jnp
add
sbb
push
cmpsb
add
inc
xor
xor
push
hlt
or
bound
popa
int
aad
ja
gs
dec
mov
ficompl
sbb
iret
loop
lret
test
out
fsubl
and
lcall
jae
sub
mov
lret
ja
sbb
dec
push
push
xlat
lea
shrl
sbb
ja
adc
jae
in
push
test
cmp
sub
pop
push
push
pop
inc
lea
mov
das
mov
push
cli
inc
pop
out
mov
clc
mov
inc
out
mov
les
xor
rcr
cmp
lock
rcl
xorl
fidivs
jb
sub
stos
push
cmp
xchg
fcos
xchg
jae
or
incl
xor
mov
adc
pusha
fwait
inc
cli
push
in
orl
rorl
jecxz
cmp
loop
jp
imul
sbb
outsl
insl
mov
or
jbe
cmp
xchg
loop
arpl
inc
or
jnp
inc
lret
stos
ss
bound
cld
push
outsl
fdivp
push
cmc
negb
scas
inc
movsl
mov
pop
pop
add
loope
dec
mov
jo
pop
in
cmp
mov
lods
imul
pop
add
fdivs
pushf
out
push
dec
imul
in
testb
sbb
ds
data16
inc
pop
andb
pop
flds
cmp
cmovno
cmc
xchg
fisubl
sub
pop
mov
fnsave
adc
inc
sbbb
or
cs
cmpsl
add
push
jae
pmovmskb
ljmp
loope
inc
cmpl
fdivs
jg
mov
jo
mov
jg
mov
mov
int3
fdivs
jbe
inc
rcrl
inc
scas
xchg
scas
das
rsqrtps
lods
cli
bound
jae
stc
dec
aaa
jg
push
int
adc
mov
and
cmpsb
mov
stc
cmc
mov
pop
test
popa
ds
arpl
push
pop
mov
sbb
inc
and
daa
xor
sub
cmpsb
ss
sbb
and
pop
stc
push
jge
je
or
rcrb
mov
aam
ret
sbb
add
cmp
rolb
adc
adc
add
les
rol
dec
shlb
adc
sub
xor
jae
cmpsl
enter
retw
xchg
dec
lea
adc
adc
xchg
int
sbbb
push
push
xchg
lods
repnz
adc
fmull
aam
outsb
and
scas
psllq
in
rcrb
dec
lds
sub
scas
inc
fldlg2
xchg
and
scas
sbb
xchg
fnstcw
jnp
mov
jbe
sbb
jnp
jb
sbb
subl
mov
xor
imull
sub
out
movb
sbbl
fwait
mov
aad
pushf
int
sub
dec
mov
sarb
in
add
loope
ret
stc
repnz
jge
sbb
mov
mov
stc
sub
pop
xlat
sub
testl
and
mov
inc
inc
sub
pop
jne
pusha
hlt
pop
and
xchg
jmp
icebp
push
mov
pop
jl
push
adc
dec
mov
pop
xchg
add
cmp
js
dec
pop
adc
xor
inc
mov
push
add
fdivrp
mov
pop
push
out
lcall
add
mov
lock
addb
gs
jns
loope
xchg
insb
icebp
div
dec
repnz
jo
mov
and
imul
fs
std
mov
hlt
mov
repnz
mov
jmp
rolb
add
cwtl
loope
lcall
jno
or
fsubl
mov
push
xor
adcl
adc
add
rolb
mov
dec
push
sbb
mov
mov
cmp
in
push
lock
inc
push
data16
cmp
jns
incl
cmp
iret
dec
mov
lods
cmp
push
jg
add
sti
into
fwait
stos
inc
nop
cli
cmp
sbb
in
lret
shrl
test
sbbb
push
aam
loope
push
lcall
in
pop
jp
or
jecxz
mov
ja
mov
mov
scas
inc
int
cmc
pusha
inc
mov
add
xor
lcall
add
sub
leave
daa
dec
and
outsb
mov
jp
nop
or
add
adc
bound
aam
fistpl
xor
dec
cmp
repz
arpl
add
lea
repz
iret
or
add
jp
jbe
mulb
inc
or
mov
sub
fs
mov
out
adc
scas
stc
xchg
push
leave
fisubrs
adc
mov
add
aad
pop
inc
sbb
mov
mov
adc
repnz
sub
test
ljmp
lcall
or
inc
add
mov
int3
ficomps
das
push
shrl
mov
sti
into
pop
addl
jmp
addl
jecxz
sbb
dec
jns
xchg
orb
dec
ds
dec
and
ljmp
shrb
stos
mov
jo
hlt
mov
xchg
pop
sbb
fidivrl
or
xchg
call
in
cli
dec
mov
push
pushf
mov
mov
inc
push
lcall
shlb
lret
inc
jle
pop
xor
and
ds
dec
shlb
sub
or
jb
pop
fldt
cmpsb
mov
or
pop
ljmp
adc
inc
icebp
leave
addb
arpl
aaa
nop
push
mov
into
pop
out
xchg
out
sub
pop
scas
or
adc
cmc
pushf
test
aaa
int3
or
push
test
mov
mov
inc
mov
push
sub
vcomiss
iret
cmp
cmpsb
aad
ret
dec
or
in
movsb
dec
adc
fsubs
sbb
mov
xchg
jns
lock
sbb
xchg
int
mov
test
sbb
sub
jno
cmp
xchg
sbb
pop
sub
mov
stc
into
stos
mov
and
out
sub
cmpsl
jbe
sbb
lcall
mov
in
jl
adcb
adc
jnp
push
mov
cmp
daa
jecxz
xchg
push
xlat
mov
dec
xchg
lret
xorb
fadd
add
push
jmp
pusha
and
lods
mov
jmp
jmp
mov
mov
mov
faddl
int
aas
es
mov
mov
adc
sbb
push
and
movsb
nop
subb
dec
mov
xor
inc
scas
jg
out
or
push
and
mov
mov
push
pop
data16
nop
int3
cwtl
jecxz
mov
ret
xor
jns
jns
addl
loop
push
shl
lcall
mov
cmc
push
jg
inc
cmp
jle
ss
xchg
cmp
sbb
mov
adc
pop
push
push
jge
sub
pop
and
leave
fisubl
andb
push
aad
inc
pusha
fwait
mov
sub
mov
stc
push
sbb
cmpsb
repnz
lcall
int3
stos
jnp
dec
jg
xor
in
rorb
inc
aaa
sbb
ljmp
fidivl
mov
or
enter
fstps
mov
mov
inc
add
push
cmpsb
sub
push
shll
out
fisttpl
sbb
push
jle
sbb
and
mov
push
xchg
das
xor
popa
or
fbld
movsl
jp
pop
cltd
push
jae
add
or
cs
adc
xor
mov
add
and
fs
cmp
xor
mov
nop
test
lahf
popfw
xchg
mov
jnp
or
jnp
mov
adc
or
inc
aam
adc
sub
adc
inc
sbb
jp
ja
jp
or
jp
stos
jbe
inc
jge
sub
cmp
out
mull
push
jg
pop
loopne
cmp
inc
pop
adc
outsb
ljmp
lcall
adc
or
xlat
add
sbb
inc
int
adc
mov
clc
push
xor
loopne
lcall
pop
mov
xor
push
cmovbe
xchg
or
pop
adc
fwait
dec
sub
jns
jns
sub
mov
mov
lods
insb
into
subl
xor
pop
inc
fcomps
cs
cli
repnz
cmp
mov
enter
fstpl
stos
xchg
jp
adc
mov
jbe
or
test
inc
les
jg
scas
adc
fmulp
test
jl
ds
addr16
pushf
sti
pop
xchg
jmp
rol
test
mov
adc
repz
lods
mov
cmp
arpl
sbb
xchg
call
ljmp
ljmp
cmp
pop
mov
incb
stos
insl
mov
hlt
adcl
lods
out
inc
imul
enter
jmp
add
mov
mov
adc
mov
jle
pop
gs
rcrb
and
cmp
test
and
pusha
addr16
pop
shll
and
insb
stos
jns
subl
adc
insl
imul
dec
mov
cmc
push
add
cmpsl
je
lock
vpaddq
lret
mov
cmp
test
std
aaa
mov
sahf
fisubl
xchg
sbb
into
popf
add
add
mov
gs
inc
lret
dec
outsl
icebp
loopne
lods
fstpt
pusha
clc
into
pop
in
xchg
ljmp
hlt
dec
in
outsl
lea
mov
pop
mov
cmp
movsb
imul
jb
mov
pop
mov
cmp
mov
sbb
add
mov
mov
jmp
iret
dec
mulb
notl
xchg
repnz
outsb
jge
scas
out
xchg
fwait
add
or
or
sub
dec
and
fldcw
in
test
out
loopne
out
xchg
das
lds
insl
out
and
mov
add
xchg
in
test
addl
push
stos
cwtl
push
dec
mov
sub
ds
in
add
sub
bound
mov
mov
movsb
or
sbb
pushf
mov
adc
sub
div
mov
or
push
in
jmp
push
lar
sub
mov
push
mov
int3
xchg
fcompl
sbb
mov
push
or
sub
push
mov
dec
sti
sbb
cmp
adc
repz
xchg
aam
rcll
dec
inc
scas
sarl
sub
nop
cmpsb
mov
gs
dec
pop
or
vmwrite
addb
jno
cmp
stc
mov
insl
add
out
dec
or
lret
pop
shlb
cmp
pop
cmc
scas
sub
sub
ret
push
lods
aam
mov
xchg
cs
mov
lods
cltd
xor
add
mov
mov
push
dec
inc
jbe
jge
add
in
repnz
cltd
add
pavgw
jp
and
mov
je
and
sub
mov
call
int3
cmp
call
pop
inc
fldt
jbe
adc
loope
xchg
vdivsd
mov
xor
int3
int3
mov
mov
mov
rol
mov
fildl
clc
bound
jne
pushf
fwait
push
add
sbb
lea
aas
mov
mov
dec
les
dec
pop
mov
push
ss
lret
shrl
cmp
push
mov
mov
into
les
xchg
xchg
sbb
pusha
ljmp
enter
outsl
dec
and
push
xlat
into
fstpl
movsb
loop
cld
cmp
pop
ljmp
pushf
scas
push
push
and
icebp
int
inc
fisttpl
xchg
iret
adc
loope
dec
fdivrl
push
xchg
push
sbb
mov
jnp
es
push
addl
cmpl
or
clc
mov
loop
mov
fcom
push
jno
mov
xchg
cmp
or
sub
loop
push
jo
or
mov
mov
imul
test
lods
fwait
insl
stos
pop
ret
insb
nop
repnz
pop
mov
sbbl
mov
add
dec
push
scas
int
cmp
fwait
in
mov
add
pop
in
shrl
xchg
mov
adc
cmp
mov
adc
pop
cwtl
dec
mov
in
inc
aam
push
inc
repz
inc
xor
decl
push
enter
mov
inc
jo
pop
cmp
jo
imul
adc
call
adc
ds
xchg
or
push
arpl
nop
add
cwtl
ljmp
inc
push
cs
and
test
int
add
cmp
mov
pushf
ja
mov
pushf
hlt
jl
cld
test
fcmovb
daa
xchg
mov
imul
pop
jae
sarb
repnz
fcoms
xor
pop
add
clc
dec
sbb
fstps
repnz
jge
mov
jg
xor
bound
jae
add
mov
insl
pop
cmp
js
outsb
fsts
aaa
aaa
pop
or
or
xchg
aas
jo
out
sub
dec
add
cmp
loopne
rolb
cmpsb
xchg
sbb
repnz
push
dec
sbb
mov
push
and
imul
xor
xor
xchg
fcompl
mov
pop
stos
mov
testl
pop
jnp
adc
cli
xor
jecxz
out
sbbl
cmp
fists
std
and
jmp
fwait
push
int3
pushf
mov
pop
push
into
xor
and
dec
push
sbb
add
insb
pushf
out
sub
cwtl
mov
jb
inc
mov
lods
sti
ss
jle
xchg
imul
fwait
mov
loop
or
xchg
xor
aam
push
cwtl
repz
bound
test
inc
imul
inc
mov
mov
shl
pop
cli
xor
jns
dec
mov
xchg
sub
mov
fdivs
movsb
and
jnp
pusha
mov
aas
nop
insb
push
movsb
jns
adc
mov
out
xchg
sub
ss
mov
fisttps
les
xor
push
test
adc
popa
es
ss
cmpsb
mov
xorb
rcrl
adc
sbb
sbb
aas
fisubl
out
aad
lret
mov
iret
jb
mov
sbb
mov
sbb
add
test
sub
sbbb
inc
gs
sbb
add
into
fildl
sub
lret
and
push
push
and
or
lock
pop
dec
rcr
inc
lea
loopne
sbb
enter
divl
cmp
test
movsl
jo
movb
adc
jo
sti
sbb
jnp
pop
xor
lock
imul
add
jecxz
pop
lock
inc
xor
jle
add
pop
xchg
pop
and
and
mov
insl
in
jno
icebp
hlt
mov
dec
je
or
cmpsb
or
cld
jns
fwait
pop
mov
iret
rorl
dec
add
pusha
fstp
mov
mov
movsb
lods
pop
nop
in
movsb
daa
cwtl
es
xlat
dec
push
int3
sti
push
popf
mov
ret
mov
jno
das
idiv
nop
or
dec
into
roll
inc
in
mov
cltd
mov
andb
xchg
adc
sub
cmp
jmp
adc
mov
jl
mov
cltd
mov
ss
sub
insl
data16
repnz
fcmovnu
mov
daa
imul
enter
or
push
fidivl
out
dec
lock
xor
mov
lods
xchg
shrl
out
mov
jno
addr16
cltd
mov
mov
adc
push
or
add
xchg
je
imul
pop
pushl
inc
cmp
movsl
jne
negl
les
push
icebp
jg
test
icebp
clc
aas
in
fldl
ret
icebp
in
dec
pushf
loop
scas
mov
pop
in
jno
jb
cmp
incl
imul
adc
add
test
push
repz
sub
cmp
adc
xchg
sbb
cmc
pop
pop
push
jle
cmpsl
in
xchg
xor
pop
incb
ds
sahf
testl
jae
adc
sub
and
jle
sbb
arpl
sbb
cwtl
jbe
out
je
outsb
add
mov
pusha
mov
sarl
ljmp
sbb
xchg
mov
jmp
sbb
or
adc
push
cmp
mov
mov
aam
jns
rcll
cltd
fldenv
enter
push
nop
pop
fcmovne
nop
movsb
in
js
sub
jmp
adc
fcomi
or
std
dec
cmc
mov
or
loopne
popa
jns
and
inc
js
repnz
fmull
movl
sahf
les
dec
lods
xchg
jb
or
imul
mov
jl
test
mov
jne
and
into
shll
cwtl
in
xchg
andl
push
sub
push
ss
arpl
and
test
ss
aad
mov
lahf
dec
xor
arpl
gs
pop
adc
push
out
scas
mov
cmc
cmp
mov
repnz
pushf
push
gs
rcll
dec
es
dec
and
loop
arpl
test
loope
arpl
int3
pop
or
cmp
xchg
xchg
xchg
or
mov
dec
cmp
mov
and
shll
xchg
sub
mov
or
sbb
adc
ds
popf
xor
or
jmp
inc
out
dec
aas
ljmp
sti
or
jge
xor
cmp
inc
aad
mov
outsb
mov
lods
rclb
imul
jle
xor
and
jbe
cld
fnstcw
insl
loope
inc
pop
movsl
push
pop
mov
push
add
sub
dec
mov
dec
ds
mov
in
inc
mov
push
mov
and
inc
mov
xchg
adc
loop
stos
repnz
out
jnp
xorl
aaa
out
pushf
cs
adcl
sbb
sub
mov
push
sbb
sbb
and
rcrb
mov
fstpl
pop
sub
mov
loop
pop
lods
or
add
mov
jg
mov
pop
inc
jo
adc
mov
bound
leave
jns
or
icebp
lds
or
scas
stc
mov
repz
mov
cmp
idivb
push
es
dec
push
xchg
dec
push
xchg
pop
testl
lret
bound
sti
sub
push
iret
pusha
rclb
jnp
jns
out
sahf
loope
movsb
xor
jnp
add
scas
jns
jle
aaa
in
inc
fdivr
jno
xor
push
cli
lcall
jg
jnp
lds
mov
leave
dec
dec
and
lods
stos
push
or
out
mov
sti
in
fnstenv
add
pop
mov
mov
adc
mov
or
cmp
sbb
imul
stc
mov
mov
aas
loop
imul
jno
int3
xor
in
sub
ret
sbb
stos
jmp
mov
inc
add
jae
iret
mov
mov
test
mov
rcll
mov
push
dec
std
cmp
call
mov
add
outsb
ja
push
lea
addb
imul
adc
shr
add
ss
cmp
push
outsb
test
lahf
std
test
cltd
js
icebp
in
jns
jns
in
subl
mov
in
cmpsb
mov
aaa
lahf
mov
sahf
sub
or
xchg
sub
fsts
cwtl
xor
notb
sbb
fisttps
jbe
fcompl
xchg
xchg
jle
int3
cmc
ljmp
mov
lods
jmp
leave
aas
adc
inc
mov
xor
fsubrl
sbb
dec
and
mov
xor
mov
bnd
mov
adc
mov
inc
fs
push
cltd
or
ficompl
lahf
sbb
sarb
popf
std
pop
xchg
mov
push
xchg
and
fcmovnu
js
xchg
outsl
daa
fcoms
loopne
lret
adc
xchg
addr16
sub
or
popf
cmp
daa
lcall
sbb
popf
lds
int3
ss
sti
imul
daa
xor
divl
xor
xchg
rcl
mov
and
push
adc
sub
jae
aas
xor
jno
das
mov
mov
out
pop
add
icebp
xlat
push
or
push
ja
xor
inc
xchg
repz
clc
xchg
sub
repnz
lea
lock
lcall
xor
push
and
mov
pusha
xchg
mov
fcmovne
push
adc
ud1
or
ret
or
and
adc
out
cltd
jb
push
cltd
jae
or
lods
inc
into
shll
aaa
push
xchg
je
loopne
jl
and
pushf
lock
and
dec
cmpsb
push
jno
cmp
rol
mov
nop
scas
cmpsb
and
aas
xchg
inc
mov
aam
in
arpl
jecxz
lcall
and
and
pop
dec
jmp
mov
cmp
mov
mov
lahf
stc
mov
mov
cmpsl
icebp
lret
enter
mov
push
sbb
test
int
xor
call
or
mov
imul
in
push
sub
sbb
fmull
int
clc
gs
andb
or
adc
cmp
push
aas
jnp
fcompl
or
jnp
sub
xchg
rolb
incl
sbbl
fwait
idiv
sti
mov
aaa
cs
mov
xchg
flds
stc
out
in
jbe
ja
jle
fisubs
std
ret
imul
xchg
mov
add
cltd
mov
jg
mov
das
mov
in
push
jge
scas
jmp
xchg
test
ret
dec
mov
outsl
xchg
fbld
cmpsl
ss
sahf
cmp
out
shll
push
cld
sbb
dec
add
cmp
push
rcll
or
mov
mov
popa
push
inc
xchg
int3
adc
xchg
fstl
cmp
iret
ficompl
iret
pop
cmpsb
cld
jge
sahf
pop
pop
lods
xchg
cmp
pop
cmp
or
add
test
ds
cli
mov
jne
mov
das
pop
fwait
iret
in
out
sub
pushf
xchg
sbb
or
or
stos
mov
xor
out
pushl
sbb
rcl
ja
lea
les
fisubs
pushf
addr16
adc
test
add
mov
int
out
or
inc
or
xchg
xor
or
cmpsb
test
dec
xchg
or
jmp
dec
aam
push
mov
cmp
sbb
fimull
shrb
push
mov
pop
lds
loop
jecxz
jne
jg
stos
in
xor
add
aad
les
push
lret
mov
lods
clc
mov
lds
mov
dec
aad
jg
pop
jmp
aam
cmp
pop
xchg
ja
scas
dec
sbbl
imul
fs
jno
xchg
das
test
xchg
pop
xchg
repz
ljmp
cli
fnstenv
inc
lea
std
and
lcall
out
loope
stos
inc
test
inc
or
outsb
ret
fsubs
lret
mov
das
jo
cs
mov
push
aad
sub
sbbb
xchg
movsb
mov
sahf
hlt
into
pop
adc
or
in
pop
and
stos
pop
push
or
and
mov
add
testl
add
jne
add
jle
pop
out
push
and
stos
cwtl
and
cmc
fs
xchg
sub
icebp
cmp
push
out
cld
in
mov
or
cmp
xor
ret
and
ja
or
and
into
arpl
dec
fcomps
ja
clc
sahf
mov
bound
ljmp
xorps
mov
lods
insb
xchg
jnp
and
adc
mov
pop
shrb
jl
xor
push
xchg
jns
xchg
rolb
add
mov
add
movl
das
cmp
cmp
jle
xor
adc
popf
pop
pop
add
dec
jl
push
ret
sub
cmp
ret
sub
xor
or
jmp
mov
jbe
xor
roll
fistl
mov
push
pop
lock
nop
lret
mov
fistpll
repnz
ret
adc
cmpsb
xchg
cmp
adc
sub
mov
in
sti
and
lods
cmp
scas
ret
cmpsl
fstps
imulb
push
out
outsb
int3
sbbl
pop
lods
cmp
xchg
mov
and
adc
jecxz
mov
imul
xchg
mov
out
sbb
aad
push
test
add
aaa
shr
cld
jno
mov
mov
inc
mov
cmp
mov
jp
std
xor
cmp
je
outsl
xlat
push
xor
mov
adc
hlt
lods
cmp
lea
inc
insb
and
cmp
mov
das
mov
aaa
jg
roll
adc
addr16
nop
icebp
push
or
jae
sbb
pop
jae
dec
dec
dec
sar
fs
sub
dec
push
push
push
xor
cmp
sbb
dec
jecxz
mov
stos
pop
lret
mov
faddp
pop
stos
das
outsl
roll
jl
arpl
js
stc
in
dec
sbb
xchg
shll
ds
xchg
jno
shlb
push
mov
push
sub
daa
ss
mov
xchg
adc
rcrb
xchg
mov
push
stos
jg
pop
subl
jmp
jp
push
cltd
stos
cmp
arpl
sub
bound
outsb
ret
cwtl
adc
lea
arpl
bound
faddl
dec
mov
or
sub
shll
push
sub
insl
pop
inc
insb
or
jp
andb
popf
stos
push
mov
sub
mov
cmpsb
mov
aad
addr16
movsb
xchg
fwait
pop
jl
mov
push
dec
dec
jns
xor
fiadds
aad
jbe
pop
adc
incb
or
fsts
loopne
inc
sub
and
cmp
bswap
gs
mov
pop
js
adc
mov
loopne
jl
into
ret
mov
fstps
cmpsb
inc
mov
gs
mov
fwait
dec
mov
add
lea
pop
js
movsw
negb
mov
out
xchg
mov
gs
sub
and
adc
pop
lds
mov
movsl
xchg
xchg
es
test
mov
cltd
sub
dec
inc
data16
sbb
cld
jnp
push
and
fisubrl
add
ljmp
out
add
push
decb
bound
icebp
add
sti
dec
out
push
imul
and
cmp
sub
call
xchg
add
or
adc
scas
mov
jmp
and
mov
test
add
out
add
jb
push
outsb
movsb
arpl
and
sub
repz
hlt
push
ja
xchg
and
popa
inc
imul
clc
shrb
add
cmp
push
cwtl
imul
jl
cmpsb
push
daa
add
dec
jbe
sub
or
xchg
out
jae
stos
adc
and
dec
sub
mov
inc
adc
xchg
xor
mov
cs
push
test
insb
insb
push
das
cmp
add
inc
stos
incl
rep
push
and
cmpsb
push
sbb
cs
or
pushf
mov
aaa
jne
stos
sbb
inc
addr16
or
sub
rcl
shl
std
adc
jg
sub
leave
sub
cmpsl
jp
in
pop
cmp
scas
cmp
xor
repz
pop
loope
incb
rcl
sub
jmp
jns
mov
jmp
jne
out
scas
or
cmp
pusha
repz
outsb
dec
mov
dec
inc
ds
rcrl
jg
stos
or
jae
stos
push
push
jp
aas
or
nopl
cmp
scas
lds
ljmp
mov
fimull
or
xor
ficoml
push
xchg
adc
and
cli
inc
add
pop
push
mov
mov
sub
mov
loopne
ss
dec
mov
rcrb
aaa
mov
inc
pop
cli
leave
push
test
cmp
mov
adc
shlb
arpl
insl
mov
test
adc
or
xor
int
and
sbbl
test
inc
jge
dec
xchg
sub
add
ficomps
loop
xchg
mov
mov
sbb
pop
jp
jns
xchg
ficompl
imul
adc
aas
xor
sub
cmpb
pop
xlat
jo
fs
dec
pusha
sub
shlb
popa
int3
icebp
push
dec
std
leave
pop
rcl
inc
mov
pop
in
scas
icebp
cwtl
xchg
xor
jmp
xor
stos
add
test
aas
sub
aam
aaa
fwait
movsb
iret
lret
pop
cmc
call
aam
pop
or
xor
or
or
sbb
mov
xchg
shrl
mov
lret
mov
rorb
iret
iret
mov
lds
push
sub
fcomp
pop
inc
clc
adc
fwait
or
roll
dec
xor
mov
mov
stos
jae
bound
or
cmpsl
dec
mov
lret
pop
mov
stc
dec
pop
stos
rol
out
sar
cmp
jge
xor
push
push
push
mov
xor
mov
sub
fbstp
adc
dec
in
rep
lock
ret
mov
xchg
jnp
dec
pusha
and
gs
sub
imul
fistpl
xchg
ret
pop
adc
mov
push
rcl
mul
push
xchg
sbb
cmpsb
inc
mov
or
pop
xchg
stos
jg
mov
ds
flds
add
insl
outsb
lods
das
fsubrl
pusha
pushf
int
and
sub
mov
xlat
repz
scas
out
fcoml
fmull
aam
out
pop
sub
cltd
sbb
movsb
mov
insl
push
mov
dec
pushl
cmp
sub
ljmp
add
jmp
jp
push
and
bound
xchg
pushl
test
stc
jo
pop
sahf
lds
inc
jo
xor
lds
mov
cld
pop
hlt
in
fildl
or
lock
cli
push
inc
fs
dec
rclb
xlat
aas
clc
stos
aad
mov
sub
scas
mov
outsl
clc
jns
and
add
and
lods
in
push
mov
outsb
pop
ja
loop
fiadds
mov
jb
push
popf
mov
sbb
stos
out
dec
rorb
fiaddl
mov
cmp
xorb
jb
push
adc
adc
int3
mov
xlat
loope
mov
bound
pop
repz
rorl
sbb
ret
mov
les
sub
dec
inc
lds
cld
les
dec
testl
mov
subb
push
and
ljmp
adc
inc
mov
adc
std
pushl
fadds
loop
out
jecxz
mov
mov
mov
iret
pop
aas
loope
mov
lret
test
movsl
aad
int
shlb
lods
and
pop
test
icebp
sbb
xor
adc
out
xchg
jecxz
sarb
jecxz
cld
cmp
ret
ds
or
cmc
mov
enter
dec
dec
loop
fistl
iret
lcallw
stc
shll
xchg
shrl
cli
xchg
sub
jl
mov
pop
outsl
aas
loop
push
je
and
gs
ret
jge
mov
loop
sbb
jl
mov
into
int3
int3
test
loope
fs
mov
sbb
fwait
pop
jae
cld
pop
clc
or
cli
mov
dec
mov
test
pop
outsb
dec
enter
adc
int3
xchg
into
inc
ds
lcall
popf
mov
repnz
jbe
scas
cld
test
icebp
pop
or
dec
lods
mov
icebp
inc
mov
lret
xchg
xor
cmpsb
sbb
mov
xchg
dec
jns
jne
push
inc
or
aaa
adc
out
and
mov
dec
outsl
rorl
mov
xchg
loop
xlat
aad
popf
jge
xchg
xchg
sub
or
push
sbb
jbe
inc
lret
and
imul
nop
out
lods
dec
ret
xchg
ror
in
cld
insl
in
jne
jp
add
adc
xchg
cwtl
in
mov
lret
cmp
jne
xor
bound
and
shlb
inc
cmp
mov
dec
and
test
aam
lcall
leave
inc
loope
or
xchg
arpl
push
setnp
mov
fcmovne
dec
call
push
fwait
daa
and
stos
lock
dec
dec
add
data16
addb
rcl
sahf
mov
inc
mov
inc
sbb
and
jge
mov
fidivl
mov
enter
mov
mov
sub
mov
push
lea
stos
orb
lds
out
hlt
mov
inc
or
and
icebp
xor
cmovae
xchg
ss
test
pop
enter
ss
mov
in
mov
jecxz
pop
lret
icebp
cmpsl
jbe
hlt
xchg
mov
jecxz
sti
mov
jmp
movsl
lock
mov
pop
out
sbb
aas
jle
add
movsl
fdivs
push
jo
test
std
push
ds
mov
popf
xor
mov
sarl
arpl
sbb
mov
clc
xorl
xor
xchg
mov
out
lret
stos
mov
add
sub
inc
sbb
xor
mov
loopne
pop
call
pop
rcr
mov
push
test
add
mov
lcall
inc
mov
sub
jmp
aas
pop
imul
in
xor
aam
jnp
dec
xchg
iret
jle
xchg
mov
adc
adc
addr16
out
ficoms
call
lock
push
lret
bound
cmp
xor
mov
fldcw
or
xchg
mov
ja
mov
popa
clc
hlt
adc
add
fimuls
jnp
leave
cmp
pop
mov
and
pushf
or
mov
fsub
movsb
js
xor
cmp
jnp
jge
pop
jmp
mov
mov
in
jo
xlat
test
lods
cmp
sbb
mov
lock
pop
cmc
fstps
out
es
inc
inc
pop
pop
xchg
or
adc
and
push
add
xor
repz
pop
lods
or
mov
push
lahf
leave
mov
xchg
in
sub
dec
pop
std
aam
inc
add
push
addb
dec
insb
rorl
test
mov
jne
dec
and
adc
or
inc
xchg
sbb
or
sub
pop
mov
ret
and
loope
hlt
scas
addr16
aaa
fdivl
std
cmc
ljmp
arpl
adc
jo
adc
pop
jnp
jge
sub
scas
sbb
or
lds
inc
mov
out
hlt
inc
scas
sub
mov
cmp
adcb
gs
mov
into
xlat
pop
adc
test
mov
ret
test
insl
std
icebp
mov
sti
jae
xchg
stos
jecxz
adc
das
in
mov
iret
pop
call
jnp
cwtl
push
bound
lods
dec
imul
out
mov
adc
inc
outsl
jno
movsb
and
pusha
test
jg
daa
in
mov
outsb
ret
sub
fimuls
cmp
xorl
out
adc
xchg
lea
xor
ret
popa
pop
pop
and
sub
insl
push
mov
xor
jmp
shrl
sub
mov
cs
cmc
js
stc
rorl
add
and
jle
clc
inc
mov
setp
hlt
roll
inc
outsl
mov
cmp
shll
cwtl
or
clc
aad
in
in
xorb
stc
mov
or
add
in
nop
in
xchg
movsl
pusha
addr16
adc
fsub
lret
push
cmp
xor
cmpsl
rorl
jnp
insl
stos
into
addr16
arpl
fwait
stos
popf
mov
add
jecxz
arpl
xor
ljmp
insl
jmp
call
ja
scas
sub
fmuls
xchg
addl
lds
stos
cmp
pop
inc
or
addl
in
scas
repnz
jae
or
jbe
shrb
push
xchg
dec
aad
into
mulb
sbb
pop
jae
fdivrl
mov
shlb
jbe
imul
cvttps2pi
daa
ja
fnsave
orl
jmp
gs
add
cmp
jnp
rcr
xchg
fcompl
push
xor
mov
push
jno
int
cmp
rclb
push
mov
mov
movsl
sub
ret
xchg
push
inc
dec
inc
sbb
decl
mov
sub
inc
xchg
sub
xor
notl
idiv
mov
shrb
sbb
xlat
jmp
lahf
into
idivb
add
pop
xor
addl
xor
add
fdivp
mov
adc
sub
cmpsb
loopne
jl
femms
int
mov
and
ret
fistpl
pop
mov
jecxz
enter
or
data16
test
jo
jle
movsb
push
in
aas
iret
xlat
add
mov
xchg
cmp
aaa
out
pop
jp
and
push
mov
lret
inc
test
std
cli
ret
inc
sbb
mov
cmpsb
xchg
xor
das
loope
mov
cmp
sbb
jg
or
xorl
sub
dec
lahf
inc
adc
loopne
xor
addr16
loope
cmp
daa
lea
sub
in
jne
and
fildll
jl
xchg
loope
enter
xor
ret
add
xor
lock
adc
xorb
jle
lds
sbb
or
push
cld
mov
sub
repz
loopne
jbe,pn
sbb
mov
ret
dec
pop
rol
pop
icebp
sub
push
lahf
mov
xchg
sbb
shr
dec
aad
out
lds
rcll
xor
dec
loopne
adc
adc
or
rcr
hlt
pop
sub
push
fnstsw
fwait
dec
ret
add
repnz
hlt
fsubp
cli
scas
xor
std
jmp
iret
sahf
pop
stos
xor
fdivs
dec
fstpl
jns
inc
ss
mov
mov
xor
cmpsl
jns
cmp
pop
xchg
mov
repz
sahf
out
dec
mov
cmpsl
push
add
sti
in
ficomps
stc
push
xor
jp
sub
aas
xor
add
les
inc
add
lcall
mov
push
push
add
add
cmp
nop
or
xchg
xchg
gs
std
jo
jo
in
je
push
pushf
shll
mov
sbb
pop
daa
aaa
or
sbb
test
cmp
cmc
cmp
scas
int
pop
or
enter
xor
icebp
jns
jns
ljmp
ret
jle
cmp
in
add
loop
in
adc
out
dec
lahf
xor
push
je
imul
push
addb
sahf
fstl
imul
inc
jmp
pop
xchg
and
popa
mov
cmp
shlb
add
incb
sahf
gs
lock
sbb
push
std
or
pop
punpckhwd
mov
out
pop
into
xchg
cwtl
sahf
mov
dec
fucomip
scas
daa
out
es
sub
cwtl
cmp
mov
insb
cli
xor
cwtl
pop
pop
xchg
jle,pn
push
and
fcoml
adc
xchg
fs
xchg
xchg
jl
cli
adc
adc
ds
add
sub
outsb
mov
mov
lret
mov
out
mov
xchg
inc
dec
ret
jae
or
scas
jnp
lea
mov
or
push
jmp
xchg
mov
sbb
jp
bound
jmp
jp
pop
aam
jo
mov
ds
fisubl
ds
jae
mov
outsl
ljmp
xchg
outsb
je
adc
mov
das
shll
pop
lods
int3
jg
xchg
lds
lcall
enter
test
jnp
mov
xchg
scas
inc
ljmp
incl
loope
mov
fs
imul
sahf
and
mov
dec
cmc
lods
xchg
movsl
mov
fidivrs
ljmp
imul
mov
sub
xchg
adc
pop
push
inc
shl
pop
imull
out
ficoml
dec
fs
lret
push
dec
push
add
fldcw
in
in
cmp
xor
and
push
out
add
or
xchg
and
cmp
inc
jns
mov
in
mov
xor
mull
or
add
gs
xchg
aad
repnz
xchg
push
loope
addl
sbb
or
push
mov
les
lea
mov
in
clc
push
lcall
data16
loope
jl
or
out
fisttpl
fwait
scas
ljmp
mov
lret
jae
leave
mov
je
int3
adc
xchg
jmp
sarb
out
push
pop
adc
es
add
jg
pop
imul
pop
cmpsb
push
sub
cmc
in
cmpsb
in
push
lret
fistpll
addr16
fsts
je
cmp
sub
in
or
or
cs
cli
inc
adc
add
mov
jp
push
dec
or
out
test
lods
out
add
test
mov
mov
stos
jnp
push
clc
test
jl
jo
jae
scas
ret
fbld
iret
adc
pop
mov
sbb
aaa
jecxz
fyl2xp1
jae
mov
mov
rcll
std
loope
out
xor
jmp
or
and
mov
and
mov
stos
xchg
fsts
cmpsl
mov
inc
aaa
xor
rol
cs
sub
out
jmp
mov
pop
shrb
pushf
negl
mov
imul
jbe
rcrl
lods
stos
add
push
xchg
mov
pop
into
jle
push
cmp
sub
cmc
dec
cmp
aaa
stos
mov
inc
negb
inc
test
hlt
push
lods
test
and
mov
mov
cltd
xlat
in
mov
loop
sub
test
xchg
push
test
outsl
stos
jge
push
jg
pop
xor
xor
mov
cmp
ret
daa
addr16
repz
mov
push
addr16
jno,pn
or
imul
je
xor
xchg
sub
mov
inc
sub
popf
cmpsb
stos
add
jae
sbb
imul
jl
test
std
or
leave
or
mulb
shlb
lahf
js
scas
mov
pop
and
and
out
jecxz
cmpb
fmull
cmp
pop
loop
mov
cmp
popf
and
adc
pop
aas
xchg
xchg
fwait
dec
lea
jno
iret
sbb
leave
inc
and
cs
and
lcall
sbb
out
xchg
push
sbb
insl
jmp
push
jbe
pop
test
iret
cmp
sbb
loopne
loop
pop
loop
inc
and
or
cmp
xlat
js
test
dec
pop
test
cmpsb
leave
aaa
idivl
pop
sub
and
arpl
adc
push
lock
in
pop
insl
xor
xchg
push
or
or
fs
xchg
mov
push
mov
into
in
out
fists
mov
test
push
pop
outsb
orb
cld
dec
outsl
rorl
lret
push
add
mov
subb
imul
xchg
scas
jle
push
nop
dec
add
pusha
es
and
add
add
sub
jg
xchg
sub
sbb
xchg
mov
push
insb
mov
repz
cwtl
add
push
fmulp
rcl
add
sub
fcomps
clc
sbb
clc
or
jl
pop
add
call
dec
cmovg
int3
pop
test
outsb
into
inc
pushf
repz
aad
add
mov
lret
adc
pop
daa
mov
jg
ljmp
sbb
xchg
pop
hlt
and
mov
std
xor
enter
mov
adc
mov
dec
mov
push
rep
mov
xor
test
add
popa
cmp
out
mov
jmp
stc
and
xchg
test
hlt
mov
shl
pop
add
adcb
stos
lahf
sti
pushf
test
insb
mov
inc
inc
sub
imull
push
xchg
push
push
jo
xchg
rorb
mov
ret
out
sbb
jmp
shrb
jns
aad
icebp
daa
and
pop
lret
jmp
jb
mov
sarl
cmc
and
out
add
dec
jecxz
adc
enter
sahf
pop
add
imul
iret
jbe
ret
or
lret
sbb
jp
cmpsb
fstps
lds
cmpsb
push
sub
mov
bound
mov
outsl
sub
mov
in
sub
fnstsw
outsb
jecxz
jp
cmpsb
mov
sbb
ret
js
push
sub
aas
add
add
push
sub
mov
outsl
add
jne
jne
jnp
enter
sahf
xor
add
cmp
rcrb
test
scas
adc
jmp
repnz
jmp
stc
mov
jmp
xchg
popa
es
scas
int3
sbb
and
push
ds
loopne
pop
lahf
xor
add
hlt
fxam
or
stos
fs
icebp
pusha
xor
leave
repnz
ret
roll
int3
stos
inc
dec
orl
mov
iret
pop
dec
mov
sub
shlb
pop
pop
mov
fdivrs
repnz
popa
pusha
cmp
cmp
xchg
jb
cli
in
fisubs
clc
popa
out
jmp
in
jb
cmp
int3
nop
test
xchg
loopne
lcall
repz
stos
sub
lret
ljmp
push
icebp
xorl
icebp
ret
jmp
icebp
sti
movsl
aad
or
call
out
inc
shrl
xlat
clc
das
loop
bound
fstl
test
test
out
jnp
ljmp
fnstenv
add
inc
pop
daa
add
sbb
in
sbbb
push
test
mov
mov
cli
sbb
mov
lea
add
out
dec
adc
xlat
aam
lods
repz
shrl
cmp
fnstenv
cltd
mov
lret
das
bound
in
popa
xlat
std
mov
or
fwait
sbb
int3
int3
inc
ss
pop
push
int3
fcoms
or
mov
enter
mov
dec
test
mov
shr
jo
lret
int
aaa
clc
or
and
icebp
dec
push
insb
sbb
stos
jmp
cwtl
test
pop
scas
movsl
aaa
cli
mov
xchg
inc
xchg
fimull
adc
pop
xor
jbe
push
lcall
insl
scas
fcmovnb
pop
cmp
ljmp
das
and
or
add
sbb
movsl
mov
repz
fwait
cld
in
sbb
loopne
mov
cmp
loopne
icebp
adc
mov
das
dec
mov
iret
add
rcrb
rol
push
mov
or
inc
inc
pop
cmp
inc
jns
shll
loop
jb
jnp
mov
lea
jle
cmc
mov
test
push
mov
or
mov
mov
inc
loop
ret
pop
shll
stos
and
sti
mov
dec
jo
pop
out
xor
cmp
adc
and
sbb
pop
pop
dec
adc
mov
push
in
sub
adc
movsb
cmp
nop
mov
out
mov
test
movsl
cmp
cmpsb
xor
pop
add
addb
push
mov
pop
test
push
ja
jnp
adc
movsl
shrb
dec
lods
mov
sbb
xlat
dec
imul
cmp
ja
inc
or
insb
fisttpll
aam
data16
add
and
pop
clc
jmp
mov
movsl
aas
mov
cwtl
movsb
stos
pop
addr16
push
incl
in
mov
outsl
add
push
call
lds
sbb
jbe
sti
fs
idivl
clc
xor
pop
push
jge
xor
and
xchg
ds
arpl
add
in
pop
adc
les
and
scas
adc
notb
inc
sbb
out
inc
push
and
repnz
ds
or
push
mov
aaa
ret
aam
mov
xchg
xchg
lods
pop
imul
cwtl
ret
in
outsl
mov
fnstsw
adc
outsb
lock
stos
or
fiaddl
pop
push
add
jne
cltd
cmp
jbe
push
pop
or
jl
xor
or
dec
movsl
js
jnp
mov
jl
and
cltd
loope
pop
add
lea
mov
dec
test
es
scas
inc
outsb
xchg
call
jp
cmpsb
js
xor
stos
or
and
adc
arpl
mov
cmpsl
jl
jnp
mov
lahf
mov
mov
adc
and
sub
es
aas
nop
adc
ljmp
out
dec
out
pop
repz
loop
ja
out
and
sub
fists
mov
mov
xor
lea
or
pop
or
int3
andl
add
sub
adcb
adc
shl
and
fstpl
sub
sbb
jge
mov
push
mov
sahf
inc
insb
mov
incb
pushf
mov
dec
test
mov
and
sub
sub
cmp
jnp
dec
test
mov
adcb
aad
pop
into
adcb
mov
push
jmp
je
add
sbb
out
jne
int3
call
aad
dec
cmpsb
test
stos
adc
jb
aaa
in
add
out
iret
or
xchg
loope
insl
push
sub
out
fs
mov
push
outsl
out
jge
push
rcrl
xchg
ds
jbe
mov
jg,pn
xchg
inc
push
std
out
push
test
sbb
or
sarb
dec
pop
cmp
jp
sub
mov
jge
or
mov
jo
imul
scas
xchg
repz
xlat
popf
or
jae
mov
das
lret
cmpsb
loope
fisttpll
aad
cmpsl
xchg
push
fidivs
inc
in
mov
cmc
sbb
xchg
pop
dec
in
pushf
dec
cmpsl
ss
jbe
mov
xor
add
xor
push
mov
cli
or
cmp
es
dec
cmp
cmp
call
jp
push
hlt
adc
out
push
mov
xchg
xchg
sub
pop
push
lods
das
dec
adc
cmp
inc
cli
addr16
lea
pop
sub
aad
pushf
icebp
add
rcrb
arpl
scas
fld
int3
out
inc
data16
inc
in
xchg
lods
adc
dec
mov
xor
pop
sub
sub
push
lahf
lods
jge
jbe
or
lret
imul
shrb
cmp
insl
dec
mov
cmpsl
lock
test
pop
cmp
sub
pop
mov
pop
push
adc
push
push
into
cmp
aaa
mov
lods
and
jnp
sbb
mov
jmp
aad
mov
out
cmp
mov
jae
sbb
cmpsb
jno
in
jg
jmp
movl
add
jp
lahf
negl
or
xor
jo
dec
dec
fcompl
jecxz
jg
bnd
popl
xor
push
cmpsb
das
jnp
cmp
sub
enter
pop
loopne
movsb
sbb
mov
sbb
jae
cmp
or
sbb
notb
loop
out
inc
in
push
mov
add
dec
xchg
and
inc
adc
xchg
and
inc
or
testl
jp
or
xor
imulb
cmp
fsubl
mov
cld
addr16
mov
std
dec
and
clc
pop
adc
adc
int3
mov
or
mov
push
sub
jne
jne
icebp
stos
cmp
icebp
fst
sub
mov
js
flds
ficoms
notb
cwtl
iret
loopne
push
jnp
dec
mov
imul
in
mov
push
daa
jno
cmp
ljmp
sbb
add
sbb
outsl
ja
popf
pop
xchg
outsl
push
dec
or
xor
icebp
or
jecxz
inc
and
loope
dec
xchg
test
jmp
mov
mov
stc
inc
pop
lret
inc
pop
out
mov
fildll
into
stos
inc
cmp
mov
push
lahf
out
mov
sbb
sbb
xor
incl
mov
dec
ja
aam
cmpsl
add
movsl
adc
and
in
aaa
jns
rep
push
scas
xchg
xor
int
add
pop
sbb
test
fsubrs
sbb
jno
mov
imul
mov
incb
pusha
in
dec
movb
mov
lods
mov
sub
cmp
das
shll
es
mov
push
lds
cli
pop
and
add
add
insl
in
out
sbb
addl
iret
imul
xlat
lock
scas
sub
aas
jge
insb
js
fistpll
icebp
imul
jmp
push
adc
jecxz
test
push
testb
popf
aas
clc
aaa
fs
out
jmp
sti
gs
movsb
mov
daa
outsb
mov
jbe
jmp
mov
jecxz
xor
in
inc
xchg
fisubrl
mov
ret
mov
mov
pop
cwtl
dec
push
mov
sub
leave
ret
ret
push
sbbl
insl
idivl
popa
pusha
rol
pushf
sbb
outsb
xchg
inc
mov
pop
xor
int
cmp
mov
dec
adc
lods
sbb
and
add
repz
jl
loop
pop
mov
loopne
jne
jmp
les
imul
in
sbb
or
xchg
mov
or
mov
loopne
adc
shlb
cmp
or
ret
jnp
test
sbb
push
lcall
jg
xchg
mov
mov
pop
mov
sbb
test
repz
or
jae
testl
cs
in
js
lods
call
and
loop
cmp
mov
sbb
pop
ss
or
adc
jp
aaa
ljmp
jmp
daa
aam
xlat
mov
mov
subb
mov
sbb
jns
or
adc
in
sub
les
pop
inc
daa
sahf
scas
xchg
sub
mov
pop
mov
add
and
xor
adc
xlat
xor
shrb
jl
popa
mov
push
mov
pop
inc
mov
ret
or
ja
out
inc
fsubrl
or
test
ret
push
fstp
mov
fs
repz
dec
les
lahf
and
dec
xor
addr16
nop
les
aad
mov
mov
add
or
and
and
sbb
xchg
ja
popa
dec
pop
sbb
mov
loopne
inc
add
fs
mov
sub
jmp
loop
jae
addb
sub
push
push
aam
cld
pop
add
mov
clc
cwtl
rcr
push
lock
xchg
imul
pop
scas
rcrl
add
jne
xor
out
mov
jmp
pop
mov
jns
popa
dec
sbb
outsb
test
test
mov
addb
test
mov
pop
std
jo
out
and
sbb
out
mov
mov
dec
pop
adc
in
add
repz
scas
rorb
adc
lret
ja
jae
in
popf
mov
sub
ror
mov
jp
xor
inc
fstpt
scas
lea
adc
shrb
pop
mov
shr
insb
jecxz
sbb
js
lock
ss
mov
int
mov
pop
mov
mov
cld
inc
shl
in
sbb
arpl
xor
stos
push
cmp
push
adc
lods
ffreep
fdivp
arpl
ficompl
sub
adc
mov
inc
mov
cmp
arpl
lock
fadds
add
mov
adc
xchg
ret
jecxz
xlat
push
data16
movsb
stos
sbb
xchg
outsl
lea
mov
pop
jg
mov
and
sub
mov
jbe
or
sar
inc
mov
fstpt
aaa
cwtl
jge
pop
dec
arpl
sub
mov
fs
jp
out
mov
dec
outsb
jmp
jecxz
test
xchg
scas
jae
int
fnstenv
pop
cmovae
sti
xor
lret
push
cmp
mov
push
mov
jns
out
pop
cld
dec
adc
or
cmp
insl
es
in
cwtl
inc
cmpl
push
out
inc
sbb
gs
pop
mov
and
or
stos
cmp
stos
sbb
mov
sub
or
fimuls
sarb
shlb
repz
jmp
stc
xchg
or
mov
fimull
gs
insb
mov
push
das
pop
jecxz
cmpsb
dec
ret
aaa
aam
out
daa
sub
jg
push
cmpsl
jmp
mov
jl
cmpb
dec
les
cmp
mov
sbb
rorb
xor
sbb
mov
pop
xor
fidivs
mov
out
sub
jecxz
inc
or
adc
scas
inc
hlt
push
sbb
int3
js
lods
scas
sbb
pop
or
jle
mov
mov
movsbl
stos
cs
xlat
push
outsl
les
sbb
outsl
wbinvd
insl
sbb
adc
adc
insl
mov
sahf
and
xchg
mov
arpl
js
pop
lea
rolb
sbb
adc
cmp
mov
or
push
mov
hlt
icebp
sbb
and
fcmovbe
cmp
adc
and
gs
dec
sbb
gs
dec
test
mov
jno
or
aad
pop
mov
aad
fcom
divl
cld
adc
ljmp
mov
lods
pop
adc
sbb
dec
xchg
int
addr16
movsl
out
stc
inc
fwait
scas
repnz
shlb
mov
mov
insl
mov
repnz
stos
lcall
sub
test
pop
mov
fiaddl
into
fsts
cmp
sub
xchg
push
imul
jno
push
mov
jnp
and
dec
mov
bound
add
mov
xchg
out
mov
mov
adc
cmp
shll
jb
add
inc
pop
ret
jmp
push
cmpsl
dec
popl
mov
mov
push
lcall
rcll
fwait
imul
ficomps
lods
insl
push
sub
nop
int
in
jno
outsb
push
js
fmull
fsubs
repz
dec
iret
push
clc
popa
pop
pop
arpl
lds
and
popf
enter
jmp
xchg
mov
ss
aad
jbe
push
add
push
lret
pushl
sub
mov
xor
xchg
jno
into
xchg
stc
sti
popf
mov
lahf
add
adc
std
pop
adc
test
lock
xchg
call
sub
and
or
push
test
jg
and
stc
js
mov
fnsave
push
adc
jns
lock
add
lcall
adc
movsl
push
rep
es
arpl
xchg
sub
sbb
loope
stos
inc
mov
stos
test
adc
pop
out
cmc
push
lret
rorl
dec
ja
push
das
fisttpll
dec
int3
or
insl
pop
out
ds
sbb
call
sti
sub
fnstcw
mov
mov
xor
push
das
leave
mov
ja
jo
mov
cmpsb
in
ljmp
cltd
pop
sub
lock
jnp
mov
dec
in
jnp
or
loop
mov
xchg
movsb
xor
mov
out
in
push
outsb
stc
aam
movsl
enter
xchg
push
push
into
aaa
pushf
mov
lods
mov
outsl
addb
icebp
pop
add
jne
std
repz
mov
fcmovnb
in
bound
incb
mov
push
dec
xchg
es
ja
and
pushf
and
jp
loopne
daa
stos
or
xor
les
jmp
test
aad
jmp
ds
pop
push
xor
cs
and
sbbl
adc
les
out
mov
nop
jle
xor
and
dec
cmp
sbb
jmp
jg
test
push
mov
inc
sarl
mov
mov
cmp
rolb
and
adc
outsl
pop
adc
mov
add
or
add
call
scas
jmp
mov
in
lret
incl
xor
test
dec
lock
pop
cmc
push
xor
jbe
pop
sbb
mov
xchg
jge
inc
adc
pop
and
fistps
roll
sbb
in
cmp
inc
outsb
pop
jmp
out
push
cld
shll
or
out
push
in
adc
aaa
negl
fs
pop
notb
xchg
icebp
add
nop
lcall
in
repz
mov
rcr
scas
shll
sub
int
add
push
jmp
and
ficoml
jp
outsb
add
es
dec
inc
sti
xchg
dec
adc
cmpl
js
in
loope
pushl
mov
sub
out
loope
movsb
pusha
enter
push
xor
lret
xlat
fiaddl
rolb
pop
movsb
js
inc
pop
sbb
cli
cmp
ja
dec
daa
cmp
xchg
dec
mov
and
xor
pop
mov
das
pushf
cmp
stos
or
jmp
adc
dec
lahf
int3
mov
adc
sbbl
pop
push
lret
xor
fidivrl
pop
dec
mov
pop
int
push
dec
daa
ret
sbb
dec
out
push
or
add
loopne
adc
dec
cmp
mov
mov
das
test
cmp
xchg
outsb
cmp
dec
outsl
dec
inc
xor
cmpsl
repnz
cmp
insb
dec
aam
lods
int3
mov
jo
push
jp
mov
testb
aaa
jmp
sub
push
or
push
cs
pop
xor
jnp
mov
push
push
pop
push
or
aad
xchg
daa
aaa
or
pop
sbb
pop
lds
xchg
les
or
push
jbe
dec
mov
push
cmp
std
inc
outsb
enter
pop
fmuls
and
add
mov
repz
sbb
or
cwtl
add
push
icebp
mov
dec
int3
push
in
dec
icebp
ljmp
xchg
repz
dec
cmp
in
inc
sub
mov
adc
and
xchg
fisubrl
subl
dec
dec
xor
movsl
les
leave
test
out
or
xchg
adc
xchg
es
movsl
pop
stos
mov
fwait
and
mov
mov
pop
push
inc
ljmp
and
ficoml
jb
stos
movsb
fwait
mov
mov
inc
add
sbb
cmp
jne
sbb
jo
in
insl
push
dec
test
aad
shl
sub
pop
add
mov
insb
jl
dec
pushf
les
push
aaa
enter
dec
jns
and
pop
movsb
sti
pop
rolb
jo
repnz
movsb
cmp
sbb
xchg
or
gs
mov
int3
dec
loop
in
mov
jle
inc
add
lods
xor
ja
pop
dec
fs
imulb
inc
mov
mov
std
push
jle
lds
xor
shl
sbb
imul
scas
into
or
movsl
pop
pop
mov
pop
or
fnsave
repz
repz
scas
xor
hlt
lds
andl
sub
jecxz
data16
sub
jae
repnz
push
lods
add
or
call
out
sub
bound
addr16
dec
pop
int3
inc
aas
and
push
aaa
int
imul
xchg
push
stc
mov
pop
fdivrl
sub
cmp
push
lods
adc
add
pop
or
mov
jb
popa
subl
imul
mov
aam
push
orl
or
mov
mov
daa
sbb
out
xor
dec
jmp
fisubrs
jns
icebp
hlt
shll
iret
mov
lret
cmp
mov
fildl
je
mov
or
ja
xchg
and
lods
xchg
mov
sbb
stc
dec
jae
cmpsb
xchg
and
sbb
scas
adc
sub
inc
cmpsl
pusha
mov
add
dec
jl
lea
lock
pop
push
inc
jae
fnstcw
mov
add
xchg
add
mov
addr16
add
mov
stos
divl
inc
in
call
movsl
cmovl
sub
jmp
es
push
mov
data16
lds
nop
lods
out
push
insl
scas
pop
mov
jecxz
in
push
inc
std
idivb
jmp
fnsave
bnd
loopne
fwait
xor
fwait
sub
andb
mov
sbb
lahf
mov
subl
jl
mov
cmp
out
fdivl
jmp
inc
mov
and
lds
inc
rorb
mov
arpl
jae
fildll
mov
int
mov
int3
imul
ss
nop
sub
push
fisubl
or
pop
jae
insb
enter
loop
push
testl
jge
push
jge
push
rcr
and
icebp
loope
lret
inc
xor
push
mov
jge
dec
adc
out
loope
jg
sbb
add
cmp
jle
jl
jge
in
dec
cld
repz
fldenv
int3
out
in
lock
xchg
dec
and
aas
pop
push
jmp
sub
mov
daa
loop
fbld
or
or
es
sub
adc
adc
cs
lock
mov
gs
pop
call
stos
inc
add
popf
pop
sub
imulb
faddl
cmpl
or
fs
cld
out
pop
jmp
inc
sbbb
stos
out
mov
or
loopne
fwait
rcrl
leave
mov
cld
mov
pop
inc
dec
push
inc
or
test
lea
adc
mov
stc
add
inc
gs
loope
mov
sbb
push
or
cltd
into
icebp
out
out
fistpl
dec
cmp
push
mov
and
rclb
mov
std
lods
jae
cmc
sub
lea
mov
loop
adc
sahf
out
mov
in
movsb
add
mov
sub
mov
lods
icebp
xchg
es
or
xchg
mov
dec
add
push
pop
pop
cs
mov
mov
push
or
stos
mov
xor
in
and
jl
jno
mov
or
andb
sbb
cmp
ret
bound
scas
jne
or
adc
popa
addr16
jno
mov
xlat
dec
push
mov
cli
repz
fstpl
ret
mov
mov
mov
repnz
cld
push
loopne
flds
add
inc
lods
jbe
xchg
add
inc
out
sbb
lea
test
mov
mov
or
xchg
push
dec
mov
sub
loop
push
rdmsr
mov
or
dec
dec
jl
sub
pop
push
jnp
mov
imul
mov
mov
sbb
mov
test
decb
sub
push
dec
nop
jl
cltd
push
push
mov
mov
jle
repz
jp
sub
addb
and
push
sbb
and
mov
sub
jae
lahf
sbb
cmp
xor
lret
icebp
fadds
mov
lods
outsb
pop
sub
fcomps
push
or
mov
and
xchg
sbb
adc
stos
push
int
pop
popf
dec
fstl
inc
imulb
mov
cmp
sub
in
inc
or
setnp
xlat
xchg
in
cmpsb
roll
rol
dec
rol
mov
pop
in
cmp
stos
cmp
gs
jb
and
mov
mov
lds
mov
xadd
mul
or
shlb
negb
in
iret
sub
fstpl
fcmove
mov
xchg
adc
add
in
insb
negl
pusha
out
inc
xchg
js
fdivs
subl
mov
xchg
lcall
push
lds
nop
push
testb
hlt
mov
and
push
lods
icebp
shr
jg
movsb
mov
repz
sub
inc
popa
cmpsl
push
jns
jge
scas
mov
jle
push
mov
gs
scas
jge
cwtl
sbb
outsb
dec
pop
pop
jno
ds
test
jno
in
test
push
sbbl
push
gs
insl
icebp
cmp
sbb
push
jp
inc
or
xor
nop
andl
dec
pushf
jae
ret
mov
insl
scas
xchg
popf
adcb
insl
inc
add
lock
into
jge
xchg
repz
push
aas
add
mov
or
mov
repz
inc
and
sub
pop
push
stos
mov
pop
cli
out
test
shld
xchg
sub
popf
in
ret
jno
out
or
jmp
mov
add
sub
ret
pop
add
rolb
call
insb
jle
aaa
pop
mov
dec
aas
xorl
movsb
push
fucom
inc
scas
jns
aam
jp
mov
sbb
sub
out
dec
push
sbb
sub
xchg
cs
int3
mov
xchg
sahf
add
bound
lret
mov
scas
and
dec
pushf
lods
loope
or
push
arpl
xchg
xor
sbb
repz
mov
adc
repz
push
fsubr
out
testb
mov
je
aam
aaa
fsubl
fwait
cltd
fwait
std
mov
push
or
lret
lds
mov
leave
clc
loopne
repz
inc
mov
mov
rclb
adc
sub
iret
add
mov
sahf
jle
xchg
xchg
push
lret
fmulp
into
xor
stos
ja
aaa
cmp
xchg
cmc
add
push
icebp
mov
loop
mov
mov
push
inc
xchg
pushf
ffreep
stos
push
leave
lods
jecxz
mov
es
push
clc
lods
scas
xlat
imul
cmp
or
int
push
sar
lret
jbe
xor
jbe
fisubs
or
add
mov
sbb
dec
xlat
stc
out
mov
ss
pop
imulb
pop
subl
mov
jno
xchg
mov
adc
add
lea
lods
mov
icebp
adc
addr16
pop
adc
push
ds
xchg
call
test
cld
rcrb
xchg
sbb
mov
rcll
mov
int3
lret
gs
fisubl
jg
repz
icebp
push
fucomip
movsb
push
faddl
loop
xor
rcrl
xchg
add
cmp
lcall
in
jnp
cmpb
jns
jo
jmp
xor
and
movsb
lret
repz
sbb
je
outsb
loop
mov
mov
lret
sbb
xchg
fadds
pop
jge
adc
lods
mov
notb
dec
rol
mov
push
stos
movsb
xchg
inc
outsl
xchg
aaa
cmp
mov
cmp
hlt
hlt
sbb
xor
mov
fsubl
rcr
enter
lea
aam
and
movsb
aas
xchg
and
je
cmpsb
mov
push
fdiv
push
cmpsl
cmpl
insb
cs
push
mov
adc
mov
jmp
cmpsl
daa
fwait
xchg
lods
insl
mov
xchg
xchg
xlat
test
loop
mov
jecxz
imul
cmp
pop
dec
popf
sbb
pop
mov
mov
orl
and
movsb
xchg
jg
loope
pop
mov
ja
lcall
call
mov
imul
mov
mov
pop
fwait
cmc
add
int
jbe
xchg
bound
cmpsl
xor
jb
mov
mov
mov
jnp
aas
sarl
mov
mov
xor
movsb
repnz
and
xor
cld
and
cmp
xlat
je
jmp
ffreep
sahf
popa
pop
iret
cltd
cmpsl
push
divb
push
sub
push
adc
cs
ficoml
or
xor
nop
dec
ljmp
dec
cs
lcall
je
out
jne
xchg
jl
inc
cmp
loope
or
ja
dec
xor
arpl
rcll
or
movl
mov
fwait
sbb
out
xor
sub
scas
mov
mov
aad
inc
and
lcall
subb
xchg
mov
rcl
cwtl
rcl
push
loopne
mov
js
jnp
inc
jge
hlt
scas
inc
jae
and
jle
mov
nop
out
cmc
pop
in
testb
mov
or
lret
jge
sbb
push
lock
sti
lock
mov
sbb
arpl
fidivrl
xor
pop
adcb
aad
jns
andb
test
sub
sub
leave
sbb
mov
sbb
in
mov
and
rorb
pop
cs
enter
test
stos
cwtl
add
jnp
pusha
xor
and
mov
jb
shr
and
mov
or
sub
jns
sbb
sbb
add
pop
int3
mov
or
cmp
testb
push
mov
imul
shlb
insl
push
test
mov
push
cmpsb
mov
xchg
mov
lock
arpl
jl
inc
sbb
mov
and
cmp
pop
adc
jne
sub
data16
neg
fidivl
je
andl
daa
cli
testl
xchg
xlat
or
adc
data16
js
sub
inc
push
push
add
adc
or
mov
add
mov
dec
pop
add
push
cmp
add
into
xchg
loopne
or
mov
repnz
in
xchg
sub
cmp
pop
jne
enter
mov
in
pop
pop
aas
adc
push
dec
push
jo
add
sti
fs
inc
fsts
scas
hlt
push
sub
movsb
adc
ss
mov
sub
mov
aas
test
adc
mov
sub
shrb
mov
roll
push
jb
arpl
sub
cli
cmp
fnstsw
and
pop
cs
cld
pop
xchg
xor
pop
or
aad
push
stos
mov
fwait
xchg
std
das
out
cmpsl
addb
insl
push
fstpl
inc
sarl
xchg
push
mov
rorb
test
sub
lods
jl
mov
fstpl
addr16
cmp
imul
arpl
insl
ljmp
ljmp
insb
pushf
adc
dec
push
rcll
out
test
das
sbb
mov
pop
or
or
arpl
lcall
loop
inc
adc
sub
test
mov
xor
inc
push
push
cli
adc
or
divl
popa
iret
iret
cwtl
daa
push
cmc
int3
cmpsb
mov
mov
cmpl
movsb
push
mov
mov
xor
jae
sub
inc
out
and
cmp
jecxz
push
ror
push
and
or
test
inc
adc
jae
imul
pop
fimull
fxch
jge
mov
xor
cmp
ss
mov
ret
js
and
fdiv
xor
pop
jg
test
rcl
cltd
in
mov
daa
sbb
jae
in
cltd
das
out
mov
rcll
pop
xlat
adc
jbe
shll
in
sub
push
mov
xor
pusha
jl
rolb
insl
and
insb
in
cmp
shll
jp
addr16
aad
xor
sbb
lods
or
loopne
ljmp
mov
mov
les
notb
test
in
dec
mov
repz
xchg
cld
mov
stc
lods
xchg
jbe
xlat
ficompl
stos
cmc
inc
sbb
gs
sarb
push
shrd
mulb
jmp
push
or
test
loopne
mov
push
push
add
mov
push
jmp
dec
stos
mov
add
inc
lock
popa
push
popa
mov
adc
mov
scas
sahf
cmpsb
cmp
mov
lea
test
jecxz
pop
cmpsb
jb
test
shl
ljmp
jae
mov
inc
sbb
or
in
jmp
or
or
mov
js
imul
jmp
sub
jle
cmp
xchg
xchg
adc
mov
js
and
fwait
fisttps
cmpsb
mov
nop
pop
push
in
aas
lds
clc
add
movsl
inc
cmp
push
mov
adc
rorb
add
aas
inc
fwait
cmp
sti
data16
mov
sbb
aad
insl
fcomps
or
outsl
push
outsb
test
cmp
out
jo
dec
add
adc
xor
movsb
pop
sbb
in
pop
in
inc
xor
movsbl
jo
mov
lods
aad
stc
adc
insb
paddusb
test
or
aam
icebp
and
add
icebp
outsl
pop
pop
add
sahf
sbb
mov
sbb
or
data16
imul
sub
mov
movb
push
lods
and
mov
loopne
xor
pop
jb
test
int
or
sar
jge
shlb
mov
push
sbb
xlat
xchg
inc
adc
jns
fwait
pop
fsubs
sahf
fs
out
int3
xchg
xchg
and
ss
divb
and
mov
sub
out
xchg
pop
sbb
dec
les
pop
in
pop
add
jg
lea
push
jmp
dec
and
mov
xchg
iret
imul
cltd
inc
out
pop
jp
vmovaps
or
into
and
clc
test
mov
sub
or
push
dec
pusha
aas
iret
daa
movsb
outsb
sahf
scas
push
aad
push
and
testb
std
and
pop
add
pop
xor
test
push
and
jl
sub
sub
repnz
imul
pop
cmc
inc
pop
push
inc
std
pushf
jno
stos
pop
stc
addl
or
pop
dec
xacquire
adc
or
mov
push
push
xchg
cwtl
sbb
xor
mov
sbb
pop
pushf
fs
sbb
sub
xor
shr
and
decb
sbb
pop
hlt
adc
rorb
xchg
push
loop,pt
jae
sarl
xchg
mov
push
jne
xor
or
adc
push
movsb
ss
and
adc
out
lret
sub
push
dec
faddp
test
lret
shl
andl
or
xchg
and
jg
xchg
dec
test
dec
push
imul
pusha
sahf
pop
push
jb
xchg
xorb
shrb
mov
sbb
scas
int
dec
leave
shll
pop
sbb
outsl
sbb
sub
test
mov
aas
insl
or
inc
and
push
mov
dec
dec
into
movsb
pop
mov
mov
ret
lcall
lret
pusha
xor
test
jne
mov
mov
xor
pop
pop
aad
and
mov
xor
and
mov
fsubp
lahf
es
push
outsb
xchg
jge
stos
test
xor
add
test
xchg
add
xchg
inc
call
mov
iret
out
shll
cmp
stos
adc
adc
mov
mov
dec
push
outsl
sbb
adc
push
or
pop
pop
sbb
nop
pop
mov
xchg
jns
int3
ds
jmp
push
loop
jl
mov
lds
mov
movsb
jl
and
in
inc
cmc
push
add
insl
add
or
pop
push
xorl
bound
dec
shlb
shr
das
je
fnstsw
les
std
les
iret
int3
ja
mov
and
sub
add
xor
mov
in
iret
jns
dec
jo
and
push
outsl
xor
xor
and
adcb
mov
lahf
inc
cmp
cmp
dec
mov
rcr
mov
pushf
stos
sub
cmp
mov
mov
mul
movsb
adc
push
mov
push
orb
dec
sbb
cmpsb
mov
cmpl
sub
loope
xchg
mov
lahf
stos
add
add
and
lret
jg
scas
sbb
adc
xchg
jno
inc
out
icebp
mov
repnz
imul
xor
jp
aaa
popa
inc
in
xchg
fcomip
mov
push
adc
jmp
jge
dec
sub
insl
loopne
out
call
jg
pop
sub
icebp
sub
jne
loope
bound
fadds
mov
fucomi
outsb
imul
xchg
xor
shl
dec
inc
imul
clc
mov
xor
imul
cmp
nop
or
mov
leave
fwait
add
or
pop
adcb
xchg
gs
mov
sub
sahf
icebp
outsl
sub
dec
jb
test
mov
popf
fbstp
xchg
out
fsub
or
push
push
pop
shll
or
and
sub
mov
xor
shll
in
fs
sub
pop
jae
or
xchg
xchg
scas
mov
add
jnp
ds
das
jl
adcb
testl
arpl
loop
and
mov
push
pop
data16
rolb
mov
dec
dec
data16
jp
in
push
fnstsw
add
xor
and
cli
and
fwait
cmc
push
addr16
mov
xor
add
adc
xlat
xlat
sub
sti
movsb
xchg
lahf
xchg
push
mov
push
adc
sub
mov
lret
xor
pushf
inc
bound
pop
or
lods
xor
pushf
aas
insb
mov
sbb
ret
cmp
or
jle
or
call
hlt
jle
pop
sub
push
push
decb
or
scas
std
xor
out
add
add
cs
bound
inc
dec
adc
add
call
pushf
outsb
sbb
imul
pop
pushf
xor
xchg
stos
cmpps
daa
or
pmaddwd
outsb
cmp
les
repz
lcall
mov
int3
mov
fcmovb
gs
mov
or
pop
push
mov
push
mov
in
add
aaa
repnz
out
jmp
call
sub
pop
cli
xor
std
sbb
push
das
xchg
aas
sbb
fsubrl
pop
and
pop
fs
xor
jmp
pop
mov
test
mov
icebp
push
cmp
fstp
shr
inc
sbb
clc
lods
andb
andl
jp
and
push
idivb
vmovdqa
cmp
cmp
push
ret
test
cmp
cmpl
inc
gs
mov
in
push
dec
je
push
aaa
imul
out
int3
sbb
ja
in
mov
sahf
rcrb
jecxz
repz
into
lea
push
mov
insb
inc
cmp
dec
cltd
xchg
sbb
pop
push
push
mov
roll
adc
xor
push
loopne
add
dec
pop
pop
shlb
push
mov
push
data16
dec
ds
xchg
push
xor
ret
mov
xchg
loope
fistpl
add
xor
fstl
xchg
sub
sti
push
ret
dec
imul
testb
jns
inc
adc
ds
jnp
pop
xchg
ret
lock
es
pusha
ja
cmpsb
pop
dec
jo
rorb
jbe
jecxz
push
ds
lock
sub
or
sbb
popf
cltd
aam
out
std
std
xchg
imul
inc
jmp
cmp
jns
ss
mov
int
sbb
and
push
int
mov
xor
stos
out
xchg
add
xchg
or
mov
lcall
sub
int3
xchg
dec
mov
xor
pop
fidivl
stos
xchg
jg
aaa
out
rcll
mov
push
xor
mov
xchg
sub
inc
mov
in
incl
shll
mov
popf
data16
inc
sub
pop
daa
icebp
xor
je
xchg
int
sub
cmp
mov
cmp
and
adc
adc
movsb
adc
pop
add
xchg
mov
cmp
push
hlt
xchg
inc
and
aad
das
pop
cs
imul
jbe
jmp
fildll
jle
ja
je
mov
xor
imul
lods
inc
xchg
mov
mov
jb
mov
pushw
sbb
dec
fmuls
push
lods
jg
popf
sbb
mov
pop
popf
outsb
push
jle
inc
stc
pop
fiaddl
mov
mov
fnstsw
sbb
loope
mov
dec
cld
adc
test
inc
sub
inc
data16
idiv
mov
cmpb
les
jl
fbstp
test
pusha
mov
scas
cmpsl
push
sti
lods
mov
mov
or
out
pop
mov
xor
insl
push
mov
das
sub
sub
and
and
pushf
fstl
in
dec
xlat
push
insl
add
cmc
fbld
mov
mov
movsb
xchg
imul
int3
jmp
in
repnz
mov
add
orl
sarl
lcall
stos
dec
lcall
xlat
push
pusha
outsb
bound
fisttpl
mov
pop
mov
pushl
pop
adc
cmp
outsb
mov
sbb
ret
push
push
lret
adc
je
mov
sbb
and
cmp
dec
pop
jle
lock
sub
frstor
add
in
mov
mov
lahf
jbe
xchg
inc
call
jp
push
nop
loope
push
daa
stc
xchg
xor
and
adc
stos
jo
xor
pop
xlat
imul
sbb
outsb
adc
cli
add
adc
imul
lcall
pop
ret
mov
xor
fadd
mov
mov
into
sahf
pop
stc
cwtl
jo
mov
jmp
in
sbb
mov
dec
shll
xor
mov
jno
stc
xchg
cld
jle
push
push
inc
scas
inc
in
jb
pop
ficoml
add
pop
insb
and
aam
mov
dec
xor
fildl
pop
xor
xor
ljmp
andl
pop
xlat
arpl
or
cmpsl
dec
enter
cmpsl
xchg
aam
xchg
shrb
stos
sbb
outsl
jae
mov
mov
jmp
jnp
push
setnp
mov
in
ja
data16
sbb
loope
or
arpl
pop
popa
xchg
cmpsb
add
xchg
add
arpl
cli
pushf
in
jno
and
pop
enter
inc
sbb
wrmsr
or
mov
cmp
jge
mov
sub
adc
push
lcall
sbb
push
push
add
sub
fsubrs
sti
or
add
mov
lret
orb
sbb
andl
repnz
lock
adc
sbb
pop
jmp
inc
stc
data16
mov
cmp
sbb
out
aam
aam
push
leave
xor
inc
cmp
cwtl
arpl
scas
pop
or
sbbb
or
imul
stos
adc
push
negb
ret
aad
and
arpl
cmp
cld
inc
or
movsl
jmp
xchg
mov
movsb
fildl
fs
push
adc
enter
add
push
jb
sbb
andb
adc
fistpll
subl
in
xor
mov
adc
sarb
clc
adc
ja
icebp
jns
cmp
aam
cmp
outsl
cmp
push
sahf
add
stc
sbb
pop
xchg
xchg
cmpsl
xchg
popa
popa
cmc
sbb
scas
sub
inc
dec
iret
nop
shll
out
pop
repz
and
lds
add
pop
sahf
lahf
jg
pop
or
lea
mov
push
call
sbb
movsb
out
ds
cmp
stos
sbb
out
pop
jo
mov
repz
cmp
stos
cld
add
mov
mov
lahf
mov
inc
push
mov
vmovntps
cmp
inc
cmp
aaa
xchg
adc
in
push
enter
adc
or
and
daa
mov
sbb
stos
fmuls
jnp
push
call
cmpsl
int3
and
jae
dec
dec
movsl
mov
lret
or
adc
push
bound
rcr
cs
aas
movsl
stos
add
in
adc
fists
cmp
mov
cwtl
loope
fldt
and
xchg
cmp
ret
ljmp
stos
jne
add
jl
dec
xchg
or
test
sub
cmp
dec
inc
imul
xchg
fisttps
sub
fnstcw
test
or
adc
fbstp
dec
test
jb
dec
cmc
dec
xor
push
idivb
nop
bound
lahf
dec
inc
fdivr
xor
push
push
or
arpl
xor
lea
aad
push
sub
pop
xor
fists
xorb
inc
and
sub
sub
das
mov
aas
inc
add
cmp
jg
and
fbld
xchg
cmc
jecxz
mov
inc
and
mov
push
push
hlt
movsl
iret
fidivs
jg
xchg
add
jns
jbe
out
popf
mov
loop
sbb
clc
js
call
test
jge
insb
inc
adc
sbb
or
jle
add
dec
in
inc
adc
mov
int
in
sbb
adc
dec
sarl
fsubl
sbb
mov
pop
mov
mov
int3
mov
fcmovb
xchg
adc
movsl
dec
bound
jg
das
psadbw
aaa
inc
rorb
fstl
in
int3
subb
inc
iret
xchg
cs
enter
and
push
pop
pop
xchg
into
aaa
mov
mov
cmpsl
xor
adc
int3
stc
push
push
lret
cmp
xchg
ret
pop
push
bound
in
popl
jp
cmp
cmp
jp
aam
pop
loop
shlb
mov
bound
sub
call
ret
adc
and
inc
stos
mov
and
xchg
popa
mov
imul
std
insl
sbb
xchg
sbb
fnsave
mov
daa
pusha
push
cmp
rclb
in
and
push
iret
sub
jmp
notl
lahf
nop
adc
mov
out
sub
fmuls
in
adc
mov
mov
xchg
iret
bound
xor
test
insb
in
int3
pop
js
movsl
idiv
adc
pop
fildl
scas
notl
mov
test
insl
lods
push
sbb
xor
test
xchg
add
arpl
inc
inc
cmpsl
sub
pop
fs
ret
adcl
rclb
dec
and
lods
add
lcall
subb
pop
pop
xchg
xchg
stos
jmp
inc
mov
and
cs
ss
in
adc
xor
out
push
xchg
inc
testb
aad
add
push
dec
or
jg
pop
mov
jmp
movsl
jnp
repz
lock
add
and
push
scas
mov
mov
mov
shl
jl
mov
dec
mov
dec
pushf
pop
push
test
adc
fstpt
out
adc
sbb
or
inc
add
sbbb
stos
icebp
fldcw
stos
add
idivl
loop
pop
xchg
or
popa
enter
add
mov
lahf
jecxz
imul
jmp
cmpsb
stc
adc
jno
js
flds
or
adc
cs
lea
lock
leave
fcoml
mov
cmp
inc
jecxz
test
les
imul
inc
loopne
fstpl
leave
dec
xor
fcomps
jae
data16
sbb
xchg
dec
push
pop
outsl
push
mov
roll
shll
hlt
outsb
push
dec
cmpsl
jbe
lcall
push
jb
cli
dec
and
mov
leave
mov
stos
inc
cld
cwtl
fistpll
loope
test
dec
cmp
pop
pusha
xlat
fwait
pop
mov
mov
popa
jecxz
pop
js
adc
outsb
xchg
dec
subb
mov
out
mov
xchg
insb
and
sbb
imul
rolb
push
test
xchg
mov
and
push
lcall
cmp
pop
fistps
call
ret
adc
pop
ljmp
insl
sbb
fcompl
push
lret
out
jecxz
mov
out
push
out
enter
pop
inc
sub
jnp
push
out
jbe
pop
xchg
shlb
test
mov
xchg
xchg
dec
cmp
adc
jae
popf
daa
push
ljmp
pop
push
dec
lods
je
hlt
push
sar
jbe
out
cmp
scas
dec
push
mov
loope
lods
push
bnd
dec
addb
pop
pusha
cmp
lea
add
cmp
out
dec
xor
das
in
push
shll
mov
jb
andl
cld
nop
mov
push
enter
insb
movsl
push
test
imul
dec
rcll
outsl
push
aad
decl
mov
dec
xor
fmull
cmp
push
dec
lahf
pop
scas
lds
or
test
movsl
lcall
cs
out
pop
scas
outsb
ffreep
jno
jmp
in
mov
sub
test
pop
xor
xchg
pop
pop
mov
jbe
and
js
dec
sbb
add
adc
inc
xor
xorl
dec
sub
push
add
popa
sub
cli
data16
loopne
movsb
adc
mov
lds
mov
dec
jns
data16
roll
inc
xor
ret
cmpb
sarl
add
mov
xor
arpl
jne
xchg
mov
mov
insb
mov
enter
inc
push
cld
pop
arpl
imul
inc
call
das
xchg
cwtl
pop
idivl
sbb
cmp
and
push
adc
out
into
loop
sbb
aam
leave
dec
jns
push
in
xor
pop
or
out
outsb
adc
jb
fstp
jne
sbbb
cmp
mov
mov
fs
mov
out
and
popa
sbb
adc
out
rolb
les
in
addr16
inc
lret
cltd
imul
dec
sbb
and
inc
cmc
fs
cltd
loopne
mov
and
aam
push
pop
movsl
and
dec
in
mov
xchg
scas
and
mov
dec
inc
push
or
push
in
cwtl
popa
jne
adc
nop
data16
mov
xchg
jnp
add
xchg
jle
cltd
out
mov
rol
fidivl
push
mov
stc
int
push
addb
mov
addr16
xor
mov
enter
inc
outsb
out
or
pusha
outsl
leave
mov
mov
push
iret
not
notl
push
mov
cs
inc
inc
out
adc
mov
add
mov
test
adcb
push
ss
fxrstor
sbb
fstpt
mov
nop
or
dec
mov
mov
and
sub
scas
rcl
sub
ja
aam
fsubr
cmc
cli
lret
lahf
dec
adc
xor
in
push
ja
das
dec
orl
sub
sbb
jnp
sub
pop
fs
xor
lods
fisttpl
test
negb
add
cmpsl
insl
cmp
aas
inc
in
divl
sahf
es
jg
or
fs
inc
lods
mov
push
xor
or
cmp
cltd
push
mov
fldt
or
sub
loopne
cmp
xchg
gs
cmpsl
je
les
daa
mov
pop
mov
sub
xchg
sbb
adc
in
orb
xlat
std
int3
fmulp
fcoms
inc
jle
pop
sub
xlat
stc
mov
popf
pusha
testb
xchg
dec
aas
shlb
mov
rolb
lock
and
gs
js
mov
call
jns
xor
cmp
jo
cwtl
sbb
xor
std
dec
push
movsl
lret
xchg
jo
lods
and
jb
sbb
sbb
adc
aas
or
lret
add
es
mov
mov
aas
out
imul
xor
test
fwait
lea
mov
nop
mov
bound
adc
push
push
jbe
dec
out
push
adcb
jns
adc
mov
cmp
cmp
inc
push
mov
popa
daa
mov
test
push
cmp
fnstsw
jp
xchg
dec
xor
sti
dec
js
jmp
movsb
mov
inc
push
dec
and
fistpll
out
imul
push
add
es
cmp
pusha
fadds
xchg
lock
fists
jge
pop
mov
jno
lods
ja
inc
cmpsb
test
xor
lahf
push
xchg
or
xor
and
std
ret
push
test
push
jb
addr16
dec
movsl
outsb
push
cld
mov
test
push
test
flds
jecxz
lret
add
nopl
or
daa
add
pop
clc
push
xchg
jmp
js
lret
leave
xchg
sub
jecxz
and
movsl
mov
outsb
lock
push
adc
cmc
aas
jecxz
push
movsb
jbe
in
xchg
jb
fisubrs
mov
xchg
out
js
lret
mov
xor
dec
jae
mov
xchg
andl
mov
jne
cmp
xchg
lods
icebp
or
mov
jns
push
popf
push
or
jecxz
sahf
sahf
xchg
mov
into
pop
dec
rcrl
adc
mov
cltd
xchg
dec
movsl
ficomps
scas
popw
xor
mov
cmp
int3
nop
iret
add
pop
test
stos
dec
dec
mov
and
jmp
inc
xchg
subb
push
sahf
cwtl
movl
lock
adc
jb
popa
adcb
testl
mov
je
aas
int
dec
xchg
xlat
lret
in
push
movsl
je
rorb
repnz
xchg
iret
imul
fisubl
jb
mov
clc
xor
std
loope
sub
cmp
sbb
inc
repnz
pop
sti
int3
and
icebp
outsb
jecxz
jg
std
adcl
repz
test
les
xor
repnz
sbb
scas
mov
xor
shr
jb
or
mov
jnp
mov
xorl
lea
mov
loope
divb
outsl
push
push
and
adc
or
enter
push
fisubrl
mov
pop
lret
mov
insb
or
icebp
cmovs
sub
jns
aam
cmp
dec
jmp
push
add
sahf
push
in
xchg
mov
adc
fnstsw
adc
sbb
push
out
rcr
jecxz
stos
cwtl
sti
cmp
aam
iret
cmc
xchg
dec
dec
sti
mov
mov
or
pop
sti
ret
shrb
push
mov
xchg
xor
mov
or
jp
mov
push
pop
int3
add
add
in
pusha
popf
pushf
je
sbbl
cmp
mov
pop
mov
add
fistpll
imul
pop
adc
cltd
lcall
std
or
push
neg
mov
pop
push
ret
xchg
mov
jb
popf
test
icebp
jb
jns
xor
ljmp
lea
mov
pusha
lahf
pop
dec
mov
push
push
pop
test
sbb
sti
cmpsl
pushf
out
ljmp
lock
scas
xchg
mov
cmp
nop
xor
js
mov
mov
pusha
adc
dec
jbe
cmp
mov
aaa
stos
mov
scas
imul
xchg
stos
clc
add
fwait
int3
pop
aas
xor
adc
addr16
lret
jmp
mov
insb
mov
aas
loop
mov
sti
in
pop
lret
xchg
dec
jbe
lret
mov
xchg
xor
fld
add
dec
daa
stc
lods
pop
fisubrl
dec
inc
fs
cmp
dec
pop
mov
cmp
mov
fnstsw
fcmovu
dec
xlat
adc
xchg
xlat
lret
sbb
call
enter
cmp
push
data16
das
cmp
scas
daa
lock
jmp
inc
sbb
in
xor
and
mov
test
xchg
dec
jns
shll
jmp
adc
pop
out
arpl
jp
sbb
enter
cmp
out
jp
mov
mov
je
cwtl
sub
mov
nopl
sub
jle
jno
sbb
sbb
push
and
aad
cmp
mov
scas
or
repnz
imul
int
mov
mov
pop
push
stc
pop
outsb
push
leave
xchg
cld
movsl
push
ljmp
push
push
ds
and
jnp
fwait
pop
xlat
mov
xor
mov
lret
test
adcl
xor
mov
sub
xchg
and
adc
mov
fistpl
sbb
test
pop
pop
movsl
inc
je
gs
loopne
sbb
inc
ljmp
out
sub
cmp
out
rorb
jnp
adc
pop
popa
cmc
aam
dec
enter
dec
clc
fbstp
hlt
xor
lea
movsb
jmp
mov
pop
add
lea
xorl
mov
mov
rcll
in
mulb
test
imul
stos
mov
mov
into
jne,pt
push
sahf
adc
mov
insb
mov
mov
sbb
gs
xchg
xor
into
and
mov
xchg
std
and
ficoml
ja
xchg
mov
push
test
xchg
shll
in
inc
push
xchg
lock
xor
adc
out
or
and
xchg
jns
jae
pop
clc
or
iret
in
arpl
or
movsb
in
dec
js
addr16
mov
pop
jle
lret
rorb
adc
repz
pop
scas
fcom
imul
test
popf
ds
mov
and
cmp
rcrb
loop,pt
dec
jl
jge
jg
das
fisubrs
mov
lahf
jns
lret
out
je
jle
pop
dec
cmp
testb
or
shl
mov
jnp
rolb
faddl
xchg
lock
ret
js
daa
or
stos
popa
add
mov
ss
aad
scas
push
lods
mov
movsl
xchg
and
fidivl
push
mov
movsb
sub
pusha
push
mov
jecxz
cmp
shlb
add
sbb
sub
push
cs
testl
inc
inc
outsl
jle
add
notb
mov
out
cmp
lea
inc
sub
or
lahf
add
andb
or
pop
inc
scas
xchg
mov
es
mov
dec
popa
push
imul
mov
mov
mov
frstor
lahf
xor
fnstsw
aam
mov
adc
adc
mov
je
loope
das
das
bound
jne
push
jge
test
sub
in
sub
std
ficomps
cltd
shl
dec
jno
inc
not
popf
test
cmc
outsl
mov
gs
stos
cmp
ffree
and
adc
mov
icebp
mov
xchg
dec
push
xchg
aad
dec
daa
dec
mov
sbb
cmp
inc
lods
xchg
bound
fs
mov
imul
dec
pop
call
mov
pop
cmp
int
les
mov
or
and
mov
inc
adc
sbb
dec
push
movsl
pop
fdivrs
fcoms
adc
adc
mov
and
aad
popf
sbb
popf
lcall
fwait
jg
mov
jmp
mov
add
std
clc
addr16
dec
pop
mov
and
sbb
sarl
out
das
push
adc
lret
cs
shlb
fsubrs
pop
dec
out
adc
mov
movsb
fstpt
js
ljmp
push
into
test
mov
les
sub
nop
dec
push
cld
cmp
fisttpll
fists
push
adc
stc
mov
rorl
xchg
jg
lock
mov
jecxz
lods
xlat
or
popa
push
jecxz
xor
ds
ss
cmp
imul
mov
mov
in
mov
mov
sbb
ljmp
ret
jmp
arpl
cmpsl
daa
push
mov
pop
in
stc
scas
iret
add
cmpsl
pop
sbb
jp
xchg
test
sub
dec
lock
out
movsl
in
jl
xchg
jp
icebp
xchg
sbb
outsb
pop
jl
aas
aaa
daa
mov
dec
jns
mov
mov
rorl
push
dec
push
ss
in
or
and
and
adc
and
out
xor
xchg
sub
add
add
lcall
dec
pop
push
ss
les
cwtl
data16
mov
ret
lcall
lret
push
add
je
test
outsl
mov
stc
vcvttsd2si
mov
sti
and
call
jno
mov
jecxz
fdiv
pop
inc
imul
inc
dec
das
inc
pop
lret
mov
dec
inc
mov
icebp
sbb
pop
or
fwait
lcall
inc
test
insl
and
xchg
cltd
fstpl
sbb
insl
add
shrl
xor
cmp
lea
mov
in
mov
dec
cmp
xor
inc
cltd
inc
and
sahf
fisttps
cmp
sbb
mov
leave
and
xor
loopne
in
jnp
xchg
movsb
cltd
sub
sub
data16
inc
je
ljmp
or
mov
lock
cltd
das
lcall
les
fimull
cmpsb
std
jbe
jae
sub
inc
mov
xchg
pop
sub
dec
pop
jp
test
ja
lahf
dec
stos
sar
xor
aas
mov
sbb
arpl
xchg
pop
in
leave
faddl
or
or
xor
jge
es
lcall
or
dec
push
fwait
jne
pop
pop
out
cmp
icebp
sub
xchg
xchg
enter
enter
pop
jp
xor
outsl
movsb
cmc
or
inc
pop
jbe
ss
jb
movsl
mov
repnz
pusha
inc
iret
push
leave
sbb
stos
loop
and
in
cmpsb
pusha
xor
xor
jb
sbb
shll
mov
enter
icebp
fisubs
xor
inc
sbb
or
add
cmpb
cmp
xchg
rorb
je
lea
leave
mov
adcb
mov
xor
stc
xchg
ret
addr16
dec
addr16
pop
xor
jp
jge
jnp
lea
dec
dec
stc
cwtl
mov
push
insb
xchg
es
mov
int3
stc
dec
icebp
dec
xchg
push
pop
ja
lcall
out
dec
es
stc
lret
mov
mov
jno
sbb
jmp
sub
sbb
stos
ret
int
mov
xchg
adc
add
stc
add
mov
jp
data16
push
loopne
push
mov
jnp
pop
daa
shl
adc
into
insl
insb
repnz
lret
pop
pop
scas
xchg
loop
cmpsb
pop
mov
das
fstpt
mov
stos
rorb
mov
adc
inc
fists
sub
das
xchg
jne
sbbl
inc
in
cli
push
or
ja
xor
or
dec
jg
fstpl
jmp
lds
cmp
scas
jns
cmp
mov
xor
insl
cmp
mov
popa
stc
pop
stos
std
xchg
jl
call
push
repnz
int3
ret
dec
jnp
call
inc
in
dec
lret
mov
push
push
xchg
and
adc
sahf
xor
lds
mov
mov
cli
loopne
shl
cmc
mov
fbld
bound
mov
loope
movsl
test
or
and
dec
mov
pop
outsl
sub
stos
push
test
imul
ds
mov
jo
add
cmp
sbb
push
xchg
outsl
shrb
cmp
dec
aad
jmp
and
or
cld
jmp
repz
sbb
mov
in
xchg
outsl
into
inc
jle
je
int3
jo
fldcw
jae
jg
loop
mov
mov
push
mov
ret
ja
adc
and
fwait
adc
jmp
xchg
popf
cmp
stos
and
or
adc
xor
push
adc
in
das
sub
aam
cmpl
in
ja
cmp
and
enter
ss
shrb
xchg
mov
mov
cmpsl
push
jb
bound
or
leave
fnstcw
mov
les
jbe
enter
outsb
daa
das
cmp
mov
cmpsb
add
sub
cmp
out
xor
cwtl
jmp
jae
add
push
out
fdivl
cmpsl
clc
test
je
dec
adc
cltd
xor
decb
jns
test
addr16
test
rcrb
mov
dec
jg
or
cld
push
in
sub
test
pop
insl
mov
inc
enter
jmp
mov
cwtl
push
and
scas
jle
testb
mov
jae
jns
ljmp
nop
xchg
iret
xor
xchg
sbb
daa
or
push
mov
xchg
push
arpl
mov
scas
and
jno
mov
mov
mov
inc
mov
cwtl
ret
stos
in
add
mov
rcrb
addr16
insl
sbb
mov
cmp
fcomip
enter
and
call
je
pop
cmp
adc
sbb
sbb
and
jo
lods
sbb
pop
jmp
mov
xchg
xchg
mov
cmp
mov
mov
inc
repz
dec
std
sahf
dec
into
subl
loop
cmp
ds
enter
popf
test
xor
jmp
sbb
pop
mov
add
mov
cmp
lds
nop
push
sub
ret
js
pop
ret
pop
daa
jp
in
jbe
lds
xor
jp
pushf
mov
push
nop
ja
lahf
ret
xchg
xchg
mov
aad
aad
xchg
decb
and
das
pop
fisubrs
cmc
sbb
lret
inc
in
test
aam
movsb
inc
dec
arpl
pop
cs
popf
push
cmpsb
mov
jns
cmp
sarb
mov
repz
xchg
mov
cmc
and
stos
inc
sysexit
xchg
xchg
adc
pop
arpl
push
xchg
or
fwait
inc
and
nop
xor
sub
mov
fstl
imul
shlb
adc
push
sbb
ljmp
sbb
and
mov
and
dec
jnp
test
mov
lea
dec
push
jg
cli
cs
stos
mov
push
push
adc
cmp
out
push
add
sbb
in
sub
push
out
pushf
xchg
scas
ljmp
pop
mov
clc
fistps
popf
inc
lret
cltd
in
jbe
push
aad
mov
gs
dec
aas
sarb
jo
movsb
cmpsb
add
ret
push
repnz
test
push
iret
imul
pusha
lret
pop
or
dec
in
dec
mov
mov
jns
mov
sbb
addr16
sahf
sarl
loope
imul
inc
daa
cld
jecxz
ja
rcl
ljmp
mov
push
and
ret
ss
push
xchg
cmp
mov
out
xor
das
push
shlb
outsl
jne
push
incb
adc
cmp
or
int
fildll
mov
xchg
cmpsl
roll
outsb
lret
stos
lock
cmp
sub
fnstsw
jnp
test
xchg
loope
or
inc
imul
inc
imul
pop
sbb
ficomps
jmp
popa
fmuls
hlt
popf
xor
fdivs
xchg
xchg
hlt
mov
lock
jmp
xchg
loope
imul
jecxz
sub
mov
push
lods
fldcw
dec
cs
pop
nop
and
repnz
inc
jnp
dec
jg
hlt
lea
jecxz
lret
pop
dec
adc
aad
das
xor
add
mov
shlb
push
or
arpl
sbb
pop
push
xchg
sbb
int3
in
xchg
push
mov
lret
mov
dec
jo
mov
sub
lret
mov
cmpsl
mov
imul
sub
xlat
mov
add
sbb
jmp
push
stc
jne
pop
cld
xchg
mov
iret
sti
lea
pusha
jnp
inc
out
aad
in
adc
cmpl
loopw
pop
mov
or
fucom
sbb
aas
sub
pop
insb
inc
pop
loopne
and
and
repnz
clc
cmpsb
int
fiaddl
cmp
and
in
adc
lds
and
push
adcb
shll
pop
orl
inc
lods
or
in
cmpsb
or
xcrypt-cbc
cmpsl
shrl
fldenv
push
sahf
or
jae
dec
mov
mov
aaa
dec
shlb
in
or
addb
insb
lret
ja
int
sbb
pop
jmp
out
cltd
mov
sub
sbb
fs
jl
push
ret
cmp
enter
xor
xchg
dec
inc
xchg
out
shr
repz
cld
rcl
mov
loope
cs
lods
repnz
adc
repnz
xchg
mov
pop
sub
sti
negl
leave
or
lret
nop
loop
pop
std
faddl
leave
daa
xchg
mov
xchg
fldt
fisubs
adc
lcall
jecxz
enter
lret
mov
test
xlat
sub
jge
cmp
and
fstpl
fimull
jecxz
aad
jae
leave
loope
jns
and
xchg
adcb
out
es
lret
es
cli
paddusb
aad
xor
cmp
mov
outsl
inc
out
pusha
in
jns
inc
pop
insl
add
mov
pusha
ljmp
cmp
scas
mov
jge
test
outsl
jmp
fnstenv
stc
lods
push
jecxz
sub
decb
dec
outsl
je
push
jae
out
sahf
icebp
aam
imul
out
repz
mov
lret
out
xchg
gs
xor
or
pop
pop
push
or
gs
dec
adc
jg
cs
pop
dec
cltd
leave
push
testl
je
repnz
fidivs
inc
call
and
movsl
andl
xor
sbb
adc
vmwrite
insb
aam
mov
cmp
outsb
scas
pop
cltd
or
lds
xor
inc
ss
lret
int3
sbb
ss
mov
jb
or
xor
stc
sbb
data16
jp
xor
mov
mov
stos
pusha
jle
jae
adc
mov
int3
xchg
std
pop
sub
icebp
sarb
or
inc
jp
or
lcall
das
xchg
push
shll
dec
xor
add
cwtl
fbld
fists
xor
dec
cltd
jo
stc
inc
push
mov
mov
sbbl
push
jle
repz
dec
push
shl
mov
call
insb
into
mov
lds
data16
mov
jmp
lods
imul
jne
mov
shlb
cwtl
lock
cli
stos
dec
das
popa
enter
aad
mov
mov
test
xchg
mov
fld1
xchg
jnp
shrl
bound
lret
ret
test
mov
xchg
imul
or
ds
out
dec
pop
inc
scas
stos
icebp
and
xor
mov
fidivrs
jnp
adc
xor
mov
hlt
cmp
dec
sbb
enter
push
cltd
es
pop
das
mov
xchg
decl
xchg
rorb
les
js
sarl
pop
popa
push
inc
or
mov
les
stc
inc
push
hlt
xlat
mov
dec
or
addr16
xchg
sbb
pop
fneni(8087
dec
push
mov
popf
mov
fstpl
lds
mov
xchg
mov
push
mov
jne
push
out
pop
fs
addb
and
push
inc
sbb
daa
pop
jp
data16
rcr
mov
in
lods
push
call
das
scas
fimuls
add
sbb
aaa
add
pop
test
out
lods
dec
inc
jb
addr16
ror
xor
xchg
jl
fnstenv
sbbl
xlat
adc
jne
pop
jns
and
cmp
push
cmpb
pop
popf
mov
loope
sbb
adc
or
inc
out
lahf
mov
sub
sub
xor
cld
movsb
sarb
xchg
ja
xchg
push
cmpsb
je
xor
lcall
mov
sbb
or
notl
mov
lret
ljmp
testl
pop
fs
inc
mov
add
jno
imul
push
pop
cs
xchg
sbb
dec
test
cmpl
fdivr
push
imul
and
mov
push
mov
xchg
jmp
aaa
frstor
lds
mov
nop
aam
lods
mov
aam
jg
mov
fmuls
xchg
jo
xchg
cmpsl
popf
cmpl
or
mov
or
fs
mov
inc
or
bsr
adc
and
ljmp
mov
mov
xchg
push
test
sub
jl
aam
enter
daa
cmp
jo
das
and
and
sti
gs
sub
jbe
adc
repz
xchg
push
cmpsb
push
out
adc
adc
sbb
and
out
xchg
mov
in
jge
push
stos
scas
in
sbb
mov
imul
int3
in
push
daa
xchg
decb
mov
dec
add
outsl
push
iret
lahf
add
sbb
les
sub
adc
push
add
jb
loopne
daa
add
das
pop
dec
scas
mov
sub
mov
nop
icebp
push
divl
xchg
outsb
es
or
mov
stc
stc
ds
jg
pop
mov
jns
out
leave
int3
add
or
or
jmp
xchg
jle
jnp
cmp
push
xchg
add
arpl
inc
icebp
ss
stos
out
aad
mov
xor
data16
dec
repz
and
push
or
sub
daa
jb
fdivr
mov
mov
push
into
arpl
pop
dec
std
pushf
divb
add
sbb
add
shlb
ss
mov
add
test
pop
pop
out
and
mov
jae
cwtl
adc
insb
add
jle
jg
loopne
dec
xor
and
dec
inc
pop
loopne
mov
mov
xchg
testb
dec
decb
jmp
in
sub
std
xchg
sub
dec
cmp
ror
mov
loope
mov
jb
stc
int3
loope
in
xor
stos
cmc
jl
push
sahf
insb
das
push
test
jae
mov
jb
outsb
jmp
je
icebp
mov
divb
iret
sub
stos
mov
xchg
shrb
rolb
mov
pop
aas
lret
mov
popa
pop
cli
loop
mov
mov
jp
pop
sarl
or
mov
lock
xchg
dec
outsl
rcr
xchg
sar
xchg
and
data16
inc
or
andb
das
jp
in
leave
jb
cmp
inc
xor
and
jae
out
jl
inc
js
mov
pop
out
push
repnz
das
movsl
outsl
cmp
push
xor
out
popa
xchg
sub
aad
or
not
mov
dec
adc
dec
nop
xchg
int
test
mov
push
or
sbb
scas
cmp
pop
fcmovnb
aad
push
pop
xlat
or
call
sbb
adc
aam
test
sbb
outsl
sub
pop
pop
addb
and
dec
inc
aas
xlat
jae
call
sbb
dec
sti
or
cs
jg
das
into
leave
pop
mov
stos
sarb
fnclex
stos
fnstenv
mov
inc
test
cld
sub
jl
mov
dec
pushf
adc
mov
sub
lods
jecxz
push
mov
mov
mov
shr
iret
push
inc
inc
clc
or
pushf
testl
add
cmp
and
lods
push
test
in
mov
je
idivl
mov
push
mov
jno
stc
inc
stos
xchg
add
xor
jp
cmp
xor
xchg
pusha
mov
xor
out
and
and
dec
xchg
push
fsubrs
imul
mov
xlat
mov
jbe
loopne
movsb
cmp
pop
cld
in
insl
and
dec
jecxz
loop
push
repnz
test
add
repnz
std
pop
mov
pop
stos
xchg
stos
fistpll
loop
jmp
xor
and
das
push
jl
test
aad
mov
pop
mov
test
lods
leave
pop
repz
ljmp
mov
cmp
dec
push
imul
movsb
pop
adc
bnd
clc
fimull
sub
test
and
mov
and
adc
jb
cmp
push
stos
js
outsb
pop
js
sub
pop
jo
and
mov
fldl
rclb
mov
insl
push
add
jl
adc
test
pusha
shll
jno
dec
movsl
mov
mov
shrb
sbb
push
or
adc
scas
and
fldcw
or
and
ret
enter
insb
fistpll
pop
xor
cs
and
or
jp
pop
in
inc
popf
out
lcall
xor
xlat
clc
pop
cmovp
loope
js
lods
ss
sbb
sbb
fs
mov
fiaddl
dec
ret
aad
ss
mov
jg
pushf
mov
lds
sbb
add
inc
inc
imul
cmp
push
idiv
sahf
push
push
test
outsl
sub
jae
addb
mov
loop
test
idivb
pop
mov
fmuls
scas
fstpl
cmp
mov
arpl
and
in
adc
pop
adc
lahf
loopne
leave
test
sti
fs
shrb
fisttpl
pushf
and
add
jns
xor
hlt
jbe
add
daa
cmpsl
pop
dec
or
pop
mov
inc
popa
out
mov
arpl
shrd
push
dec
mov
cmp
test
iret
push
and
shr
xor
mov
ficompl
mov
hlt
cmp
dec
jl
aaa
icebp
cmpb
mov
pop
jb
stos
xchg
out
mov
dec
dec
cmc
jecxz
fcoml
jnp
or
in
mov
xchg
pop
fldcw
in
test
les
inc
cmp
xor
cmp
jmp
int
add
inc
push
outsl
xor
sbb
leave
outsl
cmp
lds
xchg
xlat
aaa
inc
push
popa
add
jge
adc
jp
mov
sbb
mov
cmpsb
cmp
movsb
into
mov
sahf
inc
test
shll
mov
and
testl
jp
lods
lret
repnz
add
nop/reserved
ljmp
mov
test
cmp
loopne
pop
pushf
rcr
jbe
and
jnp
sbb
into
das
mov
xor
ds
test
addb
call
cli
icebp
jae
mov
adc
pop
mov
dec
xchg
xor
les
in
jnp
push
mov
inc
loopne
cs
push
xlat
pop
mov
jle
jne
xchg
cmp
fs
jl
push
mov
sbb
call
ljmp
xor
out
sti
xchg
xchg
xor
pop
mov
push
inc
mov
push
fcomps
out
cli
les
pushf
loope
stc
fwait
push
pop
les
adc
pop
jge
jle
cmp
icebp
dec
sub
inc
mov
add
and
in
test
mov
rcl
sub
test
jmp
adc
jae
jl
ljmp
insb
je
adcb
mov
mov
push
or
lea
xchg
xor
stc
incb
pop
cli
mov
icebp
std
loope
and
inc
lea
aas
ds
into
and
mov
mov
push
movsl
cmpsl
cli
out
movsl
dec
or
popf
mov
jmp
jl
pop
sbb
mov
movsb
pop
mov
movsl
les
pushl
cmp
vpmadcswd
int
sbb
push
imul
shlb
addb
dec
mov
je
std
out
jno
xor
lods
cld
outsl
lds
test
sub
fisubrs
imul
and
ja
popa
xor
sub
push
ljmp
ja
stos
mov
adcb
js
dec
mov
in
dec
pop
mov
jg
outsb
xchg
pop
add
ret
lret
das
inc
xor
or
pop
lds
or
mov
xchg
mov
jmp
repz
and
rcrl
mov
data16
sbb
cmpsl
dec
push
cli
cmp
jmp
jno
or
ret
or
movsb
insl
fwait
loope
push
cld
stos
outsb
clc
add
push
stos
int3
mov
jno
sbb
andb
test
mov
stos
cltd
repz
roll
and
orl
test
std
sbb
addr16
popa
xor
leave
movsl
push
pop
stos
push
pop
ds
pop
mov
stos
jo
sub
jp
fldl
ja
nop
jns
sub
pop
lea
clc
push
xchg
push
gs
xchg
pop
mov
and
icebp
imul
xchg
push
or
andb
rolb
pop
loope
xchg
push
mov
negb
in
xchg
pop
push
xchg
das
ds
sbb
pop
aas
rclb
aam
sub
push
es
js
loop
fidivl
push
pop
xchg
test
sub
add
adc
dec
ret
or
imul
je
mov
bnd
fnstenv
push
jno
sti
fnsave
rorb
sti
fs
addr16
out
out
push
cmp
push
cmp
lcall
mov
insl
or
and
std
pop
xchg
push
scas
repz
shll
repz
out
pop
out
mov
or
sahf
or
xor
ret
jp
leave
mov
push
pusha
fwait
ds
aaa
dec
mov
xor
mov
lods
ss
mov
scas
push
shr
aaa
lea
mov
lods
hlt
xor
xchg
inc
sarl
ss
pop
rcrl
push
sbb
pop
pop
int3
adc
add
or
xchg
cmp
ret
or
mov
inc
hlt
shll
out
cld
test
jge
das
xchg
mov
out
inc
push
xchg
add
fcomps
push
fsubrs
fidivrl
mov
pop
cmpsb
insb
push
lahf
imul
out
jmp
mov
sbb
mov
scas
add
lock
pop
or
cmp
sbb
ljmp
fcomp
and
sub
sbb
mov
movsl
add
jbe
int3
push
pop
out
sar
outsl
jo
add
xchg
fbld
dec
out
dec
fistpll
inc
outsl
add
pop
daa
cmp
jne
inc
mov
fwait
jb
pop
fldt
fbld
rolb
sahf
pop
add
roll
fidivs
and
add
jns
mov
pop
jns
nop
stos
push
nop
cmpsl
sub
mov
adc
pop
gs
cmpsb
dec
sahf
les
loop
shrl
ret
test
stos
scas
rclb
lds
push
mov
mov
addr16
popf
in
xor
xor
mov
cmp
push
stc
test
and
les
inc
push
mov
mulb
das
lods
cmpsl
divl
push
lcall
sbb
into
mov
icebp
sbb
mov
mov
addr16
insb
femms
fsubrs
enter
je
cmp
push
mov
add
movsb
mov
and
adc
cld
inc
repnz
scas
std
mov
sbb
cs
psllq
hlt
dec
sahf
add
mov
fnstsw
jno
jg
or
jns
xor
ds
orl
arpl
sub
sbb
lcall
xor
push
test
testl
insl
cmpsb
adc
rorb
add
leave
jne
cmp
jl
jl
mov
movsb
sti
or
into
in
push
sub
fiaddl
mov
jno
xor
mov
fdivrs
mov
fucomip
push
shll
hlt
cmp
pop
hlt
xchg
add
lahf
das
lock
scas
iret
push
xchg
shr
mov
add
jg
movsl
mov
test
jle
cmp
fwait
gs
mov
and
lahf
cmp
gs
jge
push
push
aad
mov
sbb
xorb
inc
ror
das
xor
aad
jno
inc
jbe
jae
mov
loopne
pushf
fidivs
mov
xorl
bswap
popa
test
adc
cmp
inc
cmpsb
cs
push
gs
inc
ret
movl
sbb
xchg
and
jb
rcr
fimuls
sti
popa
jmp
pop
imul
push
adc
outsl
lcall
and
stos
inc
cmp
add
cmp
mov
outsl
sub
ja
adcb
mov
stc
fisubl
lock
stc
mov
mov
nop
in
mov
mov
incb
jae
xchg
sbb
xlat
sub
in
push
mov
sahf
mov
dec
inc
leave
push
push
dec
daa
cs
or
into
shrl
jo
cs
mov
in
cld
add
jecxz
out
pop
dec
and
sahf
or
push
mov
adc
test
into
pop
jge
mov
pop
ljmp
cmp
nop
xor
mov
mov
cmpl
in
push
push
ja
sub
rorb
lret
outsb
sub
aam
cs
inc
imul
add
xchg
inc
jge
outsl
add
sub
les
and
jg
fsubrl
jge
pop
dec
mov
push
jb
das
jge
sbb
jp
xchg
xor
lods
int
std
loopne
push
shrb
push
nop
ret
addr16
cwtl
xor
das
fsubrl
int3
push
jbe
pop
in
js
mov
orl
xorl
dec
mov
ja
idivl
sbb
add
lods
arpl
sbb
jl
mov
or
dec
xchg
or
loopne
in
or
mov
add
jno
lret
inc
mov
shlb
cld
test
stc
xchg
nop
xchg
aaa
testl
and
or
fmuls
jmp
in
lret
nop
aaa
mov
push
xor
shrl
jge
cmpsb
ja
mov
dec
mov
adc
jno
addb
cwtl
jb
loope
xorl
popa
loop
dec
outsb
xor
lds
aad
pop
dec
scas
cli
xchg
out
shrb
add
fisttpl
or
mov
xchg
dec
cmp
pushf
sub
and
add
inc
pop
mov
inc
xchg
imul
icebp
insl
scas
cli
push
pusha
enter
fcmovne
inc
cmc
sub
or
insb
bound
inc
movsb
sbb
movsl
add
insl
loope
cwtl
test
dec
mov
cmp
fisttps
mov
imul
push
cmp
pop
add
and
loop
sbb
call
mov
aam
test
pusha
sbb
sub
mov
mov
adc
pop
lods
movsb
jns
lods
int
mov
nop
mov
and
movsl
mov
push
adc
roll
shll
out
pop
fdiv
popa
cli
push
in
xor
outsb
mov
and
addr16
lahf
mov
sbb
test
xchg
imul
mov
imull
arpl
sub
stc
pop
add
ds
pop
push
outsb
pop
mov
cmp
or
outsl
mov
dec
mov
sbb
in
inc
adc
stos
jo
outsl
push
mov
rolb
imul
icebp
pop
jmp
cld
push
outsb
movsb
jp
cmp
jbe
lcall
fidivl
mov
lret
mov
stos
decl
sub
lock
nop
lahf
cs
sbb
xor
cltd
dec
gs
pop
scas
pop
cmpsb
jnp
jp
xchg
xor
movsb
cmp
sub
lret
xchg
fbstp
lret
nop
push
inc
cmp
mov
dec
into
sub
mov
lret
call
pop
or
roll
push
and
xchg
xchg
inc
inc
cmp
or
cmpsl
cmp
jle
orw
or
test
cmp
shrb
mov
das
nop
push
dec
or
mov
test
or
ret
add
mov
bound
sbb
cwtl
cltd
lret
jl
or
lods
sbb
mov
mov
mov
gs
fcomps
jo
mov
mov
rorl
cmp
sti
sbbb
or
xchg
out
adc
fstpl
xor
rep
sarb
mov
shrb
test
pop
imul
idivb
push
test
fsubl
sub
loope
clc
inc
sbb
xchg
sets
cwtl
push
sub
jl
inc
mov
cmc
mov
shrl
lods
aas
das
int
or
testb
xor
testb
or
jae
push
xchg
cmp
jnp
in
sarb
test
dec
loope
cld
lcall
mov
cmp
mov
popa
std
jge
lods
jo
fstpl
pusha
aaa
adc
sub
scas
add
mov
outsl
inc
adc
sbb
ret
push
push
fiaddl
je
in
or
xor
jge
iret
pop
nop
int3
movsl
movsl
and
xlat
sahf
jae
cmp
shlb
repz
scas
out
adc
mov
xchg
insb
repnz
sub
out
push
das
repnz
std
dec
mov
adcb
iret
adc
xor
sub
push
fisubrs
mov
cmp
jle
gs
mov
ror
cmp
cltd
cltd
push
outsl
sbbl
out
out
adc
or
pusha
test
cmp
push
ss
arpl
mov
cmp
aad
gs
js
movsb
adc
outsl
stos
or
or
pop
xor
cmpsl
lea
jns
jnp
mov
jg
aad
js
jb
test
and
ds
daa
lods
mov
mov
cs
stc
aad
sub
jns
xchg
xchg
jns
inc
or
inc
stos
outsl
and
clc
adc
out
mov
cmp
sbb
sub
fnsave
push
pop
lea
loope
sbb
lahf
sbbl
movsl
cmp
loope
sub
adc
in
cmp
leave
fcomp
dec
push
shl
push
fdivs
dec
stos
hlt
sub
mov
out
xor
icebp
fldenv
mov
xchg
ds
fistpl
mov
mov
lock
es
xor
leave
enter
hlt
in
divl
mov
adc
lret
cli
fldt
jg
shrl
lods
cmp
add
jae
and
add
adc
jbe
lcall
daa
add
pop
jmp
push
addr16
nop
incl
inc
cmp
pushf
inc
int
cmp
shl
lcall
push
inc
rcrl
pop
xchg
push
inc
jecxz
outsl
push
and
mov
and
call
maxps
xor
clc
gs
jae
mulb
sbb
dec
cwtl
shrl
jecxz
or
stos
sbb
test
inc
pop
int3
loopne
movsl
shrb
nop
arpl
mov
notl
movsl
pop
push
je
rol
add
aaa
test
lcall
adc
jg
leave
cmp
test
mov
jg
xchg
je
ret
pop
arpl
push
and
and
inc
mov
add
aad
and
sbb
decb
repz
push
pop
xor
out
push
adc
inc
mov
inc
mov
xor
mov
sbb
dec
mov
stos
xchg
inc
nop
push
and
jne
mov
aad
ficomps
aad
jb
data16
fnstenv
leave
mov
push
cli
mov
ror
in
push
int
mov
sub
ret
les
jo
sbb
and
sub
call
push
loopne
in
repnz
cmc
daa
mov
mov
add
imul
test
push
aad
xchg
adc
and
aas
ficoms
or
sub
stos
fadds
and
pop
js
xchg
sub
pandn
mov
call
pop
test
outsb
in
add
dec
mov
mov
shlb
arpl
or
iret
jb
xchg
and
arpl
pop
cli
in
ds
ret
das
mov
pop
xchg
push
rol
leave
and
addr16
add
inc
adc
inc
gs
jnp
mov
cmp
pop
adc
add
scas
ja
cmp
mov
mov
mov
loop
push
arpl
dec
shl
iret
fistpl
icebp
lcall
pop
sub
xor
cld
sub
mov
in
out
fs
mov
push
cli
adc
and
mov
mov
sti
cmp
add
in
and
xor
jo
fiadds
sbb
popl
into
inc
stc
arpl
lret
mov
mov
sbb
in
sbb
outsb
xchg
jb
or
jp
cmp
jmp
add
xor
mov
std
stos
mov
sub
wbinvd
and
add
fwait
sahf
bound
dec
and
mov
stos
shll
mov
sbb
xor
call
in
das
fnstsw
sub
inc
je
sti
mov
daa
pmulhuw
mov
adc
mov
push
mov
mov
aaa
mov
lods
fbstp
dec
cmc
cmpb
das
push
mov
xchg
rorb
dec
inc
xor
mov
ds
in
add
dec
imulb
adc
out
popf
push
movsb
inc
push
cmp
push
fdivrs
mov
aad
pop
push
pop
pop
mov
lock
sub
inc
inc
jl
mov
lock
and
jne
movsl
mov
rep
adc
movsb
add
xor
popa
pushf
cmp
jns
frstor
jle
sub
adc
call
or
mov
repz
adc
push
out
xor
orl
ja
xchg
int
jo
insb
sti
and
mov
and
arpl
inc
fcmovnu
inc
shrl
push
mov
repnz
mov
call
mov
enter
sub
mov
add
ds
xchg
dec
lret
fdivrl
das
sbb
xchg
xchg
dec
cmp
xchg
clc
loopne
and
mov
hlt
mov
test
xchg
mov
add
dec
push
xor
frstpm(287
push
jb
pop
sub
inc
mov
test
nop
xchg
int3
sub
faddl
mov
or
fsubp
test
jae
dec
jnp
jo
adc
inc
xchg
aam
lods
std
add
dec
call
inc
fsubrl
daa
test
mov
adc
loope
xlat
pop
fnstenv
mov
adc
mov
scas
xchg
cli
xor
mov
push
dec
or
mov
pop
insl
dec
sub
sub
push
mov
inc
sahf
imul
dec
scas
sub
sub
stc
inc
add
or
adc
roll
call
push
out
cwtl
ja
push
test
outsl
sbb
push
mov
jno
leave
test
sub
push
andb
xchg
cwtl
ffreep
loop
mov
mov
insb
sarl
lods
clc
sbb
adc
dec
stos
cmp
mov
fwait
scas
test
pop
xchg
fwait
int
mov
push
jno
cmp
aas
push
lock
push
scas
pop
dec
xlat
ja
insl
jbe
imul
cmp
hlt
sub
adc
aad
aas
das
sbb
ljmp
or
push
inc
xor
idivb
subb
push
iret
jno
push
inc
clc
call
push
jo
lock
bound
cmc
push
mov
cli
adc
insl
sub
pop
jecxz
lds
das
and
test
sahf
push
or
repnz
cld
push
inc
imul
add
imul
pop
adc
hlt
aaa
push
add
mov
add
xor
pushf
movsb
scas
and
push
sbb
add
stos
ljmp
test
frstor
xor
in
sbb
lods
cmovb
mov
push
dec
jmp
sbb
lret
mov
adc
fimull
fsubr
jne
jnp
es
pop
popf
inc
jmp
pop
es
sub
insb
in
jo
movq
push
fisubs
rcrb
push
xchg
lret
xor
loop
lods
and
push
mov
inc
aad
imul
jl
mov
arpl
shlb
int
in
in
mov
mov
jp
inc
mov
push
aad
dec
gs
shlb
or
loopne
into
pop
fldenv
mov
scas
movsb
rorl
enter
scas
lea
out
test
push
cwtl
popf
hlt
add
adc
lds
xchg
push
in
fdiv
lret
out
movd
aad
adc
shr
out
jbe
test
shr
pop
or
inc
mov
mov
mov
mov
fs
cmovle
ss
inc
jno
out
ljmp
loopne
daa
inc
pop
dec
pop
in
or
repz
xor
mov
adc
imulb
daa
dec
push
mov
pop
mov
mov
idivl
mov
pop
cld
dec
out
cmp
cltd
mov
fstl
lahf
mov
pop
jae
popf
call
xorl
clc
ss
cmpsl
mov
aaa
adc
dec
cmc
lods
inc
sub
fsubrs
inc
jge
xor
cmp
mov
cltd
js
stos
mov
cmp
jo
clc
cmp
sub
push
addr16
pop
nop
pop
adc
outsb
gs
popf
cmp
jp
sbb
inc
mov
jge
add
fcompl
mov
push
pusha
pop
and
and
push
icebp
or
jae
fidivrl
ret
test
xor
int
adc
mov
aas
mov
in
out
add
adc
ds
and
imul
addps
jle
jo
push
js
daa
push
mov
and
cmpsb
mov
ficompl
sub
shl
clc
movsl
pop
push
out
daa
xchg
cmp
or
pop
and
and
out
adc
sbb
inc
lods
pop
inc
mov
aas
dec
add
push
or
mov
push
mov
mov
lret
mov
sbb
or
mov
repnz
push
fsubp
or
mov
out
sar
test
mov
mov
mov
push
adc
pop
fdivrl
dec
loop
cmpsl
dec
mov
shll
aas
pop
inc
ffreep
cmp
es
test
mov
data16
jp
incl
leave
mov
mov
inc
xor
cld
jecxz
in
and
cmp
add
cmp
dec
call
pop
sub
jns
pop
jo
les
decb
outsb
xchg
jno
js
xchg
std
mov
ds
push
ret
jnp
je
fisubl
pusha
jnp
jbe
adcl
test
xor
data16
adc
aad
outsl
mov
arpl
mov
dec
rcr
jae
cmpsb
test
cmc
xor
es
pusha
aad
movsb
rclb
movsl
fcompl
push
cltd
sbb
sub
or
in
pop
adc
ja,pt
jno
movsb
je
lods
sub
xor
pop
enter
pushw
fbld
lds
xchg
pop
dec
sbb
mov
or
lahf
movsb
and
movsb
push
ja
mov
leave
cmp
mov
jno
lods
mov
dec
mov
sahf
bnd
insb
mov
call
inc
mov
adc
ds
lret
mov
jl
dec
jecxz
push
push
mov
test
mov
or
into
aas
outsl
stos
das
push
mov
cmp
dec
in
mov
movsb
push
or
or
mov
fsubrs
int
filds
outsl
fisttpl
jecxz
cli
dec
pop
lds
shll
mov
ja
push
mov
sbb
call
in
dec
addl
xchg
decl
or
lahf
pop
in
es
cmc
hlt
arpl
inc
fistpl
insb
fs
les
pop
push
adc
cmp
rorb
or
sbb
sub
ret
aad
dec
dec
mov
fsubr
pop
inc
inc
hlt
add
lea
push
sbb
dec
xchg
outsb
aad
data16
mov
rorb
inc
mov
test
sahf
sub
inc
add
xchg
mov
push
divl
inc
cli
cmp
das
testl
jnp
xchg
popa
mov
fs
jns
test
out
imul
fcomps
rolb
adc
out
std
pop
jmp
lcall
push
pop
adcb
faddl
adc
addr16
cld
add
hlt
ret
adc
mov
cli
lds
addb
jp
leave
gs
cli
sbb
xchg
pop
push
and
inc
xchg
adc
xor
dec
sbb
int3
nop
movsb
in
std
add
in
push
js
popa
js
fs
stc
out
dec
js
sbb
mov
jl
rolb
enter
pop
adc
add
cld
inc
into
mov
xor
pop
pop
fstpt
push
mov
dec
daa
sbb
mov
cmp
cwtl
mov
out
cmp
jo
xor
xor
mov
jae
xor
push
std
fstpt
mov
cmp
jge
mov
xchg
push
andb
leave
and
dec
mov
push
inc
sbb
cmp
subl
or
in
add
imul
inc
pop
mul
pop
loop
pop
add
xor
mov
dec
sub
jnp
xchg
out
mov
shlb
sbb
jbe
jge
dec
push
add
cld
pop
add
pop
mov
mov
dec
and
mov
pushf
lret
hlt
push
sub
ret
fisttps
sub
push
jg
std
jecxz
je
push
aaa
rcll
xor
call
ja
or
outsl
faddl
cmpsb
cmpsl
mov
cmpsb
add
andl
pop
pop
add
inc
jl
jecxz
xchg
jo
push
xchg
in
and
xchg
jecxz
jl
pop
test
push
daa
mov
xchg
push
mov
stos
pop
fmul
inc
or
inc
jnp
mov
xchg
outsl
pusha
sub
add
int
pop
jbe
push
aas
fbstp
mov
cmp
push
xchg
xor
sub
aas
leave
mov
sbb
mov
cmp
pop
fiadds
lret
inc
aad
movsb
adc
movsl
dec
addr16
cs
fldl
jg
movntps
pop
sbb
sbb
or
inc
push
iret
push
xchg
test
jnp
sub
xlat
or
movsl
lods
repnz
cmp
scas
jno
pop
daa
pop
ror
dec
data16
xor
in
pusha
stos
xchg
outsl
popa
push
out
xchg
flds
gs
jmp
or
sbb
sbb
sbb
test
jb
push
into
and
inc
js
xchg
pop
mov
sbb
pop
ret
mov
out
out
popf
push
in
mov
punpckhdq
loopne
xchg
adc
pop
push
sti
or
cmc
clc
call
cmc
push
add
push
inc
out
jg
xchg
sbb
jno
cli
loopne
loope
xor
cmp
adc
bound
and
inc
adc
dec
push
popf
cwtl
xchg
mov
dec
cmp
xor
test
adc
inc
scas
or
fldcw
jb
xchg
and
jns
add
xorl
ret
jecxz
js
hlt
test
dec
pop
xchg
stc
jnp
fidivrs
add
stos
icebp
and
xchg
call
vxorps
in
sub
and
mov
nop
out
xor
adc
inc
cmp
inc
in
pop
pop
icebp
mov
out
inc
ret
pop
aad
push
inc
iret
not
inc
jae
stc
sbb
push
gs
arpl
icebp
fwait
jge
xchg
imul
xor
lods
fidivrs
push
jg
inc
mov
jbe
inc
clc
ret
fwait
sub
cmp
es
fxch
movb
cld
jmp
xorl
cld
pop
mov
sbb
daa
in
loope
dec
xor
loope
test
aaa
pop
adc
hlt
dec
adc
stos
xchg
cmpsl
inc
movsb
sahf
lods
adc
test
xchg
sbb
fwait
in
inc
repnz
jnp
popf
jle
leave
aad
cmpsl
fiaddl
inc
cmc
cwtl
xchg
dec
push
faddl
mulb
sbb
outsl
pusha
loop
and
mov
cli
test
mov
cmp
push
add
push
cwtl
sub
cmovo
add
inc
add
cmp
stos
cmpsb
fsubl
push
pop
mov
aam
adc
cmc
lods
nop
js
ret
push
xchg
mov
fsubrl
push
dec
iret
push
repz
std
sub
and
pop
inc
jnp
test
es
addr16
subb
or
movsl
scas
xor
push
or
leave
aad
jno
and
js
out
scas
mov
lahf
mov
dec
addr16
lret
mov
mov
push
insl
mov
sub
cmpsb
xor
pop
call
into
push
jecxz
sub
shlb
sbb
mov
and
dec
jp
repnz
test
cmp
mov
out
jecxz
sarb
lock
dec
aad
leave
aad
and
clc
adc
daa
xchg
mov
daa
addl
mov
test
xchg
cld
adc
leave
into
mov
jbe
imul
imul
xchg
mov
pop
jo
lahf
dec
gs
add
fwait
mov
lds
dec
aad
mov
aas
jo
cmp
pop
es
enter
adc
xchg
ja
repz
cli
ds
pop
and
repnz
outsb
push
loopne
imul
cld
lea
sti
pusha
pushf
cmp
mov
in
addr16
push
mov
xchg
xor
ja
addr16
stc
jne
sbb
iret
cmp
mov
mov
xchg
jge
pop
cmp
dec
mov
lock
mov
fnsave
cmp
mov
and
test
xchg
insb
sbb
aas
jnp
mov
out
add
leave
in
jmp
adc
gs
inc
jmp
test
xchg
mov
dec
test
fdivrl
or
or
push
sbb
dec
lods
mov
cld
push
xchg
push
sti
mov
and
mov
nop
and
sarb
cmp
or
xchg
or
fwait
test
int
push
push
jno
jne
or
jg
lea
push
sub
pop
cs
mov
mov
add
pop
rorb
xchg
and
xchg
or
push
pop
sbb
pop
jo
cmp
data16
test
cmp
jmp
in
push
ja
enter
loop
mov
outsb
push
or
sub
mov
xchg
mov
or
jp
mov
ja
jg
int
and
xchg
xchg
xchg
ret
mov
arpl
jne
mov
adc
xchg
or
mov
adc
mov
and
test
and
push
or
fistl
mov
dec
lds
loopne
ret
fldcw
outsl
stos
mov
dec
mov
lcall
ljmp
xchg
mov
imul
sub
lods
into
out
ss
push
jno
lea
jae
pop
or
xor
mov
js
lahf
into
or
data16
in
mov
sub
pushf
push
leave
or
movsl
repnz
fisttpll
mov
arpl
clc
lret
bound
ljmp
lret
dec
stos
add
sub
add
das
test
adc
bound
and
movsl
inc
fstp
cmpb
adc
into
cld
xor
and
repz
pop
push
and
outsl
mov
mov
push
push
ret
inc
movsl
inc
ret
shrb
sub
lcall
aam
mov
push
aad
mov
add
dec
lods
call
jle
loope
lahf
inc
jmp
pop
pop
out
nop
mov
xchg
lods
sarl
iret
out
pop
es
sbb
mov
add
sbbb
ret
nop
or
mov
adc
rolb
fbstp
push
clc
shrl
pop
insb
sub
inc
es
hlt
les
fcompl
cmp
pop
cld
add
insb
mov
sbb
lret
enter
rolb
pusha
cmp
cmpsl
fstps
imul
sbb
cmp
jnp
mov
pop
inc
xchg
push
and
scas
sbb
dec
dec
mov
lahf
dec
add
xor
mov
shlb
add
jne
in
pusha
out
aas
pop
out
pushf
aaa
xchg
push
loope
sub
cld
and
sub
cmp
shrl
push
fwait
cli
pop
or
mov
cmp
jge
daa
outsb
or
in
add
add
ja
cmp
mov
push
or
jp
aad
jecxz
sbb
mov
loope
xchg
or
je
inc
xchg
aad
movhps
lcall
scas
xor
xchg
xchg
mov
and
je
jp
mov
in
aas
xor
icebp
cmp
subl
lock
jle
adc
sub
jge
xchg
lret
adc
jg
jecxz
fdivl
out
dec
push
adc
push
lahf
rcl
inc
aad
inc
push
sub
sbb
popl
pop
aaa
imul
dec
popf
xor
push
push
xchg
stos
pop
xlat
in
out
popa
icebp
adc
xchg
push
negb
in
xrelease
stc
js
imul
xor
out
sbb
adc
sub
add
es
mov
popf
mov
push
sbb
jne
push
xchg
sbb
mov
outsl
sbb
je
jle
mov
push
jecxz
fidivl
sub
jne
mov
push
pop
scas
push
sub
dec
in
leave
cwtl
jbe
clc
xor
dec
dec
insb
punpcklbw
add
pusha
pop
sbb
rclb
cld
ret
popf
pop
cmp
xor
popa
mov
fisttpll
and
sbb
test
out
xor
mov
add
inc
push
ds
fistps
and
cmc
divb
jb
adc
adc
jl
cmc
pop
xor
pop
leave
int3
orl
les
sub
xor
outsb
sbb
fcompl
pop
mov
stos
mov
je
sub
cmp
cmp
iret
mov
addr16
and
or
faddl
push
inc
dec
mov
call
xor
xchg
leave
xor
lcall
mov
sbb
push
push
adc
fildl
inc
cld
mov
pop
cld
jne
scas
ds
inc
or
shlb
push
enter
daa
jge
clc
cmp
xchg
sub
rcl
pushf
pop
dec
rorb
ss
fdivl
mov
push
jge
xlat
or
and
xchg
and
mov
repz
test
dec
inc
faddp
sbb
or
lret
fcoms
ficompl
push
or
aas
cmpb
popf
aad
mov
mov
addr16
mov
push
cmp
out
jecxz
push
test
cmpsb
lods
cwtl
aam
cmp
mov
lock
push
test
jns
out
inc
cmpsl
jecxz
popa
cmp
push
push
sbb
lods
or
adcl
xor
push
push
inc
roll
or
fwait
shl
into
mov
ret
ds
xor
sahf
repnz
push
mov
test
mov
out
data16
es
inc
jbe
fsub
out
xor
adc
and
into
xchg
jle
lock
int3
jle
xchg
xor
ss
mov
test
addr16
movsl
jp
or
inc
cltd
out
test
movsl
and
js
jbe
scas
and
sub
lea
pushw
loopne
cmpsl
inc
cs
sbb
shr
sub
xor
daa
sti
fstpt
cmp
sbb
pop
mov
lcall
dec
jge
into
cmc
js
pop
jmp
int
lea
xchg
cs
dec
and
or
mov
xchg
xchg
jno
jmp
test
adc
xor
xchg
mov
dec
inc
sbb
add
rcll
loopne
cmp
xchg
bound
push
sub
pop
mov
lods
lret
cmpsl
int
ljmp
jo
insl
pop
das
cmp
cwtl
mov
das
inc
js
icebp
rorb
inc
bound
inc
rcrb
ret
sbb
jne
popf
les
xchg
gs
push
aas
mov
jns
pop
movsb
mov
stos
adc
add
or
sub
cmp
js
sub
xor
iret
inc
scas
lret
jmp
inc
push
jge
aaa
push
das
mov
and
jg
inc
and
pop
sbb
inc
shll
mov
int
faddl
in
inc
out
lahf
cmpsb
fiaddl
dec
cmp
das
into
push
jns
xchg
xchg
fwait
inc
sbb
xor
push
aam
pop
js
aaa
decl
cmp
mov
clc
icebp
insb
sub
dec
pop
adc
ret
addr16
sub
dec
rcl
mov
rcrl
out
insl
lret
cmp
sbb
mov
mov
iret
push
scas
dec
xchg
xor
dec
enter
xchg
push
inc
sbb
dec
andl
sbb
cmp
add
mov
or
jns
test
xor
inc
or
lea
loope
out
lret
clc
cli
push
fdivrl
sbb
jl
sbb
jnp
cmp
fisttpl
jae
hlt
repz
push
mov
pop
lret
call
aad
dec
adcb
insb
lods
lock
iret
mov
movsl
add
cmp
cmc
movsb
mov
bound
loop
ljmp
lret
inc
jl
mov
mov
add
jb
lret
push
mov
sub
mov
pop
shld
sbb
mov
js
sub
add
mov
rcll
pop
adc
or
adc
jae
jbe
dec
in
jge
adcl
mov
xor
dec
into
sysenter
aaa
outsb
ret
add
push
out
std
adc
repnz
push
adc
cmp
jne
jl
imul
jno
push
bound
xchg
loopne
add
insb
aas
mov
in
inc
jno
add
mov
addb
adc
in
dec
pop
mov
es
cld
jnp
cld
xchg
jg
dec
lret
outsb
sub
or
mov
xchg
rolb
or
icebp
inc
adc
cwtl
mov
jge
test
test
fdivrs
ds
mov
icebp
push
fdivr
mov
sbb
loop
sub
mov
sbb
clc
fs
jg
mov
lret
cs
outsl
lods
xor
cld
nop
inc
es
neg
mov
inc
dec
cli
loop
mov
push
xor
and
notb
cwtl
mov
xor
adc
adcb
pop
imul
mov
mov
lea
mov
outsl
test
out
movsb
push
ss
add
pop
inc
cld
push
mov
xchg
aas
ret
out
mov
push
xchg
dec
stc
shll
dec
mov
cmp
cmpsb
movsb
cmp
sbb
in
mov
mov
ds
xchg
loope
mov
cmp
cmc
mov
stos
loope
jo
xchg
mov
lods
push
mov
int3
stos
mov
ja
inc
pop
xlat
xor
loopne
mov
aam
add
lock
pusha
xor
out
xchg
dec
js
pop
lea
sbb
adc
dec
jecxz
dec
push
sbb
pop
call
and
mov
mov
mov
mov
in
popf
pusha
sahf
scas
pop
call
push
mov
mov
dec
xlat
loop
data16
test
insb
cmc
and
sahf
and
lea
cltd
loope
repnz
outsl
repz
mov
sbb
repz
inc
sbb
xchg
mov
rcrb
push
push
xlat
lret
mov
push
std
push
dec
lods
imul
mov
jo
cmp
clc
sub
mov
push
push
lret
sub
lods
cmp
jne
pop
insl
pop
xchg
pop
jne
mov
leave
push
sbb
cmp
repz
jge
xor
sub
pop
repz
mov
jl
mov
push
dec
int
ds
rcl
push
mov
sarl
push
push
push
fdiv
stos
mov
pop
mov
mov
jne
jno
fsubrl
pop
sti
cwtl
jmp
ss
mov
not
push
aam
cmpsl
dec
inc
test
inc
lods
shll
imul
bound
pop
clc
rol
xchg
xchg
daa
shlb
loopne
jnp
inc
in
mov
dec
pop
inc
mov
mov
push
clc
pop
cmp
sbb
inc
lret
xor
push
xor
jns
mov
aad
sbb
jecxz
mov
lret
inc
sbb
ja
aam
sbb
xor
cmp
add
pop
shrl
xor
iret
data16
out
xor
pop
cmp
push
and
push
mov
cmpl
mov
add
lock
aad
lock
xor
fnsave
lds
add
xchg
sbb
pop
enter
iret
subb
leave
or
testl
into
in
sarb
mov
int
cmp
ss
inc
scas
adc
inc
test
xchg
dec
adc
mov
push
add
rcl
outsl
mov
aas
jp
arpl
ret
xchg
dec
adc
lret
fidivs
lcall
fcompl
and
sbb
aaa
push
addl
pop
andl
leave
iret
ss
std
pushf
xlat
sbb
xorl
enter
into
daa
add
mov
out
data16
dec
clc
arpl
adc
push
insb
or
add
xchg
push
repz
mov
mov
lods
fsub
mov
ja
add
jae
jbe
loope
jne
scas
add
fstpl
in
aaa
dec
fiaddl
cmpsb
pop
outsl
lods
xchg
sub
pusha
xor
xor
ja
negl
dec
outsl
std
out
pop
imul
pop
dec
jp
or
jg
lods
lods
adc
repnz
adcb
add
dec
xchg
jge
lcall
jbe
push
xchg
mov
sahf
ss
sahf
cmpsl
push
mov
orb
mov
mov
fidivrl
shrl
sbb
sbb
dec
xchg
out
sbb
push
push
lods
jns
cltd
das
xchg
jg
fdivs
ret
leave
subl
xorb
sbb
aas
push
repnz
lock
push
and
nop
adc
cmp
cli
lret
pop
rcl
pop
mov
push
sahf
mov
mov
jg
sarb
sub
leave
jp
sbb
pop
add
aad
roll
and
ret
mov
lods
dec
cmp
mov
movsl
insl
nop
enter
jge
loop
dec
mov
mov
add
incl
movsb
int3
xchg
fdivrs
cmpsb
xchg
fcmovbe
test
push
outsb
mov
jmp
hlt
push
sbb
lock
sahf
xchg
jne
mov
outsl
cmpsl
les
mov
push
out
mov
movsl
xchg
push
fists
sub
les
popf
push
repnz
shll
mov
enter
jge
xor
push
adc
or
jge
jbe
adc
cmpsb
dec
nop
mov
test
es
or
and
test
pusha
lods
mov
add
xchg
sbb
sarl
jo
mov
adc
mov
mov
movsl
in
jne
and
jo
push
aas
xchg
and
or
adc
mov
lock
pusha
lea
ss
xchg
pop
sub
adc
dec
or
or
sahf
adc
cli
sahf
lds
xor
jo
pusha
stos
xchg
sbb
insl
stc
push
jge
imul
cld
pop
jnp
add
jne
repz
aad
lret
rorl
cld
dec
xchg
jge
lods
xor
loop
dec
sahf
fsubl
mov
add
add
repnz
xor
jmp
cld
aas
mov
lea
icebp
inc
sbb
lea
pop
push
or
pop
xchg
push
fisttps
mov
push
test
or
mov
and
and
fdivs
add
int3
test
stc
jp
mov
push
mov
dec
roll
mov
stc
jno
or
or
cmp
lods
jne
fldt
dec
dec
nop
pushf
inc
cmpsl
add
movsl
lret
popf
sub
mov
cmp
mov
jbe
test
es
push
leave
jecxz
sbb
icebp
mov
fildl
movsl
lcall
shlb
mov
stc
and
cmp
andb
push
into
fisubrs
mov
mov
mov
sbb
test
aam
and
pop
arpl
subl
jne
fldt
cmp
sar
flds
mov
mov
daa
sub
push
out
sub
pop
xor
shll
push
dec
xchg
pop
inc
or
pop
and
or
add
test
pop
mov
out
or
fistl
mov
pop
mov
adc
or
push
mov
xor
out
arpl
je
sbb
push
pop
jb
add
ja
stos
push
imul
daa
sbb
andl
push
test
pop
pop
mov
sbb
bnd
mov
pop
js
mov
fcmovnbe
repnz
mov
jae
lea
outsl
jno
cmp
out
sub
mov
pop
xchg
test
fcmovbe
mov
push
push
cltd
stc
pop
jmp
xchg
js
xchg
popf
inc
popa
xchg
xor
sbb
push
in
xor
mov
icebp
inc
xor
loope
inc
pusha
cmp
lahf
scas
das
sti
sbb
data16
movsl
icebp
pop
mov
inc
lea
insl
mov
jmp
loope
xor
push
xor
lret
mov
adc
into
pushf
clc
cmpsb
dec
sahf
adc
pop
insl
adcl
shrl
cmp
xchg
jnp
mov
js
dec
lcall
rcrl
rorl
push
out
jae
shlb
sbb
xlat
in
dec
test
stc
shlb
mov
and
aad
sub
js
aam
cmp
cmp
mov
loop
insl
add
push
pop
cmp
pop
sub
sub
jmp
fnstcw
mov
inc
arpl
add
mov
pop
lods
add
loopne
push
cmpsb
jmp
fldcw
mov
fisttpll
cwtl
jnp
mov
in
addr16
xchg
cld
cli
sahf
ficomps
xchg
orb
out
pop
jae
xchg
or
or
rcrl
cltd
ficomps
mov
inc
mov
cli
mov
scas
xor
push
pop
daa
adc
out
mov
cwtl
mov
loop
mov
leave
xor
pop
adc
es
loopne
ret
loopne
inc
jmp
jl
sbb
jmp
xchg
shr
repz
fidivl
clts
stos
add
mov
hlt
je
jns
aam
sub
loope
dec
data16
cli
das
push
and
adc
aam
ret
sub
inc
push
outsb
not
dec
push
pop
jno
enter
outsb
outsb
xor
mov
xlat
mov
add
fldenv
push
inc
push
test
push
fdivl
into
jne
popf
pop
lods
dec
lret
rcrb
jno
cmp
sbb
sub
les
fldt
in
dec
adc
dec
sti
mov
shlb
or
insl
mov
gs
ss
pop
bound
lods
mov
js
cmp
sub
shlb
data16
test
add
jns
adc
add
fucom
pusha
es
pusha
add
stos
int3
adc
or
mov
mov
adc
call
ret
xor
leave
adc
mov
inc
popf
or
jmp
cmpsl
xchg
xor
mov
test
xorl
inc
fs
mov
mov
inc
pop
push
testl
push
hlt
push
je
lret
stos
fbstp
aas
into
call
fisubl
bound
push
in
scas
and
test
xor
fwait
pop
push
sub
cmp
sub
mov
jge
jns
rcrb
add
pushf
mov
xchg
mov
add
or
or
mov
xor
ret
cmpsl
outsb
mov
scas
jns
mov
cmp
mov
inc
jmp
xlat
pop
lcall
and
mov
ss
insl
sub
lret
mov
out
xchg
jnp
int3
mov
arpl
into
mov
xlat
test
jmp
xor
add
push
arpl
mov
sahf
aam
into
or
dec
lods
sub
cmp
push
in
and
mov
mov
ret
hlt
push
cld
add
stc
mov
mov
pusha
xchg
mov
push
int3
outsl
pop
dec
inc
mov
scas
and
add
imul
enter
mov
fisubs
sbb
insl
jnp
xchg
mov
cli
pop
and
mov
loop
mov
sbb
add
aam
out
movsl
jo
hlt
sarb
pushf
jge
adc
inc
fsubs
mov
push
popa
mov
lret
jle
jns
xor
fstpt
je
testb
mov
leave
jo
mov
xchg
pop
sub
dec
repnz
test
int
add
sub
ret
cli
pop
mov
jns
cmp
and
and
pop
mov
shr
loopne
stos
dec
stos
pop
sub
mov
dec
in
repz
or
ficomps
movsl
rcll
inc
lret
xchg
adc
inc
inc
add
nop
and
outsl
iret
outsl
popl
scas
pop
es
repnz
lds
pop
adc
clc
mov
add
test
add
movsb
fstl
xor
pop
push
notb
popf
movsb
imul
hlt
fcoms
jnp
lret
inc
xchg
add
sbb
arpl
pop
jne
jmp
push
inc
rol
test
and
sub
fimull
mov
shll
cmpsb
and
adc
scas
jmp
arpl
aam
in
stos
aaa
mov
mov
mov
pop
pop
aaa
inc
orb
int3
mov
movsb
add
sahf
dec
push
mov
call
sbb
cmpsb
or
mov
ficoms
lret
fmull
sahf
or
call
cmpsb
pop
aas
xor
sub
shlb
loopne
inc
mov
cmc
loopne
sub
sub
js
dec
inc
jecxz
enter
insb
xor
pop
fisttps
fs
jmp
pushf
push
jno
incl
lods
xchg
cmp
pushf
push
xchg
fdivl
sub
addr16
bound
xchg
pop
lret
scas
mov
imul
or
push
push
stos
sbbb
mov
add
adc
mov
repnz
xchg
rolb
sarb
push
pop
lock
push
cmpsl
push
adc
sub
mov
xchg
vmwrite
jecxz
test
ljmp
xchg
push
and
and
arpl
jecxz
or
mov
xchg
mov
mov
lret
out
loopne
shrl
stos
cltd
and
push
mov
pusha
xchg
ljmp
je
jb
scas
cmovge
dec
mov
mov
mov
je
jo
outsl
sub
dec
sub
inc
push
inc
adc
in
stos
mov
sub
xchg
sub
and
pop
pusha
insl
jno
mov
xor
mov
sbb
insb
sbb
subb
mov
pop
dec
push
adc
in
inc
sbb
out
jne
mov
pop
add
mov
xor
or
xor
cmpsb
xchg
jg
ja
out
mov
flds
lret
xchg
aam
add
sbb
fldenv
test
jno
dec
pop
jmp
inc
aaa
pop
in
adc
out
mov
popa
xor
or
sahf
xor
jmp
mov
sbb
insl
ljmp
add
fs
stos
out
ret
pop
insb
mov
sbb
flds
jno
xchg
inc
mov
lods
sahf
xor
and
js
call
sbb
sub
sub
dec
scas
pop
aaa
xor
nop
or
mov
jecxz
dec
lea
fwait
mov
and
add
fcmovbe
popa
bound
sub
rcll
mov
enter
call
push
push
cld
xchg
das
or
dec
int
jge
inc
test
out
mov
mov
inc
pop
pop
sub
not
pushf
jo
xor
jne
sbb
cmp
mov
jnp
rcrl
fstl
pop
int
sub
push
insl
adc
movsb
daa
in
cmpb
sbb
test
cmp
push
stos
xchg
pushf
adc
outsl
cmpsl
xchg
push
icebp
add
push
stos
push
cmc
pop
sbb
add
ss
scas
stos
sub
add
xchg
mov
ja
xchg
cmc
pop
sysret
pop
add
pop
inc
nop
jnp
aas
aad
stos
fdivs
into
mov
push
lea
mov
xchg
jecxz
rcr
loop
aad
cwtl
mov
jecxz
icebp
sbb
jb
sbb
sub
push
cli
mov
xchg
xlat
repnz
cmp
popl
pushf
push
jl
iret
lcall
subb
mov
sub
js
and
mov
pushl
sbb
cmpsb
add
adcb
lds
xchg
in
movsb
les
rorl
push
or
jbe
lods
mov
inc
xlat
adcl
outsl
jmp
arpl
xchg
mov
pusha
repz
mov
mov
xor
cmp
and
adc
pop
push
stc
loope
lods
insl
mov
push
inc
xor
je
dec
inc
inc
scas
inc
or
jne
testb
dec
test
js
mov
notl
and
mov
scas
jbe
push
sbb
js
ret
pop
sti
push
xchg
or
ja
lock
aam
outsb
jb
movsb
cmp
mov
andl
add
call
jge
jmp
adc
and
dec
mov
popf
int
or
pop
pusha
mov
out
push
jne
mov
scas
xor
aam
cmp
jns
and
enter
sub
cmpb
mov
sub
adc
into
iret
cmp
aas
xchg
xchg
fldt
sbbb
mov
or
sti
sahf
hlt
testb
sahf
adc
ja
aaa
inc
mov
pop
adc
lock
bound
out
cmp
test
or
out
mov
jmp
dec
cmpsl
insl
push
test
test
fs
xchg
mov
ficomps
stc
mov
int
or
jbe
cmp
int3
test
jns
mov
pop
cmpsb
adc
xchg
jbe
aam
sbb
mov
test
loope
fdivs
inc
dec
outsb
icebp
push
mov
pop
outsb
repz
jbe
mov
mov
mov
mov
push
jne
push
mov
test
icebp
scas
lret
in
ja
aad
adc
fcomps
loope
sub
in
add
xor
aam
pusha
out
jecxz
mov
test
shl
xchg
ljmp
adc
xor
xchg
lss
icebp
divl
xchg
cld
ficoml
stc
mov
xor
jns
sarb
in
mov
and
icebp
sti
idivl
aaa
je
inc
aam
lret
out
fsubs
sti
and
sti
pusha
clc
cmp
clc
jnp
loope
xchg
mov
movsl
xchg
mov
movsb
loopne
out
add
xchg
mov
pop
and
jl
jge
aaa
cmpsb
jb
sbb
dec
and
mov
push
mov
int3
arpl
out
xchg
mov
xor
sbb
jae
add
insl
push
test
lds
icebp
cmovl
sub
shl
or
je
je
imul
push
cmpsb
push
out
data16
adc
sbb
xchg
nop
loopne
pop
nop
lret
addr16
mov
mov
ss
lcall
sub
mov
sub
jg
dec
jmp
sti
xor
and
sbb
outsb
lret
sbb
repz
data16
cld
ljmp
jae
test
push
sar
popa
sbb
iret
mov
and
xor
loope
pop
aad
adc
das
ja
jns
xor
cmp
ja
pop
dec
or
and
or
or
xchg
bound
dec
inc
push
out
sub
push
inc
add
adc
add
dec
cmpsl
or
mov
mov
sbb
call
xor
cmp
popa
or
jle
in
xor
mov
add
ret
jo
test
pop
sbb
or
frstor
xor
test
inc
xor
lods
jb
pop
repz
in
lock
xor
xor
sbb
les
loop
pop
jg
lock
or
iret
inc
cmp
cmp
jmp
addr16
mov
sbb
mov
xor
icebp
mov
enter
xor
push
sbb
lret
jbe
lret
stc
stos
mov
arpl
mov
sub
mov
jg
xchg
pop
adc
dec
inc
xchg
shll
add
xor
scas
jnp
fadds
mov
dec
dec
rcr
xchg
popa
dec
mov
out
adc
orb
test
out
or
adc
outsl
sub
mov
dec
add
sbb
adc
repz
mov
test
ret
and
push
and
pop
or
mov
pop
or
inc
sbb
incl
sbb
ss
cwtl
mov
sbb
push
movsb
xchg
mov
push
dec
vdivss
lret
imul
je
lcall
test
andb
arpl
or
cmp
pop
scas
in
dec
ret
pop
fcmovnu
jae
jae
sahf
push
push
sbb
xchg
and
jmp
push
dec
mov
int
mov
pop
adc
test
xchg
mov
inc
testl
shlb
adc
mov
loopne
cwtl
xor
aad
leave
pop
push
mov
jnp
and
fs
dec
jno
stos
or
dec
shlb
mov
fldcw
shr
hlt
bound
xchg
cmp
inc
ss
loopne
shrb
test
mov
jmp
or
pop
sub
or
fisttpll
cmpsl
pop
int3
mov
scas
push
imul
push
add
adc
mov
cmovb
inc
jbe
loop
popa
out
dec
ds
int
mov
lret
mov
ds
repnz
or
push
dec
test
dec
cmpb
in
jp
lahf
outsb
lds
aad
test
push
mov
test
pop
adc
jmp
pop
rcrb
adc
lret
test
fidivrs
shlb
sbbl
ficompl
mov
inc
add
out
iret
mov
scas
push
mov
inc
shl
or
jle
inc
jmp
iret
fmulp
jno
or
mov
and
xchg
dec
cmp
sub
test
cmp
pop
in
jg
test
flds
stos
add
adc
or
xor
loopne
cltd
dec
cwtl
add
std
push
movsl
cmp
adc
and
in
mov
adc
xchg
push
scas
popf
adc
jno
popl
mov
dec
ljmp
aaa
shr
cmp
xor
jmp
cwtl
pop
imul
mov
adc
mov
mov
mov
mov
shl
mov
ret
outsl
js
pop
xchg
cltd
imul
dec
xchg
out
mov
flds
pop
jb
test
add
xor
push
pop
mov
shll
xchg
lret
mov
out
dec
arpl
jae
mov
into
jg
hlt
mov
das
sub
jae
gs
mov
clc
jp
repnz
sbb
outsb
dec
outsl
repnz
jne
fcompl
sarl
jb
pusha
and
int
js
xchg
push
sti
cmpsl
mov
xchg
outsl
inc
es
sbbl
aas
dec
push
cld
jb
ret
ret
pop
sub
in
adc
in
or
mov
mov
repnz
mov
out
imul
xchg
mov
sbb
xchg
add
bound
enter
xor
inc
cmp
xor
aas
xor
inc
inc
pop
mov
scas
sbb
movbe
call
outsl
jnp
push
addr16
pop
mov
push
mov
push
ret
insb
addr16
addb
jmp
push
push
lret
xor
add
dec
shrl
add
das
lods
dec
fldt
pop
dec
pop
pop
mov
inc
dec
cmp
repnz
lods
push
xor
lret
xchg
into
into
push
xchg
push
sub
repnz
mov
fwait
insb
jns
mov
add
scas
aaa
mov
pop
and
vpshab
movsl
dec
push
dec
xor
arpl
es
decl
add
cmpsb
arpl
ss
ret
int3
data16
mov
inc
jb
adc
push
sub
push
jle
adc
in
test
adc
into
fwait
inc
cs
cmp
fistpll
sub
inc
fisubl
mov
mov
add
jbe
jno
xor
xor
jl
or
xchg
bound
pop
sub
repnz
add
arpl
movsl
outsl
and
test
into
jne
and
in
addb
push
jnp
mov
imulb
jge
or
ret
lret
dec
aas
or
xor
mov
xchg
inc
mov
push
inc
incb
cmc
out
cmp
dec
mov
fstpt
push
inc
dec
arpl
divb
repz
mov
and
pop
pusha
data16
xchg
test
lahf
movsb
sahf
test
ret
mov
int
jnp
enter
cltd
jbe
xor
xchg
push
mov
orb
bnd
lahf
nop
ret
add
int3
mov
inc
lahf
in
jno
outsl
pop
in
les
dec
cmc
sbb
lds
imul
push
mov
ss
pop
jg
xchg
shl
adc
mov
sbb
ljmp
mov
xchg
rolb
rorl
jbe
stc
push
add
jle
insl
or
or
dec
adc
cmp
inc
ljmp
and
sub
and
fnstsw
pop
add
mov
cmp
xchg
dec
fucomi
xchg
lods
pop
js
std
mov
and
andl
and
testl
jno
pop
ficoms
cwtl
fildl
call
out
std
sbb
mov
add
inc
adc
inc
gs
mov
cwtl
mov
mov
fistps
mov
aad
cmc
mov
inc
stos
outsb
mov
sbb
xchg
js
cmp
outsb
nop
ret
es
jne
pop
jns
out
test
inc
jno
cltd
adc
or
cwtl
movsb
mov
push
test
mov
xchg
mov
or
in
std
negb
sub
pop
repnz
fmuls
sbb
loopne
fwait
nop
mov
lods
rcr
les
in
mov
sbb
xorb
aad
mov
xor
in
push
sbb
popf
js
movsl
out
jae
sarl
dec
dec
shlb
mov
les
sbb
sbb
mov
sbb
push
cmpsb
inc
mov
shlb
push
sub
testb
mov
add
movsl
inc
or
movsl
inc
and
xchg
std
out
iret
xor
aaa
mov
xor
shlb
push
pop
rcl
loopne
shll
lock
iret
mulb
cltd
cmp
mov
mov
sub
mov
mov
outsl
test
xor
incb
pop
cwtl
and
iret
dec
decb
sti
xchg
and
lds
fstpt
test
std
jge
cmpsb
in
popa
data16
push
ljmp
in
dec
sbb
fmuls
inc
pop
lods
sbb
movsl
scas
sub
cmp
dec
jecxz
leave
sub
jge
loop
stos
jb
and
sub
mov
lret
int3
and
push
lods
push
push
out
fsubrp
jnp
cmpsl
pop
mov
or
jbe
and
push
dec
mov
adc
stos
pop
std
aad
add
lcall
repnz
fs
inc
aas
mov
jge
jg
adcl
xchg
imulb
or
stos
pop
rcll
or
lret
movsl
dec
adc
add
add
fs
adc
pop
cmc
scas
loopne
outsb
inc
sbb
ss
push
and
xchg
loop
add
or
ds
mov
repz
adc
mov
cli
mov
dec
dec
xchg
bound
adc
mov
pop
shrl
and
nop
cli
pop
ljmp
es
orb
push
jl
add
imul
mov
sqrtps
and
fs
push
mov
sbb
mov
xlat
push
fdivrs
mov
faddl
stos
fcomip
dec
and
mov
xchg
mov
push
gs
pop
fcoms
sbb
xlat
cmpsb
or
push
mov
adc
sub
xchg
aad
sahf
mov
jbe
aam
sarb
xchg
imul
ss
push
stos
js
mov
and
rclb
cld
in
mov
mov
sbb
fisttps
push
loope
xchg
xlat
mov
cmp
clc
frstor
pop
lcall
in
pop
xchg
mov
sbb
loopne
and
pop
push
adc
adc
int3
sub
aam
sbb
insb
outsb
and
adc
js
lcall
mov
mov
loopne
and
fstl
mov
pop
loop
sarl
js
jecxz
mov
ss
mov
adc
push
int3
xchg
aas
cmp
cmp
lds
xchg
test
adc
fistl
or
dec
shr
std
mov
or
xchg
jne
dec
aas
int
ja
pop
cmp
jns
cs
in
adc
test
rcl
push
inc
jmp
mov
lock
sub
scas
xorb
add
roll
bound
and
mov
adc
test
xchg
idivb
ret
add
lret
rclb
rolb
push
stos
roll
sbb
pop
lcall
mov
imul
mov
inc
dec
push
pop
lret
popf
xor
push
adcl
adc
cld
pop
mov
cmp
lret
hlt
popf
push
mov
jno
inc
mov
sub
test
leave
push
cmp
xchg
and
jns
and
ret
in
stos
sub
loop
or
cmp
nop
dec
dec
jo
outsl
jecxz
push
jns
out
or
lret
sub
pop
addr16
les
mov
mov
jmp
xlat
xchg
jecxz
bound
sbb
xchg
or
xor
fs
and
shrl
stos
js
cli
push
push
cs
test
orl
mov
add
push
lret
dec
mov
xchg
adc
push
lods
lods
sub
ficoms
sti
test
cmp
les
push
das
loopne
clc
pop
inc
jmp
fldenv
daa
xchg
sub
pop
mov
and
mov
inc
or
lret
or
int3
shrl
movsl
rcrl
js
insl
mov
fstps
mov
jge
cmpsl
xchg
mov
rcr
int
in
adc
movl
pop
frstor
fdivr
dec
cmc
cmp
cmp
push
mov
sbb
pop
addr16
xchg
adc
dec
xchg
mov
fisubs
shll
cmpsl
push
fwait
push
cmp
dec
dec
ja
pushf
mov
clc
in
sbb
jns
sub
inc
xlat
ss
icebp
push
push
sub
and
inc
jae
jl
ficompl
mov
mov
jo
xchg
mov
xchg
mov
sub
push
jne
test
data16
push
lock
imul
cmp
adc
cmpsb
jle
jbe
xchg
rorl
ds
lret
jg
cwtl
mov
or
or
enter
xor
push
ret
cmpsl
pop
jns
cmpsb
cmc
pop
fidivs
push
xor
jmp
stos
out
popa
xchg
mov
stos
sub
adc
jo
push
add
mov
adc
mov
push
lods
and
in
stos
xchg
and
cli
cs
testb
lods
mov
jmp
jp
mov
in
mov
ljmp
pop
sbbl
loopne
pop
sub
dec
jge
insb
mov
push
xchg
sti
daa
repz
out
jne
or
std
lds
xchg
push
xchg
adc
les
or
cmp
popa
inc
shll
mov
push
add
pop
xor
in
jl
adc
leave
cmp
sbb
cmp
pop
lret
cmc
sbb
mov
ret
mov
inc
inc
jmp
pop
xchg
sbb
data16
outsl
dec
fadds
aas
mov
jae
and
aas
lock
xchg
cmp
test
mov
shrb
mov
mov
test
inc
pushf
sub
push
sti
es
adc
inc
mov
pop
negl
bound
push
sbb
test
mov
mov
cmp
xchg
pop
xchg
pop
jle
ret
dec
mov
dec
xchg
call
sub
inc
jno
repnz
add
in
jae
repnz
add
imul
push
loope
jb
lret
adcl
test
pop
xchg
inc
rol
and
stos
dec
out
mov
mov
imul
inc
push
insl
out
or
call
out
subb
mov
outsb
in
mov
cld
shr
insl
adc
xchg
shl
sysret
add
fdiv
pop
div
fadd
dec
fstps
test
out
stos
pop
jge
imul
jo
loop
pop
jno
xor
pop
mov
sarl
mov
enter
int
loop
sub
inc
push
lcall
cmp
arpl
loope
jbe
xlat
hlt
mov
sahf
shll
inc
add
in
xor
mov
cmpsb
pop
adcl
jb
stos
je
mov
stos
loopne
pop
jns
mov
jae
add
sbb
arpl
out
mov
mov
pop
xchg
cwtl
inc
cmpsb
scas
pop
lahf
xor
xchg
xor
pop
in
stc
lods
fsubl
popf
pushf
in
cmpsl
inc
fsubrs
adc
ret
mov
repnz
movsb
mov
add
clc
sti
rorl
imul
jne
ljmp
xchg
scas
addb
sbb
je
dec
or
inc
pop
jno
out
rolb
sbb
pop
mov
pop
pop
jo
and
lcall
pusha
rsm
jo
stc
jb
pushf
jae
add
dec
rorl
inc
imul
divl
push
adc
test
cs
sub
nop
pop
and
sbb
je
icebp
sbb
dec
adc
jb
xchg
bound
cmpsb
xchg
pop
xor
out
add
dec
ret
mov
jnp
les
test
adc
mov
negb
imul
or
inc
dec
mov
fcompl
push
sbb
inc
leave
mov
dec
mov
sbb
sbb
loope
or
jecxz
insl
cld
inc
push
int3
fldl2t
rolb
or
push
mov
mov
push
scas
ret
aam
jne
add
mov
fidivs
or
and
jge
mov
scas
cmp
xchg
xchg
xchg
add
fcomps
fwait
push
jge
inc
aas
gs
popf
lret
add
mov
out
mov
sbb
push
pusha
xchg
jae
ljmp
xchg
add
movaps
sub
fwait
xchg
out
push
or
mov
jg
xor
adc
js
ja
sub
fwait
jno
sbb
mov
xchg
fsubrl
sti
lret
dec
xor
out
or
lea
imul
jg
xchg
js
push
xor
xchg
add
addb
in
cmpsl
stos
sub
pop
ljmp
pcmpeqw
pop
aas
adc
add
clc
push
xchg
jo
mov
inc
test
dec
les
pop
mov
icebp
xrelease
jb
mov
sub
adc
loopne
mov
or
iret
das
call
xchg
dec
cs
dec
jecxz
adc
ljmp
or
pop
mov
lcall
jp
push
pop
inc
or
cmpsb
aad
adc
aaa
jbe
cli
inc
push
sti
xchg
ret
fdiv
mov
rcll
pop
jmp
rcll
inc
cmp
dec
jmp
jmp
sub
test
sub
mov
ljmp
mov
mov
enter
mov
lock
stos
inc
sub
xchg
jns
scas
movsl
inc
dec
sub
test
lds
outsl
xchg
sub
adc
jae
inc
push
loope
cld
outsl
pop
mov
sbb
daa
lock
sti
sbb
into
push
push
mov
jmp
mov
jo
sbb
cs
stos
cltd
mov
or
repnz
xlat
push
xor
bound
jae
imul
cmp
pushf
insb
mov
adc
ret
jb
rorl
jbe
dec
inc
inc
dec
mov
mov
int
xorb
xor
sub
cmp
push
jnp
xchg
std
icebp
outsl
inc
sub
js
scas
or
inc
addl
mov
mov
mov
pop
mov
jge
xor
push
ret
dec
js
dec
or
mov
jmp
sbb
es
adc
movsb
xor
push
jbe
jg
xor
mov
subb
int
lock
sbb
pop
shlb
test
jecxz
in
sub
adcb
inc
sub
push
push
adc
bound
movsl
adc
and
jnp
cmpsb
mov
ss
sbb
mov
lea
add
loope
add
paddusb
inc
shll
cmpsb
rcll
mov
shl
ds
repnz
jle
aad
sti
out
mov
ret
add
cld
popa
mov
pushf
push
test
or
loope
cmp
aam
fmull
mov
mov
fsubrs
cmp
sbb
out
dec
shll
sar
inc
cwtl
in
and
mov
dec
dec
inc
adc
or
out
cmp
cmp
aas
xor
aam
add
mov
xor
mov
jne
mov
mov
jg
fldenv
ss
dec
les
cmp
repnz
call
inc
and
add
jp
popf
pop
or
fidivrl
sub
add
addr16
inc
and
shr
lds
add
in
cmp
scas
pop
addr16
mov
xlat
pop
and
nop
sub
bound
fabs
and
clc
mov
jp
sub
mov
dec
icebp
ja
pushf
into
mov
and
inc
in
bound
in
enter
das
pop
mov
ds
popa
je
out
ss
pop
aam
cmp
cmpsl
popf
lds
or
xlat
mov
fidivrs
dec
dec
cmp
ret
cli
aaa
push
jae
jecxz
sbb
bound
test
jns
insb
fs
xchg
adc
jge
push
or
jno
into
cli
pushf
add
mov
push
fstps
aam
daa
push
mov
repz
xor
bound
xchg
xchg
gs
in
mov
inc
loope
dec
jl
jo
pop
push
fcomps
mov
add
inc
push
fbld
cmpsl
rol
out
jne
jne
and
out
add
call
mov
into
cmpb
adc
mov
lds
fnstcw
data16
mov
dec
jecxz
cmp
pop
add
xor
pop
mov
out
push
cmpsl
arpl
addl
or
push
test
out
adc
mov
repz
cli
or
in
sbbb
adc
pop
addr16
xchg
mov
pop
iret
test
test
adc
sbb
mov
mov
fs
xchg
sbb
sbb
test
out
xor
mov
inc
cld
push
cwtl
hlt
push
inc
imul
fsubs
movsb
mov
vpaddsw
sub
jbe
scas
push
lds
movsb
aaa
pop
mov
rcll
sub
mov
outsl
filds
jno
inc
mov
xchg
inc
xor
int
sti
out
dec
inc
ds
adc
and
arpl
xchg
mov
push
dec
fistpll
arpl
testb
dec
mov
jmp
cwtl
jmp
cmp
call
outsb
aad
xor
fmull
and
cmpsb
fstpl
dec
jl
loopne
rorb
and
test
push
rolb
loop
mov
push
add
cmc
mov
dec
pop
cmc
push
sbb
imul
sti
cmp
jnp
adc
jle
jae
add
adc
pop
push
jnp
adc
and
sub
mov
xchg
aas
js
gs
pusha
push
nop
push
mov
ret
lock
adc
imul
andb
push
inc
fcmovnbe
sbb
mov
mov
jp
xchg
les
xor
or
mov
jno
push
outsb
ret
int3
cs
push
mov
dec
or
jge
sub
gs
pushl
shlb
cmpsb
xor
or
cmc
jns
adc
or
scas
xor
in
fs
pop
cmp
ss
xor
add
sti
test
jmp
faddl
pop
dec
nop
scas
pop
aas
cmpsl
xor
ret
pop
lods
xor
call
fisubl
add
push
dec
xor
insl
mov
lret
mov
pop
mov
sub
popf
fisttps
xchg
in
aaa
fucomip
paddb
push
fldcw
popf
cmp
test
mov
jg
out
fmuls
inc
orb
ret
out
push
fdiv
std
ja
add
cmp
repnz
sbb
lret
out
ret
les
lds
sbb
add
add
andb
pop
mov
mov
fbstp
mov
mov
jne
clc
scas
stos
jae
ja
xchg
mov
adc
jge
cli
iret
repz
jae
lcall
test
imull
aam
data16
out
mov
pop
in
dec
cmovbe
sub
and
jbe
cmp
inc
mov
dec
fcoml
and
dec
cmp
jecxz
fwait
dec
fsts
ret
dec
or
add
inc
cltd
pop
in
imul
and
xor
xlat
mov
push
cmp
push
sub
mov
sub
pop
test
lock
xchg
pop
sar
movsl
hlt
mov
inc
in
test
sarl
and
xchg
jns
in
scas
sahf
lret
lea
mov
mov
dec
enter
pop
mov
sub
jbe
inc
mov
sbb
xchg
enter
cmp
sub
xor
sub
or
mov
pushf
inc
in
fs
sbb
mov
rorl
push
addr16
sbb
inc
hlt
hlt
stos
push
inc
sub
jo
push
inc
cmp
push
out
xorl
mov
jge
out
idiv
pop
into
mov
cmpsb
insl
stc
gs
fdecstp
push
sarl
ret
pop
lock
into
mov
push
ja
in
push
xlat
xchg
xchg
mov
inc
movsl
jae
mov
push
xchg
neg
lea
or
add
mov
jns
jnp
jp
fsubs
sbb
sbb
mov
std
fsts
out
pop
js
push
into
dec
aam
lcall
in
dec
rcll
push
je,pn
roll
mov
jmp
cmpsb
sub
icebp
sbb
mov
cmp
cmp
dec
mov
adc
pop
ja
jo
fwait
lahf
jnp
lahf
scas
sarb
icebp
xchg
int3
mov
ja
je
scas
cmpsl
cld
lret
mov
test
movsb
jne
filds
sbb
dec
push
ret
movsl
mov
xchg
ds
aam
pop
gs
add
xchg
rcr
sbb
inc
dec
push
inc
ret
sub
xlat
dec
in
daa
stc
mov
inc
rolb
cmpb
and
in
inc
testl
jne
pop
decb
aad
or
mov
pop
mov
sahf
in
bound
adc
push
dec
cmp
leave
sub
dec
mov
shll
ret
or
clc
pusha
mov
les
mov
icebp
rcl
dec
mov
lcall
xchg
addr16
loop
pusha
and
ljmp
shll
repnz
sub
mov
mov
aas
pop
sahf
mov
popf
jno
xor
sub
stos
jae
int3
or
jmp
fistps
mov
or
push
rcr
pop
loope
in
pop
call
xchg
sbb
rcl
in
pop
aaa
add
in
shrl
inc
add
add
ljmp
pop
ss
fcoml
in
adc
jp
gs
push
push
xor
call
and
or
sub
fdivl
cld
xchg
out
stos
adc
sub
mov
or
push
movsl
push
jne
adc
mul
in
addb
mov
dec
dec
inc
ljmp
jl
mov
lods
pop
xor
inc
lods
mov
int
pop
jge
mov
pop
mov
insb
dec
jno
pop
popf
and
sub
jmp
sbb
jle
and
adc
stos
mov
mov
mov
adc
inc
xchg
int
icebp
ret
call
cmp
movl
neg
xchg
movsb
sarl
cmp
filds
cltd
and
int3
sti
stc
push
ds
jp
or
cli
decb
mov
xchg
cmp
sti
adc
adc
ljmp
pop
lds
divl
mov
xlat
mov
cld
pusha
loop
cmp
mov
jne
lods
push
or
clc
xchg
lahf
int
push
inc
test
icebp
call
push
mov
sbb
mov
push
loope
out
repz
xor
nop
fwait
add
jns
ljmp
scas
jbe,pt
or
ljmp
testb
rorb
push
dec
insl
cmp
in
scas
shll
and
testb
sahf
ret
leave
xor
mov
inc
cmp
aaa
mov
or
sahf
sub
jb
shll
dec
mov
mov
inc
pop
inc
dec
ljmp
cwtl
fdivr
clc
movsl
dec
cmp
xchg
jl
cmc
cs
outsb
aaa
addb
ljmp
je
popa
mov
and
fucomip
mov
orl
jle
add
and
cli
mov
sub
gs
mov
pop
pop
cwtl
mov
arpl
add
je
mov
jg
cmpb
popa
jg
insl
add
mov
xor
dec
cmc
push
mov
jp
cmpsl
call
aaa
daa
into
fldt
rcrl
rcll
rclb
xchg
cmp
je
movsl
repz
mov
int3
fsubp
push
jbe
leave
in
jmp
insl
daa
dec
arpl
mov
clc
cli
inc
push
sub
lret
cld
pop
loope
ficompl
cli
cmp
xor
iret
rcl
rcll
sbb
imul
dec
mov
mov
test
cs
js
mov
testl
ret
dec
adc
out
and
fs
sbb
mov
and
int
or
fwait
add
pop
sahf
cmp
xchg
sti
push
cmpsl
mov
pop
jmp
ljmp
xor
jne
lret
cmc
push
adc
fstl
call
sub
add
adcl
lret
mov
mov
inc
mov
or
les
jns
aaa
imul
sarl
stc
movsb
adc
xchg
inc
pop
jae
mov
test
or
lahf
mov
pop
sbb
sub
mov
push
sbb
test
insl
sahf
mov
pop
ljmp
xchg
addr16
mov
lds
stos
sub
std
push
repz
adc
out
cmp
adc
roll
decb
mov
notb
andl
insl
jl
test
jae
or
mov
jl
mov
imul
xor
testb
push
icebp
mov
movsb
aad
mov
int
sti
adc
dec
test
insb
sub
xbegin
xor
xchg
push
testl
dec
sub
aam
stos
pxor
lods
sub
lret
das
xor
cltd
daa
sbb
imull
jns
pop
shlb
xor
xchg
xor
or
sub
jg
lret
xor
enter
xor
push
or
xor
outsl
lods
sbb
sub
fdivs
flds
aaa
push
cmp
mov
add
mov
jnp
xchg
push
push
fwait
into
repnz
pop
lds
mov
enter
addr16
add
mov
fsubr
xor
mov
clc
pop
jo
xchg
pop
jae
gs
lods
andb
idiv
mov
sub
hlt
inc
testb
adc
jno
jp
push
test
outsl
out
adc
in
push
icebp
or
or
lret
ljmp
cmp
in
adc
lea
xor
bound
rolb
adcb
or
and
push
fcoms
mov
movsb
mov
aaa
arpl
xchg
jbe
mov
xrelease
js
jnp
push
stos
cmp
xor
push
push
jae
sub
mull
lods
in
sbb
idivb
fiaddl
inc
lds
push
push
lock
push
adc
cmp
xchg
or
xchg
shr
outsl
mov
movsl
ja
lods
push
or
fwait
ret
test
sub
gs
ret
push
stos
add
enter
xor
lret
popf
mull
shr
lods
push
pusha
jg
popa
fucompp
xor
sub
xor
push
leave
mov
xor
sbb
popa
scas
jns
lock
push
repz
add
lods
cmp
jmp
shll
or
add
fbld
cs
xchg
dec
push
push
jbe
sub
lods
shll
clc
sub
jae
fdivr
test
xor
add
pop
or
scas
notb
insb
int3
and
inc
lds
cli
cmp
jle
je
push
or
sbb
js
xchg
lock
adc
pop
lret
pop
mov
js
push
or
sub
movsb
ret
mov
mov
and
and
add
scas
aam
in
push
xchg
scas
dec
add
int
iret
loopne
mov
out
inc
loope
or
subb
dec
dec
scas
pop
das
pop
lcall
and
testl
mov
adc
dec
daa
mov
sbb
push
and
mov
xchg
sbb
push
repz
fcomps
movsl
sbb
out
push
sarb
aaa
adc
mov
jno
mov
daa
call
add
aad
aas
cmpsb
pusha
sarl
adc
sbb
inc
push
leave
js
mov
fcoml
xchg
cmp
xor
mov
lret
jo
mov
ss
xlat
ja
mov
sarl
inc
fidivs
sbb
jle
xchg
nop
imull
mov
push
idivb
mov
xor
outsl
test
mov
ucomiss
jns
push
cmp
cmpb
in
dec
fdivrs
repnz
gs
repnz
int3
fs
or
in
jns
xor
jo
adc
lods
mov
hlt
imul
pop
mov
aas
repz
lahf
call
std
cmp
cmp
ror
test
add
fwait
fs
gs
imul
pop
inc
scas
mov
scas
lods
dec
adc
ret
inc
in
push
dec
fwait
lahf
call
or
stos
addl
data16
sub
movsb
jne
adc
hlt
test
dec
jnp
dec
inc
lahf
inc
jbe
inc
sbb
jp
cli
cmpsb
mov
aas
dec
mov
outsb
sub
jmp
loop
test
je
sbb
cmp
xchg
lock
mov
lahf
jg
movsl
jl
adc
inc
stos
std
roll
popa
push
jl
stc
sbb
push
cmc
into
aaa
sub
adc
cwtl
subl
popf
jb
in
dec
adc
adc
or
mov
xchg
in
jecxz
pop
mov
roll
loopne
dec
dec
fstpl
mov
cld
lcall
xlat
mov
dec
std
test
imul
rcr
js
into
adc
int
xchg
inc
js
jecxz
loope
insb
stos
or
ds
rcll
mov
cmp
jmp
sub
adc
mov
mov
lcall
cli
push
unpckhps
aas
stc
stos
mov
jbe
sbb
mov
jle
ljmp
scas
jg
movsb
fldpi
pop
push
nop
inc
testl
mov
xor
pop
push
dec
or
cli
movb
mov
mov
pop
push
pusha
adc
test
jmp
jg
adc
fidivrl
adc
ja
rcrl
jns
mov
pop
pop
fcoms
nop
mov
xchg
call
inc
add
fnstenv
shrl
loope
nop
lock
mul
inc
xor
mov
in
mov
ljmp
push
scas
and
add
push
cmp
lret
mov
inc
push
cmp
push
mov
fisubrl
icebp
daa
fsubr
mulb
jp
push
push
sub
dec
lcall
cwtl
xor
inc
pop
mov
dec
and
insb
stc
dec
insb
loope
mov
out
rcr
std
inc
cmp
mov
in
dec
pop
ds
and
sub
das
ret
jo
in
inc
test
sub
fsubl
mov
jns
aad
movsl
pop
jns
into
xlat
add
shlb
andl
jno
push
aad
jp
lcall
jge
fidivs
and
je
xor
sub
gs
inc
mov
lea
cltd
shlb
loop
dec
les
or
adc
push
push
mulb
leave
pop
popl
xchg
mov
nop
fisubs
lods
subb
or
lcall
loop
popa
lret
leave
stos
aad
cmc
cmp
leave
xchg
test
out
and
nop
cmp
pop
sbb
xor
or
cltd
push
cwtl
push
testl
sub
inc
ret
adc
js
or
movsb
aam
and
adc
addr16
aaa
fadd
xchg
mov
lret
leave
inc
dec
push
fistps
xchg
loopne
fnstsw
xchg
adc
mov
movsb
dec
call
dec
add
dec
xchg
sub
jne
scas
fldt
hlt
fsubr
scas
or
lock
aad
push
add
es
aas
sub
mov
and
adc
rcr
add
sbb
loope
pop
mov
ljmp
leave
xor
mov
cli
jb
sub
vpsubsw
jae
cmp
mov
cmpsl
movsb
repz
out
xlat
pop
cltd
ljmp
mov
bound
lcall
and
or
cs
test
and
mov
lds
xchg
adc
cmp
call
jmp
scas
mov
sbb
cwtd
mov
pop
xchg
shrb
imul
ret
in
jmp
xchg
pop
pop
mov
inc
and
dec
jge
push
push
inc
ret
jl
and
lahf
rcrl
cmp
pop
jb
mov
mov
fimuls
push
inc
push
pusha
xchg
cwtl
imul
lea
js
jl
or
movsl
xor
into
xchg
movsb
int3
xchg
add
bound
xor
and
cmp
aas
outsl
icebp
mov
jbe
jge
int
daa
push
out
aad
test
lahf
shlb
jl
in
dec
test
loopne
cmpl
xchg
lret
cmp
inc
rcll
and
cli
mov
inc
call
mov
lcall
inc
stos
jns
adc
adc
sbb
test
outsb
push
loop
mov
stc
les
in
mov
fs
shrb
fsubrs
jle
fisttpl
inc
rolb
imul
dec
sbb
cmp
test
fstpt
jno
testb
shr
push
jo
and
enter
cwtl
adc
dec
and
cltd
pop
les
jnp
or
mov
outsl
call
jp
xchg
xchg
leave
pop
or
jle
mov
sub
es
nop
pusha
cmp
pop
sahf
aam
adc
xchg
mov
add
shrb
adc
sbb
xchg
cltd
xchg
push
test
inc
shrd
bound
mov
lahf
xchg
adc
dec
xor
ss
dec
inc
arpl
adcl
testl
ss
mov
aaa
out
aad
std
std
cmpl
pop
xacquire
jno
add
imul
add
sbb
mov
dec
mov
mov
iret
dec
fcompl
clc
and
mov
ss
sbb
out
mov
mov
mov
inc
dec
fwait
arpl
lock
call
jle
push
pop
pop
ficoml
pusha
jns
pop
shlb
shlb
cmp
icebp
addb
and
in
adc
loope
push
mov
mov
sbb
scas
inc
jg
lods
out
out
iret
pop
repnz
les
inc
pusha
cli
cld
or
xlat
jae
mov
lea
dec
gs
pop
cwtl
cmp
and
jg
ja
idivb
scas
test
fcompl
bound
outsb
or
add
jecxz
incb
push
dec
mov
leave
mov
mov
sub
mov
hlt
sbb
fwait
add
sub
fstpt
jecxz
adc
cvtps2pd
mov
inc
repnz
out
pop
adc
test
pusha
fisubs
mov
cmp
and
cltd
clc
inc
jbe
push
push
insl
inc
xor
in
roll
pop
test
xchg
cmp
jne
jns
ret
fs
pop
popl
mov
xor
inc
add
rcl
mov
add
pop
loope
call
dec
adc
lcall
std
cmpsb
test
arpl
gs
sarl
test
mov
mov
xor
mov
inc
push
les
sub
loop
arpl
adc
and
or
ret
gs
add
rclb
cs
dec
into
or
jmp
daa
rcrl
les
stos
push
ja
je
clc
jmp
aaa
sbb
xchg
icebp
adc
ret
jne
jne
cmp
pop
fs
in
cmpsb
notl
fnstenv
out
stc
and
insl
or
add
addr16
mov
xor
pop
adc
shrb
iret
movsl
adcl
or
sub
in
mov
cli
movsl
rclb
pop
fs
lods
enter
or
int3
vmwrite
mov
jmp
and
bound
push
push
mov
aad
sbb
push
mov
lods
sub
je
xchg
and
pop
aas
sub
mov
mov
jae
ja
add
lods
pop
inc
pop
xor
or
jl
mov
adc
sbb
cmp
and
xor
jmp
sub
inc
cs
add
push
sar
push
adc
push
inc
mov
stos
shl
pop
ljmp
xchg
add
xor
sub
inc
cs
pop
or
in
popf
xchg
xchg
add
mov
and
lcall
in
fisttps
pusha
and
or
inc
fiaddl
popa
mov
mov
loope
add
loopne
into
sub
insl
xor
insl
bound
pop
stos
outsl
inc
mov
into
sti
sbb
sbb
movsl
ja
push
loope
out
cmp
gs
outsb
jge
dec
xor
jmp
aam
push
addl
push
outsb
xor
divl
xchg
fnsaves
cmc
fnsave
stos
inc
data16
cwtl
in
rol
adc
aam
bound
dec
pop
inc
leave
lcall
cwtl
stos
mov
mov
cld
mov
xchg
mov
cmp
and
dec
cmp
adc
pop
xchg
loopne
jns
mov
xor
test
xor
shl
outsb
icebp
mov
les
jp
adc
subl
cmp
or
aaa
call
sar
pop
mov
push
popa
xor
dec
dec
mov
adc
inc
in
test
jp
inc
ret
notb
cmp
sub
fstpl
clc
int3
in
mov
aad
adc
sbbl
orl
dec
out
adcl
out
sti
cmpsb
scas
or
pusha
lods
lods
test
jae
adc
or
pop
xchg
test
xchg
fcmovb
push
aam
call
sbb
and
jl
out
insl
cmpsl
std
xchg
cmp
les
push
addr16
xchg
inc
and
pushf
daa
mov
cmp
addr16
mov
aam
pusha
pop
frstor
mov
fstpl
outsb
arpl
or
mov
into
cmp
mov
lahf
xor
and
xor
fcompl
pop
shl
test
push
fmull
ret
jl
aaa
adc
and
cmp
std
cwtl
insl
jo
les
mov
jl
mov
lcall
mov
rclb
jb
or
into
imul
mov
lods
add
movsl
or
pop
shrl
jb
in
out
insl
xchg
or
jne
fwait
jae
in
loopne
mov
test
push
sub
inc
mov
push
push
xor
push
movsb
popf
imul
sub
aas
jl
mov
xchg
dec
mov
cltd
adc
stos
add
into
mov
pop
mov
imul
outsl
or
sbb
das
dec
mov
sbb
rcrl
icebp
mov
sub
and
call
lock
or
test
cmc
xlat
mov
flds
lret
in
adc
sub
mov
cli
mov
lret
cmc
out
jle
addw
fnstsw
or
nop
outsb
loopne
aaa
cmp
ds
arpl
or
leave
pop
out
sbb
push
movsl
jmp
loopne
jecxz
jecxz
push
cld
push
gs
sub
inc
pop
fisubrl
addr16
jns
iret
jg
mov
sbb
push
shl
adc
mov
dec
mov
das
mov
int3
imull
push
push
push
jl
mov
jg
push
mov
fsubrs
jo
xor
mov
sti
mov
pop
add
bound
fs
sbb
dec
or
push
xor
rolb
and
lods
pushf
or
adc
in
pop
in
and
mov
fisubl
mov
test
xchg
sti
movsb
aaa
cmp
mov
inc
xor
mull
xchg
cmp
sti
xchg
or
jg
mov
loop
icebp
in
jl
adc
sub
cmp
jge
icebp
fldenv
repnz
das
xor
pop
jo
cmpb
push
cmp
jbe
jp
cli
iret
xchg
notb
int3
or
out
mov
adc
pushf
mov
xor
sbb
insl
xchg
stos
cli
data16
sbb
mov
enter
and
mov
loop
push
or
adc
dec
insl
mov
cld
pop
xchg
pop
xor
mov
and
inc
dec
pop
sub
dec
push
jne
es
or
mov
dec
mov
mov
dec
xor
push
movsl
push
adc
adc
std
aad
fiaddl
mov
fidivl
jge
xchg
out
push
loop
mov
push
pop
fldt
jp
repnz
adc
xor
mov
adc
pushf
mov
push
fidivl
roll
jmp
add
xor
lret
lret
negl
fcomi
cmpsb
lahf
rcll
mov
filds
sbb
popf
setb
add
jl
sbb
les
dec
test
sub
fdivr
shlb
or
inc
adc
adc
jp
dec
ja
xchg
push
inc
cmp
ja
inc
imul
mov
fsubl
inc
or
adc
xchg
aas
jp
mov
jmp
in
cmp
xor
das
scas
lret
adc
pop
push
inc
xchg
popf
imul
js
mov
aad
in
lods
add
testl
or
adc
int3
lcall
mov
inc
sbb
pop
or
push
repz
das
scas
lcall
xchg
pop
push
xor
sbb
mov
xchg
push
outsl
clc
xchg
test
es
xorl
xor
je
or
mov
daa
push
or
loop
fnstcw
dec
icebp
push
outsb
sbb
aad
inc
scas
shl
aaa
ret
jbe
sub
rorb
mov
incb
int
in
and
cmovno
scas
inc
jge
xchg
mov
pop
mov
cmp
inc
sbb
js
cmp
notl
outsb
mov
leave
mov
dec
popf
mov
dec
xor
aaa
jl
adc
push
mov
jecxz
jnp
dec
adc
loop
xor
jno
xchg
xlat
xlat
jnp
or
lock
lret
or
imul
popa
roll
jmp
inc
xadd
fistl
push
inc
enter
mov
fnsave
mov
mov
mov
call
mov
sbb
ficoml
adc
insb
sub
out
sbb
fnsave
test
je
sbb
hlt
push
pop
jp
shlb
jae
sti
shll
mov
jge
cli
inc
cmpsl
jns
add
cmp
jne
xor
outsl
daa
cmp
push
cmp
imul
pop
dec
push
cmpl
push
gs
dec
dec
adcb
pop
push
cmp
pop
push
outsb
arpl
xor
jle
dec
sub
jo
pop
jle
jae
insb
push
and
pop
pop
arpl
sub
aaa
ja
insl
dec
daa
arpl
sub
pop
and
cmp
or
dec
pop
and
xor
aaa
pop
pop
push
push
arpl
xor
pop
xor
insl
outsb
pop
pop
pop
push
push
jo
sub
daa
push
aas
dec
push
pop
jg
jle
outsl
dec
cmp
inc
dec
xor
jge
push
adc
push
dec
push
and
inc
pop
outsl
dec
dec
pop
cmp
push
ds
sub
pop
xor
insb
jle
aas
push
pusha
imul
push
fs
jbe
dec
cs
pop
cmp
cmp
pop
and
cmp
push
pop
pop
cmp
add
add
sub
sbb
push
imul
sub
dec
dec
sub
and
push
push
cmp
arpl
and
push
push
daa
and
push
push
push
and
push
and
and
push
and
pop
and
cs
gs
jb
jae
jl
add
jge
je
add
pop
pop
jno
je
ja
jb
push
add
add
add
ds
jno
xor
aaa
es
cmp
popa
pusha
insl
jo,pt
xor
jb
pop
orl
loop
in
jmp
pop
sub
pop
ja
cmp
inc
jp
outsb
inc
jge
jo
sub
es
pop
push
push
inc
