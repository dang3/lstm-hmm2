xchg
lret
in
incl
xchg
add
mov
and
add
jb
pop
outsb
adc
popa
and
lret
shrl
cs
lret
in
mov
pop
sbb
mov
mov
enter
iret
fwait
pop
cs
lret
arpl
clc
stos
push
movsl
int
jb
mov
mov
pop
outsb
or
mov
rclb
in
out
lahf
push
mov
inc
loop
pushl
pop
and
fdivrl
je
jmp
call
adc
jne
call
je
into
xlat
jl
ficomps
je
aaa
adc
adc
loopne
sahf
fcmovnu
outsb
jne
add
ljmp
das
dec
push
pop
adc
je
jo
std
mov
ja
adc
sbb
cmp
or
xor
push
jmp
ja
je
sbb
stos
and
ja
das
mov
mov
call
mov
add
dec
push
jmp
jbe
jnp
add
hlt
pop
ljmp
fmulp
inc
or
jns
addl
mov
xchg
xor
outsb
jnp
mov
inc
jbe
out
ss
mov
in
ljmp
jle
mov
sahf
ljmp
add
fdiv
mov
in
imul
sub
jmp
in
ljmp
mov
xlat
adc
je
mov
sti
mov
adc
adc
dec
cmp
std
add
jg
ljmp
cmc
push
cli
adc
out
cmp
adc
mov
mov
mov
movsb
adc
fstpt
ss
pop
cli
int3
adc
sbb
mov
mov
push
jns
pop
pop
jmp
and
les
mov
cmp
outsl
aaa
popa
sbb
or
fistpl
out
cltd
or
aas
scas
jnp
fnstsw
mov
mov
mov
dec
testb
pop
fisttpl
call
testl
or
mov
xor
jmp
mov
xor
jge
mov
int3
rorl
es
loopne
in
dec
jg
dec
sbb
push
outsl
imul
jmpw
pop
inc
add
in
fstl
mov
jge
out
sub
mov
xor
or
xor
addr16
mov
adc
and
js
pop
adc
xlat
sub
sbb
push
sti
jbe
inc
xchg
jno
fisttpl
loope
das
sbb
movsl
in
daa
js
mov
in
mov
jl
adc
arpl
adc
or
xchg
in
adc
dec
fucomip
mov
lods
outsb
aas
or
ja
fucomp
loope
jns
popf
js
add
adc
sti
std
fdivrs
pusha
mov
filds
iret
out
mov
jbe
in
sbb
andb
push
add
iret
clc
in
adc
pop
call
xbegin
dec
add
es
mov
jp
jge
pop
adc
xchg
dec
outsb
pop
pandn
pop
fidivrl
out
push
adc
cmp
jl
icebp
xor
popf
out
jb
daa
cmp
ja
cwtl
jp
fwait
in
mov
sbb
cmp
jp
mov
adc
in
mov
stos
xchg
fsubs
push
mov
jns
cli
fwait
cmp
adc
lds
sub
arpl
xor
lock
cli
inc
js
sbb
fsts
cld
jnp
fucomip
mov
add
das
movhps
popf
and
mov
jp
and
mov
je
sti
pop
mov
arpl
aaa
sti
std
mov
push
fistpl
loope
arpl
mov
mov
int
and
out
insb
add
sbb
testl
ret
mov
out
sub
jnp
pop
aam
pop
fwait
icebp
std
mov
inc
fwait
out
push
adc
out
aad
aad
pop
pushw
daa
in
jle
cmovne
adc
out
jle
jnp
push
je
xor
push
dec
out
arpl
outsb
mov
sbb
adc
sbb
push
jnp
pop
mov
out
cmp
or
jnp
ds
fnstenv
popa
loop
cmpsl
pop
xchg
adc
pop
mov
add
push
stc
pop
roll
lret
loope
idivb
lock
lock
fwait
movsb
out
out
ja
mov
popf
arpl
adc
or
cmp
or
lock
std
jl
addb
cmp
adc
mov
jecxz
inc
imul
push
pop
jbe
mov
pop
icebp
ss
arpl
inc
fdivrs
bound
jp
jl
fucomip
jnp
push
push
decl
sbb
jl
sti
bound
jge
mov
mov
aas
pushf
sbb
mov
fistps
icebp
dec
xor
adc
lcall
pop
fbstp
or
jge
add
cld
arpl
mov
or
fwait
outsb
idivl
mov
push
icebp
dec
adc
in
or
sbb
mov
jle
out
mov
sbb
adc
jbe
iret
ss
jg
into
out
add
addr16
jmp
std
sbb
jle
adc
imull
orb
inc
test
shl
mov
or
xor
jle
dec
addr16
jle
sbb
mov
pop
repnz
cmp
push
sti
xor
jle
sbb
sub
sub
in
sbb
inc
inc
jge
fiadds
fwait
sub
dec
pop
std
sbb
cmp
jo
out
mov
sbb
dec
mov
push
sbb
aaa
idivb
nop
or
sbb
frstor
stos
into
sbb
aaa
orl
iret
lock
movsl
dec
and
js
test
repz
jg
push
jg
xor
outsl
aaa
mov
fcoms
xlat
add
dec
jge
out
aas
sbb
repz
adc
out
ds
lcall
insb
pop
sub
arpl
dec
repz
out
idivl
and
cmp
inc
mov
hlt
inc
dec
fcoms
and
ret
sbb
sbb
repnz
repz
or
stc
insb
cmp
mov
pop
jg
orb
adc
sub
out
in
push
pop
cmpsl
jo
or
enter
outsl
mov
pop
ljmp
pop
addr16
aad
fwait
stos
push
inc
mov
cmpb
pop
cltd
mov
cmc
add
aas
sub
fucomip
cmc
cmovl
xor
hlt
shr
negl
dec
arpl
jle
and
inc
adc
lock
adc
fwait
lea
repz
popf
je
xchg
cmc
or
cmc
subl
dec
sbb
decl
movsl
cmp
into
lret
je
pop
mov
mov
pop
add
cli
idivl
and
push
xchg
xor
fwait
or
and
fsubr
fcomps
jae
push
aam
arpl
cmpsl
mov
dec
jb
cmp
mov
mov
inc
cmp
sub
jnp
mov
xchg
inc
xlat
imul
jo
xchg
gs
test
cmpl
push
xor
fsubrs
sbb
jae
mov
out
jle
ss
idivb
pop
loope
add
aad
cmp
ja
jae
push
lods
pop
add
xchg
add
or
mov
subb
pushf
xchg
ret
sbb
shlb
fwait
iret
push
jns
mul
dec
pushf
testb
repnz
mov
cli
add
push
idivl
cmpl
mov
and
pop
and
dec
pop
lcall
mov
in
imull
xor
jnp
mov
inc
pop
movb
pop
sbb
popa
es
and
pop
fistpl
jae
jb
pop
jmp
mov
repnz
jge
scas
jnp
adc
adc
icebp
fstsw
das
out
out
sbb
pusha
test
sbb
and
shll
and
ret
andb
xchg
push
jge
insl
or
and
xor
adc
and
shll
mov
xchg
movb
pop
inc
mov
dec
xchg
ret
dec
pop
sbb
and
adc
test
and
or
ljmp
test
mov
stc
call
test
fwait
adcl
jle
and
pop
test
mov
cmp
mov
sub
clc
shl
fs
popa
mov
mov
imul
xchg
add
in
sbb
fdivrs
stc
xor
jb
sub
sti
cmpsl
stc
or
mov
or
jae
pop
mul
cmpsl
les
mov
mov
stc
inc
sub
test
mov
stc
lret
pop
dec
aam
fldcw
cmp
inc
jecxz
lea
negl
and
inc
sub
jne
test
dec
and
cli
or
out
lods
daa
cmp
int
sbb
inc
int3
les
shl
stc
jne
sbb
cmp
insl
lods
mov
ja
data16
test
inc
scas
fwait
aad
sbb
sbb
loope
xchg
xchg
mov
cli
mov
pop
add
jbe
iret
and
xlat
pop
lods
pusha
pop
push
xchg
xchg
imul
mov
sbb
add
cmp
outsl
mov
sub
fbld
bt
ficoms
sbb
fs
ficoms
test
sbb
mov
out
imul
jnp
out
jae
adc
test
jmp
lea
mov
pop
jl
cli
addl
out
repz
push
arpl
pop
in
mov
pop
mov
imul
cltd
jecxz
cmp
scas
je
inc
push
in
jmp
aaa
cmp
push
and
push
incl
adc
jge
xrelease
push
sti
xchg
cmp
and
xor
dec
mul
std
pop
push
adc
dec
call
imul
testl
sti
jge
sti
notl
inc
and
mov
jmp
ficoml
xchg
shlb
sti
sar
inc
and
mov
iret
imul
mov
fwait
int
lret
leave
cmp
sub
inc
cmp
bound
sbb
fucomi
mov
mov
and
cs
fs
mov
shrl
ret
lcall
sbb
dec
pop
and
push
mov
cmp
xchg
mov
int3
pop
mov
dec
xlat
ss
add
mov
fmuls
std
gs
sbb
arpl
adc
add
dec
std
or
icebp
mov
std
and
std
fsubr
xor
mov
pop
daa
jne
xor
inc
mov
mov
fldt
mov
fwait
mov
cmp
push
jnp
mov
jge
andb
lea
mov
mov
inc
sub
mov
push
push
std
ds
mov
xlat
incb
ret
xchg
pop
jae
mov
and
idiv
sahf
mov
sbb
jle
sti
add
jae
test
and
dec
jmp
mov
mov
jnp
mov
into
mov
leave
jecxz
dec
push
mov
pop
ja
cli
push
int3
pop
std
sti
adc
add
adc
decb
jno
jp
mull
and
daa
daa
in
jbe
orb
sbb
mov
nop
daa
and
mov
ja,pt
adc
mov
fnstenv
out
in
push
daa
push
je
out
decb
pushf
lods
insl
mov
and
sbb
sbb
xor
jmp
cmpl
mov
sahf
hlt
sbb
cmp
out
mov
pop
stc
out
out
pop
sub
pop
popa
mov
mov
adc
daa
je
or
or
hlt
out
fwait
clc
mov
daa
xor
adc
fstpt
inc
fldt
adc
out
repz
pop
daa
pop
adc
les
dec
imul
in
pop
cmc
sbb
clc
push
sub
pop
es
push
jns
jne
or
mov
mov
mov
xlat
testb
fstpt
int3
lds
xchg
testl
mov
mov
jp
daa
and
cltd
sub
mov
or
ja
in
xlat
daa
sbb
arpl
mov
negb
sbb
pop
push
call
fucomip
test
sub
xchg
xor
int
or
shlb
je
jns
add
xor
enter
fucomip
mov
and
out
rcl
mov
imul
imul
sbb
mov
insl
xor
aam
sub
arpl
sti
lea
push
dec
push
in
in
jbe
dec
clc
xor
aad
ficoml
or
in
mov
data16
das
sti
rolb
jge
xor
test
sub
std
push
mov
sub
mov
inc
iret
shrl
jb
sarb
dec
mov
out
jnp
jmp
mov
imul
and
cld
sub
mov
insb
call
push
fimuls
xchg
arpl
dec
fiadds
inc
repz
lds
lret
stos
je
mov
and
add
jno
sub
push
sbb
jge
testl
fcomp
divb
cmp
ud2
push
mov
test
sub
sub
or
ret
sbb
pop
fisubrs
push
ja
sub
out
lcall
lea
fadds
jo
imul
sub
mov
and
lret
jno
push
and
inc
and
adc
xor
pop
pop
pop
fiadds
mov
sbb
sbb
mov
call
or
cltd
xor
imul
jg
cmp
aas
popl
fbstp
mov
ret
out
jne
or
push
rcl
push
shr
fisttps
sub
popa
ja
xchg
sub
cmp
mov
sub
adc
pop
pop
bound
sbb
inc
outsl
mov
cld
fsubr
jle
fadds
dec
sub
aaa
fwait
std
mov
push
adc
adcb
mov
pop
insl
in
sub
pop
sahf
andb
xlat
sub
push
sub
sbb
sub
mov
incl
sti
xor
mov
mov
jmp
fnstenv
jae
fdivl
dec
loopne
lcall
nop
xchg
int
clc
jbe
xchg
jno
xchg
daa
xor
out
mov
or
es
adc
jge
mov
cmp
fmul
add
mov
popf
cmc
adc
sub
fwait
das
fidivrl
outsl
sbb
call
and
daa
std
jbe
add
push
sub
icebp
jge
jle
sub
xchg
daa
jl
iret
js
push
daa
hlt
ret
shll
mov
inc
arpl
cmp
cs
inc
push
fs
je
mov
xor
inc
mov
aaa
fs
outsb
arpl
pop
outsl
arpl
les
out
pop
cwtl
jge
aad
push
ficoms
out
jge
jmp
repz
lods
or
xchg
or
adc
lock
cs
inc
xchg
pop
cmp
and
pop
call
das
or
mov
and
mov
pop
push
push
out
ja
adc
xchg
xor
arpl
int
sub
dec
fists
frstor
adcb
sti
cs
mov
ret
fdivs
add
pop
daa
push
mov
mov
incl
push
or
and
test
fisubl
inc
repz
shlb
fwait
pop
rorb
das
call
mov
add
imul
sbb
outsl
push
cld
xchg
or
pop
cltd
ds
and
movsl
je
outsb
das
mov
idiv
push
push
sbb
or
arpl
ja
dec
xor
call
mov
pop
loop
xchg
pop
fisttpl
daa
cli
mov
push
movsb
cltd
push
movsb
jle
cmpsl
mov
and
sbb
lcall
and
mov
xor
les
push
cld
jle
fldenv
jmp
xchg
aad
or
out
jnp
pop
sub
jl
in
sarl
xor
dec
xchg
sbb
jae
dec
and
xor
xor
pop
or
das
subl
mov
aaa
jno
movl
jge
xchg
daa
adc
je
negl
xor
xchg
jnp
fwait
pop
xlat
or
pop
mov
arpl
mov
mov
inc
ffreep
adc
or
addr16
xor
mov
mov
jnp
jno
cmc
je
rcrl
cmp
fcoms
xchg
adc
jmp
sbb
clc
loop
daa
jg
je
fldenv
imul
mov
mov
mov
mov
sbb
dec
insl
cmp
sahf
or
je
ljmp
pop
push
pushf
pop
lret
xchg
pusha
xor
xchg
outsl
jmp
sbb
sti
jle
xchg
jae
or
xor
sub
aaa
add
sub
mov
cmp
mov
or
or
in
push
mov
adc
jb
and
lahf
or
xchg
int3
jbe
out
mov
lahf
xchg
xor
loopne
pop
jae
cmpsb
add
add
dec
xchg
mov
pushl
pop
iret
lcall
cmp
popa
ret
fidivrl
jnp
jns
inc
xor
jbe
in
mov
push
cld
or
add
out
or
xor
mov
or
or
call
test
dec
mov
or
cmpsl
xchg
dec
scas
fisttpl
pop
jnp
mov
or
mov
test
jecxz
js
out
xchg
xchg
push
pop
fucomp
sti
jno
and
xchg
stos
icebp
cmp
pop
jl
or
or
adc
les
insl
data16
fld
xor
iret
mov
dec
xor
mov
push
inc
arpl
pushf
or
mov
mov
clc
outsb
adc
mov
je
push
adc
jge
pop
divl
test
cwtl
scas
clc
insl
call
xor
dec
nop
cwtl
ret
sbb
nop
mov
div
cld
cld
je
stos
out
enter
loopne
cwtl
daa
adc
mov
jl
inc
icebp
ret
idivb
sub
jle
out
cwtl
ss
or
and
fincstp
or
bound
xor
jge
pop
sub
rolb
ds
pop
xor
or
out
or
mov
das
testb
and
mov
xor
movsl
cltd
adc
cltd
fwait
jle
lea
or
lods
jge
test
xor
xor
xlat
jbe
push
int
cmp
ja
jb
adc
rorl
sub
cltd
stc
hlt
lock
pop
sti
jns
ret
jne
sub
jae
test
idivl
int3
jae
pop
imul
lcall
arpl
popf
fimuls
sbb
pop
add
cltd
mov
lcall
lcall
jl
lcall
xor
arpl
sahf
mov
movsb
push
push
fwait
inc
fsubrs
fucomi
test
mov
push
mov
dec
fsts
mov
push
pop
xor
sbb
outsl
mov
addr16
sti
jge
scas
daa
push
aaa
das
lock
loope
test
fistpl
inc
cli
sbb
cmp
jae
ret
insb
xlat
icebp
popf
cmpsl
pop
lods
xlat
lcall
mov
imul
jle
xor
push
orb
popa
negl
xlat
xor
int3
adc
mov
dec
cmc
or
xlat
push
out
enter
lret
mov
mov
js
sub
sti
jbe
aaa
js
icebp
ss
mulb
sbb
js
dec
fwait
das
fwait
arpl
cmc
cmp
jle
jae
mov
jbe
addr16
mov
or
insb
pop
aad
pushf
push
inc
loop
cmp
pop
out
adc
aaa
lock
pushf
jne
adc
push
aaa
lods
dec
mov
in
xlat
xor
sub
rcr
ja
jbe
adc
pushf
inc
dec
dec
aas
arpl
lods
fisubrl
push
fstl
mov
add
imul
xchg
decl
insb
test
sub
arpl
imul
fistl
cltd
hlt
cmp
dec
je
mov
ljmp
cmp
popf
cmp
cmp
jae
jbe
fwait
xor
je
push
and
pop
arpl
sti
jbe
adc
notb
mov
mov
xchg
and
fidivrl
scas
les
lcall
dec
adc
dec
mov
mov
mov
inc
bswap
or
jl
add
or
xlat
popf
or
sbb
js
push
std
inc
cmp
jl
xor
cmp
dec
add
jae
sbb
sahf
inc
cmp
dec
popa
jmp
loope
adc
fcomps
cmp
ds
pop
xchg
push
or
arpl
or
mov
adc
sahf
jbe
adc
ret
adc
pop
adc
sbb
push
daa
es
cmp
adc
push
jecxz
mov
jge
call
cmp
pop
fcomps
fnstenv
or
jbe
cmp
das
cmp
sub
int
pushl
cmp
movsb
sbb
fistpl
int
sahf
jp
add
das
sbb
std
ss
cmp
xlat
xor
sub
jo
mov
js
fisubs
les
push
mov
cmp
movsb
out
adc
xor
cmp
jnp
negl
ja
les
lahf
mov
sahf
fcmovu
xchg
xor
mov
in
or
lahf
push
adc
shrb
xlat
mov
bound
in
adc
and
jbe
pop
xchg
adc
cmp
cmp
cmp
cmp
sbb
lds
xor
outsb
sarb
mov
cmp
pushf
cli
adc
sbb
push
cmp
popf
jp
and
mov
cwtl
outsb
jne
mov
mov
adc
ljmp
adc
imul
sub
jmp
idivl
cwtl
dec
cmc
fstl
int
rcll
cmp
xor
dec
lods
sub
lcall
adc
or
scas
jb,pn
or
adc
adc
mov
call
mov
sub
xlat
lea
mov
pop
out
mov
adc
jno
aam
jge
test
les
push
fisubrl
adc
mov
xlat
orl
stos
jns
mov
sbb
clc
sbb
mov
js
mov
sar
cmp
adc
jbe
jo
jbe
adc
xchg
stc
xchg
jle
loopne
pop
stos
ds
cmp
mov
sub
push
mov
sahf
mov
cmp
cmp
lcall
call
xchg
mov
imul
insl
enter
cld
mov
push
out
or
xorb
aas
ss
sbb
jp
arpl
in
jnp
mov
imull
cld
cmp
mov
paddusw
in
sub
jg
mov
xchg
mov
pop
pop
or
push
pushf
mov
adc
lock
lea
call
mov
jnp
lods
add
xlat
adc
frstor
outsb
clc
jo
jle
mov
cmp
mov
insl
pop
outsb
jge
add
jge
loope
fcmovnu
push
sub
je
xchg
adc
lcall
adc
sti
into
mov
mov
dec
mov
push
test
aas
shlb
arpl
push
mov
loop
jae
ljmp
jmp
aas
mov
arpl
iret
mov
ret
dec
out
pop
lods
nop
ds
push
fisubrs
cmp
mov
aas
gs
mov
iret
ficompl
mov
fisubs
int
mov
xor
lock
negb
inc
mov
arpl
movsb
daa
mov
mov
loope
clc
pop
int3
push
sbb
in
sbb
out
mov
aas
loop
out
movsb
xor
arpl
fwait
jne
fisttps
shll
ds
adc
mov
out
mov
xor
cmp
xchg
adc
xlat
scas
inc
mov
jno
or
arpl
sbb
cmc
mov
and
rcr
aad
sbb
sti
mov
mov
test
out
sbb
pop
inc
ljmp
inc
mov
jmp
mov
xchg
mov
fdivl
adc
in
mov
jp
dec
xor
les
repz
stc
jg
sbb
clc
pusha
add
outsl
jne
iret
sbb
divl
iret
inc
movsl
and
std
xchg
sbb
das
ret
pop
incl
insb
clc
sbb
cmp
dec
sbb
test
decl
jmp
enter
add
dec
xor
cmpsb
push
xor
mov
jae
cmpsb
xor
jle
lcall
jl
inc
push
test
mov
fwait
inc
and
movsl
ret
mov
xchg
fcomps
movsl
outsl
movsl
aad
stc
outsb
inc
loop
mov
and
inc
mov
pop
inc
lret
data16
decb
cmpsb
ficoms
or
sti
cmp
cmpsb
cld
sbb
into
jne
bound
repz
cmp
mov
daa
pop
sahf
out
mov
inc
pop
cmp
inc
int3
inc
in
fwait
add
roll
fstp
mov
lcall
lcall
insb
mov
inc
cltd
sbb
add
inc
mov
adc
fnsave
sbb
shr
inc
mov
xlat
mov
cmp
mov
push
pushf
cmc
jle
mov
fnsave
cmpsl
outsb
dec
movzbl
add
cmpsl
add
mov
mov
inc
pop
roll
inc
adc
je,pt
in
sahf
hlt
inc
sbb
cmpsl
push
inc
push
mov
sbb
or
inc
imul
lcall
icebp
sbb
insl
inc
test
jg
lea
ret
jae
fwait
mov
jl
mulb
mov
mov
or
imul
mov
test
insl
loop
scas
mov
add
dec
into
mov
fcompp
faddl
sbb
or
fwait
or
fwait
or
mov
fisttpl
inc
test
ds
add
test
sbb
aaa
ljmp
mov
push
push
scas
outsb
test
clc
mov
pushf
cmp
inc
sbb
jmp
adc
mov
mov
xchg
jle
ss
sbb
or
test
test
testl
inc
sub
or
sbb
mov
inc
inc
lods
outsl
jae
stos
ljmp
push
mov
adc
dec
add
outsl
clc
jle
call
push
gs
hlt
jb
cli
std
mov
fsubr
inc
push
lret
mov
adc
jbe
pop
test
sbb
adc
outsl
mov
test
push
jp
outsb
rolb
mov
mov
sbb
sub
addr16
mov
outsb
jle
imul
jge
fdivp
call
xor
insl
clc
ficoms
dec
push
fwait
sahf
xchg
movsb
mov
js
and
cmp
adc
pop
mov
push
push
subb
sbb
push
fisubrs
aas
jae
ljmp
stos
mov
push
mov
add
adc
stos
pop
repnz
xchg
push
arpl
fadd
cli
mov
push
stos
dec
adc
lea
jecxz
jmp
jbe
mov
or
dec
mov
loop
aas
inc
adc
fwait
inc
repz
cwtl
adc
stos
inc
int3
mov
incl
aas
add
inc
dec
mov
jae
les
rorb
pop
fldcw
fwait
aaa
jmp
insb
in
xor
mov
adc
lock
or
js
jne
lods
lcall
mov
loope
xchg
stos
pop
sbb
pop
pusha
jge
stos
addr16
dec
mov
or
sti
mov
jmp
xchg
jle
loopne
lret
arpl
jns
lods
jg
mov
and
mov
cmp
and
lods
ss
shrl
inc
mov
sub
sahf
scas
lods
shl
decl
dec
loopne
or
and
arpl
add
loope
and
sub
fs
cmp
adc
or
mov
ret
out
cwtl
fldenv
cmp
jecxz
imul
jae
push
cmp
and
push
or
sahf
jo
mov
dec
pop
jl
orl
out
mov
pop
pop
nop
call
movsb
and
loopnew
mov
insb
ja
movb
dec
and
cltd
in
arpl
cmpsb
push
stos
cltd
dec
cmp
inc
mov
xlat
pandn
pop
xlat
push
xchg
aad
and
ds
mulb
sbb
adc
jl,pt
xor
and
test
mov
mov
lods
into
sbb
push
jae
mov
insb
dec
outsl
or
dec
and
jg
ds
cmpsl
lods
xchg
and
xchg
in
arpl
incl
pop
xchg
scas
push
push
scas
xchg
addl
fs
idivl
lock
xor
xor
pop
push
dec
push
adc
testl
fsubp
mov
jbe
pushl
ljmp
repz
xor
mov
jb
mov
cltd
inc
pop
nop
ss
jae
inc
and
push
mov
dec
mov
or
ds
sbb
out
add
insb
js
dec
ljmp
dec
pop
dec
in
fincstp
loopne
fisubrl
fdivp
cs
pop
call
adc
insb
idiv
mov
sbb
fwait
mov
mov
fnsave
mov
push
inc
xchg
int3
cli
xor
jecxz
xor
add
jge
popa
lea
hlt
in
fwait
icebp
cmp
sbb
iret
ds
mull
mov
sbb
outsl
push
push
lcall
dec
stos
push
ja
test
cmp
ds
jnp
pusha
pop
leave
jno
shlb
or
jl
jle
and
xor
lods
icebp
xor
xor
cwtl
push
clc
jge
daa
xchg
dec
adc
mov
cmc
fstpt
mov
test
dec
aaa
out
jp
mov
adc
ljmp
pop
and
out
mov
push
arpl
xchg
dec
in
mov
lods
sbb
pushl
arpl
sbb
xor
movsb
clc
mov
mov
or
stos
js
push
rcrl
fwait
xchg
pop
punpckhbw
fsubrp
dec
lret
inc
push
cmpsl
mov
gs
jae
jle
ja
sbb
and
setl
and
fdivrl
and
and
sbb
lret
imul
es
mov
and
or
sub
fcmovu
jge
push
lahf
and
sti
faddl
pop
mov
and
sbb
das
mov
stos
dec
and
dec
lea
es
sbb
or
dec
inc
push
push
out
mov
dec
scas
sub
xor
sub
outsl
mull
xor
jl
dec
in
shl
mov
mov
test
ja
cmp
cwtl
dec
push
inc
mov
add
lods
adc
inc
addr16
insb
dec
lcall
cli
adc
pop
cmp
popf
mov
mov
push
dec
les
es
je
pop
cmp
xlat
insb
mov
or
dec
loopne
dec
jno
es
fists
imul
jbe
dec
or
sbb
loope
stos
testl
adc
inc
sbb
daa
mov
mov
jae
sarl
and
mov
stos
dec
xlat
mov
push
jge
mov
mov
cmpsb
mov
std
xor
dec
jmp
daa
aaa
xchg
fnsave
lock
dec
jb
push
in
push
jnp
out
aad
mov
adc
ljmp
and
and
sub
or
mov
test
cmp
pushl
cwtl
or
inc
pop
ret
sti
mov
dec
mov
xlat
mov
mov
inc
imul
rolb
mov
daa
push
dec
hlt
aad
cmp
mov
cwtl
mov
aam
push
insb
or
dec
push
push
ljmp
jae
jp
sub
arpl
xlat
imul
cmp
mov
cmp
lock
imul
sbb
jmp
mov
and
sub
cmp
adc
push
sub
jne
mov
inc
sbb
cmpsl
and
xor
outsl
fwait
lods
pop
lret
push
shlb
sub
ret
inc
fwait
leave
sub
fdiv
cmp
adc
push
xchg
mov
mov
push
orb
adc
xlat
cmp
cmpsl
bound
xchg
sub
mov
jns
add
into
sub
dec
mov
mov
out
hlt
xchg
into
sahf
cld
fmull
and
je
add
or
lahf
pusha
ror
std
aas
push
movsl
adc
sub
cmp
sub
xor
popa
inc
arpl
repnz
jae
sub
xlat
inc
jmp
xor
or
push
or
sub
loop
sahf
or
mov
lock
mov
push
sub
xor
push
sbb
pushl
sbb
in
sub
mov
imul
shlb
ja
out
imul
jl
mov
mov
add
push
popf
mov
mov
pop
sub
scas
loopne
sub
push
sub
sub
inc
adc
pusha
callw
sti
cmp
fnsave
push
mov
mov
into
xlat
das
fwait
fs
jo
jbe
push
jo
add
push
jp
push
xor
outsl
mull
xlat
sub
clc
mov
mov
sub
popa
pop
aas
push
inc
dec
mov
push
ljmp
hlt
ja
out
jnp
and
pushl
in
push
sub
lods
bound
mov
push
fisubs
push
daa
mov
mov
mov
gs
jae
jp
pop
push
lods
lods
mov
add
outsl
dec
mov
shlb
mov
pop
stos
pop
adc
or
out
icebp
rclb
sub
jo
cmp
adc
mov
or
js
jle
inc
enter
loope
lods
shlb
fbstp
dec
mov
sbb
cli
or
arpl
adc
jle
sub
mov
sbb
mov
mov
sti
sbb
inc
call
push
pop
jo
mov
lock
test
mov
jge
mov
movsb
mov
push
cli
jbe
push
dec
loope
popa
sub
imul
or
xor
mov
jge
sbb
adc
sub
jge
mov
lcall
inc
scas
arpl
sbb
mov
sub
push
push
mov
jae
mov
dec
jg
insl
insb
sub
pop
mov
cli
fcoml
or
fnstsw
shrb
cli
cs
sbb
jno,pt
cmpsl
mov
push
dec
fisubrs
sub
push
xor
or
lock
inc
inc
leave
fdivs
inc
popa
arpl
mov
push
mov
fwait
sbb
cmp
fwait
xor
jp
sub
add
mov
daa
mov
xor
lds
mov
std
mov
aaa
mov
mov
popf
sbb
sbb
or
arpl
dec
cs
push
idiv
jle
or
jne
mov
push
xchg
xorl
jae
popf
push
call
stos
popf
std
js
pop
cs
mov
das
das
mov
fldt
cmp
out
jge
fldl
sbb
lahf
and
in
sub
mov
cmpsb
call
lret
das
mov
mov
sarl
movsl
das
xor
push
cmp
mov
mov
inc
add
pop
das
push
mov
push
push
push
push
iret
jb
push
add
iret
insb
mov
loope
adc
je
setg
jge
and
in
push
dec
mov
mov
mov
xchg
mov
cmp
mov
js
inc
call
arpl
out
inc
mov
mov
cld
mov
and
pop
adcb
jbe
cli
ss
xchg
mov
xor
rcrl
mov
divl
pop
pop
mov
lret
out
add
jle
mov
pop
loopne
or
add
xor
push
mov
mov
mov
arpl
dec
xlat
mov
jae
mull
sarl
or
sbb
ljmp
push
push
imull
out
xor
or
nop
arpl
cli
popf
dec
enter
mov
daa
jne
cmp
inc
js
sbb
mov
pandn
shll
fsubs
mov
lods
or
gs
mov
mov
inc
lcall
pop
mov
jae
adc
and
mov
sti
mov
mov
or
push
mov
dec
or
sub
push
sub
sub
xlat
xor
inc
push
cmp
lret
aam
pop
xlat
popw
into
lds
out
pop
jg
outsl
jnp
out
pop
insb
orl
push
or
sbb
test
jae
js
enter
pop
mov
xlat
pop
xor
pushl
dec
or
shlb
mov
pop
add
sub
pop
outsl
xor
adc
mov
sub
fildl
or
mov
push
add
push
sbb
and
inc
mov
rcrb
xlat
xor
push
insb
jge
sub
fcomps
xor
jle
mov
pop
xor
xor
lcall
js
pop
ljmp
mov
out
mov
mov
mov
shlb
mov
je,pn
pop
mov
jnp
xchg
inc
xchg
xor
enter
jl
cmc
add
add
mov
jl,pt
xor
inc
mov
jae
sahf
add
pop
xor
mov
adc
sbb
xor
cmp
pop
sbb
or
push
out
sti
adc
andb
mov
mov
xor
in
shrb
mov
xor
push
xor
sbb
pop
mov
pop
inc
mov
ret
inc
ds
fbld
jnp
scas
icebp
mov
fwait
arpl
lret
cli
push
bound
shl
or
jl
adc
xor
test
test
outsb
mov
rorb
sbb
or
ljmp
pop
es
shrl
rcrb
cmp
sbb
pop
mov
lea
sbbl
pop
in
jle
repnz
jle
shrl
in
jbe
pop
jns
add
aad
sbb
clc
dec
xor
shll
sar
fisttps
data16
pop
rorb
adc
ss
push
pop
inc
inc
xor
imul
sbb
adc
mov
sub
push
pop
jo
adc
jne
sti
es
mov
pop
xchg
push
jbe
daa
jo
adc
lods
push
insb
fsubr
cwtl
ss
sub
xchg
mov
js
cmp
sbb
outsl
jl
mov
fwait
roll
lods
jp
gs
xchg
fsubs
lahf
divps
stos
mov
pop
adc
sbb
xchg
sti
lock
xor
out
or
fnstenv
loop
ret
int
fisttpll
jle
mov
sti
mov
dec
outsl
aas
jne
inc
fidivs
pop
sbb
pop
idiv
jne
and
and
mov
test
pop
cmp
movsl
mov
mov
add
decl
lock
imul
ds
imul
sub
sub
inc
mov
pop
jne
jp
inc
lods
in
adc
mov
add
xchg
aaa
xchg
jnp
movsb
inc
lock
hlt
ret
stos
push
inc
pusha
ret
push
xlat
inc
loop
popf
gs
cmp
fnstenv
aad
data16
xor
mov
ret
aaa
adc
aaa
sbb
mov
mov
sub
ret
xchg
adc
pusha
subl
test
in
inc
mov
push
mov
fisubl
jne
dec
pushl
jnp
and
in
jb
int3
fwait
or
or
push
sti
cmp
add
mov
or
pusha
aas
adc
fiadds
push
xchg
and
sub
inc
icebp
ss
inc
les
out
cmc
dec
push
cmp
cmp
lods
in
push
pop
clc
xor
push
cmp
fwait
push
jp
mov
insl
das
fwait
pop
xchg
enter
jnp
push
outsb
popa
or
sbb
cmp
sbb
lds
xor
andl
pop
fisubs
movsl
popa
aas
add
loope
push
popa
inc
or
xchg
fucomip
cmp
cmp
xchg
in
mov
jo
cmp
cmp
popa
mov
inc
xlat
lds
push
inc
add
dec
add
mov
pushl
xchg
add
sub
adc
jg
push
dec
add
repnz
inc
adc
and
mov
jg
out
fiadds
push
sbb
dec
add
dec
mov
inc
adc
jl
add
outsb
push
idivb
ret
inc
jns
mov
add
dec
add
dec
dec
fs
in
mov
bswap
dec
pop
add
inc
inc
inc
xor
std
mov
fisubs
push
jo
or
dec
sbb
mov
fnstsw
mov
xor
inc
fmuls
jmp
pop
xor
imull
mov
inc
adc
xor
cmp
inc
push
mov
jnp
aaa
das
arpl
add
inc
dec
add
data16
jbe
out
das
ret
ja
dec
add
dec
fs
adc
sub
mov
popa
insl
push
inc
mov
repz
xchg
cmp
sub
repnz
lret
inc
mov
sub
mov
cmp
fadds
out
sti
outsl
incl
mov
dec
lret
push
add
inc
adc
in
add
insl
jbe
mov
or
add
dec
es
call
shrl
cmp
fucomp
sbb
fidivl
repnz
sti
jb
dec
dec
cmp
and
lock
fwait
insb
ja
jge
dec
jae
pop
repz
cmp
sti
pop
icebp
mov
dec
cmp
or
shrb
outsb
outsl
mov
cmp
adc
push
jns
mov
push
mov
jle
mov
mov
in
or
push
out
or
insl
dec
outsb
jae
fcmovnu
fistpll
shrb
dec
ret
xlat
clc
inc
mov
std
fcompl
insb
das
out
je
call
lock
inc
jmp
cmp
dec
pop
jno
add
mov
jl
inc
sub
inc
ja
testb
xor
rcrb
push
push
mov
or
xor
insb
and
insb
fucomi
imul
sbb
cmpsl
inc
pop
dec
push
xor
fucomi
stc
cmp
je
inc
call
bound
fisubrs
ja
jmp
adc
pop
inc
xor
into
or
lock
lcall
outsb
sub
movsl
xor
mov
icebp
push
cwtl
lods
cmpsl
dec
add
mov
jns
dec
aaa
cmpsb
out
outsb
push
add
inc
inc
loope
div
add
lock
adc
in
push
mov
subl
in
dec
jmp
or
mov
and
dec
outsl
adc
jl
icebp
jmp
add
mov
xor
insl
test
xlat
pop
dec
fcoml
rorl
iret
mov
aas
cwtl
push
scas
push
mov
imul
out
in
mov
and
inc
dec
add
fwait
mov
ret
fsts
push
fwait
ret
push
inc
shll
jns
insl
outsb
inc
dec
mov
in
jmp
lds
aad
sarl
mov
dec
cwtl
rorl
sbb
mov
push
mov
push
loopne
jae
inc
inc
loope
fists
push
mov
mov
mov
idiv
ja
inc
popf
push
pop
add
ret
mov
sti
hlt
mov
das
xor
aam
add
xor
dec
cmp
inc
popa
stos
ret
add
dec
push
mov
inc
cmp
sub
inc
jae
mov
dec
out
sti
out
mov
add
icebp
fistl
pusha
sti
outsl
and
roll
dec
insl
xor
rorl
mov
pop
mov
mov
jg
pop
jbe
add
mov
jbe
mov
test
lcall
rolb
leave
mov
cld
cmpsb
outsl
mov
xorb
dec
sub
jl
fwait
stc
ficompl
adc
push
xor
or
add
popa
out
push
movsl
cmp
dec
pop
mov
js
repz
pop
je
dec
push
or
add
mov
lock
cmp
test
jbe
push
loope
xor
cmp
inc
adc
cmp
or
popa
inc
mov
jl
repz
ret
cmp
fnsave
inc
popa
mov
add
dec
aas
bnd
outsb
arpl
rcrb
shrb
xor
xchg
shlb
jmp
add
add
mov
xchg
gs
cmc
leave
push
sti
dec
mov
xor
push
pop
or
mov
xlat
pop
lea
push
dec
movsl
lea
jmp
mov
insb
pop
inc
pop
fdivrl
push
or
mov
fiaddl
jg
jae
mov
dec
dec
jecxz
mov
push
outsl
mov
repnz
cs
popf
enter
ja
mov
dec
insl
push
add
mov
jge
rorb
iret
pop
add
pop
inc
add
incl
pushf
sub
call
inc
jl
or
je
mov
ljmp
pop
inc
fs
push
or
adc
adc
mov
jno
insb
sbb
push
mov
push
sbb
inc
mov
xor
cmc
ljmp
roll
addr16
xchg
ret
adc
adc
stc
adc
popa
pop
and
aad
outsl
jmp
jle
lods
jge
nop
cs
push
inc
inc
lods
addr16
out
and
adc
mov
xchg
cld
clc
inc
jg
fwait
inc
dec
jne
mov
adc
shlb
hlt
call
ljmp
je
call
adc
adc
es
ljmp
or
jae
shl
je
das
pusha
inc
subps
dec
and
jg
push
call
inc
push
jns
xchg
or
and
and
mov
pop
addr16
jnp
nop
xchg
xchg
jle
cmp
push
inc
sbb
push
inc
je
cmp
or
aam
mov
fldt
lahf
leave
test
dec
mov
push
xchg
in
jg
adc
call
call
call
or
cld
and
xchg
mov
mov
sub
xor
xchg
das
dec
cmc
push
je
mov
xor
jg
ret
ror
in
and
notl
in
mov
inc
push
inc
lods
inc
mov
jns
in
jnp
andl
call
rclb
call
and
pop
jl
pop
xchg
push
out
sbb
push
cmp
cmp
arpl
xchg
mov
pushf
adc
pushl
outsb
js
mov
mov
call
cmp
jne
inc
or
imul
mov
mov
and
fnsave
leave
vprotw
dec
jne
popf
inc
jb
jb
push
xor
std
incl
xchg
xor
and
mov
xor
cmp
lods
and
mov
or
inc
sub
clc
in
jg
adc
bound
adc
pushf
and
and
ljmp
or
repnz
icebp
push
les
adc
out
push
call
jl
sub
mov
jmp
into
dec
in
or
test
inc
in
xor
addb
clc
outsl
addl
je
pop
es
fistps
ret
mov
mov
sti
sahf
inc
or
jg
dec
std
adc
cmp
and
rorl
jge
in
mov
aad
xchg
je
push
nop
andb
call
and
mov
nop
or
je
neg
mov
cmp
stc
pop
lahf
xchg
push
mov
pop
inc
xchg
and
mov
data16
sbb
or
xchg
test
or
mov
sbb
jmp
addr16
call
pop
std
lods
inc
je
rcrb
gs
call
cld
jb
add
jl
or
ds
pop
sub
cwtl
std
je
fbld
mov
dec
or
fisttps
push
and
movsb
inc
xchg
and
fimull
or
sbb
test
leave
dec
nop
and
cmpsl
jmp
jb
xchg
nop
imul
scas
adcb
lcall
pushl
push
and
inc
and
push
shr
je
cmp
jg
cli
mov
mov
mov
inc
and
xor
outsl
hlt
in
or
out
or
pop
or
pop
cli
mov
rcll
mov
or
hlt
adc
decl
sahf
shll
inc
inc
movsb
push
or
pop
mov
seto
add
into
adcl
push
pop
iret
cld
or
std
shrb
add
or
xchg
sahf
pop
pop
push
ljmp
push
arpl
inc
jge
outsl
inc
js
loope
icebp
and
cli
adc
and
jmp
lea
bound
fistpl
mov
mov
pop
xchg
xchg
rorl
or
adc
call
cmp
das
hlt
das
lcall
cs
adc
enter
fistpll
dec
outsl
lods
xor
and
scas
jp
sub
jg
int3
and
inc
in
push
cmp
and
or
adc
or
xor
ljmp
std
ss
inc
and
xor
and
inc
sti
push
aaa
jle
pop
icebp
adc
or
mov
test
jo
cmp
xchg
jno
std
not
cli
push
push
cmp
scas
enter
imul
cmp
shlb
ficoml
and
mov
push
cmpsb
clc
movsl
adc
in
mov
dec
pop
clc
pop
fwait
jmp
mov
mov
pop
and
mov
sbb
sti
pop
sbb
jmp
or
sub
jmp
cmp
jbe
adc
outsl
push
jne
decb
mov
mov
or
dec
mov
insl
or
mov
cmp
gs
jmp
stos
jecxz
mov
dec
pmulhuw
je
loop
sub
sub
or
lods
in
aaa
loop
test
pop
adc
ja
or
jp
inc
mov
inc
push
mov
and
sbb
outsl
decl
xor
dec
std
scas
adc
loop
pop
sub
data16
lea
adc
push
sbb
clc
xchg
fimull
xchg
xor
mov
xor
adc
pop
call
andb
bound
push
std
xchg
push
push
mov
mov
test
mov
in
fwait
push
inc
jge
movsb
cld
pop
push
push
mov
inc
cmp
xchg
shl
sub
or
lret
dec
je
stos
mov
fsubs
dec
and
sub
mov
pop
mov
setb
fmuls
or
dec
jo
stos
mov
je
sbb
test
and
push
lcall
outsl
insl
in
shl
cmc
les
jge
or
inc
adc
and
add
sub
inc
ss
inc
je
pop
mov
jp
jge
js
adc
mov
lret
or
cmp
adc
push
faddl
into
leave
jmp
test
cmp
or
cli
pop
cli
incl
sub
mov
mov
or
mov
test
push
and
push
cld
push
pop
lods
inc
out
xorb
jecxz
movsb
jb
and
inc
adc
test
stos
adc
xor
pmulhw
clc
inc
shr
dec
rol
pop
int3
pusha
rclb
dec
pushl
xchg
cmp
pusha
ljmp
add
xchg
xchg
xor
mov
pushf
adc
adc
or
pop
das
mov
je
inc
in
mov
xchg
jl
or
mov
or
xor
stos
ljmp
xor
sub
je
dec
popa
sub
adc
jecxz
inc
xor
pop
xchg
mov
push
in
cltd
cli
lcall
jl
imul
clc
call
mov
xchg
cld
adc
aas
fisubl
in
xlat
xchg
pop
stos
clc
test
mov
mov
fstpt
pop
xchg
inc
or
inc
rorb
rclb
push
adc
popw
cli
decl
mov
addr16
lods
test
mov
pop
sub
jmp
ds
jge
inc
call
add
clc
decl
adc
roll
dec
and
and
pop
inc
mov
or
mov
imul
push
idivb
imulb
adc
repz
je
or
icebp
or
jo
ljmp
je
push
sub
sbb
pop
pushl
sbb
adc
int3
jge
push
in
decl
fstl
mov
ds
lock
xchg
push
pop
xor
lcall
xor
inc
or
stc
adc
add
and
inc
clc
in
outsl
xchg
in
aas
push
rclb
pop
call
ljmp
shrb
adc
aas
adc
lds
adc
xchg
hlt
subb
mov
inc
mov
and
in
test
ret
call
call
into
mov
mov
cmpsl
mov
cli
jecxz
jmp
test
lahf
jns
sti
xchg
push
lock
jle
add
test
mov
dec
mov
xor
push
jmp
dec
nop
push
xor
or
inc
xchg
mov
adc
mov
or
sbb
pop
push
sub
jge
std
test
movsl
add
inc
decb
sbb
pushl
sub
cmpsl
or
push
in
and
aaa
dec
or
push
bound
out
adc
push
sti
dec
push
sub
cld
insl
inc
adc
incl
and
jbe
nop
rcll
ret
xchg
ljmp
es
and
and
lds
incb
inc
mov
aam
mov
mov
aas
fmuls
push
lock
loopne
xlat
and
dec
cli
xor
xchg
pop
sub
fistps
call
sub
or
movsb
pop
das
mov
and
test
adc
adc
xchg
outsl
outsl
dec
std
dec
xchg
cmp
inc
pop
mov
mov
sbb
sbb
loop
loope
sub
je
xlat
cmp
mov
xchg
pop
inc
outsb
aad
popf
pop
pop
lds
and
imul
cmp
and
daa
xchg
stc
lea
fnstenvs
mov
shlb
adc
pop
mov
jb
mov
mov
adc
xchg
push
lods
fstpt
sbb
jo
jne
clc
mov
push
adc
push
dec
dec
push
enter
inc
and
data16
nop
or
xchg
and
hlt
inc
pushl
pop
je
sbb
repz
ds
das
or
and
xchg
fistpll
pop
or
or
mov
dec
std
lcall
and
push
insb
test
fnsaves
je
movsl
popl
adc
adc
add
sbb
shlb
movsl
in
fisttpll
comiss
outsb
xor
push
xor
add
test
cld
adc
stos
push
sbb
mov
xor
cmp
and
add
je
ret
popf
xor
adc
and
loop
cs
out
rcl
inc
je
rolb
sbb
and
push
movsl
lods
push
mov
movsl
push
cld
dec
fs
sbb
xchg
sub
cmc
pop
cli
in
inc
and
test
adc
cs
in
mov
jnp
call
pop
dec
sub
xchg
loope
jo
xor
mov
cmpsl
jne
incb
xlat
addb
or
cmpsb
movsl
xlat
pop
mov
loopne
and
clc
push
mov
mov
stos
cmp
jl
add
out
cmp
roll
mov
ret
push
sarb
mov
jno
mov
xchg
lds
loopne
dec
enter
jge
dec
incl
cs
enter
add
pop
mov
mov
imul
iret
or
pop
movsl
arpl
mov
pop
pop
je
std
xor
mov
pop
fists
pop
adc
push
mov
mov
fistpll
sbb
xor
push
sbb
mov
test
lods
aad
mov
sbb
inc
setns
dec
mov
jno
idiv
shll
inc
es
cld
sti
lods
int
mov
iret
jge
mov
and
adc
iret
outsl
mov
inc
ret
xchg
jle
outsl
fwait
add
mov
inc
sbbb
ss
cmp
call
xchg
in
sub
xchg
pop
pushf
lcall
inc
cmp
cmp
mov
ds
pop
sub
and
mov
or
fsubp
lods
outsl
or
rol
push
lods
imul
rorl
test
xchg
orb
fcoml
ret
call
xchg
push
adc
sub
xchg
pushf
jg
mov
sbb
repz
sub
leave
mov
and
jle
adc
int
dec
mov
ret
das
sar
add
repz
les
pop
jo
ret
outsl
sbb
out
inc
ja
or
lea
adc
jb
adc
pcmpeqb
jb
outsb
mov
adc
pop
push
sub
pop
pop
movntq
out
or
jmp
jo
or
push
dec
pushl
dec
mov
fs
adc
pusha
pop
mov
or
jl
shrb
jmp
call
repnz
fimull
cli
inc
and
jge
aam
call
andl
ljmp
ljmp
cmp
jp
adc
and
inc
movsl
fsubr
push
sub
test
dec
test
test
or
and
adc
add
imul
loopne
repz
in
in
mov
or
adc
or
outsl
leave
jge
adc
ja
xchg
pop
out
pop
xor
dec
fstpt
fidivs
je
movb
adc
outsb
fildll
sub
push
pushf
jne
je
fildl
pop
call
jp
int3
jmp
pop
sbb
add
mov
mov
mov
cld
adc
fscale
sub
movsb
cs
xor
pop
test
cli
cltd
inc
je
mov
std
xor
pop
mov
ljmp
sub
pop
jmp
jo
enter
inc
test
pop
add
mov
sbb
xchg
or
loope
test
fsubrs
and
jo
jb
lret
mov
idiv
dec
xor
push
scas
sbb
fdivrs
sub
movsl
aaa
and
pushfw
popf
or
dec
pusha
mov
enter
je
in
cltd
ljmp
aad
dec
sbb
or
imul
cli
mov
insl
pop
push
adc
mov
aaa
decb
fisttpl
inc
or
mov
xchg
jbe
cmpsb
xor
pop
jb
fmull
decl
scas
pop
ds
and
leave
jns
bnd
negl
mov
add
cmpsl
lock
mov
jg
mov
jmp
adc
xchg
sahf
outsl
outsl
or
movsl
or
xor
jle
rclb
adc
rcrb
adc
sbb
xchg
mov
inc
ds
sbb
sbb
loopne
mov
pop
push
popa
add
mov
and
sahf
scas
ljmp
jno
sbb
popf
jnp
lock
mov
jge
pushl
mov
test
hlt
ret
sub
std
test
and
jmp
sbb
sti
outsl
call
shr
mov
adc
and
jmp
movsl
mov
jns
ret
inc
lea
aas
xor
pop
jmp
aas
ficoml
shll
and
and
test
leave
call
mov
cmp
repnz
adc
stos
xchg
int3
dec
mov
mov
stos
daa
jne
pop
imul
in
aas
inc
jp
adc
xchg
fdivrs
xchg
jae
insb
sbb
push
inc
mov
std
lods
mov
mov
fcomi
aaa
mov
es
cli
add
mov
mov
inc
test
jo
dec
insb
gs
add
nop
xor
popa
cwtl
and
inc
andb
sar
decl
sub
and
jns
jno
jmp
push
jbe
call
cs
in
mov
mov
dec
scas
and
cmp
std
loop
inc
repnz
lock
mov
jne
call
lcall
jb
scas
or
fs
lods
mov
cmp
lods
mov
push
fcompl
add
rcrb
pop
xor
pop
mov
push
mov
mov
or
inc
and
mov
jle
push
sti
jl
push
fcmovb
arpl
xchg
into
inc
jo
rcrl
mov
je
jns
push
fildll
push
stc
test
call
and
ja
sub
cwtl
mov
lcall
inc
dec
data16
jmp
call
nop
enter
xchg
jo
add
mov
add
add
ljmp
es
cmp
xchg
lods
inc
dec
dec
clc
lods
inc
pop
pop
adc
mov
add
aaa
adc
arpl
mov
lock
in
inc
loope
or
int3
push
push
mov
add
test
xchg
iret
loop
jns
mov
inc
push
lea
xlat
sbb
pop
sti
push
clc
push
dec
insb
sti
mov
or
fdivrs
aaa
push
inc
hlt
sbb
push
add
test
je
mov
mov
std
or
jle
jmp
lret
cmp
rorl
cli
in
movsb
inc
pop
lock
lea
and
cmpsb
testb
mov
push
sub
xor
push
mov
pop
jne
mov
aaa
je
adc
jmp
push
adc
mov
movb
add
jns
ret
mov
loope
pop
mov
sahf
in
rorb
imul
loope
pushl
cld
imul
xor
jb
pop
or
add
filds
jle
dec
cmpsl
xchg
adc
test
pop
orb
mov
sub
jmp
push
or
or
inc
out
inc
xor
and
clc
ret
mov
inc
mov
jne
sbb
mov
roll
addr16
and
loope
lea
stos
orl
or
push
sbb
ljmp
mov
or
lret
outsl
mov
shl
mov
inc
ds
mov
sbb
or
aad
mulb
mov
insb
xchg
sub
fwait
es
jmp
decl
je
rolb
add
insb
jns
leave
add
mov
inc
sub
and
jae
mov
or
jmp
mov
pop
dec
lods
push
push
and
xchg
pop
add
lock
dec
test
call
movsl
sub
sbb
mov
adc
pop
add
aad
test
add
movsb
and
mov
hlt
rolb
pop
mov
lahf
fs
iret
bound
pop
and
push
fcmovnb
add
mov
sub
test
das
notl
push
jnp
shrl
sbb
test
xchg
push
lea
outsl
mov
popf
xchg
lret
stc
mov
or
cmp
sahf
dec
out
fcomps
xchg
mov
shlb
push
push
sbb
mov
adc
gs
outsb
xchg
inc
je,pn
inc
sub
and
mov
loop
add
pop
mov
popl
pop
loope
jecxz
fistpl
les
and
mov
adc
jb
faddp
ja
ljmp
push
mov
inc
push
push
sub
in
or
fcmovbe
fmuls
cmp
aad
mov
mov
jo
pop
fdivrp
xchg
pop
sub
or
jmp
test
aaa
lods
xlat
push
sub
rcl
mov
fs
push
arpl
loop
push
cmp
jbe
pushl
outsb
dec
jg
jmp
sub
lret
jg
test
cmp
mov
jne
test
and
call
jno
lods
pop
push
hlt
sub
jmp
je
push
data16
jecxz
sbb
loop
sbb
cmpsb
cmp
lret
inc
subl
push
hlt
adc
xor
pop
mov
xor
gs
std
insl
stos
test
lcall
in
test
das
jno
bound
roll
mov
icebp
leave
and
icebp
or
mov
mov
xchg
js
pushf
lock
enter
decb
movsl
int
add
xor
call
fucom
inc
pop
test
fildll
jp
rcl
test
pushl
loope
mov
loopne
pop
int
ret
push
les
adc
push
in
movsl
sbb
inc
sub
jb
jb
addr16
cli
inc
mov
add
mov
sub
mov
sbb
add
jmp
scas
cmp
and
not
adc
loope
int3
jo
and
lea
add
adc
pop
add
fcompl
stos
sar
jmp
andl
adc
lea
inc
addb
pop
incb
mov
je
lcall
cmc
call
jmp
push
inc
or
inc
adc
cli
clc
mov
std
popa
shlb
inc
fbstp
mov
inc
xchg
cmp
add
out
jmp
and
inc
outsb
inc
sbb
adc
aam
sar
adc
les
pushf
and
test
or
dec
idiv
outsl
je
dec
js
rcl
movsb
mov
movsl
mov
dec
rcr
mov
and
dec
mov
ljmp
xor
mov
out
ret
and
fmul
sub
mov
in
push
mov
mov
mov
dec
lock
inc
stos
int
sti
aaa
jle
sbb
push
mov
mov
pop
jge
push
xchg
je
sbb
arpl
test
push
pop
mov
push
loope
xlat
jae
xor
xchg
outsl
insl
cld
pop
mov
pushf
jno
cmc
mov
push
fsubrs
jmp
ret
in
adc
movsb
pushf
in
shlb
mov
jb
add
or
mov
sbb
inc
loope
xchg
dec
cld
xlat
out
push
sbb
push
push
dec
aaa
imul
je
jbe
mov
inc
popf
mov
mov
idivl
push
call
push
sbb
jg
call
push
dec
mov
xor
jmp
addr16
nop
and
jge
outsb
push
pop
int3
xor
imul
add
andps
and
add
push
repz
or
sbb
stos
jno
les
loopne
std
jg
stos
adc
push
pop
adc
cmpsl
push
push
mov
call
decl
xchg
adc
cld
adc
decl
clc
orb
xorb
jbe
pop
cli
ret
xor
push
xchg
subb
lahf
ja
lahf
not
divl
inc
xchg
add
stos
pop
loop
fistl
mov
ss
fistpl
in
add
mov
sub
std
outsl
cmc
and
push
loopne
les
and
pop
fdivr
pop
sti
scas
scas
je
jg
loop
pop
push
and
dec
mov
jp
out
js
adc
sub
sarb
adc
pop
mov
or
cmc
xchg
mov
mov
loope
push
mov
rcpps
or
mov
jg
out
popa
jmp
rclb
fadd
aad
test
and
lret
call
push
jg
std
pop
jecxz
inc
shl
scas
mov
inc
dec
stos
inc
test
fists
notb
fidivl
cmp
or
lods
push
jmp
and
lock
das
jo
inc
jmp
or
push
cmpsl
mov
clc
es
je
bts
dec
push
push
pop
inc
lock
and
lahf
adc
sub
or
sub
adc
loopne
add
mov
dec
mov
dec
adc
mov
pop
push
cltd
sub
dec
mov
lcall
lahf
mov
sub
cmp
clc
mov
js
mov
xor
fs
imul
inc
nop
fsubl
adc
pop
mov
dec
fistps
dec
fidivs
push
aas
icebp
jmp
dec
ret
pop
push
inc
mov
pop
pop
inc
cmp
cs
stos
outsl
mov
jg
adc
dec
mov
in
push
add
mov
and
stos
mov
call
scas
and
add
jns
in
sbb
popf
mov
orl
aam
into
mov
or
pop
add
test
push
push
jmp
mov
cli
pushf
inc
push
sub
ja
lods
xor
outsl
mov
mov
sar
leave
iret
or
ljmp
ret
int
jbe
adc
in
jmp
push
sub
or
in
cmp
mov
sbb
loope
inc
jge
and
inc
adc
xchg
clc
adc
adc
push
stos
in
fistpl
xor
mov
or
push
xchg
inc
call
xor
adc
push
push
mov
pop
or
xorb
loopne
pop
and
or
adc
enter
rcrl
inc
stos
cmp
test
xchg
xlat
mov
outsl
rorl
pop
push
xchg
ds
sbbb
or
push
call
clc
das
addr16
les
stos
jl
mov
sub
adc
xchg
mov
pop
inc
dec
movsl
add
mov
pop
std
jbe
popa
xor
xorb
pusha
inc
jno
push
jbe
push
ljmp
jmp
push
dec
insb
adc
fwait
sub
or
cmp
loop
ja
sub
cltd
leave
out
mov
push
cmp
fisubl
pushf
dec
in
sub
in
xor
mov
pop
jb
fwait
call
ret
je
stos
jo
and
mov
shrb
xor
mov
fcoml
mov
xchg
sub
mov
aam
dec
sbb
or
lock
inc
aas
and
mov
xor
hlt
and
mov
ljmp
or
loope
jmp
mov
pushf
aas
scas
scas
dec
mov
xchg
jg
xchg
pop
aam
cmpsb
add
xchg
push
and
pop
mov
sub
lds
xlat
push
pop
mov
mov
jge
add
clc
or
sub
or
or
mov
dec
lahf
je
sbb
outsl
insb
inc
mov
push
pop
mov
inc
mov
or
cli
jg
mov
jno
and
add
jl
adc
add
mov
and
or
pushf
lcall
fisubrl
mov
dec
ret
mov
push
sub
sub
fwait
mov
mov
and
sbb
test
dec
test
jmp
mov
pop
pop
push
enter
xor
add
inc
decl
call
sbb
fmul
add
int3
test
fldt
insb
adc
js
das
and
fwait
cli
push
lods
or
in
call
and
mov
push
mov
lds
xchg
and
ret
inc
adc
and
in
adc
testb
bnd
or
dec
flds
repz
mov
aas
in
mov
lea
lock
jbe
mov
lret
xor
pop
xchg
clc
pop
shl
outsl
sub
test
mov
outsl
icebp
xchg
popf
jo
clc
ds
pusha
jmp
std
xor
das
or
mov
dec
out
lret
adc
push
adc
mov
roll
pop
std
push
xchg
outsb
fisubrl
test
sbb
cld
ret
sub
iret
pop
or
pop
jnp
adc
dec
invd
mov
mov
inc
and
dec
push
icebp
cmp
cs
sub
dec
push
pusha
and
dec
outsl
decl
xchg
aaa
mov
inc
push
sbb
sbb
sarb
mov
sti
adc
push
ret
stos
in
adc
push
icebp
and
cmp
dec
mov
mov
or
inc
lods
sub
jnp
out
sub
jg
inc
add
les
rol
in
addr16
aaa
mov
dec
mov
iret
in
sbb
loopne
rolb
aaa
mov
ja
aaa
cs
push
outsl
pop
loopne
ja
into
add
xchg
ret
sbb
mov
ss
call
add
dec
xchg
mov
sahf
sbb
out
loop
jnp
pop
ljmp
dec
push
xor
and
es
add
and
fildl
out
or
imulb
adc
jg
jl
dec
and
pop
mov
jmp
pop
popa
popa
mov
mov
and
test
repnz
inc
lea
loop
add
push
jno
mov
mov
pusha
lea
xchg
and
pop
rorb
movsl
add
ds
mov
mov
inc
jl
bound
fsts
xchg
xchg
je
xchg
or
sub
adc
aaa
pusha
das
mov
or
sbb
sti
stos
rep
addr16
dec
xchg
fildl
mov
mov
pop
jb
ret
std
mov
inc
jo
mov
sub
data16
dec
outsl
dec
daa
inc
loopne
pop
dec
push
rol
pushf
testb
cltd
xchg
test
insb
cli
sahf
cltd
push
pop
push
jge
mov
fisubl
or
jle
insl
je
adc
mov
fidivl
mov
sbb
cmpsl
js
mov
push
dec
inc
jle
fbld
mov
shlb
lods
sub
clc
push
jne
test
aaa
or
mov
push
call
mov
aam
and
and
push
les
push
dec
pop
popa
in
inc
and
rclb
out
stos
std
sbb
shll
lds
and
ljmp
mov
pushf
ret
mov
dec
push
xor
mov
insl
insl
xor
call
cmp
xor
ficoml
and
lock
sbb
xor
sub
sub
bound
push
test
call
clc
lret
pop
or
fildl
mov
adc
push
sbb
push
push
fsubp
or
pop
cmp
jbe
jmp
loop
setns
test
gs
fdivrs
mov
inc
push
inc
mov
push
je
adc
test
outsb
std
pop
mov
testl
jnp
push
call
jmp
sub
add
rolb
or
push
fbld
cmpl
xchg
adc
jle
mov
in
inc
movsl
mov
mov
daa
xor
rcll
cmc
sbb
pop
inc
mov
mov
xchg
jge
mov
bound
test
lods
and
mov
add
pop
cmp
std
les
pop
pop
push
mov
mov
outsb
lea
pop
dec
sarl
or
cmp
adc
mov
cmp
lods
lods
and
mov
jg
add
mov
sub
mov
in
pop
cmp
imul
clc
mov
clc
fistl
aam
mov
adc
nop
call
test
push
fcoms
ror
call
call
das
shr
jne
jl
nop
adc
adc
mov
mov
adc
sub
cld
call
lock
sbb
int
or
adc
pop
mov
pop
cmp
outsl
enter
mov
cmp
ljmp
lcall
and
call
stc
fistpl
inc
push
or
mov
push
sti
adc
je
outsb
jae
jae
inc
faddp
mov
shrb
xorl
or
ret
push
xchg
or
and
jge
pop
cmp
shrb
call
cmp
outsb
sub
outsl
sub
ficomps
push
rcrb
inc
sub
stos
add
jle
add
outsl
adc
pop
mov
xlat
adc
cmp
ficomps
das
push
xchg
jae
sbb
inc
add
adc
mov
vorps
and
sub
stc
pop
inc
inc
add
sub
xchg
push
xchg
adc
call
aaa
inc
das
or
enter
daa
dec
inc
or
xor
xchg
pop
je
call
test
dec
test
mov
aas
mov
pop
fimuls
int
inc
dec
xor
sub
decl
or
cltd
popa
pop
imul
test
or
gs
loopne
pop
push
cli
add
les
mov
add
shlb
dec
movsb
call
and
xor
je
and
jge
outsl
shll
inc
sbb
xor
inc
insl
sub
adc
scas
push
in
mov
inc
test
and
adc
push
adc
jno
out
cmp
ror
adc
in
pop
mov
push
stos
adc
push
clc
cmpsb
fistpl
aaa
mov
out
pop
cwtl
addr16
shlb
ljmp
xor
jg
mov
jecxz
lahf
xchg
test
sub
push
stos
add
std
jg
jecxz
or
add
out
sub
pop
call
loope
mov
jae
push
pop
cs
fsts
test
daa
in
subl
outsl
lock
mov
dec
iret
pop
in
push
push
mov
aaa
mov
sub
cs
and
mov
cmp
jne
bound
lcall
pushf
jae
cwtl
fwait
adc
testb
ss
cmpsb
in
dec
dec
cmp
mov
cli
dec
sub
push
ss
pop
addr16
or
call
jg
inc
cs
mov
push
fs
add
lret
pop
push
out
rcrb
push
mov
mov
inc
xchg
cs
pop
mov
jl
add
adc
outsl
sahf
in
push
inc
or
add
mov
pop
test
pop
and
je
ss
movsl
dec
test
ja
jg
call
sti
jg
push
dec
inc
mov
inc
mov
roll
mov
loopne
inc
pop
icebp
and
je
adc
cld
sub
inc
out
sti
pop
pop
in
pusha
lahf
movsb
cmp
loop
fnstsw
add
and
call
add
adc
adc
push
movsl
test
jg
call
jae
sarl
add
ss
pop
cli
mov
outsb
scas
in
pop
dec
pop
xchg
int3
lods
pcmpeqw
push
cli
sub
cmp
xchg
xchg
das
cmc
or
sub
or
scas
fwait
loop
adc
adc
decb
pusha
jns
sbb
or
movsb
xchg
aad
lea
into
dec
cmp
ffreep
or
pop
push
mov
test
mov
sub
push
addr16
arpl
test
adc
pop
inc
pop
push
pop
sub
push
adc
adc
fs
push
lock
dec
sti
inc
loop
jl
incl
mov
stc
pusha
sbb
pop
mov
adc
push
sub
jne
les
cltd
lret
mov
push
outsl
ljmp
sub
or
fildl
add
decl
mov
push
mov
pop
call
clc
fildl
jg
mov
sub
loop
cs
and
ds
fildll
cld
sub
push
inc
fs
add
jae
push
call
outsl
fwait
jmp
call
lahf
or
sar
call
push
inc
outsl
lods
dec
outsl
repnz
jne
jg
test
and
push
loope
sub
cltd
fisubrl
ret
idivb
bound
or
mov
imul
and
lret
inc
jecxz
sti
stos
xchg
clc
lods
cli
adc
xlat
xor
xchg
outsl
fbld
outsb
pop
dec
mov
mov
dec
add
sbb
add
sub
and
lahf
or
lcall
push
cmpsl
push
push
dec
push
lahf
sub
ljmp
mov
jg
in
clc
inc
clc
cmp
lretw
jno
inc
jns
push
add
mov
add
mov
cmp
add
push
leave
and
add
pop
test
or
hlt
dec
add
mov
push
cwtl
mov
aaa
mov
cmc
pop
add
push
test
and
cmp
scas
fcmove
pop
and
jg
sbb
clc
xchg
icebp
xchg
cld
sub
aaa
push
call
movsl
das
hlt
lcall
and
or
xchg
inc
adc
push
adc
cs
and
or
aaa
call
mov
das
dec
and
cmpb
or
sub
rclb
hlt
aam
decb
or
mov
xchg
add
push
sbb
outsl
mov
sub
adc
and
cltd
and
push
cld
xchg
sbb
jno
push
push
cwtl
mov
inc
or
out
mov
add
sub
test
push
inc
xor
fs
insb
repz
les
lahf
mov
in
add
aas
rclb
fists
out
xor
xor
and
mov
icebp
mov
scas
fnsave
in
or
decl
mov
mov
push
mov
dec
push
test
cmp
dec
call
or
imul
pusha
repz
inc
divb
mov
cmc
or
imul
mov
repnz
push
push
arpl
mov
xchg
cmp
inc
call
sub
xor
vshufps
test
lahf
outsb
pop
jge
lock
jnp
ljmp
or
dec
and
add
push
push
push
loopne
or
mov
sub
js
pushf
incl
notb
mov
or
pushf
mov
inc
pusha
mov
or
mov
pop
enter
ja
js
mov
mov
add
and
push
mov
jo
cld
sarb
imul
push
js
bound
orb
in
adc
lods
dec
lcall
pusha
xorl
push
and
jg
ljmp
cli
dec
insb
or
cwtl
mov
lds
enter
pusha
dec
xchg
pop
inc
mov
sub
sub
in
decl
sbb
pop
lcall
pop
and
jecxz
jp
mov
cmpb
lahf
or
cld
sbb
push
pop
jl,pn
adcl
lods
arpl
je
arpl
cmp
mov
in
xor
out
popa
mov
bound
test
insb
adc
icebp
jg
movsb
imul
mov
popa
dec
inc
mov
adc
das
pop
push
adc
xor
testb
orb
add
mov
push
jmp
je
pop
or
call
outsb
das
mov
jge
rorl
jb
xor
mov
andl
je
dec
lcall
loopne
imulb
mov
and
inc
pop
aam
xchg
adc
ret
xchg
clc
call
movsl
jmp
repz
mov
sbb
cmp
pop
decl
pop
mov
pop
sub
fsubs
jmp
aad
jb
out
xor
mov
test
push
enter
decb
outsl
adc
jnp
adc
scas
adc
in
mov
add
push
add
mov
jecxz
and
jmp
cltd
pop
popa
adc
decl
out
inc
ret
push
jb
adc
inc
adc
cwtl
call
jno
fdivs
lods
insl
mov
dec
mov
mov
mov
mov
xor
jo
inc
pop
pushl
pop
hlt
insb
xchg
lahf
dec
lret
stos
pop
inc
adcb
push
add
pop
mov
inc
adc
mov
jp
fucomip
jne
pop
inc
cmp
adc
into
clts
loope
push
fisttps
mov
push
test
or
shrb
rcl
fisubrs
je
jp
pop
adc
insl
mov
shll
add
mov
rorl
js
testl
inc
adc
lcall
ret
add
xor
add
in
adc
push
adc
rorl
pop
call
rorb
call
test
or
pop
and
inc
clc
lock
lock
sbb
out
jge
jmp
lea
mov
ljmp
fbld
cmp
sbb
cwtl
mov
imul
xchg
stc
lea
cmp
and
push
test
repnz
mov
sub
rcr
outsb
lea
je
into
daa
call
pushf
pop
add
cmp
call
xchg
and
pop
jmp
pop
sub
bound
add
or
dec
mov
cmp
jg
or
or
xchg
jle
mov
or
ljmp
test
rcll
or
adc
sbb
dec
subl
lods
xor
adc
lcall
std
mov
or
inc
cmp
cli
ljmp
mov
or
jnp
or
rolb
mov
addl
jo,pn
mov
in
ljmp
pop
nop
pop
int3
adc
sbb
xor
jo
hlt
lcall
or
call
enter
xor
dec
out
dec
xor
mov
hlt
dec
aaa
sub
jbe
add
jb
push
sbb
in
shll
lods
scas
daa
call
or
and
stos
je
fucomi
das
xchg
sub
loop
add
sbb
xchg
xor
dec
xchg
pop
cli
and
out
mov
push
add
jl
loop
loop
aaa
adc
xlat
inc
test
call
mov
ret
shll
or
jl
sub
cs
int3
push
lcall
xchg
addr16
push
add
xor
add
jno
pop
in
sbb
adc
xor
cld
push
lods
test
or
js
test
sbb
push
testl
xchg
adc
cwtl
hlt
cmp
xorl
leave
pop
cs
adc
jle
and
or
fsubrp
pop
inc
leave
insb
into
leave
xchg
lret
jp
sub
clc
in
icebp
ret
pop
mov
in
mov
mov
movsl
subb
sahf
and
pop
mov
call
test
mov
aad
in
xchg
addl
notl
aam
push
mov
pop
in
jle
outsl
mov
mov
add
je
ss
mov
cli
sbb
jne
shlb
and
jne
and
mov
add
jbe
pop
mov
enter
clc
imul
xchg
add
adc
or
xchg
or
mov
inc
lds
or
ljmp
adc
pusha
push
mov
ret
add
push
jp
mov
lods
fisubrs
mov
mov
add
outsl
adc
xchg
push
inc
lods
push
cwtl
enter
or
mov
pop
inc
in
push
das
icebp
pop
test
loopne
sub
bswap
mov
mov
js
nop
popl
add
sub
test
push
stos
std
sbb
das
jne
pop
and
sbb
pop
pop
and
inc
test
popf
jp
push
mov
lock
std
lea
cmc
pop
inc
and
lea
ljmp
xor
ret
pop
adc
ret
add
adc
push
fstpt
inc
push
test
push
lods
push
outsl
decl
mov
les
ds
pop
mov
stc
nop
lods
xchg
adc
loope
std
mov
or
je
lea
mov
lods
jl
daa
in
sub
inc
dec
lods
jg
jecxz
push
cmp
and
push
cmp
jne
push
ret
jne
fcompl
mov
inc
sahf
cmp
cmove
add
imul
outsl
fs
xchg
je
jge
aas
mov
cmp
stos
pusha
in
aaa
jno
jg
fistl
ds
dec
lock
lret
addl
decl
hlt
in
sbb
rcrl
sub
sub
cld
adc
inc
fnstenv
es
sti
sarb
shr
icebp
mov
outsl
or
shrl
call
mov
pop
clc
mov
insl
jne
xchg
sub
mov
inc
adc
jle
mov
pop
sti
jo
mov
adc
dec
or
adc
dec
add
cmpsl
pop
incl
arpl
mov
nop
adc
mov
xor
fisubs
jns
popf
sub
call
cmpsl
pop
cld
or
mov
pop
scas
les
je
ja
cli
test
lcall
je
xchg
jp
test
adc
add
jmp
pop
fs
aaa
fsubrl
cmp
mov
lods
mov
out
or
mov
push
daa
outsl
jecxz
dec
mov
shlb
dec
pop
xor
sti
push
push
outsl
sub
icebp
adc
dec
inc
call
adc
or
add
cmp
bound
push
cld
mov
push
ljmp
leave
je
cs
aas
inc
test
jae
fcmovne
aaa
cli
jg
shrl
and
sub
mov
adc
pop
mov
out
out
in
and
aad
mov
insl
aad
sti
jmp
and
imul
mov
mov
mov
cli
cld
inc
sub
and
push
shlb
outsb
xlat
lods
jmp
xor
pushf
pop
or
in
and
cs
outsl
test
test
subl
test
adc
dec
or
loopne
pusha
cli
pop
sub
xchg
mov
dec
jno
adc
fimuls
jne
inc
out
fs
mov
inc
mov
loopne
mov
jne
fiaddl
mov
add
out
ljmp
inc
loope
outsl
iret
rcrl
and
cld
call
xchg
push
movsl
fwait
push
xchg
inc
inc
insl
or
mov
pop
rcl
pushf
ret
or
arpl
aaa
mov
mov
dec
pop
mov
stc
jns
jbe
ret
adc
scas
mov
fisttps
pusha
cmp
and
je
adc
je
mov
or
outsb
incl
add
lret
cli
inc
pop
clc
adc
jne
add
subl
xor
orl
stc
clc
rorl
fld1
outsl
jle
lock
adc
or
scas
es
and
sub
je
xchg
cmpl
ds
push
outsb
add
in
adc
mov
jns
jle
mov
and
adc
sub
clc
and
cmc
pop
add
mov
inc
in
loopne
xchg
sub
dec
mov
aaa
push
push
ja
push
add
and
adc
mov
or
adc
and
rcrb
ljmp
cltd
xor
jp
call
adc
cmp
push
les
add
sbb
pop
dec
inc
es
xchg
outsb
rcll
or
gs
sub
lcall
mov
loopne
fwait
out
or
imul
mov
fsts
or
adc
aam
adc
cmp
and
adc
clc
add
rolb
push
shll
or
adc
mov
insl
push
or
and
inc
scas
insl
mov
mov
es
xchg
cli
fcmovnb
push
icebp
popf
jb
adc
sbb
fwait
adc
jnp
mov
in
pop
adc
les
clc
pop
js
bound
dec
jb
pop
xor
xchg
add
push
decl
insb
icebp
rorl
or
bound
stos
or
dec
popa
mov
inc
push
mov
jae
fidivrl
sbb
jp
mov
pop
shlb
pop
jp
iret
fsts
add
leave
lds
lea
imul
je
pop
call
adc
adc
aad
mov
lods
ljmp
into
xchg
inc
add
xor
les
xor
xor
mov
rolb
mov
lcall
dec
add
inc
xor
mov
add
inc
jmp
add
or
les
stos
call
push
sub
cmp
js
cld
push
outsl
jg
call
push
inc
pop
jns
sbb
mov
das
xor
xorb
out
add
and
push
xchg
mov
or
or
pop
or
icebp
aaa
clc
insl
xchg
pop
xchg
or
stos
jmp
mov
loopne
mov
mov
cwtl
insl
lahf
stos
cmp
and
mov
or
jg
icebp
repnz
and
cmp
cwtl
pop
shll
addb
fistpll
loopne
jle
lcall
mov
push
dec
andb
and
cli
jg
mov
andb
mov
dec
and
adc
pop
pop
push
mov
rclb
movsb
fistps
popa
sti
in
lcall
xor
sub
mov
loope
push
mov
xor
or
and
loopne
fstpt
or
jl
pop
mov
insb
adc
push
sbb
pop
stc
push
aad
push
rclb
add
pop
ss
jne
lea
xor
fcoml
sahf
outsl
aaa
popa
negl
inc
ljmp
dec
mov
cmp
sbb
pop
jge
xchg
aam
mov
xor
aaa
jbe
fcmovb
insb
inc
flds
call
outsb
mov
jnp
imul
ljmp
jl
bound
arpl
int
imul
cmc
out
inc
arpl
jbe
andb
xchg
xchg
add
pop
fnsave
jno
jle
dec
cli
das
insb
icebp
sbb
push
mov
add
loopne
call
or
dec
add
jecxz
cmp
std
pusha
push
mov
or
insl
sub
push
cld
fldenv
pop
arpl
into
inc
inc
negb
or
jle
push
or
popf
xor
rorb
mov
dec
inc
dec
adc
fcomps
adc
add
das
mov
lods
and
cs
add
cmp
fs
or
or
push
scas
pop
inc
loop
pushl
pop
mov
jae
jne
mov
jae
stos
inc
mov
out
sbb
pop
call
mov
mov
js
adc
inc
jge
das
mov
xchg
or
push
fstpt
or
inc
xchg
rcrl
lods
inc
adc
es
add
mov
push
add
mov
fwait
je
push
sub
adc
xorb
in
out
in
cmp
rcrl
or
divl
std
add
aam
pop
popf
xchg
nop
dec
pop
sbb
adc
divb
jge
mov
sub
mov
adc
popf
jne
mov
inc
pop
and
mov
and
les
mov
cli
mov
cmpsl
xor
jmp
repz
call
mov
xchg
mov
push
mov
jge
sbb
fdivrp
aaa
js
out
sub
arpl
mov
mov
jmp
mov
inc
filds
ja
mov
or
and
push
je
sub
mov
xchg
inc
nop
inc
ficoml
adc
ficoms
and
cmp
js
bound
popa
aam
std
adc
jg
jb
mov
inc
ret
mov
adc
rcrl
fbld
add
mov
pop
xchg
mov
sbb
pop
sbb
aaa
fildll
add
xor
inc
inc
data16
push
mov
push
ss
notb
xchg
in
lcall
xchg
rcl
js
test
clc
pop
push
jns
insl
add
push
sbb
xchg
pop
pop
and
call
dec
and
jle
sbb
add
jne
mov
fdivrl
jno
and
jne
inc
dec
sbb
call
push
or
and
ja
adc
add
xchg
aaa
mov
jbe
inc
sub
push
imul
inc
outsl
cmp
pop
mov
and
push
and
push
mov
insl
arpl
gs
aaa
cmpsb
leave
lahf
mov
sub
mov
leave
xor
push
xlat
xor
push
mov
cmp
pop
pop
sbb
testb
shlb
pushl
ficompl
addr16
call
outsl
rclb
push
scas
fdivl
pop
ljmp
inc
add
push
cmp
inc
cld
ljmp
push
adc
lcall
les
fldt
hlt
mov
mov
push
and
ss
cwtl
pop
push
fs
outsb
cmp
mov
xchg
das
mov
fildl
loop
pop
mov
loopne
call
sbb
sub
cmp
mov
clc
sbb
cmp
pop
and
das
push
shll
jne
je
push
movsb
call
mov
movsl
js
sbb
loop
jl
lcall
aaa
fldenv
xor
pop
cmp
jo
call
mov
inc
cwtl
shlb
outsl
adc
lret
sbb
adc
jbe
call
cmp
adc
pop
lds
nop
pop
inc
inc
cmp
mov
xor
or
mov
cmp
mov
and
pop
loopne
or
jns
in
jge
mov
mov
sub
xchg
jbe
rcl
fldt
aam
call
adc
fsub
push
fadds
inc
sub
mov
int3
fidivrl
mov
mov
test
aad
push
pop
fbld
cs
sub
cs
movsl
aaa
lock
or
cmc
xchg
add
xchg
and
adc
mov
in
cli
jmp
pop
or
roll
mov
in
adc
inc
adc
enter
aam
adc
inc
pop
lods
cli
movsl
push
das
shlb
icebp
cmp
xchg
std
push
lret
pop
clc
pop
out
lret
loope
daa
fisubl
inc
int
pop
jg
mov
xor
ljmp
inc
jmp
aas
sbb
decl
sub
syscall
icebp
jmp
test
ret
mov
pop
cmp
inc
pushl
pop
call
cmpsb
sub
and
inc
lods
das
rorb
les
cwtl
clc
outsl
in
and
fstpt
sbb
daa
nop
xor
aam
call
je
fisttpl
addb
inc
add
inc
cli
cmc
je
fistpl
dec
mov
xor
xor
mov
mov
lea
es
fisttpl
adc
mov
cmc
cwtl
mov
adc
cli
movsl
stos
movsb
divl
aad
or
lock
ljmp
adc
call
adc
cli
cs
xorl
bound
dec
adc
leave
push
ljmp
pushf
jl
ret
cmpsb
jcxz
mov
or
xor
jecxz
inc
lods
pop
rorl
mov
mov
or
fnstsw
pop
cmpsb
cltd
and
lcall
jmp
and
jo
xor
cwtl
je
cmp
inc
in
mov
mov
bound
fldl
inc
pop
ficomps
cwtl
addb
leave
lock
push
push
clc
imul
sti
ret
pop
xchg
das
ret
push
jb
les
jg
lea
and
xor
ret
aaa
or
mov
push
cwtl
clc
cmp
test
test
jmp
mov
adc
sub
test
std
mov
insb
loope
xchg
aaa
test
pop
imul
mov
mov
sahf
cli
fcmovnbe
sarb
mov
cmpsl
or
mov
add
sbb
sbb
lea
and
mov
out
fs
jmp
cmpsl
daa
mov
mov
fs
xlat
cmp
insb
adc
pushl
rclb
call
je
ja
adc
fistpll
ja
jae
mov
filds
xchg
sbb
aaa
mov
divb
dec
in
adc
mov
xor
pushf
xchg
cld
daa
ljmp
pop
sub
and
stc
lds
sti
add
push
lret
fistpl
cmc
mov
insl
sahf
outsl
sub
dec
mov
sbb
jne
mov
add
xchg
fdivl
das
daa
adc
pop
out
xor
push
sbb
pushf
data16
dec
xor
mov
sarb
mov
jnp
sub
inc
clc
add
les
or
movsb
jge
outsb
ja
adc
ljmp
inc
ss
sbb
pop
jle
push
aam
shll
jne
and
repnz
jmp
adc
sbb
js
imull
je
in
lret
cmpsb
pushf
cs
je
jp
pop
mov
mov
ds
push
xchg
adc
push
cmp
out
or
cli
in
adc
mov
jnp
xor
jbe
sbb
pushf
clc
cld
pop
push
mov
inc
xor
fdivs
push
mov
push
pop
call
dec
std
or
lea
jne
or
add
pop
je
fistl
push
inc
fwait
or
jae
pop
scas
jge
and
in
sbb
dec
andl
loop
fstp
cmp
and
mov
mov
stos
push
or
in
test
pop
adc
adc
mov
fcoml
clc
in
dec
ljmp
data16
push
in
iret
cmp
mov
adc
cmpsl
xchg
stc
dec
mov
cmpb
lods
pop
cli
clc
inc
push
sub
cmp
sub
stos
inc
pop
decb
in
repz
int3
dec
int
repnz
jge
mov
xchg
pushf
jecxz
in
jno
cli
in
add
mov
xor
test
mov
mov
fistl
xor
xor
rcll
push
fstpt
das
call
test
ss
pop
imul
sbb
ret
push
icebp
inc
incl
cmpsb
mov
daa
bound
mov
mov
ljmp
mov
add
xchg
or
scas
xor
adc
and
xchg
xor
ret
mov
push
fistpll
and
je
stos
add
mov
push
inc
adc
sti
push
push
sbb
lahf
or
enter
mov
sti
movsl
sub
lods
nop
testl
cwtl
lcall
push
ss
daa
orb
inc
sub
mov
xor
xor
push
mov
and
aaa
jp
xor
imul
fbld
mov
test
roll
xchg
adc
arpl
test
or
hlt
out
xor
inc
and
call
fdivr
jg
pop
imul
fldenv
das
inc
lcall
call
jns
push
mov
lds
xchg
and
jb
jge
js
sbb
inc
cmpsb
pop
push
outsl
inc
push
mov
rolb
mov
lods
sub
add
mov
sbb
enter
mov
mov
push
xor
sbb
adc
cld
outsl
icebp
aaa
mov
and
je
or
add
aaa
ret
xor
addr16
in
jmp
jle
clc
test
adc
jbe
nop
inc
xor
jbe
jmp
rcr
ds
xchg
cltd
rolb
cmp
mov
inc
mov
test
je
shll
sub
pop
fimull
cmpsl
mov
orb
aad
xor
ret
orb
and
outsl
mov
test
cwtl
jmp
movsl
pop
pop
mov
adc
mov
jo
cmp
mov
xchg
mov
test
inc
cli
ds
mov
mov
pop
adc
scas
or
inc
sar
das
and
cld
mov
jge,pn
or
lods
xchg
in
jge
xor
cld
push
das
icebp
adc
fstps
xchg
inc
adc
rcrb
add
je
inc
leave
or
mov
jbe
or
mov
decl
lock
xor
and
push
jg
call
divb
sarl
pop
mov
xchg
inc
das
adc
ljmp
mov
bound
pop
sub
stos
xchg
je
ss
or
jb
mov
xchg
push
cmp
mov
xchg
ja
xchg
ja
push
sbb
mov
mov
jne
and
push
mov
fildll
inc
jo
mov
outsl
cmpsl
outsl
or
dec
adc
stos
mov
cmc
idivb
dec
call
mov
push
sub
mov
data16
sbb
mov
mov
or
lods
out
repnz
insb
or
pop
sub
enter
ljmp
mov
dec
inc
jp
mov
sbb
call
xchg
adc
adc
pop
call
and
andb
mov
shrl
xlat
mov
pop
cmp
fld
fbld
ss
ret
add
mov
cmp
lea
adc
call
jmp
xchg
sub
stos
sbb
jb
je
or
mov
fiaddl
out
pop
mov
sbb
ret
xor
out
jp
aaa
test
mov
bound
in
sbb
pop
outsl
mov
rorb
shlb
mov
mov
sub
lock
dec
lcall
or
fstps
sub
outsl
lea
popf
out
dec
iret
push
cmpb
in
rclb
jo
dec
sbb
test
pop
mov
stos
dec
popa
fdivrp
movsl
sbb
arpl
push
inc
into
sar
out
jae
inc
sbb
or
lds
loop
mov
sbb
fcompl
cld
divb
or
pop
adc
into
imul
rcll
and
xorb
mov
mov
sbb
push
jle
jg
or
and
push
dec
cmp
push
mov
mov
mov
push
addb
rolb
adc
xchg
push
mov
mov
in
jno
cmp
aad
mov
or
mov
and
aad
or
mov
and
mov
mov
in
outsb
push
icebp
or
xor
push
hlt
pop
lods
enter
sbb
push
sti
pop
adc
and
push
mov
in
xchg
or
push
in
mov
push
sti
stos
lret
mov
test
stc
inc
loopne
push
aas
pushf
rcr
fucomip
dec
clc
cmp
jnp
mov
sub
mov
outsb
mov
xchg
popl
rorl
xor
rcrb
movsl
faddp
jle
je
test
adc
test
test
insb
leave
les
push
mov
inc
and
and
int3
inc
sub
cld
add
aaa
test
rolb
test
pop
adc
pop
aaa
mov
int
pop
in
scas
dec
rep
jp
in
filds
rolb
lods
mov
push
or
insl
testb
mov
pop
call
inc
mov
aaa
clc
mov
addr16
add
incl
mov
testb
dec
pop
jmp
jae
or
in
popa
dec
or
cwtl
jne
inc
mov
lods
push
mov
pop
fs
jp
pop
add
movsb
js
pop
or
lods
das
cmc
or
jbe
negl
jp
push
pop
sub
jge
call
adc
hlt
test
movsl
out
fildl
ljmp
jmp
jne
push
pop
or
hlt
je
mov
std
test
add
js
mov
shlb
loopne
mov
flds
incb
pop
sbb
fidivrs
cwtl
sbbb
lods
filds
or
ja
sbb
lea
das
lock
jle
dec
mov
outsb
sahf
dec
xchg
int3
decl
movsb
aam
outsb
aam
inc
xchg
push
sbb
inc
stc
gs
pop
pop
call
call
movsl
dec
adc
jne
outsl
adc
jae
cmp
icebp
mov
mov
cmp
clc
movsl
mov
inc
int
lret
or
call
push
insl
pop
ljmp
dec
or
or
lds
movsl
inc
call
test
loopne
sbb
test
data16
adc
repz
push
cs
xchg
call
outsl
mov
in
push
mov
push
ljmp
mov
pop
das
movsl
mov
loopne
nop
pop
hlt
pop
push
add
repz
push
hlt
movsl
pop
das
call
mov
in
xchg
aaa
stos
insl
aas
sbb
jmp
stos
sbb
adc
bound
loope
outsb
add
loop
shlb
and
repnz
call
clc
testl
adc
sbb
test
mov
int
jbe
sti
push
adc
or
push
out
xchg
cs
mov
and
shl
xor
xchg
jo
test
fwait
shrl
sub
push
aam
repz
call
int
adc
pusha
add
and
test
pop
ficoms
and
iret
xchg
mov
mov
lods
or
lea
int
fbld
pop
adc
push
adc
or
lods
std
and
lock
dec
xor
nop
data16
xchg
mov
jo
cmp
inc
cmova
xchg
xor
test
and
mov
push
insl
add
repz
sub
jle
add
xchg
sbb
rclb
lods
cmp
mov
inc
lea
cmp
xchg
dec
dec
jmp
add
test
jge
call
cmpl
das
rorl
mov
rorb
sub
js
inc
test
dec
xchg
add
mov
in
scas
dec
pop
push
movsl
aaa
inc
stos
dec
mov
test
test
into
push
or
decl
inc
out
jnp
test
and
cmpsb
je
mov
insb
mov
jle
cmpsl
inc
xchg
xor
data16
loopne
ss
nop
adc
mov
outsl
std
sub
jecxz
inc
test
push
inc
sbb
fst
dec
mov
or
pushl
mov
mov
adc
call
popf
shrb
xchg
xchg
mov
sub
loopne
adc
iret
xchg
imul
je
decb
stos
jnp
sbb
mov
lock
mov
je
imul
jo
inc
sbbl
dec
mov
pop
pop
incb
outsl
mov
or
xor
dec
cs
adc
pop
inc
icebp
jo
decb
orb
adc
test
out
inc
scas
sti
mov
xor
enter
add
fbld
pop
cli
or
mov
jge
out
arpl
inc
xchg
shl
insl
xchg
sahf
testb
fmull
adc
adc
pop
test
clc
das
xchg
and
fcmovnb
jecxz
shlb
je
xor
fistpll
push
adc
sbb
mov
dec
push
and
sbbb
and
xlat
cmc
fisttpll
dec
or
pop
fcoms
fimull
sbb
rolb
xchg
push
loop
jne
push
das
lds
jnp
mov
mov
and
cli
mov
adc
and
mov
cpuid
cmp
lds
xchg
stos
clc
jp
out
inc
vmovdqa
mov
push
out
les
dec
and
pop
jp
filds
lods
fadds
in
hlt
sub
clc
insb
mov
pop
cmp
fdivl
sbbl
fcmovnu
pop
mov
je
jns
nop
std
xlat
cmpsl
xchg
mov
sahf
loop
test
pop
fdivs
push
push
or
push
fsub
lods
push
mov
in
insl
je
mov
inc
stos
sbb
push
bound
stos
aam
std
and
jbe
repnz
jmp
and
lea
hlt
or
jno
mov
decb
or
cmc
dec
inc
jae
jae
push
lds
fdivrp
add
pop
call
popl
insb
xchg
sub
cmp
mov
dec
sahf
jg
adc
or
clc
ret
add
sbb
cmpsb
xor
jle
movsl
mov
out
les
lahf
les
inc
dec
rorl
movsb
int
das
xor
div
mov
mov
decl
adc
or
jl
cmp
decb
in
adcb
xchg
jmp
sub
jle
outsl
sbb
lock
sti
mov
ror
loopne
movmskps
add
cltd
cmp
cs
sub
mov
icebp
sbb
mov
into
and
mov
push
sbb
jo
push
icebp
adc
loopne
fldt
sub
cmp
sbb
das
or
mov
call
adc
insl
fcomi
aaa
lcall
inc
adc
or
mov
aad
roll
dec
sahf
mov
or
cmp
jmp
mov
cltd
adc
je
imul
push
das
mov
arpl
in
push
into
insl
loopne
loope
aam
cli
rolb
mov
mov
adc
mov
invd
test
jo
sbb
stos
adc
mov
les
outsl
rolb
call
jns
das
lock
loope
scas
push
and
push
jae
lea
mov
outsb
dec
mov
sub
mov
shrl
jl
ficompl
loope
inc
movsl
push
or
push
xlat
sbb
icebp
outsl
pop
inc
and
push
and
xchg
fimull
sbb
stos
lcall
loope
scas
pop
xchg
loope
sub
mov
fdiv
or
mov
xlat
dec
test
dec
ljmp
movsb
or
sbbb
clc
mov
nop
or
dec
mov
call
push
jge
mov
inc
sahf
imul
fldt
dec
push
out
push
pop
mov
sbb
xchg
inc
lahf
outsl
bnd
and
movsl
call
fistpl
ret
test
add
out
jo
inc
push
add
push
or
dec
fstps
mov
push
call
mov
push
sub
and
jge
xor
cmp
ficoml
std
rcr
insl
xchg
adc
lods
mov
out
pop
loope
add
call
in
icebp
dec
stos
adc
je
enter
je
jmp
mov
inc
pop
push
clc
pop
or
ret
inc
xlat
push
hlt
and
loop
adc
shlb
aaa
std
test
mov
jg
inc
loope
push
ds
mov
cmc
inc
bound
adc
test
dec
pop
dec
cmp
out
pop
mov
faddl
in
push
fmul
sbb
inc
enter
je
fsubr
mov
ret
pop
mov
mov
lcall
push
and
insb
mov
stc
clc
mov
pop
ret
decb
test
mov
xlat
mov
mov
sti
outsl
push
add
mov
je
js
sub
xchg
mov
and
and
decb
adc
adcl
or
mov
lret
int3
call
sbb
push
imul
loop
jecxz
push
addr16
jmp
movsl
adc
adc
sbbl
insl
mov
jbe
scas
inc
and
aaa
push
enter
push
xor
jecxz
int3
sbb
in
pop
sub
in
leave
push
lahf
aam
and
or
jo
mov
sbb
pop
mov
pop
cmp
xorb
push
xchg
fidivl
shlb
outsl
inc
lock
sar
cltd
add
pop
clc
fists
ret
xor
inc
sbb
sbb
pop
mov
movsb
and
push
sub
js
mov
cli
decl
xor
adcl
gs
adc
jnp
and
je
rcr
pop
clc
je
adc
mov
and
int
push
je
mov
xor
mov
xor
cmp
push
insl
mov
xchg
pop
mov
and
mov
aas
add
inc
jmp
jge
sub
icebp
push
std
test
push
pop
add
sbb
inc
ss
shlb
int3
mov
xor
dec
call
mov
cmpb
or
mov
mov
pushl
xchg
lock
and
pop
or
les
mov
pushf
pop
pop
push
jmp
mov
mov
xchg
push
or
cld
inc
or
push
lods
test
cmpsb
out
adc
sbb
ret
iret
into
stos
mov
lahf
out
and
aaa
jl
imul
dec
imul
cld
mov
repnz
mov
jb
scas
sahf
ja
mov
or
push
in
pop
cmp
or
adc
cmp
dec
mov
or
push
pop
pop
loop
inc
arpl
and
cld
mov
xchg
lahf
jmp
das
push
aad
inc
imul
sub
xchg
loope
dec
cmp
jmp
xchg
in
xor
nop
jne
ss
fbld
loop
push
mov
adc
call
addl
loop
add
fbstp
add
popa
ljmp
jg
out
add
stos
int
xchg
xor
add
add
push
pop
mov
js
arpl
nop
or
pushf
sub
sub
arpl
push
test
pop
mov
and
enter
hlt
cwtl
jge
jecxz
mov
jge
fimull
jg
xor
repnz
xor
inc
stc
cld
lods
std
push
decb
pop
mov
jns
jg
in
fstl
mov
sbbb
inc
dec
xlat
adc
adc
mov
adc
sub
or
mov
je
cmp
dec
mov
sbb
sub
insl
cmp
pop
pop
mov
ljmp
jp
test
lods
test
idivb
jb
xlat
and
cld
push
and
fmull
sti
lea
call
jae
jecxz
add
adc
sbb
pop
and
popa
or
mov
inc
push
xchg
push
and
sub
std
inc
jmp
xor
dec
cmp
pop
adc
fmuls
addr16
sbb
movsl
mov
js
ret
adcl
mov
mov
mov
cwtl
fwait
mov
stos
scas
dec
call
dec
pop
adc
xchg
jne
mulb
pop
jp
mov
push
fwait
jns
xchg
out
ljmp
mov
jns
dec
push
or
and
or
je
dec
lahf
xor
shlb
rolb
movq
inc
aaa
mov
popf
call
test
sub
in
movsb
mov
clc
decb
std
mov
and
push
es
mov
outsb
hlt
mov
push
jo
or
pop
lcall
arpl
out
mov
in
adc
add
in
mov
insl
add
and
add
sti
int3
fwait
icebp
stos
mov
out
in
call
mov
int
cli
arpl
push
jl
clc
in
add
push
je
adc
mov
add
push
mov
fisubrs
repz
jb
test
fbstp
or
xor
push
fcmovnu
ljmp
and
xor
dec
add
cmc
inc
cmc
cmp
and
jo
dec
repnz
subb
cld
test
push
jbe
add
cltd
lods
push
insb
pop
pop
loopne
push
jle
inc
ss
inc
or
jae
sub
xor
in
outsb
and
add
std
ja
and
outsb
test
cltd
das
and
incb
pop
call
inc
and
inc
sahf
call
cltd
stc
inc
out
mov
incl
mov
mov
sub
adc
cli
push
std
mov
cmc
test
sub
aas
mov
cmp
roll
push
pop
push
es
stos
adc
mov
jp
es
adc
mov
mov
sbb
fstpl
mov
setge
jp
pushl
mov
dec
jne
jge
aas
jae
xor
clc
aaa
dec
push
mov
mov
jb
jmp
or
hlt
mov
aas
and
mov
in
pop
stos
aad
push
sar
cmp
push
add
movsl
out
aaa
or
rcl
and
insl
aaa
and
or
push
rclb
pop
mov
xchg
adc
mov
and
add
adc
mov
lods
fs
pushf
inc
mov
push
mov
inc
push
cmp
push
lcall
pop
test
cmp
or
clc
decl
mov
or
adc
adc
push
adc
or
out
mov
ret
dec
inc
stc
mov
cli
push
and
jae
jno
cmp
iret
inc
out
jno
dec
xor
push
add
out
add
lods
enter
outsb
pushf
xchg
inc
ret
lret
push
or
into
mov
mov
lock
dec
popf
testb
cmp
popf
cmpb
jl
and
cmp
cld
cmpsl
inc
ret
sub
pop
imul
leave
inc
or
xchg
mov
add
addr16
das
inc
cmp
pop
dec
std
cmpsb
call
push
cltd
popa
adc
inc
sbb
je
or
movsl
aaa
lock
adc
inc
jb
outsl
jl
loope
jo
repz
or
decl
out
and
or
pushl
push
fstpt
je
jne
or
xor
aas
fisubrs
fucomip
pop
add
pop
add
test
and
jmp
sbb
ljmp
movsb
adc
pop
and
sbb
pop
or
arpl
push
adc
je
dec
inc
inc
mov
cmp
cmp
filds
mov
sbb
xor
out
xor
daa
lea
stos
je
repnz
xchg
bound
inc
adc
xor
dec
jne
pop
sti
adc
mov
test
mov
jle
jp
ror
cmp
push
shll
sbb
cld
xchg
mov
and
inc
jle
cs
pop
jmp
std
mov
leave
jmp
add
add
js
fdivs
pop
cli
outsl
std
outsl
jg
call
push
and
pop
or
xchg
xchg
icebp
jb
sub
aam
clc
leave
push
jecxz
or
adc
lods
and
jg
and
and
cld
mov
sub
popl
push
sub
xor
sbb
sub
int
aad
lods
decl
outsb
or
ret
inc
inc
test
adc
pop
add
call
push
fsubr
js
push
push
js
mov
cld
jg
mov
pop
push
inc
lcall
outsl
add
add
call
pop
call
sub
add
stc
lahf
pop
fildll
ret
cs
cmp
pop
mov
jmp
cmc
jb
loope
lahf
daa
jmp
shll
test
xchg
loopne
mov
or
js
in
adc
cmp
mov
loopne
dec
sbb
inc
pop
adcb
xchg
shrl
loop
mov
clc
mov
sbb
ss
out
sbb
pop
and
lcall
not
add
pop
push
and
xchg
jb
cmp
outsl
mov
and
clc
out
mov
fs
dec
cmp
je
push
outsl
sbb
pop
enter
and
aam
icebp
mov
xchg
mov
sti
out
mov
ret
push
ret
cwtl
add
movsb
repnz
sbb
add
sbb
or
and
popa
sarl
cs
push
iret
jmp
aas
push
pop
or
lods
mov
sbb
mov
pop
dec
insl
and
inc
loope
jne
arpl
mov
roll
sub
fildl
adc
inc
sub
cltd
sti
add
xlat
and
and
cmp
aam
push
pushl
rclb
xchg
mov
mov
dec
inc
rcrl
fildl
mov
adcb
sbb
push
mov
sub
add
imul
push
xchg
inc
xor
pop
mov
pop
add
xor
push
mov
sarb
dec
mov
int3
inc
pushf
inc
and
fistl
sub
xchg
or
jle
sbb
mov
add
jbe
mov
lock
mov
inc
imul
ja
hlt
aaa
ss
repz
mov
mov
add
push
sbb
and
fidivl
fimull
aam
mov
insb
pushf
test
lahf
jno
mov
out
push
cltd
test
repnz
lock
fiaddl
jae
loopne
mov
add
pop
loopne
mov
dec
add
jbe
xchg
mov
mov
mov
push
pusha
mov
sbb
jge
test
jp
outsl
or
xchg
cltd
mov
inc
pusha
in
outsl
pop
push
xor
into
loope
pop
adc
mov
dec
adc
cs
and
jge
jbe
cwtl
inc
int
jb
inc
and
test
nop
aaa
mulb
and
add
shll
testb
mov
jo
js
pop
fmulp
test
arpl
xor
pop
mov
adc
pop
test
mov
aaa
mov
test
ljmp
loope
jle
lcall
or
hlt
sub
dec
cmp
sti
push
push
aad
fbstp
out
inc
sbb
sbb
push
mov
sbb
push
push
add
push
outsl
pop
lock
inc
pop
xchg
inc
sbb
imul
mov
call
mov
and
mov
mov
lock
icebp
or
rcr
aaa
xor
mov
mov
lods
pusha
insb
xor
ficomps
bound
xchg
aaa
pop
jg
xor
call
mov
or
in
pop
dec
mov
xor
push
push
push
or
xbegin
into
push
rcrb
mov
in
in
push
loop
je
mov
mov
adc
sbb
ja
lock
adc
or
int3
push
jne
test
and
and
sub
push
test
and
add
xchg
aas
dec
add
psubb
dec
aad
mov
fsubrp
adc
xchg
cld
mov
ret
inc
pop
js
clc
negl
add
mov
cli
fistpll
test
fidivs
pop
hlt
or
or
loop
and
mov
addb
jle,pt
mov
inc
sbb
pop
dec
xchg
xchg
mov
fwait
clc
jg
int3
fmull
xor
lahf
inc
pop
adc
fldenv
cmc
test
rorl
rolb
push
dec
jne
xchg
adc
mov
je
mov
mov
inc
cwtl
or
lods
fistpll
rcrb
and
fidivrs
and
mov
adc
mov
add
push
jo
sarb
push
mov
aaa
mov
mov
cmp
out
or
and
push
shlb
mov
negb
adc
cmpsb
inc
jge
jo
mov
clc
fstp
xchg
lahf
add
or
or
cmp
xor
idivb
or
cmc
or
xor
add
mov
push
sub
xchg
pop
movsl
in
mov
pop
pop
mov
xor
push
jb
lods
cmpb
adc
popa
pop
mov
jns
adc
adc
add
sahf
cmp
mov
jb
cmp
lods
or
or
nop
and
out
mov
mov
jns
cltd
test
divb
scas
dec
jecxz
or
xor
and
rorb
pop
jp
mov
push
je
dec
add
mov
rolb
pop
outsl
sarl
mov
mov
sub
adc
testb
cmc
pop
mov
imul
pop
inc
sub
xchg
fimuls
or
mov
dec
out
daa
test
inc
push
loop
in
mov
fld1
cli
or
into
mov
mov
mov
and
pop
lock
loop
mov
mov
rol
inc
adc
pop
dec
lea
add
testb
out
add
loop
mov
inc
pushf
mov
xchg
fs
mov
dec
cld
jbe
pop
xor
aam
jp
or
pop
add
push
je
shll
jbe
call
xor
cmp
icebp
and
xchg
and
cmp
das
mov
pop
mov
jno
pop
adc
mov
call
cmp
dec
lea
fstpt
add
fwait
mov
daa
push
inc
dec
inc
add
pop
xchg
aaa
jmp
pop
ret
loopne
push
lods
jl
jne
in
fcmovnbe
pusha
mov
rcr
leave
jbe
rclb
subb
popa
cld
dec
in
cmp
xor
in
or
aad
loopne
cli
and
cmp
sub
jmp
adc
inc
mov
mov
dec
or
push
aad
icebp
sub
inc
pop
sbb
imul
loopne
hlt
adc
loop
add
sti
push
mov
insb
fstpt
xlat
cli
into
call
mov
mov
and
mov
inc
mov
int3
fsubrp
and
fimull
push
mov
outsl
or
shr
cmp
pop
roll
idiv
or
xlat
or
mov
stc
rcll
or
sub
out
shrb
divb
inc
clc
mov
scas
add
scas
mov
xor
pop
jmp
xorl
shll
je
mov
mov
push
pop
push
test
or
clc
xchg
sub
out
sub
aam
ljmp
hlt
push
out
in
or
xor
test
call
loop
in
aaa
and
push
ret
mov
mov
movsl
divl
adc
fnsave
dec
jmp
sub
pop
insb
jge
inc
or
push
and
imul
subb
sbb
push
sbb
and
int3
lods
jb
or
xlat
sbb
or
mov
sbb
lods
out
inc
pop
dec
push
outsb
mov
mov
std
push
push
add
or
sub
clc
test
or
js
ss
xchg
pop
jmp
push
jmp
int3
dec
or
pop
pop
jp
pop
and
and
ja
fdiv
fnsave
movsl
jg
orl
add
cmpb
or
lds
cli
adc
pop
dec
pushl
mov
andl
adc
or
inc
mov
xchg
std
int3
insb
pop
aaa
or
shlb
push
ljmp
lahf
sbb
mov
mov
data16
and
lea
lods
push
and
rorb
mov
or
loop
mov
pop
jg
mov
lcall
mov
sub
iret
ds
adc
cmp
pop
mov
je
int
out
inc
or
nop
push
pop
fistpll
mov
push
fstl
incl
test
jge
pop
mov
std
pop
repnz
push
fldenv
cmp
inc
or
sahf
push
cmp
jl
pop
std
adcb
or
push
cmp
inc
jg
sub
insl
pop
jg
std
or
lcall
xlat
xchg
and
fs
aas
mov
inc
pop
loope
incb
lcall
les
jno
dec
cmpsl
sbb
into
or
adcb
cli
sbb
sub
jmp
aad
mov
or
and
jg
push
fs
cwtl
or
push
inc
mov
and
pushf
mov
movsb
add
mov
jmp
ss
jge
mov
ret
add
enter
mov
mov
cmpsl
push
mov
mov
or
inc
lock
fistps
xchg
mov
ficomps
jmp
inc
fadd
out
in
inc
and
lds
movsl
or
jne
push
add
adc
addr16
sub
mov
call
incl
icebp
das
daa
adc
inc
int
add
push
mov
push
sbb
mov
lods
outsl
pop
ror
jg
adc
lahf
jbe
loope
and
int3
testb
jbe
add
out
xchg
or
xchg
arpl
dec
inc
mov
jo
adc
into
push
adc
xchg
adc
jmp
cmp
fnstcw
daa
mov
push
or
inc
rcll
mov
rcrl
mov
mov
jecxz
mov
cmp
or
mov
sub
lahf
inc
fstpl
xor
and
pop
loop
outsl
push
or
cld
push
pop
sub
fld
test
push
adc
cs
inc
mov
ja
jp
cmp
add
outsl
mov
sbb
test
mov
mov
leave
adc
jne
stos
jns
dec
cmp
sbbl
sub
inc
inc
push
mov
test
mov
cmp
add
jo
inc
outsl
int
ljmp
mov
popf
push
pop
or
fldt
incb
or
lds
int
mov
add
mov
pop
xor
es
cli
jg
loopne
movsb
dec
and
sarb
jg
aam
add
fildll
pop
leave
pop
cmp
mov
dec
rcrl
adc
test
mov
cld
test
xor
cltd
inc
cmpsb
and
bound
sbb
inc
cmp
les
loop
insb
mov
or
dec
or
and
dec
mov
xchg
jo
adc
push
xor
repnz
pushl
sub
dec
cmp
mov
dec
pop
call
out
and
aaa
and
movsl
lea
jmp
aad
or
sub
cmpsl
pop
sbbb
xor
js
popa
jmp
loopne
popa
hlt
shll
jns
push
sbbb
int3
lods
xor
xchg
sub
js
inc
dec
loope
and
inc
aaa
cs
lret
js
inc
mov
into
shll
jo
push
inc
and
ljmp
mov
ret
rcll
shrb
fdivl
fcmovb
and
xchg
fcmovb
sbb
fidivrl
xor
jmp
js
subb
push
je
mov
imul
inc
popf
mov
loop
bound
mov
icebp
adc
lods
jbe
xor
in
stos
pusha
pop
cmp
sbb
cmpsl
mov
jae
or
add
les
or
cltd
cmpsb
andb
push
sbb
mov
pop
fstpt
inc
icebp
pop
insl
jne
or
es
pop
outsl
je
stc
xor
lcall
jge
sub
popf
inc
sub
adc
sti
pop
adc
fdivs
js
test
fdivl
jmp
test
ret
daa
and
sbb
outsl
loope
or
xchg
cmp
jle
hlt
adc
scas
mul
fimuls
call
std
dec
aam
push
repz
mov
add
jbe
mov
test
data16
nop
sbb
push
jmp
mov
push
or
xchg
pop
pop
sbb
popf
lods
adc
mov
rclb
sti
push
jbe
cmp
or
cs
shlb
cmp
shrl
icebp
jne
xor
stc
out
cmp
push
pop
mov
je
sbb
jecxz
aad
or
aam
das
mov
xor
in
sub
push
fildll
ret
and
mov
and
pop
cmp
cmp
add
in
pop
popf
inc
jnp
xorl
mov
dec
cld
jg
call
ret
and
jb
push
test
sbb
push
shlb
ljmp
stc
scas
test
cld
mov
aam
mov
cltd
and
subl
lods
mov
and
xor
jle
sti
rol
lahf
pop
dec
sub
mov
movsb
and
pushl
call
or
fucomi
ret
cmp
adc
xchg
loop
dec
and
mov
fimull
lret
add
sub
xorb
lock
std
dec
adc
je
or
je
inc
call
int3
es
lods
loope
jb
movsb
sub
ret
cmp
push
mov
pop
mov
loopne
adc
xor
jecxz
or
adc
and
xchg
sbb
es
jno
push
loope
push
sub
jns
mov
rclb
stos
pop
rorl
fildll
adc
jns
cmp
lds
cli
in
pop
xchg
aam
xchg
inc
int
xor
mov
shrb
cmp
dec
jle
loope
pop
ja
jmp
int
or
in
and
dec
imul
jbe
and
call
add
sub
push
call
sbb
inc
inc
cmp
or
das
test
leave
dec
xchg
or
out
loop
lds
and
cmpsb
movsl
pop
mov
movsb
loope
push
out
push
test
cmp
pop
xchg
mov
or
or
pop
sti
dec
cmp
push
mov
lahf
mov
and
lods
push
test
add
mov
test
pop
std
add
xorl
mov
inc
mov
les
adc
inc
je
xchg
test
ljmp
mov
push
push
inc
leave
push
push
adc
push
dec
pop
sub
xchg
pop
lods
loop
xor
ret
rclb
mov
dec
stos
pushf
add
push
xchg
pop
push
or
adc
sbb
hlt
push
mov
pop
pop
pop
hlt
xor
inc
es
leave
data16
dec
inc
ds
gs
imul
mov
xor
xchg
or
dec
es
mov
ss
cli
das
stos
push
mov
loopne
sub
data16
push
adc
fisttpll
mov
outsb
push
sbb
stos
xchg
dec
call
sbb
or
add
insl
andl
jae
scas
fiaddl
in
int
pop
inc
pop
adc
sbb
push
mov
je
push
jbe
je
adc
cmpsl
push
jae
pop
mov
inc
mov
adc
adc
xchg
daa
insb
inc
jbe
sub
sub
jmp
xchg
and
arpl
out
pop
shlb
dec
jp
aad
or
xor
adc
das
les
adc
mov
outsl
mov
xchg
pop
mov
add
add
jne
call
pop
push
or
mov
mov
sbb
inc
cmp
push
sub
outsb
js
mov
adc
lahf
jnp
jne
push
pushl
call
pop
sbb
aaa
inc
adc
xor
jns
and
lock
adc
xlat
mov
sbb
cld
sbb
and
ret
fldt
dec
mov
xchg
das
mov
jge
sub
mov
lret
arpl
inc
cld
jp
out
or
xor
negb
lock
mov
xor
rcr
movsl
fsubr
jnp
xchg
mov
fisttpl
filds
mov
dec
adc
in
dec
shrb
add
add
iret
push
call
testb
sbb
or
mov
add
pop
mov
jb
cmp
jo
ror
mov
xor
push
clc
push
icebp
cwtl
mov
lahf
cmpsb
movsl
lea
dec
push
test
mov
rclb
dec
inc
aad
dec
pushf
xor
andl
clc
int
arpl
pop
push
pop
dec
cmp
lds
outsl
push
dec
fldt
xor
fdivrl
push
cmp
or
or
sahf
stc
test
cmp
xchg
lret
in
pop
loop
test
roll
int3
imul
xchg
aas
jae
xor
inc
bound
std
push
pushl
push
add
cltd
sarb
aaa
sub
push
hlt
testb
in
mov
push
lock
push
and
cld
outsl
sub
xchg
ret
icebp
jns
sub
or
mov
xchg
insb
push
arpl
cmovne
xchg
orb
xchg
shlb
mov
push
jmp
in
xor
or
mov
std
data16
out
xlat
lea
nop
mov
rcrl
sbb
addl
push
inc
inc
mov
movsb
mov
iret
outsl
sbb
cmp
xchg
push
js
mov
insb
test
pushf
mov
loop
or
outsb
lods
sub
push
mov
xorl
cmp
mov
push
mov
test
sub
pop
outsb
loope
jb
popa
rcr
cmp
add
jns
outsl
push
sub
dec
cmp
pop
xchg
sbb
mulb
mov
rcrb
dec
bound
sbb
ljmp
add
sub
ret
leave
ret
mov
pop
adc
add
push
mov
add
or
jl
aaa
mov
shll
mov
stos
push
push
jmp
fs
rolb
mov
push
push
loope
ljmp
sbb
repz
bound
sbb
inc
imul
popf
call
cmpsb
push
clc
push
and
aam
out
sbb
std
or
jmp
call
andps
fs
loope
ret
push
sub
int3
pop
out
loopne
test
mov
incl
int3
scas
lret
sbb
outsl
lods
adc
inc
adc
or
das
cld
lea
sub
cld
nop
sbb
in
mov
cmp
adc
shll
std
cmp
fimull
outsl
jo
paddb
sub
or
test
call
js
scas
pop
xchg
pop
adc
add
decl
icebp
xchg
sub
jmp
xor
push
ret
cmp
testb
sti
adc
loopne
orl
mov
cld
xchg
popa
test
mov
notb
adc
cli
mov
popf
push
or
mov
adc
cs
ret
into
rolb
nop
cld
aam
and
loope
mov
sub
sbb
shll
push
push
stc
add
cld
mov
add
inc
push
in
rorb
call
outsl
add
movl
lds
add
sbb
sub
pop
inc
clc
dec
stos
in
out
mov
stos
xchg
test
mov
shll
xor
mov
or
aad
sub
es
cld
add
fnstenv
or
sub
hlt
sbb
fwait
inc
sbb
je
inc
stos
xchg
hlt
sub
movsb
or
inc
xchg
xor
mov
and
xchg
mov
outsl
outsl
push
std
cmpl
insl
add
jl
loop
mov
sbb
je
jae
ret
mov
inc
xor
aaa
mov
or
popf
nop
lock
subl
out
cmp
mov
outsb
pop
pop
sub
xchg
sub
adc
mov
jge
mov
add
movd
movb
push
jl
movsl
jg
pushf
in
sbb
call
xchg
inc
test
sub
icebp
outsl
je
decl
push
inc
jo
adc
lcall
shr
jnp
insl
xor
and
fstps
loope
mov
orb
jl
mov
int3
sbb
lods
push
adc
int3
pop
je
cld
push
fldt
lret
jmp
mov
adc
incb
insl
fidivs
arpl
xchg
jle
sbb
adc
xor
or
mov
lock
mov
jae
ljmp
fbld
fdivr
aas
test
push
cmpsb
cs
insb
dec
jne
imul
cmp
stos
push
pop
xor
lods
pop
sahf
xchg
inc
mov
or
icebp
flds
cmp
xor
subl
mov
xorl
in
ffreep
dec
enter
dec
bnd
fimull
mov
aam
adc
mov
wrmsr
xor
push
mov
add
xchg
sbb
or
fisubrl
mov
add
cmp
fsubrs
add
inc
push
mov
and
testb
cmpsl
mov
push
inc
push
je
mov
adc
xchg
clc
adc
xor
je
stos
push
outsl
scas
push
push
inc
push
lahf
je
inc
das
test
xchg
or
outsl
test
leave
test
and
scas
jnp
inc
pcmpeqb
mov
cmp
and
adc
dec
xor
add
xor
dec
adc
inc
sbb
movb
and
cltd
mov
and
sub
mov
sahf
adc
mov
xchg
push
dec
adc
xor
sbb
push
or
inc
xor
mov
add
cmp
fdivl
mov
lods
icebp
ds
fidivl
dec
xchg
and
dec
ret
cmp
push
sub
je
lret
call
fsubs
or
mov
iret
adc
push
mov
and
imul
dec
mov
sbb
call
stc
sbb
cli
in
xchg
cmp
push
pop
and
test
notb
inc
pop
push
sahf
fldcw
pop
clc
mov
or
mov
dec
call
into
gs
or
sbb
jle
pop
ret
notb
lock
jge
mov
jo
or
inc
jbe
pop
sub
cmp
jle
pop
mov
sbb
xchg
sbb
jne
movsb
std
pop
aad
sbb
sub
adc
loopne
out
orl
push
mov
nop
sub
mov
cs
aas
lds
out
in
scas
or
mov
cld
incl
data16
xorl
je
push
inc
inc
lret
test
std
adc
sbb
in
iret
popf
adc
lds
and
les
cld
dec
push
cli
mov
inc
mov
mov
cmp
lret
test
mov
or
adc
lret
fisubrs
or
dec
adc
ss
cmp
test
adc
xchg
call
mov
xchg
jl
lods
pop
mov
or
jno
aad
xchg
mov
mov
push
add
add
sbb
outsl
pop
ds
ja
icebp
sub
push
insb
ja
sbb
jbe
fistpl
pop
add
adc
daa
add
fstpt
dec
movsl
addl
test
pop
sahf
pop
xlat
inc
push
pop
and
mov
shlb
adc
test
adc
mov
jns
jl
and
scas
arpl
jo
pop
mov
sbbb
hlt
in
mov
call
mov
aas
mov
stos
out
xorl
stos
mov
testb
cmp
cmpsb
jno
movsl
mov
jnp
push
sub
mov
adc
mov
and
orb
xchg
jl
das
push
repz
rcll
ficomps
aad
xchg
mov
pop
fiadds
inc
adc
fnstsw
decl
js
and
je
adc
popa
fisttpl
sti
fsub
add
mov
and
cmp
andb
mov
cwtl
mov
mov
lock
pop
aas
adc
push
pushf
enter
mov
int3
mov
mov
push
mov
call
lock
jle
fisubs
and
das
or
scas
or
or
fisubrs
in
hlt
pop
sbb
fucomip
jns
dec
movsb
mov
adc
add
or
xor
jne
lods
add
sbb
popa
jnp
adc
pop
xor
inc
popa
popa
dec
jno
xor
xchg
xor
imul
mov
push
in
fneni(8087
ficoml
mov
rcrl
mov
jecxz
push
push
int
dec
adc
inc
loope
pushl
fsts
imul
stos
and
outsl
mov
lods
wbinvd
or
mov
pop
insb
mov
rorb
pop
bound
mov
imul
pop
js
je
add
dec
or
and
add
outsb
jmp
pop
push
cmpsl
adc
bound
lcall
test
xchg
or
int
dec
or
roll
sbb
inc
pop
clc
cmp
jmp
out
adc
inc
fucom
in
outsl
aam
push
mov
cmp
lods
add
rcrl
inc
test
push
mov
mov
mov
adc
lret
mov
loope
inc
mov
mov
pop
mov
push
sbbb
or
jno
out
push
pop
jmp
mov
cmpsb
dec
jg
sbb
adc
mov
stos
sub
clc
fstpt
aam
mov
push
jmp
shlb
adc
aam
jg
and
mov
loopne
lret
sub
insl
cmpl
dec
lods
shrl
fistpl
fldenv
je
xor
cmp
fcmovnb
enter
jmp
out
add
popa
mov
push
call
inc
test
ds
push
mov
push
xchg
pop
xor
add
adc
jge
std
sbb
xor
inc
or
shr
and
lods
mov
dec
mov
inc
stos
add
mov
dec
fists
lods
or
mov
mov
mov
cmp
adc
fiaddl
xor
leave
test
dec
jne
or
or
lock
out
inc
mov
jnp
movsl
outsb
sbb
sarl
mov
cmpsb
arpl
add
loop
pop
mov
js
xlat
loopne
xor
scas
push
mov
call
inc
mov
fnsave
xchg
jp
popa
xor
sar
pop
aaa
mov
lea
ds
mov
adc
xchg
ss
pop
adc
iret
jne
jnp
adc
movsb
es
std
inc
rcr
js
adc
sbb
push
stc
sub
push
inc
outsl
inc
jne
iret
pshufw
add
or
inc
and
xor
adc
fscale
push
lock
popf
rcrl
xor
out
cmp
sbb
mov
lock
dec
mov
cld
sbb
jp
fcmovnu
cmpsl
sbb
add
push
int3
stos
push
inc
shrb
shlb
jl
std
or
rcll
bound
ffreep
lock
add
inc
mov
stos
int3
mov
mov
adc
mov
icebp
das
ret
inc
mov
adc
mov
sbb
mov
mov
inc
cmp
xorl
lock
xor
mov
add
arpl
and
aas
xchg
js
dec
popa
add
or
jge
and
mov
movsl
call
jb
jo
jo
push
pop
aad
andl
jmp
jmp
iret
ror
xor
and
inc
mov
pop
mov
fistps
pop
fsubrs
aad
add
xchg
in
pop
lret
or
xor
pop
xlat
mov
sbb
xchg
xchg
je
popa
nop
in
add
mov
addr16
lds
inc
dec
ja
aam
inc
xchg
and
decb
call
test
lea
xor
and
lock
cmp
or
mov
stos
inc
test
pop
mov
cli
scas
cmpsb
push
or
pop
adc
jl
neg
add
sub
aaa
pop
or
jne
scas
and
push
xor
push
inc
mov
icebp
fwait
mov
hlt
imul
or
loop
insl
inc
sub
pop
ds
sub
fcoml
mov
jo
push
ja
jb
cs
pop
push
xor
cmp
xchg
shl
add
cs
xor
and
repz
ret
outsl
lds
outsl
rcll
pop
xchg
xor
sbbb
jmp
add
inc
icebp
call
insl
sub
stos
cmp
inc
and
push
push
add
imul
rcl
push
push
out
mov
sub
out
and
adc
mov
mov
mov
and
out
cmpsb
repnz
xor
outsb
in
mov
test
xchg
pop
sub
mov
and
or
add
mov
jecxz
cmp
mov
adc
lds
push
and
lea
icebp
cli
int
and
repz
inc
jmp
or
and
je
stos
jmp
popf
imull
out
inc
push
mov
loop
sbb
jbe
or
mov
xor
scas
imul
push
push
sti
subb
enter
push
jge
inc
xchg
jns
mov
mov
dec
cwtl
loop
push
push
adc
in
xor
mov
cwtl
push
lods
pop
sub
repz
shll
xchg
jecxz
fneni(8087
dec
sysexit
jae
mov
xchg
dec
lods
jp
jge
js
and
jge
mov
mov
mov
ret
rolb
xchg
or
daa
mov
loop
adc
call
rol
push
inc
jle
fs
mov
mov
inc
mov
shl
mov
mov
xor
jge
ljmp
push
and
fucom
mov
sub
or
add
lods
aaa
or
jns
sahf
icebp
call
jns
loopne
inc
pusha
pusha
inc
sub
push
or
inc
inc
adc
insb
movsb
pop
jl
call
pop
pop
or
test
xchg
call
insb
add
adc
ds
loop
push
test
inc
loope
jle
fisubl
push
fcoms
xchg
sti
imulb
cmp
inc
call
pop
jge
pop
popf
cli
sub
mov
cs
add
mov
jmp
sub
jbe
leave
scas
pusha
out
or
int
cmp
testl
pop
add
cmp
push
fistpl
cmovg
xchg
mov
fsubrs
adc
mov
inc
aaa
bound
lret
lea
or
cmp
je
dec
jne
push
xchg
fists
xor
add
xor
add
mov
es
mov
pop
bound
test
call
push
clc
inc
shll
dec
jle
loope
je
aaa
sbb
fcmovu
and
sub
je
call
add
cmc
add
xchg
adc
btr
fbstp
push
mov
dec
jl
jno
pushl
xor
xadd
insb
xor
mov
sub
jp
rclb
lds
push
adc
pop
push
xorl
js
cmp
push
clc
iret
outsl
inc
mov
mov
and
pop
jnp
jl
mov
mov
aaa
shlb
push
jmp
fdivrl
inc
mov
jge
fbstp
pop
cltd
dec
cmpsl
cmpsl
inc
fiadds
or
test
jle
pop
adcb
andl
mov
js
lock
fisubl
stc
mov
sbb
jns
sub
jmp
jno
and
lock
outsl
and
push
nop
fimull
pop
setg
cld
jmp
add
mov
repnz
dec
push
cmpsl
loop
and
xchg
push
push
mov
sahf
adc
add
cli
push
aaa
pushf
push
mov
call
call
cld
jne
popa
mov
stos
sbb
jb
rcr
cwtl
add
push
jecxz
or
je
adc
or
pop
mov
adc
and
aam
mov
cmpsl
or
ffree
or
out
ds
stos
add
pop
sbb
je
xlat
and
cmpsl
jae
or
jno
ret
ret
push
push
cmp
inc
lcall
xchg
les
sbb
out
fcmovbe
ss
test
clc
je
push
js
sahf
test
fcomps
mov
inc
sub
or
adc
adc
mov
aaa
xorl
xchg
jae
sub
pop
out
rcrb
insb
ret
cmp
and
ret
inc
fcmovnb
call
xchg
ret
mov
cmp
inc
cmc
mov
mov
fcompl
addb
adc
movsl
adc
adc
lcall
cmp
mov
aad
aad
cmp
pop
inc
jo
inc
cwtl
lods
xchg
xchg
ljmp
dec
adc
fdivr
call
adc
jb
ret
ss
in
movsl
in
fistl
aam
jle
je
cmp
mov
clc
push
aad
aaa
icebp
imul
icebp
outsl
mov
and
aaa
mov
pop
orb
cmp
push
mov
ret
scas
adc
jecxz
push
xor
jle
pop
rorl
gs
rcrb
shl
cs
sbb
imul
js
jne
enter
mov
adc
sbb
jl
aad
shll
push
jb
into
cmp
shr
pop
jne
sub
call
pop
in
push
xchg
dec
jle
cmp
aaa
lock
sub
and
xchg
loope
leave
loopne
adc
push
pop
adc
int
add
mov
bound
call
and
pop
xchg
mov
mov
sti
push
stc
les
and
sbb
xchg
insb
adc
in
add
inc
aas
and
add
mov
ljmp
push
xor
enter
cmp
xor
adc
push
aad
push
std
insl
dec
stos
jb
xorl
clc
out
push
and
lret
mov
jbe
insl
in
xchg
fdivs
sbb
inc
xchg
data16
into
pop
or
xchg
ror
mov
scas
sub
cmc
push
mov
sbb
enter
sbb
push
lock
xchg
mov
insl
aaa
mov
push
or
orb
pusha
adc
test
sti
inc
clc
clc
out
inc
imul
ja
fsubs
add
pop
hlt
adc
scas
add
pop
std
shll
jno
loopne
scas
dec
mov
sub
or
out
jne
pop
mov
or
xchg
call
cmc
push
mov
push
dec
mov
add
scas
fnstsw
xor
mov
mov
sarl
iret
dec
pushf
inc
xchg
dec
mov
loopne
mov
pop
mov
xor
add
dec
add
ret
mov
mov
sbb
enter
jns
sbb
push
call
mov
dec
repnz
push
mov
push
sbb
mov
xchg
aam
dec
or
push
add
lret
bndldx
cmpsb
ficomps
movsb
and
and
ljmp
lahf
cli
call
ret
jmp
hlt
in
rol
imulb
subl
ret
sbb
cmp
push
mov
mov
in
enter
test
lahf
cli
les
insb
shrl
xchg
fwait
cmpsb
mov
xlat
outsl
sub
or
mov
sbb
movsl
incl
or
mov
inc
adc
loopne
jg
mov
es
add
adc
pop
adc
shl
push
imul
rorb
out
mov
outsb
inc
and
sub
and
sbb
insb
mov
adc
jnp
and
loope
jae
push
xchg
fwait
je
imul
add
or
push
cmp
adc
sbb
cwtl
and
jle
data16
mov
addr16
fildl
or
cmp
mov
cmc
inc
in
or
das
push
sbb
loopne
add
mov
jne
xchg
inc
push
jno
jne
xor
cs
mov
and
jle
and
add
mov
cld
outsl
clc
test
or
adc
ss
ror
insb
call
xor
les
je
push
ja
das
jne
jmp
fiadds
mov
mov
sub
push
in
adc
cmp
aaa
adc
mov
ficoms
mov
inc
jg
mov
gs
xchg
dec
xchg
adc
and
loope
insb
jmp
and
mov
sarb
jno
clc
pop
les
sysexit
or
dec
cld
in
and
je
int3
adc
stc
adc
mov
test
int
fwait
js
xor
clc
subl
dec
cltd
add
fldt
mov
out
mov
or
pusha
mov
loopne
inc
loop
push
sbb
pop
push
xchg
jbe
mov
jl
fisubs
pop
mov
outsb
xor
je
push
aaa
icebp
pop
arpl
out
out
and
jle
rol
mov
in
inc
pop
gs
mov
daa
nop
fsubl
shrb
lods
push
test
add
adc
insb
push
mov
fldt
dec
mov
fwait
sbb
movsb
adcb
stos
stos
sahf
daa
sbb
faddl
fiaddl
xor
mov
push
and
std
fisubrs
insb
out
out
popf
jae
adc
cld
push
fistpl
jle
incl
jge
xor
addb
in
pop
clc
inc
inc
mov
pop
mov
icebp
or
call
adc
pop
mov
mov
movsl
inc
outsl
lds
add
shll
in
add
rcll
jmp
mov
inc
ret
les
sub
pop
lahf
xchg
ss
test
pop
mov
imul
ljmp
add
inc
mov
and
ret
mov
sbb
out
mov
lods
out
jle
pop
js
aam
pop
or
fwait
into
push
mov
mov
sbb
jb
or
call
mov
lock
fbld
and
sbb
cmpsb
dec
jne
push
pop
or
mov
ljmp
push
ds
mov
mov
mov
test
jno
adc
add
sub
or
outsb
aad
sbb
mov
aaa
test
insb
adc
pop
xchg
and
or
inc
mov
lret
inc
test
loop
or
mov
mov
cmpl
pop
shr
mov
and
ret
out
pop
fcoml
test
out
loop
mov
decl
out
mov
mov
push
inc
dec
daa
je
mov
inc
xor
cmp
or
cmp
ficoms
xor
ret
mov
sub
mov
filds
or
pop
jecxz
xor
mov
and
sub
mov
je
adc
or
test
jl
mov
pop
cltd
rcr
sbb
mov
dec
xor
xor
icebp
push
and
call
rol
pop
add
pop
pop
lret
jne
pop
orb
xor
nop
push
negb
rcrl
les
pop
inc
ljmp
or
mov
hlt
inc
mov
ss
add
vmovsd
dec
pop
mov
pushl
sbb
int
mov
fisubrl
sub
int3
sub
and
fdivr
sub
xor
push
dec
jge
aas
ficoml
shl
fldt
loop
test
mov
sbb
jmp
push
cmp
xor
sbb
fsub
jne
push
pop
nop
divl
jne
jecxz
daa
sub
or
cmp
add
int3
outsb
insl
fisubs
sub
ret
ljmp
aas
out
xchg
in
push
rorb
add
inc
subl
push
je
int3
pop
sbbl
add
add
inc
jae
data16
sub
xchg
in
insl
cmp
nop
jmp
and
cmp
mov
and
sbb
lcall
daa
add
lahf
push
test
shrl
into
inc
jle
adc
arpl
cld
lcall
jl
call
call
in
xor
and
cs
sbb
sbb
xchg
cmc
or
leave
cmpsb
je
and
hlt
lcall
inc
into
pop
jg
jo
int3
lds
mov
lock
push
and
call
and
call
or
lods
sbb
pusha
imul
xor
jl
push
in
pop
sbbb
or
add
loopne
jne
push
dec
out
sub
push
adc
mov
mov
aas
jbe
loope
dec
or
fidivl
add
xor
or
xor
in
pop
jnp
lea
dec
lods
movzwl
pusha
test
add
je
in
js
jno
loopne,pn
or
or
popl
testb
je
and
xor
pop
aas
sbb
filds
incl
inc
jp
and
sbb
adc
mov
ss
lock
push
addb
scas
jno
or
jg
in
ret
push
inc
fwait
int
call
ds
fld
jne
rcl
push
mov
jg
cmc
adc
inc
frstor
orb
dec
pop
arpl
dec
mov
aaa
mov
jmp
adc
mov
pop
test
es
jb
loopne
lea
sbb
movsb
inc
jmp
sub
sub
pop
sbb
fcoms
imul
imul
mov
pop
sbb
out
dec
adc
add
mov
xchg
push
and
lret
adc
mov
and
cmp
clc
out
ss
fildll
xchg
movl
mov
adc
mov
sub
imulb
aad
test
fsubrs
into
jbe
jns
jns
inc
ret
pusha
loopne
and
fcomp
xchg
mov
pop
or
je
mov
xor
cmpsl
call
stos
dec
std
add
sub
inc
cmp
insb
inc
push
push
out
jmp
test
fiaddl
adc
jb
clc
fstps
rcll
fcmovbe
roll
push
pop
iret
and
push
push
adc
imul
xor
lret
xor
lahf
inc
xor
pushf
xor
push
mov
xchg
cmp
pop
and
pop
inc
jecxz
xor
xchg
mov
jnp
dec
xor
inc
pop
inc
imul
out
sbb
pop
lret
sbb
roll
xor
and
mov
andb
mov
or
jge
mov
subb
fwait
and
jp
aaa
int
nop
cmp
cltd
popa
push
imul
or
fdivl
lock
ret
xchg
push
popf
shlb
mov
adc
inc
and
sbb
dec
sti
lock
xor
and
pop
sbb
icebp
cmp
cmp
je
xchg
roll
xorb
mov
cmp
and
inc
mov
xchg
in
inc
scas
sub
enter
shlb
add
inc
or
dec
cmp
mov
cli
cs
push
sbb
xor
mov
pushf
jnp
das
rol
rorb
and
sub
ror
orb
mov
jo
mov
aas
outsb
jl
std
mov
ficompl
ljmp
dec
mov
stos
and
mov
jne
dec
shll
push
inc
xchg
push
sti
xchg
jae
jmp
fildll
fistpl
push
jle
aam
mov
insl
cwtl
insl
fdivp
inc
je
cmp
mov
mov
push
gs
aas
inc
inc
fs
push
je
mov
ja
in
scas
add
rolb
js
adc
xchg
outsb
insl
adc
cmpsb
adc
sbb
mov
adc
adc
or
push
inc
or
sbbl
dec
call
xor
test
faddl
add
xlat
sar
cmpsb
mov
xchg
lcall
add
cmp
push
sahf
ret
call
cmp
stos
adc
adc
mov
aam
lret
stc
xchg
fwait
pop
cmp
test
mov
adc
sbb
push
call
or
mov
jns
das
in
mov
mov
mov
pop
movsb
push
loope
inc
fdiv
sbb
sbb
ret
xlat
repnz
fcomp
call
sbb
inc
mov
add
push
sbb
add
pop
sbb
out
dec
in
or
leave
fwait
mov
imul
mov
add
jecxz
adc
pop
stc
fs
js
imul
iret
add
mov
mov
pop
adc
jne
icebp
xor
adc
or
pop
scas
and
xchg
sbb
mov
sub
pop
test
call
aam
mov
mov
popa
jno
scas
fistps
jg
int
or
push
push
push
xchg
aad
xchg
scas
xor
fistpll
incb
fwait
lds
cmpsl
pusha
or
jmp
ret
sbb
repnz
cmp
repnz
pop
stos
test
imul
in
ret
out
or
xchg
test
lock
sbb
pop
sub
data16
or
pop
mov
mov
and
jbe
add
fistpll
mov
adc
cwtl
add
add
movsl
sti
push
push
lret
es
pusha
and
mov
add
mov
mov
xor
test
adc
mov
test
mov
pop
out
pshufw
lock
lahf
ret
cmp
mov
or
push
ja
pop
add
adc
mov
add
mov
ficompl
cmpsb
ljmp
push
inc
outsb
jmp
inc
fisubrl
mov
pop
xchg
lods
and
clc
push
lods
ret
mov
xor
in
sbb
js
sbb
and
movsb
and
mov
cwtl
popf
int3
jg
mov
add
test
add
daa
shlb
sti
fldt
inc
push
les
inc
cmp
in
xchg
lock
add
and
fidivl
cmpsb
adc
push
mov
outsl
or
sbb
ds
cmp
xor
fadd
pop
cmc
mov
cli
jno
daa
and
je
outsl
hlt
mov
dec
mov
repnz
inc
and
pop
xchg
incb
push
scas
jne
cmp
push
jmp
or
inc
jo
in
mov
push
sahf
jb
inc
bnd
or
mov
lods
sbb
pop
push
inc
push
mov
shr
je
push
pop
jbe
clc
js
sarb
or
negl
in
mov
nop
xorl
push
int3
pushl
je
pop
jno
or
mov
dec
push
ret
nop
icebp
mov
cmp
call
push
pop
loope
lret
test
mov
adc
rol
pop
pop
push
mov
loopne
push
test
aaa
and
mov
mov
shll
cld
inc
inc
repnz
inc
mov
mov
or
push
shlb
mov
fucom
outsl
add
sbb
jbe
mov
in
test
out
push
sbb
adc
out
dec
push
and
les
xchg
sub
jne
push
fidivl
xorl
pop
mov
lock
add
sbb
adc
mov
into
jmp
mov
imul
cmc
ljmp
jb
xor
cmpsl
faddl
movsl
cmpsb
aas
sbb
add
push
lret
or
out
adc
mov
mov
cltd
mov
dec
dec
or
outsb
xchg
test
jbe
test
cmc
or
add
rcll
fidivrl
or
test
je,pn
aas
mov
pop
jno
lea
jne
or
xchg
ficoml
jp
popa
scas
or
dec
rcl
and
jbe
mov
jbe
or
or
cmp
xorl
lods
mov
sbb
jge
fwait
jmp
fsubp
push
pushf
dec
add
test
sub
addr16
enter
mov
outsl
sbb
mov
movsb
into
int3
pop
imulb
pop
push
lods
addr16
xor
and
or
push
pop
fidivl
pop
int3
mov
jne
push
add
lret
jns
push
or
push
pop
or
scas
aam
and
xor
aaa
call
adc
mov
cld
inc
aaa
mov
in
adc
repz
push
mov
add
jmp
insb
imul
mov
fstps
adc
ret
scas
cmp
push
fstpt
jo
shl
jbe
mov
je
sub
testl
pop
mov
lods
or
cmp
sbb
pusha
fmuls
xlat
inc
add
xor
sbb
pop
or
in
or
adc
fiaddl
inc
rol
rcl
sbb
pop
cmc
idivl
test
lcall
mov
loop
cs
xchg
mov
or
add
gs
xchg
jbe
xor
add
inc
call
pop
stos
pushf
jle
xchg
clc
mov
imul
sub
mov
sahf
sbb
push
stos
mov
push
mov
xor
jg
mov
mov
nop
xchg
adc
sahf
enter
jbe
add
push
and
outsl
mov
xor
jbe
fldt
mov
rcll
mov
ret
mov
jmp
shrl
jmp
shlb
fldt
lds
sub
sarb
pop
stos
andb
or
shr
mov
sub
test
clc
or
mov
mov
sbb
pushl
cmpsl
inc
inc
pop
sub
adc
scas
std
fs
pop
icebp
outsb
mov
fbld
call
and
push
mov
adc
fistpl
pop
and
fiadds
mov
jg
and
pop
adcl
inc
fisubrs
jbe
mov
jae
mov
cmp
data16
inc
sbb
hlt
and
int3
push
mov
mov
jnp
mov
icebp
pop
mov
gs
int
xor
cli
or
insb
addr16
mov
sarl
inc
pop
icebp
sub
sbb
fs
sub
int
jge
mov
push
xor
or
in
cmpsb
rcll
lods
ss
outsl
pop
rclb
or
icebp
cmp
movsl
icebp
adc
dec
ja
ficomps
mov
adc
xchg
jge
pop
adc
inc
stos
cmp
pop
and
cmp
aam
dec
ja
pop
mov
test
add
pushf
push
mov
and
dec
in
inc
pop
lock
in
push
cli
inc
or
cwtl
cli
add
icebp
fdivs
popf
sbbl
or
mov
or
lahf
inc
pop
subl
outsb
shr
mov
or
scas
fwait
xchg
lods
das
inc
fs
cmp
jns
inc
jno
lock
orl
cli
int
loopne,pn
sub
cli
outsl
mov
sbb
cli
inc
incl
je
call
cmp
sbb
add
out
cli
pop
clc
negb
inc
or
adc
repz
call
filds
cli
cmpsl
lahf
lret
mov
aaa
pop
subb
or
pop
scas
call
call
fildll
cmp
mov
xor
popf
fdivrs
js
push
pop
jnp
aad
sarb
adc
mov
push
in
scas
mov
aas
xor
mov
or
das
lret
loope
rcrb
pop
adc
out
outsl
cmc
rcr
pop
adc
call
hlt
fs
adc
fimuls
mov
mov
and
dec
aad
je
and
dec
and
or
mov
daa
sbb
outsl
pop
add
pop
rolb
fcmovu
adc
inc
mov
mov
push
and
inc
xchg
push
push
add
mov
pop
pusha
add
hlt
hlt
mov
push
mov
pop
cli
pop
ljmp
jae
jo
icebp
xchg
adc
std
fisttpl
jbe
pop
xor
dec
gs
sub
cli
or
and
repz
or
cmp
bound
test
sub
push
cmpl
in
std
popf
test
cmp
jne
outsb
mov
ja
jb
pusha
dec
mov
cmp
xchg
incl
cmp
mov
push
std
sbb
out
popa
adc
aam
jmp
int3
mov
inc
fs
and
bound
aad
add
adc
sbb
call
shlb
push
add
call
add
and
lods
and
outsb
cmpsl
cs
mov
jl
xor
add
inc
aam
sbb
in
repnz
or
rcl
fstpl
mov
dec
and
inc
popf
aam
das
lock
xchg
lea
je
lea
mov
inc
ljmp
mov
bound
cmp
aam
rcrb
add
sbb
stos
push
cmpsl
test
pop
cld
movsl
sub
mov
jo
dec
and
loop
and
pop
mov
xchg
or
mov
aad
inc
jns
or
sub
inc
cmpl
and
insb
in
adc
aaa
js
std
adc
outsl
inc
add
ret
aaa
ss
aad
lock
call
sub
std
jbe
mov
dec
sbb
pop
mov
fistpl
call
daa
lret
xor
push
sbb
orl
adc
aaa
fucomip
xor
or
xor
mov
add
je
insl
lcall
pop
lods
xchg
or
mov
sub
aad
jne
lcall
or
out
or
das
mov
cmp
cmc
imul
mov
mov
out
add
icebp
jne
mov
inc
outsb
aaa
mov
xor
sbb
adc
call
inc
mov
rcrb
aas
mov
sub
adc
push
sbbl
test
mov
mov
loope
mov
les
addl
sbb
xor
bound
cmpl
mov
mov
in
mov
das
sub
sub
shrb
push
aaa
inc
jne
xchg
pop
or
adc
lret
fistl
xchg
out
inc
mov
cmpsb
or
je
movsl
or
or
rcrb
xor
sub
loopne
inc
jb
out
add
push
stos
add
rorl
out
inc
push
js
aaa
arpl
pushl
imul
dec
inc
mov
add
inc
mov
stc
pop
adc
inc
dec
add
jmp
and
fldt
stos
addb
js
and
mov
jns
push
jle
add
add
in
outsl
mov
dec
add
push
adc
into
mov
xchg
jge
out
fadd
inc
imul
test
ss
aaa
or
js
dec
pop
or
xor
outsl
std
add
mov
inc
push
je
cmp
xor
sub
pop
inc
add
mov
jns
xor
inc
mov
inc
jmp
mov
xor
xchg
xchg
push
ljmp
call
sarb
ret
inc
dec
cmpsl
inc
push
js
rcll
add
push
sub
fdivs
cwtl
lret
fwait
sar
lods
pop
imul
xor
mov
ja
ja
mov
or
out
arpl
pop
lock
jb
pop
fists
mov
push
inc
mov
in
mov
inc
bound
mov
sbb
xor
mov
or
mov
dec
add
add
xor
ficomps
popf
lock
repnz
jne
sbbb
jae
mov
dec
inc
or
bound
mov
pop
clc
nop
xor
sarl
jne
sbb
jle
inc
daa
push
stos
xchg
imul
add
or
daa
pop
sbb
rcl
xor
movsl
xor
mov
ficoml
inc
mov
sub
or
add
out
push
clc
jne
add
push
cmp
and
pop
push
mov
aaa
add
adc
mov
fs
xor
xchg
movsb
fs
jle
inc
aaa
les
and
jecxz
clc
in
sub
test
adc
or
inc
pop
jae
sbb
in
insl
int3
imul
dec
push
jmp
or
xor
fiadds
cmp
jno
pop
sub
imul
aam
in
or
inc
pusha
push
sub
scas
push
dec
lock
shr
test
add
push
inc
sbb
stos
lea
mov
filds
outsb
jne
jne
mov
nop
movl
mov
loop
mov
inc
add
out
popa
lret
add
enter
push
push
mov
data16
or
pop
in
mov
movl
push
pop
call
adc
mov
das
adc
jae
aas
call
inc
nop
rcr
or
cmc
add
jne
push
add
pop
lds
jge
clc
in
xchg
ja
je
push
jecxz
sub
fxch
add
orb
stc
ret
cli
or
bound
pop
sahf
loope
out
push
jnp
pushl
push
push
sbb
ret
or
jb
stc
in
sbb
sbb
shl
stc
add
je
or
fisubl
adc
clc
add
inc
sbb
adc
adc
cltd
or
nop
aam
cmc
or
leave
push
or
inc
dec
movsl
imul
fldt
fsts
in
and
int3
cmp
add
and
push
rcrb
adc
bound
xor
push
fwait
mov
gs
jnp
xor
sar
or
jle
and
cltd
andb
dec
mov
cmp
sti
push
jns
test
jg
add
inc
sub
lea
ret
or
push
dec
aas
cmpsb
jno
repz
cli
xlat
jbe
call
dec
aam
sbb
je
lret
nop
jb
push
shll
mov
jl
mov
out
or
lcall
insl
push
aaa
xchg
ds
add
or
icebp
ja
jge
mov
out
inc
push
and
xchg
pop
jp
dec
std
ffree
negb
sub
pop
pop
sub
lock
loop
jne
or
das
or
insl
mov
mov
scas
insb
add
mov
jge
sub
orl
and
mov
jnp
pop
lret
adc
and
adc
arpl
mov
pop
mov
lret
imul
iret
mov
cmpsl
add
sbb
ret
dec
jbe
movsb
addb
movsl
cmp
jb
movsb
or
pop
adc
mov
in
jae
sub
sbb
and
ficoms
mov
sub
jge
or
subps
or
das
fcomps
mov
push
sbb
ret
cmp
inc
jns
das
lret
enter
ja
fmull
js
je
jbe
not
mov
push
aaa
adc
mov
jnp
cmp
inc
test
jne
cmp
sub
repz
mov
fistpl
lds
add
shr
add
std
push
xchg
popf
movsl
inc
mov
aam
inc
push
add
jl
sbb
add
movsb
jae
pop
mov
loopne
es
adc
enter
rorl
sbb
cmpb
sbb
adc
cmp
pop
adc
adc
dec
pop
fwait
scas
mov
sub
mov
add
movsl
mov
je
pop
das
sbb
dec
fdivrs
inc
pop
loop
les
sbb
sub
xchg
sbb
mov
decb
imul
adc
hlt
and
clc
and
adc
pushf
std
adc
add
and
mov
stos
inc
fiadds
inc
lds
das
pop
pop
pusha
ret
mov
into
jae
fimull
fisubl
xchg
pop
push
xchg
ljmp
sub
aad
and
xchg
mov
and
in
in
and
sbb
fbstp
mov
lods
inc
jb
scas
push
mov
lods
insl
popa
imul
in
loope
add
lock
sbb
daa
icebp
cmp
mov
push
test
rcrl
insl
pop
movsl
clc
sbb
add
mov
push
cld
call
pop
xor
jle
inc
pop
mov
icebp
inc
call
popf
mov
fisubrs
cmp
rcrl
cmp
sub
sar
mov
fbld
push
dec
pop
and
lea
sbbl
shl
fldt
pop
test
adc
dec
sbb
aaa
inc
stos
xchg
mov
mov
stos
loop
add
stos
add
fiadds
lret
shl
fildl
call
inc
mov
inc
ja
jle
fildl
cmp
fisubrs
inc
jne
cmpsb
pop
je
or
xlat
in
fcoms
inc
enter
xchg
push
or
push
push
adc
test
outsl
pop
loopne
movsb
fidivs
push
add
push
sub
sbb
lock
mov
cmp
aam
lods
loop
sub
xlat
call
test
adc
fistps
popa
stos
lret
push
in
je
jne
cltd
fsubr
mulb
ja
mov
ret
pop
sbb
inc
push
mov
dec
sbb
inc
mov
pop
aam
sti
loopne
push
ja
dec
xor
cmp
je
ret
je
or
inc
pop
pop
fildll
inc
and
sub
sti
in
cmpsb
ucomiss
xor
adc
test
sbb
push
mov
rcr
call
scas
add
js
inc
sti
pop
fnsave
je
ret
push
les
add
add
push
adc
mov
mov
inc
sub
in
jbe
hlt
jmp
xchg
adc
sbb
negb
push
loopne
or
jmp
jmp
out
add
fildll
addr16
and
jp
push
fisttpl
ljmp
pop
push
adc
daa
scas
sti
pop
push
add
dec
and
jecxz
je
stc
jne
out
fimuls
cltd
test
jo
sbbb
call
popf
or
xchg
cli
out
loop
orl
call
js
imul
sbb
addb
out
xchg
sub
inc
inc
insb
scas
clc
pop
dec
add
or
xorl
pop
inc
xor
pop
sub
bound
aad
inc
test
push
fidivrl
xlat
or
in
push
cmp
mov
lods
push
loopne
push
lea
mov
dec
fs
rol
inc
roll
cltd
mov
movsl
ja
xchg
jp
inc
jl
pop
outsb
je
les
jns
xchg
out
ja
push
aaa
sbb
cli
mov
jbe
dec
insl
sbb
lahf
or
inc
or
push
push
cmpsb
stos
sub
insl
and
mov
mov
xor
mov
aam
sbb
pushf
pop
dec
into
jge
sbb
sbb
outsl
mov
adc
fstpt
sbb
jb
pop
sbb
fldl
jge
mov
ja
push
andb
xchg
jne
leave
pop
inc
dec
push
pop
fsubrs
jbe
sbb
test
inc
fidivl
orl
loopne
pop
dec
mov
fwait
mov
mov
into
xchg
mov
js
cmpsl
jp
xchg
adc
pop
int
or
js
push
je
aam
scas
mov
fldcw
sub
lahf
jp
push
aam
mov
jmp
xor
cmp
loope
mov
push
cmc
xor
xchg
jns
or
or
test
fldl
cmp
gs
ja
mov
ret
sbb
inc
je
icebp
pop
mov
into
or
sbb
cmpsb
jle
jo
mov
or
es
pop
or
push
adc
inc
in
mov
sbb
cmp
mov
and
pop
idivb
mov
and
sub
mov
inc
or
outsb
pop
je
test
cld
dec
outsl
in
dec
ds
jmp
and
mov
or
ja
pusha
je
int
das
add
loop
fwait
stos
or
mov
mov
jno
sub
loop
jp
mov
aam
jno
aas
sbb
mov
add
xchg
mov
sbb
mov
add
lds
call
push
outsl
loopne
jne
ja
xlat
inc
in
mov
push
cmc
fdivs
loopne
outsl
rclb
mov
sub
adc
mov
mov
in
xor
mov
and
test
call
aaa
cmp
mov
inc
cmpsb
xchg
or
fucomp
test
adc
sbb
call
daa
or
jge
and
pop
cmpb
lret
jo
and
insl
loope
psraw
dec
mov
jbe
push
lods
inc
xchg
push
pop
inc
cld
fldenv
jl
adc
jecxz
or
pop
lock
inc
cmpsl
xchg
lock
xchg
jnp
adc
ja
inc
pop
fbstp
or
cvttps2pi
jle
xlat
in
in
jmp
aaa
jae
inc
orl
call
into
lods
jle
repz
in
xchg
sub
mov
pop
aaa
out
enter
or
clc
movsb
in
adc
sbb
mov
add
push
jns
xor
pop
into
rcll
sub
movsl
inc
xor
inc
lret
jns
adc
data16
rorl
sub
push
add
fistpll
inc
jb
pop
adc
jge
or
fidivs
and
jle
pop
test
add
outsl
mov
mov
fildl
jg
adc
sub
in
pop
call
jge
and
jns
mov
lahf
jb
mov
xchg
push
inc
inc
push
jmp
rclb
and
pop
cmpsl
mov
in
add
push
mov
xchg
push
inc
push
or
cmp
lds
push
insl
or
cmc
mov
pop
dec
jno
adc
loop
pop
cmpb
sbb
test
mov
lahf
call
mov
arpl
push
rcll
cmp
not
inc
cld
pop
jl
adc
clc
mov
xchg
imul
adc
inc
outsb
mov
loop
xchg
dec
mov
lods
lods
or
inc
ja
jg
das
add
dec
inc
jo
push
sub
push
sbb
stc
xchg
pop
aam
push
aad
mov
in
cmp
push
into
cmpsl
stos
in
jle
add
outsl
into
cmc
push
push
push
inc
jae
pop
add
movsl
fsubrl
fimuls
xchg
dec
out
or
cmp
lock
insl
in
and
mov
add
aad
incl
push
insw
jnp
js
enter
nop
push
xor
mov
push
fwait
out
scas
sbbb
subb
out
adc
xor
mov
popa
out
lea
dec
inc
loop
ja
mov
iret
and
aad
sbb
ljmp
clc
testb
push
xchg
mov
invd
sbb
lea
int
and
data16
push
inc
push
inc
cmp
sbb
insb
fistps
push
sbb
iret
push
jge
push
loopne
pop
arpl
push
lock
lock
adc
or
xchg
je
das
inc
pushl
ret
adcl
jg
dec
xorb
testb
out
push
and
pop
shl
scas
mov
pop
stos
push
jl
andb
add
out
test
into
xchg
and
ffreep
pusha
rolb
mov
mov
push
cmp
out
xchg
aaa
xchg
enter
xorb
imul
add
fcmove
in
out
push
es
out
aas
add
adc
jecxz
stos
inc
pop
pop
push
shrb
iret
sbb
fs
inc
mov
mov
std
inc
aas
call
decl
xchg
mov
mov
mov
repz
jae
lock
flds
outsb
fbstp
fs
scas
sarl
js
mov
mov
xchg
push
in
add
out
sub
adc
fcomi
push
stos
xchg
stc
add
pop
add
clc
lea
jae
dec
jne
sub
and
cmp
mov
fisubl
xor
data16
call
out
jbe
das
xor
inc
inc
fadds
test
arpl
out
es
lret
xchg
lea
dec
sbb
xchg
fmuls
inc
and
push
ret
mov
jmp
addb
imul
adcl
jmp
shll
insb
dec
mov
repnz
or
fildll
lods
xchg
into
inc
push
stc
das
test
mov
cld
adc
xchg
pop
sub
dec
mov
mov
in
call
and
dec
adc
pop
cmp
inc
inc
gs
sub
inc
fldt
dec
adc
cwtl
xor
cltd
adc
std
aam
xchg
xchg
imul
rorl
push
sarl
add
xor
repz
sahf
mov
outsb
std
xor
stos
addr16
and
jbe
fdivs
fisttpll
mov
faddl
pusha
sar
lea
cmp
iret
mov
cli
fld1
cld
add
xchg
mulb
adc
mov
popa
cmp
xchg
push
and
sub
xchg
loope
sbb
or
or
push
inc
inc
xchg
cmp
mov
aam
gs
push
sbb
xchg
and
sarl
ljmp
aad
jmp
fldl
subb
out
push
or
jmp
je
in
lret
xor
loope
mov
daa
dec
inc
fdivrl
inc
pop
sub
test
loopne
fildl
cli
jne
sbb
aaa
sub
out
jbe
jl
sub
cmp
mov
jp
or
fbstp
xor
push
adc
fimull
mov
mov
sub
shrl
jmp
test
jge
cmp
sbb
or
outsb
fstp
pop
outsl
mov
push
and
mov
or
pusha
insb
dec
shlb
jg
add
add
mov
push
jbe
inc
sub
pminub
std
jbe
rclb
pop
movsb
add
add
and
cli
push
in
jb
stos
xchg
stos
cwtl
cwtl
lods
icebp
or
outsl
mov
xor
mov
dec
adc
popa
incb
inc
and
rorl
push
push
loopne
xchg
jne
mov
pop
push
cli
test
fldl
mov
add
inc
sbb
sbb
pop
and
mov
adc
adc
xchg
mov
roll
fwait
insb
xchg
pop
aaa
mov
inc
add
aam
lods
and
dec
daa
dec
adc
das
inc
jbe
cmp
push
sub
xchg
cltd
orb
fstpt
fdivs
pop
aad
es
mov
out
pop
adc
adc
jb
mov
push
adc
out
dec
stos
xchg
call
mov
sbb
push
in
cmp
mov
rorb
cmp
call
setne
std
lea
lret
ss
jl
icebp
scas
mov
ljmp
sbb
ljmp
mov
je
jb
in
aas
loope
mov
mov
lea
and
cmp
or
inc
dec
jmp
adc
and
sbb
add
ret
inc
dec
xchg
adc
inc
mov
mov
popf
dec
mov
lea
sub
push
shr
adc
inc
enter
jno
popa
fiaddl
in
enter
lods
push
nop
xchg
shrb
ja
adc
xchg
push
pop
inc
inc
lret
jmp
inc
lret
jmp
fstl
and
jo
sbb
fnstenv
ds
and
adc
inc
xor
mov
mov
jno
inc
cwtl
dec
jp
dec
aam
ljmp
and
incl
ret
pop
jo
or
js
inc
out
sbb
aad
cld
adc
or
mov
add
xchg
inc
lret
adcl
into
rcrb
pop
mov
cld
dec
sbb
cmpsl
ds
and
push
test
les
mov
mov
in
inc
pop
add
jle
adc
imulb
rorb
fldenv
lock
clc
adc
pop
icebp
nop
push
mov
cmp
mov
in
cmp
mulb
in
sbb
cltd
sub
push
xchg
sbb
sbb
sub
rcrl
cmp
arpl
jmp
add
add
dec
jns
mov
aam
lods
and
xchg
cltd
imul
fistpll
mov
insl
ljmp
cvtpi2ps
mov
icebp
cmp
loope
add
out
inc
es
cmp
or
mov
js
scas
add
mov
xor
and
rolb
addl
mov
mov
push
cmp
sbb
pop
aaa
dec
adc
and
shrl
data16
pop
cmpsl
pushf
xor
push
pop
add
or
loop
dec
jno
jnp
fisubrl
mov
mov
mov
clc
push
push
jecxz
dec
push
je
in
loop
pop
sub
popf
pop
mov
cli
dec
lods
pop
sbb
mov
ljmp
mov
adc
pop
flds
out
loop
cmp
dec
inc
sahf
cmp
andb
fdivl
push
sarl
cltd
and
pop
cli
fstpl
dec
aaa
stos
inc
pop
ret
mov
sub
mov
sub
pop
cs
sbb
call
sub
and
call
mov
cmp
out
in
push
loopne
push
nop
ds
push
adc
loop
dec
ret
or
loop
push
mov
jecxz
or
jmp
xor
inc
sub
sbb
ljmp
sbb
pop
jecxz
or
inc
std
outsl
fcomps
xor
mov
je
cld
inc
daa
movsl
fisubrl
lods
mov
cmc
rcr
lock
orl
fs
cmpsl
lahf
lea
movsb
or
rcr
xchg
push
ds
loope
lods
sbb
pop
sub
jb
pop
les
faddl
jle
adc
jnp
sbb
insl
mov
cmp
nop
cltd
inc
sub
divl
xchg
dec
sbb
aam
or
xchg
add
test
out
fdiv
push
std
add
xor
sbb
insb
mov
out
sub
or
in
push
test
inc
ds
mov
fcmovu
stos
std
call
push
adc
adc
mov
lret
sub
pop
mov
jo
out
test
mov
call
andb
lcall
jg
xchg
inc
mov
jns
push
iret
mov
sbb
test
adc
jns
out
or
sbb
lret
inc
lret
mov
mov
rorl
out
daa
lods
aad
movsl
sub
push
inc
ljmp
cmp
or
mov
add
ret
cmp
xlat
xchg
pop
adc
fistl
pop
js
or
adc
push
sub
sub
and
mov
or
add
push
push
arpl
fidivl
jge
sbb
ret
jge
mov
mov
cmp
outsb
fucomi
lock
sarl
inc
xchg
xchg
mov
push
icebp
daa
arpl
mov
pop
int
hlt
imul
pop
mov
inc
or
or
push
jp
js
enter
dec
loope
sub
outsl
rcrl
or
and
je
arpl
sti
sbb
xchg
inc
or
cmp
xorb
pop
jle
mov
mov
imul
adc
jno
sbb
jg
adc
fcomi
jmp
add
lea
mov
scas
or
mov
sbb
adc
dec
and
inc
cmc
mov
sbb
incl
inc
xor
and
mov
scas
xchg
adc
test
cltd
push
sbb
std
push
aad
jne
mov
add
pop
loope
icebp
lahf
aad
in
sbb
call
pusha
and
xlat
jnp
mov
push
cmp
adc
andb
jge
sbbb
ljmp
inc
jle
ret
xchg
inc
cld
dec
pop
inc
sbb
cmpsl
test
aaa
fimull
jne
insl
sbb
sub
addr16
lcall
rol
push
into
mov
mov
pop
test
cwtl
pushf
icebp
cmp
das
sbb
je
mov
mov
daa
enter
cmc
xchg
fwait
insl
test
cs
cmp
adc
push
lds
inc
lods
or
sub
ret
xchg
jo
jecxz
or
aad
ds
dec
aad
jg
scas
xorl
leave
jne
je
mov
jp
sub
loope
jle
nop
imul
cwtl
inc
mov
mov
sbb
cld
lods
or
daa
jbe
pause
ret
push
cmp
inc
pushf
push
adc
adc
or
mov
outsl
in
mov
sbb
sbb
pop
fucom
push
xorb
cmp
adc
sub
xlat
mov
pop
mov
adc
push
sbb
xlat
insl
jg
and
mov
fisubrl
jbe
mov
xorl
sbb
adc
sub
scas
in
cmp
inc
shrb
jb
roll
push
ljmp
hlt
sbb
imul
pop
add
xor
cmp
xor
jae
push
outsl
add
jg
orb
mov
adcb
and
and
out
ss
push
or
mov
dec
pop
das
cmc
and
jg
xorl
int
cmpl
gs
and
aad
cmc
pop
test
loop
inc
jo
jnp
sub
add
sub
pushf
add
push
in
fucomi
mov
or
pop
sub
cmp
pop
jb
mov
sbb
pop
cmp
push
hlt
xchg
sub
fdivrl
rol
push
sbb
push
ret
and
push
je
pop
fistps
fcomps
add
push
fcoml
mov
insl
mov
outsb
push
xor
rcl
ret
mov
outsl
inc
movsb
inc
xchg
lock
into
push
sub
movsl
dec
cmp
das
shlb
and
sbbl
xor
aad
adc
ss
popa
mov
mov
jne
sbb
xchg
jo
icebp
sub
adcb
jmp
push
aas
popf
push
adc
add
mov
xchg
sbb
mov
adc
andb
shlb
mov
test
pop
cmc
xchg
mov
test
fisttpll
lret
add
xor
mov
gs
cmc
xchg
jl
call
movsl
mov
adc
subb
insl
dec
popa
stc
nop
mov
sbbl
fs
xor
ljmp
cs
cmp
out
loope
mov
xchg
adc
clc
adc
cmp
push
cs
or
pop
hlt
or
mov
jl
dec
ljmp
push
jbe
jns
mov
push
mov
inc
jne
loopne
sbb
stos
adc
xchg
or
push
rcr
mov
movsb
xchg
mov
sbbb
add
shlb
xchg
mov
cld
push
push
pop
stos
fimull
jl
add
inc
dec
mov
icebp
enter
in
pop
mov
js
dec
mov
lods
hlt
inc
mov
aam
jecxz
push
and
or
mov
push
fsubrl
xor
jmp
ret
xor
add
dec
sub
xor
test
pop
pop
and
sarb
leave
sub
insl
adc
loope
pushf
pop
in
int
rdpmc
xchg
inc
xchg
ljmp
outsb
and
mov
inc
bound
test
pop
sub
or
adc
out
jne
jge
movsb
clc
or
inc
sbb
jg
sbb
out
ljmp
roll
add
adc
test
push
jne
sub
cld
test
aad
lock
jmp
add
xor
sbb
dec
push
add
call
inc
sub
dec
push
adc
imul
fbstp
sahf
pop
cwtl
adc
sub
sarl
lock
or
sbb
push
ret
fs
imul
rorl
ret
xor
fcoms
inc
or
call
cs
xchg
jo
sub
sub
lcall
pop
aam
jecxz
andl
ljmp
scas
push
mov
lret
stos
in
xor
movsl
push
jo
testl
mov
pop
test
test
jbe
or
jnp
outsl
pop
call
or
jmp
out
jnp
loope
test
sub
mov
in
or
push
fcmovnu
cmp
cmp
mov
adc
je
jbe
sbb
dec
add
adc
adc
and
xor
fisubrl
jp
lock
lret
dec
inc
ja
inc
pop
sbb
and
jecxz
lahf
push
adc
cmp
out
clc
adc
push
xor
test
fsubl
cmc
test
mov
xchg
pop
push
cmp
loopne
outsb
popf
repnz
mov
in
scas
pop
xor
cmc
add
roll
cld
push
loop
lods
and
aaa
inc
fbstp
enter
or
push
hlt
adc
fldl
jnp
hlt
jae
fs
movups
adc
sbb
or
xchg
inc
jg
adc
push
lods
sar
sbb
jne
mov
in
and
xchg
push
call
jecxz
mov
jbe
cs
dec
xchg
mov
hlt
adc
mov
and
cmp
jle
stos
ss
push
and
jge
cmp
add
xlat
cmp
or
jnp
or
ds
cld
or
outsb
jo
push
repz
fsts
dec
cmp
cwtl
and
incl
pop
cwtl
gs
sub
push
and
inc
sub
sbb
xor
js
das
adc
enter
xchg
xor
mov
and
push
outsb
inc
cmpsl
mov
mov
mov
and
mov
push
xor
decb
loop
lret
mov
inc
lea
cwtl
xlat
push
and
or
push
jg
fisttpll
adc
mov
and
pop
nop
js
lahf
outsb
xor
mov
or
bound
xchg
insb
mov
loope
ljmp
daa
iret
add
fisubrl
int3
repnz
rep
roll
and
and
aam
movsl
into
push
inc
ret
lock
or
imul
push
add
decl
cs
enter
mov
pushf
iret
jle
sub
stos
add
popf
fdivl
mov
sub
or
and
aas
mov
in
push
aaa
add
loopne
movsl
adc
xchg
stc
add
aaa
sub
push
lock
aam
push
sbb
sbb
jle
pop
jne
sti
imul
adc
lea
adc
adc
sbb
push
pop
js
fisubrl
push
dec
inc
pushf
pop
stos
loope
pop
ja
mov
cld
sub
andl
pop
lods
fildl
sub
mov
sub
mov
jg
nop
loopne
push
or
xor
stos
les
scas
pop
sbb
call
and
clc
fistpl
mov
sbb
mov
js
aad
push
pop
inc
fcmovbe
scas
push
aad
push
mov
test
cld
ret
mov
pop
mov
inc
in
xor
ja
neg
cmp
lea
jns
inc
push
rcr
or
mov
fbstp
or
out
sbb
popf
int3
call
fimull
outsb
mov
lods
push
mov
fstpl
jge
sub
push
mov
inc
pusha
mov
aam
or
push
jge
hlt
adc
jns
int
lods
mov
jb
sbb
sub
mov
adc
mov
negb
add
vpaddb
adc
push
fnsave
pushf
pushf
sbb
jne
movsl
or
mov
cmpb
test
add
jo
pop
insl
pop
mov
cli
inc
cwtl
sub
iret
loope
loope
fmul
pop
inc
adc
sub
push
fdivrp
dec
push
fnstsw
les
hlt
xor
sahf
xchg
mov
push
fmull
pop
add
cld
cld
mov
sahf
pop
add
repnz
sub
dec
lahf
je
and
mov
mov
xchg
subl
mov
outsl
fldenv
loopne
aam
lock
mov
lock
es
xchg
push
jmp
rolb
sub
mov
fcoml
bound
clc
or
and
mov
mov
pop
jne
xor
sbb
push
cs
adcl
cld
push
fisttpl
add
inc
mov
clc
imul
insl
cmp
cmp
push
cld
mov
addr16
je
and
inc
fistpl
adc
and
filds
sbb
xor
mov
and
inc
jae
push
rorb
xor
xlat
mov
imul
pop
arpl
faddl
test
in
pusha
mov
cmp
mov
decl
and
out
cmp
es
push
repz
push
aad
movsb
or
and
push
ret
mov
inc
push
popf
add
lcall
repz
in
pop
inc
jle
lds
insl
cwtl
loopne
xchg
jo
fildl
lods
mov
shlb
mov
lret
inc
cmp
arpl
pop
inc
in
pusha
mov
or
jl
sbb
push
jg
inc
pop
fldl
lret
mov
pop
mov
testb
xor
push
inc
call
fmull
sub
inc
push
mov
lock
movsl
push
fsubl
in
subl
add
daa
decl
rol
push
or
fidivrl
sbb
xchg
xor
mov
xchg
mov
sbb
mov
test
inc
mov
movsl
addr16
push
clc
mov
divl
daa
sub
dec
add
inc
hlt
mov
dec
adc
cmp
ror
repnz
adc
call
xchg
jmp
test
icebp
mov
xor
fbld
pop
arpl
add
ja
fisttpll
mov
faddp
pop
jl
sahf
arpl
jne
xchg
lahf
and
aam
add
or
jp
sub
pop
xlat
outsl
lods
and
lahf
movsl
jp
mov
inc
std
in
mov
outsb
or
mov
inc
push
jge
mov
pusha
aas
pop
arpl
sbb
push
push
push
test
mov
je
cmc
jne
lock
rol
cmpsb
es
stc
sbb
or
adc
stc
jno
cmp
int3
push
or
ss
fstp
ja
adc
add
data16
sbb
jo
and
mov
dec
pop
sbb
xchg
jle
std
sub
aas
adc
dec
ret
jmp
outsl
jo
sbb
or
outsl
mov
add
sub
or
lahf
fcmovbe
lret
cmp
push
mov
aaa
jge
mov
mov
mov
je
xchg
testl
outsb
mov
bound
inc
pop
inc
mov
adc
fcoms
mov
mov
or
inc
and
imul
hlt
fildll
pop
jb
or
je
cmpsl
xor
pop
das
jl
ss
outsb
jmp
leave
sub
mov
and
sti
pop
lcall
shrb
mov
idivb
repz
adc
je
stos
into
sarb
jne
dec
cmp
imul
push
aaa
push
add
cmp
repnz
mov
xchg
inc
pop
out
rclb
filds
inc
test
sub
add
sbb
das
sub
popf
cmp
add
movb
cli
sti
and
stos
sub
imul
push
outsb
loope
pushf
aad
cli
push
mov
or
cmpsb
outsl
shrb
or
jne
mov
pop
pop
and
push
and
mov
cs
jne
popa
lods
mov
sub
bts
xchg
imul
into
aam
cltd
arpl
movsl
dec
in
xor
jmp
add
jl
jmp
outsl
mov
imul
xchg
mov
test
push
aam
sbb
mov
jmp
or
adc
sub
xor
sub
loopne
dec
mov
sub
mov
stos
daa
or
fbld
inc
sub
das
cmpsl
adc
inc
fstpl
imul
mov
loop
mov
sub
lret
or
mov
jg
cmpsb
je
stos
add
push
ljmp
add
or
aaa
ret
mov
dec
or
jl
fnsave
jmp
inc
int3
pop
sbb
loopne
clc
rcrb
test
hlt
jmp
popa
je
out
clc
mov
jae
sub
cmp
pop
ret
cmp
xor
adc
add
inc
ds
in
push
cmp
and
mov
mov
sbb
jno
push
or
loope
call
xorb
and
std
jbe
call
sbb
insl
aas
aaa
je
mov
and
daa
pop
pop
cmp
repnz
push
pop
hlt
rcrl
cmp
adc
mov
cltd
mov
push
jle
jl
or
es
mov
inc
loopne
jbe
bound
lods
mul
adc
push
rorb
or
call
inc
sbb
jne
add
insl
jnp
call
test
push
int3
xor
cld
popa
outsl
aad
inc
xchg
sub
nop
fstl
add
aas
inc
cmc
mov
jle
pusha
mov
and
pop
mov
adc
loopne
jbe
and
cmp
outsb
test
pop
ret
mov
xorl
insl
in
push
divb
pop
jle
inc
xchg
fldl
repz
fs
and
nop
mov
cmpsl
test
inc
insl
xlat
clc
or
or
pusha
mov
push
lret
xchg
add
or
dec
sarb
loopne
or
insb
sti
and
xor
push
out
fisubrs
lods
adc
ret
xchg
xchg
add
loop
mov
mov
std
mov
mov
sbb
fildl
in
int3
inc
aad
cmc
iret
addb
loopne
add
jbe
fisttps
sbb
dec
jg
jp
jmp
sti
and
les
jmp
push
mov
push
jmp
jp
leave
xchg
adcl
pusha
imulb
ret
sbb
repnz
sahf
enter
rcr
lds
stos
or
add
push
ret
mov
xchg
mov
dec
pop
and
or
aam
mov
daa
mov
sbb
sarb
adc
lcall
sub
gs
mov
jg
jmp
mov
je
cmp
fdivrs
outsl
sahf
xor
sbb
pop
es
scas
and
dec
xchg
mov
lea
stos
pop
jnp
insb
cmpsl
ss
es
xor
mov
shl
mov
fwait
stos
dec
xchg
sub
inc
bound
dec
mov
push
rcrl
or
pop
mov
rclb
jbe
add
add
les
call
cmp
push
js
pop
sti
cli
jge
mov
loopne
adc
jns
add
mov
in
out
es
lock
inc
inc
rcrl
inc
fistps
xchg
mov
fucomi
fucom
stos
mov
sub
mov
inc
fistl
movsl
pop
pop
push
inc
xor
in
aaa
mov
subl
andb
and
rcrl
cmp
cld
jbe
into
rclb
rolb
rorb
push
outsl
lock
scas
or
out
aad
inc
fwait
pop
sbb
rolb
fistpll
aad
test
mov
mov
adc
pop
nop
fcmovnbe
inc
sarl
clc
inc
lock
inc
dec
lods
xchg
aaa
adc
inc
inc
xchg
js
insb
pop
add
test
mov
xchg
arpl
mov
aaa
cmp
mov
and
call
cmpsb
push
mov
jecxz
and
icebp
call
mov
lds
or
mov
adc
add
lret
mov
inc
mov
in
mov
xchg
inc
push
jne
fsubrl
divb
stos
sbb
xor
movsb
xchg
push
add
cmp
cmovne
pop
adc
sbb
cmc
and
push
xchg
sbb
dec
cli
test
sbb
mov
pop
jmp
hlt
push
mov
inc
jl
mov
and
loopne
popa
pop
jnp
je
cs
popf
pop
mov
dec
sub
jge
xchg
aas
cltd
ficoml
ficoml
sbb
and
pop
sti
sub
sub
xchg
lret
cmp
push
sub
in
fidivs
adc
daa
rorb
adc
mov
mov
xor
mov
mov
jmp
cmp
add
fisubrs
push
ljmp
adc
sbb
mov
inc
jo
mov
dec
adc
add
out
and
or
sub
sbb
xor
sahf
and
outsl
addr16
pop
hlt
fistps
sub
add
loopne
sbb
push
shr
sub
shll
insl
shll
push
adc
xchg
or
fs
dec
mov
mov
or
leave
insl
or
add
or
jo
sub
cwtl
inc
stos
sub
mov
mov
pop
outsl
xor
imul
gs
and
cmp
jmp
stos
xlat
or
or
and
inc
sti
push
or
ss
mov
xor
pop
into
mov
jbe
xchg
cmp
test
out
and
or
add
cld
push
aaa
mov
test
sub
je
mov
leave
jne
jbe
in
xchg
aas
push
outsl
and
adc
cmc
je
and
mov
sub
mov
pop
das
aas
nop
and
out
call
add
xlat
inc
mov
push
pop
mov
repnz
bndldx
or
xor
movsl
rcl
or
and
jne
push
add
pop
xor
fmuls
scas
mov
mov
inc
xorl
jecxz
lock
pusha
repnz
adcl
jnp
inc
inc
mov
adc
mov
jp
mov
inc
or
cmp
pop
inc
push
sbb
mov
adc
js
test
insb
inc
je
or
push
and
fldenv
jbe
stc
insl
add
sbb
cmp
inc
pusha
add
je
jno
push
insb
fbstp
mov
test
stos
inc
sbbl
mov
fucomi
xor
xor
adc
pop
insb
aaa
add
insb
pop
fsubrl
sub
xchg
mov
subl
pop
push
sub
repnz
mov
jg
xchg
sbbb
cmpsl
and
not
fnstsw
mov
dec
mov
inc
jle
stos
aas
insb
jne
fst
testb
mov
sub
adc
loopne
insl
push
gs
imulb
mov
notb
shll
lock
rolb
inc
push
callw
insl
jno
xchg
xor
ja
sub
mov
test
dec
stc
jb
data16
inc
sub
pop
ret
fldenv
pop
mov
leave
inc
movsl
mov
mov
popf
pusha
cmp
js
out
arpl
lds
add
pop
loope
or
xchg
das
into
jb
jbe
fildl
cmp
push
inc
fst
push
push
jmp
popa
sbb
pop
cwtl
mov
ss
pop
fldl
or
dec
add
push
fs
mov
movsl
mov
cmp
cld
cwtl
aas
pop
lahf
cs
sbb
pop
mov
out
pop
push
in
repz
jecxz
mov
push
dec
mov
insb
ret
aad
pop
stc
add
jno
xchg
dec
inc
pop
outsl
cmp
rorl
xor
push
fcomp
rorl
or
pop
jg
inc
mov
inc
mov
jb
fsubrl
or
mov
cld
loopne
xchg
insb
dec
jne
aaa
mov
adc
test
dec
add
dec
insb
mov
scas
aaa
adc
or
push
and
mov
inc
mov
dec
andl
pop
imul
mov
jge
fstpt
inc
dec
jne
sub
test
js
inc
jg
and
enter
adc
and
push
imul
jle
push
add
or
pusha
xchg
push
and
hlt
xor
arpl
or
mov
jb
add
lcall
shr
fidivl
test
scas
cltd
lcall
imul
push
push
icebp
push
ljmp
mov
xchg
sub
xchg
je
pop
jbe
jle
call
jnp
icebp
dec
aaa
leave
xchg
cltd
rolb
repnz
pop
mov
push
dec
jl
aas
out
call
aaa
or
lahf
pop
push
mov
mov
cmpsl
dec
mov
mov
mov
jne
mov
cmp
mov
mov
adc
idivl
dec
and
daa
hlt
pop
adc
enter
add
mov
iret
and
add
je
call
movsl
or
sub
push
mov
adc
jns
dec
outsl
mov
jmp
outsb
sub
dec
cli
iret
push
and
mov
fidivrl
mov
pop
cmp
lock
push
and
or
xchg
jne
mov
xchg
push
in
in
push
rorl
pop
pop
mov
mov
sbbl
pop
stos
lcall
into
aas
dec
push
rcrl
mov
xchg
jp
jp
xor
imul
and
paddw
xlat
sbb
out
mov
xchg
in
or
adc
mov
aaa
lahf
or
mov
adc
xor
or
daa
push
cmp
or
das
inc
call
jbe
fwait
popw
roll
mov
call
mov
push
aas
enter
jp
sbb
cwtl
imul
pop
xor
ja
push
and
push
nop
cmpl
out
ja
or
mov
into
or
popa
adc
fldt
push
sub
jb
xchg
negl
rorl
shlb
mov
adc
je
lret
bnd
fadds
adc
mov
lds
mov
mov
xor
add
add
xchg
icebp
pop
and
adc
xor
insb
push
push
jl
icebp
andl
mov
jge
push
ss
loope
inc
xor
mov
xchg
xchg
in
push
sbb
pop
xor
das
push
aad
dec
xor
fcoml
xor
in
push
mov
jp
test
fcoms
adc
mov
mov
ja
pop
inc
mov
dec
out
xchg
fwait
icebp
scas
stos
push
jg
in
js
lock
push
mov
cmc
add
outsb
sub
jge
enter
fwait
call
inc
jne
adc
adc
dec
cmp
and
icebp
mov
sub
xchg
stos
popf
sub
jg
test
add
call
adc
mov
xlat
pop
fisubrl
push
push
lea
scas
cs
loope
pusha
sbb
cmp
dec
adc
rcl
mov
inc
sbb
mov
inc
pop
xchg
rcr
xchg
pop
insl
jb
cli
aad
jnp
push
cmp
sub
rolb
iret
xorb
adc
fninit
sub
xchg
fcoml
mov
insl
mulb
lods
es
dec
mov
aas
push
hlt
mov
psubb
mov
dec
pop
loope
into
inc
addl
sub
ficoml
call
data16
test
push
fcomps
call
mov
and
and
repnz
inc
jp
je
or
lea
test
fildl
xchg
cmp
or
outsl
fwait
jb
jmp
insl
dec
sbb
aaa
cmp
jmp
fdivrs
and
lock
sti
adc
mov
inc
adc
jnp
push
mov
lock
pop
pop
xchg
jmp
fwait
sbbl
mov
sub
jmp
mov
pop
and
pop
test
push
push
xor
xor
hlt
shll
lds
xchg
adc
adc
push
jb
pop
test
outsb
mov
xor
std
call
stos
lods
push
sbb
jg
outsb
int3
out
call
push
cmp
xor
mov
in
test
test
stc
in
mov
jne
aad
jnp
je
inc
ds
inc
push
dec
jns
or
jg
int3
out
dec
add
incl
cmp
dec
call
inc
shlb
inc
hlt
dec
mov
scas
sbb
movsb
xor
xchg
daa
bound
inc
jmp
je
mov
enter
pop
hlt
inc
fstpt
or
test
fwait
jmp
cli
jno
sahf
mov
mulb
adc
sub
adcl
shlb
adc
dec
mov
loop
and
mov
inc
in
push
movsl
stc
in
inc
shll
jo
loop
xchg
push
clc
fs
popa
in
or
mov
mov
inc
clc
ret
adc
sub
mov
or
sbb
push
xchg
mov
fnsave
dec
mov
inc
or
dec
fwait
or
add
dec
popf
in
and
mov
jo
adc
nop
pop
xor
push
adc
dec
xor
xchg
mov
or
inc
sub
adc
lds
test
pushf
push
push
add
cmp
pusha
xor
cmp
je
xor
xor
pusha
push
mov
decb
jle
xchg
or
cmc
and
mov
mov
testb
ret
mov
loope
push
adc
in
into
cmp
dec
das
mov
xor
mov
stos
mov
pop
dec
pop
stos
out
cli
mov
cli
cmp
mov
pop
pop
dec
aad
imul
cmp
sbb
mov
outsl
mov
dec
jne
adc
push
ss
mov
or
in
testl
rorl
mov
adc
ror
mov
add
and
or
gs
pusha
mov
add
cmpsb
dec
sbb
out
adcl
dec
and
ds
mov
rolb
outsl
add
loop
push
mov
mov
add
rcrl
push
fidivrs
iret
pop
shll
into
pop
push
sub
or
jne
xor
push
adc
addr16
adc
add
inc
sbb
sub
pop
push
and
sti
imul
je
and
and
pop
cmp
jns
sub
sbb
js
bswap
andl
xor
mov
push
rcrb
into
loopne
sbb
std
push
push
fistpl
add
rcll
call
je
push
cli
push
loope
mov
stos
cld
push
ret
sbb
mov
shll
dec
inc
pop
lds
ljmp
ljmp
lds
sub
inc
fsubl
mov
test
mov
insb
mov
lods
in
adc
jbe
jb
cs
sub
push
outsl
sub
and
pop
les
rclb
aaa
or
cs
sbb
ds
add
jnp
push
mov
xchg
outsl
or
repnz
ds
mov
adc
and
sbb
rcll
jge
testb
pusha
mov
pop
ja
push
pop
adc
or
mov
push
jle
sbb
movnti
jae
push
jle
jmp
mov
inc
sbb
cwtl
imul
cmp
xchg
jb
pushl
pop
and
aaa
popf
lods
pop
push
adcb
ss
mov
jmp
loopne
mov
pusha
sub
push
outsl
clc
mov
adc
pop
lods
mov
pop
call
insl
sub
add
xchg
out
ret
lahf
clc
or
loope
pop
jmp
lods
mov
je
divl
ficoms
and
pop
fmul
les
icebp
movsb
add
cmp
ja
pop
mov
mov
cmpsb
mov
outsl
into
lods
adc
in
in
aad
shll
pop
mov
outsl
cmp
or
adc
jle
fs
mov
xchg
or
mov
aaa
push
lret
sbb
ds
insl
sbb
adc
mov
mov
pop
enter
push
jo
and
lahf
nop
dec
cld
lea
push
pushf
call
mov
bound
icebp
arpl
clc
sbb
sbb
ret
add
in
movsl
pop
cs
bound
mov
xchg
push
adc
sbb
mov
sbb
movsb
mov
test
xor
outsl
outsl
loop
jg
mov
js
movsl
dec
sub
mov
mov
inc
lock
sbb
divl
outsl
mov
add
pusha
inc
add
mov
sbb
jne
adc
push
mov
inc
and
jns
fiadds
mov
pusha
add
lock
and
push
add
ja
daa
sbb
out
mov
push
into
in
or
mov
bound
lret
fmull
lock
mov
inc
xchg
dec
insl
loop
ja
jmp
cmpb
test
push
dec
inc
loopne
and
adc
sub
push
fcoml
cltd
inc
adc
mov
sub
lea
loop
mov
fcmovbe
nop
sti
movsb
cmpsb
xchg
inc
mov
fcompl
sahf
outsb
movsl
cmc
inc
mov
adc
mov
mov
mov
ret
jo
jge
loope
lock
xor
inc
mov
ss
push
mov
mov
sub
sbb
mov
js
push
or
xchg
outsb
push
adc
rorl
or
inc
jns
ret
aad
xor
cwtl
inc
outsb
push
fisubl
xor
or
or
fcoms
cmp
jl
inc
inc
sbb
jmp
cmp
cmp
sub
lds
outsl
adc
and
inc
xor
test
pop
pusha
adc
mov
aaa
xor
push
jg
push
xchg
sub
sub
mov
call
sub
mov
mov
cmc
sub
shr
or
pushf
mov
or
bound
aad
xor
sbb
je
sub
mov
mov
mov
mov
sub
mov
lock
jne
push
mov
jmp
and
jbe
stc
pop
addr16
xor
push
ss
or
popf
or
je
xchg
sub
enter
fidivrl
aam
daa
jg
mov
inc
sub
imull
mov
jmp
cmc
mov
test
orl
js
adc
pop
or
fmull
pop
and
fdivr
loope
sbb
sub
add
inc
mov
hlt
inc
mov
int
test
xor
daa
pop
stc
cmpsl
fisttpll
rclb
dec
jl
sbb
jg
sub
fiadds
fcompl
lds
rolb
or
insl
hlt
rol
aaa
mov
cli
sbb
or
shrl
fcomps
cld
jecxz
and
jge
sbb
stos
mov
das
mov
mov
mov
imul
cmpsb
and
push
out
dec
mov
rcrl
ss
movsb
or
cmp
ficomps
or
jo
test
pop
rcr
xor
inc
cmp
stos
sbb
std
stos
add
adc
daa
jl
adcb
les
out
jg
movsl
decl
inc
xchg
jmp
lods
jmp
mov
cmc
jg
scas
mov
add
iret
or
jle
bound
or
nop
adc
stos
popf
repz
roll
pop
sub
jns
xor
cwtl
xchg
inc
adc
test
aas
xorb
adc
cmc
pushf
adc
fldt
sbbb
sub
adc
aad
insl
adc
mov
push
mov
add
pop
test
sub
mov
xlat
sbb
xchg
and
adc
fldl
rcrb
xorl
mov
int
jbe
imul
add
dec
jmp
jl
mov
pop
push
mov
mov
mov
mov
xchg
movsl
xchg
das
cmp
push
sbb
mov
sub
push
or
pop
divb
jp
leave
push
call
je
and
mov
inc
arpl
test
jp
jge
testb
sbb
fwait
push
xor
inc
mov
lahf
jo
lret
lea
mov
lods
ret
and
movsl
sbb
cmc
inc
bound
adc
mov
sti
jbe
xchg
adc
das
shll
inc
adc
and
jae
jb
subl
jg
jo
bound
adc
push
mov
stc
mov
and
pop
and
cmp
icebp
shll
orl
fmuls
aad
outsb
adc
pop
or
je
in
sub
stos
mov
adc
inc
call
sar
jge
mov
mov
lock
mov
fisubs
pop
adc
fsubl
lods
pop
loopne
cmp
and
das
icebp
pop
andl
push
test
out
mov
jns
xor
jnp
sub
in
das
shr
jns
push
push
xor
pop
and
jnp
cmp
inc
data16
inc
insl
fiaddl
out
cmp
mov
ficompl
in
jl
add
xor
or
es
pop
push
js
repnz
and
jbe
test
fisubl
adc
and
xchg
push
sbbl
int
inc
imul
pop
lods
or
test
jl
dec
xchg
sbbb
je
xchg
push
or
inc
outsl
pop
repz
call
stos
sub
data16
fwait
xchg
inc
fldt
jecxz
adc
ja
pop
andb
decl
adc
pop
inc
add
push
sahf
cmpl
mov
jg
call
shlb
jle
ss
inc
sbbl
or
pop
mov
hlt
inc
sbb
mov
fbld
gs
cli
xor
push
aas
mov
jmp
fdivrl
jne
jl
rcrl
sub
data16
and
and
ss
imulb
and
js
lea
jl
pop
sahf
pop
xchg
call
je
call
je
mov
testb
je
xchg
and
in
pop
and
test
xchg
outsb
mov
adc
pop
negb
popl
jne
mov
jge
fdivr
ret
jle
or
pusha
lods
xchg
mov
jg
cmp
in
adc
cld
inc
movb
dec
xor
or
adc
les
repz
insl
jmp
adc
and
popf
sub
fcomps
test
enter
out
sbbb
sub
loopne
fnsave
and
and
or
pop
std
popa
jno
push
add
outsl
cmp
push
das
and
inc
aam
cmp
mov
fs
and
test
and
dec
jmp
imull
and
jp
outsl
mov
add
pcmpeqb
ficompl
and
mov
push
not
mov
insl
ljmp
mov
pop
mov
mov
mov
lods
cmc
cmp
icebp
push
pushf
outsb
jmp
ljmp
lods
mov
dec
fs
inc
inc
and
aaa
imul
mov
jmp
pusha
pop
icebp
rorl
out
es
out
and
test
ret
jle
test
dec
mov
adc
adc
inc
ret
push
clc
inc
or
adc
fnsave
mov
sub
adc
sti
add
je
insb
jbe
inc
ja
jmp
dec
inc
jle
repz
push
test
jp
insl
inc
push
les
andl
mov
add
lods
cmp
das
mov
movsl
stos
rorl
or
dec
sub
iret
jp
mov
ficoml
push
mov
inc
sbb
clc
adc
test
inc
and
loopne
or
aaa
mov
jg
or
and
bsf
arpl
inc
xchg
dec
dec
call
daa
decb
adc
je
and
inc
sub
adc
addr16
sbb
fwait
das
dec
inc
mov
bound
mov
inc
cld
lahf
adc
lds
jl
jmp
shlb
ss
repz
mov
std
mov
add
adc
inc
insl
call
and
or
dec
jmp
inc
in
jnp
mov
jg
pushf
mov
adc
jmp
mov
lods
std
ret
and
mov
ss
and
push
movsb
fdivrp
sub
mov
jg
pop
sub
push
mov
arpl
mov
stos
add
add
movsl
pop
ja
add
fidivrs
ja
cwtl
sbb
inc
stos
add
mov
mov
aad
gs
or
incb
ja
push
inc
push
inc
pop
outsb
pusha
sbb
ficompl
sbb
inc
popa
jl
inc
test
lret
repnz
mov
jo
fdivrl
mov
and
into
leave
cld
pop
pop
and
mov
insl
ja
mov
fdivs
add
fidivs
dec
adc
and
incl
mov
inc
jge
hlt
js
pop
in
cli
hlt
pop
mov
fcoms
pop
xor
pusha
cmp
push
inc
aad
ret
cmpsb
pop
call
ds
popf
dec
inc
adc
pushf
xor
push
adc
out
add
and
cs
mov
test
mov
les
not
roll
pop
cld
aad
sub
fimull
shl
inc
sbb
or
cmp
mov
sbb
push
mov
mov
je
sbb
adc
ficoms
call
lea
mov
dec
lock
xchg
jb
int3
ret
push
dec
fidivs
and
add
mov
gs
mov
jle
pop
cmp
orl
das
icebp
stos
lret
and
sti
repz
insb
jmp
adc
data16
push
and
cmp
xchg
or
or
fwait
sbb
cltd
pop
je
cmp
jne
or
loop
inc
jp
loope
nop
inc
lret
cli
push
cltd
adc
out
inc
inc
fucomi
and
or
sbb
mov
out
sub
sub
adc
or
lahf
sub
xor
or
fdivrs
add
mov
call
lea
bound
clc
outsl
insl
xchg
andb
jmp
or
test
and
jmp
add
sbb
shl
push
sbb
mov
pop
test
subl
pop
cmp
jbe
sub
mov
in
ret
sub
pop
push
mov
jp
testl
iret
pop
and
into
aas
subps
out
or
lods
pop
pop
out
push
test
imul
mov
or
pop
pop
jmp
mov
add
lods
ljmp
es
inc
jmp
je
push
mov
xchg
je
es
mov
mov
sub
lods
mov
shrl
xor
insl
jb
jb
leave
aad
inc
add
lahf
lahf
fisttps
clc
jg
push
mov
xor
mov
jbe
adc
cmpsb
aaa
mov
jmp
dec
cmpsb
mov
mov
pop
sub
mov
mov
push
dec
rcll
call
cmp
call
outsl
roll
sti
xchg
cmp
push
push
inc
cld
test
xor
pushf
pushf
dec
mov
mov
xchg
sub
sub
xchg
mov
hlt
and
jbe
sub
sub
fisttpl
jge
pop
jnp
cmp
xchg
shlb
mov
gs
and
dec
bndldx
sub
and
xchg
adc
inc
jne
fimull
sub
cs
sbb
push
sarb
addl
stos
mov
sbb
es
and
frstor
add
lcall
and
movsl
ss
inc
jg
ja
jb
aaa
adc
mov
pop
jns
test
das
cwtl
lods
lock
inc
cmpsl
xchg
rorb
subb
cmp
fwait
mov
aad
inc
push
inc
xorl
aas
sub
pop
clc
push
xrelease
gs
or
push
dec
fdivrs
inc
cmp
mov
mov
mov
sbb
daa
inc
leave
inc
imul
mov
ss
push
je
adc
mov
mov
cmp
shr
mov
jecxz
jae
jl
adc
sbb
mov
cmpsl
std
ffreep
inc
add
jbe
jns
mov
adc
mov
pop
ljmp
data16
mov
call
rcrl
mov
inc
pop
cmc
xor
push
adc
sbb
lcall
xor
mov
into
mov
test
push
sbb
data16
adc
test
add
daa
jnp
dec
adc
in
cmp
aad
xchg
mov
add
lahf
mov
push
and
sbb
lock
pop
sbb
dec
sub
test
xchg
mov
inc
xorl
and
inc
mov
or
fildl
outsb
movsb
jmp
adc
sti
add
lods
cmp
mov
ja
push
push
or
lret
fsub
mov
add
cmc
inc
add
js
and
push
mov
dec
adc
or
xchg
jns
outsl
xchg
test
fcmovu
cld
popf
jne
cld
insl
mov
ljmp
or
mov
pop
dec
xchg
xor
and
enter
dec
jb
sub
and
andb
cmpsl
pop
jl
mov
iret
mov
or
repnz
dec
add
outsl
das
push
or
dec
andb
aad
mov
mov
push
jne
xchg
jae
mov
mov
xor
xchg
add
dec
insb
jo
push
outsl
xlat
scas
test
and
xchg
mov
mov
test
fbstp
mov
dec
out
mov
fldl
inc
call
lcall
push
iret
inc
push
jp
aam
mov
insb
icebp
adc
push
rclb
adc
sub
lds
out
mov
jp
inc
inc
jge
sub
mov
dec
js
pop
mov
imul
push
pop
xchg
adc
ret
jmp
inc
inc
out
sub
aaa
xchg
cmpsl
mov
leave
mov
lock
jg
adc
mov
pop
pop
or
mov
add
inc
sub
shl
inc
mov
cs
pop
addr16
mov
insl
std
mov
popa
lock
cmp
fadd
scas
jo
jnp
aaa
mov
in
and
add
mov
ss
stos
mov
cmp
pop
mov
ss
xchg
jns
data16
cmp
movsl
push
or
and
jns
dec
shll
cld
push
adc
pop
sbb
fistl
ds
bound
sbb
mov
or
and
sbbl
xor
hlt
sbb
imul
dec
loopne
lods
xlat
pop
xor
js
xchg
test
push
lahf
test
test
ljmp
adc
jge
mov
push
lea
insl
inc
jmp
and
das
pop
mov
js
fists
push
or
out
fwait
orl
cmp
cld
and
hlt
mov
mov
cmpsl
mov
push
mov
and
sbb
inc
movsl
pop
adc
sub
pop
jne
inc
ss
jno
lods
fiaddl
push
std
ret
push
xchg
bound
out
pop
test
iret
push
and
xor
or
fbld
mov
sub
jmp
shll
in
incb
mov
mov
mov
inc
movsb
outsb
lea
sub
stos
ret
subl
add
das
xor
lret
adc
ret
sub
dec
xchg
adc
call
sbb
in
outsl
mov
inc
or
popa
or
and
arpl
lret
lds
mov
inc
push
mov
mov
jg
cmp
sub
leave
and
test
inc
bound
jne
dec
js
inc
mov
mov
inc
cmp
insl
pop
cwtl
push
jns
or
mov
push
test
test
es
subl
xchg
cli
adc
or
mov
mov
inc
xchg
into
push
mov
mov
mov
mov
jl
adc
or
repnz
jae
or
adc
incl
push
mov
test
sub
sbbb
xlat
jmp
jg
pop
je
and
mov
daa
inc
dec
mov
inc
and
add
xchg
cs
or
int
orl
int
and
das
inc
sbb
sub
jg
add
jbe
lods
sbb
push
lea
lea
std
sub
mov
mov
dec
push
mov
into
mov
rorb
insl
xchg
xor
inc
jne
hlt
cmp
clc
inc
fiadds
push
mov
dec
rclb
pop
mov
stos
aas
push
jae
pop
mov
lods
mov
hlt
mov
insl
sbb
sub
mov
mov
mov
xor
scas
add
inc
xor
push
jne
xchg
push
roll
push
mov
pop
mov
inc
xor
dec
mov
jmp
mov
mov
sarb
mov
and
mov
aad
fs
cmp
mov
cmp
cmc
mov
cmp
idivl
jae
fildl
dec
or
imul
mov
jae
or
inc
nop
mov
addr16
push
mov
xchg
test
ds
sub
pop
push
or
inc
jae
jecxz
sub
stos
dec
nop
call
shll
pop
add
jae
xor
add
or
mov
in
jle
inc
ja
adc
mov
je
mov
mov
daa
hlt
sub
mov
mov
adc
xorb
sbb
fldcw
je
mov
or
or
push
imul
sbb
xchg
sub
arpl
and
stos
ficompl
je
aas
xor
pop
rcrb
xchg
hlt
jecxz
lds
lea
pop
mov
and
jge
mov
shll
pop
out
jne
add
push
or
pusha
cmp
fstpl
adc
aas
out
mov
fcoml
arpl
mov
inc
shl
stos
out
stos
adc
xor
xchg
xor
sbb
subl
add
stos
insl
enter
sub
imul
movb
cmp
aam
push
adc
in
cmpsb
sbb
mov
jecxz
inc
pop
inc
push
jecxz
jge
push
cmp
fildl
inc
pop
xor
jge
add
sbb
clc
call
mov
insb
das
imul
mov
xchg
test
jno
xor
outsl
adc
idivb
hlt
xor
outsl
ret
cs
inc
push
shlb
mov
and
xor
push
push
xorb
sbb
lret
fcmovnu
out
fcmovu
sub
inc
or
movb
mov
adc
dec
lock
jg
sbb
xchg
stos
push
mov
push
lahf
aas
and
or
fdivrs
jmp
nop
test
cli
mov
cmp
insl
ret
daa
push
inc
sahf
int
iret
pop
push
mov
sarl
incl
push
shr
je
xchg
pop
imul
outsl
inc
xor
jbe,pn
jbe
adc
jae
push
call
jns
xcrypt-cbc
cmpsl
xchg
dec
in
leave
lds
xor
insl
call
mov
subb
and
xor
divl
jne
in
insl
add
out
outsb
mov
test
cmpsb
push
ljmp
cmp
call
adc
adc
out
dec
cmc
popa
mov
jle
fucomi
jge
cmp
xorb
mov
fucomip
test
xor
xchg
in
pop
jbe
and
sbb
fists
call
sahf
mov
push
in
pushf
or
or
pop
insl
xorb
std
cmp
jne
out
or
fistpl
fisubs
or
mov
xorb
sub
push
das
outsb
and
add
and
inc
push
xchg
test
dec
fidivrl
in
shll
mov
or
dec
rol
popf
mov
out
rorb
outsb
aam
das
pop
adc
inc
fsubrl
push
mul
je
jnp
jg
jne
cltd
outsl
addr16
mov
sbbl
shll
jno
adc
mov
and
or
fisubl
pop
aas
fimuls
nop
inc
adc
fs
mov
mov
inc
xor
mov
jp
push
sbb
int
movsb
sub
mov
mov
orb
mov
je
in
loop
clc
mov
sbb
inc
sti
imulb
adc
mov
adc
aam
mov
sbbl
ror
arpl
rorl
pop
dec
aam
mov
pop
out
les
pop
xor
sti
inc
or
mov
and
push
iret
je
inc
xor
mov
dec
cmp
jo
adc
adc
das
je
fidivs
cmpsb
or
adc
jmp
sbb
push
or
add
les
adcb
and
pop
out
pusha
pop
test
sbb
jbe
cmp
mov
les
and
add
clc
inc
push
cmpsb
or
jo
add
or
xchg
push
out
adc
xorb
mov
rclb
dec
xchg
rcrb
dec
mov
dec
mov
test
mov
sbb
shlb
sub
das
test
dec
lock
in
in
testb
mov
xchg
in
mov
pop
orl
sbb
loop
and
push
inc
jl
inc
testb
pmaxsw
lret
lcall
repz
aam
sub
aas
aam
or
aam
cmpsb
and
cmp
inc
mov
xchg
sbb
dec
pop
in
adc
add
fst
mov
cmp
repnz
sub
popa
mov
mov
ret
bswap
sarb
sbb
jno
push
leave
push
adc
pop
lcall
cwtl
xchg
insl
or
push
push
mov
mov
cmpsl
inc
ss
inc
cltd
js
and
lahf
adc
xor
pop
pop
xor
or
adc
insl
outsb
sbb
lret
ret
lods
dec
lock
lret
push
repz
cmc
sbb
or
dec
fwait
inc
mov
or
pop
or
pushl
dec
call
mov
dec
roll
adc
inc
sub
xchg
les
xchg
dec
ret
or
fsts
mov
cmpl
insl
ja
ds
andb
shlb
xchg
test
adc
add
sbb
cmc
inc
push
shll
sub
sub
inc
jg
test
push
adc
jne
xor
fildl
clc
add
nop
orb
outsl
xchg
icebp
mov
push
shrl
fistpl
sahf
and
or
mov
xchg
outsl
call
std
pop
jmp
adc
fldt
and
fistpll
adc
add
and
ss
test
xorb
jne
push
es
cmp
xchg
mov
pop
pop
flds
icebp
and
out
shll
test
or
imul
push
jge
lods
cwtl
stos
insb
mov
add
jne,pt
sti
notb
adc
inc
loop
outsb
jmp
jbe
push
andb
xchg
inc
push
les
pop
dec
je
or
push
jl
movsl
mov
je
sbb
xlat
repnz
out
push
mov
dec
leave
daa
je
and
test
mov
add
inc
add
repnz
mov
inc
and
js
pusha
pop
or
pop
add
sbbb
in
addr16
inc
xor
and
lods
ficoms
xor
xchg
pop
xchg
mov
dec
test
ss
test
jle
mov
push
pusha
mov
aaa
mov
cs
sbb
jae
dec
ret
adc
je
scas
fadds
lds
inc
aas
push
inc
jmp
pop
fisttps
push
fsts
sub
mov
popf
dec
jl
in
adc
daa
mov
nop
xor
loopne
push
cmp
adc
or
aaa
jl
addl
hlt
lahf
fs
in
push
cld
dec
jns
sub
and
stc
xchg
push
test
icebp
ljmp
xchg
push
push
loop
pop
mov
xor
adc
xchg
jmp
outsl
push
ljmp
cli
mov
xchg
ja
and
ja
mov
mov
lcall
fisubrs
jl
cmp
push
adc
push
enter
mov
dec
leave
dec
adc
xor
xor
popa
adc
nop
mov
push
mov
decl
cmp
mov
mov
or
stos
je
inc
loope
inc
and
inc
cmp
inc
mov
test
jp
inc
cmp
mov
pop
pop
or
cli
js
sub
dec
lcall
insl
jne
pop
loopne
adc
or
shl
xchg
sub
pop
xchg
add
outsb
pop
and
or
sub
xchg
pop
or
cmc
sti
sbb
sbb
jnp
icebp
fwait
decb
out
inc
rcrb
sbb
adc
ds
push
xchg
out
mov
inc
cwtl
stos
clc
mov
mov
cmpsl
stos
addl
aam
mov
xchg
popa
dec
mov
adc
cmc
pop
and
lods
xor
mov
add
addr16
test
mov
sub
inc
lods
sub
lcall
test
rcl
fwait
jne
adc
sti
gs
push
adc
lods
sbbl
push
test
jo
sbb
mov
lahf
out
popf
mov
xchg
fiadds
faddp
rclb
gs
inc
xchg
in
or
in
lea
pop
mov
mov
mov
imul
cmp
sub
jl
pop
loopne
sbb
aad
mov
fdivs
push
aaa
push
cld
stos
inc
xchg
sub
jne
movsl
and
push
or
les
adc
pop
fcoms
and
incl
push
mov
sbbb
js
sub
loop
cmpsb
sbb
leave
or
clc
lock
bound
sub
idivb
jb
pusha
notb
inc
lods
outsl
xor
mov
pop
jg
daa
popa
and
lahf
adc
fdivr
pop
jbe
out
test
xchg
movsb
idivb
sub
cli
cmp
inc
jbe
dec
mov
movntq
nop
daa
call
std
sbb
mov
pop
cmp
call
fcomi
xchg
lret
notb
and
pop
lods
xchg
sahf
xlat
aaa
cld
mov
cmp
or
scas
fimuls
ja
adc
push
sbb
test
mov
fstl
cmovl
or
mov
ja
repnz
adc
jp
and
add
sbbb
xchg
insl
dec
xchg
mov
adc
push
loopne
mov
inc
das
sub
outsl
ja
adc
test
sbb
jmp
inc
sub
decb
xchg
mov
or
lret
jg
adc
es
push
jmp
cs
scas
cmp
push
sbb
mov
js
jne
je
mov
aad
imul
inc
jnp
pop
in
or
test
mov
jl
sbb
insb
pop
cmp
jmp
popf
or
cmc
pop
or
cmc
fldt
jmp
dec
or
jo
bound
outsl
inc
aaa
mov
jmp
pop
in
enter
adc
push
aaa
iret
or
movsb
lahf
add
push
insl
dec
hlt
mov
sbbb
fidivrl
call
sbb
std
or
popf
dec
lcall
cmp
sti
sub
lret
pop
cmp
pop
inc
cmpsl
ljmp
popa
loop
into
xchg
and
xchg
dec
jae
add
cmp
cli
mov
push
dec
xchg
int3
inc
mov
mov
mov
imul
pop
sbbb
xchg
aaa
sub
jns
mov
int
and
mov
stos
lret
ss
scas
pop
xor
or
sbb
xor
inc
dec
adc
bound
xorl
cmpsl
push
mov
aam
out
sub
aas
sub
cmc
and
xor
aas
fs
mov
insl
andl
mov
or
js
cltd
xor
mov
or
dec
or
mov
push
or
xorb
outsb
mov
hlt
xchg
dec
shlb
sahf
clc
add
repnz
ret
fdivs
pop
bound
je
orb
jb
mov
pop
xchg
or
mov
add
clc
pop
mov
movsl
outsl
cmpsb
push
cmp
sbb
and
fildl
mov
popa
das
clc
push
sbb
cmc
scas
rolb
jp
mov
and
sbb
sahf
cmpsl
testb
nop
ljmp
lds
pop
fdivs
popa
leave
add
outsb
xchg
arpl
or
push
pop
mov
and
pop
xchg
xlat
js
push
iret
pop
mov
jp
push
jp
xchg
inc
data16
mov
rcr
lds
fldenv
aad
lea
xchg
dec
pop
in
xor
sub
mov
dec
lea
adc
mov
sahf
xchg
lea
cltd
adc
or
mov
sbb
and
inc
cmpsb
cmp
xchg
sbb
test
fsubrp
mov
es
outsb
inc
sbb
sbb
cmpsb
jo
or
pop
mov
and
push
mov
icebp
sbb
lahf
cmp
jge
pop
adc
dec
jg
mov
std
outsl
shr
or
mov
mov
xorl
mov
jp
jle
aas
int
or
adc
xorb
ljmp
ret
ret
jp
mov
add
aad
lds
add
stc
arpl
hlt
stos
call
inc
and
add
inc
adc
pushl
mov
mov
or
insl
orb
cld
mov
int3
shrl
inc
and
sbb
push
fwait
fwait
cmpl
fstl
ret
mov
fiaddl
push
jnp
mov
adc
fwait
outsb
cmc
fistpll
mulb
outsb
xchg
xor
stc
and
dec
insb
cmpsl
mov
push
pop
enter
mov
pop
mov
ficoml
iret
adc
mov
mov
mov
jae
ret
push
imul
or
inc
call
xchg
dec
cld
call
adc
cwtl
dec
or
ja
push
cli
inc
jmp
rcl
ja
ficomps
aaa
pop
in
les
popf
int
xlat
mov
sbb
ljmp
jno
ds
stc
aas
jl
cmp
lcall
xchg
lret
push
add
pop
sub
fwait
imul
shr
mov
inc
cmp
lock
pusha
pop
cwtl
shlb
xchg
push
sub
push
sar
jp
jne
or
ljmp
sbb
push
cmpsb
cmpl
mov
pop
pop
xorb
pop
lds
test
pop
fwait
xor
inc
das
mov
push
in
adc
sbb
mov
negb
sbb
pusha
icebp
push
and
cmp
or
mov
inc
loopne
mov
fs
scas
xchg
inc
sarb
sbb
in
adc
inc
adc
loopne
add
push
test
pop
pop
or
mov
arpl
mulb
in
imul
stos
call
pusha
mov
stos
les
mov
mov
pusha
mov
and
insl
xorl
or
sbb
inc
lret
jle
movsl
in
jge
inc
mov
xor
pop
fcomps
adc
insl
mov
pop
pop
xlat
das
sub
push
dec
mov
in
sub
in
mov
push
and
xchg
cmp
cmpsb
add
inc
clc
adc
mov
xlat
mov
testb
xor
insl
repz
sbb
mov
rol
aas
cmc
rorl
add
jne
in
cmp
std
mov
loop
dec
or
sahf
mov
or
call
sbb
push
xchg
sbb
jae
xor
sarl
lret
push
filds
sbb
loopne
mov
in
das
jg
and
loope
jae
mov
inc
arpl
xor
jg
pop
mov
pop
lahf
xchg
push
pop
pop
sti
mov
mov
popf
dec
mov
sbb
inc
je
mov
movsb
sbb
pop
bnd
inc
push
sti
and
push
sbb
push
outsl
inc
xchg
dec
mov
or
lret
shr
cmp
jmp
dec
or
pushf
call
or
call
sbb
jmp
mov
xor
aaa
stos
inc
inc
inc
jg
mov
mov
push
lahf
cmp
lahf
xor
loope
lods
mov
push
pop
idivl
xchg
leave
lock
pop
mov
or
jno
adc
icebp
dec
jl
inc
int
ret
enter
lods
std
or
xor
inc
or
add
xchg
rcll
pop
insl
fildll
sbb
sbb
imul
sub
pop
mov
in
lock
and
mov
mov
test
jne
push
mov
xchg
dec
or
add
and
mov
inc
mov
push
jl
icebp
inc
out
fimuls
pop
clc
movsl
mov
cmp
push
push
pop
inc
sti
add
ret
sbb
or
pop
out
jp
lds
cmpsb
add
pop
aad
adc
jo
addl
ljmp
and
mov
call
hlt
xchg
fnstsw
lods
fsts
jg
mov
xor
pop
test
or
mov
or
push
ljmp
mov
and
dec
pop
jns
aaa
insb
add
jo
cld
sub
test
push
lock
push
adc
mov
and
fwait
mov
call
pop
cmp
out
sub
fdivs
jae
das
jl
sub
test
dec
pop
mov
mov
call
mov
xorl
stos
cli
and
out
pop
into
cmp
adc
push
test
or
sbb
dec
lret
adc
xorb
inc
fstpt
and
and
jp
pop
in
and
insl
pushf
fildll
fdivs
sbb
insb
pop
sub
inc
shlb
cs
mov
shll
and
jbe
push
sub
pop
mov
ret
push
and
xor
xchg
jle
push
adc
lret
mov
aad
pop
stc
push
ljmp
dec
inc
mov
inc
and
jecxz
mov
cld
add
push
fimull
out
pop
mov
push
arpl
cmp
mov
inc
loop
mov
mov
pop
shll
out
es
push
xor
pop
roll
sub
mov
ss
cmpsb
and
inc
aad
pop
mov
lock
jb
pop
sub
mov
call
jno
add
cmp
mov
pusha
mov
and
mov
popf
xchg
cld
lret
daa
jp
insl
fcmovbe
icebp
push
mov
cmp
ret
and
aam
test
cmpsb
mov
imul
test
dec
in
inc
jg
mov
out
test
or
fstpl
ds
mov
sub
jle
mov
mov
inc
mov
enter
xchg
cli
push
sbb
and
jo
push
rcrl
inc
pusha
scas
xchg
lcall
aas
inc
push
mov
pop
and
adc
inc
loop
mov
aaa
loopne
ljmp
mov
aaa
mov
mov
mov
and
fnstsw
push
pop
mov
adc
in
adc
lds
dec
test
mov
mov
mov
sbb
and
fcmovnu
xorb
jl
filds
and
shr
fidivs
sub
mov
and
sub
or
outsb
les
stos
inc
loope
lea
cs
in
inc
test
jo
lock
shl
inc
inc
adc
mov
mov
sub
inc
xchg
mov
adc
in
rcrb
mov
jne
in
pop
outsl
ret
add
xorl
mov
test
mulb
pop
mov
add
push
mov
lds
mov
mov
cwtl
push
or
pop
loopne
xor
push
xchg
sarl
bound
and
decl
cwtl
icebp
rclb
in
adc
mov
sti
fsubrl
scas
sbb
fisubrl
sub
fs
jecxz
insl
mov
mov
subl
and
cs
popf
sub
aam
rorl
test
hlt
outsl
cmc
adc
xchg
fmull
add
pop
aas
inc
stos
mov
inc
jnp
mov
dec
adc
mov
cld
or
or
arpl
add
popf
rcll
pop
jl
fldenv
adc
mov
test
in
aaa
xlat
loope
or
mov
insl
sbb
test
insl
or
test
outsl
or
fwait
pop
loope
adc
fwait
mov
aam
subl
adc
add
decl
mov
sub
out
add
fdiv
aad
in
and
cmp
inc
cmp
mov
sbbl
sub
xor
add
rorl
add
sub
pop
sub
dec
ret
adc
adc
push
aad
push
or
jl
lods
into
dec
fimull
xor
test
jo
ja
lods
push
mov
mov
sub
adc
stos
movsl
pop
mov
into
pop
and
ljmp
push
push
fs
je
les
push
push
dec
cmp
cmpl
and
enter
test
sbb
insl
and
leave
mov
mov
push
stc
es
js
aaa
mov
aad
mov
xchg
sub
inc
mov
lea
cmp
add
hlt
sub
shrl
dec
call
inc
jl
call
or
vpaddq
mov
or
dec
pop
ret
das
inc
jbe
cmpsl
dec
push
scas
and
adc
push
popa
test
mov
push
pop
adc
jp
ret
pop
mov
aaa
shll
adc
push
je
add
cld
aad
mov
add
outsb
sbb
pop
lcall
comiss
aam
push
aam
jbe
je
sbb
jmp
and
out
pusha
or
jmp
xchg
and
mov
aad
mov
aaa
mov
push
add
dec
cmc
xorw
ret
sbb
js
pop
xor
jne
lock
std
cmpsb
xchg
and
lcall
in
and
adc
sbb
sbb
mov
sahf
outsb
adc
jb
jno
sarl
dec
xchg
sub
adc
pop
stos
xor
js
scas
lock
add
push
cmpsb
cmpsb
lret
sub
lea
inc
fcoml
jle
jle,pt
fidivl
inc
mov
adc
cmp
sbbb
hlt
movsl
xlat
mov
xchg
jns
xchg
xchg
pop
push
sbb
imul
fistps
cmc
decb
pusha
daa
es
cmp
cld
push
xlat
aaa
or
and
lock
or
inc
shll
jo
mov
or
scas
xchg
dec
jno
das
or
cmp
jp
scas
pushf
js
xlat
ficoml
cli
mov
and
les
or
cmpsb
in
fwait
dec
int3
enter
aaa
jp
pop
and
add
xchg
xorl
lods
mov
and
arpl
inc
les
cs
add
and
or
push
and
sub
and
les
jne
or
push
test
ret
sbb
decb
outsl
cs
outsl
lahf
xlat
mov
insl
xchg
jp
adc
sbb
cli
jbe
xchg
ficoms
adc
inc
subl
imulb
xchg
fdivrs
call
fdivr
add
push
leave
lock
pop
jg
sbb
imul
mov
aam
jne
outsb
mov
mov
and
in
fidivs
icebp
fadds
add
aaa
xor
pop
les
or
mov
mov
repnz
es
mov
jb
push
pop
rcrl
das
cwtl
in
mov
pop
jp
jne
mov
pop
pop
dec
scas
add
iret
std
jp
xor
cmp
jae
cmp
push
or
insb
cmpb
fsubrs
mov
rcr
sbb
sub
or
mov
or
sub
pop
jae
dec
rorb
sub
loope
jne
adc
mov
jmp
fstpt
je
andl
jmp
and
add
les
or
pop
or
std
and
sub
xchg
mov
and
and
and
sub
mov
cli
xchg
or
call
scas
pop
or
sub
mov
cmpsl
test
push
outsl
pop
out
clc
add
repz
addl
adc
lea
aaa
add
or
mov
cmc
push
adcl
mov
and
or
add
mov
jp
mov
or
mov
xor
jo
scas
inc
test
fbstp
pop
in
int
xor
lock
inc
imul
jno,pn
sub
es
mov
adc
test
cmp
pushf
jmp
insl
push
cmp
push
or
mov
push
or
inc
idiv
test
cmp
in
les
enter
pop
xor
jne
shrb
cmp
add
loopne
fnstsw
movsl
sub
outsl
fidivl
add
add
fisubrl
scas
sub
shll
or
jnp
scas
shl
push
ficoml
mov
cli
ss
mov
insb
data16
insb
mov
sahf
push
push
sbb
fisttpl
cmp
or
sub
pop
filds
mov
jns
out
insb
inc
bound
pusha
outsl
jmp
xlat
or
adc
inc
outsl
fistps
cmc
push
jno
or
cmp
popa
cmp
push
and
testl
rorb
mov
inc
inc
xchg
je
data16
leave
aam
stos
dec
fcmovnbe
sub
fwait
outsl
adc
js
imul
push
mov
xor
push
sbb
mov
jmp
jbe
lea
aaa
mov
and
mov
push
dec
rorl
push
ja
stos
or
sti
aaa
pop
push
add
ljmp
jmp
dec
xchg
lret
movsb
cltd
stos
push
scas
out
decl
movsb
js
ljmp
fstl
out
inc
push
jns
movsl
ret
out
jge
fistpl
rcl
add
loop
inc
dec
or
sbb
outsl
lahf
or
jb
adc
aas
sbb
fcomi
je
mov
mov
mov
and
mov
mov
hlt
je
jno
fidivs
shrl
aad
les
adc
gs
sbb
roll
call
push
sbb
mov
mov
into
adcl
and
jo
cwtl
dec
xor
aam
pop
mov
lds
stos
int
dec
xchg
fisttps
fimuls
jbe
and
mov
movsl
outsb
pop
xchg
dec
pop
mov
push
mov
fisubs
nop
pop
inc
loopne
pusha
xlat
jmp
sub
loope
adc
std
sbb
xchg
mov
inc
test
inc
xor
or
call
in
push
insb
mov
mov
pop
leave
dec
jg
and
push
subb
and
cmp
fbld
iret
sarl
or
cmp
push
push
out
popl
outsb
or
inc
mov
jnp
enter
mov
nop
jns
sub
add
repnz
das
icebp
dec
add
lock
sub
inc
jo
inc
and
imul
orb
iret
jmp
and
idivb
add
loopne
mov
pop
and
and
lcall
xor
mov
and
sbb
sub
mov
or
or
sbb
mov
push
pop
subl
push
stos
das
shlb
push
mov
push
jne
sbb
sbb
scas
push
xorl
sub
stos
adc
jo
or
dec
add
xchg
or
add
jns
push
xor
inc
aam
int3
xlat
pop
jmp
dec
mov
cli
inc
pop
andl
call
cmp
jb
test
fldcw
fistl
test
pop
jmp
lret
dec
outsl
fists
pop
pop
stos
movsb
jg
and
arpl
aad
sbb
mov
fs
push
ljmp
xor
data16
and
add
mov
or
jg
mov
jbe
jns
or
hlt
jge
mov
sub
mov
xor
jbe
fdivs
jo
lock
out
push
push
imul
add
scas
fldt
rclb
scas
mov
std
cld
mov
cmpsl
sub
or
pop
fwait
add
dec
and
or
dec
mov
test
data16
lea
aam
mov
aaa
push
aam
cmp
dec
or
adc
xchg
inc
fcoml
es
test
shll
push
or
inc
lock
jne
pop
notl
mov
push
dec
mov
add
imul
add
xor
mov
fsts
stos
shlb
nop
cli
mov
orl
cwtl
xor
cmp
nop
xor
xor
add
repz
sbb
push
adc
push
pop
adc
jae
xor
mov
dec
insl
xor
sbb
insb
adc
dec
adc
fiadds
fbstp
sub
shlb
dec
adc
inc
sbb
jl
and
outsb
roll
add
out
fisttpl
ficoml
dec
xchg
inc
pusha
pop
pop
sub
or
sar
outsb
mov
adc
je
je
fidivl
sub
aas
push
cmp
mov
sub
xchg
jbe
and
xchg
lret
ss
ret
mov
popa
mov
call
jl
nop
xchg
mov
je
fstpl
xchg
ja
push
cmp
push
cmp
mov
ljmp
loope
nop
outsl
aad
push
jl
sarb
pop
pop
ja
test
push
add
aaa
testl
inc
adc
inc
adc
jns
dec
add
fstpt
or
pop
xor
add
push
lods
pop
les
xchg
mov
cli
jno
sub
rcll
push
roll
outsl
mov
or
fdivl
or
pop
and
testb
xchg
push
jae
ficompl
shrl
sub
jns
clc
sbb
lret
rcr
mov
push
iret
cltd
jne
mov
les
pusha
pop
jge,pn
jbe
mov
sbb
xchg
addr16
cli
inc
daa
adcb
mov
iret
jo
ja
vcvtps2pd
jge
fucomi
jae
aad
mov
les
rcrb
out
cmpsl
shrb
or
cmp
insb
lds
jp
cmp
or
mov
jl
and
insl
add
imul
in
sbb
pop
push
cmp
stos
dec
xchg
rcrl
push
bound
mov
stos
sub
jnp
movsb
cmpb
out
mov
inc
cmp
mov
sub
sub
sbb
add
fbld
mov
adc
iret
add
repnz
insl
movsl
cmp
inc
popf
inc
sub
sub
inc
jg
roll
icebp
jbe
inc
fmulp
test
imul
js
sbb
adc
adc
push
push
cli
dec
inc
dec
inc
inc
adc
fisubrl
push
push
fwait
inc
mov
mov
or
inc
and
jnp
push
xlat
gs
xchg
das
xor
xchg
push
cmpsb
xchg
add
stc
movsb
pop
loopne
push
loop
inc
adc
push
pop
or
insb
sbb
inc
mov
cs
loopne
les
enter
or
pushf
jle
push
out
es
sbb
call
cwtl
xor
and
aas
add
pop
adc
jo
jecxz
dec
sbb
mov
push
shrb
cmp
jbe
stos
arpl
or
mov
sub
xor
push
cwtl
in
mov
sub
push
adc
es
jmp
xchg
push
daa
inc
ja
cmc
sub
fisubrs
push
lahf
jmp
pusha
imul
cltd
xorb
stos
dec
insl
jnp
dec
mov
mov
or
pusha
add
xchg
sbb
and
adc
sbb
insb
cmp
inc
negl
or
or
insl
insl
pop
inc
imul
adc
xor
mov
orl
ljmp
les
push
testl
testb
subl
fisttpll
fucompp
pop
pushf
shl
adc
test
push
cli
stc
pushf
mov
dec
inc
data16
dec
adc
scas
mov
dec
cld
inc
jecxz
test
pop
and
pop
add
js
sub
fbstp
jle
call
insl
push
loop
loopne
sub
je
and
jg
jmp
cmp
mov
pop
inc
aas
push
mov
lret
push
or
inc
cmp
push
das
icebp
inc
xchg
add
shrl
or
cmpb
push
js
inc
mov
mov
in
mov
push
aaa
in
iret
and
push
push
iret
mov
aaa
xlat
orb
inc
pop
xor
add
jl
adc
ljmp
dec
addb
test
iret
fldt
stos
xchg
orl
inc
cltd
adcl
inc
xchg
and
pop
rcl
add
xchg
out
pushf
out
and
fists
xor
das
mov
jno
mov
lods
sbb
jae
in
roll
inc
inc
xchg
mov
pop
int
inc
inc
mov
push
jl
cmpsb
pop
and
test
pusha
jne
test
jne
scas
popf
andl
mov
cmp
pop
shl
fisubs
cmp
movsb
jne
jae
mov
sarl
cmp
cwtl
and
fwait
es
inc
fdivs
jb
roll
push
inc
mov
int3
pop
orb
xchg
test
jo
xorb
or
outsb
dec
mov
add
push
punpckhdq
adc
imul
and
sub
shl
movb
inc
sub
xchg
cmc
aad
rorl
or
sub
dec
testb
jnp
sub
outsl
inc
dec
push
pop
cmp
pop
aaa
mov
in
jne
add
fcoms
mov
add
pop
jne
hlt
rcl
scas
ret
ficoml
aam
dec
in
add
in
aaa
xor
fidivrs
push
dec
mov
add
or
xchg
mov
lea
outsb
filds
add
push
cmpsb
push
add
mov
or
cld
mov
sbb
and
inc
push
ss
lods
not
loop
insl
fnstsw
lret
lods
loop
sbb
mov
or
xchg
inc
andl
fmuls
outsl
add
outsb
push
lock
mov
mov
push
insb
je
popa
adcl
es
mov
or
cmc
xchg
orb
lahf
add
mov
test
push
std
pop
out
mov
fwait
mov
add
pushf
loop
rcr
loop
sbb
and
sub
stos
pop
and
mov
aam
xchg
lods
push
sbb
or
pop
jbe
inc
mov
cmp
xorb
cmc
icebp
in
xor
mov
stc
pop
xor
outsl
aaa
fisubrl
jbe
mov
xor
jg
sub
and
pop
mov
popf
jno
loopne
fistpl
fldt
imul
stc
out
ficoms
aad
jecxz
sub
jnp
lea
add
add
cmpb
loope
xor
and
mov
mov
mov
rcr
pop
loope
xchg
add
dec
bound
jmp
lds
cmpl
int
ja
or
sub
lahf
or
inc
or
call
orl
mov
and
inc
jo
mov
mov
xchg
xor
sti
sahf
hlt
pop
mov
or
and
shrb
sub
adc
jle
push
sub
mov
sti
lds
outsb
cltd
push
pop
jo
outsl
call
ret
pop
push
aam
in
pop
sub
cmp
dec
or
imul
lcall
cmc
cmpsb
pop
andb
pop
mov
push
mov
cmc
test
add
adc
test
ficoml
fnstsw
pop
mov
cli
out
test
and
hlt
dec
inc
je
push
xor
inc
mov
leave
aaa
jg
pop
mov
cmc
push
sbb
aas
loope
jnp
pop
or
in
xchg
in
je
jl
adc
cli
insl
mov
sub
xchg
pop
movsl
mov
mov
lock
test
aam
jecxz
and
inc
call
rcr
rcrl
es
cmp
adc
aaa
cmp
lret
sub
jns
push
add
add
xor
scas
push
adc
call
or
jno
test
mov
mov
ja
cltd
xor
xchg
xor
rcrl
lcall
sub
xor
ja
loopne
adc
mov
sbb
icebp
push
pop
repnz
insb
inc
cmc
inc
jae
jb
mov
xor
cs
push
outsl
add
sbb
outsb
xlat
ret
test
mov
push
sbb
add
inc
xlat
cmpb
decl
movsl
call
call
ja
pop
or
leave
les
push
xor
enter
push
in
pop
add
adc
add
push
mov
scas
jae
push
xchg
jge
or
sub
xor
mov
and
rcl
gs
jne
pop
arpl
pop
push
aaa
test
je
test
push
xlat
enter
add
pop
clc
mov
lods
adc
cmp
out
or
popa
clc
and
xchg
pop
inc
xchg
cmp
dec
les
sub
stos
dec
sbb
sti
je
cmp
jle
or
push
inc
lock
idivb
shll
inc
xor
xchg
shll
mov
lea
push
scas
adc
stc
cmp
mov
in
mov
or
inc
mov
adc
push
add
jg
cmp
es
and
rcrl
hlt
movsl
stos
adc
icebp
inc
xchg
or
jecxz
ds
gs
cmpsb
ljmp
fdivl
aad
fisttps
pop
cli
cmpsl
pop
inc
repnz
xor
mov
test
int
icebp
enter
shlb
adc
and
lcall
rclb
ja
loope
pop
adc
pop
and
inc
mov
cmc
in
and
and
and
jg
xchg
jns
or
push
pop
sbb
jbe
mov
std
fs
mov
push
aas
test
pop
into
hlt
mov
sti
push
jmp
icebp
dec
push
and
inc
inc
pusha
mov
cmp
and
rorl
imul
dec
push
xchg
inc
test
les
sub
lods
sbb
fmuls
adc
in
shl
mov
loop
mov
add
add
xor
adc
shr
mulb
xchg
das
xor
mov
enter
jb
mov
aad
mov
fistpl
xor
mov
subl
mov
pop
xchg
cld
sbb
in
inc
lahf
bound
test
xor
inc
nop
data16
sbb
in
cmp
lds
jle
add
adc
aaa
pop
jbe
sbb
push
sbbl
popf
pushf
and
sbb
push
or
test
and
add
es
xor
inc
test
call
add
daa
cmc
mov
jp
in
inc
cmc
adc
sbb
in
int
jne
mov
push
insl
icebp
jbe
inc
xlat
jbe
xchg
fmuls
or
or
hlt
xor
jbe
xchg
imul
push
push
sbb
andb
mov
xchg
sbb
push
adc
inc
push
sub
or
dec
and
inc
stos
test
subb
pop
je
popa
shrl
inc
pop
inc
ds
sub
notb
shr
add
cmpsb
pop
mov
mov
jmp
push
mov
notl
outsl
adc
sbb
popa
imul
repnz
lea
call
stos
bound
decb
push
and
mov
into
jne
aaa
add
stos
and
aam
pop
xchg
xor
adc
xor
push
jmp
outsb
rclb
add
add
or
and
mov
mov
inc
cwtl
pop
mov
pop
push
test
daa
inc
imul
std
test
mov
mov
and
mov
push
adc
cmp
mov
fs
jp
sbb
mov
xchg
cmp
sub
inc
add
add
add
or
sub
xorl
push
das
jp
popa
loopne,pn
in
lahf
cmpsb
inc
sti
mov
or
xor
adc
js
mov
stos
movsb
stos
sbb
aas
mov
sahf
mov
fmul
es
and
hlt
xor
ljmp
jbe
adc
lds
iret
jb
add
stc
stos
adc
sub
popa
loop
and
insb
xchg
mov
or
pop
adc
sub
mov
test
adc
arpl
sub
jge
fimuls
ficompl
jne
mov
jmp
or
cmp
inc
jl
lahf
jno
out
aaa
adc
icebp
jbe
fwait
ret
sbb
sub
inc
addl
sub
leave
divb
mov
jbe
inc
pushf
fwait
lret
xor
aam
mov
fcomps
sarb
lods
insl
mov
add
aad
outsl
push
and
das
stos
push
test
clc
or
pop
out
andb
mov
mov
jmp
jb
push
je
outsb
lea
pop
xlat
jmp
add
add
fwait
cmp
inc
repnz
mov
pop
or
adc
mov
fwait
repz
adc
test
mov
popf
lock
out
sbb
jp
cld
push
incb
pop
testl
and
arpl
int3
decl
xorb
fisttps
ljmp
or
adc
sbb
fisttps
inc
mov
xchg
jns
test
aam
mov
mov
iret
insl
jbe
sub
push
mov
call
inc
pop
or
add
jbe
xchg
push
sub
mov
cmp
sbb
xor
jns
adc
stos
pop
test
arpl
stc
movq
fwait
pop
bswap
pop
cmpl
shrb
mov
xchg
lea
lock
js
sub
sarb
xor
lods
add
inc
mov
ss
daa
stos
ret
dec
outsb
outsb
repz
push
add
insb
fs
add
dec
add
aaa
mov
imul
inc
mov
orb
add
add
mov
push
insb
or
mov
dec
mov
xor
add
imul
add
push
dec
add
cli
push
mov
dec
jg
std
jg
jmp
addr16
add
add
fucomi
mov
push
sub
rcll
ja
scas
shll
ja
and
push
fucomi
rclb
jbe
ja
mov
andl
subl
jg
bound
jns
add
dec
mov
inc
and
mov
jne
xor
add
aam
dec
js
addr16
sti
mov
sub
pop
mov
jmp
add
inc
adc
mov
pop
es
lcall
ja
inc
mov
scas
sbb
push
flds
mov
test
cmpsl
mov
fildl
inc
imull
jno
shr
shrl
insb
dec
push
call
pop
inc
mov
ret
push
test
sbb
mov
mov
inc
fldln2
pop
xchg
add
enter
inc
clc
dec
test
fildl
mov
inc
ss
jno
push
loope
jbe
or
neg
sub
mov
xchg
cmp
in
or
shll
sbb
lahf
fucomi
mov
jb
sub
mov
mov
mov
mov
jmp
fildl
xor
inc
lods
lea
add
ret
repz
push
add
shll
jge
mov
and
or
arpl
cld
sbb
push
inc
insb
mov
test
dec
cmc
ljmp
inc
add
sbb
inc
dec
dec
push
bound
cmp
push
jnp
dec
cmp
pop
xlat
ror
mov
stos
test
dec
inc
lock
outsl
add
mov
sti
mov
imulb
aad
ret
nop
fildll
mov
rcl
and
inc
jnp
out
xor
xor
add
xlat
push
aam
adc
and
jne
and
js
jne
jne
test
adc
xchg
xchg
jne
adc
repz
add
unpcklps
adc
and
cmp
pop
cs
xor
je
mov
adc
lods
mov
adc
mov
in
xchg
dec
adc
out
and
jns
pop
sub
sbb
pop
ljmp
add
adc
lcall
call
cltd
data16
adc
inc
mov
jbe
jne
jae
pop
imul
cmp
pushf
insl
add
lcall
aam
mov
adc
mov
jp
fsubrp
and
imul
jno
int
inc
and
pop
push
xor
shlb
inc
outsb
imul
shlb
fcmovb
pop
imul
add
cmp
xor
sahf
ret
mov
adc
mov
xor
int
xlat
stos
lret
add
imul
dec
lcall
xor
add
inc
xor
pop
pusha
fcomps
jo
xchg
jne
adc
mov
imul
into
arpl
jae
or
loopne
lods
push
aas
mov
popa
xlat
sub
and
adc
push
sub
and
xor
push
push
add
xorb
dec
ss
mov
mov
push
jmp
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
xor
add
popf
add
ds
sbb
push
push
pop
pop
pop
xchg
or
mov
out
cmp
mov
mov
adc
jnp
minps
pop
fwait
in
stos
mov
ljmp
sbb
pop
mov
pop
xchg
xor
aas
lcall
rorl
pop
rcrb
icebp
xor
in
xor
out
fwait
pop
jmp
pop
cmc
xor
fidivs
or
mov
or
lcall
or
int
insb
push
pusha
cmp
adc
sub
rcrb
xor
shrb
outsb
push
outsl
aaa
sbb
sub
leave
sbb
push
xor
adc
pop
rcrb
mov
push
xor
out
mov
push
or
xchg
fwait
jnp
fadds
and
clts
jo
pop
lcall
sbb
sub
xor
and
or
xchg
xchg
movsl
pop
imul
gs
addr16
pop
jmp
movsb
xchg
jbe
mov
push
mov
xor
inc
sbb
xor
jnp
jb
cmp
inc
xor
cmp
xor
dec
sbb
mov
popa
addr16
jl
popf
push
leave
pop
aaa
ret
jl
adc
jge
daa
daa
dec
enter
sbb
popf
daa
daa
daa
cmp
cs
mov
inc
clc
fstpt
aad
pop
or
imul
mov
mov
push
fsubp
xchg
pop
xchg
sahf
mov
addr16
fstp
add
or
push
insl
aaa
pop
or
aaa
cld
insb
and
inc
xor
mov
push
aam
and
fists
push
inc
sbb
dec
popa
insl
loope
xor
sub
dec
and
sbb
xchg
pop
and
xchg
push
push
enter
push
enter
push
enter
mov
lret
xchg
pushf
ret
push
sbb
in
dec
inc
rcrl
jg
in
mov
mov
cmp
push
pushf
in
mov
sbb
pushfw
sub
or
gs
ja
rorl
sub
popf
daa
daa
cmp
fwait
push
sbb
pushf
pushf
pushf
pop
push
sbb
imul
xchg
adc
pop
push
in
movsl
data16
mov
mov
cmp
mov
ds
leave
rorb
cs
rcrb
push
xor
int
popf
insb
mov
ss
cmp
xor
popf
sub
xor
xor
addr16
sub
das
sub
ds
fmul
fldcw
mov
mov
xchg
xor
push
or
aaa
pop
data16
sub
ljmp
cmp
sbb
pushf
mov
pushf
mov
fdivl
fistpll
xchg
sub
popa
pop
xchg
cmp
ds
mov
popf
pop
in
mov
lea
mov
sbb
cmpsl
in
mov
outsl
add
sub
test
cmp
pop
sbb
xchg
mov
push
in
mov
add
xor
fidivs
xchg
push
xor
fnsave
cltd
push
dec
xchg
pop
or
test
mov
pop
rorb
popf
xlat
push
push
or
adc
jl
add
aam
lea
push
cltd
adc
push
mov
pop
ds
fcmovu
or
jne
pushf
imul
in
movsb
sbb
sbb
dec
sbb
inc
cmp
mov
imul
mov
pop
andl
sub
in
outsl
out
jmp
adc
and
popf
mov
fwait
cmp
sahf
push
mov
and
cmp
int
imul
lds
popf
aam
outsl
sti
es
imul
mov
push
dec
or
pop
adc
sub
popa
rolb
inc
pop
xor
addr16
mov
or
push
xor
fmuls
pop
aad
push
sbb
or
insl
aam
push
dec
lock
in
repz
dec
aaa
sbb
xchg
mov
xchg
push
sbb
neg
sahf
movsl
pop
pusha
dec
push
push
xchg
test
shll
fld
sbb
shlb
fmuls
fnstcw
pop
lahf
or
pop
test
sbb
sbb
in
test
test
mov
test
lea
pop
fwait
pop
mov
pop
pop
stos
jecxz
addr16
mov
pop
xorb
push
dec
sub
push
push
pop
pop
imul
fidivrs
lahf
lods
jecxz
jne
rolb
into
mov
inc
mov
add
out
ss
mov
inc
outsb
popf
push
push
and
in
sti
xchg
movl
sub
sbb
repnz
push
push
fnstsw
xor
adc
dec
addr16
shll
fs
push
dec
sbb
pop
movsl
adc
push
hlt
push
out
mov
in
xchg
pop
push
push
mov
xor
mov
out
jne
adc
sbb
subl
jmp
mov
jbe
ja
mov
adc
inc
or
out
inc
pop
xchg
and
mov
mov
daa
daa
xor
mov
xor
popf
daa
daa
daa
jae
and
icebp
or
mov
mov
outsl
or
pop
xor
out
repnz
and
jne
filds
movsl
cmp
cmp
cmp
orl
pand
cmp
pop
xchg
or
sub
into
push
or
lret
aas
dec
or
add
dec
mov
lret
fwait
daa
inc
aaa
pop
cmpsb
pop
sbb
mov
jmp
sbb
fisubs
mov
xlat
or
ja
and
inc
or
sub
cmp
les
add
push
xchg
jae
adc
and
mov
sahf
or
ficomps
lock
push
push
sub
and
sbb
jle
inc
pop
push
mov
jno
fucomi
test
mov
pop
arpl
es
or
push
pop
lahf
pop
pop
pop
pop
hlt
lock
sub
push
dec
pop
das
mov
push
andb
aaa
mov
ficomps
push
mov
dec
pop
fbld
mov
pop
and
insl
subl
sahf
push
dec
xchg
lcall
mov
push
sbb
jmp
mov
pop
mov
frstor
push
add
sub
fistpll
in
or
pop
iret
pop
mov
inc
fcom
mov
fadds
cld
push
fscale
dec
inc
sub
movsl
movsl
out
negb
inc
sub
loopne
sbbb
movsl
lods
insl
es
ret
or
lahf
pop
add
clc
fdivrl
push
stos
add
fidivl
lahf
pop
dec
and
pop
in
jl
imul
dec
pop
add
sub
mov
insb
push
push
fidivrl
out
pusha
push
icebp
inc
sbb
lcall
inc
add
dec
inc
dec
jge
imul
arpl
cmp
test
rcrl
or
mov
xchg
dec
push
outsb
mov
shrb
jno
mov
fildll
mov
cmp
lods
cmp
push
add
jle
loop
ja
mov
pop
movsl
nop
mov
sarb
loope
pop
and
test
add
fisttpll
arpl
inc
mov
lock
or
jno
push
icebp
popa
pop
mov
push
push
sub
sub
jo
in
test
push
adc
dec
pop
push
cmp
xchg
cmp
mov
popf
es
sbb
xor
comiss
leave
mov
mov
dec
or
sub
insl
sub
cmp
loop
in
or
inc
mov
sub
dec
sub
cld
cmp
xor
out
or
sbb
xchg
mov
push
mulb
inc
imul
adc
stc
ss
mov
jo
or
adc
mov
cmpsb
sub
icebp
aaa
push
dec
nop
push
jne
pop
push
jmp
aas
shrb
and
pushf
push
loope
mov
or
sbb
push
mov
adc
pop
fistpl
aad
add
pushl
stc
out
pop
mov
pop
cs
outsb
xchg
mov
divb
mov
or
sbb
pop
stos
out
dec
mov
or
cs
sub
mov
jge
jbe
lcall
xchg
sub
pop
or
sub
dec
xchg
mov
int3
out
out
pop
mov
ret
adc
push
frstor
movsl
cs
movsl
and
inc
sbb
cwtl
out
pop
inc
stos
jbe
fdivr
in
or
add
xlat
dec
sbb
sahf
je
jle
xor
push
das
scas
sahf
jbe
jns
sbb
and
adc
push
mov
push
and
int
pushl
jo
sub
enter
nop
push
add
add
orl
adc
dec
add
repz
add
imul
popw
add
add
add
jb
rep
iret
pop
sbb
add
gs
fsubl
dec
add
popa
add
roll
push
lcall
or
inc
add
adc
scas
mov
add
das
or
mov
push
jns
addr16
addb
jno
insb
dec
jne
arpl
arpl
pop
mov
sub
sbb
add
pop
lods
jnp
or
or
iret
jne
dec
lods
pop
inc
or
push
popf
mov
dec
push
ja
movl
lea
push
jne
int3
jne
dec
and
cmp
jmp
pop
arpl
pop
xlat
xchg
je
push
mov
out
loope
add
pop
and
in
gs
dec
add
lea
aaa
negb
or
adc
pop
arpl
nop
add
jns
push
fnsave
or
mov
mov
int3
xor
test
cmpxchg
jmp
jb
outsl
sbb
inc
stos
arpl
dec
sub
aaa
pop
testl
testb
outsb
test
iret
aaa
leave
neg
inc
ja
dec
push
mov
sti
ja
pop
inc
es
xor
mov
dec
lds
mov
jns
sbb
sti
inc
out
push
stc
push
jns
scas
js
pop
ret
jns
sub
mov
mov
pop
jge
test
pusha
jmp
xlat
push
pop
adc
in
scas
and
cltd
mov
mov
or
aam
outsl
fists
jne
dec
repz
insb
daa
insb
dec
stos
ja
clc
bound
jnp
dec
ss
repnz
mov
inc
outsl
jae
in
popf
hlt
or
aaa
inc
mov
popf
mov
mov
cmp
push
adc
jno
cmpl
cmp
movb
cmp
popa
mov
sub
mov
ret
fwait
mov
addr16
jg
or
jb
xor
es
dec
addr16
mov
add
push
pop
popa
movsb
jnp
fwait
jae
movsl
insl
and
aam
push
fwait
daa
xchg
sbb
insb
mov
pop
or
jnp
inc
dec
xor
mov
pop
shl
lds
pop
mov
loope
in
pop
mov
push
or
dec
and
stc
js
addr16
arpl
push
jge
xor
inc
sbb
dec
ret
jne
sub
outsb
movsb
fistpl
push
xchg
pop
xor
sbb
pop
jne
jmp
fucomip
mov
push
sbb
cmp
sahf
daa
rep
cltd
neg
and
shll
xor
sub
mov
push
imul
ds
sub
outsl
or
adc
cmp
xchg
adc
nop
sub
cmp
loope
inc
sbbl
div
mov
jb
addr16
fs
imul
insb
shrl
aad
mov
jno
jno
fnstsw
out
insb
cmpsl
pop
jecxz
ja
bound
popl
sub
cltd
jbe
cmpsl
stc
jmp
stc
cmp
rcrl
mov
cmpsl
insl
pop
aas
push
fsubs
jae
mov
js
pop
nopl
rol
jne
imul
and
jmp
dec
shr
sbb
daa
jmp
dec
fisttps
in
push
out
pop
popa
adc
dec
das
ret
in
dec
mov
xchg
and
push
adc
lahf
jne
xor
adc
lcall
push
lret
or
sbb
aas
push
xlat
imul
sti
push
cs
sub
dec
inc
loopne
lods
dec
mov
lahf
pop
cmp
push
pop
xchg
push
and
dec
cmp
inc
pusha
insb
adc
cmp
jno
and
aad
enter
cltd
jne
jmp
or
pop
mov
jnp
cmp
negl
dec
ret
outsl
or
mov
mov
mov
dec
sbb
xorl
out
pop
inc
je
ficomps
dec
jae
gs
dec
push
out
mov
inc
das
stc
cmp
mov
or
and
inc
pop
mov
jecxz
stc
dec
xchg
jnp
cwtl
mov
daa
push
sarl
adcl
repz
sbb
add
mov
push
pop
js
rorl
icebp
mov
cmp
xchg
aad
mov
sbb
mov
scas
cmp
or
and
movsb
out
rol
inc
outsl
jbe
xor
sub
ljmp
fs
popa
icebp
cmp
xor
and
addr16
addl
jno
mov
jge
jecxz
or
dec
xor
add
adc
jae
add
xchg
adc
and
dec
test
mov
push
pop
imul
fwait
aad
cwtl
shr
jno
pop
mov
arpl
adc
or
xchg
add
jno
dec
push
cmp
sbb
imul
in
shll
add
add
push
add
sbb
xor
shrl
cmpsl
push
xor
scas
push
adc
and
push
data16
jo
sbb
sub
ret
addr16
push
xor
aas
jge
pop
adc
shl
hlt
cld
pusha
mov
add
mov
daa
pusha
lahf
pop
add
mov
mov
mov
xor
add
xchg
and
sub
or
add
add
pop
mov
push
push
add
stc
cltd
mov
mov
test
loopne
add
ss
ds
push
leave
gs
lret
out
outsb
mov
out
adc
lock
mov
push
imul
jecxz
jle
cmp
fcoms
xor
ret
js
push
ss
add
add
das
xchg
xor
roll
push
popa
pop
bound
mov
jecxz
cli
add
inc
or
xor
outsl
pop
addr16
imul
shlb
and
scas
push
mov
icebp
add
and
test
mov
pop
add
push
pop
movb
jmp
inc
jbe
push
cltd
pop
sub
cmp
sti
out
add
pop
add
xor
loope
push
mov
fst
mov
sbb
sahf
scas
cmpsl
test
mov
popf
xor
or
jo
sbb
ret
sbb
lock
ret
or
cmp
pop
inc
mov
pop
adc
add
mov
mov
aam
dec
stos
and
leave
xor
aas
fs
sbb
adc
add
xchg
sti
push
filds
fldl
int3
rorb
xchg
mov
pop
xor
aaa
lahf
pusha
jno
add
lock
rcl
out
lds
adc
add
dec
pop
xlat
push
rcr
rclb
dec
adc
inc
xorl
pop
add
addl
test
mov
mov
dec
call
cmpsl
das
inc
test
gs
xlat
roll
or
mov
sbb
nop
inc
ds
inc
push
imul
sub
pop
cmpsb
inc
push
jne
cld
xchg
mov
xchg
add
cltd
iret
lock
sub
arpl
inc
lods
je
dec
movsl
test
dec
test
add
clc
or
or
pop
sbb
aaa
add
cmp
jmp
pop
push
push
xor
mov
icebp
dec
fisttps
or
mov
pop
lret
push
fldpi
cmpsb
in
lds
mov
lret
andb
out
push
mov
mov
dec
lock
pusha
mov
and
mov
add
mov
dec
fbstp
adc
icebp
xor
sbb
enter
push
punpcklwd
cmp
pop
stos
out
push
popa
mov
sbb
adc
adc
daa
imul
std
pop
arpl
aaa
fcoml
inc
out
shrl
push
iret
mov
inc
xor
or
pop
roll
jl
add
mov
cmp
outsl
add
jo
inc
push
daa
and
or
sbb
test
mov
aaa
add
lcall
dec
adc
fbld
jmp
imul
xor
mov
sbb
adc
movsl
adc
lods
das
test
and
and
pop
pushf
aaa
icebp
add
cmp
sbb
mov
sub
mov
or
aaa
or
pop
xor
ret
pusha
cld
cmpsb
mov
dec
pop
sub
cli
je
pop
xchg
or
sbb
pop
dec
mov
sub
rcrb
and
lods
xor
mov
rolb
in
out
xorl
ja
lea
inc
and
mov
pop
xchg
mov
add
iret
pushf
ss
enter
xchg
push
push
adc
inc
push
in
push
jae
scas
adc
pop
inc
add
and
gs
imul
and
ljmp
das
arpl
xchg
arpl
sub
add
add
jecxz
xorl
and
dec
pop
and
test
push
and
pop
mov
orb
insl
mov
leave
mov
subl
adc
or
icebp
dec
jb
adc
int3
jp
ja
pop
inc
test
shll
arpl
repz
fs
add
out
inc
mov
loop
in
adcl
enter
sbb
daa
adc
out
push
cli
sarb
add
lea
in
bound
cmp
jns
add
test
test
add
add
and
and
fwait
add
in
sub
push
mov
sbb
add
mov
cmp
pop
repz
es
add
or
push
pop
or
add
xchg
adc
adc
jae
ret
push
cmp
add
repnz
push
lods
addr16
adc
push
sub
sub
test
in
popf
xor
add
jp
jp
call
pop
fcomps
iret
cmpl
jg
subb
inc
testb
sub
add
outsl
je
mov
sbb
and
das
stos
addl
out
sbb
aaa
push
jg
out
icebp
cmpsb
out
dec
or
dec
and
out
xchg
jne
rcrb
imul
aaa
add
fs
fs
int
jge
xchg
in
cwtl
imul
iret
clc
fidivs
cmpb
mov
dec
xchg
xor
sbb
dec
ds
mov
jmp
or
nop
mov
mov
and
pop
dec
push
sbb
insl
dec
pop
cmp
cmp
and
dec
adc
pop
imul
push
sub
sahf
loop
das
or
jns
orl
inc
or
inc
cmpsl
cwtl
xor
mov
jne
sbb
lahf
aas
or
bndstx
and
ja
add
out
data16
mov
ret
fisttps
cmp
insb
in
add
arpl
ds
daa
jmp
add
mov
in
pop
mov
mov
popa
sub
push
dec
aam
dec
pop
sbb
nop
ljmp
jmp
push
xor
add
jne
push
jne
pop
subl
push
gs
adc
sarb
inc
inc
pop
or
ljmp
fcoml
sbb
outsb
sub
ds
or
arpl
adc
cmp
dec
call
push
aaa
jno
jge
xlat
xlat
adc
xchg
sbb
jo
cmp
jb
adc
add
sbb
or
xor
sbb
mov
jns
sti
mov
sbb
and
adc
push
push
addl
incl
or
jno
cmp
pop
lret
fucomp
loopne
pop
xor
mov
filds
dec
arpl
negl
inc
jne
aas
inc
cmp
xor
push
push
arpl
cmp
sbb
popa
cmp
test
pop
adc
orb
imul
lock
pop
xor
flds
insb
xchg
mov
add
dec
mov
repz
fisttps
pop
add
adc
sbb
icebp
push
adc
mov
add
jg
xlat
popf
pusha
push
insl
add
iret
xchg
icebp
dec
pop
adc
fstl
test
lock
mov
or
sbb
mov
sbb
ja
mov
pop
out
dec
popf
sub
inc
movsb
aaa
xor
mov
cmpsl
dec
int
data16
ja
xor
push
pop
and
repz
int
add
leave
sub
pop
add
xchg
mov
shl
fsubrp
cmp
xchg
dec
and
jno
in
cmp
orb
adc
pop
mov
lea
dec
dec
mov
roll
rorl
arpl
add
aad
xor
bound
jo
fbld
popf
xor
cmp
stos
sub
xor
call
adc
jmp
jl
xchg
inc
loope
std
push
xor
mov
mov
cwtl
lock
cmp
adc
pop
inc
leave
inc
fs
jo
push
cmpsl
or
xchg
scas
jae
or
icebp
hlt
mov
or
adc
addr16
xchg
sbb
or
lods
jno
add
js
xor
inc
popf
ljmp
popf
icebp
adc
xor
mov
add
popf
adc
ja
lret
jnp
jmp
mov
icebp
xor
bound
or
jne
dec
adc
scas
pusha
ret
in
adc
cmp
adc
cwtl
gs
ret
insl
imul
pxor
dec
cmpsl
out
aaa
xchg
adc
sub
loope
pop
mov
test
test
insl
pop
xor
popa
popf
je
jmp
repz
adc
xchg
adc
lds
testb
lret
pop
insl
stos
shll
mov
pop
pop
sbb
aad
insb
std
jmp
and
iret
sbb
inc
std
es
mov
lea
jne
add
test
push
fwait
inc
xchg
mov
dec
jb
ret
dec
add
jno
pushl
jbe
xor
jb
mov
cmpsl
gs
orb
roll
dec
xor
jo
fsubl
outsb
dec
adc
inc
imul
sbb
test
dec
and
sbb
lahf
jb
adc
and
gs
clc
dec
ss
out
mov
adc
ss
jno
or
lds
ficoms
push
add
fildll
or
jbe
and
test
es
dec
sbb
fwait
add
xchg
or
out
outsl
popa
mov
mov
scas
pop
int3
lcall
mull
cmp
xor
mov
inc
addr16
gs
addr16
addr16
mov
pop
mov
xor
test
icebp
adc
int3
cwtl
inc
leave
xor
test
and
pusha
popf
test
lea
ja
mov
mov
ja
lock
dec
cmc
popa
dec
adc
cmp
jae
adc
add
test
ficomps
test
insl
dec
push
xor
pop
aaa
popa
leave
cmp
addl
inc
lcall
dec
pop
cmpl
add
popa
outsb
es
sbbl
dec
and
mov
and
jae
dec
and
sbb
and
shlb
cmp
icebp
xchg
ret
jge
fdivrp
add
adc
ja
das
push
adc
es
dec
ja
mov
data16
dec
or
cmp
lds
or
or
aad
filds
inc
pop
sbb
adc
adc
mov
push
lea
sahf
sti
mov
push
mov
icebp
inc
call
dec
adc
ret
pusha
push
aas
dec
and
ss
and
out
or
movsb
lret
push
jne
sbb
mov
inc
and
pop
in
dec
hlt
adcb
lds
sbb
sbbl
add
adc
popa
mov
cltd
add
cmp
or
sahf
stc
fbstp
or
lock
pop
lret
out
ja
ja
xlat
sub
xchg
sbb
adc
ja
adc
fs
xchg
leave
loop
cwtl
adc
insl
iret
push
test
arpl
adc
movntps
push
imul
sub
sub
dec
and
push
mov
mov
sub
xchg
dec
and
sbb
adc
or
and
push
adc
jbe
add
dec
push
scas
aad
and
mov
pop
and
leave
fnsave
mov
sbb
mov
les
je
push
lds
cmp
cmp
sub
add
push
xor
dec
mov
or
add
les
sbb
sub
loopne
push
adc
jnp
mov
or
addr16
or
lcall
mov
test
call
lods
push
xor
pop
jo
adc
and
pop
ret
scas
test
lds
push
bndstx
popf
sahf
mov
push
push
gs
dec
cmp
add
and
adc
mov
or
adc
adc
jne
outsl
lods
stos
pop
add
sbb
call
pop
push
insb
adc
negb
adc
or
and
pop
lcall
adc
je
push
mov
and
adc
pop
mov
call
xchg
pop
jne
push
pop
imul
bound
xor
mov
add
lcall
adc
jnp
lcall
or
call
popf
popa
add
insl
je
insl
jae
add
call
imul
sub
data16
out
out
ss
adc
push
sub
loopne
daa
cmp
aam
mov
rcrl
dec
pop
nopl
xor
xor
adc
popf
add
int
sbb
inc
push
pop
imul
adc
jae
adc
dec
or
pusha
fdiv
and
das
jbe
push
pushw
sub
mov
adc
xor
push
or
pop
call
into
sbb
lock
xor
aaa
mov
unpcklps
xchg
pop
push
popa
test
lcall
insb
mov
pop
imul
cmp
mov
dec
inc
or
pop
inc
jae
mov
lods
jmp
scas
mov
repz
jle
mov
pushf
inc
sbb
shrl
mov
push
sub
je
xchg
sub
and
test
mov
adc
pop
adc
or
adc
pop
jne
inc
jnp
cwtl
je
jle
stc
ret
mov
add
mov
mov
jo
push
push
out
sbb
push
mov
cmp
lods
je
clc
jns
xor
inc
mov
push
mov
cmp
into
jl
dec
dec
mov
xor
cmp
mov
sub
pop
and
xchg
jae
int
or
push
shrb
xlat
lcall
xchg
pop
pop
imulb
xor
mov
fsubr
push
ds
sbb
sub
ss
dec
push
lret
adc
out
inc
insb
lcall
pop
cltd
int3
or
ret
loope
push
in
add
xor
pushf
jmp
or
sbb
std
je
push
clc
adc
shrl
add
insb
cmpsl
test
dec
bound
or
pusha
xor
add
iret
inc
mov
out
call
xor
dec
pop
stos
fnstcw
out
add
clc
and
adc
imul
mov
adc
ret
pop
inc
leave
mov
pop
dec
inc
jl
mov
gs
gs
inc
jb
je
arpl
mov
stc
popa
insb
push
arpl
push
or
jae
inc
jb
outsl
jb
fcomi
outsl
or
imul
gs
adc
mov
fistl
xor
push
adc
push
divb
inc
outsl
insl
jo
daa
jb
popa
insl
gs
adc
push
divb
inc
outsb
je
dec
fs
out
test
jbe
and
mov
std
mov
jnp
outsb
push
fs
js
jo
xlat
xchg
aaa
testl
je
ja
daa
in
jo
nop
insb
lods
jb
jo
push
push
ss
dec
outsl
fs
dec
inc
inc
bound
testl
iret
mov
inc
das
outsb
inc
push
jns
gs
push
in
out
jne
imul
or
push
testb
push
cmp
sbb
imul
test
jo
pop
jne
lds
mov
lods
popa
dec
dec
sub
push
fsubrs
jns
mov
sub
outsl
dec
inc
js
fcmovnb
es
sub
insb
dec
js
dec
imul
inc
and
popa
fwait
test
jbe,pt
fldt
insl
dec
insb
or
cmp
fs
push
cs
inc
imul
ret
mov
pop
pusha
sub
addr16
and
adc
sub
mov
xchg
mov
les
mov
jae
mov
and
je
aaa
dec
cmp
add
cmpb
dec
add
cmp
sub
imul
sbb
inc
and
mov
mov
seto
imul
xor
xor
insl
sbb
dec
and
and
inc
jo
test
cwtl
jo
mov
nop
in
gs
mov
leave
jg
and
pop
xlat
mov
icebp
sbb
outsl
jb
loopne
shrl
insb
sbb
add
cmp
scas
mov
inc
mov
inc
dec
add
add
pop
push
inc
loopne
sidtl
add
add
addb
add
aad
and
inc
iret
popf
or
jo
ss
pop
mov
cmp
add
add
push
add
testb
adc
push
add
mov
in
fsubs
add
testb
loopne
aad
popa
sbb
dec
mov
sub
add
sbb
xchg
and
les
sbb
lret
test
fcoml
daa
inc
inc
adc
fst
cs
popa
or
cmp
into
ficoml
dec
sub
jb
mov
daa
jae
xor
insl
or
daa
push
nop
cmpsb
cmp
push
push
cmp
mov
sbb
mov
add
add
add
and
incl
add
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
mov
mov
xchg
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
