push
mov
inc
mov
rol
and
sub
mov
jmp
add
add
shrb
mov
ror
mov
sub
xchg
push
push
pop
andl
mov
call
addr16
lea
jmp
sbb
pop
es
pop
and
sbb
sbb
sbb
and
and
and
inc
test
shr
fwait
add
add
inc
clc
or
add
nop
jmp
je
jmp
add
push
nop
xor
add
or
rol
inc
mov
sub
xchg
push
push
pop
push
xchg
call
xchg
xor
and
xor
mov
mov
nop
andl
nop
jmp
add
mov
add
xchg
add
xchg
test
jmp
and
daa
pop
sbb
sbb
pop
mov
jmp
and
pop
sbb
and
es
sbb
sbb
jmp
je
jmp
add
add
add
call
xchg
call
xchg
push
nop
call
xchg
test
jmp
pop
sbb
sbb
and
and
and
sbb
sub
es
and
addb
add
call
xchg
call
mov
jmp
xor
push
pop
jmp
sub
xchg
add
nop
cmpl
xchg
jmp
add
push
xchg
ror
rol
add
sub
mov
mov
push
mov
push
push
pop
push
addr16
jmp
add
xchg
mov
shl
mov
xor
mov
shr
mov
mov
mov
xchg
jmp
pop
jmp
sbb
push
and
pop
sbb
and
sbb
daa
sbb
sbb
and
and
push
and
add
jmp
push
nop
jmp
andl
xchg
call
xchg
mov
and
or
pop
jmp
add
add
add
add
roll
and
and
mov
jmp
xlat
shrb
and
xchg
jmp
inc
nop
add
mov
jmp
add
add
nop
xor
xchg
inc
push
pop
call
xchg
jmp
add
push
addr16
add
or
or
mov
and
mov
sub
xchg
mov
mov
andl
xchg
jmp
test
jmp
push
and
and
push
and
es
push
sbb
sbb
es
sbb
sub
sub
sbb
lea
jmp
pop
and
and
and
and
and
and
daa
and
push
and
and
add
add
and
ror
mov
movzbl
jmp
sbb
sbb
sbb
and
push
and
and
sbb
daa
and
pop
sbb
sub
jmp
lea
jmp
sbb
and
sbb
sbb
sbb
and
and
pop
push
and
decl
adc
push
sbb
sbb
and
and
sbb
and
sbb
test
jmp
call
rol
pop
ret
jmp
and
and
push
and
sbb
and
and
and
add
push
mov
push
mov
call
nop
shr
inc
or
mov
jmp
and
shr
xor
mov
xor
mov
push
addr16
cmpl
mov
push
jmp
and
sbb
and
push
jmp
sbb
daa
es
sbb
sbb
sbb
and
and
daa
jmp
add
add
add
jmp
subl
jmp
stc
jo
add
add
push
addr16
mov
mov
add
ror
mov
sub
addr16
push
addr16
jmp
push
push
pop
call
xchg
jmp
push
jmp
and
sbb
subl
pushl
xchg
call
nop
mov
pushl
add
pop
jmp
pushl
rol
xor
push
and
sub
shl
dec
mov
push
xor
and
pop
and
mov
dec
test
jne
pop
pop
call
xchg
test
jmp
sbb
and
sbb
and
sbb
and
es
and
and
sbb
je
pushl
nop
ret
jmp
pop
sbb
sbb
and
sbb
push
and
pop
sbb
sbb
and
sbb
and
sbb
sbb
pop
sbb
and
add
add
add
cli
add
add
inc
lods
jmp
push
jmp
xorl
pushl
push
pop
pushl
mov
nop
nop
nop
nop
nop
pushl
add
ror
xor
mov
mov
push
shr
push
mov
sub
add
shl
pop
add
sub
and
xor
and
dec
test
jne
pop
pop
call
nop
jmp
push
nop
push
jmp
sub
sbb
sbb
jmp
add
test
jmp
and
and
and
pop
pop
sbb
and
daa
and
sbb
sbb
pop
and
sbb
sbb
and
sbb
sbb
test
fldt
jmp
pop
and
sbb
and
shll
add
rol
xor
mov
call
nop
movl
mov
jmp
mov
or
or
and
add
mov
and
mov
inc
and
mov
rep
jmp
and
sbb
and
push
mov
or
xor
xor
xor
mov
add
mov
and
add
dec
mov
jmp
call
xchg
cmpb
push
pop
jmp
add
mov
mov
and
or
mov
jmp
or
inc
sub
pop
call
nop
or
sub
add
mov
mov
mov
xchg
mov
xchg
mov
nop
mov
xchg
ret
jmp
pop
sbb
sbb
pop
sbb
push
and
push
push
add
add
add
xor
jmp
add
mov
jmp
pushl
jmp
sbb
and
and
and
daa
and
sbb
and
pushl
xchg
call
xchg
shr
dec
pop
rol
xor
pop
pushl
xchg
ret
jmp
and
sbb
and
and
sbb
and
add
add
add
rorb
xchg
movl
nop
ror
mov
or
or
shl
add
mov
shr
jmp
sbb
sbb
and
and
and
and
sbb
sbb
and
sbb
rclb
and
xchg
jmp
incl
push
pop
xor
push
pop
jmp
add
xor
jmp
out
and
dec
or
add
mov
jmp
add
add
push
jmp
and
addl
add
nop
push
xchg
call
push
pop
pushl
shl
sub
and
pop
shr
xor
and
mov
or
mov
mov
mov
nop
nop
nop
nop
nop
add
xchg
movzwl
jmp
sbb
es
and
and
sbb
jmp
addl
jmp
mov
addr16
mov
or
mov
mov
and
mov
mov
xchg
dec
and
mov
movzwl
jmp
sbb
and
and
sbb
and
daa
and
cmp
mov
jmp
push
jmp
and
sub
push
sbb
and
and
sbb
and
sbb
and
push
and
and
sub
test
or
add
jmp
xorl
add
dec
sub
mov
and
shr
and
or
pop
push
rol
or
sub
shr
ror
shr
and
add
mov
xor
shr
xor
mov
dec
test
jne
pop
ror
dec
xor
and
add
call
xchg
pushl
ror
sub
sub
xor
pop
xor
mov
push
nop
jmp
cmp
nop
jne
push
xchg
xor
mov
mov
jmp
sub
and
sbb
sbb
and
and
sbb
and
push
and
sbb
sbb
sbb
sbb
mov
rorb
dec
mov
xor
and
ror
or
xor
mov
jmp
jle
shl
or
dec
sub
or
mov
mov
xchg
andl
xchg
add
nop
jmp
sub
or
sub
mov
call
mov
inc
or
inc
and
pop
pushl
push
pop
push
jmp
and
daa
daa
and
sbb
addl
pushl
xchg
push
jmp
xorl
call
xchg
jmp
push
jmp
sbb
daa
and
and
pushl
nop
call
nop
sub
pop
ret
jmp
pop
and
sbb
sbb
and
sbb
add
ret
jmp
sbb
and
sbb
daa
sbb
sbb
sub
sub
add
test
add
push
xchg
dec
dec
and
add
mov
sub
nop
shr
jmp
and
and
and
es
and
and
sbb
sbb
pop
add
add
lea
jmp
and
and
and
sub
pop
sbb
daa
sbb
jp
add
shr
add
pop
cmp
nop
mov
jmp
daa
sbb
and
sbb
and
daa
daa
daa
and
and
sbb
sbb
sbb
inc
in
jmp
sbb
pop
es
pop
and
sbb
sbb
sbb
and
pop
sbb
and
sbb
add
jmp
and
push
and
and
and
sub
sbb
and
and
mov
jmp
and
sbb
daa
and
pop
sbb
pop
sbb
and
sbb
push
and
sbb
sbb
pop
and
and
pop
and
and
sbb
sbb
sbb
daa
daa
daa
sbb
xchg
add
jmp
je
mov
dec
mov
sub
xchg
mov
xchg
jmp
or
and
rol
mov
mov
addr16
jmp
add
mov
ror
jmp
sbb
and
sbb
sbb
sbb
fcomi
decl
jmp
sbb
and
push
and
sub
daa
sbb
sbb
and
and
adc
dec
add
add
out
iret
pop
jmp
ret
jmp
and
sbb
pop
sbb
and
sbb
push
and
sbb
sbb
sbb
pop
and
and
and
and
xchg
movl
xchg
jmp
mov
addr16
test
jmp
sbb
push
and
daa
and
sbb
pop
sbb
sbb
and
sbb
test
add
add
shll
loop
shlb
repnz
add
mov
sbb
daa
sbb
and
and
and
lret
add
add
ror
add
pop
ret
jmp
sbb
and
and
sbb
and
and
and
sbb
sbb
and
add
add
push
jmp
and
and
sub
or
add
lea
jmp
pop
es
daa
and
and
and
push
sbb
push
and
push
addr16
push
jmp
and
and
sbb
daa
and
pop
sbb
addl
sub
push
and
xor
add
push
mov
mov
mov
pop
sub
ror
xor
ror
mov
dec
test
jne
pop
lea
mov
call
nop
test
jmp
sbb
pop
sbb
and
push
ret
sbb
and
sbb
sbb
and
sbb
pop
and
rolb
nop
mov
mov
inc
mov
mov
xchg
test
jmp
and
sub
push
pop
and
and
sbb
and
and
add
test
jmp
and
daa
sbb
and
pop
sub
sbb
sbb
and
lea
jmp
and
and
pop
sub
sbb
sbb
and
pop
sbb
jle
mov
xchg
movzwl
jmp
and
sbb
and
sbb
push
and
and
sbb
sbb
mov
sub
mov
and
mov
cmp
xchg
jmp
inc
xchg
push
addr16
mov
nop
mov
mov
lea
jmp
pop
sbb
sbb
daa
and
and
repz
call
sbb
daa
and
pop
and
and
sbb
sbb
sbb
sbb
and
pop
and
je
call
xchg
jmp
add
xchg
jmp
push
and
add
add
pop
add
xor
or
mov
mov
xchg
jmp
mov
xor
or
mov
mov
and
xor
and
add
mov
add
nop
mov
xchg
sub
sub
or
add
mov
movzwl
jmp
and
sbb
and
sbb
and
daa
and
sbb
jmp
push
sub
sub
pop
and
pop
and
pop
sbb
sbb
je
movb
nop
jmp
xchg
ret
add
pop
push
jmp
xorl
push
jmp
sbb
add
out
jmp
ficomps
out
dec
cltd
push
or
sub
mov
add
nop
mov
xchg
or
and
add
rol
or
mov
jmp
jmp
movb
nop
leave
jmp
and
push
and
sbb
and
pop
es
es
and
and
jmp
sub
and
sbb
and
and
and
sub
and
sbb
and
add
add
add
mov
pushl
add
mov
and
and
push
xor
inc
mov
mov
xor
push
sub
and
pop
add
ror
dec
or
dec
test
jne
pop
pop
call
nop
dec
jmp
daa
pop
and
pop
sbb
push
and
sbb
es
and
push
pop
es
sbb
and
and
test
jmp
mov
jmp
and
and
and
sbb
and
and
pop
sbb
sub
sbb
sbb
test
sti
call
enter
inc
hlt
cmp
push
pop
je
jmp
jne
and
xchg
add
mov
add
mov
add
nop
inc
mov
mov
inc
nop
jmp
test
jmp
sbb
sbb
push
push
sbb
sub
test
add
jmp
cmpl
mov
jne
sub
mov
inc
xchg
inc
mov
mov
xchg
xor
mov
xor
or
and
inc
mov
pop
leave
jmp
and
sbb
sbb
sbb
sub
sbb
and
sbb
and
sbb
sbb
and
sbb
pop
sbb
jmp
incl
xchg
mov
shr
mov
add
sub
mov
cmp
xchg
jmp
inc
mov
decl
jmp
es
sbb
and
and
sbb
and
sbb
and
and
and
test
incl
inc
add
rolb
test
clc
jmp
call
xchg
test
jmp
and
sbb
sbb
sbb
and
test
add
add
jmp
pop
sbb
push
sbb
and
sbb
sbb
and
sbb
sub
dec
add
add
testb
xor
or
or
pop
lea
jmp
and
sbb
sbb
daa
and
and
and
and
sbb
sbb
daa
jmp
sub
mov
xor
ror
mov
jmp
mov
jmp
and
and
pop
sbb
sbb
pop
pop
pop
and
sbb
sbb
sbb
pop
je
jmp
ret
jmp
sbb
pop
and
daa
sbb
sub
sbb
push
sbb
sbb
and
and
add
add
add
mov
idiv
pushl
rolb
add
shlb
mov
movzwl
jmp
sbb
and
sub
and
sbb
pop
and
es
xchg
add
sub
or
add
pop
and
add
mov
mov
mov
nop
add
mov
shr
xor
shl
pop
push
popl
sub
and
pop
leave
jmp
and
pop
and
pop
sbb
and
and
pop
and
es
daa
and
jmp
daa
and
sbb
push
daa
and
sbb
and
sbb
and
and
and
sbb
sbb
sbb
pop
and
add
add
mov
nop
add
mov
or
add
pop
shl
sub
mov
pop
leave
jmp
es
sbb
sbb
sbb
sbb
sbb
sbb
and
sbb
sbb
push
pop
es
jmp
sbb
and
sbb
and
sbb
sbb
add
add
dec
mov
lea
jmp
sbb
sbb
and
push
pop
and
and
and
sbb
pop
daa
and
sbb
test
incl
sbb
and
sbb
and
and
and
sbb
and
sbb
sub
jmp
rep
jmp
and
daa
sbb
and
and
sbb
pop
and
and
and
sbb
movzwl
jmp
sbb
and
sbb
sbb
daa
sbb
and
sbb
sbb
and
sbb
incl
xchg
add
mov
cmp
nop
mov
jmp
and
and
sbb
sbb
sbb
and
push
sbb
pop
push
daa
sbb
jmp
les
loopne
inc
and
add
add
add
mov
mov
push
popl
movl
mov
call
push
pop
add
inc
and
mov
add
jmp
pushl
mov
pop
jmp
push
adc
mov
ror
sub
or
mov
sub
mov
mov
sub
mov
and
add
jmp
pushl
add
rol
mov
xor
pop
call
mov
call
xchg
push
xchg
call
addr16
test
jmp
daa
sbb
and
and
and
push
pop
jmp
sbb
daa
sbb
sbb
sbb
sbb
sbb
sbb
sbb
add
jmp
mov
and
jmp
pop
and
pop
and
daa
sbb
and
sbb
sbb
and
sbb
je
mov
xor
sub
shr
ror
mov
sub
xchg
jmp
mov
ret
push
jmp
sbb
and
addl
inc
add
mov
call
mov
dec
pop
lea
jmp
and
and
push
and
and
and
nop
push
jmp
sbb
and
sbb
sbb
sbb
add
push
nop
jmp
mov
nop
mov
nop
jmp
movb
mov
incl
push
pop
jmp
mov
mov
mov
mov
movzbl
jmp
push
and
daa
sbb
sbb
pop
es
ljmp
testl
movb
mov
nop
nop
nop
nop
nop
add
xchg
mov
xchg
and
shr
mov
mov
jmp
mov
nop
call
nop
call
nop
add
and
add
jmp
aam
sbb
leave
cltd
jmp
and
sbb
and
sbb
sbb
and
sbb
jbe
add
adc
out
ror
shr
pop
or
mov
or
sub
pop
push
popl
and
shl
sub
and
pop
leave
jmp
and
sbb
sbb
sbb
sbb
sbb
sbb
and
daa
and
sbb
sbb
jmp
sub
and
and
daa
and
pop
sbb
sbb
and
and
sbb
pop
add
add
add
ret
xor
nop
shr
jmp
and
and
sbb
and
pop
pop
and
sbb
pop
sbb
and
pop
and
and
and
sar
jmp
sbb
and
sbb
push
and
and
and
push
test
jmp
and
sub
and
push
push
and
and
jge
jmp
push
daa
sbb
sbb
es
push
sbb
sbb
sbb
and
pop
and
and
and
sbb
sbb
sbb
push
sbb
inc
repnz
jae
ret
leave
inc
nop
inc
mov
shr
jmp
sbb
and
sbb
and
sbb
sbb
and
ja
add
test
jmp
pop
sbb
and
sbb
sbb
pop
pop
sbb
pop
call
mov
add
mov
xchg
test
jmp
and
and
daa
pop
and
and
and
and
and
mov
add
shr
mov
mov
xchg
sub
xchg
sub
xchg
decl
jmp
pop
and
and
sbb
and
and
and
and
cs
pop
loop
lret
rol
sub
mov
ror
rol
mov
sub
mov
mov
mov
incl
addr16
jmp
jne
shr
dec
rol
mov
mov
mov
sub
nop
decl
jmp
sbb
sbb
sbb
sbb
and
and
and
and
test
incl
sbb
push
es
sbb
and
pop
and
sbb
es
and
pop
sbb
and
pop
and
mov
jmp
sbb
sbb
and
sbb
and
sbb
sbb
and
sbb
mov
inc
ror
mov
add
xchg
add
xchg
dec
jmp
pop
and
and
sub
and
sbb
sbb
and
daa
and
sub
test
jmp
xchg
scas
or
fisttpl
and
and
sbb
and
nop
nop
nop
nop
jne
jmp
mov
xchg
mov
addr16
jmp
call
xchg
test
jmp
and
and
sbb
and
sub
daa
sub
sbb
sbb
and
and
sub
and
testl
inc
cmpsb
jae
shr
pop
and
and
and
and
pop
sbb
and
pop
sbb
es
sbb
adc
sbb
and
and
sbb
and
sub
and
and
xchg
add
add
iret
jmp
and
and
sbb
and
and
sbb
sbb
and
and
and
sbb
xor
addr16
add
xchg
jmp
pop
clc
arpl
test
dec
and
jmp
and
sbb
sbb
sbb
and
and
and
sbb
cli
out
incl
or
and
sbb
sbb
and
sbb
je
jmp
cmp
push
and
sbb
sbb
daa
sub
insb
ljmp
jmp
sbb
sbb
sbb
and
subl
pushl
nop
call
mov
mov
or
and
mov
rol
mov
jmp
jb
add
rorl
and
xchg
dec
mov
jmp
imul
or
shr
dec
mov
mov
xchg
nop
nop
nop
nop
nop
call
mov
mov
nop
jmp
cwtl
or
incl
xchg
dec
mov
mov
jmp
and
sbb
and
pop
sbb
sbb
sbb
nop
jne
jmp
sub
xchg
jmp
xchg
dec
push
sub
rol
sub
mov
mov
and
xor
sub
mov
dec
mov
shl
add
add
and
add
rep
jmp
push
and
and
daa
and
push
and
sbb
sbb
and
clc
mov
call
mov
push
xchg
jmp
into
push
enter
add
dec
xchg
dec
nop
and
or
sub
ror
mov
movzbl
jmp
sbb
sbb
sbb
es
and
shl
jmp
sbb
and
sbb
add
nop
incl
xchg
lea
jmp
sbb
and
es
sbb
popa
clc
cmp
decl
mov
mov
xchg
test
jmp
sbb
daa
and
sbb
pop
and
pop
sbb
and
daa
and
and
test
add
pushl
xor
sub
sub
pop
rol
or
add
ror
dec
mov
add
mov
jmp
enter
out
dec
xor
xor
shl
mov
call
xchg
cmp
mov
jb
inc
nop
cmp
nop
jb
jmp
sub
xor
adc
repnz
cmp
xchg
jae
inc
mov
inc
nop
jmp
addb
jmp
sub
or
or
mov
sub
xchg
shr
jmp
pop
and
and
and
and
push
sbb
and
test
jmp
sbb
daa
pop
sbb
sbb
sub
and
and
and
or
pop
pop
sbb
sbb
es
mov
add
jmp
and
jmp
sbb
sbb
daa
and
and
and
and
dec
inc
gs
mov
xchg
movzwl
jmp
sbb
pop
sbb
sbb
pop
sbb
xor
and
shl
xor
xor
mov
and
push
pop
cmp
xchg
jne
jmp
test
inc
je
mov
mov
add
add
mov
or
ror
mov
mov
sub
nop
mov
mov
jmp
xchg
or
and
nop
jmp
popa
daa
jns
inc
and
mov
dec
addr16
jmp
ficoml
or
xchg
add
xchg
sub
add
and
add
inc
mov
jmp
ret
xchg
mov
jmp
sbb
daa
and
and
and
sbb
test
decl
nop
xor
mov
inc
addr16
jmp
or
mov
rol
dec
mov
mov
xchg
jmp
not
push
inc
mov
decl
jmp
push
pop
sbb
sbb
push
sbb
push
sbb
pop
pop
sub
sub
and
and
and
and
incl
inc
add
nop
cmpl
xchg
jne
call
push
pop
shr
mov
test
jmp
sbb
and
and
sbb
and
sbb
push
and
sub
daa
pop
sbb
sbb
jmp
es
jno
inc
and
push
pop
incl
nop
mov
addr16
xor
push
pop
jmp
push
jns
jne
call
nop
call
mov
call
xchg
call
nop
pushl
push
pop
jmp
loope
pop
cmpl
xchg
je
sub
shl
or
rol
mov
and
pop
sub
xchg
add
and
mov
shl
pop
add
add
sub
rol
ror
mov
and
pop
ret
jmp
and
pop
push
sbb
daa
sbb
and
pop
and
and
sbb
and
sbb
add
add
add
pop
call
xchg
and
mov
push
jmp
sbb
sbb
sbb
es
and
and
and
xor
in
push
bnd
nop
push
jmp
and
and
sub
jnp
in
pop
nop
nop
nop
nop
nop
mov
mov
nop
nop
nop
nop
nop
call
addr16
mov
nop
and
ror
mov
mov
shl
mov
add
xchg
nop
nop
nop
nop
nop
test
jmp
and
and
sub
and
sbb
test
add
pushl
shr
mov
inc
xor
and
pop
add
xchg
jmp
mov
or
shr
mov
add
xchg
nop
nop
nop
nop
nop
push
xchg
call
nop
cmp
nop
mov
jmp
and
and
sub
sbb
sbb
sbb
je
shl
or
and
mov
test
jmp
sbb
push
sbb
and
pop
sbb
sbb
and
pop
sbb
and
and
pop
sub
sbb
nop
nop
nop
nop
jne
sub
mov
rol
mov
pushl
mov
xor
mov
pop
xor
dec
mov
add
mov
add
mov
nop
nop
nop
nop
nop
jmp
jns
movzwl
jmp
sbb
sbb
sbb
daa
sbb
sbb
sbb
daa
and
and
and
es
and
jmp
add
sub
add
sub
mov
add
nop
add
mov
push
mov
nop
nop
nop
nop
nop
pushl
xchg
call
nop
mov
xchg
add
mov
nop
nop
nop
nop
nop
add
nop
add
xor
mov
test
jmp
and
sbb
and
sbb
pop
nop
nop
nop
nop
nop
jne
add
xchg
cmpl
addr16
jne
call
nop
mov
mov
sub
sub
xor
xor
ror
mov
nop
nop
nop
nop
nop
ror
sub
and
xor
mov
mov
mov
cmp
xchg
jne
dec
xor
add
mov
sub
and
add
add
mov
xor
pop
nop
nop
nop
nop
nop
mov
nop
mov
mov
add
nop
sub
pop
sub
mov
pop
leave
jmp
sbb
push
and
and
pop
sbb
and
and
pop
ret
jmp
push
es
sbb
and
es
sbb
add
add
add
add
add
add
xchg
xor
add
add
add
xor
add
xor
add
xor
add
xor
add
add
add
add
xor
add
inc
add
add
add
fldl
add
inc
add
add
add
or
add
add
sub
add
add
dec
inc
add
add
add
mov
add
lds
add
add
add
dec
outsb
imul
inc
outsl
outsb
je
outsl
insb
jae
js
add
add
popa
addr16
imul
jns
add
dec
inc
push
dec
xor
cs
insb
add
popl
insl
insl
imul
add
outsl
push
gs
outsb
outsw
add
dec
dec
dec
cs
insb
add
je
jb
arpl
jae
addb
gs
outsl
fs
gs
popa
outsb
fs
gs
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
pop
add
je
outsl
jb
addr16
jne
fs
imul
add
jo
je
push
popa
addr16
add
stos
add
outsb
jae
popa
je
dec
gs
popa
add
push
inc
gs
imul
add
fs
arpl
inc
add
inc
push
xor
cs
insb
mull
dec
ds
nop
jl
and
fcoml
jae
and
add
notl
lahf
sti
adc
and
jl
jo
faddl
mov
and
add
jge
xchg
iret
adc
sti
mov
add
add
mov
mov
cmp
xor
and
in
xor
dec
cmp
xchg
fnstcw
pushf
cmp
add
add
jl
push
xor
aaa
int3
cmp
cmp
push
aas
fnsave
dec
xor
aaa
or
sub
aaa
aaa
jl
or
push
cmp
add
add
add
pop
xor
xchg
xor
xor
xor
xor
xor
xor
add
add
cld
fdivrp
incl
