mov
mov
jmp
cmpl
addr16
je
push
cld
inc
sub
sub
mov
jmp
jmp
jmp
jmp
jmp
cld
xor
mov
inc
mov
jmp
jmp
jmp
jmp
jmp
jmp
jmp
xchg
shl
add
add
mov
and
push
pop
sub
addr16
mov
mov
jmp
pushl
and
push
mov
mov
and
mov
push
add
shr
rol
pop
rol
rol
add
dec
test
jne
pop
pop
call
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
je
push
xchg
pushl
or
inc
shl
and
push
sub
mov
or
sub
and
add
shl
dec
test
jne
pop
pop
call
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
mov
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
and
add
nop
xor
shl
sub
inc
and
mov
ror
xor
or
pop
jmp
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
icebp
rol
add
add
pop
add
pop
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
sbb
adc
in
push
mov
push
xchg
jmp
mov
nop
jmp
jmp
push
mov
push
mov
jmp
jne
xor
xchg
jmp
jmp
jmp
push
cld
shl
mov
push
cld
push
xchg
jmp
jmp
jmp
jmp
jmp
jmp
push
mov
dec
inc
ror
or
rol
mov
jmp
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
xchg
decl
adc
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
add
cmpl
mov
jne
jmp
leave
test
push
mov
push
cld
add
xchg
push
mov
call
xchg
jmp
jmp
push
mov
call
cld
jmp
pushl
or
ror
mov
shl
add
pop
push
cld
push
xchg
jmp
push
xchg
xor
mov
jmp
jmp
jmp
jmp
jmp
cld
call
xchg
mov
mov
mov
xchg
jmp
push
xchg
lea
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
cld
jmp
push
xchg
push
push
pop
jmp
or
xchg
jmp
jmp
mov
call
mov
mov
cld
mov
mov
mov
xchg
or
and
and
inc
or
mov
jmp
and
addr16
jmp
call
mov
jmp
jmp
jmp
cld
push
and
push
shr
push
xor
dec
dec
sub
shl
pop
sub
mov
or
sub
dec
test
jne
pop
pop
call
jmp
jne
jmp
jmp
jmp
jmp
mov
mov
sub
mov
push
xchg
jmp
mov
mov
andl
xchg
add
cld
jmp
jmp
jmp
jmp
push
cld
shr
sub
inc
mov
push
push
pop
push
addr16
push
cld
push
mov
jmp
call
xchg
lea
jmp
jmp
jmp
jmp
jmp
jmp
call
addr16
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
incl
adc
enter
and
shl
mov
and
xor
pop
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
icebp
mov
jmp
jmp
jmp
jmp
jmp
push
xchg
shr
rol
shl
add
and
mov
sub
mov
jmp
sub
nop
or
add
mov
mov
xchg
andl
addr16
push
nop
add
xchg
or
rol
or
add
mov
or
dec
rol
rol
mov
jmp
mov
mov
mov
mov
mov
cld
add
shl
dec
mov
push
add
or
add
push
shl
shr
xor
add
push
add
add
rol
rol
add
pop
rol
shl
shr
or
mov
dec
test
jne
pop
pop
call
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
add
add
out
ror
mov
rol
xor
mov
shr
push
or
mov
mov
mov
shr
push
sub
shl
shr
pop
ror
sub
dec
test
jne
pop
lea
mov
call
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
cld
jmp
push
mov
add
mov
and
and
and
mov
and
and
and
add
dec
inc
sub
dec
test
jne
pop
push
or
pop
add
mov
call
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
add
add
jno
jmp
rolb
jmp
jmp
jmp
jmp
jmp
jmp
jne
or
cld
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
push
sti
incl
mov
sub
dec
push
or
push
dec
sub
or
add
pop
and
dec
test
jne
pop
lea
mov
call
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
call
xchg
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
into
decl
add
call
mov
jmp
jmp
jmp
jmp
jmp
jmp
fs
add
jmp
pushl
cld
call
nop
push
popl
sub
rol
mov
add
dec
and
add
pushl
mov
xor
and
add
sub
pop
jmp
sub
mov
mov
mov
add
xchg
add
push
pop
jmp
incl
nop
xor
mov
inc
nop
jmp
jmp
add
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
push
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
push
or
sbb
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
add
add
shlb
mov
sub
shl
mov
movzbl
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
inc
nop
mov
mov
mov
xchg
jmp
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
into
incl
sbb
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
add
add
rorb
add
rclb
stos
xchg
shl
mov
jmp
je
call
mov
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
add
add
nop
lea
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
xchg
jmp
and
add
add
xor
mov
rep
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
leave
not
loope
mov
mov
xor
add
and
add
xor
rol
add
mov
mov
sub
mov
add
cld
jmp
rol
add
rol
sub
mov
push
addr16
mov
and
xor
and
mov
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
add
add
negl
out
jecxz
xchg
outsl
add
mov
or
pop
xor
sub
or
xor
or
pop
mov
shr
and
shl
pop
jmp
movl
addr16
or
mov
sub
mov
shl
add
mov
shr
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
add
addr16
and
cld
mov
mov
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
add
push
cld
push
add
mov
inc
or
or
push
dec
mov
push
add
add
mov
mov
pop
add
ror
add
shl
add
dec
test
jne
pop
pop
call
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
xor
cld
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
push
mov
push
mov
push
shr
inc
or
pop
add
push
xchg
call
xchg
push
xchg
xor
add
and
pop
shr
xor
mov
jmp
push
mov
pushl
xchg
pushl
mov
call
xchg
leave
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
shl
xor
rol
sub
and
add
add
or
mov
xor
mov
add
xchg
jmp
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
rorb
adc
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
inc
das
inc
cld
ror
or
mov
call
mov
jmp
call
cld
shl
and
sub
and
pop
pushl
xchg
push
cld
pushl
push
pop
push
cld
call
addr16
and
and
or
mov
pop
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
push
nop
inc
dec
or
ror
mov
mov
call
xchg
movl
mov
push
xchg
pushl
mov
call
mov
shr
pop
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
mov
mov
lea
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
inc
mov
jmp
add
xchg
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
inc
lock
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jle
and
and
mov
jmp
add
shl
and
sub
sub
pop
shl
or
xor
sub
pop
jmp
push
pop
jmp
jmp
jmp
sub
add
sub
and
pop
rol
dec
dec
mov
and
add
add
xor
push
pop
rorl
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
rolb
jmp
jmp
jmp
jmp
jmp
jne
ror
and
dec
and
pop
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
ljmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
shr
por
jmp
jmp
jmp
jmp
jmp
jmp
jmp
js
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
mov
add
add
cld
add
add
mov
adc
pop
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
add
or
and
shl
pop
cmp
mov
jmp
nop
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
nop
jmp
jmp
jmp
jmp
jmp
jmp
jmp
cmp
add
jmp
jmp
jmp
jmp
jmp
je
nop
jmp
jmp
jmp
jmp
jmp
jmp
jmp
cmpb
xchg
jmp
push
xchg
mov
xchg
mov
mov
lea
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
shl
incl
sbb
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
out
add
mov
addr16
movzwl
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
or
or
mov
and
cld
cmp
mov
jne
and
xchg
add
mov
jmp
mov
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
mov
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
push
add
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
mov
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
mov
jmp
jmp
jmp
jmp
jmp
jmp
jmp
xchg
add
pusha
xchg
jmp
jmp
je
nop
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
call
sub
mov
mov
add
add
nop
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
mov
and
shr
mov
pusha
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
sti
mov
mov
push
xchg
jmp
ds
adc
rol
and
and
mov
mov
mov
mov
xchg
sub
sub
or
mov
jmp
call
push
pop
add
push
pop
push
popl
movb
addr16
movl
xchg
call
cld
popa
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
je
call
xchg
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
icebp
call
push
pop
test
jmp
jmp
jmp
jmp
jmp
jmp
je
push
xchg
xor
mov
jmp
mov
addr16
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
add
mov
addr16
or
mov
movsbl
jmp
jmp
jmp
jmp
jmp
jmp
rol
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
xor
mov
jmp
add
nop
add
nop
pushl
and
shr
mov
ror
pop
inc
cld
inc
xchg
decl
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
mov
pusha
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
call
xchg
popa
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
and
xchg
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
iret
insb
and
pop
lea
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
call
mov
dec
push
pop
lea
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
add
add
inc
clc
nop
xor
and
sub
mov
mov
mov
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
mov
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
jmp
jne
add
xchg
cmpl
push
pop
jne
rol
and
dec
add
pop
nop
nop
nop
nop
nop
shl
mov
mov
xchg
add
nop
add
sub
pop
mov
xor
mov
pop
leave
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
mov
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
add
add
leave
sub
shl
inc
mov
sub
mov
mov
cld
mov
xchg
jmp
movb
cld
jmp
loope
ss
sub
add
mov
xor
mov
cmp
xchg
je
incl
nop
add
mov
and
mov
jmp
push
popf
mov
or
and
sub
or
mov
inc
mov
shl
or
mov
jmp
incl
push
pop
jmp
mov
or
or
shr
ror
mov
jmp
cmp
xchg
jl
xor
push
pop
jmp
or
or
and
dec
mov
movzwl
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
mov
cld
add
nop
ror
mov
shl
or
dec
pop
jmp
rep
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
add
xchg
movzwl
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
inc
cld
cld
add
push
pop
cmp
xchg
mov
jmp
jmp
jmp
jmp
jmp
jmp
jmp
and
or
push
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
rol
dec
and
xor
dec
pop
or
or
pop
leave
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jl
mov
add
or
ror
mov
mov
pushl
inc
or
add
pop
mov
mov
pushl
xor
and
or
pop
add
addr16
mov
xchg
and
mov
add
xchg
nop
nop
nop
nop
nop
cltd
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
loop
mov
add
mov
xor
mov
shr
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
clc
add
or
jmp
jmp
jmp
jmp
jmp
jmp
xchg
add
and
or
shl
or
xor
mov
and
mov
inc
push
pop
inc
mov
shr
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
je
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
add
nop
nop
nop
nop
nop
dec
mov
shl
sub
mov
sub
xchg
mov
xchg
incl
nop
jmp
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jge
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
or
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
mov
add
add
imul
adc
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
mov
nop
nop
nop
nop
or
shl
or
xor
ror
mov
mov
xchg
sub
addr16
sub
xchg
decl
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jne
or
mov
xor
inc
mov
mov
mov
jmp
out
dec
xchg
mov
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
jmp
jmp
lods
cltd
sbb
decl
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
incl
jmp
jmp
jmp
jmp
jmp
jmp
mov
and
nop
mov
cld
jmp
jmp
mov
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
mov
nop
nop
nop
nop
xor
or
sub
mov
add
mov
add
xchg
dec
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jno
scas
les
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
clc
add
jne
lea
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
call
cld
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
sub
arpl
incl
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
mov
add
add
into
mov
sub
nop
jmp
and
por
jmp
jmp
jmp
jmp
jmp
jmp
jmp
mov
iret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
xor
cld
add
mov
dec
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
dec
adc
call
and
mov
mov
xchg
nop
nop
nop
nop
nop
incl
nop
dec
xchg
mov
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
dec
cmpsb
cmp
mov
pushl
mov
call
cld
mov
mov
xor
and
mov
mov
addr16
call
addr16
mov
push
pop
shl
push
sub
push
add
pop
add
ror
shl
and
dec
test
jne
pop
lea
mov
call
jmp
xchg
mov
jne
jmp
sub
mov
jmp
dec
mov
jmp
pop
jp
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
clc
out
decl
sbb
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jne
jmp
jns
xor
rolb
dec
and
movzbl
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
shl
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
rcll
xchg
lea
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
bound
lock
leave
or
mov
nop
nop
nop
nop
nop
sub
rol
mov
mov
sub
mov
xor
add
or
shr
add
mov
rep
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
fisttpll
rol
or
add
inc
mov
call
xchg
cmp
mov
jb
inc
xchg
cmp
cld
jb
inc
xchg
cmp
cld
jmp
and
in
pushl
mov
call
xchg
push
cld
jmp
in
pop
jae
inc
addr16
inc
mov
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
add
add
icebp
test
add
shr
mov
mov
add
xor
sub
mov
and
mov
sub
push
pop
jmp
adc
mov
mov
nop
or
mov
mov
xchg
jmp
dec
xadd
inc
and
xchg
dec
push
pop
mov
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
nop
nop
nop
nop
je
pushl
sub
and
mov
inc
pop
xor
shr
or
mov
add
mov
sub
cld
jmp
inc
and
add
xor
and
mov
sub
xchg
shr
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
cmp
and
push
pop
xor
xchg
inc
xchg
jmp
sub
or
add
rol
add
mov
xor
mov
mov
nop
jmp
pop
jno
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
js
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
mov
add
mov
mov
movzwl
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
sub
jecxz
jnp
add
xchg
cmp
mov
jne
jmp
inc
or
mov
incl
mov
mov
xchg
xor
push
pop
cmpl
mov
je
mov
dec
mov
mov
mov
mov
sub
xor
pop
sub
nop
jmp
dec
jl
and
xchg
add
mov
add
mov
add
cld
sub
and
xor
and
add
inc
xchg
inc
mov
jmp
dec
sbb
mov
ror
pop
rol
mov
shl
sub
or
pop
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
dec
lock
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
incl
inc
add
xchg
cmpl
push
pop
jne
call
xchg
nop
nop
nop
nop
nop
mov
cld
mov
mov
nop
nop
nop
nop
nop
mov
xchg
add
mov
rol
shr
mov
push
sub
dec
sub
add
and
add
or
and
sub
dec
test
jne
pop
ror
rol
ror
mov
call
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
jecxz
call
mov
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jne
jmp
push
xchg
xor
shr
and
or
add
mov
call
xchg
push
xchg
mov
mov
call
nop
mov
mov
nop
nop
nop
nop
nop
mov
and
ror
xor
xor
mov
sub
ror
rol
mov
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
pop
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
add
add
add
and
mov
add
mov
jmp
nop
nop
nop
nop
nop
add
mov
add
xchg
push
mov
call
xchg
cmp
mov
mov
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
add
add
xor
sub
mov
nop
nop
nop
nop
nop
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
decl
rorb
enter
add
nop
nop
nop
nop
nop
and
ror
mov
add
cld
add
mov
jmp
jns
movzwl
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
nop
nop
nop
nop
jmp
pushl
or
mov
pop
add
mov
add
nop
push
mov
pushl
mov
call
cld
mov
addr16
nop
nop
nop
nop
nop
add
xchg
add
nop
and
mov
nop
nop
nop
nop
nop
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
incl
cmpl
mov
jne
call
mov
mov
xchg
nop
nop
nop
nop
nop
xor
xor
ror
ror
xor
mov
xor
mov
inc
dec
and
pop
xor
xor
dec
pop
or
sub
pop
mov
mov
cmp
xchg
nop
nop
nop
nop
nop
jne
and
xor
sub
dec
or
and
add
add
xchg
mov
nop
pushl
sub
and
xor
or
sub
pop
add
push
pop
leave
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
mov
mov
hlt
lret
push
push
mov
sarl
pop
or
adc
ds
popa
bound
fmul
in
fisubl
stos
lret
ljmp
ror
xor
fs
in
pushf
loop
sub
push
xchg
loopne
movsl
mov
adc
mul
mov
adc
into
adc
fsubrs
or
mov
mov
and
iret
sahf
adcl
insb
scas
int3
ds
add
popf
fwait
cmp
mov
pop
leave
mov
and
xor
jl
fs
cmc
andb
jle
inc
ja
mov
mov
dec
jno
jae
xchg
xor
pop
dec
xchg
xchg
mov
cmp
out
cld
or
stos
gs
pusha
mulb
arpl
loope
test
adc
mov
pusha
ficoml
push
das
repnz
iret
dec
aad
jmp
or
ficompl
test
fmull
add
mov
cmp
movsl
aas
add
jns
adc
mov
out
imul
movsb
lret
and
into
dec
addr16
xor
pop
scas
sub
inc
test
mov
mov
inc
stc
inc
shll
les
inc
mov
or
pusha
mov
jg
mov
mov
sbb
mov
orb
sti
jecxz
daa
cli
dec
mov
outsl
pop
jl
mov
mov
inc
cs
jae
test
icebp
pushf
inc
or
add
orl
out
xorl
pop
aas
scas
enter
sbb
xchg
shl
inc
cwtl
pop
or
addr16
ss
mov
mull
jb
cmpl
mov
sub
testb
add
popf
lret
das
xchg
and
hlt
mov
stos
jno
icebp
mov
push
scas
outsb
rorl
sub
xor
imul
jle
mov
xlat
ja
jmp
and
add
lcall
or
scas
xor
lods
iretw
push
jno
shll
add
inc
pusha
mov
jb,pt
xchg
jnp
test
xchg
mov
pop
jbe
cli
es
sbb
dec
aas
leave
mov
dec
fadd
cmp
lock
js
adc
mov
xlat
ret
imul
pop
sbb
stos
mov
pop
lcall
enter
or
inc
mov
jg
pop
jae
push
aaa
jno
jge
jg
push
mov
movsl
test
stc
sahf
scas
lods
mov
cmpsb
mov
nop
lods
and
call
pop
test
and
lods
cmc
dec
dec
inc
mov
dec
fstps
adc
movsl
sub
cmpsl
das
xchg
mov
int
jne
push
sahf
xchg
mov
or
mov
stos
xchg
out
jp
adc
jmp
sub
mov
sub
jmp
jl
lock
dec
in
push
pop
ret
or
loopne
fs
ds
xor
jmp
gs
or
xchg
cltd
popa
and
lcall
push
pop
ss
cmpl
dec
andb
pop
js
fstpl
mov
fisubrl
stos
es
mov
adc
adc
pop
in
sti
push
mov
xchg
push
scas
test
or
scas
pop
inc
xchg
jp
xchg
add
loop
and
aam
jo
popa
adc
pop
cltd
ret
cmp
mov
push
or
lea
lock
lcall
fimuls
in
ds
movsb
mov
.byte
into
sar
xchg
pop
cmp
lods
sub
mov
adc
mov
cli
test
sbb
in
cmp
push
sbb
rolb
shrl
cmpsl
test
mov
push
adc
inc
mov
fdivrs
push
negb
mov
fidivs
jae
int3
icebp
dec
out
je
xchg
icebp
imull
stos
xor
popf
or
sbb
call
mov
outsl
ror
lcall
mov
roll
leave
inc
push
scas
jecxz
stos
xor
push
cld
mov
cmp
jge
jmp
pusha
push
mov
jge
push
repnz
in
aad
add
or
rcrb
fsqrt
adc
outsb
pushf
add
dec
movsl
mov
xchg
or
push
or
stos
sub
xlat
imul
inc
mov
sarb
jp
in
lcall
sahf
frstor
rolb
and
lods
and
stos
adc
lret
mov
xchg
add
inc
lods
loope
mov
mov
push
js
and
fnstenv
sub
mov
mov
in
add
dec
dec
mov
jg
inc
adc
mov
push
pop
xchg
ja
fbstp
ljmp
push
mov
test
fmull
shlb
push
sbb
out
pushf
enter
mov
push
lea
push
add
cmovne
xchg
sub
mov
jmp
or
notl
cmp
jmp
pop
cmp
mov
xchg
cmpb
mov
ljmp
or
call
ljmp
dec
fs
jae
mov
arpl
adc
pop
movsl
push
lea
dec
les
jmp
mov
dec
mov
movl
cmc
bnd
xchg
std
xchg
fwait
pop
or
aad
test
pop
pusha
mov
jae
sbb
movsl
mov
dec
hlt
mov
je
xchg
bound
mov
push
mov
fldl
sbb
filds
or
call
mov
mov
insb
mov
mov
mov
add
sarb
push
shrb
fdivl
repnz
test
ds
not
inc
sub
mov
enter
out
mov
shll
or
aas
adcb
jae
cmp
pop
vmovd
and
add
and
mov
nop
in
xchg
cmp
les
stos
mov
pop
outsl
xorb
cmp
dec
out
mov
inc
xlat
cwtl
xchg
repnz
xchg
adc
arpl
mov
jno
fwait
lret
in
leave
test
shll
out
adc
das
adc
mov
test
sub
sbb
cmp
mov
loopne
push
xchg
stc
sbb
pop
mov
mov
and
pop
adc
add
stc
aam
pop
lret
push
pop
daa
xchg
mov
dec
outsb
cltd
jmp
inc
ucomiss
loope
inc
inc
stc
add
add
ljmp
push
popa
dec
stc
sbb
and
adc
stc
jb
inc
in
stos
inc
or
jmp
or
jo
jo
mov
ffreep
int
adc
mov
push
dec
aas
cmpsl
test
jge
pusha
aaa
sub
dec
jnp
test
sub
and
aam
and
mov
and
adc
xchg
fildl
pop
pop
stos
or
loop
push
enter
andb
mov
inc
lds
add
outsb
xlat
xchg
ret
jge
scas
xchg
subb
out
rcrb
nop
mov
shll
cli
jecxz
gs
test
mov
cmp
push
add
hlt
lret
xchg
ja
push
test
scas
fwait
dec
dec
rcr
test
sub
lahf
loope
imul
into
sbb
jo
mov
cltd
adc
add
popa
popf
add
ljmp
sahf
cltd
cltd
jne
test
shr
fcoms
iret
ss
insl
inc
mov
hlt
ljmp
sub
mov
sahf
movsl
popw
sbb
jno
je
mov
enter
popf
repz
dec
and
jp
mov
bound
sub
mov
jno
popf
lods
push
mov
out
stos
jnp
lahf
call
dec
and
outsl
dec
outsb
out
add
jno
push
int3
mov
dec
shl
sub
hlt
mov
mov
lods
in
cmp
out
jge
cmp
sbb
jmp
mov
cli
adc
fbstp
jnp
sub
push
mov
imul
mov
cld
ret
inc
mov
outsb
daa
cmp
aam
addb
lahf
mov
xor
sbb
in
cmp
push
cmp
incl
jl
sub
ss
jg
daa
push
sbbl
clc
or
test
jecxz
jo
sti
cmpsl
ss
mov
rcll
push
lret
jecxz
imul
add
cld
push
rclb
jne
shl
cmpsl
fstps
add
out
insl
inc
int3
loope
mov
mov
fidivrs
mov
and
add
movsb
adc
in
ljmp
mov
jg
jno
add
pushf
test
inc
mov
loop
or
xor
fildl
pop
pop
mov
cmp
es
push
movsb
adc
leave
pop
jno
dec
lcall
cwtl
and
pop
sub
bound
mov
aam
out
in
stos
hlt
or
out
cltd
ljmp
int
test
jge
and
push
inc
test
into
das
loope
mov
mov
das
aam
cmp
ja
bound
bnd
lahf
nop
popf
cmp
or
js
cmc
add
mov
pop
std
aam
notb
jge
js
xchg
lret
jae
lret
dec
adc
pop
mulb
int3
mov
stc
pushw
xor
sahf
shlb
ljmp
mov
dec
movsb
adc
iret
mov
sub
loopne
int3
mov
adc
or
outsl
inc
cwtl
fiaddl
cwtl
push
xchg
lahf
mov
data16
pusha
je
insb
mov
jp
add
mov
jecxz
cmp
or
sbb
in
xor
jne
jns
imulb
dec
mov
int3
shl
loop
mov
mov
mov
xor
push
lock
repz
outsl
xchg
into
cmc
icebp
ja
ret
sahf
and
ror
cmpsb
das
fmuls
aam
or
pop
clc
cmp
out
inc
push
dec
mov
out
lds
insl
mov
imul
lock
mov
mov
dec
push
pop
adc
inc
sahf
pop
mov
pop
int3
das
xchg
rcrl
jecxz
inc
loope
movsl
sub
add
pusha
jge
cwtl
or
mov
fidivl
in
mov
push
pop
les
adc
sbbl
fwait
scas
sbb
daa
dec
enter
add
lcall
dec
out
negb
sub
test
dec
out
jbe
dec
insb
mov
inc
pushf
jg
jno
mov
cmp
jbe
testb
pop
das
sarw
out
mov
insl
add
addr16
aad
pusha
clc
lods
nop
in
mov
inc
sbb
xor
stc
push
not
mov
and
adc
cld
xchg
sbb
xchg
lds
mov
stos
mov
insl
enter
arpl
cmp
cld
xchg
int
repnz
push
jg
mov
sbb
inc
add
imul
out
add
lea
cmp
xor
arpl
mov
pop
pop
dec
shlb
mov
cmp
sbb
adc
inc
xchg
addl
insb
mulb
aam
sub
test
and
and
imull
or
pop
lods
lret
push
fs
lods
sub
insl
push
pop
or
cld
push
cmp
arpl
add
mov
xor
mov
pop
pop
lea
andb
pusha
jae
lds
out
xchg
cmp
mov
lret
jg
mov
rcll
cmp
decl
push
in
test
cltd
clc
aam
ffree
mov
movsl
sub
mov
in
mov
les
xor
and
xor
imul
enter
dec
xor
add
hlt
jne
jo
frstor
inc
hlt
popa
add
sub
sbb
dec
imul
outsl
insb
inc
pushf
jno
xor
and
nop
cmp
xor
ljmp
pop
push
sahf
push
sbb
imul
cltd
and
inc
cs
mov
lds
xor
xchg
or
sub
icebp
pop
rcr
fwait
out
pushf
ret
mov
fcom
dec
add
sbb
cwtl
or
jne
mov
sub
scas
aam
pop
or
bound
adc
mov
mov
mov
fdivrs
jecxz
popf
and
mov
jl
call
dec
sarb
add
cmp
negb
inc
and
jle
into
mov
je
lea
push
jns
dec
push
aad
pop
add
or
mov
ret
repz
cmp
je
sahf
mov
aam
and
cmp
or
add
jo
out
lret
sbb
xchg
cmc
jmp
sub
pop
sbb
in
or
xor
lods
ret
ss
xchg
push
mov
pop
inc
addb
mov
testl
pop
int
in
fstp
or
mov
mov
lcall
out
push
pop
push
lods
adc
ret
xor
or
addb
xor
movl
leave
sub
ja
push
repnz
ja
sbb
sbb
sub
jno
popf
stc
mov
xorl
mov
lahf
push
outsb
or
shlb
popf
xor
jmp
ds
sti
in
cmpsb
sub
gs
fists
das
cli
ret
dec
cmpl
push
mov
xchg
adc
jle
das
repz
ret
add
sub
in
push
mov
jge
cmp
ds
jb
xor
adc
adc
push
cli
inc
or
or
mov
mov
jmp
enter
roll
mov
repnz
arpl
mov
mov
xchg
ja
jb
std
xor
jbe
stos
adc
dec
xor
icebp
lcall
adc
icebp
stc
or
sub
dec
sub
std
cmp
lock
int
lret
mov
xchg
or
das
in
jno
lcall
jg
repz
fidivl
xor
mov
aas
mov
rorb
jns
repnz
rclb
outsb
xchg
loopne
mov
jmp
jae
ljmp
ss
std
loope
sahf
pop
cmp
hlt
sub
jne
mov
mov
divl
in
adc
dec
iret
mov
xchg
out
aaa
inc
int3
dec
jne
and
sub
push
in
addl
popa
ja
loopne
aaa
loope
aas
addr16
sub
pop
cs
je
cmp
sub
in
mov
xlat
cs
xor
mov
and
je
sbb
js
dec
fldl
divb
inc
cltd
mov
mov
sbb
cli
cs
mov
cmc
int3
movsb
push
adc
or
mov
ffreep
sbb
gs
lock
or
adc
inc
in
inc
jge
mov
xor
sbb
in
lcall
shrb
pop
push
stc
mov
rcrl
enter
mov
jg
loope
xchg
into
pop
adc
xchg
mov
dec
je
test
fists
fs
fistpll
int
pop
sahf
aas
mov
mov
add
pop
jl
jl
jbe
add
pop
mov
mov
repz
pop
shll
orb
fstpl
adc
and
xorb
sub
loop
lea
daa
out
sub
inc
lods
cli
cmp
cmpsl
aaa
mov
xchg
adc
rolb
or
rcrb
dec
fstl
leave
jo
push
mov
fdivrl
insb
es
jnp
mov
xchg
lds
jno
inc
dec
sbbl
ljmp
in
mov
in
fistps
push
mov
jbe
pop
stc
pushf
hlt
pop
adc
lret
mov
lock
xchg
and
and
das
andb
cld
adcb
movsb
cmpsb
cli
shlb
xor
mov
imul
popf
push
sbb
shrb
xorb
fisttps
stc
aam
push
xor
inc
xor
mov
push
pop
inc
.byte
cltd
