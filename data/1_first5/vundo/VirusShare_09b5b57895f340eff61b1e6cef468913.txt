jl
add
fcoms
add
imul
add
lds
add
jl
add
add
add
aaa
lcall
js
add
bound
add
add
pop
lcall
jno
add
sbb
add
sub
add
add
add
add
add
outsb
add
xchg
add
das
add
jl
add
lret
cltd
add
jl
add
jl
add
jl
add
cs
gs
jne
je
add
add
add
js
add
bound
add
add
push
sub
add
add
sbb
pushf
add
jl
add
jl
add
jl
add
inc
outsl
add
jl
add
xchg
lahf
add
xchg
add
lahf
add
jl
add
adc
add
mov
sub
add
outsl
add
je
jb
outsl
add
add
popa
add
add
add
add
imul
add
jo
add
inc
add
jb
jae
outsl
add
inc
add
add
imul
add
je
add
add
add
add
and
dec
add
ja
and
push
add
insl
add
outsb
add
add
add
outsl
add
popa
add
add
add
push
add
add
popa
add
jae
and
push
add
jb
imul
inc
add
imul
add
add
nop
hlt
inc
adc
adc
fisubrs
pop
out
rclb
cwtl
mov
pusha
add
push
mov
call
pop
pop
ret
mov
add
idivl
xchg
les
add
add
in
adc
shll
add
add
out
add
add
add
add
mov
add
popa
or
add
daa
add
add
add
mov
dec
add
inc
test
add
and
push
gs
push
mov
jb
fs
addl
dec
push
push
xchg
mov
and
stos
and
roll
push
jmp
fists
push
add
incl
adc
jne
les
or
std
adc
clc
dec
test
mov
pop
popa
lock
mov
mov
xor
add
push
adc
data16
mov
aam
test
add
add
testl
add
addr16
call
lea
dec
dec
std
std
inc
sbb
xchg
add
add
fldenv
push
loopne
xchg
push
clc
jmp
sub
enter
jo
mov
push
push
in
lea
push
add
dec
add
add
add
add
push
cmpsl
add
add
add
cmp
out
add
roll
mov
inc
movsl
add
inc
jne
inc
flds
jo
movsl
in
je
dec
outsl
mov
inc
bound
adc
fs
add
test
insl
jne
xor
xchg
pop
push
gs
jae
mov
loopne
insb
and
push
cmpsl
add
add
mov
add
pop
add
add
shll
add
add
out
add
add
add
add
mov
add
add
xorl
daa
add
add
and
lea
out
add
and
mov
mov
das
mov
inc
xor
fisttpl
cli
or
das
jg
mov
rorl
data16
out
add
shrb
fidivs
mov
aam
dec
jbe
outsl
and
xchg
lret
xor
leave
jno
rorl
pop
loope
sbb
push
cwtl
adc
iret
push
mov
ds
mov
mov
fistps
push
add
push
arpl
jg
inc
sbb
mov
enter
ss
pop
dec
cmp
retw
jb
mov
fsubrs
int3
mov
add
push
fisttpl
mov
cmp
insl
or
sbb
mov
loopne
aas
sub
push
mov
popa
inc
movsl
mov
movsb
loope
mov
out
mov
std
xchg
mov
insb
jno
ss
pop
mov
movsb
jb
jnp
aam
movl
mov
imul
testl
jp
ljmp
pop
inc
je
push
push
pop
clc
fcmove
ret
cli
jecxz
popf
add
jne
lahf
fs
call
cmpsl
xor
inc
inc
dec
push
sub
imul
add
adc
sbb
pop
or
sub
mov
in
push
dec
movsb
and
sbb
stos
fimuls
jbe
push
and
insb
data16
adcl
dec
imul
pop
adcb
rorb
cltd
adc
outsb
in
cmp
cltd
cmpsb
lret
out
lods
fistl
sub
fiaddl
cli
cld
xrelease
test
ljmp
in
pop
mov
insb
pop
dec
pop
adc
rorl
mov
ljmp
xchg
into
je
sub
and
fidivrs
insb
in
fsubs
mov
xchg
mov
fiadds
lcall
divb
popf
sbb
ror
xchg
test
sbb
add
cmp
mov
inc
cmpsb
lea
pop
ss
mov
push
shl
add
iret
xor
icebp
pop
xor
cmpl
sarb
inc
push
cmpsl
arpl
mov
add
test
push
jnp
jecxz
push
mov
and
jne
mov
in
cwtl
inc
mov
mov
or
mov
cmp
jb
sti
add
outsb
adc
arpl
jne
inc
mov
out
push
enter
test
mov
push
int3
add
popf
and
inc
xchg
fwait
add
outsb
xchg
aas
and
cs
mov
js
push
sub
dec
xor
dec
das
leave
inc
arpl
test
push
dec
js
dec
sarl
xchg
scas
xchg
sbb
ljmp
and
loop
mov
sub
pop
or
push
lret
rcl
rcrl
bound
repnz
out
mov
mov
push
pop
jne
xchg
jecxz
lcall
lret
sub
imul
icebp
sub
insl
sbb
push
js
icebp
push
int3
xchg
rcrl
in
shlb
repz
push
mov
lods
mov
leave
or
dec
mov
xor
mov
loop
inc
repnz
mov
das
jne
lds
xorl
jmp
shrl
out
addl
cmp
and
mov
jp
inc
jo
pop
sub
mov
out
fiadds
out
xor
insb
outsl
movsl
pop
shrb
lds
movsb
mov
xor
pop
ja
lret
jl
mov
and
mov
pop
cwtl
movsl
and
pop
ja
std
push
jecxz
not
mov
or
leave
xor
mov
xchg
addr16
fidivs
adc
cli
and
mov
xchg
mov
lds
or
fcomip
mov
repz
add
cmp
stc
or
mov
loop
fisubl
cs
std
adc
xchg
test
push
popf
cmpsl
movsl
push
and
lcall
std
sbb
call
sbb
icebp
out
sti
in
jnp
int
sub
aaa
push
in
push
test
in
loope
jle
dec
xor
jp
repnz
push
xchg
and
in
out
adc
mov
or
das
das
aas
mov
dec
loop
ljmp
or
or
and
jp
std
mov
stos
sbb
xor
cmpsb
int
or
and
push
dec
dec
in
mov
or
mov
out
popf
fs
orb
push
es
scas
or
lods
fcoms
loopne
sbb
sub
xor
dec
jne
mov
jle
cmpl
xchg
adc
mov
pusha
leave
or
adc
sbb
addr16
ret
mov
imull
push
adc
mov
sbb
xlat
in
scas
mulb
cmpsl
adc
inc
pop
ret
mov
or
or
mov
orl
mov
jle
cmp
add
xchg
pop
inc
sub
push
cmpl
aaa
pop
add
jecxz
fs
and
cmpsb
fnstenv
scas
pushf
jg
mov
fstpl
fwait
lret
push
sub
add
xchg
sbb
dec
push
pop
inc
and
gs
clc
inc
movsl
jecxz
outsb
hlt
cmp
xlat
mov
das
xor
xchg
dec
lret
ds
in
insl
int3
fidivrl
inc
dec
jp
dec
push
add
popa
jp
pop
jbe
flds
fimuls
jle
xchg
icebp
inc
mov
ret
xchg
mov
icebp
mov
mov
lock
inc
jg
xchg
dec
shl
mov
fcompl
sub
mov
push
sahf
inc
andl
adc
outsl
cmp
push
adcl
add
cmp
sarb
mov
push
jp
xor
mov
nop
inc
and
fisubrs
ja
cmp
inc
sbb
sub
sub
scas
mov
push
jb
and
insb
mov
lret
adc
test
repnz
xchg
sbb
mov
mov
add
xlat
xchg
inc
dec
mov
pop
pop
inc
push
movsb
lock
mov
leave
xor
or
mov
and
cmpsb
sbb
cmp
ja
or
inc
inc
fsubr
test
in
jle
int
fiadds
fs
xor
mov
out
lahf
icebp
sbb
test
repnz
icebp
cmp
das
dec
pop
jo,pn
popf
popa
mov
inc
inc
aam
push
popa
mov
repz
fildl
push
aaa
imulb
sbb
dec
add
xchg
inc
sbb
adc
rcrb
cmp
jg
sbbb
outsb
dec
sub
and
dec
mov
inc
iret
jmp
cltd
leave
insb
push
mov
call
stos
aam
stos
lahf
stc
cld
rcrb
imull
mov
add
dec
push
mov
nop
loope
push
push
cmp
cmpb
popa
xchg
push
cmp
test
ja
xchg
jb
jp
ja
add
sbb
fwait
shll
lock
push
pop
gs
sbb
adc
mov
push
rol
push
cmp
insl
ret
jne
cmp
xchg
pop
push
pop
cmp
xchg
pop
ret
sub
mov
inc
mov
and
popf
dec
xor
mov
repnz
jnp
imul
cmp
mov
aam
push
ja
dec
push
jl
rcr
and
pushf
ja
xor
call
bound
or
test
mov
cmc
mov
loope
addr16
in
pop
js
les
adc
or
repz
test
xor
test
adc
and
sbb
aam
sub
fidivrl
mov
addl
cmp
testb
test
ret
ljmp
decl
roll
stos
lret
mov
lret
push
mov
pop
cmp
or
cmp
jmp
adc
push
test
push
loopne
mov
push
aas
cmpsl
fists
loope
jae
ja
cltd
ja
add
and
jg
or
jns
add
clc
bound
das
mov
cmp
jnp
pop
push
fdivrp
sub
cwtl
jbe
cvtdq2ps
or
int3
mov
pop
cmpsb
inc
cmc
stc
pop
push
in
push
mov
pop
test
cmpsl
test
pusha
cmp
jecxz
cmp
mov
movaps
or
int3
aad
test
fwait
cli
int
hlt
fs
ret
adc
sub
lret
xlat
mov
or
in
mov
fldl
iret
repnz
mov
and
adc
and
mov
mov
add
mov
xlat
pushf
lret
jg
adc
push
pop
mulb
push
jecxz
ficoms
xorl
fchs
pop
je
push
mov
std
or
cmpsb
movsb
add
sbb
xlat
lret
and
sbb
nop
pop
inc
cmp
lods
mov
sbb
push
testb
pusha
ds
adc
test
sbb
aaa
pop
loope
xchg
pop
sbb
call
xor
stos
enter
stc
ret
inc
push
and
mov
outsl
adc
pop
adc
gs
nop
xor
and
aas
adc
aam
lock
jb
cltd
lret
pop
or
je
cmp
or
adcl
dec
ret
es
mov
jns
jmp
and
push
enter
les
jle
cs
cmc
mov
sar
pop
out
jo
xchg
pop
jecxz
adc
push
out
popa
push
mov
pusha
sub
pop
dec
movsl
enter
negb
arpl
dec
and
mov
lret
and
xchg
stos
mov
adc
inc
pop
jae
into
sub
loop
call
call
addr16
pop
xchg
lock
movsl
mov
pop
xchg
mov
popf
adc
test
push
xchg
insb
adcl
cmpl
es
jne
or
mov
call
mov
mov
out
sbb
mov
sub
mov
or
cld
das
pop
shrb
das
arpl
fidivrs
mov
cltd
mov
xorb
inc
and
push
push
dec
addr16
jb
scas
cmpsb
mov
push
movsl
gs
sbb
xor
mov
sub
fbld
push
xor
mov
pop
mov
sbb
jae
mov
add
sub
lahf
test
fs
adc
inc
scas
test
jmp
inc
roll
mov
lret
inc
push
cmp
xchg
cmpsb
and
adc
mov
outsb
mov
adc
jecxz
cmp
ret
xchg
mov
inc
pusha
std
fs
push
sbb
cmc
add
fsubrl
and
pop
mov
mov
pop
dec
jns
ds
clc
lock
pusha
subb
xchg
xchg
out
popf
jne
pop
or
andb
push
sub
push
fcmovne
ror
scas
mov
dec
jge
mov
int
and
lods
loope
push
dec
jae
loopne
rep
sti
les
lds
xchg
push
jl
jae
gs
mov
push
test
mov
out
push
mov
cs
out
test
sub
mov
mov
cmp
cmp
das
mov
mov
cs
mov
lcall
imul
inc
xor
inc
cld
outsl
push
xor
sti
mov
rcl
push
lods
lret
addl
lods
shrl
shll
out
lods
jle
xchg
adc
mov
sub
inc
xchg
and
push
pop
mov
xchg
decb
jmp
xchg
into
mov
sub
out
push
in
fldt
scas
lds
test
jp
pop
stc
push
test
out
mov
cs
aas
mov
cmp
jg
cmp
mov
fwait
les
jle
in
call
test
xchg
push
push
int
ss
mov
pop
insb
xchg
pop
inc
and
dec
ret
xchg
je
fucomp
or
jno
std
mov
mov
adc
sbb
sub
rcrb
test
ljmp
push
push
gs
dec
xchg
rcl
orb
shl
xor
js
lea
sbb
sbb
movsb
inc
sbb
cmp
xchg
and
sbb
stos
sbb
jno
pop
inc
pop
jb
inc
xor
ficomps
and
int3
adc
mov
jge
pop
mov
ja
outsb
sub
js
pop
aad
xor
lock
or
lock
mov
ret
lahf
jmp
rolb
in
xor
push
or
adc
dec
out
jb
xchg
push
lods
lcall
mov
rcrl
loopne
jae
mov
inc
arpl
dec
xchg
dec
mov
jmp
pop
inc
xchg
movsl
out
pusha
je
bound
push
out
jmp
jl
cmc
dec
int3
inc
enter
cmp
xor
ret
std
pop
add
push
push
mov
add
rclb
icebp
add
add
jmp
xchg
inc
aaa
or
or
arpl
out
daa
push
les
sub
and
repnz
and
mov
or
adc
pop
inc
pop
sub
sarl
jge
test
xchg
outsl
cmpsb
orl
cmpsl
xchg
aam
inc
fisubrl
shrd
inc
out
clc
rolb
add
mov
and
testl
das
pop
out
loopne
aam
push
je
cli
pop
rclb
inc
or
movl
inc
ljmp
notl
ljmp
fs
push
pop
loopne
outsb
iret
dec
test
fistpl
dec
sbb
adc
mov
adc
call
ret
mov
fstpl
mov
mov
add
aaa
push
pop
lcall
addr16
sahf
jnp
cs
jnp
adc
clc
int3
pop
jb
mov
insl
and
push
imul
xor
mov
xchg
jbe
mov
daa
mov
aam
add
insb
adc
mov
lahf
lea
out
cmp
clc
or
push
mov
add
push
xchg
into
lock
mov
daa
loope
inc
in
xor
clc
insb
push
fdivp
jg
xchg
xor
sbb
sbb
int3
call
shlb
or
push
into
iret
pop
add
bound
cld
or
jg
mov
jns
sbb
and
sbb
cwtl
lret
sbb
inc
add
jle
ret
in
sbb
loopne
jne
std
mov
lret
in
aaa
ret
mov
popa
fdivrs
lods
or
or
sbb
cltd
cmp
stos
jno
test
rorb
xchg
outsb
push
jae
mov
in
mov
lcall
adc
aad
or
sub
nop
das
mov
js
or
movsb
pop
xchg
mov
in
jae
jae
movb
ret
in
jg
dec
dec
cs
inc
jno
lea
stos
fdiv
dec
cwtl
push
xchg
rorl
shrl
inc
xor
fcompl
enter
xchg
sub
fwait
push
sbb
push
mov
mov
and
and
xacquire
fimull
add
cmp
sbb
jo
jmp
mov
and
push
mov
outsl
out
sbb
sub
cli
imull
inc
mov
cs
sbb
out
std
mov
jnp
xchg
imul
shrb
jbe
xchg
mov
adc
out
call
xchg
adc
mov
test
push
lret
iret
cwtl
out
sub
xlat
out
or
ret
call
sbb
jno
notb
sbb
sbb
push
xchg
inc
jge
test
scas
xor
inc
and
pop
pushf
loopne
mov
lods
mov
mov
fsubrs
xchg
xchg
push
rcll
int
test
inc
sub
sub
hlt
sub
out
pop
jne
adc
adc
insb
loopne
adc
les
mov
dec
mov
pushf
shrl
sahf
inc
jg
pop
mov
inc
cmp
and
or
inc
sbb
popf
xor
cltd
inc
add
iret
pop
inc
pop
dec
inc
add
add
add
mov
dec
dec
das
aaa
mov
stc
inc
cwtl
adc
ja
clc
lods
dec
jle
sub
sbb
xor
hlt
scas
mov
or
push
aad
sahf
cmp
gs
cltd
mov
cltd
test
fisubrl
lahf
mov
or
and
jno
aad
jge
jnp
flds
add
push
rclb
aam
lret
cmp
das
push
ret
out
mov
into
repnz
sbb
sub
mov
cmp
adc
xor
cs
xorl
dec
dec
push
jno
jb
subl
and
mov
and
cld
cltd
cmp
insl
mov
add
and
mov
sarl
jl
mov
dec
inc
jnp
cmp
subb
dec
inc
xor
test
cmp
rol
enter
stos
ret
xor
js
lahf
dec
push
imul
jmp
and
pop
out
repz
ret
lcall
movsb
inc
call
inc
cltd
js
xchg
into
dec
addl
ja
jg
push
shrb
cmpsb
jbe
imul
mov
es
int3
mov
popa
stos
xorl
mov
in
lret
iret
cmp
xchg
popf
inc
je
adc
sub
in
aaa
pop
loopne
and
xor
outsl
leave
sbbl
icebp
mov
pop
stc
jmp
xchg
movsl
xchg
cmp
out
xchg
divb
adc
repz
bound
mov
out
arpl
or
xor
mul
dec
ret
adc
push
loopne
lcall
push
jmp
mov
xchg
test
dec
push
push
mov
cltd
imul
xchg
fwait
sbb
nop
shrb
out
jo
xorl
imul
rcrb
pop
sbb
mov
sti
data16
inc
lods
and
ds
xrelease
lods
and
je
fsts
sahf
mov
jmp
aam
xchg
enter
push
mov
cmp
std
pushl
xor
push
cmp
je
lret
fsubrs
hlt
fwait
push
inc
mov
mov
mov
cmc
cs
xchg
xchg
imul
jbe
sar
ss
into
jecxz
or
shll
shl
aas
dec
fmuls
subl
fcoms
test
adc
cmp
adc
les
fdivl
xchg
lret
lret
fdivr
cmp
je
not
add
cs
jbe
fs
out
jge
inc
pop
mov
loope
pop
mov
lcall
insb
pop
test
pop
fdiv
jmp
out
or
fildll
out
in
out
jmp
dec
in
inc
call
pop
mov
jle
xor
addr16
push
repz
cmpsb
mov
mov
xchg
xlat
bound
add
add
inc
mov
add
add
add
pop
add
add
xor
add
add
add
add
add
push
cmpsl
add
add
mov
add
pop
add
add
shll
add
push
adc
add
add
add
add
add
add
cs
add
and
add
add
xchg
add
addb
incl
stos
cmp
ja
js
outsl
js
js
int3
int3
int3
push
mov
sub
lea
push
push
push
pushl
call
cmpl
je
mov
cmp
je
call
movl
call
cmpl
jne
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
mov
push
push
push
push
push
pushl
call
pushl
call
call
pushl
call
jmp
lea
push
pushl
call
lea
push
pushl
call
xor
leave
ret
push
mov
sub
push
push
push
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
push
pushl
call
mov
mov
movzbl
mov
movzbl
sub
test
je
mov
add
mov
push
push
push
pushl
call
mov
sub
mov
add
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
movl
mov
sub
test
je
call
jmp
call
call
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
mov
mov
mov
inc
mov
mov
mov
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
push
pushl
call
mov
pushl
call
pushl
pushl
pushl
push
push
call
add
cmpl
jb
call
mov
pop
pop
pop
leave
ret
add
adc
add
add
inc
mov
pop
add
add
aam
add
adc
pusha
add
cmp
add
imul
add
das
add
add
add
test
stc
add
hlt
add
sbb
add
sbb
push
push
add
loopne
and
imul
outsb
dec
pop
jo
outsb
imul
jecxz
out
inc
jno
dec
sti
add
cwtl
inc
clc
aam
add
add
call
or
repz
jmp
incb
pusha
pop
movsl
add
or
mov
imul
inc
leave
mov
pop
rolb
add
adc
mov
fcompl
jmp
hlt
in
push
mov
je
test
dec
add
and
push
cmp
test
xor
adc
test
je
stos
mov
or
incl
jae
mov
clc
push
clc
test
aam
je
clc
xchg
decl
xor
rorl
ret
push
loopne
add
fstpl
inc
adc
adc
add
add
sbb
stos
lcall
sbb
sbb
roll
add
jb
je
dec
outsl
imul
add
add
gs
outsb
stc
imul
imul
xor
aas
push
xor
je
fiadds
gs
add
outsl
add
add
popa
outsl
push
inc
pop
xor
jnp
add
stos
add
movsb
add
fwait
add
aam
add
add
add
add
add
xor
add
add
pop
add
xchg
add
mov
add
add
sti
add
hlt
add
sub
sbb
mov
in
mov
xchg
lds
imul
mov
ljmp
scas
andb
popa
jnp
sar
jmp
xchg
mov
lods
sbb
xor
mov
mov
icebp
xchg
mov
das
int
je
mov
in
add
into
pop
roll
inc
sti
and
push
mov
jmp
add
pop
into
js
js
push
aas
les
pop
add
rcl
pop
test
inc
into
aas
in
xor
fldt
xchg
out
orb
jmp
and
mov
sbb
stc
das
ja
xchg
fstl
scas
mov
dec
std
shlb
pop
lret
jmp
in
enter
jmp
push
xor
movsb
fisubs
scas
dec
mov
push
push
les
into
fsubr
push
adc
out
pop
gs
push
jae
mov
popf
loope
mov
adc
pop
iret
push
outsl
gs
mov
aad
outsl
xor
repz
sbb
push
cld
les
arpl
jno
lcall
lret
push
inc
fs
push
sti
fbstp
and
fs
adc
push
stos
stos
inc
and
cltd
add
js
fnstenv
cmp
add
fdivrl
pop
pusha
cld
xor
push
mov
pop
lret
subb
xchg
adc
sbb
out
jbe
arpl
cmpsb
dec
push
jo
lret
dec
inc
pop
cmpsl
int3
inc
push
and
fisubrs
lea
fstl
mov
or
add
movb
dec
mov
sub
or
cmp
aaa
push
fldcw
fs
mov
mov
and
pop
mov
fidivl
dec
lahf
cmp
cwtl
dec
jge
xor
xlat
sub
sbb
std
mov
pop
inc
in
mov
push
rorl
sbb
daa
pushf
notb
or
pop
cmp
push
sub
mov
and
cld
push
inc
jns
loopne
shrl
pop
stos
xlat
mov
in
addr16
dec
inc
and
mov
inc
mov
jecxz
int3
mov
daa
mov
and
xchg
mov
xchg
or
cli
push
div
and
bound
mov
bound
loopne
push
imul
in
add
aad
push
push
sbb
adcl
pop
mov
movsb
pop
push
jns
scas
mov
ret
lahf
add
mov
jae
aaa
fs
je
mov
adc
xchg
cltd
and
and
mov
shrb
cmp
lret
adc
adc
xor
andb
jne
inc
pop
mov
adc
lock
popf
enter
or
and
pop
adc
das
cmc
sbb
mov
test
dec
pushf
mov
mov
repnz
fstps
sbb
lods
leave
cld
stc
lock
loop
sbb
sahf
inc
dec
out
push
mov
mov
inc
add
mov
cmpsl
dec
xchg
pop
dec
rcr
sbb
or
das
movsb
and
shrl
fists
pop
jecxz
mov
rolb
sahf
cmpsl
lock
jb
in
mov
xor
or
ds
add
pop
lret
jae
mov
insb
pop
out
mov
push
fidivrl
sbb
push
push
rorb
xchg
cmp
push
mov
sub
jnp
pop
push
pop
mov
das
int3
int
cmp
je
int3
idivl
xor
mov
adc
jg
mov
cmp
xchg
sub
or
mov
pop
dec
mov
loop
or
or
mov
and
in
call
xlat
mov
dec
mov
mov
movsl
outsl
je
jb
pusha
insb
xor
sbb
je
shl
imul
xchg
loope
add
mov
mov
xchg
popf
fstpl
sbb
xchg
or
jbe
pop
popa
mov
dec
aaa
adc
test
test
mov
lret
sbb
pop
pop
push
xor
cmp
aad
cmp
mov
push
sbb
pop
gs
or
or
popf
out
jg
in
xorl
pushf
mov
jo
cltd
xchg
int3
out
mov
lcall
lahf
inc
jb
jns
test
test
js
pop
lret
xchg
cmpsl
ficoml
mov
add
outsl
dec
sbb
pop
data16
adc
jecxz
xor
mov
push
xor
adc
push
inc
adc
cmp
add
pop
pop
lcall
mov
pop
pop
in
cs
sahf
fidivs
nop
add
jmp
mov
mov
fs
xor
cld
jmp
cmp
out
push
cmc
or
push
or
push
mov
pop
aad
add
sub
movsl
loope
enter
mov
push
cs
test
mov
adc
dec
sbb
mov
lret
jge
jno
rcl
inc
or
sbbl
or
notl
fbld
pop
rolb
xchg
in
sub
sub
fs
cmpsl
or
pop
fs
mov
imul
pop
int3
aam
stos
mov
popf
xchg
daa
scas
sahf
mov
push
inc
xchg
push
mov
push
nop
push
cmpsl
ret
in
push
dec
into
mov
fstl
sub
mov
and
push
jb
scas
xchg
push
adc
pop
ret
push
pop
mov
test
je
xor
shrl
xchg
loop
out
mov
jecxz
addl
fdivr
inc
stos
lret
movsb
cmc
pushf
fstpl
mov
add
into
push
clc
or
dec
je
xor
cs
jge
ja
lods
sbb
rolb
or
push
shlb
xchg
dec
in
daa
and
sahf
out
push
mov
dec
dec
out
fistpl
cmpsb
xchg
cmp
test
test
pop
movsl
in
fwait
pop
mov
adc
sbb
dec
out
mov
pop
cwtl
push
mov
inc
xchg
roll
push
jmp
pop
mov
dec
mov
and
jg
cli
mov
sub
pop
mov
daa
sahf
sub
xor
mov
fsubrl
aam
ret
ficoms
adc
mov
jg
lds
pop
iret
push
mov
dec
push
xor
mov
push
sbb
push
lret
imul
fs
ljmp
xor
adc
xchg
in
mov
xchg
pop
mov
stc
xchg
mov
adc
or
cld
jecxz
lock
pop
addr16
push
mov
enter
inc
sahf
cmpsl
adc
lret
mov
adc
pop
leave
cmpsl
stos
jbe
jge
or
pop
sub
outsb
sbb
xor
xchg
sub
xor
cld
pop
jle
sub
in
nop
cmpsb
adc
mov
inc
cs
loopne
dec
push
outsl
sar
test
sub
mov
mov
daa
xor
inc
mov
mov
lds
pop
xor
sub
pop
test
jo
dec
fs
ret
push
and
jmp
xchg
call
dec
mov
outsl
into
add
jmp
test
or
popa
mov
addr16
cmc
sysret
xor
jge
roll
or
or
adc
push
leave
repz
test
push
les
cmp
clc
cmpsl
es
cli
out
sbb
rolb
xchg
test
sahf
repnz
mov
jecxz
pop
push
xchg
les
loope
cmpb
inc
dec
dec
ss
lods
inc
subb
popf
mov
lods
mulb
pop
or
gs
jno
inc
ss
inc
adc
ficompl
pop
and
in
sub
cmpsb
fldcw
pop
dec
cltd
cld
dec
loope
sub
mov
push
cli
pop
jmp
ss
hlt
push
and
nop
sahf
pop
cmpsl
xchg
jecxz
dec
cltd
pop
lods
inc
data16
xchg
cmc
jle
stos
xor
popf
cmp
jne
lahf
xchg
ljmp
out
lret
mov
xchg
cmpsl
addb
ficoms
dec
mov
dec
mov
shrl
xchg
xchg
popa
mov
mov
out
outsl
xor
sub
movsb
aas
mov
cltd
sbb
pop
ret
add
mov
inc
sbb
int
xlat
jmp
sbb
adc
dec
lock
call
dec
jne
fildl
jp
lret
int
push
sbb
push
test
inc
sub
aad
inc
inc
sbb
fmulp
pop
adc
loop
pop
adc
sub
mov
ljmp
movsb
shrb
je
jo
add
inc
mov
push
out
fnsave
movsl
xor
sarb
xchg
je
in
jbe
mov
inc
aas
and
rcr
pop
cmp
add
push
adc
addr16
inc
ljmp
shl
mov
mov
cltd
movsl
fsts
add
lds
fisubl
idivl
ds
and
cld
inc
out
mov
sbb
imul
jnp
mov
pop
mov
adc
dec
scas
sar
sbb
sbb
add
mov
pop
rol
cmc
or
lcall
lcall
cmp
jbe
pop
fstpt
sbb
sbb
xlat
sub
ret
mov
enter
jle
fldcw
mov
push
cmp
xchg
or
stos
xor
pusha
ret
jb
sbb
mov
xor
adc
out
cmpsb
pop
cmp
cld
sub
loop
inc
cwtl
xlat
push
mov
enter
mov
push
scas
movsl
add
movlps
out
pop
fadd
aad
push
in
xor
addr16
fldenv
inc
fcomp
or
sahf
jl
loop
adc
lret
ds
mov
test
xchg
mov
out
and
bound
cmp
jle
rclb
leave
fnstcw
mov
adc
sub
in
aaa
sbb
ficomps
cmp
sub
and
or
mov
clc
pop
inc
fstps
push
jp
push
pop
fisubl
addr16
lea
jl
sbb
dec
add
jg
fidivrl
mov
and
or
jns
mov
jg
out
push
mov
movsl
mov
push
sub
shll
and
sarb
xchg
jno
cli
jnp
sub
nop
and
adc
cmp
into
pop
push
shl
call
jae
push
add
call
pop
mov
mov
xchg
scas
lret
mov
or
push
into
ret
inc
sub
lret
or
pop
xor
push
xorl
scas
outsb
popf
fdiv
lea
in
aad
pop
mov
cmpsl
sub
pop
lea
dec
jo
lret
inc
jp
add
jo
ds
cli
std
aam
out
dec
js
mov
push
xor
sub
dec
pop
cmc
ss
xchg
mov
mov
insl
cmc
xor
fdivrp
sbb
inc
xchg
mov
and
xchg
jns
pushf
pop
inc
mov
call
shrl
push
sbb
pop
lahf
push
insl
sbb
cwtl
inc
aas
popf
mov
sub
in
push
cmp
leave
cli
mov
adc
cs
dec
mov
dec
adc
pop
orl
sub
add
outsb
dec
out
mov
jmp
cwtl
adc
push
enter
repz
dec
ret
into
test
fs
mov
xchg
ds
xor
mov
rcrl
push
stos
pop
add
mov
lods
out
ljmp
mov
or
cwtl
mov
or
out
stc
test
jbe
lcall
inc
inc
mov
fldt
push
nop
sbb
mov
out
xor
xor
or
movsb
addb
push
jl
mov
sbbl
adc
or
jp
xchg
divb
pop
mov
inc
ljmp
lock
repz
aaa
iret
call
or
stos
push
pop
fbld
clc
jp
inc
leave
push
int3
loop
les
add
dec
mov
jmp
cmp
xlat
ljmp
arpl
in
dec
lahf
ud0
imul
pop
mov
lret
pushf
jb
jp
jo
ljmp
out
stc
mov
pop
jmp
inc
rol
adc
cmpps
insl
mov
es
cmp
test
movsb
xchg
mov
hlt
arpl
inc
mov
lods
imull
cmp
cmc
int
in
xchg
jns
sbb
mov
dec
addl
adc
mov
fwait
xor
scas
dec
jp
flds
jne
ret
out
push
pop
add
in
or
inc
imul
loop
inc
push
pushl
ds
mov
sti
cmp
aaa
mov
dec
xor
jo
mov
pusha
sbb
jle
insb
ficoml
jbe
pop
and
pop
inc
out
adc
mov
push
mov
xor
lahf
stc
stos
cltd
sbb
icebp
pushf
mov
jae
jae
enter
clc
xor
fcmovnbe
outsl
imul
xor
pop
shlb
ret
ss
jnp
in
push
loop
cmp
xchg
push
or
mov
pop
mov
ficompl
xor
rcrl
add
lahf
cwtl
sbb
jb
dec
inc
data16
jno
and
test
jp
mov
jmp
sub
jle
repz
out
push
aas
cmpsl
stc
icebp
mov
mov
inc
xchg
mov
ss
lods
or
fmul
js
test
dec
lods
add
jb
sbb
sub
lahf
push
fidivl
jae
scas
xchg
xchg
xchg
cli
cmp
adc
ja
xlat
jne
and
dec
sub
outsb
sub
cmc
loope
jo
dec
mov
mov
idivb
mov
lahf
int3
shlb
pop
insl
mov
dec
mov
mov
inc
mov
xchg
lret
inc
push
pushf
cmp
lcall
cld
fistpll
roll
scas
sub
jecxz
gs
or
pop
scas
or
add
mov
jmp
sbb
jecxz
add
rcrb
addr16
cmpsb
mov
push
xor
sbb
sub
cmp
mov
adc
jb
add
int
enter
mov
loope
xchg
jge
call
sbb
sub
push
adc
jo
xor
loop
les
into
hlt
cld
xchg
sbb
cmp
pop
xor
jge
popf
xor
and
andl
aam
jmp
in
jecxz
cmp
movsl
mov
add
mov
push
inc
sub
pushf
mov
cmp
loopne
dec
push
sahf
sbb
lahf
and
sbb
fiaddl
aad
aam
stos
adc
rolb
sahf
divl
adcb
dec
popf
out
addr16
addr16
adc
clc
scas
lret
mov
test
xorl
add
cmp
leave
xchg
pop
dec
inc
clc
pop
xchg
dec
push
js
outsl
sbb
fbstp
cmp
lds
xor
ss
stos
hlt
jo
add
sbb
and
lea
fimull
push
hlt
xor
out
mov
inc
into
push
xor
nop
sbb
les
lock
jge
in
test
xor
jle
mov
scas
xor
pop
xchg
pusha
xchg
shll
or
in
cmp
dec
sarb
psllq
and
cs
sub
je
or
add
and
call
mov
jns
scas
ret
inc
je
adc
leave
pop
sub
into
rorb
sarl
out
and
push
xchg
jl
in
jbe
js
jg
jns
iret
cmp
scas
push
jg
fs
out
add
bound
imul
test
sub
test
cltd
rcrb
and
sub
leave
xor
ret
mov
rcrb
pop
fdiv
mov
into
push
addr16
enter
adc
lds
outsb
xchg
int3
jns
insb
out
icebp
dec
out
sub
push
mov
data16
and
cs
sub
int
jmp
push
mov
loopne
pop
add
negb
lods
scas
dec
cmp
into
out
fistpll
fs
outsl
xchg
cmp
add
fwait
or
loop
andb
adc
mov
test
lods
test
or
aas
push
pop
data16
ss
mov
jno
push
and
iret
and
cmpb
cmp
lahf
jno
pusha
fstl
add
xchg
dec
and
inc
movsl
push
sbb
mov
hlt
stos
sbb
loopne
aas
and
movsb
sub
loop
out
and
test
inc
sbb
repnz
pushl
fisttps
dec
sub
sti
aam
mov
xchg
in
in
shlb
jg
add
dec
cmc
rcll
loop
cmpsb
adc
int3
loop
aas
mov
push
mov
adc
rorl
arpl
pop
jne
xor
cmp
mov
pop
arpl
xlat
xor
sub
adc
xchg
stos
mov
and
cltd
in
jne
bound
flds
aaa
jecxz
out
insb
sbb
inc
ljmp
inc
fs
or
stc
bound
outsb
out
xchg
push
aaa
test
mov
inc
prefetch
jmp
and
std
push
ds
sbb
mov
lods
dec
sbb
cmp
in
sub
dec
mov
aam
push
push
and
mov
inc
cmp
adc
pop
imul
outsb
cmp
cmp
aad
popa
pusha
cli
sub
mov
cltd
xchg
pop
subl
cmpsl
outsl
sbb
and
movl
cld
fstp
outsb
mov
inc
out
aaa
add
inc
popa
icebp
sbb
pushf
ja
aaa
push
push
xor
popa
jne
push
jmp
mov
mov
and
sub
cli
aam
ss
mov
cmc
lds
rolb
pop
inc
pop
nop
in
out
or
add
les
nop
add
mov
cmpl
pop
cwtl
rol
xchg
and
adc
mov
cmc
sahf
push
scas
pop
ret
in
sbb
ret
addr16
hlt
pop
int
fisttps
fisubrs
fisttpll
xor
sub
shrb
and
mov
into
lods
lock
jp
popf
jno
sti
push
dec
jnp
push
lret
pop
imul
pop
popf
shrb
adc
xlat
sub
outsl
sbbl
sbb
mov
sub
push
lods
jnp
xor
subl
pop
mov
jge
test
repz
sub
lcall
clc
aad
jmp
dec
push
or
div
lods
int
je
xchg
ret
int3
insl
sub
add
sbb
push
push
pop
mov
ljmp
add
push
add
dec
add
test
add
add
add
in
add
add
adc
add
add
inc
add
jnp
add
stos
add
movsb
add
fwait
add
aam
add
add
add
xor
pusha
add
nop
imul
fs
pop
add
xchg
add
mov
add
add
sti
add
add
das
pop
add
add
sbb
add
dec
add
add
adc
arpl
movsb
int3
int3
int3
int3
dec
mov
orb
int
je
insl
add
add
add
inc
or
pop
add
or
in
add
add
mov
add
add
and
add
add
imul
add
sub
mov
cmp
cmp
xor
or
pop
popa
jae
sub
imul
and
out
ja
mov
loope
add
add
inc
cmp
mov
inc
lea
xor
mov
mov
sub
mov
jmp
test
mov
addl
adc
mov
cmp
jge
mov
fwait
scas
decl
lea
repz
sarb
mov
add
pop
addl
add
popa
les
adc
add
add
sbb
push
rolb
or
lret
rclb
stos
faddl
add
push
and
push
adc
jno
add
lea
adcl
stc
cld
clc
add
mov
add
inc
add
xor
add
aam
insb
or
add
jmp
fidivrl
fcoms
pop
inc
pusha
sub
clc
adc
outsb
jb
xchg
stos
inc
inc
outsb
fimull
in
popa
inc
inc
inc
add
popa
imul
inc
popa
hlt
decb
scas
imul
insb
cmp
jge
gs
addr16
sub
jne
inc
and
xor
lret
inc
arpl
movsb
jmp
add
add
add
add
add
add
add
add
in
add
add
mov
add
add
test
add
add
push
sbb
add
add
add
add
hlt
mov
fwait
cmpsl
dec
cltd
popa
adc
sbb
xchg
jne
push
aad
repz
adc
ret
mov
dec
jns
aas
xchg
daa
iret
jns
popa
cltd
adc
cmp
push
add
inc
popa
sub
push
jns
sub
mov
pop
ficomps
sub
inc
roll
push
cmpsl
mov
sub
add
mov
dec
inc
dec
cmp
push
imul
push
pop
hlt
ds
scas
push
call
fistpl
mov
popa
xchg
js
jae
inc
jnp
add
jle
jmp
pop
pop
pop
mov
js
mov
sarb
lea
pop
fstl
cmp
icebp
mov
aas
pop
pop
dec
ret
daa
sub
xchg
into
addr16
orb
xchg
mov
and
pop
test
stos
loope
lods
das
mov
mov
fldt
leave
pop
jle
rcr
push
cmp
in
cwtl
mov
sub
flds
and
xchg
pop
cmpsl
lahf
test
sub
insl
xor
sub
lock
stos
sbb
mov
or
push
push
pushf
icebp
xchg
push
push
popa
dec
and
lahf
push
or
aas
mov
or
gs
jnp,pt
icebp
xchg
movsb
aad
mov
mov
xchg
xchg
pop
xorw
into
mov
outsl
lret
or
fcompl
repz
sbb
sbb
sti
mov
sub
add
aaa
dec
jecxz
mov
sub
xchg
cld
mov
push
cmp
fidivl
mov
repz
mov
push
xchg
mov
dec
rorl
stos
jmp
js
lret
popf
loopne
sarl
add
mov
mov
outsl
pushf
sub
sub
mov
mov
jmp
sbb
addr16
cmp
sti
mov
mov
fisubl
mov
daa
rorl
dec
je
leave
test
cmpsb
pop
fs
cmp
dec
daa
xchg
addr16
cltd
dec
nop
jbe
push
aas
or
add
xchg
sti
sbb
dec
cmpsb
adc
jne
inc
pop
clc
mov
cs
rolb
add
lret
add
aad
ds
mov
pop
cmpsl
lock
push
adc
inc
ja
cmpsl
cmp
fcmovu
cmp
fcmovnb
shr
loope
mov
mov
lcall
jmp
xchg
cmp
loope
outsl
adc
push
xchg
imul
roll
xchg
repnz
dec
mov
in
jecxz
cwtl
call
pop
push
cmp
pop
sbb
jmp
bound
nop
inc
and
lea
lahf
xchg
pop
inc
and
mov
insb
imul
data16
xchg
pusha
xchg
add
fwait
nop
push
movsb
in
enter
mov
dec
out
pop
mov
scas
comiss
push
push
jle
push
xchg
les
int3
sub
cs
lret
mov
imul
test
orps
dec
iret
pop
shlb
faddl
cwtl
adc
mov
push
aad
ret
cmp
add
fwait
adc
add
mov
lret
bnd
pop
iret
pop
xorl
inc
jge
sbb
dec
sbb
fidivrs
jmp
test
mov
pop
adc
dec
sbb
adc
andb
mov
pop
push
add
out
cld
scas
push
xchg
mov
jns
jae
gs
pop
xlat
je
mov
lods
push
jne
sbb
into
add
mov
pop
rcr
cmp
aam
movsl
cli
enter
std
push
sub
out
adc
jae
sub
xchg
cmp
sub
or
push
push
sub
xor
ljmp
mov
scas
ret
cld
popf
insb
leave
adc
nop
sub
pop
popa
mov
jg
push
scas
push
dec
inc
xlat
xchg
pop
popa
adc
popf
mov
xchg
or
xlat
jp
adc
addb
cmc
pop
out
adc
dec
scas
int3
pop
mov
or
addr16
in
int
fldcw
sbb
mov
pop
rorb
aas
dec
lods
rolb
lds
out
xor
repz
cmpsb
dec
sub
lock
lahf
insl
inc
fwait
mov
xchg
nop
jo
cmp
sub
imul
iret
push
mov
inc
push
ror
repz
ljmp
xor
out
call
stos
mov
dec
lahf
lods
test
cld
mov
or
mov
dec
addr16
jmp
lahf
mov
xchg
sbb
dec
movsl
fsub
push
xorb
into
add
jae
push
mov
sub
mov
xchg
jle
addr16
bound
or
pusha
add
les
inc
mov
test
pop
aaa
addr16
sbb
orb
not
lahf
gs
adc
out
dec
or
and
adc
add
and
dec
sbb
stos
rorl
or
in
outsl
pop
jl
das
inc
mov
jl
jne
fistpll
cmp
faddp
xor
aad
call
lock
lret
mov
sti
cmpsl
sub
fcmovnb
xchg
imul
cld
adc
push
dec
jae
mov
popa
cmc
xchg
mov
aaa
in
inc
pop
mov
cmc
push
xor
shl
les
lret
jp
xchg
mov
pop
shl
das
out
and
sub
and
and
or
adc
push
cs
xorb
aam
inc
push
jg
lods
enter
pop
jl
jno
mov
sar
insb
and
dec
outsb
in
aam
stc
xor
mov
or
pop
icebp
clc
pushf
dec
mov
inc
adc
push
sbb
jp
mov
dec
pop
sti
loopne
dec
adc
sbb
popf
sbb
push
cltd
sahf
fdivs
adc
negl
pushl
cmpsl
repz
and
mov
jmp
in
adc
lea
out
xchg
loopne
cs
ss
orl
je
xchg
xor
mov
jle
adc
cmp
inc
add
lds
and
pop
mov
ret
pop
lret
pop
gs
dec
xor
mov
cmp
ljmp
mov
adc
xor
into
idivl
mov
jo
push
push
std
cli
push
int3
or
jmp
int3
and
pop
loop
ret
jecxz
mov
cmp
mull
and
mov
dec
xchg
pop
daa
mov
int3
outsl
mov
xor
cld
adc
add
movsb
cmp
mov
jle
stos
cmp
data16
in
imul
popf
in
jo
inc
mov
and
mov
or
pop
or
xchg
stos
cmp
inc
xchg
stos
pushf
movaps
adc
fldt
adc
inc
push
fimull
push
inc
stos
lcall
jno
lods
cmp
pop
adc
adc
pop
mov
shl
push
dec
mov
ja
dec
outsl
je
call
push
add
mov
add
mov
inc
cmp
scas
xchg
pop
xchg
in
jl
adc
mov
mov
xor
cmp
ja
sub
lahf
in
mov
xor
push
push
rcl
push
sbb
pop
enter
stos
movsl
mov
sti
xor
xchg
cli
push
lock
scas
cmp
cld
test
inc
outsb
lahf
popf
insl
shlw
das
fnsave
xchg
xor
xor
jae
jge
aas
or
jl
jle,pt
and
mov
daa
mov
stos
sti
and
xorl
jns
stos
inc
repnz
adc
into
popw
xor
add
or
push
xchg
mov
mov
lahf
pushf
inc
jb
ljmp
sub
inc
add
mov
push
jbe
out
add
and
hlt
insb
push
pop
shl
cld
rolb
xor
je
pop
test
xchg
or
jbe
push
pop
mov
divl
jge,pt
test
or
lret
mov
scas
lock
push
arpl
jge
mov
mov
mov
js
cmp
in
int3
aas
or
lods
fsubl
ret
imul
out
lods
into
add
scas
xchg
jl
push
pop
cmp
shlb
scas
or
fbld
divb
rcll
in
jp
incl
or
ret
dec
push
or
test
inc
sub
scas
push
scas
aad
cwtl
and
iret
lods
xlat
mov
cld
ja
test
xchg
lock
leave
stc
fstps
cs
shll
loope
mov
pushf
dec
pop
cmp
in
lahf
mov
add
inc
lcall
subl
call
in
add
sub
lahf
cmp
mov
jmp
xchg
xorb
inc
rcll
inc
shlb
adc
fidivrl
push
cmp
push
rcll
push
aad
shlb
jae
xchg
pop
scas
shl
rcrb
jnp
shlb
cmp
jnp
bound
xchg
loope
lods
pop
push
insb
cs
mov
xchg
loop
imul
mov
sub
hlt
cmp
mov
call
rolb
mov
cld
jb
outsb
mov
movsb
data16
fdivrl
mov
imul
jbe
es
aas
imul
jp
jae
mov
push
and
out
mov
mov
dec
ljmp
add
in
inc
rcll
and
loop
xchg
cld
stos
cmpsl
jbe
icebp
push
xor
fldt
pop
fistpl
xorb
xchg
xchg
iret
cmpsl
in
lahf
mov
or
adc
and
cmp
or
test
lods
mov
xchg
cmpb
lods
ror
jae
ja
add
push
movsb
insb
std
nop
sub
mov
adc
add
das
jle
mov
sub
mov
dec
popa
les
xchg
push
and
cmp
scas
test
pop
mov
fwait
add
insb
insb
or
or
shrl
fdivl
jno
inc
cmc
dec
inc
test
mov
js
repz
in
xchg
lret
insb
in
clc
adc
push
dec
div
sarl
xchg
mov
adc
push
push
push
data16
shl
ret
and
xchg
jbe
cmp
cmpsl
pop
dec
dec
in
in
loope
mov
scas
or
mov
inc
pop
push
mov
dec
fwait
mov
mov
dec
cmp
mov
in
sub
mov
adc
or
inc
mov
pusha
push
gs
xchg
int3
fwait
cmpsb
and
mov
mov
xor
lock
fs
idivb
mov
outsl
xchg
ret
xlat
gs
add
stos
xor
adc
push
mov
outsb
jecxz
fnstenv
into
aaa
adc
xor
je
outsl
mov
es
fisubs
fldt
jecxz
sub
iret
loop
push
lds
loop
mov
sbb
mov
push
sub
dec
out
jae
jecxz
add
fisttpl
dec
mov
sub
out
add
in
add
sbb
ffree
rclb
push
out
je
jnp
push
cs
mov
lock
xorl
addr16
int3
je
test
add
pop
add
dec
js
inc
andl
mov
inc
cmpsb
in
es
imul
sbb
rorl
pop
adc
xchg
lret
or
dec
push
xor
sbb
dec
imul
and
test
inc
les
call
addr16
ret
jmp
arpl
aam
cmp
movsl
push
cmpl
andb
in
imul
jecxz
lret
aad
sbb
stos
outsb
or
jns
data16
jb
xor
sarb
sbb
aas
dec
addr16
add
dec
add
xchg
push
stc
push
adc
je
sub
scas
xchg
iret
bound
push
jno
or
sbb
sub
push
test
mov
jl
sub
outsl
mov
push
movsb
sbb
pop
movsl
clc
sti
adc
pop
xor
xchg
in
jne
in
mov
jl
mov
sahf
adc
ss
sbb
mov
orb
movsl
adc
rcr
jnp
push
std
and
stos
mov
mov
xchg
jo
lds
dec
sub
add
inc
arpl
fsub
xchg
data16
cld
dec
jmp
add
nop
jmp
sub
call
in
inc
jae
addr16
dec
mov
sbb
mov
dec
dec
or
jb
fisubs
les
filds
mov
sub
xchg
je
inc
gs
andl
dec
imul
push
cld
sahf
add
jbe
inc
std
in
fcomip
dec
mov
mov
xchg
in
cltd
jp
push
push
popa
inc
sar
inc
xchg
or
in
jb
cmc
in
dec
mov
mov
pushf
dec
xor
xchg
and
xchg
mov
out
stos
mov
stc
les
cltd
out
dec
icebp
sbb
pop
xor
fchs
mov
gs
data16
imul
and
ficompl
xor
push
pop
out
or
mov
icebp
in
xlat
mov
sbb
pop
jne
and
int3
je
add
pop
add
xor
in
aas
sub
out
mul
mov
adc
bound
xlat
fdivl
fnstenv
and
jbe
jo
outsb
aam
into
and
jle
jo
lret
and
push
mov
mov
cmp
adc
test
sbb
push
lahf
ja
sbb
cmpsl
aaa
adc
cmp
imul
leave
inc
popa
jmp
ljmp
daa
jmp
fnstsw
data16
sub
dec
movsb
addb
out
mov
fmuls
jge
adc
dec
pop
loope
ds
lahf
mov
push
inc
mov
mov
pushl
push
xchg
mov
add
ja
shlb
mov
andl
or
lods
xchg
xlat
adc
cltd
fstl
jns
call
lahf
pushf
xor
adc
imul
or
push
rorb
jb
ja
lcall
hlt
ffreep
out
adc
add
adcl
popa
pop
je
aam
dec
in
pop
xchg
mov
xor
cmp
adc
mov
loopne
icebp
data16
mov
arpl
sbb
xchg
bound
lock
mov
stos
mov
push
ss
mov
mov
push
sbbl
stc
fsts
pop
inc
fisttpl
les
mov
jl
ret
xlat
imul
decl
fnsave
lock
mov
xor
es
cwtl
sub
bound
push
adc
xor
les
outsl
push
cs
shrl
add
aad
add
data16
xor
jmp
sbb
into
sub
fwait
adc
divb
pop
pop
imul
inc
sub
std
incb
imul
pushf
push
enter
or
add
add
daa
ja
xchg
scas
sbb
or
cltd
adcl
cmc
cmp
xlat
sub
xor
push
xor
or
push
dec
insl
mov
xor
imul
push
test
loope
mov
incb
push
mov
mov
je
fistl
ja
es
rcl
mov
jmp
jle
push
rcrb
xor
mov
popa
push
in
sar
out
in
shl
arpl
push
fsubrs
sti
cld
imul
out
dec
pop
mov
or
and
andb
jecxz
outsb
loope
sar
push
cwtl
sbb
mov
fnsave
aaa
add
int
popa
dec
mov
enter
xor
jns
jl
stos
mov
int3
loope
jmp
mull
je
cltd
mov
lahf
xchg
jb
jmp
mov
jle
lds
orl
popf
xchg
rcrl
jns
pop
pop
sahf
xor
andl
outsl
gs
cmpb
cld
stos
in
movsl
repnz
je
jmp
push
mov
xor
and
lcall
inc
imul
inc
pop
xorb
sub
mov
fwait
aaa
or
sub
inc
pop
lods
fistpl
sbb
test
cltd
outsl
add
in
or
rol
imul
je
dec
cld
popa
xchg
jp
neg
cmp
insb
and
adc
push
dec
pop
adcl
test
cltd
movsb
sbb
pavgb
pop
mov
outsl
jle
insb
mov
fsubs
mov
or
dec
pop
lret
mov
stc
push
test
popa
mov
test
leave
sbb
ja
cs
inc
inc
mov
push
daa
aam
xchg
fdiv
cmpsb
cmp
mov
xchg
pop
cmpsb
fildl
adc
mov
fwait
xchg
dec
cmpsb
inc
xchg
push
jecxz
or
dec
stos
adc
pop
je
ror
mov
ljmp
pop
push
and
jl
ror
dec
cwtl
or
mov
push
loopne
daa
adc
popa
addr16
or
inc
ds
mov
mov
aad
adc
into
xor
push
rorl
shll
xchg
jnp
popf
adc
mov
in
inc
bnd
xchg
adc
mov
or
inc
hlt
jbe
les
dec
push
stos
aam
push
stos
mov
add
repz
push
mov
mull
cmp
test
mov
cmp
dec
daa
mov
test
xor
and
add
push
jo
jbe
clc
push
test
cmpl
hlt
mov
xchg
xor
and
dec
sbb
pusha
xor
lret
push
shl
cld
int3
xor
call
adc
clc
dec
scas
lahf
push
jmp
mov
jmp
stc
test
inc
push
popa
inc
out
and
push
iret
out
addr16
pop
cmp
mov
insb
das
iret
pop
scas
orl
mov
add
dec
xchg
jecxz
rcr
rcll
mov
inc
jl
xor
sub
xor
jmp
mov
int3
mov
mov
adc
pusha
mov
mov
shlb
jle
sbb
lods
test
scas
mov
sbb
aad
cmp
push
fyl2xp1
arpl
add
lea
cmpsb
ret
pop
push
movsl
loopne
cmpsl
das
pop
and
adc
std
jb
sbb
xor
dec
push
icebp
push
add
scas
push
cmp
add
jl
sahf
sub
pop
hlt
mov
cmc
mov
cltd
in
js
mov
lcall
xchg
shrl
xorl
cmpsb
enter
fs
jae
mov
inc
lds
fs
lret
in
and
jecxz
mov
aad
setle
or
ret
mov
or
adc
lds
add
sbb
mov
xor
mov
cmpsb
imul
icebp
mov
sub
roll
or
mov
add
cltd
cmp
cmpsl
mov
test
pop
cmpb
adc
add
cmp
fsts
and
jae
xchg
stc
inc
ja
inc
addr16
lds
xchg
add
js
js
shll
ja
fmuls
xchg
fildl
add
add
add
add
add
add
add
add
add
aam
add
add
movsb
jmp
add
add
add
add
add
add
add
add
out
adc
add
add
add
add
add
cmp
add
mov
in
mov
add
add
fwait
subl
sti
mov
int3
int3
int3
cld
and
add
add
adc
or
mov
add
add
add
add
add
add
faddl
add
add
lods
jno
add
add
add
add
add
xor
sbb
add
sbb
cmc
xor
add
add
add
add
js
add
xchg
pop
gs
add
fs
rcrl
jecxz
sbb
in
add
xor
add
fmuls
incl
adc
test
pusha
cld
add
mov
cld
call
inc
insb
jg
test
push
sar
test
ret
add
std
ficoms
add
add
add
arpl
insl
movsb
xor
mov
push
mov
or
push
popf
cld
push
xlat
loopne
incl
mov
dec
push
push
jl
movb
cld
mov
inc
jecxz
adc
test
inc
add
jne
stos
add
repz
test
decl
add
jg
add
sbb
add
int3
adc
add
add
je
sbb
sbb
and
sbb
sbb
or
insb
insl
sarl
outsl
lret
add
int
imul
gs
inc
insl
outsl
inc
lea
add
rolb
add
push
inc
inc
gs
pop
xlat
inc
insb
add
sahf
jbe
outsb
cltd
jno
je
je
gs
insb
add
pushf
inc
add
add
insb
mov
add
add
add
add
or
add
add
faddl
add
add
lods
jno
add
add
add
add
add
add
add
add
ret
and
bnd
shlb
nop
xor
jp
aam
sub
xchg
popa
enter
out
mov
aam
in
jmp
pop
push
cs
sub
push
lea
jge
sub
gs
inc
mov
lods
clc
sub
adc
adc
dec
pop
push
mov
dec
cmp
std
arpl
data16
mov
stc
pop
jecxz
into
mov
sub
or
lea
xor
mov
inc
and
sub
enter
inc
jge
shl
add
push
in
mov
ret
dec
loopne
mov
movsb
jge
test
cmpsl
int3
push
add
sub
pop
adc
dec
pushf
mov
repnz
adc
pop
std
fdivl
add
std
lods
add
stos
cs
les
fcoml
dec
sub
fisttpll
mov
push
jle
push
lods
inc
test
sub
cmp
and
sub
ffree
dec
pop
adc
add
cmp
sub
push
dec
rcrl
mov
popf
xchg
xchg
dec
adc
sbb
and
les
dec
jno
sub
iret
push
cltd
loope
sbb
int
dec
pusha
test
ror
jmp
sbb
out
fwait
lds
fcoml
aad
rorl
cld
fsubrs
jg
iretw
aam
das
into
mov
filds
gs
push
mov
enter
gs
loopne
cmp
enter
stos
jecxz
fbld
cmpsl
jb
push
lret
cmp
mov
daa
shrl
jecxz
std
dec
ret
xor
divb
loop
jmp
mov
adc
movsb
in
mov
mov
push
pop
cmpsl
pop
fistl
dec
jne
jns
int
shll
push
push
pop
xchg
or
mov
xchg
jae
testl
shr
jns
pop
sbb
shrl
lods
mov
test
mov
push
iret
sub
imull
jno
in
dec
imulb
scas
pop
dec
xchg
stos
sbb
lahf
inc
imul
loope
or
es
mov
cld
sahf
cmp
mov
adc
xchg
cmp
jg
imul
xchg
mov
fistl
mov
cmp
sub
inc
in
lahf
cltd
cmpl
cmp
out
jge
cmp
les
lea
xchg
jbe
cwtl
sbb
repz
xchg
hlt
xchg
mov
in
jbe
push
jp
xchg
pop
pop
lret
adc
pop
jmp
jp
dec
out
jae
movsl
mov
stc
pop
nop
ret
fucom
rclb
shlb
jmp
int
ret
dec
cli
lds
cmp
jmp
mov
sbb
pop
sahf
xlat
mov
and
scas
pop
insl
and
jg
mov
sub
int3
inc
rolb
dec
push
lods
mov
lods
jae
mov
mov
and
xchg
pop
lock
add
add
pushf
cld
imul
pop
pop
xor
xchg
xchg
mov
dec
mov
mov
pushl
je
pop
lock
fidivrs
ja
iret
sub
xchg
divb
jno
add
add
cmp
mov
add
rcrl
pop
ret
loop
loopne
nop
xchg
cwtl
add
aam
nopl
adc
test
sbb
xchg
stos
and
rorb
add
repz
xor
call
dec
stc
repz
jns
sbb
rorl
sbb
js
mov
mov
sbb
mov
mov
jae
jo
or
mov
popf
movsb
mov
dec
mov
cwtl
jl
xor
sbb
jno
jecxz
imul
mov
sarl
add
sub
mul
ljmp
push
push
flds
leave
sahf
inc
inc
adc
jne
hlt
jle
xor
or
jmp
cli
or
sahf
xchg
sbb
cmp
sti
ja
repnz
lea
cli
movsb
int
cli
cmp
scas
incl
mov
mov
and
test
arpl
call
shll
jecxz
sbb
adc
popa
mov
ret
sbb
inc
adc
lock
sti
add
pop
out
or
jno
or
fisttpl
pop
pop
sbb
mov
loope
or
pusha
adc
jmp
scas
stos
push
mov
stc
testl
jl
inc
adc
pop
lret
xlat
stos
xchg
enter
outsl
ss
sbb
sub
rclb
jb
mov
ret
sub
adc
and
jae
sbb
adc
and
dec
leave
lods
jo
mov
call
cmpsl
cmp
out
or
xchg
jg
ljmp
and
mov
sarl
inc
ds
add
mov
dec
xor
sub
fdivs
mov
gs
sub
mov
pushf
and
icebp
cs
aaa
insb
aam
push
jae
and
aaa
negl
aad
repnz
mov
xchg
cltd
pushl
leave
or
loope
sbb
adc
movsl
dec
fidivrs
sbb
pop
adcb
adc
lahf
stos
pushf
mov
mov
mov
cmpsl
mov
mov
cmp
popa
rorl
push
jae
loope
push
fists
test
add
hlt
rol
into
and
scas
xchg
push
ljmp
scas
xor
dec
hlt
mov
neg
fidivrs
into
push
adc
and
ds
inc
aam
bound
aaa
insb
inc
mov
xor
mov
mov
cli
xchg
adc
mov
cli
xor
jmp
pop
add
jp
xor
push
lds
sbb
dec
adc
pop
cmp
je
es
or
ret
decb
sub
insb
lods
ror
rcrl
mov
dec
jnp
les
lret
into
cmpsl
cli
pop
loop
cmp
or
sbbb
js
pop
inc
in
mov
inc
roll
int3
adc
dec
jecxz
sub
mov
mov
dec
dec
lcall
pop
sbb
shl
insl
sbb
frstor
loope
test
push
fwait
sbb
in
fldt
vphaddubd
out
mov
dec
div
inc
arpl
mov
inc
test
es
xchg
out
sub
add
xorl
pop
gs
xor
int3
mov
xor
idivl
mov
jne
ja
iret
dec
mov
popf
pop
testl
mov
stos
stos
lea
mov
lods
sbb
inc
dec
pop
add
mov
push
dec
inc
jne
sbb
gs
cmp
xchg
testb
lret
fsubl
add
out
mov
mov
sbb
xchg
out
mov
and
pop
subb
outsb
jl
push
xor
cmpsb
push
or
or
add
fwait
push
mov
sti
add
dec
or
jno
add
xchg
je
jmp
mov
mov
nop
aas
mov
mov
bsf
lcall
or
jmp
push
jns
leave
and
in
push
stos
in
out
cwtl
mov
std
call
pusha
adc
mov
and
dec
jns
ret
loope
das
mov
mov
movsl
fsubs
leave
cmp
imul
clc
test
jo
fiadds
mov
lods
sub
or
lea
mov
shl
arpl
xacquire
ljmp
jmp
rolb
out
add
mov
push
xchg
lret
aam
sub
xor
in
imul
jge
push
adc
inc
mov
outsb
pop
sbb
inc
xchg
mov
out
mov
mov
sub
mov
mov
nop
sbb
std
mov
in
push
xchg
test
sub
or
jecxz
leave
xchg
xchg
repnz
push
mov
scas
sbb
jp
pusha
and
mov
out
sub
xor
push
repnz
xchg
adc
int
cmp
xor
and
sahf
fs
stc
add
cmp
sahf
sbb
push
stc
cmp
out
xor
adc
insb
in
xor
into
push
adc
mull
fs
cmpsl
cmc
mov
fisubl
out
popf
and
mov
nop
inc
inc
fwait
cmp
ficoms
cmp
jg
out
clc
sbb
out
mov
mov
xchg
popa
xchg
xor
mov
rorb
inc
imul
and
and
stc
insl
imul
dec
adc
jbe
lahf
xchg
or
cmp
pop
imul
xchg
repz
sbb
jl
mov
ss
fwait
imul
out
fcmovnu
push
xorl
mov
cs
pcmpgtw
mov
xchg
loop
lea
ret
in
pop
fnstsw
push
mov
xchg
scas
add
cmp
repnz
jp
sbb
in
add
mov
mov
inc
inc
sbb
and
into
fsubrs
ret
jg
adc
sub
push
jle
xchg
xor
insb
int3
jecxz
iret
fists
das
stc
mov
xchg
pop
aas
push
repz
cli
add
popf
test
xor
std
loope
inc
in
fwait
push
loop
push
inc
xor
bswap
xlat
ds
cmpsb
test
movhps
roll
or
clc
adc
insb
add
bound
xchg
out
movsb
movsl
inc
dec
iret
test
xchg
dec
fisttpl
sub
test
scas
dec
aam
cld
mov
xor
je
mov
push
jecxz
imul
sbb
imul
dec
in
and
in
imul
dec
mov
jne
out
movb
push
inc
pop
int
ret
inc
stc
std
xor
out
cwtl
xor
sbbl
push
mov
gs
fnsave
pop
xchg
jmp
xor
outsl
pop
push
lret
pop
fdivl
sub
pop
loope
cmp
cs
cs
enter
movsb
aaa
push
mov
xchg
cmovae
aaa
mov
in
push
mov
pop
bswap
mov
cmc
add
jecxz
dec
cs
xor
test
mov
out
or
sbb
mov
xchg
xlat
mov
ds
mov
daa
sarb
aas
sahf
ja
push
fidivrl
rorb
decb
xchg
imul
jns
repz
out
jecxz
lcall
cmp
mov
mov
inc
imull
dec
mov
fsubl
xchg
in
mov
pop
mov
mov
push
push
add
int3
push
loop
or
mov
push
std
cltd
ja
jle
mov
jg
aaa
fcmovne
and
loopne
in
aaa
cwtl
mov
jns
repnz
mov
pop
cltd
jne
cli
bound
in
xor
push
cmpb
cmpsb
outsb
ret
sbb
icebp
inc
adc
cmpsb
pop
push
fnstcw
mov
dec
fldcw
lds
dec
mov
sub
imul
push
out
push
dec
dec
lock
lret
outsl
shll
ja
mov
mov
mov
pop
jo
int
imul
sbb
fsubr
lcall
add
mov
mov
or
xor
icebp
add
or
lret
outsb
sbb
adc
add
adc
iret
adc
or
and
outsb
jns
popa
sbbb
les
add
and
int3
cmp
icebp
call
cmpsl
jae
lcall
add
leave
push
push
sbb
jno
shrl
adc
and
and
imulb
pusha
rcl
pushf
mov
cmpsb
ficomps
lret
pop
mov
mov
add
dec
inc
mov
xchg
sar
mov
cltd
icebp
fwait
adc
std
std
cwtl
es
sti
inc
cmpsl
xchg
pop
mov
ret
dec
dec
in
call
andl
cli
dec
xchg
xchg
cwtl
loop
mov
fsts
dec
sub
push
pop
push
neg
pop
roll
push
xor
mov
in
outsl
dec
enter
cmp
add
or
pop
jbe
xor
in
pop
dec
mov
cli
inc
push
icebp
into
xchg
push
das
addr16
mov
and
out
pop
push
sbb
test
loop
push
fwait
and
arpl
ds
pop
out
ss
mov
lret
int
push
jns
mov
push
fcom
outsb
insb
cmc
fstpl
mov
insb
xchg
call
jb
sub
cmp
fscale
mov
and
mov
out
insl
outsl
ds
iret
mov
cmp
out
popa
fcomps
or
or
into
test
adc
and
sub
nop
lock
pusha
dec
jns
cmp
icebp
and
mov
xchg
sub
mov
dec
jmp
adc
jne
mov
pcmpeqw
js
rolb
xor
leave
xchg
rcll
pop
sbb
sub
fstpl
or
dec
sbb
xchg
jecxz
sub
std
and
call
mov
pop
lcall
sub
mov
pop
rcll
push
xchg
sarb
sbb
push
lret
insb
xchg
orl
add
push
out
adc
mov
fs
test
mov
xchg
mov
movsb
xchg
xor
cmp
mov
out
test
add
enter
jmp
mov
cmp
mov
ljmp
cmp
iret
jge
in
push
repz
mov
cmp
aaa
mov
sbb
push
cmp
fcoml
and
inc
ret
test
xchg
sub
mov
sti
push
scas
add
dec
sbb
cmp
outsb
or
mov
jecxz
mov
xor
js
sbb
inc
and
dec
sub
xor
xchg
divb
idiv
addr16
xchg
jbe
sarl
ljmp
mov
and
push
xorl
cli
call
cmp
stos
push
icebp
jae
mov
jne
dec
ja
lock
and
dec
xor
mov
and
jmp
fstps
push
ljmp
mov
lock
sbbl
cmc
adc
and
negb
loop
shll
jb
or
sbb
sub
sub
pop
sub
xchg
dec
filds
in
push
stc
cmc
mov
xchg
popf
dec
inc
add
imul
add
dec
pop
cmpsl
aaa
push
mov
dec
xor
fs
shr
mov
out
xorb
iret
push
dec
pop
push
inc
icebp
daa
push
and
lock
cmp
or
inc
pop
cmp
mov
shlb
or
nop
add
add
sti
mov
mov
inc
mov
ja
mov
mov
cmc
mov
jns
mov
inc
pop
mov
dec
and
push
popa
ret
inc
mov
xor
add
jmp
push
jecxz
leave
xor
sub
sub
clc
jge
mov
sbb
sbb
ljmp
outsl
dec
negl
call
ret
jb
std
sbb
fildll
imul
mov
popf
mov
imul
pop
les
push
lret
add
dec
xchg
push
add
out
push
ss
daa
sarl
inc
mov
lcall
xchg
in
das
adc
xor
stos
loop
test
push
aad
test
cmc
fs
xchg
mov
lods
jnp
add
leave
outsb
push
test
jge
or
arpl
orb
notl
mov
movsb
ja
in
jmp
ja
out
push
xor
inc
data16
daa
add
add
add
jno
lret
cwtl
hlt
mov
pop
popf
pop
aaa
orb
adc
push
add
in
push
sti
stc
movsl
inc
ret
pushf
int3
aam
mov
pop
add
jne
insb
dec
mov
inc
mov
or
cltd
test
sarb
xchg
push
dec
xor
popa
jp
aad
es
in
and
cmp
and
push
pushf
idivb
xor
jnp
gs
lea
sbb
add
mov
nop
fucomip
flds
adc
add
pop
dec
js
mov
mov
fs
xor
xorl
pop
testb
ljmp
hlt
es
dec
fldl
cmp
mov
sbb
or
jae
and
xor
cmpsl
ret
movsb
inc
cli
imul
fsubs
xchg
pusha
stc
lods
stos
mov
sub
mov
push
clc
push
cltd
stc
sub
stos
sub
in
les
sahf
out
sub
outsb
decb
test
int3
pusha
dec
hlt
add
and
push
lret
push
fldcw
inc
xchg
mov
imul
or
icebp
cmp
push
dec
std
insl
clc
or
xchg
mov
jo
xchg
jb
shl
aas
xchg
jb
dec
fistpll
gs
mov
pusha
push
push
and
ja
repz
inc
leave
jmp
pushf
push
fs
cmp
ret
jge
push
sar
mov
das
sub
mov
icebp
loop
cltd
xor
pop
jmp
icebp
adc
lahf
adcl
inc
add
fnstcw
jp
imull
jo
dec
and
push
or
popa
scas
scas
loope
scas
aaa
shll
pop
xor
fldt
cld
xor
sbb
mov
add
jnp
xchg
scas
daa
lcall
ja
aad
ficoml
loop
imull
lods
and
or
stc
stos
jle
mov
push
inc
xchg
add
push
xorl
lahf
jg
arpl
xchg
rorl
or
sahf
mov
addb
test
inc
pop
fnstsw
jle
pop
cmpps
inc
adc
and
lahf
xor
sub
mov
test
test
pusha
jge
lods
test
je
gs
fidivrs
or
in
pop
xorb
scas
mov
and
push
shl
das
ljmp
cwtl
faddl
mov
lret
add
loopne
cmp
mov
addl
fsub
ret
sub
ret
push
lret
testl
fs
cwtl
cmp
fadd
in
mov
in
pop
in
pusha
fisubrs
jnp
mov
push
pushf
insb
adc
xchg
int3
mov
aam
insb
xchg
jmp
inc
std
dec
popf
imull
sub
cmp
cmp
lods
iret
adc
gs
jle
dec
mov
dec
sub
and
xchg
jecxz
aas
mov
or
lods
xchg
mov
mov
fildll
outsb
cltd
or
xor
lret
pop
shl
stos
push
push
std
add
cmpsb
xchg
ljmp
xchg
sahf
mov
mov
jecxz
imul
push
xchg
push
mov
insb
push
fwait
fs
iret
stos
and
imul
in
or
out
sahf
mov
loopne
dec
lds
mov
mov
imul
imul
cld
popf
pop
adc
into
cmc
sbb
sub
data16
out
out
movsl
cltd
mov
xchg
stos
clc
out
push
pop
inc
or
lahf
push
int3
cld
ds
ret
pop
pusha
adc
fwait
push
push
cmpsl
das
mov
jbe
pop
jbe
add
iret
mov
ds
xor
dec
shrb
pop
inc
cmpsl
mov
pop
fbld
xorb
dec
sbb
js
nop
cmpb
push
inc
push
jge
jecxz
dec
push
mov
add
mov
add
add
add
add
add
add
cld
and
add
add
adc
add
add
insb
mov
add
add
add
add
or
add
add
add
add
add
jl
add
add
dec
xchg
add
add
sbb
add
add
out
xor
add
add
popa
add
ljmp
ja
movsb
push
dec
int3
int3
int3
push
mov
sub
cmpl
mov
je
cmp
je
push
lea
push
push
call
call
mov
xor
xor
call
mov
xor
call
mov
mov
mov
push
mov
call
push
mov
call
mov
lea
push
call
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
pop
pop
test
jne
mov
not
mov
or
mov
leave
ret
push
mov
push
push
mov
push
mov
mov
mov
xor
add
xor
mov
mov
add
mov
mov
mov
mov
call
mov
movzbl
movzbl
sub
je
call
push
push
pushl
inc
pushl
pushl
call
mov
cmp
je
jmp
mov
mov
mov
mov
add
push
pushl
call
mov
mov
movzbl
movzbl
sub
je
addl
push
push
call
pop
pop
push
push
push
push
mov
push
push
push
push
push
pushl
pushl
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
add
add
xchg
popl
add
push
add
das
add
add
pop
pop
add
add
add
cmpsl
mov
imul
add
add
filds
add
pusha
arpl
add
add
addr16
inc
add
mov
add
add
xchg
xlat
iret
add
add
add
sub
dec
jb
pop
dec
add
pop
in
jb
inc
out
mov
sti
add
mov
or
push
push
lcall
inc
ret
sbb
cmc
data16
or
xor
lcall
xchg
add
push
dec
testl
shrl
std
dec
sar
push
xlat
outsb
mov
incl
and
addl
decb
adc
and
push
call
add
push
cmp
dec
out
or
adc
cld
push
pop
lock
lea
gs
adc
incl
addr16
jne
lea
mov
dec
aas
clc
adc
dec
jp
movl
add
add
add
incl
add
add
das
add
add
pop
pop
add
add
push
dec
add
outsl
into
mov
fwait
orl
dec
xchg
je
insb
inc
gs
push
or
add
scas
jb
push
add
in
inc
dec
insb
xlat
mov
and
outsl
adc
imul
punpckhwd
push
out
add
out
add
add
aaa
das
add
add
pop
pop
add
add
push
dec
add
add
cmpsl
mov
imul
add
add
filds
add
add
sldt
add
addr16
add
add
mov
fcomp
int3
ljmp
mov
inc
shll
mov
and
and
gs
mov
lds
daa
lds
mov
lds
sub
mov
call
sub
push
int
repz
orl
dec
into
out
rcll
dec
push
push
test
hlt
jns
in
push
loop
insl
je
jbe
cmp
add
inc
inc
push
test
or
jle
aas
jno
enter
adc
repnz
jecxz
scas
test
fs
lcall
jbe
movsb
lock
cmp
pop
and
das
sar
mov
push
adc
sbb
enter
mul
sti
adc
cwtl
and
movsb
fisubrs
inc
mov
stc
repnz
pop
cld
adc
add
sbb
nop
sarl
inc
rcrb
lahf
in
sbb
inc
cld
out
cmp
push
aad
adc
lods
into
adc
scas
jae
arpl
jo
push
stc
xchg
pop
xchg
and
aad
nop
es
dec
pop
dec
adc
fisubs
loope
in
in
repnz
pop
and
sub
lret
in
cwtl
fsubrs
xor
aas
std
je
jnp
les
mov
fs
les
out
lahf
subb
add
cmpsl
fistpll
mov
neg
data16
outsb
ss
jl
jp
push
jno
test
je
test
adc
scas
push
shll
push
pop
stos
push
stos
push
and
sbb
pop
and
mov
push
mov
or
xchg
push
repnz
ret
sbb
outsb
fwait
ror
lret
in
test
lods
sub
xlat
xor
pop
lcall
dec
xor
xor
xchg
adc
sbb
mov
and
stos
cmp
aam
mov
data16
dec
mull
mov
out
andl
das
push
adc
test
mov
popf
mov
jmp
sarb
testl
sti
stc
outsl
fiaddl
push
imull
and
popf
mov
fdivp
and
ljmp
adc
mov
leave
and
mov
lock
cs
mov
push
les
faddl
xor
insl
xchg
lahf
cmpsl
mov
sahf
fadd
and
hlt
inc
cmp
sbb
scas
lcall
in
and
enter
mov
lock
push
push
xlat
cvtps2pd
adc
mov
popa
lret
inc
mov
push
stos
movl
cmpsb
or
adcb
stc
dec
pop
xchg
lock
push
or
push
insb
stc
rep
sbb
popa
stos
xor
ljmp
pop
loope
dec
mov
mov
mov
repz
add
stc
sub
or
out
insl
jb
push
mov
push
cmp
add
das
jno
or
outsl
add
imul
addl
pop
mov
arpl
jecxz
jl
and
mov
cmpsl
sub
fcmovnu
lods
jne
or
push
loop
into
adc
or
fstl
push
sub
dec
hlt
imul
xchg
cmp
test
inc
adc
add
lret
xchg
mov
sub
sbb
mov
xchg
cmp
adc
xor
cmpb
in
cli
cmc
mov
das
es
push
sbb
xor
fisubrl
cmp
push
shl
cmp
scas
or
and
cli
mov
icebp
mov
xchg
shll
andl
inc
jae
push
lods
jnp
xchg
stos
xor
cmp
sbb
xchg
scas
mov
das
enter
imul
mov
push
fists
jae
insb
sub
mov
jge
out
movsb
inc
sbb
aaa
dec
andb
test
mov
cmp
incl
jns
adc
idivb
dec
lahf
lret
mov
cltd
or
mov
mov
std
sbb
cmp
pop
jmp
cmp
push
mov
mov
dec
aas
lods
out
fdivr
repz
mov
xchg
mov
cmp
xchg
sub
cmp
aas
fnstenv
fimull
std
pushf
sub
mov
lret
ret
jg
je
sarl
lret
mov
pop
jo
fisubrl
push
fidivrl
loopne
pop
out
push
ja
insl
inc
lret
jnp
jg
popa
imul
add
je
pop
cltd
pop
add
stos
sbb
pop
xchg
pop
dec
insb
pop
mov
mov
addr16
add
mov
push
and
lret
inc
gs
inc
fcmovnu
fld
sbb
inc
jns
and
pushf
push
sbb
or
mov
pop
mov
dec
mov
xchg
sub
outsl
add
cmc
inc
xchg
xchg
push
or
xchg
lods
stos
pop
div
sub
icebp
inc
push
xor
imul
lahf
sti
dec
xor
scas
xchg
dec
lods
sarl
jb
inc
je
mov
sahf
cltd
mov
dec
clc
clc
loopne,pn
insl
push
daa
pop
cmc
shll
mov
das
push
xchg
pop
loop
icebp
cmp
inc
popa
loopne
push
xchg
sbb
jmp
sbb
add
arpl
daa
bound
js
jbe
dec
outsl
fimull
sub
fcmove
mov
mov
inc
fists
scas
bound
lods
out
cs
addr16
insb
xorl
add
std
loopne
shrl
mov
inc
in
outsl
rolb
fdecstp
das
inc
cmc
push
pop
cli
pop
data16
clc
pusha
sub
adc
fwait
jbe
scas
mov
dec
sub
push
dec
cmp
cwtl
and
mov
mov
add
jle
test
sub
hlt
aam
cmpsb
mov
sahf
mov
sub
dec
lcall
stos
cmp
mov
fwait
divl
add
subl
mov
hlt
lds
or
repnz
cld
rcl
out
hlt
and
icebp
hlt
arpl
cli
adc
pop
cmp
and
cld
ds
stos
sub
xlat
ss
sahf
jne
and
sub
pop
lea
mov
fdivs
cmp
cmp
scas
sub
or
bound
aas
mov
leave
push
jmp
movsl
push
and
cmpsl
incb
adc
ljmp
jno
or
and
mov
adc
int3
add
cmp
mov
xchg
loope
push
push
lcall
das
test
imul
mov
mov
sbb
loopne
mov
cmp
mov
insl
mov
repnz
inc
or
xor
stos
adc
ja
and
imul
and
bound
lret
in
xchg
jb
dec
cmp
mov
insb
ret
popa
jo
mov
mov
xorb
sub
jnp
clc
stos
push
lret
je
add
js
mov
fdivs
shl
out
cmp
imul
and
pop
jae
fdivl
mov
pop
inc
mov
xchg
adc
ljmp
dec
jg
sub
fnstenv
int3
mov
outsl
fstps
xlat
leave
push
mov
ffreep
xchg
pop
mov
xorb
jne
cmpsl
ret
lock
test
fistpll
and
push
sbb
sbb
inc
popa
test
jl
and
push
sti
sbb
dec
pop
push
loopne
pop
cmp
jo
xchg
jne
lahf
in
ret
and
mov
adc
add
add
dec
mov
out
push
shll
idiv
and
jnp
aam
sahf
lods
test
jle
or
jge
inc
addr16
push
and
or
push
clc
xchg
mov
mov
jp
out
jnp
fldl
cltd
xchg
jmp
cmp
sbb
divb
out
cwtl
dec
cwtl
pop
push
lcall
subl
cmc
sti
imul
test
gs
out
mov
int3
std
mov
dec
imul
push
addr16
and
btc
xchg
dec
idivb
mov
add
and
dec
xchg
pop
sbb
push
scas
push
divl
jp
cmpb
inc
test
cmp
stos
sub
pop
outsb
push
icebp
jne
sbb
or
rorl
cwtl
test
inc
mov
popf
cmp
and
jno
scas
cmc
dec
jge
inc
cmc
mov
ds
ljmp
push
lock
xchg
out
jno
jp
mov
jns
mov
addl
sub
mov
push
dec
and
int
fmull
and
es
jno
lret
pop
pop
cmc
mov
insl
lock
pushf
jge
stos
add
sbb
dec
xor
pop
loopne
gs
inc
pushl
stc
mov
dec
cmp
test
addr16
pop
scas
out
imul
push
ret
testb
gs
das
fbstp
lds
adc
out
jno
shll
addb
iret
cmpsb
shlb
jmp
xchg
adc
popf
cmpsb
cwtl
bnd
or
clc
mov
enter
subb
jle
jns
mov
ljmp
xchg
movsl
lret
pop
xchg
clc
in
icebp
shll
insb
insb
push
stos
das
fwait
mov
and
push
jne
lret
fadds
ret
pop
sar
call
loope
and
in
sti
xchg
mov
xchg
rcr
fildll
repnz
mov
scas
imul
cld
lahf
add
scas
sbb
call
fmull
mov
push
add
movswl
hlt
sbb
mov
xor
fildl
mov
cmp
or
push
adc
inc
in
test
pop
jp
mov
adc
pop
cmp
and
inc
icebp
lods
andl
adc
cmp
repnz
xorb
clc
pusha
sub
pop
mov
es
cli
cmpl
inc
inc
inc
in
xor
mov
sbb
add
sbbb
inc
push
aaa
out
adc
cli
xchg
inc
aas
xchg
fcomps
mov
bnd
lock
and
and
push
shlb
das
jmp
les
ljmp
or
xchg
les
imul
cmc
mov
lds
lret
cmp
sub
pop
mov
mov
loopne
scas
sub
in
dec
pop
rcll
sbb
and
sahf
sub
and
xlat
lods
das
inc
test
jl
fwait
movsb
or
mov
xchg
int3
xor
mov
push
sub
xchg
imul
push
bndldx
mov
dec
nop
shll
jbe
iret
inc
scas
mov
jl
icebp
xchg
sbb
mov
cmc
pop
mov
fcoml
daa
or
sub
shll
mov
sahf
adc
push
int
pop
and
cmp
pop
pop
mov
and
ficoms
repnz
or
xchg
add
add
xchg
hlt
adc
cs
ja
fistl
adc
xchg
pop
push
int
or
test
push
aam
rcrl
imul
std
popa
notb
mulb
cmpsb
inc
imul
add
and
shrl
mov
ret
jbe
dec
and
repnz
sbb
and
xchg
mov
leave
cltd
inc
push
icebp
sbb
aam
int
dec
into
push
mov
push
dec
imul
mov
sbb
pop
sub
xchg
das
cmp
mov
xlat
and
je
mov
and
and
xor
fidivrs
adc
and
mov
xor
aad
bound
push
loope
data16
fistps
adc
mov
aad
inc
mov
or
or
xchg
dec
leave
or
sbb
mov
cld
adc
mov
mov
jo
xor
mov
inc
mov
ficoml
mov
cld
lcall
sbb
leave
sbb
inc
cltd
test
sbb
jnp
jle
js
cmp
lret
adc
inc
outsb
inc
std
int
inc
jl
fsubl
js
jns
jg
xor
dec
insb
dec
popf
movsl
lods
mov
pop
out
int3
imul
ss
ret
add
push
rcl
cs
daa
enter
cwtl
enter
xor
popf
fwait
pop
lcall
pop
or
xor
mov
out
jl
dec
mov
pop
stos
mov
lret
inc
sbb
cwtl
mov
xor
dec
sahf
int3
xchg
fdiv
test
pop
jp
add
jae
mov
in
cwtl
adc
adc
lock
in
xor
ds
out
lret
dec
lcall
mov
mov
fstps
cmp
outsb
pop
jg
int
in
push
movsb
enter
data16
sahf
pushf
enter
mov
pop
mov
out
xor
cltd
cmp
push
mov
dec
das
mov
mov
in
fstps
jmp
aaa
xlat
pusha
dec
cli
aas
fs
mov
cmp
add
mov
or
addl
iret
lods
sub
sbbl
mov
adc
cmpsl
aam
dec
mov
sbb
xchg
cs
cmp
push
pushf
cwtl
add
cmp
scas
stos
dec
movsl
lahf
mov
fs
ret
xchg
ljmp
cmc
data16
mov
movsl
dec
dec
mov
inc
xchg
out
xchg
cmp
xchg
int
mov
xchg
roll
imul
gs
push
mov
iret
and
xchg
pop
xorb
ret
stos
xchg
push
cmp
pop
add
add
fs
sub
jle
push
cmp
js
in
aad
ljmp
mov
cmp
inc
notb
in
jecxz
xchg
pop
mov
push
xor
daa
inc
cmp
inc
mov
leave
fnstenv
cli
movsb
ror
fwait
fwait
xor
iret
test
mov
inc
jge
jmp
cmp
push
push
test
pop
bound
add
cs
dec
out
imul
or
es
dec
repnz
int3
out
pop
sub
adc
mov
mov
aaa
shrl
jne
sbb
stc
sub
lods
push
sub
fldenv
ljmp
xchg
cmp
popf
out
pushl
cmp
fidivs
mov
adc
mov
add
aam
adc
xchg
sbb
pop
decb
and
cmp
xor
loope
and
fstl
xchg
loopne
inc
lret
add
xchg
cmpb
lret
testb
mov
orl
push
inc
sbb
push
xchg
mov
int3
cmp
adc
push
add
repz
mov
mov
jecxz
icebp
mov
imul
mov
mov
insl
dec
jno
mov
or
sarl
adc
out
push
or
das
lock
inc
cmp
hlt
sub
pop
rcrl
fldl
sbb
je
pop
sbb
cmp
add
mov
test
mov
fwait
push
ret
mov
ret
push
sbb
cmp
sub
add
insl
pop
xor
sub
outsb
and
push
xchg
mov
popa
sti
out
mov
imul
mov
push
ror
inc
pushf
call
fld
jle
mov
scas
fcoml
xor
cmpsb
movsb
and
mov
enter
sbbb
jmp
fnsave
test
xchg
pop
negb
sub
aad
outsb
push
or
jg
push
fwait
push
mov
mov
incl
imul
xor
fistpl
les
xchg
sahf
xchg
jmp
popa
mov
push
mov
rcr
nop
imul
fistpl
in
js
adc
mov
mov
loopne
mov
ja
pusha
daa
dec
jo
dec
dec
ret
inc
jo
cmp
or
mov
mov
fldenv
aad
mov
mov
insl
inc
cwtl
lcall
inc
push
jg
test
movsb
adc
mov
out
pop
sub
mov
daa
dec
movsb
inc
repz
fsubr
mov
sbb
push
sbb
add
pop
ja
loop
xchg
ljmp
push
push
push
stc
adc
or
jne
insb
mov
call
fcmovu
rcrb
clc
push
iret
jae
ret
pushf
lds
cli
lods
rolb
cmp
push
push
mov
inc
push
out
test
cmp
inc
mov
insb
outsl
pusha
cs
push
adc
imul
and
inc
adc
xchg
fisubrl
fsts
jo
ret
xchg
or
jns
js
or
cld
mov
out
les
ja
push
push
lock
sahf
cmpsb
xor
xchg
int3
pushf
xor
jbe
mov
movsb
push
jge
jo
sub
mov
les
push
pushf
mov
inc
je
out
dec
dec
dec
jno
lret
inc
scas
dec
call
xchg
shrl
xor
int
test
lds
mov
add
stc
inc
push
jnp
stc
push
mov
cli
sti
dec
sahf
lods
push
out
mov
out
sub
test
cmpsb
xchg
mov
arpl
or
mov
test
movsb
aad
push
std
insb
xor
std
inc
fwait
jno
jp
loope
call
cmp
adc
jns
and
sbb
sbb
cs
jl
aaa
mov
inc
lods
pop
in
xor
push
and
out
or
mov
mov
jecxz
out
cltd
push
inc
cld
sub
repnz
out
xchg
out
addl
jno
dec
adc
mov
loop
nop
mov
push
fsubl
les
push
cmp
lret
sub
xlat
outsl
arpl
add
adc
mov
dec
in
ds
std
jge
icebp
das
roll
out
push
ja
mov
sub
popa
movsl
jo
fiaddl
push
imul
xchg
test
dec
mov
ret
imul
xor
out
and
sub
nop
sbb
xor
stos
push
cwtl
inc
jo
mov
mov
add
cmpsb
orb
scas
test
xchg
add
mov
int3
fisttps
sbb
inc
outsb
enter
xchg
add
ds
shll
lret
movsl
cmc
inc
sub
lret
cltd
push
rcrb
mov
lds
mov
mov
mov
adc
out
push
mov
adcb
mov
cmp
ficomps
cmp
jae
xchg
sbb
in
xchg
das
stos
xor
xchg
mov
jns
std
adc
js
mov
and
pop
jne
mov
daa
sbb
cmpsl
les
mov
cmp
iret
inc
repnz
icebp
or
adc
add
js
mov
scas
iret
jnp
jb
pop
lahf
add
repnz
fisubrl
sbb
rclb
fists
aad
movsb
cmp
mov
in
loopne
xchg
call
or
shrb
xor
cwtl
daa
addb
addl
bound
dec
jb
mov
inc
rol
cmp
jl
aaa
xchg
loope
jo
std
add
dec
xchg
xor
dec
dec
lcall
push
data16
mov
push
outsb
sahf
lret
ret
dec
add
negl
mov
xchg
xlat
iret
add
add
daa
aas
add
add
ja
add
add
inc
pop
add
add
xchg
popl
add
add
incl
add
add
das
add
add
pop
pop
add
add
push
dec
add
add
cmpsl
aas
add
add
add
add
add
addr16
add
add
add
add
iret
add
add
daa
xchg
stos
add
ja
out
mov
int3
pop
and
add
add
adc
jae
and
add
add
add
scas
add
add
shrb
add
add
add
add
add
jo
add
js
mov
mov
insb
add
add
into
add
add
xor
add
add
pusha
ja
sbb
pop
push
mov
repnz
popa
das
push
dec
cmpsl
lods
outsb
imul
push
cld
add
sti
jecxz
lds
in
js
movsl
adc
or
lea
movl
leave
or
aam
call
push
leave
in
rolb
add
cmp
dec
push
sbb
push
fnstenv
call
mov
loopne
mov
mov
dec
xor
push
loopne
loopne
incb
jmp
push
pop
push
jp
push
mov
stc
dec
push
and
pop
push
dec
adc
push
add
shlb
loopne
add
mov
or
adc
js
adc
add
adc
add
pop
adc
sbb
add
add
add
mov
add
add
loopne
add
add
mov
add
fs
sbb
push
je
scas
add
outsb
in
inc
fs
add
add
je
add
inc
xor
dec
add
sar
gs
jae
scas
push
add
fs
gs
jne
add
add
add
add
mov
add
add
loopne
add
add
sarb
add
add
add
add
add
jo
add
add
mov
add
add
into
add
add
pop
inc
in
push
jae
cmp
adc
cmpsl
push
outsb
icebp
dec
ret
push
add
push
stc
movsb
iret
xchg
adc
add
cld
push
shrb
or
movsl
sub
pop
shlb
pop
jo
xor
pusha
shll
shl
fisttpll
inc
popf
movsl
data16
mov
cltd
popl
insb
cli
jge
sysret
sbb
movsl
call
xchg
push
loope
jge
inc
mov
fdivs
sbb
cmc
push
sti
mov
jecxz
out
fidivrs
xor
addr16
mov
mov
xchg
lods
in
inc
cltd
sbb
add
aas
push
leave
iret
into
std
pop
push
adc
and
add
and
xor
jle
mov
pop
push
addl
xor
testb
iret
pushf
push
in
imul
pop
adc
movsb
outsl
inc
push
ljmp
insb
fcmove
cmp
sub
adc
or
push
inc
add
dec
stos
std
cli
pushf
test
dec
call
pop
imul
mov
jg
mov
push
cmpsb
cmp
daa
fistps
outsb
jnp
pop
insl
xor
mov
mov
jb
push
add
rol
lahf
fisttpll
and
pop
dec
fcoms
adc
insl
pop
jnp
or
sbb
mov
out
call
in
je
cwtl
daa
pop
adc
repz
xlat
icebp
sub
xor
in
jg
xor
bound
cmc
mov
cmc
xchg
mov
fwait
mov
push
dec
or
js
cmp
xchg
sbb
xor
mov
fwait
loope
mov
outsl
xor
imul
jle
cmpsb
in
pop
lcall
iret
cmpb
push
shrl
cmp
mov
pop
cltd
cmc
and
imul
mov
loopne
cmp
pop
adc
pop
into
pop
sbb
dec
dec
icebp
enter
sbb
mov
nop
inc
insl
dec
sub
roll
mov
sub
pushf
gs
adc
ja
cwtl
loopne
xor
lret
dec
mov
push
fdivrs
jmp
mov
mov
loop
rorl
fidivrs
dec
cmp
mov
inc
dec
pop
stc
in
imul
push
xchg
loope
cmpsb
stc
les
jns
fidivl
mov
idivl
lcall
repnz
dec
mov
jg
and
pop
add
test
jle
adc
les
jno
orl
jmp
mov
jno
cmpsb
in
mov
sbb
add
or
bound
ret
popa
popa
bound
dec
and
inc
push
cli
in
and
adc
xor
mov
add
cld
movsl
and
add
mov
mov
push
stc
sbb
jb
jecxz
pop
rcll
add
adc
jnp
jmp
inc
cli
push
out
test
shlb
clc
lahf
add
lods
mov
shrd
sbb
cwtl
imul
mov
push
or
call
lea
xor
leave
test
jno
aaa
mov
mov
xor
pusha
gs
ret
jo
xchg
imul
aaa
adcb
in
adc
stos
stc
mov
movsl
pmulhuw
mov
push
push
nop
mov
mov
mov
pop
dec
xchg
ret
cmc
divb
inc
push
mov
jns
insl
xchg
push
loope
dec
mov
dec
int
mov
xor
sarl
fbstp
ret
push
xchg
inc
sub
mov
pop
fbld
sub
fimull
lret
cs
or
aaa
gs
into
xor
test
addb
lock
test
jae
sbbl
or
pop
pop
xchg
lret
cld
jae
and
dec
xor
mov
sbb
add
xlat
insl
or
xchg
sbb
xor
ja
cs
mov
lahf
stos
test
cmc
mov
shr
jns
lcall
jecxz
out
inc
xchg
divl
jne
fsub
mov
mov
imul
and
adc
xor
inc
mov
ficoms
cmp
adc
mov
mov
lret
add
sub
ror
sbb
stos
dec
cmp
xchg
pop
cld
adc
xchg
fsubr
lock
mov
sbb
or
add
jl
loop
out
or
in
xchg
fbstp
cmc
sbb
aam
rcl
xchg
xor
addr16
out
xor
or
xor
in
adc
aas
add
or
sub
dec
insb
sahf
rolb
pushl
rclb
jno
cmp
push
mov
fsubl
clc
rolb
jo
hlt
pop
scas
mov
dec
cli
icebp
test
mov
data16
pop
cwtl
lcall
add
enter
inc
jno
test
adcb
sbb
nop
fdiv
push
cld
das
cmp
and
xor
pop
popf
ret
ret
mov
lods
jno
and
insb
dec
push
movsb
sub
sti
ja
xchg
push
cmpsl
stos
inc
cld
in
aas
inc
pop
push
and
pop
push
adc
popa
push
rolb
adc
push
mov
rcrl
out
adc
sub
lcall
sbb
add
dec
sbb
mov
push
cltd
mov
in
or
adc
adc
movsl
sbb
repnz
inc
cmp
xor
sbb
sbb
ja
in
das
jmp
out
int3
push
pop
xchg
fcoml
je
mov
fmulp
fistpl
pop
dec
jecxz
mov
pop
sub
aad
sub
mov
int
mov
mov
inc
icebp
add
in
in
ror
push
inc
xchg
mov
sbb
mov
mov
pushf
pop
cwtl
loop
ss
cmp
mov
push
mov
jns
sbb
pop
adc
cmp
mov
mov
or
outsl
test
jp
testb
fistpll
je
pop
shlb
ret
icebp
xchg
lock
dec
xor
mov
cld
or
add
cmp
and
mov
adc
adcl
rcl
dec
loop
jp
jno
lret
int
dec
gs
jnp
ljmp
jmp
or
fldl
adc
shlb
jge
popf
and
sbb
pop
sub
int
call
jo
xchg
mov
in
cmpsb
or
arpl
lock
rclb
inc
out
cwtl
and
add
out
mov
pop
xlat
mov
sbb
cli
ljmp
loope
cmpl
jge
jp
clc
jbe
shl
xor
mov
pop
jne
scas
mov
repz
sbb
xchg
mov
sahf
xlat
mov
arpl
mov
jno
sahf
sub
je
fnstenv
jl
xchg
xorb
arpl
mov
lods
lds
je
lds
sub
jae
xchg
mov
dec
push
inc
mov
cmpsl
repz
cmpsl
sub
inc
mov
into
pop
jb
inc
lahf
pop
cwtl
imul
xchg
outsb
dec
pushf
inc
jle
dec
and
xchg
in
fildl
outsl
mov
inc
jl
cmp
mov
mov
cs
xor
inc
sbb
push
push
lret
ss
cmpsb
lcall
xor
mov
addl
fwait
rcll
sub
rcr
add
mov
inc
into
xor
lahf
xor
sbb
out
mov
fcomip
push
aad
push
gs
out
cmc
xor
push
daa
push
xor
mov
and
insb
sub
addr16
xchg
cmp
sbb
push
mov
rclb
out
dec
jne
cmp
je
xor
in
daa
movsl
dec
repnz
add
mov
or
adc
fnstsw
pop
daa
dec
shl
sub
lahf
in
sbb
into
addr16
mov
sbb
push
push
adc
dec
xchg
xor
ret
aaa
push
scas
jmp
push
cli
mulb
ljmp
xor
andb
mov
sub
das
cmp
and
cli
loop
sub
or
pop
call
jnp
sti
imul
ret
subb
mov
cmp
dec
push
ja
jmp
js
jg
or
cmp
jmp
into
out
jnp
lods
scas
mov
xor
jns
or
and
inc
jnp
pop
xor
out
cs
dec
cmp
out
inc
jg
les
mov
add
add
outsl
int
bound
sbb
fnstenv
ss
mov
cmpsb
scas
or
and
inc
cltd
mov
imul
xor
sub
shll
mov
cmpsl
popf
mov
sbb
stos
aaa
and
sbb
jnp
ficompl
xor
jg
movsb
out
call
xchg
pop
xchg
lahf
pop
jne
sub
or
std
andb
fdivrs
adc
test
out
stos
push
xlat
ret
mov
push
inc
jo
or
data16
cmp
sub
push
or
roll
roll
push
xor
mov
push
clc
adcb
ss
out
cmp
pop
or
ret
das
mov
movsl
pop
fistpl
cli
jne
in
inc
cmp
fsubrs
pusha
int
add
pop
cmp
je
jp
cmpsb
sub
add
push
mov
rorl
and
and
mov
loope
or
clc
adcb
push
fsubr
jl
jmp
nop
jge
js
outsb
jmp
pop
gs
outsb
addr16
and
xchg
ds
cmp
lcall
lcall
lea
or
and
or
stos
inc
shll
icebp
popf
dec
lret
repnz
xor
mov
or
xor
test
sub
mov
std
dec
sub
jne
cmpsb
aaa
push
or
loopne
dec
push
mov
shrb
adc
cmpsb
loope
outsl
dec
jl
xor
stc
pop
add
pop
cld
je
es
jo
roll
lods
stos
enter
xlat
std
jbe
or
mov
and
sahf
mov
push
imul
and
addb
pop
xlat
fisubl
mov
loope
sbb
push
rolb
mov
adc
push
xchg
jmp
pop
jge
adc
mov
jnp
lds
mov
mov
int3
inc
call
mov
or
add
push
xor
in
stos
pushf
stc
jae
adc
aaa
cmc
jbe
pop
ret
adc
jecxz
adc
lcall
repnz
xor
jae
test
lahf
add
inc
mov
adc
mov
xchg
add
jmp
add
xor
hlt
jne
inc
mov
xlat
pushf
inc
xlat
lret
inc
stos
movsb
dec
push
inc
stos
push
or
rorb
add
dec
in
lds
mov
push
fwait
xchg
adc
icebp
lock
pop
push
and
mov
loop
or
je
jns
outsb
shll
out
xor
mov
push
pop
jb
es
add
jge
jne
lods
inc
popf
dec
pop
sbb
pop
xor
lcall
xor
cmp
aad
dec
pusha
aam
scas
dec
mov
or
sbb
decb
jg
ret
popf
sub
lods
bswap
popa
xor
push
xchg
and
mov
in
adcb
scas
lret
sub
mov
bound
jae
lock
dec
xor
mov
dec
jl
aas
imul
aad
stos
mov
cmp
sub
push
pop
or
dec
les
pop
mov
test
pop
in
testb
int3
lcall
ss
je
insl
and
mov
cld
mov
pop
jo
sub
push
mov
pop
push
sbb
lahf
fsubs
ftst
loop
sbb
daa
add
dec
out
cmp
int3
call
test
cmp
and
mov
testb
adc
loopne
and
pusha
in
inc
fwait
push
jnp
mov
cmp
adc
rcrl
pop
movsb
pop
cs
mov
lea
shlb
xchg
enter
sub
lahf
jmp
mov
lret
dec
inc
ljmp
jge
pop
sbb
movsl
adc
std
sbb
test
sbb
popf
adc
loopne
jo
lret
jb
ret
adc
ret
xchg
jl
dec
andb
sbb
xor
enter
insb
ret
push
cmp
and
jmp
sub
pop
inc
xchg
mov
mov
iret
mov
leave
inc
pushf
inc
push
cwtl
lahf
and
cwtl
cmp
in
adc
sub
les
adc
jns
cltd
sub
adc
out
mov
sub
ds
add
sbb
push
mov
add
pop
jecxz
ffree
lods
loop
jmp
icebp
mov
daa
adcl
stc
out
lds
xchg
sbb
inc
sti
cltd
push
cmpb
xchg
insl
mov
int
cmpsl
sbb
push
fstpl
and
addr16
loopne
fnstcw
jb
lahf
xchg
push
cld
roll
sbb
inc
aad
addr16
push
and
test
dec
imul
jecxz
xor
mov
and
divb
stos
into
adc
int3
adc
pop
xor
jge
xchg
pusha
rcrb
cmc
pushf
dec
fs
sub
loop
sub
xor
lods
add
test
mov
xchg
cmp
ret
xchg
int
jnp
rcrb
hlt
xorb
cmp
fcoml
pop
inc
add
mov
cwtl
imul
inc
sarb
pushf
lahf
xor
dec
js
jecxz
and
ja
push
pop
notb
and
xchg
gs
sbb
lret
cld
decl
dec
dec
or
imul
xor
repz
jp
sarl
ja
sub
lret
push
xlat
push
add
mov
mov
fiadds
jmp
add
fldcw
cmpsb
or
cmp
xor
xor
lock
mov
mov
fcmovb
mov
adc
push
pusha
push
pop
stos
clc
inc
xor
pop
mov
cmp
outsl
cmp
sbb
xor
dec
cli
sub
push
inc
sbb
leave
mov
pusha
push
cmp
push
arpl
push
fildl
mov
cli
inc
lods
sbb
cwtl
cmp
mov
xchg
mov
ficoms
aas
das
clc
sti
rclb
scas
mov
movsl
mov
jmp
es
and
sar
pop
loop
cmp
sbb
fwait
test
cmp
sbb
jnp
xchg
ss
or
xchg
aaa
pop
add
mov
push
mov
mov
sub
add
loop
mov
xlat
adc
dec
rcrb
adc
out
imulb
inc
or
push
xor
js
mov
xor
lcall
in
rcr
cmpl
xor
clc
inc
rorl
fbstp
imul
push
mov
fcmove
cmp
repnz
fbld
gs
inc
popa
cmp
cmp
mov
fwait
push
popa
add
js
iret
jne
jmp
mov
dec
rep
cs
ficoml
out
pop
ret
ret
xlat
pmulhw
je
dec
sti
jg
mov
fildl
or
ss
aad
es
push
test
aad
test
pushf
xor
data16
ja
mov
repz
sbb
mov
or
push
push
or
jno
out
inc
push
mov
push
pop
pop
shlb
mov
test
addb
inc
and
xlat
pop
jle
xlat
push
ljmp
xchg
inc
aam
ret
popf
mov
xor
add
dec
sbb
add
pop
movsl
in
adcb
xchg
sub
mov
xor
data16
or
mov
ljmp
loopne
xor
cmpsb
lret
jg
mov
pop
sub
je
out
fs
stc
xchg
inc
xorb
mov
xchg
xchg
ret
jg
cmp
testb
xor
or
dec
cmpsl
js
mov
jmp
push
add
dec
gs
xchg
imulb
lcall
cmp
pop
xor
sub
push
xchg
push
out
mov
sub
call
xchg
out
or
sahf
sub
jns
dec
mov
jne
mov
jmp
cwtl
pop
cmp
icebp
adc
out
xor
outsl
inc
stos
les
push
xlat
aaa
adc
fcmovnbe
mov
sarb
fadds
arpl
mov
push
ds
mov
faddl
push
fld
sti
inc
jmp
dec
adc
push
movsb
and
in
jbe
push
jo
push
clc
mov
push
idivb
xchg
std
fisubrs
dec
cs
xchg
xchg
cmpsb
filds
stos
test
enter
rcrb
sub
lahf
ss
aaa
adc
pop
adcb
iret
push
arpl
jae
scas
push
test
ror
sti
push
stos
push
inc
out
pop
fistps
fisttpl
add
and
and
and
add
roll
inc
pop
xor
and
inc
ret
sbb
sub
shll
in
xor
mov
cltd
stc
dec
mov
dec
negb
pushf
test
xchg
ret
aaa
cmp
jno
jo
fucomip
push
fiadds
jl
mov
test
cmc
mov
or
pop
and
in
push
push
int3
adc
cmp
hlt
leave
popf
cld
push
stc
pop
jnp
shll
in
xor
adc
movsl
pop
and
mov
testb
sbb
jo
pushf
jbe
cld
shrl
fbstp
loop
cmp
add
sahf
enter
aaa
sbb
nop
leave
in
loope
dec
inc
xchg
adc
sub
jl
fs
rorb
push
ja
movsl
out
daa
xor
push
subb
mov
jb
and
or
sti
cmp
incb
decb
call
js
lds
or
pop
lret
cmc
mov
add
lds
xchg
push
push
popa
sbb
out
lds
stc
push
add
loope
aaa
inc
outsb
jp
testl
call
popf
loop
xchg
inc
pop
fcoms
movsb
adcl
xchg
out
gs
sub
push
jp
stos
int
pop
popa
mov
in
call
sbb
mov
lret
or
cmp
jb
jl
xchg
sbb
push
dec
addr16
int
daa
cwtl
adc
or
orl
test
pusha
ret
fstl
leave
pop
inc
mov
std
push
popa
dec
rorl
arpl
daa
es
push
test
out
fstpl
pop
jle
jmp
loope
and
xor
push
xchg
pop
mov
sub
pop
lcall
int
cmp
fdivr
cmc
mov
jo
enter
cltd
inc
xchg
cmp
xlat
and
mov
mov
in
jbe
mov
mov
stos
inc
bound
adc
out
dec
cmc
mov
enter
add
add
pusha
outsb
add
add
push
mov
orb
fiadds
add
add
add
add
adc
add
add
add
add
mov
add
add
loopne
add
add
sarb
add
add
add
add
add
jo
add
add
mov
add
add
incl
xor
xor
sub
add
add
add
add
stos
stos
orb
and
dec
int3
int3
int3
add
adc
add
outsb
jg
add
add
add
aad
add
add
add
add
add
add
add
add
add
incb
add
add
add
add
add
test
mov
add
pop
nop
mov
pop
dec
jno
add
gs
mov
or
lea
or
sub
rorl
nop
stos
push
incl
dec
push
mov
pop
push
mov
adc
lea
adc
popa
call
push
mov
or
and
jne
mov
nop
mov
pop
ret
test
jne
push
jge
andb
add
add
dec
adc
sahf
cld
test
pop
push
xchg
xorl
cli
into
loopne
loopne
lret
mov
out
out
inc
add
inc
mov
popf
call
push
push
call
out
mov
ret
aad
mov
mov
mov
add
jne
inc
push
adc
dec
add
add
add
add
jne
add
add
movsl
scas
add
add
aad
add
add
push
je
imul
je
or
je
jo
xchg
push
js
les
mov
gs
gs
inc
data16
arpl
inc
adc
js
push
loopne,pn
push
jb
addr16
add
xchg
mov
adc
js
jl
add
add
add
add
movsl
scas
add
add
aad
add
add
add
add
add
add
add
xchg
sahf
add
add
add
add
incb
add
cmc
lock
pop
cmp
hlt
jmp
leave
int
mov
or
push
notl
nop
sub
sbbl
and
push
js
lods
inc
cmpsb
aam
mov
into
int3
adc
frstor
ret
mov
pop
xor
xchg
push
pop
push
out
hlt
rep
shl
cltd
lods
mov
fs
insb
or
loope
shl
aas
sub
mov
sahf
pop
addb
push
nop
jnp
mov
push
sub
sti
loop
les
push
add
adcb
jbe
mov
data16
adc
jg
shlb
jge
jmp
jno
pop
in
xchg
xor
std
inc
je
loope
mov
sub
mov
sub
out
jae
lahf
inc
dec
pushf
xor
dec
mov
mov
nop
push
aas
pop
mov
lret
repnz
call
pop
ds
fdivrp
insb
shl
addr16
jns
dec
js
mov
inc
inc
imul
mov
out
rcl
int
ljmp
sbb
mov
gs
mov
push
adc
icebp
and
xchg
sub
jmp
out
je
xchg
inc
xchg
xor
jg
jne
outsl
xor
jns
sbb
mov
fdivs
clc
lods
pop
inc
xchg
pushf
push
cmpsb
mov
xor
jo
lret
icebp
jo
jo
nop
arpl
pushf
push
mov
loop
cmc
add
xchg
in
stos
lods
pop
imul
inc
mov
sub
pop
xchg
in
ror
test
jecxz
nop
repnz
ret
aas
jbe
cmpb
into
sbb
ds
loopne
cmp
ret
adc
mov
sbb
push
shlb
mov
push
insb
fs
sbb
inc
loopne
cmp
in
push
cmpsb
sub
add
ja
icebp
jb
sti
dec
arpl
pop
lods
inc
es
and
jnp
ss
inc
je
test
or
mov
mov
mov
mov
inc
cmp
dec
jmp
mov
mov
loope
inc
lea
and
aam
or
dec
mov
lds
xchg
test
mov
ja
jno
pop
add
test
lcall
jae
cmc
lcall
dec
imulb
fidivrs
ja
xor
mov
cmp
adc
pop
cmp
les
push
mov
cmp
mov
jno
ds
jmp
xchg
es
cmp
shrb
es
rcl
rolb
mov
push
mov
xor
leave
and
pop
push
mov
or
xchg
leave
add
dec
ds
push
dec
lret
fildll
inc
dec
xchg
mov
xor
sbb
gs
cmp
sub
jle
pop
in
pop
sub
daa
dec
jo
mov
ret
loopne
sahf
push
pop
mov
dec
xlat
inc
pop
insl
cmp
in
call
cmp
mov
adc
sub
shll
mov
fstpl
in
insb
cmp
mov
loop
repz
daa
cs
lahf
jg
aas
add
inc
and
cmp
mov
and
inc
xchg
gs
dec
imul
enter
fcom
test
popa
addr16
call
aad
or
gs
ljmp
aam
out
arpl
mov
aas
jmp
xlat
dec
cltd
scas
and
frstor
inc
push
aas
scas
pop
mov
gs
mov
push
icebp
pop
push
lcall
imull
pop
push
call
xchg
inc
fs
addr16
and
aad
sbb
out
xlat
inc
sti
lret
mov
out
push
jg
stc
add
pop
loope
adc
mov
push
mov
and
enter
mov
push
jns,pn
jne
out
out
fadds
sbb
fs
or
loopne
mov
les
shrb
fs
hlt
xchg
out
mov
jne
xor
inc
in
ja
lods
xchg
testl
xchg
mov
push
movsl
mov
sbb
xchg
dec
and
push
push
dec
aaa
mov
or
mov
movl
push
xorl
jle
cld
in
popf
jb
test
push
or
lods
into
cmpsl
and
cmp
cmp
pop
mov
stos
adc
jmp
add
ret
xchg
dec
jle
xor
pop
scas
out
mov
jge
adc
xchg
in
adc
cmpsl
jle
jns
and
and
mov
ja
inc
add
jle
test
divb
pop
movsb
lcall
icebp
je
sub
test
jg
mov
xchg
lcall
stos
pop
cmpsl
push
cwtl
imul
mov
push
icebp
dec
dec
inc
jb
icebp
nop
adc
aas
mov
push
popa
sbb
sti
cli
fildl
push
mov
ret
dec
xchg
rcll
inc
jae
sub
push
add
add
call
sbb
shrb
jae
push
lret
push
dec
int3
insl
and
add
mov
rcr
cli
outsb
sub
fisubl
addr16
std
pop
and
or
inc
cmp
add
cmp
add
push
fisubs
lods
loop
movsb
out
xchg
mov
push
mov
pop
pop
mov
sbb
xlat
loop
scas
mov
lock
fsts
xor
jp
dec
dec
bound
ret
daa
sar
pop
add
mov
sbb
fisttps
xlat
cmp
jno
xchg
jge
mov
fildl
jecxz
dec
push
in
cmp
inc
aas
lods
shll
ret
cmp
cmpsb
add
or
mov
mov
mov
cmpsb
clc
mov
cmp
dec
mov
xchg
and
pop
xor
insb
mov
cmp
push
adc
ss
std
jae
mov
in
js
jle
cmpsb
out
mov
js
or
hlt
outsl
or
out
lds
xchg
pop
cmp
int
sahf
fwait
jno
sub
test
sub
sbb
push
jne
popa
fldcw
pushf
push
fsubrs
push
ret
shlb
jmp
push
pop
lret
dec
std
in
cmp
cmpsl
inc
jl
pop
fcoml
xchg
and
mov
sahf
push
pop
lahf
mov
out
push
pop
push
lds
xchg
fldenvs
pop
addr16
and
xchg
cmpl
bound
cmp
jp
clc
sub
shll
loop
jae
iret
inc
pmulhuw
sti
mov
pop
rcr
xor
ss
or
sub
push
je
call
data16
testl
leave
mov
push
pop
add
push
cs
lret
xchg
xchg
mul
jne
jmp
pop
mov
lock
xchg
add
inc
mov
xchg
sbb
xchg
rorl
icebp
clc
sub
filds
gs
enter
sbb
adc
push
pop
imul
call
ret
cmp
cmp
ret
nop
mov
cmp
dec
fldl
lock
repnz
stos
sub
imul
outsb
insl
popa
push
sbb
fdivl
mov
jnp
mov
ljmp
xchg
rol
repz
je
fwait
add
or
adc
xchg
sub
pop
mov
in
test
into
daa
jp
jl
outsb
and
add
jb
cmpsl
bsr
mov
or
jb
dec
hlt
arpl
hlt
in
insl
stos
pop
out
aas
jecxz
mov
xchg
xor
mov
push
or
mov
testl
mov
mov
mov
cmp
stos
lods
test
inc
cmp
shll
popa
or
mov
push
insb
cmc
js
push
aad
dec
cld
insl
scas
dec
jg
fwait
aas
pop
jno
push
cwtl
jmp
push
mov
xor
ljmp
std
mov
ds
xchg
dec
cmpsb
loop
imul
out
lcall
mov
xchg
push
stos
inc
sbb
ljmp
mov
scas
cltd
mov
jae
mov
pop
pop
lahf
inc
shrl
rcrl
inc
popl
sbb
popa
lods
jle
sbb
and
jecxz
or
leave
or
and
pop
cmpsb
repz
adc
cltd
shrl
fisttpl
mov
outsb
mov
aas
sbb
push
sahf
fmuls
lods
pop
sahf
mov
pop
push
mov
aas
push
mov
jle
xchg
fs
sbb
out
sub
mov
adc
decl
ret
mov
cmp
jge,pn
movsb
sbb
xchg
lret
adc
in
mov
and
cmpsb
push
leave
ret
test
fs
mov
xor
mov
xorl
lcall
inc
add
sbb
adc
mov
xchg
xchg
outsb
clc
fcoml
push
sbb
xor
arpl
repnz
data16
popa
ds
jge
movsl
ja
pusha
outsl
sbb
sub
scas
imul
in
inc
or
add
mov
mov
scas
scas
dec
out
sub
lcall
jp
cmp
push
sub
mov
push
fwait
in
test
xor
mov
sub
pop
mov
divl
adc
jae
mov
mov
addr16
mov
mov
xchg
jns
xchg
pop
xchg
jno
mov
std
dec
and
scas
aam
jbe
rorl
or
into
push
sub
mov
gs
divl
inc
mov
pusha
jnp
nop
and
rcrl
sbb
clc
call
sarb
add
pop
push
loopne
out
mov
cmp
int3
add
mov
and
jg
push
aas
mov
pop
jns
lds
sub
mov
mov
add
xchg
shr
enter
and
insl
jle
pop
adc
and
mov
test
inc
sub
jmp
lret
sbb
mov
std
and
ret
sbb
imul
pop
mov
fs
in
jl
jmp
aaa
jne
add
add
jns
out
mov
push
add
sbbl
in
cmp
sbb
loope
or
fwait
dec
xor
arpl
sbb
aaa
movsb
out
addl
jmp
lods
push
adc
sti
push
mov
jne
lcall
outsl
aaa
sbb
aad
stc
insb
dec
movsb
or
cltd
add
leave
mov
mov
out
jbe
cli
sub
stc
mov
mov
ja
icebp
repz
jg
cld
lret
aaa
test
das
lret
push
mov
pusha
mov
out
aaa
mov
daa
cmp
pop
and
iret
leave
ja
adc
mov
push
sub
dec
xor
shlb
inc
enter
int
inc
ljmp
icebp
lret
fdivrl
imul
jmp
mov
aas
jmp
xor
jbe
rcrl
sbb
inc
mov
and
mov
cld
repz
mov
mov
sub
mov
pusha
iret
push
scas
stos
test
add
sbb
pop
rcrl
push
push
and
push
adc
pop
mov
adc
mov
scas
aaa
xchg
arpl
xlat
mov
sbb
jo
dec
rcrl
iret
pop
adc
fbstp
sbb
aas
jnp
test
sub
push
lds
mov
mov
hlt
push
cmc
pop
jne
sbb
enter
inc
testl
fdivr
adc
xor
fdivs
cmp
es
test
jo
jp
hlt
movsb
iret
push
imulb
insl
sub
in
fs
push
lods
sbb
xchg
cmp
out
adc
push
adc
imul
push
cwtl
mov
xor
aad
inc
dec
int
mov
lret
ss
xor
fcmovne
lea
clc
mov
mov
mov
pop
xor
dec
mov
jbe
lret
mov
lods
jnp
jbe
push
mov
cld
repnz
mull
mov
fldz
sahf
jbe
fwait
arpl
fs
in
dec
xchg
mov
int
xchg
out
push
leave
jne
lea
cmp
adc
xor
dec
shll
push
push
add
test
add
subb
sbb
cmp
mov
jl
daa
jns
cmp
lods
mov
inc
scas
lahf
lret
xor
dec
ret
popa
fisubl
leave
sbbb
xchg
push
mov
repz
jne
outsl
mov
mov
xchg
jl
push
ds
or
xchg
repz
sbb
sub
addr16
mov
cmpsb
jle
fcomi
popa
or
cmp
adc
call
and
shlb
jbe
sbb
pop
mov
stc
icebp
push
pop
imul
and
outsb
xchg
xor
repnz
pop
call
gs
cli
push
xchg
sub
out
rcr
call
jge
sbb
addr16
cmp
add
adc
std
mov
jl
pop
and
aam
push
fcoml
rolb
push
movsb
aam
repnz
leave
in
nop
add
push
and
int3
repz
sub
sbb
repz
and
xlat
std
iret
ss
xchg
adc
outsl
adc
sbb
out
cmp
or
push
ds
pop
sub
jle
sbb
ficoml
inc
adc
popf
fs
pop
xchg
stos
xor
in
in
mov
pop
aas
clc
xor
sahf
movsb
ret
sub
inc
lods
inc
enter
dec
call
mov
and
shll
mov
cmp
mov
das
jmp
inc
imul
mov
jo
adc
inc
lods
jo
fcoml
cmp
pushf
stos
dec
adc
shll
cltd
test
and
push
mov
repz
mov
insb
aam
and
imul
shl
sbb
in
dec
movsl
js
fstpl
cli
push
push
imul
add
push
jle
ljmp
test
xor
lcall
ja
xchg
in
repnz
xchg
out
and
andb
inc
and
jae
jg
mov
cmp
das
dec
das
shrb
jne
inc
lock
mov
imul
mov
mov
addb
adc
cld
jo
test
out
mov
and
mov
or
push
sahf
les
pop
popa
mov
mov
sahf
fldl2t
or
adc
inc
mov
dec
insb
add
jno
mov
xor
movsl
add
ljmp
jmp
mov
push
or
or
mov
and
jne
icebp
pushf
dec
ljmp
lret
sbb
push
cmp
ss
inc
sbb
sub
or
inc
mov
icebp
negb
and
sbb
movsl
aam
mov
stos
in
std
lds
adc
out
inc
mov
stc
cmc
imul
sub
xor
not
sbb
je
int
pusha
in
test
jbe
jecxz
leave
aam
xor
adcb
mov
test
sub
nop
das
sub
xchg
xchg
pop
fsubp
cld
mov
test
hlt
hlt
gs
mov
dec
mov
push
jle
mov
xchg
adc
lods
aad
imul
in
mov
jl
addb
jmp
add
jge
mov
cmc
notl
ljmp
out
call
adc
add
add
roll
mov
fbstp
jnp
add
mov
lock
pop
sub
leave
mov
push
aaa
aaa
stc
call
adc
cmp
mov
ljmp
aad
lahf
mov
subb
jns
cwtl
sub
fisttpll
xchg
and
imul
or
xor
gs
lret
ret
dec
in
test
fdivs
jae
sarl
pushf
vaesdeclast
iret
ret
scas
daa
scas
push
pop
xor
jne
sub
mov
popa
pop
bound
xchg
jl
add
jecxz
jno
inc
xchg
jl
push
hlt
sub
pop
shr
ljmp
mov
dec
jbe
pop
cld
mov
ficoml
imul
cmp
sub
xchg
ficoml
sbb
xchg
push
adc
fisttpl
adc
pop
je
push
call
mov
daa
outsb
fstpl
or
or
out
loop
and
sbb
push
lret
repnz
in
xorb
sub
add
xchg
cs
popf
sbb
xchg
mov
mov
outsb
push
mov
hlt
je
les
int3
mov
pop
cmpsb
mov
xchg
hlt
sbb
jae
repz
add
out
outsl
ret
sbb
sub
stos
and
sbb
fldenv
mov
inc
imul
imul
lret
test
pop
sahf
pop
sti
lret
lds
iret
mov
in
or
or
xchg
in
xor
push
into
insl
insl
test
jns
in
jo
lea
sbb
push
enter
pushf
push
xchg
nop
and
shlb
in
jp
rcll
ds
mov
out
xchg
gs
mov
out
in
push
pop
dec
in
sbb
inc
push
ds
inc
jae
or
stos
imul
test
mov
push
les
add
les
lret
lahf
mov
dec
out
hlt
iret
sbb
dec
sarb
mov
push
ficoml
sbbb
mov
add
add
and
mov
clc
jno
loop
pop
sub
lret
and
fnstsw
aas
repnz
jge
imul
mov
cmp
fnstsw
gs
or
testb
mov
and
xor
loop
mov
jns
jle
mov
into
mov
and
cmp
xchg
xchg
faddl
int3
imul
pop
pushf
addr16
rcl
ficomps
std
insb
icebp
in
and
push
rcll
out
sahf
xchg
dec
dec
mov
repnz
aam
lcall
fwait
cmc
lahf
jnp
cs
out
add
pushf
sarl
mov
pop
std
test
dec
cli
or
repz
xchg
pushf
cmp
jo
mov
jecxz
ds
jg
mov
push
fidivs
adc
xor
pop
fmuls
cmp
push
movsb
arpl
mov
xchg
sbbl
insb
adc
sub
mov
dec
pop
jno
dec
rcl
sub
lahf
addr16
sti
js
enter
adc
imul
cpuid
dec
sub
dec
popa
movsl
xor
lods
dec
rolb
cmc
sbb
jl
pushf
sub
ss
xor
fcoml
enter
lahf
in
inc
out
sbb
jbe
loop
mov
or
xchg
adc
mov
nop
mov
scas
inc
xor
incb
lret
adc
mov
jmp
sbb
into
sub
jmp
dec
jmp
sbb
rcrb
add
mov
dec
mov
add
add
push
pop
add
add
test
mov
add
add
in
add
add
adc
add
add
add
jne
add
add
movsl
scas
add
add
aad
add
add
add
add
add
addb
add
add
into
add
add
cmc
incb
add
add
add
add
add
test
mov
jo
jo
xchg
adc
int3
int3
int3
int3
add
add
jmp
mov
outsb
jne
or
or
pop
jns
add
add
sub
add
add
flds
add
add
mov
add
add
add
and
add
dec
sbb
leave
sbb
add
sar
sbb
sbb
mov
add
gs
or
outsb
inc
pop
push
add
xchg
jmp
inc
into
fldpi
sahf
mov
mov
mov
dec
jle
jmp
push
sar
pop
in
mov
inc
decl
add
cld
add
mov
adc
add
sbb
add
ljmp
push
mov
push
push
sarb
mov
mov
mov
xor
add
push
daa
cli
sub
pop
xor
data16
gs
stos
xchg
push
push
add
rorl
pop
loope
std
cmp
and
cld
fidivl
add
lea
jp
inc
mov
push
inc
cltd
incl
add
cmc
psubb
cmp
push
lret
sub
mov
cmp
lea
sbb
lock
push
jne
cmc
cmp
ret
add
in
jmp
stos
cltd
add
sbb
orl
sbb
push
jns
add
add
gs
mov
fucomi
push
outsl
outsb
outsl
out
insl
jo
add
push
inc
outsl
xchg
push
add
mov
mov
dec
mov
fs
insb
jb
ds
jge
add
jb
outsl
imul
lahf
scas
popa
gs
cltd
add
add
lcall
jns
add
add
sub
add
add
flds
add
add
mov
add
add
add
add
add
sub
add
add
sbb
add
popf
jmp
adc
cmp
mov
sub
push
int3
push
or
subl
fisubl
icebp
movsb
sbb
adc
into
pushf
dec
xor
jae
mov
push
adc
sbb
mov
jo
mov
push
roll
cmp
mov
mov
inc
bound
dec
jno
push
mov
mov
mov
and
jnp
and
mov
fcompl
sbb
lret
or
mov
ret
push
and
pop
call
lret
sub
jb
adc
lock
lret
jl
test
ficompl
cltd
push
loop
movsb
and
out
fucompp
push
dec
pop
xor
mov
jmp
push
push
xchg
inc
jecxz
adc
pop
cli
sti
jae
and
and
pushf
arpl
and
xor
dec
dec
insl
sub
add
les
std
fs
and
and
test
xchg
adc
mov
mov
adcl
dec
scas
out
pop
ds
ss
test
jmp
out
sbb
lahf
lcall
jno
pusha
mov
adc
jmp
fwait
rcrl
decl
xchg
push
push
or
push
dec
sub
and
push
push
or
sub
mov
cwtl
stos
mov
mov
xchg
aas
inc
insb
xchg
inc
adc
cmpsb
aas
dec
jecxz
push
loopne
stos
lock
adc
mov
adc
mov
jle
lahf
adc
and
popl
mov
iret
dec
test
add
inc
xor
enter
mov
or
mov
rcrb
fnsave
cmc
mov
inc
cmp
sbbb
scas
cmp
pop
cmpsl
or
filds
jno
js
and
call
cmc
fsubl
cmpsb
jecxz
sbbb
aaa
leave
mov
loope
push
rorb
fldenv
dec
rol
aaa
lahf
mov
lock
jae
adc
jp
push
lahf
dec
mov
outsb
or
mov
loop
xchg
cs
iret
inc
repz
mov
adc
mov
in
and
mov
cmp
mov
xchg
icebp
sub
fbstp
cmp
cli
popl
out
cmpb
inc
stos
dec
mov
ficompl
push
out
jo
dec
cltd
cli
pop
jbe,pt
push
jge
mov
mov
xor
iret
adc
pop
sub
push
idivb
inc
jle
inc
xchg
lret
jg
cmp
mov
insl
das
dec
mov
push
push
inc
or
push
inc
ret
int3
jl
mov
dec
repnz
xchg
mov
int3
sbb
xor
adc
sub
js
dec
and
xor
into
push
sbb
xchg
mov
ja
mov
clc
push
shll
aad
add
sti
loop
ds
jmp
mov
pop
fidivs
insb
pop
jno
subb
xchg
lret
push
das
aam
adc
leave
or
into
add
adc
mov
leave
push
pop
call
xor
ljmp
add
sbb
pusha
xchg
fucomp
stos
hlt
aad
and
int
inc
inc
inc
icebp
xor
mov
ljmp
mov
xchg
arpl
pushf
cmc
cltd
push
and
mov
mov
dec
outsb
and
pop
push
jne
inc
cmp
and
and
lods
out
pusha
push
xor
push
shrl
sub
fldcw
jb
lahf
mov
dec
test
mov
pop
sub
cmp
loope
push
mov
scas
sbb
ljmp
fstpt
adc
pop
lods
or
inc
and
jmp
in
mov
cmc
arpl
xchg
xor
sahf
notb
int3
sub
cltd
lcall
ftst
xchg
cmpsb
scas
shrl
xchg
jo
testl
movsl
scas
push
cli
sub
fucomp
push
mov
insl
push
cli
lret
push
nop
xor
push
mov
sarl
cltd
insl
fstpl
std
xorb
jb,pt
inc
dec
xor
in
jae
mov
aam
push
jge
add
sbb
sub
mov
push
push
cmp
dec
test
enter
mov
xor
inc
push
rol
sub
and
sbb
aas
inc
in
push
jecxz
icebp
cmp
xchg
inc
xor
cmpsb
adc
ljmp
mov
dec
mov
repz
xor
fistps
out
pop
loopne
incl
popf
mov
int
pop
cmp
jmp
mov
aas
lds
ss
in
xchg
mov
or
mov
testb
out
inc
test
fldl2t
xor
xchg
sub
fadds
inc
xchg
push
movsb
div
stc
shll
jl
pop
xor
adc
lcall
out
cmp
iret
int
mov
pop
fsubr
inc
rorb
ljmp
fs
fbstp
cmp
push
mov
int
jne
jno
push
mov
imul
jb
and
imul
or
mov
sti
das
lods
inc
cmp
xchg
inc
pop
cmp
movsl
ljmp
cld
rcrb
test
sti
adc
lahf
and
cmp
dec
push
in
lret
outsb
cmp
aaa
adcl
xchg
imul
test
pop
pop
addl
inc
pop
ret
push
inc
movsb
leave
aam
loope
push
jne
sahf
mov
push
je
add
mov
jmp
xlat
and
cmpl
xchg
xchg
roll
pop
jne
out
filds
cmp
or
popa
popf
stos
and
das
mov
lcall
aam
nop
cmpb
push
push
ds
fidivrl
mov
adc
jg
sub
out
push
pusha
scas
sub
inc
xchg
inc
push
fdivp
pop
xchg
cmc
out
or
loopne
in
fidivrl
adc
mov
shll
push
loope
fs
ljmp
rcl
jg
insl
dec
mov
jmp
pop
xlat
rol
fsubs
pushf
cmpsl
pop
fldcw
push
mov
int
xorb
pushf
cmc
shrl
inc
jmp
sbb
mov
inc
pusha
pop
mov
mov
push
cmp
and
cmp
cmp
outsl
shlb
dec
push
push
jmp
inc
push
mov
push
add
das
outsl
add
sbb
das
adc
jo
mov
inc
ds
add
xor
loope
xlat
add
inc
pop
push
xorb
sbb
cmpsl
dec
js
mov
popf
in
pop
in
test
pop
sahf
insl
insb
loope
add
push
lcall
shrl
mov
dec
lret
push
dec
and
inc
mov
imul
inc
pop
daa
in
xor
test
mov
xorb
xor
push
xor
lock
sbb
dec
mov
push
mov
out
or
call
mov
xchg
sti
pushf
rcrl
mov
movsl
push
sbb
fsubs
push
mov
sub
or
idiv
and
lahf
push
popf
and
shrb
bound
push
xchg
out
in
daa
mov
daa
stc
add
fnstcw
shrb
jge
adc
add
test
push
sbbl
mov
push
ljmp
loope
in
push
xor
mov
pop
xorb
imul
jnp
out
fcomps
xchg
inc
mov
dec
jmp
out
rcll
lahf
mov
add
pop
push
lock
fnstcw
cmp
sub
dec
xor
shll
shll
mov
pusha
cmc
dec
loopne
xchg
jns
cmp
fwait
fwait
ds
out
cmp
pop
mov
and
loop
ljmp
loop
lods
lret
push
mov
push
push
adcb
shl
ds
sbb
mov
xchg
hlt
jno
inc
iret
lock
out
sbb
jmp
cmp
sub
sub
adc
test
addr16
sti
mov
cli
cmc
mov
inc
dec
mov
in
fwait
out
dec
pop
pop
cs
insl
push
fnstenv
mov
shrb
xor
xor
add
test
xor
jge
sarl
je
sbb
inc
or
in
out
dec
pop
das
add
gs
fcoms
sub
bound
and
ljmp
mov
push
cli
repz
loopne
repnz
cld
inc
xor
push
cmp
rorl
xor
testl
lcall
lcall
fadds
stos
mov
mov
add
shrl
out
dec
cli
or
in
test
stos
sbb
add
xlat
stc
inc
aam
popf
je
outsb
shrl
insl
xchg
xchg
adc
in
push
sub
ret
mov
aam
dec
aad
jne
imul
jle
mov
cltd
out
adc
fcomip
jae
mov
add
lahf
lcall
xor
or
mov
xchg
and
xor
mov
mov
jne
shlb
sbb
mov
aaa
jl
mov
push
pop
jnp
jbe
sub
js
xchg
cmp
mov
cmp
ja
xchg
data16
enter
lods
cmc
pop
and
out
cmp
cmp
sahf
sbb
lods
push
mulb
test
js
in
das
xchg
les
pop
shrb
repz
dec
or
xchg
pop
shrl
cwtl
cmp
sbb
inc
fcoml
stc
pop
ret
inc
xchg
mov
cmp
mov
imul
jmp
int
scas
xor
jno
jbe
push
iret
jbe
data16
jp
pop
test
pop
lods
mov
into
hlt
sarl
mov
in
mov
outsl
stos
std
pop
ds
dec
iret
jle
ret
mov
scas
mov
aam
dec
ss
jecxz
xor
adc
jp
aaa
test
mov
mov
mov
ja
sub
icebp
fdivrl
xchg
mov
dec
push
fcmovnb
mov
hlt
mov
ret
sub
inc
lahf
add
out
cmpsl
or
fcomps
xor
pop
shl
jb
xchg
xor
iret
lea
mov
cwtl
add
outsb
repz
inc
jl
addr16
mov
jbe
orl
les
and
outsl
mov
inc
mov
pop
pop
inc
repnz
mov
pop
fcom
aam
aaa
sub
xchg
jo
shll
out
mov
fsubl
out
les
repnz
sbb
sub
repnz
adc
jp
adc
roll
cltd
fildl
dec
cltd
push
sub
pop
jl
or
out
and
fidivl
sub
mov
clc
popa
mov
icebp
jmp
arpl
mov
xor
ja
mov
imul
or
adc
cmp
push
cmp
lret
jns
ret
or
and
scas
nop
jb
lods
nop
lods
out
mov
lahf
insl
pop
push
push
call
push
sub
cld
xlat
dec
adc
push
jecxz
negl
mov
pop
add
psubq
bnd
adc
push
lret
fsubr
jne
inc
mov
cld
imul
cmpsb
mov
clc
jne
rorb
into
xchg
popa
dec
push
jl
mov
xchg
call
maskmovq
divl
and
mov
test
or
inc
fistpll
mov
fs
jo
xchg
pop
push
cmp
or
mov
lahf
and
in
jne
xchg
mov
xor
daa
inc
add
adc
iret
xor
insl
pusha
scas
arpl
lcall
loope
fadd
stos
jo
inc
mov
sub
sar
js
shlb
dec
push
not
mull
nop
add
xchg
hlt
or
inc
js
lods
sbb
adc
inc
aaa
sub
mov
jbe
ss
dec
movsb
clc
xor
mov
adc
std
pop
push
mov
incl
and
icebp
cmp
hlt
dec
aas
pop
adc
lret
out
aas
call
mov
ficompl
sbb
pop
fildll
repnz
fs
mov
fsubl
popa
mov
insb
push
addb
mov
inc
jno
test
clc
add
dec
ret
sahf
clc
xor
pusha
sbb
and
push
xchg
out
popf
ficomps
xchg
mov
clc
push
into
bound
iret
xor
xchg
inc
adc
cmp
mov
and
js
mov
jae
in
iret
xchg
sahf
ja
mov
xor
popf
out
mov
jo
iret
cld
or
cltd
ljmp
sahf
orl
out
adc
cli
mov
dec
gs
xor
fwait
das
inc
push
lret
xchg
adcl
mov
mov
push
push
mov
and
orb
mov
xor
les
rorl
fdivrs
js
cmp
cmp
aas
mov
mov
sbb
into
cmp
sub
test
out
int
dec
mov
stc
fimull
jo
push
jl
pusha
minps
lds
rorl
sub
movsb
sub
aam
cmpsl
cltd
sbb
pusha
in
gs
cwtl
aam
ret
xchg
jl
das
mov
xchg
pop
inc
andb
sahf
pop
inc
cmc
cmpsl
fdivrs
push
into
fstpl
xchg
int3
xor
mov
fcmovu
int3
xor
push
int3
inc
inc
ret
sbb
pop
sub
pushl
dec
sahf
aam
jmp
adc
mov
movsl
cwtl
js
in
jae
xchg
jnp
ljmp
jbe
fwait
or
aad
pop
mov
push
loope
xor
jmp
dec
adc
push
orb
mov
outsl
stos
movsl
aaa
sub
aad
inc
popa
addr16
aas
add
imul
cmc
pop
repnz
xor
push
push
popf
mov
movsb
flds
xchg
cld
iret
imul
add
stos
mov
mov
inc
cmc
sbb
jg
and
shrb
cs
leave
xchg
not
dec
jo
lret
xor
jns
jle
or
mov
outsl
jae
mov
lret
fsubl
lea
xchg
or
fcoms
or
lea
sahf
das
jle
or
fcmovb
or
cs
mov
and
cltd
jae
test
sbb
inc
jns
pop
jmp
out
stc
lds
jne
or
inc
add
in
test
pop
mov
lds
pop
add
sbb
xor
add
ret
call
sahf
cmpsb
imul
pop
cmpl
xor
test
out
in
mov
lret
arpl
pop
pop
nop
inc
sub
cmp
mov
jl
inc
mov
outsl
and
sub
stc
shll
inc
pop
or
pop
cmp
pop
mov
mov
std
pop
aam
jae
es
adc
pushf
inc
in
stos
lret
fxch
and
dec
pop
addr16
xchg
in
lods
add
or
pop
inc
pop
xchg
loop
cmpsl
retw
mov
out
inc
jb
mov
adc
fs
aaa
fwait
movsl
arpl
mov
insl
mov
xchg
rcrl
adc
dec
enter
scas
and
bound
outsl
nop
clc
stos
mov
push
and
in
inc
mov
dec
jg
sbb
xor
cli
negb
aam
lods
xor
mov
or
cmp
cmp
pop
outsb
jbe
xor
lods
xchg
sarb
lret
fs
sbb
and
dec
or
xor
sub
iret
inc
mov
ljmp
shr
out
and
xor
aas
leave
or
gs
fimull
imul
lret
mull
xchg
lcall
mov
ret
in
test
or
popf
push
rolb
xchg
rolb
enter
es
jmp
lods
pop
sub
jecxz
shlb
jbe
xchg
gs
pop
cmp
ds
sbb
repz
xorl
adc
push
sub
adc
mov
fldt
jmp
ss
ljmp
sub
aad
mov
xor
mov
sub
and
sti
ss
outsb
cmp
ljmp
mov
mov
add
sahf
mov
jge
or
imul
xchg
int3
sub
sbb
loope
lahf
adc
scas
xchg
jae
ja
ret
mov
xor
cmp
xlat
call
adc
fldl
faddl
and
or
jno
adc
arpl
popf
ret
test
xor
cmp
and
sbb
pop
dec
and
rcll
inc
add
add
push
mov
enter
mov
add
lahf
xor
out
dec
pop
push
cmpsb
pusha
bound
dec
or
mov
jl
or
push
sbb
mov
push
dec
es
pop
adc
mov
pop
imul
sub
jne
scas
inc
iret
and
push
mov
movsl
push
xchg
cs
and
jecxz
mov
jbe
je
or
ljmp
movsb
xlat
dec
push
jb
mov
xchg
cwtl
sbb
repz
dec
mov
push
mov
jne
and
pop
xlat
mov
mov
cmp
jmp
gs
mov
pop
aam
xchg
lock
orb
mov
mov
mov
adc
add
pop
or
mov
push
jnp
repz
sub
inc
aad
rolb
stos
push
cmc
rcll
mov
imulb
shlb
push
push
dec
sti
lcall
cmp
sti
stc
lds
fnsave
jl
or
push
xor
push
jecxz
inc
mov
xchg
cltd
jle
cld
fisubrs
push
stc
and
sbb
push
cmp
cli
xlat
test
jl
sub
je
sub
scas
movsb
jnp
cmp
adc
and
inc
sub
jg
jmp
int3
hlt
sub
stos
jle
mov
adc
mov
pop
je
jl
outsb
dec
or
ret
sbb
testb
jne
push
enter
adc
jecxz
shlb
imul
rcrb
and
mov
insb
aam
popa
cmpsb
pop
mov
xchg
jo
or
outsb
fsubp
pop
adc
dec
pop
inc
or
lcall
inc
popa
push
repnz
outsb
adc
dec
out
xor
je
and
mov
and
insb
rorl
inc
inc
adc
dec
jne
faddl
repz
sub
cld
push
add
cs
lret
jmp
sub
adc
push
lahf
test
jbe
pop
dec
xor
pop
add
test
or
data16
fwait
inc
adc
in
in
sbb
sub
xchg
xchg
push
and
mov
mov
jne
xchg
xor
lret
cld
mov
sbb
adc
jmp
ret
sbb
push
mov
jmp
fwait
inc
sub
mov
lcall
xchg
imul
add
mov
call
popa
gs
jmp
cmp
push
cmpl
ret
cmp
pop
add
pop
scas
ror
out
xor
lods
fsubrs
jle
rorb
ljmp
icebp
or
xor
notl
lods
mov
and
xchg
push
aaa
mov
out
and
xchg
outsl
add
inc
repnz
mov
aas
and
add
add
add
add
pop
or
add
add
cmp
add
add
jmp
stos
cltd
add
add
lcall
jns
add
add
sub
add
add
flds
add
add
mov
add
add
add
add
add
sub
add
add
sbb
add
add
lret
add
add
ljmp
stos
stos
add
sub
clc
cmc
sar
int3
int3
int3
push
mov
xor
push
push
movl
movl
movl
mov
movl
mov
mov
call
mov
mov
push
push
movl
movl
mov
movl
call
push
mov
call
pop
ret
push
mov
sub
push
pushl
call
mov
pushl
xor
movl
pushl
mov
mov
mov
movl
movl
movl
movl
movl
movl
movl
call
add
test
jne
push
pop
jmp
push
push
push
pushl
call
mov
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
push
lea
push
push
call
add
push
call
mov
leave
ret
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
jmp
pushl
call
pushl
call
push
push
push
mov
pushl
call
call
push
pop
pop
ret
jae
jb
jo
add
adc
add
xor
call
push
push
push
call
push
imul
jb
je
arpl
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
nop
into
add
mov
into
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
pop
iret
add
dec
iret
add
inc
iret
add
cmp
add
xor
add
sub
add
and
add
sbb
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
js
add
or
add
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
sbb
add
cmp
add
pusha
rolb
add
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
mov
add
mov
rolb
add
rolb
add
rolb
add
rolb
add
rolb
add
rolb
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
adc
add
sbb
add
sub
add
cmp
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
lock
add
add
inc
rolb
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
mov
rolb
add
add
xchg
rolb
add
add
jl
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
fcom
add
loopne
add
in
rolb
add
roll
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
js
add
cwtl
roll
add
roll
add
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
adc
add
sbb
add
and
add
sub
add
xor
add
cmp
add
inc
aam
add
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
jo
add
js
add
mov
add
pushf
aam
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
