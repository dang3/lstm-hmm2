push
jmp
pop
pushw
jmp
pop
popw
jmp
pop
add
pushf
jmp
pop
sub
push
shl
data16
pop
sub
loop
jle
adc
mov
push
push
mov
dec
pop
imul
and
mov
imul
movsl
shr
mov
mov
xor
xchg
dec
and
imul
movsb
shrb
cltd
les
aad
pop
out
imul
or
sub
cmp
mov
pop
pop
push
pop
sub
test
jmp
lock
sub
pop
jae
dec
movsl
shrb
add
xchg
dec
movsl
shrb
dec
movsl
push
push
dec
sub
les
jo
movsl
sub
xchg
dec
dec
insb
xchg
dec
movsl
scas
outsb
dec
rcl
stos
xor
movsl
fwait
sbb
cltd
js
cmpsl
testb
cmpsb
mov
add
xchg
cs
pusha
mov
loop
pop
cld
movsl
mov
xchg
push
jno
cmpsl
pushf
pop
and
dec
jecxz
sbb
sarl
shl
push
shrl
push
dec
lea
out
xchg
out
sahf
dec
lock
test
sahf
aad
sbb
pop
sbb
sarl
dec
push
pop
das
mov
push
shrb
pop
out
sbb
rcl
mov
mov
push
dec
movsl
shrb
and
sbb
or
lret
or
xchg
rorl
mov
sub
push
loopne
imul
pop
xchg
shl
push
pop
push
pop
movsb
pop
xlat
xchg
ss
push
mov
fisubs
stos
mov
sub
mov
sbb
test
sub
jecxz
int
xorl
pop
dec
lret
movsl
rolb
mov
movsl
push
sbb
xor
movsb
mov
push
dec
mov
aas
fisttps
xchg
dec
movsl
jmp
dec
das
xor
shlb
push
pop
cmpsb
lret
mov
test
out
dec
stc
int
aas
pop
aaa
xchg
push
pop
lea
sub
push
dec
mov
pop
adc
imul
adc
aas
mov
mov
sub
pop
mov
mov
hlt
push
cmpsb
out
inc
repnz
lods
shl
xchg
adc
jmp
nop
push
pop
pushf
jb
mulb
pop
jb
adc
push
lea
jecxz
cli
mov
mov
cmp
sbb
pop
cmpl
out
call
dec
xchg
sub
and
sub
lcall
repz
sbb
movsl
rolb
popa
cs
cltd
add
mov
dec
cli
mov
xor
fcos
push
inc
and
sbb
add
and
bound
mov
leave
adc
sub
mov
in
add
sub
xchg
aas
out
mov
test
xchg
shl
loop
push
jp
and
cmpsl
jp
sahf
sub
fwait
sbb
or
test
sub
sarl
loop
outsb
push
push
and
bound
filds
mov
sub
mov
pop
sub
xchg
mov
push
das
mov
ljmp
dec
mov
mov
xchg
popa
outsb
fisubrs
dec
ret
out
xchg
and
push
loop
mov
leave
loope
cmpsb
test
lods
push
stos
stos
mov
pop
not
notl
and
pushf
jmp
pop
popl
jmp
pop
pop
shr
push
pushf
jmp
pop
pushl
jmp
pop
pop
pop
shrd
push
pushf
jmp
mov
push
jmp
pop
movzbw
push
jmp
movzbl
xor
rol
inc
xor
neg
xor
xor
push
inc
jmp
mov
add
xor
rol
inc
xor
neg
xor
xor
cbtw
cwtl
push
jmp
notl
pop
and
pushf
jmp
pop
pop
mov
jmp
pop
popl
jmp
pop
popw
jmp
pop
pop
mov
jmp
movzbl
lea
xor
sub
ror
xor
rol
xor
mov
push
jmp
pop
pushl
jmp
pop
pop
shl
push
pushf
jmp
pop
jmp
and
pushl
jmp
pop
popl
jmp
movzbl
sub
dec
xor
rol
add
rol
not
ror
sub
inc
popw
jmp
pop
mov
jmp
pop
jmp
movzbl
xor
sub
ror
xor
rol
xor
pop
inc
mov
jmp
pop
pop
pop
shld
push
pushf
jmp
pop
pop
shl
push
pushf
jmp
push
jmp
pop
pop
not
not
and
push
pushf
jmp
pop
pop
pop
pop
pop
pop
popf
pop
pop
pop
ret
pop
pop
shr
push
pushf
jmp
repz
adc
out
adc
in
adc
in
adc
out
adc
adc
adc
in
adc
out
adc
loope
adc
or
repz
adc
loope
adc
out
adc
out
adc
in
adc
or
sub
or
adc
or
repz
adc
loopne
adc
out
adc
in
adc
or
scas
out
adc
in
adc
adc
adc
out
adc
in
adc
loope
adc
out
adc
in
adc
adc
adc
or
insl
loopne
adc
in
adc
out
adc
add
repz
adc
or
inc
loope
adc
loopne
adc
in
adc
out
adc
in
adc
loopne
adc
out
adc
in
adc
add
push
adc
adc
or
repz
adc
in
adc
adc
adc
loope
adc
adc
adc
out
adc
out
adc
loopne
adc
in
adc
adc
loopne
adc
out
adc
in
adc
adc
out
adc
or
mov
or
inc
loopne
adc
out
adc
out
adc
loopne
adc
or
call
loope
adc
or
and
out
adc
loopne
adc
out
adc
out
adc
or
mul
or
or
dec
out
adc
or
or
push
adc
adc
loope
adc
out
adc
or
dec
loope
adc
in
adc
out
adc
or
insl
loope
adc
loope
adc
out
adc
loope
adc
loopne
adc
loopne
adc
in
adc
out
adc
out
adc
loope
adc
add
cmp
or
mov
or
ja
or
fsub
or
cmp
or
int
or
or
add
fsub
or
cmp
or
adc
or
test
or
cmc
loopne
adc
loope
adc
out
adc
or
fs
adc
loope
adc
out
adc
loopne
adc
loope
adc
out
adc
loope
adc
loope
adc
loopne
adc
loope
adc
loope
adc
or
inc
loopne
adc
loopne
adc
loope
adc
or
insl
loopne
adc
loope
adc
adc
adc
loope
adc
loope
adc
loope
adc
loope
adc
out
adc
loope
adc
loope
adc
out
adc
loope
adc
loopne
adc
adc
loope
adc
out
adc
loopne
adc
loope
adc
or
mov
or
jnp
or
cmp
or
or
add
inc
loopne
adc
or
or
add
scas
out
adc
loope
adc
in
adc
loopne
adc
out
adc
or
cmpsb
loope
adc
loope
adc
out
adc
or
mov
or
call
loopne
adc
or
ja
or
cwtl
loope
adc
loope
adc
or
pushf
out
adc
loope
adc
or
inc
loopne
adc
or
mov
loopne
adc
or
mov
or
scas
loopne
adc
loopne
adc
out
adc
adc
loope
adc
loope
adc
or
lret
loopne
adc
loope
adc
out
adc
loopne
adc
loopne
adc
or
add
or
and
loope
adc
out
adc
loopne
adc
in
adc
loopne
adc
loope
adc
out
adc
adc
adc
adc
adc
loope
adc
adc
or
pop
out
adc
loopne
adc
movzbw
push
jmp
and
popl
jmp
pop
pushw
jmp
mov
sub
xor
sub
xchg
add
sub
add
cwtl
push
jmp
mov
lea
sub
dec
xor
rol
add
rol
not
ror
sub
pushw
jmp
mov
add
dec
bswap
neg
not
dec
add
add
push
jmp
push
push
push
pushf
push
push
push
push
push
push
mov
mov
mov
add
mov
xor
dec
not
rol
xor
dec
xor
movzbl
lea
pushl
ret
pop
add
pushf
jmp
pushw
jmp
mov
sub
xor
sub
xchg
add
sub
lea
push
jmp
pop
pop
imul
push
push
pushf
jmp
pop
pop
shl
push
pushf
jmp
pop
pop
mul
push
pushf
jmp
pop
mov
jmp
pop
mov
jmp
pop
add
pushf
jmp
pop
pop
mov
jmp
pop
pop
shr
push
pushf
jmp
sbb
sub
cs
or
cltd
xchg
inc
lods
dec
scas
pop
notb
adc
mov
gs
movsb
orl
imul
pushf
mov
dec
adc
jo
jge
daa
mov
mov
and
fs
add
mov
rcrl
push
push
clts
in
cmpsl
scas
xor
inc
mov
cs
sbb
popa
add
dec
aaa
insl
stos
cmp
jo
jge
aad
mov
in
xchg
sub
or
xlat
adc
loope
lret
pop
push
pop
outsl
dec
adc
jge
xor
cld
push
sbb
out
stos
xchg
in
jecxz
lock
mov
push
rcll
es
cmp
sti
push
lcall
dec
rorb
mov
cmc
int3
mov
in
aam
xor
arpl
mov
add
add
cmp
adc
stos
cvtpi2ps
loop
rcll
leave
inc
ret
divb
jnp
lahf
jnp
es
mov
inc
inc
loope
sti
mov
mov
pop
fldl
fstpl
clc
pusha
xor
je
mov
dec
mov
std
ficompl
aas
dec
cltd
cmp
mov
pop
mov
test
cld
mov
sbb
repnz
stos
lock
lods
stos
pop
js
sub
sub
jne
js
andb
add
cmpsb
dec
mov
fiadds
cld
sahf
jg
imulb
sbb
pop
mov
adcb
cwtl
daa
xor
out
sbbb
xor
lret
cmp
dec
addr16
scas
lret
gs
dec
mov
and
xor
adc
sahf
jmp
aad
jp
pushf
sbb
push
jp
adc
test
inc
push
mov
mov
cs
sbb
lret
pop
ret
call
or
pop
leave
xchg
push
mov
or
xchg
xchg
xor
sub
and
pop
sub
jle
ja
out
cmp
push
pop
hlt
xor
stos
gs
mov
mov
xchg
add
add
adcl
and
repnz
mov
mov
insl
sub
xlat
jmp
mov
fdiv
loope
iret
and
jge
call
and
sub
into
push
dec
cld
in
dec
push
xchg
push
subb
aas
test
xchg
fdivs
es
or
imul
mov
push
loopne
pop
and
int3
xlat
pushf
pop
mov
rorb
cmpsl
push
sub
mov
lds
mov
push
jl
push
psllq
or
push
mov
lods
sbbl
jmp
fwait
mov
push
mov
push
jle
fadds
xchg
lods
jg
incl
andb
test
ret
stos
cmc
xor
in
stos
ret
sbb
and
inc
addr16
cmp
xchg
les
and
fwait
aad
ljmp
push
xchg
fidivl
push
rcrb
je
inc
insb
cmp
je
aaa
pop
push
popa
push
inc
push
les
pusha
mov
enter
adc
mov
or
mov
and
arpl
sbb
inc
cmpsl
dec
dec
dec
or
icebp
mov
mov
lods
test
in
lret
inc
jne
pop
sub
dec
mov
dec
mov
mov
mov
pop
xchg
call
add
mov
mov
divl
adc
sub
add
sub
mov
repnz
fsubrl
cmp
test
movsl
lea
lods
orl
shl
jo
in
push
cwtl
jmp
fstps
xchg
push
fs
test
jns
inc
inc
pop
jecxz
std
mov
out
mov
add
sub
cmp
push
dec
imul
je
mov
adc
ljmp
ret
ds
imul
ret
add
stc
add
fs
insl
enter
pop
jge
jnp
sti
je
or
stc
nop
add
pop
repnz
movsl
push
pop
aad
push
arpl
inc
xchg
xor
xchg
pop
lods
sbb
mov
icebp
mov
lret
loop
call
hlt
ljmp
xor
push
push
xor
mov
daa
or
cmp
mov
push
adc
movsl
lds
mov
icebp
jnp
inc
shlb
inc
ljmp
sbb
cmp
xor
adc
loop
sarl
sub
sbb
inc
nop
cli
mov
adc
shl
pop
imul
xor
mov
lods
icebp
fsubrs
into
jmp
add
repnz
push
xchg
popa
xchg
loop
mov
cmp
call
pop
xchg
cmp
push
xor
mov
aas
mov
cmpsb
sub
adc
lcall
jmp
adc
iret
stc
jmp
in
or
jmp
pop
out
push
jmp
hlt
lret
