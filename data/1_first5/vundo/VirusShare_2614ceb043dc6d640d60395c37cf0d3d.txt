jb
add
dec
add
outsb
add
dec
add
add
insb
add
add
je
add
add
jb
popa
add
add
outsb
add
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
popa
add
add
outsb
add
add
je
imul
push
add
je
insb
add
add
dec
add
je
push
add
popa
add
imul
add
add
add
jne
je
je
outsl
add
inc
add
add
jb
outsb
add
je
add
popa
add
add
add
outsb
add
outsl
add
imul
outsl
add
add
add
dec
add
data16
push
add
js
je
add
add
inc
add
je
je
outsl
add
dec
add
add
je
add
inc
add
je
je
outsl
add
inc
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
dec
add
insb
add
add
je
add
dec
add
popa
add
je
imul
push
add
je
insb
add
push
add
js
je
add
inc
add
je
je
outsl
add
push
add
js
je
add
add
inc
add
popa
add
push
add
js
je
add
add
inc
add
je
je
outsl
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
inc
add
arpl
add
add
add
imul
add
je
push
add
js
je
add
dec
add
insb
add
add
je
add
inc
add
jo
push
add
jb
imul
add
popa
add
add
add
add
outsb
add
add
mov
mov
or
add
add
or
add
add
add
add
add
cmp
jo
xchg
add
add
add
add
jle
into
add
adc
sub
stos
add
add
add
add
and
add
add
add
add
add
add
add
jge
cld
add
outsb
add
add
add
add
mov
cld
add
dec
add
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
les
xchg
add
add
add
add
dec
add
into
add
je
sbb
cld
add
dec
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
aaa
add
add
pushf
add
cld
add
dec
add
jl
daa
add
add
add
add
add
add
or
int3
add
add
add
add
test
pusha
add
add
add
adc
movsl
add
add
add
add
add
add
in
add
add
add
add
add
add
jae
int3
add
cld
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
addl
sbb
mov
fadds
in
add
add
add
add
add
add
rolb
add
add
add
add
add
add
add
add
add
add
add
xor
jge
into
add
xchg
add
add
add
add
add
add
add
xor
jo
into
add
jo
jge
jbe
sub
enter
into
add
add
add
add
adc
add
add
add
add
add
add
add
add
popa
add
add
add
add
roll
add
add
add
rolb
add
add
cmp
adc
add
add
or
dec
add
add
cld
add
add
add
add
ja
int3
add
into
add
add
add
add
add
cld
add
add
add
lahf
add
add
jge
outsb
add
add
add
xor
faddl
str
add
add
jle
pop
add
add
add
push
add
add
add
add
add
add
add
add
xor
lret
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
xor
stos
add
sahf
add
add
add
xor
pusha
add
outsb
add
add
add
add
add
add
add
add
add
in
add
add
add
jl
daa
add
add
add
jle
into
add
add
push
add
add
add
sub
add
add
add
add
into
add
testl
mov
into
add
add
add
add
add
pop
add
add
mov
cmp
imul
add
add
add
add
je
xchg
add
add
add
add
add
jmp
add
add
add
jb
add
cmp
adc
add
sahf
fildl
mov
mov
fistpl
dec
inc
push
push
sub
xor
jnp
fwait
andb
js
lods
adc
mov
ds
mov
or
xor
fwait
xor
or
lods
inc
fimull
outsl
mov
pop
fiadds
pop
and
jecxz
shr
inc
jnp
xchg
pop
test
js
cli
push
xchg
std
xchg
imul
sub
push
xlat
inc
push
mov
xor
cmp
lret
cmpsl
jno
mov
pop
mov
stos
push
xor
xchg
std
cmp
dec
sub
xor
inc
push
rcrb
cltd
adcl
scas
mov
mov
jnp
dec
sbbb
sub
mov
adc
test
mov
mulb
test
popa
xchg
mov
jb
lds
movsl
add
mov
repnz
lock
push
pop
in
cwtl
ss
cmp
sti
xor
stc
mov
push
jnp
jo
mov
mov
or
mov
jbe
inc
mov
lds
mov
sahf
xchg
or
insl
mov
popa
shlb
mov
sub
xor
sub
jp
js
stc
pop
jl
or
out
data16
sub
scas
stos
jmp
aam
pusha
jle
aas
dec
or
js
xor
dec
xchg
add
push
ud0
cs
out
and
popf
stc
inc
hlt
iret
adc
and
mov
cmp
mov
mov
push
mov
dec
and
pusha
outsb
inc
sti
pop
jg
sub
imul
insl
push
xchg
inc
test
sbb
ss
and
jle
mov
xchg
out
push
sbb
out
lods
mov
call
fnsave
ficomps
dec
pop
cmp
mov
mov
or
fidivs
cwtl
sub
fdivrs
repz
fnstsw
pop
xchg
sti
xchg
jno
ss
aaa
pop
mov
sarl
sub
add
mov
bnd
jno
mov
mov
lret
imul
outsb
lcall
fisttpll
jle
test
inc
push
dec
dec
mov
xchg
inc
in
mov
xor
loop
out
shll
inc
mov
jle
mov
and
add
pop
sbb
xchg
sub
mov
sbb
out
idivl
das
inc
test
xchg
sub
dec
pop
pop
clc
stos
fistl
jae
inc
cmp
aas
sbb
in
lret
add
arpl
add
add
add
add
add
add
add
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
push
mov
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
push
call
mov
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
push
cmp
pcmpgtb
push
pushf
jg
imul
push
movsb
aas
scas
cs
pop
cli
dec
add
outsb
iret
sahf
aas
mov
mov
jg
outsl
pop
out
popa
push
mov
cs
pop
rorl
jle
outsb
iret
sahf
cltd
mov
mov
dec
into
daa
push
out
jge
mov
dec
std
cmp
lods
add
repnz
push
jo
xchg
add
xor
push
xor
jg
push
daa
sub
in
lret
cmp
in
lret
imul
fildll
in
mov
icebp
push
addr16
mov
mov
push
xchg
sbbb
jbe
inc
iret
ficoml
fwait
adc
mov
shll
or
adc
or
or
mov
sahf
sbb
fisubrs
pop
push
lahf
out
ret
enter
mov
and
jmp
mov
outsb
sahf
out
mov
pushf
jnp
outsb
jg
jg
xchg
es
sti
mov
shlb
sub
xor
pushf
push
das
sub
in
fdivr
dec
dec
mov
stos
jg
outsl
movsl
shll
pmaxub
outsl
pop
out
fstpl
mov
cs
ret
dec
add
outsb
std
ljmp
arpl
sub
fists
dec
in
sub
sbb
lret
arpl
ss
jl
fisubs
inc
int
mov
cs
mov
arpl
pop
out
dec
push
mov
cs
pop
decl
jle
outsb
iret
sahf
aas
mov
mov
jg
outsl
pop
out
dec
push
mov
cs
pop
decl
jle
outsb
iret
sahf
aas
mov
cld
loope
sbb
in
sbb
add
movsb
xchg
les
jg
sub
popa
add
hlt
lock
gs
enter
add
mov
push
rcrl
enter
jg
push
icebp
stc
test
inc
or
add
mov
cmovns
sbb
mov
mov
fbstp
clc
shrl
lret
and
jb
andb
mov
and
dec
adc
clc
sbb
std
test
les
pop
leave
mov
icebp
dec
jp
out
push
inc
aaa
adc
mov
push
xor
and
std
mov
leave
add
rorb
fs
jge
cmc
int
add
nop
roll
mov
mov
popf
inc
jg
dec
lock
push
sub
mov
mov
mov
sbb
sub
pop
xor
lods
fiaddl
dec
js
movsb
jmp
stos
add
xor
xchg
jp
cld
jecxz
push
mov
push
test
daa
ljmp
dec
mov
and
lock
cld
cmp
mov
inc
movsl
mov
int3
stc
xor
adc
dec
mov
sarl
nop
push
push
sbb
fistpl
imul
mov
daa
push
xchg
ss
dec
ljmp
add
ret
outsl
xor
xchg
pop
xchg
xor
push
jmp
shll
int3
push
sub
test
mov
mov
push
cld
cltd
sub
mov
fnstenv
insb
std
lods
xor
sbb
call
test
mov
popl
push
loope
iret
mov
cwtl
jbe
movsl
mov
xchg
sbb
adc
and
xchg
rcl
mov
jg
out
insb
xchg
lret
stos
pop
push
sub
leave
iret
rorb
cmpsl
push
xchg
out
inc
lods
xorl
sub
lret
pushf
mov
mov
push
cmpsl
dec
jge
pop
pop
cmp
jns
mov
out
cmp
cmp
cmc
mov
dec
fsubr
jae
or
mov
jecxz
adc
push
mov
xchg
aas
sbb
dec
pop
push
xlat
inc
xor
outsl
je
pop
jmp
cmpsl
push
sbb
lret
mov
mov
repz
xor
sub
mov
xor
push
insl
dec
dec
es
push
fisubrs
mov
jbe
pop
inc
or
int
cmp
inc
dec
pop
imul
pop
inc
mov
mov
out
or
pushf
aad
stc
mov
out
std
lret
xchg
jp
mov
pop
shr
fwait
movsl
aad
jno
cmp
int
jnp
jge
fisubrl
repz
mov
jl
loopne
sbb
or
sbb
aaa
lea
jne
push
jbe
repz
and
lods
cmp
sbb
sbb
and
mov
sahf
fs
loop
imul
inc
imul
loopne
inc
xlat
sti
pop
outsb
cld
xor
popf
movsl
pushf
push
push
dec
fnstenv
hlt
flds
bound
aas
cmp
adc
mov
push
arpl
jnp
daa
add
test
enter
imull
sbb
lods
mov
mov
cli
pop
scas
pop
push
push
call
mov
mov
sub
test
lea
fsubrs
xor
push
push
sbb
mov
mov
adc
fisttpl
or
and
push
iret
ret
mov
mov
pop
mov
sub
mov
sub
mov
mov
loop
inc
pop
sub
adc
lea
movsb
test
je
xor
test
in
std
test
and
aam
mov
iret
dec
xchg
add
aad
adc
ds
sbb
pop
imul
sub
push
test
test
jg
jecxz
jg
pop
int3
pop
mov
mov
incb
decb
mov
ljmp
subl
jg
mov
mov
in
push
pop
sbb
fcmovb
xchg
jp
es
test
ss
cli
inc
call
dec
inc
stos
in
out
addl
lahf
pop
cmpsl
push
push
pop
xchg
fsub
ret
in
nop
mov
xor
scas
mov
sbb
and
adc
addr16
xor
mov
sbb
rorl
call
dec
jmp
cmp
sub
inc
dec
jecxz
addb
mov
fsts
ljmp
movsb
pop
mov
test
or
mov
stos
and
int3
pop
pop
mov
loopne
mov
mov
nop
xchg
push
out
push
roll
daa
fwait
rcl
test
fdiv
push
loopne
add
dec
call
and
mov
push
adc
mov
pop
loop
xchg
push
icebp
add
or
outsb
pop
je
sti
lcall
dec
les
mov
subb
jmp
mov
pop
add
mov
xchg
jb
out
rcl
mov
dec
and
cltd
dec
mov
test
xor
or
fnsave
adc
repnz
adc
pop
call
mov
mov
xchg
pop
pop
or
sbb
pop
in
cmp
mov
arpl
arpl
std
pop
sarb
subl
sub
rcll
xlat
int
decb
ss
insb
pop
fdivr
sarl
mov
ror
inc
mov
mov
rcrb
sbb
sbb
andb
jg
inc
mov
cmp
jecxz
ret
dec
pop
stos
cs
ret
mov
push
cvtps2pd
das
cld
and
in
xor
rcrb
data16
mov
lret
push
dec
insl
stc
jo
es
mov
adc
ret
aam
js
dec
pusha
movsl
and
jecxz
mov
out
ja
adc
loop
pop
imul
mov
pop
subl
call
mov
jge
outsb
inc
sub
jl
clc
out
insl
jge
adc
jecxz
push
cs
mov
xchg
aam
imul
pop
adc
test
mov
mov
pop
icebp
lods
dec
dec
aam
and
out
or
sbb
xchg
xchg
add
sbbb
lods
loopne
mov
dec
mov
mov
ficompl
aas
jp
lret
ret
je
xor
idivl
repnz
cmpsl
jge
iret
subl
stos
ss
sbb
push
sti
push
add
pop
lock
outsb
jo
sahf
ficoml
inc
cld
and
adc
jl
or
xor
ret
pop
or
sub
push
out
gs
icebp
ja
jg
jp
jbe
aaa
add
mov
mov
push
fdivrp
sbb
lcall
push
xchg
sub
mov
mov
mov
jg
mov
shll
sub
or
test
fisttps
imul
jle
jmp
push
sbb
inc
loope
movsl
jl
rcr
xchg
push
or
ret
lahf
jg
movsb
inc
pop
jl
mov
cmp
jno
ja
pushf
push
and
push
sub
mov
add
add
stc
ss
dec
and
mov
pop
or
int
sub
in
push
adc
cli
lods
mov
cmp
and
pop
lea
dec
andb
es
shl
cwtl
addr16
inc
movsl
xchg
or
in
xchg
dec
popa
pop
push
pushf
pop
inc
in
pop
outsl
xchg
or
xchg
into
push
cli
adc
sub
subb
hlt
and
out
loop
insb
or
xchg
outsl
ret
sbb
or
icebp
xlat
mov
pop
mov
arpl
cmp
mov
scas
or
mov
jle
dec
testb
fists
jg
outsb
sbb
daa
push
add
adc
sub
sti
push
inc
push
mov
sub
int3
pop
sbb
mov
in
addr16
jnp
rolb
movsb
test
xor
mov
loop
pop
cmp
test
idivl
jle
xor
lock
xlat
ret
in
fstps
shld
fnstcw
loopne
out
popa
jge
sarb
jg
idivl
js
dec
in
lret
shld
lods
cmpsl
and
push
cmp
stos
xchg
dec
inc
adcb
rcrb
lods
mov
sahf
fisttps
ja
sbb
in
sti
xor
pop
scas
jb
push
fstpl
cmp
mov
addr16
and
add
push
add
adc
int3
push
xchg
mov
popf
lods
loope
dec
stos
scas
lcall
sub
aad
dec
inc
dec
xchg
lret
out
jp
jg
push
lods
pop
add
call
pop
imul
adc
sub
or
and
test
dec
and
pop
push
dec
sub
dec
cmp
pop
or
mov
sub
pop
insl
adc
pop
cmp
rcr
sub
xchg
jecxz
aas
dec
ret
aam
jmp
push
cmp
stos
out
and
cmpl
aaa
fisttpl
dec
lods
sarb
push
div
add
push
push
mov
mov
iret
push
stos
in
aam
push
dec
mov
leave
mov
adc
aas
push
inc
fmull
stos
sub
and
pop
in
push
mov
jg
jmp
out
nop
inc
out
icebp
dec
inc
fildl
dec
addr16
fiadds
push
psraw
insb
jp
pop
fdivrl
mov
imul
adcl
xorb
loope
xor
in
push
into
sarb
xchg
inc
jecxz
frstor
mov
mov
pusha
jg
adc
ljmp
inc
hlt
cmp
div
xor
jecxz
jno
out
jnp
push
cmp
jne
push
sti
mov
out
add
leave
popf
cmc
mov
rolb
adc
cmp
push
inc
jnp
mov
nop
ja
xchg
pop
es
movsb
adc
jle
jmp
roll
scas
aad
xor
xchg
xchg
test
xor
rcll
cmp
fcompl
add
arpl
addr16
push
push
lret
jge
inc
cmpsb
int3
xor
pop
xchg
inc
cli
and
pop
hlt
pop
popf
add
aam
jl
idivb
sbb
call
test
call
fiaddl
sahf
add
imul
pop
fisttpll
aas
xor
andl
std
jge
mov
lcall
test
push
mov
sub
shll
andl
test
cltd
adc
mov
ds
cmp
mov
scas
adc
sti
loop
ds
or
lods
out
lods
xor
inc
scas
cs
fdivrp
and
and
add
in
stos
shrb
mov
jnp
mov
inc
popf
cmp
mov
aam
lock
sub
test
repz
rolb
mov
mov
jl
jle
cld
pop
std
pop
inc
sbb
je
ret
shrl
ja
test
dec
test
xlat
adc
in
movsb
push
jge
sub
ja
dec
int
dec
cmp
das
cmp
bnd
cmp
adc
mov
pop
repnz
lea
cmp
push
add
adc
fbld
add
ja
repnz
dec
adc
mov
xor
adc
push
inc
jne
sub
pop
sti
mov
jecxz
pop
cwtl
jp
xchg
jge
fstps
and
cs
lret
pop
sbb
hlt
or
negb
mov
inc
and
cmp
mov
repnz
dec
sub
xchg
fcmovnb
stos
adcl
add
rcl
in
mov
xorl
imul
ljmp
mov
insb
out
inc
mov
ret
outsl
add
xchg
sbb
je
mov
mov
lods
cmp
sub
sub
mov
push
movb
mov
clc
mov
pushl
lock
lret
mov
test
add
mov
outsl
inc
addr16
test
repz
adc
jmp
jle
je
imul
xlat
fld
xor
test
xchg
inc
inc
jbe
icebp
hlt
sub
xchg
int
notl
adc
pushf
clc
push
push
enter
xor
or
cmp
cmp
lret
adc
or
cltd
shlb
roll
pop
mov
inc
imul
cli
rcr
lock
sub
push
xor
notb
push
cmp
arpl
pop
or
and
ljmp
rcr
mov
push
xor
adc
and
sub
popa
insl
mov
inc
cli
in
cmp
xchg
pop
ds
lret
sbb
enter
jb
hlt
clc
lcall
mov
push
mov
icebp
adc
push
loop
pop
xchg
pop
fcomi
xchg
inc
inc
inc
xchg
jmp
aas
add
into
jecxz
add
push
and
fistpl
pop
out
xchg
loopne
imulb
stos
and
xlat
and
pop
dec
movsl
clc
mov
shrb
or
inc
insb
outsb
cmp
imul
mov
add
jb
sbb
inc
push
pusha
sbb
mov
testb
inc
mov
pushf
sub
cmp
in
lcall
sbb
xchg
lds
ja
sbb
sub
daa
cmp
adc
mov
iret
cmp
test
idivl
pop
ret
fcompl
aaa
jne
jl
or
add
push
jns
jne
jb
jae
push
mov
sub
inc
divb
cld
push
ljmp
xchg
cmp
pusha
fcmovb
sbb
je
cmp
mov
mov
sub
std
sbb
jae
cmp
and
and
adc
push
aaa
test
pusha
mov
mov
sub
leave
enter
faddp
xchg
lock
mov
xlat
adcb
add
inc
fldl
or
out
dec
xchg
and
mov
cmp
imul
push
adc
push
cwtl
out
inc
sbb
aam
fmull
mov
popf
mov
nop
and
test
cwtl
sarb
mov
mov
outsl
pusha
int3
xor
push
rorl
or
ret
xor
dec
nop
xchg
insb
js
stc
mov
adc
fmull
push
stos
mov
popf
aam
dec
add
test
sub
leave
imull
cs
mov
insb
neg
pop
dec
pushf
aas
cmp
jae
addr16
mov
mov
lcall
loop
sbbl
leave
imul
test
fbld
dec
int
repnz
sbb
jmp
mov
stos
loope
and
inc
inc
dec
mov
in
mov
mov
dec
dec
and
imul
inc
test
inc
sti
add
or
loopne
imul
int3
pop
stc
jg
into
mov
jbe
pusha
ret
test
jnp
push
mov
cli
jge
aad
into
mov
into
add
mov
nop
lret
pop
adc
mov
push
cld
cwtl
test
or
fildl
movsb
pop
fisubrl
lods
aam
or
sub
cmp
dec
add
mov
popf
cmc
sbb
or
jns
mov
idiv
loop
aaa
dec
sbb
and
sahf
and
movsb
sbb
cmp
addr16
test
mov
cmp
inc
mov
mov
jo
mov
out
addr16
add
pop
fadds
sbb
sub
shll
push
push
repz
test
lods
outsl
lds
nop
jae
mov
lea
xchg
arpl
pop
pop
sub
ljmp
scas
stc
and
lods
std
lock
not
mov
pop
aam
push
jns,pn
jecxz
ret
int
orl
jns
je
xchg
push
stos
inc
dec
mov
int3
mov
test
sbb
testb
fwait
lods
dec
mov
push
daa
movsl
inc
mov
push
mov
cmp
hlt
mov
mov
jae
inc
xchg
cmc
mov
jp
mov
cs
or
lods
and
jbe
mov
jmp
xlat
loop
jns
stos
cmp
pop
or
xchg
inc
aaa
lret
lret
cmp
sub
mov
ficomps
rorb
inc
mov
mov
pushf
mov
movsl
lods
jecxz
push
or
popa
testl
lcall
lods
dec
jle
in
pop
or
stc
icebp
out
dec
sbb
pop
out
mov
xchg
ja
xor
daa
les
fsubl
call
or
fucom
mov
jge
daa
lret
xchg
sub
sahf
test
sbb
sub
repz
lret
push
xor
ljmp
jno
fbld
sbb
dec
cld
flds
cmpb
subb
sarb
test
cmp
jo
sbb
jmp
cld
jbe
mov
xchg
mov
popa
sbb
bound
fst
mov
push
inc
loopne
cmpsb
ds
pop
sub
push
std
add
mov
sub
adc
and
sti
shll
shl
repnz
dec
mov
or
jb
js
testl
jp
push
sub
sbb
push
pop
jb
hlt
nop
pop
fwait
jb
jecxz
lock
mov
push
or
in
bound
in
movsb
mov
xor
call
jne
decl
adc
sahf
or
xchg
dec
imul
addr16
je
fsubrp
lea
push
adc
and
mov
test
shll
pushf
cmpsl
ss
nop
jge
lods
pusha
loope
testl
xchg
xchg
cmp
xchg
push
imul
rclb
loop
mov
mov
aam
shll
stos
adc
lock
movsl
sahf
call
xor
or
popf
aad
mov
dec
push
paddw
mov
test
pop
push
adc
fdivr
lds
test
xchg
mov
lds
ss
bound
pop
test
xchg
or
mov
repnz
dec
cli
push
bound
jbe
cmpl
jns
pop
int
out
in
push
inc
daa
jb
arpl
imul
xchg
sub
out
in
jns
fimuls
cmp
mov
push
shlb
jbe
or
test
mov
loop
sar
jge
fisubs
xor
cltd
stos
push
iret
stos
sub
dec
jg
cmp
aam
iret
mov
jbe
das
pop
mov
loop
cli
enter
into
ljmp
and
scas
in
pop
jbe
mov
sub
cltd
stc
inc
sahf
xchg
pop
les
xchg
and
sub
sub
fidivrs
xor
lret
out
cvttps2pi
lahf
inc
gs
push
pushl
mov
nop
aas
fldt
mov
or
fdivrs
mov
ret
jl
imul
sub
jmp
mov
adc
fcmovne
nop
cmpsb
or
int
arpl
mov
jl
or
mov
shll
pop
or
push
pop
test
imul
insb
cmp
mov
mov
mov
xchg
pop
adc
scas
loop
mov
movsb
ret
dec
push
dec
jb
cmc
outsb
sbb
sub
dec
movsb
inc
jmp
repz
movsb
xor
ss
clc
test
cmp
xchg
mov
dec
push
sbb
mov
xor
xor
push
dec
jecxz
xchg
jbe
in
or
add
ja
or
scas
popa
inc
aaa
jecxz
shlb
shlb
jo
xchg
stos
and
hlt
mov
cmp
xor
pop
hlt
push
div
cmp
dec
xchg
bound
stc
add
add
ret
enter
mov
or
in
push
es
xchg
adc
lock
xchg
dec
xlat
push
roll
std
lret
xchg
mov
xor
lods
stc
cmp
cmp
xor
jge
push
xchg
call
pop
add
cs
test
or
jno
call
repz
push
stos
cmpsb
imull
pop
and
leave
jp
push
in
nop
pop
cs
cmc
xor
adc
fcomip
adc
mov
shll
loopne
clc
or
push
mov
out
inc
repnz
sub
hlt
inc
movsb
inc
and
int3
mov
jne
iret
das
in
cmp
ficomps
ret
and
icebp
cmp
cmc
das
and
leave
iret
fcompp
jns
xor
outsl
lds
rclb
cmpsl
out
xchg
push
push
pushf
and
rolb
jge
cli
aam
leave
pop
jge
insl
loope
xchg
or
in
mov
push
aam
je
bound
jp
scas
adc
adc
leave
daa
dec
cmp
sbb
inc
in
ds
xchg
idivb
push
push
dec
jp
lds
mov
int3
and
jp
in
popf
movsb
mov
mov
fnstcw
fwait
scas
pop
adc
pop
xchg
dec
pop
adc
scas
shrl
mov
inc
pop
xchg
aas
mov
repz
out
jbe
scas
pmaxub
outsl
pop
out
dec
push
mov
cs
pop
decl
jle
outsb
iret
sahf
aas
mov
mov
jg
outsl
pop
out
dec
push
mov
cs
pop
decl
jle
outsb
iret
sahf
cmp
or
jg
add
pop
out
dec
push
mov
xchg
dec
out
jle
outsl
sub
sti
scas
dec
fidivrs
outsl
fucomip
push
inc
push
add
sub
xchg
mov
out
or
inc
sub
jns
es
arpl
cwtl
out
test
stos
mov
cmpsb
enter
call
push
cmp
ss
es
push
js
push
mov
mov
xchg
jbe
data16
inc
xor
inc
es
push
pusha
push
jb
jnp
mov
int
test
cltd
lds
aas
sbb
and
mov
xchg
popf
out
test
push
mov
mov
sbb
mov
inc
fimull
mov
aam
shll
loopne
sbb
pusha
pop
test
test
pop
mov
xchg
clc
js
mov
in
sahf
addr16
dec
push
or
test
sbb
lods
sub
repz
inc
call
and
sbb
js
mov
and
test
ja
pop
loopne
dec
mov
aaa
xchg
jb
orb
jle
lea
mov
sub
imul
std
dec
test
mov
inc
jbe
xchg
pop
mov
pop
call
into
out
jmp
cltd
mov
mov
clc
sub
popw
push
sub
ss
es
push
popa
push
jno
and
mov
cmpsb
fists
jge
or
cmp
sub
outsl
es
inc
add
mov
stos
shll
rolb
push
dec
and
push
sbb
add
loope
jmp
shrl
xchg
aas
pop
inc
pop
ss
dec
push
js
push
mov
cmpsb
enter
call
push
cmp
ss
es
push
js
push
mov
cmpsb
enter
call
in
sbb
in
gs
arpl
pop
adc
jge
or
and
xchg
xor
xchg
jmp
loopne
lock
lods
test
push
fwait
mov
iret
dec
clc
mov
dec
fmuls
ds
and
mov
xchg
es
mov
aas
aam
arpl
lahf
popa
fimuls
add
std
mov
nop
inc
imul
pop
mov
jo
cwtl
inc
cmp
xor
sub
mov
pop
addr16
repnz
pop
mov
cmpl
addl
pop
sti
inc
push
jae
cmp
cmpsl
mov
popf
mov
cwtl
insb
adc
push
pop
pop
cmp
push
cmc
xor
lcall
stos
mov
sub
pop
cmc
jle
push
cmpb
xchg
inc
nop
push
cmpsl
sub
sub
out
jae
lea
dec
dec
test
cmp
pop
jns
sbb
movsb
pop
xchg
mov
push
sub
sub
mov
adc
insl
movsl
inc
lahf
jae
xchg
fisubs
mov
cmp
in
lret
pop
sbb
nop
popa
filds
inc
fnstsw
xor
sti
xchg
pop
adc
mov
sub
fsubs
cwtl
test
mov
aam
inc
pop
push
xchg
idivb
outsb
aam
mov
inc
inc
xchg
nop
aad
or
pop
or
popf
dec
sub
hlt
or
pop
fmulp
adc
xor
scas
loop
ret
xchg
inc
mov
lock
jmp
stc
in
ss
fistpll
inc
fiadds
adc
sbb
pusha
lods
jnp
lahf
inc
or
or
repz
mov
xchg
push
mov
inc
cmp
xor
add
test
outsb
cmp
pusha
xchg
fnstsw
or
mov
negl
cmp
xchg
sub
fisubrl
sub
pop
orb
or
xchg
in
push
sub
pop
and
fiaddl
rcrb
mov
sete
adcl
xor
xlat
sbb
mov
mov
popf
add
mov
mov
sbb
pop
fst
add
sub
js
cmpsb
lcall
lods
dec
ficoms
popa
repz
cmpl
popf
daa
lcall
xchg
icebp
daa
and
ja
inc
int
fildl
dec
rcl
dec
test
and
mov
pop
fcmovu
arpl
movsb
sbb
test
mov
cmpsb
mov
cmp
jmp
push
mov
push
jae
push
inc
mov
nop
test
push
int3
stc
aaa
sbb
imul
scas
jno
sub
and
push
sbb
xchg
loopne
mov
and
cmp
cmpsb
outsb
xchg
and
push
shl
rorl
push
mov
pop
ljmp
outsl
addr16
mov
mov
jnp
mov
mov
imul
inc
ss
or
repz
push
mov
fimuls
inc
sub
xchg
flds
imul
adc
ret
pushf
adc
sbb
fnstcw
das
sub
fisubl
jns
idivb
adc
or
xchg
daa
imul
jo
jnp
pop
xor
insl
push
inc
xchg
dec
adc
scas
or
out
vprotw
int3
sub
sbb
shrb
test
sbb
loope
push
dec
mov
adc
fnstsw
fucom
jge
lret
mov
psllw
hlt
or
mov
add
jmp
daa
aaa
xor
mov
mov
push
jnp
orb
test
js
sbb
movsl
leave
aas
fs
xor
aam
aam
and
cwtl
ds
cmpb
outsl
add
jbe
pushf
mov
mov
sbb
sahf
sti
rcrl
int
into
and
xor
shrd
xor
addl
dec
xor
popa
pop
mov
cmpsb
mov
jbe
pop
jnp
add
movsl
fstpt
popa
lods
lret
in
lret
daa
inc
lock
adc
ljmp
int
ret
adc
mov
icebp
addr16
pop
mov
cmp
add
iret
push
inc
adc
jb
cmpsl
aaa
rorb
mov
push
sbb
add
rcr
fs
pop
sbb
mov
sub
xor
sbb
std
test
jecxz
push
rorb
jecxz
shrb
daa
xor
dec
push
mov
and
aaa
sub
xor
push
jns
repz
jl
stos
sbb
pop
and
jbe
dec
aas
test
mov
jbe
pop
int
pop
jle
ret
clc
sbb
jae
mov
mov
fwait
scas
push
in
nop
pop
lods
or
inc
inc
fidivrl
in
imul
daa
xchg
push
jecxz
cld
xor
xchg
push
mov
adc
push
mov
call
aas
xchg
gs
pop
or
fs
inc
mov
cmpsl
push
add
stos
xor
dec
ljmp
leave
pop
push
sahf
xor
lock
rcrl
dec
icebp
or
addr16
fs
fbld
test
push
data16
cmpsl
push
scas
lret
pop
add
mov
push
les
popa
xchg
lods
jle
inc
and
int
sti
cwtl
lods
or
scas
sub
gs
fsubrp
mov
popa
sbb
daa
out
addl
cmp
and
jp
mov
loopne
fiadds
pop
mov
pop
xchg
insb
arpl
jmp
inc
cli
dec
push
add
xor
push
orl
mov
insb
dec
jns
in
xchg
sub
xor
mov
mov
aaa
add
fwait
or
dec
icebp
test
mov
insb
es
mov
adc
inc
pop
mov
fsubrs
xchg
sbb
inc
int
mov
sub
nop
adc
lret
or
in
mov
arpl
ds
mov
pusha
cmp
in
jmp
add
jge
adc
push
mov
lret
fcoml
std
addr16
imul
cli
sbb
es
mov
xchg
jns
or
subl
mov
mov
sub
jp
cmc
pop
mov
lock
std
lods
push
iret
fdivs
stc
pop
push
jnp
ss
shrl
scas
das
sbb
fs
popf
stos
ljmp
pop
lock
js
lret
repz
pop
jb
icebp
aam
sub
in
insl
movsb
and
xor
add
cwtl
fsts
add
dec
push
xchg
in
shlb
pop
dec
sub
in
fimull
cwtl
scas
stc
or
sahf
fsub
and
pop
pop
stos
jno
jne
leave
or
push
mov
and
pop
clc
push
fmull
mov
dec
sahf
and
sub
frstor
or
out
bound
cmp
int3
sarl
jg
jle
lods
jmp
inc
jp
xchg
ret
es
fcomp
cmpb
fimuls
lock
pusha
fucomp
mov
sarl
es
pop
int
cmp
sbb
jle
lcall
inc
scas
pop
sbb
out
les
or
xor
addr16
arpl
pop
jb
pusha
std
pushf
mov
mov
lea
jb
xor
fildl
mov
test
int3
fwait
and
pop
xchg
popa
es
clc
gs
scas
sti
std
enter
mov
or
sbb
mov
push
mov
xchg
xchg
je
ja
fldl
movsb
or
xchg
fsub
cs
repnz
adc
cmc
pop
imull
int3
cld
faddl
jno
gs
dec
or
or
sub
mov
xchg
stos
jmp
aaa
mov
test
xchg
sub
sub
add
add
and
lock
mov
mov
ds
sbb
or
stos
dec
inc
cmpsl
cmc
stos
push
pop
jmp
std
shl
mov
pop
push
int
add
or
cmpsb
cmp
and
fldenv
sar
in
inc
push
imul
ja
lock
lahf
and
lret
mov
jg
mov
mov
sbb
mov
std
cwtl
jne
xchg
pop
fistpll
or
add
sub
cmc
mov
lds
or
sbb
std
sub
or
pop
fidivl
lret
shll
movsb
jp
in
mov
sub
or
xor
mov
pop
sub
push
push
int
data16
cmp
sub
imul
repnz
and
cmp
xor
cli
repz
jae
jmp
iret
addb
mov
mov
pop
or
data16
imul
mov
jns
adc
xor
inc
stos
test
fldt
jb
mov
add
push
push
ret
mov
sahf
mov
mov
rcr
add
fcmovu
ret
lret
cmp
jp
popf
lds
in
sub
adc
shlb
mov
mov
xor
cwtl
jne
cmpsb
or
andb
aam
in
andl
js
pushf
add
popf
pusha
jmp
add
insl
out
add
lods
xor
dec
jns
repz
imul
fstps
lcall
push
cmpsb
out
cld
pop
add
jecxz
sub
addr16
fbstp
iret
fildl
inc
jge
into
outsb
push
push
pop
inc
call
mov
cmp
xlat
lcall
xor
mov
pop
add
int
test
dec
hlt
imul
inc
xchg
dec
xchg
fildll
ljmp
adc
cmp
add
test
mov
and
adcl
mov
sub
or
sub
sbb
out
fists
or
mov
pop
cmp
das
sbb
pop
cs
ret
testl
inc
mov
jecxz
mov
insl
push
jns
inc
in
in
ljmp
inc
push
dec
push
addr16
fwait
daa
cmp
inc
mov
mov
leave
jo
sbb
out
mov
sub
popf
adc
add
mov
push
enter
add
nop
scas
cmp
bound
ret
mov
lea
bound
fisttps
lock
and
adc
pop
sub
jbe
inc
cwtl
push
insb
xchg
loop
cmpl
jae
push
sbb
add
mov
cwtl
daa
sbb
add
or
std
mov
stos
cmpsb
fucomip
pop
jo
dec
mov
cld
mov
orl
jecxz
inc
les
and
bnd
mov
test
adc
mov
aas
add
mov
imul
insb
add
movl
xchg
push
fmul
fbld
dec
fldcw
xor
sbb
jmp
push
or
repnz
pushf
lods
inc
sbb
loop
pop
dec
adc
mov
or
scas
nop
cmp
ret
and
arpl
mov
inc
mov
fsubs
pusha
cmp
xchg
mov
arpl
xor
push
mov
sbb
cmp
mov
pop
movsl
pop
inc
or
xor
sbb
mov
fcmovnbe
cwtl
and
aam
pop
add
pop
fs
inc
push
jg
mov
xor
xor
mov
icebp
int3
dec
mov
xor
mov
xor
aam
fwait
inc
pop
ficoml
jp
faddp
mov
sub
int
std
pop
adcl
sbbb
cmp
inc
pop
or
ss
jno
sub
mov
lds
mov
popa
faddl
rol
in
lcall
out
stos
inc
outsl
sbb
test
jl
pop
outsb
nop
jecxz
cltd
lds
sbb
xchg
jo
jmp
test
lret
jge
add
push
out
dec
cmpl
daa
fnsave
push
aas
pop
mov
mov
sub
lods
scas
shlb
xchg
jg
aas
cmc
dec
sub
jbe
push
ljmp
inc
xchg
sbb
xchg
jnp
int
jp
shlb
mov
ja
je
cmpsb
or
cmc
ret
and
mov
ret
scas
imul
dec
inc
js
shlb
lds
gs
pop
mov
xor
int
pop
movntq
fcompl
rorb
adc
jg
addr16
and
data16
xor
inc
fisubrl
jmp
jp
and
int
imul
out
jo
pop
and
cwtl
leave
les
pop
arpl
push
or
inc
test
pop
stos
dec
add
dec
sti
insb
cmpsb
lds
sbb
cmpsb
cmpsb
xchg
cmp
lret
pop
push
mov
add
mov
aas
sti
inc
jnp
mov
push
jo
jmp
add
rorb
push
cmp
dec
je
push
mulb
lods
jge
jbe
pop
out
je
mov
fsts
icebp
stc
cmp
sub
push
dec
stc
out
push
xor
mov
aad
fs
shll
dec
or
outsb
xor
out
jb
cmp
jnp
xchg
xchg
cs
push
or
mov
fldcw
inc
daa
mov
loope
and
dec
loope
cmp
pop
pop
fsubrs
adc
in
xor
push
mov
mov
adc
loop
push
dec
cli
xor
out
inc
cwtl
fidivs
dec
xor
pop
sbb
dec
sbb
enter
dec
out
mov
mov
push
sub
sbb
jns
bound
les
pop
in
pop
mov
mov
jge
pop
ror
test
xchg
cmp
adc
imul
int
jecxz
pop
xchg
daa
mov
dec
adc
pushf
test
pop
jbe
push
loop
int
icebp
loop
dec
sbb
pop
es
or
divb
mov
cmp
outsl
add
pop
dec
cli
pop
test
xchg
scas
jbe
xchg
cwtl
test
aad
xor
sbb
adc
cltd
repnz
in
push
es
mov
push
stos
mov
adc
sbb
fcompl
dec
popf
cmp
sahf
psubsb
xchg
sub
leave
xchg
mov
jecxz
aaa
jecxz
std
mov
xor
add
fdivl
cmpsl
jle
ficoml
ljmp
mov
fwait
rolb
mov
out
pushf
pop
aas
dec
leave
mov
mov
repz
aam
fisttpll
sbb
dec
stos
fcoms
or
jg
add
jb
in
mov
ret
xchg
inc
sub
dec
fsubrl
js
ficompl
adcb
loopne
pop
stc
or
popa
and
in
xlat
insl
mov
cltd
pop
and
adc
pop
fs
fdivrs
push
mov
cmpb
lahf
adc
lahf
add
mov
xchg
mov
mov
push
adc
adc
rol
cltd
aas
cwtl
mov
mov
or
mov
adc
je
adc
jnp
xchg
test
fs
xchg
inc
in
mov
int3
out
enter
jno
aas
mov
xchg
push
lds
dec
add
inc
jmp
or
cld
jo
xchg
mov
jbe
xor
sub
jb
or
rol
jge
adc
mov
jno
push
cli
popf
lret
ja
or
aas
push
test
push
lret
push
jne
inc
push
xchg
jnp
lret
sub
xlat
pop
xchg
scas
mov
mov
scas
pop
lcall
dec
clc
push
push
xchg
aad
pop
mov
cmc
stos
aam
push
xchg
shlb
clc
mov
and
stos
je
xchg
sub
fimuls
faddl
pop
or
and
xor
pushf
sbb
test
cmp
fsubl
arpl
mov
adc
in
fcmovne
or
mov
ss
mov
add
pop
scas
jp
cmp
mov
aas
push
mov
sub
inc
imul
push
add
jno
adc
arpl
mull
and
fistpl
repnz
shlb
dec
sbb
mov
mov
lcall
ja
lods
xchg
mov
insl
sbb
add
dec
push
xchg
push
cld
mov
xor
sar
or
cld
sahf
shlb
or
adc
cld
int
and
pop
test
lods
xchg
mov
fcom
sub
dec
xchg
jno
addr16
test
fstpt
xchg
pushaw
jecxz
into
lret
mov
xor
scas
mov
addr16
sbb
cli
outsl
adc
iret
adc
fnstcw
sbb
push
fnsave
cwtl
popf
sub
jo
xchg
dec
rcr
into
mov
aam
scas
jo
jp
cmpsl
xlat
mov
leave
int
push
dec
xchg
jp
push
mov
xchg
pop
cmc
out
push
mov
mov
test
adc
add
shrb
sbb
dec
sbb
mov
enter
dec
cs
push
lods
pushf
movsb
inc
call
loope
pop
sbb
int
mov
xchg
rclb
ds
sahf
dec
adc
mov
testb
data16
pop
or
popf
push
adc
insl
fsubs
sub
fisttpll
ljmp
aam
divb
ret
bound
lret
repz
mov
push
cmp
sub
xlat
push
mov
repnz
cs
cltd
dec
jo
cwtl
fnstcw
add
push
popa
pusha
lahf
jno
daa
xchg
jnp
jp
clc
or
jmp
pop
roll
mov
outsb
mov
adc
adc
nop
mov
repnz
push
into
push
ret
lret
push
jmp
pop
ja
sbb
stos
add
xorl
in
test
mov
xchg
add
jmp
mov
push
fwait
and
in
ret
ret
mov
jnp
jnp
cld
push
pop
addr16
rcr
out
xchg
mov
mov
add
push
push
fs
inc
mov
jno
or
hlt
or
testl
pop
sbb
js
mov
int
lret
and
rorb
inc
popf
push
cmp
scas
cld
mov
insl
loop
sbb
and
jbe
aad
mov
in
shlb
scas
sahf
xchg
mov
nop
mov
call
or
cmpb
mov
pop
and
fstpt
or
push
adc
inc
std
loopne
dec
insb
push
outsb
pop
jecxz
mov
add
push
pop
sub
sahf
push
out
add
mov
push
xchg
nop
sbb
push
sbb
lahf
push
shll
dec
stc
mov
out
and
dec
decb
call
shl
mov
js
mov
sbb
sub
mov
stos
andl
rcll
loop
jo
push
jne
imul
nop
inc
push
popa
cmp
jge
sub
dec
sbb
xorl
jg
outsb
adc
cwtl
xchg
jno
test
dec
leave
cmp
mov
lds
popf
mov
movsl
mov
xor
cmpsl
lods
jno
les
dec
out
fsubrs
ficomps
dec
rcrb
cli
decl
sub
cld
ror
jle
addr16
add
lock
scas
jecxz
data16
sub
test
mov
xchg
out
sub
push
sbb
pop
int3
sub
jnp
cmpsb
push
pop
roll
es
jnp
ficoms
xchg
in
mov
fs
sbb
jae
out
sbb
sub
pop
shll
lret
aam
nop
ljmp
or
rclb
or
push
inc
ds
aas
add
insl
push
adc
sub
jmp
sbb
out
dec
jp
repnz
cs
fsub
les
outsb
fs
rcl
adc
sub
fidivl
cli
jno
sub
and
lret
cltd
xor
scas
lret
sub
cmp
adc
and
fcom
mulb
push
sbb
jecxz
outsb
cmp
cmp
xor
call
add
mov
push
mov
loopne
sahf
mov
stos
enter
lret
daa
iret
xchg
scas
loopne
and
ja
inc
jns
push
jne
outsb
jle
jl
icebp
cld
out
mov
xchg
and
mov
andl
out
subb
cld
jmp
call
mov
lds
pop
sub
cli
enter
mov
cltd
sbb
jecxz
sarb
js
in
mov
cli
fucomip
and
cli
divl
hlt
out
fstpl
lret
xchg
xchg
sub
mov
shr
dec
mov
pusha
arpl
add
or
or
push
xchg
xchg
push
test
jb
xchg
cmp
aam
cmp
pop
dec
jg
dec
push
in
pop
arpl
insl
pop
xchg
pop
mov
or
xchg
mov
adc
movsl
aad
and
out
dec
push
pop
call
adc
adc
xchg
es
add
xor
rorb
andl
push
les
xor
aas
test
push
loop
popa
dec
filds
shll
dec
mov
or
fldcw
je,pt
mov
ds
psubusb
repnz
mov
mov
movsl
mov
inc
xor
cmp
xor
stos
xchg
jp
jns
mov
xor
or
and
lret
out
xchg
call
sbb
pop
jno
loop
inc
fisubs
jne
mov
or
xlat
inc
sub
pop
es
push
js
push
mov
cmpsb
enter
call
push
cmp
ss
es
push
js
push
mov
cmpsb
enter
call
push
cmp
ss
es
push
js
push
mov
cmpsb
enter
call
push
cmp
ss
es
push
js
push
jl
ffreep
push
cs
imul
in
sub
mov
andl
andl
andl
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
mov
lea
push
movl
movb
movl
movb
movl
movb
movb
movl
call
leave
ret
ljmp
inc
test
aam
andb
pop
inc
sub
cmp
or
or
lock
loopne
rcr
shrb
cltd
hlt
imul
inc
imul
add
or
pop
js
ret
fstps
scas
pop
add
xor
dec
dec
pop
fs
add
movsl
mov
lods
xchg
pop
jae,pn
ficoml
xchg
aam
insb
int3
cmp
add
mov
mov
pop
add
adc
lahf
push
or
push
xor
or
out
pop
icebp
mov
out
pusha
jecxz
cwtl
xorl
jns
pop
fstpl
cmp
jl
rcl
adc
shlb
jbe
cltd
jg
jns
int
cmpsl
mov
or
sbb
in
or
addl
xor
add
cli
jo
xchg
sbb
insb
arpl
and
add
pop
enter
push
notl
jbe
lods
jl
jo
or
scas
lods
pop
movsb
xor
or
sbb
push
fxch
dec
mov
mov
scas
mul
cmpsb
aas
inc
imul
cmp
sbb
mov
mov
iret
std
stc
cltd
in
sub
pop
pop
push
push
pusha
push
jl
movsb
mov
mov
rcr
xchg
jl
int3
in
push
adc
and
push
pusha
push
insb
pusha
jno
imul
mov
mov
jns
dec
push
pop
inc
sub
cmp
or
sbb
jmp
rcr
shrb
cltd
subb
pusha
dec
push
pop
inc
sub
cmp
or
sbb
jmp
jae
in
sub
mov
data16
notl
ret
lock
sbbl
aaa
into
out
mov
mov
jnp
sbb
ret
sbb
fwait
in
mov
ret
inc
sbb
xor
and
fisttps
out
ds
xchg
jge
mov
jmp
push
rorl
repnz
negl
pushf
imull
push
test
sbb
pop
test
test
shlb
jg
xor
xchg
scas
inc
jl
or
xchg
sub
outsl
xor
add
out
insb
cmp
add
aas
shl
mov
fldl
push
adc
mov
or
lret
xor
add
inc
inc
jg
dec
xor
jle
sub
jno
mov
ja
test
dec
test
outsb
and
cmp
jbe
leave
jno
ret
ljmp
nop
ret
add
xchg
mov
cmp
xchg
push
adc
loope
pushf
into
lret
mov
outsl
sub
sub
mov
sbb
mov
lcall
xchg
push
iret
xor
std
rol
and
ss
das
fwait
pop
xchg
jecxz
jo
fwait
mov
lret
nop
or
pop
fxch
mov
push
xchg
jne
scas
cmpsl
and
lcall
cmc
shlb
dec
mov
pop
jecxz
mov
push
int3
cmpb
cli
lcall
shll
ds
outsb
push
xor
mov
stos
mulb
lcall
xchg
xor
in
shrl
jg
sub
das
jg
push
mul
push
addl
push
into
sub
jle
lret
int3
out
imul
mov
sub
cmpsb
call
cmpsb
pop
addr16
xchg
mov
or
repnz
cwtl
mov
aaa
repz
xor
ret
mov
sbb
mov
mov
int3
loopne
sub
inc
add
sub
xor
lcall
test
and
adcl
rol
sub
pop
nop
mov
mov
sub
pop
daa
mov
cmp
mov
mov
std
jne
pop
iret
fisubl
mov
scas
shr
pop
dec
inc
dec
dec
xchg
and
cmpsl
nop
push
xor
lods
and
cmpsl
mov
xor
add
and
movsb
dec
mov
adc
mov
and
xchg
mov
and
mov
insb
aad
stos
pop
push
sbb
dec
sub
loopne
cmp
mov
push
hlt
testb
pop
inc
fwait
ss
inc
gs
and
lret
movsb
xchg
daa
lea
jg
stos
or
xor
jge
fisttps
out
or
cli
inc
out
fistps
xor
add
scas
cmp
sbb
pop
cld
out
jl
scas
mov
loope
or
xor
add
sub
fistpl
xchg
xor
xor
nop
sub
loopne
cmp
mov
cltd
shl
ss
jmp
adc
dec
dec
xor
jl
and
or
ds
test
sub
dec
pop
sbb
dec
cld
bound
out
cmp
xchg
js
sbb
xchg
sbb
jl
dec
ret
lea
sbb
xchg
xchg
xor
enter
mov
xchg
sub
dec
mov
ss
sbb
fiaddl
fmull
psubsw
pusha
and
pop
outsb
push
push
push
pop
stos
icebp
int
mov
pop
mov
lahf
lret
jecxz
mov
jne
cld
aaa
push
stc
ljmp
mov
xchg
jns
test
adc
outsl
jo
mov
int3
gs
jae
mov
ja
mov
sbb
out
in
xor
lret
ja
rorb
fcmove
mov
out
sub
mov
pop
pop
call
push
sbb
xchg
pop
jmp
cli
js
gs
xchg
jle
cli
adc
ss
mov
lock
sahf
popf
sbb
mov
jmp
mov
mov
xlat
xchg
xor
pop
cs
xchg
ja
mov
mov
dec
push
sub
adc
iret
fiaddl
out
cmc
jns
pop
jae
jecxz
cmpsl
sbb
into
clc
clc
test
scas
test
adc
mov
mov
and
psraw
out
push
jne
xor
sarb
pop
std
roll
pusha
sbb
inc
mov
aad
rcll
and
jecxz
cmpsb
je
or
aaa
jmp
in
sub
ja
into
ja
aaa
daa
push
aas
lcall
dec
ficompl
jge
mov
push
jecxz
cmpsb
inc
mov
add
mov
mov
cmpsl
dec
arpl
sbb
es
mov
pusha
add
cmpsl
iret
mov
imul
lock
jg
or
jb
inc
lock
bound
mov
fiaddl
loop
ds
jle
or
pop
push
sub
xor
stos
push
adc
out
cmp
add
je
pop
jge
clc
movsl
mov
inc
out
sar
shrl
push
sbb
ret
rcrl
jbe
sub
fidivl
mov
cli
inc
mov
push
adc
and
roll
jne
push
mov
sbb
xchg
dec
xchg
push
jne
in
out
adc
cmp
jmp
call
add
adc
subl
in
test
inc
mov
es
mov
scas
loop
scas
jle
out
div
fistl
mov
ficomps
push
int
popa
pop
bound
and
jo
sti
xor
lahf
or
adc
fimuls
push
mov
aam
dec
sbb
mov
ljmp
xchg
or
mov
rclb
jns
inc
loope
adc
in
mov
insl
ljmp
sub
ljmp
ret
sub
push
mov
sbb
imul
or
xchg
mov
dec
lcall
and
fmull
add
mov
push
lods
mov
hlt
fistpl
sbb
add
xchg
and
std
mov
pusha
cltd
sub
in
dec
stos
stc
jns
call
jge
popf
test
ror
into
insl
mov
jnp
jl
sub
mov
cmpsl
es
xchg
xor
lcall
mov
jle
rcrb
stos
insb
jo
cli
popf
pop
push
jl
fwait
xor
push
push
inc
mov
outsb
ret
cmp
les
stos
icebp
ror
xchg
sbb
xchg
mov
or
fucom
mov
push
dec
test
dec
cmp
sbb
or
push
mov
addr16
leave
in
pop
jmpw
sub
dec
push
push
jge
loop
repnz
scas
pop
mov
orb
mov
pop
add
lds
lock
push
sbb
sub
and
pop
lahf
cmpsl
outsl
jne
lcall
push
inc
xchg
aad
aad
jae
sti
mov
loope
or
dec
mov
arpl
lret
add
cmp
jb
mov
push
cmp
jp
jns
push
push
mov
lods
loope
outsl
fsub
es
jg
cli
fisubrs
push
dec
pop
adc
pop
cmp
pop
mov
sar
or
mov
test
inc
loop
or
xlat
clc
insb
ja
xchg
cmp
popa
add
jno
add
pop
ja
jp
je
mov
xchg
xor
push
pop
sar
mov
stos
adc
pop
cmpsl
in
mov
lea
or
sbbl
hlt
mov
mov
daa
pop
stos
inc
pandn
imull
mov
enter
clc
jb
inc
sahf
dec
mov
cmc
mov
mov
adc
lret
iret
sub
jmp
rorl
sub
in
aad
lock
in
lahf
xor
sub
fiadds
stos
fidivrl
rorl
mov
xor
jg
push
mov
mov
sbb
jmp
dec
inc
test
inc
int
xchg
movsl
mov
mov
pop
cltd
dec
das
lods
jmp
popf
sahf
rcrl
aad
xor
or
sbb
push
ret
push
pop
cli
out
out
test
pop
loop
or
std
push
inc
xchg
sbb
mov
inc
cli
leave
inc
gs
arpl
stc
adc
and
icebp
mov
into
std
fwait
push
loopne
mov
arpl
xchg
scas
loop
testb
mov
lods
or
cmp
fmull
jb
mov
mov
xchg
nop
fdiv
and
xchg
lret
aaa
std
shlb
push
scas
adc
out
mov
mov
or
cmp
jg
cmp
pusha
fbstp
fcomp
xor
stos
pop
insb
sbbl
xchg
cmp
test
movsb
enter
lds
cmpsb
push
mov
push
out
test
jle
add
pop
outsl
stos
adc
push
xchg
lods
repnz
sbb
xor
fwait
push
ret
js
mov
or
xchg
inc
lcall
loope
into
jno
es
sbb
dec
jmp
lds
or
xchg
fld
mov
lahf
mov
movsl
add
mov
or
repz
iret
les
imul
or
cmpsb
or
push
divl
xchg
jmp
lahf
or
jl
pop
out
sbb
pop
xchg
xchg
push
shr
fsubl
mov
mov
mov
add
pop
jne
jmp
mov
mov
push
les
sbb
repz
sarb
leave
mov
mov
divl
mov
icebp
pop
inc
call
inc
sarl
mov
movsl
inc
xchg
sub
cmpsb
adc
jns
add
push
xchg
outsb
and
xor
fucom
pop
push
adc
and
jbe
test
dec
cmp
jl
mov
xor
pop
xchg
add
fdiv
pushf
lcall
add
mov
dec
xor
loop
fmull
cmp
js
adc
xchg
jle
mov
push
push
xchg
jno
test
inc
mov
roll
pop
dec
sub
dec
ja
jb
dec
je
arpl
adc
loop
sar
adc
mov
fldl
add
xchg
push
andnps
insl
stc
adc
inc
mov
das
xchg
ret
xlat
stos
sbb
stos
imul
dec
sti
cs
pop
inc
push
and
sti
and
mov
pop
fbld
call
mov
in
adc
stos
jbe
scas
cmpsb
inc
fcmovnbe
out
popa
jl
mov
ja
or
push
dec
loopne
movsb
mov
fxtract
pop
repz
fs
pushf
aam
fdivrl
insl
aas
loope
mov
test
sti
loopne
hlt
adc
xchg
enter
bound
pop
clc
pop
xor
pop
imul
add
test
hlt
sub
enter
andb
mov
dec
add
mov
and
push
sub
loope
push
xor
fldl
push
mov
mov
xor
dec
cwtl
lds
dec
lock
mov
cmp
mov
jnp
leave
in
cmp
addr16
mov
fwait
sbb
test
stos
cmp
push
fdivrl
sarl
fstpl
nop
insl
jb
mov
pop
fstl
iret
dec
in
dec
test
cmp
xor
mov
sub
rcrb
ja
je
pop
dec
loope
and
test
ljmp
leave
sbb
sbb
sbb
add
adc
insl
sahf
andl
and
jo
into
pop
inc
aad
or
movsl
or
addr16
sub
inc
fdivl
mov
xor
jb
dec
jnp
push
push
mov
sahf
dec
push
push
adc
mov
adc
in
or
daa
adcb
clc
fmull
loop
popf
sti
rsm
sbb
mov
repnz
rolb
stos
and
mov
fsubrl
sbb
xchg
or
mov
cmp
pop
cltd
enter
nop
sub
push
xchg
jnp
push
cli
pop
or
pop
dec
fidivrs
push
test
lea
sbb
addr16
icebp
loope
test
pop
mov
orb
aaa
imul
mov
pop
pop
aam
nop
xchg
cmpsl
mov
xor
mov
mov
pop
test
jns
insb
mov
test
xchg
mov
sbb
lods
xor
add
dec
xor
sbb
mov
in
xor
jmp
fwait
push
in
mov
pop
test
js
mov
dec
stos
lahf
loop
jecxz
daa
xor
or
jbe
push
repnz
lahf
scas
mov
and
and
dec
push
aaa
push
push
frstor
sbb
inc
imul
pop
cmp
repnz
sbb
dec
cmpsl
xchg
rcl
movsw
jns
inc
test
lods
push
and
mov
xor
add
mov
pop
repnz
jg
pop
lcall
lods
xchg
mov
loope
xorl
push
and
mov
movnti
imul
testb
iret
pop
repnz
add
mov
test
repz
xlat
pop
xchg
xchg
movsl
jmp
sbb
aad
jl
dec
loop
in
nop
xor
lret
push
sbb
xchg
enter
aad
mov
push
iret
or
decb
fisubs
negl
sbb
pusha
shrb
jp
jb
mov
push
bound
call
movsb
lock
shll
hlt
pop
ret
xchg
mov
sar
cmpsb
popf
mov
push
cmpl
in
shlb
scas
mov
cli
sarl
fs
shlb
mov
add
call
add
loopne
push
and
sbb
lret
jl
xchg
lcall
jbe
cmp
push
jmp
adc
lcall
repnz
loop
and
rcrl
cmp
fistpl
add
jne
xor
mov
repz
test
dec
jl
sbb
stc
addr16
xlat
pop
cmp
mov
repnz
pop
aad
adc
aam
sbb
push
mov
loop
mov
es
push
das
mov
xor
mov
push
cmp
sbb
js
aaa
in
jb
out
arpl
sbb
jo
fst
add
inc
push
mov
aam
dec
inc
mov
jle
or
and
xchg
pop
into
mov
sbb
mov
stc
or
fldl
xor
aam
jb
jbe
aaa
mov
test
sub
lock
in
xchg
je
mov
sbb
xchg
sbb
jl
xchg
out
xchg
mov
sbb
jmp
fidivrs
dec
sub
loop
sub
jl
sti
imul
mov
arpl
popa
sbb
popa
mov
lahf
mov
lret
stc
clc
xchg
ffree
movsb
cmpsl
test
mov
xor
mov
test
imul
add
adc
dec
jmp
lret
out
test
int3
cmp
push
bound
lock
ret
mov
sbb
or
jne
in
pop
mov
mov
jecxz
jecxz
jecxz
jns
or
movsb
mov
add
rol
add
inc
ss
cmp
inc
xor
pop
sub
lcall
aam
or
and
popa
shlb
sbb
aam
imul
test
rcrb
jle
mov
mov
fucomi
fisttpl
push
jl
std
pop
test
lcall
lcall
lahf
jmp
daa
or
shlb
repnz
mov
stos
xor
adc
stos
mov
ss
add
jle
xlat
adc
dec
lcall
dec
test
jg
cmp
cwtl
shrl
cmpsb
mov
pop
pop
rsqrtps
and
cli
mov
ljmp
aaa
push
mov
pop
push
and
jns
sub
xlat
cltd
ljmp
lock
movsl
jp
daa
add
lods
int3
nop
out
leave
pop
and
push
mov
fisubl
xor
adc
pop
addl
push
aad
cmp
aaa
insl
cmp
add
xchg
mov
mov
outsb
cmc
hlt
lock
push
pop
in
pop
or
stc
arpl
mov
mov
cmc
cmc
rcrb
aam
lods
movsl
je,pt
movsb
xorl
xchg
dec
xchg
stc
xchg
pop
test
je
xchg
mov
jg
pop
sub
mov
test
gs
stos
leave
xlat
insl
inc
sub
sahf
lock
pop
mov
insb
jg
add
xchg
jp
adc
in
cmp
mov
fs
jae
les
and
in
sub
sub
out
xor
negb
adc
add
daa
cmp
jecxz
xchg
pushf
dec
scas
cmpsl
jle
xchg
push
ds
paddb
pop
stos
or
nop
out
imulb
jne
cmp
movsl
jp
xor
inc
fsts
mov
rorl
fcomi
jle
mov
push
fcoml
cmp
shrl
movsb
repnz
xorl
shrb
stos
push
incb
jbe
pop
sub
jl
sbb
xchg
lods
and
adc
gs
ljmp
fidivrl
iret
sbb
jnp
sbb
call
pop
mov
push
arpl
sub
sbb
hlt
dec
cmp
jb
test
xchg
jo
jl
out
mov
xchg
std
fistps
cs
and
addl
mov
cld
jmp
mov
inc
pop
sbbb
xchg
aam
jno
push
pop
js
inc
mov
and
fs
xor
jle
pop
jnp
cmp
gs
sub
dec
shrl
jl
sbb
mov
mov
bound
sbb
hlt
xor
inc
call
test
xchg
insb
daa
xor
outsl
mov
sbb
xchg
and
pusha
addr16
push
mov
push
mov
orl
int
rorl
dec
repz
mov
ficoms
fldt
frstor
loop
mov
ret
adc
mov
add
add
xchg
cmp
sub
into
fnstenv
dec
jge
dec
xchg
adc
fldcw
les
leave
jo
and
ret
mulb
or
fnsave
daa
sbb
stos
in
cwtl
out
jne
ja
movsl
repnz
xchg
adc
push
es
jg
repnz
jo
push
fdivr
add
ljmp
adc
test
xchg
ds
icebp
shlb
push
addr16
push
out
xchg
sbb
jl
icebp
inc
mov
repnz
push
sub
into
cmp
inc
add
sub
jmp
jecxz
push
imul
cmc
mov
cli
push
test
out
aas
stos
mov
jo
fnstcw
movsl
inc
movsl
push
popf
hlt
cmpsl
lret
mov
imul
lret
mov
lret
cmpsb
sahf
push
mov
sub
and
arpl
repnz
movsb
mov
arpl
aad
sub
fmull
ret
mov
xor
loop
xchg
or
push
mov
bnd
imul
mov
push
jae
pop
inc
jno
or
or
xlat
testl
cmpsb
into
sbb
mov
and
bound
add
inc
mov
addr16
jbe,pt
ss
arpl
pop
lods
xor
and
sti
fwait
pop
or
insl
or
lret
add
pop
fdiv
fidivrl
mov
test
jbe
addb
sbb
inc
push
ret
iret
dec
stos
pushf
popl
mov
das
and
ds
je
cmc
sarb
inc
movsl
adc
daa
gs
sbb
bound
add
ret
dec
xchg
negl
mov
adc
push
jmp
insb
mov
les
fiaddl
jnp
popa
cmc
xchg
mov
sbb
mov
out
xchg
cmp
repz
mov
test
push
clc
insb
mov
or
and
out
mov
mov
nop
mov
lret
xor
mov
hlt
pop
push
or
or
inc
mov
dec
daa
les
repz
les
adc
and
push
cmp
pop
enter
push
cwtl
pop
dec
adc
lock
cmp
in
aas
sub
daa
into
popl
xor
sbb
and
out
add
jle
pushf
sub
or
call
movsb
cmp
mov
xor
inc
sbb
insl
imul
cmpsb
cmp
scas
inc
arpl
sbb
sahf
je
or
test
adc
mov
push
xor
pop
xor
sbb
adc
fmuls
adc
aaa
mov
mov
loopne
mov
mov
subb
pusha
dec
push
pop
inc
sub
cmp
or
sbb
jmp
rcr
shrb
cltd
subb
pusha
dec
push
pop
inc
sub
cmp
or
sbb
jmp
test
sarb
mov
subb
pusha
mov
xor
and
xor
add
lock
loopne
sar
shrl
sbb
jecxz
pop
aaa
pop
mov
out
jge
insl
jnp
dec
dec
pop
lock
pop
push
jae
pop
sbb
fsubrp
cli
fstp
int3
lret
mov
mov
jnp
dec
dec
pop
cmp
or
sti
int
jge
lods
mov
jge
insl
bound
dec
inc
cmp
adc
fdivs
in
iret
call
daa
or
pop
and
jecxz
cli
push
call
and
stc
push
call
loop
imul
add
or
pop
sub
in
adc
add
inc
lret
lods
in
jnp
arpl
js
add
mov
push
inc
std
jmp
sti
frstor
rolb
clc
mov
test
mov
or
sub
sub
or
and
push
inc
xchg
in
ds
je
mov
mov
das
fs
dec
sahf
add
adc
xor
stos
int
mov
adcb
jmp
or
xchg
and
pop
fmuls
insl
imul
pop
cmp
or
jecxz
ror
ret
lods
mov
cmp
sbb
xor
and
cmp
addr16
test
mov
in
negl
add
adc
cmp
xor
sub
gs
sub
scas
int
mov
in
clc
out
sbb
jnp
das
and
jno
sub
sbb
jmp
sti
int
mov
mov
jnp
dec
dec
pop
cmp
or
sti
int
mov
mov
push
ret
mov
and
xchg
andb
in
dec
sbb
jo
shll
dec
loop
adc
out
sbb
lods
push
in
test
add
or
popa
into
andb
enter
cmp
mov
cltd
and
int3
aaa
jge
push
fisubrl
mov
push
shlb
jecxz
or
je
sbb
clc
adc
cmp
movsb
sub
fdivl
and
leave
push
cmc
inc
xchg
jmp
jnp
clc
push
jle
in
test
cmp
sti
icebp
sbb
push
out
ret
lods
mov
add
inc
pusha
icebp
or
mov
dec
rolb
xor
xor
pop
movsb
imul
and
cmc
pop
xchg
adc
std
push
mov
jge
mov
inc
adc
or
ljmp
inc
sub
ret
loope
xlat
test
movsb
jbe
cmp
fsts
inc
sub
stos
jmp
dec
mov
jns
sarb
sti
das
xor
loopne
das
xchg
pop
sbb
std
lret
jecxz
mov
les
leave
pop
insl
mov
jp
cmp
and
lretw
sub
inc
movsl
mov
mov
mov
jg
adc
or
mov
cwtl
pop
lret
jg
inc
dec
sub
push
inc
lcall
movsl
imul
xchg
rorb
aas
or
adc
sbb
dec
ficoml
sbb
sbb
clc
jmp
mov
and
cmp
jo
jae
xchg
jmp
addb
mov
lods
xor
inc
dec
mov
xchg
jmp
aas
xchg
pop
ret
lock
inc
ja
sahf
imull
iret
dec
in
les
jmp
push
fcmove
add
std
lea
cli
inc
in
inc
jnp
adc
movsl
push
cmp
mov
push
ficompl
or
aaa
in
js
sbb
idiv
sub
lret
outsb
shrb
ret
lahf
or
jmp
or
add
cmc
imul
push
or
xor
fisubrl
push
xchg
cmp
mov
sub
push
insl
imul
mov
adc
out
clc
inc
xor
lock
mov
pop
repz
cmc
ljmp
push
or
mov
jb
or
mov
rcrb
decl
pop
dec
cmp
rorl
inc
sub
mov
sar
insb
scas
outsb
cwtl
jg
sbb
push
fcomi
jmp
rcrb
pushf
hlt
xor
bound
popf
sub
adc
mov
lock
cmc
cltd
inc
xor
popf
faddl
push
jae
xor
and
gs
jb
jle
mov
aaa
das
and
dec
jb
push
inc
shrb
scas
sarb
jecxz
arpl
mov
mov
push
cli
xchg
mov
mov
lea
mov
inc
ds
or
fcoms
jmp
movsl
xchg
sbb
add
xchg
sub
test
inc
or
fiadds
cmc
shl
push
or
aam
sti
dec
je
sbb
dec
mov
push
pusha
sbb
fs
cmp
and
loopne
push
jmp
xchg
jmp
mov
lret
loop
shl
fcoml
dec
dec
jne
jmp
fcoml
ljmp
orb
fisubl
push
test
pop
cmpsl
nop
divb
add
ljmp
mov
cmc
decb
mov
and
lea
add
cmp
mov
sbb
pop
div
mov
push
xchg
in
or
imul
movsl
jp
es
mov
add
pop
sub
movsl
movsl
xor
xchg
scas
mov
or
mov
cmpsb
jg
out
xchg
mov
xchg
mov
inc
ficomps
leave
fsubl
mov
xor
and
mov
and
into
sub
xor
fwait
pop
rolb
pop
pop
fstp
xlat
jne
and
mov
pop
sub
push
cmc
test
stc
outsb
mov
mov
loope
stos
sub
sub
scas
stc
mov
shl
add
sbb
pop
out
loop
cmp
mov
test
and
int3
and
fs
pushf
movsl
stos
in
aad
adc
inc
xor
inc
sub
sti
cltd
pop
sbb
std
mov
inc
call
mov
gs
subb
std
das
loop
loopne
dec
xor
sub
push
jno
adc
sbb
dec
aaa
inc
int
xchg
adc
stos
inc
xlat
loopne
and
adc
aas
or
push
lcall
stos
add
adcb
and
sbb
lret
xor
hlt
dec
out
andb
push
fidivrs
shll
push
in
xor
jnp
aam
imulb
mul
xorb
call
jbe
push
aas
mov
and
fdivl
popa
loopne
ja
pop
inc
int
movsl
cwtl
cli
mov
sub
mov
or
xchg
sub
or
sub
adc
add
arpl
add
cmpsl
fmul
movsb
subb
fisubl
stos
cmp
sbb
add
test
dec
daa
mov
dec
dec
and
push
dec
imul
xor
dec
gs
pop
xchg
loop
imul
or
shl
adc
mov
adc
mov
dec
adc
pop
into
or
icebp
or
mov
repnz
into
outsb
aas
xchg
shrl
inc
gs
jg
sub
fisubrs
test
mov
cld
int
pop
xchg
gs
push
mov
lods
stos
ret
pop
imul
outsl
cmp
push
in
mov
cmp
jle
ds
mov
popa
cmpsl
xor
dec
push
cli
or
jnp
cli
xor
aad
pop
push
cmp
pusha
das
mov
xchg
jbe
inc
xor
dec
aam
xor
cmp
shr
cmp
out
shll
addr16
in
fdivs
clc
scas
ljmp
out
jp
mov
je
dec
gs
into
into
cmpsb
jmp
aaa
sbb
pop
in
jo
xor
ficompl
dec
cld
pushf
fninit
xlat
mov
stos
mov
cmc
pop
cwtl
andl
stc
pop
scas
nop
or
shll
mov
xchg
add
jo
pop
pop
int3
insb
jmp
dec
dec
les
cmp
hlt
fs
out
movsl
cmp
inc
inc
mov
das
bound
cmp
pop
outsl
add
mov
sub
call
lock
fwait
mull
push
pop
rcrl
pop
mov
test
and
cmp
call
push
and
iret
jecxz
ljmp
sub
jne
jge
xchg
movsl
jb
rcrl
mov
cmp
insb
push
lret
or
adc
mov
scas
pop
dec
mov
cmpsl
clc
cltd
testb
add
sub
adc
push
mov
cs
sub
xor
mov
scas
mov
pusha
sahf
sbb
popa
cwtl
add
mul
addb
in
leave
inc
add
and
adc
and
push
fcmovu
inc
dec
pop
sub
int3
cmp
ds
jmp
xor
cwtl
movsb
cld
xchg
mov
movsb
bound
mov
jo
aad
pop
imul
insl
sbb
js
imul
mov
or
int3
into
shlb
pop
insb
fdivp
iret
sub
lret
insl
push
stos
inc
jb
xlat
xor
xchg
and
lret
jmp
xor
and
pop
mov
stos
in
mov
pop
cmc
push
push
pop
mov
rcl
leave
shll
or
aad
sub
or
mov
pop
imul
int
mov
in
jno
scas
notb
and
dec
nop
or
push
clc
inc
lock
jge
int3
sub
push
repnz
mov
pop
sub
dec
sar
sar
xor
mov
cmpsb
mov
dec
mov
cmp
mov
dec
data16
sbb
mov
and
xor
jmp
lds
and
adc
movsl
sub
imull
ja
repz
inc
cld
cli
pop
enter
sub
adc
mov
das
inc
mov
fwait
xchg
xchg
sahf
sbbb
xchg
jg
call
sarb
xchg
lret
inc
adc
mov
stc
mov
into
in
cld
dec
mov
repz
cmpsl
cld
mov
xor
add
aam
xchg
rep
adc
sub
lcall
popf
cs
pop
jge
push
cmp
movsb
fs
mov
into
mov
mov
mov
mov
or
push
cmp
cmp
movsb
repz
cwtl
scas
insl
ficoms
in
pop
add
cltd
jge
xchg
lret
fldlg2
in
or
mov
jmp
cld
outsl
or
in
sub
mov
loope
pop
lret
movsb
mov
jg
mov
jno
pop
fwait
lods
mov
data16
mov
sub
fdiv
push
cmp
cltd
jo
or
mov
ljmp
out
cltd
jle
out
add
push
test
sub
dec
hlt
xchg
xor
cld
xchg
xchg
outsb
mov
popf
mov
test
sub
shll
sbb
inc
stos
clc
sub
ss
hlt
jmp
loopne
cmpsb
cli
xchg
out
lds
ss
ljmp
push
sbbb
adc
testb
mov
sub
mov
sub
loope
mov
and
pop
fdivrl
loope
adc
in
sbb
and
sti
in
callw
sbb
mov
in
lcall
jmp
or
sub
rorl
mov
aam
jbe
and
cmp
push
outsb
add
xchg
ss
fidivl
mov
sub
into
addb
fcomps
or
scas
and
pop
mov
int
in
out
jl
fildll
outsb
bound
jno
sarl
push
add
push
loope
inc
imul
lret
dec
popa
subl
mov
dec
sub
sub
push
dec
sub
add
out
decl
cwtl
not
mov
sub
movsl
les
in
pop
addr16
pop
ja
and
sub
rcrl
iretw
pop
not
jmp
repnz
stos
xchg
sbb
sbbb
pop
push
fstl
pop
push
out
fnstenv
scas
dec
icebp
lea
cmp
dec
int
pop
js
sbb
pushf
clc
adc
enter
cmp
daa
test
pop
xor
sub
pop
mov
arpl
addl
pop
or
sahf
inc
movsb
mov
or
xchg
mov
repz
imul
stos
push
add
push
push
sbb
add
xor
shll
lcall
aas
inc
push
out
push
adc
popf
sahf
gs
xor
mov
insl
stos
cltd
pop
dec
dec
loope
pushf
xor
js
shrl
adc
mov
mov
frstor
pop
and
icebp
fsubr
stos
cmp
mov
xchg
fwait
pop
call
rclb
jle
subl
leave
cmp
cwtl
jmp
mov
into
xchg
sub
lcall
lahf
lds
dec
cmp
stos
xchg
jle
andb
enter
mov
cwtl
stos
popa
inc
push
aad
js
mov
lods
adc
push
mov
jge
mov
aam
mov
and
mov
adc
dec
cld
lret
stc
stos
push
xor
inc
and
loop
lds
arpl
inc
lods
pop
insl
in
imul
jp
movl
pop
dec
insl
outsl
push
inc
sub
dec
adc
mov
pop
and
mov
shl
mov
mov
mov
cmpsb
in
xchg
aas
scas
ficompl
mov
and
jae
add
lds
mov
mov
leave
mov
mov
mov
jno
in
jp
mov
aam
shll
add
movsb
mov
dec
in
ss
xor
test
imul
push
adc
test
sub
cltd
pop
pushw
cli
mov
arpl
pop
fisubl
jle
xor
ficoml
xchg
es
fadds
out
into
scas
movsl
popa
mov
lret
inc
out
sbb
xor
test
sbb
jl
lock
jmp
push
rorb
je
test
jno
dec
pop
sbb
jle
shlb
mov
aam
dec
pop
add
xchg
int3
pushf
movsl
mov
movnti
mull
inc
mov
mov
dec
jns
sahf
rcrb
mov
leave
sbb
lret
jo
mov
inc
fdivrp
iret
test
aaa
and
add
pop
pop
or
in
and
fcmovnu
outsb
and
outsb
pop
int
xchg
pop
sub
scas
ss
in
jb
cmp
clc
mov
and
or
xor
mov
jmp
popf
xor
mov
std
cmc
test
iret
test
jne
daa
in
pop
ja
cmp
lcall
out
test
cli
sbb
lahf
outsb
pop
out
je
jmp
sub
daa
mov
in
test
sub
sub
pusha
mov
das
or
sahf
data16
pusha
int3
test
icebp
mov
push
add
mov
loope
movsl
lea
add
sub
add
outsb
pop
rorl
jnp
jnp
das
mov
test
cmp
sahf
popa
mov
mov
and
inc
test
shr
pop
xchg
sbb
stc
loope
jae
lret
sbb
mov
xchg
sbbb
xlat
mov
aad
in
notl
add
and
out
hlt
daa
movsb
jnp
shlb
push
in
test
jae
inc
sarl
cmp
fwait
xchg
xchg
pop
incb
jge
iret
hlt
lahf
mov
mov
iret
cmp
pop
es
adc
pop
mov
test
popf
popa
out
mov
cmp
fs
lret
outsl
enter
and
imul
add
push
shrl
ret
scas
xlat
outsb
xor
xor
sbb
dec
repz
and
sti
xlat
imul
push
aas
push
xchg
jp
lea
mov
adc
sbb
stos
loope
mov
inc
in
mov
push
and
jnp
and
loop
out
leave
push
cs
inc
inc
cmp
scas
jno
nop
xchg
aas
mov
xor
xchg
push
mov
xor
scas
mov
stos
and
push
or
jle
push
mov
and
loop
rcrb
and
ja
clc
mov
mov
cli
fs
fldenv
push
test
daa
cltd
push
xor
js
push
out
fmulp
lret
scas
mov
xor
pushf
daa
mov
sub
sbb
mov
daa
add
or
loope
rcr
fnstenv
inc
imul
sub
out
add
iret
and
dec
fs
pop
out
lret
ret
cmpsl
pop
add
test
repz
pop
pop
sarb
or
mov
nop
and
lock
outsl
arpl
jne
mov
push
ja
push
fimuls
rclb
mov
xchg
mov
lock
and
popa
jge
scas
cmp
sub
outsb
add
push
add
iret
or
dec
mov
dec
data16
and
and
mov
inc
adcb
jo
sub
dec
push
ret
and
cmp
fistpl
sbb
mov
xlat
in
das
push
pop
outsb
in
or
lock
frstor
leave
jecxz
xchg
xchg
ljmp
jp
and
lahf
test
mov
xor
mov
pop
lret
in
and
movsl
divb
xchg
rorb
inc
sbb
cmp
xlat
jle
adc
mov
icebp
repnz
call
mov
mov
in
pop
subl
push
mov
fs
pusha
or
sbb
rcll
inc
mov
xchg
sub
cmp
mov
cs
out
into
xchg
pusha
pop
xchg
gs
mov
aad
fistpl
jl
xor
xorb
in
lods
dec
pop
paddq
sbb
and
data16
scas
push
orb
lock
xchg
lock
push
and
mov
inc
push
scas
xor
in
data16
hlt
test
lds
xchg
scas
mov
push
add
lret
aam
sbb
mov
fiaddl
cmp
cs
ss
or
insb
push
mov
jp
pop
arpl
hlt
stos
and
cltd
stc
sbb
push
pop
inc
scas
mov
pop
cmp
ret
add
xorl
push
std
push
test
adc
sbb
fldt
xchg
sbb
add
pop
mov
mov
lahf
test
dec
lods
mov
lods
rcll
ljmp
mov
sub
cmpsb
ja
sahf
cmc
lods
clc
lcall
ja
imul
jmp
jae
push
arpl
inc
mov
xor
adc
push
dec
sbb
xchg
pop
sbb
arpl
xchg
cwtl
cltd
daa
ret
pushf
jle
sub
in
fbstp
pop
pop
xchg
std
xchg
mov
pop
add
xchg
int
pop
mov
jne
or
ds
je
jns
cmp
xchg
mov
outsb
out
inc
repnz
push
sahf
inc
jae
aad
pusha
and
out
jbe
sbb
rcl
outsl
stos
test
rcl
les
lods
sub
add
shl
cli
mov
pop
call
xchg
cmp
ds
sbbl
call
xorl
pop
lods
sbb
testb
fimuls
dec
cmp
jne
xor
mov
sbb
inc
nop
push
cmp
inc
dec
and
add
fldt
inc
xor
scas
inc
cwtl
mov
sub
xor
in
mov
xor
movsl
stos
and
rcrl
das
jae
and
loope
pop
addr16
and
gs
loop
lahf
mov
xor
mov
mov
aad
ffree
sbb
lea
fcompl
addb
xchg
je
jb
dec
inc
dec
push
sub
arpl
fsubrs
fadds
scas
mov
das
xor
mov
js
lods
rolb
jp
call
imul
movsl
dec
out
lods
imulb
mov
cs
adc
xor
les
lock
shll
xchg
in
push
xor
loop
push
rcll
or
xchg
pop
or
sub
lret
lret
int3
push
push
jne
mov
push
pop
xlat
or
jbe,pt
push
stos
push
fnstcw
add
push
icebp
mov
cmp
inc
mov
or
push
pop
ds
xlat
push
pop
sbb
mov
inc
or
jbe
mov
cltd
cmp
movsb
loope
and
pop
sarb
cmpsl
pusha
sahf
xchg
adc
mov
movsl
sub
shll
cs
push
jo
int
push
bound
jmp
mov
cmp
repz
ret
mov
jb
mov
mov
push
xchg
repnz
cmp
fldt
in
sti
sbb
daa
push
and
jno
jp
dec
je
push
sub
sbb
test
pop
inc
mov
enter
push
xchg
pop
mov
xchg
imul
test
inc
pop
dec
clc
cmp
test
imul
loopne
push
ret
cmpsl
push
mov
adc
dec
adc
push
fnsave
subl
sub
or
fs
cmp
sbb
or
and
in
enterw
lret
rcrl
dec
sbb
jle
sub
ljmp
in
add
cmpsb
cmp
push
dec
stc
mov
xlat
mov
jo
xchg
and
xchg
inc
jae
and
les
push
stos
icebp
repz
pop
jae
leave
cmp
cld
mov
or
in
jmp
push
aam
jnp
mov
jmp
ja
fildl
ss
aad
lret
in
test
gs
add
cmp
mov
in
stos
scas
sbb
les
std
sahf
popf
and
orl
jecxz
and
xor
dec
icebp
push
mov
lods
sub
dec
xor
pusha
int3
popa
loopne
mov
push
and
adc
pop
push
dec
pop
mov
push
and
dec
pusha
mov
sub
jl
adc
adcb
call
jo
and
push
jg
fwait
imul
rcrl
pop
xor
pop
pcmpeqd
mov
cmc
out
cmovno
out
arpl
jb
or
mov
lahf
dec
sub
sub
sub
sub
repnz
fadds
cmpsb
jmp
ljmp
jge
push
pop
sub
mov
rol
xchg
lods
push
cwtl
lcall
cmpsl
lods
sub
add
fcomp
mov
dec
imul
in
adc
pop
dec
dec
pop
cmp
or
sti
int
mov
mov
jnp
dec
dec
pop
cmp
or
sti
int
mov
mov
jnp
dec
dec
pop
mov
or
sti
int
mov
lea
pop
dec
dec
pop
cmp
or
push
ja
int
int
ffree
in
hlt
std
in
mov
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
mov
loope
icebp
dec
aad
ljmp
inc
sub
popa
or
add
dec
and
mov
loope
icebp
sti
sub
mov
inc
sub
popa
add
adc
dec
xor
loope
icebp
loop
repz
ret
mov
or
jnp
add
pop
inc
sbb
rol
les
test
jmp
sbb
rolb
popa
push
es
push
subl
xchg
jecxz
aaa
push
sarl
outsb
pop
lods
pop
mov
out
cmc
jo
sarl
and
push
outsl
sbb
or
insb
adc
mov
add
xor
loopne
in
sub
and
lret
jb
inc
cs
hlt
mov
dec
adc
pop
es
add
rep
xchg
pop
cmp
cmp
inc
or
push
movsb
and
push
inc
dec
sub
loopne
test
jmp
xor
mov
pop
jno
cmp
pop
xor
xor
mov
fwait
loope
icebp
in
cmp
mov
inc
xor
popa
adc
add
inc
and
xlat
lods
into
add
cmpsl
pushl
xchg
lret
sarl
inc
cmp
outsl
pop
jnp
push
push
aam
lret
loope
cmpsb
xchg
in
mov
js
dec
cmp
jnp
add
push
das
pop
ficoms
jecxz
mov
jmp
sub
popa
or
add
pop
and
mov
loope
icebp
sti
sub
mov
inc
sub
popa
or
add
pop
and
mov
adc
and
cmp
cmp
scas
orb
inc
mov
push
push
daa
dec
gs
mov
mov
js
dec
test
or
dec
cld
dec
jmp
mov
insb
in
sub
xchg
scas
adc
aas
fidivrs
les
jmp
repnz
xchg
leave
iret
push
into
push
or
mov
sbb
sbb
shll
add
fistpll
ljmp
outsb
cmp
loope
xchg
popa
addl
push
xor
xchg
adc
inc
rcll
je
push
loopne
pusha
fldl
push
add
pop
pop
stos
lods
call
dec
mov
insb
inc
ficoms
in
inc
cld
in
jae
lret
dec
andl
xchg
push
fcomps
push
jo
and
icebp
test
lds
lea
jl
dec
decb
cmp
cmc
call
sub
and
adc
ret
xchg
push
mov
jne
jl
jmp
ljmp
mov
rcrb
cmpl
aad
cmp
test
and
add
push
lds
pop
cmpsb
enter
ret
xchg
xchg
adc
adc
addr16
out
aad
cmp
lret
push
or
adc
push
aas
dec
lcall
hlt
pushf
cld
xchg
xlat
and
xchg
inc
je
lods
mov
cmpsl
xchg
push
movsb
rcrl
sbb
not
mov
aaa
mov
insl
movsb
xchg
xor
loop
icebp
cli
xor
pop
inc
in
mov
jg
jno
dec
lret
pop
xor
or
dec
pop
js
test
pushf
xor
fsincos
mov
ret
add
das
scas
outsl
jns
repz
cmp
push
add
daa
pusha
xchg
add
sarb
sub
xor
mov
arpl
mov
aaa
push
leave
inc
xlat
scas
inc
push
hlt
push
enter
mov
rcrb
mov
sub
jne
sbb
lea
adc
xor
jbe
mov
nop
mov
cmpsb
adc
dec
mov
aaa
lea
or
mov
mov
jo
xchg
aam
sahf
shlb
sbb
pop
and
aas
aas
repnz
dec
dec
add
lcall
adc
les
hlt
dec
add
loopne
dec
lods
dec
popf
shll
das
es
pushf
cmpl
inc
or
scas
in
inc
pushf
aaa
jle
out
jl
adc
mov
shll
cltd
and
fisttps
push
mov
xchg
xor
lahf
les
mov
add
stc
repnz
cltd
in
jecxz
ret
adc
jb
jl
or
movsl
ljmp
insb
adc
iret
and
cmp
sahf
out
lahf
lret
mov
adc
dec
add
stos
gs
cmpsl
test
data16
sbb
ret
test
mov
push
insl
popa
pop
sbb
lcall
mov
rep
lret
jns
int
repnz
cltd
or
jo
imul
dec
cmp
cmc
add
shrl
stc
inc
adc
push
or
ljmp
push
mov
cmp
cmpsb
jp
sbb
mov
sub
mov
imul
in
adc
lods
lret
xlat
pusha
test
orl
xor
mov
sarl
or
and
push
mov
add
sub
and
in
adc
test
jg
cmp
les
sbb
inc
mov
rcrb
icebp
push
mov
ret
pop
iret
add
ds
imul
push
daa
imul
ret
mov
xor
sti
nop
mov
data16
call
sbb
mov
arpl
ret
or
str
sbb
jb
xchg
add
lret
nop
cmp
sti
ss
ss
xchg
xorl
xchg
negb
lret
dec
in
mov
inc
jge
jnp
lds
cld
dec
mov
and
call
xchg
call
addr16
rorb
push
adc
enter
mov
lret
and
dec
int3
lock
push
cli
imul
jbe
outsb
scas
retw
fmull
jb
shrb
pusha
sub
aaa
mov
daa
or
xor
pop
iret
jne
ret
les
movsl
test
adc
fwait
add
adc
and
imul
leave
adc
arpl
insl
and
loope
lcall
or
out
mov
hlt
outsb
int
into
pop
pop
sbb
cmp
xor
out
jp
fwait
not
ja
or
or
lods
xchg
or
lods
jo
dec
aas
sbb
push
enter
mov
push
data16
jmp
sbb
cmpsl
mov
sbb
mov
xchg
aaa
jb
sub
mov
sub
cmp
jo
jge
pusha
jbe
rcrb
xchg
mov
aam
or
push
inc
mov
mov
inc
popf
dec
or
inc
mov
sub
dec
lahf
mov
push
inc
xor
inc
jmp
push
or
stos
insl
sbb
sbb
mov
movsl
jne
inc
cwtl
dec
insl
xor
jecxz
add
push
mov
xchg
lret
jmp
adc
xchg
add
pop
mov
push
push
and
cmp
and
pop
xchg
inc
inc
out
mov
lret
cmc
lods
or
xchg
cmpsb
bound
rep
mov
fstpt
xor
ja
mov
jae
xor
fdivrp
xor
xchg
jne
arpl
adc
adc
shlb
movsb
aas
sub
and
xchg
iret
ret
cmp
jle
mov
lds
mov
push
hlt
add
in
and
add
and
shrb
leave
xchg
inc
ret
call
mov
fstps
mov
stos
shlb
sbb
lret
sub
mov
cltd
or
lcall
ficoml
sti
pop
out
xor
mov
fwait
push
pop
xchg
addb
pop
inc
xrelease
sbb
xchg
neg
jbe
xchg
jle
test
adc
stc
or
outsb
into
pusha
mov
sbb
ret
push
mov
xlat
lds
orb
pop
push
cltd
stc
scas
push
imul
roll
add
or
sub
mov
push
leave
push
sub
scas
mov
mov
shl
loopne
inc
xor
shlb
inc
sbb
loop
mov
cmp
out
push
out
push
int
push
and
jmp
stc
js
cmp
lret
stos
xchg
loop
lds
or
dec
out
push
cmpsl
insb
mov
out
out
es
jo
jg
inc
imul
dec
adc
and
pushf
and
push
dec
mov
dec
mov
cmpsl
xchg
das
mov
pop
outsl
pop
jp
mov
dec
mov
sub
pop
inc
out
sarl
stos
outsl
sbb
iret
arpl
test
jae
push
cld
jbe
inc
add
jne
xchg
in
xor
jns
shlb
imul
popf
bound
cmpsl
add
shr
es
pop
mov
ficoml
outsl
sub
fcomps
lret
imulb
jae
push
sub
adc
lds
sbb
test
add
repnz
and
mov
aad
jns
popf
inc
std
jge
pop
test
sub
mov
pop
ss
movsl
cmp
rcll
mov
mov
mov
mov
adc
rolb
adc
pop
cmp
push
jno
sub
aaa
mov
xchg
mov
jmp
push
cmp
aas
insl
out
lcall
mov
jp
ljmp
adc
fisttpl
in
iret
call
in
loop
std
ljmp
fisttps
test
rcl
negl
hlt
adc
out
xchg
stc
jmp
sub
xorl
and
sub
sbb
icebp
into
lock
pop
push
pop
fs
loope
sbb
in
add
shlb
jo
xor
dec
aas
repz
inc
jo
and
jle
mov
dec
ljmp
pop
and
repz
xchg
push
jle
mov
loop,pt
xchg
hlt
mov
loop
lods
add
andl
push
stc
dec
das
push
add
les
add
imul
pop
popa
xor
jbe
push
and
arpl
in
xlat
add
push
mov
dec
jp
fs
fldenv
movl
or
mov
das
cmpsl
pop
mov
sub
fwait
sbb
aam
das
sub
out
icebp
sbb
sub
out
repz
cmpsb
ss
negl
out
loope
adc
jmp
cs
cmpl
inc
pusha
push
out
lret
xlat
pop
adc
sbb
cmp
add
fdiv
movsb
push
or
loop
loopne
sbbl
jg
cmc
ret
fidivrs
dec
mov
inc
adc
jecxz
sbb
fcomps
jnp
int3
and
mov
adc
pushf
add
adc
dec
out
jg
movsb
test
push
popa
mov
xchg
insl
imul
inc
jmp
daa
sub
mov
mov
test
xlat
add
xchg
sahf
rcll
adc
mov
xor
sbb
pop
or
ja
pop
mov
push
mov
or
cmpsb
xor
mov
mov
jo
mov
jo
mov
mov
stos
out
gs
push
cld
cmc
rcrb
and
clc
add
push
inc
xor
pop
add
clc
das
jle
test
add
xor
add
mov
test
mov
dec
ss
jo
mov
call
lahf
and
mov
addr16
sbb
daa
sbb
xchg
sbb
int3
jns
mov
pop
nop
loope
mov
pop
mov
inc
ret
jge
inc
mov
jmp
and
jae
lret
rcrb
incl
adc
jecxz
sbb
adc
repnz
lds
rcrl
aaa
mov
cmp
mov
xchg
shl
jmp
lock
jge
pop
push
flds
imul
dec
in
xor
leave
cmp
scas
in
insl
jp
sbb
xor
dec
sub
mov
aad
lods
mov
jb
data16
ret
mov
or
mov
or
repnz
inc
daa
pop
and
in
icebp
orl
stc
lods
mov
sbb
adc
mov
sub
mov
daa
mov
xchg
fwait
arpl
fiaddl
push
sahf
mov
das
fisttpl
xchg
inc
pop
arpl
mov
xchg
push
inc
inc
fs
mov
popf
lcall
loope
addb
mov
sti
inc
add
mov
xchg
arpl
add
mov
fnstcw
xor
push
andb
fisubrl
pop
pop
test
add
jne
adc
pop
sbb
insb
push
add
push
mov
adc
cltd
dec
in
aaa
mov
adc
cwtl
jge
nop
jae
mov
iret
data16
jns
xlat
pop
cltd
in
pop
inc
xchg
dec
push
mov
out
insl
push
add
je
mov
mov
ret
mov
mov
or
push
insl
fbstp
dec
daa
enter
mov
test
push
movsl
out
dec
adc
xor
xchg
popa
fcmovnu
stc
and
das
cmpsl
push
testb
mov
mov
adc
daa
adcl
fisubs
push
fimuls
test
aaa
lahf
aaa
xor
jl
jnp
mov
or
int
ret
mov
adc
inc
out
push
sub
imul
ret
test
gs
xchg
pop
hlt
gs
int3
push
jmp
adc
pop
pop
mov
push
cmp
adc
xor
jns
js
movsl
ja
incb
scas
es
add
sbb
pusha
sub
mov
iret
mov
iret
adc
sarw
aas
fs
in
mov
cli
sahf
pop
aas
cmp
sar
shlb
mov
bndstx
sub
shrb
pop
test
test
dec
push
push
xchg
ds
cmpb
jl
cmp
push
jl
or
popa
mov
out
xor
incl
stos
pop
call
cmc
stc
mov
cmp
xor
xchg
pop
lret
adcl
repz
cmp
xor
sbb
dec
popl
lret
mov
test
out
pop
int3
jge
jecxz
in
daa
mov
cwtl
inc
out
push
mov
push
sbb
push
lds
mov
subl
or
adc
mov
mov
cwtl
xchg
pushf
scas
push
adc
dec
mov
cmp
mov
dec
push
push
xlat
popa
xor
jo
test
or
dec
xchg
cmp
push
adc
ret
adc
xchg
fs
jb
sub
jecxz
pop
rorl
scas
shl
insb
fsubs
push
and
movsl
mov
call
ljmp
js
mov
mov
dec
cmp
mov
fld
std
xchg
outsl
stc
push
mov
pop
xor
scas
out
in
shl
cwtl
and
movsl
dec
out
ret
cmp
popa
and
mov
inc
call
fcomps
out
fisubl
pop
push
push
cwtl
add
jmp
push
mov
sbb
cmp
pop
bound
push
cmp
pop
mov
ds
cmpsl
stos
dec
in
sub
pushf
pop
std
adcb
ret
mov
mov
in
xchg
add
cmp
shlb
out
rorl
stc
mov
ret
fsubrp
int3
mov
orb
mov
cltd
fstpl
rolb
aas
rorb
mov
adc
sub
imul
repnz
pop
push
xor
js
mov
in
mov
sub
mov
jo
adc
push
mov
or
push
into
pushf
and
dec
dec
jo
mov
push
loope
xchg
fsubs
xchg
cmpsb
and
sbb
mov
fists
cli
jo
popf
test
shlb
add
jle
fstl
fs
mov
dec
imul
push
aad
jo
jns
jp
cmpsl
or
daa
adc
mov
and
add
cmp
cmp
jge
movsl
push
sar
mov
and
enter
mov
adc
adc
stc
jg
or
xchg
dec
mov
lea
cld
sbb
daa
xchg
cmp
in
pop
mov
lret
mov
shl
sbb
pop
mov
in
dec
aaa
fdivrl
xor
cmpsb
sbb
and
adc
lods
cmp
add
dec
ret
iret
pop
xor
out
cs
iret
int
mov
jb
dec
push
subl
mov
dec
ret
clc
pop
and
sbb
shll
stos
arpl
dec
sub
je
ret
or
bound
imul
xchg
in
dec
scas
mov
jo
xchg
arpl
jp
add
inc
fdivrs
and
xchg
dec
push
dec
adc
cmpsl
pop
push
hlt
in
cmp
bt
lods
xchg
push
test
popa
divb
stos
xor
or
repnz
pop
mov
sbb
fmuls
mov
add
cmc
cmp
jl
pop
dec
sub
inc
test
pop
xor
test
mov
xor
adc
inc
xchg
sub
repz
push
add
in
push
je
pop
outsl
mov
xchg
sar
fistl
sbb
cmp
lret
dec
cmp
cmp
imul
cli
and
sbb
out
jp
add
mov
clc
push
outsb
sub
mov
jecxz
rcl
shl
jne
push
push
mov
xchg
add
and
jns
in
inc
sbb
outsb
or
push
nop
jae
negl
mov
pop
sub
addr16
mull
adc
mov
testl
inc
fiadds
mov
outsb
mov
mov
push
ljmp
dec
fstp
in
test
mov
xchg
test
insl
mov
loopne
jp
mov
ja
addr16
je
fld
movsl
sbb
iret
cmp
xor
push
outsb
in
pusha
push
jns
mov
out
jmp
outsb
lock
loopne
cmp
and
dec
sub
fimull
mov
popf
je
jae
repz
mov
ror
mov
xor
sbbb
dec
adc
rcl
loopne
daa
es
pop
dec
mov
lahf
jae
fistl
mov
sbb
adc
and
hlt
jle
lret
imul
adc
mov
mov
or
icebp
ret
push
dec
xlat
adc
jno
mov
jp
filds
scas
pop
loope
wrmsr
sbb
call
mov
leave
xor
dec
sub
icebp
insl
or
and
data16
dec
pop
sub
rclb
into
jle
hlt
xchg
mov
lods
pop
int
lret
into
pushl
pop
js
cs
je
xchg
jg
js
mov
sub
mov
sbb
jge
cmp
sbb
shl
mov
or
clc
mov
mov
lods
mov
enter
dec
fdivrl
xchg
mov
pop
cmp
ds
addr16
xchg
cmp
or
and
in
movsbl
pop
push
es
insb
mov
push
rcrb
cld
add
cs
pop
inc
dec
add
sbb
push
mov
or
sub
sbb
cmp
data16
fs
mov
and
scas
push
ja
mov
mov
stos
imul
jae
pop
cmp
sbb
mov
pusha
pusha
cmp
add
and
int
outsl
mov
sbb
in
rclb
jnp
cmp
mov
fstps
fsub
cmp
mov
stc
rclb
mov
adc
icebp
mov
or
jmp
adc
sahf
xchg
pusha
cmp
lret
mov
xor
fildl
das
leave
imul
jp
fcompl
lahf
stos
out
inc
mov
add
jns
add
dec
out
ss
xor
jecxz
pushf
mov
ljmp
idivl
mov
cmp
and
ret
ficomps
iret
sub
loop
in
mov
sbb
dec
ja
pop
add
lods
add
inc
push
scas
pop
scas
mov
sub
inc
pusha
incb
xor
loopne
inc
mov
inc
mov
ja
ret
push
cmp
xchg
and
mov
scas
cmp
push
pop
dec
loopne
push
icebp
movsl
ret
arpl
call
xor
add
hlt
and
pop
push
mov
jl
xchg
in
dec
and
popf
adcl
insb
out
lcall
xor
out
addr16
pop
outsl
movsl
popf
inc
mov
fldt
imul
sub
nop
pop
out
mov
ja
ds
into
lods
into
cmp
shll
xor
andl
push
push
gs
out
or
inc
and
out
das
push
stos
lahf
ja
ret
cmp
cld
js
push
mov
and
cmpsb
sahf
xchg
pop
stc
jle
mov
push
sti
ret
pop
ficoms
leave
xchg
sub
inc
stos
shll
push
sbb
sub
imul
pop
mov
in
rol
xchg
dec
clc
sarb
jmp
rclb
je
cwtl
shll
test
or
lock
adc
add
pop
xchg
cli
repz
inc
cmpsl
pop
dec
mov
es
lret
notb
push
mov
cwtl
movsl
test
mov
inc
mov
fisubl
adc
pop
add
jmp
ljmp
or
push
clc
pop
pop
rcr
fiadds
and
xor
out
hlt
int3
in
cmp
fwait
cmp
mov
outsb
or
sbb
mov
lret
sahf
jae
lret
push
aam
leave
inc
lods
inc
and
jns,pt
fsub
js
gs
rcll
lret
sbbb
mov
das
push
test
push
fmuls
mov
mov
xchg
mov
cld
pop
scas
xchg
rcrb
sahf
test
out
xchg
xchg
inc
push
mov
mov
and
lcall
arpl
in
push
ss
cwtl
xchg
and
lss
mov
mov
ret
dec
outsl
jmp
movsb
sti
negl
jge
popa
push
incb
xchg
and
pop
icebp
and
nop
xor
push
jnp
sahf
lock
imul
mov
stos
sarb
sub
sbb
xchg
cmp
icebp
push
addr16
push
mov
shll
psubd
sti
fmuls
jp
xlat
loop
push
mov
sub
xchg
xchg
les
cmp
mov
rorb
or
loop
adc
ficomps
sub
mov
or
adc
and
fsub
and
in
push
cli
jge
jge
pop
push
rcll
sub
mov
inc
sub
popa
or
add
pop
and
mov
loope
icebp
sti
sub
mov
inc
sub
popa
or
add
pop
and
mov
loope
lock
sub
mov
inc
sub
popa
or
add
pop
and
mov
loope
cmc
stc
sub
dec
les
or
or
jecxz
movsb
fidivs
in
adc
add
mov
je
cmp
je
push
lea
push
push
movb
call
call
mov
xor
xor
call
mov
xor
call
mov
mov
lea
push
call
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
pop
pop
test
jne
mov
not
mov
movb
or
mov
leave
ret
lock
mov
scas
cmc
xchg
mov
outsl
push
cmp
or
cmp
push
cmp
jle
outsb
mov
mov
cli
into
lret
xchg
and
cmp
outsb
fsubrs
push
jnp
dec
jle
outsb
mov
mov
scas
repz
into
sar
int
sub
xor
inc
or
sbb
adc
sbb
hlt
scas
loop
push
lret
stc
jne
gs
ret
div
push
push
sbb
xor
loop
sub
notb
in
push
icebp
cmc
sub
dec
pop
sub
aas
daa
sahf
mov
test
sti
dec
fmuls
lds
xchg
dec
aas
dec
loopne
popf
jp
stos
stos
push
adc
iret
jge
iret
and
icebp
or
sub
dec
ljmp
mov
xchg
lret
loope
inc
pop
rcrl
rorb
nop
dec
sbb
out
push
fbstp
sub
icebp
stos
aad
lds
sbb
stos
pop
push
stos
jle
jnp
sahf
mov
scas
cli
fsubp
into
lret
out
xor
and
adc
add
jb
bound
jle
pop
fstps
scas
mov
mov
pop
cmp
js
je
push
sbb
aas
and
fistpl
andb
cmp
insl
outsl
dec
wrmsr
or
sub
ret
fimull
lret
xchg
lock
into
lret
out
sub
cmp
or
sbb
push
jp
dec
jle
outsb
stos
sahf
mov
scas
ljmp
out
sub
cmp
or
sbb
push
jp
dec
jle
outsb
stos
sahf
jns
rcll
insb
lds
xlat
rol
js
lret
mov
xchg
sub
hlt
lret
fsubrl
xor
sub
rcll
cmpsl
jb
mov
xchg
lret
cmp
xchg
stc
outsb
lods
or
mov
cld
cmp
in
mov
leave
sbb
fwait
loopne
jge
in
pop
stos
sbb
addr16
lahf
jge
fcomip
xchg
push
daa
push
mov
jns
pop
cmp
inc
mull
sti
jmp
jno
or
sti
sub
lret
sarb
mov
jmp
mov
or
ds
dec
sbb
ljmp
add
insb
pop
loopne
fmulp
call
rorl
xor
mov
std
add
adcb
ss
adc
inc
test
jp
jb
fisubs
and
lods
pop
mov
or
mov
xchg
xchg
xchg
or
cs
inc
mov
test
out
int
aaa
int3
insb
and
push
sbb
fsub
out
idivl
push
iret
pop
or
fmuls
ljmp
push
dec
jle
lret
pusha
mov
sub
or
mov
js
sub
cmp
outsb
jae
insb
aam
cmpsb
addr16
xor
jmp
or
shr
cmp
sahf
mov
out
les
mov
sarl
jno
push
cmpsb
lock
mov
sbb
movsb
int
push
push
push
int3
inc
jmp
adc
jecxz
jbe
push
cmpsb
pop
addr16
dec
bound
dec
out
or
insb
inc
enter
popf
repnz
dec
pushf
insl
call
push
in
in
shrb
mov
pushf
mov
int
inc
scas
orb
inc
mov
sub
push
out
sub
pusha
mov
leave
test
push
mov
add
and
aaa
sub
push
inc
push
aam
mov
sbb
xchg
cld
mov
xor
imul
stos
popf
lods
push
xchg
scas
dec
stos
bound
mov
fwait
mov
imul
add
jmp
dec
push
pop
shll
push
cmp
rcr
adcb
loope
mov
testl
push
xor
loopne
add
mov
and
pop
gs
into
xchg
add
xchg
movsb
cmp
mov
sub
mov
jae
nop
data16
out
inc
xor
pop
inc
pop
mov
mov
prefetchnta
aaa
test
imul
mov
mov
subl
xchg
mov
sbb
mov
std
inc
or
sbb
push
push
inc
mov
xchg
push
dec
and
cmp
sarl
push
jns
add
jge
adc
enter
xor
xchg
rol
mov
xor
sbbl
fsubr
gs
jecxz
xchg
mov
jbe
mov
rorl
out
lods
jl
xor
push
int
scas
fwait
mov
adc
mov
push
pop
xor
dec
xor
jp
xchg
or
dec
rcl
and
or
add
mov
cmp
orl
cli
bound
adc
mov
adc
mov
inc
dec
sub
mov
jb
jno
xor
and
data16
in
dec
pop
ficomps
dec
scas
inc
stos
jl
cli
add
jbe
je
fwait
scas
xor
dec
sub
scas
xlat
je
sbb
insl
daa
jb
lcall
faddl
daa
movsl
jge
pop
inc
in
push
ret
cmovnp
push
sbb
sub
sub
pop
roll
push
call
clc
pop
or
sbb
or
xor
adc
ja
aam
inc
gs
fwait
mov
test
jle
push
adc
faddl
repz
mov
bnd
add
leave
loopne
inc
add
in
cmp
sub
push
jmp
mov
loope
iret
dec
popf
popa
push
gs
jne
sarl
scas
or
imul
adc
addr16
movzbl
call
in
pcmpgtd
cmp
in
jmp
jnp
and
cmp
xor
jne
push
jae
aaa
mov
jp
in
jae
cmp
frstor
xchg
pop
pop
int
pop
jb
xchg
cmp
xor
pop
pushf
cmp
ljmp
inc
lds
xor
sbb
insb
roll
fisttps
mov
insb
lahf
xchg
sub
aas
jns
out
jb
sub
or
adc
insb
inc
pop
aam
fstps
mul
loop
mov
push
rcrb
pop
push
add
xchg
in
std
xor
push
adc
dec
or
fdiv
lahf
loop
or
mov
fnstsw
sbb
adc
sub
xchg
daa
lahf
fwait
ljmp
movsb
sub
sub
mov
leave
jno
enter
fsub
inc
cmc
cmpsl
xor
dec
xchg
ret
iret
cmpsb
sub
leave
and
adc
xor
pop
mov
icebp
out
fcompl
sub
not
add
cs
fbld
scas
dec
jg
push
jge
lahf
xchg
mov
outsl
mov
outsb
bnd
sbb
xchg
inc
mov
dec
mov
fdiv
decb
sub
fxch
cltd
rolb
stos
xchg
out
imulb
and
mov
insb
push
ljmp
xchg
mov
jecxz
push
sahf
aam
jbe
mov
pop
decl
push
mov
lods
jno
inc
dec
hlt
movsb
push
xchg
popl
sub
pop
out
rcrl
jae
cltd
pop
outsl
scas
pusha
jo
cltd
daa
push
inc
mov
sbb
xor
jns
inc
add
out
cli
mov
bound
or
xlat
lret
pop
xchg
popf
pop
iret
cmpsl
gs
inc
stc
sbb
gs
dec
pop
stos
cwtl
incb
out
int
dec
push
inc
inc
and
ja
out
shrb
add
push
cmp
mov
pop
in
cmp
movsb
jmp
ja
hlt
xchg
add
dec
or
jg
nop
into
jle
ret
dec
pop
and
lds
jb
jl
mov
test
sbb
cmp
hlt
sub
cmp
addl
leave
mov
call
test
arpl
test
and
mov
ret
cmpsb
mov
pusha
es
push
dec
sbb
add
sub
dec
xor
sub
dec
or
shll
add
xchg
mov
adc
shll
jl
push
insl
sahf
imul
dec
xor
sub
or
daa
dec
nop
pop
mov
call
or
mov
cmp
inc
clc
adc
mov
int
push
sub
sbbb
arpl
xlat
xchg
and
jnp
inc
sbb
xchg
sbb
nop
std
push
add
sub
cs
or
aas
imul
or
les
mov
mov
pop
hlt
xor
imul
dec
std
outsb
or
popa
shl
adc
jb
dec
mull
adc
add
mov
rclb
es
pushf
jecxz
out
and
push
invd
test
jp
jle
sub
push
pop
mov
xchg
jbe
cs
and
sbb
sub
pop
in
push
aaa
xchg
xchg
pusha
jnp
out
neg
dec
mov
loope
sub
aaa
xorb
sub
daa
mov
pop
push
icebp
popa
stc
push
lret
dec
and
pop
std
inc
sub
pop
mov
adc
repnz
sti
inc
inc
sbb
mov
sbb
mov
or
pop
mov
arpl
pop
insl
lea
and
push
leave
in
fcomps
movlps
in
test
and
in
jge
sub
jno
stos
adc
jae
jg
or
sub
cmpsl
mov
call
iret
cmp
jle
sbb
hlt
je
cltd
ds
outsl
hlt
adc
ds
outsl
movsb
xchg
movsb
icebp
fmull
xor
sub
xchg
add
mov
and
inc
adc
clc
mov
divb
out
test
aaa
mov
jbe
sub
es
add
in
cltd
jns
or
icebp
bound
mov
in
lahf
lahf
int
push
and
test
rolb
push
stos
mov
out
mov
movsb
mov
nop
cld
dec
sbb
xor
mov
inc
clc
inc
pop
mov
bound
xchg
test
bound
push
push
xchg
nop
or
addr16
arpl
jge
cmp
bound
or
push
call
cmpsl
xlat
fs
aad
lret
fstpt
cs
cmp
mov
js
jmp
cmp
shl
inc
imul
add
fsubrl
jo
cmp
ljmp
mov
push
mov
aas
or
sub
int3
cmpsb
insb
push
jno
xor
or
cmpw
adc
iret
inc
mov
cli
mov
loopne
std
xorl
sbb
dec
fwait
xor
or
mov
fildll
mov
cmc
dec
lods
sbb
pop
jb
dec
ret
aam
mov
mov
sub
mov
mov
dec
jl
ret
mov
mov
in
arpl
out
sub
push
mov
sti
gs
sub
mov
test
jmp
jecxz
jns
dec
add
sub
dec
adc
and
pop
xchg
bound
pop
scas
arpl
enter
mov
jle
aad
popa
test
adc
mov
stos
inc
repnz
data16
pop
jns
arpl
shr
adc
dec
leave
dec
inc
lods
push
or
pushf
mov
xorb
cmp
mov
xor
stos
jns
jle
clc
jle
pop
lret
jae
rorl
jne
pushf
stos
imul
push
cmc
popa
xor
enter
lret
out
sbb
and
imul
xor
andl
pop
push
pop
es
mov
dec
bound
out
add
outsb
sub
dec
push
sub
or
or
orl
sbb
jl
icebp
push
mov
testb
rclb
fbstp
add
xor
lret
out
cwtl
cmpsl
inc
aaa
mov
mov
jg
cli
lahf
sarl
inc
xlat
and
icebp
xchg
xchg
mov
xlat
fdivrl
sub
cwtl
ret
and
xor
test
and
mov
aad
xlat
js
mov
scas
mov
pop
or
mov
sub
mov
lods
repz
shll
sub
sub
aas
push
and
arpl
ss
int
inc
pop
mov
pop
mov
jnp
out
in
aaa
mull
xchg
out
pop
mov
sub
out
into
pop
fists
cmp
push
addr16
cli
aam
outsl
cmp
loope
adcb
sahf
and
xor
and
out
jge
out
add
in
mov
test
shr
cmp
shrl
lret
nop
jne
lods
cmpsb
outsl
std
jecxz
sbb
mov
mov
lea
fiaddl
jbe
add
es
arpl
les
xor
out
xor
rcl
inc
and
push
popa
pusha
cmpsb
sbb
pop
in
pusha
incb
fstps
int
pop
cmpsl
dec
cmpsb
std
idivb
ret
jbe
mov
xchg
and
push
es
xchg
cmp
add
mov
outsb
ret
in
xor
orb
sbb
in
into
cmp
loop
inc
lods
and
imul
es
push
mov
xor
pushf
and
or
pop
cmp
xor
test
mov
pop
mulb
in
stc
aas
or
xor
mov
push
fwait
adc
inc
sbb
pop
sahf
ret
pop
stos
cmp
js
push
mov
adc
sbb
inc
rcll
xchg
out
scas
aaa
shll
clc
lods
sbb
gs
lock
seto
loop
inc
mov
fistl
dec
xlat
lock
sarl
aam
mov
adc
shl
imul
arpl
xlat
inc
leave
fidivrs
std
mov
mov
inc
mov
push
cltd
lahf
mov
mov
push
mov
test
mov
and
cmp
mov
and
and
cwtl
or
dec
adc
loop
data16
or
lret
jl
mov
scas
push
movsb
andb
pop
sbb
lods
cmpsb
inc
and
loop
add
mov
xchg
pop
not
dec
mov
adc
pusha
xlat
mov
add
xor
mov
push
out
ret
imul
fimuls
test
outsl
mov
aas
push
outsb
ja
int3
stos
fwait
add
lock
mov
sbbb
pop
movsb
scas
icebp
jne
pop
or
js
out
xchg
fsubr
cmp
in
jnp
lock
ljmp
out
mov
push
icebp
add
xor
std
je
popa
sbb
jmp
js
fimuls
cmpsb
jbe
sbb
fisubl
mov
pop
call
lods
lock
mov
es
mov
out
push
fimull
outsb
dec
out
mulb
jg
and
repz
and
cmc
loopne
push
mov
mov
lret
mov
jl
dec
aad
sub
pop
jp
aad
lods
and
lock
jp
sbb
js
and
xor
cmp
dec
xor
pop
jns
leave
rolb
xlat
pusha
or
xchg
cmpsl
pop
mov
sub
in
jge
or
push
leave
xchg
mov
dec
mov
in
and
mov
dec
mov
fdivl
inc
test
inc
cmp
orl
mov
mov
cmp
cli
sbb
pop
repz
add
sub
lahf
jbe
xor
cmp
cwtl
sub
add
leave
or
sub
movsb
cmpsb
pop
in
lahf
sub
mov
jl
lret
sahf
mov
aam
ret
push
ja
sub
cmp
jb
rcll
xchg
mov
inc
add
ljmp
pop
push
test
adc
cmpsb
mov
jnp
push
xorl
xchg
mov
loop
fbld
mov
ret
mov
in
xor
cmp
pop
test
pop
rorl
dec
insl
mov
cmp
dec
call
mov
xchg
loop
jl
rolb
inc
dec
inc
sub
lret
mov
mov
inc
fcmovbe
xchg
pushf
xchg
ljmp
push
popa
jg
pop
pop
iret
pop
xlat
dec
and
in
inc
int
inc
sbb
inc
and
test
jnp
aaa
daa
mov
test
ja
pop
ljmp
fnstsw
mov
and
nop
fisubrs
dec
jb
sbb
add
stos
sub
add
or
adc
pop
add
cld
xchg
lcall
cld
xchg
out
mov
sub
sbb
add
arpl
je
mov
loopne
cltd
daa
outsb
cmp
cmp
movb
and
sbb
push
cmp
js
push
adc
sub
cs
enter
adc
and
cli
push
movsb
insb
clc
arpl
pop
fcomps
imul
cmpsl
xchg
cmp
and
xor
hlt
push
ss
cmp
stos
add
xorl
mov
ret
pop
stos
imul
lods
aas
xor
sbbb
adc
bndstx
xor
jne
pop
test
testb
popa
xor
sbb
cli
inc
hlt
add
aas
int3
pop
out
xchg
mov
pop
mov
notb
das
inc
mov
jns
xchg
pop
and
add
pusha
std
out
xor
sbb
cmpsb
fsub
hlt
push
jp
js
adc
cwtl
cwtl
mov
aas
mov
ja
xor
outsl
arpl
add
xor
xor
stc
pop
insl
add
mov
xchg
mov
js
xchg
mov
loop
ret
sub
mov
dec
pusha
mov
mov
add
outsb
jge
add
xchg
addl
ret
into
jmp
std
iret
mov
xchg
inc
mov
lret
stos
hlt
inc
scas
iret
fdivrs
scas
xor
xchg
cmp
out
pop
or
cltd
cmp
in
loop
pop
outsl
out
sbb
cmpsl
inc
enter
mov
push
xor
pop
scas
call
adc
fs
lret
push
outsl
stos
adc
add
xor
stc
es
sbb
add
add
and
aam
cmp
lret
xor
mov
mov
fs
pop
imul
icebp
cld
cmp
gs
push
pop
sete
jo
pushf
adc
jbe
sbb
or
gs
or
in
dec
xor
pusha
dec
or
das
xor
xlat
sbb
sbbb
scas
popa
std
inc
mov
xor
jl
stos
inc
notl
int3
xchg
xor
icebp
mov
and
jl
js
jle
xor
xchg
jecxz,pn
rol
and
jp
dec
dec
or
adc
lea
jmp
scas
pop
push
jge
addl
cmp
mov
nop
push
xchg
popf
xchg
ret
ja
xor
subb
test
inc
jns
xchg
add
fnstenv
xchg
xor
push
dec
push
shl
jo
pop
and
shll
int3
decl
and
sbb
loopne
lods
mov
xchg
xchg
pop
pop
cmpsb
push
fnstcw
adc
push
add
jnp
sub
jb
adc
sbb
pop
push
add
testl
mov
xor
gs
mov
xchg
std
sub
sbb
jecxz
aaa
enter
push
push
call
dec
push
or
mov
hlt
fmull
cmc
push
pop
andb
or
sub
adc
flds
out
inc
out
insl
jae
adcb
data16
sbb
adc
daa
popf
push
mov
cmp
movsb
sbb
cmp
or
sub
mov
push
sahf
testl
adc
push
push
out
popl
rcrl
icebp
sarb
movb
ficompl
icebp
fidivs
sub
stos
orl
lods
leave
repz
lods
inc
enter
loopne
repz
and
pop
inc
ret
lahf
test
push
mov
sub
mov
repz
mov
lcall
or
pop
mov
xor
dec
ficoml
scas
add
xor
xchg
mov
xor
or
out
lock
pop
stos
push
sbb
add
dec
lret
xor
mov
cmc
adc
movl
cmp
dec
loope
sub
popf
rcrb
arpl
das
and
jbe
mov
mov
mov
push
jae
jne
in
notb
aad
fiadds
addr16
ja
inc
ja
xchg
dec
cmc
stos
leave
add
xor
and
outsb
pop
cltd
adc
mov
movsl
mov
pushf
cwtl
in
push
xchg
mov
loopne
inc
cmpsb
sub
or
testl
xchg
les
push
xor
jle
andb
fists
lds
popa
inc
ds
sub
cmp
pop
or
lret
xchg
sub
add
mov
mov
orb
or
je
aas
xchg
int3
dec
stos
pop
movl
fcmovnbe
hlt
pop
push
lods
stc
mov
test
adc
add
mov
sub
dec
sub
xchg
das
fsubrl
and
push
pop
jns
cwtl
clc
lods
push
xchg
sti
inc
and
mov
test
out
push
enter
and
and
inc
aad
xchg
mov
ficoml
les
movsl
andb
cli
lahf
rolb
mov
test
dec
dec
or
jne
lahf
push
iret
push
iret
iret
stos
cwtl
clc
cmp
add
xchg
jg
push
fsubs
lret
push
flds
mov
inc
xchg
outsb
pusha
scas
movsl
pop
mov
xor
sbb
inc
mov
into
mov
xchg
xorl
in
gs
les
stos
sub
rcr
mov
cmp
jo
outsb
jne
mov
addr16
or
cmp
out
daa
xchg
fiaddl
andl
dec
imul
sti
adc
fcmovb
xor
xor
addl
or
cmp
cmp
test
loope
dec
mov
add
addl
pop
cmpsl
aaa
test
sbb
jmp
cltd
ljmp
fnstenv
mov
pop
cmc
imul
repz
and
dec
mov
das
iret
adc
jne
push
lret
pushl
sbb
and
rcll
das
je
jle
rcrb
sub
mov
xchg
mov
add
insl
nop
mov
jmp
jle
dec
fimuls
xchg
jbe
mov
xchg
jl
rcrl
cld
and
mov
mov
adc
and
ljmp
fbstp
sbb
enter
jae
cmp
sarl
mov
ja
mov
shlb
mov
shrl
idivl
cli
into
lret
out
sub
cmp
or
sbb
push
jp
dec
jle
outsb
stos
sahf
mov
scas
ljmp
out
sub
cmp
or
sbb
push
jp
dec
jle
outsb
stos
sahf
mov
scas
ljmp
out
sub
cmp
push
sbb
push
jle
dec
jle
outsb
sahf
sahf
mov
ljmp
out
aad
lds
repnz
andl
inc
or
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
jmp
lea
push
pushl
call
lea
push
pushl
call
jmp
call
push
mov
call
xor
leave
ret
mov
into
mov
clc
or
cmp
sbb
js,pt
in
push
pop
push
dec
mov
into
mov
fmuls
dec
pop
sbb
js,pt
push
mov
into
mov
fmuls
sub
jl
or
cmp
addr16
mov
cmpsl
fnstenv
add
and
lea
push
dec
mov
out
adc
and
xor
jnp
pop
fisubs
ret
xlat
mov
or
pop
sbb
loopne
mov
jmp
jl
push
cwtl
shll
lds
dec
fmul
cmc
aas
jns
test
cmpsl
push
sar
leave
sub
stc
push
call
mov
jecxz
mov
adc
xchg
out
test
lods
pop
imul
xor
stc
mov
int
dec
jg
data16
out
enter
xchg
loope
push
push
push
in
xor
lea
sub
dec
sub
scas
or
fisubrl
scas
cmp
cwtl
into
mov
fmuls
sub
dec
or
js
push
fwait
xlat
lea
fistl
cwtl
push
pop
or
or
sbb
jnp
jle
mov
cli
lret
enter
pop
and
addr16
sbb
ja
sbb
lock
in
sti
clc
scas
call
jle
outsb
sub
dec
or
js
push
mov
into
mov
fmuls
sub
dec
or
js
push
mov
mov
outsb
xor
add
outsl
pop
cld
or
pop
mov
push
add
cmp
xchg
lret
std
mov
iret
int
stc
or
test
loope
es
decl
jmp
test
sbb
mov
xorb
inc
out
rorb
xor
imul
stc
pop
push
push
out
les
push
call
popf
mov
inc
sbb
jno
jge
mov
iret
nop
mov
jo
mov
dec
ffree
movsl
iret
pop
or
push
shlb
jns
out
popa
pop
insl
xor
aam
scas
enter
mov
or
loop
adc
cwtl
repnz
push
movb
pop
inc
and
mov
jo
pop
movsl
add
mov
bswap
out
fiaddl
ret
int3
enter
lahf
inc
in
sahf
lret
sbb
jnp
repz
mov
lret
insl
pop
lock
sahf
adcl
xchg
or
ds
shlb
fucom
add
mov
cltd
push
out
in
inc
repz
push
cmpsb
repz
stc
xchg
push
sahf
notl
nop
sahf
xor
mov
add
xchg
arpl
dec
mov
out
out
aad
fistpll
and
stos
popf
mov
push
dec
push
or
imul
stos
mov
outsl
adc
adc
dec
fcmovne
jp
sbb
daa
cmc
movsb
sbb
cmpsb
lods
mov
push
js
mov
lock
inc
push
sahf
push
fadds
lods
into
xchg
test
cltd
lcall
addr16
lret
sbb
cmpsl
jns
lcall
xchg
dec
movsl
iret
int
leave
lock
lods
repz
stc
mov
out
pushf
sub
data16
cmp
jge
aaa
adc
push
stc
push
mov
ja
outsb
ds
mov
popf
addr16
adc
aad
xor
int3
ljmp
sub
pop
ja
fildl
outsl
dec
test
xlat
rorl
xchg
mov
aas
sbb
inc
in
dec
iret
and
imulb
xchg
shl
imul
cld
dec
pop
pop
lahf
ret
mov
dec
pop
xorl
pop
add
popa
loopne
lret
int3
cwtl
sub
sub
dec
or
or
inc
jle
xor
ret
add
sub
sbb
aaa
add
mov
inc
aam
sbbb
repnz
mov
std
mov
adc
outsb
dec
add
jb
scas
lods
jnp
lcall
mov
sub
pop
mov
ljmp
clc
inc
out
scas
adc
rorb
fsubs
ret
cmp
cwtl
push
rclb
aad
adc
test
popf
xchg
test
push
repnz
adc
aas
dec
insb
loopne
inc
ja
icebp
inc
int
ss
iret
jmp
int3
imul
inc
daa
push
xor
cmp
push
cmp
push
push
push
addb
mov
add
adc
jne
aam
xor
loope
or
sti
jl
jp
cmp
adc
adc
stos
outsb
loopne
cltd
jle
mov
inc
jg
and
cmpsl
lret
cmp
mov
adc
cmp
cwtl
pop
sbb
decb
inc
jno
popf
push
and
cltd
push
outsl
lret
ret
js
xchg
je
mov
mov
mov
xor
or
xchg
pop
or
push
pop
pop
insb
out
loopne
mov
cmc
movsb
bound
stos
fbld
or
ljmp
dec
dec
or
xchg
dec
and
jo
outsb
inc
sub
adc
fisttpll
lret
or
xlat
cmp
stos
and
out
adc
cmpsl
mov
jnp
jmp
xchg
in
cmp
mov
cmp
sub
or
sub
mov
or
sbb
in
jmp
pop
add
pop
inc
sar
and
xchg
mov
outsl
out
mov
stos
jmp
jmp
or
mov
add
xor
mov
int
dec
mov
cwtl
adcl
movsl
mov
mov
xor
xchg
dec
sbb
add
mov
jge
mov
pop
clc
cmc
loope
cmp
inc
pushf
mov
jg
insl
into
xchg
xor
insl
stc
movsl
inc
pop
test
cmp
bound
jl
and
leave
lcall
int3
xchg
dec
jp
cwtl
rclb
arpl
sbb
or
mov
pop
nop
mov
fidivrl
ficoml
sbb
out
pop
ja
add
enter
add
jo
cmp
mov
dec
test
pop
or
fs
sbb
push
sbb
push
popa
addr16
and
xchg
dec
nop
idivl
popa
and
xchg
and
lea
ljmp
lahf
sti
xchg
into
pop
xor
iret
out
mov
rcrb
fidivs
mov
add
or
mov
pushf
rcll
subb
and
lds
lods
cld
sub
out
xor
out
scas
nop
out
int
mov
adc
fcomip
test
push
nop
out
xchg
lea
or
add
xchg
dec
mov
push
xor
cmpsl
mov
push
adc
xchg
nop
sub
jge
lods
jmp
push
movsb
into
push
cmc
jns
inc
mov
imul
repnz
mov
dec
or
aaa
xchg
es
push
sub
xchg
clc
outsb
and
incl
push
mov
call
out
inc
hlt
lds
or
std
iret
sbb
jg
aas
jbe
push
pop
iret
lea
loop
or
xchg
mov
sub
rcll
jbe
sbb
aam
xchg
fildl
cmp
filds
andb
cmp
sar
in
xchg
xor
mov
js
xor
dec
js
out
cmp
std
lods
outsb
lock
test
dec
mov
fiadds
push
clc
jle
adc
cmp
sub
popf
out
nop
mov
lods
push
cli
sub
xchg
loop
jb
xchg
shll
cmp
xchg
fnsave
addr16
imul
dec
aam
or
sti
jl
or
mov
sbb
bound
shrb
add
add
inc
jge
sub
insl
repnz
cmp
mov
dec
mov
jg
repz
icebp
ljmp
daa
sub
push
pop
add
sbb
add
and
stc
movb
daa
movsl
xchg
mov
imul
imul
or
pop
pop
call
inc
xchg
repz
fsubr
cltd
test
out
cld
mov
jecxz
sbb
xor
scas
test
and
mov
sub
scas
dec
nop
inc
dec
jnp
cmp
push
sub
pop
bound
mov
jmp
pushf
mov
pop
clc
jle
mov
sarb
mov
pop
jg
xor
and
jge
add
xchg
fs
jle
jg
add
inc
push
lock
cmpsb
sub
cmpsl
fsubr
aaa
pusha
dec
dec
add
and
pop
mov
and
xchg
daa
ss
pop
xor
repnz
mov
out
xchg
cmpsl
insl
ljmp
mov
lret
sub
sbb
push
mov
int3
es
cmc
xchg
inc
stos
and
xchg
jno
or
mov
inc
or
popf
inc
adc
jbe
xchg
ret
or
cltd
scas
in
pop
pop
mov
jp
icebp
push
cmp
arpl
dec
xchg
rcr
das
inc
cwtl
sub
add
loop
jae
cld
lcall
ds
repnz
jecxz
mov
lods
xor
inc
xchg
mov
xor
sbb
test
or
or
pop
jnp
jle
mov
xor
sbb
cmp
xor
add
jl
mov
mov
jmp
mov
inc
and
mov
imul
xor
scas
mov
stc
lea
cli
dec
das
arpl
je
ja
ja
mov
mov
pop
pushl
adcl
in
sbb
ret
jo
scas
xchg
arpl
jns
sarl
mov
xchg
lods
and
add
and
mov
cs
dec
sub
les
inc
sbb
xchg
mov
mov
int
aam
mov
ficompl
cmp
push
mov
popf
jle
push
pop
mov
push
filds
add
call
dec
mov
rcr
nop
sbb
push
jnp
daa
sub
jp
or
xor
mov
ja
sbb
dec
xchg
pushf
popf
clc
dec
leave
lds
and
fs
xchg
push
mov
cmp
sbb
add
sbb
ljmp
push
xchg
cmp
pop
test
out
fdivrs
inc
fcomps
inc
jbe
sub
out
and
xchg
mov
aam
or
ret
lods
aas
pop
jg
pop
mov
call
movsb
and
mov
cld
lock
cmp
add
pop
jmp
fisubl
fistl
dec
sbb
jecxz
insb
sbb
jae
aas
push
add
shlb
in
mov
mov
rcr
f2xm1
dec
repnz
stc
cmp
xchg
in
loope
and
pop
outsl
pop
xchg
outsb
testl
jae
aaa
and
adc
xorl
add
mov
fidivl
cli
adc
sub
and
je
fsubrp
push
xor
in
jnp
xor
pop
fdivp
push
push
jbe
add
cmp
cmp
xchg
cli
loope
xor
rcll
push
pop
pop
cmc
aad
es
adc
mov
or
or
inc
sub
pop
aam
outsl
into
mov
popf
inc
cmpsl
ss
or
scas
ret
bound
lods
cmp
addl
adc
cmp
inc
push
lods
cltd
test
sbb
aam
cmpsl
xor
pop
fwait
xchg
mov
andl
push
mov
out
insb
movsl
aad
mov
ret
les
sub
fcmovne
cmp
inc
mov
enter
lods
cmp
outsl
xor
jl
jo
xor
lock
cltd
cwtl
cltd
or
mov
cwtl
insb
mov
pop
xlat
repnz
push
idivl
ret
adc
xor
in
mov
sub
sub
mov
addr16
outsl
or
jecxz
gs
push
in
std
and
xchg
pushf
push
ret
lcall
xor
cmp
adc
stc
lds
adcb
xchg
sti
and
fwait
adc
cltd
and
dec
loope
mov
lret
rorb
les
inc
push
inc
and
sbb
mov
insb
fmull
bound
push
not
mov
or
das
sbb
push
or
leave
push
subb
jns
cwtl
jle
les
mov
push
rolb
popf
xchg
in
mull
lock
xchg
mov
aad
sbb
je
shl
mov
into
push
and
sbb
inc
mov
adcb
insb
xorl
in
pushl
inc
push
movsl
lock
lret
mov
daa
sti
jg
lret
cmp
outsb
xor
sub
mov
mov
dec
cmp
mov
hlt
xchg
in
jae
mov
and
push
aad
out
das
fsubr
in
add
pop
rclb
sbb
pop
mov
test
rcl
mov
inc
or
rcrl
push
int
cmp
mov
lret
bound
sub
inc
insb
mov
inc
inc
add
xor
loopne
mov
mov
jmp
pop
cmpsl
nop
cmp
mov
adcl
fsub
mov
stc
push
pop
mov
dec
mov
scas
mov
cmp
pop
nop
push
sub
fwait
and
mov
cwtl
xchg
lock
mov
sarb
xor
aaa
dec
rcrl
or
pusha
pop
mov
jg
imul
or
test
add
cmp
push
add
repnz
xchg
pop
rcrl
push
adc
ljmp
sahf
jecxz
out
outsl
lret
pop
and
dec
lods
mov
movsb
inc
add
and
insb
shlb
cmp
dec
pop
pop
pop
mov
outsb
mov
sbb
lea
adc
ljmpw
inc
stos
pop
dec
adc
sbb
shll
shrl
mov
dec
sub
dec
stc
out
icebp
es
push
xor
sbb
ja
mov
pop
sahf
loopne
mov
or
clc
outsb
mov
movsb
xchg
fs
xchg
xor
adc
sub
xchg
mov
and
and
mov
out
jl
cmc
jo
sub
jge
fadds
xchg
repz
cmp
adc
xchg
fsts
mov
stos
add
inc
lret
out
inc
cld
xor
lea
adc
divl
cmp
cmp
push
hlt
or
push
mov
inc
imull
rcrb
jno
ljmp
imul
sub
fs
pop
iret
add
or
repnz
mov
jmp
xor
sarb
jg
or
mov
shr
mull
pop
pusha
sbb
adc
xor
mov
mov
lret
out
push
adc
or
inc
lahf
mov
or
xchg
movsb
xor
add
push
cwtl
ret
jne
adc
mov
mov
or
sarl
insb
test
push
mov
xchg
mov
jl
dec
ficompl
xchg
shl
sub
jp
dec
inc
in
into
inc
std
imul
lcall
movsl
mov
jb
xchg
adc
push
and
and
jne
adc
imul
jg
fldl
pop
rol
or
mov
enter
jne
clc
adc
jne
shlb
or
leave
mov
adc
dec
jmp
adc
mov
pop
jb
xchg
push
adc
int
dec
or
int
adc
jmp
shlb
pop
lret
fidivrl
adc
lahf
xor
dec
imul
adc
inc
mov
ja
xor
outsl
testl
jg
mov
adc
xchg
mov
repz
and
punpckhwd
pusha
add
dec
or
sub
das
hlt
jmp
adc
mov
stc
int3
xchg
add
hlt
xchg
jno
movsl
adc
in
sbb
lods
or
mov
repnz
or
lcall
xchg
popa
jge
jmp
xchg
push
repnz
inc
xor
add
add
test
jmp
into
adc
fadds
xchg
xor
sti
inc
xor
dec
add
je
aam
aas
xor
pop
out
cltd
insl
std
inc
test
ret
mov
add
mov
inc
push
int3
mov
add
mov
pop
sbb
test
push
pop
loop
and
imul
test
lock
xor
adc
outsb
sub
popa
cmpsb
adc
leave
fsub
or
jnp
lea
js
inc
je
cwtl
mov
mov
add
xor
rcr
jb
fwait
iret
push
in
pop
xchg
in
mov
scas
mov
ljmp
mov
mov
and
pushl
arpl
xchg
mov
out
test
mov
or
xor
pop
cmp
pop
inc
icebp
pop
mov
repnz
lds
and
pop
aam
xchg
and
mov
jae
lea
and
jmp
movsb
and
repnz
jo
xchg
test
mov
shrb
inc
inc
roll
scas
setno
stos
xor
xor
jo
sub
jmp
nop
lret
or
jbe
sub
mov
aas
jmp
aaa
add
sti
movsb
fwait
pop
test
push
fsubrs
mov
or
lret
jmp
jg
movsb
shl
outsl
push
or
aad
loopne
enter
dec
icebp
sub
xchg
push
daa
mov
adc
lret
and
sbb
cmp
mov
mov
test
cmp
mov
sub
adc
lds
add
mov
jbe
push
repnz
out
mov
shr
jp
daa
pusha
stos
adc
jge
loopne
adc
inc
subl
pop
and
pop
cmp
mov
imul
sub
mov
dec
sbb
cmpsb
pop
jbe
sbb
outsl
xchg
loop
xor
inc
sbb
cmp
aad
insb
test
dec
loop
jo
mov
adc
push
sahf
pushl
pop
jmp
es
nop
popa
ds
pushf
adc
cwtl
sbb
ret
push
mov
dec
lret
popa
xor
scas
in
nop
adc
jae
mov
mov
push
push
or
xor
jno
mov
xlat
rorb
arpl
mov
cmp
loope
movsb
dec
push
lcall
jae
mov
aas
cli
in
outsl
fadds
repz
mov
aad
mov
testb
cmp
cmp
xchg
xor
loop
push
insb
jmp
mov
js
movb
daa
jle
cmp
pop
mov
imul
out
pop
fldlg2
adc
add
inc
fdivr
or
sbb
mov
cmpsl
stc
mov
push
sub
ds
or
jno
loopne
pop
mov
inc
sub
cmp
sbb
in
faddl
sbb
bound
pushf
addr16
ss
xchg
sti
adc
xchg
rcrb
popf
scas
mov
imul
dec
out
push
loopne
aaa
sahf
fdivp
int3
lahf
cmp
add
and
ss
cli
mov
push
mov
addr16
out
clc
sahf
fadd
xchg
mov
lret
scas
mov
sub
sub
mov
fwait
and
sbb
dec
mov
lods
mov
pop
pop
into
fcmovne
fcomp
pop
mov
fcompl
lods
mov
scas
or
mov
jbe
fwait
or
movsl
or
loopne
mov
and
cmpsl
dec
pop
fxch
jge
xchg
inc
jne
add
movsb
add
xor
cwtl
insb
out
push
jmp
les
push
jecxz
scas
lret
cmc
cmovg
cmpb
push
lock
cmpsb
xor
push
test
dec
mov
lahf
mov
aam
fcompl
mov
mov
shrl
scas
cmp
fisubl
sahf
ret
inc
xchg
mov
stos
les
test
or
rorl
and
mov
lods
ficomps
fxtract
jmp
add
fistpl
in
aam
pop
je
ljmp
push
rcrl
mov
xor
dec
dec
test
push
pop
fadds
clc
xor
xchg
ljmp
lock
stos
lret
or
jecxz
and
jo
jo
or
mov
fnstcw
imulb
lea
or
test
lahf
cmp
mov
es
cmp
lret
das
jg
push
movsb
out
test
cmp
cmp
xchg
sub
adc
sbb
inc
repnz
lods
sub
shlb
push
clc
mov
mov
sbb
mov
cs
or
sub
sbb
movsl
iret
aad
jo
pop
clc
scas
cmp
out
fwait
shll
push
addr16
or
dec
push
push
adc
add
mov
or
lock
push
push
mov
mov
daa
pop
add
fdivl
pop
mov
mov
hlt
jne
jno
daa
iret
sub
popa
sub
aam
call
rclb
pop
lcall
xorl
xor
scas
outsl
push
stc
pop
mov
xchg
out
and
arpl
fsubrs
fmull
inc
dec
fstpl
js
mov
out
pop
xchg
gs
mov
push
mov
inc
cmp
out
stos
xor
mov
lods
xchg
sbb
sbb
dec
pop
cmp
jo
and
or
daa
lods
sub
mov
fistl
fsubrl
adc
pop
inc
sahf
ficompl
xchg
add
inc
loope
mov
call
outsb
push
push
sbbl
jb
inc
pop
ds
xor
roll
mov
repnz
fcomip
test
shrd
inc
add
push
test
adc
or
roll
mov
lret
nop
mov
pop
sti
into
bound
cmp
or
or
or
xlat
nop
jp
mov
jno
les
pop
push
or
sub
jp
nop
shl
dec
jae
movsl
jo
inc
lret
daa
shr
mov
xchg
mov
movsl
push
loopne
jne
and
enter
out
dec
jg
or
or
movsb
out
xchg
test
daa
ss
xor
push
sbb
es
cmp
pop
popa
sbb
lock
cmp
pop
test
shlb
loope
mov
jbe
xchg
sub
push
data16
cwtl
into
mov
fmuls
sub
dec
or
js
push
mov
into
mov
fmuls
sub
dec
or
js
push
mov
into
mov
fmuls
sub
dec
or
js
push
mov
into
mov
fmuls
enter
xor
dec
jg
lock
xchg
out
divb
in
adc
inc
lock
add
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
dec
xchg
mov
cmp
adc
xchg
sbb
es
rolb
in
cmc
jbe
xchg
mov
push
gs
xchg
aad
xchg
push
mov
mov
lds
mov
in
cmc
jbe
xchg
mov
sbb
testb
aam
in
mov
xchg
add
out
cmc
inc
ror
jl
cmp
jbe
mov
xchg
ljmp
nop
and
xchg
sbb
stos
pop
dec
outsb
icebp
jl
push
push
and
inc
or
push
xchg
add
jno
mov
adc
push
pop
and
cmp
stos
mov
pop
mov
loopne
stos
fs
ja
nop
cli
jmp
dec
push
xlat
mov
adc
jbe
inc
call
mov
and
lds
pop
fnstenv
inc
mov
adcb
sbb
pop
loopne
mov
push
insl
adc
aad
mov
xchg
mov
adc
gs
divb
pop
push
jge
stos
movsl
inc
lret
push
in
xchg
xor
arpl
popa
out
imull
andl
and
aam
cmc
jne
inc
lods
xor
adc
out
aad
test
or
aam
rolb
mov
mov
nop
add
push
ret
je
add
push
gs
testb
mov
lds
push
in
cmc
jbe
xchg
mov
push
gs
testb
mov
lds
push
in
cmc
jbe
xchg
mov
or
xor
scas
fisubrl
ja
or
bswap
int
out
int
leave
out
daa
push
cli
mov
clc
xor
mov
in
fnstsw
jp
pop
fs
push
mov
dec
mov
adc
sar
cmc
ljmp
int3
push
test
movsb
mov
ret
fucomi
test
jns
out
dec
lods
std
rol
jo
cmc
add
test
mov
fadds
pop
xchg
out
mov
lds
jnp
test
inc
mov
inc
insl
mov
sbb
jp
outsl
filds
inc
sbb
mov
push
push
cs
sub
popf
sub
push
xor
cmp
pushf
xorb
imul
and
cld
or
adc
popl
push
and
xchg
push
xor
rcll
nop
push
test
mov
call
call
sub
cs
sub
lahf
and
fisttpll
mov
in
push
ret
sbb
mov
into
int3
and
fisubrl
aaa
mov
jle
and
inc
pop
pop
loopne
mov
lret
repnz
out
loope
addb
sub
inc
pop
dec
insl
push
popa
dec
push
or
test
dec
pop
xlat
std
or
jae
cmpsb
es
stos
push
xchg
pop
xor
mov
jl
shrb
mov
shrl
pushf
sub
mov
xchg
enter
cmp
cwtl
inc
mov
mov
ret
jo
subl
add
adc
in
add
add
adc
dec
sbb
mov
mov
cmp
xor
dec
xchg
and
push
mov
mov
stos
ja
fsubl
add
pusha
pop
cmp
gs
jne
sbb
xabort
pop
mov
mov
into
jg
mov
out
dec
xor
mov
mov
test
lret
add
or
pop
pop
popf
mov
pop
adc
insb
xor
insb
mov
push
push
pop
test
sarl
in
je
xor
call
and
cld
fdivrl
enter
fsubrs
lahf
les
mov
ffree
sbb
inc
test
jge
jp
cltd
ja
sub
data16
scas
loopne
call
insl
fs
bound
outsb
add
xlat
ret
daa
stc
movsb
iret
mov
lahf
pop
xchg
fldl
cmp
xchg
dec
negb
loopne
stos
sbb
jb
ja
popf
nop
cmp
repnz
sub
push
xchg
dec
or
out
stc
fnstenv
mov
jne
sub
sub
fidivrs
out
aaa
mov
add
xchg
add
dec
inc
lret
mov
je
stc
xor
lret
mov
cmc
jmp
enter
sub
mov
stos
mov
push
scas
ljmp
idivl
lret
dec
test
fs
push
int
call
pop
xchg
mov
pop
call
movsl
or
cld
aam
int
imul
xor
test
jnp
in
add
jg
mov
jns
neg
jae
mov
sbb
add
cmc
in
dec
mov
and
sahf
mov
jmp
ja
mov
inc
dec
fists
lods
adc
adc
xor
outsl
leave
pushf
sbb
insl
shl
leave
mov
je
jae
pop
push
sub
push
pop
out
inc
mov
movsl
out
loope
leave
jne
mov
cmpsb
adc
mov
add
jmp
aaa
mov
ret
out
pop
rolb
out
test
and
dec
push
in
mov
fmull
mull
mov
add
lds
icebp
fldenv
cmp
xor
xchg
addb
decl
scas
and
mov
mov
jg
add
mov
dec
daa
scas
fistpl
jmp
les
lock
inc
push
xchg
cmc
outsl
cmpl
mov
scas
icebp
and
inc
hlt
lahf
ljmp
sbb
cmp
adc
sbb
mov
mov
push
aas
test
cmp
sbb
cmp
mov
fsts
lds
push
jge
in
test
lods
push
adc
lea
je
insb
cmp
cmp
fwait
push
push
pop
aam
and
pop
lods
xchg
jae
push
repnz
jl
imul
lret
adc
mov
xchg
cmp
popa
xor
out
in
add
jge
out
pop
call
scas
mov
adc
test
jmp
mov
cld
imul
adc
loop
mov
mov
out
clc
xor
lods
and
push
fs
jno
jae
add
aas
xor
je
mov
mov
ds
fstpt
fwait
sub
rorl
mov
xorl
adc
imul
pop
sbb
aas
mov
stos
mov
shll
mov
jecxz
fldenv
stos
mov
pushf
stos
mov
jle
jg
ss
xchg
inc
pop
mov
cltd
out
or
shlb
das
mov
cmp
fcomps
dec
inc
xchg
in
cwtl
mov
fildll
std
adc
out
int
xchg
imul
inc
out
mov
das
lret
add
into
sahf
fidivl
popa
dec
or
jns
data16
icebp
ret
mov
xchg
xchg
outsb
cmpb
sbb
jp
add
fmul
outsb
out
insb
lods
pusha
cmp
int
sbb
lcall
pusha
dec
jae
xor
sub
jle
dec
shrb
dec
daa
lret
imull
xchg
cmpl
add
pop
jg
xchg
mov
in
andl
outsb
imul
call
in
call
adc
cltd
push
aam
arpl
pop
movsb
xchg
adc
cmp
mov
mov
into
cmpsb
cmpsb
addb
lcall
cmp
movsl
push
mov
dec
ljmp
out
std
test
rcrl
xchg
outsl
xchg
add
test
ljmp
mov
push
and
movsb
jge
cmp
fwait
pop
sti
dec
or
popa
mov
aas
inc
in
push
push
jb
sarb
dec
xchg
lea
or
sbb
into
xor
hlt
pop
enter
inc
jg
call
sub
testb
dec
into
mov
cmpsl
std
adc
fsubrs
addr16
movsl
lods
ja
rclb
mov
or
aam
adc
or
in
cmp
pop
and
mov
xchg
inc
imul
inc
mov
test
and
mov
adc
pop
pushw
mov
add
add
jl
or
dec
push
out
out
sbb
jmp
mov
cmp
sbb
in
insb
out
gs
xor
inc
das
and
out
in
jmp
jnp
mov
movsl
fmull
mov
inc
bound
xchg
test
les
iret
sbb
aad
xor
xorb
insb
adc
imul
dec
call
cmpb
addb
push
add
mov
sub
inc
jns
hlt
pop
adc
inc
mov
mov
fcomps
ficoms
shll
test
pusha
jno
notb
or
mov
adc
pop
cmc
jp
shlb
int3
fisubs
push
jle
add
incl
jne
je
js
jmp
adc
fildl
lea
js
fwait
mov
dec
mov
sbbl
sbb
gs
mov
mov
in
mov
outsb
and
push
jge
xchg
lret
pusha
sub
repz
outsl
or
jge
mov
inc
push
pop
insb
mov
fidivrs
sub
test
dec
xchg
pop
movsb
xor
les
sub
scas
repnz
xor
inc
and
in
adc
nop
and
call
rolb
movsb
mov
pop
add
and
std
aaa
je
mov
xor
mov
xor
inc
rcrb
sub
aas
cli
rorb
mov
les
lret
mov
pop
pop
dec
mov
cmc
aam
shrl
jecxz
scas
mov
mov
mov
shrb
push
sub
pushf
dec
andl
loop
cmc
pop
pop
adc
or
cld
pop
test
scas
dec
adcl
arpl
pop
std
push
or
mov
fmull
sti
shrl
ja
mov
dec
mov
xchg
shr
cmpsl
mov
inc
test
movsb
cmp
dec
out
lods
in
jmp
adc
pop
xor
out
cld
cmpsl
fs
das
push
xor
repz
cs
jecxz
mov
daa
lock
cmp
or
repnz
negl
movups
mov
icebp
ds
jge
dec
hlt
push
inc
push
jb
mov
xchg
cmp
sub
leave
sti
sbb
popf
add
cld
call
pusha
in
push
and
into
cmpsb
push
jmp
gs
test
mov
push
loope
or
inc
jne
outsl
inc
ss
adc
or
ja
pop
sub
lods
insb
mov
add
cmp
lods
sarl
mov
xchg
mov
aas
pop
inc
js
fidivl
dec
stos
ss
adc
xchg
jbe
push
lcall
imul
dec
jl
stos
std
add
loope
outsb
push
and
mov
jmp
leave
push
inc
nop
icebp
fs
adc
mov
addb
or
cmp
xor
in
sub
xchg
outsl
test
movsl
int3
lock
test
xor
fwait
xor
xchg
and
sub
push
xchg
mov
iret
jle
nop
and
inc
lods
lea
push
movsb
jmp
rol
pop
leave
xchg
es
mov
push
dec
jae
inc
rcll
lret
into
lods
stc
lret
or
or
repz
xchg
pop
faddp
lret
mov
dec
mov
xchg
nop
test
lods
jbe
js
pop
xor
clc
push
push
sarb
test
int
out
lods
mov
pop
xchg
cwtl
rol
imul
mov
xchg
das
cmp
sub
mov
in
adc
adc
and
rcll
adc
and
dec
jecxz
ja
in
in
rcll
sbb
cwtl
test
movsl
adcl
mov
xor
fidivl
jle
lock
fcoms
mov
outsb
subl
push
int
ds
cmp
sti
cmpsl
mov
cmpsl
in
or
out
jns
xor
jge
ffree
add
push
pop
and
jle
jg
les
mov
or
in
andl
pusha
add
pop
and
scas
mov
mov
mov
in
xchg
cmp
add
and
push
dec
loope
test
mov
mov
loopne
sbb
xor
cmc
pop
mov
cmpsl
call
push
adc
test
dec
cmp
mov
and
and
sbb
cld
ljmp
fcmovb
mov
into
out
adcb
outsl
adc
daa
mov
jnp
xchg
dec
rcrb
insl
xor
push
inc
jno
mov
pop
mov
std
movsb
sub
or
addl
int
cmc
mov
adc
scas
jl
push
pop
mov
xchg
or
inc
pop
or
and
repnz
mov
nopl
jo
addb
fsubrs
aam
sub
incl
lea
out
lds
add
and
out
cmpsb
sbb
popa
test
mov
pop
sbb
jge
popf
setno
cld
fwait
out
mov
xchg
movsl
cwtl
sbb
sub
mov
lock
pop
add
lods
adc
scas
mov
inc
insl
lods
mov
inc
mov
xchg
mov
mov
mov
arpl
lods
jb
push
ret
adc
dec
xchg
and
mov
push
test
mov
and
mov
xor
pop
cli
cltd
xchg
insb
dec
push
lds
mov
sbb
mov
call
add
jge
cld
inc
icebp
sub
sahf
sbb
loopne
sbb
imul
push
inc
stos
push
jo
out
cltd
movsl
xchg
mov
push
or
and
repnz
test
daa
test
xor
mov
xor
xchg
stos
or
fistps
sti
ss
add
imul
mov
and
jp
daa
int3
mov
imul
xorb
pop
fucomip
pop
mov
mov
mov
fwait
test
daa
dec
mov
cld
mov
push
adc
sti
iret
mov
cltd
shlb
jne
nop
cmove
test
push
jmp
data16
sbb
lahf
loop
vcvtsd2si
lahf
inc
inc
push
lock
test
xchg
xor
int
lret
rcrl
je
insl
pop
test
repnz
add
and
pop
jg
scas
out
out
push
test
enter
push
icebp
call
jp
adc
pop
mov
push
and
xor
cld
mov
das
xor
ss
cmpsb
mov
and
iret
fdivs
sbb
stc
adc
mov
loope
sbb
out
mov
lret
ss
cmp
xor
daa
shlb
das
mov
adc
mov
push
fidivl
push
dec
add
adc
sub
lret
les
cld
fistpl
aad
sarb
xor
xchg
mov
add
xchg
sbb
rorb
lret
xchg
lds
inc
lods
js
sbb
gs
jl
xor
pop
ret
aad
inc
xor
add
rolb
jae
lret
cltd
mov
adc
shlb
push
or
xlat
test
xchg
jne
in
lahf
pop
jg
movsb
adc
adc
out
rorl
jns
or
mov
mov
xor
fs
lock
dec
aam
outsb
and
jmp
mov
aam
je
adc
daa
arpl
xchg
ds
jb
jle
pop
xchg
stos
call
inc
and
jo
sti
mov
in
lret
jle
mov
inc
cld
mov
leave
sti
ds
sahf
loopne
std
shlb
push
pushf
dec
gs
movsb
adc
in
cmpsb
xor
cmp
ret
imul
scas
test
aad
movsb
popl
xor
mov
adc
pop
jl
out
inc
and
lret
andl
icebp
fstp
mov
dec
mov
inc
cmp
movsb
or
cmp
cmp
shrl
xor
fs
and
ljmp
cld
rolb
movsl
repnz
cmp
ffreep
leave
es
mov
inc
xor
aam
subb
fsts
stc
mov
fwait
out
ja
or
aam
sahf
in
sub
add
sub
scas
sarl
lods
inc
out
adc
jecxz
xor
cmp
cld
mov
mov
jecxz
aaa
aad
icebp
shll
or
add
out
add
xchg
pop
test
std
xchg
ret
push
sub
xchg
adc
pop
and
rorb
shrd
dec
dec
icebp
lcall
and
and
shl
jmp
cwtl
xorb
lahf
idivb
xchg
sub
mov
push
xlat
in
xlat
pop
xchg
sti
cmpsb
and
movsl
insb
in
das
arpl
push
jecxz
push
cwtl
inc
aad
aaa
stc
jecxz
loop
cs
lret
push
insb
jnp
inc
jne
jne
jp
lea
xchg
stos
push
jbe
leave
fcompl
cwtl
dec
aad
aam
fmuls
movsl
and
dec
loopne
lea
cmp
or
nop
mov
inc
popa
push
cld
in
pop
jge
sbb
xor
mov
inc
pop
cltd
sub
insb
push
outsl
sbb
out
xor
aaa
mov
jge
aaa
ljmp
push
ljmp
sbb
jmp
divb
pop
cmp
lahf
xchg
or
mov
and
add
iret
ljmp
cltd
cmpsl
aam
or
loope
mov
sub
les
sub
jle
jg
or
sbb
cltd
xor
rolb
out
popa
xor
cmp
loope
pop
shll
add
loope
mov
fs
and
nop
add
jo
sub
push
mov
in
push
jb
out
hlt
icebp
aaa
mov
clc
fucom
std
lock
xorb
add
movsb
nop
jno
adc
cmp
xchg
pop
dec
hlt
data16
iret
or
add
negl
inc
movl
xor
adc
je
jp
and
push
repz
jle
or
and
sub
push
mov
sub
test
sub
shll
stos
xor
xlat
mov
repnz
xchg
mov
mov
mov
nop
sub
in
jmp
push
rcrb
push
aaa
je
call
pop
jl
add
xchg
nop
xchg
inc
fwait
xor
jno
cwtl
sub
add
xchg
lock
lcall
xchg
or
sti
loope
mov
inc
add
out
pop
xor
adc
shrb
inc
sbb
das
push
lods
add
mov
ror
mov
ljmp
push
adc
sbb
js
pusha
pop
cld
inc
sarl
pushf
xchg
sbb
jns
pop
cmp
mov
push
data16
jl
push
and
push
scas
out
int3
xchg
or
lods
and
jle
subl
fwait
lcall
mov
adcl
mov
inc
jl
fcomp
inc
into
mov
repz
xchg
mov
loop
jae
int
or
divb
jae
nop
push
add
leave
rcll
test
jp
or
cltd
insl
les
mov
adc
cwtl
in
or
lock
je
jns
mov
mov
stos
mov
or
pushf
push
push
cld
lods
scas
add
dec
jnp
popf
call
pop
enter
fcomi
je
push
imul
xchg
and
std
or
sbb
lea
mov
sbb
adc
fcmovne
ret
push
xchg
nop
js
sub
testb
insl
pop
aaa
mov
fs
nop
mov
sub
pop
jbe
push
xchg
mov
add
inc
pop
push
dec
ror
hlt
shlb
lods
pop
loopne
mov
xor
push
rcrl
fsubl
mov
and
clc
test
sbb
push
xchg
sub
jo
dec
pop
aaa
dec
sbb
pop
lods
jnp
call
nop
insl
sub
mov
cmp
adc
mov
xchg
js
adc
faddl
icebp
jmp
mov
hlt
jmp
mov
push
out
add
inc
jmp
repz
movsl
lret
aaa
inc
imul
and
pop
out
jno
subb
sub
fstl
scas
stos
rcll
cmp
inc
sbb
test
lcall
mov
jecxz
dec
adc
insb
ficoml
int3
mov
adc
stos
sub
mov
mov
das
into
mov
mov
push
xor
xor
mov
jmp
ds
lcall
repz
hlt
pop
mov
cmpb
ds
lds
jg
shlb
mov
cmp
loope
xchg
xchg
adc
sbb
mov
add
in
pop
out
xchg
inc
movsb
dec
out
jbe
popf
or
outsl
cwtl
push
add
stc
imul
adc
repnz
dec
pop
sbb
xor
xor
xlat
shrb
sbb
lret
mov
addr16
fcompl
cmp
jae
push
jecxz
mov
mov
push
sub
fiaddl
lahf
mov
push
xor
jmp
sub
rcll
mov
pop
inc
inc
xor
jb
xorb
pop
push
dec
test
inc
out
pop
mov
inc
rcrb
ljmp
push
mov
aam
xor
adc
ss
cmp
in
add
lret
mov
dec
adc
cmp
ret
mov
andb
push
fs
lods
pop
ss
lock
leave
fwait
movsl
std
call
stos
mov
in
fdivp
test
mov
pusha
xchg
cltd
mov
adc
cmp
cmpsb
or
es
addr16
dec
scas
xchg
out
adc
fcmovb
jb
loope
arpl
ss
ret
sub
pop
push
in
pushf
adc
fstl
mov
movsb
popa
push
pusha
ss
mov
push
jnp
aad
rcrb
cmpsl
cmp
sahf
out
lret
lock
dec
cmp
inc
xchg
pop
movsb
sbb
dec
scas
xor
cmp
mov
arpl
push
mov
cmp
or
fmull
jno
push
mov
gs
sti
cld
shrb
xchg
lea
mov
int
or
movsb
ja
in
and
pop
cwtl
jne
sti
push
pop
aas
push
sahf
mov
push
outsl
es
inc
lea
pop
xchg
les
test
xchg
cmp
push
gs
testb
mov
lds
push
in
cmc
jbe
xchg
mov
push
gs
testb
mov
lds
push
in
cmc
jbe
xchg
xchg
xor
push
gs
testb
mov
lds
push
loope
lds
xchg
xchg
lods
cmpsb
sbb
gs
test
push
mov
mov
pop
test
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
hlt
add
mov
add
mov
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
das
cmc
add
sbb
add
adc
add
or
add
add
add
cld
hlt
add
hlt
hlt
add
in
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
cmc
add
push
cmc
add
pop
cmc
add
jo
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
call
testb
xor
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
test
add
mov
add
xchg
testb
pushf
testb
movsb
testb
lods
testb
mov
add
testb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
loopne
add
call
testb
or
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
shl
add
testl
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
clc
add
jl
add
je
add
insb
clc
add
fs
add
pop
clc
add
push
clc
add
dec
clc
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
test
add
mov
add
mov
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
dec
stc
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
in
add
in
stc
add
hlt
stc
add
cld
stc
add
add
add
or
add
adc
add
daa
cli
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
inc
cli
add
dec
cli
add
pop
cli
add
insb
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
