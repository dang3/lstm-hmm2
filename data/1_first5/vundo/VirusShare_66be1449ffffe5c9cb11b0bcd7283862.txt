mov
incl
xlat
add
mov
sub
jmp
add
lahf
sub
inc
mov
dec
mov
dec
cmpl
jns
sub
sbb
adc
lock
mov
dec
adc
xchg
mov
xor
add
jmp
test
lock
nop
push
mov
mov
inc
add
sti
cmpsl
or
add
aad
add
sub
adc
dec
mov
dec
test
pop
clc
leave
popa
icebp
dec
gs
push
inc
dec
lock
dec
jecxz
xchg
add
mov
inc
mov
in
test
enter
das
push
or
jmp
data16
xor
mov
cld
ljmp
lods
lcall
sub
fimuls
inc
xor
dec
mov
daa
add
inc
inc
in
fbld
sbb
repz
mov
dec
mov
cmpl
jo
jb
in
inc
add
xchg
jb
fmuls
lods
out
outsl
decb
ja
ljmp
sti
or
les
cs
rorl
push
and
sbb
lahf
push
jae
sti
fistpll
dec
push
jns
dec
mov
push
jb
icebp
fstpt
add
inc
push
mov
xor
outsl
insb
adc
mov
fisubrl
popa
push
hlt
adc
dec
add
push
jb
gs
inc
ds
std
sbb
outsb
push
add
adc
ljmp
hlt
mov
dec
dec
data16
inc
push
inc
add
adcb
and
add
arpl
outsb
sub
dec
xor
inc
or
cmc
push
das
dec
lods
xor
inc
jmp
je
dec
inc
push
push
push
jns
pushf
rorb
jmp
dec
adc
sbbl
out
xor
loopne
test
xchg
add
cmpl
xchg
mov
pop
sub
dec
cltd
cld
cmp
push
and
dec
lcall
fisttps
mov
jmp
inc
mov
add
mov
push
mov
das
insb
sbb
ja
inc
push
mov
fmuls
icebp
sbb
in
cmpsl
add
or
inc
rolb
mov
pop
icebp
dec
pop
inc
outsl
iret
xchg
call
or
mov
inc
mov
repnz
mov
mov
add
inc
mov
roll
lahf
ficoms
mov
cli
adc
inc
add
inc
pop
mov
mov
push
aas
add
js
jbe
je
clc
loope
dec
lret
inc
shlb
xor
mov
dec
or
mov
test
cmp
jle
mov
xor
fdivl
das
adc
incl
dec
jg
jb
jg
mov
notl
dec
dec
push
mov
in
decl
xor
sub
add
mov
adc
xlat
dec
mov
mov
icebp
push
mov
dec
pop
aam
fcmovu
jo
mov
push
imul
int
aam
iret
ret
dec
jmp
hlt
aaa
jb
dec
inc
mov
or
inc
pop
inc
inc
jb
add
add
mov
loopne
inc
xor
lcall
jae
adc
sbb
or
outsb
decb
insl
testl
push
nop
mov
push
mov
mov
inc
out
add
mov
movsl
test
push
incb
xor
dec
push
pop
dec
cld
das
xor
push
add
mov
push
inc
pusha
add
jne
jb
cmp
inc
mov
inc
push
and
pushl
sub
enter
mov
xor
push
sbb
ss
inc
add
xor
dec
inc
add
rclb
imul
pop
xor
inc
out
jns
sub
xor
xlat
pop
cmp
mov
adc
inc
cmp
adc
dec
adc
movsl
adc
or
or
lea
mov
sub
into
mov
hlt
xchg
imul
lock
xor
in
mov
ret
xchg
stc
jl
insb
xor
ljmp
jae
imul
inc
adc
arpl
dec
adc
mov
mov
sub
roll
je
mov
mov
jmp
xchg
push
and
adc
or
inc
dec
cmp
or
jo
xor
aad
jp
outsl
aam
loopne
dec
mov
add
ss
jecxz
dec
cmp
inc
cli
add
mov
push
add
movsl
sub
test
cmp
inc
out
pop
fdivrp
sub
xorl
add
cmp
add
mov
imul
sub
iret
in
out
imul
fwait
enter
cmpb
iret
hlt
sub
sbb
add
fdivrp
fcompl
es
sub
adc
add
std
sub
inc
fbld
fsubrs
mov
sbb
push
sub
dec
xchg
fstpt
mov
adc
stc
fistpl
add
outsb
sub
push
sub
jae
pusha
mov
push
xchg
sub
sub
jbe
jns
or
sti
cmp
push
fmul
mov
sub
jl
add
sub
pop
dec
push
lahf
loope
or
sub
in
fldln2
out
or
add
and
in
mov
cmp
sub
jbe
mov
jl
sub
out
mov
xchg
and
mov
sub
pop
pop
jle
lret
xor
shrl
or
fcomps
jbe
inc
roll
adc
xor
loopne
and
aam
xchg
jecxz,pt
sub
pop
inc
pop
inc
or
jmp
xchg
fstp
int
or
sub
sbb
lcall
lcall
xor
idivl
ds
call
sub
scas
out
jge
movsl
mov
nop
pop
inc
push
xchg
push
hlt
mov
jg
sub
lods
adc
mov
leave
mov
adc
cltd
adc
add
mov
fiaddl
lea
push
lods
cmp
sub
js
fstpt
push
push
push
push
jns
and
test
iret
xchg
sub
les
pop
out
sbb
cmp
sti
incb
push
sub
mov
or
fdivl
add
in
out
lcall
test
aad
add
jle
in
pop
push
popf
dec
mov
outsl
adc
push
or
adc
sub
xor
add
subb
mov
and
mov
and
roll
pusha
mov
stos
and
repnz
test
out
and
aas
cs
and
sbb
cmp
fldt
std
sbb
fs
aaa
arpl
dec
js
add
in
and
adc
mov
xor
mov
enter
or
fbstp
add
bound
sbb
mov
xchg
mov
xchg
fsubl
outsl
add
adc
adc
mov
clc
sub
xor
divb
pop
fdivrp
shrb
xchg
push
sti
push
sbb
mov
or
add
hlt
stc
sub
notb
icebp
cmp
or
inc
push
popl
dec
inc
adc
jnp
sti
pop
and
insl
lea
mov
pop
sti
outsb
loope
ret
jo
sti
frstor
inc
xchg
iret
mov
out
rcll
aam
dec
cmp
bound
dec
adc
jp
sub
push
pop
push
xchg
xchg
sub
mov
cwtl
insb
sub
sub
inc
sub
and
ficompl
test
aam
repz
aaa
fidivrs
or
jnp
add
je
sarb
lret
sbb
rorb
mov
sti
imul
dec
xor
xchg
ret
sbb
inc
inc
aas
xchg
push
sbb
cs
xchg
outsl
sbb
pop
cld
sub
mov
ret
ds
pop
sub
fsubrs
clc
or
sub
jnp
sub
movswl
xchg
fisttpll
in
push
adc
xor
xchg
mov
jbe
and
and
aam
or
fists
imul
push
lock
mov
push
adc
sub
pop
cs
adc
mov
repz
out
push
das
dec
push
or
loope
xor
les
cmp
cltd
test
and
pop
or
stc
sub
lods
push
jno
adc
or
daa
test
shr
push
jecxz
lock
cmpsl
sub
aaa
cmp
mov
in
sub
ret
or
sub
and
pop
vdivss
mov
clc
mov
in
mov
add
outsl
xchg
repz
sbb
cmp
jae
subl
insl
mov
mov
mov
push
and
nop
int3
inc
in
xchg
xchg
sbb
iret
jmp
sub
add
ret
xchg
xor
aam
mov
jmp
in
in
dec
push
sub
jnp
pushf
dec
adc
out
push
adc
popa
or
shrb
push
mov
fstps
clc
push
aas
lea
sub
cld
mov
popf
out
sub
addl
jl
pop
mov
sbb
cli
inc
inc
sub
fsubl
jne
bound
cwtl
inc
lock
pop
ret
xor
addr16
gs
arpl
xor
xor
cmp
jmp
sbb
into
sbb
mov
daa
jle
sbb
adc
dec
mov
popf
sub
push
rorl
fucom
push
mov
das
adc
push
push
dec
fwait
popl
subl
mov
or
xchg
mov
sbb
push
sahf
push
or
push
pop
jp
mov
pcmpeqb
pop
mov
mov
mov
pop
test
mov
or
leave
adc
sti
mov
and
adc
adc
stc
push
test
or
adc
dec
out
cmp
xchg
ret
push
add
loop
mov
jbe
mov
pop
aas
mov
clc
std
mov
stos
mulb
stos
lock
or
outsb
jp
loop
mov
les
ljmp
hlt
sbb
insl
pushf
roll
js
xchg
adc
inc
loop
and
adc
add
sbb
inc
sub
aam
xchg
mov
fsubp
outsb
aam
aaa
xor
dec
out
xlat
and
bound
scas
dec
jno
lods
pop
cmpsb
push
sub
fmuls
cmpsb
test
add
mov
xchg
mov
jecxz
ds
mov
cmp
or
bound
ljmp
sub
test
cmp
adc
push
fs
pop
push
fimull
xor
sub
imul
sbb
and
xor
mov
push
loope
test
and
imul
mov
lock
lahf
add
mov
imulb
ds
jmp
push
push
jl
and
or
and
loope
test
jb
jae
iret
mov
clc
mov
xchg
xchg
daa
xor
shll
test
cmc
cmp
pop
fucomp
mov
mov
sbbl
hlt
lea
sbb
push
mov
orl
push
push
das
popa
jg
jb
pop
jo
pop
orb
sub
dec
jp
push
adc
das
lcall
cmp
mul
aam
shll
adc
leave
inc
mov
sbb
cmp
mov
sbb
bound
xchg
jnp
inc
js
and
xchg
icebp
cmp
jmp
jle
pop
pop
aam
or
mov
push
inc
loop
out
jmp
and
jp
sub
in
xor
mov
sbb
add
repz
jae
clc
mov
cmp
adc
clc
mov
sbb
addb
dec
cmp
mov
sbb
insb
pop
xorl
xor
sbb
add
inc
dec
mov
mov
stc
dec
mov
sbb
int3
outsb
imull
ljmp
sub
or
mov
xchg
ss
call
mov
inc
scas
test
sbb
fwait
or
adc
push
ror
push
out
dec
and
and
pop
xchg
pop
jns
adc
inc
xchg
or
inc
test
xchg
xchg
pop
loop
pop
gs
adc
lret
xor
mov
jb
lock
push
mov
ficompl
mov
mov
jb
mov
pop
sub
push
pop
lods
cmp
andl
inc
outsl
push
push
sarl
jge
rcrl
lock
xlat
fcomps
outsl
adc
test
dec
jp
xor
shlb
loope
fs
aad
sti
daa
add
jg
dec
cmp
iret
cmpsl
inc
dec
pop
add
push
sub
into
loopne
or
cwtl
daa
ds
pusha
dec
popf
push
add
jg
xchg
xor
arpl
ficoml
subb
pop
jle
int
push
jmp
mov
lock
pop
into
sub
mov
ret
mov
sub
pop
push
and
adc
pop
mov
fisttpll
mov
out
hlt
jle
dec
repz
lock
adc
dec
dec
je
pop
adc
and
aaa
and
xchg
movsl
lods
add
jb
mov
jmp
mov
push
cmpsl
lea
pop
and
std
sbb
mov
mov
mov
mov
movsb
push
cmp
adc
cmp
add
cld
ret
out
movsl
sbb
movsb
fdivl
push
inc
inc
icebp
lds
sbbb
fiaddl
cmpsl
ret
lret
add
dec
push
imul
ret
fidivl
test
mov
inc
aam
out
pop
cmp
dec
std
ficomps
inc
xchg
cmp
mov
clc
rclb
sahf
add
idivl
leave
or
jp
pop
and
xor
enter
adc
jno
icebp
loope
sbb
xor
jae
pop
adc
fimuls
push
and
mov
icebp
push
xor
int
mov
add
lock
test
repnz
iret
sub
outsb
cmpsl
fdivl
lock
inc
jae
outsb
icebp
xor
and
cmp
cld
movsl
jg
push
sbb
push
iret
ljmp
lea
lea
subb
mov
cld
and
das
cmp
outsl
jmp
sbb
jmp
popf
jmp
mov
outsl
sbb
cld
mov
dec
lods
mov
lret
dec
add
mov
push
push
add
jno
mov
dec
ficomps
insl
cmp
sub
lcall
adc
ds
mov
out
ret
jae
jbe
loopne
je
sub
ljmp
lea
xor
mov
fadd
mov
test
dec
sbb
fnstsw
sahf
mov
pop
aad
pop
push
mov
mov
out
adc
pop
daa
mov
push
or
dec
js
add
and
mov
fdivl
cmp
and
or
in
xor
fdivs
imul
adc
cmp
dec
push
and
xor
cmp
ljmp
push
shlb
icebp
cs
sbb
push
pushf
push
adc
sub
mov
adc
cs
jmp
pop
xor
cli
js
cmpsl
and
or
adc
mov
mov
and
les
jg
jecxz
or
popa
movsb
out
insl
imul
add
pop
and
dec
fildl
sub
adc
addl
in
fdiv
mov
mov
mov
adc
xorl
mov
adc
adc
sarb
in
xchg
sub
test
repnz
pop
mov
daa
negb
andb
outsl
popa
jae
jo
cmp
push
or
loop
push
cli
imul
or
pop
add
insb
loopne
ret
dec
pop
pop
pusha
add
lock
dec
cwtl
sbb
and
inc
enter
add
jge
arpl
pusha
imul
mov
jmp
sub
cmpsb
xchg
cld
cwtl
mov
mov
shll
sahf
mov
adc
insb
and
cmp
cmp
xchg
inc
cmp
xlat
popa
in
hlt
loope
test
cmp
jp
and
adc
inc
into
dec
jns
adc
clc
sub
inc
inc
cld
mov
in
jecxz
fnstsw
in
or
hlt
lret
sbb
or
cmp
xchg
scas
push
cld
mov
mov
data16
mov
in
ljmp
fbld
fnstsw
add
loopne
mov
pop
outsl
cmp
jmp
iret
push
mov
push
iret
test
push
push
das
jp
jno
push
push
rolb
jb
sub
call
test
jg
or
insl
xor
xchg
jp
jg
movsb
mov
inc
dec
or
or
in
mov
jae
dec
mov
jmp
in
mov
insb
pop
in
pop
inc
mov
ss
les
fisttps
mov
push
leave
xchg
or
fcoms
in
adc
iret
and
mov
ss
iret
popa
cli
sub
cmpsl
lock
sti
push
mov
sub
pop
nop
pop
xor
nop
dec
jg
jecxz
cli
mov
cmp
mov
adc
inc
out
sbb
xor
xor
lahf
shll
mov
nop
jnp
cmp
cld
pushf
push
enter
loop
push
xchg
sub
insb
andl
or
lods
add
testb
addl
add
adc
pop
out
or
out
aas
lret
lret
cmpsl
add
add
sbb
adc
pop
subb
or
and
js
jp
and
out
add
shlb
jecxz
jo
mov
adc
add
out
dec
sub
call
xor
loopne
test
cmp
jg
jo
pusha
jo
mov
insl
rorb
lcall
jg
mov
jnp
mov
ja
pop
fcmovnb
cmp
push
pop
mov
pop
or
push
andl
sbb
dec
cld
pusha
mov
fsubr
mov
mov
xor
ret
repnz
jle
mov
mov
pop
and
mov
and
push
adc
xor
sub
xor
adc
outsl
sbb
mov
in
test
enter
add
mov
sti
mov
inc
test
sbb
daa
and
lahf
iret
aam
cmp
insb
sub
and
push
loope
push
inc
stos
sbb
call
daa
pushf
aas
lret
test
or
cli
mov
les
lds
lds
ret
cmp
bound
mov
xor
lock
call
push
dec
nop
fs
data16
push
mov
repz
jmp
lods
fwait
arpl
adc
enter
push
lret
mov
les
xchg
pop
outsb
xchg
or
mov
cmp
mov
mov
stos
cmp
xor
jge
xchg
pop
rolb
lds
add
cli
cmp
jge
aas
and
pop
aas
cld
mov
push
movsb
std
mov
ss
dec
mov
xor
cs
outsl
icebp
xchg
in
mov
jle
jae
arpl
add
clc
or
rorl
dec
or
insl
scas
pop
jno
pop
pop
enter
pop
cmp
or
lahf
jecxz
dec
arpl
nop
ret
adc
xlat
push
test
out
lock
xchg
loop
lret
pop
ss
or
dec
dec
mov
dec
icebp
out
inc
popf
adc
dec
mov
insl
stos
sub
lcall
dec
adc
hlt
pop
cmpsl
repz
cmp
jno
xor
adc
jmp
xor
and
arpl
push
mov
out
rcll
fcoml
lcall
hlt
ror
lcall
inc
mov
xor
cmp
adc
mov
cmp
mov
mov
fsubrl
cmp
jns
mov
xor
jl
sahf
sub
call
movsl
mov
jbe
jo
rol
dec
cli
outsl
enter
xchg
jl
sahf
sti
test
arpl
flds
rcrb
test
push
or
mov
sbb
sbb
clc
cld
sbb
mov
mov
stos
pop
aaa
xchg
clc
stos
sahf
sub
dec
loop
mov
xadd
into
jo
cmp
testb
fsubrs
scas
ja
out
push
ds
dec
popf
mov
add
in
pop
insl
pop
ret
add
inc
inc
testb
and
jle
or
jp
or
sahf
fcmove
cmp
cwtl
iret
dec
popf
add
pop
loop
xchg
sub
inc
stos
popf
sbb
adc
xchg
push
inc
dec
sti
inc
mov
cli
fstps
lock
cltd
sub
ret
lahf
jle
push
movsl
popa
in
cmp
fdivp
sbb
bound
insb
sub
jae
mov
mov
mov
xorb
int3
ret
adc
xor
imul
bound
out
and
dec
out
push
add
adc
sub
push
fistps
mov
mov
arpl
into
shrl
cmp
sbbl
insb
call
bound
ret
inc
adc
outsb
mov
jns
enter
lds
xor
leave
rolb
xor
lods
lock
sub
add
mov
bound
shlb
int3
mov
out
hlt
mov
call
popf
fisttpll
testb
cmp
mov
aam
push
pop
mov
popa
or
mov
push
aas
scas
jne
sbb
js
push
fnstsw
or
in
sub
and
outsb
and
ret
xor
cld
mov
or
sbb
sbb
cmc
mov
lcall
es
sub
inc
dec
xchg
mov
push
xor
es
dec
push
addr16
stc
jmp
insb
mov
add
cltd
into
enter
imul
clc
jno
inc
mov
dec
aad
cmp
or
xchg
call
mov
aaa
sbb
lea
in
jno
mov
pop
xor
xchg
mov
pop
adc
dec
mov
jl
sahf
mov
pop
rcr
out
sbb
adc
insb
sbbb
pop
sbb
jne
les
in
xchg
enter
mov
and
jecxz
psrlq
addr16
inc
adc
inc
xor
push
mov
jle
mov
cmpsb
push
jmp
ss
lods
cmp
mov
lds
fsts
push
je
jle
ja
xor
sbbl
frstor
pop
inc
rcrl
cmp
mov
adc
xor
nop
test
scas
arpl
lock
push
std
int
and
sbb
scas
addb
xor
cmc
fnsave
repz
daa
or
cli
cli
lretw
jecxz
fcomps
mov
xchg
cmp
rcll
mov
lock
dec
mov
sub
sbb
lock
iret
sbb
mov
jl
cli
ja
movsb
outsb
mov
cmc
int
cwtl
loope
and
sarb
decb
popa
in
das
mov
lock
inc
and
mov
test
xlat
imul
jecxz
xchg
out
fidivrl
jp
xchg
jle
mov
jne
adc
insb
add
repz
sub
stos
jl
ja
not
sbb
xchg
add
popa
ret
mov
xchg
xor
lcall
cld
xor
mov
dec
popa
test
xor
and
sbb
pop
sbb
jecxz
dec
mov
xor
sub
nop
sub
cmpb
mov
pushf
and
jne
lret
adc
xor
push
mov
leave
and
and
mov
ss
incl
sbb
xchg
sarb
mov
insl
jne
and
cmc
pop
jle
clc
push
repz
adcl
xchg
js
mov
int3
dec
arpl
icebp
imull
das
les
mov
out
sub
jmp
daa
inc
lret
sbb
jb
popa
inc
daa
ss
fcmovb
aad
mov
data16
cmp
popf
cli
adcb
lret
xor
lock
sbb
pop
movl
or
add
cli
lea
cmpsl
jbe
xor
inc
mov
mov
jbe
push
in
orl
push
pop
push
push
sub
sarl
mov
loop
pop
xor
ds
fwait
mov
addr16
mov
pop
mov
push
mov
vpsrad
clc
repnz
fdivrs
jle
test
push
sub
scas
cmc
add
push
adc
cmp
mov
push
cmpsl
inc
in
cmc
mov
mov
jle
sbb
ja
xchg
mov
imul
jmpw
dec
movsl
hlt
pop
or
clc
sub
lods
iret
and
stc
push
cmpsl
or
in
or
adc
ss
inc
pop
out
in
sbb
pop
aaa
clc
and
clc
mov
dec
lds
sub
mov
adc
pop
push
jae
pop
fs
cs
push
cmove
push
test
aad
jb
arpl
adc
pop
je
nop
jno
push
in
xchg
hlt
hlt
push
hlt
mov
loopne
mov
push
xchg
sahf
sub
jp
xchg
insl
push
inc
dec
sub
mov
cmp
mov
inc
aaa
pop
jo
pushf
add
xor
mov
outsl
ja
sub
cmp
or
stos
idiv
std
roll
movsb
adc
adc
add
lret
xchg
loopne
mov
mov
pop
mov
insl
stc
lock
sbb
adc
icebp
inc
dec
fbstp
les
js
mov
or
mov
pop
call
and
mov
hlt
loopne
mov
sub
sub
aam
lret
rorb
jb
pusha
leave
pop
lods
adc
aam
xor
or
pop
shlb
divl
ret
incb
dec
or
or
insl
mov
mov
sbb
or
daa
testl
stos
xchg
clc
xor
ja
jmp
sbb
div
popa
jno
pop
adc
cmp
cmp
cmp
insl
mov
push
inc
and
inc
xlat
icebp
insb
je
push
testl
xor
sbb
pop
fwait
push
and
fs
mov
cmp
lods
sbb
lea
inc
adc
push
rorl
mov
jb
mulb
jo
rol
fldt
adcb
gs
arpl
and
aam
adc
or
bound
add
ret
push
dec
decb
adc
cmp
sti
pusha
adc
popa
shlb
cmp
mov
fildll
pop
aam
jo
loop
add
dec
xor
in
jge
cmpsb
mov
stos
icebp
sbb
mov
fadds
in
fcmovnbe
cmp
cmpsl
jp
cmpsl
push
xchg
imul
adc
sbb
mov
test
push
push
or
subl
xor
cmp
popf
imul
xchg
jp
mov
and
jl
mov
inc
fs
iret
popa
or
popa
out
aad
icebp
cmp
pop
lock
test
mov
popf
iret
ljmp
and
cmpsb
jb
mov
repnz
in
inc
fisttpl
dec
shrl
lcall
rolb
xor
mov
loopne
imul
or
les
jg
divb
fistpl
mov
clc
sbbb
shlb
pop
add
jnp
dec
js
leave
jmp
xor
imul
pop
jne
nop
outsl
add
mov
ficomps
mov
cmpsb
cmpb
or
out
ffreep
jns
push
int
jmp
ds
stos
push
popa
xchg
aaa
sbb
adc
or
ss
jb
dec
addb
mov
sti
mov
and
sbb
push
xchg
push
out
rcr
lcall
dec
mov
out
xchg
mov
clc
ret
ret
mov
pop
push
out
int
jl
cltd
or
sbb
jne
pop
push
mov
xchg
in
insl
sbb
mov
dec
je
push
jne
inc
cld
std
daa
jno
shll
and
sbb
scas
push
cmp
ljmp
sub
pop
add
ljmp
cmp
int3
bound
mov
lock
les
jl
push
ret
pop
mov
sahf
dec
dec
add
in
cwtl
mov
clc
mov
stc
push
dec
lcall
mov
inc
jne
mov
lahf
pop
push
imul
pop
gs
mov
mov
dec
mov
mov
stc
ss
jae
insl
inc
ja
ds
mov
lock
xlat
push
pop
jo
faddl
sahf
fidivl
jecxz
out
push
adc
push
fimull
cmp
adc
addl
lock
rcll
ret
outsb
and
and
jbe
push
bound
pop
cmp
dec
aad
xchg
ljmp
lock
lret
outsb
loopne
cmp
jmp
or
mov
icebp
xor
lock
mov
mov
aad
mov
mov
shl
enter
clc
xor
sub
cmp
push
inc
cwtl
push
xor
add
add
fs
mov
xchg
fsubrl
add
pop
cmp
jmp
cmp
imulb
cmp
xor
subb
xor
mov
pusha
add
sub
test
sbb
and
pop
push
xor
dec
and
lods
xchg
xchg
and
adc
mov
cli
adc
test
jb
inc
mov
daa
lds
or
adc
push
adc
mov
adc
jbe
xchg
movsb
cmp
xchg
popa
and
inc
or
clc
orb
lahf
fcomp
test
xlat
daa
aas
sbb
adc
cmp
jmp
lea
lea
sub
cld
sarl
add
jl
testb
ja
inc
pop
sub
adc
mov
cwtl
or
shl
bound
or
rcrb
xor
push
jae
jo
mov
adc
outsb
inc
pop
add
js
xchg
add
hlt
or
aas
subl
sahf
adc
jae
adc
cmp
and
aaa
loopne,pt
or
aas
andl
add
jp
cli
out
stos
add
inc
mov
cltd
popf
stc
pushf
sbb
mov
lock
test
mov
jmp
ds
aam
hlt
jbe
mov
add
sti
push
adc
ss
addr16
in
adc
pop
sahf
out
mov
pop
cmpsb
xchg
pop
add
sbb
push
pop
pop
clc
add
sbb
out
push
mov
shl
scas
insl
int
pop
xor
popf
inc
int
int
and
scas
and
fidivl
mov
mov
scas
pusha
pop
adc
jo
sbb
xchg
pop
repnz
push
scas
and
jecxz
add
dec
or
pop
hlt
sbb
ljmp
enter
fildl
lret
out
mov
sbb
imul
mov
flds
xchg
out
and
lea
mov
push
inc
push
stos
push
fstpl
and
out
loope
cld
sub
mov
adc
sbb
test
mov
push
das
mov
sub
push
mov
adc
add
stc
sbb
mov
inc
push
mov
mov
shlb
icebp
sub
subl
adc
std
cmp
adc
movsl
stos
lret
mov
rol
jl
popf
std
lcall
mov
lea
pmulhuw
das
flds
mov
stos
and
lods
add
xchg
push
sub
fidivrl
lds
insb
pop
adc
testb
push
dec
cmp
mov
sti
cmpsb
adc
es
adc
je
pop
pusha
or
and
xor
fisttpll
aad
inc
cmp
add
jge
aam
das
cmp
adc
ljmp
xchg
mov
bound
stos
push
add
cmp
loopne
mov
mov
shlb
and
data16
lahf
add
or
int3
dec
xchg
xor
es
bound
inc
movl
rorb
jno
push
cmc
in
bound
movsl
mov
and
ds
sub
insb
pop
cmpsl
adc
adc
stos
shrl
mov
arpl
dec
hlt
mov
inc
push
inc
movsl
add
sbb
xor
movsb
fisubl
inc
fs
xchg
repz
mov
je
lcall
andb
cmpsl
jge
movsb
mov
mov
sbb
cmp
pop
loopne
ret
dec
inc
int3
mov
mov
mov
aad
push
xchg
test
ret
xlat
sub
mov
add
cmp
sbb
aam
mov
lret
pop
or
jmp
mov
arpl
fwait
inc
lfs
cmp
aas
pop
mov
mov
sbb
lods
lcall
adc
cmp
dec
bound
leave
repnz
adc
test
add
cmp
ds
cld
mov
inc
push
pop
and
in
dec
mov
stos
xchg
add
hlt
mov
test
int3
dec
call
mov
jecxz
jge
jl
insb
shlb
mov
xchg
xchg
cli
mov
mov
sbb
add
pop
arpl
push
aaa
enter
aad
rorb
mov
shr
and
pcmpgtd
jge
dec
mov
mov
insl
mov
adcw
push
pusha
nop
push
ret
jge
pop
fidivrl
lods
outsb
hlt
fldcw
cmp
adc
out
test
cmp
mov
aaa
fxch
inc
addb
aad
cmp
movsl
ss
and
addl
daa
push
jle
mov
testl
xor
lahf
mov
jb
mov
movsl
add
inc
push
inc
repz
xorb
jmp
inc
repnz
scas
cli
push
xor
insl
lret
movsb
pop
jbe
insb
jbe
add
cmp
enter
inc
or
jne
lods
xchg
nop
push
ret
and
lahf
mov
mov
add
subl
mov
jmp
cmp
cmpneqps
cmp
je
jp
dec
popf
xor
pop
inc
rol
cmpsl
add
cwtl
jge
pop
xchg
les
dec
andl
inc
mov
add
inc
out
push
adc
pop
sub
aaa
mov
xchg
push
fiadds
inc
and
adc
sub
push
test
or
ret
push
popf
dec
cmp
aad
in
inc
test
and
mov
add
or
movsb
mov
scas
loopne
es
push
mov
xchg
pusha
sti
xor
pop
add
lods
mov
adc
sub
dec
jle
jl
je
and
test
sub
arpl
out
add
stc
or
into
mov
sbb
push
leave
or
scas
mov
fs
add
jbe
not
pushf
test
xchg
dec
sbb
mov
daa
ficomps
pushf
mov
es
xor
hlt
xchg
cmpsb
dec
std
out
aas
clc
mov
clc
inc
pushf
imul
jne
pop
jne
lcall
adc
or
cwtl
roll
movsb
sub
sarb
clc
leave
pushf
es
sbb
mov
add
or
lock
rcl
iret
xchg
and
arpl
jl
clc
xchg
cmp
inc
mov
lods
pop
testb
push
dec
mov
test
xor
cmp
imul
loop
call
push
nop
andl
pop
mov
mov
lock
in
outsb
cmp
popf
mov
mov
pusha
sbb
mov
xchg
pop
xlat
iret
lret
xchg
add
and
sti
loopne
xor
and
mov
mov
icebp
in
sbb
aam
rolb
sbb
xor
dec
das
daa
jge
daa
xor
stc
or
dec
ficoml
or
stos
ret
push
sbb
dec
or
inc
or
cmpsb
sbb
popa
btr
mov
dec
ret
xor
sarb
in
iret
pushf
xor
or
jmp
and
inc
nop
xchg
push
cs
mov
pusha
or
pop
cmp
push
rolb
mov
sar
mov
fld
pop
loopne
lret
mov
test
xchg
aad
cwtl
xor
fbld
xchg
out
push
pop
lret
jnp
in
ficoms
xchg
and
lock
pop
aaa
jo
idivl
jo
add
lret
sub
nop
nop
mov
mov
insb
iret
leave
mov
ss
es
add
and
les
flds
or
xchg
cmp
dec
xchg
pop
adc
loope
pop
cwtl
imul
aam
pop
test
xor
mov
fsub
scas
dec
insl
mov
mov
dec
pushf
sbb
jno
stc
mov
insl
jb
jmp
test
xchg
orb
outsl
sub
mov
inc
cmp
rcrb
cmp
maskmovq
or
inc
cli
sbb
mov
mov
push
xor
popa
xlat
dec
add
mov
out
and
jge
addb
pop
jge
out
rclb
pushf
sarb
add
outsb
inc
lahf
divl
cmp
adc
nop
push
jnp
sbb
mov
sbb
push
and
mov
xchg
sbb
dec
cli
dec
mov
mov
mov
aad
mov
stos
xchg
out
and
lahf
jmp
inc
pop
int
jnp
dec
cmc
ret
cs
add
inc
jnp
mov
mov
mov
sbb
call
lods
test
pushf
xchg
inc
imul
adc
lcall
or
or
mov
loope
or
stc
mov
fimull
mov
push
dec
addb
and
stos
add
cmp
mov
push
jp
cmpsb
aaa
rolb
mov
jno
pop
inc
ficoml
out
push
daa
hlt
std
mov
inc
sbb
inc
sbb
and
and
mov
cmp
ja
jecxz
hlt
pop
js
mov
or
out
sub
enter
js
out
in
mov
repnz
dec
pop
outsl
or
cmp
cwtl
mov
dec
push
cmp
xor
xor
mov
sbb
clc
cmp
sahf
lock
cld
fstp
aam
dec
rcll
or
dec
insb
mov
ds
or
sub
test
jae
addps
fbld
mov
jo
hlt
pop
sarb
jp
add
pop
xchg
inc
pop
test
adc
in
jl
xchg
xor
imul
adc
pop
sarb
fimuls
in
rcl
pop
mov
icebp
leave
xchg
je
mov
je
sub
dec
cmpb
mov
inc
and
push
lahf
in
movsl
lea
clc
jne
push
call
stc
loop
sbb
mov
pusha
cmp
fisubs
pop
addr16
shlb
sbb
mov
scas
and
pop
outsb
jge
and
push
push
cmp
or
lds
dec
dec
and
int
pop
subb
push
in
sbb
mov
lods
xchg
adc
loope
sbb
add
mov
lret
mov
push
adc
loop
stc
mov
and
sbb
pcmpeqw
and
jecxz
out
mov
push
adc
rolb
lds
setge
inc
mov
loop
mov
and
xchg
xchg
adc
mov
es
dec
mov
mov
fcomps
jmp
inc
dec
xchg
mov
idivb
fs
cltd
into
into
js
shlb
add
mov
shrl
cld
xor
loope
daa
or
enter
hlt
in
or
mov
popa
shrl
xorb
dec
mov
push
sub
loopne
mov
push
sbb
mov
cmpsl
fists
daa
sub
jo
out
call
es
aaa
sbb
sahf
cmp
cmp
mov
mov
sub
test
dec
sbb
loop
and
cltd
add
daa
add
js
add
shlb
arpl
call
je
sahf
jbe
jae
mov
movl
jl
bound
mov
pop
shrl
pop
or
repnz
jecxz
sbb
ficomps
cmpsl
dec
jno
adc
je
mov
push
rcl
adc
das
xchg
out
shll
sub
int3
and
scas
sub
inc
aas
ds
jg
ljmp
adc
test
mov
loopne
lidtl
mov
aad
fs
das
ret
pop
jno
xchg
lahf
jp
or
pop
adc
mov
pop
filds
and
inc
mov
xchg
mov
pop
lock
dec
pop
xchg
lea
test
mov
das
xchg
xchg
idivb
mov
adc
jg
xor
cmp
xchg
daa
jle
mov
fistps
sub
add
xchg
das
xor
pop
dec
dec
adc
std
jbe
outsb
pop
inc
push
add
gs
add
dec
sahf
cmpsb
fcmovnu
sbb
dec
or
push
imul
inc
sahf
out
mov
mov
cmpsl
jns
jmp
jns
cmpsl
xchg
pop
xchg
pop
nop
int
fcmovnb
jb
das
pop
jle
sbb
dec
ds
idiv
aaa
cmp
lcall
pushf
std
out
pop
dec
xchg
inc
aas
shll
adcl
and
enter
fwait
push
jb
mov
jb
jo
xlat
or
divl
xchg
cmp
rorl
mov
rcll
xorl
cmpb
xchg
repnz
repz
je
sbb
mov
orb
cli
mov
xchg
xor
out
xchg
cmp
das
cltd
scas
jmp
enter
scas
mov
and
test
push
jb
mov
lods
jno
cmp
scas
lods
inc
scas
cmp
inc
inc
jnp
icebp
lds
sti
and
int3
fcompl
pop
enter
pushl
stos
inc
push
cmp
mov
nop
test
scas
mov
xchg
jbe
xchg
pushl
sbb
pop
xchg
dec
mov
jmp
xchg
lods
jge
cld
xchg
sub
cmp
mov
ja
cld
sub
mov
je
js
nop
mov
decl
imull
xchg
lcall
repnz
roll
ljmp
add
or
or
cli
out
jecxz
xchg
arpl
popl
and
aaa
inc
imul
nop
xchg
outsl
scas
mov
subb
hlt
mov
or
insb
lods
sahf
test
add
enter
sub
in
or
or
rorb
lea
bound
add
add
add
jne
mov
jmp
jmp
shr
inc
stos
inc
test
and
mov
add
out
and
add
rolb
fwait
insb
ss
int
or
adc
jecxz
jmp
adc
repz
sub
jns
add
mov
sbb
and
and
jmp
jns
leave
sahf
fstl
mov
out
add
mov
xchg
mov
mov
scas
inc
lock
ja
mov
or
test
mov
push
mov
out
nop
push
push
and
push
or
in
push
pop
pop
pop
imul
xchg
popf
int
sahf
out
xchg
or
mov
int
cmp
mov
cmp
sarl
xchg
popf
pushf
ds
or
stos
lcall
cwtl
imul
fsubs
movsl
xor
xchg
mov
popa
push
scas
in
xchg
xchg
das
into
in
cmp
cld
jg
pop
dec
inc
aaa
dec
mov
xchg
cmp
push
mov
cld
add
xor
ljmp
das
enter
enter
mov
sub
decl
les
mov
dec
inc
xchg
jle
popa
adc
pop
in
aad
sub
xchg
cmp
xor
xchg
xor
xlat
cmp
outsl
outsb
sti
mov
xchg
cmp
jle
insl
fucomi
xchg
add
inc
stos
sbb
add
iret
cmp
mov
sbbb
das
mov
test
mov
jge
insl
sbb
and
and
lcall
daa
adc
pop
sub
xor
std
lods
roll
dec
xchg
les
dec
sub
cmc
lea
or
inc
or
pop
fnstsw
pop
das
jo
cmp
iret
out
ret
sub
mul
sahf
into
xchg
ret
xlat
and
adc
rolb
push
sub
and
cmp
lods
cwtl
fcmovnb
mov
xor
lret
divb
aaa
inc
xlat
subb
xor
xchg
out
add
lcall
decl
stc
mov
mov
fcmovnu
mov
cld
data16
xor
xchg
mov
xchg
jb
cwtl
test
lods
xchg
pop
xor
std
std
mov
dec
shl
repz
cmc
idivb
scas
stos
mov
pushf
int3
sbb
stc
fcompl
add
mov
pop
mov
pop
xchg
mov
xchg
xchg
pop
sub
lds
jl
aam
pop
mov
insb
call
mov
lods
sub
les
in
cs
cs
mov
rorl
notl
shr
adc
les
imul
in
jecxz
adc
rcrl
xchg
or
or
pop
outsb
cmovae
mov
or
outsb
out
aaa
jae
test
or
push
ret
fstpl
push
or
das
xlat
mov
ret
test
mov
fistpll
aas
xchg
cmp
pushf
push
dec
sahf
add
scas
fsts
test
pop
ss
rcr
push
dec
or
adc
jnp
lock
or
add
aam
out
enter
and
inc
adc
add
scas
leave
mov
fdivrs
enter
int
cs
add
add
stos
and
and
inc
ret
fwait
lret
inc
roll
add
and
push
jg
xchg
dec
sub
xchg
xchg
adc
iret
jb
add
jecxz
fnstsw
pop
inc
ret
inc
mov
cld
cmp
sbb
cs
nop
lahf
jo
shrl
imul
or
sub
icebp
fadds
mov
das
insl
into
or
lret
or
mov
add
es
rcrb
test
add
add
enter
arpl
and
iret
xchg
add
add
mov
repnz
xchg
mov
cld
aam
xchg
pop
nop
mov
and
add
push
inc
rolb
test
call
das
dec
ret
cmp
hlt
push
xor
sub
mov
into
dec
mov
add
mov
sti
add
inc
add
data16
lods
pop
or
in
xchg
lret
jp
mov
rcrb
fmull
idivb
cli
mov
mov
cld
mov
mov
push
lock
mov
inc
cs
lods
shlb
roll
mov
mov
push
das
lret
xor
inc
aas
cmp
shlb
lds
fildll
mov
in
push
dec
ret
jno
iret
mov
out
and
mov
mull
fisubrl
lds
xchg
in
test
fimull
cld
add
sbb
in
jg
shl
sub
dec
icebp
cld
xor
push
fistps
mov
mov
rcr
mov
dec
xchg
neg
pop
outsb
add
dec
dec
sbb
hlt
cmp
adc
push
repnz
mov
mov
outsl
stos
leave
dec
mov
push
cs
push
add
push
cmpsb
mov
outsl
lock
add
mov
inc
daa
sbb
ljmp
mov
dec
test
mov
push
push
popf
and
outsb
or
mov
fbstp
xor
push
add
sub
imul
xchg
outsb
fbstp
jno
cltd
push
lret
mov
in
sub
push
add
les
pushl
push
es
fisttpl
xor
jo
push
and
loopne
inc
movsb
les
add
mov
mov
movsl
mov
cmp
nop
and
and
fs
aaa
cmp
rorl
xchg
inc
aas
pop
data16
lods
xchg
fimull
aas
and
inc
xchg
and
xchg
mov
jae
cmp
sbb
call
xchg
cltd
nop
in
subl
daa
insb
lret
mov
or
imul
push
mov
dec
dec
or
iret
xor
ss
popf
mov
insl
jns
mov
mov
sub
imul
pushf
outsl
btc
adc
aas
dec
repz
std
outsb
movsl
push
enter
xor
ljmp
fistps
hlt
adc
dec
roll
dec
rcrl
enter
mov
or
add
jo
add
inc
fs
sbb
and
andb
vandnps
out
enter
pop
inc
enter
xchg
pop
nop
lock
push
xor
push
push
jo
add
xor
test
mov
xchg
ja
js
enter
aad
adc
xor
enter
ss
mov
insl
cmp
add
dec
das
xor
ret
xchg
in
or
dec
inc
jb
push
les
movsb
mov
add
addr16
and
dec
outsl
imul
pop
push
das
inc
popf
aam
xor
aam
popa
and
inc
bnd
lds
int
sbb
es
inc
repnz
lret
cli
mov
hlt
mov
add
or
ret
and
movb
jmp
dec
inc
ss
lret
mov
mov
xchg
nop
push
inc
inc
push
repnz
add
sub
nop
add
nop
adc
jns
push
and
aaa
xor
and
nop
ficompl
sub
lds
and
enter
dec
shll
pop
add
add
adc
nop
lret
add
jne
dec
das
and
jbe
dec
mov
int3
lret
inc
lds
rolb
enter
flds
nop
adc
add
xor
cmpsb
arpl
dec
push
inc
aaa
enter
lock
push
hlt
or
mov
sbb
lahf
lahf
outsl
iretw
push
push
mov
divl
inc
and
cld
add
dec
fcos
lcall
cmp
test
sub
pop
xchg
pop
and
sub
jl
pusha
pushl
outsl
sub
pop
add
push
mul
jmp
push
sub
clc
fistl
jo
sub
add
inc
and
add
gs
outsl
push
add
mov
call
adc
rorb
sbb
out
adc
sbb
xor
mov
ficoml
push
push
cli
cmp
jl
dec
and
mov
outsl
andb
dec
add
jns
inc
shrb
mov
add
daa
mov
call
push
xchg
xchg
push
pop
push
subl
es
sbb
jae
shrb
iret
outsl
and
dec
inc
jmp
adcb
inc
inc
mov
xor
and
cmpsb
add
or
loopne
cmp
fsubs
cmp
in
mov
xlat
and
loopne
and
adc
popa
and
ljmp
xchg
ret
add
das
xor
jp
adc
in
lret
mov
sub
loope
pop
mov
cwtl
ss
mov
out
adc
je
subb
nop
into
in
xor
sti
call
and
repz
hlt
adc
jge
mov
setb
in
repnz
jl
ja
and
jge
sahf
stc
push
mov
sbb
pusha
adc
mov
or
shlb
fwait
or
push
xor
enter
shrb
jg
mov
xor
inc
faddl
loope
and
pop
push
jl
jmp
add
in
out
test
filds
push
mov
pop
mov
repnz
iret
add
fadds
sub
push
outsl
call
xchg
sbb
aad
test
dec
loop
sbb
mov
and
mov
add
xchg
sbb
jne
or
sbb
imul
cmpsl
arpl
push
xlat
sbb
loope
mov
shr
sub
incl
xchg
xchg
sbb
mov
adc
sub
ljmp
mov
mov
xchg
movsl
cli
gs
andl
fsts
mov
push
or
dec
mov
or
cmp
outsl
les
sub
stos
inc
xchg
xchg
mov
xchg
roll
sub
lahf
sub
sub
and
jg
jl
sbb
sub
ss
sub
les
fildl
sub
call
pop
jne
out
or
scas
or
add
loopne
arpl
std
and
push
xor
je
fstl
insb
push
push
aas
inc
cmp
dec
sub
pushl
push
scas
bound
sbb
icebp
aam
cs
call
xchg
stc
mov
ljmp
aam
cmpsl
imul
sbb
fldl
dec
pop
xchg
adc
and
inc
loopne
push
out
mov
ljmp
aas
sub
mov
cmp
inc
clc
push
jp
cli
test
sbb
pushl
fcompl
loopne
mov
push
in
data16
enter
jp
inc
aad
js
pop
jp
xor
idivb
ljmp
icebp
test
lcall
cli
mov
push
testb
movsl
clc
rclb
add
ds
gs
mov
andl
imul
and
pop
push
jp
mov
mov
inc
adc
js
out
xor
popa
pop
mov
adc
push
jg
jg
cmc
int3
insb
inc
xor
inc
test
and
add
jbe
stos
fstpt
mov
ds
je
out
imul
lret
std
lcall
mov
jecxz
push
les
mov
mov
cmp
movsl
push
out
incl
and
arpl
scas
lret
inc
cmpsb
pusha
lret
sarb
sub
push
push
imul
push
or
cmp
mov
push
or
inc
cmp
mov
je
ret
out
sti
inc
pushl
sub
lret
in
xchg
shlb
or
out
mov
or
inc
dec
cld
pop
xor
int3
bound
mov
or
push
pop
pop
xor
pushl
loop
mov
int3
mov
push
dec
jae
scas
push
dec
in
mov
incl
cmp
test
push
fldl
sub
xchg
xor
ljmp
jl
and
jb
adc
jmp
data16
cs
lret
incl
cmp
cld
sub
jp
and
mov
ss
add
adc
mov
add
push
outsb
outsb
aaa
jnp
push
push
fildll
scas
pop
adc
add
jl
push
mov
xchg
mov
cld
movsl
add
hlt
inc
movsb
ds
sub
dec
mov
dec
sarb
and
add
adc
adc
fcomip
lret
push
and
hlt
sub
adc
mov
movsb
lods
icebp
sub
mov
adc
add
jae
pop
je
pop
cmp
sbb
jmp
pushf
xor
sub
loopne
addl
xor
adc
xchg
xchg
jge
loope
out
jnp
es
or
sub
sbb
mov
add
mov
test
sbb
ljmp
das
cli
sbb
in
jmp
push
mov
loopne
inc
push
mov
dec
mov
xor
cmp
sub
mov
movl
divb
addr16
and
sbb
sbb
int3
add
das
cld
aas
ljmp
dec
inc
loope
imul
cli
cmp
pop
clc
testb
movsl
pop
aaa
dec
push
fstpt
outsb
push
or
mov
dec
and
incl
mov
jns
sbb
or
mov
mov
call
mov
or
xor
or
push
outsl
push
sub
loopne
outsl
jmp
push
call
aad
xor
ds
ret
mov
push
xor
mov
imul
add
jns
daa
mov
sub
lret
mov
and
or
sub
decl
icebp
push
or
adc
cs
pushl
dec
and
adc
pusha
inc
mov
xchg
and
lret
adc
sub
js
pushf
ss
aam
mov
push
mov
pop
sub
wrmsr
adc
or
addl
out
inc
clc
ret
push
inc
aad
mov
sbb
pop
lahf
mov
pushf
sbb
mov
dec
dec
sub
xchg
push
pop
push
test
pop
jle
pop
aas
and
rol
cmp
in
std
mov
loopne
imul
arpl
pop
aam
jmp
sub
push
add
pusha
int3
or
dec
push
shl
pushl
or
lock
or
loopne
leave
sti
ljmp
push
jne
mov
aaa
or
mov
mov
fadd
push
dec
sub
pop
jo
add
push
ljmp
and
or
adc
jmp
rol
call
cmp
mov
int
jg
imul
push
jae
mov
mov
jg
sbb
cmpl
mov
in
popa
ret
dec
lahf
pop
jb
pop
mov
sub
into
and
sar
ljmp
ret
xorb
jbe
push
repz
out
int3
push
mov
pop
stos
shrb
mov
and
cmp
cmp
out
push
sar
and
movsb
inc
shrl
inc
fildl
cmp
fwait
aad
and
repnz
xchg
shlb
sbb
mov
mov
sbbb
mov
test
popa
sub
lea
fbld
pop
cld
iret
mov
sbb
stc
std
xchg
fucomi
dec
jmp
lcall
push
inc
adc
sbb
mov
adc
push
jp
fstpt
sub
cld
into
mov
icebp
pop
jmp
sti
test
mov
mov
add
xchg
push
fbld
mov
outsl
inc
pusha
loope
or
mov
dec
xchg
ljmp
out
jp
xchg
inc
jbe
insb
mov
inc
repnz
jb
push
push
mov
jg
xchg
xchg
sub
cmp
mov
and
inc
lea
push
ljmp
mov
add
int3
out
pop
inc
mov
andl
rolb
fdiv
in
daa
push
xor
mov
mov
mov
clc
dec
clc
mov
fs
jb
adc
test
sub
sbb
sbb
or
sbb
fisttps
lods
cltd
jo
rorb
cs
cli
jmp
add
pop
fs
rcll
mov
dec
add
stos
pop
adc
or
mov
pop
xor
fldt
cld
pop
mov
mov
xor
adc
fcoml
pusha
call
xor
call
cmp
or
push
mov
mov
rorl
mov
outsl
std
mov
xchg
lret
inc
mov
jbe
cltd
je
cmp
mov
stos
pop
shlb
je
inc
lahf
mov
test
outsl
std
or
rcll
dec
pop
or
and
leave
mov
push
sub
inc
mov
test
or
aaa
int
sbb
call
sbb
adc
bnd
or
and
jg
mov
cmpsb
and
mov
xchg
xchg
cmp
inc
es
pop
jle
ret
aam
or
pusha
push
xchg
sub
dec
bswap
xor
cmpsl
adc
jge
or
push
scas
sbb
adc
lcall
ljmp
push
pusha
adc
pop
aam
push
dec
xchg
bswap
fprem1
and
sub
lcall
sar
or
pushf
cmp
inc
daa
bsf
push
inc
lods
push
pop
lret
mov
cmp
and
in
jmp
push
hlt
and
pop
inc
xchg
lahf
aad
or
lahf
and
hlt
fstpt
and
test
xchg
add
pop
adcb
mov
insl
into
lods
xchg
ss
mov
cltd
lock
scas
sub
push
je
out
add
push
stos
daa
or
mov
jl
push
lods
pop
pop
in
aas
sbb
sbbb
adc
adc
daa
mov
xor
sub
xor
cmp
ss
decl
decl
cmp
mov
dec
in
jg
jae
dec
push
push
mov
addl
inc
decl
shll
inc
add
mov
sarl
pop
cmp
mov
int3
mov
pop
sbb
call
cld
inc
fs
cli
enter
pop
mov
les
add
mov
repz
fnsave
cmp
mov
or
std
sub
mov
jo
pop
xor
rolb
pop
inc
cmp
lcall
outsl
mov
jo
loopne
cld
pop
or
sub
push
xchg
mov
or
scas
lcall
jmp
ljmp
mov
cwtl
mov
das
adc
mov
cmp
inc
inc
mov
fldt
adc
pop
sbb
mov
and
push
mov
xchg
sbb
aam
dec
xlat
ffreep
pop
push
gs
orb
xor
sub
inc
aam
pand
test
je
inc
lret
scas
mov
sub
mov
fisttpll
incl
in
in
jmp
mov
xchg
pop
fisttps
sbb
or
jg
mov
fildll
aad
aam
xchg
nop
and
sbb
ret
aas
push
dec
sub
imul
neg
lahf
and
test
mov
das
and
int
cmpsl
xorl
fistpll
add
cwtl
dec
add
outsl
aaa
shl
inc
xchg
pop
std
clc
mov
jg
movsb
iret
pop
lcall
dec
testb
decl
sbb
pop
mov
push
js
pop
mov
movsl
ds
inc
into
imulb
inc
push
xor
sti
in
stc
test
incl
negl
dec
dec
pop
push
xor
lock
push
mov
addr16
cmp
ss
pop
cld
adc
fs
pop
mov
push
jl
mov
mov
and
adc
add
cli
lcall
data16
xchg
jle
or
push
cwtl
sub
adc
pushl
aam
int3
mov
xor
sbb
orb
popa
aaa
out
and
push
xchg
dec
rcrb
jns
dec
mov
push
mov
push
insb
ljmp
pop
mov
out
adc
negb
xchg
xchg
cmp
and
adc
rcrb
arpl
dec
in
cmp
or
mov
test
mov
sbb
iret
cli
fildll
and
dec
dec
dec
cmp
jmp
jge
mov
int
sbb
mov
sbb
call
sub
xchg
imul
xchg
inc
mov
lock
dec
int3
mov
sbb
pop
push
push
mov
mov
or
push
hlt
popa
sbb
or
loop
mov
cmp
jl
and
aad
rcll
mov
call
inc
xchg
ficompl
stos
dec
xchg
loope
mov
inc
fs
pushl
sbb
jp
xchg
cmp
adc
ljmp
mov
incl
lret
lods
ljmp
es
call
mov
dec
lods
aad
pop
jne
pusha
mov
mov
idiv
lcall
in
xchg
js
or
mov
nop
sub
repnz
movsl
or
pop
gs
pusha
fiadds
shrl
jg
in
jl
es
stc
hlt
adc
ja
fxtract
add
inc
addr16
sbb
test
paddq
sub
test
call
movsl
test
int3
jle
fisubs
mov
fwait
pop
loope
mov
and
push
sti
and
add
ljmp
stos
mov
push
bound
test
mov
outsl
push
push
rcr
fists
pop
inc
loop
mov
inc
inc
jl
mov
mov
pushl
sub
fidivrs
outsb
fisubrl
jg
sub
dec
ret
mov
xor
sbb
xchg
call
das
jg
in
dec
test
push
adc
popa
jns
mov
cmp
add
pushf
std
mov
jo
hlt
ss
fistpll
and
fldenv
cmp
mov
xchg
out
push
mov
push
int
push
enter
push
out
cmpsb
imul
mov
pop
cmp
std
mov
shr
xor
pop
pop
aaa
filds
push
inc
lock
mov
pop
stos
clc
lret
lcall
ret
imul
das
mov
mov
xchg
adc
or
adc
mov
jg
dec
adc
jbe
pop
and
cwtl
je
into
and
loop
jbe
xchg
scas
gs
pop
or
ljmp
adc
push
test
push
jno
arpl
movq
sub
inc
jle
testl
sub
rcl
rclb
incl
orb
lock
add
mov
add
andl
je
ds
jns
mov
push
aaa
add
jge
inc
lods
mov
and
dec
imul
stos
int
xor
lock
adcb
mov
push
pop
lock
dec
and
nop
fsubrs
aad
loop
into
das
stos
call
ljmp
jle
inc
vpcomuw
or
jg
enter
fldenv
sbb
lods
inc
jmp
dec
decl
clc
dec
pop
jl
push
mov
loop
outsl
cmp
dec
and
aaa
sbb
push
add
and
sub
fstp
test
das
push
cmp
push
nop
notb
out
call
adc
mulb
cli
sub
outsl
cmp
pop
xorl
mov
pop
in
adcl
mov
xlat
inc
add
xchg
pop
mov
xor
ljmp
jae
into
inc
or
dec
mov
push
outsb
outsl
xor
mov
ljmp
mov
pop
rol
pushl
call
mov
push
pushl
hlt
cmp
mov
gs
je
je
adc
mov
lods
pop
loopne
pop
cltd
int
cld
rorl
leave
dec
lock
add
insl
sti
sub
insb
sub
or
jge
call
jmp
ret
testb
decl
cs
inc
or
inc
pop
mov
call
cmp
or
test
dec
data16
lcall
mov
cmpsl
jne
in
lock
imulb
aam
and
frndint
mov
idiv
inc
pop
int3
jge
fcmove
out
nop
jp
or
jg
fucomp
add
adc
adc
sub
lea
test
dec
sub
xor
or
inc
and
sbb
fildll
leave
mov
int3
mov
popf
fisttpl
loop
jl
dec
dec
push
inc
add
nop
mov
sarl
out
sahf
inc
push
movb
push
or
xchg
out
sub
jecxz
ret
add
cltd
push
lds
in
loope
lock
dec
fsubrp
push
mov
cli
mov
xor
jnp
out
ljmp
push
ljmp
lcall
mov
idivl
sbb
cltd
add
pop
movsl
pop
sub
icebp
cmp
xchg
cmp
inc
outsb
mov
and
dec
pop
push
jno
inc
push
mov
insl
mov
fstps
movsb
mov
pop
test
pushf
add
and
call
xchg
add
xchg
into
pop
or
lea
cltd
dec
daa
push
cli
inc
cmp
mov
subb
mov
cltd
pop
test
dec
rcl
mov
gs
test
je
inc
pop
jp
mov
adc
test
aas
es
enter
cld
lods
jns
jno
jae
les
repnz
cmc
jg
pop
enter
or
movsw
mov
pop
je
loope
insl
push
mov
cmp
mov
push
mov
rcll
rcll
pop
inc
xchg
sub
pop
xor
mov
xor
mov
jecxz
pusha
push
mov
shl
cmc
push
out
cmpsb
xorb
jg
jmp
jmp
jae
test
or
icebp
inc
jl
push
mov
stos
mov
jmp
or
add
call
cmpsb
push
inc
xor
icebp
fdivrs
mov
ljmp
jl
sbb
and
cli
inc
cli
out
sbb
add
push
stc
jmp
test
and
inc
push
cmp
sbb
add
aaa
hlt
mov
aas
call
and
fisttpl
inc
stos
fiaddl
xchg
and
jg
sub
orl
dec
xor
lock
dec
call
inc
loopne
mov
inc
test
mov
sub
push
and
mov
mov
inc
sub
pusha
loope
pushl
mov
push
lea
in
sbb
sub
jl
push
adc
shlb
mov
das
hlt
fisttps
and
cmpsb
scas
addr16
push
test
jge
push
pop
xchg
and
sub
inc
fildl
sbb
je
xor
jo
mov
mov
inc
dec
inc
imul
inc
movsb
dec
ja
mov
inc
stos
aas
push
mov
cmpsb
mov
inc
test
or
into
cmpsl
and
stos
lock
push
sbb
clc
sbb
out
and
and
pop
notl
push
and
jnp
cmp
push
xchg
adc
dec
push
push
mov
jge
add
aas
dec
fcmovnb
push
sbb
cs
in
pushl
cmpsl
test
std
push
popl
inc
jmp
push
stos
inc
fdivl
xor
lods
fisubrs
in
jmp
pop
mov
sub
pusha
jp
pop
xor
add
movsl
sub
jg
aad
and
mov
cmp
call
int3
pop
lods
outsl
lock
cmp
lock
pop
fstl
lcall
jns
jge
add
jmp
aam
push
push
xchg
in
push
cmp
xor
outsl
xchg
or
das
out
sbb
lea
push
mov
jbe
mov
jle
repz
push
fwait
js
icebp
cmp
jns
adc
nop
call
pushl
jne
nop
adcl
xor
pop
mov
fnstsw
popf
and
fs
jno
stc
sbb
and
stos
outsl
std
pop
daa
jo
aas
inc
add
sub
lea
push
jmp
xchg
sub
sbb
push
sub
pop
inc
inc
insl
dec
sub
imulb
pushf
mov
xchg
data16
jg
popa
loop
call
cmp
jnp
and
jmp
les
call
pop
roll
shll
movsl
call
incl
insl
xchg
icebp
mov
lods
push
adc
loope
negb
pop
push
imul
xchg
rcrb
push
das
hlt
adc
fstpl
mov
incl
cmove
aad
jl
add
jbe
adc
orl
shrb
push
lock
lret
xor
push
adc
int3
pop
lret
pop
add
jb
rcr
out
in
outsl
std
push
push
cmpsb
add
sub
add
test
gs
adc
jne
lret
rcll
inc
pop
popf
mov
leave
les
inc
out
or
push
pop
in
cmpsl
mov
stos
pop
sbb
add
dec
pop
dec
jb
outsl
in
iret
sub
jg
rolb
xchg
call
mov
mov
and
sbb
scas
push
xchg
sub
call
mov
lods
pop
sub
or
test
frstor
rclb
stos
call
mov
dec
push
cli
data16
loopw
xor
loope
out
mov
inc
andl
jns
insl
fnstsw
pushl
or
dec
inc
push
hlt
cmp
inc
xor
and
movsl
popf
xorb
shrb
mov
and
decl
sub
stos
and
cmp
lods
pop
xchg
shl
add
testb
push
call
inc
cmc
incl
rcrb
aam
icebp
xchg
and
cmp
mov
cmp
dec
pop
or
movsl
or
ja
lcall
pusha
out
adc
mov
loopne
mov
cmp
lret
cwtl
lret
outsb
sbb
mov
push
stos
in
rolb
cmp
mov
ljmp
out
or
jbe
add
and
cld
push
mov
jge
xchg
fsubp
stc
mov
jb
mov
jle
inc
jg
jg
rcr
into
cmp
imul
sbb
mov
mov
mov
call
lea
mov
pop
mov
jb
fsub
ret
adc
dec
add
push
jbe
jmp
jg
mov
outsb
and
test
add
insb
and
mov
out
jmp
stos
loop
push
arpl
and
ficomps
mov
js
in
hlt
call
sbb
inc
mov
xchg
insb
push
xchg
add
jo
push
jbe
adc
dec
loopne
icebp
inc
movsb
mov
nop
stos
push
mov
aad
ret
push
sbb
pop
dec
cld
decl
add
flds
or
leave
insl
ret
jg
pop
test
cmp
dec
cmp
sbbl
push
insb
xchg
mov
jg
hlt
or
push
mov
cs
hlt
dec
sbb
fnstenv
sbb
or
sub
jae
sub
and
movsl
mov
mov
rcrl
mov
sbb
mov
jmp
or
lea
bound
and
jbe
std
dec
cld
decl
test
push
sbb
inc
inc
mov
dec
fs
pop
aam
xchg
out
loop
mov
xor
insb
call
sub
xor
or
xor
lods
ja
push
popf
cld
sub
lods
gs
fnstsw
mov
mov
adc
dec
subb
push
add
jl
nop
shr
movsb
dec
scas
loopne
fs
mov
xor
jge
cmp
add
rcrl
inc
das
fdivr
or
and
fnstenv
mov
jnp
add
add
or
xchg
test
test
add
mov
imul
and
stc
xchg
jecxz
pop
clc
lods
add
inc
fadds
or
leave
ret
sbb
cmp
push
mov
gs
mov
mov
inc
add
stc
inc
repnz
xorl
xor
cmp
std
lods
fmulp
insl
fidivrs
pop
sub
imul
stos
cmc
jmp
push
inc
mov
iret
and
filds
shll
daa
cmp
imul
hlt
mov
sti
sbb
stc
and
mov
adc
cld
fstpl
rclb
inc
mov
dec
mov
push
push
jl
cmp
jg
pop
nop
xor
or
mov
les
or
mov
xchg
mov
stos
inc
rorl
or
and
pop
mov
std
mov
sbb
cld
add
ss
lods
pusha
loope
stos
jecxz
or
aaa
fadds
and
imul
or
lcall
imul
fistpll
fs
jne
call
sub
cmp
loope
mov
inc
inc
inc
popf
add
outsb
hlt
mov
add
stos
xorl
sub
imul
cwtl
xchg
enter
mov
icebp
aas
and
mov
lods
test
adc
test
outsl
fbstp
aam
or
xor
xchg
mov
or
incl
mov
loop
pop
cmpl
das
aad
stos
mov
sti
cmp
test
sbb
push
fisttps
fcmove
fs
add
aam
jae
xor
call
stos
cmp
aas
test
push
inc
in
repz
rcl
and
lcall
lea
dec
test
and
lock
dec
test
sahf
jecxz
xchg
or
cmp
cmp
mov
insb
jg
and
imull
push
cli
mov
fcmovnu
adc
push
mov
mov
mov
xlat
subb
and
std
loopne
sbb
push
inc
cmp
pop
mov
dec
dec
mov
in
dec
mov
pop
bound
jge,pn
jmp
xor
in
or
lods
jmp
mov
addl
es
lret
jmp
mov
add
sbbl
jg
incl
inc
sub
stos
mov
cmp
es
pop
and
sbb
in
fstp
in
xor
loopne
pop
mov
mov
mov
insl
pop
mov
lock
loopne
imul
sub
imul
or
dec
dec
and
jno
lcall
and
cmc
or
call
aaa
mov
test
fstpt
pushl
jmp
mov
push
lret
push
sti
clc
stc
add
add
jae
idiv
incl
arpl
roll
mov
sub
adc
or
pop
sub
push
inc
mov
mov
sbb
push
inc
je
cmpsb
fbstp
adc
push
fs
sub
mov
pop
jg
push
add
adc
lret
mov
js
scas
lcall
fucomip
cmpsl
mov
sbb
call
jmp
push
mov
stos
notb
push
push
adc
or
jge
sbb
mov
push
mov
ret
insb
shlb
dec
push
fs
fs
push
cwtl
cmp
cmp
jno
ffreep
pop
inc
xchg
or
call
clc
shl
dec
pop
dec
roll
pop
fcomps
and
fildll
in
nop
xor
sbb
jg
jno
mov
cli
call
gs
xchg
rcr
ret
in
int3
out
aas
pop
mov
imul
and
pop
adc
incl
push
add
je
dec
dec
ja
pop
ljmp
jg
adc
mov
and
mov
inc
test
aam
in
jne
and
xchg
stc
or
cmovs
mov
sbb
xor
mov
test
mov
popf
jp
adc
ljmp
sti
xchg
call
xchg
fsub
arpl
repz
sbb
adc
and
pop
sub
gs
push
and
rcrb
jnp
incl
mov
pushf
mov
add
call
sub
leave
enter
ret
adc
mov
fwait
mov
and
sub
or
pop
dec
sti
mov
loopne
ja
dec
hlt
decl
xchg
and
int
inc
lods
clc
pop
pop
xor
inc
repz
jmp
cld
xchg
and
or
and
mov
pop
push
xor
lea
sub
dec
sub
mov
add
or
mov
gs
lcall
mov
mov
mov
adc
das
fdivr
jg
add
jae
loope
test
dec
fisttps
scas
pop
imul
inc
pop
fadd
shlb
sub
adc
sarb
sahf
and
movsb
stc
push
outsb
mov
mov
pop
fistpl
push
out
ljmp
je
repz
test
fidivl
push
sbb
push
jbe
pop
addr16
mov
sbb
push
xor
test
mov
ljmp
cmp
push
popf
in
jbe
jge
sarl
shrb
sbb
loope
sub
int3
dec
mov
stos
inc
xlat
imul
pop
dec
push
cmpsb
push
mov
or
cli
add
jnp
jmp
sbb
inc
pop
add
loopne
lahf
lret
lret
push
inc
cmp
xor
incl
mov
neg
stos
imul
pop
fcoms
adc
xor
cmp
dec
inc
pop
lods
je
mov
xor
push
pop
push
pop
repz
jle
sub
mov
push
mov
cltd
xor
inc
add
push
stos
pop
adc
shll
ficompl
les
fsubp
sbb
nop
enter
xor
aad
cmp
sbbb
out
sbb
pop
lahf
stc
stc
call
xchg
or
mov
in
pop
aaa
outsl
mov
jmp
fdivrl
push
mov
int3
fwait
mov
dec
xchg
pop
idiv
dec
pop
test
mov
sbb
push
mov
jle
mov
popf
loopne
mov
cld
iret
ficoml
test
add
sub
jg
push
cmp
mov
sub
pusha
sub
add
push
dec
imul
loopne
mov
mov
push
fildll
mov
sbb
int
mov
xlat
adc
jle
sarl
fcmovnb
dec
mov
shr
incl
andl
sar
mov
fs
cli
loopne
xor
xchg
add
ret
mov
out
dec
je
dec
mov
mov
in
pop
cli
adc
test
std
incl
sbb
jb
cmpsb
and
sbb
ret
jne
sbb
mov
hlt
dec
fsubl
daa
pop
js
mov
mov
push
mov
xchg
jg
lret
sbb
cli
in
lea
or
push
sbb
ljmp
andl
or
arpl
shlb
aad
shlb
xor
sub
inc
dec
or
push
push
testb
popf
inc
push
inc
xchg
and
movsl
lock
fistpll
mov
and
xchg
dec
inc
add
mov
and
pushf
xor
ret
notl
js
inc
sahf
adc
sbb
outsl
pop
gs
insb
sti
loop
jl,pn
fiaddl
lahf
leave
sbb
adc
and
mov
loope
iret
js
xchg
arpl
add
pushl
mov
cld
sarb
loopne
ss
ja
jg
scas
xchg
and
push
mov
inc
mov
imul
out
adc
jle
dec
jge
push
fisubl
pop
insb
mov
aad
idivl
cmp
mov
push
xchg
jmp
movsl
pop
adc
jl
mov
jp
call
xor
adc
lock
inc
inc
or
pop
add
add
adc
ffreep
adc
push
cmp
inc
mov
push
or
clc
movsl
pop
loop
jge
jo
jle
mov
cmpl
fcom
pop
xchg
ficomps
arpl
sbb
mov
mov
jl
fcomps
rolb
xchg
pop
aad
or
shrl
ja
inc
test
inc
sti
add
pop
mov
repnz
jo
and
cmc
ret
cmp
lahf
sbb
and
push
ds
push
fcmovbe
mov
test
fmuls
add
incb
fildll
mov
pop
call
cmp
mov
fisttpl
pop
stc
or
pop
shlb
jecxz
or
lcall
ret
sub
mov
xor
dec
xlat
les
out
pop
pop
jecxz
stc
xor
or
fildll
enter
aad
or
lcall
decb
sub
outsl
jl
sub
inc
or
ret
xor
in
pop
dec
pop
sbb
mov
lret
jne
xchg
addr16
or
je
aaa
popf
cmp
push
sbb
pop
adc
ljmp
jge
ret
or
adc
insb
dec
pop
ret
push
stos
andb
aas
mov
sbb
lea
repz
sub
fisubrs
jno
jbe
imul
mov
fisubs
test
fcoms
xchg
lds
sbb
cmc
mov
mov
mov
cmp
loopne
std
cli
lret
dec
mov
jns
jg
mov
sub
push
out
mov
push
or
sahf
ljmp
sub
test
call
stos
outsl
adc
add
out
inc
cmpsl
or
callw
lret
add
cld
and
ret
cmp
inc
add
das
inc
sub
dec
scas
or
stc
ljmp
push
jmp
ret
out
pop
mov
bound
or
and
or
pop
sbb
jno
push
mov
adc
fcmovnu
out
dec
sbb
lret
mov
aad
test
xor
jb
call
int
push
call
aaa
icebp
cmp
call
cmp
loopne
aad
sbb
loopne
mov
lock
cmp
fdivrl
mov
repnz
ss
inc
and
pop
pusha
mov
and
dec
cmp
mov
dec
jne
cmp
cmpsb
loop
sub
xchg
and
outsl
ljmp
and
mov
out
outsl
push
fiaddl
pop
stos
clc
jg
inc
cltd
outsb
sbb
ds
push
fldcw
ljmp
hlt
push
insl
mov
and
adc
arpl
aam
daa
sbb
cmp
popf
sub
shl
inc
ffreep
xchg
fiaddl
sarb
int3
sub
add
push
aaa
incb
xor
sbb
jl
mov
sbb
mov
cmp
or
push
adc
pop
pop
clc
aas
mov
push
adc
xorl
frstor
outsl
gs
movsb
shlb
aad
repnz
add
leave
cmpsb
lcall
or
daa
pop
cmpl
out
add
hlt
pop
jmp
ss
inc
dec
xor
jecxz
out
clc
scas
xor
dec
cltd
xchg
pushf
jne
mov
inc
in
xchg
cs
adc
dec
imul
in
xor
nop
mov
mov
and
xchg
lods
andl
das
cmp
or
lcall
mov
mov
and
push
jmp
je
std
fbstp
dec
test
pop
pusha
mov
push
fmuls
popf
in
movsl
inc
sbb
arpl
and
add
clc
fldl
jne
mov
xchg
push
xchg
sbb
mov
fisubrl
xchg
and
rclb
push
fwait
push
and
rcrl
jl
je
idivb
aam
and
adc
pop
leave
xchg
inc
adc
fildl
out
movsl
das
fbld
and
data16
push
add
js
out
or
mov
iret
fimull
inc
xchg
nop
pop
cmp
lret
mov
ljmp
sahf
mov
push
xor
push
dec
jmp
push
mov
jmp
sub
cmp
jp
ja
jmp
call
test
push
cmp
cmpb
pushw
addr16
fs
add
mov
jl
shrb
mov
cmp
inc
movsb
imulb
scas
outsl
das
mov
std
xchg
es
movsb
std
pop
and
inc
xor
lret
scas
outsl
jno
movsb
into
jle
scas
je
stos
fnstsw
or
mov
sbb
xchg
mov
sti
mov
lods
daa
pushf
pop
pop
push
imul
jmp
mov
xor
leave
dec
arpl
jge
das
call
lret
shrb
pop
int
cmpsl
not
mov
sub
cmp
insl
adc
lock
jg
insb
ret
in
dec
push
xor
fistpll
cwtl
push
push
inc
dec
cmp
jnp
jecxz
rcll
mov
mov
stos
pop
jecxz
fidivrs
mov
push
dec
add
stos
and
pop
clc
rolb
mov
popa
fisubrl
adc
cli
jb
pop
insl
mov
pop
adc
fcmovne
imulb
and
adc
and
mov
std
xchg
loopne
dec
dec
pop
stc
cmp
iret
testl
jp
movsb
sbb
and
das
sbb
inc
mov
lcall
out
xchg
xchg
and
jmp
mov
negb
orl
or
jge
call
in
sub
sbb
in
outsl
or
icebp
mov
lahf
dec
push
clc
and
push
cs
dec
add
inc
call
lock
addl
push
jnp
xor
js
cmp
js
aaa
stos
jmp
cmp
adc
mov
xor
push
int3
dec
mov
or
xchg
std
outsl
cmp
hlt
cld
push
cmp
sbb
aas
mov
mov
xor
incl
insb
sbb
call
fsts
call
dec
pop
mov
jmp
in
mov
cmp
adc
jle
add
je
je
push
inc
adc
test
and
loope
inc
lret
inc
jo
xlat
push
adc
mov
daa
inc
mov
iret
sub
dec
pop
loopne
call
shlb
ss
cmp
and
jge
cmc
lahf
lahf
shl
add
mov
mov
push
mov
imul
lea
hlt
mov
es
lock
out
ljmp
dec
testb
pop
lock
imul
dec
out
mov
cli
jg
or
sbbb
stc
push
sbb
ffree
ja
call
fadd
sub
mov
pushf
out
xor
test
adc
loop
push
ljmp
mov
movsl
loop
aaa
into
aam
loopne
fs
xor
cmc
jp
test
cmpsl
dec
dec
cmp
sar
sub
in
xchg
add
ja
xchg
inc
mov
movsl
ja
cld
mov
pop
sbb
mov
jmp
sbb
jo
sbb
lods
or
xor
hlt
dec
or
pushf
mov
popa
push
add
and
lahf
fdiv
sarb
shl
out
movsl
outsl
push
scas
lret
or
loopne
inc
jecxz
xchg
add
fsubrp
mov
lock
or
fdiv
and
and
insl
imul
adc
outsb
dec
mov
xchg
add
insl
sbb
mov
xchg
lret
adc
cmpb
cli
sbb
jae
imull
add
dec
mov
outsl
lret
pop
fwait
add
push
adc
in
or
jae
popa
adc
mov
cmp
adc
bound
in
or
pop
lea
insl
dec
dec
jmp
xor
jo
sbb
stos
faddl
fs
cmp
jb
pusha
jle
rcrl
dec
fisubrl
pop
push
pop
xor
cli
leavew
pop
xchg
fdivrp
fcomip
and
dec
xchg
sbb
fs
push
stc
lret
or
push
push
femms
and
pop
mov
iret
cmp
xor
hlt
xchg
xor
mov
lea
mov
cmp
lea
sahf
pop
dec
jae
hlt
jo
adc
mov
sub
cmp
xor
ret
decl
inc
cwtl
clc
sbb
sub
mov
enter
jp
pop
jae
sub
adc
test
pop
arpl
clc
ret
mov
in
pusha
dec
adc
mov
loope
adc
lods
xchg
pop
push
imul
push
decl
adc
push
push
sbb
sub
mov
pop
dec
or
in
imul
pop
popa
fmull
pop
cmc
out
sbb
push
das
lock
xor
addl
pop
fadds
adc
jmp
mov
xor
rclb
mov
xor
bound
mov
adcb
incb
xor
in
adc
pop
inc
pop
or
jbe
outsb
sub
icebp
push
pop
nop
jmp
and
or
lahf
out
scas
xchg
dec
loop
out
aaa
fidivrs
xor
loopne
in
ds
test
pop
scas
icebp
pop
in
dec
outsl
fstl
adc
lods
mov
add
sbb
pushf
xchg
sub
pusha
mov
inc
jnp
mov
cmp
pop
push
mov
or
les
and
mov
fidivrs
in
sub
push
or
push
or
hlt
fistpll
sbbb
les
cmp
dec
jg
push
aad
xchg
adc
and
sbb
sbb
sahf
sbb
xlat
cld
cmpsb
popf
mov
fdivs
dec
fnstsw
sub
movsl
fisttps
inc
add
cmp
mov
rolb
push
push
push
and
scas
mov
pop
xor
pop
je
movl
in
mov
sub
movsl
inc
and
shlb
or
dec
sarb
int3
in
sub
sbb
push
inc
adc
ja
jo
or
fmul
sbb
fcoms
sarl
stc
or
dec
inc
and
idiv
push
inc
adc
pop
adcb
push
pop
inc
aad
inc
mov
push
mov
cmp
clc
das
cld
sti
xchg
push
sbb
and
in
jns
in
or
cld
dec
test
dec
sub
fistpl
dec
jbe
das
mov
push
pop
fwait
aas
notl
mov
int
lahf
mov
cltd
aam
sbb
dec
or
popa
xor
push
popf
fidivrl
or
in
or
sub
mov
mov
xchg
jp
clc
mov
data16
das
sub
mov
addr16
sbb
inc
push
stos
aam
mov
popa
cli
adc
push
mov
push
stc
popa
and
outsl
cmp
xchg
gs
fcmovb
imul
jno
cmp
std
dec
inc
lds
ljmp
ss
push
call
jg
jle
mov
and
dec
inc
js
cmpsb
and
cli
pop
adc
sbb
aam
mov
sbb
xor
add
inc
sbb
pop
jns
jbe
std
jnp
xchg
mov
psubb
fs
or
aas
xorb
sarl
gs
andl
sub
punpckhdq
sub
outsb
pop
cmp
mov
and
inc
add
dec
adc
sub
in
mov
subl
into
cmp
icebp
ret
mov
or
mov
in
enter
mov
xor
aam
lahf
daa
push
dec
mov
mov
push
jle
inc
pop
add
out
jmp
sub
adc
orl
inc
pause
lods
addr16
add
out
push
jmp
std
outsl
cmc
inc
frstor
dec
test
mov
ret
mov
and
cmc
shll
xor
lods
mov
sahf
sti
mov
or
sub
pusha
pop
movsb
ss
clc
sbb
mov
mov
add
movsl
aaa
dec
adc
cmc
ret
insl
mov
out
repnz
jbe
aad
inc
sub
and
call
jmp
push
dec
cld
or
pop
aaa
cmp
dec
inc
adc
mov
dec
mov
into
add
push
or
lock
xor
or
fnstsw
aad
mov
sub
adc
dec
lods
pop
mov
cld
adc
je
dec
and
cmc
push
lock
or
dec
or
pop
movsl
nop
mov
fidivl
mov
inc
imul
int
mov
hlt
pushf
in
sbb
xchg
bound
sbb
jns
cs
hlt
xchg
gs
faddp
inc
jmp
mov
fdivrp
in
mov
dec
ret
adc
mov
movsl
ffreep
in
mov
add
lea
mov
push
lret
fs
adc
addr16
subb
push
in
dec
xchg
hlt
arpl
xlat
xchg
clc
outsl
lods
shrl
in
call
sbb
push
mov
jl
inc
and
inc
cltd
icebp
jmp
adc
dec
fstl
repz
adc
mov
outsl
push
outsb
xchg
ror
pop
sub
cmp
mov
outsl
mov
mov
mov
mov
lds
inc
mov
jb
add
dec
dec
sbb
cvtps2pi
pop
or
cmpsb
dec
fs
je
shlb
data16
out
das
mul
jnp
in
cmc
jle
lret
mov
lods
scas
or
mov
ljmp
lret
cltd
fxtract
xlat
adc
jbe
mov
test
or
or
push
add
lret
mov
mov
add
and
push
xor
call
adc
cmp
ficomps
das
hlt
sarb
mov
sahf
push
aaa
pusha
mov
or
or
jb
mov
dec
imul
inc
and
sub
mov
in
dec
pop
adc
mov
jecxz
test
push
xchg
mov
pop
cmp
je,pn
repnz
jp
add
cmp
add
insb
ret
mov
xor
stos
hlt
fldt
and
pop
xor
sbb
adc
imul
xor
xchg
jle
leave
push
lock
shr
inc
cli
outsl
push
mov
icebp
shrb
cld
call
shl
push
pop
outsl
and
dec
roll
inc
adcl
mov
push
pop
sbb
test
or
mov
and
push
stc
test
add
push
inc
inc
daa
rcll
fisubs
pop
lret
mov
jae
sbbb
fcmovnu
mov
mov
pop
push
mov
sbb
enter
pop
out
push
int3
push
sub
outsl
mov
aas
mov
and
push
cmc
pop
sbb
adc
test
xor
je
insb
cmp
jmp
in
nop
push
xchg
jmp
or
test
mov
icebp
ret
push
adc
hlt
mov
iret
pop
imul
jmp
pop
cmp
bnd
xor
sbb
jg
dec
pop
pop
mov
inc
and
jmp
xor
pop
clc
rcl
adc
add
dec
inc
in
imul
add
loope
fidivrl
shll
sbbb
dec
or
hlt
pop
fwait
mov
rorl
add
stos
mov
add
or
fstpt
call
sbb
add
mov
or
mov
pop
dec
fildl
sub
push
sbb
mov
sbb
adcl
test
mov
das
cmp
push
bound
sbb
mov
dec
dec
jb
sahf
dec
iret
pop
and
or
in
mov
roll
call
or
mov
lock
sub
rcl
jo
daa
ds
sbb
pop
fmulp
inc
aas
jbe
outsl
lcall
or
pushl
mov
rorb
push
mov
pop
inc
or
xor
out
icebp
sub
mov
add
sbb
xor
cmc
sbb
lock
push
inc
cmp
test
mov
push
enter
sbb
xchg
fidivl
cld
call
sbb
and
test
mov
fisubl
sbb
mov
clc
shll
cmp
pop
fildl
pop
mov
call
lcall
or
fisubrl
fs
stos
iret
dec
hlt
xchg
push
push
rcll
or
and
jb
cmp
movsb
xor
jge
fcoml
pop
xchg
aaa
adc
aas
mov
xchg
in
cmp
lea
aad
scas
xor
cwtl
xchg
std
das
loopne
jo
call
or
and
es
fdivrs
push
iret
mov
or
hlt
lea
cmpsl
mov
and
add
mov
add
pcmpgtw
in
fildl
push
cmp
mov
mov
mov
adcl
out
xchg
rol
mov
outsl
rcll
adc
sbb
ret
or
pusha
jp
add
jg
sub
mov
mov
sbb
loope
dec
sub
mov
push
adc
xlat
pop
mov
mov
dec
test
les
pop
mov
jnp
and
xor
pop
shll
mov
sub
divb
sub
and
stos
rorl
call
inc
cmc
aaa
cwtl
mov
add
and
lods
xor
push
faddp
fstpt
ret
sbb
dec
dec
cmpsl
dec
lahf
aas
nop
loop
add
dec
sub
or
loopne
mov
inc
push
jnp
loopne
roll
cld
pop
mov
pop
inc
mov
fistpll
daa
sahf
xor
add
add
lret
ja
icebp
aam
mov
xor
or
imul
das
pop
and
inc
mov
jne
jmp
push
mov
ja
add
scas
jmp
imul
mov
stos
and
cmpsl
rolb
enter
mov
inc
mov
test
mov
adc
pop
cmpl
pop
lcall
mov
out
stos
mov
and
lea
xor
dec
fwait
lahf
push
mov
dec
mov
gs
inc
testl
jne
icebp
push
cld
jl
xchg
xchg
xor
das
jno
push
dec
leave
pusha
sub
repz
lods
cmp
lret
add
jb
or
repz
xorb
xchg
mov
roll
add
sub
xlat
dec
mov
mov
stos
and
popa
cwtl
out
push
pop
adc
lock
xor
pop
outsb
push
cwtl
in
mov
inc
popf
jmp
nop
aam
aam
sub
and
or
sti
cld
push
inc
call
nop
mov
jo
jle
paddsb
call
jnp
inc
bound
fsubrs
add
inc
adc
std
xchg
out
sub
cmp
sbb
sbb
ds
enter
adc
jne
pusha
push
adc
xchg
and
aad
cli
mov
pop
cli
add
push
add
loope
jnp
mov
mov
pop
mov
hlt
push
dec
cmp
cmp
pop
pop
sti
inc
pop
aaa
and
pop
shlb
hlt
outsl
xchg
gs
sarb
lcall
repz
lock
mov
sbb
mov
jg
pop
ret
add
ret
and
mov
sbb
lods
data16
mov
dec
sbb
dec
mov
jae
in
mov
icebp
dec
pushf
dec
mov
icebp
push
fistpll
andb
xchg
or
adc
cli
das
cmp
je
sub
adc
js
loopne
add
pop
adc
jbe
movsb
les
fldt
lods
xchg
popa
pusha
inc
movsb
ret
push
dec
enter
inc
hlt
push
adc
adc
incl
and
fldenv
push
repz
pushf
mov
out
push
mov
xchg
and
add
insl
jb
inc
jle
pusha
outsb
pop
lds
mov
sbb
cmp
adc
xchg
push
faddl
dec
std
aaa
mov
sbb
mov
icebp
sbb
mov
xor
sbb
push
into
fbld
out
test
xchg
mov
and
loop
int3
sti
ss
sub
inc
test
into
ja
xchg
xor
dec
pop
and
andb
lock
icebp
mov
inc
push
jg
sbb
adc
int
push
sbb
mov
ss
in
dec
sti
dec
andb
ljmp
mov
xchg
pop
push
cmp
aaa
clc
lcall
sub
and
or
dec
add
cs
cld
and
xor
icebp
push
xor
adc
in
cmpsb
aaa
mov
aas
xchg
mov
and
aaa
mov
loop
ja
xor
es
mov
cmp
pushf
xchg
pop
das
std
push
push
aaa
insb
movsb
or
and
mov
test
repnz
adc
mov
mov
sub
push
lea
mov
hlt
iret
xor
mov
jnp
xor
xchg
inc
adc
add
add
jp
cltd
and
in
mov
xchg
lods
lock
movsl
cmp
pop
dec
push
fcomp
jno
push
and
or
int3
add
mov
push
inc
fwait
ret
shll
aam
inc
rorl
and
add
jle
push
or
xlat
bound
lret
lahf
mov
int3
and
and
xchg
adc
addr16
jp
arpl
jne
xchg
and
jne
insl
aad
add
or
inc
shll
loope
testl
in
insl
mov
inc
xor
sub
mov
imul
out
sbb
jbe
mov
ss
adc
mov
fists
cmp
jo
cmp
inc
into
sub
ljmp
sbb
repnz
sbb
xor
enter
cs
jp
leave
js
or
mov
lret
inc
or
mov
cld
loope
pop
mov
pop
or
les
cs
subl
push
add
aam
fisubrl
or
inc
jo
rcrb
jnp
cwtl
mov
lcall
jns
add
inc
test
leave
clc
negb
scas
cmc
repnz
jne
cmp
sub
jmp
rorb
pop
out
or
dec
add
jl
add
je
stc
or
jnp
inc
sti
subl
dec
test
enter
test
add
xchg
das
xor
sub
repz
out
popa
cmc
jle
cmp
jp
jg
icebp
rclb
stos
sti
mov
sub
adc
cwtl
aad
ljmp
movsb
inc
fimull
mov
jmp
hlt
mov
andb
mov
adcb
cld
xor
loopne
dec
mov
sti
push
xchg
cs
dec
shll
xor
lods
dec
sbb
cld
fwait
jl
out
sub
hlt
xchg
push
fxch
adc
mov
stos
sarb
leave
jmp
incl
inc
mov
inc
mov
add
repz
repz
xchg
pop
push
xchg
or
adc
inc
inc
jne
je
aas
repnz
push
add
cmp
mov
jg
xchg
cmp
adc
mov
das
jl
or
and
or
push
xchg
arpl
fistl
ja
adc
aam
xchg
je
inc
shr
ja
jo
inc
xchg
adc
sub
decl
jo
mov
movsb
sbb
push
fstps
setp
lods
cltd
xchg
das
xchg
push
mov
mov
pop
int
or
pushl
call
sbb
dec
xchg
mov
shll
cmp
imul
and
shlb
ret
inc
push
fidivrs
mov
xchg
mov
adc
inc
les
cs
pop
ja
icebp
sbb
adc
mov
xor
outsl
les
out
fsubrs
neg
mov
dec
lahf
or
jae
dec
jp
and
add
jbe
adc
pop
clc
xchg
js
xchg
mov
pop
mov
dec
sub
dec
insb
mov
in
leave
jne
and
ljmp
mov
fidivrs
popf
adc
js
fwait
pop
popa
sbb
xchg
add
in
test
js
adc
jp
loop
ljmp
push
cld
xchg
mov
lcall
jg
out
fists
mov
iret
out
or
jo
inc
aam
adc
xchg
pop
std
notl
in
arpl
push
pushf
or
cmp
lret
mov
das
les
inc
scas
sbb
push
loopne
inc
icebp
cli
xchg
shlb
add
mov
mov
out
lock
sbb
mov
mov
cli
out
mov
pop
cmp
lret
push
cmc
cmc
sub
in
repz
adc
sub
out
fisttpll
ret
das
sub
sub
jo
fbstp
inc
add
mov
fisttps
je
mov
call
jecxz
push
mov
les
stc
gs
out
sbb
mov
ss
mov
aam
push
addr16
bound
push
cmpsl
std
and
inc
pop
push
je
inc
rcll
inc
mov
jnp
cmp
push
adc
addl
xchg
mov
negb
xor
jge
or
jno
rolb
adc
xchg
xchg
ret
sbb
outsl
fnstsw
scas
lcall
pop
loope
shlb
lcall
jo
enter
xchg
addr16
rcrb
dec
sub
mov
mov
lcall
sbb
push
sub
ret
jb
jl
ljmp
mov
mov
hlt
out
adc
cmp
scas
int
pop
mov
dec
je
push
ja
fs
jo
add
adc
jle
xchg
jo
pop
mov
xor
add
cmp
jo
inc
jmp
adc
mov
or
data16
xor
iret
mov
test
or
push
mov
and
cmp
ret
rcl
or
xor
out
add
inc
adc
test
jle
rol
xchg
pop
out
mov
and
sbb
jle
pop
xchg
into
iret
rorl
faddp
xchg
add
sbb
mov
and
imull
jp
adc
fistpl
fmuls
out
push
mov
cmp
test
jmp
data16
test
clc
jg
and
out
cmc
pop
push
lea
sbb
mov
push
lahf
xor
xchg
inc
cmp
mov
frstor
inc
adc
adc
xor
pusha
and
sahf
xchg
loopne
fisubrs
lods
sbb
shrl
test
inc
jl
pop
loop
inc
mov
jg
mov
in
test
orl
hlt
int3
adc
fildl
inc
push
cld
pop
inc
sbb
lahf
scas
mov
sub
lock
push
add
xorb
jmp
mov
iret
jbe
mov
test
nop
loop
pop
sarb
mov
cli
sbb
and
out
loopne
cli
sahf
repz
or
outsl
pushf
aam
pop
and
cmpsl
cmp
outsb
jecxz
cld
je
cmp
clc
enter
std
fucomi
push
cltd
and
popa
aam
movsl
cwtl
mov
add
cmp
cli
inc
out
mov
inc
inc
adc
xor
pop
icebp
dec
pop
pop
fcomi
mov
popa
or
sbb
mov
mov
sub
cmp
gs
pop
pop
ret
mov
sbb
sbb
push
cli
pushf
test
pmaxsw
xor
mov
or
adc
mov
or
loop
xchg
xchg
ljmp
xor
aad
xor
push
push
mov
loope
or
and
lods
fadd
fsubl
dec
adc
mov
adc
scas
pop
sbb
cmp
xlat
fadds
push
pop
push
int3
popa
mov
inc
adc
arpl
lock
pop
mov
pusha
jne
cmpsl
xor
nop
aaa
jg
cmp
in
call
divb
fcompl
je
pop
in
xchg
xchg
pop
mov
pop
mov
in
add
mov
or
jle
outsl
test
dec
sbb
add
shlb
repz
fcoml
lahf
dec
xor
or
sbb
out
orb
insb
push
fwait
sbb
mul
pop
inc
movsl
mov
sbb
sbb
nop
sub
jle
push
mov
aad
jmp
adc
js
daa
cmp
adc
jg
push
out
adc
jne
add
and
mov
inc
sbb
mov
xor
mov
fdivs
test
mov
cltd
dec
pop
in
sub
xchg
jne
pusha
sbb
sub
pop
jle
popa
popf
fnstenv
and
push
mov
mov
mov
cwtl
or
add
or
lret
pop
mov
xor
sub
cli
fildll
cli
shrb
ja
rorb
es
push
pop
push
inc
outsl
in
pop
push
insl
cmp
cmp
cmp
sbb
aaa
lock
pop
insl
hlt
push
outsl
sub
cmp
femms
roll
or
push
into
in
jne
inc
inc
or
fmull
rcll
xchg
negb
fldt
cmp
sub
fldl
cmp
out
lock
je
addl
jp
fstpl
pop
cmp
push
xchg
ds
lock
loope,pt
jg
add
mov
ljmp
and
repnz
inc
cwtl
xchg
or
or
dec
lock
ja
jp
xchg
and
dec
inc
in
es
outsl
cs
mov
sbb
pop
hlt
or
inc
sub
adc
cltd
out
clc
push
mov
cli
mov
filds
gs
clc
outsb
adc
push
bound
adc
pop
cmpsl
les
cmpsb
or
add
shll
jle
cmp
fdivrl
inc
pop
xor
aam
cld
jl
sub
insl
imul
adc
dec
out
jmp
inc
mov
mov
aaa
fs
add
jmp
sbb
pshufw
scas
scas
stos
and
and
incl
mov
push
imul
clc
dec
js
push
fdivrp
lret
and
lahf
test
aad
mov
pop
insb
dec
aas
push
fistpl
out
xchg
sub
jb
jecxz
fsub
incl
movsb
push
xor
and
inc
dec
xor
js
mov
aas
mov
mov
repz
xchg
insb
call
push
mov
ret
push
jl
inc
xchg
or
rolb
mov
ljmp
cwtl
add
sbb
mov
mov
dec
adc
jne
xchg
add
xor
push
sbb
jle
jge
mov
inc
xor
mov
mov
mov
stos
mov
push
nop
into
inc
out
jmp
ds
and
scas
mov
inc
icebp
or
jmp
inc
inc
jae
ljmp
xchg
iret
hlt
pop
mov
aaa
mov
sarl
sbb
scas
lock
stc
cmc
fcmovnu
rcrb
push
cmp
xor
rorb
out
add
push
in
mov
imul
xchg
scas
jge
std
ret
pop
fs
sub
xchg
outsl
add
ficomps
cmp
bound
push
mov
sub
inc
sbb
sub
mov
movsl
aam
mov
xchg
add
jl
xchg
mov
js
dec
ds
push
nop
pop
into
rorb
lods
sbb
add
fsubrl
stos
in
cmc
push
mov
in
es
cmp
adc
pop
mov
mov
mov
ficomps
sub
les
mov
sub
cmp
fnstcw
sub
es
pop
add
mov
adc
add
jmp
sub
sar
and
mov
mov
aad
adc
pop
int3
push
mov
sbb
in
inc
or
test
iret
push
inc
add
mov
lea
and
jp
aas
xchg
dec
popf
ljmp
nop
mov
lea
xchg
mov
shrb
or
push
push
loop
mov
adc
push
cmp
repz
ficoml
xor
and
and
movsl
lahf
std
adc
jmp
and
loop
iret
mov
pop
and
insb
stos
mov
jne
jne
inc
xlat
adc
push
or
mov
cld
repnz
cli
xchg
xchg
das
cld
lahf
int3
xchg
ret
dec
xor
sar
jp
jne
jno
jns
cmpsl
pop
inc
frstor
nopl
dec
je
or
aas
das
jl
inc
or
pushf
xlat
add
xchg
cmp
mov
es
add
mov
dec
cmc
lock
fwait
xchg
clc
and
jo
sub
in
call
out
mov
mov
aas
push
inc
repnz
jecxz
pop
mov
mov
mov
repz
je
dec
fdivrl
or
adc
inc
mov
cmc
in
sub
xchg
mov
mov
push
and
ds
pop
mov
push
xchg
subl
loope
cmp
je
movl
push
or
mov
xchg
es
fucomip
lods
jge
xor
movsl
insb
jle
or
or
aam
fidivrs
lods
loopne
sub
shufps
shl
fadds
adc
lods
incl
mov
mov
xchg
pop
cli
icebp
jmp
outsb
mov
mov
sbb
aaa
push
mov
test
int3
cs
add
mov
outsb
or
lea
pop
fidivl
fildl
insb
je
std
mov
jl
std
sbb
pop
push
jl
lahf
movl
aaa
shll
mov
and
clc
out
call
dec
mov
add
inc
cld
dec
xchg
mov
jmp
lcall
sbb
outsl
xor
adcb
cmp
push
fimuls
add
shll
popf
in
inc
aaa
cli
push
daa
mov
jo
add
jne
pop
fcmovnu
push
cmpsl
mov
cli
mov
pop
cli
mov
add
xor
shrl
ds
inc
push
xlat
mov
and
int
movsl
add
les
add
sar
adc
mov
dec
xacquire
mov
jge
add
lahf
mov
jbe
test
xor
cli
mov
cmc
nop
push
jecxz
xor
mov
clc
pop
stos
cmc
sbb
inc
xor
stos
mov
js
inc
pusha
mov
sbb
f2xm1
and
mov
ret
or
adc
incb
sub
mov
xchg
push
xchg
out
sbb
outsl
inc
dec
or
dec
xor
stos
add
cli
mov
dec
and
loopne,pt
mov
in
shlb
ret
mov
or
insl
fdivs
in
test
add
push
inc
lds
test
sbb
dec
mov
mov
or
cmp
or
aaa
je
imul
inc
ss
pop
sub
or
js
add
sub
clc
or
int
or
mov
arpl
ds
or
fisttpl
clc
adc
mov
pop
cmpsb
data16
jg
sub
vminsd
mov
and
mov
test
and
pop
mov
mov
sbb
aas
fmuls
pop
or
scas
adc
cli
aad
pop
inc
inc
mov
pusha
sbb
xor
push
cld
stos
push
jge
sub
jae
jmp
inc
xchg
sub
dec
test
adc
fldl
test
inc
sbb
test
inc
std
fldl
mov
jmp
jle
int3
jle
loope
mov
pop
pop
dec
outsl
jg
inc
lods
mov
sub
mov
mov
aas
imul
lcall
pop
inc
scas
pop
push
xor
or
jno
into
loop
mov
inc
fstpt
leave
jl
pop
clc
push
test
inc
mov
pop
rcrl
cmovo
das
scas
push
fidivrl
sbb
jbe
roll
pop
inc
popa
add
mov
xor
lock
push
mov
mov
sbb
add
jns
cmpsb
outsl
jmp
jmp
push
mov
repnz
jecxz
sub
xor
fdivrs
lea
sar
mov
adc
jg
mov
fcmovu
xchg
mov
ja
jbe
sbb
pop
clc
lock
or
jne
pop
cltd
push
ljmp
cmp
outsl
das
les
int3
push
dec
mov
popa
add
in
mov
mov
aad
lea
dec
cmp
in
sar
rcll
fbstp
mov
rcr
imul
xchg
pop
adc
fs
add
push
jnp
lahf
fnsave
out
dec
arpl
scas
ret
pop
jns
sub
fbstp
mov
pop
dec
hlt
insl
mov
xchg
movsb
mov
xchg
icebp
sbbl
mov
mov
inc
and
pop
mov
push
fmull
add
imulb
and
or
call
mov
cmp
fiaddl
sahf
fdivs
inc
mov
fbstp
sbb
pop
push
push
jb
loope
push
inc
push
cmpsb
into
push
mov
std
lods
arpl
int3
mov
xor
repnz
movsl
into
inc
xchg
add
sub
xchg
lea
or
fdivr
cmp
js
insb
aam
push
fldt
lea
test
arpl
int3
daa
ds
mov
imulb
imul
pop
pop
push
outsl
push
sub
fwait
add
cmp
sti
jge
push
dec
loopne
int
int
test
sub
out
clc
sub
mov
cmp
push
adc
mov
pop
sbb
jmp
add
fmulp
push
pop
sub
dec
and
or
jp,pn
push
aam
int
push
mov
outsb
mull
xchg
lcall
mov
ja
push
mov
cmp
push
mov
cli
jg
int3
or
out
push
test
lcall
adc
outsl
test
ret
xchg
xchg
inc
cmp
xchg
sub
fstpl
leave
clc
into
lods
lret
lret
imul
mov
sbb
incb
and
inc
xchg
add
rorl
jb
push
insl
mov
in
aaa
jnp
pusha
add
subl
fnstenv
iret
repz
repz
lret
add
daa
dec
in
in
call
daa
je
jo
sub
jl
xchg
cmp
and
mov
clc
push
aad
aam
popa
out
sub
orl
push
dec
inc
push
ss
cmp
pushl
mov
dec
mov
fwait
ret
adc
jg
mov
rcr
sub
pop
js
cltd
adc
mov
push
iret
adc
imul
xor
pop
ret
addl
jo
sub
and
aam
xor
imul
icebp
pop
pusha
inc
adc
pop
jg
jno
lods
jle
cmpsb
int
cltd
das
add
push
pop
inc
repnz
hlt
pop
and
pop
xor
mov
fwait
mov
xchg
movsl
and
jae
xchg
dec
bound
insb
xor
aas
xchg
pop
mov
push
or
fsubrs
dec
inc
pop
push
jbe
bound
push
popf
sbb
sti
jnp
push
leave
push
mov
ret
and
les
aam
push
mov
hlt
movb
jno
pop
fsubl
adc
add
push
shrl
xor
lock
aaa
outsl
popf
or
mov
xor
clc
and
ret
pop
jne
and
jbe
cs
sub
push
xchg
hlt
push
ret
mov
mov
sub
or
incb
add
fadds
in
jl
mov
and
int
push
ljmp
mov
mov
jl
sbb
and
mov
outsl
imul
mov
fwait
or
mov
mov
cmp
call
add
inc
inc
mov
fwait
les
lds
in
insl
pop
mov
mov
cmp
movb
xor
es
cmp
and
hlt
sbb
pop
adc
push
push
jl
cmc
add
sbb
jmp
movsl
sbb
stos
fucomp
adc
push
cmp
push
inc
lea
inc
xor
les
and
mov
roll
mov
pop
aam
dec
xor
dec
push
lods
dec
or
mov
mov
mov
cli
mov
pop
fdivrl
sbb
lock
cmp
xchg
sub
loope
popa
adc
jne
dec
stos
lds
mov
fwait
pop
repz
lea
not
jecxz
das
jl
shl
shl
lahf
aas
outsb
adc
repnz
hlt
sub
rep
rorb
ss
pop
mov
jge
repnz
test
push
pop
add
push
imul
pop
test
stos
xlat
dec
scas
clc
mov
add
adc
je
mov
test
pop
mov
mov
jmp
push
je
testl
dec
mov
mov
js
or
mov
cmp
andb
inc
lret
adc
lock
adcl
mov
repz
pop
mov
pop
bound
and
xchg
sbbl
push
jmp
push
in
rcl
pop
scas
jbe
adc
rolb
loopne
jbe
fcoms
addl
test
xor
aaa
jl,pn
cmp
je
les
xor
or
lods
outsl
adc
push
je
dec
cmp
mov
push
in
fucomi
lea
sub
mov
fnstsw
jle
pop
push
repnz
out
xor
outsb
push
pop
xor
mov
lds
xchg
popa
lea
or
jne
ret
movups
stos
sti
jb
sub
push
xchg
aad
jp
mov
inc
add
loopne
lds
int
mov
adc
test
and
fiadds
push
ret
and
int3
adc
inc
popf
lods
or
xchg
or
fdivrs
pop
jns
fwait
mov
adc
inc
cmp
outsl
adc
fldl
sub
mov
push
dec
or
mov
push
shr
mov
inc
push
jne
mov
mov
and
rcll
pop
add
mov
xor
shlb
mov
out
or
cmp
mov
dec
cmp
out
mov
jb
adc
or
dec
xor
fbstp
adc
add
sub
ret
jae
or
add
test
add
and
rorl
and
fld
jmp
clc
xor
xor
lahf
scas
lcall
pop
mov
das
aas
adc
lret
call
mov
xchg
rcll
mov
or
push
sbb
mov
popa
bound
pop
or
fisttpl
sahf
dec
loope
mov
mov
adc
sbb
inc
test
jae
ljmp
out
mov
adc
jne
or
out
in
xchg
xchg
sbb
push
adc
push
push
or
andl
dec
test
dec
mov
cmp
int3
mov
shlb
sub
push
in
mov
mov
lods
or
outsb
clc
movq
push
sbb
adc
mov
add
pop
push
fwait
ljmp
mov
xchg
fnsave
mov
fistpl
aaa
lock
mov
pop
jno
jns
adc
sbb
add
and
not
dec
jecxz
sbb
mov
addr16
ret
test
lahf
mov
xor
test
clc
test
sbb
push
jg
lret
add
lahf
int
mov
inc
xlat
stos
fildl
mov
int
jb
in
stos
adc
outsl
into
mov
mov
jecxz
aad
mov
cli
jmp
or
sub
das
jb
iret
or
xor
ljmp
jl
ficoml
sub
add
sbb
shrl
pop
aas
xor
enter
cmc
and
lcall
push
mov
mov
and
mov
jnp
insl
sti
pop
gs
cmc
ds
lock
das
je
jmp
jecxz
jne
push
mov
test
mov
pusha
in
pop
outsl
insb
jg
push
fnstsw
lds
cmc
loop
pop
sub
push
cmp
push
sub
adc
outsb
lock
push
sbb
int3
fcomps
sbb
fidivrl
stos
testb
mov
mov
pop
pusha
fmuls
insl
insb
jae
sbb
sub
sahf
cli
sbb
jb
pop
dec
sub
adc
movl
or
dec
jae
call
pop
mul
xchg
mov
rep
aaa
sahf
shr
mov
or
movb
out
loop
mov
dec
in
sbb
cmp
sub
fldl
push
inc
mov
add
jne
sbb
mov
fimull
ss
xor
clc
das
outsl
sbb
or
dec
and
or
or
sahf
dec
push
lods
xchg
mov
dec
xchg
xchg
mov
adc
add
cltd
pushf
adc
mov
outsl
dec
sbb
mov
sbb
add
add
xor
mov
addr16
lret
xor
sub
xor
ljmp
lods
mov
minps
idivb
rcrl
or
adc
repz
push
cwtl
or
adc
mov
call
jb
adc
sbb
jo
xor
cltd
sbb
jne
inc
add
and
mov
ret
iret
pop
pop
cmpl
fstpt
push
mov
mov
sbbb
sbb
jns
sub
or
jg
inc
mov
inc
out
xchg
fwait
sbb
add
stos
xchg
mov
int
dec
cmc
dec
sbb
sub
dec
sub
outsl
jge
fnsave
mov
aam
jbe
pop
mov
icebp
test
pop
xor
cmpl
add
inc
mov
add
xchg
mov
xor
data16
xchg
cmpsl
shrl
dec
add
popa
fwait
bound
dec
fsub
out
jmp
xorb
shrl
aam
sub
les
int
orl
test
in
jno
fs
call
push
cmp
lods
mov
inc
adc
in
pop
imul
out
in
cmp
jae
cli
push
das
jl
sbb
xor
and
les
decb
sti
mov
arpl
repz
loop
or
out
pop
les
push
cmp
push
cmp
sbb
aas
mov
push
dec
int3
or
insl
ds
fcomp
xor
fwait
mov
fsubp
fstps
inc
insl
out
cmp
cmp
call
mov
pop
add
idiv
inc
ja
mov
cmpsb
gs
mov
clc
pop
test
lcall
xchg
mov
shll
ss
inc
cs
push
or
pop
fcomp
jbe
jg
dec
xor
adc
xor
inc
ret
pusha
cmp
inc
fdivrl
jg
push
js
ret
loop
mov
fisubrl
movsl
jge
fdiv
pusha
jp
or
test
cmpsl
dec
push
xor
push
xor
jg
or
inc
xor
dec
call
cld
lds
mov
mov
pop
pushf
scas
jo
push
popf
push
push
repz
push
sarl
push
inc
adc
mov
fstpt
out
sbb
cs
add
or
loop
add
inc
cmp
rolb
ds
pop
inc
rorl
inc
pop
mov
dec
pop
xlat
cmp
push
push
das
cmp
mov
adc
pop
sbb
cmp
gs
sub
dec
je
add
sahf
cmpsl
in
je
test
mov
push
adc
int3
jecxz
sahf
add
stos
or
clc
rcrb
mov
nop
add
je
inc
sbb
in
or
lcall
cmpsb
fwait
and
sbb
fists
and
add
test
sbb
addr16
adc
hlt
pop
or
mov
ds
xchg
subb
mov
pop
jns
sbb
negb
std
ljmp
aad
mov
pop
in
mov
out
out
ret
mov
push
fdiv
js
sbb
gs
push
into
jle
rclb
or
mov
dec
fisubrl
addr16
mov
xlat
or
xchg
roll
lret
jno
notl
lret
je
out
pushf
ds
mov
test
inc
add
call
fadd
lret
sti
add
ja
outsb
cmpsl
fisttpl
mov
and
sbb
cmpb
pop
adc
xlat
pusha
cmp
lcall
pop
dec
enter
sbb
inc
jp
dec
std
rol
int
loop
orb
mov
cmpsb
aas
fwait
rolb
sub
xor
and
mov
lahf
mov
and
clc
lcall
xor
fwait
and
into
movsb
push
or
sbb
push
icebp
cmpsb
daa
dec
insl
in
xor
test
sub
mov
jae
lcall
aas
pop
test
push
or
mov
in
sub
insl
cmpsl
cmp
cmpsl
push
dec
add
adc
and
jae
sub
xchg
fidivl
or
aad
stos
arpl
sbb
int3
inc
fst
pop
test
pop
add
mov
mov
in
clc
fcmovb
nop
imul
and
push
jmp
jg
rcrl
or
dec
xchg
pop
fcmove
jle,pt
add
into
out
lcall
and
fistl
sbb
out
mov
cld
test
punpckhwd
icebp
in
addr16
int
xchg
fldt
test
sbb
loop
aam
movsb
and
ss
roll
lret
decb
jnp
xor
inc
ret
mov
fsts
mov
mov
adc
outsb
mov
clc
aaa
push
push
dec
sarl
jne
in
out
adc
out
dec
push
scas
xchg
push
mov
cmp
add
xchg
mov
test
lret
jne
cmc
mov
dec
mov
je
lods
xor
icebp
mov
inc
or
aam
jmp
push
sub
mov
sti
mov
scas
scas
cmp
imul
out
pop
clc
aas
cltd
inc
addl
adc
pusha
jge
fdivrl
inc
push
mov
lahf
dec
fdivrl
loop
mov
testl
ja
push
xor
testb
pop
add
mov
pop
pop
ret
cwtl
psubusw
jno
fnstcw
pop
in
inc
mov
mov
adc
cwtl
loope
mov
inc
jg
mov
loop
cld
aad
test
shr
or
in
pop
pop
pop
jmp
or
or
and
adc
mov
mov
add
into
dec
lock
insb
push
stos
mov
cmpsb
push
pop
jle
ficoms
fiaddl
arpl
cld
inc
push
or
lcall
mov
sarb
arpl
cmpsb
pop
cs
outsb
mov
lret
sti
push
sub
xchg
cli
int3
lret
je
mov
mov
iret
cmp
ret
jne
xchg
inc
xor
sbb
aas
mov
popa
and
orl
mov
or
loopne
clc
pop
cmp
mov
add
fsubs
inc
push
push
test
mov
out
xor
or
cmp
movsb
jbe
in
outsl
lods
add
adc
mov
xchg
jmp
jne
ret
inc
mov
pop
adc
scas
adc
scas
pop
psubb
push
fimull
add
push
cmp
push
fsubrp
cltd
arpl
imul
je
or
jbe
ret
push
enter
adc
mov
test
enter
nop
arpl
mov
out
jecxz
or
mov
fucomp
lahf
pop
or
or
jbe
dec
scas
pusha
lock
sbb
fstp
call
mov
pop
call
es
push
and
mov
mov
jge
in
cmpsb
pop
pop
addb
mov
call
movsl
inc
test
jmp
pusha
fdiv
arpl
xchg
xor
xchg
jne
push
addb
cmp
int
cmp
xchg
cmc
in
adc
push
sbb
add
lock
adc
fs
xchg
pusha
mov
cmp
pop
jp
or
push
es
out
add
pop
ljmp
inc
imul
mov
les
xchg
jl
cmp
cmc
ret
loope
fisubrs
jno
dec
adc
and
shl
lcall
jbe
xchg
mov
fwait
aam
pop
mov
movsl
add
or
sbb
mov
cmpsb
jle
outsl
test
sbb
push
ja
fucomip
ret
pop
sub
addl
iret
repnz
dec
arpl
jecxz
outsb
cmpsl
aam
out
fcmovnu
mov
sti
push
test
add
lods
pop
cltd
icebp
mov
mov
pop
je
mov
aam
jae
gs
lods
outsl
and
inc
jle
in
fs
in
inc
push
xchg
mov
mov
mov
pop
cmp
pop
test
add
lods
push
push
push
nop
jbe
outsb
fstl
pop
jp
xchg
adc
adc
cmp
sbb
and
pop
push
test
nop
sbb
imul
sbb
pop
test
out
or
mov
mov
mov
in
mov
cmp
push
cwtl
push
fldl
push
mov
loope
out
add
push
pop
push
jp
inc
fisttpl
xlat
mov
ja
or
mov
insl
sbbb
js
cmpsl
int
clc
add
xchg
cmp
lds
jl
inc
pop
outsb
push
loope
add
push
movsl
cmpsb
das
scas
out
loopne
ljmp
and
lock
out
lea
fs
push
repnz
fcmovb
addr16
and
inc
xchg
mov
jge
gs
cld
pop
cli
jnp
xchg
and
jle
jp
xor
and
loop
nop
adc
inc
mov
mov
or
daa
icebp
xor
add
imul
rcll
sbb
or
ljmp
mov
nop
bound
jge
pushl
loop
mov
push
inc
frstor
pop
or
ss
xor
lds
pusha
dec
jmp
sahf
rolb
in
nop
jmp
int
jg
cmp
xor
jl
xor
cld
je
xor
xchg
cmp
nop
sub
in
pop
cmpsl
call
cmp
movl
cmpsb
test
cmc
mov
int3
in
mov
out
inc
enter
push
cmp
jae
or
or
scas
xchg
jmp
mov
ret
and
ds
and
leave
or
sub
fistpl
lahf
xchg
lcall
outsl
dec
xor
or
mov
jle
int
cltd
filds
jns
jl
push
movsl
test
shll
loop
mov
mov
aam
xor
fnstsw
es
add
dec
jl
loope
ljmp
sub
push
nop
ja
imul
in
bound
push
out
add
jge
mov
pop
outsl
or
aas
sbb
imul
stos
imul
lret
push
inc
xchg
stos
nop
call
add
je
xor
out
dec
pop
jb
adc
out
adc
push
jo
repz
cmp
ret
loop
inc
pop
mov
rol
rorb
sub
add
scas
cld
inc
jge
or
push
mov
mov
imul
clc
loope
daa
mov
push
dec
mov
cs
xor
cli
pop
jb
jno
cmp
push
cmp
lock
ret
sbb
imull
inc
and
xchg
add
inc
or
pop
jg
testb
adc
jnp
or
out
mov
adc
dec
sahf
push
in
push
sbb
dec
aad
mov
or
mov
inc
fidivrl
aas
mov
xchg
clc
shll
dec
es
test
inc
inc
lock
xchg
xchg
mov
ffreep
adc
mov
fsubp
add
iret
in
rcl
test
xor
outsl
popl
cs
popf
lret
mov
inc
mov
int3
inc
push
pop
out
out
xor
or
inc
andl
pop
lock
or
adc
enter
aas
mov
cmp
or
cld
add
jge
ss
or
rcrb
fistps
ds
mov
mov
and
inc
repz
adc
jnp
mov
push
loopne
mov
shll
fistps
mov
leave
pusha
int
cwtl
leave
mov
and
out
xchg
cld
inc
data16
sub
cmp
xorl
adc
inc
and
pop
inc
loopne
dec
push
adc
icebp
mov
mov
outsb
push
fbstp
nop
inc
cmp
outsl
or
cmp
inc
ja
mov
imul
into
mulb
sbb
pusha
inc
xchg
insb
inc
bound
sbb
jl
in
dec
lahf
scas
dec
cmpsl
loope
hlt
mov
inc
std
addr16
pusha
imul
pop
add
mov
push
jne
insb
push
inc
in
lret
mov
xor
xor
jnp
fnstenv
adc
enter
xor
jge
dec
imul
loopne
mov
sub
call
js
xchg
pop
or
add
sbb
inc
test
xor
ret
xorb
int
adc
lret
in
adc
jne
push
jge
push
jbe
stc
sbb
or
xchg
mov
cs
negb
push
mov
movsb
outsb
sub
lcall
sbb
pop
fisubl
testl
cmpb
sahf
xor
lods
nop
call
out
add
xchg
mov
dec
xor
pop
ss
dec
xor
add
inc
bound
in
sbb
adc
pushf
ja
pop
imul
inc
lret
mov
cli
mov
test
pop
sub
xchg
lcall
mov
mov
add
ds
test
adc
iret
jl
ljmp
or
test
jg
repnz
cmc
or
rcrb
adc
mov
shrb
in
sbb
inc
out
or
or
cwtl
sbb
mov
ja
scas
mov
call
adc
cmp
cmp
xlat
mulb
fstl
and
jae
ds
test
and
or
clc
or
lea
mov
in
push
das
addr16
inc
mov
loop
mov
jo
pop
ljmp
mov
xchg
stos
inc
pop
enter
jbe
insl
pop
cwtl
daa
ret
xor
push
jge
in
aas
test
in
sbb
fimull
cmp
in
xchg
test
or
imul
jmp
je
js
inc
inc
movsb
push
or
or
jae
imul
sub
sarl
dec
fiaddl
mov
mov
push
iret
dec
pop
mov
dec
add
and
jns
adc
fcomi
shl
fs
and
das
loopne
xor
aas
or
dec
push
xorb
cmp
leave
daa
sub
dec
adc
enter
stos
pop
sbb
popa
jne
inc
hlt
ficoml
cmp
add
leave
jg
aaa
mov
mov
push
scas
int
loopne
xor
push
jo
pop
add
les
lods
adc
ret
mov
cmpl
jle
test
cmp
nop
decb
lock
andb
sub
mov
scas
push
aad
pop
cmp
shr
mov
outsb
aad
cs
add
lret
stos
inc
sub
lds
popf
mov
sub
sbb
test
sti
sub
or
shrb
out
jo
mov
or
add
cmpsl
iret
lds
into
add
mov
adc
add
clc
jmp
sbb
sub
mov
lret
ja
data16
xor
cld
stc
cmp
dec
cmp
andl
scas
add
sbb
cmc
adc
mov
sbb
mov
jle
mov
scas
iret
jae
leave
fadds
mov
or
xor
fs
cmp
pop
fcompl
aas
ljmp
mov
and
insb
test
sahf
icebp
push
in
jmp
mov
aad
adc
mov
inc
je
jns
inc
incb
outsb
inc
out
inc
hlt
inc
div
cmp
sub
lds
icebp
add
icebp
jnp
shrb
add
mov
sti
roll
sbb
jg
pop
inc
test
mov
out
call
movhlps
mov
arpl
popa
incl
aas
gs
fcoml
sbb
shrb
subl
xchg
loope
les
sbb
xor
adc
push
adc
orb
add
add
nop
inc
add
add
addl
sub
add
or
shlb
incb
jbe
div
std
add
mov
or
jg
add
sbb
mov
pop
idiv
sti
mov
maskmovq
divl
sbb
jb
divb
xor
or
pop
mov
int3
scas
notl
jg
das
jnp
repz
lcall
dec
pop
ja
jae
mov
push
or
incb
neg
xor
mov
scas
jmp
sub
or
xorl
into
repz
push
mov
testb
jnp
mov
jnp
std
mov
xor
mov
push
lcall
fistps
mov
negb
pop
xchg
loope
mov
xchg
and
mov
dec
rep
ja
jae
jmp
cmp
mull
pop
dec
or
xor
sbb
movzbl
pop
jnp
ret
lahf
or
mov
mov
xchg
fisubrs
addl
pop
fisubrs
mov
xorps
jae
shl
lret
pop
mov
jae
andl
mov
lret
sbb
jnp
sbb
xlat
ja
xchg
xor
mov
mov
xor
out
loope
pop
pop
and
aas
pop
in
icebp
pop
jae
sub
mov
movsb
fcmovnb
pushl
cld
jg
sbb
mov
xchg
cmp
divl
jmp
pop
subl
insl
dec
jae
pop
mov
rcll
sarl
jnp
sarl
mov
int3
sahf
jnp
daa
mov
jae
push
xchg
imul
fidivl
sti
addr16
xlat
testl
lock
or
mov
push
xor
out
scas
sub
imul
mov
fcomip
cmp
mov
pop
sti
out
cmp
ret
das
movl
popf
je
dec
das
jg
mov
jge
mull
sbb
js
mov
out
mov
pop
or
or
aaa
dec
dec
jae
pop
mov
add
mov
add
and
out
mov
cmovnp
mov
stc
xor
cwtl
or
lcall
or
jp
icebp
int3
adc
js
mov
loope
mov
and
xchg
sti
inc
test
int
inc
inc
in
adc
stos
lcall
cmc
pop
fsubrl
sub
nop
enter
mov
push
jl
ja
dec
pop
jmp
in
out
pop
push
std
ja
iret
dec
jo
repz
incl
fdivrl
loopne
mov
pushf
jo
imul
jg
dec
mov
mov
mov
hlt
mov
iret
mov
adc
test
or
andb
push
jb
mov
gs
jbe
push
outsl
imul
outsb
addr16
add
xchg
mov
sbb
je
fcmovu
mov
xor
gs
outsb
jbe
adc
adc
jae
inc
aas
imul
pushl
jb
cmp
jae
popa
addr16
push
gs
jo
adc
mov
push
arpl
xor
dec
gs
mov
cmp
arpl
outsb
daa
dec
outsl
popa
imul
outsl
jne
gs
sbb
mov
jl
jne
outsl
bound
sbb
arpl
imul
jne
push
sub
inc
jb,pn
ss
mov
movsb
gs
jle
push
out
shrl
jns
push
push
je
popa
insb
inc
jbe
mov
inc
inc
sbb
push
popa
sbb
xchg
mov
in
push
imul
push
addl
cld
pop
and
test
push
xchg
push
inc
imul
fmul
mov
fisttpl
jbe
fildl
sub
cmp
frstor
movsl
inc
outsb
fs
adc
outsl
jbe
mov
xor
mov
push
jb
lods
loopne
fists
insb
push
outsb
ja
jecxz
jmp
daa
mov
xor
loope
mov
fcompl
push
jo,pn
ss
sub
mov
or
fiaddl
mov
imul
mov
lods
push
pop
jo
sbb
and
sub
xchg
push
lea
rorl
data16
in
int3
and
push
push
adc
pop
faddl
inc
mov
inc
movb
out
icebp
pop
imul
sbb
or
pop
lret
pusha
inc
dec
fs
insb
mov
outsl
repz
fs
adc
mov
aam
jb
imul
adc
or
shll
sub
mov
das
lcall
imul
inc
and
push
pop
adc
std
outsb
cmpsb
outsb
jmp
scas
daa
dec
ss
push
pop
mov
adc
imul
lea
add
push
jae
insb
jnp
jl
push
jo
decb
jo
sbb
add
lock
adc
lcall
arpl
or
xor
dec
jl
pop
imul
lcall
test
dec
test
dec
popa
insl
adc
insb
mov
bound
inc
jb
pop
xchg
dec
mov
jo
push
outsl
insb
xchg
inc
push
mov
jno
daa
inc
mov
pop
jp
ret
insl
xor
and
jecxz
add
pop
sarb
sbb
push
jmp
add
popa
imul
addr16
jmp
xorl
outsl
mov
out
out
rcrb
scas
push
pop
push
cs
or
cmp
sub
pop
cmp
mov
push
fwait
imul
push
pop
xchg
lret
mov
jo
cmp
push
popa
jae
aas
push
mov
add
insl
mov
and
inc
imul
out
jae
jb
aad
xor
push
arpl
mov
push
dec
dec
push
mov
inc
outsb
sbb
mov
repnz
das
xchg
and
dec
inc
jno
out
movsb
inc
rcrb
push
jne
lds
jnp
add
insb
addr16
ret
inc
or
out
push
cmp
js
movsl
dec
inc
rcrb
popa
jnp
cltd
dec
push
daa
adc
movsl
movb
jnp
dec
mov
dec
stos
pop
jno
xor
ret
fstps
jae
mov
jno
mov
push
xor
inc
mov
lcall
push
add
push
mov
fs
fisubl
movsl
add
add
push
mov
mov
xor
sarb
ja
xor
cmc
or
outsb
insb
pop
test
inc
popa
and
sbb
popa
jns
gs
mov
xchg
inc
je
pcmpeqb
sub
inc
outsl
js
mov
das
int
rclb
test
sbb
imul
aas
mov
pop
jbe
sub
inc
and
sub
jo
and
push
imul
jns
or
test
add
lret
push
addb
pop
imul
gs
cmpsl
pop
movsb
jns
cmp
sbb
jbe
and
cltd
imul
ret
ret
push
sub
mulb
and
ficomps
cmp
jae
sahf
cwtl
leave
or
sub
jne
mov
hlt
fwait
aam
outsb
inc
mov
je
je
fs
into
inc
push
sub
hlt
push
mov
aad
push
imul
xlat
push
insb
dec
ja
sbb
dec
es
inc
push
push
test
dec
imul
sbb
mov
popf
fcomps
pop
dec
ret
pop
shrb
nop
add
mov
sub
jmp
stos
out
inc
push
fisttpl
add
and
jns
sbb
test
outsl
imul
and
in
inc
dec
add
add
add
add
add
lcall
or
xor
adc
test
jnp
or
push
add
ja
push
pop
mov
or
xchg
push
dec
ss
xor
pop
push
mov
cmp
cmp
insb
or
sub
je,pn
pop
insb
pop
and
mov
cmpsb
rcrb
or
add
add
add
add
add
add
add
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
