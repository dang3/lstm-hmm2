inc
add
je
je
outsl
add
inc
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
dec
add
insb
add
add
je
add
dec
add
popa
add
je
imul
push
add
je
insb
add
push
add
js
je
add
inc
add
je
je
outsl
add
push
add
js
je
add
add
inc
add
popa
add
push
add
js
je
add
add
inc
add
je
je
outsl
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
inc
add
arpl
add
add
add
imul
add
je
push
add
js
je
add
dec
add
insb
add
add
je
add
inc
add
jo
push
add
jb
imul
add
popa
add
add
add
add
outsb
add
arpl
je
imul
inc
add
jb
add
jb
add
add
inc
add
je
imul
inc
add
jb
add
jb
add
add
push
add
je
insb
add
push
add
js
je
add
push
add
outsb
add
add
push
add
js
je
add
add
dec
add
outsb
add
push
add
js
je
add
add
push
add
outsb
add
add
inc
add
popa
add
add
add
imul
outsl
add
add
add
dec
add
outsb
add
add
add
dec
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
je
imul
push
add
je
insb
add
add
inc
add
arpl
imul
add
outsl
add
outsb
add
add
add
arpl
add
lea
mov
push
push
add
add
add
add
add
or
add
add
add
add
add
cld
add
add
add
add
add
add
cli
add
dec
add
add
jb
lret
add
add
add
add
or
js
bound
add
inc
add
bound
sti
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
dec
add
add
add
add
push
add
add
add
add
add
xor
lret
add
add
dec
add
fildl
sti
add
cmp
mov
flds
inc
add
sub
dec
add
add
add
add
add
add
add
dec
add
add
add
sub
flds
call
add
add
jge
or
flds
sti
add
adc
cmp
dec
add
add
cmp
push
add
add
add
add
push
add
sti
add
sub
aaa
add
add
add
test
dec
add
add
add
int
pop
add
lret
add
add
add
add
add
add
push
add
add
sti
add
xchg
add
add
or
flds
or
add
add
flds
insl
add
mov
loope
add
add
add
int
pop
add
add
add
add
add
add
flds
sub
mov
add
add
add
add
add
inc
add
add
add
add
mov
imul
cli
add
add
sti
add
jb
pop
add
add
add
adc
test
lcall
add
outsl
add
add
add
add
add
add
add
add
addb
add
sti
add
test
and
push
gs
repz
adc
fwait
add
add
add
add
add
jmp
add
add
int
inc
add
adc
sti
add
mov
popf
add
add
add
mov
xor
lret
add
add
add
add
add
add
call
add
add
pop
add
add
add
cltd
add
add
add
add
add
lock
add
sti
add
add
xor
add
add
add
add
addl
add
add
or
xchg
add
add
add
add
add
flds
sub
or
sbb
sub
add
testb
add
add
mov
add
add
add
add
add
test
sub
add
pop
add
flds
jmp
add
add
add
add
add
or
lret
add
add
add
add
xchg
add
sub
movsl
add
cltd
add
add
add
cltd
add
add
add
sti
add
add
add
add
add
add
add
dec
add
add
add
sti
add
add
add
add
add
add
add
movsl
add
add
add
add
add
add
add
add
add
arpl
and
add
add
add
add
add
mov
mov
add
flds
mov
aas
add
add
add
add
add
add
sti
fstps
xor
sbb
lret
idivl
scas
adc
mov
data16
cli
addb
adc
movsb
lcall
ljmp
pop
mov
mov
sahf
jb
inc
lods
dec
pop
setg
mov
sub
sub
in
and
jle
xlat
mov
stc
fnsave
in
add
std
add
imull
lahf
pop
aam
inc
mov
leave
jmp
popf
leave
hlt
xchg
add
mov
scas
mov
aam
cmpsl
mov
and
mull
fninit
inc
xor
pop
push
inc
ds
inc
lret
gs
imul
fildl
sbb
cmpsb
ja
cmp
ds
pop
data16
mov
sub
cmpsb
xor
sbb
fwait
mov
jae
mov
or
js
cmpsl
cmp
int
pop
cld
ja
jecxz
add
pop
cmp
mov
js
jb
cmp
sub
out
pop
enter
jmp
fisubl
sbb
bound
xor
enter
inc
imul
push
rcrb
fwait
pushf
ret
stc
jecxz
or
mov
jns
xchg
loope
xchg
mov
xchg
cs
lds
out
adc
nop
inc
fsubrs
xchg
sahf
test
arpl
sub
add
dec
sbb
mov
pop
sub
xor
cmp
testl
shrb
jmp
sahf
mov
cmp
xor
pushf
xor
sbb
or
inc
lret
aad
jno
push
sbb
adc
test
push
lea
push
js
mov
call
scas
test
sbb
and
divl
push
xor
mov
adc
jae
pop
ljmp
out
adcb
test
cmp
adc
add
inc
inc
leave
mov
out
xor
pop
inc
fisubl
adc
jle
subb
mov
pop
jmp
jbe
or
in
dec
fisttpll
insl
adc
or
add
push
inc
sub
and
or
lret
sub
sti
adc
js,pn
cmp
inc
pop
xor
rcrb
ffreep
lea
cmp
test
xor
clc
xor
push
inc
clc
xor
lret
scas
sbb
shrl
sbb
pop
xlat
or
sub
repz
cmpsl
test
fst
or
mov
fmuls
inc
dec
pushf
pop
je
out
pushf
sti
pop
mov
mov
cmp
xor
jmp
insl
sub
push
xchg
icebp
jmp
testl
pop
pop
cmp
repnz
loope
cmp
and
insb
push
adc
or
sub
xor
sub
push
fisubrl
add
add
add
add
rolb
add
add
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
push
mov
push
push
push
call
mov
movb
mov
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
call
call
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
pushl
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
jecxz
push
xchg
mov
xchg
mov
ret
jle
adc
and
xor
jle
dec
bound
cmpsb
cmpb
out
ret
into
loop
mov
adc
and
xor
sbb
bound
je
ds
or
mov
loop
es
push
push
and
out
icebp
sahf
fcmovne
lret
gs
xlat
lret
jns
loope
addr16
xchg
dec
mov
cmp
jmp
jmp
aaa
mov
ljmp
icebp
aaa
cmc
push
jmp
out
fwait
iret
and
subb
lretw
mov
push
rcrl
push
repz
mov
mov
in
popa
add
iret
mov
or
std
insl
in
push
cmpsb
loope
jecxz
jl
pop
push
inc
ret
pop
aas
adc
pop
mov
outsb
pop
icebp
fstpl
push
push
bound
mov
pop
mov
repnz
push
sbb
daa
mov
adc
inc
pminub
daa
jmp
jle
or
addr16
cmpb
out
ret
into
loop
repnz
lods
adc
and
xor
inc
pusha
push
dec
bound
sbb
xchg
ror
mov
mov
dec
jnp
adc
jg
pop
add
aaa
cmp
sbb
out
test
scas
lahf
sahf
mov
dec
jg
imul
sbb
xor
sbb
rcr
xlat
stos
in
ror
loop
repnz
adc
and
xor
jle
dec
bound
scas
cmpb
out
ret
into
loop
repnz
adc
and
xor
jle
dec
bound
scas
cmpb
dec
shll
fisttpll
sbb
test
sub
or
cs
rclb
cld
sahf
push
push
and
loope
push
xlat
nop
negl
mov
repz
cmp
les
push
adc
push
mov
out
clc
mov
cmc
inc
jle
ljmp
test
xchg
test
xchg
int3
xchg
clc
daa
or
cs
and
aam
mov
shl
shrb
inc
popa
pop
jg
adc
daa
roll
pop
mov
inc
push
and
xchg
pop
notl
mov
call
jmp
cmp
add
movl
movsb
sub
mov
jae
push
bound
jb
inc
fstenv
lods
sub
xchg
repnz
cltd
jp
jnp
nop
jecxz
fcmove
test
out
xchg
call
and
stc
lods
and
xor
popa
pop
xchg
popf
mov
mov
pop
shlb
jp
mov
and
xchg
mov
push
or
mov
int3
cmp
data16
out
and
test
xlat
repz
data16
sub
or
je
inc
aaa
pop
ret
jnp
cmp
jp
adc
aam
and
repnz
mov
mov
dec
pop
sbb
ljmp
in
mov
bound
imul
push
pushf
ja
ja
mov
cmp
xorl
or
pop
idivl
add
xchg
jg
enter
and
scas
xchg
mov
fisubs
mov
cwtl
ret
cmp
add
mov
xchg
ficoml
dec
push
push
scas
cmp
fsubp
pop
sbb
push
daa
push
lods
pusha
inc
jl
and
push
and
jo
popf
jl
or
arpl
insb
inc
sahf
jnp
ret
xchg
daa
lds
sti
in
pop
inc
xchg
xchg
sbb
jb
js
imul
leave
push
xchg
iret
cmp
scas
setne
pop
xor
and
jbe
pusha
adc
shr
push
insb
mov
jmp
inc
ds
pop
loop
xlat
xchg
push
repz
push
and
push
dec
adc
and
mov
or
and
pop
mov
decl
into
mov
push
jbe
dec
jge
dec
jp
lret
dec
test
cmp
jle
dec
aad
dec
jno
xchg
pop
mov
xchg
xchg
mov
or
jle
lcall
imul
jno
and
xchg
sahf
into
xchg
mov
imul
enter
dec
aaa
cmpsl
js
push
pusha
mov
adc
jns
and
cmc
repz
les
push
dec
popa
jns
cltd
pop
add
or
mov
push
lods
leave
je
mov
stos
dec
loope
mov
dec
imull
sbb
xchg
adc
jbe
mov
xorl
mov
repz
mov
push
mov
or
es
mov
xchg
les
mov
out
fsts
pop
and
test
pop
mov
push
sbb
dec
push
in
jbe
fists
sahf
push
stos
xchg
push
lods
outsl
mov
pop
push
mov
cmp
lahf
ficoms
pop
pop
mov
push
je
clc
jmp
stos
cmpsl
push
addr16
inc
mov
sub
sbbb
mov
push
sbb
push
leave
xchg
call
test
icebp
ja
ret
das
mov
pop
pop
pop
pushf
push
jb
jns
call
inc
push
fisubl
xor
rcrl
mov
les
lds
ret
xchg
les
mov
popf
dec
jl
cmp
fildl
data16
or
or
je
xlat
pop
leave
notl
in
dec
inc
std
mov
jecxz
int3
stos
pop
fldl
lea
hlt
sbb
xor
adc
out
inc
jbe
cwtl
dec
pushf
das
push
and
or
or
ret
loop
ret
ljmp
sahf
aam
aaa
pop
cmpsb
push
fwait
roll
test
pop
jecxz
cmc
into
or
imul
and
and
nop
addr16
ljmp
cmp
inc
paddb
sbb
adc
fsubr
ljmp
stos
dec
adc
lods
xchg
adc
cmpsl
jbe
mov
inc
or
and
adc
es
inc
dec
sub
jbe
push
push
sub
inc
outsl
xchg
dec
inc
dec
icebp
aad
ret
mov
rclb
pushf
ret
in
xchg
scas
or
shll
mov
sar
sbbl
xor
lods
cltd
add
idivl
dec
pusha
std
ret
out
or
adc
jns
sbb
push
test
adc
call
mov
insb
fdiv
testl
xor
bound
mov
sbb
xchg
pop
pop
mov
cmp
push
fld
adc
cmpl
or
dec
xchg
out
add
sbb
adc
test
sbb
gs
jnp
repz
adc
add
mov
orb
imul
xor
sub
mov
dec
pop
mov
xchg
mov
ret
mov
sub
call
jne
sbb
mov
push
sub
sub
cmp
mov
outsl
mov
add
in
sub
xor
enter
push
inc
pop
int
js
outsl
cmpsl
outsb
xor
mov
idivb
cmp
fildl
mov
jmp
inc
xchg
aaa
dec
push
mov
not
in
imul
nop
cmpsb
cmp
or
xor
adc
leave
inc
movsb
sub
sub
shrl
rolb
push
fisttpl
loop
scas
pop
jp
push
and
lea
mov
jl
xlat
cs
lds
aam
jl
cmp
pop
xor
and
jb
mov
ja
mov
pushf
sbb
jl
rcrl
pop
lret
inc
pop
lcall
or
and
mov
push
aas
out
out
jne
test
cmp
fdivrp
arpl
int
dec
cwtl
sub
mov
or
sbb
add
cwtl
dec
dec
inc
es
dec
add
mov
icebp
and
in
or
fildl
or
jmp
adc
and
cmp
pop
fwait
xchg
sub
je
insb
shrl
xlat
popa
push
cmp
sti
or
xchg
shl
lret
xchg
push
lods
inc
xor
dec
es
lcall
pop
xchg
adc
add
mov
fucomi
mov
mov
jae
fxch
adc
adc
jb
mov
sbb
clc
and
fistl
arpl
out
cmpsl
mov
aas
adc
ret
out
insl
mov
test
sub
out
mov
add
mov
pusha
push
mov
jp
and
dec
mov
int3
ret
arpl
push
or
aad
pop
xchg
nop
mov
jg
rcl
jp
pop
push
pop
push
jg
cmp
gs
pop
out
ljmp
push
ret
sub
outsb
je
clc
lret
fisubrs
dec
repnz
lcall
xor
sub
add
jae
cmp
jbe
sahf
gs
inc
test
shlb
cltd
shll
jmp
fstpl
stos
fs
fdivr
inc
jmp
and
lcall
divl
pop
pop
lret
lods
into
sbb
out
ss
xor
pop
andl
add
arpl
mov
jge
mov
mov
push
dec
push
cs
or
push
jle
mov
add
xchg
xchg
mov
arpl
xchg
or
adc
xor
cmc
xchg
mov
out
movsb
lods
pop
sub
fisttps
xchg
inc
or
xchg
cmpsb
add
fstpl
sbb
mov
jb
and
xor
test
into
or
repnz
sub
aas
ja
sar
or
sbb
push
adc
push
fwait
aaa
jnp
jecxz
mov
fiadds
dec
inc
int3
shll
jo
fldcw
insl
xlat
pop
mov
xchg
sub
mov
sub
shr
enter
ljmp
push
and
pushf
scas
inc
sub
sub
lods
jp
pop
jb
pop
mov
repnz
lcall
shr
xchg
mov
dec
and
shrl
cltd
into
test
scas
imul
add
jmp
sbb
dec
add
pop
push
mov
das
in
adc
push
sub
jnp
popf
repnz
mov
sbb
mov
cld
js
jmp
add
cmp
fildl
in
lock
or
xchg
fcoml
fisubs
cmp
mov
into
push
mov
push
std
es
or
lods
in
fsubl
ds
jmp
add
js
pop
dec
fisttps
fwait
mov
dec
cltd
aad
dec
xchg
cmp
gs
lret
push
mov
adc
cwtl
mov
mov
mov
cmp
dec
ficoml
sbb
push
mov
sti
mov
sarl
jns
mov
jecxz
pop
ds
push
cmp
jge
pushf
das
loop
shll
lahf
mov
int3
cmp
push
sbb
lea
imul
or
rep
enter
fmuls
int3
leave
fs
push
pusha
sti
mov
mov
subl
daa
cmpsb
pop
mov
jg
lahf
push
push
shll
mov
push
sbb
add
test
aad
jecxz
ds
sub
jnp
xchg
xchg
int
mov
scas
call
cld
fsubp
rcrl
sbb
sbb
cltd
sbb
shlb
jmp
add
jb
aaa
inc
outsl
movsl
loopne
rol
xchg
mov
stos
je
stos
call
aad
jp
or
int
adc
cmc
aas
pop
test
sar
pop
cltd
popa
lret
test
inc
repz
pusha
cmpb
nop
out
push
rcrl
sbb
dec
push
jl
adc
mov
ja
jg
imul
xchg
cmp
mov
sbb
jl
ja
jl
shrb
lds
popf
into
imul
or
ja
jns
sub
lea
in
loope
fxch
repnz
ret
mov
fwait
mov
je,pt
dec
and
rol
or
or
cmp
scas
xlat
jb
aas
mov
add
jno
js
mov
leave
ljmp
xchg
sub
inc
pop
imul
inc
adc
imul
jecxz
push
pop
jae
add
lret
shll
sub
push
shr
fwait
mov
jns
shrl
cmp
xor
dec
xchg
jmp
outsb
and
or
mov
scas
popf
arpl
mov
popf
fwait
sarl
lret
test
and
nop
sub
std
jl
xchg
and
icebp
jmp
mov
sbb
icebp
loop
jne
insb
nop
test
jae
sbb
fsubrs
mov
in
jg
add
movsl
mov
xor
lods
jno
bound
add
shl
push
popa
mov
shll
sbb
in
gs
dec
sbbl
in
xchg
ret
les
gs
imul
stos
movsb
push
pop
divb
xchg
xor
pop
xchg
mov
movsb
enter
mov
push
sbb
pop
int
cmp
bound
fwait
dec
cmp
push
inc
dec
mov
sub
nop
mov
aam
dec
jns
outsb
inc
imul
jae
in
jp
ret
dec
push
mov
inc
fs
ret
xchg
xchg
jecxz
sub
popf
lods
out
jge
jecxz
adc
arpl
mov
out
imul
jl
pop
or
test
data16
aad
addr16
adc
ljmp
adc
out
out
add
iret
or
add
bound
div
imul
dec
jns
fsubrp
sti
push
push
gs
push
mov
or
sub
adc
arpl
jns
jmp
mov
iret
sbb
sbb
minps
stos
aam
inc
es
xor
mov
dec
lcall
pop
push
testl
pusha
iret
sbb
jno
fidivrs
inc
repz
rcrb
roll
mov
addr16
insb
jp
cltd
ja
orl
cmp
mov
mov
push
xchg
sbb
push
call
jno
xor
and
shrl
pop
xchg
lahf
add
sbbb
jge
bound
adc
xchg
or
sbb
jecxz
jmp
in
jne
dec
call
test
mov
pop
insl
fwait
jnp
test
xchg
xchg
popl
pop
ja
stos
stos
add
inc
clc
xor
lea
imul
pop
incl
sub
adc
je
in
pop
cmp
lcall
pop
fwait
xor
repnz
mov
xor
dec
lods
push
xchg
cltd
or
pop
inc
jbe
daa
push
out
mov
dec
imul
sbb
rcl
ljmp
cmpsb
dec
repz
inc
iret
je
inc
or
pushl
and
pusha
sub
mov
ror
inc
dec
sbb
ror
cmp
cmp
jle
pop
jecxz
dec
repnz
mov
mov
dec
xlat
outsb
jle
in
out
jns
scas
and
iret
shll
xchg
xchg
pop
add
mov
add
xor
das
add
adc
push
mov
push
hlt
push
push
push
cwtl
arpl
sbb
sbb
movsb
lea
add
sarb
test
jp
mov
inc
insb
or
push
and
pusha
inc
ret
dec
inc
daa
mov
std
mov
mov
push
xchg
or
and
add
gs
sub
jnp
jle
out
pop
call
sbb
loopne
ror
xor
lcall
mov
mov
mov
into
or
in
mov
adc
icebp
sahf
add
cmpsl
cld
xchg
lock
jp
dec
pop
into
cmp
ljmp
pop
or
mov
adc
and
pop
inc
inc
or
mov
mov
pop
addr16
push
push
mov
sti
mov
movsl
push
sbb
out
mov
xchg
subl
adc
inc
int3
jmp
mov
jo
mov
lds
xor
dec
roll
loope
fsubr
dec
jp
add
jge
xchg
or
out
sub
mov
loope
lret
or
cmp
push
ja
stc
sbb
cmpsl
js
testl
das
inc
insb
inc
pop
fs
xor
loope
dec
mov
jp,pn
and
pop
shl
add
int
inc
jbe
fiaddl
stc
int3
ret
in
or
inc
xchg
xorl
mov
sbb
dec
ds
dec
dec
in
jnp
ret
cmp
test
icebp
insl
cmp
shll
lret
dec
pop
stc
inc
lcall
mov
mov
stos
pop
xor
or
mov
jne
fnsave
push
fistpll
mov
out
xchg
int
jecxz
and
jl
and
mov
rclb
xor
push
ret
shr
sub
push
in
jle
pop
cmpsl
shlb
sub
lock
mov
push
dec
inc
push
jge
sbb
dec
sbb
pop
inc
ss
push
movsb
xchg
cmpsl
and
xchg
sub
push
mov
add
movsb
ss
je
mov
es
add
sbb
in
cmp
data16
pop
adc
cmc
mov
mov
add
and
fists
mov
mov
fiaddl
dec
cmpsb
jg
stos
ljmp
dec
cmp
cltd
adc
mov
push
loope,pn
jnp
repnz
push
pop
mov
push
arpl
fisubs
or
push
cmp
shrl
fisubrl
ljmp
loop
lods
sti
mov
jo
ss
ret
jnp
out
inc
outsb
sub
xchg
add
fadds
inc
fstl
shll
or
xchg
mov
fmull
inc
loope
mov
add
mov
ss
xor
vpmuludq
dec
or
addr16
in
jl
push
cld
popf
test
sar
push
lret
or
mov
and
sbb
adc
in
mov
fstps
cld
sub
repnz
cmp
ss
xchg
adc
or
int
subb
inc
xchg
aas
mov
or
mov
in
shll
xor
sbb
mov
fneni(8087
fldl
dec
xlat
sbb
clc
pop
nop
addb
or
mov
outsl
leave
jae
leave
xor
cmp
jl
psubsw
mul
sub
ficompl
int3
jle
sub
std
dec
sub
mov
stos
cmc
sarb
test
in
stos
lret
push
loope
out
cmp
aas
push
cmc
aaa
add
popa
jl
inc
fcmovbe
fcmovnu
shll
sbb
push
gs
inc
stos
inc
ret
jbe
leave
xlat
inc
fisttpll
insb
and
xor
arpl
xchg
xchg
adc
push
jo
or
orl
test
add
insb
jge
aam
popa
push
or
cmp
sbb
std
mov
or
imul
inc
jo
xchg
fs
xor
rolb
or
jb
aad
hlt
mov
jnp
ja
jnp
movsb
out
jns
es
icebp
mov
repz
xor
dec
jnp
pop
mov
push
jle
add
and
cmpsb
or
adc
push
lods
pop
stc
dec
inc
sub
lock
hlt
out
jo
movsl
loopne
inc
mov
add
pusha
push
imul
popf
xchg
hlt
or
xchg
mov
cmc
inc
dec
jg
fucom
mov
lock
pusha
xchg
mov
fwait
push
in
mov
out
mov
loope
stos
lcall
dec
jo
insl
push
stc
xchg
addr16
arpl
push
ja
test
repnz
add
lcall
push
lock
pusha
psrad
or
dec
adc
pop
cld
fadds
ds
je
push
int
mov
in
xlat
xchg
repz
inc
jno
cmp
leave
cmp
cmp
incl
shl
add
and
or
or
push
call
aaa
mov
addr16
mov
push
xlat
out
mov
mov
and
movl
cmp
mov
mov
test
xor
push
inc
adc
jae
dec
mov
ja
pop
pop
mov
in
loope
in
scas
aas
in
sub
stos
push
ja
cltd
out
jg
js
jo
jg
jge
mov
rol
dec
test
mov
jecxz
adc
fcmovne
lret
mov
push
xchg
fwait
iret
aam
data16
loop
mov
xchg
shl
jne
mov
jmp
inc
scas
aam
fwait
fs
ret
je
outsb
cltd
dec
sub
push
adc
shll
fnstcw
dec
sahf
pop
jno
into
mov
out
xor
test
inc
ja
xchg
ret
adc
mov
movsw
mov
jmp
shrb
and
lcall
jp
sti
outsb
out
dec
std
dec
push
or
xor
cltd
cmp
jb
fiadds
push
cmpsl
cmpsb
sbb
nop
lret
lcall
dec
inc
push
loopne
cmp
mov
mov
push
pop
pop
pop
dec
fnstcw
fstl
adc
pop
popa
in
movsb
sub
cmp
mov
push
roll
add
push
jecxz
jp
mov
xor
dec
mov
inc
stos
jno
insb
and
rol
js
sbb
test
xchg
or
xor
cli
jl
aas
cld
and
popf
or
push
sbb
sbb
fbstp
inc
data16
nop
ret
mov
jne
push
enter
int
mov
sbb
fstpl
in
push
je
imul
repnz
add
hlt
jmp
adc
push
and
imul
fnstenv
test
mov
leave
dec
jb
mov
xchg
loope
je,pt
orl
leave
insb
add
loope
nop
inc
frstor
lret
sub
pop
sub
mov
jp
xchg
sbb
in
mov
adc
aas
mov
ja
xchg
enter
test
shll
repz
inc
pop
movsb
jle
inc
mov
jbe
pop
jp
jp
loop
mov
pop
or
clc
mov
leave
mov
sbb
ds
and
pushf
jbe
mov
sub
xor
push
and
into
aas
pop
inc
xchg
push
fcomps
leave
add
push
sti
aas
je
and
adc
movsl
test
jecxz
ja
andb
dec
dec
sbb
jg
in
xchg
or
stc
or
stos
fstpl
jl
jnp
sub
call
insb
mov
jge
xor
andb
leave
xor
xor
push
fldcw
pushf
sub
in
push
xchg
cmp
loop
lods
das
fstps
xor
cmp
int
or
loope
sbb
sub
sub
int
or
mov
jg,pn
mov
mov
cmp
pop
inc
ficomps
xchg
xchg
hlt
mov
ror
loop
repnz
adc
and
xor
jle
dec
bound
scas
cmpb
out
ret
into
loop
repnz
adc
and
xor
jle
dec
bound
scas
cmpb
out
ret
into
loop
repnz
adc
and
xor
addr16
dec
bound
mov
xchg
xchg
push
mov
out
ror
loop
repnz
mov
sbb
imulb
daa
mov
xchg
dec
lret
ja
bound
push
out
divb
xchg
inc
cmpsb
inc
mov
inc
cmpsl
push
xchg
xchg
push
out
xlat
movl
out
divb
addr16
push
out
mov
aam
push
xchg
into
xchg
out
xlat
enter
sbb
mov
mov
push
pushl
sub
fistl
xlat
and
popf
sub
hlt
out
mov
and
sbb
mov
jp
sbb
jecxz
call
loop
lret
call
je
jecxz
xchg
mov
mov
mov
push
cwtl
jl
pop
repz
insl
cs
xorb
inc
imul
leave
cmpsb
cmpsl
xchg
aam
add
mov
imul
push
lret
jle
ffree
leave
daa
cmp
xchg
shr
or
dec
dec
in
push
pop
mov
pop
and
push
xlat
cs
ss
xchg
push
movb
mulb
mov
jmp
ja
dec
pop
inc
das
xchg
das
add
enter
bound
mov
add
inc
xor
inc
cmpsl
cmpsb
xchg
loop
jl
push
out
xlat
cld
mov
inc
daa
adc
testb
ja
outsb
push
cmpsb
inc
fadd
adc
push
sti
and
cmpb
mov
xchg
js
arpl
cmp
xor
call
pop
iret
push
xchg
imul
subb
xchg
cmp
adc
pop
pop
ffree
adc
adc
xlat
es
ss
daa
pop
out
divb
addr16
push
cmpsb
inc
mov
inc
cmpsl
push
xchg
xchg
push
out
xlat
es
ss
daa
pop
out
divb
addr16
push
cmpsb
inc
mov
inc
mov
pop
test
adc
jg
sub
std
pop
imul
xor
fistl
ljmp
jo
lods
pop
mov
jle
es
fistps
mov
loop
fldcw
ljmp
and
pop
mov
cmc
inc
xor
lcall
cwtl
jo
rcll
pushf
xor
pop
rcrb
daa
pop
es
testl
xor
pop
sbb
sbb
neg
out
mov
int3
cmc
push
ret
gs
cmpsl
xchg
es
iret
mov
pmaxsw
out
jmp
pusha
ljmp
mov
fcmovu
cli
pop
push
loope
add
jle
jle
inc
inc
scas
sbb
les
cmpsl
out
dec
ret
movsl
addl
arpl
insl
popa
and
nop
pop
cltd
inc
popf
cwtl
dec
mov
xchg
js
popa
in
adc
xchg
clc
loope
mov
sub
mov
lea
loop
xor
incb
aam
scas
dec
outsl
in
mov
stos
add
in
arpl
frstor
out
les
hlt
adc
popf
and
pop
hlt
dec
pmaxub
fucomi
inc
loopne
test
rcrl
mov
popa
lcall
clc
jne
jne
pop
mov
fmull
add
enter
push
ret
sbb
inc
jo
xchg
add
std
sbb
inc
cwtl
or
mov
insb
sahf
jae
das
sub
je
mov
push
aad
and
mov
enter
mov
pop
dec
sbb
out
xlat
out
dec
push
shlb
sti
scas
out
je
and
xor
loope
pop
add
sbb
sub
mov
pop
sub
gs
lcall
add
ljmp
sub
fnstsw
pop
push
mov
adc
add
pop
mov
xlat
aad
scas
inc
filds
jnp
fmul
movsl
push
loope
sbb
test
jae
loop
jge
and
add
adc
in
adc
sub
sbb
mov
inc
mov
das
pop
rol
jmp
and
xlat
hlt
subl
xchg
loopne
incl
push
ret
inc
test
push
xchg
out
into
xor
inc
mov
cwtl
xchg
imul
icebp
inc
push
je
outsl
pop
daa
adc
jl
add
add
sub
sub
fwait
lock
xor
push
fiadds
ret
cmp
rcrl
scas
inc
popf
or
pmulhuw
fisubrl
shr
add
scas
cmc
push
push
icebp
inc
popa
push
incl
adc
jmp
icebp
daa
fwait
add
and
pusha
rcl
jae
jno
stc
imul
les
mov
rorl
jnp
push
pop
es
mov
jbe
xchg
test
jg
dec
add
push
jo
sarb
xchg
repz
cmp
sub
test
push
mov
ret
call
cli
repz
or
mov
imul
js
inc
mov
adc
pop
pop
cmp
add
inc
int
testl
js
addl
aaa
decl
popf
xchg
jge
enter
xchg
pop
dec
sti
push
jmp
lahf
xchg
loopne
lods
and
push
aam
push
fdivrs
or
aaa
pop
fcmovne
cmp
imul
addr16
xor
inc
repnz
pushf
pop
rcl
adc
or
jns
insb
push
xchg
imul
cmp
sub
add
mov
or
andb
stc
adc
pushf
jae
ss
cmpsb
bound
or
xor
adc
pop
int
fwait
push
sbb
or
ror
and
inc
ds
xchg
imul
ss
push
stos
shll
mov
cmp
aad
pop
jecxz
popf
cmpb
sub
rorb
cmp
lahf
scas
addr16
xchg
das
pushf
rcll
mov
insb
pop
cmp
int3
sar
out
insl
roll
push
in
out
scas
inc
data16
stc
push
mov
fcoms
mov
fwait
or
xor
inc
push
dec
stos
adc
sbb
repz
insl
movsb
jmp
jge
xor
push
sarb
icebp
jge
pusha
cwtl
dec
dec
sbb
leave
mov
or
sub
lahf
fsub
test
daa
fstps
orl
jne
fs
sbb
sbb
ret
xchg
subl
adc
subl
sbbl
jmp
cmpsl
inc
pop
rorb
sbb
loopne
ja
stc
dec
add
fldenv
cli
imul
pop
jp
mov
mov
ljmp
add
jp
mov
test
or
cmpsl
sarl
mov
jbe,pn
cwtl
movsl
filds
mov
mov
es
mov
dec
lcall
xor
mov
adc
sub
cmp
fs
andnps
add
cmp
ljmp
mov
fwait
inc
dec
dec
scas
in
fcomps
dec
sbb
shlb
jg
addr16
es
mov
inc
mov
movsb
stc
leave
or
xlat
jbe
ror
test
std
leave
mov
cli
inc
dec
ja
xor
add
insl
fcmovu
icebp
xchg
stos
scas
mov
sub
adc
dec
nop
pop
pop
fldenv
add
ss
push
out
cmpsb
into
insl
stos
je
sub
decl
mov
out
js
repz
and
rorb
mov
popa
sbb
cmp
fwait
ss
lcall
sti
and
orl
loope
idivb
loopne
lcall
jb
mov
ljmp
add
scas
pop
push
jle
ss
cmp
xchg
int3
sub
xlat
xchg
das
mov
pop
push
xor
fcmovnb
imul
sbb
sbb
jle
push
add
fwait
sbb
movsl
xchg
jbe
jge
xor
loope
jns
cmc
clc
outsl
es
mov
leave
jb
movsl
rorl
lods
popa
dec
or
xchg
and
mov
pop
xchg
imul
sbb
in
lds
push
push
aaa
pushf
stc
ud1
sahf
dec
fsubl
push
int
sub
mov
loopne
push
or
daa
mov
xchg
insl
rcll
data16
sbbl
xor
sub
push
in
cltd
and
sub
pop
cmp
fistl
or
mov
xor
inc
aam
stos
jle
leave
lods
out
push
rorb
inc
xchg
fcomip
pop
insl
aas
and
test
sarl
sbbb
dec
lds
sar
sti
push
mov
imul
cwtl
jno
pop
mov
pop
sbb
js
nop
push
xchg
out
clc
sub
call
cmc
xor
jo
inc
pop
add
mov
mov
xchg
dec
add
and
mov
jb
dec
mov
or
and
push
jmp
jbe
lret
pop
fisubrs
or
mov
inc
test
repz
enter
adc
repnz
or
jg
push
dec
pop
pop
push
mov
call
cmpl
arpl
lea
dec
sub
add
mov
icebp
rcr
push
insl
dec
fmull
movb
push
stos
out
rcrb
cmp
test
das
test
dec
jmp
mov
mov
repz
repz
inc
xor
das
sbb
mov
fcompl
and
arpl
hlt
scas
sub
xlat
mov
ret
add
gs
ficomps
inc
mov
pop
cmp
mov
mov
xchg
lahf
add
xchg
push
imul
cmp
outsl
clc
xchg
jmp
sti
xchg
pop
pop
aas
dec
pop
test
sbb
push
es
fnstcw
sub
cmp
enter
mov
mov
jle
mov
mov
sub
fildll
pop
fs
psubsw
push
mov
dec
roll
les
mov
int
lret
mov
outsl
insl
xor
in
adc
cmp
push
mov
xlat
inc
roll
ret
stos
jb
icebp
movsl
push
adc
dec
or
push
in
sub
icebp
push
xor
jecxz
sbb
jns
xor
jb
inc
cmp
mov
sub
loope
push
lods
mov
imulb
imul
mov
into
orb
cmp
sub
filds
mov
sub
inc
xchg
push
sbb
or
shrb
faddl
push
mov
scas
adc
mov
sbb
inc
or
iret
pop
or
mov
arpl
leave
push
mov
and
jo
or
jle
lock
push
jl
mov
hlt
mov
lahf
dec
adc
icebp
aam
fs
ficompl
enter
xchg
inc
mov
dec
push
mov
shrl
js
dec
dec
sahf
sahf
dec
adc
mov
sbb
lahf
lret
cmp
dec
incl
subl
xor
sub
or
aam
scas
push
aas
push
loopne
int
mov
xchg
pop
xchg
inc
inc
inc
aad
or
adc
sub
inc
add
aam
xchg
xor
lock
gs
xchg
mov
jno
push
dec
out
dec
xchg
or
dec
call
clc
stos
xchg
pop
pop
loope
sbbb
stos
bound
sbb
iret
mov
inc
inc
pusha
mov
xor
pushf
and
jmp
xor
popa
dec
mov
popa
jo
repz
push
arpl
ud0
and
imul
stos
imul
dec
movsl
cmp
adc
fildll
xor
pop
outsl
add
dec
push
adc
data16
in
xchg
aad
cmp
add
mov
sbb
and
andb
scas
jb
std
jnp
rcr
xor
mov
and
fnstenv
in
xlat
lcall
fs
jg
js
jo
add
sbbl
gs
mov
mov
je
lahf
outsl
setge
call
sbb
jmp
inc
push
sbb
xor
xor
fistl
mov
or
inc
jne
fwait
pop
cmp
xchg
sbb
xor
shll
js
mov
mov
pushf
mov
pusha
cld
inc
and
dec
adc
and
es
stos
mov
jp
scas
into
dec
cmp
orb
jb
imul
xor
std
mov
out
subb
rcll
repnz
rcrl
stos
repz
mov
push
lea
int3
rcrb
mov
xor
jg
and
inc
movsl
imul
push
sub
xchg
lret
inc
dec
shrl
arpl
or
pushf
js
mov
outsl
pop
negb
mov
jmp
jecxz
popf
dec
roll
push
in
mov
dec
xchg
imul
push
cmp
out
fnstcw
imull
out
icebp
std
inc
inc
pop
rorl
jb
or
fbstp
push
je
cmc
aad
es
xchg
bnd
jecxz
lods
jecxz
push
les
inc
push
push
pushf
fs
lea
fs
mov
ss
les
xchg
xor
push
add
pop
xchg
and
push
shrb
sbb
testl
or
sbb
sbb
jecxz
inc
lret
mov
jp
inc
addb
xchg
sub
add
xor
cwtl
adc
add
mov
add
jecxz
push
test
mov
arpl
mov
in
cli
stc
scas
jo
inc
ljmp
daa
insl
lret
test
xchg
int3
jge
jle
xor
add
xor
movsl
sub
leave
movsb
les
and
mov
fdivrs
iret
dec
roll
push
sbb
lcall
sub
stos
mov
fildl
and
xchg
sbb
jp
js
add
insl
sub
rcrl
xchg
and
daa
out
enter
mov
lea
das
inc
push
adc
mov
dec
push
in
vmread
fstpt
cmp
xchg
frstor
daa
pushl
xor
sbb
lock
repnz
out
add
in
mov
and
out
adc
cmp
cmpb
ret
jle
pop
inc
movsb
push
movsb
call
bound
inc
addl
xchg
xor
les
mov
fidivrs
xchg
je
jmp
inc
xor
insl
aaa
decl
rcr
mov
sbb
out
jmp
xchg
or
add
fcmovnu
adc
sub
inc
mov
mov
std
pop
dec
pop
cltd
pop
in
data16
push
mov
jle
add
aad
rolb
mov
pop
push
lret
jb
repz
imul
jecxz
jmp
popf
push
rolb
imul
loop
mov
jmp
mov
mov
jmp
jne
jno
add
dec
jecxz
push
cwtl
aaa
add
sbb
xorb
outsl
jnp
add
aad
jne
jge
test
push
mov
idivb
cmpsb
sbb
dec
xor
cmp
movb
cwtl
mov
mov
pop
mov
xor
insb
mov
jne
mov
out
jae
xchg
jg
arpl
js
cmpsl
cmp
push
jno
cmpsl
icebp
xchg
fsubrl
ret
mov
xor
sbb
icebp
adc
addr16
sbb
hlt
cmpb
mov
int3
mov
aaa
push
pop
fucomip
daa
repz
cmpsb
out
shl
mov
dec
sbb
in
dec
ret
out
icebp
mov
in
dec
fiaddl
aad
aam
xor
rcrl
push
fstl
pop
cmp
cmp
in
cs
add
cmp
loopne
add
testl
cld
and
push
lcall
jae
into
jne
sbb
fbstp
fdivrl
jge
imul
mov
out
out
and
std
ret
rclb
clc
rcr
xor
adc
rorl
dec
pop
data16
mov
xchg
sahf
and
dec
cmpsb
mov
or
adc
enter
testb
mov
xchg
cmp
std
inc
aas
mov
jae
jp
mov
jge
movsl
pop
jbe
je
push
repnz
cmp
insl
shrb
lea
sbb
jge
ja
das
mov
daa
mull
ret
dec
dec
cli
insb
lret
gs
dec
jbe
div
addr16
xor
dec
stos
test
or
dec
mov
cmpsb
add
add
fs
inc
gs
gs
mov
outsb
fcompl
out
pop
out
fildll
push
das
pop
mov
loope
inc
cmp
push
or
arpl
sbb
xor
aam
xchg
sbb
out
mov
cwtl
mov
call
add
jae
dec
lods
push
pop
cmp
dec
dec
or
in
xchg
push
mov
mov
push
rep
jns
adc
adc
push
dec
jecxz
lock
pop
sar
sbb
sahf
mov
or
mov
cs
ds
cmp
mov
bound
hlt
xor
out
outsl
call
mov
rcll
nop
pop
insb
inc
ds
mov
outsl
push
lret
sub
adcb
hlt
pop
adc
xor
jle
repz
hlt
inc
lahf
dec
dec
sbbl
nop
leave
movsb
sbb
stc
daa
sub
sahf
outsl
pop
lcall
das
jns
fstl
jp
mov
insb
shlb
data16
dec
jnp
js
xor
das
xchg
or
adc
cld
mov
or
inc
cmp
cmpsb
xor
and
daa
sub
lret
pop
ret
jg
in
pop
xor
fsubrl
enter
cmc
and
scas
mov
mov
in
cmp
cmpsl
jmp
repnz
adc
pop
xorl
mov
lret
gs
out
icebp
fisubrl
into
mov
movsb
sahf
lods
jg
xlat
lcall
push
stc
ret
jl
xor
sub
push
test
cmp
sub
xlat
xrelease
ret
loop
outsl
pop
loop
ja
or
int3
push
cmc
xor
arpl
jb
dec
xor
call
mov
xor
in
xchg
xlat
mov
sub
stos
outsl
repnz
xor
sbb
jno
aam
adc
sahf
mov
mov
and
xor
sub
ss
adc
mov
sahf
jl
pushf
cmp
pop
dec
push
push
cmp
sti
mov
xlat
mov
pushf
xor
xor
filds
and
addr16
xor
std
subb
enter
push
out
packuswb
call
sbb
loop
repz
push
fistpll
sub
out
lahf
jne
add
mov
jl
ds
rep
mov
add
insb
shlb
mov
outsl
lret
pop
or
xchg
xlat
aad
dec
addr16
jmp
or
and
jecxz
ret
pop
add
pop
add
decb
fs
mov
sbb
sbb
fisubl
ljmp
das
fst
and
adc
sti
test
bound
movsl
jge
mov
xor
mov
ljmp
add
mov
inc
hlt
mov
stos
lcall
xchg
adc
into
int
mov
orb
loope
in
dec
lret
dec
xorb
cmp
mov
lods
or
es
push
jle
sub
les
sbb
int
sub
mov
mov
fmuls
stos
dec
xor
pop
sub
mov
cmp
movsl
sti
adc
mov
mov
cli
ja
add
xor
dec
ja
lret
in
cmpsl
jno
cmp
int3
mov
aaa
xor
nop
mov
pop
clc
xchg
rcll
dec
mov
scas
pop
cmp
jb
dec
and
adc
subb
dec
or
add
sbb
jl
hlt
and
mov
daa
push
sub
orb
push
lods
and
daa
mov
sti
subl
add
outsl
out
adc
inc
fxch
mov
rcll
les
xlat
inc
das
jnp
push
adc
mov
mov
cmp
lods
push
clc
dec
lcall
or
push
lahf
jb
ja
pushf
inc
rcll
or
ret
inc
add
pop
scas
in
cmp
lea
das
adc
add
mov
or
ret
leave
and
jnp
and
pop
out
add
and
sub
sbb
mov
insb
push
adc
js
adc
xor
dec
xchg
mov
icebp
jae
sub
adc
jne
repz
sub
mov
js
pop
cld
scas
jb
repnz
sarl
lods
sub
jmp
idivb
push
icebp
aaa
jae
dec
into
xchg
jecxz
and
fs
aaa
sbb
jnp
cli
xorl
sbbb
orb
shll
out
jmp
jno
jne
jae
dec
pop
xchg
pop
pop
sub
push
lcall
and
dec
icebp
in
mov
andb
inc
fisubl
mov
jp
sar
movd
mov
repz
das
cmp
movsl
add
mov
movsb
clc
scas
imul
xor
call
cmp
cltd
mov
sub
fwait
bound
jmp
ret
and
rorb
repnz
js
lods
push
std
int3
and
fiadds
jno
push
movsb
movsl
stos
rol
sbbb
bound
std
jmp
xchg
or
mov
adc
pop
gs
mov
dec
xlat
mov
xor
stos
and
xor
int3
cli
lods
push
outsb
cwtl
or
add
test
stc
fs
sbb
and
push
dec
and
push
daa
rcll
inc
jno
dec
mov
jnp
mov
mov
push
xchg
lret
aas
mov
sbb
mov
inc
sub
js
movsl
call
mov
fcompl
int
clc
or
filds
jecxz
stos
xchg
cli
adc
lret
add
ja
ljmpw
mov
mov
pop
mov
adc
popf
aam
aad
fdiv
jge
dec
dec
aad
popa
int
add
mov
sbb
jg
xlat
sti
push
cmp
sub
mov
mov
fs
push
fsubl
mov
xchg
insl
jge
xchg
or
sahf
inc
sbb
dec
push
add
mov
cmp
dec
and
repz
fisubs
mov
pop
inc
jp
push
es
inc
vcvtpd2dq
push
jb
enter
jbe
and
xor
sub
xlat
repz
lds
jg
outsl
int
push
cmp
cmpsb
mov
or
add
das
sub
jae
mov
xchg
push
repz
add
add
or
push
xlat
es
ss
daa
pop
out
divb
addr16
push
cmpsb
inc
mov
inc
cmpsl
push
xchg
xchg
push
out
xlat
es
ss
daa
pop
out
divb
addr16
push
cmpsb
inc
mov
inc
cmpsl
push
xchg
push
xchg
push
out
xlat
es
ss
push
daa
pop
out
divb
addr16
push
xchg
mov
cmpsb
push
xchg
xchg
push
out
xlat
cmpsb
ss
cmp
jl
out
addl
pop
mov
sub
push
push
mov
push
push
push
push
movl
movl
movb
call
mov
andl
push
movl
pushl
movb
call
andl
push
push
mov
movl
mov
movb
call
push
push
mov
call
mov
lea
push
movl
movb
movl
movb
movl
movb
movb
movl
call
pop
pop
leave
ret
jnp
sub
jne
xchg
adc
test
js
push
fwait
cmp
enter
call
sbb
leave
dec
fistpl
lret
push
dec
cmp
cmp
jae
bound
xor
loope
sahf
or
cmc
insb
std
je
mov
test
clc
pop
xor
bound
jnp
daa
out
in
pop
pusha
or
xor
xor
js
insl
xchg
mov
cmp
std
sti
xchg
sti
out
push
into
cmp
fmull
pop
leave
sbb
dec
dec
sbb
push
fwait
lock
adc
add
mov
dec
sub
jae
les
dec
and
or
cmp
sub
daa
jae
mov
sub
out
jnp
cmp
lret
fstpt
sub
push
shrb
mov
xor
inc
adc
iret
icebp
pushf
jmp
fcomps
cmp
orl
clc
jnp
popa
jl
lock
rcl
ret
push
repnz
loop
xchg
add
cs
jp
pop
out
int3
inc
test
pop
mov
or
enter
xchg
xor
jle
js
sub
std
push
aas
mov
mov
popa
stc
addr16
push
imul
cltd
or
sbb
lret
dec
fstpt
push
fwait
cmp
enter
call
sbb
lret
dec
fstpt
push
fwait
cmp
outsb
fdivrl
dec
sub
imull
add
rclb
mov
xchg
inc
lock
pop
mov
jnp
inc
sub
xchg
sbb
mov
incl
xor
imul
ja
cmp
and
dec
push
clc
pop
loopne
insb
aaa
test
jge
dec
mov
popf
int
fildll
lods
aam
sbb
adc
sub
cld
sbb
stc
ficoms
je
sbb
xchg
inc
jo
fimull
addr16
push
lds
ret
mov
sahf
add
pop
divb
sub
mov
lcall
dec
mov
mov
movsl
push
mov
cltd
imul
adc
stos
xor
addr16
je
mov
sub
gs
and
jae
repnz
ficoml
flds
pop
inc
jmp
mov
mov
dec
inc
fists
shrb
pop
lret
mov
cmp
cmc
mov
mov
scas
fdiv
adc
inc
leave
pop
mov
fildll
movsb
test
jge
push
addr16
jb
ret
clc
xor
jge
movsb
xchg
ja
movsb
repz
out
loopne
mov
insb
inc
leave
int
sub
or
fimull
push
xlat
and
fsubr
add
fmuls
jmp
mov
adc
xor
xchg
popf
pcmpgtd
dec
push
cli
mov
mov
inc
fmull
xlat
mov
scas
inc
mov
dec
mov
inc
adc
and
fistl
mov
std
int3
mov
stos
cwtl
inc
xor
sub
jmp
les
scas
pop
mov
out
clc
les
push
mov
mov
xlat
jnp
xor
dec
sub
or
sbb
fistpll
push
stos
xor
fucomi
hlt
sbb
popa
dec
adc
adc
fistpll
int3
fisttpl
orl
shrl
out
pop
push
dec
test
roll
iret
sub
pop
call
push
mov
xor
push
push
or
push
push
push
arpl
pushf
das
gs
gs
sbb
mov
lds
cmpb
add
push
mov
xchg
dec
xchg
inc
shrb
cli
mov
rcrl
push
push
sahf
mov
rcrb
xchg
or
in
int
xchg
push
or
lods
pop
lret
cmp
pop
hlt
loopne
daa
js
int
jo
aam
int3
mov
push
int
push
or
mov
sbb
mov
les
les
fbld
pop
jmp
movsl
push
sbb
sbb
popf
loope
stos
push
enter
xchg
outsb
sub
int
pop
aad
icebp
test
mov
cwtl
pushf
jle
push
mov
mov
decb
add
mov
add
test
mov
fdivr
bound
or
mov
aam
outsl
es
mov
in
cmpsb
and
pop
aam
and
jg
mov
cwtl
pop
je
out
lahf
stos
or
int3
hlt
adc
pop
inc
jl
mov
std
fstp
lods
setl
xchg
pop
lret
fdivp
add
ficompl
dec
pop
xchg
subps
outsb
mov
sub
or
ffree
rcrl
roll
psrad
xchg
dec
sbb
mov
push
push
aaa
dec
in
jle
shrb
jo
sub
lahf
jne
fs
daa
loop
mov
xchg
push
push
sbb
adc
outsb
ror
jl
sbb
fdivr
fisubl
jp
jne
test
push
or
pop
mov
adc
and
jl
fistl
mov
jae
addr16
push
xor
or
aas
jg
inc
lock
push
jno
bound
push
push
aam
loop
push
cmpsl
leave
test
cmpsl
test
pop
popa
mov
xlat
int
out
mov
imul
in
jb
mov
jnp
sbbb
hlt
sub
cwtl
lret
mov
mov
sub
ret
shld
bsf
pop
idivb
rol
push
mov
aaa
fs
lods
mov
rcl
cmp
out
bound
jp
ljmp
cmc
push
push
mov
sahf
bnd
fldl
pop
xor
fsubrl
xchg
sbb
cmpb
push
rcll
stc
fs
sbb
jns
jbe
push
lret
andl
push
jle
lock
cmp
cmp
add
and
cld
clc
dec
call
mov
adc
pop
xchg
and
xor
jmp
push
int
dec
stc
fsubrp
xchg
and
xchg
out
mov
and
jp
rcll
insb
push
clc
stc
mov
adc
pop
jmp
or
pop
rcrl
or
xchg
and
cli
subb
xor
lea
jmp
ret
cwtl
test
pop
mov
sub
popf
xchg
dec
and
lret
lcall
pop
xor
wbinvd
lods
ret
scas
pop
dec
dec
push
mov
inc
or
xor
or
shrl
daa
push
mov
lock
insb
dec
mov
adc
cmc
jb
xchg
dec
arpl
enter
mov
mov
or
sub
adc
add
andl
push
push
mov
gs
push
in
outsl
push
cltd
jbe
pop
sbb
pop
pop
xchg
lea
mov
sbb
or
sbb
mov
les
cmp
jae
and
push
and
jo
daa
push
frstor
jmp
loop
sub
das
mov
scas
inc
cld
mov
roll
lods
inc
dec
test
into
imul
mov
dec
mov
out
sbb
clc
dec
xchg
jl
mov
jb
test
mov
daa
dec
jle
or
sub
push
mov
stos
push
rolb
mov
or
in
push
ffreep
nop
cmp
lods
sbb
cwtl
inc
push
push
and
xchg
mov
js
jb
ss
mov
sbb
xlat
mov
scas
push
mov
or
or
cmpb
push
adc
std
pop
popa
sub
addb
fstl
adc
in
cmpsl
dec
push
and
sub
push
ja
or
cmp
scas
aam
or
repz
adc
enter
lods
inc
shlb
test
in
push
jb
sbb
inc
pop
cmp
es
movsb
push
test
cld
mov
ret
das
push
mov
pushf
cwtl
out
pop
cwtl
cmp
into
jge
or
xor
push
mov
push
xor
sub
in
or
push
sub
pop
div
sar
jb
stos
jmp
dec
idivl
adc
mov
dec
sub
shrl
pop
jmp
pop
jb
popf
xchg
cli
insl
adc
mov
inc
pop
out
stc
out
inc
pop
std
sbb
inc
xor
xchg
cmpsb
inc
scas
rorl
faddl
mov
xchg
pop
rcrl
cli
ds
adc
lock
je
addr16
xchg
mov
sub
lret
lea
jecxz
xchg
jne
cld
or
xchg
out
jo
sbb
cmp
test
in
mov
xor
mov
jae
ret
xor
jno
jo
cmp
movsl
jnp
sbb
inc
push
lcall
xor
lret
inc
sub
inc
pop
in
test
adc
and
stc
jbe
pop
jg
mov
loop
call
aad
fisttpll
mov
jg
mov
stos
movsb
mov
aad
in
je
mov
aas
repnz
cltd
pop
adc
add
in
jo
sub
addb
dec
sarb
jnp
sahf
test
adc
cltd
jl
jle
stos
mov
les
mov
loopne
iret
rorl
xchg
rorl
int3
rclb
in
fidivrs
jmp
push
or
inc
cmp
mov
jo
clc
lock
sbb
jno
jmp
cmp
cmp
cmp
call
and
mov
sbb
fsubr
jp
xor
je
cmpsb
jb
sti
mov
push
aaa
adc
xor
xor
push
repnz
hlt
ja
nop
jnp
mov
dec
in
xor
mov
call
sbb
fcoms
or
aam
pushl
xor
js
insb
push
xchg
sbb
jo
xor
pop
out
ja
sti
jb
lcall
insb
inc
add
out
sbb
push
and
fwait
inc
aas
in
ss
mov
cld
cmp
dec
gs
xchg
outsl
daa
std
jae
xchg
jmp
mov
mov
imul
add
push
push
fdivr
call
dec
jecxz
or
and
dec
lea
in
jl
and
lods
fcomps
dec
push
sub
popf
cmp
jae
fildl
add
push
adc
add
gs
adc
jno
je
data16
movsl
push
out
jmp
mov
mov
dec
gs
adc
imul
inc
dec
xchg
fiaddl
pop
lret
lods
movsl
cmc
aaa
ret
sahf
in
test
mov
mov
push
jae
xchg
aas
cpuid
pushf
lock
mov
dec
xor
push
clc
aam
xor
mov
out
push
mov
out
test
push
dec
jmp
or
xchg
add
jne
ficoml
jmp
test
mov
lds
imul
cmp
push
add
pop
cwtl
sarl
mov
stos
or
xorb
sbb
dec
dec
adc
lds
jnp
sarl
mov
mov
ret
jle
scas
movsb
test
stc
push
add
cwtl
or
jns
int
dec
jno
leave
cmp
fs
shld
add
stos
jmp
jno
in
xor
adc
test
jno
repnz
adc
insb
inc
sbb
gs
cs
fistl
popf
int3
shlb
push
ret
sbb
out
pop
pop
adc
jecxz
mov
in
dec
mov
pushf
push
fstl
sub
sbb
sti
dec
and
cmpsl
jns
mov
pop
leave
cmpsb
pop
fs
addb
inc
mov
or
push
lods
mov
out
dec
xor
es
ss
mov
pop
inc
jbe
hlt
jb
dec
stc
test
repnz
js
inc
mov
popf
sbb
mov
cmp
dec
xchg
and
loop
xchg
sub
mov
mov
mov
leave
daa
or
jle
adc
or
mov
shlb
pop
fmul
add
rorl
pushf
pop
sbb
dec
pop
adc
pusha
jl
mov
xchg
jns
jbe
jg
dec
notl
and
mov
fstpl
arpl
cmp
push
addb
mov
pop
jle
mov
mov
xor
push
mov
lahf
xchg
iret
fisubl
fs
push
aam
inc
rcrl
add
inc
sbb
stos
cmp
cmc
inc
jg
dec
cmp
popf
aas
inc
mov
mov
mov
adcb
push
lret
cmpsb
inc
test
xchg
or
xor
aad
out
shll
cld
into
adc
lahf
mov
iret
jno
in
cwtl
daa
mov
imul
cltd
mov
das
mov
push
fistl
xchg
insb
pop
inc
into
mov
fimull
jne
enter
adc
int
or
imul
mov
les
cmp
mov
and
stos
test
fnstenv
mov
movsl
mov
xor
xchg
push
mov
add
jo
in
scas
popa
js
insb
jo
sub
in
out
add
xchg
cmp
outsl
jb
in
das
inc
lds
lret
sub
enter
sub
lcall
push
sarb
mov
xor
paddusb
mov
aad
sbb
test
dec
xor
call
mov
not
fwait
mov
pop
push
pop
push
inc
jecxz
pop
in
jle
call
frstor
pushf
mov
cmp
int
cmpsl
sti
push
arpl
mov
hlt
cltd
jnp
xchg
jge
pushf
xchg
xchg
mov
and
call
pop
sahf
cmp
lock
xlat
lahf
inc
inc
push
dec
pop
pop
dec
mov
mov
mov
movsb
jo
adc
push
adc
inc
or
out
add
push
inc
rcll
mov
in
dec
sub
int
xchg
cwtl
enter
orb
xchg
and
hlt
adcl
adc
pop
xor
mov
xchg
lcall
adc
mov
sbb
es
jnp
rclb
inc
push
je
sbb
invd
cmp
inc
das
mov
call
and
je
xchg
daa
xor
ds
xchg
outsb
pop
jae
sti
frstor
pop
sub
lods
jp
mov
into
jne
das
mov
mov
sahf
cmp
gs
imul
cmp
sub
insb
mov
pop
addr16
loopne
mov
and
jb
popf
fs
dec
sub
fwait
cmpsb
icebp
cmpsb
mov
dec
xchg
sub
xor
or
testb
out
inc
inc
ficoml
push
sub
pop
mov
xchg
sti
xor
push
sbbl
dec
xchg
dec
mov
insl
dec
daa
adc
shlb
adc
ss
es
mov
test
or
lods
xor
cltd
int
push
mov
lret
int3
xchg
jbe
scas
and
mov
rorb
loopne
call
push
or
mov
push
mov
shll
cltd
lcall
out
cmp
leave
loopne
sub
jae
xchg
cs
xor
rcl
incl
dec
mov
movsb
fs
or
jbe
push
cmp
cmpsl
xchg
jnp
daa
mov
adc
pop
shl
xchg
mov
fisttps
sti
outsl
test
je
mov
mov
repz
popf
das
outsb
fcomp
gs
hlt
xchg
daa
pop
scas
enter
pop
pop
fisubl
test
mov
and
ja
or
inc
pop
icebp
jl
mov
in
cs
mov
pop
mov
fnsave
lret
sti
lds
iret
fldl
mov
je
imul
faddl
loop
icebp
lods
fs
push
mov
cmp
xor
jmp
xchg
mov
aaa
fwait
call
or
fsubr
inc
aad
mov
sbb
mov
cli
mov
or
push
push
lcall
out
test
loopne
add
xlat
sti
and
loope
es
out
jle
mov
or
mov
mov
and
pusha
and
test
movsb
push
cmp
aas
sbb
sbb
outsl
into
mov
into
lcall
jne
sbbb
aas
jl
aas
dec
mov
pop
inc
and
lcall
pusha
push
push
jae
and
sarl
pop
mov
mov
gs
xchg
pop
cmp
mov
filds
xchg
xchg
and
push
loope
pop
mov
dec
adc
jns
add
xor
mov
dec
lahf
dec
jge
mov
std
inc
mov
pop
lock
jecxz
lods
mov
mov
lret
repnz
ljmp
repz
sub
sub
jb
cmp
fsubrl
cld
pop
mov
rcll
leave
sub
or
push
out
scas
fwait
or
mov
bnd
mov
es
mov
cmp
mov
inc
mov
jp
and
add
rorl
out
adc
mov
xchg
or
gs
rorl
mov
fistl
jbe
ss
or
test
mov
scas
xchg
in
jl
pop
xchg
pop
movsb
popf
lret
inc
cmp
cmp
xor
lock
pop
jbe
sub
lret
adc
jnp
mov
xor
orb
in
sbb
imul
shll
or
notb
mov
hlt
mov
jb
xor
adcl
pop
int3
call
mov
sbbb
xchg
pop
test
stos
stc
subb
mov
pop
xor
push
outsl
dec
daa
repnz
mov
das
daa
mov
clc
or
xor
pop
lret
fstps
jb
pop
add
sub
mov
push
cmc
sbb
or
push
outsl
lods
xchg
and
scas
outsb
inc
mov
insl
jne
sbb
push
add
push
pop
mov
pop
mov
sbb
push
xchg
repnz
jae
rol
mov
in
out
mov
push
mov
inc
std
mov
cld
cltd
dec
out
xchg
push
sub
mov
add
xchg
mov
xor
es
sti
cmp
lret
call
xor
sub
in
sti
add
add
loopne
pop
and
push
popa
add
xchg
jne
push
push
stos
dec
cltd
adc
mov
xor
sub
lock
and
sti
sarb
lahf
xchg
jmp
je,pt
jne
jmp
lret
xor
lds
sbb
mov
jb
iret
mov
mov
fadd
loope
cld
dec
xchg
fucomp
dec
xlat
ds
inc
cs
push
and
mov
jmp
dec
jae
jb
mov
repnz
inc
sub
jno
sub
pushf
mov
ljmp
mov
fsub
icebp
loope
test
pop
push
pop
and
sbb
jge
or
cmc
mov
addb
mov
add
cltd
or
loop
pop
pop
or
dec
test
and
jle
rep
cmp
push
cmp
xor
dec
push
and
xchg
adc
loop
xchg
aam
cmp
mov
ret
jbe
mov
lock
sub
es
mov
dec
sbb
gs
add
jle
push
jecxz
nop
lret
add
movb
lock
mov
sbb
int3
push
mov
call
xlat
test
movsb
mov
dec
jl
cmp
lret
cltd
cmp
add
sbb
pushf
push
cmpsb
inc
push
movsb
ds
inc
inc
inc
pusha
scas
or
andb
sbb
stos
out
or
push
mov
xlat
and
and
stos
cli
xlat
mov
fs
sub
adc
pop
imul
mov
mov
daa
jno
scas
sub
pop
push
out
idivl
jg
sub
dec
xor
add
cmpsl
adc
fcoms
aam
xchg
js
test
adc
and
jmp
mov
jl
push
jb
and
fs
sbb
push
dec
mov
hlt
sbb
cmp
add
sub
test
es
inc
pop
cmc
in
divb
inc
ds
fisttps
mov
or
push
mov
enter
push
mov
push
lea
jecxz
xchg
repz
cmp
fwait
jmp
mov
sbb
mov
add
xchg
test
jmp
sbb
dec
cli
cld
cmc
pop
in
aad
inc
fiaddl
pop
pop
imul
ds
dec
int
cltd
mov
imul
jge
arpl
js
fsubrl
dec
adc
sub
dec
push
push
jecxz
data16
sbb
fistpl
dec
rcrb
shl
push
push
idivl
sub
jae
push
cmp
and
outsb
push
in
mov
and
out
roll
mov
and
es
dec
and
lock
push
push
gs
imulb
aad
xchg
or
cs
adc
or
pop
adc
mov
fidivrl
in
sub
mov
jbe
clc
lret
les
imul
in
jne
add
push
push
or
jl
and
push
aad
jle
dec
fdivp
mov
sub
sub
in
or
sti
cmp
aas
jmp
xlat
xor
and
adc
sbb
packuswb
adc
jge
mov
pop
pusha
movsl
sub
push
es
add
or
ret
pop
pop
push
lock
addb
cmpsb
xor
vpsubd
inc
jnp
inc
inc
pop
or
sti
lods
xchg
mov
in
les
xchg
jne
sbb
pop
push
das
lods
push
push
lahf
jbe
adc
cmp
adc
push
mov
cltd
movsb
cmp
and
out
dec
popf
outsl
jmp
in
jg
test
dec
gs
mov
jno
mov
sub
mov
popf
jo
shl
lret
inc
cmpsb
scas
and
fwait
cmpl
mov
cltd
enter
inc
ret
rol
gs
movsb
dec
or
cmpsb
jns
jmp
cwtl
insb
movsb
arpl
mov
scas
xchg
js
dec
aas
clc
bound
mov
xor
mov
or
setge
or
mov
push
ret
icebp
mov
aam
movsb
mov
arpl
test
jnp
or
cmp
dec
fstpt
push
fwait
cmp
enter
call
sbb
lret
dec
fstpt
push
fwait
cmp
clc
pop
cwtl
imul
or
mov
mov
lret
dec
fisttpl
mov
fwait
cmp
xchg
pop
mov
or
cmp
mov
shr
push
fs
push
xlat
inc
xchg
ret
xchg
fisubs
ljmp
push
daa
ja
add
ja
addr16
xchg
movl
xchg
mull
pop
push
aaa
outsl
daa
ja
sub
ja
addr16
xchg
popa
xchg
mov
cmpsl
adc
lods
out
pop
inc
and
inc
push
inc
add
xor
push
push
jecxz
out
mov
into
xchg
fmuls
insb
jbe
int3
sub
cmp
sbb
les
dec
xchg
pop
or
xchg
sbb
pop
cmovs
cwtl
fsubs
add
inc
dec
and
mov
mov
adc
in
test
data16
jmp
repz
mov
idivl
addr16
out
mov
pop
adc
fsubr
dec
les
add
xor
pop
or
mov
xchg
or
dec
push
fs
mov
insl
movl
stos
cmp
lea
dec
fs
xlat
divl
mov
sbb
mov
gs
push
dec
xchg
mov
cmpsl
not
xchg
xchg
mull
pop
pushl
gs
dec
push
cmp
ja
addr16
icebp
mov
fwait
mov
test
cwtl
shlb
addr16
daa
inc
ret
roll
js
push
pop
pop
loope
repz
aam
out
mov
mov
mov
mov
and
daa
inc
mov
inc
or
aaa
icebp
mov
fwait
xchg
lret
xchg
mull
pop
push
aaa
addr16
ja
pop
inc
pop
ja
addr16
xchg
movl
xchg
mull
pop
push
aaa
addr16
ja
pop
inc
pop
ja
addr16
xchg
out
sub
cli
je
addr16
or
iret
mov
stos
sarb
leave
sbb
jp
pop
inc
sub
mov
inc
sub
fwait
call
sti
sub
sub
xor
dec
xchg
repz
icebp
mov
dec
mov
mov
data16
cwtl
loopne
mulb
sti
or
ds
xor
push
popl
sbb
sbb
loopne
into
push
add
pop
stos
out
cmp
out
adc
into
out
cmpl
pop
js
fwait
pop
in
or
sahf
mov
jecxz
dec
mov
push
sbb
into
push
add
cmp
std
push
dec
loopne
addb
lock
jae
adc
and
sub
sbb
orl
fpatan
and
adc
outsl
nop
addr16
mov
jecxz
aam
fimull
bound
enter
scas
fists
addl
mov
dec
sarb
jge
aam
stc
push
lock
jle
sahf
jmp
pop
adc
repnz
aas
jno
ljmp
push
leave
or
cwtl
imul
iret
sub
and
jnp
jo
inc
add
test
daa
loopne
adc
xor
push
cmp
sub
jb
push
call
daa
mov
call
test
mov
pop
sbb
ds
and
pop
adc
mov
push
arpl
test
xor
mov
dec
mov
push
js
mov
mov
and
inc
mov
xchg
js
xor
pop
call
clc
js
mov
or
pop
push
stos
xor
jmp
cmp
rorb
sti
test
mov
and
lret
jmp
test
mov
pop
daa
jns
jbe
dec
stos
in
in
sub
sti
test
jnp
adcb
fdivrl
or
cmp
rcll
mov
sahf
loopne
xchg
lods
sub
in
decb
inc
fstpt
shlb
inc
out
sub
cmpsb
jae
mov
jecxz
imul
inc
repz
xchg
mov
jae
pop
lret
or
push
pop
lea
fdivl
fdivr
push
mov
addr16
in
mov
pusha
sbb
inc
dec
xchg
push
jno
xchg
push
add
adc
loope
push
xchg
pusha
mov
repz
cmpsl
fstp
sti
push
sahf
cli
nop
mov
pusha
aad
imul
mov
inc
aas
add
mov
call
adc
jmp
sti
test
push
jmp
cmp
sbb
jecxz
outsl
divl
in
dec
pushf
cmp
mov
ljmp
and
enter
out
js
jno
and
inc
jnp
inc
lds
xchg
jecxz
mov
test
push
push
and
pop
stos
jae
mov
lds
and
mov
in
aam
jae
call
jmp
xchg
or
insl
and
fisubs
cwtl
call
jbe
fnstenv
mov
pop
fimull
dec
enter
dec
jecxz
xor
mov
test
cmpsl
sbb
call
aad
jnp
imul
mov
lds
dec
xchg
and
mov
pushf
mov
sub
cld
cs
cmp
roll
jle
jl
mov
shlb
lret
cmp
clc
xor
nop
push
adc
cmp
dec
cmp
movsl
push
cmp
subb
jne
mov
clc
lret
add
xchg
in
out
movsl
xchg
inc
ja
jbe
add
xor
cwtl
mov
mov
pop
or
stos
jle,pn
loop
mov
xorb
adc
pop
sbb
and
in
pop
stos
andb
insb
ljmp
mov
adc
fs
pop
shll
push
adc
loopne
mov
jbe
pusha
cwtl
pop
fs
sub
jmp
enter
movsb
fwait
adc
pop
stc
mov
fldcw
xchg
pop
and
out
test
mov
sub
mov
adc
arpl
cmp
xor
jae
fnsave
aaa
adc
lds
popa
sarl
loop
scas
cltd
mov
dec
out
mov
repz
fbstp
mov
in
xor
movsl
nop
mov
addr16
test
ret
int3
push
mov
pop
jne
lahf
cli
ficoms
cld
shll
and
int3
xor
adc
adc
sub
push
or
sub
lods
mov
sarl
mov
jno
mov
add
clc
mov
lds
push
xchg
shlb
mov
mov
mov
xchg
and
subb
mov
lods
inc
push
jb
dec
push
xor
sbb
mov
js
sub
xor
or
dec
mov
cld
cmc
decb
idivb
lds
rcrl
push
lcall
popf
outsl
pop
xchg
and
xchg
aad
fdivp
sahf
cwtl
ret
sub
add
xchg
push
inc
inc
into
ja
mov
divl
add
sbb
mov
fsubrp
adc
mov
xor
bound
jae
sub
mov
dec
xchg
add
fs
xchg
pop
in
les
dec
cmp
scas
mull
inc
mov
mov
mov
jne
mov
hlt
adc
mov
aam
xchg
mov
mov
cmp
xor
xchg
pushf
shlb
es
mov
int3
push
push
sbb
mov
or
cmp
xor
sbb
scas
adc
inc
ffree
or
dec
pop
outsl
out
popf
jp
lret
stos
enter
jne
cmc
sbb
jnp
scas
adc
scas
xchg
dec
cmpsb
cmovne
sbb
dec
add
rclb
fiadds
scas
push
cli
push
mov
test
push
jge
sbb
mov
jo
ljmp
push
pop
loopne
std
pop
aas
push
jmp
jecxz
data16
das
dec
pop
out
cmc
sub
sbbb
in
inc
nop
lock
loope
nop
inc
push
jmp
ss
nop
sub
jb
int3
push
mov
push
mov
aad
mov
inc
and
adc
dec
in
cli
rcrl
ljmp
mov
imul
push
sbb
loopne
push
pop
xlat
mov
adc
add
cmp
gs
cwtl
xchg
push
fst
sub
mov
mov
in
cs
outsl
mov
jae
add
mov
nop
test
decb
ror
in
push
push
mov
lret
fcoms
repz
lret
out
and
adc
imulb
xchg
sbb
test
je
adc
sub
and
ret
sub
mov
mov
add
xchg
sbb
subl
cmpsb
testl
and
bnd
cwtl
inc
dec
mov
inc
sbb
mov
xchg
mov
cltd
push
jg
mov
into
sbb
pop
stos
outsb
xor
or
adc
or
adc
pusha
mov
xchg
test
or
pop
jbe
les
sbb
lock
or
cmp
jp
jg
xor
xlat
lods
fwait
das
jg
push
xchg
dec
xorl
xor
in
jns
ret
repnz
inc
xchg
shll
aad
pop
cmp
xchg
or
clc
xchg
add
nop
mov
or
pop
push
rcl
sti
dec
jge
push
int
jnp
mov
xchg
in
cwtl
push
pop
mov
mov
and
jmp
jecxz
inc
xchg
out
stos
lods
mov
cmp
mov
lret
mov
sti
mov
ja
push
mov
je
enter
ret
add
ss
sbb
push
mov
sbb
pop
mov
jmp
sti
mov
lcall
xor
mov
jnp
cwtl
imul
or
ffree
inc
neg
lret
inc
sbb
aaa
movsb
imul
rcll
push
pushf
push
sub
ficompl
fsubs
and
pop
and
pop
sub
enter
pop
movsl
hlt
in
fstpl
cmp
out
push
call
dec
cs
jne
sahf
das
cld
sub
xor
subl
mov
ljmp
pop
test
in
xchg
dec
sbb
pop
adc
fwait
push
push
push
daa
jmp
cwtl
int3
adc
mov
repz
mov
mov
pop
inc
imul
xorl
sub
lret
and
pop
push
sub
nop
js
cli
out
jno
jg
jmp
dec
cwtl
sbb
cmpsb
cmpsl
adc
shll
mov
pop
xor
pop
scas
mov
xor
das
push
icebp
icebp
fs
rclb
adc
icebp
lret
popa
add
cmpsb
mov
cmp
subb
fidivrl
sbb
adc
lds
and
add
outsb
rorl
stos
rcr
aad
push
pop
les
es
je
xchg
ja
mov
mov
cmp
mov
mov
lds
inc
dec
lahf
xor
aad
dec
loopne
jecxz
clc
cmp
fnstsw
fistps
fsubrl
cmp
test
popa
xchg
or
std
aad
jge
pushf
xchg
mov
dec
cmp
adc
mov
push
aaa
loop
pop
adcb
fstpl
mov
aaa
push
pop
lcall
fstl
pop
xor
sub
jg
xchg
imul
adc
call
xchg
mov
ret
sub
mov
fs
xchg
inc
mov
pop
add
cmp
sub
mov
out
jno
insl
add
mov
cmp
pop
lahf
ja
pop
aas
in
jl
mov
xlat
or
jb
jge
enter
lret
mov
and
aam
or
adc
rcrb
pop
imul
add
mov
cltd
scas
push
add
in
add
xchg
sbb
outsl
mov
cmpsb
je
imul
mov
scas
cmp
mov
push
dec
xchg
ret
mov
push
sub
mov
ljmp
lret
mov
rcrb
fnstcw
hlt
mov
repnz
sahf
dec
jbe
dec
xor
daa
xchg
and
sbb
sub
cltd
xchg
jecxz
xor
hlt
adc
bound
fcmovnb
movsb
shll
sbb
pop
jge
push
sub
jg
sub
out
sub
push
mov
lahf
rcr
cmovg
push
stos
push
cwtl
xor
add
jp
aam
in
and
jo
adc
out
addr16
pop
or
jle
icebp
push
jle
pop
loope
out
jg
arpl
out
cmpsl
and
mov
into
lea
pop
sbb
std
aaa
mov
lods
popa
xchg
sar
jne
cmpsl
cmp
test
out
repz
insl
dec
jle
imul
insb
cmp
mov
jb
mov
in
inc
callw
xorl
sub
lods
stc
adc
lret
fnstcw
adc
xor
fldcw
jo
push
cmc
xchg
sub
jae
add
mov
fstpl
push
inc
cmp
cmp
inc
out
mov
iret
mov
in
insl
int3
sbb
adc
in
cmp
pop
or
loopne
push
or
add
fwait
and
mov
sbb
mov
inc
inc
jne
addl
cs
mov
pop
cwtl
cmc
mov
repz
aas
adc
pop
push
mov
mov
push
ret
jmp
fisubrs
movb
pop
movsl
call
jno
daa
imul
xchg
inc
push
das
jo
pop
ja
mov
aam
scas
push
testl
lret
cltd
push
ret
and
aam
inc
push
es
movsb
imul
xor
insl
mov
adc
shl
pop
xlat
clc
adc
inc
push
mov
mov
dec
jge
cltd
fistps
das
jae
inc
aam
or
ljmp
pushf
pop
imul
jae
xchg
mov
and
push
out
popl
jne
push
iret
cmp
aaa
sbb
mov
jl
rclb
ja
leave
popf
mov
jno
sbb
ret
mov
add
xchg
xchg
fsubs
mov
insl
stos
add
pop
inc
cmpsl
push
adc
push
jbe
sub
mov
fwait
adcb
jmp
add
mov
pop
add
fmulp
jp
mov
mov
neg
out
fcmovbe
nop
jecxz
fnstsw
cli
shrl
inc
pop
or
xor
std
or
adc
mov
std
test
loope
pop
adc
sbb
mov
fdiv
or
pop
adc
xor
dec
pop
scas
pop
add
cltd
push
data16
push
cli
sbb
ja
lds
outsl
xor
loop
rorb
enter
loop
jmp
mov
bound
sub
sti
push
xchg
in
add
aaa
mov
leave
test
sarb
sub
loop
cld
shrl
cmpsl
adc
inc
jnp
rol
push
pushf
jns
lods
insl
mov
cmc
jmp
mov
push
mov
jp
leave
sub
jl
cs
mov
pusha
out
push
rcr
pusha
xchg
pusha
call
hlt
daa
fs
jne
jge
fidivrs
decl
cs
lock
call
adc
cmp
clc
les
push
lcall
xchg
add
test
stc
mov
xchg
arpl
xor
push
mov
cmpsl
data16
and
pop
pop
xor
and
fdecstp
adc
cwtl
sti
and
mov
cmp
fdivrl
cltd
pop
stos
cmp
ljmp
or
sub
repnz
out
mov
insb
push
mov
pop
xor
loope
pop
jecxz
int3
cltd
int3
adc
pusha
cmp
out
add
movsl
ret
and
sbb
daa
pop
int
stos
rorb
ficomps
pop
imul
scas
iret
mov
cmp
outsl
push
push
js
in
and
dec
pop
rcr
rorl
pop
mov
mov
pop
xlat
inc
jno
into
dec
mov
cs
dec
popa
sahf
push
add
inc
testb
lcall
jmp
into
nop
mov
lret
xchg
xchg
pop
call
mov
cmp
inc
ja
xchg
mov
mov
clc
in
xorl
mov
insb
lret
fisubl
iret
push
clc
cmc
das
jo
ljmp
in
adc
fcoml
mov
xchg
out
inc
ja
aad
inc
sub
push
mov
repnz
nop
jbe
inc
mov
xchg
ljmp
inc
cli
leave
mov
inc
jns
mov
int3
or
push
mov
dec
sub
jle
inc
arpl
jbe
sub
lods
stc
xchg
mov
add
jbe
ret
jnp
fcoml
repnz
xchg
fstpl
loope
adc
adc
fwait
adc
in
mov
mov
xchg
fldenv
xchg
out
cmp
mov
scas
insl
movsb
inc
dec
shl
scas
pop
jg
jg
cld
push
test
push
in
xchg
lds
cmp
test
pop
ror
lds
sbbb
xor
movsb
cmpsb
sub
xchg
adc
cmpsb
push
es
jg
scas
mov
cmp
hlt
dec
test
lret
aam
inc
clc
sub
push
pop
mov
cmpsb
mov
cwtl
decl
popf
push
shll
sub
sarl
cmp
and
cmpsb
aam
cmp
add
add
mov
stos
dec
scas
gs
orl
je
jne
jmp
imul
int3
and
sbb
pop
adc
movsb
rcrb
das
ret
leave
and
mov
push
insb
lahf
lods
add
lds
int3
and
mov
fimuls
or
mov
or
daa
sbb
cmpb
int
pop
jnp
imul
push
xor
sub
cs
outsl
mov
mov
movsb
pop
aaa
das
ss
jnp
ret
cmp
mov
jmp
imul
imul
add
sbb
popf
mov
insl
lods
scas
mov
and
push
inc
nop
xor
sbb
shll
jp
outsb
add
aas
sbb
lret
test
sub
mov
sbb
push
add
inc
or
mov
test
fwait
push
and
std
add
xorb
mov
pop
ds
and
cmp
inc
out
in
pop
adc
cwtl
cld
mov
sub
sbb
mov
mov
inc
fdiv
sub
pushf
xchg
xchg
in
ss
add
push
loopne
std
lds
int
rol
adc
mov
sbb
mov
fistpl
addl
push
xchg
inc
mov
stos
jp
mov
and
inc
push
jbe
imul
jno
add
inc
xor
push
jbe
pop
shll
mov
adc
test
aaa
aaa
mov
inc
addr16
mov
and
into
shlb
xchg
inc
iret
mov
push
cmp
xchg
std
sub
and
mulb
into
and
xchg
rolb
in
cmp
sbb
jno
into
cltd
xor
inc
and
pushf
inc
in
imul
icebp
mov
cli
dec
lods
pop
jecxz
xchg
sbb
icebp
and
insb
fcmovbe
add
into
mov
adc
rcr
andb
xor
test
inc
dec
pop
in
adc
je
or
hlt
test
sub
adc
mov
mov
and
es
fwait
je
and
push
sbb
cmp
mov
or
mov
inc
mov
popf
movsb
adc
lock
inc
xor
sar
push
stos
out
sub
addr16
testl
adc
shlb
daa
aam
insb
movsb
out
mov
inc
lret
les
cmpsb
add
xor
popa
addr16
lret
js
mov
mov
jge
test
adc
scas
mov
inc
fwait
pop
mov
sub
sbb
cmp
xchg
mov
adc
cmpl
mov
cmpsb
pop
add
mov
jge
shrl
fwait
jl
nop
out
xchg
enter
dec
iret
mov
xor
mov
pop
cltd
int
nop
sbb
aaa
xchg
mov
and
jp
stc
in
jae
cmpl
lods
mov
adc
inc
inc
mov
dec
sub
sbb
js
mov
fildll
enter
xor
xchg
mov
in
les
pop
test
mov
and
cmp
xchg
push
xor
mov
xlat
push
jle
or
add
andb
mov
sbb
pop
dec
sarl
jno
in
out
xchg
insl
out
stos
pop
in
sbb
inc
xor
sub
cmp
mov
mov
jae
mov
outsb
dec
mov
push
push
mov
ljmp
sbb
cmp
mov
mov
mov
enter
ljmp
mov
movsl
push
bnd
cmc
or
dec
fcomi
ds
xchg
add
ds
or
or
icebp
sub
sti
mov
movsl
jb
xor
mov
daa
aaa
fcoms
jbe
and
add
or
mov
mov
mov
outsl
in
mov
pushf
pop
push
es
imul
cmp
mov
es
inc
inc
mov
xchg
sub
cmp
daa
mov
sub
ljmp
pop
enter
jo
testl
jo
jp
mov
xchg
arpl
push
xchg
repz
outsb
pop
mov
push
mov
mov
dec
and
cltd
call
test
arpl
adc
xor
pop
jne
cmp
and
ret
js
or
test
xorb
xor
mov
imul
and
movsl
lods
test
ja
jp
push
addr16
cmp
add
repnz
lret
test
cltd
in
dec
sarb
popa
pop
stos
add
lods
dec
rolb
push
mov
vhsubpd
or
imul
idivb
jo
sbb
nop
xor
jmp
xor
jecxz
or
in
push
sti
inc
and
adc
cltd
insl
push
movsl
lret
test
pop
push
push
cmp
mov
add
jne
sub
adc
sahf
or
lcall
out
insb
cmp
shrb
sti
cli
cmp
loop
loopne
cmp
filds
sahf
mov
dec
cmp
andb
mov
rol
push
pop
sub
cmpsb
ss
in
mov
xor
loope
popa
jp
outsl
xchg
mov
mov
aam
push
push
movsl
test
jle
mov
idivl
inc
mov
and
mov
cmpsl
not
xchg
xchg
mull
pop
push
aaa
addr16
ja
pop
inc
pop
ja
addr16
xchg
movl
xchg
mull
pop
push
aaa
addr16
ja
pop
inc
pop
ja
addr16
xchg
ret
xchg
mov
cmpsl
repz
xchg
cld
mull
pop
push
aaa
addr16
add
jbe
rcll
xor
xchg
xchg
ja
addr16
mov
daa
add
jg
outsl
pop
lahf
dec
push
mov
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
jmp
js
push
out
xchg
sub
js
dec
clc
pop
call
or
stc
dec
leave
js
push
mov
cltd
sub
jns
dec
clc
pop
call
or
stc
dec
leave
js
push
mov
cltd
sub
pop
xchg
and
lret
jl
ja
mov
popf
cmp
sbb
test
xor
cmpb
lret
or
mov
sar
mov
pop
xor
or
loopne
divl
and
cmpsb
jmp
pop
mov
icebp
sahf
into
lods
add
dec
int3
addl
test
dec
std
cltd
sub
inc
mov
jmp
jns
jl
sbb
in
cld
fnsave
lret
jns
mov
mov
lds
mov
scas
es
lock
jle
popf
das
leave
int3
add
fstpt
int
mov
push
mov
jns
sbb
add
cltd
lods
ds
mov
mov
jno
jns
mov
dec
lods
cltd
test
pop
stc
dec
leave
js
push
mov
cltd
sub
jns
dec
clc
pop
call
or
lea
test
pop
fwait
pop
imul
icebp
push
pop
int
sbb
test
push
lret
sub
pop
test
notl
gs
mov
stc
cmp
or
sbb
je
or
fdivrs
dec
clc
pop
call
or
stc
dec
leave
js
push
mov
cltd
sub
jns
dec
clc
pop
call
or
fcompl
mov
mov
cmp
lods
subl
pop
inc
push
sub
mov
adc
insb
and
jle
orl
jbe
aaa
xor
lock
pop
and
addr16
jnp
inc
out
sbb
mov
jne
out
pop
jecxz
daa
mov
or
rcrb
xor
in
fs
adc
xchg
das
lret
mov
test
aam
jmp
cwtl
insl
test
dec
mov
xchg
cmp
inc
fimuls
inc
push
repnz
xor
pop
insb
fimuls
ret
jne
lds
jp
sub
push
jp
mov
inc
jmp
roll
and
cs
and
push
sbb
imul
jne
popa
arpl
cld
fadds
lds
pushf
inc
add
sbb
rclb
notb
mov
lea
jmp
fldcw
lea
dec
cmpsb
int
push
lea
push
or
inc
lcall
gs
ja
lcall
loope
jge
xchg
call
mov
test
hlt
inc
cmp
ljmp
loop
cwtl
push
fistpl
and
ss
xlat
xor
scas
cmp
sbb
adc
js
shr
imull
jbe
rorl
aam
inc
mov
hlt
mov
sbb
add
fsubrl
jecxz
cmp
cwtl
aaa
repnz
ret
dec
or
je
ffree
xchg
icebp
mov
mov
divl
imul
xchg
jl
je
cmpl
add
je
loop
inc
push
add
aas
hlt
xchg
outsb
xchg
jno
pop
enter
mov
std
inc
cwtl
imul
add
xor
shrl
xchg
inc
xor
sahf
jle
jg
add
add
dec
xchg
mov
aad
xor
mov
cmp
clc
jg
sbb
scas
jg
stos
jne
icebp
or
rorl
rcll
fucomi
push
and
jns
dec
scas
fdecstp
jle
fistl
stos
icebp
insb
xchg
mov
test
mov
in
in
pop
sti
out
mov
and
pushl
popf
and
or
iret
aas
popa
inc
xor
popa
aam
xchg
cwtl
movsb
adc
pop
lret
stos
xor
repz
les
int3
loopne
adc
pop
adc
cmp
dec
cmpsb
jecxz
sbb
int
xchg
adc
ljmp
stc
mov
or
sahf
lods
add
repz
dec
mov
sbb
je
dec
loop
xchg
mov
lods
outsl
outsl
inc
dec
cmpsl
mov
pop
jae
inc
cmp
insb
push
dec
inc
stos
clc
mov
push
dec
pop
mov
push
cmc
and
sub
cmp
jle
rolb
dec
pusha
mov
and
mull
and
popf
das
repnz
test
xchg
sub
gs
add
shrb
lret
rcrl
push
adc
in
jns
test
and
mov
sub
in
xor
es
arpl
mov
dec
and
sbb
xchg
fwait
pop
xlat
insl
add
lret
roll
test
mov
fidivrs
scas
cs
xor
jl
ds
repnz
fistpll
lds
clc
loopne
nop
jmp
in
push
movsb
ja
xor
gs
call
insl
repnz
mov
icebp
outsb
popa
pop
lret
test
sub
push
stc
mov
lods
lds
stc
scas
mov
jl
xchg
cmpsl
xchg
movsb
stc
ret
adc
scas
ja
adc
js
in
lea
roll
clc
insl
mov
jb
sarl
sahf
inc
je
ja
pop
pop
jecxz
mov
fisttpl
sahf
pop
pop
and
jo
pop
int
push
jne
add
cmpsb
fs
lret
call
mov
jge
addb
dec
dec
incb
xor
nop
xchg
cmp
dec
or
sarl
cltd
aas
call
das
mov
jbe
push
nop
ljmp
ljmp
and
jae
cmpsb
sbb
cmpsl
lds
pop
out
mov
js
inc
fwait
jns
nop
mov
push
hlt
lods
and
or
and
and
xor
mov
or
jnp
ss
push
xchg
mov
std
pop
negb
inc
or
idiv
sti
sbb
lods
adc
xor
outsl
test
shll
xchg
push
shlb
inc
lahf
sbb
or
cmp
test
jnp
sar
push
xlat
sti
mov
sbb
sub
xchg
sub
xchg
es
push
rolb
xor
scas
flds
pop
mov
jge
mov
cmpsl
adc
daa
push
push
sub
scas
repnz
push
sahf
ljmp
jo
push
fists
or
repz
je
cltd
clc
dec
jmp
push
sti
scas
cmp
add
pop
pop
pop
dec
mov
mov
das
mov
mov
js
pusha
sub
fs
xor
in
mov
in
xchg
bound
and
xchg
imul
lods
or
lods
cmp
aad
cmovae
inc
pop
test
push
xor
adc
mov
ds
sar
arpl
lahf
jge
stc
cmpsl
add
dec
aam
adc
dec
lds
mov
mov
cld
mov
push
gs
ljmp
xor
divl
cld
dec
inc
mov
dec
push
rorb
lcall
mov
add
adc
xchg
adc
or
xor
cmp
and
pop
push
sub
pop
sti
movsl
movsl
xor
cmp
add
lods
and
out
jnp
orl
cwtl
jge
outsb
xor
dec
sbb
stos
xor
inc
pop
pop
loopne
cs
push
and
ficomps
pushf
or
xchg
outsb
movsb
inc
jns
cmp
or
push
jbe
std
fldl
push
pop
jns
cmp
lcall
std
inc
xchg
jge
gs
in
inc
pushf
outsl
aam
lods
shrl
je
xor
jmp
adc
stc
es
jg
fldenv
and
divl
push
push
aaa
or
xchg
daa
mov
inc
jmp
test
lret
jo
mov
loop
push
iret
xchg
bound
pusha
cld
mov
push
xchg
popf
cwtl
cltd
les
mov
mov
fcoms
addr16
jae
idivb
adc
inc
sub
mov
mov
ror
adc
ja
popf
test
or
data16
pop
dec
enter
jno
mov
cmp
cld
insb
add
xchg
dec
stos
mov
test
push
mov
inc
jb
sbb
inc
sbb
adc
cwtl
sub
mov
adc
mov
mov
hlt
jle
arpl
cltd
adc
fistps
jbe
jp
jl
dec
int3
sub
leave
dec
add
ja
jl
repz
sbb
mov
in
ss
fcmove
cwtl
dec
xlat
add
mov
hlt
push
imul
xor
xor
cli
mov
and
in
aas
movups
das
mov
push
mov
mov
cli
cmp
pop
pop
mov
movsl
xor
data16
and
loopne
push
arpl
inc
or
mov
jle
dec
lock
and
mov
cmp
cmp
rclb
jnp
scas
test
daa
clc
or
and
adc
adc
outsl
cwtl
pop
rolb
lods
clc
jp
adc
xor
dec
inc
adc
call
aad
inc
in
cmpsb
in
lcall
fsubrs
sbb
adc
scas
pop
cmp
ljmp
or
and
add
arpl
rdtsc
pop
mov
dec
xchg
cmp
popa
fsubp
mov
neg
pushf
push
sbbb
push
pop
push
lods
or
cmpsl
sub
jp
add
add
ljmp
mov
add
aas
cmp
leave
mov
int3
sub
push
cmpsb
in
mov
in
cmp
inc
in
iret
leave
pop
loop
dec
loop
push
jae
repnz
jae
and
bswap
add
xor
add
lahf
cmpsb
ds
mov
adcb
mov
fisubrl
mov
out
xchg
adc
cmp
adc
jno
xchg
mov
add
add
sbb
xor
mov
cmp
mov
push
insb
daa
xchg
stos
loope
jo
fs
mov
cmp
sar
aam
repz
xchg
fisttps
icebp
lret
mov
test
inc
add
movsb
subl
es
or
inc
call
jg
and
push
dec
mov
mov
out
dec
loopne
jge
icebp
mov
lcall
adc
lods
insb
bound
movsl
ss
dec
in
inc
pusha
iret
push
mov
subb
data16
cmp
jmp
stc
mov
push
leave
insl
cwtl
mov
cltd
dec
jge
call
xchg
or
inc
sub
mov
mov
xchg
push
pop
xor
js
or
xchg
mov
push
insb
dec
cwtl
jg
test
mov
popf
push
push
lock
ss
hlt
jne
mov
mov
jb
cmp
les
rcl
inc
testl
push
xlat
fldenv
cmc
lret
neg
lcall
mov
or
mov
inc
mov
jle
icebp
adc
pop
cmp
add
gs
jne
push
adc
or
jno
adcb
insb
shrb
push
test
pusha
loopne
scas
pop
je
and
insb
pop
xchg
imul
cltd
call
push
dec
adc
ffreep
jl
dec
push
cltd
cmp
lea
mov
cmp
movsb
scas
rcrl
push
and
inc
add
push
mov
dec
cmp
pop
pop
jge
mov
add
xchg
loope
into
dec
jle
xor
push
jge
or
sub
rcl
pop
shl
filds
sub
or
xchg
lret
in
or
jge
hlt
popa
or
dec
push
test
sub
add
lods
adc
cmpsl
sub
leave
in
fstpt
insb
and
jo
testb
inc
or
mov
sub
xlat
in
shlb
jmp
int3
in
les
scas
jns
and
push
fucomip
sar
jnp
gs
gs
cmp
dec
sbb
cs
push
fld
lcall
jmp
les
stc
sbb
rcrb
and
jne
xor
test
mov
jb
jle
sti
ffreep
xorb
jnp
cli
add
xchg
data16
repz
mov
clc
sub
mov
aaa
cmpsl
xor
adc
mov
out
stc
push
push
in
loope
dec
pop
fldenv
mov
xor
xchg
xchg
ss
loope
push
and
jne
test
movsl
jae
jecxz
xchg
mov
ficoml
and
xchg
cmp
popa
xchg
push
int
xor
loop
pop
aad
mov
rcrl
pop
test
mov
jl
add
pop
std
std
rclb
dec
pop
pop
add
mov
xor
jge
mov
imul
cs
sub
data16
jg
jnp
popf
rorl
jg
call
test
imul
clc
fldcw
out
mov
cld
fcomps
lret
sbb
aam
pop
fidivl
pcmpgtb
clc
bound
jo
jecxz
cmpsl
xor
stc
fs
dec
fstpt
push
sbb
mov
inc
cli
add
mov
xchg
xchg
mov
inc
fsubrl
aaa
shl
stc
sbb
repz
addl
data16
movsl
pop
pop
rcll
sbb
test
xor
mov
xor
mov
and
rorl
xchg
cmpsl
xor
adc
fiadds
adc
adc
fcomps
dec
and
sbb
push
mov
jae
movsl
sbb
cmp
imul
sarb
fimull
rol
test
pop
int3
cmp
push
adc
cmp
jmp
xlat
ss
sbb
lds
sbb
rcll
cmpsb
push
cmp
bound
je
mov
ret
scas
lods
pop
dec
movsb
movsl
mov
sub
sbb
jmp
push
sbb
mov
adc
inc
test
push
inc
sbb
out
and
bound
shlb
mov
sub
pop
mov
and
out
jecxz
mov
inc
rcrb
dec
ds
incb
outsb
negl
pop
das
ss
shrl
ficoms
adc
dec
cs
dec
cmp
mov
cmp
inc
jb
pop
or
pop
enter
mov
mov
lods
or
push
mov
imul
inc
loope
lock
dec
jne
mov
cmpb
shl
lods
sub
dec
and
insl
je
sbb
mov
rolb
popf
out
add
or
popf
das
fs
jp
xor
xor
xchg
out
inc
pop
sbb
sahf
cwtl
lret
fldcw
pop
adc
pushf
inc
fimuls
fcomps
test
hlt
mov
mov
bound
push
cmpsl
lods
jle
cltd
mov
mov
stc
jns
stos
dec
lock
aaa
movsl
inc
adc
dec
scas
xchg
loop
nop
bound
jnp
xor
sub
xor
es
mov
inc
add
fs
loop
push
mov
cmp
mov
cmc
jb
movsb
sbb
cmp
insb
movsl
xchg
test
jae
popf
clc
enter
in
movsl
stc
repz
xchg
stc
jmp
or
insb
insl
dec
sbb
fstl
adc
dec
jne
lret
fmuls
push
dec
adc
sbb
cli
stc
xchg
jg
test
addl
mov
xchg
and
xchg
push
cmp
int3
enter
xchg
pop
mov
rclb
outsl
aam
into
scas
push
into
popa
cmp
push
cmp
aas
mov
or
pop
ret
aad
mov
jne
stc
push
mov
push
jp
out
xchg
or
or
cmpl
dec
fnstenv
cmp
shll
rcrl
mov
aad
xchg
call
outsb
pop
mov
xchg
addr16
popl
jno
add
xor
or
and
into
push
add
adc
iret
cld
and
mov
fsubl
shrb
cld
test
loope
lods
mov
pop
movsb
xchg
imul
gs
fbld
xchg
mov
jnp
mov
hlt
mov
insl
lea
dec
push
jns
fadds
cmp
daa
inc
and
sahf
or
movl
sbb
adc
adc
test
jmp
call
or
cmpsl
sti
gs
test
cmp
test
fdiv
ljmp
stos
xchg
add
cld
bound
pop
test
mov
push
lahf
loope
cmp
sbb
mov
inc
dec
arpl
sbb
in
sbbl
mov
pop
sub
xchg
andl
sub
mov
mov
test
xor
cmp
or
popa
pop
in
pop
scas
ficoms
or
jecxz
pop
sbb
add
mov
pavgb
imul
sub
fstpl
fsts
out
ficomps
test
pushf
fldcw
ds
fsubrl
cmp
dec
adc
mov
mov
mov
pop
jle
add
push
inc
xchg
leave
jge
xor
jp
leave
and
jge
aad
stc
jo
mov
lods
je
sbb
fidivl
or
sti
fdivrl
jle
or
pop
and
mov
mov
sbb
xor
imull
jo
push
mov
sub
mov
ja
pop
pop
add
lcall
out
fistpl
je
sti
or
das
mull
testl
ret
addb
add
dec
pop
out
pop
bnd
fisttpll
jmp
pop
lods
fnsave
rclb
das
push
pop
outsb
sbb
std
adc
xchg
mov
jns
and
pop
inc
xchg
jl
or
cmc
inc
fucomip
insb
cli
std
pop
lret
and
xchg
hlt
or
sar
gs
lods
movsb
xor
rcll
subb
pop
sub
mov
ret
or
mov
js
inc
repnz
fidivl
jns
add
pop
std
fistpl
xor
rcrb
je
inc
call
lahf
sbb
frstpm(287
cld
dec
ja
inc
xchg
pop
xor
or
adc
clc
lods
lock
pushf
int
fdivl
lret
mov
call
ljmp
mov
mov
add
pop
repnz
andb
jecxz
sub
jno
pop
xchg
add
mov
loopne
push
movsl
loope
jle
adc
jae
mov
shll
mov
test
std
or
cltd
insb
xchg
movsl
aas
xchg
cltd
enter
mov
pusha
fwait
mov
mov
pop
inc
mov
dec
outsb
daa
cmp
scas
in
dec
xchg
aam
jbe
loop
jmp
adc
sub
push
test
out
xchg
xor
cmc
pusha
xchg
jbe
xlat
mov
mov
lahf
cmpsl
and
xchg
inc
mov
dec
ljmp
scas
mov
mov
add
stc
adc
cli
jns
outsb
jmp
sbb
dec
mov
push
fbstp
scas
and
and
div
inc
bound
scas
call
sub
pusha
inc
push
adc
lret
sbb
call
sti
aas
adc
data16
arpl
out
shll
push
lret
or
jmp
pop
in
call
fcmovbe
out
mov
push
mov
xor
add
out
ror
sbbl
pslld
cs
es
dec
jle
cmc
xor
push
sub
jmp
mov
lcall
mov
mov
mov
popa
xor
adc
cmp
xchg
loopne
mul
les
pop
sub
dec
pusha
pop
adc
xchg
xchg
cwtl
pop
out
test
mov
lret
jmp
out
bnd
pminsw
push
sbb
adc
add
fisubl
fisttpl
faddl
pop
or
insl
and
push
enter
push
inc
xchg
arpl
int3
add
xchg
call
cltd
ret
in
call
pop
std
lcall
sahf
jl
mov
inc
mov
js
jne
faddl
xor
xchg
sub
xor
cmc
call
loopne
push
ret
orl
les
inc
xchg
and
add
and
cmp
scas
loopne,pt
xchg
out
popa
divb
adc
mov
push
sub
out
xchg
push
fistps
push
mov
and
push
jne,pn
inc
mov
mov
add
mov
cmpsb
or
out
cmc
pop
loopne
daa
mov
stos
std
xchg
push
mov
and
sub
xor
jb
dec
xor
push
cmp
xchg
mov
arpl
dec
outsb
cmpsb
cmp
sub
xor
cs
add
fdivrl
mov
aas
cmp
imul
pop
rcrl
movsl
addl
xor
mov
dec
xor
xchg
mov
popf
pop
ds
rcll
sbb
insb
aam
imul
pushf
add
enter
mov
out
push
xchg
call
int3
push
mov
nop
or
bound
inc
adc
shlb
test
mov
out
dec
or
add
popa
jns
push
in
push
inc
aaa
shll
xchg
incb
daa
cli
xor
cmp
jnp
push
int
or
add
ds
cmp
lods
inc
out
movsl
ds
and
sahf
in
xor
add
arpl
pop
dec
mov
into
ficoms
enter
cmp
xchg
mov
arpl
pop
xlat
cmpsl
and
jge
pop
push
mov
and
jmp
cs
stos
push
in
int
ja
pop
je
shl
pop
adc
pop
push
add
stc
and
mov
sbb
fisubs
loop
ja
cmp
orb
xchg
lea
xchg
pop
loop
jl
xlat
aas
mov
xor
arpl
jo
stos
fbstp
inc
or
pop
dec
or
xor
pop
fildll
popf
or
sbb
or
push
or
jle
out
push
in
cmpsb
add
rcl
adc
ja
out
mov
js
xchg
pusha
xor
jo
xor
mov
dec
enter
test
cmp
enter
call
or
stc
dec
leave
js
push
mov
cltd
sub
jns
dec
clc
pop
call
or
jns
dec
js
imul
cmp
sub
jns
dec
clc
pop
call
or
stc
dec
leave
js
insb
test
mov
jns
jecxz
pop
lahf
pop
adc
jns
imul
adc
add
mov
je
cmp
je
push
lea
push
push
movb
call
call
mov
xor
xor
call
mov
xor
call
mov
mov
lea
push
call
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
pop
pop
test
jne
mov
not
mov
movb
or
mov
leave
ret
cli
movsb
ljmp
pop
ficompl
jp
push
pop
adc
cmp
sbb
cli
movsb
ljmp
in
in
les
xor
add
adc
push
sub
inc
or
ljmp
std
stos
in
lcall
pop
sub
popa
push
sub
push
ss
loope
repz
sub
xor
mov
add
pop
mov
cmp
xchg
mov
push
ds
lea
nop
xchg
cs
xchg
cmp
fildl
push
iret
jmp
add
sub
mov
lods
add
popa
fists
mov
lret
in
mov
mov
add
shll
mov
jnp
mov
mov
push
jp
jp
xlat
sti
insb
cltd
les
icebp
sbb
sahf
dec
mov
repnz
and
sbbl
cld
ret
lods
mov
sub
pop
roll
jl
push
inc
outsb
imul
add
sti
por
dec
sub
mov
movsb
ficompl
stos
hlt
lcall
sub
sbb
sub
or
movsb
add
loope
icebp
out
xchg
ljmp
outsb
xor
add
jno
add
pop
sub
stc
int
fisttpll
in
mov
pop
push
push
push
pop
adc
je
and
and
loopne
sarl
les
xor
add
adc
sub
or
ljmp
in
hlt
lcall
xor
add
adc
sub
or
dec
cmpsl
popa
add
xchg
pusha
outsl
xor
movsl
and
loopne
sub
aaa
mov
sahf
cmc
xor
sub
movsl
sbb
mov
lods
rolb
cwtl
xchg
daa
lcall
sbb
lret
xchg
inc
mov
imull
ljmp
adc
stc
cmp
pushf
ja
dec
add
insl
xor
lock
dec
or
xor
shld
fidivrl
fnstcw
and
push
jno
lods
add
mov
push
repz
aam
test
repnz
imul
inc
pusha
out
fwait
stos
adc
mov
fcomp
aad
mov
jns
or
xor
sub
pushf
pop
xchg
sbb
xchg
iret
mov
ret
pop
mov
cmp
jle
jne
mov
xchg
adcl
jp
sbb
add
sbb
aas
and
sbb
adc
nop
test
jb
ds
jns
sbb
in
cmc
popa
pusha
pop
add
arpl
or
popa
pop
pop
arpl
leave
mov
incb
mov
jmp
pop
popa
xchg
cltd
outsb
adc
sahf
push
cmp
sbb
jo
jno
and
rorl
dec
or
dec
lock
xchg
outsb
sub
call
mov
jl
dec
leave
aaa
mov
fsts
in
inc
cwtl
jnp
addr16
aaa
cs
sbb
js
adc
and
xor
or
sub
popf
fbstp
loop
xchg
mov
call
mov
test
in
xor
cmp
jae
xchg
adc
mov
popa
iret
cmp
fnstsw
dec
add
loop
inc
inc
push
lock
cltd
dec
inc
pop
js
inc
ss
sub
pushf
dec
clc
jne
push
xor
not
call
adc
outsl
xchg
bound
sahf
or
mov
repz
xor
sub
or
mov
fwait
xor
mov
xor
jmp
xchg
outsl
pushf
cs
xchg
sub
clc
xchg
sbb
mov
adc
xchg
loop
mov
push
jae
sahf
mov
mov
xchg
shl
xchg
xchg
xchg
dec
mov
in
sbb
cs
aad
mov
or
outsl
imul
jo
xchg
test
xor
cli
fcomps
inc
pop
fs
repnz
xlat
pop
mov
mov
mov
fidivs
sahf
xor
inc
mov
sete
ja
bt
test
iret
out
shr
mov
mov
subb
aaa
dec
cmp
dec
fdivrl
cmp
lds
in
sbb
inc
dec
fildll
outsl
fadd
mov
aaa
sbb
mov
sbb
jb
push
ljmp
xor
inc
ja
test
xor
dec
xor
mov
lahf
mov
or
loope
pop
ja
into
jl
push
adc
jno
popl
mov
lods
mov
mov
into
imul
aad
push
stos
lock
int3
xchg
pop
loopne
mov
mov
jecxz
ret
dec
ja
stos
mov
or
cmpsb
into
fst
push
dec
and
inc
mov
faddl
mov
push
test
add
std
sbb
push
scas
push
jg
movsb
xchg
jne
mov
jns
and
test
ja
cwtl
testl
xchg
adc
sarl
lods
loope
xor
addr16
movl
dec
addr16
and
sub
mov
out
into
pop
xchg
fistpl
stos
jle
adc
sahf
cli
loope
hlt
enter
pop
xchg
aam
mov
dec
stos
inc
xchg
pop
cmp
mov
aam
sahf
lahf
push
jae
sub
test
iret
fwait
mov
iret
js
enter
loopne
or
mov
mov
jb
sub
jp
inc
std
mov
icebp
jns
jne
lods
stos
pop
ss
pop
push
sbb
mov
push
inc
popa
mov
ds
cmp
push
pop
inc
push
xchg
mov
push
aam
pop
clc
cwtl
aaa
add
rolb
lock
dec
dec
cld
pop
fsubrl
inc
adc
mov
sub
incb
jno
pop
enter
ret
ror
fidivl
ja
xchg
or
cld
stos
mov
push
push
push
daa
mov
ljmp
movsl
push
adc
adc
dec
fisttpl
mov
mov
test
jmp
pop
add
add
jp
push
mov
sahf
mov
jl
dec
sub
xor
ret
aad
and
cmp
stos
icebp
repnz
dec
add
xchg
jmp
nop
jae
pop
mov
cmp
add
sbb
xchg
sub
inc
push
fistl
scas
mov
xor
das
loopne
inc
test
push
pop
and
addl
mov
lret
mov
insb
into
mov
mov
scas
sub
std
stc
add
xchg
imul
adc
cmp
pop
lds
mov
add
xchg
leave
cltd
pop
inc
sbb
sbb
or
sub
mov
lea
ret
mov
push
fstps
cltd
fldl
pop
dec
xchg
sahf
pusha
pop
push
xor
xor
jp
jge
xchg
adc
cmpsl
rclb
daa
mov
stos
pop
fcmovne
ss
insb
cmp
inc
cmc
or
mov
rcrb
cmp
xor
jecxz
mov
callw
out
jl
mov
jge
or
imul
ljmp
cmpsb
subb
popf
push
mov
dec
ja
inc
xchg
cmpsb
cmp
xchg
shl
pop
and
mov
les
add
enter
nop
mov
dec
fs
adc
andb
jae
mov
cmpsb
inc
dec
pushf
jo
testl
les
jg
aad
mov
iret
insb
push
enter
inc
lahf
mov
imul
inc
push
jns
inc
data16
out
neg
aad
dec
ficomps
sbb
sar
inc
icebp
jg
mov
adc
loop
or
pop
add
ja
xorb
mov
inc
dec
lcall
cmpsb
lahf
inc
push
out
pop
je
iret
pop
stos
cld
sbb
xchg
inc
cwtd
sahf
xor
xor
add
mov
push
xor
leave
daa
sub
das
sbb
aam
xor
neg
dec
dec
shr
sub
mov
rcrl
icebp
mov
lret
roll
cltd
cwtl
daa
cmp
add
mov
mov
mov
adc
movsl
adc
pop
mov
adc
push
dec
cmpsb
loope
fs
data16
test
push
dec
std
ret
das
mov
and
adc
xor
mov
aam
dec
push
aam
jb
adc
sbb
pop
out
mov
xor
dec
lock
cmp
mov
iret
xor
scas
stc
push
sub
adc
jno
lret
imul
into
adc
push
mov
lock
lods
cli
pop
or
inc
stc
stos
outsb
cltd
leave
insl
decl
idivl
stc
xlat
pop
inc
inc
mov
xchg
inc
stos
lods
dec
call
push
inc
js
mov
jo
jbe
or
add
xchg
fimull
divl
fisubrs
scas
adc
out
adc
cltd
inc
xchg
push
jns
andb
test
cmc
movsl
addl
pop
insb
ret
xchg
mov
xchg
test
fcomi
mov
out
and
test
mov
mov
rol
ds
sub
add
mov
pop
in
or
mov
sbb
add
cld
mov
inc
mov
and
stc
cmpsl
in
orl
fstpt
inc
or
and
std
sbbl
lds
or
out
clc
mov
subl
loop
sub
fisttps
mov
sub
push
sub
pop
jne
jbe
int3
fisttpll
lahf
and
shl
sbb
mov
lods
shrl
push
ret
test
mov
stos
hlt
ss
ficomps
jnp
sbb
pop
movsb
sub
aaa
je
loop
repnz
or
xlat
mov
arpl
xor
mov
divl
mov
push
inc
lods
push
jle
in
clc
mov
push
adc
inc
sub
ficomps
rcll
adc
sahf
lods
add
cmp
adc
inc
mov
int3
call
sbb
int3
cmp
es
mov
mov
ret
loop
aas
rolb
adc
pop
mov
jmp
insb
or
cltd
sub
cmp
aad
cmpxchg
sbbb
scas
ja
mov
int3
xchg
loope
cs
cmp
mov
cmp
inc
adc
mov
cltd
and
jmp
mov
push
inc
cmp
mov
push
dec
pusha
cmp
outsb
cmp
sub
leave
mov
out
pop
xchg
inc
push
in
xor
dec
pushl
scas
pop
bound
mov
imul
fld
jae
xchg
push
aas
sahf
lcall
push
out
mov
pop
rorb
fiaddl
cmc
pop
or
sbb
cwtl
pop
mov
scas
lods
int3
adc
aad
out
ja
add
sbb
push
loopne
fucom
pushf
mov
and
mov
out
cmpsl
cmp
and
es
and
push
insl
lret
mov
fdivrs
pop
test
loop
outsb
stos
xor
xchg
add
mov
popf
sub
push
clc
sub
inc
pop
pop
ret
vpshad
sbb
scas
cmp
mov
xchg
pop
adc
adc
add
mov
push
cli
insb
inc
xlat
jle
bound
js
sub
jbe
aaa
or
sbb
lret
nop
pop
clc
out
popa
insl
insl
push
and
in
ljmp
mov
pop
shl
inc
dec
add
mov
setb
gs
pop
lret
lcall
pop
pop
jge
mov
outsb
lods
leave
jl
sbb
sub
cmp
lahf
out
cld
les
fistpll
cs
shlb
jno
leave
out
test
notl
add
dec
les
and
loope
movsl
xor
ds
sbbl
mov
cld
pop
pop
sbb
in
lret
in
push
push
and
fimull
jne
sbb
mov
dec
mov
insb
aam
pop
int
lahf
ds
std
push
push
scas
inc
std
scas
cli
and
jno
xchg
adc
into
dec
out
pop
movsb
call
mov
outsb
rorb
cli
pushf
cmpsb
mov
sbb
lcall
lock
call
inc
into
mov
fldlg2
ret
nop
adc
xchg
pop
jno
mov
dec
xor
xchg
data16
xchg
sub
xchg
ljmp
inc
mov
fcomp
pop
lea
push
pop
dec
dec
ja
or
jbe
andb
push
les
lock
or
pop
lock
mov
ljmp
stc
mov
les
jae
fdivl
dec
shlb
xchg
cltd
test
ds
and
mov
xchg
shlb
out
jg
push
pop
lock
sbb
call
mov
push
dec
rcrl
adc
rcrb
movsl
div
int3
inc
pop
loop
jg
push
in
cli
lds
mov
outsl
lret
pavgw
pop
repnz
js
fildll
push
int
ja
dec
jns
inc
jmp
sub
dec
adc
fwait
rcrl
mov
out
adc
mov
repnz
insb
clc
push
push
cs
imul
lahf
or
pushf
stc
inc
dec
lds
imul
enter
roll
mov
std
out
shlb
jle
mov
ds
xor
inc
add
std
ret
xchg
jle
and
or
push
sub
std
and
lret
out
daa
push
jae
mov
invd
and
popa
push
lock
cld
sbb
les
fdivl
cmp
adc
dec
cmpl
push
bound
cmp
pop
pop
imul
jmp
push
inc
dec
movsl
les
es
sbb
add
mov
int
adc
push
mov
test
dec
xor
inc
leave
adc
add
repz
lret
in
loop
fsubl
out
mov
pop
add
sub
and
rcl
and
dec
or
mov
pop
repz
cmp
sub
xchg
mov
cmpsl
and
or
in
push
pushf
fisubrs
shl
add
pop
pop
inc
and
in
pop
data16
mov
or
pop
pusha
fsubr
xchg
xlat
mov
call
jo
jmp
test
loopne
jecxz,pn
lods
and
add
call
adc
leave
fdivrs
inc
aam
lods
push
stos
jge
stos
mov
xchg
sub
xchg
and
mov
cmp
cmp
jnp
push
nop
or
ret
sub
inc
cli
fsubrp
cld
xor
inc
lret
fdivl
push
fs
and
pushl
pop
lock
xchg
call
push
xchg
sti
xchg
xor
inc
and
mov
cmp
xchg
pop
or
scas
inc
inc
mov
imul
sbb
push
cmp
jle
aad
daa
out
xor
add
mov
rol
sub
or
pop
test
mov
cmp
mov
hlt
ret
dec
mov
xor
testl
repz
add
div
sub
test
inc
add
fwait
push
mov
test
dec
dec
dec
xchg
cld
xchg
popa
rcr
xchg
imul
popf
call
jecxz
push
nop
repz
adc
je
out
inc
int
push
cli
xchg
cmc
cmp
cltd
dec
mov
lret
int
mov
and
decl
fdivrs
jbe
pusha
push
cmc
and
cld
jae
or
dec
dec
jbe
test
add
jmp
ja
pop
movsl
or
test
lahf
add
test
xchg
jne
push
mov
rcrl
mov
push
and
jns
shlb
out
adc
adcl
movsl
xor
and
push
push
sti
lock
cltd
ret
xor
adc
sarl
and
ja
jecxz
jecxz
mov
jecxz
push
inc
push
push
and
mov
idivl
inc
mov
fistps
sbb
loope
and
stos
fs
and
sahf
les
sti
pop
jns
cltd
les
cli
pop
ss
xchg
xorl
call
in
cwtl
test
notl
push
xchg
xchg
ss
sahf
mov
mov
add
inc
inc
cmp
rcrl
out
dec
mov
in
mov
xor
pop
jmp
sti
aam
pop
test
pushf
shr
xchg
ds
inc
xlat
lods
arpl
mov
test
pop
cmp
cmp
mov
push
inc
rolb
lock
and
sub
pop
mov
scas
sbb
or
pop
movsl
push
dec
dec
dec
push
addb
pop
shl
mov
call
xor
ds
mov
fbld
popa
push
jmp
add
mov
push
test
test
ret
mov
jbe,pt
or
mov
adc
in
in
mov
xor
fdivrl
dec
in
xor
pop
into
je
pop
cmp
pop
rorb
fs
or
dec
cmp
add
idivl
or
repz
out
jp
nop
call
mov
ret
xchg
mov
cmp
bound
mulb
lcall
clc
pop
loope
mov
push
or
xchg
subl
jae
lock
xchg
push
pusha
pop
insl
repz
cmpsl
add
cs
rcr
xor
dec
fldenv
aaa
cmc
mov
enter
stos
mov
mov
shll
or
adc
fmull
cmp
pop
pop
imul
ffree
inc
jae
andl
xchg
pop
mov
inc
jno
aad
xlat
push
adc
inc
les
xchg
pop
shlb
and
push
movsb
push
inc
pop
xchg
repz
push
jmp
xor
call
and
insl
jno
mov
sti
xor
in
xchg
push
mov
push
lret
xchg
push
andl
int
xor
add
addr16
into
out
dec
lret
mov
lds
stc
add
adc
pop
push
jl
jns
fsub
in
repz
nop
mov
dec
mul
dec
jb
push
imul
adc
cmp
int3
sbb
adcb
cltd
das
push
cmp
out
ljmp
aad
mov
xor
cmp
mov
dec
mov
sub
mov
jns
fstps
mov
inc
adc
inc
mov
mov
arpl
inc
sub
mov
sub
pop
cmp
jo
mov
push
mov
push
or
pusha
dec
jmp
adc
shlb
add
xlat
mov
mov
mov
jg
cwtl
mov
pushf
fidivl
out
push
icebp
pop
ljmp
lods
mov
jns
orb
int
xchg
in
aad
scas
jl
add
mov
inc
xchg
sub
mov
push
int
cmp
es
jne
repnz
or
repnz
xchg
repnz
xchg
inc
add
incb
and
jg
rorb
lfs
cmp
xchg
cs
adcl
push
outsl
aaa
in
mov
fdivrs
and
dec
jno
pop
test
mov
andl
ja
cli
inc
outsl
inc
test
pop
dec
loop
aam
inc
int3
rolb
xchg
inc
cli
jecxz
xchg
inc
call
ret
loopne
repz
mov
mov
leave
xor
or
imul
cmp
pop
stc
add
add
data16
out
mov
icebp
adc
test
or
ljmp
lods
dec
into
in
and
xchg
inc
repnz
push
cmp
loopne
mov
push
add
cli
cmp
pop
jp
dec
xor
xchg
imul
orb
mov
dec
adc
push
out
mov
cltd
lcall
out
fs
lahf
in
dec
adc
mov
dec
call
rclb
inc
in
add
insl
adcb
jns
iret
sub
mov
sbb
repnz
hlt
mov
jp
push
filds
in
sub
sahf
int3
dec
mov
add
and
aam
div
dec
jnp
ja
rcl
push
and
fadds
je
fcmovnb
js
inc
mov
add
or
cmp
subb
fidivs
xchg
cmp
cmpsb
adc
ret
mov
leave
xchg
sti
and
sub
mov
ss
sub
in
out
inc
movsl
cmpsl
loop
nop
mov
push
jmp
stos
rcll
and
out
jno
fnstcw
mov
pop
jecxz
test
int
ds
divl
sub
sbb
inc
sbb
repz
sub
inc
popf
mov
jecxz
mov
push
nop
shrb
mov
xchg
pop
mov
xor
sahf
movsb
adc
rorl
daa
jns
jle
or
adc
enter
ret
sbb
fsubrp
std
xor
pop
lds
push
in
push
rclb
out
aam
inc
stos
call
scas
repnz
dec
das
shrb
in
test
push
xor
inc
pop
xchg
mov
inc
pop
mov
jnp
pop
push
pop
out
cmpsb
je
xchg
lods
pop
add
in
in
pop
xchg
pop
cwtl
adc
jae
cld
xlat
and
std
movsl
pop
icebp
push
imul
orb
xor
addr16
into
inc
xchg
and
xchg
sbb
outsb
push
cmc
and
or
ss
das
fstpt
cmpsl
xchg
pop
mov
push
and
in
shlb
dec
pusha
movsl
inc
dec
pop
adc
jecxz
xchg
aaa
ret
es
xor
mov
xor
into
fsubp
in
jl
push
lods
mov
sahf
ljmp
loop
aam
cli
loope
add
pop
test
aad
dec
std
fiaddl
scas
push
adc
es
sbb
ljmp
push
mov
jns
xchg
mov
inc
xor
push
xor
daa
push
jnp
sahf
into
arpl
or
pop
sbb
jns
push
mov
sbb
pop
inc
aad
xchg
into
clc
ret
cltd
pop
jl
inc
pop
sbb
xchg
mov
cmpsl
out
jecxz
sbb
inc
stos
push
lret
cmc
jmp
mov
loop
add
jnp
jle,pt
jne
insl
loop
mov
imul
enter
loop
push
xchg
lcall
inc
push
insl
push
fwait
push
faddl
mov
sbb
and
push
stos
test
adc
mov
stos
lahf
adc
bound
movsb
jg
js
jp
out
pop
outsb
cmpsb
fcoms
dec
sbb
sbb
cmpsl
jg
cltd
mov
mov
sar
into
sub
sub
fdivs
xchg
mov
inc
xchg
mov
lock
ss
test
ret
xchg
les
aad
mov
test
jmp
dec
inc
movsb
ljmp
in
aad
pop
cmp
clc
cmp
pushf
std
cmp
pop
sarl
sbb
pop
adc
test
xchg
mov
les
xor
add
adc
sub
or
ljmp
in
hlt
lcall
xor
add
adc
sub
or
ljmp
in
hlt
lcall
xor
add
adc
sub
or
mov
lret
in
hlt
lcall
sahf
lock
arpl
mov
sub
in
mov
dec
dec
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
push
mov
call
xor
pop
ret
mov
dec
test
mov
lcallw
fstps
leave
sub
cmp
dec
cltd
pop
or
mov
cwtl
dec
test
mov
or
cmp
sub
fstps
test
dec
cltd
push
test
mov
mov
or
cmp
sub
jno
leave
ja
inc
jmp
xor
das
test
test
into
cmp
jecxz
sub
mov
pop
pop
add
packuswb
rcrb
add
loop
fdiv
insl
aas
insl
imul
in
dec
gs
add
mov
add
arpl
lds
out
adc
mov
dec
cwtl
movsb
dec
push
dec
mov
popa
mov
imul
mov
addl
movsl
sbb
repz
jbe
inc
js
fdivrs
pop
xchg
aaa
sbb
sbb
sub
stos
or
enter
pop
jne
inc
push
mov
pop
inc
nop
aaa
insb
fiaddl
lods
xchg
leave
push
jmp
or
lods
js
inc
pop
orl
sbb
or
cmp
sub
flds
leave
xor
and
push
cltd
inc
mov
js
in
std
dec
int
int3
add
ja
jns
mov
pop
scas
dec
clc
cmp
call
jns
sbb
stos
sub
jge
sub
xor
push
fcompl
in
adc
sbb
adc
or
sbb
or
cmp
sub
fstps
leave
sub
cmp
dec
cltd
pop
mov
js
mov
dec
test
mov
or
cmp
sub
fstps
leave
sub
cmp
dec
cltd
pop
mov
js
mov
add
lret
lret
movsb
aad
clc
mov
add
mov
divl
xchg
jae
pop
outsb
shl
je
insb
sub
mov
sub
and
testl
rorb
dec
mov
je
inc
test
cmp
or
fcmovb
enter
add
sidtl
pop
or
mov
adcb
enter
add
orb
inc
lock
sub
jno
xchg
repz
mov
into
pop
adc
or
in
push
pop
xor
lret
aas
dec
dec
filds
sete
adc
mov
jl
sbb
test
and
iret
xor
jne
cli
xlat
outsb
push
aaa
js
add
sub
je
lods
insb
dec
pushf
xchg
in
cmp
adc
mov
sbb
mov
imul
jp
and
push
lret
mov
mov
xor
adc
fs
cld
inc
fistpl
scas
loop
jecxz
outsb
cmpsl
cmp
mov
jb
dec
mov
dec
hlt
xchg
jmp
fst
fcom
fmuls
stos
cmp
mov
or
fsts
imul
out
sarb
push
js
fcmovbe
pop
out
add
sysenter
popa
stos
adc
add
cmp
dec
ja
mov
add
adc
popf
or
shl
aad
mov
lods
xchg
js
in
push
mov
mov
inc
out
pop
pusha
fidivl
mov
push
addr16
repz
insl
mov
sarb
mov
or
in
adc
rcr
popf
xchg
mov
insb
push
jo
pop
adc
add
in
sbb
mov
int3
je
out
dec
lods
sar
out
cmp
add
test
fistps
in
ja
sbb
add
jp
cmp
jbe
jge
mov
adc
rclb
ds
lds
pop
xchg
mov
jle
pop
push
push
ds
push
ret
pop
mov
enter
or
shll
xchg
ret
mov
out
dec
inc
out
arpl
ja
or
loopne
in
sub
mov
inc
mov
dec
lea
lret
and
mov
pusha
jge
mov
pushf
jle
mov
rol
shlb
cmpsb
lret
xchg
andl
mov
ja
lock
fidivrl
mov
stos
pop
pop
lret
cmpsb
shrb
or
xchg
in
and
push
dec
pop
xchg
add
and
lahf
lds
xchg
inc
xchg
bound
pushf
xchg
or
cmp
fsts
or
mov
jge
adc
sub
jg
rorb
lock
xor
pop
stc
or
jge
mov
enter
call
or
mov
jge
lock
sbbl
jg
repnz
mov
lods
cmp
je
adc
sub
add
and
rcll
xchg
scas
das
sub
outsl
mov
insb
addb
lds
mov
sub
mov
out
lds
cs
cmp
fimull
das
pop
inc
les
stos
lods
xor
lods
orb
addr16
dec
push
cmp
pop
mov
jle
inc
inc
xchg
add
pop
push
mov
mov
mov
jecxz
pop
xor
add
push
pop
enter
sub
or
mov
es
dec
cmp
adc
aaa
sahf
jne
sti
cwtl
cmp
push
lret
loopne
mov
stos
aas
adc
int3
dec
pop
cli
mov
ficomps
in
out
iret
mov
out
xchg
movsl
pop
jo
mov
imul
mov
adc
fcmovnu
ljmp
cmp
xchg
cltd
scas
push
stc
stc
imul
sub
lcall
enter
cmc
and
cmpsb
out
and
mov
sbb
mov
andb
push
mov
add
push
cmp
or
jl
mov
mov
andb
ljmp
aad
and
cmp
push
outsb
mov
pop
cmp
push
pop
push
sbb
ljmp
sbb
pop
ret
fcompl
mov
movsl
std
inc
xor
and
in
insl
push
xlat
xor
out
movsb
fnstcw
inc
gs
out
push
in
add
lods
adc
or
sbb
ljmp
std
mov
push
xor
sti
or
ret
pop
aam
push
mov
mov
push
push
fs
jnp
lds
mov
outsb
in
test
stos
or
adc
cli
jns
mov
fsubl
sti
xchg
sbb
add
dec
pop
data16
push
mov
cmp
pushf
pop
leave
push
dec
sti
adc
add
add
dec
and
add
stos
xchg
adc
out
pop
cmp
pcmpgtw
and
repnz
push
lret
jb
icebp
imul
imul
mov
dec
lcall
mov
sbb
sub
jns
pop
js
fistpl
mov
inc
jb
fdivl
test
or
loope
dec
mov
jb
mov
stc
and
xchg
iret
lock
mov
repnz
mov
roll
int
sbb
push
sti
push
pop
loop
shrl
or
in
sarb
shrl
in
mov
rclb
insl
inc
gs
dec
adc
mov
mov
pop
ret
pusha
add
xorb
out
xchg
jmp
cmp
insb
pushaw
fs
dec
and
adcb
sub
lcall
mov
and
cmp
enter
fsubrl
mov
repnz
pop
mov
xor
jae
mov
push
mov
sub
push
arpl
mov
jb
jl
int
into
or
push
add
mov
xor
ljmp
out
lret
ljmp
fcomps
scas
sub
mov
test
mov
je
or
movsl
lds
push
scas
adc
jb
test
das
sbb
mov
jb
or
add
push
fldl
dec
divl
sub
mov
ret
std
dec
push
xchg
xchg
sahf
dec
fsub
pop
push
xor
pop
test
fistl
sub
push
pop
add
cmp
test
or
sub
imul
mov
and
xchg
inc
mov
es
push
fists
cwtl
popa
sub
cmpsl
sub
mulb
xlat
scas
sti
or
cld
ret
inc
pusha
cmpsl
lcall
fnstcw
es
mul
orl
testb
cld
sub
mov
fwait
jp
sub
lds
test
bound
in
xor
sahf
push
std
ja
jmp
shlb
dec
xlat
in
fbstp
imul
mov
cmp
sub
sub
loopne
popf
sti
roll
pop
mov
pop
dec
in
into
pop
mov
cmp
xor
and
add
xchg
xlat
insl
cmp
rcrb
daa
hlt
fnstenv
cmp
repz
inc
xor
or
cli
mov
cmp
push
push
jmp
sbb
add
aad
push
add
popa
jnp
pop
mov
mov
fiaddl
jge
sub
clc
jg
fcompl
push
dec
adc
movb
fwait
in
gs
cltd
fldcw
push
sbb
pop
leave
incb
cmpsl
andl
mov
pop
sbb
rol
mov
popf
xchg
mov
sahf
fdivrp
nop
sti
cmp
mov
cwtl
dec
push
jp
outsb
lods
adc
xor
les
inc
mov
mulb
mov
pop
sti
ss
dec
inc
pop
in
cmp
or
imul
xor
sbb
mov
inc
mov
pop
xchg
xor
cmpsb
push
push
rolb
mov
shll
movsb
data16
mov
aam
cwtl
and
push
jns
jle
jns
clc
add
ret
lret
lods
jo
mov
notl
cs
mov
into
mov
cmp
adc
jmp
outsb
add
inc
pop
xchg
ret
stc
add
cmpsb
bound
add
add
iret
mov
mov
push
sbb
in
sbb
xor
popf
and
xlat
test
lea
jbe
dec
lret
shll
mov
dec
hlt
movsb
je
mov
loope
mov
je
movaps
xor
test
mov
sti
push
outsb
jbe
mov
out
fstps
add
ret
adc
imul
mov
xchg
xor
inc
mov
leave
mov
stos
outsl
jbe
cmpsb
es
nop
cmpl
xchg
stc
mov
pop
xor
repnz
pop
in
or
cmp
add
mov
cltd
aam
lods
and
and
xor
call
loop
cmp
jnp
mov
adc
add
dec
pop
push
imul
cmp
imul
aad
inc
ja
arpl
cli
fwait
and
mov
ret
lret
jmp
out
adc
test
loopne
push
lods
sbb
or
pop
sbb
test
push
xchg
aaa
xor
xchg
pushf
fmul
enter
addb
fimuls
dec
ljmp
sarb
cmp
jne
rorl
and
pushf
mov
cli
flds
mov
aam
sub
sub
movsb
xchg
adc
inc
xor
mov
dec
sbb
fcom
push
xor
and
dec
mov
repnz
cmpsb
jecxz
add
scas
mov
repz
shrb
lock
cmp
inc
dec
cmpl
ret
dec
icebp
movsb
je
iret
mov
rorl
mov
stc
fisttpll
sbb
jne
push
dec
outsl
aad
adc
dec
cwtl
push
inc
sbb
ror
in
in
das
dec
xor
sub
pop
sub
daa
inc
dec
inc
xor
mov
ja
mov
stos
or
fisubrs
adc
mov
sbb
sbb
xor
jo
ds
add
xor
rcll
scas
sub
mov
push
ss
out
dec
pop
sbb
arpl
popf
mov
enter
sub
pop
cmp
fwait
mov
sbb
fldt
data16
add
push
rcrb
popa
xchg
test
in
or
inc
mov
fwait
xor
inc
pop
sti
inc
adcl
or
inc
out
gs
push
ret
sub
out
mov
repz
icebp
ljmp
jbe
mov
sub
repnz
push
je
or
ret
xor
mov
lock
or
dec
and
jle
addb
sub
sti
xchg
test
fidivrs
xor
or
or
ret
inc
sub
fists
jle
xor
aam
and
xor
repz
push
scas
jl
testl
pop
jecxz
jmp
mov
adc
js
icebp
xchg
push
sub
inc
or
inc
push
push
bsf
in
mov
idivl
and
push
lahf
movsb
mov
mov
mov
sub
scas
sbb
lret
movsl
pop
or
fnstenv
mov
aad
aaa
call
lock
data16
pop
es
and
orl
gs
xorl
clc
lcall
cli
dec
xchg
into
xchg
xlat
lcall
fisubs
adc
add
add
cs
je
dec
out
jmp
shlb
ret
mov
icebp
cmp
stos
movsb
mov
mov
ss
daa
ds
ljmp
ljmp
adcl
fdivr
add
lea
aam
cld
loopne
hlt
inc
and
dec
pop
jp,pt
cld
mov
mov
push
jmp
add
mov
inc
sub
int3
xchg
or
out
lahf
les
push
cltd
pop
fnstsw
sbb
inc
test
push
cs
in
imul
cli
cmp
cli
mov
cmp
out
or
jnp
push
imul
dec
arpl
xchg
fbld
in
testb
ret
dec
cmc
sbb
cmp
ss
les
push
inc
mov
enter
in
cmp
pop
mov
jecxz
jae
pop
addb
mov
xchg
repnz
cmpsb
cltd
subl
jecxz
xlat
das
subb
xchg
dec
call
scas
aad
mov
cli
repnz
insb
sbb
pusha
jecxz
jo
pop
ret
gs
mov
sub
mov
imul
pop
xchg
push
dec
hlt
repz
fstpt
mov
fidivrl
lret
pop
push
mov
pop
test
movsl
inc
inc
pop
and
and
mov
mov
mov
jp
loop
imul
inc
mov
pop
mov
xchg
and
cld
mov
outsb
std
sbb
cmp
ss
mov
and
jb
js
out
arpl
ret
or
adc
jne
js
cwtl
in
push
cmp
cmp
sbb
xchg
xor
push
dec
mov
dec
inc
xor
in
and
in
test
add
jne
adc
cmpl
add
stos
cmp
cmp
pop
and
cmp
js
sti
sbb
fisubrl
test
test
pushf
cmpsl
aas
pop
out
lret
jae
inc
int
mov
aam
or
pop
and
jle
insb
ss
bound
xchg
mov
stc
and
sub
mov
inc
sub
add
push
call
push
lea
xchg
int3
ja
popf
cmpsb
bound
incl
inc
in
loopne
mov
push
out
mov
dec
sti
aad
in
pop
pop
cmpsl
cld
adc
cmpsb
lahf
rcrb
sbb
cmpsb
push
inc
push
cltd
add
ds
cmp
orl
and
ljmp
inc
insl
sbb
mov
loop
push
xchg
mov
dec
icebp
loop
orb
test
inc
add
xchg
in
scas
rorl
std
pop
iret
leave
push
fnstenv
mov
mov
mov
shll
arpl
leave
fstps
loopne
xchg
scas
inc
cmpsl
pop
mov
mov
inc
xchg
xchg
inc
je
mov
inc
inc
movsb
int
in
es
rcr
and
scas
out
dec
icebp
shlb
imul
mov
mov
ja
adc
inc
pop
nop
push
test
pop
shrb
sarb
lea
cmpsl
int
pusha
fiaddl
in
sub
repnz
pop
out
jne
xor
xchg
jle
pushf
xchg
cmp
repz
loop
les
lods
mov
clc
cmpsl
xchg
fstps
or
testb
mov
imul
mov
ja
pop
and
lret
mov
in
cmp
mov
push
mov
push
mov
ja
lahf
js
shlb
sti
xlat
fucomi
pop
mov
mov
jecxz
cmpl
mov
sub
nop
sbb
pop
mov
jo
lock
push
mov
and
mov
pop
mov
popf
sbb
mov
or
leave
or
int3
jge
mov
and
mov
sbb
push
lahf
cmpl
cmpl
lods
addl
ja
mov
xchg
jne
shll
inc
mov
cmp
push
mov
mov
fnstcw
das
pop
leave
cltd
sahf
and
xor
push
lret
or
insb
pop
es
scas
int3
enter
sub
inc
and
pop
jno
push
lcall
cmp
dec
xchg
lret
mov
or
sbb
mov
mov
push
iret
ret
mov
or
pop
inc
push
std
repz
jne
test
add
mov
jae
jne
popf
inc
sub
loopne
fincstp
lcall
pop
sti
mov
adc
in
sub
iret
and
pop
mov
sahf
cmp
mov
jns
inc
sbb
filds
xchg
push
lds
shll
ret
mov
subb
sub
sti
data16
inc
adc
in
iret
fistl
decb
inc
add
pop
jge
mov
dec
enter
jno
jl
addr16
add
test
js
push
iret
adc
sbb
int
es
xlat
call
mov
in
jbe
cmc
test
clc
xchg
or
adc
lock
fildll
lea
add
inc
push
dec
mov
dec
ret
not
je
mov
push
icebp
in
jg
add
adc
inc
repz
into
cmp
sub
stos
sub
or
jns
bound
mov
jae
vpmovmskb
mov
xchg
in
ja
test
xlat
adc
outsl
dec
mov
gs
loop
shll
fdivs
hlt
leave
mov
jge
xor
cltd
xchg
iret
lret
loopne
pop
add
jmp
mov
shrb
stc
xor
popf
push
aam
pop
ljmp
cmp
xchg
push
or
add
mov
repnz
mov
imul
jp
filds
cmp
shl
bound
imul
roll
and
add
mov
stc
jno
movsb
ficoms
push
imul
jl
add
test
and
fs
mov
xchg
movsb
insb
xchg
stos
and
jmp
out
add
cmp
xor
daa
pop
fcoms
jns
rolb
jl
mov
sub
jge
push
push
sub
lea
aad
cmpsl
or
out
sub
xchg
nop
cmp
inc
jbe
inc
add
lret
nop
xchg
idiv
hlt
xchg
stos
sbbb
jb
xchg
cmp
pop
jecxz
in
rolb
mov
pop
inc
stos
or
clc
dec
xchg
push
pop
or
inc
inc
pop
jnp
xchg
mov
jno
mov
icebp
into
repnz
xchg
cmc
mov
mov
popf
mov
int3
mov
add
es
cli
cmpsb
xor
int3
sub
out
or
es
in
ds
movsb
mov
or
push
shll
jnp
pop
leave
arpl
or
in
imul
icebp
mov
jb
push
inc
sub
loope
push
mov
cltd
cltd
push
mov
aad
std
sub
pop
xor
sub
xor
mov
insb
enter
cmc
das
cli
xlat
data16
stos
adc
push
or
dec
pop
sub
fidivrs
push
sbb
xchg
adc
sbb
jmp
pop
pop
hlt
mov
pop
xchg
mov
sti
push
daa
sti
mov
inc
aad
push
mov
insl
add
decb
cmp
insb
mov
xchg
mov
ficomps
mov
xchg
inc
mov
xchg
pop
pop
pop
jae
add
push
push
jmp
imul
iret
daa
inc
xchg
pop
enter
test
nop
and
jmp
sub
stos
fchs
push
popa
je
adc
cmpsl
pop
mov
inc
out
fisttps
jnp
ficomps
pop
inc
or
lock
cmp
insl
aaa
mov
dec
nop
fidivl
out
das
cltd
pop
data16
addl
jns
fdivl
jle
pop
cmp
push
or
bound
lods
cmpsl
xor
cld
xchg
sbb
rcrb
fwait
add
jecxz
stos
and
jne
scas
pop
out
or
pop
in
dec
adcl
cmpsb
mov
sbb
cwtl
int
rorl
dec
ds
icebp
jmp
xor
and
imul
and
ds
jg
js
imul
mov
add
lods
sbb
bound
xchg
jns
lahf
lcall
sahf
stos
mov
out
mov
rorb
mov
imul
outsb
add
repnz
cmp
arpl
shrb
add
jbe
mov
jb
pop
lock
xor
add
inc
in
fistl
lods
es
hlt
xlat
popa
xor
test
rcrl
ror
dec
add
data16
and
lods
mov
rcrl
out
movsb
std
xchg
xor
cmp
loop
icebp
and
sbb
fdivl
scas
jg
cmovno
lret
int3
loop
scas
inc
xor
inc
ret
xchg
or
mov
mov
xchg
aad
jo
mov
inc
mov
xchg
pop
xor
pusha
or
iret
jne
aas
mov
fldenv
pop
add
sbb
pop
push
mov
adc
xor
inc
data16
sub
or
pop
stos
xor
jg
adc
sub
ficomps
inc
sub
add
loopne
pushf
pusha
leave
add
xchg
cmpl
adc
je
mov
jle
and
xchg
xchg
xlat
test
fistpl
leave
and
cwtl
jne
shll
mov
mov
jge
xchg
pop
cmp
add
jns
imul
cmp
sub
fstps
leave
sub
cmp
dec
cltd
pop
mov
js
mov
dec
test
mov
or
cmp
sub
fstps
leave
sub
cmp
dec
cltd
pop
mov
js
mov
leave
test
mov
mov
cmp
sub
pop
sbb
sub
cmp
dec
cltd
pop
mov
jp
mov
dec
test
sbb
or
js
neg
out
cmp
sahf
aas
adc
jbe
inc
xchg
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
or
inc
cli
jb
fimull
in
lcall
ret
sub
cmp
ljmp
adc
and
fsubrs
jp
dec
and
dec
cmpl
or
cli
push
jp
or
xor
pop
sahf
das
xchg
xor
insb
iret
shrw
and
or
sbb
push
add
cmp
out
jle
mov
ljmp
aad
std
aaa
ret
adc
jp
test
cmp
popa
pop
mov
dec
inc
cmp
sbb
je
push
cmp
push
jnp
dec
sbb
push
sbb
push
out
xchg
fucomip
mov
stos
pop
mov
out
stos
test
mov
jg
sbb
xor
ret
lcall
loop
cmp
sub
bound
mov
inc
in
cmp
in
xor
add
adc
aas
jecxz
push
cmp
in
ljmp
add
cmp
ljmp
cmp
ljmp
jbe
outsl
into
xor
dec
out
cmpsb
sbb
arpl
pop
out
xlat
js
jg
xchg
pop
andb
jmp
addr16
cmpps
sub
icebp
lods
ret
dec
cmp
bound
xor
ret
dec
loop
xchg
sub
sbb
inc
cli
jb
ficoml
stos
add
shrb
jp
dec
loop
xchg
sub
sbb
adc
cmp
jns
and
les
mov
push
adc
mov
push
xor
jle
dec
scas
or
and
scas
adc
push
push
jbe
jl
bound
xlat
push
in
fimuls
adc
mov
in
inc
jno
sbb
mov
test
in
mov
push
add
jle
stos
sbb
pusha
inc
pop
add
or
xchg
xchg
jl
mov
imul
fidivs
loope
rcll
mov
add
mov
sub
pop
es
add
push
das
outsl
xchg
sbb
sar
dec
sar
sti
movsl
mov
xor
mov
mov
inc
das
jo
sbb
xchg
inc
jmp
nop
mov
sbb
and
add
dec
pop
inc
or
aaa
push
xchg
enter
testb
cmpsb
mov
das
xchg
popa
out
sahf
mov
dec
push
daa
dec
divl
sbb
cmp
pushf
push
cmp
sub
stos
dec
push
addr16
xor
gs
xor
push
push
sbbl
mov
add
and
pushl
and
loop
xchg
pop
cmp
arpl
je
scas
adc
mov
cli
int3
lea
lahf
js
jnp
mov
and
lret
adc
repz
mov
nop
sarl
push
or
mov
inc
cmp
test
pop
push
push
lea
test
test
mov
push
sub
cltd
cmpsb
xchg
mov
xchg
rorl
pop
pushf
inc
jmp
iret
push
popf
lods
sbb
ljmp
adc
cs
aad
clc
hlt
xlat
mov
mov
cmp
jle
repz
push
push
std
adc
aaa
mov
or
fs
inc
mov
int
fidivs
lret
sbb
insb
inc
sarb
std
dec
aaa
repnz
and
scas
ja
mov
or
sarb
add
insb
or
leave
in
mov
je
adc
and
inc
inc
inc
inc
lret
repz
bound
or
cwtl
xchg
addr16
fdivrp
cli
imul
pop
jp
inc
sbb
test
lret
outsb
jo
pop
cmp
jmp
add
enter
out
or
dec
mov
aam
insl
out
in
lcall
cmp
cmp
lret
cmpsl
test
push
xchg
js
mov
pop
cmp
dec
addr16
inc
push
inc
mov
xchg
jmp
cmp
pop
lret
inc
imul
cmp
or
mov
sbb
adc
pop
stos
ljmp
scas
cmp
cmp
inc
sarl
mov
xor
pushf
les
jb
test
pop
pop
movl
pop
adc
js
adc
cmp
mov
and
das
repz
lret
sub
pop
in
mov
js
jae
xor
daa
lea
mov
fidivrs
jb
cmp
pop
inc
fldcw
adc
mov
outsb
sbb
out
mov
cwtl
jno
in
push
dec
jle
jmp
jg
cltd
and
out
inc
stos
aad
xchg
dec
or
and
pop
loopne
addb
in
fistpll
mov
sub
adc
and
jmp
cmp
into
mov
cmp
pop
mov
insb
and
push
push
and
push
notl
rorb
andl
xor
sub
repnz
push
xchg
xchg
mov
out
ja
xchg
sbb
subb
lods
cmpsb
sahf
jnp
xor
cmp
mov
mov
fsubl
add
sub
and
sub
jg
pop
stos
repnz
movsw
inc
in
add
rolb
sbb
lret
and
iret
or
xlat
jg
movb
dec
gs
rcrb
rorb
in
cmp
push
inc
aam
cs
stc
inc
je
jne
adc
add
cltd
popa
hlt
cmp
mov
pop
adc
or
or
in
xchg
dec
push
jnp
or
dec
push
iret
mov
jecxz
mov
arpl
fildl
jne
dec
or
mov
mov
xor
and
dec
mov
dec
aam
jbe
lcall
mov
mov
mov
jl
cmpsb
aaa
adc
hlt
push
mov
cmp
mov
xor
sub
into
dec
adc
mov
pop
xchg
leave
ss
and
sub
cmp
sbb
jne
ja
pop
xchg
mov
mov
mov
pop
popf
add
sbb
mov
sub
and
dec
in
lods
mov
sbb
movsl
or
adc
nop
stos
mov
pop
call
xor
and
es
insb
jl
or
cmc
mov
pop
cmpsl
push
test
mov
aam
jno
aam
and
mov
jnp
out
iret
decb
pop
popf
mov
sahf
inc
jg
fimuls
gs
cmp
push
sub
shrb
iret
mov
pop
imul
in
ss
shrb
add
pop
out
fimull
cmp
aaa
aad
inc
mov
dec
dec
fstl
inc
adc
mov
mov
adc
test
pop
xlat
push
cmpsb
lods
or
jp
aaa
mov
push
or
pop
jns
adc
jo
cmpsl
dec
sbb
dec
inc
cmp
sub
and
daa
ja
sub
out
sub
mov
out
sbb
inc
ret
adc
xchg
js
or
into
ds
inc
add
mov
add
push
mov
add
popa
int3
or
mov
addb
shl
jl
or
lret
and
adc
mov
sahf
out
jg
push
xchg
sub
xor
sub
mov
or
xor
sti
xlat
popf
in
mov
sti
inc
lret
push
arpl
lods
clc
adc
mov
push
cmpb
push
repz
pop
sbb
jmp
xor
xor
out
and
cli
pop
orb
out
cmp
popa
enter
xor
dec
movsl
jnp
push
lds
jle
jge
leave
push
dec
popa
mov
test
popf
cltd
jp
pop
xchg
or
inc
cmpsl
out
mov
xor
aam
cmp
and
stos
xchg
and
sbb
sub
aaa
xor
imul
out
in
sbb
and
jo
rcll
scas
out
sbb
je
inc
xor
lds
repz
leave
jge
lahf
stc
and
mov
xchg
testl
and
js
loope
into
jp
mov
lahf
sbb
xchg
cmp
sbb
jno
dec
pop
xchg
popl
jp
inc
insl
jge
push
lock
das
inc
outsb
jno
or
shll
add
mov
jl
mov
or
out
das
es
popl
push
pop
mov
shll
or
mov
adc
lea
cmp
push
scas
mov
shll
push
int3
push
mov
jg
adc
mov
popa
dec
das
js
mov
pop
ret
sti
and
xor
dec
daa
add
dec
sahf
mov
outsb
lods
hlt
adc
mov
inc
lock
jae
fstpl
loop
subb
cmp
jb
test
mov
inc
es
stc
or
or
dec
push
les
xchg
or
and
imul
stc
pop
test
push
mov
jmp
dec
sbb
mov
js
sbb
fwait
adcl
js
sarb
jb
arpl
nop
pop
mov
in
rorb
mov
mov
push
push
lods
sub
aad
in
decb
dec
sbb
sub
fistps
fnstsw
sbb
push
sbbl
xor
and
sti
das
jne
mov
loopne
das
adc
adc
out
xchg
jbe
and
xchg
sbb
shr
test
ret
pop
movsb
ja
dec
shl
inc
dec
mov
and
inc
shr
movsl
jle
and
mov
ljmp
imul
cld
add
subb
mulb
loop
sub
adc
push
mov
inc
xlat
jp
sub
in
je
and
mov
popf
in
call
sbb
dec
insl
dec
xor
push
jno
inc
push
push
xor
test
mov
sub
mov
in
push
pop
cwtl
sub
inc
sub
sbb
xchg
mov
and
xchg
sti
mov
gs
dec
cmp
and
pop
push
and
jno
cmp
cmp
fs
mov
and
cmp
adc
lcall
popf
int3
sub
push
adc
dec
rcrb
roll
or
popl
dec
dec
mov
loop
inc
sbb
in
push
cmpsb
out
js
in
mov
cwtl
sub
call
jo
and
fistpll
push
or
add
xchg
jno
pop
inc
mov
faddl
pushf
rclb
or
ret
movsb
aas
aaa
rcr
sub
push
sbb
adc
xor
test
dec
rcl
adc
add
mov
dec
aam
push
sahf
push
cmc
add
jmp
xor
xchg
popf
push
into
adc
scas
je
mov
jns
sbb
pop
push
inc
cs
mov
inc
jle
xlat
push
mov
adc
sbb
cs
outsl
add
or
loop
pop
add
add
and
stos
sbb
add
sbb
xchg
orb
xor
sub
mov
xchg
xor
mov
mov
repz
jno
pop
loopne
outsb
adc
inc
sti
add
stos
jbe
cmpb
jge
dec
pop
dec
loopne
xchg
pop
mov
xor
vcvtps2pd
ret
add
std
mov
xor
inc
sbb
push
adc
inc
adc
in
mov
mov
mov
subb
stc
in
push
push
movsb
mov
repz
cli
push
in
nop
jno
and
je
mov
jb
es
add
push
sbb
in
pushf
adc
sarb
bound
dec
mov
in
pop
scas
ja
pop
in
inc
add
push
or
xchg
adc
cmp
mov
xor
mov
lret
xchg
sbb
jo
fsts
pmaxub
jo
or
pop
sahf
lahf
repnz
fstps
adc
cld
ja
cmp
push
iret
imulb
clc
lea
test
cmp
stos
pop
rorb
pop
inc
xor
mov
and
pop
xchg
js
dec
jo
sbb
cmp
add
push
enter
xor
cmp
xchg
pop
shrl
das
xor
mov
sbb
lret
outsb
jmp
rcl
sbb
pop
jg
dec
arpl
inc
or
scas
je
mov
mov
push
test
pop
adc
and
xor
mov
gs
jnp
inc
sti
dec
dec
sbb
jno
std
sub
repnz
push
loopne
lret
push
lahf
sbb
pop
mov
in
add
sub
mov
sbb
fdivrs
jne
lcall
xchg
sub
mov
adc
and
xchg
aam
out
int
fimuls
mov
int
enter
mov
insl
out
inc
hlt
mov
loope
sub
clts
pop
add
jnp
xor
ja
sbb
enter
shll
incb
push
cmp
sbb
push
out
flds
jo
out
mov
out
add
in
or
inc
repnz
shl
pop
jns
stc
insl
shr
popa
xchg
loop
cwtl
jge
push
aad
aam
and
and
lret
or
add
lods
push
sti
inc
mov
sarl
sbb
repnz
lock
sub
sbb
int3
iret
fldt
push
mov
inc
aaa
add
test
loop
mov
mov
jecxz
loopne
mov
jl
or
push
push
dec
mov
std
adc
push
test
shll
pop
adc
and
in
sbb
jecxz
std
push
imul
ja
loopne
test
insb
and
aaa
shl
pop
in
loope
lods
push
stos
daa
xor
int
pop
adc
aam
out
outsb
out
lcall
jge
mov
shrl
repz
pop
push
mov
gs
pop
lret
cmpsl
jg
pop
sbb
testb
call
mov
lds
jecxz
sbb
cmp
lret
pop
xchg
gs
xchg
stc
jle
lcall
inc
lret
lahf
retw
xchg
dec
rcll
push
in
fdivs
push
pop
call
out
std
mov
into
scas
lret
pop
add
out
xor
pmulhuw
sub
loopne
imul
outsb
push
dec
push
cmp
mov
fmuls
xor
pusha
cmp
lock
mov
stc
repz
pushf
xor
sti
test
cmpsl
mov
xor
sbb
test
int
xchg
mov
test
scas
stc
inc
movsl
insl
rcll
add
dec
jae
movsb
test
call
ss
iret
gs
jecxz
xchg
aaa
fcompl
pusha
inc
clc
sub
sub
lret
mov
arpl
push
mov
adc
ja
lea
or
mov
pushf
sbb
int
push
xchg
shrb
pop
xlat
repnz
pusha
cmp
ret
movups
shrb
aam
jp
cld
shll
jp
add
push
movsb
adc
jns
loope
and
xor
mov
dec
test
scas
pop
repz
fstpt
add
movsb
into
jbe
mov
aas
xchg
push
sbb
push
popa
xor
sahf
push
cmpsb
sbb
jmp
mov
pop
xchg
sti
inc
adc
shlb
jmp
sub
mov
adcb
and
xor
xor
pop
lcall
cmp
cltd
push
adc
or
sbb
mov
fs
int
lret
iret
mov
imul
mov
cli
sbb
inc
loopne
int3
xchg
inc
in
enter
add
xor
sub
xchg
popf
sti
mov
xorl
add
lock
push
fisubrs
cmpsb
aam
ret
addr16
stos
xchg
call
sbb
add
mov
sub
push
inc
std
lea
xchg
loop
xchg
xchg
adc
aas
mov
fucomip
dec
cmp
inc
jl
loopne
jecxz
xor
popa
mov
sbbb
call
push
mov
or
push
jno
imul
and
sub
mov
insb
add
stos
mov
in
jg
outsl
cmp
sub
faddp
testb
inc
sbb
xlat
stos
jns
in
xor
jo
cmpsb
mov
sar
bound
or
movsb
in
inc
adc
test
and
pop
pop
jb
or
adc
daa
mov
adc
jnp
sub
sub
and
add
js
es
cld
push
in
es
fadds
cmpsl
mov
cltd
xor
clc
inc
push
fs
icebp
pop
dec
addr16
xor
push
mov
lods
scas
fsubl
adc
clc
or
cmp
addl
insb
inc
pop
rorl
cmc
rclb
aas
or
data16
ficoml
popa
cmp
ficoms
ror
rcr
inc
lods
lods
cmp
mov
xchg
mov
add
add
sub
cld
adc
cmp
test
mov
cmpb
xchg
adc
hlt
adc
push
mov
adc
pop
adc
mov
dec
xor
xor
push
cmp
cmp
sbb
data16
push
imul
test
dec
or
inc
pop
ficomps
push
idivl
mov
jne
dec
into
icebp
sub
outsl
pop
push
cmp
mov
dec
adc
das
push
adc
in
pop
lahf
inc
les
pop
xor
sbb
sbb
mov
enter
jg
ret
repnz
shrl
arpl
neg
imul
ret
pop
dec
outsl
sbb
inc
inc
ror
cs
mov
cwtl
enter
iret
addr16
cmc
lods
mov
lea
xchg
cmp
push
jg
sbb
fwait
mov
ficoms
inc
sbbb
bound
mov
mov
jmp
aaa
push
push
and
pop
inc
outsb
sbbb
rolb
testl
pop
jae
lods
fwait
jge
mov
aad
mov
pushf
in
out
cmp
mov
and
cmpsl
jmp
mov
stos
scas
or
xchg
insl
xchg
outsl
dec
inc
sub
push
mov
sahf
pop
mov
add
pop
or
mov
out
scas
scas
cmp
sbb
and
fists
inc
es
bound
add
pop
mov
dec
dec
in
popa
pushf
cmp
call
cmpsl
js
xor
jl
fsubr
rorb
cmp
fsts
sub
outsl
xchg
fmul
stc
lock
int3
faddl
jl
lds
ret
xor
push
cwtl
cmp
lods
pusha
inc
in
push
bound
xchg
into
fnstsw
cwtl
scas
dec
ja
fldt
ljmp
scas
daa
lret
push
sub
pop
pop
cmp
mov
mov
xor
adc
out
inc
sbbl
inc
fisubrs
inc
xchg
pop
loope
cs
and
xchg
mov
mov
and
je
xchg
sbb
mov
dec
mov
push
inc
mov
pop
rcrb
inc
hlt
add
call
icebp
add
nop
mov
pop
sbb
inc
xchg
push
call
lods
ss
cmpsb
mov
jmp
es
cmpsb
bound
adc
subl
je
inc
aam
mov
cmp
mov
es
imul
lea
push
jmp
fimull
push
adc
jnp
mov
cld
iret
xor
lock
stos
rol
push
movsb
jl
jb
js
fcom
fwait
inc
jno
sbb
int3
pop
repz
mov
push
sbb
loopne
aaa
xchg
lea
pop
loop
or
fsts
in
fiadds
dec
leave
imul
add
fdivrl
xchg
call
pop
jecxz
inc
jns
cld
jl
sub
aaa
xchg
dec
shrl
in
sbb
mov
push
xchg
test
add
push
lods
insb
sbb
cld
imul
das
push
pop
jmp
dec
test
nop
inc
loopne
mov
jae
mov
jbe
into
shlb
or
mov
cmc
inc
repnz
cltd
adc
mov
adc
stos
sub
inc
dec
jo
mov
mov
in
push
mov
cltd
jp
mov
sbb
insb
sub
out
cltd
testb
lock
inc
and
stc
xor
hlt
xchg
mov
scas
aaa
mov
stc
add
mov
stc
out
jo
stos
in
in
sahf
mov
dec
mov
testl
mov
mov
aam
xchg
mov
mov
jp
testl
sub
in
pushf
jl
xchg
loopne
lret
pop
lcall
fdivrl
pop
sbb
sub
mov
mov
dec
inc
inc
jg
xor
dec
shrb
mov
cmp
add
mov
jp
add
pop
sbb
xchg
and
loop
in
adc
push
adc
sbb
out
inc
cmp
push
ret
adc
dec
jne
push
fwait
push
mov
fdivrl
sub
fwait
push
leave
std
dec
pop
xchg
loop
xchg
test
pop
and
mov
sti
rcrb
mov
push
stos
push
in
cmpsl
mov
aad
std
jo
pop
jmp
loop
push
push
sbb
rorl
push
lahf
push
fwait
aaa
nop
mov
push
jmp
fsubs
sbb
mov
dec
movsl
pop
stos
inc
xchg
xor
pop
scas
lret
call
mov
push
clc
outsb
and
mov
pop
dec
fsubl
jne
dec
bound
das
les
xchg
lods
adc
sbb
and
push
sbbl
jae
scas
xchg
push
mov
idiv
aam
add
jmp
pop
or
das
jbe
sahf
lods
jg
pusha
and
cmpsl
lcall
fwait
or
pop
dec
repnz
loopne
or
bound
xor
adc
pusha
add
xor
and
dec
and
sbb
imul
mov
pusha
fisubrs
and
jo
inc
push
pop
push
call
movl
mov
icebp
mov
roll
dec
mov
shll
dec
ja
ret
cs
xor
mov
ret
sbb
enter
or
insl
xchg
leave
push
dec
pop
and
push
dec
adc
jne
dec
nop
add
std
xor
aaa
test
fcmove
lock
mov
nop
mov
test
mov
out
shl
pop
lock
idiv
push
lods
popa
push
rolb
sbb
pop
add
insb
cmp
out
jl
xor
mov
gs
jae
pand
cmp
hlt
stos
push
std
nop
repz
or
mov
fldpi
dec
pop
mov
mov
mov
adc
popa
mov
subb
lret
adc
and
repnz
loop
xchg
sub
sbb
inc
cli
jb
ficoml
stos
add
shrb
jp
dec
loop
xchg
sub
sbb
inc
cli
jb
ficoml
stos
add
shrb
jp
dec
loop
xchg
sub
sbb
jbe
inc
lret
adc
mov
rcrb
loop
in
or
dec
cmc
pop
in
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
push
hlt
add
jl
add
mov
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
pop
cmc
add
or
add
add
add
cld
hlt
add
hlt
hlt
add
in
hlt
add
in
add
fdiv
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
inc
cmc
add
dec
cmc
add
pusha
cmc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
fdiv
add
clc
cmc
add
and
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
je
add
jl
add
test
add
mov
add
xchg
testb
pushf
testb
movsb
testb
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
shl
add
fdiv
add
call
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
mov
add
fdiv
add
add
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
jg
add
insb
clc
add
fs
add
pop
clc
add
push
clc
add
dec
clc
add
inc
clc
add
cmp
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cwtl
clc
add
mov
clc
add
sar
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
cmp
add
pop
stc
add
cmp
add
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
aam
add
fdivr
add
in
add
in
stc
add
hlt
stc
add
cld
stc
add
add
add
pop
cli
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
xor
add
cmp
add
dec
cli
add
pop
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
