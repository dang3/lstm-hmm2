xor
mov
add
sub
dec
mov
add
or
mov
xor
or
mov
jmp
test
je
add
ret
jmp
test
jne
mov
mov
pop
ret
add
add
add
push
jmp
out
test
test
add
xor
ret
ret
add
add
add
rolb
adc
jne
cmpb
jne
nop
nop
xor
inc
sub
xor
mov
jmp
add
sub
xor
and
sub
mov
and
sub
mov
xor
and
mov
jmp
shr
and
and
xor
and
mov
push
push
mov
mov
jmp
jne
xor
ret
test
jne
jmp
push
jmp
ret
leave
ret
push
jmp
push
subl
push
jmp
nop
push
nop
push
push
addl
push
jmp
leave
int3
dec
leave
subl
call
test
je
add
ret
ret
add
add
add
and
cmpw
je
jmp
lea
add
sub
mov
xor
mov
sub
cmpw
jmp
add
mov
lea
and
or
mov
add
mov
mov
shr
and
lea
shr
or
sub
or
and
mov
jmp
cmp
add
or
sub
inc
xor
inc
mov
movzwl
movzwl
add
and
and
mov
lea
sub
jmp
sub
ljmp
add
add
loop
ljmp
inc
mov
jmp
mov
mov
jle
jmp
jmp
test
mov
mov
mov
movl
jle
add
jmp
sub
cmpl
lea
je
push
push
jmp
push
call
and
ror
xor
sub
mov
cmp
je
and
mov
test
jne
sub
mov
jmp
cmp
jl
jmp
add
add
push
or
xor
mov
sub
test
jne
push
jmp
xorl
call
jmp
jne
add
add
and
sub
mov
mov
xor
and
cmp
sete
mov
ret
add
add
add
push
add
add
adc
je
and
dec
mov
mov
inc
add
mov
add
mov
shl
mov
jmp
test
lea
jmp
add
stos
and
or
mov
sub
jmp
push
jmp
dec
push
push
inc
jmp
nop
pop
push
int3
pop
subl
call
test
je
jmp
sub
mov
add
mov
sub
shr
jmp
mov
or
add
mov
lea
jmp
call
ret
add
sub
xor
mov
ror
mov
jmp
push
and
add
mov
or
dec
mov
jmp
sub
test
jne
movzbl
add
mov
lea
nop
nop
nop
nop
nop
dec
mov
shr
and
add
test
je
add
mov
mov
mov
mov
jmp
add
xor
mov
test
jne
cmp
je
add
jmp
and
jmp
add
mov
test
je
jmp
mov
add
add
push
mov
mov
nop
nop
nop
nop
nop
mov
mov
xor
or
or
add
mov
jmp
mov
inc
add
or
mov
xor
mov
sub
xor
mov
jmp
mov
jmp
push
jmp
mov
lea
push
push
jmp
sub
test
jmp
add
pop
and
mov
test
je
jmp
mov
push
mov
movl
jmp
mov
stc
nop
push
nop
jmp
pushl
call
jmp
call
ret
add
add
add
incb
mov
mov
mov
mov
add
shr
mov
add
add
xor
cmp
jmp
mov
jmp
xor
jmp
add
add
push
add
sub
or
add
sub
mov
sub
push
push
push
dec
xor
ror
mov
test
jmp
mov
push
push
push
push
jmp
call
call
push
push
pop
push
subl
push
jmp
call
jmp
pop
push
ret
dec
xorl
push
push
jmp
int3
call
call
dec
leave
push
xorl
call
jmp
mov
push
lea
xor
mov
sub
test
jne
add
sub
and
or
mov
movzbl
jmp
add
incb
add
mov
movl
mov
jmp
je
push
push
push
lea
or
sub
mov
add
jmp
mov
or
ror
add
mov
mov
jmp
push
jmp
call
jmp
nop
ret
addl
jmp
add
pusha
mov
call
popa
jmp
mov
ret
add
add
add
mov
add
mov
lea
mov
mov
shr
and
add
jmp
mov
shl
mov
mov
mov
add
jne
add
ret
mov
xor
test
nop
nop
nop
nop
nop
je
movsbl
rol
jmp
inc
mov
add
test
je
jns
movzwl
jmp
dec
dec
mov
nop
nop
nop
nop
nop
shr
lea
lea
cltd
and
jmp
and
mov
add
jmp
add
jmp
call
call
subl
call
test
je
ret
jmp
add
add
add
jmp
push
leave
subl
call
test
jmp
add
add
add
push
jmp
ret
call
inc
xorl
push
jmp
jmp
push
jmp
pop
xorl
push
jmp
call
nop
addl
call
jmp
push
push
jmp
push
push
call
jmp
add
add
add
add
add
add
mov
jmp
mov
add
cmpl
jmp
and
mov
sub
jmp
push
push
and
sub
sub
mov
mov
xor
jmp
add
or
jmp
rep
movzwl
dec
and
xor
mov
shr
mov
add
add
sub
add
cmp
mov
jmp
fwait
xchg
fimull
mov
add
add
pop
and
mov
jmp
lea
nop
movzwl
or
add
xor
and
mov
and
jmp
mov
hlt
jl
rol
mov
add
mov
mov
mov
push
mov
jmp
cmp
jne
and
add
add
add
jmp
call
add
mov
rol
and
mov
add
test
jne
jmp
add
sar
test
jle
rol
mov
mov
shl
mov
lea
add
xor
or
mov
test
jmp
movl
movl
call
lea
addl
call
mov
or
and
or
add
mov
dec
shl
shl
mov
jmp
and
fiadds
add
test
incl
dec
add
cmp
jne
jmp
add
cmpl
jne
pop
pop
pop
mov
pop
ret
add
add
add
mov
loope
and
ror
mov
lea
sub
sub
jmp
test
jne
add
ret
xor
sub
rol
mov
sub
shr
mov
shr
add
mov
test
jne
jmp
mov
jne
movzbl
add
inc
mov
inc
mov
mov
mov
and
sub
or
mov
shr
jmp
imul
les
in
jmp
push
add
mov
xor
mov
call
jmp
sub
jne
mov
sub
sub
jne
test
jmp
add
ret
sub
mov
rol
xor
mov
push
jmp
ret
jmp
ret
subl
call
mov
jmp
and
add
test
mov
je
mov
mov
rol
add
and
mov
sub
test
jmp
ret
xor
mov
movzwl
jmp
add
ror
mov
call
push
jmp
push
push
push
push
pop
nop
push
inc
call
addl
push
jmp
xorl
push
call
sub
sub
mov
mov
mov
jmp
fs
or
add
add
pop
ret
pop
mov
jmp
mov
mov
jle
jmp
jne
movzbl
add
mov
lea
add
ror
mov
dec
mov
mov
shr
jmp
or
mov
rol
and
mov
mov
mov
pop
add
pop
and
shl
mov
pop
ret
add
add
add
ds
incl
mov
call
movl
lea
jmp
add
inc
pop
ret
mov
ret
add
add
add
sub
mov
mov
lea
jmp
call
mov
mov
and
rol
or
add
mov
jmp
xlat
ljmp
jl
or
adc
pop
sub
shr
mov
mov
mov
add
add
sub
jne
test
mov
jmp
dec
sub
add
test
je
jmp
ror
sub
rol
xor
add
mov
mov
mov
jmp
out
jbe
mov
add
and
mov
push
add
mov
ror
or
mov
ror
mov
pop
xor
and
and
mov
jmp
push
or
sub
add
xorl
push
push
jmp
lea
dec
sbb
test
add
add
test
jmp
call
push
jmp
leave
jmp
pop
ret
call
inc
xorl
mov
call
push
jmp
call
ret
subl
mov
call
push
jmp
xorl
mov
nop
nop
nop
nop
nop
call
push
jmp
inc
addl
mov
jmp
scas
xor
movl
sub
rol
mov
sub
test
jne
movzbl
jmp
push
adc
decl
jmp
cmp
fistps
sub
and
inc
mov
pop
ret
add
add
add
pop
jmp
sahf
js
pop
mov
mov
pop
mov
pop
shl
mov
or
add
mov
pop
ret
add
add
add
pop
hlt
incl
jmp
push
call
jmp
jmp
xorl
mov
call
test
je
ret
jmp
mov
enter
sub
rol
mov
shr
and
add
subl
lea
jne
jmp
aam
or
jmp
call
int3
dec
subl
call
test
mov
je
push
jmp
push
call
inc
subl
push
jmp
call
call
dec
xorl
push
jmp
int3
dec
call
dec
push
push
call
push
leave
ret
xorl
call
jmp
dec
int
test
mov
je
jmp
push
cmp
test
je
add
ret
push
jmp
dec
xorl
push
jmp
push
push
call
int3
ret
push
leave
nop
xorl
push
jmp
push
jmp
pop
push
call
int3
ret
addl
call
nop
nop
nop
nop
nop
test
jmp
arpl
mov
rol
mov
sub
mov
mov
nop
nop
nop
nop
nop
add
jmp
movb
add
jmp
enter
add
add
add
ret
pop
pop
mov
pop
dec
mov
jmp
mov
jae
lar
add
mov
xor
mov
and
add
add
shr
mov
jmp
jo
push
pop
ret
add
add
add
test
add
test
je
mov
mov
dec
rol
mov
sub
nop
nop
nop
nop
nop
add
sub
mov
mov
nop
nop
nop
nop
nop
jne
and
sub
add
mov
mov
mov
movl
nop
nop
nop
nop
nop
jmp
movl
mov
movl
jmp
lea
call
nop
nop
nop
nop
nop
cmpl
jne
cmp
jne
call
nop
nop
nop
nop
nop
test
mov
je
xor
add
mov
sub
add
sub
mov
nop
nop
nop
nop
nop
mov
jne
mov
nop
nop
nop
nop
nop
jmp
sub
jmp
sub
xor
mov
movzbl
shl
nop
nop
nop
nop
nop
add
add
nop
nop
nop
nop
nop
lea
xor
mov
nop
nop
nop
nop
nop
mov
call
cmp
jb
add
cmp
nop
nop
nop
nop
nop
jb
add
nop
nop
nop
nop
nop
cmp
jae
add
nop
nop
nop
nop
nop
test
mov
je
lea
nop
nop
nop
nop
nop
shr
and
mov
sub
mov
mov
add
sub
nop
nop
nop
nop
nop
jne
mov
mov
ror
shl
mov
mov
or
sub
add
ror
shl
mov
xor
dec
and
ror
mov
mov
movl
nop
nop
nop
nop
nop
jmp
mov
mov
add
add
mov
movl
mov
cmpl
nop
nop
nop
nop
nop
je
pop
inc
sub
sub
add
mov
sub
pop
pop
inc
rol
inc
ror
mov
mov
pop
ret
lock
add
loop
add
add
add
les
add
add
add
add
or
add
lock
add
loop
add
add
add
les
add
add
add
add
or
add
add
add
add
inc
insb
outsl
jae
inc
jb
jbe
jb
add
sub
push
inc
js
jae
jae
add
inc
jb
popa
je
inc
imul
js
je
jb
arpl
jae
add
adc
push
jb
outsb
je
insb
addr16
js
add
adc
add
add
add
add
xor
add
add
add
lahf
jne
add
add
or
add
add
add
xor
cmp
xor
movsl
cmp
ds
je,pt
or
cmp
cmp
xor
ss
int3
cmp
aaa
daa
cmp
cmp
cmp
mov
aas
cmp
xor
mov
cmp
pushf
cmp
add
add
xor
xor
xor
xor
xor
xor
add
add
add
add
and
scas
push
nop
dec
icebp
icebp
mov
fstpt
or
cltd
and
or
fidivs
mov
pop
jge
cmp
cld
xchg
cmc
inc
cmp
or
scas
xor
lcall
adc
negb
dec
adc
inc
inc
data16
xor
mulb
xchg
popf
loope
pop
fidivl
jb
dec
sub
jle
cltd
aad
xorb
addr16
mov
fmull
dec
popa
ljmp
popa
int
push
popf
pushf
push
jb
out
lock
ja
xlat
call
leave
adc
xor
hlt
aad
lahf
aam
pop
jle
iret
xor
hlt
int3
iret
rcll
jne
fstps
sub
xchg
push
add
popa
lea
cmp
sbbb
jo
fisubl
mov
imul
push
das
addr16
rclb
jbe
push
mov
mov
push
inc
rcr
sub
or
lds
cmp
jbe
rol
leave
int
aam
push
and
mov
push
adc
rorl
das
icebp
adc
fwait
loope
jle
test
cmpsl
xchg
mov
mov
rcll
cmp
rcr
insb
mov
xor
movsl
loop
fwait
mov
cmp
inc
mov
js
arpl
insl
ds
loopne
adc
cmp
insl
push
jecxz
sub
ret
inc
pop
test
adc
sbb
popa
leave
vcvttsd2si
repz
mov
mov
mov
js
dec
sarb
inc
inc
sub
cmpsl
push
xchg
xchg
stos
pop
push
cmc
lret
lahf
mov
dec
push
cltd
int
or
cmpsb
push
xor
lret
mov
add
add
lods
iret
aad
lret
fcomps
daa
pop
inc
jl
sar
mov
cmpsb
xchg
dec
sub
pusha
fidivs
jmp
lahf
in
lahf
adc
dec
shll
add
das
mov
jae
inc
inc
mov
iret
shll
gs
sub
pop
lods
mov
leave
shrb
or
fistpl
mov
adc
push
shl
jno
dec
js
xchg
sub
dec
aaa
mov
cmc
filds
movsl
idivb
imul
adc
outsb
cmp
hlt
pop
bound
mul
xchg
xor
ret
mov
xor
out
jne
add
sahf
push
adc
enter
sub
mov
int
sahf
fiadds
lcall
push
pop
mov
sub
mov
dec
xor
pusha
cmp
fiadds
cwtl
inc
ljmp
ljmp
add
sbb
jo
sub
dec
inc
sbb
dec
or
mov
mov
cmp
dec
dec
pop
or
or
ja
daa
addr16
dec
dec
bnd
aaa
cld
add
fisttpl
daa
sub
jnp
push
adc
jmp
aam
aas
cmp
xchg
jmp
leave
in
add
fucomp
in
dec
xchg
push
popa
sbb
shlb
inc
sub
call
sub
mov
in
xor
imul
xchg
adc
push
into
cmp
and
cmp
imul
ss
loopne
rclb
call
ss
leave
leave
dec
icebp
stc
cmc
stc
jne
enter
int3
pop
adc
pop
mov
and
cmp
test
out
mov
test
adc
mov
in
data16
repz
.byte
