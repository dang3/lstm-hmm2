popa
shlb
imul
leave
pop
out
push
pop
test
inc
mov
inc
jne
aad
jl
push
cmp
cs
dec
repnz
fcomip
inc
push
dec
sbb
call
fsts
mov
xchg
mov
stos
add
ja
daa
pop
out
dec
jbe
notl
arpl
mov
cmc
fcom
and
mov
xor
sub
lods
sbb
loopne
loope
inc
out
cld
sub
adc
mull
std
shrl
pusha
inc
adc
fcompl
inc
outsl
and
enter
pop
leave
sahf
add
out
arpl
rolb
inc
cltd
jae
lock
fwait
fs
pop
jns
fs
add
jns
xchg
dec
cld
mov
mov
scas
add
push
cmp
test
out
es
mov
pusha
pop
sub
cltd
xchg
stos
pop
and
pusha
xchg
gs
and
out
repnz
xchg
push
or
imul
and
mov
sbbb
dec
test
popa
lock
jecxz
mov
ds
out
cltd
mov
jl
out
scas
xchg
and
lcall
inc
imul
int3
dec
fidivrl
ret
lods
xchg
push
cmp
jl
shrb
pop
push
in
jmp
scas
sbb
xor
shl
fnstsw
dec
pop
out
movsb
mov
mov
int3
cs
jb
or
push
enter
out
or
or
sahf
cmpsb
sbb
xchg
into
inc
and
ss
div
icebp
and
mov
or
push
add
mov
out
sbb
icebp
mov
cmp
fnstsw
das
xchg
inc
jg,pt
out
fadds
dec
aaa
sbbb
cwtl
dec
cmpsb
cltd
push
lret
and
inc
add
lret
or
mov
icebp
fcoms
mul
or
shr
out
clc
popf
fcmovb
outsb
cld
repz
in
sbb
sti
xlat
aam
imul
int
ret
add
push
jo
mov
inc
fisttps
lret
pop
les
pop
fs
push
int
mov
and
pop
cmp
aaa
xor
mov
xchg
cmp
das
sub
fcoml
sub
fldcw
sarb
xor
stos
les
test
stos
daa
enter
cmovne
jns
inc
cmp
mov
cwtl
and
fldcw
test
repnz
jns
pop
mov
lea
in
pop
aaa
cmpsb
pushf
mov
add
rorb
and
jo
pavgb
fcomps
xchg
enter
pop
mov
jnp
jl
in
xor
sub
in
xchg
aas
fisttpll
fcomi
nop
and
ficompl
pop
cmp
mov
notl
xchg
stos
out
jbe
fs
pop
push
dec
popf
xchg
jmp
sub
in
xlat
ljmp
sahf
mov
sub
roll
arpl
pop
in
mov
add
sti
or
mov
stos
in
mov
pop
std
ret
call
pop
sbb
or
mov
out
jmp
rep
lret
or
xorb
sarb
nop
mov
jns
and
into
or
or
sbb
jg
push
mov
ds
jbe
jb
mov
cmp
cmp
xchg
cmp
add
mov
jb
cmp
frstor
dec
data16
std
xchg
inc
inc
loope
mov
adc
dec
sub
push
jp
movsb
xchg
scas
mov
jge
pop
mov
cmp
lret
mov
push
jl
sbb
shl
push
pop
or
lcall
je
cmp
nopl
cmp
and
dec
push
cmpsb
sub
in
ret
jb
dec
pop
clc
or
in
mov
xchg
js
xlat
mov
out
orb
ret
mov
inc
lret
popa
pop
adcb
xchg
or
mov
mov
mov
and
pop
jle
ljmp
adc
popf
sahf
jnp
sbb
inc
repnz
mov
pop
xchg
int
ljmp
sbb
xchg
adc
outsb
jbe
xchg
cmc
inc
shrl
pop
sbb
xchg
loop
push
cmpsl
leave
sbb
notb
dec
inc
in
hlt
enter
test
popf
leave
pop
cmp
in
movsb
jp
lock
jmp
xlat
rcr
dec
loope
hlt
xchg
pop
daa
sbb
mov
push
js
jb
call
pushf
mov
add
jge
inc
cli
cmp
rolb
xchg
inc
imul
ret
in
sbb
frstor
mov
and
shlb
andl
dec
xchg
aam
mov
cli
daa
adc
mov
cmp
icebp
mov
sbb
aad
sbb
sahf
daa
push
pop
mov
xchg
shl
cmpsb
mov
fiaddl
jmp
aad
in
xor
daa
mov
aam
adc
sub
sub
mov
or
out
into
push
mov
add
ljmp
mov
subl
jbe
inc
add
jle
jne
jle
xchg
stos
xchg
movsl
repnz
inc
sbb
idivb
mov
sti
jae
xchg
mov
xchg
xchg
sahf
dec
mov
dec
jae
xchg
dec
mov
in
adc
mov
cmp
jecxz
stos
lret
cmp
and
insl
test
mov
push
push
repz
bound
mov
testb
xchg
aas
dec
pop
fisttpll
xchg
fwait
mov
js
cmp
aam
test
loope
lds
or
mov
sbb
sti
enter
ret
je
mov
push
add
sub
jmp
mov
pop
adc
ds
sub
lret
scas
fcom
and
je
mov
hlt
rcrl
jns
mov
sbb
adc
pop
pop
pop
mov
ret
repnz
data16
cli
pushf
mov
out
add
mov
sub
pop
les
sub
inc
jb
xchg
cmpsb
add
ds
mov
push
dec
ret
int3
xor
mov
sub
loop
loope
rclb
bound
mov
stc
lds
mov
cmp
mov
adc
outsb
add
jp
pop
mov
dec
jns
pushf
adc
fisubrs
cmp
xchg
fstl
push
cltd
jns
lock
and
lret
mov
mov
shr
sub
cmc
push
mov
in
adc
orb
cli
adc
adc
and
iret
sbb
push
push
pop
add
les
inc
popf
sub
popa
add
adc
iret
pop
lds
push
test
pop
xlat
mov
mov
or
and
mov
cmc
gs
push
mov
mov
lret
test
shlb
cmp
and
dec
or
push
pop
xor
mov
rcr
jge
pushf
mov
rcrl
out
sub
and
add
ss
lods
xchg
sub
mov
pop
nop
movsb
lret
pop
push
pop
and
pop
pop
push
lahf
in
aas
test
or
dec
aam
fisttpl
icebp
test
movsl
sbb
pop
jb
icebp
popf
js
pusha
gs
loop,pt
pop
movsl
cmp
mov
lret
mov
sbb
sahf
xlat
mov
jo
movsb
push
lahf
shrb
lcall
sbb
jmp
sub
sub
jb
adc
in
cmp
and
imul
dec
xchg
test
push
cmp
lret
adc
cmc
aas
aam
ret
fistps
jbe
mov
jg
xor
in
mov
adcb
mov
mov
jecxz
es
push
pop
mov
jecxz
add
shl
lar
mov
push
stc
pop
sub
stos
shl
andb
add
lods
cld
insb
sbb
cmpsb
mov
cli
mov
jne
push
decb
mov
ja
icebp
and
jnp
mov
adc
pop
movb
outsl
sahf
int3
fmuls
mov
out
dec
dec
insb
fisttps
sub
pusha
out
leave
mov
cmp
sahf
lret
push
es
cmp
xorb
outsl
sbb
aam
pop
gs
out
out
or
mov
xchg
ja
test
hlt
cltd
ds
lret
or
adc
inc
mov
and
push
mov
subb
lds
daa
inc
icebp
dec
jmp
enter
insb
call
ja
scas
leave
dec
loop
mov
xlat
jo
js
dec
movsl
sti
mov
xchg
xchg
out
xchg
mov
lcall
jge
rolb
or
inc
or
lahf
aad
ret
in
scas
inc
pop
pop
inc
int
push
ja
jecxz
popa
mov
sbb
loope
xchg
sbb
mov
icebp
or
stc
stos
insb
sbb
int3
jbe
and
sub
cs
and
jle
inc
not
sbb
xchg
movsb
dec
push
pop
push
cmp
std
mov
lcall
repnz
push
mov
pop
stc
cmp
sbb
in
add
pop
xor
insb
push
popf
shll
push
xchg
xchg
mov
in
xchg
dec
popa
mov
mov
lods
cmp
push
pop
jae
pop
mov
jns
icebp
ljmp
add
or
xor
ficoml
rorl
jecxz
dec
test
mov
xchg
adc
xorb
pop
adc
loope
fmuls
xor
into
mov
rorb
mov
ret
rol
mov
fsubl
mov
mov
dec
outsb
mov
pop
add
sarl
pop
dec
outsl
pusha
push
inc
scas
lcall
leave
jmp
and
inc
adcl
mov
and
clc
sub
cwtl
stos
xchg
les
cltd
xchg
enter
mov
imul
pop
push
outsl
mov
dec
jae
lods
add
cwtl
pusha
xor
test
fcomi
pop
test
pop
aad
mov
jne
adcb
dec
int3
inc
jg
fmuls
cmp
roll
pop
push
mov
jp
xor
nop
test
xchg
add
stos
jl
stc
xor
aaa
jmp
pop
pop
jmp
push
mov
test
hlt
inc
js
pop
cltd
pop
sti
ljmp
push
loope
arpl
sub
push
xor
sbb
push
pushf
sbb
insl
jecxz
stc
roll
sub
mov
fmuls
inc
cmp
stos
in
push
iret
cs
ljmp
jecxz
ja
es
out
jp
push
and
pop
sbb
popf
jge
out
xchg
int3
adc
dec
jno
in
xchg
stc
sbb
pop
addr16
stc
sub
mov
jmp
fwait
lds
cmc
xor
adc
xchg
adc
bnd
mov
movsb
movsb
ja
arpl
out
cltd
cmpsb
aad
mov
dec
and
dec
jge
pop
pop
sub
and
xor
loope
push
jo
mov
outsl
mov
scas
xchg
pop
sub
out
sub
aad
add
dec
cmp
daa
icebp
mov
add
popa
dec
lea
mov
mov
hlt
shlb
jbe
jbe
mov
sarb
arpl
lahf
xchg
inc
inc
cmp
pop
outsb
fcoml
daa
push
sub
sub
xchg
xlat
jbe
xchg
mov
mov
gs
pop
mov
mov
adc
call
popf
mov
push
std
jne
outsl
fwait
mov
inc
push
sti
shrl
push
in
xor
cmp
lea
xchg
push
das
scas
mov
add
mov
mov
mov
fwait
mov
mov
cmp
clc
sahf
mov
push
in
mov
pop
and
cmp
lahf
jg
push
mov
jnp
and
pop
pop
or
jle
pop
popa
push
mov
dec
mov
fcoml
push
pushf
shrb
lahf
stos
cmc
test
aas
out
aas
mov
sub
test
jno
add
xchg
pop
insl
xchg
jg
addr16
push
bound
fmul
pusha
push
int3
pop
add
rol
mov
mov
sbb
dec
mov
aaa
adc
sub
or
add
mov
push
enter
movsl
push
mov
fistps
mov
adcb
adc
cs
sbb
pop
dec
hlt
loope
xchg
xor
and
xchg
rcrb
cmpsb
mov
data16
pop
movsl
cmp
pop
orl
enter
loopne
fstl
lahf
repz
shlb
mov
push
push
sbb
lods
or
jne
insb
nop
jbe
test
pop
or
jp
notl
inc
pop
aam
xor
push
std
out
int3
push
or
pusha
test
pop
xor
in
icebp
jo
shl
daa
lods
mov
dec
mov
push
out
in
testb
shrb
inc
leave
test
cmp
mov
push
data16
sti
or
bound
pop
lods
pusha
pop
imull
and
or
fmuls
inc
xchg
xor
sub
dec
pop
jo
je
pop
mov
data16
repnz
xchg
sub
lret
or
pop
and
cmp
pop
sahf
les
cmpsl
lcall
out
mov
adc
dec
test
mov
into
cmp
push
or
out
pop
inc
mov
xchg
out
outsl
int
mov
call
jecxz
loop
inc
out
pop
jne
int
xchg
sub
iret
subl
fidivrs
ret
push
outsb
movsb
or
cmpsl
loope
sub
push
mov
ficoms
pop
mov
aam
jl
fnstsw
jns
into
xor
pop
or
ror
mov
mov
pop
addl
aaa
and
push
xchg
shlb
mov
lock
inc
sub
loop
or
jbe
adc
mov
lahf
sbb
scas
cld
xchg
cmpsb
xchg
adc
out
cltd
pop
aam
testb
in
dec
push
adc
sbb
mov
aam
jbe
movsl
jae
stos
add
sbb
enter
and
loop
pop
jp
mov
sti
sbb
xor
jge
or
xchg
movsl
cmpsb
jmp
push
ljmp
xor
jne
push
jp
lods
pop
jne
cmc
lock
mov
clc
in
fisttpl
jae
or
cs
scas
mov
insb
lcall
fwait
cltd
ss
incb
gs
fs
outsb
fsts
test
jb
sub
jecxz
popf
iret
in
jmp
pusha
and
xor
scas
js
mov
test
lock
adc
cmpb
clc
aaa
add
add
cli
imul
fstp
cmp
mov
movsl
sbb
fistpll
mov
insl
in
and
push
jp
mov
jg
adc
outsb
push
scas
mov
rorb
xchg
int
or
sbb
cmp
out
and
call
lret
mov
out
jae
std
cmpsb
push
or
xchg
out
mov
daa
cmpsb
in
fwait
xchg
hlt
cld
shl
pop
lods
pop
xchg
mov
or
jg
jb
xchg
xor
fwait
lahf
pop
or
push
js
push
push
arpl
dec
hlt
in
lret
xchg
pop
mov
stc
or
xchg
enter
lods
or
aas
cmp
mov
mov
push
negl
clc
shrl
push
aam
mov
xor
push
add
jns
test
test
fisttpl
leave
stos
sub
hlt
stc
push
pop
add
ret
dec
mov
orl
loopne
and
adc
jns
jb
xchg
inc
adc
or
xchg
adc
out
aas
cmpl
xchg
jbe
and
pop
ds
popa
dec
pop
ret
ja
rcrb
adc
and
outsl
cmpl
and
adc
xor
lcall
pop
dec
je
xor
sub
ds
mov
inc
and
push
mov
push
mov
pop
lods
in
mov
jge
out
jbe
cmc
push
mov
scas
lret
sbb
inc
mov
pop
cmp
mov
popf
xor
jp
jae
dec
mov
inc
fucomip
and
lahf
inc
jmp
aaa
sbb
push
nop
popf
inc
xor
inc
add
je
sub
test
fs
scas
xor
ror
fstl
jo
push
ja
sub
mov
ret
push
xor
movsb
mov
mov
hlt
fs
push
xchg
sbb
mov
adc
mov
lret
pop
imul
or
sub
out
xor
inc
cmp
xor
subl
rorl
mov
out
xor
shll
push
nop
mov
xlat
mov
mov
mov
add
mov
push
and
lods
dec
lods
add
fwait
pop
inc
cmp
dec
icebp
jo
ljmp
lea
jno
lret
mov
fincstp
mov
out
cmp
cmp
push
cli
and
jecxz
popa
cmp
mov
scas
insb
jbe
and
xlat
inc
aad
popf
sbb
test
test
pop
inc
cwtl
sbb
ror
hlt
sub
inc
jmp
fstpt
mov
jg
fs
and
xchg
xchg
sub
jb
lods
mov
jns
xchg
negl
clc
xchg
enter
add
test
mov
xor
xor
mov
xchg
dec
adc
mov
lahf
std
stos
xor
push
push
cmc
sub
fsubr
cmp
mov
add
icebp
mov
stc
fdiv
mov
pop
cltd
sub
mov
lock
iret
add
repz
xor
sbb
xor
or
mov
sarl
pop
jb
cmp
cmc
mov
jo
sbb
jg
inc
cmc
mov
cmp
and
les
popf
or
pusha
inc
xchg
sti
adc
cmp
jb
adc
es
rol
push
pop
sbb
xchg
mov
or
leave
fisubrl
imul
sti
mov
addr16
int
movsb
cmpsb
pop
lret
popf
adc
dec
cld
insl
sbb
mov
push
mov
jge
add
loopne
xor
test
repnz
inc
jno
cmp
dec
call
push
sbb
mov
insb
dec
ds
inc
mov
fimuls
addb
mov
push
inc
mov
cwtl
mov
xor
lods
sub
add
and
mov
sbb
sub
ret
dec
movsl
sbb
popf
xchg
test
mov
push
push
pop
test
rolb
into
pop
sub
adc
dec
cld
jae
les
cmpsl
lods
push
ret
mov
or
jp
iret
imul
pop
mov
flds
ret
ret
dec
out
pop
mov
out
jne
jmp
xchg
add
and
int3
in
jl
or
ficompl
push
aas
repz
std
dec
sub
jmp
sbb
lods
mov
mov
sbb
adc
jae
es
mov
jge
lock
jp
pop
pop
cli
xchg
and
pop
xor
int3
cmpsl
xor
or
sbb
mov
in
mov
pop
mov
push
enter
shl
mov
lcall
or
movd
sub
adc
rorb
nop
dec
fcomi
gs
imul
in
lcall
mov
mov
movsb
and
sub
clc
jne
fsubrl
fmulp
sub
sub
jb
repnz
mov
mov
lahf
cs
rorb
xchg
aas
call
lret
inc
into
cltd
mov
cmp
jecxz
mov
mov
fsubrl
xchg
insl
into
into
fcoms
aam
mov
jmp
loop
pop
in
pusha
cmpsb
jmp
mov
cmp
sbb
or
jle
repnz
ljmp
popf
mov
mov
pusha
test
pop
mov
or
out
pop
mov
out
jns
clc
scas
mov
rcr
data16
or
sti
adc
pop
push
xchg
notl
addl
clc
sub
js
fstps
nop
and
xor
cmp
scas
fidivrl
dec
jo
sbb
pop
shlb
int3
or
push
loope
sub
jnp
sbb
dec
sbb
lods
adc
mov
add
rcr
inc
xor
std
rcll
inc
jne
iret
lock
fldcw
in
and
cmp
shrl
cli
fsub
push
sub
inc
bnd
outsl
mov
push
enter
pop
jns
sbb
add
shrl
in
or
adc
mov
lods
fcmovu
cmp
dec
dec
mov
pusha
mov
inc
lret
pop
fstpt
inc
ret
push
jl
lods
lahf
cmp
data16
pop
jle
mov
or
hlt
pushf
lds
loope
mov
pop
push
xor
movsb
outsl
pop
test
outsl
aad
lcall
arpl
jns
and
stc
dec
aaa
mov
and
in
fdivl
xor
sub
gs
inc
pusha
mov
mov
and
outsl
arpl
arpl
dec
xchg
clc
outsb
mov
cmp
jne
in
mov
lcall
cmpsl
loopne
fdivs
xor
push
ret
push
mov
cmp
lret
sahf
std
pop
lahf
jge
and
cmp
cmpsl
cltd
push
mov
dec
inc
bound
int
fwait
pop
mov
sbb
divl
roll
insb
sbb
mov
dec
ret
mov
pop
adc
aam
cli
mov
pop
and
jmp
repnz
aam
sbb
ds
sub
mov
shll
inc
notl
jmp
cmpsb
cli
and
jmp
mov
inc
jo
add
xchg
dec
or
mov
jbe
cwtl
mov
andl
divb
xchg
xor
dec
fsubr
daa
mov
cmc
loopne
stos
pop
and
lcall
cmpsb
mov
sub
int3
cmp
je
dec
stos
cmpsl
xchg
ret
scas
mov
and
scas
mov
xlat
sbb
lods
xchg
lods
inc
clc
aad
pusha
and
and
pop
insb
lret
fidivl
and
faddp
push
dec
dec
arpl
sub
rclb
sbb
ja
cmp
pop
pop
jne
mov
test
cmpsl
mov
sbb
pop
xor
sbb
pop
xchg
in
fdiv
mov
inc
addr16
adc
push
filds
xchg
imul
xchg
je
es
outsb
jg
movsb
stc
dec
fisubl
jne
mov
movsl
mov
and
int3
aaa
ret
jae
sbb
mov
or
idivl
ds
push
and
arpl
mov
sbb
xchg
stc
mov
push
jle
sbb
mov
test
js
das
cmpsl
cwtl
out
rcll
mov
inc
and
nop
and
cmpsl
in
cli
es
ficompl
repnz
pushf
pop
push
sbb
adc
xchg
cld
and
lcall
std
xor
dec
mov
jg
add
add
lahf
adc
mov
ficoms
pusha
and
cmp
data16
ss
xchg
xchg
jo
adcl
adc
add
pop
test
adc
push
cwtl
ret
fsubrp
push
jle
cld
imul
push
test
push
stc
test
or
xchg
mov
mov
xchg
mov
in
hlt
inc
dec
mov
cmp
inc
pusha
add
pop
in
fnstsw
pop
jbe
outsl
stos
adc
add
dec
loopne
sub
movsl
aas
sub
mov
inc
inc
or
pusha
xor
mov
cmp
lods
or
push
sub
push
cmpsw
lds
dec
popf
aam
xor
mov
lahf
hlt
sbb
push
lock
sar
test
xlat
mov
inc
push
xchg
dec
inc
jns
xor
mov
ljmp
cmpsb
jmp
es
push
scas
fsubr
mov
test
jno
mov
andnps
xchg
rcrl
test
bound
jle
inc
push
std
inc
pop
out
jl
cwtl
dec
xchg
popa
fbstp
jge
add
pop
mov
arpl
jl
push
fwait
lret
mov
inc
and
mov
xor
ror
sbb
inc
insl
subl
sub
lret
sti
or
negl
mov
push
pop
xchg
pop
mov
adc
push
jge
hlt
push
jae
test
std
dec
loopne
jge
pop
inc
dec
sbb
dec
push
adc
pop
adc
cmp
fstpl
mov
imul
stc
push
mov
aad
cmp
loope
out
fists
inc
xlat
inc
test
mov
add
fdivrl
lahf
out
xchg
jns
xor
jb
dec
jbe
adc
mov
adc
pusha
stos
mov
mov
les
fistpll
std
mov
bound
xor
cmp
mov
sahf
mov
int3
mov
in
lds
stc
adc
lods
imulb
xchg
ds
cld
out
sbb
pop
cmp
mov
imul
xchg
iret
sub
mov
shrb
xchg
or
xlat
mov
lods
jne
xchg
and
out
dec
test
sti
cs
call
adc
aaa
xchg
sbb
jmp
movsb
xchg
pop
mov
lcall
xor
loope
sbb
scas
sub
mov
mov
cmp
xor
mov
shll
int3
nop
xor
aaa
push
test
test
sub
data16
shll
inc
jge
pop
aam
lock
mov
xchg
stc
hlt
ret
lods
loop
aad
arpl
fstps
call
dec
mov
rol
mov
push
adc
movsl
mov
test
inc
test
cmp
repnz
aaa
fs
test
xchg
cmpsl
xor
bnd
andl
push
fisubrs
cwtl
push
push
and
out
pop
scas
push
testl
aad
xor
adc
sub
cld
enter
mov
ljmp
push
ja
cld
inc
iret
aad
mov
into
sbb
mov
sbb
fs
add
push
sbb
popa
push
push
inc
pop
xchg
in
mov
mov
adc
inc
jg
pop
shlb
insb
xchg
or
push
jg
out
mov
scas
mov
shrl
pop
cwtl
jmp
lcall
mov
daa
dec
push
aaa
aad
adc
jmp
sub
sti
xorb
daa
cmp
ljmp
pop
pop
inc
leave
mov
mov
jge
xchg
movsl
decb
inc
cmpb
in
cmp
test
ja
shl
sbb
stos
push
in
jnp
add
cmp
rclb
xchg
std
addr16
xchg
rcr
pusha
push
and
cmpsb
pop
xchg
bound
jle
pusha
in
xor
ja
imul
notb
inc
jb
xor
rclb
loopne
xlat
bound
mov
dec
cmp
dec
shrl
adc
cmp
xchg
or
imul
in
mov
stos
add
fisubrs
js
fsubs
cli
jle
mov
ja
sbb
inc
push
jae
lea
or
inc
jae
sub
lahf
sub
neg
jg
xor
repz
cmpsb
pop
fstpt
gs
jb
test
and
cli
adc
xor
aam
fs
or
std
in
and
hlt
lcall
inc
add
lods
jmp
cmc
mov
scas
bound
outsl
inc
aaa
jecxz
nop
stos
lahf
mov
stos
sub
fs
es
je
and
je
outsl
and
mov
sbb
xor
lahf
adc
addr16
call
jmp
lock
cmc
inc
cld
mov
mov
scas
outsl
pop
repnz
dec
repz
fsin
in
jnp
cltd
bound
push
mov
sub
mov
aaa
mov
ficompl
es
mov
mov
jb
mov
mov
adc
aas
jg
dec
je
int3
pusha
sub
or
inc
pop
mov
pop
stos
push
pusha
negl
mov
daa
xor
dec
mov
cmp
or
cmp
push
scas
mov
daa
test
xchg
add
bound
dec
jno
push
jmp
popa
push
push
mov
std
adc
mov
ret
test
mov
arpl
dec
jecxz
enter
aam
and
fwait
sub
adc
test
xchg
iret
sbb
jb
popf
rclb
out
call
mov
push
les
sti
lods
mov
adc
xchg
adc
xchg
lds
and
cs
sub
mov
cmp
outsl
loope,pn
sbb
outsl
mov
sarb
daa
xchg
xlat
xchg
ja
ja
lds
add
dec
push
pop
add
jbe
rolb
mov
inc
add
lahf
imul
out
loopne
pop
cs
bound
js
pusha
cmp
rcrl
rcrb
xorb
pop
scas
shl
lret
inc
xchg
xor
xchg
mov
or
pop
cmpsl
jp
icebp
sub
cmc
cmpsl
shrb
cld
mov
dec
roll
inc
mov
frstor
or
cmp
adc
mov
xchg
xchg
aaa
cmpsl
into
mov
iret
mov
rorb
mov
and
jp
inc
jle
ja
jp
mov
ss
mov
jne
xchg
and
cli
xor
lods
mov
iret
mov
adc
sub
mov
scas
int
push
mull
out
rolb
cmpl
mov
mov
inc
dec
lods
std
scas
pop
mov
mov
bound
dec
dec
repz
mov
out
dec
mov
dec
push
cmp
cmc
in
jle
stos
or
xor
sbb
stos
enter
add
or
xor
je
arpl
les
adcl
cmp
adc
or
cmp
jbe
inc
push
lods
aaa
jge
insb
push
mov
imul
jmp
or
mov
lcall
loop
jge
cmp
xor
test
or
push
jns
jae
mov
jb
sub
xchg
xchg
roll
lods
ror
das
inc
aaa
jmp
mov
pop
int
sub
cmpb
lcall
inc
js
aas
and
cmp
rclb
jnp
sbb
divb
push
ja
rcl
fcom
or
inc
fs
push
pop
pop
nop
inc
popf
sub
arpl
call
lcall
sahf
fbstp
cltd
mov
fnstsw
jl
jg
mov
dec
pop
mov
push
idiv
inc
xor
cmp
fbld
pop
cld
lods
adc
hlt
cwtl
data16
mov
add
and
into
movsl
mov
in
mov
fisubl
jnp
jae
insb
test
js
or
xchg
cmc
test
dec
cmpsb
inc
and
les
sbb
pop
lods
aad
mov
or
sub
mov
push
jb
and
push
lahf
sub
lods
mov
das
inc
je
inc
jo
jge
add
mov
test
pop
dec
dec
lds
inc
and
sub
rclb
lcall
add
sbb
in
sbb
push
sbb
xlat
lahf
xchg
rclb
push
lahf
and
loope
and
push
push
test
cmp
test
dec
rcr
cmp
mov
sbb
insl
cs
or
imul
idivl
xor
sbb
pop
and
fwait
popf
adc
adc
inc
adc
ljmp
or
add
pop
dec
scas
insb
into
ficoml
and
out
sti
gs
or
popa
lds
test
icebp
adc
mov
cmc
aam
jb
or
inc
pop
mov
or
lds
mov
sbb
outsb
lret
test
pop
mov
lret
or
stos
or
sbb
pop
jmp
loop
lret
bound
xor
loopne
stc
ljmp
fnsave
bound
ret
fwait
cmp
and
int3
negb
lret
aaa
das
stc
cwtl
cli
popf
and
jg
roll
outsb
xchg
jmp
dec
lahf
cmc
aam
cmc
jns
pushf
repz
dec
js
sahf
mov
mov
popf
jecxz
xor
popa
inc
xor
out
sbb
sbb
sbb
cs
add
and
js
push
mov
test
xor
dec
aas
mov
mov
pop
mov
mov
lock
lret
and
xchg
outsb
xchg
xor
mov
mov
call
push
outsl
lods
and
pop
je
add
or
jne
mov
lods
cmp
xchg
sub
add
inc
mov
popf
fdivl
xor
cmpsl
fsubr
mov
stos
sbb
xchg
iret
rep
sub
into
xorl
test
lds
xchg
sub
cmpsl
in
push
or
pop
mov
cmc
loop
jecxz
jno
sbb
je
push
loop
fldl
clc
jne
xchg
popa
dec
mov
inc
jecxz
stos
push
mov
dec
mov
shrb
cmp
mov
fisubrs
cli
enter
scas
loopne
orl
pop
mov
cmp
loop
xchg
cwtl
and
or
mulb
mov
inc
push
call
push
or
insl
sbb
mov
jg
xchg
aad
and
or
iret
aad
cmp
jmp
out
imul
into
push
mov
scas
mov
xchg
addb
push
sbb
inc
mov
xlat
adc
dec
mov
pop
stos
cwtl
push
mov
pop
adc
outsb
lea
test
mov
adc
or
or
mov
lret
scas
jb
mov
and
es
mov
sahf
out
repz
daa
dec
adc
loop
sub
add
outsl
add
nop
push
cmp
add
and
in
cmp
pop
js
mov
sub
inc
inc
push
cmovle
push
daa
scas
or
push
call
jno
xchg
sbb
jno
add
das
xchg
jb
mov
rorb
add
mov
xchg
loop
jecxz
mov
jno
mulb
cmp
mov
or
push
xlat
fcompl
cmp
sbb
insl
mov
repz
movsl
sti
jge
sbb
mov
scas
pop
jno
push
jp
cmp
pop
jmp
rorl
inc
enter
imul
imul
push
sbb
int3
cmp
out
outsl
fwait
lret
and
sub
jno
mov
fdivs
call
jbe
rol
dec
sub
cli
mov
movb
mov
mov
inc
pop
adc
fcoml
outsb
and
cmp
in
dec
jmp
addr16
xchg
xchg
ror
lret
jo
mov
out
andnps
js
push
cmp
jp
fimull
rcr
jle
fucomp
jge
outsb
adc
fwait
pop
or
mov
hlt
add
push
idivb
push
inc
popa
in
fwait
dec
mov
aas
adc
xchg
dec
pop
sarb
adc
subl
scas
push
dec
and
movsl
cld
fcom
icebp
sub
inc
lds
inc
push
cmc
xlat
mov
lahf
mov
gs
sbb
pop
mov
sbb
test
test
inc
inc
adc
push
decb
jg
mov
sub
cmp
sub
scas
aaa
jo
popf
mov
lret
repz
insb
sbb
mov
mov
jge
into
fimuls
xchg
idiv
call
lcall
push
jecxz
jne
cmp
call
es
lcall
push
jmp
ljmp
xor
ficoms
xchg
cmpsl
daa
pushf
pop
mov
loop
or
and
pushf
cmc
ficompl
out
clc
inc
fldt
roll
vpcmpgtw
jne
repnz
fmull
loope
mov
jo
scas
or
pop
and
jmp
call
jmp
mov
ficoml
mov
or
in
outsb
outsl
lcall
push
imul
pushf
aaa
test
sbb
push
jb
and
jmp
push
test
aas
or
loop
mov
pop
inc
icebp
ret
out
lods
pcmpeqd
lock
jp
fldt
lods
mov
insl
pop
add
pop
cltd
mov
mov
inc
add
scas
jbe
in
cmpsl
sbb
xor
aad
jle
jne
mov
ljmp
dec
sbb
lds
xor
xor
inc
mov
daa
add
sub
xchg
lret
js
sar
es
dec
mov
ror
lock
xlat
lods
jae
pop
imul
sbb
add
push
rol
pop
push
call
mov
out
pop
inc
test
sarb
data16
mov
stos
dec
cmpps
mov
xlat
lds
pushf
mov
mov
and
add
adc
jno
arpl
xchg
bound
and
or
pushf
fs
jne
lret
inc
inc
cltd
outsl
adc
mov
xor
add
push
pop
pop
loop
jecxz
icebp
ret
jbe
add
push
shll
fwait
push
push
fmull
inc
jnp
shl
push
call
out
or
pop
subl
sub
call
push
dec
xchg
insl
andb
fld
pop
cmp
mov
jle
mov
push
fistpl
ret
bound
push
in
mov
push
push
mov
je
mov
xor
je
not
pop
pop
mov
push
call
xchg
lock
inc
mov
cmp
in
sbb
cmp
and
sub
or
fisubs
dec
clc
rcrb
dec
sub
push
push
pop
out
cltd
popa
sar
loop
out
int3
loopne
test
jne
adc
int
fiaddl
cmp
sarb
inc
sbb
mov
adc
repz
mov
jne
jge
or
push
hlt
inc
test
and
cmp
inc
add
or
xchg
movsl
arpl
clc
inc
call
jb
add
ret
or
daa
and
jl
and
cmpsl
fs
aad
mov
nop
dec
movsb
sub
leave
out
push
add
sub
pop
lock
rcrb
in
mov
aam
mov
xchg
or
pop
fsubrs
les
aas
pop
sub
out
ljmp
mov
fisubs
insb
adc
test
cmp
fdiv
or
repnz
insl
into
scas
xor
stos
scas
xchg
or
or
push
pop
jl
mov
int3
scas
out
mov
negl
sbb
xchg
sub
dec
pushf
xchg
sub
fsubl
in
outsl
mov
xor
push
or
test
std
mov
das
or
push
stc
xlat
sub
or
addr16
loop
int3
xor
aam
cmp
fidivs
xchg
pushf
repnz
mov
stos
jecxz
dec
mov
or
jge
andl
enter
int3
push
mov
cmp
nop
aaa
cmp
pop
inc
adcl
out
sub
test
movsb
xor
lods
popl
fcoml
xchg
jmp
pop
iret
aad
aam
jl
and
xchg
cmpb
xchg
imul
ss
sub
cmp
lods
inc
jb
and
dec
cld
mov
scas
dec
xchg
call
sbb
dec
divl
adc
cli
sub
ret
clc
in
cmpsb
dec
jp
push
insl
rcll
mov
push
adcb
sub
movsl
loopne
mov
js
stos
arpl
sub
js
mov
jbe
add
push
inc
push
pop
cmp
inc
or
cmpsb
aas
arpl
push
jae
aam
fwait
mov
add
pop
jmp
jns
push
test
xor
sbb
bound
mov
jp
mov
sti
es
mov
mov
cmp
mov
sub
mov
sbbb
fwait
sub
mov
movsl
jge
out
cmpb
clc
and
sbb
ljmp
sub
out
iret
fcomp
mov
aad
mov
pop
out
aam
add
rcr
out
lock
mov
fbld
out
ret
xchg
push
dec
in
xchg
pop
sbb
rcrl
mov
jmp
cltd
inc
jp
stos
dec
fistpll
and
and
xlat
test
jl
and
sub
in
dec
lds
fsubl
jmp
xor
mov
jp
sbb
fcomps
push
ljmp
je
vminsd
aad
cmp
mov
sbb
scas
add
cld
leave
out
leave
pop
out
addr16
xchg
jge
adc
test
push
das
xorb
aad
mov
adc
or
adc
test
inc
jnp
loop
adc
jb
test
fs
xchg
and
xor
jp
add
push
adc
stc
fsubl
scas
push
jns
mov
stc
jmp
xchg
fsub
into
mov
pop
add
enter
and
cltd
cli
int3
ss
add
mov
mov
mov
jle
mov
fucomi
pop
movb
js
push
mov
negb
xchg
and
mov
rcl
hlt
mov
ds
cld
and
dec
cmp
fdivrs
add
add
pushl
jmp
push
call
jb
inc
inc
int
jnp
sbb
rcrl
add
js
xor
test
mov
and
xchg
arpl
std
xchg
into
lea
mov
aaa
lods
jnp
gs
push
push
call
fwait
adc
rsm
sub
adc
clc
sbbl
scas
lret
shl
repnz
xor
push
mov
icebp
mov
push
pop
mov
dec
push
jns
xor
pop
dec
or
icebp
sub
pop
sbbl
lea
aaa
sarl
jno
test
aas
shlb
add
add
imul
insb
notl
aad
mov
inc
push
adc
rol
push
add
gs
lock
arpl
aam
pop
aaa
mov
ss
and
mov
mov
cmp
dec
orb
inc
cwtl
scas
adc
sbb
jnp
insl
or
dec
addr16
stc
in
mov
pop
mov
inc
jecxz
push
sbb
pop
int
outsb
int
insl
pop
fisubs
sbb
aaa
adcl
add
inc
and
cmc
sti
adc
int
sbb
dec
test
sbb
adc
imul
sbb
test
push
and
mov
sti
imul
icebp
push
push
push
cmp
ds
xor
adc
pop
jmp
in
mov
roll
xor
pop
adc
fsubs
leave
das
push
and
aad
dec
out
nop
push
mov
pop
mov
es
mov
mov
adc
xor
mov
lret
pop
popl
adc
cmp
pop
lahf
push
jo
push
and
mov
gs
xchg
out
inc
sbb
inc
pop
lret
dec
loope
scas
pop
cwtl
sub
daa
lds
inc
pop
or
cmc
xchg
in
sbb
les
mov
push
pusha
int
es
mov
sub
fs
sub
add
pop
push
add
pop
jmp
inc
xchg
sub
xor
sbb
out
cmp
sbb
jne
pop
ficoms
xor
adc
sbb
add
repz
pop
xchg
and
cmp
xorl
mov
xchg
push
popa
jmp
addr16
and
sub
sbb
out
int
adc
sub
xchg
push
hlt
push
shll
cmpsb
int3
cmc
rcrb
loope
clc
orb
push
add
jbe
add
xor
popf
cmp
cmp
inc
xor
out
sub
mov
aaa
out
outsb
in
push
call
and
and
xchg
xchg
mov
and
sub
xor
loop
fistl
arpl
push
pop
mov
lods
test
xor
adc
stos
lods
jno
xchg
xchg
in
shr
jbe
cmp
jge
dec
les
sbb
int
or
jb
inc
adc
stos
in
lret
mov
mov
xor
dec
ds
adc
pop
adc
and
inc
addr16
adc
push
mov
clc
arpl
pusha
xchg
sbb
dec
xor
mov
add
fistps
dec
sarl
or
rsm
mov
push
jbe
mov
xchg
cmpsl
or
pop
inc
int
mov
lret
imul
add
imul
push
add
push
mov
lahf
mov
enter
xchg
lock
or
cmp
fimuls
cld
or
hlt
xchg
xchg
dec
push
movb
lret
xor
fmuls
lea
mov
mov
pop
fisttps
cmp
pop
xchg
sbb
loop
jbe
push
lcall
adc
xchg
leave
push
in
push
xchg
jp
pusha
in
mov
or
mov
push
mov
shr
mov
aam
adc
fistps
jae
lods
pop
dec
into
mov
push
lret
aam
out
ds
sub
or
mov
mov
arpl
jmp
cmp
cmpsl
fcom
adc
lret
stos
arpl
mov
sbb
scas
sbb
mov
push
push
gs
or
aas
jle
nop
loope
sub
std
in
push
xor
int3
test
cmpsl
xchg
or
lahf
jno
pop
mov
mov
or
push
outsl
shrl
out
add
mov
mov
nop
xchg
inc
xchg
inc
imul
pushl
xor
pop
pop
loop
jecxz
fs
sub
cmpl
jmp
mov
jle
or
mov
or
mov
sub
push
repz
jbe
xor
dec
repnz
insb
jg
jg
lea
insl
popf
aad
lret
pop
push
fwait
scas
cmp
and
loop
imul
lea
aam
fisttpll
clc
sbb
mov
into
and
movsl
hlt
xor
push
mov
inc
js
push
add
loop
jecxz
movsb
fcmovu
cmp
stos
add
lret
or
stos
fildl
dec
dec
cmpsb
or
and
pushf
push
je
mov
push
sbb
sub
adc
add
lock
and
das
mov
cmp
push
call
mov
adc
test
enter
cli
and
cwtl
outsb
je
xchg
lods
xchg
out
xor
cmp
pop
shll
insb
pop
dec
bound
cmp
and
or
leave
fistps
mulb
sub
rorb
repz
mov
cmp
adc
les
xchg
sbb
lock
mov
sahf
mov
cld
out
loope
loope
std
les
in
xor
icebp
jbe
push
dec
xor
push
fisubrl
cltd
dec
add
pop
int3
mov
inc
adc
jbe
cmp
inc
pop
or
test
in
cmp
add
sbb
sub
enter
and
jl
insl
insl
aad
add
test
push
popl
xchg
cmp
jl
dec
inc
mov
jno
cmp
sbbb
or
cmp
push
jmp
stos
dec
je
inc
mov
dec
clc
clc
stc
shlb
loope
icebp
arpl
cs
shl
sbb
mov
test
pop
cmc
mov
jnp
in
stos
mov
add
push
and
adc
adc
das
push
test
cld
and
mov
and
fsincos
xor
cld
dec
aam
dec
test
push
mov
test
sub
mov
sbbb
imull
fdivr
mov
xchg
out
int3
cli
shll
dec
fwait
xchg
out
or
sub
cmpsl
push
push
xor
pop
and
insb
dec
std
mov
jae
mov
test
sub
aam
inc
push
andb
add
mov
sbb
mov
and
addr16
mov
mov
psubb
or
adc
xchg
mov
xchg
insb
xor
stos
imul
cmpsl
cmpl
xchg
cmpsb
or
xor
jno
dec
inc
sti
inc
lahf
push
incb
jecxz
xlat
cld
hlt
and
add
lods
dec
cmpb
fstl
xor
lret
stos
mov
or
outsb
mov
js
jb
dec
mov
cs
shrb
xchg
add
out
sbb
cmp
test
ss
out
scas
call
push
and
xchg
les
mov
out
lcall
fxch
test
insb
xor
xor
aas
jno
sub
mov
repnz
add
pop
push
cld
fwait
repz
mov
push
js
push
pop
test
test
and
pop
xchg
int3
call
movsl
jl
lods
push
mov
jno
lcall
in
sub
pop
push
mov
jecxz
sbb
aas
inc
mov
mov
cmp
cmpsb
ret
iret
mov
push
pop
stos
push
pop
pop
push
call
mov
cmp
int3
int3
push
adc
cltd
stos
flds
xor
sbb
rolb
cli
pop
push
imul
jecxz
fwait
push
call
push
xchg
sub
pop
mov
gs
mov
sub
insl
cmp
call
rorl
int3
cld
adc
mov
lods
xchg
pushf
rcrb
cltd
sbb
mov
fsubp
push
pusha
ds
and
in
inc
fistl
adcl
es
imul
andl
mov
sub
mov
arpl
mov
dec
cmp
pop
pop
mov
sti
sbb
fstps
cmpsb
sbb
xor
sbb
push
loopne
push
pop
jp
cltd
fistl
xchg
ss
sbb
loop
into
mov
arpl
sti
jo
mov
sbb
mov
jae
add
notl
cmp
sub
fcom
out
xor
adc
call
pop
xor
jno
pushw
jb
pushf
clc
adc
fcomps
sbb
mov
lock
jecxz
add
test
andb
push
add
push
pop
daa
out
cmp
je
pop
pop
xchg
jb
adc
or
pushf
insl
pop
in
notl
jg
xchg
and
sbbl
outsb
imul
das
or
and
cld
std
jae
lock
enter
mov
xor
lds
jne
cmpsb
mov
push
xchg
mov
adc
cmp
jb
xchg
sbb
add
daa
or
cmpsl
xchg
add
repnz
fwait
stos
fstps
std
cmp
stos
push
aam
sti
adc
xlat
mov
loop
stos
lock
jmp
lds
sub
or
sub
xchg
sub
mov
jmp
mov
inc
pop
in
mov
lds
stos
and
les
cmp
sub
rcl
push
sbb
mov
popf
and
sub
jno
dec
sub
mov
daa
idivl
pop
jg
and
sbb
jbe
addb
adc
movsb
pop
sbbl
popf
push
xor
mov
dec
scas
adc
idivl
xor
ret
jmp
mov
mov
mov
aaa
movsb
int3
sub
mov
in
cmpsb
ret
add
xchg
push
hlt
pop
in
aaa
sub
arpl
adc
mov
ror
jmp
pop
mov
repnz
in
pop
mov
and
dec
repnz
mov
mov
hlt
xlat
shrl
sub
sti
andb
cli
mov
mov
lock
les
inc
push
call
gs
push
imul
pop
ret
inc
xor
lods
sar
push
push
inc
fcoms
int
push
xor
jo
lcall
nop
xor
inc
and
in
in
jecxz
add
adc
lods
test
mov
xor
movsl
xchg
lods
sbb
or
orb
mov
mov
pop
pop
dec
jne
loop
jecxz
cmp
adc
cmpsl
dec
negl
sub
inc
pop
add
jae
fwait
in
cld
inc
push
call
std
negl
sbb
lock
cmpsb
addr16
lret
mov
test
loop
xor
mov
cli
push
dec
cmc
xchg
icebp
dec
lret
cmpsl
out
icebp
ja
insl
adc
jno
jl
pusha
sub
sti
inc
mov
and
pop
mov
mov
add
push
je
loope
cs
pop
lods
xchg
sbbb
and
or
dec
inc
or
out
xlat
mov
push
or
mov
test
inc
fs
mov
mov
xor
ds
test
sbb
cwtl
mov
or
mov
orb
adc
push
mov
push
push
jmp
sub
mov
lods
cmp
das
jl
pop
mov
popf
scas
test
ss
lret
jo
or
lret
push
adc
outsw
in
xor
cmpsw
xchg
cmovne
dec
jecxz
pop
sub
sub
inc
rorb
scas
arpl
test
in
xchg
cmp
bound
mov
mov
in
mov
push
sbb
mov
xchg
mov
cmp
test
rcr
sahf
sbbl
dec
add
mov
or
sub
add
xchg
add
lods
xchg
push
dec
sahf
mov
sub
fcoml
jl
scas
push
mov
xchg
push
mov
add
and
scas
mov
dec
push
inc
mov
fmuls
jge
movsb
dec
ja
dec
scas
add
ljmp
aaa
and
sbb
cmp
add
or
ret
adc
sahf
mov
aam
sub
mov
test
aad
ss
mov
xlat
pop
enter
sub
xor
outsb
and
leave
mov
fs
push
jge
xchg
pop
mov
cld
xor
ret
sbbl
xchg
xchg
in
dec
or
or
ror
es
inc
cmp
jbe
mov
dec
pop
sbb
je
mov
adc
pop
data16
sub
mov
or
stos
rorb
lcall
jnp
fisubrs
inc
inc
and
inc
sarl
pop
push
ss
and
leave
movb
ret
add
dec
push
pop
aaa
filds
loope
icebp
aas
xchg
push
fs
subl
xor
lock
js
divl
xor
fwait
jnp
inc
sahf
cs
adc
bound
test
cmp
cs
add
call
sbbb
mov
addr16
mov
setg
mov
sbb
cli
bound
arpl
imul
ficompl
push
xorb
mov
dec
jo
push
xor
push
andl
adc
test
mov
daa
mov
ss
hlt
push
lods
popf
jge
std
orl
sahf
clc
push
mov
dec
movsl
mov
inc
inc
popf
lret
jo
cmp
push
aad
mov
clc
rcr
xchg
sahf
ja
lock
and
addr16
mov
sub
mov
mov
andl
repnz
ja
push
leave
inc
add
pop
jmp
pusha
xor
inc
outsl
movsb
jg
jbe
mov
push
pop
cmp
or
push
lock
lret
mov
out
adc
cmp
mull
mov
cmpsb
push
fcmovnu
xchg
push
jmp
mov
insl
jl
xlat
sbb
mov
mov
std
es
out
pop
dec
jbe
push
add
shrl
add
add
and
mov
push
sbb
xchg
mov
inc
mov
jns
dec
cli
and
sbb
movsl
inc
leave
jge
jns
cmpsl
loope
sbb
in
pop
fldl
call
out
cmpsl
sub
cli
arpl
cmpsb
roll
mov
sbb
scas
xchg
shll
cwtl
mov
inc
imul
xchg
or
mov
jo
xchg
xchg
xor
lret
test
ss
cmp
enter
cmp
repz
pop
shll
addr16
ds
xchg
arpl
ja
cmp
push
sub
xchg
sbb
popf
je
push
lods
pop
xchg
out
rcll
loop
push
and
notl
and
sub
data16
mov
mov
outsb
xchg
cmpsl
cs
mov
std
ret
mov
or
mov
xchg
dec
or
adcl
mov
pop
les
adc
inc
jp
fidivrl
cltd
dec
sub
inc
loopne
icebp
push
and
add
pushf
jecxz
adc
cli
fists
leave
or
pop
xchg
or
inc
mov
push
sti
mov
xor
jbe
sbb
push
jne
push
ret
xchg
add
iret
jb
push
cmp
ss
and
lcall
je
inc
inc
cmp
push
or
xchg
dec
or
and
mov
lds
inc
sahf
inc
popa
add
mov
pop
leave
cltd
add
jg
mov
out
mov
cli
pop
out
out
mov
add
push
lret
insl
mov
pop
notl
pop
push
fildl
repnz
xchg
rolb
adc
xor
clc
dec
xchg
cmpsl
fstenv
adc
flds
or
imul
xchg
mov
sub
cwtl
xlat
mov
inc
sub
imul
add
sti
adc
leave
sub
insl
xor
inc
jp
pop
mov
cmpsl
sub
cmp
shll
sbb
xrelease
push
arpl
xor
and
imul
jg
push
push
je
or
popa
icebp
mov
sbb
mov
sub
inc
mov
popa
mov
rcrl
mov
hlt
xchg
lcall
int
dec
sbb
ja
pop
scas
jle
pop
pusha
add
pop
jge
inc
sarl
adc
mov
sarb
sbb
insb
je
jnp
mov
test
push
out
pop
sub
nop
into
loope
mov
js
dec
data16
dec
add
addl
pop
sahf
pop
or
test
jns
inc
lods
mov
push
push
adc
xlat
sub
or
mov
adc
cmpsb
mov
adc
mov
jge
sbb
add
add
mov
xchg
sar
jg
mov
xchg
jne
jmp
jb
test
mov
cmp
lea
dec
rcl
mov
sub
add
xchg
cmpsb
xor
and
repz
lock
out
cmp
sub
push
shrl
mov
insb
dec
leave
pop
cld
push
xchg
and
sub
popa
sub
xor
lock
mov
mov
shrl
je
iret
push
add
lret
push
and
jne
pop
das
clc
dec
jae
fimull
cmp
js
xor
in
push
xor
cmp
xchg
cmp
push
cmp
jg
dec
sbb
xchg
sbb
call
imul
mov
add
pushf
cld
fsub
and
jl
aad
mov
push
inc
icebp
pop
mov
add
xchg
repnz
in
push
fsubrl
dec
outsl
sbb
add
add
cld
mov
jbe
mov
movb
ja
push
call
or
jmp
sbb
sub
add
push
mov
push
or
es
cltd
jg
mov
xlat
push
cmp
jmp
std
mov
xchg
sub
pop
ret
xchg
stos
push
ret
jno
test
cld
out
cld
push
js
scas
shll
dec
rorl
jns,pn
shll
insl
in
push
shufps
xchg
or
ss
shrl
and
incb
lcall
mov
cmc
xchg
or
aaa
rolb
sub
jle
push
test
pop
addl
call
push
pop
mov
stos
sbb
outsl
fnsave
xor
pop
pop
inc
mov
mov
mov
push
out
in
cmp
xor
inc
dec
pop
jge
loopne
dec
repz
inc
mov
fistl
test
test
jb
ficomps
dec
lds
push
insl
faddl
stc
test
xrelease
mov
or
mov
stos
rorl
xchg
jnp
lcall
jmp
fcmove
shll
das
cld
insl
jle
inc
pop
pop
add
in
iret
int
sbb
push
dec
or
or
push
jecxz
pusha
sbb
mov
jne
insl
gs
iret
inc
ret
add
cmp
dec
adc
sahf
mov
imul
cmc
adc
fcoml
cmpsl
aam
stos
fisttps
jp
decl
jns
ret
sub
jnp
mov
pusha
xchg
sbb
push
sahf
lds
loopne
fdiv
xor
fwait
dec
pop
gs
mov
lea
push
push
push
fiadds
adc
mov
sub
js
xchg
mov
outsl
lods
lods
sub
mov
ror
js
cmp
int
scas
cmp
scas
stos
add
add
cmp
jle
gs
cld
test
dec
pusha
test
in
bound
lods
sub
fildll
shl
adc
jne
pop
xor
leave
mov
cmpsb
xchg
or
adc
add
pop
cmp
subl
shlb
xchg
xchg
insl
in
pop
or
repnz
cli
cld
enter
in
push
es
or
cmpsb
lahf
sbb
push
push
js
fld
rol
or
xchg
out
or
sbb
sub
jno
icebp
push
mov
push
xchg
push
adc
xor
mov
cmp
xor
or
mov
sub
repz
dec
mov
mov
xchg
push
push
cmp
and
mov
jmp
ja
pop
add
cmp
rcll
loope
jb
lret
xor
aaa
mov
xchg
imul
subb
iret
push
fadds
fcoms
in
insb
dec
mov
sbb
sub
jge
cmp
aad
lods
pop
cmc
push
cmp
popa
std
sarb
xchg
in
jmp
adc
shlb
push
sub
pop
mov
ret
test
jne
pop
sub
pushf
in
adc
ds
daa
adc
cwtl
loopne
adc
cwtl
or
ja
mov
jae
repz
jecxz
lods
mov
add
jno
loope
adc
in
pop
repnz
adc
sbb
push
jbe
cli
jnp
push
or
fdiv
fstl
cmpsl
and
out
mov
xor
in
add
pop
addl
movsb
out
mov
sub
sbb
xor
icebp
cmc
jb
push
int
mov
in
mov
cmpsb
insl
lock
in
mov
lea
sub
jmp
popa
iret
mov
xchg
iret
aad
xchg
es
ljmp
dec
hlt
xchg
loopne
cmp
fsubl
cmp
pop
xchg
and
das
das
sbb
jl
enter
dec
push
xchg
stos
xchg
cmp
or
jne
jb
mov
pop
fmuls
pop
mov
xor
jg
loop
xchg
fcompl
pop
ret
lods
imul
fidivrs
stos
lcall
aas
pusha
mov
xlat
push
ds
cmp
sbb
dec
in
push
sub
jp
pop
rcrb
mov
and
jnp
sbb
lods
cmc
xorb
xchg
cld
lcall
gs
cmp
inc
sub
repnz
sub
pushf
jb
jnp
xchg
push
pop
push
dec
cmp
push
enter
adc
xlat
sahf
shll
cmp
mov
hlt
insw
jno
and
jg
stc
dec
xchg
sub
fimull
in
fistps
inc
repnz
fwait
das
aaa
dec
mov
xchg
cmp
jge
aas
mov
orb
fs
fsubrp
icebp
mov
rol
les
ret
repz
js
cltd
pop
and
or
test
mov
insb
rcrl
sub
addr16
adc
pop
inc
fimull
xor
push
mov
insl
and
xchg
bound
jae
push
fisubrs
add
and
test
in
dec
dec
jno
les
jp
ja
pop
xchg
dec
xchg
ret
mov
sub
dec
pusha
insb
cmp
out
cld
pop
aam
ret
xchg
xor
sahf
and
lret
shll
mov
fs
cli
inc
lahf
sub
jno
adc
popa
es
movsb
insl
rcr
dec
lahf
xchg
movsb
daa
pop
pop
push
mov
in
lret
add
in
jne
es
jl
push
test
mov
cmp
dec
shl
mov
sti
insl
xchg
or
lret
movsl
in
mov
inc
mov
inc
hlt
mov
je
add
add
pop
call
adc
jge
das
pop
push
sahf
addl
and
ljmp
lds
nop
xor
rcl
pop
pop
cmp
loopne
lods
cmpsb
lds
lret
jge
pop
pop
sti
xorb
ror
or
jp
push
scas
mov
or
mov
dec
add
movsb
ds
out
xchg
arpl
jbe
ret
mov
adc
test
out
gs
jo
nop
adc
pushf
enter
movsb
xorb
add
or
adc
test
roll
sahf
jns
in
test
mov
jmp
test
cmpsb
ljmp
out
outsl
fistpll
or
in
push
stc
or
or
std
and
xor
xchg
popa
push
sbb
test
add
jmp
iret
or
and
push
imul
pusha
pop
jne
xor
gs
mov
imul
sti
test
push
jns
mov
inc
sub
jmp
dec
inc
or
mov
push
insb
subb
jns
lret
sub
inc
pop
mov
test
int3
sub
test
stos
sbb
daa
lcall
test
dec
and
scas
xchg
push
stos
in
xchg
loopne
push
jae
cwtl
cmp
push
popa
add
std
sbb
shrl
cld
leave
std
pop
or
loop
mov
lock
lock
cmp
mov
repz
xor
adc
mov
inc
es
push
iret
xor
outsl
sbb
dec
inc
push
push
sub
vmovhps
xor
jmp
jg
cmp
xorl
nop
imul
test
mov
aad
imul
inc
popf
pop
lds
mov
xor
fisttpll
paddb
shll
push
arpl
cli
out
push
mov
bnd
cmpsl
cmpsl
or
adc
jecxz
test
iret
push
sarl
pop
cmp
push
add
scas
shl
cmpsb
mov
popa
jae
sarl
add
jmp
insb
aaa
into
jecxz
cmpb
mov
in
inc
insb
xchg
cld
push
in
mov
xchg
repz
leave
xchg
push
inc
sbb
rclb
push
hlt
ja
pop
mov
shlb
lods
mov
mov
cs
lea
ss
cli
xor
jnp
decl
cmp
sbb
mov
outsl
in
fistpl
aam
pop
scas
call
sbb
pop
inc
adc
mov
sbb
xor
bound
cmpsl
mov
xlat
jecxz
mov
pand
pop
add
sub
add
xor
ret
ret
pop
jae
xchg
pop
and
dec
xchg
ja
ficoms
int
mov
movsl
push
pop
insb
sahf
je
ljmp
xchg
in
xchg
mov
frstor
sti
lds
loop
inc
or
decl
test
push
push
lods
pushf
cld
jg
cmc
ret
sbb
mov
jg
sub
sub
sti
into
mov
rcll
xchg
or
xchg
adc
pop
dec
xchg
xor
add
push
push
and
out
or
jle
inc
fdivrl
icebp
pop
jne
jne
sub
lods
push
hlt
in
insl
xchg
sbb
leave
cmp
xchg
xchg
mov
repnz
test
cwtl
inc
jecxz
ljmp
add
jae
movsl
and
adc
testl
mov
add
mov
es
jmp
mov
and
bound
xor
push
dec
leave
jno
cld
das
and
decb
sbb
and
xor
push
repnz
andb
aas
jo
shl
mov
adcl
addr16
jnp
sub
iret
lret
pop
or
cmpsb
add
mov
outsb
out
push
dec
out
cmp
pop
fsubs
mov
adc
fnstcw
xor
adc
mov
pop
xor
loope
iret
rorb
and
pusha
fisubrs
mov
cli
pusha
dec
pop
sbb
or
cli
push
jne
mov
dec
sbb
mov
lcall
imul
and
or
lock
pop
push
rcrl
sbb
test
or
icebp
sbb
cmp
imul
dec
or
cltd
xchg
fimull
pusha
mull
adc
push
scas
sahf
sbb
pop
pushf
fisubrl
pcmpgtw
fwait
push
sub
mov
jno
int
or
lea
xor
xchg
out
push
push
sub
mov
in
int
mov
fs
sahf
loopne
xchg
mov
jge
test
mov
fcmovne
mov
nop
in
mov
jmp
push
lods
mov
adc
cmp
addl
cmpsb
jo
cmp
les
mov
jmp
mov
jmp
push
sbb
fcompl
mov
pusha
data16
jo
dec
inc
mov
shl
cwtl
adc
xchg
sbb
cwtl
in
and
mov
add
push
les
push
mov
adc
xchg
mov
inc
idiv
and
jmp
test
xchg
xchg
inc
mov
xlat
outsb
in
sbb
inc
sbb
cmpsl
outsb
test
mov
in
cli
pop
aaa
adc
sarl
jl
add
idivb
and
ror
pop
cld
fsubrl
sbb
aad
inc
xchg
cmpb
add
aas
sti
lock
je
mov
daa
sbb
jne
lods
xchg
cmp
imul
shl
in
push
mov
dec
add
bound
out
xor
cmp
add
add
in
mov
outsl
fs
fsincos
jmp
add
dec
adc
push
mov
fistpll
call
sbb
incb
jl
add
imul
and
popa
xor
pop
or
adc
push
push
cmp
push
shrb
idivl
jae
inc
aas
push
sti
xchg
sub
js
in
add
xlat
push
jns
inc
mov
adc
clc
fisttpll
push
push
data16
aaa
ss
repz
mov
push
push
gs
rclb
pushf
addl
dec
xor
rorl
dec
sub
push
bound
rcrb
and
xchg
dec
mov
insl
mov
mov
pop
push
inc
pop
pusha
and
scas
sub
pop
push
std
mov
sbb
xor
jo
pop
inc
xchg
mov
insl
add
addb
fwait
es
mov
sbb
xor
add
xchg
mov
inc
sti
pop
push
jg
cmpsb
aam
jmp
out
faddp
xchg
pop
xchg
jl
imul
push
push
je
insb
mov
rclb
leave
push
push
adc
xor
push
fwait
divb
and
ds
ss
xchg
aad
cmpb
pop
pop
add
add
negl
call
outsb
jp
stos
cmp
aad
cmpsl
pop
cltd
xor
fstl
mov
xor
push
jecxz
outsl
inc
fsubrs
mov
jl
cmp
movsb
jae
ss
mov
shll
push
cmp
add
mov
mov
mov
leave
or
scas
shl
popa
lods
or
nop
jle
out
jae
sub
out
inc
jae
call
rclb
push
sbb
imul
cld
cs
test
out
xor
in
xchg
push
lock
outsb
pop
xor
sub
lahf
test
add
bound
mov
stc
mov
and
and
ss
insb
mov
pushf
cmp
int
xchg
test
pop
js
mov
dec
int
mov
movsl
mov
or
fwait
iret
inc
test
mov
mov
in
andl
mov
aad
hlt
test
shl
roll
stc
sub
mov
or
imul
pop
pop
cmp
js
jg
add
test
test
ret
jbe
out
inc
inc
xchg
and
out
ja
out
jae
cld
adc
cltd
imul
mov
insb
xor
sbb
mov
xor
sahf
lock
call
and
shrb
push
inc
cmp
gs
mov
into
ljmp
dec
int3
js
negb
fbld
les
or
jbe
lret
mov
test
daa
mov
bound
aam
inc
pop
mov
test
inc
and
inc
mov
rcr
das
cld
or
testl
sbb
mov
scas
xchg
xor
xchg
aas
dec
imul
push
and
adc
mov
test
push
mov
adc
jb
sbb
or
lods
mov
test
mov
sub
shrb
xchg
pop
pop
xchg
shlb
cli
arpl
dec
call
mov
mov
addb
xchg
jmp
lret
xchg
out
or
stos
into
loopne
xchg
xor
dec
jl
lret
aaa
call
mov
xchg
add
cmpsl
rcrl
mov
jmp
rolb
push
lcall
pushw
dec
popa
mov
and
or
es
nop
loopne
cmp
nop
iret
jb
call
ret
push
movsl
fld
xor
add
cltd
pop
jg
lea
jno
shlb
je
out
sbb
bound
aam
jno
jns
leave
adc
xor
mov
cmp
adc
fcmovbe
add
stc
adc
insl
dec
inc
add
jns
push
fstpl
push
int3
enter
xchg
sbb
or
addr16
loop
std
sti
aaa
mov
cmpsb
push
outsw
ja
out
out
std
xchg
mov
mov
cmp
test
or
push
jne
int
sti
repz
out
inc
dec
cmp
inc
into
lahf
test
fnstsw
lds
mov
mov
mov
mov
add
push
test
or
outsb
xor
jle
lret
loopne
push
push
lcall
inc
repz
mov
pop
daa
sbb
scas
test
rorb
mov
jae
call
out
repz
loopne
setl
addb
jl
jl
mov
or
mov
jae
arpl
adc
in
sti
cld
xlat
push
push
arpl
in
loop
jg
mov
xor
jg
in
inc
rcl
std
out
push
test
cmp
movsb
or
jmp
sbb
xchg
lea
inc
out
mov
push
inc
lret
add
in
mov
adc
lret
jecxz
cmp
aad
in
test
ss
es
jne
dec
fsubr
in
cmc
stc
popa
add
mov
xor
lret
pop
inc
inc
fmull
mov
sbb
dec
push
fistps
call
xchg
jnp
roll
xchg
jo
cmp
mov
icebp
or
cmovbe
popf
and
bound
push
enter
and
sub
push
popa
or
jo
jns
iret
push
test
sarb
fistl
add
testb
sbb
adc
mov
jnp
pop
loope
iret
inc
pushf
lret
cltd
dec
cmp
xor
xchg
cmc
clc
add
in
outsl
mov
mov
int
aaa
sbb
mov
cmpsl
mov
jno
test
ret
sbb
xchg
cltd
mov
add
lods
popa
les
pop
gs
mov
xor
pop
aaa
lret
mov
dec
inc
jg
nop
lahf
leave
mov
fisubs
insb
movsb
jl
aas
popa
adc
add
push
scas
pop
xchg
arpl
repz
mov
loop
enter
or
test
dec
pop
or
cvtps2pd
jmp
mov
xchg
jmp
adc
dec
sbb
adc
jne
stos
lahf
out
dec
pop
stos
cmc
pop
or
mov
mov
or
shlb
out
js
push
mov
fbld
loope
cmp
cltd
pushf
je
lods
dec
mov
test
and
cmp
lods
ret
jge
cmpsl
jg
jnp
xlat
js
nop
ret
iret
mov
sahf
sbb
fisttps
pop
cmpsb
jb
mov
sbb
subb
lret
mov
jge
movsb
in
sbb
out
add
lds
xlat
loopne
pushf
push
loope
sbb
mov
jge
test
stos
out
xor
imul
repz
dec
pop
mov
cmp
data16
push
mov
lret
adc
out
in
inc
loopne
rorb
mov
or
jg
mov
sub
mov
call
xor
mov
stos
lcall
pop
push
enter
adc
xor
and
or
mov
lar
enter
inc
xor
mov
add
lahf
mov
inc
ljmp
dec
pop
lret
mov
popf
dec
ja
cli
outsb
rcrb
push
adc
imul
mov
jne
adc
or
adc
notl
and
inc
mov
cli
mov
jne
sbb
bound
jo
divl
cmp
mov
test
xor
inc
pop
scas
in
scas
faddl
dec
in
sarb
and
es
shlb
and
pop
sbb
stos
fcmovnu
cmp
cmp
sub
mov
mov
sbb
daa
ljmp
sahf
sub
daa
xchg
aam
sbb
iret
js
test
pop
in
bound
jg
sub
movsb
rorl
bound
dec
mov
sbb
mov
push
cli
in
lds
pop
push
adc
inc
mov
add
insb
aaa
insb
inc
popf
mov
cld
mov
out
jbe
xor
pop
jnp
jmp
loop
les
es
repz
lcall
push
cmp
or
sbb
sahf
fmull
ret
cmp
and
sub
stos
and
xor
cli
mov
ror
jbe
rcrl
in
fucomi
iret
xchg
adc
push
xchg
movsb
mov
pop
push
adc
faddp
dec
repnz
arpl
pop
lock
pop
stc
icebp
negl
dec
xor
push
loop
in
push
stos
lret
push
jno
cli
pop
xchg
sub
xor
or
clc
fnstenv
mov
rcrl
add
cwtl
and
mov
bnd
jmp
push
mov
mov
dec
mov
pop
xor
push
inc
jmp
std
pop
std
sbb
pop
push
cmp
add
or
jl
cmp
mov
hlt
or
cli
test
mov
dec
faddl
fsubrl
pusha
pcmpgtb
xor
mov
cmp
ret
loope
xor
jl
push
outsl
rolb
sbb
out
pop
jns
push
jge
repz
test
add
xchg
jno
repnz
add
outsl
push
xchg
sbb
dec
or
jb
sbb
out
loopne
ds
xchg
mov
lcall
sub
add
jns
or
xor
sbbl
mov
ds
or
mov
and
pop
pop
add
mov
mov
repz
or
ljmp
jo
xor
and
cmp
in
out
jg
push
aam
fdivl
cmp
mov
mov
pop
xor
sub
sbb
daa
inc
outsl
daa
dec
xor
jo
mov
inc
stc
mov
movb
int
rcll
or
pusha
sbb
js
mov
je
jb
cli
fiaddl
bound
or
mov
lcall
lret
sarb
pop
adc
test
shr
adc
cld
xchg
mov
insl
cmp
je
pop
stos
sahf
pushf
popa
mov
test
addr16
xor
scas
pop
iret
out
test
sub
pop
cmc
movb
sbb
out
lock
pop
xor
clc
cmpsl
lret
cmp
ss
inc
call
sub
ficompl
push
fists
ret
mov
mov
mov
push
dec
and
fidivrs
leave
or
sbb
mov
in
negb
movhps
notb
jmp
xor
stos
aaa
popa
int
mov
push
aaa
xchg
xor
sub
lahf
xchg
mov
cmp
mov
dec
lahf
scas
jge
pop
push
icebp
daa
add
lret
mov
cmp
sti
enter
inc
dec
cli
adc
xchg
data16
pop
pop
jnp
pop
cmpsl
dec
es
scas
into
cmp
adc
pop
or
mov
out
insl
sub
sbb
mov
jecxz
cmpsl
xchg
out
mov
lds
test
pop
xor
lret
xor
jnp
xor
xchg
push
lcall
out
cmc
add
xchg
scas
add
lcall
std
push
lahf
xchg
mov
and
idiv
in
cmc
jl
mov
loop
shll
dec
imul
pop
push
cmp
dec
addr16
hlt
movsb
mov
jo
and
imul
push
mov
push
mov
outsb
xor
add
dec
mov
insl
sub
aad
adc
jne
fmulp
mov
outsb
es
jno
fcoms
push
and
dec
test
and
les
aaa
lcall
jle
lds
jb
push
mov
xchg
jo
sbb
insb
addb
repz
sarl
push
lret
enter
cli
push
aam
mov
repnz
sbb
out
xchg
outsb
sbb
or
nop
outsb
data16
or
push
gs
sub
insl
pop
jmp
loope
hlt
mov
fisubs
daa
call
std
bound
adc
icebp
jp
and
loope
lds
popa
stos
lcall
cmpsl
mov
xchg
xchg
push
test
mov
mov
dec
nop
adc
imul
mov
jb
pop
cwtl
fdivr
div
dec
aam
lods
jp
nop
jl
dec
inc
xorb
das
mov
pop
cmp
inc
cmc
mov
pusha
or
push
ret
mov
sahf
ret
adc
pop
in
inc
ret
loopne
dec
mov
ljmp
push
stc
rorl
xor
fiaddl
hlt
add
and
test
pop
insl
xchg
repnz
and
fcompl
pop
insl
loop
cli
cwtl
jae
xchg
inc
roll
xchg
sbb
mov
sub
out
movsl
leave
jmp
cmpsb
popa
mov
and
in
in
and
aaa
shrl
and
jle
push
add
js
or
cmp
iret
mov
mov
sarl
push
push
inc
fucom
mov
pop
pop
js
test
push
ja
push
xor
inc
or
loope
iret
cmp
mov
sub
push
gs
inc
scas
and
or
scas
jge
fld
xor
jmp
iret
add
fldt
les
dec
in
cmp
mov
sbb
mov
stos
lcall
mov
and
mov
lods
sarl
rcl
jo
ss
cmp
mov
inc
mov
or
xchg
fsubr
or
cmp
scas
inc
dec
call
cmp
adc
push
rolb
jb
pop
popf
es
jnp
out
rcrl
in
insb
and
jmp
sbb
lock
mov
cwtl
add
mov
mov
xchg
mov
or
in
jp
repnz
xor
addr16
jge
sbb
jmp
push
and
xlat
cmpsb
add
xchg
adcl
pop
sub
jno
sbb
loope
cld
sbb
out
out
jg
in
sbb
xchg
scas
xchg
push
outsb
dec
pop
mov
mov
fwait
sub
pop
add
inc
add
rorb
push
ja
add
dec
or
inc
stos
push
hlt
mov
push
sub
js
into
mov
fidivrs
rolb
imul
inc
add
stc
lahf
push
aaa
mov
push
xchg
add
add
ljmp
xor
js
out
inc
in
jle
fs
sahf
addr16
xchg
aas
imul
enter
inc
lahf
push
es
jl
push
lcall
nop
xor
movsl
sbb
mov
push
xor
movsl
sbb
add
dec
iret
sub
xchg
fiadds
stc
xchg
mov
cmp
dec
xchg
pop
xchg
in
rcr
and
mov
cwtl
fs
cli
inc
jb
adc
inc
jno
stc
sub
rorl
mov
xchg
test
mov
fs
movsl
mov
nop
pusha
jp
pop
pop
xchg
fldenv
lahf
sbb
popa
test
test
movsb
pop
ds
add
in
popa
adc
or
jmp
inc
pop
inc
adc
push
mov
loop
pusha
sbb
jnp
and
imul
sub
adc
pushf
jecxz
dec
mov
outsb
jle
lahf
pop
stc
push
ret
add
jg
mov
cmpsl
je
rorb
cmp
sub
ret
sub
mov
xchg
jae
or
push
mov
jge
es
test
clc
sub
cltd
movsb
mov
jae
fisttpl
add
pop
testb
and
dec
scas
daa
or
scas
pop
in
shlb
dec
xor
mov
dec
mov
lds
mov
xor
shl
cltd
imulb
ficompl
cltd
jecxz
lret
push
fidivrl
call
dec
cmp
je
pop
push
jecxz
js
or
rcrb
and
out
push
jle
pop
dec
sbb
xchg
popa
mov
lahf
cmpsl
sbb
jp
sub
mov
dec
push
xor
xchg
jmp
hlt
sbb
lock
shrl
or
dec
xchg
pshufw
adc
ljmp
mov
sbb
mov
push
shrb
pop
xchg
or
push
outsb
lds
mov
aaa
mov
cli
fwait
sahf
push
push
jmp
push
inc
sub
mov
les
and
adc
push
xchg
scas
bound
outsl
outsb
mov
mov
xlat
pop
pop
popa
mov
jnp
pop
jne
adc
cwtl
jg
sti
add
or
fisubrs
mov
push
sub
cmpsl
daa
lea
dec
push
cmc
xlat
into
ljmp
mov
lahf
in
adc
inc
pop
and
push
inc
rcrb
mov
jmp
inc
call
fwait
sahf
daa
inc
cwtl
jns
sbb
xor
lcall
in
adc
testb
cli
inc
cwtl
ret
cmp
pop
inc
add
das
aaa
mov
faddp
push
mov
pop
test
adc
sbb
bound
insb
mov
xlat
xchg
cmp
xor
mov
xchg
frstor
sub
insb
addr16
or
aaa
mov
inc
xchg
cmp
sub
div
or
sbb
lock
lds
push
insl
and
int
xchg
pop
or
scas
std
iret
cmp
test
jne
test
dec
sub
insl
dec
sub
int3
lcall
int
dec
push
pop
jg
add
stc
dec
dec
or
pop
out
xchg
sbb
arpl
into
adc
aaa
pop
cmc
out
pop
adc
and
jnp
xlat
mov
jo
mov
cmpl
mov
imul
jg
in
adc
scas
faddl
ret
jge
aad
xor
fs
sahf
hlt
int
aas
mov
xlat
out
xchg
pop
fcmove
push
in
leave
cmpsl
das
add
dec
roll
fdivl
repz
stc
xorb
shrl
es
cmpsl
jp
sahf
jecxz
popl
push
cmp
adc
scas
and
std
movsl
filds
push
mov
sbb
sahf
cwtl
inc
or
sub
sub
shlb
stos
push
daa
ror
jo
ret
adc
test
jmp
cmpsl
loopne
add
inc
mull
mov
test
push
mov
fsubl
or
cmp
int
mov
cmp
sbb
movsb
stos
into
insl
lcall
outsl
outsb
push
lods
fsubrl
mov
shrl
fbstp
icebp
pop
sbb
lock
cmp
leave
cwtl
cmpsl
sar
xchg
pop
notl
jmp
jmp
xchg
sub
inc
xor
add
rolb
add
fldl
xchg
scas
pop
es
cmp
mov
adc
psrld
sbb
call
inc
mov
or
mov
jbe
movsb
mov
adc
fsubrp
or
fs
imul
sahf
in
scas
push
or
enter
fmuls
xrelease
jmp
pop
xlat
popa
flds
cli
push
xor
push
out
push
push
mov
pushf
push
sub
dec
fbstp
cmpsb
daa
xor
jp
daa
jnp
xlat
int
cld
cmp
out
cmp
inc
sti
xchg
ficoml
insb
icebp
pop
out
mov
int3
jne
outsl
imul
repz
imul
lods
pop
pop
xchg
pop
inc
out
fimuls
xchg
jns
adc
ret
xor
cmpsb
lock
repz
adc
dec
and
test
dec
out
xor
fdivl
lds
stos
push
and
mov
jo
jge
in
repz
rcrl
enter
hlt
push
loope
add
js
shll
in
jle
adc
cmp
outsb
xchg
aas
mov
pop
cmp
add
adc
xchg
aad
call
or
dec
les
lret
lock
stc
loopne
test
cmp
dec
les
outsl
insb
int3
aam
dec
lea
lahf
mov
les
inc
pop
insb
xchg
mov
add
ja
into
push
lods
mov
or
test
push
mov
pop
and
mov
or
jmp
xlat
in
cmpsb
ficompl
cli
pop
insb
or
xchg
and
test
jmp
push
sub
jmp
add
pop
sub
jl
fimull
pop
aaa
rcrb
ret
int
leave
mov
cmp
mov
cmc
loopne
jbe
cmp
clc
ficomps
mov
mov
mov
pop
and
or
or
inc
pushf
dec
mov
inc
and
mov
xchg
test
sub
arpl
xchg
cli
fidivl
aas
cld
jno
cli
pop
outsb
mov
fldenv
sbb
int
mov
into
cli
repnz
cmp
inc
imul
stos
jg
adc
cmp
stos
sahf
push
lock
push
mov
aam
or
icebp
movsb
adc
and
inc
xchg
test
in
pusha
scas
dec
bnd
popa
or
dec
lcall
add
jge
ljmp
and
cld
and
test
or
or
arpl
pop
cmp
cmp
lret
mov
sahf
aas
mov
inc
ret
js
mov
loope
ret
adc
shll
dec
es
mov
cltd
shlb
jns
mov
or
mov
inc
aaa
insl
push
adc
cli
mov
inc
sbb
jmp
push
repnz
fs
cwtl
push
jne
push
or
fcmovnu
pop
pop
mov
mov
inc
and
xlat
push
push
add
add
stc
inc
add
inc
call
add
outsl
iret
popf
fdiv
cmp
movsb
cld
xchg
in
inc
fldcw
adc
cmp
stc
adc
cli
ds
imul
dec
ret
fiaddl
or
xor
dec
push
jo
sti
dec
mov
and
inc
push
push
mov
mov
ror
xor
aas
xchg
leave
pop
ret
and
sbb
jle
or
cmp
mov
lea
imul
sub
cs
sti
test
outsl
push
sub
and
add
lods
iret
fs
mov
in
pop
int
dec
inc
outsb
add
test
jle
sti
xor
sahf
pop
mov
push
ljmp
test
mov
dec
fcomip
in
outsb
jo
repnz
loopne
int3
cmp
mov
mul
pop
and
sub
jo
out
mov
pop
jbe
adc
std
push
jb
repnz
das
por
push
mov
scas
dec
into
rorb
jl
rcrl
mov
jne
pusha
rclb
jg
bound
xor
xor
dec
jmp
loopne
mov
daa
ja
enter
push
out
lret
divl
ret
out
mov
pop
pushf
cltd
pusha
test
jp
xchg
mov
outsb
mov
xor
mov
jecxz
push
lods
aaa
std
inc
add
push
rcll
pop
rcll
mov
inc
clc
push
ja
cmp
adc
pop
xor
stc
cld
jp
adc
mov
cmpl
rolb
cmp
pushl
xor
xchg
adc
inc
push
fimull
repnz
jae
ja
into
push
negb
cltd
jno
adc
fwait
testl
mov
out
sub
inc
add
aam
lcall
ret
sub
movsb
or
xchg
pop
sbb
mov
cmp
arpl
dec
add
or
push
push
push
mov
fwait
push
lcall
stc
xor
jmp
xchg
sbb
sbb
scas
data16
xor
loop
fbstp
mov
jge
add
lea
mov
pusha
outsb
rorl
xchg
mov
into
test
jae
enter
mov
and
xor
fsubs
xchg
js
shlb
jge
xor
cmc
out
mov
push
stc
int3
cmpsb
sbb
adcl
mov
and
stos
inc
rclb
mov
mov
loope
ljmp
mov
lahf
xor
loop
or
shll
or
mov
je
lret
lahf
fbld
movsb
and
inc
dec
inc
add
jl
push
mov
data16
out
fcomip
xor
mov
jecxz
xchg
pop
push
sub
loopne
loopne
or
fisubrs
sub
call
push
xor
mov
pop
enter
xor
xlat
cmp
sub
pop
xchg
ljmp
push
push
test
adc
test
add
xor
or
dec
or
loope
arpl
sub
mov
jb
lds
lahf
clc
pushf
aaa
jno
sbb
cmpsl
incb
jecxz
jmp
stos
xor
ds
stos
fldenv
popf
aaa
push
jno
movsb
adc
sub
xor
arpl
xor
pop
inc
inc
sub
push
mov
lods
pop
cmpsb
in
or
cmp
insb
lcall
aas
inc
popl
loop
cmpsb
push
in
jl
sbb
sub
or
jecxz
adc
pushw
daa
pushf
and
test
mov
lea
test
mov
fldt
cmpsb
mov
xchg
add
roll
push
in
push
add
sbb
scas
ret
sub
jo
mov
xchg
ja
arpl
push
push
and
push
mov
fstl
imul
jne
add
notl
cmp
loope
mov
push
pusha
inc
in
call
fwait
shrl
scas
movsb
push
je
mov
adc
imul
dec
lods
inc
je
adc
jl
add
pop
sub
cmp
mov
lea
nop
lahf
and
jl
in
movsb
inc
cld
hlt
push
popf
fabs
adc
fisubl
cmpsb
add
sbb
mov
xor
ja
and
and
addr16
sbb
repnz
pop
stc
or
mov
scas
and
and
insl
xor
movsl
push
mov
enter
pop
fdivl
daa
fwait
shlb
test
jnp
sub
pop
adc
adc
mov
cmp
dec
xchg
pop
add
not
cmpsl
gs
cmp
andb
mov
mov
add
mov
sub
xlat
fsubrl
stos
xor
adc
inc
jbe
cmp
mov
pop
sbb
sbb
mov
inc
lods
mov
arpl
sub
mov
dec
rcrl
rcrb
ret
mov
cmp
in
aas
data16
dec
mov
mov
inc
rcll
cs
xchg
mov
call
notb
scas
pop
push
and
mov
js
clc
stos
movsb
fxch
inc
xor
inc
and
shlb
stos
jo
xchg
jge
mov
cmp
jge
hlt
or
lret
mov
lcall
test
adcl
push
out
mov
lret
pop
ds
test
ds
sar
sti
js
gs
jle
stos
sbb
out
push
xchg
mov
lods
add
mov
icebp
nop
xor
popf
add
hlt
fcmovnu
les
js
jne
pushf
loop
bound
in
jo
add
ret
movsl
mov
sbbl
adcb
mov
icebp
int
sarb
insl
add
jb
sub
pop
repnz
mov
mov
jmp
mov
test
test
mov
jb
bound
mov
or
mov
test
cmp
clc
jno,pt
cmp
and
stc
sub
sbb
lods
mov
fsubs
and
idivl
sub
cmc
inc
aad
pop
lcall
aam
insb
sahf
pusha
cmp
stc
mov
leave
pop
adc
xchg
inc
mull
mov
int3
es
nop
cmp
mov
jle
clc
imul
cmpsb
adcb
push
add
push
or
pop
or
jecxz
or
fcomps
xor
insb
das
mov
cs
pop
mov
mov
xchg
jmp
ret
mov
repz
mov
sbb
push
outsl
mov
loopne,pt
data16
dec
pop
sbb
imul
jb
and
sub
jb
pop
and
sub
sbb
or
adc
mov
ljmp
xchg
daa
xchg
xchg
push
pop
mov
pop
jmp
mov
sahf
and
sbb
scas
cltd
jnp
mov
mov
and
jl
lods
or
push
inc
shl
xchg
pop
cltd
inc
out
xor
cmpsb
mov
xchg
mov
popa
iret
pop
sub
aaa
movsb
pop
mov
xor
sub
xor
dec
inc
cld
pop
cwtl
fucomip
xchg
sub
lea
pop
mov
sbb
pop
lods
test
lods
insb
imul
mov
mov
imul
sub
imul
and
loop
or
mov
lods
je
loope
sti
xchg
fstps
test
clc
hlt
mov
pop
fcos
and
dec
outsl
sbb
bound
mov
cmp
mov
mov
cmpsb
daa
jbe
pop
pusha
inc
repnz
gs
xchg
cmp
shll
clc
cs
into
xor
sbb
jnp
pop
and
sub
fisubs
jo
or
jg
mov
and
aam
iret
push
lret
shl
xchg
test
cmp
jmp
dec
and
pop
pop
loopne
and
inc
and
xor
sbb
xor
dec
insb
mov
xchg
mov
dec
or
dec
mov
pop
lock
pop
fwait
adc
lea
pop
push
dec
mov
movsl
fxam
cld
fisubrl
jl
inc
mov
insl
pop
xchg
int
mov
cmp
adc
mov
and
data16
std
xlat
push
mov
stc
fidivrs
ds
cwtl
leave
leave
sahf
mov
mov
mov
iret
aaa
daa
dec
stc
dec
mov
cmpsl
pop
rcrl
jbe
rcr
jmp
sub
mov
pop
jns
fs
xchg
fdivp
sbb
pop
fidivl
loop
dec
jno
out
idivl
data16
outsl
xchg
adc
mov
jp
mov
sbb
cltd
push
adc
arpl
je
ret
lods
ucomiss
pop
mov
and
movl
repz
sub
adc
lahf
xlat
inc
sub
adc
xchg
adc
mov
mov
lret
ds
icebp
jns
ret
popa
loopne
push
sbb
jle
pop
lea
adc
imul
das
imul
imul
mov
push
fadd
xchg
inc
push
jb
in
and
inc
pusha
or
and
adc
fisubs
mov
push
jnp
in
inc
in
jp
movsb
jne
mov
cmp
xchg
lods
cmp
push
lcall
pop
sbbb
divl
adc
mov
adc
inc
aam
dec
inc
push
sbb
push
adcl
xchg
dec
mov
sub
jge
movsl
cld
cmp
mov
mov
sbb
add
stc
jno
push
enter
cmc
xlat
pop
or
xchg
lret
jne
aad
sbb
sub
or
add
or
cmp
push
mov
mov
mov
mov
fs
adc
xchg
pop
incl
pop
mov
adc
push
mov
sub
mov
push
in
mov
xor
lcall
push
sbb
jno
in
ljmp
and
enter
xor
fildll
ret
dec
dec
cld
mov
shrb
call
push
stos
fildl
dec
jge
stc
xchg
push
bound
lock
lds
ljmp
ret
loop
and
inc
push
mov
jl
and
adc
popl
je
nop
sub
unpcklps
or
pop
ret
movsb
pop
outsl
or
cmp
das
cmp
loop
add
xor
rorl
xor
icebp
add
push
insl
pusha
imul
push
sbb
push
leave
out
stc
mov
cmp
loopne
ss
in
jns
mov
fsubl
arpl
lods
lds
imul
push
push
popa
movsb
outsb
pop
mov
mov
ret
cltd
int3
xchg
test
lea
movsl
adc
std
xchg
lret
arpl
jg
xor
ret
orb
pop
sbb
stos
sbb
mov
mov
cltd
mov
mov
out
rol
sub
xor
lcall
pop
test
leave
lret
imul
adc
cmp
orb
cmp
inc
add
adc
mov
mov
push
xor
dec
in
test
jle
push
jbe
mov
lret
and
sub
inc
jmp
fnstenv
rcr
lods
outsb
lods
jne
sub
adc
push
and
mulb
lods
std
mov
lret
sub
mov
jle
bnd
insl
cli
pop
jp
mov
pop
or
xor
fidivrs
fdivl
test
test
movsb
mov
mov
add
pushf
pop
inc
cmp
out
gs
sub
lret
jb
and
orl
push
add
ret
scas
sti
dec
add
ror
adcb
add
in
imul
int
mov
push
pop
stc
ret
xchg
or
cmp
dec
and
es
sbb
cmc
adc
adc
sti
push
dec
mov
int
pop
mov
out
nop
lea
mov
lea
lods
xchg
imul
dec
jns
mov
mov
jl
mov
dec
mov
aas
out
cmp
pop
inc
push
inc
mov
push
lock
xchg
adc
xlat
adc
lea
pop
xor
aaa
jmp
cmp
ljmp
push
cmp
xor
lea
popf
inc
mov
std
fcoml
rorb
loop
add
mov
jne
push
std
fwait
in
int
fstl
cmp
jno
test
ljmp
lcall
clc
imul
stc
cli
les
xchg
loop
jle
mov
mov
fwait
adc
pop
pop
rcll
iret
std
mov
and
dec
add
xchg
mov
xchg
sbb
gs
lods
out
and
jge
sbb
or
push
out
movsl
mov
sub
pop
mov
add
or
imul
pop
jg
and
mov
mov
jp
decl
inc
pop
out
arpl
push
sar
sbb
cltd
int
xchg
int
add
jg,pt
push
inc
stos
jbe
test
push
push
das
in
lcall
cmpb
and
test
mov
mov
fidivs
out
inc
daa
xchg
add
adc
lds
jae
ret
push
insb
mov
andl
repz
inc
in
inc
fsts
hlt
adc
clc
repnz
mov
aaa
mov
push
mov
scas
mov
aaa
push
test
sub
subl
fwait
out
sbb
sub
je
pushf
sbb
sahf
ret
dec
or
cmpsl
and
pop
psllw
decb
pop
clc
sti
loope
mov
les
aas
lret
sbb
pop
enter
ficoms
jno
jp
cwtl
push
popa
cmp
pop
test
add
insb
fidivl
outsb
in
int3
std
adc
add
fldenv
outsl
idivl
icebp
repnz
xor
popf
jb
mov
out
imul
push
stos
and
xchg
or
scas
scas
stc
xchg
daa
mov
pop
cltd
jnp
cltd
dec
imul
xor
jo
jecxz
dec
push
xor
movsl
test
mov
mov
sub
cli
test
popa
push
bsf
or
aad
add
inc
in
add
cmp
shr
jns
and
mov
imul
iret
das
popf
addr16
cmp
scas
je
push
mov
out
insb
insl
popf
leave
mov
in
fidivrs
dec
inc
sub
inc
add
and
jmp
mov
clc
dec
xor
xchg
cld
pop
sub
outsl
push
das
lea
push
xchg
fstps
or
not
test
pusha
sub
cmp
iret
push
into
ret
fdivl
and
and
adc
daa
cld
popf
loope
sbb
movsb
add
mov
insl
in
push
out
lcall
sbb
rcll
pslld
sbbl
inc
jg
add
jmp
shll
leave
jg
adc
clc
negl
push
subb
push
mov
clc
adc
mov
loop
inc
lret
push
mov
jbe
jnp
cvtsd2ss
dec
das
out
sub
jle
adc
dec
into
out
cmpsl
adc
cs
cs
or
rorb
lds
fldcw
adc
lock
xchg
lods
xor
sbb
in
or
inc
loop
scas
pop
fists
das
jle
inc
push
xchg
jno
gs
mov
fldl
cmp
out
or
mov
cmpsl
mov
iret
inc
mov
xchg
mov
pop
aaa
xlat
repnz
ja
pop
fcom
scas
sbbb
dec
cmp
movsl
jnp
paddsb
pop
sub
push
pop
data16
push
sub
jb
sarl
push
gs
push
in
test
push
mov
ja
jne
mov
test
add
fwait
out
adc
out
adc
lahf
in
cmp
rclb
out
pop
hlt
sub
sahf
mov
or
aas
cmp
adc
test
push
insl
sub
mov
pop
adc
out
hlt
mov
or
gs
into
mov
out
push
outsb
popf
lock
not
push
fwait
clc
cmp
xor
movsl
push
mov
inc
and
leave
iret
dec
lods
lods
out
test
hlt
shrl
repnz
les
je
lea
xchg
and
xchg
xor
nop
rcr
mov
std
sti
dec
pop
cmpsb
add
push
andl
in
fs
push
mov
xor
mov
mov
cwtl
sub
sub
stos
sbbb
ret
addr16
push
pop
push
pop
jmp
cmp
aam
or
data16
xchg
fwait
call
or
pop
jp
lds
in
hlt
sub
lods
cli
popa
shrb
inc
jl
xchg
lret
data16
mov
mov
and
adc
and
inc
addr16
iret
test
sarl
sub
push
or
dec
rcll
push
sbb
rolb
test
sub
lock
dec
ficoml
xchg
pushf
outsl
lock
cmpb
push
cli
gs
repnz
pop
fistl
fidivrl
fstpl
push
cli
cmc
mov
sub
enter
push
in
pop
aaa
mov
pop
add
mov
jmp
jl
mov
mov
mov
in
mov
rorl
pop
jmp
jo
sub
push
mov
or
dec
stc
jo
sbb
add
sub
rorb
inc
inc
dec
imul
fbld
inc
sbb
and
pop
sbb
aas
or
add
imulb
mov
sti
pop
cmc
pop
popa
xor
ds
out
lea
xchg
shll
pop
icebp
andb
lcall
mov
fs
cmp
shll
rorl
jno
mov
pop
leave
xchg
out
sub
and
mov
pusha
enter
fs
test
cld
fnstsw
dec
les
jge
inc
lock
push
ja
jle
es
sbb
fcmovbe
repnz
cwtl
and
scas
scas
into
ret
jno
cmpsl
push
mov
shll
cmp
and
cld
ss
xor
adc
scas
nop
mov
das
jo
mov
outsb
pusha
cli
out
dec
fwait
pop
daa
movsl
xor
dec
call
sbb
rol
arpl
xor
pop
fwait
dec
push
mov
stos
addr16
test
push
inc
fs
iret
dec
into
clc
and
sbb
adc
aaa
sar
in
mov
aad
shll
lcall
mov
dec
mov
lock
enter
and
aam
ss
pop
sbb
out
cwtl
sbb
jl
adc
lock
xchg
sub
ljmpw
mov
js
cmp
call
xchg
sub
mov
pop
adc
cmpsl
cli
lret
add
outsl
adc
jecxz
adc
sahf
pop
xchg
or
int
dec
dec
pop
lods
xchg
mov
cmp
mov
jo
cmpsb
mov
fidivl
xchg
xchg
mov
mov
cmp
xchg
mov
ret
scas
push
mov
outsb
mov
jne
cmp
jo
imull
sbb
push
fcoml
insb
jnp
cltd
sahf
inc
repz
xor
test
mov
sti
mov
cmp
cwtl
dec
cmp
jg
lock
pop
pusha
xchg
mov
adc
xor
mov
out
aas
gs
mov
push
sub
aad
xor
sub
sub
mov
jnp
cmpsb
mov
jae
adc
fisttps
psubq
jg
lahf
js
jecxz
rclb
loopne
mov
lods
movsb
cmp
adc
outsl
scas
movsb
mov
and
subb
sub
repz
aaa
xorl
enter
jg
jno
mov
pop
lds
xor
pop
lea
mov
test
pop
lret
test
rcr
mov
lods
out
mov
loope
in
dec
mov
xchg
add
lcall
dec
xor
push
mov
ret
andb
pop
loope
mov
rol
xor
into
stos
mov
mov
mov
push
mov
cmc
mov
in
loop
outsl
sub
jae
sbb
sbb
out
pop
pop
pushf
and
ljmp
lock
out
lock
addl
jge
repz
scas
mov
test
test
adc
hlt
rcrl
xchg
and
push
int
inc
inc
dec
mulb
test
mov
fstpl
stc
fs
stc
mov
mov
push
pop
sub
scas
scas
loope
mov
cmp
mov
mov
ds
jne
leave
fs
cmp
jbe
insb
push
in
out
shl
jg
lcall
adc
popl
xor
test
inc
push
pop
mov
js
pusha
pop
jmp
xor
jg
je
add
dec
xchg
add
dec
or
jno
push
dec
mov
data16
and
nop
inc
cmp
fwait
push
jns
xor
call
and
lea
sbb
lock
sahf
flds
popa
mov
test
adc
inc
lahf
popa
mov
das
push
jecxz
mov
mov
xor
fistps
xor
sbb
popl
call
dec
je
mov
cmp
mov
mov
rcll
or
data16
and
cmp
jno
lahf
adc
fsts
out
and
bound
mov
fcoml
mov
and
rclb
mov
ljmp
ret
inc
sub
imul
pop
jbe
add
aam
icebp
mov
pop
or
ja
mov
sbb
sub
pop
leave
xlat
int3
mov
gs
dec
jle
popf
clc
aas
xrelease
out
adc
popa
xchg
push
outsb
xchg
xchg
scas
xchg
sti
jns
movsb
fisubs
movsl
or
sbb
mov
lahf
lock
out
aaa
movsl
adc
pop
add
fldl2e
mov
divl
dec
push
frstor
ret
pop
sbb
ds
stos
add
jne
aad
lods
aas
mov
push
jno
jbe
and
inc
add
shrb
sbb
es
push
movsl
or
pop
aaa
pop
into
std
rcrb
jecxz
and
xorl
ret
push
lret
popf
out
and
sbbb
les
and
call
stos
cmp
insb
cmc
call
xchg
out
jnp
out
and
jmp
out
and
test
xor
daa
popf
push
fs
xchg
and
stos
scas
cltd
insl
inc
mov
ficomps
and
popa
dec
jmp
and
or
mov
push
sub
inc
and
stos
cmp
loope
sbb
cmp
sahf
add
mov
jne
shrb
ljmp
pop
pop
popf
mov
mov
movsl
push
aad
sbb
cmp
or
mov
mov
mov
cmp
clc
adc
mov
repnz
mov
pop
shrb
scas
mov
ljmp
mov
push
nop
jl
push
lret
dec
mov
vmwrite
and
xor
and
cmp
mov
test
shll
xchg
push
mov
jo
mov
mov
popa
pop
test
imul
leave
aam
daa
fcomps
les
into
repz
stc
out
lea
inc
iret
sub
mov
les
mov
adc
adc
inc
es
je
fwait
in
loop
mov
ret
mov
or
cld
mov
push
xchg
and
loopne
repz
add
in
or
jecxz
mov
or
cwtl
sti
adc
jecxz
sub
in
jae
add
loopne
mov
sbb
sbb
mov
xor
pop
jne
inc
ss
inc
pop
nop
sahf
or
ss
mov
ss
scas
lret
repnz
jl
or
mov
jbe
mov
test
addr16
insl
push
sbb
push
lcall
mov
or
test
mov
call
gs
js
out
mov
clc
out
pop
cmp
mov
mov
push
lret
and
fistpll
cmpb
daa
cmp
mov
jo
mov
pop
andl
cmp
xchg
test
and
xchg
sub
pop
pop
movsl
jmp
repz
jb
int
mov
out
jmp
xchg
push
mov
rcrb
sub
adc
dec
pop
mov
jecxz
test
clc
sahf
div
xorb
push
mov
sar
je
popa
rolb
cmpb
mov
jae
or
clc
jo
mov
mov
ret
ljmp
jb
clc
and
jo
mov
jb
leave
lret
dec
mov
test
fwait
xlat
push
mov
xchg
sti
push
insl
pop
rcrb
loopne
add
adc
mov
cld
in
add
xor
push
in
or
xor
pop
mov
xor
sbb
iret
ss
mov
and
ljmp
loope
jg
movsl
inc
sub
mov
pop
dec
in
pop
scas
xchg
sti
addr16
fimull
add
push
push
sub
or
mov
out
dec
mov
imul
adc
push
push
in
adc
imul
sbb
xchg
int
cmpl
nop
push
xchg
sarl
arpl
stc
add
or
iret
push
je
bound
inc
xlat
movsb
mov
xchg
mov
enter
push
cwtl
jnp
mov
ds
das
loope
cmc
pusha
test
pmaxub
xor
dec
fnstcw
dec
fninit
mov
test
inc
aam
xchg
mov
scas
lret
lcall
enter
lods
fsubl
jae
jge
push
daa
jl
sub
xor
pop
sbb
cmpsl
lcall
call
cld
jne
cmc
js
into
inc
or
or
inc
xchg
shlb
mov
xchg
and
dec
orb
cs
icebp
mov
dec
test
mov
dec
add
mov
lds
or
shlb
jnp
jle
dec
lods
lahf
rolb
addl
xor
daa
stos
test
scas
sahf
cmpsb
dec
or
xor
sub
cmp
in
int
test
sub
aad
outsb
inc
imul
or
xor
jne
pop
int
adc
pop
push
fwait
lcall
xchg
mov
cmp
inc
inc
in
cmp
movsb
subl
adc
ja
adc
aad
mov
mov
test
cmpl
stos
jne
inc
cld
in
sbb
cmp
jb
mov
enter
loop
push
add
jnp
dec
inc
test
fsubrs
fwait
out
cmp
jmp
pop
mov
cmp
psllq
pop
ret
stos
mov
lret
pushf
test
jge
add
jns
orl
adc
movsb
loope
mov
pop
inc
mov
xchg
stos
repz
shr
sti
fs
mov
das
gs
adcb
mov
cmp
ds
in
inc
pop
sti
jnp
pop
mov
pop
adc
pop
jns
mov
inc
xlat
xor
jecxz
es
sbb
add
hlt
mov
arpl
push
xchg
mov
jp
xchg
out
push
fmuls
xchg
cmp
lods
xor
stos
insl
scas
mov
push
mov
jmp
push
mov
les
mov
mov
repnz
out
or
dec
cmc
xchg
push
dec
and
mov
and
add
aad
movsb
iret
jmp
stc
mov
push
rcrl
xchg
xchg
or
dec
andl
pop
push
xchg
xchg
adc
pop
cmp
dec
mov
outsl
or
add
aad
pop
jne
push
xor
fcomi
fwait
jne
fs
sub
or
mov
lret
mov
cmpsl
cs
adc
sbb
xor
cltd
lret
adc
inc
cmp
shll
aaa
push
and
cs
and
fidivs
xor
jo
adc
nop
into
gs
movsl
mov
out
fldl2e
lcall
cmc
in
mov
stos
jl
dec
sbb
xor
scas
xor
fistpl
xor
adc
xor
insl
push
dec
or
sub
dec
in
imul
aas
call
jno
mov
lods
arpl
bound
hlt
xor
and
cmp
out
sarl
mov
int3
push
fstps
mov
hlt
clc
dec
or
add
mov
addr16
mov
cli
or
movsl
add
sbb
enter
in
mov
pop
mov
fisttpl
inc
inc
jno
das
outsl
cmp
inc
cmp
ret
gs
add
xor
or
mov
in
cs
jb
pop
or
or
or
dec
out
or
cwtl
aad
js
fisubl
stc
jns
jae
ds
mov
dec
inc
call
inc
shll
mov
xor
jp
pushf
jg
mov
idivl
inc
popa
mov
out
pop
xlat
cmpsb
add
jmp
sub
inc
push
daa
icebp
sub
imul
inc
push
sbb
jle
pusha
mov
jmp
jl
cmp
xchg
cmp
dec
jle
mov
adc
lods
enter
divl
xchg
int3
cwtl
int
xchg
mov
jmp
mov
adc
xorb
inc
xchg
imul
push
mov
gs
jp
mov
jb
into
mov
ret
mov
cmp
mov
fs
dec
pop
out
push
push
ds
sub
xchg
jp
inc
test
xor
mov
inc
insb
jge
data16
iret
add
xchg
xchg
rcl
adcl
fs
or
mov
cli
mov
push
les
lds
xor
xchg
cltd
push
leave
inc
cmpsb
mov
cmpsl
pop
fistl
fs
and
xor
xchg
shll
lock
mov
sbbl
sahf
ljmp
adc
nop
lods
rorl
cmc
sbbb
mov
les
std
cmpl
nop
xor
bnd
xor
sbb
add
jle
mov
cli
stc
repnz
fstpt
or
add
inc
test
ja
cmp
shl
repz
loop
stc
cmp
fwait
insb
cmc
jge
in
inc
sbb
jns
push
cwtl
inc
daa
push
dec
push
pop
cmp
sbb
push
cmp
inc
fnstenv
pop
shrb
dec
sub
sti
aad
xchg
loope
or
loopne
out
addb
inc
push
mov
add
in
rclb
adc
test
sbb
xchg
mov
into
aam
jns
mov
mov
jmp
icebp
call
adc
inc
lcall
aam
cwtl
or
aaa
or
sbb
push
ds
lods
loopne
fimuls
fstp
dec
fisttpll
cwtl
rorb
sti
dec
push
mov
push
dec
push
add
push
mov
and
lcall
push
push
push
insl
aad
mov
mov
xchg
in
outsl
ss
mov
cli
adc
imul
rcrb
inc
test
xorb
jecxz
imul
mov
scas
cmpsl
neg
cmpsb
and
xchg
in
add
test
dec
ss
sbb
je
cmp
fadds
pop
enter
mov
popf
pop
mov
fnsave
fstl
js
mov
aaa
cmc
mov
rclb
push
and
pop
and
jg
cmp
cmp
addr16
xchg
cltd
loope
lret
imul
push
push
aam
push
xchg
rcrl
dec
mov
sbb
jns
cwtl
stc
inc
pushf
inc
jnp
popf
pop
pop
in
mov
clc
ss
adc
xlat
and
popa
lcall
add
aad
shlb
imul
test
jne
movsb
lock
mov
dec
hlt
cwtl
inc
xor
mov
mov
dec
add
nop
inc
xor
nop
addr16
xchg
push
cmp
popa
adc
inc
movsl
out
cs
scas
icebp
leave
adc
cli
xor
fstpl
mov
insl
mov
mov
stc
lret
fistpll
mov
xchg
stos
jle
pop
cld
das
in
sbb
pop
jl
movsl
cmp
fisubrs
lods
mov
insl
pop
mov
into
jge
push
add
lcall
insb
push
sub
mov
inc
inc
jmp
adc
jae
bnd
adc
or
arpl
shl
cltd
mov
push
pop
mov
cmp
push
jmp
sbb
jb
insb
add
iret
push
xorb
ljmp
xor
lahf
and
mov
outsl
mov
sub
jae
dec
sar
mov
sti
int3
mov
mov
mov
and
test
and
dec
fucom
fdivl
push
insl
lods
mov
push
dec
test
mov
xchg
or
andb
sub
test
mov
add
mov
test
jno
cmp
inc
sbb
and
mov
jg
pop
cltd
into
mov
jns
in
xor
es
mov
icebp
push
cli
mov
pop
ds
nop
icebp
shr
push
icebp
gs
in
sbb
nopl
scas
push
mov
xor
inc
cli
mov
imul
sbb
inc
lret
cmpsb
push
clc
or
sbb
cmp
adc
test
jns
fsubr
push
mov
icebp
and
fisubl
inc
mov
gs
mov
inc
dec
push
out
insl
mov
in
aam
mov
jl
mov
adc
or
mov
cmp
outsl
je
mov
xchg
jle
data16
dec
sti
int3
jbe
mov
stos
aas
icebp
les
dec
inc
pop
test
jb
aas
sbb
and
les
popf
aas
mov
dec
addr16
jp
pop
pop
cmpsb
loop
push
dec
mov
push
jle
sbb
lock
addr16
or
adc
scas
push
or
dec
sbb
sub
add
cmpsb
ss
xor
and
jb
aam
dec
inc
outsl
sub
test
idivl
add
push
loope
notl
outsl
aam
decl
mov
xchg
shrb
aas
push
add
cmp
insl
pop
cmpb
out
inc
fcmovnbe
enter
and
mov
and
cmp
mov
pop
mov
push
gs
mov
inc
cld
out
ss
lock
aam
xchg
or
or
pop
push
and
jge
stos
xor
insl
lcall
cmp
and
int3
pop
fnstsw
pop
mov
shll
or
rclb
orl
in
xor
insl
sbb
test
jnp
subb
pop
mov
repnz
sub
adc
cli
addr16
ret
and
iret
dec
xchg
and
leave
mov
adc
pop
pop
inc
ss
mov
xchg
int3
xchg
inc
bound
test
sub
mov
stc
pop
inc
ficompl
mov
sahf
stos
and
mov
mov
pusha
leave
cmp
xor
pop
jae
scas
pop
sub
hlt
out
push
push
xchg
pop
sarb
xchg
jo
nop
lods
in
cwtl
xchg
jmp
roll
inc
sarl
xchg
cmc
dec
movsb
xchg
and
loope
imul
mulb
cwtl
aam
lret
cltd
insl
jne
inc
insl
jne
or
xchg
loopne
jne
adc
jle
add
dec
and
pop
ss
shlb
daa
mov
mov
xor
mov
xchg
mov
pop
xchg
test
inc
cmc
call
insb
lds
inc
mov
in
lahf
sub
add
aad
aad
xchg
ret
mov
scas
shrl
ja
mov
mov
mov
pushf
test
into
push
fcompl
and
seto
adc
lock
push
mov
mov
cmp
sarl
testb
mov
push
or
push
fsubrs
inc
data16
adc
roll
stc
jo
add
sub
inc
shrl
sbb
aad
cmpsb
das
nop
dec
lea
loopne
loope
test
iret
pop
fdivl
jns
pop
ret
lods
push
or
cmpb
shlb
outsl
inc
test
in
rorl
jno
jg
ret
pop
pop
repz
sub
sti
pop
add
insl
mov
js
pop
jge
sbb
bound
stc
adc
cs
imul
add
xchg
xchg
xor
adc
mov
nop
fcompl
mov
or
cmc
stos
int
test
mov
fs
push
ds
push
add
sub
into
pop
jns
fidivrl
ss
shl
stc
mov
out
clc
mov
pop
lods
xor
jae
xchg
pop
imul
add
hlt
pop
jne
push
cwtl
jae
dec
dec
scas
inc
cmp
mov
add
in
push
jmp
in
xchg
outsl
in
je
push
aas
jns
fiaddl
jnp
pusha
in
fisubl
repz
jg
sar
lcall
cmpxchg
cld
mov
insb
xchg
ret
dec
cmp
and
pop
ja
cmpsl
fneni(8087
lock
cmc
nop
popl
jo
or
int3
ljmp
jmp
sti
dec
xor
push
xor
sub
cwtl
adc
pop
mov
mov
sub
mov
lea
xor
cltd
pusha
add
sahf
repz
loopne
js
jbe
ret
in
loop
sub
test
lcall
mov
jno
sbb
jmp
mov
mov
fistpl
pop
jbe
xor
insb
add
iret
and
or
mov
cltd
push
push
pop
pop
mov
aad
sub
data16
jnp
outsl
addr16
aas
sub
mov
decl
pop
in
mov
dec
addb
dec
mov
mov
adc
jmp
mov
push
jle
ret
add
push
loop
test
jo
lock
stc
add
and
out
insl
mov
xor
xchg
call
xor
aad
add
leave
jne
pop
cmpsb
jle
movsl
stc
jmp
mov
mov
fnstsw
push
loop
dec
std
sahf
jecxz
dec
xchg
push
and
ljmp
inc
cmp
lahf
cmp
call
movsl
add
out
das
cmp
push
push
in
cmc
xor
mov
pop
dec
adc
ficoms
fs
mov
insl
fnsave
push
mov
mov
aaa
mov
fs
mov
dec
fcmovnbe
add
jl
xor
cmc
push
mov
xchg
dec
push
test
neg
hlt
pusha
scas
add
inc
push
push
lea
pusha
ljmp
movsl
stos
push
xchg
xchg
loope
in
gs
dec
std
mov
in
xchg
cmc
out
or
add
inc
rcrl
dec
scas
pop
rcrb
pop
stos
xorl
sbb
mov
sar
jne
and
jecxz
cli
mov
test
push
dec
mov
testb
ds
sbb
dec
inc
sbb
enter
imul
add
lods
xor
rcl
or
mov
adc
fisttps
mov
popf
insb
int3
dec
filds
xchg
xor
inc
jge
stos
mov
cmp
xchg
sbb
adcb
das
test
repz
iret
pop
add
dec
sub
sbb
pop
je
dec
aad
or
aas
cmp
subb
mov
daa
lret
es
jecxz
outsb
mov
xchg
pop
sbb
add
lock
in
jb
jl
cs
loope
into
es
test
pusha
cli
pop
lret
mov
dec
jecxz
in
cmp
test
in
jg
sarb
jmp
aam
sbbb
pop
mov
inc
pop
inc
lock
pop
int
mov
mov
mov
dec
je
out
or
fistps
fcmovu
scas
outsb
pop
mov
pop
xor
sub
lret
pop
lcall
mov
out
out
pop
mov
or
sbb
mov
bound
cmp
fldl2t
pop
or
pop
aad
cmp
pop
push
inc
and
cli
jmp
mov
xor
push
mov
daa
ds
mov
std
mov
xor
stos
jo
xchg
fwait
cmp
pushf
std
sti
leave
ret
test
loop
and
xchg
mov
sahf
add
xchg
test
sbb
insl
jge
mov
mov
inc
sbb
je
dec
adc
mov
mov
idivb
dec
jge
xchg
int
xchg
andb
jge
lahf
mov
jne
mov
fsubl
xchg
sbbb
sub
out
std
imull
fstps
and
mov
imul
inc
pop
pop
xchg
shr
iret
addr16
gs
std
leave
jl
jp
movsl
hlt
mov
incb
adc
mov
dec
sbb
mov
dec
dec
decl
ss
call
icebp
fstps
push
repz
add
mov
xor
inc
sarl
xlat
pushf
aaa
nop
insb
jno
push
jecxz
shl
push
cwtl
dec
add
jbe
lahf
cmp
push
mov
inc
push
roll
dec
in
pop
mov
pushf
mov
iret
lods
imul
dec
ret
in
inc
sub
mov
stos
jmp
and
dec
movsb
stos
test
lcall
mov
or
adc
and
insb
push
adc
dec
pop
push
out
stos
mov
ja
or
sbb
mov
test
xor
inc
add
addr16
and
mov
out
dec
pop
je
je
dec
mov
adc
mov
push
rol
ss
mov
sub
lods
mov
push
inc
test
push
fsubs
inc
xchg
or
xor
push
ret
scas
outsb
iret
push
gs
mov
push
aas
ret
and
scas
inc
test
mov
pop
lea
in
mov
shlb
push
xchg
cmpsb
push
and
lcall
in
cmp
add
pop
imul
or
dec
push
mov
cwtl
sub
mov
or
lds
shrb
mov
xchg
cmp
sub
push
jecxz
cli
jnp
daa
adc
dec
or
divl
pusha
int3
das
dec
push
pop
aad
jb
popa
cmpsl
cmp
cmpsb
sub
sub
xchg
pop
push
pusha
jnp
popa
in
in
jmp
xorb
push
xor
pop
mov
mov
pop
mov
adc
pop
les
add
aaa
test
shr
clc
pusha
sbb
rcll
sub
push
nop
stos
or
bound
rcl
add
xor
sub
and
fidivrl
pop
in
push
mov
icebp
mov
mulb
cmc
jg
idivl
ss
jnp
dec
in
mov
sub
dec
mov
lods
push
lcall
xchg
iret
repnz
sub
cwtl
mov
mov
xor
push
imul
and
fistpl
xchg
or
jle
iret
in
dec
jmp
jbe
test
shll
dec
ja
jne
mov
push
cmp
test
hlt
push
and
mov
clc
cmpsl
ret
push
dec
ret
sub
popf
clc
into
repnz
orl
fs
add
imul
push
dec
fs
pop
in
pop
mov
jb
inc
sub
jno
add
jg
into
shlb
jge
cmp
andb
add
adc
lret
mov
ret
dec
and
push
into
movsb
pop
sbb
les
or
lea
jecxz
xchg
cltd
rorb
cmp
lock
jo
xchg
add
outsb
fildll
bound
cmp
pop
mov
mov
aas
add
loop
shrb
jnp
stos
adc
icebp
pop
mov
outsl
cmp
lds
inc
sub
xchg
xchg
pop
jge
dec
ja
inc
loopne
in
mov
shrb
xchg
scas
fcmovne
sbb
dec
xchg
jmp
mov
mov
in
cmp
or
push
sub
and
test
sbb
xor
xor
out
test
mov
shrl
pop
imul
cltd
push
les
out
ret
scas
jbe
ds
and
call
adc
add
lcall
mov
sarb
xchg
mov
sti
out
dec
ret
mov
test
into
mov
call
cmpsl
sub
ss
sti
adc
popa
loop
xchg
adc
lret
inc
popf
dec
pushw
push
pop
leave
lods
lea
xchg
dec
popa
negl
insb
xchg
inc
jle
daa
pop
adc
loope
xor
or
addr16
clc
inc
cwtl
mov
inc
adc
enter
mov
inc
jmp
iret
mov
and
das
mov
lock
and
mov
adc
inc
icebp
cmp
or
pop
adc
stos
stc
or
pop
aas
mov
in
or
mov
in
ljmp
sub
xchg
dec
cmp
dec
xlat
flds
pop
xchg
jo
push
sti
ret
sarl
xchg
addl
cmp
xor
fdivl
mov
mov
mov
xorb
imul
test
add
icebp
jmp
push
add
mov
lods
jg
jle
aad
sbb
or
das
mov
pop
lods
popa
fstps
enter
and
lea
add
ret
cld
loope
lret
cmp
add
fsubrl
loope
and
cmpsl
testl
sbb
pop
jnp
xchg
fwait
fs
sub
incb
cmp
int3
pusha
xor
add
dec
lcall
inc
sbb
add
xor
insb
fadd
cs
jno
push
jecxz
js
mov
dec
cltd
xchg
push
push
iret
mov
testl
imul
stc
in
sbb
in
hlt
sub
push
mov
xchg
mov
mov
pop
std
mov
mov
loopne
xchg
leave
xchg
lret
sarb
into
ja
orl
daa
movsl
jne
push
or
jno
je
cmp
in
lcall
addr16
insl
lods
mov
xchg
inc
and
add
jp
fldlg2
int3
xchg
inc
push
leave
sub
mov
mov
lahf
mov
test
in
cmp
das
jae
pop
std
sbb
cmp
mov
fdivrl
adc
push
jns
jge
rcrb
leave
addr16
cmp
push
jp
jg
or
mov
mov
pop
or
inc
pop
dec
mov
mov
push
inc
mov
pop
mov
leave
pop
sbb
into
daa
mov
dec
cltd
ljmp
fucomi
sub
add
fst
adc
and
sbb
jns
insl
pop
popa
ficompl
jp
add
dec
jo
xor
sbb
sub
int
xchg
cmc
mov
cmp
mov
adc
test
lds
sub
mov
pop
add
xchg
fs
inc
sbb
pop
cmpb
or
cmpsb
sahf
cwtl
fxtract
std
roll
fldlg2
fwait
xor
add
gs
cmp
je
mul
and
add
push
pop
or
mov
imul
sahf
out
lret
in
push
sub
pop
lea
add
hlt
fisubrs
je
add
cld
and
imul
subb
es
and
fidivrl
mov
pop
fisubrl
adc
rcrl
std
pop
into
cmp
dec
push
fldl
mov
jecxz
xor
pop
xchg
cmc
mov
jl
inc
mov
adc
pushf
sub
fldcw
int
pusha
int3
mov
cmp
in
cmp
mov
jmp
push
lret
nop
test
data16
push
mov
ret
xchg
enter
mov
sbb
sub
push
lods
fcomp
jmp
cmc
iret
loop
xchg
fucompp
clc
push
shr
inc
add
or
sbb
cltd
std
add
or
inc
outsl
inc
jne
mov
pop
inc
rcrl
pop
test
daa
dec
add
push
clc
push
mov
ja
xchg
mov
jns
dec
inc
lds
jo
loope
stos
iret
ja
xchg
mov
or
lret
cltd
test
jae
lcall
movsb
xor
dec
out
gs
xor
and
out
sbb
pop
push
repnz
pop
mov
xchg
mov
std
cs
stos
loope
push
inc
stc
push
pop
jge
mov
insl
sub
push
mov
cmpsl
cmp
popa
hlt
xor
mov
xchg
sar
xor
rorb
imul
enter
mov
lods
int
ja
ljmp
cmpsb
mov
fcomps
sbb
pop
ret
sub
ljmp
mov
mov
sahf
inc
mov
enter
dec
call
dec
cmp
push
shld
add
or
lret
cli
jo
and
fsubrs
call
lock
das
movsl
cli
sbb
sbb
dec
leave
mov
sbb
mov
xor
adc
dec
pop
pop
push
xor
and
popw
inc
lret
push
cmp
xor
mov
ljmp
nop
mov
mov
roll
pushl
jnp
insb
leave
sub
lea
push
lea
mov
and
int3
xchg
loop
jge
shll
rolb
addl
fstl
sbb
fdivrs
insb
stc
xor
xchg
inc
lahf
imul
jecxz
popf
movsb
cmpsb
test
cli
cld
adc
bound
cltd
hlt
sbb
sub
std
pop
fs
repnz
push
in
les
jmp
dec
enter
test
loop
xor
xchg
inc
jb
in
jg
jbe
shrl
inc
pusha
adc
pushf
lahf
int
push
pop
cmp
lret
adcl
push
incb
pop
xchg
inc
mov
int3
pusha
sub
cmp
mov
out
dec
mov
jne
inc
test
loopne
rclb
loopne
jecxz
in
rcrb
sbbl
add
and
les
repz
gs
and
push
mov
fnstenv
mov
adc
cmp
mov
or
push
pop
inc
jne
dec
dec
mov
add
insl
and
push
add
mov
jne
in
mov
cs
lcall
jmp
fsub
jmp
jne
outsb
icebp
cmpsb
mov
decl
int
nop
lods
dec
or
fs
adc
sbb
popf
ljmp
stos
test
les
inc
lea
jg
xor
mov
decl
mov
int3
mov
shrb
in
movsl
aaa
pusha
sbb
push
sbb
sbb
cmp
pop
inc
aaa
ja
in
je
lret
pop
sbb
sub
mov
mov
loopne
in
push
stc
lret
int
lea
es
notb
pop
jle
lock
jb
ljmp
mov
std
pop
jae
sbb
jle
addb
or
adc
js
jno
mov
mov
sbb
pop
dec
push
inc
sub
xorb
lods
mov
cmpsb
xor
pop
negl
mov
sbb
sub
mov
hlt
call
jp
in
das
mov
call
mov
jns
push
xchg
inc
push
or
inc
repnz
adc
shrl
mov
fs
ret
dec
xor
xchg
jl
adc
shlb
je
pop
rcrb
call
mov
out
xor
sub
cmp
jns
xchg
out
imul
pop
jns
lret
cs
push
imul
cli
pop
out
push
in
sub
fstl
lret
fmull
stos
xchg
inc
jb
stc
mov
jl
jb
cbtw
add
jmp
mov
cmp
mov
adc
push
pop
jecxz
jne
mov
out
adc
daa
mov
pushl
xchg
out
aaa
sbb
mov
sub
xor
xchg
push
ss
lahf
outsl
test
test
lods
inc
inc
mov
adc
sub
mov
jl
fcomp
or
loopne
cli
movsb
jae
cwtl
in
and
push
dec
popa
adc
arpl
pop
iretw
nop
sarb
scas
in
scas
push
sub
popf
xchg
or
adc
pop
outsl
cmc
and
adc
outsb
nop
test
jl
mov
cmp
leave
dec
xor
dec
add
xchg
sahf
jne
scas
dec
and
mov
mov
in
shlb
frstor
and
inc
adc
aad
add
dec
sahf
in
or
movl
scas
ds
je
jnp
dec
mov
loopne
pop
xor
data16
mov
jne
bound
test
mov
adc
sti
push
push
xchg
or
or
aaa
loopne
dec
jg
subl
clc
ljmp
sti
scas
dec
dec
mov
sti
lret
xchg
adc
ret
movsl
jb
cltd
mov
iret
xchg
scas
in
std
pop
mov
sbb
adcl
push
test
lods
test
lcall
cmpsb
popf
sbb
push
cmp
imul
sub
mov
adc
nop
mov
daa
call
jmp
or
mov
cmp
popf
push
xchg
mov
sub
push
xchg
cmp
mov
jge
inc
pmullw
pop
fwait
out
cli
inc
pushf
into
cmp
ja
pop
mov
push
lock
leave
sarb
mov
xlat
nop
rcr
mov
das
jb
loopne,pn
push
fs
in
adc
cmp
pusha
fsubrs
pop
or
mull
jg
aaa
fcmovb
mov
mov
pop
je
xchg
je
or
inc
ljmp
dec
xor
push
lcall
and
jno
stos
je
xchg
push
das
dec
out
scas
pop
mov
in
loopne
and
pop
mov
mov
dec
sbb
mov
in
lret
xor
fldl
aaa
xchg
dec
inc
xor
jmp
xchg
sbb
inc
push
dec
pop
pop
andb
or
push
sub
mov
mov
and
leave
mov
cltd
mov
pop
cmpsb
cmp
jecxz
jg
aaa
xchg
jo
inc
cmp
xor
cmp
push
out
sbb
push
and
adc
mov
or
std
xchg
fsts
movsl
in
sbb
ljmp
sbb
push
in
rolb
ss
loopne
add
xchg
sahf
pop
pop
pop
and
ficomps
jmp
sbb
pop
sbb
int3
ljmp
ret
lods
add
rorb
pop
imul
addr16
inc
xchg
fisubrs
ds
adc
dec
aad
add
in
repz
sub
mov
fs
pop
cmp
mov
adc
xchg
fmul
jno
sub
daa
daa
dec
push
mov
dec
xlat
in
or
nop
cmc
cltd
xchg
mov
lods
xor
jl
sub
or
fcomps
push
cld
cwtl
xchg
jp
cld
mov
test
inc
loop,pt
scas
inc
in
xchg
jne
pop
cmp
push
xor
cmp
in
sbb
push
push
mov
sub
outsl
imul
je
call
in
out
dec
pusha
ficoms
dec
scas
jnp
or
mov
dec
sarb
pop
shlb
push
add
inc
mov
movsl
push
adc
bound
lods
cmp
outsb
mov
test
test
scas
into
xchg
xor
and
dec
bound
shl
std
inc
fnsave
movsl
test
mov
sahf
xor
lcall
aas
in
shrb
add
sbb
push
stos
js
dec
jle
xor
adc
insb
pop
mov
mov
repnz
outsl
fisttpl
arpl
aam
mov
pop
leave
rolb
fnstenv
xor
and
pop
push
jp
lret
sbb
jae
fscale
js
pop
jmp
push
ljmp
mov
in
stc
pop
loop
clc
jbe
xchg
addr16
adc
mov
call
xchg
shlb
push
sub
test
mov
jl
movsb
fiaddl
rorl
xor
jno
fstpl
aad
sbbb
arpl
jb
mov
rorb
addb
in
sbb
clc
mov
dec
lcall
adc
int3
jecxz
js
ljmp
mov
add
pop
notb
pop
xor
jge
cmc
push
xor
pop
clc
aad
bound
lahf
jle
add
call
mov
push
adc
aam
data16
push
cmp
rolb
mov
pop
pop
pop
xchg
or
mov
ljmp
dec
mov
cmp
cmp
lahf
repz
mov
in
mov
lock
es
inc
ror
jle
sub
cmp
xor
cmp
mov
sub
xor
inc
mov
scas
test
mov
push
fistps
or
movb
ret
ror
lcall
std
shl
fisttpl
pusha
mov
jo
add
fidivs
mov
cmc
pop
shrl
lret
cmp
lret
jne
cltd
sub
rol
call
mov
adc
and
imul
push
fs
lods
jae
inc
inc
pop
mov
xlat
add
cmp
idiv
sti
lock
test
loop
dec
jne
pop
cmc
ret
mov
add
or
outsl
mov
popa
icebp
repz
cmp
xor
imul
in
hlt
es
mov
mov
pop
iret
jp
lock
mov
sbb
adc
cmp
int
jl
outsb
dec
sti
iret
add
adc
fcomps
enter
orb
or
cmc
popf
imul
jmp
or
inc
outsl
xchg
in
mov
xlat
in
in
imul
jb
lods
pop
pop
mov
popa
insb
int
xchg
stos
cs
out
mov
in
js
outsl
lds
mov
pushf
cmp
sub
mov
fldenv
rcll
mov
leave
loopne
mov
and
shlb
jns
fidivl
inc
dec
sbb
mov
and
rolb
adc
loopne
loopne
jae
lds
fs
lock
xor
std
imul
lcall
add
cli
cmpsl
ret
test
mov
subw
inc
xor
mov
jp
mov
cmp
into
lcall
cmp
xor
fnstcw
sahf
sub
push
mov
mov
mov
les
jne
pop
jg
sub
repnz
scas
test
jns
mov
in
mov
jb
outsb
pop
sbbb
cli
xchg
aad
mov
ss
cmp
pop
mov
or
call
or
xor
pusha
or
pop
es
xchg
mov
fsts
js
scas
push
daa
mov
fidivrs
fs
clc
mov
scas
xor
pop
fisttps
fmuls
inc
inc
movsl
xchg
stc
je
icebp
ret
push
jne
inc
and
mov
out
push
lods
mov
arpl
pop
push
push
popf
lcall
ret
les
jo
aaa
dec
aas
jl
cmp
push
xor
int
shll
inc
sub
jnp
fstps
cmp
push
pop
inc
shrb
and
ret
xor
push
data16
loopne
inc
dec
gs
out
bound
je
mov
daa
scas
cmp
daa
gs
pushf
imul
mov
push
enter
cli
push
jb
pop
xchg
nop
add
push
pop
int3
imul
cmp
hlt
mov
cmpl
jl
push
jns
pop
jecxz
sub
adc
scas
inc
dec
enter
fs
cmp
call
or
mov
mov
in
jl
push
jg
rcrl
xchg
add
and
pushf
and
push
cmp
dec
jns
jge
das
jae
xchg
aas
fsubrl
movsb
cmpsb
inc
data16
jmp
xchg
adc
out
lock
mov
jge
pusha
shlb
movsl
outsb
stc
add
push
xchg
test
test
cmpsl
or
xchg
jnp
mov
dec
in
sbb
jne
call
inc
jg
sti
sub
xor
fs
lds
pop
xor
mov
ret
arpl
lea
movsb
pop
insl
pop
ret
repnz
ret
inc
sub
scas
mov
mov
push
daa
jge
cmp
pop
push
sub
jae
mov
mov
cmp
mov
ficoms
or
mov
lret
jge
ss
pop
cmp
adc
cmp
fisttpll
add
push
cmp
sub
ljmp
adc
test
ljmp
pusha
aam
add
int3
cmp
cmpsl
sub
push
call
jo
add
push
test
push
repz
xchg
je
in
cmp
mov
lds
stos
inc
mov
mov
dec
cmp
sbb
pop
jmp
cli
sbb
mov
call
lahf
int3
lret
cmp
mov
in
popf
sbb
jb
jae
imul
push
daa
lock
stos
iret
inc
je
lret
ds
or
dec
ss
pop
mov
lods
in
hlt
push
sbb
jmp
mov
xchg
xor
adc
ja
and
push
test
insl
jmp
sti
popf
adc
dec
inc
jmp
sbb
dec
xchg
test
and
xor
shll
les
imul
push
arpl
insb
xlat
scas
xchg
std
mov
cmpl
push
and
sub
je
push
mov
fists
pop
cwtl
mov
cs
push
jo
mov
mov
push
mov
mov
pop
rclb
mov
popf
fstpl
cmpsb
inc
jno
sub
xchg
idiv
push
sti
adcb
mov
push
mov
sti
dec
sbb
pop
pop
shlb
fmull
cmp
into
dec
test
xor
mov
lahf
aad
mov
loopne
je
adc
stos
scas
stos
repz
subb
data16
fildll
cmpsl
and
jb
xor
push
hlt
pop
inc
sub
mov
jl
mov
cli
fimuls
mov
enter
shll
and
mov
push
pop
dec
xchg
mov
in
adc
arpl
andb
mov
sub
dec
shlb
sbb
push
cld
addr16
inc
popf
mov
sbb
loopne
js
repnz
mov
mov
cltd
lret
xchg
add
push
or
ret
sarb
mov
inc
jg
sub
mov
and
stc
push
fimuls
cs
push
cli
adc
lcall
in
pop
adc
js
adc
xlat
inc
push
in
test
loope
or
aaa
mov
aas
xchg
dec
xchg
pop
or
pop
lds
xor
push
nop
sbb
movsl
movsl
pop
dec
pop
lock
push
dec
cwtl
hlt
int
mov
mov
movsb
xchg
mov
sub
or
into
into
adc
insb
sbb
mov
lcall
sub
add
or
pop
mov
mov
push
shrb
add
sti
bound
aas
pushl
inc
mov
in
jmp
inc
shl
jo
or
push
sbb
xchg
pop
imul
push
push
loop
mov
test
repz
cltd
push
mov
add
mov
bound
aam
aad
or
or
sub
dec
es
adc
pop
fidivs
pop
lahf
fildll
add
sarl
outsl
enter
subb
stos
pop
jl
and
or
add
movsl
add
xchg
mov
sbb
sahf
clc
mov
sahf
mov
popf
aaa
mov
or
sbb
ds
mov
xor
lahf
repz
gs
std
stos
xchg
lret
jp
xchg
popf
cld
test
shl
aad
cmp
and
fs
iret
add
jecxz
push
adc
xchg
inc
and
xor
aas
out
lret
and
push
jg
rorb
adc
out
inc
push
cmp
shlb
rcll
addr16
cmp
popf
mov
sub
int
nop
cmp
sbb
lcall
or
cwtl
popa
adc
std
cmc
call
je
dec
cmp
loopne
push
mov
cmp
fsts
iret
xchg
sar
ja
fdivrs
mov
cmp
test
xchg
rclw
rclb
jl
or
cmp
cmp
jl
jns
mov
sub
and
mov
cld
pop
std
dec
jno
pop
nop
scas
add
dec
lahf
loopne
cmp
popa
mov
shlb
in
stos
mov
ss
fs
stc
shrl
shlb
sahf
fs
lahf
mov
ret
pusha
test
popa
mov
and
cmpsb
sub
mov
pop
xchg
sub
mov
add
lods
cmove
ja
mov
mov
in
hlt
cmp
aas
sub
jno
sub
loop
push
daa
add
sbb
movsl
push
push
ss
xchg
out
jae
and
lret
push
and
clc
cwtl
inc
mov
pop
imul
enter
fneni(8087
and
jns
mov
adc
jmp
cmp
cmp
pop
adc
repnz
sti
mov
insb
aad
sbb
nop
repnz
add
add
ja
lods
or
cmp
jb
inc
jmp
mov
out
fstpl
mov
pop
adc
jge
mov
fmull
adc
aad
xorb
add
arpl
outsb
test
jo
jno
push
fcoms
push
ret
sub
cs
data16
xchg
dec
push
lods
pop
inc
movsl
mov
adc
bound
enter
call
repnz
mov
js
in
mov
js
hlt
xorb
pop
mov
shll
jo
mov
fnstsw
outsl
lock
cmc
jbe
popa
push
pop
sti
sub
mov
or
push
out
ds
cltd
dec
jne
out
dec
mov
out
sbb
in
dec
dec
sbb
andb
aaa
ret
dec
adc
push
push
adc
cs
jecxz
lods
cmp
enter
jno
int
cmp
das
xchg
xchg
cmp
and
sub
pushf
popa
jecxz
mov
push
in
lret
sbb
inc
ja
mov
jo
and
cli
push
push
push
inc
cmp
aas
sbb
fnstcw
movsb
pop
fwait
movsl
repnz
mov
aad
loopne
in
mov
push
rcr
add
jnp
ja
or
lret
push
or
cmp
xchg
lret
push
and
loopne
hlt
test
jns
scas
mov
scas
mov
jmp
popf
in
das
nop
add
dec
sub
xchg
rcrl
fstps
inc
std
jns
xchg
xor
pop
mov
insl
pushl
dec
cmp
stc
daa
mov
dec
into
ret
iret
out
add
out
jge
int
cli
jns
sti
push
dec
adc
mov
fwait
and
bound
shrb
adc
push
sub
xchg
dec
repz
test
std
roll
xchg
jp
in
js
xor
push
cmp
les
sbb
lods
ja
int3
std
ret
pop
movsb
sbb
sbb
cmp
dec
out
test
or
adc
pushf
repz
aas
mov
mov
dec
ljmp
repnz
jae
cmp
scas
fnstcw
push
ret
scas
sub
jg
mov
mov
and
pop
mov
popa
push
inc
add
push
scas
movsl
cmp
stos
pusha
jns
pop
fildl
shlb
push
pop
mov
imul
push
xor
jl
pop
iret
cld
out
cltd
rclb
into
shlb
mov
pause
stc
lods
movsl
jnp
jge
lods
mov
stc
icebp
mov
pop
daa
xor
cmp
dec
outsl
pusha
ljmp
mov
iret
jne
push
fadds
push
test
jg
dec
sarl
rcr
jg
in
stc
into
icebp
lret
xchg
add
es
push
aas
cwtl
loope
adc
sbb
cli
out
imul
inc
mov
repnz
sbb
fwait
and
vorpd
cmpsl
or
mov
mov
xchg
rorb
cmpsb
ret
mov
inc
fdivrl
hlt
aad
movsb
mov
jge
pop
mov
and
pop
xchg
mov
je
mov
rorb
std
jg
add
push
adc
leave
paddsb
mov
les
sarl
dec
or
dec
push
or
lret
out
test
mov
test
in
aam
into
and
loop
jmp
ret
xchg
cmp
pop
test
mov
xor
stos
jge
sub
movsb
leave
inc
cmp
and
mov
fs
adc
mov
leave
jo
dec
jb
mov
pushf
mov
cmpsl
mov
mov
cmc
out
aaa
add
mov
pusha
movsl
je
or
jmp
pop
and
jns
mov
sbbb
sbb
fwait
sbb
in
mov
out
pop
push
ret
movsl
stos
push
fcoms
test
sub
frstor
add
push
jmp
int
notb
xchg
jle
xchg
mov
out
and
std
in
out
pop
enter
arpl
movb
adcl
pop
pop
daa
sub
adc
addb
sbb
call
push
repnz
in
and
subb
cli
jo
cmc
xor
inc
or
xchg
sbb
and
cltd
push
inc
shrb
aad
add
scas
adc
and
loop
int3
aam
xor
pop
mov
and
adc
cld
div
lea
test
mov
addr16
or
aam
mov
xor
mov
jns
sub
dec
add
ljmp
cli
sbb
sti
clc
adcb
dec
outsb
es
and
push
ret
out
jmp
jl
inc
test
cmc
mov
lods
dec
xchg
clc
xchg
mov
pop
loopne
test
cltd
xchg
mov
and
fstl
cmp
int
push
popa
mov
ret
ret
movl
and
pop
push
orb
jl
xchg
mov
cltd
and
decb
call
enter
data16
cmpsb
imul
imul
xor
mov
add
mov
arpl
out
lods
jg
lock
fisttps
xor
test
adc
in
add
cmpsb
or
xchg
add
clc
inc
stos
inc
rcrl
and
fstpl
arpl
aaa
loope
xor
push
sub
push
pop
aam
dec
cltd
arpl
sub
adc
std
hlt
mov
pop
outsb
dec
in
mov
pop
repnz
les
or
aam
aaa
cmp
nop
subb
fs
mov
pop
rcl
in
pop
jl
shlb
leave
cmp
jns
paddw
mov
xchg
fstps
add
jmp
or
or
sub
pop
inc
xlat
mov
pushf
pop
std
mov
imul
sahf
cld
sub
push
and
inc
pop
adcb
lea
xchg
jns
or
sahf
sahf
jle
xor
push
xchg
dec
push
sar
clc
mov
adc
dec
jbe
or
add
xchg
adc
dec
pop
jo
fs
js
add
int
dec
pop
push
imul
out
adc
shlb
cmpsl
js
and
rorb
adcl
ficoms
into
subl
mov
stc
sub
test
adc
stc
jp
fimuls
scas
lds
out
mov
push
movsl
dec
arpl
and
push
mov
and
aaa
cmp
sbb
out
std
lods
lea
aas
push
inc
add
jmp
inc
mov
icebp
pop
mov
and
data16
lock
and
and
aam
xor
mov
push
xchg
pop
lods
jae
jmp
outsl
xor
dec
dec
mov
inc
sub
pop
or
rcr
popa
cwtd
jmp
gs
push
sar
leave
jmp
xchg
mov
inc
cltd
movsb
pop
push
mov
lods
fidivs
xchg
xchg
xchg
flds
ret
scas
pop
sbb
sub
inc
inc
mov
pop
cli
test
movsl
gs
pop
add
insl
in
shrl
jl
sub
sbb
cmpsb
mov
push
jnp
ljmp
subl
sahf
stos
and
adc
es
in
jbe
and
addl
mov
or
aam
in
mov
inc
and
pop
push
cmp
sbb
dec
ljmp
inc
xchg
in
xor
fcomp
aaa
ja
popa
cwtl
gs
sahf
cmpl
dec
loop
out
dec
repnz
xchg
das
mov
insl
pop
or
push
repz
fstl
daa
xor
mov
outsl
jle
adc
movsl
jae
lahf
or
stos
sbb
cmp
stos
out
cli
shll
push
cmp
int
pop
ret
add
fadds
adc
jne
scas
push
cli
loope
in
inc
mov
ret
push
or
ret
aaa
push
test
outsl
add
jmp
ss
jbe
in
ljmp
fisubrl
or
aas
xlat
call
rcll
sub
mov
lcall
pop
mov
mov
adc
sub
lret
add
xchg
dec
mov
ljmp
loopne
inc
lods
das
enter
sbb
xchg
daa
testb
sbb
inc
push
test
sub
scas
dec
test
xor
sub
daa
das
int
adc
inc
sarl
jns
ficomps
cmc
xchg
fidivrl
mov
xor
lock
sbb
sbbb
pop
bound
out
adc
and
mov
pop
aas
add
jae
fs
popa
mov
imul
and
aam
fmull
das
dec
add
scas
rcll
mov
mov
cmpsb
sbb
jmp
sub
cmpl
faddp
pop
lods
jl
cli
sub
mov
adc
dec
js
shlb
mov
dec
sub
cmpsb
xlat
cmp
data16
push
xchg
in
inc
int3
add
push
dec
add
sti
ljmp
leave
rcrl
stc
mov
lcall
sbb
jno
aas
popl
ljmp
mov
mov
aam
test
mov
pop
cmp
push
ds
mov
add
pop
mov
sub
lock
sbb
fistpll
shrl
sbb
cmp
ret
mov
arpl
mov
push
inc
mov
pop
aad
lcall
pusha
xor
imul
mov
adc
pop
popf
push
ss
pop
insl
or
push
cld
sbb
roll
mov
or
mov
int3
lea
jmp
mov
in
push
or
push
inc
sti
and
inc
lock
jle
push
add
push
cmp
jnp
adc
sahf
lods
mulb
mov
shll
mov
in
cltd
cmp
jnp
ficomps
nop
scas
xchg
stc
movsl
sbb
sbb
inc
jne
out
fidivrs
cmp
inc
inc
test
imul
mov
js
loop
mov
and
pop
pop
push
mov
lcall
and
jle
sbb
adcb
jecxz
in
cwtl
cli
inc
gs
push
mov
dec
mov
or
pop
or
sub
into
addr16
sarb
test
inc
add
sbb
nop
cmpsb
push
push
loop
or
stos
push
es
push
lahf
pop
push
xchg
jge
pusha
mov
cli
ss
mov
xchg
ficoms
jp
add
pop
cwtl
pop
enter
pop
fwait
sub
mov
test
int3
rorl
pop
adc
sub
out
into
pop
sub
pop
or
push
or
imul
dec
in
adc
cltd
push
lahf
or
lods
and
jne
icebp
leave
cmpsb
sub
rcrl
stos
dec
lock
fbstp
outsl
rcrl
in
pop
into
das
mov
repnz
push
btc
test
lock
sub
and
cmc
shll
dec
mov
mov
push
xchg
pop
popa
into
mov
lock
push
stc
jle
jg
pushf
mov
sahf
cltd
jl
cmp
dec
xchg
mov
adc
jnp
repnz
js
mov
inc
or
sub
loope
add
out
ret
std
arpl
dec
mov
je
aam
dec
cmpsb
mov
cmpsl
call
sub
std
movsl
pop
xor
lcall
cmp
testl
jb
inc
pop
adc
mov
inc
pushf
sarl
adc
insl
cmp
sarl
aaa
dec
ss
jp
pop
and
xchg
pop
ret
or
or
add
xchg
mov
ret
popa
mov
pop
adc
inc
test
iret
xor
int3
dec
add
jb
mov
outsl
pop
jbe
xor
sub
xchg
cld
inc
cltd
xchg
push
das
sub
movsl
mov
dec
inc
push
xchg
ds
fsubl
inc
je
sbb
or
push
push
into
jmp
push
lods
or
sub
mov
addr16
hlt
adc
or
in
cld
sbb
mov
fucomp
push
lret
inc
clc
lea
pop
stc
pop
cmp
jle
dec
or
iret
das
aad
jo
dec
popf
test
add
pusha
cmpsl
mov
lods
sbb
gs
sar
fst
jno
mov
arpl
push
ds
sahf
mov
fldcw
in
mov
dec
in
pushf
dec
xor
push
lods
stos
mov
hlt
out
lods
pusha
sbb
insl
xchg
mov
jo
lods
sub
push
test
mov
shrb
inc
push
cltd
xchg
imul
das
sahf
clc
mov
aam
jl
add
icebp
lods
cltd
imul
lods
jno
pop
pop
or
mov
sahf
or
sbb
push
cmp
sahf
jne
jne
sub
or
mov
jecxz
lahf
fs
mov
es
sbb
mull
push
mov
pop
cli
inc
dec
mov
cwtl
clc
lcall
pop
dec
daa
adc
daa
mov
xchg
shll
fs
push
addr16
test
jg
shll
sbb
push
ret
mov
add
pop
in
adc
inc
and
fidivs
xor
or
ss
inc
xor
jbe
or
cs
cmpsl
dec
and
cmp
mov
das
popa
repnz
add
xchg
sahf
loop
cmpsb
dec
imul
das
cmc
and
add
mov
or
cmpsl
jmp
pop
aad
jo
xchg
jnp
sub
push
jmp
xorb
sub
insl
push
outsb
xchg
loopne
popa
in
ret
out
repnz
jmp
cs
rcll
and
aad
sub
es
jmp
and
pop
add
iret
bswap
lret
sarb
xchg
outsl
loop
mov
xchg
mov
addl
mov
in
ljmp
add
inc
cli
loop
inc
sbb
aas
gs
push
jl
push
subb
insb
icebp
sbb
imul
add
mov
mov
fs
int
or
pop
mov
insl
jae
aad
cmp
sbb
mov
jecxz
test
adc
sub
push
das
mov
jmp
mov
fcoml
xlat
pusha
js
push
pop
cmpsl
xchg
daa
sbb
and
arpl
clc
xchg
sbb
mov
test
sbb
sub
sahf
mov
and
xchg
insl
add
mov
dec
push
in
cltd
jmp
pop
addr16
adcl
lahf
mov
mov
sub
movl
loope
jge
jle
pop
repnz
xchg
sbb
fiadds
sub
iret
adc
mov
mov
addr16
js
std
ficomps
jl
fs
dec
daa
fcoml
aam
out
repz
call
mov
test
enter
xchg
dec
sub
lock
call
mov
mov
lds
jns
inc
mov
lret
cmp
adc
jle
mov
test
jbe
cmp
les
dec
loopne
sarb
mov
test
xchg
push
pop
lret
push
dec
jb
in
add
cwtl
rorb
dec
or
pop
es
sub
xchg
daa
xchg
or
cmp
mov
scas
jns
ds
iret
xchg
add
pop
mov
les
fnstsw
xor
mov
or
movsl
in
mov
in
xor
sar
xchg
mov
lods
stos
addb
cs
lcall
cld
inc
jns
mov
out
repz
ffree
cmpl
jbe
shl
roll
push
shl
pop
test
mov
cmp
rorb
and
push
icebp
mov
push
cld
mov
push
xchg
out
popa
jmp
out
es
sub
out
cmc
adc
fucom
sbb
inc
mov
ds
mov
push
pop
mov
sti
incl
nop
pushf
cli
cmpb
xor
mov
mov
enter
push
std
loope
xor
xlat
dec
loop
mov
and
pop
mov
outsb
scas
pushf
pop
mov
mov
and
adc
sti
outsb
lods
pop
jmp
and
pop
add
and
outsl
sbb
call
or
lock
outsb
xchg
aad
xchg
das
lahf
sbb
jmp
sub
in
movsb
jae
out
gs
mov
arpl
mov
ret
hlt
dec
xchg
xchg
sbb
jl
gs
mov
das
cmp
pop
and
jecxz
add
dec
loope
adc
int3
pop
dec
pop
enter
push
js
sbb
lret
sbb
or
ret
cmp
pop
jmp
push
cmp
cld
out
arpl
jp
or
jns
sub
pusha
cld
in
movsb
movsl
push
cltd
mov
and
enter
jnp
jae
loop
xlat
fsubs
dec
test
dec
out
pop
fiaddl
cs
mov
cmp
popa
or
mov
je
fcmovnb
jo
std
das
dec
mov
and
cmc
aam
mov
fs
cwtl
dec
hlt
repz
sub
call
xchg
adc
push
lock
dec
mov
in
add
daa
xor
sub
lods
push
fstpl
fadds
or
and
inc
inc
add
xchg
push
fisttpll
mov
and
cmp
loope
inc
sahf
imul
and
iret
push
orl
push
fistpl
ja
add
or
in
pop
ljmp
mov
dec
add
loopne
scas
xchg
and
push
xchg
mov
jae
mov
sub
test
mov
cmp
cmpsb
loop
cmp
lods
adc
pushf
mov
pop
add
push
push
test
movsl
pop
push
sbb
mov
aad
movsl
je
dec
fs
dec
inc
adc
dec
test
sbb
aas
test
xlat
inc
cmp
lea
cli
xchg
mov
lcall
daa
mov
push
out
or
cmp
test
adc
add
push
stc
xchg
jmp
lds
jae
or
or
adc
pop
xor
pop
mov
ret
stos
add
mov
cli
xchg
cmp
psllw
pushf
sub
add
aas
addr16
mov
add
cmp
and
sahf
xchg
mov
aad
cmp
push
mov
sti
xor
mov
test
in
pop
mov
sub
sbb
add
loopne
iret
xchg
shlb
daa
add
cmp
je
inc
movsl
pmullw
adc
shrl
lds
sti
jb
inc
pop
aam
daa
dec
jnp
pushf
lods
repnz
and
and
cmp
arpl
adc
push
jge
xor
flds
sub
das
shl
fcompl
jmp
fildl
pop
std
inc
fisubrs
or
int3
call
loop
fadds
jnp
pop
rcrl
mov
clc
dec
dec
insb
sub
popa
jecxz
idiv
imul
pop
mov
add
int
test
ret
or
dec
aad
jge
xchg
cmpsl
adc
jae
push
mov
xchg
mov
jecxz
and
mov
into
jno
jno
test
mov
mov
arpl
aas
int3
jle
aad
ret
add
mov
stos
in
out
pop
add
dec
lcall
pop
jp
lret
dec
sbb
adc
aaa
or
lods
enter
lock
addb
sub
cmpsl
xchg
pop
dec
pop
daa
mov
stos
lock
xchg
mov
pop
dec
sbb
add
in
sarl
jg
adc
jnp
inc
add
rcrb
jb
jns,pt
inc
aas
inc
add
mov
push
outsl
nop
imul
add
sbb
subps
mov
lcall
pop
das
stos
xlat
stos
add
enter
sti
add
aad
mov
pop
mov
sbb
outsl
mov
hlt
pop
rcrb
stos
dec
in
out
fucomp
xchg
add
jl
fisubl
or
mov
lea
popf
sbb
push
cli
outsb
in
fnstsw
dec
cs
js
daa
rcll
fstp
stos
push
movsl
cmp
mov
test
dec
add
jbe
out
mov
pop
fwait
adc
pushf
fidivrs
rcrl
sti
add
cs
ss
iret
jmp
xchg
mov
and
mov
cs
sub
pop
push
xor
mov
mov
popa
mov
mov
lds
mov
cmp
out
aas
lahf
iret
pop
inc
dec
scas
and
adcl
repnz
cltd
mov
or
sbb
outsl
xor
into
mov
and
xor
adc
test
jle
pop
dec
cmp
int3
lods
lods
repnz
push
pop
icebp
cli
cmpl
adc
xchg
push
fwait
sbb
cmpsl
jmp
push
lret
pop
cmp
hlt
add
lret
cmpsb
sbb
in
mov
push
xchg
sub
test
in
jl
shll
sbb
in
or
add
push
jle
xor
pop
cli
movsb
mov
out
pop
xchg
fyl2xp1
inc
xchg
int
addb
cmp
sbb
jo
push
or
insl
in
jmp
dec
dec
fdivs
xchg
test
fbld
mov
inc
xchg
mov
aam
lret
push
fdivrs
shrl
scas
imul
cmp
mov
ljmp
adc
jmp
mov
jp
jne
mov
xchg
out
dec
sbb
outsl
add
mov
adc
cs
and
nop
test
add
mov
lock
or
rcll
ret
jle
cltd
push
sub
rcll
or
fwait
inc
jns
sub
into
xchg
ret
push
mov
in
pop
lcall
rol
adc
rorb
mov
xor
js
jge,pn
imul
scas
push
aam
aaa
arpl
add
pop
out
pushf
dec
in
cli
cmp
test
push
push
test
adc
out
lods
lods
jb
jecxz
lock
xchg
push
inc
pop
inc
or
out
adc
sbb
xchg
cld
icebp
pop
pop
xchg
fisubrs
in
xchg
scas
and
outsl
fsubr
fcom
fstp
sbb
jb
add
xchg
daa
xchg
jmp
insb
lock
fnsave
out
add
iret
pop
xchg
popa
inc
mov
xchg
das
loop
loop
mov
stos
xlat
in
out
mov
icebp
sbb
test
pop
arpl
add
jne
flds
out
push
ja
mov
mull
rorb
int
in
mov
dec
pop
addr16
pop
xchg
je
and
inc
sub
icebp
scas
sub
sbb
or
cld
inc
rolb
outsb
xchg
inc
das
in
insl
xor
ds
push
ss
and
mov
shlb
stos
or
sbb
mov
jns
test
lods
or
sub
jno
mov
std
test
xchg
xor
adc
sbb
movsb
push
mov
aas
lock
mov
out
mov
dec
and
jle
xor
inc
cmc
nop
pop
frndint
popf
sbb
adc
mov
aad
ret
add
cmc
xchg
xchg
scas
sub
jnp
xchg
dec
addr16
pop
add
cmp
push
and
push
test
out
stos
fwait
add
cltd
mov
cmp
pop
inc
add
or
xchg
inc
add
push
ficoms
add
mov
dec
mov
out
sbb
inc
cmp
sub
push
mov
jg
mov
mov
adc
and
push
rcrb
and
clc
mov
pop
test
pop
ljmp
inc
cmp
aam
mov
xchg
dec
movsl
or
dec
xchg
popf
aad
adc
insb
mov
mov
out
cld
inc
sub
fnstsw
push
cmpsl
ret
out
ja
lret
stos
adc
jge
test
bound
push
inc
scas
jno
cmpsl
push
mov
pop
mov
fxch
dec
icebp
sti
testl
movsb
push
ss
adc
roll
sub
jae
imul
or
lea
gs
mov
sbb
ds
mov
popa
in
add
movsb
subps
add
cld
sub
sub
add
cwtl
fldt
test
sbb
int3
popf
adc
ficoms
cltd
xchg
xlat
aad
cmpsb
repz
ljmp
inc
mov
daa
or
jp
jp
aad
dec
out
xchg
adc
xchg
lcall
mov
dec
cmpsl
jg
call
pop
sub
push
int
pop
insl
pusha
push
popl
cmp
in
mov
insl
repz
das
aaa
add
cmp
mov
xchg
pop
sbb
push
jge
and
sbb
push
lods
lahf
nop
dec
jp
adc
mov
and
mov
inc
fs
cmpsb
push
scas
ficompl
mov
or
adc
mov
jo
mov
sub
jge
sbb
daa
int
jle
sub
loop
sar
adc
shr
jnp
jne
xchg
inc
inc
aam
add
rclb
adc
ja
cmpsb
jnp
xchg
shl
sub
jo
add
and
test
pop
dec
fisttpl
sbbl
cmp
sub
jns
data16
cmp
dec
pop
cli
insl
jg
aas
ret
fwait
mov
mov
cli
sarl
cld
lahf
das
xchg
rcll
pop
stos
mov
xorb
mov
adc
shll
mov
ja
add
xchg
sbb
sbb
lret
dec
xchg
cmp
lea
test
incl
loop
dec
insb
jl
js
mov
push
pop
mov
mov
push
sbb
sbb
cmpsb
xchg
js
sub
inc
popa
and
lds
and
or
movsb
inc
jle
out
and
or
mov
subl
jno
dec
int
cmc
out
sub
mov
or
ficoms
add
push
test
cli
in
mov
xchg
push
cs
in
or
in
adc
add
ljmp
inc
lret
and
push
push
jl
rcl
mov
int
jle
call
mov
inc
movsb
rcrl
addr16
dec
mov
add
ret
ljmp
xorb
fdiv
mov
fiadds
lahf
xchg
mov
lahf
mov
pop
inc
or
pushfw
cli
mov
or
adc
in
sbb
cwtl
jmp
or
push
mov
mov
pushf
icebp
addr16
lock
aas
std
insb
hlt
sub
daa
test
clc
add
pusha
jne
lcall
xchg
ja
mov
cmpsl
pushl
sahf
sub
cmp
add
or
mov
cmp
add
fldenv
insb
lea
pop
inc
jl
pop
fwait
pop
xor
mov
sub
inc
push
das
xlat
mov
insb
push
out
cmpsl
orb
pop
mov
sti
pushf
outsb
mov
pop
mov
daa
jae
ja
add
aam
adc
aaa
lret
out
fiadds
cmc
imul
mov
mov
jb
into
cwtl
jg
mov
nop
das
mov
inc
jle
js
cmp
test
push
scas
subb
fucomi
lods
cs
adc
xor
push
cltd
push
jne
jg
nop
pop
std
loope
push
dec
fiadds
mov
les
fidivrl
mov
ss
rorl
push
add
cmp
lock
inc
sub
mov
lcall
jmp
mov
push
push
movsb
mov
enterw
jge
xchg
repnz
fsubp
push
rcrb
sub
nop
pop
jnp
mov
lds
sahf
shll
cltd
inc
dec
test
sub
or
loopne
mov
addb
cmpsb
xor
inc
dec
nop
inc
ljmp
push
cmp
mov
add
into
add
add
pop
dec
lods
int
orb
xchg
pushl
dec
mov
insl
xor
ja
ror
sbb
cmc
in
xor
mov
adc
shlb
scas
add
push
je
out
and
shl
dec
or
pop
push
adc
dec
mov
mov
movl
jae
sub
test
loope
mov
pop
test
test
mov
insl
cmc
scas
gs
or
mov
sub
sar
ljmp
fwait
cmpsb
ljmp
mov
ss
pop
xor
popa
andb
pop
call
push
ja
xchg
or
cs
jecxz
inc
loopne
clc
dec
sbb
imul
dec
inc
cmp
aaa
and
lds
arpl
xor
clc
data16
adc
ss
sti
iret
jle
aad
jecxz
addr16
mov
add
scas
sbb
pop
mov
mov
pop
rol
add
xchg
adc
nop
stos
inc
add
outsl
ljmp
es
inc
adc
xchg
cld
xchg
call
adc
and
xchg
daa
and
and
loopne
jbe
std
cmpsb
sub
dec
stos
pop
mov
and
sub
cmc
mov
xchg
dec
cmp
repnz
push
or
dec
push
leave
cmpsb
mov
adc
shrb
out
out
xchg
movsl
movsb
lea
push
mov
movsl
or
test
xchg
ljmp
mov
orl
lret
add
rorl
add
cmp
fcoml
outsb
stos
mov
lods
testb
fwait
inc
test
xor
add
and
sbb
negl
fmul
and
loope
pop
ljmp
pop
adc
inc
aad
inc
js
aaa
jl
aad
mov
cld
fwait
add
cmpsl
and
mov
addr16
repnz
adc
shr
mov
aad
sub
or
xor
sub
mov
and
cmpsl
cli
pop
daa
xlat
pusha
push
lret
add
adc
and
pusha
or
js
mov
lret
cmpb
adc
adc
cmovp
push
outsb
das
pop
rcr
push
lods
rcll
dec
inc
movsb
ljmp
aam
mov
subl
loop
gs
mov
push
cwtl
jmp
lret
xchg
mov
dec
sbb
xchg
or
jb
push
ret
in
pop
add
and
mov
sub
mov
push
jg
outsb
cld
insb
lock
adc
rol
push
orb
imul
pop
stos
aad
imul
inc
lcall
movsw
sahf
imul
pop
sub
out
or
pop
fsubs
mov
sub
ja
ss
push
xor
aam
das
cmpsl
sub
push
jge
push
sub
icebp
mov
jae
mov
mov
mov
mov
out
in
xchg
outsb
sub
gs
cmpsb
testl
imul
cwtl
scas
mov
mov
pop
or
mov
dec
mov
daa
mov
mov
jp
aad
mov
and
pusha
scas
out
jmp
push
lahf
jecxz
ret
sbb
hlt
fstl
xor
mov
fcomp
xchg
sysret
adc
and
fcoms
clc
aad
test
push
aaa
cli
fcoms
pop
adc
and
xor
rclb
jno
xor
push
jecxz
add
push
and
pop
rcrl
adc
sub
xor
push
sbb
mov
dec
jbe
outsl
fcomip
xchg
loop
outsl
inc
mov
cmp
push
push
or
jns
pop
mov
xchg
push
insb
xor
pop
movsl
into
push
jg
out
jne
xchg
xor
lds
sub
adc
bound
mov
pushf
mov
rcrb
fsubrl
in
fucompp
push
enter
pop
push
int3
sub
adc
scas
scas
sbb
mov
sbb
mov
cmp
das
aas
mov
jl
mov
aaa
pusha
andl
stos
shlb
arpl
pop
dec
out
mov
mov
inc
outsb
pop
mov
push
les
cmpsb
das
call
js
cld
lea
push
mov
xchg
sbb
sti
jp
arpl
test
loopne
push
xchg
cwtl
or
into
xchg
xchg
aas
adc
stc
inc
outsb
enter
xchg
ret
pop
sbbl
mov
xchg
test
sub
mov
je
sbb
push
inc
sar
rcrb
mov
stc
pop
xchg
in
push
or
aam
or
aaa
cmpsb
and
push
arpl
mov
ljmp
movsl
mov
adc
out
jle
xchg
push
mov
dec
stos
scas
jl
jle
call
fimuls
xor
bound
mov
bound
and
jp
mov
xchg
jmpw
xchg
jg
jne
or
push
push
jecxz
mov
xchg
push
push
gs
fcmovbe
in
sahf
mov
call
fs
cmp
sub
cwtl
stc
inc
xchg
xlat
push
sub
xor
cmc
outsb
jle
hlt
sub
mov
lcall
cmp
mov
jns
lds
pop
cmpl
cmp
orb
push
lret
or
test
inc
add
addr16
sti
or
mov
xor
add
push
xor
int
mov
lods
cmpsb
outsb
mov
std
out
cmp
inc
data16
xchg
stos
mov
dec
daa
jge
xor
pop
adc
mov
fildl
les
and
pop
outsb
fs
lds
pop
xchg
inc
add
es
push
rolb
add
mov
shl
scas
in
jmp
jg
push
sub
imul
jnp
mov
dec
ret
jno
int3
jae
in
xchg
fwait
mov
pop
sbb
pop
pop
ja
nop
inc
ljmp
sub
test
xchg
push
push
sub
dec
clc
pop
mov
add
sub
sidtl
test
stc
es
adc
clts
loop
sbb
xor
adcl
rcll
pop
test
fsubrs
fimull
movsl
stc
cmp
rcl
pop
sbb
testb
repz
jp
shll
xor
jne
clc
icebp
hlt
into
lahf
insb
dec
mov
xor
adcb
mov
rcrb
loop
dec
dec
pop
jg
jne
push
stc
sti
cmp
scas
in
aas
mov
sub
xchg
fnstsw
mov
dec
nop
and
mov
outsb
mov
aam
repz
fwait
jb
inc
sbb
test
jo
mov
idiv
push
jg
mov
sti
pop
pop
or
xor
sbb
push
sub
mov
scas
inc
dec
dec
mov
mov
mov
mov
jmp
test
and
pusha
ret
or
jbe
ljmp
aaa
int3
lret
jmp
mov
add
mov
mov
pop
js
notl
in
dec
or
and
cmc
enter
ret
into
stos
cmp
fwait
mov
mov
arpl
sarl
aam
or
ss
jbe
ds
jg
dec
cwtl
popf
mov
fcmovnu
sarb
or
inc
std
cmp
xchg
inc
lret
and
adc
fdivrs
jo
sub
in
cli
push
inc
insl
mov
push
sbb
jg
jp
or
imul
out
je
in
test
dec
or
sub
inc
inc
ror
sahf
scas
and
inc
sbb
iret
mov
out
outsl
or
bound
mov
sbb
test
sub
cmp
pop
fdiv
cmpsb
push
pop
push
mov
sbb
pop
pop
or
inc
lds
or
lret
repz
inc
and
imul
rolb
adc
std
test
lret
xchg
scas
test
loop
in
addl
mov
xor
outsb
sub
dec
lcall
fcoms
fldt
mov
xchg
test
lret
mov
shll
dec
mov
mov
cltd
lock
sbb
lcall
mov
inc
cmp
stos
fimuls
pop
push
jno
shlb
arpl
dec
lea
pop
shrl
jmp
in
in
loope
mov
pop
mov
shlb
xchg
sub
aad
sbb
mov
dec
fwait
add
xor
and
ffree
fsts
and
das
pop
mov
leave
aam
lret
or
dec
pop
mov
das
and
jnp
ds
ljmp
pop
push
cwtl
lods
pop
push
xchg
xchg
icebp
out
mov
cmp
pusha
stos
call
lret
cmp
testl
lret
sub
mov
lcall
push
xchg
shl
dec
lcall
dec
mov
popf
shll
push
sbb
sub
jb
xor
cmp
nop
jns
ljmp
xor
mov
inc
xor
movsl
xor
dec
popf
mov
inc
popf
mov
les
push
pop
push
jno
jns
lret
jns
mov
jg
jns
xchg
mov
in
jmp
mov
dec
jp
jmp
lcall
pusha
lret
fists
push
popf
xor
arpl
add
stos
test
stos
and
shll
pop
addr16
push
cmp
adc
movsb
insl
nop
test
mov
push
mov
mov
dec
mov
scas
adc
dec
outsl
mov
nop
in
sub
cmp
mov
inc
and
xor
push
lock
xlat
cs
fnstsw
push
push
popf
dec
andb
sbb
rolb
sbbl
mov
sbb
push
mov
test
into
mov
adc
sbb
scas
lods
mov
mov
shll
jb
imul
mov
nop
sbb
stc
shr
jbe
cmp
hlt
out
inc
push
adc
mov
inc
and
shll
push
and
test
aaa
jge
add
pop
push
out
jecxz
in
xchg
jae
fs
pop
mov
ds
lods
lds
inc
pop
ljmp
lods
mov
in
stos
pop
push
xchg
jbe
cmpsl
jo
dec
adc
xchg
xchg
shrl
push
sub
push
sub
in
adc
insb
imul
mov
call
inc
sub
rcl
pop
mov
scas
repnz
mov
sbb
inc
mov
stos
aas
pop
cld
and
inc
dec
mov
and
lods
push
inc
mov
push
adc
out
out
rorb
ret
xchg
sub
xchg
outsb
or
sub
pop
mov
in
pusha
xchg
aad
ja
sahf
cmova
jae
outsb
mov
xchg
insb
inc
sahf
cmp
loopne
mov
repnz
stos
aaa
lahf
sub
adc
dec
js
lcall
insb
sub
lahf
add
pop
inc
mov
insb
pop
and
cmpsl
jae
ss
sti
pop
andl
add
imul
xchg
ret
jnp
cmp
lea
pop
dec
ret
pop
out
inc
decl
mov
fwait
mov
xor
lahf
daa
adc
sub
dec
and
pop
add
outsb
sub
pop
mov
mov
rcrb
lock
or
sti
dec
push
ds
jne
stos
mov
in
xchg
mov
out
adc
adc
mov
nop
xlat
js
jb
lcall
dec
sbb
sbb
mov
or
enter
fidivrs
popf
push
loop
test
and
sub
add
mov
outsb
jae
popf
pushf
ret
jle
gs
fnstsw
cli
inc
xchg
inc
fldl
or
dec
xor
dec
pop
mov
fmuls
pop
test
mov
push
negb
pop
xor
int
push
ret
sbb
xor
and
mov
pusha
jp
fnstenv
js
imulb
xchg
sub
xor
pop
data16
stos
rclb
sbb
adc
push
mov
jno
scas
dec
or
xor
call
test
mov
cmp
lea
jl
scas
mov
cmp
mov
mov
inc
ja
push
jbe
push
mov
jle
xchg
int3
cmp
cmc
xchg
pusha
insl
push
cld
pusha
mov
mov
mov
mov
adc
aam
jmp
es
mov
aaa
and
movsb
dec
jg
mov
xchg
cli
adc
iret
pop
xchg
pop
fdivs
push
adcb
lret
imul
cmp
daa
shrl
divb
out
mov
xchg
push
test
cwtl
dec
xchg
fnstsw
rorb
insl
adc
cmc
arpl
nop
jmp
mov
inc
pop
push
in
roll
ss
out
xlat
cmp
cltd
push
pop
ret
cmpsb
pop
stc
pop
fmuls
in
jae
sti
popf
shlb
mov
aaa
xor
jmp
outsb
stos
cmp
mov
xchg
aaa
fmul
repz
push
jle
outsl
push
aam
push
gs
xchg
popa
or
sbb
inc
mov
fcoml
dec
sahf
add
das
lds
push
mov
lds
dec
jle
fdivrs
repz
mov
icebp
mov
mov
pop
xchg
cmpsl
or
dec
aad
xchg
xor
test
mov
cwtl
scas
mov
dec
cmp
mov
mov
sbb
jl
mov
bnd
int3
dec
cmp
and
fmul
mov
jecxz
jne
xchg
xor
pop
adc
xor
lock
xchg
jno
cmpsl
jno
sbb
cwtl
mov
lret
sbb
pusha
leave
mov
jns
imul
inc
jno
push
cld
xchg
push
cld
sub
jbe
lahf
sbb
lods
hlt
out
cmp
or
jb
rcrb
inc
xor
daa
mov
ja
imul
sbb
xor
pop
mov
pop
xor
sub
fucompp
pop
pop
outsb
mov
xchg
dec
mov
jbe
pop
in
dec
cltd
popa
rcr
pusha
loopne
dec
push
cld
int
sub
ret
jmp
cli
mov
push
mov
imul
mov
fsubl
inc
push
scas
fidivs
ret
mov
xlat
mov
mov
jo
inc
outsb
sar
xchg
pop
cld
repz
aam
sub
cs
popf
pop
pop
dec
cmpsl
lahf
sub
push
inc
data16
test
push
jmp
punpckhdq
push
add
fdivrl
xor
mov
xor
mov
xor
jmp
add
mov
mov
not
sub
jae
or
dec
pop
cmp
xchg
jbe
rcrb
mov
adc
jmp
sub
pop
js
xor
out
jl
adc
setge
call
lods
pop
mov
dec
push
and
xor
inc
jmp
mov
or
test
mov
mov
lods
or
mov
iret
cmp
pop
sub
pop
xchg
icebp
outsb
cld
dec
repnz
testl
inc
cmp
outsb
push
in
outsb
mov
and
mov
jge
ja
pop
sarl
push
aaa
xor
rcrb
rclb
lahf
or
popf
iret
js
fs
insb
pop
jnp
and
test
popf
dec
stc
push
insl
adc
les
add
mov
push
fldt
push
and
or
movsl
dec
push
jle
inc
and
push
test
sbb
dec
in
std
scas
out
pop
push
jns
popf
jno
sbb
mov
lods
adc
sbb
popf
mov
add
sbb
lahf
jl
and
cld
jne
inc
cmc
scas
dec
std
sub
fidivl
or
and
xor
sub
mov
mov
xchg
jle
lods
gs
dec
inc
out
mov
es
mov
call
sub
and
pop
add
fwait
sbb
lds
mov
mov
mov
fdivs
mov
popa
pop
out
push
pop
std
hlt
jbe
int
or
testb
mov
clc
stos
inc
inc
mov
cmp
jl
jecxz
cmp
add
into
add
leave
sub
inc
mov
or
gs
jbe
sbb
pop
and
inc
mov
ret
out
mov
jnp
or
mov
xchg
add
xor
mov
mov
dec
test
or
inc
jbe
push
in
ret
outsl
push
sbb
subb
or
movsb
shlb
stos
clc
clc
rolb
pop
or
or
add
or
cmp
mov
adc
sub
xlat
adc
xor
adc
sti
idivb
cmp
movsb
inc
fcmovnbe
dec
pop
dec
mov
inc
pop
aam
ret
cmp
mov
lds
push
pop
xchg
out
subb
or
pop
shl
dec
or
fcmove
scas
fs
xor
jecxz
mov
rclb
imull
xchg
cmp
movsb
xorb
pop
xchg
mov
ja
mov
mov
icebp
sti
cmp
xor
mov
lock
cmp
pushf
es
enter
add
and
lcall
cmp
int3
bound
addr16
jge
pop
popf
insb
ja
xor
push
mov
sub
jl
es
fcoml
jns
scas
mov
loopne
daa
jecxz
sbb
xchg
movsb
rolb
xchg
add
or
aas
xchg
insl
or
pop
push
push
loop
scas
cltd
arpl
stos
dec
repz
xchg
or
or
jbe
add
cs
xor
mov
xchg
in
sub
mov
jo
jae
inc
or
js
push
icebp
and
jmp
fimull
call
lock
xchg
push
add
imul
stc
fstps
adc
fisubs
xchg
sti
rcrb
fisubs
push
je
mov
scas
push
repnz
xchg
test
call
cld
jmp
jg
jp
lea
xchg
testl
scas
andb
and
pop
movsl
movsl
xor
aaa
mov
jl,pn
lock
mov
or
gs
jne
sbb
jnp
test
pop
pop
stos
xchg
cs
and
notl
jg
out
xchg
jg
sbb
aam
fsubp
jo
pop
mov
lods
inc
scas
mov
test
xor
xchg
xchg
jnp
dec
xchg
jns
add
xlat
cmpsl
lret
jmp
mov
cmp
ss
and
and
ljmp
std
outsb
in
ljmp
pop
push
mov
xchg
jns
nop
jno
movsb
cmpsb
or
in
stos
scas
sbb
divl
aas
xchg
jbe
sbb
into
fs
out
aas
push
mov
dec
mov
adc
jmp
jg
inc
mov
loope
leave
mov
in
in
adc
clc
in
fcmove
pop
push
pop
in
sbbb
add
adc
fisubs
mov
cmp
xchg
lcall
push
lret
jnp
loop
idivb
jae
xor
adc
push
stos
daa
stc
mov
push
movsl
mov
sub
mov
fstl
mov
jmp
mov
xor
add
data16
lcall
les
jmp
div
push
mov
out
sub
dec
push
rolb
inc
cmp
fsqrt
scas
mov
inc
or
js
mov
les
cmc
xlat
jo
push
mov
inc
nop
lods
cmpl
stos
dec
sahf
sarb
cmpsl
dec
pusha
lret
in
dec
dec
mov
add
jb
xchg
rorb
mov
sar
mov
mov
pop
dec
cwtl
repnz
cmp
fld
xchg
les
stos
bound
inc
jle
stos
pop
fldt
fdiv
mov
inc
test
inc
pop
sub
mov
and
and
xor
cmc
int
and
jp
data16
popa
lock
cmp
sub
mov
and
mov
jnp
add
pop
pop
mov
popf
movsb
out
mov
repz
add
dec
fwait
mov
movsl
dec
shrl
les
or
ljmp
lret
push
xchg
pop
test
lret
imul
cli
inc
xor
and
sub
mov
fisubrs
lahf
testb
fs
test
dec
jp
loop
or
push
cmp
cwtl
xlat
mov
flds
inc
or
mov
pop
sbb
jp
jl
push
aas
or
push
push
movsb
fdivrl
les
and
negb
jl
arpl
cltd
mov
aad
adc
sbb
clc
pop
ficoms
fwait
imul
sahf
cmp
pop
stos
add
push
add
inc
add
std
fdivrs
push
ljmp
mov
mov
popa
inc
out
inc
dec
jp
pop
ljmp
not
aad
xchg
push
pop
flds
imul
mov
mov
xor
loopne
cmpsl
aas
rolb
in
lahf
les
inc
dec
cmp
jnp
jp
sub
sbb
pop
cli
in
xor
nop
ror
or
imul
cmp
xchg
lea
jb
and
insb
fstps
add
fistpll
jo
and
inc
mov
pop
test
cmp
dec
xchg
les
xchg
rclb
js
xor
sysenter
sti
pop
mov
xor
push
cmp
inc
movsl
es
push
loopne
les
add
xor
les
pop
out
jo
push
aaa
aad
adc
test
insb
je
clc
jg
cmp
and
mov
or
add
stc
xor
mov
inc
sub
fxch
cmp
ljmp
xchg
xchg
push
xchg
cmp
dec
mov
xchg
daa
fidivl
inc
lahf
call
jge
push
xchg
aas
dec
push
mov
inc
pop
push
sbb
pop
ret
sub
jmp
adc
push
push
into
adcl
jp
fiaddl
jne
pop
adc
insl
repz
fldcw
in
inc
push
push
ficoml
dec
inc
ss
pop
in
dec
push
addb
lahf
mov
fsubr
mov
pop
cmc
adc
sbb
xchg
inc
sbb
cs
addr16
pop
mov
and
push
rcr
fmull
adc
popf
mov
mov
xchg
rorb
push
lock
mov
mov
push
mov
inc
out
xchg
scas
dec
jno
stc
inc
shrl
ljmp
push
ror
sbb
test
daa
int
sub
inc
mov
sub
and
sbb
clc
roll
adc
cld
pop
dec
arpl
jp
scas
call
addr16
push
imul
pop
or
push
idivb
fcoml
xchg
jecxz
lods
jecxz
add
call
enter
sar
aam
test
int3
sub
in
shlb
bound
cmp
sub
mov
aas
jne
pop
imul
push
lods
orb
mov
add
sub
mov
adc
and
cli
and
gs
shll
les
inc
stos
adc
and
sub
leave
sbb
scas
fnstsw
insl
test
nop
test
addr16
mov
jnp
sbb
xchg
push
adc
xchg
cmp
mov
cltd
dec
push
xor
mov
inc
push
aad
sub
adc
ljmp
jle
das
jg
lret
cmp
cmp
mov
jbe
lock
mov
cmp
add
xchg
gs
jb
and
out
xchg
mov
adc
icebp
cli
cltd
test
cmp
nop
das
dec
or
sti
pmaddwd
push
dec
pop
dec
out
inc
xor
adc
lods
or
repz
dec
jmp
frstor
out
pushf
inc
adc
pushf
xor
inc
fidivrs
jecxz
adc
add
jge
cmp
loopne
jnp
clc
and
and
cmpsl
jno
in
pushf
enter
jbe
scas
pushf
int
inc
out
cmpsl
outsl
xor
cs
fidivrl
mov
jnp
lock
mov
xchg
and
xchg
scas
test
rorb
stc
xchg
insb
daa
pusha
push
adc
insl
lcall
inc
push
mov
add
ss
mov
enter
and
ja
scas
les
adc
add
aas
adc
lahf
jns
notb
xorb
imul
xchg
cmp
adcb
lock
jb
cmp
add
xlat
mov
out
mov
das
cmp
es
inc
sub
xor
pop
pop
scas
add
push
outsb
mov
das
add
pop
push
jmp
mov
ljmp
call
aad
shr
fsubrs
shl
insl
jbe
sbb
imul
mov
pop
les
leave
xchg
js
lock
adc
and
mov
movb
adc
cmp
xchg
call
dec
sbbb
inc
loop
cmp
mov
scas
dec
mov
loopne
insb
push
add
push
cmp
fisubs
sub
jo
data16
cmp
jbe
outsl
divl
mov
push
push
cltd
jno
adc
inc
jns
mov
fdivl
adc
xchg
add
jb
mov
lcall
mov
shlb
arpl
mov
ret
jecxz
mov
in
and
lret
adc
cmpsb
imul
xor
and
or
ja
imul
mov
adc
xchg
in
sbbl
aad
hlt
mov
ficomps
sub
or
sti
jp
mov
leave
xchg
xorb
xchg
jbe
cltd
xor
cmp
pop
xchg
sbb
lret
or
and
xchg
jge
inc
xor
cmc
arpl
lret
aas
mov
xchg
aas
stos
les
xor
fwait
out
insb
lret
subb
sbb
sbbb
nop
imul
cmpsl
xchg
lret
fcmovnu
int3
pop
adc
pop
out
test
push
push
xchg
inc
jae
jp
fdivl
push
jns
and
cmp
mov
das
cmp
push
or
out
pop
mov
jo
test
push
jns
cld
and
jge
vandnpd
dec
or
cli
and
sub
or
dec
add
push
loop
mov
addr16
jne
pushf
cmp
jecxz
mov
pusha
loope
sbb
aaa
lds
dec
popf
enter
mov
sbb
das
nop
bound
push
ret
les
mov
stc
xor
scas
cmpl
add
mov
push
dec
test
jge
pushf
jns
push
or
fdivrs
inc
icebp
add
push
fildl
arpl
cmp
add
mov
ljmp
push
push
mov
push
loopne
sbb
and
aad
jge
push
popa
push
ret
int
inc
stos
sbb
jns
js
jle
push
cmpsb
cmp
mov
xchg
push
test
mov
inc
jg
add
call
stos
cmp
mov
jo
cltd
stos
lock
fwait
lods
pop
jno
mov
cmpsb
in
imul
ss
sahf
stos
out
aad
mov
push
mov
jg
scas
mov
loope
daa
inc
inc
sub
xchg
ret
fimuls
sbb
or
fsubl
xchg
aaa
pop
addr16
push
jo
mov
mov
scas
mov
rorl
xchg
pop
fidivl
lods
jno
fs
shll
sub
call
insl
sbb
enter
xchg
lahf
sub
pushf
std
or
push
mov
js
or
mov
jne
movsb
push
inc
imul
xchg
iret
dec
sbb
dec
testl
aas
into
scas
mov
push
inc
mov
lock
fwait
push
bnd
inc
ja
xor
lret
daa
repz
dec
fistpll
xor
add
movsb
das
and
movsl
aad
push
pushf
or
and
jne
pop
imul
and
pop
dec
mov
dec
arpl
mov
push
dec
rol
cs
int3
popa
ficomps
movsl
insl
fucomi
in
int
hlt
popf
or
loop
jecxz
test
das
fwait
push
clc
mov
push
xchg
iret
idivl
fs
aad
jne
daa
push
dec
imul
push
and
jge
loopne
test
fwait
xchg
into
mov
subb
xchg
cmp
xchg
mov
in
sub
mov
adc
addr16
int3
repnz
cmpsw
inc
rolb
into
outsb
push
xchg
inc
xlat
push
imul
aas
push
jns
in
sub
sub
jnp
fsubl
test
sbb
and
xchg
dec
sub
sub
icebp
pop
negl
in
pop
and
lcall
dec
pop
jb
jbe
loope
cltd
cmp
pop
pop
jo
es
cvtps2pd
dec
popf
js
lea
cmp
xor
inc
imul
lahf
mov
fcomps
or
push
rcrb
xor
decl
int
out
into
adcl
mov
mov
inc
sub
insl
or
sti
ret
pop
pop
jb
out
dec
jge
xorb
dec
cmpb
popf
pusha
call
cmp
insb
mov
sub
inc
sbb
inc
in
dec
movsl
addb
pop
and
pop
add
in
int
push
dec
popf
shll
gs
xlat
out
lahf
jbe
pop
adc
in
or
mov
mov
inc
inc
xor
fdivrs
stc
mov
pop
cmpsl
nop
inc
pop
fldcw
sbb
push
test
testl
mov
adc
in
repz
pop
inc
xchg
cmpsb
inc
adc
loopne
dec
dec
pop
xchg
roll
sub
repnz
add
sub
pop
jge
xchg
out
push
into
sahf
sbb
sub
sti
xor
xchg
out
test
cs
mov
pop
sbb
mov
dec
jno
jg
push
dec
rsqrtps
sub
repnz
cmpl
mov
push
jae
inc
sub
pop
pushf
stc
push
push
nop
jecxz
xor
fisubl
js
or
dec
mov
ljmp
sbb
lods
xchg
mov
jp
adc
or
sub
cmc
xor
stos
nop
lahf
test
out
call
cmp
dec
jae
in
in
shll
icebp
xchg
stos
fs
leave
or
sbb
adc
pop
or
inc
xchg
sub
jno
push
fwait
jbe
data16
mov
cmp
pop
out
jge
sbb
or
lods
mov
pushf
xor
pushf
lea
cmp
sub
je
lods
call
inc
dec
inc
xor
addr16
enter
sbb
loopne
fmull
aam
repnz
add
mov
ret
xor
sbb
hlt
mov
mov
daa
dec
dec
and
nop
loope
inc
lcall
repnz
cli
and
aad
push
pop
shl
es
cmp
push
jb
scas
out
mov
rol
dec
shll
loope
test
ja
insl
sti
movsb
lods
xchg
enter
cmpsl
cmp
outsb
imul
xchg
cmpsb
mov
cwtl
ret
cmp
dec
bound
hlt
daa
and
stos
jbe
loopne
cmp
imul
jle
cmpb
sub
xor
lcall
movsl
insb
adc
push
push
inc
cld
cmp
or
mov
popa
or
add
les
push
lahf
cmpsb
push
xchg
rorl
mov
dec
dec
dec
inc
and
popa
jmp
pop
mov
ljmp
in
repz
jl
dec
sub
mov
leave
adc
sar
cmpsb
add
xchg
stos
mov
mov
ljmp
jge
push
adc
push
fiaddl
inc
rclb
adc
xchg
stos
les
inc
ret
mov
mov
mov
mov
and
into
mov
inc
and
into
pop
mov
inc
pop
push
add
mov
or
sbb
icebp
sbb
aam
or
fcos
add
xor
pushf
push
leave
cli
aad
in
inc
mov
nop
or
mov
aaa
mov
dec
pop
mov
xor
push
cmp
sub
adc
fwait
out
xchg
repz
dec
imul
sbb
mov
fldl
mov
stc
loopne
jg
adc
pop
xor
es
loop
mov
push
popa
shr
pop
lock
fistpl
inc
hlt
ret
ja
pop
xchg
fs
inc
bound
sub
fsubr
repnz
sub
stc
mov
outsl
push
shl
jno
sahf
out
add
mov
push
pop
and
lds
ffreep
out
mov
dec
dec
fdivrs
ficompl
mov
or
or
fistpll
test
add
push
ret
cli
in
shll
popa
cld
mov
outsl
xchg
add
bound
jle
jns
or
mov
adc
repnz
les
dec
int3
pop
je
cmp
lock
adc
test
lahf
int3
loope
add
pop
xchg
xor
inc
lret
out
dec
shlb
lahf
sti
dec
shll
clc
int3
lea
push
add
in
shr
js
jno
mov
stc
push
xlat
lods
insb
mov
nop
jge
xchg
inc
addr16
dec
mov
divl
inc
nop
fnstsw
push
xlat
test
xchg
sbbl
je
test
lods
xor
dec
loopne
mov
int
xchg
mov
fsubrl
pushf
pop
xor
mov
push
scas
lea
ds
push
movsl
jecxz
push
fistpl
dec
or
jnp
cmp
add
push
adc
xor
sbb
jp
fisubs
jae
imul
stos
push
jle
jp
add
lods
lea
cmp
fistpll
ds
push
pop
sub
and
mov
icebp
jb
insl
sbb
push
xchg
jp
shr
add
jg
sahf
pop
mov
or
aad
xchg
pop
push
fwait
push
cmc
in
out
lods
addr16
inc
inc
aaa
mov
data16
cmp
aaa
mov
adc
pop
cmp
cltd
andl
jne
sbb
insl
loopne
xchg
push
cmp
loopne
gs
pop
out
popf
push
ret
testl
ror
test
aas
call
push
mov
dec
outsb
fcompl
xchg
push
sub
int3
cmp
mov
inc
push
jmp
aam
aad
fistps
dec
lods
jg
xor
dec
int
ja
loop
nop
add
ljmp
movsb
nop
inc
jno
sbb
je
adc
mov
aas
mov
dec
out
sbb
mov
lahf
cmp
or
vmaxpd
adc
fwait
rorb
cs
add
mov
cmp
jo
fisttpl
lret
add
lea
fcmovnbe
inc
inc
sub
xchg
jle
sbb
mov
mov
sbb
cmpsl
xorb
xlat
icebp
aad
lods
xchg
xchg
pop
ss
outsl
pop
and
jle
push
push
popa
inc
mov
call
aaa
sbb
int
or
gs
popf
fwait
mov
xchg
daa
push
mov
mov
int3
xor
out
int
aam
mov
sbb
jmp
mov
pushf
push
xchg
daa
or
call
lret
pushf
fs
sbb
push
je
lods
sub
adc
sbb
shrb
cmpsl
mov
mov
pop
sub
dec
jns
pop
shlb
cltd
daa
out
jns
lock
aas
sbbb
lret
dec
je
arpl
jmp
cmp
fdivr
adc
or
push
sub
dec
lods
adc
add
imul
popf
mov
inc
outsb
jp
adc
pop
adc
pop
jo
xchg
call
pusha
xor
ljmp
movsb
mov
jne
insb
xor
inc
inc
cltd
jno
inc
mov
and
jp
cmpsb
movsl
push
cmpb
std
sbb
loope
xor
fsubs
out
in
jl
lods
or
lds
fdivrl
jmp
ja
xor
cmpsl
mov
data16
fbld
icebp
push
clc
pop
cli
inc
add
loope
loop
jnp
mov
or
mov
das
xchg
cld
jecxz
mov
cwtl
insl
imul
mov
inc
add
lods
dec
lret
out
in
movsl
loopne
push
pop
push
enter
push
stos
sub
add
adc
pop
xchg
into
leave
dec
andl
pushf
jmp
movsb
xchg
pop
test
xchg
xchg
stc
xchg
jle
cmc
inc
cmpsb
bound
clc
xchg
inc
adc
and
out
mov
sub
or
lock
das
scas
adc
adc
push
xchg
bound
xchg
int3
shlb
xchg
pop
call
sub
dec
or
cs
push
aaa
xchg
pop
inc
jecxz
mov
cmp
into
popa
outsl
incb
add
xor
sbbl
daa
and
aaa
insl
cmc
shr
idivb
dec
outsb
dec
movb
arpl
xor
jecxz
xchg
jnp
push
dec
pop
add
scas
stc
mov
je
inc
sbb
pop
adc
pop
xchg
or
lret
orl
mov
or
pop
daa
fcomps
fcoms
scas
mov
mov
fstps
mov
mov
rcr
lahf
movsb
outsl
mov
nop
mov
repnz
lret
movsb
outsl
push
rcl
mov
mov
inc
cmp
xlat
stos
mov
sub
jbe
int3
push
cmp
outsb
xor
cwtl
lret
mov
push
mov
addl
out
jne
xor
lds
ja
pop
out
sub
dec
movsl
cwtl
daa
or
xchg
aas
cltd
cli
mov
inc
xchg
and
das
jp
lcall
lods
jmp
jae
outsb
sub
outsl
mov
cld
xchg
sti
outsl
pop
cld
dec
adc
rorb
aam
sarb
jl
negb
xor
in
cmpl
outsl
pusha
outsl
and
pop
or
jl
jle
movsb
cwtl
mov
lcall
shr
or
faddl
mov
mov
out
in
data16
je
gs
inc
cmp
jmp
in
scas
jmp
xchg
push
dec
push
and
in
loop
fwait
xlat
push
push
push
jge
sti
pop
cmp
jno
add
loopne
fs
hlt
add
xor
notb
sbbb
mov
stos
cmpsb
mov
in
and
dec
lds
and
xor
in
pop
push
add
lods
cmpsl
in
dec
sahf
jmp
test
dec
test
ds
push
std
lock
sub
dec
je
insb
loop
adc
or
xor
inc
dec
xor
pop
popa
lcall
in
test
mov
mov
sahf
data16
insb
sub
mov
xchg
pop
sbb
out
lds
jae
adc
cmp
les
arpl
int
push
adc
mov
sbb
adc
lret
jns
sahf
dec
cld
add
mov
insl
pop
cltd
jnp
data16
jbe
pop
push
or
bound
lahf
xor
ljmp
leave
adc
call
decb
pop
mov
push
fstpl
lcall
iret
rclb
shlb
push
inc
enter
mov
or
adc
jno
not
stos
ret
cmc
cmp
stc
out
push
out
int3
jmp
sbb
dec
jmp
sti
inc
cmp
test
pusha
dec
xor
movsb
mov
div
mov
popa
jb
sub
call
data16
lods
rcrl
bound
dec
lret
inc
sbb
inc
lods
mov
div
xchg
imul
push
ror
addr16
cmp
iret
dec
into
pusha
loope
cmpl
imul
xchg
lds
enter
cmpsl
jb
jmp
jmp
inc
xchg
ss
cli
mov
pop
out
mov
das
fiadds
imul
mov
loop
dec
stc
add
gs
sub
ret
pushf
cli
add
inc
dec
cmp
or
cmp
dec
mov
test
jl
cmc
adc
je
inc
push
mov
jbe
mov
hlt
mov
push
out
movsb
sub
aaa
lock
outsb
sub
js
sbb
lretw
div
xchg
imul
inc
mov
mov
es
cmp
call
adcl
es
insb
mov
sbb
movsb
push
xlat
fbld
xor
add
jl
ljmp
arpl
push
xchg
repnz
fcomps
in
or
xchg
in
mov
lret
ret
pop
into
movsl
call
cld
jmp
pop
test
sbb
mov
in
sub
inc
push
scas
cmp
mov
scas
lods
jge
mov
push
mov
or
lret
push
push
fincstp
std
dec
or
ja
add
ljmp
out
lock
cmp
sub
repnz
mov
sbb
jecxz
fistpll
jo
jo
inc
xor
ljmp
repz
add
js
xlat
mov
lret
mov
pop
push
movsl
lcall
nop
call
xchg
mov
sbb
sbb
fwait
adc
inc
lahf
lea
loop
inc
mov
mov
cltd
sub
mov
cmpsb
and
mov
pop
es
lcall
add
xchg
ss
pushl
cli
mov
fcompl
imul
clc
in
icebp
add
mov
cli
out
mov
jp
add
jne
fs
inc
adc
mov
shll
lcall
adc
in
bound
xchg
jecxz
icebp
sub
mov
aas
out
push
mov
mov
loop
je
add
adc
adc
mov
dec
in
jl
mov
pusha
pop
les
fsubs
outsl
add
lret
daa
adc
inc
mov
lret
inc
outsl
idivl
stos
popa
add
test
das
jge
and
fisttps
lahf
add
jnp
cmp
insb
xchg
test
jb
add
nop
fisttpll
mov
adc
jmp
ret
adc
gs
ss
stos
lret
repz
push
cmp
ret
in
adc
mov
or
cmpsb
fdivrl
pop
add
lds
dec
imul
sub
lret
or
pop
inc
ret
mov
cli
push
cmpsl
mulb
into
cmp
andl
sbb
movsl
and
sub
mov
imul
std
and
aam
lea
insl
pop
fcmovb
xchg
mov
or
iret
out
bound
xchg
adc
out
insl
push
mov
lods
fimull
xchg
cli
cmp
imul
push
jecxz
frstor
jge
mov
push
xor
jbe
data16
push
cltd
push
adc
jne
mov
sbb
xorl
cmpb
xchg
hlt
push
add
loope
hlt
in
lret
out
push
mov
sti
out
adc
adc
pusha
repz
mov
sahf
and
out
incb
lret
xor
lods
ja
in
xor
pop
lret
dec
sbb
mov
dec
cli
aas
inc
mov
jne
bound
jbe
pusha
data16
dec
xchg
add
outsl
xchg
xor
pop
scas
xchg
movsb
xchg
dec
fwait
push
filds
or
pop
cmpsb
sbb
enter
ds
les
jns
mov
sub
rclb
addl
scas
mov
inc
mov
add
loopne
cmp
lea
in
or
mov
push
dec
icebp
pushf
scas
push
xor
negl
je
cmp
xor
ds
jle
xor
or
outsl
mov
mov
sarl
dec
ret
cmp
inc
mov
cmc
xchg
xchg
inc
pop
sub
jb
adc
or
push
push
dec
sub
push
sub
add
jle
lret
inc
outsl
sbb
std
pop
and
sub
cmp
xchg
mov
movsb
loop
shl
xchg
adc
cmp
xor
bound
lret
sub
fldenv
test
sbb
fmuls
mov
fs
push
and
out
ret
cwtl
andl
lcall
sub
and
outsb
daa
outsb
orb
add
mov
xor
cmpxchg
mov
xor
adcl
adc
cmp
mov
mov
xor
aaa
gs
jmp
jl
sub
add
jp
popf
sti
ss
enter
sub
fmull
flds
push
mov
out
mov
jge
mov
and
push
imul
xchg
jge
fs
popa
mov
bound
sub
ja
out
push
imul
push
sbb
pop
push
jo
nop
imul
sbb
mov
sbb
and
jbe
lcall
daa
mov
sub
bound
xlat
or
fisttps
adc
stos
loopne
jno
push
inc
jle
add
iret
in
or
dec
mov
dec
and
gs
test
mov
pop
dec
popa
insb
inc
and
setbe
andb
ljmp
adc
push
sub
push
arpl
sub
out
cmp
test
int
sub
bound
xor
adc
push
shll
test
pop
stos
push
dec
mov
arpl
and
fnstcw
sbb
mov
leave
push
fnstcw
mov
dec
out
pop
fs
hlt
add
sub
mov
mov
xlat
out
je
pop
and
into
orl
in
lock
sti
jo
mov
add
cmp
cltd
insb
mov
rep
and
ss
or
mov
xchg
jl
stc
or
xor
jge
push
mov
xor
jg
ja
jbe
outsb
mov
jl
push
push
sub
aad
cs
inc
add
lcall
jge
cmp
xor
fcmovu
fsubrl
mov
outsl
lahf
mov
pop
out
icebp
fwait
lock
jnp
xlat
shrl
orl
pop
rcrb
jg
fcmovu
jne
jle
fimull
and
mov
xor
xchg
rolb
in
mov
mov
lock
fimull
mov
sub
and
js
loop
iret
sbb
or
and
movsl
adc
xchg
jns
mov
pop
outsl
jbe
test
xor
pop
mov
rcrb
loope
cs
sahf
cmp
xor
pop
outsb
leave
mov
or
push
mov
fisttpl
std
cmpsl
aam
pop
sarl
icebp
popa
dec
cmp
mov
std
add
mov
cmp
push
jbe
inc
pop
inc
fisttps
sub
mov
clc
cs
add
sbb
push
inc
dec
in
mov
or
sbbl
mov
sbb
int3
adc
cmp
ds
rcrb
shl
and
mov
push
in
jns
sti
lcall
mov
addr16
mov
fadd
dec
dec
jp
dec
pop
in
fisttpl
jmp
inc
test
inc
add
popa
shlb
push
fwait
clc
in
lret
or
xor
cmp
aaa
xor
cltd
jl
xchg
jmp
int
inc
and
das
mov
mov
mov
mov
insl
push
mulb
xchg
pop
outsb
shl
in
cmpsl
ds
call
or
orl
lret
inc
outsb
push
mov
inc
mov
xor
nop
lds
pop
scas
pop
ljmp
testb
dec
adc
jae
jge
subl
mov
mov
cmpsb
into
or
dec
jg
xor
inc
imul
mov
push
add
js
and
insb
arpl
ds
push
mov
jns
cmp
inc
lcall
push
insl
lock
test
push
or
arpl
pop
cmp
into
lahf
or
imulb
jge
fadd
ja
or
std
adc
inc
out
sbb
or
and
scas
repz
sbb
scas
push
popa
and
mov
push
ss
sahf
inc
jl
std
test
out
sbb
jne
aad
mov
add
adc
mov
inc
test
and
iret
sti
jp
movsb
xchg
push
rep
mov
jg
test
jmp
pop
imul
mov
inc
or
es
int3
test
or
push
iret
inc
das
and
and
test
sti
and
xor
pop
test
aaa
bound
lret
xchg
hlt
ds
fadds
and
jmp
pop
inc
cs
ja
jae
push
hlt
pop
aas
jno
nop
testl
push
mov
movb
ret
xchg
cmp
xlat
ret
xlat
push
sbb
mov
movsb
cwtl
loope
icebp
mov
popf
and
lds
test
popf
std
xchg
push
andb
mov
mov
fildll
push
mov
and
pop
test
xor
dec
cli
pop
sbb
daa
adc
adc
lahf
adc
jp
bound
dec
call
in
rcll
pop
sbbl
mulb
cwtl
aad
mov
or
sub
fcmovbe
push
sub
cmp
sub
je
pusha
loope
sbb
xchg
movl
arpl
mov
lods
dec
xchg
fcoml
adc
pop
test
fnsave
jmp
movsb
nop
in
sbb
sbb
pop
mov
and
mov
imul
and
mov
and
dec
and
push
xor
jo
lods
mov
and
into
mov
mov
jmp
sub
arpl
sarb
push
aaa
enter
jo
stc
jmp
jae
xchg
and
push
test
mov
jo
jle
push
jno
and
notl
fldl
shlb
cmpsb
sbb
call
sbb
cltd
or
cmp
sub
mov
sbb
push
jnp
jns
ret
push
flds
xor
sub
jle
xchg
fs
mov
insl
jecxz
ja
jmp
jge
sbb
xor
cmc
mov
mov
pushl
mov
mov
cmp
ret
or
lret
mov
mov
incl
sbb
xchg
scas
testl
lea
or
jmp
cld
rcrb
call
fs
xchg
iret
cmpsl
xchg
pop
mov
hlt
shr
pushf
xor
jno
sub
hlt
or
adc
pop
push
cs
mov
dec
lcall
jo
lds
mov
xor
mov
cli
mov
stos
add
xor
sbb
hlt
int3
sbb
dec
popa
adc
out
loopne
decb
les
adc
pop
lcall
das
xchg
js
xchg
mov
imul
sub
xchg
mov
xchg
lret
mov
and
jae
mov
inc
dec
mov
adc
push
pop
xor
cmpsb
test
or
test
out
pop
push
gs
rcrl
cmpxchg
xchg
dec
rcrl
int3
int3
cmpb
sbb
push
dec
ds
or
loop
xor
cmp
paddsb
out
int3
cmp
pop
jl
rorb
leave
lds
or
dec
dec
add
cmp
rcrb
or
push
fld
mov
dec
pop
inc
adc
aad
and
ret
push
shlb
call
jle
cmpsl
lea
scas
xchg
and
add
cli
pushl
jae
pop
sahf
mov
xchg
loope
adc
or
mov
sbb
pop
sub
or
push
or
mov
lahf
nop
adc
into
pop
fsub
and
ja
cmp
fwait
rolb
movsl
in
cmp
xchg
mul
shr
and
iret
pop
and
sbb
inc
stos
or
push
sub
mov
xor
fimuls
cmp
in
imul
pop
in
out
xchg
push
cld
ror
ds
ret
cmpsb
xlat
cmp
and
les
xor
xor
test
sbb
enter
lds
sbb
std
imul
mov
lods
imul
cwtl
mov
adc
mov
aam
mov
cmp
ret
nop
fsubr
add
jg
mov
outsb
jnp
lock
jge
mov
pop
push
inc
int
push
imul
push
movsb
test
or
test
lahf
add
cli
std
mov
mov
cmp
adc
mov
mull
shrb
lea
ret
repz
fcmovb
fsubr
jp
fisttpl
rcll
cmp
add
cwtl
pop
cmpl
stc
test
sbb
shlb
xchg
sub
scas
mov
pop
jnp
ficomps
in
or
in
and
adc
sbb
cmc
jns
jmp
jne
sub
fwait
xchg
or
in
sbb
mov
xchg
jae
xchg
movsl
fs
xor
mov
sbb
je
in
sub
sbb
inc
pop
test
fildl
or
pop
insw
iret
popa
cld
call
sbb
int
pop
out
push
jns
insb
mov
inc
mov
hlt
into
jp
or
into
sub
or
inc
jo
scas
sahf
icebp
dec
mov
mov
sub
lret
push
xchg
imul
int3
loope
test
cs
sub
sti
adc
ss
jno
dec
ficomps
mov
sbb
xor
add
mov
cmc
repnz
jle
cvtdq2ps
push
js
mov
xor
movsb
sub
push
pop
jecxz
into
nop
xor
imul
or
or
adc
fstp
lahf
addr16
mov
xchg
sub
and
jns
sbb
xor
and
lock
bound
loop
cmp
sbb
fdivs
fsubs
std
call
xor
int3
jl
or
popa
mov
mov
arpl
insb
dec
push
sub
ret
iret
jns
data16
xchg
push
xor
push
subl
pusha
sub
ja
ds
mov
ss
jmp
xchg
ds
lds
mov
pop
jb
jbe
cmpsl
xor
add
jo
into
leave
cmpsb
jbe
aaa
sub
xlat
pushf
outsb
xor
inc
std
fdivs
push
mov
mov
and
and
adc
or
pop
inc
or
push
outsl
shrb
mov
mov
addr16
xchg
rorl
es
leave
mov
jb
data16
xchg
xor
aaa
or
jb
cmpsl
shll
lret
mov
lret
cli
cmp
cld
fistpl
imul
adc
adc
cmp
ljmp
les
pop
or
mov
adcb
ret
xor
pop
xor
push
jns
adc
and
xor
mov
aad
pop
push
insb
xlat
andb
shrb
or
lea
inc
aaa
rclb
pop
inc
dec
dec
sbb
ja
mov
push
sbb
or
adc
cli
mov
push
push
xor
inc
cmp
mov
pop
jle
xchg
sbb
nop
and
jne
push
pusha
aad
fcmovb
popf
cs
adc
xchg
popf
xor
out
in
mov
ficoml
dec
enter
push
and
mov
adc
movsl
rcll
inc
and
sub
cltd
test
push
adc
push
sub
add
fisttpl
inc
aad
add
cld
pop
mov
daa
lret
sub
cmp
fcmovu
subl
pop
xlat
fimuls
pusha
sbbl
fnstcw
outsb
shl
fdivl
cmp
xchg
inc
lods
cmp
push
mov
lds
cli
xor
loopne
clc
cmp
mov
test
es
push
rcrb
jmp
pop
daa
out
add
popa
in
mov
ja
dec
cld
scas
xor
sub
outsb
or
dec
xchg
mov
daa
xchg
push
push
ja
inc
lret
cmp
int3
jg
int3
leave
addb
pop
lock
sub
test
mov
sbb
testl
dec
inc
inc
rorb
into
outsl
jb
xchg
je
jle
std
adc
add
ret
data16
add
aam
lods
sub
pop
cmp
gs
push
inc
out
and
xchg
mov
xchg
movsl
orl
or
mov
adc
mov
in
outsl
or
push
adc
shlb
bound
jp
loope
leave
sub
jo
int
test
pop
jge
xchg
push
sbb
push
mov
bound
and
arpl
sub
lcall
xor
cmpsl
rcll
sbb
push
test
adc
xor
fwait
in
sbb
mov
pop
cmp
movzbl
mov
sub
sbb
sbb
roll
cli
xchg
mov
dec
sbb
pop
pushf
jb
sbb
jmp
inc
jecxz
mov
std
insb
int
ja
aaa
jb
and
mov
stos
sub
ret
jae
fdivrp
mov
push
test
push
fneni(8087
outsl
gs
cmp
popa
dec
mov
lock
cmp
xor
mov
mov
mov
push
cmp
dec
or
pushf
jbe
jnp
leave
cmp
push
inc
jecxz
dec
mov
or
xchg
into
or
sbb
in
scas
andl
cmp
push
cmp
cmpsb
sbbb
xchg
sahf
mov
push
or
out
out
rcrb
jne
push
and
pop
ds
xor
cmpsb
decl
loope
cltd
mov
sbb
mov
sub
pusha
testb
test
inc
in
push
push
mov
and
lret
jecxz
cmp
sti
shrl
fbld
add
test
mov
ret
iret
movsl
cs
jl
loop
or
pop
cmp
xchg
ret
mov
jp
cmc
js
cmp
data16
mov
iret
stos
adc
popa
mov
notl
sarl
jmp
test
ds
sbb
daa
jmp
inc
insb
aad
xor
push
jnp
inc
and
rcrb
stos
dec
inc
inc
cmp
ds
icebp
mov
jp
push
xchg
or
mov
or
rol
xchg
cmp
lds
lods
popa
pop
pop
outsl
cmp
loop
gs
mov
jae
aas
push
std
sub
cmp
push
mov
ds
sbbl
or
ficompl
inc
icebp
xor
adc
scas
jecxz
out
jae
add
sub
loope
xor
stos
xchg
sbbb
inc
enter
jnp
adc
mov
enter
bnd
adc
push
popf
dec
rcrb
movsb
jp
dec
push
pop
push
xchg
fs
mov
sbb
ret
imulb
mov
test
inc
jle
sarb
push
jns
cmp
or
addr16
andl
xlat
ret
xor
imul
push
adc
out
cmp
out
inc
dec
cli
mov
mov
mov
fs
pop
int3
pusha
out
jae
ljmp
pop
mov
sti
scas
push
pop
sbbl
dec
in
or
clc
loope
mov
mov
add
stc
dec
test
daa
mov
sub
mov
sahf
in
out
dec
mov
jmp
js
in
jle
xchg
mov
fnstcw
fcmovnu
fwait
or
scas
mov
imulb
xorl
scas
sbb
mov
add
insl
jmp
cld
xor
sub
icebp
or
add
inc
push
jbe
mov
pop
imul
or
inc
push
sub
cmp
inc
ljmp
sbb
sbb
dec
test
mov
jbe
insb
mov
lcall
int3
dec
add
in
ljmp
enter
xchg
pushf
loopne
sahf
cmp
test
xor
add
shr
fisttpll
out
jno
mov
dec
in
add
and
jno
add
or
xor
jg
add
xchg
fnsave
dec
sbb
shlb
sub
sub
aas
pop
pop
and
mov
repz
mov
int3
sbb
data16
je
adc
jl
adc
and
and
xchg
jno
cltd
mov
sbb
jns
mov
xchg
inc
sub
inc
fnstsw
push
mov
lods
jle
leave
popa
ror
jg
test
cmp
jae
sub
push
repz
icebp
faddp
cmp
dec
lea
subb
push
xor
jo
pushf
cwtl
pop
cmp
les
rorb
les
xor
leave
xchg
pop
xor
push
adc
hlt
mov
pop
inc
cmpsb
loopne
icebp
fnstenv
out
int3
fadd
test
xchg
push
and
add
mov
sub
imul
xor
push
das
pop
ds
or
jo
xor
test
scas
mov
add
or
cmpsb
lea
ret
sti
mov
cmp
into
mov
lock
notl
xchg
inc
add
jnp
mov
lahf
test
xchg
xor
xor
xorl
mov
and
fisubrl
mov
out
adc
sti
es
xchg
aas
je
test
std
and
mov
xchg
add
insl
inc
in
pop
and
mov
sbb
mov
addr16
add
scas
sbb
mov
adc
test
lock
mov
cmp
mov
xchg
cmc
xchg
or
add
xchg
repz
pop
mov
in
jnp
xchg
jecxz
xchg
dec
mov
call
stos
or
pop
in
fadds
inc
jmp
loopne
mov
fsubrp
inc
imul
hlt
sbb
pop
mov
adc
nop
clc
cltd
scas
mov
mov
out
rorl
cmp
fcomps
shll
pop
lods
push
dec
fwait
jb
daa
out
cs
mov
xor
test
xchg
dec
xor
xor
pop
lods
cli
hlt
rorl
mov
bound
loop
xchg
hlt
lcall
cmpsl
mov
into
jb
lret
sbb
popw
push
int3
push
dec
cli
out
cmpl
and
mov
fs
xor
das
xor
cwtl
dec
mov
ja
cmp
and
ds
aad
or
jbe
jecxz
add
sti
arpl
repnz
inc
or
cltd
jae
dec
ljmp
lock
aas
push
lods
jne
ret
mov
mov
mov
dec
pop
into
pop
jmp
mov
xlat
xchg
dec
add
adc
jl
cltd
push
fnstenv
daa
sub
sbb
xor
out
call
mov
jg
test
pop
xor
adc
hlt
push
cli
std
mov
xorl
jmp
loopne
jns
add
jg
hlt
mov
cltd
inc
arpl
bound
or
sbb
clc
push
fldpi
xor
popf
push
pop
mov
testb
dec
arpl
pop
in
scas
dec
ffree
sub
xchg
dec
mov
stos
dec
shll
pop
sbb
adc
xor
adc
push
in
mov
pop
mov
fmull
stos
popf
jo
push
popf
icebp
rcrb
aad
sbb
imul
push
ja
incb
lret
add
repnz
out
call
mov
adc
cmpsb
jle
mov
out
xchg
pop
mov
arpl
inc
popa
ja
roll
xchg
and
scas
daa
in
int
cmp
adc
ret
push
mov
pop
les
inc
mov
aaa
push
adc
daa
jl
xchg
xor
pop
inc
sbb
add
push
push
mov
es
jmp
test
mov
xor
call
mov
lods
push
lahf
and
inc
adc
lret
xchg
sub
fwait
lock
mov
mov
inc
pop
js
lcall
sbb
jo
fidivrs
fsubr
mov
lock
xor
mov
xchg
hlt
insb
loop
fwait
lret
imul
jbe
test
in
push
sub
push
pop
push
imul
pop
xchg
pop
push
xchg
add
xor
add
js
popa
scas
push
or
mov
aaa
fdiv
xchg
jl
mov
cs
mov
push
jp
mov
xlat
pop
cmpsl
mov
adc
sbb
cld
movsb
add
test
scas
push
rcrl
jle
scas
cmp
test
arpl
mov
roll
enter
int3
subl
inc
inc
push
adc
mov
fwait
mov
cmp
aad
add
and
dec
mov
xor
xor
pusha
xchg
aaa
lods
leave
mov
imul
pop
jae
fcomip
and
int
pop
push
loope
jmp
mov
ss
lods
sbb
ds
lods
jb
lcall
mov
roll
inc
lods
fisubs
jg
lds
mov
add
mov
push
push
call
inc
lret
push
daa
and
add
add
imul
jmp
mov
pop
jg
push
add
iret
fisubs
mov
inc
mov
in
cs
mov
pop
into
outsl
adc
sbb
adc
out
aaa
fadds
insb
xor
jns
cli
sub
cs
inc
call
out
add
inc
insl
fucom
pushf
xchg
mov
mov
ss
mov
lds
das
inc
cmp
sub
inc
jg
push
push
int3
bnd
jb
add
hlt
cmpsb
stc
xor
icebp
adc
int
mov
mov
scas
out
xor
into
dec
mov
leave
pop
lahf
out
mov
or
sbb
mov
push
mov
mov
orl
imul
stc
jno
push
out
aaa
cmc
cwtl
lea
push
out
xor
add
nop
mov
mov
outsb
sub
mov
jno
lods
out
imul
scas
lahf
das
sti
jbe
lahf
lahf
jmp
and
add
xchg
dec
xchg
test
iret
scas
test
inc
and
sarb
fisubs
mov
adc
pop
mov
sub
pop
mov
out
pop
pop
jmp
xchg
out
and
jecxz
mov
push
cbtw
push
jne
mov
dec
cmpl
mov
mov
roll
jecxz
iret
fs
add
inc
popa
pop
jmp
fistpll
inc
mov
aaa
out
fidivrs
add
jl
test
std
lret
mov
int3
dec
jns
sub
inc
pop
mov
adcl
loopne
loop
ds
dec
fidivrs
loop
ret
jb
iret
add
push
lock
mov
mov
arpl
stos
daa
rorb
movsl
push
testb
faddl
jp
andl
lahf
jae
adc
sub
mov
test
imul
sub
adc
push
dec
js
call
in
pop
jmp
scas
dec
int3
in
repz
push
xor
pop
je
sahf
jns
out
jns
iret
cli
pop
pop
arpl
jae
inc
fidivs
ja
push
shlb
daa
cmp
dec
clc
jae
push
ret
fidivs
pushf
fisttpl
js
call
stos
outsb
insb
mov
fisubrl
sbb
fldcw
lahf
dec
mov
xor
xchg
sbb
jbe
add
enter
test
push
ret
lret
sub
xchg
lcall
stos
push
mov
fwait
fwait
dec
loope
pushf
jb
adc
loopne
fcmove
mov
xor
xor
daa
sub
aad
dec
cld
jmp
out
insb
mov
xor
push
scas
out
xor
sahf
lods
loop
cli
add
mov
jo
cmp
ret
es
cmpsb
fisttpll
sti
iret
outsb
fnstcw
mov
dec
jno
add
outsb
or
mov
call
cli
sub
or
scas
push
inc
imul
int
add
pop
mov
mov
and
test
push
dec
xor
xor
loopne
jecxz
sub
enter
or
mov
xchg
pop
popa
notl
xchg
in
lahf
dec
xor
adc
add
movsb
and
sbb
fistps
pop
gs
ljmp
push
stc
sbb
insl
inc
dec
sub
jbe
sbb
sbb
inc
push
ljmp
dec
pop
clc
sub
mov
mov
aas
jno
adc
cmp
mov
dec
dec
push
sbb
cltd
xchg
es
adc
mov
stos
jp
ds
andl
mov
cmp
mov
sub
adc
jmp
movsl
push
cmp
loope
cld
mov
stos
push
cs
rclb
xor
xchg
movsl
cmp
cli
movsl
jl
in
daa
pusha
js
popf
push
sbb
rep
stc
pushf
xor
cmpsb
pop
push
shlb
es
jb
pusha
pop
push
ret
sub
cmp
mov
mov
ss
jae
mov
sub
pusha
inc
and
xor
cmp
loope
idivl
inc
dec
fldenv
ljmp
bound
ss
push
sub
movlps
popf
pushf
or
and
xor
push
fwait
adc
clc
xor
aad
pop
xchg
sbb
mov
lcall
push
jecxz
outsl
test
fs
mov
add
mov
rclb
xor
jb
push
outsl
cs
arpl
es
pop
pushl
jae
lret
jle
movsl
xlat
data16
jnp
lret
sbb
mov
xchg
sbb
jb
stc
add
bnd
push
push
xchg
std
mov
fbstp
or
or
lahf
xchg
lea
sbb
mov
mov
mov
adc
in
sbb
mov
cmp
xor
pop
mov
inc
outsb
fs
inc
lea
or
lahf
out
fsubrp
int3
dec
inc
iret
in
addr16
roll
pop
cmp
rolb
xor
in
push
push
fs
call
shl
aam
add
mov
inc
arpl
aam
fwait
sahf
pop
imul
sbb
jl
in
push
and
arpl
cmp
xlat
dec
stos
jp
mov
push
cmp
pop
movsl
and
push
aaa
push
out
dec
sub
cmp
pop
mov
cld
lock
or
cmpsl
inc
lcall
in
sub
clc
mov
dec
push
pop
out
les
gs
or
and
out
add
mov
dec
cmp
pushf
js
push
dec
out
repz
xor
fwait
js
mov
pop
dec
in
inc
push
dec
aam
aad
jmp
fstps
lods
outsl
inc
test
jns
mov
test
data16
sarl
sub
mov
mov
mov
jnp
je
outsl
ja
movsb
adc
push
xchg
cmc
cmc
mov
cmp
lods
or
shr
xchg
insb
inc
fidivs
das
adc
cltd
ret
xor
movsl
fisubrs
ljmp
sbb
dec
adc
outsb
ds
mov
and
mov
lods
or
pop
rcr
lods
jns
jae
push
add
in
dec
sbb
fldt
pop
or
fwait
scas
sbb
xchg
ret
inc
sub
push
inc
rcrb
sbb
mov
xchg
push
and
inc
sub
xchg
xchg
mov
or
dec
pop
leave
in
add
mov
jge
adc
push
jecxz
jmp
mov
push
lret
and
shr
imul
xor
cmp
jge
and
jne
lcall
xor
shlb
lea
pop
xor
push
mov
xlat
adc
je
mov
push
clc
cmp
push
and
mov
push
ficoml
fwait
dec
sbb
imul
add
leave
jbe
xchg
sub
push
xlat
sub
scas
ja
lds
xchg
aam
jno
mov
cs
add
je
mov
add
in
repz
adc
sahf
lret
dec
loope
jb
and
sbbb
aaa
test
or
push
jmp
xchg
mov
loopne
test
xchg
fisttpll
insl
push
out
dec
test
cs
and
out
or
xlat
mov
out
adc
enter
add
mov
xchg
cmp
jge
mov
push
push
or
out
rclb
jp
in
ja
dec
adc
xchg
adc
test
mov
enter
mov
movsb
xchg
and
lea
clc
mov
mov
dec
xchg
orb
mov
sub
fldl
pop
jno
mov
lods
fcoml
scas
push
add
test
inc
lret
test
mov
push
jns
cmp
mov
cmc
jle
popf
adc
add
mov
lock
add
les
loope
and
mov
push
sbb
repz
cld
mov
sbb
fcomip
faddl
adc
orl
lcall
lahf
out
aaa
and
movsb
jmp
mov
cmp
lods
lret
insl
push
clc
adc
xchg
xchg
ret
pop
jnp,pt
lahf
hlt
js
mov
jle
icebp
mov
js
int
jl
xchg
jmp
adc
mov
xchg
ss
mov
out
adcb
cmc
sbb
jae
and
xchg
std
adc
xchg
inc
lahf
rclb
push
cltd
in
push
loopne
adc
push
sub
push
repnz
xor
in
addr16
in
cmp
cmp
and
jmp
in
dec
push
mov
sti
dec
gs
pusha
dec
and
lahf
or
or
pop
dec
fisubl
mov
push
jbe
push
push
jg
je
add
aad
mov
aam
sbb
ds
xchg
arpl
xlat
daa
xor
pop
mov
daa
aad
adc
les
mov
loopne
mov
push
pop
int3
jo
ds
loop
fmul
mov
inc
xchg
das
cmp
pop
mov
lods
stc
ret
jnp
rorl
sbb
mov
les
xor
into
sub
jp
ljmp
dec
adc
push
push
adc
dec
sub
xchg
pop
adcb
mulb
lahf
add
stos
loop
push
add
adc
popa
fs
jecxz
dec
es
outsl
idivl
mov
mov
fsubl
mov
cltd
ret
xor
mov
nop
sbb
loope
mov
add
xchg
pop
jecxz
arpl
sarl
insl
shlb
je
and
push
push
jecxz
push
hlt
cli
aaa
cmp
fsubs
shl
test
cmpb
sbb
cld
xor
loope
jge
mov
jge
lock
push
lds
insb
push
or
and
cmp
adc
rcrl
cmp
pop
pop
xor
gs
movl
jg
cmp
fmuls
ds
bound
mov
jae
adc
xor
mov
test
dec
lods
sub
dec
jp
div
loopne
iret
in
cmpsl
cmp
lods
ljmp
shrb
xor
jg
add
pop
jb
lahf
inc
or
test
push
fsubl
jno
cmpsl
sbb
dec
rolb
jmp
sub
or
ffree
jns
aad
mov
iret
std
push
mov
xchg
aam
nop
notl
dec
pop
push
mov
icebp
xchg
sbbl
daa
loop
in
mov
adc
or
test
arpl
dec
and
adc
xlat
int3
inc
add
fisttpll
push
xchg
inc
ret
sahf
out
cltd
pop
sbb
loopne
sbb
dec
push
jmp
xor
mov
cmpsb
mov
adc
aad
movsb
aaa
push
and
adc
adc
xchg
insb
call
aad
jbe
adc
mov
inc
fcmovbe
add
pop
jmp
addb
jae
push
aas
sahf
fstl
jnp
dec
aam
adc
aad
insl
jl
mov
and
jne
lds
mov
sub
mov
shlb
pop
sahf
leave
sbb
mov
inc
shrb
jnp
xchg
pop
adc
xchg
dec
push
mov
clc
nop
dec
pop
inc
xor
clc
aad
insb
push
cmp
mull
icebp
jmp
push
pop
stc
daa
test
adcb
xor
popa
jns
cwtl
pop
xchg
les
jnp
rcrl
lods
mov
pop
or
aam
in
mov
fisubrl
jmp
divb
hlt
cld
dec
or
fbstp
xchg
rcrb
dec
test
pushf
aaa
or
sbb
sub
or
call
sub
xchg
push
xor
push
js
push
stos
inc
sub
sub
or
xor
out
pop
xchg
ficoms
das
rorl
jbe
aaa
mov
cld
lcall
dec
cmpsb
sti
sbb
loopne
or
out
mov
cmc
xchg
push
sarl
gs
ffree
out
gs
shlb
mov
in
jle
out
std
or
in
enter
adc
movsb
fiaddl
dec
and
jbe
sub
sbb
enter
mov
adc
xor
pop
ja
sbb
adc
rcr
aas
push
arpl
pushf
fiaddl
test
scas
cld
and
js
xchg
mov
jne
lock
loopne
fidivrs
mov
in
push
sub
push
aad
faddl
loope
sub
flds
xor
xchg
stos
or
test
sbb
add
popf
mov
stc
push
add
xchg
mov
pop
or
ljmp
pop
loop
call
js
sbb
cld
mov
add
or
jnp
cltd
add
adcb
inc
jae
xchg
push
jb
dec
rol
hlt
xor
faddl
cmpb
mov
cmp
xchg
cmp
jo
lahf
or
cmp
loop
jnp
dec
xchg
es
dec
test
mov
mov
loopne
subl
push
inc
ficompl
orl
imul
mov
cmp
das
lock
test
push
xor
jge
sbbb
pop
dec
jae
call
xchg
adc
jmp
cmp
push
bound
xor
pop
jl
data16
mov
mov
stc
mov
sbb
inc
push
cmp
pop
and
into
subb
and
cmp
adc
jb
mov
in
jno
push
jnp
insb
push
cmp
add
std
mov
sbbb
dec
ficomps
out
cltd
inc
in
add
cmc
or
jae
cmp
dec
jo
inc
shll
jnp
and
pusha
pop
add
adc
or
dec
sar
and
adc
addr16
dec
pop
inc
aaa
lahf
push
dec
xchg
daa
test
enter
in
mov
sahf
add
lods
pop
mov
loop
into
scas
rclb
push
je
data16
cmp
out
cmp
cmc
hlt
push
pop
dec
shll
xlat
daa
aaa
mov
ja
jb
cli
and
dec
push
pop
sbbb
push
test
jbe
aad
adc
dec
mov
lds
addr16
in
rcll
inc
outsl
xor
add
movsl
sub
aas
insl
and
mov
adc
out
mov
cmpsb
mov
sub
adc
addr16
ljmp
add
insl
mov
mov
outsl
cmc
push
mov
push
repnz
push
cmpsl
sub
ljmp
loopne
vcmpps
sub
fisttps
pop
push
push
sub
push
aaa
pop
mov
testl
dec
push
mov
call
jo
nop
add
cmp
cli
and
mov
and
sub
aam
and
xor
std
cmc
push
xor
inc
dec
and
enter
cmp
push
mov
jecxz
enter
pop
scas
cmpsl
gs
dec
test
ljmp
jb
and
inc
pop
leave
pop
adc
mov
insb
sub
repnz
push
sub
inc
test
push
inc
mov
add
sub
xchg
or
fcomps
repnz
aam
fstpt
or
inc
rorl
sub
sub
jnp
pop
adc
dec
inc
adc
mov
das
arpl
mov
int3
out
dec
ljmp
pop
out
push
mov
bound
jecxz
les
or
orb
out
ja
mov
xor
adc
add
mov
out
out
pop
icebp
sub
fildll
xchg
and
rcr
out
pop
fldcw
push
mov
ljmp
push
test
jp
shrl
negl
repz
hlt
sub
xchg
mov
mov
ss
leave
xchg
mov
dec
call
pop
pop
je
mov
rcll
scas
ja
leave
test
ret
push
repnz
cmpsl
cmpsb
es
xchg
pop
mov
sub
out
ss
dec
adc
shll
cs
data16
out
sbbb
xor
mov
lret
imul
daa
loope
into
ja
mov
int3
push
cmp
out
lods
add
sbb
js
loopne
loopne
mov
mov
jmp
js
or
pop
pushf
clc
adc
mov
aaa
mov
mov
outsl
pop
add
adc
adc
inc
mov
mov
stos
scas
in
shrb
iret
cmpsb
test
rcl
and
aas
shrl
fs
jne
dec
pushf
repz
nop
pop
call
filds
into
filds
ss
adc
add
outsb
out
loopne
aam
gs
mov
call
and
xchg
sahf
pop
or
inc
xchg
aam
dec
out
loop
bound
sub
cltd
jmp
icebp
push
arpl
or
pusha
xor
gs
adc
les
mov
add
stc
add
cmp
xchg
cmpsb
jl
enter
mov
es
lods
cltd
out
fwait
jmp
or
nop
xchg
arpl
adc
test
cmpl
push
jnp
int
repz
lea
les
cltd
adc
jb
jg
add
and
cmpsl
in
rorb
cmp
xchg
mov
addr16
stos
cmc
outsb
icebp
pop
mov
sub
dec
movsl
sarb
dec
push
and
dec
ja
pop
or
sbb
test
sbb
fs
cmc
xlat
imul
adc
sbb
add
hlt
scas
inc
cmc
pop
adc
dec
mov
adc
lock
mov
xchg
or
mov
int
fwait
lea
fwait
sub
cmp
nop
dec
lds
shl
mov
and
or
imul
gs
xbegin
fdivrl
jge
scas
int
push
adc
test
pop
sub
and
mov
lock
inc
mov
fsubr
loope
mov
or
loopne
xor
in
xlat
ja
inc
aam
dec
push
adc
idiv
or
aaa
insb
mov
aad
in
inc
subl
in
cmp
jnp
jge
xlat
stos
sub
stos
cmp
xorl
sub
mov
data16
shlb
mov
or
fdivs
fmuls
dec
sub
or
jge
dec
jge
and
lds
sbb
sbb
in
pop
shll
xchg
cmp
lods
or
icebp
and
mov
cmp
cvttps2pi
aas
data16
nop
nop
xlat
lea
sbb
les
dec
mov
xor
testb
inc
xor
push
jns
movsl
rep
add
pop
jmp
mov
aas
cmp
mov
sub
ljmp
pop
xor
js
sbb
cltd
loopne
dec
xor
cld
ret
mov
pop
fmull
xchg
jle
aad
out
testl
pop
loop
cmp
xchg
or
outsb
push
inc
rolb
sub
test
xchg
lods
sbb
fnstcw
enter
mov
sbb
cld
xchg
pusha
cmp
and
add
push
addr16
jns
xchg
aam
cmp
sub
sub
jmp
stc
std
jb
sti
mov
mov
data16
sbb
dec
sbb
cld
repnz
ss
ds
fsubrl
xor
fwait
xchg
movsb
ds
test
stos
push
inc
push
mov
xchg
xchg
mov
or
push
sub
scas
nop
jp
adc
sub
mov
mov
in
cwtl
lahf
jns
jbe
fcoms
movb
jnp
dec
pop
lret
lcall
inc
mov
dec
inc
pop
adcb
pushf
in
cld
or
shrl
push
icebp
or
fcoml
sarl
cmpsb
dec
iret
fdivr
mov
sub
je
sub
sub
imul
xchg
pop
jae
adc
outsb
dec
dec
icebp
call
and
push
je
cmpsb
and
and
out
les
pop
sub
cmp
push
rorb
gs
insb
rclb
loop
fcomps
xchg
xchg
jle
dec
fsubl
insb
or
mov
mov
stos
stos
push
loop
jl
lea
lret
enter
out
pop
add
shlb
adc
sbbl
pop
arpl
in
data16
enter
pop
scas
adc
mov
mov
pop
loop
adc
cmpsl
cli
cmp
jae
add
mov
lahf
xlat
lds
jnp
cld
arpl
rorb
aaa
mov
jno
cmp
outsb
adc
scas
lea
push
and
popa
xor
mov
jne
int
leave
cmp
sbb
pop
jne
xor
cltd
addr16
sbb
test
aas
ja
pop
int
fisubs
sub
shr
add
aaa
ror
aas
xchg
push
jbe
out
je
scas
mov
arpl
lahf
lcall
push
pop
add
hlt
pop
cltd
movsb
dec
push
and
push
adc
dec
sub
push
pop
fsubr
lea
inc
mov
mov
mulb
pop
in
inc
xor
pop
loope,pn
add
push
mov
push
adc
xchg
mov
pop
xchg
and
stos
data16
mov
jns
adc
push
cmc
test
mov
outsl
fstps
or
dec
pop
jmp
push
scas
test
stos
sub
push
stos
inc
subl
sbb
lahf
push
out
out
lret
adc
cmp
test
popf
mov
xor
xor
cli
cmp
loope
push
int
jae
and
push
mov
jno
dec
cmp
fcmovnu
mov
pop
roll
jle
xchg
in
mov
test
cmc
test
add
fldcw
xchg
dec
lret
ret
add
bound
sbb
and
add
pop
pop
shrb
jl
jne
sahf
vmread
mov
daa
or
jle
jmp
cli
mov
out
jne
in
int3
std
fnstcw
divl
fsubrs
sub
inc
pop
and
mov
sbb
and
inc
adc
mov
inc
mov
idivl
xchg
jle
xor
push
aad
ret
and
cmpsb
out
cmpsb
adc
xor
loope
out
pop
pop
jle
sbb
dec
lods
adc
in
lea
fisubrl
jp
and
lret
dec
fidivl
mov
pop
out
outsl
div
sbb
xchg
and
testb
arpl
sbb
jmp
dec
fdivrs
add
sbb
scas
jae
insl
pop
les
test
xchg
xlat
push
or
xchg
push
addr16
rcrl
imul
mov
lret
sarl
insl
or
mov
test
cmc
notb
dec
sub
mov
cld
movsb
shlb
cmp
push
stos
xor
popa
mov
pop
int
xor
daa
jne
imull
and
leave
mov
popa
ret
push
stc
gs
insl
cmp
daa
js
notl
adc
aam
add
stos
test
cmovp
mov
inc
lret
mov
jecxz
fsub
add
cmp
imul
stos
adc
push
pop
ja
loopne
add
pop
imul
jb
mov
mov
loopne
lods
sbb
lds
pushf
or
xor
lahf
cmp
aad
xor
mov
fwait
roll
call
out
cmp
fidivs
nop
xor
shlb
lahf
fstpl
rolb
fs
sub
lods
sbb
mov
popa
mov
xchg
je
fwait
outsl
in
fbstp
sbb
push
cmp
lods
xchg
xlat
jo
mov
mov
out
push
packsswb
movq
lret
xchg
sahf
cmpsb
shl
hlt
ss
sarb
subb
mov
xchg
or
out
data16
outsb
sbb
mov
jnp
sbb
dec
pop
clc
cmp
loopne
mov
popf
xor
data16
push
pop
xchg
inc
cmp
popf
mov
xchg
cmpsl
out
es
cmp
int
mov
sbb
adc
xor
out
rol
rorl
mov
adc
or
cmpsb
pusha
xchg
xor
pop
or
mov
scas
inc
pushf
les
cs
and
dec
xlat
scas
mov
push
jb
pop
jnp
enter
daa
popa
dec
out
push
out
or
es
loope
lret
xor
xchg
xor
inc
aaa
in
dec
jg
sar
add
mov
push
sub
and
ret
xchg
and
push
std
jnp
xor
xchg
cmc
idivb
pop
mov
add
cld
cmp
mov
lret
push
adc
lret
or
in
iret
pop
jne
outsl
push
inc
imull
mov
cmp
xchg
jbe
or
add
mov
and
sub
push
outsb
clc
ja
mov
inc
in
loopne
add
mov
adc
mov
dec
push
inc
jl
mov
jle
mov
inc
xchg
addb
mov
loop
push
jbe
mov
leave
ret
mov
add
rcrb
into
or
pop
bound
cli
ss
pop
and
notl
xchg
xchg
adc
shrl
loop
mov
sub
sbb
mov
push
sub
adc
orb
sti
cmp
aas
and
ds
movsb
arpl
mov
rcrl
je
aas
les
xchg
cld
popa
leave
mov
fnstenv
jl
out
ljmp
je
xchg
push
jmp
in
cltd
lds
jp
mov
xor
stos
sbb
mov
pop
mov
mov
cwtl
ljmp
cmp
ret
xor
lods
repz
pop
inc
xor
cld
fwait
stos
sbb
xchg
push
dec
mov
std
repz
add
and
hlt
sahf
int
setl
sbb
and
sub
dec
insb
clc
ljmp
js
cvtps2pi
ret
js
pop
mov
mov
dec
mov
fmulp
or
scas
mov
pop
cmc
sub
push
nop
lahf
mov
jne
dec
jbe
mov
adc
fcmove
fwait
add
cmpsb
fbstp
into
push
pop
dec
jg
mov
das
lret
pop
aaa
sub
rcll
loopne
out
adc
gs
repz
add
and
add
leave
stos
xchg
push
or
adc
adc
loopne
mov
daa
xchg
movsb
fistps
mov
xchg
aaa
or
jmp
inc
and
pop
enter
dec
in
movsb
xorl
icebp
pop
aaa
sub
inc
mov
icebp
inc
fisubl
push
pop
push
shl
jp,pt
mov
pop
imull
jl
and
cmpb
pop
cmp
inc
mov
outsl
shlb
sbb
xchg
ror
ret
shlb
xchg
iret
xchg
jo
stos
jns
in
in
pop
int
mov
sub
cwtl
jp
aam
rol
jmp
int
int
mov
aam
cmpsl
jb
ljmp
je
xchg
pop
scas
push
mov
mov
fistps
cmp
mov
movsl
subb
sub
mov
stc
cwtl
and
mov
loope
sub
sub
mov
adc
xchg
shr
xchg
sbb
dec
xchg
sbb
outsl
xchg
fidivl
sbb
sbb
dec
xchg
imul
adc
subl
add
ss
fmulp
and
or
sub
fimuls
push
sub
rorb
mov
push
sub
movsb
push
pop
jb
mov
xor
sub
out
jecxz
sub
jno
push
push
cwtl
fadd
sub
lahf
cmpl
and
imul
push
adc
dec
cmpsb
jb
hlt
mov
push
dec
sti
jne
add
inc
dec
fisubs
fs
mov
dec
sub
push
jg
jmp
or
xchg
push
mov
push
xchg
and
push
not
jp
sub
cmp
stc
nop
dec
jecxz
js
test
fdiv
dec
and
test
cmp
repz
lret
mov
push
mov
out
popf
and
xchg
mov
mov
mov
in
out
clc
sarb
into
ret
and
adc
mov
aas
int3
out
sbb
mov
mov
fstps
cs
es
pop
xchg
mov
pcmpgtw
int
xor
pop
mov
push
in
xor
adc
pop
inc
jp
dec
sub
sub
push
jmp
jmp
insb
ja
pop
jns
dec
jb
frstor
and
ret
imul
iret
loop
lahf
jmp
ds
mov
inc
and
daa
fucom
add
fnstcw
mov
dec
pop
pop
cmpl
movsb
test
mov
jecxz
jae
mov
fbstp
mov
dec
aas
mov
ss
imul
push
les
loop
push
std
scas
les
sub
adc
or
clc
jg
in
shlb
dec
leave
insb
inc
pop
push
cmp
dec
add
xchg
jge
push
xor
std
movsb
nop
mov
xor
inc
lcall
sub
je
adc
cmp
mov
loopne
psubd
dec
sub
dec
xor
or
in
dec
jg
outsb
ljmp
jb
inc
fistpll
or
addr16
call
imul
mov
test
push
push
add
push
rclb
arpl
and
mov
ljmp
insb
lea
icebp
adc
in
jmp
push
adc
fistps
push
jnp
addl
add
stos
mov
push
test
ffree
xchg
ds
cmp
sub
inc
lock
int3
insl
dec
cmpsl
scas
sbb
loop
addr16
pop
in
inc
inc
sbb
pop
add
lock
rcll
testl
lret
mov
aad
cmpsb
push
call
xchg
adc
enter
dec
les
shlb
or
add
addr16
aam
popa
xchg
add
cmove
lahf
jmp
iret
jp
sbb
dec
sahf
inc
popf
cltd
xorl
sarl
aas
sar
and
std
cmpsb
jae
adc
in
pop
cmpb
imul
inc
add
ret
adc
fnclex
insl
sbb
fisttpll
ss
lock
inc
popf
aam
adc
leave
aam
daa
lea
and
mov
xor
push
hlt
icebp
mov
push
jle
xchg
iret
mov
xor
outsb
sub
xchg
xor
stos
cltd
stos
js
or
cmc
sbb
shl
fstp
cli
outsl
test
sbb
inc
sti
hlt
stos
xor
mov
in
jmp
inc
cmc
adc
or
movb
stos
mov
clc
mov
dec
xchg
xchg
push
add
or
pushf
js
int3
jmp
int
ss
xchg
mov
xor
jle
inc
mov
sbb
xchg
lods
imul
xchg
sbb
repz
std
adc
add
test
xchg
mov
push
pop
jbe
mov
outsl
dec
mov
adc
dec
in
push
lock
jg
jle
push
sbb
sub
imul
xchg
lcall
and
popf
lret
icebp
dec
xlat
xor
fmul
rcrl
dec
sbb
lcall
sarl
xor
dec
sahf
mov
mov
aam
cs
call
icebp
and
inc
push
and
pop
lock
into
adc
cmp
xor
pop
mov
fisttps
std
sbb
sbb
stc
sub
and
jno
jns
lcall
mov
js
std
das
or
fs
out
lea
cmp
int3
sub
jns
fwait
mov
sub
mov
int
jnp
mov
mov
inc
jle
pop
xor
loop
subl
out
orl
jp
into
sub
push
cmp
sub
xchg
xor
aad
push
aam
inc
adc
pop
mov
inc
xorl
xchg
addl
mov
fistl
lock
cs
jp
test
mov
out
icebp
outsb
shlb
aaa
out
popf
dec
inc
dec
outsl
adc
fcompl
in
cmp
xlat
mov
xor
xchg
out
pop
cmc
into
pop
push
call
mov
ret
in
lret
jmp
dec
nop
ficoml
test
or
das
cli
daa
call
cmc
ljmp
add
push
out
lea
xchg
pop
hlt
repnz
sub
pushf
or
mov
sub
push
lods
lds
inc
push
jb
push
sub
nop
mov
out
aas
inc
adc
imul
cltd
mov
sbb
or
out
lea
ret
dec
sub
mov
pop
loop
jae
adc
nop
xchg
test
cmp
fnstcw
sub
xor
pop
repz
daa
roll
cli
fisttps
mov
push
out
stc
loope
dec
fadds
lock
imul
sub
sarl
inc
push
jne
cwtl
xchg
aam
mov
add
icebp
lods
int3
inc
sub
sub
jo
rcll
jmp
fidivrl
push
and
sub
or
add
mov
inc
pop
and
push
lods
icebp
sbb
scas
sbb
hlt
and
sbbl
push
or
cwtl
mov
into
push
notb
pop
mov
int3
inc
xchg
or
ffreep
arpl
daa
xor
in
push
cwtl
stos
out
lods
fiaddl
mov
push
test
popf
ret
rolb
repz
cmp
aas
rcrl
or
in
push
lds
add
out
test
shlb
out
jb
dec
loopne
inc
jecxz
cltd
outsb
inc
inc
and
jne
jns
addr16
add
addr16
lcall
orb
push
lock
popf
sub
push
les
mov
xchg
jmp
bound
data16
xchg
cmp
cmp
push
and
movsl
lods
mov
xor
shl
sub
xlat
mov
jbe
mov
inc
push
mov
shrb
mov
pop
jecxz
add
cmp
push
mov
push
int3
repz
gs
aaa
lret
movsb
push
inc
push
dec
cmp
fcmove
jge
cwtl
sub
push
pop
dec
pop
lahf
das
cmp
jae
push
push
inc
mov
jle
jle
lret
lods
cmc
out
int
sbb
push
adcl
fldpi
pop
rol
adc
loope
jns
lahf
in
jg
repz
ret
sbb
int3
inc
je
int
leave
dec
xor
psubd
fcmovne
sbb
subb
lds
sub
mov
movups
fcoms
push
cld
lahf
and
out
arpl
adc
cltd
out
pop
inc
add
je
insl
and
dec
in
test
pop
cli
xor
les
jns
out
cmp
jb
cmp
gs
pop
lock
or
dec
pusha
xchg
mov
scas
fdivp
mov
lcall
pop
mov
pop
loope
xor
jb
inc
outsl
in
pop
cmp
mov
and
mov
mov
cmpsb
jge
push
out
mov
dec
lea
lock
or
test
xchg
jge
daa
add
sarb
and
orl
sub
or
inc
mov
push
loopne
test
repz
xor
lret
je
daa
add
imul
adcb
inc
inc
aam
sbb
arpl
das
and
add
inc
mov
fiaddl
fdivl
jp
jae
dec
jg
das
dec
adc
adc
shlb
std
nop
dec
push
mov
pop
in
dec
lods
dec
pushf
push
mov
in
in
push
inc
fwait
pop
notb
cmp
mov
aam
sub
repz
or
scas
dec
ficoml
je
ss
cmp
int
popa
fbstp
imul
lock
addr16
cmc
add
ret
imul
aas
cli
pop
cmpsb
loope
int3
inc
iret
mov
jne
cmp
fistps
rcr
aad
fldt
push
sti
inc
loopne
out
cwtl
jecxz
mov
xchg
cmp
pushl
cmpsb
sbb
loope
sub
push
xor
out
push
mov
fcomps
mov
sbb
jne
ret
lods
movsl
or
les
int3
fadds
cmp
push
and
inc
pop
jnp
roll
xor
sarl
shrb
lock
mov
cmpl
xchg
and
pop
gs
pop
dec
sarb
or
mov
push
ljmp
ss
jmp
mov
add
jae
cmp
lods
idiv
xor
and
fs
inc
sahf
and
sbb
mov
out
js
pop
mov
push
ds
in
in
aas
cmp
lea
mov
rolb
test
mov
cwtl
xchg
aaa
sbb
jl
add
add
add
cmp
push
sub
mov
aad
adc
rcl
bound
cmp
add
or
ret
jo
mov
and
test
ret
mov
lahf
lahf
and
push
jnp
pop
aaa
dec
cmpsb
mov
push
dec
xchg
dec
add
ret
std
into
cmp
and
adc
jle
xor
jl
mov
pusha
cltd
psubb
jb
mov
mov
mov
mov
xchg
xor
lock
ret
mov
orb
rcrb
push
loopne
insb
sub
movsb
jb
sub
insb
ret
pop
es
inc
xchg
iret
mov
mov
mov
scas
cmp
sbb
sahf
inc
mov
in
xchg
cmpsl
add
in
cmc
jns
cmp
repz
mov
mov
test
rorl
push
mov
adc
scas
sti
lahf
push
cmpb
movsl
mov
mov
mov
out
inc
pop
stos
cltd
lea
mov
mov
ret
das
sub
vsqrtpd
shlb
das
ljmp
push
pop
int3
adc
and
mov
add
and
push
loop
jnp
xchg
or
hlt
lds
mov
inc
mov
mov
int3
push
cmpsl
jnp
sbb
push
loop
cs
popf
pop
xor
push
into
jne
mov
add
dec
adc
dec
or
jge
mov
xlat
dec
dec
aaa
addr16
adc
push
enter
std
aad
aam
xlat
inc
pop
outsb
lock
inc
add
and
fidivrs
lahf
hlt
aaa
sub
inc
mov
repnz
mov
aas
lds
xlat
rorl
pop
inc
and
dec
ds
int3
and
stc
data16
and
fildll
adc
imulb
lcall
pop
aaa
fsubrs
fidivrl
fstpt
hlt
out
mov
dec
mov
orl
dec
adc
mov
lahf
mov
jg
jge
pop
pop
stos
sbb
jnp
out
pop
push
loope
fsubs
mov
sbb
andb
fsubrs
mov
cmp
movsb
and
cmpl
pop
push
adc
cwtl
test
loopne
push
clc
push
fst
aaa
nop
sbb
add
fdivr
xor
dec
mov
mov
xchg
mov
cmp
test
jle
mov
pop
out
sbb
enter
push
stc
lret
jns
stc
xchg
ficoms
popa
adc
mov
test
aaa
jnp
sbb
add
rorb
out
mov
sbb
push
mov
mov
in
aaa
pushf
xchg
cld
inc
fimull
aas
adc
lock
jecxz
cmc
test
fldl
outsl
shlb
sbb
sub
popa
in
hlt
push
icebp
fcomps
das
cmp
or
xchg
push
popf
xchg
dec
cmp
inc
rorb
push
mov
pop
aas
jmp
xchg
mov
push
aad
negb
dec
pop
sbbb
add
jle
in
lahf
xorb
mov
stc
cli
xchg
xchg
or
jge
lods
stos
movsb
jle
mov
adc
repz
or
test
jle
jo
je
loopne
outsb
adc
call
push
pop
in
mov
sub
add
sub
add
dec
in
push
cli
sbb
dec
enter
inc
js
cmp
pop
leave
cmp
test
subb
jno
push
push
sbb
bound
adc
push
andb
mov
js
and
out
lret
cmovp
sbb
les
mov
xchg
adc
inc
jnp
setne
das
xchg
cmp
sub
ret
xchg
test
int
rclb
cmpsb
lock
enter
leave
dec
push
push
push
insl
insb
push
ds
ss
jns
cmpsl
js
shrl
xchg
inc
jno
sbb
mov
jae
xchg
adc
pop
cmpl
push
scas
push
in
xor
test
xchg
jmp
push
bnd
jns
dec
inc
pop
ss
mov
lods
aaa
cmpl
repz
jo
dec
dec
inc
stc
pop
cld
xchg
push
jbe
push
movsb
xor
adc
xchg
cs
les
jno
jecxz
imul
mov
pop
mov
loope
push
jae
cmpsl
inc
pushf
mov
data16
mov
and
add
sbb
enter
jge
and
int
fldt
adc
ja
ljmp
pushf
cmc
lret
mov
push
sub
loopne
fidivrl
mov
jecxz
jo
lret
fistpll
pop
scas
xchg
out
sub
add
sub
cmp
int
add
fcmovu
push
mov
arpl
xor
or
roll
or
dec
ret
push
push
mov
xor
dec
xchg
xorb
mov
test
ja
mov
rcr
sub
scas
gs
loopne
ror
add
loopne
cmp
das
repnz
cmp
data16
in
jbe
movsl
xchg
test
orb
pop
push
cmp
fs
popa
ljmp
fldl
add
repz
mov
and
pop
add
jle
sarb
add
out
cmpsb
rcll
divb
and
or
stc
and
and
sub
and
sub
jp
dec
mov
loope
add
iret
mov
mov
add
mov
dec
dec
cmp
push
mov
push
pop
push
daa
adc
lcall
cs
xchg
add
mov
arpl
mov
push
loopne
shrl
outsl
fimuls
in
lret
lea
pop
test
jp
in
push
fdivrs
sub
dec
shrb
cmp
pop
je
stos
push
aas
fldt
fiaddl
sahf
sbb
hlt
js
icebp
outsb
cmp
pushf
adc
imul
jno
lcall
sbb
in
cmp
insl
fdivr
sar
mov
imul
sbb
rcrb
or
das
mov
mov
sub
repnz
aas
shll
lods
out
xchg
cmp
lods
sahf
ds
hlt
xchg
pop
pop
cmp
and
test
inc
and
addr16
pusha
gs
inc
addr16
pop
dec
aam
in
inc
int
mov
jl
inc
hlt
jp
cwtl
xor
dec
out
popf
repnz
data16
xor
pushf
icebp
test
mov
jmp
jg
pop
jne
ds
int3
sahf
sub
fsubrl
sub
lds
in
mov
es
pop
daa
movsb
sbb
ja
inc
icebp
xchg
mov
mov
sbb
call
outsb
cli
mulb
sbb
andl
xor
pop
nop
jbe
stc
cmpl
inc
push
jb
subl
dec
popa
lahf
sbb
inc
or
sahf
test
push
add
jo
mov
mov
pop
pop
outsl
cltd
hlt
adc
ds
xlat
adc
cmpsb
test
sahf
xchg
pop
pop
mov
adc
dec
divl
insl
adc
mov
push
rorb
or
imul
pusha
test
add
mov
fisubrl
pop
add
xorl
push
adc
sti
test
sbbb
push
or
jbe
cltd
jo
or
push
scas
inc
mov
mov
cmc
jb
jge
stos
mov
es
lods
cmp
vcvtps2dq
sbbb
add
xor
push
mov
xor
adc
dec
pop
mov
mov
pop
popf
lret
cwtl
lea
add
xorl
dec
scas
cmc
movq
mov
dec
mov
dec
outsl
das
lods
popa
test
movb
jno
xchg
imull
xchg
insb
mov
xchg
cmp
scas
xchg
add
adc
pop
or
rclb
movl
sbb
push
jne
mov
mov
inc
negl
sub
add
mov
pop
jmp
mov
xor
into
xor
pop
xchg
cmp
ss
jmp
sub
jo
push
xor
jo
pop
mov
push
in
shlb
in
inc
mov
adc
cmp
cld
lret
sub
div
imul
aas
pop
mov
xorl
jl
ja
cmp
mov
jb
mov
adc
je
pop
enter
lock
push
in
sahf
add
int3
push
mov
xchg
getsec
mov
cli
call
shlb
mov
nop
cmp
mov
scas
inc
jnp
sub
dec
adc
pop
or
idiv
pop
rorb
je
imul
sbb
insl
mov
les
sahf
loop
and
andb
xchg
mov
out
arpl
sbbb
or
out
leave
pop
ret
fcoms
cwtl
loop
cmp
pop
sbb
sub
mov
fistpl
inc
sbb
xor
push
sub
pushf
loop
ljmp
cmp
sbb
sub
in
outsl
popa
dec
dec
pop
pop
enter
mov
subb
xor
inc
pop
adc
in
rcrb
rcrb
nop
xchg
mov
push
push
fimuls
or
push
dec
sbb
repnz
test
out
inc
test
cli
push
in
jnp
jp
nop
pop
xor
pushl
shl
xchg
dec
sub
mov
in
hlt
dec
jmp
push
sub
cmp
jb
cs
pop
mov
dec
adc
push
jg
or
adc
insl
sbb
loop
ret
nop
lret
xor
pop
repnz
inc
out
cmp
adc
sub
mov
cld
inc
insb
movsb
scas
rol
addr16
scas
stos
ss
test
sbb
push
dec
push
movsb
test
les
aaa
in
push
insl
rolb
inc
and
dec
push
and
scas
sub
pop
and
mov
sarl
add
sub
sub
aaa
pop
jns,pn
jecxz
cmp
fstpl
jp
imul
dec
movsl
or
cmp
pop
gs
cmpsl
jno
shll
lods
test
push
adc
test
dec
cmpsb
sbb
bound
mov
jmp
adc
mov
pop
lahf
mov
sbb
cmp
jmp
aam
xchg
test
mov
pop
adc
sub
jl
fldenv
lcall
lea
xchg
jns
dec
leave
idivb
jae
sub
bound
roll
das
lock
arpl
gs
xor
push
sar
mov
in
xor
shlb
adc
ret
mov
jle
inc
jno
mov
addb
jecxz
cmp
xchg
stc
stos
inc
jnp
loopne
lods
lea
pop
ljmp
pushf
mov
xchg
jbe
ds
cld
sub
and
pop
aas
sbb
xor
add
test
fsubl
mov
dec
mov
lcall
cmpsl
cmp
out
jmp
mov
xchg
mov
rclb
lea
adc
addb
push
faddl
js
div
pop
adc
outsb
filds
jp
andl
push
lret
loop
aad
jg
inc
xchg
and
xor
dec
xor
and
jp
add
pop
hlt
fnstenv
inc
lds
xchg
jl
sbb
insb
imul
fwait
dec
aas
pusha
cmp
scas
leave
jmp
jno
inc
cmc
xchg
jne
cmc
jno
rcll
or
loope
cltd
mov
lret
dec
lahf
pusha
cld
and
fwait
shlb
std
jl
mov
rorl
fsubs
jbe
shlb
push
ja
jae
jecxz
sub
mov
add
ret
adc
minps
xchg
adc
gs
mov
popf
lds
orb
pop
out
jmp
test
outsl
dec
loop
imul
push
jge
arpl
mov
scas
aas
in
leave
adc
dec
in
dec
push
jle
mov
inc
test
mov
or
fwait
and
popf
dec
mov
loop
push
fidivrs
clc
shrl
jecxz
fwait
push
lret
pop
sti
cld
xor
enter
jge
fnop
xlat
lret
clc
das
cmp
xor
mov
dec
push
popa
pop
dec
xlat
xchg
incb
add
adc
popa
nop
push
cwtl
cmp
adc
jmp
je
sbb
lcall
push
pushf
dec
es
scas
sub
bound
test
xor
ds
xor
or
jg
jg
fwait
cmp
push
movsl
repnz
jns
add
test
pop
inc
fcomi
sbb
leave
jno
cmpl
sub
ljmp
jno
cmp
mov
inc
jmp
push
in
xchg
loopne
add
hlt
lock
decb
rolb
cld
xor
add
dec
cmpsl
and
xchg
loope
cmp
mov
sbb
pop
vmovupd
imul
mov
push
push
adc
jp
fdiv
outsl
push
fcoms
divb
inc
pop
sti
or
push
leave
xor
push
cmp
lret
fstl
inc
cmpl
dec
in
ljmp
jmp
adc
or
xchg
stos
ljmp
fsubrl
fistl
pop
jbe
mov
sti
dec
js
gs
insl
and
pop
ljmp
hlt
cltd
pop
mov
lahf
fmul
test
or
xchg
dec
cmp
push
int
loope
jns
imul
cwtl
xchg
mov
xor
repz
flds
add
mov
loopne
or
stc
mov
popa
bound
out
sti
add
pusha
mov
in
inc
paddsw
adc
jo
xchg
loop
mov
push
cmp
mov
jb
out
scas
sub
faddl
sub
mov
scas
outsb
lcall
in
sarl
mov
stos
clc
stos
pop
imul
cld
add
jecxz
aad
push
dec
movl
loope
pop
call
bound
in
notl
push
clc
sbb
leave
push
xor
subl
cmp
stc
pop
adc
das
shr
loopne
push
scas
icebp
call
out
fadds
lret
sbb
cmpl
pushf
push
in
push
and
add
stos
pop
add
je
sahf
adc
or
sub
jl
adc
je
pusha
scas
pop
faddp
bound
scas
sub
mov
flds
int3
jb
testl
add
scas
pop
shrl
mov
cmp
cmp
sbb
jae,pt
dec
inc
inc
and
jae
sub
es
xchg
ret
popa
out
xor
jnp
pop
or
cmp
jg
pop
ret
rolb
insb
int3
mov
out
arpl
clc
add
insb
pop
mov
fidivs
mov
jne
hlt
pop
lea
push
fistpl
stos
pushf
sub
cmpsb
je
mov
adc
fcoml
xchg
mov
xchg
or
mov
jg
sbb
clc
cmp
mov
xchg
pop
insb
xor
xorl
mov
in
fidivl
ljmp
iret
jae
ja
adc
das
xchg
scas
mov
or
mov
loop,pn
and
jmp
sbb
pop
shlb
mov
das
iret
outsl
es
add
in
cmp
and
es
adc
cmp
fsubs
or
push
xor
sub
push
jno
pop
cltd
xchg
jg
les
icebp
bound
pop
aad
je
or
dec
jl
push
imul
dec
cld
and
push
xor
test
scas
into
lds
ja
push
jns
mov
daa
inc
lar
loope
or
fldenv
sbb
out
sbb
shrl
int3
movsb
gs
push
dec
std
sub
addb
lock
lcall
repnz
lock
rclb
dec
inc
dec
es
gs
movsl
andb
or
movsl
outsl
sbb
hlt
mov
fisubrl
aas
imul
sbb
iret
adc
push
xor
xor
lcall
test
loopne
jmp
lahf
pop
jle
lods
fdiv
sahf
cmp
jecxz
aad
mov
or
jb
sub
ret
sbb
inc
gs
out
out
xchg
out
ja
jmp
push
dec
addb
dec
sub
inc
cmp
scas
cld
mov
mov
idivl
jo
cmp
xchg
jno
sub
gs
push
sbb
push
jmp
in
cmp
fwait
cwtl
cmpsb
adc
imul
enter
or
mov
in
sbb
and
and
das
mov
pop
xor
inc
int
sbb
scas
xor
in
cwtl
mov
inc
or
cmp
mov
fs
fisubs
cmc
lods
fnstenv
out
push
call
and
loopne
movsl
mov
or
leave
mov
mov
daa
mov
pop
aam
aaa
shr
les
push
or
cmp
mov
cli
pop
aam
aad
mov
dec
mov
push
or
hlt
outsl
and
test
xchg
pop
leave
in
test
mov
inc
loop
or
add
mov
xchg
mov
add
add
ret
call
mov
lds
dec
cmp
xchg
incl
inc
adc
inc
jo
push
pop
out
xchg
scas
add
clc
shrb
push
imul
push
into
and
fwait
out
jecxz
outsl
mov
xchg
aam
and
mov
sahf
inc
scas
loop
jno
cmp
push
clc
rol
jo
mov
sub
iret
jbe
sbb
hlt
enter
and
call
or
lret
pop
jecxz
pop
xor
sbb
mov
mov
push
dec
aad
repz
icebp
test
mov
loopne
rcll
add
out
aas
add
dec
xchg
mov
mov
dec
dec
cmp
movsb
lcall
out
roll
call
and
and
and
push
inc
push
ljmp
aaa
repz
xor
cmpsl
cmp
mov
enter
leave
movsl
ss
adc
or
pop
ds
xchg
adc
mov
es
cmp
loope
lret
adc
jo
mov
pop
jnp
xor
outsl
setl
jle
adc
test
cmp
cmc
adc
mov
and
xchg
outsb
push
in
pushf
sub
jle
pop
out
adc
fnsave
xchg
dec
adc
xor
mov
xchg
xchg
hlt
out
mov
scas
jne
sbb
xlat
pop
jl
fsubrs
lcall
out
ss
jge
xchg
dec
dec
sahf
adc
inc
insb
les
icebp
scas
notl
mov
push
mov
and
sub
mov
add
imul
sub
sahf
jns
mov
mov
sub
out
daa
add
jno
ss
dec
sti
aam
imul
push
jg
inc
push
sub
test
test
cs
hlt
aas
and
mov
mov
ret
xor
shl
jae
scas
repnz
cmp
xchg
lret
pop
cltd
fldenv
shll
mov
jns
fmul
rol
xchg
cmp
dec
mov
dec
mov
test
xor
sti
sbb
push
jno
addb
push
mov
movsb
jne
mov
imul
mov
xor
andl
das
rep
ret
gs
sub
aas
mov
push
fcoms
mov
xchg
fadd
test
mov
xor
push
inc
incb
cwtl
js
lods
pop
jb
xchg
mov
pop
lcall
fdivr
pop
and
imull
mov
or
ficompl
loope
nop
jnp
repz
inc
xor
das
adc
lret
cmp
sub
daa
jmp
imul
roll
stos
daa
sbb
cmp
and
and
scas
leave
pop
jno
jo
push
fadds
insb
jnp
sub
or
sub
mov
lock
mov
scas
sub
data16
call
and
outsl
jge
leave
xor
sub
jbe
test
dec
fiaddl
lcall
data16
add
mov
jb
dec
lret
je
dec
pop
inc
cmc
dec
stos
fdivrs
jae
loopne
test
into
or
jae
lock
das
xor
pushf
cli
jae
insb
iret
pop
mov
adc
roll
sahf
inc
and
xchg
int3
xchg
or
and
and
into
mov
add
pusha
pop
and
mov
cmpl
inc
ja
jge
pusha
or
dec
xor
pop
popf
adc
xorb
add
or
pop
xor
xor
mov
pop
jg
cmpsb
das
rorb
fdivrs
mov
cmp
sbb
pusha
js
pop
sarl
out
push
push
test
mov
pushf
mov
xchg
insb
pop
in
ror
dec
lcall
in
inc
cmp
jmp
mov
dec
stos
hlt
push
push
mov
cmpl
es
xor
xor
push
gs
ror
push
jbe
jno
mov
les
inc
call
and
outsl
ud2
cmp
cmp
sbbl
push
mov
push
cmc
pop
mov
fstpl
xchg
sub
ja
push
sbb
mov
gs
je
mov
xor
sub
sti
fldenv
shll
jnp
outsl
push
in
cmpsl
mov
in
mov
jecxz
fstps
popa
or
sub
testb
jno
ret
pop
pop
mov
and
mov
push
orb
lods
fsubp
adc
push
xchg
dec
test
mov
jnp
sub
lea
in
push
sbbb
loopne
sub
xor
mov
push
aad
mov
jae
out
stos
mov
push
jne
jg
xor
insb
xchg
jmp
test
mov
fimull
call
aaa
xchg
fsubs
xorl
popf
xchg
stos
icebp
mov
sub
xchg
jp
lock
xchg
jmp
dec
idivb
xchg
xor
adc
inc
out
jbe
push
xchg
movsl
aaa
push
adc
mov
jle
xchg
pop
pop
es
sub
dec
mov
sub
popw
cmpsb
or
dec
xor
mov
popf
add
std
sarb
or
sbb
loopne
out
out
rorl
push
je
push
lds
addr16
mov
cmp
pop
test
aas
sbbl
xor
hlt
cwtl
cmp
pop
jmp
int3
pushw
xor
adc
outsl
pop
lea
ss
jno
add
mov
cli
mov
xorl
ss
jp
mov
jl
icebp
test
mov
jecxz
sbb
jo
sub
int3
xor
adc
mov
jno
sub
xchg
imul
inc
dec
mov
fdivrl
adc
and
rcrl
push
jg
xor
push
hlt
push
lret
int
inc
jae
xorb
testb
mov
or
mov
push
dec
lret
lea
rcrl
pusha
mov
inc
stos
orb
arpl
fisubs
sahf
sub
test
mov
in
xchg
adc
insb
bound
in
pop
data16
sub
das
ljmp
sbb
cmovne
push
pop
fdivrs
sahf
dec
mov
nop
data16
xor
lods
mov
push
jecxz
inc
pop
push
inc
mov
xchg
mov
sti
jmp
in
and
push
inc
fcom
and
and
push
lahf
pop
add
arpl
mov
mov
inc
das
sahf
inc
call
gs
testl
mov
adc
call
outsb
lea
and
into
out
imul
sahf
lock
mov
add
js
aam
rol
aad
and
imul
bnd
xchg
ja
jne
popf
in
pop
aaa
and
sti
dec
mov
shrb
cmp
push
in
jno
lds
lret
mov
repnz
aaa
jle
fsub
stos
aas
call
sahf
mov
xlat
xchg
cld
inc
bts
imull
or
xchg
sti
inc
dec
popf
xchg
push
jge
ret
out
ficoml
sbb
pop
aas
insl
inc
testb
mov
movsb
bsf
cmp
jbe
dec
xchg
jnp
into
stos
fsubp
inc
inc
dec
stos
es
cmp
and
divb
iret
mov
cmpsl
xor
mov
dec
xchg
jae
sbb
push
xchg
pop
push
ljmp
cmp
push
inc
cmp
adc
or
lret
adc
pusha
shlb
jnp
inc
sahf
ror
aam
cld
mov
loop
xchg
fwait
sbb
aaa
stc
pop
adc
mov
cltd
fnsave
push
cli
sub
or
fdivs
aam
sbb
or
nop
push
mov
enter
jne,pt
out
cmpsb
pop
push
lods
fcoms
xor
repnz
jecxz
dec
test
inc
xchg
jo
fsts
push
xchg
inc
imul
mov
mov
mov
xlat
lea
cmc
mov
clc
ljmp
cs
dec
subb
data16
popf
mov
xchg
adc
sbb
mov
outsl
sub
mov
mov
push
in
adc
mov
enter
sub
mov
pop
push
stc
ljmp
lds
das
jg
stc
lcall
jo
push
cs
int3
mov
xor
lds
or
clc
xor
aam
mov
cmp
sbb
push
mov
jmp
pushf
adc
cmpsb
add
lock
pop
fs
mov
notb
mov
dec
adc
clc
sbb
adc
insb
xor
mov
or
xchg
and
mov
fmuls
das
xor
ds
mov
add
mov
push
adc
hlt
adcl
fs
fistpl
sbb
sti
fyl2xp1
sub
dec
inc
stos
fldt
mov
lret
lock
nop
push
fwait
sbb
mulb
in
adcb
inc
sub
ss
aas
sbb
loop
push
xor
mov
addr16
pminsw
inc
push
adc
icebp
mov
or
inc
jb
jp
mov
std
jo
repnz
lret
daa
nop
fidivs
dec
ss
pcmpeqd
pop
aaa
arpl
cmpsl
pop
and
jmp
sub
scas
xor
push
imul
xchg
ret
inc
sub
xlat
int
and
sti
shlb
or
xchg
into
cmc
pop
xchg
inc
in
or
fneni(8087
push
dec
pop
mulb
repnz
or
adcb
insb
and
int3
xchg
pusha
or
pop
lret
mov
dec
mov
mov
push
xchg
adc
gs
daa
fs
movsl
movsl
jae
sbb
fisubl
out
sbb
cmp
mov
fcomps
lret
mov
bound
addl
jge
inc
lret
aad
dec
dec
xchg
mov
lahf
sub
dec
stos
fnop
or
push
xchg
push
mov
imul
arpl
fdivs
je
ret
push
pop
push
cmp
dec
pop
add
inc
mov
pop
add
cmp
inc
arpl
out
jmp
sbb
xchg
or
push
into
dec
in
mov
pop
push
rclb
mov
push
mov
aad
adc
and
je
testb
sahf
mov
int3
lcall
or
and
cs
sysenter
jno
mov
pushf
mov
mov
sti
imul
sbb
mov
and
mov
shlb
loop
enter
mov
lods
repnz
add
cmpsl
imul
clc
cmc
rol
dec
xlat
sbb
xchg
jg
sub
int
sbb
mov
jnp
enter
mov
mov
xor
roll
dec
pop
jae
dec
rcr
jmp
adc
and
pop
les
lods
loope
jbe
mov
mov
mov
mov
cmp
iret
enter
enter
das
push
cmp
dec
pop
test
sbb
mov
loopne
add
sbb
mov
adc
jl
in
into
fcomp
stos
or
into
fs
movl
pop
xchg
popa
xor
xor
xchg
push
lods
xchg
jne
rclb
mov
adc
test
loop
xchg
dec
and
inc
dec
xchg
outsl
lea
mov
push
jecxz
and
inc
push
xchg
jp
aam
mov
fisubrs
pop
out
out
push
add
xchg
aas
mov
arpl
xlat
stos
fs
jbe
adc
aad
test
insb
stos
jne
rcl
out
add
mov
fs
mov
in
jp
sbb
xchg
dec
cmp
and
mov
cmp
subl
mov
xchg
lock
xor
mov
jecxz
cmp
xchg
sbb
adc
movsl
push
ss
int3
xor
jle
inc
lods
adc
in
shl
mov
sub
add
pop
lods
sbb
daa
arpl
stos
xor
dec
stc
mov
rcll
add
mov
jg
sub
cmp
cmp
andl
pop
and
gs
xor
pop
xor
or
cmp
pop
cmp
xchg
add
icebp
cmp
dec
inc
cli
jne
jge
dec
lds
lret
sub
and
sub
jb
ljmp
stos
aad
bound
adc
iret
and
pushf
js
add
push
cmp
or
push
xor
rcll
stos
js
fldenv
pop
inc
outsl
ret
pop
fisubrs
mov
cmp
inc
inc
insl
cmp
sub
lcall
cwtl
pop
fs
mov
mov
cli
jo
inc
push
lods
push
imulb
pusha
xchg
test
pop
in
cltd
dec
pop
ret
sub
dec
fldenv
add
adc
aas
insl
mov
cmpsl
adc
pop
mov
inc
ret
movsl
sbb
scas
push
xor
fldl2e
stos
outsb
mov
mov
xor
mov
add
aaa
rorb
xchg
add
xor
or
and
xchg
add
xchg
xchg
push
out
gs
xor
xchg
jp
fsubl
dec
pop
movsl
out
lods
cmp
pusha
xchg
sbb
clc
push
adc
dec
mov
push
push
jne
pop
mov
rcrb
stos
adc
or
in
mov
xchg
add
or
lahf
insl
inc
lret
or
lahf
sbb
push
push
out
jo
shrl
push
adc
mov
jbe
sub
mov
inc
mov
push
xor
pop
subb
mov
add
dec
fstl
pop
or
sub
adc
dec
and
jns
mov
or
or
sbb
mov
cmp
stc
xchg
pop
shr
pop
popa
mov
xchg
mov
jecxz
mov
repz
mov
fisttpl
lcallw
cld
subb
test
xor
mov
pusha
add
je
jo
jecxz
aad
aas
lret
test
jg
mov
xor
or
out
jl
repnz
pop
push
push
es
sub
shl
sub
or
or
ret
xlat
cmpsb
push
test
lret
mov
into
scas
jmp
adc
dec
std
mov
iret
mov
imul
cltd
int
push
ficoml
pushf
pop
dec
ds
fsubrl
push
mov
push
je
inc
add
out
mov
sub
xchg
fbstp
xor
popf
popa
mov
dec
dec
test
push
stos
insb
cmc
loop
lods
adc
mov
push
daa
adc
jo
or
clc
and
mov
pop
aaa
dec
loope
aad
jne
sub
mov
mov
adc
cld
bnd
pop
xchg
enter
scas
dec
mov
push
cmpsb
jbe
add
pop
fucomp
in
out
jl
inc
push
mov
or
stos
xchg
ret
fs
and
or
sub
add
ret
pop
repz
testl
mov
movsl
movsl
lret
test
pop
cmpsl
int
mov
xchg
and
push
add
es
adc
je
clc
sahf
mov
aam
xor
sub
into
xchg
lds
out
sub
jge
addr16
in
cs
mov
hlt
movsl
cmpsl
hlt
stos
hlt
jb
rcll
or
lods
ljmp
lock
stos
cs
gs
jecxz
js
mov
ljmp
pushf
in
push
sbb
pop
push
movsl
and
stos
ljmp
jno
xchg
mov
call
sub
data16
cwtl
push
add
pop
cmp
es
loopne
adc
imul
out
mov
or
sbb
in
enter
pop
jecxz
xchg
pop
push
sahf
xchg
pop
pop
fildl
leave
cmpsl
mov
or
adc
adc
mov
mov
adc
out
out
lret
clc
and
push
int3
loopne
arpl
mov
out
cmp
lds
push
outsl
test
test
and
xchg
aam
daa
push
adc
push
sbb
xor
jmp
cli
aas
lret
enter
pop
pop
lds
rclb
jg
or
aam
icebp
mov
bound
inc
mov
add
xor
xor
mov
movb
push
xor
insl
dec
fstpt
movsl
xchg
xchg
and
test
repnz
neg
and
out
lret
movsb
adc
cmp
outsb
dec
push
test
ret
mov
cmpsb
out
cmc
out
xchg
mov
mov
dec
test
cmpsl
and
xor
mov
sub
sbb
out
push
and
sarl
mov
sbb
sub
int3
movsb
rcrl
inc
lcall
inc
cmpsb
sbb
sbb
aaa
mov
pop
lock
pop
push
inc
gs
insl
ss
movsl
cmp
adc
pop
inc
js
pop
enter
daa
fldt
ss
fwait
out
rcr
dec
pop
xchg
push
cmp
fbld
rcr
xorl
jp
stos
xorb
negl
sbbb
test
sbb
push
test
subl
add
or
jmp
jne
sbb
fsubs
popf
mov
jno
shrb
pop
mov
sti
clc
fcoml
insb
fsubr
mov
xor
adc
inc
cmp
jp
sub
and
popf
push
divl
mov
mul
dec
in
rclb
push
add
inc
in
icebp
mov
or
mov
cmp
mov
mov
xor
xchg
xor
sahf
cs
mov
sub
xchg
jle
fadds
adc
inc
cmpsl
xchg
jecxz
in
and
xor
insl
lods
inc
inc
scas
add
and
xchg
adc
sarl
ret
mov
ljmp
mov
xchg
out
mov
lods
cmpsl
jl
jnp
xor
xchg
jmp
xor
inc
push
cmp
xor
cltd
xchg
sbb
shll
pop
lcall
das
push
mov
xchg
lods
jl
call
mov
jmp
divl
and
data16
add
je
jge
in
fisttpl
aam
adc
sub
xchg
outsb
movsl
sbb
cmpsl
mov
in
lcall
fstpl
or
in
into
rcrb
jno
fs
call
in
jl
sub
mov
and
pop
pop
mov
jns
add
pushf
push
cmp
mov
xor
mov
inc
mov
call
mov
adc
inc
mov
and
or
dec
data16
xchg
jnp
sub
xor
pop
sub
out
mov
sbb
ljmp
jae
cmp
clc
add
or
test
mov
pop
out
xor
xchg
montmul
cmpsb
test
lcall
test
pushf
xchg
fucom
enter
loopne
push
repz
xchg
inc
stos
movsb
xlat
jp
and
fdiv
hlt
cmp
jl
out
imul
loope
jo
sub
xabort
add
inc
xchg
cmp
jecxz
mov
xchg
mov
movsb
or
pop
lods
idivl
mov
mov
add
cltd
lret
setne
sti
scas
lods
lods
or
fcmovbe
push
ljmp
imul
lahf
dec
cmc
out
mov
mov
cli
mov
xor
jno
stos
push
adc
dec
dec
push
sbb
and
push
imul
clc
mov
iret
test
iret
mov
sbb
in
incl
notl
out
sbb
pop
jl
sbb
add
incb
loopne
jbe
aad
and
sti
fs
push
mov
in
aas
cmc
mov
jge
dec
loope
cmp
dec
fldl
xchg
pop
mov
cltd
push
sbb
xor
and
cmp
fdivl
test
in
xlat
pop
insl
xlat
gs
cmp
pop
jge
cli
push
movsl
test
adc
addr16
inc
push
pop
inc
pop
out
add
hlt
mov
mov
xchg
jge
pop
out
loop
jb
testb
and
and
inc
xor
jns
insb
fisttpll
add
or
loopne
in
mov
gs
mov
iret
jecxz
mov
inc
daa
idiv
es
cmp
repz
cmp
and
add
enter
xchg
or
adc
stos
mov
jmp
int
mov
xchg
pop
lods
sbb
loope
fwait
pop
push
push
add
pop
add
mov
xor
rorl
mov
test
cmp
cld
xchg
xor
add
add
lods
lcall
push
mov
sub
push
enter
gs
jge
mov
dec
mov
cmc
sub
or
push
data16
stc
push
ds
xor
push
and
jge
inc
or
xor
js
ljmp
mov
xlat
pushf
pop
dec
out
and
cld
xchg
outsb
xchg
xor
das
aam
les
iret
fsubl
out
inc
loope
xorb
jle
addr16
sub
push
enter
popf
adc
sarb
sub
push
sub
mov
in
loope
sub
or
test
pop
shll
jg
cmpsl
lds
insl
cmpsb
and
jmp
lahf
fsubrl
jnp
jns
loop
lods
pop
cmp
es
ret
push
jb
xlat
popa
cmp
leave
cmp
pop
xchg
in
or
cmp
data16
adc
add
push
and
mov
cmp
mov
lea
lcall
sub
repnz
call
stos
pop
cli
or
call
movl
cmp
test
les
cmp
loope
stos
fcmovnb
dec
bound
pushf
test
aas
pusha
pop
xchg
dec
mov
jnp
hlt
adc
addl
xor
or
subl
push
mov
outsl
jns
xor
sbb
fimull
imul
insl
xchg
in
aaa
fcomps
hlt
jb
ucomiss
push
dec
mov
nop
pop
test
mov
fistps
cwtl
xorl
popa
mov
adc
test
in
pop
lahf
clts
outsb
roll
fiadds
imul
xchg
mov
pop
sub
stos
gs
sub
data16
rcl
xchg
jmp
pop
mov
scas
lret
xchg
ret
xor
aaa
cmp
xor
jns
in
lret
xor
inc
sbb
pusha
xchg
mov
jge
in
mov
test
add
add
pop
xor
imul
lret
xlat
fisubrs
sub
dec
add
push
stos
adc
sbb
push
adc
xlat
iret
cmp
pop
pusha
mov
pop
xchg
mov
push
mov
icebp
test
ljmp
es
decl
jle
sbb
into
aas
out
out
dec
adc
hlt
loop
pop
inc
cmp
inc
in
mov
mov
or
js
sbb
mov
jle
xchg
test
xchg
push
cmpsl
mov
mov
cmp
mov
shll
jo
insb
push
mov
js
cmpsl
icebp
mov
and
mov
jae
iret
fsubs
mulb
xchg
iret
imull
enter
or
xchg
nop
cltd
mov
outsb
push
movsb
mov
inc
dec
push
dec
mov
out
push
jae
outsb
sbb
out
mov
shrb
dec
or
jecxz
pop
jo
outsb
or
lea
and
pop
imul
loope
push
pop
adc
inc
pop
xor
sar
mov
fpatan
or
shrb
test
adc
inc
icebp
stos
sbb
fs
and
add
aam
mov
ja
lock
inc
mov
lea
sub
xlat
xor
jp
cld
daa
flds
nop
ja
mov
mov
popf
arpl
jo
xchg
push
mov
sbb
add
xor
in
insl
jge
rolb
fiadds
insb
xchg
mulb
iret
divl
mov
cmp
dec
stos
shrb
sbb
cwtl
ljmp
std
jb
jae
push
or
pop
mov
ret
loope
jg,pn
ja
jmp
cmp
push
mov
add
pop
fwait
or
fdiv
sbb
lods
jb
addr16
aam
cwtl
pop
mov
sbb
inc
lret
and
or
scas
fadds
mov
dec
movsl
xchg
inc
pop
ds
add
pop
jae
and
dec
mov
sbbb
mov
loope
sbb
stc
xor
and
inc
mov
sub
mov
aaa
pushf
cmp
loop
lods
imul
test
loopew
sbb
lea
hlt
das
je
movsl
in
rol
fldcw
daa
outsb
and
xchg
mov
and
popf
xchg
add
jecxz
mov
mov
imul
je
les
jecxz
or
jo
out
pop
jnp
pop
addr16
cld
mov
in
pop
xor
inc
xchg
repz
xor
in
addr16
cltd
sbb
cltd
test
mov
mov
inc
pop
sub
out
jg
fcoms
repz
pop
imul
pop
add
push
imul
movsb
cmp
fsubrl
dec
cwtl
inc
mov
repnz
filds
dec
fisttpll
and
sbb
rcrl
cmpb
sti
stos
scas
mov
rcrb
mov
aad
mov
mov
xor
inc
push
cmp
inc
in
fcoms
xor
data16
mov
and
pop
xor
xchg
fdivs
leave
jnp
rorl
adc
mov
fucom
and
xchg
ja
push
fbstp
movsb
sahf
in
shl
xchg
sub
lock
push
inc
insb
icebp
mov
push
add
jno
add
lcall
mov
insb
lea
push
ds
iret
cmp
nop
lds
shlb
movsl
test
testb
mov
mov
cmp
xor
mov
jnp
aad
push
fdivrl
icebp
push
add
mov
fs
in
xchg
loop
sub
popa
shrl
adc
cmc
mov
fstpt
cmc
dec
xchg
jns
popf
lret
sarl
add
test
adc
sub
mov
sti
inc
out
pushf
decb
jae
mov
pop
sbb
mov
repnz
fs
cmp
mov
lock
cmc
mov
cld
inc
push
lods
or
scas
mov
loopne
pop
mov
fnstenv
add
mov
mov
popa
xor
test
cmp
aam
inc
shl
ret
out
xor
cld
mov
sub
insb
push
sbb
push
test
int
xor
lds
xchg
xor
ret
sbb
push
nop
adc
mov
lds
aam
in
mov
popl
test
and
stos
fisubl
mov
sub
push
cmp
dec
mov
popa
or
cmp
nop
sub
and
jo
dec
xor
sub
dec
pop
or
scas
push
nop
cmc
stos
xchg
push
xchg
pop
shlb
fwait
xchg
imull
fstps
test
andb
or
inc
scas
xor
mov
sbb
stos
add
cmp
lods
cmp
loope
lods
gs
daa
popa
mov
jmp
dec
fwait
cld
mov
pop
and
rcrb
daa
mov
xchg
jp
mov
and
or
jecxz
pop
data16
ljmp
cmp
jae
sub
pop
jo
test
and
mov
sbb
pop
clc
jb
xchg
push
lret
roll
insl
push
xchg
nop
or
cmp
mov
stc
mov
mov
xchg
dec
lcall
pop
jns
inc
xchg
mov
adc
ss
jb
add
sbb
mov
call
mov
das
cmp
ja
mov
xor
cmc
mov
shrb
xchg
sub
fildll
and
mov
loop
out
fimuls
or
sarl
addl
jbe
sbb
fcomip
inc
int3
dec
sbb
pop
add
js
loope
into
js
mov
pop
sub
rorl
or
rcr
sub
pusha
cmp
test
or
lcall
inc
push
fbld
push
stc
jnp
fildll
rcll
dec
and
sbb
mov
data16
sub
add
mov
push
inc
mov
jl
lods
mov
mov
fst
adc
jmp
xor
aam
pushf
rcl
xchg
dec
lahf
sbb
jns
and
fdivrs
add
popf
jns
add
cmp
and
out
xchg
and
arpl
clc
jmp
mov
es
mov
push
stc
jb
insl
hlt
mov
fadds
out
cmc
les
movsb
pop
aas
lahf
cmp
iret
mov
ljmp
sbb
sub
cmpsb
adc
cmp
scas
cmp
int
mov
inc
mov
imul
inc
or
int3
repnz
cmp
hlt
pop
loopne
mov
sahf
xchg
push
ds
or
cli
xor
sub
frstor
bound
adcb
or
in
pushf
inc
sub
fistl
mov
sbbb
sahf
and
xor
outsb
sbb
and
push
adcb
add
or
adc
lock
enter
pop
xchg
mov
dec
sbb
sbb
xchg
test
mov
pushf
adc
das
mov
lods
addr16
adc
mov
inc
mov
add
out
cmp
cmp
das
test
xchg
mov
cwtl
inc
shlb
push
icebp
sbb
dec
pop
repnz
mov
dec
xchg
lods
push
sbb
fnstsw
adc
repz
shl
push
xchg
adc
jae
popf
xor
es
jl
and
pop
btr
mov
lcall
in
pushf
cmp
int
in
xor
je
pushf
fdivl
stc
xchg
sahf
dec
iret
push
pop
jns
or
xor
and
push
dec
stc
jle
adc
sub
leave
movsl
jge
cwtl
xchg
orb
mov
dec
es
jns
add
add
mov
push
and
out
insl
pop
add
std
mov
or
cwtl
orl
in
xchg
inc
or
dec
adc
mov
clc
mov
pop
adc
shlb
pop
pop
push
sti
aam
fmulp
insb
lock
imul
mov
arpl
inc
add
ja
out
into
push
in
inc
inc
mov
arpl
clc
loop
sub
cmp
cmp
add
pop
push
sbb
cmp
dec
dec
je
inc
call
adc
pop
dec
jbe
rorl
ror
inc
jae
arpl
bound
mov
or
add
xchg
jge
xchg
sbb
push
cmpsl
dec
loope
leave
inc
add
mulb
aam
pushf
repz
push
sbb
push
lret
cld
dec
outsl
jnp
enter
imul
pop
movsb
icebp
lea
fists
sbb
clc
xchg
push
jp
mov
push
pop
jg
adc
dec
mov
or
je
mov
pop
mov
imull
jmp
in
cmpsb
xlat
sub
xor
in
imul
cmc
inc
outsl
inc
lods
cltd
sahf
rclb
push
push
mov
cmp
gs
sub
lcall
xorb
or
push
in
clc
inc
and
cmp
in
int
sahf
mov
cmp
out
rorl
aas
mov
cmp
or
mov
sbbl
repz
cmp
pushf
push
dec
xchg
add
lahf
xor
orl
cmovns
shrb
sub
sti
mov
and
adc
test
cmpxchg
add
in
andb
jne
mov
jo,pn
mov
in
ss
into
mov
push
enter
add
enter
sbb
sub
mov
in
pop
insl
ret
sbb
rorl
lea
jbe
mov
inc
xchg
loopne
aad
outsl
xor
enter
jae
sbb
pop
inc
and
fmull
mov
xchg
lcall
int3
les
shrb
push
dec
mov
daa
outsb
cs
fs
jnp
bound
jl
adc
and
repnz
jb
sub
shlb
pop
jno
addb
xor
sti
and
sbbl
outsb
jmp
addr16
mov
mov
scas
std
test
mov
xor
movsb
pop
push
push
mov
cltd
dec
inc
clc
pushf
sbb
xchg
insl
add
jp
in
fwait
ja,pn
addr16
xchg
lret
ret
addr16
lcall
pop
or
push
adc
pushf
add
rorb
mov
or
int3
cmp
popf
ja
mov
add
cmpsb
fdivrl
cmp
jb
push
sub
mov
or
mov
sarl
into
and
sbbl
adc
lock
imul
sbb
cs
cmpsb
or
push
gs
out
xlat
pop
mov
shlb
addb
nop
shlb
aas
mov
cmp
lcall
int3
scas
pusha
aad
in
mov
jbe
mov
xchg
xchg
pop
push
fisttps
mov
cs
jmp
inc
rorb
testb
cmp
cltd
jne
popa
push
mov
cs
jno
aas
pop
mov
fwait
jmp
lea
popf
dec
sub
test
xchg
aas
bound
out
cmp
in
push
xor
or
mov
clc
js
mov
xchg
pushl
bound
test
xchg
bound
cmp
adcl
scas
or
add
pop
test
xor
popa
pop
xchg
ja
aad
and
inc
shll
sbb
movsl
incb
fisubrl
push
dec
adc
inc
or
or
cmp
sbb
fdivs
jle
int3
dec
pop
aas
sti
adc
pop
or
mov
xchg
mov
aam
scas
stos
call
mov
jp
and
js
and
pop
icebp
imul
mov
add
and
gs
imul
pop
push
lret
test
lret
lock
cmp
mov
sahf
xchg
xchg
mov
scas
nop
mov
sub
xor
icebp
ret
int3
imul
cmp
cwtl
jp
cmp
mov
adc
es
or
add
fildll
test
inc
out
cwtl
lds
scas
pop
and
lea
sub
lds
or
test
pushf
pop
jo
in
mov
adc
ss
das
bound
mov
fmull
or
aad
movsl
cmp
adc
les
sbb
ret
inc
jbe
mov
insb
mov
or
cmp
cmp
in
popf
imul
add
stos
cmp
add
nop
adc
notb
ja
jns
jmp
or
arpl
xchg
or
jge
lds
and
data16
pushf
into
sub
lock
out
psubw
fnstsw
xlat
ds
aad
inc
js
add
cmp
pop
push
fs
xor
cmovns
and
test
imul
nop
xchg
arpl
pop
jb
push
push
cmpps
push
mov
ret
insb
mov
xchg
xor
jmp
lret
pop
mov
add
in
dec
cmp
jnp
dec
in
push
inc
xchg
or
das
mov
mov
cmpsb
enter
clc
mov
iret
lea
sub
mov
push
cmpsl
jne
adc
aam
rol
in
cmp
and
jge
jecxz
addr16
push
mov
lds
jae
pop
xchg
or
movsl
enter
xor
shlb
out
aam
iret
lds
lds
dec
push
cmp
sub
adc
int
mov
mov
push
mov
fwait
jbe
sub
cs
mov
ret
lock
test
mov
sbb
pop
pop
aam
jecxz
xor
fs
js
push
dec
jle
xchg
jl
je
jo
ret
adc
or
rcrl
cmp
les
test
adc
sub
repz
push
sbb
jp
movsb
stos
inc
aaa
mov
bound
xchg
pop
lret
popf
fidivrs
mov
mov
mov
pop
aad
imul
das
fldcw
jp
jbe
cmpsb
mov
lods
scas
ljmp
stc
sbb
clc
dec
add
cmc
sti
inc
jb
scas
sub
or
add
repz
mov
out
jg
ss
out
sahf
xchg
mov
xchg
pushf
insb
dec
mov
dec
adc
inc
popf
mov
int
pop
jle
popf
xchg
movsb
push
pop
cli
test
and
or
xorl
adc
test
sbb
jge
xor
je
pop
or
push
xchg
mov
movsb
xchg
cltd
or
adc
pop
cmc
jg
push
dec
sub
fcmovnbe
icebp
nop
cmc
dec
mov
sbb
inc
lea
out
cli
stos
push
jne
sub
xor
stc
mov
xlat
dec
out
jbe
mov
push
jge
je
fistl
adc
sub
out
push
data16
inc
mov
inc
jns
fidivrs
lods
das
xchg
jae
ss
arpl
leave
das
out
out
out
insl
push
jge
cli
negl
loop
arpl
mov
fwait
loop
les
jle
dec
sti
xorl
inc
sbb
iret
mov
mov
xor
mov
jns
mov
testb
movsl
popf
daa
sub
jb
xchg
movsl
dec
cmp
ficompl
sbb
subb
dec
sti
add
cmp
jecxz
aad
and
or
test
jns
xchg
pop
push
cmpb
test
es
jb
inc
in
sbb
cmp
enter
mov
js
inc
fnstenv
add
testb
pop
fistpl
push
add
jg
ficompl
push
std
xchg
jmp
and
push
filds
jns
xlat
movsb
dec
and
jb
xchg
outsl
cmp
push
adc
mov
sbb
shr
mov
adc
xchg
pop
sub
das
jnp
cmp
inc
into
movsl
sub
inc
rol
rolb
out
jmp
fldenvs
je
dec
and
das
push
add
mov
xor
imul
sbb
into
dec
adc
dec
in
pop
add
fwait
lcall
and
outsb
xchg
mov
jmp
mov
ret
lret
int
out
mov
sti
jo
out
sar
push
paddq
xlat
lods
psadbw
je
insl
orb
divl
test
mov
and
iret
mov
ret
mov
dec
adc
cmp
insb
pushf
es
outsl
test
and
shrb
in
xor
das
xor
cwtl
cmpsb
call
mov
sbb
sbb
fisttpl
mov
aaa
lret
push
stos
and
inc
out
loope
mov
in
pusha
stos
adc
ficomps
add
or
cmp
test
lock
jmp
jp
lds
adc
jnp
push
ret
fsubr
pop
fcmovb
sahf
popa
add
shrl
pushw
mov
fsubl
shrl
popf
lods
xor
mov
mov
ljmp
lahf
rorb
cmp
in
jl
test
cltd
jg
jl
in
pusha
xchg
jmp
dec
pop
dec
xchg
bnd
data16
gs
mov
outsl
cld
pop
pusha
push
xchg
jmp
mov
subl
and
mov
pop
pop
out
xchg
push
pop
aaa
pop
pop
imul
or
dec
mov
pop
dec
lea
inc
xor
pop
in
add
xlat
sarl
jp
and
repz
ljmp
rolb
cmp
push
les
push
mov
mov
xchg
into
add
mov
sahf
jecxz
lock
mov
psrlq
fdivrl
mov
jl
push
fcmovne
xor
lods
xchg
stos
cmpsb
movsb
imul
mov
mov
cli
add
mov
sbb
mov
popf
pop
inc
mov
cs
aam
sbb
aad
jne
push
inc
stos
and
stos
xor
cli
cmpsb
fsub
sbb
rorl
inc
sbb
push
iret
and
inc
sbb
mov
lcall
fwait
sub
ss
repz
xchg
les
fldl
out
lea
cmc
popf
dec
adc
pop
je
mov
outsl
in
mov
inc
and
jb
aaa
sub
and
pop
sub
aad
ljmp
stos
es
jl
scas
xchg
mov
insb
pop
sbb
xor
mov
cmpsl
xor
jecxz
stos
jo
in
lret
data16
xchg
lret
push
mov
pop
cmp
loope
lods
cld
in
pop
xchg
int3
jmp
lods
imul
cli
push
test
sarl
sbb
sti
mov
push
leave
lahf
rorb
adc
and
xchg
inc
repnz
ds
or
push
jge
insb
push
inc
xchg
int
jnp,pt
and
push
ds
mov
int
and
adc
loop
test
pop
or
xchg
inc
fucom
je
cmp
movl
xor
enter
push
je
ret
or
popf
and
ffreep
rcr
jge
stos
jecxz
adc
xchg
lret
loope
jns
cld
iret
mov
insb
icebp
pushf
pop
pusha
mov
lret
sarl
rorl
xchg
repz
into
imul
in
lods
lods
mov
out
dec
out
iret
lods
icebp
les
je
fwait
rorl
jge
push
jecxz
jb
xchg
pushf
inc
orl
inc
cltd
insb
mov
lahf
data16
xor
fcmovne
call
dec
loopne
sbb
je
gs
es
inc
lock
pop
adc
xchg
shll
movsb
sahf
and
pop
scas
xchg
xor
xchg
mov
clc
mov
cmp
lock
fildl
ja
andl
fiadds
call
in
repnz
int3
aam
pop
mov
cmp
outsl
int3
cmp
cmc
int
clc
ud0
add
cmp
and
or
pop
mov
pop
lret
jo
pop
xor
xor
lea
jns
lods
stos
fsubl
sub
lcall
into
sbb
popa
dec
sti
mov
inc
cmp
jmp
push
cs
push
jne
or
sbb
or
stos
shl
or
mulb
xchg
cmp
cmp
sbb
fidivs
xchg
cmc
ljmp
dec
pop
rclb
daa
xchg
or
test
xchg
cmc
movb
jg
loop
pusha
test
adc
adc
into
mov
ss
in
pop
test
into
mov
bound
bound
xor
outsl
cmp
mov
addl
outsb
or
inc
pop
and
lea
xor
adcl
add
lcall
sub
rol
and
xor
pop
stos
adc
or
mov
cmp
xlat
mov
test
jl
cmpsl
sbb
leave
fwait
push
pop
inc
add
xor
stos
jns
mov
xor
aad
mov
lea
lods
mov
jle
push
test
daa
add
cltd
cmpsb
lcall
inc
or
movsl
lods
cmp
xor
and
push
test
pop
ja
or
lods
js
pop
cld
xor
rorb
push
imul
adc
mov
fs
and
bound
cmpsl
pop
jp
cmp
push
adc
pop
enter
enter
icebp
divl
mov
jg
xor
arpl
xchg
rcrb
fsub
movsl
xor
dec
adc
enter
add
les
jae
mov
and
scas
mov
stc
dec
push
mov
jne
xor
xchg
arpl
mov
pop
lods
pop
pmulhw
stos
push
es
andb
inc
push
push
pop
mov
shl
pop
xor
jg
cli
popf
push
fsubs
mov
xchg
inc
jae
push
pop
call
pop
cmp
gs
into
inc
and
rcll
or
icebp
inc
mov
cmp
dec
jnp
push
jle
cmp
jno
xchg
and
inc
inc
shll
mov
bnd
or
icebp
ficomps
int
mov
inc
and
lods
cwtl
test
xchg
mov
xchg
push
mov
setp
push
sahf
adc
xchg
loop
jne
jb
in
leave
push
jno
inc
sbb
mov
in
xchg
jbe
fdivs
jecxz
stos
shlb
cmc
test
adc
lock
push
jl
out
outsb
inc
dec
mov
and
xchg
sub
insl
xor
adc
jne
add
push
cltd
or
sti
sub
lret
mull
mov
and
gs
jmp
and
mov
mov
stos
pop
push
inc
stos
adc
mov
jl
add
fstp
xchg
push
lods
nop
dec
jecxz,pn
or
sub
test
cmc
xchg
sub
inc
cmp
ds
cmp
xor
stos
lea
sub
mov
dec
fstpt
jecxz
int3
xor
scas
mov
push
pop
pop
dec
pop
adc
xor
popa
mov
xchg
std
dec
ljmp
adc
dec
push
inc
mov
sbb
cmc
xchg
push
and
push
and
imul
arpl
sbb
pop
cmpsl
int3
mov
enter
or
jmp
test
jp
push
jb
cltd
scas
mov
mov
pop
loop
pusha
adc
fsubp
or
xor
shr
int3
add
data16
push
aam
inc
sbb
sub
xchg
xor
mov
mov
out
aam
push
mov
sbb
lcall
adc
xor
push
popa
sub
mov
mov
mov
in
fildll
push
sub
jns
mov
jmp
xadd
xchg
cmp
mov
rcrl
pop
aam
push
loopne
inc
call
sbb
fdiv
dec
cmp
pop
orb
pop
push
es
roll
movsl
push
xchg
mov
jge
mov
pop
add
cmc
inc
pushf
mov
push
pop
mov
jbe
movsb
jmp
lret
icebp
add
pop
data16
add
push
clc
outsb
adcb
mov
jo
pop
push
into
and
pop
popf
or
inc
jb
aad
xlat
xor
clc
pop
cmp
pop
ja
dec
adc
repz
push
or
or
mov
out
loope
inc
sub
sub
stc
sub
imul
fstpl
std
push
sub
sub
pusha
test
adc
lcall
int3
push
jns
mov
mov
fisubrs
sub
ss
mov
mov
jmp
mov
popa
mov
cltd
loopne
in
mov
push
sti
subl
dec
push
mov
push
mov
add
mov
cmp
cmp
std
clc
pop
adc
aas
pop
fnsave
mov
adc
fistpl
mov
in
ljmp
jmp
repnz
mov
mov
cltd
mov
sub
out
jecxz
mov
cmp
push
xor
lock
lret
or
test
adc
mov
mov
ss
loope
xlat
daa
dec
ds
cmp
movsl
aad
pop
out
out
mov
or
loope
dec
cli
movsb
mov
movsl
adc
add
push
in
mov
fwait
push
sahf
cmp
jge
mov
sub
pop
mov
mov
enter
mov
mov
pop
cmp
aas
aaa
add
jl
mov
mov
sub
roll
add
xchg
sub
mov
add
sub
cmp
jp
lods
mov
jbe
mov
stos
sub
aas
lret
cmp
mov
out
inc
iret
lods
push
sbb
push
js
std
mov
push
jae
cmc
mov
sahf
loop
xchg
mov
arpl
aam
ds
fnstsw
les
cld
jmp
push
inc
add
add
sbb
add
scas
pop
jno
dec
repz
std
shl
jb
sti
cld
inc
sub
cs
dec
or
fstps
sub
addr16
ss
outsb
popf
lock
pop
jns
sub
stos
ds
out
pop
test
idivb
lret
or
cmpsb
or
loopne
dec
je
popl
pop
enter
cltd
push
lret
push
lea
sub
bound
loope
cmpsb
pop
in
and
push
clc
gs
insl
push
insb
xchg
or
jg
jae,pn
out
adc
test
push
pop
adc
in
pop
rolb
pop
cmp
in
jg
add
je
daa
push
test
inc
mov
shrl
adc
xor
fnstcw
cmc
pop
add
test
imul
pop
ds
push
fnsave
outsb
push
xor
push
jl
mov
xor
test
xchg
or
xchg
bound
sub
dec
lods
sbbb
add
aas
adc
dec
daa
push
movsb
and
jmp
mov
push
push
and
push
mov
or
sub
sbb
cmp
mov
adcl
incb
ss
fdivl
and
cwtl
cmp
cmp
xor
push
jae
push
inc
in
jl
loop
dec
and
dec
and
das
adc
cmp
push
mov
fisubs
outsl
xchg
jnp
add
inc
lret
xlat
cmpsl
stos
adc
dec
mov
jb
sbb
adc
je
mov
xor
mov
and
adc
sub
cmc
addr16
jbe
xorb
jo
sbb
or
push
inc
mov
xlat
cli
and
jmp
xor
pop
cmp
arpl
jne
and
das
dec
rcll
js
stc
adc
outsl
cmp
pop
cwtl
xor
call
xchg
adc
jmp
mov
xchg
mov
nop
movsl
pusha
cs
jbe
decb
xor
mov
insb
dec
mov
pop
fisttpl
ljmp
lods
sbb
imul
dec
jns
mov
bswap
cltd
push
ss
movsb
call
and
aaa
sbb
pop
or
ljmp
outsl
jno
or
push
lahf
inc
dec
in
mov
mov
xor
fdivrl
mov
mov
cmpsb
incl
ja
and
cli
xor
cmp
mov
pop
inc
jae
or
pop
or
scas
pop
fcoml
out
loope
fs
ror
stos
jge
repnz
mov
sbb
aas
push
aam
jg
mov
adc
and
fidivl
jns
loope
dec
out
mov
cmp
mov
push
scas
mov
pusha
mov
add
or
mov
mov
cmpsl
test
push
or
outsb
pop
cli
cmpsb
push
fcoms
leave
xchg
in
outsb
adc
mov
sti
xchg
mov
insl
mov
and
int
cmovle
push
dec
sub
xchg
pop
cmpsl
popf
les
cmp
sarl
push
add
jbe
cld
repnz
out
push
inc
pop
push
jle
sub
sub
ret
cmp
mov
xlat
push
xchg
xchg
mov
xchg
clc
mov
and
jns
cmpsb
insl
sahf
and
xlat
xor
xchg
lret
adc
pop
mov
mov
lcall
push
mov
adc
cwtl
test
jl
insl
sub
popa
subl
cmp
adc
fsubl
cmc
daa
add
adc
sbb
xor
nop
leave
xor
cmp
push
repnz
cmp
stos
rcl
or
xor
sub
sub
stc
arpl
sub
in
sbb
jno
jns
out
mov
mov
cmp
movb
shll
adc
les
insl
daa
daa
je
stos
hlt
add
adc
xchg
sbb
dec
push
in
push
xchg
mov
xchg
repz
xchg
inc
lds
mov
adc
imul
idiv
pop
add
into
or
and
xlat
xchg
clc
dec
adc
pop
outsl
fisttpll
icebp
mov
inc
lock
cmp
mov
jl
xor
fwait
sarl
and
xchg
sbb
adc
adcb
jl
mov
daa
push
push
mov
gs
in
jns
iret
mov
pop
enter
mov
leave
xor
inc
out
mov
daa
rcll
push
push
jb
frstor
sub
push
dec
cmp
insb
dec
ficompl
das
mov
jmp
call
inc
inc
inc
mov
xchg
sti
sbb
std
into
jmp
mov
sahf
pop
imul
pop
sbb
notl
stos
lock
mov
jne
loop
lods
inc
cmc
ror
movsb
push
lcall
in
pop
jae
bound
push
push
out
popf
mov
xor
dec
leave
push
xchg
into
lcall
mov
push
ljmp
cmpsb
out
add
mov
lahf
xchg
adc
mov
insb
mov
jecxz
xor
add
repz
xchg
mov
fxch
into
and
inc
cmp
insb
xlat
cli
sub
sbb
insb
cmp
ds
cmp
xor
imul
arpl
jb
lea
es
pop
test
loop
jno
jle
mov
into
pop
jo
sbb
add
inc
sub
jo
inc
jb
dec
pushl
in
out
mov
out
cmc
jns
out
cmpsb
sub
inc
enter
add
xchg
insb
fistl
nop
xor
jae
incl
jmp
in
xor
jae
daa
jbe
xchg
dec
mov
xchg
icebp
add
mov
adc
cltd
pusha
xor
adc
mov
cmc
popf
aad
sub
push
xor
sbb
cwtl
aas
stc
fldenv
cltd
sbb
clc
cs
push
into
xor
loop
clc
cwtl
aad
and
out
and
cmp
fisubrs
inc
adc
lret
jnp
shl
adc
gs
jne
rcl
cltd
cmp
in
or
sbb
fisubrs
fmull
ds
jle
dec
in
pop
xchg
aad
dec
or
mov
adc
push
sub
sti
not
sub
movsl
dec
jecxz
repz
stos
sbb
stos
mov
icebp
mov
adc
jle
pop
pop
push
xlat
int3
inc
jno
cltd
lock
cs
insl
repnz
cli
xchg
lcall
or
les
push
inc
xchg
sarl
bound
push
call
mov
xchg
fld
sbb
mov
loop
sub
jbe
ja
sti
add
xor
iret
push
pop
lahf
insb
ret
sub
jbe
inc
ret
cmp
insl
cmp
push
push
das
loop
inc
bound
sbb
push
lret
ljmp
jmp
cli
pop
push
inc
adc
xor
stos
rclb
cwtl
pop
cmc
call
jae
fbstp
lcall
mov
push
add
mov
add
int3
pop
fisubl
faddl
popa
push
sbb
rcll
mov
ss
aam
cmp
test
in
test
xchg
cmp
jae
mov
pop
and
insb
int
jo
pusha
out
push
and
mov
and
in
mov
loope
incl
add
cmp
ret
mov
pushf
out
pop
mov
sti
cmp
iret
pusha
pop
repz
lods
jnp
enter
les
push
xlat
inc
stos
or
insl
cld
lock
in
popf
dec
and
push
mov
or
xor
bound
jle
ja
add
imul
int
xor
fstp
mov
test
cmc
push
les
sbb
cmp
movsl
ret
jnp
jge
cmp
insl
out
or
fs
repz
pushf
dec
sbb
shlb
pop
and
xchg
repz
scas
ja
aad
iret
lds
repnz
scas
movsb
sub
xor
inc
xchg
nop
push
aaa
lods
loopne
inc
or
pop
and
insl
mov
or
outsl
sbb
mov
push
in
fstl
daa
dec
fsubl
xor
xchg
cmp
ficoms
sbb
mov
sti
adc
or
aas
jno
push
jne
xchg
shl
inc
into
xchg
jmp
test
lcall
mov
call
lea
or
inc
fsts
sub
pop
cmp
ss
pop
mov
or
xchg
dec
dec
lock
mov
pop
daa
pop
mov
or
imul
fbld
arpl
or
add
add
mov
adc
test
leave
cwtl
in
xchg
in
test
xchg
inc
fwait
arpl
int
jns
das
push
enter
cli
js
inc
jnp
pop
int
pop
leave
fstp
lock
mov
xchg
test
dec
cld
add
jmp
lds
add
xchg
jns
add
inc
lahf
sub
int3
cmpsb
push
pop
popa
cmpsb
jnp
cmp
and
aam
cli
repz
and
fidivs
pop
add
xor
dec
cmpsl
or
outsb
into
aad
xchg
aad
push
repnz
rclb
jmp
xor
jp
push
lret
test
push
xor
data16
sbbl
repz
mov
push
add
push
add
cmp
pop
jle
xchg
dec
popf
xor
sub
inc
pop
mov
je
push
pop
lea
insl
out
pop
sahf
jno
adc
mov
inc
jg
mov
sub
loopne
dec
cmp
xor
subl
cs
leave
xor
dec
fcmove
mov
mov
mov
mov
and
sbb
mov
pop
xor
enter
sbb
imul
cmp
pop
mov
mov
sbb
andl
or
xchg
in
daa
mov
fs
in
loop
mov
lods
divl
shll
jp
jl
cwtl
popf
pushl
aam
fldenv
mov
add
jmp
data16
std
xchg
adc
mov
sbb
enter
idivb
dec
bound
jp
les
and
clc
outsl
sub
cmp
inc
and
sub
int
cli
mov
outsb
dec
push
jmp
pop
jo
add
sbb
xchg
xchg
and
inc
iret
xchg
out
xchg
orl
jecxz
dec
inc
sbb
fwait
shlb
adc
mov
mov
dec
pop
mov
in
push
xor
addr16
scas
ja
push
inc
ss
jle
push
mov
dec
stc
mov
outsb
xor
inc
lods
xor
adc
incb
mov
push
inc
sbbl
pusha
cwtl
scas
sbb
loop
ja
mov
jbe
mov
int
shl
scas
dec
mov
push
mov
cli
inc
push
int3
int
ljmp
clc
mov
pop
jo
adc
mov
add
adc
inc
and
repnz
sub
mov
mov
test
aas
lahf
and
ffreep
hlt
out
push
outsb
mov
jge
cmp
into
stc
out
mov
xchg
xchg
fcomi
push
fdivr
negl
out
mov
cltd
mov
leave
fwait
mov
sar
int
mov
test
pop
pop
mov
push
pop
mov
out
cmpsl
or
add
sti
fwait
mov
jo
cmp
dec
loop
xchg
sahf
add
sub
sub
mov
leave
inc
cmp
cmp
sbb
fnstcw
fildl
dec
inc
push
xlat
repz
or
xchg
adc
cmp
or
mov
add
dec
xchg
mov
scas
gs
inc
adc
xchg
xchg
adc
push
cli
dec
add
rep
imull
lods
ds
mov
in
cmp
data16
push
inc
add
push
ret
adc
inc
loope
jg
dec
insb
imul
aam
push
clts
bound
cs
repnz
inc
xor
jb
fld
dec
mov
push
gs
mov
and
in
lods
adc
push
adc
pop
repnz
jl
jmp
mov
push
jecxz
ret
mov
fidivrl
lret
pop
push
cltd
loope
daa
push
inc
push
dec
or
or
push
xor
adcb
mov
cmpl
jno
outsl
sbb
rcll
dec
aaa
push
inc
movsl
xlat
add
jbe
jmp
xor
cmpl
xchg
sbb
push
mov
mov
add
jb
js
mov
pop
adc
add
sbb
xor
mov
imul
and
shll
mov
push
pop
loop
sbb
pop
stos
mov
xchg
pop
mov
scas
loop
fdivrs
push
sarl
jecxz
or
pop
jae
repz
push
or
nop
push
fisttpll
pop
cmpsl
icebp
lret
es
adc
hlt
dec
dec
and
push
cmp
test
jl
outsb
test
out
xor
mov
xor
sbb
push
dec
fbstp
cmp
insb
int
inc
loopne
jbe
and
loopne
je
jae
add
and
cmp
jg
push
jecxz
mov
mov
sub
xchg
loop
clc
in
shl
sahf
fildll
repnz
inc
xchg
pop
dec
scas
and
lret
cmpsb
mov
fistpll
movsb
xchg
jge
push
lret
adc
mov
test
sbb
pusha
es
scas
arpl
scas
jle
mov
xchg
inc
sbb
js
subb
adc
xchg
aad
imul
inc
mov
cld
xchg
and
cmp
jg
xchg
inc
enter
outsb
jecxz
xor
hlt
and
inc
or
cmc
xchg
mov
push
mov
push
and
pop
jb
daa
sbb
andb
stos
dec
and
inc
or
push
fs
sbb
push
cld
push
and
push
stc
cmpsb
mov
sub
lods
hlt
std
jp
adc
add
jo
les
mov
jb
xor
aad
or
clc
pop
scas
jle
push
mov
and
xor
push
jg
dec
xchg
add
scas
ss
fucom
pop
out
into
sbb
sub
or
fisubrs
fsub
in
mov
mov
idivl
daa
or
xlat
outsb
negb
lahf
out
fcoms
movsb
add
bound
adc
loop
dec
stos
add
xchg
sbb
fstpl
dec
and
add
adc
int3
xorb
adc
test
addl
mov
jne
sub
rorb
mov
clc
push
idiv
or
pause
leave
sbb
aam
inc
sti
ficompl
stc
movsb
stc
push
cmpsl
pop
sbb
hlt
mov
iret
xchg
jae
aas
mov
push
pop
outsl
adc
sbb
in
and
push
add
mov
pop
movsl
mov
popa
ja
outsl
icebp
cmp
mov
mov
mov
insl
aaa
sti
adc
cmp
add
out
xchg
in
fucomi
outsb
out
scas
mov
repz
ret
aam
xchg
or
cs
les
xor
aaa
scas
add
shlb
adc
and
out
xor
idivl
xchg
rorl
rcl
fcomip
daa
in
cmpsl
in
dec
push
and
leave
xor
push
sub
mov
scas
daa
xchg
dec
sbb
lahf
xor
hlt
sbb
lahf
pushf
dec
mov
fcomip
ret
jmp
outsb
push
jle
fldt
add
mov
pop
scas
xchg
fldcw
fs
lea
jb
adc
cmpl
shlb
push
test
jecxz
add
xchg
mov
lret
fisttps
pusha
mul
and
rcll
ja
arpl
sub
xchg
xor
pop
sbb
pop
dec
cwtl
shlb
int
pushf
subb
mov
test
pop
dec
popa
ds
inc
inc
sahf
and
decb
pusha
dec
negl
cltd
xchg
ds
pop
clc
lock
fcmove
mov
dec
xor
jl
xchg
es
fadds
ljmp
mov
es
in
sub
lahf
and
sbb
test
or
add
mov
xlat
mov
inc
pop
out
lcall
sbbb
out
jg
jg
fs
movsl
mov
int
inc
sub
add
and
inc
push
sbb
cmp
add
inc
and
scas
dec
out
gs
push
mov
in
outsb
add
sbb
shlb
daa
adc
mov
adc
xchg
adc
hlt
mov
out
xchg
jmp
xorb
stos
lods
fldenv
or
sbb
scas
das
daa
neg
icebp
rcl
outsl
aam
push
mov
mov
lret
xchg
sbb
xor
popf
imul
imul
test
test
cmp
jb
pop
add
jmp
repnz
mov
sbb
fists
sub
push
sbb
jno
mov
adc
push
add
or
js
fcmovnb
fldcw
cmp
outsl
mov
ss
repnz
ss
daa
jp
xchg
mov
test
inc
fnstcw
mov
add
fsubp
rcr
inc
mov
inc
inc
lcall
and
sbb
adc
pop
cmp
push
xchg
aaa
leave
xor
rorb
stc
and
mov
pop
mov
outsb
int
lcall
mov
les
mov
sub
imul
mov
test
bound
nop
sbb
jnp
lds
into
jbe
inc
add
fists
aas
int
sub
fwait
xor
movsb
push
sahf
inc
shrb
jp
cmp
mov
mov
rcrb
inc
mov
fwait
mov
lret
cmp
mov
add
or
mov
add
dec
xor
hlt
fadd
mov
loop
mov
add
les
xchg
mov
shl
test
fnsave
mov
fcom
orl
not
xchg
push
cs
lods
enter
inc
pop
add
push
xor
push
fcom
inc
push
push
in
icebp
popa
or
or
mov
push
bound
in
ja
in
dec
jnp
fisttpll
ret
and
mov
movsl
xor
into
mov
into
xor
fidivl
jmp
lods
xchg
adcb
inc
add
cmpsl
stc
jns
jo
pop
jae
idivl
and
inc
or
mov
pushf
js
fisttpll
mov
fnclex
imulb
fcompl
pop
daa
xor
loop
test
cmp
lds
xchg
lret
xor
lea
xlat
push
shufps
scas
adc
inc
push
xchg
mov
dec
stc
into
ds
mov
xor
je
test
insb
jb
push
mov
xchg
adc
push
out
je
out
pop
lock
test
push
sub
xlat
mov
pop
mov
mov
dec
mov
je
mov
imul
orl
sbb
adc
in
mov
add
inc
pop
ss
cmc
dec
test
cmp
add
push
adc
out
jno
jbe
fcomps
add
or
cmpsl
imul
and
in
jo
add
test
out
in
mov
mov
jge
dec
cmc
jno
loop
xchg
or
ljmp
fwait
fs
adc
xor
sub
shrb
movsb
mov
ret
add
cmp
push
push
int3
add
push
sub
jg
lods
pop
mov
loopne
out
repz
ficomps
mov
lahf
lahf
flds
arpl
rorb
shlb
mov
movd
sub
std
cmp
mov
std
add
jmp
aam
jne
int3
outsb
sbb
pop
pop
or
mov
or
fwait
leave
cmp
dec
and
dec
mov
inc
pop
fmulp
popa
mov
aas
cmpsl
in
cs
dec
addr16
push
inc
pop
dec
adc
mov
fiadds
mov
clc
orb
test
imul
jle
inc
cmp
insl
inc
into
jbe
inc
clc
je
mov
push
sub
adc
loope
sbb
mov
in
stc
pop
push
cmp
xorl
cmp
lahf
push
sub
xor
movsl
adc
movsb
fimuls
xchg
out
inc
xchg
scas
out
negl
jle,pn
sub
or
cs
jb
loopne
sarb
inc
sub
push
rcr
cmp
push
cmpsb
out
pusha
and
dec
iret
inc
sbb
pop
dec
lds
inc
test
pop
xor
mov
mov
inc
icebp
cmp
dec
stos
iret
mov
decl
imul
add
push
cld
fwait
test
insl
outsl
jb
mov
sub
inc
sbb
or
and
in
out
xlat
test
sub
sahf
jge
leave
push
sbb
lea
or
cld
mov
test
and
lret
lret
pop
outsl
das
out
mov
imul
aaa
fidivrl
aaa
push
mov
arpl
shr
or
test
into
push
aam
mov
enter
xchg
and
lret
sub
decb
inc
push
mov
dec
mov
inc
mov
leave
push
mov
inc
in
js
cmpsl
in
mov
outsb
ljmp
sbbl
push
mov
fwait
push
inc
test
in
xchg
arpl
jne
cwtl
mov
daa
pop
inc
push
into
jge
test
xor
test
in
imul
aaa
xchg
mov
rorb
sbb
lahf
sub
out
adc
test
std
inc
cmpl
xchg
pop
push
and
adc
lcall
stc
sub
ss
mov
xor
mov
mov
je
xchg
or
test
sub
lods
sarb
ficomps
or
dec
test
fsubr
inc
jmp
or
pop
scas
sahf
mov
out
lret
stos
inc
outsb
sti
das
mov
pop
mov
data16
cmp
jl
pop
scas
sbb
jo
pop
cmp
scas
dec
mov
in
xor
js
fdivrs
mov
out
je
or
jnp
xchg
sbbb
bound
aad
adc
push
xchg
dec
in
and
jg
mov
dec
cmp
mov
mov
sahf
jle
movsl
dec
cmpsb
repz
dec
mov
cli
pop
mov
inc
lea
es
loopne
lea
inc
push
sbb
int
adc
call
mov
mov
dec
sbb
lea
xchg
sub
inc
sub
jecxz
and
sbb
and
aas
fs
imul
and
cltd
xor
or
mov
and
test
fwait
sbb
pop
adc
cmp
jae
cmc
fidivl
loop
push
mov
add
ret
mov
cmp
nopl
lods
inc
call
mov
sbb
mov
test
add
test
scas
inc
inc
adc
adc
cmp
pop
popa
jno
adc
rcrl
and
aaa
dec
sbb
pop
mov
imul
push
lods
add
popa
popa
in
sub
inc
movsl
repz
out
repnz
dec
push
mov
adc
jmp
inc
idivb
push
push
fnstsw
rol
mov
and
loopne
push
sbb
leave
mov
movsb
xlat
hlt
fdivrs
dec
or
arpl
out
sti
fcoml
sbb
inc
enter
cmp
rcl
enter
add
fldt
insl
insl
in
enter
bound
loope
xchg
add
in
xchg
aad
iret
and
xor
xchg
pop
fs
pop
sub
in
jle
fbld
sti
pop
sub
push
repnz
filds
cmp
push
cmpsb
popa
xor
orl
loope
lret
cmpb
mov
lret
add
sbb
cmp
jmp
and
push
xchg
jmp
loope
ret
bound
test
dec
mov
mov
cli
adc
mov
sub
pop
movsb
mov
push
mov
jmp
jb
mov
dec
and
fnstcw
inc
jp
cwtl
cmp
cs
stos
mov
fildll
and
jo
test
dec
and
jmp
enter
in
mov
outsb
icebp
ret
push
sbb
xchg
or
mov
pop
dec
and
mov
sbb
push
push
movsl
adc
pop
pandn
clc
jno
pop
lret
sub
fcmovbe
repnz
icebp
subb
xor
push
out
aaa
rorl
jp
add
or
enter
push
pop
push
nop
cld
inc
ljmp
rolb
popf
jle
mov
xchg
ds
jb
ret
xlat
jne
jl
nop
adc
inc
adc
popa
hlt
fisttpll
sub
scas
arpl
aam
mov
lcall
xchg
movsl
notb
jns
lods
adc
iret
push
pop
xlat
pop
bswap
mov
std
adc
lods
jge
aaa
out
jmp
iret
cmpsl
mov
add
jno
into
pushf
pop
mov
fiaddl
addb
mov
xchg
scas
xor
movsl
in
movsl
ret
cmpsl
dec
xor
cmc
sub
ss
mov
shll
cmpsb
dec
xor
aam
inc
xchg
lea
push
arpl
add
push
push
xor
aam
mov
stos
add
pop
in
jns
fsubr
dec
mov
jae
or
jp
push
sub
ror
mov
xchg
in
or
mov
mov
xor
in
mov
in
jae
xchg
xchg
arpl
call
orl
adc
in
mov
das
imulb
inc
mov
jno
cmp
mov
lods
lret
jp
xor
mov
dec
inc
stc
inc
and
push
pop
shl
xor
mov
aaa
int
lds
fwait
out
cmp
mov
lret
inc
xor
xor
sbb
data16
add
popf
incb
pop
mov
push
adc
ss
sbb
adc
ja
mov
sarb
sub
dec
sbb
inc
xor
lret
and
repz
or
and
in
adc
and
jle
cmpsb
pop
mulb
cwtl
data16
mov
jbe
test
call
fwait
cmp
sub
bound
jl
cli
sbb
adc
mov
outsb
daa
fs
inc
mov
out
jnp
rorb
mov
je
cmp
sub
nop
test
out
cltd
scas
rcrl
fdivs
mov
jno
pushf
pop
in
mov
sbb
xchg
xchg
insb
adc
add
cmpsl
or
int
int
dec
data16
insl
mov
cltd
in
pop
adc
pop
xchg
cmp
repz
pop
icebp
stos
or
mov
mov
lahf
or
sbb
mov
sub
cs
fdivl
xchg
cmc
adc
xchg
jae
cmp
pop
inc
in
test
add
addr16
mov
jl
sub
js
lds
stos
jbe
ljmp
xchg
arpl
jl
pop
lods
or
cmp
ret
pop
and
push
pop
loopne
jb
inc
cmp
mov
or
add
and
or
inc
rclb
add
or
leave
and
or
push
outsl
add
mov
xor
or
lahf
mov
sbb
aad
lret
movsb
sti
popf
lods
js
fldt
decl
push
out
scas
sub
int
popf
ljmp
out
add
inc
pushf
or
xor
pop
and
pop
lret
fisttpll
pusha
xlat
mov
or
sbb
mov
and
and
lock
pop
js
mov
jmp
sbb
aam
imul
add
ret
push
inc
cmp
jg
mov
loopne
xchg
pop
push
ja
jne
add
sbb
or
push
inc
shl
xor
or
fucomp
je
inc
fdiv
cmp
push
out
hlt
cmp
fbstp
ljmp
or
add
dec
adc
lahf
dec
enter
sub
jecxz
negb
popf
adc
hlt
push
inc
shlb
jb
addr16
hlt
scas
out
lds
sbb
lock
inc
call
test
and
leave
cmp
fildll
nop
sub
cwtl
xchg
popf
hlt
lret
pop
adc
add
adc
inc
or
dec
cltd
sub
jbe
sbb
jns
popa
or
sbb
lcall
and
inc
xor
sbb
pop
inc
or
pop
rclb
iret
push
arpl
sbb
sub
ja
test
push
sub
icebp
mov
mov
sub
repz
xlat
arpl
cmp
testb
jne
cltd
sbb
test
ret
pop
inc
ds
mov
movsl
sbb
push
sti
mov
sbb
or
and
stos
jecxz
clc
in
inc
xchg
xchg
mov
add
push
lcall
arpl
sahf
dec
stos
push
xor
pop
xchg
dec
xchg
test
clc
cmpsb
xchg
mov
out
jbe
xlat
push
fcmovne
push
aad
inc
jmp
add
jb
inc
pop
jno
cmpsl
jp
in
std
adc
test
mov
and
add
out
add
xchg
je
pop
fiadds
mov
fmull
aas
xchg
ret
mov
add
leave
push
rorb
inc
add
dec
pop
daa
dec
clc
mov
movsl
pop
mov
ds
cmp
and
test
clc
add
jb
pop
shlb
mov
xlat
or
sahf
add
adc
cltd
add
cmpsl
sub
adc
pop
cmp
xor
adc
loope
cmp
pop
mov
mov
imul
add
add
ds
sbb
inc
mov
mov
sbb
ret
test
mov
in
lock
mov
popfw
std
outsl
xchg
and
push
roll
adc
popf
xor
popa
fistpl
xor
mov
sub
iret
cld
frstor
xlat
push
mov
adc
fldcw
fwait
lods
dec
cs
aad
adcb
jp
pop
inc
mov
push
mov
test
cmc
in
mul
popa
fdivr
lcall
push
mov
rcl
dec
les
xchg
cmp
or
cmpsb
cmpsb
inc
sbb
pop
mov
bound
stc
fs
fistl
push
or
mov
test
outsl
xor
adc
mov
pop
cli
pop
pop
cmp
add
mov
jbe
inc
leave
enter
or
aaa
aas
push
xor
movsl
xchg
sub
roll
or
sub
jle
jnp
jecxz
std
push
jg
vmread
rcrb
in
stc
and
jns
xchg
push
jbe
pushl
lea
repnz
mov
xor
sub
pop
xor
lods
jnp
pop
jecxz
sti
lret
or
dec
mov
xor
imul
test
out
test
fadd
xor
push
dec
pop
or
push
lds
fisubl
shl
lods
fists
and
fsubl
add
cli
hlt
xchg
js
dec
outsl
mov
imul
enter
out
lret
or
jno
repz
mov
test
or
das
push
mov
mov
out
cmp
movsb
out
iret
popa
daa
shll
rep
mov
iret
xchg
lcall
loope
rol
lahf
popf
jno
sarb
movsb
popf
sub
leave
push
and
mov
js
pop
jmp
cmp
pop
shlb
jg
fcoms
ja
xchg
addl
iret
sbb
jecxz
xchg
ret
cltd
add
xor
sbb
xchg
and
jmp
pop
lret
mov
jmp
hlt
aas
push
sti
data16
push
inc
jge
xorl
and
iret
fisttpll
mov
push
sub
aaa
mov
lahf
sbb
inc
insl
sub
cli
mov
xchg
mov
inc
popf
test
in
test
insl
sbb
fwait
cmp
sub
cmp
sub
sub
or
inc
iret
mov
pop
fs
adc
jg
dec
fwait
xchg
lcall
dec
in
out
test
push
outsb
xor
test
lds
sub
push
jb
lcall
ret
call
pop
lea
addr16
in
not
xchg
js
int
incl
mov
push
mov
mov
push
sbb
and
jp
cmp
in
ljmp
outsb
xor
pop
das
jb
dec
in
adc
imul
mov
xlat
ljmp
lods
arpl
sub
popa
pop
cmp
jp
leave
mov
sub
rcrl
daa
mov
lret
movsb
fcomps
clc
lock
dec
ja
mov
loopne
xchg
sbb
jmp
jg
fcompl
idivb
stos
fstpl
pop
fidivl
fldpi
jns
jnp
idivl
xchg
stos
pusha
ja
out
movsbl
dec
call
sub
mov
push
mov
dec
out
pop
filds
sbb
repnz
andl
mov
pop
xor
mov
push
in
pop
dec
call
mov
insb
test
xlat
in
mov
call
mov
sub
jae
mov
in
mov
pop
jnp
push
push
shl
fmulp
imul
push
cmp
daa
cs
mov
inc
and
gs
jns
fsubrs
ror
repz
imul
insl
mov
sbb
mov
dec
cmpsl
mov
jl
dec
mov
pop
inc
adc
js
jo
and
lods
cld
into
loope
in
repnz
push
shll
sub
lea
inc
dec
addr16
xchg
pop
inc
mov
add
hlt
pop
ds
imul
jl
mov
jne
pop
inc
out
pop
enter
xchg
int3
cmp
test
shlb
or
pop
push
in
fiaddl
xchg
sbb
push
rorb
or
mov
jns
movsl
nop
ja
mov
adc
jge
jle
xor
mov
or
adc
jae
faddp
mov
pop
push
jmp
mov
aas
push
mov
cmpsb
adc
aaa
fwait
out
xor
xchg
sti
pop
std
test
push
je
pop
or
or
loop
xchg
xor
pop
sbbl
jo
mov
aas
cmpl
in
movsl
cmp
mov
cmp
and
sahf
testb
aas
cmp
xor
mov
mov
xchg
sub
arpl
push
cltd
movsl
mov
test
sti
mov
xchg
sbb
push
mov
sub
sahf
mov
xor
mov
insl
out
aad
mov
jno
cwtl
stc
lahf
out
clc
enter
xchg
add
stc
sub
sbb
adcl
jl
cli
and
mov
and
inc
mov
xchg
aas
shll
pushf
in
mov
pusha
imul
fnsave
pop
jle
aam
lret
inc
xor
xchg
int3
iret
sub
stos
add
out
popa
aad
sbb
popl
sub
adc
lods
in
nop
js
jns
push
cmp
icebp
in
inc
inc
scas
xor
pop
cmpsb
push
push
cs
xchg
cmpl
cli
mov
cmp
shll
nop
and
aad
into
aaa
scas
outsb
adc
test
push
outsl
mov
sbb
inc
lea
ret
and
stos
pop
pushf
or
sub
add
sbb
mov
add
jmp
jns
int
mov
in
ds
mov
push
fiaddl
or
mov
repnz
or
mov
nop
pop
in
push
lock
mov
loop
lods
jmp
xchg
or
mov
out
jl
jno
dec
adc
sahf
or
aad
js
clc
xor
addr16
sub
in
lods
jbe
mov
mov
mov
cs
out
sbb
inc
xchg
pop
or
lock
out
cmp
fisttpll
enter
mov
les
xchg
lahf
insl
inc
fnstcw
dec
xor
inc
jle
lret
arpl
das
ds
lret
push
test
aaa
xlat
push
into
cltd
inc
pop
mov
pop
and
negl
divl
inc
jbe
js
in
rcll
push
or
and
frstor
dec
xchg
inc
lods
cmc
and
push
rcr
and
lds
cmc
inc
mov
sub
iret
push
rcrb
adc
das
out
movsl
mov
enter
sbb
add
mov
rcrl
mov
jnp
scas
cld
dec
loop
pop
xchg
mov
inc
ja
inc
dec
dec
in
mov
fldt
cmc
xchg
js
pop
mov
cmp
push
mov
xchg
xor
cwtl
mov
add
sbb
pop
loopne
add
jle
sti
xor
xor
dec
into
idivb
sub
adc
int
adc
icebp
sub
sahf
les
ret
test
jne
mov
jnp
mov
jne
loopne
stos
out
xchg
lock
xchg
sti
jnp
cs
xchg
loop
ret
mov
pushl
testb
push
mov
les
and
stos
cmp
outsb
rolb
add
mov
aam
dec
out
add
inc
cli
cmp
movl
jge
jmp
mov
dec
mov
int
pop
add
les
xor
sbb
loope
sub
lods
adc
aad
orl
data16
or
pop
inc
mov
dec
iret
mov
popa
out
push
std
jmp
fcmovnb
andl
repz
inc
into
lods
sti
dec
pop
inc
jns
fs
fucomip
xor
cwtl
inc
rcl
hlt
mov
xchg
ror
daa
inc
mov
test
incl
adc
push
ficoms
push
enter
inc
xchg
mov
pop
or
jp
pusha
dec
imul
ficoml
push
cs
pop
push
pop
outsb
iret
fldl
lods
mov
push
jp
insb
ret
aam
ja
cltd
add
jo
cmp
mov
dec
fnsave
leave
mov
test
push
mov
xor
in
scas
inc
iret
mov
xor
adc
les
mov
or
push
mov
ljmp
fmulp
and
mov
movsl
sbb
pop
in
inc
std
adc
add
dec
pop
shlb
std
mov
inc
cld
mov
ret
jb
sbb
sub
std
adc
lods
and
mov
scas
jo
sbb
iret
jno
xchg
push
mov
sub
mov
fs
sbb
inc
shrb
sbb
xchg
xor
jmp
je
mov
push
push
mov
das
mov
mov
aas
cwtl
nop
or
or
sub
adc
fnstcw
sbb
mov
repz
or
fiaddl
lock
mov
fs
stos
xchg
cmpsb
mov
sbb
push
jmp
push
adc
fwait
add
add
jo
ds
ss
shll
and
aaa
jl
fcmovb
pop
sbb
vmread
jge
push
sbb
or
or
inc
fbstp
pop
cld
lock
inc
mov
insb
jne
push
add
xchg
call
lret
jmp
ret
pop
sub
adc
movsb
lock
xorb
decl
inc
jmp
pop
sub
mov
imul
xor
fiaddl
dec
mov
xchg
test
inc
lods
das
out
xchg
xchg
mov
loopne
mov
add
fdivs
xor
lea
mov
mov
pop
lahf
lock
sti
or
scas
mov
xorb
outsb
push
enter
rol
imul
cmp
clc
test
out
dec
loopne
in
xor
pop
dec
imul
fistpll
int
aam
mov
or
in
sbb
sbb
push
inc
xchg
xor
cmp
fsts
fiadds
push
pop
ljmp
xor
mov
push
pop
shlb
imul
push
jns
aam
push
jl
inc
es
out
jecxz
in
out
sub
dec
std
add
mov
test
fcmovnb
shlb
mov
sbb
ja
push
rorb
das
lds
pop
bound
pop
fmuls
push
rolb
stos
in
sbb
lea
xor
mov
xchg
mov
mov
out
pop
xchg
xor
xor
sti
addb
mov
aaa
jb
dec
fisttps
or
push
repnz
stos
stc
lock
xchg
sub
push
loope
mov
jg
nop
mov
inc
scas
xchg
les
mov
repnz
repnz
xor
gs
mov
pop
lock
arpl
push
pusha
dec
sbb
enter
push
ds
and
pushf
inc
adc
aad
cs
mov
sbb
xchg
stc
mov
sub
outsb
das
dec
jge
cwtl
sbb
cmp
sbb
xor
adc
adc
mov
xor
mov
nop
inc
insb
insl
jno
in
inc
in
adc
in
in
movb
je
subl
sub
aaa
jo
push
ss
xchg
jne
adc
movsl
leave
loop
inc
pop
rcll
sahf
repz
mov
fs
inc
pop
push
ja
int
xchg
inc
jo
pop
add
push
add
sub
pop
xchg
fwait
mov
jae
push
sub
dec
shll
inc
mulb
stc
dec
cld
outsb
dec
jnp
mov
icebp
enter
or
push
int
shl
shlb
ds
inc
enter
xchg
fsubrp
cmpsl
sub
mov
mov
fucomi
cmp
in
aas
data16
orl
mov
lock
mov
shl
mov
cld
in
adc
pop
pop
insl
bound
int3
repz
mov
test
aam
mov
cs
ja
mov
and
call
add
ror
push
mull
clc
xchg
pop
cltd
xor
jo
sub
lcall
dec
pop
sub
cmp
jnp
jp
cmpsl
cmp
cld
scas
fisubrs
cmp
les
cmpsb
imul
js
push
sbb
xchg
orb
lret
dec
rorl
es
pop
imul
push
mov
cmp
pop
or
popf
or
mov
push
lods
inc
xor
cmp
mov
jns
dec
pop
sbb
fs
sub
daa
jae
jno
fnsave
inc
enter
popa
jecxz
ds
test
add
or
jle
jne
pop
add
test
les
pop
pop
adc
fsubrl
sub
fnstsw
imull
scas
movsl
sub
mov
aas
mov
mov
pop
mov
or
push
inc
ja
sti
and
clc
xchg
push
xorl
mov
xchg
lods
push
push
inc
mov
or
fsts
pop
sub
inc
cmpsb
aad
pop
loopne
cltd
sub
frstor
mov
pop
lods
pop
pop
jg
push
push
cmp
gs
lret
push
out
push
mov
jae
mov
cld
stos
ret
sti
mov
and
fstpt
push
and
mov
pop
and
xor
mov
loope
ret
in
mov
push
enter
les
inc
insl
ror
xlat
xchg
xchg
adc
adcl
cli
dec
mov
mov
push
leave
mov
add
fldcw
pop
stc
xor
xchg
cmpsl
mov
mov
ret
cmp
mov
push
in
daa
ret
or
mov
jle
js
mov
ret
call
dec
pusha
mov
dec
aas
push
mov
test
xchg
test
add
jno
xchg
ficoml
and
push
dec
add
sar
cmp
sbb
mov
cli
loop
mov
notb
xchg
sbb
jb
jne
pop
or
repnz
mov
outsl
adc
out
push
idiv
outsl
popa
jns
and
jb
mov
test
mov
repz
xchg
fiaddl
addr16
xchg
insl
mov
pop
push
popf
stc
sarl
pop
xor
and
pop
sbb
mov
add
bound
mov
adc
xchg
subl
or
xchg
cmp
nop
xchg
inc
pop
pop
adc
scas
daa
insb
xchg
fwait
ja
outsb
cltd
or
adc
mov
xchg
fdivp
cmp
xchg
mov
inc
sub
pop
mov
fistpll
pusha
sarl
dec
dec
sub
cwtl
mov
andl
lahf
jb
and
sub
fsubrs
inc
cmp
or
sbb
xor
int3
xchg
int3
dec
call
add
jne
push
mov
cmpsb
in
push
adc
js
xlat
fucomp
cmp
mov
mov
push
adc
test
cmp
in
xchg
in
or
nop
lahf
xor
jmp
mov
lret
leave
insb
mov
lock
xchg
sbb
in
push
enter
in
gs
pop
pop
stos
sbb
cltd
xor
js
out
mov
je
dec
lock
push
mov
popw
sub
xchg
pop
inc
cli
ljmp
mov
leave
dec
sbb
cmpsl
imul
lea
sbb
in
and
xchg
stc
inc
dec
jns
mov
cmp
and
or
pop
mov
testl
add
or
data16
popa
lods
mov
cltd
mov
rclb
jne
mov
test
sbb
sbb
gs
test
rolb
jmp
cld
mov
jge
mov
jnp
jne
pop
dec
lods
fcmovne
mov
ljmp
add
jl
cmpsl
mov
adcb
into
mov
sbb
cmp
mov
test
mov
lods
mov
pop
add
pop
xor
lcall
aas
out
inc
jp
inc
mov
mov
pop
hlt
mov
adc
xor
xchg
call
mov
repnz
fsubrl
sahf
aas
pop
dec
pop
mov
adc
lcall
add
sub
inc
push
repz
cltd
pop
cld
sub
cmc
daa
or
scas
and
daa
and
lea
rol
sbb
push
add
or
scas
cmp
loopne
in
xchg
daa
rclb
cmp
out
sbb
out
xor
xor
testl
or
aad
addr16
lret
push
pop
incb
and
or
and
stc
lea
xor
repnz
outsb
cmp
test
xchg
fdivs
push
loopne
lret
xabort
sbb
fs
ss
xchg
jns
xor
mov
sbb
imul
and
call
jb
cmp
ss
sbb
sbb
push
fwait
sbb
repz
popf
cmp
inc
sub
lahf
xlat
adc
adcb
pop
and
aad
jecxz
cmpsl
or
ret
in
pop
push
rcrb
out
jecxz
mov
jno
pop
pop
in
into
push
int3
sub
sahf
adc
dec
test
repz
call
aaa
inc
xor
stos
mov
aas
pushf
mov
repz
inc
mov
xchg
inc
xchg
jae
cmc
test
sub
lods
movl
je
sbb
ja
pop
jmp
int3
jecxz
aad
mov
dec
xchg
nop
pop
nop
adc
in
std
inc
lahf
jle
aaa
push
add
roll
xlat
mov
ja
xlat
cs
push
mov
pop
fld
leave
sub
in
cld
cmp
ss
sub
adc
call
pusha
pusha
mov
adc
test
fcoml
pop
out
xor
cli
repz
push
fdivrs
jg
pop
or
gs
pop
out
inc
fimuls
and
jge
jb
out
scas
loop
xchg
insl
sbb
cmp
jle
int3
pop
lds
dec
mov
cmp
and
push
add
lea
mov
jnp
mov
mov
jmp
cwtl
nop
fxch
aas
ja
mov
stos
mov
pop
xchg
outsl
bound
sti
cwtl
inc
or
sbb
dec
cwtl
and
iret
mov
nop
stos
sar
fs
xor
mov
out
pop
and
push
cwtl
test
bound
lods
loop
mov
and
shr
sub
cli
add
popa
cmp
lcall
fdivr
dec
imul
lods
fs
jmp
pop
push
mov
test
repz
push
int
in
popf
notl
jo
mov
pusha
cld
ja
xchg
test
mov
lock
fistps
push
xchg
xchg
outsb
cs
mov
add
push
push
dec
adcb
push
cmpsb
fwait
push
sti
lret
in
and
cmpsl
test
jge
and
fdivrp
hlt
sahf
or
dec
mov
push
aaa
inc
loope
loopne
aam
cwtl
out
movsl
inc
aas
xor
add
mov
mov
lods
mov
mov
stos
int3
pop
fldcw
aaa
xlat
std
sbb
or
xor
fmuls
shlb
mov
pop
jle
dec
dec
testl
call
mov
cs
and
addb
pop
dec
lahf
roll
gs
lea
dec
push
lea
pop
stos
std
cmp
daa
mov
outsl
bound
ds
enter
test
xchg
idiv
jnp
enter
pop
cmp
cld
aam
sti
out
add
insl
push
dec
xchg
enter
int3
pop
adc
and
int3
sub
aad
and
dec
cwtl
fldpi
pop
cmp
test
imul
leave
mov
ret
adc
imul
jecxz
cs
add
pop
testl
push
jae
jp
ja
jbe
or
cmp
mov
popf
cltd
and
inc
sbb
sbb
push
lods
xchg
mov
xlat
sub
gs
out
dec
cmpsb
aaa
cli
imul
and
nop
inc
mov
and
in
and
jnp
add
ret
cmpsb
aad
sbb
hlt
out
cs
jb
scas
mov
and
jl
cmp
pop
enter
adc
cmp
lret
cli
lahf
aad
push
add
mov
popl
add
xchg
jne
cmc
imul
and
sub
or
test
es
adc
pop
xor
pop
mov
jae
orl
jno
addr16
fidivrs
roll
imul
sbb
inc
lea
imul
out
insl
ret
inc
ljmp
into
aaa
adc
xor
pushf
sbb
fs
adcl
inc
mov
dec
pusha
cmp
imul
ret
add
push
xor
jl
ja
out
mov
or
test
sub
mov
dec
rcrb
js
adc
mov
cltd
mov
rep
rclb
mov
mov
pop
in
fistps
dec
add
stos
xlat
enter
sbb
and
in
sbb
aaa
mov
mov
in
data16
xor
mov
ds
mov
sbb
mov
jge
cwtl
jne
lods
mov
in
mov
cli
sub
push
cwtl
stos
mov
data16
shll
clc
push
rcll
adc
icebp
pop
cltd
pop
ja
loop
inc
jns
std
jae
cmp
in
pop
into
lahf
sbb
pop
test
jmp
outsb
add
or
or
repz
iret
inc
jo
lea
daa
or
push
add
nop
mov
add
cmp
dec
and
adc
movsl
clc
rolb
or
test
fwait
mov
push
lahf
push
cmp
adc
mov
loopne
jb
aaa
or
inc
fistps
add
fistpll
jne
stc
aaa
cmp
fcompl
incl
mov
sub
rclb
xchg
sbb
sub
sub
dec
lret
insb
push
dec
aad
or
push
ret
xlat
cwtl
jl
dec
jne
mov
pop
std
mov
fcom
rorl
add
inc
cmp
and
cmp
cwtl
sbb
ja
sbb
pop
data16
mov
in
fs
jl
pusha
negl
mov
xchg
adc
scas
fwait
dec
inc
fisttpll
jmp
adc
lock
cmp
push
pusha
daa
add
jnp
pusha
dec
xchg
fsts
jbe
dec
js
mov
cltd
cmp
aaa
js
out
sbb
in
cli
aas
lret
testl
xor
sarl
into
xor
movsb
ret
das
adc
lods
mov
jo
adc
stos
popa
sub
jo
insb
xlat
adc
xchg
xor
mov
pop
mov
cmp
or
test
std
nop
or
jl
loope
inc
mov
adc
push
add
adc
mov
addl
cmpl
sbb
aas
pop
jno
jo
leave
pusha
jmp
xlat
push
adc
xchg
test
jmp
jmp
push
imul
in
pusha
xchg
das
jge
sbb
aam
dec
mov
testl
and
jl
ror
hlt
out
jo
out
shlb
data16
ss
mov
mov
xchg
out
cmp
pusha
adc
pop
sti
jmp
push
sbb
imul
cmpsb
push
jno
mov
adc
pop
sbb
ja
in
clc
int
mov
jle
mov
pop
dec
or
mov
and
inc
push
push
dec
mov
leave
lahf
scas
cld
push
fwait
sbb
int
cmp
or
sti
xchg
lret
jb
loop
sub
fwait
pop
push
pop
ljmp
fmull
fs
cmp
pushf
mov
dec
out
shlb
jl
pusha
arpl
lcall
xchg
out
divl
sahf
adc
sub
mov
adcb
pop
imul
test
mov
xchg
or
jb,pt
shrb
mov
pop
mov
inc
or
lret
adc
pop
je
add
mov
mov
ret
mov
sub
repnz
subb
sti
lock
hlt
jnp
dec
dec
fdiv
mov
cmp
in
fld
mov
cltd
jb
test
sub
or
cmp
jle
clc
mov
cld
in
jb
mov
mov
and
cmp
mov
add
out
test
out
in
jnp
test
loop
iret
hlt
test
jmp
inc
push
pop
pop
mov
lahf
pusha
inc
push
and
pop
xlat
fs
repnz
ret
inc
mov
push
push
sub
push
cmpb
incl
mov
dec
push
aas
push
mov
push
sub
cmp
or
and
fidivl
imul
jb
adc
das
call
jnp
rol
dec
adc
fidivrl
ljmp
inc
jne
lds
sbb
imul
in
add
jb
je
cli
gs
xchg
inc
sbb
pushf
mov
mov
pushl
xchg
ss
push
ror
xor
out
sbb
jmp
fnstenv
adc
jb
outsb
push
dec
js
arpl
scas
fwait
je
jge
and
mov
pop
andb
inc
shrl
push
loop
mov
add
push
jmp
cli
dec
lret
pushf
and
mov
mov
sbb
das
pop
fcomip
mov
filds
data16
or
add
dec
sbbb
jno
mov
scas
inc
pushl
add
jp
mov
xchg
stos
xchg
add
ja
std
lahf
arpl
xchg
roll
mov
push
jns
aaa
xor
std
add
aaa
mov
or
dec
xchg
jp
jg
adc
scas
aaa
sub
clc
inc
clc
ds
das
or
jne
imul
adc
or
xor
mov
je,pn
sub
add
mov
addr16
rcl
mov
mov
mov
adc
or
sub
in
inc
repz
and
sbb
sbb
iret
sbb
lds
add
insb
test
mov
pop
ret
sbb
and
rcll
jle
inc
decl
add
mov
mov
xchg
ljmp
mov
push
mov
rcll
mov
pushf
aad
incl
mov
imulb
push
jbe
mov
cmp
dec
out
icebp
lea
sar
adc
scas
fldcw
shl
xchg
ss
add
push
iret
or
cltd
adc
test
cmp
and
cmp
or
aam
cmc
std
shrl
mov
jle
cmpl
roll
push
xchg
push
mov
mov
inc
add
sbb
sarb
jbe
aam
popf
outsl
aas
outsl
or
mov
xchg
xchg
xchg
push
sbb
mov
aad
cmp
mov
cmp
push
push
ficomps
cltd
jmp
sub
inc
push
cmp
es
dec
ficomps
cmp
divb
out
mov
mov
movsb
jae
mov
adc
fstpt
push
in
cmp
xchg
lahf
push
jne
test
sbb
into
mov
adc
lahf
nop
cld
aad
clc
cmp
cmpsl
jp
mov
in
jle
mov
mov
cmp
cltd
mov
enter
mov
xor
sti
fcom
out
pop
fs
mov
popf
lea
mov
sbb
cmc
adc
jl
mov
cmp
mov
dec
xchg
cmpsl
mov
jecxz
pop
or
cmp
jae
jg
mov
movsb
leave
or
ret
adc
ret
fwait
clc
divl
mov
adc
push
insb
daa
imul
cs
aad
jno
int
and
mov
incb
lret
sub
pop
lock
xlat
test
sbb
in
js
pop
mov
js
cs
adc
cmp
xor
fstpl
sbb
and
jp
aas
lret
add
dec
insl
loop
pop
push
sub
sub
push
pop
in
arpl
in
in
mov
ds
push
mov
in
lret
inc
in
test
fcoms
push
aam
std
loope
out
mov
arpl
cmp
lock
dec
mov
sbb
mov
push
lahf
rcrb
or
in
add
dec
push
add
scas
pop
arpl
arpl
xchg
and
outsl
xor
dec
sub
jnp
imul
inc
or
add
clc
arpl
les
inc
adc
mov
test
mov
in
push
xor
ret
xlat
sub
and
xchg
mov
loopne
or
mov
mov
inc
adc
cmp
ljmp
js
inc
fwait
cmpsl
push
cld
pop
or
sbb
sbb
aad
xchg
dec
pop
pop
rclb
pop
movsl
mov
dec
mov
jge
cmp
jle
lcall
and
subb
adc
enter
and
lret
sbb
int
ljmp
das
pop
mov
push
push
addl
test
pop
pop
mov
jl
inc
ficoms
add
jne
addr16
adc
je
iret
outsb
xor
fstpl
enter
cmp
ret
test
dec
test
fisttps
sarb
xchg
in
and
inc
jb
scas
add
mov
mov
pop
sub
adc
outsb
test
pop
movsb
mov
cmpsb
pop
mov
xchg
sbb
pop
hlt
adc
mov
fwait
sarl
jp
ret
clc
notb
jnp
push
push
or
pop
out
je
pop
movsb
int
iret
pushf
fwait
repnz
arpl
popf
pop
testl
sbb
test
adc
popf
inc
add
xchg
inc
or
sbb
xor
fldcw
xor
cs
fdivs
fcoms
fmul
icebp
push
and
sbb
adc
cmp
pop
ss
fwait
shrb
repnz
mov
xor
call
push
popf
adc
xor
and
pop
arpl
xor
hlt
test
testb
push
sbb
dec
xchg
add
cltd
imul
addb
lcall
push
testb
cmp
or
fwait
mov
test
push
lret
dec
fmul
out
lret
jne
pop
inc
scas
sub
push
jg
jb
popa
dec
add
sbb
add
mov
shr
mov
jge
addr16
xor
or
addl
stc
bound
mov
into
shl
cmp
aad
mov
xchg
inc
jbe
dec
jo
inc
mov
outsb
scas
mov
je
test
and
nop
aam
xchg
dec
jo
or
mov
sbb
out
dec
mov
pop
mov
rorl
test
push
scas
mov
xor
xchg
mov
mov
into
lret
xlat
cwtl
pop
xlat
pop
add
push
jle
std
outsl
xchg
sub
push
pop
jge
ss
call
cltd
out
cmp
cmpsb
enter
mov
js
popa
std
ss
bound
sahf
in
lock
bound
cli
and
scas
and
mov
fsubs
cmp
in
cmp
sbb
mov
cmp
sti
jo
and
popf
adc
fwait
mov
int3
jne
mov
int
in
lock
inc
sarl
xchg
out
sbb
and
pop
xor
cli
jnp
mov
push
sub
iret
in
or
dec
fldl
sub
push
push
jmp
rcrl
lret
lea
ja
and
jl
jne
dec
push
mov
les
test
jo
add
cmpsb
push
fmulp
pop
inc
mov
push
mov
jb
iret
gs
jb
jno
not
push
aam
mov
stc
or
or
stc
adc
sub
xchg
addr16
stos
or
lret
and
xor
enter
mov
pop
dec
mov
cmc
pop
arpl
clc
ficoml
scas
sub
fwait
or
icebp
or
dec
sub
sahf
cld
xchg
ljmp
subb
or
loopne
push
cmp
dec
pop
scas
lods
sub
int3
add
cmp
icebp
andl
mov
fwait
repz
push
mov
jns
jbe
jns
dec
mov
xchg
and
xchg
jbe
cmp
cmpsl
or
cli
into
loop,pn
inc
jae
jne
imul
fs
mov
mov
jno
add
insb
in
inc
shrb
hlt
inc
cld
dec
dec
push
sub
in
or
dec
jge
outsl
jge
mov
pop
test
xor
in
sbb
lret
bound
pop
pop
call
push
sub
lret
sub
jle
maxps
fcompl
repz
pop
arpl
jo
ja
popf
add
mov
ds
add
dec
xor
ds
orb
adc
jb
call
adc
xchg
or
test
aam
jns
lcall
int
mov
iret
xchg
lahf
jo
je
mov
decb
hlt
pop
xchg
add
repnz
popa
xlat
cmpl
hlt
shll
pop
outsb
jp
pop
pop
jbe
mov
sub
imull
outsb
subl
out
pop
xchg
jns
mov
inc
repz
push
loop
int
xchg
pop
push
loope
call
and
xchg
jle
xchg
int
or
js
mov
inc
fwait
pop
mov
mov
out
dec
adc
jne
add
std
into
mov
ret
mov
icebp
lea
xor
sahf
jne
fyl2xp1
mov
data16
add
test
xchg
in
xchg
gs
rcrl
mov
nop
xor
xorl
push
jg
outsb
arpl
vcvtss2si
std
bound
sub
dec
push
sub
push
sbbl
cmp
or
sbb
mov
sub
push
inc
mov
sub
cmp
xchg
popf
dec
cld
pop
pop
xor
cmpsb
jmp
shrl
cmpsl
push
ret
fucomip
add
xor
in
negl
add
rolb
ffree
das
movsb
lret
cmpb
or
xor
out
out
insb
stc
mov
mov
in
pushf
cld
lods
xor
dec
shl
aas
add
push
cmp
ss
xchg
xchg
mov
cmpsl
ret
in
enter
into
jnp
sub
icebp
add
aas
and
adcb
sub
mov
mov
pop
arpl
out
lds
sbb
jns
dec
lret
push
rol
mov
test
sub
mov
or
mov
iret
mov
or
movsb
pop
rolb
int3
mov
andl
push
mov
add
lea
pusha
test
punpcklbw
dec
inc
dec
subb
dec
mov
pop
xor
loop
push
pusha
dec
aad
sahf
xor
add
fisubs
sub
lret
mov
dec
jl
cmp
dec
repz
xchg
xchg
cli
les
xchg
sub
adc
mov
dec
ret
into
inc
das
adc
clc
hlt
roll
push
jmp
pop
adc
fnstenv
xchg
dec
pop
sti
ja
cmp
in
cmpl
ret
fldt
xchg
sub
sbb
jo
pop
xchg
push
adc
pushf
repz
test
daa
call
mov
mov
imul
push
push
incl
xchg
in
clc
mov
add
addr16
out
aam
and
pusha
iret
test
push
cmc
mov
dec
stos
and
add
add
fbstp
jo
leave
aad
lds
rcl
call
mul
mov
mov
xor
xor
mulb
in
aaa
stos
xchg
or
fwait
jecxz
jge
and
jmp
fdiv
call
add
pop
cltd
inc
mov
add
fcomps
addl
inc
push
xchg
lcall
sub
xor
aas
inc
loopne
xor
add
imul
dec
and
movsb
lds
fwait
xchg
lea
in
into
icebp
lcall
loopne
jp
fwait
or
loop
push
and
xchg
sbb
test
add
sub
cli
xor
jg
dec
mov
mov
popa
jns
jne
mov
fadd
in
popf
scas
in
aam
pop
filds
enter
pop
shl
sbb
push
ljmp
mov
lcall
test
in
jo
inc
mov
nop
cmp
and
pop
add
sti
pop
cmp
mov
loop
jg
sub
popl
repnz
mov
and
xor
pop
mov
je
jne
aam
or
ljmp
int
adc
sub
divl
jge
mov
sar
sbb
pop
inc
and
bound
adc
rorl
repnz
adc
rcrb
dec
mov
or
pop
mov
and
xchg
fiaddl
inc
xor
jno
fwait
mov
add
push
insb
push
jne
lock
mov
ror
testb
std
ret
mov
in
addr16
xorl
cmpl
sahf
pop
int
jne
fsub
test
ror
loop
fs
negl
test
cltd
jno
pop
inc
loop
jbe
inc
lcall
sbb
lahf
xchg
sbb
xchg
mov
test
xchg
inc
xchg
int
fldenv
outsl
fidivs
leave
sbb
sbb
rorb
lods
mov
and
arpl
ret
icebp
leave
popf
jle
nop
and
addr16
inc
mov
fsts
cli
dec
das
ror
pop
incl
test
jo
js
clc
mov
out
push
push
or
mov
test
loop
cmpsb
xlat
adc
cwtl
add
mov
jno
cmp
enter
into
mov
cmpsl
dec
xchg
mov
push
sub
inc
fwait
aad
xchg
inc
cltd
ror
mov
pop
das
idiv
icebp
jge
add
adc
mov
addr16
adcl
xlat
test
std
pop
xor
sub
aam
push
in
lahf
dec
mov
pop
les
sub
and
adc
push
stos
xchg
mov
or
andl
insl
xor
inc
hlt
fmull
fs
std
cmp
cld
or
out
xchg
mov
pop
in
cmc
mov
flds
int3
out
push
dec
mov
je
mov
insb
sbb
jl
loope
aaa
ljmp
icebp
sub
mov
push
and
out
dec
jne
fsubrl
mul
fisubs
and
sub
lock
mov
rsm
popf
stos
fisttpll
movsb
adc
mov
push
mov
lahf
pop
dec
in
sbb
sbb
loop
add
sbb
add
cmpsb
mov
lock
stos
call
inc
push
test
add
adc
xchg
lret
mov
push
test
push
sahf
aas
cwtl
test
test
xchg
cli
add
inc
adc
lods
scas
xchg
adcb
rolb
dec
push
loop
sub
js
test
enter
sub
mov
mov
pop
mov
jp
loope
pop
in
xor
sti
xlat
stos
jl
aas
dec
fisttps
cmp
pop
mov
and
loopne
repnz
cmp
movsb
xchg
sub
xor
lock
mov
aam
and
xchg
dec
sbb
push
add
nop
mov
ret
mov
ret
popa
xor
cmp
lods
repz
xchg
push
cmpsb
pop
adc
loop
filds
out
mov
sub
aam
xor
scas
mov
gs
lock
lods
adc
jnp
imul
pop
lods
inc
and
in
sbb
adc
dec
push
cmpl
fucomi
loope
sub
bound
and
andb
jae
adc
orb
lcall
cmp
sub
xchg
outsb
fiaddl
jb
add
lea
adc
pop
mov
mov
mov
imul
lods
mov
das
xchg
popa
inc
mov
sbb
add
sbb
or
out
in
cmp
jnp
sbb
mov
lret
out
xchg
push
inc
test
pop
pop
test
mov
rol
xor
xchg
ret
call
mov
insb
sti
adc
xchg
inc
jmp
pop
xchg
sbb
pop
xchg
or
nop
inc
stc
in
mov
xor
shll
mov
sbb
push
mov
or
aam
out
ret
pushl
push
cmp
fwait
pusha
mov
sarb
push
add
pop
adc
sub
cmp
sub
xor
enter
mov
call
leave
aam
sbb
inc
push
xor
lret
dec
dec
xchg
add
scas
add
xorl
jnp
dec
push
in
add
xchg
sbb
je
loope
and
jne
inc
adc
adc
jl
mov
cmp
push
lock
push
call
push
mov
fildll
mov
int
lcall
sti
or
and
shrl
mov
dec
nop
xchg
mov
lcall
aas
scas
fdivrs
ja
sbb
pop
out
inc
push
lcall
sbbb
adc
sub
lock
test
daa
xor
sarl
fdiv
pop
ja
insl
loope
mov
cs
popa
mov
and
mov
sahf
in
dec
jl
mov
mov
int3
adc
les
ror
outsb
pusha
fistpll
push
in
adc
lods
aas
or
andps
jp
push
imul
outsl
mov
fidivs
cmp
mov
xor
test
jnp
or
data16
dec
mov
pop
test
enter
nop
sub
mov
push
cmp
test
das
xchg
sub
sub
jns
lret
xor
mov
repz
mov
iret
lret
xchg
fscale
scas
in
cmpsl
lcall
loop
cld
inc
jmp
out
xor
or
inc
in
add
aas
ja
adc
dec
jb
mov
sub
xor
inc
scas
or
out
fistpll
ret
add
inc
jne
cmp
push
jl
scas
add
loope
inc
dec
repnz
xchg
insl
cwtl
out
push
les
orl
call
imul
pop
jns
in
sub
jo
sub
or
jae
sbb
rcrl
sahf
mov
xchg
cli
orl
addr16
push
das
inc
cli
repz
jge
fstl
dec
adc
bound
xchg
push
mov
mov
outsl
mov
sahf
pop
aaa
inc
push
mov
mov
sahf
leave
imul
pop
push
pop
and
out
nop
gs
fistps
sub
loopne
std
pushf
nop
and
cmp
mov
mov
movsb
cmp
cld
cmc
sbb
scas
mov
fdivs
pop
sarl
ss
jne
jns
jge
push
push
mov
inc
mov
nop
sub
cmp
push
jl
xchg
pop
xor
or
lcall
push
adc
stos
dec
mov
mov
outsb
push
mov
ljmp
sbb
mov
dec
sbb
jbe
sbb
fs
xchg
arpl
cmp
and
ds
hlt
sub
add
sub
fidivrl
dec
sbb
sahf
push
cld
enter
mov
dec
jge
clc
sbb
js
pop
xchg
cmpl
je
add
mov
sub
loope
cmp
and
cmpsl
int3
sbb
lods
cmpsb
xor
cmpb
addr16
shll
mov
jle
pop
lret
dec
jo
inc
mov
and
test
mov
jbe
sbbl
aaa
lods
xchg
nop
ljmp
mov
aam
sti
divb
leave
xchg
mov
xchg
data16
lret
bound
movsb
add
add
loopne
pop
push
mov
iret
inc
sub
cmp
jecxz
lock
mov
sub
jno
sbb
push
xor
jl
ss
cmovno
xchg
xchg
loopne
ljmp
fs
push
jno
mov
jae
stos
mov
cmpsl
inc
jl
inc
in
jno
out
test
pop
shll
stos
mov
push
push
xor
pop
out
sbb
test
insl
dec
xor
pop
dec
xlat
imul
mov
mov
enter
jb
and
and
sub
aad
sarl
cmp
ljmp
push
lock
inc
mov
pop
inc
rorb
mov
mov
pop
pop
sub
sub
sbb
or
imul
fcompl
dec
lcall
shl
movsb
jmp
pop
mov
lret
add
cs
clc
push
push
sbb
aad
insb
jle
repnz
push
dec
lods
fcomps
or
repz
xchg
mov
mov
mov
sub
dec
push
xor
out
cmc
scas
mov
ss
pop
mov
xchg
jmp
aaa
and
adc
popa
lret
lcall
es
jbe
inc
xlat
sbb
rorb
jl
sub
mov
mov
mov
mov
push
clc
adc
rcl
repnz
and
addb
sub
shlb
mov
push
cmp
mov
clc
enter
popf
push
repz
std
sub
cmp
loope
adc
out
test
pop
mov
insb
push
jge
pop
push
cmc
lea
cmp
or
imul
lahf
movsl
orl
dec
mov
push
xchg
push
sbbl
sbb
mov
lret
iret
or
mov
jo
lods
repnz
stos
fwait
lds
enter
je
xor
push
dec
loope
sub
fcom
xchg
js
mov
addr16
fwait
xchg
stos
or
inc
mov
or
mov
out
fidivrs
sahf
sahf
out
xor
mov
xchg
cmp
mov
or
sub
lds
ja
cwtl
cs
xchg
push
xlat
pop
popf
pop
aad
rorb
sahf
xor
mov
dec
stc
testb
stc
test
out
adc
mov
lcall
pusha
cld
in
ficoml
sub
fidivrl
inc
sbb
das
adcl
dec
movsl
arpl
cmpsb
mov
jle
jb
popf
fsubs
scas
push
pushf
aas
mov
and
pop
jl
aam
inc
jno
jbe
imul
sbb
pop
vmovupd
xchg
sub
jno
fs
repnz
sub
pop
mov
xchg
xchg
fists
in
adc
cmp
lret
pusha
mov
mov
ja
xor
outsb
jo
fucomi
pusha
movsl
add
push
leave
xchg
dec
dec
xor
fs
gs
nop
negb
repz
push
sub
or
loop
jp
orb
mov
mov
and
pop
aam
ret
pop
js
repz
ljmp
mov
test
jae
mov
in
test
xchg
inc
call
adc
push
push
push
sti
mov
mov
xchg
ret
cmp
sbb
adc
shll
addr16
movsb
hlt
mov
cwtl
std
mov
mov
outsl
into
inc
fwait
add
push
push
inc
dec
insl
movb
mov
cmp
sti
popa
sahf
xor
add
loopne
mov
ret
sbb
clc
pop
ret
clc
or
sbb
xor
xlat
pop
mov
mov
adc
andb
movsl
add
fs
xchg
sub
cmc
stos
mov
mov
loopne
rorl
mov
sbb
arpl
subl
sbb
xchg
ljmp
leave
jle
insl
aaa
xor
xchg
push
in
insb
jmp
cmpsb
xchg
fisttps
mov
out
movsl
xor
in
dec
push
insl
mov
lret
decl
adc
xor
rcr
mov
mov
out
push
ffreep
fsubr
mov
fs
mov
enter
fwait
xor
cmp
cmp
jno
loop
or
cmp
scas
fwait
push
or
subl
mov
mov
shlb
icebp
decb
jno
std
das
mov
and
jns
xor
mov
shll
pop
sbb
mov
inc
ffree
enter
call
bswap
bound
push
dec
stos
sub
test
cmp
inc
dec
mov
mov
out
dec
pop
mov
das
lret
outsl
pop
ret
sub
or
cmp
ret
cli
add
mov
mov
sti
pop
outsl
roll
pop
jge
clts
addl
adc
insl
sbb
leave
std
pop
enter
jge
xchg
das
popf
push
mov
pop
sti
mov
push
mov
mov
les
xchg
rolb
leave
ret
and
jnp
sub
negl
mov
add
pop
cli
test
cltd
int3
mov
push
ret
pop
int
sub
fistps
ret
jp
and
lods
outsl
fidivs
stc
adc
es
jne
inc
lods
cmp
fwait
inc
pop
int3
add
lret
popa
rcr
fwait
repnz
sub
mov
clc
iret
pop
das
adc
mov
test
scas
mov
cmp
adc
add
cmp
sub
in
push
push
xchg
inc
xchg
add
aaa
repnz
test
std
loopne
pop
add
arpl
sti
sbb
std
dec
adc
ss
mov
jnp
pusha
pop
rol
jmp
outsl
adc
xchg
xchg
test
xchg
int
xor
or
push
aaa
inc
mov
mov
or
mov
pop
aaa
xlat
cmp
push
inc
adc
sbb
orb
sub
dec
cmp
arpl
mov
xchg
testb
test
dec
push
cwtl
xchg
and
pop
inc
imul
ja
ffree
adc
push
mov
arpl
clc
ficoml
mov
dec
loopne
daa
jbe
insb
jne
and
pop
test
repz
gs
xor
add
mov
cmpsl
js
or
add
call
mov
sub
push
ds
pop
lea
mov
loope
adc
mov
aam
adc
sbb
jmp
add
dec
jecxz
lock
hlt
or
mov
dec
in
inc
std
mov
ss
push
sub
frstor
sub
and
movsl
push
fdivl
and
jae
adc
mov
fcmove
sarl
popa
imul
xlat
mov
imul
cmp
xchg
inc
dec
and
dec
jns
and
leave
add
daa
ret
repnz
xchg
cwtl
mov
jecxz
pop
xchg
fldt
xchg
rcll
out
xchg
test
rcrb
daa
push
dec
xchg
pushf
insb
mov
push
push
inc
cltd
in
fmuls
sub
dec
mov
or
aas
out
and
outsb
in
push
mov
ret
or
cs
jle
pop
xorb
mov
into
sub
xor
fcoml
xorl
xor
ret
mov
adc
and
cmpsl
fdivl
movsb
mov
mov
sub
dec
sub
scas
ror
pop
xchg
mov
js
pop
aas
cmpb
cld
add
sub
push
test
fisubrl
cmpsb
pusha
adc
aas
jns
mov
add
jnp
jae
xchg
outsl
outsb
cmp
lock
stos
pusha
push
jne
ljmp
mov
out
mov
into
arpl
mov
movsl
sub
imul
iret
std
xchg
sbb
movsl
sbb
lahf
popa
hlt
xchg
loopne
iret
pushf
adc
data16
je
fidivrl
je
ret
cmpsl
jge
addb
or
mov
arpl
cmc
subl
fdivl
cli
lods
cmp
fdiv
sbb
sahf
sti
aam
ss
clc
dec
roll
lret
shl
jle
aaa
popf
loope
jne
xor
pop
jns
or
stos
mov
mov
stc
out
mov
jecxz
inc
jg
lahf
mov
add
hlt
stc
mov
lret
sahf
bound
lock
movsl
jg
cltd
pop
lahf
fwait
xlat
xchg
push
inc
push
mov
jp
lock
scas
push
sub
pop
xor
mov
mov
mov
add
add
add
add
adc
add
adc
add
add
add
add
inc
adc
add
adc
add
add
add
add
adc
add
adc
add
add
add
add
jle
add
clc
adc
add
adc
add
add
int3
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
xor
add
add
add
push
adc
add
add
add
add
add
add
mov
add
add
add
mov
add
add
add
into
adc
add
add
add
add
addb
add
and
add
xor
add
add
add
push
adc
add
add
add
add
add
add
mov
add
add
add
mov
add
add
add
into
adc
add
add
add
add
addb
add
imul
gs
xor
cs
insb
add
inc
gs
jb
arpl
fs
jae
add
dec
outsl
popa
fs
imul
add
inc
inc
push
inc
push
dec
xor
cs
insb
add
add
push
gs
jne
jb
push
popa
insb
jne
inc
js
add
push
dec
dec
push
inc
push
dec
cs
insb
add
add
jb
inc
push
jne
insb
insl
outsl
outsb
cs
insb
add
add
push
push
dec
inc
outsl
ja
insb
outsl
popa
fs
outsl
inc
popa
arpl
inc
imul
push
push
xor
fs
insb
add
add
push
jo
push
je
imul
inc
add
push
push
inc
push
xor
cs
insb
add
add
inc
outsb
jne
push
push
push
imul
dec
dec
inc
inc
push
push
xor
cs
insb
