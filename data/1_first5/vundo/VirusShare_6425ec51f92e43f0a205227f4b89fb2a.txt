and
ret
mov
adc
stos
jge
rolb
sti
popa
ret
dec
jecxz
add
cmpsl
jl
xchg
jo
inc
jge
adcl
ds
testb
sbb
sub
jg
fisttps
testl
jl
call
popa
push
cmp
adc
in
icebp
out
xchg
rcrl
mov
mov
lock
arpl
mov
ret
movl
adc
rorl
mov
pop
test
notl
sbb
xor
mov
push
flds
cmc
addr16
mov
mov
jmp
negl
dec
pop
pop
jl
movsl
sahf
aas
ja
mov
xor
sub
mov
stc
or
inc
rorl
push
jle
cmpsl
addr16
jns
jns
cld
test
incl
jbe
fildl
movsb
sub
fs
ret
out
enter
idiv
lods
xchg
dec
outsb
adc
dec
mov
mov
mov
adc
add
push
filds
shrb
cmpsb
in
sarl
and
insl
mov
xchg
jp
mov
out
mov
inc
mov
outsl
lods
adc
mov
jmp
push
lods
inc
mov
rol
mov
mul
loopne
inc
inc
out
daa
pushf
sub
push
repz
push
ja
sarb
decb
mov
inc
dec
mov
pop
fcmovnu
jmp
sbb
int
pop
out
fisttps
pop
cmpsb
push
icebp
push
sub
inc
pop
xchg
mov
in
test
cmc
idiv
pop
sarb
xchg
jo
mov
or
and
in
fcmovnu
rcr
xor
cs
mov
mov
jae
lock
jmp
adc
xchg
movsb
mov
int3
movsl
inc
dec
cmp
aam
insb
push
imul
xorb
cs
pop
inc
jge
push
or
leave
dec
dec
sahf
lahf
rorb
stos
pop
stos
inc
int
inc
bound
imul
fwait
in
jg
xchg
sub
sbb
inc
mov
xchg
pop
xchg
aam
stc
push
imul
ret
loopne
call
push
mov
xchg
div
mov
fwait
out
mov
inc
into
test
jae
pop
sbb
sbb
cmpsb
add
xchg
js
imul
mov
pop
push
je
xor
imul
into
outsb
popf
scas
jbe
cwtl
add
mov
cmpsb
into
mov
lods
mov
movsl
loop
jle
lock
xor
ret
xor
push
fldenv
sarl
test
arpl
pop
in
scas
ss
fwait
xor
incb
adc
leave
pop
dec
pop
mov
sub
insl
lss
sbb
pop
add
orb
fidivs
sahf
ret
out
sbb
jbe
out
pop
std
les
mov
std
sbb
mov
lcall
add
fsubrs
out
cmp
outsb
stos
sahf
cmpsl
add
shlb
pop
dec
mov
jle
pop
mov
push
xor
in
mov
and
lahf
inc
or
lods
or
xor
push
fimull
insb
mov
mov
movsb
dec
fs
pop
arpl
addb
sbb
loop
push
andl
xlat
jnp
add
jle
pop
test
cltd
mov
adc
adc
sbb
and
add
or
and
dec
je
cltd
mov
sbb
jae
loopne
movsb
es
bound
push
aaa
dec
loop
mov
aas
imul
xchg
mov
nop
mov
dec
stos
stc
push
sbb
pop
adc
add
nop
push
sahf
jl
inc
sub
push
lds
sbb
pop
hlt
enter
mov
mov
test
pop
cld
out
scas
mov
add
aaa
out
sbb
sbb
mov
je
outsb
idiv
mov
pop
sbb
out
addb
sub
push
scas
ds
mov
sub
xchg
icebp
je
iret
jl,pt
cmp
cmp
enter
js
inc
add
fildl
cmp
data16
fldenv
test
xor
iret
leave
ficompl
ret
ret
cmp
jne
mov
cmpsb
xor
cli
nop
inc
sahf
les
ret
or
inc
orb
rolb
push
fwait
mov
sub
aam
es
add
nop
cmp
in
and
sub
mov
jnp
xlat
inc
fildl
cmp
sub
mov
fdivrl
aaa
jae
mov
add
out
js
mov
imul
xlat
negl
dec
sahf
repz
sub
push
cmpsl
jne
pop
cld
stc
cli
fidivs
aad
pop
mov
ret
das
mov
jbe
daa
incb
jne
and
ljmp
or
sub
inc
xchg
loopne
daa
aam
jbe
test
cmpb
lcall
pop
and
imul
mov
adc
push
cmpl
jmp
or
xchg
negl
int
add
and
ds
loopne
add
daa
xor
pop
cli
repz
cmp
sti
jo
icebp
cltd
jae
subb
push
out
pop
cltd
or
lea
sbb
add
inc
sbb
nop
inc
mov
stc
xor
fimull
mov
and
mov
mov
add
daa
jb
out
inc
hlt
jo
push
mov
push
cld
aaa
fiadds
dec
pop
fldt
shll
lret
fstpl
mov
lds
mov
stos
incl
ficompl
mov
fsub
dec
mov
loop
xchg
fnstenv
popf
ljmp
adc
fsubl
les
imul
clc
adc
nop
sbb
lock
push
js,pt
adcl
push
out
dec
mov
inc
imul
faddl
test
sahf
pusha
ret
pop
inc
into
mov
leave
fsubl
or
jmp
xchg
push
xor
aas
sahf
lret
push
fld
aaa
jp
icebp
data16
dec
leave
xor
or
sub
arpl
shld
pop
inc
push
push
insb
aam
pushf
ja
mov
add
ja
loope
xlat
cmc
xchg
push
inc
addr16
xor
xchg
aas
outsb
adc
ja
jl
imul
add
and
dec
adc
push
adc
mov
mov
mov
xor
std
push
inc
and
push
push
js
mov
mov
and
adc
arpl
dec
mov
imul
js
xor
xlat
xor
xor
add
sbb
push
loop
stos
add
shlb
adc
test
xor
mov
test
xchg
fdivr
xchg
fsubl
add
or
jmp
add
mov
jecxz
mov
scas
dec
xchg
in
push
clc
sub
ret
insb
xchg
push
xchg
cmp
xor
imul
xlat
mov
pop
repnz
dec
or
decl
jmp
mov
and
push
inc
or
and
inc
icebp
sbb
lret
mov
pop
addr16
or
add
push
cmc
add
push
mov
test
sbb
jmp
mov
jbe
and
stc
cmp
xchg
dec
inc
leave
fsubrl
or
repnz
lods
fdivrl
addr16
insl
fwait
hlt
cmp
pop
subl
dec
std
aaa
stos
mov
iret
movsb
test
push
mov
pop
inc
test
insb
bound
test
mov
pop
xor
or
cld
lds
adc
icebp
dec
or
frstor
push
unpcklps
mov
pop
cmp
test
int3
fsts
xchg
int
cmp
jno
daa
add
cmpsl
dec
adc
inc
xor
jl
adc
cmp
jbe
cs
mov
stos
ret
repz
enter
outsb
push
arpl
mov
mov
push
jmp
mov
pop
xor
adc
jmp
push
cmp
pushf
mov
push
adcb
mov
shl
in
fdivs
test
in
sahf
inc
sbb
lahf
add
mov
mov
push
fcmovnu
sub
push
jb
repz
insb
mov
fildll
and
mov
pop
jl
inc
stc
pop
push
out
dec
es
mov
clc
rcll
dec
jp
lret
sahf
test
mov
add
cs
cmp
inc
mov
sbb
es
clc
cmpsb
inc
idivl
repz
push
mov
sub
cmp
jmp
jge
xor
out
dec
out
int
dec
sub
shlb
sub
push
push
adc
popl
test
jecxz
loopne
enter
push
push
adc
inc
jg
pop
push
aaa
push
mov
dec
repnz
cmp
aaa
mov
repz
sbb
adc
or
jo
mov
mov
mov
aad
sahf
inc
in
rcrb
cltd
outsb
cmpl
rorl
leave
leave
sbb
push
test
setg
mov
and
dec
sub
in
jmp
rorb
repnz
js
shl
xor
push
imul
popa
or
and
loopne
mov
pop
or
mov
pop
loopne
inc
push
pop
inc
sub
imul
xor
cmc
ficomps
jle
mov
sti
ret
insl
dec
dec
mov
nop
lcall
lahf
fildll
mov
int
push
shl
imul
sldt
xchg
test
dec
jmp
jecxz
mov
sbb
jge
cmp
sti
xor
inc
and
inc
dec
pop
aaa
cmp
repnz
pop
adc
and
mov
push
imul
xchg
aad
xchg
lock
mov
inc
mov
aas
pop
lock
mulb
dec
xor
and
aas
cwtl
xchg
lcall
movsl
scas
fisttpl
lea
adc
aaa
or
sbb
lods
push
mov
jne
roll
push
inc
test
nop
jne
mov
ljmp
mov
cli
call
incb
push
shrl
and
jle
fwait
sbb
mov
and
xlat
jg
mov
push
sbb
mov
xor
sub
jl
test
lcall
cmp
xlat
insl
arpl
cli
push
loope
lock
adc
xchg
jle
bound
jnp
mov
sub
cmp
add
cltd
jns
lock
cmp
pop
in
pusha
add
cwtl
add
mov
imul
psadbw
cltd
test
jmp
stos
fnsetpm(287
mov
aam
mov
add
pop
test
mov
lock
push
scas
adc
adc
lret
and
adc
push
in
out
xorl
arpl
incb
arpl
in
jg
data16
xchg
cld
xchg
push
cmc
pop
adc
jl
notl
out
cmp
mov
dec
dec
hlt
or
cmp
push
fstpt
mov
inc
je
scas
cwtl
xor
mov
jmp
repz
jl
push
push
out
hlt
mov
inc
cld
fildll
mov
scas
xor
jo
or
xchg
push
and
loop
bound
jle
clc
data16
fldenv
push
data16
mov
out
mov
jg
cmp
jg
mov
fs
sub
xchg
es
push
xor
divb
stos
sub
mov
ss
in
inc
ret
sub
ja
adc
aad
aas
sbb
push
pop
fcompl
in
dec
xor
gs
pop
jb
and
or
mov
jae
rcrl
xchg
or
mov
sub
dec
enter
popa
mov
mov
or
data16
in
rorl
add
stc
cmp
sar
jmp
cmp
adc
adcb
mov
cltd
add
int3
stos
add
les
pop
adc
sub
jge
dec
aad
dec
sbb
loope
lods
mov
inc
arpl
xchg
sub
leave
outsb
rcr
cltd
or
push
fmuls
scas
sbb
in
inc
sti
mov
hlt
cld
push
xor
pop
cmp
jbe
pop
inc
dec
enter
insl
cli
cwtl
sahf
inc
sahf
jg
lret
test
bnd
je
xchg
lods
sbb
cmc
or
xor
rorl
arpl
xchg
adc
jg
adc
clc
xchg
dec
ss
jb
mov
mov
lods
pop
aad
xchg
adc
inc
adc
icebp
pop
nop
into
rcrb
jp
xor
scas
pop
jne
loope
inc
js
jle
push
fisubs
imul
push
sbb
out
imul
inc
mov
pop
adc
jg
shlb
push
gs
aas
inc
int3
pop
or
daa
pop
movsl
mov
scas
cmpsb
popf
sti
loope
jmp
shlb
maxps
sbb
inc
push
inc
jno
adc
add
lret
jge
inc
adc
push
mov
xor
mov
jb
mov
pop
jmp
mov
cmp
fs
punpckhbw
outsl
sbb
dec
xchg
add
pop
xchg
jo
addr16
fimuls
jecxz
fmul
mov
mov
pop
fbld
inc
gs
mov
or
sub
mov
add
inc
les
mov
push
dec
sub
in
inc
scas
pusha
jno
hlt
lea
pop
js
repz
jle
mull
add
pop
ret
outsb
mov
dec
inc
bound
in
dec
sbb
jo
and
jle
inc
shl
push
imul
adc
and
fcmovu
movsb
add
add
cmpsl
xor
das
imul
sbb
push
insb
xor
mov
into
movsb
sub
in
push
out
mov
in
out
out
flds
xchg
and
fisubrs
scas
adc
jo
imul
out
push
clc
aad
push
test
hlt
add
or
pop
decl
mov
and
mov
cmp
jne
inc
je
ret
mov
xor
xor
adc
dec
pusha
jmp
adc
jae
push
and
iret
mov
iret
pusha
adc
rcrb
xchg
mov
and
gs
out
lahf
adc
cmpsl
fimuls
mov
jmp
xchg
mov
cmp
dec
lret
push
adc
lahf
mov
sub
jnp
jmp
out
loop
insb
test
lcall
movsl
jae
ret
jne
daa
and
stos
xchg
fisttpl
shlb
enter
cmp
js
sub
or
sbb
pop
mov
hlt
mov
mov
ret
push
jb
test
ret
mov
push
sbb
fisttps
aam
fstpt
mov
movsb
cli
fldenv
lea
fldenv
nop
cmp
jmp
sbb
icebp
pusha
fcmovb
and
hlt
hlt
mov
test
xchg
push
ret
sbb
xchg
jge
or
test
imulb
dec
adc
mov
mov
mov
cmp
sub
add
inc
add
jmp
movsb
xor
sub
ficoml
mov
xor
sti
imul
inc
push
xchg
xchg
push
imul
xchg
dec
in
mov
cmpsl
je
inc
jo
mov
xchg
je
outsb
arpl
loopne
lock
mov
fwait
jae
mov
push
xchg
jno
movsb
sub
xor
sbb
or
cmp
fildll
lock
xchg
insl
mov
icebp
xor
les
jnp
xorl
fnstenv
dec
jnp
adc
mov
and
fsubr
in
mov
sub
jae
mov
xchg
int
sub
push
jmp
and
inc
sub
push
xor
shl
jmp
push
mov
mov
xchg
mov
ret
and
ret
fistl
js
test
dec
movsb
sbb
add
jo
mov
int3
ds
aas
dec
pop
addl
jle
out
cwtl
es
shlb
pop
mov
or
sbb
sbb
pop
jno
test
add
xor
jl
mov
jo
andb
dec
lea
aad
cs
mov
lahf
xchg
and
scas
add
inc
sahf
sub
mov
lcall
ds
andb
enter
lret
or
inc
sub
sub
mov
cmp
popa
mov
cmp
inc
xchg
ss
xchg
adc
js
and
push
mov
adc
sti
aam
or
aad
icebp
push
scas
sbb
call
mov
push
js
cmp
push
mov
push
cmpsb
leave
pop
rcll
xor
ret
jge
pop
std
add
mov
std
or
sbb
ja
test
data16
in
and
dec
adc
lahf
or
adcl
jl
loop
std
popa
aad
cli
addr16
dec
rcrl
mov
mov
xchg
mov
lea
aas
stc
aas
and
hlt
and
push
cltd
addr16
pop
clc
push
adc
inc
aas
icebp
xchg
dec
fsts
or
xchg
add
imul
xchg
and
movsl
arpl
les
bound
pop
add
cld
mov
xlat
xchg
mov
push
jp
gs
stos
sbb
cmp
inc
sub
sbbb
mov
outsl
out
dec
mov
test
mov
mov
sbb
insl
repz
insl
jl
dec
inc
cltd
ret
add
pop
mov
lds
repnz
dec
xchg
or
cmp
or
testb
jno
sbb
adc
xor
cwtl
lods
jl
fidivl
stos
push
xchg
or
mov
into
xchg
mov
sub
repz
pop
adc
sti
ja
or
dec
jb
loop
jecxz
pop
mov
mov
xorl
and
adc
mov
push
xchg
mov
cmp
sbbl
pop
cmp
cmp
mov
or
adc
lock
fdivrs
sbb
xchg
cmp
pop
mov
repz
fistpll
shll
mov
movsl
imul
mov
test
push
sbb
push
mov
adc
enter
cld
or
lahf
mov
cltd
pop
sbbl
jecxz
shrl
pop
jne
imul
lock
popf
outsb
fsubrs
inc
int3
ljmp
push
sbb
test
adc
lret
sbb
dec
in
dec
ret
push
mov
add
ja
adc
lret
jle
outsb
and
push
popa
add
cmp
xchg
std
mov
imul
lea
lret
ja
es
insb
push
pop
push
and
xchg
out
sbb
fsubrp
mov
push
xchg
or
shrl
cmpsb
adc
sarb
in
ror
jnp
jg
cli
jmp
arpl
xor
pop
cmp
sbb
sub
mov
or
push
and
cmp
xchg
je
daa
rorb
jno
data16
inc
adc
lcall
or
or
xchg
lahf
push
js
mov
xlat
daa
sub
adc
stc
shld
push
add
and
jno
dec
xchg
repnz
dec
xchg
rorb
sub
stos
cmp
fmul
repz
xchg
mov
loopne
jns
sub
add
mov
mov
and
cld
mov
push
mov
add
add
add
cmc
iret
cmpsb
sbb
or
loop
push
or
pmaddwd
ficoml
pop
les
mov
or
push
shl
and
cmp
mov
dec
fsubrs
mov
cld
cmpsb
dec
out
fbstp
int3
jp
add
dec
cs
in
jnp
dec
jmp
add
mov
sbb
mov
xchg
imul
pusha
add
jle
bound
aad
psrad
in
ljmp
test
or
lods
loopne
sbb
or
pop
jmp
xchg
add
addl
adc
push
mov
aad
pop
adc
in
xorb
adc
mov
insl
repnz
or
jecxz
arpl
aad
add
in
mov
out
cmc
dec
cmp
test
push
xor
xchg
es
mov
xor
lahf
mov
mov
cmp
jno
inc
cmpsl
lods
out
dec
popf
pop
push
xchg
cmpsb
testl
shrl
lret
dec
lods
hlt
lcall
mov
aam
mov
insb
gs
push
das
jg
push
cmc
sub
lea
push
leave
divl
inc
aad
cmp
jnp
out
jmp
call
fcmovne
stc
mov
sbb
div
mov
sti
dec
or
stos
sarb
jae
roll
inc
cwtl
fdivrl
jb
lcall
lret
stc
insl
test
sar
push
cmpsb
icebp
cmc
jl
push
mov
test
ja
fstl
fucomp
ja
mov
dec
fiadds
xor
clc
icebp
mov
fcomi
in
sub
xchg
pop
mov
pop
inc
pop
repnz
pop
sti
insb
push
aam
rcl
lods
rcrl
or
or
mov
ja
cwtl
xchg
xchg
lgs
gs
imul
sub
ret
ss
stos
ret
jb
iret
dec
jne
jne
loope
test
mov
or
shlb
push
jnp
cmp
sbb
sub
bound
xchg
xor
dec
int
mov
mov
pop
jno
fwait
bound
dec
or
cltd
mov
add
dec
adc
imul
ret
mov
pop
outsl
lods
cmp
pop
insl
sub
mov
or
add
repz
lock
fistpl
das
xchg
loope
inc
pop
and
add
sbb
das
cmp
out
add
popa
fstl
aaa
mov
enter
andb
inc
aam
lahf
stos
fisttpll
adcb
mov
xchg
test
aad
testl
dec
sbb
jb
icebp
mov
js
push
jnp
push
mov
out
movsb
mov
xor
adc
popa
cmpsb
cmp
inc
or
sbb
xchg
mov
scas
rcrl
inc
inc
inc
xchg
aaa
outsl
jnp
pop
aas
xchg
cmp
fimuls
cmp
cmpl
lock
jnp
jg
mov
sub
addr16
imul
mov
mov
test
lret
iret
lret
les
dec
inc
dec
fbstp
popa
xlat
inc
lods
xor
icebp
into
or
lahf
pop
in
mov
mov
jge
ja
ret
insl
mov
push
pop
sbbb
mov
ds
push
lock
and
push
sbb
add
add
mov
adc
pop
mov
insl
and
mov
dec
test
pop
mov
adc
cmp
inc
xor
and
adc
jecxz
mov
jo
dec
or
popa
xchg
mov
frstor
push
out
inc
and
dec
inc
or
jl
or
outsb
sub
push
ja
mov
push
pop
rol
xchg
dec
or
scas
rcrb
sbb
roll
cmpl
inc
mov
pop
lods
pop
insl
nop
xlat
lahf
mov
cmc
pop
or
push
mov
sbb
jmp
or
sbbb
mov
xorl
ja
or
js
cld
fwait
jecxz
mov
cmc
mov
lcall
adc
testl
mov
mov
in
mov
ja
rclb
push
sahf
imul
repz
incb
ficomps
sbb
int
push
mov
cmp
pushf
sub
sub
mov
or
cltd
fildll
xchg
lock
fdivl
outsb
hlt
add
mov
dec
or
adc
bound
add
and
outsb
daa
push
push
ftst
popf
pop
bound
iret
roll
cmp
dec
xlat
mov
call
dec
pop
lods
cmpsl
cmp
push
loop
xor
pop
popf
xchg
shlb
jae
push
imul
mov
jecxz
jl
mov
dec
mov
ja
mov
in
jl
jo
ss
xor
pop
je
jb
shlb
adc
sbb
push
cmp
js
mov
aad
jbe
cmp
imul
adc
and
scas
sbb
or
cli
out
out
mov
je
pop
mov
ret
mov
lds
push
fmul
cmp
cmp
pop
loopne
js
sbb
lcall
pop
nop
add
inc
jecxz
aas
stos
stos
in
jae
xchg
xlat
adc
gs
daa
mov
inc
inc
rcr
inc
lods
dec
in
fdivs
sub
mov
clc
cmpb
jae
in
fdivrl
cmp
int
inc
fsts
lea
ds
add
loope
mov
data16
adc
and
lds
or
movsl
dec
push
inc
and
rcrb
test
xchg
pop
jnp
xor
fsubl
dec
mov
fbld
lahf
fs
add
dec
fisubrl
rcll
outsb
int3
and
mov
cmp
cmpsl
lcall
imul
xor
inc
in
dec
xchg
pop
js
out
mov
inc
daa
push
dec
int3
dec
xchg
adc
test
incl
test
lcall
lea
mov
mov
mov
test
bound
mov
dec
inc
outsb
jne
int
adc
jle
bound
das
dec
aam
out
addr16
lea
lods
dec
test
lret
clc
pop
push
fstpl
push
adc
icebp
push
arpl
test
ljmp
add
or
imul
mov
push
sub
dec
loope
idivl
clc
dec
lret
clc
sub
rol
or
lods
jl
add
cwtl
mov
repnz
je
cwtl
jae
test
xor
cmp
fs
push
mov
into
sub
ss
mov
aad
imul
mov
cmp
lds
pop
pop
test
inc
pop
shll
push
mov
lahf
mov
outsb
cs
xchg
shll
loope
lea
in
jbe
popa
xorb
add
adc
mov
fs
outsb
fdivl
outsl
out
mov
es
pop
leave
mov
addb
lret
push
pop
test
sbb
mov
fwait
stc
sub
test
ficoml
mov
mov
xor
jb
cmpl
ret
mov
iret
xchg
pusha
sbb
jno
pop
sub
ret
mov
sbb
mov
pop
mov
pop
lods
sub
jl
mov
pop
ret
inc
fiaddl
and
xchg
pop
cmpsb
inc
mov
sti
mov
ss
mov
pop
inc
or
scas
push
fcomi
sbb
push
out
fisttps
lock
loope
jno
sub
fld
clc
push
hlt
jle
mov
dec
adc
loope
mov
jae
cmpsl
jbe
enter
dec
movsb
and
pop
fucomip
data16
adc
sbb
sub
sbb
add
jnp
scas
movsb
jmp
psubsw
pop
jne
cltd
sbb
push
jl
mov
stc
addb
clc
stos
pop
lret
divl
aad
js
dec
js
popa
inc
ljmp
mov
jae
adc
inc
mov
adc
aaa
cli
mov
sti
adc
cmp
pop
lfs
sbb
or
and
or
sahf
enter
scas
mov
das
es
xor
mov
cmpsb
xchg
and
outsl
mov
arpl
jbe
cmp
xor
adc
outsb
dec
mov
sub
addr16
jae
and
ljmp
pop
sub
insl
pusha
jp
mov
das
cwtl
arpl
pusha
push
mov
mov
aaa
popf
and
and
adc
xor
sbb
stos
stos
xchg
ljmp
test
nop
out
fwait
or
es
xchg
xchg
lock
dec
dec
mov
jns
and
das
pop
add
ret
pop
hlt
and
mov
mov
jne
imul
repz
inc
cmp
pop
loopne
les
xor
mov
sub
adc
fidivrs
add
cli
lahf
push
inc
fstp
xor
scas
push
lea
das
dec
cmp
std
add
add
test
sbb
jp
xor
cltd
mov
pop
or
fwait
aaa
add
add
mov
push
xchg
or
mov
ljmp
mov
xor
jae
pop
popa
jecxz
fisttps
hlt
adc
sbb
lahf
xchg
lret
inc
sbb
cli
jle
push
dec
mov
int3
imull
fcoms
test
or
bound
mov
int3
pop
push
je
in
clc
aas
in
dec
test
and
cmpsb
out
xchg
xchg
add
mov
cmp
cmp
inc
aam
lods
ror
push
cli
pop
cmp
adc
sahf
sbb
aad
mov
outsl
push
dec
lea
add
sbb
add
and
mov
leave
in
jmp
push
sbb
and
out
loopne
lds
adc
add
popa
mov
push
sbb
arpl
cmp
add
push
mov
clc
lods
sub
scas
or
adc
pop
push
cmpsl
push
mov
cmpsb
xor
jmp
mov
test
and
loopne
mov
push
mov
mov
push
mov
movsb
mov
stos
fs
mov
sbb
xchg
cmp
shlb
aam
shll
js
mov
mov
add
jo
jne
dec
mov
pop
sub
cmp
dec
enter
lods
add
fldt
mov
clc
add
add
jmp
test
or
stc
pop
pop
mov
out
jae
js
lods
out
adc
push
inc
mull
fucomi
inc
mov
cmpsl
and
or
add
xlat
movsl
jge
mov
das
mov
sbbl
fimuls
and
add
dec
iret
mov
les
mov
sbb
jbe
push
and
dec
add
loop
cmc
xchg
or
adc
mov
xor
and
imul
pushf
add
js
shlb
adc
add
xor
dec
in
orb
mulb
inc
dec
push
cmp
rcrl
adc
sti
or
or
aaa
in
cmc
rcr
mov
pop
loopne
std
ret
xlat
adc
mov
std
pop
mov
aam
dec
cmp
lcall
popf
sub
lret
inc
stos
aaa
test
sbb
pop
stos
pop
aas
cltd
lods
cs
ds
cli
fbstp
or
inc
stc
cld
lret
xlat
in
cs
ja
dec
mov
flds
sarl
in
and
inc
dec
mov
dec
pop
insl
cld
cmp
dec
add
add
dec
jbe
mov
jmp
fldcw
inc
cmpsb
add
mov
leave
sub
shl
pop
loop
lock
xorl
std
cmp
in
dec
fisttpll
loope
or
dec
rorl
xor
xor
jne
stos
push
ret
pop
lods
inc
push
cmc
lcall
and
mov
jmp
pop
loopne
cmpsl
cmc
mov
insb
aaa
imull
js
push
xchg
int3
ret
pop
cmp
dec
enter
cmp
out
adc
cmp
mov
sbb
imul
mov
cmpsb
add
rclb
test
inc
mov
leave
loop
push
loop
push
popa
dec
sbb
mov
sbb
int3
cwtl
insl
out
push
pop
xor
popf
mov
scas
xor
push
into
int
xchg
rcll
jmp
sub
adc
jmp
cmpsl
not
mov
daa
mov
not
push
sbb
daa
cli
cmpsb
lahf
push
push
adc
fldcw
aaa
inc
push
out
inc
popf
out
and
pop
jne
add
adc
testb
cmpsl
adc
push
add
sar
pop
mov
pop
insb
pop
lret
jbe
inc
aaa
dec
mov
fimull
adc
mov
jp
sbb
std
xor
enter
dec
scas
pushf
out
pushf
jnp
inc
or
sbb
repnz
popf
mov
shlb
cmpsb
mov
and
addr16
jae
arpl
mov
dec
mov
mov
iret
jnp
roll
cli
mov
stos
lahf
sbb
inc
imul
or
lock
jno
jg
inc
xor
test
les
popa
std
adc
xchg
sub
mov
lock
or
mov
jmp
jbe
jmp
outsb
adc
add
movsl
jg
cmp
sub
adc
pusha
pop
xor
inc
in
popa
pop
pop
std
hlt
mov
mov
inc
push
scas
test
xchg
shrl
enter
xor
pop
push
xchg
xor
test
adc
mov
movsl
divl
and
pop
inc
pop
cmc
lods
xor
mov
daa
and
into
pop
mov
sbb
lsl
fwait
shll
mov
cmpsb
inc
stos
sahf
push
ljmp
repz
xor
jne
mov
mov
scas
test
lahf
lock
jnp
ds
mov
push
cmc
push
dec
push
inc
or
pop
xchg
test
add
mov
fs
mov
dec
loope
scas
xchg
push
inc
pop
div
xchg
push
imul
xor
sub
push
int3
adc
push
mov
ficoms
dec
xchg
frstor
das
cs
adc
stc
adc
mov
cmp
mov
jbe
orl
fwait
push
inc
add
out
mov
sbb
lods
sub
cmc
mov
dec
clc
dec
inc
cmp
or
push
cmp
inc
push
pop
nop
inc
out
movsb
mov
mov
mov
test
xchg
cmc
cmp
dec
mov
xchg
xchg
inc
lahf
rcrb
rol
cltd
lea
fwait
push
xor
pop
es
dec
inc
imul
adc
sub
test
pop
mov
ja
jge
int3
dec
jae
and
cli
lahf
pop
sub
repz
sub
pop
cmc
sbbb
add
cli
jge
xchg
rclb
dec
out
ret
mov
shll
pop
add
aaa
repnz
loop
lahf
fmul
pop
dec
ss
jg
cli
outsb
outsb
mov
mov
xlat
aam
lea
orl
shrb
jo
scas
push
insb
nop
mov
cltd
jns
and
divb
gs
pop
int
cmpb
shrl
fs
push
add
in
test
ret
mov
lret
insb
int3
cs
cmp
adc
movsb
or
jb
ljmp
daa
pop
test
adc
pop
dec
std
inc
fnstenv
pushf
in
add
mov
xchg
xchg
sub
pop
cmc
mov
outsb
jge
imul
mov
sbb
pop
es
cmp
push
cmp
cltd
dec
add
shll
repz
lock
leave
cli
outsb
addl
fdivrp
jle
mov
pop
xor
mov
ds
jno
dec
dec
dec
int
pop
pop
or
pop
mov
pop
aad
pop
xor
iret
mov
pop
mov
gs
addr16
lods
pop
lea
xchg
or
outsl
adc
mov
mov
dec
xchg
aas
int3
cmpsl
xor
mov
jge
mov
and
dec
xor
test
xlat
cli
jnp
add
ss
loopne
add
clc
sbb
pop
fisttps
das
js
or
enter
out
xor
mov
orl
mov
das
cmpsb
push
xor
xchg
push
inc
icebp
sbb
add
jle
imul
xor
xchg
or
jnp
lock
sbb
sbb
xchg
mov
jo
mov
mov
inc
es
insb
dec
fists
push
js
out
popf
inc
dec
in
aas
or
sarb
es
ret
repnz
outsl
dec
inc
shrb
jb
test
je
dec
xorb
fwait
ljmp
sbb
testb
cwtl
dec
sahf
pop
in
repz
jg
into
jmp
cltd
and
xorl
jnp
repz
xchg
test
pop
call
xor
shlb
mov
fnsave
in
stc
loopne
leave
jmp
outsl
mov
popa
dec
in
pop
loop
aad
mov
leave
out
in
test
push
repz
movsb
movl
mov
and
add
pop
mov
pop
mov
loopne
aas
xor
int3
aam
sarb
jns
adc
rorl
clc
mov
iret
mov
stos
mov
mov
imul
jae
int3
lahf
cmp
sub
ljmp
sub
ret
lock
sbb
loop
icebp
jo
fcmovb
dec
sub
or
push
pop
pop
add
out
and
dec
jnp
nop
insl
cmp
bound
cli
std
sti
fisttpl
cmp
jmp
lock
jle
andl
cli
mov
sbb
adc
cmp
subb
int
jae
cmp
test
stos
pop
in
dec
ljmp
adc
mov
aaa
jge
fcmove
xchg
aaa
loopne
scas
call
enter
sub
mov
ss
and
push
adc
out
inc
div
insl
jg
in
sub
mov
gs
sub
out
enter
xchg
aad
test
or
jae
xchg
rorl
call
cwtl
cltd
xor
xor
jno
aam
ss
ficoms
and
cmp
mov
inc
pop
fisubrl
lcall
fmul
add
xor
les
fnstenv
sbb
jmp
sub
fimuls
sbb
jge
mov
outsb
bound
scas
sub
cmc
aaa
xchg
mov
xchg
cs
jp
enter
or
fwait
lret
stc
idiv
push
mov
fcoml
jecxz
jb
ror
fxch
cmp
je
fcmovnb
rol
mov
or
mov
sbb
adc
jp
sbb
roll
inc
adc
xchg
enter
out
cmp
popa
jo
push
sahf
or
insl
pop
mov
cmp
mov
bound
sbb
in
sti
dec
xor
testb
push
movsl
xor
enter
in
int3
mov
pop
ja
xchg
movsl
fidivrs
hlt
imul
pop
mov
and
xchg
shlb
das
cwtl
sbb
jmp
ret
int3
loopne
icebp
push
jo
sbb
mov
mov
ss
xchg
js
inc
shl
sbb
adc
test
insb
add
xor
mov
pop
xchg
in
fcomp
xchg
or
inc
pop
leave
xor
push
mov
jl
and
mov
shlb
fdivl
fucom
inc
cli
das
iret
and
push
inc
dec
mulb
sub
lods
and
cmc
adc
cmp
sti
lock
adc
ds
fildl
xchg
cwtl
out
or
das
in
adc
jae
jo
in
arpl
cltd
in
unpcklps
in
in
in
fdivrp
std
adc
xor
andb
cmpsl
push
cmp
mov
repnz
add
pusha
mov
out
movsb
repnz
jmp
dec
adc
and
sahf
leave
push
std
mov
pop
dec
mov
xor
jae
xlat
cmpsb
aam
sub
or
pop
icebp
add
cs
xor
xchg
outsl
dec
out
mov
dec
pop
mov
dec
pcmpeqd
rcrl
int3
imul
aad
cld
call
out
jae
mov
loop
jg
mov
mov
and
sti
mov
rcl
xchg
push
jge
js
xchg
cli
inc
jnp
ss
inc
scas
cmp
sbb
fisubl
xlat
mov
jl
sahf
std
dec
dec
inc
push
hlt
pop
cs
xchg
xchg
adc
inc
sub
cld
cltd
xchg
outsb
fsubl
or
ds
ds
rcl
xor
cmp
xor
repz
hlt
jb
cmpsb
jnp
add
cld
ja
inc
fdivs
adc
mov
ret
sub
xchg
arpl
enter
adc
cwtl
loop
mov
adc
insw
and
or
imul
mov
scas
xlat
mov
inc
or
scas
jno
and
mov
repnz
xchg
sub
dec
xor
ret
imul
jno
out
repnz
inc
iret
pop
jge
aad
push
push
sbb
or
pusha
push
mov
push
mov
xor
sub
bound
jl
pop
inc
test
xchg
in
pop
ja
jo
jg
jae
cmp
scas
sbb
mov
adc
or
mov
xchg
inc
mov
mov
aam
aam
push
ret
ds
enter
or
add
jmp
cmpsl
imul
mov
iret
push
add
and
push
clc
inc
call
mov
negl
xchg
repnz
rcl
imul
int
leave
ss
popa
fsubs
ficoml
in
ror
pop
mov
adc
outsl
aaa
or
lcall
pop
jnp
adc
sub
mov
push
add
cli
push
mov
xlat
adc
fs
gs
jne
sbb
jg
push
jnp
pop
jle
int
dec
sbbl
arpl
mov
cli
and
sub
sub
sub
push
fs
xor
fcmovbe
cltd
lret
les
scas
mov
gs
cmpb
cltd
fisttpll
int
test
or
mov
mov
xor
lods
clc
dec
push
mov
fnstsw
repnz
into
rcrb
fxch
stc
mov
inc
and
xor
cs
icebp
xchg
add
fwait
inc
sar
mov
sub
outsl
pop
and
in
sub
pop
push
and
push
jo
jnp
jbe
scas
add
pop
decb
lods
lahf
dec
lds
and
sbb
pop
inc
lcall
inc
xchg
or
in
pop
xorl
inc
jmp
push
sub
cli
bound
xor
in
arpl
in
jns
or
shll
nop
cltd
fstpl
sub
loopne
jo
test
or
mov
lret
inc
sbb
sub
pushf
mov
sbb
popa
int3
lock
sub
add
inc
aad
mov
out
test
sar
sbb
subl
lods
mov
rorl
pop
sbb
xor
test
dec
and
xchg
aam
jge
push
cmp
mov
inc
sbb
cli
aad
scas
cmp
mov
xchg
jo
fisttpl
into
ja
stc
xor
mov
sbb
cs
push
lahf
lods
push
jbe
jno
mov
push
movl
js
jg
sub
and
ja
cmp
loop
cli
sub
adc
stc
faddl
xchg
enter
mov
add
popf
mov
popf
mov
cmp
cmp
dec
imul
popa
inc
mov
pop
dec
fdivr
shlb
nop
xor
push
aam
call
arpl
jl
jl
inc
loop
push
jae
shlb
out
outsl
push
mov
mov
daa
jo
xorl
adc
cmp
push
inc
push
add
arpl
lods
dec
mov
mov
jne
push
xchg
das
mov
js
or
push
fcom
push
dec
mov
pop
inc
xchg
sub
repnz
fnstsw
push
pop
addb
xor
in
jmp
xlat
push
sbb
imul
pop
mov
mov
mov
int3
arpl
stc
lret
addr16
shr
cmpsb
lds
sbb
or
push
addr16
into
sbb
mov
in
jg
adc
popa
xchg
test
cli
rclb
mov
or
outsb
lods
out
xor
fcomps
fstpl
xchg
nop
test
jbe
mov
push
int
loop
clc
enter
fisubs
je
adc
and
mov
cmp
dec
aam
jmp
popf
sahf
loope
into
or
adc
movsb
es
cmpsb
cmp
imull
push
mov
dec
leave
movl
or
outsb
jle
adc
lea
aad
mov
sbb
ss
sahf
mov
movsl
or
adc
lods
pop
and
outsb
sbb
stc
xor
push
nop
add
sub
sub
mov
mov
xor
fistpll
xchg
cmpsl
push
mov
lret
inc
sbb
stc
add
sub
push
ss
pop
das
aam
push
mov
inc
lahf
insl
dec
pop
push
and
sbb
sahf
mov
cmpsb
inc
dec
popf
test
jle
sub
or
adc
insl
add
lret
js
mov
frstor
and
in
addl
fsub
lds
ret
mov
xchg
jnp
inc
push
xlat
leave
ret
xor
cmp
and
andb
mov
fisubs
enter
lds
inc
jge
xchg
bound
pushf
aas
and
pop
mov
addb
xor
dec
out
push
xchg
pusha
gs
movsb
js
sub
dec
icebp
pop
hlt
ds
mov
les
xor
xor
cmpl
xor
lds
in
std
push
xchg
pop
inc
mov
ja
ror
sbb
shlb
dec
pop
pop
fsts
xor
imul
std
xchg
imul
mov
loop
movsb
call
push
sbb
add
sub
pop
xor
mov
cmp
inc
loope
lods
pop
jae
and
inc
push
movsl
adc
adc
push
sub
je
ds
pusha
inc
pop
call
and
stos
fidivs
mov
pop
fisttpl
fwait
icebp
aad
out
mov
hlt
enter
bound
push
inc
or
call
int3
mov
xchg
ret
jns
add
dec
mov
dec
xchg
push
ficoml
or
jns
and
mov
scas
xchg
repnz
nop
cmpsl
stos
lea
insb
faddp
in
lcall
loopne
cvtpi2ps
daa
add
adc
pop
inc
pop
pop
dec
lcall
pop
xor
les
pop
push
test
mov
push
add
mov
ljmp
mov
mov
jp
cmc
mov
or
mov
and
pop
outsb
xchg
out
mov
mov
in
xor
seta
dec
mov
push
or
or
hlt
or
test
cld
pop
out
push
jnp
cmp
notb
pop
xor
arpl
jp
add
movl
ret
das
test
push
clc
add
or
sbb
addl
in
jge
aad
mov
mov
lret
fwait
aam
push
pop
inc
inc
mov
mov
negl
xlat
int3
cmp
pop
fildl
add
iret
cs
dec
imul
push
rolb
jle
imul
or
stos
sbbl
pminub
jno
imul
and
mov
jne
push
sbb
into
mov
lods
lcall
push
cmp
or
pop
jae
or
lods
lock
fildll
inc
mov
adc
out
cmpsb
xlat
push
xlat
repz
push
adc
mov
mul
sarl
inc
cmc
mov
add
jmp
push
mov
test
jo
xor
sub
in
inc
dec
lahf
shrl
lcall
cmp
out
pop
adc
icebp
and
xchg
jecxz
xchg
or
mov
arpl
add
and
gs
test
das
mov
or
daa
lds
inc
lret
cwtl
xorl
and
mov
inc
xor
xor
arpl
mov
pop
sbb
lret
out
rorl
out
aam
fs
inc
pop
push
mov
fstl
mov
pop
pushf
das
enter
jmp
add
push
std
inc
fiadds
fmull
ret
ljmp
jmp
popa
mov
out
mov
pop
cmp
loop
lds
xchg
or
dec
ja
mov
outsb
cmc
xor
es
cmpsb
cmp
xchg
push
jns
push
lret
mov
xor
andl
inc
xchg
push
pavgw
pushf
fisttpll
ljmp
das
adc
lret
and
xchg
cs
push
add
insb
mov
in
adc
fldt
or
cmp
sbb
sub
dec
insb
iret
aad
inc
xchg
loop
xchg
clc
mov
jae
xchg
xor
and
xchg
pop
in
push
xchg
mov
dec
cmpsl
jae
ja
std
push
negb
mov
orb
out
repz
cmp
mov
xchg
xlat
add
push
cmp
push
leave
mov
jo
rep
push
or
xchg
mov
repz
dec
pop
mov
pop
adc
movsl
xchg
outsb
mov
mov
ficoml
add
div
jno
fsub
rolb
jne
push
push
mov
adcb
inc
lcall
daa
inc
jecxz
pop
dec
mov
inc
jge
int3
mov
fdivr
cwtl
fnstcw
mov
popa
inc
mov
and
in
aad
les
pushl
cltd
push
inc
movsl
arpl
ficoms
lret
in
rcrb
add
pop
ror
jnp
xor
pop
out
fwait
imul
js
sahf
dec
out
push
jb
aad
pop
mov
inc
lods
xchg
mov
fstp
loopne
pushf
dec
cltd
subl
stos
push
test
mull
int3
lea
les
stc
jno
mov
pop
pusha
and
push
push
cmp
js
fstp
xor
lds
cwtl
sub
adc
and
popa
popf
jnp
add
mov
push
rorl
bound
test
insb
mov
fiadds
adc
cmpsb
cs
xchg
dec
adc
or
loope
xor
and
scas
cmp
lcall
mov
jo
int
mov
ret
xchg
test
ds
mov
mov
aas
les
xor
movsb
jns
sbb
mov
aam
pop
mov
push
sub
jg
mov
xor
outsl
outsb
mov
add
mov
pop
cmovns
adc
test
nop
cltd
bound
jl
add
imul
aam
cmp
out
daa
adc
inc
nop
dec
pop
ss
or
push
outsl
xchg
fistpl
or
cmp
ret
js
mov
add
push
in
gs
mov
insl
push
popa
adc
inc
incb
xchg
shll
pusha
and
in
fwait
dec
jl
call
and
fistpl
movsl
imul
popa
mov
pop
jge
lcall
pop
addr16
dec
jg
stc
jge
jno
dec
ljmp
ljmp
sahf
mov
out
mov
xchg
jno
out
add
sub
inc
into
ljmp
es
imul
jae
push
in
cmp
mov
ror
pop
adc
shrb
push
mov
fcomi
outsb
jle
dec
jbe
and
and
adc
xor
lds
cltd
fcmove
sbb
divl
pop
dec
mov
aam
sbb
div
scas
or
test
xlat
jbe
flds
lret
call
cmp
shlb
push
pop
cmp
jle
movsb
mov
clc
xor
mov
data16
int
repz
outsl
or
sub
scas
mov
fwait
in
testb
xlat
jmp
in
dec
mov
xchg
arpl
test
aaa
mov
jbe
sbb
lret
jecxz
jno
add
and
cmp
rcrb
mov
jno
jmp
mov
or
xchg
xor
sbb
pop
rcrb
xor
mov
test
test
jbe
pop
out
bnd
aad
shll
stos
or
adc
rol
out
mov
pop
loope
sbb
or
or
js
xchg
mov
testb
push
pop
aaa
and
mov
popf
sbb
pop
adc
in
stos
add
mov
mov
jno
mov
cmpl
shll
jne
lods
xchg
sbb
mov
sub
pusha
adcl
jg
sub
or
pop
sbb
ss
andl
aam
cmp
mov
scas
clc
pop
leave
push
js
mov
add
xchg
pop
push
dec
and
pop
mov
cltd
add
xor
mov
mov
adc
insl
xchg
addb
std
lods
mov
fsts
xor
jbe
fimuls
xor
sbb
xor
lock
cmp
pop
adcl
std
push
mov
push
daa
or
mov
or
mov
jnp
mov
dec
mov
xchg
je
sub
sti
inc
mov
lods
sub
cmpsb
jmp
cmp
xor
jle
dec
xchg
push
cmpsb
leave
jb
mov
notb
pop
lods
sahf
int3
push
negl
dec
jp
test
int3
call
imul
fadd
jb
push
nop
sub
mov
frstor
adc
addb
divl
adc
fidivs
pop
rorl
mov
sbb
sbb
movsb
mov
or
sbb
mov
sbb
aad
jge
jmp
into
dec
loope
sbb
clc
ss
das
imul
mov
sahf
sahf
xchg
icebp
test
jmp
js
mov
dec
test
push
push
popa
or
mov
pushf
xor
gs
mov
mov
stos
inc
insl
or
out
outsl
popa
mov
inc
fwait
dec
lret
movsb
aad
test
hlt
lret
jg
jae
rol
jb
mov
rclb
inc
les
and
ss
repnz
push
sbb
xchg
in
stc
inc
xor
and
adc
setbe
xor
mov
mov
and
fisubrl
xchg
push
mov
push
sub
lods
das
je
push
cwtl
out
xchg
insb
mov
mov
int
out
faddl
inc
dec
mov
inc
lcall
int3
iret
out
andl
inc
icebp
xlat
jbe
movsb
scas
xor
xchg
jle
int
ss
bound
out
sbb
jmp
outsl
cli
insl
lock
fisttps
das
or
shr
fcomps
push
jbe
iret
dec
lret
adc
inc
cli
and
roll
out
nopl
mov
cmpsl
mov
inc
push
popa
jae
adc
frstor
decb
cli
test
shlb
pop
push
xchg
lock
loop
mov
mov
inc
xchg
sbb
or
lods
adc
test
xor
sbb
cld
jmp
xor
jge
imul
nop
jb
mov
cmp
push
popl
xor
repz
dec
fadds
inc
xor
fcoms
or
cmp
jmp
jbe
js
mov
or
out
xlat
mov
ret
pop
enter
rcrb
psadbw
sbb
inc
jge
sub
ds
rcrl
inc
jecxz
jbe
mov
les
dec
shll
mov
push
mov
mov
xor
or
sub
xchg
popa
cmpsl
push
jmp
in
fstps
mov
push
ljmp
xchg
dec
push
or
cmp
jns
mov
js
sarl
sbb
jno
dec
sbbb
stos
jle
cld
stos
roll
ja
seta
dec
xorb
ja
fs
stos
cltd
xchg
insl
loope
lcall
mov
cmc
js
out
scas
push
dec
and
out
inc
adc
sbb
fdivp
push
or
inc
out
outsb
fsubl
cmpsb
mov
or
sbb
pop
xchg
frstor
rcr
jnp
cmp
testl
or
mov
push
push
inc
push
daa
sbb
xchg
mov
xchg
loop
inc
cmp
inc
addr16
or
cmp
cmp
mov
sub
dec
imul
sub
xchg
push
fldcw
pushf
insl
xor
mov
hlt
inc
lret
lret
and
int
andb
mov
inc
sub
pusha
mov
insb
and
imul
inc
add
outsl
testl
pop
xchg
mov
xchg
sbb
movsb
push
bound
or
rcr
mov
cmp
push
pop
jno
xor
xchg
xor
cmpl
loop
lods
push
jbe
jl
loopne
xchg
subb
lcall
pusha
nop
stos
dec
sub
and
pushw
sahf
subl
lret
pop
test
or
pop
and
sbb
lcall
dec
cmp
lock
cld
add
pop
add
inc
sbb
imul
bound
xchg
lea
or
jge
sbb
stos
out
push
dec
push
push
jno
mov
ret
cmpb
mov
sub
push
gs
lods
js
dec
lret
xorb
xor
les
adc
xlat
add
mov
mov
mov
inc
sbb
mov
push
in
mov
gs
sbb
dec
and
inc
movl
aam
jae
int
add
int
movsl
nop
mov
mov
inc
inc
dec
cld
xchg
jmp
aad
lds
cmpsb
cld
pop
in
sbb
mov
inc
sar
dec
lcall
sarl
js
push
jbe
pop
pop
in
loope
imul
call
inc
mov
scas
add
add
xchg
mov
xchg
mov
int
xor
scas
sub
lock
addb
rorb
outsb
push
push
fsts
sbb
sbb
mov
sbb
sarl
mov
inc
xor
dec
xchg
pop
push
leave
push
mov
lds
shrl
mov
adc
mov
jne
mov
dec
mov
or
iret
cwtl
enter
adc
lahf
mov
lds
test
scas
cmp
jbe
and
push
jb
call
jmp
out
lds
xor
dec
icebp
dec
inc
aas
jo
ss
or
add
les
fdiv
pop
xchg
mov
and
ss
and
fmuls
inc
dec
ret
ret
fistpl
ss
aad
mov
mov
daa
stos
loop
sbb
and
adc
dec
testl
mov
cli
lods
lds
xchg
or
xor
add
xchg
mov
aam
inc
add
mov
xor
xchg
xor
comiss
aaa
scas
xchg
std
sar
int3
mov
in
incb
mov
int
jbe
dec
cltd
mov
mov
imul
pusha
jp
leave
inc
pop
int3
test
incb
sbb
cli
dec
in
mov
nop
lods
in
testl
out
mov
aad
addb
decl
pushf
pop
mov
add
mov
repnz
aaa
jmp
testb
adc
jp
repz
orb
jbe
adcl
lods
shlb
bound
mov
adc
dec
popa
into
pop
jo
or
roll
sub
xchg
push
push
mov
pusha
or
divb
jl
pop
inc
out
sar
rcl
jge,pn
dec
sub
jmp
jmp
movsl
xor
jl
sti
dec
jns
mov
stc
stos
sbb
out
lret
test
pop
inc
mov
int3
adc
push
inc
cmp
pusha
adc
xor
inc
je
in
mov
test
mov
xor
add
inc
xchg
cmp
or
fnstsw
push
xlat
jno
bound
cmp
adc
lds
in
int
std
mulb
jmp
jbe
push
pop
fisubrs
scas
lock
jns
cmp
xchg
and
outsb
push
xchg
out
scas
adc
insb
and
sti
repnz
jae
dec
xlat
mov
in
mov
push
add
inc
shll
sti
sbb
adc
xor
out
rcl
mov
cmpsb
dec
push
in
repnz
gs
cmp
movsl
iret
cmp
fdivl
pop
mov
push
mov
cmp
mov
xchg
icebp
add
or
adc
loopne
cmpsl
lcall
jbe
mov
icebp
xchg
and
mov
dec
insl
push
sbb
mov
popf
enter
jae
cltd
xchg
es
cmp
out
cmp
cmp
lret
stos
mov
loopne
pusha
shlb
mov
icebp
ja
jnp
sub
mov
and
xchg
cmp
push
jl
aaa
mov
adc
lock
xchg
mov
gs
mov
adc
fucomi
jge
jl
bswap
ss
adc
mov
add
test
das
jecxz
dec
push
arpl
sub
pop
sbb
jp
ss
xor
mov
or
fimuls
add
add
mov
xor
aad
or
in
stc
inc
or
icebp
push
cmpsl
dec
dec
mov
xlat
iret
out
cmp
push
sbb
push
daa
mov
repz
dec
pop
out
mov
mov
scas
push
cmp
pop
insl
aam
push
mov
mov
in
sbb
and
in
mov
call
sub
cmp
mov
fwait
pushl
aad
cmpsl
hlt
jno
mov
in
enter
lds
cld
int3
test
lods
aad
lds
add
sub
sub
jecxz
jmp
push
js
mov
nop
out
pop
xchg
pop
pop
pop
gs
aam
jl
out
mov
sbb
push
push
aad
cmp
loope
les
jmp
fldcw
push
mul
inc
inc
mov
mov
sbb
cwtl
and
mov
cmc
sarl
int
lea
push
pop
xchg
clc
les
imul
mov
loopne
pop
sbb
stos
mov
inc
mov
not
daa
jp
pop
mov
dec
cmpsl
xor
inc
sbbb
fisttps
mov
jbe
dec
aas
loope
inc
es
lret
popa
jecxz
das
or
pop
cmpl
in
and
addr16
shlw
in
cmp
sub
xor
rcrb
icebp
add
sbb
xchg
mov
cli
test
inc
enter
or
inc
inc
dec
bound
out
dec
push
jecxz
in
repz
and
push
cwtl
mov
xchg
inc
loope,pn
das
lods
cmc
pop
jge
jle
mov
mov
push
scas
mov
js
push
fs
out
add
push
mov
lahf
mov
lea
ret
or
add
ja
cld
mov
inc
test
mov
mov
adc
pop
dec
mov
and
push
push
xchg
jge
sub
scas
or
or
icebp
xor
int
sti
ret
sub
and
aaa
int3
enter
mov
xchg
sbb
sarb
mov
push
ss
push
pop
dec
bound
popa
mov
imul
xor
sbb
xor
repnz
mov
adc
dec
add
gs
push
dec
shl
lcall
or
fcoml
add
xor
and
adc
xchg
pop
clc
rcl
cmp
mov
or
insb
ljmp
inc
cltd
aad
and
mov
adc
stc
lcall
out
or
jns
xor
jnp
test
js
add
sbb
mov
sub
mov
lcall
repz
fsubrp
enter
pusha
icebp
xor
icebp
inc
adc
pop
pop
mov
adc
test
mov
movsb
mov
gs
mov
xor
mov
push
mov
mov
out
push
xlat
xor
test
sub
movsb
dec
sub
xor
mov
sbb
jns
inc
ret
int3
sub
pusha
lea
lock
repnz
aas
cmp
adcb
je
in
bswap
pusha
adc
push
and
sub
sub
int3
iret
fiadds
nop
push
jae
jb
adc
sub
xchg
jecxz
dec
and
jge
outsb
bnd
nop
push
add
ja
daa
hlt
repnz
mov
mov
ss
rcl
push
das
lods
test
jo
adc
xchg
outsb
push
out
shr
inc
int3
repnz
daa
outsl
fwait
fidivs
jbe
xlat
mov
xor
ljmp
fsts
in
ja
mov
test
jbe
sbb
sbb
add
in
pusha
fwait
jo
mov
xlat
dec
pop
inc
rcll
pop
rcrl
mov
dec
or
add
popa
movsb
loope
out
insb
pusha
jp
test
in
or
mov
test
mov
mov
xchg
pusha
and
test
sbb
pop
rclb
or
mov
outsb
adc
jb
or
mov
cltd
push
xchg
cld
arpl
mov
add
loope
das
xchg
or
jecxz
add
pop
out
mov
and
enter
or
out
inc
cmpsb
xchg
cmp
bound
sbb
out
dec
inc
stos
and
dec
scas
pop
push
adc
cmp
aaa
stc
lahf
mov
btr
je
jl
inc
sub
jnp
loope
dec
mov
sub
arpl
enter
ret
sub
cmp
push
ljmp
and
inc
sbb
fsubs
sbb
xor
xlat
enter
cmp
dec
xchg
ljmp
xor
pop
outsl
xor
lock
movsb
mov
xor
and
jecxz
dec
push
or
cwtl
mov
stc
xchg
and
test
jge
int3
ja
scas
ja
mov
or
inc
mov
cli
test
gs
adcb
in
push
clc
mov
xor
jg
popf
call
int
lea
pop
cltd
imul
sahf
repz
cmpsl
ja
fildl
mul
sysret
into
data16
inc
je
cmpsl
fsubl
and
inc
push
subl
and
xchg
call
mov
xchg
sub
mov
xchg
stos
push
mov
xor
mov
movsl
jge
jmp
and
fst
mov
loopne
xchg
decl
jmp
fcomps
sub
daa
lcall
mov
add
mov
or
fidivrs
mov
xor
jg
push
dec
jmp
inc
sbb
cmp
lcall
jle
cmc
nop
jae
dec
jge
mov
pop
daa
std
fsubs
cmp
cmovl
push
xchg
mov
lcall
or
aad
nop
jnp
movsb
jb
pop
lcall
sahf
in
or
out
addr16
add
repnz
mov
mov
mov
out
jbe
cmp
test
add
popaw
sub
pop
xchg
mov
pop
xchg
popf
fidivs
dec
shr
cmpsl
push
arpl
pop
jg
cli
imul
scas
or
clc
aas
cwtl
imul
and
mov
mov
inc
adc
in
fldcw
and
jno
inc
ds
jl
das
cltd
mov
push
cmp
cmpl
bound
into
sbb
and
ret
push
in
mov
sbb
mov
mov
adc
sar
jg
not
xchg
iret
pop
in
push
stc
lret
xchg
ret
out
ja
add
jl
mov
and
js
or
lock
rcl
mov
push
popf
fsubs
pop
subb
sub
adc
xchg
and
mov
jno
arpl
addl
outsb
lret
jns
jle
or
push
pop
cltd
inc
sub
ror
mov
pop
in
adc
sub
lds
sahf
mov
movl
lahf
incb
inc
in
dec
mov
jp
sub
sbb
ds
jne
mov
je
or
inc
mov
mov
xor
cmp
or
mov
movsb
outsb
cmc
cld
mov
loopne
test
ja
bnd
outsl
sub
xchg
jecxz
and
or
mov
jge
pop
mov
push
call
push
lods
sub
testl
push
xor
shlb
aad
fs
mov
jecxz
es
lea
xor
insb
clc
mov
jmp
shlb
bound
mov
add
movsl
mov
xor
xor
add
inc
das
push
pop
aaa
stos
pop
jo
ds
andb
int
push
add
repz
sub
xor
push
fld1
movsb
inc
andl
sub
ret
jns
pop
push
push
in
jbe
sub
push
push
in
mov
std
push
mov
mov
aas
fwait
cld
add
push
lahf
insl
and
andb
enter
mov
xchg
imul
adc
shl
lds
outsl
mov
popa
pop
testl
aas
fwait
and
outsl
xor
js
icebp
ja
push
in
bound
dec
pusha
mov
insl
push
popa
dec
cmp
jno
sbb
adc
inc
test
pop
adc
jp
and
fsubl
dec
les
mov
jo
xor
das
call
test
mov
test
mov
jbe
xor
mov
xor
mov
cld
cwtl
int
pop
push
mov
cltd
lahf
fs
push
pop
inc
add
lock
mov
iret
sbb
dec
sbb
movsb
leave
push
negb
fldl
mov
test
inc
fmuls
fsts
cmp
mov
mov
clc
mov
xlat
std
fcmovne
and
cmovne
sbb
cli
fwait
jle
repnz
arpl
mov
xor
outsb
inc
daa
adc
sbb
and
push
cltd
pop
cmc
xchg
es
sar
and
ret
jno
sbb
add
pop
iret
jns
test
mov
mov
addb
xor
dec
mov
rcl
add
popa
jmp
dec
and
or
rcl
ljmp
adc
imul
test
mov
lods
jle
cltd
mov
lods
sbb
mov
jae
cmpsb
leave
jo
push
lret
jns
adc
inc
das
test
mulb
leave
inc
test
sarl
scas
sub
adc
lea
or
adc
push
xchg
stos
es
fwait
test
and
push
push
faddl
sub
cld
out
add
dec
shl
imul
jae
scas
aaa
aas
cs
dec
nop
stos
or
dec
pop
outsb
in
popa
enter
ret
stos
fbstp
fsubr
jmp
mov
add
push
bound
inc
inc
loop
jecxz
xorb
orb
dec
mov
dec
iret
mov
pop
xchg
and
sbb
stos
test
xchg
push
jg
movsl
outsl
loopne
xlat
mov
mov
xchg
fmul
mov
dec
popf
orl
std
push
test
stos
pop
fmulp
xchg
adc
cmc
aaa
insb
cmp
int3
inc
mov
test
cmpxchg
push
sbb
jnp
add
leave
rol
popf
outsb
adc
enter
push
cmp
push
xor
in
dec
adc
ret
push
outsl
cmpsl
pop
mov
mov
loop
js
mov
cmp
mov
cmc
push
fidivl
pop
les
and
mov
sbb
fnstcw
mov
stos
fcoms
loopne
bound
dec
mov
pusha
push
outsl
jb
adc
push
adc
adc
mov
pusha
iret
cmpsb
adc
test
add
into
xor
mov
jnp
mov
sub
ret
sarl
mov
add
repnz
push
ss
cltd
xchg
push
lahf
in
mov
hlt
sub
pop
shlb
enter
pop
sub
gs
inc
fsubp
lods
xchg
jg
add
repz
fdivs
lea
sbb
mov
xchg
call
pusha
pop
push
out
jl
lret
rcrl
loop
xor
in
stos
popf
sbb
pop
push
sahf
hlt
lods
clc
jp
mov
je
outsl
cli
jbe
sub
sbb
movsb
add
inc
mov
daa
or
popf
xor
shlb
push
pop
mov
jle
cmp
add
dec
or
aad
dec
outsl
pop
nop
enter
in
jg
sub
inc
push
xchg
rolb
mov
pop
mov
in
mov
pop
addr16
jmp
xchg
pop
test
idivl
popf
jns
jns
leave
iret
int
pop
dec
out
jb
mov
enter
call
cmpsb
jecxz
mov
shrl
popa
cmp
inc
inc
mov
lcall
nop
arpl
mov
xor
cmpsb
iret
pusha
mov
inc
adc
fmul
popa
pushf
popa
inc
in
fcmovne
pop
inc
mov
xor
aad
cld
mov
sub
inc
xchg
roll
xchg
push
rorl
sub
outsl
sti
mov
fstpl
mov
cmpl
push
rcll
xchg
push
ret
mov
sbb
outsl
cld
jle
push
or
outsl
fisttpl
adc
xchg
add
adc
bound
or
test
cltd
cwtl
or
popf
mov
or
test
cs
lret
imul
and
mov
sahf
aad
mov
clc
mov
jnp
push
pop
mov
push
mov
xor
clc
hlt
lock
scas
and
xchg
pop
mov
jmp
push
mov
mov
push
mov
scas
fdivs
or
and
pop
push
sbb
sbb
lret
call
fstp
cmp
and
fwait
pop
insl
lahf
dec
add
movsb
bound
mov
scas
mov
sahf
into
out
jb
jno
pop
push
inc
cld
push
shll
or
pop
out
cmp
das
fdivs
dec
mov
adcb
push
data16
out
pop
ret
mov
sbb
mov
pushf
test
repz
pop
lock
clc
xchg
pop
roll
cmp
xchg
or
push
sbb
ljmp
std
sbb
sbb
dec
mov
shrb
imul
push
jl
dec
inc
add
es
inc
fld
mov
push
es
into
fcmovnb
jle
repz
rcl
imul
inc
lds
hlt
xchg
jo
sar
es
jne
and
jne
testl
cltd
adc
push
addr16
fwait
andl
pop
ljmp
add
add
cltd
cmp
sbb
push
push
dec
ljmp
popf
mov
scas
pop
enter
repz
sbb
iret
repnz
movsb
cmp
loope
xor
lahf
cs
lods
jno
mov
xchg
jb
icebp
fists
or
add
pop
pop
pop
ja
dec
pop
int
fstl
cld
stos
cwtl
cmp
outsl
xchg
mov
adcb
pop
fs
xchg
mov
jne
sbb
mov
sbb
or
stos
mov
fsubrl
fwait
insb
and
dec
iret
enter
cmc
fdivrs
and
scas
repz
jo
pop
call
call
push
imul
mov
jl
in
xlat
dec
das
lods
orl
ja
xchg
adc
icebp
aam
ljmp
repnz
and
jle
test
mov
and
popf
mov
sbb
stos
mov
icebp
call
sbb
dec
push
ret
jb
jmp
or
mov
test
mov
adc
dec
sub
sbb
jg
addr16
pusha
pop
setbe
orb
inc
pusha
pop
sub
xchg
xchg
inc
jecxz
clc
pushf
mov
inc
inc
adc
dec
sbb
and
push
ret
pop
dec
mov
or
fdivs
lcall
mov
out
cmp
xor
xchg
pop
sbb
out
push
jae
in
test
xchg
test
cmpsb
pop
mov
inc
pop
rcll
jb
scas
push
dec
lock
jmp
pop
jbe
test
mov
mov
xor
or
jge
dec
sub
inc
push
sbb
mov
fnstsw
testb
push
jge
cmp
adc
xchg
jg
fldl
pop
shll
es
cmp
cmpl
loopne
pop
inc
in
mov
imull
jnp
and
data16
xchg
or
orl
es
adc
xlat
pop
popf
xchg
dec
and
inc
inc
fstps
test
mov
pop
aas
scas
int3
and
jle
insb
cwtl
scas
cmp
jae
push
repnz
les
aam
push
loopne
stos
cmp
jnp
and
pop
in
jbe
nop
push
jmp
mov
sub
insb
mov
xchg
or
test
jno
sub
fistpll
sbb
sbb
add
push
mov
lret
int
leave
xchg
and
popa
jmp
frstor
mov
jle
dec
pop
or
les
imul
icebp
sbb
push
jb
inc
xchg
pop
adc
ja
movsb
mov
dec
movsl
or
mov
ret
popf
cld
test
push
cmp
es
enter
fbstp
mov
xor
cmp
pop
popf
xchg
adc
jnp
repnz
add
xor
jmp
push
add
lret
pop
or
ficompl
xlat
cwtl
dec
push
xchg
dec
fidivrl
mov
add
pop
fldt
das
pop
jle
pushf
sbb
xchg
popf
hlt
add
out
stc
adc
stos
mov
jne
lds
jne
and
movsb
xchg
jl
mov
jae
ucomiss
lds
out
jecxz
mov
adc
xchg
aaa
loopne
dec
icebp
sub
test
jge
inc
andb
in
xchg
movsl
dec
shr
cmp
and
mov
clc
pop
adc
test
sbb
mov
and
lods
in
pop
pop
arpl
flds
push
sbb
jle
fcomps
pushf
xor
mov
push
int
inc
xchg
loop
sbbb
mov
enter
pop
nop
jmp
out
mov
pop
stc
enter
fldl2t
daa
in
xor
push
mov
daa
and
mov
sbb
arpl
ja
mov
scas
push
lock
into
add
mov
or
adc
frstor
cs
inc
jbe
jae
sub
xchg
outsb
pushf
add
mov
inc
gs
or
sarb
addr16
gs
int
das
mov
aas
das
push
shl
ret
rol
adc
fimuls
mov
sahf
fucomip
cwtl
mov
mov
and
stos
jl
clc
mov
sub
xor
icebp
sbb
loop
xorps
sub
fstps
cltd
sbb
inc
fnstcw
cmp
adc
xchg
clc
scas
mulb
xchg
loopne
jp
cmp
sbb
scas
or
jmp
int3
sarl
or
imul
lret
stos
test
fisubrl
test
movsl
mov
repz
hlt
sub
into
mov
pop
repnz
cmpsb
cmc
in
xchg
add
inc
push
test
dec
out
mov
xchg
arpl
aam
andl
xchg
push
pop
test
jecxz
fistpll
inc
in
jbe
add
andb
rcll
jne
pusha
sti
jae
icebp
cli
cmpsl
adc
rorb
out
ss
jmp
cmp
imul
pop
jo
push
lods
adc
insb
pusha
mov
jge
cmpsb
jbe
push
nop
pop
fsubl
push
faddp
insb
loopne
data16
push
cmc
loope
mov
or
lahf
jmp
cs
pop
sbb
mov
mov
fs
cmp
sub
clc
dec
cmp
scas
ret
jae
xchg
mov
adc
push
inc
pop
push
push
pop
jne
mov
and
cmp
jae
push
or
iret
adc
dec
js
jo
cmc
bound
fnstsw
sub
xchg
add
roll
roll
xchg
adc
xor
push
jecxz
out
xchg
or
and
fwait
mov
adc
mov
xor
pop
mov
adc
stc
pop
lcall
jge
xor
push
xor
std
xchg
jg
cltd
add
fmulp
adc
popf
jne
pop
hlt
push
add
cmp
mov
push
dec
loopne
xor
mov
inc
pop
sti
xchg
mov
push
mov
add
das
add
shrb
xor
mov
fmull
gs
cld
out
lea
mov
shrb
into
inc
dec
std
jb
stos
inc
ret
int
call
imul
push
shld
cmp
ja
mov
jbe
xlat
pop
mov
adcl
adc
push
mov
inc
fwait
fwait
push
ja
sbb
leave
adc
arpl
xchg
or
jle
and
jge
xchg
out
outsb
sub
sarl
xchg
xchg
dec
in
stos
inc
sub
cli
idiv
xchg
push
cmp
popf
lock
cmp
mov
push
lea
xchg
mov
mov
clc
add
dec
xchg
xor
insb
push
add
popa
ss
jp
mov
movlps
aas
pop
loopne
aas
push
sbb
mov
in
lret
in
dec
mov
xor
lret
mull
push
insb
jmp
adc
in
sbb
js
inc
scas
movsl
dec
or
pop
dec
mov
shll
sbb
mov
aaa
xor
pop
shr
imul
fisttpll
incl
lea
xor
inc
jno
das
orb
lret
sbb
mov
outsl
xchg
cmp
lcall
push
jae
jbe
mov
inc
xchg
es
rorb
iret
aam
cmc
dec
and
push
mov
ror
outsl
lret
push
add
pop
enter
sbb
or
jp
mov
inc
push
and
test
add
rorb
xchg
sahf
cmc
or
inc
jl
push
or
outsl
or
movb
cli
nop
or
lret
mov
inc
rolb
enter
dec
pop
push
sti
inc
and
fdiv
xor
shll
rcll
popf
stos
fnstenv
sahf
inc
xor
int
mov
sub
and
pop
lds
loopne
pop
mov
xor
mov
mov
cmp
pop
cmc
mov
test
push
data16
pop
in
mov
pop
and
data16
push
jmp
insb
jns
stc
ss
sbb
decb
sbb
inc
cmp
dec
leave
dec
daa
icebp
jle
cwtl
es
sub
lret
out
jg
andb
sahf
pop
sub
stos
iret
pop
add
mov
popf
scas
shll
into
ret
das
nop
sub
lods
roll
jae
add
fisubs
or
cmpsb
add
call
and
xor
xor
cwtl
push
data16
arpl
jp
lods
inc
sbb
jg
divb
inc
mov
adc
sbb
imul
cmp
in
scas
xchg
popa
lods
sbb
aaa
jae
cltd
lods
inc
inc
pop
adc
or
addb
ljmp
aad
pop
repnz
cmc
push
cmpsb
push
insl
mov
push
std
xchg
pop
push
xlat
dec
mov
aad
ss
dec
push
sub
repnz
jb
add
cwtl
divb
adc
push
loopne
xor
xor
mov
add
push
fcmovb
add
mov
pusha
sbb
scas
or
fildll
dec
pop
out
and
jecxz
or
icebp
sub
stos
mov
hlt
inc
in
test
lock
out
cmp
jg
mov
adc
and
or
mov
adc
repz
sub
out
cwtl
imul
stos
sub
pusha
mov
sbb
movl
pop
dec
xchg
mov
add
sub
inc
adc
xor
mov
hlt
cmp
ret
mov
aaa
js
push
xchg
and
cmpsl
or
outsl
insl
xchg
jae
inc
aad
push
lds
xlat
fidivs
dec
ffree
or
jge
jmp
push
lcall
inc
stos
mov
dec
gs
insl
push
mov
rclb
sub
in
sub
out
jne
and
push
out
pop
je
imul
dec
cmp
movsl
or
ffree
mov
jne
inc
addr16
fwait
mov
mov
leave
or
add
ret
and
das
xor
xchg
inc
xchg
lods
popf
or
fstpt
mov
jae
adc
ljmp
inc
or
cmp
push
fwait
cltd
mov
js
arpl
mov
pop
imul
int
sub
adc
sbb
clc
loop
jbe
dec
sbb
pop
fldenv
push
repz
add
ss
add
out
in
mov
hlt
inc
daa
lock
shll
cmp
scas
je
cmp
or
push
int3
or
inc
ja
xchg
out
dec
arpl
loopne
movsb
cmp
in
mov
lods
and
cmpsl
adc
imul
jg
cwtl
cmp
adc
jecxz
ret
insb
sub
mov
sbb
sub
hlt
xchg
fstps
cmpsb
pop
adcl
adc
dec
repnz
or
xchg
nop
dec
inc
inc
push
idivb
jb
sub
out
and
adc
mov
xor
gs
cmp
daa
jecxz
xchg
negb
add
gs
scas
hlt
push
sahf
std
push
sub
adc
fidivrl
fldcw
pushf
pop
fs
pop
cmpsb
fcoml
out
mov
sbb
sbb
call
pop
out
iret
mull
pop
adc
lock
data16
dec
xchg
sti
dec
roll
popf
push
mov
jbe
hlt
bound
mov
out
std
lret
leave
jo
push
test
jbe
mov
adc
mov
xor
pop
push
push
mov
fisttpll
and
sub
mov
inc
cmpsl
cmp
jno
pop
inc
lcall
jecxz
aam
fidivrl
cli
outsb
mov
mov
in
test
stos
aam
mov
cmp
bnd
xchg
mov
sti
mov
leave
call
sub
push
cmpsl
dec
scas
pop
cmp
jae
mov
stc
aas
or
das
enter
sbb
jg
jo
arpl
inc
and
jnp
movsb
in
cli
jno
add
insb
mov
sarl
shll
mov
sbb
out
xor
and
fistpll
loope
loope
movsb
movsl
and
xor
jle
mov
inc
cwtl
insb
test
divl
shrl
pop
loope
rolb
add
xor
gs
push
jno
shr
xor
enter
imul
and
ret
xchg
mov
adc
ficomps
fistpll
out
jo
lods
and
sbb
xor
pop
ret
aam
es
cmp
testl
dec
mov
dec
and
imul
xchg
xchg
dec
push
out
jle
das
dec
push
dec
loopne
cmpsl
lcall
push
adc
orl
loop
call
xor
inc
call
sub
jp
xor
sbbb
pop
testl
aaa
arpl
mov
add
out
out
dec
ljmp
std
xor
or
and
hlt
pop
addr16
sub
jecxz
lcall
sbb
adc
popf
in
and
mov
vpaddw
aad
jns
dec
gs
or
cmp
pop
loope
movsb
sub
pop
xchg
test
jl
xor
add
and
insl
int
cmp
mov
push
and
dec
dec
hlt
jecxz
cmc
out
xchg
push
sbb
orb
mov
cltd
jo
mov
ljmp
lds
insl
cmc
lds
push
pusha
icebp
mov
aam
insb
adc
jae
fistl
jnp
push
jecxz
pushf
push
or
movsl
daa
rcrb
mov
lock
xchg
in
loopne
jbe
adc
add
out
push
push
mov
sbb
mov
pop
push
adc
hlt
test
dec
in
adc
hlt
stos
jp
jno
inc
mov
xchg
and
or
aad
and
sbb
cltd
mov
shlb
mov
cmp
les
jge
xchg
jae
lds
out
in
out
ss
or
xchg
or
push
lods
test
or
push
push
pop
std
nop
daa
movsb
in
push
pop
cmp
pop
dec
addl
fxam
loope
outsl
cmpsl
cltd
clc
sbb
pop
mov
ficompl
mov
xchg
mov
mov
jecxz
pop
test
into
jbe
push
mov
out
arpl
pop
mov
cmp
fnstenv
jno
add
in
out
jb
fwait
clc
push
mov
ret
and
pop
aaa
xlat
cwtl
arpl
push
and
pop
pop
fiaddl
or
pop
jae
mov
repnz
loopne
xlat
into
in
rcl
pop
addr16
push
cltd
or
fstpt
movl
insb
dec
mov
pop
cmp
mov
lods
cmp
cmpsl
hlt
icebp
inc
les
fxch
scas
dec
ret
in
xor
hlt
adc
push
outsb
jg
mov
test
adc
add
mov
jmp
add
pusha
adc
sahf
adc
mov
hlt
jns
jae
icebp
adc
lret
jbe
pop
adc
ret
aam
ret
lcall
shll
mov
inc
mov
movsb
pusha
and
jae
jge
or
jle
bound
out
xor
xchg
ljmp
add
lcall
es
fsubs
popa
test
mov
adc
mov
es
dec
ss
xor
mov
xor
push
int
xchg
out
stos
and
dec
dec
jmp
cld
pop
test
or
and
iret
push
imul
das
xchg
xchg
repz
out
dec
subb
loope
and
orb
or
jbe
shrb
and
and
mov
and
js
scas
aaa
xor
push
push
test
mov
ror
lcall
cli
dec
and
std
push
pop
dec
out
pop
hlt
call
or
les
subl
inc
andl
mov
ss
jae
ljmp
sub
jnp
push
xchg
aam
xor
push
jns
sub
or
xchg
sti
sbb
int3
sub
dec
out
dec
lret
mull
subb
cmp
fsubs
loop
loopne
mov
movsb
and
scas
jge
aam
jne
jo
xchg
jne
les
in
insl
xchg
fbld
leave
stos
mov
and
lock
int
adc
xor
cmp
ljmp
sbb
adc
por
sbb
lcall
mov
into
cmp
das
or
scas
push
pop
mov
sbb
xchg
pop
cltd
xchg
mov
cmpb
stc
leave
fimull
xchg
push
lcall
shrl
mov
push
cmpsl
out
pop
pop
push
jbe
push
bound
cmp
mov
push
xorl
xor
mov
lret
imul
mov
pop
addb
push
test
or
shll
int3
scas
sahf
cmp
shl
jo
push
push
insl
lds
or
sbb
test
jecxz
adc
and
mov
dec
dec
inc
dec
testl
and
and
dec
inc
and
popf
leave
mov
pop
jmp
mov
jo
outsb
dec
jne
pushf
cmp
scas
shll
stc
pop
and
sbb
pop
enter
ss
xchg
mov
movsb
dec
cmp
fcmovnb
push
gs
ret
mov
sbb
popf
fstps
mov
xchg
pop
int
ror
incl
ret
je
ret
xor
stos
rcr
in
lret
xor
cmpl
xchg
pop
add
jo
dec
dec
add
xchg
out
push
mov
mov
pop
push
jbe
jns
mov
icebp
popa
inc
dec
sbb
inc
and
mov
loop
fiadds
mov
addr16
pop
fcoms
sbb
rol
xor
jmp
stos
std
test
sub
rcrl
sbb
cmpsl
leave
xor
jmp
fcmovne
pop
rcll
hlt
out
and
cmp
xchg
cltd
and
and
hlt
pusha
add
cmp
daa
dec
iret
ljmp
pop
stos
addr16
jo
bound
cmp
lahf
and
negl
mov
mov
and
cltd
sbb
inc
mov
sub
cltd
xorl
shll
fdivl
in
sub
lock
mov
pop
push
add
push
pop
flds
pop
shl
push
stos
popa
mov
fldt
jge
in
xchg
cmpsl
pop
pop
dec
loope
mov
pushf
rorl
cmp
bound
es
mov
lcall
test
les
call
mov
sbb
push
es
ja
ljmp
mov
jo
xchg
fwait
mov
sbb
rclb
xchg
inc
dec
lcall
cmc
push
fiaddl
fldl
leave
mov
jbe
xchg
lret
jae
mov
xor
xor
rolb
and
xchg
sbb
mov
mov
mov
leave
les
and
cmpsb
jbe
test
addr16
jne
out
daa
adc
adc
push
or
fidivrs
test
jns
dec
addr16
sub
sub
lea
xor
lods
insb
jns
cmc
cwtl
int3
or
je
xchg
stos
int3
or
push
cltd
loopne
xor
ja
jmp
inc
shlb
out
dec
idivl
adc
xchg
pop
outsl
pop
roll
push
mov
sub
mov
in
jns
subb
jp
push
dec
stos
xchg
test
mov
dec
push
mov
mov
test
ret
xchg
shll
pop
mov
or
hlt
cmpsl
jmp
js
fs
or
pop
popa
out
add
inc
orb
fwait
cmp
lret
ljmp
adc
repz
jns
add
or
and
inc
gs
adc
scas
pop
jae
add
jmp
inc
mov
push
dec
jge
or
ja
mov
stc
addb
dec
push
sub
inc
jecxz
sbb
test
out
inc
mov
cs
sbb
add
add
stos
lods
xchg
adc
inc
movsl
sarb
inc
mov
sahf
shl
outsl
shll
daa
push
in
in
add
xlat
cmpsl
or
push
push
insb
popa
notb
pushf
and
mov
leave
hlt
sub
sbb
frstor
jbe
inc
pusha
mov
xchg
lret
loop
les
xchg
jl
adc
scas
jge
shlb
ds
dec
dec
popf
mov
ds
inc
in
test
fisubs
in
sbb
out
push
push
sahf
das
aas
xchg
imul
jmp
adc
movsl
jns
pop
mov
push
mov
dec
xor
or
xor
movsb
add
loopne
mov
stos
sub
rorl
das
lret
xchg
arpl
jns
ja
and
jb
ret
lds
adc
cltd
scas
pop
ljmp
xchg
xchg
mov
sbb
mov
das
fisubs
stos
nop
push
sarb
push
jae
pop
imul
lcall
push
bnd
in
or
dec
sarb
lock
scas
xchg
insl
adc
pop
mov
mov
and
jo
sub
into
sbb
pop
ds
shl
sbb
pop
stos
cmpsb
pop
daa
cmpsl
test
daa
scas
movsl
test
push
sbb
aad
xlat
or
xlat
push
sbb
movsb
jmp
or
fs
fcoml
mov
pop
pop
ret
jge
cmpsl
ja
fldt
insl
xchg
and
lds
dec
add
js
inc
fcmovb
dec
pop
rorb
ja
sub
xorb
xchg
jmp
inc
pop
data16
jae
dec
arpl
ja
mov
add
test
inc
and
aaa
push
jnp
mov
add
arpl
lret
loop
inc
movsb
leave
adc
inc
jae
ret
test
and
inc
fwait
movsl
loop
ss
test
xchg
xchg
and
movsl
mov
xor
sub
push
std
popl
mov
sahf
inc
aas
dec
dec
aas
cld
repz
sbb
out
cltd
cmpsb
imul
lock
push
icebp
test
cmp
loopne
fwait
testl
xchg
sbb
int3
repnz
lret
fcomps
neg
jecxz
mov
and
outsb
push
adc
insl
ss
mov
push
movsl
imul
sub
lret
mov
scas
stos
outsl
es
das
and
jmp
es
xor
jne
xor
addr16
jne
dec
xchg
scas
rcr
leave
popf
imul
xchg
cmp
pop
add
push
sub
nop
es
mov
dec
fsin
mov
ret
fsts
rcl
les
mov
sbb
mov
fwait
add
hlt
scas
gs
sub
pop
push
shlb
push
push
or
xchg
cmp
idivb
stos
in
push
addr16
mov
int
inc
dec
lahf
mov
dec
add
push
lds
sub
mov
xor
mov
movsb
push
pop
rclb
mov
add
sbb
daa
out
xchg
out
add
dec
cmpsl
das
fsubp
pop
fisttps
pushf
adc
call
cmp
jle
inc
adc
out
lea
test
xor
push
popa
lcall
rcrl
fwait
mov
fcmovnu
je
dec
inc
test
imul
xor
push
andb
leave
xchg
xchg
sbb
xchg
leave
loopne
sbb
pusha
push
ljmp
pop
ljmp
dec
or
nop
adc
sbb
test
mov
inc
lods
sbb
xchg
in
test
sub
push
ss
push
xchg
xchg
mov
pop
push
push
dec
jnp
std
jecxz
stos
in
add
adc
notb
int3
inc
dec
jmp
rorl
mov
mov
xchg
pop
mov
jno
lds
repnz
mov
outsb
stc
shr
push
les
mov
adc
adc
pop
cmp
ret
sub
dec
ss
adc
movsl
loop
mov
out
push
in
adc
je
jno
sub
es
out
xor
jo
jae
out
mov
loopne
fcoms
adc
loopne
arpl
push
pusha
xchg
ret
mov
mov
push
mov
das
sarb
xchg
push
inc
ljmp
dec
decl
cld
sub
adcl
jne
loopne
jg
mov
pushf
cmp
adc
push
test
or
jns
test
aas
cmp
shl
push
das
movsb
inc
scas
es
xor
sbb
ljmp
pop
adc
jbe
orl
dec
mov
adc
fwait
mov
inc
in
cmpsb
cmpsl
cs
mov
push
shll
xor
xchg
gs
loope
mov
shlb
inc
mov
mov
jnp
pusha
repnz
mov
loop
or
xor
or
fwait
das
ja
pop
mul
lea
fcoml
inc
mov
push
pop
push
flds
sbb
fstpt
pop
inc
jbe
leave
aaa
scas
push
xchg
arpl
inc
rorb
sbb
out
push
je
lret
add
mov
lods
test
xor
and
in
stos
mov
cmp
sub
fisttps
rcrl
mull
push
xor
movsl
jmp
and
dec
ret
jne
test
test
mov
out
mov
xchg
flds
aad
fsubrs
pop
shlb
sbb
sti
pop
ljmp
lods
ja
xor
push
les
ja
fwait
xchg
pop
xor
in
xchg
mov
jo
sbb
daa
inc
rcrl
ret
jns
cmp
push
cmp
fdivr
mov
or
neg
mov
insb
jnp
test
mov
out
pop
scas
loopne
in
cld
les
inc
out
out
dec
inc
adc
sbb
dec
pop
test
in
xor
cli
cmpsl
ds
fidivl
xor
nop
fisttps
test
sub
rcrb
repnz
dec
jle
mov
ds
xchg
push
jl
leave
movsb
cli
sbb
xchg
shrb
int
loopne
loope
mov
push
test
stos
and
or
icebp
adc
vpmacssdqh
jmp
movsl
cmc
pop
pop
lret
xchg
popa
xchg
outsl
rclb
outsl
ja
mov
xor
clc
inc
jmp
lcall
data16
or
aam
add
test
jns
mov
sbbl
orb
push
insl
mov
adc
mov
push
mov
sahf
in
pushf
mov
add
lods
pop
lea
stos
push
push
mov
bound
push
adc
xor
push
aad
jmp
movsl
pop
movl
adc
insl
scas
or
lods
and
xchg
loope
xor
into
fildll
and
cltd
pop
pusha
dec
popa
jge
mov
xchg
sub
ljmp
lcall
insl
fs
xor
outsl
pop
and
sub
sbb
insb
xchg
pop
and
adc
sbb
xor
dec
jge
mov
xor
stc
outsb
loopne
inc
lds
push
std
orl
data16
addr16
ss
cmp
mov
pop
js
xchg
iret
arpl
mov
push
xor
push
leave
add
je
add
cmpl
sub
lcall
adcl
jge
mov
inc
pop
pop
outsb
cmp
and
jae
imul
xchg
jg
mov
or
xchg
into
xchg
push
pop
cld
add
clc
push
into
lret
xchg
cmpsl
mov
in
pop
sbb
mov
repnz
dec
daa
dec
mov
sub
sbb
xchg
mov
mov
sub
jl
aam
ficoml
aam
loopne
and
inc
push
push
sub
cmc
jae
into
xchg
inc
mov
hlt
daa
push
push
aam
sub
jecxz
push
shlb
stos
and
dec
clc
imull
mov
leave
dec
push
sub
test
push
cmp
movsl
jb
ret
sbb
ror
aam
out
addr16
xor
in
hlt
movsb
es
es
std
shll
mov
ret
or
lret
incl
mov
dec
fadd
stos
outsb
rcrl
lock
inc
sub
jns
fiadds
scas
or
sub
fstpl
adc
mov
aas
add
and
bound
fucomip
push
pop
ss
pop
das
dec
inc
pop
pop
jle
lcall
push
mov
dec
out
mov
out
cmp
test
push
cs
mov
popf
pop
inc
into
xor
jp
mov
fbld
imul
or
lds
mov
jg
fcmove
mov
dec
dec
push
pusha
fidivrl
push
sub
xor
push
fsubrp
dec
inc
sub
fisubs
shl
mov
hlt
pop
pop
int
lret
jge
fs
nop
adc
pushf
dec
jmp
int3
ret
ja
das
shrb
insb
aaa
jo
int3
lds
out
xor
lret
push
inc
cli
and
sarb
adc
cmpsl
cmp
mov
xor
ja
xlat
sbbl
data16
mov
test
inc
jecxz
mov
adc
xor
and
out
scas
ja
fsubrs
mov
adc
xlat
add
lahf
mov
fdivs
loop
aam
mov
xchg
repz
jg
mov
jne,pn
arpl
xor
dec
jnp
leave
insb
mov
and
jnp
dec
aas
xlat
das
pusha
hlt
mov
mov
jl
repnz
and
add
push
bound
dec
and
mov
aam
paddusb
adcl
test
sbb
adc
ret
mov
iret
unpckhps
jle
mov
pushf
sbb
mov
jp
or
sub
popa
aaa
rcrl
repz
gs
popf
in
sbb
in
inc
adc
pop
sbb
pop
adc
lret
or
test
cmp
or
outsb
mov
in
movsb
test
pop
jne
adc
or
cld
ss
sbb
or
sti
xchg
push
sub
push
push
stos
ljmp
lock
jns
mov
add
ret
add
addl
xchg
sub
ljmp
repnz
push
scas
dec
jne
in
js
in
ds
mov
sbb
mov
push
jmp
in
mov
xorb
jecxz
pop
mov
in
sub
sti
push
mov
inc
dec
mov
insb
pop
xor
jns
jns
outsb
les
sbb
mov
mov
mov
inc
into
das
push
sub
jbe
pop
xchg
adc
lock
and
cmc
jae
and
push
in
jae
in
aad
lock
imul
insb
call
test
scas
push
jmp
mov
xor
cmp
iret
sarl
cmc
lods
andb
fcmovnu
sub
mov
pop
pop
hlt
jmp
cmp
sbb
pusha
bound
aas
xchg
dec
adc
lea
sub
adcb
in
push
cmp
in
jg
push
movsb
movsb
sbb
xchg
inc
push
push
fisttps
or
test
fldt
xor
aas
ret
sub
xor
push
stc
stc
and
push
pusha
hlt
icebp
push
and
sbb
pop
pop
dec
fs
cmp
js
push
push
das
daa
sub
push
xchg
inc
push
and
imul
out
shll
scas
xchg
mov
sub
daa
sub
cmp
sbb
xor
out
add
test
test
cmp
or
ljmp
aad
cmp
push
fisttps
add
sbb
cmpsb
lret
stc
gs
push
inc
jmp
push
add
aad
sub
push
rcl
inc
jne
jne
jb
sub
scas
ss
cmc
push
ficompl
push
je
fmul
ja
sbb
movsl
adc
or
jle
in
xchg
loope
mov
orb
inc
mov
mov
fistl
pop
mov
or
fs
mov
jne
xor
ret
and
out
xchg
mov
jp
int3
cmp
xchg
push
popf
cld
pop
arpl
mov
imul
aad
sub
sbb
int3
cmpsb
arpl
ja
js
push
dec
cmpsl
mov
ljmp
add
mov
in
fiaddl
das
push
imul
out
imul
mov
xor
cmp
sbb
xchg
hlt
xor
mov
adc
pop
testb
and
ja
in
imul
aas
sub
push
fstps
ds
jb
fs
pusha
adc
adc
or
and
test
mov
iret
pop
out
stos
hlt
xchg
adc
pop
scas
sub
push
mov
into
xor
fldcw
or
dec
test
and
jmp
repz
cli
adc
idiv
repz
pop
lea
jmp
cmp
or
adc
fs
outsb
repnz
ret
repz
arpl
inc
or
pop
mov
not
imull
orl
sub
jns
inc
inc
sub
and
pushf
mov
sub
pop
adc
push
pop
cld
mov
mov
daa
sbb
test
sub
adc
adc
fdivrs
jp
les
ja
adc
testl
rol
cltd
jmp
out
jmp
or
jns
out
dec
sbb
add
pushf
sbb
mov
das
push
inc
xor
fwait
into
hlt
fwait
add
or
mov
adc
xlat
dec
filds
fstps
shll
dec
rcrl
iret
lret
jno
sbb
add
xor
pop
roll
leave
dec
hlt
into
mov
gs
aas
jle
movsb
or
jns
add
pusha
or
outsb
xor
imul
mov
pop
std
jecxz
outsl
xor
jb
adc
jge
jmp
pop
jmp
dec
nop
sub
bound
out
mov
sahf
ret
test
xchg
dec
loopne
lsl
adc
fistl
movzbl
sbb
dec
pop
jns
jne
jge
inc
mov
sub
mov
sbb
mov
xchg
insl
mov
xchg
stc
scas
sbb
popa
xchg
lods
sbb
xchg
insl
xchg
jae
jmp
mov
and
xchg
clc
ret
rorl
cwtl
lods
pop
popa
jl
les
xchg
and
gs
mov
mulb
lcall
in
fidivs
mov
and
test
ja
bound
and
jb
sub
sbb
cltd
in
out
je
dec
repnz
mov
adc
movsl
cli
dec
push
jge
lahf
pop
adc
or
out
sbb
dec
push
movsb
fadds
into
jae
cli
neg
cmpsb
outsl
lcall
add
stos
cmp
das
cmc
test
lods
std
and
test
jbe
sbb
mov
cmp
scas
xlat
jle
test
xchg
push
sub
lret
cmp
insb
mov
mov
mov
jge
mov
jns
hlt
pushf
fcoml
popf
push
sbb
movsb
ljmp
repnz
fidivrs
push
bound
jge
pop
mov
aas
inc
or
jb
iret
std
lcall
or
jno
mov
jno
dec
inc
fidivs
dec
test
clc
int
and
or
sbb
cmpsb
fcmovnb
sar
mov
clc
sub
jle
sbbb
scas
clc
push
jo
test
sbb
aas
loope
divl
jno
dec
mov
ja
and
popa
into
mov
fucom
adc
mov
shl
xchg
lcall
mov
add
cmpsl
mov
daa
cmp
loopne
cs
lret
and
mov
adc
loopne
insl
fildll
inc
pop
push
sbb
mov
in
jl
divl
lds
mov
dec
cltd
sbb
sub
jae
std
mov
jbe
push
inc
aas
push
xor
subb
out
int3
cmp
adc
cmp
and
outsl
arpl
jmp
enter
xchg
push
xchg
insl
popa
aad
push
jg
lods
arpl
adc
push
mov
adc
dec
sub
js
add
pop
stos
inc
je
sbb
cs
sub
loopne
sub
dec
push
arpl
sub
popa
mov
adc
dec
mov
out
aas
pop
imul
ja
stc
ret
adc
adcb
mov
mov
fistpl
repnz
aas
fcmovb
arpl
or
add
orl
add
jnp
pusha
xor
cmpsl
jns
imul
push
lretw
jo
mov
xchg
add
dec
adc
call
xchg
fmull
lds
cs
or
orb
decl
ss
xchg
adc
cmp
mov
xchg
imul
add
dec
icebp
xor
stos
imul
je
pop
lods
mov
sarl
cmp
mov
or
sub
lahf
ret
jno
jmp
out
fsts
sub
xchg
js
push
out
jno
mov
mov
ss
mov
popf
cmpsb
fstl
mov
sbb
lret
push
dec
dec
sub
or
insl
into
loop
adcb
mov
sar
or
cli
mov
add
or
repnz
dec
jne
clc
add
add
mov
cmp
and
inc
mov
sbb
mov
inc
cmp
xchg
repz
inc
pop
fildll
dec
mov
mov
adc
out
push
dec
mov
sbb
mov
stc
cltd
lds
fld
push
rcll
inc
jge
bound
xor
push
mov
mov
and
shll
lea
push
mov
mov
into
inc
lret
fldcw
lea
sub
loop
pop
fisubs
pop
mov
mov
or
loope,pt
lcall
mov
stos
fwait
xor
xor
jbe
jg
cmpsb
cli
xchg
out
push
lock
xchg
scas
jecxz
enter
fwait
mov
ret
addb
sahf
sub
adc
inc
call
xchg
lods
dec
rolb
in
xchg
jge
pop
ret
sbb
pop
ss
adc
sbb
jle
mov
sbb
xchg
xor
test
enter
xchg
xor
bound
jne
je
xchg
cmc
int3
aas
add
movsl
and
mov
and
test
shl
stc
xchg
add
out
dec
lcall
daa
not
inc
aam
sbb
pop
jge
sbbl
loop
xor
std
mov
inc
inc
adc
les
pop
xchg
inc
lds
jae
lret
shlb
mov
mov
mov
loop
jno
int3
lcall
xchg
enter
fbstp
fsubrl
lock
xchg
cs
imul
or
cltd
das
sbb
xchg
repnz
xor
dec
add
xor
or
xor
daa
adc
das
inc
inc
adc
cmp
sub
scas
data16
dec
cltd
jg
xor
movl
rorl
jge
fwait
jb
std
pop
addb
ret
pop
push
push
stos
in
ret
mov
sub
pop
shl
mov
lret
cs
mulps
repnz
lret
lods
xchg
nop
ret
out
pop
push
pop
dec
test
xchg
jmp
mov
xchg
adc
movsb
std
or
push
add
adc
adc
sbb
sub
movsb
daa
bound
xchg
jae
test
sbb
pop
ja
pop
in
mov
mov
jno
outsl
pop
push
cmp
pushf
into
xchg
roll
cmp
loop
jle
ds
dec
xchg
pop
or
leave
out
les
sub
and
add
adc
aad
rcr
aaa
lods
ja
dec
stos
clc
jns
push
out
jae
gs
dec
jl
mov
fiaddl
push
ss
aaa
adc
and
and
or
gs
cmp
stos
adc
jae
ss
push
lods
cs
xor
adc
adc
mov
and
jae
mov
fistpll
push
inc
push
arpl
es
addb
ret
test
sub
xchg
mov
sti
sub
sbb
pop
pop
cmpsl
pop
lret
pusha
sub
jg
out
adc
inc
xchg
pop
je
lea
inc
fwait
pop
stos
sbb
add
popa
pop
in
jmp
mov
jle
lods
pusha
sbb
pusha
add
and
cmpsb
cmp
enter
inc
xchg
stos
xchg
add
insb
fnclex
jb
or
loopne
mov
loop
push
jl
xchg
push
aad
mov
or
adcb
clc
xchg
ljmp
mov
sti
jecxz
adc
xchg
jbe
mov
cmp
test
pop
repnz
cld
outsl
push
xor
stos
in
inc
sahf
in
cmp
rolb
pop
xchg
fldenv
in
xchg
mov
cmp
cmpsl
addr16
arpl
jo
pop
and
faddl
pop
xor
scas
imul
push
push
mov
mov
mov
or
insb
push
push
push
sarb
insl
pop
dec
stc
xchg
fmuls
mov
sub
jmp
in
cmpsb
rolb
cmp
lahf
imul
inc
pop
lods
pop
bound
jo
add
push
in
push
call
or
adc
in
fnsave
int3
test
push
xor
mov
mov
or
cmc
mov
insb
cli
xchg
and
cmp
adc
aam
lcall
add
fstl
sub
adc
clc
test
sbb
add
push
or
data16
aad
rcrb
jmp
lahf
sbb
jnp
xchg
pop
inc
movsl
push
xchg
gs
jnp
scas
mov
movsb
cwtl
je
test
rcll
popf
cmove
cmpsl
lcall
pop
fldt
mov
inc
popa
pop
cmp
mov
lahf
mov
mov
mov
scas
mov
shl
repnz
xor
pop
sub
pop
popa
xor
int3
orl
lods
fxam
xchg
in
das
xchg
xlat
pop
push
pop
cmc
sbb
lods
mul
fs
or
icebp
and
cmp
pop
inc
adc
jne
dec
xchg
cmp
or
repz
inc
je
das
mov
mov
in
xchg
dec
xor
push
push
je
dec
jp
int
mov
mov
cltd
bnd
and
imul
mov
testl
cmp
mov
repz
scas
leave
clc
lods
mov
leave
add
push
xchg
dec
jg
mov
and
jg
and
fldcw
sbb
cmp
sub
xchg
ret
bound
mov
mov
lods
call
jae
cmp
sub
gs
dec
lods
insl
lds
popf
jno
dec
ror
xchg
mov
push
int
jns
pop
and
pop
xchg
sub
fcoms
lret
pop
xchg
jbe
ljmp
cmpsl
orl
and
test
sbb
mov
adc
fstl
movb
push
cli
push
insl
cs
lock
test
jmp
lds
inc
add
imul
test
push
addr16
mov
and
fbld
or
in
xchg
add
xor
lods
adc
ljmp
pop
adc
aaa
xor
fldcw
das
testl
in
xchg
loop
or
adc
adc
pop
sub
js
movhps
mov
push
jo
jp
les
fwait
push
dec
lcall
and
xchg
mov
inc
shlb
jnp
repnz
mov
or
sbb
scas
adc
mov
sbb
popa
add
jb
mov
push
sahf
fsubrs
and
out
ror
xor
or
in
fs
jmp
jmp
push
inc
sub
insb
fdivl
mov
lock
shlb
fdivrs
jb
adc
pop
sbb
add
mov
xchg
dec
xor
test
jl
fstpl
sbb
push
jmp
call
sahf
jp
mov
ret
push
fstpl
imul
xor
aaa
test
repnz
inc
push
and
loopne
and
rorb
push
xchg
or
jno
outsl
cwtl
cmp
and
insb
cli
xchg
data16
fcoms
push
xchg
xor
popa
adc
inc
sarl
and
add
in
push
dec
and
cmp
icebp
xor
mov
test
xlat
or
add
in
xor
mov
xor
dec
add
aas
xor
sub
enter
adc
hlt
andl
insl
inc
jmp
fmul
push
movsb
cmp
sbb
dec
fsubrl
movl
mov
imul
add
jbe
sub
repz
in
cmp
sub
rcll
push
mov
pop
stos
insb
mov
fidivrl
fldt
out
imul
dec
aaa
shlb
jo
lahf
sub
ret
add
dec
js
rcrb
pop
xor
jecxz
xchg
popa
xchg
cli
inc
sbb
incl
pop
fnstcw
mov
sarl
and
inc
scas
pop
mov
ljmp
cmp
loope
clc
ficomps
into
lea
mov
sub
out
imul
insl
aas
js
and
inc
shl
inc
jns
shlb
cmpsb
aas
pop
jo
mov
pop
cltd
leave
movsb
insb
scas
push
stos
pop
rorl
push
and
fsubrl
pop
or
je
mov
cltd
call
int
out
cmp
out
or
fildl
and
add
iret
aad
lods
mov
ss
test
pop
fldenv
lods
mov
lock
fs
xchg
xor
xor
add
loop
and
bound
and
inc
mov
in
pop
add
cld
xor
push
repnz
insl
jmp
clc
jb
pop
and
dec
fs
add
add
pop
aad
push
repz
out
push
mov
pop
arpl
push
adc
sub
and
jne
xor
popa
pop
xchg
xor
xchg
call
ds
sarb
pop
and
in
lock
xchg
insb
popf
and
dec
incl
push
cwtl
enter
xchg
ss
xor
push
dec
ja
cmp
jne
lods
jecxz
adc
mov
arpl
icebp
lret
cmpl
xchg
ret
push
mov
push
sbb
mov
pop
in
dec
shll
push
sbb
xchg
stos
add
sub
subl
ja
outsb
mov
mov
std
cmpsl
mov
cmp
hlt
adc
loopne
rcl
xor
or
adc
pand
jb
pop
popf
int3
ljmp
call
mov
fcmovnb
ljmp
lods
dec
shlb
fimuls
lea
movsb
test
orb
notl
mov
xchg
hlt
enter
mov
sub
mov
fmull
dec
push
mov
mov
stos
sub
dec
pop
xor
das
sti
mov
xor
in
roll
mov
cmp
pop
arpl
mov
inc
fsts
repnz
repz
mov
iret
stos
lahf
shlb
mov
lahf
imul
push
cmp
adc
xchg
or
rolb
loopne
cltd
fisubl
andb
mov
jp
mov
mov
push
or
jno
test
jge
jae
fwait
in
fdivrp
insl
imul
test
mov
into
addb
adc
das
sbb
dec
push
mov
sbbb
inc
movsb
repnz
pop
inc
movsl
lock
jb
lods
xor
lods
stos
in
idiv
lock
sbb
test
push
pop
add
out
lahf
shlb
dec
rcl
inc
fdivrs
xor
cld
pop
inc
test
in
adc
add
testb
xor
xchg
stos
movl
cmp
sub
cmc
adc
lret
scas
roll
scas
imulb
push
ljmp
jo
daa
and
pusha
gs
scas
mov
pusha
popa
cmp
xchg
mov
mov
jge
clc
push
cmp
jo
jl
into
mov
mov
dec
mov
sub
mov
push
in
jge
outsl
push
add
push
add
jge
mov
fcomip
test
movsl
xchg
cltd
out
pop
int3
jmp
ret
xor
jecxz
push
aam
dec
sub
add
add
mov
mov
cli
dec
or
iret
insl
xor
pop
in
or
jo
mov
xchg
loop
dec
je
insb
ret
mov
mov
add
ret
stos
std
out
mov
mov
mov
test
test
xchg
adc
in
pop
xchg
clc
flds
hlt
daa
test
les
xlat
jle
stos
and
hlt
das
fs
and
mov
mov
adc
mov
mov
cmp
dec
push
adc
pusha
fstpl
mov
subb
or
and
mov
lret
inc
fiadds
and
push
call
sub
pushf
push
imul
std
iret
loop
sti
in
hlt
inc
jmp
js
push
cmp
dec
and
xor
pop
xchg
adc
jecxz
imul
and
add
lret
mov
loop
sbb
jb
out
sbb
inc
push
rclb
sti
popf
hlt
fdivrs
mov
ret
dec
cmp
out
xor
cmpsl
sub
mov
jl
mov
adcl
xchg
lods
ja
lods
jl
shl
xchg
ja
sti
out
clc
mov
xchg
movb
fistl
sbbb
rol
adc
negb
mov
repz
pop
insl
jae
sarb
movsl
xor
add
sahf
mov
ljmp
and
sarb
mov
dec
lret
and
jnp
nop
sub
sbb
adc
aad
pushf
bound
dec
cmp
dec
fisttpll
popf
int
cld
lcall
rcrl
cmp
pop
mov
jo
insl
adc
cmp
push
nop
mov
jae
push
jno
icebp
scas
xchg
jp
mov
inc
adc
cmp
fldcw
lods
insl
movb
xchg
in
out
arpl
cmp
xchg
repnz
fisttpll
cmc
mov
jb
cmp
push
daa
call
sar
movsl
xor
adc
fdivrs
ds
jg
pop
jmp
cltd
insb
adc
sbb
pop
dec
mov
out
xor
push
lods
mov
inc
pop
or
xchg
pop
or
push
lock
pop
mov
sub
mov
test
xchg
stos
nopl
sti
clc
ficoms
or
movl
test
dec
xchg
xchg
jecxz
pop
push
and
mov
xchg
fmuls
xchg
push
dec
or
inc
and
and
lcall
push
lcall
push
subl
cs
les
push
iret
aas
lea
push
loopne
popa
xchg
fsubrp
mov
in
enter
arpl
jae
repnz
pop
arpl
mov
push
mov
push
mov
cmpsb
adc
ja
fidivl
jmp
xor
mov
shrl
cmc
dec
cli
into
es
push
imul
sbb
pusha
cmp
push
adc
or
pop
push
fdivl
fidivrl
pop
dec
outsl
lea
xlat
mov
ljmp
aaa
imul
sbb
sbb
push
xchg
jle
lret
jbe
jne
loop
adcb
lcall
inc
adcb
jl
test
in
movsb
and
pop
mov
shlb
sub
insb
jle
sub
fdivr
out
xor
cmp
fidivl
loope
cmp
vmovd
aas
jo
les
arpl
push
lret
icebp
test
roll
push
push
push
sub
cmp
jns
ljmp
xchg
add
pushf
call
or
shl
sbb
gs
rcrl
add
cmp
pop
mov
in
adc
std
cmp
int
ss
sti
aam
je
mov
dec
mov
int
adc
int3
imul
mov
lcall
add
mov
mov
lock
mov
jne
cmp
pop
jno
xor
scas
jo
jecxz,pt
and
popa
push
mov
or
mov
or
stos
xchg
mov
adc
fildll
mov
mov
mov
pop
cs
jae
sarl
stos
push
cmc
in
inc
mov
fsubrs
inc
bound
push
jl
imul
xchg
sbb
hlt
bound
jno
andb
or
les
xchg
shrb
mov
aaa
jge
push
ret
xchg
cmp
or
scas
sbb
cwtl
pop
test
push
shr
mov
inc
mov
imul
fcomps
jmp
xor
out
pop
mov
call
adc
fildll
adc
dec
adc
pop
adc
dec
pop
insl
adc
addb
stos
or
pop
daa
sub
int
dec
orb
adc
pop
jbe
mov
data16
add
call
stos
pop
xchg
or
pop
or
lods
jno
push
and
and
jmp
out
hlt
or
rorb
mov
mov
mov
andb
test
push
pop
int3
js
imul
push
into
xor
jge
into
rorb
pop
pop
mov
xchg
cwtl
jge
daa
add
fs
stc
mov
inc
ds
dec
movsl
push
sahf
cmp
in
xchg
dec
xchg
jne
incb
lds
xchg
push
ja
xchg
imul
inc
sti
cwtl
add
push
cmp
call
or
shr
mov
insl
and
dec
adc
or
repz
jnp
dec
insl
mov
aam
adc
popl
pop
mov
inc
mov
into
push
xchg
mov
mov
in
lret
sbb
add
aad
push
lcall
cli
rcrb
jbe
sub
fnsave
xor
data16
ss
ficoml
data16
rcr
cmp
adc
sbb
std
adc
aam
sbbl
jmp
mov
bound
jb
jne
fisubrs
stos
cmp
lock
lods
bound
fcomps
insb
aad
xor
xchg
ss
mov
push
cmp
repnz
xor
iret
lret
sbbb
mov
sub
cmpsl
data16
jge
cmpsl
mov
repnz
icebp
mov
mov
sti
adc
mov
xchg
push
and
pushl
insl
mov
jl
adc
inc
xchg
or
rorb
movsb
mov
push
ljmp
mov
push
or
lcall
test
call
xchg
loopne
inc
aad
testl
adc
pop
pop
xchg
push
repnz
xor
add
mov
or
inc
lods
movsl
lds
imul
mov
lods
sub
in
lret
loop
ret
scas
cmp
or
xor
inc
fwait
sub
sub
and
or
xor
sub
xchg
jno
and
scas
add
cmc
out
lock
jp
leave
and
xchg
add
push
shl
shrl
call
fisubrs
jmp
sbb
mov
cwtl
aas
push
int3
lods
inc
and
sbb
xor
mov
cmp
mov
nop
adc
xor
fnstenv
xor
push
cmpl
mov
gs
dec
jb
and
pop
ret
aaa
test
xor
sbb
and
shl
icebp
add
pop
mov
ds
push
mov
and
cmp
fwait
lcall
adc
sti
jl
add
rcr
push
dec
push
or
rcrl
fadd
pop
push
and
int
xchg
ja
xchg
dec
dec
sub
lahf
lcall
pop
ds
sbb
pushf
cltd
or
cmp
add
fldl
xchg
cmp
ret
or
hlt
leave
std
adc
aam
xor
dec
cmpsl
pop
push
gs
inc
inc
sbb
mov
std
cwtl
xor
inc
xchg
sbb
or
mov
jmp
jbe
cld
lock
insl
jno
jnp
data16
insl
mov
pop
mov
std
pop
inc
xor
push
inc
shlb
mov
push
dec
cwtl
dec
inc
inc
sahf
sahf
jae
fst
xchg
xchg
popa
rolb
icebp
fidivrl
rcrl
std
movsb
mov
pop
scas
pop
mov
mov
in
into
and
xchg
fwait
mov
sub
sti
adc
imul
add
clc
jb,pt
jmp
outsl
test
repz
jmp
jo
dec
and
push
rcr
push
adc
lods
test
push
inc
incl
mov
mov
cmp
add
cmp
push
es
push
scas
scas
and
adc
sbb
xor
adcb
and
mov
aam
cmp
xor
dec
add
mov
xchg
cltd
out
dec
or
pop
xor
push
ss
xchg
sbb
scas
lods
adc
sti
ret
xlat
adc
sti
adc
cli
dec
push
xchg
mov
push
lds
test
ja
sti
and
pop
in
fidivrs
xchg
aad
adc
pop
dec
push
mov
out
orb
pop
ret
mov
movsb
mov
mov
das
scas
mov
leave
xchg
pop
shrb
mov
lea
test
das
into
push
ds
and
repz
and
scas
add
in
shl
inc
and
xlat
adc
sarb
pop
mov
jns
or
xlat
sbb
cmp
add
mov
jb
jb
xor
jecxz
sub
aaa
rcrb
jno
mov
fildll
ds
out
filds
jecxz
stos
mov
push
push
lds
push
loope
mov
data16
lcall
pushf
pushf
mov
fbstp
repz
mov
inc
icebp
fistpl
mov
push
cmpsl
sti
das
jns
xor
out
pop
adc
dec
mov
fistpll
lcallw
call
pop
add
ja
lahf
clc
push
fwait
adc
sti
mov
mov
scas
aad
sahf
lret
push
mov
xor
adc
add
out
mov
out
jns
nop
fsubs
mov
jb
call
outsl
call
shll
sub
sub
push
inc
xchg
dec
or
repnz
dec
or
jmp
jne
cwtl
mov
mov
subb
nop
in
lret
jecxz
pop
jmp
and
inc
pusha
and
xchg
xchg
idivb
or
xchg
dec
xchg
pop
inc
push
cmp
cmp
imul
adc
insl
ljmp
nop
push
repz
stc
cld
test
arpl
mov
hlt
pop
test
fisttps
push
fs
push
adc
nop
xchg
xlat
push
cmp
mov
sti
nop
fistpl
int
lock
or
bound
inc
addl
inc
push
mov
cmpsb
loope
inc
popa
mov
pop
or
mov
js
int3
insb
and
mov
loop
sub
outsb
pop
pop
sti
mov
insb
sbb
and
pop
mov
adc
and
and
sub
sti
lret
mov
add
mov
inc
sub
pop
out
jnp
aas
pop
cli
ja
inc
loope
dec
push
pop
cmp
or
pop
loope
movsb
shll
fimuls
xchg
ljmp
out
jne
jge
cmpl
dec
popf
nop
data16
aas
mov
cltd
or
inc
int
es
rorl
jae
add
fnstsw
lret
sbb
sub
push
cmp
test
sbb
add
xchg
cs
aad
out
std
ret
js
test
add
cmp
dec
insb
add
adc
insl
in
cltd
dec
push
mov
dec
and
jmp
adc
mov
inc
cld
repnz
scas
jbe
das
es
pushf
aas
lods
sbb
scas
bound
in
mov
stos
sbb
call
jns
pop
repnz
rorb
movl
fbstp
xor
pop
add
sar
repz
adc
loop
mov
mov
ss
add
cmp
movsb
xor
and
pushf
or
jle
test
lret
add
dec
jl
mov
pop
sub
and
sub
mov
cmp
push
fs
dec
les
popf
lcall
leave
and
outsl
inc
inc
sub
and
js
sbb
adc
push
inc
cltd
ficomps
shll
ja
lret
xchg
lret
call
insb
mov
dec
call
and
sbb
mov
xor
dec
sbb
sbb
stc
mov
xchg
xor
jo
js
and
icebp
sub
cmc
imul
sbb
ja
dec
test
decb
pop
jo
loopne
sub
jb
push
mov
rol
iret
movsb
inc
stc
add
and
inc
lret
xchg
mov
ja
pop
mov
cmp
loope
and
loop
in
negb
aas
mov
mov
imull
cwtl
adc
jl
fs
mov
pusha
clc
mov
scas
xchg
cltd
jle
loop
or
cwtl
cli
or
call
push
dec
movsl
ret
scas
fisttpl
pop
stos
inc
fstpt
scas
lods
insl
das
lahf
or
push
fisubrl
pop
pop
mov
cltd
imul
lcall
rclb
pushf
movlps
jo
add
enter
jge
push
push
push
mov
fimuls
ror
xchg
and
negl
aaa
gs
jae
mov
inc
mov
inc
imull
pop
lcall
add
dec
jne
xchg
lcall
jle
rcll
and
roll
in
sti
cmp
lods
add
lock
xchg
xor
mov
pop
dec
push
adc
scas
jle
push
test
mov
add
cld
pop
arpl
data16
scas
stc
mov
push
pop
or
scas
loopne
push
mov
lahf
or
movsl
xor
add
cltd
repz
lcall
sub
cmp
pop
fsubs
sub
jnp
and
sbb
cmpsl
cmp
stos
push
hlt
loopne
fbstp
inc
loope
nop
test
jmp
ljmp
mov
loopne
in
mov
bound
mov
cmp
stos
mov
jle
aad
mov
addb
lock
xchg
adc
movsl
jnp
out
or
cmpsb
xchg
ficoms
mov
dec
inc
cmp
jecxz
imul
iret
insl
sbb
fcomps
jl
cltd
mov
push
in
jg
fs
mov
and
xchg
lahf
notb
xchg
jmp
test
mov
scas
xor
push
loop
test
mov
out
ljmp
jle
or
cmp
add
addr16
lock
push
fsts
jo
fcoml
daa
jmp
movsb
add
fildl
adc
xor
mov
sbb
mov
fisubrs
push
adc
lret
mov
mov
lret
pop
insw
or
mov
push
adc
mov
xor
xchg
sarl
xchg
sub
dec
lock
and
cmp
jl
addb
inc
jno
iret
adcb
jno
fucomp
mov
inc
sahf
push
outsb
xlat
test
test
dec
jg
fs
xchg
dec
das
inc
fcoms
mov
push
stc
mov
mov
sbb
mov
adc
cmp
inc
scas
dec
cmp
cmpsl
fstp
pushf
leave
pop
xchg
lock
or
push
sbb
jnp
adc
cmc
jo
jmp
jmp
int
shr
aad
cmpsb
test
jno
in
add
add
imull
loopne
xlat
lcall
ja
push
cmp
sub
ss
adc
das
ret
jg
bswap
xlat
push
cli
shll
inc
add
insl
popf
ficompl
sti
fs
dec
mov
mov
push
std
mov
shlb
pop
jmp
xchg
mov
sbb
das
aaa
mov
in
sub
xor
addr16
scas
or
push
jae
mov
int3
popa
ja
jge
or
rcrl
repz
aas
test
dec
mov
repz
rcll
mov
lock
negl
repz
push
sbb
sahf
inc
icebp
mov
mov
or
and
xchg
addl
mov
cmp
pop
inc
push
dec
cmp
bound
call
sbb
jl
cli
cmp
sbb
cltd
jle
add
adc
jmp
imul
clc
sbb
adc
lahf
sub
push
dec
pop
sub
inc
mov
test
sbbb
dec
xchg
jo
dec
cmpsb
loope
dec
addl
or
shl
xchg
pop
cmp
out
das
inc
nop
adc
shl
add
mov
outsl
push
and
fcmovne
xchg
sub
jb
xchg
push
cmpsl
dec
mov
adc
xor
scas
and
mov
das
cmp
movntq
out
pop
or
jl
sbb
push
mov
push
insl
lds
imul
fimuls
mov
or
movsb
sbb
and
in
jnp
out
mov
mov
mov
mov
ja
enter
dec
xchg
xor
shlb
loop
and
jp
sub
in
mov
xchg
jmp
enter
pop
fsubl
lods
loopne
mov
loopne
orb
repz
and
push
test
jp
sti
adc
int3
pop
cmp
icebp
ret
dec
adc
je
mov
leave
imul
sbb
push
sbb
sahf
dec
out
add
xchg
push
mov
inc
cli
push
or
or
insb
push
lds
enterw
inc
mov
xchg
ljmp
sub
dec
inc
das
cmp
test
sub
adc
fidivs
mov
jmp
jns
dec
in
jle
pop
sahf
mov
xor
mov
mov
mov
inc
scas
out
mov
vorpd
adc
mov
jnp
or
mov
mov
in
xchg
decl
scas
inc
or
mov
add
pop
dec
aas
or
jge
or
xor
out
pop
loope
popl
dec
jo
shll
inc
adc
and
push
ja
jo
inc
outsb
push
imul
cli
add
cmp
loop
mov
add
add
jo
mov
ljmp
jo
jle
nop
sti
call
sahf
mov
lahf
loopne
or
rolb
jle
or
call
jmp
xchg
add
xor
test
clc
sub
les
rorb
frstor
jle
adc
mov
push
mov
in
in
movl
shlb
ja
xor
mov
pop
es
mov
shr
lds
lods
push
aaa
popa
sbb
dec
pop
popf
adc
movsl
fucomi
adc
dec
push
adc
or
add
sbb
arpl
sub
push
cld
faddl
mov
sub
ror
inc
lea
repnz
int
popa
or
lock
jl
dec
lds
rclb
adc
inc
mov
outsb
mov
add
les
cmp
jnp
push
shl
rep
fisubrs
in
movsl
inc
repz
mov
mov
inc
aad
push
rorl
and
in
je
outsl
add
imul
adc
sbb
stos
leave
add
jbe
out
dec
jmp
loope
mov
pop
mov
mov
dec
pop
cmp
lret
stc
xchg
das
cmc
lds
addl
add
push
mov
out
fdiv
cmp
in
mov
in
aas
jns
scas
cmc
inc
jp
mov
loope
inc
mov
insb
xchg
rorl
outsl
cmp
xor
por
add
mov
cmc
push
sbb
outsl
lcall
push
in
sub
pop
lret
jo
xor
out
lahf
insb
enter
xchg
mov
popa
fildl
xchg
test
cld
lds
push
aad
pop
popa
mov
jmp
xlat
xor
push
cmp
adc
add
js
mov
sarl
mov
xchg
fistpl
in
scas
clc
xlat
js
adc
mov
dec
in
int3
stos
add
repz
xorl
in
cli
mov
sbb
data16
hlt
mov
push
jge
push
xchg
jecxz
and
dec
icebp
mov
icebp
jb
add
bound
push
in
clc
std
ds
in
add
fiadds
arpl
inc
mov
es
cwtl
ds
call
lods
rcll
sub
push
leave
cmc
cmp
push
adc
clc
shrb
xchg
lds
inc
mov
pop
repz
push
jae
xchg
cmpsb
xor
sub
sub
dec
push
aaa
insl
jl
push
addr16
adc
jmp
and
adc
insb
cld
inc
mov
xor
shr
orb
push
xchg
inc
dec
daa
pop
pushf
test
mov
dec
add
add
mov
xchg
movsl
nop
pop
jne
shl
jb
enter
popf
add
dec
loop
int3
clc
jae
jle
popa
lret
xor
mov
lods
shll
jbe
mov
ds
add
xor
mov
dec
push
movsl
les
into
repz
jbe
clc
enter
push
test
imul
xchg
lea
arpl
fs
dec
push
fildll
xor
add
inc
aam
xchg
pop
xor
ja
rorl
ss
fadd
loope
popa
add
push
call
cs
int3
lret
xor
aaa
ficomps
test
xchg
cmp
cmp
mov
dec
in
jecxz
movb
std
sbb
shl
stos
push
test
mov
and
hlt
or
cmp
mov
cmp
cmp
or
mov
lds
fcompl
cmpl
sbb
push
mov
test
jns
fcmovnbe
imull
mov
adc
nop
outsl
cmp
out
add
or
adc
sub
stos
or
mov
cli
test
and
cli
jecxz
mov
xchg
mov
cmc
add
test
inc
adc
push
loopne
adc
icebp
sbb
pop
or
in
mov
jle
clc
xor
dec
call
add
jb
andb
sbb
pusha
or
xor
pop
mov
mov
mov
aas
mov
iret
std
inc
pop
and
test
push
jp
pushf
int
push
cmp
push
arpl
mov
adc
mov
test
cltd
xor
jb
push
add
fcom
and
stos
out
mov
out
cmp
mov
outsb
mov
xchg
dec
cmp
or
pop
sbb
xor
jno
clc
xor
push
add
pop
fcoml
push
mov
dec
pop
cli
sbb
dec
push
test
je
xor
jle
sub
mov
jb
mov
divb
or
and
adc
iret
lea
outsb
seto
popl
mov
repnz
ret
jg
add
int3
dec
sbb
test
cs
shlb
xchg
stos
lods
cmp
and
add
arpl
jg
sub
cmp
add
pop
ficompl
xchg
ja
aaa
addl
nop
and
nop
cltd
add
pushf
movups
pop
mov
leave
mov
dec
les
sub
fdivr
mov
push
or
xor
repnz
insl
add
xchg
les
push
mov
lods
jno
int
mov
xchg
or
cmpsb
xchg
movsb
sub
push
or
incl
cmp
mov
sbb
xchg
iret
dec
mov
rorl
push
jb
enter
adc
inc
movsl
fldenv
pop
mov
xor
pop
sti
xor
ss
dec
subl
cld
aas
outsb
cmp
xor
push
add
push
jae
stc
lock
arpl
sbb
mov
pop
pop
lock
xor
add
push
mov
sub
push
jp
mov
out
cltd
ret
xchg
inc
dec
or
stos
fistpl
mul
int
rcrb
sbb
pushf
pop
jo
subb
mov
cmp
outsl
lock
sbb
inc
mov
popf
cmp
xor
xor
scas
jnp
and
push
xchg
jo
lock
mov
jge
fisubrs
pusha
addr16
es
cmpsl
hlt
dec
and
dec
fimuls
int3
mov
xchg
pop
cmp
xchg
mov
push
pushf
xor
add
in
cs
or
dec
in
pushf
sbb
das
xchg
insb
inc
js
loope
mov
xchg
dec
mov
mov
js
xor
inc
sbb
pop
push
pcmpgtb
cmpl
stc
ja
ds
and
cmp
add
inc
addb
xchg
imul
aas
into
outsl
and
xchg
pop
xchg
fldcw
das
stos
or
xchg
and
sbb
jp
pop
ret
xor
das
xchg
or
dec
fstps
xchg
or
decl
cmpsl
int3
adc
rorl
ja
add
push
lcall
loope
lahf
inc
sub
dec
xchg
sub
mov
cmp
or
ss
mov
xor
ss
adc
mov
loope
les
mov
jp
pop
adc
into
jae
cmpsl
inc
icebp
pop
push
ljmp
and
mov
jg
sub
bswap
and
fisubrs
cmp
sbb
bndstx
test
sbb
lahf
xchg
or
sub
movsl
repz
dec
pop
xor
les
pusha
add
jmp
add
inc
dec
sbb
push
test
jo
mov
sbb
mov
in
mov
xor
mov
adc
in
lret
dec
cld
jne
icebp
add
sub
or
mov
std
mov
add
les
cli
ljmp
jg
stos
push
jg
ljmp
pop
sbb
push
loope
sub
outsb
repz
enter
sbb
idivl
nop
cli
mov
xchg
mov
xor
pop
xchg
dec
or
or
ljmp
leave
pop
ret
cmp
push
clc
xchg
inc
jecxz
cld
mov
leave
mov
lcall
pop
in
mov
test
pop
mov
int3
popa
lcall
mov
test
jns
and
cmc
incl
fwait
xchg
push
addl
data16
mov
inc
daa
push
arpl
fisttpl
repnz
test
push
inc
shl
pop
xchg
mov
sbb
xchg
pop
or
test
negb
fadd
mov
out
rep
bound
pusha
shll
and
das
daa
jbe
stos
stos
movsl
andb
cmpsl
insb
in
jno
mov
bound
sbb
lret
sub
mov
cli
rcrb
mov
inc
xor
jp
or
inc
inc
in
out
iret
cmpsl
in
pop
mov
xor
loope
out
nop
daa
ss
shlb
add
es
mov
or
adc
fcomps
mov
dec
xor
ljmp
ret
mov
fistl
xchg
inc
repz
in
aas
psubsw
xchg
mov
nop
fldenv
xchg
popf
sbb
add
sub
pushf
inc
movsb
ss
pusha
dec
or
inc
je
lods
cmpsb
xor
xor
mov
pop
out
xchg
mov
idivb
je
movsl
ljmp
adc
mov
incb
cmp
mov
test
loop
je
adc
stos
aas
clc
cmpsb
mov
ret
loope
jl
mov
leave
cmp
jg
adc
add
mov
xor
aad
or
dec
push
mov
fcoms
inc
lahf
fisubrs
test
xor
push
push
add
and
inc
addr16
jg
pop
shll
lret
xor
jmp
leave
inc
pop
fsubs
in
sub
jno
sahf
mov
movsb
fs
sub
lods
add
pop
sbb
jp
and
in
add
hlt
orb
dec
out
or
jmp
sub
sbb
es
lods
scas
add
sbb
inc
fnstcw
sbb
mov
lods
cmp
fdivr
cli
xchg
out
je
mov
push
push
cli
mov
pusha
pop
jmp
mov
fcompp
cmp
repnz
mov
jmp
ds
cld
inc
int
jbe
and
xchg
aad
or
lcall
push
sub
popa
mov
xorl
add
sar
hlt
xchg
stos
push
jmp
inc
int3
loop
stos
insl
loope
insb
jbe
mov
sbb
xor
inc
faddl
push
nop
push
rcr
sub
in
repnz
notb
mov
cmp
mov
inc
jb
cmp
aam
mov
mov
test
icebp
mov
xchg
pop
addb
xor
adc
aas
and
mov
xchg
push
and
addb
mov
fwait
daa
stos
jl
ds
outsb
jb
xchg
aas
iret
sub
mov
lock
pushf
sbb
inc
insb
mov
mov
idivl
shl
adc
and
ficompl
xchg
out
out
sbb
test
adc
js
call
push
jmp
outsb
mov
cmc
imul
cmp
outsb
in
ret
femms
mov
jle
fdivs
ds
ja
dec
push
or
loop
shlb
popf
mov
es
jbe
pop
push
push
movsl
mov
dec
xor
and
js
push
mov
in
jns
adc
mov
push
pushf
xchg
xor
roll
clc
imul
fistl
neg
pop
jnp
fistps
ja
sbb
mov
test
imul
pop
aad
adc
jl
and
cmp
jno
inc
divl
push
inc
fwait
and
mov
xchg
mov
stc
imulb
bound
in
dec
jbe
lea
inc
mov
andl
push
mov
gs
jne
fs
xorb
xor
rcll
dec
mov
push
mov
gs
mov
lret
dec
shr
hlt
aam
or
out
int3
scas
inc
mov
or
aam
rep
sbb
mov
icebp
push
mov
xchg
es
jmp
sarl
jmp
or
and
sbb
test
shl
pop
xor
fistps
dec
pop
inc
push
mov
movsl
bound
inc
cld
add
or
movsb
lds
imul
rcrl
out
sti
sbb
jnp
std
mov
ret
fs
bts
shrb
mov
js
incb
push
in
fsubr
add
rcll
lahf
sbb
pop
aaa
mov
test
jno
jmp
mov
mov
data16
dec
ljmp
or
fs
inc
inc
inc
push
jl
inc
stc
loopne
add
push
nop
les
mov
dec
mov
inc
and
or
mov
ficoml
inc
ficoml
mov
mov
mov
xchg
jecxz
push
pop
sti
and
fnstenv
mov
loope
rorb
and
mov
mov
jne
or
mov
sub
call
cli
mov
mov
jmp
adc
ds
and
mov
das
or
call
ja
xchg
nop
lahf
xor
xchg
sub
arpl
sahf
addb
test
dec
push
out
and
fs
mov
aam
mov
push
pop
inc
jbe
mov
fabs
or
and
dec
jnp
mov
jbe
sub
adc
sbb
mov
mov
cwtl
sub
jecxz
nop
push
dec
movsl
push
aam
xorb
adc
jl
sub
xchg
push
pushf
sbb
adc
and
jg
sub
mov
pop
cmp
jns
and
mov
cmp
mov
add
mov
aaa
push
jbe
inc
lock
daa
pop
lods
mov
jbe
imul
cld
imul
call
jne
imul
or
jne
push
lea
adc
pop
dec
xacquire
xorl
sbb
push
push
inc
arpl
mov
mov
jno
in
add
mov
outsl
test
dec
mov
mov
and
xorb
fwait
cmp
xchg
mov
cmp
insb
cmp
mov
adc
mov
mov
cmp
xchg
fnsetpm(287
out
addr16
cmp
psubb
mov
mov
loope
insb
lret
or
sub
or
sbb
adc
cmp
pop
push
clc
xor
in
sbb
mov
pop
dec
ljmp
loop
ret
xorl
xchg
add
xchg
mov
add
xor
ljmp
jae
push
bound
stos
test
scas
out
shl
add
ja
mov
sbb
in
xor
lahf
pop
jno
lret
add
stos
lods
lret
pop
sub
into
push
ljmp
sbb
and
pop
adc
and
sub
mov
jmp
sbb
dec
es
xchg
sub
js
xchg
cmp
mov
cmp
and
movsl
or
add
mov
xor
icebp
stos
dec
xchg
add
bound
mov
rcr
sbb
push
and
push
decb
push
mov
mov
addr16
clc
xchg
movsb
arpl
adc
out
movsb
adc
xor
mov
dec
mov
scas
sub
js
inc
xchg
push
jecxz
cld
sbb
mov
into
xchg
cmp
pop
mov
scas
and
inc
arpl
lahf
add
or
stos
mov
xchg
sbb
fbstp
or
loop
sub
add
adc
das
loope
dec
je
dec
test
imul
mov
and
adc
adc
push
xchg
test
sub
dec
mov
push
push
loopne
xchg
dec
inc
pop
in
out
std
or
in
add
jmp
push
xchg
pop
cmp
or
pop
leave
sub
mov
dec
ja
aad
and
es
rolb
imul
aam
cmc
xchg
das
lret
or
jg
xchg
jge
adc
ffree
mov
fs
cwtl
or
xor
stc
aad
xor
es
and
pop
pop
jmp
nop
into
jg
fwait
outsl
idiv
or
decb
xchg
mov
das
or
mov
pusha
jb
data16
and
inc
test
pusha
cmpsl
push
push
lret
jne
mov
mov
ud1
pop
cmpb
mov
cmp
inc
pusha
jnp
data16
lock
arpl
xor
lds
or
push
xor
xchg
aaa
inc
stc
xor
loop
pusha
mov
jg
and
hlt
into
stos
sub
adc
mov
jmp
xor
pop
jae
inc
sti
outsl
rol
push
movsb
fwait
icebp
mov
popf
adc
jo
adc
es
push
cwtl
mov
mov
mov
insb
jae
sub
mov
popf
or
xor
test
dec
cmp
shll
mov
aad
movhps
jp
daa
imul
push
fs
sub
ljmp
push
decb
dec
mov
jl
call
js
xchg
ja
cmp
test
adcl
pop
ret
and
xchg
test
scas
mov
push
scas
insb
test
ss
stc
aaa
ret
cmpsb
stos
data16
xchg
push
ret
xchg
xchg
rcrb
lret
in
mov
cmp
xor
push
sbb
push
add
dec
push
loop
neg
xchg
mov
xchg
loope
mov
jbe
cmp
or
xchg
mov
dec
mov
ret
pop
sub
push
es
aam
stos
mov
sbb
pusha
popf
push
cmp
or
pop
jle
mov
cmpxchg
hlt
xor
push
lahf
pop
and
rcr
or
sbbl
and
mov
repnz
fsubs
push
inc
inc
cwtl
mov
insb
out
cmp
xor
add
sub
sbb
jg
fsubl
mov
jne
iret
lret
test
xlat
aam
sub
xchg
dec
pop
call
test
cld
repnz
aam
fcoms
dec
pop
sub
add
xchg
dec
ret
nop
jmp
jge
push
loopne
jo
mov
jb
das
cmp
or
dec
repz
sbb
dec
pop
xor
jo
jb
notb
add
ss
adc
gs
inc
push
jle
mov
scas
hlt
movsl
cmp
outsb
inc
sbb
mov
adc
xor
jmp
xchg
movsl
jns
mov
fdiv
add
mov
sar
fadd
mov
mov
int3
popl
js
or
sbb
xor
inc
xor
cmp
and
stc
inc
xor
jne
mov
ja
leave
add
cmpsl
jl
sub
je
or
mov
push
jae
stc
and
mov
in
add
mov
hlt
mov
jb
xchg
mov
loop
inc
sub
adc
jno
lods
push
dec
xor
out
mov
testl
stos
test
push
mov
mov
pop
sbb
xor
push
nop
enter
dec
addr16
pop
dec
data16
mov
push
dec
mov
aad
sbb
aaa
cmpsb
nop
rclb
cmp
pop
shll
movsl
fs
lcall
out
enter
pop
pop
sub
pop
loope
xchg
push
pop
ss
int
xchg
fstpl
push
and
xchg
dec
add
cmp
push
mov
dec
testl
flds
push
mov
mov
mov
sbb
mov
push
into
rol
hlt
fisubs
lahf
je
mov
mov
jmp
mov
mov
xchg
push
popa
or
cwtl
jle
lock
icebp
cmp
dec
mov
je
cmc
imul
jno
xor
lds
ja
popa
mov
aas
movsb
dec
movsb
iret
pusha
push
mov
cltd
icebp
cs
mov
and
je
pop
and
sbb
rcl
sbb
dec
bound
pop
xchg
inc
dec
pop
push
ffree
arpl
inc
pushf
ficoms
push
xchg
imul
or
mov
popf
repnz
addr16
cltd
rorb
outsl
adc
xchg
adc
fstps
pop
inc
mov
iret
sub
leave
pop
add
jmp
and
adc
xchg
push
pusha
loopne
cwtl
ljmp
or
adc
lods
jle
imul
xchg
cmovs
test
fists
mov
xor
sub
xor
sub
push
pop
ret
mov
and
sbb
and
xor
std
pop
in
mov
rol
pop
mov
add
insb
cmp
mov
jge
adc
sbb
dec
fsts
mov
inc
shrb
pop
jb
ret
adc
xor
cmp
int
or
mov
jne
mov
mov
cs
push
and
pop
push
mov
inc
adc
into
movsl
jne
mov
sti
adc
insl
cli
daa
pushf
ror
sub
push
sbbb
fsubrp
or
inc
pop
adc
jp
push
in
push
cmp
daa
popf
jmp
arpl
mov
jnp
push
sbb
aam
and
mov
movb
sbb
scas
mov
repnz
dec
ljmp
std
inc
pusha
adc
mov
sbb
divl
cmpsb
in
je
sub
into
loope
imul
jecxz
lods
bnd
xchg
inc
push
lea
or
aas
sub
hlt
adc
inc
or
add
movsb
stos
adc
mov
lret
xor
pop
jnp
pop
cmp
cmp
addr16
jmp
pop
aam
dec
mov
mov
push
loop
stos
jns
sub
scas
push
add
hlt
ds
movsl
pop
in
cli
and
hlt
mov
jae
bnd
push
int
lcall
mov
lods
pop
in
pushf
insb
outsl
cltd
cld
mov
jle
in
in
mov
inc
adc
int
and
insb
pop
push
push
cwtl
fdivrs
or
push
adc
sbb
dec
xor
stc
and
xchg
int3
pop
mov
push
pusha
lods
and
roll
and
mov
sbb
mov
std
push
pop
dec
mov
xlat
lds
lea
aas
lret
ss
or
mov
dec
hlt
mov
js
and
sub
pusha
jle
cmp
outsb
sub
insl
pop
fisttpl
cmp
mov
sub
negb
call
test
cmp
mov
pop
or
xor
mov
dec
test
fmuls
cmpsl
push
scas
jo
mov
inc
mov
data16
mov
sub
dec
pusha
add
loop
adc
add
mov
add
emms
pop
xchg
dec
sti
data16
out
jg
out
sbb
cmp
ficompl
leave
and
popa
mov
sbb
neg
dec
addr16
jmp
daa
in
jecxz
nop
dec
xor
stc
jg
and
cmp
test
neg
ror
repnz
das
pop
arpl
cltd
dec
jae
popf
shrl
prefetch
lahf
je
stos
cmp
hlt
test
stos
fistpl
aaa
out
outsl
cmp
inc
aam
inc
loope
push
cmpsb
sarl
pop
rclb
ss
cmp
add
xor
inc
cld
push
push
in
aaa
pop
jp
inc
or
add
add
out
push
std
cmp
ror
pop
lods
jae
jmp
das
in
mov
in
pusha
add
sbb
in
sub
scas
push
in
iret
arpl
pushf
in
xor
loop
and
icebp
push
loopne
xchg
test
sbb
pop
imul
jns
adc
loop
scas
jg
int
mov
xor
xchg
js
xchg
pop
inc
sbb
sbb
jge
repnz
enter
xor
xchg
xchg
fdivs
xchg
dec
sbb
fstl
je
mov
dec
sbb
sbbl
ljmp
push
loop
insb
pop
enter
xlat
fs
movsb
xor
adc
mov
mov
push
add
repnz
nop
cmp
mov
adc
sub
pop
daa
push
add
mov
andl
xor
push
or
push
adc
xchg
push
movsl
jg
imul
cmpsl
sti
fiadds
push
add
cwtl
mov
out
cmp
shll
nop
or
xchg
popf
jb
repz
and
cmp
lahf
cmp
movsl
iret
mov
cmp
mov
jnp
mov
fs
and
dec
jmp
inc
or
lea
cmp
je
cmpsb
mov
push
jl
push
adc
mov
inc
adc
xor
cmp
or
outsb
imul
test
pop
pop
sarl
in
cmp
and
or
push
dec
jbe
or
loope
or
fistl
cmp
dec
push
rolb
push
imul
aam
ret
int
xchg
jne
add
mov
repnz
xchg
test
push
bound
cltd
mov
adc
cmp
push
ds
adc
cmc
pop
arpl
aaa
xor
mov
inc
sbb
leave
lret
cmpsb
sbb
sar
pop
lret
inc
jo
into
mov
sbb
inc
xor
sbb
and
jmp
daa
mov
xchg
pop
mov
pop
stos
popa
lret
mov
add
xchg
popf
test
mov
aam
nop
loop
jp
out
mov
dec
inc
testb
pop
movsb
subl
stos
ljmp
push
inc
jo
xchg
or
fmul
push
insl
and
ret
mov
or
adc
cmpsb
pop
push
dec
cltd
adc
popa
xor
mov
sub
leave
test
repnz
jmp
bound
push
sub
jle
dec
add
sub
loope
lods
scas
aad
jl
inc
mov
xor
sbb
push
int
or
ljmp
cli
jle
ficoml
into
mov
ja
inc
pop
mov
je
sub
mov
pop
jle
out
cmp
or
nop
push
jne
out
mov
adc
imul
fwait
sbb
out
pop
enter
xchg
imul
mov
imul
cmp
inc
pushf
inc
lret
js
sub
and
xchg
pop
xchg
testb
insl
mov
sbb
xor
cmp
leave
push
add
dec
arpl
imulb
iret
jecxz
fmuls
outsb
aad
arpl
out
movb
test
out
cmp
jne
andb
loope
jg
inc
pop
push
mov
shll
cmc
shll
addl
lds
jne
mulb
lcall
stc
push
push
out
outsb
mov
stos
ljmp
and
cmc
test
push
lcall
imul
loope
adcb
adc
in
ljmp
cwtl
push
dec
cltd
add
loope
movsl
cmp
ficompl
sbb
push
jne
mov
gs
mov
sbb
scas
adc
xor
in
int3
jno
xchg
mov
scas
movsb
push
adc
push
mov
push
xchg
jg
flds
fisubrl
popa
xor
pop
xchg
dec
enter
test
mov
cli
fs
hlt
inc
cmp
ljmp
push
xchg
pushf
std
lock
mov
push
cmp
jbe
xor
mov
orl
sub
popf
stc
jne
or
xorl
mov
add
cltd
aam
loope
popf
lea
jmp
xchg
or
pop
mov
sbb
lret
xor
jp
fildl
mov
andl
mov
cld
mov
adc
adc
stos
insl
jle
lods
push
mov
mov
sub
in
out
into
pop
inc
dec
mov
divl
cltd
andl
adc
push
xchg
ret
in
stc
lea
popa
pop
lods
xchg
dec
dec
nop
in
pop
xchg
jo
sub
lret
out
sti
cmpsb
push
enter
cmp
int3
or
dec
cmpsl
aam
xor
mov
call
push
xchg
jbe
jecxz
cwtl
in
hlt
cmp
and
ret
in
sbb
ljmp
ror
mov
imul
push
mov
jns
or
das
mov
movb
aam
xchg
cld
repz
clc
pop
stos
popa
push
add
stos
lret
mov
arpl
fbld
pop
sub
and
jp
lret
xchg
push
ss
clc
shrl
or
mov
iret
fldl
xchg
dec
xchg
pop
mov
xlat
pop
or
mov
adc
lea
xor
das
dec
scas
pop
sbb
rcrl
jae
mov
mov
mov
lret
or
xchg
push
dec
fmul
jo
jmp
bound
mov
js
rcrl
cltd
aas
cmp
sub
mov
or
loope
mov
cltd
dec
fnstsw
scas
fisttpl
push
jl
ret
dec
cmp
popf
sub
pop
ret
mov
test
adc
aas
inc
mov
test
outsb
xchg
nop
insb
loopne
das
sbb
cmp
sbb
adc
xchg
mov
xlat
mov
loope
insb
push
mov
inc
or
ret
dec
repnz
les
int
push
cmpsl
cmc
push
inc
xchg
mov
int
add
mov
and
gs
xchg
testb
mov
ja
mov
xchg
mov
inc
daa
ret
jg
sub
adc
jb
cmc
scas
or
add
in
leave
xchg
pop
dec
adc
int3
push
xor
subb
push
jge
or
mov
cltd
gs
aad
or
jns
rolb
jg
out
xchg
test
push
ss
add
mov
push
pop
adc
test
mov
mov
push
push
pusha
into
mov
dec
xchg
xchg
in
sti
push
sbb
loope
out
pop
mov
inc
and
push
xchg
sti
cmp
fcom
into
insl
adc
xor
dec
scas
adc
adc
cmp
lods
test
mov
sub
out
dec
push
pop
flds
jb
push
fdivrl
in
repz
xchg
aaa
xor
les
into
scas
push
and
enter
ja
mov
stos
and
inc
shrb
repz
dec
stc
ljmp
leave
sbb
mov
inc
dec
sub
mov
and
xchg
loop
insl
outsb
movsb
or
imul
in
loopne
adc
mov
add
dec
push
pop
lds
add
or
aaa
push
js
and
lock
sub
mov
jg
test
out
mov
adc
push
fdivrl
std
enter
and
loopne
call
insl
ja
sub
adc
jge
mov
imul
insl
mov
xchg
mov
repz
out
fdiv
jge
jmp
push
push
mov
das
test
insb
scas
dec
lock
xchg
mov
leavew
sbb
dec
inc
cmovl
jb
fdivrl
insb
or
xor
loopne
cmp
in
mov
sub
mov
cs
xlat
orb
xor
mov
repz
clc
les
ficomps
and
jmp
shrl
mov
lods
test
cli
jle
inc
push
repz
mov
mov
push
inc
mov
add
push
mov
loopne,pn
jp
fsubrs
fs
cmpsl
insl
icebp
mov
out
movsl
cld
inc
sub
mov
iret
loop
rolb
xor
mov
pop
mov
ljmp
insb
lret
scas
mov
int3
stos
and
add
inc
sbb
aam
add
mov
pop
cmp
mov
movsl
jg
and
sbb
cmpsb
mov
outsb
hlt
xor
int
cli
push
dec
ss
cmp
mov
mov
loope
mov
inc
daa
sahf
push
ficompl
leave
repz
test
cmc
mov
inc
popa
call
xchg
call
shl
test
xchg
pop
popa
xor
stos
adc
push
jl
jecxz
xor
push
cmp
ret
jno
push
rcll
testb
mov
xchg
jp
sub
adc
out
push
inc
xlat
mov
inc
adc
negl
sbb
icebp
pop
lea
stos
stos
xor
push
mov
dec
inc
xchg
scas
fwait
in
cmp
push
sub
adc
mov
mov
push
push
in
mov
mov
pop
sub
or
pop
mov
mov
xchg
mov
fimuls
je
and
imul
sbbl
lahf
inc
js
add
or
stos
test
aaa
sub
mov
scas
stos
push
push
inc
mov
lock
push
lds
cmp
cmpsl
jbe
popl
lock
leave
ret
pop
pop
test
dec
mov
addb
jb
mov
leave
or
sub
lret
and
adc
add
push
gs
lock
inc
jle
aas
lahf
int3
sub
sub
ds
mov
push
mov
push
adc
or
xorl
jecxz
mov
cltd
push
jo
add
nop
lods
aaa
lcall
jae
pop
je
xchg
faddp
jmp
pop
scas
dec
ljmp
pop
scas
jle
or
cmp
js
fistl
inc
cmp
icebp
cs
scas
xchg
jmp
dec
sub
push
incl
dec
xor
lds
xor
fisttpl
gs
shrb
pop
xor
jo
add
pop
mov
sbb
cwtl
or
inc
out
jne
sub
push
push
xchg
jle
lahf
xchg
inc
shlb
mov
inc
mov
jge
xchg
dec
out
out
stc
mov
js
insb
cmp
sub
push
push
mov
xor
xchg
inc
jmp
pushl
int3
add
rclb
iret
push
sbb
es
jo
or
jbe
lret
jae
xchg
scas
pop
mov
pop
sub
adc
dec
rol
mov
add
mov
xchg
dec
test
sahf
lahf
push
sbb
mov
addr16
and
cmpsb
sub
lods
mov
mov
xor
or
mov
pop
fadds
adc
mov
fidivs
scas
mov
xchg
data16
cmp
xor
cmp
pop
adc
adc
cmp
push
inc
fnstcw
in
push
jl
lret
jmp
mov
pusha
call
adc
inc
outsl
loope
stos
or
add
push
pop
xchg
shl
or
pop
inc
jnp
mov
out
and
lcall
xlat
sti
mov
in
stos
aaa
out
in
fdivrl
mov
add
sub
or
jge
es
push
sbb
shlb
repz
loop
scas
xor
rcll
ret
lods
ljmp
roll
cwtl
repnz
inc
jge
fisubrl
leave
xchg
or
xchg
mov
js
aam
sbb
lock
or
shll
push
sub
and
adc
imul
daa
pop
pop
inc
and
adc
or
aas
call
fdivl
inc
sub
pop
out
mov
or
xor
and
jg
sbb
notb
andl
pop
stos
jbe
addr16
lret
pop
jmp
sub
and
mov
pushf
adc
mov
rcll
pop
dec
aaa
in
pushf
mov
mov
inc
sbb
xlat
insl
stc
imulb
lcall
adcb
lret
inc
pushf
mov
push
xchg
test
cmp
ds
cmp
pop
iret
inc
cli
sbb
jle
gs
pop
sbb
les
xchg
inc
push
dec
add
int
pushf
jno
test
sub
ja
cmc
in
test
scas
out
and
mov
repz
add
and
pop
adc
int3
aam
sbb
mov
xor
movsl
js
rcrl
pop
jp
jo
mov
and
xchg
sub
imul
daa
jg
xchg
xor
rorb
out
aas
aaa
stos
cltd
jp
je
sbb
dec
rorb
sbb
ja
cmp
mov
leave
sub
cmp
call
pop
test
mov
jp
addr16
cmp
int
aas
and
mov
clc
mov
mov
mov
pop
and
rcrb
pop
adc
rcrb
orl
pop
mov
aaa
icebp
adc
cld
mov
scas
push
les
fsts
push
inc
clc
mov
lock
or
add
iret
in
pop
movsb
sbb
mov
stc
lahf
push
jp
xchg
and
popf
jp
pop
jmp
test
pushf
into
incb
and
int
loop
sbb
sub
cs
icebp
pop
adc
outsb
cmpsl
out
mov
ret
test
jp
jae
sub
adc
adc
push
gs
dec
and
add
sbb
in
jo
inc
nop
inc
jnp
adc
adc
jo
daa
xchg
jge
les
femms
sub
inc
push
scas
lock
fs
pop
cld
sbb
and
xchg
in
pop
inc
ja
cmpsl
mov
xor
data16
mov
pop
mov
int
xor
subl
cmpsl
xchg
xor
mov
dec
les
clc
sbb
or
stc
mov
mov
xchg
mov
aas
push
and
xchg
in
push
jp
xchg
mov
out
inc
cmp
arpl
pushf
in
add
loope
mov
mov
iret
pop
push
int3
enter
addr16
lahf
sub
fsub
std
jo
add
mov
adc
out
lea
push
mov
mov
divl
ja
leave
rcl
push
cmpl
and
xchg
push
fnstsw
jecxz
mov
insb
push
mov
ss
or
dec
add
outsl
xchg
add
sub
les
cmpsb
dec
lcall
ret
ja
xchg
cs
arpl
sti
scas
jl
cmc
mov
aaa
mov
roll
insl
cmp
data16
outsb
hlt
pop
push
loope
jle
jne
and
lahf
bound
subb
popf
pop
test
incl
cmp
mov
mov
lods
sbb
stos
mov
test
pop
mov
xchg
in
pop
jb
add
xchg
pushf
jno
adc
pop
xor
add
ja
scas
mov
mov
test
scas
jle
push
add
or
sub
shlb
das
push
rcll
mov
sub
sahf
test
rcll
movsb
mov
push
mov
hlt
adc
inc
sbb
repnz
in
mov
fstp
sbb
insb
jmp
and
sbb
cmp
mov
cmp
adc
pop
xchg
mov
lods
cmp
pop
and
in
into
call
push
iret
clc
mov
lock
sub
mov
mov
cmp
repnz
inc
push
adc
pop
in
push
cmp
test
das
push
bound
cmpsl
test
addl
jg
int
push
mov
movsl
dec
lods
dec
cmp
pop
sarb
mov
mov
adc
push
mov
sub
outsb
push
mov
arpl
inc
shll
stos
cmp
and
int
enter
dec
xlat
ljmp
push
jmp
push
dec
mov
aas
xor
or
psraw
push
mov
xchg
sahf
out
cli
cld
pop
jge
inc
clc
cli
and
addr16
dec
insl
arpl
adc
test
addb
mov
pop
in
pop
pop
movsb
shl
movsl
cmp
sbb
add
add
pop
out
mov
jmp
xor
fistpl
pop
pop
das
inc
mov
aas
cmc
push
dec
mov
lods
or
xor
addb
xchg
fisubs
and
xchg
loope
shrb
sbb
dec
fimull
and
test
or
xchg
rclb
mov
les
lods
in
adc
mov
lahf
xlat
gs
and
loopne
jno
xchg
jnp
ss
dec
leave
mov
jo
jl
popf
or
addb
xchg
cmp
scas
jbe
rclb
cmpsl
jae
adc
mov
mov
mov
cmp
repz
add
repnz
call
icebp
fdiv
lods
jne
sahf
add
pop
fstpt
stos
imul
mov
push
jge
std
inc
cmp
or
inc
divb
mov
popa
adc
sub
jb,pt
shll
pop
jo
xorb
pushf
sbb
lea
pop
or
or
pop
pop
shr
shll
cmc
icebp
inc
sub
insl
cmp
jbe
cld
push
and
sub
adc
jo
ljmp
inc
in
int
cli
shl
in
insl
xor
std
sbb
cmp
mov
es
cli
mov
add
push
mov
inc
lods
push
lea
loopne
std
ret
in
xchg
hlt
ljmp
xchg
sub
mov
xchg
stc
xor
cmp
outsb
push
imul
imul
mov
inc
jo
mov
pop
dec
ror
lock
jae
xchg
imul
sti
xchg
pop
mov
xor
xchg
push
mov
pop
insl
push
mov
dec
mov
iret
add
cmpsb
mov
xchg
or
mov
test
and
faddp
lods
pushf
cmp
test
repnz
pop
push
lcall
addr16
xlat
or
pop
scas
mov
lcall
sbb
cmp
add
testl
or
pop
push
out
cmp
add
lret
mov
inc
mov
ret
add
cmpl
pop
lods
dec
lret
lahf
adc
cmp
lods
sbb
mov
shll
inc
mov
mov
and
inc
or
out
loop
mov
and
jle
push
lods
popf
xchg
ja
cmp
mov
mov
cmp
and
adc
push
out
clc
or
lock
pop
shr
jbe
icebp
mov
hlt
sbb
aad
push
sub
out
cmpsl
inc
xor
fldcw
stc
fldl
call
scas
adc
popa
ds
call
xor
je
inc
hlt
jbe
lret
dec
loopne
pop
cmpsb
dec
das
add
dec
int
jno
stos
in
inc
scas
incl
fadds
lock
xchg
add
out
sub
inc
fisttpl
mov
aam
iret
or
ja
pop
aam
cmp
xchg
adc
push
pop
inc
das
add
jecxz
push
sbb
xchg
mov
popf
cmp
pop
jle
sbb
out
cmpsl
ds
cmp
in
push
pop
mov
adc
mov
scas
or
push
inc
xor
out
and
filds
repz
or
push
cmp
sub
mov
jbe
stc
jo
ds
shrb
pop
inc
mov
push
xchg
mov
xchg
jecxz
push
jp
cs
pop
fcmovnu
lret
adc
mov
dec
loop
adc
test
sbb
mov
jnp
mov
int
dec
les
xlat
push
js
repz
rcll
cld
cmp
hlt
lods
shl
es
xchg
out
imul
fwait
addr16
xchg
xor
mov
loopne
repnz
outsb
outsb
dec
mov
cmp
adc
mov
jno
add
jae
fcmovu
jp
and
cmpsl
or
add
test
adc
sbb
fdivl
setl
mov
nop
dec
pusha
mov
out
xor
xchg
andb
xchg
push
ljmp
mov
cmc
lods
fdecstp
les
xchg
movsb
mov
mov
je
push
add
xchg
pop
cmp
sub
and
or
cmp
push
cli
ss
arpl
pop
pop
out
hlt
add
cmp
data16
pop
pushf
fbstp
push
adc
cmpsl
or
or
mov
jnp
dec
jnp
in
push
aad
or
mov
mov
imul
and
dec
or
inc
pop
mov
mov
ss
cmc
inc
mov
sub
repnz
aam
mov
add
mov
and
imull
jnp
cmp
mov
jns
mov
dec
stc
stc
xor
call
loop
pop
xchg
outsl
das
sbb
lret
jae
jae
push
inc
push
lods
mov
inc
dec
nop
insb
xchg
jbe
jmp
mov
out
mov
add
or
and
cwtl
jecxz
outsb
cmpsb
frstor
shrb
fsubrl
dec
mov
stos
out
lods
or
test
arpl
push
cmp
out
data16
sub
sahf
outsb
in
cmp
daa
sub
or
cltd
mov
jp
mov
mov
movsl
or
aam
sub
mov
push
les
fs
inc
pop
adc
xorl
and
jo
rcrb
push
jmp
xchg
and
inc
sbbb
pop
js
mov
imull
aaa
xor
or
inc
aas
out
ljmp
xchg
call
cli
dec
and
push
fbld
or
dec
pop
jecxz
adc
aas
or
ret
sbb
cs
dec
push
add
dec
jbe
ret
push
into
sbb
testl
scas
in
adcb
or
xchg
mov
jl
movsl
arpl
cwtl
jbe
push
insb
cmp
in
enter
aas
repz
insl
or
lcall
je
into
mov
or
sahf
push
cmpsb
push
aas
xor
in
leave
sbb
das
js
loope
push
hlt
dec
in
hlt
hlt
cli
scas
adc
rcr
imul
push
add
xor
sbb
add
push
inc
popa
xchg
stc
mov
jns
and
in
lret
pop
and
iret
mov
and
cmp
jnp
add
loop
xor
inc
add
mov
push
pop
pop
adc
ja
xor
dec
in
pop
lods
mov
ss
jbe
lods
pop
popa
inc
cli
pushf
and
pop
in
scas
sahf
add
pop
int
fs
jge
movsb
jl
out
xchg
inc
pop
scas
pushf
leave
sub
jae
leave
pop
add
bound
cmp
push
out
dec
or
and
daa
fisttpl
and
pop
or
in
in
jbe
dec
int
shlb
sub
loopne
pop
cmp
sbb
insl
imull
out
stc
jb
push
cltd
cli
fcmovbe
sub
bnd
sub
mov
cld
negl
adc
and
icebp
popa
push
cmpsb
cmp
pop
or
mov
les
nop
popf
jbe
fcompl
pop
sbb
mov
jns
inc
and
into
aas
fldenv
test
cmpsl
mov
outsb
mov
in
stc
sbb
bound
jle
dec
hlt
xlat
ss
imul
or
stc
test
jne,pt
inc
and
gs
out
sub
sbb
sub
jmp
adc
cmpsl
add
xchg
mov
mov
rcrb
insl
jno
jecxz
dec
call
out
imul
mov
inc
xchg
pop
lret
sbb
push
mov
dec
jmp
and
jae
insl
pop
fcomip
xor
xor
cmpsb
or
add
add
cmp
sbb
testl
negb
mov
aam
push
outsb
sbb
lret
cld
rcr
jmp
cmp
xor
jl
cmpsb
fcmovnb
jecxz
stos
cld
fwait
jb
xchg
rorl
loope
dec
push
pop
mull
movsb
xchg
cltd
icebp
in
test
jo
stos
lds
xchg
mov
clc
cmc
xor
jmp
and
pop
test
push
and
push
mov
faddl
movsl
movsb
fbld
push
inc
std
gs
dec
incl
mov
mov
int
xchg
sahf
jp
jmp
test
inc
jnp
inc
cld
jecxz
arpl
daa
pop
aaa
movsl
ret
inc
jg
inc
dec
mov
sahf
or
mov
fisubs
pop
imul
sbb
adc
jmp
cltd
and
mov
addl
mov
stos
fs
pop
xchg
mov
sbb
xor
sarl
pop
fsubrl
jae
xor
fdivrl
outsl
cmp
testl
add
icebp
stc
stos
mov
jae
cmp
or
data16
add
push
jbe
pop
ja
test
add
xor
push
sti
dec
xor
adc
pop
mov
outsl
jmp
hlt
pop
sub
stc
lds
cltd
in
aad
jb
out
cmpsl
lock
cmpl
mov
ret
clc
mov
or
insl
cmp
sbb
cltd
or
pop
jge
jecxz
or
adc
pop
xor
iret
lret
mov
outsb
cmp
in
pop
iret
xor
scas
in
es
repnz
pop
push
sub
dec
dec
add
push
xorb
pop
int3
into
dec
fsubr
mov
cmpsb
sbb
lock
testl
or
in
pop
cs
aad
xor
push
out
jle
loope
jno
je
icebp
cmc
inc
clc
loope
adc
dec
jmp
add
sub
dec
cmc
fmul
sbb
dec
cs
lret
inc
push
iret
cmp
mov
and
push
mov
ret
jge
insl
push
and
mov
cmp
insl
dec
repz
cmp
fstl
inc
clc
sbb
sbb
sahf
jg
stos
or
mov
xchg
dec
insb
lock
arpl
aad
lret
enter
movsb
xlat
mov
xor
xor
les
and
fldt
xor
push
xor
sub
lret
mull
sbb
sti
push
repz
insl
sbbl
fldenv
cmpsb
cmp
movsl
push
insl
adc
xchg
iret
divl
cmpb
jbe
rcrl
push
mov
sbb
stos
aad
testl
push
or
adc
jmp
push
out
loopne
adc
in
add
cld
adc
sub
into
xchg
dec
or
pop
sbb
mov
pop
pop
add
loopne
test
pop
lret
sbb
cmp
into
pop
lock
lret
jmp
fstl
or
in
and
jmp
mov
aas
push
mov
les
inc
cmpsb
push
adc
iret
jo
into
pop
inc
into
adc
mov
inc
add
lock
jns
stos
sbb
inc
mov
push
rcll
out
push
arpl
ja
xorb
xchg
aas
loopne
pop
aaa
lods
in
movsb
test
add
popf
pop
xchg
mov
xchg
jno
mov
fsub
fldenv
pop
cmp
in
xorb
mov
fnstsw
aad
push
in
cmpsb
cmp
out
mov
insb
das
and
gs
add
nop
cmp
icebp
mov
push
jno
mov
nop
movl
imul
pop
or
addr16
push
push
fwait
sbb
fcoms
push
aad
xor
push
jp
pop
or
mov
mov
es
insb
jno
insb
push
push
dec
loope
cmp
out
jne
fisttpll
jae
inc
js
sub
das
jp
push
push
xchg
dec
in
int
in
lods
jecxz
andl
jg
iret
aas
shll
arpl
cmp
push
adc
subb
or
leave
mov
dec
jmp
sub
mov
sti
cmp
dec
push
int3
je
daa
popa
push
push
call
lods
sbb
in
push
inc
scas
push
lds
dec
daa
push
cmp
push
lret
in
das
mov
stc
dec
test
jl
xchg
jne
pop
push
std
lods
test
cmp
fdivrs
add
je
in
in
psllw
cmp
lds
push
sbb
aas
je
fsubrs
xor
mov
push
mov
cmp
cwtl
bound
sub
pushf
aam
out
dec
lret
popf
std
jmp
jae
mov
push
xchg
lods
add
add
or
xchg
mulb
sti
aad
xacquire
or
out
out
add
jge
negb
mov
pop
call
aas
outsl
pop
sub
cld
mov
sbb
lods
pop
cltd
in
mov
push
stos
add
data16
xchg
push
jnp
in
cmp
cld
sub
nop
and
xchg
insl
push
or
add
sbb
push
addr16
fs
push
mov
sbb
lea
inc
jbe
mov
je
inc
dec
xlat
mov
lods
or
sub
xchg
test
inc
cmp
sbb
cmp
scas
lea
sbbl
loopnew
and
pop
xlat
testb
iret
out
jns
int3
pushf
inc
cltd
aam
jae
sub
sub
jl
mov
pop
pop
xchg
xor
xchg
mov
sarb
dec
xorb
aaa
dec
lock
jmp
test
ja
cmp
mov
dec
mov
fmull
fsts
cmp
aad
lock
mov
pop
arpl
cs
fldt
addl
or
mov
push
je
lahf
shlb
mov
or
lret
insb
scas
sbb
dec
add
repz
mov
jge
cmp
cli
mov
cli
mov
stc
fildl
cmp
xor
repnz
insl
pop
add
mov
dec
test
pop
cmpsb
jbe
shl
sub
push
sbb
inc
sarb
xor
xchg
into
mov
lahf
xchg
stos
xor
sub
jp
leave
ljmp
xchg
scas
push
pop
roll
lcall
fsubs
lock
pop
shl
dec
xor
xor
mov
aaa
cmpsl
pop
xor
scas
xchg
testb
sti
pop
mov
cmpsb
push
nop
daa
xchg
cmc
add
mov
mov
xor
dec
es
and
xchg
fdivrl
aad
add
int3
std
push
sub
inc
insl
iret
push
dec
pusha
roll
imul
stc
lock
dec
lret
icebp
nop
inc
push
sbb
xchg
mov
jo
fs
lret
fwait
xchg
jae
call
xor
sarl
mov
shl
jb
in
xor
cmpsl
mov
ljmp
rcrl
pop
aaa
add
sub
adc
cltd
std
stc
or
lcall
dec
mov
and
int
adc
scas
mov
fs
cmp
insb
jmp
pop
sub
dec
xchg
xor
popa
sbb
stos
lods
push
rcll
notb
jle
shll
pop
fwait
jnp
outsb
ds
mov
xor
xlat
push
in
sbb
sbb
add
cmpb
aaa
scas
sub
and
mov
popa
pop
jne
hlt
jns
adc
clc
sahf
jecxz
jmp
loopne
xchg
in
aad
add
or
rcl
inc
sub
mov
movsl
das
cmpsl
xor
push
rorl
jg
pushf
or
cs
enter
and
xchg
xchg
mov
or
aam
or
mov
mov
loopne
inc
sub
push
js
xor
subl
push
fcoml
jecxz
enter
mov
jge
push
test
stc
std
lcall
adc
shrl
mov
sub
out
pusha
mov
and
popa
popa
mov
cli
xchg
js
lret
add
outsb
xchg
adc
dec
test
icebp
mov
and
cmc
call
scas
sti
int3
mov
adc
xchg
push
and
xor
sbb
dec
sbb
jge
adc
mov
scas
xor
mov
jae
cmc
jo
insl
mov
sahf
scas
sbb
addr16
sahf
pusha
insl
xor
cmp
sub
arpl
mov
adc
push
sbb
imul
repz
push
lret
and
fistps
sahf
arpl
nop
loope
cmp
mov
cmp
pop
push
xchg
mov
inc
mov
hlt
xchg
pop
jle
ss
xor
ret
imull
movsb
jb
dec
insb
xlat
push
ljmp
pop
arpl
dec
das
sub
or
or
test
push
ljmp
call
push
push
test
jg
or
dec
pop
loop
mov
cmpsb
imul
aas
ljmp
das
je
xorl
cmp
arpl
ljmp
cltd
mov
lds
or
icebp
enter
mov
fs
dec
and
mull
cltd
jge
jnp
mov
ss
and
adc
sub
mov
jae
fildll
mul
mov
jge
lods
inc
fcoms
mov
testl
sarl
cmp
scas
cmc
rorl
aad
xor
dec
pop
and
mov
or
mov
push
in
add
mov
xor
jbe
testl
and
jp
mov
addr16
aam
xor
mov
sub
cli
jecxz
dec
add
out
lret
aad
xchg
pop
push
addr16
outsb
lret
and
sub
sarb
sbb
enter
add
lahf
or
or
xor
mov
aam
shl
jne
pavgw
call
out
adc
push
mov
inc
lret
or
or
in
push
mov
aam
aas
adc
add
cmp
sbb
stos
cmp
clc
fisubrl
int
mov
pusha
push
ficompl
std
ja
mov
cmc
std
xchg
je
movsb
xlat
cmp
outsb
mov
mov
jo
cmpsb
sub
sub
bnd
addr16
lcall
out
lock
jb
sub
test
movsb
movsb
mov
dec
add
pop
hlt
repz
orb
mov
inc
xlat
add
push
mov
pop
sti
sbb
stos
cmp
mov
xor
sti
lahf
testl
test
mov
and
mov
pop
std
es
loopne
gs
push
add
mov
dec
adcb
in
fs
jb
mov
push
test
movsb
adcb
sub
xor
jg
arpl
cmp
push
bound
adc
jbe
inc
pop
leave
cmp
aaa
jge
add
or
shrl
lea
or
repz
mov
je
cmc
sub
pop
mov
dec
pop
out
mov
lret
mov
cmp
pop
xchg
in
dec
fsub
cmp
popf
imul
cmp
shll
cltd
cmpb
mov
bound
and
mov
int3
popaw
ja
mov
cmpsb
or
adc
mov
gs
mov
add
sbb
sti
xchg
push
fists
adc
arpl
dec
add
ds
xchg
sbb
cmp
aad
fcompl
movsb
or
pushf
push
adc
mov
xor
divl
push
decb
pusha
rcr
sbb
adc
push
jp
mov
sub
fwait
shlb
pop
xor
jmp
mov
insl
or
mov
or
xlat
clc
push
in
andl
js
xlat
stc
inc
and
addr16
test
popf
pusha
mov
cmp
add
mov
cld
mov
mov
cmpl
add
shll
into
and
into
andw
jno
cmp
lret
lods
adc
mov
subl
mov
call
mov
fsubl
out
loop
scas
push
inc
rolb
popa
xchg
lods
xchg
sub
or
paddb
or
fdiv
loopne
mov
pop
rcrb
arpl
jbe
out
and
int
inc
ljmp
les
in
mov
outsb
mov
push
and
std
lods
pop
lret
adc
popa
fisubrl
jl
adc
fs
sub
rclb
lods
clc
lahf
mov
sbb
lret
add
xchg
push
lret
dec
fistl
ds
mov
inc
push
out
pop
mov
add
jnp
dec
push
or
lret
hlt
adc
pop
and
push
dec
xchg
pushl
adc
insl
xlat
icebp
jle
mov
jo
inc
arpl
cmp
or
movb
xlat
mov
aas
stc
xor
loop
sub
jnp
sub
mov
mov
mov
sarl
jg
xchg
jnp
xchg
aam
or
enter
repnz
pop
dec
push
sub
adc
cmp
mov
test
mov
je
jg
lcall
dec
push
mov
jle
or
push
or
xchg
cmc
mov
push
push
xchg
inc
insl
fldenv
loopne
aaa
mov
dec
sbb
push
add
adc
jbe
lret
lea
pushf
jns
lret
jle
and
outsb
sahf
pop
cld
out
lret
and
insb
dec
xchg
subl
xchg
cmp
popa
add
push
sub
sbb
or
cltd
adc
adc
inc
out
fisubs
adc
inc
bound
xor
rclb
or
or
sbb
jb
cs
das
push
loope
add
add
xor
inc
ljmp
pushf
in
adc
scas
cmc
mov
aaa
jp
jo
lods
jo
sub
inc
xchg
pop
push
add
mov
xor
lret
pusha
xor
jp
stos
push
mov
sbb
mov
mov
mov
pop
loopne
je
xorl
or
mov
xchg
test
gs
out
adc
sbb
xchg
sub
sbb
mov
loopne
dec
mov
mov
mov
adc
dec
cld
and
jne
add
push
xor
xchg
lock
addb
enter
std
xchg
std
and
dec
jo
bound
mov
das
xchg
cmp
and
ljmp
cmp
pop
je
jno
sbbb
pop
mov
pop
dec
or
aas
pop
add
or
int3
mov
add
mov
dec
sub
and
lret
pop
jge
fdivrs
hlt
jo
jp
shlb
je
es
shl
ds
punpcklbw
cmp
cmp
push
lcall
sbb
add
ficoml
or
test
mov
inc
jge
jnp
repz
pop
and
repz
jns
pop
int3
jl
stc
inc
outsl
pop
imul
jno
loopne
xor
inc
movsb
push
or
dec
mov
cmpsb
movsb
daa
out
cmovs
adc
sbbb
icebp
insb
sbb
and
push
pop
mov
or
lods
jmp
loope
jbe
cmp
mov
dec
or
xor
inc
addr16
ljmp
adc
mov
mov
push
sahf
push
ss
pushf
push
js
inc
test
ret
pop
sub
rcrl
or
scas
push
mov
loopne
dec
mov
sub
rcll
cmp
fimuls
repz
add
dec
in
xor
popa
dec
test
adc
decl
mov
and
hlt
ss
ret
ror
divl
repnz
test
mov
or
int
nop
mov
insl
dec
mov
push
pop
int
or
add
fsubr
cwtl
decb
xchg
dec
push
ds
jl
sahf
or
sub
lret
xadd
aas
data16
mov
inc
push
imul
cs
sub
stc
popa
push
daa
jbe
stos
inc
ret
mov
sub
pop
jnp
fnstsw
and
push
rcl
flds
fmul
push
push
xor
cmp
jecxz
fistl
stos
in
mov
ljmp
xor
and
mov
add
mov
push
xchg
nop
in
pop
insb
decb
cmp
hlt
loop
mov
repz
sub
and
test
adc
xchg
pop
loop
rep
rclb
loop
cmp
mov
dec
dec
test
push
mov
repnz
xchg
sbb
cmc
mov
jp
mov
push
stc
cmovle
mov
and
mov
mov
hlt
pop
cs
inc
sub
aaa
mov
jns
ja
lock
lods
jmp
out
scas
ficoms
xchg
mov
dec
pusha
loope
pop
sbb
sub
iret
xchg
cmp
lea
pop
jecxz
mov
arpl
cmp
and
movsb
je
loopne
cmp
fucomi
cmpsl
test
js
push
jg
leave
mov
mov
add
js
and
aaa
adc
sti
xchg
adc
push
lds
pop
cmp
dec
xchg
test
ja,pt
sbb
dec
xchg
inc
inc
xchg
mov
cld
cwtl
jbe
cmp
dec
fidivrl
aaa
pusha
fwait
sarb
inc
out
xor
arpl
jmp
push
jbe
xor
or
sti
mov
sarb
daa
mov
mov
fsubl
out
inc
inc
mov
popa
xchg
cmp
lods
mov
and
dec
xchg
cmp
test
jle
inc
xchg
xchg
ja
adc
sbb
push
add
cli
push
xrelease
rol
cmc
clc
xchg
test
add
orb
loop
scas
and
call
aam
mov
adc
xor
stos
mov
rolb
pop
mul
push
std
or
into
in
xchg
scas
xor
movsb
hlt
aaa
pop
test
jl
jg
or
mov
sub
fdivr
ds
scas
or
sbb
ret
mov
xor
push
inc
adc
fsubs
add
shll
adc
es
lds
ret
dec
xchg
out
pop
movsb
rcrb
jbe
push
jo
clc
pop
flds
mov
mov
adc
ljmp
fwait
inc
pop
les
fisubl
leave
sbb
jno
jno
push
jp
and
xchg
hlt
fadds
push
inc
inc
dec
int3
and
cmp
out
pop
in
icebp
xchg
add
fildl
jns
add
pop
and
jle
jns
data16
xchg
in
shr
push
addb
scas
outsl
cld
sarb
push
mov
pop
std
fcompl
sbb
in
test
repnz
test
sbbl
outsl
out
push
adcb
pop
push
pop
mov
mov
je
add
movsl
inc
sub
xchg
jle
out
ret
xor
shrl
movsb
test
push
call
pop
loopne
cmp
xor
sbb
or
cwtl
cmpl
add
call
add
gs
bt
xor
out
fs
adc
sub
cli
xchg
push
fstpl
mov
cld
adc
cltd
cmpl
pop
or
sahf
popf
and
test
mov
roll
and
sahf
pop
adc
into
sahf
jmp
pop
mov
hlt
lcall
push
pop
inc
add
mov
and
jns
adc
lahf
pop
jb
cld
xchg
sahf
js
fbstp
clc
mov
in
or
bound
dec
inc
jbe
dec
push
mov
shr
sti
imul
rcll
or
daa
xchg
jns
mov
hlt
ds
sahf
adc
inc
sub
pop
fsubrl
adc
fxch
cld
js
out
daa
lcall
jge
xor
inc
insb
cld
push
bound
stos
mov
loope
cmp
int
jmp
rcll
push
mov
xchg
and
repnz
and
add
nop
shl
or
bound
and
add
aam
ds
in
fwait
push
or
xchg
mov
adc
int
add
sub
fistpll
std
scas
inc
adc
inc
arpl
cltd
mov
xchg
jge
in
mov
movsb
dec
mov
or
inc
mov
mov
cld
mov
inc
jb
push
push
out
jp
loop
sahf
cwtl
ja
jno
mov
inc
push
sbb
fisttps
mov
gs
test
outsl
ljmp
stc
inc
out
stos
scas
push
mov
lea
xor
outsl
insb
fs
jae
popa
repz
ret
adc
cmp
cmp
movsl
jge
pusha
adc
mov
sub
rsm
inc
lret
lods
movsb
testb
cmp
repnz
pop
pop
mov
inc
fwait
repz
test
rclb
mov
gs
pop
inc
mov
jbe
lret
xor
inc
cmp
ljmp
out
insb
pop
into
pminub
pusha
hlt
hlt
cmp
repz
test
mul
call
aad
xor
jl
in
push
stos
pushf
test
push
shll
sbb
das
sbb
mov
into
add
xchg
in
sbbb
adc
sub
mov
pop
xchg
cltd
push
xor
sbb
mov
fwait
xchg
ret
xchg
dec
jp
mov
mov
mov
mov
mov
hlt
add
mov
xchg
sub
pop
dec
jno
push
cmp
dec
adc
push
mov
mov
inc
lock
in
push
mov
leave
les
or
cmc
into
dec
pop
dec
sbb
or
fimuls
aam
add
push
mov
adc
push
sub
les
pcmpeqw
sub
mov
add
in
cmp
in
jmp
ret
adcl
push
mov
rclb
popa
enter
js
or
dec
adc
mov
add
mov
pop
lahf
adc
push
push
mov
out
or
faddl
adc
stos
in
jne
mov
into
ljmp
push
imul
fidivl
ret
push
shll
icebp
mov
push
jmp
rcr
leave
out
movsl
sbb
sbbb
mov
xchg
rcrl
enter
xchg
jae
lock
jmp
jge
jno
cmc
ss
rolb
mov
fcomp
pop
pop
addb
mov
xchg
repnz
push
sub
pusha
cmp
jecxz
enter
xchg
dec
lods
jl
adc
inc
adc
lret
shll
sbb
rcll
jmp
pop
inc
in
pop
lret
leave
xchg
ljmp
testl
xchg
ja
enter
nop
dec
sub
sub
xchg
fstl
and
fsubrs
mov
jnp
mov
mov
adc
jecxz
jo
jne
adc
or
jo
push
test
inc
sahf
stos
popf
fsubrl
pop
pop
and
xor
jge
jnp
mov
lock
adc
mov
movsl
jge
pop
and
push
out
jb
fists
add
addr16
imull
cmp
sbb
mov
pushf
sub
jp
inc
rcrb
adc
cmpsl
inc
stos
sti
cmp
inc
stc
shlb
mov
and
sbb
sbb
ret
mov
push
lods
or
cmpsb
js
jne
cmp
repz
lods
push
pop
add
aaa
dec
aam
out
in
hlt
push
movsl
ljmp
lods
jne
pop
lods
cmpsb
test
jge
jecxz
cmc
sbb
cmp
sub
aas
or
xchg
push
pusha
int3
pop
xchg
outsl
je
frstor
loop
pop
and
repz
cmc
mov
jg
fwait
popf
mov
adc
repz
es
lahf
cs
subb
add
push
fcom
jg
popa
leave
inc
xor
mov
push
mov
fnsave
loope
cwtl
sbb
imul
movsl
cli
fstl
mov
and
add
fdiv
adc
mov
stc
adc
gs
jp
imul
popa
in
subl
stos
insb
inc
out
out
jns
mov
mov
dec
xchg
xorb
jle
sub
mov
mov
push
jmp
fs
mov
scas
leave
dec
fbld
push
jg
push
or
mov
dec
sub
cmp
scas
add
and
xchg
pop
divb
pop
xor
xor
add
loop
sub
std
add
jge
outsl
push
test
lds
in
test
pop
clc
jmp
xor
nop
sub
jecxz
fstpt
dec
cwtl
movb
and
xchg
mov
xchg
lahf
xor
jmp
mov
lret
scas
cltd
xchg
or
hlt
mov
mov
and
sub
jns
sbb
mov
popa
jecxz
out
mov
lret
sub
shll
out
idivl
mov
jns
mov
mov
ja
xchg
inc
aas
ds
das
cmovo
xchg
in
mov
loope,pt
ret
rolb
test
sub
push
mov
fcmovnu
sbb
loop
std
leave
inc
or
sub
jg
pop
ja
sbb
ficoml
xor
xor
mov
popl
push
ljmp
ret
jecxz
or
xor
test
aam
and
test
cmc
lcall
popf
pop
call
sahf
mov
jmp
inc
pusha
dec
xchg
jg
insl
push
add
arpl
movsb
sbb
lahf
popf
scas
pop
mov
cmp
insl
inc
stos
inc
aad
or
adc
xchg
xor
adc
push
sarl
push
cmpsl
push
popf
into
mov
cmp
pop
pop
push
jp
nop
into
sub
pop
sti
mov
fdivl
dec
cmpsl
out
fwait
popf
cmp
sbbl
mov
cld
aam
xor
inc
stc
xchg
sbb
add
mov
into
mov
dec
fucomi
mov
add
xchg
add
lcall
inc
cmpsb
lock
pop
jnp
inc
insb
outsb
mov
mov
lret
in
shrb
and
xchg
mov
int
iret
jl
jmp
arpl
mov
mov
add
fsub
dec
xor
ss
fildl
cltd
sbb
push
ss
stc
inc
xchg
jle
and
out
mov
shlb
jbe
pop
add
dec
daa
sarl
cmp
addr16
lds
inc
ja
fstpl
lea
mov
dec
pop
stos
into
shl
sub
add
mov
mov
pop
xchg
adc
sbb
jns
mov
inc
andb
and
outsb
jmp
cld
jbe
jle
outsb
ss
sbb
std
subl
sbb
loop
fwait
repz
rclb
xor
popa
sub
sbb
pop
std
fs
rcrb
xlat
jmp
outsb
dec
inc
fcmovnbe
sub
xor
inc
pop
xlat
adc
dec
cwtl
inc
mov
or
mulb
xorl
sub
loope
cmp
inc
cmc
lret
popa
dec
int
xor
cwtl
les
xor
lahf
fisubrs
push
and
lods
mov
push
pusha
push
push
popf
lods
add
xchg
lahf
loopne
adc
jbe
das
pop
ds
dec
push
mov
stc
sbb
aam
cmc
je
dec
fcomp
iret
sub
xchg
push
mov
stc
inc
mov
rol
xlat
inc
mov
lea
pop
push
and
aad
mov
cmc
lret
mov
ljmp
sub
dec
jne
ss
repz
pop
in
scas
cmp
loop
in
cmp
movaps
fcompl
or
cmpsl
fstl
mov
cmpsl
das
iret
mov
fmul
mov
jmp
xchg
mov
pop
clc
lcall
shrb
lret
jnp
sbb
fcomp
sbb
in
cmp
sbb
neg
sbb
sbb
and
inc
or
or
enter
pop
jp
push
xor
sbb
mov
mov
or
and
and
cmc
dec
icebp
cli
in
scas
sbb
push
inc
lea
inc
mov
dec
sub
hlt
xor
mov
fistpll
stos
pop
sub
adc
cli
xor
jno
sbb
jns
outsb
adc
pop
daa
inc
sub
stc
push
lret
push
sti
nop
xchg
mov
jne
rorb
ds
or
and
cmpsb
jb
sbb
stos
mov
lods
fs
leave
testb
popf
aad
fiaddl
or
jo
addr16
into
ret
scas
mov
jne
dec
fs
mov
xchg
and
pop
outsb
and
sti
call
inc
sbb
fcoms
test
adc
mov
dec
dec
jp
into
pop
dec
mov
sbb
scas
and
jg
push
mov
leave
pop
mov
xchg
jno
mov
fucomp
sti
aaa
push
sbb
subl
int
inc
scas
push
sbb
lcall
adc
sbb
xor
in
into
hlt
pop
stc
mov
sub
fimull
iret
mov
sub
int3
inc
sub
xor
icebp
push
js
cld
rcll
add
jns
sub
and
or
lock
add
daa
mov
out
lock
xchg
mov
jp
and
pop
mov
pop
shlb
clc
sub
jg
or
sbb
sahf
hlt
lea
imul
sbb
push
inc
aas
mov
push
mov
call
push
jne
fidivl
icebp
pop
enter
push
insl
fcomps
mov
sbb
into
pop
dec
pushf
int
mov
daa
jge
cmp
popa
iret
icebp
add
add
jae
inc
popa
lea
adc
push
cmp
mov
jmp
adcb
jno
dec
lret
pusha
xor
repz
adc
rcrb
and
inc
mov
dec
subl
sti
mov
sbb
push
cmc
or
sbbl
pop
dec
adc
mov
dec
or
sub
pop
inc
jp
mov
inc
shrb
mov
popa
rcrb
in
push
xorl
adc
test
pop
sbb
das
into
arpl
stos
aaa
cmp
dec
dec
stc
xchg
dec
loop
push
jo
sub
pushf
lods
or
dec
out
jnp
sub
into
test
nop
out
and
lock
sbb
lock
cmp
cmpsl
sbb
jnp
cmpsl
cmpsb
repz
stc
pushf
stos
or
decl
jmp
insl
pop
ret
loopne
jo
pop
xchg
pop
das
cli
pop
mov
xchg
addr16
sti
pop
dec
out
mov
std
mov
adc
ret
or
mov
mov
pop
add
dec
jnp
daa
arpl
push
dec
enter
test
and
cmp
mov
push
push
push
lock
cli
popf
mov
mov
sub
test
lcall
ja
mov
enter
sbb
mov
rep
std
ljmp
js
gs
jl
out
cmp
sub
pushf
test
rcrl
rclb
pop
icebp
lahf
sub
cld
sub
icebp
mov
test
or
icebp
loopne
add
adc
and
xlat
adc
sub
test
push
cmpsl
jae
imul
sarl
cltd
inc
cli
repnz
or
pusha
jbe
inc
pop
or
outsb
bound
orl
pop
and
add
lods
ljmp
pop
cmp
jo
fistps
bound
cli
repz
sub
jbe
pushf
inc
or
lcall
negl
sub
dec
mov
rolb
mov
mov
testl
mov
vmovaps
and
pop
loop
xchg
mov
movl
and
mov
iret
xor
add
mov
inc
shl
sub
icebp
sbbb
int3
mull
shrb
inc
orl
fidivrl
stc
cmp
icebp
outsl
mov
mov
incl
mov
jae
andl
lods
inc
gs
dec
mov
sub
fdivl
and
ljmp
fimuls
cmpsb
push
lret
adc
loope
into
test
shr
xor
test
jmp
int3
adc
adc
pop
mov
push
out
mov
lcall
and
xor
mov
out
mov
dec
addr16
mov
inc
push
push
cmc
in
mov
mov
push
cmpsb
jno
xchg
xor
leave
xor
mov
dec
push
xor
data16
adc
add
out
decb
fsubr
dec
dec
sti
xchg
aas
mov
add
ja
loope
jl
sbb
xchg
lds
sbb
ret
push
sti
push
adc
pop
mov
ret
mov
mov
jmp
scas
repz
sub
push
xchg
pop
pop
movsb
mov
xchg
rcl
in
fs
xchg
pusha
xor
je
cmp
cmp
test
pushf
insb
fisttpl
test
in
mov
lret
jp
insb
inc
inc
xor
jnp
outsb
jne
jmp
loopne
fisubrs
push
pop
mov
fs
jnp
cmp
cmpsb
lret
jb
pop
scas
inc
cmp
fnstsw
movsl
stos
add
lcall
xchg
jp
dec
cli
sub
or
fcomip
fsubl
in
mov
xchg
sub
add
repz
push
popa
sub
dec
push
cmp
test
scas
mov
or
xchg
pop
fisubs
sbb
movsl
add
lahf
outsl
adc
fstpl
repz
mov
inc
je
pop
or
jmp
xchg
jmp
clc
mov
mov
jno
stos
aaa
jnp
pushf
or
or
mov
mov
pop
adc
subl
je
dec
mov
and
sub
std
xchg
and
faddp
aaa
shll
cltd
push
lods
dec
mov
sub
mov
cltd
rorl
sub
cltd
add
pushf
push
and
jno
in
and
das
add
mov
push
popa
hlt
inc
inc
adc
ret
cmc
sahf
mov
mov
sub
out
js
and
imul
repnz
jl
popf
repz
aas
push
outsl
jb
in
or
mov
in
push
sub
mov
pop
lret
pop
dec
inc
adc
inc
xchg
adc
aam
pop
ja
outsl
push
stos
sbb
push
arpl
fmuls
int
mov
movsb
inc
and
sub
aas
xor
mov
xchg
fnstenv
mov
sub
inc
sbb
push
sbb
mov
in
pop
mov
pop
xlat
mov
outsb
scas
jl
cld
pop
jnp
lret
shl
push
mov
jno
cltd
stos
adc
subl
inc
jmp
push
add
xchg
or
hlt
testb
dec
sub
inc
or
mov
arpl
sbb
lea
pop
pop
adc
dec
dec
mov
sub
dec
mov
and
add
fadds
daa
ret
push
test
orl
pushf
jns
outsl
or
pop
and
fcmovnb
pop
mov
dec
cmp
aam
inc
shlb
cltd
flds
add
jmp
dec
movsb
mov
loopne
push
dec
sub
and
push
xchg
push
pop
cltd
js
push
inc
cmc
add
mov
gs
jmp
jo
jmp
dec
jns
lret
and
adc
mov
orl
xor
xorb
mov
push
adc
jl
pop
and
cmp
add
push
xchg
and
inc
in
pop
stos
cli
shlb
lret
nop
aam
xchg
or
push
rcll
test
push
mov
sbb
xchg
adc
push
mov
insl
lcall
scas
xor
jmp
mov
mov
cmp
pop
adc
xchg
ljmp
mov
sbb
adc
cld
into
bound
loope
cmpsl
and
xlat
es
aam
xor
mov
jo
cltd
pop
ret
mov
cmp
inc
shl
nop
out
and
rcll
repz
loope
mov
lods
fsubr
and
js
cltd
jle
mov
bound
insb
cmp
push
inc
cmp
sbb
rorb
out
das
mov
out
vpinsrb
push
mov
in
xchg
adc
daa
lcall
sub
xlat
jecxz
gs
ss
inc
and
cmp
push
mov
push
mov
add
pop
dec
and
xor
enter
mov
or
add
je
cmp
xor
out
cmp
or
leave
icebp
dec
fbld
adc
sub
push
xchg
outsb
movsl
inc
and
bound
int
cmp
mov
add
mov
sahf
add
pop
bound
sbbb
lods
int
leave
bound
xor
imul
pop
fincstp
cmp
and
rep
flds
cli
lods
int
test
cmp
test
test
pop
inc
ret
adc
testl
pop
mov
scas
mov
ret
scas
jo
lcall
and
mov
xchg
mov
mov
es
xlat
mov
mov
mov
leave
inc
and
cmpsl
cli
mov
and
testl
mov
sub
cs
mov
lods
dec
xor
es
cli
shrb
dec
add
scas
add
sahf
cmpb
xchg
inc
add
mov
sahf
sbb
int3
xor
mov
aad
dec
sub
lcall
dec
stos
sub
dec
test
faddl
push
pop
lods
mov
jne
xor
mov
aam
dec
mov
pshufw
stos
int
ja
in
nop
jge
mov
jmp
loop
out
jmp
xor
push
xor
add
mov
lods
jnp
push
in
mov
outsl
dec
mov
mov
orb
iret
cmp
or
xor
pushf
push
add
enter
cmpb
loope
mov
mov
and
xor
popf
mov
sub
mov
xor
jnp
push
std
scas
jg
mov
jge
fildl
das
mov
fbstp
add
enter
leave
pop
mov
addr16
xor
push
push
mov
and
imul
push
xchg
inc
fsubs
dec
mov
lret
outsl
lds
or
xchg
jmp
jle
das
push
dec
movsl
cmc
add
xchg
xchg
push
cs
das
movl
jnp
cmp
pusha
pusha
inc
sbb
push
ds
jns
call
icebp
inc
int3
mov
enter
outsb
dec
int3
je
inc
popa
mov
push
jns
ds
jb
stc
cmp
cmp
lret
ret
inc
sbb
aaa
loop
lods
arpl
jbe
adc
cmp
lcall
jmp
iret
dec
sub
push
sbb
sub
cli
jle
xor
aad
movsb
movsl
dec
mov
iret
push
int3
nop
or
pop
sbb
xor
push
xor
jo
push
lock
adc
test
jae
and
sbb
lcall
mov
mov
xchg
mov
cmp
cltd
push
leave
and
shll
jge
and
cld
jno
add
addr16
repz
iret
enter
and
ja
push
std
inc
lahf
add
inc
orl
and
scas
mov
loop
push
and
sub
mov
fs
and
mov
stos
adc
pop
leave
xor
and
loopne
testl
lds
pop
sbb
cmpsl
jg
dec
xchg
xchg
inc
lods
mov
pop
and
cmp
adc
pop
mov
add
cltd
and
faddl
cmp
sbb
jae
pop
aas
std
ret
or
call
mov
inc
in
fwait
rclb
je
sub
test
into
outsb
roll
or
out
fstl
mov
sub
push
clc
adc
mov
orb
bound
lods
ret
jb
leave
lret
or
add
gs
test
add
mov
sub
mov
popl
jle
push
pmullw
sahf
mov
sbb
pop
cli
mov
dec
movsb
cmp
clc
movsb
fcmovnu
mov
jmp
notl
push
pop
ja
add
or
bound
outsl
jne
cli
mov
dec
stos
push
ret
and
or
pop
gs
outsb
gs
mov
push
cwtl
jae
push
fdiv
pop
pop
xchg
int
hlt
dec
aaa
cmpsb
aaa
lods
push
adc
xchg
stos
push
and
and
xor
adc
xchg
scas
stos
repz
push
push
push
mov
ja
imul
bound
ret
cmc
mov
data16
xchg
movsl
jbe
jns
adc
shl
xchg
into
adc
xchg
sahf
fs
sarb
dec
stos
nop
js
sub
lahf
pop
das
adc
pop
push
inc
pusha
push
adc
cltd
enter
and
daa
pop
mov
loopne
orl
mov
cmpsb
inc
outsl
filds
mov
inc
jns
movsl
or
rcrl
xor
jbe
addr16
lret
and
ret
enter
rolb
push
imul
out
pmaxsw
mov
and
stc
pop
test
pop
repz
shll
jge
lahf
orb
popa
sbb
mov
sti
mov
sub
dec
fsubrp
jae
test
dec
loope
xchg
or
jae
mov
or
xchg
mov
jl
pushl
cmp
imul
loop
dec
dec
subb
jmp
test
lcall
pop
lret
mov
sbb
clc
movsb
xchg
xchg
dec
push
pop
cmp
stos
rclb
inc
mov
cwtl
dec
mov
clc
loope
cltd
mov
cmpsb
loop
pop
stc
xor
ljmp
push
les
add
push
in
mov
jae
test
rcrb
arpl
xchg
sub
jnp
add
pop
int
sarl
movsb
popa
pop
inc
jg
pop
add
into
xchg
jno
inc
pop
inc
stos
test
imul
cmp
sub
in
jle
mov
inc
loope,pn
loop
pop
mov
scas
pop
std
sub
cmpsl
pop
and
jbe
ljmp
pop
test
rcll
shr
push
pop
in
dec
leave
hlt
fists
ss
mov
pop
inc
mov
stos
mov
mov
inc
daa
and
insl
mov
int3
lds
sub
mov
movsl
or
xchg
aam
push
test
mov
jg
dec
push
xor
mov
pop
data16
nop
cwtl
aam
push
iret
fldl2t
mov
pop
or
xor
lods
xor
pop
or
pop
jmp
push
mov
cmc
in
mov
or
push
xchg
mov
jo
or
sti
std
adc
jne
jmp
jne
xor
pop
pop
adc
out
in
lret
ljmp
and
mov
sub
and
lods
jge
sub
dec
inc
ficoms
push
xor
ds
ffreep
cld
mov
mull
std
roll
sbb
pop
ss
mov
pop
inc
fwait
orl
add
push
push
incb
xchg
xor
test
pop
shr
mov
lock
dec
sti
lods
inc
fnstsw
insl
sti
pop
or
push
in
cmp
sti
daa
xor
inc
push
sub
inc
inc
js
push
dec
jecxz
clc
shrl
mov
jmp
add
adc
mov
scas
stc
jl
cmp
and
cli
out
vpcmov
pop
repnz
lahf
inc
out
pop
sbb
sahf
or
orl
rcll
jb
jns
or
test
cmp
call
not
data16
xchg
mov
dec
inc
pop
sbb
jno
mov
imul
and
inc
pop
xchg
and
dec
and
test
je
js
and
dec
xchg
mov
and
mov
push
shrl
xlat
jns
push
jnp
inc
push
dec
std
addb
jns
cltd
aaa
push
xchg
jae
dec
push
movsl
sub
jnp
and
jbe
xchg
ret
pop
push
or
jp
in
dec
mov
push
in
xorb
fsubrl
nop
add
jne
mov
icebp
flds
std
xchg
addb
idivl
mov
loopne
xchg
sti
add
and
les
out
test
push
lea
jno
mov
test
mov
movsl
ss
or
insb
xchg
xor
rcrl
or
dec
push
pop
mov
cld
pop
shrb
and
shll
dec
cwtl
mov
push
imul
jmp
cmp
adc
pushf
ret
dec
lea
lcall
jo
mull
clc
mov
add
aaa
jns
add
xlat
add
ja
pop
ret
imulb
stc
std
testl
in
sahf
jbe
test
push
pop
sbb
pop
and
sub
push
mov
xchg
mov
incb
sti
loop
dec
sbb
sub
leave
sbbb
roll
mov
fisubrl
arpl
xor
mov
mov
call
xor
inc
push
push
lods
jns
ljmp
jno
ds
jl
jge
out
jb
xchg
mov
and
jb
pop
out
in
popa
xor
int
sub
jno
sbb
fcoml
jmp
xchg
out
xchg
or
mov
pop
xor
xor
notl
and
in
cmp
xchg
lcall
movl
inc
cmp
scas
aaa
ds
loop
mov
es
insb
xlat
sarl
adc
mov
and
fisubs
cwtl
test
int3
lods
cmc
divb
ja
mov
out
push
dec
sub
add
scas
cld
data16
enter
arpl
dec
lret
lret
jge
dec
pusha
fistpll
sub
sbb
mov
std
fdivr
je
movsb
cmc
jbe
movsb
sub
jo
add
popf
es
popa
imul
int3
dec
xor
pop
ffree
daa
cmpl
adc
aas
inc
dec
xchg
int
mov
lods
roll
xchg
rcr
cmp
or
mov
push
inc
inc
dec
sahf
mov
push
sbb
push
cmpsb
cli
lock
cmp
jbe
jmp
scas
sub
ret
fmul
pop
pop
push
rcll
pop
cmp
xor
adc
int
andb
rcrb
inc
sbb
mov
push
inc
jg
add
mov
xor
in
push
jle
mov
inc
outsb
mov
nop
out
aaa
insb
imul
imul
push
pop
add
mov
fwait
mov
cltd
lods
scas
fdivs
aam
dec
and
out
inc
jmp
imul
adc
imul
fistpll
loop
mov
adc
lds
adcl
xor
jg
sahf
shlb
or
add
pusha
jmp
iret
out
mov
push
mov
push
cmpb
ds
mov
pusha
scas
cmp
lret
jecxz
std
idivl
insb
cmp
adc
jp
jbe
push
inc
xor
sbb
dec
shlb
loopne
repz
lret
mov
cli
push
mov
mov
aam
xchg
stos
adc
pop
loope
data16
movsb
stos
push
xor
loope
mov
xchg
sub
pop
xchg
jecxz
inc
test
ret
inc
sbb
adc
outsb
sub
cld
fnsave
mov
into
rol
fsubs
xorb
mov
fdivl
pop
outsl
xchg
xor
mov
out
pop
sbbl
clc
aam
mov
adc
dec
adc
mov
scas
movsl
pop
pushf
imul
rclb
cwtl
loopne
out
and
test
into
adc
jne
cli
sub
cmp
mov
sub
jl
out
pop
fwait
mov
dec
pushf
mov
aad
shrl
inc
xchg
add
xchg
cmp
addr16
cwtl
sub
test
setle
dec
loope
jmp
dec
dec
scas
ljmp
out
push
jge
add
jecxz
lds
out
hlt
loopne
pop
jno
dec
fsubs
adc
movsb
scas
and
xchg
sar
cs
jmp
push
int
cmp
into
out
cltd
or
mov
jo
lock
mov
sub
add
out
dec
jo
repz
sub
jns
cmpsl
ds
or
cmp
icebp
push
or
cmp
inc
fistl
rcrl
dec
lock
mov
test
aaa
pop
cmc
sti
adc
nop
mov
dec
add
sub
and
mov
lock
pop
clc
jb
pop
sbb
imul
mov
xor
sub
das
outsb
and
inc
pop
mov
lcall
xchg
push
jae
shrl
xor
movsb
repz
or
dec
push
lods
mov
imul
and
aaa
xchg
dec
aam
sbb
aaa
rcl
sbb
mov
mov
pusha
daa
sbb
sub
cs
inc
ja
mov
mov
sahf
push
je
mov
cmp
add
xor
outsl
jae
dec
add
pop
mov
iret
in
nopl
cmp
fisubrs
jge
pop
jmp
icebp
push
fistps
xor
cmp
sbb
test
mov
fstps
sbb
fimuls
mov
push
push
push
int3
loop
inc
das
pop
and
je
fildl
sbb
xchg
or
xchg
add
add
pmulhuw
mov
push
sub
sbbb
push
or
sub
dec
int
loope
inc
jns
fbstp
mov
imul
jno
cmpsb
outsb
gs
jae
pop
test
lret
stc
js
movsb
pusha
adc
push
sbb
lahf
pop
mov
incb
fs
je
jge
lods
bound
push
add
xchg
jae
inc
lods
and
insb
inc
or
and
call
xor
sbb
fwait
sahf
push
xlat
dec
in
push
cltd
pop
or
mov
rcr
mov
xchg
mov
cld
add
fistl
pushf
aad
std
sub
push
inc
loopne
inc
popl
adc
sbb
test
mov
sbb
jb
xlat
or
cmp
cmp
orb
pusha
mov
mov
jb
pop
add
xlat
repnz
shlb
inc
and
xchg
lods
lret
clc
jo
lock
aas
push
xor
mov
or
clc
das
mov
cmp
dec
je
stos
inc
movsl
arpl
or
mov
push
dec
aad
sub
movsl
xchg
aad
cmpsb
xchg
sub
clc
addr16
mov
adc
or
mov
cld
add
aaa
or
sbb
mov
stos
xor
cmp
fldcw
pop
scas
out
inc
imul
ret
pop
pop
sub
mov
cs
es
and
insl
push
insb
xor
mov
arpl
pop
sub
lods
fisubrs
pop
pop
jne
lods
les
lods
adc
adc
test
mov
push
mov
lods
cli
jl
and
dec
test
inc
adc
push
scas
inc
hlt
popa
dec
fdivl
insl
xchg
and
xor
bound
push
pop
enter
mov
push
arpl
jge
sub
in
lret
aaa
or
clc
aad
fisubrl
addr16
inc
stc
mov
out
insl
enter
mov
sbb
popf
stc
push
cwtl
scas
sub
mov
mov
lods
pop
addl
cli
dec
sbb
mov
push
and
mov
mov
ret
jno
mov
push
fdivrl
xlat
hlt
cmp
cmp
loop
fwait
cmp
jne
inc
popa
cmpsb
aad
aaa
stc
sbb
or
enter
sub
inc
bound
adc
dec
sbb
xor
pop
lods
jmp
sahf
sub
dec
out
push
or
mov
out
xor
jnp
cmp
in
dec
scas
in
mov
mov
cmp
xchg
add
push
push
aas
shlb
das
lods
rolb
mov
mov
cmp
clc
repnz
daa
out
mov
jg
jl
mov
jnp
ret
fwait
dec
ss
push
push
popa
jbe
sub
int
xorb
pushf
adcb
jne
pop
add
iret
mov
sub
dec
add
xorb
in
movnti
pop
xlat
les
sub
out
rorl
mov
push
jmp
sbb
imul
xchg
mov
leave
aaa
and
dec
pop
xchg
pushf
dec
stos
sub
pop
or
in
std
flds
flds
inc
lahf
ds
cmp
std
insb
inc
jnp
cmp
pop
and
gs
inc
lods
and
xlat
mov
out
inc
cwtl
pop
dec
testb
jbe
gs
or
push
and
lods
out
mov
lods
scas
enter
popf
push
cmc
and
in
cmp
sub
mov
and
stos
mull
mov
inc
jmp
pushf
dec
pusha
push
cld
sahf
xchg
inc
mov
int
lahf
dec
push
sub
or
xor
ss
inc
cmp
fninit
cld
xor
inc
stc
add
mov
std
dec
jmp
mov
lret
adc
stc
out
xor
mov
out
mov
pop
test
jp
xchg
cmp
lds
xor
loopne
dec
rcll
fdivr
or
in
inc
stos
pop
inc
adc
mov
cmpsl
stos
xchg
in
xor
mov
push
fwait
cmp
pushf
and
cmp
lcall
out
or
jge
xor
ljmp
push
add
jle
inc
sub
mov
push
dec
push
and
push
mov
sub
mov
and
pop
test
add
xor
int
mov
sahf
int3
popl
iret
cmp
mov
push
mov
jle
test
call
jo
dec
sti
xchg
jecxz
scas
sub
ror
cmp
cwtl
push
and
ljmp
in
add
cmp
xchg
sub
dec
fstpt
xchg
lret
add
fistl
mov
stc
adc
fsubs
fwait
out
shlb
xchg
mov
inc
scas
sbb
lock
sub
push
pop
push
mov
leave
cmp
pop
scas
mov
pop
push
xchg
lock
jmp
mov
dec
rcl
dec
aad
xchg
insb
in
cmp
std
jmp
push
or
ret
fbstp
aam
push
sbb
or
dec
pop
idivb
jl
and
dec
push
repz
inc
mov
lods
std
sti
push
je
daa
je
xor
test
hlt
cmp
jnp
add
and
jecxz
sub
or
pop
sub
int3
aas
out
or
sbb
in
xchg
push
clc
jmp
xchg
xchg
jecxz
cmp
scas
lods
jge
jecxz
hlt
es
adc
jmp
repnz
fdivl
xor
out
outsl
movsb
mov
xchg
ljmp
pop
repnz
pop
or
loopne
xchg
mov
popa
jmp
in
or
out
sbb
xor
cmp
sbb
cmpl
aam
inc
rcrl
push
and
test
dec
fimuls
scas
pop
sbb
inc
xor
xor
out
lods
mov
fsubrs
icebp
out
push
aam
mov
jecxz
mov
sbb
sbb
aam
cmpsl
sti
aam
cmp
out
adc
ds
fs
adc
mov
pop
scas
aas
xchg
lret
cmpsb
push
push
pop
inc
sbb
xor
push
sahf
mov
dec
dec
xor
lock
js
xor
dec
and
aam
test
clc
push
jb
mov
adc
leave
mov
jmp
aaa
xor
pop
in
push
cmp
cltd
sbb
push
cmpl
ds
pop
add
xchg
inc
inc
fstl
inc
push
in
stc
in
in
es
xchg
or
movsl
mov
dec
adc
mov
sarb
dec
ficoms
shlb
out
bnd
jle
loopne
adc
sub
push
push
in
inc
cmp
scas
sbb
std
xor
test
bndstx
jl
enter
add
push
out
hlt
daa
push
sbb
mov
sbb
dec
arpl
push
xchg
push
cli
mov
jae
mov
mov
rcrb
add
cltd
cmpsb
sub
mov
mov
lahf
xchg
xchg
and
rcr
sub
sub
loope
jg
jae
dec
inc
scas
xor
or
pop
add
test
mov
clc
xor
inc
mov
call
clc
jp
adc
sbb
xchg
pop
cmp
int3
xchg
adc
push
je
test
mov
push
mov
stos
and
xchg
int
loop
fsubrl
mov
cmpsb
stc
lret
cmpsb
pop
jp
mov
test
jmp
and
jns
jo
add
sahf
mov
push
aam
push
mov
rep
xor
mov
push
aam
stos
outsl
mov
inc
repz
test
push
ret
lahf
mov
mov
repz
lahf
sbb
xchg
cmp
add
insb
loope
jno
xlat
outsl
lods
push
pop
in
insl
or
push
fstpl
int
ds
and
inc
push
sub
add
dec
push
adc
jl
jns
insl
ja
add
insl
ds
inc
mov
in
es
sbb
dec
inc
xchg
jo
leave
mov
repz
rclb
sub
cmpl
mov
in
push
test
fldt
popf
fmul
scas
insb
fidivrs
aad
cmp
jae
out
mov
adc
pop
hlt
dec
pop
add
and
hlt
push
xacquire
cmpb
outsl
fdiv
shll
mov
ss
pop
ret
or
out
xchg
push
xchg
ljmp
add
dec
sahf
and
or
and
in
mov
or
in
sbb
mov
sti
and
push
xor
pop
cmp
fcmovnb
push
and
push
nop
mov
insb
cmpsl
inc
push
xor
pop
and
jnp
stos
sahf
jg
in
in
cmp
daa
ror
xlat
xor
ret
sahf
in
lds
inc
test
push
sub
sbbl
ror
sub
xor
out
fs
push
mov
fildll
imul
sub
test
hlt
sbb
insl
xorb
cmc
pop
packsswb
hlt
divb
mov
inc
lret
loop
pop
mov
lret
fstpt
test
lret
nop
std
bound
daa
pop
aad
jmp
into
sarb
and
mov
dec
and
nop
sahf
stc
psrlw
mov
or
sar
xor
mov
pop
push
inc
xchg
inc
or
fldt
loope
inc
sub
sub
jne
mov
pop
sbbl
inc
mov
cld
push
in
dec
jl
adc
loope
jns
sahf
mov
mov
mov
mov
jnp
fwait
call
jns
int3
sbb
daa
aad
fxch
or
jecxz
inc
insb
outsl
jb
xor
jg
ja
mov
pusha
dec
repnz
in
sub
push
xchg
ljmp
jp
lea
cmp
push
stos
or
call
sahf
cmp
xlat
mov
inc
or
sbb
scas
sarl
shlb
push
mov
sarl
pop
xor
fisubs
les
inc
popf
dec
in
cli
pop
test
xchg
dec
adc
mov
leave
fucom
push
push
pusha
mov
pop
sbb
cmp
mov
mov
xorb
xor
cmp
xchg
pop
cmpsb
pop
cmp
adc
push
out
int3
push
dec
pop
pop
pop
adc
out
sbb
aad
test
cli
ljmp
rorl
faddl
sbb
dec
sub
sarl
inc
int
fs
lret
popf
out
pop
loopne
aas
enter
and
jae
cli
sub
xor
sub
xor
popf
and
cmp
icebp
scas
or
sub
movsb
or
adc
xchg
aad
cmp
or
repnz
pop
push
out
inc
adc
mov
mov
jo
stc
jns
jecxz
xchg
cld
or
mov
dec
js
vaddsd
shrl
lahf
cltd
push
pop
and
lock
push
mov
xor
push
add
mov
sub
mov
ds
lahf
cmp
stos
repz
movsb
adc
lea
inc
sbb
addl
push
iret
inc
inc
rcr
cli
cmp
pop
jnp
stos
xor
xchg
rcrl
sub
mov
xor
icebp
mov
cmp
nop
mov
xchg
pop
in
mov
jecxz
mov
pop
pop
outsl
aad
mov
xchg
in
push
cmp
icebp
mov
pop
stos
enter
aaa
jg
insb
loopne
cmp
pop
inc
sub
stos
dec
cltd
push
adc
clc
out
mov
lcall
leave
push
negb
xchg
lahf
out
test
dec
or
lahf
out
daa
imul
data16
mov
mov
mov
mov
inc
daa
sbb
in
nop
mov
aam
nop
push
ret
and
push
cmpsb
rol
inc
cmpsl
movsl
cmp
stc
rolb
pop
out
or
inc
mov
in
aam
pushl
inc
mov
adc
pop
orb
in
enter
pop
loope
and
sub
xor
cwtl
test
or
sahf
mov
jl
imul
jnp
cmp
add
mov
rcll
mov
push
stos
ret
sbb
cli
loope
dec
ss
les
push
mov
cmpsb
adc
sbb
adc
xor
inc
dec
dec
mov
and
lcall
nop
aas
fidivl
jg
stc
push
add
mov
mov
insl
or
pop
xchg
bound
enter
cmp
cld
adc
out
or
pop
xor
nop
or
iret
adc
mov
jns
cmp
sub
sbb
hlt
adc
inc
adc
mov
jo
mov
adc
jne
repnz
ficoml
fbld
pop
ljmp
sbb
push
jae
jmp
xor
aad
lret
leave
scas
fsubs
pop
mov
jmp
sbb
in
mov
push
jnp
push
mov
dec
into
mov
cmc
cmp
fdivl
push
mov
sub
sbb
jp
sub
cmpsb
or
stc
out
adc
les
xchg
push
add
out
mov
add
cmp
xor
in
movsb
in
clc
out
adc
imul
ds
orl
repnz
mov
xor
cs
fdiv
inc
pushf
sbb
add
adc
lock
test
and
mov
and
jns
imul
mov
pop
inc
pop
xchg
movsl
xor
arpl
sahf
sub
xor
cmc
mov
cld
xor
or
popa
out
jae
lock
jp
test
push
aaa
jg
and
inc
jecxz
mov
xchg
lods
es
adc
xchg
adcb
das
rcrl
inc
das
push
mulb
or
fwait
xor
cmp
add
repnz
ja
stos
jmp
pop
jb
ljmp
push
cmp
xorl
imul
testb
into
decl
mov
sub
dec
dec
sar
xorb
push
test
shrl
loop
or
lods
dec
sub
enter
inc
decl
stos
movsb
repnz
adc
int
add
jns
test
mov
add
sti
into
jo
jnp
into
sbb
jmp
sarl
test
rclb
mov
xchg
xchg
repz
ss
inc
test
inc
mov
cmp
inc
and
cs
xchg
nop
lods
push
test
mov
sarb
adc
out
call
das
mov
pop
inc
dec
and
stos
in
mov
mov
cmp
push
xor
out
push
repz
add
in
push
dec
in
in
mov
fildl
mov
push
push
arpl
mov
lods
stos
lock
xor
hlt
shll
fbstp
roll
mov
inc
xor
dec
pop
pop
out
mov
lods
xchg
test
movsb
push
add
test
stos
sub
imul
pushf
pop
sub
push
xchg
or
iret
push
fstpl
xchg
pop
pop
loop
add
xor
jmp
pop
push
lret
xchg
popf
inc
jne
out
pop
movsl
mov
arpl
mov
mov
test
mov
push
stos
or
test
dec
insb
mov
icebp
sub
push
fiaddl
pop
cwtl
test
dec
nop
sub
mov
push
mov
adc
adc
out
mov
addr16
sub
push
lahf
insb
inc
add
add
ljmp
out
pushf
xlat
decb
call
adc
adc
pop
cmp
mov
lret
inc
or
jns
cmpb
sbb
out
or
cwtl
add
add
xlat
mov
and
test
jae
cmpsl
jo
in
push
stos
in
jle
jo
outsb
xor
out
cmpsb
cs
xchg
clc
adc
sbb
movsb
pop
aad
std
or
adc
mov
xchg
add
sbb
xchg
and
xor
push
ret
push
insl
add
fldt
push
adc
jbe
movsb
or
push
jg,pt
pop
sub
inc
jae
mov
cmp
mov
or
push
xchg
mov
mov
jne
pop
daa
aaa
add
ljmp
test
mov
jbe
sbb
or
stc
shrl
test
cwtl
and
jmp
lea
or
or
sbb
push
rol
jae
ljmp
mov
mov
flds
and
lret
push
xlat
adc
fdivs
sbb
fmuls
dec
out
cmp
aad
jno
adc
or
inc
xchg
hlt
sbb
push
and
lock
adc
cmc
add
inc
popf
outsb
loope
or
cmp
push
mov
fadd
dec
dec
lea
add
pop
lods
call
mov
rclb
lods
inc
or
or
jg
push
sub
aam
xchg
sbb
enter
mov
jo
jecxz
pushf
mov
js
jecxz
xchg
sti
rorl
inc
xchg
push
xor
push
pop
and
push
clc
jl
cs
fcompl
pop
test
jnp
and
aad
xchg
jp
rolb
adc
jb
jb
mov
cmpsb
in
scas
outsb
fnsave
jge
sbbb
jne
jns
or
sbb
imul
push
push
add
nop
mov
sub
jne
xchg
and
jl
jmp
sub
das
js
dec
inc
add
mov
scas
mov
inc
or
jns
xchg
mov
xchg
ret
mov
idivb
mov
or
sar
xlat
out
out
push
xor
stos
inc
jmp
sbb
mov
fnstsw
mov
rol
mov
add
add
cmp
adcb
and
sub
jbe
pusha
lret
les
fidivs
ret
or
addl
call
mov
push
add
rcrl
fsubs
adc
pop
in
in
dec
out
and
outsb
mov
cmp
test
add
ljmp
jbe
pop
lods
jle
adc
arpl
sub
push
xchg
cmpsl
dec
pushf
inc
and
mov
gs
sar
xor
dec
sbb
cltd
push
outsl
sbb
mov
adc
imul
jle
repz
and
icebp
cmpsb
push
sub
cmp
shll
icebp
scas
jmp
icebp
pop
aad
add
jae
fmulp
jne
sbbl
testb
dec
loope
xchg
sub
mov
arpl
jbe
add
int3
pop
iret
mov
pop
push
inc
fcmove
mov
mov
popf
jbe
ficomps
leave
mov
les
adc
je
and
in
imul
xchg
xchg
enter
aas
add
divb
out
sti
jnp
insb
and
adcl
test
pusha
daa
pop
dec
rorb
icebp
mov
scas
repnz
jg
arpl
fcomi
and
push
loopne
pop
loope
xchg
dec
int
mov
mov
inc
hlt
fcmovnbe
je
shll
out
js
imul
push
orl
dec
cmpsl
inc
mov
imul
ret
mov
and
mov
imul
push
inc
scas
lahf
sahf
enter
cmc
xor
icebp
repz
dec
dec
inc
loop
mov
mov
sub
lret
test
dec
xor
std
ja
sbb
int3
dec
jecxz
outsl
inc
out
sti
and
inc
mov
sub
mulb
addr16
push
std
iret
pop
inc
fcmovbe
ljmp
or
push
into
xchg
xchg
pop
and
push
inc
jle
rorb
adc
push
dec
xchg
outsb
inc
cmp
repnz
jg
cmp
xchg
pushf
sbb
out
adc
scas
insb
and
sti
ficomps
and
rorb
cmc
adc
or
into
push
in
inc
out
pusha
test
adc
pop
repz
pop
mov
lcall
fmull
sahf
stos
fs
pusha
pusha
rorl
enter
or
sub
test
aad
leave
sub
lret
shll
rclb
ja
imul
mov
repnz
and
call
je
dec
fs
in
xchg
mov
add
sbb
push
mov
sub
mov
add
cmpb
mov
in
jg
jle
mov
out
in
subl
jl
sbb
fisttps
cmp
dec
jns
mov
cmpl
int3
in
test
aaa
sbb
pushf
les
xor
std
push
dec
pop
jecxz
mov
add
ror
or
push
push
push
dec
ss
dec
lret
jl
nop
cmp
jae
mov
mov
clc
push
les
jg
mov
fcmovne
or
xor
repz
ret
lock
add
test
xchg
mov
loopne
mov
jns
rorl
notb
fnstsw
sub
rclb
jecxz
xchg
xorb
inc
test
jle
pop
in
leave
xor
inc
cmp
ret
cmp
aaa
jl
sets
push
outsb
xchg
inc
mov
sub
pop
xor
cmpsl
lds
jo
test
lahf
pop
add
shll
push
int3
xlat
fcoms
jnp
xor
das
fistps
sub
sub
out
inc
xor
mov
lret
or
mov
daa
lock
movsl
scas
sbb
and
inc
ret
pop
rcll
je
dec
adc
js
addb
sbb
lock
cmp
aad
movsl
sbb
imul
cmp
mov
mov
xor
push
cmpsb
cwtl
and
imul
push
data16
sbb
or
aas
mov
sub
inc
pop
pop
sti
sub
or
dec
scas
shrb
jge
xchg
mov
imul
lock
inc
jnp
push
inc
mov
sub
popf
outsb
pusha
jno
add
jne
inc
lods
das
xchg
push
ja
pop
aam
loope
and
add
jmp
xlat
insb
dec
pop
ss
pop
hlt
push
xchg
sahf
mov
adc
mov
mov
mov
fldt
cmp
push
push
rorb
xchg
mov
mov
pop
testb
bound
mov
jecxz
sbb
aas
or
add
mov
fs
sub
and
xchg
out
xorl
push
xlat
pop
jbe
sbb
dec
inc
xor
mov
fstp
sbb
pop
hlt
nop
decl
clc
test
xor
stos
sbb
sub
cltd
outsb
mov
xor
loop
xor
mov
mov
test
cmpl
dec
jo
xor
scas
mov
cmc
mov
lret
jge
xchg
dec
add
push
pop
pop
jecxz
or
repnz
test
scas
in
inc
test
jg
rcr
jle
lods
adc
xor
test
pop
cmp
icebp
adc
cmp
test
cmp
test
cmp
lds
push
jecxz
clc
arpl
cmc
add
imul
sbb
xor
cmp
sub
gs
jle
jnp
sahf
push
adc
cmpsl
xor
test
pop
jle
jbe
sbb
cmp
dec
push
inc
les
xchg
aam
sbb
cmpsl
sub
call
pop
sbb
inc
mov
adc
cmp
fisubs
sbb
inc
scas
les
mov
fcoml
leave
jecxz
mul
adc
ret
popa
leave
in
stos
jge
leave
pop
push
mov
jecxz
aam
fsubr
sbb
fildll
sub
enter
or
mov
adc
adc
adc
xor
shl
add
scas
int
sbb
jne
push
scas
je
xchg
cmp
in
cmpl
mov
ficoms
xlat
push
inc
push
int3
mov
sub
adc
lahf
and
push
jo
repz
mov
sbb
ss
xor
pop
add
mov
or
fldl
scas
jbe
xchg
pop
or
jmp
jo
dec
xor
call
cld
shll
lea
jle
cmp
sbb
ret
mov
js
and
hlt
fsubl
xchg
sbb
lret
cld
and
mov
and
cmp
movsl
pop
jae
fiaddl
fwait
dec
js
sub
std
add
test
mov
xlat
adc
cmc
xor
mov
pop
pusha
push
divl
sub
xchg
cli
pop
mov
sub
roll
in
mov
push
mov
push
jo
pop
sahf
xor
icebp
cmp
insl
addl
shl
jecxz
mov
mov
scas
dec
add
pusha
and
lds
push
mov
pop
addr16
sub
insl
ficomps
cmp
fcoml
lods
push
movl
adc
sbb
mov
stos
mov
bound
add
bound
scas
rcll
shrb
adc
aam
and
mov
popa
mov
stos
xchg
faddl
imul
jecxz
cmp
in
mov
mov
mov
shrb
jl
sub
pop
sbb
out
xor
mov
push
cmp
repnz
inc
addr16
fstl
cmpl
jno
in
insl
mov
ja
addr16
subl
sahf
rclb
mov
mov
adc
loop
cli
out
jg
in
das
cltd
out
jb
test
xchg
lods
repz
jnp
and
mov
and
cwtl
pop
mov
xchg
flds
sub
in
push
aas
jge
js
in
push
dec
xlat
addl
mov
icebp
mov
mov
setae
jno
jb
push
int3
dec
hlt
fdiv
push
or
lret
jno
outsl
lock
dec
add
xor
lods
mov
or
shrl
mov
jne
push
test
ret
fcmovnu
arpl
push
inc
or
fldcw
adc
cmc
stos
call
test
inc
cmp
ss
iret
or
push
xacquire
clc
xchg
inc
xor
lret
shll
and
dec
jnp
cmpb
fwait
call
rorl
mov
mov
pop
jae
mov
aas
sub
clc
out
jns
dec
cmp
jb
jbe
in
mov
mov
loope
xchg
div
push
xchg
jl
std
push
mul
hlt
mov
sbb
pop
pop
les
xchg
popf
cltd
mov
xor
inc
rclb
mov
sbb
lret
or
cmp
clc
push
pop
roll
xor
inc
sub
loop
pop
jle
add
cmp
aaa
sub
lret
fst
sbb
scas
xchg
inc
sbb
sub
mov
js
stos
mov
in
jg
add
push
pop
pushf
rorb
or
mov
call
xchg
jmp
mov
push
dec
dec
push
rorb
imul
mov
sub
lea
icebp
incl
cmp
push
stos
jecxz
pop
loop
add
sbb
cmp
lods
inc
test
test
imul
filds
jge
test
sbb
push
ss
leave
xchg
ficoml
push
add
jmp
xchg
or
ss
push
ljmp
xchg
inc
pcmpgtd
test
popa
mov
lret
mov
aam
dec
jno
lret
and
jmp
lock
pusha
fucomip
adc
jge
xor
test
sbb
dec
xor
dec
add
mov
and
dec
popa
stos
xchg
lret
adc
cmp
sub
loop
adc
adc
jl
and
fldt
lcall
mov
in
sbbl
inc
das
fnsave
add
test
jns
mull
dec
xchg
adc
std
aad
sub
into
out
mov
cmpsb
adc
xchg
mov
das
sti
push
adc
sbb
push
das
sub
push
in
sub
shlb
jnp
xchg
mov
jecxz
sub
test
or
in
add
sub
gs
cld
test
mov
aaa
mov
or
jg
inc
cmp
loop
outsb
jmp
mov
idivl
out
jno
push
mov
mov
fs
pushf
xor
dec
aad
jno
add
inc
in
inc
adcb
cld
leave
xchg
xor
mov
cmpsb
jl
gs
enter
inc
sahf
cmpsb
pop
pop
aad
xchg
imul
nop
icebp
jg
cwtl
mov
jbe
dec
sbb
nop
shlb
pusha
iret
mov
fmuls
push
sbb
mov
push
outsl
mov
add
shlb
dec
jne
hlt
std
adc
jge
call
xchg
and
jae
push
or
into
stos
xchg
mov
faddl
jmp
cmp
mov
push
stos
dec
push
inc
lcall
fiaddl
xchg
ja
jbe
jecxz
xchg
lahf
ret
pop
jnp
jo
aas
jge
leave
and
jbe
dec
pop
repnz
sbb
loopne
or
fmull
push
test
popf
push
adc
bound
jge
stc
sbb
mov
fwait
jb
in
dec
jecxz
and
stos
movb
lods
dec
pop
lods
shl
aaa
push
mov
out
inc
inc
jns
nop
mov
pop
mov
in
or
jecxz
sahf
pushl
mov
xchg
push
mov
ret
dec
pop
push
je
jmp
add
test
xor
add
cltd
or
sub
lahf
sbb
sahf
sbb
fisubrl
sub
mov
and
pop
lcall
jae
loope
sbb
mov
shlb
xor
cmpb
lret
pop
addl
nop
adc
fcmovbe
push
xchg
sbb
mov
pushf
arpl
insb
or
xchg
push
jns
ret
hlt
negb
ret
into
xchg
or
mov
addb
stos
fisubs
mov
inc
repnz
loopne
xchg
lods
mov
mov
outsb
jg
xchg
mov
lcall
out
dec
adc
cmp
aam
out
pop
fistpll
fldenv
mov
sti
out
add
mov
bound
repz
daa
cmpsl
mov
lods
out
cmp
mov
xchg
shll
mov
cmp
pop
jl
cmp
pop
xchg
sbb
mov
or
mov
jb
std
inc
push
mul
sbb
insl
icebp
adc
in
cmp
push
mov
fs
jecxz
cmc
je
fldcw
cs
inc
xchg
ret
fsts
lds
lods
sub
cmp
dec
jg
sbb
xchg
or
pop
and
and
test
clc
roll
stc
or
xor
lret
arpl
inc
mov
je
sub
inc
push
enter
cmp
mov
dec
repnz
and
jmp
jecxz
adc
cmc
sub
dec
xchg
das
push
or
mov
sbb
add
aas
fidivl
idivl
add
push
push
and
adc
repz
decb
aaa
ljmp
cli
inc
dec
inc
add
sbb
mov
ficoml
pop
dec
xchg
sbb
aaa
sub
cmp
push
pop
adc
xchg
add
outsl
insl
pop
stc
hlt
iret
mov
mov
mov
mov
jg
loop
mov
mov
fldcw
xchg
push
inc
or
or
mov
mov
fisttpl
sub
pop
xor
and
or
ss
mov
adc
cmp
dec
jecxz
stos
inc
add
das
out
jmp
stos
sub
ret
cli
pop
add
lret
inc
rcrl
sub
nop
testl
sidtl
test
cmpsl
or
out
or
aas
inc
lret
je
push
ds
fdiv
mov
popa
sbb
mov
orb
psllw
cmp
je
std
push
push
add
ficomps
lds
pop
aad
mov
loope
mov
mov
xchg
loope
and
outsb
loope
aas
dec
xchg
pushf
in
aas
loope
mov
mov
or
fwait
mov
cltd
and
out
imulb
mov
jmp
adc
iret
sbb
cmp
inc
icebp
cwtl
hlt
daa
pop
stc
das
push
mov
pop
lock
mov
xorb
and
xor
inc
pop
xor
add
mov
cltd
cld
inc
mov
pushf
cmp
cmp
ds
pop
push
repnz
cwtl
rorl
jne
test
jle
in
outsb
pop
loope
push
lret
ret
sbb
mov
test
and
dec
ret
push
jb
ficoml
adc
lds
mov
add
push
gs
jle
jbe
inc
xor
xchg
loop
enter
ror
insb
in
push
clc
push
arpl
repz
fsubrs
push
pop
jle
imul
mov
and
adcb
adc
xor
cltd
jecxz
aam
add
shlb
cli
call
jle
jae
out
add
mov
inc
aam
jmp
inc
lret
insb
mov
sub
inc
inc
mov
daa
imul
cmpsl
je
jecxz
popa
adc
rorl
xor
popf
jae
sbb
sub
push
mov
jo
add
jbe
stos
stos
stc
mov
sub
mov
rorb
mov
test
imull
inc
cwtl
lcall
rolb
add
cli
cmp
nop
movl
xchg
mov
jno
cmp
jl
add
fbstp
add
adcb
jnp
shlb
mov
jbe
sbb
xor
dec
les
push
add
out
adc
das
pushf
fcom
addr16
fwait
jle
fdivrl
push
repnz
arpl
push
inc
mov
sub
mov
lock
out
jo
scas
adc
adc
adc
mov
insb
mov
nop
lea
sbb
sub
lds
jb
mov
pop
adc
daa
mov
add
popf
mov
in
and
or
or
cwtl
popf
push
out
test
and
pushf
idivb
mov
jp
out
push
movsl
xor
add
es
lds
sbb
out
jmp
xor
and
cmpsb
shrl
std
cmp
stc
mov
cmpsb
push
jmp
mov
jns
inc
jmp
push
sahf
and
out
rcrb
mov
scas
aaa
pushf
cmpsl
data16
mov
es
fimuls
jns
push
prefetchwt1
xchg
push
cld
pop
xor
mov
test
stos
sbb
sahf
stc
je
inc
mov
xchg
lock
mov
rcll
jns
mov
out
out
pop
jmp
xlat
stc
add
jp
imul
sub
mov
ljmp
ret
xor
sub
inc
xchg
dec
jb
mov
sub
pop
or
icebp
pop
lcall
jnp
stc
push
test
push
add
jecxz
imul
hlt
sbb
inc
jbe
xor
mov
lret
addr16
in
lods
cmp
mov
ret
push
out
mov
aad
sbb
fs
sbb
inc
inc
mov
mov
fstps
and
add
mov
jne
xor
rcrl
dec
xchg
jae
in
rorb
fstpt
xor
fisubl
mov
ret
xor
mov
jecxz
pop
mov
inc
adc
inc
push
push
dec
dec
mov
jne
cmpsl
ret
loopne
push
sbb
mov
xchg
loopne
inc
xor
ss
sbb
mov
pop
pop
dec
in
push
lahf
mov
push
cwtl
js
inc
mov
out
mov
loop
jg
jge
mov
push
mov
cld
or
loope
sahf
ja
jmp
testl
aam
out
mov
add
cs
push
sbb
sub
xchg
aam
stos
mov
imul
arpl
add
repz
loope
xor
scas
jns
sahf
lret
jmp
and
cmp
jae
jb
and
dec
out
mov
aam
mov
and
repz
sahf
lods
std
cli
rclb
inc
mov
jge
loop
cwtl
sbb
add
add
insl
mov
pusha
add
xchg
mov
push
sti
icebp
push
jg
inc
lahf
mov
sbb
stos
imul
scas
cs
lods
jo
jns
test
inc
imul
mov
xor
lds
addr16
mov
out
sbb
lds
insb
push
loop
fisttps
pop
or
iret
enter
mov
ret
ret
pop
mov
mov
sbb
into
adc
push
inc
in
outsl
mov
mov
sub
fldcw
and
push
xchg
fnstcw
ja
les
adc
add
inc
lahf
loope
les
sub
pop
fmulp
ja
ret
add
or
adc
pusha
sub
mov
daa
xlat
and
in
adc
sub
mov
inc
push
pop
int3
mov
and
andb
mov
in
cmp
and
sti
and
add
jmp
cmp
adc
xchg
inc
push
dec
xor
out
mov
add
ss
popf
das
mov
push
inc
ja
push
xchg
xor
mov
mov
jns
mov
loopne
or
icebp
test
mov
insl
cmp
inc
pushf
insb
mov
add
testb
lds
push
sub
stc
xor
mov
and
ss
popf
enter
xchg
pop
jp
fists
shlb
fnstcw
xor
out
aam
into
dec
data16
inc
fidivrs
push
std
dec
addb
mov
mov
push
push
les
jmp
call
dec
pop
incb
imul
mov
mov
jns
push
decb
testl
popl
add
cmp
cmpsb
hlt
pop
dec
imul
xchg
dec
into
out
sahf
outsl
fstl
sub
mov
aaa
ja
repnz
leave
adc
inc
fs
movsb
sub
lea
pop
adc
cmpsb
cs
loop
pop
out
mov
pop
gs
sahf
sub
cmp
repz
push
ds
cmc
mov
subb
dec
sub
inc
repnz
push
scas
scas
cmp
mov
add
mov
lcall
scas
movsb
add
jae
inc
mov
or
lahf
pop
xor
jge
scas
call
out
and
mov
cld
mov
scas
or
or
fisttpl
mov
cld
lea
jo
loopne
cmp
push
mov
xchg
mov
insb
adc
xor
jmp
mov
scas
pop
push
xchg
xchg
xlat
xchg
cmp
cmp
stos
cli
xchg
mov
sub
imulb
aas
repz
shlb
jno
xor
popa
dec
dec
scas
in
stc
flds
repnz
and
sub
dec
add
xchg
push
pusha
xchg
insl
fldenv
xchg
lahf
shrb
fdivs
xor
mov
mov
xchg
imul
iret
xchg
mov
mov
sub
test
pop
xor
mov
or
push
sub
subb
xor
ror
lcall
stos
fwait
and
ret
insb
xchg
cmc
push
repnz
sahf
insb
movsl
cli
lcall
xchg
inc
addr16
mov
outsb
ficoml
or
or
rcl
test
cmp
adc
mov
ret
cmp
mov
incb
outsb
lea
jo
es
xchg
bound
stc
lret
jo
dec
pop
inc
lock
xchg
ret
and
movsl
push
xchg
dec
icebp
or
sarb
xlat
push
ror
and
cmp
and
mov
inc
inc
stos
roll
gs
xor
or
outsl
xchg
jge
jecxz
ljmp
pop
jnp
jne
mov
sahf
mov
sahf
iret
aam
popa
push
inc
xchg
fisubrs
cli
pop
pop
stos
ljmp
mov
mov
cmpsb
movsl
add
push
dec
push
sub
fwait
aam
mov
mov
jl
ror
shll
adc
pusha
lods
sbb
mov
cltd
or
push
jnp
push
sarl
xor
pusha
sub
push
pop
lret
push
test
fwait
sub
sub
mov
mov
loope
pusha
pop
jle
repnz
fimull
movsl
and
ja
lahf
pop
or
popa
ret
aad
movsl
push
lock
lock
rorb
pop
sub
cs
jecxz
xor
and
jle
es
push
popa
insb
push
repnz
xchg
mov
sbb
fldl
pcmpeqb
loopne
push
mov
jmp
les
pop
loop
loopne
xchg
nop
jmp
std
mov
lcall
cmp
mov
push
dec
cmp
std
enter
inc
sbbb
aam
pop
dec
mov
push
sbb
adc
jmp
push
pop
xchg
push
test
lock
push
icebp
cli
in
lods
push
imul
mov
pop
mov
xchg
gs
addr16
adc
aad
in
repnz
xor
test
sbb
xchg
pop
lret
inc
sti
inc
mov
stos
jae
sub
test
dec
sbb
stc
inc
inc
push
cwtl
mov
jge
push
sbb
mov
shlb
shrb
jp
sbb
pop
movsb
imul
mov
call
repnz
sbb
sub
mov
adc
test
jnp
lods
std
sbb
or
lahf
jae
sti
daa
mov
fimuls
push
rcrl
jo
and
xchg
cli
pop
inc
test
push
test
fsubl
in
cmp
mov
lcall
and
out
jp
sub
fidivs
dec
popl
mov
fs
loope
and
andl
jecxz
and
xlat
ss
in
fildll
inc
inc
notl
cmp
sbbl
dec
sti
mov
pop
movsb
mov
in
out
adc
test
push
mov
imul
ds
daa
stc
inc
aam
jmp
je
or
cld
pop
stc
add
cwtl
frstor
cmp
je
mov
cmc
sub
in
imul
push
inc
mov
adc
and
xlat
and
jle
fs
sbb
and
sbb
mov
sbb
sbb
and
in
repz
popa
jnp
stc
sbb
loopw
pop
mov
fildl
decb
pop
lret
lds
inc
mov
dec
and
xchg
movsl
mov
xor
sub
enter
hlt
and
std
mov
leave
xor
add
ror
or
mov
sbb
xchg
jmp
and
orl
or
xor
fistl
mov
addr16
loope
mov
cs
push
js
mov
pop
jo
int3
filds
mov
mov
sbb
std
rol
faddl
sub
aam
sbb
sti
in
lods
cmp
jecxz
mov
xor
shr
jl
outsl
cs
or
jmp
das
xor
andb
lcall
xlat
shrb
mov
xchg
or
daa
jl
inc
icebp
jb
addr16
add
pop
mov
lcall
push
jmp
loope
jl
push
inc
shll
lahf
movsb
xchg
mov
push
repnz
lods
inc
xor
or
pop
mov
push
cmp
jo
arpl
jg
push
ret
pop
mov
shlb
and
mov
lea
addr16
xchg
mov
inc
cmpsl
rolb
bound
daa
into
mov
sub
push
pushf
lods
ret
jecxz
xchg
xchg
out
lds
mov
adc
sub
lret
lea
imul
loopne
xchg
loope
sbb
cltd
fnsave
ljmp
sub
inc
mov
add
dec
jmp
ja
popf
movsb
pop
in
clc
xor
push
mov
jne
push
xor
notb
mov
adc
leave
fimuls
push
int
add
sub
pop
mov
pop
cltd
pop
cwtl
dec
icebp
loopne
mov
push
imul
xchg
mov
jl
dec
je
test
adc
cmc
sbb
clc
stos
lret
je
lods
lods
pop
in
lret
imul
in
mov
flds
sub
cwtl
test
arpl
xchg
repz
stos
scas
shrl
fistl
or
mov
xchg
rorb
mov
sub
dec
dec
jmp
xor
and
jns
mov
fdivs
push
pop
testl
xchg
push
aad
insl
push
sbb
sbb
xchg
xchg
mov
push
mov
mov
mov
out
scas
or
rorb
pop
jge
adc
bound
lea
outsb
mov
jl
dec
sub
rorb
adc
add
jne
dec
pop
pusha
mov
mov
cmp
aad
ja
push
adc
jle
jne
sub
inc
xor
out
inc
in
orl
mov
inc
mov
mov
or
pop
sub
enter
outsb
rcr
pusha
addb
add
inc
sti
xchg
sbb
or
pop
popa
mov
xchg
adc
jns
dec
xchg
inc
lods
and
push
inc
mov
aaa
push
sub
jne
xchg
jbe
std
sub
test
mov
and
imul
addl
pop
loopne
lods
out
sbb
cmp
in
xor
cs
add
xchg
insb
jno
out
xchg
arpl
xor
lods
xchg
cmp
pop
cs
cmpsb
or
mov
xor
or
xchg
js
mov
push
jno
outsl
xor
dec
add
cs
ret
je
inc
sub
push
sahf
mov
rcll
testb
mov
xchg
mov
sub
loop,pt
jno
hlt
out
jb
ret
fnstenv
inc
ficompl
icebp
xchg
lahf
add
mov
push
ss
add
das
loopne
mov
imul
stos
xorb
test
insb
out
rorl
repz
neg
lods
test
cmp
je
sub
data16
popa
cmp
and
adc
decb
inc
outsb
push
jne
ss
icebp
std
jp
popf
insb
popf
dec
in
jg
inc
sub
adc
cli
jmp
jbe
shlb
clc
push
sbb
mov
jnp
pop
stc
push
andw
je
mov
sub
adc
mov
pop
inc
in
jecxz
pop
mov
add
out
push
inc
test
dec
dec
pop
push
inc
adc
add
mov
loop
mov
mov
xor
mov
lea
cwtl
mov
lds
cmp
inc
mov
dec
data16
sub
inc
movsl
inc
xchg
and
sbb
sbb
test
repnz
fisubrl
fwait
stc
xchg
and
mov
cs
out
xor
pop
and
adc
add
jb
jmp
xchg
mov
adcb
shld
or
xor
imul
test
push
xor
pop
xchg
fdivl
xchg
add
mov
cmpsl
insl
sbb
inc
scas
jp
mov
adc
sub
xor
xor
xchg
rsm
mov
push
outsb
in
inc
push
mov
ss
add
or
in
dec
int
insl
push
mov
lods
orl
lods
push
push
sbb
ljmp
mov
aaa
in
inc
xchg
fistpl
jle
movsb
je
jbe
push
pop
clc
and
test
pusha
repz
ds
daa
sahf
js
cmp
add
sti
mov
out
lret
lahf
outsb
jecxz
mov
dec
in
mov
sbb
mov
pop
adc
repz
cmc
xchg
cwtl
xor
aas
mov
sub
pop
inc
sbb
lea
sub
xchg
jl
mov
push
sub
rorb
xchg
cmp
xor
push
inc
hlt
xor
jge
addr16
call
aam
data16
sahf
ja
ret
push
mov
or
push
add
pusha
adc
mov
fcmove
hlt
push
daa
or
out
stos
xchg
mov
jle
mov
aam
sahf
mov
mov
fwait
jl
aam
pusha
std
sahf
xchg
popf
addr16
lock
insl
add
sbb
jae
loop
stos
les
mov
loopne
insb
xchg
nop
cmovp
dec
add
fwait
adc
or
icebp
or
and
sub
push
popf
inc
inc
add
insl
mov
popa
push
call
aam
push
fbstp
jb
push
push
and
pop
daa
inc
xor
dec
ret
inc
pop
sti
movsl
mov
push
jns
mov
push
adc
loopne
mov
ja
sbb
jp
push
std
int
jge
in
icebp
pop
ljmp
addb
lea
ljmp
and
dec
and
sarl
mov
adc
int
stc
shll
es
into
pushf
je
es
sahf
addl
inc
rcr
gs
mov
and
or
mov
cmp
or
addr16
push
leave
cld
mov
lock
jge
mov
sub
mov
or
pushf
push
rolb
xchg
movsb
mov
push
xchg
cmpsl
xor
jno
test
mov
jne
int
inc
xchg
lret
stos
out
jo
lret
push
stos
ja
jb
daa
test
xchg
orl
add
mov
in
mov
push
dec
std
es
push
out
adc
jl
and
sub
lret
xor
inc
fcmove
mov
fists
mov
fs
lds
cmp
scas
inc
mov
test
test
and
cmp
xchg
int
jge
add
cli
es
add
popf
and
adc
jo
pop
jns
fucomip
in
mov
xor
xchg
xchg
ret
enter
xor
imul
cmp
sbbb
dec
cmp
pop
mov
mov
cwtl
adc
ficoms
sti
shlb
sbb
xor
mov
jo
enter
js
ret
mov
shrl
inc
adc
fsub
inc
dec
ret
js
std
push
or
aaa
aam
mov
sub
sub
test
xor
jg
sbb
add
add
ds
inc
adc
incb
aas
add
dec
lods
dec
es
xlat
ljmp
mov
sbb
lahf
xchg
pop
push
rorl
and
shl
jg
add
shr
xlat
in
xor
add
cltd
sahf
sub
xor
pop
add
push
mov
loopne
sub
in
jne
and
add
mov
out
ficoml
add
and
fldl
cwtl
cmp
mov
inc
popf
int3
mov
push
pop
dec
loopne
shrb
not
add
xor
pop
sahf
jg,pt
fwait
xchg
push
aad
scas
cltd
xor
jl
ret
sub
mov
repnz
inc
aaa
lcall
movsb
test
mov
popf
sbb
ljmp
mov
pusha
push
mov
int
imul
ds
dec
xchg
jb
inc
incb
test
imul
mov
lods
adc
stc
stos
inc
arpl
or
cmp
xchg
ja
divl
xor
ss
adc
xor
das
addr16
push
aaa
cmp
pop
xor
jecxz
mov
lret
xchg
push
cld
add
push
cmp
jecxz
and
cmovno
repnz
xor
pop
arpl
inc
jne
xlat
xchg
icebp
pop
popf
movsl
ja
leave
and
arpl
cmpsl
ficoml
and
sbbl
pop
inc
pop
sub
pop
cmp
jo
inc
aad
aaa
fwait
lock
xchg
jl
arpl
adc
pop
out
fnstsw
xchg
out
fiadds
ljmp
xor
jg
xchg
mov
xlat
inc
jo
das
mov
test
sbb
icebp
inc
fnsave
scas
mov
popa
pop
stos
add
mov
cmpsl
mov
cmpsb
jnp
pushf
or
jae
hlt
sbb
test
push
pop
push
repnz
dec
in
pop
rcrl
mov
out
sub
jmp
jno
rclb
xchg
adc
lds
je
pop
xor
mov
adc
add
rorb
inc
pushl
in
pop
inc
mov
push
sbb
aas
mov
stc
sbb
or
sbb
xlat
pop
fidivl
cmp
sub
push
xor
mov
aad
mov
mov
mov
mov
adc
mov
call
cwtl
pop
adc
mov
add
scas
xchg
out
jle
shlw
shl
ffree
sub
bound
stos
xor
out
lahf
sahf
xchg
popf
lret
sti
inc
lea
arpl
cmc
xchg
out
int
rol
push
into
push
addl
ret
mov
jp
pushf
jl
xchg
pop
lods
push
scas
ror
pushf
jp
add
loope
into
fwait
scas
add
lahf
mov
inc
adc
sbb
shll
mov
or
and
pop
xlat
jb
push
and
shrl
pop
adc
sbb
mov
or
lcall
xchg
cmp
rolb
sbb
lock
test
mov
int
sbb
xor
call
test
mov
hlt
lds
jo
test
in
mov
jnp
sbb
nop
sbb
cwtl
dec
or
fdivrs
in
dec
fwait
mov
xchg
ds
std
lods
inc
mov
cmp
test
pop
jo
xchg
outsl
mov
clc
jnp
and
and
out
xchg
and
ret
lock
or
pop
movb
or
sub
mov
fs
dec
pop
push
xor
inc
lret
out
push
xchg
hlt
mov
movsb
imul
push
js
and
adcl
js
xlat
lds
daa
ds
or
repz
shlb
push
add
fistps
clc
clc
or
cmp
mov
xchg
lret
les
jnp
insb
lret
mov
pop
cmpsl
movsb
jg
xchg
mov
and
repz
dec
lcall
cmp
test
jnp
mov
jb
or
js
mov
mov
ret
pushl
or
cmp
scas
pop
movsl
or
out
push
mov
roll
jg
movsl
add
inc
stos
mov
int3
enter
rcrl
xchg
mov
or
ret
xor
or
cld
mov
pop
push
xrelease
pusha
loop
push
push
dec
cltd
adc
mov
mov
clc
sbbl
cmpsl
outsl
pop
lea
xor
mov
push
nop
lods
aad
inc
data16
cmp
adc
arpl
enter
dec
nop
and
mov
ss
jo
xor
add
pop
mov
or
data16
and
enter
inc
sarb
add
add
mov
mov
adc
sbb
ret
add
ss
and
add
adc
pop
fstpl
lahf
and
ja
jne
mov
lret
add
cmp
aas
adc
add
sub
out
mov
dec
je
aaa
mov
and
gs
les
sub
lea
rolb
xor
movsb
dec
test
in
or
add
cwtl
sahf
inc
inc
adc
inc
pop
ljmp
xor
xchg
sub
xchg
cmp
dec
jne
jo
push
lret
shrb
and
pop
addr16
mov
pop
pop
sbb
mov
jmp
int3
lds
pop
add
test
aaa
les
sub
cmp
arpl
xor
jmp
sahf
xchg
clc
xor
jne
fstp
and
adc
jp
lock
cmp
dec
mov
insl
call
mov
sub
stc
fs
out
pop
inc
mov
mov
aaa
test
cld
add
jbe
addr16
mov
jno
andb
das
xor
pushf
std
out
sub
sub
cld
int3
mov
mov
mov
sar
nop
cmp
xchg
popf
lock
in
test
shrl
xor
adc
out
ds
adc
or
adc
shr
pop
addb
fisubrl
dec
mov
lods
ret
bound
gs
negl
add
lret
adc
repnz
cmp
test
ret
cmp
movsb
nop
pop
and
mov
sub
pop
movsb
pop
lcall
pop
cmp
jo
jnp
aad
lret
jmp
test
adc
arpl
je
iret
popf
cmpsb
mov
dec
mov
and
mov
jge
sbbl
mov
enter
and
xor
xchg
cmp
inc
mov
xchg
rcrb
cmp
ja
cli
pop
out
dec
inc
jnp
fsts
mov
call
and
pop
iret
jb
mov
sbb
nop
pop
pop
cmpb
ss
dec
leave
inc
push
movsb
mov
lret
shll
cmp
test
mov
fildl
jge
dec
cmp
lret
inc
or
push
sbb
inc
test
out
lea
mov
aam
rcl
sub
repnz
loop
pusha
int3
insl
nop
adc
xchg
int3
repz
jl
sahf
xor
into
jg
inc
mov
fs
aad
sbb
lods
scas
out
xchg
into
add
in
into
imul
ret
test
push
imul
sub
dec
sbb
les
xchg
repnz
jnp
and
xor
outsl
out
mov
movsl
jle
xor
mov
add
out
das
push
lret
popf
add
or
loop
cmc
cmp
xchg
inc
nop
inc
ja
xchg
sti
stos
icebp
js
popf
rcl
push
mov
or
insl
pop
mov
cwtl
ret
popf
push
dec
pop
in
jae
mov
adcb
jecxz
sub
xor
inc
jns
jge
fwait
add
pop
dec
stos
pcmpeqw
mov
dec
dec
cltd
cmc
popa
out
mov
or
lods
mov
sub
bound
pop
mov
xor
scas
and
ja
xor
xlat
mov
and
loopne
inc
inc
call
rcrl
cmp
mov
cmpsb
pop
pop
movsl
and
mov
pop
gs
jnp
cmp
es
loope
fsts
sub
xor
dec
lock
sub
push
sbb
mov
lret
lahf
mov
dec
stos
sbb
or
outsl
fimuls
xchg
mov
lods
jne
push
loopne
xor
je
push
movsl
aam
sub
pop
dec
popa
sub
mov
adc
mov
imul
pop
out
movsb
jle
nop
lahf
adc
lret
sar
das
mov
mulb
pop
adc
pop
lods
test
jno
loope
cmp
jl
je
or
inc
xor
daa
and
decb
mov
insb
add
xchg
and
fs
sbb
ret
push
mov
mov
push
movsb
cmp
or
cmc
ret
out
cmpsl
mov
lock
popf
in
aas
movb
inc
je
mov
pop
dec
mov
loop
inc
cmp
push
or
pusha
and
stos
lea
scas
adc
adc
dec
dec
pop
test
jbe
or
push
xor
push
xorl
scas
rorb
jecxz
repz
and
cli
stos
fsubl
or
aad
shlb
data16
loop
in
fdivrl
push
decb
jle
test
and
sbb
js
inc
jmp
push
imul
or
push
stos
xchg
add
popa
add
mov
in
inc
in
aaa
jp
fsubrl
ret
jae
jmp
jg
jb
mov
out
add
cwtl
je
mov
inc
das
mov
jle
mov
fisubs
pop
pop
mov
lcall
leave
cmpsb
mov
xchg
sbb
jl
adc
or
fstpt
xchg
cmpsb
daa
mov
notl
adc
cmpsl
sbb
push
idivb
out
pop
jle
jb
or
into
loop
shll
cmp
insb
jne
sbb
jnp
out
or
rcrb
inc
push
rcr
imul
data16
mov
push
clc
out
add
ljmp
pop
cmpsl
ja
xor
pusha
cli
mov
test
addr16
cmp
flds
adc
push
dec
in
sbb
mov
fs
rcr
sub
sti
out
xlat
xchg
orb
mov
loope
lcall
scas
add
scas
and
fistpll
sbbl
shll
inc
mov
hlt
xchg
inc
pop
imul
adc
add
insl
jg
insl
arpl
das
xor
mov
lcall
mov
cltd
lahf
jle
lret
rcr
push
outsl
movsb
incb
ljmp
aam
bound
mov
add
in
call
test
jl
inc
pop
fisubrs
sbb
cmp
fcom
in
stos
aaa
jb
fnsave
in
jle
inc
push
fildll
mov
sub
stos
or
ret
push
lret
les
xor
mov
inc
pushf
test
test
cwtl
lret
pop
pop
sub
dec
adc
mov
shrl
out
dec
adc
xor
jo
pushf
in
das
or
xor
movsl
imul
test
outsb
cmp
js
pop
icebp
mov
sub
cmp
xchg
inc
sbb
pop
mov
push
fistps
stc
and
ret
nop
or
mov
adc
inc
out
cmpsb
movsb
stos
jl
xchg
fldt
cld
push
inc
loope
sub
nop
out
dec
xchg
dec
push
add
push
mov
mov
pushf
aam
aam
sbb
push
xchg
xor
mov
test
add
jo
or
mov
jl
fadds
bound
inc
mov
cmp
mov
stos
test
imul
xor
xlat
scas
mov
push
arpl
xor
or
mov
push
fwait
loopne
loopne
mov
je
outsb
mov
lcall
and
pop
call
ds
out
xlat
sbb
pop
adc
sahf
clc
sti
inc
es
aas
jge
in
jbe
push
xchg
and
lea
and
and
popf
in
fwait
jne
dec
aad
ds
lahf
xchg
out
add
jne
imul
pop
fdivs
adc
andl
stos
sbb
jge
lods
jg
or
and
xor
pusha
pop
push
push
sub
lahf
push
push
mov
and
loope
gs
and
rclb
mov
popf
mov
xchg
pop
hlt
adc
lcall
loop
cmp
lahf
insb
sub
mov
xchg
inc
aad
xlat
add
pop
sbb
in
jne
pusha
mov
leave
test
xor
imul
clc
jo
mov
jg
pop
push
clc
jg
ret
and
ljmp
leave
inc
xchg
hlt
stos
bound
xchg
test
into
dec
jbe
in
xchg
push
cwtl
sub
add
inc
int
pusha
fsubl
sub
inc
inc
and
cmp
mov
cmpl
jg
jno
lea
dec
ja
mov
lcall
fwait
gs
pop
mov
xor
inc
es
or
aad
cld
cld
push
sbb
in
ja
and
std
push
mov
mov
xchg
inc
add
cwtl
mov
sbb
push
jmp
xchg
into
out
adc
jnp
jmp
adc
or
sbb
jno
repz
stos
nop
ja
call
jae
jge
mov
add
mov
aam
xor
loop
sbb
fucomip
xor
ficomps
std
push
ja
jl
mov
aas
sub
ret
adc
adc
enter
movsl
mov
testb
sub
testl
push
pop
ja
xchg
push
hlt
sub
fwait
ret
inc
xor
adc
imul
xor
leave
imul
test
fldcw
mov
cmc
outsl
rorb
les
push
jbe
outsl
icebp
or
adc
lret
js
adc
in
jns
popa
in
push
sbb
lock
sbb
mov
daa
xor
add
jne
jmp
or
xchg
inc
xchg
and
in
mov
arpl
clc
xor
or
pop
jl
pop
jp
imul
add
popa
mov
dec
jecxz
into
cmp
sub
mov
dec
cli
sub
arpl
mov
shlb
sub
push
push
lock
sub
stos
ret
out
outsl
push
leave
pop
pop
je
cmp
push
and
scas
jae
in
jo
jp
sahf
loopne
sbb
and
adc
adc
add
xchg
sti
cmpsb
fbld
shr
mov
outsb
xchg
sub
cmpsb
sub
inc
out
mov
add
lods
aad
lahf
cmp
lods
adc
adc
add
add
push
push
call
dec
gs
inc
push
pop
notb
mov
adc
push
mov
inc
xor
cmp
scas
add
cmpsb
jae
add
into
idivb
add
mov
ja
pop
inc
ljmp
clc
test
jl
add
in
lock
hlt
hlt
shrl
dec
int3
jns
pop
mov
and
xchg
xchg
jp
pop
scas
jae
pusha
cmp
icebp
test
popa
les
aam
lahf
inc
xor
adc
stos
add
add
out
mov
pop
lret
clc
dec
jmp
jno
add
pop
mov
test
add
jno
in
sbb
mov
ret
mov
jbe
sub
pop
push
insl
stos
fsubl
cmp
mov
shrb
jmp
testl
wbinvd
lret
pop
mov
and
and
test
push
mov
out
jg
adc
fwait
movsl
xchg
mov
fisubl
and
jg
mov
push
jmp
idivb
mov
pop
out
stos
and
out
jl
jp
mov
or
sbb
movsb
xchg
pushf
pop
lret
jb
mov
lock
loope
or
sub
xchg
mov
sub
bound
jge
push
stc
and
addr16
subb
cltd
in
gs
scas
je
js
shl
push
sub
inc
push
adc
faddp
and
test
pop
int3
pavgb
and
and
lcall
into
popf
aas
adc
sub
push
and
insl
repnz
fwait
or
xor
push
fldcw
popa
int3
mov
xchg
movsl
ret
jmp
push
sub
jl
push
repnz
xor
xchg
xor
shrb
movsb
int
xor
iret
adc
out
mov
push
scas
jnp
icebp
mov
andb
daa
pop
dec
sub
out
sbb
or
push
repz
and
mov
mov
filds
sub
xchg
xchg
sbb
js
xlat
jecxz
sbb
movsl
out
push
jo
lcall
adc
or
mov
and
adc
orb
adc
pop
aad
sti
loop
cmpsl
test
lahf
addl
xchg
mov
int3
and
lret
bound
sbb
jmp
xchg
xchg
adc
insb
lods
stos
adc
xchg
and
or
into
mov
push
rorl
xor
jns
sub
int3
adc
inc
or
ja
sbb
jno
cmpsb
jl
aam
popl
add
popa
mov
movsb
dec
nop
or
sti
adcb
mov
xchg
fcmovnb
fistpl
add
into
outsl
inc
aaa
adcl
mov
jmp
cmc
push
adc
vorps
push
jmp
pop
mov
gs
pop
dec
sbb
and
dec
mov
pop
insb
call
push
inc
fildl
mov
cmp
mov
mov
das
bound
rorb
jl
mov
pop
add
fwait
pop
inc
or
adc
sar
pop
push
add
fistpl
inc
push
adc
inc
mov
pop
cmpsb
call
es
imul
ljmp
pop
mov
sti
fcoml
pop
ficoms
sbb
inc
mov
insl
outsl
mov
negb
sbb
lods
lret
imul
xor
movl
xchg
imul
jl
push
outsl
in
push
int3
popf
mov
pop
shll
lahf
out
aaa
jmp
add
sbbb
out
add
mov
scas
push
cld
xchg
xor
decb
xor
lahf
dec
test
xor
scas
fildl
push
xchg
jecxz
mov
lahf
fisubrl
inc
mov
xchg
cmpsl
and
fldt
add
and
mov
push
insl
xchg
and
fstps
adc
dec
mov
fsubs
mov
push
or
jbe
aad
test
adc
lods
mov
insb
xchg
in
and
cmp
cli
mov
jae,pt
aad
cmp
xlat
push
push
adc
mov
and
pop
inc
xor
add
lahf
pop
js
sbb
sub
push
or
das
hlt
jecxz
leave
mov
enter
push
push
xchg
push
lods
movsb
sbb
sbb
inc
dec
stc
bound
mov
js
aad
outsl
jg
push
out
loope
mov
shlb
loope
and
sub
sti
rcrl
jecxz
or
decl
andl
mov
xchg
adc
data16
loop
adc
sbb
test
cmp
cmp
je
push
je
xchg
xchg
xor
in
insl
mov
test
push
adc
push
jp
push
cltd
lcall
out
dec
scas
cli
xlat
mov
lock
sbb
cmpsl
lret
push
jle
pop
push
shr
stc
fidivrs
and
sub
test
ss
pop
mov
jge
xor
and
or
les
dec
pop
dec
pushf
dec
repnz
sti
dec
rclb
jmp
es
mov
dec
mov
lcall
pop
popf
dec
test
xlat
sbb
lahf
cmp
or
jne
xchg
std
dec
out
push
mov
dec
push
pop
orl
je
cld
gs
in
pop
mov
adc
cmp
push
test
sub
aaa
stc
andl
mov
cmp
js
lods
inc
pop
jae
hlt
cmp
sahf
je
insl
rorb
pop
add
cld
flds
push
test
jmp
scas
dec
lds
cmpsb
sbb
sub
cmpsl
xor
test
jno
mov
mov
loopne
cmp
mov
push
loop
arpl
add
outsl
bound
or
jne
inc
jp
insl
cmp
cmp
mov
ja
push
xor
jle
xchg
pushf
out
dec
xchg
pop
loop
in
mov
pop
mov
mov
push
lods
cmpsl
inc
nop
int
shrb
jnp
xchg
sti
in
loopne
sti
shlb
loope
loopne
sbb
insl
xor
out
outsl
mov
fbstp
insb
iret
clc
stos
mov
pop
mov
and
add
pop
in
adc
push
test
clc
xchg
loop
std
sbb
mov
adc
mov
ss
aam
rclb
loope
out
sbb
pop
push
xchg
outsl
std
and
mov
les
jbe
inc
push
loop
popa
pop
adc
mov
andl
test
xchg
adc
dec
or
and
ret
adc
dec
push
rorb
jo
roll
pushf
push
mov
or
inc
call
or
test
mov
push
sbb
ss
stc
fidivrs
add
movsl
jp
sub
adc
out
imul
push
dec
sar
xor
xchg
mov
inc
pop
out
cmpsb
mov
popf
push
jne
mov
inc
ss
xchg
push
je
sahf
in
sbb
fmull
mov
rclb
popa
or
inc
mov
in
sbb
jle
add
sbb
cli
mov
rclb
or
dec
stc
mov
jne
push
xchg
sar
fcmove
out
add
sbb
arpl
nop
nop
pop
jae
gs
sbb
push
jne
inc
inc
inc
inc
idivb
enter
ret
fldl
pop
push
fmuls
test
ljmp
aas
icebp
add
cmc
mov
dec
push
inc
xor
xchg
mov
andl
pop
jne
pop
xchg
xchg
test
loop
xchg
hlt
push
jns
andl
pop
mov
enter
stos
loope
in
push
lret
inc
shll
ret
push
mov
pop
or
in
test
into
sub
popf
sbb
arpl
and
mov
add
outsl
ds
data16
fs
dec
mov
dec
sub
test
mov
jo
fcmovnbe
ror
xchg
mov
mov
sarl
pop
mov
pop
pop
jl
pop
out
fstpl
jle
sbb
lods
sqrtps
fwait
mov
dec
je
mov
out
sub
arpl
cwtl
dec
add
andl
icebp
std
adc
xchg
add
imul
dec
fcoms
ret
outsb
mov
in
fdecstp
sub
imul
mov
lods
jge
jl
pop
pop
pop
add
outsl
stc
stos
ljmp
mov
test
pop
icebp
add
lods
adc
imul
and
addr16
mov
in
mov
dec
repnz
leave
shl
mov
test
push
out
xchg
nop
mov
push
je
cwtl
int3
scas
xor
stos
ret
loope
push
jmp
pop
or
mov
sbb
enter
aas
clc
mov
jp
pop
xchg
fistl
lea
arpl
add
lods
mov
mov
push
cs
push
pop
pop
jp
fucomip
adc
jp
sbb
xchg
test
popa
or
fidivl
sub
fisttps
fadds
mov
mov
push
movsl
imul
xchg
jmp
pop
int
test
ror
in
mov
adc
or
cmc
test
aam
and
jecxz
addr16
hlt
add
xchg
aas
into
jne
cs
roll
movsl
std
push
orb
mov
stos
lret
aas
out
adc
or
or
loopne
imul
xchg
mov
dec
and
daa
popa
insb
scas
fsubs
je
out
xor
lock
jns
imul
xchg
cmc
jnp
mov
jo
mov
lahf
aas
leave
das
push
xchg
sub
mov
dec
mov
pop
int3
and
lods
mov
sbb
gs
movsl
aam
into
outsb
push
adc
jae
sub
repnz
adc
push
jnp
pop
out
out
movsl
shrb
fldcw
pop
loop
jle
cli
sub
pop
popf
mov
insl
lret
dec
dec
push
xchg
in
mov
ss
std
pop
push
mov
leave
sub
loope
cmpsb
shrb
sub
inc
jge
sub
lahf
dec
lock
addr16
test
pop
fnsave
adc
jge
cmc
cmp
ljmp
mov
cs
xchg
in
fildl
std
pop
lods
sahf
mov
adc
dec
jns
xchg
mov
rcr
pop
int3
movw
sub
cmp
mov
outsl
xchg
mov
jae
xor
scas
fmuls
mov
cmp
bound
sti
loopne
cs
leave
xchg
jb
and
xlat
jo
sahf
add
and
sub
lods
lret
jp
aas
es
daa
add
jmp
shld
xor
outsb
jge
or
ja
loope
sbb
push
sarb
decl
aad
out
in
push
je
mov
int3
outsb
cmp
xchg
push
push
cmc
imul
lods
nop
das
mov
in
mov
adcl
jmp
push
dec
and
jo
push
cld
pop
and
or
xor
mov
cwtl
rcll
or
add
cmpsb
jle
cmp
xchg
jae
sub
cmp
popa
mov
bound
pop
ds
xor
jns
dec
popf
outsl
loope
xor
loopne
cli
idiv
enter
stos
out
out
mov
xchg
jge
leave
jne
shlb
jmp
push
xchg
sbb
ja
or
push
inc
mov
lods
pop
test
xchg
mov
mov
cli
mov
xchg
pop
cs
cltd
jae
mov
sub
shlb
xchg
jge
xchg
add
xor
stc
pop
lock
outsl
xchg
inc
push
jecxz
xor
test
xchg
fucomip
fwait
pop
push
cmc
sub
xchg
dec
or
or
pop
xchg
pop
lock
inc
es
sub
aas
dec
movsb
daa
mov
shrb
imulb
xlat
or
adc
cmp
ret
push
push
xchg
das
ret
mov
add
clc
dec
mov
loopne
cmp
ss
sbb
lret
enter
daa
sub
mov
bound
mov
mov
mov
fst
lea
mov
cmp
loop
adc
cmp
aaa
aaa
cmp
lret
inc
mov
cwtl
popf
lcall
pop
mov
push
jecxz
leave
fldenv
mov
cmpsb
sub
mov
xchg
or
icebp
sub
sub
mov
pop
mov
repz
ret
push
sbb
push
and
ret
stc
mov
mov
pop
cmpsb
cmp
in
mov
add
jp
and
mov
sub
mov
or
sbb
add
mov
adc
jecxz
xlat
lcall
cmp
adcb
jmp
add
cmc
and
xor
push
sbb
in
out
mov
and
sbb
mov
stos
jmp
jle
fs
lock
pop
inc
mov
fsubr
adc
add
out
dec
int
inc
push
data16
xchg
loop
stos
sbb
pop
popa
daa
fidivl
ror
fisttpll
mov
push
adc
es
cmpsl
orl
inc
pop
adc
cwtl
movb
les
call
jbe
es
sub
mov
inc
adc
sub
pop
nop
or
divb
les
xor
enter
into
data16
or
sbb
or
test
dec
cwtl
scas
std
mov
pop
in
ret
mov
out
mov
lcall
mov
xchg
dec
cld
xchg
test
movsl
add
dec
dec
xchg
sti
into
daa
jo
subb
clc
sarb
xchg
int3
push
inc
clc
xor
pop
push
insb
add
add
cli
in
cs
cmp
nop
testb
jb
mov
out
push
jmp
fsub
rep
sub
stos
adc
pop
jecxz
xchg
stc
cltd
cltd
lret
xchg
xchg
push
adc
sbb
add
jno
icebp
sbb
lods
mov
sbb
mov
fdivs
fisubrl
mov
fdivs
sti
sub
stc
pusha
mov
call
xchg
data16
sti
pop
sbb
add
xchg
pop
cmp
mov
lods
jl
and
xlat
lds
push
movl
and
decb
inc
push
cmp
rorb
jne
mov
test
sti
in
add
and
push
movsl
mov
rclb
push
hlt
insl
add
jb
cmp
test
xchg
bound
sub
pop
aaa
mov
dec
rcrl
aaa
in
pop
mov
inc
lret
push
addr16
loop,pn
jp
aad
repz
pop
xorl
jne
jo
aas
leave
sub
push
stos
shll
and
add
fists
push
in
shr
sub
or
add
clc
push
pop
push
sub
inc
and
lret
test
scas
gs
xchg
stos
icebp
push
jg
repz
mov
loope
jno
push
or
mov
decb
cli
xchg
sub
rorb
adc
cmp
fxch
imul
push
mov
fnstenv
and
add
mov
movsb
ja
cmp
xchg
sahf
adc
xchg
int
pop
iret
out
bound
aad
push
aam
test
pop
repnz
mov
jmp
daa
insl
repz
aaa
add
xchg
mov
push
inc
dec
into
sbb
lcall
push
mov
inc
cmc
mov
filds
leave
je
rcrb
dec
mov
xor
lods
mov
jp
inc
mov
das
int3
icebp
adc
or
inc
pop
insl
sub
or
fimull
mov
es
bnd
jnp,pn
sar
pop
inc
lods
push
orl
std
sub
inc
movsb
cmp
insb
test
in
push
jne
into
into
lret
outsb
jnp
mov
dec
mov
pop
ss
sbb
outsb
cmp
add
idivl
fadd
in
mov
xor
sbb
aad
dec
jae
loop
sti
mov
fnsetpm(287
cmp
insl
dec
ja
jae
movsb
movsl
adc
nop
ret
mov
jge
int
ficoms
jle
popa
push
push
scas
pop
pop
outsl
das
lods
push
gs
test
inc
xor
xchg
mov
outsl
testl
lahf
fistpl
xchg
xor
pop
ja
cmpsb
push
ss
lods
push
mov
popf
pop
imul
adc
out
out
xor
data16
cltd
aad
and
enter
ss
addb
insl
icebp
cmp
mov
div
sub
pop
sbb
outsb
addr16
adcb
or
cmp
push
sbb
dec
xchg
push
mov
cmp
out
in
mov
cmp
lods
int
rolb
pop
push
xchg
fistpll
cmpsl
pop
movsb
xchg
je
ds
add
fidivs
hlt
dec
cltd
in
loopne
mov
inc
outsl
fmulp
xchg
js
dec
jb
xor
jge
inc
cs
jno
mov
cmp
jne
lret
andb
jne
fists
cmp
cmc
lret
jecxz,pt
adc
fstps
sbb
movsb
mov
mov
mov
ds
fdivs
jae
in
into
mov
or
in
lret
xor
mov
adc
sbb
add
imul
pop
cmp
xchg
fcompl
mov
adc
outsb
mov
in
push
jb
test
dec
lcall
cmp
in
dec
ja
sbb
xor
faddl
out
pop
test
lock
pop
jecxz
stos
pop
pop
mov
push
sbb
xor
sub
mov
popa
mov
test
inc
ret
cmp
push
push
out
notl
mov
je
sub
sbb
ret
push
test
pop
faddl
mov
fdivrs
lret
inc
js
loopne
shr
mov
xlat
inc
es
shll
sbb
dec
mov
jp
adc
shll
push
cli
clc
stos
test
out
pop
dec
rcr
shll
pop
or
dec
push
mov
insb
cmp
ss
sbb
xchg
xor
jns
dec
ret
jnp
or
mov
loop
dec
inc
add
mov
xchg
movsl
xchg
push
jecxz
dec
mov
push
or
cmpb
or
fiadds
loope
jno
rcrl
pop
stos
aas
adcl
hlt
fisubs
test
jle
lret
jge
inc
vmread
ja
jo
mov
xchg
xor
adc
aas
mov
mov
in
ljmp
shll
outsl
lret
hlt
daa
stos
push
sub
push
mov
mov
xchg
pop
cmp
jmp
mov
or
mov
sub
stos
cmp
push
into
mov
call
std
fmull
js
pop
inc
into
xchg
inc
xchg
in
push
cwtl
jno
loope
cli
cmc
stos
mov
sub
mov
test
into
stos
rol
es
hlt
movsb
cmpsb
data16
clc
push
xchg
mov
xchg
xchg
call
out
jno
jge
aam
or
clc
lahf
aaa
loop
movsl
ret
popa
call
mov
mov
outsb
and
xchg
lcall
and
mov
popa
cmp
cmc
lret
or
mov
mov
sbb
push
lret
adc
sub
push
or
xchg
xor
mov
mov
loopne
mov
aas
or
mov
push
jo
imul
mov
cmp
jle
movsb
aam
jno
clc
cmpl
daa
loop
mov
xchg
and
ficoml
or
and
push
inc
cmpsl
mov
test
outsl
mov
ret
fsubrs
cld
inc
ja
and
repnz
aaa
mov
decl
jmp
or
push
jbe
fidivrl
push
mov
push
pop
dec
addr16
pop
xchg
xchg
cmp
add
mov
in
push
gs
sub
jp
jb
fwait
aam
cltd
pop
enter
pusha
pop
xchg
icebp
sbb
popa
mov
push
inc
adcb
pop
movsl
fimull
stos
subb
pop
sub
mov
pop
or
push
add
scas
dec
xor
or
pop
mov
and
out
push
jo
and
mov
fildl
aad
sbb
repnz
inc
xor
mov
cmp
jne
sub
insl
dec
push
sub
mov
push
fcmovnu
fdivrl
xchg
pop
push
jae
decb
aas
push
pushf
jns
aaa
xor
jne
xchg
xchg
bound
mov
outsl
sub
stos
mov
pop
sarl
inc
mov
mov
jecxz
movsl
mov
out
sub
push
xor
lods
sub
shll
add
outsl
data16
sahf
inc
sub
add
mov
divb
mov
int
js
mov
xor
xor
icebp
orl
outsb
mov
and
pop
rcll
das
cmpsb
jmp
mov
test
call
pushf
xor
test
call
lret
aad
adc
mov
push
mov
nop
fldt
push
pop
xchg
pop
jns
cmpsb
insb
push
or
cmp
popa
mov
loopne
out
mov
popf
mov
scas
mov
pop
mov
sbb
out
pushf
orb
subb
jecxz
out
outsb
popa
jl
pop
xchg
sbb
cs
js
inc
or
popa
aad
add
mov
insl
or
scas
cmc
dec
adc
ja
mov
jb
in
push
cmp
dec
lahf
in
aam
gs
xchg
jge
xor
sub
aas
jg
sbb
das
xchg
andb
test
imul
pop
mov
mov
in
push
sub
ret
cmp
jae
mov
dec
pusha
loopne
shl
popa
jle
xor
and
pusha
xor
or
cmc
xor
xor
inc
loopne
test
addl
and
lret
daa
xchg
sbb
dec
mov
and
add
les
cmp
test
fs
inc
fisubrs
pop
in
iret
stc
daa
insb
movsb
xor
jns
push
fdivrs
xor
repnz
xor
sbb
xlat
dec
repz
test
pop
push
adc
cmp
mov
sahf
sbb
jle
mov
nop
aad
int
xlat
xor
push
call
dec
lret
rcl
mov
xor
sbb
and
aaa
sbb
mov
pushf
xlat
push
jbe
xchg
inc
and
adc
xor
push
insl
and
iret
popa
aas
xchg
sub
cmp
clc
mov
iret
or
xchg
adc
fcomi
or
or
imul
and
adc
shll
cmpsb
sub
sti
pop
loop
fidivs
leave
rolb
jmp
cmpsl
jno
xlat
jno
dec
int3
push
sub
lea
sub
clc
xchg
push
rolb
popf
inc
icebp
push
scas
jle
push
stc
cbtw
pop
mov
addl
mov
orl
mov
inc
jl
lods
out
inc
sub
in
pop
sbb
iret
pop
fidivs
dec
inc
lods
mov
add
sbb
pop
xchg
addl
mov
xlat
cmp
ss
mov
jg
mov
mov
outsb
and
bound
jae
sarl
cmp
inc
rep
push
xchg
data16
sbb
loopne
sub
xchg
adc
jo
in
pushf
ficoml
push
dec
xchg
scas
sbb
inc
fnstsw
scas
icebp
mov
xor
nop
jl
cwtl
pop
xchg
xchg
mov
cmp
and
outsl
outsl
pop
dec
add
xchg
mov
pop
lock
jp
scas
adc
pop
cmc
popf
and
pop
in
enter
push
repnz
shr
adc
clc
pop
dec
mov
les
movsb
test
add
push
in
mov
lcall
push
stos
dec
imul
and
js
leave
popa
icebp
ds
mov
out
aam
test
cmp
int3
loope
mov
enter
push
or
pusha
imul
mov
jecxz
decb
pop
mov
cmp
mov
fsubrl
push
test
jp
cwtl
lock
sbb
inc
jbe
or
or
dec
leave
adcb
lock
push
cmc
push
lret
jno
mov
movsb
lods
shr
pop
popa
adc
and
imulb
daa
and
xchg
mov
lock
push
ljmpw
jns
sbb
icebp
sbb
pusha
push
arpl
push
stc
fiadds
rorl
loopne
int
xlat
adc
arpl
shlb
lahf
adc
push
loopne
stos
sbb
lret
xchg
push
rclb
push
or
push
sub
rcrb
cmp
mov
mov
sub
adc
enter
dec
cli
pop
or
mov
xor
pop
xor
pop
pop
insl
jmp
xor
ret
sbb
mov
xchg
nop
cmpsb
and
mov
and
decl
mov
lret
ss
dec
dec
movsl
dec
inc
xchg
xor
nop
mov
pop
jge
inc
stc
mov
add
aas
sub
bound
ss
cld
push
pop
mov
sub
rcll
int3
stos
sub
inc
icebp
lods
push
xor
insb
cmpsb
ret
jmp
daa
mov
xsaves
pop
out
out
cmpb
mov
addr16
mov
das
add
add
adc
scas
or
pushf
inc
mov
js
jmp
rorb
sahf
outsl
xor
dec
repnz
fs
nop
sbb
nop
test
stc
adc
notl
inc
imul
scas
scas
mov
xor
inc
inc
aad
sub
sub
lds
pop
mov
inc
and
add
test
dec
sbb
lahf
lds
imulb
test
mov
int
lret
inc
pop
leave
jmp
prefetcht0
mov
imul
icebp
add
jmp
imul
pop
push
flds
xlat
adc
cmpsb
ficomps
popf
shrb
lock
adc
inc
out
or
bound
lahf
les
dec
daa
aas
stc
push
push
insb
idivl
out
jne
pop
cs
iret
or
mov
jecxz
mul
or
sahf
lds
push
cli
ja
cld
add
imul
xchg
rolb
mov
pop
into
push
das
fcomps
fs
mov
popa
fnstsw
xchg
out
dec
rorb
mov
ljmp
pop
xchg
fs
jmp
jo
imul
insb
call
cmc
aaa
sbb
addr16
inc
test
sub
push
lcall
adc
repz
mov
sbbl
xor
xchg
in
pop
mov
mov
ja
push
or
ss
mov
inc
jae
in
cmp
add
leave
cwtl
sti
pop
roll
pop
es
cmp
ljmp
mov
cmp
adcb
add
and
push
xor
mov
incb
insl
testl
xchg
push
xor
mov
xchg
mov
jbe
jne
lods
into
insb
lahf
mov
jl
scas
rcll
lods
inc
ljmp
mov
add
lods
cmpsl
pop
and
fsub
in
pop
dec
mov
pop
sar
fwait
push
enter
add
scas
popf
js
sbb
xchg
jb
or
pop
jecxz
xchg
rcrl
loopne
jns
sbb
jne
adc
xlat
mov
in
popf
mov
xlat
sub
add
stc
bound
nop
cli
jecxz,pt
mov
stos
test
test
scas
adc
xchg
jb
sbb
inc
sbbl
sub
addr16
sti
arpl
jge
lods
insl
mov
add
movsl
jp
xor
lods
lcall
in
repz
sahf
cmp
dec
outsl
cmp
xor
xchg
out
or
cmp
or
ficomps
jo
bound
and
sbb
icebp
loopne
loopne
xchg
hlt
add
subl
iret
sbb
aaa
xor
fsub
mov
aam
adc
sbb
lret
rorl
sub
dec
dec
pop
ret
dec
xchg
mov
test
mov
push
pusha
outsb
pop
cmp
mov
lea
test
pop
dec
es
pop
gs
faddl
cmp
sbb
dec
pop
test
and
dec
imul
stos
nop
outsb
enter
fidivl
popf
mov
push
and
sub
scas
jp
lds
dec
das
movsb
dec
push
xor
mov
out
jns
and
or
lcall
jae
aam
cmp
subl
gs
sub
push
or
loop
test
out
sti
mov
scas
mov
out
bsf
xor
popa
out
mov
loope
cwtl
push
xor
data16
fsubrl
inc
add
shlb
mov
jb
dec
call
in
mov
dec
lret
adc
mov
push
mov
gs
xchg
or
rorb
cltd
jecxz
mov
xchg
loopne
add
repz
adc
ret
and
mov
out
mov
stos
sbb
mov
jne
hlt
fidivrl
or
fisubrl
or
adc
mov
jo
jo
or
dec
es
bswap
xlat
int3
sbb
shr
mov
das
loop
rolb
outsl
add
sub
inc
inc
cwtl
outsl
fs
mov
xor
test
xchg
add
shll
mov
xlat
sbb
push
pop
adc
fsts
adc
fstpl
dec
dec
sub
idiv
push
jno
dec
inc
jmp
outsb
mov
cmp
gs
shlb
sub
xor
insl
lods
add
pop
inc
inc
hlt
push
cmpsl
cmp
or
mov
and
addr16
adc
and
and
fstpl
xchg
fwait
subl
mov
add
pop
or
xchg
cli
xchg
lock
imul
and
push
xchg
xor
scas
call
sbb
jb
daa
jo
jg
enter
leave
mov
mov
sbb
mov
gs
jbe
lods
jae
jle
idiv
cmp
aam
push
mov
or
dec
or
into
dec
in
push
stos
std
mov
dec
divl
fsubrs
arpl
test
test
sbb
test
mov
fisubrs
adc
sbb
xor
mul
ljmp
fisubs
push
sbb
jmp
test
inc
pop
nop
in
out
pop
mov
cmp
in
sub
stc
dec
shl
xor
fwait
test
pop
sub
mov
adc
pushf
dec
pop
fwait
xchg
lock
les
push
jmp
pop
and
hlt
add
and
sar
int
daa
inc
cmp
into
ja
inc
inc
push
jnp
loop
add
mov
sbb
xchg
lea
sub
push
repnz
and
jb
aas
push
stos
outsb
gs
pop
lahf
and
or
popa
enter
pop
testl
inc
xchg
shrl
jne
test
out
or
push
push
jae
fstps
pop
pop
and
cli
add
inc
mov
mov
jecxz
popf
jp
testb
and
dec
jl
sub
sbb
sti
out
inc
in
add
pop
and
ljmp
adc
dec
and
popa
decl
loop
scas
and
mulb
in
rorb
inc
test
std
inc
cld
loopne
xchg
push
das
inc
das
cmpsb
sbb
outsl
inc
stos
jmp
cs
test
ret
insl
xchg
loop
sub
xor
sahf
jle
fsubl
pop
adc
and
push
or
adc
add
jnp
or
cmpsl
fistpl
in
imul
cwtl
rcrb
push
mov
cmpsb
inc
jg
das
dec
mov
xchg
aam
outsb
repnz
in
mov
mov
jmp
push
les
jmp
xor
loope
iret
mov
mov
pop
sub
cmp
xchg
rcll
mov
cmp
mov
inc
cmp
mov
ud1
xlat
pop
pop
sbb
xor
adc
mov
xchg
mov
mov
mov
aas
test
hlt
imul
mov
jmp
mov
daa
sbb
sub
jg
push
and
out
popa
dec
fidivrl
inc
jp
js
insl
pop
je
es
mov
in
lret
push
cmc
xchg
insl
add
ljmp
add
loop
pop
inc
mov
adc
mov
or
popa
sub
push
mov
mov
mov
out
push
fcoms
fimuls
add
jne
inc
out
sub
push
inc
or
ret
xchg
xchg
lcall
dec
sti
pop
nop
xchg
rcrb
inc
push
ds
andl
cmp
xchg
int3
scas
shll
cmp
mov
sub
xchg
mov
test
jb
and
pop
ja
mov
nop
cmp
jle
aam
icebp
mov
push
ficomps
or
lret
xor
in
or
xchg
push
jl
mov
lock
pop
jae
call
jnp
cmp
mov
js
das
daa
sahf
movsb
rol
nop
pop
jno
mov
cltd
pop
jle
lods
pop
add
pop
jbe
cwtl
ljmp
mov
scas
mov
lods
mov
cmpsl
xor
loop
std
negb
cwtl
and
and
xlat
jmp
stos
push
stos
mov
jb
xor
in
push
inc
hlt
cmp
mov
out
leave
insl
movsb
fadds
adcl
cmp
pop
aas
lret
lahf
xchg
xor
pop
jno
into
push
sub
xor
lret
dec
roll
cmc
push
mov
movsl
mov
std
and
inc
ror
lcall
adc
dec
stos
pusha
xchg
pop
jo
fbld
test
in
add
js
sti
out
dec
pause
add
mov
xor
xchg
je
and
cli
pop
mov
les
lahf
inc
das
pop
faddl
arpl
pop
push
ljmp
xlat
or
lret
repz
xchg
roll
mov
sbb
mov
add
lods
lods
lret
cs
lcall
jmp
shlb
push
gs
enter
jae
xchg
mov
fnstenv
mov
jbe
xlat
xor
xor
mov
push
out
test
push
lret
hlt
lret
pushf
mov
loopne
cs
cmp
add
aas
xchg
lods
je
adcl
popl
mov
fisttpll
cmp
in
sar
mov
jge
mov
cmpsl
fsubrs
mulb
ss
mov
push
dec
push
sahf
add
pop
test
or
sbb
dec
jb
into
sub
sub
lcall
pop
or
adc
or
pop
scas
jecxz
jb
or
cmp
movsb
mov
lret
mov
mov
add
add
cli
pop
int
fimuls
int
cmp
mov
ss
xor
mov
pop
aaa
push
shlb
scas
es
lcall
mul
and
sbb
jl
mov
push
fbld
dec
mov
test
adc
fiaddl
inc
push
push
cmpsb
or
sub
int3
scas
iret
inc
xor
inc
ficompl
push
inc
nop
frstor
mov
push
inc
adc
mov
or
mov
repz
popa
aas
andb
sub
push
xchg
sub
add
mov
ss
lcall
jo
test
mov
xchg
lcall
sub
sti
xchg
sub
ss
imul
adc
stos
ret
loopne
scas
cmpsl
sbb
in
ljmp
sub
jns
adc
into
daa
fisttpll
mov
mov
lret
out
push
xlat
popa
xchg
jb
or
rcll
outsl
cmp
pusha
mov
xor
popa
mov
add
cs
ds
or
sbb
mov
dec
adc
insb
jg
or
sub
mov
in
cwtl
icebp
out
jne
mov
push
pusha
mov
push
sbb
mov
jbe
out
repz
ds
nop
fimull
pop
movsb
pop
dec
ljmp
repnz
sarl
push
xor
pop
mov
inc
or
jecxz
outsl
inc
into
mov
lods
xor
jns
rorb
icebp
or
mov
mov
jp
cmpsl
test
leave
xchg
cld
jo
and
push
test
outsb
ja
adc
ja
sbb
int3
test
aam
out
aam
push
push
shll
stc
or
aad
or
cmpb
arpl
xchg
fbstp
xor
out
test
rol
lods
jne
mov
fisubl
arpl
daa
cmp
ja
pushf
arpl
std
scas
popf
negl
and
push
inc
pop
les
xchg
movsb
sbb
sarl
int
mov
push
xor
jbe
and
dec
adc
or
mov
sti
lds
dec
test
lock
push
cmp
in
jno
add
rcrl
mov
push
test
cmp
jmp
shlb
mov
call
push
xchg
leave
int3
mov
mov
decb
cmpsb
xchg
loop
sti
test
mov
std
subb
pusha
pop
mov
jecxz
arpl
mov
and
les
jmp
sub
mov
ljmp
movsbl
test
dec
mov
dec
xchg
jns
ret
push
sbb
pop
cmp
sti
into
iret
rcl
cmp
mov
adc
fstl
mov
and
inc
sub
dec
adc
ds
pop
pushf
mov
scas
stos
add
call
or
fcomp
std
cmpsl
push
jns
hlt
xlat
and
loope
fadds
shll
dec
iret
xor
fdivr
loopne
mov
and
lock
mov
push
fstpl
enter
sub
push
aam
andb
pop
in
mov
aam
jb
decb
jo
int3
pop
iret
pop
lfs
xchg
xchg
xlat
adcl
inc
and
jns
jns
std
push
fildll
push
mov
rcr
arpl
insb
lods
lret
jb
int
idivl
or
out
push
pop
sub
xor
sbb
lret
lcall
inc
xchg
fwait
sbb
add
sub
adc
dec
xchg
rep
jmp
jno
push
mov
or
mov
push
inc
inc
ja
inc
adc
ret
push
push
ss
mov
push
push
sbb
and
add
decb
add
sti
outsb
push
out
addr16
imul
daa
dec
loop
mov
mov
iret
cmp
push
mov
push
sbb
or
or
shrl
adc
jno
jne
jmp
sbb
rep
rcrb
rcll
and
xchg
pop
nop
pop
add
cld
ret
ss
dec
rcrb
push
xchg
mov
das
gs
jb
cs
cld
xlat
mov
out
push
mov
cmp
movsb
mov
pusha
in
xor
les
pop
or
inc
mov
sbb
cwtl
lret
xrelease
lods
xchg
fnstcw
or
movsl
inc
int
gs
dec
cmp
and
dec
arpl
mov
test
push
scas
out
enter
add
pop
cwtl
aaa
arpl
add
lret
xlat
mov
push
pop
push
mov
and
push
lods
jnp
stos
fsubp
scas
cmp
dec
les
jbe
pop
jb
mov
mov
in
mov
mov
lods
xchg
cmp
jae
adc
push
cmp
push
jbe
leave
push
call
mov
enter
insl
add
mov
inc
lcall
xor
inc
dec
sub
cmp
sub
lahf
sahf
xchg
fwait
popa
pop
iret
push
mov
loop
stos
jne
jmp
mov
xor
xor
dec
outsb
sbb
pop
push
icebp
mov
pop
scas
sub
mov
test
lcall
bound
pusha
sarl
sarl
inc
sbb
outsb
add
and
pop
aam
jg
xchg
jnp
mov
mov
repz
cmp
mov
lcall
les
xchg
das
popa
hlt
gs
pop
dec
out
push
popa
fldt
movsl
sub
les
xor
mov
aad
jl
adc
sub
pop
shll
pop
hlt
sbb
cmp
mov
sub
push
dec
xchg
mov
in
push
pop
mov
cmp
dec
mov
fucom
jl
addr16
pop
pop
cmpb
std
cmp
sbb
cltd
ljmp
sub
cwtl
push
adc
xchg
mov
or
dec
mov
fcmove
mov
xlat
and
add
mov
or
nop
or
les
ds
jg
dec
adc
mov
testb
adc
popa
add
mov
jecxz
sahf
js
lods
xchg
cmp
push
jo
cld
rolb
imul
push
pop
lea
add
xor
fcompl
lods
fsts
push
add
mov
mov
ljmp
push
jg
int
int3
mov
push
jnp
cmp
lea
shl
mov
test
andb
scas
sbb
out
stc
dec
das
out
push
cmp
add
fs
sub
mov
sub
shlb
push
ret
aas
push
mov
xchg
add
push
insl
cmp
stos
cmp
int
and
test
mov
xchg
mov
sbbb
sbb
or
in
negb
xor
push
repz
cmp
jnp
push
lea
out
mov
xlat
dec
mov
mov
sub
push
fistpll
mov
inc
lret
addr16
test
jns
mov
xlat
fs
lahf
push
or
sub
inc
flds
mov
sub
jnp
lret
cmp
test
and
sub
rcll
adc
out
cmp
pop
jle
adc
push
loop
jno
int3
cmp
push
push
xor
shrb
sub
cld
movsl
invd
repnz
loope
jl
xchg
loope
shr
shlb
jo
jge
cmpb
xchg
or
jbe
orps
mov
nop
cmp
jb
add
push
mov
fmul
fcomps
sub
dec
dec
les
hlt
clc
mov
adc
cmpsl
sub
outsb
mov
int3
adc
jo
mov
fwait
xchg
inc
imul
test
adc
inc
loope
and
pop
mov
inc
sahf
sahf
insl
in
in
mov
cmp
lcall
aam
mov
andb
cmpsl
dec
mov
mov
jo
aas
lea
cmpsl
dec
ds
adc
pop
xchg
inc
mov
in
sbb
insl
daa
sbb
nop
repz
flds
test
jae
inc
mov
leave
cmp
push
sbb
cltd
inc
cmp
mov
add
or
jg
imul
mov
add
inc
shll
movsb
and
adc
aad
xor
adc
dec
jmp
cmp
push
sbb
sub
enter
das
div
adc
mov
out
lds
outsl
or
xchg
adc
fucom
in
and
in
popf
push
mov
clc
lds
and
in
sbb
inc
mov
xchg
clc
fistpl
xor
xchg
jbe
nop
scas
test
stos
ret
xchg
xorb
sub
or
adc
nop
enter
push
pushf
loope
xchg
dec
lret
add
insl
cltd
adc
sbb
push
sar
fcomip
sub
mov
cmp
aas
push
jbe
cmp
imul
adc
out
mov
add
addl
inc
jecxz
fwait
imul
sahf
push
lret
xchg
pop
lds
jp
fbld
or
stc
cwtl
inc
cmp
stc
xor
cli
les
data16
divb
push
mov
add
outsl
pop
imul
adc
push
adc
in
leave
dec
xchg
push
inc
jge
or
sbb
sahf
add
bound
xchg
cltd
fldcw
mov
movsl
arpl
lret
inc
inc
std
mov
mov
ljmp
fmull
rcl
or
pop
mov
mov
mov
and
jmp
bound
mov
ficoms
fdivrs
jno
dec
xor
addb
fistps
dec
mov
inc
mov
int3
pop
hlt
mov
push
add
cltd
sub
jmp
je
test
insl
dec
paddsw
pop
rep
xor
das
jo
loop
xchg
and
jno
fldcw
xchg
insl
cmc
pop
mov
out
aas
sub
mov
xchg
shlb
xor
aaa
inc
push
mov
and
sbbb
sbb
cmp
cltd
sbb
sbb
xlat
mov
iret
or
fnstenv
lret
xchg
push
outsl
push
dec
jae
mov
bound
mov
adc
add
outsb
pop
mov
mov
or
cmpl
enter
mov
aad
or
xchg
rclb
fsubs
sub
adc
jl
nop
adc
sti
ss
loop
mov
adc
mov
sub
insb
shlb
cld
popa
test
xchg
push
rclb
fwait
shrb
xor
push
popf
xor
sub
xchg
xchg
xchg
aas
cwtl
mov
cltd
adc
lret
jp
mov
jle
rorb
dec
ds
push
pop
and
lret
popa
clc
jecxz
mov
std
test
xor
gs
hlt
push
lcall
xchg
cmp
enter
js
xchg
fmull
xlat
scas
mov
js
xchg
incb
cmpsl
xchg
cmp
xchg
aad
sub
jg
jmp
fidivs
mov
jmp
mov
insb
push
stos
inc
dec
xchg
addr16
pop
out
repz
sarl
and
jp
popa
jl
inc
lret
in
movsb
add
mov
dec
loop
lea
or
aaa
jle
aad
mov
ds
shll
mov
sti
jg
xchg
ds
lds
push
mov
fsubs
filds
xorl
fistpll
cmpsb
dec
pop
dec
mov
aam
dec
sbb
cld
jb
and
rcl
xor
sub
in
subl
bound
adc
aas
mov
imul
gs
test
adcl
pop
out
and
in
pusha
adcl
in
stos
pop
pusha
push
cld
mov
lret
mov
cs
mov
sub
fwait
add
adc
cmp
inc
jo
mov
mov
fidivs
shrb
pop
inc
int
xchg
xchg
cwtl
cmpsl
cmp
and
mov
fwait
pusha
decl
test
cmp
out
aad
or
lods
insl
dec
ret
xor
int
add
cmp
mov
cmp
scas
movsb
sub
adc
fwait
in
xchg
rcrb
jg
loop
add
std
loope
add
jle
mov
movsl
pop
mov
pop
int
insl
push
inc
xchg
mov
push
aad
lods
out
imul
mulb
push
sbb
repnz
or
jle
add
xchg
push
sbb
xchg
add
inc
mov
adc
mov
sarl
test
push
inc
cli
pushf
in
daa
popaw
out
mov
imul
in
scas
cmc
sbbl
add
add
rolb
jmp
bound
lods
sub
out
ss
mov
test
dec
xor
ss
mov
xchg
clc
je
sbb
pop
and
jb
xchg
pop
dec
pop
cmp
xrstors
mov
iret
jnp
inc
ror
stc
inc
andb
ljmp
adc
fcomps
loopne
sbb
js
mov
add
and
dec
mov
pusha
insb
sbb
sbb
jb
not
or
ds
sbb
push
and
pop
jle
cmp
in
daa
aam
les
adcl
xchg
sbb
cs
int3
cmp
mov
add
ljmp
cmp
add
inc
jno
inc
or
mov
ret
rorl
jecxz
cmp
ss
inc
dec
jmp
or
cmp
pop
and
rorl
jo
and
add
cs
mov
fisubrl
faddl
mov
or
push
inc
adc
sub
pop
cltd
shrl
mov
mov
sbb
mov
or
push
es
add
mov
cltd
popa
aas
mov
test
insb
sbb
pushf
lret
mov
in
bnd
lret
or
icebp
push
aaa
mov
lret
out
dec
mov
mov
sbb
sarb
into
in
adc
adc
adc
fbstp
lahf
out
sub
adc
inc
sub
cmp
and
mov
icebp
inc
std
iret
jle
shl
pop
dec
mov
les
fsubrs
das
je
sbb
push
data16
incl
cmp
mov
and
sub
cs
rcr
ret
jae
mov
mov
jle
pop
js
sti
lahf
xchg
repz
int
clc
fistpl
in
fcom
jns
enter
push
pop
test
sbb
movsl
jmp
je
jg
sbb
sbb
inc
sahf
pop
rcl
cmp
jne
sub
pop
loope
arpl
and
pop
ret
sbb
add
popa
xchg
pop
lcall
jnp
cmpsl
lods
and
mov
cmp
lock
roll
pop
imull
pop
in
paddsw
and
xchg
std
loopne
pusha
adc
divl
sarl
jecxz
mov
jmp
jns
add
je
shl
scas
mov
pop
push
ss
and
push
inc
mov
cmp
pop
push
fists
dec
jnp
sub
ja
jnp
imul
mov
mov
ret
hlt
sar
fdiv
xchg
and
inc
and
sahf
and
fsubl
shl
mov
mov
scas
ret
adc
lea
push
addr16
fnstenv
mov
popf
outsb
idiv
adc
jge
xlat
sub
jle
inc
cmc
push
cld
call
and
cmpsl
out
addr16
stos
jmp
das
dec
ljmp
nop
jo
add
push
mov
das
loop
xchg
mov
add
and
xor
out
add
rcll
mov
mov
lock
push
cmp
leave
sub
fimull
into
and
xchg
and
inc
push
arpl
mov
ljmp
test
jne
pop
add
shl
gs
sub
push
mov
das
add
xor
loopne
bound
xlat
xchg
dec
pop
call
repnz
sub
push
nop
dec
cwtl
jmp
xor
mov
rcr
mov
lods
jne
cli
cmpsl
divl
inc
fs
cld
xor
xchg
jns
sti
rcrb
sub
cwtl
pop
jns
adc
add
leave
push
mov
loope
test
aaa
mov
mov
out
dec
leave
sbb
dec
mov
popf
movsl
push
jns
pop
or
iret
fcoms
xor
jo
xor
insb
sub
inc
inc
jns
pop
ret
and
stc
mov
punpckhbw
shl
mov
mov
dec
jbe
testl
lock
pusha
bnd
adc
adc
ficompl
or
adc
rcrb
pop
icebp
mov
inc
ljmp
sub
sbb
popf
pop
imul
mov
jg
sahf
mov
cmp
xchg
sub
mov
insl
sti
jp
xchg
insb
cmp
xchg
insb
xchg
ja
mov
test
lret
cmp
lea
popa
push
movq
cld
bound
dec
cmc
jmp
push
mov
jb
lea
loop
imul
notb
push
fisttpll
jecxz
inc
dec
idivl
mov
xchg
ret
sbb
or
or
pop
xchg
mov
jp
inc
test
cmp
roll
xor
mov
and
loope
dec
loop
xchg
pop
mov
mov
enter
sub
into
iret
leave
and
push
sbbb
mov
faddp
sbb
mov
or
pop
frstor
sub
sbb
fs
insl
shr
cmp
iret
int
int3
add
inc
je
pop
pop
mov
stos
ss
sub
mov
xor
aad
xor
mov
xchg
out
sbb
imul
inc
adc
push
mov
cmp
cli
inc
jno
std
fcmove
ljmp
rep
mov
adc
lea
or
jbe
cmc
in
shlb
mov
movsl
sbb
ret
mov
fiadds
fnsave
aam
fistpll
add
cmp
mov
cmp
mov
adc
mov
shlb
test
addr16
cli
les
out
sub
outsb
pop
dec
push
ret
sbb
xor
ja
sahf
push
mov
or
ja
addr16
testl
outsl
scas
mov
iret
into
cmc
std
mov
stos
dec
pusha
lods
xchg
mov
mov
pop
pop
and
add
les
pop
leave
mov
xchg
fisubrl
test
arpl
push
pushf
mov
jbe
insb
pop
add
pop
adc
cmp
push
mov
or
test
addr16
xchg
test
xchg
jl
test
push
dec
adc
or
xor
mov
rcrb
pop
xchg
mov
xchg
fsubs
sbb
and
xchg
repnz
xchg
mov
push
fdivl
adc
mov
nop
pop
sub
scas
mov
ljmp
cmp
fistpl
insl
or
xchg
and
fistpll
inc
test
inc
jno
lcall
roll
inc
bound
push
daa
mov
jp
cltd
ret
mov
mov
mov
scas
cmp
out
aad
xor
pusha
lock
insl
pushf
imulb
xchg
imul
imul
imul
inc
sahf
xchg
scas
into
sbb
das
aam
sbb
mov
aas
inc
cmpsl
lea
mov
sbb
mov
xchg
cmp
mov
out
lcall
lea
mov
in
aas
andb
jbe
stc
daa
jecxz
mov
loope
inc
cmpsb
mov
lods
push
ds
rcll
pop
or
push
fwait
push
ja
inc
inc
lods
mulb
adc
fmull
cmp
push
subl
std
inc
outsb
xchg
nop
call
rclb
loope
orl
movsl
imulb
sub
xor
mov
jo
adc
mov
jge
push
arpl
cld
jl
mov
push
inc
jns
es
or
jo
mov
cltd
stc
subl
mov
inc
jl
adc
and
scas
lods
call
add
clc
ret
movsl
ljmp
ds
js
iret
movsl
push
sbb
cmpsl
sti
stos
or
stos
inc
lods
adc
aad
aas
clc
sub
fwait
jecxz
mov
mov
fidivrs
lods
rorb
rorl
mov
push
nop
dec
sar
sbb
out
gs
fs
aam
push
xor
pop
insl
xor
imul
sbb
xor
out
cwtl
mov
jo
jle
jno
es
jno
push
sub
and
fwait
push
sbb
sahf
and
or
push
lds
hlt
stos
data16
enter
jns
pop
lret
nop
ss
ror
rolb
pop
mov
lock
loopne
aas
loopne
mov
test
push
push
push
call
icebp
mov
push
sbb
mov
cmpsl
inc
and
out
push
xor
sbb
rorb
adc
mov
cmpsb
lea
mov
inc
dec
cmp
je
xor
cmp
pop
pusha
out
cwtl
das
lods
jmp
mov
shl
es
mov
or
mov
cmp
push
dec
call
out
negb
push
repnz
dec
jae
mov
mov
daa
and
and
push
clc
mov
dec
test
aam
cli
out
or
shll
lds
movl
shl
sub
xor
lret
dec
in
and
or
aam
xchg
repnz
add
lea
mov
fcoms
inc
xor
sbb
jl
mov
and
mov
dec
lret
movsb
xchg
cmp
adc
shrd
ds
jnp
mov
cwtl
ja
dec
xchg
stos
out
nop
sbb
jg
incb
dec
out
pop
push
shll
arpl
lods
mov
fdivrs
repz
rorl
adc
lock
add
inc
dec
mulb
mov
mov
addr16
sar
add
jmp
out
lea
pushf
ret
inc
push
xchg
sbb
sub
icebp
jmp
push
popf
shrb
jl
mov
dec
dec
xchg
or
out
rolb
in
lcall
test
jo
push
icebp
sahf
ljmp
insl
xor
rcrb
mov
aaa
imul
int
cmp
dec
lahf
sub
jecxz
enter
int
loope
aas
das
lods
incb
ficoml
jo
fstpt
cmp
aas
repz
xor
ss
jns
arpl
sub
cmp
push
jge
pop
pop
sbb
xor
lock
add
mov
or
pop
jp
loope
and
jge
add
sbb
stos
pop
push
data16
aas
xor
inc
fldenv
or
mov
sbb
in
aam
push
push
push
jo
fwait
mov
hlt
cmpsl
rolb
daa
inc
jmp
add
addr16
sbb
jae
lret
adc
bswap
jle
jnp
push
xor
mov
aas
jg
pop
imul
add
ja
xchg
fimuls
or
and
mov
jno
mov
fstps
jp
cli
mov
pop
mov
cltd
sbb
cmp
mov
sbb
lret
xor
shrb
add
xor
inc
push
fwait
loope
insb
dec
xchg
call
mov
inc
movsb
pop
or
mov
aaa
pop
jae
inc
divl
sbb
int3
mov
call
ja
mov
lcall
ss
mull
int
sub
jno
testb
clc
xchg
enter
in
movsb
negl
subb
push
in
sub
jbe
xchg
sbb
sbb
jle
movsl
por
xchg
and
aas
dec
inc
jnp
cltd
test
adc
mov
ja
pop
cmc
scas
dec
mov
xor
shll
mov
jecxz
or
cmpsb
sbb
aaa
cmp
cli
dec
xor
mull
dec
imul
or
enter
test
mov
js
or
jg
mov
cmc
jmp
pop
push
lahf
call
inc
xchg
jns
in
xchg
fimuls
enter
sub
push
jnp
mov
pop
or
push
inc
cmpsb
xlat
add
mov
xchg
stos
lcall
inc
sarl
push
scas
arpl
testb
lret
cmp
test
push
repnz
push
cli
shrb
pop
into
jne
or
pop
jmp
in
cmp
sub
js
das
jmp
loope
pushf
lods
ljmp
stos
and
mov
insl
call
dec
test
lahf
in
xchg
outsl
xor
push
imul
fistpll
fbld
enter
test
and
mov
insb
aad
sub
mov
insb
or
xlat
dec
jge
sbb
jne
addr16
adc
sub
mov
inc
jne
mov
dec
push
push
xchg
cld
sbb
inc
imul
xchg
popa
sub
lcall
lea
cwtl
mov
fnstsw
scas
mov
jmp
mov
pop
fmul
dec
mov
aaa
frndint
sbb
shll
xor
mov
mov
or
xor
mov
push
cltd
fldt
das
jecxz
arpl
cmp
out
insb
mov
and
lea
repz
ss
xchg
add
movsl
mov
lcall
loope
sub
arpl
xor
roll
movsb
in
add
pushf
pop
hlt
xchg
xor
mov
dec
and
adc
idivb
shlb
mov
aas
dec
jp
ja
cmp
fistpl
into
cmp
js
imul
cmp
sub
inc
orb
cli
inc
pushl
fldenv
push
push
hlt
iret
xlat
jns
lret
pop
ret
scas
jno
push
ljmp
insb
andl
xlat
pop
and
pop
data16
pop
xchg
lea
pusha
fstl
dec
das
ljmp
push
push
pop
bound
ds
xchg
sti
sub
push
or
lcall
bound
jb
test
dec
mov
xchg
stos
dec
rcl
mov
bound
cld
mov
scas
fbstp
and
push
dec
pop
add
mov
mov
daa
fwait
push
clc
push
cltd
out
lret
push
push
insl
mov
test
enter
mov
ret
and
loopne
cmc
sbb
negl
fucomip
jbe
clc
and
pop
xchg
cli
xchg
lret
inc
cli
mov
push
arpl
dec
fwait
loopne
xlat
dec
adc
divb
aas
lahf
imul
push
inc
int3
ja
scas
lea
fisubrl
push
and
cmpb
jo
dec
popl
mov
lods
jne
xchg
sbb
cli
int3
jmp
push
cmpb
call
cwtl
jecxz
loop
dec
test
loopne
cmp
mov
xor
inc
aaa
sbb
fdivrp
repz
scas
data16
popf
jge
dec
es
ret
cmp
add
stc
out
cltd
add
sub
leave
lock
inc
fsubs
imul
mov
popf
xchg
mov
dec
insl
xchg
ss
shll
ja
xchg
movsb
ret
and
or
dec
xor
sti
imul
dec
jnp
xor
mov
mov
pushf
cli
imul
mov
pop
jb
or
std
movsl
push
dec
pop
dec
mov
int3
adc
dec
fstps
push
mov
adc
iret
andl
add
in
movsl
cli
mov
sti
movl
push
stos
ffree
out
xorl
ret
adc
or
sahf
out
mov
repz
js
push
mov
jg
mov
fs
sbbl
dec
adc
dec
xor
mov
divb
test
insl
outsl
psrlq
inc
fst
mov
fdivp
lcall
out
mov
outsb
dec
push
sub
and
shrb
ljmp
repz
loopne
ja
xlat
xchg
out
data16
and
pop
testl
pop
cltd
jb
mov
aam
sub
mov
pop
pop
push
sahf
adcb
aas
sbb
lahf
enter
je
pop
xchg
data16
sbb
pop
sub
lahf
std
mov
push
push
pop
popa
jl
sub
lcall
xorb
clc
mov
shrl
jl
fdivl
test
cltd
add
mov
call
sbb
pop
push
insl
or
stos
xlat
movsl
sub
jecxz
ret
dec
pop
fcompl
sub
imul
xchg
clc
rorb
pop
jle
inc
pop
mov
iret
mov
mov
xchg
call
dec
enter
out
popf
pop
rclb
repnz
pop
jmp
jno
aad
pop
into
out
fmul
pushf
sbb
daa
pop
lea
jnp
sub
fwait
cmp
cmp
add
loope
mov
ror
xchg
mov
jno
scas
test
hlt
inc
ret
jecxz
scas
push
cmpsl
push
aad
push
adc
cmp
aad
dec
pop
pop
and
adc
into
mov
jns
push
mov
clc
hlt
push
push
in
mov
in
gs
add
push
cmp
int3
ret
sarb
rorl
das
or
repnz
jnp
ret
cmpl
jmp
xor
mov
out
js
cltd
mov
cmp
adc
xor
int3
add
mov
add
pop
stos
insb
fimuls
jne
lds
mov
rclb
in
fmuls
cmp
cmp
xor
inc
and
cmpsl
push
sbb
push
cmp
loopne
pop
fwait
sbb
push
rol
ficompl
cmc
sub
jbe
xorl
mov
add
jo
mov
sub
mov
and
sbb
sbb
out
outsl
call
push
inc
or
cmpl
idivb
inc
jnp
mov
lock
add
rcl
jmp
mov
sub
and
xor
mov
clc
pop
mov
jo
or
jmp
dec
mov
cs
sub
jb
movl
fisubrs
out
cli
loope
or
outsw
sbb
in
scas
mov
andl
fwait
adc
jge
adc
ret
mov
push
fisubs
cmp
xchg
xchg
add
cmp
pop
mov
jmp
outsb
sub
daa
scas
cli
dec
xchg
leave
mov
cmp
xchg
inc
aad
stos
pushf
xchg
push
lock
jecxz
xchg
dec
into
xor
push
sub
jno
lea
pop
mov
dec
std
dec
sbb
js
mov
mov
fisttpll
or
jl
addr16
xchg
mov
add
in
jno
add
loopne
cwtl
pop
into
mov
aas
call
cmp
inc
push
mov
mov
jmp
jg
mov
mov
insb
andl
test
loop
sahf
aam
mov
pop
inc
test
ret
push
fiaddl
jno
xor
xor
mov
mov
aas
sbb
in
movsl
sub
fldt
out
inc
push
mov
mov
cld
inc
gs
and
jae
mov
clc
je
inc
lods
jecxz
sub
iret
sbb
int
das
out
push
scas
jle
pop
add
pop
lock
fldln2
adc
mov
adc
idivl
cli
sbb
fistl
jl
sub
subb
repnz
push
cmc
je
in
push
inc
xchg
inc
imul
sub
push
and
pop
push
mov
inc
mov
or
dec
test
xchg
movsl
mov
push
arpl
lods
add
push
xchg
mov
pusha
push
jecxz
repnz
js
adc
mov
fidivrl
add
jp
loopne
or
scas
push
or
sub
dec
jno
int
lods
adc
adc
cmp
mov
icebp
xchg
orl
mov
pop
roll
dec
jns
daa
loope
cmp
repnz
xchg
adc
jb
arpl
xchg
or
xor
repz
hlt
pminub
jns
xor
adc
mov
ret
jbe
adc
inc
ds
scas
addr16
cmp
fcoml
pop
test
inc
jbe
pop
mov
ret
roll
xchg
or
mov
mov
out
sti
loop
enter
pop
testb
push
inc
pop
xorb
bswap
or
mov
cmpsb
sbb
mov
imul
imul
shrl
mov
fcmovnb
orb
push
xlat
les
adc
xchg
outsb
mov
icebp
xchg
repnz
pop
test
cmp
and
into
test
cmp
push
ffreep
pop
mov
dec
push
les
or
add
leave
scas
and
lods
jmp
cmp
cli
testl
add
sbb
add
push
lret
cld
xchg
mov
cld
xchg
xchg
int3
std
and
addr16
or
fadds
mov
jo
and
jae
outsb
shll
cltd
or
in
iret
push
sub
insl
inc
mov
jno
cltd
jge
inc
jg
je
pop
pop
in
mov
add
aaa
loope
pop
lret
mov
cmp
adc
lods
je
out
mov
loopne
imul
jns
je
sbb
movsb
cmp
pop
loop
mov
mov
lock
call
insb
add
mov
aad
mov
mov
xor
xor
push
repz
rcll
sahf
sbb
jbe
fs
orb
xchg
fs
inc
lcall
sti
cmp
pop
mov
mov
mov
sbb
inc
push
add
stos
cmp
xlat
into
dec
dec
insb
pop
jnp
jb
lcall
sbb
mov
cld
ret
fcoml
or
shr
fldt
add
mov
and
or
mov
loope
push
in
push
fmull
das
xor
and
fstpt
xchg
jb
mov
call
pusha
xchg
add
imulb
sub
scas
aad
daa
mov
push
xchg
into
cmp
cmp
mov
xchg
mov
or
jo
cmp
xchg
fucomip
push
adc
xchg
gs
jb
and
pop
xor
dec
inc
xor
std
add
mov
into
jb
lret
sti
xorl
ds
xchg
jno
cmp
cltd
push
xchg
add
jo
cwtl
es
mov
sahf
idivb
in
pop
sbbl
or
insl
aam
fisubrs
xchg
cmp
bound
adc
repnz
add
cmp
bound
movsb
push
xchg
push
sub
mov
repnz
outsl
xchg
push
decl
sbb
cmpsl
icebp
daa
sub
out
test
jle
mov
push
pop
and
pop
push
andps
jg
push
in
dec
or
hlt
lcall
sub
sbb
bound
test
and
push
inc
mov
sub
enter
xlat
sbb
sub
jo
ret
add
sub
jmp
bound
xchg
inc
xor
mov
out
sub
pop
pop
popa
mov
rorb
rol
mov
pop
dec
pop
shlb
pop
sbb
mov
pop
jbe
mov
add
lods
negl
jne
xchg
lds
clc
mov
je
gs
jne
insb
popa
sbbb
test
wrmsr
nop
pushf
fldenv
cmp
cwtl
mov
popa
push
jl,pn
out
xchg
je
pop
pop
movsb
xchg
sub
sub
iret
lahf
jle
stos
cwtl
lods
imul
xor
xor
and
mov
xor
mov
stos
psrlw
ret
push
cwtl
out
jb
jno
cld
cltd
movsl
rorl
pop
xor
mov
xchg
rolb
test
mov
cmp
dec
inc
inc
and
movsl
into
sbb
out
push
nop
xor
sbbl
mov
sub
mov
xchg
dec
lds
cmc
scas
add
loope
or
and
rcll
dec
scas
sub
sbb
mov
popf
xchg
stos
lods
xchg
stc
dec
adc
push
lods
xchg
fisttps
add
pusha
sarb
mov
ficompl
ljmp
push
sbb
push
aaa
xchg
push
in
ficompl
insb
cltd
mov
pop
lods
dec
pusha
pop
icebp
push
add
mov
les
addr16
icebp
ds
lods
sbb
testl
mov
jo
inc
dec
jg
push
mov
jno
aaa
cmp
pop
mov
cmp
test
adc
push
and
dec
stos
cltd
lds
push
or
fiadds
mov
sbb
lret
or
jg
repz
mov
lret
aam
push
fidivrs
jo
push
addl
sbb
mov
mov
mov
sbb
inc
cli
mov
arpl
test
fnsave
das
div
push
xchg
adc
iret
pop
mov
mov
ficomps
dec
or
stos
mov
shl
nop
js
lea
insb
fistps
fstpl
pop
lahf
daa
lods
dec
xchg
out
and
repz
hlt
test
nop
sbb
sub
inc
clc
xchg
xchg
mov
or
stos
cmpsb
imul
xor
sbb
inc
mov
cmc
jecxz
ss
jg
jmp
inc
mov
xchg
pop
out
lret
pop
push
dec
mov
or
lea
cs
adc
in
push
cld
clc
mov
pop
xor
aad
push
out
inc
rcll
and
xor
cmpsb
and
mov
or
popf
add
test
add
mov
fidivl
add
or
fdivl
in
mov
out
movsb
inc
out
jecxz
mov
test
cld
push
pop
push
mov
add
leave
add
cmc
mov
sub
test
sub
or
push
pop
push
stos
and
mov
popa
mov
dec
mov
sbb
cmpsl
mov
xor
in
and
fiaddl
jg
cmp
pop
lea
fsubrl
sbb
outsl
ds
cld
sbb
jno
cli
xchg
inc
jmp
pop
sub
cli
dec
stos
jno
mov
in
inc
fcomip
cmp
pop
nop
mov
cmp
mov
stos
fistps
addr16
jp
mov
aad
pusha
aas
sbbb
or
mov
add
push
cmp
dec
stos
dec
cmp
sub
lahf
sub
inc
mov
js
das
setle
push
xorb
scas
push
jge
sbb
dec
roll
fstps
jb
xchg
insl
add
mov
std
andb
dec
ret
daa
mulb
dec
dec
xor
and
out
sub
push
and
adc
mov
xchg
push
pop
mov
jnp
les
sbb
xchg
scas
data16
inc
testb
mov
adc
push
add
lret
fistpll
iret
fnclex
out
xor
test
in
lea
mov
imul
lds
add
xchg
mov
ja
rol
mov
fcompl
cmp
xchg
outsl
adc
add
daa
rorl
push
and
mov
cmp
xchg
dec
iret
sbb
out
and
xchg
stos
mov
push
negl
mov
repnz
sub
aaa
fwait
jecxz
aad
scas
cld
hlt
and
fadds
adc
bound
nop
adc
add
pop
pusha
ja
enter
je
jg
cmp
loopne
mov
jmp
stc
add
xor
dec
sub
dec
lret
js
mov
mov
jle
xor
and
aad
subl
cmp
pop
xchg
xchg
mov
xor
bound
in
lea
fst
mov
les
pop
mov
add
push
sbb
lret
mov
jl
insb
es
movsl
mov
std
dec
mov
mov
test
rorl
cwtl
mov
add
add
mov
xchg
push
shrl
int
and
mov
xchg
mov
push
pop
stos
cld
aaa
fisubs
adc
es
jg
repnz
dec
jo
jmp
js
int
and
pop
mov
bound
mov
mov
xor
icebp
jne
dec
mov
inc
ljmp
les
adc
outsl
inc
dec
ljmp
jbe
js
sarl
and
adc
je
in
sub
cmp
mov
mov
jge
xchg
imul
scas
ficoml
stos
imul
ljmp
icebp
in
lds
adc
aam
pop
xlat
jne
cmp
iret
pop
mov
mov
mov
cwtl
popa
mov
arpl
jl
mov
pop
sbb
pusha
cli
inc
sbb
bound
addb
push
sub
mov
imul
ffree
imul
jno
test
mov
repz
mov
xor
inc
in
out
adc
adc
nop
xchg
jbe
push
or
add
in
out
sub
cmp
pop
stos
stc
fs
jmp
aas
in
roll
arpl
ss
aad
sbb
and
mov
lds
xchg
add
cmpsl
push
add
test
fimuls
mov
mov
jno
jp
pop
jb
fcompl
xchg
xchg
lret
jb
cmp
lcall
and
mov
cmc
xchg
xor
inc
sbb
mov
sarl
pop
adc
sahf
test
add
in
add
lods
test
and
sub
cmp
mov
pop
inc
pop
stos
inc
jge
pusha
sbb
mov
ja
lea
adc
lret
xchg
jno
sbbb
test
pop
aas
sahf
movb
push
jmp
dec
add
xor
pop
mov
cmp
fcompl
lods
sub
mov
addl
cltd
cs
push
adc
int3
or
push
adc
push
jb
ljmp
mov
pushw
sbb
fcomp
lret
jmp
imul
addr16
adc
stos
jmp
mov
jl
push
cmp
int3
std
nop
inc
inc
dec
ret
out
or
ret
je
jmp
call
ret
fdiv
lock
scas
shrb
lock
pushf
mov
jecxz
dec
adc
pop
mov
mov
sbb
cmp
sbb
cmpsb
out
in
dec
dec
repnz
mov
or
popa
in
inc
xchg
or
mov
add
adc
push
shll
rorl
inc
cli
mov
xor
xor
cmp
dec
in
push
loope
stc
shl
rcll
inc
ss
xorl
adc
inc
movsb
imul
jb
stc
repnz
sub
mov
sub
lea
pop
rclb
jle
das
lea
mov
push
adc
in
mov
loopne
pusha
or
inc
in
ljmp
add
cmp
test
jo
and
mov
icebp
fisttps
mov
ss
cmpsb
mov
xor
in
out
jns
std
cmp
lea
inc
scas
jae
mov
jmp
mov
jbe
pop
mov
add
push
add
std
data16
mov
sub
xchg
imul
clc
mov
pop
shlb
test
jle
xor
aad
hlt
jne
push
cld
push
xchg
mov
rcll
mov
or
mov
mov
in
add
test
mov
xor
es
xlat
pop
sbb
aaa
pop
out
adc
jecxz
hlt
push
aas
sub
test
rcr
pusha
sub
insl
push
or
mov
cwtl
pop
jnp
sbb
jb
adc
decb
mov
adc
pop
jb
push
rcrl
xchg
jns
mov
xchg
daa
test
xor
xchg
ja
dec
aad
ror
pushw
nop
lret
sub
lds
shlb
outsl
cmp
and
ret
mov
cmp
sbb
test
mov
and
std
and
add
xchg
nop
xchg
dec
fstpt
cmp
xchg
mov
iret
jns
mov
inc
shlb
push
adc
insl
mov
lods
outsb
push
aas
lcall
dec
sbb
mov
int3
lock
std
sub
fldl
popa
stos
leave
dec
cmpsl
filds
pop
fmul
xor
or
inc
mov
js
inc
mov
ljmp
icebp
cmp
mov
mov
inc
dec
cli
dec
aas
xor
cli
sbb
mov
push
push
add
add
sub
lea
pusha
add
xor
cld
nop
mov
cmp
into
out
jae
sbb
jl
lea
inc
push
into
outsb
outsl
mov
or
pop
cld
test
nop
mov
add
xor
jae
das
ljmp
mov
jo
sti
push
sub
insb
jle
push
ficomps
jge
sub
jp
dec
inc
mov
jo
jne
cmp
push
out
or
cmp
je
sbb
movsb
or
pop
jp
or
cmp
repz
pop
ljmp
enter
pop
inc
cld
mov
push
daa
mov
outsl
cwtl
int
testb
jecxz
sbb
add
jbe
aaa
filds
or
cmp
mov
fs
sarb
mov
sbb
adc
scas
ror
aad
jl
and
test
movsl
mov
jge
lods
imul
stos
and
xchg
pop
push
cmp
add
dec
adc
push
outsl
frstor
or
sbb
nop
popa
pop
ja
or
sub
dec
xchg
imul
hlt
adc
mov
loop
addb
sbb
cmc
cmp
pop
lcall
arpl
jecxz
adc
mov
xchg
iret
frstor
jecxz
enter
ss
inc
mov
lahf
add
push
ljmp
sbb
pop
xor
fs
mov
sbb
push
or
lock
pop
dec
aas
scas
adc
dec
insb
mov
cmp
sbb
mov
add
ret
stos
js
jp
ja
jnp
xorl
cmc
push
sbb
sub
fimuls
scas
arpl
dec
addb
or
rcrb
jne
pusha
lock
lret
dec
rorb
lcall
inc
testb
inc
xor
arpl
sbb
arpl
aam
push
add
into
inc
and
mov
adc
push
add
mov
rorb
scas
pop
fsts
lret
test
pop
movsl
mov
fwait
aas
imul
inc
mov
sbb
dec
repnz
pusha
xchg
mov
jns
loop
push
cs
jl
and
add
xchg
sbb
inc
push
sbb
ret
icebp
pop
dec
xor
scas
in
and
leave
push
mov
movsl
out
ror
notb
push
and
jecxz
fs
adc
push
je
jge
es
mov
out
movsl
stc
fsubrs
pop
push
cmp
add
add
sbb
ret
test
enter
loope
mov
mov
xlat
hlt
jne
out
rorb
stos
adc
mov
adc
add
lahf
loopne
addr16
lret
aaa
dec
adc
xchg
aad
pop
or
cwtl
cmp
sahf
aaa
mov
cmc
int
mov
adc
mov
or
jae
std
cltd
dec
out
jmp
pop
lcall
xor
mov
test
add
test
xor
data16
fucomi
sbb
pop
xchg
xor
sub
lds
pop
popa
xchg
mov
add
jl
lret
in
enter
mov
lea
and
aas
inc
mov
ret
jae
repz
ror
jmp
pushf
or
jns
stc
push
mov
sub
sti
leave
orl
shl
add
out
mov
xchg
push
aam
xor
imul
iret
jo
cld
adc
in
movsl
test
push
jle
scas
sbb
xlat
xchg
stos
int
xor
pop
cmpsb
inc
cs
frstor
xchg
cmp
add
xchg
push
dec
stos
insl
lods
cmpsb
mov
xlat
jp
cld
lea
xor
mov
dec
push
add
jno
xchg
lods
out
lds
fistl
push
jl
xorb
movsl
mov
outsb
je
shrl
cmp
outsb
test
ret
mov
jmp
test
repnz
out
adc
adc
fs
pop
mov
adc
mov
daa
adc
mov
and
inc
sub
fcompl
shll
mov
pushf
pusha
mov
imull
pusha
mov
pop
and
in
pusha
std
and
fldt
enter
dec
inc
sub
adc
or
dec
and
xchg
push
icebp
imul
gs
jo
jmp
stc
in
test
or
roll
pop
mov
pop
aad
mov
xor
test
sub
or
fnstenv
mov
rorb
lret
xor
lret
lock
test
push
cli
imul
sub
fistpl
sub
pop
std
push
cmp
cmpb
lret
jb
push
test
inc
pop
and
xor
cmp
cmpsl
sbbl
and
movsb
add
xchg
jp
push
mov
arpl
hlt
xchg
cmp
add
test
cmp
mov
dec
lods
cmpsl
pusha
divb
sbb
dec
pop
mov
fs
adc
dec
cmp
das
jno
add
test
ret
push
into
jmp
jae
adc
mov
sbb
stos
inc
pop
dec
popa
popa
push
dec
js
shlb
stos
iret
add
lret
lods
adc
lahf
cmp
dec
cmpsb
xor
addr16
popf
arpl
sub
std
lahf
sub
add
xlat
int3
mov
ljmp
mul
subb
popa
mov
pop
scas
mov
cmpsb
push
xchg
iret
in
mov
jne
xchg
aad
stos
and
jo
mov
sub
cmpsl
pop
fsubrs
inc
lcall
and
fcomi
sbb
mov
pop
cmp
push
mov
mov
outsl
cmpsb
icebp
mov
ds
andl
pop
rcrb
inc
mov
nop
test
inc
jmp
push
les
or
sahf
fstpt
ds
or
fwait
js
mov
out
jbe
into
dec
lea
mov
mov
push
cmpsl
push
in
adc
scas
lret
push
mov
shll
xor
ret
mov
mov
jnp
mov
into
movsb
sub
add
dec
cmp
aam
xor
jmp
inc
add
lcall
in
add
sbb
add
lahf
fistpl
repnz
xor
pusha
mov
mov
mov
lret
add
xor
aaa
mov
das
aas
pop
adcb
clc
fsubp
push
or
inc
popa
cmc
cmp
repnz
call
xchg
or
mov
mov
and
ret
enter
lcall
mov
or
js
das
adc
or
sahf
cmp
xor
dec
lods
rorl
bound
je
cmpsb
mov
sub
repnz
out
into
jne
mov
gs
xchg
imul
stos
shrl
add
andl
pop
mov
test
mov
adc
lods
cmpsb
stc
inc
addl
dec
dec
std
test
gs
shrl
jb
pusha
cmp
sub
shlb
shll
imul
test
jbe
shrl
into
dec
sub
je
sbb
cwtl
mov
sub
rolb
mov
mov
pop
stc
jb
int3
jle
shl
in
adc
scas
jo
sahf
mov
or
jne
mov
mov
pop
jmp
sbb
mov
mov
sub
fwait
adc
and
dec
shr
jle
mov
nop
pop
xor
jmp
jg
jmp
scas
xchg
shrl
xchg
mov
add
xor
shlb
cs
lock
jmp
repz
fcompl
add
cmpsl
icebp
loope
jmp
aam
call
subb
push
fs
mov
xchg
add
stos
mov
sub
add
adc
mov
xchg
xchg
lods
pop
jg
aad
push
pop
add
xorb
add
push
icebp
jne
sbb
nop
pop
loopne
jbe
mov
test
add
fdivr
add
ficoms
or
adcl
fbstp
icebp
arpl
lret
xchg
imul
mov
dec
cltd
jg
mov
call
jmp
and
insb
add
push
adc
mov
ret
xchg
and
jne
ja
popf
clc
outsb
sbb
xchg
in
inc
dec
in
inc
xorb
jge
mov
bound
pusha
out
pop
ds
leave
mov
shr
sarb
sbb
testb
movb
mov
push
mov
or
or
call
in
cmpb
ds
pop
xchg
dec
push
inc
xor
dec
pushf
xchg
nop
mov
push
and
lds
add
inc
fs
mov
mov
popa
dec
pop
jg
lret
mov
test
test
or
lcall
stos
or
leave
push
dec
jns
stc
les
jo
jne
test
xchg
cmc
incl
xlat
stos
ss
movsb
pop
mov
insb
fldenv
sbb
das
insl
mov
imul
xor
sub
mov
ljmp
pop
int3
iret
int3
and
loope
mov
mov
push
mov
and
pop
adc
mov
xlat
sahf
mov
mov
rclb
adc
mov
xor
test
fnstenv
loopne
sub
scas
lretw
insb
mov
add
cmpxchg
push
or
cmp
rolb
imull
imul
movsb
xlat
jecxz
pop
mov
jb
leave
out
pop
pop
lahf
mov
lds
push
mov
xchg
and
movsl
ljmp
push
sahf
jl
fxam
add
inc
lret
nop
pop
jle
imul
mov
cmp
jb
movl
ret
icebp
shll
out
jb
jae
repnz
xchg
push
rorl
popf
jecxz
ja
push
imul
sbb
cmp
cmp
mov
mov
mov
shl
fisubrl
ja
xchg
dec
add
rclb
cmp
dec
jae
or
and
mov
sahf
and
gs
or
clc
xchg
or
clc
sub
mov
mov
sbb
enter
push
sbb
mov
push
mov
je
xchg
les
adc
pop
repnz
pop
es
sti
mov
repnz
sbb
xchg
pop
imul
dec
sub
pop
mov
jmp
into
popa
ja
dec
cld
std
add
sbb
push
lock
outsl
add
daa
dec
or
xor
stc
jne
push
sbb
xlat
xchg
xchg
std
enter
std
pop
pop
mov
dec
sbb
nop
ss
mov
out
xchg
mov
xor
dec
mov
inc
add
bound
cltd
je
insl
test
lds
lock
jo
sub
popa
mov
mov
mov
insb
stc
mull
rolb
pushf
dec
dec
sbb
xor
sarl
mov
fistps
shll
jl
and
cmp
xor
mov
call
clc
nop
in
add
jl
jae
int
iret
sbb
js
mov
int
lock
jg
mov
adc
sbb
test
or
shrl
out
jo
movsl
xor
cltd
outsb
int3
cmp
out
lds
call
notl
cwtl
jae
pushf
mov
in
jns
aad
jb
fwait
popa
add
test
ljmp
in
xchg
sub
xor
and
gs
es
inc
roll
clc
xlat
cltd
adc
cmp
or
stos
mov
jmp
in
adc
cltd
les
aaa
call
dec
or
jno
or
jns
lret
xchg
cmc
inc
push
pushf
mov
jb
inc
xor
repnz
insb
jne
arpl
lock
inc
adc
jo
xchg
cmp
inc
jmp
pop
lret
jge
imul
inc
ja
pop
sbb
mov
lods
mov
dec
daa
jne
dec
and
xor
cld
ss
std
or
dec
add
pop
push
xchg
in
and
das
cmp
test
decl
movsl
jl
lods
daa
notl
xor
test
push
xchg
loop
int3
sbb
jp
dec
outsl
mov
mov
mov
call
repz
xchg
enter
xchg
jno
ljmp
lds
jns
popf
insb
sbb
cmpsb
sub
dec
pop
adcl
test
sbb
ficompl
sti
out
pusha
sub
mov
aas
sub
adc
call
push
sub
pop
inc
lcall
mov
in
cmp
scas
sbb
leave
iret
or
xchg
fldl
mov
mov
push
dec
aam
ffreep
lock
xchg
arpl
push
test
ja
fs
adc
mov
pop
in
xchg
dec
pop
data16
pusha
std
loop
loopne
cmpsb
or
loop
movsb
push
inc
sar
inc
data16
mov
push
and
pop
paddb
sbbl
push
int3
jl
dec
and
push
jecxz
fildll
xchg
jb
lock
cmp
xchg
xor
cmpsb
add
mov
and
mov
adc
ret
imul
in
insb
ds
ja
movsb
xor
movb
and
mov
sub
xor
inc
rolb
addl
sbb
out
mov
pop
adcl
cmp
cli
stos
mov
in
dec
dec
sub
lods
lods
outsb
sub
push
popf
into
lea
cmpl
and
shlb
ret
subb
xor
shll
mov
addr16
pop
and
jae
sahf
mov
cld
pop
xor
and
lds
shlb
push
mov
xchg
push
int
and
dec
aad
or
inc
xlat
cltd
cmpsl
sti
pushf
or
push
inc
xor
movsl
movsl
ficompl
dec
push
out
cmpsb
jl
mov
jbe
mov
not
push
fidivrl
inc
sbb
lret
cmp
dec
mov
negb
je
mov
hlt
stc
fnstenv
cmp
test
push
mov
mov
push
jo
mov
in
xchg
lahf
pop
cmp
or
rcll
call
pusha
cmp
jne
dec
mov
shlb
mov
adc
and
sub
push
pushf
call
sub
jnp
add
repz
out
and
shr
xor
rol
or
xchg
adc
mov
dec
adc
out
dec
push
xchg
bnd
subl
cmpsb
sub
inc
int3
inc
fistpll
out
xchg
and
pop
xor
ficomps
mov
out
xchg
aaa
jp
inc
cmp
into
xchg
mov
pop
xchg
dec
cli
outsl
jle
std
xorb
test
lahf
int
and
sbb
xor
iret
in
rolb
mov
fwait
mov
mov
into
lret
insl
jecxz
outsl
push
push
dec
cmc
dec
adc
or
add
push
stos
js
dec
adc
xor
addr16
xor
and
sub
cmc
das
cltd
jge
jbe
pop
mov
jecxz
and
pop
iret
or
jne
aaa
mov
ret
xchg
sub
inc
shrl
pop
or
jnp
inc
xchg
xchg
nop
sti
scas
int
dec
lock
sti
in
aam
adc
js
cmpsb
mov
jle
ret
shl
prefetch
fistpl
inc
cmp
clc
ja
mov
loop
loopne
mov
fmuls
iret
das
fists
push
notb
fwait
mov
fistps
rcrb
adc
and
mov
negl
jg
out
mov
iret
icebp
cmp
cmp
adc
aas
mov
ljmp
addb
jecxz
gs
xor
xor
mov
out
aad
xor
push
ja
fisubs
jmp
lret
imul
imul
add
notl
add
rorb
cmc
cmp
pop
imul
xchg
pushf
std
sbb
mov
xlat
enter
into
sub
cmp
jbe
jge
and
sahf
jne
adc
pop
insl
sbb
jo
cmp
lret
dec
out
scas
sub
pop
xor
cwtl
lretw
test
push
cmp
jns
aad
jp
outsb
and
imul
dec
dec
mov
mov
pop
sub
shlb
cmp
or
popa
icebp
das
push
pusha
ret
sub
inc
mov
testb
in
mov
rcrb
mov
into
dec
in
add
pop
mov
stc
lods
test
push
push
cld
dec
mov
je
enter
lea
lea
mov
dec
arpl
jmp
xchg
cmp
or
inc
mov
cmp
fidivs
subl
pop
pushf
fs
aad
stos
or
sub
dec
stos
shl
inc
daa
cmp
aaa
adcb
push
ret
js
mov
cmp
imul
outsl
add
ficomps
out
rorb
xor
and
movsb
inc
loopne
addl
mov
add
mov
dec
sub
dec
dec
pusha
jae
negl
icebp
cmp
cmp
ljmp
rclb
rolb
out
xchg
idivb
sbb
pop
mov
enter
mov
mov
jbe
mov
mov
stos
or
xor
pushf
jbe
cmp
loope
gs
pop
xchg
mov
sbb
jne
ljmp
das
xchg
out
lret
sbb
scas
cmp
lock
movsl
jo
pop
jbe
pop
ss
int3
sbb
xchg
inc
push
add
cmp
sahf
out
lret
data16
mov
cmp
pop
dec
popa
mov
push
fcomps
pop
xchg
ds
adcl
je
xchg
fwait
jne
dec
repz
out
leave
enter
mov
cli
sub
pop
push
push
fldt
nop
fistpll
imul
push
pushf
mov
mov
and
and
xchg
daa
xchg
test
cld
rorb
lea
inc
push
js
cmp
test
sbb
pop
inc
jmp
ret
fstl
out
arpl
scas
stos
stos
stos
xchg
sbbl
int3
mov
add
mov
les
cwtl
xchg
jne
cli
shll
mov
mov
insl
sub
repnz
leave
xor
push
adc
push
jp
sti
mov
cld
dec
cmc
and
jmp
push
es
cmc
test
imulb
dec
xchg
xchg
or
ja
pusha
out
call
test
adc
add
mov
movsb
or
xchg
jge
in
ror
je
test
arpl
notb
fs
sbb
subb
cmpb
aaa
sub
insl
cmpsl
adc
and
aam
inc
jecxz
movsl
std
jle
fidivrs
cmc
push
pop
push
cmp
push
ret
jle
and
in
shll
inc
in
or
lret
mov
inc
jne
xorl
scas
add
push
lret
push
and
adc
scas
fs
push
pusha
mov
inc
fstpt
pop
xchg
mov
shlb
ret
outsl
fwait
add
dec
cmp
sub
aad
inc
mov
sbb
cltd
sbb
adc
out
orb
lods
pop
in
rcrb
sub
mov
scas
lahf
mov
add
jmp
push
pop
lcall
sub
fstpt
ss
or
xor
rol
inc
icebp
loope
in
mov
js
cld
aas
xchg
cmc
scas
sbb
mov
daa
rcrl
dec
movsb
jb
jbe
js
scas
imul
mov
mov
push
gs
jbe
cmp
ljmp
add
lret
test
out
pop
shll
sbb
mov
jnp
insl
ljmp
test
push
pop
sub
sbb
push
jne
imul
pop
mov
shlb
jbe
stc
mov
jae
pop
insb
fwait
enter
add
mov
test
outsb
or
sub
movsb
mov
mov
ret
es
or
adc
xchg
dec
xor
mov
imul
fidivrl
push
add
pop
cmc
pushf
les
in
xchg
add
out
mov
fwait
shlb
ret
gs
and
jns
fwait
lods
int3
cmp
push
neg
jl
pop
in
xor
mov
cltd
jne
mov
jmp
xor
cmp
faddl
sub
push
fst
inc
sbbb
out
lea
jno
lea
sub
stos
bound
adc
stos
lea
mov
sbb
mov
mov
cli
das
aam
fwait
mov
cmpb
loop
sarl
or
jg
mov
jns
rcrb
push
cli
jecxz
cmp
outsb
pop
sub
imul
out
sti
into
je
movsl
mov
sbb
gs
mov
ljmp
ljmp
test
inc
adc
xchg
loop
xor
std
mov
or
jne
jb
insl
fdivl
mov
mov
std
mov
cld
out
lcall
push
and
ret
push
test
ret
sub
int3
out
rorb
sbb
lret
mov
pop
jns
out
xchg
das
aad
enter
push
and
loop
es
and
ljmp
lods
addr16
fcomip
es
mov
xchg
imul
subl
xor
cmp
fsub
jb
mov
lods
jns
add
dec
divl
push
fdivs
mov
cmp
cld
xchg
cmp
data16
ss
and
stos
ret
push
inc
fs
jbe
or
leave
gs
dec
out
pop
push
jg
jo
dec
popf
xchg
sub
pop
adc
cmp
push
dec
cli
or
add
mov
and
pop
ds
cmp
sub
nop
ss
pop
or
mov
arpl
int3
ds
lea
in
pop
sahf
xor
mov
arpl
arpl
pop
jne
gs
nop
stos
fcoms
aam
cmp
adc
gs
and
sub
or
mov
imull
adc
and
pop
mov
mov
mov
mov
lahf
je
pop
pop
and
sahf
mov
pop
mov
sbb
lea
movsb
xor
in
or
shr
clc
in
fidivl
fimull
dec
pop
subl
xor
xchg
or
sbb
mov
xchg
dec
sub
fistps
gs
fisttpl
iret
inc
rorl
lods
fcom
mov
leave
dec
lcall
xchg
repz
popa
cmp
adc
jne
add
cmp
inc
outsb
sub
mov
jno
call
fldpi
repz
push
xchg
fisttpll
cmp
push
test
ret
sub
cmpsl
push
mov
testl
cmp
std
fidivl
cmp
pop
jmp
jae
stc
push
test
sub
push
into
mov
std
push
cmp
mov
push
jae
jmp
push
popf
call
fstpl
ret
jle
ficoms
push
inc
test
stos
push
ret
jmp
popl
jmp
jb
in
scas
sbb
push
lock
cmp
jg
push
stos
rol
push
movsb
inc
lret
into
add
shlb
inc
mov
out
cmp
mov
or
jno
stos
out
dec
lcall
push
dec
scas
mov
jge
movsl
movsb
mov
int3
mov
addr16
das
aaa
mov
repz
or
mov
ss
test
rolb
in
pop
xchg
cmp
push
push
jb
scas
pop
loope
xchg
jmp
push
test
pop
ret
jns
mov
dec
or
inc
das
dec
xor
mov
sub
mov
adc
add
stc
test
jl
stos
loop
aad
dec
xchg
add
stos
mov
add
pop
nop
or
pushf
xor
rcl
lea
lahf
outsl
mov
sti
pop
out
sbb
adc
xchg
dec
inc
jl
std
sub
mov
neg
lret
mov
jns
ret
cmp
test
shr
shrl
dec
cld
out
aas
adc
xor
in
sbb
jo
push
xchg
xchg
dec
or
popa
es
mov
ret
sbb
aas
mov
lret
cmp
jbe
popf
add
into
sbb
leave
xchg
movsl
adc
mov
mov
mov
cmpsl
jl
kxnorb
jl
shrb
into
leave
das
add
mov
inc
pushl
int
xchg
and
int3
aad
xchg
sbb
popf
mov
cs
push
lock
sbb
mov
dec
mov
adc
sub
ret
rcr
mov
movups
js
dec
nop
push
scas
scas
pop
mov
cld
mov
xchg
ljmp
loope
xchg
ja
add
jmp
inc
dec
test
sbb
jb
mov
adc
out
std
xor
aad
cmp
es
xor
cmpsb
lds
add
lea
push
das
xor
mov
mov
inc
jo
push
js
mov
test
pushf
and
out
mov
and
add
push
cld
add
pushf
cmpsl
scas
icebp
xchg
out
dec
sub
pop
sub
xor
jb
sahf
repz
inc
je
sub
mov
mov
xlat
dec
sbb
push
dec
pop
or
pop
xor
and
popa
addr16
jnp
out
shlb
lock
xor
imul
lods
mov
push
lods
rorb
or
test
or
pusha
cmp
rcll
lds
pop
fists
sbb
jae
xor
mov
out
iret
push
xor
imulb
loopne
cmp
test
adcl
sub
sbb
mov
jg
cmp
test
mov
insl
xor
push
add
jns
lea
pop
out
and
mov
clc
cmp
xchg
mov
in
xlat
fidivl
inc
rcl
sarl
sub
enter
imul
inc
jns
pop
fistpl
int
push
jae
add
sbb
test
inc
loope
int3
jmp
mov
push
addr16
mov
jno
pop
jne
fildl
jg
insl
int
aas
insb
push
cmp
push
push
je
xchg
test
lret
xchg
insl
jb
pop
pop
fwait
dec
in
aam
sub
adc
je
in
ret
cmc
xchg
je
pusha
inc
in
clc
cmp
sbb
insb
pop
xchg
in
pop
out
popa
push
push
sti
and
leave
popf
insb
mov
sub
insl
sar
scas
mov
loop
ret
push
nop
mov
push
aas
jmp
sarb
jbe
mov
fcmovb
xor
mov
mov
ror
mov
int
pop
je
or
out
lds
push
cmpsl
inc
sti
xchg
repnz
popf
add
fstp
aam
std
sub
push
les
stos
sbb
push
ret
jecxz
jae
inc
fstpl
jmp
repz
cmovno
pop
push
mov
inc
cmpsl
out
pop
inc
ficoml
jle
or
pop
xchg
or
movsb
mov
sarl
pop
jmp
test
sub
jno
stc
subb
sahf
pop
decl
mov
into
cli
mov
adc
dec
aam
cld
adc
xor
xchg
addb
jge
sub
test
enter
pushf
cmp
inc
inc
in
pop
mov
fs
and
sub
ret
addr16
ja
imul
cmpsb
addr16
into
mov
pop
insl
aam
test
inc
in
lret
xchg
xchg
push
std
negb
sub
jle
pop
imul
adc
fdiv
adc
test
mov
push
pop
push
rorl
xor
call
adc
sbb
test
pop
or
mov
jg
decl
ljmp
lea
test
leave
mov
insb
pop
testb
push
xchg
jle
inc
decb
cmc
mulb
ret
pop
stos
push
icebp
cmpsb
lret
fisttpl
lahf
mov
je
dec
add
adc
outsl
mov
lods
or
jecxz
inc
and
psllw
stos
cmp
xchg
and
jbe
jg
cwtl
scas
test
cltd
call
xor
repnz
cwtd
dec
outsl
add
iret
push
dec
mov
sbb
test
test
push
dec
aaa
pusha
rclb
js
jge
mov
das
fmul
and
jge
nop
iret
mov
cs
es
xchg
push
movsb
outsb
sbb
cmp
dec
ffreep
mov
xor
divl
icebp
in
mov
xchg
fisubl
cmp
into
jno
sbb
add
dec
push
cmpsb
jge
negl
ret
lcall
test
mov
fdivrp
mov
xchg
pop
add
lahf
aam
xor
mov
add
outsb
clc
pop
mov
loop
or
pop
lock
scas
sub
out
lahf
xor
idivl
stos
pop
sub
test
mov
sub
sbb
mov
dec
or
pop
cmc
jle
mov
test
lret
insl
or
cmp
push
pop
mov
dec
ds
mov
imul
into
mov
mov
cwtl
loop
pushf
cmp
mov
repz
rcrl
pop
inc
and
fisubs
ja
inc
loopne
rcrb
sbb
mov
inc
cs
push
jmp
and
and
notl
xchg
sub
leave
mov
jmp
and
and
push
nop
in
out
mov
dec
cmp
popf
jb
outsb
scas
gs
test
mov
and
int
push
imul
sbb
repz
test
aaa
push
push
pop
push
jbe
xchg
mov
mov
mov
fld
mov
movsl
dec
popa
insl
in
mov
sub
cltd
jp
pop
push
and
cmp
scas
lods
fwait
loope
popa
jb
cwtl
int
insb
pop
data16
rorl
pusha
hlt
mov
nop
mov
or
fwait
jbe
xchg
mov
test
inc
scas
pop
push
mov
adc
sbb
and
pop
das
repz
adc
push
data16
xchg
add
push
mov
sub
jg
lds
sbb
mov
xchg
mov
loopw
sbbb
xchg
rorl
and
fldl
adc
sahf
adc
dec
or
je
jge
rorl
pop
jmp
push
leave
psllq
jle
movsb
in
xchg
lret
cmc
aas
add
test
inc
and
int
leave
out
pop
int
push
popa
psubusw
mov
xchg
push
or
push
mov
popf
sbb
aaa
movsl
enter
sbbl
xor
sub
pop
jmp
add
enter
sahf
shr
out
ficomps
jae
inc
out
dec
cmc
pop
mov
andl
mov
mov
aam
mov
inc
leave
xor
and
mov
aaa
or
mov
movsb
mov
jno
sub
mov
fsave
movsl
inc
movsl
cli
dec
inc
sahf
pop
cmp
or
cmp
adcb
jge
push
and
xchg
and
mov
iret
imul
or
push
jae
fisubs
or
lods
mov
fsubs
repnz
test
and
or
adc
pushf
call
cltd
xor
adc
nop
pop
push
repnz
les
leave
cmp
mov
ret
scas
in
and
mov
inc
or
jp
cli
js
mov
das
fstp
jno
xor
lea
mov
adc
pop
popf
roll
pop
shlb
imul
and
pop
daa
shll
cmc
pop
dec
push
push
jne
pop
pop
icebp
ja
cmpsl
pop
mov
inc
das
out
stc
enter
fs
push
pop
test
aam
mov
movsb
xchg
mov
jmp
mov
jb
pop
dec
hlt
jecxz
mov
frstor
subl
cmp
xchg
cmc
xlat
jg
mov
xor
sub
sub
icebp
sub
cmp
shll
xor
rorl
jo
fildll
push
mov
sub
out
push
in
dec
bound
xchg
lds
clc
mov
in
out
lahf
inc
es
xlat
stos
mov
jbe
pop
pop
fdivr
gs
insb
test
lret
jbe
xchg
and
aam
xor
movsb
xor
sub
sbb
repnz
mov
and
scas
rorb
loope
imul
int3
in
sti
fldenv
adc
loop
out
imul
test
cmp
in
insl
lcall
lahf
pop
adc
insl
pop
xor
mov
test
inc
sbb
and
xor
sub
xchg
popa
mov
sbb
and
bound
xor
xchg
imul
add
pop
mov
fnstcw
mov
inc
xchg
adc
lret
push
cs
je
mov
sti
daa
mov
jb
and
mov
lock
jmp
cmp
adc
dec
push
push
dec
xor
mov
nop
mov
and
or
push
push
xchg
insl
lds
mov
aaa
cld
mov
dec
sbbb
mov
jnp
inc
sub
mov
fwait
out
xchg
lea
jns
mov
adc
xchg
mov
outsb
notb
push
xor
xchg
lds
mov
nop
mov
inc
scas
sar
or
mov
mov
es
fisttpll
js
and
fidivl
or
and
arpl
add
nop
mov
repnz
dec
ds
mov
add
inc
lahf
pop
repnz
ficomps
fcomps
jecxz
sti
insb
pop
in
mov
cwtl
adc
call
addr16
push
or
loopne
pop
adc
dec
mov
dec
cltd
mov
popf
mov
pop
aas
shll
fcmovnbe
xchg
or
cmpsb
stos
fstpl
rolb
mov
subl
or
cmp
mov
adc
and
dec
sbb
pusha
ss
imul
lds
add
lret
pop
fldcw
aad
into
daa
add
inc
ljmp
jg
mov
into
sbb
stos
mov
xchg
shrl
cwtl
inc
into
sbb
add
mov
or
xor
push
adcb
int3
aam
and
mov
inc
jnp
push
outsb
mov
sbb
andl
fcmovnb
lea
mov
push
mov
xor
push
addr16
cltd
jnp
inc
pop
das
movsb
and
sbb
push
cmp
push
insb
data16
adc
pop
xor
bound
xchg
repnz
repnz
nop
into
shlb
and
add
inc
test
and
in
arpl
sti
mov
and
push
mov
pop
mov
mov
or
ds
dec
fwait
xchg
std
mov
lret
jmp
or
mov
ds
data16
cmp
addl
imul
jge
xor
mov
ret
sti
mov
mov
outsb
ret
test
jecxz
or
add
int
jmp
bound
idivl
scas
enter
roll
imul
add
arpl
xchg
sub
insb
inc
mov
cmc
jbe
pop
sbb
imul
pop
add
adc
add
and
les
lock
test
inc
xor
outsb
xor
dec
sbb
jne
adc
mov
clc
push
test
add
pop
jg
sub
addr16
adc
out
xchg
add
xchg
xor
gs
adc
insl
jae
jno
mov
sub
loopne
dec
lea
popa
add
lods
mov
add
ljmp
jecxz
loopne
ja
iret
gs
outsb
sub
test
mov
and
add
call
push
jno
push
pop
push
cmp
das
pop
mov
add
xor
ja
flds
mov
mov
sahf
xor
out
xchg
cmp
dec
ss
call
out
and
out
mov
sub
push
outsl
add
dec
add
outsl
cltd
aam
repz
pop
mov
hlt
lahf
adc
inc
xchg
inc
adc
js
cmp
pushf
inc
xor
cmc
ret
mov
lahf
test
je
pop
ss
pop
mov
mov
xor
and
mov
push
xor
cmc
xor
test
push
inc
xor
xor
xchg
adc
cltd
iret
jmp
mov
iret
add
cmc
sbb
shrb
cmp
jbe
mov
sbb
or
xchg
inc
mov
enter
sti
adc
pop
jmp
jae
push
and
add
outsb
pop
rcrb
test
adc
push
dec
mov
mov
or
enter
xor
lahf
xor
or
sbb
test
xor
insl
icebp
add
cmp
cmp
mov
mov
cltd
jle
or
pop
pop
mov
call
xor
packsswb
jle
outsb
add
test
and
imul
loopne
testb
fs
push
fbstp
aam
pop
inc
scas
push
sub
cmp
out
dec
sbbb
inc
mov
addr16
aam
out
shlb
add
sbb
xor
sti
jns
rorl
xchg
data16
jmp
sub
mov
add
pop
inc
jg
xor
insl
inc
test
cli
shlb
jl
push
inc
enter
cmp
pop
pop
jmp
and
or
dec
rcll
call
push
cmp
sbb
cltd
push
out
mov
adc
fs
in
popf
dec
stos
inc
xlat
xor
aad
push
jnp
mov
xchg
add
das
add
das
jg
push
out
rcrb
mov
dec
fwait
popf
bound
sub
fldenv
es
sbb
jmp
mov
js
repz
outsb
xchg
jne
lcall
and
mov
lret
adc
xor
bound
adc
push
dec
sub
push
inc
add
aam
stos
pop
inc
jae
pusha
loope
loop
sbb
and
sar
js
pop
icebp
hlt
mov
xchg
cmp
pusha
cmc
pop
jo
ret
or
out
pop
push
mov
lret
mov
xchg
fisubs
aas
or
cmc
sub
in
push
test
add
subb
jl
popa
xor
mov
outsl
mov
pop
dec
dec
daa
dec
sti
popa
repnz
fidivs
test
scas
loop
sahf
ja
bound
jne
push
xor
mov
movsl
test
xchg
push
enter
rcrl
inc
dec
mov
jmp
add
fdivs
stos
je
imul
push
xchg
cmp
mov
aam
mov
and
sbb
sub
xlat
call
inc
and
and
std
enter
lods
jg
enter
dec
dec
pop
mov
movsb
outsl
jg
adc
lea
and
mov
lods
rorl
inc
incb
mulb
jns
adc
ljmp
popf
pop
jne
in
dec
cmp
mov
or
jne
sub
or
mov
push
test
mov
cld
leave
nop
fwait
in
sbb
pushf
fadd
fiaddl
mov
shrl
xchg
push
mov
xor
lds
int3
inc
popf
sahf
mov
cltd
in
cld
sbb
movsl
xor
add
lcall
xchg
pop
iret
mov
inc
fsubr
clc
aam
pushf
adc
out
mov
add
xchg
fldenv
incl
add
push
popf
inc
mov
in
inc
pop
in
insl
stos
scas
dec
fyl2xp1
mov
jmp
add
inc
adc
stos
cld
pop
cmp
cmp
shr
add
adc
jge
pop
jle
movsb
cmovno
lds
hlt
pop
loop
icebp
in
xchg
jle
sbbb
rcr
push
jbe
in
pop
adc
pop
out
rep
sbb
dec
and
ds
mov
push
push
and
enter
lret
push
mov
js
test
and
xchg
mov
out
ds
out
adc
mov
xor
movsl
pop
add
pop
es
fbstp
xchg
mov
scas
stos
divl
or
xor
push
test
lds
cmc
push
loopne
xchg
jecxz
sbb
iret
dec
inc
fldl
jl
test
push
or
mov
retw
test
pop
hlt
jb
sub
jo
je
cmp
arpl
mov
icebp
cpuid
push
jle
mov
xorl
pop
sahf
sti
jg,pn
mov
jnp
push
cmpl
mov
jmp
aad
xor
inc
fs
add
lret
or
mov
nop
mov
in
outsb
nop
sbb
inc
adc
int
dec
pop
jbe
outsb
cltd
hlt
sub
push
les
test
mov
aas
push
repz
rclb
pop
je
test
insl
rcr
cmp
jne
js
loope
and
mov
mov
and
iret
std
pop
and
daa
add
popf
xchg
fisubs
or
add
mov
xchg
push
pop
jo
mulb
sbb
jge
dec
sub
xlat
inc
gs
mov
shll
mov
ret
imul
mov
nop
cmpsb
mov
fiadds
xor
jne
pusha
pop
ret
outsb
int3
push
mov
int3
mov
inc
hlt
mov
out
insb
or
repz
ss
leave
sti
es
inc
dec
and
pop
into
xchg
movsl
cmpsb
ljmp
ficomps
adc
int
fidivrs
lock
fildl
aaa
icebp
das
cld
sub
loope
pop
mov
jl
inc
pop
xor
in
dec
add
cld
jne
aad
jg
clc
adc
inc
movaps
push
xor
push
rcrl
mov
dec
jo
int
stos
out
lahf
neg
popl
and
inc
or
jle
mov
aaa
inc
adc
cmc
dec
stc
rcr
dec
cmp
iret
popf
fs
sti
in
jg
nop
sbb
inc
or
imul
sbb
push
fidivrs
out
shlb
jp
outsl
popa
dec
push
xor
mov
dec
sbb
es
mov
addl
xor
sbb
mov
jae
out
js
lret
jno
lret
and
dec
sti
pop
jne
fstl
xor
jmp
imul
mov
in
sub
sbb
aam
xchg
xor
inc
movl
jbe
push
xchg
push
mov
mov
imul
push
cmpsb
loopne
outsl
test
int
sbb
cltd
loope
aad
jecxz
inc
or
cmp
xchg
notl
jg
ds
daa
mov
xchg
loop
outsl
test
mov
sub
sbb
mov
sbb
lods
push
xchg
loopne
gs
and
cmp
or
test
and
inc
xor
inc
lods
push
sub
lds
mov
fnstsw
ss
push
mov
and
and
out
aas
sti
sti
incl
xor
or
or
adc
rorl
fst
adc
or
push
adc
push
sbb
push
daa
inc
incl
frstor
orl
mov
adc
jecxz
insb
or
cmp
cmp
jle
xchg
scas
xchg
push
adc
inc
lds
mov
dec
fwait
dec
mov
cmpsb
inc
inc
test
lock
je
pavgb
cmc
idivl
or
and
xchg
push
ret
jecxz
dec
mov
sti
jle
sti
push
addb
jmp
cmp
rcl
jmp
xor
or
jecxz
lcall
in
and
ret
push
mov
inc
push
sbb
and
add
jns
sbb
int3
xchg
lods
cmp
repz
inc
adc
xor
mov
subb
rorb
dec
fdivr
insl
xchg
out
xchg
mov
and
sbb
cmpsb
jo
dec
mov
pushf
xchg
sbb
or
pop
inc
jo
xchg
pop
aam
in
adc
data16
je
dec
stos
adc
ljmp
repnz
fmull
mov
mov
bound
cmp
add
ja
xchg
fdivl
sbb
xor
flds
cmp
sbb
subb
jnp
mov
fnstenv
lcall
mov
stc
sub
cmp
mov
outsl
cmp
fdivr
ret
mov
das
movsl
sub
push
mov
push
call
push
add
push
flds
mov
shrl
jae
mov
push
jno
adc
out
mov
inc
inc
aaa
inc
jo
sub
pop
mov
in
fadd
insl
in
xchg
flds
incl
xchg
xor
xorl
dec
stc
cmpsl
dec
sbb
jo
rcr
mov
push
in
lds
pop
push
cwtl
andl
ja
dec
adc
push
ret
cmp
mov
sti
xor
xor
push
jbe
insl
in
int3
add
scas
cwtl
and
cli
inc
das
sub
ds
lds
mov
pop
jmp
mov
sarl
jbe
mov
sub
fidivs
or
jg
stc
push
xchg
mov
cmc
dec
ret
pushf
jae
shrb
loopne
pop
out
into
rcll
ljmp
in
f2xm1
or
mov
push
and
mov
cmp
adc
fwait
mov
adc
movsb
pop
mov
adc
pop
mov
in
dec
sub
pop
mov
pop
push
dec
cmp
std
std
imul
mov
mov
loopne
mov
dec
jne
ss
jge
or
fiadds
jp
mov
jbe
sub
jo
into
gs
push
lds
sub
mov
xchg
jg
adc
das
out
ss
adc
dec
sub
mov
jle
or
adc
adc
cli
mov
mov
enter
xor
cmc
std
jns
ds
loope
int3
mov
in
push
int
cmpsl
pop
pop
enter
jno
jb
or
mov
loop
or
push
mov
xchg
repz
rolb
mov
pop
scas
out
mov
test
fwait
push
adc
fdivrl
pushf
inc
out
sub
popa
inc
mov
fwait
add
dec
fcmovu
lret
cli
cli
daa
jno
mov
in
dec
pop
mov
repz
or
and
mov
movsb
fstpt
xor
cmp
test
jecxz
jae
and
out
ret
pushf
daa
aaa
out
cld
std
xlat
adc
out
sbb
xor
mov
inc
shl
jle
fmull
out
test
fs
mov
cwtl
and
sub
lret
pop
or
jge
jg
fiaddl
add
dec
outsb
push
and
push
fwait
test
jecxz
pop
inc
insb
jnp
mov
cmp
fldl
lods
fbld
adc
cwtl
pop
add
adc
add
mov
movsl
jbe
mov
loope
or
fistpll
push
test
pop
inc
nop
scas
push
sti
inc
stc
subb
add
cmc
insb
and
jne
hlt
pop
in
inc
mov
jbe
and
xor
sbbl
ret
mov
fsubrs
mov
aaa
and
xchg
mov
popa
outsb
cmp
add
nop
mov
cltd
mov
add
pop
out
pop
insb
jge
mov
aam
mov
lret
push
rorb
adcl
out
add
jg
fsubl
jp
shld
adc
add
aaa
lods
sbb
adc
stos
push
inc
dec
push
sbb
sub
jne
scas
xlat
hlt
pop
pusha
out
fsts
fsub
add
sub
cli
lahf
sahf
mov
imul
imul
test
xchg
adc
out
icebp
jns
fnstcw
cmp
mov
sbb
xchg
lods
mov
inc
jbe
insb
or
decl
add
jecxz
xchg
fidivl
hlt
idiv
fbld
call
inc
push
enter
test
sbb
call
les
popa
mov
lea
inc
xchg
xchg
cmpsb
sbb
jo
xorl
mov
and
sub
in
fcmovb
sbb
cmp
shll
jmp
mov
cli
flds
test
xlat
sti
out
jmp
popa
mov
mov
out
mov
lds
je
lret
push
pop
shrb
aaa
fs
mov
mov
mov
mov
mov
inc
rcrl
out
cmp
sbb
lcall
sbb
inc
push
daa
es
loop
hlt
mov
mov
testl
dec
stos
lcall
mov
into
daa
mov
repz
fiaddl
arpl
pushf
jo
mov
pop
xchg
or
aas
ret
add
outsl
mov
inc
dec
cmp
ljmp
mov
in
enter
clc
mov
adc
inc
xor
repz
mov
fldenv
push
and
outsb
jmp
cmp
dec
daa
and
stos
xchg
jno
xchg
imul
jbe
and
add
adc
mov
js
in
xchg
insl
mov
push
mov
mov
shll
xor
test
stos
xchg
stos
mov
lods
fidivrl
dec
mov
hlt
jge
in
pop
fildl
inc
push
xchg
inc
rclb
fucomp
add
xchg
rorb
divl
stos
xchg
mov
xchg
fwait
jns
xor
aas
leave
dec
int
sub
xor
and
jb
push
sbb
pop
dec
and
cmp
push
aas
pop
mov
sub
pop
lcall
gs
dec
jno
test
add
jg
in
pop
pop
dec
andps
in
ss
mov
mov
xchg
push
adc
push
mov
cltd
movsb
out
mov
and
outsb
fcompl
sarl
bound
sbbl
and
jg
jne
sbb
xchg
xchg
cmp
add
in
dec
mov
loopne
andl
and
sbb
mov
lcall
ds
cld
jo
popf
and
sbb
push
dec
xchg
xchg
mov
mov
lcall
xchg
push
sub
imulb
push
push
adc
sbb
cmp
rcrb
test
push
push
and
push
not
int3
add
js
cli
fwait
jne
call
hlt
into
dec
jns
xor
jns
aaa
out
jne
sti
dec
pop
out
test
pop
aam
test
xchg
pushf
repz
ja
out
add
icebp
push
int
inc
pop
dec
cltd
mov
fdivrl
adc
cltd
push
push
ja
mov
js
push
pop
fists
mov
ret
cli
lcall
ficompl
sub
imul
dec
jbe
xchg
xor
mov
imul
xor
out
inc
xlat
loopne
fstpt
adc
xchg
xor
xor
and
xor
jl
aad
push
scas
pop
imul
dec
mov
add
divl
pusha
inc
and
xchg
inc
in
mov
jno
inc
out
adc
jl
xchg
xchg
insl
dec
rclb
aad
inc
jbe
dec
test
mov
scas
into
in
jecxz
pushf
movsb
dec
ja
mov
sbb
hlt
shrb
insb
sub
xor
ja
sub
in
ss
pop
outsb
mov
dec
scas
je
mov
ret
js
mov
pushf
sbb
fsubrl
lods
arpl
int
add
fcoms
subl
fs
pop
and
xor
test
sub
mov
gs
cmp
push
sub
ret
mov
flds
sub
sub
jmp
fisubrl
lds
in
cmc
out
mov
mov
inc
mov
mov
rol
std
jl
cwtl
stos
lret
pusha
pop
ss
in
xchg
and
leave
jp
cli
xor
ret
jcxz
sub
pop
sub
aas
das
sbb
cmpsl
sub
pop
mov
inc
repnz
mov
mov
push
or
outsl
inc
mov
outsb
xor
xchg
push
push
mov
imul
fmulp
aam
add
jecxz
fsts
pop
hlt
push
mov
or
repnz
mov
shll
xor
or
nop
ret
in
xchg
inc
jg
mulb
sbbb
in
icebp
loope
xchg
dec
ret
popa
cmpsl
sarb
pop
pop
push
popf
test
cmp
rcl
push
stc
inc
je
mov
cmp
jl
push
sub
std
cltd
xchg
cld
adc
mov
sti
scas
sbb
xchg
cmp
push
rolb
sub
cli
mov
sti
adc
xchg
xor
xor
cli
mov
insl
insl
jnp
sbb
test
cmp
jg
sub
mov
cmp
mov
enter
and
mov
mov
fdivs
push
jecxz
les
push
jp
stos
sarl
pop
daa
pop
repnz
or
cltd
add
sub
nop
adc
outsl
mov
xchg
mov
mov
mov
add
inc
xchg
scas
cli
das
ficompl
and
inc
pop
dec
adc
push
mov
jge
mov
inc
mov
xchg
maxps
push
xor
setle
pop
and
mov
pop
or
mov
fcomps
xchg
hlt
ljmp
sbb
sbb
fchs
dec
pop
or
cltd
fdiv
adc
mov
das
push
popf
ss
popa
subb
jb
clc
add
bound
pop
cmp
lahf
mov
out
pop
pusha
mov
mov
cmp
shrl
insl
adc
lahf
out
out
js
adc
pop
out
mov
mov
add
iret
lret
xchg
xchg
and
mov
or
inc
add
pop
in
mov
cmp
mov
xor
pop
shrb
add
out
jbe
push
in
dec
leave
jo
push
jno
push
add
sbbb
lds
mov
sub
sbb
push
mov
and
jge
inc
mov
inc
adc
cmc
xor
xchg
mov
pop
sub
aad
sahf
and
mov
dec
sub
adc
mov
and
inc
add
xchg
adcb
inc
jle
daa
loop
inc
lods
and
movsl
rol
push
popa
dec
iret
mov
cwtl
enter
pop
jne
push
mov
pushf
pop
ss
rolb
pop
sub
stos
div
pop
dec
and
xor
imulb
inc
mov
xor
and
enter
jno
repz
cmp
xchg
cmc
pop
mov
push
cmp
mov
les
orl
test
rolb
cli
push
mov
call
adc
sbb
clc
jecxz
repnz
mov
cmpsb
lret
in
ret
imul
andl
lret
test
pop
cmp
or
or
cli
add
loopne
addr16
cltd
jae
test
xchg
test
incb
inc
xchg
aam
xor
daa
mov
lret
and
push
inc
jg
enter
push
jae
not
cmp
and
jno
les
and
int
loopne
mov
and
ja
dec
xor
mov
push
notl
sub
test
adc
adc
fwait
bound
sarl
aam
mov
push
into
leavew
or
mov
dec
mov
popf
jb
ror
push
ljmp
std
or
dec
ljmp
xor
mov
cmc
popf
sub
mull
add
fbld
add
mov
lret
dec
pop
test
xchg
inc
ret
icebp
push
jbe
push
rcrl
pop
rcll
adc
mov
das
mov
pop
mov
pop
lahf
clc
mov
je
sub
push
ret
jg
push
ficoms
stos
ds
inc
clc
push
dec
out
out
pop
mov
pop
lods
loop
mov
data16
movsl
push
pop
push
outsb
dec
fs
inc
mov
mov
test
sub
mov
mov
loopne
jo
es
imul
sub
shrb
jb
cwtl
push
sub
aaa
push
xor
ret
aad
in
idiv
mov
stc
jne
or
dec
mov
and
dec
mov
mov
aas
xor
pop
lds
adcl
in
subl
and
xor
insl
sbb
nop
in
test
in
mov
jg
pushf
leave
mov
cwtl
sub
push
inc
ror
dec
mov
adc
push
mov
inc
xchg
arpl
enter
jb
inc
jns
push
addr16
sbb
ljmp
jnp
adc
out
push
insl
nop
cs
push
xchg
divl
xchg
rcrb
mov
xchg
lea
or
test
sub
or
push
fsts
test
jecxz
mov
pop
push
xor
mov
in
mov
sti
jg
fidivl
xchg
mov
adc
bound
mov
mov
mov
insl
int3
repnz
ja
adc
pop
or
in
icebp
add
gs
jbe
add
adc
xchg
lahf
outsb
xor
xchg
mov
test
test
push
outsl
push
out
and
lret
rolb
js
or
sub
pop
pop
scas
and
je
lret
pop
cmpsl
popa
insl
icebp
dec
mov
jnp
push
js
int3
fisttpll
and
or
adc
adc
inc
inc
cmp
mov
ja
add
dec
mov
popa
xor
sbb
jmp
pop
push
cmpsl
sbb
movsl
outsb
cmp
mov
in
lods
insb
lcall
pop
lods
sahf
lret
xchg
sub
mov
dec
cmp
pop
mov
test
bound
cmp
ja
mov
xlat
fadd
jbe
es
inc
js
es
adc
outsl
xor
dec
push
icebp
cmp
cli
ljmp
sub
test
push
stos
mov
out
inc
xor
mov
mov
or
jecxz
out
mov
fs
mov
pop
or
pop
inc
xor
outsb
pop
jb
imul
jmp
outsl
adc
sub
mov
mov
insb
sbb
addb
push
mov
ss
test
sub
pop
les
inc
jnp
mov
mov
testb
roll
out
jne
xchg
daa
ljmp
jno
xor
xor
cmp
pusha
or
fistps
arpl
dec
inc
in
cmpsl
stos
jmp
sub
mov
xchg
ret
cmp
stos
loopne
cmpl
rcrb
js
mov
and
push
std
test
stos
decl
mov
cmp
lret
and
add
cmp
inc
mov
and
dec
adc
mov
call
ds
sti
arpl
fisttps
push
ja
xchg
shll
insl
push
pop
jno
cmpsl
hlt
sahf
daa
lret
push
pop
xchg
loopne
xchg
aam
sti
lret
stos
es
push
jne
cwtl
insb
adc
xchg
fst
imul
inc
lret
lahf
shlb
xchg
mov
and
push
mov
add
inc
mov
int3
dec
ss
bound
shrl
lods
jp
les
addl
cmp
cmp
mov
or
xchg
sub
vminsd
and
mov
and
mov
cltd
das
ret
inc
ret
dec
or
mov
nop
out
out
sbb
lret
jae
xor
xor
xor
movsl
out
xor
push
into
loope
shld
xor
jle
loopne
push
add
arpl
cmp
dec
cwtl
imul
push
lahf
and
mov
fidivrs
xor
and
jmp
das
iret
sbb
arpl
xchg
push
cmp
out
repz
adc
inc
imul
std
enter
mov
mov
ret
sub
xor
cs
inc
test
jae
lods
add
pop
pop
aas
or
mov
hlt
gs
stc
sbb
jae
mov
mov
hlt
and
lods
sti
inc
movsb
add
or
cmp
mov
call
inc
or
xor
xchg
adc
mov
test
sub
out
cmp
fsub
iret
ret
sbb
pop
xchg
jecxz
roll
cmp
iret
rcr
push
push
dec
dec
pop
xchg
sbb
imul
mov
rcll
movsl
jl
loopne
lea
mov
add
les
pop
lods
inc
sar
mov
fildl
add
sbb
int
test
dec
out
pop
inc
push
sarl
push
xchg
mov
cmp
call
pushf
pop
mov
mov
nop
mov
and
push
cmpsl
scas
test
addb
or
test
pop
xor
arpl
xchg
repz
mov
arpl
push
jg
es
jmp
fisubs
mov
pop
inc
pop
in
push
pop
insb
cmp
arpl
and
dec
dec
xlat
ss
pop
dec
dec
enter
mov
jge
je
inc
pop
cltd
cld
push
fisubrl
addl
dec
shrl
and
pusha
daa
cmp
push
or
test
mov
shl
xchg
or
shll
cmpsb
orb
push
js
xchg
pop
mov
movsb
and
call
or
push
mov
jp
mov
arpl
fs
push
test
loopne
or
mov
insb
jo
add
inc
or
mov
cmp
pop
aas
mov
popf
aaa
fsub
add
inc
insb
cli
int
movb
insb
shll
mov
loop
jno
movsb
lods
imul
mov
sub
xchg
lods
aas
jnp
or
add
orl
pop
imul
ljmp
ror
sub
add
sbb
sub
xchg
lds
orl
mov
xor
xchg
jmp
and
sub
fldl
pop
dec
fistl
sbb
cmpb
xchg
jns
int3
xchg
mov
cli
cmp
pushf
mov
xor
daa
mov
inc
orb
test
or
lret
add
lods
push
testl
orb
in
movsl
sbb
and
movsb
pop
out
repz
dec
cmp
pop
inc
sarb
dec
fidivl
mov
cltd
mov
mov
mov
imul
jl
insb
sbb
add
or
push
jnp
inc
xchg
cmp
shr
loope
cmp
int3
inc
je
jle
lahf
sti
mov
xchg
pushf
inc
jle
xchg
inc
mov
mov
mov
sub
jmp
sbb
in
jb
inc
and
ja
dec
addl
fimull
in
fucomip
gs
xor
cmp
mov
nop
sahf
push
icebp
in
mov
out
ret
jmp
pushl
mov
and
out
mov
insl
cmp
leave
inc
sub
std
cmpl
idivl
jb
enter
ss
pop
aas
push
outsb
and
sbb
fbstp
outsl
sbb
pusha
push
pop
xorb
mov
shll
mov
rclb
popa
and
inc
mov
jl
repnz
ds
pop
imul
stos
cmp
addr16
jne
xchg
or
inc
loop
xchg
cmp
sti
out
jbe
loope
mov
xor
adc
sub
cmp
cmp
mov
add
jecxz
cmp
dec
mov
sbb
std
fcomps
fcom
mull
out
ret
test
int3
sub
pop
mov
loopne
sub
outsl
test
pusha
adc
mov
push
and
mov
popf
jb
push
fsubp
std
xchg
add
leave
push
out
cmc
out
or
mov
push
cmp
and
aad
fdivs
pop
js
imul
xchg
roll
xchg
pop
aas
adc
jb
mov
mov
sub
lock
sbb
sarl
jns
out
jbe
jg
fsub
jne
jnp
sbb
std
addr16
rcrb
inc
cs
out
in
sbb
mov
sbb
inc
xlat
lahf
jp
iret
sbbw
out
scas
and
xchg
mov
sarl
cmpsb
hlt
imul
out
call
mov
pop
adc
sbb
fcomp
sub
cmp
mov
fcoml
jae
cltd
mov
imul
mov
adc
lock
adcl
push
aam
mov
mov
push
lcall
int
push
jns
jmp
lods
imul
negb
jbe
push
push
clc
and
dec
ja
and
or
dec
mov
popa
roll
decb
cmp
sub
push
mov
push
in
jnp
lods
lods
push
mov
fnstcw
jl
sqrtps
and
stc
push
dec
jb
out
pop
mov
inc
movsl
cli
add
dec
pop
iret
sahf
inc
xchg
jg
es
adc
sub
sarb
push
lods
aad
pop
mov
push
lahf
xchg
test
aad
jp
pop
cli
adc
xchg
sahf
xchg
sub
or
lret
aas
insl
call
mov
pop
data16
jmp
mov
enter
sarl
shrb
mov
test
std
iret
stc
jge
xor
mov
lcall
ds
pop
insb
lret
xchg
cmp
out
stos
adc
insb
js
scas
push
mov
dec
addr16
push
fstp
lods
or
arpl
add
sbb
ja
je
and
popa
sub
xchg
pop
ret
jnp
mov
movsl
lcall
outsb
cld
dec
cmc
in
adc
arpl
stc
sub
mov
imul
aas
or
scas
pop
cmp
pop
push
pusha
fucomip
aas
xchg
out
cld
xor
aas
mov
lods
mov
jbe
aas
dec
pop
dec
mov
popf
nop
mov
adc
cmp
push
jl
es
lods
orb
ficoml
insb
int
leave
fstpt
lret
xchg
fdivrl
sbb
test
mov
test
in
or
jecxz
loopne
inc
aam
mov
int
pop
cs
and
out
cltd
je
cltd
dec
movsl
lret
hlt
jns
pop
or
add
and
and
pop
and
push
xchg
and
mov
pop
fistps
sahf
insb
mov
pop
repz
adc
or
test
fcmovbe
lret
leave
push
movsb
and
xlat
repz
cmpsl
fldenv
leave
icebp
data16
lock
or
jnp
repnz
and
sub
mov
rol
rorb
push
push
push
mov
out
addb
adc
jmp
push
push
or
push
lods
imul
xchg
sbb
imul
sub
faddl
xchg
test
xchg
xor
push
std
dec
mov
test
push
stc
ljmp
xchg
xchg
jno
imul
jge
xor
jle
aas
jge
scas
int3
lods
les
rcl
or
push
mov
pusha
insb
addb
ja
sbb
pop
pop
ljmp
ror
dec
cmp
mov
lods
movsb
xchg
cld
gs
stc
in
inc
imul
pop
dec
mov
gs
mov
dec
cltd
lds
pop
add
bound
mov
pop
mov
or
mov
daa
lret
inc
or
pop
pop
add
sub
stc
dec
sti
repz
mov
in
dec
cld
pop
daa
cmpsb
shl
out
mov
ljmp
fidivl
in
lds
pop
mov
inc
popa
leave
test
lret
rcrb
or
dec
sub
add
std
cmp
jbe
xor
pop
cmp
sti
add
mov
mov
and
cs
and
std
lds
jae
pop
xchg
mov
jmp
sbb
dec
ljmp
dec
and
jmp
inc
fstpl
imul
negb
jo
addr16
lods
xchg
and
sbb
je
rol
xchg
dec
dec
push
mov
push
notb
shlb
or
adc
shrl
and
or
push
outsl
inc
pop
sbb
mov
sbb
aaa
dec
mov
dec
lods
or
push
xor
push
or
out
jg
jo
out
cmp
xchg
lods
dec
je
sbb
inc
add
inc
in
xchg
dec
sub
xchg
push
cmp
popa
lods
or
sbb
nop
int
into
sbb
dec
fcoml
test
popa
push
adc
popl
push
fsts
mov
pop
rol
das
adc
stos
ljmp
test
mov
inc
xchg
xor
mov
xchg
data16
push
into
sub
mov
ret
mov
push
sub
test
pop
out
lds
xchg
insl
iret
adc
mov
addr16
inc
scas
test
inc
and
or
cmp
loopne
outsl
cmpsb
out
scas
xor
arpl
jnp
xchg
out
repz
sbb
mov
mov
inc
xchg
pop
xchg
fwait
mov
jp
push
sti
lock
aaa
push
insb
xchg
push
repz
mov
aad
jo
xor
dec
mov
jge
in
push
imul
pop
cmp
js
jne
xchg
and
push
mov
jno
lret
loope
inc
sub
ss
sub
arpl
adc
pushf
fs
stc
cmp
inc
mov
mov
mov
xor
sar
lds
iret
adc
cltd
xchg
fldenv
lds
test
ss
jno
mov
mov
ss
das
push
sbb
sub
sarb
leave
call
lods
push
mov
xchg
push
fnstcw
jns
lahf
and
std
sub
mov
pop
pusha
data16
popa
nop
pop
test
and
or
inc
sub
xchg
ss
mov
push
das
sbb
int
or
aam
xchg
daa
push
sti
and
mov
inc
mov
inc
fdecstp
adc
imulb
xchg
idivl
outsl
loope
clc
popf
mov
pop
jle
cltd
subl
insb
arpl
mov
addr16
dec
inc
dec
js
jb
or
je
pop
divb
popa
cli
or
insl
stc
cs
jmp
jmp
push
xor
sub
rorl
mov
andl
mov
pop
iret
das
jb
adc
mov
test
add
xor
mov
jns
xor
outsb
jg
adc
jo
testb
inc
js
and
push
imull
test
data16
pop
bswap
pop
and
mov
add
mov
sahf
cwtl
sbb
cmc
xor
sbb
negb
icebp
or
pop
sarl
int
cmpsb
popf
ret
mov
or
and
out
push
fcmovnu
insl
push
xor
pop
xchg
loop
outsb
dec
push
pop
cmpsb
dec
xchg
push
aas
fldl
clc
sti
xchg
push
sub
push
mov
rcll
jo
jle
inc
sub
lods
test
sbb
fiaddl
lret
jge
cmp
jnp
xor
shll
int3
pop
in
mov
stos
mov
repz
in
xor
js
clc
xor
fmuls
dec
sub
scas
stos
jnp
les
psubq
xchg
lcall
sub
lahf
mov
pop
bound
std
ret
cmp
inc
or
pop
jo
lret
push
adc
stos
push
pop
xor
or
roll
orb
icebp
out
rcl
stc
insb
inc
fldl
sbb
loope
inc
das
js
adc
jne
inc
sub
lcall
out
aad
ss
jbe
or
stos
xor
inc
pop
jmp
mov
sub
cmp
xchg
adc
out
adc
testb
cmp
push
lret
mov
jmp
mov
arpl
mov
and
adc
xchg
imul
xor
pop
push
rolb
and
xchg
aas
or
lcall
or
dec
sbb
ret
cld
movsl
test
sbb
test
lcall
mov
add
dec
mov
arpl
lret
inc
sub
dec
pop
and
fwait
pop
add
add
mov
movsb
xor
repz
int
rclb
xchg
adc
or
xor
push
or
add
pop
mov
int
fwait
sbb
stc
inc
outsl
loope
sub
lcall
xor
jnp
lds
lret
mov
adc
mov
jae
sahf
sar
cwtl
push
repz
orl
inc
fcoms
and
xor
arpl
jnp
xchg
stos
cmp
lcall
mov
mov
xchg
stos
cmp
mov
inc
adc
mov
pop
xor
xor
pusha
cld
fwait
mov
mov
call
inc
push
cwtl
mov
mov
sbb
mov
xor
pop
adc
hlt
inc
lods
xor
cli
mov
or
cwtl
inc
pop
out
mov
mov
pop
cmp
dec
into
sbb
push
adc
push
cmp
push
int3
scas
mov
fldl
sub
mov
sub
pop
mov
mov
or
hlt
scas
lcall
arpl
std
inc
inc
jmp
mov
sub
arpl
rdpmc
int
sub
mov
stos
push
add
push
fcomip
pop
cmp
nop
movsl
ljmp
inc
popf
int3
sub
aaa
int3
repz
pusha
inc
pop
jp
ss
es
sub
lods
bound
sbb
fidivrl
popa
minps
jl
sbb
fnsave
test
dec
std
aam
dec
mov
repz
xchg
ret
mov
cmp
fnstenv
leave
pop
js
lret
rcrb
in
inc
sub
jmp
loopne
cli
pop
mov
xor
cmpsl
sbb
aam
lcall
push
inc
xchg
leave
into
ljmp
mov
repz
mov
ret
incb
ss
sarl
dec
mov
dec
inc
jmp
popa
arpl
jl
negb
pop
mov
test
aaa
data16
popf
in
mov
dec
rorl
inc
in
add
pop
inc
inc
add
push
idivl
repz
push
filds
fs
lock
sbb
dec
sub
daa
jb
dec
ret
dec
stos
xchg
imul
test
xchg
push
dec
fstpl
adcl
je
or
icebp
inc
mov
fadd
psubq
lods
jnp
push
mov
in
and
shll
pop
iret
inc
cmovs
xor
mov
aas
pop
jl
mov
lds
out
add
inc
sub
rcll
das
mov
test
xor
dec
lods
lds
jp
mov
iret
mov
jp
insl
dec
shll
inc
callw
inc
cmp
loopne
inc
jne
mov
lahf
insb
mov
dec
dec
rcr
test
jmp
mov
mov
jge
and
dec
ffree
mov
cmp
jo
int
push
int
les
push
fucomip
and
sbb
xorb
mov
mov
cli
in
cmpsb
push
stos
xor
js
out
cs
mov
out
in
lcall
int
jp
jne
jecxz
popa
dec
pop
out
xor
pop
fcomps
mov
jb
loop
sarl
mov
aaa
imul
jne
cmpsl
scas
bound
pop
sub
data16
js
sbb
jmp
cmp
and
mov
jns
mov
out
dec
mov
js
in
adc
lret
je
out
adc
pop
sar
mov
das
mov
sub
pop
pop
clc
pushf
lcall
hlt
repnz
mov
mov
cmpl
or
sti
mov
push
shlb
hlt
ljmp
mov
push
pusha
icebp
loope
xor
pop
pop
mov
mov
movsb
test
int3
call
mov
xchg
outsb
ss
dec
mov
pmaddwd
push
or
hlt
mov
jo
mov
rol
test
lcall
cmp
outsl
xchg
lods
or
mov
pusha
outsb
imul
push
and
test
add
das
or
js
insb
xor
int3
sahf
xchg
test
lcall
push
adc
out
arpl
hlt
push
lea
mov
xchg
bnd
jmp
xchg
shlb
outsl
and
sti
popf
cmp
add
inc
test
dec
fstps
mov
jg
pop
sub
clc
sub
jo
mov
dec
xchg
lods
out
rol
pop
cmc
jmp
mov
add
fsub
popf
jmp
lea
inc
leave
lock
movsb
jg
mov
das
mov
mov
xchg
push
aaa
sahf
fwait
shrb
fstpl
orl
add
jnp
out
movsb
adc
xchg
xchg
cmpsl
push
cwtl
outsl
stos
xchg
call
test
ds
daa
xchg
pop
inc
sub
ljmp
lods
cli
jp
add
rorl
test
movb
mov
mov
shll
ljmp
mov
mov
mov
sbb
lcall
ljmp
mov
out
mov
inc
mov
inc
push
iret
xchg
xchg
cmp
jge
test
in
cld
sbb
mov
lcall
popf
adc
les
cmp
mov
sub
cld
add
cmp
xlat
inc
jno
jle
stc
jnp
or
pop
out
xor
sub
insb
mov
xchg
add
rcll
popa
ja
and
ljmp
cli
add
out
pop
mov
sub
jne
push
sub
fcoml
mov
sar
cmp
mov
pop
adc
aad
lret
xor
stos
insl
xchg
pop
fisubs
mov
out
mov
arpl
shrl
sub
cltd
pop
push
pop
xchg
jl
js
mull
mov
mov
ds
mov
loope
mov
into
sub
cmp
inc
jb
std
lods
out
in
pop
sbb
lret
rcll
or
cli
xchg
xchg
jle
scas
xorl
jnp
imul
loope
adc
data16
lds
mov
pop
call
push
arpl
stos
cs
push
and
ret
xchg
sbb
int
and
mov
dec
outsl
xchg
movsb
arpl
push
pop
adc
ds
roll
bound
lret
cli
inc
mov
stos
add
and
bound
adc
test
mov
mov
add
mov
das
dec
push
adc
pop
push
out
jg
out
cmp
test
push
jns
and
push
int3
aas
lds
les
push
cmp
dec
adc
jp
out
clc
ds
push
mulb
xor
cmpsl
dec
xlat
inc
in
je
pop
mov
lods
lret
xchg
fwait
add
fnstsw
mov
mov
ljmp
inc
cli
popa
lret
imul
push
xor
push
in
out
inc
testb
ljmp
jle
adc
sbb
jmp
notb
add
lret
sti
push
scas
loope
rclb
imul
jo
mov
cmp
out
mov
andb
pop
cmp
pop
mov
shl
cmp
inc
fidivl
inc
jbe
nop
inc
sub
inc
icebp
aaa
jns
je
lods
cmp
cmp
rolb
cld
inc
pop
pushf
push
xchg
sbb
mov
fcomip
loop
clc
jns
xor
mov
xor
lods
fdivrp
pop
inc
xchg
xchg
in
pop
das
inc
ljmp
dec
inc
add
sbb
pop
notb
mov
cmpsb
test
jne
clc
lret
mull
and
dec
ret
scas
inc
mov
fstl
clc
lcall
test
cmp
or
cld
sbb
jns
sbb
inc
lret
hlt
insb
inc
aam
xor
lcall
in
dec
fs
rcll
jb
stos
xchg
pop
gs
dec
popl
imul
stc
out
out
or
add
movups
nop
lock
pop
adc
subl
mov
xchg
jmp
imul
adc
dec
dec
cltd
fwait
adc
mov
movsl
push
andb
jmp
lods
sahf
lods
scas
loope
scas
adc
stc
fldl2e
cmp
int3
or
and
fsts
inc
cmc
add
lock
push
push
repnz
cmp
pop
fcmovb
jae
int3
pcmpgtb
pop
mov
pusha
xor
jns
xor
lods
or
fists
mov
test
add
cmp
loopne
sbb
lock
rcrb
jns
xchg
pop
inc
loop
add
mov
dec
cmp
push
icebp
cmp
dec
mov
popf
in
fwait
xor
lds
lret
push
icebp
lret
push
jge
adc
pusha
jno,pn
in
xchg
fidivrl
icebp
pop
test
push
cmp
and
mov
xchg
dec
es
pop
std
jp
imul
test
gs
imul
mov
jbe
fdivl
call
adc
subb
icebp
imul
cmp
cli
call
aam
popf
call
xchg
push
cmp
jns
popf
dec
mov
jno
les
add
cmpsl
insb
or
jae
mov
and
xchg
add
pop
dec
push
data16
jno
push
jnp
or
icebp
jl
and
mov
imul
pop
add
xchg
incb
scas
dec
push
jae
in
xor
push
ficoms
sub
inc
cmp
fimull
ret
out
out
cmp
mov
mov
sub
dec
bound
adc
add
sub
mull
jecxz
jbe
fwait
out
xor
pusha
lcall
mov
fdivs
jmp
pcmpgtd
scas
je
js
xchg
sub
and
or
push
pop
mov
pop
mov
lock
dec
dec
push
cmp
inc
incl
dec
daa
inc
adc
mov
push
repz
cwtl
aam
dec
icebp
movsl
out
and
pop
jp
fldl
push
and
xchg
ficomps
incl
jne
daa
push
es
mov
mov
mov
imul
jmp
ljmp
scas
inc
push
decl
adc
fisttps
push
iret
mov
pushf
int
add
jl
loopne
inc
pop
call
adc
call
xchg
mov
add
adc
dec
adc
pusha
mov
push
or
pushf
imul
jg
xchg
sub
xlat
sbb
lcall
sbb
call
fdivrs
add
mov
pop
daa
and
inc
inc
jle
mov
and
ret
adcl
lcall
lret
outsb
and
fdivrl
sbb
xor
jg
out
fwait
sub
xchg
jno
test
xchg
dec
mov
jb
fidivl
repz
lahf
adc
ja
adc
dec
sbb
gs
lock
enter
push
fsubs
int3
inc
repz
pop
mov
adc
xor
cmp
outsl
fwait
scas
cmp
xchg
sbb
pop
xor
mov
add
dec
jg
lcall
and
popf
sbb
mov
pop
out
sbb
push
xchg
out
cwtl
inc
nop
imul
arpl
cld
mov
lods
jg
push
add
stos
out
ds
push
lcall
push
or
sbb
repz
or
les
icebp
test
test
sbb
inc
sti
xor
pop
scas
imul
ja
cmp
dec
jae
sub
xchg
lods
lds
mov
ret
mov
iret
dec
sub
lods
mov
iret
je
ds
dec
aad
data16
das
clc
lods
leave
jae
jo
sub
jecxz
adcb
or
push
mov
mov
iret
jb
out
push
cwtl
push
pop
cmc
jmp
push
push
loop
pop
mov
xchg
jge
xor
mov
sub
inc
mov
add
iret
push
add
mov
push
jae
inc
popf
inc
lea
int3
push
lret
jle
adc
sub
jnp
pop
xorb
mov
and
lea
dec
sbb
push
mov
pop
sbb
jmp
or
inc
xlat
add
pop
add
fildll
addr16
mov
call
xor
inc
shll
cmp
cli
data16
aaa
jae
iret
mov
sbb
movsb
int3
scas
add
stos
inc
addb
dec
out
dec
test
dec
mov
xchg
push
inc
std
adc
cli
in
ret
xor
mov
sbb
jb
movsl
nop
and
cmp
dec
cld
sub
lahf
and
pop
cmp
les
cmp
pushf
ds
and
fwait
cld
dec
pop
std
fdivr
push
pop
pop
mov
aaa
fninit
sti
xor
mov
popa
fisubrl
imul
shll
jmp
jo
div
mov
sbb
jge
dec
dec
jg
enter
mov
sub
and
push
push
xchg
or
pop
test
addr16
lret
sbb
pop
out
or
not
add
push
out
inc
les
jbe
xor
push
loope
sbbb
inc
add
push
les
mov
stos
adc
mov
cmp
cltd
and
add
cs
cmp
add
je
xor
ret
sahf
sti
pop
sbb
stc
xchg
pop
nop
dec
mov
pop
test
dec
orb
arpl
cwtl
inc
movb
jmp
movd
sub
and
jae,pt
lcall
push
push
movsl
jnp
sub
frstor
jmp
in
xor
cwtl
outsl
fwait
cmp
movb
mov
sbb
mov
xchg
and
outsb
push
xchg
out
or
insb
aam
enter
mov
test
cmp
shlb
and
stc
mov
mov
push
idiv
lahf
stos
lret
sbb
jp
pop
test
icebp
dec
or
jne
cmp
inc
ret
xorl
adc
dec
mov
frstor
cmp
adcl
stos
adc
xorl
and
pop
scas
sub
xchg
dec
sarb
and
movsl
in
cmp
ja
xorb
scas
push
sbb
cmp
sbb
jecxz
clc
cs
in
lea
mov
and
mov
mov
xlat
cmp
fisubl
movsl
cmp
rcrl
ja
das
shrb
mov
std
std
add
mov
lds
shrb
sub
mov
mov
dec
fisubrs
jle
in
xchg
xor
subb
je
sbb
add
sbb
mov
ljmp
insl
cmp
mov
ds
fldcw
dec
cmp
and
or
pop
push
cmpb
or
std
popa
loope
cld
inc
xor
and
adc
and
xchg
xlat
loopne
mov
mov
leave
shl
or
rorb
mov
push
in
adc
jmp
pusha
repnz
aas
mov
inc
mov
int3
lret
sub
cwtl
mov
pop
fadds
sbb
jo
mov
inc
popa
in
xchg
mov
ret
aaa
sub
cmp
sub
and
in
mov
aad
xor
fiaddl
loope
data16
mov
ret
insl
call
add
lret
in
loopne
sbb
aaa
add
in
xchg
clc
loop
sbb
jmp
or
popa
mov
dec
stos
or
fs
orb
inc
xchg
xor
push
xchg
or
mov
mov
out
aam
cwtl
xorl
subb
inc
cmp
mov
into
jae
movsb
mov
xchg
lods
inc
jbe
popa
fs
fisubrl
iret
dec
push
cld
aaa
das
testl
pop
jge
cmc
mov
imul
cld
loop
cmp
std
and
or
mov
sarl
cmp
cwtl
out
mov
rclb
lock
outsl
sarb
xchg
mov
push
movsl
pop
mov
add
aas
mov
inc
fwait
call
mov
xor
call
lods
adc
inc
sub
jecxz
and
xchg
incb
add
inc
add
lahf
xchg
mov
in
and
and
ja
movsl
es
and
mov
jae
inc
jnp
fisttpl
push
test
imul
jno
jmp
lods
dec
sub
inc
clc
sub
sti
xchg
cltd
idiv
out
cld
mov
sti
or
jle
shl
push
add
mov
enter
mov
js
enter
fimull
mov
test
je
test
xor
mov
test
mov
shll
mov
icebp
repz
sub
push
pop
push
sbb
daa
lcall
mov
shl
mov
inc
leave
sub
xchg
inc
inc
mov
pop
aad
nop
loop
test
js
sub
lods
lock
or
fmul
push
adc
push
stos
xchg
lock
es
push
lcall
outsl
jns
fsubrl
adc
mov
jecxz
adc
pop
xchg
xor
xor
test
xchg
cld
loope
xor
stc
pop
jl
mov
adcb
dec
jo
mov
gs
pop
int3
push
ret
jp
mov
insb
lret
add
cs
sbbb
lea
idivl
xor
mov
inc
call
mov
cmp
pop
jns
fiadds
or
xchg
insb
sub
cmp
out
orl
fs
loope
aas
dec
dec
sti
insb
inc
xchg
push
push
call
and
sub
add
mov
push
push
pushf
imul
push
sub
add
jle
jmp
movsl
sub
push
add
inc
outsb
es
xchg
movsb
icebp
adc
jmp
xchg
insl
and
pop
add
pop
jmp
fs
cmp
push
in
lcall
roll
pop
mov
sub
lret
push
xor
test
test
adc
sbb
sub
stos
pop
and
movsb
mov
xchg
es
in
call
popa
scas
daa
and
fsubrl
and
push
movsl
out
jge
pop
mov
into
daa
aas
popf
xor
mov
test
dec
ds
mov
dec
cmpsb
leave
movsb
es
cmc
cmp
jge
xor
aas
in
jae
cli
cmp
pop
call
mov
and
fldt
and
in
cmpb
pop
lret
or
hlt
out
in
lea
cmp
fsubrs
dec
fwait
pop
pushf
dec
xor
add
dec
test
ss
inc
leave
or
rol
pop
pop
xor
xor
and
pop
pushf
inc
roll
pop
ret
dec
or
jg
dec
push
ficomps
ds
mov
cmp
xchg
xor
cmpb
jl
cltd
jns
jb
push
div
movl
insb
mov
test
adc
hlt
push
in
ljmp
nop
int
push
frstor
test
sbb
mov
xor
push
shlb
filds
je,pt
sbb
add
gs
jg
test
daa
cmpsb
out
xor
fbstp
xor
clc
rolb
outsb
push
adc
mov
mov
adc
dec
xor
fs
lret
pop
xor
sub
sbb
dec
aas
int
popa
sbb
sbb
jns
lods
stos
shrb
hlt
adc
xchg
mov
add
pop
lret
aaa
mov
push
stos
add
xchg
popf
int3
xor
inc
ljmp
enter
xchg
les
lcall
aad
push
int
test
sar
push
mov
cmpsb
dec
sbb
push
mov
cmpsb
inc
xchg
loopne
push
test
or
int3
jmp
or
mov
push
push
out
mov
out
pop
push
inc
clc
scas
lcall
sbb
and
dec
leave
nop
inc
insb
pop
aas
mov
adc
and
mov
add
sub
xchg
adc
pop
dec
or
or
dec
cmp
orb
insl
int3
arpl
pusha
arpl
sub
mov
adc
mov
stc
or
xchg
pop
jecxz
sbb
push
mov
and
mov
jecxz
popa
lods
ss
mov
call
sub
jmp
jo
loopne
add
jecxz
pop
rolb
mov
bound
shll
cmpsl
jp
dec
outsb
bound
pop
loope
xchg
stos
mov
in
dec
dec
divb
sub
cmp
fcmove
adc
inc
dec
lret
sbb
adc
mov
inc
fidivrl
xor
loopne
inc
dec
mov
scas
xchg
pop
repnz
push
mov
push
aas
xchg
sub
js
jecxz
push
push
lahf
andb
int3
fisubs
mov
jno
xchg
jb
jb
xchg
xchg
inc
rorl
call
mov
jecxz
xlat
std
int
test
out
es
rol
cmpsl
xchg
inc
jl
pmullw
fidivrl
imul
aam
xchg
das
xchg
cli
sub
mov
add
enter
int3
cmp
mov
call
mov
jp
repnz
scas
dec
outsb
test
cli
pop
mov
mov
lea
orl
fildll
dec
cmp
mov
dec
test
aaa
ret
imul
adc
sbb
inc
aad
cmp
je
sbb
mov
iret
and
icebp
fmull
js
int3
icebp
icebp
cmp
sti
lods
xchg
cwtl
subb
cltd
mov
testl
push
push
add
rolb
stos
inc
nop
sub
cmpsb
fildl
pop
xchg
push
sub
mov
stc
xor
mov
cmp
jb
out
add
loope
cmp
outsl
pop
sbb
jecxz
adc
mov
mov
jb
push
fs
cld
ss
xlat
mov
sbb
dec
push
out
les
xchg
repnz
stc
pop
mov
ja
jge
push
imul
in
jecxz
out
add
push
jle
cs
popf
andl
std
sub
fiadds
pop
mov
and
shrl
mov
sub
mov
sti
pop
dec
xchg
out
push
and
cli
aas
lea
mov
adc
mov
push
aad
inc
test
xchg
xor
outsb
je
and
mov
frstor
push
xchg
in
pop
js
shlb
mov
dec
dec
rorb
das
shl
sarb
cmp
sahf
fcoms
mov
inc
dec
sub
xchg
mov
xchg
popf
dec
dec
loope
jns
inc
outsb
testl
lds
loop
dec
mov
mov
movsl
iret
loop
loopne
or
lods
mov
aas
pop
or
mov
jns
mov
cmp
add
xor
ret
rclb
mov
cmp
aaa
dec
iret
inc
stc
add
call
dec
test
out
push
and
test
cli
repz
sub
aaa
aad
sub
sti
jae
les
aam
movsb
lds
mov
ret
scas
adc
stos
out
jecxz
pusha
lret
outsl
mov
lcall
loop
push
or
fldl
sbb
outsb
out
mov
sub
and
mov
sub
ret
in
pop
and
push
pop
mov
add
mull
mov
es
sbb
cmpl
lahf
jo
lret
lahf
xchg
leave
lods
jp
repz
jne
xchg
mov
ljmp
imul
aam
push
ja
mov
test
insb
mov
and
inc
aas
addb
mov
imul
movsb
lahf
add
addr16
add
inc
dec
sbb
xchg
loopne
push
pop
jb
sbb
ret
fcmovnu
int3
inc
push
lock
popf
jp
inc
push
repz
imul
sbb
mov
and
cmp
push
std
push
jge
inc
test
and
cli
or
mov
into
mov
cs
inc
jge
adc
pop
fwait
test
or
out
sub
jne
test
jne
push
jnp
shrb
add
in
inc
loope
mov
add
sbb
sub
xor
sub
repnz
and
jns
and
mov
fldenv
xchg
cmp
push
fnstcw
stos
insb
daa
fcmovnb
xor
mov
xor
mov
dec
pusha
xchg
inc
mov
mov
enter
sub
cwtl
sub
negl
push
cmp
decl
dec
cmp
ljmp
xor
xor
lahf
imul
mov
adc
pop
insl
mov
xchg
mov
add
xchg
lea
mov
inc
or
das
push
fwait
mov
jae
push
sub
cmpl
add
xchg
and
and
pop
sub
lods
mov
inc
mov
cltd
scas
test
sbb
mov
into
dec
fildll
inc
scas
repnz
pop
jge
arpl
and
lcall
add
cmp
sub
dec
insl
leave
cs
test
test
fcoml
sub
inc
into
mov
cltd
mov
or
dec
inc
fs
fldt
iret
and
inc
push
mov
lods
sbb
pop
int3
enter
mov
or
jg
push
arpl
xchg
jmp
aad
aas
in
movsb
aaa
loopne
mov
push
add
cli
std
jge
xchg
jb
or
imul
xchg
lods
lahf
loop
jb
dec
les
pop
mov
jnp
push
mov
je
mov
mov
fisubrl
rorl
or
push
lahf
out
pop
jnp
adc
xchg
pop
mov
pushf
call
data16
mov
push
in
les
loopne
mov
fsubrl
pop
and
test
cmp
cld
pop
xor
mov
scas
cmp
mov
cmp
sub
lods
adc
inc
cld
stc
int3
aaa
ret
mov
js
ds
xchg
mov
mov
stos
xchg
mov
xor
mov
sbb
cltd
dec
push
gs
sbb
int3
cld
inc
xchg
lds
dec
iret
mov
ljmp
cltd
sbb
ds
pop
sbb
sub
mov
fcom
dec
in
idiv
jg
mov
repz
out
pop
test
sbb
movsb
idivl
dec
js
fildl
sub
xchg
loope
icebp
xchg
mov
mov
push
gs
xor
int3
icebp
xor
dec
jle
lds
cmp
stos
test
int
dec
ret
sub
mov
bnd
pop
test
jno
push
out
inc
dec
add
mov
sub
inc
sub
xor
and
dec
pusha
shll
xor
std
push
cltd
roll
and
cmpl
mov
fiadds
cmpsb
sub
cmpsl
std
dec
movsl
lret
xor
loop
jmp
adc
icebp
inc
xor
scas
popf
inc
pop
movsb
mov
inc
je
out
scas
mov
fwait
push
mov
rcr
xor
jge
fisubl
inc
sbb
cmp
call
xor
add
std
mov
sub
mov
out
inc
add
das
shr
sub
repz
aaa
xorl
push
int3
push
mov
dec
jb
xchg
mov
inc
push
out
imul
or
insb
stos
dec
mov
sub
fcomps
xchg
or
mov
xchg
sub
jmp
add
aad
imul
jnp
jno
cmp
mov
mov
or
dec
fcmovb
xor
lds
das
movntq
add
push
xor
loopne
mov
fdivrs
cld
push
xor
lahf
idivb
pop
cmp
stc
push
jle
xchg
xor
or
add
hlt
xor
mov
lret
push
in
pop
insb
loopne
xor
fucomi
test
mov
fists
mov
add
bound
lock
cmpsb
leave
xchg
lods
test
mov
aad
int3
xlat
sub
inc
insb
mov
xchg
rcrb
jge
pop
sbb
test
xor
sub
nop
out
mov
sbb
jecxz
cmp
repz
cmpsl
into
out
lret
repnz
fcmovnb
push
call
xchg
xchg
inc
pop
and
push
push
jge
sahf
push
inc
push
jnp
nop
rcll
bound
lods
data16
subb
lea
dec
pushf
jmp
jb
adcl
into
std
mov
outsb
xor
adc
sbb
mov
push
and
stc
sbbl
daa
mov
int3
sbbb
test
push
pop
xor
mov
jne
lds
jg
imul
mov
adc
lahf
aaa
lahf
outsb
iret
cmp
and
stos
push
xchg
add
adc
loop
into
out
int3
xor
lods
jno
xchg
das
pop
and
arpl
aad
lds
adc
jge
push
daa
mov
ret
jae
fmull
movsl
xchg
cltd
adc
js
iret
cld
xor
outsb
cmpb
aaa
fwait
into
push
fisubl
shll
mov
repnz
outsl
lds
mov
jbe
ljmp
cmp
adc
jns
mov
add
jecxz
dec
cli
jle
pop
lret
clc
imul
loopne
push
adc
ret
pop
xchg
popf
mov
ja
jl
fs
mov
and
cli
int3
shlb
dec
in
movsb
mov
es
pop
jge
mov
xchg
fmul
cwtl
test
mov
shll
jge
cwtl
jne
movsl
adc
jecxz
push
lods
xchg
hlt
cld
mov
push
clc
jg
cli
test
mov
xchg
mov
or
movups
movsb
jne
dec
push
shl
or
inc
dec
sub
push
mov
or
cmp
rorb
pop
cmp
cmpsb
sub
mov
push
jns
testl
fsubrp
mov
fisubrs
xor
int3
orb
in
imul
add
hlt
push
lret
andl
loopne
sub
imul
cmpsb
mov
cmp
adc
ror
dec
stos
pushf
lods
pop
cs
loop
insb
sub
lret
add
and
pop
shrb
pop
jnp
jp
mov
sbb
mov
dec
inc
lods
push
push
loop
mov
dec
xor
aas
sahf
insl
xor
rolb
xchg
pop
adc
adc
fldl
xchg
insl
xorl
xchg
xor
cmpsl
loopne
cli
gs
pop
add
lcall
sbb
add
dec
xchg
in
fisttpll
jae
loop
jne
add
sub
adc
pop
sbb
imul
cmpsl
call
mov
fidivrl
and
dec
dec
sbb
xchg
into
inc
jmp
test
outsb
scas
jecxz
loopne
mov
and
and
sti
push
scas
pop
sub
ss
or
xor
push
and
movsl
lret
rcrl
iret
sub
fbstp
and
fcmovnu
jo
imulb
inc
testb
cmp
pop
push
data16
fists
dec
aas
test
dec
imul
xor
adc
adc
std
jle
repnz
or
inc
adc
les
sub
push
dec
jnp
in
jp
mov
fs
clc
aaa
mov
jb
insb
jb
arpl
stos
mov
daa
test
aam
testb
faddl
mov
jnp
std
jmp
or
dec
mov
mov
dec
sub
fimuls
lock
iret
jo
sahf
jecxz
ret
or
aam
xor
xchg
xor
fmul
mov
dec
ds
jmp
adc
fstps
jge
pop
mov
jae
adcl
jle
mov
lret
xchg
rcrl
jecxz
mov
rorb
jo
dec
xchg
adc
fisubl
cltd
scas
mov
js
lahf
push
sti
sub
mov
test
subl
mov
dec
int
and
adc
fcoms
mov
and
fwait
sbbb
pop
xchg
es
cmp
push
and
mov
jge
fnstsw
sub
or
les
sbb
imul
out
daa
jns
sbb
stc
outsl
cltd
cmpl
xor
mov
sub
xchg
mov
stos
es
add
fiadds
jp
ret
jle
jns
push
popf
mov
stos
sbb
jmp
or
ja
mov
sub
or
shlb
pop
les
sarb
lret
repz
loope
xchg
mov
sarb
dec
rcll
pop
jae
xor
adc
shll
outsb
or
in
js
adc
sub
push
cmp
jmp
pop
faddl
aaa
sti
fiaddl
ds
mov
pop
lock
adc
repz
jnp
jnp
das
cmovae
xchg
xor
add
fnsave
pop
mov
fdivrs
jo
cmp
inc
xchg
stc
jecxz
pop
sub
repnz
or
inc
or
je
fldt
test
adc
jl
fs
in
jge
mov
xor
push
and
pop
jae
pop
ret
lea
xchg
int3
push
rcrb
call
call
lahf
aas
enter
iret
dec
repz
cmc
imul
aam
or
arpl
sbb
jle
add
mov
andb
mov
mov
outsl
mov
add
repnz
add
pop
jp
dec
push
fdivrl
outsb
cmp
pushf
mov
ds
cmp
rcrl
or
push
mov
sbb
mov
dec
mov
push
repz
xchg
push
mov
mov
push
cmovp
mov
or
mov
pop
mov
movsb
mov
cmp
cmp
out
out
nop
sub
sti
cmpsb
jno
sti
mov
into
enter
clc
inc
sbb
sub
orl
stos
jmp
call
gs
sub
cld
loop
mov
ds
je
sbb
add
mov
in
adc
mulb
push
fs
xchg
or
xchg
pop
xor
jbe
test
xchg
stos
jae
jl
sbb
pop
inc
sbbl
xor
sub
mov
adc
cli
popa
cmpsb
in
popf
out
rorb
lcall
add
ja
xchg
not
pop
adc
rorb
inc
mov
mov
pop
push
mov
jmp
gs
cmp
in
xchg
arpl
ret
lock
ret
mov
cli
roll
mov
sarb
mov
ret
push
fnstenv
call
adc
roll
popf
adc
outsb
cmp
sub
lcall
dec
mov
bound
loope
adc
adc
adc
xchg
push
stc
bnd
sub
and
xor
hlt
jl
jnp
pushf
push
cmp
std
xor
mov
jb
jbe
jns
es
mov
mov
mov
jle
adcb
fstps
lods
outsb
aas
push
and
fmull
adc
lret
xchg
mov
push
mov
stos
test
movsl
sarb
sahf
lds
rolb
in
faddl
xchg
pop
mov
inc
adc
jae
add
mov
mov
mov
add
fsubrs
lcall
fmull
enter
imul
sbb
push
ds
mov
jmp
fbld
pop
sbb
xchg
or
movsb
sti
cmp
dec
pop
leave
mov
ret
es
mov
jle
ss
xchg
fcoms
xchg
or
loop
sbb
test
or
out
add
sti
pop
ss
sub
cmp
push
lcall
shrl
int
andb
pop
sbb
repz
mov
sub
sub
pop
insl
scas
push
jnp
add
sbb
mov
pop
pushf
mov
cmp
push
icebp
mov
imul
test
nop
cltd
addr16
xor
gs
iret
out
movsl
dec
lods
mull
call
ds
call
cmp
aas
out
dec
xchg
and
dec
inc
into
cwtl
dec
fwait
push
jmp
push
jp
pop
push
push
pop
popf
rcrl
in
sbb
jl
lea
adc
sub
add
cli
mov
es
nop
push
jae
jge
xor
inc
mov
dec
mov
mov
cmp
add
pextrw
mov
jo
movd
in
sub
dec
movsb
jb
hlt
lods
cmp
jb
dec
adc
adc
push
cmp
lods
mov
inc
mov
ret
add
orb
fwait
mov
clc
add
jnp
shrb
push
adc
lahf
lret
pop
mov
ffree
jo
aas
sbb
das
push
adc
in
lock
xchg
push
xchg
push
mov
nop
test
fs
push
or
lods
add
or
inc
int
pop
mov
scas
notb
lods
pop
fdivl
adc
and
fiadds
dec
testb
fs
dec
or
mov
sub
push
pusha
pop
mov
jl
out
mov
xchg
push
cmp
push
and
arpl
mov
jae
lods
jae
mov
je
sbb
repz
pop
cmp
out
dec
sbb
inc
inc
cs
adc
cwtl
inc
test
add
mov
xchg
mov
in
adc
and
lods
cmp
dec
jl
push
mov
pop
mov
std
pop
jae
stos
add
and
xchg
sub
and
ret
inc
lods
scas
mull
push
into
std
inc
mov
int
loop
sub
dec
xchg
xchg
xor
xor
sub
xchg
push
dec
hlt
leave
xor
or
lea
sbb
push
mov
mov
push
adc
scas
test
hlt
cltd
insb
repz
sbb
mov
aaa
loopne
lea
dec
test
shll
mov
imul
adc
mov
jae
mov
movsl
fcoml
cmp
fwait
xchg
mov
mov
or
pop
pavgb
getsec
insl
mov
sub
cmp
sub
pop
leave
mov
inc
aaa
mov
dec
stos
pop
rcl
mov
out
pop
inc
and
xor
lods
pushf
xorl
lds
aad
mov
mov
enter
roll
fcomp
lods
outsb
and
sub
push
jne
les
test
sbb
imul
cs
stos
adc
into
scas
sbb
inc
out
out
pop
jbe
mov
mov
pop
inc
dec
cmp
insb
mov
popa
fnstsw
ljmp
or
fistl
pop
xchg
sbb
in
inc
mov
loope
jecxz
pop
popf
jmp
xor
addr16
add
filds
lret
test
pop
jne
lret
mov
xor
dec
sbb
clc
push
adc
lods
mov
jge
lcall
fisttpll
fistl
pushf
xchg
inc
jae
mov
lret
call
push
mov
push
in
repnz
pop
mov
repz
jl,pn
out
lea
into
in
lret
pop
into
pop
inc
jmp
into
sub
adc
pusha
aaa
andl
loop
mov
mov
stos
addl
imul
mov
pop
daa
rol
sbb
ss
dec
pushf
mov
mov
sbb
mov
pop
dec
ljmp
add
jmp
inc
test
pop
ds
jns
pop
rolb
or
sub
xor
xor
xchg
jmp
lds
push
lock
lock
mov
fldl2t
xor
sbb
ljmp
lcall
jge
fcmovnb
mov
rorl
bound
ret
inc
jmp
mov
roll
rolb
pop
fstpt
add
xchg
mov
pop
pop
or
out
and
fwait
xchg
aam
xor
cmp
pop
and
mov
xorl
imul
sbb
mov
dec
bound
push
insb
shr
jge
inc
sub
and
cwtl
rolb
enter
xchg
mov
jp
and
fdivs
lcall
in
xor
push
insl
scas
push
punpckhbw
mov
and
repnz
mov
fstl
push
in
jle
pop
xchg
hlt
adc
dec
ret
out
xor
lods
movsb
jnp
scas
les
imul
adc
shlb
xor
outsl
xchg
imul
fwait
pop
dec
iret
rorl
and
stos
imul
imul
sub
fs
or
add
dec
out
bound
jmp
dec
lock
xchg
pop
sbb
pop
add
mov
lcall
add
insb
dec
xchg
daa
and
sbb
adc
jnp
inc
and
pmaddwd
rcl
int
and
xor
jo
jge
orb
adc
int
jle
jns
fs
mov
test
adc
adc
stos
imul
mov
imul
xor
in
push
sub
les
mov
cmp
mov
repnz
pushf
ljmp
test
fbld
std
imul
out
inc
cs
mov
insb
push
xorl
les
jl
inc
aas
jae
mov
mulb
jne
xor
mov
into
pop
cmpsb
or
bound
mov
js
jbe
dec
jp
jbe
mov
sbb
sbb
push
lods
pop
push
clc
sub
popa
inc
dec
inc
push
lcall
push
mov
mov
cltd
sub
jbe
jmp
stos
mov
xchg
dec
andb
lds
pushf
cmp
dec
dec
add
les
xor
pop
pop
xchg
loopne
outsb
xor
pusha
test
xor
aaa
insl
inc
fsub
popa
cmp
lods
gs
dec
mov
jne
popf
jmp
pop
and
movsb
add
add
aad
adcl
or
imul
iret
pushf
out
dec
out
pop
sub
mov
cltd
jb
test
push
xlat
and
stc
mov
jp
jecxz
scas
cmp
sbb
out
pop
cmp
mov
test
insb
aam
push
andnps
pop
pop
incb
cwtl
sar
inc
or
push
loope
jae
inc
fs
inc
dec
out
mov
cmp
push
fists
pop
out
add
jbe
out
and
adcb
mov
das
push
cmp
mov
loope
and
ljmp
dec
xchg
cmc
push
xchg
mov
leave
jle
ljmp
mov
in
jmp
out
out
negb
mov
clc
xchg
dec
sub
xor
mov
ds
test
aad
mov
sbb
xchg
mov
push
movsb
pop
or
shl
scas
inc
in
fldl
mov
outsl
dec
test
negl
xorb
outsl
jmp
and
mov
inc
dec
xchg
xchg
adc
mov
cmp
cmpb
sbb
mov
std
test
pop
aam
xor
cs
xchg
mov
and
fldenv
outsb
notb
fdivrl
inc
fisubl
out
add
mov
lock
out
sub
cmp
pop
sub
dec
pop
dec
sbb
jnp
inc
fpatan
bound
sbb
testb
xchg
push
add
mov
cmp
movsl
xor
outsb
repnz
bound
inc
cmp
pop
or
rcl
pop
ror
imul
and
mov
mov
test
in
das
mov
cmp
xor
xchg
popa
jp
sub
inc
in
xchg
jge
arpl
adc
loopne
icebp
cmp
inc
inc
ds
jo
mov
mov
mov
stc
in
inc
in
ret
pop
es
mov
push
cmp
test
pop
jno
in
test
xor
cmp
lea
repz
std
test
movsb
loop
icebp
cvtpi2ps
cltd
dec
pusha
lahf
mov
xchg
mov
and
imul
repz
psubsb
jge
add
pop
lock
dec
sub
leave
jmp
pop
imul
cmp
shlb
sub
in
mov
outsb
cltd
jecxz
cmp
enter
into
xchg
xor
push
push
jge
sub
lret
gs
sar
dec
cltd
jmp
adc
sar
sbb
push
pop
cmpsl
or
flds
and
xchg
or
dec
in
sbb
in
push
lcall
add
push
pop
or
iret
add
popf
addl
pushl
mov
pop
push
dec
lds
and
mov
shll
xor
gs
jge
dec
cmpb
iret
push
jne
int
cli
in
js
cmp
out
mov
inc
add
push
or
jl
dec
leave
insb
mov
mov
mov
and
fnstenv
sbb
mov
in
mov
adc
xchg
xor
xchg
cs
xlat
popf
je
loopne
push
addr16
xchg
nop
ja
mov
int3
mov
mov
push
pop
lea
jl
push
add
mov
pop
push
jmp
pop
arpl
jbe
push
sbb
adc
jecxz
pop
iret
idivl
ja
inc
jg
out
data16
jo
mov
test
add
lods
in
sbb
adc
pop
or
jp
fistl
adc
aas
arpl
out
adc
and
pusha
call
push
cmpsl
stos
and
dec
repz
mov
into
add
out
mov
gs
cmp
pop
mov
push
cmp
mov
xor
mov
xchg
inc
xor
sbb
aas
loopne
sub
je
dec
add
jge
scas
ljmp
and
cli
in
popf
cmp
inc
mov
call
cmp
or
call
popl
dec
fcomp
adc
leave
sti
pop
fimuls
clc
test
out
add
jo
popf
xor
iret
or
mov
inc
adc
into
inc
insl
into
jns
rcrl
negl
aad
ljmp
push
ret
repz
je
aaa
sub
test
pop
insb
lock
int
dec
and
repz
add
mov
push
stos
sub
xor
outsb
aas
cmp
ret
sbb
fwait
cmpsl
imul
aam
dec
jle
xlat
idivb
out
xor
push
cs
jp
xchg
cmp
sbb
imul
int3
cmp
jbe
aas
lahf
mov
push
jns
sbb
arpl
call
inc
into
sbb
xchg
jp
xor
scas
sub
sti
add
cltd
or
adc
sbb
xchg
dec
out
fisubrs
jle
and
sbb
fidivs
fcoms
aaa
xchg
stos
dec
or
mov
or
xchg
cli
lcall
dec
jg
cs
inc
stos
repz
or
push
or
push
and
stos
mov
add
jns
pop
xor
mov
or
cs
js
popf
icebp
sbb
cmp
lret
bound
sti
loopne
fcmovnb
loope
xchg
sub
xorb
out
dec
in
cmp
add
fisttpl
shrl
inc
sub
hlt
scas
ret
addb
lock
out
aam
inc
ja
pop
mov
pop
aas
sahf
push
loope
cs
xor
mov
sbb
push
sahf
sub
int
mov
add
xlat
call
fwait
and
scas
cmp
cs
out
ljmp
stc
cld
scas
jp
sbb
mov
out
jbe
lds
sub
jne
test
cmp
lods
pop
notl
lret
push
jp
pop
add
inc
mov
aas
repz
mov
mov
xlat
mov
add
sub
ss
cwtl
fisubrs
adcl
mov
sahf
and
cmp
add
sbb
mov
cmc
xchg
mov
shlb
dec
clc
pop
mov
ret
or
mov
jbe
test
jl
adc
jne
sbb
mov
bound
and
jbe
fadds
dec
inc
pop
adc
jae
inc
mulb
push
fs
jl
in
or
adc
int
neg
sub
dec
mov
xor
stc
jle
lods
movaps
out
pop
and
lock
mov
xor
add
sub
repnz
stos
mov
cli
clc
sub
dec
jmp
fneni(8087
add
or
cmp
sbb
jecxz
ss
divb
les
ficompl
ds
mov
daa
je
inc
sub
push
mov
sarl
das
add
mov
push
popa
mov
orb
add
rorb
push
ror
push
push
xor
arpl
cmp
sub
fildll
loopne
xchg
loope
outsb
sbb
sbb
or
aaa
or
ljmp
stc
push
push
lret
inc
dec
pmaddwd
add
insb
ljmp
rorb
and
and
in
cmp
mov
imul
jbe
repz
mov
xchg
loop
je
es
int3
mov
out
insl
add
mov
int3
stos
ds
fisttpll
pop
repnz
mov
jle
orb
cmp
jle
mov
lret
dec
push
cs
adc
test
xor
push
pop
mov
add
pop
and
dec
cmp
cs
xchg
aas
fdivrs
in
cmc
pushf
adc
out
pop
and
adc
push
aam
cmc
mov
mov
push
xchg
fnstsw
test
mov
addr16
push
pop
or
fcmovu
xor
jns
xor
cli
or
or
ja
jp
dec
shl
rorl
subl
dec
cmp
iret
hlt
mov
js
int
aam
jmp
loope
add
ja
inc
xor
or
nop
xor
loope
hlt
mov
out
jle
enter
jle
cmpps
cmc
icebp
in
mov
inc
movsl
dec
push
push
hlt
js
add
std
cltd
add
xchg
out
repz
es
jne
dec
or
lret
icebp
lods
std
cmpsl
or
mov
push
xor
xchg
ret
leave
mov
sahf
xchg
xchg
out
lea
out
loopne
xor
cmpsb
sbb
ja
pop
hlt
jae
xlat
ss
std
jne
jb
cmp
mov
pusha
mov
push
in
pop
hlt
and
rorl
mov
lods
ficoms
pop
lret
fs
sbb
insb
ljmp
in
dec
add
mov
movsb
dec
push
lods
lret
pop
or
lds
push
inc
jbe
ffree
adc
mov
fs
repz
mov
adc
shrb
fidivrs
cs
xchg
xchg
pushf
or
cmp
fstps
jne
mov
rclb
pop
jns
iret
out
jbe
sub
xchg
lods
repz
test
add
loope
aad
pop
sarl
sti
lea
mov
sub
inc
xor
lock
mov
test
aad
sub
mov
adc
pop
bound
mov
rcrb
push
jb
test
stos
fsubs
mov
gs
push
int
je
sub
xor
in
divb
mov
jl
imul
aam
inc
jne
mov
inc
rorb
xchg
daa
push
and
pop
dec
inc
mov
and
pop
clc
les
out
jp
dec
mov
xor
andl
cwtl
sbb
stos
mov
pop
push
mov
movsl
les
dec
mov
out
add
daa
inc
in
adc
pusha
out
or
lods
adc
popa
jnp
mov
mov
mov
jnp
mov
add
aam
enter
cmp
mov
cltd
lods
jl
sub
sbb
sbb
js
adc
ds
and
cwtl
pop
xchg
add
loopne
xchg
imull
iret
int
push
shll
in
lahf
jno
jge
pop
sub
out
fsubrl
outsl
jl
shrl
push
sbb
stos
push
jmp
popf
mov
and
push
add
or
insb
cmc
adc
gs
pop
sub
cwtl
and
or
stos
out
or
add
cmp
jecxz
scas
fistps
js
popa
push
xlat
mov
mov
mov
dec
cmpsb
mov
mov
loopne
adcl
aas
inc
scas
negl
sub
push
pop
sub
fcmovnu
cmc
jne
scas
pop
imul
call
and
insb
lret
inc
orl
jge
push
popa
mov
in
mov
adcl
push
cmp
nop
shlb
shll
xchg
imul
sbb
or
pop
repnz
ret
add
addb
mov
jmp
movsb
testb
or
dec
bnd
out
test
pop
mov
pusha
inc
rclb
inc
adc
ret
fdivs
pop
loopne
std
cwtl
dec
pop
stc
or
mov
fldcw
mov
cmp
dec
js
jns
add
push
stc
and
cmp
outsb
mov
pop
ss
pop
in
cmc
mov
mov
roll
outsb
les
shrl
jecxz
in
jno
sub
mov
pop
mov
cmp
push
jg
test
daa
cmc
pop
ljmp
iret
addr16
cltd
fnstsw
xor
aad
push
aaa
add
sbb
test
jmp
sbb
jbe
scas
fistl
ret
jne
or
sub
xchg
push
repz
into
push
mov
or
sbb
mov
mov
js
xchg
mov
dec
rcrb
call
adc
push
push
mov
and
cmpsl
push
dec
jbe
je
inc
jnp
jmp
mov
outsb
pop
insb
aaa
mov
adcb
jne
sbb
pop
jg
pop
stc
rcrl
shlb
jne
rorl
push
into
jnp
movb
roll
stos
pop
fwait
popa
movsl
mov
outsl
loopne
xor
sub
xchg
pop
out
fwait
push
popf
in
jp
stos
shrb
sub
imul
out
mov
mov
shrb
mov
xor
imul
xchg
jnp
or
cld
cmp
loopne
sbb
mov
ss
cmp
cwtl
cmp
mov
mov
inc
dec
dec
flds
outsb
xchg
fsubp
mov
fsubr
movsl
xor
jmp
ret
xchg
pop
mov
xchg
adc
out
inc
test
jno
rorb
cli
lds
shrb
orl
repnz
out
lods
xchg
outsl
and
jnp
xchg
pop
or
or
adc
xor
mov
shll
repnz
fistpll
shll
push
ja
jb
in
and
push
sub
push
std
xlat
orl
aas
push
dec
pop
ja
lahf
inc
ret
mov
movsl
out
popa
leave
notb
fisubrs
cmp
lret
ss
out
jbe
mov
loope
mov
jb
adc
or
movsl
out
mov
dec
popa
cmc
test
icebp
popa
cmp
mov
pop
adc
leave
gs
js
addb
push
jmp
cmp
xor
pop
pop
sbb
repz
sub
and
fwait
out
jmp
orl
repnz
mov
js
imul
sub
stc
enter
in
fs
jmp
adcl
fidivs
xlat
movsl
or
insb
sub
adc
lea
fs
lret
mov
xchg
das
jmp
pusha
xchg
cmc
sarb
cwtl
clc
adc
bswap
and
dec
in
mov
xchg
rorb
int
ror
sbb
stos
or
mov
mov
push
dec
and
popa
hlt
xlat
push
jecxz
xor
mov
dec
mov
stc
mov
rcl
outsb
aas
leave
outsl
mov
push
roll
dec
xor
push
xchg
cmpsl
or
inc
cltd
xchg
cmpsl
mov
mov
cltd
add
dec
cmp
imul
in
cmp
jns
lods
push
add
sub
das
add
out
and
shll
or
push
jecxz
xchg
jmp
sarl
les
hlt
bound
dec
je
cmc
sti
jl
and
aaa
sbb
lcall
cmp
fbld
push
hlt
pop
cld
xchg
or
orb
fisubrs
and
nop
sahf
data16
int3
jne
mov
das
fisttpl
pop
push
repz
xchg
pop
std
loope
ss
dec
xor
or
mov
jne
aas
rorb
movlps
mov
pushf
scas
or
in
aam
scas
daa
add
arpl
xor
push
pop
xor
xchg
add
cmp
ss
mov
cmc
pop
scas
popf
ret
mov
cltd
adc
push
rcrl
mov
pop
fistl
dec
std
add
int
loop
mov
mov
loope
js
cmc
adc
inc
mov
fdivs
ja
outsb
cmp
dec
pop
clc
dec
notb
inc
jno
stos
pop
out
cmp
xor
push
push
jmp
addr16
push
mov
push
cmp
xor
clc
shr
inc
outsb
inc
add
insl
xchg
jl
cmp
mov
sahf
and
and
xor
leave
xor
add
insl
or
inc
mov
test
daa
insl
adc
cmpsb
dec
cs
or
mov
movb
jecxz
inc
dec
xchg
jl
pop
inc
lret
call
insb
into
pusha
mov
in
pop
or
pop
lcall
push
dec
and
mov
push
dec
push
flds
mov
ret
mov
and
stc
shrl
stos
jg
movsb
push
dec
pop
dec
push
jnp
sub
cmp
mov
gs
inc
inc
stos
jp
and
mov
aas
neg
scas
pop
pushf
dec
jae
cmp
testb
outsb
sub
adc
xor
jmp
pop
cmp
clc
sub
out
gs
test
in
rcrb
mov
cmp
inc
or
jl
aas
int
adc
sbb
test
sub
out
sbb
int3
cwtl
iret
cld
mov
or
push
addr16
addb
test
fcmovu
es
loopne
and
fildl
fldl
sbb
jge
icebp
pop
cwtl
jg,pt
mov
lret
lds
leave
adc
mov
pop
xchg
out
inc
divl
popf
sahf
sub
rorb
xor
leave
mov
test
repnz
sub
hlt
cmpxchg
notl
push
push
sbb
scas
popl
es
data16
test
test
pop
dec
insl
out
add
imul
fmuls
andl
pop
add
imul
xchg
mov
pop
cld
sub
sahf
push
pop
or
inc
idivl
and
sarl
jg
xor
mov
fcmovnu
repnz
dec
cwtl
aas
daa
fistps
dec
ret
xchg
mov
stc
movsb
ds
push
dec
push
pop
jbe
mov
dec
insb
inc
js
jecxz
xchg
xchg
push
xor
les
jae
pusha
es
add
cmp
lcall
pop
lds
jae
jne
fbstp
add
shlb
cmp
xchg
mov
aam
mov
xchg
daa
cmpsl
mov
jecxz
aaa
mov
lahf
cs
hlt
mov
enter
adc
pop
fwait
sbb
xchg
repz
aad
je
stos
je
js
mov
push
xor
insb
ja
loope
popa
mov
pop
adc
cwtl
leave
or
cmp
push
hlt
sbb
repz
xor
jle
and
std
push
xchg
or
aas
in
sub
jmp
add
cltd
loopne
push
push
xchg
das
push
mov
ljmp
subl
mulb
insl
push
ds
sbb
hlt
mov
cld
jno
scas
jp
outsb
xchg
mov
inc
ja
inc
es
imul
push
cmp
mov
adc
fiaddl
ret
push
iret
stc
jb
sub
jmp
mov
jo
add
xor
imul
pushl
or
int
add
inc
jge
imul
pop
das
jo
mov
sub
loop
jns
jb
fadd
or
insl
and
add
add
mov
lea
repz
push
push
movsb
mov
xor
push
jp
leave
or
shll
mov
leave
ret
xchg
inc
mov
shll
rol
faddl
repnz
ss
mov
mov
fiadds
int3
in
add
ss
adc
pusha
inc
icebp
movsb
ja
ja
push
lahf
decl
pop
in
push
cwtl
cmc
push
or
sub
sbb
sahf
es
jl
ret
and
sub
es
dec
or
es
mov
and
jno
out
insb
mov
lcall
dec
in
sub
mov
or
bswap
jo
sub
test
pop
js
frstor
dec
in
sti
xlat
sarb
mov
inc
xchg
lds
xor
xor
jg
shlb
in
xor
cmc
arpl
cmp
and
cmp
mov
mov
sarb
outsl
jb
lret
jmp
jb
jg
xchg
stos
out
bound
jno
add
inc
negl
and
sbb
sub
pop
push
jb
mov
out
lods
lds
hlt
or
jne
jno
inc
stc
aam
mov
jge
jp
scas
or
lds
xor
sbb
sbb
add
xor
add
fmull
pop
cltd
mov
adc
jle
cmp
adc
jmp
std
js
xor
addr16
leave
dec
pop
loop
mov
mov
jg
scas
js
test
pop
and
imul
sub
push
loopne
cs
test
data16
dec
sub
daa
das
sti
out
mov
movsb
sub
jae
sbb
lock
xchg
adc
stos
ja
pop
adc
dec
push
xchg
leave
jmp
dec
popa
out
pusha
xor
repz
adc
jle
xchg
fcoms
out
mov
lods
xchg
inc
mov
xlat
and
xchg
or
jno
adc
push
mov
outsl
and
mov
ss
decl
adc
jl
sbb
push
aaa
mov
outsb
fstpt
jmp
imul
icebp
inc
movsb
int
push
sub
cmp
mov
dec
push
out
int3
in
sbb
jecxz
insl
orl
xchg
jns
add
sbb
orl
lock
xchg
push
xor
in
mov
aaa
out
cmp
cmpsb
jmp
mov
test
test
lods
ja
gs
jmp
fwait
jmp
dec
push
pop
push
cmp
out
xchg
stos
hlt
dec
rorb
dec
leave
mov
icebp
mov
adc
sub
xchg
lods
mov
cmp
xchg
push
cmp
aas
adc
fbstp
fcomi
jno
rep
push
xorl
stos
loopne
mov
aas
movsl
mul
mov
adc
pop
mov
arpl
mov
xor
scas
hlt
xchg
ror
clc
ja
sub
in
mov
adc
fistpl
push
push
lea
lds
mov
aad
rcr
incb
cwtl
mov
cmpsl
push
dec
loopne
xor
push
xor
mov
cwtl
pop
xor
arpl
idiv
or
cmp
aam
xor
scas
mov
and
jb,pn
mov
test
pop
rclb
mov
movsl
jmp
bound
lock
adc
mov
je
and
in
pop
and
pop
and
aas
enter
int
fwait
std
add
out
sub
sub
movsl
outsl
iret
fwait
mov
test
mov
xlat
add
push
jae
sbb
mov
scas
pop
sub
xchg
lcall
jbe
jle
and
pushf
dec
add
in
jmp
push
lds
and
adc
test
adc
dec
jl
push
push
xor
jb
inc
into
icebp
lds
cmp
dec
shll
imul
xchg
jle
and
or
mov
lock
mov
leave
and
jnp
insl
cwtl
mov
roll
inc
inc
push
xor
in
enter
lahf
push
pop
push
push
add
test
sub
loopne
xchg
popa
inc
fs
filds
loop
dec
adc
pop
mov
fxch
mov
in
insb
adc
mov
call
push
and
icebp
push
inc
lea
sti
sub
cmpsl
inc
pop
jg
pop
push
rol
into
loop
pop
add
aam
insl
add
adcl
jne
jecxz
sub
mov
es
pop
or
mov
faddl
pop
ljmp
ffreep
daa
sbb
jg
xchg
cmp
xchg
jge
cmp
int3
add
sub
jb
mov
enter
lret
ror
fwait
cmp
xor
jg
jnp
fcomps
sbb
xor
fnstenv
xchg
out
cs
jb
mull
mov
daa
movsb
pop
pop
enter
out
adc
pop
inc
mov
xchg
mov
je
gs
dec
cltd
lock
shrl
jo
pop
mov
add
sbb
add
fidivrs
and
ret
scas
pushf
cltd
test
ss
out
xchg
insl
cmpsl
aad
jnp
lock
jl
fs
xchg
shrb
jb
test
add
xchg
push
lods
aas
pop
pop
add
mov
mov
call
aaa
push
mov
push
hlt
inc
popa
fildl
mov
test
sub
sbb
cmp
pop
pop
ljmp
dec
rcl
into
in
inc
fdivs
pop
xchg
push
xor
sbb
popf
jge
pushf
xlat
aad
stc
mov
mov
xchg
inc
es
mov
stc
mov
roll
adc
enter
idivl
ret
sbb
ret
inc
push
inc
cmp
gs
push
xor
les
sbb
sahf
jno
frstor
imul
push
lds
cvtps2pd
outsl
inc
dec
cmp
lock
fnsave
mov
ss
out
insl
fimuls
es
sbb
out
mov
add
xchg
ficoml
cwtl
outsb
inc
ret
add
rol
adc
mov
inc
cmpb
jmp
fnop
dec
std
int3
jnp
movzbl
jnp
mov
jl
bound
cmpsb
sarb
sub
gs
and
clc
movsb
mov
dec
sub
insb
out
pusha
mov
cli
inc
dec
sbb
xchg
xchg
movsb
push
push
out
push
orl
cli
mov
ds
dec
jns
jae
lds
xchg
add
mov
daa
mov
lods
dec
mov
sarb
mov
inc
test
xor
js
inc
mov
fnsave
adc
xchg
mov
jbe
leave
and
fcoml
pop
xchg
add
stos
lahf
sar
inc
xchg
mov
jge
mov
ficoms
pop
hlt
sub
lods
push
lea
fwait
mov
cld
flds
push
xor
pop
mov
push
jae
push
push
std
pop
pop
lods
andb
push
add
jb
inc
paddq
jns
das
jmp
add
or
lret
js
jo
or
sbb
jg
pop
mov
adc
sbb
jecxz
fstpl
mov
pushf
imul
jg
dec
jg
pop
mov
int3
cwtl
adc
sar
add
sub
mov
or
sbb
xor
data16
shll
sti
out
ja
fadd
push
cmp
andl
mov
cmp
dec
sbb
push
das
cmp
xor
adc
sub
sbb
cs
or
jl
shll
mov
jle
pop
mov
ja
cmp
imul
rcrl
mov
or
clc
scas
sub
jp
cmp
stos
and
mov
mov
movsl
out
push
je
repnz
mov
rcll
cmovle
rcll
sarb
sub
sbb
js
out
dec
push
push
rclb
lcall
into
mov
sbb
inc
inc
jno
adcb
push
jl
outsl
mov
mov
mov
mov
mov
ds
data16
in
rorl
ret
mov
pop
xchg
stos
add
mov
fildll
push
out
mov
ja
pop
mov
lods
dec
data16
push
int
test
ds
or
orb
fcmovu
add
lea
pop
and
xlat
pop
rcrl
inc
jl
xchg
lods
repz
pop
scas
pop
ja
and
cli
sub
iret
xor
fsubs
push
movsb
insb
test
xorb
add
xor
mov
test
cmp
nop
mov
push
loopne
dec
sub
xchg
lods
sub
pop
ljmp
fs
xchg
aad
and
test
jl
adc
inc
cmp
xlat
cmpl
aad
pop
pop
jmp
and
adc
call
inc
stc
xorb
andnps
jb
stc
push
adc
dec
test
sbb
scas
fnsave
fcoml
push
and
pop
or
and
scas
cmp
lods
in
jle
rclb
lods
lahf
daa
mov
std
and
stos
adc
movsl
shl
mov
xlat
adc
pop
xor
addl
mov
data16
dec
repnz
inc
jmp
mov
out
pusha
mov
lahf
pop
jne
push
lds
daa
jecxz
jo
testl
lods
adc
outsl
dec
loope
xor
dec
jae
pop
xor
cld
dec
loope
ret
ja
lcall
sbb
or
add
mov
xor
adcb
jo
pop
or
in
lock
cmp
aad
ret
mov
loope
insb
mov
stc
sub
cmp
or
adc
mov
pop
mov
popf
xor
lea
aaa
insl
or
dec
pop
addb
sub
das
flds
and
add
test
scas
push
push
clc
aas
ss
adc
sbb
adc
mov
nop
fists
inc
dec
out
adc
in
movsl
jmp
insl
xor
aad
sub
dec
dec
inc
add
inc
loope
dec
sbb
mov
ret
fwait
dec
testb
jecxz
jmp
mov
pop
inc
push
push
icebp
mov
movsb
lret
pushf
pop
xchg
push
xchg
pusha
je
sbb
insb
push
and
outsl
scas
js
cmc
pop
push
sbb
rcll
es
rcll
loopne
push
into
jb
push
mov
xchg
and
add
push
je
pop
or
inc
hlt
cli
push
adc
push
out
shl
mov
xor
mov
jmp
sub
cmp
adc
movsl
mov
jle
jbe
and
lea
jbe
mov
add
fisubs
jae
mov
jae
sub
or
clc
stc
push
daa
scas
sahf
mov
mov
sub
jns
and
cmp
fcmovb
xchg
shrb
inc
xlat
sub
and
cs
std
mov
push
dec
jmp
xor
inc
lret
inc
out
cmp
jnp
outsl
inc
dec
jbe
subl
popl
shlb
sub
cmp
cmpsb
mov
push
hlt
adc
xor
inc
xor
and
mov
ret
mov
shr
adc
fsubr
mov
rorb
sub
jno
bound
mov
or
hlt
jo
inc
in
xor
push
arpl
xchg
jae
pop
dec
shll
sbb
push
hlt
mov
add
xor
test
jo
dec
in
xor
push
pop
push
mov
bswap
mov
popf
iret
out
lods
repz
mov
cmp
push
sub
cmp
lahf
cmp
loop
dec
dec
jno
daa
mov
lods
ret
in
xchg
push
insl
dec
cli
mov
repnz
push
add
mov
cld
add
ret
mov
dec
inc
mov
dec
out
xor
jmp
ror
sarl
popa
cld
enter
mov
jae
adc
and
insb
or
ret
andb
mov
aad
sbb
jecxz
mov
mov
xchg
or
lret
push
cltd
daa
xor
das
jp
std
outsl
jl
imul
add
inc
lret
sbb
mov
dec
xchg
or
xchg
xor
icebp
addb
pushf
sbbb
cs
push
mov
nop
test
loopne
shll
jmp
mov
js
push
insb
lods
lock
cmp
xor
cmp
inc
push
cmpl
adc
or
push
or
mov
inc
mov
jmp
rcrl
ficompl
popf
jmp
jnp
pop
mov
mov
cli
push
int
adc
sti
inc
mov
mov
cwtl
xor
cmp
repz
dec
das
leave
cmp
scas
jnp
push
add
push
stos
pop
mov
sbb
clc
sub
addr16
add
mov
jo
cmp
cld
xchg
xor
adc
vaddss
pop
push
lea
inc
sub
mov
in
xchg
push
or
mov
adc
test
adc
sahf
enter
fldcw
gs
xor
bnd
sub
pop
xchg
adcb
ficoms
enter
dec
push
mov
addl
lock
popf
cmc
push
fisttpl
out
pop
cmp
outsl
xchg
cmp
je
cmpsl
xchg
lret
icebp
xchg
jne
jl
ficomps
orb
jno
enter
lods
cmp
lahf
repnz
popf
je
mov
push
loop
ss
jecxz
insb
fistpll
jg
mov
lock
scas
jge
insb
repz
jb
test
lret
icebp
cli
out
leave
dec
jp
shl
xchg
subb
jnp
sub
jae
jmp
lea
push
dec
push
push
inc
xlat
mov
add
xchg
popl
imul
in
mov
and
rorl
cmovne
jo
push
loope
pop
dec
shrb
outsb
outsl
mov
movsb
sahf
outsl
mov
adc
pusha
arpl
or
cs
xchg
loop
scas
mov
mov
lock
popf
call
shll
push
stos
test
in
xor
sbb
cli
in
les
adc
mov
sub
fdivs
mov
xchg
cmpxchg
push
lods
leave
ss
sub
popf
jmp
std
stos
xor
aaa
sub
leave
jmp
jbe
pop
pop
popf
loopne
mov
mov
add
or
jle
sub
dec
arpl
sub
or
add
adc
mov
in
ret
lcall
xchg
mov
pusha
sarl
adc
xchg
and
pusha
add
mulb
pusha
or
adc
fdivr
lea
jecxz
imul
or
enter
test
and
push
add
jo
mov
mov
jns
sti
mov
iret
pop
mov
pop
push
xlat
clc
shlb
daa
push
stos
inc
lds
stos
xor
or
mov
or
lds
test
cmpsl
gs
dec
jno
dec
mov
movsb
shufps
mov
cmp
cmp
push
fiaddl
loope
lret
push
fwait
scas
push
rorb
movsl
jl
jg
pop
dec
int
jo
pop
push
xor
loop
or
lahf
pushf
cmp
incl
outsl
adc
or
mov
rcrb
cmp
lahf
test
cltd
scas
push
mov
pop
hlt
and
sbb
mov
shrb
loope
dec
rcrl
mov
and
mov
adc
test
or
fucomip
mov
dec
cmc
int
and
cmpsb
mov
jo
xchg
bound
sub
mov
fsubrs
shll
inc
xchg
pop
in
xor
mov
movsl
lds
iret
lret
mov
adc
rorl
or
testl
pop
fwait
xchg
push
js
jnp
in
push
lods
scas
inc
jle
jae
cmpsb
popa
jbe
inc
or
sub
fidivs
dec
pop
into
fs
xchg
je
mov
ja
or
addr16
jmp
xor
daa
in
es
jns
jb
sub
mov
cmp
jecxz
lock
cmp
add
sbb
xor
mov
push
push
jno
out
out
ret
and
inc
jae
call
aam
lcall
divb
int3
int
mov
sar
pop
inc
mov
sbb
aam
cmpsl
sub
pop
and
add
push
jl
mov
aas
rdpmc
sahf
mov
mov
xlat
test
cmpsb
add
out
sarb
adc
push
dec
adc
idivb
cwtl
out
leave
jae
pop
mov
stos
popa
or
jno
mov
push
and
jp
mov
pop
in
les
call
addr16
sbbb
sub
sub
aam
out
or
xor
lahf
xchg
push
sbbb
shll
std
xor
rolb
adc
mov
imul
dec
mov
orb
jns
sbb
bound
inc
jnp
scas
pop
dec
mov
push
aad
push
iret
popf
test
leave
stos
shl
mov
dec
cli
cltd
adc
addr16
push
xchg
xor
dec
lahf
and
cmc
and
ja
inc
pop
out
adc
test
cmp
and
or
mov
jnp
dec
dec
mov
push
pop
mov
xchg
cs
lds
dec
popa
xor
cmpsl
es
xchg
imul
nop
ljmp
push
dec
lods
sahf
fwait
and
loop
aaa
sub
adc
mov
pop
nop
lret
pop
mov
mov
aam
je
xor
xor
push
xor
add
sub
loop
movsl
out
cmpsb
push
call
mov
test
pop
xchg
movb
push
xchg
sub
leave
jne
test
out
shrb
jnp
jg
pushf
xor
sub
push
add
shll
test
dec
jp
mov
sub
into
dec
mov
in
mov
lret
xchg
cmp
imul
pop
adc
cmpsb
sub
dec
push
sub
test
mov
lahf
inc
ja
jno
mov
cmc
jg
imul
rolb
pop
ja
fidivrl
repz
adc
nop
sbb
mov
dec
cmp
call
adc
mov
into
cmp
mov
mov
jp
cld
cli
adc
xchg
push
cmpsb
sbb
cmc
outsb
rcl
or
xor
inc
stos
mov
leave
repnz
inc
and
dec
add
mov
push
bound
push
and
fstl
movsb
das
xchg
rol
mov
mov
stos
dec
loop
fisubrl
dec
test
jmp
sub
ss
dec
xor
outsl
push
popf
sbb
in
dec
inc
xchg
pop
xor
xor
cmc
lods
ss
les
loopne
pop
dec
fsubrp
cmp
and
loopne
mov
inc
xchg
bound
dec
or
mov
or
daa
xor
adc
cmp
int
push
shlb
push
jbe
fwait
les
int
push
jp
ret
dec
sbb
hlt
pop
cmp
ds
jne
icebp
dec
ret
int3
cmp
mov
cwtl
stos
pop
sarb
or
cli
popa
dec
mov
aas
xchg
jg
mov
icebp
cmpsl
fsub
scas
insl
xlat
push
cli
stos
mov
addl
mov
xor
daa
cmp
inc
mov
pop
outsb
stos
xchg
xor
push
roll
ret
dec
jmp
icebp
pop
sahf
insb
push
mov
xor
or
sti
fs
pushf
jge
loop
adc
imul
xlat
xchg
scas
mov
xor
aam
adc
inc
pop
adc
call
or
mov
fpatan
lret
sti
pop
inc
scas
lods
jae
scas
jp
cmp
ds
test
adc
mov
jno
andb
sbb
push
jb
inc
fs
dec
repz
cltd
roll
sahf
movsl
sbb
stos
pop
fldt
cs
mov
roll
fdivrl
imul
into
scas
mov
xor
gs
mov
test
andl
enter
insb
out
mov
fnsave
adc
into
adc
adc
jbe
mov
ljmp
loop
fstpt
ss
jmp
mov
pop
sbb
xor
arpl
add
jecxz
out
dec
inc
adc
xorl
outsb
xor
clc
outsl
shlb
shll
mov
and
cmp
fld
stos
jbe
mov
jl
jno
xchg
or
inc
movl
sub
lahf
dec
adc
xchg
out
mov
cmp
mov
pop
cld
fucomip
in
sub
push
mov
in
adc
jnp
shlb
test
mov
scas
lret
lcall
mov
out
cli
mov
sbb
xchg
ljmp
sbb
xchg
cmc
jecxz
loop
jmp
mov
int
rcr
or
inc
sbb
test
jne
or
adcl
arpl
xor
push
push
gs
xchg
scas
js
int
addl
fsubl
xor
inc
into
add
sbb
sbb
sub
xchg
shrb
insb
or
sbb
sahf
push
dec
stos
outsl
push
pop
int3
outsl
pop
loope
pop
scas
jp
insb
or
add
js
ss
bnd
adc
dec
dec
sti
push
mov
fwait
push
ficompl
xchg
jnp
mov
call
inc
push
xchg
shr
dec
xor
test
jmp
cmpl
js
subl
arpl
dec
sbb
repnz
dec
add
addr16
movsl
call
loopne
sbb
dec
es
in
xchg
das
out
loop
in
ljmp
int
popa
lcall
fidivrs
inc
aaa
jne
or
push
movl
xchg
sub
mov
int3
faddl
or
lock
ss
xor
pop
test
imul
pop
mov
dec
lock
dec
into
sub
inc
inc
inc
data16
movsl
sub
cli
mov
sbbl
stos
insb
stc
call
adc
dec
ret
push
fisubrs
xchg
das
push
and
data16
and
fcompl
not
inc
or
mov
insb
cmc
sub
ficoml
aam
mov
cmp
ret
pusha
cmp
dec
ja
mov
or
inc
rorb
push
movsl
and
mov
lods
push
sbb
jp
sub
sub
rorb
add
xchg
mov
stos
push
loope
mov
int3
shrb
pop
ds
jbe
pusha
mov
push
movsl
mov
out
xor
test
push
push
sahf
inc
cltd
and
sbb
icebp
xorb
out
mov
cli
add
sub
in
out
repz
ljmp
cmp
inc
ljmp
add
jne
shr
shrl
xor
jl
pop
fwait
and
add
mov
insl
into
mov
sbb
jmp
xchg
pop
xor
jp
loop
imul
callw
and
and
scas
inc
dec
imul
mov
hlt
call
mov
push
arpl
mov
dec
sbb
shlb
mov
xor
scas
fistps
and
sbb
mov
jne
nop
cmp
lods
scas
jbe
in
push
and
sbb
es
lods
mov
ja
sbb
mov
test
inc
cmpsl
std
xor
sbb
adc
xlat
outsl
pop
fbld
cmpsl
dec
mov
adc
daa
mov
mov
fisttps
xor
decl
mov
scas
and
lds
cmpsb
adc
rclb
pushf
sbb
cmovg
mov
sub
jno
pop
mov
adc
jg
idiv
es
aas
in
xchg
outsb
pop
jnp
sbb
gs
sub
aad
sub
mov
fwait
push
mov
sahf
xor
pop
out
cmpsb
jns
fdivr
cld
insb
xchg
sub
int3
xor
subb
push
pop
mov
push
test
ret
cmc
xor
mov
xchg
mov
push
add
adc
and
test
xor
fs
out
dec
add
jne
imul
popa
adc
shrb
loope
fsubrs
ret
aas
xlat
call
pop
push
lea
inc
adc
aaa
xchg
mov
lahf
mov
inc
iret
test
xchg
insb
stc
cmc
dec
adc
cld
dec
pop
lret
icebp
jns
push
mov
pop
test
in
fidivrs
popa
bound
xchg
inc
push
clc
dec
jne
aas
and
jae
cmc
adc
je
into
pop
mov
test
enter
inc
loope
lds
in
shll
jb
push
std
into
imul
and
cmpsl
xor
xchg
sbb
std
in
mov
inc
ret
dec
out
and
dec
dec
nop
scas
mov
pusha
into
dec
sbb
sbb
jp
xchg
xchg
les
xchg
mov
jb
sub
jno
mov
imul
sbb
daa
sarb
and
pop
jecxz
aas
daa
cmp
gs
outsl
in
rcrl
add
add
jo
in
inc
data16
leave
bound
rdtsc
xor
insl
lfs
sbb
lea
iret
fwait
clc
lods
jecxz
mov
loop
mov
data16
xlat
or
rcrb
cmpsb
dec
mov
test
stos
cld
adc
adc
test
roll
xlat
lds
add
ss
xchg
push
push
filds
mov
js
jnp
mov
push
lret
xchg
mov
cmp
mov
fwait
pop
fdivs
mov
loopne
cmp
mov
jl
cmpsl
pop
mov
orb
cmp
dec
cli
repz
mov
loop
cld
sub
inc
dec
pop
loope
jl
pop
popf
shrl
shrl
iret
imul
test
mov
ret
xchg
out
and
call
mov
arpl
shll
cmpsl
loopne
enter
jge
add
mov
mov
push
push
test
movsb
roll
ret
pop
sub
or
jo
stc
xchg
sub
addr16
pop
call
insl
stc
icebp
rolb
add
add
scas
sub
push
inc
push
loope
mov
mov
inc
cmp
stc
mov
sub
fnstenv
cmp
or
mov
push
into
xchg
sbb
dec
lock
call
pop
sbb
xchg
jg
mov
xor
scas
mov
and
repnz
pop
aad
fsts
in
and
out
mov
aas
inc
je
rcrb
je
out
push
jne
mov
scas
mov
arpl
add
mov
pushf
call
rolb
into
lods
add
mov
cmp
mov
mov
setle
dec
or
popf
add
cli
xchg
lcall
and
jp
xor
push
pop
es
int3
repz
or
sti
pop
stos
and
lock
cmp
imul
sbb
popl
add
mov
and
lcall
sbb
pop
mov
and
mov
ret
lret
insb
adc
repnz
call
cmp
cmp
out
sub
cli
sub
cmp
xchg
adc
push
cmp
add
dec
mov
dec
testb
and
into
xchg
and
movb
mov
sbb
jle
call
pop
xchg
xchg
lret
pop
pusha
pushf
ret
cltd
push
add
xor
in
sahf
dec
mov
out
inc
ja
fbld
cmp
arpl
jge
leave
outsl
cmp
ret
setp
mov
push
aaa
jne
adc
rcll
pushf
push
bound
jnp
loope
ret
xchg
pop
mov
xor
popl
add
mov
cs
sbb
fcmovne
stos
stos
icebp
pop
sbb
repz
xor
sbb
cmc
add
dec
pop
je
fcmovnb
jge
aaa
add
movsl
loop
filds
or
xor
push
xor
adc
dec
sub
shl
ret
cmp
fistpl
mov
leave
pop
push
mov
lods
out
jmp
ret
xchg
dec
push
inc
and
mov
or
inc
pushf
xor
subl
dec
fsubl
cs
jecxz
pop
pop
lret
scas
adc
movsl
and
push
js
or
adcb
push
mov
jae
call
pop
sbb
ss
mov
and
xchg
lret
push
adc
mov
imul
add
mov
icebp
push
jb
out
or
pushf
mov
aaa
ljmp
and
mov
test
stc
insb
loopne
loope
repz
or
cmp
int
mov
dec
dec
mov
or
insl
push
and
cmp
cmp
mov
fidivrs
xor
mov
dec
jne
popf
std
fs
std
mov
pop
inc
or
pop
hlt
icebp
xchg
add
mov
call
mov
adc
cwtl
cmp
sbb
mov
xlat
or
mov
jecxz
ret
sbb
and
push
sbb
pop
movsl
dec
jle
fld
stc
inc
sub
cwtl
xlat
xor
mov
in
adc
inc
mov
sbb
inc
mov
lods
lret
out
sub
out
mov
mov
clc
xchg
cmp
mov
cmc
test
aas
dec
jnp
inc
les
cmp
mov
inc
jnp
insb
test
mov
addb
mov
inc
lods
mov
call
fnop
ret
dec
add
aam
insb
call
dec
sarl
into
stos
fisubs
pop
xlat
in
dec
pop
addr16
inc
push
addl
loope
ds
and
mov
mov
and
fistpl
shlb
mul
mov
fisubs
popa
nop
idiv
gs
in
adcl
dec
rcll
insl
lret
in
cmp
mov
stos
mov
loopne
scas
ficoms
xor
push
fildl
into
daa
mov
mov
or
testl
insb
xor
sti
stos
loop
out
inc
pop
sbb
jne
inc
xchg
adc
xchg
inc
lea
subb
out
sub
and
and
ljmp
add
loopne
inc
wrmsr
mov
mov
mov
je
jl
or
mov
int
and
mov
testl
inc
push
insl
psubsw
pop
fs
push
add
pushf
fwait
mov
stc
mov
push
push
fcmovbe
enter
lea
and
add
pop
jae
mov
xchg
rcrb
arpl
pop
aam
hlt
js
sub
lds
adc
xor
cmc
mov
imul
adc
mov
arpl
ds
push
outsb
dec
xchg
add
mov
mov
mov
cmc
aaa
clc
sbb
shr
aaa
push
dec
jo
xor
add
test
fimull
xchg
mov
cld
adc
or
lea
sbb
rcrb
mov
xor
cmp
and
fnstcw
pop
std
and
push
loop
pop
or
sbbb
out
mov
pusha
sti
lcall
clc
pushf
jl
and
xor
sarb
je
cmp
xor
push
push
dec
in
mov
cld
mov
push
xor
mov
xchg
test
pop
mov
add
jnp
pop
mov
mov
filds
push
outsl
adc
lret
xor
pop
cmp
mov
inc
mov
mov
gs
lds
mov
negb
push
jns
sbb
mov
xchg
clc
cmp
sbb
cmc
movsl
std
inc
inc
das
mov
mov
les
in
mov
daa
lock
or
outsl
sbb
enter
sbbb
inc
xchg
fstpl
in
arpl
adc
pop
rolb
dec
pusha
cwtl
jb
popf
out
lcall
cmpsb
add
test
inc
pop
cld
jo
mov
add
lahf
fs
enter
xchg
ret
mov
movsb
cmp
push
aam
sbb
das
adc
xor
inc
dec
cmp
int
push
push
stos
jg
dec
jmp
daa
push
push
xor
xchg
out
insl
sbb
pop
test
xchg
pop
xchg
pop
or
rcrb
jno
adc
fstp
push
call
enter
js
mov
mov
iret
xlat
pop
ret
test
pop
lret
and
adc
adc
pop
es
add
in
fisubrl
xchg
fs
and
and
mov
xor
test
in
jp
mov
andps
xor
add
lret
pop
sbb
and
pop
sbb
add
fists
xchg
test
pop
orps
outsl
lods
bound
les
dec
and
int
dec
xor
jl
fistpll
cmp
ret
shlb
xchg
adc
and
mov
pop
mov
je
add
aaa
js
je
je
mov
push
vcvtsi2ssl
push
shl
cmp
ja
cs
push
push
call
rorl
test
decb
mov
lahf
push
add
ret
cwtl
or
jl
repnz
lods
mov
mov
jne
sub
daa
xchg
lret
ret
xor
push
mov
js
jno
out
popa
jbe
sub
shll
cmp
fcomp
aaa
pop
test
fwait
outsb
mov
into
sub
adc
aam
xor
xlat
lcall
pop
cmp
imul
mull
jnp
pop
lds
jb
mov
scas
adc
cmp
loope
dec
rcl
mov
scas
fwait
sbb
fiaddl
ljmp
add
jecxz
ror
ss
fiaddl
daa
mov
mov
pusha
ret
pop
pushf
std
jno
ss
inc
mov
div
inc
bound
aam
jo
addr16
xchg
popf
fiaddl
xchg
daa
mov
mov
mov
and
ja
sub
ds
xchg
fcoml
push
push
shrl
ds
sahf
jecxz
cmpsb
inc
jmp
cmp
add
jmp
dec
xorl
sbb
sub
xchg
mov
and
fiaddl
movsl
movsb
mov
xchg
scas
lcall
cmp
adc
repz
orl
jnp
sti
cs
loop
or
mov
xor
and
sbb
mov
lahf
shr
inc
lret
dec
int3
pop
out
xchg
cmpsl
cwtl
jnp
scas
pop
inc
cmp
sub
cmp
rcr
add
sub
insl
fdivrs
sbb
repz
cmp
ja
inc
leave
dec
or
jno
mov
js
add
cmc
les
movsb
aas
gs
and
adcb
jl
mov
push
push
outsl
loop
repz
sahf
movsl
jnp
or
in
or
pop
or
add
out
cli
mov
fwait
add
scas
jecxz
inc
inc
mov
add
ret
and
or
imul
xchg
mov
cli
mov
add
push
push
ljmp
lea
sub
in
lahf
sub
inc
mov
mov
ret
and
jg
in
out
mov
dec
stos
mov
data16
stos
cs
test
dec
js
fadds
popf
cmp
scas
mov
shlb
inc
idivl
push
in
movb
xchg
clc
stos
lret
adc
scas
das
pop
jecxz
dec
shr
mov
lcall
clc
sub
cs
in
mov
jecxz
dec
lea
or
mov
sti
call
mov
jl
cmp
aaa
add
jecxz
shl
xor
sahf
jo
lcall
xchg
cmp
sbb
in
mov
sbb
xor
xchg
xor
or
sti
aam
adc
xor
out
sahf
stos
or
nop
pop
or
jns
pop
dec
cli
jae
sub
mov
cmp
lcall
adc
xor
dec
inc
mov
je
in
push
cmp
shll
ds
imull
sub
frstor
out
mov
cmpsb
stos
sub
push
or
cmp
sti
mov
std
mov
jae
xor
fsubrl
pop
push
sub
xchg
adc
lock
mov
shl
pusha
not
icebp
sub
sub
inc
loopne
cli
movsb
mov
imul
inc
jg
fstpt
popl
fiaddl
cmpsb
add
sub
adc
int3
jb
jbe
daa
xchg
js
pusha
jae
es
jns
sbb
push
xchg
aad
icebp
adc
xor
sub
mov
outsb
xchg
dec
je
loope
and
ret
pop
fs
pop
mov
mov
mov
in
xor
test
test
mov
inc
sbb
and
fldt
sub
mov
or
fdivr
ljmp
cltd
pusha
sub
sbb
jo
mov
es
in
sub
mov
xor
pop
fcmovnu
stos
es
and
repnz
and
dec
dec
test
mov
stos
push
pop
push
jg
test
mov
sarb
lcall
aad
cltd
pop
inc
rolb
pop
scas
out
xor
jnp
cmpsb
rcll
xor
lret
mov
cwtl
mov
aas
test
cwtl
or
sarb
mov
bound
dec
sbb
dec
scas
push
add
pop
mov
xor
mov
pop
cmpsl
call
xchg
hlt
xlat
lret
jnp
mov
bound
clc
inc
lret
adc
mov
daa
scas
cmp
mov
outsb
insl
jne
jge
add
cmp
out
fistl
das
jle
push
int
jne
bound
pushf
das
inc
aad
xchg
cmp
xchg
xor
inc
xchg
dec
mov
shl
dec
adcl
mov
stc
or
xchg
lods
xchg
adc
push
xchg
sbb
cmp
push
add
adc
in
call
inc
aaa
push
push
lahf
mov
sbbl
xchg
int
push
leave
into
jmp
mov
add
add
std
push
xchg
es
jne
pop
idivl
pusha
lcall
in
or
jne
jne
jp
jo
mov
mov
mov
lds
and
aaa
fstpl
loope
ret
andb
jmp
jae
sub
add
push
dec
xchg
xchg
and
fs
test
shlb
mov
sub
xchg
or
fbld
mov
mov
imul
mov
loop
jnp
xchg
and
xor
and
pushf
mov
adc
faddl
push
aas
ror
dec
dec
sub
xchg
es
popa
mov
inc
jb
frstor
leave
adc
stc
mov
sub
loop
popf
lcall
lea
adc
mov
call
lret
pop
xor
dec
lahf
or
push
cwtl
jmp
push
pop
pop
push
insl
mov
aas
movsb
sub
dec
pop
outsb
lret
sub
and
std
hlt
or
fistpll
pushf
adc
aaa
inc
movsl
or
ja
insl
mov
mov
mov
push
jp
mov
dec
add
mov
clc
in
xchg
sub
cmp
adc
fistl
jo
in
inc
imul
push
push
fistl
push
inc
stos
fisttpl
cld
cmp
xchg
jae
lret
push
imul
jg
inc
pop
shll
xchg
adc
jg
sub
lret
in
and
cmp
xchg
dec
leave
sahf
xor
outsl
push
mov
xchg
aaa
aam
push
mov
inc
cmpsb
cwtl
mov
insb
jo
push
jbe
outsb
les
adc
out
sahf
stos
sti
repnz
dec
adc
dec
bound
push
adc
xor
mov
push
jl
mov
jne
sbbb
and
pushl
or
fbstp
dec
out
ret
cmp
inc
cmp
mov
test
dec
inc
incl
adc
out
pop
xchg
sub
xchg
fistl
mov
int
mov
mov
mov
xchg
sbb
ja
sub
jg
jbe
iret
push
xor
xor
or
adc
cwtl
pop
or
xchg
imul
and
and
jns
push
or
push
pop
lahf
cltd
pop
mov
push
int
and
repnz
pushf
imul
sub
mov
mov
mov
inc
jnp
fidivrs
fwait
out
xor
jmp
dec
mov
xchg
cmp
insb
dec
daa
loope
repz
xor
cmpsb
popf
jg
sahf
ds
pop
pop
lret
mov
pusha
loop
out
mov
in
pop
shrl
lea
mov
test
pop
stos
adc
stos
pushf
aas
inc
cltd
mov
push
lock
add
mov
fidivrl
int
pop
aas
add
cltd
xor
popa
cmp
imul
mov
push
jmp
fwait
xchg
jne
in
je
out
sub
out
push
shr
aaa
push
xor
inc
clc
int
sahf
mov
aas
sbb
cmp
in
sahf
xlat
adc
jp
enter
add
ja
sti
jp
int3
icebp
or
push
xchg
jge
xchg
mov
push
inc
scas
popf
xor
shrl
stc
lods
inc
fnstcw
aaa
adc
jmp
sub
dec
mov
loopne
xchg
push
adc
adcl
add
ret
fnsave
je
sbb
out
test
out
mov
and
push
push
add
lret
inc
in
mov
lea
jmp
sub
rcrb
mov
xchg
lret
mov
sbb
xchg
cmpsb
or
lds
fwait
pop
dec
loop
out
fs
fs
dec
fldpi
xchg
cmp
or
ret
jmp
jbe
jbe
fsubl
mov
sub
fs
pop
jecxz
cmp
cwtl
ds
dec
inc
push
ljmp
shlb
dec
cmp
jmp
bnd
or
repnz
inc
cmp
xor
out
decb
mov
aaa
pop
mov
ffreep
dec
cmp
add
push
push
cmc
adc
clc
iret
repnz
jne
add
cltd
js
xchg
or
jno
sbb
hlt
cs
xor
pop
pop
mov
and
bound
sub
les
jmp
aam
ja
cmp
xor
and
or
out
jno
sbb
idivl
scas
test
iret
jg
pop
mov
push
adc
lock
fsubl
push
push
xlat
inc
aaa
mov
ds
mov
movsb
ljmp
test
incb
pop
repnz
loop
push
push
movsb
in
lret
and
dec
pop
inc
sub
pop
enter
cmp
sbb
xchg
iret
or
inc
andb
mov
sub
ljmp
or
stos
dec
push
xchg
cmc
push
sub
lret
adc
iret
hlt
and
scas
fisubrl
hlt
mov
notl
xor
pop
sbb
mov
push
arpl
mov
inc
pop
cmc
push
jp
mov
jmp
or
pop
addr16
or
inc
dec
cmpl
cltd
cltd
push
sahf
aad
fstps
ret
sbb
adc
dec
inc
adc
mov
fucomip
jnp
inc
sbb
pop
pop
pop
dec
jno
and
ret
and
pop
mov
cwtl
add
imul
cmc
sbb
xchg
roll
std
and
cmpl
cmp
cmp
jl
addb
clc
cmp
inc
jge
shr
mov
xchg
pop
incl
xchg
in
insb
sub
inc
adc
mov
jg
cld
mov
cmc
dec
insl
sarl
adc
loop
dec
test
enter
jle
data16
pop
movsb
inc
push
push
cmp
xchg
leave
outsb
into
cmc
cmpsb
les
in
divl
cmc
xor
gs
xchg
test
inc
xchg
outsl
stc
cmpsl
jbe
jp
into
cs
xor
std
stos
mov
in
dec
cmp
mov
in
mov
stos
aam
pusha
mov
int
sbb
lcall
lds
push
push
pop
sub
fcoms
mov
in
out
mov
or
xor
pusha
fs
mov
or
xchg
push
xchg
xor
insl
dec
jecxz
cltd
shll
insb
push
pop
xchg
adc
ret
mov
mov
addr16
test
cmp
cmp
jl
decb
insb
mov
mov
idivl
push
jle
sub
shrb
jle
fcomp
dec
rcrb
lea
ds
push
or
push
jmp
test
xor
jnp
add
int
inc
in
lods
mov
push
in
ljmp
push
rorl
bound
mov
insb
cmp
popf
cwtl
dec
dec
xchg
sub
add
add
jle
sub
pop
psllq
cmp
in
cmpsl
xchg
lahf
lods
arpl
cld
jns
out
cmpsb
outsl
push
mov
inc
xor
adc
movsb
decl
and
mov
cmp
mov
cwtl
popa
hlt
jno
and
or
scas
and
sti
mov
jns
mov
xor
sbb
mov
xlat
sbb
incb
imul
outsl
fsubrl
dec
jae
int
pop
cmc
dec
xor
pushf
push
pop
icebp
into
hlt
mov
inc
pop
pop
xor
icebp
sti
pop
jmp
cmp
dec
xor
rorb
pop
mov
lcall
dec
xchg
ret
push
test
adc
inc
inc
mov
out
mov
mov
arpl
mov
popa
gs
aad
mov
divl
arpl
gs
and
enter
dec
jl
pop
and
cmp
adc
xchg
in
mov
stc
sub
std
lock
leave
dec
inc
sbb
shrb
sbb
fisubs
pop
cmp
xchg
cmc
push
xchg
xchg
and
pop
out
daa
popl
mov
xor
pop
in
pop
imul
jne
and
dec
add
ret
add
xchg
adc
pop
dec
dec
xchg
es
cmp
insl
mov
mov
popa
icebp
mov
les
stc
cmp
loope
sbb
mov
push
mov
pop
es
stc
adc
out
cld
sbb
aas
lods
icebp
jg,pn
lock
jl
pushw
in
mov
sbb
mov
inc
ret
xchg
data16
pop
frstor
dec
imul
cmp
fdivl
inc
out
xor
shll
dec
push
sbb
in
and
out
push
rcll
aad
je
lret
xchg
xorl
jns
mov
and
jmp
and
xor
popa
cli
dec
mov
xor
mov
mov
pop
jno
cmp
cmp
and
and
pop
pop
lock
dec
dec
out
xchg
fs
dec
out
jbe
std
adc
jmp
mov
adc
adc
inc
sbb
andb
es
push
ja
arpl
pop
dec
cltd
or
rorl
test
jbe
cmp
and
out
ret
sbb
loope
mov
nop
pop
pop
das
fmull
and
add
add
cmp
add
shlb
sub
fs
pop
cmc
iret
adc
pop
pop
and
stc
xchg
xor
push
pusha
lret
and
mov
xchg
in
or
imul
pop
jo
xchg
sub
aas
push
inc
sbb
push
ret
add
pop
and
push
clc
mov
int3
clc
cmp
mov
imul
mov
stos
xbegin
loopne
pop
xchg
mov
push
fmull
dec
dec
movsb
pusha
and
cmp
or
push
out
mov
inc
fisubrs
xor
sub
adc
push
stc
xor
mov
shrb
sub
test
xor
mov
add
inc
xchg
mov
mov
into
dec
push
mov
push
test
pop
test
pop
stos
fiaddl
add
pop
mov
das
outsb
sub
scas
jb
test
dec
aam
in
cs
mov
data16
jnp
jg
add
loope
rcl
bound
es
cmpb
gs
shll
sarl
xchg
ficoml
gs
int
pop
sub
or
push
orb
jnp
mov
out
imul
mov
pop
clc
fstp
sub
mov
push
out
inc
push
test
jns
pusha
loope
mov
in
jg
ljmp
rcrb
cmpsl
jbe
push
pop
push
dec
dec
sahf
call
add
aas
push
stc
out
xchg
adc
lret
jl
mov
ds
push
je
enter
push
or
repnz
mov
add
mov
mov
mov
in
adc
mov
leave
insl
mov
imul
pop
lret
loop
das
adc
inc
mov
and
popf
rolb
in
xchg
cmpsb
std
push
dec
mov
jecxz
jl
mov
xchg
daa
pop
xchg
fwait
inc
xchg
test
es
jge
and
xor
pop
jecxz
insl
imul
xor
addb
xor
sbb
xor
sbb
mov
dec
mov
adc
pop
inc
xor
lock
mov
xchg
jbe
push
std
mov
or
adc
cs
imul
ds
mov
movsl
sahf
ficoms
jo
aas
insl
nop
xor
pop
dec
mov
jnp
mov
cwtl
xorl
or
sbb
jge
int3
lcall
test
add
adc
bound
adc
mov
pop
call
loop
dec
mov
xor
jg
cmpsb
or
jecxz
mov
ds
pop
out
ret
imulb
out
inc
test
lret
test
push
mov
insb
aam
sub
inc
jbe
aam
ficoml
and
in
inc
push
jo
adc
ljmp
inc
xchg
mov
jmp
sar
jnp
push
jne
xor
sub
hlt
das
and
sbb
pinsrw
int3
stos
mov
mov
mov
lds
mov
xor
push
adc
jne
ljmp
and
mov
xor
sti
dec
test
inc
sub
pop
push
or
icebp
push
dec
pusha
mov
sarl
cmp
jp
and
or
mov
adc
sub
das
rcll
xchg
or
pop
cmp
subl
push
and
in
sub
or
cmp
mov
xchg
push
mov
xlat
mov
or
and
ret
mov
andb
sbb
or
fsubrs
loopne
stos
fwait
cmc
out
cmp
loopne
pop
dec
pop
pop
sub
jnp
jnp
pop
xlat
aaa
or
cmp
or
xchg
inc
xor
sahf
lret
les
popf
push
xor
fcoms
push
imul
xchg
add
jnp
lea
mov
push
mov
rorb
mov
mov
inc
and
mov
xchg
clc
inc
je
fiadds
add
mov
mov
sarb
mov
addr16
jg
xor
notl
cs
mov
mov
imul
leave
pop
xor
add
fisttps
and
movsb
cmp
mov
inc
dec
add
sub
mulb
cmpsl
inc
sbb
fs
sub
push
pusha
ret
ret
jae
or
or
clc
sub
scas
pop
cmp
or
and
cld
xchg
mov
icebp
lock
push
push
aad
mov
in
arpl
xchg
or
addr16
jnp
dec
out
inc
aaa
icebp
lret
mov
adc
cmp
cmp
cmp
add
jg
push
push
inc
lahf
jecxz
outsb
nop
mov
lahf
inc
inc
cmp
jge
scas
and
xlat
orl
adc
push
xchg
leave
mov
pop
push
cltd
dec
add
lods
add
pop
cmp
adc
push
outsl
or
fcmovnb
dec
sub
aaa
sbb
pop
fwait
or
shlb
push
mov
push
adcl
pop
cmpsb
push
in
in
out
jno
jnp
icebp
pop
push
scas
outsl
push
aas
clc
repnz
imul
pusha
lods
adcl
jle
sahf
out
and
mov
cwtl
outsl
dec
inc
dec
in
out
das
jae
scas
fildl
cli
into
inc
sub
loope
add
xor
lret
lret
aam
lds
adc
stos
rcrl
hlt
jge
jecxz
imul
adc
rorl
dec
aas
test
insl
lret
cli
pop
subl
cmp
cmpb
not
ss
fwait
xchg
add
shl
dec
mov
xchg
out
and
pop
out
mov
leave
outsb
xchg
dec
mov
in
sub
inc
jae
xchg
arpl
pushf
fbld
sbb
sbb
sbb
add
in
push
inc
mov
outsb
or
or
pop
mov
jne
pop
lods
fisttpl
cli
andb
jbe
scas
test
into
fnstenv
movsl
not
cs
stos
pop
ret
iret
and
jno
jo
mov
popf
scas
sub
icebp
or
adc
mov
sub
iret
mov
sub
mov
adc
jge
lods
andl
dec
xlat
jle
mov
jnp
xchg
mov
add
adc
fstpt
imul
dec
out
xor
lock
xchg
sub
dec
mov
jns
and
push
or
call
and
outsl
je
sbbl
lahf
xlat
mov
hlt
jbe
jmp
in
sub
adc
inc
bnd
mov
mov
test
sub
jp
mov
in
adc
out
or
mov
jmp
dec
aam
jmp
xchg
inc
out
xor
setbe
es
cld
cmpsb
lret
int3
movsl
sbb
daa
orb
dec
inc
push
into
sub
jne
jae
addl
add
out
stos
add
shrb
mov
cmc
ret
push
sbb
inc
jae
jl
cmp
sub
sbbb
and
icebp
shrb
jnp
sbb
mov
lods
cmp
addr16
shl
js
xor
and
stos
cmp
pusha
pop
out
dec
fwait
jge
and
call
test
mov
adc
roll
jo
fdivl
and
mov
dec
jl
mov
add
jbe
dec
add
pusha
jo
leave
leave
jbe
in
je
jae
pop
inc
mov
lahf
test
cmpsb
jb
aas
xor
lahf
std
adc
fdivrl
jecxz
pop
cmpsb
xchg
mul
adc
sbb
adcb
insb
mov
pop
cmp
pop
add
outsl
clc
mov
sbb
imul
mov
into
push
mov
and
push
jno
mov
lds
cltd
adc
jle
ljmp
lcall
xchg
sub
roll
mov
jae
add
iret
xlat
push
popf
sahf
push
in
mov
cli
mov
cwtl
notb
repnz
mov
sbb
ljmp
pop
push
les
push
das
jo
pop
cmp
mov
mov
xlat
mov
mov
and
dec
adc
dec
aas
inc
mov
stos
xchg
je
push
int
fisubl
cmp
ret
mov
or
jns
outsl
aam
push
adc
hlt
cld
in
cwtl
or
nop
xchg
cld
dec
pop
add
lock
mov
into
out
pop
ror
inc
les
addl
xor
inc
adc
jnp
les
mov
and
movsb
mov
loope
fldcw
dec
adc
add
jl
dec
repz
push
pusha
enter
mov
jnp
pop
xor
std
xchg
mov
scas
inc
movsb
jbe
or
outsb
xorb
lds
outsl
dec
adc
mov
fimull
xchg
mov
add
fmul
jns
inc
movsb
fadds
inc
cltd
sub
orl
cmp
out
xchg
ret
shlb
sarl
xchg
fs
push
mov
pop
mov
jns
gs
aas
and
in
hlt
lods
mov
lds
adc
lahf
cmpsl
sbb
fadd
scas
add
lahf
popa
mov
jle
mov
sbb
push
mov
adc
orl
pop
jp
ret
mov
dec
in
loopne
and
sub
add
leave
pop
in
cltd
and
pop
rclb
mov
das
push
mov
movsl
pop
dec
xor
mov
jl,pt
adc
int
jge
in
out
cwtl
or
and
nop
lods
push
cmp
sbb
or
sub
add
sbb
es
and
xor
mov
sbb
jbe
adc
lods
xor
imulb
cli
loope
es
xor
and
into
adc
int
cmp
ss
dec
xor
push
sbb
arpl
and
sbb
enter
add
gs
mov
jle
push
xchg
iret
pcmpgtw
pop
fdivs
mov
icebp
imul
cmp
bound
push
push
adc
push
test
dec
jle
pop
stos
outsb
lahf
out
sbb
out
pop
and
stc
and
cmp
adc
jecxz
hlt
dec
cmp
imul
cwtl
or
cmc
rorl
mov
jmp
es
lret
ret
lds
loop
cmp
dec
sbb
dec
lds
daa
loope
mov
adc
mov
sub
int
imul
nop
movsb
test
mov
adc
mov
ljmp
xchg
xor
sub
hlt
xchg
and
imul
xchg
int
xchg
inc
pop
aaa
mov
or
lock
cmc
hlt
cmpsl
sahf
fldenv
xchg
sbb
xor
mov
int3
cmc
jo
out
mov
sbb
out
mov
pushl
pop
rolb
inc
int
sbb
ds
ror
inc
sbb
lods
cmp
insb
cmc
dec
loopne
sub
jl
xchg
xchg
int3
push
pop
fcomip
jae
fwait
popl
out
fwait
je
lret
fldl
jp
mov
jo
aaa
dec
push
or
inc
in
lret
push
loopne
cmc
sbb
loope
pushf
add
sbb
repz
jp
cltd
push
arpl
mov
mov
enter
mov
pop
bound
ljmp
push
cmp
scas
mov
rcrl
pusha
iret
and
adc
dec
fmuls
xchg
testl
cmp
movsb
les
sbb
iret
jl
push
in
or
add
sbb
push
dec
enter
mov
ss
and
test
cmp
enter
lock
mov
fcoms
js
das
fdivs
xchg
mov
xchg
mov
or
andl
push
dec
mov
andl
shrl
push
push
dec
adc
mov
mov
jmp
and
pop
push
stos
rcrb
push
jle
mov
push
jno
into
sub
mov
loop
popl
or
shll
lret
push
gs
mov
cmc
push
aam
cltd
icebp
das
mov
mov
icebp
sub
sbb
mov
sub
aaa
adc
repz
out
xor
sub
add
push
call
icebp
xchg
pop
cs
lock
mov
mov
stos
insb
int3
test
imul
xchg
mov
mov
dec
sub
dec
pop
jge
xor
arpl
jge
pushf
je
cmp
pop
pop
imul
jns
push
out
fstpl
inc
test
add
faddp
cmp
imul
cmpsb
xchg
test
add
mov
lods
lods
ljmp
sub
xor
pushf
je
mov
repz
aaa
hlt
adc
push
xor
mov
mov
loopne
jnp
shll
sbbl
js
stc
lret
push
shl
cmp
cmpsb
movl
decb
mov
aad
mov
popl
mov
mov
imul
call
cs
shlb
js
das
loope
imul
out
or
add
arpl
dec
mov
cmc
add
clc
or
cmp
and
mov
or
or
adc
push
xchg
and
data16
ficompl
or
cmp
mov
repz
call
stc
lea
ds
pop
aad
mov
jmp
aad
pusha
out
pop
mov
into
mov
dec
cmpl
das
jge
xchg
scas
and
mov
cmpsl
add
dec
in
cld
enter
mov
jmp
outsb
dec
mov
in
lea
sub
mov
xchg
fmul
stc
cmpsl
push
sbb
push
add
xor
xor
in
mov
cmp
mov
pop
lods
cmpl
fnstsw
jae
out
xor
leave
and
cmp
jno
and
mov
arpl
sbb
pop
push
and
or
cli
stc
lret
stos
cld
mov
xchg
das
aam
subl
cmpsl
iret
nop
jno
and
mov
stc
mov
aaa
cmp
add
std
cld
in
push
xor
sbb
repnz
add
divb
dec
push
add
lret
aad
xchg
sub
adc
pop
sub
inc
andl
jle
inc
insl
sbb
mov
jno
out
addr16
aas
stos
lahf
in
mov
mov
cwtl
sbb
add
in
lcall
inc
jmp
sub
int3
mov
pop
lock
pushf
cmp
or
ds
dec
mov
jp
mov
and
mov
jo
sub
imul
lods
add
dec
cwtl
xchg
xchg
das
xor
stos
jo
jp
mov
lret
xchg
push
int3
ret
mov
push
pop
int
mov
jmp
cmp
jg
and
jne
scas
mov
sti
fiaddl
fbld
loop
push
cmp
divl
adc
cmpsb
mov
mov
dec
add
xor
dec
jo
jo
ds
adc
xor
insb
js
int3
popa
stos
data16
out
adc
or
push
add
fisubrl
mov
leave
add
pop
mov
mov
pusha
in
push
jae
jp
in
pop
cmp
ss
int3
xchg
cmp
xchg
push
dec
out
ret
mov
cmc
and
dec
andl
jg
mov
fsubrl
aas
ret
iret
adc
pop
xchg
and
loopne
xchg
mov
dec
sub
ret
rcrb
jle
sbb
lods
xor
sub
outsl
lahf
mov
int
or
nop
aad
sub
aad
movsl
inc
mov
and
and
frstor
cmp
push
shll
dec
add
lret
out
ljmp
xchg
mov
xlat
or
push
adc
mov
cmp
jns
scas
aam
je
in
call
and
pusha
push
mov
mov
push
das
mov
lcall
shll
xor
jns
xlat
sub
repz
mov
popf
out
xor
fisubrs
aam
cmpsl
rolb
out
add
or
stos
sar
in
push
xchg
inc
test
or
mov
sbb
sarb
mov
outsb
xchg
push
ljmp
mov
fimuls
xchg
mov
in
insl
push
mov
mov
pop
jl
inc
dec
insb
push
mov
xor
std
aad
add
lds
sbb
pop
clc
xchg
ja
cmp
std
icebp
sbb
loope
rcl
in
push
jl
scas
xor
push
int3
xchg
mov
pop
mov
mov
sbb
sub
repnz
mov
incb
inc
in
cmp
mov
outsl
inc
lea
adc
sti
insl
ds
sub
mov
mov
push
lret
jns
js
stc
jl
hlt
addl
enter
stc
sbb
pop
sbb
sbbb
xchg
pushl
mov
pop
fstpt
pop
cmpl
daa
stos
jecxz
outsb
hlt
ret
xchg
aam
xor
cmpsb
int3
pop
dec
or
dec
mov
xchg
fcomip
mov
imul
push
push
mov
lret
negl
pop
pusha
lea
pop
and
and
mov
mov
jg
jle
xor
pop
add
adc
lret
movhps
inc
mov
mov
ja
add
xor
cmp
mov
std
into
and
and
ret
and
sarl
push
push
pop
out
push
divl
insb
and
xor
push
pop
ret
xchg
rolb
hlt
inc
pushf
in
dec
scas
jg
into
inc
xchg
xchg
and
out
xchg
mov
mov
cmp
cmp
push
out
cmp
cmp
adc
pop
cmpsb
mov
flds
jno
pop
cmc
out
je
xor
dec
jg
mov
repnz
adc
mov
or
imul
dec
or
scas
stos
insb
not
call
xchg
scas
hlt
inc
and
popa
sahf
lods
ret
cmp
xchg
into
mov
test
add
bound
add
jle
iret
fwait
xlat
jmp
lea
cmp
sub
mov
repnz
jno
mov
or
jg
out
fld
cwtl
sub
popf
loop
out
dec
xchg
scas
cmp
add
dec
mov
aas
loope
push
or
mov
in
cwtl
push
or
adc
movsl
cmp
xlat
dec
adc
je
rcrb
adc
gs
insl
inc
xor
xchg
push
repz
adc
addr16
or
ficoms
jmp
ret
mov
stos
aas
mov
lret
xchg
fldenv
mov
sbb
xchg
insl
dec
cmc
ja
mov
mov
dec
cmpsb
rorb
cmp
dec
xor
add
fwait
js
in
mov
add
push
and
outsl
lret
andb
loop
enter
push
xchg
jbe
inc
movsb
add
leave
shrb
mov
push
std
push
sub
or
lods
sbb
js
mov
out
call
fstpt
out
push
cwtl
jmp
rclb
rcr
push
sti
xchg
mov
jle
xchg
shr
mov
xor
sti
fwait
outsl
pusha
sub
icebp
xchg
jl
dec
push
cli
lods
mov
jbe
jp
out
xchg
cmp
cmp
pop
leave
adc
loop
call
mov
adc
les
mov
insl
push
mov
xchg
movsl
stc
loop
jo
and
aas
xor
aam
sub
cli
sar
leave
ret
jp
cld
add
in
les
pop
test
js
out
mov
es
mov
jg
push
lahf
sub
add
testl
int
cmp
cs
sub
jns
mov
xor
inc
daa
jl
cmp
fisttpl
xchg
push
lahf
mov
leave
popf
out
es
xchg
lds
stc
add
stc
test
gs
pop
inc
cmp
pop
int3
call
sarb
jno
pop
insl
clc
scas
lods
insb
ljmp
sub
or
mov
xor
and
xlat
mov
fstps
dec
pop
jb
ret
test
out
lods
and
arpl
cmp
sbb
or
fwait
hlt
jp
pop
push
movsb
adc
mov
xor
cmp
mov
adc
sub
rclb
gs
mov
fidivrl
sti
cmp
inc
push
or
jne
je
pushf
imul
jecxz
cmc
jge
xor
inc
imul
mov
outsb
and
mov
sti
test
mov
xchg
addr16
xor
mov
decb
pop
testb
add
mov
or
movsb
mov
in
jo
xor
sub
mov
sub
and
add
cltd
sub
xor
lcall
dec
cmpl
fisubrl
inc
and
imul
popa
sahf
shrb
dec
pop
dec
inc
aaa
cmpsl
xor
sti
ret
inc
fstps
xor
ds
or
adc
mov
addr16
rorb
jns,pn
jl
aam
cmc
xlat
xor
shll
or
filds
mov
mov
sbb
dec
ret
fisubl
cmc
xor
and
aaa
adc
xchg
sbb
leave
and
sahf
jae
popa
cmp
pop
leave
notl
adc
lods
daa
push
nop
mov
xchg
imul
popa
or
push
jnp
add
in
pop
xor
js
movsl
xor
std
divb
mov
push
push
aad
inc
jnp
mov
ret
jp
sbb
faddl
insb
cwtl
pop
mov
dec
inc
sahf
out
insb
jmp
xchg
ret
mov
dec
repz
nop
ret
popf
mov
ds
fnstsw
xorb
icebp
or
dec
aam
fnsave
andb
jbe
xchg
cwtl
subb
rorl
popa
adc
fdiv
pop
sub
pusha
js
fidivs
nop
movsl
lcall
into
xchg
int
jnp
sbb
jmp
sub
lea
mov
in
shl
popa
repnz
xchg
insl
jl
fsubrl
cmpsl
jo
sbb
mov
sub
stc
pop
mov
daa
test
pop
testl
out
xchg
pop
rcll
insl
push
hlt
mov
inc
xor
mov
imul
and
xchg
outsl
inc
rcrb
adc
cwtl
mov
or
cli
cmp
test
hlt
xchg
ss
dec
push
ss
jo
xlat
jae
cmpb
lcall
cld
movsb
mov
std
nop
or
and
mov
cmp
add
pop
xchg
xchg
adc
push
rolb
sub
cwtl
jns
push
mov
adc
inc
cli
jns
pop
mov
repnz
add
test
or
das
stos
mov
xor
xor
mov
pop
leave
nop
fildl
adc
xchg
xor
cwtl
movsl
mov
lahf
lcall
inc
xchg
aad
xchg
emms
fcmovnb
mov
jge
lret
jnp
or
cmp
icebp
or
cmpsl
dec
and
fiaddl
and
mov
aas
inc
ficomps
and
movzwl
sets
stos
andb
sub
sbb
in
rcll
fcmovu
in
mov
mov
pop
movsb
inc
fisttpl
iret
iret
push
ja
push
inc
push
sbb
clc
push
mov
pop
lcall
push
jg
sbb
cmp
int3
pop
lahf
notb
jbe
fwait
loope
lds
push
add
scas
movsb
insb
out
mov
and
fiadds
sub
xchg
loope
cmpsb
xchg
jb
mov
in
jbe
imul
xor
and
sub
outsb
ljmp
das
out
jb
loopne
cli
jns
lcall
stos
loopne
add
push
mov
inc
jmp
jge
sbb
inc
fs
xchg
pop
xor
shlb
xor
jns
jno
sub
leave
and
sti
inc
inc
stc
int
push
jb
push
dec
mov
fisubrs
pop
mov
jno
sbb
pop
into
inc
cld
or
pop
mov
inc
andl
xchg
xor
lea
mov
cmpsl
mov
imul
push
push
mov
dec
jo
pop
sahf
lods
push
test
xor
fldl
sub
mov
push
inc
arpl
jne
fiaddl
shll
icebp
inc
popa
inc
cmpsb
insb
mov
mov
add
push
out
dec
gs
imul
pop
and
jmp
mov
pop
push
dec
mov
loope
xorl
push
cmp
lcall
mov
xchg
jp
jnp
test
ljmp
test
lods
xchg
testl
out
lret
sbb
xlat
pop
adc
daa
jnp
add
scas
push
or
and
loop
int3
mov
cwtl
lds
sub
dec
stc
idivb
xlat
jns
lea
cmp
das
push
cmpsl
js
iret
lds
sub
mov
je
pop
les
das
sbb
push
sbb
popf
xor
lret
xchg
mov
test
imul
dec
fwait
inc
mov
jo
pop
cmp
sub
ljmp
add
das
inc
adc
mov
or
loopne
pop
mov
cmpsl
hlt
dec
iret
add
lret
stos
mov
adc
cltd
mov
adc
adc
shlb
adc
adcb
daa
test
rcrl
into
xor
fadd
rcl
repz
cld
push
sbb
mov
test
andb
mov
jg
pushf
gs
ljmp
pop
outsb
jle
jg
inc
cli
das
jmp
popf
nop
adc
shrb
pop
lock
out
push
jge
test
mov
aas
cld
imul
out
mov
dec
add
sub
outsl
cmpsb
add
pop
inc
push
lret
imul
stos
inc
cmc
loopne
mov
jno
push
and
mov
cmp
mov
mov
cmp
or
jb
push
pop
push
mov
test
mov
cwtl
push
call
inc
data16
outsl
pop
add
xchg
dec
dec
mov
add
mov
ret
pusha
dec
mov
cld
scas
scas
mov
xor
les
mov
in
pop
jge
adc
dec
fsubrl
outsb
mov
sub
loop
push
adc
loopne
aam
cs
sbbl
or
mov
add
add
in
xor
jo
cmp
pop
nop
mov
daa
push
xchg
int
es
jecxz
inc
lahf
jg
imul
cmp
out
inc
scas
cmpsl
and
sbb
mov
pop
lahf
das
loop
lcall
mov
stc
ficoms
cmpsl
mov
mov
mov
push
data16
cwtl
pop
pop
rorl
mov
pop
orl
fmulp
popf
mov
fistpl
ret
stc
jge
decl
push
jmp
lcall
dec
insb
cmpl
jo
test
dec
jbe
pop
mov
fwait
add
sahf
insl
inc
stos
pusha
in
in
or
mov
fimull
pop
movsl
arpl
stc
and
insl
mov
lds
xor
notb
push
dec
pop
lahf
and
push
jne
loop
mov
test
sbb
xor
xchg
data16
mov
jg
fcomps
mov
xchg
mov
cmpsl
cmp
xchg
xchg
rcrb
rcrb
aaa
stos
scas
mov
rclb
loopne
dec
mov
pop
ljmp
leave
pmaxub
cmp
mov
gs
loope
jns
clc
je
cmp
dec
out
jmp
mov
sarb
jns
lds
xchg
addr16
cmc
dec
pusha
xor
mov
adcl
repz
and
out
lock
movsl
ljmp
aaa
dec
mov
nop
jnp
cmpsb
clc
push
push
cmp
inc
aaa
push
xor
icebp
pop
jecxz
in
bound
leave
xor
lret
enter
mov
mov
out
sub
mov
or
mov
mov
std
adc
sub
aad
lods
jle
mov
pop
out
jbe
xor
in
xor
jmp
in
dec
cmpsl
test
sbb
jle
jl
movsb
aas
cmp
jl
cltd
out
xchg
enter
pop
adc
sbb
jo
jnp
cmpb
lods
mov
mov
mov
popa
xor
aas
out
loop
andl
jge
dec
mov
push
call
insb
jnp
jmp
push
xchg
int3
pop
or
pushf
leave
push
pop
imul
cmpsl
pop
int3
repz
dec
mov
in
push
or
cmpsl
push
call
mov
mov
mov
adc
into
jo
idivl
cs
pop
test
shll
cld
or
subl
cmp
fsubrs
sti
ja
test
pop
push
out
or
adc
das
lods
lahf
push
cmp
or
push
adc
sarl
mov
rolb
or
mov
or
cltd
repnz
movsb
test
xchg
xlat
int3
rcll
pop
pop
popf
mov
jecxz
or
cmp
jo
outsl
je
push
sub
xor
jbe
push
cli
test
pusha
xchg
sbb
ret
pop
adc
add
push
js
fs
xor
mov
push
jnp
xor
push
daa
pop
movsl
mov
mov
dec
enter
push
xor
pop
roll
lret
jns
mov
repnz
cmpsl
pop
push
popf
jbe
add
movsb
xor
cmc
lret
or
dec
add
and
ja
je
sbb
lods
and
cmp
mov
pop
dec
and
mov
dec
mov
push
or
lea
pop
sti
jp
test
mov
ljmp
prefetcht2
inc
cmp
loope
jo
imul
push
subl
dec
jb
cmc
cmp
rcll
jne
or
cltd
frstor
cmp
mov
and
clc
push
jmp
repz
and
cmp
mov
mov
jge
cmp
cs
rorb
movsl
sbb
xor
lea
push
cmp
mov
push
sarb
rorb
xchg
daa
jae
adc
xchg
pop
push
dec
shl
je
push
gs
mov
clc
lds
push
jb
xchg
into
pop
cmp
cmp
cmc
movsb
aam
adc
out
xor
dec
adc
xchg
fsubl
sbbl
outsl
lahf
filds
mov
fnstsw
andb
adc
or
mov
sbb
sub
movsb
xchg
or
fisubrs
hlt
mov
fs
out
sbb
xor
loop
scas
scas
xchg
and
sbb
adc
fwait
outsb
sahf
push
out
daa
adc
pop
push
fs
ret
divl
sub
clc
mov
jbe
adc
das
and
xchg
xchg
pop
xchg
fwait
movsl
outsl
xor
mov
fadd
jecxz
subb
scas
dec
push
cld
xchg
inc
xlat
or
enter
xchg
xchg
mov
inc
jnp
movsb
rclb
xchg
push
cmc
mov
testl
lahf
adc
and
test
or
pushf
xor
arpl
je
mov
xor
xchg
std
jmp
in
sarl
mov
movsl
cwtl
dec
stos
loopne
jns
xchg
leave
pop
pop
push
push
mov
mov
xchg
in
loope
jo
insl
cmpsb
mov
dec
gs
jmp
subl
cmpsb
lods
adc
imul
and
mov
fisttps
lahf
push
pusha
loop
nop
lahf
sbb
lds
rcrb
add
imul
adc
sub
movsb
dec
fwait
pop
add
nop
pop
inc
jle
imul
jmp
and
cwtl
scas
fmuls
mov
push
loope
and
sahf
cs
shl
insl
stos
out
outsl
ja
enter
sarb
mov
mov
xor
xor
cmp
push
sub
lret
call
cmpsb
sbb
rorl
ffree
mov
xor
outsl
jmp
aas
movsb
sub
xchg
add
xchg
jmp
leave
stos
push
or
test
dec
iret
scas
xlat
dec
cmpsb
adc
push
orps
push
cmp
adc
xor
xor
loope
icebp
pop
ja
lea
sti
adc
jb
or
je
pop
mov
fsubrl
js
sbb
inc
mov
mov
add
lret
and
fsubl
movsl
mov
imul
mov
insl
push
cmp
sbb
movb
and
cli
sub
rcrb
lcall
imul
mov
pop
ror
or
rol
fwait
or
add
ret
or
sbb
out
out
sbb
scas
rclb
stc
push
rorl
ret
je
add
xchg
mov
pop
dec
pop
decl
pop
push
lcall
mov
push
sub
pop
cs
frstor
xor
mov
push
jo
push
or
xor
lds
dec
lret
dec
xchg
rol
lock
jnp
push
jnp
inc
xor
xlat
xchg
mov
add
outsb
jns
rclb
cmp
leave
adc
sub
nop
mov
jae
sti
and
and
lock
jbe
dec
inc
jbe
fisttpl
inc
and
mov
pop
into
sub
adc
pop
pushf
sti
adc
mov
pop
test
movsl
gs
call
mov
push
or
lods
loop
test
movsb
sub
cwtl
fnsave
mov
adc
lahf
push
dec
aas
fwait
adc
int
icebp
and
mov
push
jbe
xchg
or
add
test
subb
sub
nop
ret
clc
fidivrs
aam
mov
in
stc
loopne
jnp
flds
test
sub
cmp
aam
out
enter
jle
push
xchg
clc
sbb
or
int
inc
pop
lahf
fcompl
in
lods
pop
subb
je
xchg
sarb
scas
shrl
xor
std
jne
adcl
stos
xchg
cmp
aas
push
jg
mov
adc
and
ds
or
sbb
fsubl
test
ss
test
sub
fwait
ljmp
fprem1
pop
aam
adc
fwait
xchg
lret
into
inc
nop
fildl
es
dec
mov
pop
movsl
dec
xor
push
in
jl
cltd
pop
push
xchg
dec
mov
lcall
test
rcl
and
call
pop
daa
and
mov
add
andl
and
jo
cwtl
sub
or
test
sbb
rcr
js
addr16
and
adc
es
dec
pop
dec
stos
jbe
pop
sub
adc
insb
and
arpl
cmpsl
push
ret
mov
es
inc
mov
pusha
pusha
push
sub
cmp
or
iret
cmp
add
and
sub
adc
xchg
dec
pop
add
mov
rclb
mov
push
jg
iret
dec
aaa
test
adc
xchg
mov
lret
test
xor
js
and
mov
or
insl
icebp
loopne
jl
lds
mov
inc
icebp
lods
mov
mov
xor
mov
push
mov
dec
mov
xor
out
ss
cli
stos
inc
jb
add
add
aam
cwtl
add
mov
cmp
mov
dec
in
or
das
adc
sbb
pop
jmp
or
insb
push
sub
mov
or
cwtl
aaa
push
pop
daa
loop
mov
jb
lea
bound
aad
fstpl
sub
scas
sbb
insl
fadd
fwait
xor
cmp
lret
xchg
mov
ljmp
and
lahf
or
loope
or
pop
movsb
fwait
xchg
cmp
pop
xchg
lret
loopne
or
mov
jmp
xchg
out
add
dec
lea
cli
fxch
sti
popl
xor
dec
sbb
icebp
fidivrl
in
xchg
cmpb
fwait
pause
cmc
jecxz
testl
jno
mov
std
ljmp
ja
call
jnp
popf
fisttpll
and
icebp
jmp
inc
insl
lahf
cs
repz
das
adc
sbb
lods
cltd
sub
fistpl
add
jae
cmc
push
and
loopne
pusha
push
sub
popa
pop
inc
dec
sahf
lea
cmc
jno
cmpsl
fisubrl
js
pop
add
ss
cwtl
call
scas
loope
pop
push
aam
loop
xchg
mov
scas
stos
test
push
mov
leave
sub
icebp
xor
stos
nop
adc
mov
movsb
sbb
and
pop
fs
jg
adc
lcall
push
mov
les
sbb
xchg
dec
xlat
mov
bound
js
test
icebp
mov
test
ss
sub
and
rcr
jg
aam
dec
and
mov
les
aam
repz
and
xchg
cmp
xorl
cld
pushf
add
nop
movsb
dec
leave
jmp
sbb
inc
cs
je
sti
inc
jmp
xor
insb
add
add
sub
mov
and
mov
cmc
cmp
pop
push
or
push
sub
daa
fwait
sub
adc
pusha
mov
movsb
cmp
cmp
je
int
subl
clc
pop
xor
and
orb
cmp
cmp
and
pushf
test
das
les
mov
and
cmc
std
stos
xor
ja
cltd
or
mov
mov
mov
rclb
cmpsb
mov
add
popa
imull
fcomps
roll
pop
mov
ret
test
out
mov
adc
push
sub
xchg
daa
lods
pop
aam
push
imul
push
pop
movsb
or
fsts
rol
adc
pop
jb
jns
push
mov
dec
inc
and
out
cmp
cmp
add
shrb
and
push
std
xchg
adc
jl
das
sbb
es
dec
pop
loope
push
js
xchg
xorb
pop
andb
shll
cmp
ret
sti
repz
inc
add
xchg
lcall
test
jl
pop
popa
add
movsl
sub
jne
rep
iret
xlat
enter
in
pop
fsubl
xor
and
inc
mov
nop
xlat
cmp
mov
xchg
movb
sub
jg
in
insb
jnp
outsl
xchg
or
sbb
std
xor
sub
ds
lret
pop
sbb
call
pop
out
ja
pusha
mov
push
por
subb
fisubrs
sub
call
add
ud2
jg
fidivl
xchg
xchg
mov
pop
add
ret
cmpsl
lock
cmc
and
jb
push
xor
and
out
push
mov
ret
mov
test
test
mov
sub
sub
fwait
xchg
push
aam
jmp
lret
stos
inc
in
mov
imul
outsl
sbbb
cmpb
dec
xchg
insb
xlat
je
pushf
fs
lcall
cli
cmp
lret
cmp
sbb
mov
aam
in
cmp
mov
jmp
sub
leave
pop
or
mov
xchg
cmp
clc
clc
mov
jp
loope
out
xor
iret
mov
enter
jns
lods
mov
mov
nop
cmc
jg
add
test
cmpsl
lret
sbb
xchg
add
pop
imul
divl
shrl
fldl
inc
dec
jne
into
adc
push
mov
mov
sub
scas
mov
cs
cmp
mov
pushf
pop
popa
inc
inc
cli
jg
push
mov
push
lea
lods
sub
imul
lcall
das
mov
cmp
inc
repz
cmc
fwait
jmp
push
lock
lock
sahf
sbb
push
js
leave
dec
adc
mov
popa
pop
popf
dec
pop
fmuls
push
lcall
cmp
es
lods
xchg
jle
sti
pushf
sub
or
inc
dec
push
enter
jge
sbb
jne
mov
pusha
gs
pop
out
arpl
ret
mov
test
js
sahf
pop
subl
out
adc
fstps
cmpsl
push
iret
or
sub
push
inc
ja
lods
in
cmp
imul
xor
and
jge
cli
xchg
mov
insb
inc
push
xchg
out
cli
jp
dec
and
mov
je
sbb
int
fnstsw
jge
cmpsl
or
xchg
inc
jecxz
or
pop
adc
sbb
xchg
and
xchg
xchg
daa
into
stos
xor
or
mov
pop
mov
mov
jo
jne
inc
add
aaa
into
aam
dec
xlat
in
aas
clc
clc
test
xor
out
add
rclb
fstps
lods
sahf
cs
xor
fildll
in
lahf
outsb
xor
push
movsl
adc
insl
dec
mov
shl
in
dec
cwtl
mov
push
cmp
mov
lock
or
imul
xor
xchg
movsb
jge
and
jae
pop
mov
out
lret
sub
mov
dec
jle
call
push
inc
cs
je
shll
mov
dec
aam
pop
or
sub
xchg
iret
adc
push
or
push
mov
cmp
jp
pusha
push
mov
sbbb
pop
frstor
pop
scas
lds
push
pop
cld
add
jl
and
testl
push
adc
rcll
ret
adc
pop
scas
arpl
pushf
loope
xlat
jae
mov
and
sub
push
repz
into
dec
outsl
aam
fsubrp
pop
hlt
out
out
sub
repz
push
mov
leave
mov
pop
or
inc
in
inc
in
adc
imul
ds
in
in
and
mov
lret
sub
les
fs
push
in
mov
mov
rolb
mov
faddl
dec
adc
mov
aad
into
jno
jmp
lods
fadd
inc
xor
fadds
mov
imul
js
xchg
ss
int3
fnstcw
daa
lret
or
mov
adc
mov
sub
adc
jmp
fimuls
cwtl
pop
lods
div
test
mov
lcall
and
cmpsb
bound
rolb
ret
dec
daa
andb
push
je
cs
jl
adc
notl
int
outsb
flds
push
and
leave
aaa
add
fcmovu
add
dec
ss
shll
jbe
mov
sub
push
inc
lahf
test
stc
lret
sbbl
mov
mulb
mov
add
std
cmp
mov
and
das
add
fwait
movb
pop
lock
xchg
lods
xor
jmp
mov
and
arpl
jae
dec
push
and
movsb
jmp
pop
push
mov
and
mov
cmp
mov
sub
daa
dec
mov
adc
adc
arpl
add
dec
aad
push
mov
idiv
mov
add
mov
fwait
imul
jns
mov
mov
jns
or
mov
jp
mov
movsb
test
in
jb
loop
call
fs
pop
sbb
jle
daa
jnp
push
cs
lds
std
xchg
mov
std
inc
in
sbb
aad
sub
movsl
leave
popa
fidivrs
sub
inc
data16
cmp
mov
inc
in
stc
push
icebp
and
add
daa
mov
pop
adc
mov
andb
in
lock
push
jp
int3
cmp
sarb
loope
pop
xchg
enter
push
add
movsb
das
xor
fs
mov
outsl
xchg
and
das
pop
inc
subl
adc
mov
das
mov
jbe
jno
lods
push
cmp
ljmp
inc
ds
pop
jecxz
cltd
fiadds
push
mov
fldcw
sbb
and
mov
sti
inc
das
lds
mov
pop
mov
jecxz
lret
or
les
inc
jb
lahf
xchg
aaa
xchg
ja
ret
adc
push
cmpl
jmp
in
push
mov
jbe
out
push
xchg
and
jne
decl
add
inc
aam
adc
int
enter
scas
push
sub
je
hlt
cwtl
jno
mov
lret
pop
data16
insl
test
inc
frstor
and
push
fistps
and
jl
leave
outsl
outsl
jbe
mov
ret
xchg
push
shlb
push
push
push
adc
and
test
js
mov
cmp
mov
nop
cwtl
lock
push
mov
xlat
sub
aas
repz
dec
hlt
jnp
jmp
pusha
dec
call
aam
push
bound
lcall
cmp
enter
loope
adc
andl
mov
jnp
push
dec
cs
jecxz
sbb
daa
inc
add
pushf
mov
pop
add
outsl
arpl
pop
scas
lds
inc
push
add
adc
pop
mov
lahf
scas
mov
mov
mov
or
sub
jb
cltd
cmp
cwtl
lods
mov
pop
pop
or
inc
inc
cmp
push
mov
add
fistpl
fldenv
cmpsb
stos
push
fbld
loope
jg
cmpxchg
popa
push
jmp
pop
push
clc
xor
inc
loop
cld
gs
jmp
das
push
mov
sbb
pop
sbb
call
mov
cmp
cmp
pop
push
insb
cs
and
or
jne
mov
es
cmp
push
dec
loopne
pushf
push
pop
loopne
adc
sbb
ss
push
or
fcmovnb
lahf
sbb
and
adc
mov
pop
jns
sahf
ds
inc
inc
mov
add
push
jecxz
mov
rolb
or
xchg
mull
out
mov
ljmp
sbb
cmc
sub
cmp
lcall
filds
add
loop
sbb
je
mov
movsb
pushw
lahf
fwait
mov
add
mov
push
and
cmpl
fisubrl
jbe
rcll
mov
pop
insb
pop
xchg
jo
scas
jns
cmp
test
addr16
int3
mov
lcall
ds
inc
stc
and
fidivrs
jns
dec
cmp
jne
call
inc
loope
mov
movl
fcmovbe
xchg
popf
daa
mov
mov
add
pop
in
dec
sbb
fiadds
xchg
xchg
xlat
cmp
fidivrs
cmp
out
lods
pop
push
das
jle
dec
cmp
icebp
daa
hlt
jo
cmp
xor
sub
es
icebp
cmp
leave
test
sub
sahf
call
xor
mov
jno
add
xchg
jp
int
sbb
shrb
js
inc
jle
imul
and
mov
sub
sbb
cmp
jl
out
xlat
aad
imul
xor
and
repz
ret
sbb
insl
cli
adc
pop
pop
insl
hlt
dec
pop
push
push
sbb
dec
xor
enter
idivb
dec
jmp
clc
out
add
sbb
xchg
sub
cmp
mov
fsubrs
push
jg
int
jmp
sub
dec
mov
pop
add
mov
adc
adc
dec
arpl
insl
test
xchg
inc
and
inc
jmp
dec
outsb
mov
jo,pn
push
push
sbb
sub
mov
outsl
xor
sub
ja
push
inc
jmp
push
xor
insb
dec
cmp
sub
andl
mov
fmul
mov
dec
jg
mov
jmp
xchg
loopne
mov
pushf
filds
mov
ja
shr
xor
jecxz
adc
stos
xor
jp
jg
sbb
mov
sbb
dec
loopne
cmpsl
insl
mov
fidivrs
mov
loope
mov
stc
xchg
jns
fldcw
and
rcrb
xchg
mov
decb
mov
scas
loope
mov
and
movsb
subl
sar
push
fisttpl
cmpsl
into
aad
fs
mov
sbb
bound
mov
arpl
mov
add
jg
fst
sarl
mov
push
repnz
mov
mov
jg
and
adcl
popf
sbb
push
loop
or
xchg
fistpl
xor
pop
sar
pop
mov
add
push
lods
mov
rcrb
in
xor
sub
inc
jl
or
ja
xchg
imul
jmp
sub
pop
cmp
mov
inc
xchg
js
testb
adc
cltd
out
mov
insl
sub
sub
mov
and
pusha
and
dec
dec
mov
and
ror
popa
mov
cmpsb
push
mov
sub
and
cwtl
pop
insb
add
sahf
in
and
bsf
dec
inc
xorb
adc
test
sub
adc
rclb
jp
mov
out
bound
xor
lods
je
andl
mov
cmp
or
sti
pop
or
and
popa
or
lret
dec
stc
outsb
int3
lcall
scas
jecxz
data16
jbe
rcrb
shr
mov
pop
push
loope
jae
jmp
mov
add
imul
clc
ds
jne
pop
or
xchg
sar
out
pop
sub
dec
pop
outsl
je
int3
jge
repz
pop
mov
nop
ret
mov
jnp
jae
dec
pop
pop
mov
inc
je
cwtl
adc
cltd
mov
and
in
hlt
ret
mov
sbb
out
fwait
cmpsb
imul
sbb
mov
mov
imul
pop
fdivr
bsf
cli
inc
addr16
pop
or
iret
orb
rcr
lods
testl
mov
jle
cwtl
loop
insl
xchg
jbe
push
loopne
or
aaa
dec
push
shrl
lock
mov
and
mov
sbb
sub
dec
xlat
test
lcall
dec
cld
mov
xchg
pop
sub
mov
pop
cmp
rorl
jmp
movsl
pusha
mov
and
out
ja
stos
cmc
or
into
addb
xor
pop
pushf
mov
js
jge
insb
jg
ret
adc
add
test
int3
cmp
in
cld
ficoml
lea
repz
sti
shrb
xchg
imul
nop
xor
mov
out
mov
loope
iret
insb
xor
leave
mov
loopne
rcl
xchg
data16
repnz
lea
xor
dec
call
and
mov
std
aad
add
push
add
add
and
ds
cli
jnp
movsb
jb
fsubrs
data16
int
add
dec
outsb
push
xchg
add
imul
push
mov
mov
stc
dec
mov
negl
xchg
and
add
lock
pushf
repz
mov
or
rclb
pusha
in
xchg
cmp
fdivr
sub
mov
adc
mov
imull
mov
test
xchg
arpl
push
in
dec
iret
add
and
jp
dec
aas
mov
movsl
mov
mov
shrb
and
dec
repz
jo
stos
xlat
push
add
shll
loop
push
mov
scas
jl
xor
pop
adc
mov
jg
dec
sbb
sub
push
je
sub
xorl
jae
xchg
lahf
jle
shl
push
lret
xchg
ss
and
bound
lret
shrb
out
in
ss
fs
in
cwtl
dec
push
inc
int3
pop
push
jg
adc
xor
jb
sub
sub
mov
test
stos
je
aaa
nop
cltd
cmp
call
nop
insb
into
mov
xlat
add
popa
pop
das
pop
push
add
xor
das
mov
mov
movsb
and
cld
sub
arpl
fiadds
cwtl
stos
sub
sarl
test
leave
mov
adc
and
dec
adc
mov
sti
sbb
stos
mov
fidivs
movsb
insb
icebp
xor
xchg
jbe
dec
loopne
mov
gs
aas
ficomps
movsl
sbb
fnstenv
mov
pop
push
mov
imul
pushf
dec
inc
pop
int
test
mov
jne
mov
jne
pop
mov
dec
enter
in
cmp
or
cs
rcrb
decb
cld
fstpt
adc
cmp
sub
aad
sub
nop
ret
xchg
enter
cwtl
in
xor
negb
push
arpl
mov
mulb
mov
ja
jne
outsb
sbb
mov
or
out
scas
loope
mov
dec
fs
rorl
xor
into
jno
mov
movsl
addr16
leave
stos
push
xchg
ds
cld
es
mov
sub
mov
mov
push
cltd
ret
cld
mov
movsb
dec
xlat
pop
out
dec
test
ljmp
dec
call
pop
jo
int3
dec
in
push
pop
pop
pop
pushf
shrl
sub
ret
jae
push
call
mov
scas
int
ret
int
cs
jmp
mov
jg
pop
inc
out
jb
lret
inc
std
inc
jne
out
jg
xor
jne
mov
sahf
xchg
ljmp
jmp
test
pop
jmp
add
insb
dec
aam
add
dec
sbb
imull
rcl
or
outsl
stos
push
sbb
sbb
testb
pushf
aad
jbe
fsubl
mov
fists
mov
xchg
mov
xchg
xor
lods
scas
lock
ja
in
addr16
nop
test
push
add
jecxz
or
jo
dec
scas
nop
leave
jbe
inc
dec
jge
mov
xchg
or
sub
cmp
js
stos
ljmp
jbe
add
cmp
jmp
faddp
call
dec
cmp
in
dec
and
fbstp
cmp
xchg
cmp
mov
jle
jbe
cs
cli
dec
push
pop
les
sub
xchg
push
lret
jg
add
movl
aad
mov
aam
cltd
mov
clc
xor
add
fldt
cmc
cmc
sahf
icebp
stos
lret
filds
inc
mov
loop
aas
stc
test
push
cmc
adc
pusha
lock
fcmovnu
mov
push
jo
shrl
dec
push
icebp
out
pop
rorl
test
dec
scas
or
mov
sub
xchg
fnstcw
cmp
hlt
xor
push
and
mov
sahf
mov
xchg
mov
push
mov
fidivs
inc
fmull
xor
in
mov
dec
xchg
daa
and
ss
cld
fs
cmp
mov
lods
mov
repz
xor
cli
xor
xchg
shll
fwait
sbb
jae
rolb
clc
xor
inc
and
inc
push
pop
inc
roll
inc
jo
inc
adc
roll
sub
sbb
xchg
loope
test
or
mov
call
shlb
mov
inc
imul
cmc
mov
mov
mov
pop
shr
jb
push
mov
cmp
sub
aas
sbb
pop
sbb
push
pop
out
inc
test
pop
rclb
xor
daa
dec
inc
gs
imul
jmp
xchg
inc
out
imul
adc
gs
mov
xor
sbb
jge
fldenv
mov
xor
or
es
stos
orl
sub
push
shlb
aaa
adc
push
sar
push
clc
jle
jne
mov
lds
je
dec
xor
mov
push
xor
push
loopne
jge
pop
loope
aas
sbb
aaa
mov
pop
mov
jg
xchg
hlt
shlb
loop
ds
mov
push
xlat
fwait
incl
mov
jmp
test
mov
stc
incb
dec
push
enter
lahf
adc
adc
xchg
sub
and
dec
bound
sbb
xchg
jbe
cmp
sbb
adc
bound
fistpll
adc
movsl
push
ljmp
cmp
imul
loope
mov
mov
xchg
add
adcl
sbb
lcall
movsl
ds
gs
dec
shlb
mov
jg
das
jmp
jle
js
test
mov
mov
mov
inc
mov
cwtl
or
xchg
call
mov
outsl
and
xchg
and
ret
test
pop
adc
cs
sub
add
sub
ljmp
jo
pushf
inc
pop
dec
out
push
jno
cmpsb
mov
xchg
js
fdivrs
pop
xchg
daa
lret
or
aas
cli
pop
lcall
ss
ret
lahf
gs
adc
mov
pushf
adc
dec
or
data16
rorb
sti
mov
pop
add
rolb
jmp
repz
aam
in
sti
icebp
cli
mov
repz
nop
pop
loop
add
adc
xor
lds
xlat
push
jle
movsl
push
mov
xchg
divl
rorb
jl
mov
ja
or
outsb
and
and
notl
ror
sbb
sub
sbb
fsubl
adc
loope
idivl
sbb
clc
and
ss
add
xchg
ljmp
mov
js
mov
addr16
lcall
lock
push
inc
push
int
ds
cli
mov
cli
or
fisubrl
and
mov
xlat
in
pop
icebp
pop
sub
aas
sbb
iret
subl
xor
rcrl
fxch
lret
mov
mov
xor
jo
insb
jae
xchg
sti
cmp
push
xchg
ljmp
sub
adc
dec
or
mov
fmul
adc
or
mov
xchg
sub
or
lret
test
dec
mov
ret
xor
push
fwait
int3
jle
and
stc
aam
lea
mov
cmc
std
pop
dec
imul
sub
inc
lods
cmc
into
or
xlat
lret
jmp
jle
leave
and
xchg
not
sbb
sbb
mov
in
pusha
mov
ss
xor
mov
fwait
push
mov
adc
dec
and
cmpsb
insb
mov
bound
ljmp
sub
repnz
inc
pop
ficompl
sbb
xlat
loopne
std
add
pop
hlt
subl
arpl
jno
jne
mov
jnp
or
jecxz
push
jns
lahf
loop
cmpsb
jbe
cmpsb
pop
mov
inc
in
xorb
jmp
aad
sub
test
mov
xchg
inc
xchg
push
fwait
sti
stc
jmp
dec
jno
jne
cmp
pop
cmp
mov
test
push
lahf
and
insb
add
sbb
push
xchg
ds
add
push
cmp
lcall
inc
imul
jle
cmp
ja
dec
in
data16
jg
lds
xchg
ds
hlt
sub
inc
stc
test
jne
adc
sbb
mov
rorl
nop
fs
clc
jge
sbb
xchg
mov
and
test
adc
sbb
scas
ja
cmc
ss
adc
sbb
xchg
and
inc
xchg
ljmp
gs
fisttpl
fbstp
adc
inc
addb
stos
mov
ret
arpl
add
add
dec
jmp
cli
lds
ljmp
cltd
int3
popf
push
dec
insl
pop
lahf
pop
inc
stos
rorl
pop
out
int3
je
add
xchg
mov
pop
adc
ljmp
mov
rcrb
add
adc
sarl
sub
enter
xchg
mov
je
adc
nop
xor
lods
loopne
enter
jl
xchg
push
pop
cmp
adc
mov
add
dec
adc
cmp
fwait
or
mov
push
mov
fsubp
iret
faddl
scas
mov
mov
sbb
jg
insb
movsb
dec
cmp
test
inc
ja
cmp
mov
je
sbb
ret
dec
jb
cmpsl
in
gs
jge
mov
outsb
ss
lock
inc
add
pop
inc
mov
enter
icebp
cmp
pop
mov
or
mov
sub
mov
rcrl
add
mov
push
mov
dec
sub
fs
xor
fs
mov
xlat
popf
mov
mov
cld
in
add
dec
fnstcw
dec
xor
int
cmpsl
sbb
aam
icebp
pop
sbb
xor
imul
dec
xlat
sub
cld
dec
ljmp
or
lods
gs
xchg
mov
pop
push
push
cmpsb
pop
sbb
stos
ljmp
gs
in
jle
fcompl
pop
fidivl
shll
stc
mov
inc
scas
xchg
adc
test
aam
ljmp
cmc
jns
sbb
lret
mov
loopne
lods
fwait
push
pusha
ret
cmp
and
mov
sarb
xor
jae
subb
xor
and
mov
neg
ja
outsb
psrld
addl
pop
jne
clc
push
jge
push
popa
adc
sub
mov
pop
push
mov
and
in
daa
jp
inc
pushf
sub
xchg
add
pop
arpl
xchg
leave
adc
adc
jg
pop
and
cmp
and
mov
xor
cmp
jae
dec
pop
pop
repnz
frstpm(287
movsl
pop
shl
mov
sti
or
add
xor
std
hlt
clc
xor
dec
dec
mov
mov
push
nop
lret
cmpl
outsb
mov
xor
fldt
sti
push
lret
es
test
gs
dec
dec
or
push
jle
cmpsb
jb
sub
sub
bound
pop
cli
dec
cli
xchg
sub
stc
out
in
push
ror
aaa
inc
ret
sbb
rcr
ja
push
fldcw
and
add
inc
sbb
cmpsb
pusha
test
dec
fidivl
sbb
loop
mov
jb
jg
outsb
test
and
testb
add
cltd
xchg
jg
movsl
mov
roll
pop
enter
or
ret
aam
pop
jae
js
lret
or
inc
imul
test
rol
adc
shlb
mov
pop
mov
xchg
dec
cmp
push
ljmp
push
adc
dec
xchg
loope
mov
mov
gs
cmp
jb
lods
mov
push
mov
fwait
and
inc
pop
in
rcll
pop
es
ljmp
cmp
pop
jno
or
and
lahf
jmp
sbb
stc
push
and
dec
fsub
in
and
xchg
dec
or
xchg
or
es
push
stos
cmp
push
pop
flds
mov
clc
cmp
mov
jle
adc
pop
in
mov
mov
cmp
sub
push
mov
mov
aas
mov
adc
sbb
das
mov
adc
fwait
pop
pop
push
xor
adc
testl
cmp
mov
adc
jbe
push
daa
je
test
jmp
ret
sahf
outsb
test
cld
mov
fcoml
iret
scas
push
cmpsl
mov
out
cmpsl
sbb
faddl
clc
adc
push
lods
dec
xor
fwait
test
pop
ljmp
mov
arpl
movsl
lods
pop
lahf
cmp
cmpsl
jo
movsl
repnz
mov
ficoms
jmp
xchg
xor
xor
cmp
pop
lahf
shr
pop
sub
je
mov
push
xchg
loopne
xlat
lods
dec
inc
mov
nop
sub
inc
inc
add
xor
loope
jp
roll
fldenv
adc
and
sbb
sbb
mov
mov
mov
pop
pop
aaa
nop
xchg
mov
scas
mov
mov
cmp
xchg
or
xchg
pop
mov
pop
outsb
jecxz
add
int3
in
jmp
out
push
loope
and
mov
add
mov
mov
xchg
test
xchg
mov
ficoml
inc
mov
jo
lahf
inc
pop
mov
sbb
out
stos
and
inc
adc
imul
push
bnd
mov
add
mov
adc
mov
dec
inc
ret
inc
cld
fldcw
jo
push
jo
mov
push
adc
inc
pop
add
inc
sbb
fidivl
xchg
aas
add
xor
imul
pop
mov
mov
jbe
inc
jb
cmp
sahf
in
jg
sub
nop
sbb
mov
data16
stos
pop
push
or
add
xchg
ljmp
mov
outsl
sub
sub
xchg
add
jge
aad
cli
sbb
and
jbe
xor
dec
add
mov
jl
mov
or
mov
call
xchg
clc
dec
cmp
dec
gs
dec
ja
loop
adc
adc
movb
push
dec
ror
lret
int
repnz
inc
movsl
inc
rclb
mov
adc
loop
push
cmpsl
dec
scas
je
sub
mov
sub
cltd
je
div
dec
jmp
and
jbe
jmp
or
dec
inc
dec
cmc
mov
mov
gs
cs
mov
mov
inc
mov
dec
lret
repz
push
mov
sub
mov
fmuls
inc
cmp
push
push
or
call
std
jb
add
xor
xchg
jns
jo
icebp
pop
inc
cltd
and
pop
mov
leave
out
fcomps
push
xor
dec
xchg
insl
xchg
hlt
fidivl
adc
aas
mov
pop
pop
aas
icebp
mov
cmpl
dec
dec
jl
in
pop
xchg
mov
stc
add
dec
fidivrs
hlt
mov
sahf
call
out
cmpsb
jl
and
in
inc
mov
add
iret
divl
add
ja
arpl
insl
fisubrl
mov
repnz
jmp
and
mov
pop
pop
inc
int
jae
movb
xchg
out
add
ljmp
ljmp
xchg
movsl
lret
iret
mov
push
into
xchg
adc
subl
cmp
fwait
hlt
or
jecxz
xor
jle
cld
repnz
aam
scas
mov
xor
movsl
xchg
shlb
inc
mov
es
imul
push
hlt
hlt
out
xchg
jg
mov
int
mov
outsb
add
addb
repz
jmp
sbb
cltd
je
or
mov
and
or
subb
jmp
int
lahf
sbb
aaa
shl
fidivl
sbb
jae
sub
lods
outsl
dec
movsl
add
cmc
mov
sti
cmp
add
dec
scas
aas
dec
mov
cmpsb
lret
add
sti
and
sbb
repnz
inc
dec
ljmp
pop
cmp
sbb
adc
sbb
cmp
push
dec
or
jecxz
mov
mov
cmp
aaa
mov
std
ja
int
pop
lahf
dec
inc
mov
sub
inc
adc
pop
and
jge
adc
sahf
xchg
push
xchg
xor
movsl
leave
inc
mov
sar
push
jo
arpl
sub
push
test
cmp
jmp
rolb
pop
das
sub
arpl
cld
sbb
adc
mov
stos
jmp
idivl
cmp
lcall
in
leave
push
cmp
js
push
push
insb
or
xchg
leave
xor
dec
jno
mov
aaa
pop
cmp
into
xchg
insb
icebp
dec
ficoml
inc
js
jg
mov
mov
and
inc
xor
iret
xchg
sub
clc
sub
and
lea
add
or
cmc
cs
fdivr
xorl
decl
fs
repz
daa
mov
inc
arpl
cmp
pop
sbb
add
pop
pop
outsb
stc
cmpsb
pop
fs
pop
cmc
vcvtps2pd
aas
daa
sub
adc
imul
adc
addr16
test
xor
mov
call
adc
xlat
lret
or
repnz
cld
movsl
decl
cwtl
and
cmpsl
fnsave
jle
lods
fildll
jl
push
xor
jmp
inc
out
and
lods
dec
push
cld
push
cli
aaa
insb
es
ret
push
stos
add
in
sarb
ret
push
shrb
xor
out
xchg
stc
sub
fadds
jo
xor
mov
pop
push
cmp
push
push
push
jl
ret
cmpsb
xor
mov
inc
cmp
xor
icebp
popw
add
mov
jg
mov
add
and
scas
inc
movsb
mov
gs
push
lods
inc
xor
sarl
sub
jg
cmp
in
sub
xchg
adc
lret
pop
fisttpl
stos
xchg
mov
out
xchg
xor
mov
mov
test
test
xor
dec
dec
inc
and
xchg
xchg
sub
xchg
rol
push
repnz
std
subb
push
xor
scas
jnp
jmp
push
or
rcr
pop
xchg
mov
imul
dec
push
ret
inc
lock
sub
or
out
jns
cs
add
iret
xchg
adc
push
push
cld
push
es
in
mov
test
jo
dec
mov
adc
popa
or
pop
push
mov
lods
std
mov
lahf
test
pop
lret
cltd
shl
sbb
xor
leave
xchg
mov
lahf
or
cmp
jg
js
popf
add
adc
or
test
clc
mov
xchg
sub
daa
cld
daa
mov
pop
dec
fwait
inc
mov
inc
insl
cmp
sarl
lea
bound
mov
xchg
or
inc
cmp
or
inc
clc
jp
push
lods
mov
inc
xor
mov
xor
lods
lcall
mov
cmp
sbb
mov
call
enter
shlb
mov
ret
mov
repz
pop
sahf
cmpsl
movsb
hlt
adc
popa
inc
mov
sbb
ret
mov
mov
sbb
adc
cmp
movb
xchg
leave
js
dec
and
dec
lods
sub
or
inc
aad
add
sbb
mov
or
ret
mov
mov
mov
popl
fwait
test
sub
pop
repz
mov
or
leave
nop
mov
xor
jne
addr16
sahf
gs
and
stos
cmp
test
sub
adcl
movsb
out
cmpb
xor
lock
ja
adc
test
int
std
scas
pusha
sarl
mov
bnd
sub
mov
mov
mov
dec
fmull
dec
out
pushf
xchg
cmpsl
xor
push
mov
repnz
xor
jge
imul
pop
pop
xchg
adc
fldcw
sbb
and
addl
pop
shr
in
cmp
add
mov
jbe
or
pop
and
cmp
leave
scas
popa
mov
xor
es
repz
loope
inc
xchg
sahf
xchg
xchg
dec
dec
fnstcw
adc
pop
cmp
lcall
dec
mov
icebp
jp
push
mov
jnp
in
push
or
push
jecxz
xlat
setl
dec
movsb
mov
loopne
mov
sub
and
into
arpl
pusha
jp
inc
mov
fdivrl
negb
and
or
fistpl
cltd
push
or
repz
mov
out
inc
cwtl
xor
fsubl
movb
lods
ss
add
cmp
and
in
ja
ljmp
fdiv
lock
cmp
lcall
rcll
jp
jle
jg
ds
gs
rol
out
sahf
movsl
mulb
sub
outsb
in
mov
out
adc
pop
sbb
mov
and
repz
int3
dec
xchg
push
mov
ret
pop
xor
mov
into
jge
mov
dec
scas
push
mov
data16
test
mov
and
jecxz
add
xor
fldenv
mov
ficomps
les
dec
popa
jle
mov
int3
aaa
and
push
sbb
sub
xchg
xchg
lcall
push
pop
iret
fs
push
mov
jl
sahf
mov
icebp
sbb
mov
test
ja
jo
jnp
inc
cwtl
shrl
and
add
cmp
nop
std
cwtl
jmp
cmp
pop
push
push
ljmp
mov
addr16
jl
js
cli
mov
add
mov
out
jge
mov
push
and
cmp
mov
pop
mov
mov
add
or
mov
cmp
or
pusha
insb
mov
cli
clc
adc
out
sbb
inc
ss
add
mov
push
call
hlt
imul
stos
int
fldln2
lahf
aam
and
xchg
pop
flds
sbb
int
ss
mov
or
or
adc
fstps
or
popa
icebp
or
mov
cwtl
rep
xchg
in
lods
xchg
insl
insb
mov
iret
xor
and
loop
shrl
dec
dec
inc
xchg
xchg
movsl
sub
and
adc
out
loopne
enter
hlt
push
sub
arpl
push
repnz
movsl
sbb
jo
adc
pop
jge
push
in
adc
bnd
cmp
mov
fsubs
cmpb
fnsave
insl
mov
clc
add
mov
stos
mov
jmp
mov
push
push
sbb
out
xor
push
cmc
inc
mov
lcallw
sbb
enter
fisttpl
mov
dec
lret
mov
sub
pop
in
mov
add
cmp
xor
or
fldenv
jns
jns
jge
scas
jno
cmc
iret
mov
push
loopne
fxch
xchg
aaa
leave
jnp
mov
lds
fwait
imul
lcall
inc
hlt
lock
push
fcoms
and
mov
popa
mov
fisttpll
cmpl
mov
aas
cmp
das
aam
jecxz
bnd
mov
lods
xchg
inc
out
lea
ja
jp
xor
insb
es
add
push
ljmp
pushf
xchg
test
popf
aas
fadds
fldcw
inc
push
sahf
cmp
xchg
dec
jecxz
adc
mov
fimuls
jp
xor
cmp
cmp
xlat
mov
dec
ds
dec
jae
mov
dec
xchg
icebp
pusha
ftst
pushf
ret
adc
dec
and
lahf
imul
or
or
leave
in
push
sar
xchg
sub
out
add
adc
out
or
dec
scas
add
test
mov
inc
and
dec
push
push
imul
xchg
sahf
std
and
push
aam
ret
outsl
jge
leave
or
sub
dec
jo
std
cmp
mov
xchg
aas
jge
cmpsl
in
sbb
nop
mov
pushf
test
and
jecxz
and
out
sti
push
test
adc
push
loop
fcompl
lea
call
addr16
call
jbe
dec
inc
jmp
nop
sbb
outsl
lahf
or
adc
nop
pop
and
cld
dec
dec
mov
pop
cmp
jg
mov
dec
pop
cltd
cwtl
shll
ss
in
ds
loope
imul
clc
stos
sub
inc
rcr
lret
cltd
scas
xchg
leave
loope
dec
pop
cmpsl
idivl
adc
sub
add
cmc
movsl
pushf
push
and
push
push
movsl
cmp
cmp
subl
es
adc
lcall
test
xchg
cmp
mov
lret
sbb
loope
cmp
and
cld
push
xor
repnz
ljmp
cli
stc
adc
cmp
addr16
sub
rcr
adc
and
fwait
mov
adc
xrelease
jno
out
add
sub
pop
cmp
ss
outsb
jp
add
mov
enter
into
inc
out
lret
in
pop
adc
add
mov
push
fwait
or
mov
pop
cli
aas
jecxz
fwait
dec
stc
jle
ret
cmp
mov
loope
push
adcl
lods
pushl
aad
testl
or
mov
test
or
sbb
fcompl
imul
loop
repz
push
arpl
scas
dec
arpl
lahf
in
push
ljmp
pop
mov
popa
nop
dec
add
mov
cmp
js
cs
or
and
lea
aad
inc
and
or
inc
pop
insl
mov
fadds
mov
repz
test
jns
mov
test
loope
lret
daa
xchg
shl
pop
cmpsl
xor
popf
lahf
or
cmp
push
fisubrl
mov
push
out
xchg
arpl
leave
inc
mov
in
dec
mov
pop
mov
out
loope
inc
adc
leave
jnp
or
cmpsb
subl
sbb
and
xor
das
negb
xor
std
cmp
dec
loopne
or
xchg
punpckldq
outsb
lods
inc
jp
std
lods
clc
or
icebp
and
xor
shl
inc
ds
out
adc
jae
xchg
fstpt
sbb
mov
or
fstpt
dec
ret
arpl
in
enter
add
test
pop
sarl
pop
jae
jns
sahf
nop
in
inc
loopne
xchg
gs
or
mov
jg
adc
sub
test
pop
popl
or
sti
pop
add
xchg
sbb
mov
jns
sub
pop
loope
and
inc
movsl
dec
xor
int
cwtl
movsb
push
lock
mov
add
movsl
arpl
dec
mov
xchg
decb
pop
mov
xchg
testl
inc
push
adc
out
les
jns
push
movsl
fisubl
dec
out
aas
jg
stos
popf
mov
adc
mov
lea
pop
inc
stos
pop
cmp
xorb
cmc
xchg
sbb
mov
movsb
int
adc
lea
push
pop
cmp
inc
jmp
xlat
test
dec
add
stc
sbb
fmull
fs
lret
gs
push
push
pop
clc
add
loopne
std
cwtl
call
sub
jl
das
mov
into
lcall
out
jge
push
add
push
in
jns
cld
adc
rol
enter
mov
rol
jb
mov
in
jb
mov
mov
cwtl
cmpsb
into
ljmp
dec
adc
and
pop
int
push
push
cli
aaa
pusha
out
mov
jo
xchg
inc
sub
sub
jo
mov
ficoml
push
out
nop
push
jl
int3
jecxz
fstl
push
sbb
xchg
xchg
cmpsl
jo
loopne
das
add
pushf
inc
int3
sub
add
pcmpeqb
jno
pop
aam
xchg
rolb
nop
enter
pop
cmp
cmp
sub
and
popf
pop
sbb
into
out
jo
mov
je
jno
sbb
mov
andl
pop
xor
aaa
inc
xor
lret
fistpll
jo
dec
jbe
scas
enter
ja
and
div
mov
xor
mov
inc
or
mov
gs
outsl
test
test
dec
lods
push
rclb
stc
arpl
push
lahf
nop
pop
mov
pop
lea
inc
inc
pusha
in
or
jle
push
es
adc
ret
in
cmp
sbb
dec
xchg
xchg
ss
aas
adc
cmpsb
mov
ds
and
pop
push
mov
icebp
cld
cmp
fdivs
ror
in
and
test
into
jg
mov
mov
into
popa
lcall
jns
sbbb
sbb
adc
fwait
jmp
pop
pop
into
test
sbb
dec
mov
ficoms
in
lcall
stos
ret
cs
jnp
push
testl
test
mov
out
popf
aas
sbb
ret
scas
or
xchg
adcb
fidivrs
cmovb
ret
sbb
cs
cli
movsb
and
inc
lock
dec
out
push
mov
push
dec
dec
cmp
jecxz
mov
push
je
inc
addr16
and
cmc
add
out
jecxz
jae
xchg
jns
push
stos
and
push
xchg
and
adc
jl
test
jne
sub
or
cmc
pop
push
jbe
push
cmpsb
mov
sub
pop
jo
or
in
js
add
xchg
lods
sub
fcoms
cmovp
bnd
adc
test
and
pop
test
cwtl
mov
push
xor
sbb
mov
jecxz
or
test
imul
imulb
in
or
mov
ds
pop
jl
cmc
push
lods
test
mov
lods
push
gs
inc
dec
mov
cmp
ds
cmpsb
mov
cs
mov
gs
shll
and
xchg
in
mov
push
jbe
inc
push
mov
mov
or
pop
imul
cld
push
pushf
cmp
shl
repz
nop
sbb
idiv
stos
push
pop
push
test
sbb
push
inc
fdivrl
stos
scas
hlt
mov
fildl
cmp
inc
out
rorb
jno
and
jnp
sbb
cmpb
xor
lret
sub
sbb
push
adc
cmp
stos
push
fnstsw
cmp
lds
call
lock
xor
leave
daa
movsl
ljmp
pop
mov
adc
pushf
inc
movsb
xchg
out
les
icebp
movsl
xchg
xchg
mov
push
adc
sbb
xchg
adc
imul
cmpsb
push
cmp
popa
jle
lcall
cli
lds
pop
add
scas
pop
lods
add
popa
repnz
int3
inc
dec
mov
loopne
adc
mov
xlat
scas
cmpsb
loop
loopne
stos
clc
adc
daa
aad
and
subl
xor
inc
test
aad
orb
push
lods
sub
dec
gs
add
aaa
xor
cmpsl
jns
lea
lahf
sarb
cld
add
add
outsl
mov
add
lods
pop
aas
xchg
addr16
mov
ds
and
incb
push
xor
incb
cmp
jae
dec
stos
xchg
pop
pop
cmp
and
cmp
and
shlb
adc
push
lahf
and
shlb
jle
out
call
lds
sbb
icebp
mov
iret
test
filds
jnp
gs
lds
dec
pop
inc
test
mov
xor
mov
ja
mov
cmp
shl
pop
icebp
mov
popa
lahf
pop
fadds
cmpsl
mov
mov
test
dec
mov
ret
or
xor
aad
adc
fidivs
and
mov
xchg
pop
pop
movsb
outsl
dec
loope
insb
cmp
insb
pusha
bound
jns
imul
adc
or
sub
jo
leave
sub
roll
clc
xor
adc
dec
leave
lret
jg
scas
or
mov
andb
or
nop
mov
cltd
adc
xor
orl
xchg
and
mov
fmull
fnstenv
jmp
xchg
inc
in
push
inc
movsl
and
adcl
jg
xor
cld
cwtl
sbb
sub
jnp
sar
mov
and
mov
andb
cmpsl
daa
push
jp
inc
jnp
je
stos
xchg
adcl
mov
xor
jno
mov
or
repnz
push
xchg
xchg
mov
sub
mov
cmp
jne
and
push
cmp
dec
pop
mov
inc
out
sarl
or
mov
call
out
dec
push
pop
cli
add
scas
arpl
jg
testb
dec
ja
xchg
jno
lret
cmp
mov
or
push
and
cmpsb
icebp
arpl
jmp
push
cmpsl
iret
ljmp
fisttpll
mov
mov
xor
shrb
sar
out
sub
arpl
mov
add
ljmp
aaa
or
fnstsw
loop
mov
dec
mov
addr16
imul
movsb
in
popf
hlt
rorl
lds
mov
pop
adc
test
add
out
cs
les
adc
inc
xorl
popf
or
hlt
ss
add
pop
mov
pop
sbb
adc
mov
jmp
mov
js
xor
divb
xchg
lahf
sahf
mov
ss
xchg
popa
leave
and
lret
sub
and
ret
jg
lds
mov
loopew
movsl
enter
enter
lahf
sbbb
mov
cmp
lods
adc
add
aaa
dec
dec
popf
inc
push
scas
lea
ret
push
mov
inc
mov
movsb
incb
dec
testl
mov
and
rclb
lea
int
and
int
push
call
mov
pusha
pop
cmp
gs
imul
fwait
jb
out
inc
cltd
xor
and
mov
pop
outsl
pop
pop
mov
inc
mov
andl
loope
dec
xchg
xor
decb
into
loop
gs
call
jl
ret
mov
dec
test
or
gs
mov
xchg
cmc
insb
mov
cmp
xchg
sub
cmp
cmp
add
jle
leave
cld
outsl
stc
xchg
mov
sbb
int
test
mov
outsb
out
inc
pop
xor
xchg
inc
scas
in
jns
cmp
test
add
mov
xchg
aaa
dec
test
popa
pop
jmp
inc
inc
and
jecxz
test
shll
loop
adc
fsubrs
iret
cmp
ss
loop
push
cwtl
or
in
jno
xor
arpl
int3
das
into
jg
orb
arpl
inc
xor
dec
jbe
test
lret
jns
fstp
push
xchg
adc
sbb
mov
test
cmpsl
out
lods
xchg
and
fldcw
push
das
shlb
pop
mov
js
cmp
jns
enter
nop
decl
icebp
movsl
int3
adc
inc
push
aam
xor
and
lahf
or
mov
mov
or
out
xchg
xchg
ja
shrl
inc
lods
pop
add
jns
add
dec
jl
push
cmp
out
fimuls
mov
daa
sahf
out
sbb
fdivs
xor
ja
movsb
je
adc
push
or
jp
fisttpl
push
fsubp
fs
inc
dec
loop
insl
cmp
popa
insl
jl
lret
push
cli
push
push
push
pop
jmp
mov
out
inc
sub
shlb
adc
lods
lock
sub
jmp
int3
es
xlat
lahf
je
jle
and
add
jbe
lods
fsubr
shl
mov
stos
ret
xchg
push
sti
lret
xlat
jg
imul
mov
push
push
pop
mov
lea
jae
xchg
xchg
fisubrl
je
shl
mov
xchg
jl
mov
or
cmp
or
adcl
jl
mov
and
mov
sar
cmpsb
ret
mov
fidivl
arpl
mov
adc
push
mov
mov
popf
cmpl
sbb
mov
push
or
xchg
fadds
sbb
ret
mov
in
rcrb
mov
xor
loope
sub
lea
popa
clc
test
xchg
xchg
aam
cmp
in
fwait
cmc
jae
add
push
cs
movsb
jle
fisubrl
das
xchg
cmp
scas
xor
imul
mov
popf
push
cmp
pop
insl
daa
mov
scas
xchg
ret
idivb
sub
cmp
ss
push
xchg
add
sbb
shlb
in
rorb
shl
lahf
dec
test
push
dec
js
pop
cmp
pop
cli
mov
push
push
leave
mov
jb
pop
xchg
aad
jmp
imul
mov
repz
or
and
lcall
mov
sbb
cmp
data16
inc
xchg
or
in
repz
sub
inc
inc
push
jno
mov
jecxz
or
es
xchg
xchg
pop
push
in
dec
shll
adcl
add
sbb
daa
je
loop
xchg
mov
xchg
fiaddl
flds
std
movsb
es
jns
sub
mov
mov
mov
jo
imul
cwtl
cmpsb
xor
in
loope
out
loope
pop
push
mov
scas
jo
push
fcmovb
and
cwtl
adc
jbe
aaa
mov
sub
and
push
nop
jl
dec
pop
jnp
nop
push
out
xchg
xchg
test
roll
jg
repnz
in
xorl
lahf
adc
adc
stos
popa
sti
fistpl
test
jns
cwtl
jne
cmp
push
sub
scas
xchg
push
addr16
xchg
dec
mov
mov
sub
cmc
or
push
hlt
inc
stos
fs
mov
testl
outsb
movsb
fidivs
fidivrs
test
int3
ss
mov
cmp
add
push
nop
shll
adc
adc
out
mov
int
fsubrs
mov
mov
push
aam
jae
insl
dec
inc
pop
xor
filds
pop
mov
mov
outsb
cmc
ds
mov
jp
pop
push
add
mov
dec
pusha
out
lods
inc
cli
or
push
fidivrs
push
mov
icebp
cmp
mov
push
jo
iret
lcall
fwait
jg
add
sub
jmp
jle,pt
sti
into
mov
lock
add
in
sub
push
fsubl
pop
pop
gs
scas
xchg
cld
out
ljmp
mov
cmpb
mov
xchg
inc
sbb
aaa
mov
sub
aad
neg
mov
xor
or
pop
xor
pop
fs
in
movsb
cmp
scas
orb
inc
mov
cwtl
mov
insl
ds
stc
mov
repnz
xchg
lds
and
pop
cmp
mov
out
adc
js
int
in
cld
mov
sbb
add
cld
or
push
iret
aaa
icebp
adc
pop
bound
lods
es
movsb
sbb
xlat
add
mov
mov
flds
mov
mov
adc
sub
mov
pop
pop
mov
cmpsb
fcmovne
fcoml
jns
in
pushf
pop
cld
push
roll
and
add
or
and
in
mov
out
and
cmpsl
leave
mov
mov
test
inc
enter
mov
adc
insl
shrl
sbb
adc
xchg
out
xchg
mov
push
outsl
sbb
scas
dec
iret
sti
mov
or
fsubr
cmp
jecxz
nop
jge
arpl
lea
ds
mov
scas
xchg
in
sub
mov
sbb
stos
lret
testl
repnz
fisubs
add
data16
mov
data16
sub
add
data16
dec
data16
pop
data16
insb
data16
jle
or
xchg
data16
mov
data16
add
add
adc
add
push
add
push
add
push
add
push
add
pop
or
mov
sahf
pop
or
test
or
mov
pop
or
fcompl
repnz
or
or
add
pop
or
sub
add
or
pop
pop
or
push
or
jbe
or
sbbb
mov
add
pop
or
into
pop
or
fcompl
add
pop
or
clc
pop
or
or
add
or
sub
add
pop
or
push
pop
or
push
or
sbbb
lcall
add
pop
or
aam
or
in
or
repnz
or
or
add
or
and
or
cmp
add
add
add
or
jle
or
mov
add
pop
or
scas
pop
or
mov
pop
or
fcompl
add
pop
or
or
add
pusha
or
and
or
xor
add
or
pusha
pusha
or
sub
add
pusha
or
stos
pusha
or
mov
pusha
or
pusha
or
ljmp
add
popa
or
push
popa
or
cs
or
inc
popa
or
inc
imul
outsb
popa
or
jle
or
xchg
popa
or
stos
popa
or
enter
fsubs
add
popa
or
cli
popa
or
or
add
bound
add
bound
add
bound
add
or
bound
add
or
xchg
add
or
les
add
bound
add
bound
add
bound
add
or
arpl
add
arpl
add
or
push
arpl
add
or
mov
add
or
push
push
add
add
push
add
push
add
push
add
push
add
or
clc
imul
add
imul
add
imul
add
imul
add
or
pop
imul
add
or
adc
or
add
or
repnz
or
aam
or
enter
mov
push
or
xchg
push
or
mov
add
or
mov
imul
je
or
push
popa
or
add
add
mov
add
adcb
add
mov
add
adcb
add
pop
add
adcb
add
add
add
xchg
add
addb
add
adc
add
or
add
add
or
or
add
add
pushw
pop
push
or
jb
or
add
add
fisubl
add
arpl
add
arpl
add
or
or
ret
add
or
ret
add
arpl
add
arpl
add
or
andb
jo
or
pop
or
push
or
cmp
or
sub
or
sbb
or
push
or
repnz
fisubs
int3
or
mov
or
mov
js
or
inc
or
ss
sub
sbb
or
or
clc
arpl
add
add
add
add
or
pop
pop
or
jo
or
test
add
pop
or
ret
add
pop
or
out
pop
or
add
push
pop
or
cs
or
cs
or
add
add
je
add
jae
add
and
add
push
or
or
lods
or
xchg
or
jle
or
push
or
pusha
or
dec
or
les
add
add
add
push
pop
adc
push
pop
adc
push
pop
adc
pop
adc
pop
adc
data16
popa
jb
pop
dec
imul
je
push
imul
dec
push
pop
inc
jne
jb
outsb
je
gs
imul
insb
outsl
outsl
outsb
pop
dec
outsl
je
data16
add
add
roll
add
xor
add
add
add
inc
push
push
inc
push
inc
pop
dec
imul
je
push
imul
inc
jne
jb
outsb
je
gs
imul
insb
outsl
jb
jb
inc
jb
ja
gs
dec
gs
jo
jb
dec
bound
arpl
jnp
cmp
xor
xor
inc
sub
sub
sub
cmp
cmp
xor
add
add
push
dec
inc
pop
jnp
cmp
xor
xor
inc
sub
sub
sub
cmp
cmp
xor
dec
outsb
jo
outsl
arpl
jb
gs
xor
je
mov
lcall
push
fld1
pusha
push
jns
gs
imul
inc
dec
add
inc
dec
push
dec
inc
add
add
jo
inc
add
add
gs
add
dec
outsl
push
gs
outsl
jbe
add
add
inc
outsl
jb
gs
gs
outsl
jbe
add
insb
add
add
inc
add
add
add
push
add
add
add
add
add
add
add
add
add
inc
and
add
add
pop
add
insl
bound
outsl
js
add
add
inc
popa
jb
imul
add
add
jb
gs
add
jb
gs
add
dec
inc
inc
push
dec
inc
and
and
inc
and
jb
insl
outsb
je
add
push
push
imul
insb
add
and
dec
inc
and
and
dec
inc
push
pop
push
inc
and
push
jb
addr16
insl
insl
popa
bound
add
add
jb
imul
jo
outsb
fs
je
jb
addr16
inc
add
add
push
jb
addr16
inc
add
inc
jne
push
gs
add
inc
jbe
outsb
je
cs
push
inc
jbe
outsb
je
add
add
cmp
xor
xor
inc
sub
sub
sub
cmp
cmp
xor
add
outsb
fs
jns
popa
insl
gs
inc
jbe
outsb
je
cs
push
inc
jbe
outsb
je
xor
add
add
dec
push
inc
jbe
outsb
je
and
push
arpl
add
add
ljmp
adc
adc
add
add
incl
add
dec
outsl
arpl
push
gs
gs
xor
add
dec
dec
inc
push
dec
inc
push
pop
push
inc
add
dec
outsb
jo
outsl
arpl
jb
gs
xor
add
inc
push
dec
inc
inc
push
dec
inc
add
dec
outsl
fs
gs
push
popa
ja
add
fs
add
mov
incb
adc
push
add
and
add
push
pop
add
nop
and
adc
and
adc
and
adc
and
adc
and
adc
xor
adc
mov
inc
addl
add
nop
xor
adc
xor
adc
push
add
and
add
push
add
add
add
add
add
rolb
add
add
inc
mov
pop
adc
add
add
add
add
aaa
add
mov
add
pusha
cmp
adc
aaa
add
loopne
add
lock
adc
add
mov
aaa
add
xorl
adc
xor
pop
mov
sub
adc
cmp
pop
adc
add
add
add
add
pop
adc
add
add
add
add
cmp
adc
cmp
adc
add
xor
add
inc
cmp
adc
sbb
adc
cmp
adc
imul
popa
insl
add
add
adc
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
inc
nop
inc
add
push
inc
add
pusha
inc
add
add
adc
push
pop
adc
push
pop
adc
push
pop
adc
pop
adc
pop
adc
data16
popa
jb
pop
dec
imul
je
push
imul
dec
push
pop
inc
jne
jb
outsb
je
gs
imul
insb
outsl
outsl
outsb
pop
dec
outsl
je
data16
add
add
roll
add
xor
add
push
gs
imul
add
add
push
gs
inc
add
inc
data16
dec
inc
add
add
push
gs
jne
arpl
inc
add
add
addr16
inc
inc
outsl
outsb
outsb
arpl
addr16
push
push
dec
add
add
inc
insb
imul
add
inc
jb
jae
dec
imul
add
inc
insb
imul
inc
add
add
addr16
inc
pop
imul
jb
gs
push
dec
inc
add
add
push
jo
jb
fs
add
push
gs
gs
push
jae
addr16
push
outsl
jo
jo
gs
popa
jns
add
addr16
inc
outsl
outsb
outsb
arpl
outsb
push
gs
popa
jns
add
push
je
je
jae
imul
popa
fs
gs
popa
jns
addr16
dec
outsb
jae
popa
insb
insb
gs
dec
inc
add
and
add
add
add
add
outsb
je
cmp
xor
sub
xor
add
add
jae
add
push
add
rorb
adc
push
add
xor
adc
push
add
mov
add
rcrb
adc
push
add
rclb
adc
pop
add
mov
pop
add
sbbb
mov
sbb
adc
pusha
add
mov
pop
add
lock
add
rcrb
adc
pop
add
and
adc
add
pusha
pop
add
inc
add
add
add
mov
add
andb
rcrb
adc
bound
adc
push
add
add
adc
arpl
adc
add
mov
sbb
adc
popa
and
jae
add
add
mov
add
and
add
rcrb
adc
lcall
mov
addl
adc
adc
mov
adc
mov
adc
mov
adc
add
add
popaw
insb
jae
add
add
arpl
cmp
and
and
add
inc
popa
outsb
outsb
outsl
je
imul
add
push
dec
push
push
add
add
dec
push
push
push
das
xor
xor
add
add
add
add
add
add
add
or
add
insb
add
insb
jne
add
add
add
add
and
add
jp
mov
xchg
stos
cmp
jl
cmp
popa
inc
xor
add
add
add
add
add
inc
add
add
add
add
add
add
cmp
add
add
cmp
pop
cmp
dec
inc
cmp
push
imul
imul
jae
das
add
add
add
add
add
and
add
cs
add
add
dec
push
jae
add
add
outsb
outsl
outsb
add
add
sub
add
dec
outsl
je
imul
add
dec
outsb
imul
cmp
add
insb
cmp
add
and
inc
outsl
outsb
outsb
dec
jne
cmp
add
imul
and
insb
jne
add
add
inc
outsl
outsb
outsb
cmp
add
jbe
jb
add
imul
and
add
add
push
jne
arpl
outsb
outsb
cmp
add
add
add
push
add
add
jbe
insb
imul
gs
push
and
gs
je
jb
ja
add
dec
push
push
push
cmp
das
add
je
add
add
dec
outsl
arpl
imul
or
inc
dec
push
inc
cmp
add
add
sub
add
add
sub
add
and
add
cmp
add
sub
add
and
add
add
and
add
and
and
add
and
and
pop
add
and
add
and
add
add
add
add
aas
jnp
and
and
and
and
jge
inc
outsl
outsb
outsb
arpl
add
add
inc
dec
inc
cmp
pop
adc
pop
adc
pop
adc
pop
adc
pop
adc
data16
popa
jb
pop
dec
imul
je
push
imul
dec
push
pop
inc
jne
jb
outsb
je
gs
imul
insb
outsl
outsl
outsb
pop
dec
outsl
je
data16
add
add
roll
add
xor
add
add
add
add
add
add
inc
popa
push
or
scas
int
adc
leave
loop
add
test
or
add
out
test
sbb
mov
add
shrl
ljmp
add
rcrb
insl
popa
jo
jae
je
push
and
and
add
adc
add
and
adc
add
inc
add
push
add
mov
adc
rclb
xchg
dec
add
scas
lods
dec
adc
push
xor
addb
add
mov
adc
cmp
cmp
add
add
add
add
insb
imul
add
add
add
add
add
rolb
add
add
inc
and
fs
xor
add
and
jb
jb
and
add
xor
add
push
outsb
imul
outsb
and
jb
jb
xor
xor
add
add
imul
and
jb
jb
and
add
and
add
dec
and
and
outsb
je
and
add
dec
outsl
and
dec
and
arpl
outsb
add
adc
pop
adc
pop
adc
pop
adc
pop
adc
and
inc
es
imul
and
cmp
aaa
cmp
pop
arpl
jno
sub
jl
sub
pop
jb
sub
jne
jbe
insb
das
xor
jp
dec
sub
push
push
outsb
dec
popa
js
inc
push
inc
inc
dec
push
jge
push
aas
push
pop
inc
insl
pop
jle
xor
xor
add
add
or
or
push
movups
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
arpl
cmp
imul
insl
sub
dec
jg
push
outsl
xor
jne
sub
imul
inc
pop
cmp
dec
aas
push
dec
jl
inc
addr16
jle
dec
pusha
daa
push
jae
push
and
xor
push
aaa
push
cmp
ss
xor
jge
and
sub
push
inc
jbe
push
addb
xchg
lea
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
incl
add
add
or
or
push
movups
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
daa
jns
pop
push
push
cmp
ds
je
pusha
js
imul
inc
jb
es
aas
pop
jl
insl
pop
dec
inc
push
push
cmp
bound
dec
xor
arpl
push
cmp
sub
jbe
imul
pop
cmp
sub
sub
push
aaa
jge
inc
xor
insb
dec
jae
xor
test
mov
xchg
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
jmp
push
pop
adc
push
pop
adc
push
pop
adc
pop
adc
pop
adc
data16
popa
jb
pop
dec
imul
je
push
imul
dec
push
pop
inc
jne
jb
outsb
je
gs
imul
insb
outsl
outsl
outsb
pop
dec
outsl
je
data16
add
add
roll
add
xor
add
outsl
ja
gs
outsb
fs
insl
cmp
add
add
bound
outsb
gs
imul
and
and
popa
addr16
bound
imul
cmp
add
add
and
rclb
mov
add
dec
flds
sbb
popa
jne
je
jae
outsl
arpl
fs
insb
add
push
pop
adc
push
pop
adc
push
pop
adc
pop
adc
pop
adc
data16
popa
jb
pop
dec
imul
je
push
imul
dec
push
pop
inc
jne
jb
outsb
je
gs
imul
insb
outsl
outsl
outsb
pop
dec
outsl
je
data16
add
add
roll
add
xor
add
lret
movsb
add
xchg
dec
add
cs
add
pop
es
pop
pop
add
jb
add
mov
add
shlb
add
mov
pop
add
push
pop
add
adc
add
rclb
adc
adc
adc
adc
adc
lar
addb
xor
popa
bound
gs
inc
inc
inc
inc
inc
add
dec
fs
je
je
gs
add
add
add
popa
jb
push
add
sub
add
cmp
das
add
push
push
add
add
dec
push
push
push
push
add
add
pop
cmp
cmp
popa
jae
push
outsl
jo
jo
push
and
jo
jo
push
push
and
js
outsl
jo
jo
gs
popa
jns
and
inc
add
add
inc
fs
imul
jae
dec
popa
push
jb
arpl
outsb
arpl
add
jae
dec
imul
outsl
outsb
outsb
arpl
add
jae
inc
outsl
outsb
outsb
arpl
push
gs
gs
add
jae
dec
outsb
imul
popa
jns
add
push
pop
adc
push
pop
adc
push
pop
adc
pop
adc
pop
adc
data16
popa
jb
pop
dec
imul
je
push
imul
dec
push
pop
inc
jne
jb
outsb
je
gs
imul
insb
outsl
outsl
outsb
pop
dec
outsl
je
data16
add
add
roll
add
xor
add
gs
adc
lret
movsb
add
xchg
dec
add
cs
add
pop
es
insb
insb
xor
cs
add
add
and
pop
pop
add
pop
pop
xor
xor
add
pop
pop
xor
xor
add
imul
pop
add
add
add
sub
arpl
jae
jbe
outsl
insb
popa
je
outsl
outsb
and
arpl
imul
jo
add
popa
imul
je
outsb
add
add
insl
arpl
je,pn
jo
add
add
je
outsl
outsb
add
sub
jb
popa
je
push
jb
je
arpl
outsl
arpl
add
add
add
outsb
add
add
bound
add
add
bound
xor
add
bound
xor
add
imul
je,pn
jo
add
add
je
jo
add
add
sub
add
sub
add
sub
add
jp
insb
insb
popa
das
xor
xor
sub
insl
jo
je
bound
and
dec
inc
and
xor
and
outsb
outsl
ja
and
and
add
imul
jb
imul
gs
add
imul
gs
xor
cs
insb
add
add
mov
push
pop
adc
push
pop
adc
push
pop
adc
pop
adc
pop
adc
data16
popa
jb
pop
dec
imul
je
push
imul
dec
push
pop
inc
jne
jb
outsb
je
gs
imul
insb
outsl
outsl
outsb
pop
dec
outsl
je
data16
add
add
roll
add
xor
add
gs
adc
pop
pop
xor
add
add
gs
outsl
outsb
add
add
inc
push
push
push
inc
dec
push
pop
push
push
inc
push
incl
add
add
ja
outsb
imul
imul
outsb
imul
push
outsb
popa
insl
gs
jo
jb
je
outsl
outsb
jae
add
add
push
outsb
imul
push
outsb
popa
insl
gs
jo
jb
je
outsl
outsb
jae
push
pop
push
push
inc
dec
pop
inc
jne
jb
outsb
je
outsl
outsb
je
outsl
insb
push
gs
inc
outsl
outsb
je
outsl
insb
pop
push
gs
imul
popa
addr16
add
add
add
add
jmp
add
imul
adc
pop
adc
pop
adc
pop
adc
pop
adc
add
add
push
pop
adc
push
pop
adc
push
pop
adc
pop
adc
pop
adc
data16
popa
jb
pop
dec
imul
je
push
imul
dec
push
pop
inc
jne
jb
outsb
je
gs
imul
insb
outsl
outsl
outsb
pop
dec
outsl
je
data16
add
add
roll
add
xor
add
push
adc
push
adc
gs
adc
inc
push
push
inc
push
inc
pop
dec
imul
je
push
imul
inc
jne
jb
outsb
je
gs
imul
dec
outsb
arpl
add
inc
jae
outsb
arpl
outsl
outsb
outsl
jne
add
add
inc
insb
insb
dec
popa
insl
add
jo
jb
outsl
outsb
popa
je
add
outsl
data16
push
je
jb
jne
add
jae
outsl
outsl
outsb
add
add
push
jns
dec
outsl
outsl
data16
add
inc
push
push
inc
push
inc
pop
dec
imul
je
push
imul
inc
jne
jb
outsb
je
gs
imul
dec
outsb
arpl
add
push
dec
inc
push
push
inc
push
inc
pop
dec
imul
je
push
imul
inc
jne
jb
outsb
je
gs
imul
add
add
add
add
outsb
insb
outsl
outsl
outsb
cs
add
add
gs
insb
outsl
jb
jb
gs
add
add
and
pop
pop
xor
xor
add
pop
pop
xor
xor
popa
add
add
dec
outsl
fs
xor
dec
gs
add
add
dec
outsl
fs
xor
inc
imul
push
jb
arpl
jae
xor
js
add
add
outsl
arpl
jae
xor
jb
je
add
gs
je
push
outsl
outsl
insb
push
xor
popa
jo
push
add
gs
add
add
add
aad
xchg
push
enter
ja
add
add
incl
add
add
gs
outsb
add
add
outsl
arpl
jae
fs
outsl
push
gs
imul
add
add
add
incl
mov
adc
mov
adc
jb
gs
xor
add
add
dec
outsl
popa
fs
imul
add
add
incl
add
add
mov
adc
gs
imul
incl
add
add
je
bound
add
add
jo
gs
outsb
je
and
je
outsl
jb
gs
pop
push
gs
imul
je
outsl
jb
gs
add
add
push
dec
inc
pop
add
adc
add
add
add
rolb
add
add
inc
pusha
les
adc
ret
add
rol
add
loopne
add
xor
add
inc
add
add
add
add
add
add
add
inc
inc
add
push
add
inc
add
add
add
add
insb
outsl
add
add
cs
je
add
add
jb
popa
je
dec
popa
imul
sub
jb
popa
je
push
jb
je
arpl
outsl
arpl
jb
jb
outsb
add
add
xor
xor
xor
add
add
add
xchg
xor
ja
popa
push
out
mov
les
hlt
push
xor
xchg
fs
xor
fdivrl
jmp
rclb
mov
sub
mov
sbb
dec
jno
repz
test
ficompl
jmp
mov
hlt
movl
imul
std
in
leave
mov
add
insb
push
arpl
psubd
or
outsb
cmp
imul
addr16
add
aam
dec
std
test
movsl
cli
test
xor
leave
mov
lods
jecxz
fdivs
jne
filds
or
shrl
cmp
ficoms
push
xlat
enter
mov
and
mov
cltd
xchg
mov
mov
or
or
and
or
adc
stos
sbb
data16
inc
fdivl
jno
add
aad
mov
mov
movsl
in
lahf
xor
mov
js
stc
add
mov
push
loope
or
insl
or
pop
arpl
hlt
push
imul
insb
sbb
xor
dec
add
in
xchg
push
insb
jnp
add
shl
adcb
cmc
fnstenv
adc
mov
mov
bound
ficoml
gs
aam
pop
popa
mov
into
push
mov
je
mov
aam
movsl
fisttps
xchg
fdivrs
sti
hlt
shrl
imul
mov
sarb
add
in
add
pop
dec
or
cmp
add
daa
adc
or
and
test
or
mov
popa
into
push
stc
ficomps
leave
fldcw
and
xlat
pop
cmp
mov
cmp
lods
insb
mov
in
mov
mov
add
inc
aad
scas
ja
popf
adc
push
fdivl
or
test
fs
ds
or
or
push
in
decl
xchg
daa
scas
add
mov
pop
jge
xchg
shlb
add
inc
push
imul
xorb
sbb
push
imul
aam
loopne
rorl
int3
dec
frstor
fistpll
mov
mov
aad
mov
call
xchg
shll
push
repnz
addr16
cmpsb
fldl
mov
dec
ss
fisubrl
or
scas
testb
pusha
jp
inc
ret
out
pusha
fists
addr16
mov
jns
imul
andl
shrb
ss
push
xchg
ja
int3
add
mov
das
es
lds
or
sub
mov
cmpsl
call
ret
shlb
sbb
ret
es
pushf
mov
insl
add
ss
jmp
addr16
jb
push
add
adc
mov
jnp
sbb
xchg
or
out
fdivrl
fisttpl
aam
roll
clc
mov
push
int
mov
mul
ja
outsl
ja
mov
out
or
lret
pop
or
adc
sahf
gs
clc
sar
imul
insb
push
js
or
push
addl
mov
cmp
cmpsl
notl
pusha
rorb
imul
push
scas
fcompl
fldenv
filds
cmp
aaa
push
scas
mov
fidivrs
mov
jmp
repnz
lret
mov
cmpsb
mov
sarb
sub
push
mov
jp
mov
dec
popa
les
sbb
xchg
sub
aaa
mov
or
sbb
add
sub
inc
xor
sbb
push
sub
fs
hlt
ja
xchg
inc
dec
or
ret
call
hlt
jecxz
dec
mov
dec
jle
mov
sub
cwtl
xchg
ret
and
push
shll
js
inc
out
popa
push
xlat
scas
cs
mov
xlat
mov
sbb
test
sbbb
add
lcall
out
insb
insb
fistpll
inc
aam
push
pop
int
and
xchg
jecxz
lahf
mov
inc
mov
popa
ja
mov
out
repz
gs
fisubrl
lahf
inc
inc
sub
imul
jo
scas
imul
out
pop
sub
sub
pop
or
sbb
repz
fbstp
push
jo
xor
hlt
div
sub
jne
sbb
xor
pop
nop
sti
mov
test
jns
test
cmp
jns
jae
dec
call
inc
cmp
ficomps
dec
jns
inc
jle
jmp
sbb
fildl
mov
lea
fnstcw
mov
dec
hlt
mov
or
xchg
lea
or
int3
pop
dec
xor
inc
mov
outsb
lret
ja
pop
mov
mov
xchg
push
xchg
xchg
push
cwtl
xlat
ficoms
test
loope
xchg
lret
cli
cmc
pop
xlat
bound
out
imul
push
inc
lahf
test
pop
adc
push
sbb
adc
and
inc
and
out
out
and
cmp
dec
mov
lahf
mov
and
cmpsl
xor
mov
lods
out
sarb
mov
adcl
insb
mov
xchg
adc
jle
push
jns
das
mov
and
je
or
repnz
dec
push
jo
gs
out
jle
repz
mov
xchg
rcl
cmp
mov
js
mov
test
cwtl
cmpl
test
mov
mov
scas
adc
out
pop
push
insb
hlt
inc
int
fldcw
push
ret
adc
add
inc
ljmp
ja
inc
xlat
ss
push
out
mov
mov
movsl
test
jno
mov
ja
insb
pop
push
dec
sub
or
sub
add
adc
cwtl
mov
nop
bound
xchg
push
push
hlt
out
les
fdecstp
jmp
lea
imul
pushf
sub
sub
lods
dec
jo
outsl
sbb
sub
loope
fisubs
pop
lds
push
call
dec
in
mov
movsb
ret
addr16
test
mov
lahf
fdivrp
cmp
repz
jnp
call
cmp
mov
or
stos
mov
sbb
icebp
adc
sub
jae
xor
mov
jo
cmc
shrb
addl
mov
arpl
cli
lret
loope
int3
mov
stc
lea
scas
or
lea
mov
test
and
pop
insb
cmp
les
adc
sub
dec
add
sar
push
or
cmp
popf
cmpsl
push
mov
xchg
adc
in
xor
cltd
bound
fcoms
into
pop
dec
loope
push
jle
push
xchg
sub
int3
bound
mov
xor
call
mov
pop
lods
ret
outsb
xchg
dec
insb
das
mov
adc
test
push
and
sub
adc
jns
xchg
movsl
dec
mov
movsb
daa
sub
repnz
fdivrp
shlb
out
mov
shlb
es
xchg
aas
mov
adc
out
jp
std
pop
mov
gs
pop
jle
aaa
or
jbe
dec
divl
lahf
adc
jb
and
add
add
aaa
push
add
test
pop
mov
or
jmp
lret
push
mov
lea
push
adc
cmp
test
or
stc
sbb
push
xchg
fmuls
or
pop
or
es
leave
in
push
ja
pop
sub
das
sbb
fildll
sbb
repnz
adc
dec
jae
adc
cmp
and
adc
mov
pop
loopne
dec
cmp
sub
cmp
clc
or
cmp
inc
aas
or
cmp
push
add
outsl
jge
aaa
ss
fidivl
test
xchg
xor
imul
fldl
adc
nop
in
and
xor
daa
leave
pop
sub
and
mov
and
mov
sub
fidivrs
sub
ds
sbb
sub
lcall
das
rorb
jno
pop
push
jae
xor
jb
and
push
jbe
icebp
pop
je
fwait
aad
js
mov
mov
jg
or
jl
je
jns
push
inc
js
mov
jnp
cs
insl
fdivrp
cmp
nop
cli
outsb
insb
xchg
push
push
xor
cmp
imul
adc
sub
shr
aam
cmpsb
gs
fs
imul
dec
pop
mov
push
dec
jns
xchg
dec
cld
arpl
dec
lret
or
xchg
mov
dec
movsl
fstpl
inc
scas
lock
inc
testb
shll
inc
xor
inc
jae
cmovo
out
inc
sbb
push
xor
mov
mov
mov
clc
push
mov
adc
push
aad
mov
pop
fists
pop
xchg
pop
mov
movsb
pop
xor
jmp
add
sub
outsl
pop
insl
das
lods
pop
sbbb
loope
jno
loopne
iret
mov
fldenv
cmp
imul
out
addr16
in
dec
es
mov
out
push
sahf
mov
in
in
das
call
mov
stos
jmp
pop
imul
rcl
cld
sahf
insb
xchg
test
adc
cli
sbb
sti
inc
les
clc
dec
jmp
ret
cmp
inc
icebp
xchg
inc
or
mov
xchg
test
pop
js
push
aaa
mov
fidivrl
jecxz
fstpt
mov
shlb
cmc
fucom
dec
aaa
or
xlat
out
test
fsubr
aam
mov
aad
movsb
shlb
into
mov
rcrl
and
adc
pop
lds
xchg
pushf
les
fcmovb
dec
inc
sbb
int3
push
push
ret
xchg
ret
mov
call
dec
lret
lahf
lds
enter
leave
je
inc
int3
inc
insl
xchg
sbb
ror
mov
scas
xchg
ja
insl
nop
cs
sub
pushf
cmpsb
xchg
stos
push
fs
repnz
clc
mov
sahf
xchg
adc
pushf
mov
outsl
mov
adc
xor
xor
dec
mov
or
in
popf
orb
dec
add
mov
mov
push
pop
and
push
adc
faddl
arpl
pop
xchg
shl
test
into
add
stos
stc
outsb
movsb
stos
jl
jmp
dec
adc
scas
adc
lods
sbb
xor
inc
aas
mov
les
clc
mov
stos
std
jl
popf
xchg
mov
mov
sbb
mov
cmpsl
inc
mov
int
mov
fcmovne
mov
mov
mov
cmovns
push
dec
adc
mov
mov
fidivrs
pop
pop
mov
add
add
gs
stos
out
scas
mov
push
xchg
bound
fcompl
and
out
sub
fs
outsl
add
dec
fstp
push
xor
loopne
adc
lahf
push
sbb
xor
cli
jno
lods
inc
enter
lods
cmpsl
addr16
or
outsl
into
int
jg
xchg
adc
mov
aas
sahf
rcrb
xchg
call
jae
lods
and
mov
inc
jp
ds
xor
mov
cmp
rolb
xchg
or
in
xchg
loop
pop
test
xchg
fstpl
iret
aas
sub
ja
adc
ljmp
in
inc
push
clc
sub
les
and
push
sahf
loop
outsl
dec
jg
or
jge
inc
aad
sar
dec
rcrb
lds
xchg
lahf
mov
inc
std
mov
xchg
hlt
adc
call
adc
pop
aas
test
mov
sbb
mov
jbe
push
lret
pop
jg
test
push
shlb
pop
mov
sbb
pop
mov
adc
shl
cmpb
das
lret
jnp
dec
ja
mov
push
add
dec
mov
outsl
inc
nop
call
cld
jle
data16
sbb
ficoml
daa
mov
mov
out
mov
mov
mov
cmpl
shrb
hlt
pop
outsb
xchg
add
cmp
lcall
pop
xchg
sub
mov
pop
clc
or
test
push
mov
fists
inc
addr16
fwait
push
add
in
mov
das
dec
leave
xor
inc
arpl
adc
push
mov
aaa
pop
in
push
loope
inc
call
cwtl
call
scas
push
out
aaa
push
clc
inc
addb
jmp
cltd
scas
xlat
loopne
lret
xor
mov
in
pop
shl
push
mov
push
inc
aad
in
ljmp
bound
inc
xchg
out
xor
orb
sub
push
in
cmp
pop
cmp
outsb
xor
or
xchg
movsb
loope
mov
das
sub
dec
dec
cmc
scas
repz
xor
mov
xchg
and
hlt
js
scas
dec
rol
std
shlb
pop
xchg
idivl
sub
xchg
lahf
pop
repnz
and
add
jle
cmc
mov
out
mov
pop
push
mov
ret
mov
flds
push
ljmp
xor
and
push
mov
roll
outsb
mov
push
or
adc
ljmp
into
movsl
adc
bswap
fsts
xchg
test
lods
sub
sbb
and
xorb
fcoms
add
scas
iret
jb
leave
jae
and
movsb
push
inc
xchg
sbb
test
pop
adc
out
dec
jbe
mov
into
lea
inc
fsubr
inc
clc
fs
jns
stc
xor
xchg
inc
fidivl
lcall
mov
lock
imul
ss
test
cs
mov
call
mov
loope
into
cs
inc
out
add
addl
pop
std
pop
jmp
icebp
and
subb
aam
into
mov
iret
test
jg
pop
es
outsb
mov
jbe
out
lret
sbb
loope
push
adc
cmpl
adc
mov
jle
cmp
pushf
in
adc
outsb
push
sbb
cmpsl
push
data16
jno
ds
outsl
sub
mov
add
xchg
out
mov
dec
or
sbb
rolb
pop
outsb
sti
ret
neg
jmp
pop
test
or
xchg
popa
mov
fiadds
add
add
xor
cltd
or
pop
insl
les
jo
hlt
xor
push
fisttpl
movsb
loopne
jmp
mov
mov
sub
jl
out
sub
xchg
sbb
mov
repnz
inc
ficomps
fcmovbe
jge
fucom
jmp
aam
push
adc
adc
imul
mov
in
adc
pop
dec
arpl
insb
fsqrt
arpl
outsb
and
dec
imul
in
addr16
cmp
in
dec
add
inc
rorb
mov
xor
mov
insb
fstpt
stc
inc
xor
insb
jecxz
fistps
or
pop
fnstenv
lods
push
fiadds
cmp
xlat
push
cmpb
hlt
mov
mov
and
mov
movsl
movaps
mov
or
or
mov
or
and
outsl
jl
pop
push
sbb
cmp
add
jno
cwtl
shlb
mov
jno
test
lahf
mov
aam
js
leave
mov
xchg
or
sbb
or
sub
out
pop
add
push
hlt
sbb
popa
bound
bound
dec
insb
push
xchg
in
sbb
movsl
jnp
or
shl
les
mov
adc
mov
jl
fstpl
dec
mov
jl
sti
aam
gs
mov
pop
cmp
add
xor
dec
fbld
xlat
movsb
rol
insl
rcl
hlt
sti
inc
imul
cld
lods
mov
pusha
mov
jae
add
pop
fisttpll
jno
daa
add
mov
or
xchg
mov
and
mov
data16
into
popa
in
pop
fdivrp
push
sub
leave
cwtl
mov
cwtl
and
xlat
test
pop
mov
pop
cs
xorl
mov
mov
add
rcrb
popf
shlb
add
es
jecxz
or
xchg
cmp
push
test
push
iret
or
add
mov
setae
mov
push
mull
pop
andb
sbb
outsb
imul
aam
jbe
shrl
loopne
fidivrl
fisttpll
stc
mov
out
stc
pop
mov
inc
pusha
mov
aad
mov
jle
fadd
les
repnz
sarl
push
addr16
mov
fisttpll
ss
fmuls
sbb
dec
testb
pusha
fbld
ret
test
fists
outsb
mov
inc
imul
sbb
push
ja
mov
add
mov
lds
or
sub
add
xlat
jmp
sub
sahf
mov
scas
sbb
in
arpl
es
mov
or
ss
jb
test
add
xchg
mov
jp
jnp
sub
xchg
rorb
or
or
fbld
xchg
rcl
icebp
aam
inc
push
fiaddl
int
mov
ja
sbb
pop
out
punpckhdq
push
cmp
adc
or
sahf
clc
bound
rcll
insb
iret
inc
mov
or
adcl
ret
es
shlb
testl
ja
scas
shrl
pop
faddl
or
fdivrs
lock
mov
iret
jg
mov
jmp
lret
mov
xchg
xor
mov
add
push
ficoms
and
addr16
les
mov
sub
xchg
mov
mov
mov
sub
add
add
sbb
inc
xor
bound
fs
lds
pop
cmpsl
xchg
xchg
enter
rol
mov
mov
hlt
fxch
lods
mov
or
scas
jle
sahf
subl
dec
ret
push
fldenv
adc
jo
popa
out
inc
xchg
cs
xlat
push
aaa
mov
adc
cwtl
mov
add
sbb
sbb
ss
lcall
insb
sbb
inc
aas
pop
push
sahf
xchg
test
mov
inc
and
call
shl
ret
fiadds
gs
pop
scas
stos
inc
inc
lahf
jmp
imul
jbe
std
imul
sub
or
or
sbb
insl
filds
repz
pop
pop
mov
jo
jno
imul
sub
mull
sbb
jne
pop
mov
sti
push
test
jns
mov
cmp
jns
push
dec
mov
pop
fisubrs
cmp
jns
add
ret
xchg
push
sbb
xchg
adc
mov
cmpl
lds
or
xchg
into
pop
int3
add
inc
xlat
xor
cli
bound
mov
mov
aas
xchg
xchg
push
xchg
cwtl
push
int3
test
shl
cli
lret
xchg
jb
xlat
pop
imul
inc
push
mov
pop
dec
test
unpckhps
sbb
jo
cmp
std
imul
lret
or
add
lahf
loop
cmpsl
int3
and
mov
loope
mov
shr
lahf
adc
insb
leave
dec
and
rclb
ljmp
ja
das
aas
jns
ss
mov
or
je
adc
xor
push
dec
lea
pusha
jle
xor
out
std
ret
rclb
cmp
lcall
js
cmpsl
cmp
sbbl
or
lret
mov
pop
dec
inc
hlt
insb
push
insl
fnstcw
int
ret
repz
adc
inc
and
shrl
ja
adcb
out
movsl
add
test
mov
push
ja
cwtl
pop
insb
adc
ss
daa
sbb
fnstsw
xorl
mov
push
rcr
hlt
lds
out
hlt
push
out
ret
neg
xchg
aad
pop
mov
test
xor
imul
jns
shll
lods
clc
pop
sbb
inc
sub
data16
loope
lds
mov
dec
repz
mov
in
test
xchg
sub
in
scas
mov
repz
cmp
call
imul
or
stos
test
jg
sbb
mov
pop
adc
xor
xor
dec
jo
mov
imul
jp
xorl
pop
mov
lret
cli
xlat
dec
shl
out
stc
int3
mov
loopne
test
mov
and
popf
mov
inc
mov
and
sbb
insb
pop
xor
push
test
cwtl
inc
jle
test
rorb
cmpl
hlt
pop
mov
cmpsl
popf
stos
adc
add
cld
dec
xor
bound
into
jns
fmuls
dec
pop
push
cli
jle
jnp
sub
aam
lea
push
pop
mov
fnop
pop
jle
in
inc
gs
dec
xchg
outsb
jne
mov
call
or
push
aas
sub
mov
sbb
mov
daa
repnz
mov
mov
out
and
loope
or
mov
jle
shlb
imul
inc
cmp
ja
fsubl
mov
jle
hlt
out
push
or
testl
mov
adc
xor
add
add
ret
add
pop
pop
or
jmp
lea
dec
push
test
adc
psrlw
or
push
out
loope
sbb
fs
xchg
push
or
inc
cmp
sbb
mov
sbb
lods
sbb
popa
fwait
sbb
mov
adc
cwtl
call
mov
cmpsb
adc
xchg
adc
xor
push
mov
in
cmp
loopne
sub
cmp
xchg
mov
or
mov
xchg
cmp
pop
pop
pop
aaa
pushf
jge
xor
sbb
test
xchg
aad
xor
imul
adc
frstor
in
and
out
xor
es
dec
dec
and
cltd
and
and
adc
sub
pusha
inc
sub
or
jno
hlt
sub
jbe
cs
enter
mov
shlb
divl
pop
scas
jb
xor
jbe
dec
sub
jb
aad
inc
jle
fdivrl
dec
mov
jge
or
jl
bound
jns
je
js
push
xchg
jp
mov
std
insb
mov
inc
xchg
cli
fisubrs
nop
jmp
push
in
pop
push
repz
arpl
aas
popa
sub
push
cmpsb
xlat
aam
fs
mov
dec
xlat
lret
and
mov
dec
dec
xchg
jne
dec
fisubs
dec
sbb
lret
dec
pop
mov
dec
cwtl
frstor
inc
push
lock
inc
inc
dec
testb
inc
int
inc
inc
addps
dec
out
inc
mov
push
xor
addr16
jne
ds
mov
or
rorb
adc
push
mov
cmp
pop
and
pop
in
xchg
xchg
pop
sub
add
inc
pop
pop
lods
das
insl
loope
sbb
loop
iret
out
jecxz
movsl
cmp
pop
out
fldcw
mov
or
cmp
in
paddsb
hlt
popa
call
in
mov
jmp
ss
imul
rcl
xchg
insb
sahf
call
test
sti
fdivrs
stc
sahf
les
pop
scas
jne
add
dec
bnd
lock
adc
or
cmc
lret
sub
testb
fnstcw
pusha
fdivrs
mov
fstpt
jecxz
fidivs
mov
and
fdivl
dec
in
imul
test
fdivs
shlb
add
mov
jo
shlb
pop
lds
adc
pushf
xchg
daa
fisubrl
jle
sbb
ret
int3
ret
xchg
cmp
rcl
mov
lret
dec
scas
test
pop
lahf
enter
leave
or
icebp
int3
inc
pop
je
xchg
iret
rcl
into
add
inc
nop
insl
cld
ja
sub
xchg
jmp
ds
xchg
fs
stos
xchg
and
repnz
loopne
lds
jle
iret
pushf
cmp
xchg
popf
cli
jns
cwtl
mov
and
ja
adc
repz
mov
pop
mov
mov
sbbb
mov
orb
mov
push
mov
sbb
int3
push
test
arpl
aad
or
test
mov
into
stos
movsb
outsb
stc
scas
jmp
jl
sub
dec
lods
outsl
lods
adc
sbbl
movsb
jne
jbe
mov
inc
mov
cmp
mov
mov
jae
mov
sbb
mov
cmpsl
mov
mov
fisttpl
cmpxchg
mov
punpckldq
xlat
and
adc
testb
xchg
pushf
xor
loopne
mov
cwtl
xor
add
add
mov
or
mov
mov
out
bound
xor
xlat
cmp
jge
dec
mov
loopne
xlat
add
mov
loopne
ja
pop
arpl
push
push
sbb
call
adc
jno
jnp
enter
lods
jne
or
into
outsl
es
lods
jg
sub
movsb
mov
xchg
rcrb
mov
and
xor
pop
or
addr16
xchg
shrb
push
cmp
in
pop
or
pop
lock
in
xchg
xchg
fnstsw
loopne
iret
dec
pop
ja
sub
ljmp
jecxz
in
fmuls
lock
mov
pop
and
sub
sahf
push
dec
jg
outsl
test
or
insl
cld
rcrb
lahf
rorb
and
lds
sub
mov
inc
and
xchg
test
call
cmp
xor
not
adc
iret
push
lret
mov
ret
pusha
test
jo
out
pop
mov
test
fistpll
ret
imul
push
ret
ja
imul
cpuid
jae
push
sub
mov
cwtl
cmc
cld
sar
nop
out
push
jle
fidivl
sbb
mov
inc
sub
mov
cmp
jg
sarb
xchg
outsb
pop
hlt
cmp
testl
xchg
das
aas
mov
xchg
pop
in
mov
pusha
push
or
pop
xor
dec
test
cmpsb
icebp
iret
mov
inc
cs
addr16
daa
jo
jno
dec
mov
xorb
inc
out
imul
pushf
roll
push
jb
pop
aaa
lret
pop
loope
scas
dec
push
incl
call
mov
aaa
out
push
add
inc
clc
mov
jmp
js
mov
xlat
scas
xor
in
pop
mov
push
in
pop
inc
push
jle
in
sbb
bound
and
inc
or
xor
out
mov
aam
push
stc
mov
in
pop
cmp
cmp
xor
or
cmp
movsb
add
dec
sub
scas
cmc
dec
dec
xor
jbe
mov
mov
sbb
rorb
sar
add
push
movsw
notl
cmp
lahf
xchg
xchg
in
icebp
repnz
imul
cmc
xlat
jle
out
rorl
ret
push
jp
jmp
fnop
mov
xor
xor
and
stc
popa
lcall
mov
lods
mov
ss
jb
lcall
xchg
loope
xchg
adc
int
lods
mov
inc
andb
jne
jp
adc
scas
dec
jae
fwait
push
movsb
icebp
and
sbb
test
jbe
out
push
into
icebp
mov
inc
lea
call
inc
xchg
push
xor
es
jmp
mov
or
mov
lock
bound
fwait
push
mov
xchg
xchg
cltd
xor
es
mov
cld
mov
adc
push
ja
ss
adc
out
mov
loopne
jbe
pop
notb
dec
jmp
ds
insb
addb
aam
popa
inc
mov
stos
jle
test
cmp
es
jl
mov
pop
sbb
mov
repz
in
test
adcl
ja
mov
ret
add
cmp
cltd
in
mov
push
outsb
xchg
cmpsl
fidivl
sub
fisubrs
sarl
lock
out
mov
mov
push
inc
sarb
dec
sti
outsb
pop
sub
push
addr16
cmpsb
int3
mov
pop
je
into
jp
mov
push
icebp
shr
add
add
add
or
add
lock
add
add
add
add
icebp
add
add
push
add
add
add
icebp
add
add
add
adc
adc
xor
adc
add
add
add
add
add
add
cmc
add
or
and
addb
add
add
add
cmc
add
and
add
add
add
xor
adc
xor
xor
add
pop
add
add
pop
add
add
push
add
or
add
jae
adc
pop
add
or
add
xor
add
rolb
pop
or
add
pusha
add
or
add
or
add
or
add
or
add
pop
push
add
or
add
sbb
add
nop
add
pop
cmp
add
js
add
cmp
add
rolb
adc
adc
add
push
add
or
add
or
add
or
add
pop
add
add
push
add
or
adc
pop
sub
add
je
add
xor
add
enter
or
add
or
add
test
add
add
add
test
add
inc
add
or
add
pop
or
add
pop
add
or
add
cwtl
add
push
add
or
or
add
fadds
adc
pop
add
or
or
add
mov
add
or
add
clc
add
pop
add
add
push
add
or
add
pop
and
add
jb
add
xor
add
les
adc
or
add
bound
add
and
add
movsb
add
or
add
or
add
or
add
pop
pop
add
or
add
sbb
add
xchg
add
inc
add
or
add
cmp
add
aam
adc
adc
add
push
add
sub
add
mov
add
or
add
mov
add
dec
add
or
add
pop
add
add
or
add
add
adc
xor
add
jbe
add
add
or
add
pop
sldt
or
add
add
or
add
xchg
add
inc
add
or
add
pop
or
add
pop
add
or
add
or
add
jle
add
add
or
add
pop
sbb
add
outsb
add
or
add
or
add
mov
add
dec
add
or
add
add
add
push
add
or
add
pop
pop
add
or
add
xor
add
ret
pop
or
add
popa
add
or
add
or
add
or
add
or
add
pop
push
add
or
add
sbb
add
xchg
add
pop
cmp
add
jns
add
cmp
add
rolb
adc
adc
add
imul
add
mov
add
or
add
mov
add
dec
add
or
add
pop
add
add
push
add
or
add
pop
sub
add
jne
add
xor
add
pop
or
add
or
add
or
add
or
add
ljmp
or
add
sbb
add
push
add
or
add
cmp
add
pop
pop
add
or
add
sub
add
or
add
or
add
cli
add
pop
add
add
push
add
or
add
pop
and
add
jae
add
xor
add
movb
pop
or
add
arpl
add
and
add
cmpsb
add
or
add
or
add
or
add
pop
pop
add
or
add
sbb
add
xchg
add
inc
add
or
add
cmp
add
add
pop
adc
add
imul
or
add
or
add
or
add
or
add
pop
add
add
or
add
add
adc
xor
add
ja
add
aaa
add
or
add
pop
sldt
or
add
daa
add
or
add
or
add
or
add
pop
or
add
pop
add
or
add
or
add
or
add
aas
add
or
add
pop
sbb
add
outsl
add
or
add
or
add
or
add
or
add
add
add
push
add
or
add
jae
adc
pop
add
or
add
xor
add
roll
pop
or
add
pusha
add
or
add
or
add
or
add
or
add
pop
push
add
or
add
sbb
add
xchg
add
pop
cmp
add
js
add
cmp
add
roll
adc
adc
add
push
add
or
add
or
add
or
add
pop
add
add
push
add
or
adc
pop
sub
add
je
add
xor
add
leave
add
pop
or
add
or
add
test
add
or
add
jmp
add
or
or
add
cltd
add
push
add
or
or
add
flds
adc
pop
add
or
or
add
mov
add
or
add
stc
add
pop
add
add
push
add
or
add
pop
and
add
jb
add
xor
add
lds
adc
or
add
bound
add
and
add
movsl
add
or
add
or
add
or
add
pop
pop
add
or
add
sbb
add
xchg
add
inc
add
or
add
cmp
add
aad
adc
adc
add
push
add
sub
add
mov
add
or
add
mov
add
dec
add
or
add
pop
add
add
or
add
add
adc
xor
add
jbe
add
add
or
add
pop
sldt
or
add
add
or
add
or
add
or
add
pop
or
add
pop
add
or
add
or
add
or
add
add
or
add
pop
sbb
add
outsb
add
or
add
or
add
or
add
or
add
add
add
push
add
or
add
pop
pop
add
or
add
xor
add
ret
add
pop
or
add
popa
add
or
add
or
add
or
add
or
add
pop
push
add
or
add
sbb
add
xchg
add
pop
cmp
add
jns
add
cmp
add
roll
adc
adc
add
imul
add
mov
add
or
add
mov
add
dec
add
or
add
pop
add
add
push
add
or
add
pop
sub
add
jne
add
xor
add
pop
or
add
or
add
or
add
or
add
jmp
adc
or
add
pop
add
or
add
push
add
or
add
cmp
add
pop
pop
add
or
add
sub
add
or
add
or
add
sti
add
pop
add
add
push
add
or
add
pop
and
add
jae
add
xor
add
movl
add
arpl
add
and
add
cmpsl
add
or
add
or
add
or
add
pop
pop
add
or
add
sbb
add
xchg
add
inc
add
or
add
cmp
add
xlat
add
pop
adc
add
imul
or
add
or
add
or
add
or
add
pop
add
add
or
add
add
adc
xor
add
ja
add
aaa
add
or
add
pop
sldt
or
add
daa
add
or
add
or
add
or
add
pop
or
add
pop
add
or
add
or
add
or
add
aas
add
or
add
pop
sbb
add
outsl
add
or
add
or
add
or
add
or
add
add
add
adc
add
adc
add
add
add
sbb
and
sbb
add
adc
add
push
add
add
adc
addl
sbb
pop
add
add
popa
add
add
add
adc
xor
sbb
add
adc
add
add
add
adc
adc
adc
add
or
pop
add
add
add
add
add
add
or
add
add
add
add
jbe
insb
imul
outsb
arpl
je
outsl
and
jb
bound
imul
add
jbe
insb
imul
outsb
arpl
arpl
add
add
jbe
insb
imul
popa
insb
das
insb
outsb
addr16
and
fs
and
outsb
jns
insb
outsb
addr16
and
and
je
outsb
arpl
jae
insl
bound
jae
imul
and
je
outsb
arpl
and
je
add
imul
and
gs
insb
das
insb
outsb
addr16
jae
jae
je
imul
and
je
insb
outsb
addr16
and
jo
popa
je
add
imul
and
fs
addr16
jae
jae
je
add
add
jbe
insb
imul
and
outsl
arpl
insb
outsb
addr16
jae
add
add
jbe
insb
imul
and
add
pusha
pop
add
add
push
add
or
add
jae
adc
pop
add
or
add
xor
add
rolb
pop
or
add
pusha
add
or
add
or
add
or
add
or
add
pop
push
add
or
add
sbb
add
nop
add
pop
cmp
add
js
add
cmp
add
rolb
adc
adc
add
push
add
or
add
or
add
or
add
pop
add
add
push
add
or
adc
pop
sub
add
je
add
xor
add
enter
or
add
or
add
test
add
add
add
test
add
inc
add
or
add
pop
or
add
pop
add
or
add
cwtl
add
push
add
or
or
add
fadds
adc
pop
add
or
or
add
mov
add
or
add
clc
add
pop
add
add
push
add
or
add
pop
and
add
jb
add
xor
add
les
adc
or
add
bound
add
and
add
movsb
add
or
add
or
add
or
add
pop
pop
add
or
add
sbb
add
xchg
add
inc
add
or
add
cmp
add
aam
adc
adc
add
push
add
sub
add
mov
add
or
add
mov
add
dec
add
or
add
pop
add
add
or
add
add
adc
xor
add
jbe
add
add
or
add
pop
sldt
or
add
add
or
add
xchg
add
inc
add
or
add
pop
or
add
pop
add
or
add
or
add
jle
add
add
or
add
pop
sbb
add
outsb
add
or
add
or
add
mov
add
dec
add
or
add
add
add
push
add
or
add
pop
pop
add
or
add
xor
add
ret
pop
or
add
popa
add
or
add
or
add
or
add
or
add
pop
push
add
or
add
sbb
add
xchg
add
pop
cmp
add
jns
add
cmp
add
rolb
adc
adc
add
imul
add
mov
add
or
add
mov
add
dec
add
or
add
pop
add
add
push
add
or
add
pop
sub
add
jne
add
xor
add
pop
or
add
or
add
or
add
or
add
ljmp
or
add
sbb
add
push
add
or
add
cmp
add
pop
pop
add
or
add
sub
add
or
add
or
add
cli
add
pop
add
add
push
add
or
add
pop
and
add
jae
add
xor
add
movb
pop
or
add
arpl
add
and
add
cmpsb
add
or
add
or
add
or
add
pop
pop
add
or
add
sbb
add
xchg
add
inc
add
or
add
cmp
add
add
pop
adc
add
imul
or
add
or
add
or
add
or
add
pop
add
add
or
add
add
adc
xor
add
ja
add
aaa
add
or
add
pop
sldt
or
add
daa
add
or
add
or
add
or
add
pop
or
add
pop
add
or
add
or
add
or
add
aas
add
or
add
pop
sbb
add
outsl
add
or
add
or
add
or
add
or
add
add
add
push
add
or
add
jae
adc
pop
add
or
add
xor
add
roll
pop
or
add
pusha
add
or
add
or
add
or
add
or
add
pop
push
add
or
add
sbb
add
xchg
add
pop
cmp
add
js
add
cmp
add
roll
adc
adc
add
push
add
or
add
or
add
or
add
pop
add
add
push
add
or
adc
pop
sub
add
je
add
xor
add
leave
add
pop
or
add
or
add
test
add
or
add
jmp
add
or
or
add
cltd
add
push
add
or
or
add
flds
adc
pop
add
or
or
add
mov
add
or
add
stc
add
pop
add
add
push
add
or
add
pop
and
add
jb
add
xor
add
lds
adc
or
add
bound
add
and
add
movsl
add
or
add
or
add
or
add
pop
pop
add
or
add
sbb
add
xchg
add
inc
add
or
add
cmp
add
aad
adc
adc
add
push
add
sub
add
mov
add
or
add
mov
add
dec
add
or
add
pop
add
add
or
add
add
adc
xor
add
jbe
add
add
or
add
pop
sldt
or
add
add
or
add
or
add
or
add
pop
or
add
pop
add
or
add
or
add
or
add
add
or
add
pop
sbb
add
outsb
add
or
add
or
add
or
add
or
add
add
add
push
add
or
add
pop
pop
add
or
add
xor
add
ret
add
pop
or
add
popa
add
or
add
or
add
or
add
or
add
pop
push
add
or
add
sbb
add
xchg
add
pop
cmp
add
jns
add
cmp
add
roll
adc
adc
add
imul
add
mov
add
or
add
mov
add
dec
add
or
add
pop
add
add
push
add
or
add
pop
sub
add
jne
add
xor
add
pop
or
add
or
add
or
add
or
add
jmp
adc
or
add
pop
add
or
add
push
add
or
add
cmp
add
pop
pop
add
or
add
sub
add
or
add
or
add
sti
add
pop
add
add
push
add
or
add
pop
and
add
jae
add
xor
add
movl
add
arpl
add
and
add
cmpsl
add
or
add
or
add
or
add
pop
pop
add
or
add
sbb
add
xchg
add
inc
add
or
add
cmp
add
xlat
add
pop
adc
add
imul
or
add
or
add
or
add
or
add
pop
add
add
or
add
add
adc
xor
add
ja
add
aaa
add
or
add
pop
sldt
or
add
daa
add
or
add
or
add
or
add
pop
or
add
pop
add
or
add
or
add
or
add
aas
add
or
add
pop
sbb
add
outsl
add
or
add
or
add
or
add
or
add
add
add
adc
add
adc
add
add
add
sbb
and
sbb
add
adc
add
push
add
add
adc
addl
sbb
pop
add
add
popa
add
add
add
adc
xor
sbb
add
adc
add
add
add
adc
adc
adc
add
or
pop
add
add
add
add
add
add
or
add
add
add
add
arpl
jb
arpl
outsb
addr16
and
arpl
add
arpl
jb
arpl
popa
je
and
arpl
add
add
popa
fs
arpl
and
jae
popa
je
push
outsb
outsl
ja
and
popa
fs
data16
popa
addr16
jae
je
add
add
arpl
jb
arpl
gs
fs
arpl
arpl
add
jbe
insb
imul
ja
jae
jp
add
imul
outsb
and
insl
jo
gs
imul
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
jae
addl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
popa
add
add
add
add
push
add
add
adc
sbb
and
xor
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
add
add
add
add
add
add
add
add
add
add
add
add
sbb
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
add
add
add
add
add
add
add
adc
add
pop
or
or
or
add
or
mov
or
dec
add
add
add
add
or
lods
add
add
add
add
add
or
pushf
add
add
add
add
add
or
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
lds
or
and
add
add
or
in
or
adc
add
add
or
aad
or
xor
add
add
or
cmc
add
add
add
add
or
int
or
sub
add
add
or
in
add
add
add
add
or
fldl
or
cmp
add
add
or
std
add
add
add
add
add
add
add
add
or
push
add
add
add
add
add
add
add
add
add
add
add
add
or
jae
or
repz
add
add
add
add
add
add
add
add
add
or
dec
add
add
add
add
add
add
add
add
add
add
add
add
or
imul
add
add
add
add
add
add
add
add
add
add
add
or
pop
add
add
add
add
add
add
add
add
add
add
add
add
or
jnp
or
sti
add
add
add
add
add
add
add
add
add
add
or
inc
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
or
push
add
add
add
add
add
add
add
add
add
add
add
add
or
ja
or
testl
or
str
add
add
add
add
add
or
dec
add
add
add
add
add
add
add
add
add
add
add
add
or
outsl
add
add
add
add
add
add
add
add
add
add
add
add
or
pop
add
add
add
add
add
add
add
add
add
add
add
add
or
jg
or
incl
or
incl
or
add
pop
add
pop
add
add
add
pop
add
add
add
pop
add
add
add
pop
add
add
add
pop
add
add
add
pop
add
add
add
pop
add
add
add
pop
add
pop
add
add
pop
add
add
pop
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
pop
pop
pop
pop
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
sldt
adc
adc
adc
adc
adc
adc
push
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
add
add
or
or
or
or
or
or
push
push
push
movups
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
push
push
push
push
push
push
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
sbb
add
sbb
add
and
add
sub
add
xor
add
cmp
add
inc
add
add
add
pusha
add
add
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
adc
add
sbb
add
and
add
xor
add
inc
add
add
add
addb
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
adc
add
sbb
add
and
add
xor
add
inc
add
add
add
pop
adc
adc
push
pop
adc
lods
pop
adc
lods
pop
adc
pop
adc
lods
pop
adc
stos
pop
adc
stos
pop
adc
push
pop
adc
arpl
jo
je
bound
jbe
jb
imul
bound
data16
gs
outsl
jb
add
add
jae
data16
je
insl
gs
outsl
jb
add
popa
and
jb
jb
add
jb
popa
insl
and
jb
jb
add
add
insb
and
jb
jb
add
jb
popa
insl
and
add
outsb
gs
je
outsl
outsb
popa
jb
add
push
pop
adc
push
pop
adc
push
pop
adc
pop
adc
pop
adc
data16
popa
jb
pop
dec
imul
je
push
imul
dec
push
pop
inc
jne
jb
outsb
je
gs
imul
insb
outsl
outsl
outsb
pop
dec
outsl
je
data16
add
add
roll
add
xor
add
jbe
addr16
je
outsl
outsb
gs
outsl
jb
inc
dec
inc
add
add
add
add
enter
xor
imul
add
lock
push
je
jb
and
add
push
outsl
data16
popa
jb
pop
dec
imul
je
dec
outsb
je
jb
gs
inc
js
insb
outsl
jb
jb
dec
popa
imul
inc
add
add
aas
jb
outsb
outsl
insl
add
insb
popa
jae
add
add
imul
add
insb
imul
je
outsl
and
add
add
and
add
dec
dec
inc
push
add
add
dec
dec
dec
dec
add
add
and
add
dec
push
jnp
add
sub
dec
dec
dec
inc
inc
add
add
dec
dec
inc
dec
inc
push
jnp
add
jnp
add
jb
addr16
insb
gs
add
add
je
outsl
insl
add
je
jo
sub
add
add
dec
dec
push
sub
add
sub
inc
add
add
sub
add
sub
add
xor
xor
xor
xor
add
ja
ja
fs
gs
add
add
in
cmp
add
hlt
cmp
add
add
add
dec
add
add
lcall
add
add
dec
add
add
popa
bound
add
add
mov
push
pop
adc
push
pop
adc
push
pop
adc
pop
adc
pop
adc
data16
popa
jb
pop
dec
imul
je
push
imul
dec
push
pop
inc
jne
jb
outsb
je
gs
imul
insb
outsl
outsl
outsb
pop
dec
outsl
je
data16
add
add
roll
add
xor
add
add
add
add
add
add
add
outsb
je
add
add
add
sbb
add
gs
outsb
je
popa
outsb
fs
gs
add
add
add
add
pop
adc
pop
adc
pop
adc
pop
adc
pop
adc
data16
popa
jb
pop
dec
imul
je
push
imul
dec
push
pop
inc
jne
jb
outsb
je
gs
imul
insb
outsl
outsl
outsb
pop
dec
outsl
je
data16
add
add
dec
push
and
pop
push
jns
je
insl
xor
pop
fs
jbe
jb
pop
gs
pop
push
add
jae
jae
add
sbb
adc
add
adc
add
adc
cs
adc
sbb
add
mov
pop
add
adc
sub
adc
sbb
add
adc
add
add
add
add
add
push
add
add
add
mov
push
pop
adc
push
pop
adc
push
pop
adc
pop
adc
pop
adc
data16
popa
jb
pop
dec
imul
je
push
imul
dec
push
pop
inc
jne
jb
outsb
je
gs
imul
insb
outsl
outsl
outsb
pop
dec
outsl
je
data16
add
add
push
pop
adc
push
pop
adc
push
pop
adc
pop
adc
pop
adc
add
jp
pop
xor
add
add
pop
popa
sub
pop
sub
add
add
jno
and
and
and
jl
daa
pop
pop
daa
pop
sub
sub
add
add
or
or
sub
add
pop
xor
inc
sub
add
xor
add
add
pop
popa
sub
pop
sub
bound
pop
and
sub
add
add
pop
popa
sub
xor
add
push
pop
adc
push
pop
adc
push
pop
adc
pop
adc
pop
adc
inc
push
push
inc
pop
inc
inc
dec
dec
push
inc
push
push
inc
dec
add
add
push
pop
adc
push
pop
adc
push
pop
adc
pop
adc
pop
adc
data16
popa
jb
pop
dec
imul
je
push
imul
dec
push
pop
inc
jne
jb
outsb
je
gs
imul
insb
outsl
outsl
outsb
pop
dec
outsl
je
data16
add
add
roll
add
xor
add
add
add
add
add
add
add
add
decl
add
add
adc
jb
adc
jns
adc
jae
adc
jae
adc
add
adc
add
adc
xchg
add
adc
add
adc
mov
adc
jae
adc
push
pop
adc
push
pop
adc
push
pop
adc
pop
adc
pop
adc
data16
popa
jb
pop
dec
imul
je
push
imul
dec
push
pop
inc
jne
jb
outsb
je
gs
imul
insb
outsl
outsl
outsb
pop
dec
outsl
je
data16
add
add
roll
add
xor
add
icebp
push
xor
addb
add
push
xor
addb
add
add
jbe
add
jo
outsl
imul
jae
imul
imul
jo
add
add
add
add
add
add
push
pop
adc
push
pop
adc
push
pop
adc
pop
adc
pop
adc
add
inc
add
push
add
add
pop
add
dec
add
add
dec
add
dec
add
dec
add
add
add
push
add
push
add
inc
add
inc
add
add
push
add
dec
add
inc
add
add
add
add
inc
add
add
push
add
dec
add
push
add
inc
add
inc
add
push
add
push
add
dec
add
add
add
dec
add
inc
add
dec
add
add
add
add
mov
push
pop
adc
push
pop
adc
push
pop
adc
pop
adc
pop
adc
add
add
das
add
push
add
dec
add
push
add
push
add
add
das
add
push
add
dec
add
add
sub
and
and
data16
popa
add
add
outsl
add
add
jb
and
cmp
add
add
add
add
inc
add
inc
add
inc
add
add
jb
arpl
cmp
add
add
outsl
add
add
add
add
add
add
inc
add
inc
add
inc
add
add
jb
arpl
cmp
add
add
add
add
jb
popa
add
add
outsl
add
add
jb
and
cmp
add
add
add
inc
add
inc
add
inc
add
add
jb
arpl
cmp
add
outsl
add
jae
cmp
add
add
add
arpl
outsl
add
add
add
add
add
sub
sub
and
and
data16
popa
add
add
outsl
add
add
jb
and
cmp
add
add
add
inc
add
inc
add
inc
add
add
jb
arpl
cmp
add
outsl
add
jae
cmp
add
add
das
add
add
add
add
inc
add
inc
add
inc
add
inc
add
add
add
add
dec
add
add
add
dec
add
inc
add
add
push
add
push
add
add
add
add
add
add
inc
add
dec
add
push
add
add
add
inc
add
dec
add
push
add
add
add
add
add
add
add
popa
add
add
jb
add
cmp
add
das
add
add
add
add
add
add
add
daa
add
add
repnz
xor
addb
add
dec
add
add
add
add
inc
sub
lret
rclb
mov
add
dec
flds
sbb
add
imul
imul
pop
add
push
push
push
inc
push
dec
xor
cs
insb
add
add
add
add
add
add
add
add
add
inc
rolb
add
add
inc
add
add
add
add
add
add
inc
pusha
cmp
sbb
mov
add
sub
sbb
jmp
loopne
adc
pop
adc
pop
das
mov
rcll
xchg
adc
add
push
or
cmp
rclb
cmpl
mov
in
adc
add
adc
in
adc
in
adc
add
adc
in
adc
out
adc
inc
loopne
adc
loope
adc
add
adc
adc
out
adc
add
pop
bound
cmp
outsl
bound
and
je
add
add
jae
bound
cmp
popaw
imul
je
add
imul
cmp
bound
bound
and
je
add
add
add
add
incl
add
add
jmp
adc
add
add
incl
add
add
jmp
adc
add
add
incl
add
add
add
add
push
add
clc
loope
adc
incl
add
add
add
adc
jg
adc
insb
add
mov
pop
adc
jg
adc
insb
add
fsub
pop
adc
jg
adc
insb
add
imul
and
jb
outsb
and
jae
je
outsl
outsb
add
jb
outsb
and
outsl
and
add
cltd
cltd
cltd
mov
add
add
popa
sub
ja
bound
jb
bound
popa
sub
add
add
popa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jecxz
adc
repz
adc
and
insb
outsl
arpl
imul
incl
add
add
cmc
add
add
incl
add
add
add
add
lcall
std
add
adc
incb
add
incl
add
add
std
add
loopne
add
add
add
add
add
add
jmp
add
adc
add
add
incl
add
add
add
add
incl
add
add
add
adc
add
add
incl
add
add
push
adc
add
add
incl
add
add
push
adc
or
adc
or
adc
imul
outsb
and
arpl
je
outsl
outsb
add
add
jecxz
adc
or
adc
incl
add
add
add
incl
add
add
push
adc
add
add
incl
add
add
dec
cmp
cmp
add
add
fs
dec
dec
dec
dec
and
and
jns
add
das
fs
jns
add
add
push
dec
add
inc
dec
add
inc
arpl
bound
add
add
dec
outsl
jbe
insl
bound
add
add
dec
arpl
gs
push
gs
gs
bound
add
add
addr16
je
add
insb
jns
add
add
outsb
add
add
inc
jo
imul
arpl
add
inc
bound
popa
jb
add
add
dec
popa
outsb
jne
jb
add
add
jbe
dec
arpl
gs
inc
jne
add
insb
add
outsb
add
jns
inc
jo
add
jb
inc
bound
dec
popa
outsb
add
je
jb
popa
jns
add
add
imul
jne
jae
popa
jns
add
add
outsb
gs
popa
jns
add
push
jne
jae
popa
jns
dec
outsl
outsb
fs
jns
add
outsb
fs
jns
add
je
inc
jb
add
add
add
add
outsb
add
outsb
add
jo
popa
insl
das
jo
add
add
add
add
call
sbb
adc
sbb
adc
add
add
incl
add
add
add
add
incl
add
add
add
add
incl
add
add
sub
adc
add
add
add
add
incl
add
add
sub
add
incl
add
add
add
add
incl
add
add
das
push
adc
jb
js
je
jb
arpl
jae
add
arpl
gs
insb
add
incl
add
add
add
add
decl
xor
add
incl
add
add
cmp
adc
add
add
incl
add
add
add
add
incl
add
add
cmp
adc
add
add
push
cmp
adc
cmp
adc
add
add
decl
adc
push
adc
add
add
incl
inc
push
adc
add
add
lcall
dec
push
adc
call
inc
push
adc
jmp
push
adc
push
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
test
test
test
test
test
test
test
test
test
test
adc
adc
adc
adc
adc
adc
adc
addl
addl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
sub
sub
sub
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
test
test
test
test
test
test
test
adc
adc
adc
adc
adc
adc
adc
addl
addl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
incl
add
add
dec
push
adc
add
add
add
add
add
add
add
add
add
add
sub
sub
sub
sub
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
test
test
test
test
test
test
test
adc
adc
adc
adc
adc
adc
adc
addl
addl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
pop
or
or
or
push
movups
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
and
es
sub
sub
sub
cs
xor
xor
xor
ss
cmp
cmp
cmp
ds
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
pusha
popa
bound
gs
imul
jo
jb
je
jbe
js
jp
jl
jle
add
push
dec
dec
inc
add
dec
push
dec
inc
push
dec
inc
add
dec
inc
pop
dec
dec
dec
inc
push
inc
push
pop
add
inc
push
pop
push
inc
add
add
dec
inc
pop
inc
dec
dec
dec
inc
push
inc
add
dec
inc
pop
inc
dec
dec
add
pop
cs
pop
add
add
incl
add
add
push
push
adc
incl
add
add
pop
push
adc
add
add
incl
add
add
pop
push
adc
add
add
pop
push
adc
pushl
pop
push
adc
push
adc
add
add
incl
add
add
pop
push
adc
add
add
pop
push
adc
ljmp
pop
push
adc
add
add
incl
add
add
jno
adc
incl
add
add
insb
jae
jb
add
jae
gs
popa
insb
jne
add
jae
gs
popa
insb
jne
add
jae
insb
insb
outsl
arpl
add
add
add
add
ljmp
adc
push
adc
add
add
lcall
jb
adc
add
add
incl
add
add
push
adc
add
add
incl
add
add
js
adc
arpl
jae
data16
push
imul
sub
and
outsb
je
insl
and
jb
jb
add
add
push
jb
addr16
insl
cmp
add
add
or
add
cs
jb
addr16
insl
and
insl
and
imul
outsb
add
inc
and
data16
outsl
jbe
jb
jne
and
jae
bound
outsb
and
arpl
and
imul
and
jb
jne
je
and
and
outsl
addr16
insl
daa
jae
imul
insb
and
popa
je
and
push
push
outsl
addr16
insl
and
outsb
outsb
outsl
je
jae
data16
jns
arpl
je
outsb
jne
and
arpl
imul
and
jae
or
ja
bound
je
jb
imul
or
inc
jne
data16
outsl
jbe
jb
jne
and
arpl
and
add
add
add
add
jae
arpl
imul
jb
outsl
data16
imul
outsb
and
jne
and
jae
bound
outsb
and
arpl
and
imul
or
jb
jne
je
and
and
outsl
addr16
insl
daa
jae
imul
insb
and
popa
je
and
push
push
outsl
addr16
insl
and
outsb
outsb
outsl
je
jae
data16
jns
arpl
je
outsb
jne
and
arpl
imul
and
jae
and
ja
bound
je
jb
imul
or
add
add
imul
outsb
and
arpl
imul
jne
and
arpl
and
add
call
push
adc
jnp
adc
add
add
incl
add
add
add
add
add
push
add
add
adc
add
add
add
add
inc
inc
add
xor
add
add
sub
push
pop
pop
or
aaa
xor
push
push
pop
add
and
or
add
add
pusha
push
add
jo
js
js
or
or
add
add
or
add
or
or
pop
or
add
sub
outsb
add
insb
add
add
add
add
outsb
jne
insb
sub
add
outsb
dec
outsl
outsb
push
jne
push
gs
push
push
popa
je
add
dec
popa
outsb
inc
bound
jb
jo
dec
popa
jns
jne
dec
jne
inc
jne
push
gs
arpl
jbe
arpl
add
add
add
incl
add
add
mov
adc
add
add
incl
add
add
mov
adc
add
add
incl
add
add
popl
adc
xor
xor
add
jle
push
inc
add
add
dec
jae
jb
arpl
jae
jb
gs
je
jb
push
jb
jae
outsb
je
add
dec
inc
push
dec
inc
dec
xor
add
add
incl
add
add
push
adc
add
add
incl
add
add
push
adc
add
add
incl
add
add
push
adc
add
add
incl
add
add
push
adc
add
add
incl
add
add
push
adc
add
add
incl
add
add
push
adc
add
add
jmp
cmpsl
push
adc
cmpsl
push
adc
add
add
jmp
test
adc
add
add
incl
add
add
test
adc
add
add
incl
add
add
add
add
incl
add
add
push
adc
add
add
incl
add
add
lods
push
adc
add
add
add
add
push
adc
insb
gs
insb
and
je
and
jno
outsb
arpl
add
inc
imul
jns
outsb
outsl
je
gs
jo
jns
inc
jne
arpl
outsb
and
je
imul
outsb
je
add
add
dec
outsl
and
imul
jbe
imul
inc
imul
je
outsl
and
add
add
jae
jne
arpl
fs
fs
outsl
arpl
popa
jbe
imul
gs
insb
je
je
outsl
and
add
add
inc
outsl
insl
popa
imul
jb
add
add
outsl
imul
jo
jo
add
and
outsb
jns
insb
imul
gs
fs
and
insb
and
jae
gs
add
add
jbe
insb
imul
add
add
and
popa
arpl
insb
gs
outsl
outsb
and
imul
and
and
add
dec
outsb
popa
jo
jb
jo
imul
dec
and
outsb
je
outsl
insb
and
gs
je
outsl
outsb
add
and
outsb
jns
outsl
jo
outsb
and
insb
gs
push
outsl
outsl
and
outsb
jns
outsl
jo
outsb
and
insb
gs
imul
gs
add
add
jbe
insb
imul
outsb
je
add
add
and
imul
jns
add
je
popa
and
arpl
jns
dec
outsl
and
arpl
fs
arpl
add
jo
outsl
jo
jb
insb
imul
imul
je
add
jae
jne
arpl
fs
arpl
push
outsb
imul
outsb
and
jb
jb
add
inc
popa
and
fs
jae
add
jb
imul
fs
imul
outsl
je
outsb
outsl
jne
push
arpl
add
add
jae
jne
arpl
je
insl
jo
jb
jb
insb
jns
jne
popa
jbe
imul
add
dec
outsl
and
imul
gs
gs
add
and
insb
and
arpl
jo
outsl
jb
inc
js
arpl
outsw
jb
popa
je
gs
outsl
jb
add
inc
jb
and
je
je
outsl
and
add
add
and
arpl
fs
arpl
outsl
jb
popa
fs
jae
add
add
jo
je
outsl
jne
jo
je
gs
outsl
jb
add
je
jb
jne
je
and
outsb
arpl
outsb
and
insb
insb
add
add
and
arpl
jo
outsl
arpl
jae
dec
outsl
and
arpl
imul
and
arpl
jns
add
dec
jo
jb
je
outsl
outsb
and
je
jo
jb
imul
and
jb
jb
add
add
jmp
scas
push
adc
scas
push
adc
ljmp
scas
push
adc
incl
add
add
push
adc
add
add
incl
add
add
mov
adc
add
add
decl
push
adc
push
adc
outsb
je
insl
and
jb
jb
add
push
dec
dec
push
push
and
jb
jb
or
add
push
dec
dec
inc
and
jb
jb
or
add
add
inc
dec
dec
and
jb
jb
or
add
add
add
xor
cmp
push
jo
insb
imul
and
outsb
outsb
outsl
je
jb
outsb
and
imul
and
je
jbe
and
jb
imul
je
and
arpl
jae
data16
cs
inc
push
and
outsb
je
insl
or
gs
jae
and
outsb
je
arpl
push
jo
imul
daa
jae
jae
jo
outsl
jb
and
insl
and
jb
insl
outsl
jb
and
outsw
jb
popa
je
outsl
outsb
cs
push
xor
cmp
outsb
popa
bound
je
and
imul
and
popa
jo
or
add
add
xor
aaa
or
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
insb
outsl
ja
outsl
and
imul
je
outsl
outsb
or
add
xor
ss
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
jae
imul
imul
imul
add
push
xor
xor
jo
jb
and
jb
jne
insb
and
outsb
arpl
outsb
and
insb
insb
or
push
xor
xor
or
and
outsl
jne
push
arpl
outsw
jb
pop
outsl
outsb
gs
je
popa
je
js
je
je
bound
or
add
add
xor
cmp
outsb
popa
bound
je
and
outsb
and
outsb
jae
insb
and
imul
add
push
xor
cmp
outsb
gs
arpl
and
popa
jo
gs
outsl
jb
or
add
add
xor
aaa
or
outsb
gs
arpl
and
insb
je
je
jb
popa
and
imul
jb
outsl
jb
or
add
add
xor
ss
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
je
jb
popa
and
popa
or
push
push
jo
insb
imul
and
jae
jb
jno
gs
gs
and
outsb
je
insl
and
je
jb
imul
je
imul
outsb
jne
jne
insb
and
jns
or
gs
jae
and
outsb
je
arpl
push
jo
imul
daa
jae
jae
jo
outsl
jb
and
insl
and
jb
insl
outsl
jb
and
outsw
jb
popa
je
outsl
outsb
cs
push
xor
cmp
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
outsb
jbe
jb
outsb
insl
outsb
je
or
push
xor
cmp
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
popa
jb
jne
outsb
je
or
push
xor
xor
insb
outsl
popa
je
outsb
and
imul
and
fs
add
outsb
je
insl
and
jb
jb
or
push
jb
addr16
insl
cmp
add
add
add
add
push
mov
push
adc
imul
inc
jb
je
arpl
push
arpl
outsb
inc
outsb
fs
jo
outsb
inc
outsl
jne
je
add
add
add
incl
rolb
add
add
or
add
xor
popa
add
add
rcl
adc
push
add
push
push
add
xor
add
xor
xor
add
add
add
xor
bound
add
add
dec
dec
add
dec
dec
add
xor
add
xor
xor
add
add
xor
arpl
add
add
push
inc
add
push
inc
add
xor
add
xor
xor
add
add
add
xor
data16
add
mov
pop
adc
dec
add
dec
add
xor
add
xor
xor
add
xor
add
add
jl
pop
adc
inc
add
adc
inc
add
xor
add
xor
xor
add
xor
add
add
insb
pop
adc
push
add
push
push
add
xor
add
xor
xor
add
or
add
cmp
popa
add
add
fs
pop
adc
dec
add
adc
pop
add
xor
add
xor
xor
add
add
xor
xor
add
add
push
inc
add
adc
dec
add
xor
add
xor
xor
add
or
add
arpl
aaa
add
add
dec
pop
adc
add
adc
push
add
xor
add
xor
xor
add
or
add
arpl
cmp
add
add
pop
adc
inc
add
pop
adc
push
add
xor
add
xor
xor
add
or
add
arpl
popa
add
add
sbb
pop
adc
dec
add
push
push
add
xor
add
xor
xor
add
add
xor
arpl
add
add
push
inc
add
pop
adc
dec
add
xor
add
xor
xor
add
adc
add
xor
popa
add
add
fs
pop
adc
inc
add
pop
adc
dec
add
xor
add
xor
xor
add
add
xor
xor
add
add
push
push
add
aad
adc
inc
add
xor
add
xor
xor
add
adc
add
xor
popa
add
add
fs
pop
adc
inc
add
aad
adc
dec
add
xor
add
xor
xor
add
add
xor
arpl
add
add
push
dec
add
aad
adc
add
xor
add
xor
xor
add
sbb
add
cmp
popa
add
add
fs
pop
adc
inc
add
aad
adc
dec
add
xor
add
xor
xor
add
sbb
add
arpl
cmp
add
add
pop
adc
push
add
aad
adc
inc
add
aaa
add
add
add
xor
add
sbb
add
arpl
popa
add
add
fs
pop
adc
inc
add
dec
add
xor
add
xor
xor
add
and
add
xor
popa
add
add
fs
pop
adc
push
add
inc
dec
add
xor
add
xor
xor
add
and
add
xor
popa
add
add
fs
pop
adc
dec
add
dec
add
xor
add
xor
xor
add
sub
add
cmp
popa
add
add
fs
pop
adc
push
add
push
add
xor
add
xor
xor
add
sub
add
arpl
popa
add
add
fs
pop
adc
push
add
push
inc
add
xor
add
xor
xor
add
xor
add
xor
popa
add
add
fs
pop
adc
inc
add
inc
push
add
xor
add
xor
xor
add
xor
add
xor
popa
add
add
fs
pop
adc
dec
add
pop
adc
dec
add
xor
add
xor
xor
add
cmp
add
cmp
popa
add
add
fs
pop
adc
pop
add
pop
adc
pop
add
xor
add
xor
xor
add
cmp
add
arpl
popa
add
add
fs
pop
adc
pop
add
adc
pop
add
xor
add
xor
xor
add
jb
addr16
jns
add
add
jne
jne
jns
inc
push
add
inc
arpl
outsl
jb
inc
jb
outsb
je
outsb
popa
add
add
jb
add
add
inc
outsl
insb
outsl
insl
bound
add
add
push
outsb
gs
gs
popa
add
add
imul
push
gs
bound
add
push
outsl
jne
push
imul
push
popa
outsb
popa
insl
popa
add
dec
jne
gs
bound
jb
add
inc
outsl
jae
popa
and
arpl
add
imul
add
popa
je
insl
popa
insb
popa
add
add
outsb
popa
fs
add
push
jo
outsb
imul
outsl
fs
and
jb
add
add
jae
jb
insb
imul
insb
imul
je
imul
popa
outsb
add
inc
gs
imul
imul
popa
outsb
imul
jno
add
push
ja
fs
add
push
ja
imul
insb
popa
outsb
add
gs
popa
outsb
imul
popa
outsb
arpl
add
outsb
arpl
add
outsb
insb
popa
outsb
add
outsb
outsb
imul
imul
popa
outsb
imul
jb
imul
push
outsl
jb
add
or
sbb
adc
add
or
adc
or
adc
inc
add
push
add
dec
add
adc
inc
add
adc
push
add
adc
push
add
adc
inc
add
pop
adc
inc
add
adc
dec
add
pop
adc
dec
add
pop
adc
dec
add
fadds
adc
dec
add
pop
adc
dec
add
pop
adc
dec
add
pop
adc
inc
add
xlat
pop
adc
push
add
xlat
pop
adc
inc
add
xlat
pop
adc
push
add
xlat
pop
adc
add
inc
push
add
inc
push
add
push
inc
add
inc
add
imul
je
jae
add
jne
imul
outsl
insl
add
je
imul
and
popa
outsl
add
add
jne
push
gs
add
jne
push
imul
jae
jne
push
gs
add
jne
push
imul
jae
outsl
jbe
imul
jo
gs
outsl
sub
add
sub
popa
add
add
jo
and
imul
outsb
jp
add
ja
jp
popa
insb
popa
outsb
add
outsb
addr16
add
add
insb
insb
popa
outsb
add
gs
je
bound
je
imul
insb
popa
outsb
add
arpl
add
arpl
outsb
popa
add
add
imul
gs
arpl
add
add
mov
pop
adc
push
add
push
add
dec
push
add
adc
inc
add
adc
inc
add
pop
adc
inc
add
adc
dec
add
pop
adc
dec
add
pop
adc
push
add
adc
dec
add
fiadds
adc
push
add
pop
adc
dec
add
fiadds
adc
push
add
fldl
adc
inc
add
fldl
adc
push
add
fldl
adc
inc
add
fldl
adc
dec
add
inc
add
dec
inc
add
dec
add
dec
add
dec
pop
add
pop
adc
push
add
adc
push
add
pop
adc
inc
add
push
add
fldl
adc
push
add
fldl
adc
inc
add
fldl
adc
inc
add
faddl
adc
dec
add
faddl
adc
push
add
faddl
adc
add
faddl
adc
add
dec
add
push
add
dec
add
adc
push
add
pop
adc
push
add
adc
push
add
pop
adc
dec
add
faddl
adc
inc
add
pop
adc
push
add
pop
adc
inc
add
fildl
adc
dec
add
fildl
adc
dec
add
fildl
adc
inc
add
push
inc
add
push
inc
add
inc
add
push
inc
add
adc
dec
add
adc
dec
add
adc
dec
add
fildl
adc
dec
add
fildl
adc
inc
add
pop
adc
pop
add
pop
adc
push
add
fiaddl
adc
push
add
fiaddl
adc
pop
add
fiaddl
adc
push
add
inc
add
push
add
dec
inc
add
push
add
dec
push
add
popa
add
add
jne
add
jae
imul
ja
imul
insb
popa
outsb
add
popa
outsb
imul
gs
gs
popa
add
add
popa
outsb
imul
addr16
jns
jae
popa
outsb
imul
jb
outsl
and
arpl
jae
popa
outsb
imul
jne
add
add
popa
outsb
imul
popa
addr16
jns
add
add
popa
outsb
imul
popa
insl
popa
add
jae
popa
outsb
imul
popa
jb
addr16
add
add
popa
outsb
imul
gs
add
jae
popa
outsb
imul
imul
popa
outsb
imul
fs
popa
jae
add
add
popa
outsb
imul
je
insl
popa
insb
popa
add
add
popa
outsb
imul
jae
insb
jbe
outsl
jb
jae
popa
outsb
imul
popa
outsl
jb
jae
popa
outsb
imul
imul
jb
jo
bound
add
jae
popa
outsb
imul
je
and
arpl
add
popa
outsb
imul
outsl
insl
bound
add
add
jae
popa
outsb
imul
insb
add
add
popa
outsb
imul
imul
popa
outsb
imul
outsb
je
outsb
popa
add
add
jb
jne
jne
jae
sub
imul
add
jb
imul
outsl
jb
imul
add
jb
imul
insl
popa
insb
add
add
outsb
outsl
jb
imul
je
insb
imul
jae
add
add
imul
insb
imul
gs
popa
outsb
sub
jae
add
add
jb
popa
outsb
sub
insl
bound
jb
add
add
jb
popa
outsb
sub
je
outsb
jae
imul
popa
outsb
sub
jb
popa
outsb
add
outsb
arpl
jae
imul
data16
outsb
arpl
insb
jne
gs
bound
jb
add
add
outsb
arpl
arpl
popa
imul
outsb
arpl
bound
imul
insb
imul
add
insb
imul
add
insb
imul
add
insb
imul
outsb
imul
outsl
bound
outsl
add
add
insb
imul
je
and
jb
arpl
add
add
insb
imul
add
insb
imul
popa
imul
insb
imul
add
insb
imul
imul
add
outsb
insb
imul
add
insb
imul
imul
insb
imul
add
insb
imul
jb
arpl
add
add
fs
arpl
bound
imul
push
gs
imul
arpl
outsb
gs
sub
popa
jo
jb
add
add
imul
imul
gs
arpl
outsb
gs
sub
imul
add
add
arpl
outsb
gs
add
imul
arpl
popa
imul
bound
imul
je
popa
insb
imul
gs
arpl
sub
imul
popa
insl
gs
arpl
and
insb
imul
popa
insl
gs
arpl
add
add
dec
inc
push
add
push
add
jb
imul
outsl
jb
imul
add
incl
add
add
push
adc
je
jb
arpl
jae
imul
popa
je
outsl
outsb
add
je
jae
jb
bound
arpl
outsw
jb
popa
je
outsl
outsb
inc
add
add
je
popa
jae
inc
arpl
gs
outsl
jo
jo
add
je
arpl
gs
imul
gs
popa
addr16
outsl
js
add
gs
xor
fs
insb
add
add
add
incl
add
add
loopne
adc
add
add
incl
add
add
push
adc
add
add
call
push
adc
push
adc
dec
in
adc
in
adc
cmp
out
adc
add
add
jmp
adc
push
adc
and
inc
dec
add
xor
dec
dec
inc
add
add
and
inc
add
add
and
inc
dec
add
add
add
decl
clc
push
adc
clc
push
adc
jmp
push
adc
add
shlb
lock
adc
add
push
jae
adc
add
add
add
add
incl
add
add
add
add
loopne
adc
add
add
add
add
pop
adc
add
add
adc
pop
adc
add
add
add
incl
add
add
add
add
or
add
add
add
add
incl
add
add
add
add
pop
adc
add
add
add
add
add
inc
jne
adc
jb
adc
add
add
add
add
incl
add
add
add
add
adc
add
add
add
add
incl
add
add
add
add
loopne
adc
loopne
adc
add
add
add
add
pop
adc
add
add
adc
loope
adc
adc
add
add
add
add
incl
add
add
add
add
pop
adc
loopne
adc
loopne
adc
add
add
add
add
adc
add
add
adc
adc
add
add
add
incl
add
add
add
add
add
add
add
add
add
add
pop
adc
jne
adc
add
add
add
add
incl
add
add
add
add
loope
adc
add
add
add
add
loope
adc
add
add
jne
adc
loope
adc
jb
adc
add
add
add
add
incl
add
add
add
add
pop
adc
loopne
adc
add
add
add
add
pop
adc
add
add
jb
adc
loop
adc
jb
adc
add
add
add
add
incl
add
add
add
add
adc
pop
adc
loopne
adc
add
add
add
add
adc
add
add
jb
adc
adc
or
add
add
add
add
incl
add
add
add
add
loop
adc
loopne
adc
add
add
add
add
add
add
or
enter
and
or
add
add
add
add
incl
add
add
add
add
loop
adc
loopne
adc
add
add
add
add
pop
adc
add
add
or
adc
pop
adc
jbe
adc
add
add
add
add
incl
add
add
add
add
pop
adc
add
add
add
add
adc
add
add
jbe
adc
adc
loopne
adc
add
add
add
add
pop
adc
add
add
pop
adc
add
add
add
incl
add
add
add
add
pop
adc
add
add
add
add
add
mov
or
enter
add
add
push
testb
dec
stc
add
add
push
add
push
add
incl
add
incl
add
add
add
pop
add
pop
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
pop
add
add
add
add
add
add
add
add
add
add
add
pop
add
pop
add
add
add
add
add
add
add
add
add
pop
add
pop
add
add
add
add
add
add
add
add
add
pop
add
pop
add
add
add
add
add
add
add
add
pop
add
pop
add
add
pop
add
add
pop
add
pop
pop
add
pop
pop
add
pop
pop
add
pop
pop
add
or
add
pop
add
pop
add
or
add
or
add
or
add
or
add
pop
add
or
add
or
add
pop
add
pop
add
or
add
or
add
or
add
pop
add
pop
add
pop
add
or
add
or
add
or
add
or
add
or
add
or
add
pop
add
or
add
or
add
or
add
or
add
or
pop
add
pop
add
pop
add
or
pop
add
pop
add
sysret
add
pop
add
adc
add
adc
add
adc
add
pop
add
pop
add
pop
add
adc
add
adc
add
adc
add
adc
add
pop
add
pop
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
pop
add
adc
add
adc
add
adc
add
adc
add
adc
pop
add
pop
add
pop
add
push
pop
add
pop
add
push
pop
add
push
pop
add
push
pop
add
pop
add
pop
add
pop
add
pop
add
pop
pop
add
sbb
add
sbb
add
sbb
add
pop
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
pop
add
pop
add
sbb
add
sbb
add
sbb
add
sbb
add
pop
add
pop
add
sbb
add
sbb
add
sbb
add
sbb
add
pop
add
pop
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
pop
add
pop
add
sbb
pop
add
sbb
pop
add
pop
add
sbb
pop
add
sbb
pop
add
push
pop
add
push
pop
add
push
pop
add
and
add
and
add
pop
add
pop
add
and
add
and
add
and
add
and
add
pop
add
pop
add
and
add
and
add
and
add
and
add
and
add
pop
add
and
add
and
add
and
add
and
add
and
add
and
add
pop
add
pop
add
and
add
and
pop
add
daa
pop
add
daa
pop
add
sub
add
sub
add
pop
add
pop
add
sub
add
sub
add
pop
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
pop
add
pop
add
pop
add
sub
add
sub
add
sub
add
sub
add
sub
add
pop
add
sub
add
sub
add
sub
pop
add
cs
add
pop
add
cs
add
cs
add
cs
add
das
pop
add
pop
add
das
pop
add
das
pop
add
xor
add
pop
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
pop
add
pop
add
xor
add
xor
add
xor
add
xor
add
xor
add
pop
add
xor
add
xor
add
xor
add
xor
add
xor
add
pop
add
pop
add
xor
add
xor
add
xor
add
xor
pop
add
pop
add
pop
add
xor
pop
add
xor
pop
add
pop
add
pop
add
ss
add
ss
add
aaa
pop
add
aaa
pop
add
aaa
pop
add
pop
add
pop
add
aaa
pop
add
cmp
add
add
cmp
add
pop
add
pop
add
cmp
add
cmp
add
cmp
add
cmp
add
pop
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
pop
add
pop
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
cmp
add
cmp
pop
add
cmp
pop
add
pop
add
pop
add
cmp
pop
add
incl
add
add
incl
add
add
add
add
add
add
add
add
add
add
jmp
xchg
sbb
add
add
jmp
add
loopne
pop
adc
add
add
or
add
add
incl
add
add
add
add
add
add
add
adc
pop
adc
add
add
pop
adc
incl
add
add
add
add
push
adc
add
add
push
adc
incl
add
add
and
adc
add
add
add
add
add
add
add
add
adc
add
add
inc
ljmp
je
pop
adc
add
add
add
add
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
push
adc
add
add
incl
adc
add
add
incl
adc
add
add
incl
adc
add
add
add
add
add
add
add
xorl
add
add
add
add
add
add
pop
adc
add
add
add
add
add
add
add
sbb
pop
adc
add
add
movsb
ljmp
sub
pop
adc
add
add
add
add
push
incl
adc
add
add
jo
pop
adc
add
add
call
add
adc
add
add
add
adc
add
add
add
adc
add
add
add
adc
add
add
xchg
jmp
adc
add
add
incl
add
add
incl
add
add
add
add
add
add
add
add
add
add
jmp
adc
add
add
shr
pop
adc
add
add
jmp
adc
add
add
add
add
incl
add
add
add
add
pop
adc
incl
add
add
lcall
pop
adc
add
add
add
add
add
add
add
add
add
add
add
inc
in
pop
adc
add
add
and
pop
adc
add
add
pop
adc
add
add
add
add
incl
add
add
add
add
pop
adc
incl
add
add
add
add
add
add
add
add
add
add
add
add
sub
adc
add
add
add
add
add
add
incl
add
add
incl
add
add
add
add
add
add
add
add
add
add
in
pop
adc
add
add
fsubr
pop
adc
add
add
in
pop
adc
add
add
add
add
jmp
add
add
sub
pop
adc
add
add
incl
add
add
add
add
add
adc
incl
add
add
inc
add
add
add
add
add
add
add
add
add
fs
pop
adc
add
add
dec
in
pop
adc
add
add
adc
add
add
add
add
incl
add
add
incl
add
add
add
add
add
add
add
mov
pop
adc
add
add
movsb
in
pop
adc
add
add
in
pop
adc
add
add
add
add
push
add
adc
add
add
hlt
in
pop
adc
add
add
incl
add
add
incl
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
cmp
pop
adc
add
add
add
add
add
add
add
add
pop
adc
add
add
sbb
pop
adc
add
add
pop
adc
add
add
add
add
jmp
add
adc
add
add
pushf
out
pop
adc
add
add
incl
pop
adc
add
add
shr
adc
add
add
jmp
pop
adc
add
add
in
pop
adc
add
add
inc
add
adc
add
add
or
pop
adc
add
add
add
incl
add
add
add
fisttpl
push
adc
add
add
add
incl
add
add
add
popa
or
adc
add
add
pop
adc
pop
adc
add
add
push
adc
add
add
adc
jmp
add
adc
add
add
sub
adc
add
add
incl
add
add
movsb
out
pop
adc
add
add
jmp
add
add
enter
jmp
add
adc
add
add
in
out
pop
adc
add
add
incl
add
adc
add
add
je
adc
add
add
add
add
add
add
add
add
lock
adc
add
add
adc
pop
adc
add
add
lock
adc
add
add
add
add
jmp
add
adc
add
add
ljmp
add
adc
add
add
add
add
add
add
add
add
add
add
add
mov
pop
adc
add
add
push
add
add
add
add
add
add
incl
pop
adc
decl
pop
adc
call
pop
adc
add
add
enter
pushl
pop
adc
add
add
cld
lock
adc
add
add
call
add
add
and
pop
adc
add
add
jmp
add
add
inc
icebp
pop
adc
add
add
pushl
add
add
add
add
addl
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
call
add
adc
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
call
add
add
enter
add
add
clc
icebp
pop
adc
add
add
add
add
push
add
adc
clc
add
adc
add
add
add
adc
add
add
add
adc
add
add
sub
pop
adc
add
add
incl
pop
adc
add
add
pop
adc
add
add
pop
adc
add
add
fs
adc
add
add
pushl
pop
adc
add
add
cwtl
repnz
adc
add
add
incl
add
add
incl
add
add
mov
adc
add
add
add
add
add
add
add
add
repnz
adc
add
add
mov
add
add
repnz
adc
add
add
jb
adc
add
add
incl
add
add
add
add
add
add
add
in
jb
adc
add
add
incl
add
add
add
add
mov
adc
add
add
repz
adc
pop
adc
pop
adc
add
add
add
add
adc
inc
add
adc
add
add
fs
adc
add
add
incl
add
add
add
add
add
adc
incl
add
add
lea
adc
add
add
add
add
add
add
add
add
add
add
mov
pop
adc
add
add
add
add
add
add
incl
add
adc
add
add
loopne
pop
adc
add
add
jmp
add
adc
add
add
pop
adc
add
add
add
add
add
add
add
pop
adc
add
add
jmp
pop
adc
ljmp
pop
adc
add
add
inc
hlt
pop
adc
add
add
incl
decl
add
add
add
add
insb
hlt
pop
adc
add
add
pushl
add
add
add
add
test
add
add
add
add
add
add
add
enter
add
add
add
add
add
add
add
add
fdiv
pop
adc
add
add
mov
add
add
hlt
pop
adc
add
add
add
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
add
add
add
add
add
add
add
add
add
dec
cmc
pop
adc
add
add
add
add
add
add
add
add
adc
add
add
sub
pop
adc
add
add
adc
add
add
add
add
incl
add
add
add
add
add
adc
incl
add
add
mov
adc
add
add
add
add
add
add
add
add
cmc
pop
adc
add
add
mov
pop
adc
add
add
cmc
pop
adc
add
add
add
add
incl
add
add
or
xchg
sbb
add
add
testb
jmp
add
add
sub
add
ss
xchg
sbb
add
add
pop
adc
add
add
call
pop
adc
add
add
adc
add
add
push
add
add
call
add
add
xchg
testb
or
or
add
add
incl
add
add
add
add
add
add
add
mov
repz
adc
pop
adc
add
add
add
add
testb
pushl
add
add
add
stc
ret
add
add
add
add
add
add
add
add
add
sbb
pop
adc
add
add
add
add
add
add
add
sub
pop
adc
add
add
hlt
testb
add
add
cmp
pop
adc
add
add
add
add
call
add
add
fadds
xchg
sbb
add
add
add
add
incl
add
add
incl
add
add
add
add
add
add
add
mov
add
add
lods
testl
add
testl
add
add
add
incl
push
pop
adc
add
add
push
pop
adc
add
add
push
pop
adc
add
add
push
pop
adc
add
add
push
pop
adc
add
add
push
pop
adc
add
add
push
pop
adc
add
add
adc
add
add
pop
adc
add
add
cld
testl
add
pushl
pop
adc
add
add
pop
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pusha
clc
pop
adc
add
add
clc
pop
adc
add
add
add
add
pushl
add
add
add
add
push
pop
adc
add
add
push
pop
adc
add
add
push
pop
adc
add
out
pop
adc
add
repnz
pop
adc
add
add
push
pop
adc
add
add
pop
pop
adc
add
add
pop
pop
adc
add
add
pop
pop
adc
add
add
pop
pop
adc
add
add
pop
adc
add
aas
pop
pop
adc
pop
pop
adc
pop
pop
adc
add
add
pop
adc
add
add
pop
adc
add
add
or
pop
adc
add
add
incl
add
add
mov
add
add
jmp
add
add
fdivr
pop
adc
add
add
inc
pop
pop
adc
add
add
add
pop
adc
add
add
jmp
pop
pop
adc
add
add
pop
pop
adc
add
add
pop
pop
adc
add
add
and
pop
adc
add
add
call
or
adc
add
add
pop
cli
pop
adc
add
add
incl
add
add
add
add
or
adc
incl
add
add
sbb
add
add
add
add
add
add
add
xchg
cli
pop
adc
add
add
jl
pop
adc
add
add
add
add
add
incl
add
add
add
add
pop
adc
incl
add
add
add
add
add
add
add
add
add
add
add
in
cli
pop
adc
add
add
aam
pop
adc
add
add
cli
pop
adc
add
add
add
add
pushl
pop
adc
add
add
pop
adc
add
add
add
add
add
add
add
cmpsl
or
adc
add
add
sub
pop
adc
add
add
inc
or
adc
add
add
or
adc
add
add
js
pop
adc
add
add
jmp
or
adc
add
add
or
adc
add
add
movsb
sti
pop
adc
add
add
incl
or
adc
add
add
or
adc
add
add
sar
pop
adc
add
add
jmp
or
adc
add
add
or
adc
add
add
cld
sti
pop
adc
add
add
incl
add
add
incl
add
add
incl
pop
adc
add
add
add
add
add
add
pop
adc
add
add
add
add
add
add
pop
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
adc
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cld
pop
adc
add
add
add
add
add
add
add
add
cld
pop
adc
add
add
add
add
add
add
add
call
add
add
add
add
add
add
add
add
cld
pop
adc
add
add
sub
pop
adc
add
add
std
pop
adc
add
add
add
add
add
add
or
add
add
incl
add
add
add
add
add
add
add
pushf
std
pop
adc
add
add
incl
add
add
add
add
incl
add
add
decl
add
add
add
add
add
add
add
add
add
add
add
or
adc
add
add
or
adc
add
add
or
adc
add
add
add
add
add
add
add
add
add
add
or
adc
add
add
add
add
add
add
add
add
add
add
add
add
pop
adc
add
or
add
or
add
add
pop
adc
add
add
sar
pop
adc
add
add
pop
adc
add
add
add
add
incl
or
adc
incl
add
add
add
add
or
adc
add
add
or
adc
add
add
or
adc
or
adc
add
add
adc
dec
add
add
add
pushf
jb
adc
call
add
add
dec
add
add
add
add
add
push
add
add
add
add
incb
adc
add
add
lods
incb
adc
add
add
pop
adc
add
add
add
add
incl
pop
adc
add
add
inc
incl
adc
add
add
jmp
pop
adc
add
add
pop
adc
add
add
push
add
add
incl
add
add
add
add
add
add
add
xchg
or
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
pop
adc
add
ret
adc
or
adc
add
add
add
add
or
adc
add
add
or
adc
add
add
add
je
add
lret
push
add
inc
pop
add
sbbb
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
adc
add
add
xchg
incl
adc
add
adc
add
add
add
add
incl
or
adc
add
add
add
or
jmp
or
adc
add
add
sub
or
incl
add
add
incl
add
add
outsb
add
add
add
add
add
pop
add
adc
add
add
dec
add
adc
add
add
adc
add
add
add
add
call
pop
adc
add
add
pushf
add
adc
add
add
incl
add
add
incl
add
add
outsl
add
add
add
add
add
rolb
or
and
add
rolb
adc
add
add
add
adc
add
add
add
add
incl
add
add
adc
or
jmp
add
add
xor
or
inc
or
adc
add
add
pop
add
adc
add
add
incl
add
add
add
add
or
adc
incl
add
add
js
adc
add
add
add
add
add
add
add
add
xchg
sbb
add
add
adc
add
add
add
add
add
incl
or
adc
incl
add
add
add
add
add
add
add
add
add
add
add
in
add
adc
add
add
aam
or
add
add
cld
add
adc
add
add
add
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
add
je
add
add
add
add
add
dec
add
adc
add
add
add
add
add
add
add
add
adc
add
add
sub
or
add
add
insb
add
adc
add
add
add
add
pushl
or
adc
add
add
jg
adc
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
call
add
add
mov
or
add
add
clc
add
adc
add
add
add
add
incl
add
add
add
add
pop
adc
incl
add
add
add
add
add
add
add
add
add
add
add
push
add
adc
add
add
cmp
or
add
add
fs
adc
add
add
add
add
incl
add
add
add
add
pop
adc
incl
add
add
addb
add
add
add
add
add
add
add
add
lods
add
adc
add
add
xchg
add
adc
add
add
add
add
add
incl
add
add
add
add
incl
add
add
add
add
add
add
add
add
add
add
add
add
or
and
add
in
add
adc
add
add
add
add
add
incl
add
add
add
add
incl
add
add
addl
add
add
add
add
add
add
add
add
pop
add
xchg
sbb
add
add
adc
add
add
adc
add
add
add
add
incl
add
add
incl
add
add
add
add
add
add
add
add
add
add
xchg
sbb
add
add
add
mov
add
add
add
add
jmp
or
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
or
add
add
add
add
add
add
add
add
and
or
and
add
in
add
add
xor
or
incl
or
add
dec
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
or
and
add
js
or
add
add
rolb
adc
add
add
add
add
jmp
or
xchg
sbb
add
add
or
incl
pop
adc
add
add
sub
or
jmp
pop
adc
add
add
pop
adc
add
add
dec
pop
or
incl
add
add
add
add
incl
add
add
add
add
add
add
add
add
add
add
add
nop
pop
or
and
add
js
or
add
add
mov
add
add
add
add
incl
add
add
incl
add
add
jmp
add
add
add
add
add
add
add
add
or
add
aam
pop
adc
add
add
add
add
add
add
add
adc
or
and
add
rolb
or
add
add
and
or
incl
add
add
incl
add
add
incl
add
add
incl
add
add
push
or
add
sti
or
add
push
push
pop
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
call
push
pop
adc
add
add
test
add
dec
stos
add
movsl
stos
add
lcall
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
adc
add
add
add
add
add
add
add
add
or
adc
add
add
add
add
add
add
add
add
or
adc
add
add
push
or
adc
add
lock
adc
add
add
add
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
pushl
push
pop
adc
add
add
add
add
add
add
push
pop
adc
add
add
pop
adc
add
add
add
add
add
add
pop
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
lcall
pop
adc
add
add
mov
adc
add
add
add
add
mov
add
loopne
add
loop
add
mov
add
add
add
add
add
add
add
add
add
hlt
or
adc
add
add
add
add
add
add
or
pop
add
add
add
add
add
add
add
add
or
or
add
or
add
or
add
add
or
push
add
add
add
add
add
add
add
add
or
adc
add
adc
add
adc
add
add
add
inc
or
adc
add
add
pop
or
adc
add
add
adc
add
add
add
add
incl
add
add
incl
add
add
pushl
pop
adc
add
add
pop
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
pop
adc
push
pop
adc
add
add
push
pop
adc
push
pop
adc
add
add
push
pop
adc
add
add
push
pop
adc
sysret
adc
add
add
sysret
adc
add
adc
pop
adc
add
add
mov
add
adc
add
add
add
add
add
cwtl
or
adc
add
add
add
add
add
add
add
test
or
and
add
call
add
add
add
add
add
add
pushl
sysret
adc
add
add
sysret
adc
add
add
pop
adc
add
add
cld
or
adc
add
add
incl
add
add
incl
add
add
jmp
pop
adc
add
add
pop
adc
add
add
pop
adc
add
jnp
pop
adc
sysret
adc
add
add
add
add
add
add
add
scas
sysret
adc
add
add
add
add
sysret
adc
add
rorb
pop
adc
sysret
adc
sysret
adc
sysret
adc
add
add
sysret
adc
add
add
pop
adc
adc
adc
adc
adc
add
and
pop
adc
adc
adc
adc
adc
adc
adc
add
add
pop
adc
add
add
pop
adc
add
add
adc
add
add
pop
adc
add
jp
pop
adc
adc
adc
adc
adc
adc
adc
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
add
add
add
add
add
add
add
jo
or
and
add
xor
adc
add
add
add
add
add
add
push
adc
adc
add
add
mov
or
call
adc
adc
incl
add
add
incl
add
add
add
add
add
add
add
add
add
add
add
in
or
xchg
sbb
add
add
or
add
cld
or
add
add
add
pushl
adc
adc
add
add
cmp
pop
adc
add
add
hlt
add
add
add
add
add
add
add
add
add
dec
push
or
and
add
sub
or
add
add
pop
push
or
call
pop
adc
add
add
mov
or
pushl
pop
adc
add
add
mov
or
call
add
add
testb
add
add
add
add
add
add
add
add
in
push
or
and
add
aam
or
add
add
cld
push
or
pushl
add
add
sub
or
call
adc
adc
add
add
push
invd
adc
add
add
incl
add
add
add
add
adc
adc
add
add
adc
adc
add
add
adc
adc
incl
add
add
add
add
add
add
add
add
add
pushf
invd
adc
add
add
je
or
add
add
lods
invd
adc
add
add
add
add
jmp
adc
adc
add
add
adc
adc
add
add
add
add
add
add
add
add
add
add
invd
adc
add
add
fmull
or
add
add
or
or
incl
pop
adc
add
add
incb
adc
add
add
add
add
add
add
add
add
adc
add
add
cmp
or
add
add
adc
adc
add
add
add
add
jmp
pop
adc
add
add
xchg
adc
adc
add
add
incl
add
add
mov
add
add
jmp
ljmp
add
add
add
add
inc
adc
adc
add
add
fcoml
or
jmp
adc
adc
add
add
and
or
incl
adc
adc
add
add
adc
adc
add
add
inc
adc
adc
add
add
jmp
adc
adc
add
add
jo
or
incl
pop
adc
add
add
pop
adc
add
add
pop
adc
add
add
pop
adc
add
add
adc
add
add
pop
adc
adc
adc
add
add
add
add
add
add
add
add
add
add
xchg
sbb
add
xchg
adc
adc
add
add
jmp
adc
adc
add
add
adc
adc
add
add
adc
or
incl
adc
adc
add
add
adc
adc
add
add
adc
adc
add
add
adc
adc
add
sub
adc
adc
adc
incl
add
add
add
add
add
push
add
add
add
add
add
add
adc
add
add
cmp
or
add
add
mov
or
incl
add
add
add
add
pop
adc
add
add
pop
adc
add
add
pop
adc
incl
add
add
add
add
add
add
add
add
add
in
or
and
add
mov
add
add
adc
adc
add
add
add
add
incl
add
add
incl
add
add
add
add
add
add
add
xor
or
and
add
and
or
add
add
inc
adc
adc
add
add
add
add
call
add
add
add
add
add
add
add
add
je
or
incl
add
add
incl
add
add
add
add
add
add
add
add
add
add
adc
adc
add
add
mov
or
add
add
rclb
or
call
adc
adc
add
add
add
adc
add
add
incl
add
add
add
add
adc
adc
incl
add
add
add
add
add
add
add
add
add
add
or
and
add
and
or
add
add
dec
adc
adc
add
add
add
add
call
adc
lcall
adc
xchg
sbb
add
add
adc
add
add
pushl
adc
xchg
sbb
add
add
add
add
call
pop
adc
add
add
int3
adc
adc
add
add
pushl
pop
adc
add
add
lock
adc
add
add
incl
add
add
add
add
add
add
incl
add
add
jp
adc
add
add
add
add
add
add
add
add
xchg
sbb
add
adc
or
add
add
inc
adc
add
add
add
pushl
add
add
add
add
adc
add
xlat
adc
add
in
pop
adc
add
repz
add
add
pop
adc
add
add
add
add
push
pop
adc
add
add
push
pop
adc
add
add
je
or
call
pop
adc
add
add
pop
adc
add
add
pop
adc
add
add
loopne
or
incl
add
add
add
add
incl
add
add
test
adc
add
add
add
add
add
add
add
add
or
and
add
adc
or
add
add
cmp
or
jmp
add
add
add
add
add
add
insb
push
or
incl
add
add
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
mov
add
add
jmp
push
pop
adc
add
add
push
pop
adc
add
add
in
push
or
incl
pop
pop
adc
decl
pop
pop
adc
incl
add
add
incl
add
add
xchg
add
add
add
add
add
add
add
add
add
cmp
or
and
add
sbb
or
add
add
dec
pop
or
incl
add
add
incl
add
add
add
add
pop
pop
adc
add
add
pop
pop
adc
add
add
pop
adc
add
dec
pop
pop
adc
add
add
adc
std
cmp
add
pushf
jb
adc
add
or
add
add
add
add
add
add
add
add
js
or
add
add
fcoms
or
incl
add
add
incl
add
add
add
add
add
add
add
add
add
add
sbb
adc
add
add
or
or
add
add
sub
or
pushl
pop
adc
add
add
pop
sbb
adc
add
add
call
add
add
jl
or
incl
add
add
incl
add
add
incl
add
add
incl
add
add
add
add
add
add
add
add
add
add
add
add
sbb
adc
add
add
add
add
add
add
add
add
sbb
adc
add
add
mov
add
add
sbb
adc
add
add
add
add
inc
pop
pop
adc
add
add
pop
pop
adc
add
add
pop
pop
adc
add
add
pop
pop
adc
add
add
pop
pop
adc
add
notl
pop
adc
add
add
and
or
call
sbb
adc
add
add
jo
or
pushl
sbb
adc
add
add
xchg
sbb
adc
add
add
call
pop
adc
add
add
mov
add
add
pushl
pop
adc
add
add
pop
adc
add
add
add
add
add
add
add
add
add
mov
pop
adc
add
add
sbb
adc
add
add
fcompl
or
incl
add
add
incl
add
add
add
add
add
add
add
add
add
aad
add
add
add
add
add
add
add
add
add
pop
sbb
adc
add
add
add
add
add
add
add
add
or
and
add
cmp
or
add
add
js
or
incl
add
add
incl
add
add
inc
add
add
add
add
add
int3
sbb
adc
add
add
mov
add
add
sbb
adc
add
add
add
add
jmp
sbb
adc
add
add
or
or
incl
pop
adc
add
add
xor
or
jmp
pop
adc
add
add
push
sbb
adc
add
add
incl
decl
add
add
js
or
incl
sbb
adc
add
add
sbb
adc
add
add
movsb
sbb
adc
add
add
jmp
add
add
add
add
add
add
add
add
rcrb
or
incl
add
add
add
add
sbb
adc
incl
add
add
adc
add
add
add
add
add
add
add
add
or
and
add
or
or
add
add
xor
or
incl
add
add
add
add
sbb
adc
incl
add
add
add
add
add
add
add
add
add
add
add
jl
or
and
add
fs
adc
add
add
add
add
add
call
sbb
adc
add
add
mov
add
add
pushl
sbb
adc
add
add
sbb
adc
add
add
loopne
or
call
pop
adc
add
add
or
or
incl
add
add
add
add
incl
add
add
add
add
add
add
add
add
add
add
add
dec
sbb
xchg
sbb
add
add
sbb
add
pop
sbb
add
add
add
incl
add
add
add
add
incl
add
add
imul
add
add
add
add
add
add
add
add
mov
add
add
mov
add
mov
or
incl
add
add
add
add
pop
adc
incl
add
add
add
add
add
add
add
add
add
add
add
clc
sbb
xchg
sbb
add
add
sbb
add
or
or
call
sbb
adc
add
add
sbb
adc
add
add
sbb
adc
add
add
cmp
or
jmp
sbb
adc
add
add
sbb
adc
add
add
sbb
adc
add
add
sbb
adc
add
add
pop
adc
add
add
pop
adc
add
add
insb
push
or
incl
sbb
adc
add
add
sbb
adc
add
add
mov
add
add
jmp
pop
adc
add
add
pop
adc
add
add
pop
adc
add
add
in
or
incl
add
add
incl
add
add
incl
add
add
incl
add
add
mov
adc
add
add
add
add
add
add
add
cmp
or
add
add
add
add
add
add
add
add
dec
pop
or
and
add
sbb
or
add
add
pop
pop
or
incl
add
add
add
add
incl
add
add
add
add
add
add
add
add
add
add
xchg
sbb
add
add
add
les
or
incl
add
add
incl
add
add
xchg
add
add
add
add
add
add
or
and
add
hlt
pop
or
add
add
adc
or
incl
add
add
add
add
sbb
adc
incl
add
add
add
add
add
add
add
add
add
add
add
pop
and
adc
add
add
inc
and
adc
add
add
adc
add
add
add
add
incl
add
add
add
add
sbb
adc
incl
add
add
xchg
add
add
add
add
add
add
add
add
add
mov
or
and
add
pushf
and
adc
add
add
and
adc
add
add
add
add
incl
add
add
add
add
sbb
adc
incl
add
add
xchg
add
add
add
add
add
add
add
add
add
or
or
and
add
hlt
and
adc
add
add
or
incl
add
add
incl
add
add
add
add
add
add
add
add
add
add
adc
add
add
dec
and
adc
add
add
adc
add
add
add
add
incl
add
add
add
add
pop
adc
incl
add
add
xchg
add
add
add
add
add
add
add
add
add
mov
or
and
add
pushf
and
adc
add
add
and
adc
add
add
add
add
jmp
pop
adc
add
add
hlt
and
adc
add
add
incl
add
add
add
add
add
add
add
add
sbb
or
pushl
add
add
add
add
sbb
adc
add
add
sbb
adc
add
add
sbb
adc
add
add
sbb
adc
add
add
sbb
adc
add
add
sbb
adc
add
add
sbb
adc
add
add
sbb
adc
add
add
push
and
adc
add
add
incl
add
add
incl
add
add
add
add
add
add
add
shlb
or
and
add
shlb
adc
add
add
and
adc
add
add
add
add
incl
add
add
add
add
sbb
incl
add
add
add
add
add
add
add
add
add
add
add
sub
or
and
add
adc
or
add
add
cmp
or
incl
pop
adc
add
add
pop
adc
decl
pop
adc
add
add
push
add
add
jmp
pop
adc
add
add
pop
adc
ljmp
pop
adc
add
add
pop
adc
add
add
pushf
and
adc
add
add
call
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
adc
adc
add
add
fsubs
or
add
add
and
adc
add
add
add
add
pushl
add
add
add
add
mov
add
add
add
add
add
add
add
mov
adc
add
add
add
add
add
add
add
pushf
and
adc
add
add
fs
adc
add
add
add
add
add
incl
add
add
incl
add
add
mov
add
add
add
add
add
add
add
add
xchg
sbb
add
add
and
adc
add
add
and
add
add
add
incl
push
pop
adc
add
add
inc
and
add
jmp
push
pop
adc
add
add
fs
add
incl
pop
adc
add
add
pop
adc
add
add
pop
adc
add
add
add
add
add
add
pop
adc
push
pop
adc
add
add
pop
adc
add
add
add
add
add
add
add
add
add
add
mov
add
inc
push
pop
adc
dec
push
pop
adc
add
add
add
or
jmp
push
pop
adc
add
add
xor
or
incl
pop
pop
adc
decl
pop
pop
adc
add
add
pop
pop
adc
jmp
pop
pop
adc
ljmp
pop
adc
add
aaa
pop
pop
adc
incl
pop
adc
decl
pop
adc
add
add
pop
adc
jmp
pop
adc
ljmp
pop
adc
add
add
pop
adc
add
add
decl
lcall
add
add
add
add
mov
inc
pop
pop
adc
add
add
pop
pop
adc
add
add
pop
pop
adc
jmp
pop
pop
adc
push
pop
pop
adc
add
add
pop
pop
adc
add
add
and
adc
add
add
push
or
jmp
and
adc
add
add
add
sbb
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
jo
or
and
add
cmp
or
add
add
andb
adc
add
add
add
add
incl
pop
adc
add
add
incb
adc
add
add
add
add
add
add
add
add
add
add
daa
or
add
add
add
add
add
add
add
add
cld
daa
or
and
add
les
or
add
add
or
or
incl
add
add
add
add
pop
adc
incl
add
add
add
add
add
add
add
add
add
add
add
push
add
add
push
sub
adc
add
add
or
incl
add
add
incl
add
add
add
add
add
add
add
add
add
add
add
add
test
or
add
add
enter
call
add
add
clc
sub
adc
add
add
pushl
add
add
sbb
or
incl
add
add
add
add
and
adc
incl
add
add
pop
add
add
add
add
add
add
add
add
add
pop
sub
adc
add
add
inc
sub
adc
add
add
or
incl
add
add
add
add
and
adc
incl
add
add
add
add
add
add
add
add
add
add
add
mov
or
and
add
cwtl
sub
adc
add
add
sub
adc
add
add
add
add
call
and
adc
add
add
lock
adc
add
add
call
sbb
add
fcomps
xchg
sbb
add
add
or
call
pop
adc
add
add
inc
sub
adc
add
add
call
and
adc
add
add
sub
adc
add
add
incl
add
add
add
add
and
adc
add
add
and
adc
incl
add
add
add
add
add
add
add
add
add
add
add
add
mov
or
add
add
mov
add
add
add
add
pushl
pop
adc
js
pop
adc
add
add
call
add
add
call
lcall
add
add
add
add
add
add
adc
or
incl
add
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
add
pusha
xor
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
sub
adc
add
add
add
add
add
add
incl
add
add
add
add
and
adc
incl
add
add
add
add
add
add
add
add
add
add
sub
adc
add
add
or
adc
add
add
sub
adc
add
add
add
add
incl
add
add
add
add
and
adc
incl
add
add
cmp
adc
add
add
add
add
add
add
add
add
or
and
add
pusha
sub
adc
add
add
add
add
add
add
pushl
and
adc
add
add
and
adc
add
add
pop
adc
add
add
pop
adc
add
add
adc
add
add
mov
add
add
incl
add
add
add
add
add
add
add
add
xchg
sbb
sub
adc
add
add
incl
add
add
add
add
and
adc
incl
add
add
add
add
add
add
add
add
add
add
or
and
add
inc
sub
add
push
add
add
add
add
push
and
adc
add
add
cwtl
sub
add
incl
add
add
add
add
and
adc
incl
add
add
dec
add
add
add
add
add
add
add
add
add
aam
or
and
add
mov
add
add
sub
add
add
add
pushl
and
adc
add
add
and
adc
incl
pop
adc
add
add
pop
adc
call
pop
adc
add
popa
and
adc
add
insb
and
adc
pushl
pop
adc
add
add
pop
adc
add
add
adc
or
jmp
add
add
js
or
inc
and
adc
add
add
and
adc
add
add
pushf
or
jmp
and
adc
add
add
and
adc
add
add
enter
incl
and
adc
add
add
and
adc
add
add
and
adc
add
add
and
adc
add
add
and
adc
add
add
and
adc
add
add
hlt
or
call
pop
adc
add
add
pop
adc
add
add
pop
adc
add
add
pop
adc
add
add
pop
adc
add
add
inc
das
or
call
add
add
add
add
test
or
incl
add
add
incl
add
add
add
add
add
add
add
add
add
add
das
or
and
add
mov
or
add
add
shrb
or
inc
and
adc
add
add
and
adc
add
add
add
or
jmp
and
adc
add
add
and
adc
add
add
and
adc
add
add
and
adc
add
add
and
add
adc
add
sbb
pop
adc
add
daa
and
add
xor
add
cmp
add
add
pop
adc
add
add
pop
adc
add
add
pop
adc
add
add
pop
adc
add
add
pop
adc
add
add
adc
add
add
sub
or
jmp
add
add
enter
inc
and
add
lret
and
add
and
add
loope
pop
adc
add
add
and
add
adc
pop
adc
add
add
and
add
adc
pop
adc
add
add
es
adc
add
add
es
adc
add
add
pop
adc
add
add
pop
adc
add
add
adc
add
addr16
adc
add
jb
pop
adc
add
jge
pop
adc
add
add
in
xor
adc
add
add
jmp
add
add
add
add
add
add
add
add
es
adc
add
shll
pop
adc
add
add
es
adc
add
add
es
adc
add
add
es
adc
add
add
es
adc
add
add
daa
pop
adc
add
add
daa
pop
adc
add
add
daa
pop
adc
add
add
daa
pop
adc
add
add
pop
adc
add
add
mov
or
call
pop
adc
add
add
pop
adc
add
add
pop
adc
add
add
pop
adc
add
add
pop
adc
add
add
add
mov
pop
adc
add
add
sbb
or
pushl
add
add
add
add
daa
pop
adc
add
add
daa
pop
adc
add
add
daa
pop
adc
add
add
daa
pop
adc
add
add
daa
pop
adc
add
add
jo
or
call
sub
adc
add
add
xchg
add
xchg
add
add
add
add
add
add
add
in
xor
adc
add
add
add
add
add
add
add
cld
xor
adc
add
add
les
or
add
add
or
or
incl
add
add
incl
add
add
cwtl
add
add
add
add
add
pusha
xor
adc
add
add
push
xor
adc
add
add
or
jmp
pop
adc
add
add
mov
add
add
incl
add
add
incl
add
add
popf
add
add
add
add
add
aam
or
and
add
les
or
add
add
in
or
call
add
add
add
add
adc
or
pushl
add
add
add
add
sub
adc
add
add
sub
adc
add
add
sub
adc
add
add
sub
adc
add
add
sub
adc
add
add
inc
xor
adc
add
add
call
sub
adc
add
add
sub
adc
add
add
sub
adc
ljmp
sub
adc
add
add
sub
adc
add
add
sub
adc
add
add
pop
adc
add
add
xchg
xor
adc
add
add
jmp
pop
adc
add
add
pop
adc
add
add
pop
adc
add
add
call
add
add
incl
add
add
add
add
incl
add
add
add
add
add
add
add
add
add
add
add
xor
or
and
add
sbb
or
add
add
inc
xor
add
add
add
pushl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
je
or
call
sub
adc
add
add
mov
add
add
incl
add
add
add
add
sub
adc
incl
add
add
add
add
add
add
add
add
add
add
add
hlt
xor
xchg
sbb
add
add
xor
add
add
or
call
sub
adc
add
add
sub
adc
add
add
sub
adc
add
add
pop
adc
ljmp
sub
adc
add
cmp
pop
adc
incl
adc
lcall
pop
adc
add
add
pop
adc
ljmp
pop
adc
pushl
pop
adc
add
add
pop
adc
add
add
add
add
add
add
add
add
add
add
xchg
sbb
add
add
or
call
sub
adc
add
add
fdivs
or
push
sub
adc
add
add
mov
add
fwait
mov
add
add
add
add
add
add
add
and
or
add
add
add
add
add
add
add
add
xor
or
and
add
cld
or
add
add
inc
aaa
or
call
sub
adc
add
add
sub
adc
add
add
mov
or
incl
add
add
add
add
sub
adc
incl
add
add
ret
add
add
add
add
add
add
add
add
int3
aaa
or
and
add
mov
or
add
add
fdivl
or
incl
add
add
incl
add
add
ret
add
add
add
add
add
sbb
or
and
add
or
or
add
add
sub
or
jmp
pop
adc
add
add
pop
adc
add
add
pop
adc
add
add
pop
cmp
adc
add
add
call
add
add
jmp
add
add
nop
cmp
adc
add
add
incl
pop
adc
decl
pop
adc
add
add
les
or
incl
add
add
incl
add
add
iret
add
add
add
add
add
add
or
and
add
lock
adc
add
add
cmp
adc
add
add
add
add
incl
add
add
incl
add
add
add
add
add
add
add
add
add
add
or
and
add
inc
cmp
adc
add
add
or
jmp
sub
adc
add
add
sub
adc
add
add
nop
cmp
adc
add
add
incl
sub
adc
add
add
sub
adc
add
add
mov
add
add
jmp
sub
adc
add
add
sub
adc
add
add
call
add
add
incl
pop
adc
add
add
pop
adc
add
add
pop
adc
add
add
pop
adc
add
add
adc
or
incl
add
add
add
add
add
add
add
add
add
add
add
add
push
cmp
adc
add
add
incl
add
add
add
add
sub
adc
incl
add
add
fadds
add
add
add
add
add
add
add
add
mov
or
and
add
pushf
cmp
adc
add
add
cmp
adc
add
add
add
add
incl
add
add
add
add
sub
adc
incl
add
add
add
add
add
add
add
add
add
add
or
and
add
hlt
cmp
adc
add
add
or
call
sub
add
sbb
add
es
add
xor
add
cmp
add
inc
sub
add
dec
sub
xchg
sbb
add
add
adc
add
add
pushl
pop
adc
add
add
pop
adc
add
add
add
add
add
add
add
add
add
lods
sub
xchg
sbb
add
add
add
add
call
sub
fldt
add
jecxz
pop
adc
push
sub
cld
sub
add
pop
cs
adc
call
cs
adc
lcall
add
add
pushl
cs
adc
add
add
cs
adc
decl
pop
adc
add
add
hlt
cmp
adc
add
add
jmp
pop
adc
add
add
jo
or
incl
decl
add
add
xchg
cmp
adc
add
add
jmp
add
add
add
add
sarb
incl
add
add
incl
add
add
incl
add
add
incl
add
add
add
jp
add
add
add
add
add
or
or
add
add
add
add
add
add
add
add
sbb
or
and
add
in
cmp
adc
add
add
add
add
add
call
cs
adc
add
add
jo
or
push
cs
adc
add
add
cs
adc
add
add
das
pop
adc
add
add
das
pop
adc
add
add
das
pop
adc
add
add
das
pop
adc
add
add
das
pop
adc
add
add
xchg
cmp
add
incl
pop
adc
add
add
pop
adc
add
add
pop
adc
add
add
call
add
add
pushl
pop
adc
add
add
pop
adc
add
add
sbb
or
call
add
add
dec
or
pushl
add
add
add
add
das
pop
adc
add
add
das
pop
adc
add
add
das
pop
adc
add
add
das
pop
adc
add
add
das
pop
adc
add
add
insb
or
call
xor
adc
add
add
xor
adc
add
add
xor
adc
add
add
xor
adc
add
add
xor
adc
add
add
sarb
adc
add
add
call
pop
adc
add
add
pop
adc
add
add
pop
adc
add
add
add
or
call
incl
decl
add
add
cmp
or
incl
add
add
incl
add
add
add
add
add
add
add
add
add
add
adc
add
add
insb
aas
or
add
add
mov
or
inc
xor
adc
add
add
xor
adc
add
add
xor
adc
add
add
xor
adc
add
add
xor
adc
add
add
xor
adc
add
add
xor
adc
add
add
add
add
mov
add
add
pushl
xor
adc
add
add
xor
adc
add
add
pop
adc
add
add
pop
adc
add
add
adc
add
add
pop
adc
add
add
pop
adc
add
add
pop
adc
add
add
sbb
adc
add
add
jmp
add
add
add
add
add
add
add
add
je
or
incl
add
add
add
add
xor
adc
incl
add
add
sbb
add
add
add
add
add
add
add
inc
or
and
add
mov
or
add
add
fadds
adc
add
add
add
add
incl
xor
adc
add
add
or
adc
add
add
jmp
xor
adc
add
add
sub
or
incl
pop
adc
add
add
push
inc
or
jmp
pop
adc
add
add
je
or
incl
add
add
cwtl
inc
or
jmp
xor
adc
add
add
mov
add
add
jmp
add
add
loopne
or
inc
xor
adc
add
add
xor
adc
add
add
and
add
add
add
add
add
add
add
and
or
and
add
add
or
add
add
xor
or
jmp
xor
adc
add
add
add
add
add
add
add
add
add
add
adc
add
add
fs
or
add
add
mov
adc
add
add
add
add
incl
xor
adc
add
add
add
add
add
add
add
add
add
add
inc
or
and
add
mov
add
add
inc
or
incl
pop
adc
add
add
adc
or
jmp
pop
adc
add
add
adc
add
add
cmp
adc
add
add
jmp
add
add
fs
or
incl
add
add
incl
add
add
xor
add
add
add
add
add
add
add
add
add
mov
adc
add
add
add
add
add
add
call
xor
adc
add
add
xor
adc
add
add
fadds
adc
add
add
push
xor
adc
add
add
add
or
call
xor
adc
add
add
sub
pushl
xor
adc
add
add
xor
adc
add
add
dec
inc
or
call
pop
adc
add
add
pop
adc
add
add
pop
adc
add
add
js
or
incl
add
add
lods
inc
or
jmp
add
add
add
add
rolb
inc
xor
adc
add
add
cld
inc
or
incl
add
add
add
add
xor
adc
incl
add
add
aas
add
add
add
add
add
add
add
add
inc
or
and
add
and
adc
add
add
or
incl
xor
incl
add
add
inc
add
add
add
add
add
add
add
add
add
add
js
or
add
add
mov
add
add
add
add
jmp
xor
add
sub
add
add
inc
add
add
add
add
add
add
add
add
inc
or
add
add
add
add
add
add
add
add
or
adc
add
add
rolb
adc
add
add
inc
or
incl
pop
adc
add
add
pop
adc
add
add
pop
adc
add
add
pop
inc
or
pushl
pop
adc
add
add
nop
inc
or
incl
add
add
incl
add
add
add
add
add
add
add
add
add
add
inc
or
and
add
mov
or
add
add
aam
or
incl
add
add
incl
add
add
add
add
add
add
add
add
add
adc
or
and
add
add
or
add
add
and
or
pushl
add
add
add
add
xor
xchg
sbb
add
add
adc
add
add
jmp
xor
xchg
sbb
add
add
add
add
incl
ss
adc
add
add
lods
inc
or
pushl
ss
adc
add
add
ss
adc
add
add
add
add
add
add
pop
adc
add
add
pop
adc
add
add
add
add
add
add
or
add
add
push
outsl
add
add
add
add
add
add
add
add
dec
or
and
add
rolb
adc
add
add
dec
or
jmp
pop
adc
add
add
push
dec
or
incl
add
add
add
add
add
add
je
or
pushl
add
add
add
add
test
or
call
ss
adc
add
add
aam
or
incl
add
add
add
add
ss
adc
incl
add
add
add
add
add
add
add
add
add
add
dec
or
and
add
clc
dec
or
add
add
and
adc
add
add
add
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
add
add
jp
adc
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
orb
and
add
push
dec
or
add
add
nop
dec
or
incl
add
add
add
add
aaa
pop
adc
incl
add
add
add
add
add
add
add
add
add
add
dec
or
and
add
aam
or
add
add
cld
dec
or
incl
pop
adc
add
add
sub
or
jmp
pop
adc
add
add
push
dec
or
incl
add
add
je
or
jmp
add
add
add
add
cwtl
dec
or
inc
aaa
pop
adc
add
add
aaa
pop
adc
add
add
aaa
pop
adc
add
add
aaa
pop
adc
add
add
aaa
pop
adc
add
add
aaa
pop
adc
add
add
cmp
adc
add
add
les
adc
add
add
jmp
cmp
adc
add
add
mov
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
push
dec
or
and
add
sbb
adc
add
add
or
incl
pop
adc
add
add
pop
adc
add
add
pop
adc
add
add
pop
adc
add
add
movsb
dec
or
incl
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
loopne
or
jmp
cmp
adc
add
add
cmp
adc
add
add
cmp
adc
add
add
cmp
adc
add
add
cmp
adc
add
adc
pop
adc
cmp
adc
add
add
cmp
adc
add
add
cmp
adc
add
add
xor
or
incl
add
add
incl
add
add
add
add
add
add
add
add
add
test
or
and
add
cwtl
dec
or
add
add
mov
add
add
add
add
jmp
pop
adc
add
add
pop
adc
add
add
pop
adc
add
add
pop
adc
add
add
add
add
xchg
sbb
add
add
dec
or
pushl
add
add
add
add
xor
or
call
cmp
adc
add
add
cmp
adc
add
add
pusha
dec
or
incl
add
add
incl
add
add
movsl
add
add
add
add
add
add
add
add
xchg
sbb
add
add
add
lods
dec
or
incl
cmp
adc
add
add
cmp
adc
add
add
cmp
adc
incl
add
add
add
add
add
add
add
add
add
add
or
and
add
fmull
adc
add
add
or
pushl
cmp
adc
add
add
add
add
add
add
cmp
adc
add
add
pop
adc
add
add
pop
adc
cmp
adc
add
add
pop
adc
add
add
lods
add
add
add
add
add
add
add
add
xchg
sbb
add
add
adc
add
add
add
add
add
incl
add
add
les
adc
add
add
jmp
add
add
call
add
add
incl
add
add
add
add
cmp
adc
incl
add
add
add
add
add
add
add
add
add
add
or
and
add
or
or
add
add
xor
or
jmp
cmp
adc
add
add
cmp
adc
add
add
fs
or
incl
cmp
adc
add
add
add
add
add
add
add
add
add
add
add
add
nop
dec
or
add
add
mov
add
add
add
add
jmp
cmp
adc
add
add
call
add
add
incl
pop
adc
add
add
or
or
jmp
pop
adc
add
add
xor
adc
add
add
incl
add
add
incl
add
add
add
add
add
add
add
add
add
add
adc
add
add
push
push
or
add
add
je
or
jmp
add
add
add
add
movsb
push
or
inc
cmp
adc
add
add
rclb
adc
add
add
jmp
cmp
adc
add
add
cmp
adc
add
add
hlt
push
or
incl
cmp
adc
add
add
and
adc
add
add
incl
add
add
incl
add
add
roll
add
add
add
add
add
add
add
adc
add
add
inc
push
or
add
add
fs
or
pushl
cmp
adc
add
add
cmp
adc
add
add
pop
adc
add
add
pop
adc
add
add
xchg
push
or
pushl
pop
adc
add
add
pop
adc
add
add
add
add
add
add
xchg
sbb
push
or
inc
cmp
adc
incl
add
add
incl
add
add
fildl
add
add
add
add
add
add
add
or
and
add
adc
or
add
add
cmp
or
jmp
cmp
adc
add
add
cmp
adc
add
add
cmp
adc
add
add
cmp
adc
add
add
insb
push
or
incl
add
add
incl
add
add
add
add
add
add
add
add
add
add
add
add
test
or
add
add
enter
push
jae
adc
add
add
incl
add
add
add
add
jecxz
adc
add
add
push
or
add
add
jo
add
add
add
adc
or
add
add
pop
jne
adc
add
add
incl
add
add
add
add
call
add
jl
or
add
add
incl
add
add
add
add
add
add
or
sub
or
sub
pop
adc
add
add
out
adc
add
add
adc
lcall
cmp
jmp
cmp
ljmp
cmp
xchg
sbb
add
add
add
aas
cmp
xchg
sbb
add
add
add
add
call
pop
adc
add
add
pop
adc
add
add
adc
add
add
fcoml
adc
add
add
pushl
pop
adc
add
add
adc
decl
add
add
add
add
add
add
add
add
add
add
xor
or
inc
cmp
add
into
cmp
xchg
sbb
add
add
or
jmp
cmp
xchg
sbb
add
add
add
and
or
add
add
incl
add
add
add
stc
repz
add
push
or
sub
pop
adc
add
add
repz
add
push
or
incl
add
add
incl
add
add
push
adc
add
add
add
add
add
add
add
add
push
or
and
add
add
adc
add
add
push
or
add
adc
add
add
add
add
lret
nop
xchg
add
push
or
or
or
add
add
mov
lret
test
or
adc
or
loop
or
repnz
or
add
add
rclb
add
add
add
add
je
jo
fs
popa
bound
push
add
push
push
push
inc
jb
gs
gs
outsl
jb
add
add
push
inc
outsb
jne
gs
je
push
jb
arpl
jae
jae
add
mov
pop
ror
sbb
clc
mov
add
xchg
pop
add
cmpsl
jg
mov
jbe
es
jne
outsl
out
stos
cmp
sub
xor
insl
cmp
push
loopne
ror
ret
adc
adc
xchg
pushf
std
idivb
lea
dec
cmpsb
mov
or
nop
inc
cltd
and
fimuls
mov
mov
dec
sub
popf
and
inc
es
sub
int
jbe
fimuls
mov
in
push
mov
out
sub
mov
push
xchg
pushf
lahf
lret
add
cmc
neg
ljmp
scas
mov
push
cmp
shlb
or
pushf
flds
lret
leave
loopne
daa
and
or
mull
dec
call
pop
mov
adc
jno
fldcw
insl
push
sub
aad
jnp
popa
imul
mov
or
pop
mov
int
dec
push
in
mov
lret
cmp
ret
iret
mov
cmp
scas
xchg
int
negl
mov
dec
cli
ss
and
ret
cmp
mov
pop
inc
or
cltd
jecxz
xchg
xchg
push
leave
imul
xor
subl
push
inc
pop
int3
sarl
ficoml
mov
iret
pop
inc
push
addb
cmpsl
push
je
rorl
cwtl
in
jg
scas
xchg
js
mov
inc
es
sbb
push
out
popfw
bound
in
sbb
or
inc
and
inc
sarl
pop
mov
jl
outsb
lret
sub
cld
dec
push
sub
in
mov
jo
in
out
xor
jecxz
es
inc
addr16
popf
jno
nop
xor
insl
arpl
mov
shll
cltd
push
cmpsl
jns
or
or
sub
add
stos
lods
cmp
imul
mov
push
sub
lock
insl
sub
jl
repnz
sub
xchg
and
add
sub
push
jns
dec
and
shlb
daa
gs
cmpsb
gs
pop
scas
adc
fstpl
and
adcl
sysenter
pop
sbb
mov
dec
mov
dec
or
cld
mov
outsb
xor
mov
dec
lahf
cmp
xchg
stos
cmp
ds
mov
inc
dec
loopne
inc
add
mov
and
lock
mov
pop
or
lea
cmp
and
leave
push
pop
and
jle
push
lahf
mov
xor
adcl
add
fsts
stos
mov
jl
and
mov
mov
pop
push
fimuls
daa
in
inc
jg
mov
fisubs
sbb
mov
insl
sub
rorb
rcrb
cmpsb
mov
rolb
mov
leave
inc
or
enter
xor
iret
dec
sbb
icebp
sbb
adc
es
sub
pop
inc
sbb
jl
mov
sub
jmp
push
sbb
sbb
sbb
jae
pop
xchg
push
lahf
or
lret
and
push
in
lahf
fwait
sub
mov
out
scas
lock
es
inc
arpl
cmp
add
xor
or
ret
leave
inc
mov
mov
dec
push
cmp
movsl
cmpb
add
or
cmp
in
jl
jle
insb
in
pop
pop
std
je
mov
and
xchg
or
andb
xor
mov
lea
andl
mov
mov
mov
adc
out
mov
add
mov
cmp
mov
add
sub
in
insl
jge
add
pop
mov
fsubrl
inc
jns
fcompl
mov
pop
cmpsl
out
cmpps
ljmp
loope
mov
adc
mov
push
leave
and
sub
les
aam
andl
jbe
jne
add
add
std
pop
fs
mov
js
fidivrl
stc
xchg
pop
lahf
xor
add
xor
pusha
or
les
mov
test
mov
xchg
nop
imul
push
mov
shrb
and
adc
xchg
push
roll
mov
shlb
fucom
jo
les
or
test
lahf
mov
and
jnp
mov
into
iret
jne
xlat
in
mov
stos
jecxz
cmp
mov
inc
pop
sbb
xor
lret
mov
xchg
sbb
mov
jns
je
mov
add
mov
testb
adc
test
jbe
sti
out
xchg
ja
sub
pop
push
and
sbbb
jnp
aad
jg
ss
jp
lahf
stc
rolb
cli
scas
nop
mov
push
or
inc
outsl
daa
pop
mov
cli
xor
ja
lahf
fadd
mov
inc
cwtl
inc
jle
mov
ljmp
dec
xchg
push
gs
mov
mov
dec
xor
adc
sbb
adcl
jmp
sbb
inc
fisubrl
mov
cmpsl
rol
sahf
add
jg
add
cmpsl
inc
enter
leave
inc
mov
lret
popa
sbb
add
lret
adc
sti
sub
setp
mov
shlb
fmulp
lods
xchg
in
sbb
out
jbe
xor
subb
jmp
in
sahf
mov
cmp
cmp
scas
jbe
mov
loopne
inc
pop
dec
pop
adc
inc
aas
sbb
mov
jb
scas
mov
sub
push
push
mov
cmp
mov
lahf
daa
lret
xchg
imul
arpl
mov
add
iret
adc
cmp
cmpsl
adc
jle
pop
push
cli
adc
pop
aas
insl
sbb
or
jnp
clc
add
les
stc
mov
cmp
sahf
xchg
pop
pop
jge
mov
lret
jp
insl
add
inc
je
xchg
mov
mov
dec
jno
add
push
cmp
adc
mov
dec
icebp
pop
mov
dec
lods
andl
cltd
jo
into
cmp
stos
jecxz
data16
push
cwtl
or
gs
dec
dec
sub
ret
jg
popl
cmp
ja
mov
cli
call
push
cmp
cmp
clc
xchg
adc
bound
lods
ljmp
in
aaa
sahf
and
mov
mov
lret
pop
mov
xchg
data16
inc
out
addr16
repz
cmc
fildl
sub
sub
inc
add
ja
push
stos
fistpll
and
push
pop
cmp
roll
add
lods
loopne
pop
cmc
lret
insb
xor
sti
pushf
xchg
mov
hlt
lods
scas
inc
cmp
cmp
push
call
les
or
cltd
fsubrs
inc
dec
jmp
test
adc
and
pop
add
cld
ret
or
cmpsb
inc
mov
les
and
sbb
sub
adc
inc
and
mov
xor
mov
pop
ljmp
pop
dec
popa
movsl
or
push
js
adc
imul
jge
call
sbb
ret
in
inc
ds
fidivrs
lahf
in
repz
ficompl
in
xchg
in
pop
pop
cld
xor
or
lahf
push
out
lret
dec
sbb
jecxz
out
sub
daa
mov
push
and
les
test
sahf
cmp
sbb
sub
fmul
push
je
jae
inc
jge
xchg
dec
fwait
mov
xchg
inc
mov
mov
xor
jge
sbb
imul
push
jne
or
aad
fdivp
push
aas
stos
mov
sub
repz
or
fs
aad
cmp
ja
loopne
enter
lahf
mov
int
les
cltd
call
push
sbb
jne
out
mov
sub
xor
pushf
mov
fcoms
inc
ja
push
xor
flds
push
add
mov
mov
icebp
out
ss
pop
jne
xorl
stos
popf
push
flds
add
cmp
or
stc
out
and
fsubrl
mov
fdivr
cmp
jmp
pop
mov
xchg
push
es
sub
stos
aam
test
jg
jns
pushf
jl
mov
jne
xor
nop
clc
mov
adc
movsl
sbb
cltd
jmp
fcoms
fdivr
call
dec
les
movsb
aas
push
xchg
mov
mov
cmpsl
mov
stos
flds
imul
ja
mov
sub
adc
push
mov
push
mov
jne
xor
test
mov
mov
arpl
test
out
xchg
mov
fists
jo
int3
mov
enter
mov
xchg
mov
jge,pn
shrb
mov
adc
xchg
mov
roll
mov
popf
or
cmpsl
test
addb
mov
ret
out
fldt
push
push
fsubs
sub
lods
mov
fsubs
mov
inc
pop
movsl
push
addl
iretw
push
and
ret
and
and
inc
repz
add
fcoml
sbb
push
ljmp
and
cli
neg
adc
add
jg
mov
lret
faddp
inc
cld
add
outsl
dec
mov
jg
faddp
adc
popa
jb
or
add
push
imull
or
rcll
push
jmp
arpl
lahf
add
add
cmp
push
into
imull
or
dec
inc
inc
test
sbb
mov
mov
add
xchg
mov
and
mov
dec
cltd
call
jb
inc
cmp
push
cmpsl
mov
and
ljmp
enter
push
xchg
fsub
cs
jae
mov
mov
mov
cmc
scas
dec
jb
data16
cmp
adc
rol
xchg
xor
jmp
test
or
cmc
leave
push
dec
cwtl
push
into
mov
lock
lcall
loope
sub
sbb
cmp
xor
insb
pop
mov
fsts
inc
pusha
xor
fcmovnbe
jg
sbb
mov
outsb
mov
lds
stos
fcompl
popa
pushf
add
dec
repnz
testl
mov
adc
pop
pop
filds
mov
and
or
jae
push
cld
push
sahf
sbb
hlt
jb
dec
decb
mov
add
sub
cs
dec
or
push
sub
stos
jecxz
dec
mov
xchg
arpl
jae
mov
nop
nop
cmc
add
daa
into
and
jo
xchg
addl
sub
cltd
xchg
mov
in
leave
mov
mov
rcll
js
dec
mov
imull
xchg
push
fidivs
mov
jg
inc
xchg
sub
cmc
pop
ja
inc
push
mov
mov
xlat
or
popa
mov
in
inc
enter
adc
inc
mov
mov
push
sbb
orb
enter
mov
mov
sbb
or
cmp
in
pop
call
ficomps
aad
out
xor
xchg
jnp
movsb
jp
or
adc
sub
xor
in
add
adcl
cltd
mov
lahf
cmp
mov
vzeroupper
adc
aam
or
push
pushf
rcll
push
push
out
pop
add
leave
push
sbb
cmp
push
inc
addr16
fwait
sbbb
mov
pop
int3
pushf
call
sbb
xchg
arpl
test
mov
dec
adc
xor
outsl
aad
addr16
es
shlb
xor
add
imul
out
test
or
popa
ret
or
add
sub
cmp
sub
jno
iret
inc
push
pop
das
jecxz
fidivs
and
sbb
xor
sub
pop
add
mov
pop
daa
xchg
mov
mov
or
push
test
or
imul
jl
inc
sbbb
sbb
outsb
jns
xor
mov
jae
in
sti
stos
movb
xchg
jl
mov
adc
insl
fisttpll
js
sbb
ljmp
movsl
loopne
push
cmp
repz
scas
and
mov
adc
repnz
sbb
pop
mov
inc
dec
insb
mov
aaa
mov
or
push
sti
jae
popf
adc
cmp
cltd
outsl
jb
ds
rclb
xor
pop
inc
fcmove
jl
and
or
or
push
sub
fldcw
test
insb
js
leave
cmpb
popf
adc
pop
push
mov
jb
imul
in
imul
xchg
sbb
dec
push
jp
mov
mov
int
sbb
movsb
cltd
lds
dec
out
lret
rcr
push
lret
push
loop
push
jp
jl
in
js
push
gs
add
adc
or
scas
sbb
repnz
mov
lahf
int
or
xlat
sub
cmpsb
daa
fdivrl
fs
pusha
or
sarb
mov
or
dec
cld
gs
mov
frstor
sarb
movsl
loop
jne
imull
sbb
ret
nop
lds
int3
loop
xchg
mov
add
pop
cmp
push
and
and
mov
scas
mov
test
loopne
les
cmp
jl
pop
mov
mov
shrl
mov
in
or
inc
pop
test
dec
cmp
ja
sbb
ror
jle
dec
popf
mov
jmp
mov
mulb
aam
inc
js
mov
adc
sbb
cld
fsubrl
mov
and
ja
adc
es
fdivrs
push
lods
aam
add
cwtl
add
xor
push
push
pop
dec
sub
and
stos
pslld
cmp
cli
es
cmp
out
mov
out
fnsave
in
imul
lea
popa
lods
xchg
fs
jno
repz
lret
inc
fiadds
sarl
sub
pop
mov
adc
sbb
in
adc
into
aas
leave
jbe
rorb
cmp
mov
lcall
enter
mov
inc
xchg
or
sti
ret
sub
popf
jae
repz
div
xor
dec
shrl
push
mov
xor
out
movsb
fisttps
out
cmpsl
mov
popf
or
test
lds
dec
mov
sahf
test
inc
and
dec
lods
pop
push
daa
sbb
cmp
jnp
add
mov
pop
mov
or
popf
dec
mov
xlat
jp
dec
cmp
movsb
push
dec
pop
leave
adc
sub
shlb
cmpsl
fs
or
cmp
xchg
inc
xor
lahf
stos
call
pop
pusha
dec
cmp
push
scas
call
add
dec
movsl
dec
xor
arpl
fwait
sti
pop
cmp
dec
ss
nop
iret
push
nop
dec
nop
adc
sub
adc
push
xlat
ja
adc
ret
adc
adc
jmp
cmp
adc
push
gs
popl
and
jo
jo
mov
std
fisubrl
into
mov
leave
mov
repnz
mov
lods
adc
dec
imul
in
shlb
sbb
addr16
mov
sub
adc
dec
fisttpl
mov
jb
outsl
pop
mov
lea
ficoms
dec
push
int
xchg
addr16
push
adc
sub
mov
fwait
aam
push
orl
push
cmp
cmp
pop
push
adc
jns
push
icebp
or
push
mov
cmp
fisttpl
lcall
ljmp
iret
jg
shrb
leave
movsb
shl
xor
mov
xor
cli
dec
xor
stc
stos
sub
js
add
xchg
mov
scas
fadds
ret
mov
addr16
push
and
jp
out
jmp
jecxz
xor
scas
test
add
mov
ds
mov
ret
xlat
and
fnsave
mov
fdivrl
xchg
hlt
add
or
pop
rcrl
loope
aas
fnstenv
cmp
push
aam
out
mov
mov
cmc
xchg
in
mov
ds
inc
shlb
pop
cwtl
or
xor
xchg
leave
push
ja
mov
call
jecxz
pop
mov
push
rclb
push
or
pop
jle
test
mov
ja
mov
mov
imul
pop
sbb
mov
call
mov
scas
fcmovnu
mov
js
leave
mov
stos
or
xor
orl
stc
mov
mov
fs
xchg
mov
mov
and
outsb
icebp
fildll
loop
scas
lods
dec
or
fsubrl
outsl
jb
inc
aad
jmp
mov
push
push
sbb
sbb
mov
xchg
cmpsb
mov
test
insb
into
popf
inc
outsb
sub
add
into
add
aad
inc
or
adc
lock
repz
mov
push
fsubs
test
cld
mov
and
mov
out
mov
cmp
nop
inc
sti
jl
pop
lret
mov
mov
es
dec
cmc
mov
sub
sub
mov
xchg
push
daa
addl
stos
push
and
inc
mov
ljmp
or
popf
jno
xchg
mov
mov
les
and
jecxz
push
shl
jge
insl
cmp
repnz
pop
inc
pop
scas
or
adc
aaa
rcrb
jno
stos
fldenv
mov
mov
dec
push
outsl
xchg
loope
es
pmullw
cmpsl
sub
loopne
push
inc
bound
sahf
cmp
cmp
in
cmp
cwtl
add
ss
lcall
and
lret
pop
test
popf
jb
aaa
sbb
adc
add
in
xchg
int
add
push
pop
jae
lret
jbe
pop
push
adc
shll
cmp
adc
pushf
hlt
fnsave
sbb
mov
rclb
cmp
and
pop
call
arpl
xor
sar
mov
in
jp
packsswb
insl
pop
sbb
aas
fwait
dec
push
mov
stos
ret
fsubrs
stc
inc
nop
test
es
xlat
mov
shl
or
inc
ljmp
xchg
xchg
push
xor
dec
jae
into
pop
xchg
cltd
adc
mov
add
test
cli
dec
xchg
sbb
sarl
ja
or
enter
adc
fbld
jmp
sbbb
pop
shlb
push
ret
adc
mov
inc
xor
xorb
repnz
loope
fldl
loop
sbb
sbb
jl
push
addb
dec
aaa
xchg
jno
jp
pusha
jns
subl
cmp
bound
add
gs
outsb
jbe
jb
outsb
insl
outsb
je
popa
jb
popa
bound
add
add
out
push
inc
add
add
jl
or
add
add
or
add
or
add
sbb
inc
insb
or
push
mov
add
les
add
out
add
movl
add
add
shl
add
adc
add
lods
add
insb
or
in
or
xchg
xchg
insb
or
test
or
mov
or
ret
add
insb
or
std
insb
or
pop
insl
or
add
add
add
add
add
pop
add
add
add
inc
insb
insb
cs
insb
add
inc
popa
outsb
push
outsb
insb
outsl
popa
fs
outsl
ja
inc
insb
insb
inc
gs
insb
popa
jae
dec
bound
arpl
insb
insb
dec
popa
imul
imul
jb
gs
inc
insb
insb
push
outsb
jb
imul
jb
gs
inc
jb
popa
je
dec
popa
imul
inc
jb
popa
je
push
jb
je
arpl
outsl
arpl
push
gs
dec
add
jae
outsl
outsl
data16
jae
outsl
outsl
outsb
sbb
mov
add
fucomi
aas
sbb
loope
daa
das
inc
fsts
cmp
fcmovb
sarb
mov
ret
pop
xchg
repz
adc
leave
test
mov
and
in
mov
and
aam
imul
out
std
pusha
jne
cmp
mov
mul
testl
jg
push
mov
or
negl
fwait
xchg
popa
ds
or
scas
mov
movsb
repz
mov
mov
daa
inc
stos
movsb
nop
mov
sbb
jle
add
push
into
push
int
jge
popf
adc
pop
pop
inc
push
cwtl
xchg
into
adc
jnp
sub
xchg
or
pop
in
mov
sbb
hlt
xchg
inc
fiaddl
dec
stc
rorl
mov
dec
test
out
push
movsb
dec
push
adc
xacquire
sbb
dec
enter
adc
pop
out
out
dec
sbb
aam
insl
mov
xlat
loopne
js
out
pop
ret
fs
push
or
fs
mov
fs
push
xor
mov
iret
lock
add
pop
lods
cmc
aad
mov
and
push
cmp
add
dec
pushf
mov
stos
cli
pop
shlb
push
frstor
test
icebp
xchg
push
push
test
jl
imul
push
xchg
or
sbb
cmc
and
jge
aaa
shlb
movsb
test
flds
xor
push
mov
adc
sub
jns
sbb
cltd
push
jecxz
aad
or
push
enter
shrl
in
jmp
push
sbb
push
aaa
push
jecxz,pt
fucomip
rep
es
out
mov
es
leave
xchg
leave
loop
xor
mov
cmp
add
and
hlt
pop
and
std
push
mov
add
dec
jp
sahf
test
shlb
gs
jge
aaa
enter
testb
lret
cmpb
xor
lcall
mov
xor
std
mov
enter
push
movsl
ficoml
cli
mov
cmp
lods
push
fistl
mov
cmp
cmpsl
cmc
xchg
and
add
es
mov
adc
inc
imul
jle
pop
roll
push
xlat
mov
jbe
push
add
sub
out
int
iret
sbb
insl
orl
inc
in
mov
dec
mov
inc
dec
loopne
xor
dec
or
pop
mov
adc
fmul
ret
sub
adc
xchg
pop
sub
xchg
imul
dec
ret
ss
xchg
cmp
add
adc
jb
add
xor
push
or
lds
insl
lret
cmpsb
mov
or
loop
fcomps
xor
les
ss
push
negl
dec
cmp
sbb
adc
or
sub
in
pop
scas
fdivrl
inc
shrb
inc
sbb
push
mov
pop
mov
sbb
mov
shll
out
sbb
mov
or
test
fdivrs
ljmp
push
xor
ss
out
add
addr16
push
lds
push
mov
mov
sbb
test
mov
xor
adc
addl
cwtl
in
enter
or
in
fstl
mov
lret
leave
or
sub
dec
test
add
pop
or
out
mov
out
xchg
stc
jnp
movsl
jae
push
outsb
icebp
ficoml
leave
jp
mov
shr
pop
icebp
xlat
jnp
mov
push
arpl
lea
mov
das
push
das
inc
mov
ss
mov
sub
inc
push
adc
sub
adc
repnz
mov
xchg
dec
xlat
stos
mov
jne
sub
les
pop
or
add
rcl
popa
shl
nop
and
leave
mov
cli
mov
out
cwtl
mov
fs
sbb
and
mov
outsb
cli
movsb
ss
mulb
add
pop
mov
repnz
jmp
mov
xor
mov
dec
and
push
push
in
movsl
lods
xor
add
out
push
xchg
les
or
shrl
mov
test
add
out
es
clc
ja
or
ret
inc
sub
rorl
mov
out
add
aaa
es
adc
jae
jno
mov
ficoml
xchg
push
push
add
xchg
out
ljmp
sub
add
loope
adc
ror
inc
cwtl
mov
insl
sub
das
sub
dec
jae
aaa
mov
mov
inc
sub
packssdw
xchg
add
push
lret
add
cwtl
in
lret
lock
daa
sbb
pop
scas
jns
hlt
push
add
jp
mov
and
test
ret
dec
roll
push
addr16
stc
inc
mov
jle
lea
xchg
xorl
fsubrp
testl
and
adc
in
fwait
popa
pop
lods
mov
ficoml
push
push
pop
or
push
sub
outsl
pop
mov
in
shlb
add
bnd
out
testl
aaa
or
mov
mov
jno
pusha
out
addr16
push
add
out
das
ljmp
outsl
fidivrs
pop
nop
cs
sarb
movsl
push
nop
int
test
insb
lahf
mov
sub
add
sti
gs
lcall
int
pop
enter
les
push
cmp
jae
aas
ficoms
xchg
sbb
pop
insb
fwait
xor
in
push
shr
js
lea
jo
dec
ret
stos
ja
mov
and
loop
mov
in
outsb
in
sbb
into
dec
adc
dec
jb
popa
pop
push
inc
aam
les
xlat
lahf
outsl
imul
pop
pop
pop
and
mov
in
in
jmp
in
mov
lock
cmpsl
adc
int
add
aam
push
imul
rcrb
stos
mov
mov
fs
jmp
jge
dec
mov
mov
push
std
fcmovnbe
int3
cwtl
lret
sub
lcall
push
movsb
enter
fisttpll
mov
rcl
push
add
mov
in
iret
rclb
ret
lock
lret
test
movb
dec
int
sarb
cld
insb
jne
loop
push
in
cld
xchg
pop
shlb
xlat
dec
mov
stos
dec
iret
push
outsb
ret
mov
inc
pop
fistpl
inc
cmp
cmc
sub
mov
sbb
push
mov
scas
clc
add
and
or
inc
jmp
pop
or
push
cmp
dec
mov
cmpsl
es
sbb
cmc
insb
shlb
repz
repz
int
loop
ret
mov
aam
cmp
lds
jge
pop
jnp
das
cmp
pop
shlb
cs
pop
xchg
leave
je
push
jnp
mov
push
gs
jns
filds
add
add
mov
js
inc
inc
shr
lds
pushf
fldl
cmp
stos
lods
loop
mov
sets
shrb
imul
sbb
loop
repnz
sub
jl
pop
cmp
jae
lods
jle
aaa
lea
out
dec
mov
add
out
pop
and
xor
jecxz
js
movsl
sbb
push
ret
sub
push
loop
sub
ud1
std
aas
es
sbb
fscale
int3
sub
push
sbb
bound
ds
cmp
push
inc
pop
jnp
mov
add
in
leave
rol
jle
icebp
add
add
add
add
push
add
add
add
addb
add
add
add
add
add
add
or
add
add
add
add
add
add
orb
add
add
orb
add
or
add
and
add
cmp
add
push
add
adcb
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
add
or
andb
add
add
add
add
add
or
inc
add
add
add
add
add
add
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
ljmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
or
test
add
in
add
add
add
aam
or
sbb
add
in
add
add
add
in
cmp
add
add
add
add
add
add
add
cmp
and
inc
mov
in
xchg
stos
ljmp
mov
mov
int
sub
fscale
or
jb
negb
cmpsb
cmp
in
loope
xchg
pop
add
loopne
test
mov
mov
ljmp
fadd
lahf
dec
inc
and
adc
sbb
jmp
xor
xchg
xchg
push
std
dec
pop
jl
outsb
push
mov
mov
add
leave
inc
aas
outsl
addr16
test
roll
inc
push
push
pop
cwtl
imul
aad
dec
xchg
cmpsl
cs
ret
pushl
jmp
mov
lods
and
or
iret
or
pop
in
cltd
insb
shrb
lea
inc
mov
aas
sub
jp,pn
int
and
fprem
xor
stc
daa
mov
std
enter
in
dec
fwait
jecxz
ret
shrb
xchg
testb
outsl
stos
mov
mov
lret
push
xchg
in
xchg
cmpsl
and
dec
inc
sub
inc
ficomps
loop
mov
dec
sbbl
push
shlb
es
nop
cmpsl
push
dec
pop
pop
jl
fprem
inc
mov
movsb
add
add
adc
and
cmp
mov
mov
mov
mov
xor
sbbl
or
arpl
fildll
sbb
xchg
lock
scas
fnstcw
daa
adc
and
cmpsb
cld
in
sbb
and
lds
ljmp
fnstcw
add
cli
rorb
or
or
jmp
xor
push
add
xchg
jmp
fldt
bound
xor
imul
pop
mov
je
imul
lods
xor
xchg
std
dec
ds
out
pop
inc
imul
push
mov
jb
push
rol
jb
dec
enter
mov
clc
jo
pop
nop
jle
or
lcall
jmp
jo
cs
cwtl
dec
push
or
jae
stos
xor
lcall
or
loopne
dec
push
fwait
xchg
push
mov
pop
sbb
les
inc
xor
mov
mov
mov
loopne
andl
mov
addr16
mov
out
loop
das
and
inc
rorb
mov
mov
sbb
jb
iret
pushf
lcall
pop
rclb
aas
jae
add
push
std
mov
stc
lret
cltd
into
mov
iret
incl
fildl
popf
fisttpll
inc
cs
les
jnp
loopne
push
mov
cmpsl
push
ja
jo
loopne
push
jg
lret
testb
pop
xchg
je
jmp
jg
sahf
loop
push
lret
loope
lods
or
adcl
xor
arpl
fistpl
fwait
hlt
ljmp
pusha
pop
lock
call
ds
mov
into
add
pop
adc
ljmp
pop
stc
xchg
sbbb
sbb
scas
sub
lahf
mov
push
push
bound
lret
jp
pop
mov
sti
push
xchg
js
xchg
jnp
xor
xchg
iret
xor
mov
xchg
addr16
adc
inc
jg
jecxz
mov
jmp
mov
pop
inc
add
xchg
test
movsb
aas
or
jno
rolb
and
int3
fwait
sub
mov
mov
in
subb
xchg
rolb
scas
addr16
addr16
mov
mov
pop
xchg
fsubs
pushf
jl
cmp
pop
lds
cs
sub
cmc
sub
imul
popa
sar
adc
mov
adc
sarb
push
addr16
movsb
fstl
inc
iret
jmp
outsl
scas
test
lret
popa
xor
sbb
jne
pop
push
add
push
fcmovnb
mov
es
mov
sbb
adc
aas
xchg
cli
shlb
data16
cmp
pusha
mov
icebp
jae
push
xchg
push
push
pop
cmp
loopne
xor
lods
jecxz
mov
mov
cmp
mov
lahf
bound
push
adc
movq
ljmp
rcrb
add
sbb
into
ja
push
fs
mov
xchg
cmp
mov
icebp
outsb
cmp
insl
outsb
jb
out
imul
sbb
mov
fldl
jo
js
inc
lcall
mov
out
cmp
mov
mov
jl
add
int
sbb
mov
sahf
shrb
xor
push
pop
xlat
cs
and
mov
mov
push
adc
jns
test
cmpsl
enter
ljmp
shld
outsl
mov
sbb
or
daa
or
lret
add
xchg
shlb
xor
mov
mov
xchg
sbb
add
inc
rclb
xchg
or
and
iret
push
add
xchg
fcmovne
mov
movsl
and
xchg
or
jge
push
divl
adc
fldl
and
sahf
into
mov
nop
mov
icebp
fisttpll
cmpsl
mov
adc
cs
and
jecxz
in
fsubp
push
mov
bound
cvtps2pd
stos
dec
mov
dec
inc
sbb
ss
out
pop
jbe
orb
push
mov
imul
xor
insl
xchg
adc
imul
neg
jg
icebp
insl
iret
pop
inc
pop
jge
sub
pop
cmp
lcall
movsl
dec
loop
pop
mov
fisttps
adc
push
jmp
popf
lea
insb
mov
shlb
test
rclb
pop
bound
sbb
rclb
pop
out
add
dec
sbb
insl
faddl
sub
iret
rorl
sub
mov
repz
loopne
testb
xor
jle
outsl
es
xchg
pop
hlt
sub
iret
and
sti
add
nop
jmp
dec
lret
mov
cmp
push
xchg
push
insl
pmulhuw
movsb
insl
fs
hlt
mov
add
sub
adc
jae
mov
adc
sti
jo
xor
mov
out
mov
sub
pop
inc
subb
add
pop
sbb
aaa
dec
fsubrp
xor
pop
or
imul
mov
mov
xor
xchg
xchg
popa
xchg
xor
popf
push
jae
out
mov
dec
dec
cmpsl
pop
adc
mov
test
xchg
add
mov
cmc
sbb
xorb
loopne
ljmp
lds
jne
clts
arpl
insl
push
mov
outsb
push
xchg
inc
dec
xchg
pop
add
ds
notl
imul
aad
lahf
mov
push
add
ja
mov
punpcklwd
jmp
shlb
sub
sarb
sub
xor
mov
sbb
testl
lcall
and
sti
out
lahf
mov
inc
sbb
ret
leave
mov
leave
or
and
popf
ret
lock
push
xlat
or
mov
cmpb
movsl
mov
cwtl
data16
or
jbe
pop
and
fldcw
aad
xchg
jg
cmpsb
loope
call
mov
enter
stos
sub
call
arpl
adc
je
xor
cs
sub
in
push
popa
arpl
jmp
sbb
xor
ret
mulb
mov
repnz
jle
inc
sar
in
sub
sbb
xchg
call
xor
push
pop
leave
gs
cmp
int
jl
repz
aad
push
and
xor
outsb
es
cmp
sbb
jp
adc
out
pusha
iret
xchg
and
sub
sbb
inc
push
shr
hlt
xchg
cmp
sti
pop
inc
leave
sbb
lret
mov
inc
cld
fwait
clc
mov
cmp
xchg
ror
cmc
jnp
jmp
mov
mov
xor
xchg
cmp
jmp
fidivrl
enter
into
sbb
rcrl
mov
jmp
mov
adc
sbb
fs
fisubl
sarb
fstl
sbb
xchg
xor
imul
mov
lock
inc
xor
add
in
sti
mov
adc
push
sbb
inc
outsb
shl
push
push
aas
sbbb
inc
test
mov
outsb
pushf
cs
sti
sbb
sbb
fmulp
and
add
mov
loop
fmull
mov
sbb
cs
sub
mov
ljmp
push
sub
inc
or
imull
leave
adc
test
in
lock
inc
dec
movsl
andl
cmp
dec
shlb
push
sbb
pop
cwtl
call
pop
xchg
call
adc
or
pop
sub
xchg
dec
dec
and
mov
push
mov
sbb
push
stc
popf
inc
xor
in
pop
ljmp
lock
outsl
jnp
jae
xor
out
mov
fildll
je
dec
mov
pop
jl
fistpll
fwait
rcll
mov
push
xchg
scas
push
mov
hlt
jmp
mov
imul
cmpsl
xor
and
jle
jnp
xchg
pushf
cld
add
popa
pop
adc
mov
cmp
dec
jecxz
dec
lret
mov
insb
dec
adc
sbb
mov
mov
int3
or
jno
cltd
in
adc
cmpb
push
pushf
dec
push
pop
je
push
das
fwait
mov
mov
pop
in
ret
jmp
lcall
adc
out
testb
cmp
mov
out
inc
sub
aaa
jp
push
popa
mov
call
mov
adc
sti
daa
lret
dec
dec
adc
aam
xchg
cltd
fwait
int3
jne
fsubs
and
dec
jno
testl
add
xchg
inc
pextrw
stos
mov
inc
loop
lods
sub
scas
dec
xor
mov
sub
xchg
cmp
sbb
or
sbb
les
ja
les
mov
icebp
lret
mov
mov
cmpsb
fwait
lcall
test
xchg
dec
roll
push
shlb
xchg
mov
inc
loope
jo
mov
xlat
sub
aad
in
sub
testl
and
or
lds
mov
data16
cmp
lock
jecxz
enter
dec
cmpb
shrl
mov
aad
sub
in
lds
cwtl
sbb
jg
adc
add
fisttpll
xor
loopne
xchg
test
insl
push
fists
add
pop
repnz
out
or
jp
or
clc
call
dec
lahf
sub
rolb
fcoml
push
lods
jp
outsl
je
jbe
aam
addr16
out
mov
out
mov
xlat
jle
rcll
andl
inc
dec
into
xor
jl
pop
mov
cmp
add
mov
push
inc
out
dec
out
call
sarb
xrelease
fsubs
mov
xor
ror
sbb
add
std
shl
push
out
out
test
mov
xchg
cmp
hlt
mov
mov
lret
mov
push
inc
pop
mov
and
clc
xchg
mov
inc
xor
in
mov
dec
stc
popa
imul
adc
and
aam
push
xor
adc
fstl
test
xchg
jno
add
cmpb
cli
jmp
lret
push
lcall
sub
mov
lods
cmpsb
push
imul
pop
sbb
mov
test
clc
call
push
mov
push
stos
xor
cld
ficoms
in
shll
outsb
repz
ret
mov
sub
cltd
les
push
into
add
int
cld
stos
das
out
fabs
add
xchg
cmp
repz
ja
cwtl
push
movsl
push
mov
loope
sbb
fisubrl
push
jnp
mov
ja
and
add
es
sbbl
out
dec
popa
inc
add
fmuls
push
dec
xchg
push
mov
int3
cmpsb
mov
mov
xchg
addr16
out
fidivrl
imul
mov
test
out
mov
push
xor
stos
add
rcr
pop
out
and
or
cmp
int3
imul
daa
int3
in
mov
std
repz
adc
out
xlat
shlb
test
in
mov
or
lods
stc
mov
cmpsb
pushf
add
stos
dec
mov
scas
xor
sbb
jns
mov
push
mov
fildl
sti
dec
sbb
sub
int
das
sbb
and
lock
mov
mov
jmp
or
jl
outsl
sub
cmp
jb
jo
jo
mov
xchg
pusha
xor
rorl
pop
xor
xor
repnz
lods
jbe
nop
xchg
jle
jbe
fildl
int
jle
leave
pushl
popl
ja
inc
cmp
pop
inc
aam
pop
adc
push
push
rolb
pop
pop
out
aam
sti
jmp
stc
sbb
shlb
rol
mov
mov
jge
jno
fs
sub
xor
int3
dec
pop
sbb
call
mov
aad
test
sbb
int3
adc
sub
adc
xor
push
push
iret
scas
dec
pop
mov
mov
sahf
lcall
daa
mov
push
mov
dec
xchg
cmpsb
pop
push
push
or
mov
sub
frstor
jns
out
cmpb
cs
push
inc
mov
adc
jmp
xor
adc
inc
sarb
ljmp
dec
call
cmp
mov
inc
xchg
mov
xchg
data16
ljmp
js
clc
xor
dec
jg
jl
push
mov
call
push
jnp
lea
jb
out
call
shlb
push
or
push
push
xor
jbe
mov
mov
js
mov
pushl
and
test
sub
pushf
cmp
inc
dec
aaa
add
mov
call
lahf
pushf
imul
movsl
xor
gs
cmp
fldcw
enter
call
test
sbb
mov
sbbb
jl
fs
aaa
dec
iret
jmp
fldl
xchg
pop
clc
test
sub
dec
aad
das
pusha
pushf
mov
or
fisubl
lcall
cmpsb
outsb
and
lds
daa
popa
das
jbe
adc
push
add
and
pop
cmp
rcll
ret
test
popa
data16
or
sti
push
inc
sbb
sti
outsl
addl
mov
sub
cmp
repnz
inc
add
je
bswap
leave
push
dec
mov
fmuls
cmc
mov
mov
test
add
adc
arpl
mov
sbb
les
imul
insl
lret
mov
je
xor
sub
std
jmp
dec
inc
mov
lock
mov
fidivl
jo
movsl
je
lock
ror
mov
dec
cmp
jle
incb
fists
sub
popa
push
rcl
jbe
xchg
shrb
xchg
scas
adcl
jns
addr16
xor
mov
divps
pop
cwtl
xchg
or
loop
int
or
xchg
fwait
ljmp
rcrl
out
mov
fistpll
push
cmp
roll
sbb
stc
sti
sub
sti
mov
mov
inc
out
xor
push
jl
cld
cmpsb
lahf
adc
add
inc
jg
push
adc
pop
into
xor
outsb
pop
rcrl
ret
xor
dec
cmp
fs
sbb
xchg
lock
cmp
icebp
adc
jg
and
insb
xchg
or
cwtd
push
jmp
cmpsb
stc
cmp
inc
cmp
fxch
adc
jns
mov
js
adc
leave
sub
cltd
outsb
add
stos
fwait
stos
mov
mov
incb
rolb
hlt
xor
sub
out
fcoml
lret
das
mov
dec
aaa
cmc
jbe
pop
sub
cmpb
adc
movl
add
and
les
cs
add
out
lea
ror
push
jno
jecxz
push
jmp
sbb
inc
mov
cli
lods
inc
mov
mov
mov
dec
cmpsl
aam
xchg
push
cmpsb
inc
push
mov
sub
loopne
xchg
lret
mov
xor
pop
stos
cwtl
les
mov
sti
cmp
aam
mov
je
push
push
fs
das
std
aad
mov
cmc
pop
scas
mov
loop
xchg
mov
mov
stos
loope
jb
fs
loope
inc
popa
loopne
dec
clc
ds
mov
pop
daa
and
push
jecxz
aad
adc
xchg
int3
movsl
sub
mov
jmp
and
push
or
pop
add
pop
pop
push
sbb
cmp
ds
testl
outsb
movsb
cmp
cmp
nopl
mov
jb
or
lods
out
push
inc
sbb
jnp
pop
mov
das
cmp
cld
ficomps
add
jp
imul
adc
mov
aas
and
jno
mov
and
out
lods
xor
insb
aas
mov
cli
lret
push
xor
pushf
jge
rorl
mov
repz
sbb
movsb
ficompl
daa
pushf
cwtl
lahf
pushf
and
mov
test
aas
clc
aad
aam
or
jbe
or
mov
inc
clc
sbb
sbb
add
mov
loop
sbb
arpl
ret
xchg
pushf
jne
out
mov
fcompl
and
sar
popa
push
dec
or
mov
loop
push
mov
iret
adc
aas
xchg
jb
fstl
jp
js
sahf
ficomps
dec
add
pusha
mov
sbb
mov
lret
in
les
shll
mov
jle
es
cwtl
dec
push
ret
pop
or
push
fnstsw
xchg
mov
dec
popa
or
pushf
and
adc
das
clc
add
cwtl
insb
add
test
js
push
loope
enter
into
enter
push
movsb
mov
hlt
rorb
nop
or
dec
or
loop
andb
nop
fiaddl
popf
rolb
sbb
mov
jno
flds
popf
lcall
jmp
cld
rclb
sbb
jae
hlt
and
sarb
mov
jne
jne
jle
and
sub
sbb
xlat
pushl
jecxz
adc
mov
dec
jl
aam
jno
jp
or
jne
aad
shrl
pcmpgtd
add
scas
dec
push
xor
adc
cmp
lahf
in
fbstp
nop
cmpsb
and
test
in
leave
cmp
lret
or
push
insb
jecxz
and
cli
pop
add
dec
pop
das
testb
xchg
or
mov
jle
cmc
mov
sbb
or
shll
mov
sub
xor
jmp
rcll
loop
dec
mov
in
les
iret
dec
xchg
add
std
adc
aas
dec
ja
mov
shlb
xchg
dec
adc
pop
ficoms
idivb
cld
into
add
cmp
lahf
inc
stc
dec
loope
lahf
mov
stc
inc
sub
ljmp
push
mov
hlt
in
mov
std
and
or
push
push
mov
leave
dec
mov
in
dec
fstpt
mov
xchg
cli
lock
mov
insb
jno
shl
pop
stos
je
push
clc
pop
ss
pop
cld
pusha
mov
push
adc
pop
mov
sti
test
mov
mov
fistpl
int3
xchg
jmp
rcll
adc
jl
xor
dec
xchg
mov
or
test
xchg
popl
and
mov
jecxz
mov
lods
out
mov
jbe
dec
leave
ja
push
jg
arpl
lea
xchg
lods
xchg
daa
int
jecxz
and
mov
in
push
adc
in
inc
xlat
jbe
popl
adc
jl
mov
out
xor
jb,pn
cld
rolb
test
sbb
sub
push
push
adc
adc
cmp
push
push
sub
aam
jo
sbb
inc
xchg
mov
cmp
shrl
pop
dec
in
push
mov
shll
inc
pandn
pop
mov
dec
push
xor
enter
sbb
jb
dec
dec
pop
ds
je
jmp
loop
out
and
repnz
enter
push
xchg
pop
pop
aad
rcl
outsl
xchg
push
scas
int3
push
popa
jmp
xchg
xchg
push
xor
loop
xor
mov
adc
cmpsl
mov
mov
jb
dec
mull
pop
imul
push
dec
and
dec
pusha
sub
sbb
cwtl
rclb
jb
mov
lods
add
jecxz
test
jne
mov
out
outsb
cltd
aam
mov
movsb
fidivrs
aas
test
ret
xchg
jns
sbb
or
fidivrs
mov
scas
jb
push
nop
dec
sbb
hlt
loop
test
inc
ret
out
test
insl
mov
fwait
notl
aad
pop
add
leave
dec
and
mov
idivb
and
jge
dec
inc
mov
repz
and
dec
mov
cmpsb
hlt
mov
pop
fwait
je
xchg
pop
inc
or
out
dec
pop
adc
xor
pusha
js
sub
or
jecxz
add
ja
jo
push
mov
mov
inc
aad
pop
mov
out
fists
xchg
std
negl
xchg
xchg
popa
xor
sub
aaa
push
mov
mov
push
xchg
dec
dec
jnp
pop
xor
aaa
cmc
xor
add
in
add
imul
mov
adc
push
jno
fcomi
jle
sub
shrl
cmp
adc
cltd
sub
jno
adc
outsl
lret
ret
inc
cmp
pop
cmc
insl
lock
cs
lret
dec
mov
mov
adc
mov
add
cmp
iret
les
test
push
jns
adc
stos
add
lock
insl
sti
test
cmp
scas
ja
sub
xchg
mov
lea
pop
dec
push
push
cmp
sbbb
sub
xor
push
cmp
sarl
in
inc
adc
ret
jmp
pop
inc
push
mov
cmc
mov
push
insl
pushf
cs
mov
lret
aas
mov
sbb
or
insb
mov
and
pop
sub
loopne
out
sbb
hlt
xor
or
push
in
leave
and
dec
sub
and
jmp
sub
add
add
inc
mov
push
mov
xchg
daa
xor
outsb
or
mov
lret
lahf
add
dec
ret
add
push
xor
mov
test
and
dec
sbb
lds
movsb
xchg
push
jl
xorb
cmp
or
je
decl
xor
insl
jmp
xlat
sti
shll
pushf
and
sub
mov
mov
mov
jno
adc
sti
dec
xor
xchg
push
nop
shrb
dec
daa
or
pushf
aam
pop
stos
push
sti
push
popf
adc
sbb
pop
imul
mov
les
pop
push
popa
cmp
fs
daa
push
jb
push
cmp
lock
movsl
xor
mov
jno
jbe
and
push
cli
push
cwtl
pop
bound
dec
mov
loop
xchg
inc
out
pop
arpl
and
xchg
std
movsl
and
ja
ljmp
xchg
pop
add
add
sub
js
push
xchg
rclb
fmul
sub
add
sti
lea
mov
jge
stos
mov
mov
cmp
dec
sbb
outsb
and
mov
sub
jns
sub
cltd
stos
out
sub
sub
frstor
cltd
xchg
test
adc
sbb
push
mov
scas
iret
shl
nop
lea
mov
xchg
sbb
scas
xchg
jnp
and
cmp
xchg
cmp
andb
les
push
lea
aas
add
xor
in
sti
push
mov
xchg
cld
inc
jp
pop
dec
loop
call
movsl
jae
iret
push
flds
int3
lds
dec
rcr
in
pop
xchg
int3
out
daa
xor
scas
xchg
mov
ret
into
fidivs
je
out
pop
and
add
pop
rorb
or
and
sbb
addr16
fidivrl
sbb
jle
jmp
push
subb
aad
lea
xchg
les
mov
adc
lcall
out
inc
lods
xor
jg
das
push
mov
adc
fidivl
mov
inc
xchg
fistps
jp
push
incl
fidivs
jnp
sub
fcoml
addl
inc
sarb
push
repnz
inc
mov
test
push
test
imul
and
cs
repz
mov
jecxz
in
cmp
mov
and
mov
add
ret
add
stos
paddusb
js
fcomip
int3
movsl
fmul
inc
xorl
pop
cmp
fiaddl
pop
aaa
insl
dec
xor
aam
push
add
sar
adc
rorb
inc
outsb
lret
ret
jecxz
std
cmpsl
adc
pushf
ret
sbb
fwait
jne
decb
stos
or
push
imul
mov
dec
cs
and
out
pushf
pop
cmp
or
mov
outsb
mov
sub
push
xchg
movsl
sahf
or
test
mov
mov
enter
aam
xchg
mov
adcl
pushf
and
aaa
inc
pop
gs
inc
and
xor
pop
sahf
push
jns
dec
loope
loope
or
dec
sub
or
xchg
mov
lret
arpl
call
lahf
movsb
mov
out
jo
popf
ja
add
fnsave
out
lea
adc
dec
jnp
mov
aad
pop
jnp
punpckldq
imull
rcrl
xchg
mov
cmp
mov
arpl
mov
cltd
add
jmp
mov
sbb
test
fbld
jns
mov
scas
test
leave
das
or
xor
xlat
std
repz
xchg
mov
cmc
mov
ss
pop
repnz
es
push
pop
pop
ljmp
inc
and
fwait
in
sub
pop
cmp
cmpsl
icebp
pop
leave
sbb
ret
pop
xchg
in
ja
add
sub
out
mov
adc
insb
mov
mov
sbb
movsb
and
ja
mov
into
jno
or
mov
inc
fcoml
js
add
jne
shlb
inc
insl
repnz
lods
pop
push
lret
lods
cmpb
cs
push
movsb
mov
sbb
clc
mov
adcl
or
add
pusha
ljmp
fnstenv
pop
inc
nop
test
xor
mov
pop
jb
test
pop
test
fisubl
sarl
lret
or
lret
fnstsw
lahf
jae
das
shll
in
dec
sub
mov
je
leave
movsb
or
xor
loopne
fwait
add
xchg
insl
repz
out
pop
cmpsb
pop
addb
roll
sarl
push
push
mov
or
loop
pop
xor
out
pop
jnp
mov
test
pop
jmp
mov
pushf
out
inc
sub
les
push
fwait
leave
hlt
adc
add
add
jg
or
mov
aaa
hlt
mov
adc
je
dec
jg
cmp
mov
pushf
jecxz
call
pushf
jge
mov
sti
into
push
test
fidivrl
jmp
rorl
jae
push
daa
push
and
movsl
ret
mov
test
mov
mov
cltd
mov
mov
icebp
hlt
into
loopne
push
scas
inc
dec
push
popa
dec
add
pop
test
out
sub
pop
fists
repnz
cwtl
mov
cmp
mov
fstl
xchg
jno
mov
sbb
or
jecxz
and
sub
sbb
pop
adc
push
lahf
out
mov
mov
dec
xor
mov
cwtl
mov
adcb
cmp
add
add
and
sub
cmp
cs
sar
dec
shrl
lcall
les
adc
sub
mov
and
das
addr16
mov
jb
xor
fimull
xchg
bound
xchg
and
ret
das
cmpsb
push
adc
add
sub
dec
arpl
aam
push
neg
frstpm(287
iret
xchg
sahf
jmp
int3
test
and
cli
add
and
jl
iret
jae
aaa
jp
in
fwait
jbe
stc
cmp
mov
lret
push
mov
test
rcrl
cmpsb
jns,pn
add
incl
dec
adc
shlb
mov
mov
lret
shrl
mov
mov
in
jb
stos
cld
mov
repz
jb
and
jge
sbb
lea
or
pop
into
fnstsw
mov
aam
aas
adc
xchg
or
inc
xchg
push
insb
arpl
mov
cmp
mov
xor
jnp
mov
inc
add
cmp
lds
and
jae
inc
mov
dec
xor
cmp
push
mov
stos
shl
pop
paddw
in
das
insl
push
jo
cld
cmc
pop
aaa
xor
add
and
pusha
and
div
push
pop
mov
addb
test
in
jns
pop
gs
xor
add
movsb
mov
xlat
mov
fisubrl
cmc
lea
xchg
or
cli
mov
jg
xor
sbb
ja
js
adc
ficoml
push
mov
mov
mov
push
pop
pop
shlb
imul
sbb
sbb
mov
in
sahf
jl
out
into
shl
and
lahf
out
push
or
fcmovnb
sti
mov
fists
repz
push
mov
icebp
mov
addl
imul
xor
clc
pop
cmpsb
lret
shrb
in
cwtl
adc
scas
inc
cmpsb
mov
mov
pop
mov
movsl
out
repz
mov
aas
mov
into
sbb
shlb
or
mull
popa
cld
icebp
push
push
cli
sub
jb
xchg
jecxz
insl
icebp
inc
mov
sahf
dec
incb
out
nop
xor
xchg
inc
sbb
sahf
adc
gs
in
icebp
jge
int3
cs
stc
xor
stos
fisubrs
sbb
mov
out
int
in
movsl
mov
lea
ret
idivl
mov
push
subl
dec
notb
or
aad
fwait
std
push
jge
mov
mov
leave
adc
mov
xchg
mov
repnz
in
pop
xchg
cmp
sub
ja
pop
mov
mov
pop
adc
rep
loop
mov
mov
push
sub
adc
mov
jns
xchg
pop
sub
icebp
lods
sbb
sbb
cli
mov
call
sub
dec
lods
jne
scas
lods
push
pop
sbb
repnz
es
call
aam
push
call
lret
mov
addr16
cltd
cld
or
test
into
sahf
push
mov
adc
mov
cld
xchg
into
test
test
mov
lock
inc
xor
fs
and
in
adc
mov
jnp
dec
sti
daa
pop
hlt
in
idivb
mov
aad
sbb
outsl
mov
loope
cmc
sub
sbbl
pusha
pop
push
add
xchg
and
enter
pop
cld
bt
mov
dec
xor
rorb
out
out
mov
dec
filds
push
das
xlat
push
dec
rcrb
shlb
pusha
sub
test
movsl
int3
inc
rcrb
jo
cmc
fisttpll
inc
cmp
mov
nop
mov
jnp
sbb
cmp
jl
aas
sbb
xchg
daa
mov
and
shlb
iret
fiadds
inc
or
cmp
pop
sbb
fistl
push
lcall
les
mov
xchg
ss
cmp
pushf
roll
repnz
inc
fidivrs
mov
cmc
lea
push
mov
push
mov
cmpsl
jge
loopne
pop
int3
xchg
inc
dec
out
cmp
dec
or
insl
jo
mov
int
outsl
call
ret
in
sub
push
lock
repz
push
repnz
stc
mov
jge
jmp
enter
stos
xor
push
jbe
mov
jl
jbe
pusha
cmp
xchg
adc
lret
jo
or
mov
popf
cltd
sbb
outsb
test
in
in
xchg
ret
lods
rclb
jns
shlb
adc
xor
cmp
cmp
and
mov
or
add
xchg
add
int3
xchg
data16
mov
ficoms
push
dec
push
cmpl
xor
mov
xor
and
or
pop
cmp
cmovb
xchg
or
sub
enter
mov
cmp
push
rcll
sub
xor
mov
pop
js
std
sbb
fxtract
dec
nop
scas
jno
aad
das
cmc
loope
andb
add
jbe
lahf
mov
and
outsl
xchg
aad
xor
adc
cs
test
fisttps
mov
enter
pop
jge
push
adc
ss
and
mov
inc
cld
mov
into
loopne
aas
push
inc
stos
xor
dec
fnstsw
test
push
xor
pop
int
and
lcall
xor
cmp
add
cmp
pusha
ljmp
push
cmpsl
fmuls
pop
jnp
jg
sarl
loopw,pt
pushf
cli
int3
aas
pop
leave
dec
dec
or
jnp
push
mov
test
sbb
rcrb
loop
faddl
cmp
push
enter
mov
ss
adc
xchg
roll
insb
mov
aad
lds
shlb
insl
loope
dec
test
popa
shll
ret
das
mov
push
roll
mov
out
out
jnp
lret
pop
arpl
shlb
add
outsb
jbe
mov
jbe
sub
int3
repnz
mov
imul
pop
std
pop
popf
ss
insb
mov
sbb
mov
dec
leave
sbb
jle
or
pop
std
xor
daa
loopne
outsl
sub
push
or
lret
ja
and
adc
lahf
xchg
sbb
and
mov
out
loope
and
fldt
mov
lds
scas
xchg
ret
mov
ja
add
mov
inc
dec
outsl
mov
sub
pop
inc
xlat
mov
popl
icebp
aaa
ret
ja
xchg
daa
cmp
push
add
xchg
cmp
dec
scas
add
mov
cmp
mov
adc
cmp
in
sbbl
cmpsl
mov
lret
jne
xchg
push
jae
fwait
mov
xor
jbe
mov
cmp
ljmp
jno
bound
cmpsl
mov
inc
iret
and
adc
mov
xchg
les
in
imul
cmp
cmp
in
pop
test
dec
sbb
mov
or
jle
mov
pop
sub
and
jno
pop
gs
mov
mov
lret
mov
sub
mov
or
movsb
mov
lcall
inc
xchg
out
sub
adc
sahf
adc
cmpsb
movsb
cmp
fbld
cmp
cmpsl
in
imul
jmp
testb
jg
jnp
sbb
and
cmp
mov
insb
jmp
push
repnz
adc
inc
ja
push
pop
in
sub
xchg
hlt
dec
cwtl
xchg
add
mov
icebp
repz
pop
aaa
pop
sub
adcl
push
mov
adc
mov
test
bound
or
inc
aaa
les
mov
stc
movsb
mov
inc
jp
enter
shrl
repnz
vcvtsd2si
ljmp
dec
dec
enter
test
add
dec
jno
add
outsb
cmpsb
test
outsb
rorb
add
dec
dec
xchg
es
cmc
cltd
pop
lcall
inc
jmp
pop
ror
and
push
sub
testb
sub
adc
punpcklwd
in
sub
jae
fucom
ljmp
daa
sbb
or
fcompl
popf
out
sub
lret
loop
lea
sbb
sub
push
addl
sub
jnp
cmc
lods
pop
stos
adc
mov
insb
push
subl
into
js
sub
xchg
test
jmp
xchg
cld
lret
xchg
mov
mov
sbb
or
bswap
jnp
rolb
or
sub
or
mov
add
in
mov
sub
add
fdivrl
cmp
adc
daa
dec
lods
sub
push
jbe
gs
out
dec
repz
mov
xchg
and
xchg
out
scas
xchg
xor
ficompl
add
cmp
mov
push
jns
clc
jb
jl
inc
and
test
jb
shlb
xchg
push
test
mov
insb
mov
jb
test
dec
cmp
push
faddl
mov
cmpsb
add
loop
pop
lret
mov
mov
pop
icebp
xor
sbb
cmpsb
jle
push
mov
and
adc
jno
dec
dec
test
sbbl
fidivrl
imul
into
adc
ja
jnp
repnz
dec
nop
testb
and
xor
mov
jecxz
mov
and
stos
mov
cmp
insb
cltd
popl
pop
aad
push
jl
outsl
fxtract
cmp
popa
mov
in
jl
xchg
cltd
xchg
mov
cmp
jle
or
scas
enter
call
mov
ljmp
outsb
test
jge
mov
jp
and
inc
call
aas
cmp
loop
test
js
stc
add
int
push
dec
roll
xchg
xchg
mov
dec
in
pop
jle
lret
inc
mov
arpl
je
mov
xchg
jae
leave
into
shrb
int
or
sub
fmuls
inc
mov
sub
aam
or
mov
xchg
ds
mov
call
mov
push
cmpl
mov
fisttpl
mov
outsb
mov
pop
mov
lret
lret
cmpsl
notb
jle
in
inc
sbb
dec
in
push
sub
xchg
sub
cwtl
or
add
pop
inc
shll
aad
push
std
insl
cmp
mov
aad
test
jmp
arpl
rcrl
jno
rolb
aaa
xor
ljmp
call
mov
cmpsb
es
cmc
xor
cltd
mov
jp
mov
addb
sbb
popa
xchg
pop
jp
es
pop
jo,pn
stos
mov
adc
pushf
sub
jg
mov
outsl
shlb
addl
bound
pop
add
in
push
mov
adc
dec
in
push
inc
and
in
mov
or
mov
sbb
pop
jle
lret
sahf
stc
lret
cli
ss
test
mov
outsl
pop
mov
adc
mov
add
ret
ja
jae
es
push
dec
xchg
lcall
inc
lds
pushf
imul
in
in
jp
mov
adc
test
cmp
daa
xorl
ret
data16
mov
push
mov
movsb
ficoms
or
xor
and
push
pop
xchg
xor
push
and
inc
pop
jg
jbe
scas
jae
mov
cmp
fisubs
out
pusha
mov
loope
cld
lods
jb
dec
mov
mov
and
push
cli
notl
xchg
lret
scas
movsl
pop
push
add
and
sub
cmc
dec
push
mov
adc
test
add
and
or
mov
inc
in
leave
cmp
pop
xchg
cltd
jae
stc
movsl
insb
ret
adc
out
negl
enter
add
jnp
push
mov
jmp
int3
inc
movsl
push
ds
sarb
cli
notb
js
inc
cmp
aad
sbb
rolb
popa
or
out
lods
mov
mov
negb
lods
negl
mov
mov
fs
xlat
xor
leave
repnz
xchg
push
dec
mov
dec
sub
cmp
jb
ficoms
testb
imul
pop
loope
mov
fstp
sbb
clc
fdivr
dec
xor
cmp
and
out
fidivrs
and
stc
movsb
sub
sub
push
dec
pop
sbb
nop
jl
mov
sub
add
xchg
das
pop
xor
xor
push
in
cmp
xchg
adcl
push
test
scas
aaa
fldenv
gs
aad
pop
stc
cmp
dec
mov
in
push
out
or
stos
jecxz
mov
push
jno
pop
inc
jns
je
adc
and
xchg
in
push
xchg
mov
push
ss
cwtl
pop
add
mov
inc
stos
pushf
pop
jno
fbld
dec
daa
add
xchg
inc
xchg
lahf
adc
or
imul
fwait
in
cmp
int
mov
xchg
jno
ffree
sbb
jb
dec
mov
ds
pop
mov
mov
je
testl
aad
sub
int
mov
add
mov
into
add
and
fsubrl
cmp
push
out
cmp
dec
xor
ljmp
adc
sti
jo
call
mov
int
push
push
adc
xchg
xchg
or
shrl
dec
sub
sub
pop
or
mov
jge
pushf
daa
fmulp
xlat
ja
add
leave
fs
xchg
push
enter
fdiv
lods
push
cmp
scas
jge
insl
push
lahf
fsubrl
bound
lods
or
aad
je
sbb
inc
sub
mov
add
out
push
lret
es
push
mov
jo
add
repz
ja
inc
and
push
aas
int3
xorl
add
adc
xchg
xor
loopne
in
inc
fidivrs
loop
stos
fisttps
dec
movsb
lahf
xchg
jnp
sub
fsubrs
push
repnz
cmp
sbb
add
ja
jp
out
mov
cmpsl
fwait
pop
xchg
jae
rep
mov
popf
repz
jle
arpl
mov
or
pop
lcall
ljmp
movb
shll
lcall
mov
push
mov
adc
pushf
xor
cmpsb
mov
xchg
int
cltd
push
and
push
adc
mov
subl
mov
mov
test
pop
inc
mov
push
dec
pop
push
jp
xchg
adc
pop
aas
inc
cmp
or
mov
dec
lds
adc
or
ret
xor
xchg
iret
adc
hlt
adc
rolb
imul
xchg
popf
push
call
mov
sbb
push
cli
aam
mov
xor
enter
in
int
jnp
cmp
xchg
inc
cmp
out
ljmp
sub
in
mov
jg
jne
push
pop
jbe
ror
popf
sarb
xchg
call
mov
loope
out
pop
xchg
mov
lret
dec
bound
xchg
les
push
or
add
mov
jp
scas
xor
aas
out
je
jbe
sub
mov
cs
inc
xor
jecxz
cmp
decb
movsl
pop
sti
leave
adc
jp
sub
outsl
sbb
cltd
fisubrl
and
and
in
inc
lods
adc
data16
ret
loop
push
data16
outsb
aaa
jle
jae
loope
lods
lods
mov
ss
pop
fisubrs
jbe
std
sti
stos
add
mov
fwait
lods
dec
xchg
mov
mov
fs
xchg
mov
bound
fcmovu
push
lea
lock
stos
lahf
rcr
lea
dec
inc
insb
jge
mov
xchg
in
mov
movl
test
and
out
fldenv
testb
jmp
stc
jo
and
andl
xor
cmp
xchg
xlat
cmp
jmp
xor
test
push
in
test
cmp
or
and
add
jbe
xchg
jno
inc
pop
out
pushf
and
xor
jbe
ret
pop
inc
jae
inc
adc
dec
fs
je
gs
xchg
aad
jle
mov
and
ja
js
fwait
push
int
js
xchg
mov
push
jl
mov
push
dec
fbstp
cwtl
push
push
xor
test
lret
fildll
lods
xor
mov
jge
mov
mov
mov
jg
out
pop
mov
xor
push
fcmovbe
cmpsb
int3
xchg
pop
jo
shlb
sti
xor
and
int
ficompl
xchg
add
fsubrl
push
iret
jnp
sti
mov
insl
pop
in
stos
aas
or
outsb
mov
fidivrl
dec
sahf
arpl
sub
bound
jg
pop
and
cmpsb
sbb
sbb
cmp
lds
jecxz
ss
mov
adc
dec
ljmp
dec
lock
mov
cld
call
lret
aas
adc
imul
mov
call
xchg
mov
dec
mov
loope
and
mov
shl
adc
mov
sbb
jbe
les
out
cmp
nop
lods
pop
xor
inc
andb
int
cli
pop
add
jb
cwtl
inc
cli
popa
push
jae
add
fldl
subl
pop
jbe
jae
sbb
in
int
mov
ja
jmp
loope
sbb
cltd
adc
sbb
ds
xor
xchg
movsb
jmp
jnp
xchg
or
mov
test
es
ss
popf
sbb
rclb
inc
mov
adc
sarl
movsl
jl
push
outsl
xchg
or
push
stc
hlt
sbb
push
pusha
jl
iret
adc
cmp
add
or
and
mov
lret
mov
pop
mov
pop
fsub
jl
shlb
js
emms
sahf
lods
cli
stos
push
lods
sbb
sub
scas
push
sahf
mov
xor
sub
pop
pop
xchg
mov
popa
pop
xlat
in
jecxz
std
xor
inc
aam
sbb
cmp
fmull
sti
loope
push
mov
test
lods
dec
idivl
mov
jmp
stc
pop
xsha1
cmpsb
dec
fmull
cwtl
dec
adc
push
sbb
std
xor
add
loop
cmp
aam
xor
jl
pop
repnz
xchg
pop
xor
dec
nop
cwtl
cmpsl
rorl
fwait
sbb
and
push
and
adc
movsl
mov
lods
sti
outsb
add
xor
add
mov
jae
addr16
pop
fcompl
fsubs
mov
repnz
mov
clc
xchg
push
pop
xchg
xchg
push
xor
or
xchg
daa
int3
ffree
filds
cwtl
adc
sbb
mov
ljmp
or
inc
pop
mov
into
and
dec
repz
ds
aas
fwait
shl
xor
push
lret
sbbl
out
or
sbb
sub
mov
das
insb
iret
ficompl
movsb
or
lcall
std
lcall
lods
sbb
mov
inc
xchg
popa
and
push
mov
mov
push
dec
mov
data16
inc
mov
add
test
int3
push
or
lods
push
fildl
cmp
and
aam
int3
repz
fnsave
fistpl
shll
lds
movsl
pop
ret
xchg
sub
mov
mov
cmpsl
inc
in
add
jmp
jmp
stc
mov
pop
aaa
insb
sub
xchg
sub
mov
mov
xchg
push
or
cmp
dec
mov
jo
cmpsb
emms
mov
jb
clc
jl
and
std
lret
mov
mov
or
inc
or
andb
aaa
adc
scas
push
into
in
iret
add
inc
cmp
jg
xor
outsb
or
insb
sbbb
mov
push
rorl
std
sub
inc
cmp
inc
adc
fcomp
mov
das
imul
ljmp
dec
shl
pop
imul
cmp
mov
psubw
les
cmp
dec
cmp
dec
mov
xchg
pop
pop
sbb
pop
ror
mov
xchg
dec
je
out
int3
je
mov
push
in
add
shrb
dec
and
rcrb
jl
mov
or
sti
xor
pop
or
add
mov
fs
shlb
test
inc
cltd
or
std
outsb
jp
lahf
xor
xchg
pmulhuw
mov
xchg
adc
pop
xchg
lods
push
adc
mov
fiadds
int
das
loope
das
push
popf
das
jae
xor
test
into
cmp
nop
and
sub
adc
fs
jno
push
mov
mov
xchg
mov
pop
cmpl
scas
test
lea
or
movsb
jle
outsb
jge
push
mov
insb
or
stos
add
dec
out
sti
mov
pop
add
roll
out
cmpb
fcomps
mov
stos
cld
adc
stc
push
cmc
adcb
dec
push
jp
ret
sub
call
enter
jmp
cmp
mov
jl
fisubs
shlb
cld
data16
movsb
mov
or
jne
push
movsl
aam
cmpb
push
insl
sbb
shrb
mov
mov
aad
popa
add
aas
std
jmp
test
adc
sti
insb
xor
aaa
cld
aaa
scas
in
movl
in
ficomps
xchg
dec
mov
pop
sbb
push
cwtl
mov
mov
sbb
mov
dec
fnstenv
fisttpl
dec
test
jmp
dec
mov
je
adc
jmp
xor
sahf
sbb
mov
jmp
stos
pop
cmp
dec
aas
mov
push
icebp
push
cmp
sbb
adc
rorb
dec
xchg
or
push
leave
shrb
add
int
jb
mov
jo
popf
jecxz
shrb
daa
movsl
loop
in
cmp
or
outsl
ljmp
and
shl
push
push
insb
daa
adcl
jmp
nop
jmp
push
jae
fmull
adc
sbb
in
test
sbb
or
push
or
lahf
aaa
cmp
lcall
push
lret
jg
sahf
xchg
lret
sbbl
sarl
enter
sti
adc
leave
hlt
iret
mov
clc
xchg
jle
and
xor
popa
cltd
jne
rorl
adc
xchg
and
lret
push
stc
cmp
insl
adc
cwtl
imul
sbb
daa
add
mov
cmp
sub
xor
add
xchg
push
dec
mov
lods
pop
push
adc
stos
push
add
cmp
cmp
inc
and
xor
xchg
scas
pop
pop
in
loopne
inc
arpl
mov
pop
dec
cmpsl
ss
adc
sub
lock
lahf
gs
cmc
xor
add
hlt
and
pop
sbb
aad
jbe
inc
ljmp
jg
jp
inc
inc
mov
std
gs
movd
cltd
push
lods
in
daa
lock
mov
and
xchg
mov
push
mov
push
cltd
inc
aas
inc
inc
out
mov
loope
inc
sub
lea
sbbb
fdivs
fistl
stc
inc
fcoms
imul
pop
adc
cld
and
sahf
inc
sub
in
sbb
loop
out
push
sub
xchg
cmpsb
js
mov
mov
arpl
mov
adc
sbb
repz
pop
sub
mov
jns
mov
push
insl
test
cs
dec
cltd
inc
xchg
mov
mov
mov
jae
bound
outsb
stc
push
or
mov
inc
xor
mov
and
clc
mov
lahf
loope
sub
xchg
stos
out
xchg
xchg
out
inc
inc
pop
add
lock
repz
fdivrs
mov
or
sbb
es
or
or
pop
inc
xlat
imul
test
fistps
xchg
adc
xor
or
sar
ljmp
arpl
and
arpl
push
mov
jecxz
sub
pop
jl
icebp
loopne
or
outsb
jbe
sub
out
in
into
adc
and
aad
pop
add
push
mov
test
fstpl
xor
cld
jg
addr16
mov
pusha
push
mov
inc
imulb
cltd
inc
lret
adc
clc
lock
stc
in
xor
and
lods
scas
fildll
mov
add
inc
sahf
popf
adc
pop
lods
xchg
xor
scas
dec
or
dec
fabs
dec
aad
nop
fadds
dec
repz
dec
and
loope
and
and
sbb
dec
lods
stos
pop
test
hlt
cmpsb
xchg
xlat
cmc
daa
nopl
add
loope
mov
push
or
mov
sub
push
insl
and
cmp
jbe
xor
lock
mov
add
cmp
adc
sbb
sub
into
es
jns
inc
push
das
test
mov
xchg
add
sub
test
repnz
push
push
push
mov
xor
push
rcr
cvtdq2ps
pop
mov
lret
sahf
ds
xchg
mov
and
into
clc
hlt
sarb
imul
mov
inc
dec
lcall
mov
adc
call
test
imul
in
int
loope
andl
shlb
sub
inc
adc
sub
fcoms
mov
rcl
dec
ret
adc
orl
dec
or
popa
sbb
jns
fldenv
iret
sbb
sub
sub
data16
adc
daa
jl
out
in
popf
stc
sbb
pop
push
sbb
xchg
cmp
cli
filds
jecxz
xlat
dec
dec
rcrb
pop
push
jg
pop
fwait
pop
mov
test
inc
insb
je
enter
jmp
ja
mov
mov
je
pushf
dec
cmp
sub
mov
xor
jl
icebp
pop
cmp
xlat
repnz
loopne
jne
rorb
inc
xor
insl
test
cmp
fdivs
out
inc
out
inc
jne
add
dec
pop
mov
adc
aas
daa
pop
leave
mov
mov
popf
roll
lret
sahf
cmc
out
push
xor
sub
mov
push
aaa
jae
adc
dec
push
pop
into
cmp
push
hlt
sub
sub
imul
fsubr
das
insl
lods
ror
cld
sti
call
nop
movsl
out
lea
loop
fwait
push
add
out
loop
icebp
sbb
xor
push
insl
icebp
xchg
clc
push
add
jnp
clc
cmpsl
ja
scas
insl
addr16
test
mov
imul
bound
into
xchg
lea
mov
jns
and
adc
hlt
xchg
cmpsl
nop
ss
mov
dec
sbb
mov
in
or
sbb
pop
mov
stos
hlt
mov
lret
mov
in
loopne
sbb
inc
orb
ret
fwait
inc
pop
xor
movzbl
or
pop
data16
inc
cmp
add
arpl
shlb
inc
popa
test
mov
jns
jge
cwtl
push
dec
xchg
mov
pop
sub
divl
add
shr
mov
or
dec
inc
jbe
ljmp
outsl
mov
mov
xchg
and
lods
push
lea
sahf
jmp
in
xor
sbb
ja
cli
pusha
daa
push
xchg
repnz
lock
out
inc
push
lret
push
imul
lret
mov
pop
aam
in
sub
push
out
push
imul
inc
sbb
ljmp
nop
adc
in
call
push
jno
xor
adc
mov
lea
loopne
in
ret
inc
ret
cltd
insb
notl
cmpsl
pop
xchg
jne
xlat
xchg
insl
loope
outsb
adc
push
iret
rorl
ss
ss
and
lcall
hlt
shl
fiaddl
adc
mull
lahf
sbb
scas
mov
test
lock
push
add
xchg
mov
dec
push
inc
add
outsl
pop
mov
in
mov
lea
mov
cmp
mov
test
js
or
fs
iret
nop
or
xchg
nop
cmp
in
movsb
fwait
lret
sbb
pop
lds
aad
js
or
gs
int3
mov
insl
daa
jnp
imul
out
mov
xchg
inc
pop
lret
fs
in
push
mov
clc
sub
mov
push
dec
les
jl
lret
dec
push
je
add
or
sbb
jo
idiv
mov
inc
mov
cmc
out
inc
jge
xor
rcl
in
incl
jle
sbb
pop
push
mov
push
sub
in
test
sbb
orl
imul
inc
mov
lcall
mov
and
mov
shlb
mov
jb
jno
xor
jae
push
mov
mov
nop
movsb
xchg
outsl
movsb
mov
lret
xor
aas
jo
int3
add
cmp
xor
rcl
xchg
inc
mov
cltd
jp
adc
dec
popa
xchg
push
pop
jb
repnz
repz
jbe
xor
jbe
and
ljmp
adc
mov
push
mov
rorl
out
mov
or
mov
and
dec
out
imul
push
add
sub
dec
cmc
and
sbb
ret
mov
jns
outsb
adc
jmp
mov
push
pushf
cwtl
clc
std
dec
lret
mov
loope
push
sbb
pushw
jb
aad
test
and
popa
gs
xor
std
scas
push
shrl
imul
pop
cs
mov
fs
add
cwtl
mov
jl
inc
daa
xor
cli
mov
mov
jp
pushf
insb
shrl
pop
fistpl
push
movsb
shlb
mov
mov
push
lahf
adc
aas
inc
xchg
addr16
mov
in
cwtl
in
or
push
xor
push
pop
xchg
xor
sub
stc
push
adc
insb
rclb
inc
cmp
dec
out
test
aad
outsb
in
aad
test
mov
inc
fcoms
fldcw
push
ljmp
sbb
sub
je
lea
outsb
stos
ret
push
jg
and
clc
addr16
add
mov
cmp
lcall
fimull
add
inc
mov
lret
arpl
or
cmp
push
out
ret
mov
adc
into
push
push
mov
xlat
test
sbb
cmp
imul
jg
xchg
fcoms
push
jo
daa
frstor
fistl
lea
xchg
or
movsb
sub
aas
xor
cmc
rolb
pop
pop
lcall
pop
add
mov
lahf
push
mov
mov
std
push
lret
mov
out
jp
mov
sbb
and
fsubrl
ss
fidivrl
and
add
out
and
mov
xor
xchg
pop
fists
jo
mov
dec
push
sahf
std
adc
repz
pushf
and
bound
sbb
int
mull
repnz
cmp
push
push
cmpsl
insl
stc
aam
shrl
dec
add
push
je
in
jno
call
andl
cmp
mov
nop
outsl
enter
jno
addl
sbb
leave
repnz
add
out
push
mov
xor
mov
xor
add
inc
inc
dec
jge
popf
in
mov
push
pop
cmc
jg
or
cltd
adc
and
push
push
inc
pop
js
nop
mov
xor
pop
fimull
xor
sub
xchg
jle
addr16
fistpl
sub
lcall
out
push
sti
push
cmp
add
dec
mov
sub
mov
insb
cli
test
mov
cmovne
pop
aam
psubsb
das
mov
into
mov
enter
mov
lret
aam
jo
push
fcoms
rorl
jne
out
psubd
xlat
lds
jns
leave
xchg
jb
leave
fbld
inc
dec
stos
mov
es
aad
mov
adc
loope
jecxz
enter
ficoml
ret
notb
popa
mov
rcll
mov
out
push
mov
xchg
hlt
add
mov
mov
cld
jecxz
xchg
push
pop
imul
outsl
xchg
inc
sbb
add
ficompl
aad
inc
xchg
ret
js
lcall
fcoml
ja
add
mov
jns
inc
imul
xor
fcomps
les
fidivrs
pop
int3
or
sub
cmp
jo
push
jle
aaa
xor
in
in
lds
repnz
inc
add
xor
jno
jo
repz
repz
add
movsl
add
out
js
cmp
inc
and
clc
in
insl
daa
jae
xchg
fstps
mov
xchg
lods
dec
stos
leave
adc
cmpw
xchg
and
cld
movsl
leave
dec
ds
mov
mov
in
out
xchg
cmp
pusha
jl
adc
outsl
fsts
imul
into
pop
loop
popf
xor
or
shrl
sahf
add
sbb
sub
pop
test
add
add
mov
movsl
pop
data16
cmpsb
dec
cmp
stos
lahf
sub
fsubp
sarl
movsb
shl
dec
mov
out
ficomps
shlb
arpl
in
cltd
sbb
out
sahf
and
aad
jg
mov
xor
and
and
andl
iret
xor
inc
mov
cmp
jge
xor
add
lock
or
lcall
scas
jmp
enter
adc
sub
bound
mov
xchg
notl
lfs
je
out
lahf
sub
inc
pop
aaa
or
clc
dec
xchg
xchg
cmpsb
loop
xchg
xor
loop
mov
mov
jmp
cmpsb
mov
jge
mov
sbb
rorb
cmp
lcall
mov
shl
pop
hlt
adc
in
add
push
lea
imul
mov
sbb
shrl
add
cs
daa
cltd
loopne
sti
jne
pop
nop
mov
push
std
mov
mov
pop
push
or
in
cmp
js
jne
pop
subb
cmp
and
lods
mov
push
subl
pop
pushf
pop
inc
pop
inc
aaa
jge,pn
rol
cvtpi2ps
or
iret
mov
js
or
pusha
push
das
mov
fwait
xchg
shrl
push
mov
out
xchg
inc
out
ror
inc
or
cmc
dec
dec
or
in
push
fwait
xchg
mov
xchg
mov
ss
aas
jae
aad
movsl
fadds
sbb
mov
and
mov
cs
stos
fdiv
xor
enter
or
test
mov
ficoms
inc
lods
je
mov
das
jl
dec
inc
je
movsl
cmp
mov
nop
or
movsb
xchg
je
mov
pop
xchg
ss
pop
jne
dec
dec
jae
add
out
rcll
cmp
incb
insl
dec
jns,pn
test
pop
and
imul
lock
out
inc
sbb
xchg
div
rcll
mov
divl
cmp
fwait
shll
xor
out
mov
stc
jne
sbb
dec
mov
cmp
sub
iret
daa
lds
sbb
or
xchg
in
sldt
lock
add
inc
push
push
dec
lahf
mulb
cmp
stos
insb
outsl
adc
pop
jns
stos
and
dec
sahf
repnz
orb
rorb
scas
inc
cmp
ss
push
movsb
lds
rcrb
scas
cltd
xlat
fistps
and
mov
mov
repz
cmc
dec
shlb
cmc
cltd
in
fldcw
or
dec
jns
mov
jne
lret
addr16
popf
push
cmp
sub
gs
push
outsl
adc
mov
pop
test
push
inc
pop
negl
scas
adc
push
inc
cwtl
pop
or
rclb
sub
dec
pop
mov
insl
hlt
out
outsl
push
sbb
mov
dec
loopne
repnz
outsl
out
das
inc
jmp
adc
sub
cmp
rorb
icebp
xchg
cmpsb
push
add
xchg
pop
push
pop
ja,pn
stc
push
je
pusha
push
in
sub
and
outsb
lret
loop
mov
push
cmp
sbb
jp
aam
adc
popf
in
pop
sbb
xor
push
fdivrs
insb
mov
cmp
mov
cmp
int3
jno
fdiv
mov
loope
ljmp
addr16
pusha
roll
insb
sti
fimuls
test
sbb
xchg
jg
mov
xor
aas
mov
js
add
inc
movups
or
add
gs
push
add
xor
fwait
mov
hlt
loopne
cli
xchg
inc
dec
insb
shrb
lcall
fcmovu
int3
or
outsb
pushf
add
mov
dec
clc
cltd
lcall
loopne
xchg
xor
push
int3
test
ss
repz
cltd
sub
aaa
outsb
jmp
cmpsb
dec
add
xchg
adc
movsb
nop
or
inc
movsl
mov
xchg
push
cmc
xor
outsl
xchg
push
add
cmc
das
jecxz,pn
cltd
xchg
das
jmp
jecxz
pop
or
xchg
movsb
adc
lods
cmp
inc
stos
push
fcoms
sarl
mov
lods
pop
jl
fsts
push
dec
lea
jno
mov
mov
mov
repz
and
mov
sub
cmp
repz
test
jmp
xchg
push
lea
mov
jno
push
iret
sub
xchg
push
and
push
or
xchg
add
and
fisttpll
or
inc
nop
pusha
call
jmp
push
ret
call
jmp
mov
add
sub
cmpb
jne
mov
cmp
mov
jne
lea
push
push
pushl
lea
push
jmp
add
add
add
push
push
add
pop
test
je
jmp
call
movsl
and
rclb
add
jne
call
pop
cmp
jne
xor
mov
test
je
push
push
pushl
call
mov
test
je
push
push
pushl
call
pop
or
popa
jne
push
pop
ret
xor
neg
sbb
inc
ret
jmp
es
mov
call
mov
movzwl
pop
mov
add
mov
mov
push
push
push
pop
pop
pop
pushl
jmp
aaa
movsb
or
push
das
cmp
pop
mov
xor
movswl
xor
jmp
xor
xchg
pop
add
and
pushf
movsl
add
or
push
mov
popl
push
pop
mov
sub
push
mov
pop
add
movswl
cmp
jne
mov
jmp
lods
loop
xor
movzwl
jmp
hlt
sbb
fidivrs
and
repnz
stos
or
lcall
fistps
cmp
add
ret
mov
pop
xchg
add
lcall
fcmovnb
adc
dec
stc
sbb
jmp
pop
pop
or
fadds
pop
dec
push
out
hlt
sub
add
stos
or
xor
sbb
mov
push
jecxz
movsl
or
lcall
es
scas
mov
mov
cs
ficompl
sbb
lcall
xchg
enter
les
iret
lcall
xlat
sbb
jnp
and
test
pop
add
test
mov
ss
push
xchg
insb
mov
insl
sbb
jle
xlat
adc
jle,pn
idivb
adc
jle
in
xchg
mov
mov
jp
mov
cmp
rcll
jg
push
lahf
fimull
xchg
mov
les
jmp
xchg
in
xchg
mov
mov
lds
sbb
insb
mov
xchg
movsb
push
cmpsb
push
nop
or
pop
popl
in
or
add
outsl
mov
in
xchg
aaa
and
sub
aas
insb
lret
add
pop
mov
insl
ds
in
int
sti
cmpsb
xorl
pop
in
mov
int3
mov
jb
pop
sub
sarb
mov
jge
push
rcl
loop
lods
jb
push
sub
add
ljmp
arpl
sbb
mov
inc
cmp
fs
repz
dec
ss
clc
rcrb
cmpsb
fnstcw
add
xlat
loopne
sub
clc
sub
fimuls
popa
mov
sbb
test
add
cmp
adc
int3
xchg
dec
sub
pushf
out
mov
aam
xor
out
daa
int
mov
sub
jbe
or
sbb
clc
add
add
rcl
lret
lret
push
or
sbb
shl
loope
push
outsl
enter
ss
xchg
ret
pop
mov
mov
clc
pop
inc
sub
pop
and
mov
enter
sbb
cmc
mov
fs
imul
jge
aaa
cmp
stos
add
mov
imul
enter
insl
imul
adc
xchg
push
sub
negb
push
imul
ljmp
push
rol
lret
je
mov
mov
es
insb
rcl
adc
addr16
in
ljmp
jmp
lods
jb
jno
mov
fisubl
out
fisubl
jecxz
dec
jae
jno
stos
ljmp
cld
and
mov
iret
cmp
es
mov
jle
push
lret
adc
mov
mov
adc
bound
sbb
mov
mov
mov
jae
jno
sbb
sub
inc
xor
push
aaa
cld
mov
jae
fistpll
jno
es
mov
push
ja
jns
jno
mov
jge
jb
jno
jae
jno
jae
jno
jae
jno
cli
test
sti
sbb
insl
mov
jg
jno
jne
push
scas
jg
jno
cld
xchg
arpl
jg
jno
imulb
jae
xchg
mov
sbb
bound
inc
mov
jae
jo
loope
fs
jle
jno
cld
xchg
arpl
xlat
cmpsb
mov
call
mov
call
push
jb
jno
mov
jge
out
jle
jno
mov
push
jno
cli
adc
in
xchg
arpl
jae
fidivrl
ja
pop
inc
push
fimull
je
pop
jnp
and
cmp
jno
fmulp
xlat
jg
mov
xor
jae
mov
xlat
mov
cmp
xchg
arpl
jg
fisttpll
jno
cli
push
fimull
jno
cli
adc
cld
mov
mov
adc
or
cld
arpl
xlat
stos
mov
call
inc
jg
jno
in
sti
mov
adc
movsl
scas
xor
jne
sti
mov
jg
jno
jne
jno
cmp
jno
jae
jno
jae
jge
out
iret
xchg
shl
jnp
jmp
aas
jl
aad
insb
data16
mov
pusha
test
and
sbb
xor
aas
jl
aad
insb
popaw
xor
imul
pusha
test
and
mov
and
or
subl
fcmovnu
mov
adc
xor
aas
jl
aad
insb
data16
add
out
fldcw
std
push
es
push
ret
arpl
add
mov
adc
xor
aas
jl
aad
insb
repnz
pushl
arpl
add
mov
adc
cmp
fcom
or
test
js
addl
mov
jp
gs
mov
mov
bound
and
or
subl
fcmovnu
mov
adc
addr16
jne
repnz
leave
push
mov
stos
fnstcw
addb
inc
jae
ja
push
push
loop
jg
fdivrl
adc
fcmove
mov
test
popf
push
cmc
sar
bound
popf
in
mov
adc
out
push
call
jno
bound
jae
fiaddl
jae
jno
jb
jo
cmpsb
push
mov
xor
repz
fsub
mov
bound
and
inc
bound
or
dec
mov
bound
hlt
xchg
gs
jle
jno
ret
and
jno
inc
bound
and
movsb
inc
cld
dec
jno
xor
punpckldq
aad
fwait
mov
jae
ret
push
mov
fs
cmpsb
aaa
jl
mov
stc
aad
fwait
sbbb
jge
stos
add
cmp
fcomps
out
xor
imul
negb
add
mov
mov
mov
jae
mull
aas
ljmp
pop
fisubl
loop
xor
imul
bound
jae
jno
jae
jno
jae
jno
jae
jno
jae
jno
jae
pushf
mov
jae
mov
jae
jno
jae
jno
jae
jno
jae
jno
jae
jno
jl
rcrl
jae
jno
jae
jno
jae
jno
jb
jno
jp
popf
scas
jl
jno
jge
jno
jb
mov
jb
pop
mov
bound
aam
bound
jl
jno
jne
push
test
jno
jae
jno
jae
jno
jae
jno
jae
jno
jae
jno
jae
jno
jae
jno
jae
jno
jae
jno
jae
jno
jae
jno
jae
jno
jae
jno
jae
jno
jae
jno
jae
jno
jae
jno
jae
jno
jae
jno
jae
jno
jae
jno
jae
jno
jae
jno
jae
jno
jae
jno
jae
jno
jae
jno
jae
jno
jae
jno
jae
jno
jae
jno
jae
jno
jae
jno
jae
jno
jae
jno
jae
jno
jae
jno
jae
jno
jae
jno
jae
jno
jae
jno
jae
jno
jae
jno
jae
jno
jae
jno
jae
jno
jae
jno
popf
dec
add
xchg
nop
add
add
or
add
or
lret
xor
or
imul
gs
xor
cs
insb
add
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
lret
in
leave
or
inc
lret
or
leave
lret
or
push
lret
or
ror
or
pop
lret
or
fxch
or
push
lret
or
jae
or
jmp
add
add
lret
or
mov
or
stc
lret
or
xchg
lret
or
add
or
mov
int3
or
scas
lret
or
adc
or
mov
int3
or
jae
outsw
insb
fs
fs
insb
add
outsb
imul
insb
add
xor
xor
fs
insb
add
gs
xor
fs
insb
add
jbe
jo
xor
cs
insb
add
gs
insb
xor
cs
insb
add
xor
cs
insb
add
gs
jne
xor
cs
insb
add
insb
ja
jo
cs
insb
add
gs
jne
xor
cs
insb
add
jb
gs
xor
cs
insb
add
int3
or
add
add
xor
or
add
add
je
add
inc
int3
or
add
add
pop
int3
or
add
add
push
add
add
or
add
add
mov
add
add
add
add
add
add
add
add
push
dec
inc
gs
outsl
insb
fs
popa
je
inc
add
add
je
jb
gs
jo
outsb
push
jb
inc
add
add
insb
insb
dec
gs
dec
outsl
outsl
imul
add
push
gs
outsb
jne
push
popa
insb
jne
inc
add
add
inc
gs
imul
add
add
jb
outsb
addr16
jb
insl
inc
push
dec
inc
xor
add
push
je
push
inc
push
add
jb
popa
outsb
je
push
push
jns
gs
js
add
push
popa
imul
jo
imul
movsb
cmp
or
or
jg
add
pop
jo
add
push
scas
and
mov
clc
mov
jecxz
and
xor
test
push
and
dec
inc
add
sbb
jp
and
push
sub
js
inc
sbbb
in
and
in
jb
inc
insl
jmp
adc
or
push
add
outsb
xor
add
push
and
xor
sbb
insb
and
jo
je
mov
dec
sub
pop
add
add
arpl
and
mov
enter
in
jb
cmp
mov
mov
in
jb
cmp
mov
add
fs
or
pop
sbb
add
xchg
dec
enter
inc
jb
cmp
pop
and
xor
adc
les
call
cmp
sub
add
fcoms
push
add
or
jo
call
or
inc
mov
mov
pop
sbb
mov
cmp
sti
pop
lods
pop
sub
xor
add
or
sbb
sbb
cmp
adc
add
mov
adc
push
jo
xor
add
jne
xor
rcrb
mov
add
or
pop
mov
add
rorb
mov
ds
add
cli
fs
out
iret
adc
push
pop
nop
in
add
pop
je
add
or
call
add
dec
dec
mov
push
mov
or
add
int3
bound
inc
ret
mov
xchg
add
gs
push
unpckhps
xchg
mov
nop
aas
push
push
add
and
call
cmp
shrb
out
nop
add
rcrb
inc
stos
or
push
add
adcl
sbb
inc
add
add
add
jb
pop
sbb
cmpsl
jmp
xor
clc
gs
test
mov
pop
pop
pop
test
loopne
cmp
cmp
mov
add
insb
inc
into
cmp
dec
add
call
ja
arpl
jne
in
or
cwtl
or
stos
cmpl
and
cmpsb
gs
jmp
xchg
or
jb
add
into
add
clc
aaa
xor
iret
pop
cmp
jae
jmp
sub
add
stc
aad
xlat
cmp
add
ds
mov
push
loop
or
or
sbb
sti
cltd
call
xchg
nop
jb
mov
in
xor
cmpb
add
jg
cmp
incl
out
adc
out
adcb
add
push
push
sbb
shr
clc
mov
sldt
sarl
mov
adc
mov
xorb
stos
pop
fs
inc
fsts
push
call
push
add
adc
push
mov
add
pop
jns
mov
cmp
ja
test
insb
in
hlt
dec
test
jecxz
incl
roll
pop
pop
push
fs
or
vcvtsi2ssl
adc
dec
jmp
push
repz
add
xchg
movb
inc
lock
je
push
mov
or
jbe
imul
jae
xchg
movl
adc
add
cli
int3
pusha
ds
xorb
sbb
inc
or
and
xchg
dec
sbb
cmp
adc
rcrl
in
lock
add
fisttpll
and
loop
incb
sub
sub
lds
inc
xor
mov
cmpl
and
sbb
pop
mov
add
push
adc
adc
sub
push
push
and
mov
xor
adc
bound
add
or
xchg
add
je
sub
mov
repz
xchg
xor
add
jmp
push
aas
adc
add
sub
inc
movsl
test
pop
cmp
fsubr
cli
js
verw
mov
mov
rolb
enter
add
dec
inc
je
mov
add
push
aas
xchg
loopne
int3
add
pop
aam
pop
cmpb
sub
pop
dec
adc
push
call
enter
push
pop
inc
dec
frstor
xor
pop
leave
stos
add
add
das
and
add
mov
cmp
and
movsl
pop
and
push
add
lahf
mov
pop
fwait
or
push
adc
cltd
pop
sub
ds
aas
sub
bound
jg
pusha
push
jne
cmc
mov
jle
sbb
sub
cmpsl
mov
add
popf
aaa
or
and
test
jne
mov
out
push
mov
insl
dec
lods
ds
or
inc
cmp
int3
sbb
lcallw
jmp
dec
lret
sbb
jne
cmp
xchg
adc
jp
nop
lret
add
fwait
test
adc
inc
inc
add
or
adc
dec
push
lds
mov
clc
add
jecxz
ss
add
aam
or
cmp
jae
pop
hlt
iret
xorl
add
dec
add
jl
pop
and
movsl
mov
ret
mov
add
mov
inc
lret
loopne
adc
cmp
adc
repnz
cmp
xor
or
push
mov
in
add
dec
fs
jae
cmp
push
sub
add
inc
push
jle
add
adc
outsl
push
mov
shlb
inc
push
int3
mov
addl
push
xor
popf
push
adc
rolb
add
inc
cmp
inc
mov
mov
or
les
add
inc
mov
push
xchg
xchg
syscall
ret
jmp
enter
cs
add
inc
push
dec
stc
repnz
add
dec
sbb
push
xchg
enter
sub
call
mov
add
leave
adc
nop
aad
add
mov
daa
pop
add
loop
pop
adcb
pop
addl
adc
movl
fidivrl
sbb
in
sub
pop
loopne
push
cmp
pop
xchg
adcl
or
add
cmp
add
pop
test
jns
add
iret
xchg
stc
add
sub
add
hlt
jmp
pop
movsl
fcomp
sbb
outsl
sub
rcrl
je
andb
dec
or
mov
xor
push
shll
es
or
add
adc
cmp
call
add
adc
mov
add
jmp
pusha
cli
add
jl
adc
add
inc
xor
or
mov
jl
inc
or
mov
popa
or
incl
add
sbb
loop
cwtl
in
jg
pop
add
adc
and
jl
test
sub
shr
or
sub
pusha
mov
add
andl
adc
dec
pop
fnstenv
loope
and
inc
push
je
pop
sub
add
orb
lcall
sub
adc
ret
loop
and
mov
add
mov
sub
cmp
mov
mov
mov
dec
pusha
add
add
mov
xchg
fs
pop
xor
mov
or
mov
sti
fadds
and
add
jne
xor
pop
xor
inc
add
push
pop
andl
movsb
movl
dec
add
xor
aas
fdivr
je
lea
sub
xor
scas
lds
adc
mov
loopne
jmp
add
out
mov
jg
sub
daa
in
add
sub
jecxz
es
mov
xor
ret
or
call
loop
xabort
add
dec
xchg
xor
or
mov
add
movb
add
cmp
aam
rcrb
movsb
xor
dec
loopne
nop
add
lcall
add
xor
cmp
cltd
inc
adc
insb
xchg
add
pop
fs
cmp
bound
pop
or
adcl
mov
add
mov
sbbb
test
in
andl
adc
sub
adc
enter
test
add
movsl
xchg
scas
sbb
mov
nop
imul
sti
movsl
jg
test
ret
add
inc
cmp
push
rol
fsubs
cmp
call
mov
inc
add
lock
add
aam
and
aas
dec
movb
sbb
iret
xor
adc
pop
lea
outsl
pusha
ljmp
adc
pop
add
adc
xchg
int3
leave
hlt
testl
pushf
xor
add
mov
jmp
sbb
add
inc
mov
mov
dec
lea
add
sti
xor
movsb
add
adcb
clc
add
cmp
push
inc
add
add
shlb
pop
dec
pop
pop
ljmp
mov
cmpb
ja
orb
les
pop
jmp
xor
dec
or
xor
pop
add
out
rolb
jmp
fwait
push
xchg
or
dec
fadds
es
dec
sbb
lcall
repnz
lods
dec
movsb
add
or
cmp
and
xor
vucomisd
jno
cmp
add
dec
inc
cmc
cltd
xor
add
sarb
add
pop
xchg
dec
lret
loopne
adc
sbb
imul
dec
stc
pop
sub
push
xor
and
pop
movsl
or
push
stos
or
cld
jmp
ror
push
push
xor
or
pop
cmp
inc
in
sti
mov
jge
push
adc
xchg
xchg
int
inc
test
add
add
cmpsl
mov
jle
add
dec
sub
or
add
clc
sahf
dec
lret
cmp
lahf
cmp
or
dec
and
lods
push
subb
js
jge
add
out
sub
sbb
or
cmp
loope
jg
sub
add
mov
sub
jb
xchg
inc
sbb
fucomi
xor
adc
or
mov
mov
and
pop
add
mov
cmp
cli
sub
add
xor
add
add
add
ret
jae
or
test
fmull
jg
add
xor
jo
les
adc
movsb
shlb
pusha
push
add
je
mov
pushf
push
or
pusha
mul
loopne
add
cmpsb
aas
inc
or
push
inc
sbb
add
adc
xor
mov
dec
loop
add
clc
cmp
sub
dec
push
loopne
xchg
add
jle
add
jo
movsl
cwtl
fmull
ret
sbb
shrb
cli
add
push
or
aaa
sbb
sub
mov
jne
mov
cwtl
push
push
add
or
and
adc
mov
adc
mov
and
cmpsb
les
pop
lds
in
aas
adc
add
roll
push
cld
std
mov
test
add
addb
cmp
movaps
sub
sarb
cmp
loopne
sub
add
xor
jge
add
cltd
pop
sub
xor
xor
testb
test
pop
sub
add
and
sbb
or
pop
sub
cmp
or
ds
cmc
pop
cmpsb
cmpsb
nop
nop
test
ljmp
add
ret
add
negl
push
push
sbb
add
add
sbb
or
push
add
and
add
xlat
orb
fnsave
fbstp
js
sarb
in
push
add
lock
loop
xchg
loopne
in
sub
gs
xchg
rorl
push
inc
pop
imul
add
icebp
xor
xchg
loop
sub
clc
cs
push
in
addl
fcoms
sub
mov
and
or
add
dec
test
sbb
dec
add
mov
mov
add
das
adc
lea
jmp
stos
adc
add
cld
jmp
mov
add
clc
mov
cmp
lahf
pop
add
hlt
dec
lock
sar
aam
adc
pop
sbb
xchg
call
jmp
add
add
cmp
and
nop
inc
or
adc
xlat
mov
add
add
mov
clc
inc
sbb
xor
add
or
add
fs
dec
pop
jne
sti
pusha
pop
cmp
jge
push
cmp
data16
inc
adc
aam
xor
out
cmpsl
movsb
cwtl
loopne
lock
scas
add
pop
call
dec
mov
sub
mov
add
inc
ds
inc
or
cmp
enter
testl
add
fstp
add
loopne
jecxz
in
mov
pop
adc
adc
pop
rorb
popl
sahf
rorb
nop
push
lcall
sti
xlat
add
cmp
or
je
sbb
js
repz
movsl
incl
and
mov
push
je
add
xchg
sbb
adc
std
sbb
lret
push
rorb
inc
push
push
mov
call
sbb
jae
add
mov
lock
cmp
ja
insl
repnz
in
jne
add
add
imul
inc
testb
push
in
mov
sub
ffreep
add
mov
mov
fstps
inc
sub
lods
pop
add
sub
pop
cmp
movsb
push
movl
outsb
mov
shlb
add
pop
enter
roll
pop
mov
inc
add
cmpsb
stos
jg
std
inc
mov
lret
in
arpl
add
bound
xor
dec
sub
mov
sub
adc
add
sbb
sbbb
psubusw
dec
jecxz
mov
nop
adc
or
sbb
xchg
and
loop
push
push
jne
mov
add
mov
push
cmp
jne
xor
dec
add
dec
or
in
and
add
in
sbb
add
jp
jae
cld
add
fidivs
add
xchg
xor
int
or
inc
pop
mov
pop
call
andb
pop
inc
imul
mov
or
add
add
cltd
push
rcll
sub
mov
add
inc
add
je
add
fldcw
add
icebp
data16
js
dec
popa
cld
sub
fildl
xor
dec
or
dec
cmp
fisttpl
xor
fnsave
andl
clc
shrb
lea
add
add
fcoms
or
out
int
test
jl
adc
pop
xor
arpl
lock
inc
testl
js
mov
js
jge
add
fstl
mov
fdivl
je
filds
mov
sbb
inc
adc
add
ret
or
pop
rcrb
jmp
inc
pop
push
mov
dec
sub
inc
mov
mov
shlb
sub
xchg
lcall
mov
addr16
push
ss
arpl
add
sbb
or
add
daa
add
or
pop
pop
adc
cld
cmp
dec
or
add
xorl
sbb
nop
jmp
add
fstpt
and
sbb
add
jne
loop
stos
or
or
bnd
xchg
jns
sub
mov
add
add
in
mov
xchg
add
clc
pop
lea
cmp
push
push
ja
pop
add
test
lods
or
call
cs
jg
add
aad
inc
xor
add
movl
pusha
in
push
or
fsubrl
sbb
sub
orl
lds
sub
push
mov
ds
decl
cs
add
mulb
cmp
push
dec
inc
push
push
inc
push
loopne
add
jb
popa
outsb
js
cmp
jo
imul
addb
add
dec
popa
jae
push
inc
insb
add
jb
push
ret
jecxz
add
pop
inc
mov
shlb
xor
mov
inc
push
lret
cmpsl
and
jb
push
add
pop
jmp
in
add
xor
ss
mov
sarl
sahf
add
shl
jmp
cwtl
add
dec
or
orb
or
bswap
out
or
popl
pop
add
push
negl
cmp
enter
bound
shrb
pop
add
push
cld
xor
add
add
inc
fcmovnbe
pop
arpl
rcrl
cltd
add
sub
sub
add
sbb
bound
xchg
sbb
in
cmp
pop
sbb
add
jae
cmpsb
jge
cmp
jnp
mov
and
add
jne
mov
insb
leave
adc
sarb
in
lcall
repz
push
push
xchg
lahf
lods
shrb
inc
adc
or
add
scas
lock
fs
jg
mov
or
enter
cld
add
roll
test
cmp
add
dec
push
cmp
mov
add
inc
out
sub
ficompl
mov
loope
lahf
sbb
call
adc
negb
addl
adc
fs
outsb
mov
and
loopne
add
add
or
sti
pop
or
rcl
add
and
shrb
or
loope
xchg
in
adcl
xor
add
clc
dec
cmp
addl
pop
mov
not
add
call
addb
add
loope
jbe
push
xor
imul
cli
in
sub
mov
fildl
push
push
ret
bound
and
cmp
or
lret
push
add
bound
or
inc
sbb
test
loopne
dec
adc
pop
inc
sub
add
add
or
jo
mov
jl
sbb
add
arpl
outsb
sbb
mov
push
pop
sub
adc
inc
mov
inc
pusha
lock
push
mov
movswl
jecxz
movsb
enter
mov
add
pushf
jmp
adc
and
cmp
xchg
xor
je
or
call
adc
inc
or
je
pop
push
adc
out
mov
mov
add
cli
or
pop
add
loopne
or
jbe
add
push
adc
mov
gs
pop
sbb
js
roll
or
jno
pop
or
inc
stos
cmp
mov
adc
or
ja
cmp
outsl
lock
andb
push
xor
fndisi(8087
adc
sbb
inc
rcrl
popl
or
rcll
push
call
xchg
mov
or
mov
add
add
movl
push
push
stc
or
scas
mov
jmp
lcall
daa
add
mov
jmp
mov
lods
outsb
test
es
or
or
jmp
and
enter
or
pop
add
add
add
inc
loope
fs
aas
pop
mov
dec
clc
inc
xor
fdivrs
add
jne
fs
pop
add
dec
and
or
jle
sbb
je
dec
jg
testl
or
dec
mov
fimull
popa
mov
les
jg
add
and
sub
and
daa
add
insb
rolb
sets
mov
das
push
pop
lcall
add
and
mov
xchg
loope
subb
inc
add
in
das
mov
cmp
push
lahf
push
rcll
sub
add
push
push
hlt
push
mov
enter
adc
das
jnp
sub
mov
cmp
mov
movsb
clc
sub
mov
cmp
add
xchg
lock
dec
lods
pop
leave
xor
rolb
add
mov
outsl
mov
cmp
pop
fs
imul
add
stos
daa
loop
or
jns
fldcw
mov
mov
sub
push
movsb
pop
incb
add
jg
add
mov
push
sub
mov
add
jecxz
dec
rorb
popa
adc
jno
or
sub
pop
ss
xor
push
sub
adc
sub
inc
add
push
and
cmp
les
jb
cwtl
or
sub
enter
leave
scas
dec
cmp
push
and
clc
xlat
in
call
fdiv
push
clc
or
frndint
push
cld
lret
sub
and
push
or
outsb
lcall
and
dec
repz
rorb
gs
sub
jmp
ss
xor
cmp
add
sbb
pop
and
add
sbb
sbb
imul
adc
fld
das
push
fsubrs
cmp
add
dec
stos
and
mov
in
fwait
pop
jecxz
push
mov
inc
push
mov
add
enter
loope
push
or
cmp
pushl
add
jne
and
xchg
test
pushf
stc
add
add
ret
and
mov
xchg
and
pop
test
jle
add
xor
add
add
shlb
dec
out
jno
mov
sub
add
pop
test
aad
loope,pt
dec
pusha
mov
dec
add
xor
sub
js
inc
loop
cmp
jle
inc
sbb
mov
test
shrl
jg
pusha
pop
add
mov
jge
les
movsl
mov
mov
sbb
xchg
adc
decb
xchg
cmpl
add
xchg
call
push
inc
mov
sbb
sbb
pop
add
xchg
dec
xchg
and
filds
mov
push
pop
jne
movb
clc
mov
sub
mov
pop
xchg
sbb
inc
sub
lea
and
pop
cli
cmp
shll
aaa
add
sahf
cmpsb
sub
dec
xchg
test
add
and
sbb
arpl
mov
add
div
aas
add
dec
inc
xchg
pslld
dec
xor
nop
dec
add
inc
pop
in
addl
jp
push
add
call
mov
adc
movsb
sbb
sbb
push
and
aaa
add
push
ret
mov
sbb
mov
mov
cmp
adc
mov
push
push
aas
inc
loopne
pop
das
mov
rolb
mov
call
add
add
cmp
je
cli
sub
xlat
add
mov
or
mov
mov
push
add
mov
sbb
mov
or
mov
adc
add
mov
call
jno
cmp
orl
mov
es
or
in
add
pop
xor
call
cs
out
and
int3
add
nop
sub
jg
jmp
sub
adc
sub
add
add
push
add
or
lret
mov
xor
sti
xchg
add
pop
jmp
push
add
cmp
outsb
jae
and
jo
fbld
mov
xor
cmp
cld
mov
sti
mov
jmp
add
pop
jnp
add
mov
xor
sbb
movl
clc
dec
jl
cld
lock
push
or
psubsb
push
pusha
push
pop
mov
push
adc
add
or
insb
ljmp
int3
push
add
inc
sub
cmc
inc
cld
das
cmp
adc
popf
daa
push
pop
mov
jmp
gs
xchg
jl
adc
pop
test
scas
sub
leave
rcrl
add
sbb
subl
adc
pop
mov
mov
inc
pop
movb
inc
mov
add
iret
sarl
stc
incb
mov
jp
add
xchg
pop
in
xor
push
push
mov
add
lahf
fstps
dec
cmp
shr
add
js
jge
xchg
push
mov
insb
or
push
push
add
icebp
sbb
mov
add
and
fucomip
xor
es
and
push
nop
loope
pop
inc
xchg
addb
mov
sub
add
push
adc
stos
add
pop
fldenv
loop
rolb
or
add
les
mov
mov
imul
enter
es
subl
bound
add
cmp
xor
xor
in
push
jbe
fwait
dec
and
loopne
movsb
dec
add
mov
inc
mov
pop
add
rcrl
shll
pusha
add
shr
add
xor
add
xchg
xor
sbb
test
std
xor
mov
cmp
cld
add
add
cmp
call
sub
nop
pusha
add
pop
les
testl
popa
inc
mov
pop
call
rol
das
out
and
jmp
pop
jb
es
dec
add
add
jne
xchg
fists
fmuls
in
inc
arpl
push
and
addps
xchg
add
std
mov
mov
cs
add
push
pop
push
sbb
push
cmpsb
sub
dec
xchg
adc
popf
scas
repz
dec
loop
iret
lods
pop
xor
push
mov
adc
cmpsl
lret
fadds
add
stos
push
mov
push
sub
pop
add
pop
lea
cli
loopne
xor
add
mov
rol
adc
jg
and
mov
cmpb
add
ret
add
ljmp
shl
dec
add
and
dec
add
int
or
fistps
shlb
sub
cmp
inc
add
call
add
and
xchg
add
push
pusha
jae
add
jmp
push
and
lret
pop
clc
adc
mov
nop
push
sub
js
inc
dec
mov
in
add
mov
sub
in
add
sti
sbb
add
pop
popf
insl
packssdw
out
add
pop
shlb
sub
sbb
cmp
cmpb
jge
sub
add
repz
add
fs
mov
mov
pop
in
insb
sbbl
pusha
mov
add
or
dec
add
cmp
cmp
subb
cmp
aaa
add
cmp
repnz
rolb
movsb
add
xchg
push
lock
cli
dec
inc
add
xchg
xchg
inc
jns
add
push
mov
addl
dec
js
mov
inc
cwtl
jnp
add
aad
adc
repz
add
stos
or
add
aam
test
mov
nop
xor
fcomps
cld
pop
scas
and
jne
shll
jo
xor
sbb
lock
sbb
jo
or
adc
jne
pop
xor
cli
and
cmp
icebp
jl
mov
jae
movsl
daa
push
pusha
xor
cltd
test
es
lret
out
or
loopne
adc
leave
adc
inc
pushf
add
mov
adc
add
sub
decl
cmp
sbb
daa
addb
jne
jnp
push
sub
mov
sbb
add
loopne
xchg
pop
xor
je
iret
adc
push
push
cmpsl
dec
add
push
data16
xor
dec
add
mov
roll
movsb
xlat
dec
or
and
push
cmp
or
cmc
xchg
test
xchg
cmp
int3
popa
dec
bound
pop
jl
cmp
mov
cvtps2pi
add
sahf
lahf
popf
stc
shlb
add
jge
add
cmp
mov
add
or
pop
prefetch
or
push
sarb
enter
add
adc
pop
add
out
mov
add
fildl
add
js
sbb
mov
sub
xlat
or
rorl
hlt
xchg
jg
repz
mov
mov
add
sub
pop
add
inc
mov
sbb
inc
xor
xor
or
add
pop
jmp
add
push
xchg
aaa
sbb
xchg
ja
repnz
adc
add
popf
sub
and
inc
dec
sbb
fimull
push
jne
mov
mov
enter
sub
jge
add
sbb
int
andb
lea
sub
mov
shrb
pop
mov
sbb
mov
mov
ja
push
into
mov
scas
add
stos
mov
fdivs
and
iret
xchg
or
mov
push
push
pop
adc
jno
pop
stos
aas
out
add
xchg
std
add
jne
push
scas
sbbl
mov
cmpsl
sbb
fildl
js
push
fstpl
xchg
mov
test
jne
cmp
lock
xorl
jne
sbb
ret
add
add
test
mov
mov
popf
xchg
nop
or
cmpl
add
cwtl
out
xor
inc
incb
or
adc
adc
xor
addr16
pusha
add
loop
adc
cmp
dec
ljmp
mov
jo
ss
femms
jle
jne
pusha
loope
push
pop
xchg
jno
add
or
jnp
add
dec
orl
stos
adc
rorb
test
xor
in
movb
sahf
jge
push
mov
es
xor
inc
jnp
insl
popl
aas
test
stos
in
nop
pushf
add
mov
test
add
cmpsl
push
push
cmp
mov
add
iret
mov
pop
movsl
mov
add
sbb
bound
add
and
jno
or
repz
push
dec
adc
xor
sbb
or
lret
adc
lcall
and
sub
adc
sub
xlat
xor
rcl
add
aam
or
or
add
xor
daa
push
add
pop
dec
loopne
pop
add
xchg
icebp
add
inc
std
popa
call
popw
mov
or
popa
add
push
call
push
add
dec
imul
cmp
cmpl
fldl2e
cmp
addb
or
sbb
cmpsb
pop
xor
mov
or
jo
add
stos
adc
pop
add
jae
dec
lret
xchg
loope
stos
add
pop
inc
cs
movsl
mov
int3
push
imul
popf
sub
test
add
lcall
pop
mov
inc
inc
mov
movsl
add
sub
subps
cmovnp
mov
mov
xor
stos
add
outsb
les
pop
cld
inc
push
push
pop
add
inc
pusha
sbb
jo
fiadds
push
and
xor
adc
mov
cmp
sub
movsb
inc
push
add
push
dec
clc
add
mov
mov
dec
nop
add
aam
loope
addb
pop
cwtl
je
mov
push
push
sbb
mov
cli
push
les
jo
addl
mov
in
jmp
xor
pop
push
cld
adc
int
sbb
pop
add
jb
or
xor
add
test
add
jmp
pusha
mov
adc
sbb
pop
jne
mov
jo
cmpxchg
xchg
xor
mov
inc
shrl
pop
das
mov
je
shrb
and
addb
sbb
add
pop
mov
add
fcoml
lcall
call
sub
xor
sbbb
fcompl
add
adc
add
shlb
or
ljmp
xlat
test
cli
pop
leave
push
add
adcl
add
xchg
add
cmp
adc
inc
addl
inc
push
push
xor
add
xchg
xor
pop
ret
dec
out
push
je
fidivrs
jne
arpl
fisttpl
clc
jle
mov
ret
add
movb
dec
inc
lods
jae
sbb
dec
add
ffreep
add
test
add
or
int3
push
imul
outsb
pusha
insb
xor
cs
jge
mov
outsb
add
jae
dec
mov
mov
test
pusha
insl
xchg
add
imul
aaa
or
fcmovu
xor
in
fmull
add
mov
je
inc
jno
pop
push
jne
add
push
sub
pop
loopne
call
push
xor
ret
aam
outsl
sbb
shll
xchg
dec
xor
add
dec
inc
dec
xchg
mov
xlat
cmp
inc
xor
hlt
cltd
movsb
stos
cwtl
xchg
inc
sbb
push
xchg
repz
mov
pop
add
sbb
mov
imulb
add
inc
scas
hlt
pop
jge
cwtl
stc
xchg
or
lock
xchg
add
imul
push
add
push
jmp
dec
add
cs
movsb
adc
inc
adc
or
or
inc
cmp
es
push
roll
jb
scas
inc
dec
xor
repz
inc
imul
outsb
es
mov
cmp
add
cwtl
loopne
add
add
jb
jg
sbb
and
arpl
out
jae
cmp
in
cmp
mov
inc
cli
mov
add
add
lock
push
cwtl
add
dec
add
mov
or
add
fwait
outsl
popf
popa
cmp
cmp
push
mov
insb
fsts
iret
hlt
add
sub
lcall
addr16
shll
roll
add
and
inc
pop
jmp
add
cmp
push
cmp
inc
add
jp
push
adc
sub
ret
test
out
inc
mov
pop
dec
repnz
imul
dec
ds
jge
mov
pop
sbb
js
ja
xchg
jnp
cmp
or
or
adc
inc
repz
roll
jecxz
fidivrs
enter
setne
or
add
and
js
push
dec
push
adc
push
add
call
shl
daa
rorb
insl
cmc
repz
sbb
push
mov
pop
add
fstpt
ljmp
and
pop
xor
jmp
mov
mov
call
dec
jne
sbb
or
mov
push
adc
mov
je
or
jle
ucomiss
test
sbb
mov
adc
inc
sbb
inc
gs
push
pop
sbb
adc
adc
rcpps
rclb
and
inc
dec
sbb
fadds
sbb
es
mov
lret
xchg
out
pcmpgtw
push
jno
test
enter
orb
stos
add
pop
decl
mov
pop
mov
sbb
or
push
loope
fs
cmp
or
popa
lea
ret
inc
inc
pop
mov
outsb
aas
rclb
add
inc
stc
int3
sub
sub
add
pop
jmp
cmp
movsb
xchg
mov
add
push
add
pop
cmc
call
je
cltd
mov
pop
mov
outsl
dec
add
mov
add
jne
pop
cli
inc
fisttpl
and
jl
and
mov
shlb
or
xor
fcoms
dec
aam
daa
mov
push
ds
lret
in
adc
and
out
add
aas
dec
push
or
mov
sbb
xchg
mov
inc
pop
jl
adc
add
dec
jne
call
in
addl
cwtl
push
negb
lcall
scas
pop
mull
les
push
and
test
je
or
ljmp
add
movsb
push
sub
sysret
xor
adc
jbe
fisubrl
in
push
cmp
push
lock
movsl
loopne
pop
rolb
add
sarb
fdivr
ret
add
mov
add
xor
xchg
loop
mov
or
pushf
testb
shlb
ficoms
jbe
push
add
or
add
adc
sbb
add
stos
sbbw
adc
adc
pop
mov
repz
mov
and
icebp
mov
out
xchg
les
cmp
add
cwtl
dec
adc
cmp
lret
add
jl
mov
inc
push
lock
adc
call
stos
dec
jg
jmp
dec
adc
int3
xor
and
into
popf
xchg
mov
add
xchg
or
pop
jmp
int
ret
inc
or
mov
xor
xchg
loope
in
cld
les
sbb
out
movlps
fdivrl
xor
add
lock
in
and
mov
inc
add
add
movb
pop
add
call
faddl
xchg
mov
mov
mov
mov
enter
cmc
vorpd
in
pusha
stc
cld
add
mov
inc
push
sarl
add
pop
mov
inc
rep
dec
pop
adc
xor
add
add
pop
xchg
push
add
stos
push
inc
add
std
push
rcrb
pop
cmpsb
add
je
int
ja
aaa
pop
mov
pusha
loopne
push
cmp
jle
and
jmp
mov
aas
hlt
sahf
mov
or
add
pusha
jns
add
sbb
aas
and
mov
ds
jle
sbb
das
roll
adc
icebp
aam
pop
sbb
mov
adc
xor
push
fisttpl
sbb
ret
xorb
cwtl
adc
shl
daa
add
loop
lds
sub
and
ficompl
pusha
lea
jp
call
insb
sub
mov
dec
lock
in
hlt
push
repnz
not
add
cmp
dec
xchg
dec
add
sub
adc
cmpsl
enter
sbb
add
pop
adc
aad
jg
push
call
mov
sub
and
sbbb
fmulp
rorl
fnstenv
add
popa
hlt
mov
pop
add
or
mov
add
inc
pop
inc
and
adc
hlt
mov
mov
aas
enter
jp
aaa
sub
add
xlat
or
inc
cmp
ja
add
mov
mov
add
ja
pushf
add
push
ret
pshufw
adc
shlb
mov
imul
in
stc
jno
clc
xchg
pop
mov
inc
mov
aam
roll
jle
sub
test
pmuludq
out
loopne
add
jecxz
or
mov
xor
lds
mov
aaa
jge
jbe
imul
add
call
mov
inc
bound
lods
cmp
pop
mov
xlat
cmp
inc
add
xchg
cmp
xchg
add
push
in
add
into
sbb
ror
or
popa
cmp
cmp
movsl
sbb
push
cmp
and
hlt
daa
lret
into
jnp
push
test
xchg
sar
cmp
sbbl
xlat
pop
mov
add
add
leave
repnz
bound
inc
xchg
and
je
jo
add
lods
lds
add
iret
decl
pop
js
mov
mov
jo
add
mov
or
pop
or
xchg
test
stos
sbb
out
add
mov
add
add
cmp
push
call
jecxz
xchg
push
mov
out
mov
sahf
popf
cmp
jle
stos
push
inc
mov
add
add
cld
sarb
pop
int3
repnz
mov
andb
lahf
in
add
pop
stos
add
scas
adc
push
rcrb
mov
out
loopne
add
fs
aam
add
jmp
loope
jp
iret
call
pop
add
fdivrs
mov
xchg
filds
cmpsb
scas
mov
outsb
or
jne
xchg
add
dec
dec
in
adcb
mov
push
push
in
add
sahf
xchg
pop
cmp
adcb
popa
std
pop
repnz
and
clc
repz
mov
jb
pop
outsb
fwait
xchg
and
les
and
aad
bound
xor
ret
daa
fsub
add
in
hlt
add
ficoms
aam
rcll
jno
cmp
int
and
clc
int
pop
mov
sbb
or
jne
ja
fisttpl
or
fiaddl
sbbl
aas
sbb
hlt
loope
mov
xchg
cmp
not
add
xchg
shlb
add
push
jb
ja
into
repz
add
inc
loop
out
sub
ret
mov
je
pop
lcall
mov
jmp
push
mov
pop
xor
or
cmp
incl
jne
add
or
or
pop
add
ret
pushl
mov
lcall
test
das
mov
push
addb
ficompl
add
pop
push
inc
pop
mov
jle
pop
jb
hlt
lods
xchg
sbb
cmc
repnz
inc
faddl
das
adcb
test
cmp
stos
dec
sahf
add
and
sub
add
add
stos
xor
loop
inc
movsl
pusha
sub
sti
pop
cmp
add
pop
mov
cmp
add
lods
jg
cmp
pop
aas
xor
fs
cmp
scas
pop
and
adc
dec
add
xchg
aaa
leave
xor
lods
adcb
xor
add
or
adc
cmpl
adc
movsl
repnz
test
push
pop
fcomps
clc
push
pop
push
mov
js
add
mov
and
xchg
insb
cmp
pop
add
xchg
push
inc
mov
cmc
add
insb
daa
imul
sub
adc
es
sbb
pop
pop
into
fs
in
dec
push
popa
call
subb
sbb
sbb
lret
pop
dec
adc
imul
jg
sbb
cmp
rorl
lods
repz
or
inc
out
add
lahf
aaa
and
repnz
push
rolb
push
repz
test
loope
cld
inc
popa
and
xchg
add
enter
xor
add
mov
cmp
cmpb
fs
call
push
add
or
clc
jl
jmp
push
mov
pop
popa
cmp
sbb
mov
dec
add
gs
das
mov
pushf
push
ljmp
push
cwtl
cmpb
inc
cmpsl
cli
popa
cmp
subb
sub
sti
out
push
add
sub
dec
or
mov
add
cmp
pop
sub
loopne
andb
outsb
push
xor
pop
movb
and
fidivrs
mov
clc
add
ds
mov
inc
mov
adc
int
mov
mov
dec
add
or
push
or
mov
ss
inc
or
jnp
add
adc
and
mov
fmull
mov
adc
cmp
and
pop
or
call
pushl
mov
and
andps
arpl
fmull
cmpsb
or
ds
pusha
or
repz
and
add
and
xchg
sbb
inc
insl
adc
or
inc
test
movsb
jmp
jmp
jmp
call
pop
jge
jge
jge
jge
jge
adc
je
xchg
add
enter
add
cmp
push
add
dec
xchg
add
inc
in
jb
cmp
cmp
dec
movb
xchg
mov
add
cmp
sbb
add
in
or
cmp
gs
fstpt
jp
and
and
daa
xchg
int3
icebp
mov
fs
stos
and
roll
and
pop
add
dec
ret
das
sbb
inc
or
inc
inc
jg
push
push
inc
push
icebp
cmp
es
mov
adc
mov
test
icebp
jb
cmp
xor
cmpsb
cmc
and
add
stc
jb
and
sti
icebp
xor
std
and
cmp
loope
loop
jecxz
jb
cmp
sbb
sub
mov
jmp
sbb
jge
mov
xchg
out
enter
jb
add
rcrb
mov
mov
and
xchg
fmul
flds
cmp
scas
fldl
fisubs
fists
in
jb
cmp
sbb
lds
and
lcall
push
lret
cmp
sbb
and
into
and
xchg
mov
mov
add
sbb
add
add
cmp
and
mov
pop
pop
sbb
call
inc
adc
cmp
push
mov
repz
sub
into
sub
adc
adc
sub
mov
mov
stc
add
arpl
or
jle
popl
and
jge
add
push
inc
pop
loope
popa
pop
pop
inc
nop
push
adcb
cmp
or
sbb
jne
shlb
insl
outsl
add
xchg
test
fdivrl
je
add
or
add
mov
xor
pop
xor
or
xchg
adc
or
rolb
and
insb
fcomps
cmp
test
xchg
add
lea
insb
jle
cmp
xchg
and
js
nop
adc
inc
lret
lock
mov
pop
inc
lods
or
add
imul
outsl
nop
push
pushf
scas
pop
xchg
rolb
rclb
sub
cmpsl
pop
hlt
fdivl
mov
dec
add
scas
data16
add
shl
inc
mov
mov
lret
pop
dec
lock
pop
sbb
add
loop
ljmp
imul
add
shll
test
mov
mov
sti
dec
lahf
lock
les
popa
dec
jge
mov
jo
orb
outsb
movsb
pop
cmp
nop
xor
scas
inc
mov
ja
movaps
je
add
gs
mov
cs
pop
xchg
dec
and
sbb
jo
es
shr
push
aas
or
mov
call
or
push
add
inc
arpl
mov
add
mov
pusha
in
pusha
test
mov
dec
add
adc
inc
jns
or
das
enter
xchg
test
je
popa
arpl
sbbl
aam
fmuls
or
imul
or
mov
inc
mov
push
dec
popa
or
pop
in
pop
jp
ja
cmp
lds
lods
xchg
test
xchg
push
outsl
fs
add
aas
xor
mov
adc
fnstenv
or
ret
scas
cmpsl
cmp
or
fs
sbb
rcr
adc
or
add
daa
sbb
imul
add
and
int
ds
add
ret
movups
add
cmpsl
pop
or
add
or
popf
test
lret
mov
mov
adcb
cmp
in
pushf
imul
push
xor
mov
ret
mov
dec
stos
les
mov
and
jmp
add
pop
call
xor
incb
shll
dec
aaa
add
add
add
mov
and
mov
sbb
dec
sub
lahf
add
leave
jbe
cld
pusha
xchg
add
test
fstp
rorb
push
add
mov
push
cmp
jbe
jae
loopne
add
cmpsb
je
mov
xchg
pop
push
mov
mov
xchg
mov
pop
fsubl
mov
pusha
cmp
je
add
xor
rolb
imul
cs
shll
jbe
test
scas
pop
inc
pop
cmp
jl
xorb
incl
and
hlt
push
jge
mov
lds
dec
sub
aaa
adc
add
inc
sbb
mov
in
movsl
add
jo
xchg
repnz
loop
sbb
mov
xlat
pop
das
add
in
sarb
and
push
or
mov
xor
dec
lret
xor
sub
clc
shrd
bound
add
push
fisttpl
lock
sub
je
cmp
cmp
cs
clc
aas
add
dec
cmpsb
jp
out
mov
push
add
inc
push
pop
dec
shl
and
in
fs
push
add
mov
mov
adc
test
add
cltd
or
xor
add
daa
bound
xchg
loopne
aam
aaa
cmpsb
xor
pop
cmpsl
adc
outsb
xchg
push
sub
repz
bound
add
mov
push
shll
imul
xlat
dec
pop
add
jns
fcmovu
jae
cmp
dec
les
dec
dec
call
and
or
mov
mov
mov
int
add
inc
mov
pop
push
cmp
dec
jecxz
adc
push
out
or
pop
xchg
add
hlt
dec
clc
xchg
add
lock
ret
dec
inc
mov
lcall
adcb
in
add
fistl
cmp
outsb
ljmp
mov
pop
or
dec
add
sbb
xor
adc
mov
cmp
fsubrs
mov
iret
jecxz
cwtl
inc
ret
data16
add
hlt
lret
shl
cld
sbb
shr
sbb
pushf
xchg
add
aaa
and
and
outsl
add
out
cmp
dec
push
dec
add
push
daa
jmp
jecxz
roll
cmp
lret
pusha
cmc
xor
add
pop
pop
push
arpl
stos
imul
sbb
ds
sub
sub
and
out
or
jmp
cmpsl
bound
adc
clc
add
adc
cmovl
in
or
sahf
inc
or
add
and
shlb
inc
add
clc
cmp
dec
les
jecxz
push
and
or
adc
fdivs
cmpsb
insb
and
push
sbb
add
and
jne
out
xor
mov
roll
daa
dec
jl
add
sub
sbb
push
int3
hlt
sbb
rcrb
lods
push
fxch
xor
and
sti
pop
jbe
mov
insb
dec
push
add
inc
stc
dec
sti
repnz
loopne
test
rcrl
in
sbb
fistpll
rclb
pop
jns
add
mov
aam
leave
pushf
sub
pop
outsl
sub
jno
orb
pop
sub
add
xchg
iret
add
add
jge
cld
sbb
pop
jne
push
hlt
or
movsl
add
push
mov
addl
rorb
pusha
jmp
xor
rol
call
mov
add
or
sub
fimull
add
jns
push
xchg
lahf
cmp
fisttpl
xor
and
fbstp
mov
sub
mov
addr16
loopne
jne
push
mov
push
pop
mov
and
jae
xor
sub
jge
add
xbegin
movsb
sbb
lods
or
mov
sub
fidivrs
or
adc
mov
or
add
sbb
popa
sti
and
xor
jb
push
cmp
imul
icebp
add
ret
push
rolb
cmpb
add
push
in
jmp
inc
or
pusha
push
ja
adc
call
add
mov
stos
je
dec
faddl
lods
lock
mov
mov
cmp
pushf
or
jne
lea
ficoms
push
add
mov
pop
add
popf
out
ds
loop
xchg
or
adc
insl
add
outsb
xor
jmp
leave
mov
add
mov
lods
cs
or
add
sbb
xchg
adc
call
mov
mov
shrl
lea
ret
adc
add
stc
inc
pop
add
push
stos
sub
sarb
or
testl
repnz
outsb
orl
pop
call
add
mov
ret
jnp
lahf
lea
icebp
mov
sbb
cmp
inc
pop
pop
xchg
call
cmp
add
pop
xchg
dec
push
push
mov
mov
fldl
or
jne
lea
dec
scas
sub
xchg
loopne
clc
fcompl
jbe
sarb
or
mov
ficompl
mov
and
loopne
pop
xchg
rolb
or
jns
neg
ja
call
lahf
std
xor
sub
ljmp
mov
add
insl
stos
dec
roll
pop
add
xchg
lock
inc
add
leave
and
out
mov
mov
mov
add
sbb
lock
sbb
push
inc
jb
or
xor
divb
addb
cmp
pop
ja
push
add
push
inc
pusha
pop
sub
repnz
int3
xchg
dec
cld
add
mov
push
and
inc
adc
inc
loopne
cltd
lea
add
repnz
cld
mov
jmp
add
loope
outsb
mov
inc
shlb
add
nop
add
inc
in
adc
add
jle
enter
hlt
push
mov
add
sbb
cmp
jbe
mov
add
ret
or
mov
mov
jnp
sbb
sub
rorb
push
push
cli
xchg
or
call
dec
roll
js
outsl
jae
add
adc
add
clc
cli
icebp
xchg
test
add
pop
jge
mov
or
into
xor
xlat
call
addr16
add
incb
and
push
xchg
xchg
cmp
pop
mov
scas
sbb
add
cmpsl
out
push
add
dec
add
mov
add
shrl
cmp
jge
and
sbb
jecxz
jne
dec
outsb
add
imul
cwtl
sub
jnp
add
jb
pusha
cmp
cmp
jns
or
add
jbe
int
push
imul
dec
cmp
test
push
clc
inc
arpl
or
xchg
fisubs
loopne
adc
movsb
fcoml
fdivrs
jb
add
out
sar
jge
cltd
pop
dec
fdivs
push
jmp
movsb
add
adc
mov
test
cs
pop
adc
push
inc
mov
jae
add
cli
cmp
inc
inc
stc
sbb
clc
addl
cmp
add
sub
add
adc
iret
and
incl
add
add
push
inc
shr
jge
daa
xchg
or
addb
push
jo
and
or
sbb
lock
add
push
lret
movsb
push
dec
add
jno
xchg
mov
ds
jns
mov
js
dec
iret
clc
inc
test
pop
and
jg
add
mov
sbb
add
xor
push
mov
jo
hlt
sbb
adc
pop
sub
jae
add
cmpsb
or
and
loope
andb
adc
mov
fs
into
add
testb
dec
nop
outsl
add
or
jo
adc
pop
fstl
insb
cli
test
incb
push
fdivr
adc
add
pusha
inc
int
jg
and
vucomiss
mov
jb
cmp
push
mov
es
or
sti
sbb
insb
cld
lock
xor
adc
jle
out
add
pop
dec
jle
add
imull
rorl
in
imul
add
lea
nop
repnz
or
mov
add
data16
add
and
out
fldenv
add
mov
dec
sub
jl
xor
jb
cmp
add
mov
pushf
and
xchg
roll
cld
hlt
add
xchg
pop
or
jne
adc
push
or
call
std
nop
mov
push
jg
xchg
imul
gs
add
js
sarb
adc
leave
push
imul
stc
mov
loope
add
jmp
xor
jno
adc
inc
or
cs
mov
xor
mov
lcall
mov
add
cmpsb
imul
fs
sub
cmp
add
inc
adc
mov
or
js
add
leave
add
mov
fldcw
pop
add
dec
push
mov
ja
mov
pushf
dec
push
dec
mov
cmp
cmp
jb
or
inc
jmp
fcomip
add
cmp
or
add
jp
add
push
hlt
mov
repnz
jbe
add
lret
and
mov
or
adcb
bound
sbbl
loopne
xchg
cli
js
and
add
inc
dec
mov
shlb
inc
cld
mov
dec
lret
jmp
lds
add
pop
inc
and
add
cwtl
fcoml
sbb
cs
je
add
xchg
push
and
mov
dec
xor
push
roll
adc
xchg
shl
int
jns
add
dec
sbb
adc
daa
add
stc
mov
out
pop
and
sub
push
mov
push
inc
sbb
add
push
pop
and
and
loopne
nop
or
adc
mov
leave
mov
pop
or
adc
shll
lea
dec
leave
mulb
add
int3
cltd
sbb
xchg
xchg
cmc
xchg
add
outsl
inc
faddl
or
rcl
push
mov
xchg
add
call
pop
and
add
push
and
add
sub
pop
test
inc
mov
and
sti
or
popa
inc
je
nop
les
jg
clc
stc
nop
mov
enter
in
and
shlb
in
jno
add
les
inc
leave
enter
pusha
jns
jmp
insb
scas
jae
or
sub
xchg
stc
shr
imul
mov
mov
add
add
pop
andb
sbb
add
cmp
push
mov
pop
and
cwtl
mov
or
into
or
adc
mov
xor
cmp
test
sub
dec
and
shlb
out
add
lods
dec
xchg
scas
mov
push
orb
mov
icebp
je
das
sub
jne
add
push
mov
lock
jae
or
arpl
mov
pop
mov
push
outsb
fisttpll
out
dec
jo
add
xor
test
int3
xchg
es
add
jl
inc
cltd
sub
leave
movsb
adcb
jne
hlt
push
lods
sub
or
test
pop
sub
pop
movsl
loop
add
xor
add
xchg
push
mov
movsb
lea
sub
push
cli
test
or
or
ret
xchg
cmpb
inc
pop
rcrb
xchg
or
sahf
fxtract
add
and
mov
sub
inc
je
jle
and
mov
and
add
addl
jmp
inc
jnp
add
fdivrs
repz
movl
mov
nop
in
addps
mov
sbb
cmp
ja
imull
dec
inc
add
pop
lock
add
ja
sub
call
jne
sbb
sbb
nop
js
jle
sbb
nop
cmovae
adc
add
jmp
aam
dec
clc
inc
xchg
pop
je
add
mov
dec
inc
orb
jnp
add
or
mov
sub
js
add
aaa
shrb
fsubl
es
sub
or
int
jns
ret
jno
mov
sub
clc
mov
into
and
push
sbb
adcb
pop
cmp
xor
fdiv
fcmovb
testl
and
push
push
inc
adc
adcl
cwtl
and
out
inc
std
mov
jmp
xchg
inc
inc
jne
pushf
sbb
pop
in
sbb
ret
subl
sti
xor
popf
inc
xor
mov
call
aaa
add
repz
adc
and
mov
cmpsb
pop
adc
sbb
jne
sub
mov
mov
push
pop
into
add
insl
add
mov
shlb
es
mov
inc
pop
mov
fldl
mov
repz
aad
xchg
dec
add
insb
jecxz
das
sbb
icebp
lods
jns
pop
add
cltd
es
mov
pusha
jbe
arpl
add
mov
rolb
xchg
les
push
nop
mov
inc
lea
push
push
cmc
sbb
xchg
jns
pop
sbbl
add
movsl
dec
add
or
test
rorb
adc
call
mov
mov
dec
sbb
les
orb
mov
add
xchg
add
aam
mov
xor
add
and
data16
pop
dec
add
inc
shl
out
dec
add
lea
inc
add
jmp
jne
mov
or
mov
jle
push
mov
sub
add
or
add
and
imul
sahf
jle
pop
add
xor
subb
test
jl
clc
loop
insb
ds
pop
pop
les
add
mov
push
mov
cmpsl
cwtl
add
js
sbb
in
push
data16
lea
push
push
or
add
pop
arpl
mov
test
pop
xor
call
nop
aas
add
cmp
adc
icebp
push
cvtps2pi
xor
nop
pop
cmp
movb
mov
push
std
add
or
jno
adc
jo
and
jle
push
bound
repnz
addl
dec
xor
push
cmpxchg
add
jmp
mov
pop
and
ja
xor
test
fsubl
lret
push
jmp
fistps
int3
sahf
xor
cld
icebp
iret
idivb
adc
add
or
inc
shrl
mov
mov
pop
add
jg
sbb
movb
paddsb
lock
jge
add
dec
pop
and
mov
add
mov
lds
leave
in
add
mov
xchg
int
into
and
loopne
aad
cmpsb
inc
roll
dec
bound
mov
fucomp
jecxz
ret
mov
jmp
add
sub
test
lcall
or
cmp
add
dec
test
inc
push
bound
cmp
pop
daa
jmp
pusha
iret
loopne
stc
aaa
in
or
and
pop
das
xor
sbb
add
add
add
or
adc
pusha
add
push
out
test
call
inc
ficoms
fcoms
test
ljmp
xchg
inc
mov
sub
test
subb
adc
ljmp
popa
jg
or
movsl
adc
mov
and
or
inc
sbb
add
xchg
and
xchg
fmuls
fildl
xchg
cmpsb
in
fsubl
sub
mov
mov
xchg
inc
cs
daa
push
es
enter
cmovno
lock
mov
les
or
enter
jbe
cmp
dec
push
inc
fs
add
testl
lea
xchg
lret
add
pop
jmp
cmpsb
xchg
inc
pop
xchg
and
and
test
shlb
add
and
mov
movsb
adc
addb
mov
cmpsl
mov
arpl
fbstp
add
pop
xor
fimuls
mov
mov
xor
rcl
ret
lret
cmp
jb
sub
sbb
add
mov
aad
adc
push
add
push
xor
pop
sub
add
lock
rorl
inc
pop
jo
add
push
jge
add
push
call
add
fwait
sbb
jns
pop
jecxz
fisttps
in
push
fiadds
xchg
jnp
dec
les
or
test
jae
add
xchg
pop
mov
add
les
mov
sbbb
add
loopne
or
orl
adcl
and
jg
in
or
orl
sahf
add
fisttpll
sbb
cld
testb
movb
or
or
xor
sbb
leave
push
cmp
fimull
pushf
push
aam
or
in
jle
add
hlt
rcr
inc
inc
push
or
push
mov
faddl
rorl
push
aaa
in
stos
pop
mov
or
aam
inc
fcoms
fsubl
mov
add
mov
mov
pushf
mov
adc
xor
add
xchg
data16
pusha
add
lock
mov
add
shl
dec
add
int3
test
add
add
and
add
jb
cmp
into
call
add
dec
or
inc
mov
add
add
adc
dec
inc
orb
je
dec
and
cmpb
jnp
add
dec
loopne
jae
adc
jns
xor
push
sub
mov
jp
in
sub
mov
addb
lock
add
mov
lcall
mov
add
xlat
pop
dec
clc
fiadds
daa
push
outsb
sub
add
adc
jno
enter
jne
fdivl
dec
mov
pop
insb
and
xor
or
roll
pop
in
testl
ret
add
dec
add
incl
add
fisttpll
ljmp
fcomp
pop
dec
push
xlat
jecxz
mov
mov
or
sub
add
cld
pop
or
int
mov
inc
add
imul
and
jae
jo
add
sub
jb
inc
mov
dec
shrl
lret
jne
out
add
imul
dec
mov
sbb
push
test
mov
adcb
stc
push
push
mov
inc
addb
push
mov
mov
or
leave
jne
add
push
and
outsl
adc
add
pop
add
add
inc
dec
out
mov
dec
cwtl
adc
fwait
mov
orb
push
fisttps
adc
and
sbb
push
out
or
iret
jmp
mov
adc
mov
in
call
add
cmp
test
pop
sbb
add
mov
stos
enter
sub
pop
rol
cmp
jnp
sub
addr16
sub
aam
mov
ror
fsubr
mov
cld
sub
insl
add
inc
and
sti
push
cmpsl
jmp
push
xchg
int3
lahf
pusha
lahf
sub
or
push
clc
cmp
gs
jne
add
cld
mov
dec
arpl
sbb
mov
cwtl
addb
lock
mov
clc
sarb
push
cld
ss
mov
mov
iret
add
mov
adc
mov
stc
or
sub
imul
mov
jmp
push
aam
xor
das
jb
sarb
add
in
sub
or
add
test
and
push
in
bound
push
in
sete
mov
mov
test
sbb
jae
mov
int3
xor
jns
xchg
mov
nop
aas
or
jmp
add
dec
cs
adc
jnp
add
or
and
clc
xor
sti
add
mov
cmp
or
aas
adc
fdivs
imul
jb
inc
push
mulb
arpl
mov
fadd
add
mov
adc
test
adc
mov
scas
lret
es
inc
les
xor
lock
jp
add
fs
adc
fidivs
jo
jle
repnz
and
adc
cmp
inc
dec
fs
sub
cmp
adc
jge
jns
pop
sub
xchg
and
add
mov
cltd
test
lock
push
mov
test
xchg
sbb
pop
mov
pop
cltd
loopne
rolb
fcompl
add
fcoms
cwtl
cltd
sbb
push
push
cmp
pop
xchg
dec
or
iret
mov
enter
les
je
dec
mov
mov
inc
mov
scas
ds
pop
dec
in
outsb
jl
test
in
cmp
dec
movsb
xchg
cmp
mov
sub
sbb
mov
dec
sub
in
cmp
mov
fdivrl
jg
inc
adc
mov
je
in
xor
jo
push
stos
or
cwtl
mov
cmp
pop
iret
adc
out
fsub
and
idivl
testl
flds
push
std
hlt
cld
xor
dec
jp
add
inc
scas
mov
jnp
jp
add
or
or
pop
jl
mov
push
cmp
adc
dec
inc
popf
inc
push
das
cs
inc
cld
mov
stc
pusha
dec
pop
xchg
inc
cmp
je
shll
inc
jle
add
or
push
pusha
setno
cmpb
subb
sti
or
in
aam
and
add
or
add
jae
enter
ljmp
and
sub
movsb
jmp
orb
pop
adc
je
add
jle
mov
cmp
cmp
add
xlat
add
call
lds
add
and
pop
roll
cmp
jne
add
iret
out
orb
adc
stos
and
cwtl
dec
popa
pop
in
aam
jg
pop
cmp
add
leave
repnz
dec
add
inc
mov
neg
jns
in
jmp
sbb
mov
xchg
je
jno
add
orl
and
stos
inc
push
pop
xchg
lock
xor
jno
stc
sub
aad
mov
das
inc
sub
rclb
adc
mov
ret
ljmp
mov
mov
add
mov
pop
or
mov
icebp
nop
jge
push
inc
cmpsl
neg
xchg
mov
in
mov
add
stos
xchg
push
xor
jp
push
fistpll
leave
les
stos
rclb
pop
or
cmp
ret
pop
xchg
jae
jb
cmp
ljmp
loop
dec
test
jmp
sub
fisttpl
rcll
add
faddl
mov
je
or
hlt
mov
xor
mov
incl
sbb
or
clc
or
pop
sub
add
jns,pt
test
cmp
dec
movsb
xchg
xor
push
or
add
cmp
fnstenv
decl
fisttpll
xchg
jnp
mov
add
je
push
add
dec
and
jp
sub
mov
jle
idivl
pop
pop
adc
inc
loop
jmp
jo
dec
loope
inc
test
add
add
add
inc
mov
add
cltd
sub
std
pop
sub
add
dec
cmc
mov
sti
popa
jg
cs
sbb
push
and
add
enter
sub
xor
sbb
cmp
flds
and
pop
testb
nop
or
dec
ljmp
adc
pop
out
jae
push
dec
fisubrs
sbb
lea
push
icebp
dec
call
mov
sub
rcll
mov
dec
add
jge
outsb
lcall
arpl
out
cmp
jbe
adc
jne
bound
push
add
movsl
cmp
dec
jmp
dec
movsb
int3
jmp
add
xor
or
jno
mov
jg
in
cmpb
lock
add
cmpsb
or
jmp
or
sbb
je
and
and
xchg
adc
pusha
push
out
loop
mov
sbb
or
or
les
mov
adc
jmp
out
gs
mov
mov
mov
push
clc
push
popa
inc
xchg
je
shll
xchg
repz
push
xor
inc
pop
jmp
inc
gs
fists
xlat
jmp
inc
inc
fmuls
rorb
add
fidivrl
lret
add
rorl
mov
add
adc
scas
add
mov
sti
xchg
pusha
jmp
pop
outsb
in
add
testb
sub
xchg
add
rol
jne
xor
add
xlat
inc
or
in
pop
ret
inc
sub
repz
in
adc
cmpl
dec
addb
sub
faddl
call
enter
or
add
clc
push
into
and
add
adc
and
dec
push
xchg
jnp
out
inc
add
push
and
pusha
mov
outsb
adcl
js
hlt
andl
cld
lock
pop
sahf
es
add
loop
pop
inc
add
xor
add
mov
xchg
add
and
pop
add
mov
movsb
ret
mov
mov
jl
std
adc
decl
add
jmp
out
inc
out
js
xor
in
jle
lods
cwtl
lea
or
fnstsw
mov
ret
pusha
jp
loope
and
insb
pop
mov
mov
imul
inc
ja
stos
jle
mov
pusha
xchg
sbb
push
add
imul
sbb
shlb
add
insl
sti
addl
lea
shlb
cmp
and
es
add
lahf
xchg
adc
cmpl
cwtl
pop
adc
movb
jmp
fldt
dec
sub
add
adc
sar
aam
mov
addl
call
rolb
fcmovnb
jns
cmpsl
fsub
pop
fstl
cli
loopne
pop
je
fidivrl
xor
fbstp
lea
jnp
mov
mov
in
add
nop
add
jno
mov
add
and
stos
mov
or
add
adc
cmp
add
daa
cmpb
clc
and
push
add
or
adc
add
jmp
cwtl
das
pop
test
pop
mov
sbb
and
push
outsb
add
out
ljmp
push
add
push
out
mov
add
add
enter
sldt
xchg
sarl
and
jmp
add
dec
testb
pop
mov
sub
add
loopne
jae
repnz
add
adc
fildll
xlat
mov
push
inc
jns
xor
test
cmc
lods
repnz
call
testl
xchg
les
jne
pop
dec
pop
cmc
jbe
popa
roll
dec
and
and
xchg
add
xor
sbb
add
push
push
pop
mov
aas
shl
stos
mov
jmp
mov
rolb
push
mov
pop
aad
jmp
sbb
rcrl
add
loop
sub
pop
out
call
ds
push
lds
add
xchg
test
sbb
add
sub
adc
add
into
xor
and
add
jo
inc
sbb
add
rolb
add
mov
cwtl
jg
ds
bound
stc
push
add
fchs
cmp
jmp
movb
push
test
mov
add
mov
fadds
test
pop
lods
cwtl
lret
push
dec
add
les
lahf
sub
orl
or
dec
nop
inc
push
ret
ret
sbb
push
add
mov
or
dec
jnp
add
imul
nop
add
cli
add
loopne
jb
ljmp
mov
add
xchg
jno
sub
mov
test
add
push
mov
jns
pop
push
mov
sbb
mov
xor
scas
test
adc
fisttps
fimull
sub
test
add
leave
aas
jmp
inc
mov
adc
nop
adc
inc
pop
mov
bound
and
inc
sub
pop
or
or
loopne
ss
adc
xchg
out
add
xchg
jbe
pop
and
and
mov
fwait
and
add
lret
cmp
add
mov
add
xlat
jno
or
stos
mov
sarl
or
push
and
cmpb
repnz
inc
inc
inc
test
xchg
int
loopne
dec
ds
xorb
call
pusha
sbb
movsl
dec
hlt
add
fninit
push
push
not
mov
inc
pop
sbb
inc
fdivs
add
add
repz
out
mov
push
popa
mov
add
dec
lods
jge
ds
or
fwait
or
cwtl
xor
lea
xor
ret
enter
testl
inc
add
arpl
add
lret
jmp
stc
add
jg
shlb
es
scas
ja
add
xlat
adc
jge
add
cli
jae
andb
add
mov
xor
sbb
mov
cmovg
sbb
adc
add
jne
or
stc
jp
xlat
clc
jmp
add
imul
xchg
jns
jns
mov
cld
nop
test
xchg
xor
dec
jle
pop
sbb
ror
mov
dec
adc
lret
lahf
push
add
xchg
add
mov
mov
add
fldl
add
lea
mov
add
ret
popf
push
add
or
inc
inc
inc
imull
aaa
jo
or
scas
jle
fmuls
mov
push
ror
add
fs
or
mov
and
arpl
mov
or
js
pop
inc
inc
js
xor
mov
and
mov
dec
or
add
imull
inc
push
mov
mov
xor
push
push
jge
add
xchg
leave
mov
add
jl
pop
inc
mov
ds
test
loope
movzbl
add
and
shl
scas
add
sbb
mov
shl
fisttps
sbb
lods
add
xlat
push
adc
shrl
and
out
xor
stos
xor
xor
movzbl
cmc
xorb
add
int3
dec
in
add
xchg
dec
pop
xor
pushf
mov
movsl
inc
cltd
pop
pop
shrb
decb
lock
loopne
push
sbbb
pop
push
xorb
push
popf
in
fiadds
jg
xlat
mov
mov
adc
shlb
dec
pop
mov
cmp
add
fdivrs
xchg
fs
xchg
add
add
inc
mov
jmp
xor
out
fiadds
and
adc
sahf
ja
add
pop
inc
dec
add
ret
pop
in
call
imul
add
je
sub
fstps
add
mov
cmp
and
xor
xchg
cmp
add
or
roll
add
add
aam
out
dec
push
add
dec
sbb
or
dec
andl
out
ss
lock
lods
out
xor
push
cmp
inc
xchg
mov
sbb
gs
scas
inc
mov
sbb
test
dec
pop
mov
mov
add
sbb
fisttpll
icebp
jne
aas
add
cs
push
add
sub
jno
outsl
addl
add
stc
sub
insb
insl
inc
xor
dec
push
data16
and
add
hlt
outsb
daa
das
shlb
mov
pop
loopne
jbe
push
test
dec
cmp
scas
movsb
jne
bnd
add
or
call
andb
sbb
add
dec
mov
dec
mov
add
add
sub
mov
fwait
sub
mov
arpl
add
jmp
sahf
jmp
push
mov
lret
jns
add
movsb
pop
cmp
push
add
sub
enter
adc
jle
add
fsubrs
cli
pushf
mov
jecxz
sub
clc
mov
jne
mov
add
test
cwtl
fs
les
hlt
sarb
in
cmp
xchg
call
jns
outsl
out
outsb
add
jecxz
push
sub
xchg
incl
push
inc
test
pop
repnz
mov
and
sahf
jae
mov
cmp
and
out
jbe
xor
pusha
hlt
testb
push
xor
dec
or
push
add
mov
pusha
inc
jmp
repnz
shr
add
push
fdivs
shlb
repz
jne
xor
cmp
fimull
aad
not
ljmp
cmc
xchg
mov
xor
pop
pushf
fs
call
into
mov
add
cmp
push
popf
lock
add
mov
push
dec
add
les
add
xchg
fbstp
add
add
xchg
rolb
mov
mov
popa
imul
call
popf
lds
jb
adc
xor
aam
mov
add
fists
adc
add
pmulhw
sub
enter
bound
inc
lahf
aad
or
pop
pushf
add
sub
adc
mov
add
inc
pop
inc
pop
aaa
cmp
adc
icebp
and
pushf
pusha
movsb
fbstp
push
out
dec
lret
loopne
shll
adc
jo
pop
jl
jg
add
rclb
test
add
adc
add
shl
ss
add
inc
mov
add
xchg
inc
scas
add
pushf
mov
cmp
pop
pop
repz
clc
pop
mov
xchg
hlt
pop
add
adc
stos
movsb
aad
inc
loopne
pop
mov
test
ljmp
mov
popa
push
rcrb
add
divb
and
mov
subb
lea
into
adc
and
sbb
int3
out
add
xchg
sub
lahf
fsubrs
movsb
add
mov
ret
add
out
or
or
fldcw
jae
cmp
mov
add
movsl
jo
pop
jbe
ljmp
repnz
mov
in
subb
lcall
add
sub
mov
pop
sub
add
sub
add
mov
sub
cmp
mov
lea
pop
rep
sub
pop
daa
hlt
mov
int3
lret
mov
add
cld
ja
cmc
les
sub
xchg
lret
add
clc
and
xorl
push
ret
pop
aam
pop
data16
notb
clc
jmp
mov
cmpb
pop
pop
xlat
sub
add
sbb
mov
jmp
in
fiadds
loopne
inc
aam
mov
mov
fcomps
adc
mov
lret
stos
sub
dec
aam
sbb
inc
das
in
pusha
dec
push
rcrb
or
int
and
pusha
mov
mov
add
int3
test
fdivl
add
les
pop
xchg
push
test
sbb
nop
ds
das
add
fcomps
sbb
mov
xorb
xchg
add
adc
movsb
sti
and
adc
jp
jbe
add
out
ret
arpl
scas
sub
add
jnp
in
adc
cmp
mov
lods
and
lds
sbb
xchg
and
pusha
pop
test
push
cli
addb
mov
adc
inc
sub
and
inc
add
push
add
mov
mov
inc
sub
mov
sbb
fmull
test
and
test
and
rorb
sbb
add
mov
ret
add
push
test
rclb
jnp
adc
or
out
push
lock
addb
push
clc
lahf
and
mov
adc
xchg
push
pusha
negb
mov
and
mov
cli
mov
mov
or
bound
push
dec
divl
inc
gs
or
xchg
int3
nop
lahf
dec
mov
rcrb
mov
sbb
out
mov
adc
push
jecxz
xor
pop
loopne
addr16
popl
sbb
das
aad
sbb
and
add
in
sub
test
jecxz
jb
add
ret
or
xchg
add
rcr
idiv
pushf
add
or
scas
std
rorb
or
lods
add
jecxz
xchg
mov
out
pop
loop
push
ficoms
fsubrs
mov
xchg
mov
popf
inc
sub
and
push
cmp
cmp
sbb
dec
add
jl
daa
dec
cmpsl
das
add
mov
jo
pop
hlt
push
jns
addl
sbbb
mov
lods
loopne
mov
xlat
add
xchg
outsl
sbb
icebp
xor
sbb
cwtl
lcall
mov
add
cmp
mov
jecxz
lahf
jmp
shrb
add
inc
pop
or
sahf
adc
test
sub
test
mov
push
add
jne
and
pop
adc
jle
movsb
outsb
inc
int3
add
jl
in
test
xor
js
jnp
pop
fsubl
roll
pop
mov
jmp
cmpb
inc
test
push
test
inc
push
mov
cli
lret
inc
add
xchg
push
hlt
sub
dec
es
gs
inc
add
or
sbb
popa
ficompl
test
inc
add
push
pushf
push
ja
mov
clc
add
ljmp
adc
mov
out
pop
xchg
add
lret
pop
out
lock
jecxz
subb
test
mov
add
xchg
add
mov
nop
add
inc
mov
add
push
clc
add
or
mov
lret
xchg
scas
add
popa
icebp
data16
dec
mulb
sbb
pop
dec
add
sbb
dec
inc
mov
push
xchg
fiaddl
sbb
adc
jge
faddl
sbb
and
es
inc
adc
or
mov
or
fs
sbb
sbb
sub
mov
push
addr16
mov
mov
shl
sub
outsl
push
xor
lret
imul
add
scas
pop
dec
mov
inc
dec
out
test
add
pop
fisubrl
push
push
lahf
pop
inc
add
adc
ss
add
inc
clc
and
dec
xor
adc
jecxz
mov
fs
mov
sbb
add
lds
in
and
mov
icebp
add
jg
fiadds
addb
add
je
add
sub
pop
sub
add
icebp
std
mov
daa
repz
add
mov
cmp
shld
dec
filds
stc
pop
das
nop
mov
add
out
repz
mov
xchg
daa
cmp
pop
lods
push
aaa
repnz
add
push
outsl
movb
adc
jo
les
test
roll
mov
iret
mov
add
imul
add
and
sbb
sbb
jne
add
jmp
pop
aas
sub
mov
stos
add
mov
insb
popa
clc
add
xchg
movsb
in
cwtl
sti
add
dec
scas
fsubrp
adc
add
add
incb
jge
xor
or
mov
and
scas
sbb
dec
jne
ja
imul
mov
add
or
test
sahf
push
in
push
add
movsb
mov
lds
or
add
xchg
sarb
cld
xchg
add
enter
bound
pushf
jno
add
add
in
lahf
and
jg
add
sbbl
lock
cmp
test
add
jle
xor
and
in
add
mov
jo
scas
add
cmp
in
cmp
fimull
clc
mov
lea
jo
cs
dec
add
adc
movsl
add
pop
xchg
movsb
add
nop
sbb
push
mov
push
pop
jg
add
inc
mov
fdiv
add
clc
xor
fiaddl
or
adc
jg
cmp
in
add
cwtl
pop
call
cld
jo
repz
lods
lahf
roll
icebp
sbb
test
xor
mov
inc
fcoms
imul
cwtl
mov
jne
sahf
das
add
mov
jb
jl
and
lds
jns
add
ja
fsubl
ud2
scas
push
leave
add
js
es
popl
mov
mov
push
jae
push
fdivrs
scas
ret
adc
add
pop
fiaddl
ja
add
fadds
stos
jne
add
or
orl
adc
mov
xor
push
cmpsb
pop
jo
pop
mov
mov
es
and
push
jp
mov
xchg
clc
movsb
repz
adc
subb
inc
sarb
push
sbb
out
mov
pop
jno
rcrl
stos
fstps
add
cld
mov
mov
xorb
lret
jo
fldl
inc
test
or
push
aas
add
cmp
lds
lahf
test
mov
in
adc
sbb
and
mov
shl
mov
rcll
push
sub
add
adc
ds
repnz
push
loopne
add
lret
shlb
das
repz
xchg
pop
add
xor
jp
hlt
in
addb
fdivs
repz
arpl
fsubr
add
add
lea
add
or
push
ret
adc
shr
ljmp
test
testb
mov
jmp
push
push
fadd
sub
inc
aad
dec
add
stos
dec
adc
push
add
and
pusha
or
adc
adc
inc
sbb
popfw
adc
ja
adc
jmp
test
inc
push
or
add
sub
adc
sbb
add
jp
cmpsb
xchg
jno
sbb
inc
mov
pop
sti
pushf
or
add
imul
pop
pop
mov
jb
mov
jnp
mov
sbb
fisttpll
inc
add
call
push
cmc
sbb
cmp
iret
jne
adcb
push
jmp
or
dec
pusha
cmp
xor
mov
imul
mov
push
mov
mov
mov
mov
lret
add
mov
sub
add
sub
push
pusha
lea
cli
loope
test
adc
xchg
mov
xchg
sub
push
add
adc
callw
clc
add
sbb
adc
or
push
cli
hlt
sub
push
rorb
or
aad
or
lret
jns
repnz
push
js
movsb
mov
lods
inc
or
mov
xchg
clc
push
and
mov
sub
and
or
cld
test
add
jbe
add
or
push
lea
push
repnz
adc
jb
dec
loopne
clc
popa
add
jmp
clc
sub
inc
push
jbe
add
or
pop
mov
fldl
xor
add
sbb
pop
mov
and
cmp
jbe
jmp
lahf
or
push
adc
movb
jge
cmpb
jne
or
xchg
stc
sub
sub
fcoms
adc
popa
in
cmc
add
sahf
je
into
or
adc
add
adc
test
or
sub
cmp
rolb
sub
jae
mov
in
dec
add
imulb
pop
pop
push
push
and
imul
cltd
add
or
call
inc
jne
add
adc
cmp
pop
xor
sub
or
add
lock
xchg
repz
mov
inc
aaa
mov
inc
jns
mov
repnz
or
mov
lods
sub
fistpl
xor
cs
add
adc
mov
sbb
mov
std
ret
pop
add
fs
cmp
test
sbb
or
loope
add
divl
and
xchg
ret
add
dec
ret
jecxz
inc
test
adc
inc
push
jne
adc
rorb
mov
inc
jnp
xchg
add
ljmp
idivb
mov
xor
mov
cld
jo
call
mov
adc
push
push
push
cld
mov
dec
pushf
inc
iret
dec
or
add
ret
mov
jo
lcall
incl
jnp
or
mov
pop
pop
mov
adc
add
adc
pop
shlb
cmp
add
and
addr16
hlt
stos
and
int
add
loopne
mov
jbe
xor
ret
sbb
pop
rol
push
lods
cmp
jp
jae
jmp
jo
sub
call
clc
or
sti
inc
add
adc
dec
add
fsubr
repz
inc
add
adc
xchg
jb
sahf
enter
lea
mov
jle
pop
push
xchg
push
lcall
movb
cld
das
inc
add
inc
cmp
mov
or
mov
add
jecxz
push
cwtl
addr16
mov
iret
adc
lods
int3
jp
mov
test
add
into
clc
call
mov
dec
in
nop
dec
xchg
add
pop
jle
dec
mov
add
cwtl
dec
add
xlat
xor
not
and
mov
mov
movb
rolb
ret
jmp
add
add
sbb
inc
xlat
dec
add
cmp
shll
sbb
add
ret
lock
add
fiadds
cmp
into
add
mov
mov
sbb
mov
cmp
in
stc
jg
add
mov
in
adc
add
cmc
in
adc
sub
lock
pusha
push
imull
sbb
adc
inc
xor
push
xchg
inc
std
push
shlb
fadds
cwtl
addb
and
scas
add
inc
mov
add
xor
sub
mov
mov
inc
add
add
inc
xor
adc
add
in
cmp
sbb
fnstcw
push
or
mov
getsec
cmpsb
cli
das
outsl
adcb
add
pop
lret
in
lcall
stc
pop
vfrczps
adc
pop
pop
cmpsl
sti
push
push
std
loope
stos
movl
popf
clc
ret
dec
cs
ja
subb
xchg
testl
cmp
out
mov
add
sti
rorl
push
add
mov
int
and
icebp
pop
jns
inc
mov
add
or
enter
add
add
push
mov
and
and
mov
stc
add
addr16
xor
sub
push
cmp
cli
incl
imul
idiv
jno
xchg
adcb
add
popa
popf
insl
xorl
repnz
scas
cmp
jne
add
xor
mov
pop
adc
rolb
lods
rclb
iret
fimuls
push
mov
push
notb
sub
jo
add
or
jle
fwait
add
test
cli
daa
mov
add
test
out
aam
and
add
add
cmp
adc
insb
push
mov
in
and
out
cmp
add
jl
pop
sbb
cli
loopne
aam
and
sti
repnz
push
or
add
add
and
xor
vpermq
jg
adc
xchg
stos
out
sub
mov
pop
inc
mov
or
cmp
or
repnz
loopne
pop
cmp
gs
enter
int3
test
push
inc
add
jge
hlt
out
ljmp
test
dec
jle
add
pop
nop
cmp
loopne
or
sub
add
inc
add
adc
in
dec
lods
mov
jle
divl
sub
xor
out
mov
sub
and
push
sub
mov
loopne
or
decb
jmp
sbb
cmp
repz
int3
add
and
mov
lahf
xor
cmp
je
sbb
repnz
dec
addr16
sbb
or
popl
daa
sbb
lock
sar
add
addb
jo
add
dec
dec
dec
dec
dec
dec
loopne
add
push
push
push
push
push
rclb
pop
pop
popa
bound
andb
pop
push
add
outsl
jo
jno
jae
add
ja
jns
jp
xor
xor
xor
ss
cmp
cmp
sub
cmp
dec
rcrb
jge
cmp
sub
sub
daa
or
xchg
insb
add
icebp
test
call
xor
ret
or
mov
sub
add
add
test
add
pushf
cld
cmp
add
jmp
or
jbe
leave
jle
add
jb
add
sub
jle
push
nop
int
inc
jge
je
ret
dec
add
daa
adc
mov
add
xchg
jmp
xchg
outsl
in
push
add
pusha
std
inc
add
fisttpll
stc
or
lds
dec
addl
enter
fmulp
xchg
add
orb
jne
inc
add
hlt
xor
add
jle
xor
mov
sub
arpl
sahf
adc
add
jl
shl
loope
add
cltd
jmp
pop
xchg
push
xchg
or
dec
cmp
xchg
jbe
push
add
mov
push
sbb
dec
out
movsb
ret
add
lock
add
cli
into
add
shll
add
insl
and
mov
out
mov
push
adc
pop
cmp
pop
add
push
repz
dec
cmp
sub
jno
cmp
xchg
and
inc
add
pushl
pop
xor
out
add
mov
cmpsb
std
push
mov
cltd
xchg
loop
mov
add
xchg
push
enter
lods
jb
add
mov
les
sbb
outsb
aam
lock
add
hlt
cs
jecxz
enter
or
pop
mov
sbb
mov
add
test
pop
sti
mov
clc
fldcw
cwtl
adc
add
scas
xchg
push
dec
jmp
add
adc
add
js
scas
dec
xor
add
sbb
loop
xchg
sbb
add
roll
dec
jne
aam
orl
mov
or
inc
incb
or
aas
aad
mov
mov
pusha
add
fcom
stos
adc
lock
push
mov
add
pop
mov
test
cmc
les
and
decl
fildl
stos
xor
clc
cld
call
push
lret
xor
lds
mov
jbe
pop
pop
in
shr
mov
add
fadds
adc
neg
pop
jne
add
cmp
shr
add
imul
and
decb
sahf
add
jne
ja
movsb
add
sub
add
inc
xchg
adc
inc
sub
roll
xor
loopne
fadd
or
test
add
imul
dec
or
icebp
add
pop
inc
push
add
dec
or
imul
ja
cmp
sub
jmp
push
aad
pop
filds
push
push
mov
add
adc
add
shlb
or
jmp
xchg
dec
sub
mov
jmp
pop
lds
adc
or
sub
adc
add
jmp
clc
cwtl
dec
in
add
mov
mov
inc
aaa
add
rcl
inc
out
inc
dec
mov
add
cmp
inc
sbb
add
je
shl
cmp
add
loope
adc
stc
enter
mov
repnz
xor
or
loope
lea
repz
adcl
add
stos
jmp
push
mov
ljmp
je
cmp
jne
shlb
add
sbb
filds
inc
jae
push
adc
neg
sbb
mov
jns
out
scas
sbb
sbb
test
add
push
and
imul
adc
sub
push
mov
sub
jo
pop
jmp
add
mov
sub
xchg
movl
add
ljmp
bound
out
ja
jne
rcll
mov
movups
add
jne
sub
jmp
jnp
push
mov
mov
mov
ret
pop
jmp
add
and
scas
mov
add
jge
add
negb
sbb
incl
push
loope
mov
inc
mul
add
mov
dec
rol
test
xor
mov
xor
jecxz
push
add
adc
cmp
mov
fs
or
adc
enter
add
pop
out
movsl
cmp
add
mov
inc
faddl
sbb
sbb
mov
dec
jmp
sbb
mov
add
ds
test
cmp
fnstenv
nop
insb
lea
cmp
mov
popa
movsb
add
cmpsl
cld
ja
clc
dec
loope
pop
mov
sbb
xchg
ljmp
sub
fwait
aas
add
push
mov
mov
clc
inc
cli
xchg
out
add
leave
mov
xchg
mov
std
add
mov
push
push
mov
mov
or
push
push
lcall
add
fwait
scas
sbb
jmp
dec
add
push
pushf
jb
mov
nop
and
pop
push
push
test
jp
shlb
mov
sub
xor
add
ja
add
inc
push
mov
pop
add
fisubs
adc
call
aam
pusha
xchg
jmp
add
jg
add
adc
add
lock
add
clc
test
add
add
cmp
add
adc
out
sbb
insb
cld
inc
mov
movsl
push
or
push
adc
pusha
add
cmp
incb
jne
into
ja
lahf
stc
or
insb
push
test
in
out
leave
pop
mov
xchg
sub
js
lock
mov
cmp
cmp
adc
mov
nop
or
je
push
mov
test
in
int3
add
lea
sbb
push
mov
mov
gs
test
loop
add
insl
mov
push
or
mov
or
adc
mov
mov
mov
sti
addr16
fimuls
sbb
and
xor
outsl
xchg
sbb
push
lock
pop
jle
mov
andb
and
sbb
jmp
jle
or
cmp
jne
push
movb
loop
sub
mov
xchg
mov
pusha
leave
das
pop
xlat
and
push
xchg
pop
cmp
cmp
bndstx
pop
imul
stos
cli
push
add
sbb
add
dec
dec
mov
add
inc
push
mov
stos
add
push
mov
mov
inc
add
mov
scas
xor
mov
adc
add
sbb
cmpsl
push
mov
call
stos
dec
cmp
add
adc
out
add
pop
jnp
push
sub
mov
test
add
xchg
fcoms
sbb
mov
mov
call
push
clc
les
stc
inc
and
nop
mov
inc
sahf
loope
cld
xor
cmc
cli
adc
je
mov
mov
inc
sub
pop
dec
xor
pop
dec
adc
and
les
push
pop
mov
test
shlb
push
imul
mov
das
insb
aam
rclb
lods
rclb
add
or
add
lret
stc
dec
add
rcrl
xchg
inc
jb
add
stos
and
call
xor
ret
add
xchg
fwait
lahf
add
inc
pop
cmp
fsubrs
fdivl
dec
mov
cmp
xlat
adcl
adc
call
sbb
popf
loopne
pop
add
fsub
push
mov
shlb
test
fidivrs
jb
adc
cld
bound
push
dec
add
sbb
repz
xor
scas
jo
mov
out
dec
dec
int3
mov
in
fwait
push
mov
idivb
addl
test
sub
add
lock
in
push
dec
and
cld
ror
inc
loop
pop
ror
add
inc
sub
push
addb
out
and
push
adc
fwait
inc
lcall
sub
jnp
jnp
add
xor
jl
pop
mov
add
shl
and
test
pop
dec
add
stos
je
shrb
dec
adc
push
dec
faddl
lock
jecxz
or
and
shrl
imull
andb
add
push
insb
add
and
fsts
or
pcmpgtb
dec
mov
nop
mov
enter
jo
scas
rorb
fiaddl
xor
or
add
cld
add
pop
int3
xor
shl
inc
clc
icebp
or
jge
pop
rcrl
loope
fistl
clc
je
cmpsl
pop
push
inc
push
inc
repnz
fsubl
dec
adc
or
push
inc
pop
hlt
add
sub
ret
ret
bswap
rclb
add
add
mov
sbb
xchg
rol
xor
mov
jne
pop
add
cmp
inc
inc
adc
and
mov
jp
mov
sbb
push
pop
cld
xchg
mov
repz
shlb
lcall
roll
and
repnz
mov
lcall
daa
ja
hlt
cwtl
lods
aam
add
pop
stos
push
cmp
addr16
or
push
or
jo
mov
cmpb
sti
mov
not
sbb
call
mov
roll
fadd
jmp
add
sti
and
or
test
add
or
sbb
jp
push
rol
roll
pop
int3
call
cmc
lods
sbb
mov
add
cmp
cmp
mov
int3
out
adc
sbb
clc
and
mov
jp
loopne
filds
xchg
cmp
adc
xchg
jae
xor
rclb
mov
push
and
nop
adc
push
iret
push
or
cmp
sbb
outsb
scas
add
je
mov
or
add
pop
test
and
loop
sub
inc
call
rclb
fwait
push
xor
cmp
sahf
and
ret
push
push
ret
jp
pop
icebp
mov
std
xor
sub
cmp
and
sbb
xor
sub
test
and
add
or
jmp
sub
xchg
pop
or
pop
pop
roll
outsb
mov
movb
scas
or
nop
shlb
ret
mov
add
push
dec
movsb
pop
les
cmp
inc
ret
mov
cmp
inc
adc
and
clc
movsl
add
inc
into
in
in
lods
add
lea
loope
sbb
js
les
push
add
and
or
popl
inc
jb
adc
in
cmc
xor
mov
mov
mov
sub
jle
and
nop
cmp
cld
cmp
add
mov
sub
in
pop
cmp
inc
and
add
ret
pop
add
mov
jb
or
cmp
and
sbb
pop
imull
mov
imul
cmpsb
jg
lock
mov
jo
xlat
add
jl
in
sub
add
mov
cmp
mov
add
fdiv
ret
aam
and
adc
icebp
xor
or
adc
or
je
inc
mov
jbe
addl
cli
mov
sbb
rcl
push
mov
clc
xor
stc
add
xlat
sub
pop
rol
jl
dec
loopne
add
add
mov
test
jb
or
add
inc
jl
mov
addl
dec
lahf
sub
shlb
pop
sbb
fdivrs
adcb
ja
dec
jle
push
out
pusha
push
pop
mov
pop
rolb
pop
negl
outsl
and
sar
or
add
stos
mov
push
shrb
daa
sub
add
jno
in
sbb
loopne
repnz
add
or
addb
inc
jno
add
cltd
loope
push
adc
test
andl
insb
mov
ds
xchg
push
fcoms
inc
mov
icebp
rorl
push
aad
incb
test
scas
repz
fsts
add
mov
ja
outsb
mov
mov
movsl
xor
std
cmp
jge
push
add
and
mov
inc
scas
lcall
sbb
fists
sub
cmp
add
inc
ffree
add
or
add
inc
jl
or
sbb
pop
pop
ljmp
outsl
add
jp
int3
ror
popf
loopne
ds
and
mov
enter
add
xor
out
add
pop
mov
pop
in
xor
jo
cmc
cmp
pop
cmp
pop
adc
dec
add
into
mov
psubw
repz
addb
mov
jo
mov
and
dec
pop
add
add
int3
inc
push
or
cli
out
xchg
inc
pop
adc
call
inc
leave
sub
arpl
and
icebp
mov
cmp
shrl
add
add
jmp
or
imul
clc
fsubs
dec
out
int3
add
mov
pop
mov
sbb
sbbb
mov
xor
sub
lea
jmp
pop
aaa
lret
xor
sbb
std
pusha
xchg
jnp
fcoms
outsb
add
pop
imul
cmp
cli
stos
sub
in
mov
ret
jmp
add
mov
imul
mov
add
sbb
nop
add
shll
and
sub
aam
stos
dec
cmc
sbb
shr
push
mov
fildl
stc
lret
add
mov
adcl
cs
into
lcall
pop
add
enter
cmp
ja
setno
sub
jle
loop,pt
sbb
loope,pt
push
inc
mov
leave
jo
mov
mov
add
and
push
adcb
movsl
fdivrl
adc
test
les
pop
mov
cmp
lret
cli
insb
xor
adc
insl
dec
mov
cmovae
cs
loop
movaps
nop
test
inc
xor
or
jmp
and
lods
sbb
rolb
pcmpgtw
enter
sbb
push
sub
jmp
xor
add
and
repz
repnz
nop
mov
in
add
fistpl
push
rorb
mov
bound
add
sub
add
mov
into
inc
sarb
enter
daa
mov
pop
or
cltd
mov
jbe
dec
test
cmp
push
lret
mov
lods
jbe
pop
inc
jmp
mov
add
mov
clc
xor
push
xchg
cmp
cwtl
pop
sbb
add
aas
fmul
test
dec
addl
js
hlt
cltd
sbb
cmc
xchg
and
hlt
lahf
xorl
sbb
xchg
cld
and
pop
stos
cltd
add
iret
sbb
mov
xchg
in
sub
rorl
sub
in
or
int3
call
push
out
add
int3
out
add
fstpl
sbb
loop
testb
or
je
xchg
add
jae
lret
add
jmp
and
jno
pop
mov
jno
fs
jp
add
shl
or
mov
mov
lcall
jl
add
adc
mov
pop
in
or
mov
xchg
adc
sbb
insb
adc
les
fwait
sbb
cwtl
ficomps
xchg
scas
add
adc
nop
mov
enter
pop
xchg
stc
pop
pop
in
shll
es
push
mov
xchg
add
xchg
nop
pop
adc
sub
push
inc
imul
in
movsl
icebp
je
add
push
sarl
cmp
sbb
mov
push
js
cld
mov
mov
mov
in
mov
add
cs
pop
push
add
rsqrtps
jl
cmc
add
xor
call
dec
adc
cli
mov
and
clc
xchg
sub
dec
jb
daa
xlat
aad
enter
add
stos
jmp
out
sub
xchg
mov
call
dec
aas
stc
mov
sub
push
or
ljmp
push
dec
mov
push
cli
sub
mov
xlat
bound
lret
scas
icebp
mov
dec
pop
push
sti
sub
addl
xlat
lahf
dec
shrb
xchg
loopne
sbb
pop
push
and
bound
xchg
inc
sbb
ret
nop
or
pop
fdivrl
and
mov
pop
xor
je
adc
sub
push
add
mov
lahf
mov
adc
decb
pop
loop
add
insb
ja
jmp
shll
add
add
xor
out
adc
pop
add
scas
adc
add
aaa
lods
adc
rep
and
movsb
add
or
and
xchg
ljmp
add
adc
xchg
out
add
in
mov
aaa
leave
xor
or
sbb
push
pop
pusha
fstps
out
insb
insl
or
xchg
pop
jno
cmp
pop
adc
sub
flds
inc
dec
jecxz
clc
icebp
dec
dec
scas
jp
sbb
cmpl
popf
jl
pop
adc
add
sbb
clc
lret
aaa
fs
adc
add
enter
add
in
pinsrw
cmp
cmp
pop
or
inc
or
pop
add
jp
sub
pop
push
and
add
fsubrs
sub
xor
sbb
or
decl
aas
clc
dec
subb
pop
mov
mov
sub
mov
and
clc
jo
xchg
aad
movb
mov
mov
dec
imul
ret
jno
nop
or
in
shrb
movsb
dec
xchg
incb
cmc
xchg
add
xor
jns
cmc
dec
out
shl
jg
add
call
and
adc
call
xor
out
sub
inc
scas
cld
adc
or
mov
xchg
cli
pop
bsf
and
rcrl
enter
popa
stc
or
ds
dec
cmp
je
jmp
lret
push
jnp
ror
and
add
aas
dec
fldt
setae
fists
sar
enter
add
xor
add
xor
add
xchg
sub
mov
or
testl
and
mov
push
sbb
inc
add
sbb
and
ljmp
add
fdivrl
and
add
jmp
mov
aaa
movsl
out
add
pop
mov
sbb
orb
xor
lret
add
out
and
pop
and
push
add
jmp
push
mov
and
insl
jb
aaa
inc
adc
inc
push
adc
sub
mov
add
dec
xor
xor
outsl
or
pop
sbb
les
sub
add
cmpsb
fmull
movsb
adc
mov
lds
pop
adc
push
and
scas
mov
in
or
mov
or
add
repnz
daa
mov
xchg
adc
pop
fdivrs
mov
jno
push
pop
cmp
mov
cmp
das
mov
add
push
test
and
icebp
sub
subl
outsb
mov
or
mov
jo
cmp
xor
inc
call
daa
push
and
repnz
lret
cmp
add
call
and
add
aaa
mov
in
sbbb
sbb
movsb
cmpsb
cmp
repnz
jg
fiaddl
cmp
jmp
stos
lods
clc
xchg
in
push
lret
jge
sub
pop
and
shlb
bound
and
xchg
shl
adc
mov
mov
inc
or
test
js
xchg
cmp
cmp
mov
jo
push
lahf
aas
xchg
sbb
call
and
out
fs
add
xchg
aas
str
cmp
jmp
push
and
jg
pop
mov
inc
mov
adc
jecxz
loop
pop
and
sbb
repnz
mov
xchg
add
inc
loope
add
and
out
stc
cmp
mov
and
and
mov
lock
jno
push
popa
lock
mov
mov
push
lock
add
xchg
xor
lcall
lock
lret
pusha
in
pop
sub
das
sbb
and
test
adc
icebp
ljmp
jnp
testl
jmp
jl
add
nop
jns
dec
rorb
icebp
jle
incb
mov
fcomip
cld
add
lea
lods
shrb
and
push
repnz
je
sbb
cvtpi2ps
push
mov
adc
movsl
mov
sub
andb
mov
daa
loopne
aaa
xor
add
ja
rorl
fimull
test
repz
inc
mov
pop
insl
bound
jno
mov
or
pop
ds
js
in
jmp
mov
jnp
pop
xlat
pushf
jns
dec
mov
mov
sub
add
cmp
mov
adc
mov
pop
pop
jge
jge
bound
sbb
sub
inc
rcrb
hlt
adc
pop
addb
xor
mov
mov
rolb
xor
je
push
and
std
hlt
pop
push
pusha
repnz
in
pop
in
xchg
hlt
lcall
cmc
pop
out
push
and
add
jns
lret
push
dec
add
cs
and
addb
jo,pt
add
adc
push
pop
adc
xor
add
lret
fsubl
movsl
add
mov
sti
or
enter
call
loope
testl
xor
and
inc
jle
psrlw
decl
adcb
loop
jle
rcll
test
inc
xchg
sub
push
jmp
cmp
jns
daa
dec
fmuls
fidivrl
cwtl
ja
test
ret
push
or
dec
cld
adc
mov
pop
xchg
jecxz
out
cmpl
mov
cmp
inc
or
add
fldl
add
lahf
rclb
stc
add
dec
cmpb
jmp
xrelease
add
jns
out
pop
pop
jnp
add
cmp
cmp
stos
ret
andl
inc
adc
cli
add
stos
loope
lds
jae
add
imul
dec
mov
cltd
inc
jmp
push
adc
push
add
daa
pop
jnp
mov
xlat
cmp
test
sti
clc
pop
not
add
call
in
leave
sub
adc
mov
push
and
out
push
add
inc
nop
jne
sub
sti
inc
iret
call
mov
test
dec
jnp
jnp
cs
inc
cmp
inc
cld
icebp
push
push
jp
jle
pop
test
mov
or
jmp
aas
jle
fcoml
pop
bound
jmp
jnp
cmpsb
inc
ret
add
cmp
cmc
stc
pop
xchg
out
add
rclb
mulb
lcall
add
out
sahf
xor
das
cmp
pop
lahf
add
lock
mov
movsl
stc
jo
ret
out
push
adc
loop
sub
push
pop
add
pop
fmulp
mov
test
dec
cmp
lods
ds
push
mov
lahf
loope
jl
mov
jl
mov
jge
add
mov
xchg
js
push
adc
cmp
incl
in
add
daa
pushl
ficomps
cli
push
ja
clc
add
test
stos
sub
enter
add
movsb
jg
xor
addl
adc
add
inc
mov
sbb
jmp
ret
dec
push
movsb
pop
adc
or
jns
pusha
in
push
jecxz
mov
jo
push
cmp
popa
pushf
push
mov
push
adcb
xor
add
add
mov
ss
mov
mov
gs
das
sub
enter
lock
scas
pop
daa
cmp
push
addb
push
inc
enter
shrl
push
sbb
into
movsb
and
adc
mov
out
test
add
mov
into
add
or
dec
inc
ficompl
add
or
shrb
lock
fiadds
imull
sti
xor
xchg
mov
jle
dec
add
and
repnz
addb
add
push
or
cmpsl
int
push
inc
xor
xor
cmp
aad
add
or
xor
add
sub
xor
add
ja
jnp
add
mov
push
stos
fs
pusha
mov
and
sub
cmp
test
mov
test
jecxz
cmp
xor
cli
jo
push
add
sbb
mov
xchg
into
cld
lods
sbb
jns
lret
testl
stos
and
add
mov
sbb
repnz
fs
ds
nop
dec
add
dec
jle
push
lods
add
stos
clc
in
add
cmc
or
cli
mov
testb
lret
hlt
int3
adc
pusha
cs
add
mov
fs
ss
add
stc
pushf
mov
lock
insb
sbb
add
push
mov
add
xchg
cmp
repz
test
pop
in
nop
bound
mov
ds
cltd
jb
push
cli
cld
outsl
jmp
add
xchg
fstl
cwtl
stos
add
pushf
aam
mov
sar
lahf
pop
jmp
xchg
xor
ljmp
lret
rol
icebp
add
push
or
and
outsl
add
sub
lret
xorb
pop
cmp
xchg
cmp
sbb
in
push
add
add
mov
mov
or
stos
adc
adc
sub
sarb
dec
jmp
bound
add
enter
imul
xchg
lret
rolb
lods
xor
and
ljmp
ds
std
pop
shl
fs
les
ljmp
cmp
roll
add
pop
inc
mov
cmp
push
dec
mov
add
xchg
outsb
pusha
jne
add
xchg
add
lret
cld
xor
out
add
mov
das
scas
pop
scas
or
or
imul
call
cmc
adc
stos
and
mov
and
sub
add
and
inc
cmp
inc
sbb
cmp
mov
je
mov
add
ret
push
pop
fcomps
mov
pop
fadds
adcb
sbb
mov
mov
mov
add
shll
rcrl
and
out
inc
pusha
call
mov
aad
mov
lock
cld
jno
js
xor
add
popf
mov
insb
fstl
in
or
push
push
sahf
adc
adc
mov
ficomps
jbe
pop
fcompl
pop
ja
pusha
add
pop
inc
push
sub
xchg
movb
and
add
call
mov
xor
add
insb
jbe
call
adc
pop
inc
or
inc
sub
or
dec
shr
add
lret
sarl
push
daa
stos
testl
xchg
sbb
jg
cmp
add
pop
sbb
fsubl
push
ficoms
popf
adc
jmp
cmp
push
add
pop
push
or
rcrb
jl
adc
xor
adc
add
xchg
nop
jo
pusha
sbb
sbb
idivl
shrl
add
cli
aad
add
adc
iret
cmp
sti
adc
jp
test
adc
out
pop
xchg
stc
and
sbb
dec
xchg
inc
insl
rcrb
adc
cld
std
add
call
mov
push
pop
mov
mov
jne
aam
mov
jg
or
sbb
mov
inc
adc
push
lcall
push
data16
add
nop
dec
cmp
icebp
add
mov
push
fs
ljmp
sbb
mov
cmp
rclb
repnz
jne
add
sub
adc
cld
add
cmpsb
aas
pop
pop
mov
clc
jmp
jbe
inc
pushf
insb
dec
add
mov
mov
lods
scas
loopne
sbb
mov
mov
sbb
scas
gs
xchg
add
movzbl
decl
add
sar
testl
sti
fcoms
hlt
inc
lea
pop
cld
fbld
aad
mov
mov
dec
lods
add
mov
mov
push
incb
xor
add
subb
add
push
sub
outsb
das
push
or
popa
adc
xchg
in
xlat
xor
sarb
roll
xchg
jecxz
int
add
push
call
push
clc
cvtps2pi
push
sbbb
je
cmp
lcall
and
mov
or
ljmp
dec
jnp
adc
testl
loopne
cmp
add
fcoml
pop
sub
or
cmpb
fists
outsl
jmp
jno
inc
lods
call
push
pop
mov
push
test
pop
cs
dec
cmc
add
inc
dec
add
stos
jecxz
outsl
rcl
jb
sbb
aaa
mov
add
pop
add
push
pop
push
lahf
mov
mov
dec
add
add
icebp
mov
push
ret
ficoms
xchg
lret
nop
add
sarb
push
add
xchg
add
push
pop
add
cmp
dec
xor
nop
out
xor
sbb
cmp
xor
data16
inc
mov
sub
add
mov
aam
sub
push
pop
push
pop
rorb
lret
push
pop
mov
sub
push
je
insb
sbb
and
test
dec
add
out
jae
mov
stos
sbb
loopne
jmp
aam
lock
jne
jge
add
cmp
dec
mov
mov
sbb
pushl
stos
add
add
and
lret
loopne
mov
dec
jmp
lock
xor
rcrb
inc
adc
xchg
pop
or
mov
jo
inc
add
loop
adc
mov
and
or
dec
in
mov
xchg
or
testl
loope
js
loop
sub
add
cs
daa
add
xchg
rorb
jnp
lret
sub
adc
adcl
push
jno
sbb
or
or
shll
adc
inc
pop
add
dec
int3
dec
push
testb
js
cmpsb
push
jbe
jg
cmp
cltd
addb
aaa
rclb
sub
cli
sub
push
xor
xor
mov
rcrb
or
mov
stos
adc
fmuls
xor
scas
dec
ffreep
sub
clc
mov
lea
push
add
call
ljmp
add
add
je
xchg
add
mov
and
adc
inc
push
stos
push
repnz
pusha
jo
cmpsb
adc
add
mov
stos
cmp
fadds
add
mov
xor
stos
incb
aam
data16
mov
or
pop
lahf
mov
add
out
push
and
imul
add
mov
add
and
push
mov
aas
call
or
popa
inc
lret
add
pop
adc
int
js
cmp
add
add
jle
xchg
pushf
adc
nop
add
inc
adc
cs
shlb
sbb
je
mov
xor
jo
jge
xchg
xchg
add
add
in
or
mov
ret
xchg
enter
add
mov
stos
call
adc
subl
ds
daa
int
xor
insl
adc
cs
pop
lcall
xchg
stc
outsb
and
int
loopne
push
mov
add
or
inc
pop
mov
add
cld
sub
add
xor
lret
add
push
or
jb
add
enter
loop
ret
fadds
ror
adc
push
cmp
xchg
add
push
sub
mov
sbb
and
mov
loopne
add
or
fmuls
mov
imul
je
add
bswap
rcr
loopne
loope
jo
pop
mov
xor
pop
dec
in
add
into
pop
add
pop
movsb
aam
rorb
daa
and
lcall
sbb
ja,pn
shlb
inc
hlt
mov
clc
pop
sbb
pop
roll
adc
sbb
add
sub
pop
stos
dec
mov
add
push
mov
add
cmc
cmpsl
fbld
mov
add
mov
add
mov
add
aas
jae
loopne
es
add
js
pop
add
loope
adc
stc
or
dec
lret
outsb
push
lock
sub
sbb
cltd
cmp
push
std
adcl
in
push
add
ret
sbb
push
sahf
inc
sub
xchg
sbb
lret
imul
adc
insb
dec
pop
pop
lahf
or
mov
or
mov
std
loope
cmp
sbb
adc
xchg
adc
lods
dec
dec
pushf
mov
inc
pop
cmpsb
and
add
nop
or
or
and
push
dec
mov
mov
jns
cs
adc
xor
push
add
add
pop
dec
popa
arpl
in
flds
xor
sub
xor
cmp
adc
je
push
nop
xchg
push
xor
or
mov
adc
jp
pusha
pop
adc
and
incl
xor
int3
cld
inc
add
adc
add
mov
andb
or
stos
mov
orb
jnp
popa
add
dec
pop
test
adc
add
das
jb
pop
stos
xchg
outsl
stc
sub
mov
mov
add
bound
std
pop
in
mov
sub
jns
push
jae
jnp
or
jl
jge
insb
push
lahf
imul
mov
loopne
pop
ret
push
stos
lcall
jb
add
xchg
add
lods
into
xchg
rcll
mov
and
add
jmp
nop
add
dec
mov
or
pop
out
pop
daa
sbb
mov
mov
dec
out
fadds
xchg
inc
inc
adc
add
arpl
cmp
jp
and
sbb
push
add
stos
push
pusha
comiss
pop
jb
mov
addr16
es
inc
mov
ficoml
cmpl
repz
pop
rolb
loop
xchg
sub
test
inc
repz
dec
cld
out
enter
add
push
rcrl
je
xchg
test
jo
out
cmp
subl
pop
fwait
test
adc
clc
inc
cld
dec
addb
mov
mov
cltd
sub
sbb
cmp
je
pop
xchg
xor
outsb
pop
and
or
xor
mov
adc
js
pop
sbb
add
add
pop
movsb
sub
sub
sbb
mov
sub
daa
fimull
bound
dec
lea
add
popa
cmpb
jle
pop
inc
cmpsb
xor
mov
sub
mov
jo
ret
rolb
jg
mov
or
sarl
dec
cmp
and
loopne
xor
jecxz
sub
add
jge
insl
je
add
ds
sub
lcall
inc
addl
sub
mov
jns
add
cld
jae
cli
and
es
je
sbb
pop
xchg
and
xchg
gs
clc
lcall
sbb
dec
sti
or
sub
and
adc
ret
mov
push
and
lret
push
add
cmp
sub
dec
jmp
and
mov
adc
add
pop
push
mov
fwait
cli
xorb
popf
cld
stos
int
push
add
xchg
dec
inc
jle
add
mov
mov
lcall
sbb
add
std
or
xchg
enter
mov
mov
sbb
fsubs
pop
cmpsb
addr16
xlat
pop
add
imul
pop
and
sbb
int3
test
dec
ja
or
and
sbb
ljmp
mov
nop
xor
movsl
xor
push
sbb
adc
add
xlat
push
xchg
sub
sbb
andb
js
add
jb
inc
xchg
jae
dec
rclb
or
mov
add
inc
sti
mov
imul
add
pop
pop
jbe
dec
sub
shrb
scas
mov
popa
cmpsl
xor
test
nop
push
add
push
mov
call
sbb
mov
stos
jmp
jp
adc
and
mov
rcrb
pop
popa
xchg
pusha
xchg
add
add
xor
add
outsl
sub
mulb
add
dec
repz
clc
xor
ljmp
jno
stos
sbb
add
mov
sbb
push
mov
and
icebp
int3
adc
fs
mov
das
xchg
lock
add
sub
std
add
iret
jge
add
aam
mov
and
sar
add
js
sahf
dec
les
and
or
sbb
adc
jns
arpl
mov
imul
andb
push
push
bnd
mov
xchg
pusha
push
out
jmp
add
adc
es
pop
pop
xchg
cmp
and
add
add
daa
adc
insl
cmpsb
inc
and
pop
js
mov
fimull
xchg
mov
pusha
and
js
pop
inc
mov
mov
aas
cmpl
mov
add
out
movsl
and
mov
add
lahf
adc
add
lret
mov
add
or
add
gs
sbbb
xchg
add
int
push
daa
iret
sbb
cmp
rcll
pop
pushf
test
and
add
inc
xor
jns
xor
pop
add
xchg
add
lahf
popa
pop
ret
and
test
cli
es
pop
inc
mov
sbb
popl
jge
psrld
or
dec
adc
fcmove
push
pop
mov
adc
xchg
push
adc
mov
xor
sub
sbb
popa
and
add
ficompl
xchg
mov
cmp
mov
adc
daa
add
dec
aaa
pop
mov
lods
add
adc
push
pop
movsl
push
push
lahf
cltd
jb
arpl
inc
sub
mov
add
push
shlb
pusha
pop
je
and
inc
shlb
pop
cmpsl
pop
insl
movsb
jo
cmp
cmp
add
push
shlb
cmp
jae
xorb
adc
cmp
jnp
mov
jmp
xor
popa
or
sbb
pop
rclb
and
lret
add
enter
xchg
call
add
sub
fs
data16
add
ss
push
add
xchg
lock
into
clc
cmp
mov
pusha
cs
and
nop
push
psubsw
orb
arpl
add
sub
jb
add
add
aas
and
ds
mov
push
lea
add
push
ljmp
lahf
adc
push
or
sbb
aaa
mov
adc
pop
std
das
add
repnz
mov
and
inc
add
adc
add
lock
jnp
in
push
jl
mov
sbb
int
xchg
xor
popf
add
mov
jg
loopne
sub
jo
subb
out
fcomp
dec
rcl
aaa
sub
add
add
jp
movsl
js
cmp
mov
bnd
xchg
adc
add
clc
xchg
movsl
or
ljmp
add
stc
add
lds
and
dec
daa
cmp
lods
hlt
push
push
ss
jo
or
mov
inc
pop
jmp
jne
mov
adc
add
jmp
jns
call
flds
inc
push
jmp
add
add
filds
data16
or
ss
push
testb
les
pop
jle
pop
add
mov
popf
lds
mov
adc
and
test
sub
jb
add
xor
sbb
inc
enter
add
cli
cmp
mov
jg
movsb
imul
add
cwtl
cmp
loopne
in
je
jge
sbb
insb
mov
mov
pop
test
incb
psubsb
addl
repnz
jne
fsubs
arpl
test
sbb
jg
iret
aas
inc
mov
adc
aad
jp
aad
movsl
cmp
push
add
mov
cmp
push
cmc
incl
xor
fiadds
popl
adc
sbb
pop
add
clc
xorl
iret
pusha
mov
adc
jb
testb
add
and
mov
push
xlat
mov
add
stc
push
lods
sbb
add
lret
loope
add
fmull
push
clc
std
dec
test
ljmp
pop
cltd
push
cld
adc
lahf
xchg
addl
outsb
xor
add
call
cmpsl
stos
loop
popa
ret
jle
or
jne
pop
pop
pop
push
push
mov
and
roll
sub
nop
incb
add
sbb
dec
movsb
cmp
adc
and
movsl
add
adc
add
pop
mov
jmp
add
sbb
fs
push
dec
add
test
mov
sbb
sar
dec
data16
push
adc
jns
sub
sbb
sub
rolb
movl
insb
adc
add
jne
add
je
shl
nop
xor
int
jecxz
cmp
rolb
test
jne
and
aad
sahf
call
adc
ss
mov
sub
jp
loop
xor
aas
lock
sbb
pusha
fmul
inc
negb
mov
mov
or
cmp
push
shr
cli
add
mov
shrb
xor
and
push
and
mov
iret
mov
push
and
fldenv
and
xchg
setl
adcl
push
movsl
cld
bound
test
add
cltd
add
sbb
cmp
inc
pop
ret
xor
pop
sbb
or
addb
cmp
femms
test
dec
or
jmp
adc
pop
push
sub
in
enter
pushl
sub
push
jo
push
mov
adc
push
xor
push
or
mov
adc
add
inc
lret
inc
rolb
out
nop
outsl
or
inc
daa
pop
cmp
push
push
das
push
add
mov
movsl
aad
rolb
jne
mov
xchg
test
sub
and
imul
lret
test
popf
loopne
push
pop
call
add
ret
jmp
add
mov
sbb
in
push
fsubrl
push
add
cltd
dec
and
js
push
push
pop
ret
fst
sbb
into
xchg
sarb
loop
xor
ja
jbe
cwtl
jo
cmp
xchg
ret
or
lea
fcoms
mov
cmp
sbb
sahf
pop
add
mov
push
lock
add
jbe
jno
addr16
popa
lds
je
pop
into
jg
inc
inc
add
clc
dec
push
jbe
or
inc
push
or
jb
push
jae,pn
arpl
outsl
add
sbb
inc
push
clc
cmp
imul
cmp
dec
jb
add
arpl
push
popa
add
mov
movq
insl
popa
jb
pusha
inc
add
icebp
or
mov
add
jno
dec
add
imul
addr16
jmp
shlb
lahf
push
or
popa
mov
xor
movsl
jb
inc
popf
rclb
add
arpl
pushf
ja
push
add
insl
data16
test
lock
add
jo
popa
push
bound
js
pop
cmp
mov
add
ret
movb
dec
sbb
ja
arpl
add
inc
push
cmp
mov
lock
jbe
mov
rcrl
xor
or
ret
add
adc
inc
dec
adc
ja
stos
push
add
inc
inc
pop
rclb
add
dec
push
cli
or
adc
pop
and
pusha
and
daa
jge
adc
inc
insl
push
add
mov
shrl
mov
xchg
jecxz
nop
out
idivb
sar
and
add
or
add
push
xlat
jb
adc
add
cmc
leave
sub
add
mov
out
and
pop
push
mov
pop
lret
pop
sbb
fsubrl
push
sbb
sub
sub
add
mov
or
sub
mov
aaa
add
xor
jne
add
pop
sub
lea
dec
add
or
add
sub
push
aas
test
pop
pop
aas
add
inc
std
loopne
mov
dec
jns
arpl
ret
das
roll
es
pop
dec
mov
loopne
ja
sbb
lret
jno
cmpb
or
or
sbb
mov
inc
sub
lods
xchg
add
dec
jne
xchg
push
test
fs
out
mov
clc
in
and
inc
imull
or
xchg
jge
cmp
lret
mov
add
dec
leave
roll
push
push
add
xor
add
shrb
inc
cs
jo
add
clc
push
add
jmp
inc
adc
and
add
add
jmp
inc
mov
sbb
add
or
pop
add
fsubrl
push
sbb
cwtl
cmpsb
xchg
add
sbb
xor
add
in
dec
or
pop
jae
add
cmp
xor
sbb
loope
mov
popf
fiadds
nop
push
jg
ss
push
ret
jmp
sbb
out
jo
jle
add
push
inc
test
scas
mov
xchg
xchg
ret
mov
cli
jne
add
hlt
mov
aad
clc
jg
add
dec
push
ret
sub
add
pop
dec
cli
mov
add
cld
or
jp
outsb
mov
push
pusha
insl
add
incb
lcall
inc
mov
pop
xor
andb
pop
shlb
or
sbb
adc
sbb
std
add
cltd
aas
test
or
icebp
loopne
cwtl
pop
adc
stc
mov
push
jge
scas
mov
stc
into
xor
and
sahf
fwait
xor
subl
inc
sub
jp
mov
xor
push
iret
sub
jecxz
dec
mov
movsb
loope
je
cmp
add
or
jmp
loopne
sti
add
inc
movsb
dec
out
adc
cmp
lahf
add
mov
cs
call
xor
or
sbb
xchg
adc
imul
aad
fs
int3
jae
inc
sbb
and
push
out
mov
push
loopne
dec
xchg
add
add
cmp
cmp
test
cmpb
mov
aas
dec
aad
jmp
cmpsb
cwtl
dec
mov
add
test
add
enter
lods
pop
pop
adc
or
and
mov
test
add
push
mov
and
ficompl
or
add
mov
adc
fsubrl
inc
clc
pop
inc
add
push
mov
adc
push
hlt
and
add
incw
jecxz
add
and
pop
lahf
add
cmpsl
aad
cmp
jp
sets
push
pop
add
inc
stos
add
add
xlat
mov
pop
in
add
add
xor
shrb
add
or
add
ljmp
add
cmp
rcrb
inc
push
jp
pop
incb
and
push
pop
fdivrs
divl
mov
subb
mov
and
shll
lret
sub
lahf
nop
adc
add
xchg
pop
mov
cmp
lock
pop
jnp
add
and
shl
sub
cmp
ret
push
call
or
push
loop
in
dec
add
sub
jns
push
pop
repnz
fwait
cmpsl
movsl
cmp
dec
push
and
adc
shrb
subb
push
dec
mov
rorl
and
dec
and
xor
jo
inc
loopne
dec
sub
pop
dec
jg
je
xchg
insb
add
adc
sub
mov
ljmp
mov
xor
ds
or
cmp
fwait
mov
inc
sub
add
add
push
push
xchg
add
mov
bound
jne
addr16
jb
popa
js
sbb
stc
lahf
fs
cmp
ljmp
out
adc
jl
push
faddl
shlb
push
cltd
push
inc
bound
lahf
jb
mov
adc
add
mov
xor
jo
add
sbb
add
inc
aam
add
shr
pop
and
je
push
xor
add
clc
rorb
sahf
push
inc
add
inc
xorb
sub
setge
cmpsl
arpl
sbb
or
cmpb
jp
sub
test
push
pop
push
adcb
and
mov
mov
imul
sub
cmp
add
rolb
stos
cmp
inc
pop
cmp
add
js
add
xchg
test
jle
jbe
lea
add
xor
mov
popf
and
mov
mov
sbb
cmp
push
orb
mov
jmp
xchg
lcall
pop
add
inc
push
jmp
cli
or
or
into
dec
and
jge
pop
clc
enter
nop
cmp
add
and
sbb
add
xor
adc
fsubs
pop
call
jmp
add
nop
loop
mov
pop
add
sub
pop
insl
pop
fwait
add
jnp
sbb
pop
cmpsl
hlt
icebp
dec
bound
or
inc
push
xchg
hlt
or
xor
jmp
jp
fmuls
inc
ds
lahf
andb
aaa
add
add
cmp
repz
mov
hlt
mov
sub
lret
pop
xor
inc
test
loopne
aaa
dec
add
add
push
jg
xor
sbb
pop
rolb
out
or
push
jne
add
xor
dec
lea
paddb
repnz
jmp
and
mov
push
lret
or
gs
sbb
lds
adc
xor
dec
addl
pusha
and
pop
cmp
xchg
loopne
loopne
adc
rcrb
or
call
push
pushf
add
push
or
xchg
jl
add
push
mov
cld
outsb
fdivs
add
inc
mov
pop
dec
mov
imul
jg
arpl
push
add
cmpsl
pop
add
push
popa
imul
dec
mov
or
mov
add
inc
in
or
and
add
sbb
int
daa
fstl
and
add
add
je
xlat
adc
scas
add
push
mov
add
pop
pusha
dec
pop
mov
add
call
xchg
addr16
cli
push
cmpsb
mov
lock
dec
nop
mov
xor
scas
sub
frstor
dec
and
stos
add
adc
cs
repnz
je
and
jae
push
insb
ds
cmp
cmp
jb
cmpb
syscall
add
xlat
pop
dec
add
and
dec
inc
out
xchg
add
faddl
sub
sbb
leave
addl
sub
sub
mov
xchg
insl
add
lahf
xchg
cmc
or
inc
jge
add
xchg
popa
inc
incb
outsb
add
and
inc
lods
mov
vmread
clc
rolb
mov
cmc
push
jno
in
inc
lret
mov
inc
sti
add
mov
and
cmp
mov
jo
lcall
inc
add
ret
or
mov
dec
and
pop
jno
cld
dec
add
pop
adc
packuswb
jp
add
push
test
xlat
add
inc
pop
sub
stos
imul
pmaxub
inc
arpl
sub
js
jns
add
push
xor
xor
lods
pop
pop
push
rorl
shr
pop
mov
movsb
xor
add
mov
jo
xchg
call
inc
sub
push
or
inc
repz
lea
add
pop
xor
mov
movsb
and
and
jmp
adc
lds
les
out
movsl
repz
sbb
mov
and
add
adc
push
add
cmp
sub
mull
add
mov
lret
aas
aam
orb
adc
fcmovne
jne
jmp
push
es
cld
sub
testl
fidivrs
ljmp
add
mov
aam
sub
add
push
jmp
add
add
clc
adc
and
push
ret
push
and
mov
call
mov
cmp
jmp
inc
les
ret
nop
adc
dec
in
or
fs
pop
dec
js
sub
dec
ds
sbb
add
cmpb
or
sub
pop
popa
lods
dec
cld
add
mov
xchg
cmp
test
jne
aad
aas
add
inc
mov
add
xchg
fstps
je
add
add
add
popf
adc
aaa
add
add
xchg
add
jne
xchg
cs
pop
sbb
jo
lahf
push
push
add
push
and
add
mov
sbb
and
xorb
cmp
in
add
or
push
adc
xor
push
hlt
inc
xor
jb
stc
add
dec
lock
add
add
ret
adc
push
or
adc
adc
jp
incl
jmp
push
or
push
scas
add
inc
inc
lret
cmc
inc
xchg
movsb
add
pop
out
push
outsb
push
inc
rclb
mov
enter
cmpsb
movsb
pop
jg
lods
add
cmp
addb
test
pop
sti
mov
jo
test
js
cmp
xlat
lcall
xor
sub
or
cld
add
sahf
scas
jae
jbe
push
xchg
add
daa
pop
sbb
mov
add
les
ror
cli
inc
cvttps2pi
cwtl
pusha
rolb
inc
pop
loope
out
daa
push
repnz
idiv
fsubrl
insb
xor
add
push
mov
sub
bnd
ljmp
sbb
jle
in
nop
insl
add
push
mov
js
add
out
inc
daa
enter
xsavec
push
sub
sbb
add
lret
lods
add
or
in
mov
xor
aaa
push
adc
add
and
push
cmp
pop
add
inc
fbld
dec
mov
adc
lcall
andb
rcr
and
jp
das
mov
add
pop
repnz
ljmp
divb
and
ret
cmc
roll
pushf
insb
add
mov
push
pop
add
sbb
push
outsb
test
loope
adc
sbb
dec
or
std
divl
cli
sti
cmc
mov
adc
stos
test
add
push
add
adc
jo
fld
xchg
dec
add
js
pop
sbb
les
movsl
mov
push
pop
dec
and
rcrl
pop
xor
inc
mov
cmp
lods
push
enter
daa
add
nop
roll
jmp
xor
je
inc
lock
mov
popf
xor
and
outsl
push
pop
pop
and
add
or
push
adc
xchg
sub
mov
add
mov
les
dec
inc
jnp
cmp
dec
jb
jne
pop
or
push
add
and
jb
imul
sbb
xor
arpl
sti
jne
fs
outsb
add
je
bound
imull
sahf
daa
movd
mov
cmp
add
imul
pusha
add
dec
inc
inc
fmulp
ja
push
cmp
sbb
inc
fdivrs
cmpb
je
jg
fidivrl
and
pop
leave
jge
mov
add
dec
mov
lea
repz
add
mov
add
sbb
sbb
dec
je
je
andl
jmp
mov
das
ret
add
adc
lret
add
mov
lock
sbb
add
adc
data16
xor
inc
aad
pop
loop
mov
inc
inc
sti
and
pusha
aam
sub
sbb
call
add
add
add
xchg
dec
cli
mov
mov
shr
mov
sbb
and
cwtl
jo
and
invlpg
jg
in
mov
xchg
lret
stos
lret
xor
pop
add
aaa
jl
mov
sub
or
sub
jno
mov
das
lret
add
and
shrb
sub
pop
and
repz
xchg
push
mov
add
cli
and
mov
inc
push
add
inc
fs
jp
in
movsl
add
push
add
mov
inc
jmp
push
mov
xchg
inc
xchg
fdivrs
adc
lret
loop
mov
mov
xchg
push
mov
in
add
inc
int3
inc
mov
cltd
or
jg
cld
add
adc
sbb
cwtl
ljmp
adc
cmp
inc
add
mov
push
inc
add
adc
dec
sub
lcall
out
lea
xchg
iret
add
lret
ds
push
mov
dec
add
enter
dec
cmp
or
mov
jmp
xchg
int3
adc
mov
lcall
or
xchg
int
cs
jmp
nop
or
fs
and
jae
xor
push
add
adc
xchg
add
and
les
add
outsl
dec
or
adc
cs
mov
jmp
ljmp
jns
addb
push
and
pop
sub
fcoml
add
cmp
jnp
pop
mov
adc
stos
lea
add
push
mov
or
or
jp
and
outsb
dec
xor
pop
xchg
daa
aad
adcb
out
add
or
xor
add
jl
xorl
lods
outsb
adc
stc
loop
lds
aaa
aam
test
or
jmp
dec
inc
loope
push
sub
and
sub
das
int
push
mov
adc
adc
cmp
lock
in
and
adc
mov
shrb
jmp
mov
cmp
sbbb
ss
ljmp
dec
test
push
test
add
jecxz
into
daa
cltd
push
push
mov
cmp
add
es
jp
push
int
sbb
enter
xor
cmp
xor
add
movsb
xchg
les
inc
xor
call
and
push
pop
add
xchg
mov
adc
lods
add
clc
notl
inc
pop
fisubrl
cmp
subl
fstps
add
jne
push
or
lea
incl
lret
sub
popa
add
aam
mov
les
or
xor
aaa
or
movsb
lahf
cmp
andb
ja
xor
sub
pop
pop
icebp
test
jnp
xor
pop
and
in
add
out
cmpsb
notb
cld
jo
add
movsl
xor
iret
or
enter
addb
cltd
aad
sbb
insl
push
adc
xlat
add
dec
mov
adc
push
call
add
into
repnz
mov
mov
push
add
pusha
ds
pop
subb
movsl
dec
adc
inc
cmp
mov
shll
mov
add
fs
lock
xor
aam
cwtl
sbb
lock
jle
dec
notb
cmp
xchg
lcall
and
mov
iret
pushf
add
rorb
scas
adc
sbb
xor
decl
test
ja
aam
inc
add
int3
add
inc
lods
mov
push
push
jo
mov
adc
sbb
mov
cmp
and
cmpl
add
xchg
and
in
sbb
add
xor
pop
sub
fistps
push
mov
shll
xchg
and
scas
incb
cltd
enter
add
sbb
jb
stc
xchg
add
jg
adc
in
sbb
sbb
dec
add
cmp
hlt
out
imul
jle
add
push
adc
xor
cmpsb
or
jbe
pushf
add
sbb
cmp
mov
mov
aad
cld
pop
cmp
pop
xchg
add
push
setp
ret
add
cmp
mov
mov
repnz
push
lea
popf
loope
xor
pop
pop
leave
add
adc
shl
pushf
add
data16
sbb
test
jb
insb
jmp
jbe
add
xchg
addb
xor
pop
clc
pop
jbe
jne
fdivs
add
lock
ja
decb
das
ret
jb
or
jmp
addb
jne
and
add
data16
adc
fisttpll
rcll
sub
add
mov
add
jmp
push
pop
jae
mov
loopne
add
mov
xchg
shll
lods
lock
add
mov
ret
push
add
out
jecxz
pop
dec
mov
push
clc
xlat
adc
inc
jmp
mov
and
lods
push
cli
sbb
pop
xchg
arpl
jne
adc
inc
pop
mov
gs
add
in
inc
push
pop
cmp
testb
adc
stos
cmp
lock
das
dec
and
and
imul
cmp
or
leave
or
sub
adc
cld
add
popa
mov
rclb
jp
push
adc
orb
sub
or
cmp
adc
rolb
mov
popa
call
pop
push
or
inc
add
fs
bound
inc
xor
jns
sub
js
add
rcrb
and
mov
movsb
mov
jbe
add
fs
or
sub
add
popf
dec
add
jo
xchg
fistl
add
aam
sbb
and
leave
cs
movsb
addb
xor
add
mov
xor
cmp
jne
mov
jp
jge
push
paddsw
ja
xor
add
jnp
sbb
pop
decl
jne
subb
push
add
insl
mov
cmp
jmp
dec
cld
shlb
dec
iret
cltd
or
push
nop
xorb
mov
push
mov
mov
incb
test
pop
stos
pusha
adc
ja
add
mov
add
mov
sti
je
add
push
jbe
stos
mov
adc
imul
inc
mov
fsub
or
mov
sbb
mov
and
push
pop
add
stos
push
subb
es
cs
xchg
hlt
outsl
push
sub
les
sbb
pop
test
je
testl
dec
std
mov
sbb
nop
aad
add
pop
or
push
aas
mov
push
add
sbb
xor
loopne
add
jecxz
scas
push
xorb
movb
dec
xchg
mov
adc
add
ror
pop
jg
test
inc
xlat
xchg
dec
gs
out
mov
xor
leave
adc
mov
fmull
mov
or
ja
xor
and
popf
push
add
dec
cmp
lea
jne
test
xor
cmp
movsb
add
and
add
cmc
inc
push
jmp
mov
mov
add
push
jbe
rolb
add
mov
cli
push
nop
and
sbb
fidivrl
push
sub
or
mov
dec
in
sub
cmp
pop
mov
pop
add
cmp
fnstenv
and
jp
add
push
sub
in
add
stos
jp
es
pop
xchg
cmp
dec
lahf
aaa
rol
loope
cmp
jno
loopne
or
push
jne
xchg
add
loopne
add
lret
and
rorl
xorl
pushf
ds
jbe
add
loop
mov
rorl
add
fiaddl
ret
fsubs
mov
add
cli
aas
jne
nop
fstpt
cld
inc
push
les
out
sub
jo
or
cmp
pop
sbb
fcoml
add
fs
outsl
ja
jl
mov
cmp
add
dec
daa
push
pop
push
dec
mov
and
pusha
push
sbb
iret
dec
add
xor
add
adc
lret
loopne
test
cmp
subb
or
arpl
out
movsl
sbb
pop
adcb
hlt
scas
jne
test
je
cs
clc
ljmp
fldl
out
hlt
push
push
pushf
add
mov
sub
das
in
shrb
aad
daa
add
stos
sbb
or
pop
cmp
and
add
sahf
idivw
pop
add
cmp
mov
add
or
lds
bound
push
xchg
push
rcrb
and
sbb
aaa
pop
pop
mov
cmpb
addr16
ljmp
jo
jne
popf
adc
mov
in
in
push
add
fldt
in
add
icebp
mov
lret
xchg
in
mov
adc
insb
add
pop
test
popa
popf
fidivs
add
icebp
push
sbb
and
dec
sbb
xor
mov
dec
cs
xor
cld
dec
add
lock
insl
addr16
add
dec
je
add
xor
adcl
outsl
pop
add
sub
mov
or
iret
xor
add
mov
add
call
xchg
mov
mov
add
jle
jns
cmpl
out
mov
add
push
add
mov
lock
call
rcll
or
xor
rol
or
daa
push
sub
add
cmp
stos
test
cs
or
jl
jo
jnp
jge
xacquire
sbb
sbb
mov
orl
mov
xor
add
and
add
ret
cmc
stos
add
nop
mov
pop
inc
jle
jae
pusha
cld
pop
pushf
push
mov
mov
outsl
mov
in
push
pop
sbb
cmp
adc
aaa
je
lahf
pusha
sub
adc
xor
sub
jecxz
dec
add
loop
add
jge
call
mov
enter
gs
push
mov
add
jne
pop
leavew
das
add
and
cli
add
test
jnp
sbb
clc
rol
sbb
xchg
inc
cmp
pop
and
pop
cltd
xor
mov
xchg
sbb
sub
add
jp
aam
dec
call
fildl
pop
nop
fdivrp
push
sub
icebp
ja
mov
dec
ret
lods
add
js
mov
cwtl
cmc
add
push
cltd
mov
mov
adc
ret
les
inc
fsubrs
or
add
pushf
imul
leave
test
xchg
loopne
mov
jne
arpl
mov
pop
pushf
das
adc
jg
clc
insl
pop
sbb
cmp
add
cmp
sub
push
aas
mov
adc
leave
dec
pop
add
inc
jae
push
cmp
push
movsl
push
sbb
or
push
hlt
es
inc
dec
dec
mov
mov
and
jge
pop
add
jno
je
or
ja
addl
mov
push
out
shlb
movb
jo
inc
aaa
dec
mov
adc
xchg
cmp
sar
in
vpshufd
mov
jmp
movsb
sbb
pushf
ja
or
or
jle
mov
push
xchg
adc
pop
scas
es
femms
cwtl
in
loopne
mov
fs
lock
and
sbb
adc
dec
mov
lds
idivb
lods
in
out
loopne
mov
test
push
ja
subb
fisttps
mov
xchg
add
sarl
lock
pop
cwtl
sbb
adc
sub
inc
xor
cmp
fwait
or
mov
push
outsl
jb
imul
fstpl
je
lahf
sbb
out
cmp
pop
inc
fs
popa
pop
outsb
sub
add
aas
outsl
insl
jp
add
imul
dec
shll
mov
sub
sbb
mov
add
outsb
pop
xchg
ja
mov
repz
mov
add
jb
mov
pop
shrb
and
mov
cmp
add
inc
movzwl
loop
loopne
and
pop
pop
add
push
sub
leave
dec
and
clc
xchg
imull
imul
fs
cmp
add
mov
adc
xlat
int
pop
in
cmp
cmp
push
sub
fisttpll
repnz
sub
and
jbe
cmc
xor
push
lock
pop
add
mov
lahf
ds
sbb
pop
push
test
xor
orb
jle
add
in
xlat
push
jge
jnp
adcb
cmc
in
faddl
ret
call
aas
idiv
mov
movb
addb
cmpb
dec
cltd
rcll
jae
jne
loopne
pop
call
lock
dec
adcb
push
or
xchg
rolb
xchg
pushf
je
add
mov
or
push
mov
loopne
mov
xor
movsl
ret
mov
lea
sub
idiv
sbb
loope
mov
cmp
push
mov
mov
sbb
jmp
add
inc
inc
or
cli
out
jne
cmpb
outsb
rdtsc
jg
and
sets
pop
add
shlb
push
les
movsl
flds
xchg
inc
faddl
add
rorb
aam
into
daa
add
xchg
adc
test
or
jle
add
rclb
jbe
add
jb
mov
js
xchg
out
in
nop
mov
inc
fwait
addr16
add
stos
cmc
or
cltd
sbb
test
sbb
mov
in
arpl
test
mov
hlt
inc
jne
jmp
mov
aam
dec
pushl
add
mov
pop
add
stos
icebp
cmpb
add
pop
sub
mov
hlt
sub
bound
mov
notb
int
add
fisttps
mov
push
add
jg
or
ja
add
xor
and
fcompl
sbb
xchg
enter
pop
call
icebp
imul
jns
loope
and
movsb
fistpll
push
cltd
push
loopne
cwtl
inc
push
addb
fdivs
mov
movhps
or
pop
mov
rol
add
adc
fwait
dec
in
inc
pop
sub
pop
jne
cmp
repz
lock
mov
adc
aas
add
mov
jne
in
inc
cmc
xor
xchg
xchg
add
sub
roll
imul
dec
addb
jp
mov
mov
aad
rcrb
popa
fs
add
fcompl
in
add
lock
cli
aas
push
jl
jmp
inc
notl
das
out
lock
stc
pop
push
add
or
add
cli
add
mov
jno
bound
incl
sbb
push
test
push
or
mov
call
push
lret
jp
push
fildl
popf
out
ds
add
testb
add
inc
adcb
or
fs
insb
pop
repnz
xor
lock
ljmp
outsb
mov
scas
add
stos
adc
lea
stc
mov
push
jl
add
adc
pop
sub
or
inc
cmp
inc
mov
push
mov
pusha
push
dec
push
jp
cmpb
add
roll
sbb
add
adc
add
pop
loope
aam
sahf
add
lahf
call
int3
add
orb
add
enter
orl
or
adc
or
cs
add
and
inc
nop
add
clc
lea
xchg
xor
or
leave
adc
xchg
or
xor
push
sbb
movsl
and
sub
jnp
add
mov
xor
jmp
mov
jnp
jge
add
pusha
test
jle
addr16
shl
lods
and
add
sbb
or
add
in
inc
push
jp
or
or
mov
add
pop
lock
insl
mov
add
mov
xchg
fadds
sub
add
push
cmp
out
jg
adc
cmp
add
push
fcompl
ficoms
jmp
cwtl
pop
mov
pop
pop
sub
push
rolb
push
hlt
loop
loopne
nop
insl
pop
jl
jp
push
push
nopl
sub
add
pop
gs
cmp
add
int3
adc
rep
lods
add
dec
stos
out
dec
push
inc
ss
imul
bound
pusha
int
sub
call
popa
and
xor
loop
pop
addb
sub
inc
dec
and
in
js
sub
xchg
pop
mov
and
lock
lret
pop
jl
push
or
mov
dec
mov
adc
push
or
and
xor
and
shl
lods
mov
mov
lret
push
add
cmc
sub
bnd
add
push
jb
andb
popa
arpl
imul
inc
outsb
push
movsb
xchg
sbb
xor
pop
sbb
imul
in
xor
xor
cmp
add
sub
outsb
add
jnp
aam
jo
jmp
xor
dec
fldt
cmpsl
les
push
add
sub
add
and
int3
xor
add
int
add
lods
add
push
ficoms
rorb
ret
push
nop
js
add
or
xchg
or
test
jo
testb
inc
pushf
jno
lea
dec
add
mov
jecxz
add
jmp
lea
repz
addb
sub
add
je
or
ljmp
dec
mov
and
sub
mov
ret
xor
fs
jns
add
cltd
in
add
push
inc
jns
xor
jg
nop
or
dec
mov
in
popa
es
pop
or
xor
sbb
sbb
dec
pop
jo
les
add
xchg
arpl
mov
lods
adcb
mov
ljmp
cmc
or
loopne
add
adc
add
pop
push
pop
push
ljmp
mov
jb
loop
inc
push
jp
addb
and
cli
or
cs
roll
push
dec
and
addb
inc
addr16
add
add
sbb
push
in
jne
adc
nop
mov
fcoms
inc
test
enter
inc
call
push
xchg
lods
xchg
dec
sbbb
push
mov
add
push
sub
or
xor
inc
sub
rcl
xor
xor
in
aas
add
xor
icebp
es
test
cmp
fld
and
xor
mov
xor
inc
push
outsb
imul
xor
and
rolb
hlt
push
xor
jo
cli
les
mov
jns
pop
push
or
or
cld
cwtl
add
push
jb
popa
outsb
jae
add
mov
jl
jnp
in
push
xchg
xor
popf
or
or
stos
add
pop
sbb
cmc
cld
movsl
add
test
xchg
inc
adcb
les
add
bnd
add
pop
sub
addb
test
mov
inc
lds
push
add
push
enter
add
stos
js
test
add
jp
add
xchg
shlb
movsb
cmp
dec
xchg
cmpl
jne
sbb
jp
dec
inc
xchg
sahf
lea
or
adc
jmp
iret
rolb
push
pop
and
xchg
mov
jmp
dec
inc
addps
dec
outsb
js
pop
mov
xchg
sub
add
and
push
add
adc
or
push
loope
std
rclb
xchg
mov
mov
sbb
dec
js
mov
cmp
add
mov
pop
adc
hlt
adc
incb
and
add
inc
jae
lock
cld
filds
je
mov
push
in
lret
mov
flds
sbb
pop
push
jg
jns
adc
add
mov
mov
das
mov
callw
test
adc
sbb
fiaddl
add
xor
andb
insl
cmp
jmp
cltd
jle
fildl
adcb
lahf
fisubl
stc
aam
sub
aad
movl
mov
in
sub
xchg
cmpsl
push
add
dec
mov
inc
adc
pop
pop
cmpsb
test
stos
jo
mov
sub
ret
add
out
push
push
inc
pusha
xlat
ret
lret
addl
mov
cmpsb
dec
fs
fwait
lar
stos
and
push
mov
ss
cmpsb
and
fnstenv
sub
addb
cvtpi2ps
ficomps
adc
stos
in
pop
fs
pop
sbb
sbb
cwtl
test
ret
daa
mov
dec
mov
add
pop
lea
cmpsl
add
push
jmp
pop
and
inc
inc
and
test
mov
enter
addr16
lea
sbb
push
add
rolb
pusha
rolb
mov
aam
or
in
mov
adc
xchg
mov
lds
mov
add
iret
lahf
hlt
int3
add
cli
xchg
shrb
sbb
sub
sub
ret
aad
enter
cmp
jae
outsb
adc
dec
mov
push
dec
loop
pop
cmp
adc
sar
andl
inc
jne
adc
add
and
mov
add
xchg
add
push
hlt
adc
fsubl
mov
cmpl
push
xchg
add
push
xchg
scas
add
pusha
or
jne
sbb
movsb
std
test
add
pop
mov
mov
mov
xchg
sahf
mov
and
pop
movsl
jmp
add
pop
rorl
add
or
inc
ss
add
jmp
movb
addr16
out
xchg
insl
hlt
inc
push
cld
fs
lahf
sub
pop
pop
cmovns
gs
push
adc
add
jo
sbb
push
add
pop
cmpl
mov
clc
mov
cmovnp
jl
in
loop
push
jne
mov
mov
sub
movsb
push
inc
mov
cwtl
or
xchg
fs
sub
add
lea
add
xchg
stc
loopne
push
movd
shrl
verr
xchg
clc
jnp
out
xor
inc
hlt
incb
push
sub
adc
outsl
add
cld
pop
loope
ja
mov
xchg
or
add
pop
push
pusha
jne
cld
mov
xor
add
and
out
mov
call
inc
dec
in
sbb
adc
jl
pop
ljmp
dec
mov
cwtl
lahf
or
adc
stos
add
movswl
iret
xchg
jg
loopne
lcall
cmp
pop
sarb
add
xor
jbe
and
pop
xchg
mov
and
inc
dec
add
xorl
or
mov
sub
add
andb
ret
aaa
jle
inc
cwtl
mov
inc
pop
xlat
dec
scas
push
inc
jo
push
jb
add
and
daa
xchg
or
je
jne
pop
and
sbb
xor
add
mov
inc
fwait
xlat
sub
jge
add
or
mov
fldt
sahf
add
fdivs
leave
scas
add
mulb
adc
adc
sub
out
add
mov
sti
jnp
das
add
push
xor
clc
and
rorb
or
roll
mov
inc
or
jp
add
pushl
sbb
neg
cmp
pop
ret
nop
ja
in
or
rolb
pop
in
or
ret
rclb
jbe
push
mov
jge
add
mov
cli
addl
or
mov
xor
sub
cli
ret
pop
pop
in
je
icebp
les
mov
add
jne
movb
roll
in
test
sbb
or
xor
cmp
scas
sub
push
ljmp
inc
add
jg
mov
jne
mov
loopne
inc
dec
cmp
hlt
xor
push
cs
lcall
jo
jmp
xor
mov
add
adc
je
das
cmp
jle
subw
dec
arpl
adc
sbb
jo
xchg
rorb
cmp
add
inc
xor
out
dec
test
sbb
pop
incb
invd
xor
loop
push
out
in
out
daa
jae
add
add
je
fcmovne
mov
inc
pop
add
daa
arpl
iret
inc
ja
clc
mov
or
xchg
jge
push
je
add
loop
ret
jg
and
cmp
mov
mov
std
dec
adc
jl
add
inc
jmp
add
mov
enter
les
cmp
push
dec
add
mov
adc
add
sub
mov
add
add
test
xchg
jp
pop
scas
pusha
and
adc
ja
add
push
and
lret
cmc
push
jo
pop
sbb
adc
rclb
push
sub
jb
add
pop
sbb
jle
add
mov
jmp
inc
add
cmpb
jbe
push
push
or
lahf
mov
mov
aas
dec
jb
fcmovb
ss
and
das
push
mov
adc
mov
addb
sub
arpl
pop
adc
stc
cs
jno
mov
push
popa
pop
lahf
fdivrl
and
loopne
push
mov
push
adc
and
dec
mov
sbb
xor
add
cmp
and
push
xchg
adcb
das
hlt
jne
aad
shlb
dec
and
inc
add
idivl
pop
rcl
rolb
jbe
cwtl
mov
stos
add
je,pn
pop
outsl
lods
std
dec
sub
pop
dec
jmp
cmpsb
sbb
pop
mov
shr
pusha
cltd
sub
cmp
sbb
mov
jne
cld
and
add
inc
popf
inc
lret
adcl
loope
add
add
mov
add
dec
jne
js
add
clc
cld
pusha
mov
xchg
cld
adc
lds
cld
add
sub
subl
jbe
add
repnz
push
ss
pop
mov
imul
push
xchg
pop
mov
push
repnz
mov
or
jae
sub
cld
scas
cwtl
push
sbb
add
pop
movl
push
add
jle
sub
loopne
xchg
scas
add
mov
enter
or
inc
add
sbb
push
repnz
xchg
sbb
ficoml
push
xchg
aad
sarb
mov
jno
add
and
out
sbb
jle
call
jnp
jbe
adcl
pop
cld
inc
dec
xchg
loopne
in
call
xor
push
mov
test
push
push
inc
sub
push
jg
adc
rolb
adc
aaa
jb
hlt
add
out
add
pusha
push
cmpsb
movsl
jle,pn
add
insb
movb
adc
sbb
and
jmp
ret
mov
movsb
mov
sbb
and
adcb
fadds
pop
mov
xchg
inc
add
adcl
lahf
enter
mov
popa
in
add
add
out
xchg
pusha
add
push
push
cmp
outsl
ret
cwtl
movb
mov
xchg
push
in
ljmp
pop
xchg
movsb
roll
or
mov
add
sub
dec
ret
cmc
cmp
cmp
addl
add
jne
in
movsl
jg
popa
cmp
std
orb
imul
decb
xor
addr16
js
cwtl
push
add
nop
sub
mov
call
addr16
repz
aas
xchg
loope
fiadds
adc
add
jae
test
xchg
out
lret
lahf
and
xchg
xor
mov
stc
add
push
scas
push
push
xchg
mov
cwtl
mov
jl
or
sbb
xlat
sbb
mov
cwtl
out
hlt
push
add
loop
xchg
adc
add
icebp
or
fildll
pop
push
adc
mov
sub
adc
cmpsl
repz
add
daa
adc
xchg
add
lret
mov
jmp
add
mov
add
rcrb
rcll
mov
cmp
cmp
push
push
repnz
push
adc
mov
mov
daa
cld
rcrb
push
data16
sbb
fmuls
push
mov
js
push
daa
add
xor
add
sti
push
adc
je
jno
mov
jmp
or
and
adc
mov
pop
clc
js
adc
shll
push
pop
jo
adc
dec
inc
dec
or
and
push
jae
cs
push
imul
es
add
jne
gs
les
add
fadd
or
jg
jbe
inc
jle
mov
enter
mov
loope
push
and
adc
jns
enter
daa
cmp
pop
inc
cld
xchg
fldl
and
cltd
jb
fistpl
add
xor
mov
xchg
repz
stos
loop
lcall
push
cmp
jle
add
dec
jnp
or
push
adcb
sub
dec
add
dec
and
push
dec
add
cmp
loop
aaa
xchg
add
clc
fldl
add
cmp
dec
cmp
loop
sub
mov
add
dec
in
mov
hlt
mov
std
xchg
push
inc
in
leave
add
sti
xor
idivb
dec
add
mov
out
movb
enter
ret
loopne
cmp
roll
cmc
mov
es
iret
lea
and
add
jg
into
adc
inc
ja
add
xchg
call
inc
push
in
fmuls
or
insl
sub
pop
fbld
jne
mov
test
sub
cmc
mov
pusha
outsl
sub
xor
jle
jns
das
pop
insb
popa
imul
mov
cmp
add
stos
xor
and
jmp
add
mov
in
lds
adcl
test
push
add
stos
iret
movlps
add
cmp
add
repz
push
mov
dec
loopne
or
inc
leave
outsb
push
mov
jb
add
mov
sub
outsl
dec
daa
add
xchg
mov
int3
sarb
pop
mov
mov
filds
and
xsave
inc
add
adc
cld
push
cld
dec
push
ss
rcr
les
popa
or
jo
fs
pop
lock
out
into
andb
or
add
andb
insb
push
add
mov
push
sbb
mov
cmp
mov
push
loopne
je
pmaddwd
dec
xchg
mov
scas
and
lcall
inc
daa
outsl
inc
jo
jns
add
scas
loope
pop
xor
and
jmp
idivl
xchg
add
add
mov
lea
mov
cmpsl
jge
add
std
fcomps
xor
pop
dec
stos
add
jp
add
mov
test
cmpl
add
inc
xchg
imul
adc
pushf
lea
cmp
popl
add
fildl
add
push
cmp
xchg
sbb
push
outsb
sub
and
add
negb
jbe
das
add
jns
loop
lahf
adc
pop
pop
in
sub
pop
fiaddl
imul
pop
add
sahf
pop
scas
and
cmp
mov
push
divb
xorl
roll
add
lea
mov
xchg
repnz
rcrb
pusha
sub
sbb
xor
sbb
and
sub
ss
repnz
add
jl
sbb
mov
push
cwtl
sub
sbbb
add
sbb
push
std
xor
in
cli
mov
mov
lock
add
pusha
jne
mov
and
fdivl
addl
adc
dec
in
adc
sti
addb
push
pusha
icebp
push
lds
mov
or
add
add
aas
mov
add
add
add
fdivp
js
sub
pop
sbb
in
ljmp
je
jmp
fistl
pop
imull
sub
jno
push
pop
add
and
adc
clc
idivb
dec
dec
inc
add
rorl
mov
divb
push
iret
mov
jnp
add
inc
movl
imul
pusha
push
push
add
mov
inc
orb
dec
sbb
popa
movlhps
and
sub
lahf
mov
movsb
repnz
dec
or
xchg
rcr
test
repz
push
xor
popf
dec
cmp
mov
xchg
adc
pop
stos
add
add
push
and
and
data16
insl
andb
add
pop
dec
push
xchg
rcrb
dec
mov
inc
mov
mov
enter
dec
xchg
verr
cmpl
sahf
or
and
lds
and
jns
add
jbe
sbb
and
mov
inc
enter
or
adc
aam
fsubs
xor
add
dec
pushf
fs
call
mov
in
lock
imul
call
xchg
add
inc
movsb
and
mov
jne
and
jo
sub
mov
popa
mov
shll
push
or
bound
imul
adc
or
fiaddl
nop
pop
mov
pusha
add
test
negb
sub
mov
fldl
fwait
mov
push
cwtl
imul
fildl
pop
bound
sarb
add
add
testb
jne
push
jns
cmp
adc
mov
mov
stos
into
cwtl
cltd
dec
iret
call
jge
gs
inc
pop
jns
or
insl
jno
imul
aas
addr16
and
xor
mov
mov
js
push
mov
loopne
sub
hlt
push
sbb
inc
in
wbinvd
call
cmpsb
ret
test
testb
push
dec
mov
ficomps
jmp
loop
add
add
and
pop
add
addr16
mov
adc
cmc
pop
and
inc
add
mov
jns
add
cmp
mov
add
jo
jo
movsl
data16
imul
push
xchg
call
adc
xchg
pop
adc
add
dec
stos
sub
sub
test
push
add
cmp
add
ds
sbb
lret
orb
jg
push
mov
lahf
call
mov
add
add
rolb
enter
adc
inc
aam
hlt
mov
push
movsb
mov
mov
insb
icebp
or
cmc
add
lea
mov
add
mov
mov
sbb
clc
jmp
shrb
cmpsl
pop
mov
out
loopne
cli
or
add
push
fs
push
lret
sti
es
cld
out
adc
arpl
gs
shll
mov
add
and
out
add
xor
gs
andb
jae
je
add
and
add
sahf
fwait
mov
jge
sar
nop
add
mov
jbe
shlb
adc
clc
mov
xchg
add
sbb
add
mov
mov
pop
sub
fs
xor
add
imul
pop
mov
pop
xor
mov
push
test
test
sub
enter
sbb
adc
add
inc
jo
insb
imul
fs
loopne
popf
icebp
add
pop
sti
loop
stos
incl
sbb
mov
and
push
dec
mov
or
and
add
add
test
and
ljmp
pop
fsubrs
and
push
out
or
pop
add
push
data16
ja
adc
and
frstor
rclb
and
je
push
add
dec
imul
nop
ss
mov
dec
mov
inc
push
bound
pop
sub
add
cs
xchg
inc
mov
xchg
rorb
loope
mov
je
jno
add
cmp
loope
lret
je
add
bound
fs
fisubs
in
arpl
addb
outsb
add
dec
gs
jne
push
jp
jnp
jl
push
add
xchg
push
mov
cltd
jae
ss
xchg
dec
pop
rcrb
js
mov
pushf
loop
inc
add
jmp
push
adc
mov
mov
lea
stos
stos
testl
outsb
popaw
push
insl
jle
cwtl
outsl
add
push
push
andl
out
add
sarb
adc
imul
jne
mov
adc
sub
push
mov
lahf
pop
test
and
in
add
mov
mov
mov
mov
stos
cltd
dec
jnp
cld
add
xor
pushf
push
or
add
enter
jne
fadds
xchg
into
dec
sub
dec
daa
sbb
notl
es
cmp
cld
or
inc
test
pop
dec
inc
sub
loopne
inc
push
sbb
lahf
pop
icebp
hlt
aam
loope
shlb
mov
jae
negb
push
add
hlt
add
add
callw
add
xor
push
ror
jmp
inc
andl
pop
das
adc
inc
pusha
mov
fwait
icebp
sbb
pop
and
add
call
push
sbb
xor
je
je
add
jnp
pop
cli
mov
adc
inc
adc
sub
mov
pop
push
mov
mov
subl
fnstsw
xchg
popa
add
repz
adc
add
gs
or
add
xor
arpl
int3
les
dec
add
sbb
xor
loopne
or
push
add
icebp
repnz
xchg
clc
lods
and
mov
fs
xor
add
cld
aam
adc
cpuid
lock
add
push
add
add
arpl
jne
or
dec
std
inc
sbb
add
jae
loopne
pop
popf
jno
pop
enter
add
add
not
pop
dec
inc
or
fwait
outsb
add
or
cmp
add
ficomps
inc
test
sar
stos
add
loop
cmovg
test
push
adc
add
push
add
jp
and
dec
or
inc
les
dec
add
jmp
inc
dec
jne
flds
inc
push
test
cmpsl
xchg
add
pop
aaa
adc
insb
and
add
scas
dec
add
mov
pusha
cwtl
sbb
add
jge
add
fdivs
pop
stos
cmpb
inc
sbb
call
and
lds
sub
jne
add
and
gs
add
rolb
add
xchg
rorl
jo
sub
add
adc
add
mov
outsl
cld
jl
mov
jle
inc
cmp
cmpb
test
lock
add
fldl
aaa
add
ret
add
clc
sub
fiaddl
dec
sbb
adc
addb
loope
scas
xchg
in
add
out
mov
sbb
add
cwtl
loop
xor
push
push
and
leave
rolb
or
push
sbb
jge
push
mov
dec
or
nop
fs
adc
mov
loop
mov
cmp
push
sarb
jbe
push
xor
adcb
ljmp
adc
and
sbb
clc
add
addb
rolb
jnp
add
xor
mov
jmp
jg
xchg
add
xor
adc
add
xor
adc
push
ret
cli
das
lds
xchg
or
add
lcall
dec
pop
cmpxchg
and
add
inc
sub
add
jae
fwait
rorb
mov
add
in
jne
adc
add
fiaddl
cli
mov
add
std
jge
insb
das
loop
push
movb
jmp
push
adc
testl
rclb
jbe
scas
add
mov
mov
sbb
rclb
xchg
cmp
cmp
lea
lcall
pop
call
sbb
push
stos
adc
punpckhdq
leave
add
or
pop
clc
stos
sbb
std
sub
pop
lock
lea
jo
or
fstpt
inc
pop
sbb
xchg
jmp
mov
sub
push
mov
push
pop
add
movsb
mov
xchg
push
sbb
cmp
jne
lods
jmp
lret
xchg
mov
or
sub
add
out
jmp
cmp
add
add
movsb
pop
cmp
mov
add
xchg
sub
sub
mov
pop
xor
jae
add
and
mov
jne
clc
sti
add
mov
es
add
inc
leave
test
sub
rorl
test
push
ss
decl
sbb
loop
inc
out
into
inc
clc
mov
add
imul
xor
add
in
inc
mov
mov
add
cli
sbb
cmp
and
fildll
xchg
adc
aad
sti
jno
push
and
enter
test
fiaddl
aad
fsub
dec
push
hlt
pop
popf
add
add
xlat
fmul
icebp
pop
data16
dec
sahf
add
lock
cmp
sub
test
pop
lahf
push
dec
add
movsl
std
adc
js
xchg
mov
icebp
xor
or
in
int
add
cmp
xchg
or
incl
cmp
sub
xlat
mov
add
adcl
jne
jns
cmp
adc
mov
andb
mov
lods
mov
jmp
aaa
add
sub
enter
adc
ja
sub
add
je
xchg
inc
add
xor
add
aam
or
insb
xchg
add
push
xchg
aas
mov
or
mov
insl
adc
es
sub
frstor
add
test
or
cmp
mov
xor
pop
cld
mov
dec
dec
test
imul
pop
bsf
jno
xchg
dec
scas
xor
nop
or
inc
fdivp
add
adc
add
dec
push
xchg
jl
movsl
popa
loopne
aaa
or
scas
lcall
sub
add
jmp
and
repz
xor
mov
cld
andb
pusha
mov
cmp
mov
sub
cmpsb
adc
cmp
push
mov
add
push
and
pop
ljmp
adc
flds
adc
aaa
push
sub
push
inc
sahf
int3
in
mov
mov
push
inc
lcall
hlt
movntps
call
imul
sbb
es
xor
call
sbb
inc
push
xor
mov
divl
add
or
addl
in
ret
popa
pop
cwtl
add
pop
mov
inc
push
mov
stc
jmp
jae
add
in
cmp
lcall
lock
jmp
add
add
adc
ljmp
hlt
jnp
cli
enter
add
std
into
add
push
or
and
rcll
sbb
nop
add
add
fiadds
imul
daa
inc
adc
add
inc
or
stos
and
add
dec
lcall
cmp
push
sbbb
and
add
or
std
cltd
push
adc
xlat
mov
test
push
sbb
mov
add
inc
mov
pcmpgtw
push
dec
test
jbe
add
lock
add
fs
xlat
pop
lea
fildll
sbb
rolb
add
add
addb
call
fimuls
pop
adc
inc
inc
adc
push
cltd
rolb
js
xor
das
fstl
add
pusha
sub
jb
and
cwtl
inc
out
push
nop
in
cmpsb
fildl
fmul
lds
add
aam
lcall
in
inc
push
add
jmp
sahf
sub
sub
add
or
pop
pop
add
push
pop
dec
pop
in
push
call
in
mov
push
aaa
add
insb
push
lret
push
xor
push
cltd
mov
jmp
test
cs
jmp
or
stos
dec
and
rolb
popa
sbb
icebp
stc
jns
or
jmp
std
add
add
inc
out
xor
hlt
popa
add
mov
cmp
pop
cld
addl
aaa
push
lock
in
lret
dec
mov
mov
outsl
mov
xchg
pop
push
mov
xor
xchg
and
add
leave
rcrb
pop
mov
adc
sub
pop
pop
or
add
mov
dec
sbb
dec
adc
cmp
outsl
mov
xchg
adc
add
sub
sahf
stos
in
push
add
das
sarb
add
imul
pop
add
add
pop
lods
xlat
call
sbb
mov
sbb
jae
inc
ja
push
add
add
jb
ljmp
xchg
addl
das
cmpsb
lea
push
add
push
mov
add
add
mov
je
arpl
add
pop
pop
cmpl
push
leave
push
mov
sbb
dec
or
adc
and
cmp
in
cmpsb
imul
add
jbe
incl
push
push
imulb
shll
or
lock
cmpsl
add
mov
sub
clc
pop
add
dec
push
popa
mov
mov
pop
aas
frstor
inc
aam
mov
icebp
fcoms
add
mov
lret
nop
pop
out
jmp
std
popa
add
repnz
add
mov
rclb
adc
xchg
push
cmp
jmp
sbb
pop
or
xor
inc
mov
loopne
pop
testb
std
xchg
cwtl
push
in
enter
in
or
bound
inc
mov
and
jno
out
mov
add
and
sarb
xchg
add
mov
adc
or
sbb
or
ja
sub
push
add
jl
test
mov
out
lods
add
fdivl
pop
sbbb
jno
test
cld
mov
add
sahf
add
dec
adc
lea
xlat
mov
cmp
add
mov
jns
add
sub
cmp
sbb
adc
jle
and
lahf
jae
and
test
mov
clc
cmc
maskmovq
notl
iret
or
mov
shr
add
xchg
ljmp
xorb
fiadds
push
inc
mov
mov
add
dec
cli
cmp
add
movsb
daa
mov
inc
inc
jne
out
add
leave
mov
add
test
cmp
jne
dec
mov
sbb
lock
lcall
lds
insb
push
lds
adc
sbb
mov
jne
sbb
jmp
fdivs
xorb
inc
aad
push
push
add
jmp
sub
inc
dec
jne
sbb
add
or
dec
sbbl
dec
lret
sub
xor
inc
pusha
cmp
cmp
fwait
add
jge
andl
mov
mov
cmpsl
push
xor
xchg
sbb
hlt
stc
popf
mov
mov
add
das
out
stos
fistpll
xchg
xchg
xor
add
jb
push
iret
dec
dec
fdivl
add
xchg
sub
jl
in
pop
notl
jmp
movsl
sbb
push
gs
nop
fwait
add
cmp
call
hlt
sbb
repz
adc
outsl
or
xor
cs
je
cmp
jne
fcoml
xor
pop
test
loop
xor
cld
out
call
sub
ficoms
add
push
rcll
or
cmp
mov
add
mov
sbb
ret
xchg
imul
xchg
cmc
cmpsl
sbb
add
insl
stos
or
pop
or
and
xchg
out
xor
sub
mov
mov
pop
js
sti
inc
lret
leave
shl
in
fldcw
loopne
dec
xor
push
fdivrl
add
push
in
sub
lock
sbb
pop
add
mov
mov
repz
les
loop
add
call
mov
ret
inc
mov
cmp
mov
jo
jge
outsb
sub
jg
into
add
fstl
push
add
je
nop
push
push
sbb
sub
aaa
mov
inc
mov
js
call
lods
xchg
and
and
adc
dec
xor
xchg
sbb
movb
fdivl
or
adc
add
adc
mov
add
mov
adc
add
in
jp
scas
repnz
mov
cltd
xorb
je
and
rcrb
mov
or
subb
adc
leave
pop
dec
sub
and
mov
pop
or
dec
cmp
xchg
cmp
xor
adc
pop
mov
push
cmp
nop
jbe
test
inc
or
push
xchg
and
pop
add
mov
cwtl
mov
sbb
mov
add
std
add
push
add
push
sbb
mov
sub
push
mov
add
dec
inc
call
ret
pop
pop
cmpb
int3
nop
fucomip
lods
shrb
jbe
add
int
popf
adcl
inc
jnp
loope
mov
aam
addps
ss
add
jg
arpl
xchg
addb
inc
call
dec
popf
fst
in
add
and
add
ret
add
cmp
lret
ss
imul
cli
pop
repz
das
out
int
push
mov
xchg
imul
push
jmp
xor
rclb
inc
mov
inc
lods
push
cmp
dec
mov
add
pop
adcb
inc
shrb
pop
inc
add
repnz
nop
scas
loopne
ret
or
dec
xor
mov
and
lcall
mov
inc
sti
cmp
repz
dec
push
or
inc
adc
add
sub
in
add
insl
inc
add
lods
cmp
rolb
xchg
or
push
enter
jmp
add
sub
pcmpeqb
ds
add
mov
jl
js
inc
hlt
xchg
adc
add
fdivrl
mov
pop
inc
pop
push
jp
add
notl
fiaddl
push
test
pop
loopne
jnp
into
cs
dec
cmpl
dec
add
cmp
or
bound
mov
add
push
inc
pop
add
dec
xchg
je
inc
pop
faddl
mov
adc
add
lahf
inc
js
cmpl
jge
aam
mov
rolb
mov
outsl
jns
mov
pushf
or
add
adc
sbb
sbb
lahf
xchg
push
push
cltd
aam
and
scas
add
fadd
and
mov
arpl
xchg
jns
scas
mov
ret
add
clc
xchg
push
lds
or
leave
push
cmpb
jbe
psllw
jo
pusha
cmp
add
add
jne,pt
mov
cld
test
sbbb
jmp
scas
sbb
mov
mov
sub
inc
push
ds
dec
scas
add
icebp
dec
lret
mov
xchg
lcall
cmpsb
mov
dec
add
xor
aam
in
sti
shll
mov
sub
bound
sbb
dec
js
ja
cmp
mov
jge
add
xchg
fisttpl
mov
push
inc
inc
mov
rcll
imul
lea
add
sbb
mov
xchg
lcall
inc
pushl
xor
test
iret
std
pop
call
add
push
push
push
mov
rcl
test
mov
or
inc
fsubl
scas
add
iret
cmpsl
pop
sub
push
adcl
repz
sbb
dec
add
ds
pop
jne
add
xchg
xor
movsb
imull
fisubl
jl
push
cmp
cmp
add
or
pop
mov
add
leave
vaddss
adc
mov
mov
inc
leave
aaa
dec
stos
add
add
pop
mov
jecxz
cmp
repz
add
pop
xor
shl
add
lods
cs
mov
sub
jl
adc
jle
ljmp
addb
mov
xchg
adc
adc
mov
das
fnstenv
ret
cmp
xchg
mov
jb
adc
mov
movsb
stos
jl
add
xchg
push
or
loope
add
in
rolb
push
push
adc
add
lret
add
push
gs
jo
dec
add
cmp
add
repnz
inc
adcb
or
and
es
or
jbe
aas
xor
roll
push
mov
lock
or
rcrl
int
jecxz
mov
nop
leave
add
mov
xchg
test
aas
out
cld
andb
nop
mov
mov
lock
push
or
sub
lock
in
nop
cmpsl
ret
out
jne
je
jns
add
aam
sub
pop
xchg
iret
add
icebp
mov
sub
mov
and
dec
add
push
int3
add
cmp
push
dec
cltd
jl
xor
out
imul
add
cs
in
repnz
add
pop
mov
sub
mov
pop
mov
xor
inc
mov
add
lret
testb
mov
dec
hlt
or
or
push
push
subb
add
lret
xchg
add
lds
jae
aam
mov
iret
add
push
ja
xchg
push
rorb
pop
pusha
push
xor
jl
filds
fmuls
sub
sbb
ficoms
add
or
aam
pop
and
pusha
lods
push
es
add
rcr
add
sub
and
cmp
push
jne
rcl
call
and
sarb
add
xor
add
fldl
add
sbb
aaa
xchg
jns
push
xor
push
or
or
xchg
mov
push
pushl
inc
shrl
leave
sbb
push
add
push
push
add
dec
pop
dec
aas
out
inc
repz
loop
xchg
sahf
or
mov
sub
xchg
ljmp
dec
pop
adc
shr
test
push
ss
int3
pop
mov
sbb
jmp
inc
pusha
arpl
push
add
dec
adc
add
imul
sbb
inc
repnz
xorl
rolb
lret
pop
sbb
pop
xor
push
ficoml
add
mov
addl
add
push
addb
xchg
popf
lods
bound
mov
dec
dec
repnz
cmp
xchg
nop
mov
sbb
enter
arpl
sub
leave
lcall
cmpsl
jle
fcompl
mov
jg
cmp
and
cs
push
add
rol
aam
loop
hlt
mov
sbb
shlb
add
push
jo
add
push
sub
add
xlat
push
mov
pop
xchg
jnp
or
cmp
sub
xchg
ror
nop
jle
out
sbb
lcall
outsl
inc
push
add
test
rolb
xor
xlat
testl
add
xor
adc
and
jne
sbb
or
cmp
aad
add
mov
xor
gs
shl
jno
andb
es
clc
rcrl
add
add
bound
dec
rcrl
xchg
push
inc
les
xchg
and
sub
sbb
mov
mov
add
cs
sbb
xchg
cmp
sub
loopne
add
clc
mov
jl
add
jb
dec
jbe
addb
cmp
inc
push
and
icebp
fildl
out
jno
loopne
cmc
add
adc
add
mov
sbb
sub
add
jbe
add
jmp
mov
sbbb
add
neg
adc
pop
dec
inc
add
rolb
mov
jo
out
add
xor
add
icebp
addr16
push
fists
testb
sub
dec
cmp
adcb
jle
rolb
xlat
add
int3
pop
enter
dec
add
xsha256
cmpsb
xchg
add
cmc
nop
mov
push
mov
mov
loope
jbe
into
movl
mov
icebp
add
add
mov
cs
add
xchg
add
hlt
cmp
pop
rorl
inc
jmp
std
in
js
loopne
push
in
mov
or
aaa
sub
jp
repz
inc
int
adc
nop
leave
add
sub
sbb
jae
leave
jnp
icebp
cmp
mov
fildl
out
loop
rclb
mov
cwtl
nop
fs
mov
push
or
ret
in
pop
mov
inc
mov
add
xchg
add
js
add
ljmp
xor
pop
adc
mov
xchg
push
rorl
add
add
pop
sub
enter
ljmp
aam
out
sar
and
in
mov
push
mov
add
enter
push
lods
loope
push
add
push
jmp
xchg
fiadds
ret
mov
fcomp
test
pop
repz
aam
mov
scas
or
fldcw
adc
push
int3
aas
mov
or
add
out
sub
rclb
mov
stos
push
add
roll
arpl
fcomp
adc
pop
or
sbb
push
inc
add
cmp
jl
add
xor
incl
jne
js
add
mov
lea
pop
addb
stos
xor
mov
add
xor
inc
sub
add
stos
loope
leave
aam
movb
or
mov
sbb
jle
add
dec
sbb
push
sub
jne
subb
push
jmp
test
call
jnp
lcall
sbb
scas
add
or
mov
cwtl
xchg
mov
xor
add
test
pusha
add
jle
xor
sbb
aad
pop
psubsb
xchg
add
test
out
add
pusha
push
add
nop
popf
xlat
stos
mov
add
and
mov
adc
push
add
dec
std
in
adc
sbb
stc
pop
or
xor
sbb
clc
adc
add
push
add
add
mov
outsl
les
add
outsb
inc
push
ss
es
push
int3
filds
lds
xchg
repnz
mov
and
mov
clc
nop
sbb
xor
pop
rolb
pusha
cld
icebp
jl
cwtl
das
es
xchg
push
in
hlt
iret
popf
add
add
roll
fstl
repz
mov
pop
orl
add
inc
cmp
scas
add
inc
xorb
in
or
ss
fisttpll
dec
adc
lret
loopne
push
xchg
loop
add
das
jae
sbb
sub
imul
call
add
inc
mov
insb
dec
rorl
add
add
int3
notl
push
arpl
push
clc
add
adc
add
stos
or
pop
push
mov
push
or
rorb
inc
icebp
xchg
punpckhwd
imul
adc
addl
or
outsb
pop
sub
mov
adc
imul
scas
repz
push
movb
movsb
xchg
lsl
inc
or
push
push
jle
test
addr16
pop
fsubs
les
push
xchg
add
or
add
testl
incb
jle
or
add
inc
push
adc
add
adc
add
movb
pop
push
jle
sbb
add
jae
add
cmc
adc
or
inc
scas
ljmp
lock
or
push
jle
shlb
add
lds
je
push
fildl
mov
orb
and
roll
pop
xchg
rol
loope
in
loop
rsqrtps
add
out
sbb
sub
cmp
cmpb
and
clc
jle
add
fistpll
fcomp
add
loope
addl
in
dec
add
add
loopne
ret
xchg
add
lea
push
mov
mov
mov
lock
sub
lret
mov
add
mov
mov
add
clc
hlt
shlw
pop
inc
adc
dec
loopne
and
add
repnz
pop
add
or
inc
cmpb
mov
sahf
or
mov
or
sbb
jp
add
cmp
mov
nop
fiadds
call
cmp
test
xchg
ja
sbb
add
sub
add
mov
popl
aad
mov
push
add
inc
ror
mov
push
xor
andb
mul
add
pop
sbb
add
xor
not
jle
sbb
lock
add
cli
xor
mov
mov
xchg
call
pop
jmp
cwtl
xchg
jg
cmp
cli
in
nop
jecxz
xor
inc
adc
les
mov
repnz
push
inc
sar
jp
cmp
adc
repz
into
jns
pop
scas
xor
rorl
push
add
daa
decb
enter
mov
push
add
int3
sbb
testb
hlt
js
fbld
pop
in
aaa
and
add
push
inc
sbb
push
clc
xor
or
leave
je
js
add
cmpl
jmp
inc
xchg
out
push
jne
add
or
pop
pop
cmc
mov
loopne
shlb
fmuls
mov
jp
add
xchg
mov
pop
pop
or
into
sub
les
mov
mov
add
lods
mov
hlt
js
sub
add
add
shlb
ret
inc
sub
and
add
or
or
int3
xor
jno
leave
lret
jg
jae
dec
pop
jecxz
add
in
pop
dec
push
add
scas
xor
or
cmp
cmp
pop
push
or
pop
xor
pusha
aaa
add
les
sti
pop
or
dec
out
push
pop
push
and
arpl
mov
shl
pop
add
xchg
nop
enter
lcall
pusha
je
stos
add
adc
xor
mov
lea
add
out
inc
add
mov
scas
push
sbb
or
pop
incb
or
jnp
adc
add
pop
push
mov
loopne
iret
decl
jmp
sarb
or
or
cmpb
cs
cmp
out
iret
sbb
xchg
add
sbb
test
mov
xlat
xchg
jge
add
icebp
in
jno
add
pop
std
cmpb
mov
mov
add
mov
mov
add
fwait
rcl
push
jle
mov
mov
inc
lods
lods
ds
add
jb
or
std
into
mov
pop
add
cld
in
ret
setbe
mov
loopne
pusha
xchg
add
sub
cwtl
add
not
leave
lock
std
add
mov
into
aad
add
mov
gs
xorb
rorb
add
addl
aas
and
pop
cmp
add
sarb
pop
fidivrl
test
mov
sbb
cld
mov
ss
test
and
aad
inc
sti
decl
test
mov
dec
repz
mov
lds
mov
pop
mov
add
cltd
lret
call
out
and
dec
mov
fildl
adc
mov
faddp
jmp
pop
xchg
movsb
lea
gs
xor
and
push
fildl
push
mov
mov
add
adc
dec
faddl
enter
add
or
add
mov
call
lret
cmp
mov
add
dec
adc
inc
inc
lock
push
add
xor
add
int3
sbb
js
lods
push
inc
sbb
cmpl
subb
adc
sub
inc
cli
adc
add
cmp
popa
pop
pop
test
sub
pop
mov
cld
addb
jo
cmpsl
add
adc
adc
and
lret
lods
loopne
add
fistpll
xor
sbb
or
cmp
orb
xorb
push
icebp
les
adc
or
sub
fcomip
shl
cmp
sub
add
test
jl
es
xor
add
lea
and
rclb
nop
dec
jge
pop
pusha
test
add
in
movsl
add
lcall
cmpl
dec
add
mov
ljmp
or
aam
xchg
inc
or
es
add
shrb
into
movsl
repnz
pop
jp
lock
pop
push
jmp
or
xor
pop
jb
add
divl
fsubr
stos
add
pop
add
xlat
jg
nop
sysret
push
or
cli
dec
add
scas
or
or
int
adcl
mov
add
and
lahf
pop
and
add
pop
jae
pop
xor
add
xor
mov
xor
insl
leave
das
subl
add
push
lods
out
mov
push
or
add
xchg
ljmp
xchg
std
lods
xor
scas
add
mov
mov
lock
mov
or
add
out
adc
ljmp
scas
mov
jne
add
in
fcompl
sahf
mov
popf
sub
and
pop
push
add
sbb
or
ds
leave
hlt
cmp
pop
inc
sub
add
and
nop
cld
daa
pop
cld
gs
jmp
mov
pop
mov
cwtl
loop
call
call
and
xchg
and
pop
lds
mov
mov
jo
add
or
mov
popa
add
add
add
nop
es
sub
mov
add
stos
imul
xor
rclb
jne
push
repnz
fiaddl
mov
or
and
or
subb
movsl
xor
push
fwait
add
pop
daa
imul
loope
cmp
push
pop
data16
adc
push
add
adc
or
fdivr
ss
movaps
add
scas
aaa
clc
in
xchg
add
sub
or
lock
jg
push
adc
jns
add
inc
sbb
add
dec
and
mov
pop
sub
adc
push
mov
inc
or
add
jo
dec
inc
push
sub
and
inc
sub
sahf
clc
jo
ds
nop
mov
push
pop
into
push
add
daa
lcall
mov
add
inc
clc
and
gs
xor
addl
push
push
repz
ja
dec
xor
imul
out
nop
pop
loop
add
pop
and
call
cmpsb
idivb
ja
add
xchg
lods
sub
out
or
ja
adc
pop
fs
lods
xor
pop
push
mov
cmp
sub
lds
lret
pop
fwait
push
jns
iret
add
popf
icebp
add
sbb
dec
add
xorl
vpmaddwd
jb
or
cmpsb
mov
fldt
mov
cmp
pop
sub
push
cld
push
xor
inc
sbb
sub
lock
imull
adc
xor
and
add
out
pop
jbe
pop
or
push
xor
ds
dec
sbb
add
xor
add
es
icebp
push
pusha
adc
pop
pusha
lock
sbb
mov
rcl
pop
addr16
jo
add
jns
dec
push
push
mov
xor
loopne
mov
push
mov
or
addb
das
inc
sbb
test
push
push
dec
mov
sbb
push
sahf
dec
add
pop
dec
xchg
cld
add
pop
or
popl
in
add
push
add
insb
dec
test
inc
push
loop
jbe
add
jns
mov
sub
add
xor
cmc
inc
push
add
test
xchg
add
cmpsl
loop
in
adc
insb
add
or
rolb
dec
inc
dec
add
movl
addr16
cmpsb
loop
mov
into
outsl
mov
cli
rol
mov
imul
adc
mov
push
mov
mov
sub
and
add
lcall
in
add
inc
add
nop
sub
add
push
addl
js
mov
lahf
push
movsb
sbb
add
rcl
xchg
ret
jmp
mov
and
cwtl
and
inc
mov
lea
mov
jecxz
sbb
mov
xor
not
push
inc
fdiv
call
adc
and
fldt
pop
push
gs
filds
jnp
jp
sbb
add
inc
popf
sbb
leave
pop
pop
add
mov
lret
mov
mov
fadds
add
loopne
dec
insb
mov
adc
mov
inc
pop
in
scas
mov
loop
adc
aam
stos
add
test
xorb
push
pavgw
es
or
je
lods
xor
cli
clc
mov
add
repnz
popf
cmp
add
mov
pop
rolb
dec
mov
adc
and
inc
add
mov
push
jg
imul
in
add
and
fcoml
add
loop
push
add
mov
sub
pop
aaa
mov
outsl
andl
jle
push
and
inc
cmpsb
jnp
mov
mov
mov
orb
pop
xor
pop
icebp
add
cmp
mov
dec
dec
xchg
cs
and
add
test
dec
mov
fwait
dec
add
leave
stos
mov
adc
je
dec
sub
cli
mov
jmp
lock
in
pop
bound
sub
inc
pop
pop
pop
fs
inc
or
pop
js
add
rclb
jp
add
cmp
add
arpl
add
es
add
xchg
loop
add
mov
jl
aas
insb
jl
bound
dec
sbb
sub
lds
movb
clc
add
jnp
mov
push
loopne
push
add
enter
mov
dec
mov
mov
repnz
out
cli
push
jne
ret
imul
test
imul
push
add
push
pop
out
and
push
ja
dec
dec
shlb
mov
xchg
sbb
pop
aam
push
mov
add
je
test
int
cltd
add
adc
imul
loope
lock
outsl
addl
out
xchg
cmp
and
push
inc
mov
lret
adc
jl
add
mov
mov
bound
out
lods
add
add
test
aad
add
mov
femms
arpl
inc
push
aas
adc
push
add
sub
and
adc
pop
sbb
leave
add
fldl
add
cmp
stos
push
fidivl
push
lea
sbb
pop
incl
lock
add
adc
stos
loopne
insb
xchg
dec
xchg
ljmp
sbb
push
add
add
dec
rorb
add
or
sub
stos
aas
add
cwtl
jnp
pop
iret
imul
xchg
daa
stc
xchg
add
enter
sub
dec
jp
add
fiaddl
pop
fcomps
mov
xchg
in
inc
ljmp
add
and
xchg
add
call
sarb
lea
shrb
jg
ljmp
push
xchg
pop
ret
shr
in
pop
dec
jae
xchg
or
push
aaa
add
lods
mov
mov
dec
pop
cs
out
repnz
add
outsb
icebp
pop
adc
adc
add
in
inc
mov
xor
pusha
mov
lea
aas
xbegin
fsubrs
and
mov
pop
cmc
xor
repz
dec
stos
mov
inc
pop
loopne
add
shr
and
mov
ret
pop
mov
jge
je
xor
xor
add
xchg
test
cmp
sub
movl
and
add
add
lahf
cmp
aas
addb
sarb
out
add
dec
mov
dec
or
add
pop
mov
add
xor
xor
push
xorl
fsubs
hlt
add
inc
push
cld
fmuls
les
inc
fisttpl
adc
inc
add
int3
sub
add
mov
clc
xchg
pop
xor
enter
fiadds
cmovle
add
int3
fadds
dec
pop
lock
push
add
es
loope
inc
jl
or
adc
add
mov
into
je
sarb
jg
mov
int3
cli
mov
pop
lahf
inc
add
loop
flds
or
push
test
fadds
push
add
xlat
xorl
inc
mov
leave
out
add
xor
xorps
rcr
mov
add
out
push
loope
add
aaa
add
leave
add
xlat
xor
adc
ret
mov
aam
int3
push
cwtl
xchg
push
andb
andl
mov
sbb
shl
and
stos
rolb
sti
pop
pop
add
jge
mov
push
adc
xchg
lret
mov
lods
jle
add
push
sbb
push
out
lock
mov
mov
mov
xchg
jno
mov
xor
sar
es
mov
add
psllw
fildll
xor
test
out
add
jg
xorb
or
cmc
mov
dec
nop
add
rcl
push
lea
xchg
pusha
jo
xor
rcrb
inc
dec
push
aaa
add
add
sub
xchg
pop
idivb
add
enter
push
popa
add
sub
ret
jge
ficoml
mov
push
hlt
push
add
push
mov
bswap
fs
mov
cmp
repz
not
jb
in
int
jnp
xchg
xchg
or
leave
shlb
shlb
pop
mov
repz
push
into
push
sbb
mov
mov
je
dec
adc
add
pop
jo
push
mov
add
and
jmp
jle
add
loop
cmpsl
pop
mov
sbb
cli
flds
and
or
mov
add
dec
add
inc
into
repnz
jbe
push
pop
push
sub
sub
shll
scas
jne
add
lea
add
xor
mov
jmp
adc
xchg
fs
mov
or
addb
or
push
cs
jns
lea
push
and
inc
inc
cmp
mov
daa
insb
sarl
add
or
add
es
data16
lahf
or
xor
push
add
js
rcrl
out
pop
jb
pop
jl
cmp
jmp
and
push
and
in
push
pusha
xor
adc
lds
pop
addb
push
push
mov
out
or
invd
cmp
inc
add
or
fldl
rcll
pusha
add
mov
shlb
mov
repz
dec
mov
roll
imul
sbb
dec
sbb
ds
inc
pop
inc
add
lea
nop
adc
add
lret
pop
test
cmpb
sub
fstl
clc
xor
cmpsl
pop
sahf
and
loopne
inc
jl
cld
sbb
in
les
and
jmp
add
addl
loop
add
xchg
insb
inc
or
addb
jae
mov
subb
sub
std
adc
inc
lea
jl
jae
les
xchg
stc
adc
das
call
leave
sbb
sub
sub
add
in
jl
jmp
push
cmp
inc
imul
or
pop
sub
dec
and
loopne
jp
mov
add
inc
pop
cmc
and
inc
cmp
fcoml
shl
test
pop
andb
cld
cltd
dec
add
pop
incb
mov
add
and
daa
das
dec
pusha
push
add
ja
les
mov
enter
push
pop
xchg
or
pop
cltd
pop
out
pop
nop
mov
xchg
test
cmpb
xchg
icebp
jp
mov
addb
rorb
adc
ds
nop
and
push
inc
ss
jbe
ljmp
fldenv
imul
roll
pop
or
daa
mov
sbb
push
pop
loopne
add
xchg
scas
or
jmp
mov
jge
add
jae
shr
ret
inc
imul
das
dec
xchg
adc
mov
and
out
imul
sub
dec
inc
xchg
cmpsb
add
shl
add
xchg
add
aad
mov
add
fdivl
add
inc
in
jo
sub
aam
loope
inc
push
xchg
pop
and
rorl
jge
cmpsl
test
sub
sbb
and
cwtl
orb
fldt
leave
add
dec
fxch
mov
in
dec
xor
mov
or
cltd
movsb
add
data16
jae
int3
xor
popf
and
filds
lea
mov
inc
shlb
mov
pusha
loopne
xchg
adc
sub
das
stc
cmp
cmp
bound
add
aas
fmuls
add
scas
or
adc
bound
int
pop
pushl
inc
add
xchg
dec
add
push
push
add
jp
xor
cmc
scas
movd
pushf
repnz
aas
bound
testb
clc
lds
movsb
mov
inc
hlt
inc
lahf
cmpsl
pop
cmp
call
add
jmp
cld
and
dec
nop
or
push
mov
loopne
xchg
mov
pop
jp
add
insb
movsl
jp
adc
dec
xchg
in
push
push
xchg
add
daa
daa
test
jae
enter
fcmove
nop
sbb
push
mov
iret
add
int
leave
cmc
mov
add
mov
sbb
push
xchg
dec
jne
rclb
sub
mov
out
mov
sub
xchg
lea
cmp
fidivs
add
add
data16
mov
adcl
rcl
das
add
cmp
jmp
and
add
imul
sub
mov
or
pop
add
cwtl
xchg
loopne
in
in
dec
fiadds
mov
addr16
lock
repnz
lret
loopne
dec
dec
adc
fidivl
and
add
mov
imul
xlat
sbb
test
scas
add
adc
orb
incb
loopne
pop
inc
adc
sub
jno
lock
outsb
in
popa
mov
xorb
aaa
add
mov
add
enter
pop
or
popa
or
push
jmp
cmp
jo
dec
xor
add
rcll
das
fldenv
add
jne
mov
mov
dec
or
loopne
call
jge
dec
push
rolb
pop
add
pop
jl
pop
in
xchg
add
pop
ja
mov
inc
aam
pop
push
loopne
add
imul
pushf
decb
cmc
cmp
adc
sub
add
dec
cwtl
dec
lds
mov
xlat
rcrl
iret
pusha
mov
adc
mov
loope
sbb
jb
outsl
add
add
add
xor
cmp
mov
or
push
cmpsl
add
mov
aam
add
mov
stos
push
pop
push
fcmovnb
shrb
dec
xchg
or
push
adc
andl
jae
add
lea
test
orb
adc
aam
add
inc
fisubl
and
jnp
stos
and
lret
jle
add
cmpsb
nop
mov
mov
mov
stos
push
inc
rolb
push
add
lret
cmp
add
rolb
sub
add
pop
icebp
movsb
aaa
sub
cmp
xchg
push
filds
mov
add
pop
fisubl
add
pop
mov
cmp
pop
xor
std
cmp
add
scas
add
xchg
pop
ret
sbb
sub
or
add
push
and
aas
mov
std
xchg
mov
sbb
and
or
rcrl
dec
js
subb
jnp
jno
xchg
cmp
xchg
xlat
add
sub
int3
push
lds
jo
mov
test
add
add
les
inc
sarb
in
sub
scas
js
mov
pusha
inc
xchg
mov
sub
mov
aas
add
adc
xchg
cmp
fadds
push
movsb
mov
test
ljmp
pop
add
xorb
inc
fadds
and
jecxz
lods
xchg
push
aad
jo
mov
std
lock
xchg
data16
push
repnz
add
push
cmp
jb
sbb
sbb
adc
jo
mov
xor
sub
aaa
adc
jae
mov
or
pop
fistl
lock
rorb
call
repz
fwait
mov
leave
popf
adc
xchg
out
ja
add
test
test
hlt
iretw
add
add
sub
cmp
sub
push
dec
sti
repnz
xcrypt-ofb
cmpsl
sub
pop
cmp
inc
pop
dec
subb
add
cmpb
adc
add
push
mov
insl
mov
pusha
mov
out
adc
adc
cmp
inc
testb
jmp
dec
push
sub
pop
lahf
xor
mov
xor
not
loopne
repz
add
cmp
push
mov
pop
jno
add
js
cmc
add
pop
shlb
jmp
cmpsl
add
pop
mov
lods
addl
imull
or
loop
jge
cmp
pop
subl
inc
ret
mov
xchg
add
push
mov
or
add
inc
sub
add
ret
sbb
or
adc
xor
clc
ja
orb
push
fistl
pusha
jp
push
shl
popf
add
add
push
push
cmp
xchg
mov
addl
in
mov
add
aam
and
and
cli
push
pop
jno
pop
outsb
or
inc
mov
test
add
jne
mov
add
cmp
mov
or
arpl
pop
mov
mov
cmp
insb
addb
fsubrs
clc
add
xchg
adc
shlb
adc
push
cmp
je
mov
pop
or
movsb
nop
add
add
mov
jl
jbe
add
cmp
add
aas
adc
pop
add
and
dec
cmpsb
pop
pusha
js
add
mov
decl
ret
mov
test
imul
jmp
outsb
hlt
call
clc
stos
js
cwtl
dec
pop
xor
divb
ljmp
mov
loop
add
mov
pushl
lock
adc
add
sbb
cld
fdivl
jo
call
and
es
aam
lods
int3
mov
push
insb
out
xor
mov
enter
mov
lea
push
or
pop
xchg
rorb
push
mov
cmp
clc
xchg
adc
add
or
hlt
adc
lret
dec
or
je
pop
decb
ljmp
add
or
mov
add
flds
gs
adc
adcl
int
rcr
cs
sbb
mov
jmp
mov
xor
dec
push
mov
aas
cmp
pop
mov
in
push
lret
or
aad
call
ljmp
cmpsl
add
hlt
mov
add
mov
icebp
mov
push
pop
dec
xor
scas
and
and
dec
stc
iret
dec
pop
pusha
test
add
pop
in
dec
leave
mov
jge
pop
pushf
hlt
jnp
roll
add
popf
fcoms
addb
mov
push
cltd
loopne
push
sahf
add
xchg
jp
pop
push
pop
cwtl
pop
test
or
adc
push
aam
fstpt
in
cmpl
insb
sbb
aas
adc
add
xor
add
and
test
sbb
inc
add
lea
dec
jne
lds
cmp
add
daa
aas
rcrb
cmp
inc
pop
push
neg
jne
jl
add
adc
rorb
jae
lcall
aas
add
adc
push
and
xlat
mov
movsb
mov
cmp
sbb
pop
imul
and
xchg
add
pop
loopne
add
inc
cmp
pop
mov
sbbl
xor
repnz
add
stos
inc
sub
stc
jp
nop
xchg
sub
pop
inc
xchg
pop
je
nop
pop
dec
movsb
aad
sbbb
mov
mov
mov
lret
cmp
sarl
clc
cltd
iret
pmulhuw
fsubrp
add
pop
or
popa
fnstenv
xlat
pop
shlb
stos
out
xchg
pop
nop
and
mov
sub
sub
fidivrs
fstpt
pusha
int3
call
adc
ljmp
adc
or
cmpsl
sbb
and
mov
addb
gs
add
dec
jns
mov
mov
fnstsw
inc
pop
jae
jge
mov
push
sar
cmp
sti
mov
imul
repnz
mov
add
pop
lea
sbb
inc
ja
add
pop
fsts
push
add
jnp
scas
das
sub
nop
pop
lahf
add
fnstsw
insb
add
faddp
and
aam
jp
xchg
jge
push
movl
in
or
xchg
sub
jle
pop
dec
pop
subb
xchg
inc
add
repz
lds
add
aad
js
add
mov
dec
loopne
dec
jnp
pop
icebp
ror
pop
push
fidivs
inc
xor
add
dec
pop
push
ret
add
movsb
add
jae
jo
cmp
dec
fwait
and
flds
push
push
bnd
add
mov
mov
test
jg
add
outsl
and
add
xchg
adc
shlb
add
add
mov
jno
in
imul
mov
orb
push
inc
sbb
loopne
add
insl
arpl
sarl
add
jo
inc
repnz
add
fdivrs
leave
dec
stos
out
repz
jle
cmpb
sub
add
sub
call
rclb
cmp
fisttps
subl
cli
inc
add
add
ret
add
call
sbb
add
cltd
fcoms
stc
ja
add
rolb
pop
pop
add
test
or
cmc
or
xchg
bound
out
push
inc
loope
cmp
mov
cmp
fisttps
aam
popf
mov
add
jmp
and
push
sub
adc
push
add
xchg
jecxz
mov
add
xor
or
cmp
psubb
xor
fs
imul
sub
mov
aas
mov
ret
or
aas
push
pop
xorb
call
cmpsl
adc
les
dec
shlb
or
add
ds
xchg
bound
enter
cmp
or
ret
xchg
xor
add
jne
andb
add
hlt
sub
idivb
mov
pop
jmp
cmpb
and
pusha
xchg
pop
sub
iret
dec
cwtl
fs
add
aad
adc
enter
lcall
sbb
add
ffreep
jb
mov
loopne
fstps
loopne
es
insb
add
add
add
add
and
scas
add
addb
inc
jo
cmp
inc
add
and
or
add
in
sbb
add
lock
das
push
sub
sub
je
sbb
push
or
ja
clc
mov
mov
add
lea
js
jo
faddl
inc
data16
mov
dec
js
add
dec
fucom
add
xor
out
push
mov
shl
test
repnz
jmp
pusha
add
sub
addl
mov
test
add
scas
pop
into
mov
jns
xchg
adc
dec
dec
add
push
mov
sub
xchg
add
mov
test
mov
add
push
add
sub
int3
push
pop
cs
push
inc
or
cmpsl
sbbb
sub
inc
ja
xor
pop
pushf
add
std
cmp
mov
adc
lahf
mov
pop
mov
out
sbb
cltd
cli
add
fldl
jns
and
mov
inc
add
add
push
inc
sahf
or
xlat
add
mov
and
or
mov
and
push
jnp
js
adc
shr
pop
rorl
fdivrl
add
popl
add
add
pop
ja
repz
add
jne
ljmp
ret
cmc
add
fwait
dec
mov
push
add
popa
xor
pushf
mov
in
ljmp
pop
jle
add
xchg
mov
pop
sub
jl
push
push
add
add
in
lahf
icebp
lcall
or
in
xchg
mov
and
sbb
stos
sbb
push
daa
iret
pusha
pop
or
mov
sub
cmp
in
vmovss
pop
push
pop
jns
pop
inc
lret
jo
sahf
add
pop
inc
push
add
mov
das
push
jmp
jl
jle
fisubrs
push
add
scas
push
or
xlat
add
jbe
daa
out
sarl
aas
jae
sbbb
test
cmp
push
jle
adc
leave
shlb
testl
push
fidivs
in
push
add
sbb
shl
xchg
pop
add
pop
imul
sub
aad
loop
add
adc
sbb
inc
rolb
addl
adc
sti
pop
xchg
jb
pop
adcb
popa
repz
sub
idiv
add
lea
nop
pop
test
adc
add
outsl
aad
mov
jge
xor
dec
pop
inc
adc
xchg
hlt
imul
mov
popf
loop
xlat
adc
mov
sub
cmpl
lea
pop
test
mov
pop
xor
outsl
add
adc
or
andb
push
push
bound
repnz
rolb
adc
lds
jo
pop
mov
ret
pop
push
add
cmc
ficomps
or
dec
or
push
imul
rdpmc
add
inc
and
mov
inc
mov
mov
mov
add
imul
ds
cmp
push
push
pop
in
mov
dec
orb
aad
mov
lret
add
dec
push
add
mov
cmp
rolb
stos
int3
add
mov
and
push
mov
dec
mov
sub
and
pop
xor
adc
mov
xor
aad
dec
cli
shl
push
add
loop
ret
fnstcw
add
fnstsw
imul
add
pop
add
and
mov
paddd
push
or
sbb
rcl
pop
clc
movsb
mov
push
cmpsl
inc
call
mov
lret
sub
mov
lds
pusha
shlb
pop
adc
mov
icebp
dec
add
loopne
enter
pop
and
pushl
icebp
add
test
imul
jecxz
mov
loopne
adc
je
mov
inc
mov
pop
dec
daa
add
jg
stos
in
enter
xchg
or
shr
xor
mov
add
mov
filds
or
mov
iret
mov
or
push
inc
mov
inc
clc
cmp
mov
mov
jl
mov
mov
xchg
sbb
sub
outsl
mov
scas
xchg
xchg
loopne
add
mov
mov
das
cmp
pop
cli
add
into
cs
jae
mov
or
bsf
mov
jp
not
add
bound
inc
dec
add
loop
mov
loopne
lea
push
cmovl
pusha
push
pop
in
dec
fdivs
repnz
dec
add
sub
push
or
xor
push
mov
xchg
sub
mov
mov
sti
pop
ret
add
sbb
lds
nop
xor
lret
add
das
daa
add
cmp
sbb
sbb
call
andb
dec
push
add
adc
xor
in
add
fstps
or
ffreep
lret
mov
cmp
loopne
mov
add
shll
xor
add
sub
push
ja
push
add
sahf
cwtl
mov
pushl
add
xchg
mov
dec
pop
cmp
cwtl
clc
fdivrp
sarb
and
cmp
cli
loopne
mov
pop
cmp
daa
mov
add
arpl
jno
mov
jne
cwtl
daa
out
add
mov
sub
jb
lahf
add
int3
inc
xorb
pop
cltd
rolb
jo
add
push
push
mov
pop
mov
add
in
mov
inc
fildl
outsb
fcomip
pop
xchg
cmp
jg
jno
cltd
pop
push
shr
mov
add
dec
pop
aas
adc
sti
lock
dec
push
rolb
call
loopne
jo
es
push
gs
adc
add
pop
test
push
add
mov
lds
xor
adc
call
mov
xor
jecxz
add
in
push
inc
xor
jg
std
add
imul
push
pop
icebp
inc
sbb
ret
adc
fisttps
out
mov
adc
cmpsl
fiaddl
mov
xchg
and
mov
sbb
mov
mov
movl
les
shrl
shr
ret
cld
and
xor
loopne
xchg
add
addl
mov
cmpsb
int
add
add
sbb
dec
push
adc
add
cmp
jno
es
mov
jae
push
sub
add
jne
and
add
cli
les
inc
aam
cld
cmp
pop
fadds
dec
cmp
pop
add
std
and
aas
popa
add
mov
add
rcr
mov
add
xchg
add
sbb
rorb
cmp
push
cmpl
pusha
loopne
popf
push
add
mov
inc
xor
inc
sbb
repz
das
cmp
fwait
loopne
add
mov
xchg
add
popa
rcr
dec
sbbb
xchg
int3
dec
test
add
je
out
mov
test
mov
cs
jg
push
cmpsl
pop
add
dec
mov
scas
hlt
xor
add
xchg
sbb
xchg
or
add
xlat
roll
add
jge
xchg
adc
adc
cli
sub
lds
dec
sbb
sarl
test
fwait
push
stc
jne
mov
fstpl
stos
adc
push
into
dec
lds
loop
and
inc
mov
sub
insb
add
out
rolb
sub
jmp
push
add
push
ja
aam
cmp
add
roll
add
mov
adc
insb
movsl
cmpsb
pop
mov
pushf
xor
or
fadds
xor
sbb
sbb
shr
jnp
icebp
jle
mov
add
dec
xchg
stos
and
fsubrs
movsl
pop
inc
das
clc
adc
into
jmp
cld
add
xchg
add
or
call
roll
or
stos
adc
les
add
xor
into
ret
add
inc
test
fadds
adc
dec
xchg
addl
sti
popa
inc
add
notl
pop
or
cmpl
sub
pop
movsl
pushf
add
or
negb
pop
lock
jecxz
dec
fiaddl
mov
push
subb
call
pushf
hlt
adc
out
or
adc
addr16
fs
lods
test
inc
adc
sub
idivb
add
inc
sbb
es
add
dec
sbb
loopne
add
cwtl
subl
das
push
inc
adc
jbe
inc
stc
adc
shlb
aas
and
add
sbb
dec
add
int3
lods
pop
sahf
and
push
rorb
inc
dec
and
jecxz
xlat
mov
out
mov
mov
add
push
add
push
icebp
aad
add
jle
xchg
cmpsb
push
fsubp
adc
outsl
rorb
pop
sarl
add
or
insl
mov
subl
pop
sbb
iret
aaa
push
loope
in
rolb
jge
xchg
dec
xor
daa
add
push
dec
jb
xor
pop
and
in
in
sbb
xchg
sub
icebp
stos
add
inc
push
or
out
cmp
sub
pop
push
cwtl
dec
sbb
push
inc
shll
in
add
aas
mov
or
sub
sbbb
push
add
icebp
xor
inc
inc
loopne
ds
push
xor
jg
mov
and
in
pusha
cmpsl
add
or
sti
call
dec
out
add
cmpsb
ljmp
les
fistpll
xchg
ja
cld
out
int3
mov
add
pushf
pop
mov
stos
add
imul
add
les
push
adc
mov
mov
das
inc
add
outsb
sub
in
mov
push
cld
jb
push
mov
cmp
add
lahf
push
mov
sbb
arpl
scas
add
nop
inc
mov
xor
je
adc
or
push
xchg
lock
out
clc
adc
outsb
add
popf
fisttpl
out
push
or
push
shrl
lea
mov
pop
pop
dec
pop
in
xchg
hlt
dec
push
sarl
add
mov
ret
jmp
fiaddl
loopne
jne
movntq
stos
mov
incl
cmpsb
js
sub
sbb
adc
xor
pushf
add
push
and
sub
enter
in
inc
add
inc
adc
out
jnp
dec
and
aam
cltd
pusha
xor
mov
cmp
lret
in
sub
fs
loope
test
jne
add
mov
sbb
mov
or
add
aaa
add
or
and
fstpl
inc
roll
lea
xlat
push
push
xor
add
jmp
and
or
orb
xchg
add
jb
ret
jle
add
in
dec
cmpb
ret
inc
sub
add
mov
mov
adc
mulb
movsb
stos
add
nop
flds
adc
cmp
enter
dec
fsubr
and
mov
inc
add
jecxz
hlt
imul
fimull
add
inc
mov
pop
add
inc
call
loopne
inc
adc
adc
push
add
jmp
lods
and
movups
roll
repnz
sub
or
and
adc
outsb
mov
cmc
jne
and
or
fnstsw
out
or
adc
push
mov
pop
int3
lods
add
shl
push
pop
sub
xor
inc
add
xor
add
movzwl
dec
sbb
jmp
or
enter
inc
adc
push
add
push
cmc
add
std
inc
add
cld
xchg
add
add
psubsb
pop
pop
cltd
inc
add
fs
mov
pop
sbb
inc
es
fwait
mov
cmp
pop
and
test
sbb
adc
sbb
sbb
sub
sub
adc
stos
repz
mov
xor
leave
add
cltd
mov
xchg
xor
andnps
add
dec
out
add
iret
movsl
push
jg
call
cmp
shll
add
pop
pop
pop
adc
xor
and
rolb
add
outsb
fwait
ljmp
mov
inc
add
mov
mov
leave
jae
push
outsb
xchg
inc
repz
add
or
sub
fldl
enter
cmpsl
mov
gs
add
adc
aam
dec
sbb
or
add
dec
jno
ret
mov
out
adc
pusha
mov
adc
push
mov
and
data16
and
stos
cld
dec
push
add
sub
add
inc
adc
push
sbb
fnstsw
and
pushl
sbb
push
rcl
adc
pushf
int3
fs
add
cld
and
sub
jmp
push
call
roll
repnz
inc
incl
loop
dec
add
cld
add
add
es
stos
arpl
xlat
sbb
clc
jo
sar
add
nop
jge
dec
mov
add
jno
cmp
mov
repz
fistps
push
xor
xchg
add
push
pusha
jbe
mov
add
push
lea
add
mov
lods
sub
addps
addb
lret
ljmp
maskmovq
jae
pusha
xchg
inc
cmc
mov
adc
add
mov
sahf
xchg
cmp
add
sbb
pop
sub
add
and
mov
mov
and
je
push
xlat
add
aaa
cmc
add
add
mov
inc
or
les
out
subb
pop
push
js
sbb
mov
pop
fprem
sbbl
push
add
mov
sbb
enter
fisubs
cmp
repnz
test
out
jb
add
adc
enter
aaa
sbb
xor
call
cmpsl
outsb
mov
lods
mov
xor
add
hlt
fsubrl
xor
lret
or
pop
add
clc
repnz
fiaddl
inc
out
sbb
add
add
adc
lcall
mov
stos
add
push
jo
fldenv
icebp
jge
mov
xor
dec
mov
ret
jo
sbb
out
ljmp
das
shll
dec
add
lret
pop
push
mov
insb
add
orb
adc
add
cwtl
stos
or
cwtl
jmp
pop
pop
mov
add
jle
sarl
in
call
sub
ljmp
jle
lcall
dec
or
sub
and
imul
les
sbb
inc
pop
int3
roll
jp
xchg
rolb
add
les
dec
jb
add
insb
ja
js
add
cmp
mov
in
add
lret
dec
jle
push
lahf
out
jne
push
in
xor
jecxz
mov
and
clc
aaa
xchg
idivb
ljmp
popf
add
subl
mov
jp
add
jp
outsb
pop
and
jp
add
push
pusha
push
xor
adc
mov
mov
ret
les
ret
and
bound
lea
xor
add
or
popl
mov
add
add
adc
sbb
cmp
pusha
jo
ja
pop
shl
add
and
mov
add
add
sub
adc
addb
fisubl
or
stc
adc
adc
add
adc
sbb
in
add
dec
add
xor
clc
pushf
es
add
mov
pop
scas
mov
fcomps
loopne
hlt
addl
xbegin
decb
adc
shll
lahf
add
add
add
add
add
bound
pop
ret
iret
add
push
sbb
xchg
mov
or
mov
rol
push
add
mov
cbtw
rcrl
add
mov
push
cs
daa
out
add
sub
div
stos
add
mov
out
add
call
add
mov
mov
addb
inc
inc
cmp
mov
or
jb
mov
aam
testw
sbb
adc
add
xchg
enter
cmp
mov
sub
adc
lock
aas
shl
pop
clc
orl
and
xchg
mov
jge
add
add
adc
and
insb
jl
mov
jle
jle
sbb
push
inc
inc
shr
sbb
pusha
and
sti
pop
mov
inc
add
aam
js
ret
add
mov
adc
add
pop
inc
add
pop
push
pop
loope
rep
mov
add
push
inc
dec
scas
dec
lds
add
lea
pop
inc
mov
fildl
add
pop
cwtl
imul
unpckhps
icebp
mov
shll
mov
int3
push
or
je
xchg
rorb
pop
push
cmp
loop
prefetcht0
cmp
inc
dec
add
adc
add
jmp
dec
js
clc
or
mov
adc
push
xlat
add
cmp
loope
loop
inc
cmp
push
add
xor
add
pop
stc
push
jae
daa
mov
or
inc
hlt
rcrl
lds
pop
aam
add
in
enter
add
adc
jg
jmp
loop
sbb
or
sub
outsl
stos
add
addr16
icebp
add
mov
and
sysenter
and
and
add
dec
or
cmp
pop
jnp
roll
add
out
rolb
xor
adc
sbb
shll
add
outsl
jmp
stc
xor
inc
inc
adc
mov
and
sbb
xchg
push
dec
jp
pop
jecxz
add
out
sbb
push
xor
mov
jmp
add
popf
add
test
add
add
add
inc
adc
testb
mov
xor
insb
jmp
sbb
loop
jnp
push
inc
sbb
cmp
lods
mov
adcb
mov
std
in
sub
mov
add
pop
nop
int
pusha
or
mov
dec
lret
call
xor
loope
adc
jno
add
popa
pop
int
rorb
icebp
push
mov
push
stos
xor
inc
add
leave
mov
cmp
adc
aas
lea
add
iret
add
imul
or
fsubrs
mov
push
jae
adc
adc
in
rclb
sbb
loop
cmp
sub
inc
jmp
pop
jne
push
jmp
add
add
jle
cmp
dec
dec
xor
and
add
sub
jg
jmp
repnz
mov
sub
pop
xorb
add
mov
dec
jno
in
cli
verw
jae
movsl
push
das
jecxz
rorb
push
push
stos
mov
mov
xchg
pop
mov
and
imul
movl
out
mov
jae
jne
push
cmp
and
inc
xor
add
push
mov
mov
inc
inc
add
divl
add
sub
or
and
sbb
in
ljmp
sub
push
rorb
add
jbe
add
inc
push
jae
ret
add
mov
inc
cmpsl
js
mov
adc
sbb
cmp
add
add
adc
or
in
add
lea
sub
push
or
test
shr
mov
das
mov
wrmsr
lahf
cwtl
add
jb
popa
mov
pop
adc
sbb
adc
push
loope
dec
mov
into
js
jle
pop
add
int
jo
rcrl
pop
ljmp
movsl
insl
and
mulb
insb
sub
add
ja
mov
mov
mov
pop
jmp
adc
mov
cmp
add
in
pusha
inc
outsl
dec
add
pop
mov
push
add
les
imul
add
jns
xor
and
add
jno
xlat
push
push
xchg
fadds
iret
jns
xchg
jo
enter
and
out
add
or
and
popa
je
rclb
clc
jmp
adcl
test
and
lods
inc
aam
xlat
ds
or
sub
sub
jo
add
test
add
mov
xor
loop
in
mov
jg
pop
cmp
enter
pop
mov
pop
add
in
frstor
push
adc
jb
pop
push
adc
add
cmp
loop
add
rorb
add
inc
pop
mov
mov
sti
xorb
mov
imul
bswap
and
lret
sbb
cld
push
jecxz
loopne
outsb
sub
std
pushl
sub
cmp
add
sbb
pop
dec
push
clc
adc
and
shr
xchg
mov
pop
adc
push
stos
adc
fstpl
inc
nop
jns
add
in
sub
push
sbb
xorb
cmp
pushf
lea
insb
lods
or
mov
add
fsubrs
mov
or
add
push
shlb
or
cmp
xchg
sbb
adc
pushf
mov
rclb
add
fs
popa
aas
mov
mov
or
popf
clc
bswap
fsub
adc
cmp
lock
insb
cmp
inc
iret
pop
mov
rolb
andl
adc
pushf
sbb
lahf
fdivrs
js
sbb
hlt
add
inc
add
movsb
adc
add
in
lock
or
push
data16
add
nop
lea
pop
push
incb
mov
mov
add
pop
and
inc
adc
loopne
and
push
or
or
pop
mov
xchg
and
fsts
test
or
cmpb
lods
cmp
cmp
jp
cmp
mov
sbbl
rolb
ret
or
and
mov
sbb
fs
adc
or
icebp
lds
leave
inc
lret
ret
in
cmpsb
xchg
mov
add
jo
inc
adc
adc
test
xchg
call
jl
add
lcall
lahf
add
add
sbb
mov
push
dec
lea
movb
or
dec
loopne
add
je
insl
gs
add
outsl
out
addl
cld
ljmp
inc
sbb
ljmp
push
mov
in
pop
or
jae
sbb
push
pushf
int3
dec
push
popf
pop
jl
mov
and
push
add
sbb
loope
gs
add
andb
shrb
lret
cmp
movsb
dec
add
or
xor
adc
andb
sub
std
adc
mov
jo
mov
std
cwtl
std
mov
mov
sar
fdivr
loopne
call
mov
adc
sbb
and
sub
mov
add
cmpsb
or
and
gs
jno
or
pop
call
adc
lret
and
scas
mov
sbb
push
sbb
mov
arpl
add
enter
pop
adc
add
mov
mov
mov
adc
test
cmp
dec
scas
adc
push
push
add
push
inc
call
dec
add
adc
arpl
addr16
insl
outsb
jo
cli
loopne
ja
js
jbe
and
and
imul
pusha
pusha
mov
lods
sub
add
add
mov
adc
push
and
push
push
add
inc
subb
jae
add
psubsw
repnz
add
mov
xor
xchg
adc
xchg
hlt
aas
faddp
outsb
stos
aas
aas
push
aas
insb
aas
test
cwtl
add
pop
jl
lea
das
add
ds
ja
add
mov
cmp
cmp
xchg
sbb
push
xchg
divl
test
add
loopne
add
into
or
cmc
push
int
in
repnz
mov
mov
add
inc
add
push
add
data16
subb
add
pop
push
add
inc
fadd
jle
add
add
cmp
insl
cld
pop
or
or
or
mov
movsl
add
xchg
add
or
imul
and
lods
mov
in
or
xchg
xorb
cmp
add
push
xchg
pop
jno
sub
lea
shlb
enter
add
and
bound
out
mov
clc
jno
enter
sub
cmp
mov
cltd
addr16
adc
pop
or
hlt
mov
or
pop
data16
cmp
lods
and
and
clc
jns
rclb
aam
adc
lock
data16
cmp
js
nop
xchg
add
loopne
inc
xchg
mov
pop
sub
sbb
xor
nop
jmp
sub
sub
jno
aam
fwait
sub
out
or
test
in
inc
out
cltd
inc
xchg
push
icebp
pusha
loop
cmp
xor
sbb
mov
add
and
xor
or
mov
orb
mov
and
gs
nop
cmp
mov
cltd
lock
into
xchg
sti
xor
sbb
inc
js
mov
pushf
sub
pop
or
push
add
int
clc
push
jae
xor
mov
fcomps
shrb
fldcw
inc
cmp
add
enter
pop
int3
or
sub
mov
mov
sub
xor
push
and
add
xor
shrl
and
add
cwtl
sub
or
adc
cltd
in
xor
push
add
mov
shlb
lret
add
or
lods
movsl
add
xchg
add
dec
push
cmpsl
add
lods
adc
enter
in
sub
pop
jl
inc
addr16
loopne
adc
sub
and
push
push
mov
sahf
add
mov
aas
mov
jl
mov
pop
xor
or
push
cwtl
mov
int3
adc
fisubl
dec
testb
and
inc
inc
dec
mov
adc
xchg
jbe
cmp
lcall
cmp
or
in
ss
adc
dec
mov
push
cmpsb
cld
mov
out
hlt
push
pop
xchg
retw
mov
cs
or
push
dec
nop
fs
xor
add
shrb
xchg
cld
sbb
nopl
sub
cmp
and
dec
push
add
pop
adc
mov
adc
add
push
xor
pop
mov
mov
test
mov
fsub
out
mov
imul
aas
ds
push
add
mov
idivl
lock
inc
push
mov
dec
xor
sub
pop
adc
or
adc
pslld
push
mov
adc
je
sbb
xchg
inc
lods
inc
add
enter
sbb
jns
pop
and
dec
adc
inc
bound
xchg
lret
mov
mul
scas
aas
addl
mov
popl
outsb
jae
push
fs
push
ss
inc
fbstp
ja
inc
arpl
push
add
mov
sub
jbe
js
add
sbb
add
outsl
daa
and
jp
push
jb
ljmp
in
jecxz
push
sbb
inc
xchg
shrl
push
call
dec
sbb
mov
shl
add
add
fs
mov
push
outsl
dec
jne
mov
xor
or
and
int3
sub
rcr
xorb
arpl
jns
ret
sahf
jmp
cmp
bound
add
inc
js
je
arpl
xchg
add
fisttpll
jo
loop
outsw
inc
and
fadds
fs
jae
arpl
outsl
std
pop
xchg
dec
popa
outsb
add
cmpsl
adc
inc
imul
insl
push
test
mov
outsb
jb
xchg
sub
push
xchg
lcall
mov
fisttps
jbe
mov
push
add
inc
and
jae
adc
popf
stos
cltd
rclb
mov
outsb
push
push
add
and
je
or
adc
adc
inc
pop
dec
add
cmp
addb
ja
or
pop
stos
sbb
mov
inc
inc
xor
or
push
adc
sub
xchg
dec
inc
push
jns
pop
insl
fwait
add
je
cmpsl
loop
jo
inc
add
dec
aam
dec
dec
add
cltd
vmwrite
mov
dec
hlt
lcall
test
add
inc
outsl
js
dec
call
nop
jbe
loop
cld
xchg
add
es
fs
xchg
mov
dec
xor
add
test
push
add
mov
popa
jne
inc
push
pop
push
in
sbb
shlb
pop
cmp
orb
cmpsl
sub
setns
add
lods
popa
rcrb
movsb
adc
shlb
adc
test
and
inc
ss
add
into
stos
xchg
add
sub
sub
mov
add
lahf
les
insl
mov
imulb
fistps
jg
pop
call
xor
push
or
mov
scas
add
adc
add
sub
data16
cld
sti
repnz
test
sub
arpl
push
in
rorb
rcll
insl
in
sub
ja
ret
cltd
push
idivb
xor
scas
mov
sahf
int3
mov
movups
pop
and
mov
jbe
and
cmp
imul
jo
arpl
inc
add
mov
mov
cltd
xor
mov
mov
dec
adc
add
fisttpll
aas
xor
xchg
pop
test
push
mov
mov
push
or
ja
push
gs
add
push
mov
add
xchg
jge
and
and
jo
ret
inc
mov
pop
es
clc
mov
loop
dec
jae
sub
or
inc
adc
and
push
jmp
fcompl
into
add
test
and
or
lods
leave
sbb
adc
or
xorb
xor
aad
add
xor
add
sub
xor
mov
es
add
jne
push
repz
movsb
add
int3
cmp
fsts
push
and
sub
out
adc
iret
mov
inc
inc
les
jp
insb
inc
pop
dec
sub
add
std
xchg
sbb
fwait
and
shlb
cltd
jnp
cmc
xchg
test
push
es
add
jge
lods
push
cld
xchg
pop
es
adc
push
outsb
jnp
cmp
leave
adc
and
adc
popf
add
jo
cmpsl
add
jo
add
dec
outsb
add
pop
xor
daa
sub
cmp
xchg
cmpsl
inc
dec
out
xchg
push
mov
push
jb
jp
xor
repz
repz
repz
repz
loop
ljmp
add
or
adc
sbb
and
sub
jmp
inc
xchg
dec
mov
push
jb
jp
xor
repz
repz
repz
repz
clc
push
add
jb
je
jbe
js
daa
jp
jl
jle
enter
pop
xor
popf
int
adc
add
popa
and
push
leave
test
jl
add
aaa
sbb
cmp
ret
push
aad
fistpll
pop
jmp
cmp
daa
sbb
cmp
pop
xchg
outsb
lods
cmp
cmp
test
scas
aas
mov
movsb
jle
or
out
pop
cmp
add
inc
sub
xchg
push
dec
fiaddl
movb
sbb
xor
jg
rcrl
cmp
add
sbb
cmp
add
sahf
inc
push
dec
lahf
push
pop
je
jbe
js
jp
jl
add
xchg
inc
xchg
mov
add
and
sub
add
xchg
icebp
scas
stc
mov
sti
andl
add
fmull
cmp
jae
sahf
jge
test
jbe
js
push
cmpsb
xchg
mov
out
out
ret
sbb
push
xchg
decb
subps
clc
and
andl
jle
cld
sbb
xor
sahf
xchg
mov
add
xchg
xor
daa
sbb
and
lock
mov
xchg
out
dec
mov
cmp
gs
leave
stos
add
mov
mov
add
je
jbe
js
dec
push
xorl
mov
leave
adc
ret
enter
add
fstl
les
add
xchg
cmp
cmp
aas
repz
sub
subb
pop
call
lock
hlt
mov
pop
add
cmp
ds
cmp
push
add
add
and
sub
mov
test
xor
add
pop
imul
daa
aas
mov
andb
or
inc
push
scas
mov
testl
push
pusha
sbb
and
sub
shrl
jecxz
repz
xchg
push
mov
addb
fcomip
in
std
sbb
mov
dec
push
xchg
sbb
aas
push
outsl
sbb
cmpsl
lahf
lods
add
fildl
and
cmp
or
jp
add
inc
push
popa
pusha
add
or
sub
outsl
rorl
fstp
sub
sbb
xor
jbe
add
loope
jmp
aaa
jb
je
add
cmp
sbbb
andl
mov
leave
inc
jae
dec
add
jle
push
pop
cmp
mov
iret
call
hlt
sbb
pushf
adc
mov
xor
daa
decb
outsb
pop
add
iret
cmp
jb
je
jbe
js
jp
jl
dec
xchg
mov
test
aas
mov
aas
iret
aas
sarl
jmp
lock
cli
add
xchg
xor
daa
and
inc
das
addr16
inc
dec
cmpsl
push
pop
es
ja
jbe
mov
mov
decl
ret
pop
xor
leave
dec
daa
add
stos
dec
mov
and
lock
or
pop
mov
fnstcw
jmp
mov
jno
clc
lret
rolb
fisubl
ljmp
mov
pop
inc
cli
sub
pop
lahf
hlt
adc
xchg
repnz
ja
cmp
shll
js
jp
jl
jle
jle
jle
jle
jle
jle
add
sti
cmpl
add
fldenv
loope
gs
pop
sub
pop
push
push
pop
dec
pusha
mov
jl
js
addb
in
xchg
lock
jb
je
jbe
js
jp
jl
jle
add
jle
cmp
pusha
sbb
mov
pop
jl
push
cld
cmp
cld
nop
cld
cwtl
cld
mov
sbb
popf
rcrb
lahf
loopne
call
jo
cmp
cmp
sbb
sub
lods
arpl
xchg
cmpb
js
jmp
cwtl
stc
pushf
and
movsb
cld
test
lahf
xor
lahf
mov
mov
popf
clc
rcrb
popf
or
push
adc
sbb
testl
cmpsl
pop
pusha
out
push
rclb
mov
imul
ror
aam
cwtl
add
js
adc
adc
sbb
sbb
lock
and
xchg
sub
xor
test
jl
mov
pop
mov
cmpsb
lods
push
int3
scas
aam
mov
inc
mov
sarb
clc
sbb
and
sub
sub
pop
xor
xor
cmp
cmp
inc
inc
push
addr16
js
jl
and
std
xor
jle
jle
jle
jle
jle
pop
enter
aam
fadds
lea
in
addb
add
popf
sub
xor
lahf
cmp
inc
roll
loope
push
mov
orb
push
mov
repz
in
call
shll
clc
cld
lods
add
inc
test
cmp
insb
mov
xchg
nop
dec
movsb
cwtl
lret
pushf
cmpsl
sti
fucompp
std
lods
sarl
call
repz
lock
out
push
jae
or
fcoms
inc
dec
mov
movsl
mov
pusha
repz
xchg
sbb
movsb
lahf
test
lods
movsb
fsts
mov
fstpt
into
add
rorl
ja
add
sub
xchg
loopne
lds
and
mov
mov
sbb
les
int3
sarb
je
or
dec
push
adc
cld
xchg
lds
push
sub
cmp
pop
shll
loopne
repnz
cwtl
js
jl
pop
dec
test
and
and
aas
aam
fdivrs
fdivrl
loopne
clc
je
and
and
inc
adcl
push
adc
add
leave
push
push
test
test
leave
pushf
mov
xchg
mov
mov
in
shr
ret
hlt
cwtl
lds
lods
pop
add
movsl
ss
and
aaa
dec
leave
xchg
rclb
cmp
cmp
daa
repnz
addr16
xchg
mov
leave
or
push
fsts
push
loope
jmp
and
sub
cs
mov
ds
sub
sarb
and
xchg
ret
das
xor
add
jo
mov
cmp
cmp
push
push
push
xor
push
cmp
cmp
in
cld
adc
ss
cmp
dec
sub
xchg
sahf
loopne
fmulp
je
pop
push
call
lea
add
mov
ret
pop
mov
cmpsb
enter
pop
repz
add
sub
mov
push
pop
out
and
sub
in
cmp
popa
add
iret
fyl2x
loope
inc
test
cmp
jb
push
add
inc
call
leave
and
xchg
add
pusha
or
inc
addb
add
push
push
xchg
mov
rclb
aas
add
cmpsb
scas
dec
add
cmc
leave
add
mov
jg
jg
ds
cmp
dec
daa
fcoms
add
bound
mov
dec
test
ret
and
and
out
out
nop
jbe
add
cmp
or
xor
mov
inc
cmp
aas
mov
scas
xchg
out
add
call
lcall
mov
jo
idivb
sbb
setge
sub
gs
aas
jae
push
stos
repz
mov
shr
pop
aaa
sub
in
call
mov
lcall
iret
xchg
rolb
mov
ljmp
fdivl
je
push
mov
test
fs
xchg
insb
dec
jg
add
test
mov
mov
mov
mov
ja,pn
seta
inc
rol
jmp
inc
aam
pop
fmul
add
in
xchg
in
dec
std
xorb
add
rorb
aam
add
cs
fsubrl
xor
faddl
fidivrs
and
je
adc
add
xchg
jae
aas
movsb
add
lods
out
mov
call
ljmp
add
add
out
jp
pop
and
cmp
xor
cmp
inc
cmp
pop
sbb
push
cmpsl
clc
xor
in
shlb
test
mov
add
sbb
movsl
or
cltd
pop
rcrb
xchg
int3
add
add
hlt
mov
add
xchg
add
jecxz
xor
test
inc
add
adc
in
out
mov
xchg
aam
rolb
push
cwtl
mulps
cmp
orl
out
in
cli
lock
cmp
add
push
push
dec
or
insb
cmpsl
mov
add
xchg
mov
repz
mov
sar
or
into
jbe
js
jp
push
jl
jle
dec
jg
mov
inc
into
sbb
aaa
jecxz
xchg
lock
js
nop
add
cmp
mov
sti
and
adc
es
popf
fld
loope
call
push
out
sbb
inc
mov
dec
mov
fcmovnbe
and
jb
data16
dec
mov
push
shlb
insb
sahf
inc
mov
add
or
and
cmp
nop
push
add
xchg
leave
les
rcr
fsts
cmp
daa
insl
add
or
and
sahf
push
pop
add
inc
daa
inc
loop
add
xchg
movsb
ffree
sub
cmp
nop
and
call
xchg
mov
xchg
out
mov
pop
cs
rorb
add
xchg
dec
xchg
mov
orl
or
ds
add
roll
jnp
add
sarb
xor
pop
ss
add
pushf
mov
loope
inc
jmp
insb
mov
imul
mov
push
or
lods
add
add
add
movsl
enter
xor
jne
ret
pop
lret
dec
sub
add
leave
inc
roll
jnp
lcall
jb
dec
inc
wrmsr
data16
jnp
add
sub
shrl
clc
add
aaa
jb
je
pop
sub
ds
outsb
dec
scas
push
cmp
popa
mov
jns
subl
push
push
scas
movsb
mov
lret
xchg
aam
ret
js
jle
inc
jne
add
cs
xor
mov
icebp
sbb
stc
pop
popf
push
pop
xchg
dec
cwtl
movsl
iret
lods
iret
mov
jecxz
mov
aas
icebp
and
dec
xchg
pop
add
cmp
inc
clc
cmpsl
cld
push
daa
push
inc
pop
arpl
xchg
pop
adc
sahf
mov
shrb
add
adc
add
cmp
add
orb
mov
or
daa
aas
arpl
outsl
mov
mov
rolb
and
or
les
loopne
add
or
or
adc
mov
and
add
sub
dec
dec
xor
pushf
dec
pusha
xor
scas
pop
daa
orb
adc
sets
mov
dec
jb
in
xchg
in
ret
add
les
mov
cmp
cmp
add
inc
mov
add
push
outsl
mov
fcompl
cwtl
add
mov
pop
add
push
mov
add
lds
add
xchg
mov
int
sub
aaa
add
fldenv
add
jl
sub
in
mov
xchg
jle
dec
mov
add
or
cmp
loopne
jmp
pop
add
les
ja
lods
nop
add
mov
add
je
jbe
dec
inc
add
insb
mov
jle
cmp
dec
and
sbb
aas
mov
mov
and
mov
push
add
pop
xchg
aam
mov
sarb
push
inc
xor
dec
dec
mov
iret
push
orps
push
mov
mov
orb
jb
mov
xor
add
mov
arpl
cmp
cmp
outsl
cmp
mov
andl
xlat
inc
ret
outsl
adc
dec
out
rcrl
jae
dec
mov
add
mov
add
mov
jns
add
aas
pop
lock
mov
inc
xchg
or
add
and
add
fldln2
loopne
xor
add
movsl
push
pop
lods
mov
mov
rclb
je
add
in
jae
cld
adc
add
or
adcb
ret
or
je
jbe
and
pop
xchg
addw
cld
xchg
add
or
inc
call
ret
pop
jle
xchg
movsl
mov
fisttpl
cmp
dec
in
mov
sub
sahf
jecxz
repz
push
in
out
out
repnz
pop
stc
pop
sub
leave
xor
push
xor
sub
daa
or
inc
or
loop
out
sar
fldenv
push
nop
xor
jnp
lock
add
and
repnz
les
jle
adc
xor
lock
jmp
or
divb
inc
sub
and
cmp
add
cmp
cmpb
mov
sahf
mov
mov
sub
fdivrl
add
ss
js
add
dec
pop
bound
xchg
les
add
mov
mov
into
call
andb
call
xor
rorb
xchg
push
ret
pop
push
nop
add
jbe
dec
ds
ljmp
push
into
xor
arpl
pop
push
nop
pop
lahf
addr16
xchg
jbe
addb
add
cmp
adc
cmp
cmp
cmp
pop
loopne
add
dec
scas
in
in
add
xchg
inc
add
xchg
nop
aad
out
repnz
xor
push
pop
ret
jne
add
xchg
cmpl
fwait
xor
xor
ljmp
ss
xchg
fsubr
js
rcl
testl
xor
xor
add
cmp
xchg
ret
out
insl
add
jb
ja
add
andb
adc
ret
mov
lahf
mov
rclb
and
or
mov
add
add
rcrl
sub
jbe
stc
xor
mov
negb
das
xor
popf
dec
sbb
adc
add
jmp
jb
add
sahf
das
push
cmp
insb
mov
mov
mov
icebp
lods
clc
mov
add
scas
icebp
ds
add
hlt
cld
clc
push
orb
inc
jp
dec
pop
ret
or
mov
cmp
cmp
xchg
test
xchg
add
lahf
in
pop
xchg
or
mov
lret
push
shl
loop
jg
je
pop
rcll
add
sbb
sbbl
int
add
imul
push
icebp
ljmp
mov
je
add
xor
popf
or
sbb
pop
dec
push
and
jb
je
add
push
daa
jl
out
xchg
test
mov
mov
rcl
adc
rclb
pop
add
mov
imul
fidivl
movsb
jnp
add
insb
pop
xchg
pop
mov
das
stos
add
xchg
pop
or
sbb
xchg
add
xchg
and
shlb
xor
jnp
mov
je
pop
sub
test
das
sarb
adc
pop
dec
sbb
mov
xor
sub
test
nop
mov
mov
in
call
add
or
inc
in
pop
xchg
xchg
movl
cld
sahf
xchg
mov
popf
pop
or
mov
mov
mov
nop
push
cmp
popf
or
xchg
bound
add
pop
loopne
loopne
add
pop
pop
inc
addr16
push
imul
lock
and
add
inc
das
test
loop
cwtl
jno
hlt
mov
inc
add
add
pop
push
addr16
jo
xor
fisubrl
cmp
xlat
sub
inc
fists
jmp
out
cmp
cmp
add
leave
adc
add
js
jp
jl
jle
in
add
xor
xchg
ffreep
je
push
mov
mov
or
outsb
push
inc
daa
add
sbb
dec
mov
lret
push
inc
push
gs
xchg
cmp
fwait
cmp
es
xor
repz
xlat
lock
jmp
add
std
or
push
cmp
pop
or
js
sub
jl
jle
jl
add
pop
xchg
iret
jb
je
add
shlb
cmp
out
lock
lret
cmp
cmp
outsb
test
movsb
pop
lods
rol
xchg
iret
ds
or
fcoml
add
mov
je
jbe
js
dec
fiadds
adc
lret
push
or
add
pop
lods
ds
cmovb
or
int3
rcll
les
pop
loop
ljmp
fmuls
in
call
ror
add
xor
add
sub
fcomps
jb
mov
mov
push
adc
dec
leave
imul
cmp
testl
ret
int3
adc
in
or
outsl
xchg
sahf
add
stos
js
add
cmp
add
sbb
lret
add
ds
and
es
pushf
push
mov
cmp
rclb
scas
pop
adc
lret
sarl
pusha
fiadds
push
js
mov
insb
mov
sub
sub
cmp
imul
rol
icebp
out
loopne
js
sets
test
push
cmp
add
mov
ret
pop
add
add
dec
clc
xchg
add
pop
cld
push
enter
cmp
and
sbb
mov
mov
loope
lds
dec
aam
iret
out
in
inc
ret
sub
sbb
cmp
in
sahf
std
pop
adc
mov
dec
add
jno
loopne
add
fs
add
dec
cs
or
call
xor
pop
inc
les
adc
or
test
shl
loopne
xchg
add
loopne
cld
add
in
add
out
stos
and
cmp
ds
dec
cmp
hlt
cmp
jl
add
or
je
add
les
pop
cmp
cmp
cs
xchg
dec
orl
mov
pop
or
push
gs
stc
jno
loopne
pop
sub
test
bound
or
xor
iret
addr16
inc
add
cmp
in
pop
jbe
incb
mov
and
dec
cmp
movl
ret
and
sub
add
or
xchg
add
ret
push
push
dec
into
push
inc
mulb
sub
cmp
mov
out
lcall
xchg
push
pusha
pop
out
repz
push
popa
hlt
ja
add
aas
mov
adc
push
dec
popa
dec
loope
jmp
js
enter
fwait
sub
daa
ja
push
mov
stc
lret
and
xchg
nop
push
ss
and
fnstenv
js
jp
jl
add
or
inc
push
push
xor
sti
sahf
add
popf
incl
sbb
add
pop
rorb
add
add
and
out
inc
imul
and
pop
pop
ds
add
ror
add
mov
mov
in
in
cs
or
loopne
add
das
shll
aas
or
fdivs
fdiv
jp
popa
les
shlb
jno
xor
xchg
in
call
ljmp
add
test
leave
cmp
mov
movsb
xor
inc
dec
rcrb
inc
scas
sub
sub
push
and
jle
mov
cmp
push
jecxz
adcb
scas
cmp
pop
aas
add
loopne
fwait
add
xor
add
sbb
add
dec
sub
xchg
jne
mov
add
add
test
jle
in
dec
add
loope
xor
ret
pop
pop
jp
and
mov
sbb
cmp
popf
push
add
andl
dec
loop
addr16
jb
jp
mov
pop
in
in
jmp
lods
pop
xor
out
adcl
xchg
adc
sub
hlt
pop
addr16
jg
xchg
xchg
out
and
loope
aas
repnz
add
xor
add
popa
and
xchg
push
mov
shlb
dec
or
jno
push
push
sbb
cli
add
popf
cld
xchg
add
mov
add
pop
cmp
mov
outsb
adcl
fwait
bound
in
mov
push
filds
call
sbb
inc
cld
jp
sahf
add
mov
popa
je
imul
xchg
cmc
mov
sub
es
in
mov
push
adc
and
inc
cmp
pop
lcall
add
pop
out
in
fadds
stc
movsb
lcall
popa
scas
mov
cmp
stc
xor
pop
aad
add
push
arpl
mov
mov
jmp
das
add
pop
gs
cmpsb
or
cmpb
and
aam
loopne
getsec
dec
add
or
inc
push
jl
sti
ds
lods
xorb
push
add
pop
mov
xorb
shlb
pop
incl
nop
outsb
jbe
pop
and
xor
inc
rorl
rolb
sar
out
and
xchg
subps
or
imul
call
roll
inc
fcomps
add
addl
mov
jecxz
xor
mov
pop
add
or
mov
movsb
push
sahf
ret
enter
repnz
sarb
dec
or
fcoms
shlb
pop
call
hlt
rolb
rorb
stos
push
loop
add
movsb
sbb
or
cmp
iret
cmp
inc
loope
sbb
stc
dec
popf
push
add
aas
pop
daa
push
pusha
inc
lock
into
das
jo
je
js
add
faddp
adc
xchg
fsub
pop
loopne
and
popf
mov
jmp
add
or
sbb
sub
loop
add
inc
loope
dec
add
js
repz
cli
pop
leave
add
pusha
sub
aas
push
pop
mov
mov
add
js
xchg
and
cmp
xor
inc
in
adc
cmpsl
test
in
add
xchg
hlt
int3
mov
xor
sub
jl
add
orb
pop
and
sub
call
dec
add
add
push
push
cld
popf
xchg
jge
test
pushf
push
mov
sbb
inc
sub
add
pop
or
jle
faddl
cmpsb
adc
push
daa
xor
das
pop
add
andl
hlt
mov
adc
inc
hlt
mov
adc
add
ss
pop
faddl
add
pop
pop
dec
adc
pop
iret
fs
push
pusha
dec
test
mov
mov
nop
adcl
or
lgdtl
mov
dec
inc
enter
mov
push
loopne
roll
call
jle
dec
cmp
pop
cmpb
add
icebp
sbb
stc
and
and
insb
lock
fnstenv
push
or
je
leave
push
dec
and
add
loopne
jo
cld
je
cmpsb
sub
pop
stc
adc
lock
mov
mov
ret
idivl
test
add
add
inc
adc
xchg
nop
mov
mov
add
sub
mov
mov
push
nopl
fchs
andl
xor
mov
faddl
sbb
xor
push
sub
jns
cli
adc
and
mov
push
add
aaa
adc
ret
push
push
sbb
push
call
enter
mov
psllq
sbb
jecxz
push
lea
test
sub
pop
add
or
pushf
inc
and
add
and
pusha
cmp
sub
adc
adc
sbb
and
jmp
test
push
xor
test
add
add
popf
push
sub
add
mov
xchg
lock
mov
add
cmpl
je
cmovo
mov
rcrl
cmp
dec
lcall
mov
or
push
popf
mov
repnz
addb
jne
add
test
mov
add
push
add
push
aaa
movb
cmpsl
xlat
jl
cli
push
cmp
orl
push
push
mov
aas
xor
or
add
add
sbb
subb
mov
inc
dec
add
in
add
push
add
int
repz
dec
cli
loopne
incl
dec
les
roll
stc
add
movsl
loope
add
cmp
pop
push
mov
push
addb
jge
jp
nop
shr
decl
test
sub
xchg
push
dec
ja
add
shlb
mov
mov
insl
add
dec
pushl
push
dec
add
jge
lods
add
pop
shr
xchg
sti
add
je
or
push
push
cmp
add
adcl
jns
add
aam
xchg
mov
jecxz
sub
add
mov
popa
dec
mov
add
test
inc
jno
push
sub
ljmp
or
jne
pop
add
lock
dec
dec
add
mov
inc
test
push
inc
data16
in
push
sbb
mov
jle
push
cli
mov
inc
or
mov
in
add
fiaddl
push
push
mov
add
mov
push
mov
pop
jne
cmpsb
and
rcrb
sub
inc
mov
cltd
sub
add
fdivl
push
mov
and
imul
shl
adc
add
jl
jnp
subl
flds
fisubs
pop
push
sbb
dec
mov
orl
aaa
jmp
sub
adc
sbb
fld
cld
jmp
add
test
movsb
cmp
rolb
das
add
jne
mov
dec
cmc
sub
add
xchg
sbb
pop
adc
lods
rcr
push
jbe
push
fiadds
dec
pusha
mov
add
fistl
pop
cmp
les
pop
push
popa
mov
sbb
testb
xchg
cmp
pop
cwtl
je
sub
ret
push
ficoml
sbb
add
xor
add
push
insl
inc
js
add
add
ja
dec
add
sub
inc
inc
rol
inc
incb
mov
sbb
add
or
cld
scas
mov
jg
add
push
or
ficoml
imul
jbe
loopne
xor
jns
add
push
mov
iret
sub
add
jmp
fildl
cmpsl
or
cmp
mov
sbb
sub
xor
add
mov
sbb
fmul
pop
add
sahf
popf
flds
push
lods
dec
mov
add
jne
ficompl
rcrb
je
adc
bound
ret
lds
lods
cwtl
adcl
inc
cmp
add
mov
push
add
fcmovnb
mov
and
out
xchg
int
mov
add
sbb
cltd
pop
and
mov
insb
sub
aad
xor
add
mov
cli
out
add
test
add
or
movsb
add
stc
sub
insb
sbb
test
add
push
mov
mov
add
lret
push
and
in
aam
or
bound
loopne
xchg
cmpsl
add
xchg
lock
js
add
das
jl
icebp
xchg
pushf
pop
xor
flds
insb
push
pop
lret
inc
push
dec
gs
bswap
xchg
xor
push
icebp
add
cmp
cmc
jbe
add
addb
imul
add
mov
scas
jb
pop
out
ljmp
lods
clc
xor
ja
ret
movsb
mov
add
xor
mov
add
cmpsb
imull
out
add
inc
mov
sahf
bound
pushf
add
hlt
out
and
js
imul
pop
sarl
call
or
jl
lods
inc
mov
sbb
insl
adc
push
lds
add
sbb
stos
jle
in
invd
mov
pop
fists
mov
sub
add
ljmp
cmp
push
jg
sahf
xchg
add
lahf
cmp
pop
or
xor
inc
in
push
fs
add
int3
gs
lret
push
leave
arpl
dec
out
enter
sbb
pop
add
xor
sahf
add
rorl
pushf
add
int3
out
xor
int
add
xchg
sub
jl
add
pop
or
jae
popf
inc
add
dec
dec
and
xor
cmpsl
inc
inc
leave
pusha
sbb
add
mov
call
cltd
xchg
jo
push
cmc
pop
add
ss
bound
fwait
mov
nop
push
and
push
loope
add
xchg
sbb
stos
lds
xor
cmp
add
dec
push
dec
cmp
pusha
or
xor
loopne
cld
add
mov
inc
lar
jne
dec
push
dec
adc
jae
sub
dec
sub
rorb
aas
pop
movlps
or
je
push
ds
sbb
pop
mov
cmpsl
ds
jb
sub
lock
lock
mov
add
cmc
rep
pop
jmp
dec
shl
push
mov
call
or
ss
sbb
add
inc
adc
mov
addl
adc
js
add
add
roll
stos
mov
mov
push
pop
in
sbb
iret
cld
popa
add
or
jns
das
adc
out
pop
cmp
insb
popf
jnp
ds
imul
arpl
or
push
cmp
jp
loopne
mov
mov
sbb
jne
test
sub
cmp
repz
xorl
jb
sbb
data16
fmuls
inc
push
and
cmpsl
sahf
faddl
push
push
ds
cmc
repz
outsl
jns
sti
push
loope
jae
arpl
in
sahf
jg
mov
dec
xchg
mov
cmp
sti
imul
imull
arpl
int3
and
bound
fidivl
test
mov
js
sarl
add
rorb
in
adc
std
xor
inc
idiv
aad
cwtl
and
mov
lea
daa
dec
outsl
jle
push
push
jg
mov
mov
test
add
add
bound
add
cld
xchg
in
mov
adc
les
or
push
dec
mov
push
push
sbb
nop
aam
imul
sub
mov
push
inc
or
divb
shrl
imul
jae
xchg
mov
leave
inc
mov
push
enter
jb
subl
adc
adc
incl
cmp
out
ss
int
clc
and
push
pop
mov
adc
das
stc
fwait
test
ret
inc
push
push
sbb
hlt
xorb
cmpsb
out
sub
outsl
pop
divb
test
stos
pop
scas
sub
push
cmc
test
mov
dec
outsb
jae
and
push
jp
outsl
or
pushf
pop
fisubrl
fisttpll
lahf
xor
jb
jmp
push
xor
jmp
pop
inc
clc
aas
das
adc
mov
jmp
leave
push
rcrl
mov
pop
sbb
mov
out
imul
mov
pop
xchg
fistpl
bound
leave
in
mov
pop
mov
cmc
hlt
ds
cmp
pop
xor
js
jl
and
out
push
dec
jno,pt
frstor
mov
lret
mov
adc
out
outsb
push
mov
dec
sbb
ljmp
push
cmp
pavgb
lcall
ret
outsb
pop
out
or
inc
in
inc
into
scas
lcall
fstpt
mov
lret
xchg
mov
outsb
gs
lods
pop
outsb
popa
repz
outsl
stos
sar
scas
mov
cmpsl
mov
xor
sarb
xor
aas
outsl
cmp
push
outsl
sub
mov
aaa
in
stc
or
in
xchg
in
pushf
fmull
push
mov
jl
call
repnz
jmp
xchg
sbb
insb
js
imul
cmpb
ret
and
dec
iret
call
popf
jns
cltd
jns
sub
sahf
mov
pop
sbb
std
movsb
add
xchg
je
mov
es
jbe
cmp
fistpll
mov
sub
mov
sbb
int
push
add
or
insl
loop
adc
xchg
mov
mov
orl
sbb
add
jno
jbe
stc
out
jns
sbb
enter
in
sbb
cltd
clc
ljmp
jp
les
jg
imul
add
test
movb
nop
sub
sub
pushf
mov
stc
jl
enter
mov
imul
stc
xchg
in
fsts
ror
sub
fmul
cli
fcmovb
mov
lock
xchg
rorb
jl
jg
mov
mov
dec
sbb
add
add
dec
aaa
push
imul
sbb
push
mov
lahf
sub
fimuls
inc
insl
out
adc
lods
lahf
mov
xchg
mov
testl
lock
enter
repnz
pop
mov
or
add
sbb
pop
push
lret
sub
pop
je
pop
jl
out
mov
and
dec
out
mov
xchg
ja
dec
fadds
sbb
daa
xchg
clc
sbbb
pop
pushf
mov
cltd
outsb
push
shl
repz
pop
subb
pop
cli
aaa
mov
mov
ja,pn
xchg
scas
pushf
cld
sti
jmp
push
push
fcomp
les
pop
mov
test
inc
stos
pop
out
int3
aad
xlat
aam
fistpll
xor
js
into
lock
fwait
lods
fwait
push
pop
pop
leave
pop
mov
cmp
rcll
in
mov
push
jbe
aaa
cld
into
movsl
cmp
int3
fwait
add
mov
stc
push
scas
rorl
fcmovnbe
mov
xor
bound
pop
jp
scas
mov
add
inc
sbb
mov
repnz
andb
test
inc
mov
adc
mov
push
inc
xor
mov
sti
jge
test
cmpsb
xor
inc
dec
push
pop
mov
cmp
inc
cmp
dec
or
mov
jl
dec
pusha
pop
mov
lret
jnp
imul
pop
jns
mov
aaa
arpl
mov
stos
cmp
movsb
push
pushf
loopne
stos
jno
xchg
fs
sub
out
in
xor
fidivs
or
sub
int
mov
pop
push
xchg
testl
into
pop
xor
lea
fprem1
sub
jmp
cs
jmp
push
gs
cmpsb
and
int
lahf
push
out
jecxz
inc
mov
lods
xlat
or
shlb
jo,pt
adc
pop
lds
or
lret
push
enter
push
push
aad
mov
and
loope
stc
inc
hlt
test
js
aaa
outsb
aam
xchg
push
xor
imul
hlt
sti
mov
mov
xchg
fnstsw
fld
les
push
fidivrs
sbb
das
xor
inc
or
lods
popa
popa
adcl
mov
bound
pop
loope
mov
mov
lret
fidivrs
dec
mov
jl
rcl
int3
push
cmc
insl
xor
cmp
loopne
adc
lcall
cvttps2pi
loope
rep
push
in
dec
nop
jl
dec
mov
jno
fcompl
xchg
pushf
mov
sbb
fists
inc
mov
subb
push
cmpsb
sub
nop
sbb
int3
cmc
xchg
push
nop
sub
jo
adc
pop
push
xlat
mov
ret
mov
sbb
jne
inc
add
pop
fdivr
fs
rorb
adc
sti
adc
mov
adc
pop
ret
pusha
adc
rolb
xchg
push
popf
iret
add
mov
sti
mov
sti
jp
lret
mov
jbe
cmpsb
and
into
xchg
dec
mov
mov
jge
pop
das
sbb
mov
fsubrl
add
test
int
sbb
pop
adc
negl
mov
jnp
jecxz
dec
mov
inc
ljmp
cmp
push
xchg
mov
dec
jbe
cwtl
cld
imul
fs
mov
pop
orb
popa
or
dec
xor
inc
nop
jae
insl
jae
dec
push
ljmp
stos
xchg
mov
mov
inc
sbb
push
cmp
push
cli
cmpb
roll
outsb
lar
nop
sbb
mov
and
ds
dec
fs
mov
dec
add
or
xlat
icebp
cmp
fs
push
cmp
out
push
sti
stc
mov
mov
sbb
dec
dec
push
cmp
aam
mov
fsubl
add
and
es
mov
sti
pop
xor
dec
and
in
aas
xchg
add
stos
movsl
xchg
mov
cmp
dec
add
xlat
das
sub
pop
or
loope
sub
sarl
inc
mov
dec
ret
lea
xchg
mov
push
outsb
pop
sbb
iret
into
jmp
cltd
dec
std
cltd
hlt
stc
pop
mov
xor
mov
jge
mov
lret
aas
pop
je
xchg
mov
mov
or
test
xor
hlt
mov
mov
mov
mov
jo
sbbl
adc
stos
insb
testb
push
mov
inc
ret
negb
inc
xor
xchg
push
lahf
jp
aaa
outsb
fs
sub
fst
test
imul
pop
xor
push
mov
jb
mov
andl
xor
push
inc
lahf
jp
pop
loop
push
fwait
or
adc
mov
mov
jl
js
fld
cmpsl
fisubs
adc
cmp
aaa
fwait
sar
dec
mov
or
fdivrs
lcall
div
in
aas
adc
mov
test
fs
cli
mov
mov
mov
fiadds
and
fxtract
dec
xor
pop
popa
jp
ret
fadds
or
cmpsl
mov
stos
pop
out
in
repnz
popa
js
loopne
jbe
adc
push
add
int3
jne
dec
mov
lock
lock
fadds
cmp
xchg
mov
subl
sub
sbbb
fcoml
fs
test
cmp
out
repz
inc
pop
dec
sbb
cltd
pop
cs
movsl
fwait
xchg
fiaddl
mov
cwtl
shrl
mov
bound
sub
cmp
popl
add
lods
jmp
xchg
adc
rcrl
jp
dec
adc
jno
add
mul
and
test
stos
outsl
test
aaa
jecxz
push
movsl
mov
fistpl
imulb
sub
orb
shlb
data16
mov
pop
pop
jmp
out
jl
or
jg
add
mov
clc
out
mov
nop
jle
cmc
jns
out
sbb
loope
mov
push
jl
add
outsw
pop
cs
sahf
jbe
fs
push
ds
lods
cld
sbb
xchg
pop
js
lcall
jmp
out
push
inc
push
pop
xor
sbb
add
std
xchg
pushf
pop
js
sub
xor
inc
cmp
movsl
int
js
cmp
jo
pop
std
jne
pop
repz
loop
xor
out
sub
cltd
rorb
popa
out
daa
addr16
jle
outsl
add
pusha
dec
dec
jmp
mov
test
mov
int3
pushf
mov
and
cltd
or
lret
shlb
push
xchg
pop
dec
cmp
out
add
nop
xor
mov
dec
in
outsl
out
lock
into
sahf
aas
les
jp
adc
in
jnp
push
cld
stc
cmp
inc
mov
or
xchg
inc
je
mov
add
bswap
dec
xchg
dec
or
lods
lds
test
das
inc
roll
pop
cmp
das
mov
shrd
fsubl
sbb
imul
xor
incb
movsl
aam
nop
dec
and
arpl
jbe
pop
popa
rcl
insl
mov
jle
sahf
sbb
pop
cwtl
pop
test
push
dec
insb
jae
test
mov
sarb
sti
xchg
addr16
push
fldl
mov
adc
cltd
xchg
imul
push
add
pusha
push
add
push
add
mov
xor
dec
test
sbb
and
sti
mov
cmp
sub
mov
cmc
mov
loop
mov
or
js
inc
dec
testb
call
sarb
mov
pop
les
jmp
or
bnd
push
inc
int
jnp
sub
cmp
xchg
inc
sarl
call
aas
imull
pop
jbe
mov
push
cld
cmp
add
inc
rol
and
push
loope
or
flds
cmp
sbb
sub
fldcw
dec
cmc
push
pop
adc
les
push
cmp
enter
sbb
orl
cmp
lock
mov
push
ljmp
gs
ljmp
es
and
imul
mov
push
push
out
fs
mov
push
gs
or
popf
jbe,pt
rcrb
dec
mov
mov
adc
adc
imul
scas
nop
loopne
stos
mov
add
stc
call
hlt
pop
bound
pusha
dec
sub
and
or
xor
rcrb
aad
outsl
push
push
loope
out
aad
push
inc
dec
cmp
push
cli
ss
xchg
mov
dec
dec
bound
jge
fidivl
xchg
push
fistpll
dec
fld1
adc
push
dec
mov
insl
pop
lcall
pop
fmuls
ja
movsl
aas
adc
stos
test
mov
sub
nop
xor
cmp
out
notl
push
or
sti
add
xchg
inc
cmpsb
inc
loop
mov
jbe
inc
and
cld
jne
clc
cmp
pop
dec
loopne
nop
std
jne
push
jo
add
add
out
push
jno
xor
cltd
xor
ds
cmp
jne
ret
adc
push
inc
popa
cmp
xchg
or
jae
inc
and
mov
dec
pop
jae
mov
sub
jno
iret
push
adc
cld
xor
sbb
add
fs
cmpsb
in
or
repz
push
inc
stos
and
in
outsb
push
scas
out
xlat
rcll
outsl
ret
mov
cmp
fcompl
xor
pop
xchg
jmp
lea
loop
mov
daa
aad
or
call
sub
pop
mov
mov
push
enter
aam
sub
dec
xchg
outsl
pushf
jbe
mov
push
pop
xchg
stos
fistpll
and
jg
push
push
sbb
push
cmpsl
xchg
pop
xchg
mov
xor
xchg
lahf
lret
xor
and
jmp
in
sub
dec
mov
movsl
out
imul
sbb
add
jno
adc
xchg
cmc
imul
push
fimull
push
cmc
cmp
in
call
add
and
and
adcl
push
pushl
dec
xor
sub
test
cmp
mov
icebp
aad
xor
lahf
sbb
ds
sar
xchg
inc
cmc
ret
push
cmpl
into
mov
rcrl
lock
mov
movsl
mov
push
nop
cmpsl
mov
std
fdivr
unpckhps
or
mov
sbb
insb
jl
ja
mov
sti
shrl
sbb
addr16
and
ss
cmp
in
push
lock
iret
pop
jns
adc
and
dec
push
sub
xor
cmp
adc
cmp
rolb
mov
imul
push
pop
xchg
or
pop
xchg
jmp
sub
into
jo
push
jb
push
push
pusha
pusha
mov
cwtl
out
outsb
and
cmp
mov
notl
call
test
mov
and
pop
pusha
add
cwtl
cmp
frstor
mov
xchg
fdivrl
dec
lea
sti
jae
enter
fnstenv
lret
xlat
jb
dec
pop
mov
lret
sub
mov
xor
movsb
nop
std
in
inc
dec
pop
mov
lods
mov
nop
sub
add
les
es
lods
leave
cld
cmp
sub
jle
xor
add
pusha
loope
fs
insb
movsb
mov
jge
mov
ret
pushf
or
pushf
cs
fcmovb
ds
sbb
xchg
lds
decb
pop
out
sti
ja
mov
testb
seta
xchg
push
es
cmp
jp
jns
jo
cmp
jmp
push
add
leave
dec
add
negl
mov
aas
movsl
daa
xor
aad
int3
je
inc
popl
add
or
sub
sbb
stos
jmp
arpl
and
lods
mov
push
push
cmp
fidivrl
insl
cmp
std
insl
subl
mov
popa
aam
out
loope
pop
loopne
inc
push
mov
adc
insb
sarb
xor
push
insl
mov
outsb
repnz
inc
mov
outsb
push
movsb
fs
pusha
push
clc
fldcw
fists
adc
insl
sub
dec
cltd
and
xchg
call
push
push
dec
or
sbb
test
loop
mov
cmp
lods
dec
sub
and
dec
push
rolb
jl
jnp
insb
cltd
rcrl
mov
movsl
xchg
and
imul
cmp
cmp
add
scas
mov
mov
in
push
and
mov
jns
xor
cld
rorb
adc
push
sub
test
in
jb
fwait
out
sub
mov
dec
inc
pusha
xchg
divl
push
push
mov
test
xor
int3
test
aaa
mov
sbb
pop
inc
adc
mov
mov
or
aaa
loope
or
mov
inc
inc
dec
cmp
pop
fdiv
sub
stos
pop
push
sbb
mov
cmp
mov
int3
mov
cmpsl
data16
sbbl
ficomps
jp
jl
rol
pop
cwtl
dec
ja
pusha
dec
ja
adc
sbb
fistl
cs
push
adc
and
fildll
jp
sbb
data16
test
into
mov
out
xchg
in
jg
repnz
push
cmp
shll
into
pop
addr16
imul
scas
pushf
pusha
push
lcall
shlb
xchg
jbe
je
je
outsb
pusha
push
push
cmp
add
xlat
lods
xchg
loopne
popf
je
fldl
jl
cwtl
test
jnp
dec
adc
xor
out
subb
jb
add
mov
imul
mov
test
in
sub
sub
or
hlt
cmp
ret
lahf
push
pop
lret
xchg
xchg
mov
in
ljmp
push
rorb
push
jecxz
push
ret
adcl
push
jl
into
and
outsl
into
push
rcr
test
add
dec
inc
stos
rcrl
xor
flds
jecxz
fldt
insb
addr16
addl
repnz
mov
ret
mov
push
in
inc
imul
mov
and
sbb
aaa
pop
push
xor
ret
fisttps
in
enter
daa
cmpsb
je
outsl
inc
sti
movl
aaa
movsb
out
je
fnstcw
push
aad
or
mov
jbe
jns
cwtl
mov
inc
mov
cmp
in
inc
dec
das
call
jb
ds
and
xor
loop
adc
cmpsl
repz
add
out
scas
es
adc
adc
lret
mov
mov
inc
lods
jp
push
jmp
nop
xchg
mov
adc
pop
adc
and
stos
sahf
push
into
mov
test
imul
jbe
dec
sti
pop
leave
out
movb
and
insb
pop
add
push
jmp
cld
sub
lea
rclb
sub
nop
out
clc
jbe
outsb
or
lock
or
mov
ret
lods
lock
adc
xchg
es
or
cmpsl
lods
xor
pop
or
pop
sub
sahf
mov
idivl
inc
in
or
or
aam
test
rcrl
xor
dec
adc
dec
leave
pop
scas
dec
jmp
push
lret
push
aas
pop
mov
adc
mov
mov
jae
enter
gs
dec
mov
outsb
mov
js
cltd
jns
pop
inc
and
sti
cmp
jmp
mov
insl
adc
add
hlt
xor
sbb
and
pop
in
popf
aaa
cmpsb
pop
call
push
pop
sar
daa
mov
rcr
test
mov
inc
push
jl
in
mov
jge
and
ds
and
test
dec
pop
loope
mov
ret
test
xor
loope
and
pop
ds
xchg
daa
je
cmpsb
pusha
dec
mov
inc
sub
mov
in
jnp
push
cmp
iret
fists
idiv
sub
je
jae
es
and
imul
out
jmp
outsl
outsl
inc
xchg
inc
out
into
out
xlat
mov
movsb
rcrl
lcall
int3
je
aad
add
jl
repnz
mov
push
dec
pop
jle
jo
insl
out
sbb
inc
pusha
or
xor
jne
dec
inc
andb
sub
xchg
push
lea
pop
loop
sahf
adc
mov
sub
mov
jge
movsb
xor
data16
ds
insb
repz
xor
imul
mov
je
mov
push
mov
repnz
mov
in
test
scas
movsl
cmp
loope
mov
jbe
pusha
into
mov
mov
imul
push
add
popf
inc
cmpsb
inc
xchg
fstpt
call
or
push
cltd
js
pusha
in
mov
aad
pop
add
xchg
mov
dec
cmp
and
add
repnz
and
int3
mov
out
add
or
addr16
cmp
clc
pop
mov
pop
push
mov
sbb
iret
js
insb
rcl
int3
stos
and
dec
jne
loop
add
sbb
mov
cmpl
adc
jmp
lret
cmp
outsb
inc
add
fcom
dec
pop
dec
pop
jns
dec
aad
cmp
les
inc
sub
sahf
cmpsb
cltd
outsl
add
repz
or
push
testb
mov
dec
mov
mov
loopne
jb
jno
jge
jmp
or
push
jns
stc
mov
xchg
inc
mov
fucomip
push
mov
rorl
pop
fadds
mov
js
xchg
jbe
scas
mov
cmp
mov
sub
ja
mov
cwtl
daa
fnstcw
jbe
fwait
out
mov
mov
loope
scas
and
xchg
sub
sahf
mov
xchg
fimuls
fdivrl
lea
dec
jl
mov
mov
push
dec
mov
mov
mov
pop
hlt
or
push
pop
dec
out
push
test
mov
ja
loope
dec
cmp
pop
rol
pop
subb
fdivs
inc
jg
sub
cmpsb
shll
into
scas
sbb
cmc
mov
or
jle
out
adc
inc
lret
pop
cmp
movsb
cmpsb
icebp
in
andb
cli
data16
mov
inc
cmpsl
fucomp
sahf
add
insb
or
adc
mov
and
in
lods
imul
inc
inc
out
cmp
std
xchg
fwait
xor
in
lods
push
pop
sbb
jnp
add
jo
dec
adc
pop
cmp
aas
sub
daa
pushf
outsl
loopne
xlat
fisubl
mov
test
mov
dec
cltd
pop
stos
add
inc
rorl
mov
daa
movsb
out
inc
jmp
aam
pusha
pop
push
sub
sub
mov
inc
fwait
ds
xorb
push
dec
or
cmpsl
out
xchg
dec
test
push
or
cmp
inc
push
xchg
cli
aam
ja
hlt
out
jp
pop
in
insb
sbb
test
dec
lock
sbb
cld
and
or
xchg
mov
pop
scas
adc
pop
jge
lock
addb
or
or
ljmp
xlat
mov
and
sahf
adc
stc
push
push
add
les
test
cmpsl
dec
test
cmp
xlat
cmpsl
sub
data16
dec
push
inc
iret
dec
icebp
sbb
pop
imul
gs
in
or
sbb
sbb
cmp
xchg
inc
dec
jp
insb
lock
data16
scas
call
and
cmpsb
test
sub
mov
xor
xor
int3
sub
pop
xchg
push
push
push
push
mov
pop
push
jge
add
lahf
sbb
mov
in
add
cmp
out
cli
xchg
or
ds
pop
repnz
dec
in
lods
test
push
ds
sahf
jno
in
mov
and
test
cmc
in
leave
cwtl
daa
out
push
mov
outsl
das
pusha
mov
fadds
mov
push
mov
jnp
pop
dec
push
in
lahf
mov
ja
cmp
js
adc
pop
push
pop
or
fstl
xor
or
sub
movsb
sbb
ror
mov
adcb
ss
adc
mov
jnp
pop
xchg
sbb
aaa
inc
cmpsl
rorb
ja
shll
xchg
fsub
subb
leave
cmp
add
cmp
adc
xor
insl
xlat
mov
rcrb
lcall
cltd
mov
cmp
xchg
and
es
jg
xor
xchg
sbb
std
mov
out
and
pop
in
push
sbbb
and
add
nop
aas
dec
cmp
out
mov
mov
lds
cmp
push
je
ljmp
mov
ficoml
out
gs
add
jp
push
push
add
sub
pop
cmp
xchg
inc
mov
mov
adc
popf
daa
js
in
inc
loopne
xor
scas
xchg
add
mov
bound
scas
or
pop
inc
inc
movsl
xorl
push
or
repz
lock
or
push
test
aad
jmp
hlt
sub
pop
mov
inc
aad
mov
mov
clc
insb
xor
xor
cmpb
sub
pop
pop
stc
dec
fs
pop
jno
add
pop
adc
cmc
insl
dec
stos
movsl
mov
jns
add
dec
div
mov
push
xchg
push
shl
xchg
shrb
inc
iret
add
sahf
sbb
sub
cmp
mov
inc
push
es
test
std
scas
inc
ret
pop
push
sub
sub
push
add
gs
cs
adc
cmp
shlb
shrb
jge
or
mov
scas
mov
imul
pop
xor
mov
cmpsb
orb
je
lret
or
add
das
stos
or
cmp
les
inc
in
pop
mov
jp
fwait
pop
xorb
or
mov
or
mov
ljmp
mov
stos
imul
mov
imul
sti
imul
sub
jbe
cld
pop
cmp
fbld
out
mov
es
add
jns
jmp
push
dec
inc
mov
sar
inc
jns
push
adc
mov
and
sahf
push
adc
out
adcl
outsb
popl
dec
xor
sahf
nop
pop
pushf
dec
fnstcw
xor
xchg
cmp
insl
cmp
fidivrl
xchg
push
dec
int
mov
adc
push
mov
jmp
rcll
loopne
rcll
out
lock
pop
sar
and
jb
fsubrs
dec
mov
mov
out
outsb
rolb
push
mov
dec
sub
inc
addl
adc
jl
popa
cmp
ficomps
mov
imul
lcall
in
aam
lret
inc
dec
xchg
sbb
sub
cmp
push
and
push
or
xor
jo
outsl
dec
push
outsb
dec
mov
test
aas
mov
imul
mov
ljmp
scas
or
enter
add
cmp
stos
fwait
add
and
dec
jbe
fwait
and
pop
xor
xchg
ret
pop
decl
outsb
push
mov
int
in
sbb
inc
cmp
js
aaa
mov
or
sbb
daa
mov
adc
bound
push
out
inc
inc
mov
jbe
test
js
xchg
mov
scas
or
addr16
adc
negl
mov
movsb
dec
insl
inc
les
jb
inc
mov
scas
cs
push
jb
and
sbb
push
mov
mov
cltd
lcall
gs
roll
mov
sti
inc
jnp
add
jb
push
dec
in
dec
popa
mov
push
push
clc
pop
push
push
sbb
cmpsl
ds
push
ljmp
add
leave
adc
mov
leave
das
pushf
inc
xchg
cmp
xor
inc
add
rclb
inc
ret
out
cmp
mov
cmp
xchg
test
push
pop
add
cmpb
mov
pop
pop
ds
in
fyl2x
pop
div
incl
ret
repnz
test
jnp
sbb
jmp
mov
mov
test
push
icebp
inc
cmp
test
jb
aas
pushaw
test
sbb
es
jle
jae
and
jle
sub
xchg
scas
pop
push
sub
xchg
xor
xor
cs
or
stc
out
adc
cmpsl
push
adcl
cmovne
mov
push
mov
aaa
or
bound
inc
mov
or
jo
repz
jl
or
ss
lret
push
dec
lods
stc
mov
loope
sbb
loopne
out
arpl
mov
or
mov
and
mov
pop
or
or
sbb
jbe
ds
pushf
arpl
es
push
lock
das
ret
push
xorl
jo
das
pop
cvtpi2ps
or
mov
scas
adc
loope
sbb
mov
ja
mov
xchg
ja
shl
aaa
lahf
outsb
xchg
xchg
test
out
or
dec
sahf
mov
loope
jge
mov
jl
rcr
out
push
enter
lds
and
jmp
inc
fsubs
js
pop
jmp
mov
stos
mov
dec
adc
lret
test
sbb
enter
or
mov
push
sbb
loop
inc
es
aad
sbb
minps
js
pop
insb
in
pmulhuw
mov
sbb
fsubl
out
rclb
lcall
and
int
fwait
xor
mov
cmp
fcmovb
sbb
lods
mov
sbb
or
jle
mov
popf
shlb
fisttps
push
into
sahf
cli
adc
and
xchg
in
sub
push
mov
test
pushf
mov
inc
or
popf
mov
jae
sarb
pop
addr16
adc
mov
inc
push
push
pop
int
push
icebp
popa
xor
imul
pop
jne
shll
addr16
in
and
sti
sub
lret
pop
pop
cmp
and
dec
mov
pusha
nop
loop
xor
in
pop
and
and
outsb
and
inc
adc
cli
sbbl
push
fldcw
pop
mull
lcall
push
inc
in
or
pop
popa
ffreep
arpl
pusha
or
inc
mov
cmp
lcall
outsl
in
mov
adc
fsubr
std
stos
mov
xchg
jae
jb
jb
int3
mov
jns
js
sub
or
stc
pop
jnp
mov
mov
dec
mov
stos
and
cmp
cmpsb
mov
sub
or
mov
imull
xchg
pop
je
cmp
popf
subl
mov
vaddsubps
cli
aaa
dec
push
fadds
xor
push
andl
dec
test
dec
mov
lods
push
subl
mov
xchg
cltd
jle
divl
adc
stos
push
and
sub
iret
jb
lea
xchg
mov
jle
adc
mov
ss
mov
cmp
fcmovnbe
sub
in
test
adc
inc
cld
adc
inc
cmc
cmpsl
adc
lahf
scas
jge
jmp
and
aaa
lds
sub
pop
mov
pop
icebp
dec
movsb
and
pop
jmp
jl
adc
mov
arpl
pop
mov
dec
jae
pop
lods
jle
imul
rcll
out
inc
ds
lret
into
popf
loop
pop
nop
dec
inc
and
pop
jb
rcrb
xchg
xor
aas
push
test
xchg
decl
xchg
cld
jge
lret
rol
or
xchg
lods
es
gs
push
add
ret
mov
pusha
ja
xor
js
cmp
out
mov
addr16
fsubs
movsl
insl
xor
mov
adc
inc
jo
lods
add
loope
push
adc
add
mov
push
xchg
pop
xchg
pushf
sub
and
sarb
push
dec
movsb
cmc
pop
mov
movsl
add
pusha
sbb
or
mov
and
pop
dec
add
out
push
mov
mov
call
mov
xor
leave
inc
pop
push
dec
lea
testl
jmp
dec
test
add
ds
xor
mov
xor
dec
and
fsts
das
mov
loop
dec
mov
out
dec
decb
mov
imul
fdivs
xor
mov
loopne
shlb
leave
pop
adc
sbb
xor
addr16
out
addr16
xor
mov
pop
not
adc
jne
orl
pop
js
dec
sub
ds
add
dec
inc
add
cwtl
push
enter
imul
shl
lret
std
jp
repnz
mov
cld
xchg
jnp
mulb
add
in
xchg
lret
pop
mov
adcl
das
sub
sarb
mov
das
addr16
xchg
aaa
daa
push
movsl
mov
push
add
jne
bound
outsl
jns
xor
testl
cli
sub
pop
sbbl
xchg
pushf
sub
and
dec
cltd
fstps
in
inc
das
popf
sbb
nop
fsubr
in
repz
bound
out
inc
or
data16
cld
sbb
push
mov
push
fs
fdivr
cmpsl
jbe
pop
lock
add
xchg
inc
ss
rorl
mov
dec
or
ds
fisubs
jle
popf
xchg
addb
pop
xchg
loope
sti
push
adc
mov
inc
xchg
fnstenv
cmp
push
push
sub
insb
loop
lods
jle
and
mov
cmp
movsb
push
xor
mov
jae
imul
mov
xor
xor
add
adcl
imul
fmuls
addl
shrl
pop
mov
mov
sbb
and
inc
pushf
movsl
daa
pop
addr16
xchg
lcall
inc
shrl
jno
lret
stc
rolb
cmp
pop
jae
aad
or
imul
adc
push
mov
pop
enter
ja
xlat
add
in
pusha
ret
xor
nop
and
nop
fists
dec
push
or
mov
sbb
lahf
jmp
push
and
jnp
mov
jo
pop
mov
insl
bnd
movsl
sub
jge
push
pop
aas
sti
sub
sbb
cmp
or
ficompl
outsb
repz
dec
push
add
fsubs
sahf
mov
popa
adc
les
out
lods
sahf
js
xor
mov
rcll
in
sub
sbb
xchg
inc
das
adc
testb
mov
or
scas
xchg
lds
movsl
sub
ljmp
cmpsb
add
xchg
and
jmp
sbb
inc
sti
and
mov
sti
ret
rcrl
sbb
mov
jecxz
jmp
mov
cld
out
popa
sub
adc
jbe
jo
cmc
lahf
or
and
mov
cmp
cs
fs
loop
out
test
add
push
pop
push
and
mov
rolb
adc
xchg
outsl
nop
arpl
inc
sbb
jae
dec
cs
lret
in
adc
jne
fs
aas
cmp
sub
lods
mov
mov
mov
xor
icebp
and
in
xor
push
dec
dec
pop
movsb
lods
mov
stos
repz
pop
ss
subb
loopne
jnp
je
pusha
sysret
mov
and
shr
stos
or
or
adc
in
loope
into
pop
jl
xchg
sub
cmpsb
std
ja
andl
lcall
add
push
lds
push
dec
mov
sbb
inc
test
mov
jae
addr16
adc
fnstenv
adc
fisubrl
stos
pop
fldcw
movsl
pop
aad
stc
pusha
mov
push
psubq
pop
popf
push
or
jo
and
cltd
jmp
ja
shlb
cltd
hlt
or
ss
mov
in
add
sub
inc
jecxz
divl
clc
out
cmc
mov
and
je
dec
and
lods
push
xchg
popa
mov
pop
sub
bound
jmp
or
sbbb
inc
dec
mov
sbb
addr16
fisttpl
aam
and
mov
jmp
jne
xchg
sub
pop
xor
push
sub
lahf
add
les
int3
mov
mov
in
dec
xor
outsb
mov
dec
add
and
push
hlt
imull
clc
pop
lahf
mov
stos
sub
pusha
test
jbe
push
mov
adc
xlat
mov
sbb
aam
sbb
or
mov
lret
pushf
ss
adc
dec
xchg
iret
sbb
push
xchg
cmp
or
jne
cmp
out
cli
scas
out
es
ret
ss
cmc
dec
cltd
out
in
mov
cmp
mov
cmp
int
js
imul
insb
fcomip
or
cmc
sub
sahf
mov
outsl
mov
mov
sub
push
hlt
xor
stos
dec
adc
int
pop
lahf
into
cld
enter
lods
sbb
mov
js
xor
sub
ret
mov
fists
lea
sahf
orb
mov
xchg
cmpsl
jbe
jb
xchg
in
fists
pop
mov
jmp
mov
in
mov
imul
inc
test
sub
xchg
add
or
sbb
sbb
mov
cmp
sbb
lret
andl
hlt
push
ds
enter
loope
dec
cmp
sar
adc
mov
push
jp
sbbl
pop
adc
jmp
or
jg
add
sbb
mov
adc
and
pop
sub
stc
cltd
push
jl
ret
jnp
mov
dec
fs
mov
xchg
je
mov
fistl
push
push
mov
inc
cmpl
out
adc
cmp
mov
mov
add
sub
jle
pusha
loope
scas
push
jae
pop
out
dec
mov
mov
lahf
mov
jmp
int3
jne
int
dec
dec
lret
inc
xchg
sti
nop
jo
ss
fstl
dec
js
add
sub
inc
sbb
fidivl
movsb
pop
xor
icebp
and
and
outsl
jmp
scas
mov
and
scas
mov
xchg
pushf
clc
cmp
and
or
push
test
in
or
adc
cmpsb
and
icebp
cmp
mov
mov
jae
push
or
cmpsl
mov
or
sarl
or
fsubl
or
data16
inc
lea
push
sbb
leave
and
mov
sub
mov
les
aaa
jb
add
fs
sar
push
insl
adc
nop
mov
push
into
ljmp
or
scas
fsubl
inc
xor
push
in
mov
add
cmp
add
stos
lea
mov
mov
pop
push
cltd
cmp
mov
xchg
nop
push
popf
or
mov
adc
call
xchg
cli
and
adc
jno
popa
test
pop
mov
divl
adc
inc
jne
aad
mov
jno
cmp
cmp
mov
iret
lret
out
loopne
cmp
xor
int3
jo
data16
out
mov
jecxz
in
and
stos
jle
sub
push
outsl
out
daa
cld
adc
movsb
sbb
jmp
rclb
adc
add
mov
push
push
cwtl
lds
in
aad
es
pop
ficoms
jecxz
in
ja
fs
fcomps
adc
mov
insb
sub
xor
adc
mov
push
push
inc
clc
addb
lods
mov
jnp
int
xor
add
dec
dec
adc
add
cmp
out
jbe
cld
aad
jno
adc
mov
addb
xchg
pop
notb
ja
pop
out
call
push
lock
jle
les
nop
xchg
jbe
inc
inc
dec
push
pop
sub
sub
jge
imul
imulb
sub
arpl
or
aad
jmp
sub
push
rorl
cmp
sbb
ret
sti
pop
movsl
or
test
pop
fldt
or
mov
cmc
sahf
roll
aaa
mov
mov
mov
scas
filds
add
andl
rorb
dec
lods
repz
lcall
xchg
lds
out
hlt
or
fdivrl
or
xchg
and
xchg
dec
leave
movsl
int
int
fistpll
inc
mov
push
sub
xchg
xorl
adc
jae
loope
pusha
fimuls
adc
jmp
jae
in
sub
jo
outsl
mov
das
loope
dec
bound
push
scas
lret
mov
iret
xchg
rolb
mov
inc
cwtl
movsb
add
lcall
out
xor
fisubs
stos
int3
push
les
pop
and
cmp
add
xchg
lea
adc
jno
inc
subb
xchg
iret
fstl
jle
jp
cli
and
inc
sub
or
and
push
andl
in
data16
xor
mov
pop
mov
push
or
mov
insl
cmp
add
gs
fisubrl
fildl
or
mov
push
mov
dec
lds
aad
lret
and
adc
mov
mov
and
sbbb
or
mov
ds
sbb
in
cld
inc
jo
mov
pop
xchg
mov
sarb
ds
mov
or
stos
xchg
movsl
jg
jno
ds
mov
push
inc
imul
ret
js
push
inc
push
or
adc
inc
pop
add
pop
ljmp
loop
jmp
xchg
dec
inc
push
adc
adcb
daa
jae
push
icebp
lea
xchg
cmp
je
mov
mov
push
fcom
jo
cmpsl
push
mov
sbb
pusha
pop
repz
enter
and
push
sahf
mov
hlt
dec
mov
cld
ds
cmpsb
pop
jg
jnp
sbb
push
ret
gs
and
add
imull
add
stos
test
fsubrl
push
xchg
mov
dec
push
xlat
and
push
clc
stos
imul
add
mov
hlt
xchg
xor
mov
ss
in
mov
pop
jb
cwtl
mov
push
lock
cmpsl
sbb
push
inc
ret
sbb
mov
push
cmp
imul
and
out
push
add
js
add
lea
cmp
xchg
fmull
mov
iret
mov
ds
add
push
ret
fwait
cmpsb
shl
adc
pop
out
popa
sbb
lret
mov
cs
in
arpl
lods
add
and
add
sbb
es
pop
lock
lcall
sub
andl
out
pop
out
xchg
in
rorl
sahf
cs
repnz
in
in
push
dec
loopnew
and
xlat
add
lahf
gs
scas
scas
mov
adc
xchg
push
sarb
xor
pusha
les
jmp
inc
aam
inc
call
push
dec
sahf
nop
shlb
inc
stos
fsubrs
lret
loop
lds
add
in
lea
les
test
clc
inc
jl
adc
pop
push
fimull
loop
adc
sbb
inc
ja
xlat
out
mov
adc
orl
sbb
outsl
jle
add
adc
sbb
iret
jmp
pusha
mov
lret
sbb
stos
add
jecxz
jle
into
popf
mov
sub
jae
fs
jg
lds
jmp
rolb
push
sub
pop
xchg
test
mov
dec
mov
inc
inc
pop
cmp
and
sub
fimull
jmp
mov
stc
shrl
push
add
push
movsl
dec
popa
rclb
fs
jge
lock
outsl
insb
lret
stc
mov
jns
ret
leave
arpl
mov
daa
pop
cwtl
fsubrl
daa
adc
push
add
cld
cmp
ljmp
pushf
cmp
jle
popf
popa
adc
bound
mov
push
mov
lret
shll
add
push
daa
clc
pop
jg
push
insl
add
sub
cmp
test
lods
jle
ds
inc
pop
push
xor
aas
ret
mov
sub
push
mov
mov
jp
cmp
xlat
clc
add
lret
cwtl
jno
cwtl
rolb
bnd
cli
test
jecxz
int3
sub
mov
loopne
mov
xchg
lods
or
sahf
or
popf
xor
scas
xchg
xor
sub
mov
mov
dec
outsb
and
out
mov
push
sahf
pop
xor
mov
jns
imul
cmpsl
clc
lahf
or
push
in
stos
mov
test
mov
nop
out
xlat
lods
cli
jns
mul
outsb
mov
imul
test
or
inc
cli
push
insb
fldl
out
out
fwait
mov
or
cwtl
lods
mov
jno
int3
clc
nop
push
xchg
into
lods
dec
loope
add
rol
call
in
or
int
enter
xor
sub
cltd
ljmp
cld
call
cmp
ss
adc
andb
pushf
mov
cld
insb
sub
lahf
out
sub
xchg
fcmovnu
or
pop
pushf
and
sub
jecxz
pop
jae
cmp
dec
jle
aam
mov
cmp
add
testb
or
popa
pop
loopne
sbb
repz
xchg
jg
mov
add
xor
cmp
add
and
lahf
idivb
cwtl
push
add
popa
sub
insb
arpl
add
in
scas
inc
test
nop
sub
mov
jnp
idivb
incb
nop
add
sbb
push
cld
test
mov
out
test
mov
fwait
xor
call
popf
pop
mov
lods
insl
jo
and
push
xchg
dec
pushf
xor
xlat
daa
psubusw
and
mov
dec
sub
lcall
scas
adc
xchg
pop
push
xchg
xchg
pop
leave
popa
cmp
outsb
sub
xor
xchg
xor
in
or
mov
enter
lahf
adc
jnp
cwtl
push
in
mov
mov
int
adc
push
fwait
sub
and
repz
pop
aas
add
cmc
mov
dec
sbb
ljmp
cmpsb
enter
inc
pop
leave
fildl
in
inc
cmp
in
lahf
mul
test
jg
jle
pop
call
xor
pop
movsb
lods
mov
dec
ret
ficompl
pop
nop
push
mov
xchg
lret
cmp
and
inc
movsb
sbb
aad
pop
inc
out
cli
xchg
arpl
dec
sub
in
clc
xlat
das
in
int
cmc
insb
cli
rcrl
cmp
mov
arpl
or
xchg
jae
rol
cmp
ret
dec
lret
mov
std
ss
xchg
mov
jns
mov
pop
push
mov
xor
mov
pop
pop
hlt
mov
jns
xor
pushf
mov
xchg
mov
push
add
mov
seta
sarb
mov
addb
or
cmp
outsb
fnstcw
cmpsl
shlb
xchg
xchg
pop
xchg
pop
push
sbb
xchg
push
lret
jmp
addr16
stos
neg
addr16
fldl
pop
lds
out
sub
jae
sub
rorb
js
in
ror
scas
and
pop
jecxz
lds
dec
xchg
dec
or
lahf
push
xorl
lea
test
push
push
popf
sarl
hlt
rolb
mov
add
int
fisttpll
inc
lret
dec
test
insb
jo
push
sub
xchg
and
out
jl
jp
add
popf
or
cmovp
or
loopne
sbb
inc
dec
imul
mov
jle
mov
pushl
test
and
mov
cmp
int
testb
rorb
cmp
cmpsb
add
sub
je
test
leave
sbb
andb
push
inc
in
adc
xor
push
out
cmp
shlb
and
addb
dec
inc
pusha
iret
or
pop
call
inc
jbe
arpl
fsubr
pop
mov
xchg
add
dec
mov
sbbl
dec
jle
popa
xchg
xchg
fisttpll
ja
mov
cmp
mov
push
add
and
or
xor
call
lret
pop
ret
push
jmp
je
aaa
sahf
dec
imul
mov
divb
pop
mov
pop
pop
int
aad
dec
push
aam
sti
mov
xor
into
mov
xchg
add
lret
addr16
dec
dec
sbb
xchg
repnz
int
dec
add
pop
xchg
std
mov
mov
mov
mov
ret
loopne
addr16
xchg
popa
aaa
ret
stos
xchg
jl
lock
or
or
jmp
mov
lcall
cltd
clc
xchg
inc
lahf
and
test
lds
mov
adc
popa
cwtl
test
mov
loop
mov
xchg
stc
mov
shl
add
mov
lret
outsb
idiv
inc
pop
jle
dec
shl
pop
mov
push
lcall
cmp
out
xchg
jmp
inc
loope
sub
shlb
xchg
mov
loope
jns
test
test
add
sub
mov
sbb
xchg
pop
rcrl
mov
mov
setg
xchg
jne
sub
fmull
sub
sub
mov
and
bound
add
mov
fldl
shl
push
scas
and
enter
lcall
sbb
sub
lock
jae
add
lret
cs
inc
in
xchg
adc
sub
xchg
push
inc
test
hlt
fisubl
xorb
lret
xor
out
xchg
test
das
mov
int
scas
rol
pop
clc
and
outsb
repnz
sub
jnp
dec
and
aad
aas
cmp
pop
inc
and
hlt
pop
mov
imul
push
mov
or
cld
xchg
add
dec
fisttpl
inc
int3
inc
outsb
ja
jns
mov
cmp
pop
or
ja
loop
jecxz
and
pusha
pop
push
iret
hlt
shrl
popf
push
dec
mov
sub
lret
pop
ja
std
lds
pop
xchg
push
neg
bound
stc
xchg
adc
cmp
dec
popf
fidivs
xchg
iret
dec
dec
jno
or
jnp
test
ss
mov
outsl
mov
or
mov
xchg
loop
jbe
data16
mov
jp
mov
jns
inc
adc
sbb
std
insl
ds
clc
je
xchg
test
inc
cmp
add
mov
add
or
push
jbe
out
jns
mov
les
cwtl
jg
imul
imulb
mov
push
int3
ret
rcll
loop
repz
jecxz
sbb
addr16
xor
cmp
cmp
cmpsb
pop
outsb
push
fwait
out
ficoml
flds
in
outsl
out
pop
xchg
pop
dec
mov
fldt
aam
mov
mov
jmp
rorl
pop
out
movsb
inc
and
mov
or
mov
mov
xor
shl
nop
xchg
mov
stos
inc
push
cmp
scas
pop
push
out
sub
lods
aaa
jmp
ss
lock
enter
ds
jg
and
push
clc
xor
mov
cmp
in
dec
lods
pmaxsw
ss
push
pop
xchg
filds
test
ficoml
mov
cld
mov
or
adc
cmp
sub
xor
jmp
mov
add
fwait
addr16
fiadds
enter
xor
jmp
dec
push
les
jnp
or
sysexit
insb
or
ja
in
mov
rcll
mov
push
pop
xchg
rcrl
pop
and
int3
outsl
shl
daa
adc
or
add
cmp
enter
push
cmpsb
push
cli
aaa
test
or
xor
shrb
xor
int
pop
jae
add
jb
loopne
into
push
lret
insl
push
fsubr
adc
sbb
add
faddl
scas
inc
xchg
and
fidivs
jmp
mov
and
ss
push
mov
cmp
sub
repnz
cmpsl
bound
popa
and
adc
js
aam
push
mov
jecxz
push
cwtl
call
dec
push
icebp
test
imul
aad
fsubrs
insl
lods
or
pop
mov
mov
clc
pop
push
jp
pop
outsb
lcall
fwait
inc
fnstcw
imul
adc
and
in
mov
cmpsl
xchg
sub
push
and
std
popa
mov
cld
imul
or
and
movntq
inc
in
pusha
iret
xor
sub
in
pop
cld
push
xor
mov
insl
test
adc
pop
inc
pop
or
lea
ss
icebp
dec
mov
out
mov
mov
lret
add
daa
movsl
addl
pop
add
inc
mov
out
xor
mov
loop
jp
mov
repz
repz
jb
xor
insl
dec
or
int
pop
dec
mov
xchg
nop
out
sub
or
mov
nop
push
inc
pop
es
push
inc
loopne
andb
in
mov
lock
jge
dec
and
xor
push
xor
sahf
push
jno
je
push
rcrl
movl
vmovaps
addr16
adc
rcll
outsl
mov
add
pop
test
sub
xchg
call
inc
mov
jmp
xchg
pop
inc
loop
pop
jne
mov
mov
insb
in
mov
mov
mov
rcl
cli
int3
ror
dec
push
iret
out
mov
in
push
lahf
or
ljmp
nop
mov
sbb
iret
jg
movswl
cltd
out
push
pop
push
shrb
fbstp
insl
xor
xlat
ss
in
adc
ret
xor
in
mov
lods
ss
push
repnz
jae
and
jb
inc
in
pop
jno
xlat
in
aad
out
fcompl
adc
into
fucomi
pop
inc
pop
jge
ljmp
ficompl
inc
mov
std
fsubrs
inc
arpl
fldt
aad
int
bound
aad
incl
movsb
xchg
shlb
cli
mov
or
leave
inc
popa
pop
test
inc
sub
sub
insb
sbb
push
sbb
test
mov
adc
fldl
cmpsb
cmpsb
xchg
sti
int3
jge
mov
movsl
dec
jb
test
dec
ja
testb
in
push
sbb
sbb
mov
dec
in
mov
mov
cli
jns
mov
or
test
dec
cmp
sbb
mov
mov
xor
daa
mov
fwait
or
test
mov
push
loop
and
rcrb
sbb
std
in
pop
lock
adc
xchg
xchg
cmp
adc
mov
jle
shlb
shrb
mov
cmp
jbe
pop
push
mov
lock
out
cmp
testl
pop
push
dec
cmpsl
pusha
ljmp
js
xor
jo
les
or
and
insl
rcll
lret
les
inc
insl
popa
jmp
cltd
enter
das
and
jecxz
cld
cmp
push
outsb
cmpl
push
pop
enter
bound
addr16
pop
sbb
jo
add
sbb
xchg
inc
aaa
xchg
jns
outsl
mov
fdivrs
pop
sub
xchg
pop
xor
movsb
in
cs
dec
cmc
cmpsl
les
call
out
andb
push
or
pop
scas
ucomiss
mov
mov
or
push
dec
add
neg
cwtl
mov
es
sbb
xchg
les
sti
mov
movsl
ret
scas
mov
push
jl
xchg
pop
scas
xor
xor
imul
mov
xorb
ret
inc
inc
mov
nop
jl
and
ret
jp
mov
ficoml
fnstenv
jmp
testl
inc
adcl
mov
pop
mov
inc
xor
loop
dec
loope
cmpsl
add
fcompp
cmp
fwait
inc
pop
test
in
cwtl
pop
push
jno
leave
xor
mov
mov
sub
and
testb
pop
mov
outsl
mov
xor
scas
and
and
loop
stc
or
sbb
add
dec
and
das
je
push
push
pop
cmpsl
loopne
ret
sub
daa
adc
sarb
mov
shll
pusha
cs
cli
aaa
mov
gs
bound
adc
pop
cli
sbb
or
mov
push
jnp
dec
jecxz
test
jnp
addl
repz
subb
add
xor
nop
mov
rcll
test
outsl
xor
dec
out
pop
mov
add
jno
jl
dec
lods
mov
jg
lea
push
add
ds
cwtl
pop
loope
adc
mov
cmp
sar
ljmp
jbe
push
inc
dec
rorl
in
mov
xor
scas
mov
fwait
pop
imul
or
xor
pop
outsb
lret
push
pop
xor
out
daa
insl
pop
iret
adc
cmp
or
out
stos
inc
add
in
testb
data16
jne
fcmovb
mov
dec
aad
int
mov
push
push
dec
mov
cld
xor
orl
fwait
das
imul
das
xchg
push
fsubl
enter
pop
lret
mov
cmc
js
test
xchg
and
adc
ret
scas
push
shrl
out
movsl
or
and
dec
ret
lcall
mov
push
xor
rolb
pop
push
insl
hlt
mulb
push
add
mov
popf
lcall
cmpl
in
xchg
mov
sbb
dec
out
fiadds
pusha
addb
out
mov
and
ret
and
sub
and
in
mov
fneni(8087
into
add
aas
and
cmovp
repnz
scas
sbb
lods
rcrb
cmp
das
push
push
cmpsb
call
mov
xchg
mov
lret
clc
fstpl
adc
mov
pusha
cmp
mov
sub
movsl
fnstenv
test
xchg
jb
cmp
and
mov
mov
jo
cltd
sub
nop
divl
es
sub
mov
push
jmp
insb
xor
stc
push
ffreep
jl
jne
inc
inc
mov
or
jle
ss
decb
aad
cs
xor
pop
xchg
and
pop
mov
mov
insl
cmp
adc
ss
fisubl
adc
sbb
bound
out
pop
cltd
addr16
decl
sbb
mov
outsl
clc
xchg
inc
ds
sub
push
hlt
adc
xor
or
or
dec
push
xlat
cmpl
adc
clc
sub
sbb
sub
mov
and
scas
jecxz,pn
call
loop
mov
push
cmp
into
cmpsb
and
jae
fisubrs
lods
loop
cs
jge
cvtps2pd
adc
xor
mov
xchg
sbbb
fisubrs
pusha
sahf
rclb
or
add
ljmp
mov
pusha
mov
sbb
dec
cmp
es
mov
add
movsl
mov
call
xchg
adc
lcall
sub
frstor
pop
ja
dec
addr16
mov
stc
push
jno
sub
inc
and
add
lods
insl
jg
jmp
jp
sti
mov
sarb
lods
dec
and
iret
clc
xchg
mov
pop
sbb
adc
push
dec
pop
jb
lret
mov
fwait
inc
fwait
sub
xchg
addr16
sub
les
mov
mov
test
lret
movsl
jno,pn
in
inc
push
push
rcrb
movsb
jno
inc
int
jmp
push
lea
scas
mov
stc
lods
in
aam
mov
bound
and
xchg
and
mov
cmp
sarb
push
mov
popl
sbb
xchg
shll
mov
add
sub
push
andb
fsubp
in
frstor
loopne
push
xor
les
or
mov
in
adc
or
cmp
pop
jbe
dec
mov
jecxz
int3
xchg
and
inc
adc
and
mov
cmc
iret
push
icebp
mov
xchg
aaa
fwait
dec
push
or
cmpsb
fistps
repnz
or
mov
aam
cwtl
pop
lret
notl
push
or
add
or
es
loop
std
add
and
adc
out
adc
ja
dec
sub
fdivr
outsb
jmp
fldt
add
adc
fcom
or
pop
adc
mov
in
pop
and
cld
aad
out
leave
in
mov
mov
inc
mov
pop
adc
repz
jbe
movl
inc
push
pop
lock
mov
inc
jo
into
es
shll
popf
inc
push
mov
cmp
mov
shlb
lret
inc
mov
sahf
sbbb
and
cmpsl
adc
cmpsl
subb
sbb
je
aad
inc
out
adc
test
cmc
loope
jg
mov
insb
dec
sbb
testl
sub
sub
xor
or
enter
lds
push
cmp
pusha
lret
mov
push
mov
ja,pt
test
xor
aad
sahf
lods
jo
inc
and
or
sub
sti
mov
adc
icebp
adc
mov
mov
inc
test
mov
in
mov
loope
add
mov
leave
xor
or
push
mov
pushf
mov
cmc
mov
stos
in
out
xlat
aaa
mov
stos
std
sbb
push
push
fisttps
setbe
sub
mov
adcb
mov
lods
fldt
push
or
adc
in
cs
icebp
mov
push
popa
jp
jle,pt
and
adc
lret
fists
xor
js
pop
daa
dec
cmp
adc
mov
adc
cs
das
push
inc
jne
xchg
sarl
jmp
pusha
sbb
out
xor
jbe
cmpl
mov
sub
pop
mov
xchg
jecxz
xchg
cmp
or
adc
sti
jne
adc
imul
cmp
xlat
push
and
aaa
lods
mov
mov
into
mov
sub
pop
pop
mov
imul
out
sbb
jo
sub
sbb
xchg
pop
sub
inc
cld
mov
sub
dec
vmovq
add
scas
push
and
cmp
add
xorl
stos
jno
and
data16
fisttpll
xor
js
test
stc
mov
cmpsl
cwtl
push
sbb
cmp
mov
lock
sahf
mov
push
mov
rolb
test
and
or
adc
mov
aas
fbstp
inc
add
sub
add
test
test
mov
jmp
sub
cs
push
lea
xor
and
arpl
ficompl
push
xor
lds
add
cmp
push
xor
mov
cltd
inc
push
lret
shll
add
push
mov
mov
pop
xor
addr16
fmuls
and
push
popf
cmp
cli
xor
cld
lock
dec
aas
stos
adc
jp
xchg
int3
xchg
es
repnz
es
jmp
loop
daa
mov
lret
mov
stc
lcall
pop
xor
cs
popa
je
rol
mov
daa
nop
ds
aad
xchg
int
repz
pop
test
stc
movsl
push
jno
mov
fstps
push
lods
pop
pop
xchg
and
and
jbe
jle
stos
test
in
jns
je
inc
enter
or
or
mov
scas
lret
call
mov
fs
ficompl
dec
jge
stc
aad
shrb
pop
sub
imul
jb
pop
scas
arpl
mov
fs
cltd
aad
arpl
test
inc
adc
in
dec
push
inc
outsb
rclb
add
and
lret
divl
fisubl
mov
in
loopne
ja
mov
ja
and
jmp
and
lods
ja
dec
int
test
jno
dec
push
push
dec
cmp
dec
je
and
push
add
pop
cmpw
bound
adc
inc
add
mov
sbb
mov
push
mov
and
xor
add
push
leave
in
out
and
cltd
movsl
mov
mov
fistps
mov
lret
fnstsw
pop
xor
lock
xchg
xor
stos
jl
mov
pop
mov
mov
inc
clc
push
loop
cmpsb
enter
jbe
sub
or
rorb
mov
lds
jnp
push
inc
jmp
ljmp
jbe
jmp
icebp
cli
lcall
mov
shll
iret
jns
sbbb
mov
leave
jmp
inc
mov
loopne
add
add
xor
repz
jne
negl
lds
mov
nop
jp
sbb
je
outsl
stos
push
aas
out
adc
dec
in
repnz
sub
push
xor
mov
sbb
mov
call
dec
push
lds
das
mov
add
push
jbe
sbb
divl
pop
iret
cmp
lds
into
mov
push
jb
mov
inc
outsl
sbbl
scas
rcl
ret
sbb
mov
lret
ja
push
hlt
aaa
inc
cmc
lret
dec
outsb
loop
dec
and
push
outsl
inc
or
lcall
xlat
push
inc
fisttpl
inc
lods
ss
mov
dec
int3
mov
xor
and
jnp
dec
push
xchg
jae
mov
lret
out
or
jmp
cmp
sub
push
jnp
mov
jns
pop
std
pusha
icebp
xor
add
push
pop
add
stc
or
lret
adc
lahf
mov
add
push
incb
rsm
and
mov
dec
or
loopne
loopne
lahf
adc
jl
pop
es
cmp
push
aas
movsb
cwtl
mov
les
outsl
pusha
fcoml
pop
pop
imul
mov
roll
ss
shrb
pusha
filds
pop
dec
daa
cmp
std
or
dec
and
push
mov
xor
sub
outsl
out
pop
lods
shrb
mov
push
lock
call
xchg
mov
repz
xchg
fsubr
dec
loop
gs
js
stos
mov
xchg
ret
cwtl
aaa
loop
mov
push
cld
fildl
sbb
arpl
sub
inc
aaa
inc
pop
lods
xchg
jl
popa
sub
cmp
ljmp
xor
lds
push
mov
aaa
cmp
and
adc
mov
in
push
adc
sti
xchg
inc
mov
and
inc
outsl
loopne
sti
pusha
or
imul
push
les
scas
dec
loop
xchg
jle
cwtl
popf
popa
and
adc
add
scas
xchg
pop
mov
sbb
movb
jecxz
or
out
xlat
sbb
bound
add
aaa
pop
test
mov
jmp
cmpl
outsl
xor
add
imul
mov
jbe
mov
gs
movsb
jecxz
dec
fistl
cld
mov
cmp
fs
aam
mov
or
aaa
add
lock
mov
sbb
mov
push
inc
lods
lahf
insl
inc
hlt
ficoms
push
mov
movb
pop
inc
int
sub
out
pusha
cmp
sbb
ret
arpl
jae
in
xor
push
push
xchg
call
inc
popf
lret
call
inc
and
xor
aam
mov
jno
xchg
pop
xor
mov
xchg
mov
sbb
fadds
mov
cmp
push
adc
adc
mov
lahf
jnp
add
mov
lods
pmaddwd
aad
fwait
gs
sub
pop
mov
cs
mov
outsb
lds
mov
addr16
shl
pop
mov
xchg
pop
adc
pushf
sub
adcb
test
add
xchg
inc
scas
push
xor
mov
mov
pop
ret
mov
fisubs
nop
pop
xchg
sbb
mov
test
xor
sub
fistps
xlat
rcrl
dec
sub
leave
dec
xchg
add
mov
cmp
in
inc
push
mov
cmp
push
jne
jnp
test
lods
mov
mov
fwait
mov
cwtl
shlb
sub
cli
pop
sbb
jns
mov
xor
sbb
xchg
cmp
in
mov
cli
inc
jl
mov
and
roll
mov
jge
jl
inc
fistpll
icebp
mov
aam
jp
inc
dec
lea
xchg
repnz
mov
inc
jns
in
push
fstps
lea
jle
sbb
sub
push
push
cs
pushf
dec
adc
int3
and
js
and
sbb
xchg
ret
daa
outsl
inc
xchg
lahf
xlat
push
sbb
rclb
mov
jne
pusha
and
mov
std
xchg
sub
outsl
repz
addb
jne
test
dec
cmp
daa
lcall
aam
daa
mov
add
inc
movsb
or
cltd
mov
push
lods
push
xlat
mov
mov
sbb
cwtl
mov
imul
jmp
sub
sbb
push
icebp
xchg
imul
dec
pop
push
jnp
inc
add
cli
cs
dec
in
dec
dec
lods
fists
dec
sub
insl
pop
mov
sub
inc
mov
cmp
stos
push
cmc
out
iret
movsb
repz
mov
mull
mov
mov
int
nop
push
test
lahf
sub
sbb
adc
adc
leave
sbb
adc
es
cmpsl
adc
test
mov
pop
jg
or
shll
add
jbe
addb
push
or
mov
jg
int3
popa
stos
pop
f2xm1
inc
mov
xlat
sbb
popf
xchg
sub
cmp
lcall
mov
mov
mov
ret
adc
jns
mov
cmpsl
mov
notb
test
push
pop
std
adcb
outsb
xor
mov
mov
aas
push
sbb
pop
out
xor
cmp
pop
ja
sub
enter
loop
cmp
add
je
ret
lret
loopne
sub
pop
insb
jne
sbb
inc
lcall
lret
mov
jo,pt
push
jmp
xor
pop
ds
or
push
lcall
add
dec
sahf
dec
in
pop
xchg
out
add
push
mov
lcall
sbb
and
stc
lods
pop
push
mov
mov
dec
stos
jae
ss
mov
cmpsl
jbe
sbb
popf
xor
dec
pop
lods
mov
dec
adc
lret
fbstp
pusha
in
cld
sbb
xchg
insb
mov
add
jae
adc
jg
or
ja
push
mov
scas
test
inc
aaa
je
or
inc
mov
arpl
clc
or
repz
lret
imul
adc
mov
mov
invd
inc
data16
adc
int3
aas
cmp
gs
dec
in
testl
test
jnp
je
imul
or
int3
or
adc
mov
aam
cmp
or
sbbb
xchg
les
jmp
mov
push
jp
mov
pop
lods
inc
rcll
pop
jecxz
inc
mov
cli
ror
mov
fldt
movsl
movsb
js
sbb
adc
pop
pop
enter
push
roll
sub
push
jle
fld
dec
js
pop
in
or
push
add
pop
add
cli
mov
out
lods
mov
and
mov
sub
pop
mov
and
push
sub
stos
mov
rcrb
lahf
pop
adc
sbb
dec
dec
cmc
fiaddl
push
outsb
sub
popa
add
mov
adc
sub
fnstcw
popa
mov
rolb
mov
or
or
popa
mov
loop
sub
mov
xchg
pop
push
int3
xchg
out
andb
in
stc
addr16
in
outsl
pop
cmpsl
es
movsb
insb
inc
sbb
shl
leave
push
lods
lret
jne
mov
push
sbb
inc
aaa
adc
out
jns
aaa
xor
mov
sbb
jecxz
mov
lret
mov
bound
mov
mov
enter
xchg
cmpsb
syscall
inc
gs
iret
and
pop
and
sbb
cmovae
mov
loopne
cmpsl
pop
add
test
mov
sbb
xchg
jbe
gs
pop
xorb
dec
or
mov
mov
aad
rcrl
pop
push
shll
jge
mov
adc
adc
mov
call
xchg
aad
cmp
call
out
cmp
mov
dec
data16
fcom
cmp
or
scas
leave
add
movsl
cmpsb
jbe
cs
cmc
xchg
fdivr
mov
sub
jl
das
pop
dec
ljmp
cmpsb
cmp
mov
pop
jg
arpl
jo
cmp
je
repnz
dec
dec
mov
pop
jno
push
popf
inc
add
pop
push
mov
pop
adc
push
dec
test
mov
jecxz
mov
xlat
cmp
mov
hlt
pop
pop
xor
dec
fpatan
cmp
bnd
or
lcallw
in
arpl
fldt
fisttpl
adc
cmp
inc
bound
mov
cmp
test
mov
jl
adc
enter
and
mov
push
xchg
imul
loopne
xchg
cmp
mov
push
imul
lds
mov
enter
das
shlb
subb
jne
addr16
jp
or
mov
mov
scas
push
out
sub
js
rorb
adc
sahf
sti
xor
fidivl
fcomp
stos
insl
adc
repz
fcompl
add
repnz
xor
movsl
hlt
in
and
lret
sarl
jmp
mov
inc
or
jbe
fildll
leave
sub
shrl
sub
sarb
xor
imul
not
repnz
xlat
shrb
mov
ds
mov
clc
sbb
out
jp
push
mov
and
fisubs
outsb
or
outsb
out
xchg
xlat
add
iret
xlat
and
pop
mov
pop
sbb
subl
mov
pop
pusha
jo
inc
cmc
lret
test
push
ret
mov
ja
movsl
jg
mov
bound
mov
js
mov
icebp
inc
or
sbb
insl
mov
out
jg
mov
rorl
roll
popf
sub
mov
lret
cmp
push
int3
push
mov
mov
adc
les
or
jmp
push
movsl
mov
fldl
mov
inc
in
mov
cmc
cltd
xor
hlt
stos
and
das
ja
out
fwait
xchg
dec
hlt
lcall
and
lahf
jae
fdivrs
or
mull
jmp
sub
out
mov
fwait
in
jns
dec
inc
adc
test
mov
mov
sahf
xchg
lcall
lret
pop
lods
outsb
jp
negb
shrl
jbe
sarb
clc
pop
outsl
rorl
pop
mov
in
or
lret
in
pop
or
xchg
mov
stos
pop
dec
mov
jns
in
mov
cmp
ret
es
jle
push
mov
adc
aad
cmp
fidivs
add
das
mull
sbbl
aaa
adc
mov
aam
into
sub
and
or
sub
xchg
ret
ret
idivl
loopne
mov
sbb
sub
enter
jnp
or
ds
movsb
inc
mov
xchg
lret
dec
leave
repnz
scas
add
fnstsw
xor
jb
cltd
decb
fstps
cmp
xor
dec
sub
js
adc
subl
sahf
and
sbb
sbbb
cwtl
and
loope
test
sbb
outsl
mov
sub
xor
mov
les
test
pop
mov
add
jecxz
xchg
gs
add
loop
repz
mov
sbb
inc
push
pusha
cmpsb
push
jle
mov
fmull
adc
pop
dec
mov
mov
scas
or
cmp
test
inc
arpl
add
movsb
sub
jl
fdivrs
pop
fwait
xor
leave
xchg
sub
or
fldcw
outsb
lahf
mov
test
mov
movsb
pusha
popl
pop
xchg
adc
int3
lea
jnp
leave
push
cmpb
jne
lea
rcrb
popa
mov
push
fsubs
ss
xor
fistpl
sub
push
adcl
rorb
stos
inc
push
cld
or
mov
mov
mov
adc
sahf
sbb
jb
xor
add
jmp
lock
ret
jecxz
add
push
pusha
addr16
clc
pushf
es
mov
add
mov
or
lcall
pop
stos
sti
xor
xchg
and
jge
push
fwait
in
inc
leave
gs
mov
push
push
inc
push
inc
das
push
xlat
ss
xchg
xchg
add
int3
loope
std
sbb
aad
adc
sbb
xor
daa
push
sub
cmc
dec
mov
shr
fistpl
jecxz
jne
arpl
cmpsl
pop
lcall
fwait
loopne
push
enter
dec
inc
popa
mov
mov
sbb
push
mov
mov
ja
rcrb
push
xchg
insl
sub
je
insl
xor
sbb
xor
mov
outsl
pop
out
jno
mov
dec
sahf
sub
ljmp
clc
mov
sub
test
sahf
shlb
and
mov
xchg
out
ss
xlat
lds
repnz
xor
imul
scas
repz
mov
movsl
xor
mov
das
and
int3
dec
cmp
ljmp
dec
push
in
xlat
pop
test
icebp
fcomps
xchg
jns
lret
xchg
icebp
jb
push
dec
mov
mov
jmp
fs
push
adc
lcall
dec
jmp
fistpll
pop
wrmsr
fucomip
lds
pushf
push
into
int
mov
adc
fiaddl
inc
push
lret
sbb
xor
add
pushl
adc
scas
or
or
xchg
mov
dec
push
cmp
jb
fimull
and
lret
fidivrl
jmp
lea
inc
mov
icebp
mov
mov
jl
sub
test
outsl
sbb
sub
sbb
call
repnz
mov
pop
fs
lea
mov
mov
sub
out
xchg
jno
adc
insl
sub
mov
loopne
fsubrs
imull
push
dec
scas
lds
mov
xor
lcall
adc
xchg
mov
mov
push
decl
and
jnp
dec
hlt
xor
test
mov
xchg
out
push
push
je
jo
outsb
cmpsb
loopne
adc
call
leave
mov
lods
xchg
sahf
fmul
push
adc
xchg
sub
std
dec
dec
leave
or
jg
pop
shrb
jp
icebp
xlat
test
xchg
and
mov
adc
push
push
repnz
pop
xchg
add
pop
jmp
aaa
sbb
jg
shrl
pop
pop
xchg
in
dec
mov
mov
enter
xor
jb
mov
inc
inc
addb
shll
jge
cmc
sub
std
lea
push
incl
incl
inc
pusha
add
cmpsb
in
adc
jl
mov
pop
or
sub
xchg
adcb
fldl
mov
xchg
pop
or
and
test
popw
cltd
mov
in
and
pop
xor
xor
mov
fs
mov
sub
call
xchg
pop
jo
addr16
stos
idivl
inc
jmp
hlt
iret
daa
add
pop
sub
adc
jns
xchg
stc
cmp
jo
or
or
inc
cld
push
lds
lds
std
cmp
or
add
jge
jne
leave
call
mov
jge
pop
lods
push
xor
pop
cmp
lahf
out
addr16
and
cwtl
mov
jb
jns
jmp
lret
scas
test
push
cltd
movsl
add
out
sbb
out
and
rcl
enter
lahf
dec
fcmovne
xchg
andl
mov
or
stc
jns
sbbb
cld
data16
hlt
mov
jno
in
shlb
es
nop
iret
mov
outsb
pop
inc
lods
popa
enter
shrl
mov
dec
xor
cmp
stos
xchg
fisubrs
mov
mov
mov
je
jns
mov
and
jmp
xlat
sbbl
push
push
stc
ret
pop
bound
cmc
pop
sub
push
test
sbb
arpl
xor
sti
test
aam
lcall
ss
clc
jbe
dec
or
mov
xchg
pop
fs
mov
xchg
es
addr16
or
cmp
cmp
add
lods
in
cmpsl
or
jg
sbb
dec
push
xchg
cmp
sub
cwtl
jp
loop
sbb
pop
sbb
fnstcw
pop
popf
dec
xlat
push
movsl
cli
push
cli
stos
or
mov
je
or
mov
leave
sub
test
ss
out
sub
scas
ror
mov
std
add
jb
xor
out
cmp
lock
xchg
push
rol
out
pop
les
fstpt
out
jp
outsb
lods
or
mov
xor
mov
gs
inc
push
sahf
lds
mov
cld
jmp
aaa
sbb
adc
mov
push
lock
ss
test
les
adc
aad
cmp
mov
push
hlt
insl
addl
iret
xchg
flds
in
add
dec
into
pop
in
jp
movsb
imul
mov
inc
in
mov
popa
xor
addb
aam
lock
cmpb
jo
inc
out
nop
das
add
xor
mov
dec
xor
scas
sub
pop
xor
cwtl
jo
add
in
aam
xchg
mov
or
int
loop
sarb
xlat
pop
inc
pop
xor
cmpsl
shrb
rcl
adc
adc
cmpsb
xor
sub
popa
mov
mov
jp
out
jnp
sahf
mov
fstp
cltd
int3
push
cmp
out
cmpsl
imul
dec
jo
push
dec
jns
xor
daa
jo
test
cs
inc
mov
add
push
lret
std
daa
test
mov
push
sti
mov
mov
sbb
cwtl
cmpsb
push
je
and
dec
bound
push
jmp
sub
jnp
ficoms
jecxz
sub
and
adc
out
arpl
dec
call
pop
sbb
addb
pop
mov
add
mov
cli
out
fldcw
pop
jmp
jecxz
subl
out
add
sbb
bound
iret
sub
sbb
sub
adc
pop
or
faddl
xchg
xor
js
fwait
fwait
or
mov
jno
leave
pop
and
data16
les
add
fistpll
mov
movsb
mov
mov
leave
push
addl
scas
jmp
pop
in
mov
inc
mov
popf
and
in
dec
enter
in
pop
mov
dec
mull
xorl
add
test
cmp
push
out
fwait
arpl
dec
lret
mov
test
cli
or
mov
rcrl
adc
and
scas
xchg
sbb
mov
xchg
xor
adc
jb
ja
icebp
adc
xor
pusha
xlat
pop
iret
xchg
sub
cmp
pop
scas
pop
sub
mov
test
add
add
loop
push
jno
pop
push
jmp
push
movsl
jge
aad
leave
push
mov
cs
cli
pop
add
lea
cmp
pop
and
sbb
mov
dec
int3
fisubrs
shlb
pop
cmp
hlt
or
pushf
and
loop
inc
fcoml
jp
and
cld
dec
xchg
dec
ret
and
dec
insl
cmp
data16
jg
ret
push
inc
xchg
addr16
fcoms
mov
pop
push
lret
loopne
out
sub
sub
cmp
inc
mov
mov
mov
mov
pop
xor
fstl
sub
inc
fs
sub
int
inc
adc
test
xor
scas
sbb
hlt
cld
in
out
in
std
jl
mov
shll
jb
pop
adc
and
movlps
pop
adc
mov
iret
sub
mov
xchg
xor
je
and
adc
jle
xchg
dec
decb
les
rorb
popa
jnp
mov
mov
iret
and
dec
loopne
out
xchg
jp
jb
stc
test
or
pushw
ffree
xor
in
push
test
lock
fwait
xor
loopne
js
or
scas
push
addr16
mov
call
jmp
rclb
in
push
push
push
push
sbb
mov
movsb
push
lock
inc
and
dec
dec
cmp
and
cmpsl
fistps
shl
mov
fstps
sub
rcrb
pusha
fildl
out
pop
and
xchg
xor
fsts
ja
sbb
sbb
push
out
outsl
das
insl
imul
jns
xchg
dec
fucomi
out
mov
cmp
jle
mov
in
sbb
xor
std
stc
jl
fwait
cs
mov
fimuls
sub
iret
popa
cmp
sbb
jecxz
mov
nop
mov
lock
mov
or
scas
jecxz
xlat
mov
testl
test
out
jb
inc
dec
mov
pop
iret
or
or
sub
cmp
pop
inc
sub
bound
addr16
dec
stos
add
sub
add
ret
mov
push
sarl
adc
xlat
jnp
stc
cwtl
dec
adc
pop
insb
les
lods
iret
dec
adc
shlb
fisttps
mov
push
mov
push
mov
mov
iret
mov
pop
out
clc
lret
mov
in
cli
mov
pop
jp
add
outsb
aaa
cmp
lods
shl
je
sub
test
and
pop
mov
add
inc
in
sbb
mov
lahf
sbb
dec
fldt
cltd
adc
xchg
mov
dec
and
shlb
lds
sbb
jnp
add
mov
push
fdivs
shrl
stos
iret
jg
js
lods
and
xchg
mov
in
or
cltd
leave
inc
add
insb
dec
sahf
sti
in
nop
push
xor
or
pop
leave
lock
push
add
and
mov
xor
inc
dec
mov
pop
pop
pop
cmpsb
out
lret
sbb
inc
jno
adc
in
cmpsb
pop
xchg
lock
cld
adcl
mov
pop
fcomi
mov
push
adc
push
mov
or
xor
cmp
je
fcoml
rolb
mov
leave
dec
inc
mov
lock
call
mov
fidivrl
cwtl
pop
mov
aas
dec
inc
or
cmc
jmp
mov
mov
cmp
lods
push
inc
push
sti
mov
jb
mov
xor
mov
call
pushf
cmpsb
mov
mov
xor
inc
std
test
loop
xchg
mov
iret
dec
lods
shlb
pop
and
jl
andb
cmp
lret
mov
pop
jl
frstor
les
xor
rcll
shll
sar
je
jge
cmp
es
mov
loopne
mov
add
sbbl
out
fdivr
test
add
xchg
dec
call
adc
xchg
nop
xor
push
lock
nop
mov
pop
adc
push
outsb
sbb
jmp
fcoml
cmc
push
xchg
lock
data16
pusha
push
xor
dec
cmp
out
cld
das
jb
ret
jle
push
jg
ss
inc
pop
pop
jg
or
mov
xchg
push
adc
outsb
xor
xor
int
jo
das
bound
push
mov
cmp
das
and
xchg
ret
lock
stc
adc
pop
cmp
jmp
in
stos
xchg
push
or
data16
xor
inc
dec
inc
pop
jbe
cmpsb
xchg
mov
add
leave
xchg
loopne
dec
mov
test
aam
insb
pop
lcall
add
in
add
jge
lods
es
lea
push
dec
lret
stos
inc
pop
loopne
mov
sbb
xlat
mov
clc
ljmp
push
adc
inc
mov
jbe
and
push
ljmp
movsl
jmp
or
push
aaa
xor
xchg
mov
repnz
sbb
call
clc
lret
std
ljmp
push
call
sub
sbb
pop
pop
mov
inc
loop
call
or
pop
fsubl
lret
out
or
movb
arpl
pop
push
add
pop
roll
jp,pt
push
adc
int3
std
enter
es
test
rclb
push
pop
in
xor
sub
push
into
popf
cmp
pop
leave
fcom
aaa
out
loopne
mov
lods
std
rcrl
sub
dec
fstl
xor
out
pop
xchg
insl
movsb
into
pop
pop
xor
mov
jmp
pop
cmp
shl
xchg
push
inc
and
movsl
dec
mov
sbb
sar
cld
or
dec
cli
sub
push
xchg
sti
jne
out
outsl
shll
stos
mull
aam
jo
sub
movsb
sti
int
or
xor
push
sub
or
test
in
pop
stos
pop
mov
movsb
or
inc
xchg
inc
fcomip
adc
or
push
pop
push
rorl
repnz
add
push
dec
jne
jns
testl
ret
sbb
rorl
pop
out
jmp
sbb
ds
fcmovnu
sub
xchg
push
fs
stc
jmp
mov
push
shlb
mov
xchg
iret
mov
jmp
mov
sub
movsb
dec
add
cmpsl
sub
fdivs
mov
fdivs
lods
pusha
fsqrt
pushf
sbb
jno
rorb
les
ljmp
push
lds
lret
push
fdivs
mov
rcrl
xchg
jns
fisubrs
fildl
jns
pop
movsl
aad
movb
cmp
lahf
xor
jle
loop
mov
adc
pushl
push
mov
ljmp
xor
inc
mov
sub
mov
ss
mov
cmpsb
adc
jno
cmp
mov
pop
adc
adc
in
fidivrs
or
test
inc
cwtl
cmp
ret
mov
mov
popf
jle
and
test
and
loopne
pop
std
sbb
fisubrs
xor
not
shlb
adc
xor
mov
push
incb
dec
mov
jb
shlb
ss
jno
inc
icebp
pop
ret
mov
insb
mov
add
jge
push
rorb
mov
js
push
fadds
fidivrl
mov
imul
fwait
ja
dec
add
movsl
ds
stos
cmp
adc
mov
fs
push
jl
int3
sbbl
je
jnp
jno
int
add
mov
shll
add
repnz
fcoms
mov
xorb
mov
or
test
cmp
sub
lock
inc
cmc
xor
ret
clc
sar
arpl
mov
cmp
jp
mov
int3
mov
mov
jge
sub
addr16
sub
movsl
inc
xchg
arpl
mov
inc
mov
imul
mov
fbld
and
xchg
sbb
pop
xchg
xchg
popf
cmp
or
sbb
add
stos
shlb
add
pop
mov
xor
movsb
stos
insb
mov
cs
cmp
xor
cmp
inc
adc
inc
mov
fdivrs
pop
push
cmp
ret
ret
jl
test
jno
adc
mov
out
lock
mov
mov
loop
bound
popa
xchg
imul
clc
sbb
xchg
loope
enter
movsb
bound
add
cs
leave
adc
push
sbb
dec
pop
and
fldcw
popf
shr
mov
cld
add
in
add
iret
pop
aas
xchg
repz
leave
jae
jno
call
les
call
lahf
inc
push
mov
into
repz
in
push
jge
jg
fldcw
test
jns
stos
jbe
inc
aaa
jl
inc
push
adc
sub
test
cli
sbb
push
pop
or
mov
add
and
inc
popa
add
lcall
sahf
sarl
dec
push
xchg
xchg
repnz
dec
pop
inc
call
outsl
mov
push
adc
pop
cwtl
and
ret
int3
and
and
sub
pop
ret
movsb
hlt
aad
add
jns
ljmp
xor
aam
cmp
out
xchg
std
and
divl
xlat
sbb
inc
lret
test
clc
or
sub
jge
jge
xor
fwait
test
or
add
imul
jl
push
cmp
sbb
mov
pop
dec
push
mov
cmpsl
btr
pusha
insb
sub
int
shlb
sub
or
int3
in
dec
push
jns
js
outsb
stos
lret
je
pop
xor
lods
jno
rep
mov
test
xchg
jg
jg
je
xlat
push
and
popa
pop
repnz
dec
sub
push
insl
cmp
gs
adc
lret
jno
popf
mov
sub
stos
mov
stos
sub
jns
repnz
sub
add
out
mov
fwait
mov
popf
sub
xchg
jmp
aad
cmp
dec
jecxz
rcrl
add
test
inc
ds
mov
lcall
out
bound
push
test
mov
stos
ret
sti
insl
inc
push
mov
in
push
mov
cmp
dec
cs
fxch
scas
mov
sub
pop
pop
mov
xchg
je
ss
ljmp
pop
lea
repz
outsl
pop
test
push
test
call
hlt
stos
jo
enter
mov
ret
adc
pusha
ret
cmp
sub
adc
ret
in
sub
or
cmpsb
push
scas
adc
clc
stc
notl
insl
inc
mov
mov
jmp
mov
push
mov
dec
push
mov
test
adc
inc
ficoms
in
mov
xchg
and
mov
adc
xchg
out
shrb
clc
inc
out
adc
adc
mov
jbe
inc
xor
xchg
sub
pop
add
movsb
repnz
fistpl
daa
nop
flds
iret
pop
out
fwait
and
ret
add
pop
xor
push
rorb
outsl
aad
pop
sbb
sbbb
inc
int
dec
mov
fwait
adc
loop
push
daa
imul
je
jae
cmp
clc
and
roll
cwtl
push
inc
mov
cmp
popf
sbb
cmp
outsl
adc
push
add
popa
rol
dec
mov
add
out
dec
and
jnp
adc
nop
inc
inc
jp
or
jecxz
adc
add
loop
adc
ficoms
movsb
cmpsl
pop
loope
mov
jnp
add
in
sbb
sub
pop
push
out
mov
or
jno
cltd
arpl
jmp
mov
in
call
aas
ljmp
dec
xchg
or
fs
and
jnp
adc
faddl
or
nop
mov
call
xlat
add
inc
jg
mov
rol
cmpsl
addr16
cmp
lcall
and
jo
inc
lahf
pop
lods
xchg
push
xor
push
repz
push
push
mov
jp
add
adc
enter
pop
pushf
les
fdivrl
sti
aas
leave
sub
sar
xchg
and
stos
ljmp
ss
pop
sbb
dec
in
sarb
cltd
fsubrs
adc
outsb
cld
inc
jmp
js
rcll
add
jb
cmp
push
xor
sbb
outsb
push
mov
mov
popa
xchg
in
push
fisubrs
jge
shl
aas
push
jne
fwait
push
mov
inc
jp
adc
into
ja
mov
jle
push
xor
mov
sti
xchg
sbb
mov
mov
out
jbe
inc
fistps
push
or
subl
push
xor
outsl
xchg
mov
test
mov
fistpl
push
test
negl
fnstenv
lcall
rcr
enter
in
sbb
sbb
xlat
sbb
or
fcomps
mov
test
mull
mov
push
out
inc
inc
xchg
lea
jne
adc
cmc
cmp
push
fsub
cmpsl
aaa
pusha
inc
adc
and
out
sti
mov
insb
jo
xchg
push
push
pop
sbb
fcomi
jmp
mov
sbbb
enter
push
sub
push
jecxz
push
cmc
pop
sub
stc
jb
loopne
shl
jbe
xchg
shl
ror
jae
out
push
or
xor
pop
outsl
imul
xor
or
sbb
jp
cmc
stos
xor
cs
sbb
pop
mov
pop
hlt
adc
or
or
inc
jmp
pushf
loop
adc
outsl
xor
sbb
cmc
or
xor
and
mov
add
sti
test
dec
je
fmull
cmp
cld
push
push
or
sbb
or
mov
cmp
int
push
fsubrs
jne
les
xor
mov
cli
push
xor
fisubrl
popf
ss
jns
test
xor
es
cli
xor
ja,pn
fs
ljmp
xchg
loope
add
bound
sub
call
cmp
dec
sbb
mov
jae
call
mov
push
cmpsb
add
and
pop
add
jno
fdivl
and
xor
and
adc
jns
dec
dec
inc
femms
andb
push
mov
cmc
pop
cmp
pop
int3
mov
shl
sahf
sbb
insl
leave
or
xchg
push
or
push
mull
pop
aaa
cltd
daa
outsl
addr16
mov
pop
jp
aam
xchg
dec
inc
inc
pop
les
enter
loop
adc
mov
jmp
xchg
je
sub
es
xor
sahf
mov
mov
cmp
pop
pop
mov
push
insb
sbb
movsl
push
test
mov
mov
cmp
sbbb
dec
lcall
cwtl
adc
adc
push
pop
cmpl
push
mov
push
ds
in
cmp
jle
sbb
xor
test
xor
js
pop
outsb
sub
cmp
inc
jg
fists
fstpl
incb
fucom
or
jo
ficomps
js
lods
ret
outsb
xor
aad
xchg
scas
push
jp
subb
fldt
or
mov
pop
mov
negb
push
mov
int
loope
jae
aas
and
call
scas
sbb
shll
and
jne
ljmp
lods
sarl
ds
fists
mov
adc
lea
fiaddl
push
cld
xchg
cmpsl
addb
leave
mov
imul
cld
lahf
mov
out
mov
adc
lret
cmp
je,pn
cli
fsts
sbb
push
cs
xchg
fldcw
mov
add
pop
push
in
add
bound
jl
push
cmc
lds
inc
jo
pop
stc
inc
inc
cmp
loop
fstpt
xorl
cmp
xor
jle
xchg
pop
add
insb
add
imul
add
push
adc
xlat
mov
imul
push
fidivs
add
and
sub
cwtl
pop
test
in
enter
inc
pop
repnz
fsubrs
cmpsl
and
enter
cmp
rcrb
ret
int
dec
jle
sbb
sub
leave
test
or
imul
push
inc
and
dec
aas
pop
lds
es
out
imul
shlb
js
and
or
stos
mov
mov
jo
aam
clc
add
ret
cmp
mov
lods
mov
fcompl
add
dec
inc
mov
fiadds
and
int3
test
or
in
jl
repz
lcall
leave
mov
imul
pusha
test
and
clc
movlhps
add
cld
pop
dec
lcall
inc
outsb
movsl
adc
mov
push
int
pusha
adc
pushf
in
cmp
cmc
inc
lock
es
negb
cmp
mov
mov
sbb
jns
mov
adc
xchg
sbb
sbb
pop
jg
push
pushf
or
dec
add
repz
mov
rcl
dec
fsubr
or
pop
xor
insl
daa
repnz
jno
scas
mov
ljmp
test
and
lods
or
ja
hlt
sub
aam
imul
pop
iret
push
and
or
xlat
inc
rcll
mov
lock
movsl
pop
dec
daa
lret
xchg
adc
je
sahf
pushf
mov
es
dec
jae
push
jnp
push
and
jecxz
or
jl
dec
mov
cmp
sbb
sbb
das
enter
aad
aam
sbb
outsl
notl
sahf
sbb
cmpsl
and
jl
shll
imul
mov
roll
movsb
sbb
js
sub
add
add
inc
mov
jne
je
jbe
rorb
ja
scas
push
jns
ja
insl
mov
outsl
sub
pop
es
rorb
mov
mov
jp
add
add
or
mov
fwait
sub
pop
push
lret
sbb
ljmp
andl
ret
ret
cmp
je
pop
mov
test
rcr
insl
rclb
push
dec
jl
shl
sbb
test
shrl
adc
int
mov
fnstenv
xchg
mov
mov
add
xlat
sub
or
jae
push
mov
call
int
sub
push
dec
or
ja
and
out
add
lea
and
or
out
sbb
sahf
fwait
repnz
loope
push
outsb
test
inc
dec
outsb
stos
arpl
jne
nop
dec
xchg
in
subb
add
pop
sbb
pop
jae
or
pop
int
test
test
ret
icebp
cmp
xchg
pop
cltd
int3
ret
jb
sbb
rol
fcompl
push
jecxz
sbb
mov
aas
int3
lcall
pop
jb
mov
rorl
push
push
inc
xchg
cs
sub
arpl
repz
outsl
incl
mov
icebp
shrb
pop
sub
lds
ljmp
out
pushf
cmc
mov
mov
daa
xlat
cmp
push
cwtl
cmp
scas
dec
push
push
in
ja
pop
add
sbb
mov
add
pop
xor
lods
in
mov
push
inc
push
mov
xlat
push
test
mov
pop
dec
repnz
push
ss
jmp
jns
ja
in
sbb
cs
jecxz
in
mov
rclb
mov
sub
subb
mov
adc
mov
lods
add
jle
test
stc
ja
jle
pop
mov
push
mov
movsl
mov
sbb
js
and
mov
js
mov
cld
cmpsb
add
add
sbb
in
or
int
mov
jmp
inc
push
and
push
hlt
add
pop
call
mov
mov
lret
lods
sbb
sub
add
or
out
mov
cmpsb
cmp
jle
mov
mov
cli
mov
scas
sbb
stos
ljmp
mov
and
mov
mov
xchg
pop
add
stc
and
sub
xor
dec
sub
daa
rol
jnp
je
int
arpl
mov
xor
mov
pop
sbb
pop
mov
add
jmp
outsb
aaa
jno,pn
lahf
fnstsw
pop
mull
cli
mov
out
addl
shr
movsl
int
mov
js
lret
ja
loope
add
in
leave
adc
xchg
mov
sbb
xchg
test
insb
push
insb
pusha
push
out
lds
in
arpl
pop
std
iret
jne
add
mov
pop
mov
js
pop
roll
inc
cmpsl
mov
or
hlt
push
fdiv
mov
xor
or
aaa
jp
cmp
cmp
cmpsb
bound
rcrl
insl
inc
inc
sbb
jmp
jl
mov
outsl
and
andb
outsb
sub
mov
hlt
xchg
add
jno
inc
aam
enter
stos
mov
sub
jo
inc
dec
push
ljmp
inc
addr16
fistpll
pop
pop
mov
xchg
in
ds
ljmp
mov
dec
jle
adc
test
xor
cmpsl
push
test
insl
sbb
lods
mov
push
lods
test
sub
dec
dec
fidivs
add
dec
adc
sub
push
sub
lahf
push
and
mov
add
lret
out
stos
mov
aam
enter
lods
aas
sub
push
jp
or
in
fidivs
dec
fucom
sarl
