add
js
add
bound
add
add
push
sub
add
add
sbb
add
add
jl
add
jl
add
inc
outsl
add
jl
add
fisubrs
add
aas
add
jl
add
add
add
jl
add
jl
add
jl
add
lds
add
js
add
mov
add
js
add
bound
add
add
push
sub
add
add
js
add
sbb
sub
add
add
add
add
add
outsb
add
xchg
add
das
add
jl
add
jl
add
jl
add
jl
add
jl
add
add
add
mov
add
js
add
bound
add
add
push
sub
add
add
sbb
add
add
jl
add
jl
add
inc
outsl
add
jl
add
fisubrs
add
aas
add
jl
add
add
add
jl
add
jl
add
jl
add
jmp
add
std
add
js
add
and
add
add
add
aas
cmp
add
add
add
inc
add
cmp
inc
add
arpl
ja
imul
jne
outsb
add
imul
cmp
dec
add
inc
add
add
add
add
outsl
add
je
jb
outsl
add
add
popa
add
add
add
jne
jb
jae
outsl
add
jae
add
push
add
push
add
and
pop
pop
ret
push
imul
jb
je
arpl
mov
sub
push
push
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
movl
call
push
pushl
call
push
mov
pushl
call
mov
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
call
pushl
call
jmp
pushl
call
mov
push
push
call
mov
call
xor
mov
push
push
push
call
lea
push
push
push
call
add
push
push
push
push
push
pushl
call
pushl
call
push
push
push
push
push
call
pushl
pushl
pushl
call
add
pushl
call
mov
jmp
lea
push
pushl
call
xor
mov
push
push
push
push
pushl
call
pushl
mov
pushl
pushl
push
push
call
lea
push
pushl
call
push
pushl
pushl
push
call
lea
push
call
pop
push
lea
push
push
push
push
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
jmp
call
push
mov
call
xor
pop
pop
leave
ret
push
push
push
push
mov
push
mov
mov
mov
pop
add
mov
mov
add
mov
mov
cmpb
je
cmp
jg
mov
mov
mov
movzbl
sub
inc
test
jne
jmp
mov
call
movzbl
mov
dec
sub
push
call
movzbl
sub
add
je
push
inc
pushl
call
pushl
push
call
movzbl
pop
sub
pop
push
jmp
call
mov
xor
push
push
mov
push
push
mov
push
push
push
push
push
pushl
pushl
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
mov
xor
push
push
movl
movl
movl
mov
movl
mov
mov
call
mov
mov
push
movl
movl
mov
movl
call
ret
push
mov
sub
pushl
call
pushl
movl
movl
movl
pushl
movl
movl
movl
movl
movl
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
push
lea
push
push
call
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
cmpl
push
mov
je
cmp
je
lea
push
push
call
call
mov
xor
xor
call
mov
xor
call
movzwl
mov
mov
mov
movzwl
xor
movzwl
xor
lea
push
call
mov
xor
pop
xor
test
jne
mov
not
mov
pop
mov
or
mov
leave
ret
push
mov
sub
orl
mov
inc
mov
pushl
pushl
pushl
push
push
call
add
mov
cmp
jbe
andl
cmpl
jne
call
push
push
push
pushl
call
mov
movzbl
mov
movzbl
sub
test
je
mov
add
mov
mov
sub
mov
add
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
call
call
call
jmp
push
call
mov
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
push
call
mov
add
mov
jmp
jmp
push
pushl
call
mov
pushl
call
mov
add
cmp
jb
mov
leave
ret
add
add
add
addr16
jne
or
add
add
add
add
add
add
add
add
add
add
add
icebp
add
add
and
add
add
popa
add
add
xchg
add
add
add
aas
add
add
and
pop
gs
push
jae
inc
je
inc
je
popa
outsb
add
push
getsec
in
mov
sbb
fmul
xor
mov
cld
mov
in
mov
mov
pop
std
mov
cld
inc
jae
mov
jns
adc
add
push
add
adc
push
push
dec
scas
push
push
sarb
lret
mov
lea
add
shlb
or
pop
mov
pop
sti
add
lock
cld
push
add
clc
mov
test
test
test
inc
cld
or
adc
push
mov
cmp
clc
mov
sub
subl
adc
inc
add
lock
in
push
inc
add
test
add
lock
add
add
add
add
add
sub
clc
add
add
push
cwtl
add
inc
cs
outsl
imul
xchg
adc
jbe
je
arpl
and
inc
mov
addr16
jge
add
push
gs
imul
inc
inc
push
arpl
mov
add
xor
add
add
add
add
mov
add
add
add
fwait
add
add
add
adc
add
add
popf
mov
repnz
lahf
dec
mov
test
sbb
xchg
pop
sub
lea
test
push
mov
sbb
shll
mov
test
lret
je
mov
mov
ret
stos
movsl
xchg
sub
add
sbbl
jl
jnp
sbb
inc
js,pn
lret
and
pop
into
cld
fdivrp
or
inc
sar
lods
pop
loop
pop
jb
les
or
lds
shll
in
dec
push
jmp
push
scas
adc
sub
jno
insl
fucom
stos
or
and
add
nop
and
and
mov
test
aad
imul
test
in
out
jns
pop
cmpsb
cmc
rclb
pop
inc
lds
je
popf
mov
cmpsl
ja
cmp
jmp
aaa
shrl
xor
sub
loop
fildl
mov
cmpsb
push
daa
pop
dec
jae
cmp
pop
insb
das
mov
shlb
scas
test
pop
cmp
rol
xor
cmc
or
jae
enter
xchg
sub
xchg
lret
and
push
jmp
push
hlt
movl
or
inc
mov
data16
dec
andb
mov
push
loope
fsubs
mov
jb
or
lahf
inc
and
bound
iret
dec
or
leave
adc
bound
inc
cmp
popf
dec
jecxz
movsb
or
sub
in
lret
stc
mov
std
scas
nop
jnp
cmp
test
jle
lock
mov
jbe
sar
xor
jb
xchg
and
xor
cmp
shrb
add
test
inc
add
inc
dec
and
xchg
mov
mov
push
xchg
xchg
jle
test
ljmp
mov
shll
xor
jae
pop
iret
jns
jae
popa
sub
dec
imul
pop
in
aas
ja
in
and
lock
or
js
mov
cmp
lea
int
or
mov
push
dec
sub
mov
cmp
loopne
lret
daa
jmp
pop
imul
cli
mov
pop
ja
repnz
nop
pushf
in
imul
rclb
jns
sub
xchg
int
fcmove
fmul
push
pop
mov
ljmp
jle
sbb
jmp
inc
scas
and
sub
leave
lods
pop
and
xchg
in
dec
test
dec
cmp
mov
adc
mov
jle
outsl
cltd
stc
lret
scas
cmpsl
xchg
jbe
push
mov
pop
push
and
cs
adc
cwtl
js
out
stos
ds
arpl
call
sub
jge
sbb
insl
xor
cmp
and
and
sahf
xchg
sbb
iret
lods
and
mov
mov
cmp
les
push
xor
cltd
dec
and
sub
aam
and
stos
stc
movsl
in
ds
push
mov
or
je
or
dec
adc
push
push
shlb
xchg
rclb
or
in
adc
sub
ds
mov
test
xlat
add
dec
das
je
jl
sub
add
adc
sbb
jecxz
in
lret
cwtl
and
iret
cmpsl
notb
scas
aad
xchg
add
pop
pop
setp
add
ret
fidivrs
and
test
mov
mov
inc
cmp
mov
into
pop
imul
xchg
lods
dec
push
adc
andb
std
es
add
mov
js
mov
push
outsl
jnp
xchg
inc
add
push
incb
jmp
arpl
add
dec
movsb
adc
sub
xor
imul
and
scas
or
out
adc
cld
sbb
arpl
jecxz
push
int
insb
aam
in
movsl
mov
fwait
divb
lret
in
push
out
lea
dec
icebp
mov
popf
lret
inc
lods
sarb
jl
mov
ljmp
cltd
test
je
divl
mov
mov
mov
sbb
push
sti
lds
shrl
shlb
adc
fidivs
xor
mov
add
iret
and
mov
int
mov
cmpb
push
and
mov
imul
jo
jae
dec
jbe
xor
mov
pusha
repz
bound
push
mov
cmc
lret
iret
sub
xchg
adc
test
jle
pop
shl
push
inc
adc
pop
lods
push
mov
mov
bnd
jne,pn
in
sbb
pop
loopne
add
mov
fbstp
pop
add
jae
add
lock
addr16
adc
xor
stc
in
xor
adc
push
sub
dec
testb
lds
xchg
cmpsb
movsl
xchg
dec
add
int3
ret
lcall
mov
test
out
or
xchg
xor
pop
andb
pop
pushf
andl
adc
dec
repnz
pop
scas
dec
push
lcall
push
jne
push
ljmp
sbb
sti
sub
mov
add
dec
inc
mov
ja
xchg
mov
daa
clc
xor
jmp
jae
movsb
or
mov
cmpb
andl
popa
call
push
xchg
adc
movsb
and
nop
rorl
or
aas
shll
sub
xor
imul
dec
aad
rol
data16
out
repnz
enter
rcrb
mov
mov
fisttps
inc
pushf
sbb
scas
inc
les
pusha
fstpl
loop
int
adc
mov
into
stc
xchg
pusha
sub
lods
jge
mov
ret
pop
push
sub
sub
adc
fidivs
std
push
movsb
insl
test
jae
push
inc
nop
xor
lods
jb
mov
jae
lea
rol
fisubs
fcmovb
dec
push
in
orl
sahf
add
add
lds
stc
arpl
std
xor
or
lds
mov
mov
ret
sbb
cmp
xchg
sti
pop
aad
fsub
xor
sub
clc
aad
ljmp
dec
movsb
stos
pusha
push
roll
iret
push
fdivs
je
aam
sub
fdivs
mov
xchg
fnsave
das
cli
ja
adc
shrl
jb
cmp
cmpsb
cmc
call
outsb
adcb
stc
je
les
inc
adc
and
adc
inc
daa
jae
or
push
and
popf
push
mov
std
dec
xor
xor
inc
stos
test
jo
xor
xor
leave
mov
pop
filds
dec
jmp
sbb
notl
jne
lock
fstl
addr16
ja
mov
cmp
pop
dec
sbb
sbb
cmpsb
movsl
xchg
or
push
xchg
rcll
rol
sub
ds
fsubs
cmpsb
mov
nop
jno
lea
push
mov
mov
xchg
fwait
push
mov
loope
loopne
cmp
les
push
pop
pop
cmpsl
gs
push
sbb
mov
fdivp
andb
int
inc
in
jmp
pop
sbb
jae
sbb
int3
xor
mov
repnz
add
push
jne
mov
sbb
dec
int3
ret
or
cmp
or
xchg
inc
stc
dec
pop
test
adc
je
sub
jp
je
in
jmp
pop
jmp
mov
leave
mov
insb
xchg
out
icebp
popf
mov
sbb
xchg
stos
shlb
dec
lret
fistps
mov
push
sbbb
mov
daa
pop
push
int
cs
into
cmp
mov
fsubl
cmc
xchg
dec
cwtl
jmp
int3
xchg
lds
imul
adc
pop
mov
hlt
dec
mov
mov
and
inc
mov
fwait
inc
sbb
int3
xor
xor
dec
cld
imul
in
scas
imul
movd
loopne
add
mov
xor
rcrl
in
xchg
xor
fcompl
and
push
add
or
cs
outsl
dec
sbb
or
mov
pop
loope
cmp
add
clc
mov
mull
xchg
popa
pop
lahf
xchg
cmp
cmp
fists
pusha
ret
pop
movsb
xchg
clc
push
or
mov
cltd
addl
push
cmp
add
push
xor
sub
jge
xchg
mov
pusha
jge
testl
dec
notb
adc
pop
je
popf
sahf
push
mov
mov
mov
aam
mov
fisubs
sub
jge
mov
xor
jge
or
fwait
stos
fbld
push
ja
or
xchg
mov
add
jbe
jno
xchg
cmp
xchg
cmp
aad
jl
movsb
scas
dec
jne,pn
adc
mov
insb
test
dec
daa
push
and
bound
roll
mov
xchg
arpl
gs
cltd
sbb
sub
xchg
jbe
dec
sub
mov
out
nop
or
nop
btc
sub
xor
dec
cmpsb
ds
mov
test
frstor
outsb
cmpsb
in
lahf
test
jmp
test
int
xchg
std
out
sub
cmpsb
lods
fbstp
xchg
jl
push
jb
iret
pop
bound
mov
cmp
in
lods
lret
mov
cwtl
orb
rcrb
push
mov
stos
es
and
cmp
stos
xor
cs
mov
xor
ds
pop
xchg
cwtl
pop
mov
test
inc
ss
out
xchg
inc
sub
push
sbb
dec
fdivr
js
cmc
mov
out
inc
add
ss
out
testl
int
into
and
stos
push
inc
lea
mov
dec
mov
movsb
push
cmp
imul
and
aas
mov
add
and
dec
fstps
cmp
xchg
mov
push
inc
stos
sbb
out
sahf
pop
iret
fsubrl
ds
pusha
stos
xor
xlat
dec
outsb
fmul
das
js
xchg
sub
mov
add
inc
repnz
pop
orl
loopne
and
xchg
push
pop
test
push
pop
mov
icebp
xchg
jne
sub
adc
xchg
out
dec
hlt
scas
jp
sub
cmpsl
xchg
fidivrl
and
and
push
hlt
shll
cmp
aad
push
jbe
mov
pop
ret
mov
mov
sysret
jmp
in
xchg
fiadds
and
cld
repnz
test
cltd
adc
jle
in
cmp
dec
loop
mov
jbe
sub
pop
cmpsl
or
push
les
inc
iret
mov
or
ja
pop
mov
or
mov
xchg
pop
jle
in
aas
rolb
into
inc
test
mov
adc
push
xor
lds
scas
xchg
test
arpl
mov
mov
sub
mov
fnsave
pop
sub
wbinvd
das
push
add
push
add
mov
cmp
fwait
imul
pop
xor
push
arpl
pop
cmp
add
sbb
outsb
not
in
jmp
pop
js
fs
cmp
lea
sbb
adc
dec
pop
iret
je
repnz
std
fcmovu
or
pop
mov
and
cmp
jle
sub
push
push
mov
lea
ja
xor
arpl
mov
daa
inc
aaa
ja
inc
icebp
ljmp
pop
xchg
cmp
outsl
xor
mov
lods
out
ljmp
mov
cmc
sti
mov
out
pushf
mov
aas
scas
fcoms
mov
push
pop
xchg
mov
adc
cmpsb
pop
loop
mov
or
pop
nop
test
int
push
dec
dec
loop
mov
mov
loop
and
push
movsb
in
add
ljmp
xchg
mov
pop
fcomps
sbb
mov
sub
cmc
jle
int3
cmp
or
pop
sbb
mov
sbb
cmp
push
in
fistpll
adc
and
mov
js
cs
pushf
mov
fcmovnb
mov
hlt
mov
mov
outsl
arpl
out
or
filds
pusha
mov
gs
leave
mov
pop
or
cltd
fadds
test
movsb
dec
pop
jne
push
cld
mov
cmpsb
lock
sbb
aam
iret
cmp
cld
gs
andb
or
out
xchg
insb
inc
test
jbe
insb
push
movsl
lcall
xchg
fdivs
xchg
xor
push
xchg
jmp
arpl
add
dec
lock
notb
insl
adc
and
sbb
in
xchg
xor
add
pop
js
sahf
in
popf
jmp
jbe
mov
push
scas
and
add
aad
mov
sub
mov
andb
mov
mov
fcmovnbe
lds
xor
mov
sysenter
sbb
or
add
pop
jno
sti
add
lret
ljmp
cmp
cmpsl
xchg
stos
fistps
or
and
or
xchg
stc
mov
xor
pop
jle
test
ret
push
pop
lock
scas
xor
mov
leave
cmp
or
push
mov
push
int3
xor
addr16
inc
pop
mov
and
call
pop
lret
out
push
sahf
jnp
cwtl
jo
push
in
aas
fs
lcall
js
mov
xorb
jp
xchg
sarl
adc
add
shll
push
out
mov
lahf
stos
ljmp
dec
inc
repnz
lea
inc
loopne
std
fnstsw
test
js
mov
push
rolb
sub
idivl
dec
xor
mov
popf
inc
lea
mov
cmp
lahf
push
pop
mov
mov
pop
fadds
or
icebp
sub
mov
fs
pop
adc
sahf
cmc
add
push
and
fs
sub
cmc
push
jbe
clc
sub
mov
cmp
call
jg
test
fadd
or
and
call
outsl
xchg
xor
adc
xchg
inc
jl
in
xchg
push
mov
adc
sub
adc
push
je
push
or
inc
cmc
or
loope
dec
adc
std
fildll
shlb
in
mov
inc
jbe
rorb
filds
mov
test
addb
test
movsl
pop
xlat
sbb
addr16
dec
jp
xlat
xor
and
testb
rclb
sub
out
mov
xchg
es
arpl
pop
push
fs
adc
dec
pushf
jb
cmp
cmpsl
loope
sbb
mov
rcrl
xchg
inc
push
out
stc
pop
and
test
lock
sarl
jno
stos
sub
ja
bswap
xchg
adc
pusha
pop
dec
out
mov
jmp
clc
pop
sti
or
pusha
mov
push
cwtl
mov
insb
cmp
sub
out
mov
or
arpl
aam
cmpsl
pop
jo
xor
mov
daa
gs
jno
test
jae
mov
push
incl
lds
mov
imul
ret
or
add
adc
jmp
adc
stos
xchg
loope
test
scas
and
jo
outsl
daa
adc
mov
lcall
rcll
mov
xor
test
fwait
mov
addr16
cmp
loope
into
push
call
fsts
mov
add
jp
add
in
adc
and
daa
push
jbe
cmp
xor
mov
js
shr
orl
xchg
push
lods
shr
jae
test
cmp
mov
sbb
repnz
cmc
popa
or
scas
mov
push
sub
jmp
stos
out
inc
jbe
nop
inc
call
add
mov
mov
sub
mov
ss
fcmovnu
and
cmp
test
jp
cli
and
fildl
xor
sti
jle
pusha
pusha
cwtl
std
jnp,pn
pushf
sbb
fistpll
flds
xchg
and
add
mov
call
and
std
adc
dec
cmp
sti
jl
es
shlb
lahf
mov
adc
mov
loope
testl
ss
cmp
ss
and
or
das
dec
popf
jmp
fldl
push
xor
addr16
cmp
lret
cmpsl
sub
add
adc
push
jmp
idiv
xchg
rep
mov
adc
add
xchg
hlt
les
adc
jbe
xchg
xlat
jae
out
cmp
negb
out
or
pushl
out
pusha
push
inc
jmp
pop
pop
pop
dec
or
pop
push
inc
cmp
mov
fsubrl
pop
arpl
mov
inc
les
leave
sub
push
lcall
daa
add
data16
dec
pop
cmp
inc
push
in
push
stos
add
sahf
arpl
scas
xchg
es
mov
dec
insl
repz
jmp
incb
lock
jae
hlt
popf
scas
enter
cmp
daa
dec
ds
or
mov
ds
dec
fiadds
bound
lds
clc
dec
jmp
popa
std
jge
mov
push
std
pop
jnp
push
mov
cmc
fwait
cmp
ds
xchg
pop
sbb
andb
lods
mov
cld
data16
enter
mov
cwtl
scas
mov
mov
clc
test
jno
push
adc
push
push
ds
mov
mov
cmp
pushf
sbb
mov
lods
fidivrs
fbld
lock
push
mov
push
mov
movsl
add
and
jns
pop
addr16
and
and
out
xchg
inc
andl
xchg
lods
leave
icebp
jp
dec
xor
in
cltd
xchg
adc
fwait
mov
fcmovb
mov
mov
iret
jb
push
push
lahf
daa
sbb
mov
xchg
push
popl
xor
imull
pushl
test
pop
push
pop
fildll
cld
mov
jg
adcb
cmpsb
cmp
xchg
mov
int
push
jae
dec
outsb
cld
and
cmp
sub
js
call
pop
mov
hlt
ja
out
inc
jmp
sub
rorb
gs
test
push
push
ficomps
cli
adc
sbb
push
inc
mov
scas
ljmp
out
add
fbstp
mov
xchg
int
imul
js
mov
jp
jl
out
push
das
popf
leave
sarb
movsb
xchg
sahf
iret
xor
push
inc
push
mov
inc
inc
mov
add
insb
fildl
add
add
add
add
sub
add
add
add
add
add
xor
add
add
add
add
jmp
add
add
add
add
add
add
add
add
add
add
jmp
add
add
add
addb
stos
stos
add
ja
stc
mov
clc
clc
dec
int3
int3
int3
int3
int3
int3
int3
int3
add
add
add
jb
and
cmpsb
and
loopne
add
add
add
adc
pushf
add
add
add
push
xor
add
add
add
mov
lcall
push
or
xor
and
sub
xor
jb
outsb
inc
dec
inc
add
gs
popa
sub
inc
mov
lcall
jmp
fsubrs
or
incl
in
add
ret
xorb
adc
push
std
je
test
cld
push
call
testl
pop
push
lock
in
inc
stc
or
xor
add
adc
repz
cld
enter
faddl
addb
add
mov
adc
xor
rolb
add
incb
call
lea
incl
jl
or
cld
xor
cld
and
adcl
inc
lock
add
lcall
sar
dec
inc
repz
repz
push
mov
hlt
push
push
add
push
push
and
je
add
add
add
cs
movb
mov
dec
cmp
out
xor
add
xchg
add
je
js
outsl
movsl
outsb
insl
je
add
inc
cmp
movsl
gs
jb
outsb
outsl
imul
stos
jae
insb
imul
push
jne
push
xor
jns
outsl
push
imul
loopne
insb
push
insb
jmp
add
add
sub
add
add
add
add
add
add
add
add
add
out
iret
addr16
aas
adc
push
jae
jle
lahf
add
test
mov
out
hlt
lea
add
aaa
aam
jae
cmp
outsb
aaa
int3
inc
adc
pop
sti
fcom
lods
scas
pop
push
je
dec
or
xor
dec
and
inc
scas
add
ficompl
leave
dec
pop
js
jl
sub
icebp
dec
cs
sbb
repnz
mov
fs
jmp
dec
pop
lods
jne
inc
into
int3
xchg
xorb
push
jb
jecxz
xor
je
or
xlat
add
sub
add
xlat
and
dec
jmp
loop
xchg
cmc
in
mov
mov
xor
js
xchg
fs
dec
push
sbb
mov
pop
pop
pop
cld
fdivs
cmp
sub
pop
popf
and
aad
dec
int
mov
cmp
rorb
pop
dec
test
xchg
and
loop,pt
cwtl
dec
call
stc
mov
mov
push
dec
enter
sbb
sub
xlat
or
xorl
sub
mov
std
adc
jg
int3
push
in
inc
sbb
add
aad
into
cmp
addr16
pop
push
ret
mov
mov
aaa
xor
aad
add
jmp
adc
xor
xlat
loop
push
loopne
insb
sbbl
mov
pop
mov
jp
jecxz
fwait
mov
int
aas
iret
push
mov
in
xchg
inc
jnp
cld
in
add
mov
sub
repnz
xlat
js
js
pop
push
popf
xchg
jbe
dec
popf
and
shl
enter
sbb
stc
and
imul
jne
repnz
in
mov
mulb
leave
mov
mov
inc
test
fldcw
cmp
lock
inc
lds
sub
cld
outsb
add
das
and
popa
dec
mov
fidivrs
aad
inc
je
xor
xchg
xor
popa
cwtl
fdivs
negb
repz
xadd
ret
or
jmp
scas
dec
sbb
cmp
xor
in
cmpb
xchg
cmpsb
mov
out
out
lahf
add
sbb
jecxz
inc
imul
icebp
out
std
sbb
inc
rcr
cwtl
mov
mov
sub
fmull
mov
fisttps
xor
js
pop
insb
and
adc
loop
xchg
sbb
lods
rol
loope
push
das
mov
sbb
mov
jb
movsb
push
mov
into
cld
fwait
jb
sbb
lahf
pop
and
push
xor
mov
cli
push
pusha
jae
in
pushf
addr16
sbb
loopne
call
sub
scas
ljmp
addl
in
flds
subb
aad
rep
pop
adc
push
adc
lods
cmpsl
outsb
sarl
xchg
jne
repz
aad
cmpsb
pop
repnz
lds
fadd
or
dec
xchg
or
sub
cmp
in
adc
sbb
bound
int
jge
add
and
aam
ficompl
mov
cwtl
add
imul
mov
push
test
and
pusha
mov
out
iret
mov
idivb
rcrb
sub
hlt
pop
andb
ja
sub
mov
push
shlb
sarl
jmp
push
push
bswap
rcr
cmp
fwait
or
repnz
xchg
lret
dec
cmpl
adc
pop
adc
lret
dec
stc
xchg
insl
cltd
sbb
popf
les
ss
pop
sti
ja
fcompl
or
cmp
mov
rorl
and
sub
das
push
or
jg
dec
clc
out
and
xchg
movsb
jne
xchg
adc
addr16
inc
repnz
sbb
fimuls
push
iret
push
or
in
xor
lods
mov
call
jne
adc
dec
pop
jnp
sbb
lret
jg
out
jbe
clc
fsubs
and
inc
dec
ljmp
push
lahf
rol
pop
adc
int3
push
es
lock
shrb
adc
mov
pop
incl
test
les
inc
ret
out
outsb
repz
and
cmp
inc
sbb
cmc
dec
sub
jge
jo
xchg
hlt
int
cmc
xor
in
fmul
fstl
andb
stc
push
mov
aad
mov
push
int3
hlt
dec
or
sbb
in
aam
jp
push
fcomp
rcr
lods
mov
jecxz
xlat
out
arpl
dec
scas
mov
jns
out
fists
aad
sti
mov
xor
dec
ljmp
or
add
sub
adcb
sub
movsb
push
sub
pop
icebp
push
mov
mov
aaa
cmp
xchg
fdiv
adc
lret
lret
cmp
rcl
jmp
fisubs
cmp
std
xor
mov
push
xor
cli
xchg
rclb
cli
jno
je
ja
jno
push
mov
iret
stos
repnz
cwtl
sbb
add
cld
movsl
out
fcomps
divb
pop
xchg
sti
sti
cmpb
idivb
cmp
scas
mov
adc
mov
and
lret
aam
pop
cmp
ficoms
les
dec
jne
dec
dec
leave
sub
lods
rorl
pop
mov
pop
and
and
das
fstpl
push
xor
std
les
lret
sbb
addr16
xor
mov
or
mov
scas
call
and
andl
daa
das
decl
fcoms
cltd
scas
cmpsl
mov
inc
add
subb
xor
adc
jl
imul
in
ss
pop
inc
push
testl
js
xchg
js
ficompl
out
inc
pop
or
jo
inc
xchg
ss
cld
neg
adc
sub
repz
mov
cmpsl
mov
mov
mov
mov
repnz
xchg
fcompl
adc
cmpsb
pop
inc
push
mov
xchg
movsl
popf
xchg
mov
sti
xor
pop
ficompl
adc
jle
ret
add
ss
dec
cmpl
std
cmpsl
and
dec
test
xchg
pop
sti
adc
sub
mov
lds
inc
mov
sub
andl
fnstsw
das
and
scas
into
add
add
cmpsb
jp
pushf
mov
leave
adc
rorb
sub
pop
mov
mov
lahf
push
xor
ss
into
and
jge
call
adc
mov
dec
pop
mov
fcoml
cmp
jno
popa
js
loop
xchg
mov
test
aaa
mov
shll
lods
sbb
insl
shrb
pop
ret
lea
pusha
sbb
lods
stos
push
int3
push
cwtl
add
addr16
push
add
mov
ljmp
push
cs
movsl
cltd
and
pushf
lds
nop
in
call
ret
cmp
and
adcb
nop
push
xchg
cmp
ljmp
xchg
aad
pop
jno
in
sbb
adc
cmpsb
aam
sar
data16
iret
test
mov
or
jmp
daa
ret
pop
popf
pusha
pop
lret
sub
enter
pop
jne
jb
bound
je
enter
add
jp
xchg
stos
popa
sahf
xor
repz
or
cmp
ficoml
jl
out
and
ss
stc
mov
imulb
sub
mov
iret
addr16
mov
dec
enter
imul
pop
xchg
mov
jo
dec
lock
aam
jae
aas
jl
std
cwtl
inc
ret
mov
jle
sbb
fisubs
lcall
loopne
dec
cmp
mov
leave
enter
dec
or
lods
aad
ja
in
fimuls
cmp
int3
jmp
rclb
aad
mov
bound
jns
shll
xor
mov
or
stc
mov
pop
adc
adc
push
int3
jns
out
mov
cmpsb
sbb
jo
fistpll
or
xor
jecxz
xor
add
inc
sbb
pop
insb
stos
ret
in
dec
mov
xchg
mov
xor
cli
lea
scas
jo
jge
xchg
aad
mov
ljmp
in
pop
add
scas
clc
aas
test
lcall
sbb
and
sarl
test
or
pop
add
bound
xchg
cs
mov
and
imul
cmpsb
add
xor
inc
jl
scas
mov
pop
push
inc
in
xlat
push
jle
mov
xlat
adc
cmpsb
repnz
loop
ss
loope
sbb
mov
mov
pop
ljmp
scas
mov
pushf
cmp
mov
fisttpl
xor
cmp
jbe
jecxz
cli
out
inc
and
data16
cs
pop
push
jmp
out
mov
out
dec
add
inc
dec
sub
xor
dec
rorl
fadds
ljmp
int
add
out
pop
lods
mov
xchg
adc
pop
pusha
gs
mov
fisubl
jl
aad
pusha
xor
subl
push
jne
or
rclb
repnz
lock
shr
mov
pop
testb
and
test
jno
hlt
pop
aas
pushf
xor
pop
imul
inc
add
out
cmp
clc
mov
mov
cmpsl
out
xor
shlb
dec
push
insl
pop
cs
mov
imul
push
scas
push
addr16
pop
lret
rcrl
rcpps
jae
pop
test
push
and
imul
pminub
inc
xchg
les
aaa
fwait
xchg
mov
cs
mov
dec
lret
adc
pop
scas
inc
mov
pop
and
mov
xor
ja
jns
call
dec
adc
fwait
pop
pusha
int3
movsb
shl
imul
pop
lret
mov
add
cmp
lods
fistps
sbb
pop
xchg
xchg
fdivl
xor
or
sub
push
in
sbb
push
xchg
ret
xchg
les
mov
sub
leave
scas
ds
pop
jne
sub
pop
pusha
push
adc
adc
xchg
adc
jmp
shr
jg
dec
and
push
ss
leave
nop
or
xchg
scas
scas
fnsave
mov
xchg
cmc
cmp
xor
push
out
addb
cmc
mov
hlt
and
and
sub
pop
add
cli
dec
cmpsb
sbb
nop
lea
out
push
sub
dec
andb
cld
popf
lods
dec
xor
notb
test
sbbb
leave
add
cmp
int3
dec
leave
aam
and
pop
scas
into
movsb
jecxz
sbb
test
fnstcw
jp
sbb
sub
pop
sub
adc
frstor
inc
idivb
cmpsl
arpl
mov
test
out
les
xchg
mov
mov
pop
shrb
dec
enter
ljmp
jnp
into
inc
mov
sbb
inc
adc
mov
jne
lea
in
push
jge
dec
mov
cld
out
popa
clc
fstpl
lods
aad
lea
repnz
imul
push
add
imul
pop
push
mov
fbstp
pop
cmpsl
push
repz
lods
mov
mov
mov
mov
roll
inc
dec
les
mull
cmp
aaa
pop
or
js
jbe
int3
inc
push
fdivl
and
sub
mov
adc
jp
lock
mov
cs
inc
mov
xchg
add
enter
mov
mov
inc
mov
xor
test
lea
int
xor
sub
sub
pop
pop
jmp
aas
inc
or
ds
jmp
fldl
lods
or
xchg
movsb
outsl
bound
subb
xchg
mov
fcmovne
xchg
pop
fstps
idivl
std
dec
xchg
dec
xor
jne
and
aam
imul
pusha
sub
cmp
loope
inc
sbb
mov
mov
subl
jp
shlb
repnz
leave
sub
test
xchg
lahf
incb
das
out
jle
mov
shlb
movsb
push
push
sahf
imul
call
in
in
jnp
shl
out
fwait
shrl
xor
adc
jnp
jo
cmpsb
jl
jae
xor
push
fnsave
mov
rolb
or
rcrb
lret
stos
and
add
push
add
jl
lock
push
add
push
dec
les
addb
cmp
mov
in
pop
add
fidivrs
out
roll
sub
sarb
scas
ljmp
outsb
xor
and
subl
pop
jmp
mov
idivb
inc
outsb
jle
push
mov
mov
cmp
add
int
loope
lcall
pop
inc
xchg
inc
push
inc
cmc
stos
lahf
jb
mov
mov
repz
push
sbb
jb
jl
and
cmc
push
mov
jge
pop
pop
fwait
push
mov
and
add
es
rorl
add
daa
popa
xchg
cmp
outsl
dec
pop
mov
sbb
pushf
scas
test
sbb
movsl
adc
mov
movsb
sub
xor
sbb
xchg
xchg
aad
pusha
sahf
mov
popf
add
xorb
inc
pop
push
fidivrl
mov
fbld
idivb
xchg
mov
jg
repnz
test
adc
lret
movsb
mov
lretw
mov
xor
xchg
sbb
imul
adc
dec
frstor
fdivrp
sub
sti
push
xchg
push
mov
imul
inc
sub
jp
add
jo
sub
mov
inc
jle,pt
cld
pop
mov
in
sub
rcrl
leave
mov
and
jl
mov
and
xchg
out
xor
mov
shrb
cmp
pop
add
jo
aas
adc
or
test
add
pop
pop
mov
scas
and
lods
je
push
movsl
mov
in
std
push
sub
or
xor
fsubs
jne
cmp
dec
loop
lcall
in
jae
pop
ret
mov
in
lods
push
test
xor
fdivrp
xchg
add
pop
out
adc
dec
imul
insl
xor
jb
inc
and
pop
jp
loop
scas
insb
mov
adc
xchg
pop
andb
and
jno
inc
pop
rorb
aaa
lock
mov
pop
lret
jbe
jg
in
xchg
mov
aaa
push
addr16
and
imul
pop
shll
dec
roll
push
loope
pop
ds
cmp
lods
cltd
mov
loope
xchg
push
sahf
cmpsb
xchg
test
push
bound
in
pop
push
mov
out
das
push
jmp
aam
scas
sar
jae
sub
sbb
dec
fwait
xor
lock
sbb
lods
fchs
fistl
inc
xor
clc
xor
push
pop
fstpl
mov
scas
iret
dec
cmp
movsl
fs
xor
push
jo
fs
and
cmp
insl
insb
leave
and
jnp
into
push
call
arpl
iret
xchg
push
lret
inc
mov
addr16
pop
xchg
xchg
xorb
inc
and
and
mov
adc
cmp
mov
pop
sub
ljmp
in
popf
cmp
mov
pop
push
loope
mov
in
mov
add
vpsadbw
fwait
mov
jmp
xor
repz
inc
fninit
jb
sbb
mov
movb
push
pop
daa
roll
ret
or
fsubrl
int3
mov
mov
xchg
nop
gs
call
leave
sub
ret
shrb
add
or
pop
pusha
cmp
cmp
les
jnp
sbb
out
out
mov
sarl
push
out
je
lahf
mov
xchg
inc
scas
mov
ljmp
sbb
shlb
and
lock
les
das
pop
mov
sarb
xchg
lcall
enter
adc
lods
xor
js
or
sarl
icebp
lcall
lods
xor
and
pop
cmc
xor
mov
fldt
cmp
dec
mov
daa
sub
inc
daa
das
jl
fidivrs
pushf
mov
popl
inc
xor
jnp
inc
mov
cltd
ljmp
fldl
sbb
adc
popf
or
fldcw
fbstp
testl
cmpsb
lret
icebp
popa
and
dec
movsl
push
dec
pop
and
insb
jno
mov
fldl
add
pushf
negl
orl
hlt
jae
loop
inc
push
jmp
dec
bound
and
outsb
faddl
mov
xchg
push
pop
mov
xor
cli
push
cmp
push
push
sub
mov
sub
lods
stos
dec
call
sbb
imul
lods
fisttps
lods
sub
add
loop
int
cmp
cltd
cli
sbb
push
rcrb
push
rcl
rcrl
dec
cli
scas
inc
out
sub
cmp
clc
lcall
pop
push
rclb
in
lock
sbb
jae
addr16
adc
subb
mov
out
outsl
dec
xor
out
mov
jnp
dec
lds
pop
xchg
mov
insb
popa
mov
sbb
or
sub
out
sbb
push
xlat
or
push
mov
fwait
ret
fstp
cmpl
mov
xchg
xchg
lret
pop
xchg
sbb
adc
mov
rclb
cs
xchg
insl
push
xchg
mov
mov
sub
adc
iret
dec
jbe
not
jge
mov
dec
jo
lret
aad
stos
mov
insb
inc
mov
mov
dec
popa
mov
inc
fwait
div
inc
lods
in
arpl
imul
cmp
inc
mov
out
arpl
inc
enter
xchg
aaa
iret
pop
mov
lret
pop
pop
cmpsb
std
adc
sub
std
push
fidivrl
stc
mov
mov
lahf
arpl
fiaddl
push
cmp
in
je
loopne
lahf
cmpsb
fcoml
sub
xchg
sbb
mov
sub
or
das
jne
pop
xchg
pop
sbb
jmp
mov
jge
mov
addr16
addr16
and
xchg
mov
cmp
ds
inc
mov
mov
arpl
lahf
add
dec
add
add
push
mov
loop
add
add
add
add
jb
add
push
pusha
sbb
add
add
imul
add
add
or
add
add
or
in
in
jbe
in
inc
add
adc
add
ljmp
ja
mov
js
js
int3
int3
int3
int3
int3
int3
int3
int3
nop
add
add
add
add
imul
adc
adc
add
adc
add
add
add
add
add
add
adc
add
lahf
sti
or
add
add
add
add
add
add
subb
sbb
sbb
sbb
sbb
sbb
sbb
add
sub
dec
imul
add
ficomps
addr16
and
sti
jecxz
out
sbb
push
sub
decl
mov
inc
push
add
jne
jne
pop
push
std
pusha
call
test
pop
add
mov
mov
jle
add
push
add
mov
add
mov
in
push
add
sub
loopne
add
add
call
test
decl
adc
test
je
call
jne
or
push
push
ret
lret
mov
test
test
incl
je
clc
test
fisttpl
push
ljmp
push
decl
loopne
add
push
pop
pop
add
add
add
add
add
sbb
add
add
add
add
add
add
add
add
add
jb
gs
gs
add
inc
insb
mov
add
gs
dec
add
je
pop
repnz
jae
outsl
add
je
xor
insl
outsb
mov
jo
add
pop
je
add
add
imul
add
mov
fldt
dec
fwait
add
add
add
add
or
pop
cltd
pop
or
repnz
in
inc
pop
pop
les
shll
cmovp
cmp
or
sarb
inc
or
sub
mov
add
je
lea
ds
stos
mov
test
xchg
mov
mov
cwtl
ja
fmulp
loopne
jo
fstps
and
sbb
pop
or
adc
sub
aam
or
sbb
dec
xchg
xor
filds
in
stos
dec
jl
jg
std
pop
int3
addl
loope
add
ja
mov
inc
das
mov
loope
mov
js
dec
in
in
shrb
mov
or
jmp
ret
je
mov
hlt
movsb
dec
sbb
sti
les
stos
pushf
hlt
mov
dec
and
out
jo
pushf
clc
and
roll
cs
js
outsb
push
fcomps
inc
pop
loop
test
push
add
adc
fistl
pop
jl
xchg
fnstcw
and
negb
push
adc
push
dec
jmp
cmp
and
dec
cmpsb
lret
lods
add
and
out
push
iret
xchg
jno
mov
push
add
pop
adc
xor
fwait
xchg
inc
pop
cmc
pop
ret
pop
aad
push
pop
nop
jge
mov
out
mov
xchg
cmp
mov
cs
ljmp
cmp
movsl
nop
outsl
push
loopne
enter
jl
repz
es
out
xor
pop
loope
int3
cltd
or
arpl
mov
les
lods
iret
inc
cmp
push
inc
jno
dec
inc
add
xchg
sub
cmpsl
jecxz
jl
push
pop
fisttps
cmpsb
movsb
xchg
dec
std
outsl
or
mov
dec
adc
leave
jecxz
rorl
cmp
xor
lret
mov
ret
cmp
subl
in
imul
into
stc
rcl
sub
or
shlb
inc
or
inc
add
das
push
imul
mov
out
outsl
lea
aam
cltd
adc
jle
pop
loope
xor
fwait
sub
mov
icebp
loopne
mov
fidivl
inc
pop
xchg
jne
shl
push
mov
xchg
pop
push
mov
jbe
lcall
into
lahf
jecxz
sub
cld
ja
jecxz
jp
mov
lret
fbstp
inc
push
sbb
jae
je
shlb
aas
lods
mov
mov
inc
adc
mov
fistl
mov
pushf
je
inc
pop
loop
cmpsb
pop
fisubrl
or
sub
cmp
push
in
sbb
movsl
sbb
mov
out
xchg
in
mov
cli
cmp
sub
mov
lock
mov
push
cltd
lret
scas
or
xor
jg
or
loop
daa
xorl
jnp
fdivp
lcall
pushf
jne
stos
dec
mov
fdiv
mov
in
xchg
jl
jmp
xlat
jmp
sub
jne
xor
lods
in
iret
outsl
and
into
sarl
and
mov
vxorps
shr
adc
mov
mov
sbb
sub
mov
inc
mov
push
mov
ret
cwtl
mov
jp
and
inc
rclb
fwait
divb
cmp
mov
ja
aad
jg,pn
sbb
or
mov
jg
test
hlt
loope
mov
movsl
icebp
push
ficomps
pop
fadds
or
cmp
xor
sar
out
mov
and
jle
xor
adc
hlt
int
dec
imul
mov
and
sbb
insl
loopne
mov
and
imul
xlat
mov
cld
inc
sbb
xor
or
stos
lahf
cmp
imul
popa
pop
sub
mov
icebp
test
pop
sbb
xlat
movsl
mov
mov
rcrb
add
orl
cmpsl
popa
iret
rolb
xchg
repz
cltd
mov
add
sti
xor
cmp
or
xchg
sbb
mov
jmp
jbe
in
shlb
jecxz
ja
xchg
sahf
hlt
sub
push
pusha
fcmovnb
sbb
xor
in
fs
fwait
push
out
lods
jle
out
xchg
dec
pop
jl
stos
sub
xor
mov
and
mov
mov
sub
dec
int
mov
repnz
scas
and
in
test
wrmsr
das
fisttpll
jo
rcrl
xchg
mov
lock
je
call
inc
cli
sub
xchg
or
mov
arpl
int3
outsb
rol
adc
cmpsl
not
or
mov
jge
js
fsubs
jbe
sub
lahf
inc
inc
sbb
pop
icebp
add
add
add
shlb
mov
stos
mov
push
aad
push
sub
xchg
imul
inc
sub
mov
push
or
fistpll
mov
lods
loope
sbb
dec
stos
fisubl
inc
add
daa
jp
pop
and
xchg
inc
enter
mov
pop
sbb
jmp
mov
lret
dec
stc
dec
loop
lahf
inc
mov
dec
stos
scas
iret
mov
pop
ficompl
inc
test
leave
push
pop
test
loopne
aas
push
add
sub
add
movsl
sahf
cmpsl
xor
shrl
cli
xor
push
lods
pop
mov
push
mov
xchg
mov
je
mov
subl
shlb
mov
bound
pop
xchg
aas
pop
ljmp
or
xchg
ret
out
inc
push
pop
jo
sub
inc
in
inc
in
ss
jns
mov
movsb
xor
rorl
rep
rolb
arpl
jae
push
lods
jne
sbb
mov
xlat
aad
add
add
xor
cwtl
rolb
insb
add
inc
add
outsl
bound
sti
or
in
mov
mov
icebp
imul
les
ljmp
jnp
insb
xchg
lret
and
mov
mov
cmp
insb
add
lcall
add
sbb
pop
repz
push
mov
fisubs
int
mov
push
push
hlt
push
fsubs
cwtl
repz
xor
cmpsb
push
xchg
sub
cli
xor
sub
adc
jb
adc
divb
push
adc
mov
test
pop
fsubl
insb
sub
insl
jae
push
xor
scas
es
adcb
or
mov
xor
sub
cmp
dec
push
inc
pop
out
xor
or
cmp
imul
inc
mov
xor
jbe
jl
jge
pop
jno
pop
push
and
clc
repnz
cmpsb
mov
inc
lret
cmp
std
int3
movsb
hlt
mov
mov
mov
and
enter
xchg
push
pusha
scas
nop
xchg
std
adc
pop
or
daa
cmpsl
push
add
cmp
sub
pop
mov
negl
jmp
mov
xor
mov
rorb
jl
lods
sbb
and
jbe
ror
jecxz
pop
push
lahf
jb
imull
jno
cmp
loopne
fdivrl
daa
outsl
fs
sub
sbb
gs
pcmpgtb
fmul
leave
sbb
push
mov
scas
jmp
push
out
jl
and
cwtl
adc
inc
dec
xor
fmuls
adc
aas
jge
mov
pop
sbb
arpl
xor
fmuls
add
lods
std
bound
inc
loopne
inc
cs
jae
adc
flds
inc
testl
inc
lods
or
andl
or
sbb
sub
add
repz
popf
pop
stos
add
loope
mov
das
mov
fstpt
andl
cwtl
lock
ja
or
enter
cmc
sub
lret
test
in
xor
push
inc
or
mov
or
test
dec
lret
shll
cmp
dec
popf
pusha
pushf
pop
shrb
stos
add
cmp
pop
and
pop
stos
imul
xor
adc
dec
les
mov
and
push
adc
jp
sub
add
pop
xchg
push
adc
inc
pop
ja
mov
lods
pop
pop
pop
push
call
push
out
dec
mov
adc
sub
les
sti
sbb
sarl
add
pop
loop
data16
lock
outsb
ljmp
add
jge
lock
pop
insb
scas
and
loope
out
fistl
jae
test
mov
andl
lcall
mov
inc
xchg
push
icebp
pop
sbb
popa
cmp
push
pop
mov
nop
int
nop
mov
ja
dec
mov
ret
cwtl
push
xorb
xchg
sbbl
stos
in
in
ret
add
jae,pn
sarl
mov
lret
mov
xchg
es
pop
in
std
lods
jae
stc
inc
jns
pop
push
sub
mov
clc
adc
xor
add
lret
pop
add
jge
jo,pn
xor
loop
add
push
lret
add
roll
fwait
mov
movsb
sti
mov
add
mov
outsl
push
repz
mov
inc
xor
in
aam
adc
sub
or
subb
pop
jnp
or
xchg
iret
pop
int
cld
fisttpll
leave
jp
cmp
gs
cmp
ficoms
sub
dec
add
mov
cmp
push
popa
adc
ss
arpl
sub
mov
or
pop
jl
dec
icebp
addb
iret
sub
pop
pop
movsl
aad
stos
and
pop
mov
roll
sub
pop
jmp
stos
mov
sub
daa
cli
pop
sbb
jb
aas
inc
scas
mov
mov
fisttpll
inc
dec
pop
shlb
pop
push
or
pop
and
cmp
xor
int
inc
lods
arpl
lods
lret
sbb
cmp
cmpb
dec
xlat
sub
test
mov
pop
hlt
pop
xchg
mov
stc
in
xchg
mov
outsb
pop
mov
and
adc
pusha
fnstcw
in
sbb
stos
adc
mov
xchg
jecxz
adc
out
fwait
sub
push
int3
or
mov
jp
mov
mov
ljmp
xor
aas
cmp
mov
sbb
xor
shr
cmp
pop
jge
xchg
rorb
ret
inc
dec
adc
or
sahf
scas
decb
push
stos
vsqrtpd
inc
sub
inc
inc
rolb
mov
xchg
pop
stc
push
repz
xor
mov
addr16
or
iret
jg
cli
mov
mov
dec
and
dec
shlb
add
daa
hlt
sub
cmpsb
xor
mov
cmp
mov
ja
testl
insl
fnstenv
adc
test
dec
jmp
insl
out
lds
adc
sub
pop
jno
scas
sub
add
mov
ret
pop
jg
das
iret
mov
cwtl
jae
std
mov
clc
insb
lods
adc
add
add
loopnew
sub
negl
movsb
into
fcompl
out
jnp
ss
and
jle
lret
jmp
push
mov
call
xchg
rolb
inc
cld
and
leave
inc
xor
lahf
mov
cmp
hlt
int
test
push
in
subl
jg
dec
dec
mov
xlat
mov
fstpl
xor
ja
fdivs
outsb
movl
and
outsb
mov
inc
dec
inc
shrb
sbb
arpl
into
pusha
xchg
insb
imul
or
out
imul
fcmovu
rcr
stos
jg
mov
mov
mov
mov
fsubl
insl
push
test
cmp
cli
fs
mov
into
push
pop
pop
jle
insl
xor
cmp
nop
dec
xchg
out
pop
test
stc
out
jne
jns
enter
dec
insb
adc
inc
dec
fildl
add
stos
push
mov
fldcw
cmp
and
incb
push
clc
xor
xlat
daa
xchg
mov
push
int
sbb
clc
inc
mov
add
hlt
sub
mov
rorl
sahf
repz
jnp
pop
int3
repz
aaa
ljmp
pop
mov
test
pop
in
jmp
ja
mov
cmc
cwtl
sbb
sbb
cltd
lods
aad
pusha
cmpsl
stos
andl
dec
push
xchg
ret
aad
cmp
arpl
ffree
repz
int3
mov
inc
sub
jp
xchg
imul
ss
movsl
adc
pop
pop
repz
in
nop
test
cmp
les
int3
inc
jnp
and
inc
cmp
testw
push
push
sub
add
cmp
test
xlat
and
add
xor
xor
loopne
xor
test
mov
ljmp
mov
push
pop
sub
jae
xchg
and
in
or
or
lahf
or
push
stos
sahf
add
fs
mov
test
cld
xor
push
cmp
es
ret
insb
movsb
cli
add
dec
shl
in
in
mov
stos
in
xchg
xor
imul
push
cmp
lock
daa
bound
shrl
pop
inc
mov
gs
and
in
fsubs
aaa
xchg
pop
and
out
inc
dec
popf
mov
imul
into
jae
popa
mov
push
push
push
mov
rcrl
out
ror
andl
xchg
sub
orb
pop
repnz
and
lcall
dec
and
fsub
lret
xor
or
sahf
xor
testl
xchg
shr
pushf
inc
adc
shrb
out
sub
out
jno
js
scas
dec
f2xm1
imul
fdivl
sub
mov
bound
arpl
fs
pushl
pop
xor
scas
push
cmp
mov
mov
std
fwait
clc
xchg
and
pop
jne
xchg
pop
push
fadds
notb
into
mov
mov
and
sti
adc
cmp
fmuls
aas
push
push
push
pop
fsubl
lahf
mov
push
pop
dec
cmpsb
jb
lret
fwait
call
xor
call
push
mov
mov
cli
lcall
addr16
pop
shrl
mov
bound
jg
fnstsw
scas
push
cli
movsb
fnstenv
stos
int3
push
pop
cmp
push
int3
adc
les
or
sbb
sub
dec
jge
stos
sub
mov
hlt
jle
lods
sub
loope
jecxz
sub
jmp
and
and
mov
scas
and
dec
pop
das
push
std
mov
pop
mov
loop
jmp
jge
mov
mov
dec
scas
jle
stc
xchg
mov
or
push
pop
adc
js
add
pop
push
mov
pop
jge
sub
das
pusha
sub
in
scas
add
das
mov
mov
test
sub
lcall
dec
nop
aas
mov
mov
jae
jmp
inc
sbb
dec
xchg
mov
jne
cmp
xchg
incl
xchg
sub
hlt
outsl
fistps
jb
sbb
pop
add
fisubl
mov
insb
mov
xchg
inc
jno
testb
and
ljmp
mov
xor
jne
in
lds
mov
sbb
xchg
push
mov
imul
lcall
js
mov
xchg
pop
out
repz
dec
push
imul
inc
out
sbb
dec
and
pushf
stc
fmull
mov
jle
cmp
ss
sub
mov
test
add
and
shr
sbb
push
jbe
inc
movsl
jb
sbb
push
mov
or
dec
pushf
push
sarb
faddl
cs
mov
shrb
test
imul
and
divb
int3
jmp
flds
mov
ss
insb
out
mov
inc
push
sub
fsubrs
push
xor
or
and
sub
mov
pop
mov
and
pop
xor
js
mov
jle
dec
popl
and
jns
push
ja
dec
ffreep
arpl
and
dec
xchg
ds
leave
insl
into
dec
lahf
notb
fwait
imul
xchg
enter
imul
dec
cltd
xchg
clc
fimuls
lahf
movsl
mov
mov
orb
pop
xchg
mov
pop
into
push
repnz
out
adc
pop
push
mov
xor
inc
jg
push
xor
loope
or
jns
clc
add
sbb
sub
cltd
pop
mov
outsb
in
cmp
sti
and
adc
dec
fildll
pop
push
frstor
adc
aaa
das
fcoml
mov
sub
sti
out
orl
into
pop
iret
sub
cmpsl
movsb
cmovs
add
push
mov
fs
cs
adc
insb
in
adc
sub
inc
ret
lock
xlat
and
jle
in
js
dec
sbb
pop
and
cmp
mov
jae
cld
push
mov
push
mov
js
dec
lret
lret
pop
sbb
jle
lock
scas
fidivrl
in
mov
rcr
adc
dec
ds
shlb
popa
je
mov
fldcw
imul
in
jnp
into
jp
jo
fsubp
hlt
movsb
sbb
ds
inc
xchg
pop
nop
adc
into
shll
sbb
out
int
push
aam
mov
inc
shrl
push
ljmp
into
or
fcmovbe
outsb
stc
cmpsb
mov
lret
jbe
fs
cwtl
cmp
push
pop
push
cmp
bound
push
or
push
xchg
cmpsb
jae
call
insl
outsl
adc
ljmp
jbe
jle
xor
mov
stc
ret
xchg
push
ror
mov
pusha
dec
lea
mov
dec
fidivs
mov
sub
pop
iret
test
and
mov
psraw
sti
insb
mov
push
mov
pushf
fsub
add
mov
inc
cwtl
into
push
not
push
push
inc
shrl
mov
outsl
xchg
and
jbe
imul
push
lcall
lahf
iret
mov
mov
orb
mov
add
push
cwtl
push
rcll
pop
shrb
mov
pop
clc
test
sti
mov
sahf
sub
bound
cmc
sahf
int
test
jbe
fs
psubsb
dec
pop
mov
jmp
in
push
int
jns
icebp
push
dec
pusha
xlat
jns
add
add
or
mov
add
mov
fldt
add
add
dec
fwait
add
add
add
add
add
add
add
add
sti
or
add
add
ja
mov
jg
adc
int3
int3
int3
int3
int3
int3
int3
int3
jae
jb
jo
add
add
add
push
jo
gs
add
loop
inc
lock
jb
add
add
add
add
add
add
add
add
rolb
add
add
add
arpl
add
add
jb
inc
movb
mov
sti
jecxz
sbb
out
add
mov
adc
lea
sbb
cmc
adc
decl
or
or
mov
test
add
cld
clc
adc
or
adc
add
push
incl
mov
gs
add
add
jbe
adcl
stos
push
adc
push
push
repz
cmp
mov
inc
push
adc
cld
add
cld
mov
enter
add
lret
loopne
clc
lret
roll
lret
mov
clc
xchg
cmp
add
add
add
nop
add
adc
loop
add
add
inc
inc
insl
imul
pushf
outsl
dec
xor
inc
jo
insb
add
arpl
outsb
gs
or
inc
push
add
dec
push
add
inc
gs
shrb
push
gs
add
inc
insb
outsl
push
outsl
jb
inc
outsb
imul
je
insb
add
add
add
xor
add
add
mov
add
add
xchg
add
movsl
adc
fisubl
pop
jle
sbb
xor
mov
icebp
cmpsb
or
hlt
sub
and
mov
lods
scas
push
cmp
mov
or
sub
enter
loopne
cmp
cs
and
jle
fisubrs
mov
cmp
mov
or
int3
addr16
inc
or
dec
adc
mov
or
jg
push
jp
xchg
push
sub
pop
int3
popf
cwtl
mov
dec
leave
xchg
xchg
mov
jnp
test
lock
dec
jnp
push
cwtl
lods
adc
or
mov
mov
movsb
sub
inc
les
pop
lret
cmpsl
jne
lret
in
es
mov
out
jmp
xor
xchg
adc
nop
jbe
les
push
xor
push
rorb
pop
push
mov
inc
sub
cmc
or
iret
mov
push
or
subl
jecxz
inc
hlt
adc
mov
loopne
data16
cwtl
inc
xchg
or
jp
rol
mov
imul
in
lods
inc
pop
sub
and
call
popl
fnsave
std
insl
cmp
or
cwtl
cmp
movsl
rorl
dec
sub
unpckhps
in
xchg
leave
rcrl
jne
ja
popa
nop
fistps
push
mov
xorl
inc
mov
pop
inc
ja
dec
xchg
cmp
xor
test
dec
cmpsb
pop
loopne
cmp
lahf
mov
mov
lds
adc
push
sbb
cmpsb
lahf
ja
test
dec
sti
imull
divb
cmc
push
cld
and
stos
mov
or
icebp
mov
stos
ljmp
rcl
push
shll
jecxz
dec
into
xor
dec
mov
push
test
adcb
cmpsb
sub
push
xor
jg
xchg
stc
dec
lcall
pop
fwait
dec
mov
outsb
repnz
and
mov
and
int
out
and
xor
jl
outsl
out
in
adc
aas
daa
inc
push
jge
sub
mov
dec
notb
push
daa
mov
pop
fwait
call
enter
shl
ffreep
jnp
xchg
lcall
mov
jge
push
subl
loopne
mov
adc
jno
cmp
subl
jns
sub
push
cltd
mov
mov
sub
dec
vpunpckhwd
mov
out
aaa
dec
xor
popf
inc
ss
pop
cld
rorb
xchg
imul
mov
into
test
je
xchg
ret
int
test
loopne
inc
fs
enter
xchg
pop
dec
xor
popa
out
mov
xchg
lds
or
aam
adc
sbb
rorl
mov
or
cwtl
sbb
outsb
ret
mov
inc
fiaddl
inc
clc
sbb
pop
xor
aam
sbb
jb
pusha
inc
mov
scas
cs
jbe
xorl
repz
nop
dec
xor
push
andl
ret
mov
test
js
adc
pop
jb
mov
rcrb
out
jg
adc
lahf
xor
jg
subl
add
cltd
mov
div
subl
cmp
in
movsl
mov
push
jp
imull
cmp
scas
scas
mulb
mov
sbb
outsl
mov
or
xlat
out
pop
or
cmp
mov
addl
icebp
test
rorl
inc
popa
sub
pop
into
or
jecxz
in
mov
inc
jp
cmp
xchg
jmp
mov
nop
stos
mov
jne
mov
push
pop
sbbb
movsb
in
cmp
cs
insl
push
fs
pop
xchg
cmp
pop
or
jecxz
adc
fwait
push
sbb
ror
dec
push
jle
es
and
sbb
adc
out
push
push
lods
push
call
enter
mov
add
ss
lret
orl
repz
xor
arpl
mov
nop
inc
rcrl
popf
mov
jae
and
int
or
xor
inc
in
fistl
xchg
mov
lea
scas
dec
sub
mov
nop
pushf
test
orb
inc
or
cmp
leave
pushl
mull
idivl
pushf
lcall
push
inc
loope
jns
xchg
mov
dec
add
cs
js
mov
cmpsb
and
adc
ds
push
addr16
pop
xlat
mov
adc
xor
fdivrl
jb
jp
adc
repnz
fldenv
cmp
cmp
jno
insl
cli
roll
sub
lods
mov
stos
push
lods
mov
sub
stos
mov
inc
mov
insl
or
sti
adc
push
jg
and
stos
sub
inc
ja
cmpsb
sbb
push
jns
insl
lods
mov
lret
lret
xchg
adc
jns
call
cli
dec
inc
sahf
push
fstps
orl
aas
lcall
ss
dec
ret
adcl
stc
imul
push
lds
adc
into
dec
pop
mov
sub
push
sbb
xor
push
mov
and
fs
xchg
push
sbb
inc
je
fdivrs
mov
cmp
cmp
movl
jb
repnz
loopne
jbe
clc
fwait
jbe
orl
mov
pop
mov
sub
add
ss
sbb
mov
xchg
mov
popf
inc
in
adc
dec
and
hlt
mov
cwtl
fcoms
mov
inc
inc
shlb
mov
inc
adc
jp
adc
inc
popa
je
sub
outsl
push
pop
push
mov
clc
mov
pop
cld
mov
or
xor
out
fwait
pushl
dec
les
pusha
xchg
pushf
xlat
mov
mov
adc
mov
lds
mov
sub
jg
shrb
fidivrs
and
pop
into
movl
aas
pop
mov
int3
ret
es
addl
inc
push
ss
shll
dec
stos
and
test
test
dec
scas
leave
jge
lret
xchg
jp
push
pop
ficomps
dec
inc
sub
repz
out
aam
inc
lahf
cltd
pushf
imul
xor
mov
xchg
xor
fwait
icebp
enter
cmpsb
pop
rolb
push
outsb
loope
lea
mov
int
fwait
not
les
sub
adc
rcrl
add
add
iret
add
stc
imul
jno
stos
ret
repnz
adc
inc
in
imul
or
test
push
negb
mov
ja
sbb
dec
ret
icebp
sub
in
cmc
clc
and
dec
or
inc
cmc
pop
loope
inc
lods
aam
push
pusha
mov
sbb
pop
xor
xchg
jbe
xor
jp
cmp
pop
adc
jae
pop
addl
test
inc
xor
imull
cmc
pop
mov
sbb
sahf
push
loopne,pn
xor
cmc
xchg
fs
mov
sarl
pushf
jae
mov
add
push
adc
sarb
xchg
cwtl
inc
mov
lret
test
es
gs
cwtl
bound
cmp
push
jbe
les
inc
icebp
sub
sub
lcall
dec
add
mov
push
movsl
inc
mov
pop
sbb
or
sbb
xchg
add
sbb
push
dec
pushl
imulb
push
pop
into
xchg
in
sub
sub
cmp
sbb
jns
xor
dec
loope
std
lret
xchg
mov
js
les
mov
ret
mov
rcrb
pusha
cmp
dec
xchg
jecxz
mov
jmp
fcompl
ja
stos
pop
mov
or
frstor
sub
inc
cwtl
aad
mov
sti
mov
dec
int
pop
sub
cltd
iret
push
and
addr16
or
ss
xchg
cmp
inc
aas
fdivr
fiadds
adc
pop
adc
repnz
jge
imul
enter
mov
rcrl
mov
jmp
pop
mov
and
mov
xor
jecxz
jo
cwtl
shr
jge
into
test
adc
pop
fsubrs
push
sbb
mov
es
scas
xchg
and
pop
add
mov
push
out
arpl
rcrb
pop
cmp
lods
push
fsubrs
ss
idivl
imul
icebp
rorl
jmp
mov
fwait
add
jmp
fs
sar
subps
dec
shl
test
cs
in
sub
inc
xchg
xchg
shrb
imul
cmp
arpl
int
lret
cmp
ss
out
fdivrs
xor
xor
std
jne
mov
xlat
mov
mov
xchg
add
push
ret
outsb
xor
mov
push
inc
ja
xchg
xchg
pop
js
push
adc
fimull
aas
sub
jp
shrl
mov
pop
pop
and
int
inc
dec
stos
pushf
sahf
push
cltd
pop
mov
repnz
cs
mov
inc
fwait
mov
ljmp
cmpsb
mov
mulb
mov
cmp
mov
loope
outsb
lods
aaa
mov
imul
cs
sahf
xor
xchg
xchg
bound
aad
imul
aas
test
xchg
shll
mov
sbbl
fimull
cld
jecxz
xchg
sub
push
add
dec
sbb
add
xchg
pop
mov
adc
mov
xchg
repz
mov
dec
sahf
add
mov
push
mov
mov
lcall
cld
scas
pop
push
cmpsl
es
rclb
jo
int3
inc
adc
jnp
push
pop
out
add
mov
mov
pop
loopne
gs
jmp
adc
dec
fs
xor
popa
push
jg
mov
sbb
push
testb
fldenv
nop
pop
pop
jecxz
or
mov
or
in
sarb
cmpsb
fs
xchg
aaa
inc
in
sub
js
pop
pop
pop
push
lret
rolb
push
ja
jae
test
inc
lods
push
divl
icebp
clc
sub
pusha
je
xchg
add
test
jg
fldcw
stc
cli
pop
incb
lock
mov
rolb
mov
ficomps
fldcw
dec
out
or
call
lcall
in
mov
fcomps
fistl
mov
shlb
stos
outsb
aas
mov
xor
sub
lods
lea
push
lock
mov
insl
mov
or
push
sbb
imul
leave
jo
add
int3
mov
xchg
bound
push
adc
sti
insb
gs
jmp
dec
es
push
loop
lods
pop
shll
fcom
lods
sbb
rol
in
test
out
cs
lret
jmp
dec
loop
mov
std
test
sbb
pop
push
adc
aaa
dec
mov
mov
jb
xlat
cmc
or
push
loope
push
int3
shll
add
andl
push
fcmovne
in
lahf
or
pushf
jno
movsb
ja
pop
sub
clc
inc
dec
xchg
add
mov
ds
dec
jne
push
jmp
mov
cwtl
cmpsl
add
sub
push
jmp
mov
inc
xchg
adc
arpl
pop
push
push
lods
outsl
jp
or
xchg
fwait
andl
push
mov
push
lahf
sbb
add
dec
jl
or
adc
jbe
scas
dec
imul
sub
xchg
or
aad
inc
sub
mov
cmp
iret
insb
je
in
mov
lds
sub
int3
push
in
cmp
out
ret
cs
sub
push
ss
inc
js
adc
sahf
xor
popa
or
mov
fcomps
outsb
or
shrb
repz
pop
adc
jp
push
adc
jge
mulb
imulb
jg
mov
ja
cli
cltd
les
add
cli
mov
sub
cmpsl
ja
or
shrl
cmp
inc
gs
into
ret
inc
lcall
xchg
scas
mov
jg
fsubl
or
push
xchg
push
data16
fistpl
into
mov
repz
fmuls
push
pop
push
shll
xchg
das
pop
xchg
out
xchg
in
ljmp
arpl
ret
or
cwtl
and
dec
mov
fdecstp
insb
adc
loop
mov
cmpsl
push
loopne
adc
bswap
mov
mov
inc
pop
xchg
hlt
or
jp
adc
cmp
cmp
movsl
sub
pusha
aam
outsl
enter
inc
xor
ds
data16
cltd
inc
mov
jle
push
out
and
enter
jecxz
enter
ficompl
dec
add
lahf
jge
fsubr
scas
imul
mov
adc
in
fcoms
fs
test
mov
dec
mov
outsb
test
out
andb
dec
cmpsb
xchg
mov
daa
aam
jmp
daa
add
dec
and
test
sbb
jmp
fidivrl
cli
lret
ret
je
lds
add
jl
orl
xchg
push
cmc
sub
mov
mov
shl
push
lret
add
ficomps
ja
ja
test
sub
jmp
aas
popf
andl
frstor
jo
mov
sbb
mov
or
test
es
cmp
cltd
or
xor
into
in
dec
mov
mov
movsl
je
dec
addr16
sbb
inc
xchg
popa
mov
bound
bound
leave
add
jns
sbb
and
int
or
mov
cmp
sub
mov
pop
push
mov
sbb
push
insb
insl
ss
inc
mov
cmpl
jb
push
shlb
adc
sub
adc
out
int
push
loopne
cmpsl
push
iret
or
lret
lret
mov
push
add
add
lret
dec
mov
in
pop
jmp
into
ret
push
arpl
pop
lea
jmp
and
jns
in
pop
xchg
cmpsl
add
jl
aas
xor
lea
sbb
inc
stos
adc
or
pop
lcall
mov
out
mov
or
stos
int
testl
ret
jns
frstor
arpl
sub
add
dec
or
js
rcrb
ja
inc
cmp
push
lret
jmp
lcall
cmc
aaa
mov
aam
mov
loopne
je
aam
adc
insb
or
or
mov
les
cwtl
mov
pop
xchg
pop
push
xchg
push
mov
mov
cmp
leave
jno
pushf
dec
pushf
pop
mov
in
mov
or
mov
in
mov
and
out
xchg
shlb
xor
xchg
dec
data16
lea
pop
imul
loop
push
jo
cmp
mov
add
inc
daa
mov
stos
out
ret
dec
xchg
lcall
lds
mov
jmp
xor
fwait
jge
popf
ret
fmuls
dec
pushf
lahf
out
fcompl
lret
xchg
sbb
xchg
push
jp
cmpsb
js
shll
imulb
lcall
in
hlt
lock
lods
sbb
cwtl
lods
adc
inc
mov
loopne
cmp
mov
cmp
or
cmpb
ja
fisubrl
jmp
cmpb
mov
xor
jno
std
sbb
rcrb
or
leave
push
idiv
mov
pop
pop
test
in
jo
push
cmp
cmp
in
pop
popa
mov
add
imull
lods
ret
aam
push
sub
mov
sahf
jb
mov
jbe
jo
adc
lret
mov
fs
add
mov
out
fstpt
push
ljmp
cltd
sbb
pop
ret
test
mov
xor
push
dec
mulb
adc
and
ror
aaa
ret
mov
push
in
xchg
loop
jl
jl
mov
jp
fisttpl
fdivp
or
enter
xchg
pop
jbe
mov
mov
dec
xchg
test
xor
inc
clc
ficoms
mov
xchg
decb
inc
addr16
lds
enter
packuswb
or
and
insb
adc
mov
dec
nop
fwait
xor
add
out
test
sub
add
mov
push
jge
lret
dec
repnz
inc
inc
js
xchg
and
lcall
xchg
inc
sub
push
or
stc
mov
xchg
pusha
push
mov
and
daa
dec
add
add
repnz
fwait
lcall
int3
inc
movsb
das
cmp
jge
adc
pop
and
andb
mov
sub
dec
lcall
repz
jo
pop
ret
sbb
pslld
in
or
mov
and
fldl
stos
loopne
and
out
cs
or
jge
adc
dec
inc
in
xchg
xchg
mov
repnz
xor
pop
push
popf
push
fwait
pop
sbb
shlb
mov
inc
ds
mov
pusha
out
movsb
imulb
adc
cmp
mov
loope
daa
into
aas
sbb
jge
std
insl
sarl
jno
xchg
and
mov
pushf
sub
sbb
sub
cmp
dec
mov
iret
push
popf
in
sti
out
ja
or
dec
mov
fsubrl
xchg
ss
cs
out
push
stos
sahf
cwtl
aam
mov
lret
fmul
sbb
test
int3
ss
je
push
sbb
notl
aad
and
sbb
jns
dec
push
dec
pop
roll
frstor
pmulhuw
inc
adc
lret
sub
push
clc
mov
cld
pop
sahf
inc
lds
jae
jo
or
in
adc
pop
addb
adcb
mov
nop
xor
xor
pmaxsw
out
repnz
mov
mov
fwait
inc
mov
aad
fisubs
icebp
outsl
cli
mov
stc
jecxz
leave
mov
jg
dec
xor
adc
rep
adc
fsts
sub
adc
idivl
mov
jb
loope
xchg
sbb
pop
push
test
movhlps
outsl
popf
data16
outsb
mov
pop
mov
pop
adc
addl
push
mov
lcall
mov
xor
mov
stc
out
sub
pop
push
pushf
popf
or
mov
xchg
add
add
add
add
add
push
add
inc
add
and
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
xchg
add
addb
add
add
add
pop
mov
dec
int3
int3
int3
int3
int3
int3
int3
int3
add
add
add
out
mov
outsl
outsl
jb
or
add
add
add
add
test
add
add
add
lret
add
add
add
xchg
add
add
adc
add
jnp
add
add
add
inc
add
sbb
sbb
sbb
sbb
sbb
sbb
sbb
cmpsb
add
test
add
js
add
outsl
pop
jb
add
outsl
jbe
push
movl
add
sahf
mov
test
movl
ret
incl
sub
xchg
jmp
call
cwtl
lea
adc
add
push
incl
inc
insb
push
lea
push
std
pushl
add
rolb
add
leave
aaa
and
incl
add
dec
popl
decl
cmp
push
decl
loopne
decl
lcall
push
cld
push
add
lock
add
call
call
data16
stc
pushl
repz
or
pushl
add
adc
inc
adc
add
leave
add
add
add
add
add
add
add
add
pop
sbb
sbb
sbb
push
add
add
add
imul
imul
add
gs
je
adc
popa
gs
add
outsl
add
outsl
add
insb
dec
add
cmc
add
gs
popa
inc
outsl
add
imul
push
mov
insb
push
insb
push
add
add
inc
add
cmp
add
add
add
add
stos
add
add
add
data16
fldt
dec
mov
int3
bound
loop
lret
andl
sarl
adc
out
xchg
out
test
cltd
aaa
mov
pop
in
jl
pop
and
test
aas
and
jle
cli
mov
mov
jl
jo
jmp
cltd
in
repz
xchg
pop
loope
mov
mov
test
mov
je
mov
add
push
scas
call
scas
mov
repnz
and
adc
mov
pop
cmp
adc
in
incl
fldl
int
and
mov
adcl
jp
mov
pop
bound
xchg
clc
cli
sbb
test
filds
jns
push
pop
cli
loope
cltd
xchg
imul
sub
cmpsb
in
ret
inc
and
rcr
fists
ja
add
aaa
scas
cmpsb
sub
jnp
mov
and
push
stos
or
dec
jl
cltd
push
inc
movsb
push
xchg
cmp
push
inc
jecxz
adc
fcompl
outsb
mov
das
jae
mov
jge
or
fiadds
sbb
pushf
negl
mov
push
mov
mov
sbb
xchg
or
shrl
addl
cmpsl
test
jg
pop
xchg
packuswb
jp
sbb
movsb
mov
xor
js
mov
and
xchg
movsb
imul
xchg
icebp
pop
jns
shll
sbb
mov
mov
sti
cmp
mov
and
divb
jb
lds
sub
pop
lea
repnz
roll
and
iret
adc
fbstp
daa
addb
mov
jae
jbe
push
mov
push
xor
call
inc
rorb
and
lahf
pop
neg
sarb
cmp
outsl
push
push
addr16
jg
or
xchg
loopne
stos
mov
cld
dec
loopne
stc
stos
sub
xchg
or
ja
push
mov
imul
lret
ljmp
in
push
xchg
sub
in
nop
cmp
jecxz
cmp
dec
pop
sub
and
xchg
jbe
xchg
mov
cmp
mov
in
pop
mov
inc
test
not
jno
nop
jg
pop
jno
and
nop
xchg
repnz
cld
outsb
jp
loope
dec
push
push
push
repz
stos
push
aad
test
dec
icebp
aas
or
int3
in
push
aas
cmp
mov
lds
orl
mov
ja
enter
jnp
xchg
sub
faddl
dec
or
jae
cmp
aad
jbe
aas
aad
xor
loope
movsl
jns
cmp
push
push
xor
gs
mov
mov
leave
rorb
xor
mov
addr16
addr16
pusha
dec
cmp
lret
mov
popa
or
sbb
xchg
test
enter
fmull
out
inc
sti
shlb
inc
pushf
pop
and
sub
adc
ret
jo
call
push
repnz
mov
mov
test
rorb
gs
cmpsb
in
mov
mov
and
sub
sub
dec
repnz
cmpsb
cmp
jl
outsb
rolb
pop
cmpsb
sahf
mov
aaa
sarl
lods
pushf
inc
movsl
push
mov
bound
xchg
jecxz
and
insb
push
sub
mov
jnp
daa
test
cli
sub
inc
sub
push
cld
lret
or
mov
add
xorb
hlt
sub
add
jl
jno
sarl
out
push
scas
sub
das
xchg
das
mull
sub
mov
sub
inc
mov
add
dec
out
pop
cmp
pmulhw
mov
cmc
popf
stos
test
jmp
sub
and
out
pushf
mov
sbb
data16
imul
imull
adc
sub
add
add
jecxz
lea
rol
adc
jo
mov
mov
push
add
insb
add
cmp
or
push
ret
mull
jge
aad
adc
jbe
mov
push
outsl
inc
mov
data16
loope
mov
lret
xchg
add
idivl
ret
mov
imul
shr
test
push
inc
bound
jmp
xchg
shl
push
inc
insb
sbb
mov
dec
sub
inc
daa
dec
pop
loope
or
loope
xchg
movsl
repnz
dec
insl
xchg
popa
cmp
pop
and
push
adc
aas
mov
pop
shlb
loop
int3
add
push
stc
cmpsb
aad
outsb
adc
mov
je
das
in
repnz
mulb
xlat
lods
fcoml
cmc
and
test
xor
pop
mov
fcmovnb
sbbl
divl
mov
pusha
push
mov
mov
xchg
stos
and
xchg
add
or
into
repnz
push
push
mov
add
pop
sbb
leave
cmp
icebp
rcrl
mov
pop
push
jns
int
je
push
test
pop
cld
sbb
cmpsl
movsl
mov
mov
and
lret
jecxz
cmpsl
fldl
test
arpl
lea
mov
rolb
les
push
mov
gs
mov
push
fmull
fnstcw
adc
jns
xor
les
or
xchg
call
je
pop
gs
lods
jne
and
aaa
mov
mov
mov
push
inc
jns
push
xor
push
fsts
aad
mov
dec
pusha
loopne
aaa
leave
sbb
nop
aas
mov
cltd
fs
push
dec
mov
xchg
adc
and
mov
cltd
push
mov
pop
andl
xchg
lds
push
daa
dec
fnstenv
in
mov
xor
xor
outsl
sub
or
ss
xchg
push
int3
xchg
inc
and
sbb
fisubrs
xor
hlt
fisubl
lea
fs
lods
or
mov
adc
in
std
test
dec
add
subl
cmpsl
mov
jmp
jae
aad
inc
inc
pop
dec
ret
rcll
gs
mov
icebp
dec
mov
mov
mov
jnp
push
push
add
mov
jbe
ret
mov
cmp
lret
shrb
add
js
jbe
or
xchg
sti
mov
js
xor
mov
sbb
push
ljmp
mov
int3
cmp
js
push
rcl
shlb
or
jns
call
add
stos
or
fwait
sbb
xchg
shrb
jmp
push
fbld
iret
or
pop
jg
lret
jno
insl
pop
pop
mov
pop
pcmpeqb
xchg
mov
enter
lcall
bound
insb
cmpl
xor
and
int3
xor
xor
dec
loope
jg
jg
movsb
add
stc
dec
mov
mov
movsb
or
aas
mov
or
cmpsb
push
fstpl
aas
adc
jmp
push
and
push
stc
cwtl
adc
cmp
jle
rorl
gs
insb
lods
pusha
out
lds
sbb
jl
ljmp
mov
setb
int
jg
sbb
enter
adc
dec
sbb
inc
movsb
lret
cwtl
gs
inc
xchg
arpl
mov
pushf
lock
daa
scas
lock
sub
nop
popf
cs
add
jmp
mov
dec
stos
mov
jp
int
dec
add
movsb
jle
xor
jmp
imulb
js
fidivs
stos
adc
mov
outsl
add
daa
add
sahf
or
adc
pop
sub
inc
push
sahf
jne
outsb
or
jmp
outsl
push
aam
pushf
ja
outsb
lret
scas
or
in
popl
and
call
clc
xchg
test
aaa
in
test
xor
jecxz
mov
push
xor
jecxz
repz
push
pushf
mov
or
mov
adc
fcmovne
jo
std
dec
add
aas
imul
push
push
dec
test
sub
addr16
lods
loopne
add
idivl
sub
sbb
xchg
adc
sub
lahf
pop
loope
inc
adc
mov
push
sti
jne
push
mov
aam
sti
sbb
mov
adc
fs
xchg
shll
in
add
xorb
sti
jns
dec
sub
dec
dec
mov
popa
jae
fsubs
imul
pop
cmpsb
and
pop
fisttpll
push
sub
fwait
pop
and
push
lret
out
inc
wbinvd
out
cld
push
imul
and
repnz
stos
xor
f2xm1
jne
mov
andb
inc
repz
cld
pop
fbld
in
cmp
aad
in
jl
repz
cmp
cmp
mov
fstpl
lahf
popa
negl
sbb
pop
test
sub
cmp
dec
adc
pop
ficoml
push
mov
push
aad
push
mov
andl
xchg
in
pop
ret
push
idivb
pusha
popa
mov
in
xor
inc
in
rcr
add
ficoms
push
rorl
mov
lret
cld
mov
adc
dec
out
mov
rep
mov
xchg
push
sbb
arpl
movsl
daa
xchg
lahf
fwait
add
add
ret
dec
hlt
mov
jmp
mov
pop
iret
push
sub
stc
sub
mov
jno
aam
mov
insb
mov
mov
mov
ss
add
jl
pushf
shlb
movsb
movsb
lcall
movsb
mov
jl
shll
stc
lcall
adc
xchg
jecxz
xchg
shlb
decb
iret
out
ljmp
pop
imul
rcl
into
pop
mov
aad
pop
and
pop
loop
push
sbb
pop
mov
adcb
out
pop
and
sbb
push
rcll
ror
pushf
xchg
loope
jg
add
sbb
aaa
xor
push
lcall
mov
push
imul
pop
cwtl
xchg
or
addl
cmp
pop
flds
pop
andl
sbb
lret
mov
pop
and
mov
and
mul
pop
jns
rcrl
add
push
daa
incl
and
out
mov
mov
icebp
sub
imul
js
mov
mov
jl
lds
cltd
sub
cmp
out
lret
outsl
divb
jmp
jnp
push
mov
mov
sarb
mov
addb
xor
loop
std
repnz
jne
mov
lcall
mov
scas
gs
sub
aaa
inc
mov
daa
mov
mov
out
dec
inc
shr
pushf
scas
pop
ljmp
pop
xlat
call
mov
push
inc
mov
loop
fstpt
repnz
xor
hlt
xchg
jns
je
mov
fs
sub
pushl
das
out
ds
out
mov
das
sub
js
jbe
ljmp
pop
sbb
test
sub
out
rcrl
movsb
iret
pop
mov
xchg
movsb
add
incb
adc
add
adc
mov
pop
movsl
shrl
inc
or
mov
mov
sbb
sub
pop
inc
push
outsl
mov
cmpsl
add
push
scas
and
mov
inc
in
ja
or
dec
inc
rcll
jbe
pop
test
mov
les
sub
sub
add
xlat
adc
ror
dec
popa
cmp
fsubl
ffree
xor
or
daa
mov
add
and
ja
jle
sbb
imull
mov
int
sbb
loope
push
fcmovnb
jb
addb
js
and
mov
add
dec
sbb
popa
xchg
stos
loop
add
push
mov
push
push
mov
ficomps
pop
push
stc
pusha
push
add
loop
fsubs
push
jbe
insl
sub
insl
fldl
fsubrs
outsb
iret
sbb
out
push
cmp
in
add
pop
cli
and
push
xchg
testb
push
lcall
fiadds
or
xchg
fiadds
outsl
mov
push
inc
fdivs
push
xor
xchg
fcoms
nop
sbb
sbb
scas
xchg
ficoml
testl
mov
call
mov
pop
out
mov
cmp
or
ja
ja
inc
dec
or
out
cmpsl
mov
push
lds
es
sbb
fsts
ljmp
pop
int
cmp
adc
sbb
arpl
and
mov
into
fisttpll
out
arpl
lret
or
mov
call
das
fidivrl
aad
adc
movsb
scas
gs
mov
sbb
dec
jle
sbb
scas
mov
adc
sarb
fucomi
mov
xor
in
in
fs
cmp
movsb
sbbb
dec
or
std
dec
ljmpw
mov
cltd
xchg
inc
outsl
aas
xchg
mov
xchg
mov
pusha
jnp
jbe
pop
dec
mov
push
stc
sbb
imul
jae
and
aam
mov
hlt
jecxz
adc
pop
mov
sbb
push
and
imul
inc
pop
ss
mov
push
cld
push
push
adc
mov
out
lret
cmp
inc
sub
outsl
mov
sbb
jo
jg
adc
lods
adc
jmp
pusha
sbb
es
xor
sub
add
loope
std
enter
rcl
dec
cld
dec
pushf
pop
fnsave
push
mov
jno
ja
imul
mov
inc
cmc
xor
fnstenv
in
and
adc
test
jbe
or
xchg
ret
lock
jae
mov
cmpsl
neg
or
mov
xchg
loope
cmc
lahf
sub
adc
jb
push
js
decl
or
and
pop
rorb
adc
stos
outsl
test
xor
rcrl
bound
inc
mov
mov
add
push
imul
rolb
mov
lds
sbb
and
inc
scas
jmp
and
xchg
dec
inc
cmp
out
cmp
jmp
stc
sarb
cld
jo
pop
call
and
iret
sub
nop
insl
popf
sti
mov
sub
xchg
stc
cltd
mov
aad
jle
pop
in
mov
push
add
add
rclb
rclb
adc
pop
or
push
dec
push
add
in
mov
dec
imul
push
push
pop
int
xor
push
sub
add
jle
in
test
or
sbb
lret
mov
std
add
push
xchg
test
or
mov
push
jg
mov
dec
lret
mov
lock
in
push
clc
imul
fnstcw
or
jg
movsb
aam
push
insb
rol
xor
push
loopne
ret
and
aas
in
ret
mov
scas
push
sub
mov
or
xchg
nop
repnz
aam
les
add
stos
out
inc
sbb
cltd
or
dec
fdivrl
ds
ds
aaa
outsb
inc
out
push
scas
aaa
sub
mov
sbb
into
adc
or
xlat
and
fcomps
fwait
sbbl
shll
jmp
outsb
add
cwtl
adc
gs
into
push
enter
ficompl
jmp
sahf
in
lods
adc
int3
in
push
dec
imul
arpl
push
xchg
xchg
cltd
cltd
cmp
add
arpl
sub
cmp
int3
shlb
mov
inc
shld
sub
bound
jle
mov
jl
mov
mov
mov
out
dec
nop
les
mov
xchg
xchg
or
adc
int3
push
xchg
mov
pop
fsubrp
lea
scas
and
gs
in
mov
push
cmpsl
and
aam
lcallw
fiadds
xor
xchg
and
cmp
dec
cli
cld
inc
sbb
inc
out
inc
fisubs
not
jb
xchg
lahf
aaa
add
push
mov
cmp
inc
les
dec
pop
cmp
mov
mov
test
mov
mov
push
cmp
ret
mov
call
jecxz
das
mov
aam
js
pop
je
pushf
popa
or
push
mov
mov
cmp
lea
les
adc
insb
cmpl
ret
cs
in
adc
adc
mov
cltd
out
or
pop
mov
jo
int
inc
fdiv
test
sbb
adc
mov
cmpsl
xor
push
lret
jmp
test
sbb
daa
popa
fs
sub
cmpsb
sub
sub
pop
shlb
pushf
daa
pop
push
addb
gs
dec
mov
fldl
jno
or
enter
ret
jnp
enter
mov
xchg
int3
add
sub
sbb
jne
jmp
jns
je
adc
add
pop
cmpsb
mov
xchg
stos
loope
lock
lahf
dec
xchg
pop
rcrl
sbb
fninit
setne
pusha
hlt
cmp
nop
mov
push
push
mov
and
ficomps
cltd
mov
test
aam
cli
adc
imul
lea
out
fimuls
int
ljmp
sti
mov
mov
jmp
pop
pushf
ds
add
push
popf
loope
lods
mov
hlt
int
out
out
mov
lret
pop
sub
jae
inc
ret
insb
int3
inc
cmp
mov
cmp
mov
nop
shrb
lea
in
and
pextrw
lods
data16
mov
or
call
xor
and
mov
fistpll
outsl
inc
jle
into
ret
cmc
inc
and
sub
fidivrs
push
sbb
push
pop
jp
pop
dec
pop
aad
insl
fisttps
pop
in
rcrl
pop
push
les
rcr
iret
dec
ret
pop
fcmove
push
xchg
dec
stc
out
adc
stc
mov
and
popa
test
or
sarl
and
or
insl
cs
ljmp
mov
int3
or
adc
xchg
mov
movl
push
inc
inc
std
shrb
aam
sub
dec
cmp
inc
or
lahf
loopne
aam
inc
imul
pushf
test
fs
lds
adc
lods
dec
std
fcoml
mov
fidivrl
fwait
stos
push
cmpsl
or
fs
aas
dec
and
sldt
inc
pop
adc
jno
popa
adc
add
add
jmp
add
add
add
add
add
add
sbb
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
data16
add
add
add
add
fildl
add
add
add
addb
add
loope
add
ja
mov
dec
int3
int3
int3
int3
int3
int3
int3
int3
pop
add
add
add
add
dec
jae
and
outsl
add
add
dec
add
add
add
add
add
add
add
add
js
and
add
add
insb
add
add
add
sbb
sbb
sbb
mov
add
add
and
popa
das
push
dec
push
jnp
imul
push
cld
add
sti
jecxz
jne
leave
in
js
daa
cld
adc
mov
pop
call
pop
adc
lock
or
je
call
push
leave
in
inc
lea
add
or
dec
or
adcb
sbb
push
pop
cmpsl
push
call
mov
loopne
mov
mov
add
xor
push
loopne
add
inc
or
add
je
push
pop
shlb
mov
mov
decl
add
stos
push
add
lea
loopne
loopne
add
mov
or
inc
xchg
adc
push
clc
add
loopne
add
add
pop
add
add
add
ret
sbb
sbb
push
add
add
add
add
add
cmp
gs
add
add
push
je
add
jb
outsb
je
inc
fs
dec
add
xlat
gs
je
dec
insb
imul
inc
push
jne
outsb
jae
js
add
inc
xor
jb
idivl
add
add
cwtl
add
bound
add
add
add
add
repnz
add
add
js
add
add
add
push
das
je
out
mov
jmp
mov
pusha
mov
push
pushf
neg
out
hlt
pop
fildl
mov
dec
cmp
sbb
inc
push
dec
out
outsl
jmp
out
test
xchg
jecxz
shll
out
mov
cmp
mov
imul
insl
cmp
sbb
pop
loopne
popf
outsb
dec
stc
data16
inc
jl
jl
inc
xor
sub
ss
cmpsl
dec
hlt
push
mov
sub
inc
mov
xchg
lea
test
push
add
andb
inc
pop
sub
add
add
orl
mov
pop
push
cwtl
xchg
cmp
movsl
ret
inc
dec
sub
jne
ret
stos
add
inc
popl
pop
xor
test
insl
into
dec
ja
jg
mov
fldt
sbb
mov
cltd
bound
mov
in
mov
push
aam
insl
arpl
xor
fisttpll
aad
stos
or
push
or
mov
mov
out
xor
lret
or
sbb
fmull
in
insb
push
rcrb
repnz
or
sub
cmp
push
mov
jecxz
cmpsl
jmp
push
sbb
dec
pusha
xchg
sar
aad
xchg
jle
or
shrb
insb
dec
outsl
cmp
pop
out
daa
aam
scas
pop
pop
mov
or
mov
jecxz
repnz
xchg
mov
sub
lcall
stos
mov
jbe
test
decl
push
or
test
jge
daa
lods
sahf
mov
lret
adc
lret
push
je
cwtl
rcl
push
inc
cmp
mov
ficompl
pop
adc
xchg
cmc
xchg
rcr
adc
repz
pop
pusha
stos
ja
int
xor
sub
ljmp
in
inc
push
push
les
push
cmp
sbb
adc
aam
adc
imul
imull
cmp
add
lcall
jecxz
adc
in
lods
outsb
mov
hlt
dec
dec
add
stos
xchg
insb
dec
in
aad
pop
fcoms
sub
sub
cli
add
loope
fsubs
fstpl
jle
jmp
test
mov
popa
sub
pusha
cmp
sub
ljmp
adc
xor
enter
dec
push
test
testl
cmp
idivl
mov
cltd
loopne
mov
jecxz
movsl
and
or
dec
in
shrl
adc
push
adc
aam
ss
sbb
and
stc
mov
push
fsubrp
sbb
xor
xor
aad
hlt
sbbl
cltd
loop
inc
pushf
mov
and
outsb
mov
dec
mov
sub
testl
jmp
jne
pop
rclb
stos
xlat
leave
dec
jle
or
xor
mov
loopne
mov
sbb
cld
lods
mov
movsb
inc
add
popf
test
bound
test
shrl
push
mov
or
test
jno
lea
data16
cli
cmp
xchg
loope
mov
mov
and
xchg
lods
mov
stos
sbb
mov
xor
mov
adc
xchg
sub
mov
int
adc
mov
stos
shl
mov
adc
mov
mov
stos
adc
mov
shrb
popa
dec
les
push
mov
inc
inc
leave
push
outsl
push
inc
cmp
sub
and
add
jl
cmpsl
inc
mov
cmp
jnp
test
cmp
jg
inc
jb
or
sar
scas
jns
jle
fisubrl
lock
push
cwtl
pop
lcall
imul
push
lahf
aam
ret
in
ds
lods
push
jg
ret
inc
cmc
mov
std
repnz
mov
add
es
cmp
jnp
xlat
xchg
pop
ret
loope
xor
fisttpl
pop
mov
dec
ja
repz
cmp
in
inc
call
or
lods
lret
xorb
je
lds
sub
xor
fxch
fstp
aad
xor
out
add
aam
movsb
je
cld
sbb
les
xchg
arpl
out
lahf
pop
inc
pop
es
xchg
cli
jp
ljmp
pop
xchg
or
fs
sbb
xor
mov
pop
and
fs
jmp
inc
and
xor
loope
lods
add
jmp
repnz
and
xlat
test
jo
scas
iret
xor
decb
inc
lods
cmp
mov
ja
stos
push
loopne
and
xchg
cmpsb
pop
sbb
mov
imul
xorl
mov
add
push
jae
test
imul
mov
jge
dec
inc
int
out
icebp
cmp
pop
arpl
mov
inc
es
std
negl
popw
mov
jbe
or
pusha
jbe
subb
pop
pusha
cs
push
mov
xchg
icebp
aaa
fdivrl
and
mov
in
loop
test
call
jo
sahf
jne
mov
in
mov
add
mov
sub
scas
dec
jne
pusha
jecxz
xchg
sbb
mov
loope
js
lods
inc
and
sbb
jp
inc
add
movsb
xor
sti
push
mov
fs
jne
mov
xchg
call
repz
mov
xchg
in
fs
sbb
jle
cmp
test
cmp
inc
add
sub
int
jge
sti
adc
mov
mov
xor
popf
pop
sub
daa
cs
xor
jecxz
fldl
cmp
arpl
outsb
mov
lret
and
sbb
filds
jg
jle
and
sbb
mov
pop
push
push
push
push
lods
cltd
out
or
and
pop
and
pop
xchg
adc
xor
ret
hlt
icebp
and
inc
test
shlb
lret
adc
inc
decb
mov
or
add
pop
lods
adc
decb
mov
push
jbe
sti
sti
mov
outsb
mov
test
push
lds
fisubrl
aad
pop
std
loopne
lds
or
aaa
xchg
mov
imul
ret
push
fwait
sahf
xchg
push
mov
outsb
cmpxchg
sub
fwait
cmp
fs
sub
into
mov
shll
add
mov
xchg
into
sbb
fistl
in
rclb
fstpt
push
jp
ret
outsl
sahf
and
mov
xor
rcrb
mov
pop
mov
leave
xor
xchg
dec
mov
insb
repz
add
push
rolb
sub
add
loopne
jmp
mov
out
test
rcrl
aam
shlb
setg
xchg
cli
push
xor
and
or
test
dec
adc
sub
and
hlt
inc
pop
mov
fsts
jae
hlt
ljmp
inc
cwtl
test
xchg
ss
rcrl
or
repz
std
sub
and
jmp
add
mov
popa
add
daa
int3
pop
sbb
mov
pop
add
aaa
test
lock
adc
mov
cmc
inc
jmp
dec
sbb
mulb
out
fsts
sub
jae
and
mov
mov
pop
jmp
inc
out
xchg
mov
js
daa
sbb
mov
cltd
mov
aad
inc
push
or
jne
xor
in
aas
pop
mov
jno
mov
fs
aaa
jg
repnz
jo
pop
scas
inc
cmp
xchg
inc
sbb
or
push
cmp
inc
call
addr16
sub
jno
outsb
movsb
push
jae
push
fwait
jp
fisubrl
stos
sub
adcl
data16
fwait
in
jo
std
pop
cwtl
into
ficoms
enter
sub
cmp
into
into
lock
subb
push
leave
daa
stc
push
shlb
enter
inc
jl
movsl
mov
out
cmc
dec
xchg
push
xchg
scas
loop
test
dec
mov
mov
adc
and
sub
adc
test
pop
jnp
adc
jge
jecxz
aas
jb
mov
add
push
ja
xlat
rclb
jae
cltd
push
mov
mov
aad
icebp
mov
inc
loope
out
aas
add
rcrb
aaa
mov
sub
ds
ljmp
mov
cmp
mov
jae
mov
fists
jge
je
push
push
cld
aad
inc
pop
cli
int3
out
es
mov
mov
sti
call
pop
enter
jl
pop
push
sub
xor
cmp
pop
inc
into
arpl
lret
push
pop
out
pusha
add
imul
fcompl
mov
dec
leave
test
mov
mov
and
cwtl
sbbb
cld
fstps
push
imulb
sahf
jae
shrb
mov
add
jne
inc
cmp
sbb
mov
jecxz
fs
lods
cmpsb
ljmp
xor
cs
jmp
and
push
adc
fsubs
fdivs
jecxz
jmp
mov
inc
cmpsl
daa
jg
outsl
fcomp
neg
aam
in
xchg
mov
dec
movsl
cmp
jmp
cmp
sbb
aam
inc
cwtl
clc
lock
fidivrl
fidivl
movsl
negl
push
aaa
aas
pop
aad
xlat
sbb
add
and
add
sbb
daa
outsl
scas
testb
test
cmp
sub
fwait
mov
dec
adc
fstl
shl
adc
dec
ret
dec
pop
push
add
cmp
out
imul
shlb
jecxz
pop
enter
adc
mov
jae
rcrb
add
jecxz
inc
xchg
lret
jl
inc
les
orl
jmp
mov
xor
xchg
mov
clc
lahf
lods
and
loope
and
push
jg
lock
lods
push
dec
dec
scas
inc
cmp
fdiv
add
lods
dec
in
mov
add
cltd
lret
sbb
fcomps
fnstsw
cmp
mov
sbb
jae
dec
outsb
cltd
decl
sbb
lea
outsb
out
add
negl
xor
dec
push
mov
xchg
sub
lds
sbb
nop
ds
andl
sub
sahf
push
jecxz
jmp
mov
push
pop
in
fcompl
dec
outsb
or
inc
std
adc
sti
or
pop
out
jae
jnp
inc
cmp
xchg
dec
aad
mov
push
aaa
xchg
mov
fwait
sub
and
sub
mov
mov
int
sub
mov
hlt
in
jmp
inc
jmp
pop
mov
xor
fs
mov
out
mov
jmp
cmp
sub
mov
rorb
push
pusha
sub
jl
fadd
jp
scas
lcall
dec
scas
or
popa
fisubrl
std
add
xlat
in
dec
adc
inc
pushf
out
or
xchg
int
filds
pop
pop
xchg
andb
push
ret
loope
push
loopne
rorl
addr16
adc
cmpsb
repnz
insb
xchg
decl
push
push
pop
jmp
icebp
in
sbb
jmp
scas
inc
ja
pushf
and
pop
adc
adc
repz
les
jae
and
sub
icebp
dec
int3
and
fdivrs
adc
pop
sub
arpl
orb
mov
sub
pop
test
pop
push
cmp
pop
push
out
sbb
cmpsl
in
mov
std
roll
sub
xchg
in
pop
call
xlat
aas
cmp
je
adcl
sub
mov
mov
rcrb
inc
cmp
into
add
pop
sbb
jmp
jno
pop
pushf
ret
outsb
inc
out
mov
lds
mov
sub
fwait
lods
jae
mov
adc
pop
mov
dec
ja
mov
out
arpl
or
mov
call
jbe
jp
pop
jbe
sub
rcrl
gs
lods
adc
and
mov
adcl
in
in
sbb
dec
push
inc
adc
in
popa
xor
fmull
data16
mov
jl
das
rclb
xchg
aad
in
fmulp
mov
sub
mov
xchg
in
fsubrs
je
ret
or
dec
enter
pusha
push
xor
aas
push
jo
sbb
and
dec
lahf
rol
sbb
imul
push
mov
iret
into
mov
push
push
cmp
xchg
das
mov
adc
cmp
jp
repz
mov
addr16
or
mov
iret
setb
lods
in
ret
xchg
jmp
ljmp
jns
push
jae
arpl
imul
sub
in
add
dec
adc
rcrl
add
ja
test
out
xor
pusha
cs
xor
sarb
mov
clc
cmc
push
fldl
les
and
push
push
test
das
je
sbb
push
ss
cs
add
repnz
leave
add
fs
push
in
incl
dec
popf
mov
repz
fwait
or
push
aad
push
add
fwait
jl
or
mov
inc
push
aaa
inc
mov
ja
loopne
pop
lret
dec
pop
stos
dec
dec
ja
pop
fldcw
pop
fbld
cmp
loopne
mov
mov
mov
in
sarl
in
push
mov
movsb
lock
adc
xor
and
mov
xchg
cld
aaa
xchg
shll
or
push
sbbl
xor
mov
jmp
dec
jbe
sbb
and
stc
rolb
sahf
lds
dec
xlat
out
mov
call
incl
loope
gs
sub
ror
fiaddl
cmc
in
mov
sar
jnp
adc
out
jnp
lods
scas
pop
sbb
jo
xchg
les
push
ljmp
push
mov
pop
out
push
test
inc
in
jg
add
movsl
push
jae
or
hlt
add
push
dec
outsb
pop
push
faddl
adc
dec
stos
insb
mov
sbb
idivl
push
adc
cmp
testl
sub
sbb
mov
mov
ret
shl
and
ret
sub
fstl
imul
jns
aad
push
cmp
in
mov
adcl
and
loop
inc
jae
cmpsb
divb
dec
int
add
les
jno
fidivl
jno
mov
mov
adc
dec
cmp
mov
out
jne
inc
pop
jb
out
cmp
cmp
cmp
lods
mov
mov
mov
ds
adc
push
pushl
sbb
imul
jg
mov
xchg
ss
in
fwait
or
rolb
adc
jecxz
hlt
rorl
pop
push
mov
pop
inc
pushf
subb
cmp
sbb
scas
xor
aas
lret
dec
sub
dec
into
loopne
mov
jnp
andb
sahf
jne
xchg
cmp
jo
loop
pop
push
sti
sbb
je
not
push
add
jg
fisubl
cmp
es
shlb
sub
inc
loope
cmp
xchg
fcoml
out
rolb
stos
in
inc
fistpl
fmuls
out
repnz
xchg
xor
sub
cwtl
shll
sub
lret
dec
aam
idivb
int
and
daa
outsb
xor
mov
inc
push
int
sahf
dec
fnstsw
add
test
cltd
add
cmp
pusha
mov
pop
bound
mov
pop
in
aaa
jb
xchg
je
mov
leave
mov
in
add
push
sub
mov
push
aaa
iret
jae
xchg
jb
push
scas
push
dec
mov
jmp
jns
adc
jnp
and
pusha
push
jmp
insl
ja
cmpsb
jbe
ja
pop
popa
insb
jge
in
lods
ljmp
mov
mov
jno
adc
fisubl
mov
pop
movsl
hlt
adc
xchg
adc
rcrl
loopne
or
es
xor
pop
and
add
mov
cmp
std
pop
xor
add
pop
or
call
mov
push
push
fnstsw
loop
jbe
or
mov
mov
add
dec
fs
adc
inc
aas
std
je
mov
cmpsl
out
shl
cmc
stc
sti
data16
int3
orl
fwait
addl
xlat
push
xchg
insb
dec
into
adc
pushf
push
iret
dec
push
rorb
push
mov
or
shl
pop
mov
mov
mov
fwait
cmp
out
fldt
loope
pop
jnp
nop
jnp
fidivs
arpl
sbbl
add
loop
jl
mov
xchg
or
out
add
test
insl
push
cmpsl
enter
pop
cmc
in
sbb
jo
movb
jge
js
in
addr16
cltd
dec
or
pop
mulb
add
inc
push
popa
push
in
jns
xor
mov
jecxz
or
adc
xchg
into
adc
out
insb
sub
or
movsl
loopne
jo
push
cmp
inc
or
outsl
shlb
push
jns
pop
orl
push
xor
mov
mov
add
mov
in
cwtl
mov
jl
mov
mov
rclb
jns
les
or
mov
loope
test
test
jno
and
cmpsb
inc
xchg
jge
mov
and
test
loope
pop
push
jae
cmc
sub
fcoms
push
sbb
int3
adc
int3
scas
mov
js
sti
movsb
sahf
mov
pop
push
jp
je
push
dec
jl
jl
mov
fs
mov
add
aam
xchg
sahf
push
mov
into
jne
dec
arpl
lea
sbbb
stos
dec
cwtl
mov
hlt
xor
mov
push
inc
shlb
pushl
test
lcall
jnp
pop
xchg
mov
mov
leave
xchg
ret
xor
ja
add
and
fistl
repz
adc
dec
rorl
adc
inc
movsl
or
jecxz
int
sbb
in
jne
push
imulb
mov
or
jge
jne
sbb
sahf
add
xorb
ret
out
int3
ss
je
imul
sbb
fcmovnb
xor
jb
and
add
mov
es
and
fcomps
pop
dec
fiadds
out
pop
xchg
mov
add
add
mov
add
add
add
add
add
add
add
add
xchg
add
add
add
cwtl
add
bound
add
add
add
add
repnz
add
add
js
add
add
add
add
add
add
xor
incb
add
add
add
addb
sar
add
stos
stos
add
ja
mov
dec
int3
int3
int3
int3
int3
int3
int3
int3
add
add
add
add
lods
and
outsb
dec
or
add
or
adc
add
add
add
adc
add
jl
add
add
add
add
add
add
shlb
add
roll
add
add
add
add
add
add
add
mov
jne
int3
add
outsb
jne
outsb
add
push
imul
rorl
shll
mov
add
push
inc
jmp
nop
push
cld
add
dec
pop
mov
mov
cld
decl
std
mov
addb
push
test
push
push
add
xchg
pop
jne
mov
add
jns
rolb
rolb
incb
add
push
add
add
daa
and
decl
cmp
call
incl
cmp
loope
ljmp
push
inc
add
out
test
add
decl
std
ud0
ret
lret
ret
int
cmp
lea
lock
adc
lea
arpl
pop
add
add
popa
add
add
sbb
adc
add
add
add
icebp
pop
add
add
je
imul
jb
and
imul
add
push
arpl
xchg
insl
gs
add
insb
add
js
push
insb
les
popa
add
add
outsl
insb
insb
jne
gs
xor
popa
insb
jne
push
add
addl
add
add
add
add
add
add
add
sbb
add
add
add
add
mov
add
adc
cmp
imul
ja
xor
dec
sahf
dec
cmpsl
mov
fsts
and
push
cmc
jle
testb
jp
adc
hlt
lcall
mov
or
push
in
fsts
std
add
mov
push
std
enter
or
xlat
xchg
in
inc
inc
inc
out
xor
in
dec
push
cs
fldt
mov
cmp
sbb
cmp
inc
or
gs
lods
leave
push
cwtl
ffree
mov
popf
mov
daa
push
lock
fwait
and
movsb
cmc
cmp
cld
mov
ss
mov
outsl
mov
mov
sahf
pusha
or
int3
in
cwtl
sbb
aas
adc
loop
in
imull
lea
mov
scas
cmc
jno
push
lea
cli
dec
imul
mov
dec
fdivrl
sti
cmp
loopne
repnz
cmp
lcall
scas
ds
xor
cmp
pop
mov
cs
mull
mov
scas
in
cmp
pop
rol
popa
test
lds
data16
pop
imul
adc
xchg
jns
xchg
inc
jge
adc
mov
inc
jmp
cwtl
hlt
bound
pushf
outsb
or
xlat
pop
lds
sbb
addr16
idivl
js
call
jg
hlt
out
mov
fsubr
stos
and
mov
dec
adc
outsl
mov
std
outsl
sub
sarb
call
add
sbb
jl
aaa
insl
lret
bound
mov
fidivrs
xchg
xchg
subl
mov
dec
sbb
mov
repnz
add
sbb
and
xor
sti
sbb
xor
sti
movsb
scas
xlat
sub
mov
mov
out
sahf
scas
sub
pop
dec
outsb
lock
addps
dec
jge
hlt
in
addr16
push
push
xchg
xchg
mov
mov
mov
pop
shlb
cmpsb
cmp
mov
int3
mov
cmc
dec
push
hlt
jl
pushf
pop
stc
aas
into
mov
orb
inc
and
mov
in
mov
sti
sub
mov
lods
loopne
arpl
lock
std
mov
push
sub
sub
fs
aam
xchg
cmp
sub
xchg
mov
inc
and
or
rclb
xchg
or
test
outsb
dec
adc
cli
add
cmp
fnstcw
push
test
jnp
add
sarb
cs
ret
ret
dec
in
in
fnstcw
loopne
inc
enter
rcrb
lcall
std
movsl
imul
cmp
loope
insb
push
mov
inc
pop
sbb
dec
or
pop
rcrb
call
stos
inc
out
imul
jno
insb
loopne
sub
lret
inc
clc
out
inc
push
add
fs
pushl
test
push
data16
xchg
push
dec
pop
mov
daa
cmp
idivl
adc
aad
jno
push
dec
iret
arpl
pushf
lock
test
dec
cs
pusha
jb
mov
jle
notb
lock
xor
daa
and
inc
lds
jns
movsb
flds
adc
enter
ret
in
movsb
jae
mov
dec
repz
insb
push
xor
loope
xchg
xlat
scas
add
mov
jl,pt
xchg
mov
xor
jno
outsb
sub
adc
scas
cmp
add
inc
fiadds
not
cli
in
ljmp
lds
mov
pop
clc
test
popa
sti
test
adc
mov
out
push
xchg
jmp
sbb
sbb
fmull
xorl
xchg
aam
and
push
faddl
testl
mov
fdivl
lahf
mov
mov
inc
dec
dec
loopne
pop
test
stc
xchg
mov
sub
cmp
jg
gs
insb
mov
pop
pop
orl
sti
stc
sub
adc
adc
mov
imull
out
push
cmp
sahf
add
xorl
push
aaa
je
jg
fisubs
lea
xor
in
pop
fwait
adc
loope
jmp
ficoml
mov
lods
out
js
dec
push
dec
stos
imul
mov
pushf
mov
sub
das
cmpsl
mov
mov
xorl
jbe
loope
call
inc
inc
cmp
es
stc
les
aas
push
mov
and
or
sbb
icebp
pop
xor
push
fsubs
insl
pop
jnp
int
mov
mov
push
scas
jno
fmull
fildl
jne
xor
mov
mov
jne
push
mov
cmp
cmp
ljmp
dec
hlt
cmp
pop
les
pop
int
insb
sarl
pop
stc
cli
les
out
lods
dec
jo
aam
fwait
cmpsb
rcrl
cltd
iret
push
mov
push
jmp
fwait
inc
gs
aad
lds
push
jge
mov
pop
pop
mov
jns
out
ret
pushf
add
mov
lds
aaa
imul
mov
cwtl
das
xor
sub
lea
push
shr
xlat
dec
std
inc
and
mov
jnp
mov
insb
les
dec
pop
into
out
xchg
sbb
in
cmp
mov
lahf
and
aam
and
lods
out
or
aas
mov
xchg
out
jge
lods
sbb
add
in
mov
les
je
adc
adc
std
aad
fbld
in
push
pop
dec
jno
out
repz
jecxz
outsl
ja
out
in
xor
pop
repz
dec
push
out
lods
cmpsl
dec
sahf
ja
push
dec
dec
jnp
pop
push
cmc
jge
shl
mov
adc
scas
push
mov
jb
xor
ds
test
lea
cmp
test
mov
cmp
fwait
mov
sub
dec
out
mov
pop
ljmp
adc
mov
lods
push
or
subb
mov
mov
jbe
clc
popa
stc
ficompl
arpl
loopne
push
mov
inc
outsl
in
mov
cmp
sbb
ja
fwait
lds
cmpsl
mov
std
ret
and
rorb
out
cmpsl
roll
sbb
ja
push
outsb
popf
dec
pop
sub
popf
sti
xorb
cmp
sbb
or
xchg
js
pop
xchg
cmp
sub
sahf
fildl
pop
div
roll
cmp
xor
jl
lods
sbb
xchg
repnz
xchg
or
mull
xchg
add
jb
mov
out
add
loopne
ficoml
lret
jmp
push
dec
mov
xchg
aas
xchg
push
sub
in
pop
push
fisttpl
test
outsb
cld
xlat
pop
xchg
dec
cmpsl
pop
call
push
dec
lea
lods
ret
sub
jo
inc
sub
loope
cmp
out
add
mov
inc
mov
mov
inc
icebp
and
mov
out
fwait
arpl
pop
jo
add
xorb
push
loop
shl
xor
mov
pushl
push
testb
inc
arpl
pop
or
pop
outsb
sbb
sbb
sahf
aaa
pop
int
into
inc
and
mov
or
test
lock
ljmp
bound
jae
sub
sti
fwait
or
insl
and
popa
add
cmp
test
jbe
add
adc
sbbl
popa
dec
jbe
add
xchg
sbb
cs
outsb
jns
cli
negl
jge
push
test
mov
xchg
outsl
inc
and
or
enter
cltd
add
outsl
pop
frstor
xchg
clc
ret
aam
sub
lcall
sub
mov
mov
adc
mov
pushf
fsubs
fcmovbe
pop
push
and
loopne
fistps
cmovae
sub
roll
push
pop
sub
sbb
jp
aas
jecxz
inc
add
les
arpl
dec
add
pop
dec
inc
lret
pop
sub
and
aas
test
adc
dec
jno
cmp
fsubs
pop
insl
and
repnz
shrl
mov
lcall
sub
shll
stos
sahf
xchg
mov
pushf
call
insl
or
or
mov
xorl
sbb
aas
out
add
sub
cmp
cwtl
lcall
adc
inc
loopne
mov
xchg
lret
xchg
mov
mov
adc
sbb
dec
add
mov
fistl
mov
aas
push
insb
mov
push
loop
lods
ret
add
fcoml
adc
jecxz
mov
jno
push
mov
and
mov
out
test
mov
sub
inc
dec
pop
adc
scas
rcll
sub
pop
test
cmp
mov
push
leave
jg
jl
dec
xor
or
stc
cmpsb
sub
or
into
sub
aam
movsb
mov
loopne
and
sub
sarb
xor
jecxz
mov
and
pop
jno
mov
jno
std
jl
xchg
push
pop
pop
jmp
ret
xor
pop
push
or
lcall
fldenv
pop
mov
leave
cli
call
mov
std
das
clc
mov
nop
xchg
pop
cmc
into
and
and
adc
xchg
es
ret
adc
sbb
mov
xor
test
pop
mov
adc
mov
ja
repz
stos
pop
lds
dec
test
sbb
and
sar
xor
das
loope
xchg
enter
movsl
mov
and
fwait
inc
fcmovnbe
enter
push
pop
ds
add
mov
test
mov
xor
fs
cmp
xor
push
sbb
ja
fcompl
fwait
cmc
leave
mov
jb
jnp
hlt
inc
aaa
shll
xchg
fs
mov
or
out
inc
adc
add
push
imul
ds
jns
js
sub
dec
mov
arpl
cli
sbb
stc
pop
test
pop
lret
xor
add
cmpsb
cmpl
outsb
sub
int3
or
pop
pop
cmp
or
push
dec
inc
es
fidivl
jo
jmp
adc
push
inc
dec
inc
jnp
test
rcl
or
jmp
lock
cmp
rorl
jb
ficoml
cmp
sahf
push
js
push
ja
enter
or
popf
sbb
movsb
test
aas
hlt
sbb
sbb
mov
adc
cltd
dec
add
cmp
popf
mov
push
push
lret
and
pop
sbb
sbb
push
cmc
adc
add
filds
imul
push
call
inc
ljmp
mov
aaa
cmp
popa
rorl
int
daa
cltd
mov
mov
xor
push
or
inc
fcomps
adc
sub
xchg
jmp
sbb
mov
mov
iret
dec
and
or
scas
inc
test
das
pop
jp
data16
pop
dec
pop
sbb
dec
dec
or
insl
dec
jmp
aam
mov
inc
rorl
lock
lods
xlat
adc
into
movd
test
sbb
mov
and
cli
lods
addb
arpl
gs
add
addl
mov
in
xor
or
imul
push
pop
jecxz
mov
loope
jo
mov
cld
push
aad
lock
or
pop
pop
add
mov
int
jl
xchg
scas
adc
ss
push
xchg
push
iret
sti
lcall
mov
cmp
pusha
and
gs
xchg
lcall
mov
iret
sub
mov
cmpl
mov
jo
dec
and
je
lret
adc
cmc
add
add
ret
dec
clc
adc
cmpsb
test
mov
adc
cmp
arpl
push
sub
sub
popa
sti
fs
fdiv
push
cmpsb
and
popa
lds
in
aad
call
push
inc
fsubrs
and
mov
jp
mov
jg
jmp
cmp
rcll
xchg
enter
outsl
mov
or
scas
movsb
mov
sarl
outsb
push
dec
push
mov
lahf
test
fbstp
or
aad
clc
sbb
adc
jle
shlb
insb
pop
cmp
popf
and
rclb
push
mov
das
xchg
je
dec
inc
das
and
daa
xor
mov
push
xor
fcomps
in
jl
cmp
mov
and
shl
xor
push
sbb
inc
data16
mov
test
mov
das
gs
cltd
jb
stc
dec
stc
into
dec
scas
sti
mov
pop
mov
shl
cmp
add
push
movsb
add
pop
or
les
notl
adc
insl
inc
jle
jmp
lds
lahf
mov
sbb
insl
xor
mov
add
ja
mov
cmpsl
fs
pop
mov
mov
jae
insb
stos
lds
add
and
and
cld
and
xchg
inc
in
mov
push
sbb
dec
in
scas
fmuls
mov
lods
mov
mov
cs
test
jecxz
test
nop
sbb
scas
adc
rcll
repz
loop
push
dec
ror
dec
stos
mov
fwait
xchg
xor
or
sahf
sbb
cmpsb
cmp
out
lods
and
fwait
out
mov
pop
jae
stos
js
inc
xor
sbb
sti
ljmp
mov
mov
cmp
inc
data16
push
ds
loope
or
xchg
cld
and
jnp
dec
pop
cmpsb
push
dec
jne
test
lods
jecxz
jb
in
mov
cmp
mov
sbb
or
pop
inc
movsb
aas
or
mov
bound
mov
sbb
inc
movsb
stos
or
jbe
pop
cmc
xchg
cmp
xor
shrl
mov
sbb
xor
in
jo
arpl
gs
ss
or
mov
cmc
hlt
leave
mov
movsl
clc
std
stc
mov
adc
idiv
out
out
addr16
loop
jl
outsb
dec
sbb
sub
dec
mov
lcall
pop
pop
sbb
das
sub
roll
shl
push
mov
rolb
sarl
adc
push
cmp
sub
mov
into
in
add
pop
fadds
pop
dec
xchg
cmp
mov
cmpl
cmp
ret
add
push
loopne
mov
add
sbb
cwtd
mov
xchg
ss
sub
pop
inc
mov
into
xor
dec
inc
jl
movsb
sbb
mov
or
dec
push
ljmp
sar
pop
push
pop
adc
addr16
mov
scas
mov
push
leave
jne
sub
adc
iret
ret
inc
pop
mov
lahf
bnd
pop
push
stos
lods
bound
jbe
jne
push
jns
movsl
jns
cltd
scas
fnstsw
ds
sbb
mov
add
data16
or
cld
or
test
test
dec
fcomip
inc
stc
cmpsb
jge
das
dec
push
test
add
xor
jns
and
xchg
push
call
mov
jge
sub
outsb
ds
adc
mov
fmulp
cmp
mov
ds
and
cmpsb
mov
fs
adcl
andb
add
out
add
test
shlb
fsubrs
ja
lahf
pop
lret
loop
repz
ret
iret
dec
jnp
and
inc
push
or
cmp
fidivrl
gs
or
push
cmp
pusha
loopne
mov
or
insl
in
shlb
pop
in
mov
in
lret
je
push
imul
mov
out
jbe
movsb
mov
fs
inc
or
mov
add
mov
dec
js
xchg
adc
xchg
jne
lea
outsl
jno
sti
dec
incl
repnz
inc
ds
mov
sbb
sbb
xor
iret
mov
sub
loope
jl
pushf
les
daa
add
lods
jnp
outsl
mov
cmc
out
mov
lahf
stos
les
pop
loope
dec
test
sbb
jl
les
fwait
dec
push
jae
xchg
mov
test
or
outsl
jbe
outsl
ret
mov
jo
adc
lret
jmp
das
mov
pop
cmc
outsb
or
xchg
pop
lcall
adc
mov
std
ficomps
notb
aaa
pop
jne
test
cmpb
and
adc
push
inc
sbb
mov
xor
fisttps
mov
cmc
stc
jge
mov
push
aas
repnz
sbb
loopne
hlt
inc
mov
outsb
loop
ror
loop
fistl
pusha
dec
push
or
mov
lds
shrb
jno
cmpl
and
ds
aaa
nop
popa
push
mull
call
popf
das
rcr
mov
sbb
cmp
mov
sub
pop
in
ficomps
subb
dec
inc
hlt
in
nop
icebp
fs
nop
add
dec
push
pop
xchg
out
clc
push
cmp
pop
mov
out
repnz
pop
mov
fistl
or
fsts
dec
in
stos
jecxz
jecxz
aad
pop
loopne
fistpl
ja
in
xchg
scas
aam
cmpsb
dec
test
jmp
loope
pushf
inc
or
pop
mov
adcb
fs
cmp
dec
adc
sbb
adc
sbb
inc
jg
mov
jecxz
jmp
lret
rclb
icebp
sbb
lea
cmp
popf
dec
jnp
inc
sub
push
add
push
or
ljmp
cmpsl
movb
mov
pop
jno
jne
mov
popl
cmpsl
ljmp
outsl
scas
adc
fisttpll
in
pushf
call
cld
ret
cmp
sub
ljmp
mov
jecxz
inc
inc
cmp
mov
int3
imul
in
cmp
mov
lahf
fldt
inc
bnd
dec
outsb
clc
jg
shl
jecxz
adc
inc
lcall
jmp
outsl
push
lea
inc
mov
ror
test
nop
xor
jecxz
jg
js
iret
outsl
imulb
adc
cmp
shrl
cltd
icebp
imul
pop
cli
and
pop
jg
push
stos
cmp
add
mov
add
add
int3
add
xor
add
add
add
add
add
lods
add
add
add
addb
add
add
sbb
add
add
add
add
mov
add
add
add
add
add
jo
jo
mov
jo
int3
int3
int3
int3
int3
int3
int3
int3
int3
dec
add
add
add
je
insl
add
add
add
add
adc
add
add
add
add
fiadds
add
add
add
gs
add
add
add
add
dec
add
add
add
add
add
add
sub
clc
add
add
outsb
and
pop
ja
jae
inc
dec
and
push
ja
mov
add
cvtdq2ps
fisttpl
xor
or
push
adc
push
lea
decl
test
std
cmp
adc
pop
cmpl
add
dec
jno
inc
fstpt
ret
inc
add
add
push
mov
repz
cld
int3
inc
lea
jge
push
push
add
add
cld
push
call
incl
adc
sarb
decl
dec
add
call
or
add
repz
add
push
push
add
mov
clc
mov
outsb
clc
add
jne
call
adc
push
inc
add
pushl
add
incb
add
add
add
mov
add
dec
push
add
push
add
add
inc
inc
outsb
lahf
outsb
inc
jne
adc
je
jo
sbb
popa
jo
pop
outsb
inc
je
inc
gs
insb
mov
lret
arpl
popa
sti
insb
push
jae
cmp
jb
insb
push
jae
gs
jne
inc
push
jb
xor
gs
js
xor
add
add
sahf
add
add
add
jecxz
add
add
add
add
adc
add
add
add
add
add
add
sub
cmc
outsl
adcl
in
adc
pusha
dec
ficomps
and
inc
inc
loope
mov
adc
sti
mov
add
dec
iret
pushf
mov
pop
mov
orl
sbb
cs
leave
or
sbb
roll
sbbl
popf
add
pop
mov
sbb
inc
sub
imulb
pop
fidivs
mov
dec
out
int3
jl
sbb
loopne
mov
cmp
pop
mov
cmp
shlb
inc
call
imul
mov
and
pop
pop
jo
mov
jns
cld
push
or
push
pop
xor
out
cwtl
andb
add
push
cmp
mov
jo
pop
in
in
dec
dec
xchg
jl
call
mov
cs
popf
mov
fsubs
lret
sub
test
push
aad
or
dec
xor
icebp
outsl
adc
rcl
popf
seta
fwait
cltd
pop
fdivp
xor
imul
xor
mov
pop
cmp
pop
outsb
xchg
aas
rorb
nop
fucom
xchg
push
xchg
mov
pop
outsb
icebp
movb
int3
xchg
test
and
inc
mov
fcmovbe
pop
icebp
out
ds
sbb
lahf
mov
lahf
sbb
adc
inc
or
ret
pusha
pop
fdivrp
enter
ret
out
lret
out
push
and
sub
sub
pushf
jo
adc
add
lea
xor
jmp
gs
jle
lcall
xchg
push
add
into
mov
lcall
xor
xchg
cmp
outsb
mov
dec
pop
shr
jmp
js
xchg
aad
cwtl
mov
addr16
das
jp
push
out
enter
nop
in
cmc
fwait
insl
fs
je
or
lret
mov
sub
les
xchg
lock
adc
scas
inc
cmc
mulb
iret
adc
mov
stos
aad
iret
xchg
cwtl
imul
mov
loope
movl
test
pusha
sub
dec
fidivrs
mov
jno
stos
fistl
imul
and
movsb
xchg
pop
mov
cli
cmp
lret
shlb
test
add
add
dec
xlat
pushf
shl
jle
inc
data16
cmp
lahf
dec
jecxz
insl
aam
lahf
push
mull
icebp
std
test
out
xor
fmull
es
mov
popa
addr16
xor
repz
mov
imul
fs
xor
dec
inc
test
scas
mov
mov
mov
xchg
xchg
pop
je
dec
stc
mov
push
clc
adcb
add
sbb
cmp
add
push
or
sbb
and
xlat
punpckhdq
sub
pop
fmull
mov
pusha
mov
xchg
lock
mov
je
loope
adc
mov
adc
int3
hlt
adc
and
or
add
lea
in
je
adc
out
mov
lea
in
sub
cmp
pop
adc
clc
aaa
cli
lock
mov
ss
inc
pop
xchg
pop
in
test
orl
int3
mov
and
fdivrp
mov
das
xor
fwait
or
jg
adc
dec
push
ret
mov
fisubrl
mov
push
xchg
mov
and
lret
cltd
mov
sub
add
addr16
movb
sub
pop
dec
fisubl
popf
faddp
nop
push
hlt
jmp
mov
sub
lret
nop
imul
scas
call
mov
fcoml
sbb
sub
xchg
lret
xchg
xor
sub
fistpll
cmpsl
scas
arpl
adc
test
in
dec
and
cmp
out
jo
mov
pop
in
cltd
mov
pushf
les
orl
mov
dec
push
jns
retw
aad
pop
cmp
and
bound
movl
js
mov
scas
insb
mov
mov
clc
sbb
mov
xchg
pop
add
scas
lods
push
jp
test
vpavgw
jb
or
pop
adc
nop
int
dec
xor
shl
jmp
adc
loop
ret
mov
sti
shlb
lret
mov
sub
pop
in
dec
sbb
sti
and
rolb
in
cmp
fisubs
pop
xchg
outsl
movsb
ret
inc
dec
je
pop
cmpsb
adc
xchg
dec
aad
aad
xor
leave
mov
or
and
xchg
scas
xchg
add
mov
addr16
add
xor
jbe
jmp
xor
push
dec
pop
test
sub
iret
in
xor
cmp
and
iret
add
jns
fs
cmp
push
push
adc
add
scas
outsb
or
shlb
xchg
aad
pop
jg
jg
cltd
daa
cli
cmp
pop
push
cmp
out
jae
jp
or
in
xorb
mov
jp
push
in
pushf
icebp
mov
sub
push
cmc
dec
push
lds
inc
stc
inc
sub
mov
cmp
scas
loope
dec
out
ror
scas
push
out
je
scas
cmp
mov
js
movsb
adc
push
sbb
bound
push
dec
lock
or
sbb
out
or
scas
rcll
push
or
inc
push
add
push
in
cli
clc
arpl
popa
push
push
jecxz
loopne
js
mov
cmc
dec
shlb
je
loope
loop
mov
mov
lret
add
lods
imul
sub
lret
add
stos
or
adc
sbb
lods
notb
jbe
or
xchg
dec
in
push
push
xchg
xor
into
push
jecxz
add
xor
sbb
shll
push
xchg
out
push
push
jecxz
in
insb
inc
jl
adc
into
sahf
mov
incb
fbld
xchg
stc
or
data16
psrlq
std
dec
push
pop
sub
aam
test
cmp
or
pop
jns
imul
adc
inc
pop
mov
shrl
cmpl
adc
add
xchg
add
xor
adc
push
mov
cmc
xchg
mov
inc
pop
add
inc
xchg
mov
mov
in
sbb
stc
lret
mov
loop
cwtl
inc
mov
xor
add
jbe
cs
aam
lcall
or
stos
fisubrs
pop
inc
mov
call
xchg
fcoml
out
out
andl
mov
mov
xchg
fdiv
jns
jecxz
imul
fisttps
mov
aas
movsb
or
shrl
xchg
in
xor
popf
push
push
sbb
pop
fs
xor
pop
test
ljmp
sub
arpl
cmpsb
mov
fistl
sbb
mov
lahf
lret
scas
push
mov
mov
iret
xor
notl
jnp
push
cmp
and
in
stc
fsubl
out
jbe
push
lcall
inc
inc
jno
pop
adc
hlt
scas
je
popa
jo
mov
or
icebp
loope
in
in
mov
inc
lods
and
inc
cmpxchg
xor
push
push
leave
inc
push
fisubrl
fdivr
lea
outsl
or
rorb
jmp
adc
sub
ret
xchg
fwait
push
lods
arpl
add
mov
xor
in
subb
outsl
and
pop
mov
cmp
insb
pop
out
test
cmp
ret
mov
sbb
je
pop
ljmp
cmp
movsb
ret
cwtd
adc
lock
loopne
cmp
push
jb
xlat
or
js
inc
sbb
pop
xchg
test
insl
mov
testb
call
add
lret
xor
test
jmp
adcb
push
sub
inc
mov
add
addr16
mov
popa
sbb
shr
cltd
mov
shll
test
sbb
addr16
xchg
pop
test
mov
flds
mov
loopne
sar
aaa
test
pop
cmpsl
jge
addr16
dec
or
insb
push
jbe
mov
std
lret
jb
or
or
mov
sbb
lds
mov
or
inc
mov
jns
sahf
adc
scas
add
and
in
jno
push
push
push
imul
mov
neg
repnz
mov
lcall
or
dec
mov
sbb
mov
insb
pop
inc
rcrl
sub
repnz
fsts
mov
mov
lods
faddl
jecxz
test
mov
sub
data16
cmp
sub
out
pop
xor
xor
test
outsw
add
mov
xchg
cmc
icebp
aad
mov
xcrypt-ecb
cmpsl
int
xchg
pop
cs
cmp
mov
xchg
add
enter
out
mov
insl
iret
sbb
sbbb
scas
xor
aam
es
pop
cmpsb
push
fnstsw
xor
sub
ljmp
dec
push
mov
roll
xchg
das
in
add
ds
jg
jb
pop
out
fs
es
addl
xchg
xchg
es
jp
jle
jb
sub
mov
ja
push
ret
jg
cs
je
push
sbb
dec
and
jl
mov
scas
js
or
pushf
fnstenv
xor
addr16
or
cmpsb
pop
dec
adc
rolb
dec
lahf
gs
dec
push
sbb
cmp
rcl
das
inc
shrl
clc
ja
daa
scas
and
lcall
inc
daa
daa
icebp
das
ljmp
arpl
enterw
into
jg
movsb
out
sub
sbb
sahf
adc
insl
dec
add
lock
mov
push
xchg
adc
jb
jmp
pop
cltd
add
push
and
push
fildll
loopne
out
add
jecxz
jnp
rorl
push
das
test
test
lock
pop
repnz
jmp
and
insb
jno
xor
mov
add
clc
pop
das
or
sbb
add
mov
loope
in
movsb
jp
fs
sbb
jb
push
sbb
ror
in
ret
mov
lds
xlat
sub
add
xchg
lret
ret
mov
or
movsb
enter
lods
andl
push
sub
mov
sub
out
pop
pop
fisubrs
sahf
aad
mov
xchg
xchg
or
imul
sub
les
lret
aaa
adc
jns
jl
cli
outsl
xchg
sbb
arpl
xchg
ret
in
sbb
hlt
fsubrs
inc
cmpsl
lods
mov
xor
push
push
mov
mull
or
mov
pop
jne
testl
sub
cmpsb
cmp
mov
es
stc
into
xchg
mov
mov
fnstsw
lods
xchg
jg
mov
adc
inc
lcall
pop
or
inc
push
test
sbb
in
ja
push
testl
sti
js
loope
push
mov
or
or
movsl
sub
dec
adc
pop
negl
mov
mov
out
cmp
sahf
stos
jp
sbb
test
notb
mov
in
js
jae
xchg
adc
jecxz
mov
inc
mov
les
push
mov
ljmp
jne
iret
cmpb
fisttpl
push
andb
sub
jmp
mov
mov
mov
call
push
or
xchg
lea
clc
out
pop
cli
or
dec
cs
enter
mov
int3
inc
xor
xchg
jge
jbe
sub
mov
das
filds
push
xchg
loope
mov
dec
rorb
fwait
cmp
movsb
movsb
dec
mov
cwtl
and
mov
mov
push
sbb
jo
loop
dec
cld
xlat
xor
mov
out
lret
jecxz
adc
xor
out
orb
and
repnz
pop
fcomip
sub
or
cmp
cmp
sahf
sahf
sub
pusha
xchg
xchg
pop
iret
ljmp
and
xor
iret
jns
roll
mov
pop
test
sub
jp
push
add
sub
add
rolb
xchg
mov
lcall
lret
nop
adc
movsb
push
stos
jns
bound
dec
call
adc
mov
insl
in
pop
adc
fistpl
mov
push
mov
jne
sub
inc
pop
xlat
pop
and
fimull
sarb
mov
test
adc
fldcw
lret
and
and
jmp
sub
hlt
mov
sbbl
sub
sbb
lcall
icebp
dec
test
push
int3
bound
dec
addr16
add
in
into
call
movsl
mov
mov
inc
ret
pop
add
fs
and
fwait
cmp
lret
adc
out
push
cmp
push
jnp
push
push
jns
inc
call
pop
mov
mov
cmp
repnz
mov
lock
int3
jb
shl
cmp
out
pop
jp
add
cld
jno
sub
fdivs
iret
adc
out
stc
sbb
push
mov
and
rep
sub
push
call
inc
or
stc
sub
fs
enter
leave
xor
sub
iret
dec
stc
popf
hlt
push
cmpsl
and
je
lock
lahf
pushf
lcall
pop
cmp
push
mov
sbb
xchg
pop
push
or
cmpsl
sbb
jne
sbb
xchg
add
xor
dec
std
fsubrp
movsl
sbbl
mov
in
xchg
insb
add
jecxz
mov
scas
mov
pop
push
sbb
lahf
or
xchg
lods
xchg
movsl
in
gs
jp
jnp
jo
push
scas
imul
sahf
jle
clc
mov
fs
sub
jae
pop
pop
shll
sub
testl
cmp
sbb
or
mov
hlt
and
ret
pop
lds
scas
int3
mov
pusha
je
shr
sti
test
scas
xchg
cmp
gs
or
or
inc
sub
push
mov
inc
cmp
test
pop
sub
sbb
pusha
and
xchg
mov
jg
cmp
ss
adc
mov
sub
imul
icebp
mov
inc
fisubl
test
mov
lahf
add
ljmp
and
mov
jp
dec
adc
sarl
mov
shrl
mov
je
lcall
jb
mov
mov
mov
mov
stc
in
jbe
xchg
xchg
cli
fistl
cltd
movsl
jae
sub
insb
inc
rolb
orb
cmpl
push
insl
jb
addb
mov
and
out
das
int3
cmp
or
cwtl
push
xchg
call
ljmp
inc
pusha
xor
or
jnp
or
insb
inc
leave
push
sub
push
ret
and
add
ja
nop
cmp
xor
dec
inc
push
stos
mov
push
sbb
inc
jg
test
mov
arpl
stos
add
sbb
and
xor
int
je
movb
jecxz
push
push
subb
mov
xor
cmovp
xchg
jne
lods
sbb
in
xchg
out
lahf
loope
inc
fs
or
stc
pushf
dec
rdpmc
push
push
dec
cmpsl
lods
adc
pushl
pushf
add
imul
stos
and
cmp
add
xchg
push
lock
xchg
addr16
scas
fwait
push
adc
and
pop
dec
pcmpgtw
mov
pop
stc
adcb
ret
lret
mov
outsb
outsl
addr16
pop
lcall
push
xorl
clc
lods
out
lock
sub
cli
call
inc
or
rorl
outsb
xchg
push
sbb
push
and
stc
jl
rorb
fcmove
pusha
enter
and
or
pop
decl
mov
jo
dec
aam
xchg
cmp
dec
andl
mov
rorl
fwait
adc
dec
aas
aaa
arpl
mov
pusha
sarl
mov
imul
push
sbb
or
pop
and
outsb
pop
sbb
lock
ss
sbb
jecxz
mov
cmp
cli
inc
cmpsl
jo
xor
xchg
cs
jle
xchg
stos
cltd
adc
xchg
pop
shrl
inc
inc
cmpsl
in
loopne
xor
mov
mov
test
sbb
ret
hlt
jnp
movsb
stc
push
adc
decl
add
jecxz
outsb
mov
fxch
test
call
jnp
insl
enter
pop
push
xchg
stos
call
mov
jns
fwait
jecxz
xor
jmp
movsw
xchg
cmpsl
xchg
pushf
mov
aam
out
lret
mov
clc
xor
add
sbb
pop
pusha
mov
dec
or
or
sbb
push
mov
push
xor
les
pop
mov
xor
push
test
scas
or
pop
mov
pusha
test
inc
aam
jbe
lret
and
sbbl
int
mov
jl
adc
test
out
inc
inc
or
repnz
ret
cmpsl
mov
outsb
cmp
xor
je
sub
push
in
xchg
push
out
lret
adc
lods
ret
inc
jmp
mov
movsb
jp
add
in
pushf
dec
add
sbb
adc
jge
loopne
cs
popf
sbb
mov
xor
cwtl
aas
fsubrl
mov
mov
xchg
pop
outsb
mov
and
fimull
mov
dec
adc
xor
dec
or
les
xor
and
repnz
add
or
sbb
sub
and
and
cmp
push
outsl
and
out
sbb
adc
imul
fisttps
test
mov
rorl
push
clc
pop
xchg
pop
push
xor
bound
outsb
pop
xor
add
cmp
inc
pop
fcom
mov
mov
adc
sbbl
scas
fstpl
inc
mov
dec
push
mov
popf
xor
jp
shll
inc
cs
jle
shll
test
mov
dec
out
jmp
pop
fmuls
sbb
sub
lcall
dec
leave
daa
lcall
in
xor
pop
mov
data16
dec
push
xor
pop
add
add
add
add
ret
add
push
add
add
add
jae
add
add
jecxz
add
add
adc
add
adc
add
add
add
add
add
add
add
lcall
add
mov
sub
add
adc
xor
add
add
stos
stos
add
sub
mov
lcall
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
aad
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
aad
add
add
lods
aad
add
add
xchg
aad
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
aad
add
aad
add
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
rcl
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
xlat
add
dec
xlat
add
push
xlat
add
xlat
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
adc
add
xlat
add
lods
xlat
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
rcr
add
fadds
add
flds
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
flds
add
add
add
add
add
add
add
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
test
add
mov
add
mov
flds
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
dec
fiaddl
add
add
nop
fiaddl
add
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
in
add
in
fiaddl
add
fiaddl
add
fiaddl
add
add
or
add
adc
add
daa
fildl
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
inc
fildl
add
add
pop
fildl
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
