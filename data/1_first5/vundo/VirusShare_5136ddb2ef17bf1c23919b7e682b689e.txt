push
ja
js
ja
out
fdivl
mov
fidivs
ljmp
pop
ja
ja
xlat
fdivl
jns
ja
outsl
fdivl
insb
fdivl
mov
add
inc
iret
cmp
or
add
lods
jle
ja
mov
ja
xchg
ja
icebp
ja
ljmp
jns
icebp
ja
jo
ja
nop
icebp
ja
pop
icebp
ja
imul
sub
ja
xchg
ja
pop
icebp
ja
pop
icebp
ja
mov
ja
popa
icebp
ja
pop
icebp
ja
jge
ja
outsb
icebp
ja
mov
ja
jmp
icebp
ja
mov
ja
popa
icebp
ja
iret
repz
popa
icebp
ja
stos
icebp
ja
dec
hlt
ja
mov
ja
pop
icebp
ja
xchg
icebp
ja
add
add
cmpb
jl
scas
cmpb
jl
mov
cmpb
jl
fwait
cmpb
jl
cwtl
cmpb
jl
stos
cmpb
jl
movsb
cmpb
jl
xchg
cmpb
jl
pop
cmpb
jl
fiadds
jl
dec
test
cmpb
jl
nop
jl
jo
jl
lcall
pop
or
jl
scas
cmpb
jl
add
add
pop
stos
jl
sbb
add
divl
add
add
mov
jle
mov
jle
adc
jle
bound
jle
cmp
mov
jle
cwtl
aaa
jle
cwtl
aaa
jle
repz
outsb
cmp
call
aaa
jle
xchg
cmp
int
jle
leave
aaa
jle
nop
aaa
jle
xchg
aaa
jle
cltd
aaa
jle
scas
aaa
jle
push
imul
jb
je
arpl
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
push
push
push
pushl
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
pushl
call
pushl
pushl
push
push
call
add
mov
add
cmp
jb
mov
leave
ret
push
mov
sub
push
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
movl
call
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
mov
push
push
push
call
mov
call
push
push
push
mov
call
lea
push
push
push
call
add
push
pushl
call
mov
mov
push
push
push
call
push
push
push
push
push
pushl
call
pushl
call
push
push
pushl
pushl
pushl
call
push
push
push
push
push
call
pushl
pushl
push
call
add
pop
pop
jmp
lea
push
pushl
call
mov
lea
push
call
pop
push
lea
push
push
push
push
call
lea
push
pushl
call
jmp
push
call
xor
pop
leave
ret
push
mov
sub
mov
andl
andl
mov
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
andl
push
mov
movl
movb
movl
movb
movl
movb
movb
movl
call
leave
ret
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
jmp
push
push
push
pushl
call
push
pop
pop
ret
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
push
lea
push
push
call
add
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
lea
push
call
call
call
movzwl
mov
mov
mov
mov
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
not
mov
pop
mov
or
mov
leave
ret
pop
decl
sbbb
jae
and
inc
add
add
add
repnz
inc
add
add
add
add
add
add
mov
add
je
add
and
add
add
sbb
sbb
sbb
cmp
int3
pop
sbb
fisttps
arpl
jae
push
dec
imul
add
outsb
dec
jne
push
or
cld
mov
sbb
fdivr
sar
leave
ret
je
cld
lea
inc
divps
pop
adc
inc
leave
inc
leave
and
or
ret
in
add
add
dec
push
add
adc
incl
jmp
adc
rclb
loopne
mov
call
ljmp
add
push
incl
jmp
call
push
and
inc
in
or
xor
push
call
adc
push
add
lea
xchg
jmp
addb
dec
adc
and
sub
loop
mov
rolb
jmp
add
test
add
or
add
add
ficompl
sbbb
sbb
and
sub
clc
add
sbb
push
add
leave
cs
outsl
add
gs
add
je
imul
inc
gs
add
inc
gs
add
insb
dec
inc
insb
add
push
inc
gs
gs
jae
or
push
xor
push
add
add
add
in
add
ret
popf
add
push
add
or
add
add
xlat
in
push
outsb
push
insl
push
lcall
ljmp
hlt
mov
and
inc
jbe
or
cmp
inc
add
loope
add
mov
sbb
push
pop
jo
fmul
ret
aam
push
shll
and
fucomi
cmp
mov
xchg
mov
notl
popf
ja
xchg
pusha
insb
outsl
mov
cs
or
and
fldl
and
xor
jle
fdivl
and
jns
mov
or
jne
and
insl
push
pop
ktestb
mov
gs
lock
cmp
push
cmpb
adc
popf
out
adc
and
in
hlt
mov
inc
pop
mov
xor
jb
in
xorl
dec
lcall
lretw
fistl
sbb
cmp
mov
scas
arpl
jo
jmp
add
std
mov
inc
mov
and
loope
push
jbe
jle
leave
mov
fiadds
mov
imul
popf
cs
test
fs
into
push
lret
test
imul
and
call
sub
jl
sbb
mov
repz
mov
hlt
mov
cld
xor
and
lret
std
mov
fwait
scas
sarl
mov
jno
mov
xor
movsl
cmp
ret
icebp
fwait
dec
je
pop
inc
pushf
lock
sahf
shlb
int3
lods
sub
ja
inc
mov
jle
jbe
dec
call
xchg
lods
jg
sub
push
into
dec
inc
outsb
pop
popf
insb
imul
in
sub
lret
inc
fdivrl
stos
das
ret
sbb
sbb
adc
imul
xchg
mul
jl
fs
adc
repz
sub
aas
sti
int
movsb
dec
daa
insb
aaa
mov
cld
push
out
sub
movsb
hlt
push
test
loop
cmp
dec
imul
mov
xor
push
xor
mov
push
mov
mov
cmp
adc
dec
popaw
add
cmpsb
fs
fdivs
mov
sub
popa
ret
mov
stc
jae
lahf
inc
cli
das
and
adc
leave
xchg
cmp
ror
or
or
jp
les
icebp
jae
sub
or
out
std
sbb
push
add
in
mov
xchg
sbb
mov
cld
pop
pop
dec
mov
das
mov
adc
jo
cltd
insb
cli
cmpsb
cmp
insl
insb
lds
adc
fmul
mov
push
in
and
add
add
push
jne
cmp
xchg
pushf
push
mov
idivb
outsb
out
push
sahf
sbb
sbb
movsl
jo
adc
loope
push
and
lea
adc
sub
es
hlt
dec
jmp
movsl
mov
fidivs
cmc
mov
mov
adc
cmp
sbb
push
adc
and
sbb
sbb
fwait
subl
dec
jo
jo
dec
cmp
sub
lock
pop
mov
aam
mov
cwtl
xor
sbb
push
jmp
gs
pop
push
aad
in
sub
ficoms
adc
sub
fdiv
push
lret
arpl
xlat
dec
sbb
cmpsb
fdivp
mov
into
push
outsb
mov
jae
scas
out
js
push
jbe
in
push
lds
sub
bound
stos
mov
cmp
pop
pop
inc
jg
ds
sbb
or
or
xorb
mov
mov
bound
mov
push
insl
leave
les
and
fsubs
loop
arpl
addb
pushf
mov
xlat
aas
or
or
pop
bound
or
or
loop
and
sti
js
and
sti
lea
inc
addr16
xchg
es
mov
xor
jnp
lods
daa
rcrb
in
insb
inc
mov
popf
inc
and
in
ja
imul
xor
and
add
loopne
fidivrl
imul
ja
xchg
dec
push
test
andb
stos
out
mov
shl
cli
test
mov
push
popf
xchg
xlat
push
shl
mov
cmp
and
pop
inc
mov
mov
push
int3
or
cmp
and
sub
push
push
push
out
push
xchg
fists
insl
icebp
orl
push
ror
shll
pop
cmpsl
cld
and
push
rcrb
inc
jle
pop
out
inc
test
stos
or
inc
test
loopne
popa
pop
push
loop
mov
sbb
fistpl
lea
mov
nop
cmpsl
out
hlt
hlt
inc
dec
and
xchg
fiaddl
ds
pop
jb
push
ss
add
cmp
dec
outsb
pop
bnd
cmp
out
push
mov
in
cld
cmpsb
mov
icebp
mov
sahf
scas
adc
insl
test
xchg
icebp
xor
mov
hlt
cmc
shrb
inc
dec
xor
arpl
or
jns
inc
repz
adc
iret
ljmp
cld
inc
sbb
cltd
mov
sbb
cmc
cmpsl
stc
mov
inc
arpl
lea
ljmp
inc
adc
adc
sub
pop
repz
xor
cli
stos
rcll
mov
outsb
dec
inc
repnz
mov
ja
icebp
inc
adc
or
mov
xchg
inc
stos
popa
das
std
cmp
mov
or
imul
aaa
inc
pop
mov
ja
jmp
mov
inc
jmp
push
or
rcrl
push
shrb
lods
mov
xchg
mov
xchg
inc
cs
or
push
pop
psubw
je
in
hlt
xor
pushf
scas
shlb
xchg
jmp
fucom
xor
add
scas
sbb
inc
adc
aas
mov
insl
rcll
pop
inc
sub
dec
scas
in
popa
sarb
adc
pop
shrb
rorl
clc
in
repz
sub
pop
push
push
jns
dec
jae
adc
fcmovnbe
mov
jg
push
inc
idivb
adc
jbe
cmp
enter
jnp
inc
or
insl
or
push
and
xchg
popf
mov
mov
frstor
addr16
cwtl
jbe,pt
pushf
lahf
pop
ja
jp
dec
dec
jg
insl
push
or
jmp
add
inc
sahf
push
in
cmp
push
in
mov
inc
aaa
pop
dec
mov
test
sbb
mov
lods
nop
subb
iret
lret
pop
xchg
cltd
mov
leave
fldcw
pop
das
push
shlb
lea
push
scas
jno
xlat
lahf
adcl
xlat
cld
ja
fs
add
rcl
faddp
push
and
and
mov
in
daa
and
mov
ja
xchg
adc
in
xor
stos
das
xchg
js
mov
ljmp
ficomps
or
fcoml
cwtl
adc
scas
and
push
and
ficoml
test
ret
sbb
jge
pop
fdivl
xchg
jno
inc
sti
or
xchg
ret
int
pop
or
mov
cmp
idivl
or
xchg
adc
add
pop
inc
lock
insl
xor
imul
sahf
dec
dec
rorb
nop
lds
cmp
xchg
stc
fstps
sbb
push
inc
mov
shlb
mov
mov
stos
lods
lods
sahf
mov
stos
inc
pop
pop
mov
mov
jle
or
aas
and
jp
push
push
lods
pop
jmp
push
shlb
pop
lds
or
jle
cmp
mov
fiadds
or
jnp
ficoml
stos
cmc
sub
imul
bound
mov
cmp
mov
dec
jg
pop
sbb
xchg
dec
div
rcrb
xchg
int3
xchg
scas
mov
pop
jmp
sti
call
nop
pop
decb
sub
scas
cmp
aad
insb
loopne
ja
fs
enter
xchg
adc
adc
icebp
and
push
dec
cli
pop
mov
dec
loope
and
ljmp
clc
std
bound
push
or
xchg
clc
lods
sbb
sbb
jl
xor
or
mov
insl
inc
rorb
jno
ret
inc
fistl
xor
xlat
push
push
fisttpl
daa
sub
cmp
push
sbb
sbb
and
mov
jmp
clc
cli
ja
sub
inc
ljmp
pop
insl
mov
repnz
js
cmpb
push
xor
inc
stc
pop
and
pop
data16
push
push
fwait
out
sbb
std
cmpl
mov
gs
imul
pop
pop
xor
cwtl
and
repnz
mov
jns
imul
fucom
fisttpl
xor
in
scas
adc
xchg
sub
mov
jbe
pop
lahf
xchg
add
xor
hlt
cli
sti
in
jae
and
xchg
add
xchg
outsl
fs
xchg
loopne
mov
pushf
push
cld
xor
mov
lret
jge
sub
pop
fs
xor
add
mov
jge
adc
dec
daa
lcall
aam
ja
rolb
push
jns
jb
and
dec
out
repz
out
and
mov
dec
popf
lock
cmp
dec
dec
ja
adc
insb
loopne
sarb
xchg
or
cmp
lea
test
sbb
lock
and
cmpsb
out
movsl
aad
mov
loope
mov
aam
mov
std
add
push
mov
mov
adc
add
insl
xchg
add
lods
enter
rcr
push
inc
insl
insl
mov
out
and
int3
dec
lret
and
xchg
mov
in
adc
cmp
jp,pn
cmpb
mov
leave
dec
andb
sbb
cmpsb
mov
pop
adc
das
jnp
xchg
mov
scas
xchg
lods
ffreep
clc
xor
mov
pop
je
sbb
mov
cwtl
lock
sbb
add
mov
sub
loop
stos
in
outsl
push
adc
mov
hlt
jmp
mov
adc
xor
or
add
aad
cmp
push
lret
lods
sbb
jns
popf
push
xor
mov
cmp
sti
iret
xchg
fimull
fs
movsb
fimuls
jns
gs
mul
outsl
cmpsb
and
xor
lcall
dec
jne
adc
rclb
orl
lds
sbb
pop
or
xchg
dec
shll
mov
cmp
orl
out
lods
pop
xor
jno
sbb
jns
arpl
or
push
fxch
arpl
andl
enter
enter
sti
pop
pusha
call
test
ja
jo
shrb
push
jp
push
cmp
and
vshufps
nop
sub
mov
movsl
jbe
shlb
push
negb
sbb
xor
scas
scas
xor
fucomi
xchg
pop
popa
cmp
push
pushf
ret
aam
cli
push
mov
jp
jnp
xchg
out
cmp
cmp
aas
jg
nop
inc
adc
jl
inc
inc
inc
or
push
test
xor
jge
jmp
bound
pop
scas
jmp
scas
jae
test
jl
test
clc
cltd
popa
mov
mov
jle
mov
cmp
ret
testl
ret
inc
sbb
jecxz
or
pop
out
dec
fwait
call
mov
lahf
mov
mov
cli
jle
cmpsb
int3
sbb
lret
jno
sbb
jl
rorl
xlat
xorl
adcl
shrb
jbe
sub
repnz
dec
dec
pop
mov
mov
ret
addr16
and
stos
stc
lock
inc
cmp
push
in
mov
push
push
mov
jge
imul
sahf
sbb
or
cltd
or
int
std
mov
test
outsb
bound
cli
data16
lods
sti
pop
or
lret
aas
push
adcb
dec
lret
inc
mov
fsts
cltd
addr16
inc
loop
scas
sbb
inc
and
daa
adc
cmp
imul
push
cmp
inc
sbb
sar
sub
int
jmp
fdivr
pop
repz
icebp
cltd
or
xchg
sub
jnp
or
fcoml
ror
js
push
adc
mov
dec
sbb
mov
fwait
in
pop
idivl
pop
sahf
or
adc
pop
jo
or
jo
and
jne
jne
jno
push
icebp
xchg
icebp
mov
dec
pop
xchg
out
xor
aas
sahf
pusha
orl
inc
fs
mov
pusha
fsubp
fldl
fimuls
loopne
sub
xchg
iret
fcmovnu
adcb
js
push
jl
cmc
jne
es
hlt
ljmp
lods
lahf
cmpsl
adc
jp
mov
f2xm1
ret
dec
and
mov
lds
stos
adc
or
fildl
jbe
fnstenv
add
clc
cs
sbb
cltd
cmp
arpl
sub
inc
cmpsb
mov
pop
inc
mov
pop
lret
push
push
xchg
or
xor
out
popl
nop
and
cmpsb
and
lret
inc
jno
xchg
jbe
leave
leave
mov
in
push
bound
push
or
outsl
repnz
inc
imul
mov
add
adcl
push
rcll
xor
adc
rcl
xor
mov
sbb
stos
mov
jle
push
xchg
adc
scas
mov
outsl
add
das
dec
std
lahf
mov
aad
xchg
mov
adc
mov
ss
mov
mov
pusha
jnp
jp
imull
enter
out
rol
add
mov
inc
mov
mov
popf
jmp
xor
fistps
mov
enter
icebp
outsb
addb
mov
mov
or
stos
sub
mov
mov
push
adc
stc
out
lods
push
xchg
aas
xor
out
je
into
mov
imul
jl
pop
or
out
xchg
repnz
in
pop
jnp
popa
push
cltd
repz
popl
cli
stos
cmp
daa
fdivl
test
popa
loop
loopne,pn
out
ds
xlat
sbb
jecxz
ret
out
mov
jle
push
mov
pop
adc
or
int
and
loopne
cwtl
mov
push
jmp
inc
push
dec
lcall
jb
jmp
andb
mov
std
push
cmp
cmp
and
les
sbb
pop
stos
xchg
je
lcall
popa
movsb
xchg
hlt
int
data16
push
dec
rcrl
outsb
nop
mov
xchg
scas
das
sub
add
popa
sbb
iret
pop
mov
cld
jnp
shrl
bound
sbb
fildl
sub
popf
adcb
sti
bound
mov
push
insb
in
jne
pop
fildll
shl
adc
add
mov
pop
adc
sub
xchg
mov
pushf
xor
loopne
sbb
pop
ret
sbb
add
ja
dec
jg
mov
inc
sete
mov
cli
xchg
scas
inc
jne
cmc
pop
lock
and
adc
mov
popa
push
push
dec
push
mov
pop
mov
xchg
sarl
mov
lret
push
cmp
mov
imul
jge
js
pop
cmpsb
and
data16
jmp
daa
mov
mov
rorl
mov
out
dec
pop
cmp
test
push
mov
in
mov
xor
mov
leave
std
jnp
test
fldt
cmpsb
inc
cs
fidivrl
shl
or
repnz
negl
pop
add
mov
imul
xchg
sbb
aad
xor
not
out
cltd
lds
out
ret
test
and
xchg
jl
lret
loope
outsl
xor
mov
xchg
mov
lret
or
pop
jge
test
and
int
aad
dec
or
mov
hlt
add
xchg
in
add
dec
push
jnp
inc
fwait
or
adc
shll
daa
loop
push
fmuls
mov
mov
aam
xchg
pop
push
sbb
dec
mov
sub
les
mov
scas
or
cmc
push
rcrb
fs
test
push
jae
inc
pop
fdivrs
adc
sahf
and
and
jnp
cmp
xchg
fcom
out
stos
shlb
and
add
jmp
jne
cwtl
inc
cld
push
ds
dec
lcall
xor
adc
push
repnz
mov
out
repz
mov
push
das
movsb
sahf
mov
in
and
jno
mov
out
add
repnz
in
js
lret
mov
and
sbb
jecxz
ret
repz
mov
jnp
cmp
je
xchg
fldcw
stos
dec
sub
lods
daa
jae
test
pop
int3
stc
push
mov
mov
xchg
or
mov
cld
cld
test
mov
cmp
adc
pop
sub
dec
fdivrl
mov
mov
enter
outsb
loopne
in
mov
das
sbb
mov
rcll
enter
ja
imull
inc
inc
insl
jle
ja
xchg
insl
repz
ss
jg
lock
mov
mov
popl
sbb
fcompl
mov
test
xchg
dec
cmpsb
sbb
je
lcall
mov
sbb
mov
aam
and
cmp
leave
repnz
xchg
in
or
inc
mov
sbb
in
sbb
sub
xchg
out
jle
aam
lret
jno
pop
cmc
sbb
je
dec
jl
stc
add
pop
stos
and
xor
mov
and
popf
xchg
out
xor
mov
pop
or
lods
pop
call
loope
xor
mov
push
cmp
push
cli
add
add
ret
jle
rorl
shl
call
aas
push
pushf
movsb
je
ret
popf
xor
adc
popa
leave
jns
add
mov
les
pushf
mov
dec
lods
inc
mov
clc
cmp
adc
iret
mov
sub
cltd
sbb
orl
gs
fdivl
in
bound
fld
add
mov
pop
nop
cmpsl
jp
sbb
rcrl
jp
or
pop
testb
mov
ret
lret
push
pop
mov
mov
xchg
into
or
call
lcall
shll
fildll
xchg
jne
add
xchg
inc
imulb
adc
push
xchg
rcrl
aaa
in
adc
cmpsl
xchg
cmp
std
mov
cmp
push
ljmp
mov
pop
outsb
inc
pop
mov
cmpl
adc
lds
or
jnp
xchg
roll
jb
call
out
cmpsb
dec
jge
dec
repz
aaa
xchg
daa
lock
push
jle
xchg
int3
jmp
movsb
mov
cmpsl
enter
les
xchg
sub
aas
inc
cli
inc
cmp
adc
or
pop
lods
outsl
gs
stc
sbb
sbb
lret
sbb
jle
xor
into
out
dec
jne
pusha
jp,pt
cmp
mov
in
fcom
daa
adc
cmp
push
cmp
jecxz
sub
js
sub
test
adc
lahf
xor
xchg
scas
sbb
and
add
or
out
sbb
lahf
and
imul
xchg
mov
jo
push
jnp
add
iret
pop
jnp
adc
pop
mov
test
add
scas
push
pop
mov
sub
mov
test
mov
stos
jb
jp
cltd
adc
jge
hlt
or
jns
pop
dec
adc
jnp
inc
and
int
push
mov
lds
mov
mov
inc
in
roll
push
xchg
jne
mov
and
sub
xchg
gs
ds
movsl
and
adc
cltd
insl
lret
xor
inc
sub
loop
pushf
mov
inc
es
cmp
cmp
jecxz
push
push
mov
or
insl
xchg
lahf
gs
aam
rcrb
jne
sub
dec
dec
jnp
xchg
icebp
jbe
loop
cmpsb
jb
add
enter
push
ss
push
stos
aam
int
imul
int3
mov
push
inc
mov
test
jmp
pop
rclb
and
int3
in
test
imul
xor
scas
jecxz
pop
add
cmp
aam
jp
pop
push
mov
mov
push
lret
sbb
scas
and
mov
and
push
inc
cmp
jle
lock
mov
js
and
push
jmp
adc
pushl
cmpsl
jecxz
jecxz
divb
pop
rolb
es
xor
push
cwtl
fidivrl
mov
mov
loope
int3
sbb
subl
or
push
xchg
fdiv
in
pop
sub
xor
push
outsb
mov
adc
mov
xchg
leave
es
sahf
adc
dec
loop
divl
cmp
pop
fstps
lods
les
mov
test
jno
addl
hlt
dec
sbb
aas
inc
mov
pop
in
cmc
movsl
jge
mov
ljmp
push
dec
fisubs
or
push
les
sub
and
pop
jnp
mov
add
cld
scas
xor
fldl
repnz
out
inc
adc
mov
outsb
add
add
sbb
add
add
add
dec
add
add
add
test
add
add
fadds
add
add
pop
add
add
xor
xor
xor
add
add
add
add
ljmp
ja
mov
cmp
dec
add
add
or
and
or
or
add
add
add
add
adc
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
add
testl
add
add
add
and
jo
outsb
pop
inc
jae
inc
imul
push
imul
add
cld
or
dec
lea
inc
in
mov
std
lea
adc
cld
mov
mov
call
push
mov
push
push
dec
push
dec
ror
lret
ret
mov
push
test
add
mov
lea
int3
add
pop
push
push
or
loopne
cld
jmp
mov
clc
jne
add
test
test
std
or
cld
xchg
mov
add
or
push
push
xchg
adc
push
clc
push
cmp
mov
inc
and
lock
jmp
adc
movl
add
inc
add
add
add
inc
add
gs
outsl
je
test
sbb
inc
jo
pop
inc
inc
gs
gs
je
arpl
arpl
dec
mov
push
inc
jb,pn
addr16
add
gs
imul
add
gs
xor
roll
add
add
add
add
mov
mov
add
add
movl
jg
shl
inc
pop
clc
jo
mov
test
ja
jmp
and
loop
stos
pop
loope
popf
adc
dec
jo
mov
stos
in
addl
popa
ljmp
push
jb
fwait
cmp
aam
mov
xor
or
rolb
fs
addr16
mov
cmp
arpl
mov
mov
into
callw
cltd
jae
enter
xor
mov
xor
es
xor
xlat
mov
push
pusha
push
in
and
adcb
add
mov
mov
mov
ret
push
sbb
jl
cld
sbb
ljmp
cmpsb
and
cmp
call
cmpsb
cs
inc
mov
daa
adc
dec
lret
cld
imul
pop
jno
xor
aaa
out
loope
js
dec
data16
sub
pop
mov
mov
jnp
ja
out
and
fcomps
fdivrl
xchg
in
dec
ret
mov
push
push
je
insl
cmp
imul
rcll
push
into
dec
jecxz
push
dec
jbe
inc
cld
idiv
arpl
mov
out
jge
cli
xchg
in
adc
xchg
hlt
sub
popf
push
xchg
and
jne
and
pop
dec
cmp
sub
popf
iret
int
cld
push
sbb
push
add
push
in
div
pop
fsubrs
push
shrb
mov
xchg
adc
icebp
add
loope
inc
sahf
inc
fistpll
out
or
sti
sbb
inc
aam
pop
add
movsl
xor
notb
orl
mov
mov
mov
hlt
pop
and
push
xchg
repz
nop
mov
loop
add
ljmp
ret
mov
inc
push
leave
add
aas
outsb
mov
jae
idivl
push
popf
in
mov
and
mov
dec
fldl
lods
and
pop
jg
aas
add
loop
in
loope
mov
mov
loop
cmpsb
cmc
jnp
push
adc
xchg
jne
push
inc
mov
cmpsb
sbb
push
push
rcrl
pop
jb
fldln2
mov
std
jb
popa
cmpsb
int
mov
stos
movsb
ficompl
pop
jle
xor
xor
mov
in
ja
add
inc
rclb
jae
ss
mov
pop
out
neg
xchg
sub
mov
imulb
hlt
jbe
xchg
sub
mov
adc
mov
push
dec
push
pop
lea
xor
mov
or
js
mov
push
dec
repz
dec
jae
loope
adc
jb
js
inc
pop
cmp
popf
cld
fsubr
cmp
or
lcall
outsb
fwait
mov
fsubr
pop
inc
int
xor
sub
mov
mov
pop
mov
fisttps
and
int
xor
xchg
or
ret
mov
test
imull
pop
fisttps
lret
pop
xchg
sbb
push
pushf
pop
ds
dec
ficoml
nop
or
push
fstpt
das
mov
inc
xor
xor
dec
pop
or
int3
dec
call
scas
pop
xchg
stc
addr16
jecxz
cmp
daa
pushf
psadbw
shl
pop
xchg
mov
mov
push
push
pop
xchg
lods
dec
inc
jae
int3
jbe
in
inc
mov
xlat
ffree
mov
dec
idivl
in
mov
out
mov
mov
lret
sbb
cmp
sub
mov
jae
mov
test
xlat
inc
sti
lea
repz
jg
mov
pop
fcoms
fidivs
mov
jmp
sbb
cmpsb
rcrl
fmuls
push
cmp
pop
mov
sbbl
inc
mov
push
add
repz
xor
push
das
push
xchg
movsb
movb
pop
insl
pop
xchg
jb
push
iret
xlat
sbb
fs
lret
push
cs
inc
push
cli
je
ficoml
or
andb
repz
data16
nop
neg
push
or
jbe
pop
daa
push
aas
lock
lock
mov
das
sub
cmpsb
sarl
cmp
bound
icebp
jb
mov
sub
hlt
xor
sti
pushf
test
push
dec
inc
add
pushf
andl
pop
xchg
mov
adc
lods
adc
cmp
cwtl
ret
xchg
xchg
push
scas
adcl
sub
add
les
mov
aaa
mov
inc
hlt
mov
cmp
sarl
popf
add
gs
lods
push
loopne
gs
cwtl
aam
mov
push
mov
xchg
shll
and
jne
pushf
sub
push
dec
push
pop
clc
mov
int
int
push
cwtl
mov
aas
arpl
enter
fldenv
sbb
dec
and
mov
cld
mov
sbb
sbbl
outsb
rorb
inc
adc
mov
sti
mov
loop
adc
xchg
adc
fadds
cmc
mov
movsb
hlt
test
mov
call
xor
rcrl
mov
sub
add
loop
enter
imul
outsb
outsl
lock
pop
push
les
and
js
imul
rorb
push
mov
jns
test
sbb
add
adc
loop
and
mov
pop
adc
test
push
cmc
sbb
frstor
in
in
into
pop
fs
xchg
ret
fnsave
push
dec
mov
loopne
scas
push
cmp
lret
cmovle
in
mov
inc
popf
xor
mov
bound
test
mov
inc
sub
mull
lods
lcall
arpl
jmp
ss
push
jb
jecxz
pop
adc
jae
mov
insl
push
mov
mov
subb
push
adc
mov
fiadds
aaa
xchg
lea
mov
repnz
out
push
je
cmpl
add
sarl
xchg
outsl
jne
adc
or
cmp
xchg
in
rorl
jo
jb
mov
out
sti
lfs
lds
xchg
add
fldcw
or
test
insb
jecxz
pop
xchg
dec
data16
orb
test
jo
jge
daa
xor
dec
sti
push
jne
mov
dec
adc
ljmp
sub
aam
repnz
xor
mov
in
pop
sbb
loope
xchg
in
xchg
mov
push
sbb
ret
adc
nop
adc
out
push
jno
cli
fldcw
faddl
lea
into
shl
in
xor
clc
ljmp
adc
bound
fnstsw
imul
sbb
jbe
mov
inc
adc
shlb
rcr
ljmp
xor
xor
sbb
cltd
and
add
and
mov
sbb
arpl
outsb
cmpsb
cmp
ljmp
cmpsl
cmp
bound
mov
sub
lock
mov
fcom
fidivs
xchg
push
lods
mov
repnz
sbb
push
xor
arpl
je
pop
pop
or
xchg
and
sbb
push
call
inc
xor
iret
inc
in
aam
cmp
lea
popa
std
xlat
and
fsubl
cmpsb
lahf
imul
mov
aam
xchg
scas
pushf
ret
aas
xchg
in
in
sub
lahf
lock
adc
xchg
add
push
xchg
mov
aam
das
roll
and
pop
in
lock
leave
pop
xor
lahf
push
pop
mov
mov
mov
add
add
xor
cmp
adc
adc
xchg
call
pop
call
insl
cmpsl
push
lds
xorps
cltd
cmp
rcr
cmp
mov
jae
pop
sti
andl
push
and
int
les
sbb
shrl
jmp
inc
imul
pop
mov
pushf
mov
sbbl
add
or
in
sbb
mov
fwait
scas
xlat
nop
mov
jle
pop
pop
add
jge
mov
das
js
jns
ret
fucomip
jbe
nop
popf
add
cwtl
and
jo
testb
jg
or
fnstsw
mov
jno
loopne
xlat
adc
push
aam
push
inc
les
leave
and
pop
neg
adc
lret
test
jl
mov
adc
test
mov
sub
add
nop
jge
jne,pt
adc
cltd
fiaddl
stos
and
lods
fdivs
das
push
xor
movsb
or
loopne
adc
mov
jae
pop
xchg
jns
daa
shll
int3
jbe
push
add
jge
pop
stos
mov
outsb
pop
and
jmp
js
and
imul
in
sbb
adc
sti
sbb
xor
test
jg
push
xchg
arpl
insb
cmp
push
and
push
fcoml
xchg
pop
out
lds
in
pusha
jge
jl
int
jg
xchg
dec
or
std
xor
dec
xabort
gs
out
xor
dec
cld
pop
int
add
or
mov
mov
nop
jne
decb
sbb
xor
sahf
fs
fsin
mov
adc
inc
mov
add
js
test
mov
jns
repz
cmp
pop
inc
mov
jl
mov
add
add
js
test
icebp
mov
scas
inc
push
xor
inc
pop
subl
addl
shr
xchg
psraw
rorb
lds
gs
pop
push
inc
push
dec
dec
outsb
cld
push
cltd
addr16
pop
dec
pop
je
cmp
rclb
lods
xchg
lahf
insl
lea
movsl
fs
add
fwait
movb
pop
mov
mov
mov
sbb
mov
adc
dec
push
lea
scas
push
mov
ret
or
in
or
mov
notb
mov
inc
leave
cwtl
sbb
mov
mov
insb
push
xchg
mov
arpl
xorl
aad
out
mov
xchg
clc
in
dec
jge
xchg
push
orb
adcl
fldl
dec
stc
out
ficoms
and
rcl
mov
scas
inc
mov
nop
loope
aad
popf
mov
pop
mov
arpl
out
movsb
xor
push
jmp
out
mov
add
pop
stos
daa
mov
loop
dec
fnstsw
sub
dec
xchg
add
jecxz
adc
cmp
pop
cmp
leave
fcoml
mov
outsl
xchg
cmp
lahf
roll
adc
cmpl
test
xor
mov
dec
mov
cmpsl
sbb
shlb
adc
outsb
les
dec
cltd
js
call
adc
mov
mov
xchg
jg
leave
jns
imul
fldl
into
push
xchg
fs
xor
cmp
cli
daa
leave
and
mov
nop
jl
bound
pop
mov
mov
subl
jae
mov
mov
xchg
add
lock
mov
pop
cmp
xchg
imul
mov
mov
xchg
bound
cmpsl
insl
xchg
add
popf
xchg
out
andl
push
mov
xchg
mov
push
push
dec
xchg
cli
and
pusha
jbe
cld
ja
xchg
cmc
sahf
mov
aas
mov
loop
pop
ljmp
jmp
adc
dec
cmc
movsl
pop
pop
ffree
roll
lock
nop
cmp
and
test
mov
je
pop
loope
ja
in
xor
and
lea
fbstp
fninit
cmpsl
jae
out
fcoms
lods
push
iret
into
add
cld
pop
add
cmp
jnp
mov
mov
cmp
mov
mov
add
addr16
mov
into
repz
rcll
imul
int
int3
jnp
pusha
push
xlat
mov
mov
andb
pop
test
lock
cmp
mov
nop
push
loop
ljmp
movntps
push
adc
push
jne
das
aam
outsl
fwait
mov
jae
std
jl
mov
pop
movsb
ljmp
jmp
jle
inc
or
adc
mov
dec
mov
add
jg
mov
aaa
sub
outsl
push
int
aam
sbb
ficoml
mov
xor
and
int
dec
dec
pop
imul
xchg
or
jle
pusha
and
imul
sub
ret
mov
xlat
iret
add
mov
jmp
mov
sbb
idivl
jbe
cmpsb
pop
clc
in
cld
sub
into
xchg
aad
jo
in
aaa
mov
das
pop
imul
push
popf
int
jmp
adc
jno
lock
adcl
sbb
xchg
stc
mov
sbb
push
jns
adc
sbb
cmpsb
xor
pop
and
ss
xchg
sbb
sub
roll
ds
outsl
das
lret
idiv
cmpl
and
adc
or
jmp
ljmp
enter
inc
mov
aaa
sbb
in
add
popa
js
fildll
add
inc
xlat
and
sahf
pushf
rcrb
cmp
in
imulb
jl
pop
lret
xchg
jne
ss
adc
and
push
or
int3
aad
frstor
mov
mov
inc
aas
jge
xor
xlat
mov
pmaxsw
jns
pop
sub
mov
and
ss
pop
clc
jno
mov
cld
add
sub
test
lea
scas
ljmp
pop
xchg
pop
orl
clc
nop
push
aas
mov
and
into
in
insb
data16
jbe
outsl
ret
ss
lods
sbb
outsb
pop
pop
inc
inc
xchg
mov
cmpsl
mov
pop
jnp
cmp
arpl
not
scas
iret
push
mov
pop
arpl
jae
and
fs
fucomp
ret
icebp
in
add
orb
pop
aaa
jne
cmp
das
dec
dec
or
xchg
std
sbb
fldlg2
mov
out
or
xorb
movb
add
push
fbstp
mov
pop
pop
leave
fsub
leave
jne
cmp
and
jnp
mov
push
jbe
fdivr
iret
das
push
shll
mov
jmp
cmp
mov
in
fstpl
xchg
lahf
outsb
mov
add
jge
nop
std
sahf
bound
cmp
rcr
mov
adc
in
dec
seta
jmp
sbb
or
cmpsb
addl
mov
sub
push
dec
jnp
xor
movsl
xlat
cmp
sbb
push
and
out
mov
leave
pop
cmp
dec
popf
call
fs
imul
jo
push
dec
sbb
inc
mov
xchg
add
mov
in
inc
mov
pop
xlat
dec
jo
gs
mov
mov
xchg
fistl
stos
rolb
mov
xor
jns
scas
int3
or
sbb
pop
or
stc
sbb
push
mov
mov
clc
les
lods
pop
inc
pop
inc
bound
inc
cwtl
mov
lcall
lret
cmp
mov
call
mov
stos
cmpsb
int
sub
aad
mov
mov
push
roll
add
pop
pop
lahf
inc
add
xor
mov
sub
inc
int3
pop
cmp
inc
fisubrl
xlat
lcall
lds
test
outsl
push
sub
sbb
dec
mov
mov
cmp
jno
fstps
jnp
push
aad
pushf
pushf
les
push
xor
test
dec
imul
test
add
sbb
out
lcall
inc
outsl
lret
add
sbb
test
cmp
or
sbb
pop
out
test
clc
scas
inc
and
mov
mov
sahf
mov
incl
inc
or
cli
fisubrl
ret
inc
mov
mov
xchg
std
or
and
xchg
in
cltd
push
daa
jp
je
pop
in
mov
rcrb
jp
xchg
test
push
int3
xchg
xor
lret
xchg
jb
insb
lret
int
mov
lock
xchg
adc
lret
cmp
js
adc
sbb
and
mov
push
mov
cmp
jecxz
mov
mov
add
int3
decb
jl
fcmove
xor
cmpsl
lcall
movsl
nop
outsl
jp
cli
and
add
mov
jmp
scas
loop
cs
push
xchg
dec
cwtl
push
or
mov
sahf
xorb
xchg
cmpb
neg
jle
int3
xchg
xchg
out
xchg
out
cltd
inc
or
push
xorb
test
adc
sti
out
outsb
scas
push
cmp
je
insl
sub
mov
jbe
pop
add
xchg
jmp
imul
jp
xchg
xchg
mov
rcll
test
lods
mov
shl
cmp
shl
sbb
ret
cwtl
mov
out
lods
jl
fcomps
enter
rcll
lahf
xchg
mov
lahf
mov
ss
cmp
xor
push
jbe
dec
push
out
mov
roll
mov
dec
sub
adc
sbb
add
mov
or
js
mov
cmp
shr
mov
loop
cs
inc
sub
repz
fstpl
pop
xchg
fistps
mov
imul
pop
and
xor
xchg
xlat
xchg
dec
rorb
sub
push
outsl
adc
dec
and
jns
push
add
arpl
push
sub
jo
jl
lea
repz
pop
rorl
mov
sub
sti
loop
jl
mov
cmp
bnd
dec
rclb
mov
stos
adc
cmpsl
pop
subl
lret
test
mov
sub
and
fstpt
leave
out
xchg
inc
test
loope
subl
jb
mov
or
orl
fisubl
loope
mov
dec
pop
push
or
flds
inc
cs
mov
dec
imul
mov
int
dec
push
pusha
mov
cs
pop
or
daa
popa
fs
xchg
mov
jno,pt
add
sub
inc
cmc
pop
jnp
leave
push
movsl
test
xchg
sbb
jo
jo
rcl
rcl
inc
lea
sti
pushf
stc
adc
mov
cmpl
icebp
lea
mov
push
mov
adc
lds
sbb
inc
xlat
fs
out
les
fiaddl
les
adc
jl
lods
andl
push
rorb
cmp
clc
sub
or
repnz
leave
xchg
repnz
lds
pop
out
into
sub
loope
or
sub
imul
ret
outsb
dec
mov
and
inc
in
jae
cltd
xlat
jno
sbb
xchg
bound
ficomps
jl
lcall
aad
shll
adc
testb
push
imul
lret
bound
mov
sti
cli
mov
por
adc
mov
xlat
xchg
add
xor
inc
sbb
sub
add
mov
jb
loope
mov
call
stos
dec
fidivrs
and
repnz
jmp
push
rorl
push
js
pusha
imul
mov
rorl
and
mov
out
mul
mov
pushf
xchg
popa
xor
sti
sbb
mov
das
mov
mov
jne
adcb
int3
out
data16
mov
or
mov
add
bound
ja
jnp,pt
hlt
lods
inc
repnz
sub
mov
mov
or
loopne
ss
sbb
and
pop
jecxz
xor
adc
fbld
mov
xchg
sbb
cmp
jbe
sbb
push
xchg
movsb
sub
xchg
cmpsl
jp
cmp
xchg
std
pop
mov
fisubs
insl
pop
xorb
lds
lcall
loopne
rclb
push
push
clc
mov
fcoms
int3
xchg
shl
mov
lret
cmp
mov
push
pop
cmp
dec
mov
sbb
aam
mov
mov
push
dec
in
shll
pusha
pop
cs
sbbb
xor
dec
movsb
add
and
jge
sbb
stos
adc
mov
inc
jns
xchg
add
ds
ds
adc
pushf
push
mov
scas
xor
in
mov
dec
popa
sub
cmp
jbe
popa
ja
dec
adc
leave
jae
cmp
dec
sbb
xchg
add
push
popf
mov
fcmovne
dec
xorl
shrl
es
ljmp
incl
leave
ds
jmp
clc
movsb
add
or
jb
jae
and
lea
sub
xchg
lods
in
cmp
adc
cmp
cmp
imul
shrl
push
das
rcrb
or
nopl
mov
je
stos
iret
lret
lock
pop
hlt
mov
test
sarb
mov
dec
adc
mov
lret
mov
cmpsb
cmp
pop
dec
xchg
out
out
jno
and
aad
adc
push
sbb
shl
aad
ret
outsb
test
xor
lds
push
fucom
sbb
lret
xchg
ficomps
mov
dec
out
cs
lcall
out
cld
mov
movsl
add
add
add
add
add
and
add
add
add
add
mov
add
add
add
add
xlat
add
add
xchg
add
add
add
add
add
add
add
add
arpl
add
add
add
add
repz
sar
ljmp
jo
mov
clc
mov
mov
add
and
and
les
in
add
add
add
add
add
add
add
push
cli
cs
add
add
or
movb
add
add
add
add
lcall
sub
clc
xor
add
popaw
popa
jb
push
pop
shlb
fs
inc
and
push
ja
mov
inc
stc
add
add
xor
mov
fcmovnu
inc
or
pushl
int
add
cmp
lcall
incl
jmp
test
lea
push
xor
in
jno
sahf
lock
add
adc
xlat
push
cld
repz
movl
push
inc
add
xor
rolb
pop
test
adc
incl
lea
jl
addr16
std
sar
xor
cld
shlb
push
aad
add
repz
adc
test
add
pushl
rorb
jo
pop
clc
push
clc
push
add
add
push
adc
cli
add
add
add
sahf
add
add
dec
fadds
push
cmp
cmp
out
push
xor
jbe
inc
cmp
outsb
movsl
jne
adc
inc
popa
inc
inc
jo
movsl
popa
movsl
imul
imul
fs
push
insb
imul
gs
insb
xor
cmpsb
jne
inc
jae
jae
loopne
insb
inc
insb
inc
dec
add
add
cmp
add
add
add
add
add
add
lret
add
add
add
testb
add
add
add
pop
add
add
add
add
xor
addr16
cmpsl
movsb
sub
stos
adc
stos
sar
rcrl
leave
rol
shll
or
fdivl
shlb
add
jmp
pop
mov
inc
push
in
xchg
pop
adc
in
and
filds
pop
sbb
les
push
and
imul
jne
mov
adc
add
sbb
aad
test
cmp
rclb
scas
or
out
xchg
adc
mov
sbb
call
mov
sbb
inc
nop
aad
sbb
jo
pushf
cs
mov
push
cmp
adcb
aaa
frstor
sbb
adc
mov
mov
pop
mov
call
mov
sbb
xor
in
pushf
push
pop
and
imul
hlt
mov
or
jg
jno
iret
mov
mov
int3
push
inc
movsl
inc
pop
xchg
inc
mov
into
test
cmp
cmp
lahf
jo
sar
fs
jae
xor
loope
mov
inc
add
push
aas
jp
nop
call
decl
add
daa
aam
xchg
into
dec
rorb
lahf
das
adc
scas
orb
or
jbe
mov
pop
in
fisubl
int3
in
and
scas
ss
xchg
add
in
inc
imul
leave
cmp
insb
dec
hlt
insb
push
in
inc
sub
sub
icebp
xor
ret
aam
sbb
insb
stos
insb
ja
lret
sahf
jae
inc
xlat
push
adc
popf
dec
inc
rcll
push
or
xor
dec
jnp
repnz
jmp
into
imul
mov
add
xlat
sub
mov
adc
cmp
jmp
in
inc
fsubr
mov
add
lret
jmp
clc
into
aas
cmp
sbb
pusha
stos
or
repnz
lret
int
rolb
int
cmp
popa
mov
mov
rorb
inc
pop
xor
dec
scas
lcall
call
in
mov
ret
je
xchg
and
mov
inc
fs
mov
mov
lea
mov
scas
loop
mov
lods
repz
int3
in
xchg
shlb
mov
ljmp
loope
lods
sbb
pushf
adc
clc
lcall
sbb
fldcw
fs
adc
cmp
cltd
sbb
and
shll
xchg
in
push
fucomi
out
sti
es
ss
xor
xchg
pop
int3
jmp
jmp
hlt
mov
jle
push
aad
dec
das
lcall
lods
sbb
or
lret
shll
enter
xchg
push
push
jge
mov
dec
inc
mov
push
sbb
pop
pusha
and
jp
fwait
cmp
shlb
fidivs
jecxz
clc
aas
out
cmpsb
insl
in
or
js
jge
cmp
jo
fdivr
in
jbe
inc
cltd
js
push
fidivrs
mov
xlat
pop
lea
rcl
gs
pop
cmp
mov
inc
popf
pop
push
jb
mov
shrb
movl
push
jo
cwtl
cmp
push
pop
inc
or
and
imul
mov
cmpl
inc
shrl
push
push
shlb
icebp
sbb
xchg
mov
sti
jmp
or
xor
fnsave
push
fildl
ds
xchg
mov
shrl
xchg
jmp
dec
cmp
lahf
adc
jbe
sbb
jle
cmpsb
mov
pop
jo
out
sub
aam
in
out
out
add
or
add
and
into
addr16
sub
jns
adc
ljmp
jecxz
repnz
nop
dec
lods
pop
ss
je,pn
push
xor
shr
and
jg
scas
adc
cld
add
fwait
sub
jl
pop
mov
adc
jnp
and
sbb
subl
repz
cmp
mov
push
push
add
pop
mov
and
adc
xchg
out
scas
les
add
dec
sub
fsubs
mov
push
adc
or
stos
movsl
cld
adc
icebp
dec
lret
pop
push
or
lcall
scas
das
add
or
or
or
pop
nop
sbb
mov
lods
mov
sbb
and
xor
and
cmpsl
and
lcall
mov
add
cmp
pop
test
daa
pop
mov
jp
add
add
test
dec
sti
ret
imul
loop
mov
cwtl
jae
shrb
inc
test
inc
jmp
int
or
shrb
jecxz
dec
imul
xchg
divps
and
jmp
fcmovnbe
mov
add
cltd
push
sbb
lahf
xor
jno
in
cld
mov
outsl
mov
mov
arpl
in
add
mov
sub
adc
int3
and
lea
mov
adc
mov
or
sub
xchg
in
adc
shr
add
mov
or
or
sti
std
mov
fadds
stos
mov
add
stc
jge
lock
int3
push
cmp
aas
mov
mov
cmp
adc
push
sub
push
sub
mov
test
pushf
imul
in
adc
fstps
aaa
pop
xchg
in
mov
mov
mov
push
lret
sbb
aaa
hlt
enter
mov
push
xlat
aas
loopnew
stos
shr
ljmp
call
fiaddl
jecxz
outsb
fldt
adc
sub
leave
and
push
sub
mov
inc
push
lea
icebp
aaa
adc
fsubrl
jge
jl
jmp
jecxz
shr
outsb
subl
pop
cmp
add
ja
push
mov
add
sub
ds
ret
mov
lds
mov
in
jecxz
push
dec
cld
cwtl
pop
pop
inc
push
jo
xchg
xor
out
scas
or
sbb
int
shlb
sub
dec
mov
sub
cltd
mov
in
sbb
ljmp
mov
inc
bound
cwtl
outsb
jne
mov
sahf
insl
jb
je
jbe
pop
jecxz
lods
xchg
mov
sbb
in
mov
xlat
fwait
and
mov
jns
mov
xor
icebp
push
jecxz
jle
mov
cmpb
jmp
sbb
jnp
or
dec
mov
sub
push
out
jnp
and
adc
push
aad
xchg
inc
inc
insb
in
dec
stos
mov
aaa
sti
mov
cmp
jbe
ret
fcomps
xlat
cmpsl
clc
jb
pop
sub
xchg
in
mov
xchg
into
aaa
jecxz
out
and
xchg
movsl
aam
repz
fs
xchg
aam
stos
out
cld
mov
fs
mov
xor
pop
aaa
pusha
aaa
xlat
fadd
xchg
mov
lret
adc
push
jno
dec
shlb
scas
xor
movl
inc
push
push
gs
outsb
ds
pop
cmp
out
xlat
xor
pop
insb
repz
sub
repnz
inc
sub
aaa
add
xor
cmp
push
cmp
mov
imul
cmpsb
jo
mov
mov
mov
push
pop
outsb
dec
xor
or
mov
into
sti
out
rcll
mov
and
pusha
addl
sbb
hlt
cltd
sub
sub
mov
add
cmp
sub
or
adc
mov
xchg
out
nop
stc
adc
push
xor
mov
ss
jns
repz
dec
mov
insb
lahf
repnz
sbb
dec
dec
fimuls
cli
ljmp
dec
or
das
sub
pop
adc
test
mov
addr16
adc
jo
mov
in
in
imul
inc
or
in
and
fisttpl
add
mov
adc
dec
xchg
sbb
pop
fldt
xlat
andb
cmp
fistpll
cmp
mov
mov
mull
cmp
lds
inc
lcall
in
lods
hlt
imulb
add
popf
pop
adc
ret
jbe
mov
mov
pushf
cmpl
adc
test
int
push
inc
ljmp
mov
pop
jo
jg
shlb
subb
cwtl
jp
xchg
dec
clc
sbb
sub
or
fstps
pop
insb
movsb
xchg
movsb
scas
in
add
icebp
mov
mov
xor
call
jl
cmc
jge
mov
mull
xor
rorb
notb
or
addr16
test
push
mov
sbb
xor
lahf
ljmp
adc
repz
or
fbstp
and
mov
mov
jecxz
stc
xlat
and
push
mov
mov
roll
sub
xchg
repnz
xchg
cli
xor
shlb
ss
pushf
mov
add
dec
and
aad
sbbl
inc
out
cmp
in
jno
and
or
pop
stos
aaa
je
adc
add
and
mov
stos
mov
ss
int3
xchg
xchg
dec
pop
and
lock
je
xor
sub
enter
dec
test
dec
mov
outsb
cmp
fcomip
push
pushf
push
clc
imul
lahf
inc
mov
mov
sbb
hlt
mov
mov
mov
jle
fsubs
sub
lea
rorb
bound
add
pusha
sub
add
adc
and
cmp
enter
js
sub
insl
pop
push
bound
call
ret
dec
xchg
fistps
das
adc
ss
fs
push
pop
cltd
mov
ds
nop
jecxz
fs
out
cs
movsl
jne
sub
push
popa
clc
inc
fwait
pusha
cmpsl
mov
inc
insb
ret
addr16
lret
test
lock
lds
jne
ret
insl
push
xlat
fimuls
lcall
adc
sbb
cmp
mov
aaa
sub
pop
xor
pop
dec
mov
lods
idiv
jo
add
sbb
add
pushf
loope
sbb
and
fwait
add
loop
inc
and
dec
push
sarb
mov
mov
xchg
jns
mov
cmp
fstps
and
aas
and
mov
hlt
push
les
cmp
mov
outsb
clc
mov
push
pop
adc
mov
movsl
jmp
xor
std
push
lods
mov
test
lds
out
sbb
test
in
lahf
lods
int3
out
adc
jge
add
ret
andl
adc
icebp
out
stos
mov
stos
cmp
adc
dec
pop
xor
sub
fwait
mov
mov
adc
mov
inc
movsl
or
add
xchg
es
iret
sub
or
cmpsb
mov
into
outsl
inc
ja
push
fbld
mov
pushf
sti
mov
mov
sbb
jae
mov
cmp
ss
int3
nop
enter
mov
adc
test
xor
pop
push
pusha
shl
push
mov
lock
cmc
jmp
shlb
sbb
sbb
xor
inc
dec
sbb
dec
sub
cmpsl
shrl
in
test
ret
pop
add
test
test
add
enter
cmp
dec
test
decl
push
push
decl
or
loopne
mov
push
xchg
jnp
cwtl
jmp
mov
xchg
sbb
mov
rclb
or
mov
add
push
add
in
in
or
jns
and
mov
test
xor
add
mov
mov
rcrl
push
mov
add
dec
and
cmp
inc
and
xor
pop
shlb
int
mov
mov
mov
xor
mov
fnstcw
xchg
out
sub
push
mov
jne
jno
popa
jmp
lock
std
sbbb
out
fsubrl
outsb
jb
add
and
cld
and
dec
xlat
and
ljmp
imul
std
pop
pop
loopne
adc
xor
int
cmp
push
insb
sbb
lcall
push
xor
add
mov
xchg
imul
mov
xor
add
mov
outsb
cmpl
in
jo
jmp
xchg
pop
and
lea
stos
sbb
inc
idiv
mov
and
lret
pushf
inc
ja
or
jae
dec
dec
dec
jp
inc
jp
push
push
cwtl
repnz
mov
es
lahf
and
add
repnz
aam
cmp
or
fdivrp
cmpsl
adc
imul
pop
ret
add
mov
sbb
rcrb
cs
fdivr
xor
lret
test
dec
mov
push
jne
mov
xchg
int
insb
int3
loope
int3
jp
cmpsl
ss
setns
cmpsl
xchg
cmovg
cwtl
sti
shrb
lds
xchg
and
loopne
cmp
ljmp
mov
sbb
and
enter
cmpb
scas
inc
loope
ja
iret
jg
and
mov
jns
xor
es
adc
pushf
cmp
xchg
movsb
push
hlt
cmpsl
push
push
out
xor
test
mov
jg
notb
stos
aas
sub
iret
mov
cli
shlb
jbe
cmp
sbb
push
dec
dec
ja
jo
jbe
out
aas
dec
jge
inc
pop
push
cmp
mov
lret
cmp
sub
lods
or
mov
xchg
add
mov
and
and
sbb
dec
xchg
adc
mov
inc
push
add
dec
add
or
test
adc
sbb
iret
test
in
testl
iret
test
lret
xor
cmp
mov
jmp
and
sbb
in
xchg
adc
out
xchg
pop
adc
imul
cmp
sbb
mov
jp
xchg
fwait
push
movsb
ret
mov
jge
scas
popa
iret
xor
cmc
push
xchg
push
push
rcrb
jl
ljmp
fs
cmp
jmp
jbe
sbb
mov
aam
loop
dec
pop
push
mov
add
push
dec
jl
xlat
and
das
mov
xchg
or
sub
lock
mov
pusha
loop
push
adc
ja
dec
aad
push
or
imul
in
sub
push
imull
repz
adc
outsb
push
out
lret
fstps
jg
push
mull
call
xchg
jno
outsl
hlt
daa
lret
inc
fisubl
jg
jl
idivl
sub
add
push
add
jg
cmp
add
popf
addr16
mov
xchg
es
out
popf
add
aaa
movsl
pop
cs
mov
pop
inc
cmc
lods
pop
add
xchg
xchg
dec
imul
popf
pushf
outsb
adc
ja
imul
sub
mov
mov
imul
pusha
rolb
insl
add
scas
inc
enter
jmp
ss
adc
cmp
popf
lds
cltd
pop
dec
sub
scas
pop
jmp
cmp
mov
jg
xchg
movsb
xchg
lods
sarl
cmpsl
mov
jno
dec
ret
mull
popf
mov
mov
inc
add
aam
sbb
jnp
arpl
mov
mov
pop
fnsave
and
fcmovnb
pop
xor
mov
push
popa
into
jmp
cmp
cmc
mov
dec
xorps
mov
call
and
fs
pop
sbb
xchg
data16
sti
adc
dec
fs
and
fmull
cmpsb
push
cmp
sub
lret
sbb
lahf
or
dec
dec
cmpsb
das
inc
xor
push
adc
sbb
cmp
xchg
jno
shlb
push
xlat
and
pop
jns
shrl
cmp
or
insb
jo
add
inc
inc
fwait
xor
and
mov
jbe
rcl
jmp
icebp
cmp
cmp
mov
xabort
pusha
or
xchg
les
lret
loope
mov
xchg
shrb
test
inc
mov
pop
roll
sti
and
jno
sub
fsubr
ja
or
leave
adc
jo
in
mov
add
dec
fstpt
mov
ss
mov
mov
xchg
int3
scas
jno
sbb
ds
mov
mov
add
mov
insl
std
mov
shlb
and
inc
or
mov
jnp
jle
stos
push
push
into
mov
inc
insl
ds
aam
jo
loopne
mov
shlb
push
and
loopne
pusha
in
jne
mov
lock
leave
jo
sbb
mov
jmp
lahf
xchg
fwait
fwait
inc
dec
mov
scas
add
jmp
sub
clc
dec
dec
or
cld
scas
xchg
pop
jne
or
mov
lret
mov
push
mov
and
mov
dec
cli
in
add
movsb
push
jg
lahf
out
lahf
ds
cmp
out
aad
mov
mov
mov
adc
imul
and
mov
imul
cltd
out
adc
pop
movsl
stos
and
data16
std
xchg
and
jnp
ljmp
in
mov
cmc
mov
push
lahf
and
fstp
jno
inc
test
ds
fwait
jg
jle
rcrb
jmp
out
clc
stc
xchg
pop
and
in
or
enter
clc
jbe
dec
dec
and
stos
aad
mov
xorb
fsubrl
and
mov
aas
mov
xchg
arpl
aam
dec
cltd
mov
adc
sbb
ret
sahf
pop
popw
adc
sarb
xchg
in
aas
or
addr16
shlb
mov
push
repz
push
or
push
xor
push
stos
cli
pushf
pop
iret
out
insb
cltd
mov
adc
cmp
roll
xor
push
ret
push
mov
nop
pop
call
fstl
ljmp
test
clc
dec
in
and
mull
mov
jmp
aam
rorb
mov
add
dec
fstpt
adc
push
pop
jecxz
sbb
popf
mov
sub
in
clc
ljmp
mov
jbe
arpl
mov
xor
test
mov
or
in
stos
cltd
pop
pop
dec
mov
jns
xchg
push
cwtl
mov
adc
push
enter
lds
gs
ja
inc
imul
xor
sub
mov
aas
lret
lahf
mov
xor
test
fs
mov
lret
jp
insl
out
and
pop
clc
sub
push
sahf
jge
push
add
cmp
pop
scas
test
lds
mov
sbb
push
aas
and
pop
stc
xchg
scas
stc
sbb
xor
inc
lods
scas
je
lret
xlat
shrl
pop
push
test
cltd
sti
lahf
ret
cltd
fmul
add
push
decb
cwtl
icebp
mov
hlt
xor
mov
push
loope
pop
dec
mov
mov
sbb
dec
mov
add
shlb
mov
out
jnp
jecxz
enter
cmpsl
cs
cmpsb
mov
adc
ss
inc
sti
lret
xchg
adc
cmp
mov
xchg
rolb
test
out
pop
cmp
call
inc
xor
les
adc
cmp
mov
ficomps
stc
and
and
and
ja
sbb
imul
mov
mov
xchg
ret
int3
xchg
xor
fiadds
push
mov
out
pop
mov
xor
popa
hlt
outsb
sbb
mov
es
dec
jnp
insl
sub
cmp
stc
dec
inc
test
fdivrl
push
out
lea
dec
fcompl
push
test
jge
pop
add
and
outsb
outsl
fsubrs
add
insl
ds
aad
pop
inc
rorl
inc
push
pop
sbb
repz
sbb
sub
and
sub
push
xchg
mov
pusha
loopne
out
mov
push
mov
dec
mov
pop
mov
or
mov
inc
or
imul
add
sub
popf
shl
ja
or
lcall
inc
mov
push
jge
xchg
or
mov
xchg
push
xlat
lret
inc
hlt
sub
fstps
jecxz
popa
and
cmp
loopne
jp
enter
jg
hlt
add
jmp
add
pop
xchg
mov
sbb
pop
push
cmpsl
xor
cmp
mov
outsl
std
mov
adc
adc
pop
push
cmp
xchg
or
dec
xchg
rclb
ds
aad
cmp
in
add
call
lods
in
jecxz
sub
arpl
jbe
push
xlat
push
pushf
enter
loope
scas
sub
jae
sub
mov
mov
xchg
adc
jno
repnz
aam
push
pop
dec
xlat
or
pop
and
repz
and
filds
and
sub
pushf
repz
xchg
mov
pushf
test
or
popf
add
add
add
add
add
push
dec
jbe
add
add
add
add
out
add
add
add
add
add
add
push
adc
add
add
add
add
add
add
add
add
xor
xchg
in
in
in
inc
add
adc
add
in
stos
add
ja
js
fdivrp
js
js
add
add
add
add
imul
adc
adc
add
adc
movl
add
add
add
add
add
add
mov
add
popa
add
add
jb
add
add
add
ret
daa
sbb
sbb
sbb
sbb
sbb
sbb
sbb
add
imul
dec
imul
add
lahf
push
addr16
and
sti
jecxz
out
sbb
push
imul
decl
mov
inc
push
add
push
pushl
pop
push
std
pusha
call
clc
clc
test
pop
add
mov
mov
push
add
mov
add
lock
add
and
in
push
add
sub
loopne
add
add
call
test
decl
adc
test
xor
call
or
push
push
addb
test
test
incl
je
clc
test
mov
movsl
clc
add
push
ljmp
push
decl
loopne
add
push
pop
pop
add
add
add
add
add
add
add
add
add
add
add
add
movl
insb
gs
gs
add
inc
insb
gs
fildll
add
fs
dec
add
je
pop
mov
imul
dec
add
push
je
das
out
gs
jae
push
addr16
je
add
add
daa
inc
inc
xor
push
lcall
add
add
xlat
add
add
add
add
and
popa
call
push
jbe
pop
notl
in
stc
cmp
loop
push
mov
inc
call
mov
jb
pop
sub
mov
int
mov
xor
test
mov
test
dec
xor
daa
xor
push
fcoms
mov
and
lds
inc
cltd
xor
jecxz
cmp
icebp
cmp
cltd
fdivrp
add
pop
inc
je
fisubrs
and
dec
loopne
and
lea
insb
aas
xor
jecxz
das
arpl
loop
movsl
xchg
jo,pt
popa
rcr
inc
bound
sub
dec
sub
dec
cmc
fucomp
lea
adc
andl
mov
mov
out
dec
mov
pop
xor
jle
mov
jnp
xor
or
fisttps
loopne
mov
cli
and
adc
dec
frstor
movsb
push
insb
mov
xchg
xor
lea
negb
clc
ret
mov
leave
popf
icebp
mov
dec
mov
dec
sti
inc
jmp
mov
mov
add
dec
xchg
xor
sbb
addb
xchg
ja
push
mov
push
mov
fldt
xor
lods
add
xchg
test
push
inc
pop
into
insl
aad
sahf
mov
int
addb
arpl
xchg
and
push
test
push
in
lcall
mov
and
leave
dec
xchg
rorl
je
xchg
sub
mov
xchg
iret
in
hlt
jne
hlt
je
or
jmp
dec
inc
mov
inc
cmp
inc
xor
and
and
out
pop
test
mov
call
daa
data16
jbe
aaa
sub
or
mov
mov
leave
stos
push
ljmp
xchg
mov
add
cmp
xchg
mov
stos
add
into
push
out
sti
repz
lods
test
mov
push
dec
fstpt
std
movsb
dec
or
mov
shlb
adc
mov
popa
decl
stc
xor
mov
push
imul
mov
mov
enter
scas
pop
fistpl
shrl
aad
les
rcr
push
and
and
jmp
jp
xchg
jge
cmpsl
shrb
cmp
push
scas
enter
movsb
shll
ds
xchg
jmp
push
inc
lret
cmp
jl
add
stos
imul
mov
xor
inc
xor
jmp
sbb
inc
repz
dec
pop
lock
mov
repz
mov
inc
push
pop
sarw
add
push
lcall
xor
and
in
call
mov
aad
test
sti
cmp
inc
ljmp
cld
std
dec
and
into
fbstp
call
enter
cwtl
or
cmp
outsl
test
repnz
aaa
cmc
xor
jmp
imul
xchg
out
inc
cmp
xchg
pop
pop
or
push
push
lret
stc
int3
fdivs
mov
adc
inc
xchg
cs
xchg
push
adc
cmpsb
and
insl
inc
xor
mov
inc
jge
nop
rorb
pushf
scas
adc
jmp
subb
xchg
xor
lret
mov
xor
sub
mov
adc
and
inc
fsts
pop
mov
xchg
mov
xchg
ljmp
xchg
sub
fs
addr16
out
cmp
ret
idivl
jae
jne
and
sahf
data16
aas
aam
js
in
or
in
pop
lods
std
rorb
cmp
dec
mov
adc
push
mov
std
movsb
jle
loopne
pop
fs
jp
push
roll
lods
dec
lahf
clc
in
sub
int
movsb
arpl
pop
jne
mov
push
cli
inc
loop
lahf
sub
or
or
pop
loope
sbb
ret
adc
outsb
fdivrl
xchg
lods
inc
push
movsl
outsb
ficoml
mov
insl
pop
add
pushf
cmp
jge
mov
mov
inc
fnstenv
rolb
cmp
jmp
push
sahf
std
xor
daa
outsl
dec
clc
outsl
mov
sub
sbb
jo
xor
mov
jno
sbb
pop
andl
xor
data16
sbb
std
cmp
icebp
cwtl
stos
ror
add
mov
push
sub
jge
rol
loop
fcmovu
push
cwtl
insb
sbb
push
push
push
out
stc
fsubs
or
jno
add
sbb
icebp
jle
push
cli
lods
mov
popf
xor
mov
pop
daa
push
ret
sub
dec
daa
push
loopne
and
scas
mov
clc
outsl
sbb
dec
cld
dec
loop
in
mov
fmull
out
into
shrb
lahf
cmpsl
mov
mov
push
pop
mov
es
pushf
iret
cmp
xlat
cmpsl
enter
xchg
ret
out
cmpsl
test
pushf
aas
addl
jge
in
push
ja
aam
jmp
ret
sub
data16
and
vunpckhpd
cmp
jb
lea
pop
xor
push
mov
lret
cltd
pushf
sub
mov
push
mov
data16
inc
clc
fwait
addb
adc
loop
addr16
sbb
int3
repnz
mov
jl
cli
ret
stos
sti
and
push
mov
sbbb
pusha
rorb
out
pop
xor
aad
adc
es
stc
cmc
test
pop
push
add
andb
cli
loope
pop
xlat
rcll
mov
mov
repz
shll
loopne
mov
arpl
outsb
into
cmp
push
pushf
dec
std
and
aam
lods
fcomps
bound
adc
adc
inc
call
xor
pop
ffree
xor
pop
stos
adc
movsl
xor
jp
sti
pop
jns
lods
cmp
rcrb
xlat
push
cmp
stos
sub
fidivl
ljmp
fadd
dec
ss
inc
pushf
test
orl
adc
imul
mov
stos
or
mov
mov
scas
pusha
pop
sbb
jg
jo
add
loope
rcrl
xchg
jbe
mov
pop
aaa
shr
mov
das
pop
and
sti
inc
cld
rclb
ret
cmp
nop
pop
adc
jp
push
xchg
imul
adc
in
stos
repnz
daa
shlb
movsb
adc
xchg
cmp
iret
loope
sbb
mov
xchg
cmpsb
sub
mov
in
in
lock
divb
push
call
jbe
fmuls
cmp
movsb
loop
inc
and
mov
sarb
dec
cmpl
sub
push
xor
inc
mov
cli
sbb
jo
mov
cmp
or
leave
pushf
ja
mov
imul
mov
inc
and
jle
xor
fwait
lea
notb
gs
push
xchg
inc
jnp
push
call
ja
cmpsb
in
sbb
sub
or
mov
or
cmp
fstpt
or
pop
lock
jno
movsb
addb
incl
mov
jle
inc
imul
mov
sbb
jns
std
jnp
jg
xchg
into
adc
dec
mov
aaa
pop
loopne
testb
xor
fistl
cmpsb
sti
jnp
test
inc
dec
dec
mov
rcl
push
lcall
sbb
in
sub
call
xchg
pop
add
les
and
icebp
stc
xlat
push
add
js
jmp
adc
jl
mov
jg
push
cmp
or
jge
cmpsl
orb
cmp
hlt
mov
push
dec
nop
push
mov
jbe
mov
stos
test
inc
aad
movsb
shll
push
shrb
ss
cwtl
test
xchg
sub
push
loop
add
pop
lods
mov
inc
sbb
cltd
sbb
xor
or
xchg
cmc
add
push
mov
loopne
stc
inc
fldl
sarb
cmp
xchg
dec
or
cmp
cmp
xchg
dec
inc
insl
sti
sti
mov
mov
leave
mov
mov
pushf
jne
movb
add
sti
ret
fcmovnbe
or
pop
lods
sub
cmp
fs
push
loope
mov
movsb
pop
mov
mov
push
cli
push
pop
adc
inc
sub
sti
je
pop
or
pushl
mov
or
push
fmuls
mov
or
outsb
cwtl
popf
push
leave
lods
adc
stos
ffreep
mov
add
andl
jno
mov
adc
mov
pop
adc
in
sub
dec
jp
insb
jg
js
popa
xchg
inc
cmpsl
inc
loop
fdivs
mov
mov
jo
arpl
push
mov
or
lds
shl
icebp
cmp
aad
popa
xlat
pop
stc
pop
add
and
lds
lods
rorl
adc
in
repnz
lret
or
push
push
hlt
jmp
insb
or
push
mov
jbe
cwtl
loopne
mov
leave
xor
adc
mov
push
stc
add
and
out
call
movsl
push
jno
mov
and
sbb
or
and
dec
nop
push
mov
jbe
rol
sahf
popf
mov
pop
push
nop
les
inc
stos
mov
incl
jp
adc
aaa
cli
aas
or
aam
jnp
cltd
mov
and
push
js
lods
xor
fsubr
pop
jmp
aad
cmc
in
sbb
inc
test
cltd
outsl
les
subl
mov
jb
lret
push
into
mov
add
lods
shlb
aam
fsubl
stos
imul
sub
stc
ljmp
es
dec
repnz
gs
jg
mov
cmpb
call
xor
xor
jno
mov
movsb
or
cmpsl
mov
mov
sti
das
insw
das
arpl
lret
stos
mov
pushf
iret
popf
lret
cmp
clc
repz
cld
mov
or
adc
jo
js
loopne
mov
bound
or
sub
adc
imul
testl
loop
jge
push
ss
add
insb
jge
das
jb
mov
pop
inc
fs
pop
jle
push
test
cmc
jmp
jno
jmp
int3
insl
test
xlat
add
xor
insb
test
xor
push
scas
repnz
push
sub
mov
mov
ficoml
jecxz
jae
push
cmpsl
pusha
les
sub
or
pushf
pop
jp
mov
sti
add
xchg
mov
add
sub
xchg
mov
call
lods
sub
and
pop
push
inc
jle
push
xor
out
jbe
ss
xchg
cld
cmp
stos
addb
mov
push
push
icebp
movsb
push
les
jb
cmc
or
mov
lods
into
decl
sub
mov
push
std
movsb
pop
outsb
mov
mov
ds
ja
movl
mov
bound
cmp
xchg
and
mov
pop
fs
push
xchg
and
mov
mov
sub
ljmp
scas
pushl
cmpsl
mov
xchg
inc
aad
sarl
mov
cltd
rcr
mov
scas
push
or
outsb
movsl
lock
xor
scas
sub
fcmovne
insb
xchg
ror
inc
add
cmp
sub
fnstenv
sub
cs
push
jp
iret
mov
jns
movsb
pusha
jp
pop
cld
das
daa
int
add
mov
add
scas
stc
paddb
mov
daa
cmp
xchg
adc
ljmp
push
outsb
fwait
sbb
xchg
insl
xlat
jno
jne
push
jno
das
and
shrl
jno
pop
pop
sarb
sbb
mov
or
es
xchg
xchg
add
std
sbb
cmp
xchg
fidivrs
adc
jg
insl
push
push
jne
rorl
mov
lods
adc
lds
fidivrs
jg
mov
decl
push
mov
jg
repz
shl
or
push
jg
lods
push
mov
inc
push
aas
enter
lea
sahf
iret
jmp
inc
gs
test
imul
outsb
xchg
cmpsl
add
insl
repz
push
imul
in
je
je
cmpsl
orl
push
les
ljmp
adc
push
adc
mov
or
push
stos
mov
xchg
repz
push
cli
pushf
jnp
mov
outsb
inc
repnz
or
mov
mov
std
imul
xchg
out
or
stos
and
sbb
rcll
out
xor
loop
add
or
push
cmp
mov
stos
aad
hlt
jo
aas
inc
insb
push
dec
aad
notb
jg
xor
xor
ss
in
push
mov
test
lahf
ja
adc
dec
sub
inc
mov
pop
pop
or
sahf
ret
pusha
xchg
stc
out
xor
lea
adc
mov
loope
mov
xchg
loope
call
popa
int
pushf
cmp
loopne
loopne
in
push
pop
add
pop
out
imul
repz
dec
pusha
mov
adcb
inc
add
mov
sub
ret
add
add
ss
push
ss
sbb
outsl
in
mov
add
push
add
pop
push
push
je
call
xchg
stc
iret
dec
cmc
ds
cmpsb
andl
mov
aam
push
stos
ja
loope
rcl
mov
mov
je
lds
mov
iret
jmp
mov
adc
lret
jne
inc
and
std
sbb
jb
mov
mov
insb
push
xor
inc
lret
sbbb
movsb
in
into
test
icebp
push
out
sbb
jmp
outsl
jne
mov
jecxz
repz
push
pop
jmp
test
cmp
sbb
xor
mov
sub
ret
sahf
inc
and
scas
aam
push
sub
int3
jns
outsb
daa
inc
je
sbb
and
rorl
shl
arpl
jmp
cmp
mov
les
call
push
mov
inc
cmp
aad
sbb
loopne
and
addr16
mov
std
ficoml
test
jb
mov
xor
and
ret
outsl
mov
aam
inc
into
loopne
xchg
jecxz
call
arpl
xor
int3
int3
insb
mov
jp
mov
add
cmp
movsl
push
xlat
pushf
gs
mov
inc
cmp
ss
sbb
pop
out
adc
add
bound
arpl
xlat
cmp
jno
mov
lret
inc
shll
pop
pop
shlb
and
or
add
neg
lea
sub
jg
mov
mov
nop
lcall
pushl
int
mov
loopne
mov
push
pop
xor
mov
inc
fcoml
in
sub
cld
lods
mov
andl
jmp
jne
push
jmp
mov
lahf
inc
rorl
pushf
lea
in
sbb
inc
adc
mov
sub
sub
ret
inc
cld
sbb
movq
dec
cwtl
fidivs
ss
out
sub
fisttpl
pop
pushf
mov
pushf
push
sbb
testb
jp
mov
jmp
jle
jo
push
ja
imul
or
jb
sub
push
jmp
adc
ja
mov
ja
jnp
sbb
pop
adc
repnz
mov
scas
or
push
push
fbld
fdivrl
imul
aam
lods
repz
mov
pop
push
fldt
negb
je
cmp
fwait
out
mov
gs
pop
stc
sub
fstl
adc
xchg
adc
push
ja
lea
inc
fmulp
xor
mov
xor
scas
xchg
sub
out
dec
push
cli
add
and
cmp
js
inc
addr16
xchg
adc
aam
push
cmp
cmpl
stos
insl
jmp
in
push
in
mov
ljmp
jb
arpl
mov
jge
inc
inc
inc
lret
or
insb
push
xchg
aaa
dec
jo
sbb
pop
iret
std
addr16
adc
and
and
fstpt
sbb
test
cmp
insb
mov
insl
inc
mov
inc
jo
loopne
sub
dec
or
mov
mov
arpl
scas
jbe
xor
jno
js
ret
out
enter
dec
out
out
fists
sarb
mov
sbb
or
xlat
shl
std
jns
sub
lea
in
insb
int
addr16
and
mov
test
dec
out
dec
pushf
sti
movsb
adc
sbb
push
xor
sbb
aas
das
mov
sub
jnp
shld
sub
inc
cmpsb
inc
xchg
outsb
movsb
cltd
cltd
mov
movsl
xor
in
popf
sub
xchg
out
add
sbb
cmc
shlb
in
enter
push
gs
pop
lret
or
add
shrl
mov
push
push
push
xchg
jp
inc
fadd
test
cmp
out
dec
adc
cld
aas
imul
loop
jnp
adc
push
loopne
adc
add
adc
out
int
or
dec
fsubs
inc
filds
mov
fisubrl
sbbl
shl
stc
cld
addl
fwait
sbbb
popa
sbb
mov
add
mov
inc
sub
les
mov
xchg
xchg
sbb
ljmp
dec
repz
jo
bound
dec
lahf
mov
xchg
js
fisubrs
cmp
pop
pop
out
xchg
inc
mov
aad
jno
push
arpl
shrl
and
pushl
sbb
or
mov
pop
bnd
xchg
fdivrs
xor
adc
xor
je
mov
and
jge
mov
xchg
shll
push
jb
jp
xchg
shrl
pop
imul
dec
push
fnstenv
push
jae
test
daa
xchg
mov
cmp
sbb
push
rorl
mov
sbb
pop
push
int
lea
and
or
adc
outsb
xchg
mov
jl
pop
ror
je
push
cmp
mov
dec
xchg
nop
mov
or
int3
sbb
xor
jge
lahf
cld
push
insl
pop
mov
hlt
movsl
adc
jl
aas
test
ja
adc
mov
fsubs
aad
and
loop
jns
stc
add
ljmp
jb
adcl
leave
jae
inc
lcall
push
int
mov
jge
adc
push
idivl
cwtl
insl
fadd
mov
mov
sbb
stos
daa
or
inc
mov
cmp
fists
mov
iret
dec
or
pushf
xlat
push
jnp
pop
add
lret
pop
mov
ljmp
push
ret
bound
mov
xor
jo
sahf
push
jns
imul
and
test
mov
in
outsl
aad
nop
icebp
sbb
icebp
movsl
inc
mov
repnz
into
sbbb
insb
int
adc
and
sbb
addr16
mov
pop
cmp
andl
outsl
shrl
sub
cmp
lahf
iret
and
enter
add
test
mov
and
out
stc
sbb
mov
xor
icebp
lods
mov
xor
std
sbb
mov
popa
jno
cmp
ss
jnp
xchg
mov
sub
cmp
and
lret
xor
cmpsb
inc
pop
jnp
mov
aaa
or
hlt
push
daa
inc
loopne
push
repnz
or
rorl
jle
xchg
leave
mov
inc
shl
mov
jno
add
push
dec
dec
in
repnz
sti
jo
insb
fldcw
jne
add
inc
mov
ret
pop
leave
mov
adc
mov
faddl
outsb
lret
pushf
cmp
jo
sbbb
popa
andb
xlat
aam
jnp
mov
jle
mov
enter
rolb
and
shlb
push
cld
movsl
in
and
or
adc
loopne
aaa
shrl
dec
mov
xchg
insb
aas
test
mov
in
mov
nop
cmp
lret
and
rcrl
in
outsb
mov
pop
movsb
pop
mov
stos
mov
or
mov
mov
cmp
repz
repz
bound
pop
leave
popf
xor
push
push
call
push
ljmp
mov
cwtl
sub
and
mov
jbe
outsb
push
popf
jns
pop
pop
mov
push
push
inc
cmpsb
dec
cld
mul
fildll
int
movsb
mov
fdivrl
movsb
jbe
je
lds
push
mov
mov
pusha
pop
imul
lods
and
xor
dec
sbb
xchg
popa
mov
or
jecxz
movsl
mov
lret
popf
push
dec
cmp
sarl
inc
scas
add
push
jmp
lcall
aad
xchg
mov
cmpsb
cmp
adc
movsl
dec
lods
das
dec
jbe
sbb
and
dec
cmp
sub
nop
arpl
outsl
jecxz
stos
hlt
sbb
test
or
push
inc
mov
scas
cmpsl
mov
pusha
push
pop
sub
dec
xchg
mul
mov
in
sbb
adc
test
ja
dec
push
push
xor
pop
lds
sbb
scas
xor
cmpsb
xlat
cmc
lods
inc
cmp
imul
mov
mov
lcall
push
jmp
movsb
mov
xor
fidivl
mov
xor
mov
negb
das
xor
sub
add
or
mov
and
sbb
mov
add
add
movl
add
add
add
add
add
add
add
add
fisubs
add
add
rolb
add
cmp
mov
jg
push
testb
aaa
loopne
add
add
add
add
int3
add
cmpsl
insb
add
pusha
popa
pop
add
inc
add
add
inc
add
mov
add
xchg
add
push
add
add
add
jge
imul
outsl
push
jb
add
dec
pop
add
push
in
movl
add
sahf
xor
pop
push
lea
add
add
in
push
cld
addb
cmp
push
lea
test
cld
pushl
in
add
push
out
inc
adc
push
insb
leave
lea
or
in
jle
add
adc
add
enter
fcoml
in
add
add
add
popl
incl
fildl
insb
mov
push
ljmp
incl
incl
jmp
or
cld
testb
and
adcl
inc
shrb
or
call
stc
pushl
jmp
add
mov
hlt
add
adc
inc
pop
add
add
add
in
js
add
jle
aaa
lcall
add
add
add
imul
imul
je
add
imul
inc
jb
outsb
jae
add
dec
add
cli
add
imul
add
push
jne
popa
pusha
outsl
jns
outsl
imul
push
insb
dec
insb
push
popa
push
add
add
js
add
add
add
movl
add
add
rolb
lret
sub
leave
testb
or
rorb
add
inc
xor
ss
mov
pushf
fsts
sbb
subl
sub
xor
mov
push
outsb
sbb
ret
xchg
dec
frstor
push
mov
stos
imul
pop
push
sub
cmc
jne
sahf
sbb
insb
lea
sub
lret
dec
xor
jmp
lea
xchg
nop
pop
xchg
add
in
sbbb
inc
xchg
sahf
push
xor
dec
mov
push
fildl
test
mov
leave
mov
jb
repz
outsl
vpcmpeqw
sbb
ljmp
sbb
fsubrp
add
dec
add
or
mov
out
pop
lret
aaa
cmp
dec
les
mull
scas
or
and
dec
cmp
xchg
adc
pop
cld
test
shl
push
sub
fimuls
jno
in
lcall
mov
push
push
into
fcompl
cmp
popa
push
sahf
insl
fs
fmuls
lods
or
push
stos
bound
mov
or
cs
push
jmp
shll
add
push
jl
cmp
push
add
ljmp
and
add
jp
cwtl
notb
jns
popf
cmp
xor
stos
jl
adcb
in
lds
inc
mov
outsb
nop
push
rcrb
adc
negl
bound
add
iret
xor
arpl
sbb
sbb
jmp
mov
sti
push
es
sarb
mov
fnstsw
dec
in
xchg
ficompl
lock
push
not
sbb
scas
inc
stos
out
dec
jae
push
inc
shl
loop
cld
pop
push
mov
dec
and
mov
adc
es
or
lea
fistps
sbb
outsb
cmp
pop
dec
bound
pop
cwtl
dec
add
gs
in
jno
int
sub
jne
lds
jne
inc
call
rol
jno
inc
fcompl
adc
jne
or
or
push
test
les
push
cmp
inc
pop
hlt
add
cmp
jecxz
rorb
inc
inc
push
in
pop
or
jle
push
push
xchg
sub
mov
add
mov
decb
imul
fsubs
adc
orb
pop
shl
enter
lret
das
mov
mov
rcrb
in
shr
inc
jle
fisttpll
out
sbb
leave
adc
repnz
pop
push
xchg
xor
mov
test
das
pop
je
xchg
out
stc
sbb
lock
jp
xchg
rorb
mov
inc
or
adc
sbb
pop
scas
sbb
fistpl
arpl
insl
in
and
out
pop
push
push
dec
xchg
rolb
pop
mov
sub
cmp
fnsave
icebp
popf
mov
pop
fistps
jecxz
mov
push
jle
push
mov
mov
push
imul
pop
cmp
popa
lret
sahf
sbb
fcoml
and
in
int3
aas
or
sbb
sbb
jmp
insb
and
mov
mov
jns
shlb
dec
pusha
mov
out
jae
push
cmc
test
int
mov
leave
mov
push
call
xchg
fidivrl
repz
adc
bound
cmpsb
insb
movsl
fs
aaa
out
ljmp
sub
add
rorl
mov
in
in
cmp
addr16
push
dec
pop
cwtl
and
jl
fxch
and
mov
and
imul
adc
sbb
jmp
ja
movsb
jge
xor
sbb
xlat
push
ds
xchg
jae
fisubs
jp
inc
aad
adc
mov
mov
mov
call
and
cmp
mov
or
add
call
insl
sbb
dec
push
in
sub
int
push
fistl
cltd
xor
xor
push
pop
sbb
sbb
ja
les
jo
mov
lret
xor
and
xor
jle
cwtl
jge
xchg
inc
rcl
and
add
lock
imul
aaa
mov
jnp
stc
int3
push
shl
and
loopne
gs
lret
mov
pop
or
ret
xor
dec
dec
mov
pop
lea
jbe
addr16
in
adc
es
pushl
xchg
and
adc
xchg
and
cmp
lds
clc
fistps
lahf
cmpsb
movsb
repnz
xchg
loopne
daa
dec
xchg
jge
sbbb
xchg
fcmovu
add
lret
repz
mov
sub
pop
adc
and
rcl
push
enter
cmp
fnstenv
lods
insl
pcmpeqw
iret
mov
enter
pminsw
xchg
xor
je
xchg
in
data16
or
nop
popf
ljmp
nop
or
mov
sbb
fdivp
clc
cmpsl
jns
movsb
xor
xor
test
xchg
pop
pushf
mov
pop
jge
or
jno
fs
out
sahf
and
sub
mov
mov
enter
adc
pop
mov
in
fcoms
hlt
andb
mov
and
fsubrl
cmc
pop
loopne
aaa
arpl
xor
mov
or
mov
in
fdivrl
push
dec
xor
fsubl
rorl
dec
ds
pop
cmp
push
mov
mov
and
inc
lret
or
adc
cmp
add
les
and
stos
xchg
ret
sarl
aaa
fs
mov
pop
xchg
and
or
insb
repnz
inc
or
cmp
in
lret
mov
lret
jg
pop
insb
push
add
jle
cwtl
cltd
stc
aam
add
jbe
ret
sti
add
sub
test
shrb
int3
test
imul
and
xchg
xor
and
jecxz
dec
or
add
out
pop
imul
jnp
sbbl
repz
int3
sub
shl
cli
lds
sub
imul
loope
mov
les
sub
out
mov
pusha
testb
mov
out
dec
mov
pop
cmpsb
cli
stos
mov
xchg
cltd
cmp
mov
popf
pop
push
and
in
ja
outsb
and
jmp
mov
pop
xor
sub
add
mov
out
pop
mov
sub
ja
push
out
aad
movsl
lret
addl
int3
popa
mov
add
sub
test
pop
jbe
jp
addr16
imul
sbb
stc
shrl
or
xchg
pop
rolb
push
pop
sub
push
pop
in
movsb
loope
or
and
dec
outsl
cwtl
xchg
outsb
ret
hlt
jl
call
aam
inc
push
fcmovnu
xlat
fs
sub
outsl
adc
push
jns
adc
stc
mov
daa
in
ret
loopnew
repnz
cli
mov
and
ljmp
cvtps2pd
inc
xchg
or
insb
fwait
xor
or
add
xchg
aaa
xchg
cwtl
adc
sbbb
sbb
imul
cmpsl
inc
inc
inc
and
mov
pop
mov
adc
in
dec
pop
pop
out
xor
pop
addr16
gs
xor
rolb
cmp
bound
aad
mov
test
sbb
fwait
scas
inc
mulb
pop
std
addr16
xchg
int
xchg
nop
inc
jmp
push
inc
dec
push
adc
and
roll
inc
int
fldl2t
dec
mov
in
push
jl
sub
inc
dec
ret
mov
xlat
add
xor
imulb
lock
xlat
roll
mov
xchg
pop
in
add
fistpl
popf
iret
jnp
xchg
adc
insb
out
cmpsb
leave
stos
imul
jo
test
xchg
add
popa
mov
lcall
insl
jmp
push
hlt
scas
int
push
inc
jmp
fcmovb
dec
rcl
ja
test
and
cmp
lock
push
imull
dec
repz
pushf
out
sbb
je
xor
int3
in
mov
jl
fdiv
bound
mov
mov
movsb
mov
iret
fcomps
enter
pop
loop
arpl
loop
cmp
ret
adc
xchg
ret
jmp
and
fwait
pop
scas
jb
add
xor
rorl
lret
nop
mov
addr16
sbb
jg
sbb
dec
and
adc
popl
cmp
data16
mov
inc
or
jl
pushf
mov
mov
jecxz
and
cmpsl
lods
sbb
sub
mov
ret
movsl
adc
les
push
hlt
mov
repz
and
std
andb
pushf
loope
push
xor
movsl
sbb
xchg
cmp
shlb
xchg
ja
mov
dec
sti
dec
sub
and
mov
adc
sub
lret
rcl
mov
cwtl
outsb
adc
push
add
mov
mov
push
sub
hlt
push
pushf
inc
adc
test
jl
subb
stos
xchg
hlt
adc
adc
cmpsl
and
and
cmc
fdivrl
dec
jl
xchg
xchg
mov
insl
mov
ja
sub
clc
fidivl
inc
lahf
inc
enter
and
push
clc
sub
push
push
xchg
pop
aaa
and
ret
in
cmp
lods
cmp
jb
pop
ret
and
add
bound
loopne
dec
jecxz
mov
lock
inc
ret
hlt
mov
mov
ret
pop
mov
xchg
leave
enter
pop
ljmp
ljmp
loop
std
inc
adc
out
rcrl
inc
jge
cmp
dec
mov
pusha
gs
jbe
adc
mov
cwtl
int3
dec
jle
cmp
push
pop
or
imul
sub
orb
shll
ljmp
daa
rolb
in
pop
popa
and
ficoms
sub
daa
pop
add
outsl
ja
out
add
dec
cmpsl
mov
and
out
leave
xor
into
dec
rol
mov
jb
rolb
jecxz
orl
sub
inc
int
aas
mov
test
xor
sbb
mov
jp
in
psrlw
lcall
push
lods
scas
jmp
xchg
sub
pop
ret
ja
sbb
or
es
mov
adc
fstpl
negl
add
loop
cmp
sbb
imul
cmp
add
push
popf
je
dec
inc
mov
and
aam
or
shrb
je
fisttps
sub
mov
out
test
inc
pusha
into
lods
and
fmull
sbb
jne
bound
push
mov
add
dec
ror
test
mov
xor
add
mov
inc
xchg
dec
inc
cmpsb
lret
sbb
push
adc
fidivl
addr16
or
sbbb
inc
ja
cltd
pop
sbb
mov
xchg
cli
xchg
cmpsb
push
push
out
scas
hlt
adc
rcll
ja
and
pop
jns
adc
std
scas
sbb
xchg
ret
cmp
fsts
adc
in
pusha
and
add
xchg
subb
pop
add
push
fwait
mov
fisubs
movups
jecxz
dec
cmp
inc
arpl
push
inc
adc
add
cmpsl
ljmp
aaa
cmp
cli
movsb
fcoml
ret
shlb
mov
fsubrs
adcl
or
add
jecxz
cwtl
inc
add
add
in
mov
or
lea
inc
cmp
mov
xchg
aam
xchg
decb
pop
fnstenv
xor
cmp
cmp
lock
xchg
fstpt
out
adc
outsl
adc
mov
cmp
cmp
pusha
push
inc
dec
std
rolb
js
and
fistpl
ljmp
push
or
test
xor
bound
push
adc
xchg
pusha
or
fimuls
cs
and
cmc
pop
or
aad
or
xor
cmp
imul
in
dec
pop
cmp
inc
test
sub
jmp
cmp
das
jecxz
popa
cs
arpl
lock
fildl
dec
int
pop
rcr
inc
fsts
decl
stos
pop
mov
call
decb
fimull
inc
sarb
cmp
repz
lret
cs
pop
mov
jge
mov
jmp
push
push
in
mov
lret
jle
and
loop
sbb
icebp
inc
imul
in
jo
cltd
jle
mov
ss
icebp
mov
cwtl
lret
mov
or
ds
inc
nop
test
pop
sarb
sti
mov
jae
mov
or
cwtl
jb
sbb
cmpsb
ror
lahf
or
loop
sarb
lahf
sbb
pop
pop
mov
push
fcmovu
mov
sbb
lea
aas
inc
dec
push
andl
jo
or
leave
jb
jle
icebp
add
dec
push
mov
mov
xchg
cs
lock
fs
push
or
adc
jle
push
lcall
test
push
or
lds
imul
out
jno
fmull
daa
adc
pop
mov
shll
jecxz
adc
push
jns
cmpsl
sbb
and
jmp
mull
stc
je
fnstsw
jp
sar
aad
sub
aam
inc
hlt
cmp
lods
rorl
aad
cwtl
or
and
std
xor
mov
xor
pop
adc
iret
pop
ss
jno
hlt
scas
mov
out
jns
add
fsts
jg
cs
pusha
mov
fwait
xchg
cmpsb
cmc
adc
lods
cmp
inc
mov
sbb
or
lea
dec
and
test
cmpsl
dec
sbb
ret
add
bound
test
call
dec
std
ret
jnp
into
ficomps
and
push
fs
xchg
hlt
sbb
out
ja
mov
and
add
pushf
or
xchg
popa
jno
or
mov
in
subb
dec
push
lahf
add
adc
xchg
or
sbb
mov
mov
jge
pop
aaa
mov
cmpsb
test
je
pop
jne
adc
icebp
idivw
divl
jecxz
neg
jo
and
mov
cmp
loopne
shrb
mov
cmp
mov
rorb
pop
sub
outsb
pop
xorl
pop
cmp
push
jbe
sbb
inc
pop
stc
sbb
ja
mov
in
insb
sahf
xchg
int3
hlt
std
sub
lods
mov
inc
mov
adc
loop
push
and
fstps
dec
jb
sbb
ret
add
sub
mov
mov
leave
sarb
fs
cmc
addr16
push
repz
int3
outsb
xchg
inc
cmp
push
test
cld
push
sahf
test
push
jl
ss
inc
jae
and
into
popf
outsb
mov
int
mov
nop
mov
ja
adc
lret
subl
push
xor
aam
push
xchg
sbb
pop
sbb
xlat
rcll
popf
lds
imul
xchg
idivl
in
mov
sub
movsl
xor
stos
fldenv
scas
xchg
sub
lock
outsl
mov
mov
inc
cs
xlat
fistps
stc
aaa
jbe
and
sbb
jo
mov
mov
fstpt
int
dec
jo
jg
mov
aad
sbb
xchg
mov
push
xchg
addb
xor
popa
jne
jl
xor
pushf
sbb
stc
xor
pop
add
clc
mov
loop
adc
or
in
sub
leave
call
inc
xor
pop
mov
lcall
jge
xchg
mov
ljmp
mov
dec
fdivrl
mov
jmp
mov
nop
bndstx
mov
push
insb
lock
xor
mov
arpl
shr
dec
shll
decb
sbb
pop
jl
cmp
or
pop
mov
jmp
xchg
jg
sbb
jmp
lret
imul
jo
or
aam
pop
aad
ljmp
dec
std
out
add
stos
dec
push
test
bound
add
into
fneni(8087
xor
cmc
outsb
inc
in
mov
pop
mov
mov
mov
inc
stc
aaa
jno
fisubrl
add
dec
xchg
cmp
add
mov
rorb
push
jle
pop
aas
mov
cmp
mov
popa
jge
test
movsl
ret
mov
jns
stc
dec
cmp
sub
cs
addr16
dec
les
es
inc
popf
call
mov
shll
cmp
inc
inc
adc
mov
les
bound
mov
sarl
jne
adcb
shl
shrb
stc
imul
dec
jmp
mov
ret
in
dec
ss
std
movsb
orb
fs
cli
xlat
shrb
mov
cmp
pusha
subl
lcall
mov
adc
and
ja
mov
xchg
and
lret
or
mov
pusha
adc
icebp
jl
jb
add
push
loop
es
or
mov
fstpl
jnp
dec
clc
fwait
ljmp
cmc
xlat
and
stc
xor
sub
adc
adcb
jg
testb
pop
int
call
pop
jne
repnz
adc
fwait
enter
xor
pusha
test
sub
push
mov
mov
rorl
mov
sub
loope
lahf
mov
repz
push
push
jle
jbe
add
mov
aaa
inc
hlt
pop
ror
fidivrs
orl
std
ret
scas
leave
cld
add
xchg
das
dec
lahf
lods
cmpsl
mov
shrl
push
mov
and
fdivrs
xchg
lods
push
lcall
inc
or
je
enter
mov
pop
arpl
adc
xchg
es
jns
test
adcb
out
test
dec
jb
mov
scas
roll
ret
sbb
adc
adc
mov
inc
push
sbb
cmp
cmp
adc
mov
fsubrs
mov
xchg
scas
jecxz
add
cmp
ret
inc
push
xchg
pop
mov
fistpll
jmp
sub
mov
lret
mov
test
mov
dec
and
xchg
pop
addr16
int3
and
shrl
bound
cltd
ja
push
loop
xchg
sbb
jb
sub
xchg
push
imul
inc
push
push
add
int3
sbb
fnsave
scas
jae
fisttpll
cld
pusha
dec
xor
and
push
add
iret
jmp
inc
push
add
dec
clc
push
push
sti
int3
cmp
push
gs
fdivr
out
sbb
sbb
shlb
ret
xchg
out
fcomps
mov
mov
push
pop
aam
pop
or
orl
movsb
rcrb
pusha
neg
inc
loopne
ja
sub
andl
inc
pop
or
dec
shrl
or
rorl
setne
dec
mov
mov
in
push
ret
loopne
sbb
cmp
insb
mov
add
push
push
or
add
or
movsl
cmp
shrb
es
dec
and
in
xchg
int3
inc
movsl
mov
setno
gs
dec
shlb
or
sub
xchg
or
push
adc
sbb
and
add
jnp
shrl
jecxz
and
cs
pop
jl
loopne
les
cltd
lods
dec
dec
into
lret
inc
mov
mov
repnz
out
or
outsw
sub
xlat
int
xchg
add
inc
adc
xchg
jle
popl
popa
les
test
call
ror
jbe
stos
dec
sub
hlt
push
sub
pop
shr
add
mov
sub
jo
ficoms
shll
push
fildll
xchg
dec
add
aam
insb
testl
or
mov
cmp
lcall
push
jne
or
popf
out
cltd
sahf
fisubs
add
push
cs
test
add
fistl
sbb
fisubrl
stc
shlb
enter
mov
add
in
jb
shrl
outsl
popf
fcmove
pushf
popa
mov
addr16
ret
and
push
insl
popf
outsl
xchg
push
adc
push
popa
push
push
jb
repz
pop
lds
or
jbe
jmp
pop
or
sub
xchg
ja
lds
push
nop
or
xchg
sub
push
mov
push
push
test
lret
add
mov
fnstsw
inc
loopne
gs
adc
aas
ja
or
and
sbb
mov
ret
aas
pop
mov
outsl
adc
sub
aas
jne
ljmp
outsl
scas
mulb
inc
mov
stos
cmp
mov
imul
gs
sahf
push
fmul
lret
cmp
or
add
add
add
clc
add
xlat
add
dec
add
inc
add
fadds
add
add
test
xor
pusha
addb
nop
add
addb
rolb
cmpb
lock
add
add
adc
add
call
add
add
xchg
add
add
add
stos
stos
add
ja
decl
incl
incl
add
add
add
or
or
adc
add
add
add
adc
add
cmp
add
add
add
add
add
add
adc
add
add
sar
add
add
sbb
add
add
sbb
sbb
sbb
sbb
sbb
and
pop
jne
mov
inc
outsl
outsb
pop
push
push
add
outsl
imul
xchg
add
rcrl
mov
jmp
aam
cld
xor
pop
incl
mov
test
xchg
mov
adc
push
test
push
add
incl
repz
inc
fs
push
test
mov
push
cmp
lea
add
add
add
sub
add
jmp
add
xchg
decl
js
call
decl
cmp
call
dec
push
lock
inc
lock
nop
add
call
add
lret
cmp
mov
cmp
incl
lea
push
push
jne
daa
add
leave
add
pop
add
sub
pop
add
add
sbb
push
sbb
sbb
sbb
sbb
rcrb
pop
sbb
add
add
je
jae
outsb
dec
insb
add
imul
insl
gs
mov
insl
insl
outsl
js
add
jo
insb
jae
xor
cmp
gs
add
add
outsl
jbe
fs
insb
gs
popa
push
add
add
add
add
add
add
call
add
add
cmp
add
add
add
add
add
add
add
add
add
add
enter
xchg
cmp
xchg
lods
ss
into
sbbb
daa
mov
sbb
fdivl
jo
mov
ret
insb
cmp
xor
and
notl
aas
shlb
scas
outsb
repnz
inc
stc
test
add
xchg
push
and
rcrb
xchg
jne
ror
aam
mov
ds
stc
adc
jns
cmp
sti
popf
push
fstl
inc
mov
ret
stc
arpl
pop
addr16
xchg
mov
dec
mov
push
sbb
xor
popa
and
sbb
jns
ljmp
xor
inc
loop
daa
xchg
lock
xchg
push
lret
lret
sarl
outsb
int3
arpl
out
push
iret
fadds
pop
sub
mov
sbb
pop
add
xor
lahf
popf
ficoml
repnz
in
mov
test
icebp
xchg
mov
xor
or
jne
clc
imul
cld
cmp
xlat
add
aad
jecxz
ja
jle
push
add
fwait
xchg
jecxz
ss
stos
dec
mov
pop
add
adc
out
movsb
mov
adc
lret
mov
xchg
sbb
loop
sub
cmp
xchg
adc
ljmp
push
sub
xchg
fstps
dec
add
xor
cmpsb
scas
and
mov
sub
lods
xor
rcrb
xchg
inc
jno
orb
pushf
pop
out
imul
testl
rcll
gs
mov
js
gs
pushf
pop
mov
out
dec
jae
je
lds
loop
xchg
adc
negl
add
push
cmpsl
cmp
bound
notb
jns
jl
push
cmp
mov
pop
pushw
out
or
sbb
jmp
shll
scas
jne
repnz
or
xchg
add
call
dec
or
push
add
in
fstps
inc
sbb
and
insl
pushf
xchg
fisubs
into
stc
ljmp
in
popa
aaa
fldenv
insb
xor
roll
sub
adc
movsb
cmpsb
mov
or
jmp
jae
xor
rcrb
dec
out
inc
mov
and
movsb
pop
mov
hlt
das
sub
or
and
leave
push
cwtl
and
xor
xchg
mov
cmp
cwtl
mov
inc
pusha
fwait
push
rorb
jge
add
xchg
mov
sub
repz
aaa
subb
and
sbb
test
out
sbb
cmp
or
and
popf
arpl
mov
push
fidivs
push
push
fstpt
sahf
jbe
mov
fldz
cmp
adc
mov
jecxz
and
add
cld
cmp
mov
dec
lock
imull
cmp
push
mov
xor
mov
adc
out
cwtl
mov
mov
mov
sahf
addr16
imul
enter
xchg
loop
pushf
or
sub
sbb
out
fisubs
out
xchg
dec
out
dec
mov
rcr
push
fmull
sub
or
aas
out
jae
cmp
mov
adc
in
add
push
scas
into
das
and
sbb
out
jno
lcall
gs
pop
fdivp
jg
repnz
jge
fstpt
fstpt
int
cld
sub
xor
in
loopew
pushf
outsl
jecxz
cmpsl
or
and
std
cwtl
inc
lret
arpl
mov
in
inc
lods
aaa
pop
nop
test
push
mov
das
xor
cmpsb
adc
repz
lret
cld
push
dec
ds
ror
mov
xor
lret
xor
and
mov
icebp
or
jp
inc
sub
pop
mov
sbb
fisubl
xor
and
sub
fwait
aad
insl
cmp
jmp
mov
mov
inc
sub
mov
test
or
push
or
dec
xor
jle
mov
add
sub
push
aam
mov
test
push
or
aaa
push
xor
adc
xor
arpl
aad
cmp
into
out
sti
sub
add
int3
js
mov
jg
mov
mov
inc
out
add
mov
mov
dec
xor
xchg
imul
sbb
push
pop
xor
cld
bound
pop
cmp
sub
mov
jmp
mov
sub
sbb
hlt
nop
js
gs
mov
jge
decl
inc
leave
push
xchg
jnp
js
insl
xor
mov
sub
adc
cmp
dec
sub
mov
sbb
ds
mov
mov
and
icebp
and
jg
and
inc
arpl
ss
call
testl
or
movsl
sahf
sub
cmp
jns
or
xchg
cmpsb
cltd
das
rcll
into
dec
xchg
ret
cli
fcmovnbe
mov
stc
jle
jl
aas
enter
fprem
roll
or
jo
sbbb
xorl
cmp
jae
adc
push
pop
pop
popf
push
popf
mov
ds
int3
subb
push
rcrb
test
jno
into
fdivs
inc
cmpsl
cmp
rolb
aas
xor
mov
push
sbb
mov
xchg
cs
cmc
ljmp
hlt
mov
sub
shl
insb
ret
lahf
inc
hlt
in
push
test
sub
scas
push
cmpsl
cmpsb
xor
ljmp
xchg
outsl
loopne
or
xorb
bound
lock
pop
int3
push
cli
adc
jg
pushf
lahf
mov
shl
sarb
dec
cmpsb
xchg
add
adc
daa
add
icebp
adc
mov
jg
aaa
shrb
or
andl
mov
lods
ja
lods
mov
or
mov
fcoml
sbbl
lret
dec
les
sbb
call
movl
or
idivb
arpl
add
in
lret
cmpb
mov
mov
in
xor
fwait
ja
mov
xchg
repz
sub
push
iret
sahf
lock
mov
outsl
sbb
in
imul
xor
orw
lods
inc
jbe
add
popa
xchg
dec
sub
addl
aam
sub
scas
dec
cmp
push
push
aam
movsb
repz
push
fidivl
loop
inc
lds
out
xchg
lret
push
cmp
leave
mov
daa
lret
jp
cmp
in
add
loopne
rorl
mov
sbbb
mov
scas
cwtl
ficoms
pop
in
fists
lahf
xor
lods
lret
subl
and
jo
cmp
sbb
outsl
add
mov
stc
jge
push
push
jae
stos
and
sub
mov
imull
pushf
daa
mov
ds
sar
sub
test
push
stc
add
push
mov
and
shl
push
dec
mov
int
jl
mov
fwait
and
gs
cmp
stos
pop
push
punpckhdq
xor
int
inc
fstpl
les
lret
pop
andb
fidivs
jo
xchg
aam
lcall
add
jl
test
mov
and
sbb
pop
out
pusha
sqrtps
je
sub
sub
out
mov
mov
ficoml
push
mov
data16
test
setl
ljmp
push
or
rcr
out
and
aaa
pushf
sbb
mov
pop
fildl
andb
daa
sub
pop
movsl
sub
mov
ljmp
sti
loope
xchg
add
and
dec
sub
add
gs
out
and
mov
push
les
sbb
or
loop
fnstsw
and
cmp
cmp
add
stos
adc
dec
jle
push
rcll
out
jns
movsb
int
leave
mov
pop
push
xor
test
adc
fisubrl
xorb
dec
es
xchg
fstl
ficompl
mov
ds
push
lea
aad
ja
pop
sub
clc
xor
pop
dec
mov
repnz
mov
xchg
push
sub
push
mov
sbb
fisubrs
inc
dec
das
jbe
adcl
mov
push
inc
sub
hlt
popf
or
adc
daa
xor
addr16
nop
inc
je
inc
cmp
jb
dec
aad
movsl
or
out
jmp
sub
dec
mov
int
xchg
or
xor
or
mov
pushf
in
dec
std
mov
xchg
iret
or
sbb
dec
mov
cmpsl
dec
sub
xlat
ja
inc
cmovs
and
sti
lahf
out
je
push
cmp
xor
mov
sti
outsb
pushf
rcll
into
jne
leave
add
sub
mov
daa
cld
adc
pop
movl
push
xchg
orl
jmp
push
subb
enter
test
mov
insb
lods
lock
xchg
and
cld
cmp
jecxz
jo
lret
iret
in
in
popf
lods
push
cwtl
jne
lods
add
dec
jns
out
jo
mov
cs
push
mov
ret
xlat
sahf
bound
rcr
pushf
insb
aas
scas
cmp
dec
incl
sbbb
or
icebp
sbb
adc
sahf
jb
js
inc
fldl
inc
mov
mov
mov
push
fdivr
sub
mov
bound
or
push
dec
in
pop
push
sub
inc
fisubrs
negb
xchg
movsb
push
dec
push
mov
cmp
dec
shlb
mov
inc
mov
mulb
push
es
mov
imul
mov
mov
cltd
gs
xchg
sarb
dec
fisttps
sbb
or
loop
push
sub
repz
ds
mov
mov
xor
sbb
and
add
mov
sahf
sbb
push
mov
jl
xchg
ja
dec
inc
insb
shrl
cmp
sub
test
sub
out
push
fwait
cmp
std
and
dec
mov
dec
fs
out
lea
xchg
mov
pop
test
mov
mov
jae
mov
jge
and
insb
mov
aam
mov
icebp
repz
lods
dec
mov
cmp
outsl
mov
or
and
stc
adcb
ds
xor
sub
and
leave
dec
sbb
push
jbe
ret
fsubs
pop
scas
inc
les
scas
sub
adc
xlat
sub
mov
addr16
jne
xchg
sub
or
inc
and
add
cld
push
fwait
out
or
pop
sub
jge
ss
cld
jo
adc
sbb
jo
lods
int
pop
xor
push
aad
jnp
push
mov
pop
jno
aaa
jmp
popf
cmpsl
lds
and
dec
dec
pop
adcb
jo
or
sti
jg
fldcw
dec
es
push
out
cs
jb
jle
jae
jp
sbb
jmp
pop
sbb
loope
xchg
lock
xlat
sarb
push
pop
xchg
outsb
push
mov
pushf
mov
gs
sub
aaa
sbb
mov
sub
pop
pop
aaa
adcb
in
repz
inc
or
cmp
mov
mov
xchg
sarl
aam
or
fisubrs
cld
gs
jg
cltd
mov
in
adc
nopl
clc
rcrb
stos
inc
add
outsb
movsb
xor
lods
fmul
xor
pop
loopne
jecxz
mov
ror
fidivl
jnp
and
mov
sbb
jne
jnp
hlt
push
xchg
inc
fimuls
xchg
dec
and
mov
mov
xlat
pushf
adcb
jne
mov
fldcw
aad
xor
push
enter
adc
cmp
sbb
mov
dec
cltd
lds
cld
in
enter
aad
add
fs
xchg
xor
sub
mov
cs
push
xor
push
fsubl
xor
shll
roll
lods
repnz
sub
cmp
inc
dec
out
stos
lret
loopne
jge
cmp
push
stos
mov
inc
pop
lods
js
pop
setge
inc
ss
sahf
lods
pop
mov
rcll
sub
mov
repz
je
pop
add
mov
dec
adc
jb
je
xor
adc
outsl
in
loopne
sbb
add
cld
outsb
dec
mov
ljmp
es
cmp
inc
push
inc
or
jno
fsubrl
jge
inc
cmp
cmp
inc
dec
arpl
stos
adc
aaa
push
or
in
das
xlat
mov
lods
lahf
mov
in
aas
fcomip
insl
scas
fdivl
sbbb
inc
cmp
xchg
jmp
xchg
xchg
push
xlat
jle
js
dec
and
pop
aas
loope
in
mov
lock
repnz
mov
movsl
mov
lret
and
test
adcl
lock
addl
ja
out
push
xchg
add
hlt
rcrl
jbe
pushf
mov
movsb
adc
mov
insb
mov
mov
pop
pop
push
out
rorb
mov
mov
adc
lods
fldl
pop
daa
sbb
xor
mov
sbb
xchg
aad
sub
mov
push
pusha
jb
adc
or
lea
je
sbb
into
lret
lcall
mov
data16
cmc
fsub
xlat
pop
mov
or
out
jns
xchg
push
call
lods
push
das
cltd
mov
sub
mov
dec
pop
mov
adc
adc
push
xchg
xchg
ret
pop
or
mov
mov
mov
or
stos
lahf
sub
cmpb
fstpl
movsl
mov
jnp
push
jg
je
scas
push
xor
push
add
test
outsl
out
ret
in
jns
jmp
sahf
lods
xchg
hlt
pop
fsubrl
xchg
adc
push
add
mov
sti
pop
andb
arpl
aad
sbb
sub
jmp
mov
mov
iret
test
in
mov
inc
pop
pop
add
clc
sti
and
test
jae
out
popa
ficompl
mov
sub
sub
inc
bound
pop
out
decb
adc
jbe
loop
in
out
xchg
insl
ret
ja
xor
xchg
in
call
jb
xor
out
mov
mov
ret
and
fwait
aas
int
add
push
jg,pt
nop
xor
sbb
dec
xor
fadds
mov
add
bound
xchg
sub
mov
and
cmp
lods
rcrb
sbb
add
push
push
adc
popf
rorl
call
cmp
push
fcmovne
gs
xor
inc
mov
and
call
ss
mov
clc
push
push
sbb
clc
imul
adc
cmp
sbb
in
lods
cmp
mov
bound
jns
xorb
xor
imul
mov
or
rclb
adc
into
call
and
and
fisubrs
push
repnz
or
ret
loope
lock
aam
fcom
and
mov
out
icebp
clc
jmp
aas
pop
cmp
mov
std
push
jmp
or
roll
data16
or
int3
movq
sti
cmp
pop
ficoms
push
fs
jnp
adc
dec
loop
cli
adc
and
push
stos
scas
incb
fdivrl
repnz
bound
js
movsl
pop
inc
gs
test
data16
cmc
ja
push
in
nop
cmc
push
xor
sub
movsb
mov
cltd
outsl
xchg
mov
or
out
jns
mov
push
pop
xchg
inc
sub
insb
sbb
sub
xor
cmp
divb
cltd
cmp
out
loopne
pop
in
jnp
test
int
mov
pop
lods
pop
aam
sarl
cmp
sahf
mov
sti
push
pop
or
pop
xchg
mov
mov
jmp
dec
cli
xchg
xor
aaa
rolb
bound
loopne
jl
shrl
xchg
test
popf
xchg
or
fnsave
sub
jg
xchg
sub
std
push
add
icebp
repnz
fwait
pop
mov
or
dec
dec
je
stc
pop
testl
cmp
xor
sub
adc
aad
lods
xchg
or
add
clc
cmp
or
mov
sbb
stos
pop
pushf
cwtl
push
repnz
fwait
sub
fistl
add
jno
sbb
test
mov
mov
loopne
outsb
nop
xchg
or
fwait
xor
sub
sub
pop
scas
push
push
cmp
sbb
and
sub
gs
dec
and
loope
bound
add
outsl
inc
jns
cs
mov
inc
jne
fsubl
mov
jmp
outsb
dec
push
andl
adc
or
or
int
mov
jno
enter
sbb
aas
mov
push
xor
lock
test
push
mov
jmp
pop
and
cmp
pop
inc
bound
cmp
push
hlt
adcl
mov
aam
mov
movsb
dec
es
dec
sub
mov
gs
and
adc
rcr
sahf
lods
incb
enter
aam
stc
inc
xchg
lods
ror
stos
pop
adc
call
sbb
jle
jl
xlat
mov
ficoms
test
mov
push
call
cld
xor
fdivr
mulb
fs
js
or
sub
push
mov
cmp
sahf
mov
mov
mov
mov
fldt
scas
mov
and
push
in
js
std
xor
daa
ss
sbb
fldl
fidivrs
pop
mov
and
jmp
push
in
les
in
lret
fistps
xchg
bound
sbb
jno
pop
popa
out
push
lret
push
pop
xchg
jg
test
add
jp
pop
stos
or
xchg
bound
add
std
cwtl
sbb
jbe
arpl
out
loope
push
cltd
icebp
test
inc
adcb
insb
imul
xor
cwtl
jp
bound
jne
insl
gs
jecxz
sbb
jecxz
dec
lods
xchg
adc
xchg
jge
lea
jne
test
or
outsl
jnp
push
push
fisttpll
lret
mov
fildll
pushf
jmp
ficomps
loopne
rcr
adc
inc
adc
shrl
pop
icebp
js
mov
je
mov
cmp
loope
popa
push
pop
addl
jno
inc
aam
jge
lods
jl
sub
test
int
pop
push
into
rcll
xorl
cmp
jo
push
cmpsb
and
aam
les
jecxz
inc
stos
mov
addr16
leave
cltd
aam
xor
adc
sub
pop
mov
cmp
aam
lock
ljmp
pop
shll
push
inc
mov
inc
in
cmpsb
jo
rorb
in
adc
fcoml
xchg
bound
mov
push
adc
lds
icebp
cld
pop
out
repz
data16
adc
aas
movnti
inc
js
jne
out
movsb
icebp
xchg
xchg
lret
xchg
lcall
mull
xor
lods
loop
in
ficompl
out
ss
mov
sub
popf
pop
test
sub
lret
call
xchg
aas
add
clc
inc
loop
in
sub
outsb
or
shrl
cmp
sbb
pop
sub
lahf
in
repz
push
lds
ja
lret
mov
test
dec
pop
or
loop
cld
dec
jecxz
mov
aam
push
push
add
jecxz
je
filds
dec
push
jle
or
push
mov
fidivrs
push
sbb
jae
outsl
aaa
fcomi
sub
shr
sub
pop
mov
lcall
pop
jecxz
mov
fwait
aaa
mov
cmp
jb
jo
aam
fcoms
cmp
addr16
nop
fiadds
mov
xlat
repz
test
push
popf
mov
orl
mov
dec
and
xchg
fldl
cmp
pushf
inc
out
ret
inc
cltd
xor
adc
mov
mov
addr16
flds
fsubr
ja
ja
ljmp
mov
cli
jg
mov
add
das
fdivrs
inc
adc
cmpl
push
decb
xor
sbb
mov
cmp
add
fildll
xor
stos
in
lods
es
or
push
cmp
jo
idiv
lds
pop
outsw
lea
call
mov
popa
or
adc
and
add
push
lods
sub
xlat
ret
cmp
inc
popf
mov
push
add
inc
jo
fimuls
cmp
call
sbb
in
mov
mov
add
xchg
gs
xchg
je
popa
sbb
xor
pop
outsl
jmp
or
mov
loop
sbb
adc
andl
cmp
minps
dec
repz
jl
lods
inc
push
mov
pop
add
das
sahf
push
sub
push
repnz
mov
fwait
sbb
cmp
bound
add
add
push
add
add
mov
add
add
fadds
add
add
add
add
dec
fadds
add
add
add
add
dec
test
add
add
add
add
add
add
add
add
sbb
add
add
add
add
stos
stos
add
pushl
mov
incl
add
add
push
jo
gs
add
add
add
add
add
inc
add
add
add
add
xlat
je
add
add
outsl
add
add
filds
add
add
add
add
arpl
and
dec
xchg
je
fs
inc
movb
mov
sti
jecxz
sbb
inc
enter
mov
adc
lea
adc
mov
ljmp
clc
test
or
or
mov
test
inc
adc
cld
clc
adc
pop
insb
pop
nop
adc
add
push
incl
mov
rolb
incl
add
adcl
push
push
adc
push
push
push
lcall
cmp
mov
dec
push
adc
add
cld
mov
enter
add
outsl
inc
add
jne
lret
roll
lret
mov
clc
and
cmp
add
add
add
lahf
add
mov
add
add
inc
add
add
add
insl
imul
xchg
outsl
dec
xchg
gs
jo
insb
add
arpl
outsb
gs
push
jns
in
add
dec
push
add
inc
gs
fildll
mull
add
inc
insb
outsl
push
outsl
jb
dec
outsb
imul
add
add
add
add
aas
add
pop
add
scas
add
cmpsl
add
pop
add
aaa
add
movsl
adc
fiaddl
mov
push
repz
ds
inc
or
sbb
jb
test
jp
adc
jae
xchg
mov
jp
out
adc
adc
lea
js
xchg
pusha
ljmp
repnz
hlt
cvttps2pi
pop
in
outsl
jb
sub
pop
pop
push
outsl
loopne
pusha
aaa
dec
shrl
sbb
cltd
sbb
xchg
sub
xchg
mull
fistl
sbb
lcall
xchg
cmp
punpcklbw
popf
cmc
push
lcall
mov
xorb
shl
jmp
ficompl
or
fcomp
in
mov
daa
lods
mov
pop
lcall
orb
and
scas
jbe
daa
shlb
xor
inc
inc
adc
aad
or
sbb
incl
mov
dec
test
push
fistpll
jb
cmp
push
add
mov
jmp
mov
inc
rclb
leave
adc
xor
xor
jbe
sub
sbb
test
loope
mov
jbe
fwait
js
enter
or
insl
lods
mov
out
and
push
mov
push
push
pop
lea
daa
fsubr
xchg
test
mov
push
jae
rol
xlat
adc
adc
repnz
lock
repz
xor
jns
arpl
xor
mov
or
out
push
repz
mov
mov
fdivrl
adc
out
mov
adc
mov
dec
ret
or
ret
in
rorl
fisubrl
sub
aas
rcrb
pcmpeqw
dec
fmull
je
cmp
mov
bound
sub
push
jle
xor
cltd
add
sbb
sbb
dec
push
and
shlb
icebp
loope
xor
jl
aaa
sahf
std
cli
loopne
push
sub
cmp
add
cmpsb
daa
bound
les
inc
inc
inc
mov
dec
sbbb
xorb
dec
dec
mov
mov
sti
les
inc
push
cmc
mov
sahf
xchg
test
mov
and
dec
fimuls
in
push
int
sbb
sub
in
pop
lret
push
jne
pop
ret
push
and
mov
and
cmpsl
or
jle
mov
roll
mov
mov
loop
sbb
pop
subb
mov
jmp
aam
push
sarb
add
daa
dec
add
jo
icebp
stos
stos
ret
rcll
push
lret
daa
and
insb
inc
popa
dec
sub
fucomip
dec
repnz
in
into
dec
mov
sub
lcall
push
adc
jb,pn
pusha
adc
cmp
push
jnp
les
sbb
and
les
pop
dec
pushf
xor
add
test
rcll
aaa
popa
gs
xor
mov
pop
loopne
mov
inc
sbb
fbld
jne
jl
test
xchg
test
aas
push
ds
and
rcrb
lds
sub
jle
test
jecxz
into
xchg
inc
mov
cmpsl
sub
jg
or
aad
sub
in
cmp
popa
xchg
dec
stc
ret
jne
and
inc
mov
sub
out
xchg
repz
sub
jl
insl
cmpb
push
das
pushf
sti
imul
xor
sub
xchg
int
xorl
mov
jnp
movsb
out
jg
rcrb
out
jg
stos
rol
dec
mov
mov
fnstcw
xchg
cld
repz
movsb
test
sbb
cli
xlat
testb
test
jno
jo
lret
cmp
push
push
out
nop
mov
out
cmp
jae
adc
xchg
and
sbb
lret
add
add
or
mov
sarl
cs
inc
fwait
pop
jns
scas
xchg
leave
xor
in
inc
pop
sbb
movsb
mov
lds
ret
and
or
es
sbb
mov
pop
jo
cld
paddusw
push
mov
jne
add
xor
pop
sti
jns
mov
jnp
jecxz
adc
ret
adc
cmpsb
lods
fldt
aad
mov
enter
fisubs
outsb
inc
loope
movb
int3
sahf
inc
mov
cltd
fdivs
inc
pop
punpckhdq
test
mov
sbb
fcomp
leave
or
addr16
fstp
mov
lahf
jbe
mov
repnz
shlb
das
push
cltd
test
sbb
and
lds
mov
test
sbb
inc
sahf
mov
stos
insl
rcr
scas
mov
xorl
and
lds
jge
lods
fdivrl
inc
push
sub
jl
cmp
fisubs
mov
mov
cld
data16
cmpsl
cwtl
fs
inc
and
add
sarb
fstl
cld
sub
out
idivb
popf
notl
sbb
mov
jns
xchg
pop
push
push
inc
inc
rep
push
shll
scas
xchg
sub
mov
sub
inc
lock
mov
mov
jl
jge
leave
rcll
pusha
out
cltd
sub
pushf
ljmp
add
lcall
push
xor
sbb
cmc
push
outsl
sub
xchg
push
leave
clts
mov
loope
notb
sub
push
data16
mov
scas
xor
pop
inc
ss
mov
pop
incl
sbb
ljmp
loopne
inc
ljmp
xchg
push
push
push
add
mov
aam
in
in
xor
xchg
mov
mov
loopne
sahf
lds
out
xchg
push
imul
aam
mov
push
in
popf
scas
shl
xorl
or
daa
mov
pop
adc
ffreep
pop
cmp
cmp
jge
cs
test
jecxz
xchg
mov
add
std
into
xchg
ret
pop
pop
shlb
in
lahf
mov
pop
xchg
xchg
stos
jne
stc
into
adc
aaa
xchg
mov
add
jmp
mov
mov
pop
out
jo
mov
mov
pop
jmp
cmp
fbstp
aam
sbb
lahf
out
sarl
addr16
int3
imul
jnp
cmc
mov
xchg
lea
out
inc
push
negb
in
mov
movsl
aaa
scas
adc
push
sub
push
je
flds
ja
inc
push
gs
mov
lahf
mov
mov
or
jb
rcrb
imul
dec
jge
fadd
push
loope
push
sbb
lds
gs
fcmovne
outsb
cld
fidivrl
nop
or
xor
fidivs
jg
ret
add
es
lcall
mov
fwait
stos
jl
lret
add
data16
rcll
aaa
fidivl
stos
xchg
fs
pop
mov
test
or
aaa
in
and
xlat
inc
xor
sbb
scas
xor
insb
and
xchg
out
push
adc
and
jno
adc
imul
aas
mov
xor
rol
sbb
sbb
adc
pop
mov
int
clc
fcoms
push
add
sbb
lcall
test
testb
cmp
xor
sbb
xchg
adc
movl
scas
xorps
ret
out
in
mov
dec
sbb
out
aam
ljmp
mov
cmpb
jl
jg
mov
add
or
mov
test
ja
xchg
fcmove
mov
std
lret
add
mov
push
jb
pop
shl
or
cmp
pop
je
outsl
xor
insb
cltd
sahf
and
aam
push
clc
repnz
test
or
add
fcomip
lcall
add
test
out
dec
enter
icebp
mov
cmp
add
icebp
clc
leave
ret
xor
mov
test
xchg
pop
sbb
pusha
mov
insb
call
mov
dec
negb
in
mov
iret
sbb
loope
ja
mov
xchg
or
pop
mov
pop
mov
repz
out
xchg
jns
or
or
xchg
hlt
cs
pop
daa
jle
cli
in
mov
sub
jne
sub
sub
push
jecxz
insl
xchg
aad
and
push
dec
or
insb
outsl
cmp
icebp
popa
sub
inc
jbe
movsl
and
mov
sub
or
push
push
popf
and
repnz
or
les
fnstenv
sub
shlb
dec
dec
jl
mov
fcompl
inc
sub
pop
sbb
jo
add
aad
ret
jge
mov
mov
pop
das
negb
inc
lcall
stc
dec
adc
outsl
xor
adc
mov
sbb
mov
mov
lock
add
std
aam
push
cmc
push
outsb
sub
insl
outsb
sarl
or
xlat
fs
out
jmp
sub
jle
loop
lea
popf
sbb
idivl
outsl
push
stc
data16
add
rorb
adcb
adc
add
mov
dec
div
jmp
cmpsl
aad
idiv
insl
xchg
mov
push
arpl
sahf
xchg
jg
aaa
cwtl
int
xchg
js
push
into
jb
sub
aas
sub
test
mov
lods
les
insb
or
lahf
stos
push
mov
and
mov
sbb
push
inc
ja
jne
fildl
ret
fwait
jno
int3
mov
mov
mov
or
fcomi
or
dec
sahf
fs
jmp
add
scas
std
js
xchg
fldcw
fcmovnb
push
outsl
add
cmc
in
and
outsb
ret
pop
lods
xchg
and
icebp
push
idivb
inc
mov
in
jle
out
mov
imul
in
adc
fcompl
mov
jmp
insb
cmpsb
jae
cmpl
mov
dec
fmul
push
or
sub
mov
out
add
pop
fistpll
jmp
xchg
cmpsl
mov
mov
fcmovnb
push
sbb
and
fidivrs
out
arpl
fwait
aas
mov
cs
mov
xchg
repz
rclb
xchg
cmp
in
aad
data16
cwtl
dec
js
pop
insb
push
cmp
push
out
jmp
adc
pushf
push
lock
andb
std
adc
or
cmp
test
fisttpll
adc
insb
push
jo
push
test
lds
pushf
movhps
cltd
mov
adc
ljmp
scas
and
notb
sti
add
mov
insl
and
out
xchg
addb
fs
rorb
popf
stos
sti
cld
movsl
outsb
fs
repz
jmp
js
and
mov
scas
push
ret
mov
addl
mov
or
lods
movl
ficoms
outsl
nop
inc
cltd
stc
sbb
dec
or
enter
ja
pusha
in
test
addr16
xor
pop
es
jnp
dec
sub
out
adc
or
lea
jl
inc
lods
lods
push
fcomp
and
loop
push
adc
xorl
mov
push
ss
shlb
push
sub
lock
pop
sub
aad
insb
mov
and
adc
adc
ret
ret
arpl
adc
notb
sub
icebp
icebp
arpl
int3
mov
inc
or
push
movsl
sbb
aaa
stos
js
jne
pop
bound
mov
sbb
jecxz
and
jge
dec
mov
pop
pop
stos
out
aas
leave
mov
lea
push
adc
fnstcw
pushf
or
ret
sbb
scas
xor
cmp
fisubl
pusha
inc
ljmp
cmpsl
adc
lock
mov
pushf
sbb
dec
sbb
shlb
push
xchg
adc
repz
mov
sub
stos
sub
mov
ja
js
sub
add
negb
lea
sahf
mov
shl
enter
stos
ljmp
cmpsb
push
bound
cwtl
xchg
shll
rcr
sub
pop
fsubrs
or
xchg
flds
mov
out
jp
aaa
xlat
in
popf
ret
loop
cwtl
jno
je
inc
and
inc
and
jl
mov
cmpl
sti
jl
cli
sub
pop
adc
aaa
pop
lock
sub
cmc
jno
add
adc
lret
rcrb
data16
push
lds
sbb
push
call
test
dec
jl
adc
out
nop
dec
mov
cld
aam
cmp
push
pop
jbe
test
mov
incl
xchg
push
sub
dec
push
xor
mov
mov
push
pusha
dec
mov
push
ss
add
mov
sbb
push
rcrb
cli
mov
sub
int3
dec
mov
pop
inc
insl
lret
test
sbb
cmovb
mov
leave
into
test
in
and
or
sub
xchg
insl
xchg
add
test
adc
cli
and
cltd
add
flds
push
int3
xchg
pop
xchg
fimuls
hlt
imul
sub
dec
fcomps
lahf
mov
int3
mov
dec
adc
jbe
mov
mov
repnz
adc
sub
pop
mov
dec
lret
sub
fwait
jge
jb
ljmp
sti
push
insb
daa
adcl
test
pop
mov
add
out
jo
pop
or
cmp
andb
sub
notl
dec
outsb
dec
jg
dec
pop
test
int
or
sti
cmp
fwait
out
outsl
xlat
mov
in
lods
push
fmul
or
mov
or
push
xchg
mov
inc
mov
fs
sub
in
jno
adc
push
pop
insl
lock
add
daa
adc
in
xchg
fimull
divl
in
mov
or
inc
rol
pop
int
scas
inc
aas
dec
cltd
cmpsb
aad
outsl
add
or
ljmp
enter
hlt
das
enter
iret
push
adc
cld
push
enter
jo
ljmp
pushf
rcll
mov
push
sub
fistps
jp
and
jp
bound
bound
or
cmpsl
cmpsl
scas
sbb
push
xchg
rol
sbb
adc
mov
cmp
test
push
mov
leave
mov
pop
adc
ss
lret
jb
ret
pop
inc
xlat
sub
jne
and
or
cmp
sub
ret
ja
pmullw
xchg
les
push
sub
mov
sub
scas
in
je
clc
in
pop
sub
lahf
and
sub
shrl
mov
jnp
imul
inc
ja
cmc
cwtl
sub
sarb
adc
js
xchg
or
pop
mov
sbbb
mov
js
xor
enter
add
dec
push
jecxz
jno
clc
lds
outsl
jnp
xor
adc
ja
stc
insb
bound
call
mov
inc
push
outsl
inc
pop
and
push
add
stos
mov
or
jbe
pop
int
dec
out
lcall
int
inc
xchg
or
inc
mov
rcr
sbb
fstpt
jae
sbb
int3
add
movsb
jecxz
cmpsl
daa
dec
inc
mov
xsaveopt
xchg
ja
pushf
adc
ljmp
adc
into
arpl
scas
sbb
in
jge
sbb
fimull
mov
stos
sti
test
inc
out
pushf
xor
movsb
lds
aaa
sahf
lods
imul
push
rol
mov
in
cmp
add
dec
ret
lods
out
pop
mov
cmpsl
cwtl
ds
mov
dec
or
push
cmp
test
inc
ficomps
or
xchg
loop
lods
adc
mov
ror
out
sub
mov
arpl
jg
cmp
xchg
aam
add
xchg
push
out
aaa
repnz
loop
das
lods
xor
and
sbb
mov
xchg
jae
outsb
xor
mov
jmp
test
out
loope
sub
js
cmc
ds
inc
pop
mov
pop
cwtl
stos
xor
leavew
pusha
dec
js
jecxz
out
shl
push
push
ljmp
mov
adc
ret
sbb
cwtl
cmp
aaa
xor
ja
mov
jno
xor
ljmp
jbe
push
cmp
loope
test
jmp
sbb
mov
shl
lods
leave
shl
idivb
jb
or
pop
add
flds
pop
loope
mov
in
loope
jge
fisubs
xchg
cwtl
pop
cltd
imul
add
jno
dec
mov
pop
xchg
pop
xorb
ss
fstp
mov
mov
shrb
arpl
xchg
stos
sbb
mov
hlt
mov
push
push
cwtl
sbbb
mov
into
sbb
fdivl
cmc
lahf
or
add
xor
and
mov
mov
mov
loop
cmp
je
sbb
sbb
mov
insl
mov
cmp
cmp
dec
mov
add
push
mov
loope
lret
dec
xor
test
sub
daa
lret
call
dec
cmpsl
push
inc
mov
ret
cmp
sar
sub
sets
lock
insb
fstpl
inc
sbb
cmp
sbb
or
mov
in
mov
jbe
dec
push
ja
lds
popf
xor
movsl
xchg
stos
cmp
insl
loop
inc
push
popf
movsb
push
sbb
xor
cmp
sbb
or
cwtl
xlat
out
dec
dec
inc
push
in
enter
jno
flds
sti
cmp
adc
dec
loopne
into
test
xchg
pop
mov
test
in
lcall
frstor
push
pop
jecxz
imul
sbb
mov
pusha
cmp
cmp
cli
mov
cmpsl
addr16
mov
insl
out
dec
push
mov
cmp
outsb
add
sbb
pop
mov
push
or
iret
rclb
cld
sub
dec
xor
pop
pop
lcall
cmp
test
xchg
push
clc
adc
pop
jnp
mov
sarb
insb
mov
mov
push
mov
push
mov
sti
adc
fiaddl
and
mov
sahf
arpl
pop
mov
nop
lods
mov
inc
cmp
adc
inc
mov
lods
push
mov
and
cmpsb
and
cltd
mov
fnsave
sbb
lods
xchg
cmpsl
daa
push
and
rclb
out
sarb
or
sub
inc
fstps
data16
jecxz
cmp
mov
jns
push
push
aaa
adc
dec
fsubrs
js
push
nop
pop
cs
mov
push
mov
push
int
jne
mov
movsb
test
pop
daa
rol
sbb
pop
rcrb
jg
adc
sub
jb
mov
mov
or
adc
cwtl
add
lahf
in
fs
into
sbb
jns
jge
or
xchg
outsl
mov
or
sbb
sbb
xor
repnz
lahf
push
mov
adc
push
bound
mov
testl
nop
insl
subb
mov
ja
or
lahf
dec
ljmp
xchg
xor
outsl
or
add
mov
lock
jle
mov
adc
xchg
xchg
sub
inc
fidivl
fwait
pop
vmptrst
test
imul
dec
push
out
loop
les
pusha
pop
jg
jns
push
mov
repnz
jle
shl
pop
jae
inc
loop
fdivl
js
and
push
shlb
scas
dec
xorb
or
push
or
clc
jne
and
push
andb
add
and
jne
lret
popf
fisubrl
pop
sbb
lods
cltd
call
push
pop
adc
mov
orb
xor
and
mov
jae
jne
jl,pn
or
dec
cmp
hlt
inc
mov
jecxz
jl
xchg
popa
fwait
mov
jl
jnp
dec
adc
push
in
and
mov
jl
mov
push
mov
or
hlt
lret
pop
and
stos
and
dec
jno
test
pop
mov
pop
cmp
lret
aas
and
rcr
std
sbb
mov
inc
and
out
push
pop
imul
mov
test
orl
push
in
lea
lods
push
cmp
mov
fld
add
push
cmpsb
lcall
xlat
dec
movsl
fs
adc
sub
push
dec
cltd
das
push
mov
xchg
pop
aaa
push
jae
mov
pop
mov
inc
adc
and
mov
test
rcrb
scas
push
cmp
es
jne
jns
or
or
dec
pop
and
and
mov
mov
in
test
sbb
ret
cli
inc
outsb
pop
cld
adc
notl
ljmp
and
sbb
cmp
flds
adcl
xchg
test
or
aad
mov
mov
push
add
add
add
add
daa
add
lahf
add
mov
add
add
inc
add
add
add
add
add
add
add
add
xlat
add
add
add
add
add
add
add
outsl
add
add
add
add
add
add
add
sbb
add
add
add
ja
mov
pushl
push
push
push
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
push
mov
pop
add
mov
mov
cmp
je
cmp
jg
mov
mov
mov
movb
movzbl
sub
inc
test
jne
jmp
mov
movb
call
mov
mov
movzbl
sub
je
incl
jmp
push
pushl
call
push
push
mov
push
push
mov
push
push
push
push
push
pushl
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
sub
outsb
and
add
dec
add
add
add
add
jbe
add
add
add
add
add
add
add
js
in
add
add
add
insb
add
add
push
add
add
je
add
add
add
and
popa
add
jne
outsb
jae
jae
dec
add
push
leave
and
mov
iret
jne
leave
sarl
inc
adc
add
dec
push
mov
incl
add
std
je
call
add
push
test
or
mov
addl
push
push
lea
pop
rclb
jge
and
add
sub
push
daa
mov
decb
test
incl
inc
incb
je
push
loopne
decl
subl
call
jge
push
push
incl
push
add
std
test
lea
mov
and
add
adc
push
clc
ds
inc
add
add
add
add
add
add
add
add
add
add
add
inc
add
inc
imul
jb
mov
popf
add
gs
add
arpl
dec
gs
insb
add
insb
inc
dec
js
push
fs
dec
push
jns
xchg
add
outsb
outsb
add
outsl
gs
mov
outsl
jb
xor
add
add
add
movsb
xchg
add
add
xor
add
add
add
add
push
je
mov
xchg
into
hlt
stos
cmc
xchg
lods
xchg
sbb
pop
shll
cmpsl
sbb
out
out
jge
sbb
push
test
inc
cs
arpl
and
ret
cmpsl
and
ss
sub
jne
loopne
mov
sbb
dec
jle
loope
xchg
mov
push
jl
lock
fsubl
push
jb
dec
std
cmp
cltd
ss
cmc
aam
xchg
test
inc
mov
mov
lret
inc
adc
inc
sbb
xor
xchg
cld
dec
pop
push
sti
xchg
mov
pop
dec
or
mov
bound
xchg
iret
jp
push
and
dec
retw
push
arpl
and
frstor
fistpl
cltd
xchg
xor
std
inc
lods
mov
jl
pop
out
xlat
out
lcall
mov
out
enter
push
mov
inc
mov
loope
dec
push
scas
pop
adc
adc
popf
gs
enter
sbb
inc
pop
out
lods
dec
pop
cli
shrb
aam
shr
xchg
imul
test
xchg
mov
pushf
test
or
mov
lods
cmpsb
mov
pop
mov
push
fs
sbb
insl
push
sbb
sub
push
xchg
fnstenv
in
xor
fs
mov
mov
insl
ljmp
xlat
call
mov
fsubrl
fistpl
mov
enterw
orb
or
push
adc
lds
mov
push
mov
mov
pushf
ja
fistpl
push
jo
pop
pop
pop
pushf
mov
rclb
jle
adc
stos
mov
jno
js
int
xchg
loopne
xchg
or
cmpsb
xchg
sub
or
test
cmpsb
aad
lds
ds
or
mov
enter
js
addb
dec
cmp
jle
push
repnz
mov
je
jns
mov
in
movsl
inc
and
daa
mov
dec
mov
shll
adc
jge
inc
icebp
fs
les
lret
sub
dec
mov
inc
fcmovne
das
sub
out
cwtl
mov
std
and
jo
jecxz
push
rol
adc
sarl
leave
popa
gs
jne
jg
adc
lods
fldcw
pushf
scas
adc
xchg
fdivrl
sbb
aad
incl
lds
shll
jle
push
bound
mov
sbbl
pop
cmp
fcoml
cmp
or
inc
jmp
inc
sbb
xor
pop
lret
es
enter
mov
xor
pop
fsts
out
shl
dec
jb
cmpsb
imul
cmp
lods
xchg
dec
int3
imul
in
test
or
lret
sub
cmp
jbe
sub
add
mov
into
dec
push
repz
push
mov
xor
xor
scas
jmp
mov
xchg
gs
js
das
sub
sbb
loop
pop
or
adc
subb
cmp
shrl
ljmp
jle
std
sub
test
cmp
into
pop
lret
call
into
icebp
add
rcr
lret
inc
sarl
addr16
inc
xor
icebp
jg
dec
dec
mov
cmp
test
fmull
cmp
pushf
imul
mov
add
cs
leave
xor
aad
lret
mov
shll
sbb
inc
xchg
nop
dec
or
and
cmpsl
inc
pop
test
push
aad
imul
cs
pop
int3
pusha
mov
popa
xchg
cmp
adc
out
jo
cmp
gs
subps
cmp
js
push
mov
pusha
cmpsb
mov
hlt
jmp
lret
adc
or
outsb
mov
sub
pop
and
pusha
push
sub
das
out
push
xchg
insl
sub
push
xchg
outsb
clc
jb
test
js
and
mov
aam
dec
sbb
mov
jns
into
test
shlb
pop
xchg
fstpl
iret
adc
xchg
mov
test
jmp
out
mov
inc
dec
in
insb
stc
outsb
sbb
scas
inc
sysret
cmpsl
data16
lods
mul
jb
imul
and
push
pusha
fnsave
cmp
sar
out
insb
jne
popf
lahf
out
addl
xchg
cmpsl
cmp
je
sub
movsl
dec
lret
cmp
in
les
outsl
in
das
sub
or
shlb
pop
ret
cld
out
cmp
mov
sbb
adc
je
in
xchg
or
push
sar
and
mov
outsl
mov
pusha
sbb
cli
and
mov
pop
ret
mov
mov
mov
xor
mov
movsw
jo
stos
test
xchg
jmp
sbb
cltd
pop
jl
push
inc
pop
aad
cmp
pop
sarl
push
push
or
pop
xor
mov
fbstp
fcompl
imul
or
cmp
sub
mov
sub
cmp
int
lahf
andl
xor
mov
xchg
xchg
jle
icebp
lock
or
gs
shl
iret
jb
movsl
dec
mov
nop
mov
fcomps
push
push
add
jl
inc
sbb
ja
int
les
das
xchg
shrl
adc
jns
ljmp
add
pop
add
in
and
pushf
scas
jecxz
jl
add
xchg
push
into
lods
push
pop
jl
adc
and
test
test
nop
dec
shlb
ret
aas
dec
mov
xchg
ror
cmp
adcl
or
mov
std
push
jl
push
mov
push
xchg
rcll
jne
sbb
mull
insb
push
daa
cmp
cmp
pop
or
mov
adc
or
dec
frstor
adcl
cmp
pop
iret
fildl
hlt
in
jbe
ds
cmc
inc
sbb
cld
mov
pushf
lods
dec
mov
int
xor
jno
sub
xor
adc
mov
iret
hlt
xchg
loope
push
mov
sbb
insb
push
adc
or
pushf
les
inc
in
push
mov
pop
gs
jecxz
out
je
int
mov
add
fwait
xlat
mov
sbb
xor
bound
dec
call
icebp
je
stos
add
cmp
sub
jne
imul
inc
adc
icebp
jecxz
outsb
add
xor
sbb
mov
or
mov
enter
fstps
or
imul
jo
cs
xchg
and
nop
mov
out
pop
pop
cmp
or
pop
pusha
into
jb
les
jno
or
aam
jbe
dec
outsl
jl
scas
movsl
mov
push
test
mov
inc
adc
sbb
xchg
mov
cmp
push
xchg
aam
test
fadd
mov
cmp
add
sti
aas
and
ret
push
cmpsl
loope
cld
mov
out
mov
popa
add
sub
sbb
pop
dec
loope
or
fucomip
mov
leave
jge
cli
nop
jnp,pt
jg
arpl
outsl
push
inc
xor
jnp
js
ja
push
int
or
mov
jne
movsb
insl
imul
mov
sub
pop
lea
sub
aas
fists
pop
push
adc
sub
sbb
repnz
and
mov
pop
push
push
fwait
jg,pt
dec
sarb
in
dec
std
add
jne
aaa
push
cmp
sub
stos
mov
stc
xor
lock
pop
out
inc
sbb
inc
repz
jmp
cmp
sbb
test
addr16
inc
or
jmp
outsl
jmp
out
test
mov
or
xchg
cwtl
addb
lock
or
push
stos
in
cmp
inc
mov
push
clc
pop
xchg
es
and
sub
sub
mov
outsl
push
push
add
insl
mov
std
cltd
ret
jb
hlt
push
push
addr16
out
pop
mov
jne
jp
jl
and
inc
lock
and
gs
repz
ja
shll
in
mov
push
sarl
loope
nop
xchg
pushf
xchg
arpl
fs
sub
mov
add
pusha
mov
add
inc
sbb
add
and
inc
pop
mov
mov
jmp
fildll
cld
mov
stos
push
addr16
xlat
pusha
mov
pop
xchg
add
xchg
sbb
rorl
in
aaa
jmp
xor
repz
mov
lret
pusha
dec
insl
insb
pop
popa
out
test
push
cmp
int3
cmp
lret
dec
sub
movsl
and
out
cmp
into
xchg
loop
out
nop
rorl
or
sbb
xchg
adc
mov
mov
data16
jl
inc
fistps
dec
jg
imul
mov
scas
fnclex
jbe
mov
aas
cmp
stos
shrl
or
fistl
movsl
out
mov
sbb
push
xchg
loope
xchg
loopne
push
pop
fwait
inc
push
push
push
je
dec
loop
cmpsl
xchg
dec
jne
fstps
xchg
dec
adc
mov
inc
out
and
loope
leave
cmpsb
sbb
lods
subl
js
inc
adc
insb
popf
jb
ljmp
js
lea
in
mov
xchg
mov
inc
pop
push
xor
lret
lret
imul
mov
add
cli
arpl
sbb
rcll
mov
mov
sub
test
sub
mov
test
push
adc
pop
loop
pop
mov
dec
je
jecxz
mov
imul
jle
cmc
xchg
mov
scas
pop
sbb
ja
adc
mov
es
out
sbb
sbb
in
push
sbb
xchg
mov
jae
xchg
movl
sub
aas
add
jl
push
movsl
pop
stos
dec
jmp
fs
pop
push
cmp
fadd
dec
pop
push
cmp
jbe
sbb
neg
les
fadd
ds
pusha
jae
adc
test
cs
inc
stos
inc
or
dec
in
shlb
outsb
xor
push
das
neg
dec
std
pop
leave
in
jno
adc
adc
pusha
das
std
into
scas
pop
mov
adc
push
pop
test
push
movaps
mov
int3
mov
inc
pop
and
mov
cmp
xor
popf
call
in
xor
inc
adc
loopne
orl
mov
mov
adc
sbb
push
das
push
sbb
stos
inc
jmp
mov
and
test
sbb
repz
test
cmp
mov
mov
mov
pop
xchg
cs
sarb
ds
repnz
outsb
nop
mov
sbb
jl
out
sub
sub
push
push
lods
pop
testb
xchg
dec
sbb
mov
rorb
cmp
stos
clc
ja
inc
or
orb
adc
lods
inc
lret
mov
fnstsw
jns
outsl
pop
in
lcall
leave
or
jg
test
std
leave
and
add
es
adc
mov
adc
out
push
sbb
push
imul
inc
pop
das
mov
sbbb
and
lret
lret
sbb
sub
cmp
inc
jge
xchg
mov
sbb
inc
sbb
popa
inc
jge
xor
dec
das
push
jg
out
push
cmp
mov
dec
push
sub
das
adc
xchg
scas
mov
sti
jmp
test
or
sbb
cld
mov
movsl
iret
pushf
ja
pop
lods
or
gs
push
mov
test
mov
fwait
or
movsb
lret
pop
dec
js
mov
sub
jns
aam
cmpsl
mov
xchg
ret
fs
jmp
and
sbb
adc
mov
mov
dec
cmp
pop
pop
repz
sbb
mov
xchg
mov
in
xchg
loope
push
sbb
out
pop
std
mov
std
push
scas
xchg
xchg
xor
cli
cltd
inc
push
inc
cmpsl
into
sbb
idivb
sbb
daa
test
add
cmpl
mov
pop
sub
jbe
cmp
push
je
fs
fldenv
push
mov
sub
xchg
xor
xor
shlb
xchg
and
push
pop
in
int3
push
xorb
and
lods
push
dec
mov
filds
dec
pop
jl
cmova
jl
shl
xlat
hlt
inc
jo
mov
dec
mov
mov
xor
sbb
jge
pop
pop
fcoml
in
dec
out
jg
mov
mov
push
in
aas
hlt
mov
fsubr
inc
xchg
sbb
or
divl
loop
jbe
adc
jge
dec
lods
or
dec
push
out
pop
mov
scas
sub
xchg
mov
add
xchg
shrb
je
mov
jne
int
lcall
jp
sbb
sbb
dec
outsb
mov
xor
cmp
jns
cmp
jnp
push
int
xchg
cltd
jb
cmp
scas
leave
fbld
cmp
repz
ljmp
lock
ret
push
scas
js
int3
or
cwtl
dec
arpl
fisubrs
cmp
sbb
mov
dec
dec
jne
in
test
mov
dec
faddp
repz
mov
outsb
das
setnp
push
pop
sbb
les
adc
faddl
cwtl
jp
jl
jnp
pop
jae
xchg
stos
lret
cs
dec
fsubl
xor
dec
cmpsl
fsubrl
sbb
jnp
adc
inc
insl
inc
mov
mov
sahf
sbb
insl
test
jecxz
pop
loope
push
test
sbb
jbe
xor
ret
jl
out
outsb
fistps
adc
or
fcomps
ficoms
aaa
insl
lahf
ja
icebp
dec
adc
pop
mov
and
or
mov
jae
pop
mov
fdivs
pop
push
shlb
movsb
lcall
push
fwait
jbe
mov
dec
lods
loope
cmp
lods
adc
fistps
lahf
pop
call
in
and
test
leave
cmpb
mov
jb
int
lods
sub
dec
mov
mov
inc
jmp
test
sti
mov
shll
testb
jnp
fwait
push
sub
push
insb
jmp
xor
std
outsb
inc
push
daa
les
addr16
cmp
or
dec
ret
sbb
outsl
inc
xor
scas
inc
mov
push
sub
cltd
jno
push
lds
aaa
sub
pop
xchg
lret
xchg
pusha
cwtl
dec
cmpsl
sub
xlat
sbb
jge
das
jne
add
pop
or
repz
cmp
bound
xchg
push
cltd
jl
adc
imul
imul
cmpsb
xor
data16
sbb
cmp
jbe
dec
mov
lods
stc
xchg
sti
mov
xlat
jns
mov
dec
sarb
adc
ret
add
fsts
push
adc
mov
fstpl
mov
xor
cmpsl
shll
pop
sbb
mov
stc
scas
call
push
add
jle
and
or
rol
cli
mov
and
daa
gs
out
repnz
addr16
dec
mov
xchg
test
es
aam
stos
adc
pushf
push
std
pop
inc
push
mov
or
xor
lcall
cmp
and
shlb
mov
in
mov
inc
push
mov
ret
mov
cmp
stos
push
arpl
inc
stos
xchg
jbe
shll
adc
gs
leave
enter
and
ljmp
outsl
test
test
add
lcall
and
pop
imul
jg
mov
lock
sub
nop
subb
fistl
testb
pop
je
fcoms
js
inc
aas
fnsave
repnz
movsl
int3
in
lret
lds
jno
sub
scas
cmpsl
sub
fisubs
fidivl
jle
pusha
mov
mov
mov
jns
fiadds
sarb
inc
clc
outsl
das
mov
inc
mov
inc
es
mov
outsb
or
negb
xor
or
cld
mov
or
mov
fsts
push
sbb
xchg
cmp
add
dec
xchg
push
scas
or
sbb
pop
push
mov
ret
dec
in
clc
jbe
jns
jbe
fisttps
adc
mov
mov
or
movsl
arpl
inc
push
arpl
shll
pop
out
iret
in
xchg
mov
jne
mov
aas
ljmp
test
fs
lods
sahf
fnsave
mov
sbb
push
mov
xchg
and
jae
repnz
mov
mov
lods
cmp
cmp
sub
cmp
dec
das
sub
sub
add
shrl
pop
fisubl
dec
shll
loopne
out
call
scas
nop
mov
leave
int3
cltd
mov
mulb
and
sub
jo
flds
cs
cld
jne
dec
ss
push
jle
ds
mov
pop
pop
mov
mov
in
sub
mov
std
add
pop
andl
mov
in
scas
test
dec
add
sti
mov
cmp
pop
fbstp
sbb
jmp
in
adc
jo
loope
outsl
mov
out
mov
test
rcrb
dec
imul
mov
pop
pop
inc
lahf
xchg
xor
adc
jl
lahf
mov
sbb
xor
or
jnp
cmp
shrb
pop
popa
divl
sub
pop
pusha
and
lds
cmp
xchg
stos
xlat
mov
push
sti
iret
dec
xchg
stos
arpl
sahf
lods
fisubrl
js
or
jg
dec
fcoms
rolb
dec
shll
stos
stc
xchg
pop
adc
jmp
ret
sub
mov
daa
sbb
repz
sarb
xor
iret
push
inc
mov
lods
les
pop
mov
outsb
subb
push
stos
inc
stos
sbb
xlat
cmp
pop
mulb
mov
push
fnsave
push
dec
jbe
xor
sar
pop
jge
imul
mov
movsl
inc
data16
push
hlt
sbb
fucomp
scas
notl
mov
mov
dec
fstpl
mov
sbb
jge
cmc
jmp
movsl
sbb
pop
jmp
push
ja
jg
cmp
popf
pop
or
xor
pop
jo
or
jno
mov
movsb
call
cld
mov
lcall
jg
lret
cltd
mov
sbb
pop
fstp
fwait
pop
jne
inc
xchg
sbb
mov
pmulhuw
mov
rclb
popf
loope
out
outsb
and
push
testl
add
aas
and
addr16
jmp
pop
xchg
mov
dec
subb
sub
cmpb
sub
cmp
mov
push
xchg
loop
mov
fwait
int
xchg
call
push
jl
jne
cmp
mov
xor
xchg
lret
mov
inc
xor
mov
int3
cmp
ljmp
shl
fwait
or
sub
adc
sbb
rcll
movsl
repz
sbb
cmpsw
cmp
mov
inc
sbb
sti
rorl
and
les
cmp
jb
mov
push
and
mov
sbb
or
push
jo
and
push
mov
and
jl
mov
out
repz
movsb
push
sbb
cli
mov
shlb
enter
or
dec
adc
mov
outsb
add
add
loope
mov
cmpsb
push
xor
mov
sub
add
fs
out
iret
jb
dec
enter
fistps
je
repnz
out
xchg
pop
jmp
xchg
inc
sub
pop
aas
push
cmp
gs
xchg
fidivrl
lcall
insb
mov
iret
aas
lea
loope
inc
icebp
or
test
sarb
push
push
nop
mov
jbe
call
aaa
push
into
fnstsw
sub
adc
sbbl
xor
insb
lock
test
mov
lods
and
xor
je
push
xor
stos
cmp
dec
add
ret
iret
xchg
jne
mov
pop
int
ret
pop
xchg
mov
out
or
outsb
rolb
popf
adc
hlt
add
pop
sub
xor
mov
sbb
ljmp
aaa
cmp
loope
push
int3
and
jb
xor
sbb
lods
xor
imul
in
loope
push
mov
jp
stos
stos
cmp
imul
fists
inc
and
lods
loope
cwtl
sbb
mov
xchg
std
adc
jmp
sub
adc
push
mov
xchg
cmpsl
pop
mov
rolb
and
push
lcall
mov
cmp
push
sub
imul
push
movsb
cmp
push
pop
int
add
ret
mov
sbb
int3
push
dec
je
pop
imul
ret
adc
pop
imul
insl
mov
dec
jge
data16
ljmp
lods
mov
cli
fsubrs
sti
shrb
dec
dec
bound
clc
popf
ror
jmp
loopne
xchg
out
fldl
push
push
push
es
sub
dec
or
bound
dec
pop
cmp
nop
dec
popf
add
mov
mov
jo
call
mov
pusha
sbb
sahf
aad
lahf
pop
inc
add
pop
cmp
cmp
fimuls
fs
cld
loopne
lods
into
fisubrs
aaa
inc
sub
stc
add
and
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
stos
stos
les
ja
mov
jo
jo
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
in
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
in
add
fsubr
add
aam
add
int3
in
add
in
add
mov
in
add
lods
in
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
out
add
dec
out
add
push
out
add
pop
out
add
fs
add
insb
out
add
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
out
add
mov
out
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
lock
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
lock
mov
lock
lods
lock
movsb
lock
pushf
lock
xchg
lock
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
lock
cld
lock
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
shl
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
repnz
dec
repnz
push
repnz
repnz
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
xor
add
repnz
lods
repnz
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
