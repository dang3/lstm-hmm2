add
add
jne
dec
add
add
insb
add
add
je
add
add
jb
popa
add
add
outsb
add
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
popa
add
add
outsb
add
add
je
imul
push
add
je
insb
add
add
dec
add
je
push
add
popa
add
imul
add
add
add
jne
je
je
outsl
add
inc
add
add
jb
outsb
add
je
add
popa
add
add
add
outsb
add
outsl
add
imul
outsl
add
add
add
dec
add
data16
push
add
js
je
add
add
inc
add
je
je
outsl
add
dec
add
add
je
add
inc
add
je
je
outsl
add
inc
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
dec
add
insb
add
add
je
add
dec
add
popa
add
je
imul
push
add
je
insb
add
push
add
js
je
add
inc
add
je
je
outsl
add
push
add
js
je
add
add
inc
add
popa
add
push
add
js
je
add
add
inc
add
je
je
outsl
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
inc
add
arpl
add
add
add
imul
add
je
push
add
js
je
add
dec
add
insb
add
add
je
add
inc
add
jo
push
add
jb
imul
add
popa
add
add
add
add
outsb
add
arpl
jge
jmp
es
bound
loope
add
add
add
add
add
add
jge
incb
push
add
aas
add
add
add
add
add
add
add
xor
popl
aas
add
add
add
push
add
add
sbb
sbb
sbb
sbb
adc
movsb
push
sub
cwtl
add
add
push
add
or
mov
cmp
and
push
add
add
add
add
mov
add
jecxz
sub
push
add
xchg
add
add
incb
push
add
sub
addl
cmp
jne
xor
es
add
add
testl
cmp
add
add
add
add
cmp
dec
add
push
add
inc
add
add
add
add
add
push
add
xchg
add
add
add
add
add
dec
add
add
xor
ss
add
add
fisttps
movb
add
stos
add
add
add
add
cmp
add
add
movb
add
incb
add
cmp
cmpsb
add
add
cmp
sbb
and
stos
add
add
sbb
aas
add
add
movsb
push
sbb
js
push
add
js
enter
daa
add
dec
add
pop
push
add
add
int
jl
cmp
push
add
add
cmp
loop
lea
lldt
add
add
add
add
add
add
add
mov
sub
xchg
addl
jl
cmp
cmp
sbb
adc
add
outsb
add
add
add
movsb
push
add
add
add
add
add
add
add
cmp
push
add
add
push
insl
add
add
add
jl
xor
cmp
adc
add
pusha
add
nop
add
add
add
add
outsb
add
jge
inc
add
add
dec
add
add
add
add
add
add
xor
je
inc
add
add
popl
movsl
add
add
insl
add
add
mov
add
and
cmp
lods
add
add
jl
add
cmp
xchg
lldt
add
sub
lea
sub
jl
cmp
cmp
stos
add
fiaddl
loop
lcall
add
add
jle
popl
and
add
add
pop
jl
or
insb
add
push
add
pop
inc
add
add
lldt
add
add
add
insl
add
add
add
add
cmp
add
add
add
jo
popl
sub
adc
and
push
add
add
pop
add
pop
jmp
mov
and
add
push
add
add
add
add
add
push
add
add
pop
add
add
add
and
push
add
add
inc
add
add
add
add
add
add
add
cwtl
add
lcall
add
mov
int
jl
cmp
popa
add
add
cmp
dec
add
add
add
add
add
cwtl
add
add
add
cmp
add
xor
mov
outsb
add
push
add
lea
outsb
add
add
inc
add
add
cmp
add
js
adc
push
add
add
jge
js
sub
test
add
add
movsb
add
add
incb
popa
add
js
pushf
add
add
fildl
sub
or
fiaddl
outsb
add
add
and
or
inc
add
adc
sbb
push
add
add
push
add
add
add
sub
inc
add
add
sldt
add
add
add
mov
out
cmp
add
inc
or
pop
out
add
mov
mov
btc
ljmp
add
cmp
inc
mov
inc
test
xlat
test
mov
mov
sti
rcl
xchg
xor
mov
ficompl
lock
pop
and
cmp
addr16
icebp
sbb
adc
or
add
mov
pop
pop
mov
cwtl
pop
add
pop
pmullw
cs
idivl
pop
mov
ror
push
sbb
aad
sar
ret
push
and
jno
dec
sahf
sbb
aaa
out
and
iret
outsb
sti
fwait
sbb
aam
cld
jp
cmp
sbb
movsb
lret
xlat
xchg
jmp
nop
lea
xchg
mov
xchg
inc
sbb
clc
sub
loope
xchg
das
test
idivb
jmp
iret
fs
adc
shlb
jb
mov
in
cmc
out
aas
lahf
or
inc
lds
cmp
adcl
idivb
jnp,pt
scas
movsb
mov
and
or
mov
jne
inc
jge
gs
fmul
cmc
mov
pusha
inc
sahf
adc
add
add
and
inc
mov
sbb
or
repnz
pop
adc
mov
dec
sti
outsl
imul
loopne
push
inc
lods
int
lcall
xor
addb
shlb
decl
aaa
hlt
xor
out
lds
icebp
std
decb
out
xlat
or
jl
mov
jmp
push
lret
ja
icebp
test
in
idivl
sub
loope
xchg
aad
fimull
ja
inc
std
pop
mov
data16
sbb
cmp
test
pop
stos
hlt
fucomi
lock
xchg
mov
in
adc
push
in
xchg
mov
insb
cmpl
cs
push
addr16
mov
lret
or
into
jp
pop
xchg
fisttps
cs
and
hlt
insl
ret
mov
xlat
push
push
dec
out
out
out
jno
int3
mov
insl
clc
push
fcomp
and
cwtl
push
xchg
xchg
into
fsubr
mov
adc
or
jg
lods
dec
sbb
pop
push
add
jmp
mov
out
mov
insl
repnz
dec
shlb
cld
imul
push
adc
cltd
ret
pushf
adc
dec
mov
je
fs
shll
stos
out
mov
repnz
mov
xchg
enter
jge
icebp
mov
mov
mov
ror
ret
mov
out
mov
icebp
andl
std
xchg
xchg
mov
in
loope
dec
push
xchg
mov
add
add
add
add
rolb
add
add
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
push
mov
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
push
call
mov
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
pushl
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
and
xor
add
adc
bound
jl
out
in
push
dec
xorb
loop
repnz
and
and
xor
outsb
repnz
bound
push
mov
jae
bound
xor
and
repnz
xchg
adc
push
xchg
popa
ljmp
pop
xchg
push
mov
sahf
jle
add
jb
cwtl
mov
cmpsl
in
cmpl
int
out
ror
rolb
xor
iret
cmp
sub
mov
sbb
mov
add
add
stos
fbstp
dec
dec
imul
xchg
je
popf
repnz
mov
or
pop
xlat
out
mov
xchg
jb
mov
scas
mov
push
mov
out
add
loop
inc
shlb
fstl
aas
cmp
sahf
sbb
insl
leave
jecxz
mov
orb
adc
pop
faddp
fisttpll
in
ljmp
sub
inc
or
popfw
outsl
add
fnstsw
fs
adc
xchg
hlt
mov
hlt
jb
bound
xor
fs
rolb
jbe
push
or
xlat
push
mov
and
adc
inc
mov
outsl
mov
jae
or
pop
mov
pop
mov
aaa
loopne
adcb
xchg
stos
push
xchg
jbe
xchg
pop
xchg
arpl
jb
inc
mov
mov
xorb
loop
repnz
xor
and
shlb
ret
adc
bound
push
mov
xorb
loop
repnz
xor
and
rclb
lods
addr16
sbb
cld
sbb
xor
xrelease
pop
aam
push
imul
ficoml
iret
dec
ds
jb
xor
mov
dec
int3
sbb
push
sub
sub
stc
andb
ret
inc
or
fidivrl
cmpsb
sar
push
outsb
inc
mov
jmp
call
jnp
push
cld
dec
pop
cmp
mov
dec
js
mov
xchg
xlat
aas
adc
xchg
lods
pop
jnp
aas
fs
sahf
push
jecxz
fimull
jmp
dec
jecxz
xchg
jle
and
mov
jl
mov
int3
and
cmp
sub
pop
inc
outsl
push
fs
inc
inc
inc
addr16
jp
scas
jp
xchg
xor
les
inc
or
push
out
out
repz
mov
ljmp
dec
popa
mov
jno
das
mov
xor
mov
fwait
loope
dec
call
mov
mov
stc
pop
sti
dec
add
or
dec
orb
mov
sbb
cli
outsl
filds
lds
mov
and
loope
mov
inc
cwtl
inc
nop
imul
mov
pop
movsl
xchg
xorl
jb
mov
add
inc
sub
xlat
out
or
das
test
xor
sub
push
add
sbb
jl
adc
and
out
mov
cli
loopne
movsl
xchg
add
mov
push
test
pop
pop
adc
mov
negb
cmp
lcall
xor
pop
xchg
push
jo
imul
jl
push
mov
imul
adc
cmpsl
push
mov
fwait
or
pop
mov
aad
lcall
or
in
std
and
cltd
cwtl
or
ja
div
cli
ja
jnp
mov
fdivrl
jo
pusha
fldl
cmpsb
das
cmc
jnp
aas
out
mov
mov
inc
mov
mov
in
jecxz
or
nop
pop
es
mov
push
dec
call
cld
out
jno
push
push
out
and
sbb
xchg
je
jnp
lret
or
aaa
pop
dec
mov
mov
xchg
cmp
mov
shl
push
movsb
nop
test
je
and
push
dec
repnz
adc
push
lea
add
mov
lods
lock
xchg
cmp
pop
rclb
jbe
mov
cmp
or
out
jns
loopne
outsb
mov
sbb
aaa
int
xchg
bound
sbb
jmp
lods
test
sub
xchg
addb
shrl
les
mov
sbb
cltd
mov
adc
leave
sti
sti
mov
dec
ror
or
jmp
cmpsl
rcrb
jo
jp
cmp
and
pop
int3
jecxz
push
std
jle
into
xor
mov
cmp
lahf
pop
addl
xchg
enter
sub
mov
les
ss
cmp
mov
jge
mov
xor
out
arpl
out
lret
mov
xchg
and
dec
cmpsb
cli
loope
mov
jb
add
stc
jmp
pusha
dec
outsb
pusha
inc
loope
stc
inc
cmp
fcoms
sti
gs
or
iret
out
loope
jbe
mov
fcmovbe
popa
movsl
adc
jmp
fdiv
test
clc
mov
popa
lods
inc
test
ds
sbb
inc
inc
int3
inc
xor
mov
call
xchg
xchg
xchg
or
cmp
in
dec
les
jl
fildl
ds
dec
push
repnz
mov
imul
cmp
inc
pop
lods
aam
ljmp
imul
popa
rorb
mov
mov
stc
popf
sub
push
into
mov
sub
mov
jns
testb
adc
mov
jb
xchg
lahf
mov
cmp
push
cmp
test
ja
jne
cmp
test
imul
xchg
xor
movsb
pop
cmp
sbb
movsb
mov
lcall
dec
push
jecxz
out
int3
movsl
pop
out
ficoms
adcl
addl
adc
popa
lods
mov
cli
jbe
aaa
mov
xchg
or
inc
pop
pop
or
pop
lock
cmpsb
bound
in
sahf
pusha
data16
and
xchg
sbb
push
cmp
push
test
out
test
loopne
clc
iret
and
stos
jae
mov
arpl
idiv
je
movsb
imul
outsb
dec
xchg
pop
roll
cmp
mov
aaa
arpl
jge
and
xor
pop
pop
shlb
inc
jle
pop
in
mov
fwait
or
xlat
test
cld
iret
sti
inc
stc
icebp
jnp
pop
mov
in
dec
add
mov
adc
scas
sbb
mov
iret
in
mov
pop
mov
mov
stos
pushf
insb
xorb
sub
cld
mov
inc
push
xchg
xlat
sbbb
mov
add
jecxz
aaa
in
sbb
mov
test
ja
fsubs
mov
bound
pop
incb
and
lahf
cmp
mov
and
shlb
and
les
pushf
outsl
mov
sbbb
ss
movsb
jb
cli
pop
jge
mul
add
or
cli
cmc
ret
cmp
faddp
insl
sub
mov
push
call
mov
shrb
pop
js
pop
dec
xchg
push
inc
pop
imul
add
pusha
mov
pop
cltd
js
jbe
jg
lahf
cli
or
shll
or
xor
jnp
push
es
lahf
int3
pop
mov
test
les
and
sbb
pop
mov
or
dec
inc
xor
out
cmovle
rol
popf
mov
push
lds
movsb
ds
pushf
in
push
xor
ja
sbb
xchg
aas
inc
xchg
stos
rolb
jle
int3
push
out
add
arpl
dec
mov
push
bound
xor
xchg
test
jno
add
xchg
arpl
roll
mov
pop
inc
stc
ja
arpl
mov
push
cmpsl
dec
pop
lds
add
inc
jmp
adc
jno
or
pop
sarl
xchg
or
lret
mov
and
add
xchg
das
test
add
adc
sahf
cmc
mov
pusha
and
lcall
xchg
mov
fidivs
sbbb
int3
adcl
test
aas
ret
add
cmp
mov
clc
cmp
xchg
and
push
jne
call
fwait
mov
lret
mov
mov
push
xchg
enter
push
sbb
xor
sbb
arpl
mov
sbb
xor
das
xor
hlt
xchg
jl
insl
int3
call
aas
add
mov
push
dec
sbb
inc
in
xor
sub
fcoms
mov
jmp
andl
cli
cmpl
ja
add
mov
cwtl
popf
test
loopne
andb
je
xchg
xchg
iret
or
hlt
and
xchg
cmp
call
fldcw
mov
hlt
lcall
loope
daa
outsb
inc
jmp
sbb
movsl
imul
xor
sarb
pop
sti
push
mov
orl
test
xlat
cltd
cs
cs
push
adc
mov
sbb
xchg
cs
cli
jmp
pop
dec
lret
int3
push
pop
lea
int3
fimull
cmpsl
data16
push
pop
adc
mov
loop
adc
movsb
out
cwtl
pop
out
mov
test
or
outsl
cltd
sarb
pop
push
and
aas
xor
test
enter
ret
mov
mov
enter
es
dec
or
out
dec
jae
jge,pt
mov
and
xor
or
lcall
inc
sub
sbb
stc
popa
cmp
lret
and
inc
adc
repz
push
adc
mov
lahf
push
mov
into
dec
xchg
add
mov
push
adc
dec
pop
mov
sub
fwait
aam
xchg
push
jmp
push
and
jmp
in
imul
int3
and
add
or
jg
jo
mov
pusha
movsl
aaa
and
and
jnp
test
insb
push
test
mov
pop
dec
pop
pop
cmp
test
xchg
mov
outsb
test
cwtl
int3
push
repz
mov
sub
sti
xchg
push
aad
das
imul
pop
jne
sahf
lret
loopne
scas
cwtl
dec
adc
pop
int
cmpsl
cmp
aaa
and
xor
adc
adc
popf
sbb
sbb
dec
pop
jmp
loopne
adc
orb
movsl
mov
mov
fwait
lea
out
lds
xlat
aad
sahf
cli
sbb
push
nop
cmp
jmp
in
fidivl
movsb
iret
jnp
pop
push
lods
arpl
sub
movsl
jmp
lods
cmp
ret
xor
or
es
cs
out
daa
dec
outsb
mov
cmp
rcl
mov
in
les
add
int3
stos
fnstsw
cmp
cs
add
cli
xchg
ja
rorl
and
sub
vphaddubd
test
pop
aad
dec
jp
rcrb
push
xor
jle
loopne
jno
or
les
dec
pop
ret
inc
aaa
cmp
jnp
insb
lret
andb
fstpt
adc
sahf
mov
dec
mov
mov
xchg
inc
jl
pop
add
stc
lods
lds
xor
jge
jnp
paddq
movsb
fwait
dec
outsb
adc
pusha
jne
push
xchg
ds
mov
or
ret
cmp
mov
hlt
shll
pop
sub
dec
lret
and
jb
adc
cmp
scas
lcall
and
iret
mov
xchg
jecxz
inc
insl
shlb
pop
xchg
fildll
test
rcrl
mov
fadd
mov
dec
add
jno
sbb
inc
repnz
daa
icebp
xchg
rorb
mov
sbb
nop
rcll
push
or
adc
sub
inc
loopne
jb
out
enter
cmpsb
cmpsl
add
std
mov
call
sub
je
xchg
and
arpl
scas
pop
stos
ss
add
divl
xchg
dec
loop
sub
scas
or
sub
inc
push
mov
pop
xchg
nop
jbe
das
cwtl
adc
mov
adc
push
rolb
pop
mov
sbbl
lret
push
mov
sbb
ret
addl
jae
in
cmp
and
inc
xchg
cmpsl
imul
nop
call
fstpt
mov
stc
cltd
loop
pop
das
push
cltd
pop
inc
dec
or
xchg
pop
adc
sub
jo
and
xchg
jbe
pop
add
mov
push
inc
and
shrl
push
inc
sbb
dec
pop
push
jbe
imul
mov
sarl
sub
fistps
divb
cltd
jg
mov
pop
mov
lods
std
push
cmp
test
cltd
inc
push
dec
xchg
xor
shl
stc
popa
dec
adc
roll
negl
push
and
cmpsl
mov
jnp
movsl
es
jmp
jb
adc
inc
aaa
pop
dec
aas
fistps
mov
mov
cmp
bound
fst
xchg
dec
movsl
int
xchg
aam
or
xor
test
mov
push
pushf
ficoml
lret
arpl
add
xchg
adc
pop
mov
sub
enter
movsl
push
push
pushl
loop
stc
cmpsl
xchg
xchg
jbe
je
inc
xchg
fcomp
dec
sub
outsl
jno
or
out
jbe
pop
sbb
cltd
mov
push
xor
cwtl
mov
mov
ljmp
or
rolb
sbb
fisttps
shl
inc
pop
loope
sbb
push
adc
inc
pop
ds
imul
inc
gs
ss
cmc
mov
shlb
add
jmp
pop
and
pusha
jo,pn
mov
imul
test
lret
out
mov
mov
in
jo
sbb
stos
test
push
inc
pop
test
lahf
icebp
stos
inc
ret
jp
stc
test
push
outsl
mov
gs
xor
cmp
cmp
lret
cltd
loop
sub
mov
adc
sbb
out
pop
jmp
jp
divl
insb
lcall
dec
inc
and
mov
xor
pusha
add
xorb
cli
shll
mov
imul
or
gs
cmp
jae
movsl
xchg
ror
mov
je
sbb
mov
mov
int3
js
lds
fs
ja
sbbl
pop
mull
mov
adc
mov
fs
push
pop
stc
andl
and
adc
mov
dec
pop
daa
out
pop
bswap
scas
cmp
cltd
push
add
adc
mov
out
inc
cld
and
sti
sub
pop
andl
or
xchg
inc
daa
jo
fcomps
fldl
rcll
mov
fwait
mov
in
lock
out
sahf
in
sbb
sub
clc
insl
pop
xchg
sub
into
fildl
mov
fcomps
push
es
div
sbb
and
xor
pop
sahf
add
adc
inc
mov
lahf
mov
dec
mov
sbb
xchg
xchg
lea
imul
pop
sub
loop
cmp
sbb
sarb
cmp
sahf
nop
cmp
rol
inc
mov
adc
xchg
stos
ds
jb
lret
xor
mov
iret
out
and
add
mov
sahf
jns
dec
in
rorl
inc
addl
jge
mov
imul
mov
lods
cmp
or
xchg
xchg
cmp
aad
cli
dec
adc
push
jecxz
jg
xor
into
enter
mov
pushf
mov
jae
jg
sub
pusha
push
sub
outsl
mov
xor
data16
dec
leave
iret
adc
lcall
testb
ret
inc
ljmp
xchg
test
dec
jmp
adc
inc
clc
dec
inc
or
mov
mov
loop
sbb
jge
adc
sbb
push
pop
in
movsl
jmp
mov
or
adc
lods
cli
out
sbb
jl
repz
mov
mov
and
aam
arpl
adc
shl
test
test
sbb
cmc
std
add
fnsave
push
dec
lret
pop
and
out
pop
les
js
in
dec
lahf
shrl
scas
xor
jg
inc
test
and
scas
xor
mull
out
pop
daa
sub
pop
insl
mov
pushl
data16
or
rol
and
mov
notb
add
je
push
iret
xchg
imul
rcr
jle
mov
mov
xor
xor
dec
rcll
shlb
cmp
shrl
xchg
ja
test
mov
push
mov
ret
lret
lock
out
sahf
cld
push
xchg
mov
xchg
pop
lods
shll
das
jbe
mov
or
xchg
or
or
pop
and
test
adc
or
icebp
mov
mov
cld
jb
jge
cmp
jmp
inc
inc
or
jg
stos
lret
loop
pop
lea
lock
fsubs
sub
inc
dec
adc
test
jmp
cmc
sub
repnz
sub
jl
mov
out
pop
test
cmp
scas
sub
push
xor
cltd
or
push
sub
or
cltd
lcall
xchg
das
dec
add
inc
push
cmpsl
std
push
hlt
lahf
dec
jmp
adc
test
outsb
adc
inc
loopne
cld
pop
cmp
es
or
mov
stos
adc
push
xchg
cmp
inc
cmp
inc
mov
xchg
leave
rcr
movsb
icebp
pushf
jno
out
push
inc
loopne
add
dec
jmp
cmpsb
or
movsb
fnstenv
xchg
mov
enter
sub
pop
out
cmp
scas
inc
mov
fwait
movsb
mov
jle
mov
xor
cltd
lcall
mov
rcrb
fwait
pushf
xchg
xchg
cli
in
popf
dec
jnp
scas
sahf
pop
daa
outsb
jnp
xchg
test
xor
dec
inc
mov
pop
mov
je
leave
jp
jecxz
add
test
test
inc
push
adc
mov
je
int3
inc
jecxz
mov
iret
jecxz
xor
in
enter
imul
lcall
lods
pop
pop
pop
sbb
cmp
push
lods
test
sbbb
cwtl
xchg
add
fs
loopne
cltd
jo
push
icebp
es
fdivs
scas
ret
mov
rolb
dec
iret
lock
or
data16
icebp
push
movsb
inc
aad
sahf
pop
mul
out
xorb
cmpsl
pushf
xlat
mov
mov
mov
lods
pusha
int
lods
je
outsl
into
in
sbb
fstpl
les
xchg
pcmpeqb
cmp
mov
add
dec
ficoml
lret
stc
or
inc
imul
or
pop
fcoml
pop
ljmp
dec
jecxz
pusha
bnd
and
loope
pop
jnp
mov
mov
outsl
or
movsl
jb
jbe
and
int3
in
ds
pop
xchg
xor
xchg
gs
pushf
add
test
mov
mov
into
pop
insb
insb
xor
fsubrs
lods
movsl
cmp
jmp
jl
add
subb
mov
lret
rorb
sbb
xor
cltd
addr16
push
jns
sbb
cltd
mov
shrb
xlat
mov
cltd
dec
shl
jp
out
xchg
sahf
cmc
xor
xchg
sbb
xchg
cmp
xchg
sub
lret
out
in
pushf
rclb
test
inc
data16
sub
xlat
xchg
stos
adc
fildll
aad
push
xor
and
cltd
icebp
bound
inc
push
scas
adc
in
xor
mov
fstpt
fisttps
mov
jne
mov
movsb
add
pop
xor
imul
mov
rcrb
mov
imul
xor
sub
or
and
xchg
adc
jge
lea
and
icebp
and
dec
iret
pop
jae
mov
mov
lcall
sbb
pop
cmp
lock
into
fildll
clc
jmp
dec
fcomps
sub
pop
loope
xchg
adc
inc
dec
mov
or
or
outsl
call
jl
mov
mov
ja
add
mov
and
scas
faddl
movb
sbb
dec
xchg
cld
out
sub
xchg
imul
sub
addl
mov
je
mov
or
sbb
ficoml
imul
sub
jb
mov
sub
pop
arpl
pop
test
xor
mov
loop
and
fldenv
jnp
jne
mov
and
mov
mov
push
adc
enter
cmp
push
push
push
jge
rcr
or
rorb
push
rolb
cmp
pop
or
inc
fwait
lock
mov
pusha
push
pop
or
out
sbb
ja
jle
adc
dec
xor
cmp
sbb
lahf
out
inc
dec
shll
sub
popa
mov
clc
and
loope
pusha
xor
jecxz
push
jp
test
adcl
das
dec
jp
xor
mov
mov
add
lcall
and
cmp
push
les
pop
jle
jns
push
fimuls
test
xchg
xchg
movsl
mov
insb
mov
nop
ljmp
shrl
call
sti
cmp
ffreep
inc
push
aad
cmp
imul
mov
xor
mov
dec
imul
clc
dec
int3
in
sub
add
dec
jp
fcmovnu
inc
insl
popa
lcall
lret
push
dec
pop
mov
fs
xor
adc
outsl
mov
clts
bound
leave
lea
pop
jg
outsl
xchg
fcomps
and
mov
data16
jge
je
push
movsb
nop
inc
xchg
das
pop
push
fstpl
pop
pop
andl
push
lds
mov
push
jnp
ret
xlat
cmp
jbe
call
push
loopne
fs
lea
cmp
mov
std
cmp
mov
cs
cli
xor
adc
cmp
notl
stc
xor
mov
mov
push
xchg
pop
push
xor
ljmp
dec
rcr
das
bound
adc
push
lods
cmp
js
sub
jecxz
jp
std
add
cld
mov
mov
test
ds
mov
add
pop
mov
inc
and
icebp
call
stos
aam
adc
sti
push
js
pop
popf
and
shlb
scas
pushf
imul
lcall
pop
lret
int
jns
add
jge
cmp
push
add
mov
repz
adc
bound
push
mov
xorb
loop
repnz
xor
and
shlb
ret
adc
bound
push
mov
xorb
loop
repnz
xor
and
rolb
ret
adc
repnz
jb
inc
mov
mov
jb
xchg
adc
add
xor
and
shrb
pop
repnz
bound
shlb
push
dec
call
xchg
lcall
ret
into
shll
jecxz
repz
adc
push
mov
add
adc
xor
xor
ret
xor
and
adc
add
push
mov
push
mov
andl
and
and
lret
mov
mov
mov
jo
cmp
or
add
shrl
test
xchg
ljmp
test
ljmp
insb
sti
xchg
add
fwait
dec
dec
mov
adc
add
xchg
jp
lahf
stc
lea
and
int3
dec
cmp
das
and
or
pop
sub
jae
adc
lods
and
sbb
or
shr
loope
adc
rol
icebp
ret
xor
add
mov
pop
stos
mov
enter
push
movsb
mov
lock
test
xor
outsb
inc
adc
pop
inc
inc
inc
loop
mov
push
addl
shlb
sub
xor
ss
loop
adc
leave
push
outsb
and
and
xor
xor
shl
xchg
repz
stos
rcrl
addr16
push
sbb
or
cmp
xor
xchg
das
lock
mov
inc
idivl
in
in
call
push
nop
pop
mov
mov
and
push
xchg
push
mov
aam
mull
xor
add
push
stos
cmpsb
addr16
lret
adc
mov
inc
mov
mov
add
adc
and
xor
ret
xor
and
adc
add
push
mov
inc
mov
mov
add
adc
and
xor
ret
xor
negb
sub
shll
mov
repz
into
pusha
in
pop
shll
jno
mov
aam
fisttps
push
add
inc
mov
mov
mov
stos
and
aas
jle
iret
push
pop
sbbl
addl
movsl
test
adc
imul
add
add
and
cmp
ljmp
arpl
stc
lret
add
and
gs
mov
repz
sahf
dec
and
insl
andb
mov
jmp
jecxz
mov
xchg
aas
btr
leave
pop
test
adc
test
je
push
imul
bound
adc
inc
out
jecxz
adc
add
mov
orl
arpl
jns
loop
sub
icebp
mov
sbb
out
hlt
dec
inc
scas
sub
inc
lret
mov
mov
es
shlb
leave
lcall
out
add
sub
movsl
mov
jge
xor
rorl
lds
outsb
filds
sarb
lea
or
cltd
cmp
in
in
jle
push
and
ds
mov
loope
fcoms
fistpl
and
adc
in
mov
es
inc
lahf
jge
rolb
rcr
sub
jmp
sub
es
pop
dec
negb
fiadds
test
out
mov
dec
out
push
insl
dec
xchg
fldcw
sub
ljmp
cmp
repnz
jecxz
movl
mov
cli
rorb
or
fldl
adc
out
jo
fcmove
cltd
addl
xchg
faddp
add
jp
inc
iret
daa
add
popa
lds
mov
push
in
xor
mov
push
lahf
ljmp
xor
add
in
adc
xor
dec
push
cmpsb
cmp
ror
faddl
sub
pop
push
xchg
cld
rolb
lcall
adc
add
rcrb
inc
mov
or
xchg
pop
ror
aas
js
mov
xchg
sbb
inc
mov
push
movsl
mov
fistps
ljmp
jg
out
ds
pop
je
mov
jns
sti
imul
or
cli
aam
rcr
ss
nop
mov
mov
pusha
arpl
add
popa
movsl
negb
test
loopne
jecxz
dec
ja
dec
call
add
mov
mov
jl
mov
fisubl
add
hlt
repnz
pop
mov
adc
add
pop
jbe
leave
leave
imul
test
inc
dec
mov
pop
inc
mov
mov
mov
out
mov
mov
rcll
dec
push
or
jns
dec
ret
xchg
stc
lea
inc
in
or
inc
xchg
pop
inc
lods
inc
shlb
xor
sub
fs
scas
xor
jecxz
pop
mov
addl
push
in
add
cwtl
xchg
inc
int
jl
jle
movsl
cmc
cmpsl
mov
fdiv
mov
sbb
adc
and
andl
and
and
je
sbb
insb
fwait
enter
xchg
int
push
fst
aaa
pushf
adcb
fs
mov
push
gs
stos
xchg
pop
hlt
push
mov
test
jl
test
jmp
adc
sbb
stos
dec
daa
outsl
or
ss
pop
mov
push
aas
ret
or
outsb
fsubrl
push
add
add
dec
stos
inc
dec
outsl
cli
push
dec
popf
cmp
xchg
int3
push
scas
inc
jno
mov
xchg
inc
xlat
pop
adc
inc
mov
jae
es
xor
arpl
repz
xorb
cs
push
cmp
inc
dec
mov
adc
and
xchg
sbb
fiaddl
into
push
or
sub
mov
cmc
fbstp
pop
ss
push
pop
xchg
xor
roll
adc
dec
or
xchg
inc
jb
cmp
push
push
xchg
adc
ss
daa
push
mov
lret
mov
jbe
jle
push
sub
cmp
icebp
mov
insl
in
repz
lret
xor
ficoms
xchg
and
daa
mov
jg
jne
and
xor
lock
or
jecxz
sbb
iret
xchg
xchg
cltd
add
shl
testb
mov
inc
icebp
fadd
xchg
adc
gs
or
cmp
or
fisubs
xchg
je
lret
int
push
inc
ss
and
shl
fmull
ficomps
jnp
xchg
popf
insb
cltd
dec
or
jle
pop
ficompl
add
repz
pop
outsl
mov
push
cmp
push
push
cwtl
push
stos
pop
out
jge
fistl
or
push
es
pop
into
xlat
push
movsl
sahf
loop
call
adc
mov
sar
rolb
cmpsl
repnz
xchg
sbb
leave
sub
movsb
mov
call
fs
fnstcw
jle
pop
lds
dec
out
and
decb
outsb
fs
and
scas
jecxz
or
xor
fidivl
js
mov
nop
pop
pusha
jnp
push
in
cmp
xor
jno
stos
out
pop
aas
mov
sbbb
add
mov
test
push
fs
jae
adc
pop
fldl
imul
movsb
adc
outsl
push
or
add
stc
jno
cmp
mull
dec
lea
pop
gs
lret
mov
push
pushf
and
adcb
js
sbb
shrl
xchg
and
addr16
call
mov
fldl
mov
jecxz
and
repnz
push
cli
pop
xor
popf
test
sbb
pop
mov
pop
xchg
sub
xor
sbb
xchg
mov
das
stc
out
or
mov
sbb
out
rcrl
jne
fnstsw
dec
sbb
mov
sub
add
sub
icebp
jge
lahf
lds
mov
aas
fsts
mov
lcall
mov
test
out
popf
push
sbbb
leave
pushf
rorl
inc
or
or
mov
repnz
pop
sbb
add
in
sub
popf
gs
repnz
mov
out
hlt
sahf
add
xor
aaa
push
pop
add
push
cmpsb
addr16
roll
je
jnp
cmpsl
in
pop
cmc
xchg
push
mov
push
mov
cmp
std
sub
loop
out
icebp
fimuls
push
mov
sub
xor
and
aas
stc
inc
and
es
inc
jo
std
sub
push
loop
fcompl
dec
mov
sahf
push
pop
lods
pop
bound
xor
xchg
xchg
push
imul
rorl
sbb
outsl
enter
xchg
lods
dec
mov
dec
gs
test
enter
nop
pop
shrb
cs
or
jl
clc
cmc
ja
cmpsl
lea
mov
std
dec
pop
jno
call
cmp
or
and
ret
jo
pop
sbb
pop
in
xchg
nop
sbb
xor
out
sub
outsl
lahf
sbb
movsb
jge
xchg
inc
decl
pushf
xlat
clc
cmc
inc
jnp
or
push
dec
imul
pop
sbb
mov
pop
out
or
cld
popa
ljmp
pop
lret
adc
sub
test
aam
shrl
inc
es
out
add
inc
test
push
in
in
lods
pop
inc
cwtl
popa
inc
imul
and
stc
lret
inc
lret
cld
dec
out
cs
in
shr
jne
je
xlat
or
xor
mov
and
lret
lahf
cmpsb
push
cld
mov
mov
inc
insb
icebp
push
mov
dec
lret
mov
das
call
xchg
jg
jo
inc
inc
pushf
add
lea
xchg
jo
sub
lds
push
xor
fdivs
sbb
sub
xchg
inc
dec
pop
fs
out
test
mov
and
rcrb
and
loopne
stos
and
flds
lret
fs
cwtl
int
loope
pop
jecxz
lds
cmp
push
cmp
insb
xor
jg
add
xor
push
mov
scas
and
mov
lret
bound
mov
shrl
jns
xchg
mov
fnstcw
pop
add
dec
dec
and
loop
ret
jecxz
jb
add
xchg
out
and
repnz
in
push
jge
loope
cmp
mov
repz
dec
inc
add
js
outsb
fcmovne
xchg
or
mov
mov
int3
cld
sub
shlb
scas
pop
mov
sub
ffreep
and
andnps
mov
sahf
cmp
aaa
mov
fsubs
insb
dec
bound
pop
dec
ret
pop
sub
out
add
test
mov
jmp
test
sti
std
data16
in
push
arpl
and
or
and
mull
dec
xchg
jae
lret
sub
mov
pop
push
adc
ret
pop
outsl
fldl
movsb
movsb
cmp
in
mov
push
jmp
fistpl
cmpsb
pop
lods
hlt
xchg
test
dec
xlat
pushf
test
movnti
cmpsb
pop
call
cmp
pop
addr16
repnz
or
jno
adc
mov
jge
imul
in
or
dec
mov
rcr
inc
dec
fdivs
or
test
push
fldcw
fucom
pause
dec
fistl
pop
adc
sub
sub
or
rcll
inc
or
lea
inc
test
mov
adc
call
cmp
cmpb
fidivs
fidivs
inc
roll
cs
int
clc
push
inc
mov
inc
cmpsb
lret
or
call
and
repz
popf
imul
clc
aaa
or
leave
dec
pop
popaw
add
sti
aam
and
pop
xchg
lods
mov
mov
sahf
lahf
cmp
xor
lods
rcrl
sarl
push
inc
push
dec
mov
dec
push
orb
xlat
jns
jmp
js
mov
mov
mov
sbb
movsb
add
imul
push
xchg
nop
jb
sbb
sub
stos
push
pop
repz
push
mov
push
cmp
jl
cmp
clc
add
mov
ljmp
out
inc
mov
lods
push
jmp
insl
jg
mov
cltd
push
roll
or
xchg
xor
xor
inc
test
dec
inc
sahf
scas
and
pusha
jae
ljmp
pop
sbb
addr16
addl
unpcklps
add
pop
mov
push
getsec
test
in
inc
and
das
fiadds
xchg
mov
inc
cwtl
dec
xchg
jl
mov
lods
out
shlb
sbb
dec
int
and
xchg
mov
xchg
push
out
into
repz
stc
loopne
pop
dec
gs
add
push
stos
lods
nop
mov
fwait
repnz
mov
xor
cmp
mov
cmp
adc
mov
jns
cmp
dec
xor
in
ds
jmp
aas
xchg
fstps
xor
cmp
shrl
leave
shll
pushf
push
imul
adc
pop
fbld
dec
xor
clc
cmp
outsl
je
or
push
adc
mov
mov
xchg
xor
mov
add
fildl
push
lds
sti
sbb
pop
mov
adc
mov
inc
fsubr
jmp
xor
movsl
add
jp
in
or
jp
cmp
in
lock
and
adc
mov
push
xor
lods
mov
aaa
cmc
and
loop
test
mov
jle
aas
ret
pop
push
stc
jnp
jne
mov
mov
cwtl
sti
adc
fsubs
add
das
popf
aam
cmp
adc
inc
ljmp
sahf
xor
mov
popf
gs
leave
jl
mov
movsl
lahf
push
xorl
daa
jne
lcall
jbe
out
fisttpll
push
push
aam
es
push
jecxz
loop
xor
popa
jle
aas
jns
add
push
sub
int
dec
jns
dec
repz
leave
inc
rcl
xorl
pop
jo
dec
mov
fsubrl
add
xchg
ret
popa
mov
faddl
xchg
arpl
and
mov
push
movsb
sbb
dec
and
sub
jg
jmp
push
adc
lret
movsb
pop
mov
inc
and
int
rcrb
ficompl
push
fcmovnb
sub
push
inc
stc
jae
hlt
jp
pop
add
sti
test
int3
add
leave
out
dec
test
inc
cld
int3
and
push
cmp
js
rolb
mov
int
pusha
or
ljmp
inc
or
adc
mov
xor
jo
daa
and
ret
test
daa
inc
jl
dec
cmp
sahf
repnz
pushf
mov
adc
je
repz
inc
mov
ja
pop
aad
push
cld
mov
pop
cmp
scas
fistpl
or
or
xor
in
notb
sub
ret
ja
jmp
add
leave
jb
stos
lcall
fsub
inc
sbb
mov
push
mov
jbe
lcall
mov
cltd
push
mov
mov
xchg
add
les
shlb
int
lds
test
sub
push
xor
xor
or
cmp
icebp
insb
out
pop
ds
gs
jb
mov
sbb
sub
cmp
fisubrl
mov
jp
jb
mov
mov
sbb
jae
jnp
cmp
xor
dec
lods
imul
jnp
and
push
loop
sub
lds
sarb
or
je
call
jecxz
pop
testl
in
push
xchg
aaa
out
jb
addr16
aad
add
jae
mov
hlt
mov
mov
push
ss
dec
hlt
repnz
cmp
xor
mulb
jg
call
xor
sbb
dec
in
cmpsl
jnp
out
pushf
mov
dec
popa
xor
ja
sub
arpl
repz
xor
dec
adc
or
lods
xor
push
jb
cmp
push
and
and
pop
imul
iret
roll
in
fsubrs
mov
mov
mov
insb
testb
cmp
insl
rolb
loop
or
mov
cmp
xchg
sbb
xor
or
inc
and
bound
repz
pop
sahf
scas
dec
icebp
fidivs
das
dec
cmp
popf
add
mov
fidivs
jmp
mov
inc
in
jo
push
mov
mov
movsb
push
cmc
pop
add
popa
xchg
lret
or
or
mov
inc
ds
or
shll
fcomi
aam
lds
mov
mov
jb
jmp
sbb
dec
sub
mov
lods
lds
movsb
faddl
scas
cli
cmp
push
mov
push
rcrb
imul
mov
adc
out
hlt
enter
or
pop
ljmp
and
stos
sub
mov
in
cmp
xchg
lret
jne
repz
out
push
inc
ret
test
sbb
les
jge
ljmp
jecxz
mov
pop
mov
cmp
add
sbb
sub
adc
mov
imul
push
cmp
pop
outsl
cli
add
cli
sub
mov
jp
cltd
mov
mov
outsb
ficoml
pop
jo
adcb
pop
jb
xchg
jecxz
jno
imul
lock
leave
jmp
aaa
xor
mov
push
stos
insl
adc
cmpsl
movsb
push
jge
shlb
movsb
sub
je
cmp
sbb
jae
in
or
lcall
inc
xor
mov
push
outsl
lret
sti
dec
cs
cmp
mov
and
inc
push
sbb
or
xorps
aam
jge
lahf
fsubl
fs
ret
xchg
sub
push
mov
ja
repz
lahf
sbb
fdivl
rolb
out
xchg
dec
lret
subb
push
sub
dec
lock
mov
iret
jo
push
int
and
jbe
ja
daa
mov
scas
pop
adc
add
lods
xchg
pop
sbb
jle
xor
movl
xor
fstp
xor
imul
enter
mov
mov
das
adc
test
stos
insb
rolb
xorb
loop
mov
std
lea
mov
pop
fidivrs
shrb
jle
and
popa
jae
add
icebp
loop
arpl
shrb
scas
push
mov
pop
xchg
inc
popf
and
rorl
mov
adc
rcrb
outsb
xchg
nop
push
mov
int
and
dec
cmc
or
addb
mov
sub
dec
shrb
pop
movsb
push
arpl
and
std
mov
insl
push
mov
fbstp
pop
xlat
js
repnz
mov
pop
or
mov
es
adc
dec
xchg
aam
jno
push
daa
push
jg
lods
dec
inc
push
ja
jp
stos
movsb
xchg
jae
cld
push
pop
test
sarb
inc
or
icebp
out
push
fidivs
js
or
xchg
in
into
es
push
data16
movswl
fdecstp
jl
dec
fstps
sbb
sbb
cmp
mov
or
pop
test
lock
nop
jp
cmp
dec
push
inc
or
pushw
loopne
popf
inc
sbb
fistpll
bound
int3
into
cmp
cmc
or
cmp
dec
and
mov
orl
jmp
data16
mov
stc
pop
lret
xchg
and
xchg
dec
movsb
dec
test
aas
fwait
pop
cmp
mov
add
and
jbe
xchg
in
out
fldt
jg
jo
jo
push
fdivrs
push
aad
fsts
ret
jecxz
push
outsb
lret
pushf
pop
sbb
xchg
imul
sahf
adc
lock
push
jno
lret
mov
cmp
loope
cmpsl
xor
insb
adc
addb
pop
or
test
hlt
test
jl
jae
cmc
sbb
andb
divb
jb
sub
xchg
xor
cmc
ret
jno
shlb
xor
push
iret
es
testl
xchg
jg
pop
sub
sbb
xor
dec
jb
xchg
ss
ret
push
lahf
fcoml
jae
inc
cltd
mov
ljmp
jne
pop
xchg
mov
mov
movsl
lods
jne
hlt
push
add
xor
mov
cld
mov
xor
gs
ljmp
dec
xor
inc
je
pop
pop
into
icebp
mov
add
vcvttsd2si
xchg
push
sub
and
adc
sub
mov
dec
mov
mov
fimuls
cmp
test
addr16
aaa
push
pop
inc
inc
loopne
and
iret
and
inc
repz
lcall
rorl
dec
in
in
add
test
add
or
push
fwait
std
fisubrs
push
sub
mov
leave
lret
jg
cmp
dec
and
je
loop
and
arpl
xor
adcb
rcl
push
pop
lahf
cmp
inc
out
test
lahf
dec
jp
incb
sarb
popf
xor
lods
lock
cmp
movsb
cmp
push
ds
and
cmp
jbe
shl
and
mov
pop
and
call
pushf
mov
or
push
cmpl
shll
jb
mov
movsb
pop
popf
inc
pop
sbb
and
push
fsubrl
loop
xchg
fmull
pop
out
cmpl
je
ficomps
cli
push
add
test
xor
mov
punpckldq
mov
loopne
pop
das
jg
adc
in
push
push
jmp
sbb
and
sahf
mov
jmp
nop
and
aaa
sahf
sbb
mov
push
sub
dec
popa
dec
inc
mov
aaa
ret
jbe
mov
dec
ds
push
and
jle
lock
sbb
xchg
xchg
add
xor
push
fyl2x
aas
and
cli
xchg
inc
ret
lods
mov
outsl
xchg
pop
lret
sub
out
negl
shld
sub
std
mov
cmp
jmp
jnp
xchg
pop
mov
ljmp
mov
fbstp
fcompl
pop
or
xchg
shl
pop
pop
adc
add
in
jnp
pop
outsb
arpl
es
inc
cwtl
aad
stc
insb
mov
leave
iret
in
mov
leave
add
jne
sbb
jp
jns
roll
dec
mov
dec
loope
mov
pop
xchg
das
outsb
out
mov
push
addr16
ficoml
iret
lahf
in
jne
lock
jb
leave
jns
xchg
mov
and
push
dec
les
sub
push
mov
and
jge
add
push
mov
inc
mov
mov
add
adc
and
xor
ret
xor
and
adc
add
push
mov
inc
mov
mov
add
adc
and
xor
ret
xor
imul
jno
leave
mov
imul
add
adc
and
xor
ret
xor
and
adc
add
shll
inc
mov
xchg
jae
je
fwait
push
fsubrl
int3
ds
mov
sub
mov
andl
andl
andl
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
mov
lea
push
movl
movb
movl
movb
movl
movb
movb
movl
call
leave
ret
outsl
push
and
and
push
and
sub
push
movsl
mov
xlat
movsl
das
aad
adc
and
gs
push
jb
dec
mov
mov
in
aad
vcvttss2si
push
insb
bound
js
push
mov
scas
mov
fiaddl
lods
xchg
and
inc
jge
cltd
mov
dec
sbb
pop
lock
or
test
adc
inc
lcall
insl
pop
jle
dec
mov
dec
mov
cmp
scas
mov
imul
cmp
pop
cmp
mov
pop
or
mov
and
cmc
mov
push
inc
jo
mov
pop
int
xchg
dec
fldenv
xchg
or
dec
iret
jno
and
mov
sahf
mov
push
test
mov
cmp
std
pop
inc
mov
enter
mov
outsb
arpl
pop
shrb
test
xor
push
lds
adc
push
jg
push
jb
lock
xchg
mov
sahf
in
out
std
sub
ljmp
jo
popa
dec
adc
or
push
pop
sub
out
jmp
cltd
xchg
subl
jo
pop
dec
add
or
cmp
add
rep
not
loopne
xchg
nop
popf
xchg
ret
lds
jo
add
inc
push
jb
bound
mov
mov
aad
adc
and
gs
push
jb
bound
mov
mov
aad
adc
push
dec
dec
insl
int3
pop
xor
imul
es
pop
cmp
sbb
lea
ja
cltd
addr16
mov
xor
ret
jl
mov
int
lods
xor
shlb
out
cmp
repz
stc
mov
dec
je
push
ljmp
mov
es
jo
xchg
and
xchg
xor
mov
fisubs
cmpsl
add
pusha
pushf
cmp
or
jnp
fistpl
int
jne
movsb
imul
push
sub
int3
and
mov
imul
and
ja
xchg
fldz
or
sbb
lock
dec
pop
lcall
scas
sbb
cmp
push
es
insb
sbb
jbe
rorb
aas
mov
pop
leave
daa
cs
out
dec
inc
stos
mov
mov
pushf
in
inc
xchg
xchg
sti
sti
jl
sahf
mov
xor
push
sti
inc
in
sbb
dec
and
cmpl
push
mov
jp
ret
pushf
or
aas
mov
add
repz
rolb
loopne
push
cmp
jbe
js
in
xchg
and
inc
sbb
fdivl
lods
mov
and
and
mov
add
dec
sbb
loope
into
imul
das
aad
and
add
std
mov
mov
out
inc
je
cwtl
int
jmp
dec
jns
movsl
lahf
sbb
cmc
aam
out
adc
push
jge
and
sti
test
fwait
inc
dec
test
or
push
jns
inc
xor
sbb
out
fdivrl
ss
add
mov
mov
and
aaa
pop
lahf
or
je
das
sub
or
outsb
cmp
sbb
cwtl
pop
cmc
imul
and
shlb
xor
xchg
daa
pushf
scas
push
push
negl
push
shl
mov
adc
out
out
es
divb
push
pop
rcrl
cmp
stos
sub
mov
and
ss
and
lock
jge
or
jno
mov
mov
xchg
ds
popa
insl
mov
jle
push
lahf
ljmp
lea
pop
lcall
jecxz
cld
add
js
add
xchg
dec
jle
bound
pop
mov
leave
nop
lahf
add
push
cwtl
fs
subb
fs
insb
daa
xlat
jmp
mov
rorb
cmp
mov
cwtl
inc
and
cmpsb
mov
aaa
bound
je
mov
jl
ret
pop
sti
jge
push
fdivr
repnz
insl
ljmp
jns
loopne
test
xchg
scas
cli
cmpb
xchg
dec
cmpsl
lahf
sbb
push
push
in
pop
in
dec
mov
scas
mov
cmc
xchg
mov
push
mov
test
les
mov
xor
lret
jg
into
rol
sbb
sarl
pop
aam
lret
sbb
push
imul
xor
adc
rolb
aad
add
ret
sbb
sbb
dec
xchg
setae
aas
shlb
sub
inc
mov
mov
mov
shlb
push
xchg
add
cmpsl
fbld
lahf
pop
sbb
add
push
ds
xchg
jge
out
cmp
pop
nop
xchg
jle
mov
mov
stos
pop
sub
cltd
sbb
sahf
mov
out
scas
push
or
iret
test
mov
popf
mov
lds
lock
fwait
push
and
mov
mov
ljmp
mov
mov
pop
call
aas
sbbl
rolb
ret
movsl
adc
adc
inc
loope
mov
das
push
xor
push
dec
hlt
repz
fisttps
in
lods
aaa
sbb
cwtl
mov
sub
add
lea
cmp
enter
nop
pop
lods
dec
jae
add
test
jae,pn
xor
lea
cli
rcrb
add
jb
shr
dec
pop
xor
or
fldenv
and
add
ret
leave
dec
les
into
es
sub
mov
mov
stc
cmc
add
xor
mov
arpl
xchg
pop
mov
test
lods
daa
jg
loopne
cmp
xor
inc
lea
mov
push
xlat
ss
mov
sahf
aaa
xchg
mov
out
ljmp
or
inc
sub
pushf
pop
fmuls
add
pop
insb
stc
push
or
shll
in
cmp
stos
cmp
xchg
cltd
ret
sahf
jno
sub
adc
clc
jg
add
mov
mov
pop
cmpsl
loope
inc
xorl
out
sub
sbb
pop
hlt
mov
aas
xchg
stos
shl
mov
call
and
push
sbb
hlt
loopne
adc
lock
into
mov
jg
cmp
movsl
pusha
movsl
clc
out
loopne
mov
jb
testl
mov
lock
adc
add
sbb
test
adc
sbb
sbb
out
fidivl
jno
faddl
jge
jcxz
je
xchg
daa
inc
pop
mov
jo
cwtl
xor
pop
mov
push
fiadds
test
dec
xchg
inc
lret
aam
icebp
jbe
out
sub
fldenv
cltd
sbb
mov
xlat
and
push
js
adc
adc
jle
adc
adc
mov
aas
pop
mov
sti
dec
fndisi(8087
iret
in
data16
cli
mov
rorb
std
xor
sub
inc
jg
cmp
arpl
stos
out
sub
in
notb
sub
push
mov
push
aaa
and
pop
outsb
gs
ds
fsts
scas
sub
and
mov
and
cmpb
inc
movsl
or
aas
cs
jnp
mov
cmp
jno
pop
fsubrs
mov
sar
and
add
lea
mov
pop
addr16
or
pushl
add
cmp
in
lds
jb
lcall
clc
inc
inc
loopne
xor
lret
push
mov
push
sahf
addl
test
add
lahf
dec
jae
cmp
and
addr16
or
cmp
xchg
fdivs
cmp
shlb
ret
sub
jo
inc
jp
sub
mov
push
sub
push
dec
pushf
test
push
pop
aaa
mov
inc
push
jmp
inc
lahf
inc
or
add
nop
cli
push
nop
cld
xor
scas
mov
and
inc
fcmove
cmp
ret
dec
bswap
inc
push
sub
jns
sbb
in
sub
mov
dec
in
push
sarb
or
sbb
aaa
stos
das
loope
mov
daa
aam
das
call
inc
or
fiadds
inc
add
adc
push
jns
stos
sub
aaa
stos
dec
aaa
pop
xchg
nop
mov
lret
pop
mov
ficoms
aam
xchg
movsl
fdivrs
bound
push
fisubrs
test
sub
mov
dec
mov
loop
pop
fmulp
jle
xchg
adc
shlb
cmp
pop
pop
insb
jns
push
or
push
mov
xchg
dec
cmp
test
stc
cli
shrb
or
dec
int
iret
movsb
iret
ret
loopne
pop
inc
mov
nop
sub
dec
popa
adc
jp
push
lock
aas
es
das
in
jb
push
data16
or
or
xor
xchg
cs
push
repz
jnp
adc
fiadds
push
cmpl
or
push
popf
xchg
mov
and
movsl
cmpl
and
clc
adc
jp
nop
js
sub
xchg
popa
jae
add
fsubl
xchg
jae
stc
je
test
loopne
test
mov
das
push
mov
aaa
test
add
adc
fsubs
dec
sub
incl
gs
pop
push
cmp
enter
sbb
xchg
pop
mov
mov
sub
rorb
mov
stc
dec
adc
xchg
movsb
xchg
mov
mov
pop
shlb
lods
pusha
aas
adc
jnp
mov
das
repz
jb
pop
push
rcl
dec
mov
pusha
add
adc
mov
pop
js
or
loopne
in
cmp
push
repz
push
frstor
dec
popa
stc
jmp
insl
movsb
bswap
mov
out
or
fwait
jnp
ds
sub
push
cmpl
rol
jno
sbb
roll
jge
xor
mov
outsl
adc
dec
cwtl
push
jae
inc
outsl
push
das
iret
fcmovbe
lods
sbb
mov
fucomp
cld
lret
addr16
xchg
dec
cmp
pop
enter
mov
sti
cmp
cmp
jg
cmp
daa
inc
out
fcmovbe
dec
push
out
inc
popf
dec
sub
mov
lahf
pop
stos
fdivr
and
or
pop
shrb
imul
inc
push
lock
stos
and
xor
lcall
cmp
ret
add
inc
sahf
cwtl
fsqrt
je
mov
add
hlt
pop
and
cwtl
jle
inc
imul
pusha
lret
xor
lds
or
adc
popa
xchg
stos
adc
aam
and
and
shl
call
mov
cmp
pop
xchg
or
test
add
mov
pop
inc
test
mov
nop
lock
jg
xchg
cmp
rcrl
cwtl
stos
shl
or
testb
jnp
mov
enter
cmp
mov
hlt
push
mov
sar
push
jns
xchg
jecxz
addr16
test
sbb
xchg
pop
mov
scas
out
jns
lea
inc
xchg
mov
cld
mov
aad
cwtl
and
and
pop
scas
pop
jmp
lea
pop
out
jns
or
adc
sub
or
shl
push
insb
mov
mov
rcrb
setbe
addb
ret
add
cld
pop
sub
loopne
xor
in
ret
adc
pop
pop
call
jle
xor
shlb
fbstp
jne
out
das
mov
jl
or
mov
push
adc
insb
jo
daa
stos
lret
cmp
aam
sub
cmp
addr16
dec
push
and
rorb
negl
outsb
xchg
lcall
sub
jecxz
call
js
test
rol
pushf
rcr
lcall
push
repz
jmp
sbb
enter
dec
in
test
out
fsubl
sub
mov
lea
inc
and
lods
mov
out
cmp
movsl
int
mov
scas
pop
mov
xor
bound
mov
sbb
callw
in
xchg
add
push
ret
inc
cmp
sahf
popa
xchg
lahf
loopne
orb
sub
lods
adc
pushw
xorl
inc
sbb
sahf
pop
lock
inc
xlat
push
js
dec
icebp
push
andl
cmp
dec
mov
aas
dec
hlt
pop
adcb
mov
mov
mov
mov
xchg
xlat
out
sbb
adc
cmpsb
push
jp
pusha
movb
inc
ror
out
add
gs
fwait
push
or
sbb
divb
cmp
popa
mov
jb
testb
push
dec
addr16
outsb
sub
ja
mov
cli
pop
fwait
or
fnstsw
add
mov
jmp
jp
nop
fdivl
rcl
and
lods
jg
dec
xchg
jp
ss
pop
adcl
mov
dec
cmp
or
iret
pushf
push
xchg
add
pop
vpcmpgtd
or
fidivl
aam
sub
xchg
push
push
addr16
fistpll
mov
sbb
ja
mov
adc
push
dec
into
mov
rolb
xlat
rclb
mov
push
push
inc
aad
cwtd
dec
cmp
pop
xor
fldt
loop
jmp
int3
pop
arpl
and
adcl
inc
adc
jle
xlat
adc
dec
jmp
inc
adc
jge
mov
adc
loopne
xor
rorb
insl
push
push
sbbl
icebp
arpl
jnp
push
inc
mov
ljmp
pop
cwtl
push
mov
imul
push
mov
fimull
push
dec
dec
jle
lods
xor
inc
icebp
js
sbb
and
in
xor
inc
in
inc
sbb
into
pop
lahf
sbb
and
adc
mov
lahf
bound
sahf
fwait
divb
and
inc
lcall
xchg
push
ja
xlat
and
mov
inc
ss
mov
mov
mov
push
iret
in
xor
movsl
loope
adc
mov
testl
sbb
sti
pop
mov
repz
jmp
push
mov
jbe
jne
stc
dec
sbb
das
repz
imul
adcl
add
xor
inc
ficoms
add
mov
pop
dec
cmp
sbb
add
jmp
mov
xor
les
loop
rorl
or
bound
cmp
jb
lock
repz
lock
pop
ud2
dec
test
xchg
push
dec
add
lock
repnz
xchg
lahf
jae
jns
mov
push
mov
push
or
mov
sub
test
sbbl
adc
gs
ret
call
out
fwait
int3
jmp
xchg
pop
arpl
adc
inc
cmpl
inc
adc
push
fldl
enter
mov
cmp
cmpsb
test
mov
cmc
dec
jae
loop
push
add
adc
lock
lds
mov
ret
push
es
adc
out
mov
sub
mov
dec
pop
pop
ret
nop
mov
outsb
jae
std
jle
data16
and
pop
inc
mov
mov
or
xor
aam
fimull
jae
dec
ss
ret
in
loope
push
and
outsb
and
inc
repz
repnz
and
imul
stos
push
adc
bswap
int
mov
and
push
sbb
dec
mov
insl
cmp
inc
mov
jecxz
mov
repz
pop
daa
fnstcw
mov
mov
adc
or
add
or
adc
pop
pusha
mov
and
cmc
leave
mov
out
shll
xor
mov
jb
mov
cmpsl
pop
sbb
adc
xorl
pop
and
arpl
lcall
test
sti
add
xlat
call
jle
mov
jmp
dec
popa
xchg
push
add
clc
sahf
inc
cmpl
frstpm(287
mov
arpl
xchg
sub
dec
jmp
mov
mov
mov
shrb
add
dec
mov
ret
mov
and
andl
insl
enter
cmp
pop
mov
push
jne
cs
and
stos
sbb
mov
and
cmp
iret
push
das
pop
fwait
mov
ljmp
js
mov
mov
pop
and
cmpsb
and
jne
xchg
cld
xor
pop
xchg
mov
jno
jecxz
in
push
or
add
sbb
mov
fisubl
mov
fsub
lret
std
in
push
lea
pop
mov
int3
call
mov
cld
dec
lret
lahf
xlat
xchg
stos
js
jg
das
divb
les
xchg
xor
inc
imul
lods
pop
mov
add
mov
push
mov
jbe
idivl
dec
outsb
out
inc
xchg
cltd
fdivrs
pop
ja
fidivrl
orl
push
add
mull
or
cltd
or
rol
insb
xor
cs
jmp
js
sub
inc
mov
and
loopne
into
jbe
sahf
mov
inc
test
mov
rorb
jecxz
cmp
cli
sti
ljmp
sub
ret
pop
je
lret
lahf
mov
fistps
lods
mov
pop
mov
dec
inc
cld
mov
out
cs
fstp
xor
ret
cmpsb
mov
dec
rol
popf
popa
out
lahf
cmp
aam
js
imul
pop
fwait
mov
sbb
imul
inc
out
pop
roll
out
mov
dec
js
adc
push
xor
sbb
les
pop
repnz
movsb
xlat
int3
sub
cwtl
pop
pop
out
mov
call
popa
fidivs
aad
add
loop
xchg
int3
sub
jle
aas
inc
scas
cmp
jb
inc
mov
sub
mov
mov
test
popf
outsl
pop
mov
dec
adc
int3
mov
lcall
aam
mull
pusha
repz
xor
pop
cmp
add
in
shll
mov
pop
test
cld
mov
cmp
xchg
cld
pop
pop
pop
jmp
sbb
jg
into
jge
mov
test
andb
ljmp
aas
inc
dec
cmpsl
cltd
ds
push
xchg
mov
xor
call
cmp
inc
test
dec
dec
lret
mov
out
mov
in
inc
inc
and
adc
push
jecxz
jo
adc
xchg
call
rcll
roll
and
or
insl
cmpsb
cmp
push
out
dec
repz
mov
xchg
lea
lock
ss
dec
xchg
cwtl
ja
aaa
push
jge
add
xchg
mov
ds
jne
inc
lret
jg
jecxz
js
mov
mov
arpl
pop
stos
adcb
ljmp
in
std
test
lods
std
mov
pushf
adc
in
lret
pop
jg
es
jmp
cmp
cld
jl
adc
cs
adc
lret
sub
push
mov
movsb
mov
in
push
dec
movsb
aaa
inc
fistl
or
lock
mov
mov
das
mov
xchg
aam
aam
divb
mov
jg
setnp
and
sub
mov
jno
or
cltd
mov
inc
mov
push
push
pop
fwait
data16
xchg
imul
push
jp
aad
aam
push
dec
mov
pop
pop
push
push
rorl
lock
repnz
imul
int
repnz
clc
imul
in
jmp
shlb
lcall
add
cvtps2pi
jne
fnstcw
jnp
add
out
scas
stc
and
dec
fisttpl
stos
enter
add
out
cli
cli
push
aaa
xor
sub
aas
dec
inc
inc
enter
lods
sbb
jecxz
popf
cmp
cmp
or
sbb
mov
enter
inc
xchg
push
mov
fisttps
inc
lods
popf
addl
push
sarb
jo
icebp
mov
fildll
ficoml
cmpsb
aas
jne
pop
inc
mov
leave
cmp
and
shll
push
pop
mov
pop
cmpl
lods
rcrl
dec
jns
gs
jmp
pop
xchg
ret
lret
loopne
sub
icebp
std
adc
inc
and
pop
subl
cmp
stos
pushl
pop
adc
xor
cmpb
or
pop
cwtl
dec
rcll
ficoml
jle
lock
and
mov
mov
jecxz
jle
xchg
push
add
push
dec
ja
adc
mov
pop
mov
pop
pusha
mov
jle
imul
shrl
int3
test
inc
jns
push
xor
mov
ret
in
rcrl
mov
aaa
mov
pop
ret
insl
and
cmp
stos
jb
mov
mov
mov
sub
adc
lds
mov
loop
adcb
daa
out
and
jle
sbb
pusha
pop
inc
mov
adc
or
sub
in
aad
xchg
add
shr
mov
std
lcall
popa
or
stc
lahf
and
inc
insl
sti
icebp
xchg
test
mov
mov
cmpsb
jle
cltd
mov
inc
xlat
notb
mov
cld
sub
and
sahf
js
pusha
orl
or
aam
shll
xchg
loope
mov
mov
jl
fsubr
jmp
imul
aad
dec
in
mov
push
in
sbb
in
jle
adc
aas
lahf
sti
push
mov
cmp
cmova
addr16
dec
data16
xor
movb
jge
leave
in
or
stos
aas
add
cli
cmp
add
lcall
out
add
ret
mov
aaa
sti
mov
lea
decb
out
in
mov
pop
xchg
xchg
in
adc
mov
movsb
pop
aaa
cmpsl
ds
outsb
insb
test
cmp
push
push
test
add
imul
jl
rcrb
lock
cld
xchg
adcb
mov
sub
adc
in
xchg
in
mov
lea
dec
cli
pop
pop
mov
xchg
push
adc
lock
xor
push
out
inc
add
push
gs
push
jb
bound
mov
mov
aad
adc
and
gs
push
jb
bound
mov
mov
aad
push
and
es
sub
inc
bound
mov
stos
cmc
loope
aad
hlt
push
add
adc
and
add
inc
aad
lds
aas
mov
aad
stos
insl
mov
push
sub
es
cmp
jge
call
test
mov
mov
cwtl
clc
push
sub
sub
pop
or
add
mov
cwtl
mov
movsb
mov
clc
push
sub
sub
pop
or
js
mov
mov
rcrb
and
push
cmp
cmp
cmp
jecxz
repz
in
add
shlb
test
add
pop
les
add
fldl
pusha
out
jb
cld
addr16
mov
lods
adc
or
adc
jbe
sub
jne
imulb
aaa
icebp
mov
or
xor
in
insl
pop
inc
sub
add
outsl
sub
sub
add
call
sub
pop
push
enter
loop
stc
xchg
jl
dec
and
mov
shlb
or
sbb
ja
aam
push
push
mov
push
lea
js
dec
stc
nop
mull
cmp
xor
lods
xchg
enter
call
js
dec
sub
sub
pop
or
js
mov
cwtl
enter
test
mov
xchg
cs
pop
sub
sub
pop
sub
icebp
cld
cltd
stos
int
int3
int
sarl
imul
sbb
cmp
push
adc
add
sbb
ret
cli
loope
sti
popf
cmpsb
in
fsqrt
mov
sbb
and
pop
sub
pop
or
js
mov
cwtl
enter
test
mov
clc
push
sub
sub
pop
or
js
mov
cwtl
enter
test
mov
clc
push
lds
cmp
lds
xchg
cmp
call
fmull
movsb
lea
adc
and
xchg
rcll
dec
cmc
cmp
and
dec
mov
lret
inc
ficoms
pop
mov
or
mov
jno
fsave
xchg
sbb
cmpsl
stos
push
int
ret
pop
xor
pop
pop
adc
or
lock
sub
add
xchg
lods
incb
arpl
cmp
mov
and
pop
fists
push
mov
pop
rorb
xorl
fstl
sbb
imul
xor
cmp
mov
scas
push
sub
gs
sbb
adc
test
mov
repnz
add
pop
add
ret
fwait
andb
js
xchg
dec
roll
add
insl
lcall
cmpsl
cmpsb
xchg
push
xor
inc
lret
out
add
pushf
jecxz
popl
ja
mov
shr
ljmp
rolb
popa
sub
jecxz
pop
shr
popa
xor
or
xchg
xchg
pop
and
call
add
mov
cmp
subb
call
sub
jae
cmp
inc
in
loop
jge
popa
fists
mov
xor
dec
int
test
mov
cs
sbb
jne
inc
mov
clc
sub
movsl
scas
push
insl
fstpt
and
jns
adc
mov
xchg
insb
in
and
jno
hlt
stc
xchg
jl
jo
and
xor
sub
fsin
icebp
ja
loop
and
pop
fisubs
ret
add
jae
or
stos
xor
xchg
enter
sbb
sbb
pop
leave
pop
xchg
push
pop
sub
fs
inc
cltd
outsl
stos
adc
adc
sbb
xchg
jecxz
loopne
push
xchg
mov
ljmp
add
subb
fwait
or
cmp
xchg
add
notb
push
pop
adc
mov
mov
and
cmp
inc
dec
jnp
sbb
repnz
aad
cltd
fstps
mov
mov
jo
cmp
xchg
or
mov
and
std
jmp
mov
mov
leave
inc
or
sub
testw
das
jg
xchg
iret
inc
hlt
das
xor
js
or
repnz
fwait
test
sub
mov
call
and
mov
inc
std
mov
pop
dec
mov
or
or
insl
jp
dec
mov
push
push
jo
cwtl
pushf
movntq
out
js
jo
sti
inc
mov
xchg
addr16
xchg
pop
lahf
mov
inc
pop
filds
popf
xor
sub
fnsave
xchg
push
test
jne
insl
icebp
adc
push
push
dec
pop
in
hlt
js
test
leave
cs
or
aaa
lret
call
das
icebp
mov
inc
int
and
adc
mov
push
add
push
xchg
mov
dec
add
cs
inc
aam
sbb
rol
lahf
ja
mov
adc
mov
fldenv
lcall
fdiv
add
scas
fidivs
stos
inc
repz
pop
add
sub
test
lock
int
jnp
out
xchg
jns
ja
in
clc
negl
cmp
push
inc
pop
sti
lock
sbb
inc
out
xchg
aas
js
sbb
add
pop
xor
add
sbb
xchg
int3
add
cwtl
xchg
inc
mov
negb
dec
and
push
clc
sarb
sbb
adc
or
mov
mov
jmp
lea
sahf
add
mov
jbe
mov
orb
and
pop
jge
jno
xor
mov
sub
pop
lahf
jb
mov
pop
pop
cwtl
add
int3
shlb
xor
xchg
inc
in
andl
push
pop
lds
movsl
cmpl
cmp
jle
stos
add
pop
inc
ficoml
lret
popa
inc
inc
inc
ficoms
loopne
inc
fdivrl
cmp
xor
pusha
je
iret
data16
jle
xor
fisubl
nop
call
inc
jg
stos
jo
mov
pop
add
cwtl
pop
jb
jg
movsb
pop
sbb
icebp
push
roll
sub
fwait
xchg
or
loope
bound
dec
adc
ret
or
repz
xchg
jp
outsl
std
lahf
rorl
inc
loopne
xchg
mov
daa
int
aam
inc
ss
push
lock
xchg
cmp
jge
sbb
nop
das
leave
pop
int
fidivs
repz
fbstp
rcll
andb
pop
inc
sarl
addr16
lds
adc
mov
mov
scas
xchg
sub
dec
cmp
sub
movsl
xchg
lods
xchg
and
push
or
cmp
cmp
inc
sub
adc
mov
mov
jns
popf
push
and
sbb
dec
mov
shll
jne
nop
imulb
popf
sub
inc
outsb
aad
roll
push
jle
not
lds
pop
push
jnp
clc
inc
add
lods
cli
por
outsl
jle
or
jle
retw
fidivrs
mov
frstor
test
divb
addr16
ja
xor
mov
push
out
aad
loopne
mov
aaa
cwtl
xor
or
xor
push
sub
push
outsb
je
inc
dec
cltd
bound
push
and
push
lahf
cmp
popf
rcll
inc
cld
inc
mov
ret
je
sarl
lock
adc
mov
sub
sub
add
and
dec
mov
push
sbb
out
call
outsb
or
cmp
decb
xchg
jecxz
cmc
mov
lret
pop
loopne
clc
repnz
shrb
lods
push
mov
xchg
scas
xor
mov
lret
les
fwait
inc
mov
xchg
out
inc
xor
das
aad
mov
test
mov
jmp
push
dec
stos
incl
jl
ljmp
jno
sbb
das
cmp
fadd
sbb
add
or
adc
popa
push
test
adc
mov
push
lock
mov
ja
or
mov
call
and
sub
and
out
pop
loop
push
cmp
lahf
in
mov
jae
xor
mov
or
incb
push
fcmove
mov
orl
jmp
pop
incl
xor
push
xor
inc
cli
sbb
inc
push
add
cmpsl
pop
fidivl
js
icebp
pop
movsb
mov
dec
in
adcl
lea
inc
pop
cmpsl
incb
pop
jmp
or
sbb
rorb
jle
sbb
push
fimuls
notb
pop
sarb
enter
out
incb
out
ss
loope
push
jmp
mov
fidivrl
push
aam
mov
popa
aas
nop
repz
sar
sti
xchg
mov
cli
pusha
fnstcw
xchg
jp
add
popa
mov
mov
dec
arpl
test
mov
lds
sarb
sbb
add
fmuls
clc
push
cmp
add
mov
in
mov
cmpsb
push
add
xchg
stc
daa
xchg
addl
cmpsb
loopne
out
and
xchg
jb
and
nop
mov
and
push
repz
popf
stc
int
push
mov
inc
jge
adc
es
lds
cmp
push
inc
sub
mov
sti
dec
mov
mov
inc
adcl
sbb
xchg
sbb
gs
call
pop
decb
fbstp
sub
pop
mov
cmpsl
and
in
adc
push
mov
mov
outsl
or
xorb
insl
and
loope
addr16
xor
cwtl
xchg
mov
jns
mov
jnp
cli
rolb
mov
leave
and
cmp
adc
stos
decl
repnz
test
leave
adcl
cltd
add
push
or
pop
xor
iret
xchg
fstpl
cltd
bound
lods
inc
int3
mov
ror
sbb
std
outsb
add
int
aaa
xlat
sbb
jp
lret
icebp
adc
fidivrl
lods
jl
jge
ljmp
mov
imul
out
addb
test
imul
push
ja
xchg
pop
sbb
les
repz
sub
pop
sub
inc
push
sub
jg
dec
push
std
and
mov
sahf
push
cwtl
xchg
sahf
adcl
test
xchg
int
cmp
aam
adc
stos
push
pop
inc
cmp
mov
sbb
sbb
lods
ficoml
cs
sbb
fldl2t
xchg
mov
sub
imul
fsub
adc
aas
aaa
adc
cmp
pushf
loope
or
lret
int
xchg
push
icebp
cmp
inc
sti
jge
mov
mov
in
mov
rorl
push
dec
loopne
pop
jmp
sub
sub
sbb
and
cmc
out
insl
lret
push
dec
pop
mov
not
add
mov
addb
jae
pop
push
ret
fsubr
sar
push
ss
push
inc
fidivrs
fidivrl
cmpsl
lods
dec
dec
pusha
out
push
jmp
xchg
scas
adc
out
cmp
in
daa
jns
add
pop
mov
mov
push
nop
push
mov
idiv
adc
lret
dec
js
int3
xchg
cld
inc
adc
aam
sub
and
pop
fdivr
std
mov
icebp
je
mov
arpl
cmp
and
pop
test
jl
xor
les
mov
es
rcrb
or
adc
fcoml
or
push
mov
add
test
mov
mov
push
inc
pop
mov
fidivrl
jmp
jg
sahf
pop
pop
cld
clc
scas
subb
int
lock
fs
fldcw
loope
and
sub
or
push
in
popa
add
icebp
lods
push
mov
inc
sub
jge
fs
xor
pushf
and
cmp
clc
fstps
cmpsl
inc
movsl
mov
clc
mov
dec
and
int3
mov
popf
cmpsl
sub
fcom
shrl
pop
fs
or
inc
int3
fists
sub
dec
push
xorl
ror
inc
mov
imul
xchg
sub
imul
mov
push
es
test
pop
fchs
jge
push
js
cltd
pop
stos
rcrl
jbe
jno
lret
pop
jl
pop
les
jl
jl
jmp
jbe
mov
clc
jg
jns
mov
push
mov
or
inc
and
mov
jo
mov
lods
rol
bound
test
int
adc
sbb
mov
cmp
jne
or
in
xchg
cltd
lds
push
pop
divl
jb
sbb
mov
sub
mov
sbbl
add
aas
shlb
and
cmp
mov
mov
mov
stos
jae
sbb
mov
jmp
cmp
ja
das
inc
mov
add
push
xchg
into
mov
lods
mov
loope
popa
push
inc
in
dec
xchg
mov
imul
out
mov
repz
lods
inc
cs
sti
mov
cmp
pop
sub
les
insl
jnp
push
mov
sbb
sti
test
int3
sbb
pop
cmp
sbb
cli
cmp
imul
call
das
mov
int
sbbb
arpl
push
repnz
sub
inc
fimull
je
ljmp
adc
lcall
das
sub
and
and
jmp
xor
adc
std
xchg
inc
mov
and
lahf
orb
or
adc
test
enter
xlat
mov
pop
imull
cmp
aas
icebp
insl
fnstsw
aad
aaa
xor
adc
pop
movsb
in
push
popa
daa
inc
mov
mov
nop
add
enter
xor
incb
cmp
fistps
out
lds
mov
sbb
cwtl
aam
je
xchg
imul
adc
mov
test
pop
xchg
test
jmp
shll
adc
ret
sbb
sahf
mov
sub
inc
pop
xorl
pop
inc
fcompl
add
add
out
aas
jle
xor
mov
sbb
arpl
cmp
dec
add
jmp
lods
push
xor
and
mov
clc
call
rcrb
xchg
fildl
movsl
jnp
rcl
arpl
add
cmp
jo
cwtl
sbb
cwtl
dec
std
icebp
int
mov
andb
nop
mov
xor
and
and
repnz
hlt
movsb
addr16
xchg
nop
sbb
call
daa
mov
fcmovbe
xchg
test
dec
ljmp
jnp
and
sahf
je
out
inc
and
push
xchg
push
into
push
aad
or
mov
fldl
pop
pusha
scas
sbb
in
jno
jle
loop
pop
xorl
iret
daa
pop
adc
xor
outsb
pop
cltd
mov
push
dec
xor
jae
mov
test
inc
dec
add
sbb
out
clc
fldenv
jnp
xor
addl
das
sub
mov
mov
xchg
pop
stos
mov
push
inc
sbb
cmc
jno
daa
xlat
xor
cmp
adc
jbe
mov
lret
mov
push
jb
ss
jne
in
int3
jg
hlt
add
popa
in
ss
push
adc
sbb
inc
xchg
out
sbb
outsl
or
dec
cld
imul
test
leave
sub
jl
cmp
arpl
pop
pop
adc
ret
std
jo
xor
adc
jmp
dec
pushf
outsb
pop
xchg
inc
xchg
push
and
mov
lods
jne
rcll
movsl
outsb
push
cmc
xchg
push
ja
mov
mov
lret
gs
jnp
fcmovb
js
fadd
inc
ljmp
inc
enter
jbe
sti
sbb
ret
adc
fstl
fwait
je
pop
ljmp
dec
adc
lret
dec
jb
xor
jl
test
add
gs
mov
adc
addl
and
xchg
jp
jno
add
jne
addr16
nop
cmpsl
push
xor
addr16
sbb
xchg
sbb
sbb
lods
xchg
out
jnp
cmp
les
add
mov
lock
push
jnp
mov
inc
xor
in
dec
or
jbe
or
cmp
pushf
adc
cmp
nop
and
sub
imul
jp
aad
popf
scas
popl
push
inc
mov
dec
sbb
xlat
mov
scas
cmp
negl
lods
lret
sub
fsubp
sub
rolb
sahf
dec
sub
idivb
pop
cmp
jne
dec
or
pop
sub
mov
jecxz
cmp
nop
ljmp
clc
mov
dec
into
aaa
cli
cmpsb
push
cmp
out
mov
cld
mov
cs
enter
lea
mov
inc
enter
sbb
pop
arpl
lret
inc
cmc
dec
dec
mov
popa
sbbb
or
imull
fs
pop
rorb
xchg
inc
loop
adc
rorl
cmp
jg
mov
daa
lock
jne
lods
inc
cmp
xchg
cli
push
or
sbb
push
push
inc
popf
ds
jmp
and
rcll
and
adc
in
fwait
push
mov
leave
stos
int3
and
jmp
inc
aaa
xchg
pop
ja
xor
mov
stos
aas
xor
js
cmp
and
and
push
jg
fs
aaa
pop
scas
pop
fldcw
sbb
add
sbb
add
inc
lock
imull
or
clc
xlat
cmpsl
negl
dec
cwtl
add
jecxz
add
push
or
jnp
scas
cwtl
cld
mov
jb
addr16
mov
imulb
sub
lret
or
xor
mov
call
dec
stos
incb
loope
add
cmp
jns
xchg
cmpsl
ds
stc
cmpsb
aad
ja
mov
xchg
push
pop
jb
xor
mov
dec
sti
mov
cmp
sbb
fidivrl
sub
mov
mov
dec
rolb
xchg
sbb
cmp
je
mov
add
xchg
xor
movsw
and
aam
xor
lock
xor
shrb
push
xor
jns
in
sahf
and
adc
fxch
adc
ficoml
iret
lahf
or
outsl
adc
mov
push
adc
out
fildll
loop
rcrb
and
mov
jae
dec
fcomp
loope
insb
pop
fsts
fcomps
idivl
ds
xlat
sahf
out
lea
cmpb
fnstenv
ja
jns
and
rorl
pushf
test
jge
and
faddp
jp
testb
dec
or
adc
enter
hlt
lret
cmp
movsl
stos
lret
jo
shll
mov
push
mov
or
pusha
subb
xchg
push
pop
clc
and
mov
sub
pop
icebp
lods
hlt
addl
pop
pop
cmp
add
aam
xor
jle
hlt
movsl
cld
adc
dec
data16
cmp
pop
mov
xchg
clc
sbb
mov
cmp
sbb
aas
inc
fcoms
std
mov
mov
mov
push
pop
je
mov
decl
ror
mov
out
and
and
shll
es
xorb
inc
adc
push
push
mov
lods
mov
into
inc
mov
sbb
fs
pop
push
push
lret
gs
repnz
inc
fwait
dec
lret
or
xor
xchg
adc
out
jo
inc
mov
jg
mov
hlt
dec
neg
sbb
or
or
movb
mov
rcl
sbb
movsl
pop
dec
mov
adcl
fcmove
and
add
ss
push
std
or
dec
icebp
insb
fsubs
xor
adc
push
das
popa
adc
xor
cld
insl
xchg
cmp
aad
or
or
cmc
out
insl
lods
decl
pop
jmp
mov
cmp
xchg
and
jns
xor
orl
sub
loopne
lret
mov
cltd
ja
mov
push
loope
xor
lock
lds
fstl
int3
xchg
movsl
mov
je
or
and
add
inc
jl
filds
ds
xchg
mov
shll
fistps
loop
lcall
adc
andl
ret
adc
fcoml
push
cwtl
dec
nop
loope
outsl
out
push
mov
stc
xor
stos
aam
adc
adc
aaa
pop
lret
or
push
push
hlt
push
scas
jle
outsb
fildll
aad
pop
stc
adc
pop
cmp
or
test
jbe
mov
and
insb
adc
cmp
adc
out
xchg
enter
mov
jge
add
minps
cli
lret
or
xchg
jmp
jno
aas
subl
ret
mov
dec
test
dec
adc
cwtl
stos
dec
into
jnp
bound
or
add
push
aaa
sbb
shll
ret
in
iret
sbb
loop
sub
mov
ja
cmp
inc
push
mov
mov
pop
insl
mov
and
ja
cs
and
cwtl
iret
or
imul
push
inc
shr
mov
data16
xor
out
xchg
xor
mov
stc
outsl
inc
inc
pop
test
int
lock
mov
adc
sub
cli
daa
in
and
icebp
add
cmp
imul
scas
mov
in
jecxz
scas
loop
repnz
mov
mov
rcrl
imul
out
sub
pop
out
fstps
cmpsl
jno
jge
lods
pop
loop
xchg
sub
sbb
pusha
xor
mov
push
jns
dec
pusha
sub
lods
pop
sub
mov
jns
mov
ja
dec
pop
insl
xor
pop
jecxz
pop
lods
pop
cmp
or
push
add
je
and
ret
dec
sarb
outsb
jl
loopne
jne
shlb
sbb
notb
add
imul
icebp
mov
xchg
dec
mov
dec
adc
orl
hlt
daa
adc
fs
out
sub
jp
xor
add
dec
mov
inc
mov
jecxz
mov
movsb
repz
mov
pusha
icebp
lock
mov
jb
mov
lock
repnz
or
and
or
jge
mov
fistps
cmc
push
sub
pop
outsl
jp
rorl
imul
sbb
mov
and
sub
mov
dec
and
jmp
sti
lods
orl
repnz
push
adc
insl
scas
lods
xor
cli
js
incl
mov
stos
test
sbb
cmp
pushf
test
mov
cmp
ljmp
in
and
std
sbb
sub
sub
pop
or
js
mov
cwtl
enter
test
mov
clc
push
sub
sub
pop
or
js
mov
cwtl
enter
test
mov
clc
push
sub
sub
pop
or
js
mov
cwtl
enter
test
mov
clc
push
sub
sub
pop
or
js
mov
xor
fmul
filds
daa
ja
addr16
push
mov
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
js
push
adc
inc
pop
sbb
clc
mov
leave
xchg
mov
rorl
xor
dec
adc
arpl
jae
inc
or
mov
enter
test
cwtl
ret
mov
js
push
or
jp
imul
or
inc
lret
mov
popf
in
xchg
out
daa
and
pop
ja
cwtl
icebp
mov
xchg
cltd
sub
cmp
or
cld
or
iret
leave
aas
mov
add
mov
call
cmc
fildl
xchg
aaa
xchg
inc
test
ret
add
mov
pop
cmp
jae
aaa
push
mov
fdivrs
or
call
cmp
push
and
inc
cmp
lods
jne
insl
dec
arpl
or
dec
mov
sarb
inc
sub
adc
mov
xchg
jmp
push
jle
ret
mov
add
fdivr
pop
ficoml
scas
mov
loopne
call
cmp
ret
mov
push
or
arpl
jae
pop
or
mov
enter
test
cwtl
ret
mov
xor
and
cmp
or
clc
lret
fcom
mov
mov
ret
into
mov
cmp
adc
pusha
daa
pop
aas
popf
fidivrl
sarb
scas
std
mov
bound
aaa
bound
je
sub
inc
or
mov
enter
test
cwtl
ret
mov
js
push
adc
arpl
jae
inc
or
mov
enter
test
cwtl
ret
mov
js
dec
mov
and
pop
pop
inc
test
pop
cld
cmp
adc
ds
fcomps
stc
std
loopne
sbb
arpl
sbb
dec
in
push
xchg
in
les
adc
sti
stos
bound
pop
lock
sub
mov
shr
sahf
cmc
lds
in
mov
test
lcall
add
inc
icebp
icebp
adc
ljmp
and
adc
enter
dec
mov
insl
popa
pmulhw
gs
sbb
pop
test
mov
popa
loope
divl
xchg
rorb
cltd
inc
or
rol
mov
pop
aam
enter
es
int3
cmp
sbb
js
mov
sub
pushf
cmp
mov
inc
cmc
push
add
hlt
sub
lret
shll
dec
icebp
mov
mov
and
scas
and
cmp
cltd
jnp
in
fimull
insb
lahf
and
loopne
inc
inc
popf
sbb
adc
aas
test
out
aad
pop
insl
xor
dec
fimuls
push
sbb
stos
dec
lds
shll
scas
dec
mov
push
cld
lret
pop
test
add
jae
pop
push
es
ljmp
pop
push
pop
sbb
add
outsb
mov
mov
lcall
mov
adc
popf
pop
lods
push
jg
pop
push
sub
popf
cltd
test
jno
subl
les
fwait
addr16
int3
xchg
add
push
lea
arpl
scas
pop
dec
insb
fcoml
jb
addr16
lret
test
gs
mov
push
push
cld
rcrl
orb
mov
sub
mov
inc
adc
push
cld
lcall
stos
push
imul
adc
inc
loope
xor
jl
test
sub
dec
cmpsl
lret
jo
mov
jmp
pop
sbb
nop
stos
adc
mov
dec
fstp
aad
mov
cmp
mov
js
sub
ret
pop
sub
inc
adc
std
jecxz
inc
mov
pop
adcb
mov
push
mov
dec
dec
jecxz
sub
jae
pop
into
roll
das
cbtw
and
mov
sub
xchg
xor
cmpsb
loopne
mov
sarl
and
pop
adc
inc
xor
jb
in
pop
lods
and
cmp
sbb
outsl
ret
mov
or
dec
mov
insb
fcmove
imul
imul
sar
cmp
sbb
out
out
ret
mov
insb
xor
xor
dec
out
xchg
xchg
jge
imul
outsl
xchg
jbe
into
cmp
sbb
mov
popf
mov
xor
and
jne
xchg
inc
ret
pop
enter
mov
xor
stos
jae
repnz
es
out
adc
mov
inc
push
es
adc
test
xchg
loop
and
clc
xchg
dec
test
out
inc
cmp
js
cmc
mov
mov
dec
push
stc
loopne
push
lods
and
rclb
cmp
pushf
out
sti
arpl
pop
mov
adc
sbb
stos
sarl
push
xor
out
ss
arpl
mov
dec
fbstp
xor
out
int
cmp
push
pop
dec
pusha
int3
adc
iret
inc
pusha
mov
es
push
cmp
adc
and
insl
jp
inc
adc
adcb
mov
movsb
pusha
shlb
dec
dec
dec
and
inc
dec
das
jae
dec
ret
js
sahf
or
popf
jae
mov
sbb
int
xor
scas
add
push
lds
test
adc
adc
jo
sahf
mov
cmp
in
decl
xor
and
push
lahf
cld
stos
push
aam
jecxz
or
call
xchg
enter
mov
mov
popf
xor
adc
cmc
outsl
add
cmp
mov
xor
out
cld
insl
push
xchg
dec
fsts
push
movsb
int3
pop
pop
inc
test
hlt
push
dec
fisubl
and
inc
inc
push
das
jmp
pop
ljmp
es
adcl
aas
xchg
sahf
out
test
popf
imul
mov
test
int3
repnz
mov
test
mov
enter
dec
daa
mov
xor
ljmp
dec
stc
imul
lock
or
and
jbe
sub
in
xor
cli
adc
pop
hlt
int
fcmovnu
pop
imul
sub
mov
out
in
jnp
pop
das
int
add
lahf
mov
mov
je
repnz
cmp
pop
inc
addl
cmc
sbb
inc
jl
xor
add
rolb
push
je
insb
add
jge
insb
xchg
add
dec
pop
enter
ret
imul
call
cmp
das
daa
icebp
xor
jnp
std
movl
dec
xor
aas
xor
jl
cmp
xchg
jo
jae
clc
or
enter
jecxz
sub
mov
sub
xor
sbb
adc
sti
and
cmp
aaa
jmp
add
mov
jns
jge
cwtl
mov
pop
push
scas
outsb
xchg
mov
add
jae
popa
fiadds
insl
cmpsb
and
cmp
adc
mov
mov
sbb
in
sbb
js
cmpsb
mov
or
mov
fwait
icebp
or
lret
repnz
es
ret
in
xor
pop
cmp
in
cmp
xor
test
add
sahf
leave
mov
into
pop
insb
dec
das
cmpsb
mov
popf
add
pop
out
popf
mov
nop
aad
pop
sbb
jge
jp
test
jl
cmp
push
arpl
pop
int
jg
jle
dec
mov
scas
push
enter
mov
cld
jnp
pushw
fcmove
push
cli
aas
cli
mov
ljmp
xchg
mov
sahf
int3
testl
mov
les
jl
xor
or
jle
cmp
int
and
sub
jg
outsb
cmc
and
mov
and
shll
int
js
jno
cmp
das
xor
adc
sub
sahf
shld
push
ljmp
ljmp
jmp
cmp
inc
mov
cmpsl
mov
pop
adc
daa
test
add
cmp
dec
push
iret
mov
test
into
popa
imul
push
or
pop
out
and
in
or
mov
mov
wbinvd
mov
jbe
mov
fadd
push
jo
mov
sbb
mov
or
dec
push
inc
in
dec
scas
icebp
mov
push
mov
es
in
inc
aad
mov
aas
and
xchg
stos
test
movsl
ret
call
jns
and
fchs
rclb
xchg
lret
sub
popf
fsts
test
sub
int
repnz
jmp
jge
lret
addr16
sub
push
cmp
roll
loopne
aas
in
rol
push
and
dec
cld
aaa
mov
and
rclb
ret
add
mov
pop
imul
repz
xor
ss
pusha
idivb
fisubl
push
inc
cli
add
pop
xchg
sbb
xchg
test
icebp
orl
add
xor
nop
js
in
pop
movdq2q
mov
mov
xchg
jb
sbb
ret
xor
mov
and
pushf
or
scas
out
hlt
jbe
js
mov
push
or
xchg
mov
por
xchg
jg
outsl
fwait
cltd
dec
test
inc
push
in
lret
movsl
mov
push
sub
dec
sbb
mov
test
addb
add
cmp
jnp
mov
or
jb
pmulhuw
jp
jns
hlt
and
fisttps
fwait
into
inc
divl
mov
cmc
sbb
loopne
or
fidivrl
add
aad
jp
sbb
sub
xchg
add
inc
pop
xor
out
jbe
mov
jb
out
jns
mov
popl
dec
dec
inc
shlb
popf
inc
jae
ss
push
jge
lahf
mov
hlt
test
ret
clc
test
addr16
ja
int3
loop
cli
push
call
jbe,pt
fidivrl
mov
cld
test
dec
xchg
cmp
jbe
or
shlb
out
dec
adc
push
dec
adc
push
push
mov
sub
daa
repnz
fs
sbb
dec
in
aam
or
cmp
inc
sahf
xor
xchg
cmp
cmp
shrb
push
test
fimull
cmp
std
push
xor
fldt
mov
mov
dec
enter
sub
bound
mov
into
jae
inc
inc
rclb
cmp
sahf
fstpl
or
in
sarb
nop
or
mov
inc
sbb
or
push
inc
adc
lds
pop
sub
push
les
pop
imul
loope
mov
repz
int3
or
in
lds
in
test
xchg
ds
push
cmp
dec
push
sub
mov
mov
mov
adc
dec
and
cld
and
cli
push
shll
rorl
or
push
ja
out
jmp
ret
jae
stos
add
xor
nop
popl
push
push
test
sub
inc
leave
out
scas
jno
dec
enter
lret
in
out
test
movsl
lahf
sti
leave
sbb
dec
lret
subb
add
fs
daa
nop
bnd
fidivrs
cmp
sbb
shll
pushf
mov
lock
test
bound
xor
int3
ret
jnp
aaa
xor
lods
leave
add
mov
out
adc
mov
mov
bound
push
pusha
fnstenv
dec
xor
push
sbb
adcl
aad
movsb
inc
and
lahf
cwtl
dec
mov
adc
pop
test
inc
cld
idivl
out
inc
and
loope
xchg
or
cs
mov
xor
push
sub
notb
xorl
nop
pop
ret
cmp
psrad
mov
test
inc
or
jl
pop
sbbb
and
popf
mov
sub
scas
push
out
dec
rorw
jmp
jno
test
shrl
fistpl
jp
cld
inc
xchg
sub
xchg
cmc
lret
pop
or
popa
aaa
jnp
adc
das
addb
lahf
mov
sub
pop
pop
adc
adc
push
in
repnz
and
mov
pop
iret
out
xchg
into
inc
scas
out
sub
dec
stc
dec
arpl
mov
rcll
lret
cmp
movsl
fs
mov
test
fxch
adc
int
jg
scas
adc
pop
in
ret
cmpsl
jnp
in
shll
inc
and
mov
adc
iret
outsl
shlb
xchg
cmc
mov
pop
dec
es
pusha
sub
imul
cltd
jno
hlt
mov
lret
add
lret
cld
jbe
xchg
and
jmp
or
fldenv
jmp
pop
fwait
adc
mov
out
jge
cmp
jg
popf
cmp
mov
in
fisubrs
xor
mov
imul
adc
pop
ficompl
cvtpi2ps
arpl
pop
movsl
push
lret
mov
mov
outsl
push
movsl
cmpsb
pop
fisubs
inc
dec
sub
scas
shl
mov
test
xor
xlat
outsl
mov
sub
lret
pop
test
lock
popa
pop
jg
pop
hlt
mov
push
outsb
jnp
cmpsb
repnz
loope
push
mov
cmp
lret
leave
pusha
int
push
fstpt
cld
pusha
clc
adc
out
or
ret
push
push
mov
out
ret
dec
mov
jge
and
imul
sti
cli
out
adc
icebp
add
sarl
jp
in
divl
ret
mov
inc
test
mov
vpunpcklqdq
mov
in
push
ds
fidivl
mov
jne
mov
int3
data16
pop
push
fwait
bnd
mov
add
std
fstps
or
mov
loop
jmp
ds
dec
out
test
les
loopne
add
and
sbbb
mov
sbb
mov
daa
inc
fnstcw
icebp
pop
jl
inc
jns
push
lcall
call
adc
stos
fcmove
hlt
out
pop
xchg
loope
sti
xchg
aam
stc
adc
lcall
loop
js
push
push
lret
imul
jle
cmpsl
cmpsl
lods
mov
fiaddl
es
sbb
xchg
jg
sbb
cltd
cmpsl
incl
loopne
sbb
sub
in
scas
mov
insl
and
adc
mov
jo
out
mov
test
enter
orb
sbb
and
xchg
pop
pop
fsts
into
or
mov
cltd
js
stos
dec
push
pop
ror
mov
mov
ret
out
adc
pusha
lods
stos
stos
mov
mov
out
test
sti
jns
pushf
xchg
cs
cli
xlat
mov
sbb
les
jle
hlt
sti
test
out
xchg
sbb
mov
adc
in
in
mov
cmc
pop
cli
das
outsl
mov
lds
mov
cmp
mov
push
push
xchg
mov
cltd
add
cld
dec
js
xor
jg
stos
loop
loope
pop
pop
xchg
pop
in
or
subb
mov
stos
test
dec
insl
ds
or
dec
stos
mov
xor
loope
mov
sahf
sbb
std
mov
adcb
sub
int
sbb
mov
int
stc
inc
loopne
lret
pop
clc
dec
sub
xor
mov
dec
dec
jge
lahf
and
jmp
pop
xchg
mov
cmp
mov
pop
mov
insl
adc
fstsw
sbb
add
or
ret
sbb
cwtl
mov
sbb
add
mov
cmp
xor
loope
loopne
mov
push
pop
popf
sbb
fs
add
div
xor
pushl
repz
jbe
adc
push
lds
sahf
cmp
shrl
enter
mov
cmp
test
rol
aas
push
xchg
icebp
into
clc
into
ljmp
lahf
fldenv
test
push
nop
mov
sub
push
dec
pop
cmp
les
cmp
bound
sub
dec
pop
push
aam
int
popa
movsl
jecxz
icebp
popf
cmp
inc
ret
dec
cmp
mov
lret
sbb
adc
aam
xchg
in
and
jae
xor
jae
out
pop
inc
jge
jp
incl
mov
xor
and
je
orl
jg
add
lea
mov
pop
maskmovq
imull
mov
or
jg
push
inc
fists
loopne
push
fs
cli
mov
push
push
mov
lods
xchg
mov
push
lods
stc
std
lock
xor
mov
call
mov
sub
in
loop
push
popf
cmp
mov
mov
jp
mov
cmp
or
je
addr16
sbb
xor
fwait
dec
mov
fdivrs
fstps
adc
or
repnz
loopne
adc
xchg
stos
pop
push
cmpsb
fidivrs
jns
addr16
jb
mov
xor
imul
and
inc
inc
out
ja
nop
aam
stc
mov
or
jmp
cmp
test
adc
das
lret
mov
sub
popf
das
popa
xchg
movsb
lods
sbb
add
dec
lea
jne
test
adc
out
ret
imul
fwait
pop
fnsave
fisubrl
push
out
sub
int3
mov
jmp
lods
xchg
frstor
ret
mov
sbb
xchg
xor
inc
push
fdivrs
loop
sbb
sti
xchg
dec
xor
sbb
mov
cli
sub
mov
push
cmp
or
mov
movsb
cmp
shlb
jnp
sbb
xchg
popf
lahf
jnp
mov
cmpsl
push
xor
dec
icebp
das
notl
sbb
mov
hlt
mov
iret
ret
jecxz
fmul
fmul
add
ds
into
inc
mov
and
fsubl
mov
dec
aas
pause
int3
mov
cmp
xor
rcrb
icebp
mov
test
inc
push
mov
shrl
pop
push
inc
mov
fisubrs
mov
outsb
mov
es
lods
xor
jns
repz
rolb
sbb
mov
inc
sbb
insb
in
insl
ficompl
sbb
push
orl
mov
addr16
jo
loopne
out
and
cld
fucomi
jle
aaa
imul
lret
xor
in
add
push
inc
fstps
repz
int
push
pop
inc
mov
sbb
jp
ljmp
mov
imulb
nop
push
sub
int3
xor
les
sub
push
jns
xor
ljmp
scas
push
jae
sub
adc
lods
sbb
jbe
notl
popf
arpl
repz
xchg
imul
jb
xchg
or
inc
insl
xchg
fiaddl
jmp
int3
in
sbbb
mov
adc
sub
dec
sti
je
mov
out
lods
push
cs
ss
int
lahf
mov
hlt
xchg
test
shrb
ficompl
popa
or
fisubrs
jmp
sbb
pop
adc
out
sbb
ficoml
arpl
imull
je
stos
in
and
mov
xchg
sbb
insl
pop
xchg
arpl
ljmp
pop
lcall
push
dec
dec
sbb
mov
push
sbb
cli
dec
nop
lret
push
jbe
jo
ja
or
movsb
aam
lret
leave
lahf
jns
jg
pop
das
sbb
cmp
fsubrs
inc
inc
mov
aaa
cli
dec
ffreep
mov
bound
filds
lds
loope
mov
xchg
mov
subb
xchg
add
out
inc
push
add
inc
aam
pop
jle
mov
aas
cmp
xor
mov
sbb
lahf
in
or
inc
xor
or
stos
adc
lcall
testb
loopne
stos
mov
insl
mov
push
mov
scas
sbb
sub
call
mov
mov
adc
jl
sub
pop
cli
insl
mov
fs
rcr
repz
out
repnz
jns
sbb
shr
add
jo
add
cmp
mov
test
inc
aam
js
dec
les
jmp
or
mov
mov
fst
lret
pop
and
adc
dec
jns
test
sbb
xor
test
fldenv
inc
fs
sub
jge
cmpsl
add
imull
inc
jo
loopne
bound
out
imul
insl
push
fiaddl
loope
jo
mov
mulb
hlt
mov
jb
fdivl
dec
iret
popa
or
inc
std
out
xchg
lds
or
push
cmpsl
jmp
sub
jle
je
movsb
cld
or
ds
out
adc
push
ss
cmp
iret
out
imul
movsb
inc
inc
mov
cmp
add
inc
and
arpl
fldcw
sub
add
testl
sub
test
xchg
nop
jmp
mov
xlat
cmp
cmp
out
dec
pop
inc
push
scas
push
ja
inc
cs
push
cmp
push
xor
xor
inc
inc
lcall
add
fadd
lret
inc
mov
paddusb
subl
mov
sti
dec
push
sbb
stos
loopne
fisttpl
lds
adc
mov
cmpsb
jne
jge
add
loopne
xchg
arpl
inc
mov
lcall
cmpsl
out
inc
rcll
add
scas
and
out
adc
jg
bound
xlat
test
mov
cltd
scas
and
sbb
and
add
mov
lea
xchg
xor
jge
fnsave
mov
adc
cld
sub
out
mov
add
out
stos
sbb
cmp
test
jne
or
mov
jg
mov
pusha
fcmovnbe
arpl
xor
xor
sahf
jno
jge
fstpt
mov
shrb
mov
std
push
sbb
movsl
push
arpl
cmp
lock
xchg
adc
jp
add
je,pt
mov
pop
jne
mov
movsb
clc
stos
jno
repz
test
cmp
sub
xchg
rcrl
mov
push
xchg
mov
xchg
aas
cmp
pop
sub
lret
pop
movsl
iret
out
scas
mov
dec
push
repz
and
jne
xor
aad
fs
data16
movsb
mov
ret
stos
dec
mov
outsb
call
adc
leave
in
dec
push
loope
sbb
add
mov
inc
inc
shlb
repz
mov
in
es
adc
sti
inc
push
inc
incl
push
ss
aam
roll
or
sbb
movsb
mov
sub
in
dec
adc
arpl
jae
inc
or
mov
enter
test
cwtl
ret
mov
js
push
adc
arpl
jae
inc
or
mov
enter
test
cwtl
ret
mov
js
call
adc
inc
mov
mov
enter
test
cwtl
ret
js
push
adc
arpl
jae
inc
or
mov
enter
fmuls
cmp
sub
mov
sub
cmpl
mov
je
cmp
je
push
lea
push
push
movb
call
call
mov
xor
xor
call
mov
xor
call
mov
mov
lea
push
call
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
pop
pop
test
jne
mov
not
mov
movb
or
mov
leave
ret
fs
je
inc
daa
push
aaa
sub
xor
ja
xchg
xchg
les
mov
test
xchg
mull
pop
inc
daa
push
aaa
and
xor
add
adc
in
hlt
xchg
les
mov
test
xchg
mull
pop
inc
daa
push
aaa
and
xor
add
adc
in
xlat
lret
mov
mov
movsb
xchg
mov
cmp
adc
adc
fldt
andl
sub
ffreep
into
cmpsl
shl
sub
aas
insb
sarl
mov
mov
ss
test
imul
pop
cmp
cmp
mov
shl
lds
fwait
adc
shrl
sbb
fmul
pusha
dec
negb
loope
aam
push
ja
aas
in
sbb
xchg
push
and
inc
pop
mov
adc
jns
and
xchg
mov
jl
pop
aaa
lcall
fildl
test
cwtl
lahf
and
ret
dec
pop
pop
test
sysenter
xchg
jnp
xchg
cmpsl
pop
orb
mov
repnz
mov
out
inc
repnz
mull
daa
push
aaa
and
xor
add
adc
in
hlt
xchg
les
mov
test
xchg
mov
push
les
popa
adc
sub
imul
pop
xchg
jmp
mov
xchg
fldenv
stos
cmc
scas
loope
in
adc
pop
daa
daa
adc
jns
or
xchg
ret
mov
test
mov
add
arpl
push
xor
sub
add
adc
in
hlt
xchg
les
mov
test
xchg
mull
pop
inc
daa
push
aaa
and
xor
add
adc
in
hlt
xchg
les
mov
test
xchg
mull
add
aad
out
orb
out
stos
repz
fidivrs
enter
out
dec
out
add
and
fiaddl
pusha
cmp
mov
xor
popf
aam
or
jns
mov
in
rorl
fiadds
add
cmpsb
les
dec
pop
pushf
push
push
outsl
addl
jo
lcall
fimuls
cmpb
mov
aaa
sub
fsubrl
sub
outsl
daa
add
aaa
fwait
pop
dec
pop
testb
add
imul
jg
mov
cld
sub
sti
imul
cmpsl
cmpsl
xor
mov
js
lods
pop
dec
push
xchg
sbb
into
stos
cmp
and
mov
xchg
adc
daa
cmp
scas
popf
xorl
xchg
and
std
xor
sub
add
jmp
outsl
pushf
jl
cli
repz
idivl
outsb
fcoms
rol
ljmp
ret
inc
inc
sbb
ss
test
lret
add
andl
push
and
pop
mov
ss
cmp
jnp
test
mov
imul
lock
and
mov
mov
jbe
ljmp
rclb
orb
and
mov
lods
lods
xchg
aam
or
into
pop
mov
out
sub
xor
int3
push
bound
mov
or
aaa
add
push
pop
outsl
xchg
pop
mov
testb
bnd
inc
in
sbb
mov
aaa
leave
ljmp
xchg
repnz
ljmp
pop
outsl
adc
or
aad
xor
sti
and
push
pop
mov
mov
movsl
mov
icebp
or
push
ss
adc
jp
in
popa
add
int3
rorl
xchg
testb
idivb
sub
sarb
dec
outsb
imul
xor
mov
sub
pop
sbb
jno
and
mov
inc
leave
jle
xor
pop
mov
mov
js
mov
shlb
jae
cmpsl
pop
mov
pop
loope
inc
mov
ret
mov
andb
lahf
inc
pop
pop
lahf
or
dec
pop
jno
dec
jg
inc
pop
aas
daa
nop
adc
push
subl
stos
cmp
jle
aas
popa
and
inc
loop
and
jns
dec
and
mov
nop
out
sub
aas
mov
andl
jno
mov
or
jo
dec
fwait
loopne
jnp
sbb
out
sti
add
and
pop
jg
gs
scas
ret
loope
dec
mov
imulb
fucompp
hlt
xchg
fisubrl
mov
xchg
dec
in
loop
xchg
or
inc
imul
adc
aam
or
dec
mov
pop
xor
dec
dec
sbb
mov
out
inc
add
inc
lret
outsb
sub
sahf
test
in
and
pop
pop
or
push
ja
imul
fadd
pop
jae
sahf
aam
test
mov
dec
mov
popa
dec
movsb
push
mov
int3
enter
pop
push
jg
imul
jp
jno
addr16
mov
call
jbe
dec
inc
shl
or
mov
in
mov
scas
xchg
jne
inc
or
cld
sub
ljmp
or
mov
jno
pop
lods
pop
and
push
xchg
mov
xchg
pop
mov
aas
pop
int3
jne
aam
cli
jbe,pn
inc
clc
jb,pn
and
icebp
aaa
das
jg
dec
jp
clc
movsl
and
mov
push
rcll
and
arpl
movsl
push
mov
push
imul
sahf
clc
sbb
xchg
sbb
xchg
push
shr
lds
mov
fsubr
xchg
jg
test
je
push
cmp
cmp
lcall
in
mov
sbb
fisttps
adc
push
out
aad
sti
outsb
adc
mov
push
js
mov
sbb
jnp
cmp
nop
inc
flds
fld
es
sub
pushf
add
pop
mov
inc
cmp
adc
cld
dec
pop
and
xchg
inc
stos
les
sbb
xchg
cmpsb
add
roll
push
jno,pt
mov
insb
pause
cs
imul
loop
fdivrp
sbb
or
movsb
rclb
mov
fwait
icebp
stos
or
insb
or
lods
jne
push
idiv
data16
mov
sub
out
or
insb
push
shlb
mov
fisubl
xchg
mov
pop
fmull
xchg
or
fcomps
xor
jnp
xor
or
cmp
in
mov
add
nop
stos
push
insb
out
fsub
cmp
xchg
loop
dec
adc
sbb
adcb
mov
shl
cmc
pusha
mov
mov
adc
out
pop
clc
mov
aam
sbb
mov
sahf
loop
pmovmskb
cmp
loope
fimuls
xor
enter
inc
movsb
inc
test
jle
adc
mov
cmp
sbb
movb
imul
dec
xor
ret
cli
and
xor
xor
popa
mov
movsb
ja
bound
pop
movsb
lods
xchg
fucompp
pop
or
inc
pop
adc
dec
cmp
cs
mov
lods
test
sbb
dec
xor
into
aas
inc
rcrl
jp
fldt
mov
fprem1
ljmp
loop
add
scas
push
ja
xor
and
cmp
jb
mov
xlat
addr16
ja
pop
push
sti
mov
sti
gs
test
sahf
jmp
pop
push
inc
dec
int3
sysret
xchg
in
pop
cld
inc
lock
cmp
dec
jp
add
adc
push
jnp
push
das
fsubrp
cmp
int3
xor
cmc
cld
fisttpll
popf
xchg
es
cmpsl
inc
inc
pop
cmpsl
into
and
stc
nop
ficompl
dec
jnp
bound
pop
sbb
sub
std
aam
shlb
cltd
push
push
fst
push
xor
xlat
jmp
int
add
mov
inc
mov
xchg
add
repz
fnstcw
fwait
and
cmp
fists
inc
cmpsl
or
lret
bound
jnp
andl
mov
pusha
rcll
pop
push
test
jne
out
add
push
xor
sahf
cs
or
hlt
mov
jecxz
dec
sbb
mov
xor
dec
add
and
pop
or
loop
mov
into
dec
and
ret
scas
mov
test
icebp
lcall
mov
sbb
xchg
push
repz
js
push
dec
mov
pushf
pop
push
push
aad
mov
xchg
mov
frstor
mov
fwait
sbb
popf
xchg
xorb
jecxz
scas
cwtl
mov
inc
inc
sbb
jbe
cwtl
mov
sti
mov
pop
sbb
mov
mov
jge
jp
mov
dec
outsb
es
fwait
mov
dec
jecxz
faddl
insb
mov
push
out
jmp
aad
xchg
sub
push
jbe
sub
insb
fildl
arpl
xchg
cmp
scas
dec
inc
dec
cltd
test
mov
popf
adc
mov
cmp
int
pop
or
jne
push
je
xchg
pushf
pop
push
push
popl
pop
adc
lahf
sahf
mov
pop
sub
sbb
and
addl
ss
pop
scas
or
inc
and
mov
xor
sbb
mov
jp
mov
push
pusha
lock
out
fidivs
sub
push
in
xchg
and
leave
xor
jp
mov
out
les
popf
std
insb
xchg
push
adc
into
adc
jae
xchg
iret
inc
xchg
cmp
jge
pop
xchg
dec
pop
test
pop
call
daa
sbb
push
jg
in
mov
int3
lahf
inc
push
inc
xchg
jb
mov
sbb
sahf
push
jbe
loope
imul
or
ljmp
inc
fstpt
mov
mov
inc
xchg
loop
pop
sbb
adc
cmp
je
mov
xor
adc
dec
fwait
mov
lahf
cmpsl
xor
sbb
roll
sti
stc
lds
into
sub
bound
inc
jecxz
shl
mov
jno
pop
xor
mov
gs
sub
loopne
or
mov
pushf
pop
testl
pop
mov
add
sti
inc
fcmove
push
sub
out
or
mov
mov
aaa
stos
and
fwait
fwait
xchg
and
adc
sbb
int
out
pop
inc
cmp
mov
sbb
push
iret
test
cmpsb
push
dec
js
jl
push
sub
decb
fs
repnz
imul
pop
adc
dec
inc
jns
mov
testb
push
and
cmpsl
mov
cmp
push
mov
jne
mov
xor
mov
daa
bound
xchg
rcrl
mull
xor
sub
add
xchg
and
cmp
mov
push
pop
inc
pusha
mov
xchg
and
push
and
cld
insb
iret
popf
mov
int
cmc
jo
push
and
pop
xor
xor
sub
fisttpll
push
sub
lahf
mov
inc
insb
push
addr16
sub
sarl
xchg
dec
gs
aad
xor
add
mull
icebp
cli
adc
mov
cmp
jnp
jnp
cwtl
mov
clc
xchg
stos
cmpsl
leave
xlat
imul
adcb
push
lea
sbb
and
stos
cmp
imul
pop
mov
and
jecxz
or
pop
les
sbb
loope
jp
clc
sar
hlt
add
fsub
adc
adc
sbb
popf
lods
fs
roll
es
and
add
push
cmp
mov
jae
dec
or
outsl
mov
das
enter
and
insb
dec
add
fnsave
jmp
fnstcw
mov
test
fdivr
frstor
sbb
dec
mov
mov
ljmp
loop
mov
dec
xlat
scas
cmp
inc
stc
jno
stos
mov
cmp
mov
mov
movsb
call
ja
mov
pop
sbb
aaa
jmp
insl
adc
jns
lock
lret
pushf
loop
subl
mov
push
fadd
mov
xor
cmp
js
sbb
xor
cmp
pusha
scas
in
add
test
sbb
scas
and
call
scas
cmp
bound
xchg
cwtl
shl
cmc
sbb
outsb
jno
dec
mov
sbb
js
rol
or
inc
dec
call
je
int3
xor
popf
mov
mov
mov
test
test
cmpsb
jno
sub
data16
imul
dec
mov
ret
xchg
adc
nop
push
push
mov
lods
loope
cmpsl
dec
adc
ss
mov
test
sub
jle
mov
mov
fstps
xor
fsubs
clc
sub
adc
adc
lock
sbb
jle
int3
imul
and
testb
push
or
test
imul
dec
mov
xchg
lods
push
xchg
push
push
mov
int3
cmp
test
jbe
mov
insl
cwtl
sarb
dec
into
inc
xor
scas
addr16
mov
mov
js
mov
arpl
scas
xchg
ljmp
and
aad
loope
inc
loop
jo
scas
mov
pusha
adc
lods
jp
cmp
shlb
push
xor
jns
jmp
xchg
ja
es
xor
rdmsr
sub
mov
xchg
fcmovb
fisubs
mov
inc
scas
sub
ja
mov
xchg
xor
ficomps
push
popf
inc
lods
stos
ljmp
jne
jo
stos
fidivs
out
or
cs
xor
jbe
cmp
mov
mov
jp
pop
jae
loopne
in
dec
pop
dec
repnz
notl
testb
in
xlat
add
sahf
push
bound
xchg
insb
sbb
or
pop
in
loope
push
sarl
push
push
xor
lahf
add
mov
fsubrl
pop
ds
and
out
out
mov
inc
fildl
repz
inc
jg,pn
fcmove
mov
push
movsl
shlb
aad
or
pop
test
xor
cld
rorl
adc
jmp
in
push
in
jbe
and
dec
or
std
dec
loope
pushf
lods
add
jae
test
out
or
and
or
mov
loop
mov
mov
jl
mov
outsl
cld
out
leave
in
xchg
imul
add
sub
sub
int
mov
sarl
and
jnp
adc
iret
and
imul
cmp
mov
pop
pop
mov
sahf
sub
xor
in
nop
mov
ror
loope
mov
lahf
test
pushf
loopne
cmp
cld
jmp
sub
push
aas
hlt
jo
sbb
or
daa
mov
imul
push
ss
cmpsl
pop
pop
push
or
dec
adc
and
mov
dec
test
xchg
aas
or
cmc
adc
cmp
push
inc
xor
add
in
xor
adc
or
shlb
mov
xlat
xchg
aaa
adc
add
iret
inc
in
mov
sbb
push
je
mov
and
add
lea
sub
sub
test
inc
add
in
pop
sets
dec
jmp
push
mov
adc
push
jmp
adc
jl
std
test
jmp
dec
mov
clc
and
pop
mov
or
fcomip
data16
and
ds
fwait
popf
pop
pop
adc
inc
mov
xchg
cmpsl
xor
push
bound
fxch
dec
loop
pusha
dec
xchg
adc
xchg
inc
lea
dec
ficoml
inc
rolb
and
xlat
pop
imull
lock
fwait
and
ds
inc
repz
push
movsl
ljmp
pop
mov
aas
data16
test
push
arpl
mov
scas
adc
popa
pop
jbe
fsubl
mov
fcomi
ret
and
xlat
bound
lds
shr
movsb
shrb
ljmp
lock
pcmpeqd
fwait
push
pop
mov
mov
cld
mov
mov
and
adc
mov
dec
mov
mov
out
cwtl
mov
mov
mov
xor
mov
shrb
gs
das
loop
test
cmpsb
cmpsb
test
sti
popa
popa
mov
cwtl
jns
xor
ror
ja
jae
sub
movsl
cmpsb
divl
cs
imul
sbb
iret
mov
push
comiss
test
in
mov
iret
dec
sub
cmpsb
adc
cmpsb
inc
inc
aad
jne
sub
sahf
mov
dec
cmp
out
adc
pop
insb
stos
fmuls
pop
fld
mov
mov
je
jns
jecxz
inc
cmpl
mov
fwait
mov
xchg
in
sti
pop
mov
dec
push
outsl
out
insb
add
fwait
push
int3
adc
aad
jle
jmp
mov
inc
xor
incb
push
jp
lock
xchg
and
repnz
or
bound
mov
or
lret
rolb
ret
out
inc
andb
mov
cwtl
push
stc
cmpsb
call
dec
adc
fldcw
stc
jmp
dec
stos
sbbb
iret
push
push
adc
imul
sti
popl
pop
pop
dec
push
xchg
cmp
or
cmp
pop
js,pn
scas
inc
or
and
sbb
pusha
std
out
jnp
mulb
test
xor
and
fs
out
lods
fldenv
loopne
std
mov
cmp
inc
mov
sub
pop
sbb
mov
pop
mov
mov
sti
jb
add
mov
xchg
cmp
ss
push
outsl
dec
jne
inc
xor
cmp
ja
lods
mov
in
mov
sbb
in
pop
cs
sbb
imul
leave
mov
cwtl
jmp
sbb
jle
mov
sub
mov
cmp
xorb
xchg
mov
pushf
imul
xchg
cs
mov
in
mov
ljmp
add
inc
xchg
dec
push
out
in
cmp
pop
repz
xchg
in
jnp
fmull
movsl
gs
jg
into
cmp
int3
cmpsl
fidivrl
push
or
add
push
push
add
hlt
shr
adc
and
arpl
dec
mov
mov
in
clc
pop
out
mov
jp
or
inc
dec
fdiv
sti
in
mov
sbb
cmp
jg
stos
mov
aam
cmp
xchg
arpl
arpl
clc
mov
fwait
sbb
add
inc
dec
jbe
push
jno
icebp
jno
cmp
aad
das
loopne
out
aas
mov
es
int
fsub
hlt
jg
and
cmp
lahf
jnp
jnp
hlt
jmp
xchg
dec
mov
sbb
mov
lret
les
mov
inc
mov
xor
cmp
cltd
imul
mov
lds
mov
xchg
bound
repnz
xchg
pop
xor
push
popf
in
push
lahf
ds
mov
fiaddl
mov
adc
mov
rolb
daa
sbb
mov
mov
mov
cmp
imul
xchg
push
rorb
inc
leave
adc
sub
mov
pop
cmp
subb
dec
xor
bound
pop
xchg
loopne
cltd
push
fldenv
mov
adc
enter
mov
cmc
xchg
jo
lret
xor
pusha
popf
imul
xchg
call
popa
lret
lods
add
mov
mov
dec
fisubrl
mov
ss
jno
stc
out
or
dec
lods
and
cmpb
lahf
nop
sti
dec
int3
insb
cmp
pushf
pcmpeqw
xor
mov
cmp
cmpsb
adc
inc
pop
scas
sbb
jge
outsl
xchg
lcall
jno
jle
xchg
outsb
xor
and
cmp
pop
cmpsb
enter
inc
mov
data16
inc
out
ss
xchg
xchg
sbb
xchg
inc
xchg
out
xchg
out
leave
iret
lahf
mov
mov
sti
jmp
out
outsl
add
push
add
push
pop
mov
outsb
sub
gs
addr16
fmull
pop
push
ja
sbb
lahf
mov
divb
push
pop
add
lds
data16
push
xchg
scas
pop
jl
cli
in
pop
fildll
mov
xchg
fimuls
lea
xchg
sbb
stc
jb
inc
popa
call
popa
cmp
or
push
mov
xchg
popf
iret
out
les
aad
mov
jnp
push
inc
lea
lods
adc
push
rclb
push
sbb
xor
sub
xchg
sbb
jae
jns
dec
dec
stos
jle
push
aaa
enter
jne
int
add
and
scas
notb
add
mov
pop
mov
xchg
pushf
loop
stc
push
int
xchg
js
aad
mov
out
pop
data16
dec
imul
loopne
cmpsl
mov
das
lcall
xchg
clc
push
or
daa
xchg
pop
add
mov
xor
lret
sahf
outsb
pushf
inc
add
mov
or
sub
rorl
lret
lcall
pop
cwtl
sbb
inc
push
lret
xchg
es
int3
orl
cmpsl
mov
push
dec
xchg
clc
mov
dec
adc
out
sbbb
call
xor
movsb
imul
cmp
xchg
iret
jbe
or
cli
inc
jns
push
js
cmpsl
mov
out
or
mov
mov
and
inc
negb
js
push
jae
clc
adc
int3
std
lret
sbb
int
add
mov
fsubl
loopne
mov
or
dec
jge
add
xor
mov
fwait
aad
ljmp
out
or
pop
into
xor
insl
fdivrs
icebp
andb
push
icebp
orl
and
dec
adc
test
mov
dec
aaa
xlat
imul
xchg
cli
cmp
xchg
pop
jo
and
out
mov
cld
mov
out
inc
jle
movsl
negw
movsl
repnz
add
push
pushf
sbb
jl
jmp
in
shl
cmp
jo
xor
fldt
dec
pop
jns
fdiv
adc
sar
sub
jnp
inc
dec
scas
lds
or
mov
outsl
shr
ds
mov
movl
fildll
call
or
dec
popf
sti
add
jb
outsl
insl
sbb
mov
daa
jnp
aam
sbb
sti
call
push
adc
ss
pop
test
push
pop
bound
rol
push
sbb
int
xor
push
sub
mov
in
cmp
add
mov
or
push
add
jmp
xchg
cmpsb
out
dec
mov
mov
scas
mov
lretw
dec
popa
jmp
adcl
xchg
dec
inc
test
lcallw
push
and
dec
sbb
mov
push
inc
inc
add
xchg
cltd
adc
lahf
or
popa
aam
out
inc
out
mov
ds
push
jle
and
jns
arpl
xchg
pop
jnp
push
aaa
and
xor
add
adc
in
hlt
xchg
les
mov
test
xchg
mull
pop
inc
daa
push
aaa
and
xor
add
adc
in
hlt
xchg
les
mov
test
xchg
mull
pop
inc
daa
push
ss
xor
ja
xchg
xchg
les
mov
test
xchg
mull
pop
inc
daa
push
xor
xor
test
xchg
mov
js
cmp
rorl
sub
or
in
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
jmp
lea
push
pushl
call
lea
push
pushl
call
jmp
call
push
mov
call
xor
leave
ret
xor
dec
cmp
imul
popf
lods
pop
popf
in
std
jne
insl
sbb
cmp
insl
or
std
rep
int
mov
scas
std
cmpsl
or
mov
xor
jge
and
lods
mov
ljmp
inc
sbb
insb
mov
push
jns
adc
xchg
sar
inc
cmp
call
aas
jno
cmp
insl
into
shlb
jns
adc
lods
xor
mov
add
fcmove
push
mov
pop
mov
xor
bound
insl
xor
int3
and
cmp
adc
cmp
sbb
jb
int
xor
xor
jb
clc
in
nop
loop
test
ret
scas
dec
pop
js
cmp
push
into
jge
jo
fwait
insl
loop
dec
call
rcrb
clc
adc
mov
fdivr
popf
cld
dec
or
and
sbb
lea
add
int
fstpl
bound
sbb
push
and
push
and
call
lods
sti
aam
ret
scas
jmp
or
xchg
add
jle
call
into
scas
enter
int3
lods
cmove
sub
dec
sub
jge
in
popf
lods
fstpl
or
dec
cmp
sbb
in
popf
lods
fstpl
or
adc
orl
aam
push
xchg
out
insb
ljmp
cli
stos
mov
subl
inc
sarb
aas
mov
xchg
icebp
imul
inc
call
mov
loop
fadds
sbb
imul
test
mov
cmp
fcmove
pop
lahf
push
in
push
inc
sub
fucomi
push
stos
lock
xchg
rep
adc
or
mov
scas
add
lcall
dec
jg
fcompl
push
adc
fwait
sub
cmp
imul
jns
dec
jmp
test
mov
or
and
dec
mov
cmc
aaa
les
jne
sti
xchg
jne
pop
sub
and
andl
nop
jns
nop
fwait
or
pop
out
mov
pop
jnp
jge
out
add
push
loopne
lods
cmpl
es
rcrb
push
imul
mov
and
aas
adc
cmc
hlt
into
lahf
rcrl
icebp
mov
push
xor
mov
fcoms
cmpsl
mov
and
iret
ljmp
mov
jb
ss
push
imul
or
imul
cmp
jne
ret
cmpsb
lods
or
jne
push
pop
in
mov
mov
cmp
inc
jp
repnz
pop
pop
aaa
std
dec
in
leave
jecxz
xchg
lcall
fstpl
fistps
adc
jo
in
add
shrl
push
sub
mov
cmp
enter
aaa
mov
push
pop
and
inc
nop
out
mov
add
inc
pushl
push
xor
call
fwait
int3
aaa
les
lret
lods
mov
sub
movl
pop
pop
mov
pop
daa
mov
fdivl
cmpsl
fs
xchg
lret
mulb
sub
mov
jno
pusha
outsl
pop
mulb
mov
inc
pusha
add
mov
inc
pop
cmc
cmovbe
cmp
xchg
xchg
rcrb
add
dec
jg
addr16
or
into
cmp
add
invd
mov
adc
mov
mov
push
xchg
mov
adc
fwait
and
fadd
inc
jle
lret
leave
rep
push
lds
adc
push
lret
dec
adc
sbb
sbb
ss
jb
pop
repnz
adc
clc
cli
aaa
inc
jecxz
jl
loopne
dec
daa
push
jae
repz
or
dec
test
ss
insb
xchg
cmp
jg
orb
lret
sbb
or
sbb
in
aam
call
pop
lods
cmpsl
jle
mov
mov
cltd
pusha
fnstcw
push
and
sbb
or
add
mov
ffreep
and
call
fmull
push
mov
repnz
ficoml
cli
cmp
es
push
xchg
cld
sbb
or
nop
repnz
sub
in
mov
or
fadd
stc
or
repnz
pop
andb
pop
adc
mov
push
mov
push
mov
les
aaa
and
or
xor
aas
rolb
dec
test
rcrl
add
pop
out
pop
mov
pop
inc
fisttpll
rorb
push
adc
cmp
mov
mov
loop
stc
iret
iret
mov
xor
ret
fstp
cmp
pop
inc
add
test
shll
cs
adc
dec
les
test
cmp
jno
popf
vpsrad
cmc
mov
xor
cmpsl
mov
daa
ss
adc
cld
dec
ret
xchg
xor
outsb
pop
inc
adc
test
add
aas
cld
lret
jecxz
and
lret
sub
imul
xchg
mov
insl
adcb
sbb
nop
adc
aad
xor
nop
and
cmpl
dec
jge
call
mov
adc
sbb
not
xchg
into
ret
mov
inc
sarl
ss
push
repnz
in
in
mov
push
or
or
mov
jmp
mov
sti
jns
shlb
xlat
les
add
pop
lods
adc
bound
inc
or
jo
cwtl
mov
and
sub
in
mov
add
call
sub
push
insb
hlt
test
aam
xchg
popa
mov
add
out
dec
lret
je
sub
sahf
jge
int
jne
das
bnd
in
push
push
icebp
lret
out
adc
je
inc
push
pop
out
xor
sub
xor
sbb
lahf
bound
movsl
inc
imul
sti
add
cmp
or
daa
aas
mov
xlat
xlat
clc
inc
neg
les
popf
imul
stos
jecxz
fwait
int3
adc
and
xchg
das
cltd
cmp
dec
clc
jb
or
jmp
mov
adc
aas
mov
or
loope
bnd
daa
test
push
fisubrl
dec
dec
jge
imul
jne
lock
and
add
mov
test
sbb
sub
std
popa
jne
push
int
pop
scas
xorl
pop
sbb
rcr
adc
js
mov
inc
repz
push
enter
shlb
push
sbb
sub
stc
aas
mov
jl
movsb
fsubl
arpl
jl
les
outsl
adc
pop
loop
inc
movsl
hlt
dec
jns
push
xor
stc
jb
insb
loopne
jne
xor
out
push
mov
pop
movsb
cmp
mov
mov
inc
mov
inc
mov
popf
xor
outsb
cmp
xchg
push
mov
sub
cmpsb
adc
push
and
and
enter
outsb
sub
stos
lahf
scas
and
aaa
sbb
dec
imul
dec
dec
aas
enter
nop
les
movsl
mov
push
insl
mov
xor
mov
out
in
mov
mov
mov
lahf
push
pop
push
ja
ficoml
and
shll
insl
xor
mov
lret
xchg
push
imul
fbstp
test
mov
sub
inc
out
lahf
jle
pusha
ds
and
mov
cmp
loope
test
sub
xchg
cld
fwait
test
cmp
das
loopne
push
out
filds
sbb
xor
fadds
jl
xchg
repnz
addr16
or
xchg
pop
xchg
cmp
scas
inc
dec
or
cmp
in
and
sub
je
insb
mov
in
lods
mov
inc
jnp
push
mov
cmp
push
les
loopne
push
mov
jo
and
fdivl
pusha
dec
jo
movsl
out
lds
out
and
or
inc
sub
inc
sub
mov
aas
mov
fmul
test
leave
push
sub
xor
or
nop
push
sahf
inc
adc
lcall
pop
sub
lods
loopne
rcrb
dec
sbb
mov
in
jl
mov
inc
mul
out
lods
mov
lea
sub
popf
mov
cmc
stc
pop
adc
rcrb
leave
sahf
add
or
mov
fcmovb
mov
mov
cmp
jp
mov
ja
sub
sub
add
xchg
mov
mov
in
popa
dec
scas
dec
xchg
cmp
mov
mov
ret
pop
inc
and
cmc
xor
icebp
sub
jmp
ret
mov
cmp
sahf
fstl
ret
and
mov
inc
pop
aad
dec
shr
icebp
add
hlt
popa
mov
out
push
mov
loop
shr
and
test
xor
hlt
mov
scas
push
iret
xchg
sbbl
adc
jae
imul
shlb
test
in
loopne
inc
pop
add
xchg
pop
aam
fs
cltd
hlt
das
adc
push
pop
insb
popf
mov
stos
aam
cmp
notl
out
je
push
sbb
lahf
adc
adc
testl
cmpsl
sahf
push
dec
push
cmc
ret
ret
out
sbb
int3
in
scas
push
jae
outsl
add
or
and
lret
xchg
or
sbb
jmp
jae
cs
sub
add
popa
mov
inc
cmc
imul
aas
xchg
and
xchg
jbe
scas
fdivr
stc
ret
aas
outsl
jns
cmpsl
daa
clc
leave
out
es
cmp
hlt
lret
jecxz
jo
ret
aaa
push
push
fcmovnb
dec
xor
fisubrl
mov
jl
push
cmp
movsl
mov
test
test
or
mov
cwtl
scas
addl
js
popa
sbb
mov
inc
rorl
push
cli
mov
sub
sbb
aaa
in
jle
scas
mov
lret
stos
sub
arpl
sub
xchg
adc
push
and
test
mov
xchg
fsincos
fistpll
test
stos
add
jmp
jb
or
push
cmpsb
fwait
out
into
test
sbb
sbbl
scas
movsl
cmpsl
movups
or
push
sahf
cmpsb
cmp
fs
cmp
add
outsb
insb
push
ror
pusha
inc
fs
repz
lods
addr16
xor
mov
mov
insl
xchg
adc
jl
aaa
push
jp
iret
std
pop
mov
sbb
inc
sbb
jae
mov
cs
inc
stos
mov
rcl
push
sub
mov
cmpsl
or
add
out
mov
sahf
sbb
les
xorl
push
sahf
arpl
pop
push
jle
push
pusha
mov
sti
leave
xchg
pop
xchg
decl
inc
mov
loope
add
jp
sbb
mov
jb
int3
push
je
lods
jp
cld
push
xchg
cmp
cmp
aas
sub
icebp
mov
cmp
xor
outsb
push
ror
aaa
mov
cmp
dec
out
pop
sub
lds
mov
lock
mov
out
cwtd
xor
insb
arpl
stc
jo
xorb
mov
mov
popf
mov
sti
or
jb
daa
push
mov
movsb
sub
pop
aaa
je
jo
mov
stos
sahf
ret
dec
sbb
mov
pushf
std
adc
xchg
pop
roll
out
pushf
ss
jecxz
pop
sbb
jle
sub
les
pop
les
pop
repnz
fstpt
dec
xor
push
jae
stos
pop
pop
addr16
xor
push
or
fmuls
scas
call
into
pop
loop
mov
dec
sbb
or
pop
mov
fsubrl
lods
sbb
cmc
les
jle
push
test
scas
rcrl
cmp
out
jnp
sbb
xchg
fstps
cmc
div
popf
push
lret
fdivrl
out
cltd
lahf
fnstenv
fidivrl
sbbl
or
pop
sub
adc
pop
xor
mov
jo
test
out
jmp
into
dec
popf
pop
out
clc
faddl
sub
jl
sbb
jno
enter
stc
mov
sbb
xor
jnp
aad
bound
fldt
add
xor
or
sub
and
dec
aas
rolb
inc
sbbb
or
sbb
scas
lock
hlt
or
xor
push
outsb
inc
aad
out
aas
pop
test
cltd
leave
push
cmp
push
aam
aad
and
insl
jmp
xor
add
and
inc
sub
mov
xchg
loop
pusha
fstps
popa
shl
xlat
cmp
call
test
popf
enter
cmp
sub
pop
and
push
cmpsl
adc
pop
jae
in
fwait
mov
dec
mov
mov
and
xchg
in
sbb
or
sbb
loope
cmpsl
mov
push
notb
popa
adc
sahf
mov
outsl
jb
dec
in
cld
insl
inc
and
leave
pop
xchg
jp
lods
into
loope
dec
nop
and
or
orb
cmpb
fnstcw
sub
out
mov
cmpsb
mov
rorl
mov
adc
out
cmova
pop
push
sbb
daa
or
addr16
jge
push
sub
push
pusha
sbb
push
jmp
push
shl
add
inc
cmp
jb
inc
aam
jnp
cld
lret
push
subl
sub
mov
xor
xor
pop
push
inc
sbb
sub
adcb
mov
mov
add
cwtl
nop
xchg
push
test
outsl
incb
outsb
or
jle
jne
mov
jge
faddl
aam
or
lods
cmpsb
test
ljmp
testb
cmp
xchg
movsl
pop
mov
lret
pop
adc
ljmp
mov
repz
sub
jp
mov
mov
adc
inc
mov
rclb
dec
push
mov
pop
xchg
sub
dec
cmp
pusha
mov
cmpsb
ljmp
mov
ljmp
daa
cmp
lahf
inc
adcb
pop
mov
lret
xchg
xor
push
pop
pop
out
jmp
and
inc
repnz
int3
add
jl
ret
imul
jp
lock
add
cltd
push
hlt
mov
sub
dec
xchg
bound
push
xchg
and
es
sbb
push
xor
xlat
jo
push
out
cmp
pop
mov
pop
inc
std
add
testb
mov
push
es
xchg
fnsave
jbe
fwait
dec
out
mov
xchg
andl
push
push
daa
mov
dec
push
jo
mov
jp
jl
into
xor
mov
or
ret
xor
adc
stos
mov
xorb
and
out
cmp
lret
dec
mov
repnz
dec
into
dec
cs
inc
repnz
pop
hlt
mov
int3
sbb
loope
in
lea
xor
or
pop
shll
pop
int3
test
adc
or
out
sbb
in
cmp
mov
lods
stc
adc
jnp
inc
sarb
pop
fiaddl
sbb
push
add
aam
xchg
sub
fs
mov
sti
test
aas
pop
sub
mov
call
imul
sub
add
or
push
aas
mov
addr16
scas
iret
les
sbb
enter
sub
pop
inc
adc
icebp
cmp
ret
fwait
jmp
add
in
lds
cmp
out
scas
ja
movsb
inc
jae
xchg
dec
mov
cmp
jg
sbb
mov
fwait
insb
add
fadd
pushf
jae
sub
adc
pop
sbb
sub
cld
popa
outsb
add
mov
jmp
add
and
pop
jno
lcall
cmp
mov
lret
pop
fldenv
lcall
subb
stc
shrb
inc
fbld
popa
jg
mov
cwtl
inc
adc
fists
xor
push
jne
mov
repnz
pop
call
out
adc
adc
dec
out
mov
pop
fstps
cmp
aam
adc
adc
mov
push
mov
pop
jne
js
adcl
sbb
mov
hlt
cmc
sub
xchg
xchg
lock
or
mov
out
push
imul
insb
push
sub
xchg
fbstp
insl
out
popf
popf
adc
sub
popf
repnz
xchg
int
and
jmp
jnp
cmp
stc
dec
adcb
xor
cmc
push
jo
cmp
lcall
inc
dec
subb
out
push
mov
sub
inc
mov
cltd
cmp
dec
xlat
jae
pop
or
ret
inc
mov
push
mov
outsl
sbb
outsl
pusha
sti
imul
int3
mov
inc
sbb
in
rolb
test
orb
jecxz
mov
std
jae
inc
adcb
dec
repz
mov
jle
xchg
jae
pop
sbb
adc
outsl
outsl
inc
cmp
fsubl
repnz
les
mov
addb
add
cmp
lret
push
sbb
xlat
out
inc
aaa
shll
xchg
push
push
int
cwtl
pop
mov
insb
or
sub
and
rcrb
sbb
and
fsubr
mov
sub
scas
sbb
xor
xor
nop
mov
mov
sub
aas
fs
push
lret
xchg
jns
jnp
testl
cli
test
ljmp
and
mov
push
xchg
jae
xchg
pop
inc
mov
insb
pop
mov
sbb
jbe
or
lds
outsb
dec
filds
mov
sahf
jno
cmp
mov
inc
mov
adc
jno
jo
popf
cmpl
xchg
cmpsb
push
and
mov
out
fwait
pop
cmpl
xor
sbb
mov
fstl
jbe
movw
loope
inc
notb
out
loope
mov
mov
fwait
pop
dec
pop
hlt
cmc
mov
incl
and
push
outsb
adc
pop
sub
pop
inc
add
ficomps
mov
adc
mov
mov
push
daa
or
cmp
xchg
mov
ljmp
lock
jmp
adc
xchg
leave
hlt
out
ja
inc
sarb
lods
mov
pusha
aam
and
mov
repnz
push
pop
cmpb
daa
xchg
sahf
push
jg
inc
insl
cltd
push
je
push
adc
jge
loope
inc
xchg
jle
dec
in
xor
lret
adc
test
stos
xchg
lea
mov
fs
xchg
xchg
out
cmc
lahf
push
lods
imul
pop
cmpsb
int
mull
sti
ror
in
dec
out
loopne,pt
pop
cmp
loope
jg
lahf
movsb
aas
fs
fnstcw
adc
push
andl
and
fdivl
lcall
outsb
or
mov
outsb
out
hlt
out
in
sub
fsubl
fwait
xchg
sahf
and
clc
push
pop
and
adc
js
inc
std
out
outsl
add
adcl
dec
shl
flds
mov
mov
lock
ret
lahf
movsb
dec
imul
pop
mov
stc
pop
shll
mov
fisubrl
in
inc
mov
push
out
dec
arpl
aas
loopne
out
shll
scas
test
xor
popf
orl
cmp
adc
mov
out
shlb
loopne
cs
cli
jecxz
or
jl
sbb
int3
sbb
fsubrs
cmpsl
mov
pop
xchg
adc
cmp
divl
push
cltd
push
das
or
daa
jbe
xor
test
mov
jb
repnz
pop
fsub
popl
xchg
xorb
sbb
mov
or
push
in
pop
dec
xchg
mov
mov
xchg
sbb
shl
cs
scas
xor
rorl
rorl
add
and
cltd
dec
out
aad
cmpsl
sbb
mov
lods
mov
lods
ss
into
and
notb
test
and
in
mov
pop
fsts
xchg
movsb
clc
jnp
out
lcall
data16
jl
mov
cmc
xchg
out
push
aas
mov
or
les
shll
inc
sub
out
add
mov
mov
call
mov
cld
aam
arpl
and
test
cmc
clc
sahf
add
frstor
xor
fs
mov
out
sarl
and
pushl
xchg
gs
sub
inc
sbb
mov
xchg
and
mov
adc
aas
les
push
daa
decb
call
mov
xchg
loope
insb
popf
cmpsl
movsl
mov
addr16
mov
rcl
test
imul
in
addr16
mov
sbb
test
sbb
xchg
sti
lret
in
jae
xorl
adc
ljmp
repz
lret
arpl
stos
fdivrs
bound
sbb
push
pop
sub
in
push
sub
xchg
pop
je
movsb
lds
in
loop
adc
add
xchg
add
dec
xchg
jno
dec
test
or
arpl
fisubs
out
sub
pop
popa
xor
clc
shlb
repnz
ja
js
pop
jge
mov
inc
fmuls
jae
lods
out
add
test
inc
mov
les
lods
jb
push
pop
lods
cmpsl
pop
inc
push
dec
pop
ss
lock
adc
lcall
ja
adc
jno
sub
imul
sahf
pop
or
imul
addb
ds
sub
sub
jb
je
fidivl
xor
mov
mov
aas
sahf
hlt
sub
push
adc
subb
cwtl
cmp
or
and
inc
jb
mov
jmp
push
in
pop
pop
and
jb
outsb
ds
pop
sbb
inc
sub
jecxz
mov
xor
ds
rcll
sti
pusha
dec
scas
xchg
imul
repnz
roll
out
invd
mov
outsl
jl
popa
xchg
outsl
out
mov
jp
stos
or
imul
fdivr
mov
outsb
xor
pop
mov
dec
aad
inc
jl
nop
rorb
repz
or
stos
push
cltd
push
mov
shrb
xchg
into
jp
xchg
jle
mov
cmp
insl
or
popf
lods
fstpl
or
dec
cmp
sbb
in
popf
lods
fstpl
or
dec
cmp
sbb
or
leave
mov
cltd
in
mov
sbb
cmp
insl
lea
lea
aaa
ja
int
lret
and
jb
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
jns
stc
clc
leave
enter
adc
cwtl
imul
dec
sub
cmp
jmp
enter
test
test
mov
js
dec
pop
pop
sub
cmp
or
sbb
icebp
stc
loope
rcr
shrb
cltd
subb
pop
sub
cmp
dec
addr16
dec
sub
ja
movsb
stc
mov
pusha
cltd
jns
imul
inc
dec
or
shrb
popa
mov
rcrl
add
addr16
xchg
aam
add
loope
insb
je
xchg
sti
mov
xchg
add
sub
and
orl
aaa
xor
test
cld
cltd
sbb
dec
mov
aad
adc
mov
adc
push
pop
lcall
int
sbbb
sbb
push
sub
stc
mov
pop
push
dec
and
jno
pop
enter
adc
aam
pop
add
fmuls
or
push
mov
stc
call
test
mov
pusha
dec
push
pop
inc
sub
cmp
or
sbb
popf
call
xchg
mov
into
in
std
add
lret
js
dec
cmp
cmp
je
cmpl
testb
adc
xor
dec
cmp
push
insb
lahf
call
stc
popf
call
mov
js
dec
pop
pop
sub
cmp
or
sbb
jmp
enter
test
mov
imul
pop
sub
cmp
or
sbb
jmp
dec
mov
fisubl
int
xor
cmp
in
push
jno
inc
je
pop
or
lret
adc
and
iret
sbb
std
inc
std
push
outsb
jbe
fwait
daa
xchg
mov
sbb
call
in
sbb
lret
jle
jl
push
xchg
add
adcb
inc
pop
je
pop
xorb
and
pop
cmpsb
mov
cmp
add
cmpsb
lcall
xchg
cmc
mov
mov
sti
push
inc
mov
sub
mov
movsb
pop
jle
pop
mov
pushl
adc
jns
jne
mov
insb
sbb
addr16
loopne
push
insb
mov
iret
lahf
adc
loop
inc
inc
loope
inc
cmc
mov
xchg
data16
xchg
cli
jae
push
dec
pusha
mov
and
pop
ss
stos
mov
movsb
sub
or
addr16
cmp
ret
sti
pop
popl
out
xor
jmp
sbb
cwtl
or
push
sti
fisubs
push
repnz
test
loope
dec
inc
inc
or
outsl
cwtl
ljmp
lahf
mov
xlat
ljmp
mov
subb
stos
dec
test
dec
sub
shrb
sub
jg
pop
push
mov
push
ret
sub
icebp
xchg
mov
sub
nop
sbb
mov
jg
into
pop
jns
mov
dec
test
pop
mov
xlat
push
sbb
fnstsw
cs
xor
pop
mov
cmp
into
xor
push
xor
mov
cmpsb
sub
dec
ss
sbb
add
pop
lods
push
dec
mov
test
in
lret
outsb
bound
inc
pop
lods
fs
lret
adc
lret
jl
sbb
push
out
rol
test
adc
mov
dec
shl
popa
dec
in
roll
iret
mov
jg
jp
sub
inc
adc
push
sub
inc
mov
or
scas
mov
je
ja
not
push
arpl
bound
mov
sbb
scas
mov
das
punpckldq
lock
cltd
movsb
lods
mov
jnp
pop
lret
mov
stos
bound
xchg
std
jns
xor
mov
movsb
adcl
cmp
push
cld
mov
mov
mov
fstps
test
andb
xchg
fdivrl
inc
cli
lods
subb
lock
mov
mov
push
data16
mov
xor
fsts
scas
pop
mov
push
popa
insl
jmp
ret
sti
lahf
test
cmp
subl
test
xchg
push
test
mov
int3
or
push
jl
int
lret
mov
mov
sbb
jmp
inc
arpl
inc
cmp
mov
cmp
sbb
xor
inc
or
mov
insl
in
stos
mov
jb
pusha
jns
mov
hlt
fisubrs
dec
std
sbb
std
bound
shrb
lcall
pop
pop
add
push
xor
dec
add
push
and
adc
lret
jg
xlat
fistl
std
push
test
stc
adc
inc
daa
negl
movsb
or
cwtl
lret
and
scas
fcoml
sbb
aaa
pop
push
adc
xor
jnp
repz
sahf
cmp
inc
imul
adc
or
data16
jnp
mov
jge
pop
cwtl
imul
cld
test
inc
mov
xor
xor
shrb
inc
lea
push
fwait
lea
add
stos
imul
faddl
pop
fnsave
dec
rclb
call
outsb
pop
mov
add
and
mov
stos
push
shl
leave
pop
gs
arpl
xchg
nop
fmull
push
mov
cmpsl
icebp
out
inc
aam
out
fistl
sub
test
mov
or
inc
pop
adc
adc
fimuls
cmp
ljmp
or
pop
xor
cli
mov
push
mov
in
inc
movsb
jmp
pusha
pop
mov
loopw
pushf
paddd
icebp
fimuls
cmp
daa
inc
or
push
cs
adc
mov
iret
sti
sub
dec
push
lahf
jp
jnp
sbb
scas
mov
repz
cmp
cmp
push
and
fidivrl
push
call
cmp
pusha
jmp
mov
inc
popa
mov
repnz
das
arpl
xchg
enter
inc
mov
iret
arpl
mov
xor
adc
out
loop
imul
add
mov
dec
mov
mov
lret
cmp
cmp
scas
loope
push
in
ljmp
popf
and
dec
mov
jmp
jno
adc
addr16
cmpsb
pushf
nop
js
pop
mov
mov
dec
testl
mov
subb
ss
das
dec
jb
mov
cmp
adc
rolb
cmpsl
inc
ret
mov
push
popa
add
pop
sbb
in
dec
dec
movsl
inc
inc
fidivs
adc
inc
sbb
or
mov
outsl
jl
data16
hlt
lret
incb
jnp
inc
inc
outsb
stos
lods
test
aam
add
sbb
mov
sarb
pop
daa
jae
jmp
daa
loope
and
hlt
out
lea
xchg
push
aaa
jb
jno
sub
jb
insb
mov
push
adc
jnp
jo
clc
sbb
mov
lea
jo
outsl
rorl
push
mov
xchg
xlat
inc
sub
das
jmp
fistpll
push
lds
inc
inc
or
push
mov
push
cmp
mov
mov
add
shrb
repnz
lret
jae
pushf
xchg
push
mov
jb
and
push
dec
dec
insl
mov
xor
roll
mov
imul
dec
rcl
pop
jg
fwait
add
mov
mov
xchg
sbb
cwtl
out
mov
daa
popf
or
xchg
fmull
mov
inc
mov
cmp
loopne
push
rcrb
jecxz
xchg
xor
ret
pop
dec
loop
adc
gs
sbb
mov
dec
lahf
or
cli
or
xchg
out
idivl
dec
xchg
test
pop
push
push
push
ret
hlt
rcr
mov
shl
or
push
rcl
push
sbb
xor
xchg
jle
and
adc
push
and
pop
call
js
test
icebp
pop
mov
xchg
cmp
pop
movsl
sub
fs
xor
mov
lea
xor
lahf
pop
stos
data16
sti
xchg
cmpsl
lock
iret
std
jp
pop
add
push
scas
addr16
test
dec
icebp
and
inc
ret
fprem1
movsl
or
pop
popf
icebp
xchg
hlt
out
test
push
dec
pop
pop
push
insb
inc
adc
jp
pop
je
sahf
mov
sarl
mov
shl
mov
sbb
and
or
dec
adc
mov
or
lea
pop
push
pop
jp
fists
jne
push
rcrl
inc
mov
es
jno
cmc
sarb
add
lock
std
mov
push
mov
add
sub
aas
sbbb
mov
cmpl
je
sbb
add
les
idivl
lahf
aas
inc
out
xchg
nop
shll
adc
fsubs
mov
imul
push
ljmp
insb
mov
dec
pop
ret
divl
add
xchg
xchg
test
ffree
and
mov
dec
cmp
pop
insb
mov
data16
imul
inc
aas
cld
int3
sub
mov
inc
outsl
xor
mov
loopne
cmp
cltd
das
fdivp
adc
mov
pop
sub
pop
ja
sub
int
movsl
stos
in
add
dec
loopne
mov
insl
jnp
ret
insb
shrb
pusha
not
idiv
inc
pop
push
pushf
pushf
out
data16
push
pop
mov
jb
lods
outsl
jbe
xor
fbld
or
icebp
push
sub
xchg
add
cwtl
ds
or
xchg
jnp
pop
gs
fisubl
lock
fdivrs
bound
mov
inc
jne
shll
lods
adc
jg
jbe
and
and
orb
into
shrb
or
jmp
adc
and
xor
outsb
bound
and
popa
and
xchg
test
push
dec
mov
out
insb
push
dec
pop
sub
stc
dec
adc
ds
leave
fdivr
lock
or
shl
mov
adc
jg
cwtl
mov
push
fimull
mov
mov
stc
xlat
jno
lock
add
cmp
stos
cmp
ret
lods
js
xchg
pop
fwait
data16
mov
mov
pop
mov
sub
mov
out
adc
cmp
lods
cmpsl
imull
xchg
stc
shl
popf
jnp
pop
sub
pop
push
pop
es
cmp
sarl
mov
faddl
push
inc
cli
pop
cmp
dec
addr16
push
push
jb
testl
dec
bound
push
insb
jo
add
inc
rcrl
push
jae
imul
lea
jns
rcl
cwtl
subl
mov
scas
in
insl
dec
mov
out
xor
pop
xchg
loope
jl
cmp
or
sbb
xorl
push
mov
and
sub
jle
or
inc
scas
fimull
loopne
dec
push
ljmp
mov
xor
inc
gs
mov
push
insl
or
ja
mov
push
push
pushl
repnz
std
stos
mov
ja
ret
dec
mov
jae
jmp
mov
repz
dec
cmp
loope
jecxz
inc
push
xchg
jb
cmp
out
cmpsb
inc
xor
mov
or
jle
fadds
add
add
adc
jbe
jno
cli
pop
lds
shlb
clc
test
adc
cltd
movsl
imul
push
movsb
add
lods
lock
jne
ja
es
outsl
dec
pop
add
hlt
xchg
xchg
cmp
int
addr16
xor
loope
pop
in
roll
movsl
fisubrl
rcrb
scas
push
xor
xor
jo
repz
dec
cmp
add
int3
popa
mov
or
inc
mov
fldt
and
mov
jecxz
jbe
aam
fs
aam
mov
add
stos
inc
call
fisttpll
pop
mov
out
dec
sub
incl
fisubl
lods
mov
adc
sub
jnp
fsts
sub
mov
xor
lea
push
ret
or
add
je
inc
jmp
adc
mov
dec
sub
scas
ss
mov
cmp
pop
cld
mov
pop
addl
inc
jmp
mov
lock
dec
es
inc
jle
inc
sahf
cmp
jns
shr
sbb
mov
dec
stos
inc
jmp
test
scas
add
cmp
mov
xor
jp
add
ds
loope
pushf
popf
push
push
dec
lods
aas
xor
ss
mov
out
push
or
clc
fnstenv
mov
lea
push
fs
ret
addr16
jge
js
inc
mov
fs
sub
mov
xchg
ret
pop
adc
rclb
jae
sbb
sbb
cmp
sti
mov
popf
cmp
test
dec
push
lret
jmp
stos
jecxz
pop
testl
scas
shrl
pushf
pop
clc
addb
scas
pop
mov
xlat
data16
xor
and
xchg
fcoms
out
jg
lods
outsl
and
testb
cmp
cmpsb
inc
push
rcl
push
popf
mov
jnp
das
rorb
mov
sahf
arpl
lds
mov
jno
inc
jge
cmp
jbe
dec
out
mov
and
leave
in
xor
rol
adc
mov
cmp
fcomps
sub
stos
iret
dec
mov
pop
bound
sbb
rolb
add
loop
add
or
mov
mov
add
cld
pop
pop
movsl
add
stos
and
mov
add
cmp
jge
subb
xlat
call
faddl
and
in
mull
pop
int
pop
pop
mov
adc
in
jmp
mov
stos
jno
mov
dec
stos
sbb
sbb
fildll
xchg
dec
pop
out
and
adc
jno
dec
inc
sbb
outsb
repnz
cld
sbb
or
sub
add
cmp
dec
pop
aad
sahf
in
adc
dec
loop
andl
pop
into
mov
or
lea
lods
sub
jge
mov
jb
scas
sub
loop
pop
jbe
or
mov
xchg
in
cs
mov
fs
inc
fnstenv
pop
popa
mov
mov
xchg
popa
pop
shrl
cmpsb
add
cmp
mov
pop
scas
xchg
cmp
pop
sbb
xchg
mov
std
adc
pop
insb
shrb
frstor
and
or
hlt
add
leave
push
imul
loopne
jo
cmp
add
notb
push
push
cmp
fstl
mov
xor
pop
into
mov
pop
inc
data16
cld
testb
fadd
mov
negl
push
aas
pushl
sbb
imul
xchg
mov
stos
mov
push
jns
mov
cmp
xchg
popf
jp
xchg
pop
lahf
adc
jp
and
pop
ds
rcr
cmpsb
lods
jecxz
gs
cmp
stos
pop
pop
jle
mov
jge
stos
popf
jge
and
imul
fs
cmp
leave
aaa
test
mov
cld
sub
cmpsb
mov
xor
pop
bound
dec
subl
ret
xlat
int3
outsb
inc
push
sbb
pop
pop
pop
xor
cmp
inc
test
outsb
adc
pop
je
lret
xor
cmpsb
test
push
xchg
mov
mov
addl
scas
sbb
xorl
cli
leave
dec
lcall
pop
jbe
cmp
xchg
dec
roll
hlt
add
in
outsb
and
js
cli
mov
xchg
and
ficompl
sbb
xchg
out
mov
cmp
lods
popa
and
cld
in
add
mov
dec
and
pop
dec
mov
stos
cmp
sarb
pop
mull
rclb
movsb
mov
and
inc
mov
ja
adc
xchg
js
mov
sahf
test
outsb
xor
cwtl
cli
addr16
pop
movlps
fildll
mov
sub
mov
adc
test
into
xchg
cmpsb
jecxz
lahf
push
xchg
test
clc
push
jmp
out
loop
pop
jbe
pop
scas
lahf
cwtl
inc
mov
pop
mov
repnz
cmp
test
imul
sbb
nop
cmc
cmc
and
sub
sbb
je
imul
ss
xchg
push
lret
out
cmp
sbb
lret
jmp
in
add
lret
and
ljmp
push
pop
data16
sbb
xor
stos
jg
or
imul
divb
les
xchg
xor
mov
xchg
pop
xchg
ja
aaa
and
xchg
test
jl
faddl
enter
insb
mov
and
mov
jno
inc
dec
push
dec
xchg
jg
sbb
cmp
outsl
and
mov
mov
hlt
xlat
repnz
mov
xchg
popa
loopne
mov
fwait
adcb
mov
scas
inc
xchg
jg
ljmp
jl
int3
inc
repz
testb
arpl
jg
cmc
cld
adc
out
lds
add
mov
jle
xor
push
iret
insl
nop
xchg
push
ret
jge
mov
in
jns
icebp
adc
scas
jne
xchg
sbb
test
pop
xlat
mov
insb
push
les
dec
push
insb
bound
bound
mov
sub
addb
xor
mov
lds
or
inc
push
mov
push
xor
push
mov
test
mov
sub
loopne
adcl
insb
xor
push
jno
lret
push
into
test
outsl
clc
stos
cld
xor
mov
jne
inc
daa
insl
pusha
enter
divl
add
int3
add
xchg
dec
stc
push
jmp
nop
not
jge
jmp
aas
fldenv
sub
sub
mov
and
leave
out
push
jp
xor
xchg
inc
outsb
lods
cmpsl
or
xor
loop
inc
test
inc
bound
ja
mov
mov
cmp
cltd
std
jne
ja
dec
jno
inc
fsubrs
sub
mov
mov
mov
or
hlt
or
pop
pusha
aaa
jae
inc
dec
out
repnz
int
inc
xchg
inc
and
ss
mov
test
pop
pop
fnstenv
fs
or
sar
aas
mov
mov
add
in
jp
jmp
jne
sub
hlt
jmp
daa
cmpsb
data16
lea
push
ss
addl
mull
lods
adc
fcoms
mov
and
jae
add
jl
and
cmovo
repnz
movsl
pusha
jmp
fdivrs
xchg
fdivrp
sbb
jb
in
xchg
test
inc
aas
js
mov
sbbb
or
dec
aad
pop
cmp
or
mov
add
stos
push
nop
aad
cmpsb
mov
scas
orl
cmpsl
shll
sbb
iret
xchg
mov
leave
fbstp
cli
and
rcll
sbb
aad
cmp
repz
dec
dec
inc
sub
rolb
mov
xchg
addb
xor
clc
stos
mov
int3
or
imul
add
dec
add
mov
mov
xchg
sub
push
in
mov
and
xor
daa
adc
addr16
je
pusha
bound
push
rcl
pop
notl
mov
add
mov
call
fdiv
mov
jno
pop
and
add
push
les
sahf
push
notl
sahf
inc
pop
sbb
in
pushfw
clc
lcall
addr16
aam
jl
xchg
int
in
ficomps
dec
jg
das
mov
gs
dec
enter
pop
xchg
and
dec
add
pop
orl
jnp
or
cld
adc
js
mov
vprotb
cs
sbb
aaa
mov
and
jo
mov
fistpll
icebp
out
add
push
jle
adc
cli
cltd
icebp
rorb
adc
mov
int3
xchg
ret
mov
cli
sbb
or
mov
jo
inc
mov
lods
cld
and
andl
fs
xchg
cmp
mov
inc
xor
pop
ja
mov
inc
in
pop
inc
stos
push
mov
mov
jne
mov
aad
je
stc
push
pinsrw
dec
add
fisttpl
push
sub
xor
stos
enter
sahf
push
adc
movsl
test
dec
dec
xchg
adc
jne
pusha
or
jecxz
mov
cmpsl
scas
testl
fsubrl
mov
push
dec
mov
popa
rcrb
jmp
cmp
insb
pop
nop
pop
sub
jno
mov
and
pop
sub
mov
jmp
add
inc
je
sti
adc
fadds
or
loopne
mov
cs
pop
mov
stos
inc
loope
mov
sub
pop
jge
clc
icebp
dec
pop
cs
cmpsl
notb
dec
pop
xchg
add
pusha
pop
das
fs
or
stos
push
add
call
add
lea
aad
rclb
incl
mov
dec
pop
mov
mov
sbb
cltd
lea
xchg
push
into
in
mov
test
test
pop
popf
xor
and
ljmp
mov
cli
ds
cltd
test
dec
bound
movsl
lock
in
pop
inc
xor
cwtl
shl
jnp
cmc
lods
shlb
cmp
mov
lds
add
ficomps
inc
repnz
inc
push
lock
push
inc
out
push
xor
mov
jo
xchg
mov
xchg
in
cs
fisubl
mov
js
loopne
rolb
dec
fisubl
test
cmp
mov
xchg
inc
add
fucomp
lea
fldcw
in
cld
andl
xor
xor
push
xor
sbb
adc
adc
aam
cmpsl
pop
lcall
or
cmp
sub
jp
sbb
sub
in
fldl
xchg
jbe
rcrl
int3
mov
jbe
mov
xchg
cmpsl
sbb
add
movsl
rcl
push
lahf
leave
xchg
dec
test
pop
xchg
pop
cmpb
pop
repnz
cmp
add
dec
mov
int3
sub
pop
test
sbb
and
cmp
push
and
mov
dec
das
mov
mov
leavew
jmp
push
mov
fisttpll
cwtl
sbb
and
and
sub
mov
dec
in
in
adcb
mov
jbe
mov
lcall
enter
test
mov
imul
pop
sub
cmp
or
sbb
jmp
enter
test
mov
imul
pop
sub
cmp
or
sbb
jmp
enter
test
mov
imul
pop
sub
cmp
or
sbb
in
clc
cld
enter
test
mov
shl
dec
pop
das
pop
mov
out
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
hlt
add
mov
add
mov
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
das
cmc
add
sbb
add
adc
add
or
add
add
add
cld
hlt
add
hlt
hlt
add
in
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
cmc
add
push
cmc
add
pop
cmc
add
jo
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
call
testb
xor
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
test
add
mov
add
xchg
testb
pushf
testb
movsb
testb
lods
testb
mov
add
testb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
loopne
add
call
testb
or
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
shl
add
testl
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
clc
add
jl
add
je
add
insb
clc
add
fs
add
pop
clc
add
push
clc
add
dec
clc
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
test
add
mov
add
mov
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
dec
stc
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
in
add
in
stc
add
hlt
stc
add
cld
stc
add
add
add
or
add
adc
add
daa
cli
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
inc
cli
add
dec
cli
add
pop
cli
add
insb
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
