push
mov
push
push
push
push
pushl
mov
call
movl
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
and
ret
int3
int3
int3
int3
int3
mov
push
mov
xor
cmp
je
mov
and
or
mov
movl
mov
mov
jmp
andl
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
push
pushl
mov
call
movl
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
push
pushl
mov
call
movl
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
and
ret
int3
int3
int3
int3
int3
mov
push
mov
xor
cmp
je
orl
mov
mov
mov
jmp
andl
pop
ret
int3
int3
int3
int3
int3
mov
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
mov
push
push
push
mov
call
movl
movzwl
movl
mov
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
mov
mov
call
pushl
mov
call
push
push
pushl
call
xor
inc
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
push
xor
xor
test
jle
push
lea
push
mov
cmp
je
inc
add
cmp
jl
pop
pop
cmp
jl
xor
jmp
dec
cmp
jge
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
push
push
mov
push
and
push
push
rorl
dec
sub
dec
aaa
pop
cmp
push
add
add
add
or
leave
add
add
add
add
fiadds
outsb
add
add
rolb
sbb
sub
dec
add
add
add
add
add
add
add
push
add
cmp
pop
add
or
or
pop
add
add
add
add
add
inc
add
sub
mov
pop
add
add
add
add
push
add
aas
add
testb
imul
add
add
add
sub
add
data16
add
add
add
jb
imul
roll
add
add
lds
adc
cmp
popl
inc
add
inc
add
jb
mov
inc
add
jmp
add
roll
add
push
add
add
add
mov
cwtl
add
cltd
add
add
add
test
movsb
add
add
add
add
add
mov
sbb
addr16
add
add
inc
add
add
add
add
add
add
add
push
add
add
add
and
mov
cmp
adc
testb
add
add
add
sub
or
stos
add
js
lds
inc
add
add
add
add
add
push
add
add
add
pop
add
mov
insl
add
inc
add
sbb
cmp
inc
add
cmp
or
sbb
add
add
aas
add
add
add
add
add
add
add
add
mov
push
add
cmp
add
pop
add
into
add
add
hlt
add
add
stos
add
push
adc
add
add
ret
add
mov
push
add
add
add
pop
add
add
add
mov
addb
add
push
add
jle
pop
add
add
add
add
push
add
add
mov
push
add
add
add
add
add
add
add
add
add
add
and
leave
add
add
add
aas
add
add
add
add
add
add
mov
ret
add
popa
add
add
sbb
sub
add
pop
add
outsb
add
add
add
cmp
push
add
add
add
add
sbb
add
add
add
add
add
or
ss
add
add
add
add
add
add
add
add
aas
add
mov
inc
add
jmp
add
add
add
dec
add
hlt
add
add
add
add
add
add
add
inc
add
push
add
add
add
pop
add
into
add
roll
add
add
add
add
add
sub
js
dec
add
add
into
add
add
add
add
add
add
add
mov
out
add
aas
add
add
ret
add
add
add
add
add
add
add
add
add
add
add
add
add
in
outsb
add
add
add
add
add
jns
push
add
add
stos
add
mov
add
insl
add
add
fiadds
outsb
add
add
add
add
add
push
add
ss
add
add
dec
add
add
add
xor
cmp
mov
or
and
sub
add
add
inc
add
add
add
add
add
dec
sbb
jecxz
aaa
int3
push
push
jne
xlat
xchg
jno
jl
jge
or
inc
scas
jnp
cmpsl
inc
push
lods
cwtl
int
fmuls
cmp
pop
inc
mov
inc
ja
xor
iret
jg
fwait
addr16
jg
icebp
clc
std
fs
lds
dec
nop
cmp
push
imul
mov
jl
push
popf
sbb
int3
add
int
adc
xor
out
bound
dec
aam
mov
in
pop
dec
push
mov
lods
jmp
pop
sar
or
cs
clc
adc
cmp
or
pop
mov
daa
jle
xchg
stos
mov
sbb
jle
fdivrs
les
pop
mov
jp
xlat
mov
fimuls
cmp
int
aaa
insb
cld
cwtl
sahf
fwait
outsb
daa
daa
stos
stc
mov
pop
sub
dec
push
xor
inc
mov
out
pop
loopne
insl
mov
mov
int3
sub
xchg
sub
sub
mov
xchg
cmpsl
ror
lods
dec
jne
inc
test
dec
lods
mov
push
pop
jecxz
and
sbb
pop
sbb
jmp
fisttpll
inc
add
fsubs
adc
lret
or
sbb
cmp
mov
dec
testl
xor
xor
fsubrp
test
mov
dec
mov
push
xorb
cmc
fistps
pop
pop
jg
push
addb
daa
or
adc
js
mov
push
mov
and
fbld
roll
pop
popf
adc
ja
mov
cmc
jbe
add
stos
rclb
sub
mov
data16
inc
orl
int3
outsl
xor
in
pop
push
test
mov
cmp
dec
inc
and
popa
mov
enter
fidivrl
mov
jecxz
test
dec
sbb
sti
xchg
nop
in
lea
in
jae
pushf
fs
sub
roll
fisubrl
lods
xchg
out
mov
add
push
gs
inc
sbb
bndldx
aas
js
push
outsl
ja
inc
xchg
dec
testl
xor
test
cmp
rcrb
cs
iret
pop
iret
addr16
enter
ss
repz
aaa
and
cmp
push
andb
shlb
shlb
insb
es
in
out
mov
xchg
cmp
lods
into
shll
inc
jge
idivb
or
mov
and
into
in
lds
fisttps
fdivp
iret
mov
inc
inc
lahf
call
test
enter
ds
push
mov
mov
xchg
jecxz
test
mov
xlat
add
add
add
add
rolb
add
add
push
mov
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
pushl
incl
push
call
mov
pop
pop
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
push
mov
sub
mov
andl
andl
andl
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
mov
lea
push
movl
movb
movl
movb
movl
movb
movb
movl
call
leave
ret
popf
inc
sbb
ja
dec
jge
sysret
sbb
lea
mov
xchg
std
cmpsl
std
mov
inc
sbb
ja
pop
pop
pop
insl
daa
jge
popf
xlat
int3
out
test
cmpsl
std
mov
inc
sbb
ja
pop
pop
pop
insl
daa
jge
popf
hlt
int3
xchg
fcoms
int
xchg
les
sbb
ja
daa
jge
xchg
lods
dec
mov
mov
ret
mov
adc
fistps
jl
dec
pop
push
xchg
out
or
hlt
repnz
in
add
pop
and
xlat
xchg
out
or
xchg
int
sti
mov
sbb
bswap
add
and
jno
lea
leave
popf
cmp
lods
arpl
sub
lods
divl
jle
sub
movsl
push
sahf
insl
dec
jge
in
call
repz
aam
xchg
push
ret
cmpsl
ja
aaa
lods
push
xchg
fists
dec
test
pop
xor
mov
cmpsl
cld
mov
sub
pop
pop
pop
insl
daa
jge
popf
xlat
lods
out
test
cmpsl
std
fidivrs
pop
push
inc
addr16
push
bound
jle
popa
sbb
mov
flds
sbb
stc
push
and
pop
add
sub
pop
insl
dec
add
scas
aad
fcoms
mov
add
pop
dec
adc
pop
pop
insl
daa
jge
popf
xlat
lods
out
test
cmpsl
std
mov
inc
sbb
ja
pop
pop
pop
insl
daa
jge
popf
xlat
lods
out
test
cmpsl
std
mov
inc
sbb
mov
jae
cmp
or
pop
in
push
pusha
sub
test
and
lea
push
lahf
test
mov
sbbl
pop
push
dec
js
je
andl
daa
lahf
xchg
out
mov
add
shrb
push
jge
adc
clc
mov
or
lods
adc
in
mov
cmc
in
adc
mov
and
faddl
lods
stos
and
popa
clc
jb
addr16
lock
cwtl
adc
push
les
cltd
jp
sbb
jb
lods
pop
les
movsl
pop
sti
mov
push
sub
jno
pop
out
outsl
ret
adc
adc
jbe
sub
push
add
and
xor
add
inc
hlt
movl
pop
dec
jle
xchg
fisubrs
hlt
xlat
and
fimull
mov
out
cmp
daa
jg
cmp
mov
push
lods
pop
or
mov
fxch
daa
bound
xchg
shrb
dec
sub
movsb
shrl
and
test
xor
and
jecxz
fstp
or
out
aad
dec
dec
push
inc
pop
pop
lods
xchg
push
jg
cmp
loope
loopne
aaa
gs
push
jb
push
ret
je
cwtl
sub
xchg
adc
mov
push
fdivrp
call
mov
lret
dec
jmp
xchg
fdivrl
leave
add
std
int3
mov
sbb
pop
lcall
std
and
inc
dec
dec
mov
jl
mov
inc
jp
jle
in
xor
mov
mov
add
addr16
xorl
aad
jp
inc
je
push
lock
rclb
test
xchg
sbb
mov
clc
andl
sbb
pop
xor
cmp
shr
test
das
fsts
not
enter
hlt
xchg
cwtl
mov
push
std
aaa
push
fsubl
mov
inc
sbb
dec
mov
loope
jnp
adc
xchg
xchg
jmp
xchg
xchg
mov
gs
testl
hlt
frstor
pop
pop
ficomps
and
out
push
loope
scas
or
push
loopne
add
mov
xor
cltd
inc
ja
push
adc
gs
add
add
loop
and
mov
or
shll
cld
jo
loopne
jmp
outsb
pop
mov
cmp
xchg
dec
xor
je
add
sub
push
ljmp
sbb
iret
les
and
and
add
mov
pop
arpl
push
jbe
lcall
nop
dec
in
push
nop
push
fiaddl
ret
cld
jmp
inc
xchg
mov
rorl
sub
push
gs
in
xor
out
lcall
fimuls
dec
adc
imul
lock
movsl
and
insb
std
sarl
ror
addr16
icebp
setb
int3
mov
iret
pop
sbb
and
pop
add
cmp
dec
movl
jae
mov
push
addr16
dec
adc
inc
pushf
lods
fdivr
inc
mov
sahf
rcl
mov
dec
cmp
int
jmp
ds
pop
pusha
test
mov
sub
mov
mov
pop
mov
mov
addr16
lcall
sub
mov
cltd
inc
xchg
mov
loop
lret
pushf
and
xchg
scas
ret
lods
imul
repz
xchg
mov
mov
pop
addb
daa
in
ror
and
js
iret
orl
mov
mov
mov
stc
sbb
sbb
sub
enter
outsl
es
jne
mov
push
out
dec
push
xor
jae
loopne
and
lret
dec
and
sub
jbe
xor
pusha
std
sar
pushf
rorb
mov
cmp
mov
xchg
mov
fstpl
pop
pop
stos
mov
cmpsl
sub
add
loope
adc
lsl
xor
addr16
out
outsb
out
sub
push
add
rolb
sbb
push
xchg
aaa
mov
pop
frndint
clc
xlat
shl
or
and
cmp
ljmpw
sub
xorl
icebp
xchg
and
xchg
loopne
push
mov
xor
rcl
shrl
bound
loope
push
dec
mov
leave
inc
mov
dec
or
jecxz
sbb
sub
aaa
fdivl
lahf
movsl
inc
jo
test
inc
hlt
test
daa
movsl
xchg
pop
sahf
xor
pusha
ss
jnp
repz
push
aad
sbb
jnp
mov
jo
mov
lods
push
xlat
std
pop
adc
cs
inc
out
insl
pop
popa
ficompl
or
std
mov
pop
mov
daa
shl
push
push
lds
jp
pop
rcr
nop
outsl
mov
test
ret
xor
aaa
aad
adc
cs
pop
push
daa
ret
popa
leave
dec
addr16
push
addl
push
mov
vpcmpgtb
je
notl
pop
lods
aas
fcmove
inc
sub
inc
sahf
out
shl
inc
jge
xchg
pop
mov
mov
jecxz
or
shrl
pop
cmc
xorb
fwait
hlt
bound
xor
or
jle
pop
in
fistpll
stos
dec
popl
hlt
cmc
shll
fwait
jb
addl
pop
pop
pop
mov
sub
xchg
jb
out
xchg
mov
inc
xchg
fs
cmc
push
xlat
mov
scas
jle
imul
inc
mov
fisubrl
fnsave
jg
clc
add
mov
add
jl
mov
mov
jmp
lods
ja
inc
pop
pop
mov
cmpsl
or
jmp
sbb
sahf
xchg
and
andb
dec
cli
cltd
dec
shll
fdivrs
cmpl
nop
xlat
sbb
cmp
dec
lea
das
dec
inc
mov
add
cmpsb
inc
outsl
mov
into
xor
cmp
lods
cmp
sar
scas
sbb
pop
shlb
outsl
in
or
pop
or
cmp
xor
dec
inc
jo
add
daa
mov
arpl
pop
jmp
pop
pop
jmp
icebp
mov
sbb
jno
fsubs
jmp
inc
mov
aam
jge
inc
and
in
sbb
enter
sbb
pop
jg
mov
adc
xchg
mov
loop
mov
lods
int
popf
jl
test
inc
inc
jns
sub
lcall
cli
push
mov
mov
adc
into
mov
inc
pop
sbbb
xor
add
fstps
addr16
inc
add
jl
iret
push
cwtl
sarb
cmp
insb
mov
repz
stc
in
mov
or
mov
les
hlt
or
push
aas
jnp
push
pop
jmp
add
pushf
js
fst
mov
inc
xor
popf
inc
ds
or
and
fwait
add
dec
and
nop
mov
mov
adc
sti
push
pop
or
mov
mov
dec
loope
cltd
add
leave
add
mov
jae
test
jo
test
dec
lahf
lock
gs
xchg
jb
fisttpl
lds
and
xchg
test
xchg
push
cmc
mov
and
sahf
iret
sbb
mov
add
push
sub
jno
je
sahf
test
ljmp
adc
add
push
pop
sarb
jns
in
lock
pop
cmp
stc
xor
mov
pop
aad
xchg
xchg
cmp
adc
repnz
out
iret
mov
aas
filds
outsb
scas
aas
mov
xor
cmpsl
jle
mov
mov
jnp
adc
push
cmp
mov
cwtl
adc
dec
jno
aas
test
lret
mov
addr16
dec
dec
mov
mov
mov
and
mov
pop
pop
mov
std
or
mov
xchg
test
es
and
movsl
scas
sarl
cmpsb
cld
in
pop
or
pop
jo
add
sub
testb
sub
push
add
fsubp
xchg
inc
sub
daa
rcr
pop
dec
mov
add
inc
cmp
out
pop
xchg
in
cli
adc
add
xor
loopne
adc
add
fmul
sbb
xchg
cli
xlat
addr16
adc
out
movsl
xchg
jae
adc
out
xchg
ficoms
leave
fidivs
jns
mov
cmc
gs
or
and
mov
fiadds
or
xchg
icebp
insb
pop
xor
push
and
dec
sar
pop
movsl
iret
sbb
jne
mov
pop
js
pusha
das
inc
pop
pop
test
outsb
inc
mov
out
imul
push
xchg
mov
pop
mov
jno
mov
jne
andl
pop
enter
xor
aad
and
sbb
lret
adc
ret
jp
clc
or
lret
push
lock
adc
jbe
aad
lds
pop
sub
inc
dec
mov
adc
push
call
dec
pop
icebp
scas
mov
iret
add
aaa
sbb
in
outsl
or
lock
daa
das
jb
aaa
dec
mov
xlat
xchg
push
in
push
jmp
inc
mov
pushf
and
lcall
cmp
dec
popf
xor
stos
xchg
jge
and
fmuls
mov
push
xchg
push
nop
pop
pop
das
push
inc
and
mov
or
dec
mov
adc
fldl
cmp
ret
jae
lret
lcall
inc
adc
and
inc
cli
and
and
or
pop
adc
dec
rorl
addb
lret
inc
push
mov
rorb
pop
mov
pop
push
xchg
call
das
push
jecxz
cmp
jno
sbbb
lods
cmp
xor
scas
mov
pop
movsb
shr
xchg
mov
add
lods
and
jbe
mov
sub
out
sti
xor
cmc
push
dec
jne
push
adc
in
nopl
flds
subl
cltd
mov
ss
out
pop
cltd
in
cmp
jp
in
dec
dec
pop
pop
dec
pop
test
dec
fdivs
outsl
std
arpl
inc
in
xchg
add
inc
dec
rcrl
xchg
in
jp
mov
push
push
fbld
out
mov
ja
out
mov
jmp
and
sub
pop
fstps
pop
jecxz
adc
ljmp
lods
pop
jns
data16
xor
cld
or
int3
jle
mov
xchg
dec
in
mov
xor
or
sbb
lahf
loope
add
push
outsb
cmp
add
pop
fists
pop
out
jmp
inc
jl
inc
add
pop
lods
repz
in
outsl
movsb
adc
sbb
jmp
lret
sbb
and
fidivrl
jae
pop
aam
inc
jle
sbb
inc
test
mov
jp
adc
rcr
test
rcrl
mov
nop
call
adc
cmp
push
lds
push
js
lods
push
inc
arpl
mov
jg
dec
add
rclb
and
pop
pop
arpl
sbb
xchg
mov
xor
pop
ja
ja
inc
pop
inc
mov
mov
dec
enter
xor
stos
test
aas
mov
pop
dec
filds
movb
repz
into
dec
push
out
pop
repnz
int
pop
dec
packuswb
cmovae
xchg
incb
jmp
ja
mov
and
lret
sbb
lahf
xor
in
or
stos
sub
sbb
orl
push
fimuls
je
dec
cmp
js
fwait
incl
in
repz
cli
lods
cmp
mov
int3
cmp
shll
subl
es
out
mov
push
loop
fcomps
xor
lock
inc
icebp
add
cli
aaa
xor
xchg
push
int3
lods
cmp
sub
mov
js
push
int
imul
shlb
push
mov
data16
call
cwtl
icebp
lret
jp
fsubrs
mov
dec
mov
call
movsb
in
xchg
or
nop
inc
sub
fsubrl
data16
push
push
cmp
ja
mov
sub
adc
outsb
ret
ret
out
outsb
mov
aaa
and
std
or
mov
add
adc
ret
pusha
push
jecxz
test
add
dec
xchg
cmp
je
xchg
xchg
movsb
aam
imull
sub
enter
mov
dec
movsl
mov
push
xor
inc
dec
xor
pop
xchg
mov
dec
pop
pop
sub
sub
stos
cmp
xchg
mov
jae
test
mov
das
int
and
out
pop
mov
add
idivl
or
inc
lret
xor
fs
dec
fdiv
bound
xchg
call
mov
test
adc
mov
out
add
inc
lods
dec
push
sub
push
loope
movsl
into
xchg
ljmp
sbb
jge
or
nop
in
xchg
jno
leave
mov
movsb
sub
push
adc
xorl
mov
jns
cmpsb
imul
sub
repz
dec
push
addr16
sbb
mov
scas
mov
or
sbb
in
std
add
pusha
lock
cs
push
dec
rcr
cmp
lea
adc
pop
adc
jbe
mov
push
pand
cmp
fcoms
cmp
push
in
std
repnz
setne
dec
aad
push
xchg
dec
ficoms
inc
loope
cmpb
movsl
jo
adc
stc
repnz
mov
call
in
xor
das
cmp
fsubr
cld
cmp
xchg
push
sub
push
clc
mov
out
inc
test
push
jns
inc
xlat
mov
mov
xchg
pop
push
inc
push
adc
mov
shll
orb
push
testl
add
notb
mov
stc
imul
xor
mov
xchg
fimull
or
hlt
shrb
rcrl
xchg
cmp
outsb
test
or
das
roll
sub
call
mov
pushf
or
inc
aaa
jnp
aad
js
mov
mov
ret
ss
je
mov
xchg
aad
xchg
jo
sbb
iret
popa
and
push
mov
or
sbb
sub
and
cmpsb
or
cmp
xor
imul
mov
fidivl
push
and
loop
lds
or
es
repz
lds
mov
sbb
cmpsl
mov
movsl
std
negb
daa
mov
mov
les
fsubl
jmp
xor
mov
mov
sub
addr16
divb
inc
outsl
in
cmp
orb
enter
jno
inc
and
xor
adc
inc
pushf
adcl
push
aas
aas
pop
add
imul
cmp
stc
pop
inc
mov
sub
jl
cld
out
out
aam
into
pop
pushf
aad
mov
and
inc
jle
lock
insl
aad
cli
mov
push
mov
sbb
mov
mov
mov
and
mov
mov
lcall
sub
mov
stos
add
ss
es
fsubl
ljmp
fs
push
push
das
ss
std
stos
cmpsb
orb
xlat
cmp
aam
sbbb
inc
and
pop
jp
mov
xchg
and
sbb
into
loop
pop
mov
mov
loopne
cmp
mov
pop
movsl
cmc
mov
nop
bound
fistps
shll
fldt
enter
mov
mov
mov
mov
push
inc
mov
mov
xchg
add
les
imul
fnsave
mov
xchg
mov
mov
aaa
jg
jp
ja
aam
rorb
sahf
movl
mov
mov
mov
cli
xchg
pop
xchg
inc
arpl
outsl
jbe
mov
inc
or
cmc
sbb
mov
cli
popl
pop
pop
or
sub
ja
pushf
dec
sub
outsb
and
insb
xor
pop
test
rol
fistpl
mov
jo
mov
inc
or
cs
push
cmp
dec
add
roll
inc
ja
iret
jo
loope
aas
sub
loop
fstps
imul
sub
loopne
or
shl
ret
repnz
stc
mov
insl
les
inc
scas
test
mov
push
mov
pusha
xchg
jp
cmc
xor
ja
sbb
push
cwtl
in
lret
mov
mov
aam
push
lcall
aas
dec
xor
das
fildll
pusha
inc
movsb
cld
cmp
mov
fimuls
inc
mov
and
adc
mov
jle
cwtl
pop
push
inc
mov
mov
and
push
push
mov
add
test
movsl
jge
pushf
and
div
loop
cmp
fcoms
cmp
pop
roll
mov
mov
rcrb
pop
ss
pop
jno
repz
sbb
push
jae
push
data16
loope
cmpsl
out
movsb
das
xor
rol
push
xor
insl
lcall
mov
inc
lods
xor
aad
xor
sti
notl
jne
out
mov
out
mov
xor
iret
sub
lock
ds
data16
loope
iret
jbe
cmp
bound
aad
xchg
sbb
jnp
xchg
adc
addl
lret
adc
or
sbb
call
mov
push
cmp
sbb
mov
stos
mov
mov
add
in
loope
mov
jmp
sahf
pop
xchg
push
sub
mov
push
dec
sub
inc
push
pop
pop
inc
lods
loopne
dec
outsl
jb
std
fwait
aaa
inc
fisttpll
inc
or
pop
sub
jno
stos
xor
xchg
out
inc
nop
mov
mov
dec
lret
jae
iret
push
mov
iret
stos
pusha
rcll
out
ret
fldpi
push
fiaddl
loope
adc
sti
dec
inc
sbb
icebp
fcmovb
push
xchg
sub
or
mov
daa
outsl
mov
ja
leave
xchg
jne
mov
push
mov
push
fsubs
mov
jnp
cmc
rorb
inc
test
sbb
iret
xor
and
pop
jmp
pop
dec
xchg
add
jle
mov
mov
aas
popf
lret
sahf
fwait
aam
xchg
cmpsb
sbb
or
inc
arpl
add
test
mov
scas
mov
test
scas
int
or
inc
xchg
inc
test
dec
jno
mov
push
mov
cmp
popf
pop
fistl
sub
add
adc
push
addb
dec
cmp
sub
pop
lcall
mov
push
ja
jl
movsl
mov
int3
movsb
test
mov
out
sar
jmp
adc
sbb
into
add
mov
and
sub
mov
test
xchg
nop
es
push
int
aas
pop
jle
fs
aaa
cmpsb
pop
push
mov
cli
adcl
mov
jmp
xchg
cmpsb
out
sbb
fnstsw
jo
and
cwtl
aad
mov
cmp
adc
sbb
loope
ja
rolb
lods
dec
and
pushf
loope
pop
dec
pop
dec
aad
testb
rol
jp
pop
adc
gs
out
mov
xchg
xor
inc
lods
adc
dec
out
add
cmpsl
push
lret
push
sbb
pop
clc
in
aam
mov
mov
sbb
int3
sub
stos
addr16
adc
iret
int
push
in
lret
pop
shll
dec
daa
test
shr
and
mov
mov
jg
push
push
cwtl
rolb
inc
xchg
pop
dec
xor
jge
mov
sub
leave
andb
mov
xlat
ja
lcall
pop
data16
movsb
cmp
js
mov
xchg
mov
adc
call
mov
cmp
push
inc
in
ds
sbb
loop
ret
and
rorl
pop
leave
pop
fadds
mov
add
xchg
jp
test
in
cmp
xlat
out
mov
cmp
out
negl
lahf
adc
xchg
dec
cmp
push
mov
add
pushf
mov
ret
xchg
and
sbb
jl
mov
lea
sbbl
mov
cmpsb
or
cmp
jno
mov
lea
sub
popa
mov
dec
dec
mov
pop
add
push
dec
icebp
adc
and
mov
jbe
popa
xchg
dec
add
ret
into
xor
xorb
xlat
lods
xor
pop
mov
ja
mov
lret
test
daa
jbe
popf
out
sub
sti
shl
rclb
leave
pop
pop
and
xor
sbb
out
adc
lods
adc
pop
loope
jno
sahf
unpckhps
xor
cli
sub
lods
adc
dec
ljmp
mov
dec
addl
rcrl
lods
fiaddl
fisttpll
add
mov
lcall
sti
push
insb
pushf
cmc
rorb
inc
jle
mov
stc
test
pop
xchg
loope
dec
push
nop
dec
push
xlat
clc
add
into
mov
sbb
push
jmp
push
adc
outsl
inc
mov
repnz
test
mov
cmp
pop
insl
daa
jge
popf
xlat
lods
out
test
cmpsl
std
mov
inc
sbb
ja
pop
pop
pop
insl
daa
jge
popf
xlat
lods
out
test
cmpsl
std
mov
inc
sbb
ja
pop
pop
pop
insl
daa
jge
popf
xlat
lods
out
test
cmpsl
cld
mov
inc
sbb
sub
cmp
pop
insl
daa
jge
popf
jge
out
cmpb
add
mov
sub
cmpl
mov
push
mov
je
cmp
je
lea
push
call
call
mov
mov
movzwl
mov
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
not
mov
or
mov
lea
push
call
mov
pop
leave
ret
lcall
add
int3
out
or
cmp
inc
movsl
ja
addr16
adc
pop
imul
daa
fbstp
and
adc
add
je
je
push
cmpsl
xor
mov
test
xchg
aaa
aam
les
or
sbb
insl
iret
jl
dec
pop
pop
push
mov
xchg
in
push
icebp
aaa
mov
push
stos
xchg
js
push
mov
nop
arpl
ret
mov
stos
outsb
inc
jmp
int3
or
outsl
jb
push
mov
iret
sbb
js
pushf
stos
and
mov
mov
xchg
xchg
mov
xchg
addr16
pop
push
dec
ret
addr16
sbb
mov
movsb
mov
cltd
jnp
push
mov
aam
adcl
je
je
and
pop
imul
add
aam
mov
fisttpl
jmp
jo
mov
adc
pop
out
sub
dec
pop
pop
mov
in
pop
hlt
xchg
push
lret
push
or
inc
mov
jg
xor
adc
fdivrl
jnp
faddl
add
aaa
ret
xor
or
ret
fs
pop
pop
movsl
mov
mov
ja
sbb
aaa
into
inc
lds
jno
popa
stc
jbe
add
fildl
movsb
daa
nop
push
loope
xchg
imul
xlat
pop
dec
dec
mov
sub
je
sub
and
jbe
rolb
adc
or
inc
mov
mov
xor
and
jo
inc
rolb
fs
cmpsl
inc
push
mov
movsb
ja
test
hlt
pop
in
aam
xlat
xor
and
adc
add
je
fs
cmpsl
inc
push
mov
movsb
ja
test
hlt
pop
in
aam
xlat
xor
aaa
pop
xchg
mov
sub
cmp
inc
sbb
outsl
fistps
adc
sub
mov
leave
xor
push
push
insb
mov
das
xchg
cwtl
gs
les
mov
adc
cmp
mov
mov
push
push
fdivrs
pop
fstps
add
mov
add
pop
push
in
out
test
add
mov
xor
pop
mov
fistpl
inc
dec
or
cmpl
add
push
outsb
test
and
int
or
fisttps
jb
cmp
mov
and
jo
and
xchg
testb
mov
sub
inc
or
movsb
pop
sbb
aad
jle
inc
sbb
inc
sarl
inc
decb
sahf
or
sarb
xchg
psrad
clc
xor
dec
test
and
pop
add
pop
mov
sti
mov
or
repnz
push
mov
dec
sbb
stc
outsl
stos
xchg
jl
dec
fwait
push
imul
aaa
andb
fldt
test
aas
xor
jg
bnd
jnp
push
jg
jp
movsl
fcmovb
lret
inc
in
ja
insb
xchg
sbb
push
lds
pop
orl
jg
mov
cmc
dec
in
mov
ja
cmp
sub
sbbb
repz
push
imul
loopne
cmpsl
rorb
jae
in
les
sub
pop
in
cmp
cmp
sub
call
cmp
aad
ret
dec
stos
pop
aad
xchg
dec
fistps
gs
icebp
addb
out
dec
push
hlt
fisubrs
pop
popf
mov
out
jns
push
mov
insl
or
call
out
test
jge
or
lods
mov
sbb
xchg
jl
sub
lods
lea
js
xchg
and
repz
xchg
jp
mov
pop
int
cmp
das
push
jmp
cltd
adc
daa
jecxz
cmp
jbe
sbb
push
push
movl
pushf
subb
cmp
popf
mov
fmulp
into
outsb
mov
mov
aad
testb
adc
std
push
inc
and
mov
adc
out
loop,pt
jge
imull
pop
int3
inc
push
std
push
mov
jae
lods
jb
cmpsb
push
das
mov
mov
shr
jbe
mov
mov
test
jne
dec
push
sub
bound
or
mov
mov
xchg
sub
ret
xchg
push
pop
test
jp
out
jb
push
cmp
mov
scas
sahf
xchg
notl
test
jge
out
dec
cmc
popf
aam
mov
roll
pop
test
add
xchg
ljmp
imul
in
leave
popa
or
add
mov
movl
push
adc
fdivrs
ds
out
mov
inc
rcl
or
stos
mov
add
decb
lret
aaa
rcrl
sar
or
call
push
sbb
arpl
push
adc
add
sub
add
pop
jbe
into
fadd
cmp
mov
jns
xorb
mov
ret
mov
sbb
ror
or
jnp
push
mov
enter
shr
jmp
and
cmp
movsl
jne
ljmp
jbe
jle
push
icebp
pop
mov
cmp
sbb
imul
fnop
dec
bswap
adc
fs
cmpsl
movb
icebp
push
or
out
pusha
adc
or
and
and
mov
es
pop
push
mov
sti
pop
int3
into
int3
lret
pop
inc
roll
push
xlat
mov
lret
pop
pop
ja
enter
jmp
pop
pop
pushf
jo
jae
leave
dec
movsb
mov
mov
dec
fwait
xchg
fadds
mov
dec
stos
dec
mov
jae
out
loope
data16
mov
mov
xor
and
xchg
xchg
sti
cmp
pop
adc
fcmovu
cltd
pop
les
testb
dec
in
mov
mov
push
dec
rolb
jl
cmp
push
outsb
test
aaa
lcall
push
sbb
fdivrs
dec
stc
pushf
adc
ja
cld
mov
fdivp
mov
ljmp
decb
pop
sub
pop
cmpsb
enter
sub
mov
dec
jle
lods
stos
pop
fs
rclb
jecxz
xchg
sub
push
mov
and
adc
pop
sub
push
call
imul
les
add
jg
fisubl
jns
pop
jns
sub
lcall
mov
jns
pop
subb
add
cmp
imul
mov
lds
imul
sti
sti
ret
mov
inc
in
es
shrb
jmp
xor
xchg
adc
rorl
sub
aad
and
cmpsb
mov
adc
mov
xchg
cmc
mov
sbbb
add
mov
out
push
jae
test
mov
xchg
adc
dec
jmp
push
jo
icebp
jmp
das
sub
movsl
pushl
inc
xor
psrad
ret
lret
push
shrb
lcall
add
icebp
dec
mov
sub
repz
mov
inc
jmp
out
cmovp
scas
and
sbb
lods
push
fwait
xchg
int
xlat
icebp
out
inc
icebp
sahf
jmp
test
pop
and
push
push
outsb
leave
inc
jnp
pop
inc
inc
and
mov
and
out
ja
fwait
inc
daa
xchg
push
inc
lret
cs
dec
ljmp
shlb
jb
adc
cmp
mov
jno
pop
push
mov
or
inc
cltd
push
adc
leave
mov
mov
cmp
decl
test
insl
je
mov
mov
int3
dec
push
movsl
call
inc
cmpsl
in
subl
clc
and
decl
pop
fs
cmpsl
fwait
xchg
fcmovnb
ror
aaa
in
or
stc
test
mov
loop
jl
inc
inc
repnz
loopne
inc
stc
push
ficoml
subb
xor
inc
testb
fnstenv
xchg
out
into
scas
lahf
pusha
pop
sbb
lahf
cltd
mov
sbb
and
jg
inc
cmc
test
dec
mov
dec
stos
lods
lds
imul
addl
hlt
jae
scas
out
inc
mov
mov
hlt
scas
jno
lods
ret
shl
adc
test
mov
cmc
mov
add
inc
sub
aas
jno
stos
icebp
loopne
dec
xchg
xorl
movsl
cmp
push
jge
pop
or
test
mov
stc
into
insl
xchg
in
lods
push
xor
stc
mov
add
xor
lock
adc
mov
add
rcl
pushf
push
jnp
or
dec
sti
cld
adc
cmp
dec
cmp
lds
imul
and
mov
mov
nop
out
repnz
das
jecxz
pop
xor
loopne
shr
nop
dec
test
sbb
insl
cmp
or
int
mov
pop
pop
lods
in
sbb
fisubl
js
orl
dec
jmp
and
pop
loopne
pop
lcall
cmp
in
or
out
pusha
adc
sub
cwtl
inc
outsl
adc
cld
and
or
mov
dec
mov
mov
mov
imul
xchg
scas
hlt
push
xchg
loopne
lock
aad
push
pushf
adc
push
mov
mov
pusha
adc
mov
ret
jp
push
js
cs
xchg
call
push
cmp
mov
pop
out
shll
ja
cmp
mov
sbb
addr16
aas
cwtl
adc
cmp
xchg
push
or
fbld
lock
cmp
dec
mov
cs
loope
icebp
out
pop
aas
cmp
sbb
loopne
sbb
icebp
pusha
jnp
mov
mov
shl
popf
lds
int
aam
adc
and
dec
movsl
es
sub
jl
mov
fs
pop
fwait
and
das
sub
mov
cmp
and
jg
mov
data16
dec
lret
test
movl
sbb
mov
test
stos
push
dec
mov
mov
inc
enter
imul
cmpsb
cmc
out
iret
inc
aaa
std
pusha
aaa
out
push
mov
xchg
cmp
outsl
repnz
xchg
sbb
mov
cwtl
ljmp
mov
inc
cld
or
ljmp
mov
push
stc
inc
sub
pushf
aaa
and
out
xor
lds
jns
adc
xor
fwait
sti
mov
mov
ret
dec
fucomp
in
fdivs
repz
jmp
or
xchg
in
and
push
scas
adc
fisubl
repnz
xchg
push
pop
dec
popa
out
cwtl
stos
adc
popf
mov
xor
mov
stc
sub
sarb
xor
mov
mov
je
xchg
push
push
mov
addr16
push
cmp
cli
cmpb
xchg
insb
int
hlt
dec
cltd
xchg
add
cld
cs
or
aad
add
pop
in
or
sub
stos
adc
mov
mov
mov
cmp
les
stos
sub
gs
nop
adc
shlb
daa
pop
push
sub
jecxz
push
mov
adc
fsub
jge
or
int3
dec
lods
rcrb
enter
xchg
cmpl
mov
addr16
mov
sete
jno
push
jnp
incb
lret
pushf
push
dec
push
xchg
mov
repz
mov
data16
jg
adc
inc
cmp
or
xor
repz
scas
xchg
aam
sbb
fstpt
rol
mov
or
js
mov
and
jge
dec
lods
fisttpl
js
dec
fists
cmp
arpl
rolw
loopne
mov
add
gs
in
jg
sub
cmp
int
cld
push
xor
fsubl
xor
jl
xor
inc
lret
or
jge
repnz
mov
dec
lret
pop
insb
out
popf
hlt
mov
rolb
out
sub
js
call
mov
push
rolb
mov
jmp
xor
dec
sbb
xor
pop
mov
jnp
pmulhw
adc
fadds
aam
adc
movsb
mov
cmp
cmp
pop
sub
negl
lret
out
insl
jmp
leave
cmp
xchg
sbb
fnstenv
lret
notl
push
mov
jnp
sti
lcall
mov
xor
push
push
dec
ffreep
inc
mov
mov
lahf
adc
arpl
adc
push
ss
cmpsl
imul
sar
nop
stc
inc
hlt
push
aaa
je
lea
insb
mov
mov
or
mov
sub
dec
jmp
sahf
lock
mov
out
test
pop
sub
lds
jecxz
je
push
insb
dec
cli
repz
ds
sti
jns
fs
test
imul
jmp
pop
sbb
movsb
nop
or
int
pop
sbb
xchg
daa
aaa
inc
hlt
or
jl
popf
daa
mov
mov
jbe
jne
call
add
cmp
arpl
push
mov
mov
sbb
cmp
jl
call
jmp
aas
xor
and
pop
lcall
jo,pn
cmp
fcoms
adc
cmpsl
mov
pop
jmp
push
inc
rorl
jge
ret
cmp
test
mov
in
inc
pop
inc
mov
add
test
popa
push
jne
jl
test
enter
or
cmp
outsb
sbbb
js
fcompl
mov
iret
cmpsl
push
daa
in
sha1msg1
sbb
push
push
jae
fistl
inc
stos
int
lahf
jg
adc
lcall
bound
inc
fcomi
xchg
mov
mov
test
lds
gs
sub
cmp
sbb
shl
ja
push
fcomps
push
bound
in
repnz
adc
lcall
cltd
cmpsb
mov
adc
test
pop
or
pop
xor
gs
orb
lods
dec
cmp
pop
lahf
jmp
jo
cld
dec
mov
or
loop
adc
das
sub
cmp
sbb
insb
ljmp
cmp
mov
popf
pop
mov
dec
stos
ss
jne
jne
shrb
rclb
xor
dec
or
scas
inc
jb
mov
pop
xchg
imul
jmp
test
pop
cwtl
push
hlt
fnstcw
dec
mov
repz
mov
cmpsl
cwtl
pop
mov
bound
mov
lods
inc
es
movsl
clc
call
cmp
lods
push
mov
xor
ljmp
aas
mov
push
loopnew
ja
inc
in
add
dec
pop
mov
movsl
mov
ljmp
push
iret
mov
mov
dec
dec
loope
jge
arpl
pop
shr
test
push
ret
fs
das
setnp
int
xlat
scas
mov
adc
adc
cmc
xlat
adc
cmpsb
mov
jl
int
push
or
pop
in
mov
sbb
adc
pop
int3
enter
in
xchg
mov
jns
or
gs
push
jmp
dec
dec
cli
push
xchg
out
lret
hlt
jl
ds
mov
pop
iret
cmp
jne
mov
out
mov
jo
adc
outsl
jno
popf
inc
add
sbb
shl
inc
dec
stc
mov
xorb
repz
dec
and
ja
loop
hlt
pop
pop
jno
loope
lea
and
aad
jbe
or
rolb
sti
or
ja
inc
std
push
cmp
push
js
sti
das
sbb
outsb
mov
dec
mov
push
dec
je
bound
out
or
cltd
pusha
xor
daa
mov
aam
cmp
lds
addr16
adc
out
ds
cmpsb
mov
leave
loop
xlat
adc
add
sbb
in
or
cwtl
pop
and
dec
adc
inc
dec
pop
xchg
adc
jo
aad
jae
ja
leave
pop
xchg
pop
bound
es
push
sbb
sub
xor
cld
xor
jle
loopne
inc
mov
outsb
jae
je
and
xlat
daa
jae
jbe
jecxz
lods
fcmovnbe
imul
hlt
test
inc
mov
ss
adc
push
jb
sbb
imul
in
imul
out
cmc
pop
xchg
repnz
or
ja
inc
mov
inc
mov
movsb
nop
lea
leave
xor
and
mov
test
mov
cmp
xor
insb
xchg
aas
adc
sbb
pop
or
leave
mov
or
adc
push
aaa
dec
or
es
cwtl
popa
neg
cwtl
push
cmpsl
pop
mov
test
leave
cmp
loop
pop
jmp
les
int3
es
adcb
mov
ljmp
pop
dec
movsl
inc
adc
inc
subl
loope
jb
and
push
push
add
cmpsl
xor
xchg
mov
fsubrs
xor
mov
mov
scas
push
hlt
xchg
mov
xchg
test
lcall
inc
fwait
or
dec
scas
sbbl
jp
mov
inc
or
jge
clc
in
ret
mov
enter
leave
xchg
es
lods
push
cmpsb
pop
test
cwtl
mov
imul
fnsave
push
loop
lret
or
fsubl
lea
leave
lahf
cmp
mov
add
inc
sub
ret
push
out
mov
or
mov
rep
repz
mov
inc
sbb
mov
fsts
mov
notl
mov
mov
aaa
ret
movsb
faddl
jge
enter
lds
or
lret
jno
out
inc
sarb
xor
and
sbb
movsl
arpl
inc
in
imul
shr
ljmp
xchg
sbb
dec
arpl
loope
inc
mov
arpl
cld
aaa
adc
cwtl
aam
lods
in
xchg
loope
js
out
inc
mov
and
cltd
loopne
push
stos
sbb
lret
pop
sbb
mov
aam
jge
int
ss
sub
aaa
add
imul
jle
stos
shlb
je
xor
fstpt
add
mov
pop
fsubrp
dec
mov
test
ficomps
imul
inc
ss
stc
pop
adc
pop
and
enter
xor
pop
enter
fstl
cmc
cli
xchg
in
push
aas
mov
sbb
arpl
movsb
pusha
push
and
xor
cmp
push
je
stc
push
out
push
xor
xor
imul
js
lock
xchg
sub
sbb
js
push
jns
add
xor
dec
lahf
in
adcl
aas
mov
jns
mov
into
cmp
int
mov
sbb
adc
or
aaa
in
test
push
push
push
fisubrs
add
jns
adc
push
sbb
shl
adc
pop
rcrl
stos
xlat
or
sub
sub
xor
cmp
jmp
sbb
pop
sar
std
loopne
pop
test
push
add
inc
push
lret
daa
push
xor
mov
xchg
cmp
and
cmpb
popf
mov
mov
outsb
outsl
or
adc
and
and
jb
arpl
cltd
adc
cmp
pop
pop
sub
scas
push
aam
ret
adc
lcall
fnsave
es
out
pop
ljmp
push
inc
arpl
jge
inc
leave
cmp
or
rcpps
lods
xor
ljmp
into
xor
mov
sarl
in
cmp
pop
inc
clc
xchg
jl
jp
arpl
imul
push
arpl
jne
ds
out
xchg
pop
pop
push
inc
lds
nop
jne
jne,pn
stos
pop
mov
mov
push
xchg
in
and
sarl
mov
jmp
nop
orb
xchg
or
fucomi
push
insb
dec
mov
mov
movsl
negb
sbb
or
or
mov
add
mov
push
pop
push
jb
fs
mov
scas
push
xor
or
popa
incl
xlat
jg
mov
dec
pop
clc
jecxz
sub
mov
fbld
pop
stc
lret
mov
out
xchg
test
adc
mov
xor
jl
inc
jnp
adc
xchg
pusha
sahf
mov
repnz
jge
add
xor
xor
mov
arpl
loop
loop
cmp
stos
mov
pushf
stos
enter
clc
push
add
sbbl
fisttpll
cmpsl
xchg
test
in
lret
popf
and
dec
xchg
js
test
jp
outsl
leave
imul
repz
jns
mov
data16
and
mov
or
lcall
in
hlt
repnz
sub
outsl
cwtl
movsb
popa
fwait
lods
aad
popa
xchg
cmpsl
sub
pop
test
mov
stos
mov
sarb
inc
gs
cs
cmpsb
lcall
dec
arpl
push
pop
leave
stos
dec
and
shll
fadds
nop
mov
popf
xchg
cwtl
sub
add
pushf
sub
addb
and
lock
ffree
jg
xchg
add
inc
shll
decl
int
rorl
out
mov
xchg
enter
insl
loope
aas
das
cmp
add
cmp
fs
mov
pop
sub
sbbl
fists
xlat
lahf
dec
pop
sub
adc
xchg
add
push
sub
mov
pop
cmpsb
movsl
lret
mov
sarl
subl
push
cli
aaa
sbb
movsb
hlt
jp
inc
sti
call
shl
cmp
sarb
cltd
inc
pop
test
mov
mov
lcall
bound
stos
jbe
cmpl
jnp
in
insb
cmp
and
roll
cltd
xchg
lret
bound
push
inc
aad
mov
lret
pop
inc
mov
aaa
or
mov
mov
sub
outsl
cwtl
pusha
in
cmp
pusha
insb
data16
push
sbbb
stos
and
sbb
jnp
cmp
in
xchg
imul
xchg
scas
mov
nop
inc
shlb
sub
andl
test
cmp
shll
pop
and
movsb
inc
dec
loopne
pushf
in
lods
cmp
inc
push
inc
outsb
xlat
lods
adc
les
mov
ret
push
rorb
jp
push
rcrl
mov
add
inc
or
sub
sub
cmp
lods
cwtl
aad
sbb
jae,pt
dec
or
fiadds
pop
add
push
mov
mov
ds
cmp
push
or
iret
push
ss
mov
cmp
decl
mov
dec
push
inc
test
les
cmpsl
dec
into
loope
xchg
fldcw
sub
in
dec
add
daa
mov
call
sbb
insb
adc
mov
push
push
hlt
into
fsts
add
je
fs
cmpsl
inc
push
mov
movsb
ja
test
hlt
pop
in
aam
xlat
xor
and
adc
add
je
fs
cmpsl
inc
push
mov
movsb
ja
test
hlt
pop
in
aam
xlat
xor
and
adc
add
je
fs
cmpsb
inc
push
mov
movsb
jle
arpl
xor
pop
ror
jmp
jg
iret
add
je
fs
daa
test
mov
repz
jl
fwait
enter
sub
sbb
or
pop
push
dec
lods
mov
popf
mov
sti
jmp
sub
sbb
out
pop
pop
aas
mov
fwait
xchg
mov
xchg
int
int
xor
and
adc
inc
gs
push
mov
push
mov
sahf
enter
clc
in
lods
xchg
adcb
push
inc
or
dec
jge
mov
xchg
sub
pop
cld
adc
xchg
lods
mov
cmp
mov
xchg
enter
sub
arpl
int
and
cmp
incb
pop
and
std
popf
sar
inc
cs
adc
in
fildl
jmp
sbb
fldt
sub
mov
jnp
add
inc
mov
ja
cli
std
adc
xor
cwtl
jge
mov
orb
xchg
pop
gs
dec
lods
call
insl
mov
lret
xchg
dec
or
xor
sbb
push
mov
int
test
scas
adc
fcmovnu
dec
in
and
or
jnp
imul
lret
mov
movsl
insl
xchg
mov
xlat
fcmovnu
movsl
inc
imul
push
bndstx
xor
lods
std
shr
out
stc
loop
xchg
cwtl
lahf
mov
jle
push
jp
add
daa
out
std
fsubr
in
stos
xchg
cmpsl
mov
insl
push
insb
popa
dec
jne
and
pop
pop
dec
lods
mov
popf
mov
sti
std
jmp
fcmovnu
lret
sub
sbb
imul
dec
lods
mov
popf
mov
sti
std
jmp
fcmovnu
lret
sub
mov
inc
add
fwait
iret
ffree
xchg
sbb
jmp
inc
fcos
dec
pop
xchg
ja
mov
fsts
push
int
outsb
test
mov
adc
mov
subl
inc
iret
dec
stos
cmp
mov
iret
into
push
pop
insb
xchg
push
sub
xor
idivb
addb
into
xor
mov
fwait
les
lock
pop
push
push
xor
xor
mov
add
std
cwtl
in
sbb
dec
cmpsb
adc
fwait
xor
bound
test
addr16
std
pop
adc
sti
mov
arpl
ret
icebp
jne
pushf
shll
and
dec
call
add
cmp
xchg
lods
rorl
cmp
jno
stc
dec
sahf
pop
and
jle
xchg
cmpsl
insb
jl
xchg
mov
xor
enter
dec
mov
cmp
addb
lret
push
xlat
movsb
cld
xor
jp
adc
aam
inc
push
cli
mov
pop
sbb
stc
rol
nop/reserved
mov
xor
cmp
shr
inc
inc
test
cmpsb
adc
mov
dec
mov
imul
push
add
adc
stos
jb
push
or
xor
jo
push
rclb
scas
sbb
pop
pop
cmp
insb
add
rcrl
loope
or
xchg
and
dec
mov
add
dec
mov
xchg
jmp
mov
xor
loopne
rcrl
sbb
test
jae
das
test
and
testl
sub
xchg
xor
jnp
adc
push
lock
add
xchg
push
fistpll
test
xor
lret
sub
push
out
push
cmp
add
jae
sbb
cmpsl
mov
leave
jg
movsb
mov
sbb
inc
loop
fmuls
aad
std
aam
mov
shlb
inc
clc
test
sti
xchg
outsl
xchg
sbb
shrb
add
dec
pop
mov
pop
movsb
movsb
subb
dec
js
test
jmp
ret
je
add
imul
and
or
inc
cli
mov
dec
and
loope
roll
inc
loope
sbb
mov
lods
push
das
sub
fiadds
bound
out
lock
or
or
or
sti
mov
lret
sub
add
imul
out
popf
jo
comiss
mov
mov
inc
mov
jo
inc
mov
or
xchg
mov
mov
lahf
inc
dec
ds
cmpsb
sub
push
stc
hlt
loopne
dec
mov
inc
mov
test
jp
out
cmp
rolb
cld
mov
aas
adc
lret
scas
shll
mov
ret
cld
negl
loop
xor
sub
das
xlat
push
arpl
incb
gs
test
ss
jge
pop
fsubrl
push
mov
cmc
test
outsb
lahf
and
outsl
jle
inc
cwtl
out
or
fdivrp
seto
inc
fwait
out
divl
xchg
add
dec
mov
cli
repz
push
lods
fildll
fwait
xchg
test
push
insb
rcrl
scas
xchg
inc
daa
sub
dec
cli
jno
sbb
fisubl
or
jp
sub
dec
icebp
dec
test
mov
wbinvd
dec
xchg
inc
out
test
or
pop
ja
sti
mov
notb
adc
repz
dec
inc
shll
std
cmp
dec
dec
ds
cld
mov
or
jle
jne
dec
dec
pop
push
outsb
pop
aam
jl
outsb
inc
sbb
addl
pusha
push
push
sbb
pop
cmovs
cmp
push
aaa
cmc
and
sub
jge
mov
call
lret
iret
cmp
test
addb
xor
cmc
cli
pop
stos
dec
xchg
pop
cltd
push
dec
pop
jb
bound
xchg
test
jecxz
mov
pushf
dec
and
pop
inc
jns
out
mov
scas
shlb
pushf
push
cmp
push
sbbl
add
lock
jecxz
enter
cmp
inc
pop
lock
mov
in
adc
or
ja
lock
sub
mov
pop
push
mov
cmc
pop
sbb
jb
mov
and
out
xchg
push
rorb
push
push
das
or
and
push
aas
dec
jge
mov
xchg
loope
cmpsl
mov
cmpl
cmp
and
mov
jl
add
xor
pushf
stos
mov
aas
hlt
fwait
iret
in
test
adc
jmp
dec
jo
jmp
jecxz
add
mov
mov
inc
jne
dec
lds
pop
into
andl
push
ficoms
add
js
push
iret
mov
loope
xchg
je
in
xchg
push
add
xor
xor
into
fidivs
fwait
mov
test
or
inc
pop
leave
mov
jbe
arpl
insb
fs
push
leave
jo
cld
loope
or
inc
jns
daa
loopne
pop
pop
mov
insb
push
and
cmpsb
je
lea
dec
jnp,pn
mov
jae
push
inc
daa
aad
addl
clc
sbb
dec
mov
sarb
pop
addr16
or
mov
cmp
add
scas
push
cmp
addb
fcoml
xlat
push
xchg
mov
outsl
testl
xor
inc
test
movsb
lods
add
mov
cltd
inc
mov
xchg
mov
xchg
jb
sarb
pop
jnp
cld
cmpsb
jno
inc
mov
aas
std
pop
adcl
test
iret
jg
and
xchg
push
cltd
jg
popf
shr
cli
lds
xchg
push
mov
mov
inc
push
and
stc
mov
mov
jp
call
imul
in
jo
push
in
push
bound
cmpsl
mov
xchg
in
fwait
ficoms
add
push
pop
in
pop
xchg
sbb
sub
ret
inc
lret
fwait
aad
xchg
add
pop
add
out
push
pop
dec
mov
pop
adc
fmul
mov
push
sub
das
dec
sarb
push
mov
fcomp
jg
neg
push
xchg
das
cmpsl
pop
into
xlat
cmp
dec
or
jl
shll
ret
dec
sub
pushf
jl
movsb
dec
mov
popf
push
cmc
xchg
lret
scas
jne
sahf
push
negl
test
mov
or
repz
aad
in
jmp
or
cltd
sbb
and
cmc
jo
sub
cltd
fcomps
jne
mov
mov
pop
scas
mov
xchg
and
aad
sbb
cs
jle
test
jecxz
repnz
push
leave
enter
sub
mov
fidivl
lahf
jne
xchg
loopne
jmp
jo
addl
sub
dec
mov
stos
lods
pop
jg
mov
adc
cmp
je
out
in
int
and
adc
cmp
add
push
jo
fcoml
nop
mov
js
pop
jge
pusha
mov
cld
mov
xor
or
pop
inc
dec
test
add
sbb
dec
mov
test
and
cmp
dec
scas
in
adc
push
sbb
add
push
mov
jg
push
xor
fdivr
push
lret
sub
inc
subb
test
insb
loopne
inc
iret
sti
addr16
xchg
pop
test
imul
sub
and
jnp
cmp
xchg
jno
adc
jne
icebp
cmp
jb
clc
fidivrl
imul
cmp
jb
in
test
cmpsb
jle
or
std
or
hlt
cmc
mov
into
enter
gs
push
dec
pop
and
cs
push
dec
loop
mov
jno
loop
push
jae
jmp
cmp
fwait
cli
pusha
or
inc
push
sbb
ret
and
ja
aas
sub
pop
cmp
fcmovnbe
dec
xor
das
xlat
xlat
and
sbb
inc
xlat
addr16
lods
push
add
pop
addb
xorl
sbb
aad
push
inc
add
mov
push
mov
repz
ffree
and
shlb
push
cli
jbe
divb
mov
pop
fnsave
add
daa
movsl
mov
adc
push
inc
loopne
jecxz
jo
ds
mov
jne
mov
shll
pop
push
xchg
in
add
pop
add
mov
fistl
orb
ss
cmp
dec
rorb
shl
mov
jns
cmp
loopne
add
shl
or
pop
or
addr16
mov
push
mov
or
iret
push
imul
scas
loope
insl
stos
into
dec
jle
cmpsb
push
sbb
add
sub
mov
imul
sbb
outsb
mov
ret
jmp
cmpsb
dec
adc
cmpsl
pop
into
dec
cld
jne
movsb
mov
mov
call
pop
inc
mov
into
add
loopne
mov
imul
jb
in
jo
fcompl
sbb
fidivrl
push
add
cmp
xchg
mov
insb
or
ja
lret
mov
loopne
add
sarl
loope
sub
sbbl
int
test
adc
leave
mov
cmpsb
or
cs
insb
int3
popa
mov
cmp
rorl
repnz
or
mov
movl
add
out
dec
sbb
mov
outsl
push
xor
aad
in
pop
sbb
stc
or
ror
ficoms
jns
and
dec
and
push
sbb
lcall
leave
cmp
mov
hlt
lods
mov
mov
adc
inc
adc
in
out
les
dec
ss
ret
push
and
xchg
pop
cmp
adcb
dec
fildll
imul
mov
cmp
sub
jle
or
mov
sti
adc
mov
sbb
push
push
sub
mov
hlt
sub
cli
lock
jnp
push
jae
and
fbstp
mov
push
xor
push
jnp
push
daa
inc
dec
lea
jbe
scas
ret
inc
dec
rol
aad
cwtl
aas
push
and
shll
mov
and
fcomps
pusha
jg
adc
popf
inc
sbb
movb
std
aam
mov
or
in
add
mov
or
dec
inc
mov
shlb
and
pop
fidivl
lea
shll
pushf
test
mov
sbb
mov
pop
and
xor
mov
imul
xchg
or
test
pop
pop
add
daa
adc
les
mov
cli
jmp
cmp
bound
lcall
and
test
rolb
stc
les
or
jl
inc
test
push
xchg
jno
lea
xchg
lret
out
lods
sbbl
and
or
int3
xorl
daa
sti
popa
xor
nop
or
mov
lret
cmp
xor
xchg
push
inc
jnp
mov
lcall
xor
mov
or
push
mov
push
pop
mov
dec
scas
xorb
jo
dec
add
mov
mov
ret
ret
cld
in
push
xor
test
cmp
mov
outsl
jge
scas
push
pop
negb
idiv
dec
adc
xor
or
jbe
sbb
sub
or
xchg
aaa
test
push
scas
shrl
ljmp
stos
jmp
decl
xchg
stc
icebp
xchg
fld
cs
jo
pop
pushf
into
jecxz
push
jp
jmp
sub
cs
in
daa
addr16
aas
cwtl
or
and
jne
sar
es
dec
sbb
lcall
push
pop
incl
sarb
adc
arpl
fdivs
lcall
cmp
in
pop
xchg
out
mov
mov
inc
shlb
sbb
rclb
inc
cmp
xchg
and
cmc
xchg
mov
fldcw
mov
stc
adc
xlat
aaa
imul
xchg
pop
insb
adc
iret
push
sti
test
mov
movsb
sub
or
mov
arpl
mov
sbb
lret
jo
pop
js,pn
inc
adc
add
cmpsl
pop
inc
push
leave
rolb
rcrb
repz
insl
pop
shll
jecxz
xchg
xor
ds
rorb
xor
or
jecxz
or
jno
shrb
stos
test
add
out
rcrb
int
nop
js
mov
sti
mov
fiaddl
push
push
dec
ja
data16
add
push
xlat
ss
and
push
pop
xor
out
jge
mov
dec
je
add
adc
jecxz
push
adc
mov
fstps
stos
mov
mov
jne
fisubrl
movsb
jns
xorb
out
imul
dec
repnz
mov
aas
pushf
in
push
pop
mov
xchg
pop
out
out
sub
add
mov
and
mov
inc
mov
mov
dec
fdivl
sbbl
cld
repz
lret
fs
jp
in
jbe
mov
cmp
mov
arpl
mov
sub
lret
outsl
mov
jae
les
repz
je
shr
pop
inc
push
sub
xchg
addb
dec
je
fisubs
add
push
imul
test
movsl
ror
dec
push
call
imul
cmp
das
fstpl
mov
mov
or
icebp
adc
inc
dec
pop
adc
repz
dec
lret
in
jl
mov
push
dec
stos
mov
sahf
stos
jno
jl
insl
daa
gs
iret
sub
rcl
mov
dec
inc
std
nop
adc
stos
ret
jmp
leave
or
inc
popf
loopne
addr16
jbe
dec
xchg
nop
jmp
andl
push
lcall
adc
les
sub
cwtl
clc
sub
mov
push
mov
in
xlat
xchg
fmuls
cmpsl
push
in
mov
mov
sbb
pushf
call
shlb
mov
aas
mov
push
loope
scas
fs
test
nop
loop
popa
filds
pop
adcl
xchg
inc
fadds
cltd
les
stos
pusha
outsb
decl
push
test
mov
xchg
in
scas
pop
jo
pop
negl
push
nop
cmpsl
sbbl
mov
das
jae
adc
xor
pusha
rcrb
xor
mov
push
lcall
loop
sub
mov
cmp
mov
mov
jge
adc
lcall
or
scas
dec
loope
sahf
add
fisttps
gs
push
std
sbb
xchg
push
cmpsl
sub
decl
pushf
in
pop
fidivrl
test
rcr
imul
call
mov
mov
pop
mov
push
cmp
mov
rcll
jae
jbe
arpl
sub
mov
sub
lahf
and
mov
mov
dec
insl
xchg
sbbb
mov
inc
jno
stos
push
xorl
dec
xor
into
subb
inc
out
pop
nop
pop
adc
push
popa
test
aas
xorl
xchg
xchg
sbb
add
jecxz
inc
arpl
loop
mov
leave
sbb
inc
cltd
push
xor
add
cmp
inc
fists
jne
adc
insl
rorl
stos
push
jp
fcompl
gs
push
pop
mov
cmp
aam
mov
fwait
pop
in
bound
bound
mov
lods
sarb
pop
repz
fiaddl
cwtl
sbb
cltd
jp
rclb
mov
cmp
shl
push
xor
popa
sub
jmp
aaa
cwtl
cmp
mov
outsb
mov
arpl
jb
xor
pop
mov
out
sti
xor
sti
int3
xchg
mov
out
pop
sbb
pusha
mov
mov
test
and
in
dec
adc
inc
rorl
adc
pop
sub
adc
fs
iret
ds
sub
push
cmp
push
leave
lret
and
mov
iret
cmp
mov
enter
movsb
nop
retw
and
lcall
mov
inc
adc
jae
in
das
adc
iret
push
mov
lock
popf
and
xchg
sub
dec
add
js
xchg
ds
xchg
outsb
in
ret
or
ret
mov
cmp
ret
sbb
xor
push
xor
and
cli
mov
roll
daa
imul
xchg
pop
pop
sub
mov
lds
pop
pop
jmp
scas
push
jg
sub
sub
xchg
xchg
sarl
imulb
scas
enter
pusha
pop
repz
mov
inc
sarb
ja
adc
sahf
inc
cmp
ja
fidivrl
xor
cmpb
pop
fidivrs
push
call
mov
stos
in
sub
cmp
sub
pusha
or
pop
xchg
push
imul
lods
mov
dec
mov
mov
sbb
pop
ret
aaa
mov
ds
decl
xor
or
test
repnz
sbb
pop
pusha
xchg
mov
jl
js
in
int3
lret
or
je
xchg
mov
xor
push
leave
push
imul
xchg
ret
xor
movsl
cmp
out
sub
ljmp
cmp
dec
scas
leave
int
add
pop
xor
movsl
jmp
cs
ficomps
push
xchg
mov
or
loop
out
int
adcb
xchg
js
xchg
pushf
sub
in
adc
mov
out
mov
mov
xlat
ss
stos
or
add
dec
jo
inc
stc
push
fisubl
in
insl
lock
rolb
and
sti
or
or
cmp
adc
imul
call
in
enter
sbb
jmp
inc
xlat
push
daa
sarl
cmp
addr16
pop
movsb
out
sbb
shrl
xor
push
cmp
movsl
jae
shll
xor
sbbb
cmpsl
clc
pusha
sub
add
add
inc
fildll
sub
das
push
push
fisttpl
fs
test
and
orb
ljmp
frstor
pop
bound
inc
ja
sub
shl
inc
rcl
ret
cmpb
fbstp
push
loope
mov
lods
stc
loope
xorb
fucomi
inc
push
loopne
fsubl
or
xchg
xchg
icebp
lret
jbe
aaa
dec
insb
dec
or
enter
loope
stos
fbstp
pop
mov
shl
adc
sbb
call
stos
mov
add
pushf
and
lret
pop
mov
push
cmp
cmpsb
push
mov
mov
jge
std
adc
in
int
jl
stos
xor
mov
cmp
out
jno
jae
push
adc
ljmp
add
cmp
data16
in
pop
sbb
xor
mov
test
inc
out
dec
xor
test
mov
dec
xchg
push
mov
aaa
dec
ret
dec
js
sti
pop
stos
and
fsubp
imul
inc
mov
dec
mov
xor
mov
mov
mov
stc
push
mov
mov
adc
je
cmp
pop
sbb
rol
sub
call
gs
mov
fld
mov
mov
lods
in
test
fdivrs
popf
pop
outsl
mov
out
sarb
test
andl
stos
and
xchg
lahf
insb
sbb
movsb
sub
xchg
lret
sub
pop
mov
gs
mov
movsb
mov
mov
cmp
adc
ret
jno
sar
mov
mov
das
sarb
adc
jecxz
jmp
ljmp
repnz
add
pusha
sbb
lock
lock
imul
shl
pop
js
ds
cli
or
sub
xor
pop
enter
ret
sahf
add
mov
cmp
jle
xchg
hlt
pop
cli
shrb
add
mov
icebp
sbb
cmp
ja
or
clc
cmp
or
jbe
inc
or
scas
dec
clc
mov
push
popf
xchg
lret
aaa
lods
mov
xchg
dec
xlat
xchg
mov
out
dec
xchg
mov
das
mov
push
pop
inc
add
mov
scas
sub
mov
or
sbb
jmp
out
arpl
push
jecxz
jp
hlt
shr
ljmp
sbb
push
push
pusha
movsb
push
stos
rcl
add
idivb
shll
stos
mov
pushf
ret
push
mov
dec
push
aaa
es
ret
data16
pop
into
pop
sub
lcall
and
fimuls
and
jmp
test
imul
les
cwtl
adc
jmp
push
jle
jbe
sbb
xor
push
adc
dec
sub
and
push
xchg
adc
dec
inc
scas
push
ss
jnp
loope
sti
sbb
jmp
rorl
lods
and
repz
xor
popf
mov
rolb
mov
and
bound
jae
cltd
inc
syscall
push
std
pop
jo
sbb
cmp
xchg
mov
or
xchg
in
push
mov
add
jp
sbb
ss
out
aam
leave
out
push
nop
add
dec
sti
mov
sbb
imul
dec
lods
mov
popf
mov
sti
std
jmp
fcmovnu
lret
sub
sbb
imul
dec
lods
mov
popf
mov
sti
std
jmp
fcmovnu
lret
sub
arpl
ret
dec
pop
pop
dec
lods
arpl
mov
sti
cld
jmp
sti
sub
sbb
imul
fisttpll
inc
inc
add
fwait
popf
cld
lcall
xor
jmp
mov
lahf
mov
fiadds
stos
push
je
jg
pop
add
push
shlb
wrmsr
pop
xlat
out
sar
ror
lock
mov
dec
outsl
push
jg
inc
mov
add
adc
and
xor
cmp
push
call
idivl
outsl
pop
pop
or
add
das
jl
pop
push
jge
jnp
stos
sarb
mov
dec
pop
mov
or
in
xor
lock
push
shr
cmp
mov
outsl
xor
jo
pusha
mov
jge
mov
test
cmpsb
test
inc
xchg
inc
mov
test
inc
outsb
scas
outsl
xor
mov
mov
neg
adc
sar
lret
jnp
movsl
mov
mov
je
cmp
test
inc
mov
lock
cmp
add
pushf
push
mov
dec
dec
scas
sub
jo
stos
inc
adc
lods
pop
enter
rolb
scas
mov
sbb
fwait
sahf
mov
cltd
jno
rolb
shl
jne
arpl
fnstsw
mov
mov
pop
outsl
dec
xlat
js
imul
pop
sub
test
std
shlb
sub
movhlps
push
cmp
push
push
jbe
test
repnz
std
in
int3
out
lods
inc
push
push
or
pusha
arpl
push
push
insb
test
mov
nop
mov
inc
outsl
push
jg
dec
jo
add
adc
and
xor
shr
jmp
iret
lock
mov
inc
outsl
push
jg
dec
jo
add
adc
and
xor
shr
test
scas
enter
cmpsl
cmpsb
mov
inc
std
movsb
fsubrl
xchg
jmp
mov
push
add
jecxz
fisttps
aam
mov
fdivl
pop
inc
insl
cmp
imul
fcoms
or
pop
mov
push
push
jecxz
cwtl
cmp
jns
adc
sbb
add
sahf
shl
jmp
xchg
cs
xchg
adc
or
stos
fdivrl
daa
adc
sub
adc
test
sub
cld
adc
inc
xchg
xchg
ja
dec
aas
andb
enter
fwait
push
and
pusha
sbb
iret
sub
xchg
ss
mov
aad
inc
cmp
out
popf
lea
mov
leave
sbb
fldl
lea
xchg
push
popa
scas
add
stos
add
mov
push
pop
jbe
mov
cmc
push
push
das
cmpsb
and
out
in
enter
fadds
push
enter
adc
jecxz
cmp
nop
xchg
nop
dec
xor
inc
sub
jne
int
divl
push
pop
adc
mov
mov
repz
fucom
subb
test
push
data16
sahf
push
test
push
push
adc
cmp
or
sbb
js
mov
jo
mov
ja
leave
cmc
push
xor
cli
outsb
fisubl
and
pop
loopne
les
mov
mov
dec
call
mov
jne
cmpb
pop
cmp
je
cmp
ja
fsub
pop
into
shlb
xor
xor
mov
dec
ja
movsb
mov
pop
aam
nop
lock
iret
je
out
addb
rcll
roll
cmp
xchg
mov
int3
sbb
push
andl
sub
xchg
push
and
jbe
dec
inc
sub
or
out
adc
jecxz
and
scas
and
mov
mov
add
cli
sbb
jecxz
xor
or
loop
and
sbb
loope
dec
push
popf
iret
js
in
and
movsb
jle
outsw
int3
inc
ficoms
sub
loope
call
add
int
push
jl
dec
in
push
nop
push
inc
sarl
or
mov
push
out
mov
clc
daa
xor
push
xchg
movl
mov
dec
lcallw
pop
andb
xor
ds
ss
xchg
test
sti
sub
rcrb
gs
or
xor
popa
jae
addr16
mov
cwtl
pop
jle
pop
dec
sar
out
mov
xchg
sub
mov
fmulp
out
inc
xchg
das
mov
das
xchg
xor
stos
sub
cltd
pop
ljmp
repnz
mov
or
mov
daa
aaa
or
ljmp
imul
pop
frstpm(287
in
mov
inc
dec
fldt
mov
and
leave
add
jnp
xor
int3
es
cli
cmpsb
sub
mov
rclb
test
sbb
push
imul
insb
push
sbb
adc
jge
mov
bnd
mov
push
lret
ds
dec
daa
cmp
cmc
mul
into
lock
or
cwtl
es
icebp
fsubrp
out
xorb
push
movsb
out
xchg
mov
add
sub
jo
inc
data16
ja
adc
cmpsl
nop
mov
adc
mov
sub
sbb
xor
or
int
outsb
lret
sbb
and
cmpsb
push
inc
add
lahf
stos
lahf
xchg
bound
add
jmp
mov
xchg
lods
add
jbe
push
inc
cmp
sub
and
stos
vandps
xor
pop
adc
adc
xorb
movsl
sbb
inc
dec
pop
dec
sti
hlt
push
out
xchg
sarl
nop
movsl
sub
aaa
sbb
sbb
ljmp
mov
stos
push
add
dec
pop
loop
mov
jecxz
shlb
sbb
cwtl
imul
in
add
pop
inc
adc
std
subb
jmp
pop
sub
js
adcl
dec
pop
push
call
cmpb
xor
cld
fldt
xchg
mov
in
cli
out
lock
and
int
sbb
inc
enter
test
lret
mov
dec
or
jl
or
fcompl
lcall
or
test
cmc
xor
push
movsb
cmp
dec
xchg
sarl
roll
pop
xor
in
mov
and
cwtl
aas
insb
jne
pop
in
sti
enter
imul
or
popa
gs
cwtl
push
inc
mov
push
rcr
xchg
cmpsl
dec
cmc
cli
int
mov
push
nop
add
xchg
push
sbb
stos
into
pop
adc
insl
cltd
test
rol
jae
aam
adcl
stos
jp
andl
lret
or
mov
push
fs
push
push
aad
mov
or
add
out
jb
aad
je
mov
dec
fldcw
iret
add
xor
scas
loopne
fsqrt
cltd
mov
sbb
xchg
jge
shrb
push
push
push
jbe
push
add
lods
psubsw
das
les
rol
mov
sbb
inc
xchg
jl
sarb
ja
faddp
xor
int
bound
xlat
xchg
iret
lahf
mov
ret
repz
sbb
daa
aaa
enter
push
out
std
int3
vpmaxsw
xor
cmc
jle
mov
imul
idivl
mov
sub
mov
dec
and
shl
cli
movsl
push
test
jecxz
in
jns
and
add
xchg
test
jo
mov
dec
or
cmp
jnp
fwait
aad
ljmp
add
xor
movsl
ss
push
imul
push
sbb
rcll
mov
nop
pop
lret
xor
and
leave
in
les
push
movsl
cmpsb
add
pop
adc
out
outsl
xor
push
push
insl
mov
mov
ljmp
inc
sbb
outsb
scas
outsb
xchg
cs
push
sarl
sbb
orl
mov
lahf
push
std
lds
shrl
lret
pop
inc
push
mov
push
sub
adc
or
jne
stc
dec
daa
test
sbb
pop
mov
jl
movsb
and
xchg
enter
in
rcrb
push
das
xor
mov
xchg
jp
negb
xchg
jg
push
sbb
clc
dec
sbb
nop
popf
cs
cmp
jecxz
add
stos
es
ljmp
dec
cmc
add
add
call
dec
mov
insb
sbb
std
adc
xor
aam
outsb
pop
outsl
mov
outsl
loopne
in
cmp
and
xchg
sbb
dec
mov
push
pop
dec
ficompl
adc
jnp
jo
cmp
jl
loope
je
cli
lea
scas
mov
cli
ss
xchg
dec
pop
mov
out
jmp
inc
fstpl
ret
jno
sub
jo
add
stos
out
inc
lods
jb
das
push
pop
sbb
inc
pop
jmp
shlb
and
xor
lods
in
dec
adc
fwait
cltd
mov
int3
add
dec
xchg
dec
push
bound
call
xlat
dec
iret
lods
fisttps
dec
jno
in
rol
mov
jbe
or
mov
mov
rol
mov
mov
add
repz
and
xor
out
xchg
and
adc
fdivs
sbbb
sbb
jb
jecxz
and
and
inc
add
lods
pop
in
icebp
sbb
add
enter
imul
imull
movsb
mov
dec
pusha
cmp
repz
addr16
mov
adcl
sub
outsb
push
xchg
mov
lret
pop
arpl
xchg
mov
pop
pop
jl
lret
cmp
push
mov
out
shll
pop
lds
fisttpl
out
popf
mov
push
fwait
idivb
lock
push
push
popf
xor
jns
imul
movsb
les
test
mov
idiv
sub
outsb
sbb
out
pop
push
fldenv
mov
and
dec
inc
fists
imul
out
sub
jmp
test
mov
adc
mov
pop
testb
jl
jp
les
fwait
jmp
shl
cwtl
ja
dec
push
mov
cmpsb
pop
or
sub
inc
mov
xchg
xor
pop
ja
out
push
jle
repnz
lock
test
jmp
popa
mov
xchg
sub
jmp
les
sub
clc
test
sub
or
imul
lcall
sub
insb
jns
int3
and
stos
sbb
ja
inc
jbe
cld
jnp
mov
and
jae
or
or
aas
add
pop
pop
mov
xchg
mov
or
push
mov
inc
jg
add
sub
test
pop
add
notb
mov
insb
or
insb
in
fninit
sub
imul
mov
outsl
cmc
push
and
lods
out
add
mov
add
add
pop
push
mov
cmpsb
mov
xor
mov
xor
jae
out
xlat
loop
stos
push
notb
cmpsb
fs
adc
outsb
xor
cs
xchg
or
xor
jnp
insb
js
dec
inc
test
leave
je
subl
in
cmp
pop
cmp
lods
test
mov
arpl
fimull
jb
jg
loope
jbe
outsb
test
rolb
int3
inc
jle
movsb
mov
dec
inc
adc
loopne
or
sub
dec
sarb
popf
jno
scas
gs
mov
out
inc
adc
fwait
push
shlb
test
ret
and
jecxz
mull
inc
sub
pop
fs
adc
xchg
test
test
movsl
jbe
cmp
or
loope
enter
mov
push
js
stos
mov
mov
adc
xchg
js
stos
mov
push
and
ja
cmp
pusha
mov
adc
pop
sub
in
add
js
jmp
push
or
in
xorb
iret
mov
jae
jb
insl
cli
aam
xor
or
loope
dec
cmpb
jmp
sub
or
push
jne
push
out
aaa
clc
jg
add
inc
lock
add
jae
and
sbb
test
fiaddl
sub
and
aaa
enter
stos
pushfw
cmc
lock
mov
add
xchg
stos
jne
cmpsb
pop
pop
sub
lock
sbb
xor
inc
mov
mov
imul
cmp
inc
adc
cmp
cmp
mov
scas
add
push
sahf
sbb
mov
faddl
xchg
pop
mov
into
cmp
imul
xchg
jae
push
mov
pushl
mov
jecxz
jo
jbe
fnsave
sub
stos
inc
fidivl
push
stc
fwait
mov
cltd
inc
sbb
test
stos
pop
xor
or
clc
cmpsb
push
xchg
jp
out
fsubrl
gs
andb
add
xor
aad
xor
push
or
mov
into
dec
mov
pop
jne
mov
ss
lahf
repz
mov
or
test
addl
jmp
mov
ret
dec
jp
ret
ret
mov
mov
stc
std
dec
push
push
jle
xchg
inc
lock
clc
xchg
jge
adc
loopne
loop
dec
sub
jg
or
dec
inc
xchg
push
arpl
or
or
adc
sbb
dec
lods
nop
sahf
sub
and
ljmp
mov
pop
xchg
pop
pushf
cltd
mov
and
add
lods
orb
sbb
adc
mov
movsb
nop
icebp
test
loop
xchg
inc
mov
ss
inc
lahf
or
in
jmp
aaa
leave
add
sub
mov
jmp
js
sbb
daa
out
jmp
daa
jecxz
test
mov
clc
mov
mov
push
push
fsubrl
insb
dec
rorl
mov
dec
outsl
push
js
adc
cmpsl
push
ficompl
out
or
cli
daa
pop
xchg
add
mov
fsubrs
xchg
ljmp
mov
sub
inc
xor
or
jecxz
adc
inc
sbb
inc
jae
cmc
xchg
movsb
adc
or
mov
dec
sub
stos
iret
xchg
pop
es
lcall
xor
dec
les
outsb
sub
push
add
mov
adc
test
icebp
hlt
inc
icebp
push
push
and
cmc
xor
sahf
pop
in
and
outsb
jecxz
xor
or
mov
inc
sbb
scas
push
in
lcall
out
mov
ja
push
lock
cmpsb
push
sub
cmpl
jmp
cltd
jmp
pop
add
cmp
sti
imul
add
rcll
sbb
sbb
scas
iret
adc
and
jmp
imul
sbb
jne
mov
adc
pop
add
loop
inc
nop
pop
imul
sbb
loop
mov
ja
iret
cld
stos
cmp
cltd
jmp
xchg
cs
data16
xchg
dec
fsin
mov
jg
mov
test
stos
std
inc
add
mov
xor
sahf
addr16
mov
push
push
pop
test
cmpsb
push
fildll
jb
stos
sbb
shll
dec
xor
push
pop
mov
addr16
test
add
repnz
dec
call
dec
push
pop
pusha
fbld
dec
sbb
push
jmp
inc
shr
and
mov
pop
mov
pop
push
fwait
pop
xor
mov
sahf
jg
dec
inc
je
pop
and
ret
and
data16
dec
cmp
movsl
insl
mov
mov
push
movsb
mov
outsb
adc
xchg
inc
mov
mov
cmp
sub
sub
insb
add
cltd
xor
lahf
jbe
inc
mov
mov
pop
sub
sbb
inc
mov
nop
xchg
test
clc
cmp
iret
cmp
push
sbb
push
push
cmp
sbb
arpl
xchg
out
adc
cmp
adc
sub
out
mov
iret
call
leave
call
nopl
sub
mov
adcb
add
push
cmc
rclb
cmpb
push
jae
and
loopne
test
jo
push
push
das
hlt
mov
xchg
das
into
dec
fnsave
pop
test
popa
cltd
inc
lcall
ja
outsb
adc
sbb
or
adc
in
gs
mov
jge
cmpsl
lcall
outsl
testb
stos
rorb
adcl
dec
aas
fwait
pop
lods
push
or
insb
jbe
imul
jmp
cld
jmp
aaa
adc
mov
push
sahf
js
cltd
loop
inc
mov
test
mov
cmp
push
pop
jg
xlat
mov
subl
sbb
xchg
packsswb
jecxz
into
pusha
repnz
lods
mov
jp
xor
mov
jg
mov
mov
in
dec
mov
nop
seto
out
xor
inc
ss
shrb
mov
xchg
in
iret
stos
mov
les
dec
cltd
in
inc
mov
xchg
addr16
add
js
mov
arpl
fisttpll
xchg
lock
stc
push
cmpsb
and
cmp
loopne
mov
lcall
mov
fiaddl
aaa
jns
xor
sub
fildll
stos
andl
shlb
insl
jle
xor
jle
fsub
fcmovnu
imul
loope
jmp
std
push
dec
sub
popa
jns
jno
push
in
inc
add
sub
call
mov
sub
mov
ljmp
dec
adc
push
and
mov
and
lret
daa
popa
int3
dec
cld
xchg
mov
and
lods
hlt
cwtl
sbb
push
push
and
popa
jns
mov
add
mov
sub
mov
pop
mov
mov
ja
outsl
adc
aad
mov
add
fstpt
xor
stc
push
aam
mov
sub
outsb
packuswb
insw
aad
inc
inc
adc
push
pop
adc
pop
push
stos
popa
gs
stos
adc
stos
pop
push
add
add
mov
and
and
ja
jl
jns
or
popa
mov
xchg
rcr
lret
testb
dec
pushf
xor
xor
inc
mov
push
dec
mov
jl
movsl
xchg
inc
enter
sbb
jbe,pn
lods
inc
xor
gs
addr16
pop
jg
adc
mov
clc
popa
push
jbe
bound
inc
in
rolb
sahf
sbb
xor
sbb
fst
push
ja
xchg
inc
xchg
flds
movsl
xchg
mov
sub
push
mov
out
fwait
sbb
in
and
inc
mov
pop
jl
mov
jle
lret
cmp
aas
into
lods
repz
cmp
int
das
fidivrs
push
test
ja
fistpll
sbb
xchg
in
int
out
push
stc
inc
inc
nop
xor
mov
aad
aad
push
enter
xchg
in
sbb
mov
lea
test
arpl
sbb
xor
imul
xchg
cld
or
sub
bound
sahf
shll
repz
mov
fldl
add
daa
lds
sbb
sub
mov
mov
jge
pop
shll
push
push
jne
out
jbe
lods
mov
mov
cmp
sbb
mov
sti
xchg
push
movb
ss
idivl
xchg
pop
dec
inc
icebp
push
repz
enter
out
pop
xlat
lods
rorl
cmc
xchg
push
leave
sbb
jbe
scas
int3
mov
push
fstpl
out
mov
arpl
add
or
dec
ret
xchg
fnstsw
ret
mov
pop
sysret
push
add
jl,pt
and
xor
add
push
fwait
push
push
out
ljmp
les
push
in
aam
cmp
pop
xor
cmpsb
shlb
mov
fnstsw
pushf
fwait
aam
push
les
int
xor
jae
mov
inc
push
cwtl
popa
aam
xchg
in
xchg
cmp
push
ficoml
push
xor
mov
jmp
mov
push
sahf
and
testl
fwait
inc
mov
cmp
stc
mov
ljmp
jbe
imul
addr16
push
push
repz
enter
pop
sub
insb
cli
push
daa
mov
ljmp
daa
shrb
lret
jl
fisttpll
xchg
arpl
sub
addr16
mov
outsb
inc
bound
push
jbe
test
cld
je
mov
mov
sbb
xchg
pop
std
add
das
filds
inc
dec
aad
shll
nop
ljmp
js
mov
inc
pushf
lcall
jae
or
and
and
aam
push
dec
mov
push
mov
imul
popf
xor
repnz
cs
outsl
idivb
lods
repnz
gs
mov
jecxz
mov
pop
mov
repnz
pop
cmpl
push
xor
das
add
sub
dec
into
jmp
mov
imul
dec
inc
xor
test
gs
and
loope
fmull
pop
jg
pushf
push
push
int3
mov
jbe
into
test
shll
in
mov
pop
adc
push
ret
cmp
call
cmp
push
pop
jno
push
xchg
or
mov
lcall
insl
enter
xchg
push
mov
icebp
out
cmp
lock
add
mov
xchg
jp
xchg
les
pop
push
pop
arpl
adc
adc
dec
add
mov
push
sbb
inc
xchg
ret
pushf
test
pop
mov
xchg
pop
xchg
add
adc
pop
or
push
loopne
cld
in
and
dec
adc
in
jmp
aam
addr16
test
push
push
mov
xchg
or
jno
clc
sbb
fbstp
or
shl
and
mov
xor
xchg
jne
in
es
xchg
add
lods
or
out
shl
aas
imul
sbb
sbb
mov
pop
filds
and
aas
rolb
jns
ret
inc
repz
scas
fs
cmp
push
or
imul
lahf
jbe
jecxz
movsb
loopne
push
fs
push
ljmp
xlat
enter
jle
aad
jecxz
outsl
mulb
jbe
push
push
daa
ret
mov
out
ret
sahf
insl
enter
icebp
push
pop
rorl
cmp
rorl
and
adc
mov
push
in
mov
dec
jp
pop
dec
cmp
fidivs
add
pop
sub
mov
xchg
adc
fiadds
sub
stos
mov
jne
mov
jno
fisttpl
test
repz
push
xchg
mov
push
lods
adcb
mov
push
arpl
push
dec
jle,pt
ss
cmp
jle
xor
mov
add
lock
mov
inc
outsl
push
jg
dec
jo
add
adc
and
xor
shr
jmp
iret
lock
mov
inc
outsl
push
jg
dec
jo
add
adc
and
xor
shr
icebp
loopne
lock
mov
jnp
dec
jo
add
adc
and
add
hlt
or
sbb
sub
lahf
subb
pop
mov
dec
jo
ja
cwtl
inc
fbstp
addr16
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
mov
inc
xchg
push
sub
adcl
outsl
fistl
and
sti
add
adc
popa
mov
push
xchg
mov
inc
xchg
push
loope
icebp
xor
add
je
loope
icebp
add
adc
mov
adcl
addl
xor
add
adc
loope
shrb
adc
xor
aas
out
sub
std
xor
fwait
jp
lret
adc
decb
and
jle
push
jmp
sub
push
xor
mov
fdiv
mov
ds
les
cmp
shl
mov
xchg
push
test
dec
fimull
lock
shrl
xor
lea
push
pop
mov
push
xchg
pop
and
xor
icebp
lods
sbb
jnp
sahf
mov
push
ret
xchg
pop
mov
outsb
pop
mov
push
xchg
adc
push
addr16
ds
shll
repnz
pop
cmp
inc
lcall
pop
and
mov
jbe
shl
mov
xor
shrl
popa
mov
addl
xor
add
adc
loope
icebp
add
adc
popa
mov
push
xlat
loopne
lds
call
addw
shll
xchg
push
call
pusha
aad
mulb
repz
hlt
les
std
xor
bound
inc
test
add
pop
daa
sub
and
sub
add
adc
loope
icebp
add
adc
popa
mov
push
xchg
mov
inc
xchg
push
loope
icebp
xor
add
adc
loope
icebp
add
adc
popa
mov
push
xchg
mov
cs
push
stc
add
mov
push
test
sbb
int
mov
dec
mov
jb
test
xchg
and
imul
mov
stc
jne
dec
inc
outsl
loopne
xor
out
fsubp
int
test
jmp
bound
push
rcll
sysret
fdivr
add
pop
les
subl
adc
dec
cmp
negl
shll
mov
lahf
mov
mov
out
ljmp
in
xor
sub
data16
jnp
jnp
mulb
jae
addr16
cmp
fcmovb
push
cmpsb
divl
sahf
or
mov
subb
sbb
ucomiss
cmp
fs
add
arpl
in
inc
in
in
aaa
in
adc
repz
leave
mov
push
out
xor
add
lahf
pop
add
notb
test
add
je
push
inc
xor
cmp
adc
lret
mov
mov
fbld
data16
mov
jb
xchg
mov
or
mov
lret
aam
movsb
ljmp
cmp
add
mov
xchg
jp
sbb
cmp
push
cmpb
sub
adc
mov
xor
fnsave
xor
pop
or
out
mov
mov
ret
push
outsb
xchg
insl
popf
shr
or
std
rclb
push
outsl
sub
xchg
or
cltd
bound
jmp
inc
shr
std
ja
into
mov
scas
pop
or
insl
sti
mov
lock
pop
call
incl
cmp
xchg
push
insb
sarl
enter
mov
xlat
leave
cmp
sbb
pop
sbb
xor
inc
inc
sbb
push
cmpsl
cmp
cmpsl
mov
call
add
test
mov
inc
and
xchg
mov
jmp
mov
dec
add
lods
aas
nop
inc
inc
mov
lret
and
iret
lcall
sub
out
sbb
les
scas
mov
inc
mov
mov
or
js
xorb
mov
mov
xorb
ret
int3
sbb
pop
jae
sbbl
mov
push
dec
sbb
xor
push
and
xchg
sub
xor
in
jg
xchg
insb
outsl
or
jne
ss
push
inc
inc
and
xchg
fldcw
push
inc
mov
or
and
xchg
fsubrp
add
sbb
int
stos
jnp
int3
xchg
imul
ret
inc
adc
aas
cwtl
clc
sbb
movsb
cmp
in
bound
add
pop
dec
mov
hlt
jmp
xchg
sub
mov
iret
fldt
lret
sti
out
adcb
cmpsb
les
mov
dec
and
push
test
push
cmp
je
addr16
add
jmp
sbb
fildl
lock
in
and
cmp
out
dec
inc
mov
mov
ljmp
sahf
loope
lret
fldt
test
jno
addb
sti
leave
ret
cmp
stos
pop
fcoml
stos
sti
pop
mov
stc
clc
push
lds
loopne
fwait
nop
lahf
push
je
lds
aaa
loope
icebp
xor
or
push
insl
xchg
insb
addr16
mov
cmp
mov
repz
add
clc
shlb
cmp
fdivrs
std
push
sub
push
imul
add
jg
imulb
test
fbstp
cld
test
in
jecxz
add
aad
sub
lcall
xor
jmp
jge
sbb
lods
sbb
div
stos
pop
or
push
or
je
int
xor
jne
pop
mov
imul
cmp
jb
push
dec
lret
jns
fnstcw
add
call
mov
sbb
mov
dec
or
repz
lcall
les
mov
push
dec
jo
xor
mov
ljmp
js
jb
xlat
mov
or
mov
cmp
and
inc
bound
inc
adc
and
dec
xlat
shl
push
inc
xor
adc
mov
ja
shl
iret
jns
sbb
cs
xor
mov
movsl
cmp
mov
cmp
jbe
ret
dec
and
test
lret
popf
xchg
shrl
popl
mov
shl
add
pop
test
push
scas
push
push
inc
xchg
loope
dec
je
cmp
adc
push
add
xchg
push
dec
inc
mov
add
pop
jle
adc
push
push
mov
imul
lcall
leave
xor
int
sbb
xchg
jp
pop
jle
adc
mov
mov
int
or
and
jl
in
jg
sti
jne
adc
adc
lahf
xchg
jmp
scas
lods
fs
loop
and
cmpsb
push
xor
popf
sbbb
mov
mov
adc
cld
xor
loop
jns
and
xchg
iret
add
jne
gs
xor
sub
dec
data16
xor
or
cli
adc
cmpsb
ljmp
push
movsl
and
hlt
mov
mull
pusha
sub
mov
jne
sub
sti
addr16
es
sahf
mov
ja
pop
aad
xor
adcb
orl
and
inc
loop
and
xchg
jae
dec
enter
sbb
fldenv
lret
mov
inc
sub
mov
nop
stos
cmp
sbb
out
pop
add
int
pop
mov
lods
lcall
push
or
inc
ficoms
imulb
push
insl
pushf
cs
jl
stos
jnp
lods
sub
adc
sbb
dec
int
sahf
fnstcw
cmp
jge
les
ds
dec
shlb
sub
inc
test
sbb
add
inc
add
cmp
out
mov
sahf
lock
inc
inc
lock
or
push
int
shrb
gs
in
or
popf
xchg
mov
out
sub
insb
popf
xchg
push
ret
sbb
cs
and
bound
xor
scas
mov
popf
dec
or
ret
test
lcall
test
movl
dec
outsb
out
push
insl
scas
ss
dec
out
jle
je
mov
xchg
in
shlb
add
sbb
xchg
sbb
cmc
fdivrl
ret
sti
std
dec
out
loope
aam
ja
inc
sbb
mov
jne
xor
in
in
out
mov
push
push
in
pop
dec
cmp
mov
mov
mov
inc
mov
fsubl
adc
xchg
lods
lcall
dec
pop
adcb
cltd
mov
mov
xchg
push
iret
test
push
jge
popa
mov
std
sarl
movlps
mov
aaa
fildl
add
cld
xchg
sub
add
jo
fmul
lret
xchg
out
in
mov
andnps
adc
jecxz
repz
mov
lret
push
pop
into
sub
loope
xor
cld
rorb
xchg
es
insl
pop
pop
into
cmpsb
cmp
test
sahf
mov
jnp
or
pushf
xor
andl
ds
push
sub
stos
sti
cmpsb
ljmp
icebp
mov
fadds
adc
icebp
fistl
cltd
outsl
jmp
pop
mov
call
cli
lea
jge
mov
push
or
cmpsl
mov
push
jg
outsb
push
adc
push
jle
xor
pop
push
jb
pop
data16
repz
jnp
in
test
imul
fildl
loopne
lods
mov
icebp
mov
sbbb
int
push
loopne
mov
dec
or
xchg
scas
stos
sub
lea
out
call
push
lret
jl
es
dec
pusha
push
lods
leave
sahf
insl
push
call
cltd
scas
std
xor
jbe
les
pop
sbb
inc
and
or
insb
jo
sub
xchg
push
cmp
mov
incb
popa
cmpsb
scas
je
out
lds
push
push
andl
int
sub
xchg
mov
popf
arpl
sbb
std
int3
insb
add
popf
sub
lds
das
pop
pop
imul
push
mov
imul
dec
out
xchg
lods
add
hlt
ja
and
in
xchg
inc
enter
jns
lds
xchg
out
xchg
mov
adc
xor
insl
xchg
or
sub
or
fs
jmp
mov
test
pop
sub
and
add
xchg
loope
out
mov
add
or
mov
aam
mov
arpl
pop
and
cwtl
ret
mov
mov
pop
pop
lods
xchg
sub
mov
clc
mov
outsl
out
cltd
pop
cmpb
inc
jecxz
pop
sub
xchg
dec
xor
jno
test
mov
fwait
lods
sbb
popf
cmp
mov
cwtl
outsl
pop
imul
inc
cmp
shl
mov
daa
cmp
fsts
xchg
rclb
cli
stos
arpl
mov
lcall
cmp
sub
push
popf
cmpsl
and
out
pop
xchg
cmpsb
in
inc
popa
je
mov
mov
popa
push
mov
mov
in
lock
pop
flds
push
mov
daa
dec
pushf
insb
scas
call
mov
or
stos
lret
mov
or
flds
int3
add
jmp
dec
mov
xchg
adc
sbbb
mov
jp
lea
sti
adc
jns
dec
push
into
xchg
fsub
stc
lret
jle
jae
xchg
subb
pop
das
sbb
movsl
mov
jnp
mov
jg
fwait
sbb
call
mov
sub
sbb
xor
adc
bound
cwtl
adc
xchg
dec
mov
aad
je
jle
xor
mov
sahf
xacquire
shrb
mov
sub
sbb
js
fimull
pop
fs
pop
xchg
iret
fistl
loopne
and
sbb
push
xlat
or
js
mov
add
jecxz
popf
and
out
jle
pop
loop
mov
sbb
jmp
xchg
pop
daa
jp
mov
jge
fldl
push
int3
dec
cli
pop
sub
add
sbb
sahf
mov
xchg
jg
pop
out
or
aam
dec
dec
push
out
jnp
daa
inc
mov
inc
bound
dec
mov
xor
push
push
push
insb
xorb
add
jle
adc
xchg
or
sbb
cld
sbb
lahf
mov
xor
jae
std
pushf
out
jae
rorb
pop
and
arpl
jo
out
je
adc
xor
fidivrl
jmp
popa
xor
lahf
je
cmp
pop
and
sbbl
fyl2xp1
out
mov
cmp
mov
mov
sahf
out
mov
mov
ss
bsf
cld
xchg
ret
adc
xor
pop
inc
cmp
jbe
ret
orl
push
mov
add
pusha
and
mov
fwait
hlt
inc
fldl
mov
popa
bound
adc
std
sub
jmp
out
insb
inc
dec
push
inc
mov
jp
xchg
adc
mov
pop
repz
fdivrl
test
mov
outsb
bnd
sub
mov
dec
mov
mov
dec
inc
rcr
adc
cli
daa
cmp
and
inc
int3
enter
adc
xor
cmp
mov
jo
or
cmpsl
ljmp
jnp
adc
and
push
mov
push
and
int
pushf
faddl
mov
in
mov
movsl
icebp
and
and
lods
or
int
out
or
mov
incb
stos
cwtl
and
fwait
jb
rorl
into
popf
negb
or
out
sbb
sbbl
cmp
arpl
iret
and
push
jg
fcmovne
lcall
fimull
mov
pop
pop
rorb
stc
add
clc
xor
cli
lcall
arpl
scas
jg
mov
icebp
or
lock
cmpsb
in
xlat
movsb
pop
xlat
test
in
mov
inc
inc
push
xchg
cmovne
xchg
shl
std
add
shr
pop
mov
xor
inc
sahf
adc
dec
ret
je
adc
loop
push
and
and
jp
push
negb
adc
lahf
icebp
push
loope
int
mov
out
lret
dec
loope
sar
dec
nop
inc
adc
push
pop
mov
dec
icebp
movl
and
push
lret
fs
stos
mov
adc
cmp
mov
mov
push
dec
js
xor
mov
cmpb
stc
jb
dec
js
xlat
lahf
push
jne
push
xchg
mov
sub
jae
mov
pop
xor
push
ret
lahf
dec
add
cmp
mov
cmpsl
test
test
jae
retw
inc
or
lahf
stos
lahf
shll
inc
shlb
movsb
out
pop
push
and
popa
pop
mov
dec
inc
xchg
xchg
mov
mov
and
dec
sti
into
mov
jg
ljmp
outsb
sbb
xlat
cmp
inc
mov
out
or
and
js
ret
fsubs
cli
cmp
cmp
adc
out
xor
aad
mov
test
ljmp
jle
shr
jb
hlt
sub
dec
mov
lea
fiadds
sbb
adc
dec
aas
xor
mov
add
rolb
sub
inc
sub
aam
hlt
xor
repnz
ds
sub
popf
les
pop
adc
andb
data16
or
mov
mov
xchg
popf
add
adc
and
adc
test
ja
cld
rorb
pop
xorl
xchg
cld
into
fidivl
outsl
stos
rcrl
bnd
lea
std
jmp
es
aaa
push
and
insl
icebp
jne
jge
jecxz
lock
out
jecxz
add
ds
stos
push
dec
xchg
ret
aam
jmp
or
mov
lods
fmull
sub
push
sub
sub
cmp
std
movsb
push
jmp
cmp
jmp
repz
out
cld
jno
and
pop
mov
xor
fistpl
xchg
pop
jb
hlt
cmp
jne
sbb
sub
cs
std
ffreep
rorl
push
mov
cmp
or
add
in
and
lods
or
sbb
fisubrl
mov
das
aad
ret
lret
push
mov
dec
aas
jmp
inc
cmp
dec
xor
pusha
sbbb
pop
fdivrs
aam
inc
dec
mov
lahf
xchg
cwtl
inc
xor
mov
popa
mov
mov
add
xor
add
faddl
jmp
and
push
cmp
popf
ds
lcall
mov
jle
push
mov
xor
push
xchg
inc
adc
push
cmc
sub
push
push
add
sub
filds
add
push
and
cld
jmp
push
adc
mov
lret
xchg
loopne
cltd
or
cmp
push
inc
xchg
testb
int
sahf
sub
lret
mov
imul
lret
pop
and
ret
std
mov
cmp
jp
js
lahf
xor
sbb
rol
mov
add
mov
es
mov
imul
into
ror
movsb
push
pop
scas
dec
cwtd
sbb
test
sahf
aam
aad
movsb
outsl
mov
sbb
aad
jno
sub
push
cmpsb
mov
mov
cld
test
test
lea
xlat
dec
lret
push
pop
or
mov
and
xchg
outsl
lcall
shll
sbb
aaa
and
cmp
cmp
dec
rorl
push
ret
hlt
lods
fmull
loope
fstps
dec
imul
push
lock
push
inc
out
mov
incl
jecxz
int
inc
push
cmp
push
pop
ss
push
in
pop
jge
test
push
push
gs
jo
sub
and
jg
push
out
or
movsl
scas
test
xchg
lahf
outsb
adc
out
pop
adc
dec
add
add
xchg
push
test
sbb
leave
lret
insl
jno
scas
repnz
les
cli
mov
rorl
jp
rcll
in
aad
adc
mov
sub
jmp
xchg
sbb
sbb
inc
lret
xchg
jb
dec
cs
ljmp
push
inc
add
test
lcall
sbb
sbb
sub
outsb
bound
loope
stc
sbb
pop
into
dec
and
pop
sbbb
add
mov
sbb
mov
push
cmpsb
sub
test
xchg
pop
push
test
xchg
fidivrs
mov
fisttpll
cs
gs
push
push
push
scas
cmc
cmp
mov
loop
fidivrl
cli
xor
xchg
int3
dec
jge
js
fnstenv
pop
fwait
inc
scas
mov
inc
cmp
and
adc
inc
pop
xor
xor
ss
loopne
int
icebp
jp
push
cli
ret
xor
mov
or
and
jo
add
jmp
push
test
imul
cli
adc
cmc
and
mov
sbb
imulb
sbb
std
or
jp
push
xchg
jl
pop
adc
push
or
sub
mov
sbb
lds
mov
pop
xor
adc
loop
dec
push
addr16
shlb
cmp
faddl
jl
or
mov
stos
and
imul
xchg
lret
adc
jmp
pop
cwtl
sti
add
or
push
loop
add
pop
and
or
cmp
xor
inc
inc
inc
ficoml
leave
dec
rcrl
mov
outsl
test
dec
sarl
mov
dec
jecxz
jno
mov
xor
cmp
pop
das
add
pop
xor
mov
movsb
imul
mov
cmpsl
mov
out
jns
pop
inc
test
jmp
pop
push
fbld
aam
or
repnz
sub
stc
cmp
and
call
fwait
pushf
movsl
ret
or
xor
xor
aaa
subb
sbb
repz
jnp
mov
xlat
imul
or
sub
mov
outsl
add
cmp
mov
outsb
inc
mov
aam
lcall
fcomi
sar
push
repz
out
or
hlt
cmpsl
test
in
xor
sub
lock
fiaddl
in
pop
push
mov
mov
pop
scas
sub
popa
mov
cmp
dec
and
ljmp
fidivs
aam
push
push
cmp
jecxz
test
cmpsb
inc
add
daa
adc
jb
pop
fld
add
negb
jmp
test
sbb
loopne
imul
jge
insl
and
add
sub
lret
imul
scas
and
test
xchg
mov
out
fstpt
rcl
push
push
pop
enter
push
mov
xchg
into
mov
dec
pusha
jp
arpl
and
nop
jae
stc
mov
push
mov
nop
inc
outsb
scas
stos
sbb
test
pop
cmp
cmp
pop
sub
test
insb
pop
loopne
cmc
stc
lahf
push
gs
sbb
outsl
add
xchg
stos
mov
scas
repnz
pop
sub
xchg
outsb
mov
mov
lea
popf
cmpsl
fcoms
js
push
fdivr
inc
cmp
push
popa
xchg
mov
repnz
daa
insl
jbe
xlat
pop
cmc
mov
mov
push
push
adc
mov
mov
jbe
xchg
cmp
shlb
mov
ficomps
fidivs
xchg
test
in
sbb
ja
dec
into
add
fstl
xor
das
dec
repz
sub
rcrw
inc
into
jno
xchg
or
pop
aas
xchg
shlb
lret
xchg
mov
pop
sbbl
int
leave
sbb
pop
scas
dec
jb
stos
adcb
sub
aam
stos
stc
sbb
and
adc
aad
jno
fistps
push
or
in
je
fnstcw
mov
xor
push
mov
lods
das
xchg
xlat
fdivrl
jl
lds
lods
push
stc
mov
sub
adc
shlb
sub
fdivrl
stos
popf
das
push
testb
mov
pop
xchg
imul
xor
add
pusha
inc
ja
push
sub
ds
dec
fs
inc
test
cmp
or
dec
cmc
cmp
adc
dec
mov
test
cmp
push
aas
mov
pop
test
cwtl
rol
lods
pop
insb
pop
pop
push
test
imul
push
loope
icebp
xor
add
adc
loope
icebp
add
adc
popa
mov
push
xchg
mov
inc
xchg
push
loope
icebp
xor
add
adc
loope
icebp
add
adc
popa
mov
push
xchg
mov
inc
xchg
push
popa
and
xor
add
and
xor
add
adc
popa
mov
push
xchg
mov
inc
xchg
push
loope
icebp
xor
add
shll
loope
pop
stos
rcll
adc
add
jle
outsb
dec
mov
jns
or
pop
lret
cmp
jmp
jp
out
test
mov
jns
or
sbb
sub
cmp
leave
cmp
dec
mov
stc
or
jp
push
sbb
stos
sti
lcall
aaa
fidivrl
lret
cli
sub
aas
jmp
std
sub
dec
daa
mov
adc
or
add
into
mov
int3
mov
mov
sub
cld
cld
jne
jns
adc
aas
shrb
xchg
lds
mov
sbb
sbb
outsl
out
ja
cmp
lcall
cld
negl
movsl
test
xchg
scas
xor
mov
mov
sti
sbb
push
cmp
insl
in
pop
jbe
cltd
xchg
test
mov
push
dec
pop
in
cmc
sti
xchg
jmp
pop
jge
in
lret
cltd
xchg
push
movsl
mov
mov
les
cld
xchg
lock
scas
or
cli
dec
pusha
or
lods
test
mov
jns
in
cli
popa
ljmp
inc
sub
jp
push
pop
mov
stos
sbb
xchg
ja
pop
xchg
cmp
mov
dec
sti
sbb
sbb
pop
fmull
add
cmp
sbb
jl
fsubrl
mov
jnp
gs
add
aas
clc
sbb
repnz
pop
cli
sbb
sub
cmp
leave
cmp
sub
sbb
or
pop
mov
stos
imul
cmp
leave
cmp
sub
sbb
or
pop
mov
jecxz
sub
rcl
pop
cmp
jl
je
sbb
jno
clc
cmpsb
leave
push
add
nop
ja
xchg
push
and
idiv
rolb
jg
repnz
inc
mov
adc
aaa
mov
in
loopne
das
sub
lods
in
mov
inc
dec
es
cmp
outsb
mov
sti
imul
push
gs
sub
lods
lahf
lahf
jbe
xor
or
mov
sahf
push
jecxz
or
jb
dec
mov
fwait
pop
xchg
lahf
and
add
shrl
mov
imul
into
shrl
fildll
push
ret
push
icebp
xor
subl
repz
jp
loope
xchg
aam
stos
repz
sbb
pop
notb
out
mov
mov
sbb
daa
xor
stc
pop
push
fdivrs
jge
aaa
or
aad
into
inc
ja
adc
loopne
and
out
fs
pop
push
xor
jno
or
fimuls
sar
test
inc
fldl
xorl
aam
cmpsb
jne
jnp
or
mov
jmp
notl
fidivs
xor
mov
fs
dec
xor
dec
push
test
loope
test
add
jno
in
movsb
xchg
cld
cmp
xor
inc
mov
xor
cmp
stos
push
mov
mov
mov
sbb
loope
data16
movsl
mov
xchg
lahf
repnz
stos
add
jmp
xchg
mov
ljmp
stos
and
shll
push
mov
into
outsl
push
jb
fwait
roll
mov
gs
xchg
xor
xchg
test
mov
clc
dec
or
jne,pn
rcrb
enter
pop
and
rclb
loop
mov
sub
xchg
push
daa
push
ljmp
cs
cmp
inc
xchg
push
in
cmpsl
adc
adc
mov
and
aad
inc
xchg
popf
loopne
clc
out
stos
sbbl
mov
movsb
dec
les
out
mov
xchg
xor
stc
xorl
xor
or
xor
xor
popa
gs
popf
sub
subl
sub
jb
mov
and
subl
pop
add
adc
in
ss
jo
cmp
js
into
pop
inc
loopne
cmp
xchg
dec
jecxz
adc
sub
mov
shr
sbb
loop
popa
xchg
jnp
rcrl
mov
mov
jge
dec
mov
jbe
mov
ljmp
js
xchg
fsubr
test
rorl
loope
mov
mov
daa
sbb
sarl
mov
xchg
jl
aaa
data16
or
push
push
aaa
add
xchg
mov
pop
js
lret
push
fmull
aaa
mov
les
ss
pop
fucomi
or
add
add
shrb
lods
shrb
imul
xor
lret
mov
or
pop
push
lcall
xchg
shrb
in
shrb
je
and
sti
or
shl
inc
push
ja
lds
sub
dec
jbe
pop
js
mov
sub
jb
sbb
mov
enter
mov
push
mov
jge
sub
jno
mov
cmpsb
add
jnp
mov
arpl
test
dec
xchg
mov
lea
data16
and
fwait
inc
dec
out
mov
scas
ss
jo
sub
jecxz
mov
inc
jecxz
dec
jo
cmp
cltd
pop
mov
mov
and
push
mov
pushf
pop
iret
hlt
std
aas
outsb
popf
push
out
mov
int
mov
cmp
jp
dec
adc
sub
inc
rcr
test
es
add
push
cmpsb
inc
or
adc
cmp
push
fimull
js
cmp
sbb
les
mov
adc
jp
lret
pop
xor
cli
lock
int
sub
loope
jmp
int
sbb
sub
repz
cmpl
outsb
sbb
fwait
jae
lret
ljmp
jmp
cmp
cmp
repnz
xor
mov
jo
in
popa
mov
repz
xchg
testb
adc
adc
rorb
sub
jg
int3
pop
push
cmp
ljmp
xor
push
aad
mov
mov
sbb
cmc
sbb
push
pop
cs
or
cld
xchg
repnz
ret
cmp
cmpsb
orl
and
call
or
jo
fisttps
and
inc
push
sarl
mov
gs
jne
sub
insb
sub
xor
bound
jmp
scas
jbe
mov
push
add
lock
inc
arpl
orb
rolb
or
and
and
sub
adc
push
outsb
jle
sub
enter
imulb
and
jl
pop
mov
faddl
push
cmpsl
sub
mov
sahf
cmp
jns
stos
sti
pop
scas
cmp
jnp
mov
out
clc
dec
jae
fs
add
loopne
lea
add
mov
dec
ret
pop
or
cld
out
cmc
add
mov
jle
in
cmp
pop
rcrl
mov
adc
lds
repnz
xlat
popf
ss
jecxz
mov
xor
push
mov
mov
push
push
int
cmc
inc
pop
fsubl
push
pop
adc
jns
pop
sbb
mov
push
cs
jge
inc
mov
dec
cltd
mov
add
out
add
inc
jg
out
fcmovne
dec
movsb
out
cmp
lcall
inc
sbb
nop
in
out
popa
or
insl
cmp
in
push
or
push
scas
daa
adc
in
fadds
jb
aaa
pop
into
outsb
add
xchg
lcall
push
jl
cmpsl
lds
xor
pop
or
xor
push
jnp
push
cld
scas
in
and
xchg
mov
loope
int
xor
lcall
enter
push
outsl
out
adc
mov
inc
loop
mov
jecxz
jnp
dec
ds
pop
imul
jno
lods
arpl
int
pop
sbb
sbb
lea
jl
sub
scas
adcl
dec
aaa
imul
setae
or
sub
pop
and
cmp
aad
aad
cmp
pop
popf
inc
dec
jl
mov
xchg
dec
dec
ss
mov
jne
mov
jmp
out
call
lea
fsubs
mov
sbb
and
stos
shr
dec
jbe
or
shrb
xor
cltd
imul
dec
addr16
sbb
sbb
mov
push
xor
mov
divb
addb
int
xchg
lret
sti
bound
cmp
adcb
mov
or
rolb
xchg
cmpsb
inc
cs
sbb
ffree
daa
stos
pop
aas
movsl
and
scas
popa
pop
jns
push
insl
xor
pop
xchg
sbb
movsb
push
push
dec
xchg
adc
inc
mov
clc
aad
scas
sub
rcll
lock
movsb
mov
stos
insl
cmpsb
lret
popf
mov
push
roll
shl
std
adc
fnsave
aad
stc
push
cmc
ficompl
dec
dec
rcll
xor
fsubrp
adc
dec
sub
or
pop
popf
testb
or
xchg
fsubrl
imul
cltd
aam
xchg
rcll
in
xor
stc
pop
mov
mov
cmp
inc
dec
cs
inc
je
or
fsubr
roll
rcr
push
les
xor
mov
and
jg
js
push
cld
mov
mov
push
rorb
fidivrs
out
adc
out
mov
mov
sbb
icebp
mov
cmpsb
or
pop
mov
xor
out
or
addl
into
aaa
movsb
scas
or
aas
insl
xchg
loope
inc
push
sbb
add
rcrb
xor
push
sub
or
or
inc
dec
xor
cmp
or
mov
in
xchg
xor
sbbb
fdivrs
loop
mov
outsl
lock
jno
outsl
and
mov
jne
fwait
adc
ljmp
add
pop
mov
repz
popw
pusha
cli
in
in
leave
pop
push
xor
dec
daa
fsubr
imul
stc
flds
hlt
repnz
and
xchg
and
ss
test
test
lret
push
lods
cmp
sahf
loope
enter
sbb
sti
add
sbb
rcrl
fcomi
mov
pop
adc
pop
xor
mov
loope
adc
or
adcl
das
or
fimull
fsts
sub
push
xchg
subl
test
pusha
lahf
in
lods
movsb
mov
lret
daa
outsl
xchg
add
rcrl
enter
and
xchg
adc
mov
push
jb
cmp
test
mov
aas
fisttpll
aaa
loop
or
cmpsl
in
cld
scas
cmp
mov
out
loop
sbb
ret
push
sbb
jl
jmp
sbb
call
test
sbb
xor
lahf
aas
mov
mov
inc
call
ficoml
aam
xor
inc
mov
loop
xor
adc
out
lods
inc
mov
sbb
sbb
movsb
scas
inc
cmp
iret
int3
out
pop
stc
xlat
jno
dec
mov
pop
movsb
sub
shrb
mov
inc
cwtl
xor
cmp
mov
mov
pushf
mov
and
xchg
stos
add
jp
rolb
sbb
jns
rolb
dec
add
or
sub
push
cmc
idivl
call
cs
pop
sbb
adc
mov
mov
push
movsl
xchg
jle
mov
cltd
scas
pop
push
sub
nop
je
cmc
call
addb
mov
fwait
push
jne
arpl
imul
add
and
mov
or
xchg
push
mov
and
pop
jg
call
dec
mov
dec
rclb
mov
dec
jns
xchg
decb
xlat
sbb
cmp
movsl
or
cmp
imul
ja
mov
daa
out
add
imul
iret
inc
out
enter
mov
and
cmp
or
xchg
mov
jne
in
sti
xchg
icebp
push
ret
xchg
adc
mov
inc
fidivl
orl
frstor
aam
and
outsb
pop
mov
and
lods
lods
xchg
test
mov
mov
addr16
sub
ss
popa
cmp
lret
insl
mov
cltd
cli
es
push
fimuls
sarl
ds
repz
pop
xchg
xchg
fsubs
mov
xchg
hlt
dec
jno
scas
hlt
loopne
inc
test
cmc
ss
ljmp
fdiv
xlat
ret
xlat
ret
push
sbb
ja
adc
sbb
in
orb
xchg
jge
mov
xorl
push
stos
inc
mov
mov
notl
xchg
xchg
test
nop
outsb
rolb
push
hlt
or
aas
inc
and
jecxz
mov
cmpsl
hlt
mov
std
movlps
loopne
jg
in
adc
and
fnstenv
mov
cmp
dec
negb
andb
and
stos
push
mov
unpcklps
mov
mov
xchg
inc
pop
jnp
jae
sar
in
cmc
mov
repz
pop
cmc
loop
dec
xchg
call
xchg
es
cmp
hlt
stos
inc
pop
fldcw
sar
das
stc
sbb
jbe
jb
cmp
ret
call
mov
or
repz
dec
dec
ja
pop
xchg
push
fsubs
add
sbb
movsb
push
repz
lret
shrd
jecxz
pop
addr16
jmp
shl
enter
mov
shrl
das
out
jmp
push
mov
call
fistps
push
cmp
jne
orl
or
add
sahf
dec
aad
lret
ljmp
and
enter
ja
cmpsl
adc
cmpsb
push
jns
out
push
jge
cld
xchg
add
je
pop
or
rorl
mov
aaa
in
cmp
outsl
jp
and
mov
sbb
cmp
push
sub
pop
aas
xchg
stos
dec
loope
mov
jle
inc
xchg
rcl
and
rcrb
mov
xor
inc
xor
in
or
loopne,pt
jmp
xchg
mov
lahf
and
jl
jge
test
jle
jp
add
add
in
and
ja
lods
test
sbb
lods
cs
cmpsb
inc
aas
mov
in
mov
out
pusha
xor
cli
adc
ret
sbb
imul
mov
xorb
notl
adc
mov
mov
xchg
loopne
lds
jae
into
aas
fistpl
mov
push
fistpl
rcll
lcall
adc
adc
fstl
push
fnclex
popa
jo
xlat
pop
jb
push
pop
shlb
cmp
std
mov
push
sub
mov
sbb
dec
aas
and
ss
fidivl
xchg
fisubrl
popa
stc
das
ret
jge
imul
adc
adc
add
ss
pop
sub
leave
jo
lods
mov
ja
xchg
mov
xor
push
lret
inc
arpl
mov
sub
push
and
dec
lods
and
mov
jb
pop
push
push
sbb
dec
jbe
ss
adc
jae
sarl
in
mov
pop
repnz
cmp
punpckhwd
ljmp
mov
arpl
outsb
cmpsl
arpl
xor
sti
push
rsm
push
or
push
pop
pusha
stos
mov
lahf
cmp
shrb
pop
push
inc
lock
xchg
add
test
xor
mov
sub
pusha
pusha
jmp
js
fcmovnu
roll
les
addb
lret
dec
dec
cmc
mov
pop
jb
arpl
xchg
mov
cli
cld
and
out
mov
scas
cli
loopne
imul
std
std
cmpxchg
int3
pandn
gs
iret
jmp
push
adc
stos
stos
gs
jmp
jo
pop
and
xchg
les
pushf
jge
dec
das
popf
icebp
addl
mov
ror
sub
cltd
jo
ss
out
cs
jle
inc
inc
push
ljmp
add
sbb
pop
hlt
ret
outsb
or
jae
jae
push
jmp
push
cmp
push
out
int
or
aam
rcrb
adc
mov
push
cld
les
xchg
cli
add
lea
test
push
arpl
jno
loopne
pop
movsb
sbb
inc
jne
pop
lret
push
inc
mov
sti
mov
xchg
jmp
dec
movsb
or
mov
stc
fidivs
mov
lcall
sub
adc
cmc
std
jb
mov
jge
adc
dec
test
or
mov
push
in
xor
xchg
call
dec
cmpsl
addr16
sbb
push
cmp
inc
jbe
aaa
iret
add
or
aad
sbb
xor
das
notb
inc
cmp
dec
jle
mov
sbb
pusha
mov
test
cld
mov
push
icebp
into
insl
arpl
push
sbb
mov
out
fwait
jle
in
mov
cwtl
mov
out
lcall
movsb
cli
pop
lods
pop
out
mov
ss
mov
sub
sbb
inc
jne
xor
mov
int3
push
mov
push
xchg
addr16
inc
push
fcoms
fsubs
push
mov
jp
repnz
loopne
test
xchg
test
loop
inc
fisttps
scas
pusha
in
xchg
mov
sbb
push
add
dec
popl
mov
loopne
outsl
imulb
dec
setg
xlat
mov
and
dec
mov
cli
imul
adc
jge
add
lods
mov
push
cmp
push
data16
cmp
hlt
scas
or
adc
cmp
bound
pop
inc
jp
mov
shll
push
mov
js
out
fldcw
imul
hlt
xor
add
push
cmp
cltd
inc
aad
sbb
add
pop
inc
stos
mov
add
fistpll
sbb
les
fcomps
rorb
lret
or
push
sub
mov
lods
add
loope
xchg
cwtl
jmp
mov
and
jl
out
mov
pushf
inc
dec
sub
push
mov
cld
out
push
xchg
jno
jg
adc
cld
jnp
arpl
push
setg
sub
inc
sbb
js
push
jp
lret
push
fwait
xchg
or
jl
into
mov
or
mov
mov
push
dec
sbb
insl
cmp
mov
inc
mov
inc
sbb
adc
scas
and
cmp
jle
popf
ljmp
jb
and
rclb
jnp
inc
adc
jp
sbb
cmp
daa
mov
stc
in
mov
xor
dec
mov
add
cmc
mov
daa
jl
outsl
fstpl
pop
push
cmp
dec
mov
xor
dec
fnstenv
stc
lds
jo
iret
dec
lea
daa
pop
popf
mov
xchg
fincstp
xchg
sbb
rcr
pop
mov
subl
mov
and
jne
pop
cwtl
int
outsb
sub
popa
repz
push
dec
fwait
cmp
cmp
xchg
decb
pop
in
je
lret
and
jmp
dec
inc
das
aas
and
push
nop
dec
pop
fsincos
daa
mov
fildll
push
jae
mov
ret
cmp
sbb
sbb
dec
push
ljmp
and
pop
fnstenv
sbbb
cwtl
jecxz
jb
fldt
popaw
call
out
jne
jno
mov
in
arpl
sub
mov
orl
test
nop
xchg
adc
int
xor
dec
lods
inc
adc
psllw
and
xor
or
mov
dec
dec
in
pop
sbb
and
jl
std
inc
pop
mov
pop
es
mov
inc
call
faddl
xor
add
jne
cwtl
mov
in
xor
fisttpll
mov
test
popf
add
push
psadbw
test
lret
mov
roll
cmp
in
cmp
pop
das
sahf
jge
lcall
test
inc
cmc
xchg
pop
lods
jae
cld
add
in
mov
bound
scas
mov
ss
xor
mov
je
or
push
cmpsb
jmp
fwait
xor
xchg
lods
lret
adc
rcrb
mov
scas
test
popf
ja
enter
hlt
mov
fdiv
in
call
lret
flds
dec
cmc
ja
jbe
xchg
cmc
sbb
sub
sti
mov
or
inc
xchg
test
xor
pop
sbb
xchg
sbb
sub
ja
test
fwait
or
int
inc
mov
inc
loopne
mov
int3
pop
dec
sub
sbbl
jp
je
js
out
mov
test
std
ret
ret
cli
adc
shrl
push
xor
outsl
cli
xor
js
xor
loop
or
pop
mov
push
sub
test
mov
add
ja
test
aaa
negl
cmc
pop
push
push
pop
lods
ds
call
mov
push
fsubs
imul
jns
icebp
and
or
mull
xchg
mov
add
in
mov
and
in
lods
cwtl
jno
inc
ljmp
loopne
sbb
mov
dec
popa
ficompl
insl
lret
pop
mov
pop
push
push
in
out
mov
dec
mov
lods
sbb
lock
jbe
ja
icebp
sbb
ljmp
arpl
lcall
dec
mov
mov
jl
adc
and
sahf
push
mov
inc
pop
iret
add
imul
jmp
or
xchg
inc
pushl
push
lret
loop
sub
pop
mov
cmc
dec
insl
mov
push
xor
jmp
add
gs
push
push
push
cmp
dec
push
cmp
jnp
cmc
lret
push
adc
hlt
outsb
loop
mov
mov
mov
fldln2
dec
cmp
push
sahf
add
out
stc
mov
push
fidivl
xchg
mov
fwait
dec
popf
adc
pop
push
out
jo
ljmp
fwait
push
lret
in
cmp
sub
stos
in
stos
xchg
fs
lea
mov
push
ss
fstl
ds
push
in
shll
cmpb
cmp
stc
lret
add
bound
aaa
out
jmp
mov
xor
jbe
shll
mov
into
sub
fwait
dec
rcl
fldenv
lret
cltd
fs
in
jge
into
jns
xchg
jge
xchg
lret
and
mov
in
pusha
fsubs
lcall
fwait
jne
dec
fnsave
test
sub
aad
fnstcw
fisttpll
lcall
sub
cmp
leave
cmp
sub
sbb
or
pop
mov
stos
imul
cmp
leave
cmp
sub
sbb
or
pop
mov
sub
sbb
cltd
cli
sbb
lret
fldcw
sbb
stc
or
pop
push
dec
pop
mov
pop
mov
cli
or
sub
mov
addb
jge
repnz
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
pushl
call
call
mov
jmp
lea
push
pushl
call
lea
push
pushl
call
jmp
push
call
xor
leave
ret
dec
lods
pop
inc
outsl
jae
arpl
xor
dec
jl
and
rcr
iret
out
jecxz
loope
xchg
lahf
subl
pop
inc
outsl
jae
arpl
adc
add
xor
and
rcr
ret
fwait
sar
jecxz
lock
push
scas
mov
mov
outsl
imul
or
sbb
sub
cmp
xor
stc
pushf
xchg
jecxz
sar
in
loope
shll
sbb
or
fisubl
add
mov
js
mov
les
jecxz
lcall
std
and
leave
stos
cmp
sub
jp
jo
mov
scas
mov
out
mov
aam
cmpsl
sub
pop
push
inc
push
add
ror
iret
push
mov
adc
data16
adcl
lret
mov
sbb
push
rdpmc
shrl
fmul
or
bound
fstps
shl
scas
cmp
mov
mov
adc
arpl
and
pop
and
pushl
popf
push
dec
mov
pop
mov
addr16
lahf
test
sub
loop
or
pop
out
repz
sahf
imulb
push
pop
push
outsl
arpl
movlps
add
sub
cmp
lret
out
ljmp
scas
mov
or
ss
or
bound
push
insl
dec
pop
jle
mov
xchg
mov
not
jmp
jmp
dec
sub
dec
pusha
jae
das
push
aas
dec
stos
stos
frstor
ljmp
adc
es
adc
movq
add
xor
and
rcr
ret
out
repz
xchg
lahf
subl
pop
inc
outsl
jae
arpl
adc
add
xor
and
rcr
ret
out
repz
xchg
lahf
subl
cli
aam
pop
jo
cs
les
xchg
push
mov
sbb
into
cmp
sbb
in
aas
aam
xchg
xchg
cltd
mov
cld
sub
or
mov
cwtl
out
xorb
mov
loop
fs
in
add
repz
inc
push
in
mov
gs
xor
into
sub
pushf
ja
fistpll
sub
daa
sbb
mov
ss
sahf
adc
xchg
mov
rcl
sahf
cmp
or
addr16
test
fidivs
in
xchg
push
lret
lods
int3
adc
and
add
ljmp
out
sbb
jmp
lods
mov
gs
movsl
dec
pop
cwtl
xor
or
push
sbb
mov
xchg
fwait
lods
xchg
fcompl
pushf
cmp
mov
bound
in
xchg
pop
push
cmp
jecxz
push
pushf
pop
adc
sarl
sbb
or
loope
inc
and
push
lret
adc
movl
push
or
iret
mov
xchg
jg
mov
repz
xchg
jnp
adc
xchg
inc
or
or
mov
push
movsl
lret
daa
or
mov
aad
xchg
roll
decl
jmp
scas
imul
in
mov
cmp
dec
lea
loopne
iret
inc
and
sub
pop
lods
fisubrs
cmp
sub
outsb
and
lods
cmc
jmp
jle
inc
iret
or
test
test
movsb
xor
add
arpl
add
lahf
mov
and
dec
inc
mov
pop
imul
rcrl
jmp
mov
sub
jae
in
jl
iret
jmp
dec
cmp
lcall
dec
std
push
nop
cmp
or
and
or
popa
jg
mov
add
shr
lods
or
lahf
xor
xchg
fistps
jns
inc
inc
pop
loope
inc
or
or
aam
push
xchg
jno
push
cmp
mov
inc
pop
or
movsl
daa
mov
ficoml
push
mov
add
jnp
xchg
int
loop
jge
ljmp
mov
jle
repz
dec
mov
subb
push
test
sarl
cmp
cmp
ss
frstor
mov
in
into
jmp
std
xchg
cmp
jb
add
xlat
dec
es
inc
std
mov
xlat
pop
dec
jae
lods
test
pop
and
cmpsl
outsl
fmulp
xchg
out
sub
xchg
dec
adc
jb
and
das
jmp
ljmp
cmc
or
and
add
and
rol
mov
and
sbb
pop
mov
cmp
call
and
bound
rclw
dec
fildll
loopne
into
or
ror
movsl
pop
push
cmp
lea
xchg
xchg
lahf
mov
xchg
dec
addr16
xchg
inc
shll
sar
fmull
jb
stos
outsl
dec
pop
aad
sbb
lods
sarb
fimuls
int3
inc
push
add
lods
add
fstpl
jmp
add
mov
bound
das
mov
xlat
adc
adc
imul
jnp
out
pop
xlat
icebp
ja
push
or
aam
mov
stos
test
jp
jle
lds
sub
xor
cmp
pop
out
loope
dec
andb
out
stos
or
movsb
jp
xor
mov
inc
iret
mov
fwait
pop
das
int3
mov
or
cmp
stos
dec
mov
lahf
cmc
gs
lret
scas
mov
pop
movsb
pop
fsubp
test
scas
mov
clc
lds
out
das
jnp
xchg
fsubl
into
cmp
or
outsl
adc
sar
fiaddl
or
and
imul
dec
inc
mov
ljmp
call
daa
loope
lret
mov
sahf
push
mov
xchg
sti
mov
sub
mov
mov
add
jnp
inc
xor
adc
push
push
stos
fisubrs
shl
or
ret
cltd
adc
test
and
inc
sub
jmp
icebp
or
mov
mov
lret
shll
mov
xchg
ja
pop
sbb
inc
pop
pop
push
jp
push
outsb
xor
xchg
leave
jae
ret
mov
hlt
cltd
mov
lock
mov
sbb
popf
idiv
fmull
popa
popf
dec
outsb
imul
fdiv
sub
stc
mov
iret
and
aaa
not
push
rcrl
mov
adc
mov
xor
rcrb
test
ficoms
andnps
mov
pop
xor
stos
add
mov
push
xchg
push
ljmp
adc
imul
lock
daa
and
or
pop
push
dec
add
sbb
push
pop
adc
adc
stos
test
jb
es
jae
mov
testb
shlb
push
push
jge
mov
fs
dec
sub
adc
adc
mov
pop
addr16
jbe
pop
lea
clc
jne
xchg
mov
popf
jecxz
sbb
sub
mov
dec
into
shlb
pop
pop
mov
js
inc
mov
or
dec
imul
lahf
add
mov
adc
rep
adc
adc
fcomps
or
in
cwtl
repnz
inc
xor
adc
pop
mov
cld
or
or
mov
inc
sbb
int3
sarl
xor
push
mov
add
and
lret
ja
jae
inc
sbb
sub
mov
les
cmc
dec
jo
mov
lods
jo
push
lcall
js
cltd
ljmp
push
mov
mov
inc
cmpsb
mov
decb
push
sbb
xchg
das
scas
inc
iret
mov
shl
lahf
dec
arpl
iret
ret
jge
shll
pusha
ja
mov
mov
ja
stos
mov
push
sub
xor
sub
mov
xor
xor
pop
inc
mov
lahf
xor
mov
shlb
faddp
fs
xchg
cli
ljmp
roll
mov
aam
lods
pop
insb
leave
ds
jae
push
xor
lods
mov
call
iret
aas
sarl
xor
jb
arpl
pushf
xor
mov
shr
pop
sbb
out
pop
movsl
sub
aam
lds
pop
mov
push
sahf
mov
jns
stc
lds
ret
and
jp
nop
or
rorb
int3
outsl
leave
pop
adc
lret
je
mov
sahf
xchg
outsl
out
in
sbb
lahf
fcoml
or
xchg
sbb
or
int
es
push
mov
pop
add
sub
fnstenv
sub
mov
xlat
jp
cmp
stos
into
dec
daa
cmp
mov
cs
aam
cmp
jmp
cmpsl
out
dec
adc
mulb
sub
addr16
mov
jge
call
cmp
sbb
push
es
bound
testb
add
lods
dec
loopne
mov
cmp
pop
cmp
or
sub
jle
mov
std
out
sbb
xlat
jg
dec
jmp
sub
mov
and
dec
add
sbb
lods
mov
cmp
push
fisubrs
test
outsl
leave
out
out
cmpsl
xchg
dec
xchg
sub
ljmp
addb
loop
sbb
mov
push
dec
xor
hlt
pop
pop
jnp
jnp
sub
sub
addl
loope
xchg
push
test
mov
dec
sbb
xor
mov
subb
xchg
xor
mov
mov
mov
pushl
mulb
incl
nop
pop
xor
add
xor
dec
js
sti
sub
es
push
push
icebp
inc
or
pop
pop
jp
jp
shr
inc
and
loopne
inc
push
dec
xchg
xor
ja
inc
nop
add
jb
aam
cmpl
push
adc
ds
mov
and
addb
mov
cmp
lock
or
xchg
addr16
sti
xor
test
or
jno
jnp
pop
pop
jbe
xchg
testb
cmp
dec
loop
adc
mov
cmp
test
fnstsw
inc
mov
xor
bnd
inc
ja
das
inc
into
je
jmp
adc
jnp
dec
leave
xchg
inc
clc
mov
pop
shrb
movsb
adc
aad
mov
ret
fstl
sub
movsb
mov
adc
xchg
inc
test
sbb
cmpsb
out
shlb
sti
or
into
loope
frstor
pop
xor
jle
adc
xchg
scas
std
ret
cmp
xor
cld
mov
cs
in
aad
mov
jl
enter
fs
sarb
inc
cmp
in
in
int3
xchg
enter
ja
xchg
repnz
push
adc
cmp
xchg
std
pusha
sub
jae
lods
movl
pop
jb
mov
daa
fisttpl
push
loope
and
cs
xchg
mov
sbb
dec
repz
mov
jp
dec
dec
xlat
add
add
adc
call
js
enter
sub
and
mov
shll
cmp
ljmp
mov
lock
push
orb
xor
push
xor
mov
into
jo
add
stos
out
sub
push
aaa
push
icebp
pop
pop
stos
out
push
and
shlb
mov
data16
adc
cmp
cmp
imul
mov
bound
out
push
aad
inc
xchg
xchg
inc
js
xchg
fs
and
xor
jmp
pop
dec
add
inc
outsl
push
mov
fisttps
cmp
pop
inc
out
fwait
outsb
data16
inc
js
push
insb
loopnew
mov
inc
cli
ror
into
dec
jno
push
sub
xchg
xchg
push
push
cld
fdivs
mov
cmc
leave
leave
in
mov
pop
lea
fcompl
mov
xchg
dec
outsb
stos
lret
push
jb
pmaddwd
jecxz
jne
mov
push
imul
add
movsb
test
leave
outsl
or
punpcklwd
sub
aad
jmp
mul
add
sbb
fdivrl
imul
push
cmp
insb
das
adc
push
and
or
jns
fwait
sub
add
or
imul
sahf
dec
pop
inc
jle
roll
inc
sbb
cmpsb
jge
ds
mov
insl
cld
popa
out
ss
mov
cmp
cmp
repz
ret
mov
cld
and
call
jmp
aaa
push
add
xor
xor
stos
mov
mul
call
aas
pop
aaa
xor
ret
sahf
mov
adc
xor
inc
shll
pop
add
jle
pop
fisttps
pop
movsl
ja
dec
pop
xor
lcall
adc
cwtl
dec
xorb
scas
fidivrs
xchg
mov
add
mov
lock
aaa
jo
fwait
insl
shlb
jge
add
call
mov
jae
jno
pop
mov
mov
loope
cmc
and
jnp
call
setno
xor
add
mov
shl
cmp
test
adc
inc
pop
or
jae
and
popa
add
pcmpeqd
and
mov
cltd
add
pop
jp
fdecstp
sub
lods
mov
cmp
les
pop
fisttpll
pop
pop
lret
enter
pushw
xor
fsubp
push
sub
cmpsb
sbb
das
push
mov
stos
xchg
jmp
incb
and
xchg
jo
ja
lock
xor
loope
xor
cmpsl
in
xor
aaa
add
test
push
stc
es
pusha
sbb
rorb
movsb
or
es
cld
dec
add
mov
aas
pushf
cwtl
add
mov
lret
pop
jl
push
test
shlb
pop
dec
mov
dec
jmp
sbb
sbb
daa
cmpsb
arpl
and
cmp
xchg
jl
stos
xchg
orl
mov
outsb
pop
sbb
push
push
scas
sbb
xor
loop
imull
and
or
pop
xorl
orb
pop
inc
daa
inc
in
or
add
xorb
mov
dec
repz
lahf
mov
aad
pushf
lahf
lods
popa
pop
jg
adc
cmp
rclb
lret
addr16
sub
pop
bound
sub
push
sub
mov
mov
repz
sarl
adc
pusha
shl
add
mov
iret
test
test
xchg
mov
sbb
or
pop
sub
enter
mov
pop
cld
mov
pop
addr16
out
shl
sbb
xchg
sar
push
sti
data16
arpl
mov
mov
aad
sub
jmp
aaa
and
data16
hlt
inc
adc
xchg
push
adc
mov
sbb
or
mov
lods
pop
or
mov
pop
addl
mov
lds
sbb
int3
jl
out
test
xlat
pop
xlat
jnp
mov
sbbb
daa
pop
jmp
jnp
test
into
pop
pop
adc
mov
test
jmp
mov
push
test
pop
ljmp
shl
fwait
adc
dec
into
or
xchg
mov
sbb
sbb
sbb
or
int
gs
test
ret
xchg
mov
xchg
lock
repnz
test
xor
rcr
shll
mov
or
jae
loopne
and
pop
fwait
das
loope
repnz
rcll
shlb
mov
rcr
js
stos
cmp
imul
jl
pop
hlt
jp
adc
je
stos
and
sbb
popf
movb
adc
push
mov
mov
sbb
sub
orb
lret
xchg
cmpsl
repnz
and
cli
sub
add
xchg
mov
sbb
lods
lea
lret
adc
cmp
insl
in
adc
rep
mov
jbe
or
xchg
ja
movsb
mov
mov
cmpsb
mov
xor
lret
jg
lahf
inc
push
or
and
mov
jmp
mov
push
ret
in
jno
mov
or
mov
sbbb
test
cmp
addr16
scas
ja
ror
repz
frstor
movsl
ljmp
and
ds
push
xchg
mov
test
or
sbb
xchg
jecxz
push
jge
outsl
lea
sbbl
sub
mov
jp
sub
cmp
inc
arpl
in
mov
dec
repnz
imul
out
fmuls
sbb
in
jmp
jecxz
mov
fmuls
push
pop
test
sub
test
sbb
dec
bound
xchg
push
scas
scas
test
gs
xchg
out
test
push
dec
mov
cmp
xchg
inc
dec
push
mov
test
outsb
out
add
roll
lahf
std
sahf
mov
bound
dec
push
sarb
sahf
sbb
int
cmp
pop
ret
shll
and
and
push
cmp
jge
push
filds
jne
dec
imul
addr16
add
dec
mov
xorb
test
fwait
pop
out
mov
leave
push
push
fwait
dec
scas
xchg
out
push
xchg
xchg
fdivrl
ficoml
scas
in
cmp
sbb
test
stos
inc
out
dec
cmpsl
ret
fmuls
sub
add
pop
ds
sti
popa
ds
jns
dec
pop
lods
cld
ss
jb
lahf
jle
inc
or
mov
data16
arpl
and
fs
cmpsl
mov
movsl
mov
push
fisttps
jg
cmpsb
rcrb
xchg
and
ss
int
mov
xor
mov
subl
lret
pop
cmp
xorb
movsl
cmp
fldt
insb
cmc
sarb
xchg
pop
movsb
mov
js
divb
fsubrs
insb
ret
inc
insl
cmp
js
lods
xchg
cld
jmp
and
scas
daa
pushf
cmpsb
pushf
add
mov
xchg
sub
jl
shr
adc
pop
inc
mov
or
sbb
inc
mov
stc
add
dec
jno
mov
std
es
loopne
leave
movsb
cmpsb
ja
test
fnstenv
mov
pusha
xlat
cmp
push
data16
int3
in
pop
movsb
iret
pop
jl
addr16
data16
nop
lds
or
jns
xor
mov
cwtl
jle
push
push
lcall
dec
arpl
xor
mov
das
lcall
xor
ds
push
test
mov
fcoms
aaa
or
insl
sbb
hlt
add
and
push
pushf
stos
dec
jae
cmp
and
fildll
scas
sbb
mov
xor
pushf
stos
loope
and
jb
popa
and
push
mov
mov
cwtl
sub
icebp
aam
pop
mov
enter
movsl
sarl
test
cs
loop
pop
out
jb
inc
out
dec
fimull
stos
mov
mov
inc
jmp
lock
in
jno
pop
mov
cmpsb
data16
ret
stos
clc
xor
insb
jge
cmpl
aaa
arpl
fcomp
sbb
in
cli
or
or
mov
cli
mov
jo
dec
pop
int
inc
lds
push
je
add
sub
scas
mov
or
rcll
push
leave
dec
cli
lahf
testb
jp
out
mov
jo
fcoml
and
out
in
or
xchg
jge
shll
insb
add
mov
scas
adc
nop
cmpsb
movsb
scas
mov
jns
cmpl
sbb
push
jecxz
xlat
les
ror
movsb
mov
push
arpl
inc
int3
lret
jge
in
bound
mov
orb
push
cmp
pushf
cmp
scas
loope
mov
loop
inc
daa
les
sarb
std
dec
mov
xchg
xchg
mov
and
je
dec
pop
insl
push
push
xor
mov
lock
jg
ret
push
or
pop
cwtl
addb
cld
cmpsb
add
lods
adc
stos
clc
lret
mov
in
push
cmp
movb
clc
iret
pop
mov
inc
fcmovnbe
dec
les
test
sbb
sbb
and
in
mov
inc
xchg
fidivrl
sbb
jno
imul
adc
push
daa
jno
ds
cld
orl
sbbb
out
movsb
xchg
cli
ljmp
clc
hlt
pop
jle,pt
sahf
repz
cld
jl
cmp
daa
rorb
pop
shll
xor
mov
mov
insb
rcrb
lahf
add
shll
inc
in
and
sbb
xchg
mov
jl
sbb
jp
push
imull
adc
add
call
test
lcall
push
cli
jge
xor
mov
call
cmpsb
sbb
push
icebp
adc
icebp
les
loopne
dec
cmp
dec
pop
pop
sub
daa
jae
mov
mov
jno
xchg
fnsave
push
jbe
sbb
xor
or
adcl
stos
dec
xor
rcl
call
bound
dec
and
xor
aad
and
mov
sti
stos
and
push
gs
arpl
cmp
lea
cltd
js
pop
sbb
pop
insl
pop
inc
aad
dec
repnz
sbb
pop
xor
push
in
jecxz
or
jne
dec
mov
cmp
das
sbb
in
fdivrp
out
or
fisubrs
inc
push
cmpsb
push
lods
or
pushf
mov
out
push
or
adc
ficomps
jg
orl
je
daa
or
jmp
dec
test
or
icebp
xchg
loope
add
xlat
pop
inc
fdivrl
cld
xor
stos
test
cltd
repz
cld
and
repz
ja
outsb
outsl
aas
sub
cmp
in
in
in
xchg
out
fdiv
inc
jno
inc
pop
xor
mov
inc
movl
mov
dec
clc
fstpl
rcrl
add
pop
jg
stos
jb
mov
add
pop
cwtl
test
pop
mov
stc
adc
lret
imul
sarl
rcrl
mov
mov
sahf
sbb
add
daa
jl
dec
xor
sbb
xchg
sbb
mov
fsubl
insl
leave
hlt
daa
popf
add
popf
lods
push
fdivs
scas
scas
push
insb
push
dec
mov
jne
shlb
lods
inc
push
push
sahf
js
shrd
out
push
mov
cmpl
mov
les
pop
mov
adc
cmp
lcall
pop
int
mov
fs
loope
gs
adc
pop
in
adc
incl
popf
or
test
pushf
lds
inc
mov
xchg
or
xchg
jmp
popf
or
scas
in
aaa
stos
pop
mov
or
fucom
mov
xchg
push
jmp
cmpsl
scas
imul
lret
data16
into
xor
clc
inc
lds
mov
sbb
lret
inc
lret
cs
jae
or
push
push
mov
lret
mov
jmp
dec
cmp
jecxz
jg
dec
jmp
scas
pushf
jg
movlps
add
xor
and
rcr
ret
out
repz
xchg
lahf
subl
pop
inc
outsl
jae
arpl
adc
add
xor
and
rcr
ret
out
repz
xchg
lahf
subl
pop
inc
outsl
jae
arpl
adc
add
xor
and
rcr
ret
out
repz
xchg
lahf
subl
pop
inc
outsl
jae
arpl
adc
add
xor
and
rcr
imul
pop
jl
dec
inc
pop
push
mov
sub
movl
movl
movl
movl
leave
ret
xchg
xor
cmpsl
add
addb
inc
adc
add
test
inc
movsl
ja
lds
and
xlat
jne
notl
inc
pop
mov
movsl
aaa
xchg
daa
test
inc
in
aad
lds
adc
notl
inc
pop
mov
inc
in
test
xor
xor
push
out
mov
into
jmp
sbb
insb
cmpsb
fildll
and
int3
cmp
jnp
js
dec
add
cli
xlat
lcall
mov
leave
xchg
fadds
aad
cmp
in
repz
out
imul
jne
pop
daa
nop
mov
hlt
sub
xchg
lret
je
mov
jne
mov
mov
pop
cmpsb
inc
mov
sub
in
test
fnstenv
ret
pop
clc
sub
lcall
shld
mov
stos
mov
fisttpll
mov
test
xchg
dec
test
shlb
xor
cmpsl
add
notl
inc
pop
mov
movsl
aaa
xchg
daa
test
inc
in
aad
xor
in
icebp
push
loope
mov
test
cwtl
xor
fldenv
inc
sti
jmp
cwtl
push
pushf
adc
mov
aam
out
mov
mov
cmp
leave
dec
ret
daa
jmp
push
mov
xchg
popa
ret
sbb
notl
inc
pop
mov
movsl
aaa
xchg
daa
test
inc
in
aad
lds
adc
notl
inc
pop
mov
movsl
aaa
xchg
daa
test
inc
in
aad
lds
out
aam
mov
lods
or
aad
mov
add
cmp
pop
div
sbb
rolb
sbb
adc
mov
and
xor
adc
xor
mov
sbb
push
sahf
pop
cmp
fstl
rcl
leave
sbb
sub
int
mov
sysenter
fs
arpl
inc
sbb
push
sub
lods
jae
cmp
mov
inc
sbb
stos
fdivrl
sbb
pop
cmpsl
scas
lods
popa
or
pushf
gs
and
jp
xchg
ret
inc
sub
push
pop
shrb
add
mov
push
dec
cmp
jmp
or
inc
repnz
clc
lahf
jecxz
cmp
pusha
sahf
outsl
mov
sub
sub
gs
jmp
dec
sbb
cmpsb
xchg
lret
mov
stc
fldcw
loope
aaa
pop
and
outsl
ljmp
test
aaa
or
sub
test
lahf
aam
das
ret
pop
popa
aad
sbb
lcall
pushf
cmp
jecxz
fldcw
and
push
jne
add
and
imul
cmp
mov
xor
jnp
lcall
lods
add
mov
push
xchg
cltd
popf
push
pushf
lods
lds
xchg
les
lds
cmpsl
popa
cs
dec
popa
dec
push
push
lods
adc
cmpb
pusha
dec
int3
aas
push
stos
imul
lcall
movsl
jns
stc
jl
jae
adc
les
jecxz
pop
sahf
adc
pop
in
sti
xchg
mov
xchg
jns
dec
sbb
std
loop
testb
jne
into
vmxoff
aad
mov
sysenter
outsb
clc
push
aam
and
jo
sbb
xlat
xor
std
mov
pop
push
push
jbe
mov
jo
cmp
push
fdivrs
pop
sub
ljmp
mov
xorb
je
and
inc
pop
stos
cmp
mov
aam
frstor
enter
sub
push
test
xchg
fwait
sbb
aaa
arpl
jbe
inc
mov
es
cmp
jnp
pop
sub
or
xor
add
lods
outsl
and
daa
popa
mov
push
pop
add
mov
les
add
dec
popa
lret
repnz
arpl
jecxz
jns
test
jae
mov
stos
sub
cmp
les
int
int3
lock
inc
xor
cmp
adc
gs
mov
jge
aad
add
cmpb
jge
aaa
sbb
scas
insb
mov
push
xor
sub
xor
mov
in
cmp
sbb
jle
xchg
xchg
gs
dec
cmp
pop
leave
outsl
dec
mov
inc
mov
cmp
mull
imul
push
xor
iret
std
movsl
lock
test
sub
mov
add
scas
cmp
jae
mov
fadd
test
das
lock
pusha
or
mov
mov
insb
jbe
lods
push
imul
out
mov
in
xor
sbb
fs
jne
and
lds
fs
fidivs
cmp
orb
pop
pop
dec
hlt
xchg
push
adcb
sub
ret
inc
dec
aam
enter
or
push
stos
pop
push
dec
sub
pop
mov
out
popa
shlb
cld
and
jne
jbe
xor
mov
xlat
xchg
cmp
mov
clc
call
xchg
ret
jp
das
repnz
cwtl
test
sub
xorl
push
jg
ss
mov
xchg
or
xor
jg
insl
xor
fiadds
dec
hlt
scas
sub
popf
scas
or
inc
mov
xchg
xor
mov
xor
scas
popf
mov
mull
in
out
gs
pop
nop
sub
xor
cltd
adc
movsl
scas
aaa
outsb
xor
mov
and
mov
inc
je
xchg
loope
add
adc
or
mov
dec
shlb
xchg
in
into
daa
pop
stos
jbe
repz
pop
mov
inc
mov
aas
test
pop
sbb
xchg
add
cmpsb
mov
mov
std
push
out
jmp
xchg
ret
gs
addb
push
cs
mov
or
shl
stc
pop
xchg
rcll
shr
pop
lods
test
dec
cmpsl
scas
fcmovnu
lcall
xchg
pop
or
sarl
cmc
mov
mov
cmp
jbe
decb
pusha
push
push
mov
clc
mov
mov
ds
mov
dec
call
and
outsb
je
jge
mov
in
add
test
inc
iret
addr16
repz
mov
shl
loopne
daa
es
iret
js
push
movl
testb
lret
in
mov
cli
mov
in
out
xor
sub
xchg
pop
bound
add
cli
mov
scas
mov
shr
mov
ljmp
test
mov
mov
cld
repnz
loopne
lret
push
call
sti
jle
xor
stc
sbb
lret
pop
jg
sarb
imul
ret
movsb
insl
fnstsw
jbe
or
js
repnz
adc
dec
jns
pop
dec
sahf
loopne
stos
jnp
jmp
xor
lret
ja
push
jl
jnp
in
bound
dec
lret
jne
out
and
mov
shrb
jae
popa
sti
dec
and
pop
inc
jb
dec
cmp
lods
and
add
mov
arpl
sbb
push
mov
cs
rolb
int
or
call
test
xchg
xor
xor
sti
cmp
loop
ret
testb
lea
dec
test
mov
adc
sub
fistpll
cmp
fadd
cmp
sbb
dec
repnz
sub
push
jnp
xor
mov
fstpl
in
int3
sahf
repz
xor
in
mov
loope
pushw
dec
pushf
test
vmovq
mov
lea
cli
xchg
mov
xor
loop
aaa
sub
mov
out
int
push
pushf
das
daa
inc
pop
push
adc
movsb
pop
int3
pop
xchg
adc
mov
and
xor
icebp
push
pop
xor
sub
dec
imul
loope
mov
stc
jnp
cld
adc
or
pop
arpl
or
mov
jne
out
push
dec
inc
ljmp
loopne
push
int3
lods
sub
mov
stc
mov
mov
cwtl
push
jnp
sahf
insl
mov
pop
clc
mov
ret
pop
aas
sub
dec
inc
and
add
test
sbb
loope
pushf
xchg
mov
lcall
inc
and
les
fcoms
xor
test
cmpsb
call
call
ljmp
xchg
inc
mov
rcrb
lea
or
cmp
sub
mov
in
jge
adc
xchg
mov
std
imul
scas
sahf
inc
lret
fnstcw
popa
imul
pop
bound
bound
mov
push
or
xchg
pop
mov
orb
rclb
push
into
pop
fcmovbe
mov
xchg
add
fsub
xchg
adcb
jp
xchg
jne,pn
inc
rolb
int3
scas
dec
push
cld
mov
jle
sbb
xor
jnp
xor
sbb
test
cmp
jno
lea
cmp
cmp
movsl
inc
test
imulb
es
jp
in
mov
or
aaa
cmpsb
fnstsw
xchg
or
in
fwait
push
orl
stos
movsb
in
rol
or
dec
xchg
lock
ljmp
cltd
mov
jl
xor
andl
jl
sahf
pop
rorl
lea
sahf
sbb
mov
add
dec
xchg
dec
xor
push
cltd
aas
push
xchg
adc
xchg
hlt
inc
adc
jbe
mov
and
rolb
mov
adc
push
adc
adc
or
xor
add
inc
or
ret
xor
sbb
push
push
test
aad
cmp
dec
push
lret
inc
and
imul
fsubrl
push
shrb
loopne
ret
in
and
jnp
jecxz
lahf
adc
pop
dec
mov
xor
pop
mov
and
insl
into
jle
repnz
pusha
mull
sbb
add
test
push
dec
or
and
arpl
or
jp
xor
mov
fsubs
bound
lods
test
ss
mov
int3
cmpsl
fucomip
sbb
lcall
lods
cmp
sub
fsincos
push
incb
addb
nop
inc
fs
adc
scas
mov
outsb
adc
adc
cmp
pop
jnp
orl
jl
mov
pop
xor
jnp
push
lahf
xchg
clc
and
ja
mov
loop
shlb
push
add
shll
sbb
dec
cmp
int
test
xor
or
int3
int
jg
scas
test
inc
mov
mov
in
out
nop
xchg
je
nop
jmp
sub
push
test
es
xor
imul
inc
outsl
in
sub
push
cwtl
repz
int
ja
sub
in
jge
andl
out
jle
pusha
cmpsl
xor
imul
mov
xchg
lret
loope
mov
adc
call
ja
xor
insb
mov
leave
inc
pop
mov
imul
aam
lretw
cmp
mov
cli
push
aad
adc
sbb
loope
or
in
sub
and
inc
inc
jo
ret
jmp
movsb
lock
pop
jb
jbe
insb
aaa
xor
mov
jecxz
loopne
ficomps
into
push
into
cmp
mov
imulb
loopne
jnp
int3
cmc
adc
and
add
push
mov
scas
jge
sbb
daa
mov
xchg
add
sbb
adc
push
xchg
pop
filds
shlb
sbb
cmpl
dec
jl
or
cmpsl
outsl
and
pavgw
jno
jecxz
xchg
bound
push
movsl
mov
inc
mov
cmc
mov
xorl
mov
cmp
stos
lret
sbb
cwtl
insb
lock
les
mov
add
add
mov
push
and
scas
sarb
aas
xor
idivl
cltd
lods
mov
in
dec
push
push
cld
inc
push
enter
pushf
or
cmp
mov
fwait
push
shrl
sub
aaa
ljmp
cli
outsl
je
adc
rorb
sub
jp
mov
push
js
mov
and
shlb
shrl
leave
daa
lret
daa
hlt
lea
insl
cmpsb
dec
out
jecxz
fwait
ret
outsl
xchg
iret
sar
stos
pusha
imul
bound
xchg
jecxz
call
or
add
aas
aaa
int
mov
pop
aas
mov
pop
xor
fisttps
pop
dec
add
xchg
repz
lods
lods
adcb
lods
loopne
mov
and
das
bound
xchg
nop
pop
xor
adc
or
mov
rcrl
fistps
mov
xor
orb
xor
in
arpl
and
and
rcl
cltd
out
jae
push
mov
sarb
sbb
jb
pop
scas
es
mov
fidivrs
pop
cmc
sub
push
fs
xchg
push
mov
dec
cmpsb
pop
xchg
pushf
mov
or
stos
jae
inc
les
into
ficoms
std
ljmp
xlat
mov
outsl
push
insb
ficoms
dec
inc
popl
add
adc
or
lock
mov
xor
add
and
dec
xor
xchg
xchg
dec
xchg
xor
aaa
jne
ljmp
fistl
dec
filds
mov
jns
mov
int3
mov
lods
pop
jae
sub
into
int
jecxz
inc
jns
cmp
xchg
jno
sub
fadds
add
jg
lods
mov
mov
lret
jp
and
inc
nop
xor
push
into
push
addr16
inc
cmp
or
add
xchg
sub
mov
rcll
add
xchg
push
pop
xchg
sarb
cmpsb
inc
and
dec
imul
xlat
lea
mov
test
int3
gs
imul
mov
in
push
pop
insb
inc
and
lods
in
cltd
inc
addl
popf
ret
adc
cmp
push
push
mov
cmp
xchg
fisttpl
repnz
mov
sbb
xchg
inc
insl
xchg
add
mov
cmpb
leave
inc
rclb
insb
xor
bound
xor
inc
pop
ja
sarl
enter
ret
xchg
and
les
adc
jo
ds
addr16
xor
jmp
add
mov
popf
unpckhps
xchg
add
adc
test
in
adc
push
je
lods
daa
mov
movl
mov
add
shl
mov
xchg
stos
je
adc
push
fs
daa
test
mov
movsl
sub
aas
mov
hlt
test
les
fadds
mov
cmp
jge
inc
jno
or
scas
andps
jne
cmp
mov
cli
mov
sbb
push
cmp
std
xchg
ss
dec
sarl
cmpsl
xlat
lods
scas
xor
or
sub
enter
dec
fisttpll
push
jns
fsubl
xor
adc
dec
dec
rorb
cmp
stc
fstl
xchg
and
adc
sbb
xorb
cmpsb
dec
or
iret
pop
adc
sti
xchg
cli
fstp
mov
ret
daa
jecxz
dec
jnp
mov
js
imulb
sub
fildl
repz
inc
jl
int3
jb
clc
pop
xchg
or
leave
int3
ret
lahf
mov
sbb
xor
push
cli
pop
or
mov
cmc
test
add
sub
sub
std
and
fidivs
mov
outsb
std
cltd
repz
cmp
cld
les
loope
mov
xlat
and
insl
adc
add
int3
mov
xchg
aas
jge
push
jb
mov
push
mov
add
rcll
mov
adc
inc
movswl
jbe
push
sbb
cs
adc
ret
mov
mov
or
inc
int
adc
push
mov
test
jbe
pop
push
sbb
dec
push
adc
in
sahf
mov
sbb
cmpsb
ret
sti
les
shrl
incb
pop
ss
jp
pop
in
jg
push
jbe
outsl
das
aam
loopne
inc
mov
push
jnp
inc
cmp
into
insl
push
pop
out
shr
lret
notl
das
lret
mov
aad
in
ret
inc
insb
adc
ret
in
nop
push
jge
out
mov
cmp
pop
lods
call
add
shll
dec
pop
rcrl
dec
inc
mov
das
repz
inc
lock
jno
pop
jno
xor
mov
insb
leave
push
sbb
mov
xor
cltd
xor
inc
inc
xchg
aam
test
out
sti
add
inc
into
out
rorb
push
aas
add
enter
dec
inc
mov
mov
push
jbe
mov
xor
push
es
into
in
push
out
lret
imul
enter
inc
pushf
fdivrs
repnz
fcmovu
imul
popa
pop
enter
dec
aaa
in
sbb
or
in
jnp
movsb
outsl
or
stos
adc
sbb
inc
icebp
test
fsubrs
das
sbb
aas
cwtl
out
pusha
pop
sbb
mov
xorl
in
jb
insl
and
xor
push
ljmp
iret
mov
leave
dec
movsl
pop
ja
mov
mov
lods
test
mov
pop
loopne
arpl
jg
arpl
mov
inc
lret
std
fists
jle
pi2fd
mov
cmp
arpl
sbb
dec
sub
dec
mov
mov
ss
mov
aam
inc
js
mov
fcompl
and
mov
add
mov
int3
popa
push
addb
jl
lret
scas
push
rcll
stos
insl
mov
inc
out
pushf
or
insb
mov
das
sub
and
cmp
inc
lea
add
cmp
push
filds
ret
pop
daa
lods
lds
adc
sub
push
adc
shl
rorl
test
scas
stos
sbb
jb
jecxz
adc
fldenv
xor
repnz
insb
cwtl
fmuls
push
sub
cli
xchg
xchg
jns
sbb
xor
stc
aam
addr16
inc
test
ljmp
enter
fdivrl
out
loop
into
cwtl
sti
getsec
sbb
jecxz
in
jno
mov
or
and
inc
cmp
pop
dec
and
add
mov
jmp
mov
fistpl
iret
test
movsl
lock
in
and
std
in
sbb
fcmove
xlat
fsts
mov
mov
leave
cmp
mov
call
cs
inc
dec
insb
fadds
mov
js
insb
mov
notb
lret
out
mul
loopne
ds
or
mov
mov
push
rcll
andl
adc
mov
adc
dec
sti
add
xor
xor
shlb
push
cs
cmpsb
jg
inc
jecxz
sti
shll
scas
lcall
movzbl
imul
cld
lods
cmp
jbe
js
xor
push
imul
in
adc
pop
pop
outsl
xorb
test
fsub
nop
xor
fwait
mov
add
or
ret
movsl
dec
std
out
es
adc
shrb
in
jo
mov
inc
jmp
lahf
out
shll
adc
xchg
jmp
adc
lock
push
sbb
or
mov
jae
sbb
sbb
test
out
xor
popl
mov
pop
xor
xor
pop
mov
fwait
mov
xchg
add
fistpl
xchg
fmull
iret
ret
dec
cmp
push
pop
mov
mov
sbb
sbb
scas
aas
repz
mov
imul
or
mov
inc
inc
mov
push
or
adc
movsl
popf
mov
xchg
sub
les
and
adc
call
pop
mov
or
pushf
icebp
and
gs
das
jno
xorl
xor
lcall
ds
push
add
call
mov
xor
repnz
xor
mov
pop
sti
inc
outsb
pop
xchg
cmp
pop
push
hlt
sbb
jnp
ljmp
test
loope
js
shlb
lret
sub
push
mov
repz
popf
dec
pop
mov
repz
sar
sbb
adc
mov
fchs
insl
rcl
dec
add
and
cld
shl
pop
and
push
sub
incb
cmpb
lret
pop
xchg
outsl
sub
sahf
pop
adc
stc
fcompl
fmuls
mov
sub
add
call
outsl
sub
dec
sub
aaa
fdivrl
mov
lea
or
jo
hlt
mov
test
cmp
je
daa
inc
shll
fidivl
scas
push
loopne
pop
fsubp
xor
cmp
fimuls
stos
mov
arpl
cwtl
jns
pop
dec
daa
fldcw
ds
mov
jae
fucom
lret
jne
arpl
mov
sar
push
scas
ret
sti
sti
cwtl
imul
xor
pop
inc
orl
mov
ss
inc
cltd
xor
lret
rcrl
mov
fildl
jb
repz
in
in
cmp
jnp
icebp
clc
or
pop
xchg
sahf
imul
adc
add
jb
cmp
roll
add
cli
add
daa
adc
push
jmp
jb
push
jmp
fldcw
mov
mov
sbb
icebp
mov
xchg
andl
bound
cmpsl
out
add
jns
in
in
clc
xchg
test
sbb
jp
adc
fwait
mov
scas
subl
pop
shrl
and
xchg
mov
ja
inc
pop
bnd
in
bnd
lret
xor
stos
and
dec
pop
pusha
sarl
inc
add
ret
les
and
push
inc
scas
mov
sub
fisubs
inc
ret
jnp
mul
pop
mov
or
and
adc
push
cmp
je
fwait
or
lods
jle
into
push
jmp
inc
push
lds
cld
pop
notl
xor
movsb
fcom
insl
inc
ss
or
lret
aam
dec
inc
rorl
push
lea
jp
add
push
inc
jle
ljmp
in
dec
pop
dec
and
mov
pop
cmpsb
dec
rorb
ficoms
rol
cwtl
rclb
add
mov
mov
lea
cld
iret
jo
insb
insb
adc
jmp
neg
jae
inc
scas
cmp
xor
dec
ret
and
xlat
jne
notl
inc
pop
mov
movsl
aaa
xchg
daa
test
inc
in
aad
lds
adc
notl
inc
pop
mov
movsl
aaa
xchg
daa
test
inc
in
aad
lds
adc
notl
push
mov
movsb
aaa
xchg
test
inc
in
aad
lds
adc
in
aad
mov
popf
xchg
daa
repnz
sbb
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
call
jmp
push
call
mov
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
pushl
call
cmpl
jb
mov
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
xor
add
pop
hlt
add
xor
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
push
add
in
hlt
add
in
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
sbb
add
and
add
sub
add
inc
cmc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
cmc
add
add
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
push
testb
pop
testb
testb
insb
testb
je
add
jl
add
test
add
xchg
testb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
add
mov
testb
fdiv
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
sbb
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
sbb
add
add
lods
sbb
add
add
xchg
sbb
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
sbb
add
sbb
add
sbb
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
rcrb
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
sbb
add
add
add
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
sbbb
add
sbb
add
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
