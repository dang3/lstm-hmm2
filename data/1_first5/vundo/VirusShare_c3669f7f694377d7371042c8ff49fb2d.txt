pusha
call
mov
push
pop
add
popa
jmp
rcll
or
das
cmp
jmp
sbb
inc
out
aam
jb
inc
jns
pop
insb
xor
xchg
pop
add
and
pushf
movsl
jp
mov
inc
pop
xor
aad
shr
sub
int3
adc
repnz
div
fs
xchg
ror
into
out
cld
test
or
add
addl
jle
sub
mov
inc
and
jmp
loop
xor
cmp
dec
loope
hlt
sbb
sub
fidivrs
js
mov
and
inc
push
nop
mov
jmp
lret
test
jmp
cmpsw
push
std
repnz
sar
lahf
in
mov
lock
mov
sub
xor
imul
stos
or
push
and
fstps
xchg
stos
fwait
cmp
jbe
in
add
push
dec
dec
outsl
jl
pop
push
pop
jmp
mov
cmpb
jne
jnp
icebp
push
inc
sub
scas
dec
fsub
mov
inc
je
adc
loopne
pop
aas
or
jmp
jmp
push
clc
shll
aaa
movsb
or
jmp
push
das
cmp
sbb
inc
out
aam
jb
sub
pop
insb
xor
xchg
pop
add
and
outsb
setl
inc
pop
xor
shlb
int3
adc
jmp
jmp
out
cld
test
or
add
xor
xor
sub
mov
sbb
xlat
les
cs
pop
gs
dec
loope
hlt
sbb
pusha
sbb
jmp
mov
js
mov
hlt
mov
cs
inc
push
nop
mov
lret
test
cmpsw
push
std
repnz
sar
lahf
in
mov
mov
push
xchg
test
xor
imul
stos
mov
jmp
mov
push
jmp
and
fstps
fwait
cmp
jbe
in
add
push
dec
dec
outsl
jl
pop
mov
es
mov
cmpb
jne
jnp
icebp
push
inc
sub
scas
dec
xor
ror
jmp
je
adc
loopne
pop
jmp
aas
or
push
clc
shll
aaa
movsb
or
push
das
cmp
sbb
inc
out
aam
jb
inc
jns
pop
insb
xor
pop
mov
pop
jmp
add
and
outsb
setl
das
movsl
jp
mov
inc
pop
xor
shlb
int3
adc
div
fs
xchg
shr
loopne
into
out
cld
test
or
add
addl
add
dec
jne
ret
jmp
push
xlat
les
xor
gs
dec
loope
hlt
sbb
fidivrs
js
mov
and
inc
push
nop
mov
xlat
lcall
cmpsl
push
std
repnz
sar
hlt
ds
in
mov
mov
sub
lock
stos
or
push
and
jmp
fstps
fwait
cmp
jbe
in
add
push
dec
push
mov
sub
push
push
xor
mov
mov
mov
add
sub
shr
add
and
xor
and
shl
or
add
ror
add
sub
sub
dec
jne
mov
mov
pop
pop
xor
leave
ret
push
mov
sub
push
sub
jmp
adcb
xchg
jmp
test
or
in
add
add
xor
mov
mov
mov
and
xor
xor
add
sub
xor
sub
rol
shl
xor
and
or
rol
ror
sub
dec
jne
mov
mov
push
jmp
lods
loop
jmp
jae
adc
jmp
xor
cmp
add
add
add
dec
pop
jmp
loope
hlt
sbb
jmp
arpl
fiadds
aam
ret
push
mov
sub
push
jmp
aad
fildl
cmp
push
jmp
js
mov
and
inc
push
add
xor
mov
mov
mov
xor
or
and
shr
add
xor
or
and
xor
inc
sub
sub
add
or
dec
jne
mov
mov
xchg
jmp
stc
ds
in
mov
mov
and
add
mov
add
pop
sub
leave
ret
push
mov
sub
push
jmp
sbb
cli
stos
or
and
in
add
add
jmp
mov
add
jmp
fstl
and
pop
sub
xor
mov
mov
mov
add
xor
or
push
jmp
adc
cmp
pop
and
push
add
add
dec
add
push
add
jmp
dec
dec
outsl
pop
add
sub
or
ror
add
and
shr
add
and
or
rol
and
sub
and
dec
jne
mov
mov
pop
xchg
jmp
jnp
icebp
push
inc
sub
sbb
jmp
sub
in
cld
add
leave
ret
call
out
jo
pop
mov
lret
pop
mov
inc
jb
cmp
mov
in
and
sbb
adc
cwtl
icebp
andl
push
fsubl
dec
mov
inc
addb
mov
adc
sub
cld
mov
mov
dec
xor
mov
inc
xchg
pusha
sbb
stos
inc
stos
out
add
sub
mov
lods
test
test
hlt
movsb
mov
xor
inc
les
xor
shll
nop
push
xchg
imul
or
out
sti
sbb
mov
sbb
movsl
fnstenv
or
inc
xchg
out
scas
test
lcall
and
pop
std
incl
mov
rdtsc
mov
test
pushf
mov
mov
pop
faddl
andb
xor
pushf
xchg
rorl
sbb
andb
rcrl
or
push
roll
fiadds
jl
adc
popa
pop
sub
andb
out
ret
out
mov
push
pusha
lret
fisubrl
xrelease
xbegin
dec
popa
add
or
xchg
pusha
cmpsl
add
sub
pop
icebp
test
xor
xor
push
nop
dec
mov
jne
sti
add
xchg
stos
jg
adc
xchg
cmp
outsl
mov
or
jg
sub
xorps
mov
sbb
push
outsb
fwait
lock
arpl
outsb
jg
xor
push
xor
adc
sbb
outsl
push
iret
add
inc
jg
mov
or
mov
aaa
imul
popa
lods
or
shlb
pop
xchg
adc
fcos
inc
or
aad
pop
imul
pop
lcall
add
pop
mov
xor
add
adc
clc
sbb
dec
sub
adcl
sbb
push
cmp
or
and
test
aad
lret
inc
or
enter
shrl
out
sbb
cltd
outsb
dec
jbe
hlt
pop
outsb
sahf
adc
or
cwtl
or
jns
pusha
sbb
inc
testb
sti
jb
cmc
mov
inc
lea
add
divb
js
sub
jmp
inc
and
xor
jae
xchg
mov
dec
mov
adc
sub
pop
push
stos
shll
sbb
rclb
sti
push
cmp
inc
repnz
in
int
loopne
mov
in
and
sbb
lahf
stos
mov
xchg
mov
in
ja
in
dec
popa
push
and
ret
or
pop
cmp
sbb
xor
dec
mov
inc
push
xchg
subb
les
popf
mov
adc
and
xor
les
sbb
ss
push
test
adc
xchg
dec
sub
cli
pop
popf
lea
inc
movsl
test
inc
and
cmp
add
push
pop
cmpsb
cltd
fwait
imull
adc
or
jge
imul
mov
cmp
je
out
add
xlat
lret
xchg
leave
ret
enter
xor
xor
flds
fisubrl
jns
adc
ret
enter
popa
push
jmp
adc
aam
mov
scas
mov
xchg
sbbb
sub
cmc
loope
push
in
outsb
scas
in
in
das
test
dec
int
or
mov
mov
pusha
sbb
cmp
cmpb
xor
add
in
les
pushf
push
and
pusha
sbb
fmulp
cmp
xor
inc
cmp
dec
lds
or
pop
or
icebp
cltd
icebp
push
mov
add
arpl
mov
or
and
sbb
push
push
arpl
and
insl
sub
inc
bound
out
loope
orl
flds
mov
jp
lret
xor
fwait
xor
adc
scas
test
inc
xchg
mov
hlt
add
fstpt
ret
cs
mov
loopne
xchg
stc
push
pop
fisubs
repz
ret
rorb
es
into
je
stos
push
jne
and
lea
adc
mov
fildll
mov
xor
xchg
popa
xchg
out
mov
in
mov
mov
or
add
and
lret
ret
pushf
jl
leave
enter
icebp
or
call
imul
adc
les
pop
jo
add
jb
push
sbb
aas
mov
lret
add
aam
dec
xchg
jl
ss
out
push
jo
stos
mov
jns
cmc
repz
mov
mov
jne
dec
mov
xchg
fs
sbb
add
rcll
outsb
les
mov
sbb
mov
jp
repnz
shlb
xchg
test
ljmp
adc
mov
je
in
jle
shll
aad
jae
xor
popa
push
add
dec
xor
mov
inc
fists
sbb
es
jp
mov
ret
pushf
cmp
pusha
cmovg
xchg
mov
push
in
sbb
sarl
test
mov
ret
xor
lcall
adc
add
dec
pop
jnp
lcall
inc
cmp
mov
pop
and
gs
or
imul
inc
cmp
mov
mov
pop
ds
movsl
test
andb
jbe
stos
xor
fisttps
addr16
xor
cmp
rcll
and
add
lahf
sbb
repz
push
inc
adc
aam
sub
dec
and
add
mov
xchg
pusha
repz
cmpsl
push
dec
daa
insl
xor
icebp
hlt
and
out
inc
mov
xor
dec
and
cwtl
add
sbb
jp
cltd
cmc
push
mov
fwait
dec
aas
mov
xchg
pop
int
test
ret
cmp
int
int3
ret
xchg
nop
or
lret
orl
jmp
xor
lds
cli
cmc
jbe
imul
lea
xor
mov
test
sbb
out
int
jnp
loopne
xor
shl
jp
or
repz
pop
mov
cmp
lret
stc
sub
sbb
mov
test
dec
leave
dec
adc
fs
int
xchg
shll
lcall
stos
rolb
fwait
push
sbb
push
inc
test
dec
sub
or
mov
mov
adc
pop
lret
add
dec
dec
test
movsb
dec
xchg
subb
lret
mov
repz
out
jne
mov
lret
ret
xor
or
arpl
xchg
inc
loop
aas
aaa
loop
push
rorb
mov
or
addr16
xor
test
xor
inc
ficoms
movl
test
lret
adc
in
dec
xor
pop
lcall
jmp
add
rorb
repz
dec
mov
scas
xor
int
mov
cmp
je
repz
jae
xor
add
icebp
xchg
jecxz
lea
xchg
testl
add
in
es
dec
dec
xor
add
mov
mov
dec
push
out
sbb
lods
sbb
jmp
adc
out
in
bound
sbb
lret
cmp
mov
mov
out
cmp
ret
sbb
clc
imul
stos
cmpsb
jns
add
fmuls
andb
or
and
xor
outsb
pop
inc
push
mov
xchg
ja
out
shll
push
rcr
test
dec
mov
mov
mov
lret
cmpsb
mov
pop
outsl
mov
sub
rorb
popa
cmp
cmp
mov
dec
movsl
sub
sti
dec
shlb
mov
jb
iret
test
cli
sub
repnz
pop
dec
push
fdivs
testb
xor
cmp
xor
sub
mov
add
in
inc
imul
sub
xchg
pusha
mov
int
xchg
shl
rolb
lea
orl
movsl
sub
and
das
lods
gs
int
cmp
loope
jb
cmp
shl
jmp
sbb
das
ja
cmp
adc
mov
rorl
add
mov
in
cmp
cmc
rorb
fisttpll
pop
mov
push
pop
or
ret
adc
sbb
and
mov
mov
mov
jmp
nop
hlt
or
iret
xchg
ljmp
or
call
and
rol
sub
dec
push
or
dec
mov
xchg
sbb
arpl
sbb
or
xor
repnz
cwtl
je
push
xor
inc
sbb
push
lods
shrb
das
or
mov
movsb
add
out
divb
mov
or
loop
in
sub
das
ja
loop
shl
jns
inc
ljmp
mov
dec
xchg
fsubr
inc
adc
sti
dec
test
xchg
rorl
xor
xchg
or
andl
jg
test
xor
incb
jecxz
cmpsl
hlt
xor
mov
mov
subb
pop
mov
and
jp
mov
sbb
aaa
addr16
hlt
ret
fmull
inc
fs
and
sbb
cwtl
pusha
rorb
mov
addl
xor
xor
lea
imul
or
ret
inc
cmp
inc
cmp
sbb
jg
sub
enter
mov
repz
sti
cmp
popa
sbb
lcall
dec
xor
data16
add
mov
push
fildll
jns
cmp
das
xchg
mov
mov
xchg
mov
in
out
or
das
ja
lret
flds
inc
roll
pop
push
nop
fildl
xor
and
fnstenv
fsubr
inc
adc
sti
dec
xchg
aam
ret
dec
cltd
mov
push
outsl
stos
adc
or
rol
mov
loope
lret
repz
sub
add
rorb
arpl
or
mov
repz
in
mov
mov
xchg
sub
mov
sub
shll
adcl
stos
daa
adc
sbb
inc
test
add
xor
adc
adc
cmp
scas
cmpb
loop
sbb
icebp
addl
or
and
cli
clc
add
fsubr
dec
xchg
sub
ret
rorb
mov
jge
aam
push
inc
dec
xchg
mov
ss
outsb
mov
push
or
mov
xor
shll
xchg
inc
test
push
mov
out
push
jl
sub
dec
jo
cwtl
add
sbb
mov
jge
jl
or
sub
cmp
js
sbb
repnz
mov
enter
mov
outsl
mov
pusha
ljmp
mov
enter
mov
xchg
lods
xchg
fidivrs
mov
cltd
shrl
gs
js
data16
cmpsb
mulb
inc
push
sub
popa
dec
nop
out
cmp
arpl
negl
adc
lea
jbe
dec
push
jb
paddsb
jo
out
mov
adc
push
loopne
in
imul
cmp
stc
add
add
cli
scas
rorl
inc
and
xor
dec
leave
sub
in
mov
lcall
cli
imul
lret
xor
or
fwait
mov
aaa
cmp
add
cs
add
xor
xchg
shll
or
jmp
fdivr
dec
leave
rcrb
stc
push
xchg
pop
fildl
and
xchg
mov
dec
or
and
dec
push
iret
adc
pusha
rclb
pop
outsl
sbb
pop
orb
sbb
aam
lret
pop
mov
sbb
int
add
mov
bound
gs
shll
pusha
push
test
cmpsl
dec
adc
scas
adc
stc
cmpsl
pushf
mov
push
or
lea
inc
dec
popf
sbb
int
jmp
xchg
mov
or
mov
xadd
lcall
repz
sti
arpl
dec
or
and
ss
mov
mov
cltd
add
ljmp
and
or
lock
cmpsl
push
frstor
shll
inc
test
ljmp
adc
sbb
mov
insb
inc
pusha
inc
or
jns
repz
out
clc
cmp
cmp
lea
cmpsb
test
mov
fbld
ja
dec
and
jns
dec
inc
fnstenv
dec
loope
jne
mov
sbb
jle
les
dec
clc
push
movsb
lahf
and
cli
repz
idiv
jp
in
les
inc
dec
sbb
rcll
outsb
mov
ret
mov
lcall
adc
and
mov
fwait
fisttpll
rorl
aaa
mov
fcoms
lea
jb
stos
add
xor
cmp
out
lret
test
or
insb
dec
ja
ljmp
fmull
loope
jbe
lret
mov
xchg
xchg
push
xorl
adc
mov
fs
and
inc
inc
pusha
push
dec
add
sub
jo
push
mov
mov
pushf
sahf
movsb
push
es
mov
pusha
cmp
fadds
test
lea
lahf
push
add
jp
jl
xchg
mov
pop
std
imul
test
insb
inc
andb
lock
adc
xchg
mov
addr16
sub
jg
jb
sbb
inc
jne
imul
movsl
push
push
out
inc
ret
push
pop
or
jb
dec
mov
rcll
mov
inc
shrl
cwtl
jecxz
loopne
pop
dec
test
push
arpl
pop
movsb
subb
fdivrs
dec
popa
addl
adc
or
ljmp
rcr
and
mov
pusha
addl
subb
data16
sub
mov
xchg
mov
or
dec
xor
push
ret
gs
nop
mov
jb
aaa
and
xor
nopl
in
mov
pushw
int
scas
pop
sbbb
pop
in
lret
sbb
fs
sti
lds
outsb
fs
popf
gs
lods
mov
adc
scas
fcmovnu
sarb
mov
adc
decl
outsb
lret
sahf
inc
fnstcw
ficomps
cmp
std
scas
dec
outsb
push
or
flds
add
pcmpgtb
lret
js
imul
xor
dec
pop
nop
das
lods
push
xor
cltd
aas
shll
sub
mov
sub
int
xchg
roll
push
and
xor
hlt
inc
popa
push
adc
repz
test
mov
outsl
inc
shll
mov
jge
mov
inc
dec
ljmp
out
les
inc
loop
cmc
out
pop
jg
and
arpl
shrl
dec
xor
xchg
push
cmp
xor
adc
daa
fildll
xor
pop
iret
mov
dec
dec
movzbl
fnop
cwtl
add
mov
jb
dec
or
and
outsb
cltd
or
or
dec
popa
push
test
fwait
jnp
mov
das
jo
int3
jae
fdivrl
popf
mov
dec
xor
jl
ret
mov
mov
test
dec
movsl
xor
xchg
int
fstpt
cmp
sub
sbb
mov
mov
inc
mov
iret
mov
inc
fmuls
fadd
ficoms
ret
inc
in
imul
xchg
jns
mov
adc
sub
and
fucomi
and
dec
lret
sub
shlb
movsb
out
aam
fistpll
lahf
or
loope
aad
add
or
dec
jb
push
pop
es
sbb
fwait
test
lods
popl
sbbl
mov
roll
inc
mov
shll
or
mov
push
js
pop
pop
sub
imul
add
or
stc
insb
gs
mov
adc
inc
lods
add
addl
cmp
gs
cmp
rorl
push
mov
mov
int3
es
xor
rcll
xor
roll
or
and
inc
loop
sbb
stos
out
fisttps
scas
sub
adc
mov
addl
ficoms
stos
adc
inc
jns
mov
cmpsl
adc
or
push
ret
jmp
fmull
xor
sub
sub
or
hlt
loopne
adc
inc
xchg
sbb
add
inc
pop
in
ss
or
in
pop
lds
push
mov
faddl
cwtl
in
test
movsl
mov
cli
add
mov
fsubrs
in
and
sbb
into
int3
movsl
cmpb
repnz
fsubl
mov
in
insb
into
xor
sub
dec
shl
sbb
ss
repnz
ljmp
addb
repz
addl
xor
int
jnp
jle
jg
mov
adc
mov
ficompl
icebp
cmp
mov
int
sbb
cmp
fwait
mov
cli
movl
or
lea
outsb
sub
xor
mov
popa
pop
ret
shlb
fdivp
inc
sarb
xchg
and
lods
or
js
sbb
add
push
bound
es
es
adc
fldenv
push
les
cmp
lods
sub
mov
add
sub
lock
xlat
loop
add
cs
fsub
test
xchg
cltd
imul
loope
sbb
push
xor
add
stc
cmp
shrl
stc
insb
insl
aas
scas
mov
popa
mov
or
or
and
shlb
mov
int
mov
fwait
add
adc
or
dec
push
int
clc
or
in
int3
sahf
es
push
mov
and
fldenv
dec
lock
mov
dec
dec
popl
scas
movsl
or
mov
mov
and
gs
xor
adcl
sbb
jmp
adc
mov
add
pop
stos
mov
lods
jne
jmp
fs
or
jecxz
emms
mov
sbb
add
out
pop
hlt
xor
loopne
xor
shl
or
lea
cmp
loopne
jle
mov
ja
lock
ljmp
dec
sub
repz
xchg
inc
lret
iret
inc
sub
rcll
sbb
jno
testb
mov
dec
popa
push
xchg
les
sti
bound
stos
jae
int3
cmp
mov
lea
xor
jne
and
or
sahf
in
sbb
mov
loopne
xlat
mov
dec
and
mov
or
mov
ret
rorb
sbb
sub
daa
dec
or
imul
push
movsl
test
loopne
xlat
sub
call
lret
dec
lods
clc
push
idivb
xor
fs
popa
push
xchg
enter
sbb
out
push
pop
mov
psubd
addr16
sub
shl
stos
cltd
pusha
sbb
popf
popf
out
test
sbb
jo
and
xchg
sub
mov
leave
loop
xchg
pop
push
bound
cmp
dec
dec
xor
cmp
sti
pop
sbb
jb
xor
mov
ss
and
or
push
ja
icebp
nop
push
xor
xchg
xchg
dec
mov
or
mov
out
and
xor
or
js
sbb
add
sub
xor
add
push
cmp
dec
xor
out
jle
mov
xchg
sti
insl
inc
call
adc
push
lea
dec
pop
sti
sbb
xchg
pusha
push
addr16
inc
loopne
xchg
shll
mov
fwait
inc
in
inc
addb
or
xchg
mov
es
xor
fdivrl
jge
gs
sbb
xchg
jecxz
sbb
inc
cli
mov
xchg
xor
stos
lods
jns
lods
sbb
fdiv
push
andb
or
and
cltd
xchg
cli
scas
push
sub
aam
jbe
xchg
fsts
mov
pop
pop
push
jp
andb
adc
inc
iret
push
jge
mov
jecxz
pop
popa
push
sahf
divb
gs
jp
add
inc
lock
adc
ror
push
xchg
rolb
das
fimuls
sub
ljmp
pusha
sbb
out
mov
mov
test
fdivl
jb
pop
dec
dec
xor
aad
popa
lods
adcb
je
mov
imul
andl
or
hlt
outsl
in
andb
xchg
push
xchg
pusha
sbb
lds
popa
sahf
mov
adc
cmc
mov
fs
cmpsl
inc
mov
subb
addr16
lret
mov
sub
mov
out
push
out
movl
movsl
data16
scas
dec
outsb
fwait
leave
pop
scas
add
mov
pop
pop
testb
xor
push
mov
aam
add
punpckhdq
mov
xchg
and
imul
xchg
pusha
rorb
sbb
mov
xchg
lcall
call
add
fwait
sbb
movsl
faddl
push
mov
push
popa
and
xchg
popa
and
or
pusha
jp
mov
push
bound
es
es
xor
cmp
fwait
in
cmpl
jmp
cmp
sub
dec
pop
and
out
mov
popa
clc
shrb
xchg
scas
mov
loopne
or
lods
aas
shrb
inc
imul
or
sti
cmp
pop
test
lds
leave
daa
repz
loop
mov
and
or
cmpsb
les
or
xchg
and
mov
jmp
fdivrp
inc
andb
inc
imul
sbb
sti
xor
pop
dec
pushf
fidivs
dec
mov
mov
xor
dec
lds
loop
outsb
xor
imul
jns
xor
pop
shlb
mov
imul
xchg
cwtl
sbb
sub
jnp
inc
lds
xor
cmpsb
mov
js
push
push
subb
in
lret
jge
or
sub
mov
and
stc
or
icebp
out
in
cmc
push
shll
in
inc
hlt
adc
aaa
fs
push
dec
les
sbb
pushf
push
push
in
adc
cmp
jge
or
dec
xchg
ss
inc
dec
xchg
inc
lret
mov
add
cmp
and
dec
mov
stos
mov
sub
shll
adc
scas
jmp
and
les
shll
xor
lcall
push
inc
ds
cwtl
subb
mov
popa
test
xor
in
xchg
popa
push
adc
inc
hlt
loope
mov
lcall
sahf
inc
mov
lds
jg
sbb
out
fldcw
shll
xchg
xor
pushf
sti
mov
pop
mov
test
fists
jo
xchg
inc
aad
and
dec
loopne
lea
sub
mov
or
scas
cmp
xchg
ret
rorb
pop
scas
jmp
arpl
xor
in
and
sbb
iret
sub
fdivrs
lcall
pop
outsl
fs
popa
push
test
or
pop
mov
test
shll
shr
dec
xchg
cmp
xor
call
jg
mov
lea
xchg
xchg
repnz
jne
sti
or
movl
orl
popa
cmp
std
xchg
inc
sub
pop
pop
push
shl
repz
scas
imul
insb
and
add
leave
roll
icebp
mov
shll
in
lret
mov
leave
xchg
dec
add
ss
out
sbb
rorb
xchg
inc
push
push
mov
xchg
addb
pop
cld
mov
adc
test
data16
adc
insl
aam
xor
push
lds
cmp
inc
and
push
bound
inc
and
pop
and
dec
cmp
or
imul
lahf
xor
sbb
rorb
mov
jno
lcall
fs
popa
push
or
xchg
pusha
cltd
dec
notl
cwtl
mov
push
sub
pop
mov
push
stc
cmp
lea
imul
mov
adc
rorb
and
cs
gs
or
imul
rcrb
cwtl
inc
adc
pop
fsts
subb
or
push
js
or
daa
and
ds
stos
and
xchg
scas
ds
xchg
add
mov
push
mov
rcrb
sbb
mov
push
in
popa
and
or
jb
insb
scas
aad
xor
xor
les
jae
mov
jno
mov
sbb
lods
cmp
xor
loop
adc
fldenv
push
les
enter
cmc
pop
jnp
pop
enter
cmp
xor
shlb
jg
inc
pop
stos
and
lods
or
sub
inc
shll
mov
push
nop
int
lea
cmp
dec
inc
dec
mov
sbb
inc
pop
rorl
fdivs
clc
add
mov
or
pop
arpl
repz
ret
rorb
jecxz
push
xchg
push
jns
lret
inc
pop
fistl
mov
subb
sbb
mov
lea
dec
mov
push
in
sub
push
sub
add
and
xchg
fsubl
test
pop
pop
fisttps
xor
fildll
sbb
sub
xchg
dec
insl
inc
into
jmp
jae
sbb
in
fsubl
dec
lahf
dec
adc
rorb
pop
scas
jmp
imul
popa
lcall
sbb
cmp
push
cmp
or
or
ja
mov
xchg
ss
pop
cmp
aaa
mov
jnp
fs
daa
dec
lods
shrb
in
xchg
pusha
sbb
cltd
inc
jge
sub
and
xchg
ror
inc
mov
fxch
xchg
pop
fucomi
ror
xchg
stc
fisubrl
sbb
xchg
adc
fadd
push
sbb
cmpsl
and
out
testb
aaa
pop
gs
push
inc
sub
or
popf
mov
xchg
unpcklps
jne
sti
nop
hlt
or
mov
or
xchg
es
sbb
push
movsl
out
mov
or
mov
sbb
ljmp
mov
mov
cmp
dec
dec
sbbb
dec
stos
add
or
andb
lea
xchg
adc
je
faddl
adc
cmp
sbb
xor
pop
lods
test
pop
lret
sbb
xchg
inc
cmpps
lret
lcall
inc
ljmp
insb
sbb
cltd
inc
mov
in
movsb
jns
xlat
push
adc
cli
dec
andb
jmp
pushf
inc
inc
cmp
stc
imulb
ror
popa
repnz
lds
in
mov
sti
push
inc
and
or
add
xchg
hlt
adc
psrad
cwtl
stc
lret
hlt
hlt
out
or
cltd
lret
pop
adc
xchg
mov
mov
sub
bound
dec
cmp
inc
ljmp
insl
sbb
sbb
cmpsb
ror
mov
test
and
imul
cmp
in
jb
insb
ljmp
sub
xor
les
add
dec
lds
push
insb
dec
fstpt
mov
dec
aaa
in
cwtl
mov
push
add
dec
xor
in
and
sbb
pop
dec
int3
lods
in
lret
inc
and
mov
or
or
or
loope
movntq
dec
or
sbb
xchg
pop
lock
loopnew
lea
lret
in
jg
ficomps
imul
jno
jmp
movsl
jns
jo
fisttpl
mov
in
enter
je
icebp
xchg
ret
test
and
xor
test
icebp
lock
aas
cmp
mov
cmp
jb
repz
lret
cltd
or
or
flds
and
or
gs
insb
lahf
adc
lahf
insl
cwtl
in
sub
out
xchg
sub
xor
xchg
aas
push
call
andb
or
adc
icebp
sbb
rorb
lods
push
add
ss
push
and
or
pop
pop
mov
and
pop
into
nop
mov
fldt
leave
fcmove
jno
pop
jmp
mov
icebp
loope
dec
hlt
out
push
icebp
adc
jg
mov
xor
loop
push
inc
int
into
mov
leave
push
mov
je
cmp
pop
fstp
mov
aam
sbb
out
cmpsl
fwait
mov
xchg
subb
sbb
cmp
lret
enter
pop
fildll
aad
std
sub
icebp
jno
icebp
xchg
sti
sar
bound
cmp
shll
inc
test
inc
and
inc
or
and
rorb
cmpl
fisttps
xchg
mov
inc
popa
push
stos
repnz
cmp
ret
shrb
arpl
mov
addr16
in
nop
out
and
cmp
jmp
mov
jl
adc
shlb
xor
cli
clc
or
inc
jno
insb
dec
xor
cmp
or
repz
enter
add
les
test
pop
and
imul
cs
fsubl
dec
hlt
testb
push
push
insb
lret
sbb
clc
mov
fnstenv
and
std
mov
popa
and
bound
bound
mov
mov
fsubr
es
dec
xor
push
ret
adc
in
cmp
xor
lcall
dec
push
rorl
cmp
cmp
fsincos
adc
xchg
pusha
add
sub
mov
mov
popf
mov
into
mov
sbb
mov
mov
adc
pop
or
rcl
dec
pop
mov
hlt
add
pop
dec
in
xorb
xor
mov
sbb
add
daa
pop
inc
test
lea
andl
lods
scas
inc
push
sub
int
ljmp
mov
add
dec
dec
sub
push
int3
cmpsl
xchg
inc
mov
and
xor
dec
jb
cltd
comiss
mov
adc
xchg
xchg
repz
iret
imul
mov
hlt
out
imul
div
jb
pusha
test
in
jns
stc
mov
xchg
test
int
iret
aaa
subl
mov
shlb
push
jo
sbb
or
lods
jno
lret
out
idivb
and
xchg
lret
iret
dec
sbb
ret
inc
pop
cmp
add
leave
sbb
push
mov
sbb
cmp
cmpsb
cmpsl
faddl
cmpsl
jne
adc
pop
xchg
popa
and
sbb
test
cltd
mov
je
in
xor
xor
mov
jae
int3
aas
jecxz
sub
pusha
and
int3
push
roll
and
xor
and
aas
orl
cmp
mov
data16
fnstenv
or
fs
popa
push
jp
inc
cmp
rcrb
clc
push
movsb
test
add
nop
add
push
sbb
mov
pop
jo
les
shll
xchg
add
in
and
or
pushf
or
lds
adc
rorb
xor
mov
sbb
pop
push
sbb
pop
or
insb
mov
inc
inc
mov
repnz
dec
sbb
nop
mov
sub
and
xor
and
cmpsb
inc
adc
inc
andb
adc
ret
rorb
insl
enter
inc
sub
mov
sbb
fldenv
mov
pop
jb
fcmovu
push
pop
push
or
jno
xor
lods
pop
imul
inc
repz
mov
roll
outsb
and
xor
dec
popa
push
adc
icebp
fwait
pop
push
sub
pop
filds
notl
sahf
mov
mov
pop
outsl
cmp
fmull
in
dec
push
sbb
mov
sbb
pop
aam
mov
in
idiv
or
xchg
xchg
pop
outsl
dec
sbb
testb
xlat
out
andl
mov
out
dec
pop
dec
cmp
in
shlb
fsub
repz
addl
repz
daa
add
sahf
cld
cmp
dec
or
pop
and
dec
das
mov
sbb
popf
aam
bound
adc
and
rorb
jmp
pop
cld
push
push
or
lcall
faddl
jp
frstor
shll
xchg
mov
cli
data16
push
pop
adc
sbb
scas
arpl
cld
pop
sarb
xor
xchg
xor
pop
test
addr16
popa
or
jo
fdivrl
sbb
sbb
imul
loop
and
jmp
sbb
or
mov
rcl
or
test
add
shll
pop
fstps
and
ficoml
sbb
sbb
iret
pop
sub
jnp
int3
fs
mov
rcrl
das
jg
mov
pop
and
sub
xor
xchg
cmp
pop
sti
or
or
shlb
pop
test
inc
lods
adc
jb
int3
imul
sbb
mov
sti
inc
aas
xchg
imul
or
enter
and
and
inc
adc
dec
dec
or
sub
mov
aad
sar
int
mov
add
dec
dec
fmuls
jbe
mov
adc
shld
adc
mov
pop
adc
pop
mov
mov
mov
aas
ss
cmp
fmull
repz
xchg
adc
js
andl
xor
add
adc
sbb
jp
shll
in
push
or
lds
andl
lea
mov
ja
and
fs
push
rep
push
inc
and
pop
dec
lret
mov
mov
psrad
shll
orb
lods
jne
xlat
dec
lcall
int
mov
test
adc
lods
ret
popa
pop
gs
icebp
adc
adc
dec
push
push
lea
test
xchg
mov
lds
inc
adc
arpl
cmpsb
sbb
sub
cmp
mov
inc
jb
aaa
and
xor
mov
leave
cmpsb
push
lcall
sahf
jno
cmp
nopl
sbb
jg
inc
adc
out
add
or
dec
push
jecxz
sbb
push
out
add
sbbb
sbb
cli
cvtpi2ps
pop
fiaddl
jge
stc
push
ret
sub
fcompl
add
sarb
negl
out
ss
xor
cltd
push
push
mov
push
andb
inc
and
test
outsl
jg
in
cmp
orb
inc
or
and
ljmp
push
jl
jge
add
cmp
inc
pusha
shrl
push
xchg
loopne
jb
in
lds
sbb
cmc
insb
mov
insl
inc
add
and
fimuls
or
jp
and
and
inc
lds
aam
dec
xchg
adc
aaa
clc
nop
pusha
clc
jo
mov
rorl
dec
xchg
adc
js
rorb
mov
es
cli
shld
fldenv
test
inc
and
and
ljmp
hlt
dec
adcl
and
out
cmc
mov
fdivrl
inc
pop
xchg
dec
out
sbb
pop
fldt
add
pushf
in
push
push
mov
sbb
add
imul
xchg
scas
movsb
push
push
shl
cwtl
adc
add
adc
sti
or
mov
stos
push
ret
cmpsb
sahf
inc
addl
hlt
xchg
fcompl
adc
sbb
push
sbb
and
mov
test
sti
or
xchg
pusha
fistpll
mov
push
insl
mov
inc
lahf
jg
test
addr16
push
cli
dec
repz
or
pusha
dec
lods
mov
pop
lret
out
fucomip
in
rcll
xchg
sbb
leave
test
jmp
inc
xchg
jge
xchg
push
es
push
xor
shll
sti
lds
sub
xchg
mov
shrb
roll
nop
mov
sub
loop
and
and
test
add
das
xor
mov
fnstenv
and
cmp
dec
lods
test
adc
adc
pop
aam
repz
pop
push
stc
mov
test
or
xchg
pop
pop
testb
xor
push
mov
rorl
and
out
addr16
or
xor
cli
xlat
lods
mov
and
shll
das
or
and
ds
inc
xchg
ss
js
sbb
sbb
aaa
adc
inc
rolb
dec
adc
jmp
setle
jmp
adc
shll
outsl
lret
push
fstps
sbb
in
andb
push
mov
popf
jnp
shll
scas
sbb
xchg
pop
dec
icebp
push
xchg
jg
add
cltd
addl
sub
es
cmp
int
xchg
rcl
rcl
jo
xor
dec
scas
sbbl
sbb
out
ja
arpl
cli
jno
adc
push
gs
lret
xchg
mov
in
xchg
pusha
sbb
jmp
ja
je
xchg
mov
dec
loopne
dec
push
xchg
ret
xlat
mov
and
mov
pop
mov
push
filds
xor
push
sbb
inc
fprem1
mov
gs
in
pop
jge
sub
or
in
popa
push
adc
sahf
cld
adc
fstpt
sti
lods
sbb
xor
outsb
out
pop
test
push
inc
enter
xchg
out
and
outsb
sub
adc
cmove
inc
sti
mov
inc
xchg
fidivrl
iret
out
add
pop
leave
repz
inc
stc
test
sbb
xchg
das
ja
int3
ret
and
int3
cmp
scas
xor
addb
stos
std
add
push
int
xchg
xor
xor
lret
hlt
insb
incl
inc
xchg
pusha
sbb
fcomip
arpl
xchg
loopne
mov
lds
inc
xor
outsb
loopne
push
or
and
hlt
push
jp
pop
push
stos
cmp
mov
adc
add
sub
pushf
lcall
jb
pusha
rorb
xchg
cmp
lcall
sbb
sub
cmp
out
sti
dec
outsl
mov
insb
stos
rorb
je
lods
xor
mov
int3
pushf
xchg
inc
or
out
xor
dec
dec
xchg
in
fcompl
add
int
cltd
jecxz
add
jbe
adc
add
enter
ror
andb
imul
pmulhuw
fucomi
out
mov
cmp
test
xor
sbb
leave
mov
or
xor
cld
lret
out
mov
jns
jns
push
sbb
pop
sbb
mov
ds
ret
sbb
loopne
xor
roll
jp
roll
xchg
in
xchg
fucomi
dec
push
lret
lcall
sbb
sub
icebp
jnp
test
jle
sbb
and
mov
jmp
push
push
inc
in
fcomi
repnz
jb
aam
mov
cld
in
lahf
sbb
dec
insl
inc
mov
mov
sub
xor
enter
nop
adc
stc
std
in
cmp
mov
xchg
loope
push
cmp
jno
iret
repz
aaa
popf
xchg
in
repz
pushf
out
outsb
ret
sti
jns
sub
iret
push
sub
pop
imul
sub
arpl
outsb
lahf
pop
int
dec
add
inc
fadds
jne
leave
ret
popf
ret
push
add
imul
add
lods
jmp
xchg
in
mov
xchg
add
add
repz
pop
aam
mov
repz
pop
aam
mov
repz
pop
aam
mov
xlat
cmp
pop
jb
scas
int
dec
out
add
lods
and
lret
cmpsb
iret
add
outsl
xor
xchg
or
xchg
xchg
outsb
es
xchg
loope
cmp
nop
nop
push
aad
dec
rorb
or
aad
xchg
cmpl
ja
sub
test
cmp
xchg
adc
out
imul
xor
or
sbb
jl
sbb
ss
xchg
cmp
dec
jmp
jns
mov
push
add
and
jbe
cs
pop
aam
mov
repz
pop
aam
mov
repz
pop
aam
mov
or
daa
ficompl
ret
pop
pop
movsb
push
or
repz
sub
jbe
mov
pop
dec
popf
ret
inc
shl
sbb
add
inc
dec
sbb
mov
outsl
xchg
lock
mov
mov
mov
cld
cli
xchg
jnp
mov
das
js
dec
mov
xor
in
sahf
add
outsb
jecxz
repnz
add
outsb
jecxz
movsb
jbe
jmp
xor
xchg
pop
aam
mov
test
scas
sbb
pop
mov
enter
repz
pop
aam
mov
repz
pop
aam
mov
repz
pop
aam
mov
repz
pop
aam
mov
repz
pop
aam
mov
repz
pop
aam
mov
repz
pop
aam
mov
repz
pop
aam
mov
repz
pop
aam
mov
repz
pop
aam
mov
repz
pop
aam
mov
repz
pop
aam
mov
repz
pop
aam
mov
loopne
fistl
lret
pop
out
jp
or
mov
out
dec
mov
repz
pop
aam
mov
push
cmpsl
adc
sbb
roll
pushf
das
mov
xchg
pop
test
jecxz
mov
iret
bound
out
mov
pop
aam
mov
mov
ret
popa
adc
sbb
pop
push
add
dec
sub
and
aam
mov
jge
inc
arpl
xchg
pop
aam
mov
repz
pop
aam
mov
repz
pop
aam
mov
repz
pop
aam
mov
repz
pop
aam
mov
repz
pop
aam
mov
repz
pop
aam
mov
repz
pop
aam
mov
repz
pop
aam
mov
repz
pop
aam
mov
repz
pop
aam
mov
repz
pop
aam
mov
repz
pop
aam
mov
repz
pop
aam
mov
repz
pop
aam
mov
repz
pop
aam
mov
repz
pop
aam
mov
repz
pop
aam
mov
repz
pop
aam
mov
repz
pop
aam
mov
repz
pop
aam
mov
repz
pop
aam
mov
repz
pop
aam
mov
repz
pop
aam
mov
repz
pop
aam
mov
repz
pop
aam
mov
repz
pop
aam
mov
repz
pop
aam
mov
repz
pop
aam
mov
repz
pop
aam
mov
repz
pop
aam
mov
repz
pop
aam
mov
repz
pop
aam
mov
repz
pop
aam
mov
repz
pop
aam
mov
repz
pop
aam
mov
repz
pop
aam
mov
repz
pop
aam
mov
repz
pop
aam
mov
repz
pop
aam
mov
repz
pop
aam
mov
repz
pop
aam
mov
repz
pop
aam
mov
repz
pop
aam
mov
repz
pop
aam
mov
repz
pop
aam
mov
repz
pop
aam
mov
repz
pop
aam
mov
repz
pop
aam
mov
repz
pop
aam
mov
repz
pop
aam
mov
repz
pop
aam
mov
repz
pop
aam
mov
repz
pop
aam
mov
nop
fucomi
aas
cmp
and
fwait
ss
mov
mov
cld
dec
xor
sbb
or
movsb
lds
fwait
mov
movsl
add
add
adcb
sub
jae
adc
or
add
repnz
lahf
nop
push
sbb
mov
push
xor
inc
inc
mov
in
in
addr16
ret
cmp
daa
push
mov
jb
cmp
lret
test
addr16
xor
push
or
adc
test
mov
xchg
cs
gs
xchg
in
mov
jecxz
ja
dec
and
jg
inc
sahf
ds
stc
dec
in
sub
stos
add
lock
xchg
dec
int
ljmp
pop
mov
iret
inc
mov
outsl
mov
sub
mov
jbe
mov
out
sub
mov
jno
pop
out
lret
gs
adc
mov
sarb
jmp
inc
xchg
fildll
mov
popa
cmp
pop
or
int
xor
sub
insl
add
mov
gs
cltd
cld
jl
movsb
test
mov
jb
in
movsl
pop
pop
addr16
sbb
push
push
sbb
stc
imul
leave
ss
adc
cmp
insl
cld
pop
xchg
lock
imul
fcmovnbe
fmuls
jns
pop
and
push
fisttpll
pop
mov
es
xchg
fs
jle
jb
sbb
loope
inc
cld
lahf
jns
lret
je
das
sub
stos
push
mov
mov
inc
adc
mov
js
int3
mov
ret
mov
ljmp
jo
inc
ljmp
dec
jp
push
ret
mov
decb
xor
sbb
mov
idivb
int
fdivrs
cld
dec
stc
cmp
mov
sbb
pop
sbb
xor
fisubl
jg
ljmp
and
mov
add
std
enter
imul
pop
lods
stos
mov
xchg
xor
xchg
xchg
in
add
out
pop
adc
icebp
mov
cwtl
daa
sbb
insb
test
lock
aaa
stc
inc
or
enter
mov
clc
jnp
adc
pop
push
xlat
das
out
aam
sbb
push
push
jae
decl
mov
add
cmpsl
sahf
lea
in
xlat
fisubrs
mov
fdivrl
add
popf
cmc
inc
inc
setbe
lods
add
dec
and
and
pushf
cld
hlt
or
dec
aam
scas
cmpb
inc
push
mov
sub
dec
leave
pushf
sbb
cltd
aaa
xor
sbb
std
push
out
mov
sbb
out
aam
cmpsl
and
loopne
mov
loop
dec
push
mov
loop
dec
sub
mov
dec
sbb
fisttpl
mov
daa
jb
jnp
inc
popa
insl
sub
mov
inc
repz
add
andb
sub
pop
movsl
dec
out
movsl
aas
or
mov
imull
mov
mov
push
inc
or
xchg
push
push
ja
pop
inc
or
pusha
mov
mov
cltd
sub
lret
sahf
pop
or
or
adc
imul
int3
lods
xor
lods
mov
or
lret
mov
jle
test
iret
inc
inc
cmp
fcompl
shrb
aad
dec
adc
lret
xor
popa
push
pop
std
call
mov
stos
pusha
sbb
xchg
sub
stc
fnstcw
mov
ds
sub
inc
lret
push
mov
jle
mov
rolb
addl
xchg
adc
mov
xchg
test
popa
add
mov
pop
gs
arpl
and
lock
fsubs
mov
lahf
call
xchg
fsubrs
push
inc
mul
movsl
jbe
std
imul
jae
mov
lock
testb
aad
sbb
rorb
push
or
pop
out
popa
mov
add
js
sub
xor
fs
dec
addl
rclw
lahf
mov
push
sbb
adc
inc
incb
addr16
and
mov
mov
imul
and
pop
mov
js
in
cld
push
mov
scas
in
lret
iret
repnz
xchg
imull
xor
ss
sub
bound
cmp
add
aad
or
inc
cmp
mov
shll
xor
add
mov
mov
cltd
test
or
fsts
cmp
inc
pop
pop
cli
pop
out
adc
cli
or
mov
in
rcll
mov
imul
popf
out
add
aad
add
imul
pop
jo
pop
orb
mov
xor
sbb
inc
jne
mov
push
add
mov
arpl
sbb
inc
adc
das
and
sub
cltd
mov
jnp
test
push
stos
adc
xchg
inc
ret
addl
push
xor
lcall
xor
dec
mov
dec
fcoml
xor
roll
shlb
and
fmull
jno
rcll
or
insb
mov
sub
mov
pop
pop
lcall
pop
imul
pop
aad
stos
sbb
fdiv
data16
mov
push
outsl
push
daa
lock
mov
into
dec
sub
sahf
nop
repz
cmp
lock
and
mov
xor
ret
test
dec
xchg
mov
xchg
jo
aas
push
lcall
sbb
arpl
fcmovb
sub
dec
data16
mov
out
inc
cwtl
mov
jp
jle
push
aam
scas
ret
aam
inc
or
mov
outsl
or
iret
loope
into
ficompl
in
jg
dec
jno
negl
lds
pop
pop
pop
xchg
and
ficoms
jle
imull
xlat
test
mov
inc
pop
sbb
mov
dec
pop
std
icebp
push
xor
cld
mov
cmpsl
inc
imul
lret
or
xchg
push
add
jbe
fstps
dec
jns
scas
in
loope
push
out
cmp
lcall
jg
xchg
je
push
movsb
sbb
movzwl
mov
hlt
pop
push
stc
cmp
outsl
mov
mov
stos
mov
stos
test
dec
in
leave
ret
pop
xchg
int3
in
jge
cmp
inc
cld
mov
inc
pop
add
fbstp
andb
aaa
mov
aam
mov
lods
pop
pop
mov
subb
mov
ficoms
pop
jno
or
jle
xor
pop
pop
in
mov
mov
inc
adc
int3
jnp
push
jb
rclb
ss
dec
cmp
dec
pop
sub
inc
mov
pop
out
movsb
or
test
fidivrs
test
pop
sbb
rcrb
pop
nop
and
xor
insb
shll
andb
pop
cmp
add
out
mov
jmp
ds
and
test
push
add
push
aas
mov
sub
fwait
out
inc
test
fnstcw
adc
test
imul
mov
mov
aaa
jmp
hlt
add
or
jnp
aam
ret
mov
lcall
jmp
mov
sub
lock
stos
jmp
rorl
mov
inc
ss
push
and
add
push
mov
fimull
out
xchg
inc
subb
js
jg
push
mov
cli
sub
xchg
add
lods
cmp
and
cmp
sub
decl
push
mov
loop
inc
roll
push
repnz
jge
lods
dec
nop
js
in
fstpl
jecxz
mov
xor
sub
aaa
out
add
mov
xchg
stos
mov
rcrb
lds
int
dec
mov
and
ljmp
dec
and
repz
inc
jo
rcrl
pop
outsl
rorl
pop
icebp
jbe
pop
pop
add
loope
js
push
mov
xlat
push
mov
test
cmpsl
insl
sub
push
mov
adcb
out
movsb
into
int
dec
xchg
lock
sbbb
stos
xlat
aad
push
scas
out
mov
cmc
rorl
xor
lcall
je
or
pop
mov
cmp
cmpsb
pop
mov
mov
mov
shrb
es
add
sub
sub
sbb
sub
mov
mov
ret
nop
sbb
jae
rolb
enter
lock
sbb
stos
les
out
push
inc
test
xchg
pop
mov
cmp
jmp
test
or
pop
dec
or
cmp
bound
and
cld
scas
stos
lds
dec
mov
jecxz
pushf
fwait
ss
hlt
push
pop
dec
xchg
lea
mov
mov
or
in
rorb
iret
sub
popf
mov
pop
pushf
into
test
sub
or
roll
or
mov
cmp
les
push
push
bound
pushf
push
mov
fldenv
sbb
mov
xlat
jbe
out
leave
adcb
jecxz
inc
movsl
test
nop
fsubrs
cwtl
jno
mov
or
jl
lahf
int
mov
sbb
cmpsl
and
jbe
pop
insb
jnp
imulb
dec
and
shll
jmp
pop
adc
and
mov
push
push
and
dec
xchg
jae
ret
push
mov
fs
in
test
sbb
jg
aad
ret
inc
scas
icebp
sbb
sbb
insl
and
into
shll
rclb
jge
inc
mov
xchg
ss
rorl
out
and
mov
mov
xor
jg
ret
and
and
int
mov
loop
cmc
or
cmp
fsubp
aad
cmpsl
sarb
fadd
hlt
pop
inc
orb
sbb
mov
and
push
jecxz
push
int3
inc
jmp
dec
pop
js
push
repz
sub
hlt
push
rcr
fistpll
insl
jg
jns,pt
cmp
and
pop
xchg
ds
cmp
int
pusha
lock
fsubl
cmp
call
push
mov
xor
cs
rcrl
xchg
inc
pop
and
int3
xchg
or
adc
lods
aad
lods
pushf
repz
pop
dec
jmp
in
cmpsl
cmp
mov
mov
lea
push
xor
jbe
mov
aad
push
sub
inc
aam
lcall
out
ficoml
lret
xchg
repnz
or
and
xor
movsl
xor
add
mov
dec
mov
popa
je
shrl
mov
cmc
jo
sbb
lea
pop
mov
mov
jb
push
jb
sahf
lock
cmp
adc
test
pop
stos
xor
add
scas
aad
and
fwait
pusha
adc
inc
test
pop
mov
dec
mov
and
inc
outsb
fldcw
out
scas
inc
and
mov
es
in
pop
sbb
lods
out
pop
push
repnz
push
sub
inc
and
sbb
insb
mov
rcr
movsb
loop
dec
outsl
pop
sti
insb
std
and
xlat
mov
mov
sub
cmp
cli
out
xor
in
and
test
push
lods
pop
push
cmp
adc
jns
outsl
rcll
loope
xchg
daa
insb
or
emms
dec
popa
push
and
inc
sti
or
xchg
pop
fstpl
cmp
adc
push
int
and
and
and
xor
test
sbbl
dec
fsubrs
add
fucom
cld
cld
iret
pusha
int3
fwait
cmp
dec
sbb
stc
push
pop
cli
cmpsb
dec
repz
push
gs
or
jle
lea
mov
je
jle
lods
mov
push
loopne
test
mov
dec
mov
dec
mov
cmpl
dec
cmp
aad
dec
inc
inc
pop
outsl
mov
inc
nop
out
sub
dec
mov
cmp
je
mov
outsl
lret
seta
jl
pushl
cltd
jae
mov
jg
in
push
notb
cmp
or
jl
or
rcl
fcom
lcall
pop
fcmovnu
cmpsl
int
or
fwait
cmp
scas
xchg
pushf
test
popf
fnstcw
into
lods
push
or
cltd
arpl
aam
movsb
cmp
mulb
jg
fs
mov
xchg
mov
jp
dec
inc
lock
cs
sahf
push
fisubs
lahf
jecxz
jb
push
mov
out
pop
adc
xor
and
mov
ror
scas
ljmp
jns
adc
sbb
and
push
dec
aam
add
sbb
pusha
lahf
out
jne
dec
sub
pop
jle
ljmp
xchg
enter
inc
push
sbb
out
sbb
or
aaa
enter
fidivrl
cli
out
cltd
dec
ja
hlt
ret
fdivrp
and
add
and
daa
inc
fistpl
aam
xor
mov
mov
inc
stc
mov
nop
push
sbb
sub
and
aam
fldcw
mov
je
sub
hlt
lret
add
xchg
or
push
stc
xchg
dec
pop
xor
loope
dec
rcrl
dec
scas
cmp
movsl
pop
orl
call
in
jmp
jbe
sub
mov
inc
push
cmp
dec
mov
movb
loop
xor
test
pushf
in
test
mov
int3
jbe
jmp
hlt
cmpsb
test
aam
inc
xchg
in
in
pushl
dec
jne
shl
pop
dec
jmp
sbb
test
mov
fsubrl
mov
mov
mov
das
add
lret
push
mov
mov
push
dec
pusha
xchg
push
xor
xchg
jnp
mov
mov
sub
mov
jae
sbb
nop
xchg
repz
sbb
add
in
mov
sub
pop
and
lea
das
lret
mov
cmc
mov
in
in
arpl
sub
add
jp
jb
cli
xchg
jmp
in
ret
jl
or
mov
mov
dec
add
fs
repz
ficoms
repnz
pop
mov
jge
add
pop
fcoms
test
ret
mov
lds
jb
sarb
jmp
lods
xor
cltd
rclb
inc
roll
ret
fdivs
sbb
xor
mov
fisttpll
scas
decl
mov
cld
mov
outsl
in
or
adc
and
sub
ret
jmp
lea
or
ja
insl
pop
imul
hlt
scas
aad
adc
call
dec
into
addl
iret
xor
inc
and
sub
lea
out
sahf
pop
mov
push
xor
movsb
in
mov
mov
inc
lcall
popf
stos
mov
aas
add
jb
arpl
and
loopne
inc
fmulp
lds
fldl
insb
jmp
shrb
test
cltd
loopne
pusha
in
mov
jmp
add
xchg
sbb
inc
insb
aam
or
daa
lret
je
lock
pop
inc
cmpsb
gs
movsb
mov
cmpb
test
fs
loope
inc
movsb
pop
lods
mov
mov
lret
pop
fwait
out
repz
daa
outsb
pushf
mov
movsl
fwait
pop
outsb
jle
in
xlat
mov
outsb
in
mov
fidivrs
jnp
sbbb
int
push
jl
jno
mov
pop
stc
repz
and
jg
mov
sbb
arpl
stc
sahf
lret
mov
push
std
mov
adc
daa
out
jp
scas
xchg
xor
jmp
add
ficoml
ret
adc
mov
jecxz
xchg
stc
xchg
mov
push
aaa
push
sub
sbb
add
sbb
dec
daa
pop
outsb
add
pop
jecxz
mov
sub
push
fmull
stos
sahf
ja
cli
outsl
pop
or
nop
movsb
dec
add
dec
popa
nop
xchg
mov
lock
popl
pushl
mov
sub
in
arpl
xchg
jg
cmp
mov
lahf
out
xchg
adc
js
mov
aad
insl
mov
adc
cmp
sbb
sbb
jmp
stos
lods
sbb
push
popa
leave
rcrl
xor
dec
ret
sub
cmpsb
aad
test
push
push
add
xchg
xor
pop
mov
inc
loope
cld
lods
inc
call
mov
std
jb
cmpsb
into
dec
xchg
call
stc
adc
pop
add
jle,pt
cmc
mov
pop
pop
dec
gs
pusha
inc
lcall
mov
adc
data16
mov
inc
stos
insl
sbbb
js
push
pop
and
in
mov
pop
test
fst
xchg
jl
and
idivb
push
adc
fstpl
scas
js
xorl
subl
test
imulb
dec
notl
subb
adc
roll
inc
clc
cltd
stos
mov
jo
mov
fs
mov
aad
and
idivb
clc
dec
imul
fdivr
mov
bound
inc
jnp
sahf
out
sub
inc
mov
aaa
jmp
xchg
out
cs
sub
mov
popf
rcl
sbb
inc
jns
cmpsb
andb
dec
out
adc
xor
aas
push
cwtl
orl
xchg
xor
dec
xchg
inc
fwait
mov
daa
fadds
lcall
out
jbe
test
sbb
jne
loope
mov
and
pushl
inc
push
fsubl
jb
push
jle
sbb
stos
jnp
fs
sahf
pop
out
mov
stos
pop
bound
fsubs
and
dec
mov
xor
push
add
xlat
xchg
and
mov
inc
cld
imul
add
cli
mov
adc
xchg
push
push
daa
xor
jae
daa
scas
ss
sahf
fnstsw
jmp
adcb
jl
or
shl
and
icebp
imul
add
and
addb
stos
inc
pop
inc
sub
mov
lods
dec
xchg
fdivs
fsubrp
push
test
and
imulb
clc
imul
cld
hlt
push
test
mov
cmp
sbb
add
adc
mov
pop
dec
jo
icebp
jnp
popf
push
jns
cmp
fidivrl
test
cld
aas
mov
ret
jbe
sub
inc
or
out
pop
insb
jp
nop
adc
cmp
adc
mov
stos
fwait
stc
ret
out
dec
aaa
outsb
lods
cltd
cld
fiaddl
out
sub
fdivl
icebp
jnp
sarb
stos
adc
mov
dec
test
pop
jo
adc
arpl
cwtl
ja
or
enter
sub
add
lret
mov
lock
std
jle
inc
mov
stc
ret
push
push
jae
cmc
cs
push
xor
mov
inc
mov
stc
fs
xchg
hlt
ja
insl
jecxz
ret
repnz
mov
int
sub
xchg
push
sarb
cmp
inc
out
push
mov
add
or
stos
mov
jns
aad
mov
cli
jne
dec
lods
mul
pop
mov
lcall
dec
stos
push
sub
imul
adc
inc
aaa
shlb
aad
add
addb
push
jmp
jge
mov
ds
stos
jle
inc
outsl
lock
pop
shrl
pusha
in
inc
push
push
hlt
jl
gs
and
push
pop
and
notl
push
shrl
pop
aam
xchg
dec
sub
mov
int3
pop
movsl
xor
das
jg
mov
push
cmp
push
pushf
cmpsl
jge
icebp
std
pushf
aas
inc
imul
sbb
test
add
arpl
test
xchg
mov
scas
mov
push
js
cmp
shr
and
les
push
adc
mov
jle
sahf
fisubrl
lods
jae
mov
pusha
add
sti
add
pop
psraw
push
inc
jnp
adc
stc
push
xlat
int
imul
adc
lock
dec
call
jnp,pt
in
popa
jae
sub
je
loop
testb
scas
call
std
fcomp
adcl
push
fsubs
aas
adc
inc
enter
adc
sbb
into
aas
push
pop
insb
je
sub
xor
out
cmpsb
dec
and
lods
fcomp
jno
aaa
add
rol
lock
mov
sub
sub
daa
jae
sbb
nop
pusha
mov
bound
and
jo
cmpsl
imul
fistl
mov
inc
mov
pop
test
scas
in
in
movsb
cltd
and
aas
pop
fs
mov
pop
jne
fisubl
sbb
mov
cld
or
jne
rcrb
xor
xlat
fbstp
in
xor
inc
fistpll
mov
mov
inc
pusha
mov
cld
mov
cmp
fcoml
daa
out
sbbl
push
pop
sti
jns
mov
mov
gs
mov
out
mov
popa
lea
mov
pop
mov
mov
in
mov
into
adc
mov
movsb
cli
cmp
outsb
outsb
xchg
cmpsb
jmp
jp
sahf
js
cli
mov
jg
adcb
loop
jle
cld
jae
dec
int
int3
pop
popa
shll
adc
mov
jne
popf
dec
or
clc
and
test
xchg
mov
sub
pop
mov
int
in
call
adc
mov
pop
shr
mov
pop
lods
inc
add
inc
inc
xlat
add
xchg
xchg
push
scas
pop
inc
lahf
out
lds
sbb
mov
aas
pusha
cli
jb
jae
xchg
mov
dec
xchg
lret
clc
cli
xor
mov
sbb
fcmovne
dec
mov
shlb
lods
arpl
inc
mov
pop
add
cmp
push
inc
and
pushf
mov
push
outsl
cmp
sub
sub
mov
jne
dec
les
xchg
lea
and
pop
xchg
sti
sti
pop
inc
imul
imul
inc
daa
sti
sbb
jnp
test
xchg
xchg
xchg
jne
push
cmpsl
daa
call
addr16
rclb
stos
cmp
jge
mov
stc
enter
daa
or
lret
and
scas
out
or
xor
popa
mov
xchg
lock
jle
imul
xchg
sub
popa
js
pop
dec
sbb
xor
fildll
js
sbb
pop
out
ja
rcr
sti
mov
jg
jecxz
pop
jg
fmuls
fsub
repnz
pop
mov
es
mov
sub
mov
push
mov
fs
and
and
test
mov
push
or
popa
mov
xchg
hlt
jnp
ss
test
add
inc
cli
xchg
jns
add
daa
stos
jg
mov
lret
out
mov
mov
xchg
fstl
jb
imul
sbb
mov
out
outsl
in
xor
pop
push
jbe
jle
mov
pusha
idivl
in
mov
adc
or
idiv
or
cld
lcall
mov
add
dec
cwtl
push
cmp
into
jno
lcall
xlat
pop
inc
in
in
jne
scas
icebp
push
pop
mov
test
int
mov
popf
xor
and
jne
or
inc
test
jne
xor
stos
sub
adc
cmp
jb
data16
sbb
mov
mov
add
lods
rorl
inc
xlat
and
stos
fnstsw
lods
or
adc
cli
out
ss
xchg
nop
mov
push
std
dec
dec
mov
jecxz
test
sub
xchg
mov
aad
cli
fildl
sbb
jae
jne
fistpl
sub
push
mov
push
fwait
cli
jnp
inc
xor
dec
push
push
stos
sbb
bnd
mov
pop
mov
pop
ficompl
je
dec
hlt
or
lea
addr16
out
fmull
dec
sbb
push
test
xchg
addl
and
dec
sbb
adc
pop
adc
repnz
or
sbb
decl
orb
subl
push
and
int
cltd
adc
push
leave
data16
jnp
pusha
ret
and
sbb
pop
and
fsubr
and
call
sbb
repz
push
mull
pop
imul
rclb
mov
push
imul
mov
sub
mov
and
pop
ret
scas
pop
ret
dec
mov
or
cltd
je
add
dec
imul
scas
cmc
inc
adc
sbb
cmp
mov
push
lods
jle
mov
rolb
inc
dec
pusha
out
iret
mov
dec
dec
nop
cli
js
add
fimull
pop
repz
not
aad
inc
mov
push
jbe
aas
iret
pop
je
sub
pop
test
mov
jb
xchg
repz
dec
xor
aam
pop
sahf
movsl
or
call
int3
jnp
jnp
scas
sub
jns
movsb
repz
xor
xorl
sahf
jle
xor
adc
shlb
fdivrs
push
jns
hlt
add
into
cmp
ljmp
xor
jb
cmp
cmp
mov
fwait
int
add
xchg
leave
mov
enter
fstl
pop
jnp
pop
mov
lcall
add
ret
jecxz
jmp
aad
les
mov
test
fs
hlt
pop
fldl
jle
mov
and
mov
dec
movsb
iret
and
mov
and
xchg
and
mov
pop
cwtl
xchg
scas
cltd
mov
jl
in
fmul
out
push
fmull
or
or
push
enter
sbb
mov
mov
inc
push
shlb
lahf
fcmovb
fcomps
fs
scas
js
es
mov
jns
ljmp
xchg
xlat
xor
popa
fstp
jmp
mov
pop
dec
daa
xorb
jne
sub
mov
iret
jp
bound
sahf
pop
out
cmpsl
sahf
test
leave
ret
add
je
fwait
push
mov
dec
adc
sub
and
push
sub
cmp
imull
add
fmull
xchg
loopne
jecxz
mov
ficoms
mov
enter
mov
jnp
xchg
or
jl
mov
jmp
cmp
sbb
jp
add
push
sahf
lret
dec
sarb
push
pop
cmp
mov
or
shlb
adc
inc
bound
test
xlat
mov
and
add
pop
loope
mov
adc
outsl
inc
push
xchg
or
inc
add
or
pop
popa
cwtl
fwait
cmp
xchg
xchg
pusha
cmp
xor
sbb
ret
inc
push
pop
les
and
adc
cmpsb
lret
popf
push
out
nop
sahf
or
ret
stos
je
sbb
add
mov
jae
cmc
inc
jmp
out
dec
shrb
bound
jmp
lea
add
inc
jno
and
inc
je
ret
test
out
lea
mov
notl
pop
insl
mov
fwait
sbb
enter
cmpsl
ret
cmpl
in
loopne
push
insl
xor
nop
cmp
or
jns
movsl
dec
sub
rcl
hlt
and
jne
dec
sbb
adc
push
xbegin
pop
lea
outsb
rol
mov
cmpsb
add
jae
outsb
addb
or
rol
mov
mov
sbb
pop
or
repnz
ja
cltd
mov
push
sbb
int
adc
xor
xchg
cmpsb
mov
call
jbe
fdivl
push
int
stos
mov
out
mov
icebp
jbe
lcall
negb
stos
mov
aam
add
inc
jmp
or
out
lock
gs
test
comiss
out
adc
push
aam
dec
outsl
sahf
adc
xor
movsb
add
push
jns
scas
les
sub
xlat
lcall
flds
das
push
ja
hlt
cmpb
mov
repz
cmpb
xchg
es
pop
mov
mov
lret
xor
lea
aas
sub
xor
int
push
push
and
jae
aam
push
mov
fwait
inc
mov
jae
cmp
nop
in
mov
mov
mov
jmp
test
imul
popa
cmp
movsl
push
andl
or
cwtl
sub
gs
aad
pop
sbb
jo
mov
inc
fimuls
sub
add
xchg
repnz
mov
jle
das
add
mov
pop
cmp
push
outsb
gs
popa
ret
iret
ja
jmp
cmpsl
addr16
mov
dec
mov
xchg
adc
adc
fbld
sub
ljmp
sti
js
std
das
and
test
hlt
inc
aad
mov
and
popa
shlb
mov
in
test
jb
mov
jae
cs
mov
lock
xor
jmp
push
imul
jp
in
inc
pop
lods
lret
adc
inc
leave
out
cwtl
test
add
rcl
roll
insb
ja
int
std
rorl
mov
cld
xchg
cmp
xor
pop
repz
xchg
pop
adc
jnp
inc
mov
popf
jg
jle
jbe
pop
mov
pushf
xchg
pop
jae
dec
decl
add
fdivr
ss
repz
push
int3
cmpsl
cmc
and
and
cmpsl
repz
push
mov
aam
clc
pop
roll
dec
xchg
sbb
test
orl
or
cld
loope
push
inc
rcll
dec
setno
ret
mov
out
das
jno
repnz
jbe
pop
out
mov
arpl
lds
loopne
into
dec
xchg
mov
jle
aas
shlb
push
mov
jmp
sub
and
bound
sarb
jne
fists
adc
leave
lret
std
add
addr16
gs
adc
xor
mov
daa
add
xchg
add
xchg
dec
dec
and
daa
inc
jbe
aas
cmp
lret
scas
out
adc
cmp
out
ljmp
clc
mov
cwtl
pop
test
mov
das
push
stc
movsl
hlt
jecxz
ds
roll
xchg
adc
test
nop
fisubrs
xchg
sub
dec
sbb
iret
popl
pop
out
fistpl
adc
mov
mov
data16
mov
pop
mov
movq
lahf
mov
daa
filds
xacquire
je
cmpsb
test
mov
push
cmp
pop
rclb
cmp
xor
pop
dec
lods
fmulp
inc
divl
jbe
jge
and
daa
push
hlt
push
mov
dec
ret
gs
xor
add
push
pop
lods
sbbl
add
jp
stos
scas
cmp
sbb
sarb
cltd
dec
shrb
imul
mov
pushl
rorl
mov
push
sub
nop
sahf
dec
imul
adc
adc
xchg
sahf
xchg
mov
xor
int3
inc
sub
sub
lret
xor
mov
mov
pop
es
or
adc
sahf
and
in
adc
ss
into
iret
sub
fldt
stos
aam
arpl
lods
and
or
lds
sub
ss
dec
add
in
xchg
mov
daa
jl
push
movsb
and
ret
push
and
idivl
push
movsl
xchg
je
fisttps
jo
cwtl
hlt
mov
and
sub
cmp
cmp
sub
adc
scas
call
push
inc
shll
stc
xor
xchg
je
mov
lahf
in
inc
test
push
cli
or
dec
adc
pop
inc
loope
mov
pop
ljmpw
fwait
mov
push
push
push
push
pop
jae
mov
test
shlb
mov
push
iret
stos
stos
fcomip
outsl
imul
imul
mov
push
cmpsb
lds
pop
test
scas
cmp
pop
xchg
sti
sbb
or
ds
pusha
cwtl
xchg
sbb
repz
or
test
dec
dec
std
into
jecxz
push
or
push
sahf
adcl
sub
inc
movsl
and
mov
mov
cltd
call
sub
ljmp
xchg
imul
and
add
sub
cwtl
aaa
push
jae
cld
dec
xchg
cmp
sbbb
mov
insl
into
or
adc
xor
dec
pop
push
push
sti
push
sub
insl
fmuls
lea
cmc
jl
pop
inc
inc
pop
mov
sub
lock
popf
sub
cmp
fcomi
jge
incb
sbb
add
shll
xchg
rcrl
stos
jno
int3
jo
pop
std
push
mov
dec
mov
scas
iret
push
jns
movsl
cmpsl
mov
imul
outsb
or
xchg
lcall
lock
push
test
or
fnstenv
mov
push
mov
adc
imulb
leave
and
mov
cmp
dec
mov
gs
lcall
je
pop
pop
test
dec
movsb
cmovno
outsl
cmpsl
mov
nop
cwtl
dec
push
insb
push
xchg
cmc
repnz
pop
lock
sub
inc
stc
cmp
dec
int
push
rclb
inc
xchg
loopne
mov
and
int3
cmp
jae
or
cld
adc
jne
inc
aam
je
or
aas
lods
repz
mov
stos
jg
jg
pop
sahf
xor
xchg
negl
mov
dec
jmp
dec
lds
das
lret
ljmp
scas
leave
jecxz
dec
sbb
sbb
test
mov
ss
ds
mov
pushf
fsubs
mov
in
movsl
cmpsl
add
xchg
sbb
fisubrl
adc
cmp
mov
arpl
andl
test
adc
adc
adc
mov
in
negl
and
or
cld
dec
cmp
es
mov
std
rcrb
jae
sbb
cwtl
pusha
push
imul
andl
push
jno
xor
mov
dec
mov
repnz
xchg
jb
sub
ret
xchg
jmp
mov
sub
out
ss
ss
push
push
decb
scas
pop
rcl
mov
xlat
leave
adc
in
call
mov
jb
add
inc
inc
fnstcw
out
or
jnp,pn
or
mov
sbb
mov
jns
add
jo
cmp
mov
je
test
xchg
repz
sbb
mov
dec
jae
insl
test
insl
bound
imul
xchg
cld
sbb
mov
pop
sbb
fmull
rolb
out
cwtl
mov
and
notl
add
and
cmp
cmp
pushf
mov
aaa
sti
movsb
scas
cmp
scas
cmp
mov
and
mov
sbb
pop
or
in
jg
and
and
jl
inc
scas
ret
arpl
in
adc
inc
ss
dec
loop
popa
data16
ror
outsb
lahf
xchg
add
jnp
push
xor
inc
addl
or
test
sub
sbb
fidivrs
icebp
shl
sub
push
insl
mov
bound
stc
and
dec
cwtl
lret
add
add
pop
pop
cs
out
and
cltd
jg
loop
out
mov
pop
popf
jl
pop
and
leave
mov
aam
jnp
rcrl
outsb
aaa
jmp
ja
sbb
xlat
pop
or
pushf
mov
xchg
sti
out
mov
lea
into
xchg
sbb
inc
mov
add
cmc
call
pushf
xlat
push
in
push
rcl
in
sbb
loope
add
cs
xchg
cmp
jae
adc
inc
gs
frstor
jp
jmp
and
fsubl
ds
arpl
test
je
orb
test
mov
push
cmpsl
sub
in
mov
loop
mov
cmp
mov
lea
cwtl
mov
repnz
or
repz
imul
mov
xchg
xchg
mov
scas
loopne
push
sub
jmp
push
out
mov
repnz
fdivrp
jmp
shrb
pop
or
test
dec
cs
dec
xor
lret
mov
sbb
hlt
xor
sarl
xor
add
push
incl
mov
xchg
dec
mov
cs
pop
jecxz
aam
mov
ror
pushf
and
mov
test
int3
xchg
and
jne
add
xlat
fistps
mov
or
xchg
test
mov
cmp
mov
ss
in
mov
repz
cld
xor
jno
xor
mov
lods
repz
jne
push
jecxz
xchg
push
sub
jge
shl
ret
inc
inc
in
jmp
mov
cmpsl
mov
js
repnz
xchg
and
or
int3
adc
inc
dec
scas
cmp
aam
jae
adc
in
sbb
xor
add
add
lret
xchg
repnz
movsb
mov
push
xchg
iret
dec
push
sub
adc
cmp
dec
lret
imull
mov
inc
daa
push
and
enter
push
mov
mov
cmp
das
decb
mov
jl
jl
jno
push
inc
fcomps
movsl
mov
out
in
pop
jbe,pt
int
ljmp
fldcw
mov
push
cwtl
xchg
jmp
sub
fwait
fwait
pop
or
adc
mov
cmpsl
mov
iret
mov
lock
out
xor
hlt
sarl
stos
add
cmc
push
ds
or
push
mov
mov
test
repnz
adc
popa
daa
mov
rclb
repz
jmp
sbb
mov
test
xor
mov
imul
mul
cmpsl
push
dec
adc
or
loope
ret
cmp
mov
mov
dec
add
pop
into
lds
ja
lods
nop
aaa
dec
or
std
xacquire
call
and
lret
pop
nop
xor
push
adc
dec
jg
ret
outsl
rcr
xor
mov
and
sub
in
gs
push
pop
lret
xchg
idivl
push
push
aam
call
fstps
push
push
lods
dec
xchg
mov
insb
mov
cltd
push
and
stos
jmp
or
pop
cmp
lret
pop
dec
aam
sbb
pop
mov
sti
add
inc
xor
int3
arpl
or
sbbb
mov
hlt
pop
jae
repz
je
ret
cmp
fmull
mov
lcall
add
push
hlt
ds
cmp
das
stos
out
cmpsb
movl
mov
pop
shll
jmp
call
pop
adc
and
insb
jg
and
sub
ja
loop
testl
jne
repz
popa
inc
lret
xchg
dec
xchg
cld
push
cmp
mov
outsb
ret
mov
rclb
jle
pushf
fwait
push
and
fstpt
sub
test
push
movsb
iret
fsubrl
pop
mov
push
jg
and
mov
scas
mov
pop
test
icebp
inc
adc
mov
jecxz
push
push
sbb
mov
mov
mov
adc
cmpsl
mov
or
test
dec
mov
sti
out
fsubrs
mov
test
dec
roll
stos
enter
cmp
push
mov
decb
ret
jmp
fdivp
int3
mov
jmp
cmp
aaa
inc
pop
jmp
fstpl
repnz
out
es
cmp
and
xchg
cmp
insl
inc
fldenv
adc
lds
outsb
pop
and
lods
xor
cmpsb
scas
mov
ja
and
push
xchg
insb
xchg
aad
notb
es
jns
add
push
pop
push
pop
pop
js
adc
xor
xchg
add
mov
ret
cmp
pop
pop
sbb
or
pop
mov
jle
jae
sub
pop
cld
outsl
fsub
push
jp
adc
lods
xor
adc
fstpt
sbb
cmpsl
xor
rorb
pop
cmp
out
sbb
out
aaa
pop
lds
iret
les
jp
cmpsl
pop
pushf
sub
add
xor
test
imul
push
push
jle
fisttps
outsb
cmp
mov
mov
pop
push
sub
xor
inc
cwtl
inc
sub
orl
movsl
insl
inc
stos
xchg
pop
movsb
ficomps
dec
cmp
leave
and
lcall
cwtl
mov
nop
jne
test
scas
lods
push
orl
mov
mov
push
pop
nop
addr16
xchg
fnstenv
dec
in
mov
lcall
mov
and
div
aad
xchg
bound
addr16
jge
sbb
int3
insb
into
sub
test
out
cld
cmp
pop
fisttpll
cmc
stc
xor
imul
mov
mov
cmc
xchg
movsb
int
add
xchg
loop
imul
add
pop
sub
mov
mov
cmp
cmp
ret
popa
pop
js
mov
lock
jbe
scas
jl
jbe
xchg
and
loop
out
rcrl
mov
roll
stc
mov
rorb
push
insb
fmull
movsb
mov
stc
sub
test
sahf
jns
xchg
out
out
ja
dec
loopne
arpl
mov
ljmp
jl
mov
jecxz
in
cmpsb
mov
sub
in
xor
mov
ss
in
mov
iret
mov
mov
inc
mov
popf
mov
dec
inc
scas
jo
repz
push
cwtl
dec
out
mov
sub
test
adc
pop
clc
aad
ja
fnsave
sbb
cld
cmc
xlat
push
and
push
jg
incb
fdivrl
mov
pop
mov
push
cmpsl
daa
dec
jne
jp
sub
ja
or
xchg
pop
out
outsl
mov
xchg
insl
sbbb
push
jb
pop
xchg
push
dec
js
sub
inc
hlt
aas
in
pop
push
bound
scas
mov
insb
pop
push
sub
push
aam
mov
sti
mov
dec
dec
je
mov
movsb
jae
repz
pop
into
adc
mov
je
mov
push
insl
mov
notl
cmp
std
mov
movsb
sti
sahf
dec
mov
aam
aad
shrl
inc
xor
cmp
adc
sbb
mov
fsubr
inc
add
shr
scas
jl
call
mov
mov
push
iret
imul
aaa
movsl
loope
mov
add
in
cmpsl
inc
xlat
in
fcoms
mov
xchg
mov
inc
adc
lcall
int
or
and
xor
mov
adc
push
fcomp
lret
rclb
sbb
test
imul
cltd
lcall
dec
pop
and
mov
mov
mov
outsb
add
pop
in
sub
mov
movsl
jmp
sahf
push
pop
mov
psubusw
shll
nop
sub
lods
adcl
cmp
and
or
enter
xlat
add
sbb
orb
pop
sarb
aam
fcoms
pop
mov
in
mov
cmp
popf
arpl
cmp
push
mov
and
test
pop
mov
xor
ljmp
mov
insl
push
sbb
or
xor
jle
xlat
push
in
shlb
filds
fsubl
push
add
and
lods
insl
and
test
cs
les
loop
xor
xchg
mov
gs
cmpsl
inc
gs
frstor
pop
insb
push
lods
jo
movsb
inc
mov
add
adc
sub
add
outsl
push
adc
xchg
pop
sub
andb
ret
xchg
and
jge
divb
ss
xchg
cmc
jo
dec
pop
sub
xchg
aad
and
jecxz
mov
or
jbe
xor
sbb
push
or
cmp
ljmp
push
xchg
movsb
xchg
js
ficoms
shll
dec
sub
sarl
or
dec
xchg
cmpsb
pop
cmp
mov
adc
mov
xchg
or
movsl
pop
arpl
and
psllw
int
outsb
pop
jp
imulb
call
jb
sbb
in
sbb
mov
int3
fcompl
into
xchg
ss
fisubrl
jno
mov
out
xchg
xchg
int3
jmp
sti
or
imul
cs
negl
loopne
rcr
scas
lcall
fildl
sbb
inc
xchg
jb
add
adcb
cvtpi2ps
xchg
das
ss
jno
pop
add
or
callw
sbbl
push
inc
pop
js
pop
lcall
mov
xchg
aam
imul
mov
cmp
fidivrl
xchg
inc
dec
mov
adc
add
add
adc
pop
xchg
fisubrs
out
test
xor
jne
insl
gs
xor
jecxz
push
jmp
push
je
push
ja
loopne
pusha
rsqrtps
cli
mov
pop
scas
cmpsb
or
or
inc
pusha
mov
and
fildll
xchg
shl
pop
push
mov
xchg
sub
test
mov
xor
push
je
and
mov
gs
call
cs
test
cmpsl
jb
pop
xchg
rcrl
inc
mov
popa
xchg
test
sbb
add
cmpsl
inc
and
dec
inc
ja
dec
pop
mov
popf
push
nop
and
sahf
push
out
jbe
dec
fimuls
pop
dec
adc
mov
mov
fistps
lods
and
add
push
lret
push
int3
mov
xor
and
data16
and
mov
popf
mov
popa
and
mull
lds
dec
cmpsb
add
pop
icebp
dec
mov
shrl
cli
adc
sahf
dec
lret
inc
fsubrl
sbb
je
xchg
adc
sub
out
icebp
jns
aam
into
jl
addr16
pop
rcrb
lret
aas
cltd
xor
adc
into
das
scas
mov
cmpsl
arpl
pop
test
push
dec
cmp
repz
leave
je
xchg
jmp
cmp
mov
stos
lcall
inc
xor
and
in
jnp
enter
ret
outsl
or
lret
xor
divb
pop
push
cmp
inc
fistpll
mov
xchg
inc
lcall
pop
inc
and
mov
jge
dec
or
push
add
push
pop
pop
loop
int
inc
mov
and
or
pop
add
ret
xchg
cmp
or
mov
jle
int
sbb
xchg
loope
mov
xor
or
lock
or
adc
jb
leave
js
call
and
xchg
pop
mov
mov
xor
aam
push
lods
jge
xchg
push
loop
cmp
jbe
add
repz
mov
out
pop
inc
outsl
pop
out
cmp
cmpsb
mov
out
pop
inc
bound
je
pop
jb
int3
test
jg
push
xor
mov
pop
jb
xor
ljmp
into
aas
shlb
loope
jbe
mov
mov
cs
xchg
in
sbb
sbb
mov
and
outsb
inc
das
adc
shrb
fists
scas
dec
iret
movsl
mov
jle
mov
dec
fidivrl
dec
and
loope
mov
mov
outsb
jno
cmp
jg
sbb
dec
fimuls
jmp
out
jbe
outsb
stc
scas
xchg
andb
adc
mov
cmpb
clc
pop
inc
and
dec
popl
sbb
fistl
inc
jl
xchg
sub
inc
inc
call
roll
and
push
loopne
lods
fisubrs
xchg
xchg
fsubr
jg
pop
jo
cs
ja
movsl
mov
mov
adc
leave
cltd
call
fcompl
sbb
dec
movsl
rorl
and
movsb
lea
cli
les
mov
mov
addl
mov
xchg
inc
mov
fadd
inc
cmc
loope
lahf
adc
repz
pushf
push
stos
lahf
imul
push
pop
mov
push
push
hlt
mov
mov
dec
sub
adc
nop
insl
lock
movl
push
mov
jns
pop
jno
test
inc
cwtl
sub
pop
jle
mov
call
fldl
stos
mov
out
xchg
sub
fsub
dec
fsubrp
inc
sub
push
or
fs
mov
std
jne
push
mov
fistl
jmp
aas
mov
movsb
inc
imul
lds
repz
jnp
push
pushl
cltd
inc
pop
int
cmp
cs
jbe
adc
sub
popa
out
or
jnp
jp
mov
fs
inc
pop
mov
xor
adc
inc
shrl
pop
test
stos
cmp
call
inc
cli
popf
pop
adc
dec
and
or
or
dec
add
lods
or
lods
repnz
pop
mov
mov
cwtl
sbb
add
mov
subl
shrb
push
mov
lret
xchg
and
cmpb
jmp
dec
out
cmp
mov
cs
fidivrl
sti
mov
jae
pop
pusha
dec
push
jns
pop
push
imul
loope
cs
pop
cmp
sub
gs
shll
test
sub
push
loopne
sahf
xchg
aam
pop
pop
mov
push
dec
add
bound
mov
test
pushf
stc
push
fisubrs
mov
xor
scas
dec
adc
data16
sbb
add
jg
aas
cmp
out
inc
push
arpl
movsb
push
and
cmp
pop
xlat
mov
into
repz
lock
mov
int3
push
inc
imul
or
sbb
ret
xchg
in
pop
xchg
xchg
pop
int
popf
popa
inc
cmp
dec
adc
inc
ss
inc
inc
aas
sbb
mov
mov
clc
movsl
nop
and
icebp
inc
push
loop
mov
lods
xor
jmp
mov
out
insl
cs
dec
and
scas
pop
ret
xchg
jle
pop
adc
lods
xor
retw
mov
mov
pop
bound
xchg
stos
rcrb
push
out
xor
sti
rcrl
jno
xchg
cmp
lret
dec
paddsb
xor
xchg
fxch
fs
sbb
mov
lods
xlat
cmc
fcompl
or
inc
in
inc
popa
roll
call
loopne
leave
enter
or
mov
cmp
aam
mov
mov
cwtl
js
sbb
negb
cs
data16
and
js
data16
in
hlt
stos
dec
arpl
out
dec
or
pop
dec
xchg
mov
std
add
mov
stc
push
or
sub
and
pushl
sub
sbb
sbb
xchg
xor
dec
into
repnz
xchg
sbb
incl
lock
out
movsl
pop
cmp
push
pop
ret
lods
inc
jo
mov
stc
ss
repz
je
sahf
or
out
or
add
and
or
outsl
leave
loopne
lods
into
mov
push
fdivr
xchg
in
jbe,pn
mov
ret
xchg
cli
inc
jmp
mov
jmp
outsb
mov
cs
gs
pop
cs
push
ds
fidivs
addr16
xchg
iret
lock
push
adc
loopne
repnz
ret
inc
sub
popf
loop
faddl
jb
jl
icebp
aad
aaa
adc
jns
repnz
xchg
mov
mov
cmp
fldenv
mov
in
test
jne
iret
lcall
in
jge
xchg
out
aad
xchg
mov
subl
js
or
mov
sbb
stos
pushf
inc
inc
mov
mov
push
pop
lret
and
clc
sbb
pop
inc
fstpl
out
sti
dec
inc
aaa
push
cmp
adc
gs
int
addr16
or
loopne
ds
lock
jg
loopne
cwtl
jae
clc
repnz
insb
pop
daa
adc
inc
and
out
in
jle
xchg
lcall
add
loope
leave
pop
mov
pop
jle
js
pop
sbb
push
jb
jg
imul
dec
cli
inc
xchg
in
addr16
inc
pop
dec
jecxz
mov
imul
and
mov
lods
mov
or
je
mov
xchg
ss
dec
pop
enter
nop
cmc
mov
and
pop
sub
inc
dec
xchg
test
aam
or
or
push
cld
xchg
jle
in
cld
ds
mov
xchg
jge
cmc
push
xor
mov
or
rcr
sti
mov
hlt
sub
ret
push
pusha
or
adc
lock
fwait
dec
xor
jns
fs
fs
pop
outsl
lods
mov
pop
mov
enter
push
loop
xlat
push
test
fimull
fcoms
sub
pop
outsb
xlat
jae
hlt
shlb
cs
cs
lahf
pop
aaa
jo
scas
lds
les
mov
mov
cld
bound
xor
test
pop
stc
inc
dec
mov
leave
dec
jge
bound
inc
mov
push
push
xchg
pop
js
mov
sub
mov
popf
out
jle
ds
repz
stos
movb
or
mov
cmp
pop
adc
pushf
icebp
sub
sbb
jecxz
add
mov
pop
repz
adcl
jl
test
pop
adc
jns
out
shlb
cmp
mov
mov
incl
dec
fldl
or
daa
xlat
out
test
sbb
cmpsl
ss
out
arpl
ret
ret
or
ljmp
mov
jl
or
lcall
call
fimuls
add
call
xor
sub
sub
push
add
push
int
jnp
je
cmp
xor
jmp
push
fs
mov
and
dec
cld
push
dec
add
or
ljmp
xchg
je
rclb
dec
and
aaa
cli
pop
dec
dec
cwtl
or
add
loop
mov
mov
roll
repz
jae
imul
inc
clc
fwait
xlat
in
mov
repnz
pop
jmp
or
and
cmpb
lods
into
adc
fnstenv
push
cld
mov
insb
sbb
fucom
ljmp
pop
mov
es
out
cld
fdivs
push
pop
mov
and
cmp
dec
sub
repnz
iret
cmp
pop
push
cmc
pop
lahf
add
lahf
jg
pushf
inc
or
adc
lods
push
dec
mov
dec
mov
fidivl
adc
rcrl
push
int3
adc
repnz
stos
lahf
pop
xchg
lods
push
push
icebp
fwait
test
jle
adc
add
lret
test
lret
cmp
or
sbb
mov
adc
fistl
or
fs
dec
scas
cmp
lret
movsb
xchg
push
dec
adc
mov
jae
mov
into
or
inc
sub
mov
xor
lret
mov
sbb
int
dec
sbb
dec
stc
xorl
mov
dec
js
mov
cmpsb
xchg
inc
add
mov
popf
xchg
jmp
lret
inc
push
clc
iret
fwait
cmc
movsb
cmpsb
push
jae
mov
aam
aas
test
lcall
xchg
ss
pop
mov
sub
jbe
pop
xor
fsubrl
test
and
dec
jno
xor
dec
aaa
fcompl
xchg
loope
rcrl
bswap
cmpb
mov
inc
out
add
jnp,pt
pop
fnstsw
sbb
fldenv
xor
mov
add
sbb
mov
sbb
nop
xchg
sti
loope
sarl
mov
push
dec
popf
lds
jmp
hlt
mov
fistpl
push
push
shll
xchg
data16
pop
fwait
push
ds
movsb
rorl
sti
hlt
repnz
lret
cmp
cmp
cmp
sbb
jne
iret
into
jl
gs
xchg
jecxz
cmp
add
mov
arpl
sub
xor
stos
das
pop
xor
es
mul
or
loopne
sbb
repz
jl
cmp
jae
bound
or
movsb
mov
or
or
cld
cmp
add
je
mov
pusha
cs
mov
sub
cmp
outsb
aaa
and
mov
lret
pop
scas
fnstenv
lods
js
lds
and
insb
int
push
addl
mov
inc
nop
dec
cwtl
mov
ja
jno
inc
and
dec
insl
in
addr16
orl
or
inc
xchg
lock
pop
cli
push
daa
popf
lcall
inc
sub
not
int
fstps
cmp
mov
lcall
pop
rcrl
shll
jbe
mov
xor
and
add
divl
push
adc
pop
stc
movsb
cmc
dec
mov
ficoms
scas
mov
cmc
notb
pop
dec
push
lahf
mov
imul
push
sbbl
in
jne
add
pop
std
in
adc
rorl
pop
movsl
divb
hlt
push
and
dec
add
jle
bt
pop
mov
jg
sbb
mov
sbbb
mov
lds
sbb
loop
mov
sub
or
cltd
push
mov
and
xor
jmp
xchg
fsts
mov
stos
pop
sbb
call
mov
cld
sub
aas
mov
daa
lret
push
stos
aam
xchg
pop
divl
movsl
rorb
inc
cmp
lock
dec
mov
push
flds
pusha
rcll
push
negb
sub
xchg
leave
xorb
fidivrs
call
imul
adc
sub
pop
sahf
int3
jecxz
or
adc
js
mov
xor
hlt
or
pushf
xchg
ljmp
cmpsb
shrl
inc
mov
push
sub
xor
dec
cmp
pop
push
jge
xchg
jl
jmp
loop
out
int3
nop
add
sbb
push
and
push
cmp
mov
inc
fld
mov
pop
lret
mov
cli
mov
das
jge
adc
cmp
cld
jb
scas
into
lods
loopne
lret
sbb
dec
dec
cli
adcb
and
dec
pop
adc
cs
int3
outsl
lock
sub
or
insb
cs
or
mov
xchg
xchg
cmp
out
mov
mov
sub
add
pop
mov
mov
fbstp
lea
lcall
jne
jb
rclb
iret
test
and
mov
inc
cwtl
inc
add
test
daa
adc
test
sbb
jle
inc
cmp
mov
mov
shll
jb
sub
ficoml
addr16
cli
xchg
std
add
mov
jp
shlb
xchg
inc
pop
xchg
xor
mov
imul
test
out
cltd
or
inc
ret
push
inc
test
repnz
jge
mov
push
dec
aaa
imul
jl
in
adcl
bound
xor
adc
std
fsubl
mov
mov
xchg
sarb
xchg
adc
jmp
scas
jp
rorb
fdivs
xor
or
pop
jo
dec
mov
fsubrl
jge
and
xor
popf
inc
adc
xchg
and
dec
je
add
jne
mov
jbe
mov
ret
enter
fisubrs
xchg
mov
cmc
jb
imul
push
sbb
sbb
dec
in
imul
inc
jecxz
out
jno
popa
inc
repnz
jl
es
cmpsb
bswap
fwait
jg
test
or
add
mov
notl
push
insl
cltd
out
repnz
insb
sbb
bound
dec
out
bound
je
insb
rcrb
jl
mov
push
testb
xor
in
fnsave
pusha
mov
add
xchg
jae
cltd
sub
adc
jns
lfs
aas
dec
inc
cmp
sahf
adc
rorl
and
pop
cmpsb
pop
mov
inc
jns
clc
lret
jg
in
mov
clc
mov
mov
imul
and
jns
loope
repz
or
and
lcall
sub
out
sub
dec
xor
pushf
bound
jmp
cmp
mov
inc
fimull
mov
push
sub
popa
lea
imul
xchg
add
mov
mov
pop
sub
fiadds
loope
shrl
mov
jg
mov
push
pop
lcall
sbb
out
in
inc
sarl
pop
add
pop
cmp
push
mov
mov
and
int
and
mov
ljmp
cmp
mov
or
je
inc
aaa
aam
push
sarl
lds
inc
mull
jle
push
xor
mov
aad
jle
subl
cld
nop
add
inc
sub
fucomi
push
data16
inc
push
sbb
push
lods
das
cmp
inc
mov
adcb
sbb
add
inc
or
sbb
dec
insl
sub
and
pusha
lahf
xor
call
mov
mov
in
jae
sti
jb
dec
adc
hlt
fsts
or
shl
add
xchg
daa
fdivp
divl
sbb
rclb
pop
dec
mov
mov
pop
nop
mov
jnp
mov
lock
mov
cmp
cs
adc
xchg
sbb
add
xchg
and
dec
add
mov
rol
dec
jle
mov
adc
ret
lcall
jecxz
loope
ds
adc
fs
loope
pop
orb
jb
mov
outsl
inc
and
mov
inc
pop
mov
cmp
pop
and
sarl
cmpsl
fstpl
sub
jmp
add
jno
and
icebp
xchg
push
mov
mov
and
mov
lods
pop
sub
jmp
jle
inc
movsl
sbb
cs
fnstsw
out
popf
xor
mov
xchg
daa
jecxz
xchg
out
test
cmp
push
daa
mov
dec
push
pop
lret
mov
dec
out
in
cmc
push
test
push
and
shrb
and
mov
push
popf
insl
jae
adc
pop
mov
cmp
xorl
fnstcw
mov
stc
mov
xchg
enter
out
xor
cmp
fdivrs
mov
fisubrs
stc
ds
and
inc
call
mov
rol
lret
mov
leave
mov
push
lods
xor
loope
mov
jns
jns
adc
mov
jnp
ds
sbb
scas
add
je
inc
data16
sti
bnd
jo
push
outsb
dec
jae
js
bound
push
mov
sub
iret
cmp
sbb
mov
loopne
inc
mull
pop
xor
dec
loope
lods
mov
inc
dec
in
dec
inc
mov
js
cmc
mov
xchg
jle
in
pushf
in
mov
ljmp
mov
fstpt
ret
jno
test
jmp
or
shl
mov
outsb
bound
lret
adcl
cld
push
je
add
les
jge
adc
mov
pop
jle
or
adc
xor
ja
sbb
nop
push
xor
lods
sti
push
lcall
fwait
dec
mov
dec
sbb
js
mov
arpl
imulb
js
inc
jno
xor
popf
adc
cmp
mov
pop
pusha
rclb
add
fwait
xchg
sahf
dec
add
add
fs
mov
fs
in
call
into
xchg
outsl
popl
ds
ljmp
mov
popf
dec
in
das
call
push
je
sbb
or
stos
mov
ret
xchg
pushf
dec
in
rcrb
enter
pop
ret
mov
ret
lret
sub
xchg
add
in
and
mov
inc
je
mov
push
movsb
mov
dec
imul
push
push
mov
inc
add
mov
in
aam
dec
dec
int3
cs
aas
cmpsb
mov
fs
movsl
call
cmp
push
andw
movsb
mov
mov
data16
sbb
jp
aam
jge
bound
pop
mov
loop
imul
dec
inc
xor
rolb
jle
and
out
data16
shll
aad
xor
dec
dec
sarb
imulb
adc
shll
imul
push
lods
cmp
hlt
and
les
add
cs
jnp
out
adc
or
adc
test
hlt
lea
pop
fdivp
sub
dec
pop
xor
push
jne
sbb
into
arpl
adc
outsb
mov
popf
xchg
out
lods
mov
and
in
cmp
dec
mov
je
jg
mov
push
inc
imul
mov
dec
push
add
mov
loope
cmp
jmp
sub
leave
fcmove
cs
pop
push
xorl
jecxz
xchg
int
cltd
aam
jb
in
popa
inc
cmp
xor
and
mov
sub
cmp
push
scas
sbb
sub
arpl
popf
push
add
add
and
mov
xor
mov
jle
adc
jle
add
outsl
inc
fimuls
sti
push
xor
adc
ret
ds
xchg
loope
push
and
xchg
and
jnp
sti
roll
xor
movsb
stc
repz
lock
mov
lea
add
lods
push
push
lahf
cli
flds
rolb
add
xchg
dec
shl
imul
int
vpmullw
movaps
pop
test
movsb
repnz
mov
notl
aam
notl
pop
repz
adc
sahf
sbb
and
aas
push
mov
js
or
jmp
dec
mov
shlb
inc
xor
push
adc
jle
xor
imul
add
repz
jmp
jae
adcb
std
xor
insl
in
es
mov
cmc
sbb
lret
xchg
sub
push
add
inc
push
in
jecxz
or
pop
arpl
gs
pop
mov
sub
orl
adc
jle
adc
push
out
pop
sub
add
mov
lret
mov
xor
sbb
ss
stos
add
call
mov
sahf
mov
out
jl
aaa
rclb
gs
je
mov
inc
mov
shrl
sbb
add
stos
cmp
scas
fsincos
movsl
mov
int3
jp
jne
mov
out
xor
pop
data16
mov
imul
imul
jecxz
jae
push
std
pusha
mov
xchg
int
push
mov
sub
neg
pop
fsubrl
jbe
cmp
sbb
jno
fdivrs
push
and
inc
sub
pop
cmp
jmp
mov
and
or
sarl
xchg
pop
jmp
lock
outsb
outsb
xor
call
out
out
movsb
stos
hlt
mov
jb
sbb
add
dec
mov
stos
push
inc
aad
lcall
push
jno
stos
dec
sahf
test
cmp
or
stos
nop
xchg
clc
scas
xchg
jg
xchg
pushf
xor
sbb
pop
sub
mov
mov
fwait
jmp
cmc
fmul
outsb
add
fcmovnbe
loop
test
xor
xchg
and
pop
adc
jbe
pop
xchg
mov
jae
sti
push
pop
mov
imul
push
inc
and
cs
mov
popa
adc
int3
test
jge
jg
cmp
addr16
lret
cmpsb
sub
andl
xchg
mov
xchg
adc
roll
sbb
mov
jo
out
lods
mov
mov
lahf
or
jbe
xor
mov
addr16
outsl
testb
push
repnz
mov
xor
jecxz
ss
cwtl
fs
movsb
push
loope
xor
into
cs
loop
out
mov
and
ja
cltd
dec
jge
aam
sti
decl
ljmp
fmuls
cmpsl
data16
cli
jmp
cmp
cmp
pushf
cmpsl
out
gs
sahf
dec
xor
cmp
negl
ljmp
jle
scas
push
movsb
mov
jae
add
pop
ja
lea
inc
mov
loopne
data16
adc
jl
adc
shrl
outsl
push
out
bound
les
cld
enter
hlt
inc
into
mov
int3
sbb
lods
aad
int3
rcll
cmp
mov
pop
dec
loope
xchg
aas
ss
negb
mov
cmpsl
adc
aas
inc
sub
jnp
jb
dec
movl
ss
mov
rcrb
inc
push
aas
mov
icebp
cmpsl
clc
cmp
dec
repnz
addr16
jmp
mov
xchg
mov
xchg
lods
decb
jecxz
pop
fnstenv
jge
add
shll
adc
cli
mov
nop
clc
or
push
mov
mov
lods
xor
scas
clc
xlat
mov
dec
push
cld
loope
xlat
fxch
push
jl
bound
test
push
fwait
daa
sti
jno
cld
int3
insb
bound
cmpsb
mov
out
clc
hlt
sbb
pop
push
out
test
adc
xchg
push
pop
jmp
xchg
add
nop
mov
add
inc
inc
mov
jle
insl
adc
mov
loop
insl
push
xor
adc
mov
mov
ja
mov
arpl
mov
insb
sub
sbb
xchg
mov
dec
repz
push
xor
or
dec
adc
mov
dec
call
ret
jno
xchg
sbb
loope
fistl
xor
xor
sbb
pop
ret
mov
das
add
sbb
popa
mov
fiadds
mov
outsb
add
std
and
xchg
fsubl
ret
sbb
rcrl
movsl
cmp
std
push
fisttpll
inc
jns
mov
out
sbb
cmp
or
or
push
push
adc
testb
cmp
lea
sbb
repz
xchg
mov
ds
or
jle
inc
inc
xchg
sub
xor
enter
out
xor
fdivr
out
mov
sbb
pop
dec
add
fisttpll
scas
stc
cmp
stos
jg
aaa
and
shrl
repz
out
dec
lahf
mov
and
or
add
sti
str
leave
jne
into
sarb
cmp
cs
push
mov
lahf
and
xchg
inc
mov
xchg
push
inc
adc
xor
mov
out
xchg
lods
sub
jp
mov
cwtl
push
add
pop
fxch
pop
jle
or
cmp
lret
shrl
jnp
push
repnz
add
loope
xor
add
rcrl
outsb
orl
call
push
insb
fcmovbe
scas
jb
mov
xchg
outsl
lods
push
fucom
cmpb
push
scas
xor
and
mov
test
fisubl
inc
push
mov
jg
mov
jp
pop
arpl
xor
movsl
subb
adc
pop
loopne
mov
gs
or
iret
mov
lds
jns
lahf
cli
adc
cmp
xchg
lods
push
mov
movsl
notb
inc
jecxz
push
pop
fs
loop
pusha
popa
daa
push
ffree
lret
add
cmpb
stos
pop
sub
daa
aas
lods
mov
xchg
jo
sbb
mov
hlt
adc
mov
mov
xor
xor
and
xor
in
adc
cmp
int3
js
sbb
incl
adc
scas
aas
pop
fmuls
lds
push
insl
push
xlat
jb
mov
mov
xchg
pop
inc
cmc
insb
outsb
orl
imul
sti
shlb
jns
inc
adc
loop
push
xchg
mov
adc
test
jecxz
dec
mov
push
out
add
outsb
push
jecxz
and
sbb
std
imul
and
mov
test
dec
jp
push
sub
imul
jmp
or
xchg
les
or
out
lcall
fldenv
in
scas
imul
test
adc
push
add
mov
or
pop
mov
scas
rorb
loope
ret
lds
cs
daa
push
push
sub
xor
or
addr16
push
jno
enter
fists
or
test
cmp
xchg
mov
xor
in
adc
and
mov
popa
or
lret
fwait
out
lods
fs
cmpsl
inc
mov
int3
push
pop
test
stc
cmp
pop
add
dec
and
stos
bound
jmp
xchg
sub
pop
jge
add
mov
xchg
add
sub
imul
insb
jle
sbb
cwtl
xor
jae
aas
sub
mov
in
aaa
in
push
vunpcklps
mov
sti
lahf
mov
adc
mov
fwait
adc
pushl
pop
adc
xor
fldenv
or
fwait
push
pop
xchg
xor
data16
insl
pusha
les
inc
push
pop
stc
ret
roll
cld
aaa
jbe
add
lret
mov
cli
in
rcll
pop
mov
rcll
mov
cmp
lret
jmp
mov
out
lret
mov
shl
inc
push
and
je
sbbl
lea
mov
outsl
push
jbe
insb
or
or
test
shll
daa
sub
test
icebp
imul
pop
or
push
out
aam
sbb
insb
frndint
or
inc
cmpl
dec
mov
jo
test
xchg
add
xor
cmp
in
pop
adc
rorl
push
push
adc
or
ret
sub
xor
jg
clc
js
xor
lret
in
jmp
addr16
sbb
inc
and
out
mov
sti
ret
jo
mov
xor
aam
sub
movsl
scas
repz
or
jp
inc
mov
dec
mov
fwait
icebp
out
idivl
push
jno
mov
pushf
jecxz
add
jmp
sti
xchg
or
lods
test
xor
jl
popa
loop
fwait
leave
mov
ret
jne
ja
xchg
jle
adc
jb
lret
outsb
ja,pn
jnp
insb
fcomps
out
js
xor
push
inc
insl
jae
popf
add
xor
and
xchg
xchg
xchg
in
xchg
hlt
sub
sti
mov
out
push
sbbb
sub
xor
mov
sbb
dec
int3
sbb
aaa
adc
adc
xchg
sahf
scas
insb
movsb
insb
push
mov
and
dec
gs
ja
negb
das
out
mov
mov
inc
enter
inc
xchg
ffree
and
dec
pop
test
push
or
jmp
jo
jge
dec
and
mov
inc
subb
mov
sub
inc
sahf
lret
xchg
fsubl
sarl
inc
mov
addr16
jo
pop
or
cmp
stos
and
cmp
fcomip
rcll
xor
or
add
mov
movsb
jae
addr16
adc
mov
push
mov
pop
shr
xor
cmpb
int3
xchg
mov
fisttpll
pusha
test
popa
add
mov
mov
mov
xchg
xor
pop
repz
mov
lcall
ret
or
add
push
pop
add
pusha
xchg
popf
and
cltd
out
jg
es
dec
outsl
sbb
xlat
xor
dec
stos
mov
sbb
int
sahf
shll
xchg
sbb
or
mov
dec
std
dec
movsl
mov
insl
aad
mov
adc
xchg
or
mov
fwait
leave
mov
jno
mov
adc
das
std
sub
lret
in
popa
mov
jne
ret
jge
iret
in
test
mov
add
test
nop
mov
lods
testb
xchg
jne
pushf
ljmp
dec
fcompl
dec
or
mov
out
ljmp
dec
dec
lret
sub
cmp
pop
and
mov
cwtl
cli
add
jne
je
iret
mov
jb
in
in
dec
das
aas
out
cli
xchg
ror
or
aas
mov
sub
mov
ficoms
mov
lock
mov
enter
mov
scas
mov
and
aas
dec
jae
cltd
push
mov
push
pop
xor
rclb
loope
std
adc
mov
loopne
jns
mulb
inc
cmp
xchg
sub
xchg
dec
sti
mov
inc
enter
and
push
xor
push
aam
std
fisttps
sbb
sub
lods
mov
int
xchg
lds
stc
jge
test
lahf
xchg
arpl
push
cmp
xor
xor
mov
sbb
jle
cli
das
add
jnp
clc
mov
shl
push
inc
pop
mov
cmp
fisttps
sahf
adc
mov
mov
cmp
rcl
mov
mov
jmp
jp
xor
add
test
inc
jge
cwtl
pop
xchg
xor
fists
dec
popa
pusha
out
cmp
nop
aam
fiadds
mov
shr
fiaddl
nop
jmp
push
xchg
dec
sbb
repz
out
add
stos
cmp
dec
adc
movsl
mov
cmpsb
sbb
stc
and
int3
repz
push
push
scas
jno
fbld
inc
negb
or
mov
or
shlb
lret
test
sbb
lock
push
stos
cmp
data16
lock
mov
js
inc
sbb
or
les
dec
adc
jl
xor
movl
ret
test
repz
lea
cld
sti
mov
aad
pop
and
test
fistpll
mov
fisubrs
inc
xor
cmpsl
and
dec
test
bound
adc
into
aad
out
shrl
add
cwtl
call
jns
jo
jge
sbb
jno
mov
adc
add
lds
sub
pop
or
mov
and
inc
push
mov
sarb
mov
in
and
or
jns
insb
xor
lock
push
out
fmul
or
add
je
rep
cmpsb
stc
pusha
lods
outsl
xchg
sub
jge
lcall
popa
adc
xchg
jle
cwtl
fnstenv
jmp
mov
cmp
das
ds
repnz
imul
and
test
jmp
pop
xchg
into
sbb
loopne,pn
loope
jl
loopne
push
cmp
mov
data16
mov
xor
xchg
cmp
dec
jnp
push
mov
leave
stos
lea
shlb
js
dec
stc
shr
lods
cmc
addl
jnp
adc
push
icebp
mov
adcb
imul
push
popf
cmpsl
clc
shlb
or
in
fidivrs
cmp
call
or
mov
xor
out
adc
pop
sbb
sub
es
dec
pop
arpl
sbb
mov
aam
jne
enter
xor
das
roll
cmp
lahf
ficomps
sbb
mov
cmpb
call
out
jo
cli
jo
mov
adc
int
or
cli
inc
fnsave
andl
outsl
xor
xor
sbb
aam
lock
fnstenv
and
cltd
scas
xchg
cmp
add
dec
dec
pop
xchg
out
mov
inc
sub
jae
or
fstl
repnz
in
sub
out
add
push
ret
inc
pop
xchg
xchg
movsb
shl
cmp
cwtl
pop
jns
outsl
and
outsb
in
cltd
jmp
bound
test
rcrb
lret
jno
sahf
cmp
sub
or
dec
out
negl
push
dec
pop
xchg
mov
mov
fdivrl
mov
sub
xchg
mov
cmpsl
inc
ja
loop
ss
outsb
arpl
add
mov
jae
mov
adc
dec
mov
inc
pop
jmp
les
xchg
es
pop
mov
sub
aas
jp
or
inc
negb
ss
add
fdivs
andb
mov
ret
jl
pop
mov
aas
cmpsb
mov
pop
sub
inc
adc
pop
adc
and
fnstcw
lcall
inc
jg
mov
test
repnz
daa
fsubr
xor
out
or
call
lods
adc
stos
stc
mov
pusha
fistps
mov
push
adc
jne
push
sbb
bound
add
repnz
int3
stc
fiadds
mov
fimuls
xlat
inc
inc
dec
test
jge
int3
cmp
adc
push
sub
push
xor
lret
sbb
push
inc
imul
cmc
inc
xor
xor
jae
stos
xor
loopne
sub
xlat
in
repz
cli
fs
add
lret
pop
lea
sub
mov
adc
popf
ss
data16
repz
mov
cmp
stos
in
mov
dec
lds
and
jl
cmp
repnz
inc
sbb
addr16
inc
shlb
cmp
cmp
lea
mov
mov
xlat
pop
in
stos
push
mov
push
jecxz
mov
stc
xchg
sub
mov
mov
loopne
std
and
repnz
movsl
push
inc
sbb
inc
ds
outsb
fisttpl
test
mov
pop
adc
in
dec
inc
mov
enter
enter
add
out
add
add
stos
mov
repnz
fnstenv
lds
push
pop
jle
inc
pop
pop
daa
push
loop
subl
into
ficompl
cwtl
pop
and
std
xlat
pop
into
pop
sbb
mov
in
mov
daa
je
pop
jo
mov
xchg
sbb
pop
loopne
push
xchg
mov
loope
mov
add
fsubrs
clc
xor
sbb
data16
lods
sahf
aas
and
aad
out
bound
dec
es
dec
or
cmc
daa
lods
jl
cmp
pop
aas
rclb
iret
scas
xlat
popf
push
jmp
fistl
xor
pop
inc
lret
call
cwtl
push
into
push
negl
psllw
imul
dec
je
mov
stc
inc
pop
test
mov
sbb
inc
inc
lahf
lret
clc
mov
rol
push
xor
sub
add
jbe
mov
das
aaa
ljmp
daa
xchg
mov
jb
stc
out
fistl
mov
push
mov
pop
and
adc
mov
hlt
mov
sub
adcl
rorb
inc
or
aad
xlat
hlt
add
sub
out
icebp
movsb
outsb
shrb
add
das
cli
and
xor
jmp
mov
dec
scas
sub
push
fstpt
movsb
mov
addr16
mov
pop
hlt
jns
cmp
xor
insb
xchg
clc
outsb
sti
dec
pop
icebp
dec
xchg
je
test
mov
jg
mov
push
outsb
mov
jg,pn
mov
jl
xor
push
insl
inc
xchg
mov
gs
stos
cwtl
ja
dec
ja
push
cwtl
push
sub
pushf
test
stos
test
dec
mov
ret
jbe
xor
mov
insb
jp
movsb
dec
push
rcr
or
sub
mov
or
std
mov
xor
cli
popa
adcl
jmp
inc
dec
sub
mov
mov
notl
sub
and
and
call
cmp
jp
clc
pop
add
cmp
push
fnstcw
pop
roll
mov
lahf
out
add
cmp
loop
mov
mov
mov
cmc
sbb
lret
pushf
cmpsl
cs
cmp
cs
dec
ret
jge
xor
add
lods
mov
push
clc
int3
cmp
mov
ret
mov
mov
test
mov
outsl
mov
dec
cmp
pop
lret
jne
jb
mov
jo
in
mov
aad
decb
mov
std
arpl
push
jle
jae
lods
mov
das
xor
add
push
xchg
out
or
shl
jg
movsb
add
mov
xor
pop
sti
sub
push
mov
in
or
loop
out
jmp
sub
lods
or
inc
sahf
nop
push
push
in
adc
jnp
and
inc
divb
cmp
pop
loop
mov
xor
addr16
shrb
pop
xchg
push
fidivrs
dec
pop
push
add
jmp
lds
ja
adc
or
hlt
and
mov
push
sub
fcmovbe
inc
inc
mov
lock
bound
jo
jo
or
js
dec
sub
xor
enter
fucomi
in
mov
jl
testl
xchg
addb
add
js
gs
adc
mov
jmp
lret
push
and
cmp
pop
pop
jae
xchg
fst
das
push
shrl
cmp
mov
loop
outsl
cmp
neg
jb
xchg
xor
cmpl
jnp
loop
add
cmpsb
pop
iret
loopne,pt
sbb
test
out
loop
dec
scas
add
orb
test
sbb
push
adc
or
push
xor
push
jg
repz
out
adc
pop
sub
cmp
mov
int
cmpb
mov
pop
repz
test
adc
push
push
mov
sahf
sbb
ret
cmp
sub
dec
rorl
jecxz
sbb
aad
cmp
inc
daa
xchg
mov
mov
xor
mov
div
or
movsb
sti
out
sbb
subl
pop
inc
pop
jge
imul
mov
mov
mov
call
das
lock
sbb
ret
push
jl
icebp
lret
mov
popf
out
or
pop
lods
jne
mov
jmp
cmp
jbe
stos
push
mov
int3
sbb
lret
lods
adc
js
mov
popa
jecxz
sub
adc
adc
mov
clc
popf
push
test
push
js
mov
ss
lods
dec
cs
cmp
clc
cmp
loop
lea
std
cmpsl
roll
ss
mov
sbb
dec
add
das
dec
mov
cld
push
or
dec
mov
out
mov
daa
sbb
stc
aam
loop
dec
hlt
stc
sub
lods
sbb
jp
cmpsb
addr16
faddl
ret
or
out
shlb
jb
adc
ds
jmp
int
cs
jmp
cmp
movsb
cmpsl
ja
shrb
cld
sub
mov
jl
pusha
or
test
enter
sub
gs
mov
insl
cltd
sub
jae
pop
cli
push
cmp
movsb
lods
xchg
mov
cli
push
dec
dec
dec
push
fildl
xor
mov
xchg
cmp
adc
dec
push
sbb
test
aaa
jb
sbb
fwait
insl
fs
dec
jmp
repnz
inc
scas
mov
push
pop
stos
push
lock
insl
sbb
das
jnp
or
push
cmp
jl
mov
fs
jns
xor
jo
mov
test
jne
lahf
lcall
fneni(8087
jmp
pop
xor
sub
mov
fmuls
rclb
xchg
adc
push
and
pusha
imul
cmp
imul
jmp
sar
jbe
fsubrs
sbb
xchg
inc
pop
pushf
test
insl
lods
mov
fstps
xor
adcl
pop
mov
fs
lahf
dec
lea
bnd
dec
daa
add
xchg
dec
cmp
push
xchg
scas
push
jno
test
cli
and
add
or
push
mov
fisubrl
lret
rcl
ss
pop
shrb
add
ss
ficompl
push
arpl
xchg
fwait
pop
jne
call
lcall
fnsave
cmp
mov
fiaddl
imul
and
and
jmp
dec
push
fisttpl
inc
add
ret
cmp
dec
lods
sub
cmpsb
flds
orb
mov
int
xchg
leave
inc
push
add
xchg
mov
fcompl
xor
aas
mov
inc
pusha
loopne
lea
jle
pop
mov
movsb
sub
dec
ds
cltd
out
sarb
mov
je
dec
ret
mov
ds
popf
sahf
dec
cmp
mov
xchg
dec
xor
inc
mov
add
rcr
faddl
sbb
loop
out
xchg
inc
mov
shlb
xchg
cmpsl
shll
call
hlt
test
mov
jg
jg
adc
dec
xchg
xchg
test
incb
mov
xor
lods
jge
or
leave
push
int
adc
test
adc
cmpsb
daa
negb
shlb
lock
mov
xchg
popf
loop
mov
hlt
aas
and
and
xchg
in
xchg
ds
mov
xchg
xchg
aam
dec
pop
or
insb
ret
jle
xchg
imulb
pop
and
cmp
leave
cmpb
xchg
ljmp
mov
mov
pusha
lcall
lcall
addb
cmpsl
mov
xor
push
xchg
xchg
bound
or
repz
js
xchg
cmp
fidivrs
push
mov
pop
mov
adc
loop
fbld
hlt
das
xor
cltd
dec
push
mov
xor
mov
int3
mov
mov
xchg
and
fisttps
mov
lret
fstp
cmp
fcoms
mov
aam
movsb
out
ror
in
call
outsb
flds
mov
jb
aas
or
imull
push
insl
add
dec
cmp
stos
mov
push
adc
aas
push
bound
fisubs
or
jg
add
mov
cmp
loopne
adc
xchg
inc
movsl
fcoms
xor
stc
cmpsl
insb
dec
dec
pop
mov
imul
pop
jne
ljmp
sbb
sbb
fdivs
or
pusha
clc
cmpsb
sub
sub
inc
inc
or
in
movsb
cs
push
ds
in
and
mov
fstpl
jno
bnd
mov
into
dec
lods
stos
adc
pop
push
and
or
fdivrl
mov
test
lods
fidivs
jne
jle
xchg
cmpsl
pop
inc
lret
sbb
and
imul
sbb
ljmp
mov
add
jo
and
push
mov
mov
cltd
in
es
andl
dec
sub
test
sub
add
and
bswap
add
mov
inc
int3
mov
and
jecxz
cmc
push
mov
das
mov
dec
push
xchg
and
and
sbb
bound
xor
arpl
adc
mov
or
sub
add
je
aam
or
adc
stos
movsl
and
mov
daa
out
mov
jmp
aas
jmp
insb
push
repnz
testl
cwtl
pop
out
fadds
add
pop
add
inc
inc
out
aam
xlat
inc
pop
lds
dec
out
ss
loope
inc
fsubrs
rcl
xchg
sub
dec
hlt
repz
hlt
mov
mov
inc
lea
xor
imul
sub
shlb
into
in
ret
lahf
push
xchg
add
cmpsb
arpl
lds
sbb
ror
clc
int3
add
xor
mov
add
out
mov
and
kaddw
fdivs
cmp
xor
xchg
call
mov
call
movsl
pop
jg
mov
dec
sbb
jle
sub
fsts
cmp
push
lret
ds
xor
push
mov
fcompl
scas
leave
mov
out
mov
scas
mov
pop
mov
sti
imul
xchg
xchg
mov
inc
or
lret
inc
pop
cli
jg
adc
xor
mov
xchg
aaa
inc
pop
mov
and
adc
fwait
or
cmp
fsubs
and
in
int3
ret
pop
out
idivb
inc
push
dec
and
push
fmuls
jge
mov
jne
xchg
decl
mov
mov
xor
mov
lcall
ficoml
adc
cmp
aam
outsb
cmc
repnz
scas
or
pop
aaa
or
dec
nop
push
jle
lds
mov
push
jmp
dec
roll
jbe
scas
rolb
enter
cmp
xchg
cs
dec
sub
mov
or
sub
mov
jne
testb
push
inc
loope
mov
xchg
jp
jne
jnp
xor
adc
add
jp
fidivrl
sbb
mov
jl
sti
aam
xor
std
pop
inc
iret
rclb
rcrb
int3
hlt
shll
push
popa
xchg
pop
xor
mov
xlat
dec
pop
add
mov
mov
push
fcmovu
xchg
hlt
andb
fisubs
inc
cld
int3
mov
mov
jo
pop
mov
mov
adc
ds
mov
jl
xlat
and
adc
cmp
lea
pop
push
filds
mov
sahf
add
in
or
or
stos
pop
in
leave
or
mov
push
out
sub
stos
jbe
stc
aad
jp
mov
pop
addr16
aad
push
xor
int
test
into
daa
test
jge
mov
add
push
add
mov
leave
pop
sbb
push
add
int
lret
decl
shlb
sub
inc
aad
rorl
add
imulb
out
and
jl
jo
push
aas
jnp
mov
sub
scas
lret
push
xchg
ds
adc
cld
adc
les
andb
je
sti
aaa
mov
test
ja
jecxz
in
cmp
sti
movsl
icebp
mov
sbb
sub
cmc
int
xor
or
add
push
and
call
jl
pop
inc
mov
cmp
fidivrl
rorb
loopne
sub
addb
outsb
insb
ss
mov
pop
sub
and
ljmp
cli
jl
int3
lea
or
cli
addb
adc
lea
dec
sbb
mov
fcom
mov
pop
sub
inc
shr
mov
and
aas
adc
sub
iret
mov
pusha
cmp
cmp
loopne
rcrb
push
adc
das
lods
in
lock
and
sahf
lret
mov
inc
inc
and
push
push
cmp
add
fnstenv
sbb
pop
movd
jmp
cmp
mov
or
je
ret
or
dec
lahf
aad
insb
dec
add
je
add
fwait
enter
sbb
fsub
sbb
adc
clc
and
xlat
adc
pop
int
sbb
scas
in
mov
mov
cmpsl
jle
rorb
out
loop
mov
shrl
test
push
fistpll
mov
cmp
jns
mov
test
push
sub
pop
dec
imul
mov
mov
mov
pop
in
and
push
sbb
ret
data16
jns
jnp
push
movsl
clc
lea
test
out
adc
aam
out
jae
sarl
inc
add
subl
dec
aad
call
cli
dec
cld
mov
fmul
xor
pop
testl
outsl
cwtl
mov
mov
mov
mov
xchg
jmp
and
lds
or
push
push
pop
inc
mov
adc
add
mov
test
xchg
fisttpl
std
paddb
insb
sbb
adc
std
cld
sub
add
pop
icebp
xchg
jae
mov
mov
test
pop
in
push
jbe
or
test
fistl
inc
push
test
sub
jmp
in
dec
mov
mov
in
leave
lds
push
stc
js
cmp
lret
shlb
imul
mov
out
fmull
adc
mov
push
iret
inc
imul
fldt
lock
lahf
aaa
dec
incl
icebp
in
out
cmpsb
mov
repnz
pop
jnp
xchg
jecxz
es
mov
add
iret
jl
insl
mov
out
rorb
pop
fs
out
sti
in
in
adc
int3
xchg
xor
leave
fnsave
mov
out
inc
jno
es
fwait
adc
addr16
ss
inc
inc
push
jns
add
sub
push
inc
inc
jno
cmp
adc
push
mov
xor
xor
mov
out
add
xchg
inc
or
int
lret
push
mov
scas
cmovbe
push
shl
or
jb
push
in
je
or
xor
mov
test
xchg
fsubl
out
aas
adc
adcl
jbe
inc
jne
mov
xor
repz
xchg
jl
pop
jno
sub
xchg
ror
loopne
loopne
xchg
pop
jno
adc
ds
or
fwait
icebp
xor
mov
xchg
push
sbb
mov
popf
add
mov
decl
adc
sub
push
sbb
lea
test
aad
xor
iret
mov
inc
sti
sti
cmp
out
idivl
pop
inc
data16
or
insl
dec
xor
jmp
pushw
push
adc
pop
push
stc
fcomps
es
mov
xchg
mov
decl
add
jbe
call
jns
jmp
pop
fidivrs
push
push
jl
jmp
inc
les
xor
sub
xchg
clc
or
dec
ret
dec
lods
pop
ss
push
cmpsl
dec
int
mov
cltd
call
or
sbb
pop
fs
in
xchg
loopne
cmc
stos
lcall
scas
cmpsl
out
loope
mov
loope
es
jne
and
repz
ljmp
pop
push
movsb
jl
mov
xor
imul
or
mov
stos
dec
scas
sub
and
dec
mov
jb
mov
sbb
xor
jg
popf
mov
into
mov
mov
in
hlt
imul
push
sbb
jp
loop
shlb
fildl
stc
fnsave
jge
mov
dec
clc
xchg
dec
ret
dec
ret
sbb
push
mov
lods
daa
xor
jecxz
jmp
andl
cli
mov
add
pop
sub
cmpsl
mov
push
cmp
lret
mov
and
icebp
mov
xor
jbe
add
sub
mov
nop
repnz
xor
dec
outsl
mov
lods
imul
pusha
sub
xchg
xchg
mov
mov
xchg
aaa
call
mov
jb
ror
cs
addr16
mov
and
ja
pop
mov
push
mov
xchg
test
lods
out
aad
push
mov
dec
sub
dec
sahf
xor
pushf
xchg
ljmp
aaa
and
fistpl
add
in
out
and
pusha
lock
cmp
adc
cmp
ljmp
scas
inc
aam
mov
or
mov
mov
dec
into
dec
dec
out
pop
lret
mov
rcrl
aad
push
or
ret
or
xchg
sub
fbld
ret
xchg
or
lods
in
mov
pop
or
ss
push
fimull
sub
enter
inc
or
jb
sarb
pop
push
aad
je
stos
pop
jmp
jbe
jb
call
jns
sbb
negl
psllq
push
cmp
ud1
fstpt
jo
inc
movsl
lock
pop
sub
mov
adc
jp
jecxz
xor
cmpsl
push
xor
jp
lcall
mov
fwait
mov
push
push
ss
mov
std
popa
or
sub
bsf
xchg
popf
lods
pop
loope
adc
fisubs
shl
ret
hlt
stc
inc
add
cld
mov
lret
inc
filds
mulb
xchg
push
leave
sbb
stos
out
arpl
cltd
daa
icebp
xchg
ds
fdivrl
jg
fisubs
out
sti
outsb
lret
jae
pop
repnz
in
test
xorl
fucomip
mov
mov
cmp
xor
push
push
push
int3
scas
lods
jle
sbb
cmp
dec
push
testb
je
dec
addb
fwait
std
test
push
mov
lcall
dec
sbb
jns
in
cmp
lret
dec
jg
out
es
mov
ljmp
out
into
bnd
lcall
jl
sahf
mov
jp
out
push
into
ret
inc
lcall
pop
ljmp
frstor
cltd
mov
out
or
lret
add
enter
insb
inc
sub
fstl
fsts
popa
or
int
cmpsl
push
pop
adc
push
test
sub
inc
add
push
jecxz
push
pop
imul
icebp
jge
mov
in
inc
sbbb
jmp
sub
mov
fwait
insb
pop
xchg
ljmp
xor
sti
sbb
mov
shll
cmpsl
popa
out
in
mov
outsb
pop
push
add
jp
jnp
sub
insl
movb
mov
cmp
repz
push
adc
cwtl
cmp
xor
adc
add
cmpsb
cmc
mov
lock
adc
test
test
adc
xor
xchg
pop
push
sahf
icebp
mov
push
jg
cmp
xchg
pop
dec
mov
xor
lcall
dec
xchg
adc
jo
fisttpl
mov
imul
and
test
push
jge
sqrtps
dec
stc
sub
sarb
adc
into
subl
sti
ret
cmp
adc
mov
lcall
sarb
cmp
push
dec
mov
xchg
leave
scas
pop
outsl
or
push
add
xchg
jns
hlt
cmpsb
pop
mov
arpl
mov
das
xchg
mov
and
mov
ds
lods
add
pop
fmull
leave
in
jns
ljmp
cli
loopne
sub
bound
mov
adc
clc
mov
js
int
lahf
jns
psubsw
fs
push
xchg
cs
mov
dec
adc
or
imul
aam
jae
push
ds
adc
and
fistl
sti
or
xchg
lcall
inc
cmp
adc
jns
mov
cmp
stc
je
scas
mov
xor
dec
dec
lods
cmc
dec
dec
jb
cmpsl
arpl
push
mov
in
sbb
xor
imul
insb
test
test
ret
jmp
pop
jle
inc
sub
ficompl
xchg
iret
inc
adc
jbe
call
sub
jo
push
mov
lea
dec
mov
adc
pusha
or
iret
mov
mov
sahf
mov
dec
sbb
sar
adc
mov
add
aam
inc
les
mov
mov
not
pop
push
hlt
out
dec
aaa
xor
mov
dec
stos
mov
andl
or
and
enter
popf
sti
repnz
mov
cmc
inc
pop
mov
jbe
mov
mov
push
pop
insb
mov
jns
addr16
test
pop
jns
loopne
mov
cltd
ficomps
out
mov
jbe
inc
adc
daa
andb
cmp
xor
addb
arpl
sbbl
adc
insl
and
push
shrb
adc
add
push
push
adc
mov
cld
or
je
adc
push
int
inc
in
fs
sbb
pop
jl
sbb
cmp
adc
call
push
mov
jnp
ficomps
mov
icebp
cmc
jle
pop
loope,pn
mov
mov
ret
les
and
push
mov
and
cld
sbb
loopne
pop
aad
iret
loope
sbb
inc
xchg
push
sub
add
gs
cmp
movsb
add
pop
adc
or
sub
mov
imulb
test
stc
push
adc
xor
fwait
nop
sub
or
scas
int
sbb
pop
sbb
insb
int
jecxz
sahf
fcoml
shlb
sbb
and
xor
out
push
and
xchg
decb
inc
or
outsb
sbb
mov
or
lock
and
xor
lods
xchg
inc
insb
pop
mov
inc
pop
jno
inc
clc
pop
jp
mov
lret
repnz
push
mov
jnp
lock
push
inc
fistpl
test
faddl
cs
jecxz
add
and
mov
out
popa
into
inc
mov
add
or
enter
push
jle
add
xor
pop
mov
and
clc
inc
lods
jp
xor
mov
scas
push
sti
ret
cmp
jge
jno
roll
adcb
cmp
push
cltd
push
xchg
xchg
xchg
pop
jl
dec
sbb
jle
lods
cmpsl
adc
popf
pop
js
and
ja
or
jno
icebp
scas
inc
in
xor
or
xlat
repz
add
test
enter
push
lahf
aaa
push
jg
call
pop
aam
mov
data16
pusha
sub
jno
jecxz
push
xlat
jg
or
mov
and
mov
sarb
repnz
repz
pop
xor
jecxz
dec
sub
or
sbb
jp
xchg
cmpb
mov
out
push
cli
lret
push
daa
rcrl
adc
fsubrl
cld
add
ret
sub
sbb
xchg
xor
mov
mov
call
pop
cmp
xchg
cli
push
in
xchg
or
int3
inc
cmp
bound
push
je
imul
mov
push
mov
xchg
sarl
sub
push
push
push
jle
cmpsl
xchg
push
xor
dec
dec
add
fsubrl
dec
faddl
xor
push
xlat
mov
sti
das
and
stc
lcall
loop
or
int
add
dec
nop
mov
mov
pusha
mov
sub
loop
mov
jmp
inc
add
sub
mov
vphsubbw
cmpsl
sahf
jg
adc
dec
cmp
aam
inc
cmc
adc
repnz
mov
adc
mov
aam
push
mov
sbb
mov
mov
aam
jno
mov
sub
fmuls
dec
inc
jbe
fidivrs
out
dec
js
xchg
mov
sub
jge
mov
testb
arpl
add
loop
inc
xchg
sbb
in
mov
out
mov
pop
mov
push
hlt
xlat
jl
or
xchg
in
ss
cli
cmpsb
sbb
cltd
pop
or
les
xchg
ficoml
or
inc
mov
scas
push
sub
cld
and
xchg
pushf
shrl
inc
and
xchg
push
test
push
fldt
ret
sti
xor
repz
test
adc
sbb
mov
stos
insl
push
sar
addr16
push
icebp
push
lret
push
es
pop
andnps
and
outsl
mov
dec
pop
fimuls
and
roll
jae
lret
inc
xor
shll
sub
data16
popf
lret
adc
lea
jge
aaa
aad
fwait
mov
mov
popa
movsb
pop
call
ret
popa
lcall
adc
adc
std
adc
and
nop
jae
add
fisttpl
add
mov
arpl
mov
inc
jmp
std
imul
ss
sbb
xchg
lret
leave
pop
sub
out
jge
rorb
pop
inc
outsb
jb
adc
and
mov
dec
inc
pop
cmp
ljmp
mov
push
cmpb
movsb
adc
adcl
popf
scas
xor
aam
sub
jb
inc
aas
dec
mov
rcr
adc
adc
mov
lods
adc
or
xchg
std
in
pop
lahf
lods
enter
iret
imul
pop
adc
inc
popf
je
jo
pusha
pop
mov
mov
clc
mov
