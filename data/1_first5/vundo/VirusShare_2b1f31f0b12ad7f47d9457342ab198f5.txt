mov
sub
mov
andl
andl
test
push
push
push
lea
jle
lea
mov
xor
cmp
jle
mov
mov
mov
cmp
jne
cmp
jge
mov
mov
cmp
jle
mov
mov
inc
cmp
jl
incl
mov
addl
cmp
jl
cmp
jge
xor
jmp
mov
sub
sub
inc
xor
dec
test
jle
lea
lea
lea
mov
mov
mov
sub
inc
add
add
dec
cmp
jl
sub
xor
inc
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
push
push
pushl
mov
call
movl
mov
pop
pop
ret
int3
int3
int3
int3
int3
ret
int3
int3
int3
int3
int3
xor
inc
ret
int3
int3
int3
int3
int3
xor
inc
ret
int3
int3
int3
int3
int3
xor
ret
int3
int3
int3
int3
int3
mov
push
mov
push
mov
mov
call
pushl
mov
call
push
push
pushl
call
xor
inc
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
push
xor
xor
test
jle
push
lea
push
mov
cmp
je
inc
add
cmp
jl
pop
pop
cmp
jl
xor
jmp
test
jle
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
call
inc
xor
test
mov
jle
lea
mov
inc
add
cmp
jl
pop
ret
int3
int3
int3
int3
int3
xor
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
test
pushl
pushl
jne
push
pushl
call
jmp
dec
push
call
pop
ret
int3
int3
int3
int3
int3
call
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
pushl
mov
pushl
mov
push
call
mov
mov
lldt
in
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
push
call
mov
mov
movzbl
sub
je
incl
call
call
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
int
dec
xchg
jge
insl
xor
cmpsl
dec
repz
int
cld
and
xor
lods
jae
orl
mov
or
xchg
add
xor
lea
and
xchg
jge
insl
mov
decl
jmp
fmul
jo
jl
inc
adc
cmp
orl
cmp
pop
lcall
sub
test
xchg
mov
es
or
sub
sbb
add
mov
pop
mov
xor
dec
pusha
and
jb
mov
push
fadds
or
sbb
pop
js
mov
mov
mov
dec
sbbl
or
sbb
inc
cld
push
add
lods
lods
mov
jnp
lock
cmc
out
xchg
cmp
push
mov
xor
adc
push
cmp
mov
mov
mov
test
push
lds
sbb
fsubl
jmp
arpl
jge
insl
mov
cmp
test
aad
xor
jnp
outsl
lea
sub
or
pop
mov
mov
mov
jg
xchg
push
mov
sub
daa
shlb
fsts
add
push
rorb
ret
js
imul
data16
push
adc
pop
in
add
aam
repz
rcrb
sarl
add
adc
and
xor
arpl
xchg
jge
insl
mov
ret
or
repz
int
std
and
xor
arpl
inc
lock
lahf
outsb
pop
das
rcr
ret
and
push
test
or
fldenv
add
cmp
mov
dec
inc
push
jge
out
lret
cmp
mov
es
loope
cmp
or
push
cmc
mov
fldenv
js
sub
pop
jno
xchg
push
sahf
andl
xor
sarb
mov
lret
testl
mov
into
cld
iret
mov
mov
xor
lret
cwtl
xor
jmp
pop
mov
adc
sbb
sbb
mov
sub
push
jl
mov
dec
sbb
jmp
xlat
test
jb
push
out
fildl
jae
loope
insl
or
mov
mov
lcall
and
idiv
ret
xor
jnp
sahf
or
xchg
stc
sbb
add
mov
add
bound
inc
popa
movsl
dec
stos
in
push
call
mov
shl
lods
mov
dec
fdivrl
mov
pop
inc
push
adc
lret
add
mov
dec
loopne
std
nop
mov
fs
insb
pop
lea
xor
loope
loopne
adc
aaa
repz
jl
cwtl
mov
pop
rcll
and
dec
cmp
arpl
sbb
dec
push
mov
mov
cmpsl
ret
popl
dec
call
sub
adc
cmp
insl
pop
pop
mov
xchg
fldl
mov
sbb
mov
iret
jb
outsl
icebp
addr16
je
mov
and
jo
mov
stos
nop
int
mov
pop
cli
inc
and
icebp
add
adc
inc
pop
push
mov
mov
lret
pop
mull
jg
int3
push
or
nop
mov
pushl
sub
push
inc
jl
mov
xchg
scas
imul
test
or
push
dec
or
sti
mov
mov
outsl
mov
sti
jne
sbb
addr16
mov
jo
fs
ds
mov
inc
rcrl
pop
jl
push
mov
daa
ret
int3
sbbb
mov
in
stc
or
mov
add
adc
aam
push
aas
das
or
sbb
inc
pop
insl
repz
cmp
sbb
or
mov
dec
or
imul
pop
decb
sbb
gs
xor
testb
add
inc
mov
sahf
cmp
ret
sti
xor
cs
xchg
jle
je
pop
sbb
xchg
loopne
sbb
pop
cwtl
jno
in
sbb
or
mov
sbb
mov
dec
inc
in
or
bound
jnp
mulb
jnp
xor
mov
jnp
mov
sbb
push
nop
rcrb
mov
andb
sahf
push
leave
les
cmp
sbb
insl
dec
adc
sahf
mov
dec
or
push
add
push
sub
inc
cld
data16
lret
and
push
fldenv
insl
ret
lcall
dec
insb
dec
pop
icebp
jns
outsb
cmp
cld
or
sti
les
sub
sbb
mov
shl
test
cmp
mov
add
xor
in
inc
inc
mov
hlt
cs
gs
lcall
mov
pop
jnp
pop
pop
jecxz
xor
inc
pop
add
out
cmpsb
inc
int3
xor
jecxz
mov
inc
mov
mov
cmpsl
movsl
push
mov
movsb
and
cltd
aam
pop
imull
pop
lods
addr16
je
pop
xor
xchg
mov
int
inc
outsb
adc
sbb
cmc
push
inc
rcll
aad
fs
es
iret
xor
mov
push
mov
adc
xchg
xor
inc
jmp
out
dec
cmp
inc
stos
dec
cmc
insb
adc
sahf
cmp
scas
jno
or
pop
dec
test
jbe
hlt
xor
rorl
mov
cmp
cmc
pusha
dec
sbb
or
outsl
insl
push
sbb
aaa
mov
xor
jbe
test
xlat
cld
push
lods
fwait
cmp
dec
loop
les
push
adc
mov
xchg
mov
xchg
mov
mul
and
ja
popa
mov
scas
out
sbb
cli
repz
jl
in
jno
stc
stos
test
ljmp
push
xchg
cwtl
jmp
jo
or
leave
sub
sbb
mov
jp
lds
loop
cmp
out
mov
das
pop
sub
iret
jge
into
test
es
std
aaa
call
xlat
hlt
jmp
inc
mov
adc
sti
dec
rcl
pop
push
gs
fistl
movb
pop
adc
mov
mov
mov
or
popa
repnz
aam
adc
xor
adc
or
xchg
orb
aaa
lcall
sub
dec
into
nop
mov
in
negb
jbe
outsl
pop
in
push
and
lods
mov
jg
or
std
hlt
nop
and
mov
mov
jle
mov
mov
out
jmp
dec
mov
imul
mov
pop
stos
inc
mov
in
test
aas
out
mov
cmp
sahf
xor
es
dec
sbbl
inc
inc
inc
mov
aad
rorl
enter
int
fldenv
or
fsub
ret
sub
cmp
fdivs
mov
cltd
sbb
or
sub
rcrb
mov
or
sti
mov
fs
lcall
mov
and
xchg
jle
jmp
add
movsl
add
pusha
pusha
sti
lcall
ljmp
in
movsb
popf
ljmp
and
push
out
mov
sub
inc
sub
scas
push
cli
xor
cmp
or
add
jo
lcall
inc
hlt
sbb
jno
xchg
or
fwait
lret
in
xchg
mov
pop
xchg
sub
notl
push
aaa
mov
jge
lret
sbb
sti
movsl
xor
push
lods
int
xchg
pop
addl
fcoml
es
pop
inc
adc
and
mov
dec
idivl
pop
enter
jb
sub
int
xor
gs
sub
rcl
sarl
outsl
aam
sub
sbb
outsb
fs
mov
into
mov
mov
pop
lahf
cld
shlb
mov
mov
sbb
or
fbld
mov
shl
inc
xchg
sub
dec
mov
stos
fimull
pop
lods
imul
sbb
pop
in
add
mov
fld
dec
jo
xchg
ja
push
mov
call
pop
inc
std
push
mov
enter
fidivrs
lds
pop
les
push
inc
aam
inc
mov
and
cmc
aam
je
test
daa
push
ret
leave
cwtl
inc
je
lods
out
pushf
in
or
push
mov
jno
sbb
push
andl
dec
add
into
scas
cmpsb
in
ja
cwtl
cmpsl
xchg
addr16
mov
test
dec
into
out
or
ljmp
dec
dec
fwait
and
pop
outsb
mov
and
mov
push
pop
shll
mov
or
ficoml
push
pop
fscale
dec
hlt
popf
mov
mov
mov
pop
pop
jae
in
fnstcw
pushf
sahf
test
pop
push
imul
sub
leave
or
push
mov
iret
add
popf
sbb
push
fists
loopne
ljmp
fdivl
pop
fisubs
lods
cmp
or
mov
stos
das
bound
jnp
inc
nop
inc
jnp
in
inc
sub
xchg
ds
and
xchg
mov
jge
jnp
bound
dec
xchg
adc
jmp
movsl
outsb
adc
push
sbb
push
mov
push
shl
mov
fwait
cwtl
sbb
adc
inc
or
das
dec
xor
sbb
adc
sub
shlb
cld
imul
in
aam
inc
fsts
cwtl
popa
scas
pop
lcall
pusha
ss
xlat
mov
les
fnstenv
mov
mov
fwait
int3
xor
fwait
jnp
fldl
pop
sub
xor
xor
addl
jo
nop
mov
mov
mov
sbb
mov
xor
inc
outsb
mov
jne
mov
xchg
push
test
xor
mov
leave
jg
pop
cmp
sbb
inc
pop
idivl
insb
cmp
shll
or
stos
mov
shrl
lods
aad
mov
jl
movsb
loope
lret
insl
cmp
call
mov
leave
xor
in
cmp
pop
insl
sub
adc
jnp
aaa
mov
pop
pmulhw
jmp
pop
leave
lods
jo
mov
mov
xor
ljmp
sub
adc
pop
fchs
xor
enter
iret
sahf
xlat
push
xor
jle
sahf
or
push
es
mov
xlat
inc
in
fcmovnu
or
push
mov
mov
adc
out
jns
adc
mov
leave
xchg
aas
jae
jp
adc
jp
sub
popw
jns
mov
jmp
pop
mov
add
idivl
or
jnp
sti
xlat
and
das
sbb
mov
fucom
ret
sub
ljmp
mov
jns
mov
xchg
xor
cmc
cld
mov
pusha
roll
out
rcr
aas
repz
mov
repnz
ficomps
rorb
inc
jb
fnstenv
aaa
inc
sbb
into
mov
mov
inc
orb
lds
inc
cld
push
mov
popa
aaa
xchg
in
std
and
clc
aas
aaa
push
dec
leave
xor
ja
jae
subb
not
xchg
inc
push
or
jmp
jecxz
inc
push
das
and
adc
es
adc
cs
xchg
lock
cmp
aaa
xlat
dec
xchg
daa
mov
lret
push
pop
dec
insl
clc
mov
mov
je
xchg
cs
mov
dec
bound
jg
and
xchg
mov
mov
sbb
mov
outsb
adc
test
movsb
imul
mov
fcoms
inc
pop
in
xchg
push
addr16
push
or
sub
and
pop
rclb
adc
xchg
add
mov
out
mov
sub
sbb
dec
repz
xchg
xchg
pop
mov
xor
insl
xchg
jae
lcall
sbb
pop
sbb
cli
dec
jae
xchg
inc
add
aas
add
push
jmp
sub
mov
scas
leave
or
incb
jo
int3
mov
sbb
xchg
ficomps
dec
push
arpl
lret
push
repz
mov
xchg
lahf
leave
sub
inc
xchg
andb
aas
movsl
daa
and
sahf
lcall
ss
cwtl
jp
inc
cmp
xor
lock
xor
sbb
cwtl
mov
fwait
into
jno
movsl
inc
cld
mov
adc
mov
cmc
or
pop
push
xchg
cli
xor
daa
and
xchg
out
push
xchg
mov
and
lods
or
ss
outsl
pop
icebp
cmc
outsl
insl
add
ja
lcall
gs
push
pushf
sub
jno
enter
jbe
sahf
add
test
negl
push
push
jns
xor
cmpsl
pop
pop
cmp
sub
pusha
adcl
int3
inc
lds
inc
sub
cmpsb
jg
jne
add
mov
call
adc
fs
cmp
pushf
pop
outsl
or
push
imul
mov
repnz
mov
mov
arpl
shr
add
mov
add
push
xor
push
jb
push
xor
aas
pusha
dec
adc
and
sahf
repz
jns
sbb
push
enter
mov
jb
jns
or
mov
call
dec
inc
sbbb
pop
lret
jp
sub
ss
pusha
in
and
sbb
lods
loopne
loop
hlt
push
push
add
dec
jmp
cs
lret
dec
mov
lret
mov
stos
test
incl
lret
or
or
sub
inc
loopne
sub
add
das
dec
movsl
mov
imul
fnstcw
into
mov
clc
mov
xchg
fs
bound
sbb
movsl
insb
or
push
fdivp
xchg
xchg
das
sub
jo
inc
ret
lcall
mov
in
mov
and
cmp
mov
lods
in
fstpt
sbb
xchg
jbe
insb
loop
mov
std
rcr
jo
movsb
lods
add
aas
pop
test
add
cmp
xlat
imul
or
int
jns
adc
int3
pushf
mov
mov
sarl
pop
mov
mov
fildl
int
jnp
arpl
mov
push
enter
int3
cmp
fnstcw
sub
outsl
sub
decb
pop
ds
rorl
cmp
or
cmp
push
adcl
push
lods
out
xchg
cwtl
lods
aad
mov
sbb
fcomi
push
and
test
sarb
rcll
xchg
mov
xchg
dec
jmp
imul
and
lcall
ret
imul
jns
dec
xchg
int
pop
jbe
adc
pusha
jns
pop
sti
test
or
je
outsb
les
add
xor
gs
sti
ds
dec
repz
cmp
adc
push
ja
adc
fisttpl
notl
scas
sbb
stc
xchg
inc
pop
rcrb
cmp
xchg
push
add
push
jecxz
adc
outsb
repz
inc
inc
ja
add
cmpsl
cmp
loop
adc
adc
adc
out
leave
jns
test
rol
sub
mov
outsl
enter
mov
in
sbb
lahf
push
push
cli
jl
sub
aad
cld
mov
inc
inc
sbb
sbb
fwait
je
inc
xchg
push
adc
mov
pop
mov
jmp
and
mov
repz
lods
dec
sub
dec
ljmp
push
mov
xchg
and
or
mov
lods
stc
mov
inc
les
or
pop
adc
jl
cmp
inc
xchg
stc
lock
push
mov
data16
sti
pop
mov
ds
mov
mov
lahf
cmp
jge
enter
out
dec
cwtl
pop
imul
shrb
cmp
pusha
sub
jbe
ljmp
push
jb
pop
out
and
out
inc
loope
and
lds
jmp
sbb
or
push
xor
push
add
ljmp
and
test
leave
rclb
mov
shl
das
and
sub
cli
add
dec
ja
cmpsl
add
dec
divb
cmp
xchg
xchg
jg
fsubr
cld
jno
jg
cld
pop
pop
xchg
cs
sbb
and
orb
xchg
dec
sub
push
cld
pop
mov
and
mov
js
out
mov
mov
jne
sbb
xlat
xchg
push
call
mov
addr16
imul
pop
clc
xchg
sar
push
pop
xor
jp
lret
mov
aam
adc
pop
imul
outsb
and
push
scas
lcall
roll
aaa
out
xchg
pop
je
or
popf
adc
insl
fdivrs
add
fisubs
cmp
dec
imul
and
repz
loopne
inc
lock
negl
ds
scas
psllw
adc
cmp
lret
cltd
sub
aad
scas
repnz
cmp
negl
fucomi
in
ret
repz
jle
mov
xorl
jge
xchg
cmpb
pop
insl
jge
jne
nop
out
xchg
mov
mov
xchg
jle
push
adc
jns
sbb
push
xlat
mov
push
cmp
push
xchg
sbb
insb
jecxz
mov
mov
imul
adc
jb
mull
outsb
sbb
sub
scas
xor
jo
popa
lret
dec
cmp
stos
jae
push
jae
sbb
xchg
insl
roll
inc
icebp
xor
jmp
add
movsl
mov
adc
inc
out
out
inc
and
add
mov
mov
push
push
and
std
xlat
jp
ja
mov
mov
xor
push
aad
popa
lock
push
insl
ret
push
jo
inc
jae
xchg
jp
inc
mov
dec
inc
mov
lods
daa
pushf
lcall
add
lret
into
aam
inc
push
push
mov
lret
xadd
loop
add
sub
mov
cmp
xchg
xchg
xchg
nop
jmp
gs
mov
dec
lock
sbb
mov
rcr
mov
lahf
movsl
jne
ja
enter
ret
mov
dec
aaa
ret
outsl
cmpsl
aas
pushf
sbb
in
das
fcoms
mov
das
inc
mov
ret
push
test
lahf
mov
stos
sbb
lcall
mov
mov
push
mov
push
jl
bound
jns
jecxz
sbb
xor
push
mov
andl
in
lea
in
pop
outsl
cmc
imul
mov
mov
xor
mov
test
xchg
lret
je
js
add
lahf
out
into
mov
je
sbb
fldl
cmp
aaa
gs
popl
sub
movsb
mov
dec
mov
idiv
insb
pop
lods
inc
out
fmull
push
add
jae
in
xor
shlb
jl
out
add
dec
lods
addl
int3
out
cmp
pop
idivb
pop
adc
test
add
je
ljmp
scas
shr
mov
dec
repz
dec
and
and
test
sub
ret
xor
jnp
outsb
dec
mov
out
lret
in
es
pop
sbb
adc
clc
dec
and
dec
push
lret
std
outsb
loop
xor
outsl
and
sub
test
aad
add
mov
pop
dec
mov
add
cltd
fisttps
dec
sti
mov
push
mov
negl
aad
pop
std
push
pop
mov
int
repnz
cmp
inc
xlat
jns
dec
bound
dec
fucomi
aaa
sub
inc
xchg
scas
xor
jecxz
imul
fs
adc
test
ficomps
mov
cmp
sbb
outsb
movsb
dec
push
dec
push
insl
leave
sbb
sbb
jmp
mov
aas
and
jo
in
movsl
inc
cmpsb
cmp
pop
loop
popf
xor
push
ret
mov
sub
fdiv
push
lods
lret
pop
pop
cmp
jecxz
popa
mov
and
repnz
or
imul
scas
clc
push
and
rcr
sub
push
fcmovne
loope
push
jnp
push
cmp
or
shlb
push
test
and
xor
scas
mov
gs
mov
call
mov
js
rcrl
ficompl
dec
cmpsb
and
mov
lods
inc
dec
shrb
fdiv
push
test
inc
stos
imul
adc
std
xchg
jg
mov
in
addr16
lods
call
jge
addr16
or
cwtl
mov
aad
ret
sbb
mov
in
add
lahf
xchg
xor
fs
cld
ljmp
sbb
adc
mov
frstor
jae
mov
cmp
xchg
xorb
pusha
mov
dec
mov
rcrl
add
fildll
test
xchg
daa
and
insb
movl
cmp
sahf
in
push
jge
lahf
mov
std
div
ficomps
jne
test
xchg
push
ret
ja
ljmp
push
lcall
cltd
push
jb
mov
pop
jmp
je
rolb
scas
sar
scas
xor
xlat
mov
xor
in
insl
mov
sub
jo
xchg
jge
push
arpl
sbb
or
enter
jmp
je
adc
loopne
std
cmp
xor
insb
nop
mov
inc
nop
in
mov
or
mov
mov
test
aad
xchg
popa
xchg
shl
das
pushf
jnp
rolb
jge
loopne
out
push
shll
scas
lcall
and
out
lea
mov
mull
and
xor
mov
popf
adc
jns
adc
jno
xchg
gs
mov
adcb
inc
ret
or
inc
adc
or
jae
lock
int3
jae
push
ja
je
cmp
pop
ficoml
cmp
ret
mov
inc
and
or
cmpsl
mov
dec
das
fnsave
mov
jnp
aam
enter
test
js
fcmovbe
cmp
fdivl
insb
inc
push
andl
aaa
dec
jge
cmp
inc
push
or
shl
mov
dec
cmc
dec
jp
jns
test
cmp
jmp
cmp
xlat
cmpsb
add
push
fldenv
imul
or
and
jno
lcall
and
pop
pusha
lea
cltd
cwtl
add
fstps
lods
andl
add
pop
add
adc
add
pop
imull
mov
cmpsb
mov
movsb
push
mov
sub
rorb
test
and
xchg
xchg
cmc
push
xchg
sbb
add
scas
out
xchg
sbb
pop
or
xchg
pop
out
leave
jg
int3
xchg
test
clc
inc
inc
leave
push
xchg
iret
adc
fstl
ljmp
iret
jae
lahf
fwait
mov
leave
outsl
rcrb
stos
cmp
out
dec
rcr
sbb
clc
and
sbb
out
mov
iret
mov
mov
movsl
mov
xchg
xchg
push
pop
pop
daa
jbe
dec
inc
adc
testb
mov
fstpl
pop
jge
add
aam
xor
cmpsb
outsl
sub
cmc
dec
dec
mov
xchg
int3
es
push
ljmp
add
push
outsb
sbbb
push
sub
lea
out
cwtl
mov
push
xchg
pop
stc
adc
test
lods
and
push
mov
rol
xor
addr16
sbb
hlt
fs
cmp
dec
or
adc
mov
fwait
les
xchg
ss
mov
loop
iret
dec
and
fs
lahf
rcr
ja
shrb
ss
daa
into
sub
ficomps
loopne
sbb
ljmp
shlb
add
insl
lahf
or
push
scas
adc
movsl
dec
inc
lret
sti
inc
xor
std
ljmp
mov
imul
cmp
fs
pop
cmp
mov
jbe
emms
iret
pop
and
arpl
adc
cs
dec
dec
adc
push
sub
xor
insb
lods
or
lcall
rclb
sbb
jecxz
repz
int
std
and
xor
arpl
xchg
jge
insl
mov
ret
or
repz
int
std
and
xor
arpl
fstpt
insl
mov
ret
or
repz
int
std
and
xor
inc
lods
jae
orl
insl
mov
ret
or
repz
int
push
and
inc
ljmp
mov
int3
int3
int3
int3
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
test
pusha
ret
jo
push
sarb
jae
xor
shlb
loopne
lock
add
jecxz
ret
jo
add
xor
arpl
aaa
loopne
lock
add
lret
pusha
add
xor
push
lock
outsb
hlt
pusha
lds
addl
lahf
add
pushf
mov
and
mov
fwait
test
xchg
dec
sbb
or
repz
outsb
adc
jno
je
pop
out
arpl
cmp
loopne
icebp
popl
sbb
mov
jecxz
lcall
fwait
andl
pushf
cs
mov
mov
and
dec
fs
add
pusha
inc
repz
push
push
pop
movzbl
jo
push
pop
ljmp
mov
jecxz
arpl
sbb
data16
pushf
roll
inc
ret
cltd
dec
and
sahf
mov
jecxz
pushf
popa
dec
add
jae
test
mov
pushf
shrl
fs
mov
inc
jecxz
shll
jo
add
xor
jnp
dec
loopne
lock
sbb
subb
xlat
outsl
into
push
xchg
inc
out
inc
pop
lods
arpl
pop
in
inc
jmp
repz
sbb
gs
decl
xor
arpl
out
push
jmp
add
lcall
add
insb
mov
xor
arpl
push
loopne
lock
add
shll
jo
add
xor
arpl
push
loopne
lock
add
mov
xor
push
mov
dec
mov
push
mov
repz
xor
sbb
imul
aam
cmpsl
mov
inc
std
movsb
adc
lods
or
addb
sti
jnp
repnz
sub
push
das
mov
cmc
jge
xchg
mov
insb
pop
lods
xchg
into
cmpsb
sub
cmpsl
pop
in
sahf
dec
mov
pop
shlb
int
xchg
pushf
insl
sub
jl
leave
pop
or
scas
adc
mov
cs
cmp
pop
popf
pusha
inc
stc
faddp
imul
and
mov
xchg
cwtl
cmp
mov
dec
out
or
rcll
or
jno
mov
mov
and
push
push
sub
hlt
sbb
clc
cmp
sahf
pop
std
add
pop
fs
pop
or
loope
inc
adc
notb
mov
dec
insl
out
pop
outsb
nop
psubw
dec
outsl
mov
pop
fcmovbe
and
sbb
into
lods
pop
pop
popf
enter
repnz
cmp
xchg
xor
push
aaa
push
jmp
punpckldq
push
fucomip
dec
rcl
xor
add
dec
mov
imul
dec
into
mov
ljmp
mov
inc
lock
out
ss
xchg
mov
jp
fwait
popf
add
mov
mov
pop
andl
test
and
int
cld
addr16
push
mov
jae
xchg
add
ljmp
mov
cmpsl
dec
mov
mov
push
ds
pop
out
movsl
int
xchg
rcr
cltd
cmpsb
xchg
push
or
js
cmp
jle
int
jl
adc
xchg
xchg
les
push
je
mov
cmp
xor
dec
dec
add
push
add
lods
pop
sahf
sbb
sub
cmp
dec
mov
int3
mov
inc
arpl
mov
jmp
mov
pop
test
pop
addl
out
mov
add
or
xor
aad
or
scas
dec
loopne
sbb
mov
mov
lds
daa
test
cwtl
gs
cmp
mov
jns
add
mov
xlat
jb
ja
lods
in
and
dec
dec
lret
adc
lcall
lea
test
loope
in
data16
or
call
adc
fisubl
cmp
mov
call
xor
subl
jmp
sbb
xor
frstor
out
popf
sbb
cmpsb
push
jg
mov
mov
mov
clc
jl
dec
mov
nop
cli
jne
push
call
mov
lods
dec
dec
push
xchg
jbe
stos
push
add
jg
xchg
daa
push
mov
adc
test
lcall
dec
add
ret
scas
xor
sbb
xor
sbb
add
mov
jecxz
mov
push
cmp
outsb
std
shlb
subl
fucomp
pop
call
pushf
xor
mov
lahf
out
adc
repz
nop
arpl
add
jbe
inc
adc
dec
lcall
mov
pusha
mov
iret
in
xor
sub
mov
sub
std
adc
aaa
mov
movsb
push
and
mov
push
dec
mov
outsl
dec
fcompl
push
repnz
mov
jl
add
lahf
imul
int3
push
jno
mov
lods
aaa
aam
test
pop
mov
mov
aas
pop
xchg
mov
push
fimull
inc
mov
shll
stos
neg
mov
xchg
cmp
adc
push
jne
inc
dec
lods
imul
mov
mov
adc
ja
test
mov
pop
mov
sub
sbb
mov
push
mov
dec
pop
pop
add
push
lds
mov
inc
test
cmc
mov
sbb
or
repnz
and
adc
pop
push
xor
sbb
sub
pop
std
sti
push
movb
divl
pop
popf
xor
or
rorb
mov
in
xchg
adc
jmp
arpl
and
pop
mov
and
fistpll
jg
push
shrb
lret
mov
and
jnp
mov
cmp
insl
lret
or
jbe
sti
movsl
hlt
add
cwtl
adc
sbb
nop
loopne
mov
xchg
xchg
inc
frstor
pop
mov
or
clc
lahf
cmp
mov
scas
pusha
jne
lea
mov
jecxz
push
or
pop
and
lea
adc
ss
imul
cli
mov
adc
xor
mov
scas
dec
pushl
scas
scas
loop
add
test
pushf
icebp
sbb
push
dec
repz
mov
inc
push
sbb
scas
pop
add
mov
cmpsb
scas
out
jnp
rorl
xchg
scas
mov
aad
dec
pop
jne
jl
dec
sub
jmp
inc
lods
pushf
out
mov
imul
xchg
add
in
jmp
call
iret
xor
outsl
or
sub
add
cmp
pop
popa
mov
div
sbb
add
mov
jnp
ffreep
insl
add
inc
cmp
aaa
outsl
mov
enter
sahf
dec
lea
push
mov
mov
imul
int
dec
sbb
out
insb
push
mul
push
repz
push
testl
movsb
mov
and
pop
push
adc
pop
jp
or
aam
sbb
pop
push
das
cmp
cmc
ja
out
mov
rorl
sbb
jne
push
pop
in
sahf
and
add
mov
add
fadd
bound
jp
or
mov
and
imul
push
nop
push
leave
mov
arpl
loop
inc
out
push
aas
fwait
push
push
jg
les
cs
or
jmp
or
sub
repz
cmc
test
lret
orl
pushf
jp
mov
popl
xchg
inc
ret
out
rorb
mov
sbb
fildll
jns
and
sub
mov
pop
in
stc
pop
jno
inc
in
mov
pop
jno
or
repz
cli
jmp
mov
int
mov
mul
rorb
cmp
clc
sub
stos
aam
mov
inc
fstpt
sub
mov
cmp
incb
es
addr16
out
mov
and
cli
andb
mov
adc
stos
int
mull
subb
cmp
das
inc
fs
push
and
add
add
stc
mov
mov
insb
orb
pushf
pop
lahf
jno
xor
pop
mov
aad
test
fabs
inc
pop
loop
push
stc
cmpsl
cmp
xchg
and
aam
jo
mov
sti
in
cmpsl
ja
out
mov
xchg
in
xchg
lods
push
or
imul
push
rcr
popa
sub
pop
into
es
inc
or
addr16
ja
outsb
fisttps
or
push
cmp
inc
dec
push
sub
out
xor
mov
out
jle
inc
inc
bound
pop
test
clc
sub
mov
add
jns
stc
andl
mov
pop
cmp
add
xchg
jae
in
shll
lea
repnz
out
dec
pop
pusha
and
sub
push
addb
repnz
clc
pop
adc
je
cmp
mov
int
add
aaa
xlat
inc
fsubl
lcall
adc
xchg
jno,pn
inc
xchg
jb
mov
add
sub
mov
cltd
xorb
push
ja
ja
call
ret
test
shlb
push
stc
fchs
jge
inc
pop
lds
cld
fstps
mov
mov
dec
cmpsl
sbb
out
aas
cmp
and
cmc
dec
imull
outsb
push
lds
cmpsl
popf
out
data16
dec
ficompl
xchg
sub
add
mov
jmp
mov
rolb
mov
shrl
test
pop
gs
dec
repnz
add
mov
enter
xchg
mov
pop
lret
sub
sar
jno
movsb
push
in
xchg
imul
fstpl
mov
adc
push
push
cmp
lahf
and
sub
andl
bnd
sub
cmpsl
mov
movsb
mov
filds
ret
add
xchg
cmpsb
ficompl
iret
imul
dec
stc
ret
test
aam
test
pop
aas
loopne
pop
xchg
int
mov
pop
addb
ret
mov
mov
xchg
movsb
xor
xchg
pop
jmp
inc
xor
cmp
arpl
lcall
out
sahf
repz
lahf
ljmp
clc
add
jp
lret
push
mov
js
ja
adc
ror
inc
sbb
pop
or
pop
mov
testb
inc
cmpsl
mov
scas
jnp
fcomps
mov
dec
filds
out
leave
aam
xchg
mov
insl
gs
fistps
ret
dec
call
sarl
repz
jo
dec
add
mov
pop
jl
ss
sub
cmp
xor
add
scas
xor
mov
mov
xchg
jl
xchg
sub
lcall
mov
lret
push
jae
add
adc
add
imulb
nop
lahf
mov
pop
outsb
cwtl
add
test
out
lret
dec
mov
addr16
lds
stos
pop
xor
ss
lock
mov
sbb
dec
leave
ret
test
sbb
rclb
and
mov
outsb
sbb
lret
ret
jge
shll
mov
or
dec
xor
fstpt
fwait
pop
rcll
xchg
in
inc
dec
dec
je
jp
jb
fcoml
sbb
sbb
cmp
dec
fisttps
push
inc
fbstp
or
jb
stos
mov
outsb
mov
push
mov
in
stos
jae
rcr
push
cmp
push
push
dec
push
mov
cmp
lea
sub
loope
ret
in
sub
jb
aam
je
pop
fidivrl
je
sar
repz
jmp
xchg
cltd
negb
xchg
popf
inc
bound
hlt
outsb
push
dec
sti
pop
dec
xchg
cmpsl
mov
movsb
xchg
and
dec
inc
jle
outsl
lea
in
in
push
dec
xor
out
jg
push
fidivl
xor
lods
jb
aas
xor
stos
scas
imul
insl
cmp
imul
imul
xor
shlb
or
fistl
inc
cltd
xchg
pop
ljmp
pop
jne
push
push
inc
lods
mov
mov
sbbb
or
mov
ds
adc
pop
je
jnp
movsb
inc
xchg
int3
sbb
scas
in
movsl
fcoms
int3
aaa
imul
cmp
mov
sub
dec
flds
dec
mov
add
bound
and
or
sub
and
xor
cmpsb
jle
push
inc
test
inc
sbb
stc
repnz
jl
mov
adc
and
mov
cmp
lahf
enter
jae
lret
dec
cmpsl
cmpsb
xchg
or
xchg
cmp
daa
iret
mov
fs
lahf
jmp
sub
bound
jecxz,pt
pushf
outsb
sub
out
clc
nop
and
xchg
push
sub
shll
xorl
mov
sbb
test
jo
data16
lret
adc
cmpsl
and
leave
adc
mov
mov
mov
stc
ja
xchg
add
imul
out
dec
mov
adc
inc
xchg
loop
add
add
aaa
lcall
pop
test
mov
xor
cmpl
adc
inc
or
mov
aad
mov
and
sub
push
sbb
and
jmp
cmpsb
mov
aaa
cld
jp
pusha
xor
mov
dec
cmp
nop
xor
xchg
add
xchg
xor
stos
cwtl
clc
push
repnz
sahf
jb
repnz
inc
popa
or
jnp
test
mov
clc
sub
stc
outsb
aad
push
enter
or
bound
add
rcrl
arpl
negl
stos
je
add
mov
push
xor
mov
add
lods
lock
nop
stos
jno
sub
setb
mov
fdivp
mov
jp
mov
cld
add
inc
shrb
sub
pop
xor
sub
push
popa
or
xor
xchg
xlat
mov
sbb
jle
or
ljmp
fadds
cltd
mov
icebp
cwtl
loope
out
icebp
nop
adc
addl
adc
sub
or
ret
sarl
xchg
lret
dec
xchg
add
push
fisubrl
pop
sbb
hlt
mov
mov
xchg
push
mov
in
repnz
and
dec
lcall
arpl
dec
rcll
mov
or
popa
lahf
inc
xchg
stos
xorl
pop
nop
sbb
xchg
sbb
in
aam
iret
xor
lock
stos
pop
repz
pop
or
mov
inc
sub
adc
and
dec
loopne
and
cmp
adc
test
mov
dec
add
sub
pop
adc
stc
xchg
lcall
sub
daa
cli
pop
bnd
out
mov
enter
movsl
adc
je
js
js
xchg
push
inc
mov
xchg
mov
dec
bound
popf
lcall
mov
mov
cmp
fs
lods
and
jp
neg
cli
jne
enter
mov
imul
mov
and
stc
ret
repnz
into
inc
repnz
push
pusha
fcmovb
mov
pushw
movsl
icebp
dec
mov
aam
cmp
mov
mov
aam
xchg
jmp
pop
loope
rorl
imul
mov
xchg
mov
mov
xor
mov
xlat
push
mov
sbb
mov
push
pop
push
test
mov
out
fstpt
cmp
jmp
rcrl
sub
lods
push
insl
cmp
int3
and
dec
adc
jno
imul
js
das
xchg
xor
loope
mov
aad
push
call
sbb
xor
lea
mov
xor
adc
push
fisubrs
inc
test
in
add
stos
lcall
js
xchg
and
adc
cmp
mov
adc
dec
ret
call
xchg
pop
add
adc
rcl
sbb
dec
mov
xchg
loop
mov
movsl
jle
and
fdivrs
dec
xor
pop
and
imul
push
and
movsb
fnsave
mov
pop
pop
jl
popa
lds
insl
out
and
push
xchg
cmp
jbe
fwait
mov
pop
push
inc
mov
gs
fmuls
sub
out
movsl
pushf
pop
pop
ret
es
push
dec
xchg
jae
dec
inc
aas
jle
cmpsl
inc
push
push
sbb
int3
xchg
test
dec
dec
adc
rcr
jmp
pop
xchg
xorl
mov
sbb
jmp
mov
pop
ret
mov
dec
inc
pop
repnz
xor
cmpsb
xchg
cmp
and
xchg
popw
shlb
cs
mov
loop
aam
adc
cmpsl
int3
push
outsl
jbe
dec
push
sbb
jae
dec
mov
test
sub
int3
inc
jbe
sbb
jns
lret
jnp
mov
loopne
pushf
jb
test
sub
and
lods
repnz
adc
dec
lock
or
pop
pop
imul
pop
xor
push
fwait
dec
xor
shrb
imul
xchg
mov
xchg
pop
and
sub
ror
stc
test
inc
mov
mov
cli
xor
insb
jb
ja,pt
push
cmpsl
pop
sub
cs
fstp
mov
xchg
push
or
mov
imul
cmpb
pop
ljmp
int3
cwtl
fdivl
sbb
sub
js
or
clc
inc
pop
add
aaa
and
or
xchg
fwait
cmpps
jmpw
outsb
movsl
in
and
add
pop
test
dec
pop
dec
mov
or
test
rcll
stos
xor
aad
stos
push
xor
repz
icebp
xchg
mov
addr16
movsb
jle
xor
dec
add
add
loopne
test
add
mov
mov
and
leave
jg
xor
in
aad
into
lock
push
leave
je
and
mov
inc
mov
or
and
inc
add
in
cwtl
cld
jno
push
jg
xchg
enter
nopl
mov
fidivrl
dec
fwait
push
sub
mov
sbb
or
test
sahf
imul
adc
jg
imul
jbe
lods
pop
push
dec
fnsave
cwtl
icebp
test
adc
repz
imul
and
mov
pop
ficoml
jmp
aaa
push
popa
inc
or
mov
push
add
cs
scas
xchg
push
xchg
jg
fdivrl
jmp
testb
imul
lret
cli
hlt
or
dec
repz
cmp
aas
lock
dec
int3
cwtl
aas
pop
cld
dec
cmpl
ss
iret
repnz
sbb
inc
jno
stc
insb
adc
int
bound
int3
push
xchg
pop
mov
insl
out
jne
or
or
data16
out
call
jae
push
push
rol
icebp
push
lret
shll
mov
pop
fwait
movsl
insb
andl
add
in
aad
arpl
int3
nop
xchg
fbld
les
lcall
js
mov
mov
scas
xchg
xor
jecxz
push
pop
sbb
loope
lcall
fdivr
push
sbb
adc
test
and
and
or
das
push
imul
insl
in
shll
mov
lods
out
xchg
call
mov
pop
add
or
and
stos
add
out
adc
add
xor
adc
xor
xor
push
sbb
loop
shrl
loopne
cli
push
sub
in
mov
mov
jge
lea
push
movsl
mov
fiadds
cli
inc
mov
add
test
jmp
subl
inc
or
addb
mov
fs
icebp
cld
fs
lods
or
or
in
addr16
pushfw
iret
arpl
in
sbb
sbb
xor
lsl
jb
inc
rorb
add
dec
aad
push
and
add
jne
and
repz
and
cwtl
sub
adc
mov
inc
mov
fldcw
jle
filds
movl
mov
das
jne
xor
cmp
inc
cmpsl
jg
mull
inc
repnz
pop
cwtl
inc
sbb
in
mov
js,pt
loop
idivl
insl
bound
or
shl
mov
enter
push
cmp
lods
sbb
cwtl
cwtl
aad
ja
push
inc
inc
mov
pushf
stos
mov
push
ret
pop
pop
jne
iret
sahf
mov
adc
clc
scas
jmp
leave
in
jno
stc
icebp
arpl
popa
and
pop
or
sbb
es
cmp
inc
sbbb
mov
adc
ret
xchg
loope
dec
mov
pop
das
xchg
clc
xchg
cli
in
call
push
xlat
test
shll
pop
sub
int
and
outsb
or
or
cs
lds
or
jl
ja
dec
sub
cwtl
jbe
faddl
jno
out
sub
pop
inc
rcrl
mov
push
jae
scas
mov
or
and
js
mov
lods
out
fisttpl
mov
xlat
cmpsb
daa
inc
stc
adc
xchg
inc
add
xlat
xor
add
xchg
mov
les
jle
jno
aam
and
adc
push
push
adc
mov
sub
ss
andb
and
dec
mov
fs
shlb
add
or
lods
aaa
adc
fidivl
shl
mov
test
dec
ss
mov
je
sub
cltd
arpl
add
lcall
les
and
pop
mov
and
addr16
out
pop
or
mov
push
leave
daa
add
aas
out
nop
mov
pushf
dec
int
xchg
insb
lret
cs
sub
mov
scas
out
jg
fimuls
mov
sbb
sub
imul
cmpsb
and
dec
mov
and
xchg
in
mov
pop
scas
push
mov
sarl
and
addb
and
add
mov
jmp
pop
sbb
mov
mov
mov
jp
pop
mov
iret
andb
ret
inc
dec
jle
sahf
xchg
jne
cmp
cwtl
ds
sbb
lds
sub
dec
test
jl
sarl
mov
sarb
inc
dec
in
mov
cmp
adc
inc
inc
sbb
lret
rcl
mov
jb
mov
addr16
out
std
add
mov
or
daa
fisubrl
jl
jno
dec
imul
ja
or
mov
fistpl
xor
xchg
int
or
xchg
popf
cmp
fdivs
fcoms
test
push
nop
nopl
insl
pop
js
fisttps
and
xchg
jmp
or
mov
mov
das
in
fwait
add
mov
dec
fldcw
enter
mov
shll
flds
dec
dec
inc
shll
or
iret
cwtl
sahf
jno
in
filds
lret
and
jle
shl
loopne
mov
xchg
andb
sbb
cs
ljmp
xchg
jo
push
push
inc
addl
fdivrl
movsl
test
enter
xchg
push
cmp
cs
pop
cmp
pop
inc
and
shlb
cmp
sbb
pop
cmp
cmp
in
bound
xchg
adc
and
xchg
outsb
mov
cmp
fwait
das
jg
inc
into
cli
xor
sbb
xchg
std
cmp
popa
sbb
xorl
jae
icebp
rcll
pop
push
sbb
dec
insl
mov
mov
rcll
cmp
inc
cli
sub
xor
jmp
mov
shl
pusha
fistpll
stos
lahf
jnp
test
rorl
xchg
popa
ret
jo
add
xor
arpl
push
loopne
lock
add
shll
jo
add
xor
arpl
push
loopne
lock
add
shll
jno
add
xor
arpl
push
loopne
lock
xor
in
ret
je
add
iret
mov
pushf
jp
loopne
xchg
outsl
in
pop
cld
dec
int3
int3
int3
int3
int3
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
inc
notb
sub
or
aaa
inc
es
jns
mov
xchg
out
idivl
cmpsl
stc
mov
inc
or
sub
pop
dec
pop
pop
daa
imul
cltd
xchg
mov
mov
cmpsl
jmp
push
sbb
ja
pop
push
pop
inc
daa
jno
arpl
push
mov
out
mov
mov
mov
push
jo
pop
add
subb
adc
lods
movsb
out
or
xchg
sub
jmp
xchg
mov
xchg
cmpsl
sub
shl
or
jno
mov
orb
fcompl
pop
pop
push
pop
pop
sbb
mov
cmp
fstps
fld
pop
ja
add
sbb
sub
or
imul
xchg
fld
pushw
roll
lcall
mov
dec
fnstcw
ss
add
cltd
imul
jle
or
mov
stc
and
xchg
repnz
mov
xchg
mov
test
cmpsl
push
fucomip
sbb
push
push
cmp
pop
dec
pop
pop
daa
jo
pusha
xchg
xlat
and
rcll
popf
add
add
adc
imul
aaa
inc
add
shl
test
fwait
loop
decb
inc
jno
sbb
pop
adc
cmp
daa
or
aad
cmpsb
fnsave
mov
test
jl
dec
jbe
pop
and
aaa
jns
mov
cltd
out
idivl
cmpsl
jmp
push
sbb
ja
pop
dec
pop
pop
daa
imul
cltd
out
idivl
cmpsl
jmp
repnz
fmull
push
sub
je
rcll
and
and
dec
cmpsb
or
jecxz
ftst
std
pop
js,pn
inc
mov
pushf
nop
add
mov
cmp
icebp
mul
mov
push
add
in
jle
dec
lea
jmp
repnz
push
nop
pop
xor
jb
cs
mov
sub
iret
data16
insb
inc
enter
mov
jecxz
adc
add
adc
pop
adc
jae
jae
repnz
aam
mov
add
popa
sbb
imul
dec
sub
cmpsb
lea
lock
adc
and
sbb
push
fs
sub
fnstcw
and
and
aas
lea
imulb
pusha
aas
aaa
clc
mov
dec
fwait
aaa
rcrb
ret
dec
cmp
sar
push
movsb
mov
cmpsb
or
mov
shrl
stos
add
out
jno
cli
and
mov
out
fwait
cwtl
jnp
inc
cwtl
bound
icebp
jns
mov
iret
cmp
imul
daa
jae
aas
daa
mov
imul
popf
je
mov
or
xchg
nop
pop
testb
ret
imul
cld
push
sbb
insb
test
mov
mov
sbb
ret
mov
jge
xor
add
rcl
imul
rcrb
sub
jp
test
in
das
sub
in
pop
dec
jl
jae
cmc
jl
or
cmp
jns
ds
loop
inc
push
mov
mov
jo
pop
sbb
test
enter
xchg
insl
or
popf
test
fs
movsl
and
cli
adc
pop
ja
jno
cmp
movb
push
inc
loopne
pop
push
sub
test
add
lock
aaa
sub
mov
sub
sbb
sbb
fwait
dec
xchg
push
lds
rcll
mov
mov
out
and
mov
jp
popa
dec
setbe
cs
ljmp
lods
ja
in
out
lods
lahf
insl
mul
test
in
mov
ds
xchg
mov
sub
jge
nop
inc
push
int3
in
sti
pop
in
add
push
mov
dec
bound
xchg
xlat
clc
sub
cmp
es
js
and
sbb
imul
shlb
sub
pop
leave
push
cwtl
jmp
xchg
push
dec
cmpsb
fldenv
mov
leave
push
mov
dec
shrb
call
out
ss
dec
nop
dec
ds
or
add
fldl
cmpsl
rorl
ljmp
or
or
movl
test
shll
mov
int3
mov
pop
or
mov
sub
mov
inc
sbb
stc
out
sub
rcrb
cmpb
test
push
cmp
pusha
cmc
add
push
lcall
out
push
data16
stos
pop
cmp
mov
pop
aaa
pusha
mov
cmp
push
punpckhwd
call
orl
jecxz
data16
mov
add
sub
cld
inc
push
mov
mov
imul
dec
rolb
jne
pop
jl
sub
insb
out
outsl
cmp
and
movsl
cmp
push
popa
sub
xchg
out
dec
or
rcr
mov
or
loop
pop
push
popf
mov
jge
or
cmpsb
fwait
bnd
jge
adc
sub
mov
mov
dec
mov
pop
lret
sub
stc
push
mov
jns
nop
testb
ljmp
add
or
outsb
clc
scas
orl
inc
call
cmp
push
jmp
das
insb
cmpsl
jp
sbb
shlb
mov
inc
add
mov
ja
cmpsl
sbb
push
loope
daa
jmp
aam
adc
xchg
mov
xchg
push
xchg
and
push
lea
adc
pop
inc
pop
in
inc
dec
jge
push
pop
fisubrl
and
stos
inc
imul
sbb
cmp
jne
jg
xor
adc
imul
je
addr16
movsb
in
imul
and
jg
push
or
pop
pop
xlat
lods
fisubrs
int3
in
arpl
jns
ds
dec
lea
xchg
inc
push
adc
and
in
or
fsubr
and
inc
adc
xchg
jg
jmp
dec
adcb
xor
nop
lds
dec
test
sbb
jne
dec
mov
add
dec
and
insb
jge
ret
jp
cli
cmp
cld
xor
out
or
fdivl
sub
mov
gs
push
lcall
cmc
and
mov
shrl
xchg
fcmove
inc
ret
mov
dec
lock
or
xchg
bnd
fs
sbb
mov
jae
fldt
leave
mov
push
xor
js
adc
imulb
and
cli
fdivrl
lock
addl
hlt
in
test
scas
pop
int
inc
movsl
test
stc
sti
push
xor
cmp
fldt
cli
lock
inc
out
xor
fwait
mov
dec
sarl
bnd
mov
out
out
sub
mov
repz
stos
pop
cltd
mov
test
xchg
lock
mov
jo
and
or
push
cmp
stos
xlat
sbb
fstl
aam
sahf
cld
in
ja
fsubs
decl
cltd
mov
xchg
mov
insb
xchg
cld
push
jns
sub
inc
lcall
xlat
mov
cmp
repz
xor
enter
mov
xor
div
pop
mov
loope
repz
pop
scas
inc
mov
cmp
mov
add
mov
cmpb
add
inc
repnz
inc
push
and
dec
jmp
std
sbb
pushf
fidivrs
and
imul
mov
inc
out
cmp
mov
shl
lock
lcall
jp
push
xor
mov
mov
cli
or
inc
repnz
loop
in
pop
or
fadds
insb
lea
das
sahf
sbb
inc
cmc
in
cmp
fldenv
jb
clc
pusha
leave
jg
outsl
lahf
xchg
ret
sbb
out
mov
jne
cmp
repz
call
sub
push
xlat
pop
add
adc
jae
ds
dec
cmp
lret
cld
pop
and
pop
adc
mov
lret
das
and
ja
xchg
push
in
in
jle
dec
dec
int
jbe
dec
out
rcl
adc
sub
and
mov
pop
ret
scas
xor
dec
lock
mov
inc
mov
dec
in
jnp
mov
testb
icebp
mov
fisubl
int3
and
mov
test
fdivrl
loopne
push
lea
mov
leave
stc
lods
push
sbb
gs
int
mov
movsb
dec
mov
add
stos
rorl
nop
push
ret
outsb
mov
scas
in
inc
aad
ds
scas
incl
xor
pop
mov
nop
jp
fists
lds
inc
pushf
and
repnz
cli
mov
lret
stos
addr16
jmp
mov
maskmovq
imull
push
in
push
mov
mov
sub
dec
jecxz
cmc
les
packssdw
test
cmc
add
lret
cmp
add
int3
jno
stos
les
dec
sbb
mov
test
popa
xchg
into
push
ret
mov
fcom
imul
outsl
ss
adc
pusha
sete
pop
xchg
cli
jecxz
pop
lds
pop
sti
push
fistpll
fldl
pusha
xchg
hlt
push
add
mov
sub
cmp
add
jg
inc
subb
std
fstpl
ret
inc
rcr
pop
stos
adc
testb
adc
jg
jmp
sub
adc
or
mov
nop
or
mov
sub
inc
das
mov
xor
fcom
pop
mov
and
or
sub
mov
cmp
inc
sbb
push
mov
popa
inc
inc
std
cmp
adc
push
fisubrl
mov
mov
add
dec
andl
dec
inc
fists
or
punpcklwd
xor
loopne
push
pop
es
add
pop
test
mov
cltd
cwtl
xchg
jecxz
cmc
pop
repz
adc
mov
and
mov
imul
mov
or
sbbl
sbb
repnz
dec
adc
adcb
lcall
std
in
and
push
or
xchg
xchg
decl
xor
push
and
mov
out
push
adc
sbb
adc
push
inc
and
xchg
and
pop
aam
xor
or
jp
or
rcrb
popf
sbb
jae
fwait
xchg
fsubrl
xchg
pusha
into
sbb
adc
test
sbb
jnp
inc
cmp
cmpsl
xchg
inc
in
loop
mov
cld
jp
stos
test
pop
push
pop
dec
dec
stc
add
push
cmp
pop
inc
add
push
hlt
movb
mov
negl
mov
sahf
xor
and
xchg
adc
dec
lock
push
push
or
repz
lods
aam
push
push
frstor
mov
pop
movsl
or
lods
out
add
sbb
mov
mov
add
inc
push
mov
xor
cmpsl
cmpsb
mov
push
je
cmp
incb
maskmovq
testl
push
xchg
and
add
bswap
lock
iret
out
dec
dec
mov
dec
pop
mov
xorb
dec
mov
push
daa
mov
add
mov
dec
ret
jle
mov
jbe
sar
pop
or
fsubs
cmpsl
xor
shll
pop
insl
cmp
nop
bound
imul
sub
push
mov
mov
pusha
int
lock
cmp
adc
xchg
cmp
push
int3
aad
ljmp
mov
sub
ror
sarl
leave
mov
mov
or
jp
aam
and
add
push
and
jp
das
sub
mov
pop
jp
ds
test
hlt
movsb
orl
scas
mov
xchg
add
xor
arpl
inc
fcomps
sbb
icebp
adc
mov
insb
sarb
xchg
lahf
insb
jnp
jl
cmp
inc
adc
arpl
jne
adc
push
stos
xchg
call
scas
fsubl
popf
dec
popa
xchg
bound
div
push
imul
cmp
mov
mov
or
es
icebp
xchg
mov
adc
lahf
sbb
lods
xor
lods
pop
fs
fsts
mov
and
mov
call
push
pop
sub
nop
mov
call
jne
adc
pop
sub
jge
sbb
jg
adc
stos
pusha
cltd
xor
dec
xchg
and
cwtl
xchg
movsl
rcl
enter
push
out
mov
dec
test
gs
xchg
jl
mov
pop
and
test
xor
add
mov
enter
lds
lahf
loopne
sbb
pop
xor
bound
std
dec
stos
mov
cmp
cmpsl
sbb
loop
data16
sbb
inc
insl
jo
sub
jle
dec
stos
cwtl
in
mov
adc
jp
mov
lock
sub
inc
adc
xor
sbb
in
mov
pop
add
pushf
adcb
cmpsb
pop
jo
inc
js
int
hlt
adc
icebp
xor
add
push
iret
outsb
stc
stos
imul
adc
test
pop
jbe
call
pop
fs
inc
and
mov
les
mov
or
insb
mov
rclb
addr16
push
int3
or
jmp
dec
imul
bound
mov
pop
test
add
xchg
fsubrl
mov
sbb
lcall
roll
mov
out
aad
rorl
mov
and
cmp
adc
or
rcll
jne
xor
imul
sbb
les
pop
xlat
sub
aaa
cs
in
cmp
and
sub
inc
dec
bound
scas
and
or
cmpsb
dec
fstl
inc
jno
andb
sbb
xchg
fsubrs
mov
cld
add
in
mov
aam
xlat
es
leave
test
lret
sbb
pop
notl
fwait
push
scas
lcall
jb
jns
outsb
fwait
sbb
cmp
enter
or
or
jo
and
pushf
mov
repz
xchg
jne
mov
xchg
jmp
cwtl
add
imul
pop
mov
jo
les
push
cld
clc
add
push
xchg
dec
or
js
scas
fldcw
sbb
popf
push
dec
sub
lds
jmp
mov
ret
lea
andb
mov
into
jnp
push
mov
cmp
jbe
jo
aaa
mov
lds
add
test
adc
pop
lcall
sub
dec
pop
mov
lods
cltd
jge
fcmove
cmp
pushf
test
scas
ja
or
mov
outsl
push
stos
in
or
test
and
mov
ja
ret
mov
das
mov
imul
xchg
std
ret
sub
outsl
mov
icebp
pop
xchg
fdivrs
dec
lret
and
lret
mov
iret
push
pop
jns
sub
push
add
mov
push
out
fiaddl
test
xchg
inc
jl
cmp
xchg
loop
rcrl
mov
movsl
lret
jle
fnstcw
iret
adc
adc
int3
xchg
xor
adc
stos
mov
or
mov
sbb
sbb
cmp
pop
imul
bound
fadds
or
enter
mov
jbe
ljmp
xor
enter
arpl
pop
scas
or
mov
mov
je
adc
inc
adcb
mov
incb
rorl
test
add
mov
aaa
and
cwtl
push
jp
clc
sub
std
cmp
test
inc
inc
xchg
jle
mov
js
jae
cli
sti
xchg
rcrb
xchg
sbb
mov
pushf
mov
mov
adc
and
add
outsb
std
paddsw
sub
push
scas
inc
sub
add
mov
rcll
lcall
orb
pop
fildl
ret
inc
int
js
inc
jb
out
cmp
ds
pop
incb
mov
mov
mov
and
mov
in
jno
adc
mov
lcall
jecxz
xchg
fisubl
movsl
sub
sbb
cmp
and
mov
enter
adc
into
repnz
dec
das
scas
fsubl
push
push
jb
push
pop
roll
jmp
jns
mov
popf
or
pop
nop
mov
mov
adc
insl
ftst
cmc
mov
fsubrs
pop
arpl
out
push
cs
xchg
insb
push
mov
and
push
in
cmp
psubb
xor
cmp
xchg
inc
lds
or
mov
dec
add
jl
and
pop
or
cmp
jns
jg
repnz
mov
lret
cmpsb
xchg
xor
cmp
inc
pop
sbb
push
aas
pop
fs
mov
in
into
je
xor
popf
mov
adc
pop
sbb
icebp
push
repz
ljmp
pop
mov
push
jnp
add
mov
jmp
hlt
cmpsl
and
push
ljmp
fbstp
xor
inc
add
or
iret
push
mov
pushf
sbb
andl
in
mov
imul
mov
into
adc
nop
pminsw
ljmp
mov
push
and
mov
xor
fldl
dec
fbstp
dec
aad
xchg
daa
sbb
push
jle
jbe
or
pop
int
ljmp
hlt
jns
mov
nop
or
jno
fisttps
test
mov
fcoms
rorl
jno
jp
subl
leave
js
push
int
push
xchg
pop
xchg
or
lahf
es
and
adc
add
pop
gs
cmpsl
sub
and
xchg
ficoml
xor
in
push
lcall
jge
test
pop
pop
out
cmp
sub
rorl
sub
in
jecxz
lods
test
cmc
test
adc
jl
add
ret
out
idivb
mov
mov
loope
mov
dec
mov
adc
xchg
adc
xchg
inc
outsb
repz
sbb
and
push
fadds
leave
rolb
mov
ret
sub
fwait
dec
fistpll
xor
nop
lcall
movsb
filds
add
push
pushf
push
push
std
scas
out
popa
scas
pop
mov
push
das
cmp
mov
and
adc
add
dec
mov
add
orl
xor
fistps
push
xchg
rclb
adc
flds
sbb
xchg
popa
ror
xor
inc
mov
fistpl
xchg
repz
push
push
test
and
ret
and
filds
cmp
mov
dec
push
dec
js
or
cld
imul
xchg
scas
jecxz
xlat
cmp
cmp
out
sbbl
jns
ror
pushf
mov
jmp
cmpsl
in
arpl
stos
int3
imul
js
jnp
xchg
mov
inc
fsubrl
or
push
pop
test
or
jnp
dec
add
inc
sub
bound
test
xor
icebp
cmpl
jecxz
int3
xchg
fmul
mov
imul
or
je
sbb
leave
gs
fistl
xor
repnz
jl
push
and
xchg
test
mov
shll
adc
mov
cmp
fnstsw
and
outsb
cltd
jo
into
test
cld
jno
jne
jne
and
add
cld
jp
add
sahf
xor
pushf
cld
cmp
inc
mov
inc
decb
mov
sbb
out
mov
inc
adc
pusha
ljmp
jno
cs
fldl
dec
mov
aaa
dec
dec
lahf
lea
push
out
lcall
pop
shll
ret
mov
pop
add
arpl
mov
or
es
push
jo
dec
mov
test
mov
jns
push
and
mov
mov
xor
in
jg
push
cmp
and
dec
push
xor
mov
inc
outsl
push
test
or
xlat
pop
push
outsb
faddl
push
loopne
jmp
push
aad
mov
jno
sub
dec
fisttpl
or
adc
dec
pop
add
sub
push
sbb
fimull
popf
cmp
inc
xor
mov
fcoms
push
test
imulb
into
js
add
jne
fdivrs
lods
cmp
inc
cmp
add
es
mov
stos
mov
or
adc
xor
dec
cmc
jle
jno
xor
cmp
mov
dec
loop
sbb
mov
jmp
das
adc
xor
xchg
stos
popf
outsb
lahf
adc
push
inc
fidivrl
aas
sti
xchg
mov
or
shlb
push
scas
xor
xor
sub
scas
mov
jno
adcl
mov
out
sbb
cmp
cmp
das
push
pop
push
push
pop
mov
xor
mov
xor
aam
jg
inc
sbb
cmp
sub
xchg
cmpsb
cmp
pop
filds
lds
rol
scas
sbb
repz
mulb
and
push
loop
and
mov
mov
mov
sahf
inc
imul
cmpsb
push
mov
sub
adc
sub
dec
and
mov
add
subb
test
lcall
add
cmp
mov
sub
mov
mov
add
bnd
je
popa
cld
negb
mov
pop
xor
orb
std
cmc
jae
mov
adc
push
mov
mov
push
xchg
sti
rclb
lods
pop
pop
dec
idivl
jns
cmp
add
cmp
imulb
mov
and
jo
repnz
lea
in
aaa
mov
xor
cld
ret
enter
call
ds
adc
dec
aaa
mov
dec
mov
push
mov
pop
mov
dec
xchg
xor
pop
mov
lret
mov
stos
andl
pop
pop
minps
xor
daa
xor
inc
mov
insb
lock
cld
bound
adc
ret
push
mov
inc
hlt
fnstsw
sbb
xchg
dec
or
xchg
and
mov
sahf
cltd
add
mov
mov
fmuls
addr16
out
push
fsts
xor
dec
lahf
add
mov
xchg
mov
mov
movsb
fs
pop
sbb
dec
sbb
cld
bound
outsb
mov
imul
adc
fwait
dec
fisubrs
mov
cmp
fiaddl
jl
sahf
xchg
daa
dec
or
gs
loop
xchg
movsb
adc
cmp
cs
addr16
sbb
stos
add
and
pop
dec
push
xor
or
test
xchg
add
fwait
pushl
or
adc
mov
mov
aad
hlt
aas
jmp
add
cmp
xchg
push
sbb
mov
or
jmp
adcb
int
xor
fbstp
mov
push
movsb
push
cs
sbb
movsl
and
push
movsl
xchg
rcrl
and
enter
adc
jl
cli
mov
add
push
pop
lea
jb
jne
stc
adc
stos
roll
mov
cmp
movd
mov
pop
xchg
jo
sti
sbb
into
jmp
aaa
or
xchg
mov
hlt
js
idiv
mov
jmp
push
lds
dec
pop
subl
je
and
jne
inc
fldcw
adc
and
jle
stos
in
dec
and
lcall
jb
mov
xchg
push
dec
cmp
pusha
lcall
lret
inc
call
addr16
pop
in
jl
stos
pop
dec
mov
mov
dec
mov
popf
xlat
mov
in
insl
insl
notb
cmp
add
test
push
xchg
shll
into
ds
cmp
add
repnz
sti
aad
dec
mov
sub
xchg
rol
and
mov
push
adc
cmp
ja
pop
dec
pop
pop
daa
imul
cltd
out
idivl
cmpsl
jmp
push
sbb
ja
pop
dec
pop
pop
daa
imul
cltd
out
idivl
cmpsl
jmp
push
sbb
ja
pop
dec
pop
pop
daa
imul
cltd
out
idivl
cmpsl
call
push
sbb
ja
pop
dec
pop
pop
daa
imul
xor
test
pop
push
dec
push
int3
int3
int3
int3
int3
in
cmc
imul
aad
push
cmp
jmp
fistl
mov
adc
imul
aad
movsl
cmp
or
jne
inc
fistl
in
xor
mov
jnp
imul
aad
movsl
cmp
or
push
jmp
mov
pop
les
jnp
mov
xor
sbb
enter
gs
dec
popa
jl
and
dec
lods
sub
sub
sbb
lock
fisubrl
inc
push
lret
cwtl
fidivl
lods
mov
cli
push
pop
lret
out
push
and
mov
adc
call
cmpb
sub
xchg
xchg
hlt
call
and
fcmovbe
jne
xchg
sbb
sub
push
rorb
shlb
jbe
lret
fs
sbb
or
dec
inc
cmpsb
or
jmp
mov
lret
mov
mov
jnp
imul
aad
movsl
cmp
or
jne
inc
fistl
and
fwait
adc
imul
sub
push
xchg
pop
gs
adc
and
xor
lret
nop
imul
insb
or
andl
mov
pop
shrb
fildl
xor
sub
sti
jne
inc
fistl
and
fwait
adc
imul
aad
movsl
cmp
or
jne
inc
fistl
and
fwait
adc
and
cli
or
notl
rcr
mov
dec
cmp
and
push
jge
enter
xchg
out
sarb
icebp
inc
ja
sti
rcl
inc
jns
inc
cmpsb
repz
sbb
pop
and
xchg
and
je
stos
sbb
inc
repz
jle
push
add
inc
mov
loope
subl
mov
daa
test
mov
popf
out
xchg
lds
and
xchg
dec
push
adc
fucomip
out
xchg
lahf
sahf
or
jnp
sbb
mov
and
std
adc
adc
mov
stc
outsl
pop
sbb
sarl
test
popa
xchg
pop
mov
mov
stc
jno
insb
imul
jnp
rolb
push
xchg
jb
cmp
imul
rorl
cwtl
mov
pop
pusha
mov
pop
out
cs
es
xchg
out
jne
pop
xor
lds
mov
clc
ficomps
pop
add
sbb
adc
inc
jno
inc
jge
adcb
xchg
xchg
adc
jp
shll
aas
pop
mov
cmp
loope
stos
push
bound
subl
je
mov
aas
shlb
fistl
in
cmc
not
jl
mov
jl
xor
lds
ja
add
lds
sti
dec
dec
cld
cmpsl
sbb
cld
idiv
cmpsl
dec
adc
push
in
outsb
mov
adc
insb
lods
fscale
mov
push
enter
dec
jb
and
imul
mov
and
jecxz
push
mov
jbe
in
imul
sub
or
or
xchg
xchg
or
sarl
pop
cmpb
jb
cmp
add
scas
cmp
pop
and
test
xor
pop
mov
fsubrs
or
daa
pop
push
mov
cli
xchg
lahf
pop
mov
sti
jae
xor
adcb
mov
adc
dec
xchg
ret
bound
arpl
mov
push
and
adc
xor
xchg
out
push
call
jge
das
mov
jnp
out
inc
push
sub
outsb
insb
xchg
xchg
les
ss
ret
mov
push
jge
test
mov
sbb
test
bound
mov
jo
cmp
daa
fbstp
push
fsubrl
aaa
cmp
movsl
and
dec
fbstp
shr
cltd
insb
sbb
xchg
sahf
pop
cmp
mov
xorb
fdivrs
dec
stc
movsl
inc
js
pop
lods
in
fld
out
xchg
mov
addr16
push
pushf
xchg
jns
adc
js
inc
mov
dec
das
rcll
cli
loopne
stos
xrelease
jae
shlb
mov
lods
jmp
sahf
out
lret
or
adc
scas
adc
es
dec
negl
fidivl
inc
jns
out
cmp
icebp
xor
pop
in
cs
nop
xchg
pop
xchg
inc
adc
fisttpl
mov
jge
dec
or
test
fwait
dec
mov
push
mov
push
pop
nop
das
add
mov
mov
adc
in
lock
jns
fs
jp
cld
inc
andb
popa
xor
aad
dec
sbb
pop
pop
xor
enter
sarl
popa
std
fisttpl
nop
xchg
sbb
xchg
insl
cmpl
cmp
sbb
sub
lcall
loop
xor
fdivrl
mov
shl
adc
jno
into
enter
push
fstl
enter
push
xor
leave
mov
int3
mov
mov
cmpsl
iret
hlt
out
sub
inc
cwtl
sbb
xor
loopne
enter
mov
leave
test
jno
xor
push
sti
fwait
sub
add
mov
loop
xor
fsub
mov
testl
sbb
inc
lea
sub
fwait
and
xchg
cmp
dec
lods
dec
xor
xor
dec
inc
fdivl
mov
rolb
pusha
pushl
adc
je
mov
push
adc
call
test
push
push
aam
mov
mov
jbe
je
jg
je
inc
mov
cmp
mov
push
push
lock
sub
adc
repnz
aam
push
popa
arpl
aas
push
add
cmp
gs
sub
in
jp
cmp
pop
out
add
outsb
sbb
adc
mov
sbb
mov
es
jmp
leave
rol
jo
and
mov
fidivs
lea
jne
insb
lock
mov
inc
add
xchg
addb
or
das
cwtl
jb
lret
repz
negb
and
jmp
or
jecxz
mov
lods
icebp
icebp
ret
icebp
adc
jbe
repz
inc
mov
lods
add
fwait
xchg
jb
jnp
jo
das
jnp
jmp
popa
nop
mov
mov
dec
xlat
pop
sbb
jmp
lods
dec
insb
mov
push
rcrl
dec
into
pop
adc
ds
dec
cmp
outsl
xor
sub
shl
adc
test
sbb
mov
push
push
rcrl
xchg
fisttps
pop
ficompl
xchg
add
mov
ss
xchg
out
sub
jmp
dec
int
mov
lcall
or
cmpsl
and
inc
mov
push
sarl
out
out
and
inc
cltd
dec
ret
cltd
out
je
iret
stos
fists
in
test
sahf
fsubl
add
lds
shl
fdivrs
daa
pop
fs
pop
and
inc
test
xor
aas
popa
sub
mov
or
mov
cltd
mov
fwait
sub
clc
scas
in
lock
inc
sbb
push
hlt
out
push
jge
adc
jno
insb
inc
inc
js
subb
dec
outsl
cmp
ficoml
jecxz
imul
or
or
shlw
and
pop
xor
jo
mov
ds
repnz
pop
imul
icebp
sbb
cmp
test
mov
pop
rolb
je
inc
mov
adc
push
pop
xor
inc
and
loope
stos
lods
idivl
jge
mov
pop
jge
adc
icebp
xor
sahf
inc
subb
or
ljmp
out
rcrl
imul
jp
jmp
mov
movsb
rorl
jmp
pop
ljmp
inc
lods
icebp
cmp
mov
sub
jge
sbb
and
cmpsl
jb
dec
scas
mov
and
jo
xor
pop
cs
enter
dec
lahf
mov
jb
push
add
jecxz
xchg
push
push
inc
push
xchg
mov
or
dec
xchg
stos
push
inc
incb
adc
stos
subl
rol
shll
dec
jp
lods
mov
xchg
sub
sub
dec
int
fs
in
loopne
inc
fimull
xor
cmp
pop
push
sbb
popf
aas
push
popa
sbb
rclb
and
and
and
cs
mov
mov
xlat
lcall
and
shll
adc
jmp
movhlps
sahf
cld
jle
insl
mov
arpl
aas
xor
mov
xor
xchg
xchg
dec
mov
sub
dec
xchg
mov
js
jmp
inc
inc
pop
orb
test
xor
addb
cwtl
enter
xor
out
sarb
std
outsl
inc
mov
xchg
daa
sbb
xchg
scas
adc
add
rorl
pop
aam
je
aam
adc
iret
jae
mov
inc
lahf
movsl
stos
lds
out
mov
inc
inc
add
shr
imul
xchg
pop
sarb
mov
xor
xor
icebp
divl
and
arpl
mov
ret
add
arpl
sbb
or
xchg
lods
push
std
pop
pusha
adc
ret
cwtl
pop
or
cmpsl
push
inc
rorl
add
int3
mov
idivb
pop
fists
sbb
out
inc
loopne
mov
cmpsl
jl
sahf
pop
or
fwait
test
push
mov
add
repnz
sbb
scas
xchg
shr
movsb
xorl
pop
bound
dec
push
add
jle
cmp
into
push
aam
mov
mov
repnz
and
loope
insb
ret
outsb
pop
nop
pop
dec
jle
insl
adcl
fbld
das
ss
jne
out
mov
lcall
sub
dec
cs
repz
push
mov
and
dec
fnsave
xor
cmpsl
push
lods
push
bound
fdiv
dec
sub
cmp
xchg
xor
adc
lods
lods
fisubs
adc
paddsw
pop
inc
xlat
pop
test
dec
xchg
jns
in
and
lea
cmp
repnz
das
in
iret
testb
push
xor
ds
add
lahf
dec
add
pop
mov
movsl
out
cmp
inc
js
cmc
stc
cmp
and
pop
sbb
lds
inc
out
hlt
cmc
pop
femms
lods
nop
pop
mov
jbe
mov
cmp
fists
clc
xchg
test
dec
shlb
or
jo
or
sbbb
mov
sub
adc
fldenv
or
call
adc
loopne
pop
pop
push
cmp
jae
lret
imul
mov
xchg
sub
sbb
test
repz
iret
imul
push
mov
filds
stos
mov
iret
mov
xchg
dec
jbe
adc
ret
mov
mov
aas
ljmp
inc
aam
mov
cmp
xor
lea
xor
mov
xor
xor
xor
cltd
pop
lea
repz
dec
inc
add
mov
idivb
sbb
push
push
rcrb
daa
or
xchg
cli
mov
mov
das
adc
cmp
add
das
movsb
pop
orl
jl
mov
mov
xchg
int3
std
push
lcall
xchg
push
lcall
nop
js
jbe
mov
and
adcb
int3
cli
fdivs
loope
sbb
mov
or
jb
inc
adc
cwtl
cld
stos
xor
insl
mov
insl
clc
sbb
stos
mov
adc
xchg
adc
hlt
enter
xchg
sbb
test
jge
jle
stos
lahf
icebp
adc
ss
sahf
setp
adc
enter
dec
mov
lcall
cmp
clc
test
sub
mov
dec
jo
or
mov
push
mov
adcl
inc
pop
arpl
mov
mov
xchg
cmpb
sub
add
mov
insl
fdivs
in
test
lret
inc
add
cltd
cmp
mov
and
pop
jge
lock
arpl
and
xchg
popa
push
or
lock
push
jge
add
adc
or
mov
mov
mov
inc
jcxz
dec
jne
stc
ds
call
ret
and
repnz
fs
sub
fisubrs
push
inc
fsts
lea
xor
movsb
sarl
xor
cmp
dec
mov
inc
lea
push
mov
es
das
shll
jne
icebp
mov
test
mov
fisttpll
xchg
loope
or
in
test
rolb
int
mov
add
iret
jmp
dec
daa
cs
fsubs
test
mov
stos
das
popf
sbb
aam
ret
out
cli
scas
dec
or
or
and
push
sti
dec
sub
loope,pt
pop
sub
mov
mov
fnstsw
fs
jns
addr16
popf
lret
data16
sahf
pop
cmp
scas
sub
lahf
ljmp
mov
mov
roll
inc
test
pushf
das
pusha
jae
ja
push
mov
cs
int3
pop
test
inc
lods
adc
mov
shr
pop
dec
in
repz
clc
lds
fwait
rcll
lock
lret
inc
in
jae
pushf
rcrb
sbb
inc
outsb
cmpsl
mov
jo
lret
push
pushf
pop
lods
out
mov
or
fsqrt
rcr
loope
int3
mov
mov
push
aam
loope
lret
cmp
dec
icebp
shll
mov
mov
sar
jno
mov
pusha
pop
jnp,pt
and
aaa
shlb
jns
cwtl
lods
mov
xchg
jo
pop
jmp
fistpl
xor
icebp
xor
je
ss
pop
dec
inc
xchg
inc
stc
inc
cmpsl
into
inc
lcall
jno
inc
xchg
sub
xor
push
and
sub
and
adc
ja
sbb
int3
push
pop
xchg
mov
mov
lcall
je
imul
das
dec
sub
call
xchg
jge
mov
ret
adc
sbb
mov
dec
pushf
mov
mov
and
fimuls
or
dec
popa
repnz
data16
jb
sbb
pop
nop
aaa
dec
rcrb
pusha
pop
stc
cmpsl
rolb
repnz
gs
ss
sbb
mov
test
push
popf
push
adc
pop
mov
clc
sbb
sub
xor
pop
and
pop
sbb
push
leave
add
out
imul
cmpsb
arpl
int3
int
xchg
cmpsb
bound
inc
mov
mov
aaa
cmc
sbb
add
inc
inc
out
xchg
adc
sub
insl
decb
jge
jecxz
scas
add
jle
mov
jbe
icebp
sbb
jns
add
xchg
or
jl
mov
jmp
xchg
sti
insb
push
fidivrs
out
cmp
cmp
aaa
iret
jmp
mov
sahf
inc
data16
ljmp
in
mov
dec
xchg
pusha
call
and
mov
xor
repz
mov
cltd
ss
mov
add
lods
jmp
sub
icebp
pop
jg
xor
outsl
dec
jnp
movups
xchg
dec
lcall
ljmp
adc
jae
pop
xchg
dec
jbe
pop
ljmp
or
shlb
and
adc
xchg
pop
pop
cmpsl
sbb
mov
push
mov
and
js
mov
or
inc
lcall
divb
fsub
dec
in
pop
inc
xlat
xor
ret
mov
mov
push
and
cmpl
loop
rcll
sub
cmp
mov
mov
dec
popf
push
es
push
pop
sbb
dec
popa
cmp
arpl
ss
inc
daa
mov
mov
stc
pop
xchg
int
mov
pop
dec
movsb
loopne
inc
cmp
shl
or
push
mov
sti
lcall
cmpsb
xor
orb
aam
fs
in
pushf
ret
sub
mov
add
push
cs
and
sub
dec
addr16
push
jmp
inc
mov
std
cltd
daa
fdivrs
mov
repnz
dec
jp
loopne
mov
ss
jp
out
or
jl
pop
pop
fildl
and
cs
popa
ret
leave
dec
and
ljmp
iret
idivl
lods
add
add
jbe
fsubs
test
xchg
es
inc
dec
and
rcrb
pop
cmp
mov
test
repz
int
pop
xchg
stos
sbb
loope
arpl
xchg
add
inc
fwait
icebp
adc
push
mov
fwait
mov
in
dec
shll
lods
adc
movsl
ficoms
or
in
lock
xor
mov
sahf
pop
sbb
daa
and
aad
mov
jl
stc
aaa
xor
cmp
idivb
out
xor
cltd
add
mov
add
pop
into
add
loope
loope
xchg
push
pop
pop
addr16
lcall
les
adc
ja
cltd
into
hlt
pop
jp
adc
aad
cmp
jno
or
mov
int3
fdiv
imul
popf
cltd
add
pop
stos
mov
scas
push
test
mov
aas
rorl
pusha
lahf
es
addr16
fcmove
inc
xchg
push
sbb
ret
or
sub
mov
mov
mov
push
cmp
sub
dec
push
mov
and
mov
xchg
loop
sarb
ficoms
subb
divb
aam
add
jle
xchg
and
repz
ret
nop
lahf
jg
pop
lcall
mov
scas
shlb
mov
fiadds
dec
dec
data16
mov
rcr
in
pop
sbbl
jecxz
leave
lret
push
push
cmp
adc
push
pop
push
imull
divb
xor
and
lock
sbb
je
test
popf
push
mov
mov
push
leavew
inc
scas
fsubrl
out
sti
and
lds
sbb
dec
jbe
aam
xchg
stc
sti
adc
sbbl
ss
mov
loop
or
mov
mov
int3
or
daa
mov
aam
cmp
cwtl
or
or
aam
and
incl
adc
lods
xor
push
sahf
xlat
cmp
repz
fadd
aam
pop
mov
gs
jns
clc
mov
mov
jg
int
mov
movsl
inc
push
cmp
mov
dec
arpl
add
lock
movsb
mov
adc
out
stc
cld
mov
lods
or
and
outsl
sti
dec
loopne
lret
jo
add
pop
jno
mov
cli
iret
push
and
mov
lahf
mov
fsubs
inc
mov
mov
push
dec
cmp
mov
into
xchg
stc
in
fistpl
scas
enter
sub
cmp
sbb
mov
jp
mov
pop
das
stc
xchg
mov
out
ret
jb
mov
push
mov
xchg
testl
pop
popf
jl
dec
fisubl
fst
in
mov
inc
and
dec
push
dec
dec
daa
push
add
pop
stos
sub
outsl
je
jp
inc
xchg
ja
addr16
mov
xchg
mov
repz
mov
dec
addr16
mov
nop
mov
stc
rcrb
inc
std
inc
inc
loope
add
push
mov
cmp
lods
imul
mov
jg
scas
popa
pop
pop
mov
mov
mov
pop
xor
or
stc
dec
outsl
lret
aad
inc
jno
aad
jb
frstor
test
in
push
rcrl
in
imul
test
bound
ret
loop
jno
mov
js
push
inc
sbb
cmp
and
cwtl
sbb
push
dec
jb
hlt
imul
es
jnp
or
push
inc
and
inc
insb
mov
cmp
imul
test
loop
sarb
or
or
jmp
imul
js
cmpsl
mov
add
das
int3
bound
test
push
cmc
and
sub
xchg
jno
shll
into
xchg
loopne
das
or
ret
push
icebp
and
push
sub
cmp
sub
ja
push
lret
and
sub
sub
pop
add
push
pop
xchg
divl
fiaddl
mov
xchg
in
shlb
std
into
pop
push
jb
cmp
dec
movsl
xchg
mov
adc
mul
lock
mov
out
out
leave
jl
mov
dec
int3
movb
push
dec
push
cwtl
push
dec
adc
jae
popf
jp
push
pop
lods
call
sbb
xor
mov
addl
addl
test
popf
jb
jne
mov
into
sarb
mov
popa
stc
mov
popf
xor
dec
cmpsl
mov
inc
stos
mov
enter
add
jmp
lock
inc
outsl
cmp
addb
ljmp
imul
arpl
je
outsb
adc
lret
outsl
mov
xor
dec
shlb
mov
mov
int
sub
hlt
push
or
cmp
dec
les
xchg
adc
mov
jne
outsb
cltd
bound
mov
cmpsb
sbb
jae
das
pusha
aam
mov
psadbw
and
push
push
sbb
sub
pop
pop
clc
lret
push
jge
sbb
pinsrw
pop
and
mov
sub
in
adc
push
cmpsb
dec
or
call
push
jns
js
pop
out
pop
das
mov
std
movsl
subl
jmp
cmpsl
push
push
jge
cmp
andb
xor
adc
sbb
cltd
sbb
out
xchg
jnp
and
push
xchg
decb
in
out
negb
jno
xor
inc
cmp
dec
dec
sbb
xchg
inc
lcall
xchg
mov
dec
fwait
rcll
je
lods
mov
adc
outsl
add
aam
xchg
jnp
push
and
cmp
mov
movsb
xchg
pop
add
sub
mov
pop
dec
stc
ret
dec
test
ret
gs
sub
jp
push
out
mov
popa
push
xor
out
insb
lock
adc
shrl
pop
mov
ljmp
js
xor
sub
inc
dec
ficoms
cmp
aaa
fadds
xchg
lods
movsl
add
repz
jp
gs
repnz
fmuls
pusha
popf
push
cltd
mov
inc
inc
insb
loopne
test
cmp
mov
sbb
outsb
push
pop
add
hlt
cmpsl
aas
cmp
push
pop
adc
addr16
sti
sbb
mov
mov
or
mov
aam
int
inc
pusha
dec
sti
dec
mov
push
iret
pusha
ja
lods
out
int3
cmpsl
xlat
or
pop
mov
mov
outsl
sbb
adcb
imul
frstor
inc
xlat
lods
mov
rcl
and
sbb
popa
xor
fnstcw
cmpsl
out
gs
cmc
js
stos
iret
pop
push
mov
movsl
ret
mov
ljmp
outsl
pop
xchg
or
lcall
sub
imul
push
dec
lods
mov
outsl
dec
test
aad
test
xor
daa
andl
push
push
in
adc
scas
mov
add
lahf
in
jp
sub
int3
pop
add
fmul
dec
mov
inc
outsb
fiaddl
fidivrs
jl
cmp
add
inc
xchg
xor
push
jnp
in
in
movl
ljmp
xchg
xchg
ret
popa
xchg
gs
cmp
int3
in
test
cmp
or
mov
mov
stos
cmp
dec
push
icebp
sub
push
adc
push
xchg
xor
icebp
lds
xor
mov
mov
jae
pop
sarl
shll
jnp
rcl
ficoms
or
pop
cmpl
push
ds
in
lret
push
jge
pop
push
pop
and
or
adc
xchg
movsb
xor
lret
jp
fbstp
popl
add
jnp
popf
lock
leave
scas
inc
stos
mov
cmc
clc
or
mov
cltd
pushf
add
outsb
push
cmp
scas
dec
cmpsb
sbb
dec
movsl
cmp
or
jne
inc
fistl
and
fwait
adc
imul
aad
movsl
cmp
or
jne
inc
fistl
and
fwait
adc
jmp
fcmovnbe
dec
and
sbb
jmp
fistl
and
fwait
adc
imul
aad
movsl
cmp
or
jne
out
fistl
push
xor
jne
gs
int3
int3
int3
int3
push
mov
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
insl
push
pop
pop
sub
data16
mov
enter
test
mov
and
pop
sub
cmp
or
jge
call
out
int
mov
push
xchg
sub
adc
push
sbb
lods
mov
in
in
ret
and
or
aaa
cmp
aam
xor
add
xchg
push
xchg
jmp
mov
pop
subb
into
and
aad
cmp
xchg
sbb
mov
dec
aaa
and
push
mov
popa
leave
nop
js
mov
out
jg
push
shrl
stc
fcmovne
fisubs
mov
add
push
insl
stos
pop
mov
shrl
ds
add
clc
out
adc
pop
dec
push
and
mov
sahf
cwtl
xchg
test
xchg
ret
push
shlb
xchg
sbb
pop
jge
into
aaa
fsubr
sti
mov
js
xor
outsb
dec
mulb
mov
subb
fucomp
cli
cld
inc
mov
in
call
xor
dec
pop
pop
lret
cmp
or
clc
mov
test
mov
pop
push
sbb
push
dec
jp
push
insb
out
cwtl
lods
loope
fwait
mov
jmp
cli
sti
std
and
adc
add
cmp
pop
jge
pop
dec
mov
cmpsb
mov
int
cs
add
adc
das
sub
cmp
or
sbb
call
scas
test
mov
outsb
push
pop
pop
sub
cmp
or
sbb
call
scas
test
mov
outsb
push
sahf
lahf
loope
push
xchg
xchg
pop
gs
xor
jp
test
cltd
jmp
test
jecxz
sbb
cmp
push
sub
sub
sbb
xchg
jne
test
dec
call
mov
test
in
pop
test
mov
loope
sbb
lret
push
push
push
xor
adc
push
stos
mov
imul
adc
jp
fisttps
adc
popf
or
xchg
loope
out
lock
int3
fiaddl
mov
pop
out
dec
pop
cmp
frstor
xor
adc
imul
and
add
pop
adc
das
outsb
mov
jo
sub
stos
add
push
pop
pop
mov
aas
xorb
cmpl
mov
add
pop
xlat
cmpsl
or
pusha
and
arpl
cmp
aas
imul
xchg
xor
test
mov
fcompl
mov
push
clc
jmp
pop
jno
shl
jecxz
sarb
nop
subb
imul
push
fists
lahf
and
mov
push
fimull
lock
xchg
movsl
data16
push
dec
mov
jp
pop
mov
test
xchg
insl
cmp
aam
xlat
mov
das
mov
dec
pop
jg
cmp
es
xlat
cmpsb
cwtl
leave
loope
cmp
jns
je
enter
ljmp
out
and
scas
cmp
cwtl
scas
xchg
aas
sbb
dec
stos
mov
push
xchg
cltd
push
out
xorl
arpl
jbe
outsb
jp
adc
lret
addl
mov
subb
in
sub
mov
xor
lea
mov
mov
push
mov
jp
jns
pop
das
pop
cld
dec
mov
call
sti
xchg
leave
sbb
dec
xchg
rcl
pop
inc
push
je
xchg
insl
mov
shlb
rcll
and
fstpl
jmp
push
xchg
xchg
jl
lret
add
arpl
jnp
popf
mov
js
ljmp
into
mov
adc
or
cmp
mov
mov
iret
gs
test
cmpsl
adc
icebp
sub
sbb
jecxz
movsl
pushaw
mov
andl
ftst
arpl
pop
ljmp
push
repz
and
xor
add
pusha
push
inc
push
cld
xchg
fildl
outsb
sbbl
cmp
mov
fldcw
fimull
scas
jle
aad
fisubs
push
mov
fdivrp
cmp
test
test
mov
rcll
imul
cmc
add
jecxz
cmp
out
scas
and
outsb
test
xor
in
xor
jno
scas
call
xchg
mov
xlat
daa
rcr
addr16
cmpsb
jo
stos
roll
or
or
push
outsl
imul
aas
pop
ja
dec
pop
mov
inc
sti
xchg
push
fiaddl
xchg
jmp
fs
fwait
mov
adc
cmp
jp
add
sub
mov
jo
mov
jmp
xor
repnz
push
mov
cmc
lods
dec
icebp
xor
jne
jge
jmp
adc
scas
fsubrp
fldt
xor
test
add
push
and
mov
mov
popa
mov
sub
loopne
syscall
aaa
cmp
mov
sbb
add
es
daa
sbb
and
push
jle
pop
push
sbb
add
and
popf
loop
pop
push
add
stos
sbb
stc
cmpsl
cmp
sahf
mov
or
in
movsb
imul
pop
adc
mov
fldcw
adc
stos
push
and
mov
cli
test
mov
shrl
enter
loopne
sub
into
out
xlat
fcomps
mov
xor
lret
into
pop
cmpsl
icebp
sbb
cld
aam
inc
mov
rorb
cmpsl
inc
mov
sbb
and
lret
ds
rorb
nop
mov
adc
aaa
dec
add
cltd
iret
lds
sti
mov
or
jge
pop
jno
cmp
in
xchg
lahf
roll
jns
xchg
add
push
call
inc
adc
test
insl
push
mov
mov
test
mov
icebp
xchg
iret
outsl
hlt
ror
lea
xor
insb
sti
pop
pushf
adc
psubb
repz
jmp
ja
andb
testb
sti
in
sbb
cs
cmp
pop
in
scas
pop
imul
mov
repz
adc
pusha
and
xor
stos
lods
inc
fldl2t
repz
sbb
pop
inc
fcmovb
fidivrs
repnz
xchg
push
int
repz
jmp
in
dec
fidivs
in
fcoms
jecxz
cmp
flds
sbb
add
cmp
xlat
dec
fwait
push
add
nop
clc
aam
les
mov
inc
or
mov
mov
xchg
popf
cmp
dec
push
pop
scas
ja
lahf
ror
stos
scas
jae
xor
or
xor
fnstenv
into
out
test
sbb
xor
int
mov
clc
test
sbb
and
dec
inc
cld
mov
je
mov
cld
add
mov
je
and
pushf
shlb
or
adc
cmp
adc
dec
pusha
mov
mov
adc
jp
push
jle
mov
iret
sub
repz
adc
xchg
adcb
mov
ret
xor
mov
or
bnd
mov
data16
and
and
pop
jg
and
les
adc
add
push
xor
dec
sbb
push
cli
xlat
rclb
jp
cs
or
xchg
mov
push
mov
xchg
jne
cmp
push
mov
shrl
movsl
jne
inc
int
hlt
ljmp
mov
jge
cmpsb
adc
or
lea
xlat
arpl
stc
lea
test
aam
inc
mov
addl
in
sbb
es
fdivrl
inc
sub
inc
adc
cltd
sti
aam
adc
dec
aas
ret
and
shr
or
sub
mov
adc
jecxz
scas
mov
popa
sbb
subb
xchg
jl
je
push
ja
add
in
add
movntps
out
sbb
int3
sbb
and
push
push
jno
in
scas
iret
jns
xchg
loopne
xchg
or
jbe
nop
ljmp
aad
push
jge
xchg
adc
push
inc
jae
ja
mov
icebp
in
mov
push
sti
xchg
cli
aad
push
fs
das
aaa
cmp
mov
outsb
cmp
add
xchg
cmpsl
insl
not
movsb
mov
mov
loope
test
fwait
lock
stos
xorb
jle
negl
adc
cltd
pushf
sbb
sub
test
dec
adc
sub
pop
out
mov
pop
fs
aad
mov
pop
dec
cli
jg
fldl
cltd
ds
les
jae
cmp
xor
ljmp
mov
sarb
mov
loop
movsl
scas
mov
cs
or
inc
inc
cli
imul
lahf
add
jmp
sbb
mov
inc
jbe
or
xchg
fsubrs
cltd
mov
dec
lock
cld
jnp
mov
xchg
mov
xlat
int
insb
cs
and
or
sub
sbb
mov
mov
xorl
mov
scas
scas
divb
sub
into
rorb
iret
fwait
daa
mov
xor
sub
cld
das
xor
xchg
in
int3
or
in
xchg
je
xor
mov
pop
push
lret
nop
dec
out
dec
mov
sbb
push
cli
js
adc
ficomps
mov
push
out
outsl
add
or
dec
adc
jb
sti
movsl
jb
sub
call
xchg
fiadds
inc
into
imul
lea
stc
adc
cmpsb
addr16
pop
adc
fs
rorl
mov
lret
loope
icebp
add
push
in
jbe
pop
outsb
outsl
shrb
pop
xor
loopne
insl
cmp
in
xor
out
bnd
adc
jp
mov
or
mov
mov
insb
shrb
daa
push
je
pop
mov
aaa
shr
or
and
xchg
popf
dec
add
ret
dec
stos
push
adc
adc
cli
mov
das
cmp
jb
sahf
inc
dec
das
jae
in
xlat
addr16
or
cmpsl
lret
xor
dec
clc
movsb
shr
test
sti
push
push
aas
cld
lock
into
xor
jns
pop
adc
mov
pushf
cmp
jg
loopne
or
leave
fldt
jbe
test
jl
jecxz
loope
xlat
lods
mov
dec
std
jns
sbb
lock
fucomp
cmpsl
jnp
scas
inc
jmp
push
pop
test
fwait
out
pop
pop
in
adc
daa
jge
xchg
ret
les
cld
push
add
xor
jmp
ljmp
lret
pop
cli
add
fs
cwtl
cs
cltd
jo
and
mulb
inc
cld
mov
mov
cmp
out
call
call
jge
lods
shrl
or
xchg
jns
in
inc
pop
mov
popf
adc
ss
and
nop
xchg
dec
xor
adc
popa
adc
sbb
push
jno
xchg
out
push
adc
rorl
dec
into
loopne
sbbl
dec
pusha
mov
xor
out
sarb
sub
scas
push
mov
sbb
out
xor
ss
pushf
sub
pop
std
push
inc
nop
add
inc
jmp
xor
ret
mov
scas
jge
mov
xor
cmpsb
pop
adc
divl
std
das
sbb
jnp
faddl
jb
ficoml
mov
addb
orb
cmpsb
jb
xchg
mov
xor
xchg
sbb
or
adc
aam
ret
adc
pop
mov
dec
out
add
and
ja
jns
lea
mov
cmp
adc
adc
push
inc
out
out
dec
gs
mov
mov
stos
std
sbb
jge
imul
and
bound
aad
repz
adc
mov
sti
test
jecxz
lds
jp
bound
add
push
test
or
iret
xchg
and
addr16
mov
add
fiaddl
std
cmp
push
adc
inc
lods
xchg
mov
stos
pop
das
cmp
hlt
les
sub
ds
xchg
adc
fwait
inc
shlb
cmp
movd
sub
sub
xchg
fucomip
into
push
in
cmp
mull
cs
daa
jne
mov
xchg
add
and
inc
imul
and
or
pop
mov
lret
sbbb
xlat
mov
mov
int
cs
mov
xchg
mov
xchg
mov
sbb
add
inc
sub
sbb
out
pop
movsl
out
sbb
jbe
lea
sbb
inc
jo
out
sub
loopne
mov
pusha
cmc
mov
mov
test
xor
iret
dec
ret
lods
mov
stos
xchg
out
xor
jne
pushf
jmp
cli
filds
push
lds
lahf
inc
movsl
out
mov
ret
int
jbe
dec
ja
xchg
cmc
xchg
pushf
mov
push
inc
inc
jle
sbb
cmpsb
inc
out
inc
out
cmp
jns
iret
mov
stos
mov
push
lds
inc
dec
rcr
aaa
scas
inc
int3
loope
cld
mov
mov
xchg
leave
ja
sub
sarl
dec
sbb
pop
lret
xor
lcall
jo
xchg
cmp
jnp
testb
pop
mov
cld
sbb
and
rclb
imul
cmp
mov
push
mov
mov
jmp
xchg
inc
xor
xor
lock
jge
cltd
stos
pusha
loop
pusha
outsb
cmp
in
push
clc
popf
loop
sub
pop
orl
jnp
loopne
arpl
mov
outsl
jge,pt
popa
and
sub
fwait
pop
out
arpl
jl
mov
stos
mov
sub
in
ret
xorps
out
jo
cmpsl
lds
mov
sbb
xor
int
xchg
and
mov
jecxz
movsl
int3
xchg
pop
imul
mov
mov
rep
fldl
pushf
sbb
ret
push
xchg
mov
pop
adc
insb
and
aaa
in
test
adc
test
adc
mov
jl
jecxz
lretw
jge
inc
sub
cmpsb
jmp
push
dec
out
popf
mov
cwtl
popf
adc
inc
xor
jne
jbe
outsl
and
mov
ljmp
jnp
lret
sub
int
sub
jne
scas
fisttpl
adc
mov
dec
shlb
adc
dec
clc
jb
dec
lcall
xlat
xor
repz
jle
jo
aaa
inc
xchg
cmp
out
xchg
sti
pop
jns
fldcw
cmp
ficoml
xchg
mov
mov
inc
sbb
cmpb
mov
sub
cs
dec
mov
mov
fcmove
popf
mov
sub
mov
mov
dec
and
out
shl
xchg
lods
icebp
outsb
stos
sbb
dec
fbld
cmp
jl
xor
pop
fbstp
loopne
lds
mov
cmp
shlb
lods
popf
push
cltd
jnp
imul
cwtl
nop
xor
jge
push
and
imul
push
jne
dec
pop
testb
or
imul
push
sub
push
dec
lret
push
std
inc
xchg
mov
mov
pop
enter
mov
inc
xor
inc
bnd
mov
mov
nop
push
sub
pushf
lods
pop
sbbl
lods
aad
imul
aam
pop
push
jecxz
mov
mov
in
outsl
xchg
sub
pop
mov
push
adc
sbb
cmp
insb
pop
adc
jns
pop
or
loopne
bound
jmp
fisttpll
xor
mov
movsb
xchg
clc
pushf
mov
and
fcmovbe
push
pop
repz
in
cmpsb
xorl
idiv
xor
dec
push
lret
xor
aam
std
in
loop
jbe
jle
adc
mov
mov
incl
inc
jns
push
or
pop
int
add
jl
add
sbb
sub
pop
and
pop
jae
xor
lods
shlb
dec
and
sbb
clc
divl
or
pop
in
lds
sbb
sahf
push
push
xor
and
mov
or
sbb
rol
dec
inc
mov
sub
xchg
cmp
sub
xor
or
push
fiaddl
rorb
mov
popa
not
cwtl
insb
jle
and
vpcomb
outsb
inc
int3
out
mov
mov
push
repz
sub
jno
dec
ret
mov
lret
std
ja
mov
nop
push
popf
dec
jg
add
aad
xor
gs
xchg
cli
pop
and
shll
inc
data16
jae
cmp
arpl
sbb
mov
movsl
fs
mov
repz
mov
ja
jbe
sbb
adc
popa
or
xlat
imul
dec
xchg
sub
icebp
mov
out
je
pop
inc
inc
adc
cmpsb
inc
loopne
insb
sbb
ret
sahf
mov
push
cmp
out
iret
addb
push
ret
fdivrs
mov
aas
mov
gs
lret
test
iret
call
mov
data16
add
cwtl
sbb
ja
cltd
jle
ljmp
dec
arpl
and
cmp
pop
mov
loope
jnp
cmc
push
sbb
xor
and
mov
xor
lret
insl
leave
push
mov
pop
pop
loop
jb
es
push
push
push
dec
cmp
ret
cmpsb
mov
outsl
les
xor
jo
lret
dec
adc
sub
insl
fisttpll
mov
lock
and
push
shl
mov
jo
jns
fidivl
scas
aam
pop
jnp
xchg
xorb
in
push
test
add
les
add
in
pop
cli
add
outsb
ror
cltd
pop
pop
xor
mov
jb
adc
fsubrs
out
push
stos
sti
add
push
pop
dec
lds
dec
js
or
scas
and
mov
or
xchg
mov
and
sub
sahf
in
jnp
pop
rcll
xor
out
fistl
xchg
push
shlb
sbb
dec
pop
xchg
pop
ja
daa
xor
sbb
in
mov
pushf
jo,pn
push
test
jp
stc
xor
adc
sub
mov
mov
je
popa
and
repz
lret
and
lahf
mov
jbe
pop
shr
mov
in
or
push
and
cmc
daa
insl
movsl
lret
in
out
out
cmpsb
jns
gs
fimull
mov
mov
sar
cmc
int
outsl
out
enter
sbb
cmp
fcmovu
and
dec
push
jne
orl
bt
push
inc
movsb
test
scas
jg
mov
inc
arpl
mov
inc
mov
push
xor
xor
insb
dec
and
mov
sbb
xchg
and
dec
pushf
movsb
cmp
add
xchg
pop
push
dec
scas
fnsave
jns
test
push
add
cmp
xor
mov
and
add
rol
out
mov
dec
test
inc
adc
in
jae
push
add
fnstsw
adc
jmp
add
mov
xor
xchg
ss
repz
dec
ret
fidivrl
int
push
loope
negl
outsl
ja
add
dec
out
or
orl
inc
jecxz
and
pusha
les
fiaddl
jle
cmp
mov
push
movq
ret
push
popf
and
push
and
in
mov
lods
stos
dec
pushf
subb
dec
idivl
loope
fcoml
add
test
push
aas
mov
test
cwtl
add
scas
insb
leave
insb
out
mov
icebp
ljmp
push
icebp
out
dec
xchg
or
notl
repnz
in
icebp
xor
sbb
jo
pop
jmp
adc
sarb
or
mov
and
or
add
push
lret
sbb
into
gs
cmp
fnstsw
insl
faddl
push
mov
mov
cli
xor
test
mov
mov
sub
jnp
xor
imul
pushf
not
dec
orl
and
jo
testb
push
xor
inc
mov
mov
notrack
call
out
cmpsb
aaa
imul
sbb
rcr
mov
pop
xchg
in
sbb
and
leave
cltd
mov
inc
jb
scas
cmpsb
ljmp
movsb
stos
or
stc
in
add
or
cld
cmp
dec
or
int
and
ss
scas
imul
inc
lret
in
pushf
scas
repz
sub
in
add
imul
jbe
cmp
test
hlt
in
mov
mov
push
sti
mov
fisttpl
subb
push
mov
pop
icebp
add
jne
pop
mov
popa
xor
int
xor
cmp
mov
mov
lcall
xor
mov
scas
stos
xchg
cmp
lods
fxch
jg
pop
loop
out
push
ja
mov
div
movsb
test
cmc
jbe
int
jmp
rcrl
sahf
jecxz
nop
aaa
pop
sbb
mul
and
faddl
jno
stos
ss
pop
xor
jnp
xchg
mov
je
inc
mov
sti
xchg
sbb
pop
pop
es
xlat
mov
add
pop
fstl
ds
xchg
push
or
xchg
mov
jns
notb
push
xchg
mov
sub
pushf
pop
cltd
int3
and
bound
std
shlb
jno
dec
subl
out
adc
sub
and
sbbl
push
cmp
pop
xchg
lds
or
mov
dec
rcl
and
aas
repz
dec
add
loop
imul
loop
xchg
xlat
movsl
jbe
das
or
faddl
scas
or
sti
cmpsb
pop
sahf
xor
stc
xor
in
sbb
negb
xor
push
pop
pop
jo
sbb
das
dec
aam
cmp
push
mov
inc
pop
xchg
test
fidivs
sbb
mov
lret
mov
add
push
shr
cmp
push
mov
cmc
test
outsl
cltd
jl
pop
push
xchg
pusha
mov
pusha
mov
mov
push
stos
mov
xchg
add
dec
icebp
add
gs
xrelease
xor
cli
les
and
xchg
data16
mov
mov
jae
adc
lods
cld
xlat
jg
fcmove
cmp
icebp
add
fcoml
js
pop
jmp
imul
aad
jp
lods
sub
fisttpll
pop
insb
aad
addr16
aad
pop
jb
stc
jmp
call
jge
test
ret
ljmp
adc
in
push
lret
push
pop
dec
lahf
push
lret
mov
popl
rcll
mov
mov
xchg
decb
pop
adc
sub
mov
and
or
xor
add
mov
repnz
cwtl
sub
xchg
hlt
shl
rcll
or
stc
inc
dec
aad
fsubs
pop
lods
jbe
cli
pushf
repnz
movsb
out
fsubs
out
ds
pop
sbb
mov
dec
and
scas
mov
addr16
push
dec
pop
pop
movl
mov
dec
imul
lods
movsl
aad
shlb
mov
aam
mov
cmp
xchg
and
add
ret
xor
insb
dec
cmpsl
test
cmp
and
ror
fwait
adc
inc
mov
push
leave
push
scas
mov
cwtl
adcl
mov
popa
loope
call
enter
adc
imul
roll
mov
scas
add
lret
adc
dec
imul
cmp
dec
push
or
adc
sbb
stos
lret
movl
pop
mulb
ljmp
xor
orb
mov
fidivl
lds
push
xor
mov
dec
inc
add
gs
dec
je
int
mov
test
in
xchg
stos
insl
xchg
pop
mov
xadd
aam
sti
mov
div
pop
mov
mov
movsb
repnz
fwait
mov
mov
adc
xorl
mov
mov
pop
push
and
xchg
ds
sbb
push
or
mov
movsl
xchg
mov
into
push
push
mov
and
mov
jne
pop
push
fdiv
sarb
pop
pop
sub
cmp
or
sbb
call
scas
test
mov
outsb
push
pop
pop
sub
cmp
or
sbb
call
scas
test
mov
outsb
push
pop
pop
mov
or
sbb
call
scas
test
mov
jp
and
dec
jle
sub
cmp
or
push
fs
and
inc
jno
popa
addr16
int3
int3
int3
int3
mov
cmpsl
adcb
subb
and
pop
xor
addr16
push
jo
pusha
mov
cmpsl
adcb
out
xlat
lock
xchg
aaa
sbb
add
xor
and
inc
push
jo
pusha
mov
cmpsl
cltd
xchg
test
mov
xlat
call
add
addr16
bound
pop
adc
adc
cs
fadd
lock
aad
xbegin
adc
lret
sbb
test
lret
mov
nop
pop
or
jp
mull
das
pop
mov
stos
jmp
xor
add
int
std
or
mov
ret
cwtl
mov
pop
pop
sbb
cmc
in
stc
aam
inc
and
push
dec
xor
rcrb
rorb
lock
test
lods
daa
insb
lds
jo
adc
jp
or
mov
clc
dec
mov
in
das
lcall
push
out
test
inc
in
outsl
pop
hlt
lods
dec
js
fcompl
gs
xlat
mov
js
push
iret
insl
fists
jb
data16
cmpsl
nop
xchg
test
out
xlat
lock
stc
aaa
adc
sbb
sub
cmp
addr16
push
push
popa
rclb
rol
rorb
test
inc
add
inc
icebp
xor
aaa
or
stc
shr
hlt
ret
iret
xchg
shrb
inc
fs
gs
pop
and
pop
sub
adc
loop
mov
out
xlat
lock
loopne
adc
add
xor
and
addr16
push
jo
pusha
mov
cmpsl
adcb
out
xlat
lock
loopne
adc
add
xor
and
addr16
push
jo
pusha
mov
xchg
or
clc
mov
leave
jne
and
pop
jb
pop
leave
sti
fisttps
cwtl
sub
imul
mov
fadds
xor
xchg
pushf
out
loope
fbstp
aam
mov
push
iret
test
push
incb
pop
les
dec
add
dec
mov
or
mov
fildl
loopne,pt
int3
jnp
into
lcall
in
arpl
sahf
out
inc
jg
mov
mov
cmp
jmp
lds
or
xor
std
push
add
jnp
loopne
dec
pusha
ljmp
sub
pop
movsb
in
sbb
jne
loope
pop
adc
lret
les
into
sbb
jge
imul
aas
jo
sub
outsl
sti
and
out
lcall
addr16
mov
dec
icebp
pop
push
pushf
xor
rcr
pop
pop
repz
cwtl
mov
add
xchg
pop
add
push
xchg
and
and
jl
jg
imul
and
lret
out
pop
jne
scas
mov
aas
lahf
sbb
js
mov
cwtl
mov
jl
in
xchg
test
push
push
negb
lock
cmp
scas
sub
icebp
or
lock
or
sbb
and
pop
sub
cld
dec
push
inc
movsl
enter
imul
pop
jne
mov
add
mov
stos
push
lahf
xor
in
sahf
add
pop
shrl
loopne
push
xlat
mov
or
xchg
mov
dec
lods
push
outsb
ss
mov
notb
dec
aas
mov
aad
inc
int
stc
push
popf
aad
fmuls
jle
lret
or
or
pop
push
mov
ja
repz
mov
push
dec
xchg
push
mov
dec
xor
xor
jge
sub
sub
int
stc
test
dec
sahf
sysret
lods
aad
cli
adc
leave
lret
inc
pop
loop
sbb
ljmp
aaa
test
aaa
jne
push
int3
mov
and
or
jmp
add
sahf
roll
push
cwtl
add
lods
rolb
cld
imul
xor
mov
or
mov
ds
ficompl
pop
cmc
or
jno
cmp
ret
adc
xchg
cmc
sub
push
jne
popl
int
adcb
sub
jo
stc
mov
test
inc
outsb
insb
orb
fcomp
aam
pop
subb
jle
int3
mov
aas
movsl
bnd
mov
or
div
jbe
sarl
xchg
loope
sbb
jp
add
mov
lea
inc
cltd
xchg
lods
orl
xlat
loope
ror
mov
sarl
mov
stos
testb
and
and
jae
testl
nop
jl
icebp
adc
pushf
xchg
fsubp
test
enter
cmp
push
pop
sub
cmp
jnp
jmp
gs
lods
xor
ret
fwait
shrl
adc
fst
xchg
mov
pop
mov
cwtl
xchg
ljmp
cmp
sbb
xchg
mov
stc
adc
test
out
mov
repnz
adc
inc
je
loope
dec
and
mov
mov
inc
xchg
adc
out
mov
imul
pop
jbe
adc
scas
or
xor
xchg
and
inc
pop
fnstcw
mov
sub
xchg
icebp
inc
sub
sbb
add
lcall
pop
dec
mov
mov
test
mov
sub
add
into
ljmp
out
shrb
fsub
dec
ja
lret
stos
jns
inc
pushf
inc
xor
sbb
mov
int3
pop
add
addr16
das
jns
aas
jno
setae
test
adc
aam
out
push
aad
cltd
adc
sub
shlb
loopne
ds
addr16
xchg
lods
cld
pop
lcall
andb
xchg
call
push
movsb
jl
inc
popf
sbb
dec
mov
inc
rcr
push
pop
mov
xor
sti
mov
dec
sub
cli
push
out
ret
jmp
pop
lods
lahf
iret
jno
mov
popf
xchg
int
push
mov
cwtl
aas
mov
fistpll
sbb
into
jecxz
icebp
pop
mov
and
scas
out
pusha
roll
inc
cmp
cmp
shr
cmp
push
idivl
and
sub
jne
xor
inc
xchg
adc
mov
or
cmpsb
inc
imul
aam
mov
mov
sbb
push
out
cmp
les
daa
push
cmpsl
icebp
xchg
jl
adc
inc
pop
mov
xchg
mov
sahf
jne
cmp
sub
dec
sbb
jne
xchg
jp
jae
push
lods
negl
pop
cmpsb
mov
sbb
or
lods
mov
mov
shrl
outsb
iret
add
ficoms
in
push
imul
popf
push
fcmovnu
sub
out
aaa
in
mov
or
stc
outsl
lahf
pushf
daa
inc
and
jl
subb
or
imul
cs
push
or
add
dec
push
or
sub
lock
sbb
out
es
adc
pop
in
int3
aaa
pushf
gs
ss
inc
xchg
loop
cmp
in
mov
mov
ljmp
in
push
cmp
push
adc
je
sahf
or
scas
pop
scas
leave
push
daa
hlt
fs
xor
sbb
aam
add
pop
xchg
pop
jle
popf
test
xchg
shrb
out
jbe
nop
jg
xorl
xor
int3
xchg
xchg
adc
jle
lods
orb
outsb
movsb
aad
xor
mov
mov
test
cmpl
outsl
or
mov
jns
xlat
push
andb
and
cmpsb
mov
cwtl
mov
fnsave
aad
pop
add
pusha
xchg
cmpsl
push
not
push
and
aaa
cmp
loop
inc
scas
out
sub
xchg
shrb
dec
fcomp
and
jno
fcmovnu
arpl
xchg
sub
repnz
mov
neg
xor
sub
jns
popa
mov
movsl
inc
fidivrs
leave
and
js
pop
xchg
jecxz
push
and
iret
addr16
int3
mov
dec
xor
rcrl
int
push
xor
scas
imulb
bound
shrb
inc
ret
add
adc
std
lods
xorb
shll
xor
pop
out
das
adc
ljmp
mov
out
test
pop
cmc
cmpsb
xchg
inc
les
lock
jns
xchg
arpl
inc
test
stos
divl
addr16
xchg
aas
loopne
push
popf
sahf
mov
and
mov
xchg
ds
add
jo
aas
ss
repnz
iret
movsl
push
adc
ja
push
and
adc
mov
andl
inc
stos
sarl
test
lcall
fisubrs
push
jno
fs
fsubs
leave
xchg
lds
mov
hlt
jg
inc
lock
sbb
xchg
xor
movsl
fwait
inc
outsb
mov
mov
stos
lret
arpl
jo
ret
or
mov
stos
jne
xor
inc
sbb
mov
xor
insl
xchg
or
sar
pushf
xor
mov
dec
fcomps
xor
add
mov
shll
lahf
pop
in
pushf
rcrb
lods
leave
lock
dec
outsl
clc
outsl
mov
fwait
mov
mov
inc
imul
adc
jbe
dec
imul
add
arpl
sub
dec
sub
fiadds
push
and
pop
orb
jmp
imul
stos
scas
test
orl
ficomps
xlat
rolb
ljmp
sbb
xchg
lock
or
das
int
sbb
push
mov
mov
or
test
dec
icebp
cmp
testl
cmpsl
push
inc
jno
mov
cltd
repz
sub
push
jns
sub
jnp
scas
mov
mov
mov
lea
iret
adc
pop
out
inc
repz
lret
imul
inc
sbb
fsubr
mov
push
dec
fsubr
xor
test
mov
pop
xor
decb
in
outsl
dec
pop
inc
mov
dec
or
mov
mov
loop
mov
push
fcomps
mov
repnz
filds
mov
xchg
aas
cmp
lock
cmp
test
out
mov
mov
adc
inc
adcl
push
aad
dec
hlt
sub
aam
push
notb
rolb
rorl
shlb
ljmp
and
fidivl
pop
lret
int
movsl
les
popf
adc
loop
leave
cmp
fisttpl
push
inc
add
ljmp
shll
jb
and
jb
xor
add
and
ja
movsb
adc
cmp
test
or
loopne
push
out
pop
sbbb
fwait
and
cmc
jne
inc
jno
jp
inc
loopne
lds
addb
icebp
into
out
int3
inc
lret
movsb
rcr
pop
inc
sarb
xchg
into
roll
cli
orb
mov
in
mov
push
mov
mov
jmp
fwait
jbe
and
jmp
xchg
mov
add
xchg
repnz
xchg
sub
jge
daa
xchg
je
sub
xchg
adc
sbb
push
outsb
gs
movsb
sbb
or
lods
pop
aad
sbb
jbe
popf
sub
in
repz
rcrl
adc
stos
nop
sbb
mov
jb
mov
cwtl
loope
lahf
ljmp
lret
sub
loop
seto
inc
push
cmc
cmc
cmp
sbb
dec
xor
cs
push
test
and
xor
sub
arpl
adc
or
xchg
jne
inc
lds
cmp
pop
xor
dec
in
push
fildll
int3
add
sub
mov
xor
xchg
in
sbb
adc
ss
fstp
xor
nop
mov
test
data16
and
popa
xchg
fsubp
inc
mov
jl
mov
adc
push
ret
insl
or
mov
pop
add
xchg
test
dec
jae
lcall
mov
sub
bound
jg
and
xor
mulb
sahf
pop
stos
mov
popa
xchg
mov
cwtl
pusha
cltd
shl
aam
leave
jne
xor
cwtl
lods
loop
jb
push
pop
mov
pop
frstor
or
pop
gs
test
jp
push
add
pop
and
cmp
jp
clc
inc
mov
outsl
sub
movsb
dec
stos
fstps
cmpsl
imul
mov
xor
jnp
xchg
mov
data16
in
movsl
loop
ja
dec
inc
pop
js
sub
jecxz
sbb
ds
cs
orl
jmp
add
push
add
movb
orb
cmp
dec
ljmp
ret
hlt
es
inc
in
insl
test
nop
int
aaa
mov
mov
les
popf
das
fsub
jmp
repnz
neg
aaa
std
xor
pop
clc
fcomp
ss
dec
outsl
loop
arpl
jecxz
pop
pop
cmp
jge
ja
addb
pop
das
dec
popf
test
or
into
adc
pop
aam
adc
ja
push
sbb
in
incb
jns
testl
fadds
push
push
lret
jno
notl
or
or
inc
or
xor
jge
mov
test
test
or
xchg
fimull
add
dec
push
sbb
or
xor
xchg
pusha
test
jnp
lods
inc
add
insl
inc
enter
fimuls
pop
push
or
mov
adc
repnz
insl
clc
mov
jns
sbb
imulb
lret
adc
leave
sub
jge
aaa
pop
xchg
rorb
addr16
cmp
pop
adc
popa
and
stos
mov
push
into
mov
pop
dec
mov
fiaddl
pop
adc
shl
xchg
push
inc
ret
cwtl
fwait
cmpsl
jge
shrb
mov
inc
repz
inc
dec
les
adc
jae
repz
adc
mov
pusha
jmp
sahf
inc
jg
lods
das
cmp
mov
pop
subl
mov
xor
js
in
or
cwtl
fstl
fs
lahf
lea
lds
negl
das
loop
mov
inc
dec
idivb
adc
dec
or
xchg
sub
test
mov
push
push
pop
enter
add
jge
xchg
inc
stos
stos
push
in
and
ljmp
in
leave
add
pushl
xor
mov
push
add
mov
push
aas
rcrb
mov
fsubrs
arpl
iret
lock
mov
arpl
or
mov
inc
arpl
mov
jle
aam
sahf
cs
pushf
dec
xlat
pop
xor
insb
mov
mov
inc
push
pop
inc
push
dec
pop
pusha
cmp
icebp
inc
dec
sbb
lret
fs
icebp
inc
cmp
rorl
cmpsb
ficoml
dec
mov
out
lea
fcom
iret
mov
cmp
ret
std
call
daa
jne
jb
xchg
fbld
ljmp
stos
testl
or
ljmp
xchg
cmpb
xchg
jl
inc
icebp
mov
bound
or
mov
pop
pop
xor
push
stos
repnz
add
jns
and
mov
push
out
nop
ret
push
iret
incl
pop
into
fimull
mov
and
lods
xor
mov
data16
xchg
sub
or
xchg
in
idiv
std
js
loop
pop
leave
cmp
lahf
daa
mov
mov
in
mov
sbb
ss
icebp
lock
pop
inc
xor
xchg
sbb
lcall
xor
lahf
mov
xchg
addb
popf
and
shrl
lret
fcomps
out
sub
fisubl
je
dec
out
in
cld
mov
decl
pusha
jns
mov
bound
stos
push
mov
pop
lret
in
mov
jbe
xor
pushl
mov
movsl
mov
popa
cmp
test
push
pop
fcmovne
sub
dec
lds
iret
clc
test
pushf
pop
outsl
in
push
sub
shl
mov
fiadds
or
jne
addr16
pop
mov
sub
shlb
cmpsl
cmp
testb
test
pop
jl
lods
adc
xchg
cs
sbb
push
cmpsb
pop
fadd
jecxz
mov
pop
pushf
orb
pop
shrb
aas
push
cmc
jb
adc
inc
sbb
jecxz
jge
lea
dec
iret
fisubl
inc
out
jg
test
push
cmp
xchg
into
dec
cmp
pushf
test
sbb
mov
and
shl
jecxz
push
mov
xchg
mov
mov
pop
xchg
es
cmp
xchg
adc
mov
dec
sub
cmc
stos
je
outsb
or
push
adc
mov
lea
jbe,pn
lret
sub
andl
fcomp
mov
clc
enter
les
push
imul
lret
dec
dec
cmp
pop
adc
lods
sbb
pushl
leave
jnp
or
xchg
add
in
sbb
sbb
pop
xor
sbb
fwait
push
test
cwtl
decl
popa
inc
xor
mov
mov
mov
sarb
and
sub
mov
insb
repnz
cwtl
adc
repz
xorb
lret
pop
clc
dec
out
jne
sub
inc
pop
ja
imul
scas
jge
in
sbb
fs
lahf
add
sub
mov
fnstenv
jnp
mov
inc
jge
lock
aam
jb
pop
adc
or
xchg
jge
lret
and
and
pop
and
pop
repnz
inc
push
dec
xchg
cmpsl
pop
push
cmp
rep
sahf
or
dec
or
imulb
lds
sarb
pop
dec
ret
and
xor
jbe
addr16
inc
mov
aam
mov
pop
dec
sbb
sbb
push
adc
xor
insb
xor
sbb
inc
add
push
xor
int3
cli
lock
or
shlw
push
dec
lock
into
int
rcrl
cmovns
xchg
mov
call
ja
stc
pop
sub
cmp
adc
pop
pop
sub
stos
outsl
in
decl
mov
pop
dec
or
fnstenv
ja
cmp
mull
scas
popf
xor
push
xchg
mov
cs
jl
in
push
loopne
sahf
js
lea
lods
cmp
adc
in
adcl
dec
orl
loope
inc
popl
lods
insb
mov
adc
scas
push
pop
push
popa
fnstcw
mov
arpl
int3
or
movl
add
sbb
pop
das
movsl
repz
movb
jmp
mov
call
xorl
jl
sahf
sti
push
cmp
inc
sub
push
stos
test
ss
fbld
shlb
pop
jg
mov
mov
cs
fstpl
fstpl
jnp
mov
cmp
inc
pop
cld
outsb
aas
sbb
xor
fldt
jns
xor
jg
loop
mov
clc
hlt
mov
dec
jl
mov
test
imul
jge
popa
push
pop
add
adc
repnz
sbb
jl
cli
stos
enter
mov
jno
ret
ds
mov
xchg
pop
push
rorl
test
mov
jne
jb
cli
and
sub
inc
mov
push
pop
mov
jbe
sbbb
adc
push
jp
push
test
hlt
adc
ret
pop
mov
sub
cmp
sahf
std
lcall
int3
fnstcw
dec
movsl
cld
adc
cmp
sbb
pusha
les
sub
stc
mov
rclb
shr
adc
adc
enter
stos
or
adc
enter
bswap
adc
out
lret
popa
stos
sbbl
xchg
sbb
popf
sahf
jmp
arpl
pusha
rcrl
nop
jge
xchg
das
lods
shll
cld
pop
push
or
jle
or
ljmp
pop
ret
imul
mov
dec
add
into
aad
fucomi
jmp
mov
aaa
jbe
cld
jnp
xchg
mov
cmpsb
out
or
daa
mov
lret
or
mov
popa
push
push
push
lahf
pop
dec
into
fdivrs
inc
aam
daa
xor
jmp
fldt
xchg
and
sub
push
clc
test
in
fwait
ds
mov
inc
mov
mov
fiaddl
insb
sbb
jl
in
and
pop
dec
cmp
cld
mov
sahf
xchg
ret
add
out
or
lods
popa
shlb
inc
push
repz
pop
sub
cmpsb
cmp
xchg
fwait
adc
xchg
xchg
into
fst
dec
dec
int
jns
push
cltd
int3
aam
jp
mov
bound
mov
ds
insb
std
jle
cmp
ss
or
fwait
rol
or
cltd
orl
xor
mov
push
pop
out
jle
or
daa
xor
add
push
sbb
add
js
int
call
lret
lods
stos
mov
sub
and
aaa
shrb
aaa
mov
repz
repz
hlt
mov
inc
hlt
mov
pop
dec
div
test
dec
iret
in
and
sbb
and
mov
push
and
mov
push
stos
pop
push
jbe
jl
pop
mov
xor
and
sub
mov
jp
lds
setg
xchg
aaa
sub
xor
xor
out
and
les
fildl
jne
sub
mov
mov
push
dec
push
aaa
cmp
pop
dec
push
sahf
adc
pop
fldlg2
mov
loopne
mov
mov
jnp
push
leave
dec
insb
xor
in
add
dec
pop
cmp
addr16
stos
pop
enter
mov
pop
xor
out
mov
push
sub
cmp
sub
imul
cltd
pop
mov
cmp
or
repz
push
stos
std
filds
jno
fdivl
pop
sti
fisubs
add
iret
push
ret
inc
add
popa
das
fldt
xor
popf
into
fiaddl
orb
xlat
pop
and
xchg
jl
or
mov
push
out
test
cltd
test
icebp
clc
push
sahf
fwait
aam
arpl
lock
movups
push
arpl
gs
lds
ds
xor
bound
lret
xchg
adc
stos
lahf
push
cmpsb
in
pusha
mov
pusha
fimull
cld
mov
clc
dec
adc
jmp
xlat
push
idiv
inc
push
xor
or
dec
sbb
addr16
sub
repnz
lods
pop
pusha
add
lods
in
pop
out
scas
jae
push
cmp
push
adc
sbb
test
jp
jp
push
neg
xchg
test
mov
jmp
cltd
int
xor
sub
add
cmpsl
cmp
and
leave
imul
pop
jb
into
loopne
pop
xchg
or
enter
dec
pop
fcoms
push
decl
rcrb
jge
cmp
xchg
push
mov
xchg
imul
mov
and
jmp
or
fmuls
mov
daa
in
in
gs
ds
adc
or
sub
mov
mov
imul
mov
test
cltd
pop
xchg
mov
sub
in
inc
dec
enter
sti
dec
orl
rorb
mov
mov
adc
cmp
dec
dec
aaa
pop
jns
out
decl
iret
xor
ret
dec
adc
lock
push
push
mov
xlat
lds
sub
sbb
dec
sbb
enter
xor
in
ss
xor
xchg
ds
sbb
add
xchg
aas
test
mov
je
mov
test
test
xchg
cwtl
sub
push
mov
inc
push
xor
insl
movsl
inc
pop
sbb
jmp
push
push
scas
sbb
dec
add
sub
inc
jns
int
push
mov
lods
adc
fcompl
mov
lock
jns
dec
test
pop
add
dec
or
sbb
mov
push
out
or
in
xlat
cltd
inc
mov
or
sbb
gs
mov
xlat
mov
pop
and
add
sbb
pop
jae,pn
in
cmp
test
cwtl
cltd
jae
sti
iret
push
jns
cmpsb
pop
pop
mov
das
pop
sbb
fs
lcall
fiaddl
fistps
leave
or
dec
sub
iret
add
jg
push
movsb
push
stos
pop
clc
rcl
add
sub
xlat
jnp
lcall
xlat
jne
insl
jl
test
pop
pop
cmp
aad
cmc
xchg
push
ss
push
fisubl
dec
decb
fs
les
test
xchg
xlat
lock
loopne
adc
add
xor
and
addr16
push
jo
pusha
mov
cmpsl
adcb
out
xlat
lock
loopne
adc
add
xor
and
addr16
push
jo
pusha
mov
cmpsl
adcb
out
xlat
lock
loopne
adc
add
xor
and
push
addr16
push
je
fs
cmpsl
test
shl
rclb
and
adc
stos
mov
fsubr
aas
scas
movswl
int3
int3
int3
int3
int3
push
mov
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
mov
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
call
push
mov
call
xor
leave
ret
jmp
xor
and
push
xchg
arpl
jns
dec
mov
mov
sbb
sbb
jmp
xor
and
jae
sbb
jns
dec
mov
mov
or
sbb
lock
add
xor
and
jae
arpl
pop
mov
sub
dec
nop
andb
leave
pop
scas
and
jae
inc
dec
clc
pop
call
sarb
and
sub
outsl
cmpsb
adcl
or
or
in
out
jl
cmpsb
cmpsl
jns
sub
or
out
push
adc
and
add
xchg
jno
aam
sub
jbe
pop
call
sbb
je
lock
popf
loop
js
jl
cmpsb
inc
sarl
cmp
mov
arpl
scas
push
inc
imul
roll
or
mov
arpl
mov
es
xor
xor
or
or
sbb
and
loopne
leave
xor
and
jae
arpl
popa
adcl
mov
adc
sbb
lods
xor
sub
xor
adc
xlat
sub
je
xchg
data16
push
test
jns
fcomps
dec
loopne
sub
jge
mov
dec
movsl
inc
mov
loope
mov
arpl
jns
dec
mov
mov
or
sbb
jmp
xor
and
jae
arpl
jns
dec
mov
mov
or
sbb
jmp
fisubrs
xor
cmc
add
sub
lret
and
mov
push
es
clc
stc
insl
stos
movsl
out
pop
dec
popa
ficomps
add
movsb
add
push
pop
in
mov
mov
sarl
pop
cmp
in
dec
movsb
pop
xchg
movsl
rorb
lea
pop
aad
lods
aas
mov
faddl
aad
leave
mov
xlat
aad
outsl
adc
jb
cmp
sti
push
push
stos
cmp
mov
aas
xor
jns
arpl
dec
sub
mov
into
xchg
dec
aam
loope
add
sti
push
and
or
mov
test
mov
sbb
push
test
bound
jl
jno
rcl
cmp
sahf
outsb
pop
pop
in
std
xchg
pop
rcl
xchg
enter
jne
mov
inc
jno
push
arpl
xchg
cmp
std
pop
call
test
outsl
prefetch
or
sahf
les
out
adc
jne
test
jg,pt
or
or
push
push
popf
jle
xor
adc
inc
mov
nop
add
ret
dec
pushf
mov
scas
dec
call
fstpl
inc
fiaddl
push
lret
roll
xchg
sub
dec
xchg
mov
adc
out
dec
imul
mov
lret
xchg
mov
fildll
imul
aam
pop
cmp
xchg
dec
pop
and
push
fcmovu
mov
lahf
mov
fisubrs
fildl
mov
cmp
test
aas
loop
xlat
push
leave
cld
ds
cmp
test
mov
jbe
mov
mov
xor
mov
push
test
movsb
push
dec
jns
dec
jge
sbb
nop
call
lods
rclb
pop
cmpsb
das
fs
or
insb
sub
mul
mov
out
hlt
das
daa
out
addr16
fwait
inc
sub
adc
es
orl
stc
das
aad
fwait
in
cmp
inc
xchg
mov
push
inc
push
cmpsb
aas
jns
jnp
stos
loope
and
aam
lods
loope
adcb
sub
sub
xor
fcompl
les
xor
lods
out
bound
cltd
lea
cmp
sbb
movb
cmpsb
push
clc
leave
and
orl
push
xor
add
jnp
movsb
nop
dec
loopne
pushf
inc
adc
int
cmp
cltd
lret
and
jge
aaa
iret
aam
sbb
lret
xchg
ss
mov
sub
dec
pop
mov
sbb
cmp
jmp
or
cmp
jg
cmp
in
xor
xor
mov
pop
xor
ja
mov
mov
mov
aam
in
scas
out
pop
in
cmp
push
dec
add
xchg
shll
jmp
pushf
or
in
mov
shl
mov
scas
imul
fmulp
fstl
adc
add
lds
daa
bound
pop
dec
loop
cmc
ficomps
repnz
popl
bound
jne
enter
cli
dec
cmpsb
std
xchg
xchg
pop
imul
inc
cs
xchg
push
imul
pop
aaa
cltd
push
loope
jb
dec
dec
add
jns
insl
outsl
pop
enter
or
xor
push
jae
push
in
and
test
sub
pushf
aam
jmp
scas
mov
cmp
jl
fdivl
out
and
pop
test
inc
hlt
pusha
push
or
mov
arpl
inc
loop
cs
adc
sarb
jno
sub
jns
jg
stc
xchg
lods
and
adc
mov
outsb
fldenv
dec
frstor
xchg
stc
popa
pop
mov
sub
and
xchg
fstpl
mov
gs
sbb
int
outsl
xor
mov
cltd
fcmovnb
jp
push
xor
ret
ret
jb
or
stc
ficoml
jb
arpl
pop
loop
in
and
add
repnz
popa
lock
rcrb
nop
fsubl
icebp
test
adcb
adc
mov
out
and
clc
mov
imul
mov
ja
pop
xchg
push
ljmp
outsl
mov
adc
test
iret
test
xor
imul
in
jno
mov
mov
fnsave
adc
push
xlat
test
add
pop
push
sbbl
mov
js
cmp
xchg
insb
or
dec
mov
scas
xchg
sub
pop
mov
or
jo
inc
insb
jne
or
dec
ret
jo
shr
xor
add
mov
enter
cmp
or
ficoms
lds
es
std
add
lods
fildll
jge
js
jg
insl
scas
outsl
cmp
cmp
cwtl
inc
sub
cmp
sbb
cmp
mov
mov
test
out
xchg
jbe
and
fs
int3
xchg
outsb
lods
out
fldl
sbb
pushf
sub
cltd
inc
pop
imul
push
lds
mov
push
jno
dec
adc
mov
dec
daa
nop
popf
jnp
ljmp
or
fidivl
mov
aas
int
stc
negb
jge
movsb
arpl
enter
adc
dec
outsb
call
mov
lods
or
adc
iret
mov
xor
test
push
stos
xchg
aas
mov
mov
sahf
xlat
shlb
adc
mov
test
mov
imul
out
out
loop
lods
xchg
xchg
fs
add
test
inc
sbb
push
sub
cmp
out
movsl
push
popf
adc
andb
clc
xor
inc
aaa
stos
push
clc
cmc
popf
add
xchg
push
adc
lea
jmp
into
xchg
sub
mov
rolb
outsb
lock
push
adc
mov
push
je
jecxz
and
xor
add
xchg
ror
iret
push
clc
das
loopne
idivl
jbe
add
pop
and
mov
dec
icebp
pop
or
xchg
push
cmc
push
rorb
je
and
cmp
xor
ret
not
sarl
lahf
pop
out
push
je
adc
std
cli
loope
nop
jae
mov
xchg
adc
dec
mov
mov
add
daa
push
xor
jle
mov
cmpsb
in
mov
xor
nop
daa
add
rcll
xor
lret
mov
jb
and
jo
jo
aam
dec
add
and
mov
mov
negl
mov
in
jl
pop
hlt
imul
add
fs
cmc
xchg
sub
mov
scas
pop
mov
popa
divl
jno
aaa
int3
fs
add
xor
adc
shll
aas
jle
lret
outsb
dec
loopne
movsl
xchg
fcmove
inc
jne
movsl
xor
dec
mov
insl
mov
xor
cmp
xor
push
sbb
adc
mov
push
pushf
xchg
lcall
enter
and
rcr
enter
sub
mov
xchg
mov
push
lret
rolb
push
mov
sub
scas
jle
push
gs
push
mov
stos
mull
int
sub
mov
cmc
cmpsl
in
test
lods
mov
jmp
loopne
mov
mov
out
inc
cmpsb
xchg
add
outsl
insb
imul
roll
push
out
mov
adc
sbb
and
stos
mov
dec
or
jbe
rorl
ljmp
dec
mov
dec
add
clc
sbb
mov
fdiv
or
pop
jecxz
stos
mov
jl
in
mov
sbb
lods
test
xor
mov
add
and
cmp
mov
jge
mov
jbe
xchg
movsb
scas
push
pop
pushf
sub
mov
sbb
out
inc
add
dec
add
movsl
stos
sar
push
imul
push
xchg
popf
push
repz
adc
push
pop
mov
xchg
lea
outsb
jle
aam
jmp
aas
stos
and
adc
test
out
sub
jp
fcoms
andl
jae
int3
jle
xchg
add
mov
xor
les
flds
stos
sbb
and
test
xchg
repz
int3
and
negl
test
push
mov
pop
inc
aad
sbb
cmpsb
and
xor
ret
sbb
andb
popf
loopne
xorb
lea
xchg
xchg
jns
or
adc
dec
ret
es
push
aad
dec
inc
call
popa
and
loop
popa
pop
lret
jo
ret
lods
loope
pop
mov
fsubrl
and
in
mov
mov
lea
sub
push
decl
fcompl
je
fs
push
mov
sbb
mov
lcall
xor
dec
sub
xchg
pop
xchg
fbstp
pop
cltd
and
cmp
inc
inc
cmc
push
jae
push
clc
popa
push
sub
leave
mov
push
fidivs
lods
inc
mov
push
sub
popa
outsb
jmp
lock
rclb
lods
dec
mov
adc
adcl
jno
mov
ja
cld
and
jnp
jne
in
push
lods
mov
arpl
fsubl
fidivrs
mov
push
dec
pop
jbe
mov
flds
fdivrs
pop
cltd
cmpsl
cmp
test
pop
repnz
mov
sbb
jle
adc
push
or
rorb
mov
and
fsts
jge
xor
test
sub
mov
movsb
xlat
or
push
pop
add
insb
sbb
xchg
fisttpl
scas
sub
pop
dec
push
mov
xchg
arpl
pop
and
mov
dec
lods
inc
xchg
add
cmp
mov
push
or
fiadds
inc
stos
sub
pop
in
shll
cwtl
or
xor
in
gs
inc
icebp
sbb
int3
xchg
fsub
jg
jb
fs
cli
xchg
aad
mov
clts
imul
mov
insl
or
pusha
daa
sbb
ljmp
mov
add
outsl
stc
inc
aad
fisubl
pusha
pop
scas
and
or
inc
addr16
xchg
cltd
sar
pop
or
aad
aam
mov
fistpl
and
mov
cmp
xchg
mov
mov
test
loop
insl
pop
roll
jl
lea
mov
fsubrp
or
mov
sbb
cmp
cld
add
add
mov
movsb
sahf
sub
fbstp
pop
pushf
pusha
sahf
or
iret
xor
fs
lock
adc
jmp
inc
sbb
cs
out
int3
out
pop
ds
leave
push
or
push
repnz
iret
inc
xchg
xchg
enter
push
pushf
push
out
fidivs
outsb
cltd
xor
xor
mov
mov
mov
loop
mov
xchg
mov
or
jl
lahf
js
cmpsl
push
cmp
outsl
adc
inc
popf
shrl
and
loopne
ret
out
das
add
mov
data16
mov
jo
insb
imul
xchg
xor
lret
loope
dec
lcall
in
fisttps
cmpsl
ds
scas
call
lds
lcall
leave
lods
test
pop
fistpll
sub
lcall
cs
ljmp
add
xchg
js
dec
and
jo
pextrw
dec
cwtl
pop
insl
xchg
pop
dec
dec
lds
out
daa
adc
add
cli
or
pop
test
shld
jns
gs
pop
add
incl
stos
xor
jl
pushf
xchg
bound
cmc
mov
mov
popf
dec
sahf
jb
inc
test
xor
sbb
jp
dec
lock
daa
and
iret
pop
aas
lret
pop
add
push
repz
cltd
adc
sbb
outsl
in
push
cmp
pop
aaa
cwtl
xlat
jne
add
test
add
sub
or
insb
test
pop
orps
hlt
add
xchg
lret
add
jo
cmp
pushf
imul
sub
pop
cltd
or
pusha
movsl
sub
pop
inc
jmp
lds
xchg
pop
and
or
shll
enter
filds
call
shll
add
nop
add
inc
scas
mov
sarb
je
icebp
test
pop
mov
fdivl
sarb
adc
lds
imul
rcrl
mov
jge
pop
cmp
inc
mov
adc
mov
ljmp
jns
mov
pop
xor
pop
dec
pop
xchg
lods
push
sub
pop
loopne
or
scas
sbb
jge
repz
enter
mov
mov
fucom
pushf
sbb
sub
mov
enter
xor
and
mov
das
pop
in
push
dec
and
adc
dec
cmp
adc
insl
shlb
mov
fstl
jne
std
inc
aam
push
or
fildll
xchg
mov
ds
add
pop
scas
ja
movsb
cmp
sti
out
ret
fcoms
test
icebp
cli
mov
dec
data16
lret
push
lret
push
subb
test
cmp
fbstp
push
cwtl
xchg
dec
add
data16
jle
fsts
stos
xor
lahf
pop
div
lret
dec
push
test
scas
bnd
gs
xlat
ret
notb
pusha
fdivrs
jp
out
xchg
lock
int
jae
sahf
cmp
cltd
loope
push
enter
jno
rcrb
insb
jge
pop
jg
xor
in
add
mov
fdivr
pop
js
inc
cmpsl
filds
xchg
shlb
mov
or
pop
mov
xchg
xchg
pop
mov
imul
or
lock
cmc
repnz
int
and
pop
sub
ficoms
jl
fwait
aaa
push
lods
cwtl
out
out
jns
pop
mov
int3
pop
sbb
in
cmp
xlat
js
lods
test
push
loopne
fildll
cmp
jge
iret
je
mov
mov
or
orb
inc
ret
and
mov
out
lock
xchg
in
add
lahf
test
clc
xchg
push
xor
lret
arpl
xchg
iret
mov
inc
cmp
mov
mov
in
shr
adc
xor
out
lret
dec
inc
jbe
jmp
in
pushf
adc
mov
mov
lcall
sub
fdivl
mul
add
mov
lahf
push
test
add
jno
into
scas
sbb
shrb
imul
pop
jb
sub
jnp
sbb
jle
mov
imul
ja
sbb
sbb
push
dec
cmp
xchg
push
mov
loopne
mov
lret
xor
lds
sbb
popa
xchg
dec
movsb
ljmp
push
mov
sbb
inc
cmpsl
enter
push
test
aas
xor
fildll
fdivs
and
popf
jle
pop
xor
mov
push
outsl
jp
out
pushl
jp
and
movsl
icebp
cld
xor
incb
cmp
adc
dec
or
cmp
jecxz
cmpsl
lret
movsb
jne
mov
inc
or
sbb
xchg
nop
popl
shll
push
shlb
jge
pop
stos
out
xchg
and
or
insb
sbb
or
xor
push
test
mov
dec
xor
mov
cmp
cs
movb
repnz
loop
inc
and
xchg
call
iret
into
jno
popa
xor
cmpsl
cmpsb
xchg
fidivrs
dec
lahf
xcrypt-ctr
cmpsl
sbb
rorw
add
lea
sub
ljmp
arpl
outsl
leave
push
ja
pop
fdivr
es
add
xor
dec
jecxz
mov
mov
stos
cld
xor
repnz
orb
xor
mov
stc
inc
jo
mov
inc
jbe
insl
adc
lds
xor
pop
pop
or
cs
mov
pop
add
lret
cmp
aaa
jle
xchg
repnz
int
fs
lret
mov
test
jb
jb
mov
addr16
xchg
in
pop
sarl
xchg
fs
loope
cmp
std
ss
imul
enter
ds
pop
sub
fcom
insl
mov
pop
xor
pushf
sub
mov
adc
xchg
cli
sbb
cmpsl
xchg
test
push
jb
arpl
sub
leave
jne
add
or
out
div
jb
and
lret
fs
adc
cmpsb
dec
in
and
pop
sbb
aad
loopne
jbe
sbb
imul
ja
fdivs
repnz
in
mov
push
jle
test
pop
add
mov
addr16
lcall
mov
inc
repz
mov
pop
adc
and
sub
stos
cmp
lods
mov
and
or
push
stc
inc
int
shrb
insb
adc
pop
mov
xor
loope
jo
and
nop
inc
shll
jo
int3
movsl
inc
pop
ficomps
fcoms
dec
dec
fsubs
lcall
aaa
fwait
shrb
ja
test
iret
shll
lods
shr
test
dec
cmp
aas
sar
lds
pop
into
dec
rcr
cmc
push
cmpsb
add
stc
adcb
lock
fildll
clc
sub
mov
and
pop
rcrb
cmpsl
pop
outsl
mov
and
xchg
push
jo
in
inc
fwait
hlt
cmp
lds
pushf
mov
xor
jecxz
orb
loop
clc
fldl
pop
mov
lahf
xor
add
sbb
scas
jb
std
jmp
fimuls
in
dec
jne
push
adc
cmpsl
sub
sub
sbb
fistps
cmp
xchg
inc
xor
xor
rcrb
add
cmpsb
or
mov
xchg
ret
xchg
test
outsl
pop
rclb
mov
dec
dec
ror
mov
mov
lret
ja
inc
mov
push
inc
inc
sahf
dec
add
pusha
ficompl
xor
adc
xor
in
xchg
push
add
pop
dec
fidivs
jae
fisubrs
sbb
mov
dec
add
mov
xor
enter
fists
sub
cmp
loop
nop
daa
xchg
pop
sbb
lret
lea
loopne
mov
testb
ljmp
fildll
outsb
pushf
movsl
adc
mov
dec
push
mov
fstpt
ss
inc
sub
and
imul
add
lods
mov
pop
imul
mov
aam
das
pop
out
add
loope
loopne
icebp
and
dec
push
cmp
cmp
test
dec
popa
mov
daa
in
fisubs
or
lcall
psubsb
faddp
xor
cmp
fwait
out
push
xor
sahf
mov
daa
pop
xor
pop
loopne
mov
ljmp
mov
insl
add
sbb
mov
icebp
lret
mov
xor
pushf
cmc
xchg
or
xchg
jl
sarb
mov
nop
fsubl
pop
enter
mov
adc
imul
sub
sub
add
movl
and
hlt
shlb
or
loop
rorl
and
mov
sub
aaa
push
mov
or
lret
mov
or
pop
int3
rol
mov
xlat
sbb
ja
jo
pop
and
stc
mov
sbb
adc
pop
lahf
loope
xor
scas
roll
scas
pop
sbbb
lds
je
sub
outsl
cmpb
mov
push
xchg
addb
pop
int3
imul
jo
out
cmp
das
jnp
add
lcall
xchg
decb
mov
lods
xchg
es
and
or
mov
shr
push
popf
into
xchg
mov
outsb
rcl
cmp
rcll
pop
or
scas
jmp
and
jmp
pop
in
imul
aam
rol
fbld
mov
mov
repnz
jg
in
je
adc
cmp
xor
lds
test
cmp
cmp
mov
pop
xor
mov
test
xchg
lock
data16
cwtl
fiadds
mov
inc
insl
mov
gs
lea
stos
addr16
push
dec
cmc
loop
in
movsb
pushf
fwait
movsb
in
lahf
and
ss
sahf
outsl
sarb
mov
sbb
cwtl
std
mov
test
xchg
mov
stc
leave
sahf
xorl
fwait
pop
divl
lods
loopne
xor
lds
or
arpl
push
lods
scas
shl
lods
sub
inc
mov
ret
aam
in
aad
inc
test
inc
sbb
arpl
jbe
jne
in
repz
xor
fnstcw
adc
mov
xchg
ljmp
sbb
int
daa
pushf
jecxz
pop
nop
int
fildl
sub
dec
sub
lcall
mov
out
in
fnstcw
mov
push
jl
jp
xchg
add
outsl
scas
out
or
in
mov
inc
xor
mov
in
lods
out
jb
arpl
pop
push
pop
push
mov
adc
sti
cltd
mov
jnp
pop
stos
enter
push
bound
xchg
or
mov
aaa
rolb
pop
test
mov
fists
jns
mov
or
mov
cmp
inc
mov
fwait
xor
popf
cmc
ljmp
lods
insl
pop
add
mov
pop
stos
jge
in
jns
mov
jo
cmp
pop
fucomip
and
push
inc
sbb
je
repnz
adc
pop
and
pop
int3
jns
and
and
nop
push
dec
pushf
lcall
sbb
in
dec
cli
pop
mov
jne
push
in
sub
in
arpl
cmpsb
in
enter
sub
out
in
hlt
cmp
pop
outsl
jae
ret
pop
fisubl
test
in
mov
sbb
xchg
sub
lds
pop
xor
mov
out
dec
movsl
sbb
adc
xchg
pushf
nop
inc
repz
and
pminub
sub
mov
lret
cmp
jp
cld
dec
jp
sub
mov
les
mov
xchg
adc
or
push
xchg
loope
push
push
inc
pop
mov
dec
adc
out
mov
iret
jo
movsl
outsb
sbb
inc
loopne
fstpt
and
ja
lahf
mov
lret
adc
mov
test
xchg
iret
xor
insb
or
add
add
mov
fadds
jb,pt
mov
and
mov
cmpsb
jecxz
push
xlat
int3
daa
xchg
adc
repnz
ds
xchg
pop
inc
inc
xchg
pop
xor
xchg
lret
mov
mov
mov
adc
and
pop
add
or
je
test
in
inc
sub
int
lret
add
xor
and
jae
arpl
jns
dec
mov
mov
or
sbb
jmp
xor
and
jae
arpl
jns
dec
mov
mov
or
sbb
jmp
xor
and
jae
arpl
jns
dec
mov
mov
or
sbb
jmp
xor
and
jae
arpl
mov
aam
pop
mov
testb
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
push
push
call
push
push
pushl
push
push
call
call
mov
leave
ret
xchg
mov
loop
mov
ret
xor
sbb
inc
clc
mov
and
sbb
dec
jecxz
add
xor
insl
pushf
push
enter
repnz
faddp
js
xor
test
aam
out
inc
stc
inc
enter
mov
sbb
dec
lock
jecxz
cmp
xor
popa
adc
xor
jmp
push
xor
xchg
dec
cmp
xchg
sbb
or
cld
inc
out
ja
jae
insl
push
imul
jmp
lret
cwtl
inc
loopne
or
cmp
pusha
test
add
ja
data16
mov
scas
cmp
inc
xchg
jne
dec
mov
xlat
xchg
dec
and
mov
fsubl
gs
cli
pushf
daa
shrd
outsb
negl
dec
xchg
lock
rorb
adc
push
ret
fwait
ret
sbb
clc
inc
cwtl
xor
insb
not
mov
and
xchg
mov
inc
mov
cwtl
pop
insl
sub
push
lea
cmp
push
jecxz
popa
pop
add
mov
mov
mov
pop
orl
iret
jbe
push
or
xchg
cmp
xchg
push
addl
sbb
lds
filds
xchg
sbb
nop
stc
in
jno
add
push
cltd
add
or
iret
pop
fildll
jecxz
repz
mov
xor
inc
clc
push
enter
sub
sbb
dec
jecxz
repz
mov
xor
inc
clc
push
enter
sub
inc
pop
and
sbb
scas
inc
lahf
cmp
or
push
add
adc
ud0
in
sub
bound
repnz
das
jmp
dec
inc
daa
xchg
xor
popf
hlt
push
dec
fnstcw
mov
test
xchg
or
sti
int
sbb
sbbb
mov
push
not
test
or
or
fildl
pushf
adc
sub
sub
cmp
mov
mov
and
cmp
insl
pop
mov
mov
and
pushf
mov
jge
xor
mov
inc
adc
popf
sarb
movsb
fnsave
mov
addr16
cmp
mov
jle
frstor
push
movsl
nop
clc
cmc
push
jne
ds
cld
popa
movsb
cmp
mov
mov
cmp
pop
adc
outsb
lret
shll
test
clc
adc
jle
inc
or
mov
dec
inc
and
gs
ds
outsl
cs
add
mov
pop
fistps
icebp
sbb
inc
pushf
mov
mov
js
fwait
push
sbbl
call
fiaddl
cmp
jb
xlat
xchg
int3
test
test
xor
outsb
pusha
mov
testb
fnstcw
int
lret
lahf
push
jbe
add
call
filds
jmp
popf
dec
mov
nop
insl
test
repnz
xchg
sbb
or
daa
mov
push
stos
mov
dec
js
fstpl
clc
stc
daa
mov
rcl
dec
xchg
inc
lret
mov
xor
ss
out
std
mov
fsubrs
push
mov
lahf
or
dec
and
icebp
xchg
mov
jecxz
jae
mov
push
jp
inc
js
icebp
les
and
loopne
cmc
mov
andb
mov
pusha
outsb
test
or
add
mov
divl
cmpb
ret
mov
pop
cmp
sbb
int3
stos
push
lahf
add
mov
stos
mov
and
push
pop
sbb
push
cmp
cltd
xor
and
stc
lret
scas
fsubrl
mov
shl
hlt
repz
scas
mov
sbb
dec
jle
dec
xor
adc
js
pop
adc
lock
dec
jmp
sub
mov
loope
push
cli
insl
mov
xor
jo
aad
or
ror
hlt
jne
mov
mov
stc
imul
add
xor
aaa
arpl
mov
loope
push
sbb
jno
xchg
in
adc
popl
adc
sbb
test
pop
and
sbb
repnz
mov
daa
jmp
nop
xor
clc
cli
lods
xchg
dec
xchg
dec
add
imul
cmpsb
mull
xchg
dec
mov
cmpsl
pop
iret
call
iret
scas
jbe
jl
or
sbb
cmp
inc
ret
mov
mov
popa
fdivl
shll
add
dec
int3
jne
stc
cmpsl
cmp
int3
icebp
cmp
shl
pop
sub
or
pop
or
xchg
or
push
jnp
or
je
mov
mov
loop
out
movsl
enter
cmp
ret
arpl
xchg
fwait
shrb
mov
cmp
pop
inc
das
pop
push
inc
jns
test
into
out
adc
pop
cmp
cmp
push
or
andb
ficoms
imul
sbb
out
add
sub
jl
jecxz
mov
scas
cmp
rclb
ss
popf
sub
adc
lahf
xor
jmp
gs
test
mov
pop
or
divb
jno
lods
repz
dec
int
mov
mov
pusha
loopne
pop
mov
inc
sbb
test
ret
es
mov
int3
ljmp
imul
frstor
dec
push
dec
sti
fldt
sbb
xchg
fs
js
cli
test
cmp
icebp
mov
and
add
sbb
xor
sub
push
leave
aad
fidivs
and
pop
pushf
out
insb
jne
dec
cld
test
lret
scas
loopne
inc
mov
mov
out
inc
ror
ja
push
call
push
outsb
std
cld
test
xchg
inc
cmc
mov
loopne
call
shll
sarb
mov
dec
sub
sbb
jecxz
pop
leave
fdivrs
fsubs
ficompl
int3
out
sbb
sub
pop
daa
jle
fiadds
jmp
aas
ret
out
das
mov
inc
xor
push
pop
dec
stos
bound
mov
and
mov
test
sub
rclb
cmpb
xor
mov
test
inc
popa
rcr
sub
ret
add
add
sub
xchg
pop
or
mov
in
fmuls
jp
fnstsw
scas
or
out
dec
cmp
mov
push
mov
es
mov
push
xchg
in
push
test
mov
imul
xchg
push
mov
in
xor
stos
pop
push
loop
mov
cmp
sbb
jne
lcall
pop
xchg
push
imul
push
mov
aas
pop
jae
insb
push
mov
repz
bound
into
jo
adc
lahf
in
pushf
fistpl
les
sahf
cmp
and
sbb
mov
or
fistpl
out
sarb
mov
push
push
mov
ljmp
cmp
test
lret
xchg
aad
or
ja
xchg
sbb
inc
sub
bound
loope
je
pop
imul
lcall
mov
add
push
test
gs
repz
in
sub
xchg
jbe
js
dec
and
fs
cmpsb
add
push
dec
push
push
fisttpl
or
jnp
in
out
test
mov
cld
sbb
ficompl
mov
sbb
testl
pop
bound
inc
sub
adc
ficoml
out
aad
in
xchg
adcb
and
sti
pop
mov
fiadds
mov
sbb
mov
sub
scas
pop
call
out
sti
out
shll
pushf
cmc
xchg
mov
cs
scas
in
or
xor
das
les
arpl
push
fidivl
popf
mov
es
mov
in
jae
daa
pop
loop
adc
push
mov
addb
cmp
lcall
push
pop
mov
es
mov
sbb
iret
dec
pushf
sbb
mov
push
outsl
outsl
repnz
mov
loopne
lcall
aad
shl
les
mov
cmp
inc
pop
call
scas
jg
mov
aaa
sub
movsb
mov
bsr
lcall
push
icebp
test
add
push
in
nop
mov
jne
jg
clc
ss
subb
add
cld
mov
xlat
jle
cmp
mov
leave
fmuls
in
and
jmp
mov
jno
xchg
jne
fidivl
dec
inc
sub
inc
mov
insl
push
mov
cmpsb
cwtl
rcll
cltd
cmp
cltd
cmp
sub
fnstcw
dec
ljmp
je
jns
push
mov
addr16
xor
dec
mov
lods
in
ret
insl
mov
fmull
adc
arpl
js
inc
in
mov
xor
mov
pop
or
jnp
fsubrl
push
sbb
jnp
lods
pop
mov
lahf
dec
xchg
cmp
inc
add
pushf
mov
xchg
pop
or
out
hlt
push
adc
test
jb
scas
xor
arpl
pop
push
movsl
std
shl
cmpb
aad
add
push
ficomps
mov
gs
wrmsr
and
mov
movsl
push
mov
ja
jecxz
loope
lret
sbb
lds
aaa
add
test
fwait
cltd
das
lcall
cmp
inc
dec
push
imul
fldenv
push
nop
mov
add
or
movsl
test
pop
addl
pusha
xorl
rol
shll
push
xor
xor
mov
pushf
call
mov
mov
test
movsb
in
lahf
xlat
jno
inc
and
stos
inc
lds
mov
test
mov
mov
pop
push
popf
cmp
std
repz
xchg
loopne
aam
mov
movb
add
xchg
adc
int3
imul
test
and
mov
sbb
xlat
mov
outsl
aam
lds
mov
mov
shll
into
sbb
lret
sub
xchg
push
sbb
or
das
out
hlt
lahf
ljmp
das
or
cltd
pop
xor
in
rol
or
lahf
adcl
and
ds
push
push
fldcw
lret
jge
fisubrs
jp
icebp
cmp
mov
xchg
fninit
and
jmp
lea
lods
inc
mov
ds
xor
cmp
cwtl
push
outsb
add
add
bswap
and
enter
mov
call
repz
mov
out
xor
jle
adc
sar
inc
and
cmp
repnz
inc
aaa
out
xor
mov
lods
fstpl
dec
pop
xor
aam
sub
push
stos
jnp
movsl
and
sarb
sbb
mov
inc
jp
adc
sbb
adc
icebp
jne
clc
int
mov
mov
sar
xchg
mov
or
xchg
das
cmpsb
leave
dec
pusha
inc
sbb
adc
push
inc
stc
imul
imul
outsl
out
add
icebp
sahf
pop
pushf
scas
mov
and
push
insl
cltd
xchg
sbb
fisubl
jg
push
ja
dec
push
adc
and
xor
sub
xorb
dec
and
mov
jne
shl
sbb
out
inc
add
call
pop
lret
jmp
mov
sti
iret
push
rclb
lret
push
jmp
lds
pop
or
xchg
jnp
icebp
adc
sub
cmc
jl
outsl
push
sbb
xor
cmpsb
cmp
or
outsl
pusha
aaa
jp
push
push
aas
mov
movsb
push
or
jmp
xchg
sti
sbb
out
inc
adc
movl
repnz
jle
int3
inc
adc
clc
jnp
test
mov
adc
and
test
adc
cmp
inc
daa
inc
iret
sub
fisubrl
dec
cld
inc
dec
push
adc
jecxz
rcrb
xor
add
scas
jg
or
xchg
bound
mov
cltd
bound
imul
inc
cmp
mov
jnp
out
movsb
and
jae
ds
mov
inc
dec
push
jle
push
push
pop
pop
xchg
fildl
aad
pop
pusha
push
push
cmp
xchg
mov
hlt
cld
into
or
xor
ret
mov
inc
push
cmc
sbb
add
mov
addr16
xor
lret
pop
xchg
xor
ljmp
push
dec
inc
fidivl
mov
and
push
sbb
loope
dec
sub
sbb
jmp
outsb
cld
pop
stc
and
dec
movb
imul
ret
push
xlat
pusha
mov
insl
jb
lods
sti
movsl
cwtl
lds
add
lret
sbb
sub
out
mov
xor
into
mov
dec
sbb
xor
mov
lock
pop
ret
leave
mov
mov
push
lret
cmp
rcll
cmp
test
cmp
mov
dec
adc
dec
enter
out
cltd
shll
push
mov
lret
push
mov
and
hlt
loopne
add
mov
nop
jnp
in
mov
cmp
xor
cmp
inc
movsl
std
dec
jp
cmp
sbb
fldl
push
pop
jno
outsb
sub
test
das
jmp
mov
cltd
inc
add
pop
or
dec
cltd
mov
jecxz
pop
push
adc
repz
rorb
pop
push
pop
xchg
cmpsl
mov
mov
mov
dec
mov
sub
fwait
pop
stc
test
xchg
pop
jns
sbb
rcll
enter
dec
jbe
or
push
push
sub
icebp
into
cmc
shl
jecxz
je
jno
jne
movsb
or
jae
les
mov
or
fs
lock
adc
xcrypt-ofb
cmpsl
insb
sub
adc
out
add
sbb
mov
or
adc
xchg
cltd
mov
jmp
mov
sbb
cwtl
jg
inc
jb
pop
sbb
mov
pushf
inc
negb
xchg
lods
je
jg
icebp
xor
pop
mov
mov
icebp
lock
lret
ret
lods
lcall
int
jbe
sbb
push
jl
into
out
scas
xor
enter
fsubrl
insb
imul
leave
jno
repnz
pop
sti
adc
add
push
or
sbb
outsl
hlt
jecxz
repz
mov
xor
mov
dec
adc
repz
lcall
enter
test
and
inc
ret
inc
cltd
adc
mov
or
push
jge
loopne
xor
out
dec
xchg
sbb
and
mov
xchg
adcl
test
shlb
int
out
in
repz
pushf
jmp
sub
arpl
outsl
mov
xchg
mov
andl
add
sub
jb
sub
sti
fdivrl
xor
out
pop
cmp
mov
adc
xor
cld
pop
mov
nop
les
dec
mov
cmp
cmp
fcomp
sub
dec
lret
std
cmpsb
mov
jne
pop
mov
imull
mov
xchg
add
mov
inc
jg
shrl
add
aad
dec
fdivl
pop
mov
cmp
mov
addr16
shrb
xchg
fcoml
hlt
mov
pop
push
gs
fnsave
loop
popf
lahf
cmp
es
movsb
add
orl
aas
ror
jne
pushf
mov
push
pop
pop
push
popa
jp
insb
pop
and
lret
jge
ret
iret
sahf
dec
jl
pusha
data16
inc
pop
out
push
jb
rcrb
call
dec
fildll
jnp
jl
rcll
daa
adc
nop
sbb
xlat
flds
lahf
pusha
xchg
sbb
dec
into
addl
into
xor
inc
inc
mov
dec
jo,pn
pop
add
in
mov
rclb
mov
pop
sahf
add
jmp
nop
fimuls
add
in
lods
sarb
jmp
push
and
pushf
inc
sbb
or
movsl
pusha
imul
daa
iret
xlat
dec
add
xchg
mov
jp
fistpll
aas
jbe
aas
cmc
jl
or
clc
xor
jecxz
xor
adc
scas
push
pop
push
and
dec
cmpsb
mov
out
jnp
and
cli
inc
cmp
xor
xorb
arpl
inc
dec
jmp
loope
imul
xchg
push
xchg
lods
pop
inc
repnz
fstps
sahf
xchg
rcrl
mov
lcall
jnp
and
jo
mov
inc
adc
inc
mov
sbb
std
outsb
pop
adc
mov
push
jp
sub
mov
aam
popa
aas
cltd
sub
sbb
stc
pop
insl
adc
push
int
add
sub
in
mov
in
je
out
data16
int3
insb
mov
mov
mov
add
adc
push
mov
mov
ret
addb
or
add
lea
outsl
sub
std
pop
inc
dec
sti
pop
shll
out
mov
nop
mov
adc
cmpsb
cmp
cmpsl
jg
sti
push
out
mov
ljmp
xchg
hlt
add
cmp
inc
pop
sub
mov
lock
repnz
insl
pop
and
lahf
pushf
jno
ret
int
outsl
adc
sbb
pop
and
mov
jo
dec
or
inc
or
jl
cmpb
xchg
add
divb
jmp
out
cs
mov
sbb
inc
pop
add
fstpl
jp
lods
or
jnp
popa
scas
cmp
dec
popf
clc
adc
xchg
lahf
sub
mov
repnz
cmp
rolb
dec
xchg
es
movsl
mov
movsb
mov
add
mov
adc
jecxz
xchg
stos
add
pop
push
stos
add
lds
jno
call
lret
lcall
pop
push
aam
push
dec
fisubl
fsub
aaa
repnz
xchg
aaa
mov
mov
nop
inc
push
repnz
out
int
mov
inc
ret
jb
hlt
mov
mov
and
pop
adc
iret
test
cwtl
or
test
mov
fs
cmc
mov
mov
fstp
mov
push
mov
pop
sbb
pop
push
dec
sub
imul
sub
xor
call
fidivl
push
inc
cmp
xor
call
out
int3
push
repz
mov
mov
out
fisttpl
mov
add
push
mov
xor
jne
xchg
aad
mov
pop
xchg
or
repnz
stc
pusha
rcll
jb
dec
pop
xlat
or
cmp
sbb
or
adc
inc
ljmp
xchg
popa
lret
mov
fs
add
pop
dec
push
push
inc
aaa
daa
sarl
sub
fiadds
je
ds
inc
add
ds
mov
xchg
and
add
ja
sbb
xor
lret
fiadds
sbb
pop
insb
pop
ret
and
push
pop
into
aaa
mov
cld
aas
adc
inc
mov
out
stos
leave
or
ja
pop
sti
xlat
insb
imul
sbb
sub
jbe
jle
hlt
or
jbe
into
addr16
test
ret
dec
enter
dec
ljmp
aam
notb
sbb
add
fstpt
loop
pop
mov
push
movb
test
test
or
jb
pop
mov
lret
arpl
cmp
add
inc
sbb
inc
xor
adc
sbb
hlt
inc
push
xchg
xorl
push
test
jns
mov
adc
xor
inc
jge
lock
xlat
hlt
xchg
and
push
outsb
xchg
ds
mov
dec
jns
mov
cld
jmp
mov
insl
pop
mov
mov
pop
mov
loope
arpl
cmp
sbb
rcll
das
dec
dec
sbb
fsubrl
xor
scas
nop
adc
leave
jno
add
sub
inc
dec
mov
into
sbb
arpl
mov
sahf
cmc
pop
mov
arpl
lods
adc
daa
out
xchg
xchg
add
push
or
dec
jl
lds
inc
dec
das
mov
jae
pushf
mov
aam
add
pop
int3
xchg
mov
std
ljmp
jg
mov
lret
addr16
mov
add
gs
je
adc
mov
fiadds
mov
mov
cs
icebp
ds
loop
pop
jmp
or
lret
adc
and
movb
outsb
scas
fdivs
and
insl
inc
pop
cmp
fcompl
jne
pop
inc
repz
repnz
das
cld
int3
mov
in
movsb
pushf
cmp
adc
cmpsb
mov
push
cmp
cwtl
insl
test
jge
jo
lret
jo
or
clc
cmp
xchg
icebp
in
inc
ja
pop
mull
lods
push
fstpl
dec
mov
xchg
jge
xchg
sub
in
inc
enter
repz
push
lea
adc
ja
pop
push
xlat
fwait
or
inc
popa
and
mov
data16
jg
sti
jnp
mov
mov
iret
and
jg
mov
or
scas
lret
lahf
sub
mov
inc
pop
cmp
je
das
rorb
test
dec
fldt
jmp
cmp
add
lret
inc
jmp
rcrl
ja
add
movsl
into
sbb
pusha
call
iret
jno
nop
sub
ret
adc
enter
dec
std
xor
pop
jo
icebp
cmc
push
ljmp
fwait
add
lret
mov
out
push
std
fists
hlt
xor
and
fstps
fwait
outsb
icebp
loope
jl
imul
push
inc
xlat
and
cmp
in
negl
in
cli
adc
xor
ret
jno
popfw
imul
add
lret
lock
mov
jbe
fdivp
mov
or
sub
push
fldpi
fsubrl
inc
cld
outsl
cs
cmp
push
dec
inc
xlat
push
push
lcall
xorb
push
jnp
cli
pop
cld
scas
or
mov
outsb
adc
mov
mov
inc
cmpsb
xchg
icebp
push
push
jnp
pop
or
test
mov
add
push
enter
add
dec
xchg
push
stos
ja
mov
dec
gs
cs
jne
mov
mov
fucompp
or
std
fidivl
push
dec
add
sbb
cmp
repnz
pop
mov
and
xchg
mov
push
lar
test
scas
push
jg
mov
movl
adc
aas
in
push
ja
into
test
dec
decb
mov
push
test
lds
pop
sbb
lret
fdivl
sub
popl
jp
push
sub
lock
ret
std
lds
int3
push
pop
inc
rcrb
mov
adc
arpl
pop
push
test
lds
pusha
clc
in
dec
sbbl
xchg
jg
sbb
sbbl
add
sub
pop
xchg
gs
sub
lods
inc
inc
pop
in
xchg
int3
push
insb
pop
dec
sbb
sub
into
mov
xor
rorl
sbb
popa
jl
ret
jle
or
mov
int3
imul
mov
das
outsl
je
popf
mov
sahf
dec
fisttpll
std
out
rcll
scas
test
jb
cmp
jp
push
pusha
sahf
mov
mov
xchg
outsb
sahf
pop
mov
jg
xchg
add
lea
and
mov
ljmp
lret
adc
xor
imul
bound
outsb
inc
or
sbb
mov
dec
shll
movsl
mov
sbb
addsubps
pop
sbb
inc
xchg
int3
mov
push
cmp
xlat
xchg
fcoms
lret
aad
stos
rclb
rcrl
lahf
lret
jnp
push
ja
mov
shrl
push
test
sub
dec
rcll
or
inc
bound
faddl
popf
ret
lea
cmp
dec
lret
sahf
adc
and
mov
sbb
push
mov
jmp
lock
jb
fistpll
add
sub
sahf
jmp
fwait
xchg
and
jne
xchg
adc
test
adc
sbb
je
aaa
push
es
das
jno
pop
fldl
jge
sbb
aam
jno
pushf
es
push
nop
pop
jmp
mov
addb
dec
cld
sbb
bound
ret
scas
ja
pop
and
push
xchg
stos
cmpsb
add
push
jecxz
repz
mov
xor
inc
clc
push
enter
sub
sbb
dec
jecxz
repz
mov
xor
inc
clc
push
enter
sub
sbb
dec
out
rep
add
cmp
inc
loope
int3
push
xchg
xor
ja
inc
xor
push
arpl
xor
and
sub
sbb
or
int3
int3
int3
int3
sub
pop
inc
push
mov
mov
dec
je
add
add
push
add
add
add
add
mov
add
add
add
add
add
dec
add
add
addb
add
add
add
add
add
jg
aam
push
add
add
add
add
add
add
arpl
addb
add
ret
add
cmpsb
add
add
add
add
add
add
push
add
add
xor
addb
add
add
add
add
add
add
add
add
add
add
add
sbb
dec
add
roll
out
mov
add
add
add
add
add
dec
add
add
add
add
add
add
pop
add
add
add
mov
adc
sub
out
aas
add
popa
add
jo
cmp
add
add
add
add
add
cmp
push
add
add
add
add
add
jge
mov
add
dec
add
add
cltd
add
add
add
xor
add
dec
add
xchg
add
pop
add
add
dec
add
add
adc
xor
mov
add
add
add
add
cmpsb
add
add
add
add
add
popf
add
add
add
add
int3
add
add
add
add
aam
aam
add
xor
add
mov
add
push
and
mov
push
add
add
cltd
add
add
add
add
mov
adc
jg
dec
add
add
rolb
sub
jge
js
push
add
test
mov
add
add
mov
add
testl
xor
dec
add
add
add
add
add
pop
add
jmp
add
add
addl
bound
addb
add
add
add
add
add
add
push
add
test
js
add
sub
add
add
add
add
add
add
filds
or
pop
add
add
add
or
pop
add
add
add
add
mov
add
add
add
in
xor
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
lea
adc
add
add
add
add
add
add
add
fwait
add
arpl
push
add
lea
mov
xor
xor
cmpsl
add
jno
and
xor
add
add
add
test
add
addb
add
add
test
mov
jmp
add
add
pop
add
xchg
add
addb
add
add
add
inc
add
add
adc
add
add
add
add
add
add
je
or
xor
push
add
add
adc
lea
add
add
nop
add
add
push
jne
and
xor
out
push
add
xor
popa
add
xchg
add
add
add
add
add
outsl
add
add
add
add
add
add
sub
add
add
add
add
jge
mov
orb
cwtl
mov
add
mov
bound
xchg
popf
and
or
add
xchg
jne
lods
dec
sbb
cmp
sbb
js
fstpt
and
dec
lret
outsl
enter
xchg
pop
insl
mov
lahf
push
inc
mov
add
dec
jne
pop
sbb
jp
adc
pop
fidivrl
sbb
inc
aaa
cs
mov
add
inc
add
jnp
dec
xchg
aad
shlb
popa
divl
mov
gs
out
cltd
pop
cmpsb
pushf
fsubrs
dec
push
mov
push
and
sti
mov
dec
aas
stos
jbe
lahf
sub
orb
cmp
dec
mov
adc
out
test
pop
enter
rcrl
fcomps
pop
aaa
mov
mov
lret
iret
sbb
ret
mov
mov
fisubrs
fildl
jo
jnp
hlt
scas
cmc
or
adc
jno
jne
ret
mov
cmp
mov
insb
pop
sbb
or
and
xchg
xchg
push
and
and
cmpsb
sbb
and
or
pop
jge
inc
mov
pop
lea
lret
fsts
inc
pushf
mov
push
mov
subl
push
xchg
dec
cltd
movsl
and
fdivr
lcall
enter
fildl
xor
les
pop
cmpxchg
xlat
jle
daa
pop
adc
sti
adc
pop
fdivrs
mov
mov
ja
mov
stos
mov
daa
stos
dec
add
mov
shlb
mov
adc
filds
add
and
fdivs
jl
mov
push
push
aad
inc
sbb
outsb
clc
and
mov
test
ljmp
sbb
adc
imul
sbb
jmp
push
xchg
aaa
push
or
mov
push
cld
adc
shr
dec
xchg
lds
sub
ja
mov
cwtl
push
jmp
mov
xchg
out
mov
jl
inc
adc
dec
push
adc
mov
in
cmp
int3
mov
adc
push
mov
add
sbb
and
push
or
negl
push
fwait
jle
cmp
clc
mov
in
add
int3
call
inc
mov
cli
loopne
clc
xchg
jae
cmp
jbe
ret
das
fmul
popf
outsl
jl
mov
test
push
mov
push
fiaddl
fisttpl
fs
cmp
mov
lahf
jmp
sti
clc
dec
add
or
mov
mov
or
pusha
pop
and
pushf
add
faddp
sahf
pop
aas
jl
xor
mov
pushf
ret
clc
sub
add
add
add
add
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
push
add
add
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
pop
add
add
add
add
add
cld
add
add
add
add
add
add
add
add
add
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
inc
add
add
add
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
fadds
add
clc
add
add
add
add
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
je
add
jl
add
test
add
add
pushf
add
add
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
rolb
add
add
add
add
add
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
daa
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
daa
add
fsubl
add
aam
add
int3
daa
add
les
add
mov
daa
add
lods
daa
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
sub
add
add
add
add
add
add
add
inc
mov
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
sub
add
sub
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
