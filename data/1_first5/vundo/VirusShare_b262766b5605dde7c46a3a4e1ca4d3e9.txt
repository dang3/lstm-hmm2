jne
dec
add
add
insb
add
add
je
add
add
jb
popa
add
add
outsb
add
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
popa
add
add
outsb
add
add
je
imul
push
add
je
insb
add
add
dec
add
je
push
add
popa
add
imul
add
add
add
jne
je
je
outsl
add
inc
add
add
jb
outsb
add
je
add
popa
add
add
add
outsb
add
outsl
add
imul
outsl
add
add
add
dec
add
data16
push
add
js
je
add
add
inc
add
je
je
outsl
add
dec
add
add
je
add
inc
add
je
je
outsl
add
inc
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
dec
add
insb
add
add
je
add
dec
add
popa
add
je
imul
push
add
je
insb
add
push
add
js
je
add
inc
add
je
je
outsl
add
push
add
js
je
add
add
inc
add
popa
add
push
add
js
je
add
add
inc
add
je
je
outsl
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
inc
add
arpl
add
add
add
imul
add
je
push
add
js
je
add
dec
add
insb
add
add
je
add
inc
add
jo
push
add
jb
imul
add
popa
add
add
add
add
outsb
add
arpl
je
imul
sub
mov
and
add
or
add
pop
or
add
rolb
in
add
add
add
add
add
out
nop
add
mov
add
test
jns
nop
add
add
add
add
add
add
pop
add
add
inc
add
add
add
add
lcall
add
add
add
add
inc
add
add
add
add
aad
jnp
lcall
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
or
sahf
add
nop
add
add
add
mov
xlat
add
add
add
add
add
add
lock
add
pop
add
add
out
add
add
add
add
add
add
add
add
mov
xlat
add
add
add
add
add
fwait
add
add
lcall
add
add
add
add
mov
add
dec
add
cltd
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
pop
add
insl
add
add
add
add
nop
add
add
add
out
add
add
lcall
add
add
add
pushf
add
add
cmp
add
add
add
add
add
insl
add
add
add
add
add
incb
incb
nop
add
pop
add
add
add
add
add
add
add
fiaddl
iret
add
add
add
add
lcall
add
mov
stos
add
nop
add
add
outsl
add
add
add
add
nop
add
cwtl
add
add
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
pop
add
add
cmc
add
add
add
add
add
add
add
add
add
popl
jecxz
out
sub
lcall
add
add
add
pop
add
add
add
add
aas
add
cmc
add
pop
add
loop
pop
add
add
add
add
add
add
add
add
mov
push
add
add
add
add
add
add
add
add
add
add
nop
add
add
add
add
add
nop
add
add
add
add
add
nop
add
add
or
add
add
add
add
add
add
add
insb
add
rolb
movl
add
popf
add
les
or
sub
dec
add
add
add
lret
add
add
add
add
les
push
testl
in
or
mov
sub
or
mov
mov
in
pop
and
or
mov
inc
dec
push
adc
mov
repz
xchg
add
and
vcvttps2dq
xchg
test
sarl
push
pop
xchg
xor
or
cmpsb
cmp
sbb
dec
xor
jns
div
xchg
push
pop
pop
sub
push
test
add
mov
cltd
int3
cmpsl
adc
add
inc
jae
xchg
push
xor
aas
mov
and
xchg
sub
movsl
add
addb
adc
mov
xor
out
sbb
cli
mov
adc
std
cwtl
and
push
popa
pop
fildll
jo
jbe
notl
out
sub
stc
xor
and
std
adc
push
push
inc
movsl
std
dec
inc
popf
pushf
sarb
xor
arpl
cmp
rclb
or
push
fs
out
mov
or
pop
mov
loopne
add
jo
subb
mov
hlt
and
and
int
lret
push
in
xchg
xchg
jge
jnp
xor
sub
rolb
inc
jae
in
in
jnp
jnp
inc
int3
sbb
insl
std
mov
int
mov
mov
cmpsb
in
or
add
pop
push
popa
xorl
adc
int3
stos
mov
popa
popa
loope
push
push
ja
in
mov
test
adc
imul
sub
pop
mov
popl
popa
imul
inc
sti
xor
and
inc
flds
idivb
aad
lock
dec
push
xchg
sub
push
cld
mov
daa
sub
jle
dec
mov
fs
jp
rolb
in
xchg
mul
push
stc
in
mov
pop
push
rcrb
out
mov
pop
mov
daa
movsl
xchg
insb
or
int3
stc
sub
fs
rcl
lds
pusha
dec
mov
ds
cmc
mov
cld
dec
add
lcall
je
sbb
je
fdivs
aas
fcmovb
in
in
pop
inc
aad
dec
iret
int3
xchg
shlb
cmp
cs
aam
inc
push
pusha
cmp
sub
shrb
mov
jae
in
xchg
shlb
aaa
sub
adc
xchg
js
ja
jne
push
push
fs
dec
lret
inc
inc
push
outsb
lods
ljmp
pop
andb
xor
sub
loopne
aas
stos
adc
add
mov
and
das
mov
add
and
fcomps
sub
jne
or
xchg
inc
cmp
mov
add
add
add
add
rolb
add
add
push
mov
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
push
call
mov
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
pushl
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
xchg
ret
cmpsl
repz
jae
mov
mov
daa
jae
arpl
push
add
ja
xchg
xchg
ret
cmpsl
repz
xchg
xlat
movntq
pop
arpl
jae
arpl
add
ja
sahf
inc
mov
mov
scas
iret
mov
push
mov
js
dec
adc
cmp
inc
and
out
sar
lods
cmpsl
xchg
mov
movsb
xlat
or
scas
xor
push
in
stc
scas
mov
and
push
mov
pop
push
pop
in
xchg
xlat
jg
repz
xorb
fistpl
leave
jae
adc
xor
shrb
push
jmp
push
mov
push
fsubrp
pop
mov
add
ja
xchg
xchg
outsb
jecxz
pop
cmp
negb
push
adc
inc
enter
push
cld
in
xlat
sbb
sub
iret
stos
mov
rcll
mov
arpl
and
outsl
adc
loopne
dec
fnstcw
aam
add
lcall
push
lcall
adc
xor
dec
rorl
jmp
out
out
and
aad
test
arpl
sub
dec
sti
jge
ja
jmp
bnd
ret
int
out
in
stos
movb
jnp
push
pop
push
or
xor
jb
inc
call
xchg
mov
out
movsb
iret
inc
ss
daa
push
jbe
inc
inc
cmp
adc
dec
loop
sti
test
mov
xlat
and
mull
daa
jae
arpl
push
add
ja
xchg
xchg
ret
cmpsl
repz
xchg
xlat
and
mull
daa
jae
arpl
push
add
ja
xchg
mov
iret
stos
or
jg
ljmp
outsb
mov
xor
inc
ret
filds
les
sub
rorl
and
pop
in
mov
out
jecxz
xor
ficompl
mov
cmpsb
in
mov
popf
icebp
add
mov
scas
pop
xchg
les
jno
test
add
scas
cmp
mov
sbb
shl
aad
out
iret
data16
mov
pop
std
sub
ret
rolb
inc
lret
int3
cwtl
stc
push
add
or
xor
cmp
sbb
test
adc
adc
mov
adc
push
cmp
scas
mov
popf
inc
mov
mov
js
test
movsl
ret
sbb
push
pop
dec
mov
in
movsl
inc
push
mov
pop
fldl
idivb
enter
icebp
and
lds
and
fiadds
inc
loopne
xchg
ss
aam
sahf
pop
les
scas
sbb
jne
push
pop
adc
lea
loop
add
inc
movsb
je
jg
push
ss
push
fiaddl
popa
andb
lock
cmp
out
sub
lea
sub
cmpsb
mov
add
adc
out
hlt
gs
add
cld
fs
js
add
cmp
lock
fsubl
xchg
xorb
pop
pop
fldenv
dec
inc
les
sbb
cwtl
xchg
sbb
xchg
push
pop
iret
sub
addb
mov
push
loop
nop
jg
fucomi
xor
movsb
and
hlt
sbb
je
push
xchg
or
push
ds
stc
dec
jg
stos
sub
icebp
mov
movsb
lret
int
mov
mov
data16
mov
je,pt
lcall
ss
and
push
mov
and
enter
jg
add
mov
hlt
add
aas
cmpsl
fdivl
cltd
ficompl
add
inc
aad
mul
jb
fcoms
andl
in
xchg
std
aaa
mov
cmpsb
mov
mov
adc
inc
dec
dec
pop
leave
cmpb
adc
and
dec
add
and
mov
andb
out
daa
add
mov
inc
out
repnz
xchg
xlat
adc
sbb
aad
mov
fmul
loop
mov
in
pop
test
and
jbe
add
aam
pop
cmpsl
in
aas
mov
fcompl
sbb
fidivs
mov
sub
and
aad
les
out
inc
cs
dec
jge
fsubrs
adc
pop
xor
into
ret
lret
jl
test
popa
jb
sbb
push
popa
inc
lcall
adc
or
pop
int3
into
add
lock
stos
mull
xchg
in
or
inc
out
inc
add
lret
lock
dec
add
fcmovbe
push
inc
aaa
jo
icebp
outsl
sub
lret
sbbb
out
sbb
std
mov
icebp
in
pop
pop
stos
addr16
sti
std
sahf
add
push
mov
pop
ud2
cmpsl
mov
movsl
test
lahf
mov
push
mov
sbb
cmovge
or
movsb
mov
es
pop
fiaddl
xor
insl
dec
mov
movsb
inc
test
inc
adc
ret
jb
out
mov
popa
mov
sti
jecxz
cmc
sub
out
adc
shrl
out
lahf
scas
shlb
or
inc
mov
shlb
daa
jecxz
pop
rcrl
stos
fadds
adc
daa
ss
dec
and
and
inc
in
sbb
int3
adc
push
jns
test
xchg
rcrl
pop
popf
lahf
jns
cmp
push
out
sbb
stos
stos
push
std
jns
mov
sti
loope
or
add
sti
aas
aas
mov
insl
fcompl
popa
iret
in
inc
gs
lret
lods
push
subl
mov
sahf
movsl
es
inc
sub
jae
push
or
mov
int3
or
insb
mov
fnstenv
push
add
enter
enter
inc
sub
outsl
push
jmp
mov
cmp
cmp
push
sbb
ret
sti
ret
mov
test
fiaddl
adc
in
cmp
out
out
mov
les
syscall
dec
mov
jb
movsb
cmp
test
out
mov
or
daa
in
push
pop
jns
mov
jno
dec
popf
adc
addr16
int
pop
imul
outsl
mov
movsl
das
test
xchg
jmp
xchg
std
or
sub
cmpsb
imul
pushf
push
sbb
push
dec
sbb
mov
jle
mov
cmp
adc
dec
pop
scas
mov
in
mov
jecxz
xchg
rorl
mov
xor
push
xchg
pop
repnz
leave
outsb
jnp
cmp
in
xchg
insb
pop
bound
test
in
pop
mov
bound
ss
iret
sub
enterw
inc
std
stos
jb
pop
mov
lods
xchg
pop
sub
lcall
add
push
call
inc
fwait
xlat
cld
int3
enter
dec
sbb
popl
or
add
sbb
fwait
mov
imul
lds
decl
push
nop
pop
xor
mov
xor
dec
leave
mov
sarb
adc
loopne
sub
gs
push
pop
out
mov
xorb
jns
pusha
std
lods
in
mov
mov
add
lock
push
cmpsb
mov
shrb
push
rcll
xor
jg
jns
cld
xor
comiss
and
mov
adc
push
jg
outsl
out
loope
or
je
pop
mov
fidivl
pop
shrl
xchg
pop
stos
faddl
inc
nop
ret
dec
inc
add
std
fcmovnu
pushf
pushf
gs
repz
sub
pop
sahf
stc
lods
js
cmp
xchg
dec
das
push
fistpll
dec
mov
testl
lcall
aas
push
cmp
cmpsb
jns
cs
orb
ljmp
sbb
sti
xor
cmc
push
pusha
or
jmp
repz
dec
pop
pop
mov
sbb
mov
dec
imul
xor
in
pop
iret
das
adc
add
lahf
add
lods
push
fld
call
into
adc
xchg
sbb
push
xchg
jae
jle
mov
mov
pushf
mov
lret
call
popf
inc
xor
aaa
aas
arpl
and
lock
adc
inc
cmp
add
lds
out
add
into
dec
mov
dec
sbb
jecxz
and
pusha
test
cld
mov
jmp
cs
mov
jno
sbbl
pop
in
sbb
inc
imul
popf
inc
insb
fisubl
mov
addr16
cmc
cs
sub
xor
sub
push
jecxz
gs
adc
fimuls
inc
pop
clc
fnstenv
sbb
push
lahf
clc
es
ficoms
sub
pusha
fst
xchg
mov
inc
xor
aam
add
cld
sub
mov
imul
push
hlt
repnz
lcall
cs
mov
mov
cmp
ret
test
loopne
out
push
ret
out
push
add
inc
xor
xor
dec
hlt
cmp
es
out
xlat
mov
loop
sbb
inc
mov
mov
shrb
dec
cli
sti
push
call
adc
iret
testl
xchg
add
mov
adc
sub
pop
jns
std
stc
adc
insl
daa
int3
pop
pop
mov
hlt
adc
lcall
jo
ror
jge
je
or
dec
sbb
scas
repz
into
add
xlat
jb
lahf
ljmp
xor
sub
sub
addl
dec
mov
out
inc
mov
daa
sbb
inc
push
xor
hlt
cltd
xchg
pushf
mull
cmp
mov
enter
insb
xchg
int3
mov
add
cld
jns
push
enter
lea
ljmp
cmpb
inc
call
xchg
jle
mov
or
mov
lds
or
push
inc
jns
pusha
scas
push
fdivr
mov
std
sub
ljmp
call
jns
inc
and
loopne
cmp
inc
test
ja
arpl
repnz
fs
mov
sbb
sarl
idiv
lods
pop
mov
xor
cltd
lret
ljmp
sub
mov
lods
inc
ret
in
scas
fwait
cltd
cmpsl
addb
jo
dec
xor
mov
push
out
ja
cmpb
mov
aas
out
imul
cmc
push
insb
out
add
inc
jns
add
mov
inc
es
inc
ja
inc
sub
pusha
mov
std
inc
ljmp
jecxz
loope
fs
ret
hlt
inc
adc
filds
sbb
mov
aam
dec
mov
sarb
das
push
aad
sub
test
push
mov
cmp
sbb
das
jg
add
adc
xor
mov
adc
aam
cmc
int
loopne
cmp
sbb
inc
jp
js
jo
xor
inc
ds
outsb
xchg
lock
sarl
iret
lret
jb
jg
scas
out
push
dec
lcall
jle
fdivrl
pop
divb
push
stos
imul
xchg
icebp
lret
es
jg
repnz
loope
js
cmp
push
mov
add
leave
fisttpll
fwait
mov
push
xor
rcrb
orb
mov
push
nop
ja
mov
lds
je
sbb
and
test
addr16
fimull
inc
mov
fwait
pop
enter
pop
mov
push
aaa
je
mov
mov
sbb
pop
out
sub
in
or
pop
pop
cmp
xorl
adc
inc
mov
cmp
icebp
rcrb
sbb
jb
push
xchg
and
sbb
out
mov
mov
pop
jb
cmp
push
sarb
push
loopne
test
rolb
repz
shrb
mov
shll
add
fwait
pop
xchg
fists
pop
push
cwtl
mov
jge
cli
imul
notb
sub
dec
stos
pop
mov
inc
aaa
inc
popf
mov
mov
cmpsl
mov
movsb
push
xchg
mulb
dec
xchg
jno
inc
sub
popf
fists
cmpl
sbb
out
push
mov
push
aas
jg
enter
inc
sbb
mov
adc
punpckhdq
cltd
mov
xor
push
inc
loope
cmp
ljmp
or
test
ja
pop
xor
je
lret
lahf
loop
js,pt
stc
popf
ljmp
mov
xor
daa
push
out
imul
xor
cmp
push
fcomip
adc
push
outsb
or
in
or
mov
sbb
inc
divl
scas
pop
and
movsb
lods
imul
jb
pop
mov
repnz
pop
inc
mov
xchg
sbbb
idivb
mov
int
and
mov
es
clc
test
into
sti
imul
mul
mov
and
xor
dec
inc
jecxz
call
cmp
push
enter
int3
sarb
out
inc
movsl
and
push
dec
sbb
popf
pop
xchg
iret
in
in
aas
int
xchg
fsub
cmp
dec
cmp
js
and
jno
bound
pop
outsb
pop
cld
inc
movl
sub
and
sbb
iret
loop
out
push
push
imul
jns
or
mov
pop
lret
fisttps
cs
dec
hlt
cmp
insb
repz
jne
inc
out
scas
cmp
sbb
shrb
stos
cmpl
in
lea
xchg
cmp
xlat
sub
add
inc
cmpsb
shlb
jnp
cmpsl
or
je
fnstcw
or
jo
clc
dec
mov
ja
shrb
aaa
mov
push
and
xchg
mov
dec
es
popf
addr16
in
jo
sahf
mov
test
xchg
out
or
or
sub
aaa
out
outsb
movsl
js
pop
cmpsb
lods
fiaddl
pop
imulb
adc
adcb
mov
cli
jae
rcrl
and
test
mov
xor
sub
mov
inc
xchg
mov
xlat
andl
dec
xchg
mov
ljmp
xchg
test
inc
cmpsl
pusha
repz
jp
enter
xchg
dec
cmp
fdiv
jmp
int3
add
mov
dec
enter
jmp
daa
and
sbb
sbb
cli
push
push
pop
mov
leave
arpl
xor
push
or
push
push
popf
adc
movsl
fidivrs
sbbb
jae
icebp
data16
or
rcr
lods
je
xchg
and
jmp
and
leave
lods
leave
inc
jmp
jge
ss
mov
xchg
addr16
std
sub
jle
mov
cwtl
into
add
subb
imull
or
sub
aad
orb
fs
mov
outsb
push
dec
mov
pop
outsl
leave
dec
movsb
lcall
mov
aam
ret
inc
fisubrs
stos
ds
popf
insb
sbbl
fnstsw
jb
sarl
and
insl
mov
and
in
sbb
aam
popf
stos
addl
push
test
jecxz
test
add
jg
inc
mov
dec
xchg
test
or
in
fs
in
mov
add
xor
inc
mov
pushl
in
out
roll
jp
ss
sbb
in
icebp
scas
call
dec
jne
jg
mov
cmpsb
jno
and
jl
add
inc
mov
mov
inc
fiadds
xchg
pusha
incb
repz
nop
std
enter
movsb
popf
scas
repz
pop
xchg
pop
aaa
push
orl
mov
int3
jmp
inc
or
jl
jo
push
insl
cmp
sbb
stos
add
ja
mov
dec
add
dec
aad
and
cmp
xor
sahf
data16
and
mov
mov
ficoms
mov
sub
int3
jne
sti
xor
sbb
repnz
cld
sub
in
gs
lock
cli
jl
imul
mov
out
xchg
stos
imul
inc
aaa
fisttps
pusha
add
bnd
and
stos
mov
mov
xor
mov
mov
sahf
inc
ss
call
iret
iret
adc
xor
les
in
je
into
dec
addl
fildll
mov
cmpl
test
add
jmp
cmpsl
pop
daa
stos
mov
jmp
cmovs
cli
clc
jle
lods
gs
dec
push
lret
and
iret
outsl
adc
aas
adc
push
dec
push
fidivs
shll
mov
xor
scas
out
loope
xchg
and
mov
test
lea
out
enter
mov
sub
clc
rcll
out
xchg
mov
pop
loop
xor
leave
mov
imul
lods
fxch
cwtl
dec
mov
roll
imulb
nop
stos
or
add
push
adc
inc
mov
adc
xor
jnp
xchg
je
add
ror
ja
xchg
push
jecxz
push
in
popa
scas
sbb
pop
mov
hlt
pop
xor
popa
repnz
test
aas
fidivrl
and
testl
shrl
popf
sbb
cmp
xor
fbstp
pop
cmp
lock
fisttpll
xchg
sub
push
adc
and
inc
push
push
pop
dec
xor
pop
lea
popf
hlt
push
mov
push
cltd
jns
jno
std
cmp
dec
cs
sub
xchg
push
aad
pop
mov
xchg
pop
cli
dec
xchg
shll
fisttpll
leave
xchg
jge
pop
and
mov
movsb
cld
fistpll
cmp
pushf
adc
adc
push
mov
adcb
jb
fdivr
sbb
sti
or
repz
addr16
pop
jo
cld
out
xchg
insl
or
inc
cli
pusha
sbb
cld
int
movsl
sar
adc
pop
cltd
fwait
jg
inc
pushf
xlat
repnz
or
inc
sbb
jo
pop
fnclex
out
mov
adc
mov
dec
sub
dec
loopne
test
inc
push
loopne
das
pop
fxch
mov
faddl
insb
cmp
daa
cmpsb
and
xor
add
mov
jmp
sub
test
sub
arpl
add
stos
mov
sbb
inc
push
lock
enter
fs
outsb
jmp
push
inc
and
fdivp
arpl
cmc
sahf
faddl
cltd
into
mov
rcll
add
int
mov
out
fwait
outsb
shll
adc
sub
out
sbb
push
jns
inc
mov
iret
es
pop
loopne
xchg
out
pop
mov
mov
enter
ljmp
out
sbb
mov
sub
sub
xor
sbb
andl
fmul
int
sahf
and
sub
ret
test
aam
sbb
lcall
add
cli
xor
insb
add
jns
movsl
stos
sti
inc
inc
mov
dec
shlb
mov
jnp
cmpsl
je
push
dec
repz
jae
push
dec
je
add
inc
ljmp
and
call
add
sub
mov
test
xor
or
dec
pop
mov
xchg
push
repz
push
je
test
push
arpl
popf
stos
outsb
adc
out
das
mov
push
and
ds
scas
fisubs
inc
mov
push
jns
out
cmp
imul
out
xor
lahf
movsl
jno
ret
in
pop
pop
aad
insl
pop
or
jecxz
outsb
ljmp
adc
mov
out
jp
dec
rorb
inc
dec
out
insl
sbb
add
dec
or
pop
add
mov
xor
xchg
cmc
or
lret
repz
adc
mov
and
rorb
xor
mov
and
pusha
shr
lret
sar
cld
aaa
jbe
iret
lahf
mov
sbb
or
push
or
mov
jbe
mov
or
jnp
mov
pop
je
xchg
ret
mov
inc
ds
icebp
out
add
dec
inc
mov
aas
int
dec
push
mov
inc
iret
dec
dec
rcr
mov
dec
loope
es
cmp
loopne
pop
inc
mov
or
int3
xor
icebp
jbe
or
mov
test
cmp
out
dec
sub
clc
inc
fnstcw
stos
push
push
adc
ret
fwait
adc
aam
subl
pop
push
push
sub
repz
push
and
push
pop
and
dec
stc
sub
mov
mov
aas
add
jmp
and
pop
into
lahf
inc
gs
loope
fucomi
fs
push
add
sahf
pop
mov
sahf
inc
adc
outsb
dec
stos
mov
sub
into
lds
inc
or
or
mov
adc
jb
pop
inc
ret
adc
jmp
xor
adc
lods
popa
mov
cmp
push
xor
add
xchg
adc
cmpsb
movb
mov
fists
sub
jle
lods
and
jno
int3
pop
aam
out
adc
test
roll
jae
shrb
into
mov
pop
mov
push
xor
fs
push
arpl
push
das
cmp
hlt
ja
and
stc
scas
and
push
push
out
rcrb
in
cmpsl
out
mov
mov
pop
mov
flds
push
sub
jb
fwait
dec
add
pop
in
ret
cmc
repnz
mov
xor
cmp
fidivs
mov
jg
pop
push
adc
dec
xor
loop
into
pushf
sub
mov
sbb
into
cs
in
push
ret
or
jecxz
ja
dec
pop
ljmp
lahf
cmpsl
je
jo
add
sti
cmp
push
in
in
in
mov
lods
into
dec
or
out
jge
xor
jge
mov
jmp
pop
push
cmp
in
xchg
or
lahf
jmp
adc
push
push
stos
mov
std
xchg
ja
mov
mov
rcll
and
cmp
and
incb
adc
gs
arpl
incb
ljmp
bound
nop
mov
mov
or
cwtl
xchg
jae
lods
loopne
lods
insb
dec
xchg
dec
loope
add
in
sti
mov
out
mov
inc
inc
movsb
outsl
sbb
call
ja
mov
mov
or
add
adc
jge
or
cli
cmp
xor
mov
adc
loope
in
fiaddl
lahf
sbb
inc
pushf
xor
mov
dec
jmp
dec
dec
pop
call
sub
mov
ds
mov
loope
lret
call
xchg
mov
cwtl
xor
push
mov
std
mov
sub
jno
pop
mov
sbb
fisubrs
mov
call
pop
adc
cltd
mov
arpl
push
jle
adc
lret
repnz
out
popf
sti
xchg
mov
testl
lahf
mov
xchg
xlat
and
mull
daa
jae
arpl
push
add
ja
xchg
xchg
ret
cmpsl
repz
xchg
xlat
and
mull
daa
jae
arpl
push
add
ja
xchg
xchg
mov
xchg
xlat
sub
mov
mov
daa
jae
arpl
push
add
jne
xchg
xchg
ret
cmpsb
repz
lds
ja
clc
lods
call
adc
cwtl
int3
mov
test
sbb
insb
mov
int3
sub
clc
sbb
or
xlat
and
mov
lods
jne
test
movsl
insb
mov
lds
adc
in
cld
inc
mov
jne
test
xchg
lcall
aad
in
cmc
push
add
lea
inc
fbld
cli
ficomps
icebp
or
sbb
lret
in
scas
jle
int
and
scas
xor
enter
lea
imull
push
pop
sbb
lds
aad
sbb
sbb
and
adc
lods
adc
and
jp
incl
nop
loopne
in
fsubrl
int3
xor
jg
pusha
out
jne
test
pushw
lods
sbb
sub
in
cmc
mov
dec
cwtl
cmp
adc
std
adc
push
inc
lcall
cmp
cmc
sbb
add
sbb
or
out
mov
mov
mov
out
inc
pop
out
inc
pop
in
inc
lahf
push
mov
cmp
mov
inc
ja
inc
rclb
lds
scas
add
out
xor
jb
mov
mov
dec
divb
jecxz
repz
pop
jno
jne
jo
push
dec
jo
ret
lret
adc
add
add
sbb
pop
hlt
adc
inc
mov
ja
jb
pop
mov
xor
aas
xchg
mov
addb
in
cmc
cmp
int3
adc
cld
inc
mov
lods
jne
test
movsl
insb
mov
lds
cmp
int3
adc
cld
inc
mov
lods
jne
test
cmp
lret
imul
pop
in
dec
dec
sbb
inc
sub
pop
or
mov
xlat
xor
orl
jle
ss
cmpsl
out
stos
add
add
jno
inc
pop
ret
mov
int3
std
repz
mov
pop
cmp
fisttps
out
stc
mov
jne
andb
inc
ljmp
clc
adc
in
dec
daa
out
mov
test
test
pop
mov
jecxz
inc
sqrtps
inc
mov
sub
clc
sti
sahf
mov
dec
cmp
fnstenv
test
adc
popf
push
repnz
call
popl
dec
mov
imul
cmpsl
jns
xor
dec
adc
cmpsb
subl
movsb
mov
mov
fsubl
inc
mov
arpl
insb
insl
pusha
jg,pn
js
cld
testl
cld
out
loope
add
lcall
pusha
jecxz
inc
cmp
test
lcall
test
ret
jle
adc
mov
xor
in
jle
xlat
lea
repnz
lock
fdivl
pop
push
sub
mov
and
call
rcrl
push
inc
test
in
fidivl
cwtl
in
scas
sbb
test
jo
mov
sub
xor
lods
sbb
inc
mov
sub
stc
cli
adc
sub
pop
sahf
mov
popa
xchg
xor
lds
mov
fmull
insl
fsubl
ljmp
add
addl
mov
lret
cmp
mov
pop
inc
inc
popl
movsl
jge
jbe
repnz
jge
repz
int3
inc
cmp
insl
jg
cmp
out
pop
and
ss
cmp
mov
pop
or
cwtl
sarl
ss
inc
loopne
mov
jbe
xchg
sbb
negl
arpl
outsl
insl
test
and
cmp
or
and
rol
aam
xor
or
cmp
pop
stc
lds
js
ss
shrb
repz
addb
outsl
add
or
sti
inc
rcrl
stos
mov
cmp
fildl
mov
sub
and
sub
jge
sub
or
push
lods
pop
mov
bound
sbb
xor
iret
cli
xor
lock
inc
enter
cmp
cmp
push
adc
sub
push
stos
cmp
xor
push
lahf
pop
add
addr16
pop
int
sbbl
rorl
push
xchg
ret
cmp
shll
mov
push
lret
and
adc
outsb
push
pop
cwtl
rcrl
ret
imulb
pop
inc
pop
mov
int3
fadds
in
lcall
mov
adc
mov
cld
xchg
icebp
inc
mov
lods
pop
pop
cltd
push
mov
xor
popa
lahf
or
stc
push
es
mov
push
push
xor
ret
push
aam
inc
push
mov
xchg
inc
xchg
dec
xchg
mov
sarl
mov
cwtl
add
xor
sbb
leave
pop
or
pop
mov
sub
cld
pusha
add
out
add
loopne
mov
fs
cmp
adc
and
sub
data16
iret
cmp
mov
cmpsl
int
stos
xor
sub
in
loop
mov
ja
add
xchg
sub
fwait
out
sub
sbb
ljmp
mov
xchg
scas
orb
js
cmp
xchg
arpl
cmpsl
mov
cwtl
adc
push
or
repz
cmc
sbb
and
adc
add
imul
mov
mov
fs
dec
pop
roll
int3
or
scas
push
mov
mov
mov
push
cmp
sub
idivb
daa
popf
sub
out
sub
mov
inc
and
push
mov
dec
mov
jno
dec
fisubrs
xchg
push
inc
leave
sbb
push
imul
ret
dec
dec
out
sbbb
push
icebp
xchg
inc
repnz
leave
fsubrs
jo
pop
add
test
mov
mov
aad
dec
in
repz
les
xchg
ret
mov
and
cmp
push
out
loopne
sbb
int3
data16
jb
mov
inc
sbb
sti
jmp
xchg
fdivr
xchg
jecxz
cmpsl
push
xchg
jl
sub
or
cs
cmp
xor
pop
daa
and
push
sahf
mov
xchg
fsubl
daa
shrb
xchg
mov
leave
pop
jg
imul
scas
outsl
or
andl
std
jmp
pop
movsl
bnd
loopne
xor
push
filds
cmp
cltd
inc
inc
loopne
add
mov
dec
pop
iret
mov
addr16
sub
loop
cld
and
fists
push
push
sub
lea
pop
into
jp
dec
mov
std
jg
das
movsb
and
add
js
mov
cmpsl
jbe
and
xchg
out
inc
sbb
lcall
and
enter
lea
push
xchg
int
in
shlb
mov
push
sbb
sub
aas
mov
mov
decl
push
mov
sub
jno
aam
roll
jo
pop
sbb
lods
mov
addr16
mov
subb
cmp
xor
insl
pop
push
iret
mov
iret
xor
movsb
mov
lods
arpl
aam
aad
fdivs
sub
jp
gs
mov
test
ret
nop
cwtl
push
cmc
andl
xchg
rcll
push
push
int3
adc
enter
popa
leave
scas
xchg
add
scas
subl
sbb
sub
inc
dec
repz
push
jge
and
cmp
xorb
xchg
clc
jg
xor
aad
xor
pop
or
rcr
shrl
loop
sbbb
pop
push
jle
je
cmp
aas
jmp
pop
in
cmp
test
mov
pop
jmp
or
lds
push
scas
mov
or
or
mov
cwtl
pop
xchg
xchg
jns
in
jb
push
mov
out
sbb
rcrl
and
leave
lea
sub
inc
xor
aaa
mov
into
or
fs
fistps
rclb
popf
test
xor
inc
jle
push
jmp
xchg
mov
stos
adc
sub
xor
iret
out
push
addr16
aam
or
push
test
lea
sub
mov
notb
fimuls
push
fdivrs
add
cmpsl
sbb
and
shlb
pusha
mov
pusha
dec
test
rorb
sbb
test
cmp
cli
in
jle
xchg
inc
outsl
je
cmp
xchg
ss
out
cmpsb
mov
push
aad
adc
pop
dec
xchg
scas
roll
jne
sub
arpl
lods
or
push
mov
dec
xor
in
out
cmpl
jmp
aam
ret
daa
daa
call
jge
push
push
loopne
push
outsl
push
rcr
cmp
xchg
pop
push
test
insb
scas
rorl
rcr
sbb
ret
push
idivb
sub
aam
loope
sbb
aad
cmp
rcrl
cmp
lret
inc
mov
push
or
or
sub
jns
push
movsl
add
xor
add
mov
scas
ljmp
or
lcall
pusha
in
cmp
imul
fstpl
mov
mov
push
cmp
sti
or
hlt
adc
mov
fs
add
and
movsl
sti
or
gs
jns
or
cmp
aaa
jge
jns
pop
fldlg2
nop
jno
sub
jp
call
push
adc
sbb
gs
popl
adc
pop
mov
lds
out
aas
mov
xor
sarl
pop
aam
negb
or
cmp
cmc
jnp
mov
dec
and
aad
cmp
sbb
sub
movsl
cmp
and
int
add
cmpsl
fsubl
mov
cmc
ret
dec
andl
call
test
rol
jb
and
and
inc
cmp
sar
movl
push
mov
mov
fst
fwait
jnp
xchg
or
pop
push
test
jecxz
ss
adc
insb
mov
mov
jecxz
mov
jp
jmp
loopne
xor
jno
leave
outsb
std
and
push
mov
mov
xor
test
aad
jae
jge
pop
mov
stc
dec
in
push
xchg
pop
mov
scas
pop
xor
es
nop
push
ret
cmp
je
aam
stc
mov
or
jnp
add
add
push
xchg
cmp
or
loope
cmp
cmpsb
jb
cli
icebp
push
lds
inc
imul
dec
push
mov
xchg
pop
pushf
out
sub
nop
insb
inc
jno
loope
js
mov
add
cld
push
jmp
stos
fisubs
lret
lods
repnz
cs
lahf
mov
and
dec
add
outsb
or
or
add
pop
mov
popa
data16
lret
jns
call
push
mov
mov
pop
xchg
xchg
insb
xor
mov
push
mov
pop
dec
pop
stos
in
dec
push
out
inc
ror
addr16
aad
lods
inc
cmp
inc
test
add
mov
xchg
pusha
push
mov
test
mov
test
xchg
xor
adcb
pop
scas
roll
xor
sbb
xchg
test
jle
outsb
jne
lea
or
adc
sbb
dec
fnstenv
negl
sbb
pop
sub
push
lods
cmp
cmpsl
sub
insl
fdivrl
dec
xlat
das
mov
ja
in
mov
jbe
mov
fdivrl
sub
movsl
into
insl
push
push
int
aam
push
pop
imul
rcrl
sub
ret
dec
mov
jp
push
sub
xchg
mov
das
mov
xchg
sahf
stos
jb
insl
pop
jo
mov
sub
mov
leave
ret
addl
jae
cli
cmpsl
lret
xchg
xchg
and
jle
out
adc
cmpsl
and
ficoms
fadds
add
in
xor
inc
inc
push
sbb
pop
insl
sub
fildl
add
xchg
mov
add
push
add
sub
dec
bound
xchg
push
xchg
ror
sbb
subl
movsl
cmp
push
and
inc
cmp
lahf
loopne
xchg
xor
loopne
rcrb
idivb
into
ret
ret
pop
sub
out
mov
dec
jnp
mov
cli
shl
pop
dec
cmpsb
cmc
stos
lds
fnstcw
aas
jg
or
jl
leave
cmp
lcall
mov
popa
or
mov
sahf
jb
mov
ljmp
jne
and
mov
jp
xor
mov
in
push
in
or
ss
pop
les
cmp
sbb
shll
inc
pop
movsl
js
mov
xchg
loopne
cmp
mov
push
xor
flds
or
xor
movsb
push
pop
mov
push
push
imul
cwtl
in
mov
popa
mov
and
in
mov
outsl
cmp
lcall
adc
dec
jmp
sub
js
and
call
lret
pusha
inc
cmc
mov
call
jp
leave
inc
imul
push
xchg
in
push
arpl
std
jg
clc
cmpsb
int3
xor
mov
dec
dec
mov
je
leave
mov
bound
lret
call
das
out
icebp
ss
mov
bound
xchg
or
insl
push
pop
and
add
test
or
mov
dec
aam
mov
js
arpl
add
das
fiadds
outsb
xchg
mov
jo
pop
aaa
loop
insb
cmp
xor
add
mov
lods
mov
movsl
aad
jmp
ss
add
push
aaa
fdivrl
cmpsl
into
or
cs
stos
and
nop
aas
sub
xchg
jbe
xchg
push
rcll
adc
fdiv
sbb
add
in
sub
pop
insl
dec
pop
mov
cwtl
xchg
sub
or
mov
mov
push
aam
pop
cmpsb
sti
xor
cmp
clc
mov
adc
stc
inc
adc
outsl
mov
iret
imul
out
data16
inc
mov
dec
push
add
out
pop
ljmp
add
cwtl
jp
aas
and
mov
jge
or
inc
xchg
test
mov
shll
call
jno
out
xor
jle,pn
imul
lret
adc
test
cmp
xlat
xchg
xor
xor
test
inc
dec
or
xchg
jo
sbb
mov
sti
mov
adc
mov
lcall
mov
pop
adc
pop
xchg
pop
add
sub
fidivl
jge
daa
cmpsb
lret
sbb
cwtl
pop
in
mov
and
movb
shlb
push
shll
aas
sub
mov
push
or
push
pusha
inc
mov
scas
or
sarb
ds
stos
fmuls
inc
inc
fwait
in
cmp
ja
cmp
push
ljmp
adc
imul
adc
aam
sub
stc
add
lea
inc
divb
push
mov
in
mulb
out
push
or
and
in
dec
dec
or
cld
movsl
sbb
sub
subl
pop
mov
movb
mov
jge
add
adc
jae
xchg
test
push
xchg
movsl
mov
out
fdivrl
or
mov
pusha
xchg
pop
ss
cli
xor
mov
lods
test
and
clc
jg
jns
popa
shll
jbe
mov
ja
ds
orl
push
push
add
and
insl
inc
fsubs
repz
sub
cli
push
mov
jl
mov
dec
addb
loope
xchg
jo
sbb
incl
inc
jp
cmpsb
cltd
and
pop
mov
scas
repz
adc
pop
ffreep
add
aas
pop
cld
inc
pop
push
int3
movsl
add
ret
lds
jne
mov
test
or
arpl
lahf
jns
jb
xor
add
pop
sarl
sub
outsb
mov
lea
mov
int
adc
inc
sbb
xchg
cmp
cld
cld
cmpsb
fstpt
mov
push
divb
mov
sub
xchg
scas
aad
mov
jle
push
dec
mov
mov
daa
mov
xchg
jl
in
xor
mov
inc
or
lods
scas
dec
mov
adc
dec
addb
dec
jp
push
mov
lock
pop
jg
mov
inc
sub
jle
mov
mov
push
xor
push
scas
sbb
xlat
push
ss
add
out
imul
mov
mov
adc
rorb
cwtl
push
es
rcl
mov
mov
pop
subb
repnz
orb
ljmp
lods
mov
loope
dec
push
test
sub
insl
or
lahf
pop
fcmovnu
lods
mov
stos
aaa
inc
jp
sub
rclb
mov
add
pop
cwtl
jecxz
aad
out
test
xchg
xor
cld
fsubrp
pop
jmp
mov
dec
fstl
xchg
in
xchg
mov
sbb
lods
arpl
mov
movb
xchg
repnz
push
inc
stc
fucomp
faddl
pop
out
cs
jns
loopne
iret
sub
es
jne
bound
lret
push
call
ja
cli
stos
add
fcom
sti
lods
pop
scas
jo
sbb
int
fstpt
pop
ret
add
or
out
fidivrs
movsl
test
popa
mov
mov
pop
testl
mov
daa
xchg
ret
ljmp
data16
cld
and
nop
cmp
inc
loopne
lock
out
add
int
xor
pushl
and
add
scas
adc
push
pusha
push
sbb
add
jb
bound
pop
or
pop
xorb
mov
add
mov
mov
jmp
mov
aas
in
insb
rorl
cmp
aaa
out
inc
sti
dec
or
sarl
daa
or
sti
dec
sub
adc
pop
shrl
cmp
call
sub
enter
xor
pop
popa
shl
xchg
imul
ja
fildll
sbb
lret
jno
int3
scas
movsl
arpl
int
xlat
xor
cmp
sarl
jmp
adc
jbe
es
jbe
mov
addb
xchg
mov
mov
sub
ss
cmc
aas
stos
int
push
push
sbb
jo
or
mov
mov
in
popl
dec
cwtl
or
dec
lret
insb
push
lea
jle
cwtl
lds
jbe
ljmp
mov
inc
jmp
clc
jmp
mov
add
jmp
in
movsb
nop
movsl
out
jecxz
scas
mov
loop
lods
imul
out
dec
fwait
jle
push
pop
cmp
cmp
aam
out
cmpsb
push
xchg
sahf
jg
pop
bound
jae
test
pop
xchg
sub
aam
push
aam
mov
fwait
jmp
xchg
test
sbb
js
stos
adc
fnsave
push
cld
inc
out
into
cmp
add
jb
ss
cmpsb
pop
test
or
cmpsb
xlat
xor
iret
xlat
movsb
shrb
insl
jl
inc
loopne
inc
imul
popf
mov
xor
jne
or
outsl
sbb
dec
dec
scas
fcompl
mov
inc
cmc
xchg
aas
push
test
sbb
xchg
iret
dec
xor
jp
mov
sbb
rep
add
in
mulb
jge
jb
cmp
cmp
popf
xchg
pop
in
or
mov
push
xlat
jnp
add
lret
push
popf
lds
jb
jg
out
jbe
sahf
adc
jnp
lcall
xor
andl
cmp
xchg
sbb
into
mov
std
cmp
mov
jbe
imul
cmp
lods
insb
jo
movsl
lret
popf
jmp
or
test
lret
data16
or
adc
cmpsl
mov
inc
sahf
dec
mov
push
je
xchg
in
jne,pt
mov
imul
mov
subl
rorl
insl
fwait
cli
enter
cmpsb
xchg
inc
insb
andb
test
mov
popa
lea
jp
jbe
andl
das
jo
xchg
adc
mov
dec
adc
popf
adc
stc
mov
pop
rorl
dec
insl
adc
imul
lock
sub
in
add
or
fucomip
sahf
add
lret
mov
sbb
inc
test
jb
xor
lahf
jg
les
lcall
xchg
ficomps
cmp
bound
out
cltd
scas
push
icebp
aam
cmp
clc
cmp
lret
xchg
lea
out
jnp
lods
mov
bsr
gs
orb
jle
or
adc
jbe
test
bound
sbb
aas
xchg
cmpsb
mov
add
sbb
mov
cli
inc
xorb
xor
or
into
rcl
push
repz
shlb
cld
popf
fdivrl
rorb
cmpsl
push
jecxz
pop
push
push
pop
stc
cmp
js
sahf
ljmp
testl
add
push
xlat
cmp
adcb
pop
mov
push
jg
add
add
pop
movsb
mov
fldenv
scas
cmp
test
sbb
pop
test
in
xchg
loope
test
out
dec
mov
and
imul
inc
jmp
jne
scas
add
std
out
aam
loopne,pt
sbb
fildl
mov
fistpl
imul
xchg
xor
push
into
stos
jecxz
out
jg
cmpsb
adc
jge
pop
aas
mov
push
call
dec
mov
and
xor
cmp
xor
imul
mov
add
mov
and
in
pusha
iret
je
loope
dec
and
xlat
push
xchg
pop
pop
sub
jbe
cmp
pop
movb
lret
test
ret
call
ja
jge
fcmovnu
movsb
loope
mov
or
jl
adc
daa
dec
sbb
notl
ss
xchg
sti
jmp
mov
int3
or
test
push
sub
insl
rorb
subl
jb
shrb
das
daa
jl
mov
mov
adc
std
test
cli
mov
mov
rorl
imul
fdivl
pop
loope
cmp
imul
cmp
int3
adc
cld
inc
mov
lods
jne
test
movsl
insb
mov
lds
cmp
int3
adc
cld
inc
mov
lods
jne
test
push
movsl
je
js
or
ja
sub
cmp
int
fsubs
mov
movsl
jne
test
mov
lds
cld
cli
xor
jbe
in
xor
in
aam
les
in
sub
mov
andl
andl
andl
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
mov
lea
push
movl
movb
movl
movb
movl
movb
movb
movl
call
leave
ret
mov
mov
cmp
add
enter
and
jb
fsts
inc
stc
mov
mov
cmp
dec
loop
shrb
add
mov
cltd
adc
fsts
inc
stc
mov
mov
cmp
dec
loop
shrb
jns
mov
mov
jb
or
mov
jp
push
xchg
inc
out
cmp
imul
push
push
in
fwait
pusha
ret
shll
daa
leave
add
cmpsb
cli
pop
sub
or
popa
aas
jae
std
cmpsl
in
mov
arpl
add
or
aas
jns
xchg
fstps
pushf
sub
fbstp
adc
ret
fcompl
fnstenv
insb
inc
inc
mov
mov
outsb
aad
negl
add
xchg
sub
and
shl
ja
dec
jge
dec
jb
jge
stos
shl
push
add
aad
push
jg
and
inc
pop
dec
mov
push
cmp
jns
dec
adc
gs
ror
in
push
sub
jmp
mov
cmp
dec
loop
shrb
jns
mov
cltd
adc
fsts
inc
nop
repz
jmp
repnz
xor
lock
cwtl
adc
jp
jae
bound
insb
jl
dec
out
cmp
and
nop
sbb
adc
add
jae
or
ds
mov
pop
mov
imul
cltd
adc
fsts
inc
stc
mov
mov
cmp
dec
loop
shrb
jns
mov
cltd
adc
fsts
inc
stc
mov
xchg
les
les
leave
adc
push
subl
js
add
xchg
fistpl
xlat
lods
pop
fbstp
or
fldl
inc
imul
sti
rcrb
cmpsb
or
pop
sti
xchg
dec
aas
sub
sub
lds
and
pop
sbb
push
jne
and
int
pop
pop
pop
aam
mov
xor
xchg
lods
sbb
out
arpl
mov
loop
mov
mov
mov
push
nop
push
lock
push
filds
mov
repnz
ljmp
fdivs
xchg
mov
popa
cmp
dec
push
repnz
mov
xchg
insb
cltd
push
mov
in
jp
add
adc
mov
jb
insl
or
loopne
adc
pushf
out
ret
xor
in
lret
ja
repnz
sahf
and
adc
push
lahf
fistpll
mov
movsb
xor
cltd
aad
leave
insl
dec
shlb
sahf
aad
xchg
std
mul
fisttps
hlt
cli
jmp
out
inc
rol
fdivl
insb
jl
push
cmp
ret
cli
mov
add
mov
sahf
or
les
jg
or
insb
cmp
enter
scas
inc
imul
jae
cmp
das
xor
cmp
stos
push
sbb
jbe
lods
dec
mov
cmc
je
xchg
pop
pop
stc
inc
jecxz
lock
jecxz
xlat
lock
mov
test
fildl
insb
imul
aam
lods
je
cltd
add
dec
pop
sbb
cmp
into
xor
fldcw
inc
fs
int
icebp
jg
or
sbbl
pushl
fldl2e
ds
cmp
and
loop
jns
xchg
popf
mov
lahf
sub
or
repz
inc
cmpb
mov
dec
cs
mov
aad
addr16
shr
rcrb
mov
and
je
cmp
adc
jnp
sub
dec
dec
mov
fs
shrb
jo
fdivrs
iret
outsl
push
and
fdivrs
loop
andb
push
sbb
lahf
cs
stos
mov
fildll
push
aad
mov
fwait
and
or
inc
int3
mov
clc
dec
sbb
and
and
data16
mov
gs
add
fwait
icebp
xchg
add
jo
jge
pop
jmp
cmpsb
shlb
adc
jge
mov
gs
and
sub
pop
outsb
into
or
or
xor
or
popa
ss
xor
lea
push
in
jns
pop
mov
mov
or
cli
scas
loopne
xchg
fstpt
push
out
push
in
xor
xchg
push
xchg
insb
aam
mov
jae
jo
add
inc
ficompl
sbb
pusha
sbb
xor
sti
ss
xchg
lret
ss
cli
mov
add
js
cld
movsl
or
push
and
ficompl
mov
icebp
aaa
test
das
push
and
es
sahf
xchg
rorl
in
cwtl
push
ret
mov
dec
test
jp
repz
dec
loope
pop
andb
dec
lret
jbe
sarb
push
sti
lret
xorl
push
mov
and
sub
pushf
imul
pop
cmp
lcall
xlat
lret
xchg
in
cmpsb
in
sbb
ret
popl
pop
cmp
add
outsb
outsl
xchg
sbb
pusha
or
add
or
stc
dec
cmp
fdivs
hlt
xchg
push
lods
ljmp
mov
test
fwait
out
lcall
movsb
sbb
mov
pmaddwd
je
les
frstor
push
jnp
in
pop
mov
push
cmp
das
repnz
lock
or
inc
lret
mov
fidivrl
jge
push
rorb
cld
les
push
or
jl
sbb
dec
mov
mov
fsubs
dec
adc
pop
sbb
loope
xor
pop
cmp
sub
inc
jns
roll
sti
pushf
jae
sub
stos
push
jp
pop
dec
xor
cmc
aad
mov
push
xorl
mov
jbe
jnp
add
push
arpl
or
dec
loope
gs
pop
xchg
pop
movsb
cmp
mov
cmc
add
sub
movsb
sahf
push
nop
fistps
dec
jne
lret
sub
ret
adc
leave
dec
mov
push
mov
mov
inc
cmpsb
cmc
and
add
insb
and
inc
sbb
incb
sub
mov
or
test
cmp
fcompl
packssdw
arpl
adc
mov
out
xchg
gs
out
mov
roll
dec
stos
cmp
mov
xchg
cmp
scas
or
lahf
and
xchg
mov
call
lods
pusha
xor
orl
push
mov
lret
xchg
idivb
inc
jge
test
fistpll
popf
js
cld
int3
push
es
mov
mov
ret
sti
ret
jge
xor
mov
idivl
cmc
sub
xor
pop
or
xchg
xchg
adc
lea
aaa
add
adc
jns
cmpsb
mov
mov
insb
push
icebp
rcl
mov
cmp
sti
fistpll
jae,pt
int
push
mov
rorl
push
dec
cs
adc
mov
pop
aam
xor
test
mov
xor
pop
out
pop
ret
jl
lret
sbb
and
push
aam
in
adc
mov
inc
add
mov
xor
icebp
ret
and
mov
pop
push
jns
adc
fstps
fwait
mov
adc
ljmp
mov
iret
sbb
adc
add
ret
pop
cmp
lock
aad
mov
and
mov
push
mov
cltd
add
or
lahf
lahf
xchg
scas
in
sahf
and
cmp
jae
shl
mov
shrl
movsl
pop
sub
lock
xor
lret
repz
stc
out
les
stos
in
call
icebp
mov
fwait
xchg
gs
fwait
and
xlat
hlt
jae
push
cmp
repz
sub
add
dec
adcb
js
and
es
aas
inc
inc
sub
fcmovbe
repnz
mul
mov
xchg
xor
xchg
lds
mov
test
add
xlat
out
mov
daa
dec
pop
outsl
adc
inc
mov
pop
repz
mov
fbstp
xor
rcl
jb
xchg
push
inc
cwtl
push
popf
in
test
imull
mov
xchg
cltd
out
or
sar
mov
fists
cltd
and
ja
outsl
lods
push
pop
nop
jge
sbb
push
xchg
insb
dec
xchg
cli
inc
pop
ds
hlt
aam
test
xchg
je
xor
clc
iret
xor
ss
push
repz
ja
mov
test
push
hlt
das
mov
lea
imul
mov
enter
lock
in
aad
outsl
dec
rolb
push
in
fucom
sbb
test
cmpsl
jp
fs
pop
mov
push
and
enter
pop
xlat
cmpps
push
fiadds
dec
fwait
in
inc
popf
xor
add
jns
dec
repnz
adc
nop
mov
aam
mov
popa
jno
int
out
inc
push
insl
xor
xorb
jecxz
lods
push
adc
lea
mov
pop
aas
aad
iret
xchg
test
push
data16
scas
jmp
pop
sub
dec
loope
and
call
test
int3
inc
in
sti
mov
sub
or
lods
dec
aam
in
sar
scas
adc
nop
jle
imulb
dec
xor
repnz
rolb
sbbl
push
and
lea
loopne
repz
fcoms
and
push
in
fwait
cmp
sahf
jl
xor
pop
in
cmp
push
xor
negl
adc
addr16
test
repnz
cmp
mov
bound
dec
dec
imulb
xor
jg
adc
mov
aaa
mov
out
dec
cmp
stos
lahf
nop
mov
hlt
mov
loopne
in
lods
dec
imul
cli
aam
roll
aam
mov
out
std
mov
clc
adc
andl
clc
push
fwait
cs
add
add
repz
mov
fldt
xor
pop
inc
ja
cmpsl
push
js
sbb
ss
mov
and
pop
seta
cli
inc
or
pushf
nop
sbb
or
pop
mov
jp
and
inc
fldl
imul
jle
xchg
cmp
popa
sub
int
cmp
add
bound
or
sbb
inc
fcomps
cltd
dec
xchg
fimuls
or
inc
int
scas
xlat
push
sub
nop
push
xchg
jno
sahf
jg
push
repz
fisubs
jae
or
or
dec
cld
mov
rol
xor
mov
mov
mov
nop
pop
pop
pop
nop
add
imul
orl
loop
mov
aam
jo
in
or
mov
pop
cmp
jns
and
push
and
mov
dec
cmpsb
ja
sub
imull
add
fdivrs
outsb
add
xchg
or
jge
push
mov
jg
cmpb
lret
push
cmp
pop
inc
dec
push
xor
sbb
push
xor
cmp
stos
push
ss
or
cs
cmp
add
sahf
loopne
in
imul
mov
test
mov
dec
decb
iret
xor
pop
das
adc
mov
mov
dec
cmp
lods
mov
xor
cmpsb
xor
sarb
sbb
pop
lea
mov
xchg
inc
and
in
push
or
ds
lock
insb
push
mov
adc
adc
jge
push
subb
mov
xor
sub
movsl
hlt
jae
and
pop
sub
mov
pop
xchg
push
and
dec
xor
sub
ljmp
pop
jge
push
in
lock
mov
xchg
stos
and
pop
adc
jecxz
push
movsl
dec
mov
das
mov
jmp
xchg
fs
sub
rclb
movsl
iret
sub
cmp
mov
scas
mov
cmp
add
and
mov
pop
lea
out
mov
xchg
and
fadd
cmp
movsl
iret
push
jge
lea
mov
push
adc
out
notl
rcrb
js
jmp
not
jecxz
mov
xor
bound
jo
loop
jmp
int3
cld
fdivl
and
mov
sahf
pop
dec
jge
push
dec
xor
aad
mov
rcl
imul
test
jne
icebp
pop
xchg
pop
sub
pop
xorb
mov
js
daa
lcall
xchg
push
sub
push
dec
cltd
in
xchg
push
pop
call
lret
push
test
jl
ffree
rcrb
cmp
clc
mov
sub
stos
lret
jle
adc
sub
jns
push
jg
sti
cltd
pop
sub
xlat
mov
andl
les
in
pop
inc
mov
and
int
push
in
dec
dec
ss
rorb
and
mov
fisttpll
jg
mov
arpl
add
cmp
fdivl
je
popf
into
test
sahf
and
jmp
faddl
into
jg
call
and
inc
repz
rcll
in
enter
outsb
mov
sar
pop
mov
jnp
adc
int3
and
aam
mov
jp
lahf
xchg
push
mov
nop
fs
xor
jecxz
add
xchg
test
mov
shlb
sub
push
and
and
in
jbe
adc
pop
lock
dec
arpl
gs
pop
pusha
xchg
icebp
out
xchg
push
jg
addb
pop
pop
leave
out
inc
icebp
icebp
or
mov
outsl
outsl
cmp
add
inc
sbb
das
mov
mov
cmp
add
in
mov
mov
mov
repz
cmp
movsl
inc
sbb
aaa
push
and
mov
mov
pop
push
xchg
stos
or
push
push
sub
cwtl
imul
or
mov
pop
adcb
shrl
dec
cmp
cltd
add
nop
sbb
popf
cs
repz
xchg
adc
je
insl
mov
sarl
cmpsl
inc
mov
das
mov
push
pmaxub
cmpsl
push
pop
cmp
pusha
xor
and
fcomi
rclb
pop
stc
cmc
dec
xchg
sub
mov
imul
mov
push
icebp
cmp
out
sub
xchg
push
loop
cmc
iret
out
pop
cwtl
jb
lock
push
mov
insb
aaa
mov
cli
mov
cltd
or
scas
jp
push
pop
dec
dec
lret
mov
push
pushf
sub
daa
movswl
jbe
jns
dec
mov
lods
sub
or
lods
in
or
orl
jge
in
inc
pop
dec
aad
cmp
xchg
mov
test
pop
test
addr16
imul
aad
leave
dec
mov
sub
nop
sub
push
and
sahf
rcl
in
push
les
jae
jnp
lock
cltd
je
hlt
jo
jg
sbb
mov
fs
add
xlat
xor
shrb
mov
adc
int
movsb
arpl
xchg
sahf
test
mov
mov
add
imul
lea
sti
testb
stc
sub
sbb
mov
xor
and
add
xchg
pop
jl
imul
and
outsb
pop
xchg
imul
mov
nop
inc
dec
inc
addr16
or
insb
xchg
ljmp
iret
cwtl
lock
mov
push
pop
shlb
xchg
jae
mov
call
das
ljmp
sub
pop
mov
fimull
jne
adc
lds
dec
push
sub
cmp
das
jg
push
or
inc
mov
dec
enter
decl
add
inc
add
cmp
sti
mul
in
and
push
outsb
iret
pusha
pop
mov
les
cmp
cmp
add
mov
dec
insb
xchg
sbb
mov
mov
cmp
dec
push
adc
fidivl
leave
sub
out
and
and
div
add
sbb
xchg
in
iret
xorl
outsl
add
imul
dec
or
push
jno
push
xchg
js
pop
int
jne
in
cmp
movsl
mov
daa
fld
cmp
pop
scas
push
jl
pop
inc
fstp
cwtl
ljmp
es
and
pop
jnp
push
xchg
popa
mov
jns
push
testl
dec
popa
sarb
sub
cmp
mov
icebp
jl
sahf
aam
nop
mov
shll
fcom
outsb
pop
jp
cmp
adc
inc
cmp
out
popa
sub
insb
mov
or
xor
pop
fadd
nop
sbb
push
dec
and
lds
das
pop
jle
test
into
xor
setbe
test
sbbl
into
adc
jp
mov
cli
stos
cmpsl
sub
xchg
mov
rcll
mov
loope
repnz
mov
sarl
jns
fwait
add
mov
aaa
mov
mov
and
and
je
test
inc
mov
into
pop
jg
es
push
mov
push
insl
and
insb
xor
dec
mov
subb
mov
bound
cmpsb
xor
fs
pushf
adc
test
shll
fmul
dec
out
loop
fiadds
les
rol
xlat
pusha
data16
imul
shrl
jmp
and
cmp
sub
leave
mov
push
stos
pop
aas
push
mov
dec
jbe
ret
movsl
xchg
inc
dec
jno
sti
push
je
in
and
daa
out
dec
lock
stos
or
jnp
mov
aad
ss
jmp
cs
into
jbe
sahf
jl
sbb
add
ja
xor
shll
iret
scas
rcrb
inc
loop
push
xchg
rcrl
insb
jo
imul
sbb
sbb
lret
add
jmp
repz
fs
aas
xchg
mov
push
out
popa
jp
push
add
push
and
icebp
out
leave
das
int3
mov
and
sub
push
dec
add
jae
mov
sub
outsb
push
cmp
mov
out
nop
scas
dec
mov
mov
xchg
adc
add
sahf
cli
mov
add
or
jo
inc
mov
popf
in
or
loop
cmc
cmp
adc
das
mov
les
cs
xor
movsb
lret
mov
imul
push
dec
adc
and
add
mov
cmpsb
sub
pop
xchg
inc
push
gs
scas
sti
movsl
cmpl
sahf
shr
decb
sub
aas
mov
lret
inc
push
xor
xchg
int
mov
inc
and
lds
mov
mov
xor
mov
or
jb
adc
xchg
sub
jne
movsl
lcall
adc
fsub
in
fs
andb
test
rclb
ficoms
cs
adc
mov
mov
fwait
pop
das
imul
mov
xchg
push
in
or
add
shlb
shrl
inc
test
sub
inc
mov
sbbl
lret
ffreep
push
and
mov
rorl
in
lds
pop
dec
loop
cmc
jle
xor
sub
or
rcll
jbe
xor
cld
jl
outsl
jp
pop
mov
and
xchg
or
push
adc
inc
mov
inc
jae
push
and
mov
mov
pop
cmp
ds
shrb
divl
lret
jnp
stc
push
stc
mov
lods
fstpt
adc
xor
pop
scas
dec
sub
sbb
mov
fwait
sbb
dec
sbb
insl
data16
stos
nop
push
jp
je
lods
sub
lds
pop
out
mov
sub
xlat
aad
lds
rol
xchg
mov
movsl
fwait
sbb
and
adc
lret
incb
mov
data16
mov
or
sub
adc
out
jnp
lret
pop
and
dec
rorb
ja
stos
dec
ret
lcall
aad
lock
inc
pop
out
inc
sbb
push
daa
lods
sti
mov
mull
fwait
or
jbe
mov
push
mov
xchg
cmp
stos
rcr
pop
push
aam
les
aaa
sahf
or
xchg
cs
ds
inc
add
and
int3
repnz
in
orb
inc
mov
mov
push
xor
mov
push
dec
sub
dec
adc
negl
ljmp
icebp
mov
lods
andb
sti
fimull
inc
mov
cmp
dec
pop
lret
arpl
lods
inc
cmp
aas
addl
imull
imul
xor
mov
daa
mov
sbb
ds
aam
inc
insb
cmc
push
pop
mov
hlt
adc
inc
dec
outsl
mov
mov
jo
pop
lock
or
lods
sti
add
pop
imul
mov
outsl
xchg
imul
xor
add
cmp
cmp
out
orl
int
push
mov
adc
enter
sbb
jns
dec
or
sub
test
das
in
jmp
jb
jl
sub
stos
addr16
mov
mov
sbb
imul
adc
xor
fsub
ljmp
and
mov
mov
sbb
inc
lret
idiv
or
lret
cwtl
sub
pop
jmp
sahf
cs
gs
cmc
mov
add
scas
dec
xor
movsb
mov
imul
sbb
inc
in
dec
fisttpl
add
fdivs
xor
sbb
pop
and
scas
in
jmp
dec
push
popf
pop
or
cmp
pushf
in
xchg
test
adc
lret
jge
sbb
call
jns
into
out
js
push
xorb
gs
xchg
outsb
jg
adc
stos
mov
scas
pushf
aam
lcall
sub
jns
daa
push
aas
cmpsb
or
mov
adc
sbb
cltd
xor
or
in
movsb
dec
jae
fcmovbe
in
out
pushf
mov
lods
xchg
popa
xchg
sbb
das
sbb
xor
or
sahf
mov
add
cmp
insb
pop
cs
xor
sbb
add
cli
daa
sbb
adc
inc
pop
mov
or
push
pushf
aaa
pop
je
mov
dec
std
js
in
inc
dec
jo
roll
and
xchg
pop
aas
sbbl
or
and
insb
push
in
dec
mov
ja
je
mov
xchg
cmp
cwtl
subb
pop
test
cwtl
dec
aam
int
cmc
dec
sbb
mov
mov
je
shlb
fisttps
mov
sbb
sti
sbb
cltd
lods
mov
adc
sarb
and
mov
ja
mov
sbb
dec
loop
shrb
jns
mov
cltd
adc
fsts
inc
stc
mov
mov
cmp
dec
loop
shrb
jns
mov
cltd
adc
fsts
inc
stc
mov
and
adc
cmpb
dec
loop
shrb
jns
mov
cltd
adc
fsts
inc
stc
mov
mov
cmp
dec
loop
shrb
jns
mov
xor
inc
adc
and
xor
or
pushf
inc
mov
sbb
mov
cmp
or
sbb
insb
fnstcw
dec
stc
pop
or
pushf
dec
in
pop
cld
imul
cltd
cmp
or
sbb
insb
fnstcw
stc
pop
or
pushf
dec
in
pop
cld
imul
cltd
pusha
fidivrl
mov
sub
enter
jo
sub
loop
cmpb
xor
popa
or
dec
inc
imul
fs
mov
cld
fcompl
fldl
rorb
and
cmp
lods
int3
imul
dec
pop
mov
loope
mov
pop
mov
xchg
pop
mov
repz
rcr
imul
dec
push
sbb
dec
in
dec
in
xchg
and
mov
and
lahf
jecxz
aas
mov
jmp
xor
inc
pop
add
in
push
add
js
cltd
imul
inc
movsb
fstpt
or
or
sub
inc
outsb
fldl2t
mov
cwtl
call
shl
sub
cmc
xchg
fmuls
push
lods
sbb
in
pop
cld
imul
cltd
cmp
or
sbb
insb
fnstcw
stc
sbb
jo
dec
lret
and
test
popf
push
lret
jb
add
cmp
in
imul
mov
mov
fsubr
imul
adc
cld
jge
inc
clc
cmp
dec
sbbb
int3
jns
mov
cmp
or
sbb
insb
fnstcw
stc
pop
or
pushf
dec
in
pop
cld
imul
cltd
cmp
or
sbb
insb
fnstcw
stc
pop
or
dec
xchg
sub
add
pop
pop
add
jns
mov
in
inc
test
mov
lea
out
imulb
mov
call
in
mov
call
cmp
ljmp
xor
push
outsb
xchg
add
sarl
pop
mov
dec
out
sbb
outsb
mov
rorl
ljmp
loope
mov
sti
cmpsl
dec
and
mov
add
lock
cvtps2pd
xor
inc
sbb
lods
push
sub
jae
pop
outsb
lcall
fbld
xor
negl
mov
mov
out
jmp
adc
jl
test
out
call
push
pop
push
fidivl
stos
push
xor
ja
push
ja
clc
inc
mov
sbb
ds
sbb
ss
mov
cmp
test
subb
out
dec
daa
jge
cli
clc
add
lea
pop
push
icebp
mov
or
jbe
cmpsl
lcall
adc
scas
xchg
cmp
push
sub
pop
xchg
xchg
es
sub
xor
push
jmp
sbb
iret
std
mov
call
xchg
inc
sub
ret
push
sbb
dec
lds
test
cmc
mov
clc
sbb
sub
rcll
push
xor
jle
jae
cmp
add
adc
fistl
or
cwtl
push
pusha
ret
js
jae
gs
mov
xchg
dec
xor
adc
cmp
mov
flds
icebp
ds
push
in
bound
ds
sbb
jo
add
push
sub
or
adc
negl
fsubs
jo
test
adc
sti
or
mov
cmpsl
mov
pop
bound
addb
mov
xor
cmc
adc
mov
pop
rolb
fcomip
push
cmpsb
cmp
mov
push
jmp
cs
or
fistps
call
mov
and
or
ret
and
jmp
bound
movsb
xchg
lock
sbb
fs
out
or
inc
lock
mov
lods
mov
repz
mov
icebp
fs
fxch
push
cmp
xor
add
je
or
dec
jle
mov
fistps
jg
adc
sbb
popa
pop
int
insb
xor
mov
fwait
add
cmc
sub
bound
or
xorb
cli
dec
adc
ret
push
clc
mov
fs
jl
out
dec
mov
test
fwait
cmp
cltd
cmp
aam
enter
movsb
sbb
xchg
jne
out
xchg
sbb
pushf
or
mov
xlat
xorl
icebp
jmp
mov
aaa
out
mov
out
fsubs
pusha
loope
dec
iret
lods
pop
cli
gs
xchg
mov
or
shlb
fisttps
outsb
lds
ret
pusha
push
and
sti
pop
dec
scas
jg
scas
iret
cmp
jmp
jno
insl
clc
mov
dec
mov
loope
push
jg
jns
in
xor
fistpll
mov
or
mov
xchg
or
xlat
cmc
cld
testb
xchg
push
and
push
push
lods
aas
ds
sub
dec
int
fadds
out
xchg
imul
adc
lcall
xor
inc
movsl
mov
push
cmpb
scas
mov
mov
repnz
mov
shll
addr16
xor
or
mov
es
notb
mov
mov
scas
cmp
inc
xchg
subb
fisttps
out
rcr
jns
mov
inc
pop
cmpsl
shrb
cmp
mov
repnz
or
lods
jle
cs
lcall
mov
pop
hlt
push
inc
dec
daa
or
mov
xchg
push
sub
ds
fisubrl
xchg
and
mov
cmpsl
xchg
and
push
ret
jns
cmc
out
out
and
cld
pop
pop
ljmp
mov
fwait
pop
sbb
cmp
add
testb
xchg
es
xor
scas
push
xchg
lahf
dec
xchg
xor
das
fdivr
loope
fsts
xchg
mov
jne
mov
std
hlt
sbb
add
dec
mov
imull
movsb
nop
jne
jle
pop
sbb
fsubs
cld
lea
adc
lcall
jg
xchg
repnz
jle
arpl
sbb
sti
ja
jo
aas
mov
inc
push
je
dec
jge
inc
call
mov
pop
mov
repnz
popf
xor
cs
mov
and
out
jl
jmp
mov
andb
and
pushf
data16
xor
lahf
pop
xchg
mov
mov
cmp
cmp
dec
movsb
in
or
cwtl
mov
mov
cld
inc
pushf
cmp
mov
mov
fnstsw
orl
addb
loopne
pop
xor
jns,pn
push
adc
iret
fwait
mov
mov
push
mov
mov
in
push
xorl
aas
jl
fdivs
mov
fstpl
adc
inc
dec
xlat
or
ss
loop
shlb
int3
popf
addr16
inc
in
faddl
in
inc
lret
rcll
sbb
xchg
inc
aaa
test
dec
test
sbb
adc
push
push
adc
std
test
xchg
sti
pop
sub
clc
xchg
sub
mov
shlb
loop
cmp
je
stos
ljmp
cmp
insb
in
dec
mov
add
leave
es
add
mov
sub
or
push
int3
in
dec
fldl
pusha
pop
xchg
outsb
jae
adc
xor
or
mov
aaa
lea
xchg
adc
fdivl
outsb
mov
ds
xchg
mov
mov
call
and
add
stos
outsl
js
dec
enter
push
rcl
addb
pmuludq
das
cltd
add
and
xchg
jp
stos
mov
dec
dec
pusha
pop
insl
sub
sahf
out
and
inc
hlt
xchg
adc
xor
mov
xlat
sbb
outsb
cwtl
mov
xchg
jmp
sbb
insl
fstl
cmc
lods
inc
inc
call
mov
pop
or
lahf
pop
jo
pushf
dec
jae
push
jge
jp
xchg
jne
insl
push
sub
pop
inc
cs
int3
mov
push
xor
popf
sub
addb
mov
mov
inc
cmc
in
cli
jae
cmpsl
inc
in
fistl
dec
mov
sub
mov
nop
xchg
mov
lods
outsb
mov
pop
mov
std
fldcw
push
or
dec
aaa
loopne
enter
xchg
lahf
lret
cmp
jnp
sbb
daa
mov
int
fisubrs
inc
or
test
dec
pop
test
and
movsb
out
sahf
pop
mov
in
inc
test
and
rorb
cmp
ss
out
loopne
test
pop
rcll
pop
stos
or
out
sbb
aas
cwtl
inc
imul
movsb
add
dec
js
subb
scas
sub
mov
jp
jbe
push
js
and
mov
fnstcw
stc
ret
xchg
xchg
dec
pop
mov
xor
mov
and
enter
jns
inc
filds
aaa
out
lds
xchg
xor
jne
sub
dec
adc
mov
sub
sarb
pop
jbe
cmp
les
xchg
push
dec
test
je
mov
pop
sbbb
mov
jg
dec
pop
out
bound
out
loopne
inc
std
add
fwait
stos
addl
arpl
mov
and
lock
cmc
inc
inc
mov
pushf
subb
push
loope
cwtl
hlt
cmp
push
cld
cmpsb
add
cmpl
push
xchg
xchg
sub
dec
ja
mov
psrlq
mov
dec
mov
jnp
sbb
mov
jbe
test
sub
pop
and
sub
jp
insb
inc
and
mov
and
std
es
iret
shlb
cld
inc
lods
lock
cmp
jmp
movsb
sbb
mov
movsl
or
mov
adc
mov
or
push
and
add
shrb
mov
dec
test
pop
sbb
inc
mov
xlat
mov
inc
js
aad
inc
push
mov
mov
xchg
mov
aam
dec
pop
pop
adc
or
pop
push
repnz
test
icebp
mov
inc
in
mov
inc
push
inc
clc
cmp
arpl
lahf
jns
mov
arpl
inc
mov
sarl
mov
cmp
dec
pop
push
cmpsb
popf
into
adc
shll
mov
mov
jge
fsubr
mov
cmp
mov
lret
outsl
sbb
mov
jl,pn
cmpsl
mov
pop
and
mov
or
pop
mov
arpl
add
test
xchg
mov
mov
shll
mov
or
movsb
mov
popa
call
dec
jg
xor
inc
lods
push
xor
mov
inc
cmpsl
aaa
shlb
push
cmc
rol
lahf
imul
mov
fldenv
adc
cs
sbb
add
cwtl
test
repz
or
pop
ret
xchg
lock
sub
loopne
mov
xor
pop
xchg
gs
or
jle
mov
aas
cld
jo
rorl
dec
insl
aaa
or
sarl
cmpsb
les
scas
add
fs
cld
rol
shll
cwtl
sbb
xchg
das
mov
int3
cs
push
pop
dec
repnz
add
nop
lods
pop
push
stc
inc
imul
sbb
cmpsl
jmp
ja
lret
push
mov
jne
cmp
xchg
daa
push
jnp
repnz
dec
es
mov
cmpsl
push
dec
jne
xor
in
lcall
mov
hlt
fwait
xchg
or
ja
xlat
fidivrs
lret
push
outsl
push
enter
adc
cwtl
mov
mov
aaa
loopne
mov
and
icebp
inc
jg
dec
clc
fisttpl
inc
mov
aaa
xchg
arpl
or
push
mov
sarl
sub
jl
jnp
sub
add
mov
push
gs
test
dec
push
loop
cld
sahf
mov
lock
push
push
pop
lods
loopne
mov
lahf
aad
inc
repnz
cmc
fldcw
xor
lock
mov
push
test
in
inc
and
xchg
je
push
ljmp
xchg
sbb
rol
dec
fildll
and
mov
cs
dec
jle
and
sub
xchg
insb
xor
or
dec
dec
sub
mov
cmpsl
lea
pop
inc
out
iret
outsl
jae
ss
mov
and
lret
pop
cmp
frstor
xchg
rorl
decl
push
xchg
movsl
test
jnp
test
lcall
xrelease
xor
pop
mov
add
dec
adc
xchg
movsl
jno
jne
xchg
out
add
or
cmp
add
int3
push
cmpsl
sti
add
pop
rclb
pusha
mov
hlt
mov
jmp
mov
jle
push
push
shrl
xchg
cli
push
stc
lret
xor
mov
icebp
pop
pop
movsl
jnp
fstpt
jecxz
shll
mov
cmpsb
mov
push
cwtl
mov
push
jmp
int3
cwtl
xchg
test
xchg
sbbl
mov
push
out
test
in
insb
into
cltd
cmp
jno
imul
leavew
test
aaa
stos
xchg
popf
rcrb
push
add
enter
inc
hlt
xor
shl
aam
shll
jo
repnz
mov
push
sub
into
lcall
js
ds
mov
xor
mov
push
jbe
jbe
scas
out
stos
lcall
mov
cmp
lock
imull
or
call
lahf
cmpsb
xor
mov
inc
or
ret
cmc
ja
pop
mov
pop
push
adc
fs
nop
mov
or
push
outsl
repz
push
inc
scas
inc
sti
xchg
sbb
sbb
sbb
popa
inc
imul
pop
cmp
jmp
ss
enter
repnz
rol
dec
add
dec
pop
repnz
es
cli
adc
mov
rcr
mov
test
les
pop
fs
shll
repz
xchg
lret
into
pop
mov
js
test
push
jp
mov
mov
test
mov
push
pop
xor
fistps
add
mov
imul
dec
sbb
mov
pop
aad
mov
fcoml
out
std
jns
sar
leave
dec
lock
pop
shlb
test
jmp
xchg
cmc
stos
pop
test
into
sarb
pusha
cli
mov
mov
pop
push
inc
pop
push
mov
sub
into
insb
ds
mov
fisubrs
dec
jecxz
addl
cltd
popf
in
ret
cmp
xchg
mov
pushf
stc
dec
inc
and
ror
sbb
sub
fldenv
or
stc
lcall
mov
xor
das
aaa
sbb
dec
pop
lock
jbe
sub
cltd
jmp
sbb
sbb
push
loope
xchg
dec
out
cmp
loope
dec
cmp
and
sub
and
test
cltd
mov
pop
repz
inc
sub
pop
movsb
jecxz
push
test
imul
xchg
mov
test
shll
lret
fists
call
ret
pcmpgtw
fildll
sti
cld
add
mov
into
xor
addr16
inc
cmp
mov
cwtl
out
test
sub
hlt
add
push
in
mov
jnp
jl
out
xlat
movsb
adc
jl
icebp
mov
sbb
or
xchg
loope
adc
les
sbb
das
xchg
sub
dec
mov
incb
lret
sbb
mov
mov
ds
mov
mov
repz
dec
popa
push
mov
ficompl
popf
mov
loopne
jo
mov
sub
call
test
test
mov
cmp
ret
into
icebp
repnz
imul
pop
inc
aas
cmpsl
enter
xchg
jbe
mov
movsl
cltd
mov
mov
inc
jg
lret
xor
cmp
fwait
inc
inc
adc
iret
cmp
out
cmpsb
into
sub
or
dec
hlt
movb
push
sar
aad
std
jmp
mov
loop
pop
fcompl
in
movsb
jbe
pop
lock
into
xchg
or
or
push
jmp
cmp
mov
sti
rcrl
test
sti
out
cmp
adc
xchg
stos
inc
imulb
push
stc
pop
cmpsb
xchg
pop
mov
lods
icebp
and
data16
lret
iret
enter
push
jl
pop
inc
inc
push
gs
rolb
pop
fidivrs
outsb
jmp
jle
pop
insb
outsb
jo
push
fnstcw
rclb
and
push
and
push
shrl
std
faddp
int
inc
mov
xchg
lods
and
xchg
js
and
sbb
out
add
mull
or
loopne
fcomps
mov
dec
adc
sti
arpl
repz
scas
test
xchg
es
or
xchg
out
xchg
in
out
dec
jb
jecxz
mov
mov
xor
mov
push
jne
inc
dec
roll
loopne
or
adc
dec
push
or
jns
enter
or
iret
sbb
jae
enter
dec
popa
jecxz
in
shll
mov
lret
xchg
cmp
movsl
das
dec
pop
add
jg
shr
scas
adc
jp
lcall
sar
mov
or
sbb
cmpsb
insb
call
xor
mov
mov
out
inc
inc
test
popf
outsb
stos
ret
repz
sub
xchg
sub
cmc
dec
inc
fstp
xchg
jno
mov
jo
pop
mov
cmp
popf
cmp
mov
mov
loop
addr16
sub
fcomip
sub
pop
div
mov
cmpsb
xchg
fwait
xlat
push
jle
cwtl
push
aaa
fiadds
or
lock
repz
mov
sti
cld
repz
lea
mov
xchg
and
addr16
or
or
push
aas
jmp
and
ret
pop
mov
popf
cli
int
pop
aad
and
pop
push
push
sbb
xchg
and
ret
popl
add
sbb
shlb
icebp
pop
lret
cmp
jae
jg
inc
adcl
or
imul
outsb
out
aam
cmpb
jmp
jl
cs
push
leave
mov
insl
xchg
filds
mov
mov
pop
into
and
lcall
mov
sub
lret
mov
lcall
sub
xlat
leave
xor
bound
imul
out
xlat
lcall
push
lret
lret
cmpsb
push
xchg
mov
sub
mov
shll
and
imul
cmp
jle
punpcklwd
stos
and
popa
mov
mov
rcll
aas
jns
mov
mov
cmp
popa
cmp
daa
jg
in
sub
fucom
cwtl
push
out
lods
mov
mov
cltd
lock
push
push
hlt
out
fwait
jmp
jle
pop
sahf
sbb
pop
out
jecxz
xchg
xlat
add
daa
mov
insb
sarl
out
push
mov
les
in
inc
inc
sub
addr16
dec
fcomps
xor
dec
lahf
cli
xchg
inc
inc
out
sbb
add
loope
jno
pop
icebp
push
fs
into
popf
int3
movsl
dec
inc
loope
test
add
inc
cmp
mov
test
aas
lods
nop
lock
sarl
xchg
pcmpgtb
aad
in
mov
in
shll
or
stos
mov
popa
mov
add
inc
push
xor
mov
add
rorb
or
loop
in
lcall
add
shr
lods
outsl
and
shrl
loop
cmc
adc
loope
test
xor
fnstcw
clc
pop
sti
jmp
cmc
lds
xchg
add
es
dec
sarl
sbb
or
jnp
pop
push
push
sbb
dec
aam
add
inc
mov
outsb
or
jo
jns
mov
xor
mov
jge
fsubs
inc
push
out
mov
jp
dec
jno
or
lret
jae
add
push
jno
xchg
xor
mov
outsl
push
andl
mov
mov
fistpll
cmpsl
and
jb
lds
std
jge
mov
into
imul
xlat
fld
test
ficoms
adc
inc
sub
sub
lock
cli
lret
arpl
fs
inc
xchg
loopne
add
pop
pop
imul
movsb
leave
push
mov
aad
jmp
inc
jb
adc
das
sarb
in
lods
add
std
xchg
and
pop
int
mov
push
dec
pusha
mov
mov
incb
pushf
jmp
push
sub
inc
mov
add
push
js
daa
es
lds
mov
dec
cltd
adc
enter
movsl
push
in
xor
in
pop
pop
sbb
mov
mul
ror
inc
and
push
js
bound
mov
adc
movsl
xchg
test
push
lahf
or
mov
fldenv
negl
add
scas
addr16
jl
jmp
fmuls
dec
and
and
and
scas
sarl
xchg
cmp
popa
mov
mov
aaa
loope
sti
dec
cld
cmp
xchg
inc
repnz
xchg
movl
movsb
mov
pop
xor
mov
lods
pop
ret
push
and
mov
cmp
sti
dec
inc
imul
sbb
push
int
scas
pop
ret
shr
push
cmp
push
es
xchg
daa
subl
mov
xchg
rorb
jecxz
ret
push
imul
dec
push
adc
xchg
adc
add
mov
xor
or
sbb
mov
mov
das
cmp
jge
cmpsl
pop
mov
add
loop
ss
jo
mov
cmpl
pusha
adc
pop
sbb
dec
and
ret
adc
mov
pop
enter
pop
mov
mov
sub
int
ljmp
dec
sub
in
push
sub
out
es
sbb
sbb
dec
rorl
sbb
dec
insb
stos
xchg
sub
mov
insb
xchg
inc
and
das
enter
mov
add
jp
push
xor
xchg
dec
pop
icebp
pusha
das
rcl
movsb
adcb
and
jbe
jne
fsubl
fsubl
cmpsl
cmp
mov
les
fimull
or
cs
sbb
ljmp
cmc
dec
lock
pop
push
dec
dec
shll
dec
ret
ss
aaa
adc
pusha
cmp
push
sub
adcb
cmc
sbb
insb
lea
pushf
dec
in
pop
cld
imul
cltd
cmp
or
sbb
insb
fnstcw
stc
pop
or
pushf
dec
in
pop
cld
imul
cltd
cmp
or
sbb
insb
fnstcw
stc
pop
or
cmp
imul
cltd
cmp
leave
insl
fnstcw
stc
pop
or
cwtl
dec
in
pop
jl
dec
jns
mov
cltd
xchg
add
imul
push
mov
in
sbb
pop
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
add
movsl
lahf
outsl
into
in
xchg
addb
xor
and
jg
pop
gs
xchg
scas
test
aad
iret
in
adc
das
and
scas
jne
gs
xchg
mov
mov
aad
xlat
in
adc
jp
pop
ss
push
sbb
pop
in
test
stc
sti
cmc
adc
add
es
push
push
xchg
movsb
push
mov
or
test
inc
and
or
rolb
arpl
fs
inc
nop
push
pusha
scas
cli
xlat
insb
pop
test
test
mov
adc
push
test
mov
mov
nop
xor
mov
lcall
and
incl
scas
aad
jmp
and
out
int
mov
push
andb
xor
out
mov
cmp
lahf
in
jge
jo
gs
and
repnz
lcall
and
or
push
ljmp
mov
inc
or
dec
lret
test
lahf
movsl
test
out
in
adc
push
and
push
loope
sarl
mov
xorb
pop
inc
jo
add
sub
dec
adc
lret
mov
mov
mov
mov
push
push
pop
push
sbb
jp
jecxz
stos
fcmovbe
out
test
xchg
add
cmc
iret
in
adc
pop
push
outsl
inc
jg
dec
gs
xchg
scas
test
aad
iret
in
adc
pop
push
outsl
inc
jg
dec
gs
xchg
scas
cmpb
scas
testl
rclb
or
push
push
pop
cmpsl
pop
dec
scas
aas
cmp
stos
je
leave
cli
mov
push
jae
pusha
xchg
les
out
aad
outsl
cld
negb
call
lea
int
inc
iret
cmpsb
into
or
dec
pop
inc
mov
cwtl
fisubrl
cli
cmp
scas
and
hlt
sti
adc
adc
lods
rcrb
out
scas
mov
rolb
lret
xor
mov
mov
rolb
movl
or
push
adc
mov
scas
cmp
stc
or
fldenv
lcall
repnz
test
mov
pop
aaa
lods
mov
fidivrl
dec
pop
mov
scas
enter
imul
sti
dec
lods
add
pop
jne
pop
enter
xchg
arpl
inc
dec
jno
in
mov
test
adc
push
push
jl
orb
lret
mov
xchg
sbb
repz
ficompl
push
sub
sbb
dec
aaa
xor
and
mov
scas
js
cld
adc
arpl
iret
xor
popa
insl
inc
sahf
mov
in
sbb
loopne
in
adc
cmpsl
ficompl
push
hlt
xchg
lods
mov
ds
nop
clc
adc
lods
jo
mov
cli
sbb
inc
arpl
push
push
inc
mov
push
loop
jnp
outsl
in
leave
xchg
aad
in
push
xor
stos
jg
stos
mov
out
sahf
test
negb
mov
mov
inc
xchg
mov
btc
mov
inc
dec
les
cmp
xorb
pop
leave
mov
jmp
and
xchg
repnz
ds
dec
pusha
lea
roll
push
jge
ret
cli
pushf
cltd
loopne
push
inc
nop
pop
insb
rol
push
jecxz
mov
xor
push
negb
xor
jnp
lret
insb
test
lret
imul
mov
pushf
cmpsb
test
mov
sti
xchg
inc
cltd
sbb
outsl
sbb
test
setnp
pop
xor
push
fst
movsl
sbb
scas
int
repnz
addr16
mov
inc
and
push
sarl
xchg
insl
fisubrl
mov
cmp
cwtl
sbb
xchg
xor
pushf
shlb
jo
cmp
lcall
jecxz
sub
adc
add
mov
aad
fsubs
jb
hlt
pop
iret
adc
xor
imul
add
sub
sbb
push
mov
add
and
adc
inc
jns
inc
and
mov
dec
cltd
sbb
in
in
dec
test
movsl
popf
push
inc
xor
stos
jne
xchg
cmc
pop
sub
push
or
cmp
lret
xchg
sub
cmc
aad
jne
out
xchg
mov
sbb
cs
pusha
ljmp
jmp
sbb
movl
dec
call
rolb
push
ss
insl
jecxz
mov
iret
sub
repz
int3
or
sub
bound
scas
mov
in
bswap
dec
add
xor
sub
xorb
mov
ljmp
sub
mov
jo
test
cmpps
push
sbb
fs
dec
mov
dec
idivl
dec
pop
pop
jge
jnp
adc
xchg
jo
pop
sub
jnp
repnz
into
pop
sbb
and
push
jle
cwtl
xchg
ja
repnz
pop
dec
out
je
mov
mov
xchg
dec
sub
xlat
nop
inc
jmp
mov
mov
mov
cmp
shrl
test
lods
mov
push
lahf
ds
sub
lea
pop
xchg
rcrl
add
jmp
fistps
xorb
stos
stc
ret
cmp
inc
popf
mov
hlt
mov
push
cmp
mov
inc
jge
cmpb
shrl
mov
xchg
cmc
lret
jge
addb
add
in
aam
mov
jmp
mov
mov
cmp
and
xchg
xchg
sbb
test
cld
jnp
jnp
cs
nop
pop
fyl2xp1
popa
sub
dec
sub
sub
mov
fadd
es
jbe
mov
cli
imul
lret
arpl
mov
add
jnp
stc
test
push
add
loope
dec
std
mov
xchg
mov
sbb
xchg
sti
push
jl
aaa
push
leave
leave
push
imull
cmpsl
lcall
movsl
push
rcr
loopne
test
iret
xor
jmp
jb
fnstcw
jge
mov
movsb
fld
inc
mov
outsl
or
sti
dec
sbb
shrb
bound
ljmp
lds
inc
add
jno
test
xor
fstpt
cmpsl
jecxz
dec
loope
ret
in
ret
push
mov
add
xchg
cmp
jecxz
push
pop
dec
sahf
add
xor
aas
movsl
fnstsw
jns
add
sbb
div
mov
pop
jo
pop
outsb
mov
mov
xchg
stos
fisttpl
push
and
jae
cld
imul
dec
push
xor
xchg
sbb
add
pop
inc
idiv
cmpsb
jmp
out
fs
int
inc
out
xor
add
adc
insl
push
mov
mov
dec
jb
les
inc
lods
jb
adc
mov
dec
leave
sbb
cmp
dec
cmc
push
cs
jo
cmp
aam
loopne
std
mov
dec
inc
add
stos
test
imul
outsb
xor
movsl
pop
lcall
outsl
xor
loop
xchg
pop
dec
ret
es
shlb
aaa
in
adc
ds
dec
adcb
fidivl
repnz
lock
and
arpl
inc
les
push
daa
mov
scas
or
dec
fidivrl
mov
cmp
adc
pushf
xor
jecxz
sar
scas
sub
jns
cmp
push
cmp
sbb
sbb
jnp
out
int
and
mov
sbb
sbb
mov
mov
lcall
jl
jo
dec
push
pop
movsb
out
rclb
xchg
and
sbb
into
frndint
clc
movq
aaa
sbb
stc
rcll
nop
mov
inc
shlb
xchg
xor
mov
mov
xchg
jno
adc
repnz
out
icebp
clc
rcl
cmpsl
cmp
sub
push
mov
mov
out
jns
cmp
dec
hlt
pop
cld
fadd
icebp
ds
ss
jg
pop
push
push
shlb
fstl
or
ficomps
and
xchg
xor
sub
scas
jbe
inc
push
ffreep
mov
push
adc
cs
sahf
push
loopne
lcall
pop
push
and
in
das
push
mov
stc
outsl
lahf
mov
dec
int3
jo
out
aam
mov
pop
sbbl
pop
inc
leave
mov
cld
push
stc
mov
adc
movswl
xchg
lea
sahf
jns
or
ljmp
pop
test
adc
mov
out
mov
lahf
add
rcrb
lcall
push
add
mov
pop
push
vmovupd
into
push
loope
shll
mov
inc
addl
fadds
pop
and
xchg
jne
push
repnz
scas
sbb
xor
insb
mov
xchg
flds
aaa
cmp
mov
xor
xchg
sbb
or
sub
shlb
fs
vaddss
sbb
add
mov
jb
mov
lret
loop
shrl
test
out
cmp
push
jne
push
data16
xchg
mov
mov
xlat
push
and
sub
sub
es
and
insb
in
ret
ret
mov
push
push
dec
jecxz
mov
dec
aam
adc
aaa
jo
jmp
addr16
nop
lret
mov
das
scas
pusha
lret
imul
ss
dec
dec
into
outsl
pusha
jns
mov
cmp
arpl
lahf
arpl
lods
jmp
cmpsl
ret
imulb
int3
push
and
adc
inc
push
adc
out
push
test
adc
lcall
push
shl
xor
testb
inc
mov
cmp
imul
jno
adc
xrelease
or
mov
xchg
das
in
pushf
and
mov
pop
in
rcll
pop
test
jmp
dec
sar
cs
xchg
cld
in
pop
mov
lods
jae
sub
push
cmp
add
add
mov
out
divl
addr16
fldcw
lock
pop
jge
js
push
pop
sbb
mov
test
into
je
movsl
int
lret
or
aam
xchg
push
push
mov
mov
addr16
clc
jp
fdiv
popa
sbb
iret
ja
mov
int3
xlat
mov
xor
stos
arpl
dec
daa
int3
fidivs
xchg
or
sbb
fs
cmp
cmp
mov
shll
xlat
bound
test
mov
in
cli
js
push
icebp
jbe,pn
mov
nop
mov
mov
out
scas
sub
outsl
jo
dec
pop
lea
je
xor
inc
and
rcrl
mov
inc
and
cmp
and
push
cmp
in
arpl
xor
mov
lds
pop
shlb
or
jo
notl
and
aas
cmp
pop
xor
jecxz
pop
push
sbb
aam
out
cli
fimuls
fisubs
push
arpl
mov
ja
lcall
fsubl
push
or
sub
sti
ret
push
in
xchg
inc
adc
imul
and
rol
icebp
leave
sub
stos
mov
inc
rorl
xchg
xor
mov
mov
mov
ret
pop
lods
aam
dec
add
push
push
push
jno
or
or
popf
jp
jmp
and
cmc
pop
data16
xchg
and
fmul
push
push
sahf
mov
jbe
rcr
push
jp
jecxz
ljmp
mov
push
lcall
xlat
scas
ret
movl
scas
out
cmp
add
pop
jl
and
inc
daa
loop
inc
add
xor
imull
fisttpl
adc
xor
or
outsb
imul
push
out
push
push
add
je
xchg
jecxz
loop
push
lea
jo
lret
mov
jns
cmp
jns
sub
push
shrb
enter
ds
and
mov
clc
cmp
fwait
push
dec
cmpl
cmp
sarb
dec
push
shr
sub
inc
xchg
out
dec
and
lahf
ret
mov
pusha
pop
lea
inc
dec
mov
es
dec
adc
aas
call
imul
sbb
sbb
fmull
push
pushf
dec
dec
in
hlt
xor
mov
jne
out
idivl
loopne
push
xchg
lods
and
fs
rcl
repnz
popf
mov
in
jge
push
jle
outsb
lds
inc
data16
pop
jl
dec
aaa
ret
popf
outsl
fsubr
pop
ret
in
inc
jle
mov
or
jl
mov
in
insl
dec
mov
xchg
cmp
int3
jg
cwtl
fisttpll
lock
mov
mov
xchg
adc
lahf
mov
mov
fwait
push
fildl
mov
lds
dec
int
mov
sbb
scas
mov
imul
and
cmc
addl
stc
lcall
ficoms
into
xchg
mov
add
daa
or
add
inc
in
enter
push
mov
push
sti
jb
push
std
push
xchg
cmp
xor
out
fstps
movsl
pop
push
cmp
or
bound
add
xor
inc
pop
inc
cmc
icebp
sub
and
add
adc
sub
jbe
mov
and
iret
jg
sub
mov
jno
mov
pushf
lods
test
arpl
sti
or
push
ljmp
sub
sub
dec
sub
sbb
mov
neg
mov
hlt
stc
outsb
jmp
pushf
push
addr16
repz
mov
pop
mov
mov
pop
adc
jg
roll
and
dec
xor
push
lret
add
jp
push
mov
push
mov
bound
jns
lret
inc
adc
iret
adc
shl
dec
dec
mov
test
add
or
mov
sub
sar
jg
jnp
xor
push
push
in
in
push
or
sbb
decb
hlt
jb
mov
sub
jle
cmpsl
mov
movsb
aas
jne
mov
mov
fsts
xlat
cmc
iret
sub
mov
mov
jb
xchg
in
xchg
add
aad
inc
cli
stc
nop
in
push
inc
sahf
push
stos
pop
sbb
xor
pop
data16
repnz
int
scas
test
dec
mov
mov
outsl
sbb
mov
jnp
sub
mov
mov
adc
mov
ficoms
popf
jecxz
mov
add
mov
or
pop
out
pop
mov
add
bound
add
mov
xchg
loopne
imul
xor
lcall
cmp
mov
imul
test
cmp
cmp
testl
inc
pop
lret
imul
stos
sub
popa
adc
sub
js
push
cli
add
cmp
dec
cmc
popa
loopne
dec
dec
inc
sbb
push
dec
lods
push
ficoml
mov
fisttps
and
mov
inc
or
adc
sahf
pop
mov
sub
sub
adc
pop
xor
test
in
sub
dec
or
push
cltd
icebp
xchg
nop
pop
or
push
xor
xchg
fstp
int
inc
std
enter
shl
sti
stc
pop
ret
jg
push
aam
push
das
push
pop
movsb
pop
mov
fists
push
aas
pop
inc
stos
push
clc
sub
push
mov
cmpsb
int
xchg
mov
hlt
and
adc
scas
sub
into
add
sub
cld
stos
mov
shll
mov
rorb
add
aaa
mov
xlat
fsubl
adcb
xorb
leave
gs
pusha
dec
movsl
push
hlt
cmpsb
mov
jl
cltd
test
repnz
jnp
jg
mov
cmp
mov
pop
jmp
icebp
mov
fwait
subb
call
mov
mov
xchg
dec
rolb
sub
fsub
cmp
mov
pshufw
mov
jbe
sbb
inc
dec
ret
jecxz
rorl
shll
sub
out
sbb
xor
sbb
xchg
push
pusha
push
and
push
sbb
push
pop
lea
mov
ljmp
stos
inc
adc
aas
ja
xlat
lods
jb
sub
add
insb
fnstenv
inc
and
push
push
mov
sahf
pop
xchg
and
xchg
push
jle
mov
enter
dec
push
push
pop
mov
das
cs
sub
sub
jne
lods
and
mov
jecxz
sahf
inc
jg,pn
inc
and
rsm
jne
nop
mov
add
das
push
mov
cmp
push
inc
andl
or
inc
pop
stos
push
xor
or
imul
inc
fidivrs
xlat
outsl
cmp
jae
or
mov
sbb
clc
movsb
fst
nop
jae
and
mov
cld
aas
scas
dec
push
xor
xor
sbb
mov
subb
lds
test
xchg
popa
adc
mov
iret
mov
pop
push
pop
ja
nop
sub
sbb
pop
cmpsb
in
js
adc
pop
inc
js
mov
xor
test
outsb
mov
es
sbb
adc
iret
test
mov
xor
insl
ds
je
add
fdivs
xchg
out
cli
dec
or
aaa
cmp
adc
lcall
clc
loopne
lods
data16
jne
fwait
ds
dec
xchg
xor
mov
xor
js
xchg
test
dec
mov
enter
mov
xchg
jb
pop
cmp
mov
test
jl
push
jge
push
xchg
fsub
cmpsb
mov
fdivr
jecxz
mov
jae,pt
pop
notb
aad
inc
outsb
scas
scas
inc
fnstcw
inc
cs
push
lret
in
add
adc
hlt
das
les
ret
int3
and
lcall
pushf
gs
cmp
cmpsl
inc
lock
hlt
jmp
cmp
scas
loopne
cmpsl
jbe
inc
fwait
test
imul
fists
dec
aam
lahf
pop
push
fidivrl
cmp
stos
pusha
add
cli
push
sbb
jne
xor
cld
jp
aaa
clc
or
hlt
lods
and
sbb
data16
mov
adc
push
jg
mov
addr16
aas
nop
jge
outsl
je
push
xor
int
jbe
das
int
push
sub
mov
add
mov
daa
jp
sahf
loop
addr16
sti
inc
mov
lea
clc
sbb
add
leave
xchg
pop
or
stos
pop
dec
scas
push
and
ficoms
add
test
push
mov
pusha
icebp
mov
lods
adc
out
imul
dec
pusha
adc
lods
lret
cmp
mov
and
xlat
sub
enter
mov
enter
and
sub
andl
cwtl
push
cmp
xchg
inc
xlat
xchg
inc
adc
sub
cmpsl
dec
repz
je
aaa
mov
bnd
fdivl
imul
mov
adc
fldenv
in
dec
testb
and
sbb
mov
push
ret
xor
inc
pop
inc
inc
xchg
movsb
paddb
jno
xor
mov
xchg
hlt
inc
aas
nop
out
pop
sarl
ror
mov
mov
push
out
add
xor
and
mov
daa
jmp
and
call
dec
fwait
fwait
cmc
jg
and
test
jb
fcoms
shr
ljmp
push
sbb
jmp
in
aad
enter
data16
dec
mov
and
mov
scas
mov
cmpb
lcall
aas
hlt
xor
enter
call
inc
mov
imul
push
std
mov
xchg
rcl
add
adc
sbb
lret
pushf
icebp
inc
xchg
xor
inc
xchg
pop
in
mov
insl
into
bound
sbb
jl
add
xlat
mov
pop
dec
pop
les
sub
aam
fstpl
mov
add
addb
lds
fmulp
pop
sti
mov
jg
sub
xchg
lcall
sub
pushf
addl
push
sbb
into
insb
push
dec
in
daa
clc
shr
mov
sti
lret
cmpsb
nop
movsb
sub
out
jnp
ret
stos
inc
and
les
aaa
sahf
jbe
dec
push
xchg
shll
cwtl
jno,pt
lea
cwtl
mull
push
jg
mov
flds
push
hlt
pop
inc
cmpsb
shrl
push
test
xchg
in
xor
add
clc
outsl
dec
loope
out
push
xchg
enter
data16
testb
out
jge
xchg
mov
test
imul
pop
test
je
push
mov
cltd
test
jo
sbb
push
mov
push
push
aaa
cmpsl
jmp
xchg
dec
mov
aaa
jae
fcomps
mov
sbb
rep
mov
in
xchg
add
shll
adc
jmp
adc
cwtl
jbe
shl
test
and
push
push
std
stc
lock
dec
adc
mov
cltd
pop
sarl
xchg
in
or
xor
pop
scas
imul
mov
sbb
daa
add
andl
jge
jecxz
cmp
jge
popf
stc
pop
aaa
xchg
test
shl
inc
xchg
adc
ljmp
jge
faddp
fistpl
test
hlt
cmp
xchg
out
add
arpl
mov
dec
or
sub
jmp
imul
loope
into
pop
cmp
popa
sti
add
jno
out
call
cmp
jge
xchg
lcall
push
or
push
push
or
sti
or
push
mov
lahf
leave
rcll
out
testl
xchg
inc
out
pop
icebp
xchg
push
sbb
inc
xchg
sbb
add
imul
jb
ret
dec
jns
leave
jmp
out
inc
imul
mov
sub
icebp
imull
mov
xor
mov
sbb
cmp
ljmp
inc
sub
movsl
rorb
mov
and
inc
mov
call
movb
jecxz
dec
int
mov
dec
jp
xchg
negb
xchg
cwtl
adc
fcomip
subb
ret
or
pushaw
movsl
lahf
aad
iret
in
adc
pop
push
outsl
inc
jg
dec
gs
xchg
scas
test
aad
iret
in
adc
pop
push
outsl
inc
jg
dec
gs
xchg
scas
test
aad
iret
in
adc
push
push
outsl
inc
jg
dec
fs
xchg
scas
test
aad
iret
in
adc
push
mov
xchg
sbb
lds
fstpt
cmc
popf
and
int
pop
gs
gs
loope
xchg
sbb
lds
pop
in
cmc
jge
lea
mov
gs
jne
cmp
sub
mov
sti
insl
cmc
jge
and
push
mov
xor
flds
inc
fsubrl
aad
aas
mov
jns
adc
xchg
jp
mov
push
popa
in
aas
imul
ret
push
mov
repz
bound
mov
mov
fisubl
mov
sub
adc
inc
push
int3
adc
pop
sbb
sahf
inc
loope
cmp
sbb
cmc
addb
icebp
mov
cmpsl
push
and
jo
in
cwtl
loop
test
ret
pop
dec
outsb
js
and
push
jo
add
push
and
fwait
or
movsb
dec
dec
les
cmp
sbb
rcrb
mov
push
sbb
jbe
fimuls
mov
and
pop
in
push
jge
lea
mov
push
in
jne
in
out
roll
stos
and
sub
inc
lds
aaa
lods
cmp
enter
xlat
sub
mov
adc
mov
call
cmp
cmp
jmp
inc
out
xchg
dec
aad
in
cmc
jge
lea
mov
gs
jne
test
mov
lds
pop
in
cmc
jge
lea
mov
gs
jne
test
jne
or
and
pop
push
sub
mov
push
sbb
cli
iret
mov
adc
lods
mov
mov
xchg
dec
push
les
sub
jp
negb
pop
mov
or
and
xor
repnz
aam
in
push
push
mov
dec
mov
insl
mov
hlt
sbb
jg
mov
fsubp
test
jo
push
andl
or
pop
imul
mov
xchg
or
jb
mov
jmp
pop
mov
adc
xor
ret
in
jnp
js
lret
and
sti
adcb
iret
test
jp
or
addr16
adc
frstor
or
stc
push
into
push
fiadds
addr16
mov
je
mov
mov
push
jbe
jecxz
insb
pop
jno
out
sbb
and
in
je
arpl
outsl
xchg
pop
xor
cs
and
test
dec
mov
cmp
dec
cmp
scas
jb
xlat
ss
fdivrs
imul
cmp
in
ja
fsubrs
jbe
lret
or
test
or
call
jbe
cmp
or
pop
js
test
inc
xlat
stos
sub
imul
aad
or
stc
pop
push
outsl
mov
js
dec
cmpsb
in
into
sbb
pushl
movl
into
in
sbb
cmpsb
loop
cld
inc
jmp
call
sbb
out
mov
jmp
test
jo
lods
lcall
or
lret
sbb
jno
data16
cmpsl
mov
es
fldt
loop
mov
push
pop
mov
into
pop
mov
dec
int
mov
add
cmp
mov
jmp
adc
mov
dec
test
lret
aaa
push
stos
les
or
pop
je
mov
or
bound
xchg
adc
fwait
cmp
ficomps
leave
movsl
mov
xchg
and
xorl
stos
loop
out
movsb
mov
cs
jecxz
xor
leave
fbld
jb
mov
dec
in
arpl
xchg
mov
cld
lret
cs
push
inc
fwait
jne
pop
inc
bound
mov
mov
lahf
xor
pop
cmpsl
and
cwtl
pushf
push
shr
int3
lock
add
into
notl
push
lahf
sbb
add
hlt
cmpl
cmp
inc
sub
sub
pop
ss
jl
adc
lsl
add
sub
pop
mov
cltd
dec
xor
lahf
inc
mov
ljmp
inc
add
mov
sbb
jne
xchg
xchg
stos
movsb
mov
or
shrb
into
mov
subl
sbb
subl
push
add
test
iret
in
insl
push
push
dec
gs
xor
pop
repz
push
dec
clc
dec
push
xor
dec
add
sti
out
dec
imulb
lods
fcoms
ljmp
pop
xchg
mov
xchg
inc
loop
orl
pop
mov
jbe
fmulp
ds
imul
cwtl
adc
das
push
xor
inc
mov
imul
dec
scas
jl
mov
add
notl
pop
call
jo
push
test
cmp
dec
ret
jnp
or
xchg
dec
pop
and
lock
dec
out
mov
sbb
pop
lock
clc
ljmp
clc
ds
notb
pop
es
and
sbb
push
mov
sbb
pop
mov
sbb
scas
or
aaa
mov
push
jae
jge
not
xor
or
or
push
pop
inc
cmpl
mov
lcall
leavew
scas
xchg
lods
mov
clc
test
cli
mov
cmp
or
push
lret
jae
test
js
das
add
lds
sub
xchg
lds
push
into
mov
jns
xchg
sub
daa
roll
lret
xchg
inc
sbb
xchg
hlt
xchg
mov
mov
dec
pop
jae
sbb
sub
add
fs
mov
loope
jo
xor
cmp
inc
mov
arpl
shl
es
lret
jmp
outsl
ja
pushf
or
outsb
xor
ja
loop
mov
pusha
add
cmp
pop
mov
fdivrs
insb
sub
pop
xchg
mov
dec
fwait
jecxz
mov
imul
pop
repz
iret
hlt
xor
mov
adc
rolb
and
jp
sbb
cli
mov
inc
cmp
sub
fidivl
enter
push
inc
fs
and
sub
popa
sub
inc
add
pop
mov
jl
lret
test
sahf
arpl
xchg
xchg
ljmp
fldcw
and
aad
cmp
mov
jb
icebp
je
mov
in
mov
fisubrl
pop
int3
xor
adc
adc
xor
es
add
dec
jmp
jl
adc
shl
fsubl
sbb
mov
call
ja
dec
pusha
pop
or
test
ret
outsb
inc
jae
sub
je
cmp
std
mov
cmp
pusha
sbb
mov
xchg
mov
mov
add
mov
es
fmuls
and
aam
sbb
mov
or
cmpsb
fcoml
scas
xorb
rdtsc
jge
adc
popf
mov
sbb
xor
test
xchg
pop
mov
inc
lock
mov
loopne
push
fucomip
dec
loop
subl
outsb
fdivs
mov
inc
xchg
outsl
std
gs
jle
movsl
xlat
vpclmulqdq
sbb
daa
pushf
jecxz
bnd
jnp
test
pushf
iret
inc
or
call
call
add
into
aas
popf
pop
mov
pop
insb
ror
cwtl
mov
aaa
pop
jge
add
sahf
jb
ss
fwait
xor
into
loop
pop
jae
enter
aaa
daa
jecxz
pop
into
js
fnstcw
add
lds
cmp
add
xchg
lret
mov
jne
lahf
mov
and
popf
test
test
hlt
xor
andl
and
clc
xchg
addr16
rol
aaa
sti
dec
lahf
iret
push
pop
stos
cmc
xor
jne
stc
mov
aaa
or
hlt
in
push
out
andb
inc
test
sub
pop
mul
movsl
movsb
mov
fwait
push
arpl
mov
fcom
mov
imul
addr16
sbb
cmp
sbb
ds
xchg
jb
ret
mov
jo
push
mov
xlat
fwait
stos
into
or
in
cld
dec
cs
js
movsl
sub
mov
mov
inc
mov
sub
adc
xchg
pop
mov
inc
testb
lods
xchg
les
mov
pop
push
js
pop
test
and
add
sahf
shufps
aaa
and
repz
out
dec
sub
daa
jo
jmp
scas
fs
scas
jbe
imul
mov
jae
outsb
or
dec
bound
int3
roll
pop
ds
out
adc
popa
cmp
sub
shr
xchg
cli
inc
sub
call
mov
cmpsl
jmp
mov
sbb
je
out
mov
dec
jmp
jmp
cmp
in
add
int3
std
jae
push
xor
pop
mov
js
or
in
mov
rorb
pushf
push
xor
leave
test
adc
or
insl
push
ret
movsl
daa
and
pushf
repz
std
repnz
jmp
shl
scas
lods
test
pop
popa
pop
mov
mov
mov
add
ljmp
iret
xchg
jg
imul
ljmp
xchg
rclb
mov
idivl
push
shrb
fimull
cmp
jns
lahf
adcb
stc
ja
cmp
pushf
sarl
adc
sbb
das
adcb
pusha
xor
cmp
outsb
xchg
push
rorb
xor
imul
cmp
imul
out
stc
outsl
in
jno
xchg
xor
call
pop
movsl
pop
aaa
shrb
hlt
scas
cmp
push
shll
sbb
pop
lds
xchg
xchg
in
leave
xlat
push
les
jmp
pop
loope
xchg
mov
pop
out
xor
mov
dec
repz
shll
fwait
sbbb
mov
lock
outsl
adc
mov
inc
dec
std
push
je
rorl
incl
adc
mov
pop
loop
adc
mov
add
into
mov
scas
mov
and
sbb
outsl
push
arpl
cld
sahf
or
and
xchg
cmpb
in
jno
mov
leave
or
xor
sub
sbb
je
cld
xor
cmp
imul
int
mov
aad
xchg
movsl
in
or
pop
outsb
insl
or
loop
enter
dec
mov
xor
mov
xchg
out
or
xchg
cmp
pop
lock
test
fidivl
cld
loopne
pop
xchg
xchg
lds
lods
lret
lret
pop
dec
pop
mov
aaa
fldl
lea
ds
fstpl
lds
negb
stos
adc
jo
mov
sub
rcl
cli
insb
flds
jl
sub
xor
outsl
lock
dec
rdtsc
dec
xor
jg
pop
test
sub
pop
cs
adcb
jmp
stc
aad
enter
pop
cwtl
lea
mov
loopne
pop
xchg
xchg
fcoms
adc
lret
sbb
jno
inc
lahf
movsl
adc
cmp
or
out
ret
mov
mov
fidivl
or
mov
repnz
jb
sbb
inc
xchg
repnz
pop
stos
cmp
push
outsb
pop
jno
lds
adc
shll
pusha
cmpsb
xor
int
jbe
shlb
clc
jns
insl
lods
out
jmp
aaa
pop
mov
gs
outsl
dec
notl
std
fidivs
and
mov
mov
scas
sub
push
inc
cmp
fstpl
gs
insl
test
popa
pusha
push
mov
push
sti
jp
sub
jmp
push
lahf
mov
outsb
sti
repz
or
sbb
push
loope
sub
xor
mov
dec
adc
fadds
rcr
rcr
test
lahf
decb
inc
and
lods
rorb
jne
xlat
mov
popf
testl
out
aam
mov
xor
jnp
adc
bound
mov
xchg
mov
gs
je
cs
add
das
test
movsb
mov
mov
jecxz
dec
inc
and
cmp
inc
hlt
repz
xchg
call
xchg
les
iret
push
arpl
cltd
xor
jp
pop
stos
aam
stos
jle
insb
push
negb
outsb
rcrb
push
pop
mov
mov
popf
cmp
inc
cltd
ljmp
fistl
cmp
pop
cmc
xchg
int3
xchg
cmc
js
int
test
inc
pop
enter
sub
fmul
shlb
push
je
or
sbb
mov
addr16
pop
fs
hlt
dec
lcall
or
mov
add
jl
add
xchg
js
arpl
inc
lret
sbb
dec
jns
out
je
or
test
sub
add
or
dec
mov
enter
xchg
pushf
adc
or
mov
pop
les
loopne
cmp
out
jmp
jnp
mov
shll
push
and
ret
jl
popf
das
xor
xor
pop
stos
add
lahf
lock
orl
add
aas
daa
adc
and
fiaddl
sbb
pop
loope
mov
sub
ja
test
lds
test
lods
rolb
dec
loope
pop
mov
xor
iret
push
lods
add
mov
rcr
jmp
mov
cmp
int3
add
and
xor
mov
ret
jmp
or
fildll
pushf
xchg
in
outsl
pop
inc
int
adc
mov
pop
shrl
xchg
inc
leave
fnsave
scas
jb
outsb
pop
sub
lahf
push
add
push
pop
push
xor
dec
fbstp
jl
xorb
and
inc
ss
les
aad
jp
push
mov
test
sbb
sub
xor
jle
arpl
add
idivb
jae
adc
enter
lret
add
pop
cmpl
push
ficoml
xchg
dec
xlat
or
fs
shr
xchg
cs
test
clc
lcall
mov
js
pop
xchg
pop
push
ss
js
cmpsl
adc
mov
fnstsw
int
inc
fprem1
pushf
call
lods
fnstcw
mov
mov
pop
cmp
push
add
sub
dec
mov
imul
sti
xor
test
lret
push
inc
lods
idivl
sub
or
in
and
in
rcr
pop
adc
dec
xor
aas
add
fidivs
les
fldenv
push
rclb
andl
cwtl
mov
addb
jle
leave
aam
or
scas
mov
ffreep
repnz
mov
movsl
stos
dec
lret
arpl
pushf
mov
jb
lret
dec
andb
movsl
xchg
push
mov
mov
sub
mov
inc
aad
das
xor
or
sub
into
add
and
ficoml
cltd
xchg
push
and
pushf
and
insl
mov
in
mov
push
mov
dec
jge
pop
xor
push
inc
cmp
sbb
stos
cld
daa
cmp
lods
rorb
fisttpl
dec
imul
push
xchg
js
mov
jne
dec
outsl
mov
sbb
sub
rorl
fwait
negb
jg
mov
imul
pop
pop
xor
out
out
xchg
inc
push
aas
mov
je
xor
mov
cld
shlb
mov
outsb
test
aam
mov
out
cmpsl
rorl
lcall
repnz
sarb
popf
dec
jb
mov
out
movsb
std
lds
jbe
lds
cs
push
fdivl
xchg
fs
cmpsl
in
mov
hlt
cs
insb
and
mov
repz
jle
shrb
out
and
dec
lahf
xor
ljmp
cmp
inc
into
push
xchg
aas
jp
pop
leave
mov
sub
loope
cld
xchg
cmp
outsb
cli
outsb
adc
xchg
mov
sbb
xchg
sub
ja
adc
sti
sbb
jmp
mov
mov
mov
lahf
cltd
xor
roll
cmpsl
push
insb
pop
out
test
jp
mov
push
fcoms
loop
outsb
lahf
xchg
mov
sub
xchg
jnp
orl
pushf
lret
int3
jno
test
pusha
test
jmp
mov
cmpsb
aam
decl
ret
and
jge
cmp
popf
out
lret
mov
out
andl
mov
xchg
mov
mov
xor
les
xchg
fcomi
sub
push
punpckldq
js
push
adc
insl
mov
fiaddl
add
pop
or
ss
aam
jle
call
xchg
push
add
dec
pmaxub
mov
loop
jmp
fldcw
pop
mov
ljmp
jge
and
int
loopne
jae
jecxz
xlat
pop
lret
ret
roll
lock
nop
std
shr
inc
cmc
dec
mov
in
inc
ljmp
int
lock
cltd
aaa
ds
ret
mov
movsb
jecxz
iret
dec
and
loope
mov
lret
daa
xchg
int
lods
mov
cmpsl
divb
test
add
movsl
jl
out
movb
pop
out
pop
dec
iret
dec
ljmp
sbb
xorb
mov
loopne
cli
jae
je
das
and
sub
loopne
scas
mov
mov
call
fistl
jmp
scas
iret
jle
inc
aad
ja
push
call
xchg
mov
dec
lret
ds
jmp
lock
imul
cmp
lock
xchg
inc
cs
jns
jecxz
mov
xchg
mov
dec
and
mov
mov
mov
sti
loope
shll
add
adc
movsl
inc
aad
sbb
mov
jnp
xchg
sub
orl
cld
cmc
sub
pop
ja
sub
jg
push
xchg
sbb
xor
aas
or
test
mov
int3
sbb
ja
sbb
adc
inc
mov
push
aad
and
mov
jae
mov
cs
cmp
stc
seta
out
movsl
nop
aaa
inc
scas
enter
out
pop
dec
test
fwait
push
mov
ficoml
push
jle
sbb
pop
cltd
add
rorb
rol
push
or
imul
in
mov
dec
cmp
push
sti
add
divb
adc
jecxz
pusha
mov
repz
stc
xchg
sub
and
cmp
in
dec
xchg
jle
into
pop
or
push
adc
mov
pop
xor
clc
arpl
sbb
adc
mov
push
fmuls
sbb
std
push
orb
cmp
adc
mov
push
mov
pop
mov
fldt
jle
jl
sub
hlt
loop
push
xlat
loope
stos
sub
ret
dec
movswl
outsb
jmp
aam
mov
in
inc
xor
js
repnz
les
inc
jl
jno
pop
push
or
out
lock
sub
xor
ret
aaa
hlt
mov
push
loop
out
xchg
out
cwtl
loope
inc
lds
lds
imul
dec
adc
inc
shl
push
mov
and
leave
xbegin
sub
mov
cmp
shll
push
ja
fs
mov
lahf
push
sahf
pop
bt
ds
pop
outsl
add
jno
ja
add
stc
mov
and
or
testb
lahf
clc
push
add
shll
cmpl
ja
shll
mov
or
stc
xlat
rolb
lods
sub
dec
sbb
stos
mov
mov
and
inc
pusha
lret
mov
inc
jg
adc
jb
mov
adc
ficoml
stos
mov
mov
pop
dec
inc
ret
cmpsb
xor
fs
into
mov
loopne
outsl
adc
ss
add
sub
cwtl
pop
push
mov
daa
xor
je
pop
orl
xchg
mov
loope
mov
lods
inc
stos
sub
dec
movsb
rorb
sahf
sub
push
lahf
clc
lods
xlat
adc
cmpb
mov
movsb
or
and
rclb
xchg
and
jge
add
into
dec
test
push
stos
xor
mov
mov
dec
je
mov
loop
pop
mov
in
hlt
aam
cmp
jmp
outsl
and
xchg
dec
rorl
cmp
aam
clc
inc
outsl
jg
imul
or
mov
xor
js
push
adc
shlb
insl
sbb
sub
mov
pop
in
loopne
jno
cmpsl
dec
fcmovu
inc
mov
filds
pop
mov
adc
test
imul
shll
add
push
sti
sub
fs
ljmp
scas
mov
fnstcw
or
sub
inc
aam
and
xchg
das
mov
decl
inc
inc
cmp
fisttpl
push
or
loop
inc
dec
fdiv
sub
mov
mov
inc
cmpsb
jle
mov
icebp
push
push
inc
stos
push
popa
fld
lds
lock
test
xchg
aaa
pusha
cwtl
bound
sbb
out
inc
mov
mov
das
inc
shl
adc
or
adc
cmp
adc
xchg
adc
xor
sub
push
int
mov
mov
xchg
cmp
push
icebp
stos
adc
push
data16
fildll
insl
dec
mov
dec
js
jg
lahf
jecxz
imul
rep
fld
and
pop
and
movsl
aad
cs
xor
mov
cmovno
mov
push
sub
stc
mov
or
das
cld
hlt
dec
out
inc
mov
dec
aad
xchg
lock
dec
cmp
fnstenv
les
mov
xchg
arpl
inc
roll
stos
cmpsl
fs
push
lret
fmuls
fbld
lds
int3
cld
arpl
in
mov
inc
cmp
aas
stos
xor
mov
adc
and
mov
nop
in
pop
negb
hlt
lods
aad
negb
jo
cmpsb
test
popf
xor
out
inc
out
rorl
mov
push
mov
shrb
lcall
dec
inc
insb
xchg
pop
or
jge
inc
testl
jp
adc
adc
xchg
push
push
sbb
lds
pop
in
cmc
jge
lea
mov
gs
jne
test
mov
lds
pop
in
cmc
jge
lea
mov
gs
jne
test
mov
push
dec
aad
in
xor
popf
aad
xor
frstor
popf
std
xchg
or
xchg
cmp
in
jne
add
lods
xor
and
mov
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
lea
push
pushl
call
lea
push
pushl
call
jmp
call
push
mov
call
xor
leave
ret
fsubrl
cmp
mov
mov
adc
inc
popf
add
push
call
popa
fcomps
or
push
inc
movsb
add
push
lcall
dec
xor
and
adc
shll
fstl
inc
adc
inc
in
jno
sbb
mov
mov
jg
mov
loop
and
cmc
mov
jae
aaa
push
mov
mov
sub
sbb
mov
mov
cmpsl
xchg
push
cld
inc
into
fmul
addr16
shlb
shll
pop
jecxz
push
test
add
into
loop
scas
dec
int3
inc
or
popf
aam
stc
int3
div
dec
shrb
push
add
push
inc
and
adc
fs
sahf
enter
dec
mull
cs
or
rcll
into
jo
and
fwait
adc
adc
orl
cmp
je
sbb
jmp
ja
addr16
inc
sbb
jno
mov
adc
sbb
push
pop
inc
jecxz
xchg
mov
xor
pop
loopne
rolb
dec
cmc
insl
iret
jge
push
sbb
and
cmp
popa
mov
cmp
es
inc
or
jnp
ja
push
xchg
push
faddl
push
in
dec
lcall
and
insb
loopne
xchg
pop
sarl
loope
adc
and
jno
popa
fcoms
or
js
dec
loope
adc
and
jno
popa
fcoms
sbb
scas
jl
mov
testl
cmp
sbb
in
xchg
lock
lock
mov
cs
aad
arpl
inc
shr
aaa
cli
sbb
add
add
js
or
mov
inc
mov
outsb
fidivrs
arpl
or
add
add
xchg
jbe
xchg
fdivl
icebp
testb
and
jbe
imul
loop
fadds
or
loop
imul
sahf
pop
lock
sbb
jg
xor
xor
sar
cmp
inc
dec
or
jne
sbb
sub
push
lret
mov
std
inc
cmp
sti
jl
jmp
outsl
sub
adc
pop
inc
mov
shll
stos
or
xchg
clc
xor
insb
mov
sbb
bound
push
inc
das
pop
cmp
out
iret
repnz
and
cmp
repz
sub
mov
push
shrb
cltd
leave
push
add
lcall
inc
jns
cmc
in
jmp
cld
dec
adc
enter
rcr
cmp
sarb
mov
stc
imul
pop
inc
mov
xor
pop
sbbl
aam
scas
add
xchg
jmp
int
xor
or
test
test
jo
jae
dec
cmpsb
sub
stc
fwait
imulb
push
inc
testl
pop
dec
out
gs
cmp
mov
incl
leave
pop
aas
iret
sbb
mov
cmp
xchg
mov
pop
add
hlt
pop
push
jl
sub
pop
test
push
xor
cmpsb
daa
xchg
jge
lds
enterw
push
xchg
adc
xchg
push
add
ret
mov
sbb
or
idivb
inc
out
out
dec
mov
ds
xchg
sub
dec
xor
faddl
lcall
js
or
pop
cmp
xchg
pop
repnz
fcompl
lods
sub
and
aam
add
sub
mov
mov
add
sahf
int3
add
and
test
lahf
jns
mov
mov
out
repnz
adc
push
pop
pop
cs
pusha
out
mov
adc
sbb
outsl
xchg
movsl
push
inc
push
filds
fstpl
push
mov
inc
add
dec
adcb
pop
rcl
xor
xchg
inc
pop
addr16
aaa
push
sub
jge
and
jl
scas
bound
xor
flds
cmp
adc
outsl
push
ds
add
and
push
xor
mov
xchg
jbe
inc
push
stos
repz
xchg
pop
js
adc
adc
or
arpl
cli
jbe
inc
push
movsl
shll
ja
push
les
outsl
sub
lods
fmuls
mov
mov
xor
pop
add
fists
call
scas
pop
inc
repz
sub
mov
or
jae
shll
push
adc
xchg
cmpxchg
or
lods
pop
adc
cmc
stos
jmp
out
lcall
mov
test
nop
ret
fistl
pop
jecxz
xorb
leave
shrb
xchg
mov
insb
lods
movsl
sbb
xor
inc
push
push
es
cmp
adc
shrb
mov
and
and
push
add
sti
sub
sub
add
add
mov
pop
jecxz
pop
aad
push
push
lret
add
leave
push
sbb
add
push
lret
mov
xlat
xlat
jbe
repnz
adc
mov
es
pop
mov
inc
sub
cmp
ljmp
lcall
and
xchg
mov
lods
pop
add
jp
xor
int
data16
push
stc
push
pop
in
mov
lods
lods
test
sub
mov
cli
xor
fs
stos
mov
outsl
adc
mov
shlb
pop
add
lock
xor
ja
aas
dec
inc
mov
stos
je
add
rcrb
xor
xor
adc
pop
loop
insb
jmp
sub
mov
add
cmpsl
aam
xor
xor
push
xchg
lock
lret
or
adc
and
mov
inc
std
jge
sub
jb
jo
dec
out
fisubl
and
les
fsts
pusha
and
jbe
xor
dec
or
subb
mov
add
jb
push
ja
add
xchg
and
out
or
sub
andl
adc
jne
or
rcrl
inc
jbe
mov
push
imul
hlt
sbb
mov
add
loop
lds
insl
inc
test
cmp
test
pop
fwait
in
add
jmp
push
cmp
inc
test
mov
fs
push
aas
add
mov
sub
mov
repz
inc
cmp
and
pusha
jb
sbb
and
inc
inc
mov
mov
cmp
push
pop
movsl
pusha
imul
lret
jl
pushf
pop
ljmp
add
je
lds
in
push
jnp
sbb
out
push
js
jecxz
and
lret
repz
insb
mov
mov
cmp
inc
subb
push
nop
xchg
adc
adc
jmp
mov
stos
ja
ja
test
in
push
lahf
outsl
cmp
sub
popf
adc
je
stos
mov
in
adcb
rcrb
cwtl
movsb
push
mov
stc
or
jne
dec
stos
cmp
ja
stos
popf
or
inc
push
xchg
sbb
int
or
ret
fiadds
dec
and
fmull
xorb
aaa
scas
repnz
cmp
movsb
pop
fsubrp
dec
jl
cli
xchg
ret
cmp
mov
jb
rol
enter
scas
push
mov
je
enter
jg
mov
or
pop
mov
test
les
cmp
xchg
ja
push
test
mov
xchg
jg
mov
cmp
cmpsb
fisttps
pop
push
adc
frstor
clc
clc
dec
xor
xor
fistpll
jbe
and
pop
xor
rcll
pop
pop
ret
aas
or
push
pop
stc
cmpsl
sbb
or
adc
shl
lahf
sbb
xchg
and
scas
test
xor
dec
adc
or
or
into
out
sub
mov
mov
jg
add
js
push
jne
pop
loop
in
addr16
jg
or
mov
sbb
je
jecxz
mov
inc
imul
fwait
sahf
xor
xlat
test
jecxz
ret
jno
sbb
mov
rcr
xor
outsl
jl
pop
xchg
imull
xchg
ss
jecxz
sbb
addr16
xlat
mov
jbe
jo
sub
ljmp
rorl
ror
out
cmp
or
pop
jle
stc
test
jns
popf
add
push
pusha
cmpsb
add
xchg
pop
ds
cmpsb
add
dec
adc
in
mov
fstpt
in
jne
int3
mov
daa
cli
je
mov
loopne
movlps
not
pusha
dec
mov
cmpsl
ja
js
lea
jmp
inc
xchg
xor
cli
sub
sub
repnz
scas
pop
ljmp
insb
sub
and
adc
cvtdq2ps
sti
mov
inc
dec
popf
test
and
or
outsb
test
and
sub
das
inc
pop
pop
out
push
lods
insb
inc
jae
fcmovnu
in
bound
sar
je
out
xor
adc
mov
push
push
sbb
xchg
push
xor
push
or
sbb
sub
push
shlb
add
rolb
leave
leave
or
pop
xor
jne
imul
enter
push
outsb
ja
test
movsb
test
enter
inc
stos
mov
mov
pop
dec
sbb
pop
out
cwtl
ucomiss
pop
and
adc
add
push
add
lea
mov
scas
aas
addb
dec
jge
jae
aaa
in
push
and
addr16
mov
pop
xor
daa
dec
das
dec
sbb
mov
ret
sub
fs
or
lea
add
dec
ror
data16
imul
mov
push
add
lcall
ficoml
mov
jle
add
dec
mov
cmp
adc
nop
push
jbe
jbe
aaa
inc
fwait
xor
mov
test
fsubrp
outsb
ss
int
cmc
std
cmp
shrl
outsb
or
popf
push
push
repz
pop
mov
aas
fmuls
mov
loop
iret
push
cmp
outsl
insl
mov
jp
sbb
ja
int3
repz
repz
or
dec
in
data16
pop
in
push
pushf
xor
inc
mov
xchg
jb
popa
sub
mov
fldt
icebp
jle
xor
iret
xor
dec
pushf
cmp
clc
inc
das
push
in
pusha
std
out
adc
push
scas
mov
test
adc
out
sbbb
push
insb
lcall
pop
testl
dec
or
inc
mov
aaa
ja
lret
pop
js
or
pusha
push
jmp
cwtl
cmpsl
mov
int
push
fisubrs
and
enter
xchg
sar
sub
subl
sti
and
imul
add
mov
xchg
imul
pusha
movsb
mov
fdivrl
jnp
mov
mov
mov
rclb
adc
sub
and
and
je
sub
adc
inc
cmp
int
or
mov
jp
arpl
mov
fnstcw
sub
aas
js
mov
adc
daa
sbbl
pop
daa
cmp
inc
mov
adc
daa
cs
test
sbb
rclb
jle
out
adc
popa
and
fldt
sub
cmp
inc
neg
loope
cld
sub
or
push
iret
decb
popa
inc
and
rcrb
mov
cmp
cmp
loope
jne
xchg
lods
rcrb
shlb
rclb
ret
shrl
orl
test
dec
ret
test
hlt
cli
cmc
mov
push
mov
push
jns
dec
lcall
cltd
xorl
push
icebp
les
mov
sub
mov
adc
or
pop
popa
dec
mov
loop
bound
xor
out
bound
mov
cltd
cmpsb
addr16
pop
aas
push
aad
aad
mov
test
mov
es
and
sub
cmp
ljmp
fnstcw
push
xchg
jns
outsl
cmp
aas
dec
enter
jae
test
pushf
leave
xchg
pop
sbb
std
jne
jae
jl
out
mov
cltd
or
mov
jl
or
mov
cwtl
test
push
push
test
adcb
dec
les
insl
sub
lods
ret
test
aam
push
adc
xchg
mov
xchg
mov
inc
dec
lods
xchg
fwait
test
in
cmpsb
cmp
xor
pop
int
je
stc
lcall
sti
and
outsl
sbb
into
jmp
out
cmp
xchg
dec
pop
xor
sbb
hlt
insb
mov
rcl
or
xor
xor
push
jne
pop
fildl
mov
je
and
inc
jecxz
cmp
jmp
cmp
adc
stos
cmp
ret
mov
mov
sbb
mov
xor
mov
sub
mov
cmp
mov
push
int
jo
insl
push
xor
shll
cltd
push
lea
and
stc
jmp
rcl
pop
mov
stc
shrl
leave
xor
xor
outsl
mov
or
mov
std
popf
add
stos
lahf
fldenv
adcb
push
jb
jp
pop
fdivl
xchg
ds
push
call
adc
pop
shlb
xchg
mov
movsl
dec
cs
ja
push
fbstp
movsl
mov
mov
and
or
jp
shl
test
shr
ds
es
lret
pop
adc
dec
repnz
and
aaa
dec
inc
xor
push
jno
push
lahf
icebp
clc
inc
std
stos
inc
fwait
or
mov
je
js
jae
enter
mov
cmp
or
imul
mov
mov
jno
mov
jl
jbe
dec
push
xor
pop
stc
dec
adc
in
filds
cmp
pop
clc
jae
mov
jb
les
dec
xorb
lcall
add
xchg
or
ds
mov
aaa
adc
xor
pop
push
xor
adc
cli
pop
xchg
adc
dec
loop
mov
clc
dec
pop
or
dec
test
pop
jmp
and
jno
dec
or
in
int
inc
fiadds
mov
push
dec
sub
rcl
sbb
jae
jg
add
scas
jge
rolb
push
mov
push
fucomp
xor
loopne
dec
pop
subb
and
add
pop
xor
je
and
cwtl
dec
in
enter
sbb
xor
sbb
inc
sub
lods
xor
outsl
jno
push
lcall
mov
out
lods
inc
shlb
les
out
fildl
xor
xor
dec
inc
imul
adc
aam
push
sub
cld
icebp
nop
rclb
pop
sub
rcl
cs
cwtl
mov
nop
nop
jae
js
push
and
inc
lods
fcoms
push
xlat
mov
or
add
outsb
xor
adc
imul
insl
mov
xor
fdivrs
pop
or
sbb
add
push
shll
scas
stos
sbb
out
inc
cmpsb
add
cltd
ljmp
aas
fsubl
lea
call
xor
ret
fcmovnu
dec
lahf
sub
rol
xchg
xchg
mov
ret
stos
repnz
cmp
push
clc
mov
arpl
insb
adc
sub
xor
push
insb
stos
add
pop
cmpsb
sbb
sar
mov
xchg
in
jge
xchg
in
jl
dec
mov
sbb
jno
adc
js
cmp
out
rcrl
mov
shrb
push
fdivrl
hlt
andb
sbb
pop
shll
cmp
cltd
test
insb
cmp
movsl
dec
paddusw
jb
aas
dec
mov
mov
out
mov
inc
pusha
nop
adc
adc
push
adc
jo
rolb
mov
into
mov
loop
imul
mov
mov
xor
int3
dec
fidivs
wbinvd
sbb
xlat
scas
repz
xchg
in
push
leave
adc
je
out
cmp
jnp
inc
leave
sbb
jmp
or
mov
push
xchg
mov
mov
mov
mov
clc
ret
insb
mov
std
sbb
or
add
call
pop
int3
xchg
jb
jge
mov
and
cmpsl
popa
or
pop
mov
cmpsl
clc
jp
xchg
test
cmp
clc
loope
ljmp
adc
inc
cwtl
shll
movsl
mov
cmp
and
sub
jle
aaa
mov
inc
mov
ja
pop
mov
inc
lea
xchg
mov
cmp
xchg
shrl
bound
jle
jbe
sub
pop
xchg
jle
xlat
add
inc
push
dec
ja
lcall
rorl
scas
outsl
inc
and
xchg
jecxz
mov
push
les
lcall
fld
and
sti
jo
push
mov
mov
mov
stc
or
sub
push
xchg
adc
jl
pop
sbb
or
push
stos
lcall
mov
stos
frstor
inc
sahf
lret
sbb
jmp
hlt
jecxz
xchg
sub
mov
gs
pop
dec
fucomip
adc
add
jg
pushf
mov
xor
push
xor
dec
and
or
adc
rcrl
rorl
jmp
add
arpl
sbb
daa
jo
rcll
push
add
sub
jmp
lcall
and
cltd
mov
pop
outsb
rolb
dec
xchg
sbb
pushf
mov
push
or
add
in
sar
leave
cli
mov
xchg
nop
and
pop
jecxz
aad
inc
arpl
add
lahf
mov
outsb
dec
push
rcrb
aad
xor
fnstcw
pusha
and
mov
shrb
icebp
adc
lcall
adc
mov
xchg
and
jle
xor
pop
mov
jnp
sub
adc
sahf
fidivrs
call
dec
test
addl
xor
cmp
shrl
arpl
pop
stc
adc
push
pusha
shl
inc
sbb
jecxz
cwtl
imul
out
jecxz
sbb
add
xchg
loopne
dec
cltd
sbb
mov
inc
lretw
bound
roll
push
in
out
mov
outsb
xchg
mov
lock
imul
js
insb
or
and
xchg
sbbb
test
loop
cmp
fisubl
test
sbbb
jmp
xchg
ja
es
add
hlt
fcmove
push
movb
iret
push
imul
push
sbb
fwait
and
sub
mov
int
sub
or
andl
add
pop
mov
cmp
xor
out
xchg
imul
sbb
popf
je
ret
jp
cmp
xchg
clc
outsl
xor
pop
xlat
fcomp
fxch
or
mov
and
cmpsl
idivl
inc
mov
dec
test
mov
nop
mov
mov
insl
addr16
inc
mov
shlb
fdivs
testl
fnsave
mov
ret
sbb
fstpt
aam
inc
add
jns
aaa
and
loope
jo
and
cmp
fisttps
shl
jae
push
xor
and
insl
mov
stos
cld
outsb
repnz
dec
mov
cmp
sub
adc
shlb
andl
pop
sub
cmp
into
ljmp
dec
cmp
outsb
dec
sahf
aas
fcompl
sbb
adc
adc
pusha
outsb
daa
mov
int3
mov
jne
jle
ds
insb
aam
jno
roll
rcrl
aas
bound
ds
popa
ljmp
shll
out
jge
mov
scas
push
int3
inc
ret
adc
inc
sub
dec
mov
jp
imul
lods
das
lret
mov
cmp
sbb
mov
lock
cmp
out
mov
addb
xor
leave
cmpsb
push
jl
inc
jae
addr16
adc
js
jno
mov
ret
imul
mov
mov
rcrb
es
jne
mov
push
jb
imul
gs
dec
mov
roll
dec
hlt
cmc
xchg
push
add
data16
data16
xlat
push
or
pop
stos
enter
aas
sub
rorl
xchg
xchg
rorb
jp
inc
popa
cmp
push
pop
xchg
inc
cmp
or
stos
lret
faddp
cmp
lods
in
xor
imul
pop
xchg
and
pop
sbb
outsb
mov
jns
out
xchg
adc
jo
or
packuswb
pop
je
mov
mov
gs
jle
pop
cli
pop
into
pop
cs
mov
adc
push
mov
add
sub
and
test
sbb
fs
push
adc
hlt
out
popa
outsl
jp
jl
cmp
pop
cli
and
inc
mov
push
les
popa
scas
xchg
pop
xchg
movsb
inc
push
cmp
int
add
dec
pop
mov
add
js
pushl
pop
push
cmc
lds
sub
pusha
xlat
nop
mov
jbe
add
mov
fidivs
in
sub
lea
iret
iret
scas
xchg
pop
dec
ljmp
stos
xchg
push
inc
out
insl
ja
and
lods
sbb
ds
sbb
dec
jb
push
xor
es
cmpsl
pop
scas
push
cmp
daa
mov
push
loope
lods
sub
test
xchg
cli
test
or
or
mov
scas
mov
rorl
jp
sbb
out
push
pop
lcall
mov
cmp
push
aas
aam
sahf
cmp
push
filds
jg
lds
adc
jns
and
jmp
scas
xchg
in
jmp
mov
jl
fstpt
shlb
pushf
mov
xorl
pop
pushf
mov
mov
inc
aas
and
movsl
sbb
sbb
mov
or
mov
push
je
arpl
imul
adc
mov
fistpl
loop
sub
xlat
inc
sar
pop
aad
lock
movsb
dec
xor
ss
es
push
sbb
and
push
sub
insb
in
sbb
lea
jnp
mov
dec
pop
hlt
stos
andb
jle
push
jno
dec
sti
es
mov
jnp
mov
addr16
sbb
test
aad
popf
jnp,pn
sub
fisubrl
xlat
mov
sub
int
lea
mov
enter
add
mov
js
dec
loope
adc
and
jno
popa
fcoms
or
js
dec
loope
adc
and
jno
popa
fcoms
or
js
dec
loopne
adc
mov
clc
jne
push
fmull
or
sbb
push
popa
cwtl
adc
and
es
leave
xchg
mov
sub
movl
movl
movl
movl
cmpl
jne
pushl
call
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
jno
cmp
je
or
imul
or
push
mov
pusha
cmp
cmp
imul
rorb
test
xor
jmp
cli
inc
lret
jo
pusha
xor
add
push
lock
loopne
adc
dec
les
mov
mov
fdivrl
lock
jecxz
lds
xchg
js
mov
cld
inc
imul
flds
xor
sub
or
mov
add
iret
xchg
xor
daa
enter
cmpb
inc
fldenv
popf
jp
pop
sub
test
ss
mov
lods
sti
sbb
nop
testb
shlb
sar
mov
movsl
outsb
inc
test
mov
les
dec
outsl
lods
cmp
das
pop
mov
inc
adc
inc
add
push
inc
sbb
or
cmp
lahf
lock
stos
jp
imul
fildll
inc
jmp
sub
lahf
jmp
cmp
jnp
popa
rorb
loopne
adc
and
push
jecxz
lret
jo
es
nop
pop
stc
outsb
icebp
jg
seta
mov
xchg
ss
fbld
sbb
arpl
push
xchg
pop
scas
add
in
outsb
clc
sbb
pop
xchg
adc
into
test
push
out
jb
xor
rorl
shrl
sbb
adc
jnp
dec
lock
loopne
adc
and
push
sti
inc
lret
jo
pusha
sub
sbb
dec
lock
loopne
adc
and
push
sti
inc
lret
jo
pusha
sub
jae
inc
and
jne
test
ja
ljmp
loopne
in
popa
push
and
dec
jno
inc
int
sub
and
clc
cltd
push
pop
movsl
call
into
jb
nop
scas
adc
pop
xor
jmp
cmp
std
mov
inc
pop
push
loop
cmp
ja
sub
test
add
imul
add
pushf
bound
movsl
cli
xchg
flds
orb
sahf
sbbl
fadds
cmc
or
or
mov
loop
mov
xchg
xor
sbb
sbb
or
xlat
push
push
cmc
es
call
loop
cwtl
sub
push
sti
pop
inc
leave
fistps
loop
loope
xor
outsb
jg
gs
mov
jnp
xchg
imul
jp
mov
or
xchg
sbb
cmp
sbb
inc
dec
icebp
aaa
xchg
lret
int3
pop
cwtl
insl
mov
jp
mov
add
test
in
out
pop
in
je
fwait
stos
leave
les
mov
push
jbe
mov
add
inc
lea
push
dec
or
jnp
inc
pop
pusha
mov
cmp
pop
enter
pop
mov
ja
push
jle
stos
push
mov
adc
adc
loope
sub
addl
sub
mov
dec
push
sub
outsl
mov
jns
cmp
cwtl
inc
adcl
mov
dec
nop
push
fistps
push
aaa
and
negb
inc
imul
mov
dec
push
mov
sbb
mov
imul
push
add
popa
fisttpl
fadd
inc
ljmp
repnz
mov
gs
adc
icebp
inc
pop
aam
mov
out
mov
ss
mov
mov
pop
cmpsl
jb
and
sub
jl
shrb
cmc
sti
push
test
scas
cltd
xchg
push
mov
pop
inc
lahf
push
test
dec
or
jle
cmp
xor
sub
mov
mov
cld
cmpsb
cmpsb
and
dec
sbb
xlat
aad
repz
loope
cltd
sbb
lcall
nop
lock
test
xchg
mov
push
or
outsb
adc
imull
icebp
push
push
out
mov
in
nop
inc
pop
xor
sub
pop
mov
pushf
xchg
hlt
sbb
pop
ffreep
add
cmpsb
lahf
ljmp
mov
push
call
inc
movsb
pop
lods
in
cld
cmp
xchg
imull
ret
test
jl
std
adc
sub
push
xchg
repnz
in
outsb
loope
xchg
lcall
cs
xor
movsl
fwait
mov
ret
cmp
xchg
ss
pop
lahf
sti
adc
mov
fwait
movsl
call
jbe
movsb
fists
inc
aaa
repnz
adc
clc
mov
sbb
sbbl
pop
loop
popa
dec
mov
loop
or
cmp
dec
pusha
lret
mov
jg
cmc
adc
jmp
jb
mov
or
cmp
add
mov
or
int
or
cmp
cli
fs
and
jge
popa
push
inc
ret
test
filds
shl
add
in
cmp
jmp
mov
and
and
add
push
pop
fdiv
dec
mov
mov
imul
mov
or
push
xchg
out
in
xchg
xor
sahf
jle
add
in
dec
daa
mov
push
or
mov
and
lahf
mov
and
xchg
incb
or
dec
or
andb
dec
mov
jl
jno
sub
call
inc
imul
mov
mov
mov
or
sub
sahf
push
xchg
test
add
jge
xlat
rorl
scas
pop
cmp
les
mov
sbb
adc
lods
and
pop
mov
sbb
pop
movsl
fidivrl
pop
clc
and
and
mov
ljmp
cmpsl
cmpl
xchg
sbbb
xlat
mov
jbe
mov
sbb
fldt
xor
test
cmpl
push
ret
xor
mov
pop
addr16
and
sbb
xchg
sub
les
dec
mov
mov
push
andb
pop
dec
test
pop
add
rcr
pop
test
daa
lods
nop
cmp
xchg
jp
in
ljmp
mov
fistpll
in
scas
mov
mov
lcall
pop
in
mov
and
inc
cld
loop
sbb
push
inc
push
push
flds
ljmp
xor
and
pop
dec
popa
and
dec
movsl
shlb
nop
mov
outsl
ljmp
push
mov
rorl
js
push
xor
add
dec
sbb
test
mov
outsl
push
popf
sub
lods
jo
mov
inc
aam
sub
adc
push
iret
repz
and
pop
or
sbbl
orl
shlb
xchg
adcl
loope
shll
out
test
xchg
fs
pop
xor
xor
ss
push
out
sub
sahf
js
lock
lds
jb
jl
pop
fwait
sub
stos
rep
les
mov
popf
xchg
adc
cmpsl
xor
add
inc
popf
sub
xchg
hlt
repnz
mov
pop
and
in
fs
out
xchg
daa
lea
imul
cltd
pop
fs
data16
xor
hlt
mov
xor
bound
movsb
cltd
repz
push
loop
insb
xor
jmp
sahf
jmp
lret
sbb
pop
mov
jno
add
js
xor
add
jae
out
fistpll
jb
out
adc
ja
fistl
idivb
mov
cmp
sbb
icebp
dec
fs
fcoml
push
mov
push
mov
cmp
sub
sub
push
popf
jecxz
xchg
dec
xor
push
mov
mov
pop
xchg
xlat
push
addr16
xor
data16
loope
mov
arpl
ret
cs
jge
imul
mov
pop
push
arpl
mov
push
dec
xor
mov
xchg
push
xchg
pop
shll
mov
xchg
cmp
rcrl
pusha
jno
or
mov
test
stos
arpl
xor
push
cwtl
clc
sti
mov
out
iret
add
mov
test
aam
test
mov
clc
jnp
fcoml
jl
cwtl
cmp
cs
mov
sub
lods
mov
and
mov
imul
nop
mov
inc
sub
cmp
outsb
enter
ja
lcall
dec
cs
mov
filds
out
bnd
ljmp
dec
cmp
cltd
in
push
and
cmpsb
sahf
sbb
mov
push
or
inc
inc
jno
cmp
out
andl
call
iret
jge
lea
or
pop
pop
insl
inc
xor
hlt
filds
popa
push
in
int3
test
fcompl
cmp
xchg
add
outsl
pop
lock
xchg
sub
out
push
and
jo
add
adc
xchg
or
lret
std
jbe
mov
pushf
in
je
pop
nop
fimull
jp
test
add
mov
xor
shl
xchg
shlb
mov
into
test
jl
sti
pushf
lods
addl
pusha
addb
mov
jae
das
sub
cmpsl
adc
push
fadd
mov
pop
lea
or
mov
jne
or
sub
popa
cmp
sahf
sbb
fstl
xchg
pop
es
inc
xor
mov
enter
cmp
mov
sarl
aam
jle
ret
lock
test
cmpsl
jmp
lret
lahf
pop
sub
mov
rorb
xor
sbb
xchg
jmp
inc
fnstenv
ja
dec
into
pop
sub
in
inc
into
cmp
cmp
movsl
loop
fnstsw
orb
add
fildl
cpuid
call
jmp
out
clc
mov
sbb
xchg
jnp
test
cmp
add
sub
push
cwtl
test
shll
cs
mov
rorb
or
das
lret
add
test
aad
repz
xor
push
dec
pop
repz
ficoml
andl
stos
push
fdivl
mov
inc
jbe
xchg
cmc
adc
movsb
mov
xorl
mov
sub
pop
sbb
mov
out
xchg
outsl
sub
dec
jl
movsl
dec
jge
inc
xlat
sub
ds
in
aaa
popf
sub
shr
mov
cmp
pop
jnp
sub
and
push
mov
outsl
sub
mov
pop
inc
outsb
stos
ljmp
out
mov
scas
outsb
pop
dec
and
sarl
adc
fdivrs
fidivs
sti
out
adc
js
or
js
or
in
idivl
sub
mov
popa
cmp
adc
mov
lock
push
fstpt
and
sar
mov
mov
ljmp
clc
jno
mov
inc
dec
cwtl
stos
pushf
inc
pushf
mov
push
xchg
mov
negb
jle
inc
or
ficoml
push
test
aam
test
aad
mov
test
push
sub
ja
sbb
es
arpl
leave
mov
sbb
aas
test
xor
cld
or
les
cmp
sbb
and
adc
loopne
in
jno
sbb
push
js
cmp
mov
daa
xchg
xor
sub
ret
jnp
jge
and
inc
add
push
cmp
adc
jg
xchg
outsl
sbbl
leave
lcall
divps
or
ja
xor
mov
cmpl
xor
dec
sti
pop
push
jg
xor
stos
lods
aas
jle
sub
push
out
cmpsb
jo
mov
std
test
push
iret
sbb
out
jg
js
fwait
iret
aas
inc
pop
push
subl
insl
mov
pop
xchg
xor
add
push
push
cltd
lock
rolb
xchg
xor
xchg
in
clc
cmp
std
fsubrs
sbb
jo
addl
xchg
xorl
or
lahf
fcmovnbe
mulb
sub
in
mov
push
xchg
xor
loopne
dec
xor
rcr
lret
fsubs
dec
jecxz
addr16
bswap
dec
aad
or
dec
adc
cmp
sar
mov
inc
jmp
outsb
arpl
dec
xchg
sub
pop
mov
inc
scas
jecxz
inc
ficoms
jbe
cmp
push
cmp
jmp
mov
mov
js
out
pop
cmp
daa
jno
lret
arpl
mov
addl
lds
xchg
shrb
lds
in
shl
jns
mov
stc
pop
xchg
out
adc
dec
js
andb
ret
mov
jne
pop
pop
xor
mov
add
mov
orl
test
xlat
xor
jp
add
cmp
test
loop
xchg
out
pop
sbb
dec
outsb
xchg
fdivr
sbb
fidivrl
push
movsl
add
sti
inc
out
push
shr
push
mov
and
pop
push
xchg
sbb
sbb
inc
loop
into
xchg
cmpsb
and
imul
pop
outsb
out
nop
int
xlat
rorb
adc
mov
int
inc
int3
mov
push
out
xor
add
test
subb
cwtl
jns
insb
fldenv
imull
fdivp
xor
cmp
fwait
test
dec
inc
rorl
pop
daa
dec
mov
sti
ds
shl
roll
add
cmpl
pop
fsubrs
jp
push
mov
add
mov
addl
pushf
cld
repnz
lods
cli
inc
pop
or
jne
div
xor
mov
sbb
loop
repz
adc
xchg
jle
mov
pop
mov
jb
into
mov
in
pushf
loope
outsl
or
mov
xlat
xchg
or
adc
inc
jns
lahf
aas
pop
jecxz
push
cld
cmpsb
int
cmp
adc
xchg
sahf
inc
pushf
out
xor
lcall
out
lods
rcrl
dec
movsb
mov
mov
push
cwtl
test
and
movsl
loop
inc
in
ret
rclb
cmpsb
add
enter
sub
ret
popf
in
add
adc
adc
jae
aas
inc
pop
mov
fistpl
push
lcall
mov
push
dec
cmp
push
dec
mov
adc
imul
push
fiadds
xor
add
nop
out
orb
push
lret
xlat
push
ds
mov
add
sbb
jo
imul
push
adc
cli
add
inc
or
push
dec
pop
sbb
mov
inc
jns
je
insb
jecxz
add
xor
sub
fwait
stos
pop
enter
out
leave
pop
jg
fisubrs
mov
imulb
xor
cmp
stos
xchg
or
in
testl
das
jb
shlb
or
jp
das
es
insl
orb
loopne
fstpt
push
rol
loope
aam
scas
pop
insb
push
and
out
popa
fbstp
enter
popf
or
in
sub
lods
mov
jo
inc
add
push
mov
in
mov
cmp
ffreep
int3
mov
dec
jge
movsl
addr16
cmp
popf
aas
xchg
mov
push
int3
add
arpl
cltd
push
movsl
into
out
lret
pop
sbb
cltd
ss
repnz
push
sbb
and
xor
inc
adc
xchg
dec
jbe
mov
pop
and
scas
mov
mov
adc
sarl
add
sbb
jbe
push
fwait
add
sti
shrb
aas
lcall
push
adc
je
xchg
sbb
sbb
nop
lods
call
pop
std
daa
cmovp
imul
or
mov
mov
xchg
lock
int
mov
mov
mov
fwait
push
movsl
adc
repnz
sub
xor
xor
mov
mov
mov
jbe
out
fldcw
mov
adc
add
inc
mov
clc
pop
outsl
jbe
dec
out
adc
aam
push
mov
je
or
adc
mov
mov
add
test
imulb
inc
aad
sub
gs
pusha
jbe
push
popl
xchg
lret
pusha
rcr
xor
addr16
sbb
sbb
test
push
push
dec
ja
insl
xor
inc
adc
movb
sahf
pop
pop
xchg
pop
dec
mov
bound
cs
int
fadd
jmp
inc
or
push
pusha
mov
and
pusha
popa
add
and
stos
pop
jecxz
mov
xor
inc
lcall
outsb
push
jge
xchg
jge
lcall
push
lahf
xchg
push
jne
test
adc
clc
dec
cmp
dec
xchg
dec
outsl
fdivl
mov
xor
rcrb
cmp
int3
cmp
push
and
mov
mov
mov
xor
movsl
jno
jmp
xchg
das
pop
inc
test
addr16
push
cld
and
aaa
xchg
pop
fldcw
xlat
push
mov
in
std
test
push
push
add
imul
xchg
cltd
ss
push
popw
popf
cmc
mov
cwtl
or
jae
lret
adc
lock
movsb
xchg
hlt
out
jl
cmpsl
sbb
mov
push
pop
xor
xchg
cs
pusha
in
js
xor
pop
lret
mov
push
xor
out
das
pop
movsl
jg
nop
shrl
repnz
jae
fimull
negb
push
lods
jae
bound
das
adc
or
jl
lock
sbb
mov
and
fbstp
test
scas
mov
jae
stc
popf
pusha
test
push
ret
mov
bound
dec
fcmovnb
or
stos
xchg
push
mov
in
data16
jmp
and
or
jge
jno
jge
jp
mov
sub
jg
sub
jno
jae
sub
and
repnz
insl
fisttpl
pop
mov
push
and
daa
das
mov
add
fwait
dec
jno
addr16
push
cwtl
in
mulb
loopne
fimuls
sub
jns
shl
shlb
test
cld
lret
sbb
cli
lcall
adc
mov
mov
add
xchg
je
cmpb
pop
or
push
mov
add
jbe
push
fists
ja
mov
iret
fsubs
cmp
push
sarb
fwait
mov
sar
mov
ja
jb
mov
lods
pop
dec
lods
shrb
xlat
int3
xchg
add
je
lock
mov
or
sbb
push
adc
enter
addr16
inc
mov
or
pop
cmp
adc
scas
ftst
inc
dec
cvtpi2ps
jo
pop
sbb
scas
mov
cltd
jmp
iret
push
xchg
sub
call
insb
xor
dec
inc
push
icebp
cli
imul
cmpb
xchg
popf
dec
jmp
pop
push
frndint
test
and
shll
cmp
mov
sub
sub
or
sbbb
into
movsl
lret
and
sub
mov
iret
inc
test
cmpl
fstpt
cli
sub
dec
daa
rcrb
jg
mov
pop
fnstenv
push
sahf
xorl
jbe
and
cmp
sbb
or
shrb
jns
push
or
sub
xor
dec
into
daa
jae
mov
lods
push
cs
rcll
push
repnz
xor
or
xchg
pop
hlt
cld
inc
lock
fdivrs
addl
aas
mov
mov
hlt
dec
test
cmpsl
dec
xor
sbb
popa
sbb
pop
jns
inc
sbb
cmp
mov
cltd
jae
aaa
and
sub
scas
in
imul
ret
mov
inc
push
sub
into
push
pop
adc
add
pop
int
adc
cs
mov
les
xlat
test
push
out
scas
adc
cmp
or
mov
cli
dec
loop
jmp
mov
jne
add
xor
in
arpl
sahf
out
stos
cli
mov
sub
lods
fidivl
test
xor
das
mov
jno
jo
mov
and
out
adc
lcall
out
add
enter
loope
pop
clc
ja
repnz
sarb
ret
jp
add
push
shrl
fisttpl
pop
addl
pop
inc
add
push
cmpsb
jo
or
iret
fstl
push
and
aad
shlb
push
dec
scas
sub
push
inc
pushf
pop
push
out
inc
mov
push
fcomp
outsb
nop
mov
jmp
aas
push
sbb
lods
cmpsl
stos
push
scas
test
pop
cwtl
mov
adc
setae
xlat
dec
pusha
adc
fwait
dec
loop
inc
xchg
jmp
setb
orb
push
add
mov
je
fldcw
je
hlt
pop
lock
push
pop
scas
mov
xchg
ss
test
jnp
xchg
xlat
das
push
data16
mov
in
addr16
xchg
cmp
insb
xchg
test
xchg
jmp
out
mov
gs
mov
jg
mov
leave
mov
in
pop
jecxz
mov
sub
mov
and
cmc
in
mov
and
sub
xor
pusha
fwait
add
arpl
add
out
sub
fcomps
jge
out
aam
jno
cmpsb
in
loopne
stos
push
mov
bound
fidivs
xor
add
cltd
iret
popa
pop
je
lahf
sbb
xlat
sbb
mov
imul
mov
push
movsb
stos
adc
es
sbb
in
jg
cmp
jge
pop
fsubr
loopne
ret
jmp
push
cmp
loope
mov
lret
sbb
cmp
cmp
idivl
aaa
sbb
fnstsw
rep
in
inc
add
xor
shr
jno
and
in
js
loop
inc
rcll
bswap
push
jno
orb
jg
jns
ret
repnz
jo
cmpsb
push
sub
xchg
pop
dec
mov
mov
jmp
push
in
and
mov
loop
test
sbb
negl
rolb
push
push
adc
add
movsb
shl
aas
fwait
out
pusha
sbb
mov
mov
in
and
fmul
mov
xor
xchg
jno
adc
dec
xchg
sub
cmp
loope
ds
shll
jle
sbb
push
insb
sbb
cmp
ret
mov
adc
xor
faddl
dec
pop
add
sti
rclb
pop
stos
xlat
das
mov
mov
or
jnp
dec
lock
loopne
adc
and
push
sti
inc
lret
jo
pusha
sub
sbb
dec
lock
loopne
adc
and
push
sti
inc
lret
jo
pusha
sub
sbb
dec
lock
loopne
adc
and
push
incl
jo
pusha
pop
nop
jo
imul
ror
push
adc
xor
mov
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
shl
add
cld
repz
and
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
lahf
hlt
add
mov
add
test
add
jl
add
je
add
insb
hlt
add
fs
add
pop
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
hlt
add
int3
hlt
add
loopne
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
pop
cmc
add
js
add
mov
inc
add
rorl
jmp
or
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
hlt
cmc
add
cld
cmc
add
add
add
or
add
adc
add
sbb
add
and
add
aaa
testb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
push
testb
pop
testb
push
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
adc
add
cmp
add
pusha
testl
push
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
fcomip
add
int3
testl
add
add
lods
testl
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
clc
testl
add
add
and
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
cwtl
clc
add
mov
clc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
xor
add
cmp
add
inc
stc
add
dec
stc
add
push
stc
add
pop
stc
add
fs
add
ja
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
nop
stc
add
cwtl
stc
add
test
add
mov
inc
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
