jne
dec
add
add
insb
add
add
je
add
add
jb
popa
add
add
outsb
add
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
popa
add
add
outsb
add
add
je
imul
push
add
je
insb
add
add
dec
add
je
push
add
popa
add
imul
add
add
add
jne
je
je
outsl
add
inc
add
add
jb
outsb
add
je
add
popa
add
add
add
outsb
add
outsl
add
imul
outsl
add
add
add
dec
add
data16
push
add
js
je
add
add
inc
add
je
je
outsl
add
dec
add
add
je
add
inc
add
je
je
outsl
add
inc
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
dec
add
insb
add
add
je
add
dec
add
popa
add
je
imul
push
add
je
insb
add
push
add
js
je
add
inc
add
je
je
outsl
add
push
add
js
je
add
add
inc
add
popa
add
push
add
js
je
add
add
inc
add
je
je
outsl
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
inc
add
arpl
add
add
add
imul
add
je
push
add
js
je
add
dec
add
insb
add
add
je
add
inc
add
jo
push
add
jb
imul
add
popa
add
add
add
add
outsb
add
arpl
je
imul
jae
repz
sub
mov
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
movl
mov
add
and
mov
movb
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
stos
add
add
xchg
add
add
add
mov
add
add
int3
add
add
sbb
xchg
add
add
loope
or
aas
add
add
add
sbb
add
add
add
add
add
sbb
add
aas
add
add
add
add
add
aas
add
cmpsb
add
add
add
add
add
add
add
add
add
add
mov
pop
add
add
push
xor
lcall
add
aas
add
add
add
add
pop
add
add
add
add
add
insb
add
add
add
add
mov
add
add
cmc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
pop
add
aas
add
add
add
add
add
add
add
add
add
add
add
add
sub
aas
add
add
add
push
add
add
add
add
add
add
aas
add
add
add
add
add
add
add
add
pop
add
add
add
add
addb
fiadds
and
aas
add
add
add
aas
add
push
out
add
aas
add
add
add
xchg
add
add
add
add
add
xor
add
add
add
add
add
pop
add
add
add
add
add
add
add
daa
add
add
add
add
add
add
add
add
add
movl
addb
add
add
add
add
add
add
add
add
add
jl
pop
add
add
add
add
add
add
add
dec
add
add
pop
add
add
add
addb
add
addb
inc
add
popf
add
add
add
mov
add
add
add
stos
add
xor
movl
aas
add
cmp
mov
cmc
add
mov
add
aas
add
add
add
add
movsb
add
add
add
add
dec
add
add
add
add
push
add
add
add
add
add
mov
add
add
add
addb
jns
inc
add
add
sbb
and
int3
add
add
add
add
add
into
add
fiadds
int3
add
add
add
add
jg
sbb
fiadds
dec
add
scas
stc
sub
lret
pop
jl
cmp
xlat
cld
xor
xor
push
fxtract
sub
hlt
xor
mov
test
mov
adc
mov
inc
or
mov
inc
push
int
fcoms
cld
imul
out
adc
xchg
test
mov
data16
ret
push
xchg
cmc
ret
test
xchg
xchg
jge
mov
neg
pop
orb
xchg
gs
dec
adc
pop
std
dec
xchg
pop
test
push
jb
xchg
insb
jecxz
push
push
and
inc
inc
and
inc
cmpsl
in
dec
pop
xor
add
popf
stc
cli
push
sbb
dec
pusha
push
mov
mov
mov
repz
push
xor
rclb
inc
scas
pop
xorb
jbe
jge
ja
outsl
inc
pop
out
or
xor
faddl
les
xor
sarl
pushl
push
pop
pop
lcall
jo
cli
jae
mov
js
data16
call
sbb
sub
lret
and
push
pop
ljmp
test
lods
inc
xchg
nop
adc
mov
inc
clc
cwtl
sbb
cmp
push
sbb
pop
test
mov
gs
setp
and
lret
add
mov
pop
xchg
sbb
dec
dec
bound
lea
or
xchg
into
lahf
pusha
ficoms
addb
cli
xor
int3
mov
scas
mov
imul
pusha
cmpsb
ds
jne
lret
or
fdivr
mov
cld
dec
sarl
nop
jb
cwtl
shlb
ret
add
and
insl
loop
sbb
insb
fidivrs
decl
jmp
addr16
cmp
stos
pusha
xor
popf
mov
xorl
jp
pop
pop
jle
ror
push
push
pop
movsb
lahf
add
dec
mov
stc
cmp
scas
stos
mov
aad
jmp
out
sti
xor
mov
xchg
xlat
and
sub
or
cli
imul
pop
dec
cmp
nop
imul
cmp
scas
dec
repz
jb
test
cmpl
mov
in
mov
into
dec
inc
inc
inc
ds
jp
fdivrl
das
fsubs
sbb
les
or
dec
test
sub
xor
adc
mov
sub
cmp
cs
pop
inc
out
sub
fsubrp
adc
push
jo
int3
sbb
inc
pop
mov
jge
in
movsb
je
add
subl
xchg
stc
adc
and
xlat
ja
and
adc
mov
add
add
imul
lahf
jmp
mov
out
jae
sbb
das
jbe
aas
mov
add
add
add
add
rolb
add
add
push
mov
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
push
call
mov
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
pushl
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
sub
cmp
or
sbb
bound
push
cmpsl
test
mov
gs
sti
pop
lret
daa
sub
cmp
or
sbb
imul
cmpsl
stos
push
mov
addr16
cli
xlat
lret
aaa
sub
cmp
or
sbb
imul
mov
sti
add
addr16
mov
popa
mov
pop
xlat
pop
scas
or
sub
mov
fcoml
xor
jo
and
pushf
jl
mov
xchg
jg
sbb
jnp
mov
mov
pop
xlat
ss
jne
fs
aaa
mov
sub
popa
test
cmpl
test
dec
adc
lret
push
loop
pop
jo
dec
leave
sub
sbb
add
pop
pop
pop
pop
ss
mov
mov
mov
pop
xchg
mov
jnp
out
cmpsb
stos
fidivl
addr16
aaa
fcmovnu
pop
fadd
daa
xor
in
inc
lods
lock
lea
in
push
push
jnp
icebp
ja
inc
test
or
fnstenv
call
out
std
imul
mov
mov
jle
psubq
lret
aaa
fildl
mov
dec
negb
push
rcll
fcmovnu
lret
fidivrs
clc
and
or
mov
dec
pop
scas
dec
push
in
mov
rcrl
lret
fldcw
fsubl
testb
and
gs
push
dec
xchg
cmp
cs
jnp
dec
mov
cmpsl
stos
push
mov
addr16
sti
pop
lret
aaa
sub
cmp
or
sbb
imul
cmpsl
stos
push
mov
addr16
sti
pop
lret
aaa
sub
pop
inc
xchg
fs
mov
push
in
mov
jae
xchg
into
cmp
adc
dec
sbb
out
fdivrs
in
imul
lods
pop
sub
icebp
mov
cmovns
lret
roll
inc
in
fsubr
hlt
lds
add
push
pop
ja
fsubrl
dec
pop
sub
mov
sub
push
push
sub
jg
fmul
out
mov
push
aad
mov
stc
movsb
rorb
xchg
cmpsl
and
push
mov
dec
js
add
sbb
iret
add
push
iret
and
xor
pop
jmp
repnz
adc
or
push
or
stos
jns
cmpsb
nop
push
xchg
pop
fs
inc
adc
jp
lret
ljmp
ss
sbb
xchg
ljmp
cmp
or
dec
push
daa
les
nop
add
mov
jnp
ret
out
cmc
pop
push
or
imul
fsubrl
push
push
out
cmc
push
clc
add
mov
icebp
enter
pop
sbb
sahf
cmpsb
mov
js
sbb
pusha
sbb
sbb
jb
jae
xchg
lds
sbb
movsl
dec
cmp
mov
les
jmp
testb
lock
mov
xor
ja
and
add
push
cwtl
sbb
pop
xchg
pusha
xchg
push
enter
lea
xchg
cmpsl
pop
and
pop
out
imul
inc
addr16
and
xor
sub
push
clc
mov
jae
inc
xchg
mov
mov
or
dec
pop
mov
ljmp
mov
arpl
push
mov
daa
in
pop
andb
add
push
sub
inc
push
dec
test
mov
mov
sbb
sub
outsb
mov
and
push
repz
xchg
inc
outsb
push
sub
fstpt
rcrl
repnz
push
sub
mov
gs
push
pop
shlb
in
nop
add
ror
cmc
mov
sahf
cwtl
out
push
pop
sub
fdivs
jle
cmpsl
imul
fiaddl
push
insb
lds
jns
ja
sbb
dec
inc
leave
mov
cli
jg
push
sahf
cmp
call
ljmp
mulb
cltd
movsb
ljmp
rcrl
dec
imul
sahf
jg
inc
xor
lret
push
add
xchg
sub
mov
adc
xlat
push
cmp
xor
push
mov
stc
shl
sub
push
imul
mov
movsl
in
cmp
inc
jecxz
daa
lods
aam
mov
xor
out
ljmp
stos
push
pushf
push
adc
aad
push
add
adc
adc
arpl
cld
in
cli
jno
cmp
adc
and
dec
mov
into
and
cmpsl
loop
mov
mov
mov
mov
add
sub
xchg
lret
ficomps
loop
pop
pop
inc
test
les
shrl
push
loopne
stc
out
push
mov
mov
das
addb
sbb
jp
outsl
jg
pop
arpl
jecxz
mov
cmp
or
fxch
jecxz
jmp
pop
inc
jb
adcl
ja
in
add
mov
jne
ret
mov
test
dec
es
adc
push
mov
in
loope
xor
dec
lock
sub
lock
mov
jle
fisttps
jbe
mov
filds
ret
push
movsb
or
xor
push
xor
imul
sahf
push
call
in
ljmp
jbe
jge
xor
rcll
mov
push
cs
fsubl
shl
ss
cli
pop
sub
pop
leave
mov
shlb
test
mov
inc
aad
sub
fs
test
pop
inc
sub
and
loopne
vdivpd
enter
jb
push
inc
cmpsb
cmp
ret
mov
sarl
inc
out
sbb
loope
fsubrl
jb
mov
insb
movsl
and
adc
out
ljmp
popa
nop
mov
mov
pop
addb
fiaddl
and
dec
andl
cmpsl
push
jae
adc
in
movsb
adc
pop
pop
addr16
xorl
inc
xchg
leave
fwait
jno
mov
sbb
mov
xchg
xor
cmp
mov
pop
and
mov
adc
push
dec
pusha
in
in
scas
jae
mov
jo
fninit
push
jmp
cmp
mov
mov
ljmp
and
push
fisttpll
sahf
movsl
sub
shlb
es
sbb
dec
adc
in
sbb
daa
xor
mov
cmpsb
dec
sbb
arpl
leave
cmpsl
test
adc
mov
xchg
xchg
popf
cli
dec
jb
and
rcrl
loop
sbb
xchg
mov
pop
inc
popa
cmpsb
xchg
jo
in
jb
pop
mov
popf
in
repnz
sub
sbb
fs
push
mov
test
fs
imul
stc
jns
adc
pop
inc
in
ficompl
xchg
xor
pop
push
loopne
in
mov
idivb
aaa
pop
mov
aas
pop
cli
cmc
lea
jmp
pmulhw
testl
mov
stos
mov
sbb
aam
loop
hlt
mov
cwtl
pop
andl
xchg
xchg
loop
lods
call
fnstenv
mov
addl
jl
in
xor
mov
int
xor
sbb
js
div
test
pop
sub
push
cmp
push
pop
add
mov
inc
lds
ljmp
pop
enter
stc
add
out
and
mov
cmp
and
fnstsw
xor
stc
rcl
and
shr
leave
mov
fwait
out
inc
inc
faddl
hlt
movsb
imul
rol
sarl
mov
mov
iret
add
sbb
je
dec
pop
das
or
xchg
das
test
sbbb
les
xor
xor
leave
dec
hlt
adc
jae
push
xchg
outsb
lea
fisttpll
xchg
mov
insl
xor
sahf
jge
jae
lret
mov
push
jbe
or
mov
sti
cmpsb
stc
mov
dec
and
jne
es
je
call
ror
popf
ficoms
imul
sbb
ds
popf
push
pop
inc
sti
adc
inc
loopne
sarb
cmp
sarb
sar
aaa
sub
sbb
jno
jnp
push
shlb
les
shrb
mov
push
mov
stos
xor
mov
cmc
iret
or
push
pop
mov
push
xchg
sar
into
subl
lea
sbb
nop
sbb
fmull
inc
setl
xor
mull
add
mov
xorl
dec
dec
fisttps
ret
pop
jg
subl
std
lahf
nop
pop
dec
js
and
inc
pop
dec
ljmp
mov
stos
popf
pop
shll
idivb
lds
ret
jl
cmc
cwtl
lea
aam
in
push
mov
mov
jno
add
adc
mov
dec
adc
push
in
popa
mov
xchg
jmp
outsb
xor
push
mov
and
leave
adc
xor
mov
leave
push
mov
je
xor
push
cli
push
lods
js
mov
imul
cmpsl
hlt
adc
insb
pop
cmp
jns
xor
pop
addr16
mov
mov
divb
cmp
movsb
inc
add
pop
hlt
dec
in
jae
lods
subb
les
inc
outsb
cmp
or
inc
ror
cmp
aaa
test
adc
lret
mov
jae
and
jle
pop
or
arpl
aas
cmp
cmp
sub
jge
push
daa
and
stos
je
cmp
in
insl
push
or
and
pushf
scas
cmc
aaa
inc
addl
jbe
push
mov
subb
cmp
pop
cmp
hlt
jno
xlat
dec
mov
gs
jne
jge
mov
cli
pop
jbe
push
cmp
and
andl
arpl
aas
mov
push
fwait
push
cmpsl
aas
int
jb
push
fs
adcb
loope
jecxz
test
pop
out
add
and
cltd
pop
mov
jns
dec
mov
mov
sbb
in
mov
cmp
pop
jl
enter
movb
or
sarb
pop
scas
and
xorb
jle
and
stos
ja
clc
cltd
repz
sub
pop
sbb
cmpb
aam
cwtl
idivb
cmc
and
bswap
cltd
mov
in
mov
push
sbb
xchg
sub
test
mov
popa
imul
das
daa
lret
jl
mov
sahf
xchg
decl
inc
into
pop
int3
outsb
lahf
pop
push
rolb
jle
sub
xor
xor
sbb
inc
sub
xchg
pusha
mov
push
adc
inc
jnp
in
aad
xor
repz
sub
in
pop
push
das
xor
outsl
insb
arpl
ss
and
jae
cmpsl
pop
aad
add
inc
push
mov
mov
pushf
or
data16
mov
int
lret
jno
call
jbe
cli
gs
dec
mov
inc
lock
aam
scas
pop
out
and
sbb
mov
xor
sbb
push
mov
imul
fnstenv
sbb
popa
into
sbb
and
ljmp
arpl
movsb
xchg
fiaddl
pop
ljmp
imul
inc
sub
sub
popa
adc
inc
and
int
add
leave
std
push
xchg
pop
addb
and
adc
loopne
or
scas
mov
push
jns
inc
jne
mov
rcrl
adc
rorl
ret
sub
in
dec
stos
mov
cmp
sbb
insb
inc
cli
jb
out
xchg
pop
stos
in
xchg
lret
out
jl
test
mov
push
cmpsb
mov
insb
xchg
or
hlt
fcomip
fcmovne
xchg
andl
dec
mov
test
movsl
inc
popf
into
dec
cmp
mov
or
test
or
adc
cltd
jg
fsubrs
jl
loop
loop
arpl
mov
push
bound
xor
stos
pushf
lahf
adc
jp
sbb
out
mov
testl
les
int3
pop
icebp
icebp
adc
bound
sub
add
rclb
fists
cmp
inc
ret
aas
lds
push
ss
push
sbb
sbb
cmpsl
adc
adc
mov
and
test
inc
out
in
cmp
mov
mov
ret
mov
mov
pop
push
cmpsb
pop
cli
out
mov
popfw
ret
cmpsb
and
das
pushf
aas
and
cwtl
inc
stc
pop
mov
test
iret
mov
mov
cltd
add
push
fsubr
fcoms
mov
push
push
mov
sahf
lcall
hlt
loop
scas
mov
sarb
push
jae
add
fdivs
cmc
pop
xor
test
pop
mov
loop
mov
jmp
incl
sbb
iret
push
pop
push
ja
or
movsl
loopne
add
xor
inc
mov
cs
rclb
pop
xlat
dec
icebp
shlb
stc
je
enter
repz
lods
push
dec
cltd
xor
push
mov
sbb
rcrl
lods
cmp
xor
iret
fsts
sarl
insl
sbb
jns
jb
lea
push
mulb
mov
lea
nop
jecxz
cmpl
clflush
clc
inc
lods
aam
mov
push
cmpsl
mov
int3
pop
sbbb
cmc
xor
enter
shrb
hlt
and
addl
jle
bound
and
sub
mov
adc
cmc
or
jo
and
xchg
and
mov
sub
push
lock
cmp
or
pop
fisttpll
push
lret
xor
xchg
lret
popa
adc
cmp
mov
inc
std
mov
push
dec
sub
shlb
inc
js
or
test
data16
jmp
sub
scas
pop
mov
mov
jp
out
inc
movsb
xchg
inc
inc
pop
lods
outsl
frstor
pusha
jecxz
jmp
adc
jne
cli
orl
addb
jge
xlat
push
test
mov
mov
xchg
cmpsl
aad
dec
jne
insb
in
push
push
mov
jmp
imul
test
movsl
jl
cmovp
sbb
insb
inc
fsts
cmp
shrl
sti
mov
mov
out
add
pop
pop
movsl
add
mov
jae
push
movsb
mov
mov
test
dec
cmp
add
jmp
jmp
shlb
push
popa
or
xor
data16
loopne
arpl
mov
mov
mov
sbb
push
fcmovb
cmp
imul
mov
ja
adc
mov
leave
ljmp
aaa
lods
or
jbe
jg
cs
out
mov
insl
mov
andb
test
mov
mov
dec
mov
stc
or
out
mov
fbld
fisttpll
insb
dec
repnz
jmp
hlt
adc
cmp
dec
stos
pop
sub
push
icebp
pusha
and
test
xchg
sbb
je
aad
pop
inc
pop
lcall
mov
adc
cwtl
daa
stos
xchg
xchg
das
fstpl
jns
or
notl
jecxz
jb
fildll
or
out
lods
mov
xor
shll
adc
mov
cwtl
push
out
pop
mov
ret
rcrb
fnsave
xlat
insb
cli
and
pusha
ficompl
or
fsub
pop
lret
jl
or
das
xor
addr16
sub
dec
aam
lret
adc
xchg
pop
cltd
stos
mov
or
push
rolb
cwtl
dec
push
push
cmpsl
lcall
insb
pop
insb
imul
xchg
inc
ja
mov
jnp
jmp
xor
pop
call
scas
mov
xchg
test
inc
neg
mov
bound
scas
lret
ljmp
push
movl
stos
mov
shl
fwait
clc
fwait
adc
dec
sbb
loop
xor
icebp
mov
stc
mov
mov
and
pop
push
jae
pop
cmp
jecxz
xchg
lock
dec
mov
scas
aas
insl
sub
push
pop
jle
push
push
and
xchg
aad
outsb
jp
dec
outsl
int
aaa
enter
sub
inc
cmpl
xchg
mov
hlt
test
xor
das
mov
scas
jno
mov
scas
decl
scas
int3
jnp
adc
das
pusha
adcb
xchg
fs
xlat
and
pop
push
test
leave
lcall
cmpsl
scas
and
add
lcall
pusha
xchg
jmp
les
out
xchg
mov
or
lret
rcll
pop
pop
insl
lret
les
sbb
das
mov
insl
inc
jae
into
and
test
fwait
stc
lcall
shl
mov
cmp
jne
jmp
aas
ror
cmpsl
mov
add
loop
out
push
out
sahf
mov
jbe
and
cmc
scas
mov
pop
pop
xlat
sbb
cmp
jmp
shll
sbb
test
loopne
cmp
push
mov
dec
insl
ja
test
jbe
ret
mov
mov
pop
aaa
icebp
andl
pop
lret
fincstp
inc
std
dec
int3
push
push
jle
fisubrl
mov
fmul
add
jecxz
sbb
leave
xchg
fstp
popa
mov
fldl
ret
pop
inc
movl
int
in
inc
pop
or
mov
inc
movsl
dec
or
mov
mov
sub
jmp
ja
dec
lea
testl
iret
popf
inc
repz
add
add
dec
out
xor
in
jae
mov
aaa
mov
arpl
ds
cld
add
icebp
cltd
mov
jmp
bound
and
daa
ja
push
arpl
sub
std
mov
sbb
push
jmp
lret
sub
lods
pop
add
pop
int3
je
call
add
cmp
testl
lcall
lcall
adc
in
and
rclb
stos
push
mov
dec
pop
add
gs
push
jmp
ds
cli
push
lods
mov
into
out
out
dec
fbld
mov
dec
repz
pop
xchg
sbb
pop
cli
subb
mov
push
shll
repz
inc
cltd
dec
pop
addl
negl
outsb
fwait
or
inc
popa
xchg
xchg
cmpsb
and
mov
repz
xchg
cmc
fcompl
sbb
les
cmp
das
enter
cmp
jecxz
dec
xorb
lods
push
stc
mov
push
test
ficoms
hlt
and
jne
nop
ss
mov
inc
aad
iret
and
testb
cwtl
add
mov
mov
or
mov
jge
or
mov
add
adc
cmp
or
lret
cmp
jo
dec
fld
call
int3
pop
jns
ljmp
push
in
cmp
cmp
pop
shll
in
dec
jns
iret
sub
xchg
jae
xorb
mov
lods
push
into
sbb
jle
dec
mov
inc
imul
vmovlpd
push
adc
inc
xchg
in
icebp
adc
push
sbb
aaa
in
sub
lds
inc
mov
mov
jns
xor
notl
scas
scas
mov
jle
sbb
jb
mov
sub
mov
dec
pop
mov
fucompp
ret
adc
call
in
push
pusha
ss
or
insb
in
inc
stos
pushf
int3
xor
stos
es
scas
sub
cwtl
mov
push
add
movsb
lds
popa
mov
jp
lds
repnz
push
sub
xlat
stos
outsl
xchg
jle
cld
push
or
adc
hlt
xchg
xchg
outsl
xor
add
daa
mov
dec
gs
sub
aaa
inc
pusha
sub
xor
popa
sahf
adc
in
pop
in
inc
pop
push
xchg
xor
mov
in
lods
xchg
xor
and
mov
aad
pop
hlt
lret
add
inc
or
aad
push
mov
bound
inc
fldl
adc
stc
fwait
out
rorl
outsl
mov
popa
jo
out
shlb
fbld
test
sub
xchg
jno
xchg
cs
addb
mov
bound
dec
scas
and
insb
sahf
push
push
dec
push
cmc
or
xchg
movsb
insl
insl
mov
jmp
adc
add
and
es
sub
sbb
cmp
insl
cmc
mov
sbb
push
jne
push
test
sarb
shr
and
mov
adc
dec
scas
dec
adc
push
inc
mov
inc
lret
insb
adc
push
pop
adc
xchg
fimuls
cltd
hlt
xor
lcall
filds
cltd
jmp
mov
xor
or
adc
out
lret
fdivs
mov
inc
sub
mov
dec
lea
subb
push
adc
rol
lret
ja
icebp
jo
repnz
popf
insl
insb
sarb
sbb
outsb
pop
sbbl
pop
outsb
in
or
dec
fisubrl
inc
fistpll
push
mov
and
xchg
sub
pop
addr16
pop
cmp
out
pop
jp
push
imul
inc
jl
out
inc
shrb
dec
sti
pop
imulb
es
rolb
push
subb
cmpsl
mov
outsl
orb
insb
sbb
loope
inc
ret
nop
ret
add
lret
dec
mov
inc
xchg
test
fs
das
dec
jl
loope
pushf
adc
sub
or
repnz
fildll
inc
xchg
pop
sti
pop
lods
mov
adc
push
jns
lret
sahf
addr16
push
add
inc
in
ds
push
mov
ja
into
cli
xchg
outsb
mov
lcall
sarb
test
in
cmpsl
dec
cwtl
xor
push
dec
lock
bound
sahf
mov
leave
add
lret
dec
cmpsb
inc
cmp
and
push
pop
testb
arpl
stos
sbb
jns
sub
fucomip
out
adc
jl
mov
mov
mov
fimuls
loopne
dec
pop
pop
and
lods
push
inc
mov
and
push
pop
div
clc
fnstcw
jp
jp
inc
popf
fmuls
aaa
jecxz
popl
leave
pop
stos
mov
vmovddup
ljmp
div
idivb
xor
jmp
outsl
nop
sub
jmp
addb
into
sub
xchg
sub
mov
jl
popa
scas
enter
inc
outsb
int
inc
add
xor
pop
aas
popa
lds
mov
push
rcrb
dec
cli
or
call
ret
xor
sbb
aam
adc
ret
add
push
adc
dec
arpl
cltd
aas
mov
pushf
inc
jp
out
pop
cwtl
imul
mov
int
loopne
test
push
jnp
xchg
push
inc
or
or
or
adc
xor
sbb
imul
cmpsl
stos
push
mov
addr16
sti
pop
lret
aaa
sub
cmp
or
sbb
imul
cmpsl
stos
push
mov
addr16
sti
pop
lret
aaa
sub
cmp
or
sbb
imul
cmpsl
stos
push
mov
data16
sti
pop
lret
daa
sub
cmp
or
sbb
imul
cmpsl
push
push
inc
in
and
adc
and
mov
jne
gs
andl
add
adc
into
add
adc
popa
nop
jno
inc
mov
movsl
mov
jne
gs
icebp
add
and
xor
add
adc
mov
mov
movsl
mov
out
xchg
adc
and
rcll
and
adc
insl
xchg
adc
xor
aas
sar
aad
andl
jp
lret
in
pop
cmp
dec
xor
adc
out
jmp
add
push
add
mov
lret
fsubrl
mov
decb
out
mov
xorb
ds
icebp
cmp
in
push
test
dec
lds
aad
hlt
rcrl
xor
jns
popa
push
bound
jno
movb
xor
lods
push
mov
decl
jnp
sahf
xorb
ret
fstps
push
mov
mov
hlt
xchg
fxch
mulb
test
mov
pop
stos
dec
mov
and
testb
jbe
rcll
std
cld
rolb
iret
insl
fnstenv
gs
icebp
add
and
xor
notl
fldenv
jno
inc
lods
push
xchg
loopne
lds
call
mov
push
and
imul
les
aam
in
std
or
inc
mov
mov
mov
mov
cmpsl
adc
pusha
ficompl
test
es
out
sbb
or
xor
xor
add
adc
popa
xchg
jno
inc
mov
movsl
mov
jne
gs
icebp
add
and
xor
add
adc
popa
xchg
jno
inc
mov
movsl
mov
or
out
cmc
ficoml
and
xchg
out
cmpsb
pop
mov
daa
pusha
sbb
mov
sub
jg
pop
push
test
jb
les
pop
fwait
pop
or
call
mulps
cmpsl
cld
std
cmpb
and
or
sbb
aad
lock
mov
in
jle
shl
mov
shll
jno
out
sbb
push
jmp
and
mov
fcompl
gs
jo
and
seto
test
xchg
movsb
push
mov
pop
fistpl
lock
mov
in
xor
xchg
jl
jecxz
jl
sbb
inc
cmp
rcrb
shll
mov
fidivs
push
scas
test
imul
js
inc
mov
outsb
sti
lock
push
mov
xchg
xor
or
xor
push
add
movsl
mov
stos
mov
mov
stc
add
add
lock
nop
mov
ljmp
sub
fsts
scas
add
dec
ljmp
xor
into
mov
pop
cmp
cltd
push
mov
mov
sub
or
or
mov
adc
mov
sub
mov
std
scas
aam
test
out
or
fs
adc
test
xchg
and
scas
js
cld
jbe
pop
pop
shll
imul
repz
mov
pop
xchg
xchg
sbb
adc
xchg
xor
dec
daa
mov
sbb
imul
or
or
lret
mov
push
xchg
add
repz
mov
scas
test
sub
insl
xchg
lea
inc
loop
dec
daa
sub
or
mov
mov
cmp
lret
out
mov
jne
movsl
pop
lret
xchg
pushf
clc
sarb
imul
dec
and
sbb
pop
mov
cmpsb
pop
xchg
shll
mov
inc
out
and
cmp
cmp
pop
rorl
std
inc
cmc
cmp
jg
adc
enter
inc
lods
stos
or
inc
mov
enter
dec
adc
pop
adc
sbb
ss
mov
ss
insl
lret
ret
cmc
pop
es
lods
imul
and
jno
mov
nop
bound
and
inc
pop
in
dec
les
pop
bound
jg
jne
test
sbb
aad
xor
and
cmc
add
and
xchg
mov
je
pop
xchg
and
sahf
add
sbb
xchg
sahf
add
xchg
fidivl
cld
or
test
icebp
xchg
jb
dec
adc
pop
shlb
push
cmp
or
xor
and
pop
sub
sub
mov
pavgw
enter
aas
data16
int
sti
test
mov
lcall
or
push
into
daa
das
test
inc
dec
sub
jne
mov
jmp
sub
fldcw
mov
inc
out
outsl
cmp
inc
ds
mov
fadds
mulb
fsub
pop
pop
mov
int3
mov
and
insb
add
xchg
sub
xchg
popa
fs
sbb
test
test
xlat
lcall
add
leave
out
mov
int
outsl
dec
add
pop
add
out
sbb
xchg
cmp
push
sub
imul
push
outsl
mov
pop
mov
adc
neg
jge
ss
mov
jg
sarb
or
or
gs
mov
or
add
les
jbe
into
adc
and
loopne
or
fdivr
cltd
mov
jb
repnz
push
aad
inc
es
push
shrl
jne
jge
inc
sbb
fcompl
pushf
xchg
in
je
shlb
aam
lea
cwtl
pop
in
out
shrl
out
clc
outsl
jae
adc
aad
mov
cmp
mov
push
hlt
outsb
mov
sbb
movsb
fwait
xchg
or
pop
sbb
sbb
std
imul
jbe
xor
mov
jae
dec
push
pop
rcll
sbb
sbb
mov
mov
mov
adc
jns
shrb
insb
fstpt
cs
sbb
xchg
test
dec
pop
inc
mov
xor
bound
mov
mov
and
mov
sti
mov
loope
arpl
push
imul
fisubl
out
arpl
push
mov
mov
loop
ret
pop
pop
movsl
and
pop
mov
aad
leave
and
test
sahf
and
xchg
push
lock
pop
xchg
mov
aaa
xchg
jae
xchg
ficomps
xor
test
inc
lods
mov
mov
cmp
xchg
lahf
repz
dec
movl
and
sub
scas
add
pop
fnstsw
cltd
in
shl
cld
das
cmp
lds
popa
pop
inc
jle
aas
callw
in
das
cmc
sahf
jae
pop
outsl
in
inc
stos
ret
fidivrl
test
pop
scas
outsb
push
mov
sets
loope,pn
jnp
call
je
xor
adc
daa
lods
jb
fdivs
loopne
xor
dec
outsl
xchg
inc
lret
adc
ret
push
adc
pushf
cmp
out
xor
or
aad
adc
fbld
out
push
mov
add
sub
aas
xchg
or
loopne
fisubl
pop
sub
mov
mov
imul
mov
outsb
adcl
or
xchg
cmp
push
mov
push
stc
and
dec
xchg
movsb
jle
or
inc
nop
mov
aaa
and
add
dec
stos
sarb
add
jnp
jne
jge
cmp
mov
xchg
loop
aaa
mov
inc
shlb
jne
scas
mov
pop
adc
sbb
das
or
pushf
cmp
and
xlat
negb
rcll
pop
dec
jecxz
inc
and
clc
cwtl
mov
js
repz
lock
call
nop
call
lahf
sbb
or
add
dec
test
aad
jecxz
ss
mov
mov
fyl2xp1
sbb
rol
repz
in
dec
mov
jae
clc
inc
ffree
dec
mov
imul
sub
push
mov
xchg
push
jne
ficoms
dec
ret
pop
fcompp
sbb
sarb
add
test
jl
scas
inc
inc
cwtl
cmp
movsl
sbb
and
imul
sbb
sbbl
fs
movsb
and
xor
rol
sbb
outsb
movb
rcr
fwait
mov
pushf
imul
xchg
lret
out
jo
adc
pop
cmp
mov
pop
sbb
sbb
insl
scas
cmp
dec
scas
mov
sub
mov
or
jns
mov
add
stos
divl
adc
loope
pop
cmpsl
data16
ret
in
adc
ss
fistps
ficoml
cmpsb
call
jge
adc
mov
xor
dec
popf
gs
jg
iret
mov
mov
xchg
inc
out
jle
ret
push
mov
in
das
pop
lods
dec
ss
fildll
movsl
lret
mov
movsl
vpcmpgtw
push
dec
out
sbb
notb
pop
icebp
inc
pop
shlb
dec
dec
mov
xorl
push
xor
mov
mov
jbe
shr
icebp
adc
sub
xorb
fwait
cwtl
adc
xchg
int
ret
leave
ljmp
inc
and
mov
push
lds
pushl
jne
sub
arpl
jg
out
inc
push
mov
mov
push
or
js
or
jb
pop
push
ja
dec
stos
mov
sbbb
cltd
mov
orb
push
ret
sub
cmp
fdiv
movsb
js
pop
lahf
push
pop
mov
sti
mov
daa
jbe
sbb
out
lahf
push
mov
and
mov
in
and
and
pop
mov
insb
hlt
in
sub
push
mov
adc
jle
dec
ja
add
sub
in
lret
push
xchg
jl
out
and
lods
xchg
aas
sbb
aad
sbb
ficompl
xchg
and
sbb
jle
cmp
push
sbb
in
sbb
mov
adc
imul
movsb
push
adc
lds
jmp
ja
into
enter
inc
lea
xor
test
mov
outsb
push
sti
ror
mov
cmp
arpl
jle
lea
lcall
cli
mov
jno
xor
mull
fs
aaa
push
jno
std
jno
xor
xor
je
mov
push
pusha
fsubrs
insb
sub
pop
pop
jb
xor
fstps
push
jmp
mov
pop
arpl
add
push
jge
in
roll
test
sbb
stos
iret
rorl
test
xchg
sbb
sub
cmpsb
or
mov
push
dec
call
cwtl
add
push
adc
int3
dec
ds
dec
mov
fcomp
adc
aam
xor
fidivrs
shll
jg
cmp
ss
imul
icebp
mov
and
jno
ror
std
jp
mov
imul
icebp
pop
mov
aas
xor
lods
dec
call
pop
rorl
xor
sub
sbb
xor
arpl
add
xchg
and
inc
imul
test
in
int3
lret
shlb
xor
lret
or
mov
mov
adc
add
test
mov
sbb
dec
mov
jp
xchg
lock
inc
lds
jae
xor
es
cmp
and
pop
out
lods
movsb
sbb
adc
mov
subl
gs
mov
add
shl
stos
mov
clc
mov
cld
sbb
pop
addr16
lock
cmp
or
pop
lahf
popa
push
inc
cmpsb
jnp
sub
inc
test
or
sub
test
subb
je
lock
das
sbb
fcomi
or
repnz
mov
and
fcomp
shll
pop
jp
ret
es
xor
enter
add
jecxz
outsl
lret
pop
in
sub
cmp
out
sarl
das
stos
in
jg
ds
stc
jl
xor
fsubs
je
aam
cli
xchg
in
inc
cs
sbb
and
sub
pop
icebp
and
mov
popf
out
pop
sbb
xor
jae
dec
aas
pop
mov
adc
mov
sbb
mov
ds
cltd
lock
push
rcr
add
dec
gs
adc
cmpsb
inc
movsb
hlt
jp
push
popf
out
mov
fisttpl
repnz
xchg
cmp
mov
test
dec
lret
dec
xchg
jl
add
aaa
add
xor
add
mov
xor
mov
test
aam
dec
std
cld
adc
test
leave
cmpsb
movntq
out
cmp
adc
xor
sub
lods
outsb
add
mov
pop
xchg
mov
test
test
xor
hlt
cwtl
or
inc
xor
jl
in
push
adc
push
in
lock
push
daa
add
stos
cmpsl
mov
push
and
pop
mov
pop
out
pop
movsl
scas
fsubr
cld
fwait
pop
xor
dec
loop
jle
mov
mov
pop
xlat
sbb
sbb
xchg
inc
xlat
xor
mov
dec
pusha
mov
in
xchg
mov
pop
data16
cmp
sahf
dec
fsubrp
add
int
or
xchg
jg
add
ret
addr16
push
jne
pop
clc
jg
iret
inc
pop
lods
rorl
gs
push
addr16
jp
repnz
das
dec
cwtl
call
adc
pop
in
and
cli
loope
sub
std
fists
aaa
cmp
jl,pt
decb
lock
dec
pop
mov
add
icebp
loop
and
mov
int
jge
dec
aas
scas
inc
pop
scas
sub
adc
scas
adc
add
outsb
xor
sbb
sbb
cmp
mov
mov
xor
mov
sub
cmp
cmpl
scas
jle
jns
adc
mov
aaa
push
nop
pop
mov
loop
mov
jo
or
cmc
test
hlt
in
cmpl
mov
das
ljmp
xchg
mov
adcb
mov
xchg
push
push
int
fwait
mov
fisubs
jecxz
cwtl
shlb
inc
stc
insb
mov
out
dec
and
and
pusha
dec
cmp
or
ret
push
cmp
jbe
jge
jnp
rcr
lods
jl
aad
cmp
aad
adc
movsl
pushf
aaa
icebp
dec
lahf
pop
fs
aas
xor
fmul
push
ss
jno
daa
lret
mov
mov
pushf
stos
ljmp
sti
sub
scas
jp
loope
push
add
in
mov
add
xchg
outsb
pop
pop
scas
inc
mov
inc
mov
in
xlat
addr16
imul
mov
add
fsts
mov
cmp
cmp
sbb
out
movsl
mov
jns
mov
and
outsb
mov
sbb
ud2
int
mov
aaa
test
and
jo
scas
pop
add
cmc
outsb
pop
cmc
insb
int
clc
repz
add
mov
divl
cmp
pop
lock
call
out
jo
cli
jno
movsb
push
pop
rcrb
data16
lea
or
scas
jno
pop
repz
fldenv
push
into
imul
popf
test
aas
rolb
pop
stos
adc
fdivl
repnz
mov
popf
sub
nop
fildl
shr
cs
cmc
jne
cli
out
fnstcw
out
insl
push
div
mov
pop
cmp
cwtl
repz
push
sbbb
mov
rclb
repz
dec
arpl
into
add
and
mov
lock
in
jecxz
aaa
xor
pop
fcoms
inc
daa
rorb
int
jbe
jmp
ja
repz
sub
jecxz
pop
in
sarb
sbb
inc
lret
in
test
mov
js
das
xchg
and
xor
dec
nop
cmp
mov
pop
roll
pop
mov
scas
fimull
push
pop
sbb
enter
fcomps
pop
cmp
sbb
jns
stc
add
mov
or
aam
sbb
jae
jmp
push
rorl
inc
pop
shll
dec
push
in
cmp
repz
ss
mov
int3
dec
pop
test
xor
mov
bound
jnp
mov
in
sub
dec
dec
lret
mov
dec
sbb
out
add
test
sahf
sbb
sbb
gs
rclb
jle
xchg
ficoms
and
add
or
mov
bnd
pop
inc
push
cmpsb
aas
ljmp
mov
mov
mov
jne
imul
popa
add
sub
push
imul
push
inc
push
scas
lea
xor
daa
movsb
inc
push
ss
and
sub
adc
not
xchg
fidivrl
and
xor
rolb
jp
adc
daa
ds
insb
fs
mov
cmc
sbb
mov
insl
xor
sbb
pop
lds
jp
jp
cmp
mov
jb
insb
mov
push
loopne
enter
push
sbb
fiadds
imul
inc
call
lea
std
push
pop
push
andl
mov
call
sahf
push
outsl
fdivl
push
loope
call
lcall
mov
push
inc
lret
shlb
adc
jle
push
or
push
jge
aad
or
je
xlat
jno
mov
lahf
cmp
mov
mov
cld
dec
lods
rcl
cmp
subb
xchg
dec
push
call
and
aaa
mov
aas
lods
leave
out
inc
push
mov
cmp
cmp
pop
es
aad
sub
mov
adc
lds
dec
sub
or
lods
in
xchg
arpl
test
jns
and
sub
add
loop
aad
jecxz
arpl
push
stc
sub
out
enter
xlat
shlb
insb
rsqrtps
stc
and
shrl
movsl
int3
add
sub
push
std
xor
loopne
mov
sub
sub
lods
addl
push
cmp
ljmp
aad
dec
pop
jbe
dec
jnp
ds
or
clc
ds
pop
notl
test
out
adc
shlb
ljmp
test
mov
sahf
xor
orl
and
mov
jge
xchg
mov
arpl
mov
test
dec
shll
sub
fdivrl
sbb
dec
pushf
insb
test
jp
cwtl
or
pop
mov
lods
out
clc
pop
lods
sti
xchg
shl
filds
insl
dec
hlt
sub
imul
dec
enter
push
pop
push
out
scas
hlt
adc
xorl
js
loope
test
into
loop
xor
fadds
and
and
iret
andl
clc
pop
push
dec
ss
lcall
iret
jmp
fcmovbe
push
bound
sbb
mov
xor
leave
push
and
dec
sub
mov
mov
aaa
mov
mov
popf
jo
or
pop
inc
mov
std
jg
in
mov
mov
insb
jmp
insb
xchg
ljmp
mov
xchg
out
sbb
adc
lds
add
jmp
pop
dec
pop
pop
or
push
mov
into
lock
and
cmc
addl
push
negl
lods
ljmp
and
push
pop
pushf
fists
jp
dec
add
push
add
neg
dec
repz
or
hlt
dec
lock
popa
lds
cmpsb
movsb
nop
push
movsl
adc
lods
shlb
leave
icebp
loope
xor
jecxz
adc
sahf
jp
scas
xlat
sti
outsl
stos
push
push
lahf
push
mov
pop
jae
xchg
sbb
mov
mov
jno
jg
mov
test
movsb
push
test
add
and
imulb
call
mov
movsb
dec
ret
aaa
daa
push
std
aaa
sbb
mov
add
cmp
shr
sahf
mov
aas
push
mov
outsl
iret
adc
mov
mov
aad
data16
mov
push
dec
jmp
sbb
or
sub
mov
scas
inc
cwtl
popa
xor
test
iret
or
or
rcrl
jb
shlb
mov
out
ficomps
imul
fistps
jb
imul
pop
mov
imul
and
sbbl
dec
fcoml
mov
cli
push
call
loopne
in
xor
in
sbb
ret
test
mov
lret
into
or
in
mov
xchg
mov
mov
movsb
js
loop
jae
sbb
jge
dec
fiaddl
xchg
ja
mov
fsubs
lahf
scas
xor
mov
in
scas
push
mov
sub
andl
and
clc
pusha
mov
inc
sub
jge
inc
dec
sub
jge
push
sti
fstpl
pop
cmp
sub
push
repnz
int3
test
jb
addr16
stos
cld
jg
push
pop
push
lcall
push
xchg
test
jb
sarl
rclb
lahf
inc
dec
sub
push
sbb
mov
loopne
cmpsb
cwtl
cwtl
xor
out
xchg
adc
xchg
push
outsl
mov
push
mov
cli
inc
add
mov
aad
or
fiadds
xchg
inc
cmp
adc
in
adc
mov
lods
hlt
push
out
and
out
xlat
add
test
jns
or
imul
pop
xchg
push
mov
adc
xlat
fildl
jge
mov
ficoml
or
jmp
jb
test
inc
fimuls
sbb
test
in
and
mov
push
sahf
jb
pop
in
add
popa
xor
out
aaa
pop
fdivl
jmp
in
xor
xchg
fwait
not
xchg
pop
mov
fldl
sbb
cmp
dec
test
mov
jge
adc
push
sbb
stc
lods
cmpsb
dec
out
and
lahf
fnstsw
push
andl
add
sub
xor
xor
add
lock
hlt
in
out
scas
jo
add
int
imul
xlat
in
inc
mov
pop
std
lea
in
int3
mov
das
imul
testb
or
xchg
lcall
cmpsb
fwait
addr16
loop
repz
pop
bound
jb
sahf
leave
cmpl
outsb
inc
repnz
sbb
daa
xchg
aas
add
rcll
std
cwtl
add
dec
sub
mov
lods
xor
repz
xorb
loope
icebp
add
and
xor
add
adc
popa
xchg
jno
inc
mov
movsl
mov
jne
gs
icebp
add
and
xor
add
adc
popa
xchg
jno
inc
mov
movsl
mov
insl
xchg
popa
popa
adc
push
and
add
adc
popa
xchg
jno
inc
mov
mov
adcl
shl
and
xor
cmc
adc
xor
and
push
mov
sub
mov
andl
andl
andl
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
mov
lea
push
movl
movb
movl
movb
movl
movb
movb
movl
call
leave
ret
push
xor
and
adc
add
mov
les
inc
inc
mov
mov
pop
icebp
pop
fs
rol
and
adc
add
push
mov
inc
mov
roll
jbe
push
icebp
push
loope
xchg
ss
and
adc
add
push
mov
inc
sbb
pop
cmc
adc
push
mov
jle
jle
push
or
mov
test
or
subb
mov
mov
xchg
cltd
sahf
sub
ret
add
pop
test
or
test
or
inc
imul
insl
cmp
mov
adc
lods
inc
dec
push
pop
xor
jl
lock
and
and
mov
xchg
popa
inc
fidivs
int
outsb
sahf
shl
fwait
inc
push
ss
cmp
sub
mov
jecxz
outsb
jo
je
inc
mov
cs
and
outsb
jbe
push
loope
sbb
cmpsl
fisubrs
clc
data16
in
pop
and
mov
adc
push
es
lds
rcrb
testb
jno
popa
cmpsb
push
mov
inc
mov
mov
push
icebp
push
loope
shll
test
pop
xchg
and
sbb
rcll
cs
aad
stc
adc
jb
pop
xchg
dec
roll
cltd
xor
jae
cmp
add
adc
cmp
push
lock
dec
xchg
mov
sub
test
fs
jno
popa
cmpsb
push
mov
inc
mov
mov
push
icebp
push
loope
shll
rol
and
adc
add
push
mov
inc
mov
mov
push
icebp
push
loope
shll
rol
shrl
mov
loop
pop
push
popa
call
pop
push
imul
cmp
fmuls
inc
stos
push
cmp
loop
nop
test
stos
sub
ljmp
sub
dec
sbb
or
out
jp
adc
hlt
stos
out
sbb
xchg
adcb
pop
sub
and
jle
aam
mov
mov
gs
mov
xchg
mov
lret
fsubl
mov
mov
cmp
pop
ret
negb
cmp
aam
jno
xor
xchg
push
pushl
xchg
insb
ja
into
mov
pop
test
pop
add
jo
fldl
jnp
and
jae
mov
out
sbb
test
pop
push
popf
ret
jecxz
cmp
les
divb
xchg
sub
in
mov
sub
push
outsw
dec
gs
mov
int3
pop
scas
jmp
inc
out
push
sub
enter
sub
xchg
jg
sbb
and
test
shrl
lahf
stos
pop
fwait
sbb
mov
mov
cmp
dec
jl
sbb
xchg
into
mov
js
inc
ds
mov
jmp
or
push
mov
cmp
sahf
fldenv
fs
pop
testl
xchg
xor
scas
into
add
cmp
movsb
insb
subl
push
xchg
mov
cmp
cld
dec
adc
adcb
out
shl
out
das
loope
insl
dec
pop
mov
cmpsl
mov
add
leave
mov
add
pop
fisubs
stos
mov
lods
fcoml
xchg
push
pop
or
and
stos
stos
out
xchg
fsubl
sub
call
push
and
pop
cmp
or
lcall
lret
xor
ljmp
addr16
mov
or
inc
addb
mov
pop
not
adc
enter
aas
mov
jmp
push
dec
ss
add
and
outsl
push
icebp
jno
pop
out
out
lret
in
add
cli
inc
inc
inc
hlt
push
jno
inc
and
dec
lret
adc
xorb
test
lret
subl
adc
mov
int3
das
in
sub
sub
insb
xchg
das
in
lahf
stos
std
inc
add
pop
mov
cmp
and
xchg
leave
push
pop
jmp
lea
mov
data16
movsb
sbb
sbb
repz
iret
imul
cld
aaa
mov
xchg
leave
xor
mov
adc
je
pushf
shr
fimull
add
mov
dec
xchg
cmp
push
xchg
in
jbe
push
insl
das
cld
outsl
ss
sahf
jns
mov
cmp
mov
ret
push
fcompl
iret
popa
inc
movsb
out
sbb
mov
push
popa
xchg
fwait
inc
push
mov
xchg
sbb
hlt
add
out
cli
cmpsl
dec
or
inc
cmpsl
shrw
stos
test
mov
add
push
js
dec
cmp
rclb
xchg
jae
fsub
or
popa
inc
dec
nop
test
sub
pop
call
dec
push
stc
out
ss
popa
dec
jbe
inc
add
xor
rclb
mov
subb
insl
dec
imul
bound
movsl
pop
aam
inc
cmp
lahf
mov
addb
mov
xchg
mov
sbb
lds
sbb
ficompl
ja
lret
iret
lret
fmulp
fbstp
aam
call
fs
faddl
mov
adc
sbb
nop
add
xchg
xchg
das
jae
popa
shr
mov
xlat
call
jb
and
je
imul
jmp
and
adc
pop
rclb
mov
test
movsl
pop
repnz
push
or
cmpsl
push
pop
cli
mov
sbb
arpl
or
aas
rclb
xor
scas
lds
and
dec
jge
lret
fistps
mov
pop
into
test
cli
movsb
and
in
push
out
sub
arpl
lock
repz
push
in
xchg
dec
push
rorl
mov
into
ljmp
adc
ss
pop
or
test
int
inc
pusha
push
xchg
sub
repnz
loope
and
stos
xchg
lods
repz
push
push
dec
hlt
add
mov
cmpsl
pop
dec
or
pop
ljmp
dec
inc
xor
cmp
mov
gs
test
pop
xor
sbb
pop
pop
xchg
ja
fldl
call
ret
fucom
mov
push
xchg
adc
sub
scas
dec
bound
bound
test
xor
xlat
addb
lret
pop
dec
mov
add
rcrl
sub
cwtd
push
iret
push
jp
jge
aas
pop
xchg
mov
shlb
push
add
adc
shlb
mov
sub
push
hlt
or
jge
daa
mov
je
enter
jnp,pt
je
push
inc
adc
inc
xchg
jg
subl
pop
cmp
lcall
int
shlw
add
pop
mov
jl
push
sbb
jmp
lods
cmpsb
das
sahf
pop
dec
add
idivb
jecxz
jl
aaa
mov
mov
xchg
xchg
sub
or
xor
aas
dec
ds
sarb
or
sub
in
sub
leave
xor
lcall
xchg
rorb
dec
rol
pusha
mov
mov
pop
jp
xorb
mov
popf
movhps
gs
cmp
mov
or
jmp
cmp
inc
mov
inc
pop
lahf
test
add
mov
cmp
xchg
mov
fidivs
stos
xor
pop
push
or
mov
pop
sti
daa
lea
adc
mov
push
enter
cmp
mov
push
dec
mov
inc
pop
addr16
pop
daa
insb
mov
mov
inc
pusha
mov
mov
in
inc
aam
push
inc
cs
xor
shrb
es
ljmp
adc
push
or
adc
cmp
push
adc
add
imul
shrl
push
js
sbb
mov
push
pop
dec
lods
jae
nop
ret
out
xor
fstpt
xor
loope
dec
inc
and
fucomp
mov
loope
dec
stos
pop
sbb
fcmovb
lds
jae
mov
jo
insl
lret
jg
and
cld
mov
mov
xchg
loopne
pop
nop
add
inc
and
and
stos
jb
mov
jle
test
insb
adc
xchg
sbb
insb
xor
mov
cs
xorl
in
xchg
jbe
in
pop
imul
sbb
push
loope
js
cmp
pushf
mov
andl
mov
ja
imul
fimuls
test
or
xor
lret
pop
stc
add
outsl
mov
idivl
rcrl
cli
dec
call
fbld
push
mov
mov
pop
int
mov
mov
cmp
mov
ret
xor
jne
or
mov
out
jns
push
lret
push
push
out
scas
outsb
outsb
mov
test
in
mov
mov
sub
push
imul
inc
stos
mov
daa
in
aam
cmp
or
dec
jl
es
adc
jns
fsubl
ja
sub
cld
ret
imul
imul
popa
out
fcmovne
or
mov
mov
ja
sti
sub
or
ss
es
pop
into
jp
xchg
stos
push
movsl
jo
stos
cmp
lret
mov
fcomip
shll
pop
enter
shll
push
in
or
nop
push
sub
inc
pusha
push
pop
xchg
sbb
cmp
je
or
imul
cmp
pop
movsb
inc
pop
xchg
in
mov
insl
loopne
cmp
hlt
mov
lods
imulb
add
xchg
dec
insl
sbb
inc
lahf
mov
in
push
ds
enter
jecxz,pn
insb
daa
mov
mov
pop
mov
fsubrs
outsb
cmp
cmpsb
mov
inc
adc
cmovnp
push
inc
jp
jecxz
fwait
mov
je
xlat
dec
pop
movsl
in
dec
shll
pop
clc
divb
out
adc
mov
or
mov
pop
fcomps
add
nop
repnz
sub
stos
sub
fadd
inc
xchg
sbb
jl
fwait
aad
mov
jb
into
dec
pop
mov
mov
cwtl
test
jmp
pop
in
test
jno
fcomps
mov
sbbl
adc
rcrl
sbb
add
add
fs
rcr
pop
adc
or
jbe
out
shl
movsb
sbb
mov
leave
jae
fdivrs
or
fwait
shld
push
xchg
xchg
test
sbb
and
cmp
lahf
jle
and
andb
dec
jne
dec
add
lds
pop
hlt
insl
xlat
mov
flds
mov
pop
movsl
adc
jecxz
popf
cltd
sbb
je
pop
int
das
shll
shrb
scas
pushf
push
orb
xor
test
movsl
dec
mov
aad
sarl
sti
mov
es
cmp
fldenv
incl
int3
mov
mov
mov
xor
test
cs
mov
jge
mov
lret
int3
cmp
jge
inc
in
fcompl
jl
adc
test
adc
or
std
les
lock
iret
js
insl
add
and
out
out
pop
cwtl
repnz
and
dec
mov
sahf
lahf
adc
push
cwtl
cltd
addr16
mov
fscale
mov
loop
ret
xchg
mov
mov
arpl
fbstp
ja
popa
ja
pop
sbb
mov
push
or
sti
or
add
pop
cwtl
fdivl
test
pop
ja
cmp
les
repnz
scas
ss
fwait
inc
shlb
and
test
mov
jecxz
fsts
xor
sbb
dec
imul
lcall
cmp
pop
loopne
test
mov
mov
jns
pusha
mov
mov
sub
in
dec
aas
inc
dec
outsb
or
adc
lock
rcr
push
cltd
sahf
add
xchg
sbb
sub
lret
mov
pop
adc
pusha
dec
inc
popf
pushl
mov
pop
xchg
insb
loope
cltd
rorb
mov
cmp
mov
inc
adc
push
in
in
sbb
jo
xlat
push
cli
stos
jl
mov
lods
das
xor
lock
jbe
mov
xor
sbb
hlt
xchg
add
lock
daa
dec
adc
mov
mov
xchg
sti
jecxz
jg
xor
add
in
mov
xchg
pop
pop
mov
mov
cmp
push
sbb
adc
xor
jne
mov
mov
jno
pop
push
fnsave
xor
mov
das
aad
adc
gs
lea
push
iret
xchg
add
sahf
xlat
mov
xchg
sub
jbe
dec
mov
dec
dec
dec
sub
pop
add
mov
adc
lahf
mov
mov
subl
push
mov
jl
add
pushf
dec
dec
movsl
mov
jne
call
jle
jg
fimull
jo
hlt
mov
in
cmp
in
push
ret
cwtl
pop
xchg
adc
int
xchg
inc
mov
ljmp
lock
ucomiss
test
ret
subl
or
outsl
mov
pop
in
cmp
jne
lret
cmp
bound
call
sub
inc
adc
sub
mov
and
jg
push
sbb
cmp
mov
adc
jbe
adc
js
scas
mov
cwtl
int3
aam
repnz
clc
jno
out
not
sub
lcall
lods
pop
mov
cmp
rcll
and
or
xchg
mov
sub
add
push
xorb
cs
dec
daa
ret
mov
jl
xchg
inc
xchg
push
jb
ret
jle
sti
and
adc
int
cmp
xchg
xchg
or
sub
adc
push
inc
mov
ljmp
push
outsl
rclb
fstpl
sahf
inc
dec
mov
cmp
dec
and
push
ret
fnstenv
cmpsb
sti
shrl
mov
lret
arpl
push
lret
sub
and
mov
out
lds
or
jmp
insb
mov
jecxz
inc
stc
xor
push
and
sub
adcl
repz
pop
mov
mov
cld
fisubs
in
and
cwtl
cld
rolb
js
lahf
or
inc
xchg
sbb
pop
or
xchg
popf
mov
shlb
mov
xor
rcrl
dec
mov
push
int3
nop
fwait
jno
add
push
jb
inc
inc
fimull
fisttpl
fs
adc
and
and
dec
inc
or
mov
aad
js
outsl
mov
xchg
jno
push
jne
adc
xchg
pop
add
mov
mov
adc
or
test
pop
push
mov
mov
pop
jp
cmc
dec
push
inc
or
lcall
fildll
push
and
int
fwait
pop
hlt
scas
out
roll
inc
mov
mov
aas
jge
lret
sub
js
mov
add
jo
icebp
jb
add
sub
cmpsb
ss
lahf
fistpll
cmp
add
xor
jno
int3
xchg
aad
stos
es
sarb
pusha
ffreep
lea
das
lcall
aad
and
sbb
mov
dec
inc
push
add
daa
in
mov
mov
das
je
pop
jecxz
stos
mov
repz
or
or
daa
jae
ljmp
rclb
inc
xor
out
adc
push
and
or
cltd
in
dec
mov
pop
dec
cld
int
int3
cmpb
and
idiv
repz
mov
jno
es
adc
dec
arpl
loopne
nop
push
and
dec
int
cmc
lds
in
scas
out
xchg
pop
fistps
push
inc
adc
pop
inc
push
ret
ret
push
or
aam
jne
fmulp
jle
sti
push
fistps
xor
sub
mov
mov
sub
push
mov
sub
in
insl
gs
adc
xor
mov
sub
mov
sbb
push
lods
ja
mov
sbb
rcrb
dec
or
mov
or
mov
test
jge
inc
cmpsl
out
add
add
out
stos
stos
test
leave
or
mov
call
jle
shll
xchg
dec
mov
jbe
mov
scas
dec
rcll
stc
out
rcrl
or
imul
push
fcompp
jae
adc
mov
mov
add
aaa
jbe
push
mov
inc
inc
lret
mov
or
inc
sbb
test
pop
in
inc
ds
inc
mov
inc
movzwl
dec
and
inc
into
jmp
and
mov
leave
push
xchg
mov
mov
sub
pop
sub
add
dec
out
aad
jae
negl
cmpsb
jmp
mov
js
inc
inc
in
lock
push
inc
xor
add
cmp
pop
inc
cmp
div
inc
ret
aaa
pushw
or
push
xchg
js,pt
jmp
mov
mov
sub
cwtl
aas
mov
popf
pop
adcl
sbb
pop
in
pcmpgtd
push
jl
mov
inc
rorl
popa
xchg
mov
push
int
out
arpl
loop
pop
clc
push
xor
jo
xor
xchg
cwtl
gs
fsts
and
xlat
xchg
lea
push
fisubs
inc
loop
cld
loope
nop
mov
repz
je
in
sti
sahf
icebp
out
data16
mov
mov
xchg
mov
dec
mov
adc
add
mov
filds
mov
xor
pop
xor
xchg
cmp
fdivrp
pop
es
push
call
mov
and
fs
adc
cmp
adc
or
jb
sub
fwait
pop
sbb
loop
push
inc
stos
xor
data16
cmp
sub
adc
or
loopne
push
mov
push
adc
xchg
shll
push
das
cltd
adc
outsb
sbb
aam
fisttps
popa
shl
pop
push
fbstp
pop
out
xchg
push
subl
je
popf
jb
add
daa
xlat
push
lods
fwait
cmp
mov
int
inc
movsl
icebp
cli
pop
fsubl
test
or
adc
or
mov
push
cli
and
sub
lods
repz
inc
loope
cmp
adc
adc
lcall
cmp
jecxz
add
sbb
jae
pusha
test
jnp
push
mov
pusha
iret
pop
sub
orl
sub
js
aad
mov
repz
mov
enter
ret
and
ljmp
aaa
in
dec
insl
pop
jle
push
adc
cmc
mov
shl
lock
xchg
push
fistpl
stc
mov
dec
xchg
add
popa
dec
imull
jg
pop
mov
nop
pushf
gs
repz
arpl
jp
imul
inc
aaa
ret
addr16
sbb
mov
fadd
or
sub
adc
jge
jmp
aas
jo
dec
jnp
insb
cmpsb
mov
fidivl
ret
icebp
lea
pop
jecxz
enter
push
push
mov
daa
sbb
ds
sti
jo
lea
jg
pop
or
leave
int
pop
dec
mov
pop
or
lcall
loop
inc
push
aas
mov
hlt
cmp
lahf
loope
or
adc
fisttps
out
nop
lea
in
push
fwait
or
int
mov
xchg
push
or
test
lods
out
lods
lock
and
mov
lea
push
adc
mov
fldcw
dec
aaa
pop
mov
repz
inc
arpl
jbe
adc
fidivs
sbb
cmpsb
outsb
enter
fnstsw
dec
scas
int
shlb
mov
mov
jp
fnclex
dec
lods
xor
or
pop
push
push
xor
ja
sbb
xchg
bound
stos
xor
lahf
sub
cli
or
mov
mov
pop
cld
xchg
mov
jge
adc
imul
ret
ss
jl
pop
cmpsb
lcall
cmp
imul
into
cmp
xchg
push
scas
movsl
mov
lods
cmp
cmc
out
cli
lds
psrld
pop
popl
std
xor
mov
cmp
adc
xchg
and
push
push
xchg
jge
fdivl
xchg
lods
fidivrl
and
push
scas
sub
jns
sub
jo
and
mov
pop
dec
dec
pop
iret
popa
xchg
mov
lea
dec
sub
jg
pop
mov
mov
mov
push
sarl
sbb
sbb
mov
outsb
imul
repz
in
pop
inc
repz
lods
pop
outsb
aam
sti
pop
movsl
fldl
pop
imul
jns
dec
jge
adc
jne
add
mov
inc
pop
add
mov
mov
std
pop
imul
push
and
sbb
gs
insb
les
out
add
or
xchg
add
nop
mulb
stc
aas
rclb
aam
jle
and
jbe
cmc
mov
cmpsb
pop
add
cmpsb
pop
sub
mov
int3
shrl
stos
mov
jp
lock
pop
xor
out
jge
lea
cmp
pushf
dec
imul
mov
sub
and
lds
mov
jnp
enter
in
mov
les
loope
dec
inc
int3
inc
enter
adc
adc
or
pusha
pop
ret
dec
push
je
rorl
out
int3
push
inc
xchg
xchg
nop
inc
push
les
pop
fistpl
shll
push
out
cs
inc
loopne
pop
or
clc
in
inc
cmp
mov
jb
incb
cmp
fldcw
xchg
js
or
dec
sub
mov
adc
cmp
pop
push
cmpsl
lret
scas
outsb
in
fwait
mov
or
adcb
insl
jle
lea
and
xor
repnz
xchg
jns
pushf
xchg
in
shll
adcl
push
inc
jmp
into
push
dec
ds
ja
scas
xchg
lock
cs
out
insl
mov
cwtl
out
pop
cmp
in
inc
xchg
mov
dec
push
push
les
faddp
jmp
je
test
addl
shlb
mov
pop
sbb
lods
inc
mov
pop
inc
aad
push
or
cmp
mull
lods
insb
dec
in
mov
pop
add
inc
loope
sub
xlat
rcrl
dec
pop
push
mov
jp
pop
dec
push
or
bound
xlat
push
xchg
xor
and
xor
aam
cmp
in
adc
sbb
jns
jmp
sub
lea
or
add
test
mov
sti
mov
rcll
add
push
mov
inc
mov
mov
push
icebp
push
loope
shll
rol
and
adc
add
push
mov
inc
mov
mov
push
icebp
push
loope
shll
rol
mov
xchg
loope
push
mov
inc
xor
xchg
jbe
push
icebp
push
loope
shll
rol
xlat
and
adc
add
push
mov
inc
mov
or
xchg
jbe
jno
sahf
push
fldcw
leave
ds
push
mov
mov
ret
lock
sub
and
dec
add
jo
pusha
sbb
inc
repz
mov
mov
rorb
and
dec
add
sbb
pusha
sbb
inc
and
or
loopne
shlb
jnp
pop
add
and
aaa
insb
js,pt
mov
clc
mov
in
pop
mov
shrl
push
fld
js
xor
cmp
mul
mov
add
mov
bswap
incl
movsb
add
mov
adc
cli
dec
xchg
clc
fisubl
and
lods
movsb
dec
mov
les
pusha
call
cmc
xchg
test
push
push
loope
mov
cmp
dec
xchg
mov
mov
sub
jle
push
lock
or
fistpll
cmp
dec
add
and
pusha
dec
push
jle
jle
jmp
and
outsb
shlb
push
sub
fdivs
andl
jae
call
sub
pop
push
sbb
mov
mov
mov
shlb
rorb
push
add
xor
sub
nop
movsl
adc
fimuls
sbb
and
jne
je
xor
outsl
sub
aad
lds
lret
mov
sub
inc
daa
gs
push
dec
popa
outsb
push
dec
das
mov
fsubr
stos
loop
in
fisubrs
sarb
and
dec
add
jo
pusha
sbb
inc
sti
mov
mov
mov
rorb
and
dec
add
jo
pusha
sbb
inc
sti
mov
enter
inc
testl
cmp
insb
aad
fs
cmp
jecxz
xor
mov
lahf
mov
mov
dec
fstpt
xor
rorb
push
ljmp
add
cmp
insl
inc
pop
sub
std
push
movsb
popa
and
dec
or
out
test
xchg
inc
rcrb
cmc
aam
sarb
push
pop
mov
outsb
mov
loope
xor
inc
pop
and
and
loopne
outsb
inc
hlt
jle
mov
int3
fcompl
std
jecxz
scas
popf
je
insl
pop
iret
cmp
cmp
popl
icebp
int3
outsl
and
sub
mov
out
dec
nop
xor
xchg
sbb
mov
cmp
dec
das
out
pop
jb
stos
jo
cmp
pop
loopne
nop
daa
mov
sbb
fbstp
sbb
mov
subb
cmp
stos
push
sub
iret
cmpsl
mov
xchg
and
adc
ds
jmp
mov
fisubrl
xlat
mov
dec
hlt
adc
dec
loop
sbb
xor
mov
mov
mov
repz
jmp
pop
das
or
pop
scas
jns
movsb
mov
push
popf
repz
cmp
lods
subl
out
mov
push
xor
imul
mov
push
or
notb
stos
test
lret
mov
aas
push
xor
xchg
and
xor
dec
icebp
sub
inc
ss
daa
sbb
int
mov
pop
scas
sar
mov
out
pop
xchg
and
push
call
sti
cmp
pop
sbb
xchg
push
mov
lret
jp
push
dec
in
adc
stc
sbb
cmp
xchg
push
lcall
bound
sahf
andb
mov
and
ficomps
jnp
push
imul
out
pop
jge
cmovb
outsb
aas
jae
push
loopne
and
mov
push
xchg
cli
cmp
xchg
addr16
mov
clc
add
les
stc
lret
jo
mov
lods
shlb
add
xor
ss
rcll
outsl
mov
inc
mov
push
add
push
cmp
cld
loop
jne
pop
xor
std
fsubs
inc
dec
iret
sarb
pop
iret
popa
inc
test
add
shrb
mov
leave
push
adc
xchg
sahf
sti
in
sbb
int3
or
jge
jne
sti
cmpsl
iret
nop
js
or
mov
jbe
cltd
in
or
test
mov
mov
and
xor
ret
jecxz
sub
xlat
mov
jl
jp
outsb
mov
push
fstpl
dec
les
cld
dec
xchg
xor
mov
jo
test
fidivrl
out
cmpsl
or
lret
jg
jecxz
movsl
push
fcoml
popf
fldenv
fs
sar
fcmovne
xlat
pop
shr
pop
aaa
lahf
test
push
inc
jmp
sbb
mov
jno
and
push
xchg
scas
jmp
pop
sbb
ds
adc
aam
dec
push
add
xchg
mov
lret
mov
data16
or
pop
int3
push
sbb
enter
loop
fisttps
stos
mov
js
test
clc
sbb
fisubrs
test
clc
mov
pop
push
out
ds
rorb
addl
mov
pop
dec
divb
jg
fs
dec
int
and
fimuls
frstor
xchg
mov
and
add
pushl
ja
or
iret
out
inc
xchg
jl
test
rcr
insb
add
pop
mov
jp
add
push
icebp
fimull
sbb
xchg
xor
hlt
mov
ret
dec
roll
insb
outsl
lret
fidivrl
jns
mov
out
xchg
jo
pop
popf
shlb
and
ds
in
adc
cmp
push
setne
test
add
inc
ss
dec
fistl
stos
xor
mov
mov
loope
pushf
addr16
mov
push
stos
lret
cmp
out
test
push
pop
or
je
and
dec
xor
mov
inc
push
ds
cltd
jmp
iret
adc
insb
mov
or
mov
xchg
aas
sbb
add
lret
mov
out
out
movsb
mov
jl
jp
and
and
arpl
pop
sbb
in
push
push
fwait
call
jnp
scas
mov
mov
cmpl
scas
or
out
leave
inc
insl
adc
dec
sbb
mov
add
scas
inc
cmpsb
fbstp
data16
mov
int3
mov
xchg
das
into
dec
call
pop
mov
imul
jmp
xchg
pop
loop
add
insb
shr
mov
es
pop
xor
inc
inc
loop
pop
stos
movsl
dec
fld
call
pop
adc
int
test
dec
loop
addr16
test
rcrb
insb
and
pop
dec
filds
cmpl
std
xlat
or
sarb
xchg
push
les
roll
adcb
fstpt
and
or
fisubrs
das
pop
sbb
and
je
xchg
stos
stos
test
sub
jmp
je
insl
sub
dec
push
out
outsb
hlt
mov
in
cmp
add
push
and
in
pushf
sub
mov
mov
cmp
inc
stos
jns
hlt
mov
dec
in
divl
mov
add
jns
test
cltd
dec
jge
push
sub
jbe
pop
out
aas
mov
aad
pushf
and
cli
insl
iret
sub
repz
pop
je
xchg
stc
fstps
fwait
push
dec
mov
mov
icebp
xchg
xor
cmpsl
push
or
xor
mov
sub
ds
lcall
adc
add
mov
fsts
mov
push
or
into
scas
dec
insb
inc
jnp
push
and
imul
xlat
pop
movsl
sbb
scas
lock
test
jg
pop
cmp
push
and
pop
pop
enter
mov
mul
lret
cltd
dec
dec
mov
enter
push
lea
mov
xor
sub
mov
push
jb
dec
cmp
loopne
pusha
sbb
fucomp
in
stos
pop
pusha
mov
and
cmp
jecxz
ljmp
ret
lods
ds
dec
pop
int
stc
jbe
adc
shlb
mov
push
out
lock
mov
in
outsl
outsl
ror
repnz
add
sub
incb
inc
outsb
xchg
and
mov
add
fndisi(8087
push
sub
sub
mov
shrd
shlb
xor
pop
dec
dec
mov
loopne
movsl
int
pop
push
add
pop
xchg
jmp
repz
dec
push
lret
fisttpll
insb
sub
orl
cmpsl
icebp
mov
xor
int
lret
movsl
pop
movsb
pop
and
xor
cmp
divl
rcr
in
pop
cmp
fnstcw
xchg
sub
mov
jnp
add
ret
popl
iret
mov
xlat
jmp
lahf
and
inc
shlb
sar
ficompl
jl
adc
xlat
lods
daa
test
push
jns
dec
or
push
shll
mov
push
lock
stc
pop
aas
sub
xor
scas
add
aaa
and
mov
jo
adc
sbb
and
bound
pop
mov
push
push
repz
pop
ss
cmpsl
and
and
sti
in
push
scas
jge
sbb
enter
cltd
loopne
pop
mov
pop
mov
jge
mov
add
push
mov
fsts
repnz
xchg
rclb
repnz
sub
rclb
xchg
and
stos
mov
push
inc
cmp
xchg
adc
push
mov
hlt
and
xchg
repnz
mov
mov
add
inc
mov
idivl
js
mov
mov
dec
and
imul
push
lahf
xor
add
hlt
inc
cmp
ljmp
lahf
sub
lcall
and
js
sbbb
push
xor
mov
push
rcrb
les
push
xor
aas
test
push
push
cmpsl
pop
xchg
incb
das
or
pop
pusha
sti
mov
inc
sub
mov
push
and
jns
xchg
or
jns
xchg
loop
cmpb
xchg
ljmp
loopne
sti
fimuls
aam
sbb
std
cmc
in
mov
and
mov
in
into
bound
stos
aam
jae
in
adc
push
addr16
sbb
lret
loope
or
mov
movsb
movsb
int3
and
push
jae
popf
lcall
mov
lret
cmovl
fidivs
adc
fbstp
push
cmpsl
or
outsb
xor
or
scas
xchg
test
xchg
cmpsl
cltd
sub
imul
mov
sbb
int
mov
push
gs
mov
into
xchg
arpl
out
lds
jno
add
cmp
pusha
jmp
js
xor
cmp
jmp
or
sub
mov
jae
dec
jle
xchg
insb
sub
mov
sub
aaa
mov
in
insb
repz
adc
shrl
xchg
je
loopne
mov
pushf
xchg
ja,pt
call
jle
repz
outsl
hlt
sub
push
sbb
inc
enter
outsb
ret
inc
sub
data16
addr16
idiv
clc
shrl
add
pop
mov
push
mov
pop
popa
cmc
in
and
cmpl
pop
repz
stos
movsl
push
cmp
ret
jno
cmpl
cs
xchg
pop
imul
push
popa
pop
fisubrs
mov
pop
roll
int
mov
and
fiaddl
pushf
out
call
sarb
cmc
aad
inc
sub
fsts
imul
xchg
std
mov
mov
pop
adc
pop
sarl
and
iret
pop
out
aad
int
shl
mov
sbb
add
xlat
inc
jne
gs
jb
lock
jnp
in
inc
sub
aas
or
adc
icebp
int3
call
mov
call
icebp
popf
mov
xacquire
lret
sub
cmc
jl
pop
pop
pushf
fs
xorb
jne
mov
mov
movlps
pushf
pop
and
jl
loopne
arpl
mov
dec
sbb
mov
jg
stos
adc
push
pavgw
fldt
lahf
jl
xchg
hlt
xor
pusha
sbb
int3
pop
sub
xor
aaa
mov
pop
cmp
in
fcomp
jg
inc
pop
jae
xchg
cmp
int
add
mov
shrl
adc
lds
mov
push
push
or
rcr
dec
adc
mov
mov
cmp
adc
cmp
pusha
leave
sbb
xchg
imul
rcr
ljmp
daa
and
jecxz
mov
and
mov
push
sbb
cld
leave
and
fnstenv
popf
in
arpl
fxtract
js
mov
fdivrp
sbbl
jg
add
adc
les
rorl
jae
pop
roll
push
movsl
lods
fistl
imul
jns
xchg
inc
mov
xor
lock
and
cmp
loop
lods
outsl
cwtl
repnz
pop
sbb
xchg
or
add
xchg
aaa
xrelease
les
test
out
dec
lar
movsl
imul
inc
test
push
push
dec
imul
add
daa
ljmp
fcoml
dec
cmp
or
dec
pusha
rclb
or
jnp
or
ret
stos
call
stos
es
shlb
fwait
js
add
pusha
dec
pop
mov
jne
or
push
jbe
push
stos
cmp
jl
jbe
or
add
orb
mov
push
repnz
mov
sarb
mov
adc
sub
push
xor
or
ds
jno
addr16
fcomp
in
adc
or
scas
adc
sub
mov
or
fimull
push
sbb
pop
repz
pop
int
setge
push
inc
mov
push
inc
pop
fsubl
mov
ljmp
repz
cmpsb
loop
pop
jg
mov
add
or
inc
icebp
jge
xchg
mov
sbb
fnstcw
call
jecxz
mov
push
scas
push
push
js,pt
mov
or
movsb
imul
xchg
push
mov
test
xchg
dec
cmc
push
stos
sti
ljmp
sti
sahf
lods
jb
gs
jb
sub
mov
imul
outsb
cmp
xor
ficoms
sbb
dec
push
or
out
pop
pop
pushf
inc
mov
add
repnz
push
popf
cwtl
jns
xor
pusha
imul
std
popa
out
jns
or
pop
mov
imul
nop
sub
jmp
fwait
cltd
ret
sbb
add
je
idivl
xchg
sbb
mov
daa
stc
sub
fsts
fimuls
mov
mov
sub
pop
in
ret
fisttpl
adc
mov
mov
push
adc
mov
pop
jnp
lods
int3
mov
test
addr16
outsb
lcall
scas
pop
dec
inc
shl
leave
add
fiadds
outsl
dec
xor
fcomps
sub
cmp
and
dec
sub
inc
dec
jno
in
cmp
pusha
pop
adc
clc
lock
add
call
pop
dec
and
add
jmp
inc
jge
mov
pop
jns
movsl
dec
mov
fs
daa
lret
ja
es
sbb
fsubl
shl
scas
imul
and
sub
mov
or
movsl
cli
sub
mov
add
roll
jl
mov
pop
adc
aam
or
je
sbb
xor
push
lea
cli
push
inc
aam
jp
ljmp
stc
jns
dec
gs
mov
int
add
imull
fsubr
add
lea
inc
adc
adc
inc
int3
cli
stos
loop
xchg
xor
lret
imul
jae
adc
hlt
cmpsl
dec
xor
jae
or
push
and
pop
insb
ret
lret
mov
jp
iret
imul
cmp
les
stc
mov
popa
arpl
push
xchg
test
mov
stc
or
mov
sub
gs
insl
xchg
icebp
pushf
inc
call
gs
mov
les
jmp
sahf
push
jo
or
js
lods
jo
cmpsb
mov
push
into
or
xchg
sbb
jg
test
or
add
aas
cwtl
add
xor
jmp
mov
enter
or
lds
outsl
pop
int3
popa
lods
fldl
rcr
xlat
pop
rcrl
push
sub
and
decb
xchg
sub
aad
sub
sahf
jmp
cmp
ljmp
cmp
jns
fstp
sub
jo
stos
shl
std
mov
std
lret
mov
adc
push
push
shrb
xor
subl
cmpsb
int
cmpsb
dec
lods
xor
add
rep
push
sub
loopne
cld
jns
mov
test
hlt
inc
jae
mov
fprem
mov
pop
xchg
xor
sub
das
in
icebp
push
insl
sbb
adc
sbb
push
dec
dec
cmp
lahf
fistl
mov
jmp
push
inc
into
in
jbe
cwtl
mov
xchg
push
ja
es
nop
sti
into
push
imul
lock
mov
jge
adc
mov
dec
add
hlt
pop
push
nop
lcall
bound
andb
jecxz,pt
adc
cltd
xchg
cmc
jb
push
icebp
pop
dec
dec
mov
adc
sbb
dec
or
imul
out
sub
cmp
subb
cmpsb
sbb
xchg
lea
lret
mov
add
push
sar
dec
ljmp
adc
fdivr
in
xchg
shrl
call
or
outsl
fnsave
aad
fwait
data16
push
out
mov
add
fldenv
and
jno
mov
adc
arpl
mov
push
sbb
aaa
xchg
inc
orb
xchg
jo
and
mov
push
pusha
sub
adc
add
dec
or
cmpl
aas
xlat
dec
mov
stc
mov
add
lea
cwtl
or
adcb
jb
push
pop
repnz
pop
fcmovnb
pop
lret
dec
fadd
mov
add
std
cltd
pop
int3
sbb
bound
scas
ret
and
jno
nop
mov
jb
pop
push
pop
xor
inc
testl
push
loopne
fs
mov
loop
jp
pop
inc
es
loop
push
test
addr16
and
stos
fwait
rsqrtps
fdivrs
push
andb
or
jge
cmpsl
popf
inc
out
mov
xchg
decb
dec
jl
xorb
adc
pop
das
leave
inc
daa
mov
mov
mov
pop
xchg
push
jle
mov
and
jae
dec
add
outsl
fistps
mov
lods
xlat
and
lret
mov
daa
arpl
bound
mov
popl
mov
bound
mov
jns
je
add
test
test
or
dec
pop
xor
lret
movb
sarl
jmp
push
ss
cmp
rclb
xor
xchg
jnp
pop
and
cmpsl
pop
mov
mov
add
lods
outsb
cmp
sub
mov
sbb
dec
push
or
cmp
repnz
cld
and
aas
es
mov
mov
sbb
push
xchg
inc
clc
cmp
mov
jns
int3
xchg
iret
lds
and
cmpsb
loopne
sahf
jae
mov
les
xor
out
adc
leave
insb
mov
inc
cli
insl
in
arpl
enter
in
xor
xchg
sub
xor
les
int
push
ds
sbb
xor
fnsave
mov
sub
insb
jo
adcl
inc
dec
adc
pop
push
sub
mov
fisubrs
mov
cmp
mov
jp
in
pop
adc
mov
and
push
mov
push
ljmp
popa
cmp
mulps
dec
orl
xchg
adc
das
xor
cmp
jge
aas
rcrb
shrb
cld
lcall
adc
mov
fstps
filds
cmp
cmp
jmp
xor
and
sbb
cmp
mov
outsl
andl
js
inc
ret
and
leave
aas
dec
add
push
xchg
push
mov
int3
xchg
gs
add
push
or
subb
std
lds
enter
dec
bound
add
sbb
and
in
dec
into
push
pop
adc
std
xchg
pop
or
popa
xor
adc
sbb
pop
dec
std
or
aad
stc
adcl
es
lret
adc
mov
pop
add
dec
or
jp
scas
add
fcompl
cmp
and
lret
subl
nop
cwtl
in
jns
mov
pandn
scas
adc
jns
out
fwait
push
icebp
lds
outsl
jne
xor
cs
push
or
popa
add
roll
mov
popa
jp
mov
and
mov
push
movsl
mov
cmp
ret
mov
xor
push
rcrb
xchg
mov
sub
scas
xor
insl
sub
ret
pusha
adc
mov
lcall
push
das
adc
sub
aas
lahf
cld
outsl
outsb
mov
repnz
cs
test
inc
pop
out
jg
jae
pushf
mov
fs
aaa
sbb
push
aaa
jns
mov
mov
ljmp
xchg
adc
leave
cmp
nop
or
dec
ja
jecxz
dec
mov
or
scas
jmp
movsl
add
in
mov
or
and
mov
out
das
sub
out
xchg
outsb
inc
rorl
cmpsb
cmp
pop
cmc
xchg
ds
and
std
popf
sub
sub
scas
mov
jb
and
mov
push
jle
push
mov
je
inc
and
xor
cmpsb
pop
fs
inc
out
in
cltd
es
stc
sbb
xchg
imul
adc
jmp
mov
mov
int
push
addl
sbb
pushf
xchg
cmp
stos
adc
shr
jae
es
adc
fs
hlt
xchg
or
push
mov
cmp
cmp
movsb
rclb
adc
xchg
test
jo
or
sub
add
mov
pop
cmp
xlat
cmpb
mov
jnp
imul
adc
cmp
pusha
sbb
inc
sti
mov
mov
mov
rorb
and
dec
add
jo
pusha
sbb
inc
sti
mov
mov
mov
rorb
and
dec
add
jo
pusha
pop
push
cmp
mov
mov
mov
rorb
sarb
mov
adc
dec
clc
mov
mov
in
sbb
pop
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
lock
rorb
in
jo
pusha
sub
sbb
or
jl
sub
pop
add
loopne
rcrb
in
nop
faddl
sub
sbb
or
jl
insb
adc
lock
rorb
or
add
and
pop
cs
or
outsb
dec
mov
clc
mov
lock
das
mov
mov
pop
mov
xlat
inc
test
pop
in
and
add
adc
orl
iret
mov
mov
test
dec
loopne
stos
mov
in
fldt
jo
or
scas
sbb
int3
nop
jl
pop
jne
rorb
loope
cmpsb
popf
inc
cwtl
mov
mov
outsb
xor
jo
fucom
data16
das
dec
cmp
mov
xchg
push
mov
cld
stos
adc
jns
sub
mov
pop
adc
push
xchg
popf
and
dec
aaa
popa
out
outsl
pop
or
ret
or
or
and
scas
mov
rorb
or
cmp
sub
sbb
or
jl
insb
adc
mov
mov
fisubl
lods
cmc
mov
fs
xor
bound
dec
adc
repz
xchg
out
pushf
movsl
fcomi
cltd
int3
ret
or
jns
inc
adc
pusha
push
adc
sub
and
call
mov
int3
jo
pusha
sub
sbb
or
jl
insb
adc
lock
rorb
or
cmp
sub
sbb
or
jl
insb
adc
lock
in
push
cmp
scas
mov
dec
std
addb
and
pop
adc
push
filds
cmp
cli
js
xor
push
ret
out
stos
inc
cmp
loope
push
lahf
xor
aas
decb
pop
or
aaa
mov
or
sbb
xor
xor
mov
jae
push
insb
stos
cmpsb
mov
leave
std
out
mov
dec
and
pop
imul
add
scas
pop
imul
cwtl
fdivs
jb
xchg
xchg
pushaw
mov
add
cld
jns
cld
jne
and
mov
cli
fnstenv
lods
adc
ja
mov
push
adc
leave
add
shrl
and
call
push
in
xor
daa
sbb
lock
xchg
pop
sbb
ss
enter
jge
adc
clc
jno
xor
out
jae
aad
jo
dec
popf
mov
loopne
jo
jl
cwtl
cmp
cwtl
push
cwtl
shr
clc
jae
dec
and
repz
test
out
repnz
cmpsl
pushf
adc
gs
dec
subb
xchg
xchg
dec
fcmovnu
add
push
cmpsb
sub
aaa
adc
cmp
jmp
push
out
roll
mov
push
add
jmp
shll
subb
adc
cvttps2pi
fidivl
xchg
loop
xchg
pop
enter
adc
jge
or
mov
mov
jbe
sub
test
xor
sbb
cmpsl
bnd
outsl
mov
test
dec
mov
ficompl
movsl
int3
movsl
in
mov
cmp
mov
sbb
dec
inc
mov
sub
push
jnp
out
mov
inc
pop
xchg
mov
mov
mov
jg
call
and
dec
cmp
mov
int
cmp
mov
stc
cmp
test
cmp
adc
jmp
stc
fisubs
push
inc
adc
pop
pop
jl
loop
bound
sub
rorl
cmp
xchg
cmp
inc
or
repnz
setl
or
jne
lds
xchg
lock
dec
fiaddl
in
add
jae
dec
in
nop
add
dec
mov
and
xchg
arpl
orl
mov
insb
or
mov
mov
cs
push
aad
into
push
ljmp
cmpsb
popa
sub
dec
lret
loopew
pop
repnz
in
inc
lret
pop
frstor
jae
adcb
aaa
cmp
or
rolb
and
sarl
ret
xchg
call
mov
mov
mov
and
fsubl
cmp
mov
arpl
mov
dec
inc
dec
pushl
xor
inc
sub
mov
shrl
push
push
pop
push
test
push
inc
add
fbstp
lea
cmpsl
jecxz
jo
popf
repnz
out
mov
into
lods
xchg
push
dec
sub
gs
out
pop
idivb
std
cwtl
xchg
outsl
mov
dec
popf
es
lahf
or
test
lret
std
adc
push
mov
leave
inc
adc
cmc
dec
sub
jg
mov
mov
call
data16
std
mov
jno
add
rcl
test
push
fwait
inc
sbb
insl
push
movsb
repz
push
outsb
cmp
cmp
adc
aas
adc
sbb
cmp
cmpl
sub
mov
test
jno
cmp
or
pop
lods
mov
stos
xchg
pushf
jbe
mov
push
sbb
scas
in
xor
inc
test
pop
mov
test
xchg
enter
dec
push
pop
mov
cmp
pop
or
mov
outsl
push
into
rcll
fcoms
adc
mov
mov
or
inc
xchg
ss
ljmp
push
je
lock
pop
sub
dec
xchg
mov
fidivs
or
ret
scas
jmp
sub
dec
js
push
js
jmp
mov
adc
movsb
sbb
or
call
dec
insb
shrl
jge
jmp
sahf
loopne
int3
mov
int3
pop
test
mov
fldt
mov
add
lahf
cmc
jns
mov
push
xor
and
out
cmp
mov
jno
rorl
nopl
out
or
mov
sub
ja
mov
sub
xchg
sub
or
andl
pop
mov
call
fs
mov
stos
cmpsb
xor
adc
cmp
orl
xchg
fsin
loopne
jns
lcall
sub
cmpsl
cmp
xchg
arpl
and
xorb
push
dec
cwtl
jne
xor
loop
rol
sub
sbbb
xchg
lahf
add
jp
jg
push
cs
mov
mov
adc
xlat
ret
test
repnz
popa
inc
xor
pusha
loope
test
insl
and
imul
mov
enter
adcb
push
add
testb
jns
nop
or
scas
fmuls
addr16
divb
cli
in
imul
dec
ret
ret
test
ds
jb
cmp
cltd
mov
jnp
pop
out
xchg
or
xchg
jmp
aad
mov
addr16
push
or
add
xchg
cmp
out
ljmp
nop
add
inc
sbb
or
mov
xchg
cmp
dec
lret
fwait
mov
pop
imul
cmp
sub
inc
push
or
aam
insl
pop
stos
mov
adc
aas
and
sarl
cmovnp
inc
mov
push
loope
push
or
push
clc
adc
pop
out
push
filds
xor
xchg
ret
mov
das
push
rcl
dec
jg
xor
xlat
mov
push
fsubs
mov
push
test
xor
stos
dec
push
lahf
mov
pop
jmp
push
enter
and
in
ss
xor
xor
aam
pop
es
adc
out
imul
push
push
js
fcoms
lcall
in
arpl
in
mov
rcrl
das
lret
lods
nop
inc
xchg
sub
sub
mov
sbb
rcl
dec
faddl
dec
pushf
ror
and
pop
mov
fisttps
adc
aam
sub
xor
shrb
push
sbb
ret
inc
and
fisubs
push
xchg
lret
dec
jbe
out
cld
ret
push
sbb
xor
out
adc
sbb
add
or
sbb
and
mov
sti
clc
sti
or
and
jb
mov
mov
and
outsb
jmp
jl
test
xchg
inc
mov
and
insb
or
movb
mov
xlat
mov
cltd
sahf
daa
pop
cmpsl
addr16
mov
imul
inc
test
mov
lahf
cmp
xchg
add
jnp
jp
pop
hlt
mov
popf
and
sar
test
mov
mov
and
lcall
pop
leave
or
adc
jne
pop
mov
jnp
sub
pop
mov
jno
jnp
out
repz
nop
sub
rol
test
test
popf
mov
xchg
pop
dec
or
mov
or
sarb
mov
adc
dec
hlt
xchg
ret
push
cmpl
aad
repz
cld
jbe
dec
inc
sub
mov
and
cmp
xchg
shl
sub
inc
movb
mov
sub
pop
pushf
shld
shld
and
fsubrs
jg
dec
xchg
insl
mov
pop
test
in
xchg
jnp
outsb
test
aas
cwtl
adcl
push
xor
sub
jg
and
and
mov
xchg
leave
insb
lret
sbb
sbb
cmp
inc
mov
push
movsl
add
sbb
cmp
adc
das
add
mov
dec
adc
or
gs
push
mov
test
add
clc
mov
stos
xchg
or
int
inc
xchg
inc
cmp
mov
sarl
ficoms
jne
inc
jo
insb
and
dec
std
mov
pop
xchg
dec
insb
xor
lea
ret
imul
in
fildll
mov
cs
mov
inc
stos
popa
orb
insb
out
test
nop
hlt
dec
xchg
int3
jb
jns
stc
repz
sti
outsl
dec
mov
push
call
repz
jbe
in
rorl
movsl
jle
push
inc
ret
fcmovnbe
adc
push
arpl
fwait
sbb
push
js
xchg
into
jo
cltd
icebp
cmp
imull
and
inc
fwait
xor
aam
or
jnp
dec
adc
icebp
cmp
cld
loope
leave
jl
in
push
outsl
inc
int3
aas
sahf
icebp
sbb
lds
xor
out
ds
cwtl
xlat
stos
loope
mov
cmp
mov
inc
sbb
ficoml
xor
imul
icebp
loope
aam
cmpsb
dec
cmpsb
jo
xorb
ret
or
dec
jno
pop
out
pcmpeqb
adc
mov
andl
dec
cmp
loopne
adc
push
xchg
and
jl
jmp
and
scas
push
or
jl
cmp
mov
mov
jmp
adc
dec
xchg
sbb
push
push
mov
xorl
jb
pop
fistps
cmc
xchg
fwait
loop
icebp
inc
in
test
ja
jg
out
es
or
in
ret
loopne
dec
cwtl
loope
lahf
test
scas
push
jnp
divb
sub
int3
in
inc
and
outsl
xchg
xchg
out
scas
in
pop
push
mov
mov
sbb
pop
pop
mov
inc
jo
stos
push
xchg
notl
push
mov
jl
sarb
std
push
popf
push
lods
mov
and
inc
mov
stos
push
xchg
mov
or
xor
icebp
arpl
cmp
mov
xor
push
pop
in
cmp
sub
inc
xor
push
rorb
clc
push
mov
jge
dec
or
and
scas
pusha
dec
mov
xchg
pop
xor
xchg
les
and
jp
mov
pop
jle
xchg
ret
mov
mov
xchg
pop
mov
shl
inc
and
adc
add
call
push
movsb
add
sbb
adc
in
stos
or
test
mov
mov
mov
sub
nop
jp
pop
adc
push
movsl
je
xchg
inc
jl
push
ret
fbstp
dec
xchg
dec
out
decl
pop
mov
mov
pop
stos
pop
add
cmp
or
xlat
mov
pop
subb
xchg
cmp
repnz
hlt
mov
loopne
push
sub
inc
mov
aam
hlt
add
cmpsl
mov
div
or
mov
shll
leave
xchg
jno
lret
ja
add
jmp
movsb
stos
xor
arpl
out
pop
pop
fildl
out
xchg
cwtl
icebp
insl
sbb
fwait
loop
push
mov
movsb
pop
in
pop
mov
dec
pop
and
popf
pop
push
cmp
cwtl
xchg
push
dec
adc
xchg
mov
xor
inc
pop
mov
and
movsl
in
fcompl
out
lock
inc
bound
xchg
std
jmp
sub
sbb
cmpsb
push
cmpsb
mov
fs
sbb
out
jns
xor
ret
and
decb
je
sub
xchg
and
mov
push
cmpsl
cmp
fstl
cld
xbegin
pop
jp
push
je
std
mov
and
pop
fcomps
push
xor
cmp
cmpsb
les
aad
hlt
xchg
lock
add
push
daa
add
pop
add
jp
lret
mov
mov
inc
sub
xor
mov
jecxz
cmp
add
push
insb
jp
outsl
mov
arpl
sub
and
stc
fldcw
loop
mov
out
leave
fsub
mov
dec
mov
repnz
mov
out
fistpll
and
and
mov
dec
sub
ja
loopne
popf
xchg
xor
adc
roll
pusha
sbbl
dec
or
push
out
les
push
int3
into
pusha
mov
cmpsb
and
pop
cmc
adc
mov
bound
and
mov
mov
pop
mov
mov
negl
xchg
icebp
lahf
in
cwtl
lods
adc
adc
js
mov
lahf
mov
mov
repnz
jle
ds
cld
sar
dec
icebp
jns
mov
push
dec
clc
pop
iret
mov
lahf
dec
outsl
push
adc
idiv
mov
jne
int3
mov
sub
lock
xchg
ret
inc
shrl
jb
cs
nop
mov
lods
lea
xor
fsubl
rclb
adc
mov
pop
enter
mov
mov
cmp
in
xor
mov
fcmovb
enter
in
inc
cmpsb
or
int3
fsubs
jb
jbe
mov
cli
mov
aam
sbb
xor
pop
outsb
xchg
addr16
ss
je
pop
xor
or
popf
mov
mov
out
and
pop
push
jno
push
pop
push
jle
dec
push
cmpsb
push
jo
cmp
pop
int3
aas
xchg
mov
mov
stos
call
in
push
pop
cld
js
pop
or
mov
pop
push
loop
out
pop
push
or
shlb
aaa
nop
mov
loope
mov
repz
and
push
jmp
stc
ret
cmp
pop
mov
pop
and
stos
mov
and
mov
mov
fistpll
ret
inc
and
sbb
sub
mov
push
pop
jg
cmp
xlat
aad
faddl
int
jns
xchg
xchg
dec
sbb
sbb
jne
adc
xor
pusha
or
mov
cmp
pusha
out
mov
imul
push
insl
int
imul
pop
test
pop
jne
subl
into
jno
dec
pop
clc
pop
in
and
xchg
dec
cmp
aaa
sub
add
dec
xor
test
inc
pop
xchg
in
cmp
test
fisubs
lret
ret
bnd
or
jo
cmp
testb
ficompl
in
xchg
pop
push
dec
mov
inc
aam
pop
mov
outsb
icebp
inc
mov
xchg
nop
push
add
notb
and
int
pop
jmp
jl
out
xchg
mov
pop
shll
xchg
adc
lods
cmp
jmp
int
pop
fbstp
repz
mov
fdivrl
add
ficomps
jns
cmp
xchg
dec
or
and
imul
jg
imull
jle
and
xor
int
es
iret
xor
cmp
xchg
addl
es
les
loop
sbb
enter
cli
aas
int
lcall
jae
test
mov
rdtsc
cmpsb
dec
stc
inc
sbb
mov
jmp
and
out
mov
add
add
mov
mov
popf
bound
test
mov
mov
push
fs
pop
jno
inc
adc
inc
ja
pop
cs
cmp
fdivr
ja
inc
or
out
inc
movsb
inc
sbb
lds
fnstcw
or
lods
lahf
cmp
icebp
xchg
loope
jne
mov
popf
jbe
adc
mov
fnstenv
lret
ljmp
fcmovu
inc
mov
incb
js
or
pushf
pop
mov
push
out
outsl
call
push
pop
iret
mov
sbb
and
aaa
insl
cltd
push
aas
fcmovnb
mov
pusha
mov
pop
aad
or
sub
xchg
xchg
ret
xchg
cmpsb
or
imul
mov
jmp
jp
push
push
mov
in
test
fisttpl
mov
in
xlat
pop
push
aas
sahf
and
inc
pop
cli
push
lock
and
ljmp
aam
out
aad
inc
out
push
inc
lea
mov
adc
leave
jo
in
jbe
adc
push
dec
outsl
stos
sbb
mov
bound
xchg
xor
cli
or
mov
pusha
in
cs
jge
out
popa
es
dec
fstps
cmp
adc
mov
adc
inc
sbb
sahf
pop
and
sub
or
das
cmc
aas
mov
adc
mov
cmc
stos
inc
dec
sub
xchg
sbb
mulb
scas
xor
jb
adc
test
cltd
mov
jecxz
int
hlt
pop
add
and
incl
cmp
dec
out
add
fwait
cwtl
int
dec
lcall
dec
arpl
enter
cld
sbb
and
lret
mov
xchg
gs
adc
mov
cmp
gs
decl
mov
cmp
adc
ljmp
sbb
movsb
in
jmp
push
fwait
enter
push
jg
inc
and
mov
xlat
in
or
xchg
lret
mov
mov
mov
inc
shll
movsl
imul
scas
pop
mov
repz
pop
js
dec
outsb
dec
dec
xchg
insb
push
adc
mov
push
repnz
xor
mov
dec
push
pop
clc
test
out
es
adc
xchg
and
addb
jge
mov
sbb
pop
mov
daa
and
dec
int
ja
xchg
je
enter
mov
fidivrl
adc
shr
jnp
sbb
mov
test
or
rcrb
movsb
cwtl
packssdw
mov
or
aad
xor
jl
in
or
cmp
pop
inc
inc
je
lods
cmp
dec
hlt
pop
mov
std
add
in
mov
das
stos
add
cs
mov
lcall
dec
lock
pop
add
pop
hlt
mov
arpl
jb
scas
mov
mov
lret
les
inc
sbb
pop
rcll
fsubl
idivb
cld
pop
pop
lret
adc
xor
lret
test
movsb
pop
pop
inc
icebp
or
nop
orb
xchg
lret
es
dec
int
jnp
jmp
or
into
xchg
xchg
nop
movsw
xor
std
aas
pop
adc
push
or
icebp
push
jmp
sub
xchg
pop
dec
sub
pop
push
out
xchg
movsb
into
jmp
jnp
and
ss
mov
push
scas
mov
jno
movl
cmpb
loopne
clc
pop
hlt
pop
or
inc
loopne
lock
inc
jne
and
and
push
ret
dec
shrb
jns
xchg
movsl
aas
lods
loope
lahf
jne
lahf
mov
stos
jl
fimuls
imul
adc
pop
imul
or
pop
mov
inc
pop
mov
call
jns
pop
sbb
andb
shll
mov
jns
cwtl
xchg
and
into
stos
jno
cmpl
cli
mov
ljmp
outsb
push
cmpsb
popl
je
mov
inc
cmp
ja
repz
and
hlt
andl
pop
xor
addr16
scas
push
sbb
int
sbb
out
enter
xchg
pop
and
jne
lcall
mov
add
jo
insl
divb
lds
xor
xchg
es
and
rorb
sar
pop
or
jmp
insl
cld
mov
add
jnp
icebp
push
sar
pop
mov
iret
lods
mov
jnp
add
hlt
ds
mov
ljmp
ret
mov
fisubl
cmp
adcb
sub
pop
jnp
dec
fcomps
jmp
hlt
iret
out
je
out
xor
or
test
push
das
fisubrl
stc
ss
xor
sti
or
scas
mov
push
lea
lock
pop
inc
pusha
lret
cltd
loope
ret
mov
push
jbe
jno
xlat
icebp
clc
aas
adcl
pop
inc
add
lods
and
pop
cld
jge
xchg
std
jl
adc
xor
and
mov
mov
enter
aaa
sub
scas
mov
dec
andl
add
fcomi
push
arpl
xchg
lock
popf
ret
jo
pop
push
mov
mov
out
mov
push
pop
scas
adc
cmpsb
mov
mov
or
push
sbb
orl
xchg
lcall
mov
jo
cmp
sti
pushf
or
sub
adc
mov
inc
sbb
push
push
adc
jecxz
mov
sbb
dec
cmp
imul
clc
test
xor
clc
sahf
addl
incl
mov
in
dec
dec
push
ret
sahf
sarl
mov
pop
add
int
add
mov
jl
imul
shr
enter
sbb
ret
ficompl
xchg
push
lock
inc
pop
mov
push
push
int3
or
pop
add
into
inc
jne
adc
xor
push
sbb
or
cld
mov
int3
jo
pusha
sub
sbb
or
jl
insb
adc
lock
rorb
or
cmp
sub
sbb
or
jl
insb
adc
lock
rorb
fldl
sub
xor
insb
adc
lock
rorb
pop
xorb
ret
pusha
xchg
sbb
jnp
hlt
test
out
mov
mov
dec
pop
cmp
or
inc
loope,pt
fistpl
lret
outsb
mov
pop
mov
pop
sahf
dec
out
cmp
sub
sbb
outsb
ds
ds
ficoml
lret
outsb
fimuls
dec
fwait
pop
mov
pop
xchg
cmp
sub
sbb
or
sti
sbb
movsl
outsb
std
adc
adc
or
aaa
rcrl
mov
call
les
sbb
push
test
lds
xchg
jg
xchg
outsl
dec
das
jnp
jnp
xor
mov
cmpsb
dec
xchg
dec
subl
stos
outsb
lock
and
stos
jge
fmuls
rcrb
jns
shr
fstl
xchg
dec
push
pop
inc
scas
imulb
sbb
xor
fucomip
movsl
pop
aas
adc
sbb
jle
vdivss
add
les
add
decb
and
lret
xchg
call
dec
imul
jge
in
inc
adc
cmp
sti
mov
jae
dec
xor
stos
sub
je
jnp
imul
out
sub
sbb
or
sti
es
fildl
lret
jbe
stos
push
fwait
pop
int
jnp
adc
sbb
or
jle
jg
mov
jge
jp
outsb
iret
sbb
cmp
xor
rcll
pop
loope
out
sub
dec
lea
push
mov
adc
cmp
cmp
divb
cmpsb
or
sub
sbb
or
sti
ds
fistpl
lret
outsb
mov
pop
mov
pop
sahf
dec
out
cmp
sub
sbb
or
sti
ds
fistpl
lret
outsb
mov
pop
mov
xor
mov
call
sahf
mov
pushf
or
cs
mov
aam
mov
pop
mov
jae
pop
aam
dec
inc
and
dec
mov
lock
jo
imul
dec
mov
dec
push
outsb
push
sub
subl
pop
das
inc
sbb
xor
mov
aad
pop
push
mov
hlt
insl
mov
inc
push
mov
and
or
ljmp
mov
bound
sbb
inc
arpl
inc
imul
test
jo
mov
stos
or
jmp
dec
mov
daa
fs
ljmp
call
pop
push
popf
das
fiaddl
push
mov
std
mov
jle
ljmp
sub
ss
fcmovu
inc
aad
jmp
or
xchg
incb
and
sub
add
or
imul
lock
test
inc
dec
or
outsl
push
dec
jmp
cld
jbe
sub
jmp
add
stos
sub
cltd
data16
mov
jne
inc
loopne
jmp
dec
xor
jp
lods
jp
fistps
push
and
or
mov
push
std
rolb
mov
test
jae
daa
mov
push
dec
inc
int3
ret
and
push
stos
push
sbb
jecxz
loope
enter
sbb
in
pop
jbe
mov
loope
cmp
dec
sbb
sbb
roll
icebp
daa
cmp
mov
jmp
xor
enter
cmp
cld
pop
mov
push
xor
aad
cmovne
loopne
fdivl
insl
jge
shl
push
add
ret
dec
add
ds
movsb
shll
les
or
adc
lret
aam
lods
push
jge
stc
sub
mov
and
rolb
jne
out
fstl
mov
pop
popa
out
jge
stos
lahf
pushf
mov
mov
ret
sub
pushf
movsl
lods
bound
sbb
pop
bound
cmp
movsl
outsb
cmp
clc
out
scas
imul
jl
mov
mov
jg
pop
rclb
jle
adc
xchg
lods
loop
jns
xor
int
dec
push
jle
call
mov
shrl
push
inc
icebp
out
test
ret
push
mov
xchg
out
popf
xor
mov
hlt
and
movsb
ds
addr16
imul
or
fsts
mov
nop
push
add
add
jl
jo
lea
daa
push
outsl
fisubl
fsub
fiadds
shr
insl
scas
stos
test
dec
setnp
testb
loopne
xchg
or
pop
xor
push
mov
pop
or
pushf
loop
lcall
dec
mov
ss
sub
out
inc
sbb
fnstenv
faddl
mov
add
cmp
sbb
pop
mov
cli
inc
mov
add
shll
dec
lods
ds
arpl
pop
add
fs
popf
jge
inc
notb
xor
mov
dec
repnz
jne
pop
loope
sbb
in
out
jns
add
das
push
out
dec
add
pop
dec
test
ds
cmp
jg
lret
fwait
mov
or
mov
cwtl
ret
mov
stc
or
jl
xchg
or
sar
mov
adc
bound
in
lahf
push
es
jp
jg
addr16
cmpb
out
fisttpll
pop
pusha
sbb
push
sti
xor
out
imul
and
faddl
sti
push
and
leave
leave
cmp
arpl
aam
test
lret
inc
cmp
add
stos
aam
jo
mov
dec
lret
jne
xabort
dec
mov
fisubs
pop
adc
jmp
xchg
or
imul
adc
out
cmp
push
pop
pusha
xchg
fstl
ret
test
in
fs
or
sti
push
jle
sahf
in
icebp
xor
out
dec
cld
pop
jp
out
loop
cmp
clc
push
insb
testb
jno
shlb
pop
rcrb
cmc
sti
test
mov
pop
cmp
stos
jecxz
rorl
daa
das
or
aas
jbe
stos
inc
rcr
sub
mov
test
lret
dec
pushf
daa
pop
cmp
lret
and
xor
lods
xor
push
jno
lds
loop
popf
adc
cmpsl
imul
dec
jbe
push
fistpl
sti
cmc
pop
in
gs
and
into
push
stc
jnp
leave
lret
jbe
xchg
movsb
push
sti
cmp
stc
mov
call
outsb
js
jl
fisttpl
and
jmp
shl
mov
adc
add
add
pop
dec
mov
pushf
aam
adc
cld
mov
clc
inc
cmp
or
mov
js
cmp
in
flds
push
xor
fwait
adc
pop
jns,pt
daa
inc
cmpsb
test
or
xchg
sahf
jge
inc
cmp
xchg
movl
in
lock
sbb
inc
mov
xchg
je
rcll
cli
xor
xchg
pop
repz
outsb
outsl
scas
into
cwtl
mov
and
fisubrs
pop
outsb
jge
icebp
and
call
xchg
and
lock
prefetch
or
xchg
jmp
jg
loope
dec
xor
lea
pop
jl
and
mov
sub
popf
mov
inc
hlt
imul
loop
outsl
adc
mov
mov
cmpsb
shrb
jne
aad
mov
js
mov
sub
cmp
enter
in
add
stos
sbb
loop
rol
mov
inc
movsb
mov
jbe
or
jle
ss
xchg
je
lea
in
and
jne
xor
bound
cmp
mov
xor
in
dec
lahf
sarl
sahf
jb
mov
loope
ljmp
insb
ret
pop
cmp
addr16
adc
mov
fists
jnp
cli
pop
cmp
and
mov
or
xor
push
out
lea
pop
lods
jmp
leave
rcrl
cli
pop
cs
int
cltd
push
cmp
mov
adc
into
jbe
jg
icebp
and
mov
dec
rcl
mov
test
ljmp
adc
mov
or
mov
ja
mov
add
cltd
cmc
incb
add
fstl
in
sbb
fiaddl
push
notl
and
sub
lods
dec
inc
xchg
sbb
sub
cmp
dec
fnstenv
adc
stos
add
and
fwait
jmp
daa
das
lcall
xchg
inc
pop
cmp
ror
mov
stos
or
psubusw
mov
loope
int
jnp
cmp
addr16
inc
adc
sti
sub
loope
and
ljmp
roll
dec
push
cli
dec
adc
xor
in
dec
mov
pop
sub
loope
xchg
cmp
inc
cmp
test
dec
loope
pop
in
imul
jns
add
je
orb
movsl
out
push
push
pop
and
mov
sub
add
add
xchg
insb
sub
in
cmp
sarb
jge
cltd
and
cmp
sti
sub
test
mov
jecxz
jae
jne
loop
lods
js
pop
std
lods
add
jno
rol
mov
xchg
in
in
mov
iret
push
outsb
or
shll
jl
adc
int
xchg
data16
mov
out
mov
cs
movsb
mov
jmp
rorb
and
add
add
xor
cmp
cmp
out
mov
and
lret
subb
mov
cwtl
lods
shrl
xchg
mov
int
push
cmp
lcall
or
xor
stos
in
mov
in
int
mov
jno
bound
sti
xor
popa
cmpb
scas
loope
or
dec
add
and
in
jge
sub
or
dec
subb
les
xchg
push
push
mov
decb
sub
cli
mov
fwait
pop
rcr
jno
out
and
mov
pushf
loop
dec
xchg
rcl
xlat
popa
mov
and
or
xor
aad
cmp
in
jno
push
push
rolb
add
ret
ficompl
sbb
mov
mov
insl
jb
xlat
pop
ljmp
out
sub
or
inc
std
in
rorl
shll
int3
in
mov
mov
xor
lods
das
sbb
in
mov
mov
xchg
push
fimull
pop
negb
movsb
out
pop
aam
or
cmp
rorb
or
fidivs
sbb
into
popa
xchg
jmp
ss
out
in
lock
xchg
add
lods
sbb
jno
sbb
daa
insl
addr16
fadd
mov
or
xchg
dec
testl
dec
inc
jae
mov
movsl
sub
scas
mov
loope
mov
imul
xor
cmp
inc
adc
mov
pop
jmp
pop
xchg
pop
pushf
negb
xchg
sbbl
or
mov
addr16
shlb
movsb
clc
pop
sbb
mov
pop
mov
sub
push
sbb
add
enter
mul
into
loopne
ret
mov
xchg
je
mov
outsl
push
push
enter
push
in
stc
sbb
lods
int
sbb
cmpsb
pusha
incl
pushl
stos
popa
test
pop
rorb
pop
subb
xchg
sbb
push
mov
ficompl
sbb
pop
mov
adc
jl
or
lret
ret
mov
pop
loop
jo
pop
jecxz
dec
mov
pop
out
jle
mov
fistpl
jmp
add
dec
push
rcll
jp
ficompl
push
xor
sbb
hlt
lret
lcall
xchg
dec
add
mov
dec
dec
cmc
push
mov
stos
mov
fistpll
out
cmp
daa
loop
jns
adc
inc
jp
mov
push
and
or
movsl
addr16
in
pop
mov
pop
leave
xchg
jnp
fisttps
and
stos
lea
cli
stos
xchg
mov
push
xchg
lea
and
mov
push
push
mov
fs
mov
dec
movsl
adc
or
lods
scas
lahf
mov
or
mov
sub
daa
mov
lds
jge
jno
sbb
mov
jns
xor
push
mov
adcl
add
mov
or
xor
mov
dec
pop
test
inc
arpl
lods
fdivr
dec
arpl
cmp
stos
jne
jg
jbe
pop
add
pop
shll
jns
andb
xchg
into
pop
mov
ja
xor
pop
js
fsubrs
pop
aas
popa
subl
inc
mov
or
inc
inc
repnz
inc
sbbb
cwtl
mov
cld
cwtl
faddl
insb
xor
fucom
js
in
lahf
pop
jmp
subb
mov
add
lret
icebp
mov
mov
fildll
jb
pusha
jnp
icebp
shl
xlat
pop
adc
pop
add
inc
sub
add
jp
ljmp
loop
aaa
jl
pop
repnz
fistpll
mov
inc
imul
push
in
mov
lahf
rcrl
xorl
imul
add
add
aad
popf
push
dec
fimuls
xchg
test
bound
push
dec
nop
sub
fmuls
ja
mov
xor
je
sbb
rep
ficoml
xchg
ja
sbb
data16
cwtl
adc
ret
call
int
push
aam
jmp
icebp
or
jge
dec
pop
xchg
fsubs
or
lods
out
imul
xchg
out
jae
cmp
cmc
and
cld
bound
js
shrl
insl
cwtl
je
adc
jl
scas
mov
into
sbbb
cltd
das
dec
mov
inc
inc
fsubrp
cs
push
mov
mov
inc
sub
sub
push
ja
repz
mov
jmp
jb
leave
dec
subl
icebp
cmp
sbb
je
xor
xor
inc
shl
fs
cmp
testl
mov
cwtl
add
xor
jmp
adc
cli
push
add
pop
push
nop
js
lret
dec
push
push
add
mov
add
das
and
adc
pop
fimull
pop
sbb
xchg
jecxz
pop
ss
cmpsb
xor
mov
lods
inc
in
lds
xor
dec
mov
add
call
adc
out
add
outsb
add
sbb
sbb
js
xor
lret
lcall
daa
ljmp
divl
jae
fwait
lods
sub
fstps
adc
divb
sub
loope
sbb
ja
jnp
call
and
dec
or
xor
rcll
hlt
scas
xchg
outsb
daa
daa
dec
ljmp
aad
add
push
pushf
fcom
cltd
movsl
push
mov
stos
mov
mov
or
push
in
mov
dec
mov
mov
mov
pop
cmpsl
dec
xchg
test
addr16
imul
dec
cmpsb
faddl
pop
dec
push
jecxz
aaa
add
sbb
pop
push
dec
xchg
enter
pop
jmp
adc
xor
mov
les
xchg
test
push
push
ret
push
lahf
aam
lea
xchg
adc
cltd
and
stos
fadds
dec
push
xor
negb
xor
mov
mov
jnp
pop
lret
outsl
fmulp
scas
inc
test
push
movsl
cmpsl
xchg
lods
repnz
lea
call
adc
fwait
and
loope
mov
pop
negl
mov
cmp
mov
movsb
and
sub
xchg
xor
push
fs
xlat
dec
and
xor
sub
out
ja
and
add
stos
push
xor
or
and
sahf
xchg
enter
mov
cltd
out
mov
inc
xlat
shl
add
inc
xlat
cmp
dec
fstpl
in
push
cmp
push
pop
push
adc
mov
jl
aas
sub
popa
ljmp
mov
out
jne
cli
cmp
loop
dec
bound
sti
fcoms
mov
ljmp
or
fwait
int
mov
sub
sbb
mov
xor
lea
movsl
mov
push
mov
in
add
test
ja
lcall
daa
mov
mov
jne
push
jae
jo
adc
push
xchg
fs
jecxz,pt
in
fs
push
mov
pushf
sti
in
lahf
mov
repnz
out
sahf
call
ret
fbstp
in
shlb
inc
lods
loopne
shl
std
add
mov
cltd
std
jmp
adc
mov
push
or
mov
imul
pop
mov
bound
sbb
in
notl
fldt
xor
add
cmpsb
mov
sub
jge
mov
stos
and
mov
popa
aad
jno
mov
ds
bnd
in
adc
add
imul
mov
incb
into
leave
pop
mov
add
cwtl
out
push
or
push
je
inc
mov
pop
and
int3
and
pusha
ret
xchg
jb
in
call
push
sub
sahf
stos
push
idivb
inc
scas
or
call
das
pusha
xchg
rol
pop
or
mov
xor
rorl
xor
lret
iret
fdivr
mov
push
xorb
clc
cwtl
dec
pop
in
lcall
mov
pop
movsb
and
into
rolb
lock
sub
mov
jle
inc
repnz
xchg
pop
push
mul
bound
je
pop
adc
jns
stos
add
addr16
inc
das
insb
dec
in
cs
mov
jg
jno
sub
jns
dec
nop
pop
jl
sti
adc
popf
and
setnp
dec
push
ss
mov
repz
pop
xlat
shr
je
or
flds
mov
mov
xchg
sbbb
mov
inc
or
lahf
or
call
lock
sub
ljmp
lods
ret
cmp
ret
xor
sbb
jb
jmp
daa
add
shlb
pop
gs
mov
xor
les
mov
test
adc
aas
icebp
xlat
jg
int
fdivs
add
data16
scas
stc
push
or
push
mov
sarl
push
pop
push
enter
pop
int
add
cmp
fisubrl
xchg
mov
test
sbb
dec
xchg
mov
cld
sahf
movsl
push
lcall
sbb
xchg
out
std
xchg
add
in
outsl
or
jo
push
sbb
xchg
fwait
sbb
or
ja,pt
mov
fistl
mov
in
xchg
movsb
or
aam
add
pop
jno
scas
jnp
push
mov
mov
pushf
scas
pushf
push
fs
add
pop
mov
popf
dec
popf
mov
sub
dec
nopl
inc
fwait
sahf
lds
movsl
test
mov
fbld
cs
xchg
push
movsl
jle
pop
dec
loop
fs
and
out
sti
shld
inc
ljmp
add
into
callw
jno
fwait
push
adc
mov
xlat
dec
dec
dec
xchg
dec
xor
in
push
je
stos
pusha
cmp
or
xor
pop
lcall
or
lea
bnd
jle
mov
adc
adc
ja
push
xchg
push
jns
push
add
xchg
les
mov
sub
dec
push
ss
dec
cmp
add
cmpsl
stc
inc
cmp
inc
mov
bound
bound
loop
jle
pop
mov
cwtl
fistpl
xor
lods
hlt
jg
inc
cmp
mov
xchg
mov
lods
adc
mov
mov
add
imul
shlb
push
mov
and
out
jecxz
push
push
xchg
movsl
jp
dec
mov
ret
imul
daa
jle
jo
out
push
cs
jg
neg
cmpsb
sbb
jl
popa
lret
or
jns
xor
popf
std
mov
add
jne
stc
inc
jmp
scas
jno
movsl
jmp
inc
rclb
aas
lret
cltd
xorl
sub
cmp
xor
push
icebp
cmpsl
lcall
les
adc
pop
or
aas
mov
xchg
mov
pop
xor
daa
data16
fcom
mov
vpunpckhqdq
movsb
es
jbe,pt
jl
sub
fisttps
jmp
and
mov
push
cld
or
push
fs
into
ja
aas
sbb
mov
subb
push
int
mov
lcall
or
jns
out
xor
or
jno
jbe
inc
sbbl
inc
mov
mov
xor
loope
xorl
jne
outsl
movsb
dec
mov
and
xor
ds
sbb
mov
adc
jle
imul
dec
mov
loop
aaa
daa
mov
dec
pusha
push
mov
iret
sti
pop
int3
jne
dec
inc
fdivl
push
es
mov
jle
mov
leave
sti
pushf
jle
addr16
jno
lods
mov
icebp
dec
out
insl
aam
lcall
call
mov
sub
mov
sbbb
xor
data16
subb
shlb
out
fs
outsb
sub
enter
icebp
clc
mov
xchg
lock
adc
fld
xchg
ja
sbb
loopne
in
out
cli
js
adc
dec
imul
dec
out
fnsave
sbb
ret
test
mov
sub
stos
jbe
add
push
fs
inc
lods
scas
sbb
test
arpl
push
popa
stc
aas
push
lahf
xor
loope
lcall
notl
jnp
outsl
scas
cmpsb
loop
add
int
or
loope
cltd
mov
pop
mov
js
loop
imulb
push
fidivrs
pop
dec
adc
fstl
std
mov
icebp
push
cwtl
dec
sub
jecxz
or
mov
stos
ret
out
adc
leave
mov
movsl
xchg
cltd
cmpsb
inc
jae
xor
dec
xchg
popa
cmc
cwtl
mov
xor
das
mov
xchg
jle
mov
mov
mov
adc
scas
xchg
jnp
xor
sbb
add
stos
scas
push
scas
lea
ja
bnd
xor
mov
icebp
sbb
in
jae
and
push
mov
scas
sbb
dec
addr16
jne
xchg
mov
adc
ret
ja
cs
fstl
out
ret
or
inc
dec
or
xor
push
insb
push
or
adc
adcb
jp
sbb
imulb
in
cs
lods
pop
fcoms
loopne
cmpsl
dec
pop
dec
ja
lock
jb
mov
sbb
and
mov
adc
shrl
rolb
add
or
rcll
sub
pushf
negl
sarl
fs
aam
shr
pop
jl
aaa
jle
je
push
mov
and
jb
push
xchg
lds
pop
sahf
dec
out
cmp
sub
sbb
or
sti
ds
fistpl
lret
outsb
mov
pop
mov
pop
sahf
dec
out
cmp
sub
sbb
or
sti
ds
fistpl
lret
outsb
mov
pop
mov
pop
sahf
dec
out
cmp
sub
sbb
or
sti
ds
fistpl
lret
outsb
mov
pop
mov
pop
sahf
dec
in
cmp
sub
pop
lret
sar
roll
push
mov
mov
mov
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
lea
push
pushl
call
lea
push
pushl
call
jmp
call
push
mov
call
xor
leave
ret
mov
cmpsb
cmc
xchg
lds
aam
shr
jp
jne
inc
push
push
jbe
data16
push
add
cmpsb
cmc
cli
lds
cmp
test
loope
gs
ja
push
push
ss
xor
inc
adc
add
pop
xlat
call
imul
push
mov
arpl
sbb
jno
adc
xchg
mov
xor
out
or
in
dec
jno
adc
adc
push
inc
inc
dec
pop
outsb
pop
in
lahf
add
movsb
dec
pop
lds
rolb
xchg
sub
cmp
push
add
cwtl
dec
in
lock
nop
sti
aas
mulb
push
pusha
call
push
fsubs
and
push
into
in
aad
insl
or
push
lcall
mov
lret
inc
inc
dec
lock
sbb
or
dec
xchg
push
movsl
gs
addb
jbe
xor
adc
ljmp
js
or
sub
repz
and
lret
inc
xchg
in
in
add
adc
pusha
adc
pusha
push
ss
fs
aam
loop
sti
cltd
rorl
lock
jae
arpl
dec
or
inc
and
ret
mov
movsb
out
lahf
lret
and
xchg
stc
push
add
and
pcmpeqw
jns
fs
jle
mov
mov
xchg
aad
movsl
shl
test
xchg
ss
inc
push
push
jbe
xor
inc
adc
xchg
lds
mov
test
xchg
ss
inc
push
push
jbe
xor
inc
adc
push
inc
stc
cmp
popa
lock
fcompl
ss
sbb
mov
jnp
pop
xchg
mov
jle
popa
push
test
and
xlat
bnd
ret
repnz
cmc
repz
fcmovu
sub
ss
mov
insl
inc
sbb
fidivs
jg
jge
mov
xchg
cs
ds
and
mov
cmp
iret
xor
stos
int
sub
cmpsb
aas
ret
adc
addr16
movsb
mov
and
push
xchg
shll
test
ljmp
movsb
bound
cmpl
fiaddl
test
jp
pusha
fwait
in
push
int
sar
nop
mov
mov
cmp
xchg
in
mov
jg
movsl
mov
jmp
scas
inc
adc
mov
mov
cwtl
scas
lods
je
stc
imul
sti
cmpsb
dec
dec
cwtl
testl
mov
je
jns
fistpll
daa
inc
pop
add
lret
gs
outsb
popa
call
inc
jmp
lea
fcmovnbe
cmp
jp
and
aas
bound
ret
rorb
add
pop
xlat
lcall
enter
jno
inc
push
xchg
sbb
not
test
cmpsb
mov
push
push
movsl
jg
sub
and
mov
adc
push
shl
inc
add
es
aaa
arpl
xchg
pop
aas
pushf
js
xchg
nop
pop
mov
pusha
push
adc
rcrl
xor
pop
mov
fildll
add
pop
dec
es
lahf
movsl
addr16
lds
cmc
dec
pop
add
sbb
outsl
ret
ljmp
xchg
addps
sub
sbb
and
add
inc
outsl
je
sbb
mov
add
cwtl
cmpsb
pusha
lods
loope
lret
pop
subl
push
mov
lcall
cmp
inc
rcrb
dec
pop
xchg
mov
sbb
add
sbbb
and
cmpsb
jecxz
mov
xor
lcall
jbe
je
ret
mov
popf
push
or
subl
xchg
push
out
xchg
jmp
jns
in
add
mov
mov
mov
hlt
fwait
lds
inc
xor
jb
lea
jge
fisubrs
cld
jb
mov
lock
xchg
jp
es
cmpsl
mov
mov
sbb
inc
xchg
push
inc
lea
add
ds
test
ja
add
stos
cs
ja
sub
clc
jae
ret
rclb
mov
insb
cmp
into
and
out
dec
or
cli
jae
sub
pushf
decl
leave
add
mov
sub
jo
add
icebp
inc
int
jne
or
add
cmpsl
scas
outsl
lods
loope
sarb
lahf
cltd
jns
inc
xchg
aad
out
iret
or
mov
push
jmp
or
ja
test
roll
jno
sarb
xchg
icebp
mov
dec
xor
adc
dec
repz
test
mov
in
ds
mov
fs
sub
add
jmp
pop
xchg
sahf
lret
cld
push
sub
mov
push
arpl
cmp
in
aad
cwtl
subl
ss
out
cwtl
mov
mov
fadd
cwtl
or
xor
out
loope
xlat
push
ds
lea
xor
mov
dec
es
and
add
dec
and
sbb
fwait
adc
fcmovbe
fdivl
mov
add
xchg
xchg
lcall
push
inc
out
lds
stc
inc
fildl
pop
out
es
mov
pop
jmp
call
pop
sbb
jne
mov
jo
or
cmc
add
pop
xchg
jl
fists
and
pop
add
jmp
dec
mov
rcl
cmpsl
pusha
stos
popf
add
push
pusha
push
mov
stos
out
das
ror
gs
mov
insb
outsb
and
clc
pop
push
lcall
sbb
mov
push
push
and
ljmp
push
jecxz
and
and
jmp
cld
loopne
sub
sbb
push
dec
loop
add
xor
rol
sub
enter
mov
lret
jecxz
and
ja
mov
xchg
cmpsl
mov
mov
mov
jns
lock
test
inc
lret
inc
aas
cmp
cmpsl
ds
lcall
and
xor
jle
popa
pop
ja
ss
sti
xlat
sub
mov
sbb
mov
mov
inc
adc
mov
inc
cmp
jmp
gs
adc
mov
xor
mov
aad
mov
call
push
dec
std
xor
lret
repz
cmp
sub
pop
push
into
mov
jb
popa
sbb
stos
aaa
cmc
shlb
cmp
cmp
movsb
jl
pop
fcoml
orb
test
ret
xchg
sysret
dec
mov
pop
es
add
iret
bound
inc
call
loop
sub
push
mov
and
fsubrl
out
lods
dec
rol
pusha
sub
jp
lret
rcr
movsl
dec
adc
jecxz
outsl
push
rcrb
shlb
dec
std
test
jg
inc
or
dec
lret
or
xchg
ja
sub
push
loope
ss
fcompl
test
jno
adc
add
and
mov
gs
adcb
popa
mov
lret
or
repz
pop
and
mov
int3
nop
sbb
in
in
mov
outsl
pop
inc
std
imul
popa
fimuls
or
xlat
imul
fsts
cmpsl
stc
or
cmp
es
lcall
adc
pop
push
stc
and
pop
outsl
mov
out
sub
cwtl
js
mov
jno
add
pop
repnz
jnp
dec
pop
cmpsb
or
jnp
sbb
ret
and
xchg
cmp
outsl
test
cmp
pop
shll
enter
or
sar
jnp
nop
push
cmpl
ds
sbb
stc
jmp
daa
jae
pusha
mov
movsl
or
xor
add
test
xchg
or
push
mov
mov
aad
push
lcall
lcall
inc
jle
in
jns
je
xor
adc
lock
es
and
jno
push
lods
or
fadd
inc
xor
sub
and
jmp
or
mov
leave
fwait
cmpsl
dec
fimull
pop
lock
mov
jmp
ret
popa
rcll
push
dec
fnstcw
xrelease
inc
out
push
popa
adc
in
dec
xchg
out
mov
mov
inc
insl
pop
lock
lret
mov
cmpsb
inc
sub
les
and
inc
mov
and
fldl
jbe
and
adc
jno
push
mov
inc
out
push
je
sub
xchg
mov
adc
mov
inc
repnz
ljmp
xchg
mov
mov
or
add
insb
shld
xor
test
enter
ljmp
mov
mov
repnz
cmp
leave
movntsd
test
mov
stos
fxch
or
sub
les
insb
lock
cltd
or
jns
and
les
daa
aaa
dec
arpl
xchg
movsl
xor
mov
dec
jb,pn
cmpsb
dec
jge
adc
ficoms
fdivr
les
dec
hlt
push
mov
ja
mov
repnz
xchg
clc
mov
outsl
and
repz
sub
addb
lcall
mov
jo
arpl
dec
jnp
push
add
pop
mov
ljmp
rolb
hlt
insl
sbb
mov
notl
dec
add
inc
cli
in
lods
popa
cmp
mov
test
fdivrs
or
mov
inc
neg
add
fcmovne
movb
stos
cmp
mov
xchg
popa
adc
test
imul
adc
dec
xlat
inc
pusha
dec
pop
call
adc
cs
fistpll
scas
cld
pop
cmp
sahf
aas
jno
rolb
xor
mov
mov
insb
fmuls
xor
inc
stos
ja
sahf
scas
cli
or
pop
dec
cmp
aas
aas
sub
ljmp
jne
lret
fisttpl
into
inc
jmp
cmpsb
xchg
xchg
pop
pusha
xchg
dec
movsl
xor
shrl
sbb
push
mov
movsl
and
mov
pop
cmp
mov
mov
loope,pt
pop
cmpsl
rol
je
repnz
pop
aam
mov
ret
inc
lcall
out
xchg
jae
cmp
adc
stc
cld
jecxz
outsl
and
xchg
das
mov
sbb
jmp
aad
lods
jo
mov
es
mov
lods
mov
aad
gs
fisubrs
xor
loope
push
pop
add
push
shlb
jg
idivl
imull
out
out
mov
cmp
pop
add
stos
jecxz
jge
das
sbb
sbb
and
lods
addr16
sbb
out
xchg
imul
cmp
dec
arpl
int
outsb
jmp
push
fistpl
fsubl
xor
or
jge
adc
and
cmpb
inc
subb
fs
jmp
pop
push
sbb
inc
sahf
mov
push
fcmovb
jl
sbb
push
mov
lds
jb
xor
movsb
mov
in
sahf
jmp
xor
insb
add
ret
add
jecxz
xchg
repz
es
inc
aaa
sub
xor
jno
rcll
adc
imul
inc
into
out
jb
mov
and
jmp
movsl
mov
shll
aam
cmpsb
fnstenv
xchg
pushf
sbb
lea
cmp
je
andl
sbb
pop
sbb
repz
out
xchg
inc
lcall
stos
stos
jecxz
lret
or
jnp
sbb
or
sub
jns
fld
ficoms
jl
xlat
std
and
or
inc
popa
pop
inc
or
bound
int3
or
rol
mov
sub
stos
adc
std
add
std
dec
xchg
jmp
ret
shll
sub
inc
popa
push
sti
pushf
or
dec
mov
lret
test
movsl
dec
inc
in
pop
clc
sub
and
mov
jo
dec
inc
cmp
sbb
add
dec
lret
loopne
imul
dec
sbb
dec
cwtl
stos
dec
sbb
mov
cmpsb
push
xor
mov
dec
iret
jecxz
loopne
cmc
jl
dec
data16
jmp
pop
pushf
movsb
repz
call
inc
fidivrs
xor
mov
or
pop
clc
ret
mov
pop
aad
enter
mov
int3
mov
and
insb
push
mov
fdivp
in
jle
iret
int
jno
push
pop
repnz
stos
imul
xchg
cmp
mov
mov
popf
lahf
xchg
loop
sub
loopne
jge
and
push
and
ja
aam
sub
movsl
clc
jo
dec
sub
pop
cmp
loopne
and
std
in
aad
sub
lret
jnp
stos
push
xchg
imul
out
adc
in
mov
xor
pusha
addl
cmp
add
fsubs
bound
test
es
mov
aam
cmp
add
lret
dec
fistl
inc
rol
mov
mov
fistl
ds
inc
jecxz
in
scas
push
sub
divl
gs
dec
jmp
sbb
sub
pop
cmpsl
nop
mov
jbe
and
and
inc
hlt
rclb
faddl
mov
sub
das
pop
es
out
rorl
lret
ror
insl
xchg
mov
loopne
shrb
xchg
xchg
enter
mov
jns
mov
inc
jb
dec
das
mov
xor
lea
add
xor
sbb
sub
test
and
xor
shll
in
or
pop
fxch
jp
mov
sarb
popf
ljmp
jae
shll
pushf
or
les
or
cmp
rcll
or
sbb
cltd
push
pop
scas
add
xor
clc
pop
test
cs
mov
rcl
xor
out
push
xor
pop
inc
and
push
add
cmp
enter
or
jns
sarb
aad
xchg
in
insb
js
vmwrite
jb
js
mov
je
pusha
adc
dec
sbb
mov
xchg
xchg
les
ficomps
sbb
or
jl
out
xchg
mov
out
jg
add
aas
test
mov
mov
xor
mov
mov
lahf
cmp
mov
in
imul
sub
mov
dec
pop
gs
jnp
icebp
jl
mov
lock
inc
dec
dec
test
inc
in
repnz
sub
scas
out
pop
dec
loopne
xchg
pop
stos
push
add
cli
lcall
push
sub
jl
mov
and
lret
add
fimuls
and
xchg
cmpsb
pusha
test
testl
ret
xchg
push
xor
inc
cmp
add
rol
mov
push
xor
loop
jo
cmp
bound
cmp
pop
pop
xchg
mov
insl
in
pushf
xor
stos
inc
mov
push
push
cmpl
repnz
xor
stos
pop
bound
fdivr
inc
mulb
and
cli
je
js
sbb
movsb
je
cmp
shrl
xchg
pop
sub
add
inc
mov
out
mov
repnz
xchg
movsl
repz
xorb
sbb
jg
adc
inc
jnp
inc
inc
xor
jp
push
pop
pop
xor
pop
in
push
push
orl
mov
pop
mov
sub
pusha
cwtl
pop
dec
repnz
hlt
jle
sti
out
pop
shll
rcr
xlat
adc
adc
out
sub
jae
xchg
mov
or
js
jge
insb
int3
push
jmp
aas
sub
xor
movsl
outsb
addr16
xor
pop
and
ficoms
fisubrs
cltd
fcom
ret
xchg
out
sahf
adc
loope
pop
cmp
lods
xchg
mov
xchg
and
pushf
pop
dec
push
int3
cmovge
jle
lods
loop
cmp
pushf
jo
shll
xchg
xchg
int
rcrl
xchg
push
push
repz
call
stos
dec
pop
jae
stos
ja
aam
sbb
dec
mov
pushf
add
sbb
push
mov
mov
adc
lahf
dec
cmp
ret
mov
jg
push
add
in
in
jl
bound
popf
adc
jno
sbb
loopne
daa
cmc
xchg
xchg
les
and
add
and
loope
outsl
xchg
adc
pop
lahf
cs
out
popf
mov
dec
fnop
popf
cmp
mov
ja
in
popf
inc
mov
push
outsl
arpl
add
fisubl
push
and
and
mov
call
repz
js
inc
out
fnstcw
add
adc
imul
lock
loopne
aaa
pop
push
xchg
sub
pop
outsl
sarl
dec
rcr
addl
fdiv
mov
addb
sub
xorb
dec
mov
cmp
xlat
push
lods
lahf
scas
mov
loope
lahf
cltd
stos
imul
ljmp
or
stc
stos
aas
cmpsb
cmpsl
jmp
rcl
ror
jg
ss
out
ss
mov
fidivrs
dec
shlb
lahf
call
push
ret
fiaddl
pusha
stc
cmp
shlb
or
dec
jo
je
jge
in
ss
mov
cmp
adc
fdivl
imul
mov
and
jge
iret
jp
imul
test
sub
sti
cmp
cwtl
orl
pop
cwtl
pushf
dec
cmp
enter
divb
andb
insb
scas
mov
add
lods
dec
sbb
mov
pop
enter
xchg
nop
scas
test
insb
fbstp
pop
or
inc
imul
sub
mov
je
rol
or
adc
sbb
out
pop
adc
push
or
and
mov
push
mov
pop
cltd
arpl
call
adc
sbb
mov
adcb
push
in
push
ret
mov
scas
mov
stc
mov
sbb
mov
xchg
cmpxchg
in
cmp
and
pop
mov
outsb
xor
adc
push
cmp
mov
roll
sub
mov
sbb
push
int
jbe
lret
cltd
cmp
mov
jb
cld
xchg
dec
lods
mov
aad
pop
dec
cltd
mov
dec
fldcw
jo
pop
rorl
cwtl
loope
dec
xor
aad
fwait
es
add
je
sbb
stc
push
and
and
inc
jecxz
xchg
pop
outsl
push
or
pop
cltd
push
pop
pop
pop
sbb
je
adc
cs
add
movl
adc
lock
mov
daa
xchg
mov
movsb
imul
mov
incb
xor
pop
and
push
jne
xor
mov
mov
aaa
in
adc
jge
in
leave
cmp
pop
mov
jns
rcll
inc
cmpsb
jno
ja
mov
lea
fistl
pop
xchg
std
insl
push
int3
das
stos
xor
dec
inc
push
int3
inc
add
push
inc
ja
divb
or
jnp
inc
xor
cmpsl
xchg
daa
cmc
and
int
fisttps
pop
push
sbb
frstor
xchg
sub
out
imul
mov
pop
loope
test
mov
mov
sub
scas
or
clc
adc
dec
mov
flds
lcall
mov
aaa
inc
sub
gs
hlt
subl
mov
mov
scas
inc
mov
stc
jg
sbb
lahf
movsl
hlt
fisttpll
jp,pn
add
mov
pop
push
shlb
inc
negl
cmpl
or
or
mov
jnp
addr16
lds
out
xchg
scas
mov
and
ds
nop
and
push
aaa
pop
jmp
movq
push
or
scas
idivl
mov
cltd
sbb
mov
pop
adc
or
hlt
lret
or
mov
add
lods
icebp
fnstcw
lods
fdivr
push
xchg
out
push
lret
ja
shl
mov
xchg
stos
pop
in
xchg
into
scas
sub
push
out
ds
sarl
cmp
movsl
rclb
jbe
add
push
xchg
mov
jno
add
fcompl
jne
ficompl
mov
fs
sbb
repz
in
outsl
test
jp
mov
inc
jno
adc
out
adc
push
jns
ss
out
mov
gs
mov
mov
lcall
inc
cwtl
mov
mov
xchg
dec
or
adcl
imull
dec
mov
cld
fiaddl
xor
inc
mov
rolb
daa
arpl
pop
sahf
test
nop
hlt
neg
pusha
int
and
sbb
pop
out
in
dec
out
insl
pop
xchg
in
push
or
lods
jle
pop
cmp
xchg
das
fwait
cmp
push
mov
add
mov
inc
aad
pop
fisubs
cmp
adc
int3
fsubs
sub
pushf
nop
imul
xlat
add
push
sub
std
out
aas
aaa
and
dec
les
test
in
xchg
int
push
mov
and
sub
mov
loop
inc
sub
loopne
jmp
mov
push
aaa
outsb
jecxz
inc
dec
test
fdivl
mov
push
xchg
sub
push
in
dec
sbb
xchg
push
pop
push
jg
cmpsl
cltd
pop
js
add
data16
inc
mov
mov
cmp
mov
inc
ss
out
inc
mov
add
jg
out
add
bnd
and
mov
test
mov
and
je
sbb
pop
mov
xor
sub
dec
inc
or
dec
dec
jp
or
mov
push
pop
fistpl
push
sahf
lds
aas
pop
mov
jp
and
das
mov
and
outsl
mov
xchg
leave
lret
pop
xchg
pop
xchg
push
pop
mov
sbb
mov
xor
loopne
hlt
adc
into
test
ret
or
clc
rolb
inc
add
js
icebp
addb
or
sbb
insl
push
cli
mov
iret
scas
push
movsl
sbb
mov
leave
ret
fmulp
dec
test
shll
dec
jns
inc
nop
mov
mov
sub
sbb
sub
jle
imul
or
mov
repz
fldl
push
bound
push
jns
jnp
xor
ds
into
cmp
push
and
push
push
sub
mov
cs
je
negl
pop
xor
mov
cmc
shrl
out
test
xchg
ss
inc
push
push
jbe
xor
inc
adc
xchg
lds
mov
test
xchg
ss
inc
push
push
jbe
xor
inc
adc
idivb
out
test
xchg
ss
push
push
jbe
jbe
push
and
cli
cmc
int3
lds
mov
add
mov
lods
out
lret
mov
sub
movl
movl
movl
movl
cmpl
jne
pushl
call
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
sub
bound
push
cmovb
sub
es
pop
mov
loop
rcrb
loop
xchg
iret
sbb
das
bound
bound
inc
pop
xor
outsl
adc
sub
mov
add
xchg
iret
sbb
ss
dec
pop
pop
pop
sub
or
inc
repnz
jmp
ljmp
jmp
add
dec
push
push
js
cmpsl
fidivrs
or
repnz
pop
je
xor
mov
push
push
dec
cmc
pop
fisttpll
push
sbb
pusha
push
cmc
mov
pushl
addb
and
sbb
lock
sbb
pusha
dec
dec
out
cmp
inc
lcall
leave
dec
pop
outsl
aaa
outsl
cli
cmp
fcmovb
dec
mov
jo
adc
shl
jp
xor
xchg
stos
popf
rorb
imul
or
inc
adc
cli
push
sbb
es
mov
pop
xchg
shlb
sbb
in
dec
sub
or
jo
pusha
jb
mov
jb
sbb
cmp
push
push
push
pop
and
jg
dec
sbb
scas
cli
cmpsl
lret
xchg
aad
fiadds
das
pop
dec
aaa
push
jp
insl
dec
push
adc
outsl
cmp
mov
mull
bound
jl
jo
outsl
dec
xor
inc
insl
lock
ficoml
lahf
sar
loop
subb
imul
pop
and
dec
add
scas
loop
rorb
mov
fbstp
bound
push
cmovb
xor
jg
dec
add
scas
loop
rorb
mov
fbstp
mov
sbb
xchg
test
sti
lock
mov
pushf
mov
or
jl
roll
sub
mov
add
xor
cs
bound
or
ss
xor
stos
popa
xor
movl
mov
cmpsl
outsb
adc
sub
sahf
test
cmp
aam
mov
fisubs
les
push
jno
jne
div
cs
xchg
add
std
inc
std
mov
cmpsb
xchg
testl
fmuls
xlat
fdivrs
jp
fwait
lods
fs
repz
add
jmp
dec
into
ja
or
ret
mov
push
or
inc
cmp
push
and
rclb
sub
std
add
sbb
sub
jns
mov
rolb
mov
and
bound
ja
daa
test
mov
dec
mov
pop
ja
loop
cmpsb
mov
pop
es
repz
aas
mov
je
addr16
and
mov
je
sub
ficompl
push
xor
clc
sub
jne
cmc
loope
outsl
insl
mov
aas
in
cmp
inc
jg
fcmovnu
push
add
mov
js
or
inc
inc
xor
mov
insl
fdivp
xchg
push
xorl
jl
dec
aaa
fidivrs
jno
dec
pop
push
jg
fildl
mov
aad
dec
movsb
inc
cmp
jne
jmp
push
inc
nop
pop
cmpl
push
jp
mov
out
test
js
rcrb
push
pop
dec
xchg
aad
pop
inc
imul
push
fsubs
ficompl
pop
push
shlb
dec
push
xchg
clc
insl
inc
jle
push
inc
push
jae
pop
rcrb
and
or
stos
or
test
outsb
xchg
adc
pop
mov
mov
sti
imul
bound
les
subb
loope
js
aas
outsb
ljmp
xlat
out
cmp
outsb
cmp
dec
dec
ljmp
mov
ds
jbe
push
xchg
test
movb
stos
notl
popa
dec
or
aad
xor
cld
mov
test
enter
xlat
or
aad
outsl
addr16
add
pop
mov
sbb
out
pop
outsl
jmp
cmpsb
pop
out
insb
popf
mov
pop
dec
rcrb
dec
pop
sbb
inc
fsubl
movsb
cmp
add
and
push
stos
shrb
push
xlat
lahf
bound
mov
and
adc
inc
inc
fcomps
mov
push
cmp
addr16
and
pop
stos
out
xchg
das
mov
and
xchg
mov
adc
into
mov
iret
inc
and
rcll
aad
sbb
mov
cmp
andl
repz
lods
cmp
aam
xchg
sti
pop
movsl
add
xchg
dec
cld
js
xor
pop
in
fisubrs
mov
pop
in
out
xor
sub
mov
ljmp
scas
xchg
inc
subb
pop
dec
outsb
test
adc
jb
xchg
fwait
in
insl
xor
sbb
push
mov
cmp
jg
sub
mov
push
ss
cmp
push
mov
mov
movsb
jo
bound
shlb
or
mov
push
repnz
scas
xor
gs
dec
test
mov
push
mov
in
pop
xor
lcall
jmp
das
fmul
xor
lea
xorl
test
aad
xchg
int3
or
pop
pop
add
leave
xchg
xlat
roll
sahf
rcrb
jg
sub
mov
aaa
cmpsb
sbb
xlat
or
mov
and
mov
daa
cwtl
jo
ror
frstor
sbb
sub
dec
loopne
popa
pop
in
mov
sub
adc
add
inc
mov
pop
xchg
and
sub
cmc
sub
into
dec
bound
xor
dec
repz
pop
lock
into
jo
pop
sbb
xor
cs
shlb
test
xchg
cmp
cmp
adc
cmp
dec
hlt
aam
lret
std
loopne
add
xchg
pop
into
jmp
xchg
mov
mov
out
in
or
inc
adc
fsubr
mov
jae
or
or
pusha
mov
dec
popf
fists
je
push
shl
push
in
cmpsl
mov
push
test
add
or
mov
mov
push
loopne
popf
pushf
fdivl
jnp
jmp
inc
mov
stc
dec
subb
shrl
mov
dec
lret
xchg
aas
xchg
or
adc
mov
add
daa
inc
mov
iret
loopne
add
mulb
xabort
mov
jae
test
movsb
jae
push
jb
ret
sahf
xor
imull
fs
enter
push
xor
cmp
roll
test
jns
mov
and
call
inc
fimull
testl
fstl
or
shl
push
test
cmpsb
in
cmpsb
into
sbb
lods
out
sarb
pop
cltd
dec
or
jae
mov
xor
or
shll
out
jmp
subb
jecxz
cld
cmp
test
adc
or
repz
out
addr16
mov
dec
sbb
pop
arpl
out
cmp
hlt
and
dec
ds
mov
mov
or
notb
or
cwtl
sbb
jo
clc
mov
rorb
mov
pop
inc
and
add
lods
mov
cmp
dec
int
sbb
jge
fmull
pop
arpl
xchg
cmp
aam
stc
inc
push
mov
imul
xor
jno
cmpsl
lcall
mov
jmp
fisubl
daa
inc
sbb
and
pusha
mov
ja
lahf
movsb
add
jmp
jne
xchg
xor
jmp
push
xor
outsl
dec
add
out
pop
adc
mov
add
adc
repnz
cmp
inc
scas
cli
pop
and
cltd
aam
jl
xor
popw
das
inc
test
dec
into
xchg
xor
adc
cmpsl
lahf
push
add
pop
sub
sbb
pop
popa
movsl
std
mov
cwtl
lea
lahf
pop
xchg
in
icebp
push
shlb
rorb
out
mov
xor
push
adc
sahf
pop
ret
sbb
sbb
xor
js
insl
pushf
inc
sub
and
xor
rcr
xchg
movsb
dec
sub
or
jb
cmp
jecxz
bound
test
dec
cltd
adc
pop
imul
icebp
cmp
inc
jno
xor
jbe
sub
incl
rcll
mov
bound
mov
pop
jle
insb
inc
xlat
test
subl
shlb
test
jnp
aad
mov
cld
dec
test
push
inc
pop
decb
and
or
dec
jle
jno
jae
sub
dec
ret
mov
stos
mov
lods
lahf
nop
in
ja
pop
movsb
mov
jo
ss
mov
and
nop
nop
xlat
inc
fwait
inc
xlat
mov
and
pop
mov
mov
mull
push
icebp
sbb
nop
mov
sbb
icebp
sbb
dec
daa
js
push
cld
add
pop
xchg
dec
test
xor
fs
lds
aam
cld
or
repz
adc
mov
dec
scas
push
and
push
movsb
push
rcll
inc
sub
adc
cli
arpl
mov
cmp
lea
cli
jbe
dec
shll
sub
std
ficompl
and
cld
pop
mov
push
lret
lods
xor
pop
imulb
icebp
adc
xor
jo
pusha
sbb
test
out
in
sub
fisttpll
adc
mov
aam
arpl
and
mov
and
jno
mov
or
or
scas
or
sub
icebp
mov
add
mov
push
dec
insb
jns
xchg
cmp
jl
lea
call
mov
js
xor
in
jne
mov
push
das
imul
test
jg
jmp
lds
add
mov
rol
adc
dec
call
repnz
pop
dec
sahf
andb
cmpb
mov
push
pop
repnz
insb
pop
repz
sar
in
add
or
addr16
enter
pop
out
std
aam
popa
aad
xchg
mov
aad
mov
add
inc
or
nop
push
xchg
mov
mov
adc
fdivl
pushf
sbb
mov
leave
andl
inc
xchg
dec
xchg
or
lea
sahf
and
sub
test
rcrl
adc
push
push
jne
gs
mov
pop
lret
stc
xchg
sub
sbbb
in
dec
mov
dec
ret
jmp
out
pop
mov
push
in
sbb
fld
ficomps
sahf
adc
add
jge
dec
cmp
outsb
outsl
sub
stos
jmp
shl
clc
jecxz
dec
fadds
inc
out
in
in
enter
and
pusha
jns
aam
xchg
mov
fidivrs
movsb
mov
rcrb
xor
sbb
inc
cs
pop
adc
push
or
pop
mov
pop
outsl
or
nop
stos
loop
and
test
mov
lret
or
mov
imulb
push
lds
fxch
mov
inc
inc
scas
sti
adc
fwait
imul
mov
push
rorl
mov
lret
movsl
add
mov
dec
lahf
xlat
push
xor
jg
insb
xlat
leave
pop
fdivrl
popf
jmp
mov
add
jbe
cld
inc
ret
enter
shrb
in
movsl
popa
ret
test
and
daa
in
orl
leave
xor
addb
out
pop
add
xor
mov
mov
cmp
scas
inc
mov
filds
inc
sbb
lahf
adc
jl
out
cmpsl
pop
enter
sub
shll
mov
adc
xor
pop
cmp
mov
mov
jbe
mov
jge
imul
fwait
sbb
add
add
xchg
js
xchg
dec
or
mulb
dec
lret
repz
pop
dec
adc
out
sub
inc
mov
jge
xchg
pop
inc
rcrb
imul
sarb
loop
xchg
pop
stos
out
mov
mov
cli
inc
icebp
fstl
and
test
mov
pop
push
pop
mov
sti
jg
lret
add
xchg
fnstsw
cwtl
add
xchg
jecxz
fistl
inc
in
test
ja
ret
adc
out
imul
sbb
or
daa
mov
xchg
hlt
jns
ficompl
sbb
movsb
mov
xor
push
jmp
fcoms
jmp
jmp
fsubrs
xor
mov
jb
or
and
pop
dec
les
add
mov
or
fsubl
mov
pop
xchg
inc
lea
mov
daa
clc
cwtl
mov
cli
jp
push
leave
mov
and
push
stc
lods
sub
jg
pop
jmp
cmp
jo
inc
lahf
xchg
dec
push
and
push
mov
push
sbb
add
inc
and
mov
xchg
std
and
decb
cmp
mov
stc
jnp
jmp
push
dec
popf
fsubrs
pop
outsl
outsb
xchg
jp
adcb
jo
mov
jnp
push
das
sub
daa
lahf
dec
in
sub
shrl
cmp
repz
lret
jo
in
ds
mov
adc
lock
stos
mov
lahf
and
jp
inc
jp
test
arpl
jl
inc
ljmp
push
js
mov
hlt
mov
adc
inc
fisubl
jmp
shlb
pop
popf
into
cld
mov
jb
and
lret
cwtl
arpl
stos
jb
xchg
popf
adc
test
sub
xchg
lds
test
pop
shlb
dec
push
sub
xchg
addr16
loopne
xor
push
mov
mov
cmp
in
scas
cmc
or
pop
ds
mov
inc
adc
sub
repnz
outsb
pop
daa
cmp
and
cmp
mov
repz
xchg
cmp
cmp
push
mov
inc
ja
xor
jns
jae
push
and
rcrb
sbb
jbe
xchg
cmp
cwtl
inc
arpl
cmp
cwtl
loop
int
addr16
xor
fisttpll
mov
pop
and
cmpsl
dec
sbb
push
mov
xchg
sahf
call
mov
dec
stos
jnp
mov
mov
imul
mov
sub
pop
sub
mov
rcrb
push
into
repnz
ds
sbb
mov
int
cli
inc
lret
int3
jle
pop
inc
jo
scas
ja
xchg
xor
fmuls
push
call
stc
nop
jmp
cmpsl
repz
pop
pop
mov
push
push
scas
or
sub
jmp
push
cmp
mov
pusha
sahf
aas
inc
pop
mov
fwait
sub
or
lea
out
adc
mov
mov
push
cmp
fidivl
mov
mov
jg
mov
sub
rclb
mov
stos
jnp
stos
aad
mov
xchg
fnsave
pop
sbb
push
dec
add
inc
out
arpl
and
lret
lcall
and
sahf
arpl
aaa
int3
xchg
adc
inc
outsb
pop
gs
les
popa
fcoms
add
pop
clc
mov
in
in
mov
ds
mov
mov
jle
pop
mov
ss
xor
stos
int
fstl
pop
cmpl
adc
testl
mov
hlt
popa
roll
mov
dec
sti
cmp
data16
rolb
fdivs
sbb
mov
int
xor
push
cmc
adc
ss
add
sbb
arpl
outsb
or
add
and
cmpsb
bound
cltd
mov
jne
cmp
sbb
js
out
and
sub
add
out
scas
in
inc
mov
mov
into
je
scas
sub
arpl
pop
jge
xchg
adc
popl
std
pusha
stos
or
enter
icebp
into
aaa
out
data16
mov
clc
mov
int
popf
cltd
and
sbb
lret
iret
jmp
cmp
push
jae
ret
clc
push
mov
and
leave
cmp
leave
adc
aad
inc
les
js
stos
and
xchg
repnz
clc
mov
mov
stos
cmp
mov
imul
jmp
daa
inc
sub
lcall
and
mov
repz
and
sub
arpl
fistps
jo
hlt
lret
jae
and
ret
mov
ds
push
rcrb
pushf
sbb
call
inc
and
jb
fmul
jne
push
gs
mov
pop
lods
xorb
xlat
dec
sub
sub
lods
aam
push
pushf
jns
ret
and
inc
mov
sti
sbb
imul
inc
mov
xchg
mov
dec
lods
push
jno
ret
lahf
loope
es
das
out
popf
mov
jnp
jmp
shlb
jle
std
jns
cs
ljmp
pushf
xchg
enter
popf
xor
ja
xor
cltd
bound
fwait
xchg
sbb
and
pop
adcb
pop
and
clc
push
fwait
cmp
outsl
pop
shr
mov
jg
or
inc
fdivr
test
test
cltd
fistps
push
jge
ficompl
lret
push
push
and
stos
pop
aad
out
sub
jno
or
in
push
jge
mov
mov
dec
stos
das
push
jns
ss
cmp
or
int3
and
call
mov
in
pop
or
rorb
aam
rclb
fisubl
mov
je,pn
iret
add
jnp
mov
mov
inc
adc
xor
shl
jb
xor
push
cmp
ret
add
cmp
xchg
pop
add
aad
sbb
loop
ret
cmc
lcall
xlat
or
inc
dec
lret
mov
clts
shrb
and
mov
lret
es
push
jl
aad
loop
xlat
sbb
pop
rcr
insl
dec
adc
ret
sub
dec
and
filds
subb
lahf
fldt
mov
out
aas
jnp
rorl
sbb
or
in
dec
xchg
inc
push
xor
test
jp
out
or
xlat
iret
es
pop
mov
inc
int3
sub
pusha
repz
addps
xlat
stos
mov
add
out
pop
jl
imul
into
in
add
and
lret
jae
pop
lods
and
mov
repz
loopne
cmp
dec
imul
jbe
lahf
das
out
pop
movsl
lods
lock
push
pop
mov
mov
inc
lahf
adc
pop
lds
push
dec
out
sub
adc
ss
scas
and
dec
xor
repnz
push
mov
mov
push
xchg
movsl
push
add
mov
cmpsb
imul
mov
les
pop
pop
std
js
mov
outsb
xchg
xchg
ficoml
stc
aaa
pop
pop
sti
add
mov
pop
pop
mov
pop
sbb
jg
mov
push
mov
adc
mov
sahf
hlt
mov
adc
adc
or
sarl
adc
mov
or
iret
xchg
test
cwtl
sbb
inc
cmp
in
repz
loope
sbb
pushf
sub
fcomi
sahf
iret
jge
mov
push
cmp
scas
xchg
arpl
lds
fdivl
cltd
movsl
dec
and
and
lcall
mov
stc
insb
jle
mov
test
in
add
push
mov
pushf
fidivrl
mov
pop
cmp
imul
in
jp
cmpsb
mov
les
xchg
push
outsl
xchg
js
push
pop
xor
mov
dec
movsb
aaa
xor
jb
insb
mov
mull
sahf
in
mov
lods
xor
push
filds
stos
in
jmp
jns
and
lcall
aad
fistps
dec
int3
pop
lahf
dec
pop
xor
stos
andl
push
push
jecxz
xorl
push
cld
xor
mov
inc
scas
cmp
js
sub
lcall
cmp
jnp
out
xor
rorb
dec
and
xor
push
push
pop
add
outsb
xlat
add
nop
jmp
and
and
dec
cmp
jge
cmp
pop
jne
arpl
jns
mov
cmp
adc
xchg
out
jmp
sub
mov
test
cmp
negl
cmp
jl
arpl
cmpb
xchg
mov
aas
fadds
or
xchg
pop
mov
cmp
loop
shl
xchg
jb
std
adc
inc
ret
andb
sub
or
in
push
mov
into
jl
sbb
adc
lods
insl
jo
inc
repnz
data16
ret
test
icebp
rcl
imul
rol
sub
fsts
mov
pop
sbb
sub
orl
addr16
add
xchg
out
sub
pop
arpl
setl
out
in
stos
pop
xchg
fs
insl
cmp
mov
pop
xchg
test
shrb
into
sar
jmp
mov
dec
add
ja
pop
lret
pop
fwait
adc
in
jne
add
adc
or
pop
fs
iret
lods
sub
pop
jne
rolb
cmp
and
rcl
jb
or
xchg
pusha
and
repnz
or
add
and
mov
dec
adc
sar
adc
add
in
pushf
nop
mov
cltd
mov
pop
sub
mov
addl
adc
inc
aas
roll
imul
mov
es
pop
out
mov
cli
daa
cmc
fs
pop
ficomps
sub
cwtl
xchg
and
fs
or
dec
jbe
adc
dec
fildl
and
fdivs
icebp
scas
int3
push
inc
pop
lea
pop
mov
mov
inc
pop
or
pusha
icebp
and
inc
icebp
fistps
xchg
insb
out
aad
push
test
mov
in
js
js
test
jecxz
adc
xor
ret
pop
pop
push
add
cmp
xchg
repz
loop
jo
or
jp
xor
xchg
cmc
ss
popa
inc
mov
mov
dec
aad
cmp
mov
xor
loope
out
inc
inc
jp
and
jo
mov
pop
xor
jg
dec
add
scas
loop
rorb
mov
fbstp
bound
push
cmovb
xor
jg
dec
add
scas
loop
rorb
mov
fbstp
bound
push
cmovb
xor
jg
dec
add
scas
loop
pop
fwait
mov
cmpsb
call
sub
or
xor
jg
dec
sbbb
pop
call
insl
mov
mov
in
sbb
dec
call
add
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
shl
add
cld
repz
and
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
lahf
hlt
add
mov
add
test
add
jl
add
je
add
insb
hlt
add
fs
add
pop
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
hlt
add
int3
hlt
add
loopne
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
pop
cmc
add
js
add
mov
inc
add
rorl
jmp
or
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
hlt
cmc
add
cld
cmc
add
add
add
or
add
adc
add
sbb
add
and
add
aaa
testb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
push
testb
pop
testb
push
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
adc
add
cmp
add
pusha
testl
push
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
fcomip
add
int3
testl
add
add
lods
testl
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
clc
testl
add
add
and
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
cwtl
clc
add
mov
clc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
xor
add
cmp
add
inc
stc
add
dec
stc
add
push
stc
add
pop
stc
add
fs
add
ja
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
nop
stc
add
cwtl
stc
add
test
add
mov
inc
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
