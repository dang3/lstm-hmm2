add
add
outsb
add
add
push
add
ja
add
add
inc
add
je
je
outsl
add
dec
add
insb
add
add
je
add
dec
add
popa
add
je
imul
push
add
je
insb
add
push
add
js
je
add
inc
add
je
je
outsl
add
push
add
js
je
add
add
inc
add
popa
add
push
add
js
je
add
add
inc
add
je
je
outsl
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
inc
add
arpl
add
add
add
imul
add
je
push
add
js
je
add
dec
add
insb
add
add
je
add
inc
add
jo
push
add
jb
imul
add
popa
add
add
add
add
outsb
add
arpl
je
imul
inc
add
jb
add
jb
add
add
inc
add
je
imul
inc
add
jb
add
jb
add
add
push
add
je
insb
add
push
add
js
je
add
push
add
outsb
add
add
push
add
js
je
add
add
dec
add
outsb
add
push
add
js
je
add
add
push
add
outsb
add
add
inc
add
popa
add
add
add
imul
outsl
add
add
add
dec
add
outsb
add
add
add
dec
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
je
imul
push
add
je
insb
add
add
inc
add
arpl
imul
add
outsl
add
outsb
add
add
add
arpl
jb
outsl
add
push
into
jnp
inc
out
fwait
dec
outsl
inc
add
pop
push
add
add
add
mov
add
add
inc
add
add
add
int3
add
adc
mov
and
xor
pusha
add
add
add
add
imul
add
pusha
add
adc
lods
add
add
add
add
out
int3
add
sbb
scas
add
add
add
add
add
add
add
xor
mov
add
add
loop
adc
inc
add
cmpsb
add
cmp
pop
add
add
fiadds
adc
mov
add
push
add
add
add
mov
adc
add
jg
inc
add
mov
add
adc
adc
push
add
aaa
add
add
add
adc
adc
xor
add
add
rolb
jo
pusha
add
adc
add
jg
pusha
add
jg
sbb
faddl
pusha
add
adc
adc
jg
push
add
dec
add
jo
pusha
add
adc
push
add
pusha
add
push
add
aam
filds
add
lea
dec
add
pop
add
add
add
pusha
add
add
add
add
add
pusha
add
sub
dec
add
test
dec
add
pusha
add
inc
add
add
add
add
je
push
add
add
add
add
add
int3
add
add
xor
and
add
add
pop
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
jo
dec
add
add
pusha
add
inc
add
add
add
add
add
add
add
mov
add
inc
add
mov
loope
or
int3
add
add
add
add
add
add
xchg
flds
add
add
add
and
dec
add
xor
js
sub
pop
add
add
cmp
loope
add
add
add
add
add
add
add
pusha
add
add
add
pusha
add
add
add
add
add
add
clc
add
pop
add
add
pusha
add
add
imul
int3
add
push
add
add
dec
add
cmp
pusha
add
int3
add
add
add
add
dec
add
add
add
add
add
add
pusha
add
add
add
mov
add
pop
add
add
add
add
add
add
add
out
pop
add
add
rolb
adc
add
add
add
add
add
add
add
add
add
add
arpl
fadds
nop
add
add
add
add
mov
add
add
add
add
test
push
add
add
add
add
push
add
add
add
add
push
add
fildl
rolb
sbb
imul
add
pusha
add
flds
jg
xchg
pusha
add
xchg
push
add
add
add
add
pusha
add
js
hlt
add
add
add
adc
and
dec
add
sub
add
add
pusha
add
add
add
add
add
fildl
popl
addb
add
add
add
into
add
add
add
pusha
add
add
add
pop
add
add
add
add
add
movsl
add
add
add
add
xor
inc
add
add
movsl
add
add
pop
add
mov
add
add
mov
mov
inc
cmp
sbb
dec
adc
ds
add
dec
std
mov
fisubrs
dec
lret
fsubrl
clc
or
and
or
das
fildl
lcall
fdivrs
mov
dec
mov
sub
sub
dec
sti
push
repz
orl
rcrl
lock
in
dec
clc
inc
push
imul
add
paddusb
xlat
inc
dec
sbb
pop
lds
bound
ljmp
xorb
daa
mov
jno
clc
ds
clc
iret
mov
cld
cmp
incb
sarl
mov
or
cmp
sbb
inc
xor
pop
sbb
push
push
dec
iret
gs
xor
fmul
pop
int3
inc
mov
mov
xor
lods
shll
mov
scas
push
aas
sahf
xor
jle
nop
push
lcall
loope
cmp
jb
jmp
mov
xorb
dec
jae
ret
clc
repz
inc
dec
lret
pop
stc
dec
mov
push
cs
mov
outsb
es
jg
mov
nop
sbb
int
jg
jecxz
xor
rolb
sahf
shrl
ds
repz
push
or
insl
and
daa
jp
mov
xchg
call
and
movsb
jno
mov
add
push
pop
insb
outsb
jmp
aas
lahf
xchg
dec
jg
jecxz
jno
cli
lods
ret
mov
xchg
xorb
mov
in
mov
and
pop
push
arpl
mov
sahf
mov
push
add
mov
jne
xor
xlat
dec
loopne
into
repnz
push
in
lock
jae
mov
mov
cmp
inc
sbb
xchg
jle
cmp
int3
rcrl
pop
mov
out
mov
and
mov
cs
xchg
dec
jge
xchg
int3
sub
xor
dec
jl
and
dec
cmpsl
mov
cvtpi2ps
dec
shrb
pushf
aad
ret
sbb
icebp
les
ljmp
pop
mov
push
push
dec
jae
jecxz
sbb
cs
mov
cmc
pop
push
add
sbb
fdiv
pop
inc
xor
or
pusha
movsl
lret
mov
mov
push
cmc
cmp
pushf
lret
and
sub
and
lds
insb
mov
push
mov
cmp
ja
cmp
fsubrl
pop
dec
scas
xor
inc
icebp
xor
lahf
clc
movsb
dec
mulb
shlb
push
lock
fdecstp
inc
mov
enter
daa
inc
cmp
ficomps
mov
inc
nop
movsl
incb
mov
inc
pop
push
aad
cld
mov
call
leave
push
add
xchg
lret
movsl
sti
sti
outsl
stc
dec
sti
jg
adc
in
xchg
fidivrl
pop
jmp
sub
loop
adc
add
add
add
add
rolb
add
add
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
push
mov
push
push
push
call
mov
movb
mov
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
call
call
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
pushl
pushl
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
cmp
sub
sbb
or
jb
sbb
cmp
lods
inc
pushf
dec
mov
sbb
loop
aas
int3
das
cmp
sub
sbb
or
jl
insb
pop
mov
lods
dec
call
xor
paddusb
int3
das
cmp
sub
sbb
or
jl
insb
pop
mov
popf
mov
push
mov
imul
lods
jle
cmp
insb
jbe
cmp
outsb
jle
jbe
push
cmp
cld
add
mov
nop
or
mov
add
inc
mov
mov
orb
add
stc
push
fnsave
xchg
aam
test
and
jbe
dec
mov
pop
arpl
xchg
pop
in
gs
fildll
out
jl
jl
mov
fidivrl
add
test
ret
or
jbe
xor
lods
mov
dec
push
lods
jl
sbb
out
sbb
fldenv
pop
mov
aas
test
lods
jl
iret
scas
in
or
pop
fs
in
dec
movsb
inc
bound
out
sbb
or
jl
insb
pop
mov
lods
out
jge
push
cld
and
loope
daa
int3
sbb
jns
imul
std
sbb
aas
or
pop
test
dec
cwtl
inc
aas
cltd
pop
mov
cmpl
add
pop
dec
pushf
fnstcw
scas
cmp
sub
mov
pop
push
lods
dec
das
jne
or
pop
mov
lods
dec
pushf
jg
outsl
cld
pop
in
paddusb
int3
das
cmp
sub
sbb
or
jl
insb
pop
mov
lods
dec
pushf
jg
outsl
cld
pop
in
paddusb
int3
das
cmp
mov
cmpsb
clc
hlt
insb
arpl
fidivs
jmp
scas
loopne
addr16
shl
mov
jo
bound
mov
data16
mov
pop
out
pop
addr16
dec
pop
mov
add
jp
sub
inc
pop
cs
and
push
dec
insb
xorl
sbb
push
insb
or
lret
mov
test
dec
or
sahf
inc
inc
aaa
push
add
mov
jae
mov
mov
ljmp
cmp
jno
xor
xchg
daa
dec
dec
clc
inc
adc
shl
or
inc
jl
push
nop
add
pop
cmp
popa
adc
pop
jb
in
es
xchg
addb
popa
ja,pt
hlt
popf
movsb
mov
dec
mov
cmp
aaa
pop
sub
inc
cmp
loope
in
icebp
xchg
stos
adc
adc
mov
pushf
mov
sarb
and
repz
inc
iret
test
sbb
iret
mov
add
sub
addr16
call
mov
sub
repz
shr
rcrb
mov
adc
adc
mov
jnp
jno
lret
sbb
xchg
mov
das
mov
sub
mov
and
je
je
lcall
jle,pt
shll
nop
inc
shlb
lret
dec
inc
pop
leave
out
mov
pop
loopne
add
xor
addr16
icebp
je
xlat
mov
push
sbb
mov
clc
inc
stc
xlat
imul
daa
stos
jg
dec
in
fs
enter
xchg
mov
arpl
das
std
inc
cmp
out
inc
mov
stos
sbb
mov
popa
pop
pusha
and
out
sbb
xor
sub
mov
cmpl
test
stc
push
jge
pop
add
adc
je
cmpl
xor
fsubrl
bound
jl
aaa
mov
scas
dec
aaa
mov
loop
and
int
ja
xchg
rcrb
dec
setne
cmc
mov
aam
pop
dec
adc
fists
je
adc
pop
cmp
jecxz
xchg
filds
pop
sub
rorl
cmp
cmp
in
call
out
inc
sahf
in
ret
add
add
fldt
test
aaa
dec
movsb
jno
or
mov
mov
mov
in
test
nop
or
ret
incb
jne
and
test
adc
stc
adcl
xor
addr16
sti
gs
les
mov
mov
push
dec
cmp
xchg
dec
xorl
add
sbb
shll
mov
pop
cmp
hlt
cltd
call
pop
fiadds
fcoml
arpl
mov
cld
mov
idivb
mov
jo
push
jmp
xor
mov
jl
scas
jmp
dec
pop
cld
adc
push
fldt
aam
pop
mov
push
nop
dec
bound
dec
xchg
mov
and
mov
mov
cltd
mov
dec
dec
test
adc
adc
dec
mov
push
cmc
popa
shrl
notb
mov
mov
inc
inc
fwait
add
cltd
jns
repz
xor
lea
aas
inc
bound
test
lcall
sub
xor
jge
ss
fs
push
sub
or
xchg
movl
jge
loop
sbb
or
in
cld
cltd
clc
jnp
inc
jecxz
mov
loope
pop
xor
mov
or
jnp
es
loop
mov
pusha
sbb
dec
sub
jbe
pop
xchg
notb
nop
int3
lcall
popa
jb
jg
mov
test
adc
cs
sbb
xchg
mov
ja
inc
pop
mov
and
and
add
add
movsb
mov
dec
ss
push
into
mov
mov
scas
sbb
mov
xor
repz
jle
sub
push
push
mov
adc
sbb
lock
fprem1
js
pop
loop
push
sarl
sti
mov
adc
inc
icebp
lcall
out
fdivrs
jne
rcrl
push
dec
sti
shrl
jmp
inc
insl
scas
cltd
mov
cmpsl
adc
sub
mov
mov
jnp
loope
fwait
insb
dec
sarl
sbb
bswap
fldl
and
inc
movsb
jp
and
mov
or
addb
stos
sub
mov
das
popf
dec
aaa
add
inc
xchg
and
sub
jo
sbb
aam
in
ds
movsl
icebp
push
mov
ljmp
xchg
shlb
mov
inc
fmulp
repnz
and
testb
mov
mov
fcmovnu
xor
mov
pop
pop
and
outsl
mov
push
adc
outsb
cmpsb
sbb
xchg
jmp
add
rcrb
push
stc
mov
movsb
cmp
adc
pop
pop
stc
jg
cwtl
jo
fnstsw
es
or
sbb
std
out
cmc
mov
fisttpll
popf
xlat
test
cmp
or
jns
pop
std
cld
push
and
jne
mov
in
mov
ret
mov
arpl
mov
jg
jns
mov
loope
jne
test
scas
or
in
dec
lock
and
xchg
mov
loopne
test
push
imul
sbb
and
jmp
add
repz
inc
inc
das
xchg
rcrl
cmc
stc
cmpsb
push
inc
push
sbb
mov
shlb
in
push
idivb
loope
inc
int
inc
shr
popf
cld
movsl
jg
xchg
rclb
movsb
dec
sti
and
inc
sbb
sub
mov
cmc
out
xchg
sbb
in
push
push
ljmp
cwtl
dec
scas
lea
push
out
test
lret
mov
dec
mov
and
fstpt
in
inc
sub
and
pop
gs
mov
repz
imul
daa
xchg
icebp
shrb
and
sub
and
clc
dec
mov
aas
test
dec
int3
or
fadds
into
ret
pusha
roll
lret
cmpb
arpl
mov
cli
rcl
xlat
cmp
inc
push
pushf
imul
out
inc
stc
rcr
cmp
dec
lcall
jg
leave
mov
sbb
cli
cltd
jle
out
lods
pop
loop
stos
sub
mov
or
mov
lods
fldt
sub
stos
jno
xor
push
repz
call
in
repz
fidivs
aad
das
fdivrs
mov
mov
enter
mov
and
test
aaa
adc
mov
out
std
movsb
mov
iret
mov
xchg
xor
ds
add
adc
mov
cmp
xorb
scas
pop
or
in
aad
cmp
mov
dec
ljmp
fists
xor
xchg
fildll
jo
push
test
push
ret
adc
pop
loope
sarl
movsb
enter
js
mov
je
shlb
adc
fcoms
das
pop
jge
push
xor
sbb
dec
clc
and
add
stos
xor
jno
or
pop
mov
xchg
loop
popw
out
push
xor
jle
xor
negl
add
cmp
push
bound
add
jge
iret
jae
popf
mov
mov
bound
and
mov
cmpsb
and
add
xor
mov
aas
sub
sbb
or
xchg
push
and
mov
or
xlat
scas
out
bsr
sub
xchg
jmp
ja
cmove
ljmp
and
out
cmpsl
push
mov
popf
cmp
cmp
gs
or
gs
dec
call
clc
std
adc
sub
and
out
jmp
push
jecxz
pop
in
nop
cld
shll
addb
fxch
cmc
lahf
sahf
loop
and
xchg
fs
divb
popf
mov
sub
pop
pushf
fistpl
add
add
jnp
add
fdivrl
mov
adc
dec
jmp
outsb
add
xchg
adc
daa
jg
loop
adc
lret
cli
loopne
jbe
and
mov
outsb
jo
mov
sbbb
out
dec
and
mov
dec
xchg
push
mov
outsl
pop
hlt
ret
repz
addl
out
mov
mov
jecxz
ds
fdivl
data16
frstor
mov
mov
out
mov
ss
cmpsb
lock
repz
lahf
int3
xchg
mov
mov
pop
repz
sahf
fcoml
push
fbstp
clc
mov
stos
sahf
jo
adc
inc
out
mov
lcall
push
fdivr
add
mov
xchg
leave
and
out
mov
jl
loop
in
fs
push
xor
stos
dec
sbb
shl
cs
and
add
sbb
sbb
cmp
xchg
ss
inc
xlat
push
jae
pop
cmp
lds
sub
bnd
out
mov
adcl
push
inc
ss
pushf
lret
enter
add
ja
cmp
icebp
mov
subb
int
pop
cmc
rorb
jo
mov
mov
movhlps
daa
push
out
arpl
lock
and
lcall
rolb
fcoml
jno
std
inc
sbb
jne
test
mov
mov
insb
add
cmpsb
mov
jge
aad
and
inc
jge
sbb
xchg
push
xchg
test
fstl
sbbl
movsb
fldz
icebp
loope
pusha
sbb
cltd
dec
pop
insl
scas
arpl
arpl
mov
mov
insb
pop
decb
xchg
add
loope
sbb
scas
shll
leave
xor
push
cmp
xchg
outsl
in
mov
lock
cli
mov
inc
xchg
sarb
fldt
pusha
jl
ljmp
or
mov
lret
adc
movsl
fdivrl
sahf
repz
and
test
es
xlat
and
loop
inc
add
lret
add
xor
xchg
mov
inc
xchg
inc
imul
scas
arpl
pop
inc
sbb
movsl
test
jle
in
push
es
ret
rclb
push
mov
or
iret
sub
test
cli
push
pushf
dec
push
outsb
cmpsl
xor
test
inc
test
bound
xchg
ds
inc
fadd
cwtl
icebp
and
push
jl
pop
rcll
lret
mov
into
aam
push
out
mov
xchg
push
imul
cmc
jmp
mov
ja
mov
pop
repnz
mov
mov
push
subl
stc
mov
cli
mov
xchg
clc
std
ja
xchg
outsb
cmp
mov
cmp
lock
adc
xor
into
stos
sub
ljmp
jne
mov
arpl
push
jp
imul
pop
cltd
push
shll
jae
frstor
ja
fmuls
push
jnp
hlt
aam
fldenv
mov
fnstcw
ret
push
stc
ret
mov
sub
fnstenv
pop
shlb
cmpsb
or
jg
mov
push
stos
xor
pop
out
rolb
in
mov
xor
out
ja
xchg
xchg
cmpsb
xchg
ret
dec
lcall
inc
adc
add
sbb
xor
imul
mov
insb
fistpll
scas
inc
cmp
out
cmp
shrl
mov
pop
test
push
xchg
pop
inc
sub
xchg
mov
mov
fcompl
xchg
lret
sbb
pop
fildll
add
lret
and
pusha
shll
int
imul
inc
cmpsb
xor
sub
add
jo
dec
inc
pop
cmp
pushf
testb
ror
sahf
cs
xor
lret
lret
mov
loope
push
cwtl
or
jne
scas
jg
mov
xchg
rep
pop
mov
add
adc
and
mov
xlat
mov
mov
sub
test
dec
jno
in
pop
jns
lods
mov
nop
js
jmp
addr16
xchg
jno
mov
cwtl
std
mov
xchg
mov
mov
xchg
xor
mov
cmp
sbb
add
repnz
ljmp
adc
stc
xor
cwtl
xchg
mov
sbb
not
pop
xchg
rol
enter
push
movsb
sub
sbb
cmpsb
outsl
lock
aaa
cmp
jne
adcl
jg
jae
mov
std
lret
test
push
subb
push
cmp
notb
popf
faddl
sbb
mov
jne
sbb
push
lahf
adc
adc
mov
lds
repz
in
shrb
insl
lods
xor
inc
aam
lods
addr16
sarl
pushf
adc
sub
push
xor
stos
scas
sahf
or
xor
mov
ljmp
scas
fmuls
cmc
movsl
rol
jnp
flds
in
fsts
mov
mov
lds
or
mov
pop
mov
xchg
fprem1
adc
add
push
xchg
jbe
xor
pop
push
sbb
das
lret
or
jne
add
test
test
push
loope
or
call
mov
nop
loope
pop
filds
jle
flds
lea
xor
out
push
adc
das
dec
outsl
sbb
imul
or
out
cs
lods
mov
daa
sub
dec
push
inc
mov
xchg
pusha
stos
shl
xor
mov
adc
inc
push
dec
sbb
fistl
in
or
out
push
xor
xchg
ret
inc
repz
decb
push
dec
ja
jne
mov
jle
loope
dec
mov
mov
popa
xchg
clc
dec
inc
or
sub
repz
stc
push
jg
inc
in
push
out
iret
inc
pop
les
rcll
pop
ret
mov
int
mov
hlt
add
int3
sbb
pop
mov
add
jge
in
mov
es
stc
jmp
dec
mov
mov
adc
pop
incb
aam
addr16
and
cmp
out
mov
dec
test
cmp
popf
enter
push
icebp
inc
dec
xor
mov
jae
sarl
sub
or
cmp
outsl
fxch
in
cs
pop
mov
lods
frstor
pop
lock
bound
push
jbe
push
xlat
in
add
add
jmp
enter
mov
mov
sbb
leave
lret
hlt
loopne
adcb
ss
rorb
and
dec
pushf
mov
mov
outsb
pop
push
mov
aam
daa
pushf
add
faddl
mov
std
outsb
fs
push
inc
add
fstl
inc
clc
sub
aas
xlat
cmpsl
mov
out
mov
cmpsb
cmp
scas
mov
shll
out
or
fidivrl
mov
test
stos
mov
xlat
popf
cld
xchg
dec
lods
pop
imul
sub
flds
xor
add
sbbl
adc
icebp
stc
inc
inc
jmp
jmp
or
mov
and
aas
out
xor
in
in
into
xchg
out
push
addr16
jno
inc
xchg
jl
mov
add
movl
or
inc
sbb
shll
xchg
cmp
cmpsl
and
shlb
sbb
pusha
insb
daa
mov
lret
add
cmp
adc
pop
fidivrl
leave
mov
push
push
mov
jno
sub
out
pusha
lret
mov
pop
add
cmp
jl
adcb
iret
adcl
mov
mov
xor
push
inc
pushf
inc
stos
cmp
mov
cmp
push
mov
outsb
leave
push
test
xor
pop
pop
les
xor
jno
push
sti
mov
std
andb
push
mov
ljmp
jle
push
ret
cli
xor
andl
pop
in
push
mov
mov
xchg
inc
insl
sbb
mov
cli
clc
push
or
mov
xchg
loopne
mov
push
fwait
push
inc
nop
iret
imul
add
std
xchg
loope
lret
dec
je
mov
iret
les
outsb
push
push
pop
add
and
push
and
mov
insl
xchg
inc
daa
insb
add
lret
ret
add
push
pop
in
jnp
pop
repnz
xchg
add
mov
ja
mov
lahf
inc
negl
xchg
adcb
push
ja
sub
or
call
push
fistpll
in
inc
getsec
rclb
push
push
out
jp
add
shrb
cmp
mov
and
mov
lcall
and
push
inc
lahf
aas
sbb
adc
leave
inc
cmp
mov
and
mov
mov
cmp
out
add
jne
mov
lock
push
into
into
mov
pop
sti
jecxz
jmp
popf
hlt
adc
dec
mov
add
out
or
gs
insl
ss
fnstcw
sub
stc
cmp
inc
pop
jl
jo
fs
cmpsl
aad
inc
fcmovnbe
lods
pop
inc
sbb
mov
lret
popa
push
lcall
mov
xor
or
mov
dec
loopne
mov
icebp
js
out
iret
dec
xchg
xchg
xor
or
imul
addr16
push
adc
sbb
mov
inc
ror
fnsave
les
cmc
pop
fwait
sub
mov
out
imul
xor
or
test
jmp
vpunpckhdq
push
cmp
mov
data16
insl
xchg
mov
pusha
cmp
loope
jno
les
popf
adc
inc
mov
into
mov
cmp
lcall
adc
mov
jbe
mov
push
int
mov
inc
mov
imul
out
test
mov
mov
outsb
insb
sbb
outsl
add
movb
jbe
add
dec
or
popa
int3
shlb
dec
fadds
fwait
out
mov
mov
push
in
ffree
mov
sahf
fsubp
hlt
mov
pop
ret
int
fldt
cltd
cmc
xchg
mov
xlat
adcl
xchg
cmpsl
mov
enter
negl
test
je
insl
xchg
mov
xchg
cmp
sbb
adc
push
or
repnz
sbb
ss
shrb
pop
jle
iret
xchg
mov
out
dec
fisttps
mov
scas
mov
ficoms
pcmpeqw
cmp
in
add
scas
ret
punpckhbw
pusha
inc
lahf
xlat
adc
js
out
test
call
cltd
pop
iret
sahf
jge
xor
mov
xchg
push
xor
int3
enter
xchg
add
push
bound
std
push
out
pushf
jg
cmc
mov
pop
push
push
xor
jae
arpl
inc
xorb
inc
sub
xchg
push
xchg
mov
inc
push
popf
sbb
sahf
inc
cli
test
aas
adcl
mov
adc
ja
fcoml
xchg
hlt
lods
stos
aaa
mov
aad
es
sbb
call
xchg
sub
mov
jg
mov
ja
in
mov
jo
mul
inc
xchg
xor
mov
mov
xchg
and
jg
notb
or
xor
int
dec
shlb
cmp
xchg
aam
or
aas
push
mov
sub
push
cmp
fimuls
test
int3
loopne
lahf
or
test
mov
popa
and
pop
les
adc
cmc
jmp
pop
cmp
fwait
mov
sahf
mov
dec
or
stos
pop
dec
and
cmpsl
lret
xorl
sbb
cmp
mov
fsts
xchg
cmc
jno
pusha
xor
mov
pop
mov
push
push
sub
or
fwait
push
addr16
or
sbb
push
mov
loop
xor
insb
lret
adc
inc
cmp
sbb
jg
popa
into
and
xor
incb
inc
enter
push
jnp
fwait
inc
sbb
out
dec
sarb
loopne
cmp
fldl
notb
mov
jns
xchg
mov
or
or
stos
xchg
xlat
scas
dec
xor
pop
mov
mov
add
imul
pop
xchg
xor
incl
inc
jnp
pop
mov
addr16
adc
mov
movsl
fs
inc
orb
dec
push
push
iret
xor
sbb
push
aam
aad
addr16
insb
dec
adc
repz
fimull
mov
arpl
xchg
pop
aas
add
sub
xchg
jg
push
mov
scas
ds
fsubr
adc
ficomps
xor
xchg
ss
hlt
sar
pop
pop
call
int
adc
stos
dec
lods
cmp
testb
adc
cld
dec
sub
mov
popf
scas
mov
into
pushf
or
std
je
rorb
jge
fcoms
mov
jmp
sbb
das
sub
cmp
pop
mov
mov
iret
dec
mov
pop
add
clc
incl
mov
test
aaa
les
push
mov
dec
fsts
adc
mov
xor
cli
or
jl
insb
pop
mov
lods
dec
pushf
jg
outsl
cld
pop
in
paddusb
int3
das
cmp
sub
sbb
or
jl
insb
pop
mov
lods
dec
pushf
jg
outsl
cld
pop
in
paddusb
int3
das
cmp
sub
sbb
or
jl
insb
in
mov
lods
dec
pushf
jg
data16
sbb
paddusb
int3
lret
cmp
sub
sbb
or
jl
insb
pop
aas
dec
outsl
mov
jg
sbb
inc
xor
in
mov
fstpl
sub
add
or
mov
movsl
pop
shrb
sbb
xor
lods
inc
mov
lds
jge
dec
movsl
pop
aad
mov
sbb
mov
jecxz
inc
lods
or
popf
xchg
insl
jmp
xor
imul
push
mov
push
mov
jno
cbtw
cmpsb
out
xchg
push
movsb
orb
aam
sbb
push
in
or
mov
loope
adc
orb
dec
push
cmp
push
cmp
fucom
xor
add
pop
aad
jp
dec
dec
pop
mov
push
cmpb
dec
fdivs
push
lods
mov
jge
xchg
andb
fucom
js
sbb
lret
shrb
fsubrl
push
es
sub
nop
mov
jmp
jae
aad
loop
ss
pushf
adc
insl
jge
mov
movsl
mov
mov
cmc
loop
in
add
fstl
add
insl
pop
jge
dec
mov
cmp
addr16
jae
jno
dec
pushf
cmp
xor
callw
hlt
sbb
les
cmpl
xchg
jb
out
mov
sbb
push
mov
or
sub
xsha1
cmpsb
dec
mov
dec
lods
ss
inc
test
movsl
adc
gs
xchg
insl
test
dec
movsl
pop
aad
lds
adc
int
fstl
inc
mov
xchg
insl
test
dec
movsl
pop
aad
lds
adc
mov
data16
jle
es
xchg
push
fnstcw
mov
sbb
lea
test
pop
out
dec
daa
jnp
iret
dec
jb
jl
aaa
sbb
faddl
jnp
jl
sar
or
leave
xchg
cld
add
pop
adc
push
sub
pop
mov
jmp
lret
inc
mov
jae
das
lock
mov
std
dec
jg
jae
sti
repnz
push
in
cmp
and
cli
xchg
or
int
and
mov
and
cmpsl
mov
xchg
mov
and
inc
mov
sbb
hlt
cmpsl
inc
popa
pop
inc
cltd
mov
add
mov
sub
mov
aad
divb
scas
dec
mov
ss
add
lods
lods
adc
mov
inc
in
sbb
sahf
mov
test
adc
fnstsw
std
bound
inc
dec
fidivrl
dec
mov
movsb
adc
lods
mov
in
push
daa
int3
dec
push
mov
aad
and
adc
pop
data16
in
adc
sbb
sahf
mov
nop
jno
fdivl
clc
pusha
xchg
out
lss
stos
insb
outsb
jp
push
cmp
orl
insb
add
jbe
sahf
xchg
xorl
mov
ret
into
lds
push
pop
xchg
inc
aas
mov
push
test
lds
lods
or
lods
je
sub
pop
out
xchg
in
sub
rcrl
iret
dec
fsubrs
lods
push
imul
fidivs
in
mov
pop
mov
andb
fisubrs
and
ret
xor
mov
cmpsl
lea
test
jbe
jle
or
cltd
jns
cltd
mov
aam
xor
scas
div
iret
xor
cmp
inc
sbb
and
mov
pop
xchg
mov
bound
bndstx
aam
popf
lods
decb
insb
pop
or
xchg
data16
data16
jl
mov
ds
test
pop
js
mov
movl
xchg
xor
shrb
loop
fistpl
hlt
jnp
std
rol
loop
lods
or
pxor
lock
int3
sbb
add
or
popf
jae
icebp
or
pop
scas
hlt
jecxz
lcall
or
mov
pop
insl
loope
stos
stos
mov
fsubs
mov
daa
wrmsr
rol
es
bound
pop
xor
inc
cmp
push
adc
divb
mov
adc
ret
shrl
sub
out
lcall
dec
or
repz
sbb
mov
push
in
cmp
mov
and
and
push
iret
push
lods
js
out
pop
movsb
cmp
jg
shr
dec
insl
sub
push
mov
ljmp
xchg
adc
cs
sarl
cmp
aam
xorl
jno
jecxz
adc
mov
cwtl
jae
fwait
ljmp
int
lock
clc
add
ss
shrb
cs
fbstp
stc
outsl
repz
movsb
adc
mov
and
adc
movsb
pop
mov
leave
push
push
lret
ljmp
jno
add
push
jb
loop
popa
sub
enter
fisubrs
mov
rcrb
pushl
or
jg
lret
dec
pop
push
cmpsb
or
pop
jbe
jp,pt
lods
scas
jg
xor
gs
jmp
scas
push
sub
decb
sub
nop
mov
lea
jg
rclb
gs
subl
stos
jns
sbb
lds
jb
jl
mov
imul
dec
dec
into
fidivrl
popf
mov
sbb
inc
pop
pop
ja
mov
jg
movl
ret
cwtl
adc
mov
pop
lods
mov
int
fidivl
jg
mov
and
and
sbb
add
aam
dec
shlb
pop
les
std
pop
mov
mov
lods
inc
jb
in
insl
push
xchg
arpl
dec
jno
inc
inc
mov
xchg
mov
jge
xchg
mov
or
push
outsb
mov
sbb
ret
mov
push
xchg
addr16
ja
mov
xchg
addr16
push
sbb
xchg
add
jo
pushf
cmpsl
jp
movsl
mov
fs
ja
mov
fwait
sub
pop
push
test
daa
loopne
cmp
loope
fwait
xchg
pop
sub
mov
cmp
and
sub
or
scas
je
mov
js
repz
hlt
adc
mov
scas
mov
lock
inc
out
ds
outsb
jle
jle
jg
xlat
sbbb
adc
push
xor
adc
and
sub
inc
lock
inc
ret
test
xlat
sbb
clc
adc
inc
push
jecxz
pop
adc
push
mov
insl
pusha
in
mov
dec
xchg
rcl
std
in
jp
mov
jae
or
lcall
stos
call
add
or
mov
aam
sbb
inc
mov
int
mov
stc
int3
call
dec
popf
inc
xor
jp
insl
or
aaa
pop
arpl
in
push
and
jno
jb
fisubs
fsub
pusha
mov
out
xchg
add
adc
emms
mov
push
xchg
pop
jmp
scas
jae
aaa
stos
outsl
pop
or
mov
inc
push
pop
mov
pop
jb
push
dec
data16
mov
cmp
mov
mov
lock
loop
imul
inc
mov
mov
movsl
jg
ss
mov
sbb
sub
cmc
inc
in
sbb
push
popa
fsin
subb
pop
test
mov
pop
sub
dec
aad
add
jbe
sbb
xchg
daa
xlat
inc
xchg
lods
jnp
jl
stos
fwait
lcall
divl
sahf
addr16
sub
stos
adc
mov
and
aad
jg
xor
mov
icebp
push
fildl
rcrb
gs
push
outsb
push
por
dec
fsubrs
cli
mov
roll
ret
movsb
adc
mov
je
sbb
cmp
jmp
jns
and
cmp
dec
mov
xor
fmuls
fdivrs
std
call
imul
notb
js
inc
push
mov
push
and
fdivs
cmpsl
int
mov
and
sub
xchg
mov
dec
sub
nop
call
mulb
cs
in
and
add
jnp
mov
test
subl
push
xchg
mov
js
scas
mov
mov
cmp
popf
lea
cmp
inc
and
call
leave
das
scas
leave
imul
cmp
fs
leave
out
test
test
mov
push
cmp
dec
fstpt
das
or
pop
or
es
jge
push
push
and
divl
adc
cmpsb
cli
fldl
dec
mov
inc
pusha
mov
shrb
push
icebp
dec
adc
movsl
pop
mov
bound
mov
cmp
loope
fs
dec
in
or
daa
or
fs
xor
inc
sub
xchg
pop
lea
jno
mov
cmp
xor
lret
stos
movsb
lahf
popa
cmp
sbb
lock
leave
imul
mov
xor
lea
mov
mov
test
dec
inc
cmp
outsb
cwtl
outsb
adc
sbb
push
movsl
dec
movsl
std
xor
decb
lods
sti
add
push
inc
cltd
add
inc
test
mov
add
aad
hlt
sti
lcall
data16
cs
xchg
in
lahf
in
int
mov
cmc
mov
mov
dec
xchg
lods
xor
xor
cmp
out
pop
cmp
jae
dec
dec
xchg
mov
or
push
xor
xchg
lock
in
and
iret
mov
pusha
sub
iret
in
cmp
xchg
mov
test
mov
ljmp
mov
out
es
jae
xlat
xchg
shl
mov
mov
leave
iret
and
cmp
test
mov
arpl
fstl
and
jecxz
push
test
inc
or
lret
call
repz
cli
sub
aaa
imul
std
inc
test
stos
and
add
dec
cmc
sbb
pop
push
inc
mov
xlat
jno
in
push
sub
imul
negl
mov
xchg
sbb
mov
mov
fwait
imul
cmp
push
mov
push
dec
out
jnp
sub
jb
icebp
push
push
lret
and
cwtl
leave
jle
ficompl
flds
cmp
icebp
or
mov
out
mov
cli
call
or
pop
push
push
and
inc
lods
out
pushf
mov
aad
mov
cmc
je
xlat
in
fidivs
add
imull
fsubr
cmpsl
outsl
and
fst
cmpsl
enter
jo
push
sbb
cltd
outsl
stos
ret
pop
mov
cmp
cmp
push
divb
push
outsb
bound
movsl
add
pop
pop
add
lret
lods
cltd
pop
pop
mov
int3
pop
push
in
xchg
sbb
xchg
outsl
or
push
into
pop
test
jecxz
stos
mov
in
aas
push
xor
rcll
inc
adc
xor
mov
test
adc
loopne
add
loope
xchg
int
push
hlt
sbb
int3
inc
cwtl
push
push
loope
fnsave
rclb
adc
fwait
pop
push
jo
bound
mov
fidivrl
jmp
std
scas
icebp
xchg
or
pop
ja
loopne
mov
lds
jns
add
fwait
or
divb
cs
addr16
jecxz
pop
leave
pop
jle
pop
inc
clc
mov
mov
xchg
hlt
sub
shlb
or
sbb
ficompl
jae
push
pusha
jb
or
pop
sub
test
shll
push
add
push
fsubr
xchg
sbb
inc
lea
into
xor
cltd
or
movsb
adc
sub
iret
inc
mov
shll
mov
pop
pop
fadd
jno
dec
jecxz
mov
test
jl
icebp
sub
into
imul
xchg
jno
pop
and
mov
in
sub
or
bound
nop
cmpsb
and
xor
or
mov
ja
dec
sub
outsb
jb
daa
sahf
movl
push
mov
call
jp,pt
sbb
jb
cmp
repnz
mov
and
out
jecxz
and
in
add
aam
jg
xor
pushf
jno
or
cmpsl
cmpsb
pop
jg
xor
sbb
imul
cmp
lds
xor
or
sahf
fnsave
cltd
push
dec
xchg
and
cmp
and
out
outsb
dec
and
dec
mov
outsl
insb
fcomps
push
jb
rorl
imul
cmp
sbb
scas
lea
xchg
xor
rorl
jns
mov
jne
loope
mov
cld
cltd
mov
cmp
cli
adc
mov
mov
cmpsl
or
xchg
arpl
nop
loop
notb
mov
mov
enter
fsubrs
cmc
adc
add
mov
pop
fldl
jle
xlat
stos
ljmp
call
jo
sbb
sbb
sbb
sbb
fs
inc
cmp
dec
xor
daa
jae
aas
dec
ret
mov
add
xchg
adcb
ret
sarb
sub
push
cmp
cmp
imul
cs
jb
ja
shl
fidivs
xchg
les
jnp
in
mov
ret
sar
mull
js
call
ljmp
dec
sub
fdivl
imul
cmp
sbb
lds
out
xchg
popa
sbb
mov
aas
dec
cmc
outsl
loope
js
mov
add
adc
outsl
mov
lock
mov
loopne
cmp
fcomps
popw
and
mov
or
sub
ret
test
rorb
decb
xchg
ljmp
mov
push
or
adc
pop
dec
fildl
cmpsb
and
sti
pusha
jmp
dec
adc
nop
notl
popf
mov
fdivrp
daa
mov
incb
pop
outsl
int
leave
jnp
mov
and
mov
sub
test
xchg
dec
lock
dec
xor
sub
and
scas
repz
jns
inc
or
or
xor
sub
out
mov
in
dec
xchg
int
and
je
das
enter
add
adc
and
cltd
jge
sub
sti
push
lret
pop
mov
fimull
fistl
pop
or
xchg
dec
pop
jns
jmp
adc
addr16
lods
out
cwtl
in
push
cmpsb
pop
cmpb
push
or
sub
push
sub
mov
mov
xchg
loopne
xor
mov
shlb
sti
test
aam
push
adcl
popa
out
fwait
test
sub
sbb
sbb
jo
ds
lahf
les
mov
aad
fsubrs
push
jno
or
push
cmp
sbbl
insl
ljmp
bnd
ds
xlat
push
je
es
icebp
or
lods
push
fcomip
dec
mov
cmpsl
ds
adc
jg
mov
push
je
cld
xchg
ficompl
mov
cmp
xchg
mov
sbb
cmp
lock
inc
test
sbb
aam
rclb
imul
sbb
outsb
mov
cmp
fwait
mov
fistl
das
lods
cmc
add
jl
into
ret
outsb
ret
dec
xchg
andl
fnstcw
mov
repz
xchg
jmp
fsubrs
dec
sub
mov
push
cld
mov
into
cmpsb
jne
gs
and
fldcw
rorb
push
xchg
inc
adc
in
and
ss
pop
gs
pop
arpl
jmp
rcrl
jge
and
outsb
jne
or
xor
add
jmp
push
push
push
out
lret
sub
test
dec
les
xlat
sbb
fistpl
bound
mov
ljmp
enter
movsb
cmp
cmp
pop
pop
test
or
aam
cmp
inc
sbb
xchg
ja
sbb
sub
inc
inc
je
mov
stc
ret
sub
dec
jge
xchg
in
adc
je
push
push
add
fistpl
adc
mov
movsl
jnp
pop
pusha
std
xchg
mov
ret
jbe
paddusw
lret
scas
lahf
and
rorl
insl
jnp
sbb
mov
call
mov
cmp
testl
imull
add
push
fimull
jle
inc
scas
mov
sub
or
adc
rol
jnp
mov
es
pop
scas
rorb
insb
xchg
pop
shl
xchg
sub
lock
out
dec
push
add
lods
xchg
shlb
and
pushl
mov
pop
xchg
mov
lock
lock
into
inc
push
bound
test
gs
sahf
test
negb
repz
pop
add
add
lahf
jp
push
fdivs
mov
cmpsl
push
out
fstpl
sbb
mov
icebp
dec
pop
scas
jns
push
jb
pop
aad
pusha
rdmsr
or
aaa
subb
test
cmp
pop
add
mov
lcall
test
imul
lahf
mov
cltd
adc
stos
andb
and
and
inc
pop
jnp
lcall
xor
cmc
or
jae
insb
adc
dec
dec
push
div
push
mov
shll
jmp
dec
add
scas
lds
imul
lods
add
scas
jl
sub
pop
das
shlb
int3
les
xor
shll
mov
daa
sub
dec
rcl
out
xchg
pop
repz
sub
cmp
loopne
xchg
jle
hlt
int
ljmp
xchg
mov
cmp
cmc
das
jmp
jb
in
jecxz
or
jnp
aas
dec
lods
addl
cmpsb
shll
cld
dec
cld
mov
mov
fldcw
xchg
sbb
call
bound
xchg
pop
and
xor
addr16
sbb
popf
mov
xchg
pop
push
mov
ret
dec
inc
mov
repz
mov
xchg
sub
fyl2x
jbe
xor
push
in
push
jb
sub
mov
add
shlb
leave
or
sarb
sub
inc
clc
enter
xchg
inc
ljmp
mov
outsb
push
jo
lods
inc
push
mov
cltd
sub
inc
daa
and
jb
dec
lds
cmc
ret
or
dec
cmp
rol
mul
jnp
in
mov
stos
subl
stc
in
sbb
adc
faddp
or
cmp
lcall
std
pop
int3
adc
and
mov
aam
dec
loopne
xor
fistl
and
jae
es
out
sub
cld
mov
dec
cmp
scas
mov
int
stc
dec
xchg
outsb
xor
push
inc
scas
mov
leave
cmp
pusha
shrl
pop
fs
mov
mov
loopne
fidivl
jg
cmp
sub
jmp
gs
jo
sti
mov
xchg
add
or
inc
cmpsb
mov
pop
or
pop
sub
roll
ljmp
pop
mov
and
gs
mov
ret
rcrl
push
mov
or
int
stc
fsub
adc
jmp
push
out
push
incl
pop
push
lods
pop
imul
dec
into
jl
pushf
cmp
or
jecxz
shrl
xor
jb
subb
mov
hlt
adc
rcr
lock
xchg
jnp
cmp
clc
jbe
lods
or
inc
stos
bound
mov
mov
add
pop
fildl
pop
lret
les
imul
shll
inc
push
cmp
insb
inc
outsl
jp
and
icebp
dec
enter
out
sbb
nop
pop
pop
icebp
insl
or
lret
cmpsb
jo
and
push
stos
out
mov
insb
pop
or
in
mov
or
pop
in
out
mov
pop
cmp
adc
mov
xchg
out
ljmp
mov
cli
inc
out
int
push
or
les
mov
cmc
adc
jo
stc
popf
cmp
outsl
in
xchg
mov
paddq
mov
mov
jp
in
dec
shlb
mov
xchg
jne
or
repz
xlat
lods
mov
jecxz
sarl
scas
cs
mov
jbe
ret
push
js
xchg
ljmp
mov
lcall
movsl
jne
or
pop
lahf
mov
or
push
arpl
cmp
and
sarl
dec
cmp
or
lods
add
or
xchg
cmp
out
lahf
or
popf
jg
scas
mov
add
xchg
sbbb
leave
stos
inc
push
inc
pop
frstor
xor
or
out
cli
aam
bound
push
movsb
or
fisttpl
shrl
add
aaa
mov
test
je
and
rorb
shl
cltd
fs
in
mov
pushf
nop
in
out
mov
sub
cltd
or
cli
pop
shlb
jp
sub
in
sub
outsb
fisubs
mov
jmp
test
mov
or
dec
repz
xor
jae
xchg
jno
fcmovb
popa
shrl
lret
lcall
mov
inc
andb
mov
cmp
pop
add
mov
cwtl
fists
or
scas
xchg
mov
ret
lret
dec
push
sub
orb
sbb
xchg
inc
out
pop
mov
push
jl
add
sahf
mov
enter
cs
loopne
call
pop
adc
addr16
and
jle
sbb
fimull
jae
adc
js
pushf
rorb
decl
enter
scas
scas
pop
ja
in
or
and
icebp
in
loopne
xor
xor
push
popa
das
jmp
cmpsl
lea
loope
subl
or
mov
sbb
pop
and
mov
xchg
add
lret
es
data16
loope,pt
xor
rclb
and
cmp
mov
std
dec
fidivrl
cmp
pop
xor
mov
lock
sub
icebp
call
imul
call
add
shlb
push
test
dec
and
outsb
or
rclb
shrb
xchg
popl
or
loopne
push
bound
test
or
ret
scas
fcompl
pop
mov
pop
jge
js
dec
lret
push
jns
outsb
dec
push
pop
push
mov
stc
pop
je
mov
fstl
inc
mov
xchg
insl
test
dec
movsl
pop
aad
lds
adc
int
fstl
inc
mov
xchg
insl
test
dec
movsl
pop
aad
lds
adc
int
fstl
mov
xchg
insl
test
dec
mov
cmp
or
int
fstl
push
mov
xchg
insl
jp
pop
dec
movsl
sub
repnz
push
mov
sub
push
push
mov
push
pushl
movl
movl
movb
push
push
call
mov
andl
push
movl
pushl
movb
call
andl
push
push
mov
movl
mov
movb
call
push
push
mov
call
mov
mov
mov
lea
push
movl
movb
movl
movb
movb
movb
movl
call
pop
pop
leave
ret
pop
mov
movsb
jp
push
sbb
add
xchg
jp
and
adc
add
je
fs
mov
movsb
push
xchg
push
sbb
or
cmp
sub
adc
add
sbb
inc
loop
mov
test
push
and
sub
mov
data16
gs
and
xor
cmp
aaa
xor
push
in
jp
add
pop
add
xlat
stc
push
movsl
frstor
fbstp
mov
scas
sbb
enter
hlt
mov
fsubl
fstpt
push
pusha
gs
lods
mov
mov
test
sar
dec
xor
sbb
out
dec
ljmp
rcll
sbbb
or
lds
lret
nop
adc
gs
lcall
inc
hlt
pop
testl
mov
mov
push
fbld
mov
cmpsb
mov
jnp
xchg
in
jecxz
sub
in
push
adc
je
aaa
mov
mov
movsb
jp
push
hlt
jb
cmp
mov
sbb
push
and
adc
add
je
mov
xor
adc
xchg
sub
lahf
jno
jo
aaa
in
shrl
das
rorl
or
mov
cwtl
pop
cli
inc
xchg
popa
jecxz
in
roll
jmp
ss
sbb
cmp
dec
fimull
in
aam
fidivl
and
adc
add
je
fs
mov
movsb
jp
push
sbb
or
cmp
sub
fidivl
and
adc
add
je
fs
mov
int3
mov
xorb
sub
negl
pop
sbb
jnp
adc
adc
int
lods
push
sti
ret
xchg
and
pushf
xchg
pop
xchg
push
cmp
mov
push
sbb
iret
addb
out
add
cmp
cmc
loopne
jb
jo
in
lcall
push
jb
loopne
push
jo
iret
cmp
mov
adc
xchg
mov
mov
mov
adcl
sbb
test
pop
add
jbe
mov
push
pop
push
mov
enter
sub
xchg
icebp
add
push
sti
sbb
dec
pop
test
inc
fistpll
jmp
xchg
dec
lods
iret
push
or
mov
int
test
pop
nop
into
sub
nop
daa
test
outsb
dec
movsb
leave
cs
pushf
into
cs
jbe
test
jmp
sub
rclb
xor
subb
jmp
sarb
push
mov
adc
xor
sbb
pushl
and
scas
idivb
sbb
cli
ret
mov
mov
bound
pop
shrb
push
adcb
pop
push
push
jne
sbb
adc
push
cmpsl
adc
pop
inc
fwait
in
xlat
inc
mov
mov
push
xchg
mov
mull
cli
stc
outsl
addb
sahf
mov
in
lahf
push
mov
push
rcrb
xchg
jmp
and
imul
shlb
fisttps
or
jecxz
mov
movsl
and
adc
cmp
inc
mov
mov
call
cmp
clc
cli
loop
push
push
cld
jae
roll
or
aam
cmpsb
xor
mov
outsl
es
jg
jnp
adc
add
jmp
mov
sub
jle
xchg
push
out
cmp
cmpsl
nop
fildll
movsl
xchg
push
push
mov
add
loope,pn
sub
xlat
adc
rorb
ljmp
adc
sti
adc
inc
mov
daa
cmpsb
js
push
sbb
cmpsl
or
rol
xchg
inc
and
push
fwait
mov
adc
popa
dec
rsqrtps
pop
dec
inc
push
sbb
push
popa
lcall
rcll
shll
xor
jbe
jo
jmp
lcall
mov
or
add
push
inc
leave
inc
scas
jecxz
jg
push
add
fidivrl
popa
xor
fwait
xor
xchg
repnz
lea
cmp
cwtl
xchg
orb
push
fidivrl
fwait
jno
das
mov
inc
xor
jno
in
cltd
ss
and
xchg
cmpsl
or
arpl
cmp
imul
sub
lcall
inc
sbb
cmp
data16
push
int3
scas
cmpsb
cmp
jb
mov
sub
pop
cs
mov
or
inc
aam
dec
rcl
sbb
repnz
fsubl
xlat
lods
scas
decb
pop
xor
inc
int3
test
inc
popf
pop
aas
or
in
or
repz
push
scas
mov
into
cmp
add
pop
cmp
adc
ja
je
and
sub
insl
mov
mov
push
cs
and
outsl
lock
movsb
cmp
test
ss
aaa
adc
loopne
stos
ds
test
xlat
jnp
sti
or
mov
and
dec
and
push
out
in
inc
pop
or
and
outsb
inc
and
imull
jns
cs
aad
lcall
or
movb
or
jl
mov
push
fnstcw
ficomps
je
int
inc
mov
repnz
jmp
jmp
enter
mov
push
fwait
or
xchg
cmp
push
and
mov
das
test
pop
insl
jle
mov
push
sub
push
je
daa
mov
data16
mov
ja
dec
mov
outsl
cld
add
xchg
mov
sahf
push
sbb
ret
add
in
scas
xacquire
cmp
and
fdivrl
lahf
mov
or
neg
jg
mov
shlb
pop
cltd
insb
loop
xchg
loope
aaa
mov
inc
push
xchg
pop
pushfw
leave
mov
inc
push
xor
arpl
mov
lcall
arpl
aad
jo
xchg
sbb
add
loope
mov
jg
jle
lods
xor
dec
cltd
lahf
push
in
fsubrs
push
shrb
mov
cmp
jle
fwait
ret
lret
gs
addr16
mov
mov
mov
lret
in
mov
sub
xchg
pop
dec
sub
repz
aad
dec
clc
cs
imul
push
jmp
popl
sbb
pop
repz
adc
cmp
inc
lds
cs
mov
fdivrs
push
xor
imul
xchg
popf
addl
dec
fldcw
mov
or
inc
nop
negb
hlt
leave
stos
movsb
in
sbb
pop
subl
jle
or
push
adc
test
mov
xor
jle
enter
push
jno
push
out
test
arpl
sbb
mov
fwait
jnp
notb
rcl
xor
xor
sbb
mov
mov
andb
sbb
add
sub
and
sbb
fldcw
xor
test
lods
pop
xor
mov
int
adc
loope
hlt
loopne
popa
lret
neg
push
mov
dec
int
insl
addr16
iret
jl
out
cmc
pop
hlt
or
cs
push
outsb
cmpsl
call
pop
int
loope
repnz
ja
jo
iret
js
push
or
xlat
mov
push
pop
jecxz
sbb
out
inc
push
dec
pop
xchg
sbb
cld
push
xor
dec
imul
pop
stos
pop
mov
test
out
enter
sbb
mov
xchg
mov
jo
jp
sub
stos
pop
mov
aam
jecxz
cmp
shll
cmp
ljmp
adc
inc
movsl
adc
je
mov
mov
jl
xchg
inc
pop
sbb
mov
mov
xchg
mov
push
adc
cmpsb
arpl
movsb
lahf
sub
testb
xor
test
enter
push
popf
clc
pop
enter
jmp
mov
fstpl
pop
sbb
mov
fucomi
je
leave
popa
fwait
out
fmull
shl
mov
test
stos
mov
jnp
fstpl
mov
sub
fs
cltd
mov
push
fwait
jae
shl
dec
xchg
push
jns
les
sub
gs
inc
out
mov
jle
inc
xchg
imul
aam
cmp
inc
in
jg
mov
mov
jnp
push
adc
jo
push
lahf
push
lret
adc
sbb
pop
mov
je
je
imul
lret
mov
push
ja
pop
mov
inc
sti
pop
mov
cmp
repnz
cmp
lret
pop
sub
movb
jb
pusha
idivb
add
fcoms
or
ss
jnp
cltd
adcb
repz
hlt
outsb
pop
mov
popf
push
iret
push
js
add
mov
jbe
test
movsb
fwait
je
fisubl
jle
cli
xchg
inc
imul
add
cmp
arpl
int3
repnz
js
stc
stos
adc
cmp
call
jno
jns
insb
repnz
dec
mov
loop
inc
cs
inc
xor
shll
hlt
push
cwtl
aas
sub
mov
cwtl
insb
pop
or
push
call
xchg
pusha
and
lret
outsl
jae
jbe
aas
jmp
scas
sbb
pop
sbb
xor
gs
dec
sub
bound
adc
add
sahf
inc
hlt
push
subl
xchg
ja
out
outsb
stc
out
inc
hlt
in
sbb
dec
hlt
and
das
add
inc
lcall
cli
cli
add
xor
xchg
dec
pusha
adc
push
shll
sub
sub
jbe
out
xor
jae
cs
es
mov
jne
push
fdivrp
mov
pop
inc
das
jae
in
or
pop
mov
out
pushf
and
popa
add
adc
ja
push
nop
mov
nop
xor
jne
sub
inc
dec
or
out
inc
in
ret
out
jno
adc
jbe
ljmp
sarb
adc
mov
push
xchg
pop
scas
call
cld
push
arpl
mov
nop
jno
pusha
push
outsb
imul
fwait
aas
pop
fdivs
push
add
dec
cmpsl
xlat
shll
shll
imul
mov
fdivrl
mov
out
xor
enter
cltd
loop
int3
jo
ljmp
cmp
iret
or
xchg
lock
lods
xor
sbb
es
pushf
or
add
xor
movsl
jp
cld
pop
dec
mov
push
jecxz
cmp
cmc
adc
xchg
ja
lds
push
dec
stos
loop
push
pop
sub
into
roll
scas
xchg
pop
mov
mov
xlat
dec
fcomps
xor
and
push
lret
adc
std
xchg
popa
movsb
add
add
loopne
stos
and
out
adc
jo
sti
push
xor
out
adc
adc
mov
mov
incl
jo
sub
adc
mov
stos
pop
add
xchg
mov
sbb
jnp
fldt
arpl
pop
jmp
aaa
sbb
fucom
push
dec
hlt
lcall
push
sbb
xchg
adc
mov
xchg
insb
mov
pop
inc
in
jae
inc
lret
jb
dec
into
mov
movsl
int
insb
mov
int
fadds
movsb
adc
out
cli
mov
mov
inc
push
or
mov
sub
sbb
jp
inc
sbb
push
or
xchg
iret
xchg
push
push
lret
aas
into
mov
addr16
in
out
loop
push
jmp
outsl
outsl
lods
jo
sbb
stos
fcmove
jmp
ss
pop
lahf
or
or
adc
lret
subb
in
into
jge
imul
inc
xor
add
dec
inc
jbe
inc
inc
inc
pop
mov
push
flds
sbb
mov
or
cmc
inc
ds
or
les
mov
daa
lret
xchg
jp
inc
or
hlt
mov
push
xlat
jae
or
xchg
and
mov
test
dec
mov
pop
cli
and
cld
setle
sbb
push
push
in
iret
cmpsb
jns
sbb
mov
pop
and
xchg
hlt
dec
mov
fdivrs
sub
sub
xchg
add
push
mov
movsl
adc
sti
adc
add
cmp
push
popf
jmp
cmpsl
repnz
mov
test
aaa
fcom
cmp
jl
mov
and
rcll
ljmp
dec
fwait
in
adc
ret
ja
fimuls
add
packsswb
adc
sbb
xor
fnsave
out
xor
add
adc
or
and
pusha
jecxz
les
rolb
imul
adc
mov
nop
and
out
mov
scas
stc
ljmp
sub
add
jmp
mov
imul
aad
push
mov
test
xchg
or
xchg
movsb
test
lods
jmp
xchg
in
jle
pop
mov
sbb
and
xchg
hlt
pop
lcall
into
sbbl
mov
scas
xchg
fldcw
dec
dec
repz
xor
xchg
sub
sub
enter
shlb
lods
sarb
cmpsb
inc
out
pop
shll
cmp
je
add
enter
xchg
outsl
xchg
in
dec
ljmp
jbe
cmp
jge
dec
mov
xor
xlat
xchg
loop
inc
popf
sbb
jne
popf
sbb
mov
xchg
cmp
aam
jp
insb
sub
cmp
pop
push
mov
mov
inc
imul
push
pop
pop
sub
out
xor
lock
inc
push
dec
mov
sub
insl
addb
lods
push
cmpsb
je
rorb
lea
lcall
mov
ljmp
xchg
xchg
leave
dec
in
dec
insb
pop
cmp
mov
cltd
dec
rorb
pop
pop
push
jb
adc
cmp
xchg
es
gs
push
cld
bound
roll
mov
movsb
jae
scas
fisttps
push
pop
inc
jne
lret
les
adc
cmp
xorl
sbb
push
xchg
aaa
and
mov
sbb
or
sub
jne
je
push
add
arpl
cmp
xchg
sbb
lock
pop
lcall
mov
sbb
mov
pop
in
mov
je
daa
ret
rcl
insl
je
sub
or
test
je
mov
sbb
pop
loop
push
out
sarl
and
cwtl
jecxz
lds
cwtl
sbb
jp
test
bound
dec
imul
imul
lea
push
xchg
stos
jbe
add
test
jle
or
cmpsb
xor
imul
loop
jae
adc
jp
cmp
cltd
inc
add
add
lcall
mov
add
imul
mov
cmpsl
fadds
cli
pop
fcompl
add
lcall
das
aad
mov
es
xor
mov
icebp
int
rcl
and
sbb
push
mov
daa
and
cmp
dec
xchg
push
dec
jg
or
pop
hlt
pop
fists
dec
popa
iret
inc
aad
cmp
aas
xchg
xchg
aaa
mov
repz
subb
stc
sti
iret
ss
jnp
pusha
fstpl
pop
xchg
xchg
jle
mov
test
jo
out
jne
jge
enter
jl
inc
mov
mov
cli
movsb
testl
rcll
mov
test
imul
mov
insl
ret
dec
dec
mov
das
xor
sub
mov
outsl
push
xlat
dec
cmpsb
out
nop
cld
push
pop
adc
into
lret
jge
add
cmp
jge
loop
daa
jp
mov
loope
cmp
xchg
and
enter
or
or
mov
jl
lret
cmc
movsl
add
or
and
cmp
es
mov
mov
movsb
mov
xchg
repnz
pop
pop
push
inc
xchg
or
add
mov
fsubrl
mov
jnp
jp
xchg
or
fsubp
adc
cli
out
test
push
fldenv
push
jmp
test
pop
add
pop
push
xchg
punpckhwd
xor
and
les
xchg
cmp
mov
sti
adc
push
push
pop
das
aaa
dec
inc
sbbl
out
inc
xchg
push
test
inc
daa
push
dec
outsl
mov
pop
leave
es
sbb
pop
fstps
lret
sub
in
sub
jo
sbb
push
xor
pop
mov
jecxz
fwait
jmp
dec
in
xor
mulb
adc
aad
addr16
pop
and
fstl
movsl
testb
cs
addr16
int3
test
xchg
xchg
sbb
sub
enter
aas
fwait
xchg
fdivrp
das
movsl
dec
mov
iretw
lds
xor
push
adcb
fwait
jne
aaa
xchg
mov
mov
inc
scas
icebp
imul
xchg
or
fst
xor
push
dec
adc
jb
pop
fs
outsl
movsl
xor
clc
jno
push
out
or
push
jmp
out
test
addl
xor
cmp
push
jns
cld
aam
mov
mov
lret
or
inc
push
stc
mov
clc
jl
test
jne
popf
or
mov
cs
aad
mov
cwtl
ds
fnstcw
cmp
mov
stc
test
adc
rcr
mov
jnp
or
push
cmpsb
icebp
mov
and
or
dec
dec
dec
adcl
popf
sarb
in
push
insl
mov
pop
dec
sub
mov
test
or
pop
bound
xor
enter
mov
cs
fiaddl
and
inc
mov
rol
dec
pop
cli
sbb
jnp
pop
outsl
mov
les
ret
mov
adc
xchg
cld
dec
mov
or
addb
fs
sub
popa
pop
hlt
loop
nop
repnz
xor
sub
and
xchg
js
outsb
mov
and
fdivp
add
adc
ja
jne
xchg
subl
pusha
xchg
sbb
sar
pushf
ret
push
add
ror
cmp
ret
mov
mov
adc
nop
ss
imulb
sbb
mov
shrl
in
pop
hlt
push
sbb
popf
loope
fdivrs
jl
or
jo
in
push
mov
pusha
xchg
in
in
cmp
shrb
inc
jns
cmp
push
inc
xchg
loopne
cmpsl
adc
push
popf
push
test
arpl
mov
xchg
push
push
hlt
jge
mov
adc
xor
pushf
pop
flds
jge
or
into
push
arpl
fiadds
call
in
in
pop
in
sub
loope
inc
loopne
lock
lcall
push
je
cmpsl
push
jb
xor
icebp
out
lods
aam
sub
mov
push
mov
pop
jnp
pop
dec
dec
add
shlb
call
call
cmp
add
nop
fists
push
imul
faddl
inc
cmpsl
fldcw
je
popf
mov
mov
pop
std
jle
nop
xor
jge
inc
xchg
add
test
push
push
and
cwtl
call
cli
lea
adc
push
add
cli
dec
out
rcll
cmc
cs
cmovle
rorb
outsb
insb
mov
push
mov
pop
jnp
es
mov
testl
es
jns
orl
call
mov
dec
int3
iret
sub
adc
outsb
or
xchg
ficoml
dec
mov
inc
fs
movsb
sbb
inc
mov
and
test
xor
iret
xor
ljmp
std
and
jecxz
mov
lds
loopne
int
fucom
or
push
andb
mov
cmp
cmp
pop
xlat
or
xchg
xor
and
mov
pop
je
and
mov
xchg
jb
clc
mov
push
sbb
mov
cmpsl
pop
nop
gs
or
mov
add
dec
clc
xchg
enter
ffree
mov
testb
inc
test
aaa
jae
pop
aas
insb
sahf
inc
jo
jl
sub
pop
sub
call
fdivrs
mov
or
sbb
xchg
popa
aad
cmp
sahf
orb
call
pop
pop
loop
sub
stos
shll
add
sub
xchg
cmpsl
mov
pop
xor
pop
sub
inc
ficoms
xchg
mov
pop
mov
cmp
div
adc
lods
repnz
les
jle
shlb
adc
or
or
nop
lcall
ds
stos
mov
mov
mov
lret
lods
xor
clc
cmpb
pop
mov
inc
push
popf
loop
cs
add
ret
sbb
out
subb
cs
jmp
sbb
jae
mov
cltd
gs
leave
and
jmp
mov
xor
mov
add
add
popa
sub
mov
xlat
andl
pop
xlat
sub
in
lock
and
jo
in
loop
and
ficoms
inc
mov
add
xchg
push
je
xchg
out
xlat
out
pop
or
and
cmc
scas
xor
dec
cmp
mov
testl
ret
incb
dec
mov
push
out
mov
outsl
aas
dec
push
adcl
mov
clc
fistl
or
jp
movq
outsb
test
jl
addr16
dec
scas
scas
jo
jmp
pusha
jae
adc
xchg
fistps
and
fisttpll
jmp
das
adc
enter
dec
pop
pop
pop
jns
mov
push
sbb
cmp
cli
fstpt
and
loop
mov
sub
pop
in
jmp
fucomi
in
inc
aaa
lcall
frstor
mov
jo
inc
dec
lock
ljmp
cld
enter
jae
int3
jno
enter
mov
mov
mov
sub
das
fisubrl
cmp
inc
loop
mov
ss
adc
add
mov
imul
sarl
xchg
das
das
cs
test
aaa
push
xlat
stos
popa
push
lds
inc
lea
dec
outsw
cmp
jb
out
out
lcall
xchg
bound
sbb
orl
iret
in
shlb
test
fadds
out
jns
in
inc
movsl
inc
insb
js
xchg
jae
movsb
cmp
hlt
or
cmp
sub
fidivl
and
adc
add
je
fs
mov
movsb
jp
push
sbb
or
cmp
sub
fidivl
and
adc
add
je
fs
mov
movsb
sbb
in
aam
fidivl
and
adc
add
je
fs
mov
movsb
and
in
aam
fidivl
jae
cld
add
sbb
pop
cmp
jnp
mov
jbe
inc
cmp
ljmp
adc
stos
jmp
sbb
pop
cmp
jnp
or
jnp
imul
mov
mov
stc
sti
cltd
sti
stos
jmp
add
inc
and
arpl
push
add
imul
lret
test
in
rorl
cmpsl
fnstcw
cmp
pop
sbb
ret
dec
fidivrl
adc
xor
repz
shll
adc
push
fcmovb
lcall
sub
dec
call
push
xor
and
mov
fcmovnb
sti
pop
adc
in
divl
enter
cwtl
or
lock
fildl
cs
and
stos
jmp
sbb
movaps
push
adc
mov
and
lret
push
jo
jmp
dec
into
xchg
lret
push
outsb
and
and
adc
and
sti
ds
das
jl
aam
movsb
orl
mov
sti
add
mov
jmp
rcrb
cmp
jnp
or
jnp
jb
or
ret
mov
xchg
roll
ja
outsb
sub
pop
push
sub
sub
pop
fwait
movsb
out
enter
fucomi
scas
cltd
mov
xchg
je
push
push
sbb
aaa
or
jnp
cmp
fdivrs
ljmp
int3
iret
jle
addr16
push
cmovae
adc
dec
sbb
imul
lret
mov
mov
mov
fwait
sti
stos
jmp
sbb
pop
cmp
jnp
or
jnp
imul
lret
mov
mov
mov
fwait
sti
stos
jmp
sbb
dec
test
pop
jns
cmpb
sbb
push
lahf
push
inc
sub
aam
and
sahf
loopne
push
dec
jp
mov
aaa
mov
push
enter
test
pop
cmp
mov
mov
scas
insb
es
inc
mov
int
adc
sub
and
xor
xchg
or
f2xm1
jge
mov
movsb
add
xchg
sbb
cmpsl
sbb
sti
or
fs
rclb
push
fdivs
push
add
pop
and
jle
push
testb
pusha
mov
fidivs
hlt
ret
adc
fstps
mov
mov
cmp
push
pop
or
jns
aad
pop
jp
call
mov
rcr
aad
pop
into
shlb
movsb
jbe
in
popf
iret
add
rcrl
ret
int
add
aam
fcoml
test
inc
test
or
lods
mov
jbe
jne
cmp
sub
mov
and
mov
aas
jae,pt
cmp
test
jnp
fstpt
add
mov
xor
mov
nop
imul
in
cmpsl
cmp
mov
adc
push
dec
jae
in
sub
cli
push
xlat
or
push
loope
fldcw
das
std
mov
arpl
push
mov
lods
dec
push
outsb
xchg
push
sbb
cmp
cmp
mov
shl
test
xchg
outsl
daa
addr16
fisubrl
mov
pop
fisubrs
mov
push
cmpsl
test
pop
push
mov
inc
jns
xlat
adc
fwait
jl
stc
push
xchg
dec
repnz
mov
sub
sub
push
mov
cmp
ret
adc
icebp
pop
sbb
xor
jne
mov
xchg
sub
fs
xor
repz
jecxz
dec
pop
mov
mov
aas
sahf
push
sbb
or
test
mov
pop
outsl
jb
mov
jl
pop
jge
xor
adc
xchg
pop
fldcw
rorl
lret
adc
imul
dec
clc
inc
ja
mov
mov
out
pop
loope
rcrb
lcall
lock
ds
cmpsb
adcb
inc
subl
ret
sbb
out
push
push
dec
insl
pop
cld
pop
or
pop
mov
fdivrs
in
mov
aad
pop
fbld
inc
dec
sbb
out
cmp
lret
sti
mov
roll
add
mov
pop
lret
fs
mov
cmp
jne
out
xor
pop
adc
add
lea
pop
cwtl
add
dec
test
out
cmp
popa
cs
adc
mov
cli
add
shll
push
pop
add
jmp
mov
jno
cwtl
call
gs
inc
scas
rolb
lods
in
jns
cmp
and
sub
les
jmp
cmpsb
sbb
in
dec
mov
lahf
add
dec
jecxz
sub
ffreep
and
mov
popf
das
and
hlt
pop
aad
xlat
dec
dec
mov
imul
sub
test
divb
and
xor
aas
cmp
in
mov
pop
mov
sarb
mov
or
push
and
xor
sbb
enter
fiaddl
outsl
pop
sbbb
fs
cmc
test
inc
lcall
popa
mov
jae
fcoms
dec
test
mov
inc
pusha
pop
filds
cmpsb
mov
adc
mov
sbb
call
stos
fcompl
mov
jnp
movsl
stos
or
mov
hlt
cmc
mov
and
adc
aad
jmp
xor
mov
ja
pop
int3
stos
sbb
ficoms
push
aaa
xchg
sbb
pushf
mov
cmp
clc
xor
iret
inc
in
out
popa
xor
stos
ja
pop
in
and
lods
and
jg
out
mov
fwait
ja
mov
std
push
out
cmp
and
loope
xlat
test
aas
jg
lret
and
xor
into
pop
aaa
push
sub
fisubrs
nop
aam
mov
mov
mov
sarb
push
adc
sub
cmp
dec
sbb
mov
push
fstps
cmp
inc
loope
or
stc
push
mov
mov
jae
sbb
pusha
or
add
rcrb
jecxz
fdivs
jecxz
daa
push
inc
loopne
inc
bound
jnp
cmc
ljmp
shlb
mov
neg
jl
jp
lret
jno
arpl
insl
jl
pop
dec
sub
push
push
out
add
push
mov
push
sti
arpl
insl
dec
arpl
into
dec
xor
outsb
repnz
aad
sbb
xchg
xchg
nop
ficomps
sub
jbe
adcb
iret
dec
js
ret
repz
push
div
dec
jno
mov
push
cmc
test
adc
and
call
xchg
mov
mov
shr
xlat
clc
insl
mov
jns
sbbb
cmc
pop
test
into
enter
mov
ja
imul
lret
xchg
cmp
out
xchg
xlat
xor
push
inc
mov
sub
xchg
je
add
je
icebp
fsubrs
inc
fmuls
xchg
aas
repnz
sub
mov
pusha
in
fidivrs
mov
pushf
pop
xchg
jmp
scas
mov
xchg
mov
lahf
icebp
cltd
in
dec
dec
and
and
and
adc
nop
les
bound
xorb
out
mov
and
lahf
int
fs
rcrl
test
sbb
lods
or
lock
push
jae
popf
adc
xchg
es
xchg
or
mov
jo
mov
leave
mov
data16
rol
adc
sbb
les
push
cmp
int
call
ret
pusha
stos
cmp
inc
pop
mov
sbb
cmp
mov
pop
sbb
cmp
data16
mov
aaa
subb
inc
inc
and
mov
push
lcall
fs
adc
movsl
pop
shl
or
xor
cmp
inc
mov
out
add
repz
jmp
push
sbb
orb
loope
pop
outsl
xchg
iret
mov
movsl
mov
mov
mov
es
mov
jne
sti
mov
mov
pop
frstor
int
je
mov
lcall
in
out
notb
sub
aas
ret
pop
out
jb
fdivrs
inc
in
push
cmp
or
fs
sub
push
scas
inc
inc
shrl
shld
cli
xchg
and
dec
dec
les
jnp
add
mov
mov
out
mov
int3
jle
and
push
pushl
ret
mov
or
cmp
mov
addr16
sbb
shlb
call
std
dec
cwtl
sub
mov
scas
add
pop
cmpsl
outsl
sti
addl
rcrl
pop
repz
fwait
aaa
dec
cmp
jp
mov
std
sub
xor
into
push
dec
fmull
test
jne
push
stos
lds
into
dec
xchg
mov
dec
aas
xchg
notb
xor
pop
inc
xchg
frstpm(287
push
pop
and
sbb
adc
jnp
add
mov
aas
push
fmul
or
mov
or
insb
out
xchg
je
mov
jle
xchg
adc
mov
fs
push
in
inc
push
outsl
jmp
push
ret
xor
mov
fs
pop
iret
mov
mov
scas
std
stos
jg
icebp
push
sar
jo
fistpll
jmp
jg
hlt
sub
push
loopne
mov
insl
rcrl
cmc
xor
out
lahf
clc
sub
leave
cmp
out
in
in
roll
lcall
imul
mov
cmp
mov
jmp
sbb
sbb
mov
mov
sbb
mull
jne
mov
adc
pushf
mov
scas
mov
fcoms
lea
ret
ret
xor
ljmp
xlat
jl
mov
mov
sbb
jbe
xor
dec
repnz
je
pop
icebp
push
dec
push
clc
loope
rorb
fidivl
pop
cmp
lds
jmp
icebp
cmp
xchg
repnz
jae
xchg
in
popf
mov
pop
lds
shlb
mov
inc
aaa
sbb
jmp
push
outsl
jne
into
fiaddl
in
jg
subl
aam
sub
frstor
mov
jae
dec
or
lock
fs
mov
sbb
gs
cmc
outsb
aas
lret
sahf
push
mov
sbb
imul
aas
insl
mov
outsb
fisubl
dec
inc
testl
mov
insl
int3
fisubl
mov
xchg
xchg
out
sub
stos
pop
icebp
js
fiadds
sbb
and
push
ret
lock
jle
mov
pop
or
lock
sub
jmp
push
mov
jnp
mov
dec
js
mov
test
cld
xchg
dec
mov
pushf
jae
jo
xor
fmull
jo
ljmp
nop
sub
inc
cltd
inc
inc
push
popf
test
pop
fldl
ljmp
out
cmpsb
popf
mov
xchg
mov
push
mov
fistps
sbb
out
in
dec
frstor
roll
mov
push
aad
movsb
xor
ss
les
mov
xlat
or
mov
test
ficoml
fisttpll
cmp
sti
rclb
sahf
fnstsw
inc
outsl
leave
inc
out
push
cmc
mov
nop
fisubrs
inc
pop
imul
ds
arpl
pop
sahf
ss
rorl
sbb
out
cmp
cmp
dec
xchg
mov
leave
or
mov
add
lods
inc
stos
mov
int3
aam
fldl
jne
aaa
outsl
insb
ds
sub
pushl
push
daa
imul
push
mov
jge
xor
test
jp
mov
sbb
jp
dec
pop
cltd
int3
or
jns
jecxz
stos
dec
cltd
iret
push
mov
repz
test
ljmp
jo
stos
in
ljmp
mov
mov
and
add
stos
clc
gs
sbb
icebp
jg
cmp
nop
fistl
outsb
insl
insb
xchg
mov
jnp
add
pop
stos
clc
dec
insl
mov
xchg
mov
cmp
int3
sbb
repz
lcall
pop
mov
stc
sbb
mov
add
ljmp
pop
and
mov
lds
mov
fmul
repnz
ret
bound
sub
xchg
aad
icebp
rcll
addl
push
xor
fucomip
bound
mov
js
sti
xchg
or
fs
pop
sbb
pop
addr16
cwtl
jno
mov
or
jg
inc
sub
or
push
xor
lahf
pop
xchg
inc
pop
sti
jns
mov
sub
cmpsb
mov
mov
es
sbb
adc
fs
inc
out
shrd
push
shll
lock
inc
ja
lret
add
jne
fdiv
jmp
xchg
xor
sti
xchg
movsl
dec
xchg
mov
mov
scas
iret
and
clc
insb
inc
push
sub
sti
cmp
and
loop
fwait
push
out
sahf
fsubl
cmpsb
mov
arpl
roll
out
adc
fisubs
inc
push
push
adc
test
cmp
mov
paddusb
push
rol
push
popf
xchg
mov
push
mov
aaa
xchg
jbe
mov
lahf
push
repnz
mov
std
dec
dec
jg
pop
test
aam
fstl
icebp
mov
sub
pushf
insl
dec
fidivrl
fcmovnu
adc
jnp
jbe
pop
stc
stc
popa
xchg
lods
cmp
sub
fmulp
push
cmp
popa
out
xchg
cmpsb
inc
leave
mov
loopne
insl
pop
add
pop
xchg
fiaddl
fs
jo
loop
aam
hlt
aad
stos
jne
pushf
test
xchg
add
ret
scas
mov
cmp
or
dec
push
push
in
imul
xor
sbb
stos
pop
jg
inc
out
out
dec
cmc
add
clc
ss
adc
adc
xchg
push
test
xor
out
ljmp
clc
inc
push
pop
adc
and
orl
out
shrl
push
and
popf
rep
cmpsb
and
call
and
mov
test
mov
or
stos
add
ljmp
xor
outsl
sbbb
xchg
and
mov
dec
cmp
outsb
push
mov
xor
dec
push
mov
out
add
mov
iret
dec
adc
pop
test
data16
push
mov
jl
ret
cmp
je
sub
dec
push
dec
xchg
out
outsl
push
mov
jl
xchg
sub
jmp
sub
jecxz
inc
and
or
push
push
pushl
jo
push
push
insb
mov
aad
add
mov
dec
sub
or
dec
rcll
or
xor
test
loopne
test
mov
mov
sub
leave
insb
lahf
test
or
push
jb
adc
jmp
insl
mov
dec
lds
or
out
inc
cmp
notl
aam
xor
in
daa
lcall
push
inc
ds
sbb
into
repz
xor
popa
mov
adc
inc
push
mov
imul
lret
test
jg
dec
lcall
cmp
mov
les
mov
mov
and
popa
adc
jno
leave
push
add
inc
adc
repnz
in
daa
push
insb
sbb
cmp
sub
add
fildl
shlb
mov
std
sbb
push
push
cmpsb
add
push
mov
je
jp
mov
movaps
mov
or
stos
fdivl
or
sub
mov
roll
and
dec
scas
js
dec
mov
call
lock
sbb
jg
add
cmp
das
dec
and
jns
sbb
ss
js
pop
pop
je
mov
sbb
sbb
jp
dec
inc
sub
outsl
ret
sbb
add
cmpsl
lret
add
adc
cli
lods
mov
fildl
loopne
push
inc
mov
mov
pop
ljmp
cltd
sub
sbb
stos
sub
jno
sub
and
fs
mov
add
jo
mov
mov
popa
std
jno
movsl
shlb
call
adc
sub
and
pop
fcomp
add
imul
pop
xchg
pop
sub
orl
mov
cmpsl
or
dec
push
scas
popa
cmovbe
iret
call
std
jae
cs
mov
mov
ljmp
popf
mov
in
mov
divl
pop
sbb
js
aaa
outsl
push
aaa
out
cmc
mov
pop
insl
jo
push
sbb
fs
loopne
fldcw
lret
xor
jo
mov
mov
cwtl
pop
test
lret
mov
cmpsb
or
push
mov
sahf
cmpsl
sbb
cmp
test
mov
push
xchg
push
out
push
push
enter
scas
rcll
hlt
jbe
cmp
fcompl
inc
xchg
fdivl
sbb
lcall
pop
int
xchg
into
jbe
xchg
pusha
inc
fidivs
adc
inc
test
cmc
push
mov
insl
adc
jbe
scas
sahf
icebp
inc
mov
adc
fdivs
jo
or
shrl
ja
pushl
push
outsl
movsw
int3
push
in
loope
arpl
inc
loope
je
cmp
xchg
test
inc
pop
jnp
movl
movsb
mov
call
dec
addr16
insb
into
leave
mov
ret
sti
fbstp
mov
cmp
movsb
fsubrl
enter
pushaw
pop
out
addr16
lods
add
add
in
adc
add
push
clc
ja
sub
outsb
js
sbb
xor
or
sbbl
shl
loope
clc
fisubs
dec
sub
fnsave
jl
inc
xchg
cmp
pusha
mov
into
rol
movsl
xchg
fsts
jbe
daa
xorl
mov
notb
xor
mov
and
ss
leave
mov
mov
ret
dec
clc
cmp
cmp
sahf
call
add
inc
pusha
ss
and
inc
inc
pop
or
sub
mov
adc
xchg
outsl
mov
or
pop
frstor
repnz
or
rorb
ret
xchg
fistl
test
das
fnstenv
jae
cmpsb
jns
stos
shlb
sbb
incb
loopne
das
push
int3
jmp
add
out
add
das
mov
insb
push
ljmp
jbe
fbstp
sub
js
stc
push
les
jbe
mov
fistpll
mov
mov
or
sahf
jmp
call
mov
lcall
inc
clc
out
inc
pop
sub
ss
xchg
out
jmp
rol
out
xchg
ror
popf
jmp
push
lret
or
lds
jae
fwait
lds
ret
xor
and
out
dec
int3
scas
ljmp
daa
aaa
std
cmc
pop
pop
test
or
ljmp
leave
jl
pop
shll
push
xor
jge
outsl
mov
leave
sub
ljmp
stc
movl
subb
xor
test
mov
push
stos
sahf
mul
lods
adc
fcomp
mov
popf
push
inc
out
das
jle
push
int
adc
push
arpl
mov
lods
pop
jle
loope
lret
mov
push
lock
lret
sbb
test
stc
pop
xor
iret
cwtl
popa
and
mov
imul
test
int
mov
pop
cwtl
mov
iret
push
cld
lods
xchg
sahf
sti
gs
ljmp
pop
pop
das
pop
inc
enter
push
test
dec
cmpsb
daa
cmp
loop
fisubrl
and
sub
mov
loopne
fldcw
mov
and
pop
xchg
femms
es
mov
insl
js
lahf
adc
shrb
push
xchg
add
addl
adcl
mov
xchg
inc
es
cmp
cli
rorb
inc
pushf
ds
pop
jecxz
mov
sarl
dec
stos
jbe
jge
dec
mov
mov
fmul
xlat
sbb
pop
push
imul
test
lret
sarl
push
or
outsl
js
adcl
pop
hlt
cld
dec
mov
xchg
std
mull
out
sbb
xchg
ss
and
push
in
pushf
or
cwtl
fstpl
stos
sub
mov
test
jbe
sub
dec
dec
mov
shl
aas
aad
mov
mov
inc
jns
ret
fwait
aad
jo
mov
xor
xor
fbld
push
inc
and
or
imul
es
sub
addr16
mov
cmp
out
call
nop
inc
filds
scas
pop
dec
scas
leave
mov
adc
inc
push
or
outsb
das
fucomi
cmpsl
sbb
clc
pop
add
or
iret
enter
jle
xchg
in
lret
or
std
jo
scas
push
fisttpll
jmp
add
mov
imul
call
faddl
outsl
dec
jp
jecxz
add
pop
push
int
xlat
out
movsb
shrb
daa
mov
out
dec
xchg
sbb
test
push
push
pop
int3
adc
movsl
jp
jo
xchg
or
test
push
fcmovnu
mov
add
inc
sbb
fwait
out
adc
sbb
sub
stos
mull
fwait
mov
out
mov
jmp
sub
push
cs
and
push
shlb
fdivrs
arpl
loop
rorb
cld
in
mov
pop
cmp
cmp
in
mov
test
sbb
loop
add
or
sbb
sub
mov
clc
jbe
add
add
pushf
mov
fs
sbb
jns
mov
rorl
cmp
push
push
cmp
and
jns
test
push
stc
cld
push
lods
decb
movsl
push
lret
popa
xor
mov
rcll
addr16
jmp
jmp
jns
in
in
les
adc
in
call
jnp
jecxz
jl
ud2
sub
std
adc
arpl
lahf
es
pop
mov
cmp
dec
lret
test
lods
ret
fbld
int3
or
fcmovu
jbe
pop
pop
aas
and
std
leave
sbb
roll
mov
xor
inc
inc
and
mov
jo
push
popa
sub
cmp
out
testl
mov
in
sub
ds
loopne
and
cmp
scas
stos
ret
clc
scas
fs
flds
cmpsb
add
inc
cltd
fildll
or
or
popf
adc
negl
fmul
jnp
mov
push
push
int
and
cmp
jl
push
push
mov
aas
cmp
cmp
out
scas
cmp
xor
jmp
pop
xor
jnp
or
jnp
imul
lret
mov
mov
mov
fwait
sti
stos
jmp
sbb
pop
cmp
jnp
or
jnp
imul
lret
mov
mov
mov
fwait
sti
stos
jmp
sbb
pop
cmp
jnp
or
jnp
imul
lret
mov
mov
mov
fwait
sti
scas
jmp
pop
cmp
jnp
or
sti
sub
sti
fs
je
adc
stos
mov
adc
push
mov
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
stc
mov
xchg
jae
and
xor
xor
add
xor
arpl
push
mov
inc
mov
mov
xchg
jae
add
adc
and
xor
shll
addr16
shl
arpl
jb
inc
mov
stos
push
fwait
jnp
push
sbb
or
cmp
sub
and
jmp
dec
ret
xor
cmp
iret
pop
std
clc
jmp
bswap
lock
lret
pop
lret
movsl
pop
push
pop
call
sub
and
or
xor
int3
cmp
repz
repz
and
scas
mov
mov
lret
pop
lods
push
repnz
push
lret
fbld
inc
int3
adc
in
jbe
xchg
ss
jmp
adc
inc
and
shrl
jnp
int3
pop
xchg
pop
sub
add
out
and
mov
mov
pushf
out
mov
xor
shll
xor
dec
int3
rcll
cmpsb
adc
leave
jmp
push
into
mov
mov
int3
arpl
mov
and
clc
mov
cld
notb
jecxz
shlb
mov
inc
mov
xorl
repz
adc
cmp
sub
fldt
lret
sbb
or
jnp
imul
push
out
divl
push
sahf
jge
dec
mov
stos
jno
jge
pmaxsw
shlb
fisubs
adc
and
mov
data16
icebp
add
xor
push
lret
ss
xchg
push
fwait
outsl
repz
and
xor
ret
xor
add
adc
arpl
push
mov
inc
mov
andl
jecxz
repz
and
xor
ret
xor
add
adc
arpl
push
mov
inc
jo
fiaddl
pusha
int3
ds
and
and
popf
out
fdivr
mov
mov
mov
repz
xorb
sbb
mov
fidivs
sub
xor
lcall
movsb
cs
addr16
lahf
cltd
sahf
cmp
dec
call
inc
lret
mov
sub
or
sbb
rorb
ret
sub
and
and
insb
rorb
repnz
out
mov
mov
inc
adc
addl
mov
pop
test
mov
xchg
mov
add
adc
pop
popf
pushf
xchg
jecxz
fnsave
fdiv
and
lods
or
mov
push
dec
push
pusha
cmpsb
aam
sub
lret
push
hlt
ljmp
imul
aas
pop
loope
int3
in
stos
sub
lock
lret
jmp
imul
sbb
in
mov
add
xchg
push
inc
popa
in
fistl
sub
jecxz
outsl
mov
jecxz
imul
iret
add
or
mov
jmp
mov
arpl
xor
dec
int3
mov
neg
sbb
mov
jle
dec
shlb
mov
into
in
mov
sti
cmp
dec
inc
pop
xchg
jns
xor
sub
inc
pop
adc
and
ret
cmp
js
rclb
out
push
xchg
jle
lcall
mov
mov
out
add
dec
sbb
iret
and
sub
mov
mov
xchg
xor
or
cmpsl
mov
adc
mov
out
or
cli
leave
lret
jmp
and
dec
loop
cmp
sbb
gs
sub
cld
and
xor
jl
xchg
dec
pushf
xchg
pop
or
insl
pop
jge
mov
scas
ficoms
cmp
push
mov
jl
pusha
mov
pop
leave
sbb
xchg
or
cld
aam
cmpsb
push
fldt
inc
aad
xlat
push
cli
jmp
sahf
pushf
dec
pop
inc
jp
xrstor
mov
icebp
dec
cmovg
pusha
cmpsb
push
shrb
add
insb
into
shll
inc
dec
add
movl
mov
and
sub
imul
xlat
fs
dec
lahf
pop
inc
dec
movsl
cmp
rcll
in
xchg
clc
aaa
pop
jns
sbb
test
test
add
int
and
jo,pt
ret
adc
xchg
enter
dec
push
pushf
into
loope
aas
jmp
lahf
arpl
cmp
fs
push
sbb
xchg
add
pop
jb
ret
sbb
xchg
mov
adc
sub
setg
les
mov
mov
out
mov
push
pop
gs
jne
adc
imul
sub
mov
mov
gs
outsl
inc
pusha
rol
sbb
repz
into
arpl
adc
adc
sbb
and
or
aas
cmc
repnz
jmp
icebp
xchg
jle
push
push
mov
das
sub
test
in
sbb
sbb
test
cmp
je
out
into
fcoms
mov
jb
pop
mov
cmp
dec
pushl
int3
out
ss
ret
shll
mov
inc
mov
pop
ret
jne
add
adc
popa
popf
or
pusha
in
icebp
adc
or
xlat
add
aam
imul
icebp
aam
jnp
std
dec
add
and
pushf
lahf
push
stos
pop
lock
xor
ss
inc
cmp
or
jo
sub
pop
xor
shlb
outsl
das
sti
mov
adc
movl
or
lds
jne
push
cs
insb
push
inc
mov
cmp
mov
dec
gs
adc
in
jo
dec
pop
add
push
and
xchg
loope
enter
rclb
add
fstpt
and
pop
out
test
or
ret
xchg
cmp
cmp
xor
enter
push
ja
pop
xchg
add
aas
stc
pop
mov
mov
xor
push
inc
or
aas
and
cmp
add
jne
dec
pop
iret
xor
ffree
movsb
xchg
ss
push
and
std
scas
jb
mov
mov
push
scas
adc
xchg
test
loope
inc
popf
jecxz
sbb
sbbl
enter
xlat
jecxz
xor
add
adc
leave
inc
pop
fs
jecxz
fst
xchg
or
popa
fwait
pop
out
int3
cmp
pop
popa
mov
inc
repz
pop
lcall
sbb
xchg
inc
out
add
ret
xchg
sbb
mov
sbb
jae
push
xchg
pushf
ds
sahf
dec
cmp
stc
ljmp
cmpsb
into
stc
dec
and
lods
test
mov
icebp
dec
negb
mov
jb
loope
push
test
push
push
clc
inc
scas
stos
in
xchg
cmp
into
int
mov
push
push
xchg
pop
or
aam
pop
cmp
test
add
loope
adc
mov
or
fcoml
fidivrl
or
pop
test
mov
sub
sub
sub
sbb
aad
mov
cmp
mov
xor
sarl
loop
ja
repnz
loop
bound
nop/reserved
cltd
inc
loopne
push
movsb
in
fsubs
sub
xchg
xchg
psubd
fcmovnbe
jbe
push
ja
lea
fists
push
sbb
mov
mov
ljmp
fsubs
mov
mov
jno
dec
lods
hlt
or
push
movsl
add
mov
loop
or
mov
jge
bound
pop
xchg
mov
or
shll
dec
cmp
clc
mov
mov
les
gs
loopne
or
js
push
test
fwait
mov
lahf
add
testl
xor
stos
mov
mov
jmp
in
inc
imul
mov
or
push
jnp
jl
repz
sbb
out
jge
call
dec
dec
cltd
jle
lock
movsl
push
outsl
bnd
push
inc
addb
sarb
rcrb
adc
cmp
movsb
pushf
shrl
sub
xchg
mov
mov
xor
fcmovb
fcomip
cmp
sbb
cmpsb
pop
lock
jl
pushf
das
pop
inc
ficomps
push
ret
or
mov
mov
out
inc
mov
sti
jbe
stc
mov
xor
clc
sub
loopne
push
int3
icebp
ret
test
mov
popa
adc
mov
mov
int3
sti
xor
xor
stc
fstpt
add
cs
push
iret
add
idivb
fldcw
push
push
stc
in
adc
sub
mov
addr16
xchg
push
stos
popa
jle
into
jns
lret
sub
cmp
xchg
cmc
mov
or
dec
jb
mov
ss
pop
jmp
mov
fdivrs
inc
cmpb
inc
imul
and
pop
and
test
out
les
inc
add
cwtl
stc
call
test
fcomps
pop
lea
pushf
cs
loopne
inc
adc
lea
je
outsl
fidivl
pop
lods
pop
push
jmp
lahf
sub
add
or
mov
mov
jno
roll
int
mov
jae
ss
jle
imul
repnz
jns
cmc
push
and
adc
cmp
dec
icebp
outsb
ljmp
inc
mov
rclb
mov
or
jmp
jge
orb
lods
mov
jns
jne
mulb
sarb
js
sub
push
mov
inc
and
xchg
pop
mov
sbb
lock
lahf
inc
outsl
inc
sub
imul
pop
lods
mov
dec
xchg
dec
mov
jno
and
gs
mov
ja
movsb
adc
test
sub
xor
ss
fsubl
test
mov
add
push
mov
pop
out
xor
sbbl
jb
jmp
xor
cwtl
lret
xor
mov
insl
shll
in
std
iret
shll
sbb
jno
pop
push
xlat
int
mov
ret
or
pushf
mov
dec
std
adc
add
stos
adc
xchg
scas
sub
mov
add
inc
adc
pusha
push
cmp
inc
jb
popl
adc
xchg
mov
testl
test
ret
ds
test
adc
dec
xorl
fptan
or
int3
or
aam
jbe
mov
push
xchg
pop
and
inc
sub
rcll
push
mov
dec
pushf
in
out
cmp
inc
mov
jae
ja
into
jns
nop
or
outsb
rcrb
xchg
mov
lds
jns
cmpb
push
xchg
ret
shrl
or
and
xor
xchg
pop
xchg
es
pop
mov
cmp
ds
lods
jge
imul
in
mov
or
sub
xchg
aas
inc
inc
mov
insl
or
stos
mov
xor
andb
add
cmp
push
sub
and
addr16
sarl
mov
adc
in
lea
add
or
add
mov
jge
mov
dec
mov
jl
sbb
push
push
dec
pop
xor
mov
and
in
xchg
sbb
in
and
fwait
lahf
cmp
add
xchg
jns
imulb
cmp
xor
dec
pop
test
cs
call
aaa
enter
les
mov
into
pop
cmp
xchg
jle
add
nop
jne
push
sub
adc
inc
mov
sbb
loopne
lahf
mov
jno
add
pop
popf
jge
aas
xchg
xor
shlb
cmp
adc
test
fiadds
jbe
movsb
je
pop
and
adc
mov
or
lods
inc
loopne
sbb
mov
push
inc
or
adc
call
sbbb
jns
lods
popf
ffree
add
pop
jge
notl
or
mov
int
pop
add
and
lds
xchg
das
jne
pop
mov
mov
or
int3
jae
cmpl
add
js
repz
scas
jp
push
sub
dec
xor
mov
je
cmpsl
lahf
cmc
xchg
cmp
jmp
mov
dec
xchg
ss
mov
arpl
call
fimuls
sub
dec
dec
cmpsl
leave
xchg
cmp
jp
cmp
mov
mov
sahf
inc
bound
push
jg
xor
jecxz
out
popa
jle
sub
cmp
pop
testb
cmc
mov
and
test
fdivrs
fsub
pop
and
cli
mov
jp
jno
arpl
leavew
xor
cmp
mov
inc
push
imul
xchg
int
lahf
adc
aam
fstpl
fwait
int
jnp
test
jnp
fldcw
or
mov
mov
mov
pop
arpl
adc
lds
shll
push
push
cmp
pusha
shlb
mov
pusha
xor
hlt
sub
pusha
sub
jl
mov
mov
rolb
movsl
adc
mov
rorb
push
pop
mov
mov
pop
shll
push
fiadds
scas
icebp
jp
movswl
add
mov
cli
fdiv
notl
fstpl
cmc
jae
xchg
dec
rorl
imul
daa
imul
cmc
mov
lret
xor
sahf
mov
test
ret
lret
pop
xor
in
mov
inc
bound
and
ret
xchg
bound
mov
js
fnsave
rcrl
pop
mov
push
sti
and
add
orb
enter
pushf
cmp
add
sub
pushf
push
les
in
fsubs
in
push
jne
jp
sub
je
fcompl
sahf
test
cmp
arpl
pop
xchg
cmpsl
jae
cmp
mov
rcrl
jmp
or
in
inc
xchg
pop
add
push
xor
mov
mov
js
mov
jno
jo
test
xor
xchg
loope
ret
cmp
push
mov
imul
iret
incl
add
ficompl
and
pop
pushf
xchg
faddl
cmp
xchg
out
rol
outsl
cmp
out
push
sub
pop
add
xchg
add
nop
loop
fisubl
in
or
mov
test
xor
fimuls
dec
inc
cmp
and
cmp
sysexit
scas
popa
mov
xchg
jle
push
int3
push
rcrl
mov
mov
dec
and
sbb
adc
push
sbb
insb
repnz
lahf
icebp
mov
mov
imul
popf
add
dec
jl
leave
sbb
cltd
cmp
mov
sub
sarb
xchg
bound
push
dec
or
fwait
sub
cmc
adcl
fstps
push
inc
pushf
negl
cmp
loopne
into
movsb
std
push
push
std
cmp
lock
push
out
lcall
adc
rclb
lahf
or
mov
or
out
mov
data16
ljmp
adc
xor
xchg
add
dec
idivb
ja
and
es
xchg
decb
outsl
popa
mov
lock
jecxz
outsb
mov
arpl
rcrl
stos
arpl
push
jnp
adc
cmp
sti
decb
cld
mov
ret
jg
or
jnp
xchg
imul
xchg
xchg
or
outsl
push
dec
xchg
int3
insb
sbb
jmp
xchg
aaa
jae
xchg
dec
mov
pop
mov
xor
jmp
jg
mov
jmp
test
dec
clc
stos
adc
cltd
inc
lret
adc
orl
add
lret
jo
add
push
jle
ja
mov
jns
jl
fwait
mov
call
add
mov
cmpl
or
dec
cwtl
cmp
push
mov
mov
jb
adc
mov
and
ja
push
rol
call
mov
push
mov
pop
outsb
jecxz
std
loopne
notb
ja
xchg
aas
hlt
mov
dec
cwtl
repnz
mov
xor
inc
in
cmp
test
dec
insb
xchg
pop
inc
jl
cmp
mov
mov
scas
mov
sbb
idivl
add
cli
fdivp
mov
mov
and
jno
pop
outsb
arpl
sbb
cwtl
inc
fistl
bound
lahf
push
lahf
scas
xor
jle
out
lods
cltd
sbb
push
insl
das
jae
mov
jns
movsb
imul
shl
lret
or
ffree
scas
mov
and
clc
fldenv
xor
negb
arpl
xchg
xchg
xchg
dec
or
sub
adc
cltd
lds
ljmp
mov
ret
dec
jecxz
mov
in
sahf
fmuls
mov
xor
rorb
sub
test
mov
cmc
mov
mov
cmp
xor
xor
das
mov
mov
in
jecxz
and
insb
stos
jbe
aas
inc
fisubs
lods
call
stc
pop
inc
jae
push
adc
jne
shr
dec
cmpsb
nop
jo
pop
xchg
add
test
lret
insl
repnz
sbb
jae
in
mov
testb
push
scas
fdivrl
addr16
je
sub
dec
fnstsw
or
pandn
ret
inc
xor
xor
xchg
or
fbstp
es
sbb
pop
shr
mov
push
mov
jmp
lock
imul
mov
bswap
pusha
aad
sub
ret
dec
movl
imul
enter
mov
or
pop
repz
sub
stc
std
mov
pop
dec
inc
ss
cmp
mov
outsb
or
xor
mov
test
rorl
mulb
call
or
movsl
repnz
xor
bound
cmp
sbb
jnp
mov
test
or
mov
inc
loope
test
xchg
adc
fmuls
push
scas
lds
in
ret
leave
xor
imul
aam
sahf
mov
loope
cltd
xchg
rcl
push
imul
mov
aam
xor
jnp
mov
pop
xchg
arpl
jl
push
mov
stos
jecxz
push
ret
aam
int
xlat
adc
inc
cmp
pop
test
lret
and
jl
jmp
xor
ficoml
ss
les
inc
adc
int
sti
idivb
imul
xchg
mov
sarb
and
mov
loop
sti
sbb
loope
sbb
fcomip
out
add
pop
mov
xchg
mov
cmp
and
enter
lea
sahf
xchg
call
jb
fs
inc
loopew
pushl
std
orl
xchg
fidivrl
sub
hlt
dec
in
call
and
adcb
test
sub
push
push
mov
push
add
rolb
push
out
pop
mov
lods
lods
data16
mov
xor
dec
lods
xchg
data16
ror
dec
add
push
in
sbb
mov
test
stos
jae
add
mov
aad
push
movsb
into
inc
mov
mov
pop
inc
inc
aas
inc
jbe
fs
jae
inc
insl
enter
std
sbb
jp
fnstcw
lret
lods
or
cmc
std
mov
sub
imul
xor
fwait
push
add
fdivp
shll
mov
or
jnp
sbb
adc
mov
icebp
jle
or
rcr
mov
inc
std
ds
out
insl
mov
jb
adc
cmpb
ja
mov
int3
jecxz
push
out
les
pop
xor
push
sub
repz
dec
xchg
adc
sarl
je
xchg
fs
aas
xchg
loope
scas
dec
repz
les
insl
dec
cmp
or
addr16
decb
xchg
add
les
into
fadds
fildl
daa
es
movsl
cmc
dec
add
adc
fistl
testb
mov
rcll
out
ds
mov
jecxz
ret
mov
adc
aad
dec
jae
push
std
dec
or
xchg
inc
repz
scas
push
pop
fldt
je
mov
sub
addr16
push
popa
xchg
push
mov
out
push
dec
sbbl
push
mov
aad
mov
xor
or
out
xchg
mov
mov
test
mov
mov
out
mov
lock
stos
pop
scas
mov
and
add
scas
dec
dec
lret
lock
mov
and
or
enter
mov
leave
xlat
mov
pop
std
push
ret
test
out
test
imul
mov
mov
imul
sbb
cs
clc
mov
mov
xchg
int
cmp
ret
jmp
icebp
xor
in
sub
and
adc
mov
mov
gs
call
or
insb
icebp
cmp
sub
aas
insb
cwtl
dec
cmp
jle
jg
jb
je
sub
insl
add
mov
pop
sbb
aam
mov
adc
jno
jb
jbe
stos
in
xchg
mov
popa
loop
ret
in
loopne
sbb
int
sub
dec
pop
mov
dec
push
xlat
dec
jb
dec
test
mov
xchg
enterw
popa
imul
sbb
addr16
add
xor
filds
jnp
cltd
fstps
adc
inc
jmp
lahf
dec
mov
and
xchg
xchg
or
pop
in
mov
sbb
sbb
ret
mov
push
or
push
icebp
cmpsb
lock
hlt
sbb
mov
push
sahf
sbb
hlt
mov
cmpb
adc
mov
jb
mov
mov
js
and
dec
xchg
jno
sub
push
sub
popf
in
mov
imul
mov
loop
jno
cli
insb
outsl
lds
xor
xor
mov
mov
lcall
xor
ret
sbb
or
lret
call
repnz
pushf
pop
push
stos
je
mov
jbe
dec
hlt
pop
sar
cmp
cld
call
xchg
mov
add
pop
mov
cmpsb
repnz
test
inc
sbb
shl
icebp
fisubrs
jae
scas
jae
sbb
popa
pop
and
sahf
push
add
std
jbe
xor
xor
and
movl
adc
nop
jmp
fcmove
mov
xor
mov
mov
mov
sbb
movsb
sbb
loope
xchg
loope
jl
in
mov
mov
sub
pop
aas
cwtl
add
mov
jns
nop
or
lods
popl
inc
fidivrs
jnp
pop
pusha
dec
iret
test
mov
adc
and
xor
ret
xor
add
adc
arpl
push
mov
inc
mov
andl
jecxz
repz
and
xor
ret
xor
add
adc
arpl
push
mov
inc
mov
andl
jecxz
repz
and
xor
ret
xor
pop
jecxz
repnz
bound
mov
xchg
jae
add
adc
push
xor
ret
int3
jns
jecxz
test
sti
insb
mov
mov
sub
cmpl
mov
je
cmp
je
push
lea
push
push
movb
call
call
mov
xor
xor
call
mov
xor
call
mov
mov
lea
push
call
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
pop
pop
test
jne
mov
not
mov
movb
or
mov
leave
ret
jl
insb
jno
inc
dec
push
icebp
jne
pop
jb
push
adc
loope
icebp
fadd
int
mov
orl
cmp
sub
sbb
or
cld
loope
icebp
fadd
int3
sarl
mov
orl
cmp
sub
sbb
or
cld
lods
mov
int3
sarl
loop
and
add
cmc
out
lock
add
repnz
std
and
cmpsb
jmp
pop
xor
out
add
scas
ret
fldcw
loop
icebp
sbb
pop
imul
lret
addl
cmpsl
pop
mov
cmp
xchg
push
push
nop
cld
and
adc
mov
mov
ss
dec
inc
sbb
cmp
cltd
call
imul
inc
repnz
loope
jg
mov
cld
mov
and
lahf
decb
adc
mov
loop
imul
and
and
ljmp
stos
push
sbb
and
in
in
pop
and
xchg
or
mov
insb
jno
inc
dec
push
cmp
sub
sbb
or
cld
loope
icebp
fadd
int3
sarl
mov
cmp
pop
and
jo
fs
popa
cld
lea
mov
incl
lret
and
cmp
inc
and
cmp
imul
cltd
movsb
mov
mov
lock
stc
lcall
xor
xor
sub
sbb
or
cld
loope
icebp
fadd
int3
sarl
mov
pop
inc
dec
push
cmp
sub
sbb
or
cld
loope
icebp
fadd
int3
sarl
mov
shll
iret
lods
outsl
pop
xchg
inc
mov
jb
int3
jle
adc
cmp
iret
popa
xchg
insb
mov
out
movsb
loop
sbb
mov
shll
nop
enter
jne
add
mov
inc
jno
or
ficomps
inc
sub
stos
movsb
mov
sbb
hlt
cltd
loopne
in
dec
into
hlt
mov
pusha
mov
xor
sbb
dec
orl
lods
xor
adc
cs
out
pop
push
sbbl
and
xchg
out
les
cvtps2pi
push
inc
sub
rcr
rol
fstl
test
sub
lods
mov
jb
adc
dec
adc
cmp
sub
push
test
ss
push
mov
test
test
cmp
stos
sar
pop
or
cltd
dec
arpl
outsb
pushf
mov
inc
fsubl
jecxz
sbb
roll
stos
cltd
es
inc
dec
fldt
iret
sti
mov
jp
inc
push
fdiv
rcrl
mov
ficompl
xchg
mov
popf
xchg
cmp
mov
out
pushf
mov
pop
jbe
out
inc
iret
scas
into
lcall
sbb
xchg
repz
adc
mov
lcall
mov
jmp
notl
add
mov
xor
lahf
gs
iret
mov
fcomp
movsl
cmpsb
adc
sahf
mov
mov
ret
jns
ja
or
pop
cmp
daa
and
shlb
mov
stos
dec
fistpll
arpl
adc
or
pusha
inc
sub
add
js
push
mov
xor
pop
or
nop
lea
jecxz
fwait
or
out
or
nop
mov
icebp
jg
jo
imulb
mov
daa
outsb
add
imul
cmc
sbb
mov
pop
out
call
fisttps
xchg
out
dec
rcrl
adc
sub
adc
ret
mov
nop
jle
xlat
aas
mov
mov
pop
inc
or
mov
inc
sarb
out
sub
pop
pop
push
mov
dec
jmp
pop
or
mov
repz
mov
mov
mov
sahf
scas
cmc
jno
adc
xchg
xchg
int3
fldl
push
test
std
cwtl
sbb
xchg
lods
lcall
addl
mov
sub
xchg
ja
fistl
xchg
repnz
xor
pop
inc
pop
fstpt
sbb
jp
xchg
and
sub
int3
cmp
lods
push
int3
jne
fs
sbb
sahf
pop
daa
xor
push
shlb
leave
pop
sub
lods
les
push
sub
push
pop
jmp
pop
xchg
or
imull
aas
push
mov
and
push
sbb
push
push
popa
inc
jns
mov
lods
push
mov
pop
xchg
movsl
sbb
inc
mov
jnp
mov
cmp
sbb
aam
test
scas
fcomps
mov
in
push
popf
addr16
lods
mul
mov
dec
jle
out
int3
stos
xchg
adc
cld
leave
add
adc
jecxz
jmp
data16
lret
pop
sti
andb
or
fwait
iret
call
jo
sub
nop
lahf
dec
sbb
push
hlt
call
clc
pop
ljmp
or
bound
mov
pop
enter
jle
mov
jnp
mov
adc
ret
in
and
cmc
and
inc
sarl
dec
cltd
lcall
push
xchg
xchg
lods
arpl
inc
lods
out
dec
mov
popa
addl
or
out
arpl
cmpsb
xor
pop
dec
pop
xchg
movsb
enter
mov
xchg
js
dec
mov
fnstenv
pop
xchg
scas
mov
leave
or
cli
inc
jbe
pusha
test
push
mov
lock
in
or
movsl
xor
dec
adc
scas
pop
fstl
arpl
jns
lcall
mov
outsb
add
ds
or
rorl
sub
stc
pop
or
daa
inc
sub
dec
mov
cmp
jecxz
mov
jo
mov
jne
push
addr16
jnp
mov
push
xor
and
pop
aam
xchg
insb
push
pop
gs
in
push
xlat
mov
sub
lret
adc
xchg
cmc
dec
adc
mov
mov
mov
imul
cmp
in
cmp
rol
es
sbb
sub
insl
push
or
sbb
pop
mov
dec
loopne
imul
repnz
add
out
ss
inc
add
jmp
lahf
aad
lahf
mov
add
cmp
mov
jno
in
insl
jge
std
sti
mov
and
dec
icebp
out
cmp
sbb
test
dec
and
test
cld
mov
test
jnp
adc
andps
andl
mov
test
xor
pop
adc
arpl
sarl
or
push
inc
pop
insl
inc
jmp
enter
sub
adc
fmull
lret
pop
pusha
push
mov
out
or
and
sbb
xor
push
aaa
sbb
push
mov
inc
xchg
cmp
repnz
stos
faddl
stc
cmp
sarl
xchg
hlt
dec
test
imul
adc
outsl
dec
lds
sar
je
mov
add
dec
je
xchg
push
icebp
xchg
ret
and
or
push
adc
leave
test
cli
out
cmp
fidivs
push
lock
inc
in
mov
fdivrp
jbe
in
cmp
push
adc
stc
repnz
mov
imul
xor
push
xchg
lock
ret
mov
and
xchg
push
pop
dec
mov
cmpsl
in
cld
xchg
aam
adc
sbb
push
inc
add
jbe
add
movsl
add
sbb
push
jne
pop
cmp
xchg
fsubs
mov
inc
daa
inc
sub
jns
jge
aam
rclb
neg
mov
sahf
mov
push
movsb
icebp
cmc
mov
jg
jbe
mov
leave
sbb
jl
imul
pop
mov
fsubrl
les
gs
mov
js
mov
add
mov
outsl
loope
jns
mov
js
movsb
fstpt
mov
leave
dec
push
lret
mov
iret
push
inc
cmpsb
inc
std
jecxz
stos
test
insb
mov
adc
mov
push
push
push
repnz
fldt
enter
inc
xor
lods
addl
push
and
or
adc
adc
or
inc
outsl
adc
pop
push
data16
jb
jno
je
popa
push
mov
mov
push
dec
mov
shrb
cld
inc
idivl
jmp
xchg
in
jecxz
inc
and
inc
cmp
cmpsl
adc
lock
fimuls
pop
fucom
mov
cmpl
mov
movsl
clc
jmp
loopne
cltd
push
push
xor
stos
mov
ret
mov
fwait
pop
sbb
cld
and
mov
scas
adc
bnd
cmp
ror
adc
addr16
xor
push
inc
movsb
cmp
loope
test
in
cmp
mov
push
sti
int3
dec
pop
sub
mov
add
shr
dec
loop
cmp
jp
rcrl
sbb
xchg
pop
into
jo
xlat
mov
scas
stos
jmp
fnstcw
cltd
pop
ss
jno
loopne
pop
sub
pop
or
xchg
dec
mov
cmp
vrcpss
mov
sarl
sbb
imul
std
out
in
jl
inc
pop
push
sub
push
sbb
dec
stc
jmp
jnp
sbb
jle
or
or
jbe
sti
sbb
std
fnstenv
andl
mov
pushf
sahf
subb
out
pop
sbb
jae
shlb
ss
jp
sub
and
sub
iret
aam
mov
ja
pop
pop
xorl
stc
sub
sub
jmp
jne
dec
push
cmc
push
shlb
pop
pop
cli
fwait
sbb
inc
and
pushf
data16
subl
lcall
push
pop
cmpsb
repz
repnz
loop
int3
sub
xor
test
fidivrl
add
jecxz
and
mov
aam
in
pop
mov
or
mov
push
mov
movsl
cmp
out
xor
test
in
jns
dec
cmp
repz
daa
insb
int
mov
cmpsb
sbb
jge
pop
and
sub
dec
ret
rcll
cmpsl
dec
mov
inc
sub
call
xor
shrb
js
fcom
out
mov
outsl
rorb
fwait
enter
dec
inc
mov
jle
stos
rorb
in
int3
mov
xchg
and
movsb
adc
ss
lahf
dec
lds
imul
inc
cld
icebp
adc
and
fsubr
xor
cli
push
loop
rcr
adc
pop
pop
pop
jo
jbe
mov
xchg
adc
lahf
or
and
jecxz
ret
push
outsb
xchg
pop
outsb
mov
cmpsb
pop
sahf
mov
add
lock
jae
lahf
addb
das
cmp
pop
jmp
xchg
je
push
and
pop
dec
jbe
mov
mov
inc
sub
int3
test
pusha
cmp
jle
neg
das
fsubs
imul
sahf
cwtl
mov
sbb
ljmp
pop
scas
xchg
sbb
sbb
push
ljmp
imul
out
daa
jmp
dec
jmp
in
loop
fwait
ret
loop
xchg
cmp
repz
push
jmp
arpl
bound
dec
mov
adc
dec
xchg
xchg
xlat
or
mov
mov
fwait
clc
mov
pop
and
or
push
inc
dec
add
in
scas
pop
mov
test
gs
sete
mov
cmp
inc
imul
repz
lahf
jle
or
mov
jp
data16
out
inc
dec
inc
push
test
aad
outsl
sub
imul
or
push
movsb
and
lahf
mov
loop
push
outsl
pop
fstl
lods
jb
cli
mov
or
fisubrs
adc
lea
popa
cli
inc
xchg
mov
std
cvttps2pi
das
cmp
popa
or
addr16
hlt
int3
das
add
add
xchg
sti
test
call
cmp
jae
add
fs
sbb
pop
es
jo
adc
iret
sti
addb
popl
out
bound
jg
or
dec
and
adc
jg
or
into
push
pop
stos
sbb
fs
and
cmp
int
or
rcll
pop
and
push
jecxz
lahf
daa
imul
mov
mov
cmp
mov
shr
adc
push
dec
xlat
insl
fs
mov
mov
push
rcll
aad
pop
data16
adc
les
mov
lea
push
adc
fistps
inc
fisubs
ds
cli
cwtl
mov
jo
loope
sbbb
mov
sbb
xor
xor
dec
cld
jl
push
or
pop
mov
add
push
shrb
fimull
inc
in
adc
jmp
push
mov
out
pop
cld
dec
push
xor
out
or
js
xchg
into
aad
in
or
mov
aas
aaa
lods
fdivp
lret
emms
and
lret
jb
out
inc
stos
or
loopne
out
sti
sbb
push
push
sub
pop
imul
scas
notb
jp
cmp
xchg
mov
fisttpl
or
or
rorl
daa
sarb
mov
ss
shll
aaa
fbstp
fmuls
pop
fwait
cmp
vmovd
xchg
jl
jno
fs
or
sbb
xor
iret
xchg
or
cltd
mov
scas
mov
mov
pop
push
push
hlt
mov
call
xchg
adc
hlt
jns
lret
adc
xor
stc
push
ja
dec
outsb
mov
cmpb
mov
std
insb
icebp
lcall
pop
adc
in
jo
mov
mov
cli
call
fcoml
arpl
mov
jo
int3
icebp
out
testb
stos
mov
add
pushf
js
std
push
iret
fstl
cwtl
pop
into
cs
inc
pop
fcom
jmp
sbb
dec
push
jbe
dec
int3
and
xchg
adcl
dec
mov
and
and
mov
push
ljmp
mov
add
cmp
sahf
pusha
js
repnz
adc
insl
xorl
add
xchg
lcall
cmp
testl
and
jbe
mov
inc
mov
lods
imul
and
lcall
mov
outsl
push
lahf
cmp
bnd
sbb
scas
adc
xchg
xchg
mov
pusha
idivb
sbb
leave
xor
inc
jle
push
mov
in
mov
lcall
and
push
adc
jb
aam
rcrl
mov
addr16
pop
inc
add
repnz
pop
dec
jg
mov
outsl
jl
and
mov
aam
mov
sbb
mov
xchg
push
mov
mov
repnz
fdivrs
repnz
mov
dec
adc
mov
imul
lret
call
pop
or
dec
cmp
jo
xor
xchg
testl
fldl
int
call
icebp
fsubl
mov
mov
dec
sub
mov
ds
out
popf
dec
lock
hlt
popa
add
dec
inc
das
mov
fs
push
out
cmpb
sub
rdpmc
ja
es
data16
or
lods
in
pop
fsubrl
insb
jno
imul
mov
mov
stc
inc
cmpsl
cmp
or
sbb
fldl
add
ret
div
ljmp
adcl
xor
pop
push
aad
cld
bound
in
sbb
pop
shrb
mov
mov
fisttpl
mov
push
jbe
and
std
sbb
xorl
dec
enter
or
in
push
rcrl
xor
iret
outsb
inc
sbb
add
mov
jne
adc
inc
sbb
stos
dec
xchg
xadd
adc
incb
adc
jecxz
adc
andb
adc
aas
rcl
jns
cmpsl
cmp
in
mov
fwait
sbb
sub
lods
cmp
push
orl
xor
fistl
sbb
mov
stos
repnz
sbb
xor
mov
xor
xor
jge
push
add
pushw
imul
popf
jbe
int
dec
stos
fwait
jg
mov
cmp
mov
les
xor
inc
movsl
mov
sub
sbb
lret
dec
jmp
pushf
jp
das
push
sbb
addr16
test
fwait
cld
or
add
sbb
aaa
push
xchg
cmpsl
jno
or
mov
daa
popa
push
dec
scas
or
inc
fucomp
inc
in
fsubl
into
cltd
cmc
aad
out
pop
add
das
loope
loope
cmp
arpl
mov
in
or
cmp
mov
inc
add
movsb
gs
and
sub
push
xchg
dec
mov
dec
and
mov
movsb
cmp
push
sbb
xorb
cltd
push
rclb
dec
mov
mov
insb
aas
jp
test
aam
push
cmp
cli
add
and
push
mov
jno
dec
and
cmp
xchg
ja
mov
fcomps
or
push
mov
shl
enter
in
mov
xor
movsb
sbb
aam
adc
loopne
cmpsl
jmp
jecxz
in
in
jmp
push
sub
pop
or
cmp
jecxz
sbb
push
mov
or
es
gs
cld
mov
xor
mov
imul
outsb
sahf
loopne
ret
inc
fisttps
divb
js
xor
out
xchg
and
pop
pop
test
into
cmpsl
int3
shll
aam
sub
xchg
lret
mov
out
arpl
mov
xchg
lock
ljmp
jno
push
enter
pop
xchg
mov
sub
dec
ss
stc
xlat
push
push
ss
dec
adc
mov
in
pushf
jmp
dec
js,pn
xchg
jmp
xor
inc
sti
jae
sub
loopne
and
xor
into
in
loopne
or
mov
xchg
jle
cmp
cmp
stos
jmp
inc
pop
jle
jo
movsl
adc
cli
mov
xchg
mov
ficoml
ljmp
sbb
shlb
dec
sbb
les
jg
xor
insl
dec
adc
lock
fstl
lods
test
add
push
mov
enter
ljmp
idiv
fdivrl
or
pop
cmp
sbb
xor
addb
pop
test
adc
push
lahf
xor
mov
mov
xchg
leave
pop
inc
ss
daa
and
lcall
mov
jecxz
mov
hlt
push
sub
fbstp
add
mov
mov
xor
mov
pop
daa
add
rcr
mov
aam
int3
and
mov
mov
xchg
dec
lcall
push
adc
sub
xor
rol
pop
lret
or
fs
mov
push
push
xchg
call
mov
sbb
aam
jb
adcb
dec
testl
push
test
pop
test
cmp
lcall
pop
sbb
insb
imul
or
cmp
jo
sbb
lds
lcall
pop
js
mov
inc
push
add
fdiv
mov
pop
adc
push
pop
test
inc
test
movsb
scas
dec
mov
outsl
sub
mov
and
cmpsb
repz
mov
dec
jecxz,pt
mov
int3
jmp
sbb
dec
fdivp
loopne
lock
idiv
mov
and
fdiv
repz
sub
lret
in
fildll
or
mov
lods
shlb
repz
and
adc
cld
xchg
loope
daa
add
jle
insl
cmp
jmp
scas
push
lret
movsb
jae
or
add
cld
int
mov
pop
out
jbe
pushfw
xor
xchg
cli
or
es
loope
adc
and
jbe
jg
cmp
jmp
xor
jns
mov
xor
pop
pop
ret
jae
cmpsb
in
sahf
imul
fsubl
sahf
push
or
rorb
fs
add
stos
ret
dec
inc
scas
test
xchg
xchg
cmpsb
in
xchg
cli
jecxz
cmp
xchg
sahf
lret
mov
adc
mov
scas
cli
es
test
ja
shlb
jge
iret
aad
sbb
dec
loopew
inc
add
loop
rcll
inc
cmpsb
dec
dec
fnsave
frstor
mov
out
xchg
lds
aas
shlb
dec
and
sarl
mov
mov
jmp
mov
es
mov
push
sahf
fdivr
inc
into
loop
das
repnz
inc
pop
mov
sub
mov
cmp
jge
mov
stos
mov
aas
xlat
in
notl
mov
pop
and
out
adc
sbb
gs
iret
orl
jae
mov
lods
mov
stos
fnsave
cmp
pavgb
pop
cmp
sub
sub
rorb
popf
mov
jmp
ret
xchg
fimull
ret
pop
faddl
stc
std
sbb
mov
dec
push
sub
add
jmp
repz
popa
xchg
sbb
shlb
jge
jno
imul
xor
xchg
xor
and
stos
jge
cwtl
pop
out
mov
test
push
mov
shlb
out
inc
inc
loopne
in
stc
ret
mov
sub
test
js
xlat
cmp
leave
int3
jne
xor
mov
sub
mov
pop
or
xchg
cwtl
cmpsb
mov
mov
xor
cmc
fnsave
jecxz
and
rcrl
scas
ss
push
push
inc
into
loopne
loope
and
or
adc
adc
icebp
mov
sbb
inc
adc
bound
or
mov
hlt
mov
test
sub
cwtl
rol
rcl
ds
xlat
cmp
add
repnz
fwait
cwtl
lock
js
gs
loope
sub
icebp
imul
and
pushf
add
mov
adc
mov
sub
add
add
pop
subl
jge
and
xor
ja
ret
in
scas
or
dec
pop
mov
push
mov
xchg
and
mov
pop
jmp
mov
lds
ffreep
jne
mov
cmp
pop
jmp
sub
xor
pop
icebp
into
movq
xchg
js
fdivrp
lret
pop
mov
push
xor
mov
mov
mov
sbb
clc
jns
add
cmpsb
rorl
roll
mov
inc
dec
push
cmp
sub
sbb
or
cld
loope
icebp
fadd
int3
sarl
mov
pop
inc
dec
push
cmp
sub
sbb
or
cld
loope
icebp
fadd
int3
sarl
mov
faddl
push
mov
add
fadd
int3
sarl
mov
pop
inc
dec
push
cmp
sub
sbb
or
cld
push
in
pop
jbe
int3
cmpsb
int3
sub
dec
in
jle
outsb
push
mov
mov
dec
dec
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
push
mov
call
xor
pop
ret
enter
call
sbb
cmpsb
fnsave
pop
pop
push
push
sbb
ja
addr16
call
xlat
cwtl
dec
test
mov
daa
push
cmp
inc
sub
cmp
add
clc
movsl
mov
cwtl
sti
test
mov
sbb
push
or
imul
add
mov
ret
xchg
iret
dec
inc
jmp
aas
adcb
cmc
jg
test
jg
and
daa
xchg
pop
in
add
cmp
movsl
hlt
xor
push
xchg
pop
xchg
pop
push
sbb
xchg
mov
subb
jmp
out
negb
std
stos
or
inc
stos
mov
ja
push
call
loopne
scas
icebp
or
sbb
add
mov
fwait
sbbb
in
and
mov
out
inc
push
pop
in
repz
pop
add
inc
xlat
data16
shlb
adc
test
movhps
aas
in
push
dec
mov
or
clc
lods
mov
cwtl
test
mov
shrl
outsl
or
mov
lods
lds
mov
mov
cmp
cmp
inc
sbb
dec
mov
pop
xor
dec
push
mov
mov
hlt
in
cltd
std
mov
jb
push
adc
pop
jge
inc
push
push
or
rcr
scas
out
int
cwtl
test
mov
pop
push
push
sbb
ja
addr16
call
xlat
cwtl
test
mov
pop
push
push
sbb
ja
addr16
jne
xchg
dec
addb
push
scas
nop
std
dec
sub
mov
int
xchg
sti
nop
insl
push
rcrb
addr16
pop
movsb
mov
jl
movsb
loop
push
les
mov
mov
adc
and
xchg
clc
test
push
cmp
ficomps
sub
mov
inc
cwtl
push
push
or
mov
mov
imul
call
lahf
mov
insb
pushf
mov
fcmovbe
dec
jbe
fs
jmp
mov
ljmp
pop
imul
les
test
sub
adc
jne
sbb
addb
int3
inc
xor
ja
cs
arpl
notb
mov
ss
fucomi
clc
clc
xor
mov
pop
adc
or
inc
mov
aaa
jae
cmp
stos
push
test
xchg
fldl2t
movsb
imul
mov
aad
push
cwtl
push
push
aas
or
and
roll
xor
pushf
movsl
fs
cmc
adc
stc
int3
fprem
mov
push
call
popa
and
adc
pushf
xchg
xchg
aam
test
divps
dec
rorl
loop
sub
jecxz
cmp
or
or
xchg
mov
xchg
outsl
rcll
je
arpl
es
xor
out
out
push
mov
int3
ficoml
addr16
or
andb
jmp
cld
aam
mov
sub
cltd
or
adc
cmp
push
sbb
adc
lock
insl
adc
insl
in
roll
int
hlt
xchg
popf
scas
mov
xor
das
mov
aad
xchg
inc
dec
aam
divb
push
push
int3
enter
jnp
je
imull
or
frstor
pop
push
adc
and
test
dec
dec
jns
xor
sub
inc
das
sub
xor
adc
or
jecxz
cmc
adc
xor
push
inc
es
xchg
sub
loop
or
gs
jl
pop
ss
out
sbb
aas
fidivs
iret
push
cli
cli
jmp
cwtl
cmc
mov
jge
mov
sub
add
or
xchg
jo
mov
xchg
adc
hlt
lods
jg
dec
xchg
push
stos
dec
daa
sbb
mov
inc
add
jmp
lret
mov
inc
push
shll
ret
push
mov
int
cltd
stos
cld
rcrb
nop
xchg
mov
pop
in
cmpsb
pusha
pop
arpl
iret
lds
push
fidivrs
add
jge
outsl
movsb
lods
pusha
rolb
sub
cmp
jmp
sbb
mov
clc
int
jne
or
add
mov
in
in
dec
dec
fldcw
outsb
or
push
sbb
roll
repz
pushf
pop
sub
push
push
and
mov
outsb
je
jl
test
xor
push
sub
add
dec
scas
outsb
mov
pop
add
int
addb
mov
lock
dec
pop
pop
sbb
pop
es
jecxz
add
add
dec
jbe
dec
lahf
test
loopne
sub
xor
in
js
sub
xchg
in
scas
orb
push
or
mov
je
nop
scas
inc
clc
stos
mov
adc
jne
add
ret
mov
mov
movsb
and
jl
pop
les
add
ja
push
imul
ds
mov
dec
loopne
addl
and
xchg
bound
scas
scas
sbb
testb
and
dec
loop
mov
test
clc
xor
std
filds
fimull
add
decb
mov
mov
adc
mov
data16
ja
jb
ja
pop
mov
popf
xchg
adc
icebp
xchg
repz
out
movsb
sub
xor
aaa
insb
cltd
pop
dec
adc
stos
inc
adc
ss
jo
jbe
cmp
out
xor
lcall
out
dec
fwait
mov
leave
out
adc
mov
mov
xchg
scas
in
xor
mov
call
stos
pop
jb
into
clc
jb
clc
repnz
jl
and
add
cmp
scas
sti
mov
lods
inc
je
cs
iret
lds
in
frstor
dec
movsl
lahf
and
mov
lret
mov
inc
inc
add
push
sub
jnp
ret
jnp
add
add
pop
jl
call
sub
push
movsl
mov
out
add
adc
and
inc
xchg
push
mov
push
pop
xor
sbb
imulb
jmp
jno
iret
dec
jge
xchg
push
cmp
dec
imul
lods
nop
repz
pop
stos
xchg
out
decl
popa
or
add
daa
mov
lret
xchg
sbb
scas
mov
inc
ror
mov
mov
push
pop
and
inc
popf
imul
sub
xchg
pushf
xlat
aad
inc
xchg
jl
in
in
xchg
cmp
hlt
pop
out
mov
cmp
mov
mov
xor
inc
loop
aad
push
mov
pop
mov
sahf
stos
stos
pop
pop
mov
pop
outsb
and
inc
test
cmp
icebp
lcall
cli
sbb
aas
popa
xchg
lods
pop
pop
ljmp
movsb
leave
adc
mov
call
mov
add
adc
lret
xchg
jo
and
pop
jle
xor
xchg
fcoms
loop
and
jmp
mov
addb
lret
pop
xlat
out
push
xchg
cmc
shll
inc
dec
inc
aas
jns
push
jmp
xchg
dec
xor
jbe
add
or
xchg
mov
mov
xchg
gs
adc
mov
jp
mov
pop
jns
pop
xlat
mov
mov
dec
out
ret
leave
arpl
xchg
sbb
lds
outsl
in
outsb
mov
lcall
dec
pushf
sarl
imul
add
shrb
mov
test
dec
mov
or
shrl
inc
dec
jge
pop
adc
mov
loop
lahf
jmp
sbb
cmp
adc
aam
inc
dec
and
pop
or
cmp
jmp
in
mov
inc
test
test
xor
push
gs
out
push
sbb
mov
pop
lds
pop
gs
pop
test
repz
stos
addl
test
sub
adc
push
ret
orb
test
out
addr16
outsl
mov
mov
sbb
mov
pop
and
push
xor
in
fadd
or
les
out
and
mov
js
mov
fsubs
fidivs
mov
adc
xor
scas
cmp
mov
fsub
lds
fs
sub
repz
cwtl
test
mov
int3
jp
out
into
outsl
sub
xchg
pop
pop
jecxz
jnp
sbb
ljmp
ret
push
mov
outsl
fdivr
pop
out
gs
xchg
pop
and
mov
mov
sub
push
dec
int
notl
push
and
pop
scas
popf
pop
loop
xor
sbb
adc
xchg
mov
je
xor
mov
xchg
lea
addl
iret
repnz
fidivl
mov
cmc
lods
loopne
ret
dec
stos
jg
cltd
jne
lret
ret
pushf
cld
mov
loope
and
mov
out
inc
pop
icebp
aam
out
xor
add
cmp
jns
fstpt
xchg
inc
dec
fcomp
fisttpl
repz
xor
and
sbb
daa
int
rorb
inc
negb
fistpl
xor
pop
mov
je
or
adc
and
subl
shll
lods
cld
xorl
add
pop
lock
fwait
nop
das
out
fistpll
adc
xor
mov
fcomi
fcoms
and
negl
icebp
dec
pop
inc
mov
addr16
call
mov
clc
xchg
or
fisubs
push
lds
jnp
pop
pop
insl
or
add
sahf
aas
add
or
or
add
cmpsl
dec
mov
inc
mov
data16
fistpll
test
pop
stos
std
inc
pop
dec
cmpsb
xor
xchg
scas
fnsave
jno
mov
jge
test
fisubl
ret
mov
xor
adcl
lea
cmp
pop
add
mov
call
dec
mov
loop
dec
imul
xchg
imul
fnstenv
mov
inc
shlb
sub
clc
icebp
and
sub
fdivp
daa
sti
sub
sbb
cmp
cmc
and
leave
xor
arpl
pop
mov
mov
dec
les
das
adc
inc
or
js
insl
pop
fstpt
jl
out
pop
mov
pusha
clc
lods
aad
mov
sahf
loopne
daa
outsb
or
lcall
aad
scas
outsb
cmp
mov
fldl
cmp
shlb
movsb
int3
jne
and
xor
repnz
jne
rolb
je
addr16
je
add
test
jl
pop
jb
std
pop
loopne
and
pop
insl
add
pop
xchg
scas
cli
rorl
xchg
push
jo
sub
dec
cmpl
mov
lock
xchg
add
call
push
sbb
andb
out
xorb
adc
pop
icebp
sbb
sub
xchg
jmp
adc
aas
shrb
movsl
sub
std
lds
cwtl
jne
outsb
ss
jp
mov
mulb
int3
rcrb
mov
and
jno
push
inc
cmp
ss
arpl
and
sbb
inc
cmp
mov
leave
pusha
pop
out
xorl
lock
call
fcoms
jg
and
ret
or
aas
in
inc
lods
or
aad
addr16
adc
pop
dec
f2xm1
loop
out
fidivl
sti
sarb
inc
jae
pop
xor
das
repz
sbb
or
add
enter
inc
call
add
add
ret
mov
and
sub
lods
xor
ja
mov
and
fnstsw
cmp
cld
mov
jae
xor
lret
or
jo
int3
pop
shrb
je
pop
mov
and
data16
gs
push
xchg
es
ja
or
inc
adc
pop
aam
es
lret
mov
and
push
insb
lock
mov
push
icebp
imul
mov
adc
scas
mov
dec
out
and
imul
xchg
mov
add
shll
imul
scas
cmp
js
shrl
insb
xor
mov
xchg
add
or
adc
sbb
xor
pop
ljmp
pop
cmp
pop
inc
jbe
inc
push
aad
les
and
add
dec
iret
and
nop
shlb
cmpsl
loop
andl
push
notl
mov
insl
xchg
pop
fbstp
outsl
mulb
push
push
out
movsb
sti
ret
sbb
xor
mov
push
mov
add
xchg
jp
pop
fsubl
divb
outsb
cltd
lcall
addr16
out
xchg
sbb
jnp
inc
leave
mov
data16
jecxz
mov
xor
in
jge
xchg
scas
dec
stos
movsl
sbb
mov
xchg
sub
mov
cs
or
dec
sti
rcl
and
mov
les
inc
jno
xor
dec
orl
cmp
cmp
imul
add
inc
jns
ret
push
scas
jg
xor
push
and
loop
pop
fisubs
lods
sub
xchg
pop
and
movsb
stc
dec
stc
stos
jnp
std
jo
xchg
dec
xchg
frstor
mov
mov
daa
jle
out
pop
fcompl
sbbl
nop
inc
adc
pop
dec
iret
rcl
pop
ds
and
xor
pop
and
les
out
push
es
pop
push
int3
xchg
andl
loopne
shlb
jg
pop
or
jecxz
addr16
jle
test
sub
in
aam
or
pop
cmp
cmp
pop
movsl
pop
stos
push
inc
inc
cmp
dec
dec
aaa
pushf
pop
and
shrl
xchg
inc
ror
add
mov
cmpsl
mov
lahf
push
insb
movq
sti
push
xchg
pop
pop
ds
nop
out
lods
mov
mov
shrb
cli
pop
and
int3
stc
stos
pop
sub
movsl
fwait
pop
dec
repz
adc
test
adc
lret
jle
push
sub
lea
iret
in
stos
cs
notl
lea
inc
jle
fwait
sbb
sub
fildll
xchg
repz
add
loop,pt
sarl
xor
cmp
lds
jg
mov
mov
lock
int3
xchg
rcll
mov
fisubl
pop
add
pop
mov
pop
sbb
popa
adc
or
cld
lds
icebp
jge
mov
pop
jb
mov
imul
inc
sub
movsl
push
cmp
push
cwtl
lret
cmp
inc
mov
cmp
inc
aad
mov
sbb
pushf
xchg
ljmp
mov
sbb
push
dec
inc
loope
mov
aad
cltd
mov
outsl
or
cmp
sub
mov
xchg
and
xchg
cmp
xor
sbb
loopne
push
clc
cmpsb
push
lcall
add
jmp
pop
mov
enter
mov
sbb
into
push
out
test
push
mov
and
cmp
jp
inc
js
xor
mov
std
and
inc
mov
aad
add
adc
aaa
cs
popf
adc
xchg
or
dec
movl
dec
push
jnp
lret
cwtl
bound
mov
std
jne
xchg
gs
add
cmc
dec
xchg
or
test
dec
and
enterw
xlat
iret
dec
mov
sbb
ljmp
push
addr16
cwtl
xchg
adc
cmpsb
bound
and
add
push
out
dec
fucomp
pop
cwtl
pop
jmp
mov
push
pop
mov
push
subl
pop
inc
cs
jmp
sti
or
mov
fstl
inc
clc
ja
cmc
mov
pop
insl
scas
mov
mov
jl
pop
lahf
xchg
push
adc
xchg
sub
mov
adc
adc
push
ret
popa
sub
sbb
orb
add
ret
addr16
out
pop
mov
and
imull
xchg
lcall
mov
xor
fdivl
jge
movsb
jmp
sti
add
faddp
or
mov
mov
fsts
push
fcmovu
adc
push
adc
cmp
cmpsb
jbe
or
push
mov
cmp
sbb
mov
aam
sti
push
addr16
add
stos
lret
lcall
ss
std
sahf
imul
pushf
xor
lahf
in
xchg
icebp
adcl
addr16
add
ss
iret
mov
add
inc
mov
sbb
orl
shl
cmp
xchg
push
dec
out
ja
repz
jg
dec
pop
add
repz
pop
adc
popa
sub
mov
pop
out
shll
adc
jbe
es
out
inc
xor
push
out
xchg
mov
add
adc
mov
mov
push
xor
es
lea
mov
fistps
lods
push
call
push
in
das
loop
mov
ret
push
xchg
sar
cmp
icebp
pop
pop
popa
xor
xor
mov
inc
jecxz
repz
and
and
hlt
push
mov
dec
mov
or
add
or
sub
jp
or
jecxz
iret
test
jl
arpl
cmp
pop
lcall
addr16
stos
ret
sahf
xor
push
popf
add
fs
ret
sbb
add
jge
adc
movsl
mov
jnp
scas
pop
pusha
sar
adc
adc
mov
inc
aaa
popa
sub
push
and
outsl
loope
lods
daa
outsb
cltd
ss
xchg
sbb
mov
jp
repnz
stc
imul
std
stos
pushfw
movsb
or
and
pop
ret
enter
jb
fwait
push
mov
jg
mov
adc
stos
clc
fnstsw
shll
imul
imul
ss
add
lock
mov
stos
xchg
sub
and
dec
and
xor
mov
jg
stc
iret
add
imul
jno
mov
jge
push
in
daa
lcall
scas
and
mov
aam
xchg
pop
push
inc
stos
sar
xchg
dec
add
dec
loope
mov
sub
outsl
push
fnsave
stos
xor
push
out
jb
cld
sti
test
dec
rcl
jge
popa
out
js
xor
and
fldt
adc
push
fists
pop
sub
jae
setne
cmp
dec
dec
ja
ss
int3
insb
push
lcall
xchg
cmp
adc
adc
adc
rcl
xchg
sub
sbb
mov
aad
push
inc
sbb
mov
pusha
mov
in
pop
inc
repz
mov
cmp
fcomps
in
dec
repnz
cmpsl
mov
sbbl
push
xchg
adc
sub
push
cmp
aaa
fstl
adc
sub
sbb
jge
rol
push
lret
clc
and
push
dec
fs
cmp
mov
xor
xchg
out
sbb
cld
adc
cmp
mov
push
jp
test
pop
mov
lea
sarb
pop
pop
push
fcompl
add
pop
xchg
rcl
or
sbb
arpl
jge
in
jno
mov
js
pop
fwait
lea
test
les
mov
ret
pop
xor
test
sbb
popa
jle
iret
adc
popf
iret
aam
pop
push
cmpsb
mov
sub
xchg
stc
int
into
xor
pop
addr16
ret
bound
cmp
jecxz
std
cmc
fbstp
add
lods
sbb
ror
std
inc
ret
sub
in
pop
rcr
sbb
lods
inc
nop
pushf
aas
orb
sti
das
lds
dec
xor
out
mov
rcrb
cmp
pushf
pop
fs
andb
loop
ret
jnp
js
pavgw
xchg
pop
daa
cli
popa
ret
adc
aam
sbb
push
lods
dec
les
sti
pop
pop
outsl
mov
hlt
dec
add
popa
or
inc
or
ss
pop
aas
adc
lcall
es
insl
add
or
mov
sbb
push
and
jmp
dec
pop
xor
pop
mov
push
stos
mov
data16
test
out
sub
popf
addb
jecxz
add
cmp
shlb
hlt
sub
insb
pop
sub
push
mov
cmpsb
dec
fdivrs
pop
shl
lahf
mov
mov
dec
stos
inc
inc
jno
xor
out
sbb
and
repnz
mov
push
rcll
call
inc
test
or
xor
roll
cmp
pop
bndstx
or
pop
scas
inc
mov
stos
cmp
mov
and
scas
fiaddl
xor
or
sbb
adc
sub
jp
xor
cmp
decb
std
fisubs
js
lcall
or
cmp
fistpll
mov
or
popa
lcall
repz
and
cmpl
mov
sub
jle
mov
cmc
xlat
cmc
add
add
jge
imul
xchg
idiv
inc
mov
call
dec
adc
imul
push
sub
fidivl
sub
xchg
mov
mov
jg
add
ljmp
or
repnz
stos
sarb
cwtl
and
mov
ds
in
das
loopne
jno
lret
lret
cmp
jl
jne
je
popf
sub
jp
icebp
cmp
lods
or
and
shll
imul
push
push
inc
dec
loop
rorb
sbb
in
xchg
jp
xor
and
mov
mov
jmp
bound
bound
and
test
sbb
sbb
mov
pop
rclb
dec
mov
imul
cmp
add
outsb
xchg
cmp
in
shll
jle
test
clc
pop
cmp
loopne
dec
cmp
jp
out
mov
gs
push
in
les
mov
test
stos
add
pusha
mov
jne
inc
sbbl
add
or
cs
sarl
cmp
test
jecxz
mov
xchg
add
pop
ss
leave
mov
mov
test
fwait
push
testl
add
in
imul
movswl
dec
je
sub
or
push
pop
test
rorl
push
adc
add
hlt
das
data16
ror
in
xchg
xor
out
es
and
popa
push
inc
lahf
and
cmp
fldl
pop
xchg
push
imul
test
mov
inc
mov
fcomps
sarb
xor
cmp
pop
inc
xor
test
icebp
ret
adc
fsubrl
test
test
out
clc
aad
cmp
arpl
addb
cmpsl
and
cmpsb
mov
mov
fwait
in
dec
insl
push
mov
mov
xchg
sbb
mov
cwtl
test
mov
pop
push
push
sbb
ja
addr16
call
xlat
cwtl
test
mov
pop
push
push
sbb
ja
addr16
call
xlat
cltd
outsl
test
mov
pop
push
push
sbb
push
cmp
xchg
fadds
mov
cwtl
sub
out
call
js
jg
nop
mov
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
leave
dec
dec
pop
jns
imul
push
dec
ds
leave
fdivrp
out
jmp
sbb
dec
dec
pop
js
imul
sub
fxch
leave
mov
cltd
mov
mov
jns
imul
sub
fldenv
ficomps
lret
loopne
cltd
fadd
mov
xor
leave
sub
ret
cmp
lret
mov
sbb
jl
sbb
fimuls
sub
mov
pop
jle
es
sti
jbe
mov
push
out
fcoml
dec
dec
jbe
or
sbb
outsb
pop
rcr
xor
add
push
in
aaa
sahf
pop
dec
fstpl
test
push
fldenv
clc
adc
scas
jns
fisubl
push
mov
mov
icebp
sidtl
cmp
sub
test
sahf
loope
cmp
push
xor
or
xchg
jnp
xchg
rcrl
es
fs
in
fwait
mov
mov
dec
pop
jns
imul
sub
fxch
leave
fdivrp
out
jmp
sahf
mov
and
pop
pop
bound
pusha
dec
outsb
mov
jnp
xchg
xchg
in
aam
push
dec
or
and
inc
insl
jp
pop
push
mov
mov
jmp
pop
addr16
pop
push
or
cmp
sub
fxch
leave
fdivrp
out
jmp
sahf
mov
dec
dec
pop
jns
imul
sub
fxch
leave
fdivrp
out
jmp
sahf
mov
dec
dec
pop
hlt
fdivrl
cmp
jge
subb
xchg
cmp
stc
loopne
sarb
push
cmpl
call
lock
jmp
adc
stos
popf
sub
lock
jmp
inc
cs
dec
push
je
cmpsb
adc
sub
cmp
int
pop
scas
jae
inc
insl
adc
adc
sbb
test
add
gs
aad
fcompl
push
dec
je
jno
test
aas
jo
pop
stc
imul
jge
or
cltd
add
adc
ret
sti
cmp
scas
adc
repz
out
xor
push
test
push
push
inc
insb
and
sub
or
or
int
xchg
addr16
jge
add
dec
xor
jl
adc
push
add
adc
mov
xor
and
cmp
ror
in
outsl
sbb
mov
testb
mov
imul
mov
pop
pop
data16
push
lds
in
sbbl
lods
adc
mov
inc
mov
inc
jns
lcall
inc
hlt
mov
mov
cwtl
jl
lahf
decb
dec
or
popf
cmp
shrl
push
xchg
test
sbb
decl
mov
sahf
test
sub
jle
jne
push
mov
add
dec
cmpb
mov
ret
into
xor
lods
loopne
aas
dec
push
jnp
adc
or
or
dec
outsb
add
xchg
jecxz
push
mov
rcl
imul
pushf
test
and
in
xor
ret
mov
idivb
loope
sahf
push
test
subl
and
cmp
test
lret
mov
adc
push
add
xchg
pop
orl
sub
cmp
outsb
mov
xchg
dec
xchg
adc
fidivl
adc
push
mov
mov
jle
adc
push
das
or
cmpsl
jmp
nop
xchg
cmc
jg
adc
inc
inc
xlat
cmp
jmp
ljmp
cmp
cwtl
bound
adc
xchg
xorl
std
jge
iret
cwtl
mov
imul
push
jle
out
pusha
fcomi
ret
aaa
rorl
or
jl
jmp
and
movsl
and
imul
mov
jmp
aas
push
movsb
mov
jb
inc
mov
or
or
adc
pop
int3
mov
aas
mov
pop
cwtl
movsl
or
imul
add
pop
xor
int
sbb
in
lahf
or
mov
mov
mov
lods
adc
mov
pop
fmulp
addr16
repnz
and
xchg
add
cmpsl
xor
sbbl
pop
pop
push
lcall
push
push
pop
mov
insb
push
repz
mov
add
push
pop
andl
or
mov
sbb
sub
jne
out
mov
dec
push
ret
xor
repz
icebp
cmp
push
mov
leave
xchg
mov
jp
mov
mov
test
sahf
loope
in
push
mov
insl
cmp
leave
add
push
cwtl
jae
gs
jge
daa
mov
xchg
fldcw
mov
orb
pop
fidivs
dec
dec
leave
push
testb
dec
xchg
jo
xor
jb
adc
push
sahf
xor
add
jge
mov
inc
jecxz
mov
or
dec
vmaskmovdqu
leave
idivl
decl
push
pop
dec
ljmp
mov
stos
arpl
call
dec
mull
inc
shlb
inc
jnp
mov
mov
loopne
jno
pop
xchg
add
cwtl
test
xchg
ja
pop
cmp
dec
test
jno
fldenv
mov
or
jns
inc
push
data16
xor
mov
add
shlb
loopne
inc
lock
cmp
and
cmp
ss
sub
mov
iret
xlat
and
cmp
inc
ljmp
pop
shrb
sbb
je
dec
jnp
cmc
cmpl
mov
pop
ret
mov
xchg
push
xchg
pop
inc
jmp
sub
aad
jmp
fildll
and
int
rcrl
incl
jbe
aam
and
jle
dec
mov
or
mov
xor
mov
test
bound
adcl
roll
pop
movsb
stc
cmp
sbb
add
pop
inc
cld
mov
mov
push
push
pop
out
mov
jne
push
sbb
aam
mov
xlat
aaa
xchg
je
test
stos
data16
popf
add
sbb
push
das
stos
push
sub
bound
cmp
sbb
jb
fs
aam
lahf
imul
mov
xchg
jp
ret
push
outsb
xorb
sbb
mov
iret
out
movsl
sub
mov
mov
ffree
mov
xchg
mov
inc
fwait
mov
mov
mov
into
adc
mov
mov
mov
xchg
loope
mov
dec
xlat
jbe
into
dec
shll
shrl
cmp
add
lods
out
jne
shll
cwtl
insb
cmpsl
fdiv
ficompl
or
push
push
imul
lds
cmp
shrb
stos
inc
jp
hlt
jbe
fs
dec
jmp
movsl
cmp
push
shll
dec
sarl
cmp
cmp
gs
push
mov
btc
cmp
push
mov
sbb
jecxz
jo
dec
pop
cmp
mov
clc
mov
push
jnp
clc
or
mov
xchg
sbb
xchg
push
sahf
cld
lret
push
rcr
std
cmp
insl
sub
mov
adc
add
cmp
sub
lcall
shll
mov
push
jmp
sahf
mov
ret
inc
adc
fisttpl
mov
into
insl
lcall
or
lret
stos
cmpb
add
fwait
mov
pop
jnp
adc
cwtl
sbb
mov
into
xchg
hlt
dec
fdivrs
push
xlat
insb
or
pop
icebp
pop
mov
fbld
bound
push
pop
gs
sbb
sbb
data16
or
add
inc
leave
jl
xchg
xchg
push
addr16
push
pop
mov
pop
push
cwtl
sub
pusha
insl
verr
dec
dec
jnp
fisubs
daa
and
xor
jmp
mov
inc
fldt
jmp
das
mov
fimuls
mov
rorl
and
jo
movsb
jge
mov
xchg
xchg
or
std
cltd
outsl
shll
and
stos
fstpt
stos
scas
popa
out
hlt
fsubl
mov
std
into
loopne
and
jne
add
cli
adc
lahf
pop
sbb
lods
loopne
jl
arpl
js
ret
out
cmp
inc
or
pop
in
pop
jns
pop
or
loop
push
pop
rorb
frstor
sub
shrl
aad
je
or
imul
push
ljmp
in
and
inc
stc
js
add
ds
xchg
ja
imul
test
testb
pop
and
insb
jl
shrl
aas
mov
aas
cmpsb
add
jbe
test
push
xor
ds
lcall
cmp
sbb
lret
icebp
and
jmp
xor
sbb
and
imul
and
sbb
sbb
xlat
shll
xchg
adc
aas
dec
jns
addr16
add
push
fimull
or
jecxz
aas
aad
xchg
and
mov
repnz
cltd
push
mov
xor
sbb
addb
movsb
test
sbb
xor
shll
stc
xchg
fsubl
insl
mov
sbbl
sahf
push
lahf
lods
mov
std
cmpsb
inc
popl
xchg
cli
ds
mov
iret
jp
cwtl
lahf
sti
sbb
mov
pop
aam
jmp
fsubs
sti
mov
loop
cwtl
movsl
push
in
rcrb
pop
movsb
imul
into
cmp
lea
prefetch
add
or
cmp
js
or
jne
push
mov
push
jge
fcoml
lods
cmp
cmpsl
mov
enter
mov
sahf
loop
pop
mov
cmpsb
sub
sbb
ja
pushf
lcall
popa
add
fs
sbb
bound
push
jb
cmp
icebp
fnstsw
sub
xor
sub
sahf
sbb
jg
dec
ss
mov
pop
push
test
les
mov
inc
or
and
aam
sub
sbb
in
notl
inc
and
push
jae
je
lcall
ljmp
mov
jmp
enter
lods
mov
test
jo
pop
jmp
mov
push
stos
lock
imul
mov
mov
cmp
xchg
lret
jne
fdivl
cmpsb
fidivs
dec
xchg
and
iret
adc
sbb
pop
stc
sbb
mov
push
jae
cmpsl
mov
mov
movsb
xchg
mov
iret
cwtl
xchg
sti
fadds
icebp
inc
push
mov
daa
inc
dec
inc
mov
ja
out
test
in
fildl
inc
subb
add
lret
xchg
or
push
inc
lret
in
pusha
mov
push
outsb
sbb
push
scas
xchg
into
or
loop
add
cmp
test
call
cmpsb
loopne
addr16
pop
cmp
dec
adc
sub
cltd
cwtl
ljmp
and
movsl
cmp
mov
or
shll
jmp
sbb
mov
vmovaps
push
push
push
pop
fidivl
fwait
aad
cli
jecxz
jl
lea
push
mov
inc
mov
dec
popf
inc
adc
mov
xlat
pusha
push
lret
adc
out
inc
and
and
aas
loop
adc
test
imul
mov
or
jp
lods
mov
or
and
inc
mov
push
pop
jge
pop
fs
inc
ja
dec
push
dec
bound
sbb
add
xor
pusha
mov
add
jb
mov
stos
test
jne
sbb
cmc
sub
stos
out
in
mov
adc
xchg
es
ja
shlb
jg
cmc
icebp
sbb
mov
inc
xchg
mov
clc
cwtl
sbb
or
ss
pop
sbb
lret
pop
fistl
lret
inc
mov
scas
mov
mov
lds
adc
pop
insl
sti
xor
je
mov
aam
push
jno
arpl
add
repz
xor
mov
and
divl
int
int
dec
or
push
mov
pusha
sarb
pop
enter
bound
imul
mov
jp
mov
mov
push
stos
mov
adc
pusha
mov
add
jnp
lahf
test
push
das
inc
insb
and
nop
sbb
inc
xchg
inc
push
pmulhw
push
xchg
ss
stc
cmp
out
inc
adc
adcl
xchg
inc
mov
cmp
mov
push
jne
sub
fs
and
jg
sti
popa
mov
xchg
inc
mov
xchg
mov
push
push
sti
sar
push
loopne
sahf
sbb
sbb
inc
cmp
mov
popa
adc
repnz
leave
js
cmp
mov
sub
pop
adc
dec
cs
nop
mov
xchg
sti
clc
mov
xor
repnz
into
mov
cltd
jne
test
outsl
into
std
mov
test
lahf
adc
mov
shlb
dec
fsubrs
in
lds
cli
mov
mov
xchg
vmread
sti
aas
xchg
in
mov
pop
or
leave
jge
mov
mov
mov
out
mov
in
out
cmc
or
mov
sub
xchg
movsb
xchg
sti
in
pop
xor
mov
xor
aas
arpl
adc
inc
adc
hlt
cmp
xor
inc
cli
das
sub
cltd
or
mov
fcmovbe
mov
or
lods
add
sbb
pop
shlb
inc
aam
pop
ds
lcall
pushf
lea
or
adc
add
or
push
dec
stc
das
mov
mov
push
jbe
ret
lock
mov
push
hlt
jg
aas
loop
or
or
orl
mov
push
xchg
sub
testl
xor
call
push
push
ficompl
mov
cld
xorb
cmp
test
addr16
mov
inc
out
sub
and
xor
jp
inc
insb
xchg
adcb
popf
pop
stc
xlat
xlat
dec
push
jbe
jne
movsl
addr16
jbe
and
push
mov
je
sbbb
imul
and
push
shrb
push
dec
push
inc
adc
push
or
stos
push
mov
jno
push
call
push
lds
mov
in
add
test
fstps
push
rclb
stc
jp
push
push
xor
push
lret
or
orb
add
jl
cwtl
mov
outsl
inc
in
add
shrb
push
cmp
sub
data16
xchg
cmp
jle
insb
xor
xor
push
push
xor
pop
pop
mov
mov
loopne
loopne
dec
movsl
xor
push
xchg
xchg
push
out
fchs
mov
out
fdiv
fs
int3
in
int3
lcall
cwtl
or
cmp
and
jnp
and
mov
cmpsb
jno
mov
dec
jmp
fcoml
iret
jg
ljmp
pop
jle
sbb
test
sbb
or
into
hlt
lock
sar
in
mov
sbb
in
mov
mov
sahf
scas
pop
push
bound
add
aad
loopne
mov
push
fidivl
and
sahf
dec
sbb
push
scas
pop
add
not
dec
addps
cmp
xchg
jp
enter
inc
mov
or
mov
pop
jns
leave
enter
leave
add
push
pop
or
pop
in
adc
gs
sbb
xlat
push
sub
fdivs
push
stos
cmp
pop
jge
out
mov
arpl
imul
orl
pop
jns,pt
or
shll
and
clc
pusha
sbb
int3
dec
testb
and
daa
xor
cmp
push
pop
lods
mov
and
cld
xchg
movhps
pop
xchg
or
inc
cmp
cmp
out
loopne
aas
pop
xor
out
and
sbb
xchg
ja
aam
cmp
xchg
repnz
ret
enter
loop
add
mov
sti
xor
mov
ljmp
in
pop
inc
or
imul
xor
test
test
push
das
imul
loope
lds
inc
subb
testl
push
xchg
mov
cs
in
push
repz
mov
clc
cmp
mov
jae
push
lret
fisttpll
push
xchg
in
mov
daa
adc
aas
cmp
js
inc
daa
repz
movsb
mov
repnz
jae
mov
subl
outsb
dec
aam
mov
sahf
add
pop
repnz
cwtl
sub
popf
sbb
mov
out
pop
std
jg
sub
pop
mov
bound
xorl
inc
sti
stc
in
pop
out
xor
inc
aam
int3
or
fadds
rcll
push
cmp
xor
sbb
pop
in
xchg
mov
mov
pushf
push
adc
pop
pop
jl
addr16
std
int
xchg
jo
popa
shrl
cmp
cmpsb
xor
add
push
dec
imul
add
ficompl
push
test
jp
adc
jmp
or
cwtl
leave
stos
inc
lahf
lcall
sub
jge
out
shr
out
cmp
push
adc
add
xor
in
in
mov
js
sbb
es
inc
enter
lahf
mov
pop
int3
jp
in
scas
jb
push
pop
lods
mov
xchg
adc
jnp
popa
sub
lret
call
repz
inc
push
in
jmp
mov
ds
and
jno
shrb
mov
xchg
scas
cltd
push
iret
les
into
mov
cmp
xor
push
imul
fwait
clc
push
mov
ljmp
mov
cmp
push
ds
aam
sub
cwtl
rcrb
in
jo
mov
inc
push
sub
sbb
test
cmp
xchg
cltd
xlat
add
enter
add
mov
and
not
test
sarl
mov
negl
fldt
movd
xchg
loope
push
popf
mov
in
inc
xor
sub
sub
add
mov
xlat
subb
push
out
mov
scas
das
inc
xchg
cmp
sbb
cs
lret
jb
mov
test
cmp
dec
add
jns
and
lahf
and
lods
jo
push
mov
iret
ljmp
in
aam
fmulp
les
repz
sbb
pop
mov
lods
hlt
pusha
aaa
fildl
subb
and
das
call
xchg
inc
dec
add
aam
fucomip
cmpsb
imul
and
cmp
lahf
mov
repnz
or
imul
mov
out
or
cmp
cmp
mov
ret
jecxz
jns
mov
cmp
mov
fildl
mov
fdivp
dec
popa
xor
jp
dec
add
pop
pop
stos
add
jae
jo
int3
cli
frstor
xchg
dec
sbb
je
rcr
and
or
iret
inc
inc
jmp
int3
jg
out
sbb
rorl
lret
lds
ja
ja
mov
inc
fprem1
xchg
mov
xchg
dec
cmp
ret
pop
pop
xchg
push
mov
dec
inc
loope
sbb
sbb
cmpsb
add
popf
jecxz
and
cmp
lock
add
loopne
out
btl
xor
mov
iret
xchg
jle
mov
xor
fwait
mov
sub
mov
lret
push
cwtl
lret
mov
mov
adc
xchg
mov
aad
sbb
fmull
mov
fucom
fdivrs
in
push
jge
sahf
mov
jno
mov
inc
xorl
filds
js
aad
insb
jns
xor
fs
ja
add
mov
stos
push
dec
arpl
es
clc
out
fisubrs
nop
mov
lods
clc
mov
outsl
lret
cwtl
mov
pop
cmp
pop
faddl
sub
jmp
sub
cmp
jp
dec
js
jnp
adc
hlt
icebp
mov
mov
jle
jnp
sub
mov
stos
dec
je
push
ficompl
call
pop
pop
sti
add
nop
jl
lret
popf
dec
or
push
xlat
inc
cmp
lret
insl
sub
inc
stc
jns
fidivrs
pop
cltd
movsb
aam
scas
orl
sbb
pushf
sub
popa
data16
scas
add
out
sub
scas
push
mov
cmc
test
cmc
in
push
push
xor
das
jnp
repz
test
xor
inc
aad
xor
aad
inc
lret
pop
push
scas
iret
aad
das
cmp
xchg
add
lods
lock
or
movsb
popf
roll
ret
add
movl
fcompl
scas
mov
or
sti
shll
inc
cmc
jmp
push
cmp
mov
imul
enter
sub
cmp
jmp
jno
inc
mov
shrl
jno
push
insb
xchg
mov
sbb
test
fistpl
jg
pop
sub
loopne
xchg
cwtl
inc
mov
nop
xchg
ja
push
leave
adc
adc
jecxz
leave
das
out
sbb
or
adc
xlat
adc
rcrl
je
lret
pop
xor
das
lcall
push
add
fists
setge
add
daa
xor
inc
cli
xor
cli
testb
jno
fwait
outsl
cmpsl
and
jae
orl
fs
dec
xchg
cmpsl
push
icebp
rcr
aam
ds
test
lahf
cmpsb
stc
fwait
movsb
mov
xor
cltd
fs
jge
ljmp
shrb
lds
pop
ret
and
or
scas
fldcw
adc
sbb
out
jle
or
scas
jae
into
pop
scas
mov
pop
sub
xor
das
into
in
fs
xchg
pusha
pop
cli
loop
jno
and
dec
fnsave
dec
mov
lret
jae
sub
jno
and
mov
ss
ljmp
mov
lds
xor
xor
mov
dec
push
into
fldcw
mov
add
in
xor
std
lods
lahf
sbb
stos
cmp
pop
inc
mov
jmp
movsb
out
jno
enter
jne
sub
sbb
xchg
jbe
xor
fsubrs
sbb
mov
push
sbb
and
xchg
movb
insb
jnp
or
pop
sbb
cmp
xchg
and
pop
xchg
sti
addr16
pushf
pop
mov
push
in
aaa
aaa
xor
push
aaa
imul
inc
loope
push
cmpsl
lcall
mov
fbld
cld
outsl
lock
in
shll
push
dec
scas
push
test
bound
outsb
imul
sub
fxch
leave
fdivrp
out
jmp
sahf
mov
dec
dec
pop
jns
imul
sub
fxch
leave
fdivrp
out
jmp
sahf
mov
dec
dec
fidivrs
imul
sub
fdivrp
out
jmp
sahf
mov
dec
dec
pop
js
imul
sub
fxch
leave
je
out
jmp
popa
inc
push
push
inc
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
push
hlt
add
jl
add
mov
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
pop
cmc
add
or
add
add
add
cld
hlt
add
hlt
hlt
add
in
hlt
add
in
add
fdiv
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
inc
cmc
add
dec
cmc
add
pusha
cmc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
fdiv
add
clc
cmc
add
and
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
je
add
jl
add
test
add
mov
add
xchg
testb
pushf
testb
movsb
testb
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
shl
add
fdiv
add
call
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
mov
add
fdiv
add
add
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
jg
add
insb
clc
add
fs
add
pop
clc
add
push
clc
add
dec
clc
add
inc
clc
add
cmp
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cwtl
clc
add
mov
clc
add
sar
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
cmp
add
pop
stc
add
cmp
add
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
aam
add
fdivr
add
in
add
in
stc
add
hlt
stc
add
cld
stc
add
add
add
pop
cli
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
xor
add
cmp
add
dec
cli
add
pop
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
