ror
mov
or
and
mov
mov
push
lea
add
mov
sub
test
jmp
sub
dec
or
sub
mov
jmp
add
sub
test
jne
mov
mov
mov
sub
mov
movzbl
add
jmp
add
push
dec
dec
sub
mov
and
jmp
fiaddl
call
cmpl
jne
cmpb
jne
nop
nop
ror
xor
dec
mov
xor
mov
nop
jmp
sub
mov
and
mov
or
inc
mov
push
push
mov
or
and
mov
mov
xor
mov
jmp
push
push
push
jmp
call
nop
subl
push
jmp
push
jmp
push
push
pop
nop
subl
push
push
jmp
push
push
call
nop
call
nop
addl
call
jmp
sub
cmpl
lea
je
push
push
or
xor
xor
shr
mov
jmp
sub
push
push
or
dec
and
and
mov
mov
test
push
mov
jmp
sub
inc
mov
and
mov
sub
mov
push
mov
movl
mov
push
jmp
cmp
push
jae
call
push
jmp
call
subl
push
jmp
push
push
dec
pop
addl
jmp
out
aam
mov
mov
movl
movl
call
lea
jmp
call
push
jmp
dec
addl
call
mov
mov
mov
xor
jmp
es
and
cmpw
je
jmp
lea
and
mov
sub
cmpw
jmp
call
popa
jmp
mov
ret
add
add
add
mov
add
mov
lea
jmp
mov
add
jne
jmp
shr
lea
lea
cltd
and
add
sar
jmp
mov
mov
jmp
push
lea
push
jmp
add
add
add
sub
inc
add
mov
mov
sub
test
jne
push
jmp
call
push
jmp
push
call
inc
subl
call
xor
and
shl
add
add
mov
push
jmp
mov
add
add
mov
sub
xor
xor
xor
shr
mov
add
add
xor
cmp
jmp
shlb
push
mov
mov
and
sub
mov
sub
test
jne
jmp
add
add
in
sub
dec
sub
mov
mov
sub
mov
push
jmp
ret
mov
jmp
mov
mov
jle
jmp
mov
xor
mov
jmp
test
mov
mov
nop
nop
nop
nop
nop
mov
movl
jle
add
jmp
mov
mov
shr
or
and
mov
mov
jmp
mov
mov
rol
mov
xor
mov
jmp
jmp
jne
dec
xor
and
add
mov
mov
xor
and
cmp
sete
mov
ret
add
add
add
add
leave
test
je
movsbl
jmp
mov
or
mov
add
mov
xor
sub
inc
mov
mov
mov
mov
jmp
push
jmp
add
add
add
mov
add
xor
rol
mov
jmp
movb
call
jmp
pushl
call
pushl
ret
xor
mov
xor
sub
mov
jmp
mov
lea
add
and
mov
shr
and
jmp
xor
or
inc
mov
shr
and
jmp
add
jmp
add
nop
nop
nop
nop
sub
or
dec
mov
xor
mov
test
je
mov
add
cmpl
je
push
jmp
movl
mov
jne
xor
ret
test
jne
push
jmp
call
jmp
leave
call
pop
call
call
xorl
jmp
lea
jmp
add
add
add
add
jmp
add
add
push
shl
dec
ror
mov
jmp
jne
and
dec
or
dec
mov
jmp
push
nop
jmp
pushl
call
add
pusha
mov
jmp
add
add
push
mov
mov
mov
jmp
mov
and
shl
or
and
and
mov
movzwl
movzwl
add
mov
or
mov
lea
sub
jmp
addl
jmp
jns
jmp
add
add
add
pop
sti
incl
adc
push
call
shr
sub
sub
mov
cmp
je
or
dec
sub
ror
or
mov
test
jmp
sbb
sub
add
nop
movzwl
xor
add
dec
mov
and
cmp
jne
and
jmp
jne
mov
xor
sub
mov
xor
mov
mov
sub
mov
lea
shl
mov
add
test
je
jmp
test
jle
shl
mov
shr
shr
xor
mov
xor
mov
test
jle
jmp
add
test
jne
mov
mov
pop
ret
add
add
add
test
add
jmp
add
add
add
and
js
inc
and
and
inc
and
pop
jmp
push
push
jmp
push
jmp
call
inc
inc
dec
addl
call
test
je
add
jmp
push
nop
nop
nop
nop
nop
push
lea
xor
or
mov
jmp
add
test
je
or
add
mov
sub
jmp
add
add
ss
or
or
add
push
jmp
int3
jmp
call
pop
push
addl
push
jmp
addl
jmp
push
jmp
addl
call
ret
add
add
add
sbb
add
ret
add
add
add
test
jmp
xor
jmp
add
add
les
pop
add
add
mov
call
jmp
push
mov
mov
jmp
movzbl
add
mov
lea
xor
mov
shr
and
lea
xor
dec
or
and
inc
mov
jmp
pop
ret
add
add
add
rol
add
jmp
add
add
add
rorb
and
mov
or
add
and
shr
or
mov
test
jne
add
ret
jmp
pop
popf
inc
rol
add
xor
mov
rep
movzwl
jmp
test
rol
mov
shl
mov
sub
sub
sub
mov
jmp
xor
shr
mov
mov
sub
mov
mov
test
jmp
test
mov
jne
movzbl
add
and
mov
rol
add
inc
mov
mov
jmp
add
ror
mov
or
mov
add
jmp
sub
jne
add
cmpl
jne
pop
pop
pop
jmp
enter
mov
push
jmp
mov
lea
push
jmp
mov
dec
incl
add
test
incl
add
movb
movb
movb
call
test
jne
jmp
mov
test
jne
cmp
je
add
cmp
jl
jmp
mov
pop
ret
pop
mov
pop
ret
mov
ret
add
add
add
adc
add
mov
mov
mov
or
mov
add
test
jmp
mov
mov
jle
sub
mov
ror
xor
rol
mov
add
jmp
add
ret
add
xor
rol
rol
dec
mov
push
jmp
call
jmp
call
xorl
call
jmp
push
jmp
dec
pop
pop
ret
xorl
call
add
ret
add
add
add
nop
nop
nop
nop
xor
mov
shr
and
add
test
mov
je
and
dec
and
dec
mov
sub
jmp
pop
xor
jmp
sub
add
cmp
mov
mov
jl
jmp
jne
add
cmpl
jne
pop
pop
pop
mov
jmp
add
sub
jne
test
mov
jle
shl
xor
add
shl
xor
mov
lea
push
jmp
mov
pushf
popa
add
add
and
or
and
mov
add
add
mov
jmp
sbb
xchg
test
jne
jmp
xchg
mov
or
xor
mov
pop
ret
jmp
mov
jp
out
and
and
rol
mov
mov
mov
jmp
or
mov
ror
mov
pop
or
and
mov
xor
add
sub
jmp
jl
xor
nop
nop
nop
push
push
jmp
leave
addl
push
push
call
jmp
movzbl
add
mov
lea
jmp
pusha
inc
ss
mov
shr
mov
movzwl
xor
xor
add
dec
shr
mov
mov
pop
add
pop
rol
rol
sub
mov
rol
mov
jmp
popa
dec
lahf
jne
pop
pop
pop
mov
mov
mov
sub
mov
pop
ret
add
add
add
enter
call
add
jmp
imull
add
add
mov
push
add
shr
and
mov
call
add
and
mov
call
jmp
or
add
ret
xorl
mov
call
jmp
xor
test
add
xor
movl
dec
or
xor
shl
sub
mov
sub
test
jmp
xchg
jl
push
jmp
ret
call
subl
push
jmp
call
pop
call
dec
subl
push
call
sub
shr
mov
xor
mov
call
jmp
mov
jmp
call
jmp
jmp
inc
xorl
jmp
imul
add
add
mov
add
sub
rol
mov
or
mov
call
movl
lea
call
mov
or
or
dec
inc
mov
add
add
xor
mov
jmp
add
or
call
push
jmp
call
call
leave
push
nop
leave
push
dec
xorl
mov
call
push
jmp
call
call
dec
nop
xorl
nop
nop
nop
nop
nop
mov
call
add
mov
jmp
pop
cmp
movzbl
jmp
out
ds
mov
mov
mov
cmp
jne
mov
add
pop
jmp
outsl
std
xchg
call
jmp
lds
bound
pop
add
and
mov
shr
and
jmp
fsubp
fisttpl
adc
add
add
pop
and
shr
or
mov
pop
ret
add
add
add
rolb
lea
jmp
push
jbe
push
jmp
call
int3
call
call
call
addl
push
jmp
push
push
subl
jmp
mov
incl
cmpsl
cltd
push
jmp
inc
call
addl
call
test
je
add
ret
nop
nop
nop
nop
nop
pop
pop
mov
pop
and
and
or
mov
pop
ret
add
add
add
test
add
add
cld
sbb
adc
add
nop
nop
add
jmp
movb
add
jmp
movzbl
inc
sub
mov
and
nop
nop
nop
nop
nop
add
add
shr
mov
mov
je
test
nop
nop
nop
nop
nop
je
rol
sub
add
inc
mov
sub
nop
nop
nop
nop
nop
add
sub
nop
nop
nop
nop
nop
mov
mov
jne
or
mov
mov
mov
nop
nop
nop
nop
nop
movl
nop
nop
nop
nop
nop
jmp
movl
mov
movl
jmp
lea
call
cmpl
nop
nop
nop
nop
nop
jne
cmp
jne
call
test
mov
je
add
or
mov
sub
nop
nop
nop
nop
nop
add
sub
mov
mov
jne
nop
nop
nop
nop
nop
mov
nop
nop
nop
nop
nop
jmp
sub
jmp
sub
shl
sub
sub
add
or
mov
movzbl
shl
add
nop
nop
nop
nop
nop
add
nop
nop
nop
nop
nop
lea
or
xor
mov
and
mov
nop
nop
nop
nop
nop
mov
call
nop
nop
nop
nop
nop
cmp
nop
nop
nop
nop
nop
jb
add
cmp
jb
add
cmp
jae
add
nop
nop
nop
nop
nop
test
nop
nop
nop
nop
nop
mov
je
lea
mov
rol
mov
sub
mov
nop
nop
nop
nop
nop
mov
add
nop
nop
nop
nop
nop
sub
jne
mov
mov
xor
ror
sub
mov
nop
nop
nop
nop
nop
xor
sub
mov
mov
dec
add
mov
movl
jmp
mov
nop
nop
nop
nop
nop
mov
add
add
mov
movl
nop
nop
nop
nop
nop
mov
cmpl
je
pop
and
and
mov
nop
nop
nop
nop
nop
sub
pop
pop
or
or
mov
and
rol
mov
pop
ret
push
popa
add
inc
popa
add
es
add
xor
add
add
add
pusha
add
out
pusha
add
add
add
add
add
pusha
add
push
popa
add
inc
popa
add
es
add
xor
add
add
add
pusha
add
out
pusha
add
add
add
add
add
pusha
add
add
add
add
inc
insb
outsl
jae
inc
jb
jbe
jb
or
dec
jo
outsb
inc
jb
jbe
jb
add
add
push
popa
je
push
outsb
popa
insl
gs
js
outsb
jae
outsl
outsb
inc
add
imul
push
gs
outsl
jbe
inc
jb
jae
add
add
je
inc
imul
inc
outsl
insl
jo
outsb
outsb
je
add
push
add
gs
je
inc
imul
js
je
jb
arpl
jae
mov
je
push
add
filds
inc
gs
imul
je
adc
add
add
add
add
xor
add
add
add
leave
pop
mov
add
add
sbb
add
add
add
xor
cmp
push
ds
in
mov
icebp
aas
add
cwtl
xor
cmp
or
cmp
xor
dec
xor
xor
xor
cmp
push
xor
xor
xor
cmp
cmp
out
xor
fidivl
cmp
xor
xor
cmp
add
add
add
xor
mov
xor
push
xor
add
add
add
add
and
scas
push
nop
dec
icebp
icebp
mov
fstpt
or
cltd
and
or
fidivs
mov
pop
jge
cmp
cld
xchg
cmc
inc
cmp
or
scas
xor
lcall
adc
negb
dec
adc
inc
inc
data16
xor
mulb
xchg
popf
loope
pop
fidivl
jb
dec
sub
jle
cltd
aad
xorb
addr16
mov
fmull
dec
popa
ljmp
popa
int
push
popf
pushf
push
jb
out
lock
ja
xlat
call
leave
adc
xor
hlt
aad
lahf
aam
pop
jle
iret
xor
hlt
int3
iret
rcll
jne
fstps
sub
xchg
push
add
popa
lea
cmp
sbbb
jo
fisubl
mov
imul
push
das
addr16
rclb
jbe
push
mov
mov
push
inc
rcr
sub
or
lds
cmp
jbe
rol
leave
int
aam
push
and
mov
push
adc
rorl
das
icebp
adc
fwait
loope
jle
test
cmpsl
xchg
mov
mov
rcll
cmp
rcr
insb
mov
xor
movsl
loop
fwait
mov
cmp
inc
mov
js
arpl
insl
ds
loopne
adc
cmp
insl
push
jecxz
sub
ret
inc
pop
test
adc
sbb
popa
leave
vcvttsd2si
repz
mov
mov
mov
js
dec
sarb
inc
inc
sub
cmpsl
push
xchg
xchg
stos
pop
push
cmc
lret
lahf
mov
dec
push
cltd
int
or
cmpsb
push
xor
lret
mov
add
add
lods
iret
aad
lret
fcomps
daa
pop
inc
jl
sar
mov
cmpsb
xchg
dec
sub
pusha
fidivs
jmp
lahf
in
lahf
adc
dec
shll
add
das
mov
jae
inc
inc
mov
iret
shll
gs
sub
pop
lods
mov
leave
shrb
or
fistpl
mov
adc
push
shl
jno
dec
js
xchg
sub
dec
aaa
mov
cmc
filds
movsl
idivb
imul
adc
outsb
cmp
hlt
pop
bound
mul
xchg
xor
ret
mov
xor
out
jne
add
sahf
push
adc
enter
sub
mov
int
sahf
fiadds
lcall
push
pop
mov
sub
mov
dec
xor
pusha
cmp
fiadds
cwtl
inc
mov
sub
das
jae
push
jle
sbb
add
inc
and
sub
mov
push
fdivrl
xchg
xor
movsb
nop
aad
push
cld
xorb
pop
imul
and
jge
ljmp
mov
cli
mov
jne
fcoml
pop
inc
pop
andl
add
lods
sbb
imull
mov
push
mov
pop
or
pop
fsubr
ja
jmp
imul
or
filds
mov
aad
movsb
mov
sub
adc
aam
adc
sbb
pusha
lret
pop
das
inc
push
sub
test
int3
or
dec
addb
aad
mov
and
cmp
test
out
mov
test
adc
mov
in
data16
repz
mov
sub
push
add
nop
or
push
sbb
aaa
ds
push
jb
repnz
int3
or
jp
in
push
xchg
adc
push
add
mov
cmp
fistpll
pop
inc
fnstsw
cmpsb
popa
sbb
js
dec
ja
sbb
push
push
inc
les
pavgw
add
pushl
mov
mov
and
add
std
lea
imul
mov
aas
clc
repnz
lods
rol
add
testb
mov
dec
xor
into
std
lret
out
gs
les
fisubrs
ss
mov
test
ss
insb
fidivrl
add
call
xchg
jecxz
rcr
idivl
pop
mov
cwtl
fs
adc
xchg
mov
mov
push
jmp
sbb
or
sub
insl
insl
insb
jns
stos
addr16
daa
out
xor
ja
jle
push
insb
dec
rcll
mov
mov
xor
insl
imul
and
mov
outsb
aas
mov
dec
test
fidivs
pcmpgtd
or
dec
aaa
inc
jl
cmc
pop
repnz
sub
popa
call
sbb
popf
stc
sub
push
lds
jne
loopne
lret
sahf
rcpps
idivl
pop
xchg
in
movsl
insl
sbb
stos
add
xor
push
sub
lahf
arpl
mov
cmp
pop
sub
test
push
aas
add
xor
loope
xor
ja
lcall
loope
stc
add
mov
xchg
ret
jns
jo
cmpb
