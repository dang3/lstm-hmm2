ljmp
sub
add
das
inc
les
mov
cmc
or
inc
mov
mov
pop
push
jg
jno
pushl
push
pop
mov
iret
fiadds
add
xchg
sub
data16
sub
sub
sub
std
je
lcall
out
adc
push
adc
jbe
jmp
sarb
add
loope
mov
xchg
push
lret
sub
lcall
sbb
xor
not
pop
push
push
inc
pop
push
push
push
push
xor
mov
jle
xor
pop
adc
test
movsl
jmp
aam
call
mov
mov
imul
cs
cmp
mov
add
ds
jmp
enter
mov
or
decl
pop
xor
sbb
fldenv
pop
jp
fs
pop
inc
call
mul
test
hlt
lahf
outsb
xchg
js
xchg
in
inc
idivb
sti
lcall
jmp
and
dec
rorb
sbb
cwtl
jae
test
sbb
fs
pop
push
pop
inc
jmp
shr
shl
pop
xor
push
push
push
call
es
lock
mov
mov
xchg
mov
or
shll
cmp
and
fsubl
cltd
loopne
cmp
nopl
idiv
adc
sahf
add
ret
ret
test
incl
add
test
add
insb
inc
jo
dec
testl
jmp
adc
sbb
xlat
sbb
xor
inc
and
push
push
push
push
push
xchg
mov
aas
sub
cmp
test
sbb
jmp
adc
cmp
inc
ss
test
jmp
cmp
mov
sbb
inc
cmp
jo
ficompl
jmp
adc
jl
xor
jmp
sbb
add
push
rol
pop
mov
decl
negb
pop
and
ret
add
and
xor
xchg
cltd
loope
push
push
push
call
outsl
cmp
mov
call
mov
add
jo
and
inc
ror
pop
lods
fsubp
jne
outsl
ljmp
ljmp
push
inc
xor
mov
fstl
jmp
sbb
push
jmp
cmpsl
jmp
push
jmp
xchg
push
or
jmp
aas
jmp
mov
pop
push
call
call
cmp
push
add
adc
or
jmp
cmp
xor
jmp
xchg
push
push
push
inc
xchg
sti
ret
call
dec
add
mov
lds
jmp
or
mov
jg
push
ror
mov
add
cld
jg
push
add
inc
sub
pop
pop
cmp
jne
rolb
mov
sti
icebp
lds
sub
pop
sub
jge
ds
das
je
inc
mov
push
lcall
hlt
jg
add
movl
push
ljmp
icebp
mov
xchg
xchg
mov
dec
roll
leave
xor
jmp
inc
add
pop
mov
adc
ret
paddd
incl
adc
add
shll
lods
mov
jbe
xchg
lret
sbb
js
dec
add
xchg
xchg
pop
inc
pop
aaa
ss
filds
not
mov
fidivrs
std
mov
fildl
fdivs
fsubrl
fcompl
push
sub
shr
pop
mov
xlat
lds
pop
nop
mov
sbb
lds
incb
rcrb
daa
push
push
sbb
dec
dec
push
pop
pop
inc
idiv
fistl
pop
loope
cmp
inc
push
push
push
call
sub
jo
xor
push
mov
push
push
push
push
call
sbb
and
or
push
int3
in
cli
sub
lods
call
sbb
jbe
mov
cltd
mov
testl
lea
rol
test
xchg
jl
ret
push
loopne
mov
not
mov
pop
fwait
clc
decl
dec
sub
inc
pop
push
push
sub
pop
call
fwait
test
add
aam
mov
cmp
jmp
sub
sar
pop
mov
push
push
sub
mov
faddl
lds
add
sub
pusha
sbb
cmp
and
jns
ljmp
cmp
lock
je
jmp
pop
call
or
mov
sub
es
inc
xor
sub
jmp
sti
or
and
add
rdpmc
rclb
shrl
iret
pop
sub
sub
sbb
dec
jmp
xchg
inc
sub
or
push
and
popa
push
clc
jmp
bound
or
in
ljmp
test
adc
mov
inc
adc
mov
cmp
enter
in
push
lea
lea
fnstcw
mov
sub
xchg
adcb
cli
repnz
mov
push
iret
push
push
call
xor
mov
mov
sub
out
mov
add
and
insb
cmp
add
dec
xor
mov
add
shll
sbb
push
call
adc
loopne
mov
push
push
ret
xchg
dec
add
ret
dec
es
inc
xor
ror
pop
sub
push
out
loope
pop
aad
push
fstl
int
mov
sub
das
inc
call
nop
push
xor
pop
call
pushf
jmp
ss
pop
movsl
das
jmp
int
shr
in
idiv
pop
xchg
cmpsl
push
push
push
inc
sub
mov
in
sub
push
push
mov
inc
gs
push
call
loope
aam
inc
mov
iret
mov
lret
add
adc
mov
les
mov
sbb
popa
xor
xor
sub
sub
add
push
insb
les
shl
inc
mov
iret
sbb
xlat
decl
nop
push
push
push
push
call
test
adc
mov
push
loope
push
call
push
nop
and
ret
push
cmpsl
js
mov
cmpl
ljmp
shrl
rol
lret
add
mov
xor
loopne
push
push
cltd
je
ljmp
pop
sub
push
push
xor
insb
push
nop
jge
push
sbb
das
push
test
out
popa
popf
and
inc
mov
or
dec
mov
pop
loop
sbb
int3
mov
pop
and
hlt
xchg
das
mov
xlat
ret
lret
mov
jmp
test
xchg
sbb
pop
jne
mov
push
movsb
outsl
inc
add
sar
inc
pop
int3
add
sub
pop
dec
push
mov
fmulp
mov
mov
xchg
sub
decb
jmp
sub
sub
dec
jmp
outsb
sub
push
bound
lock
add
or
cmp
test
sbb
or
cli
pop
loopne
pop
flds
jl
and
mov
dec
fldenv
and
in
xor
imul
and
and
push
jbe
ret
inc
mov
sub
and
addl
scas
loop
lock
push
mov
sub
add
pop
in
or
xchg
loope
push
push
push
call
xor
aaa
or
loopne
jmp
pushf
cs
push
push
call
inc
dec
and
rep
insb
int
push
jae
add
fdivrp
mov
loop,pn
fstpl
push
inc
cld
in
out
sub
add
mov
jge
out
push
add
pop
pop
mov
jmp
push
push
lea
sahf
add
jmp
jmp
xchg
xor
add
mov
jmp
jmp
add
mov
xor
mov
push
push
push
push
sub
inc
or
and
addr16
and
pop
add
jmp
mov
dec
sbb
test
repz
lods
jge
push
push
sbb
add
push
sub
and
jmp
addb
inc
xchg
pop
js
fcos
jae
popl
push
push
sub
shl
push
sub
add
jnp
add
xor
lea
push
push
adc
add
mov
jg
or
rclb
pop
rol
nop
jno
or
dec
jmp
cmc
add
jno
clc
sub
nop
xor
nop
nop
cmp
movsb
and
dec
inc
dec
addb
pop
sub
sub
cmp
jno
lods
add
test
and
add
jmp
and
inc
or
test
push
inc
pop
addl
loope
sub
cltd
es
jg
loopne
fisttps
sub
sub
sub
repnz
cmp
mov
jb
push
lock
xor
ret
mov
std
mov
jb
xchg
stc
xchg
push
std
sub
and
fdiv
pop
sbb
sbb
push
sbb
or
in
decl
add
test
pop
mov
push
gs
das
and
xchg
push
clc
sub
dec
push
push
mov
pusha
shll
sbb
std
in
punpcklwd
je
leave
ret
js
mov
jmp
add
jmp
push
sti
and
dec
pop
push
push
dec
dec
mov
adc
xchg
sbb
scas
cmp
bound
dec
add
push
mov
dec
add
hlt
inc
ljmp
das
das
mov
mov
ds
call
mov
add
mov
add
xchg
mov
cld
mov
add
push
push
insb
clc
call
iret
pop
push
push
push
push
adc
add
inc
hlt
aas
call
xor
inc
mov
sub
incl
lcall
fldl
add
push
push
push
not
mov
outsl
inc
incl
in
sub
add
jecxz
roll
xchg
outsb
xor
sbb
add
pop
stos
and
dec
mov
int3
inc
in
ljmp
add
jmp
lret
add
lods
sub
pop
jmp
xchg
sub
inc
xchg
or
std
mov
add
xor
dec
and
pop
mov
xlat
add
add
lods
push
jmp
jmp
and
or
jmp
mov
jg
cmp
iret
mov
push
push
push
push
push
negb
adc
lds
xor
loopne
inc
pop
mov
test
jmp
lret
stc
add
es
push
mov
add
aas
jge
loop
enter
xor
pop
sub
push
not
rol
add
cld
incl
push
push
push
add
inc
lea
sub
mov
sub
xchg
inc
jno
inc
fisubrs
push
jne
sub
pop
add
fldl
dec
cmpsb
sbb
or
aaa
pop
push
addl
outsb
sbb
sub
cmp
push
mov
in
daa
sub
xchg
lcall
xor
push
adc
or
jmp
xor
add
jmp
popa
call
call
dec
cli
nop
dec
mov
mov
sub
shl
mov
inc
sti
mov
fldt
add
mov
rorl
fs
mov
push
and
test
push
cmp
mov
jbe
jae
sub
add
cmp
into
mov
loope
ss
sbb
pop
test
out
jle
in
jg
sub
rol
mov
repz
iret
cld
push
mov
das
mov
cmc
cwtl
push
adc
adc
ret
cld
push
jb
cmp
rcrb
mov
mov
insl
clc
call
adc
push
push
push
out
dec
and
push
and
sti
jg
push
push
push
xchg
cli
inc
rorb
and
inc
mov
cmp
popf
inc
xor
pop
and
fnstenv
mov
adc
adc
mov
pop
mov
inc
dec
cmc
xor
andb
outsl
xor
jmp
adc
and
or
shl
aad
test
loope
jne
adc
push
sub
push
aaa
push
sarl
adc
push
repz
inc
shl
xor
push
push
adc
push
fwait
pushl
xor
jle
stos
cmp
imul
rcrl
aam
shr
dec
test
mov
jl
pop
push
xlat
lods
or
das
aaa
js
lea
push
lret
out
mov
inc
out
mov
leave
add
lret
aas
dec
cmpb
add
lcall
popa
sahf
arpl
lea
add
mov
push
dec
mov
sub
popf
call
sub
jmp
jne
inc
inc
cmp
outsl
nop
popa
mov
inc
icebp
mov
add
jbe
jmp
cmc
inc
fistl
cwtl
sub
inc
xchg
je
das
inc
jnp
stos
xor
fimuls
test
cmpsb
lock
dec
les
jmp
and
adc
add
mov
sub
loopne
jmp
or
sbb
jl
or
or
xor
dec
and
cs
or
push
add
sarb
ja
lods
cld
sbbb
mov
push
push
xchg
or
or
pushf
push
xchg
sti
loop
sti
sub
dec
mov
andb
imul
aas
fs
shll
ds
lea
ror
pop
inc
cmp
sbb
cmp
adc
aad
sub
push
push
jmp
inc
mov
fs
sbb
add
sub
insl
test
mov
rolb
jg
dec
mov
repz
push
push
push
fistpll
push
sub
push
aad
mov
incb
add
push
push
lea
pop
cmc
push
xchg
add
mov
jle
test
cli
adc
ds
push
xor
dec
jae
decl
test
pop
mov
inc
cwtl
aas
jle
addr16
add
mov
ss
ret
push
add
movsb
out
dec
push
int
outsb
xlat
add
and
sub
adc
push
and
add
push
dec
add
push
xchg
inc
adc
mov
adc
mov
fstl
pop
imul
add
pop
and
fwait
sub
out
and
ret
mov
xor
test
cmp
popf
mov
adc
lahf
mov
jmp
or
rol
xchg
add
jp
jmp
scas
lock
mov
in
in
fisubrs
rcr
jmp
insl
xchg
add
popa
adc
pushl
mov
imul
push
push
add
orb
test
call
ret
int
adc
push
or
or
dec
xchg
hlt
and
sub
jl
arpl
enter
rol
fs
dec
pop
mov
rclb
add
dec
inc
cmp
jmp
dec
mov
mov
dec
xor
fstl
push
mov
sub
mov
shl
fcmovbe
push
push
inc
dec
add
dec
les
sbb
sub
xor
call
jmp
sbb
push
nop
add
outsb
cmp
lret
icebp
sub
or
sub
pop
adc
mov
out
push
push
adc
sub
cli
decl
test
pop
mov
push
push
inc
and
and
pusha
mov
dec
push
push
dec
not
add
dec
lock
mov
push
inc
adc
cs
stos
pop
add
adc
aam
ja
mov
mov
repnz
les
ret
jmp
call
pop
mov
adc
inc
and
push
push
push
push
call
adc
or
idivb
repz
push
call
dec
and
mov
js
add
pop
std
rep
jnp
shrb
xchg
dec
popf
dec
pop
inc
or
xchg
jl
adc
pop
or
fnstenv
adc
push
in
and
inc
rcrb
lahf
and
inc
pop
mov
lock
and
leave
jne
pop
cld
or
shlb
daa
mov
iret
mov
movb
stos
fimuls
jmp
loope
shlb
xchg
add
sub
add
mov
xor
cmp
sub
mov
ss
mov
pop
xlat
test
push
cmc
mov
mov
push
xor
add
pop
push
push
sub
add
add
aas
pop
lahf
add
pushl
sbb
std
mov
outsb
out
test
mov
xchg
push
or
add
enter
int
in
or
xchg
sub
pop
add
jmp
xorl
add
shll
popa
add
pop
shrl
cmp
nop
jno
jmp
jns
pop
pop
test
adc
sbb
jns
test
mov
test
das
lds
mov
inc
ret
add
ja
cmp
lcall
stc
push
push
call
adc
dec
jg
push
call
lea
mov
inc
sub
xor
cli
cld
add
jbe
xor
dec
aas
mov
lret
dec
inc
popa
clc
push
insb
dec
mov
call
add
mov
arpl
ss
cmp
xor
xor
jp
shr
push
fucomp
sub
or
adc
fcmovnbe
sub
pop
cmovnp
add
jbe
fmuls
add
std
pop
add
xchg
sbbb
add
sbb
add
push
fadd
mov
test
loopne
jno,pn
sub
inc
push
pusha
add
and
inc
mov
std
call
adc
sub
shr
rol
pop
popa
les
sub
pop
inc
mov
inc
out
or
add
cs
add
sub
pop
pop
mov
out
pop
addb
add
sub
add
clc
out
or
negl
flds
mov
hlt
lods
pop
jmp
in
push
adc
xchg
lea
and
outsb
mov
out
ds
mov
add
push
push
int
repnz
push
add
pop
mov
addr16
add
dec
sbb
jne
gs
push
pusha
cmp
jmp
popf
jmp
outsl
push
add
loop
bound
lods
push
push
push
pop
push
call
jo
popa
xchg
push
mov
pushl
mov
loope
movsl
xchg
mov
ret
into
mov
loopne
outsl
and
outsb
xchg
add
icebp
jg
push
push
call
inc
add
loope
mov
pop
call
jne
xchg
insl
push
jmp
repnz
jmp
dec
insl
hlt
outsl
testb
add
mov
xor
sub
shl
jns
push
sub
or
pop
dec
mov
shll
icebp
cltd
adc
inc
add
gs
enter
mov
call
inc
nop
cmp
js
push
cmp
subb
add
inc
cmpsl
es
mov
rolb
push
aad
sub
jmp
rol
pop
add
fs
and
adc
jmp
sub
mov
popa
js
jmp
call
shr
stos
in
or
inc
sbb
pop
inc
outsb
popl
adc
loopne
pusha
sahf
adc
jmp
pushf
push
adc
mov
jp
inc
adc
in
shr
sbb
aas
jg
sub
pop
inc
mov
add
inc
jno
hlt
sub
outsl
rol
sbb
jge
out
rorb
mov
mov
imul
pop
mov
mov
inc
push
mov
xchg
sbbb
inc
sub
push
int
push
xchg
cmp
adc
inc
loope
pop
clc
cmp
xor
adc
sub
nop
cmpsl
decl
mov
lcall
mov
dec
les
add
or
aaa
mov
or
lahf
or
xchg
push
push
sbb
jmp
sub
sbb
jnp
cmpsl
or
mov
cmp
push
dec
xor
jle
sub
loope
add
or
loop
iret
jo
loop
call
and
pop
lds
in
or
add
adc
add
sub
or
pop
pop
jg
mov
inc
and
in
sbb
adc
push
and
sub
cmovp
jg
test
add
sub
sub
pop
mov
sub
out
jg
jne
inc
jne
cmpl
and
lea
push
pop
aad
aad
add
decl
pop
xchg
mov
sub
push
call
test
mov
gs
mov
shr
mov
add
push
push
dec
js
mov
loop
adc
or
xor
xor
xor
mov
mov
shr
cmp
adc
pop
outsb
mov
pop
jl
loopne
mov
pop
mull
add
xchg
add
or
inc
add
hlt
inc
jo
mov
inc
jmp
sub
add
add
or
lret
shr
sbb
idiv
pop
jmp
jecxz
invd
outsb
mov
in
fcmove
add
push
sbb
or
sbb
lock
push
arpl
add
inc
xchg
add
xchg
push
push
push
fucomp
adc
loope
dec
adc
pop
lcall
add
xchg
pop
adc
dec
les
std
jmp
lock
add
push
push
push
push
sub
adc
call
pop
leave
sub
test
imul
outsb
push
call
dec
addl
or
ss
rclb
push
sbb
sub
popa
sub
sub
mov
push
mov
mov
subl
push
push
push
push
push
into
fmuls
call
dec
add
sbb
rol
lcall
or
repnz
push
dec
dec
add
pop
test
adc
movups
add
mov
push
push
add
fbld
adc
mov
add
cmpsl
enter
jecxz
mov
mov
and
cwtl
aaa
inc
adc
mov
test
jmp
out
adc
xchg
test
add
jmp
inc
jmp
inc
cmp
pusha
in
jmp
jne
and
mov
dec
lret
lea
rol
mov
sub
jno
pusha
or
push
nop
xlat
sub
popf
movq
enter
sub
test
push
mov
lods
icebp
inc
dec
cld
jg
rcrb
in
cmp
inc
aas
mulb
xchg
mov
incl
xor
lret
ljmp
mov
sbb
and
and
inc
cld
movl
xchg
into
push
lods
mov
add
arpl
dec
daa
arpl
into
or
push
data16
xor
mov
push
xchg
and
int
xchg
test
adc
jmp
cmp
jmp
aas
call
lods
call
fdiv
adc
or
mov
jle
add
cli
add
sub
call
rolb
xlat
shr
xor
pop
test
adc
lcall
ret
mov
or
xor
pop
test
inc
test
fiaddl
loop
add
jmp
xor
adc
push
jmp
jnp
push
push
add
sub
mov
push
jg
cld
push
sub
sbb
test
mov
stos
or
pop
out
push
sub
dec
mov
pop
mov
shll
xchg
jmp
test
sbb
xchg
pop
and
mov
pop
loop
add
inc
ror
inc
pop
sub
and
aad
jge
adc
push
das
push
insb
xor
mov
icebp
cmp
push
push
push
push
inc
mov
mov
mov
push
xchg
int3
pop
mov
hlt
imul
fldl
add
xlat
xorb
jmp
pop
mov
add
jno
or
lods
jmp
pop
xorb
push
xchg
dec
test
xor
dec
jmp
dec
loope
in
sub
hlt
repz
push
push
push
call
push
sbbl
bound
aam
sub
aas
dec
dec
jle,pt
push
cmpsl
test
adcl
inc
mov
ds
push
xor
imul
xchg
shll
add
stos
lcall
outsl
repz
mov
jmp
lea
cmc
loope
push
filds
push
push
mov
mov
add
xchg
sbb
aaa
mov
or
adc
push
push
or
add
ljmp
cltd
fprem
jg
ds
ror
pop
add
push
dec
lea
pop
xor
push
or
std
add
out
add
call
or
stc
lods
add
call
push
daa
inc
push
mov
xlat
adc
xor
movsb
push
nop
nop
push
incl
rorb
push
push
push
pusha
cli
cmp
in
out
push
call
push
shlb
loope
movsl
xor
loop
loopne
xor
int3
dec
mov
adc
inc
pop
push
subb
push
or
icebp
mov
stc
add
add
inc
add
sbb
or
mov
icebp
out
movsl
cmpxchg
jae
jb
ret
dec
mov
pop
inc
gs
xchg
and
rolb
add
add
mov
pop
out
imulb
out
add
shl
fcoml
push
xlat
mov
push
call
or
daa
mov
and
jg
insl
xor
add
and
adc
popa
inc
cmpb
pop
push
push
push
push
dec
mull
sbb
sbb
cmp
sub
in
xorl
sub
daa
cmp
sarl
xchg
enter
mov
mov
jle
mov
lcall
inc
push
push
push
push
call
push
add
lret
push
push
orb
and
push
sbb
shrb
stos
adc
subl
xchg
test
stos
outsl
adc
mov
sbb
movsl
or
lods
test
decl
cmp
inc
or
push
shll
mov
lcall
test
cmpb
mov
jnp
aaa
inc
jg
shl
pop
mov
pop
add
loope
mov
dec
or
add
ficomps
fwait
mov
mov
shr
mov
add
and
mov
jmp
jae
popf
mov
mov
adc
fisttpll
call
ret
adc
jecxz
mov
add
dec
adc
and
mov
stos
mov
or
jns
add
arpl
inc
ljmp
sbb
add
testl
out
adc
test
std
push
call
nop
test
ficoms
jecxz
push
fs
adc
hlt
mov
adc
adc
roll
mov
inc
leave
mov
das
dec
sub
jae
push
push
push
jno
and
stos
add
or
mov
push
add
xchg
sbbl
or
push
test
inc
fadd
add
pop
push
fcoml
push
jne
add
in
dec
jne
sub
push
push
call
adc
ret
sub
jp
lret
icebp
repz
icebp
add
leave
mov
cmp
fidivrl
adc
mov
ret
fs
add
add
call
push
inc
and
or
loopne
nop
sub
roll
and
sbb
dec
mov
add
clc
jmp
and
enter
add
cmp
je
lds
lret
nop
pop
es
pop
add
mov
dec
stos
sub
int3
xor
int
adc
push
sub
and
idiv
jne
add
sub
jle
dec
inc
xchg
je
clc
or
shl
or
push
dec
rol
aad
lret
cmc
lea
pop
call
push
call
inc
xorl
clc
lods
adc
fiadds
push
push
mov
push
stc
mov
fbstp
jo
jmp
push
xor
test
stos
mov
sbb
sub
add
pop
inc
pop
add
sar
ja
add
pusha
dec
dec
pop
and
dec
dec
cmpsb
lods
xor
pop
mov
pushl
pop
fbld
rorl
dec
mov
cmpsb
push
cmp
inc
and
scas
lock
jg
pushl
sarl
icebp
push
pop
outsb
xchg
push
pop
jne
jns
pop
or
jge
shll
mov
sbb
add
aam
incl
mov
dec
cltd
std
fwait
xor
mov
hlt
imul
push
movsl
fs
lcall
jbe
idiv
mov
aad
ret
jnp
mov
filds
ljmp
addr16
mov
mov
inc
scas
sub
icebp
test
int
xlat
fildll
les
das
inc
jne
pop
imul
into
lock
cmc
sbb
aad
scas
stc
outsl
test
xchg
xor
pushl
xchg
cmp
push
scas
call
and
mov
cmp
jl
mov
inc
add
pop
mov
cld
imul
xor
test
sub
loope
out
imul
push
scas
sbb
mov
popa
xchg
sub
or
push
dec
rcr
clc
mov
mov
adc
fisttpl
push
dec
test
cli
cmp
adc
das
jo
ficoms
jecxz
or
jmp
hlt
int
pop
cltd
inc
cmp
add
lods
outsl
dec
mov
out
sbb
lahf
scas
repnz
xchg
inc
cli
mov
pop
lret
call
setp
lock
mov
and
sbb
fbstp
sbb
pop
jl
test
xor
xchg
dec
mov
std
fmul
outsl
fsubrl
pushl
popf
push
popa
ss
mov
imul
in
jbe
xchg
sub
mov
sub
movb
push
outsb
filds
sub
cmp
js
jmp
fadds
pop
jb
pusha
inc
add
call
mov
push
andl
arpl
pop
push
negl
out
xchg
cmp
push
in
das
lea
inc
mov
insb
sbb
into
aam
sahf
int3
inc
fstpt
ret
lock
call
mov
imul
add
fisubrs
loopne
jmp
repnz
sub
push
and
ret
pusha
pop
pop
lret
adc
sub
movsb
xor
fidivrs
in
mov
int
aam
lret
jae
xchg
inc
imul
adc
jns
jg
call
sbb
and
scas
leave
ret
in
push
pop
adcb
pop
and
push
cs
decl
adc
xchg
mov
push
test
fistpl
xchg
xchg
push
ss
in
and
adc
xor
in
je
xchg
popa
sbb
inc
jg
xchg
adc
push
call
adc
mov
cmpb
xchg
js
fldenv
jne
call
test
addps
mov
sarl
sbb
je
nop
ss
cmpsb
mov
les
inc
test
rolb
pop
xor
dec
adc
jmp
mull
jmp
jmp
and
cmpsl
sbb
jg
mov
jb
int
stos
jo
js
xorb
je
out
outsl
mov
mov
add
and
add
mov
pop
xchg
or
and
ja
cmp
and
ret
pop
test
and
xor
jle
scas
mov
in
add
jmp
out
mov
in
inc
leave
ljmp
mov
rcrl
cwtl
shl
add
mov
shrb
shrb
std
xchg
or
mov
js
push
in
mov
push
out
jge
pop
cld
outsb
or
es
sbb
dec
in
mov
dec
mov
pop
mov
or
call
push
test
enter
ficompl
and
mov
call
jne
add
mov
dec
cwtl
fldt
mov
test
fs
pop
jg
or
dec
sbb
pop
mov
outsb
adc
push
ja
test
sarb
pop
cmp
mov
roll
or
lahf
push
lret
insb
jg
add
fistpll
call
movsb
adc
repz
sub
mov
ljmp
dec
pop
lahf
sbb
jmp
and
push
insb
aaa
mov
add
xor
aas
ret
lods
aas
movsl
adc
sub
sbb
fstps
mov
xor
xchg
push
decl
pushl
or
push
or
or
mov
in
mov
mov
add
jns
bound
xchg
pop
jne
inc
pushf
imul
and
out
push
xor
or
mov
test
ja
gs
mov
int
mov
daa
and
push
aam
leave
pop
inc
adc
jb
sahf
add
jmp
mov
mov
cltd
icebp
cld
lods
loope
ficomps
push
lahf
sar
add
aaa
decb
fildll
mov
or
push
fwait
lods
dec
movsl
and
inc
roll
cmp
mov
push
cmp
inc
inc
incl
adc
mov
mov
loope
sub
mov
jmp
add
xor
pop
ret
or
mov
rclb
psubsw
enter
sub
cmp
inc
push
mov
xor
incl
and
add
sbb
jns
add
pusha
movsl
loopne
sbb
jg
mov
aas
pop
mov
xchg
scas
xor
call
jbe
aad
jmp
inc
jns
jge
or
mov
inc
call
mov
push
fstpl
inc
jmp
out
fsincos
inc
ret
out
mov
jo
pushl
clc
jmp
pop
ret
fsubrs
adcb
dec
pop
rol
aaa
mov
scas
imul
mov
pusha
add
icebp
aam
shufps
jns
inc
xor
add
jno
cli
pushl
inc
test
pop
mov
pop
adcl
pushl
mov
pop
mov
test
clc
rcrl
sahf
decl
or
jmp
inc
call
add
xchg
sti
pop
rcl
in
gs
and
ljmp
adc
add
scas
jns
lock
inc
sub
ss
cwtl
mov
bound
mov
daa
ficomps
cmc
lret
decl
lret
jo
and
insb
fistps
insl
adc
nop
sub
xchg
pminub
sbb
or
decl
rcll
cmp
pop
in
inc
push
pop
fbld
mov
mov
hlt
bound
arpl
push
std
inc
addb
xor
inc
stc
cltd
movsb
enter
rolb
mov
jmp
or
mov
rol
pop
stos
pop
jo
fcomip
jnp
sbb
mov
cmp
sbb
and
push
mov
cmp
insb
mov
test
pushl
xchg
push
mov
pop
loope
mov
call
and
leave
xlat
ds
push
rcrb
in
fisttpl
js
sbb
add
shll
dec
ds
gs
ljmp
pushl
or
sbb
cli
jecxz
lahf
xchg
jae
mov
mov
rcll
adc
dec
push
cmp
jmp
sar
xchg
or
fisttpll
insb
push
stos
ss
jmp
mov
push
jae
aam
jb
mov
push
cli
mov
jb
aam
rolb
and
stc
jl
ds
ror
data16
incl
or
mov
stc
outsb
outsl
into
rolb
aaa
fsubrs
out
lods
mov
icebp
cmp
ss
mov
incl
arpl
mov
mov
jecxz
fnop
pop
enter
mov
int
cmp
aas
add
sti
mov
nop
mov
or
mov
adc
sub
rclb
arpl
mov
decl
xor
ds
push
dec
loopne
es
jo
ss
adc
inc
shr
sub
call
sbb
cmp
or
pusha
jge
jo
imulb
scas
cmc
jns
incl
sub
repz
fadds
cwtl
or
or
shll
mov
inc
lcall
adc
lcall
mov
mov
push
sbb
je
add
scas
test
cmc
icebp
add
inc
jg
ss
mov
mov
test
gs
int
data16
lcall
aam
inc
jmp
jmp
or
fimull
pop
mov
lret
inc
movl
std
and
adc
jo
loope
or
xchg
mov
ret
in
leave
leave
lea
xchg
pushl
add
in
test
mov
push
fwait
mulb
mov
inc
mov
icebp
aad
mov
ljmp
addr16
test
sub
gs
imul
cltd
inc
movsl
inc
frstor
mov
cs
incl
push
xor
jbe
mov
mov
js
fsubl
push
arpl
jmp
add
decl
inc
mov
es
add
lahf
add
cmpsl
jnp
push
mov
call
cmpsl
insl
not
flds
sbb
fwait
call
scas
push
cmp
push
pop
lret
mov
std
leave
mov
in
shrl
in
xor
xchg
push
sbb
push
repnz
mov
add
pushl
xor
imul
test
sub
aaa
pop
or
inc
enter
push
add
fwait
xchg
mov
sahf
jb
data16
repz
cmp
push
je
or
fimull
push
and
outsb
int
lods
inc
pop
mov
fwait
sbb
pop
popa
adc
lcall
out
enter
testb
mov
pusha
or
fists
inc
in
decl
pop
leave
add
gs
int3
or
xchg
loope
add
stc
or
cld
into
add
lods
mov
xor
xor
xor
xor
jne
pop
push
mov
mov
idiv
call
sahf
push
push
test
add
jge
sbbl
shl
out
sub
jg
stos
test
mov
in
jg
dec
inc
popf
icebp
pop
jmp
insl
jns
push
aas
pop
xchg
lea
ljmp
aad
sbb
les
sub
xor
insb
stc
movb
fidivs
lcall
mov
test
xor
out
dec
mov
aam
and
inc
jo
call
test
jl
mov
dec
or
xchg
iret
in
pop
fwait
sbb
pushf
cmpsl
ljmp
cld
add
jecxz
stos
lahf
push
mov
jp
stc
pushf
sti
mov
scas
xor
shlb
jo
call
push
fwait
fwait
push
shlb
outsb
push
xor
or
mov
push
adc
fisubrs
hlt
cmp
ds
pop
ja
aas
cld
lods
add
dec
and
jns
mov
enter
pop
test
jns
outsl
psrlw
andl
repnz
pop
les
sbb
ret
sub
add
jae
xor
cmp
decl
ror
jle
push
imul
scas
mov
bound
out
pmulhuw
push
xor
cmp
jmp
fsub
sub
jae
stos
or
xchg
js
mov
ud0
lcall
jnp
inc
ret
insl
lret
adc
dec
mov
push
sub
xchg
dec
sbb
decl
mov
inc
xchg
rcl
sbb
mov
dec
fisubrs
mov
ja
pop
dec
daa
outsl
pop
pushl
decb
pop
mov
push
inc
cmp
jnp
adc
pop
insb
leave
idiv
pop
jmp
sbbb
cmp
pop
and
mov
daa
mov
pushf
jg
inc
jg
xchg
negl
jno
xchg
sbb
nop
cmpsl
xor
dec
sbb
insb
inc
jns
add
mov
pushl
addb
out
lock
or
call
sarb
add
ljmp
inc
xchg
cmp
xor
mov
and
or
lock
loopne
mov
shrb
push
sub
sbb
sar
ljmp
xchg
test
xchg
shlb
xchg
outsb
push
aam
inc
xchg
jge
imul
xchg
xlat
int3
mov
test
sbb
decb
js
sub
lcall
jecxz
imulb
adc
adc
pop
ljmp
jg
dec
mov
jo
sbb
lcall
or
out
xchg
negl
cli
push
push
xor
btr
jne
cmp
cmp
cmp
inc
call
clc
dec
cmc
xchg
lcall
ljmp
orb
incl
jp
cmpsb
mov
push
push
sub
scas
lock
aad
inc
or
dec
xor
lcall
iret
fsubp
aam
jnp
sub
fwait
das
add
dec
and
cs
xor
lcall
int
jno
mov
int3
sub
push
nop
fisubs
out
pop
push
scas
mov
scas
jg
shrl
and
jnp
cwtl
sbb
jmp
xchg
icebp
pop
rclb
addl
mov
insb
test
xor
fidivrl
cmp
cmpsl
into
test
mov
clc
lcall
jge
decb
and
movsl
xchg
into
inc
jg
inc
pop
pop
cmp
call
ja
pop
jb
fadds
arpl
add
sub
icebp
leave
int3
cmp
into
push
out
lcall
ljmp
jge
out
aam
fdivs
jno
inc
inc
aas
loope
mov
xchg
xor
inc
cmp
pusha
xor
cli
inc
xor
cld
sti
add
mov
adc
pop
cmpsl
mov
leave
lds
fisubs
push
iret
xor
aad
xchg
pushl
push
cmpsl
dec
push
fistl
lcall
popf
mov
jbe
fsubrp
dec
lahf
fisubrl
inc
pop
rcll
jp
insb
lret
jns
ret
mov
sbb
mov
dec
pusha
cmpsl
popf
nop
ljmp
mov
les
or
scas
stc
jne
in
sub
cs
incl
decl
sbb
sub
insb
dec
sbb
ss
adc
push
or
jmp
mov
and
loope
dec
rcrb
pop
sahf
test
stc
loope
out
adc
jg
fidivl
lock
sub
push
jae
push
cmp
pop
adc
sbb
fildl
std
imull
insb
orb
mov
test
inc
sbb
fdiv
push
xchg
leave
xchg
inc
adc
dec
sub
mov
sub
fisttps
mov
jnp
inc
aam
push
out
test
push
pop
mov
inc
and
shl
repnz
adc
jns
push
and
shrb
sub
stos
jbe
out
insl
adc
lods
sbbl
pop
cmp
data16
int
test
pusha
xchg
sub
and
and
add
ret
xchg
repz
mov
lods
loopne
sahf
outsb
pop
imul
out
inc
fs
xchg
scas
lods
ljmp
test
sbb
xchg
jge
fiaddl
popa
jmp
lahf
cli
iret
jno
jnp
sub
insl
add
mov
sbb
out
pushf
mov
push
in
dec
mov
adc
sbb
std
xor
lret
pushf
sahf
cmp
add
dec
mov
dec
mov
je
mov
cmp
xchg
sub
inc
add
and
mov
pushl
addl
mov
aam
mov
and
pusha
sbb
jl
push
mov
es
push
inc
aam
and
mov
stos
sti
pop
sahf
outsl
add
push
adc
arpl
sbb
cmp
fwait
aam
cld
loope
cmp
test
cmp
bound
in
mov
je
push
repnz
movsl
mov
lods
dec
pushf
cmp
pop
xchg
into
ds
mov
pop
cltd
das
mov
jg
out
lds
mov
add
sti
scas
shrl
pusha
stos
out
inc
in
insb
shr
pop
decl
jns
add
pusha
mov
fdivrs
mov
jg
cmpsb
dec
cmp
pushl
cmp
aad
and
xchg
adc
add
mov
ds
jmp
or
out
and
addb
or
sub
mov
mov
fstpl
cmp
inc
pop
mov
nop
push
inc
xchg
jp
lahf
lock
xchg
sbb
fwait
push
or
dec
push
xlat
mov
ret
aad
pusha
ret
fistl
adc
pop
aad
xchg
push
or
ljmp
and
jge
addr16
dec
cmpsl
ja
dec
fistl
ljmp
push
xchg
gs
data16
mov
xchg
in
adc
sbb
push
je
je
js
adc
jmp
das
stos
pusha
pop
mov
adc
pusha
xor
xor
fsubrs
xor
dec
and
les
cmc
push
andl
push
jo
mov
test
xor
push
or
mov
cs
push
iret
arpl
call
out
add
mov
push
fwait
mov
and
pop
aam
push
test
jecxz
js
incl
mov
lret
push
idivl
loope
cltd
pushf
push
push
push
popa
adc
add
incl
pop
jae
icebp
mov
jb
cld
or
dec
andl
out
movsb
mov
cmp
lea
das
xchg
jl
and
mov
sti
jmp
cmp
xor
dec
xor
mov
push
push
push
add
sub
cltd
pop
pop
cld
xor
jecxz
enter
add
out
fistps
outsl
repz
cmp
push
jmp
jno
cs
hlt
push
mov
jno
dec
pop
clc
jns
fldcw
pop
cli
call
mov
xchg
iret
and
popf
push
add
pop
inc
inc
outsb
je
jmp
test
jmp
imul
inc
dec
jmp
and
push
data16
in
call
jb
push
repz
mov
in
lock
jl
push
sbb
mov
add
int
xor
pop
iret
pop
bound
add
push
xchg
fsubrl
decl
jae
mov
sbb
mov
inc
mov
in
test
das
jmp
or
mov
call
lcall
shlb
mov
out
mov
mov
mov
out
adc
fucomip
sti
jnp
inc
ret
and
iret
jp
int3
inc
mov
pushl
add
dec
inc
pop
push
mov
mov
add
movsl
setnp
call
jg
rolb
cltd
ret
pop
popf
push
mov
shll
mov
dec
inc
fdivr
adc
ficoms
pop
inc
stos
ljmp
mov
out
mov
jmp
les
and
mov
or
pop
movsl
mov
xchg
add
hlt
jmp
inc
cmc
ljmp
lock
xor
mov
test
jmp
push
mov
inc
lea
push
push
out
cli
fbld
js
push
jg
jge
and
push
pop
andl
mov
into
punpckhbw
adc
hlt
ljmp
lock
mov
js
mov
xchg
jbe
cmc
scas
decl
stc
outsl
mov
xchg
xchg
lret
pushf
das
lea
movsl
jns
rorb
pushl
jns
loop
inc
in
cli
mov
mov
or
cmp
pushf
push
jle
ffreep
jnp
push
fmuls
jmp
test
xor
push
roll
add
sbb
cld
das
cwtl
mov
int
cmp
mov
lods
pop
fnstsw
pop
jns,pt
push
lock
sbb
pop
mov
ret
out
cs
ja
outsl
cmc
mov
leave
mov
cld
adc
sbb
inc
jg
mov
loopne
push
add
outsb
addr16
je
outsb
rcll
enter
cld
call
outsb
jae
sub
sbb
out
addl
hlt
push
repz
aad
jb
stc
shlb
mov
push
test
test
mov
xor
xor
ss
mov
adc
cld
pop
mov
push
push
or
mov
push
fcmovnb
out
sub
add
push
movsl
decl
push
jmp
fwait
ds
sbb
imul
fistpll
and
dec
rorl
push
repnz
jne
cs
aam
gs
add
lcall
cmp
push
jecxz
fs
push
and
ja
xor
jb
sbb
jmp
lock
insb
lcall
jne
lret
outsb
jmp
xchg
and
mov
jmp
dec
xor
iret
ljmp
xor
cmp
aaa
or
outsl
outsl
stos
sahf
mov
mov
inc
mov
loope
sbb
adc
pop
loopne
cmp
jo
mov
mov
pop
cwtl
mov
dec
inc
push
call
pop
out
mov
icebp
aad
jno
stos
mull
subl
lcall
aam
xchg
push
add
test
sub
fnstsw
push
loop
lds
les
call
mov
fidivrs
sbb
jae
sub
or
not
mov
out
push
push
adc
mov
pop
nop
xchg
mov
push
mov
out
mov
sbb
cli
call
in
pop
jmp
cs
cmc
cltd
fidivrl
sub
rep
jmp
fildl
jle
test
ljmp
in
mov
lods
andl
jl
cmc
pop
sbb
js
pop
cld
repnz
cmp
cmp
cmpsl
out
xchg
xor
cmp
push
test
fwait
nop
jmp
andb
aad
dec
imul
outsl
shr
gs
nop
jmp
mov
nop
mov
xchg
jl
xlat
nop
daa
or
adc
mov
jg
adc
push
fsubl
jge
pop
or
inc
imul
xor
shl
sti
xchg
mov
lret
adc
outsb
xorb
push
or
jmp
jmp
rcr
and
push
xchg
call
xchg
lahf
xlat
out
sar
pushl
jge
rcll
lahf
testl
add
outsb
xorb
jg
push
pop
loop
stc
push
push
inc
inc
dec
roll
lcall
jmp
pop
outsb
lret
test
push
sub
lcall
cwtl
xor
sbb
out
aaa
push
pop
and
mov
xor
sub
lods
sbb
push
or
mov
xchg
fisttpl
lahf
jb
mov
mov
adcl
mov
loop
popa
outsb
scas
pushf
out
repz
push
mov
lcall
movsb
mov
and
mov
fstpl
jnp
mov
mov
pop
ficoms
fsubl
sahf
or
aam
movsb
ljmp
jmp
mov
lcall
cmp
jne
xchg
or
fstp
ret
andb
xor
push
push
mov
sar
jg
cltd
call
fmuls
push
mov
and
ljmp
push
or
pop
das
call
push
cltd
imul
int
call
loopne
mov
ss
cmp
mov
or
or
jbe
test
sub
std
incl
insl
and
aad
sbb
jl
ret
lcall
insl
cmp
ja
pop
cld
mov
into
and
imulb
stc
pop
arpl
dec
jge
clc
sbb
cwtl
test
das
loop
cwtl
push
iret
jb
pushl
pop
xorl
xchg
push
setno
shrb
mov
lcall
ljmp
movsl
sub
imul
lret
xor
pop
dec
sahf
hlt
mov
xor
pop
xor
popa
add
dec
repnz
leavew
mov
lcall
sbb
mov
pop
inc
xchg
jo
dec
sub
sbb
lcall
lret
aas
mov
popf
inc
lcall
mov
and
push
lods
jg
add
jne
loopne
test
jns
pushl
test
in
outsl
and
out
xor
pop
jb
inc
insb
mov
mov
jg
xchg
push
add
scas
jo
shll
sbb
loopne
xcrypt-ctr
cmpsl
pop
jg
pop
push
out
popa
mov
rolb
fwait
inc
aam
jmp
cmpsb
lds
movsl
mov
shll
cmc
dec
sub
sub
repnz
push
daa
gs
aam
cld
mov
std
mov
std
jp
mov
cli
inc
xchg
imul
ljmp
cltd
scas
pop
movsb
loope
add
in
push
add
push
leave
sbb
jg
jg
aas
in
repnz
repnz
jo
mov
movsl
insb
and
scas
inc
push
dec
mov
lcall
push
cmp
cmp
lock
aad
and
mov
and
push
push
in
jne
mov
rolb
lods
shlb
cmp
adc
or
jnp
sti
in
xor
fwait
sub
cwtl
call
mov
test
jg
pop
pusha
xchg
lret
ja
jecxz
sarl
pop
add
mov
ljmp
hlt
cmp
scas
in
mov
daa
rorb
jne
push
into
pop
jnp
stos
fldt
ret
loope
jb
sbb
mov
in
sar
mov
clc
adc
int3
je
adcb
popa
nop
ret
test
jmp
pop
ftst
mov
add
std
mov
ret
mov
lret
push
push
jle
add
incl
jae
mov
dec
fiadds
aad
lcall
movsb
fmul
lods
popa
hlt
or
adc
imul
pop
cmp
das
cld
stc
repnz
mov
or
hlt
fstl
out
es
out
xor
push
cmp
ljmp
sub
xchg
mov
and
cli
or
xor
xchg
das
inc
loopne
jbe
fstps
jp
sbb
std
push
push
ljmp
incl
sub
cmp
fs
pop
lcall
pushl
ds
xchg
icebp
cmc
sbbl
mov
inc
cli
dec
pop
mov
call
insb
aaa
xchg
repz
or
adc
loop
sbb
pushl
xchg
lret
jp
lods
dec
test
push
dec
clc
cs
inc
das
lahf
jnp
pop
mov
inc
inc
push
subl
enter
imul
outsl
xchg
test
insl
test
pushl
sbbl
fildl
or
sub
inc
in
jns
in
pusha
pop
push
ljmp
or
inc
rcll
test
lret
sub
mov
jg
jmp
push
ss
cld
xchg
sub
dec
negb
sub
mov
pop
add
call
lcall
inc
pop
gs
xchg
and
rcr
rcl
or
clc
inc
push
push
lcall
insl
fdivrl
mov
xchg
cmpsb
cmp
pop
dec
gs
push
mov
jg
push
sahf
jmp
adcb
xchg
ljmp
jbe
mov
outsl
in
mov
inc
sahf
shrb
fcmovb
push
jg
in
scas
jnp
push
add
add
mov
add
lcall
dec
add
aad
sti
js
imul
jmp
mov
mov
inc
sahf
push
jne
imul
setb
fisubl
add
push
xchg
cwtl
mov
test
test
loopne
lcall
or
fiaddl
insb
push
xchg
sub
popf
push
jno
rol
aaa
sti
cwtl
lock
mov
xchg
xchg
test
push
je
scas
or
mov
mov
mov
or
jg
pop
test
pop
pushl
cli
js
scas
scas
int3
in
sub
lret
mov
out
fdivr
xorb
cli
push
outsl
ljmp
fdivl
push
xchg
sub
mov
sub
jno
cmpsl
fisttps
add
scas
outsb
aam
inc
das
push
xchg
jg
icebp
incl
or
push
mov
iret
cmovbe
adc
mov
int3
xchg
pop
aas
call
pop
add
pop
scas
mov
aad
xchg
jmp
sub
dec
jns
inc
xchg
xchg
fldl
frstor
push
jge
das
pop
sub
incl
mov
add
mov
push
lahf
cmp
ret
das
cltd
stos
stos
push
and
pop
data16
aad
jns
es
incl
gs
sub
or
into
ficompl
cmp
pop
lods
jno
stos
push
fbld
inc
call
lcall
cltd
mov
mov
test
add
mov
out
movsb
divb
decl
xor
cmp
xlat
in
add
xchg
cmc
or
ljmp
int3
outsl
ret
ljmp
ret
adc
pop
call
cmp
jmp
cmp
mull
lods
and
cmc
roll
ljmp
sti
xlat
sbb
jg
jg
ja
call
into
fnstsw
sbb
cmc
pushl
adc
fdivrp
ds
push
call
addr16
or
add
add
fistpll
faddl
loopne
or
pushf
cmp
int3
jp
call
jmp
test
sub
add
cmp
jne
push
mov
cwtl
dec
and
cld
adc
xchg
fists
sub
inc
jle
arpl
test
pushl
mov
or
repz
mov
sbb
movsl
lods
clc
call
cltd
jg
fisttps
scas
test
ss
shlb
sti
mov
mov
scas
and
cmp
adc
add
fadds
sub
sti
addb
mov
sti
mov
cmp
push
std
adc
inc
mov
stos
sbb
lahf
inc
and
pushl
cmp
xchg
clc
stos
mov
sub
test
sub
xchg
and
xlat
jge
std
les
inc
lcall
call
cmp
jo
std
dec
test
add
sub
decl
lds
popa
pop
mov
adc
lods
inc
inc
aad
scas
cmp
cli
lock
lahf
mov
pop
adc
test
sub
out
jb
pop
repnz
adc
xchg
cmp
pop
js
decl
aas
fwait
subl
popa
mov
bound
add
mov
sbb
popf
fildl
test
jns
sub
int
mov
mov
jg
out
sarl
iret
mov
push
lret
mov
jg
cmp
adc
out
inc
loopne
pop
loope
jbe
in
add
out
clc
aaa
and
pop
jns
sbb
or
das
lock
scas
hlt
ficoml
or
fdivl
push
xchg
mov
in
dec
xchg
sahf
cmp
mov
jnp
mov
or
push
mov
cmp
inc
sti
jg
jnp
mov
jo
jl
jns
cmp
cmp
xchg
adc
decl
inc
cs
fdiv
cmp
cmp
cmc
repz
lret
adc
mov
jg
stos
jg
fsubrl
jp
adcb
orl
out
pushl
xor
xlat
cmp
inc
jno
pop
sahf
or
mov
test
dec
add
sahf
test
jg
jg
jmp
out
adc
adc
and
mov
icebp
incl
or
jbe
lcall
add
jbe
push
mov
lcall
pop
fdivp
shlb
adc
cmp
fidivs
xchg
mov
ljmp
call
add
fnstcw
cmpsl
jno
inc
aam
mov
out
dec
push
jg
jmp
mov
xchg
in
mov
lcall
ret
imul
and
sub
out
negl
xor
cld
aad
lds
pop
add
mov
inc
inc
jo
push
test
and
fnsave
call
dec
call
and
test
fimuls
pop
imul
fwait
jnp
mov
mov
push
mov
mov
cmp
repnz
aaa
sbb
cs
call
test
mov
mov
xor
jns
scas
dec
xchg
divb
dec
loop
dec
decl
insl
cwtl
shrl
cmp
pop
repz
sahf
dec
gs
decl
insb
mov
adc
sub
rcll
and
fildl
movd
call
fldl2e
cli
movsl
mov
or
xchg
in
mov
pop
mov
xor
ljmp
outsl
aaa
mov
adc
push
mov
xchg
out
jp
pusha
cmpb
and
pop
incl
jmp
icebp
subl
xchg
aas
rcl
pop
mov
or
pop
cs
dec
bound
mov
push
popf
mov
call
lcall
or
push
sbbl
push
aad
test
loope
decl
mov
div
jae
mov
adc
pop
mov
mov
data16
fstp
jb
and
cmp
lahf
pushf
dec
sbb
jecxz
jg
xchg
mov
ljmp
xchg
aad
jge
fldl
cs
mov
add
sub
enter
rolb
or
jecxz
std
add
add
lock
int
jg
ret
rcll
xchg
push
cmp
mov
add
jmp
incl
inc
sub
stc
leave
movsb
mov
not
int
insb
push
add
add
inc
cmp
xor
xchg
adc
xchg
jnp
ds
pop
add
repz
jle
mov
sbb
iret
xor
in
sbb
icebp
xchg
ds
testb
repnz
mov
test
fists
and
cmpsl
push
push
sub
adc
push
push
jno
or
sti
lock
movsl
aaa
jmp
ds
push
lds
or
popa
xchg
mov
mov
data16
dec
cmp
cmp
pop
sub
cltd
cmp
stc
dec
aam
ds
pop
pop
mov
jbe
ljmp
jno
sbb
jl
push
in
scas
inc
mov
clc
xchg
and
clc
sbbl
mov
es
rcl
stos
fidivs
hlt
adc
mov
pop
test
adc
push
aas
xor
cmp
out
aam
pop
lock
call
je
add
jns
decl
faddl
fstpt
outsl
outsb
sub
push
inc
push
loopne
or
call
cld
ja
das
dec
pop
dec
jb
loope
aad
xor
add
arpl
sub
and
dec
add
icebp
incl
leave
out
cmp
mov
out
sub
prefetch
pop
cld
xchg
sub
les
inc
sub
inc
push
ret
jg
daa
shll
add
call
fs
push
hlt
inc
sub
cmp
decl
arpl
adcl
fldt
cmp
ljmp
scas
and
xchg
imul
cmp
pushl
sub
hlt
cmp
dec
mov
icebp
movl
fwait
sbb
add
mov
ljmp
jge
movsb
fisubrl
or
mov
lods
lcall
xchg
sar
mov
sub
adc
ret
push
mov
daa
lds
jl
loop
clc
int
inc
pop
out
mov
add
mov
jg
dec
pop
jns
jo
inc
push
adc
xor
jb
sbb
sbb
call
push
test
pop
sbb
mov
or
cld
hlt
adc
lds
jmp
incb
mov
dec
std
test
test
shrl
mov
fisttpll
add
push
repz
jl
pop
pop
ljmp
jg
mov
pop
scas
rorl
push
sbb
adc
movb
movsl
jg
add
loopne
call
push
leave
lds
es
jecxz
adc
test
es
mov
call
push
mov
xchg
aam
sbb
fs
shlb
xchg
icebp
pushf
jae
pushl
incl
fs
insl
lds
ds
pop
in
lret
xchg
cmp
push
sub
sahf
js
xchg
sub
jb
roll
movsl
pop
inc
out
pusha
pusha
xchg
jle
jne
sub
ljmp
test
pop
stos
cwtl
sub
les
lcall
push
mov
mov
lret
out
std
cltd
iret
hlt
lds
in
sbb
inc
inc
icebp
pushl
ret
cli
movsl
bound
lret
sbb
cmpsb
add
fucomip
xor
icebp
jle
ret
sub
ret
mov
enter
pop
mov
jle
adc
mov
add
push
fadds
add
out
xchg
mov
add
sbb
lret
sbbb
mov
ds
stc
cli
lcall
sbb
imul
daa
gs
sbb
ljmp
test
rcll
mov
inc
movsl
cmpsl
pushf
cmp
sbb
incl
mov
stos
cmp
mov
xchg
insb
xchg
mov
mov
imul
jg
mov
enter
pop
fimull
dec
in
stos
xor
shrb
jmp
outsl
std
clc
adc
sbb
gs
pop
ret
iret
add
rcrb
lcall
mov
push
mov
repz
mov
incb
fbstp
push
jmp
xchg
or
lahf
lcall
cwtl
push
pusha
pop
mov
pop
push
mov
shlb
int
decl
jae
pop
dec
mov
addl
add
cmpb
ret
mov
sbb
adc
jo
pushl
es
pop
andb
dec
add
insl
mov
decl
mov
mov
fimull
outsb
pop
and
das
mov
mov
mov
lret
les
daa
call
add
test
iret
dec
outsb
call
dec
scas
mov
add
int
cmp
sbb
sahf
sti
mov
jnp
outsl
mov
mov
mov
add
push
rorl
adc
sbb
cmpsb
jg
jge
gs
jnp
cmp
jmp
lds
rcrl
loop
mov
or
mov
stos
sbb
xchg
push
xchg
push
inc
cmp
jle
incl
ja
cmp
or
popa
cmp
inc
add
mov
xor
xor
clc
insb
pushf
adcl
imul
mov
cli
adc
fidivrs
pop
xor
pop
dec
add
push
repz
sub
incl
nop
test
hlt
rcrb
xchg
test
gs
mov
out
in
push
xchg
test
jge
pushl
hlt
loopne
ret
push
push
and
nop
dec
pop
mov
jecxz
pop
iret
das
scas
jecxz
movb
scas
cmp
mov
insb
call
nop
dec
cld
pop
jmp
xor
push
or
jg
std
pop
xor
adcb
dec
popl
xchg
gs
cld
sbb
jae
and
std
in
fisttpl
sar
inc
mov
pop
or
movsl
mov
sbb
js
insl
inc
call
scas
xrelease
jp
imul
mov
inc
pop
cmp
add
cli
or
sub
in
popa
mov
adc
mov
int
push
pop
sbb
stos
test
xor
push
adcl
jg
mov
ja
adc
clc
or
call
pushl
push
lea
inc
insl
mov
add
adc
jg
loopne
lock
ljmp
jp
dec
repnz
test
jge
mov
pop
mov
in
or
icebp
dec
out
mov
ja
mov
xchg
aas
sub
jg
pop
cmp
pop
sbb
mov
test
ffree
push
in
call
dec
push
xchg
repz
adc
dec
mov
lret
das
jnp
cmpl
shr
jns
sub
jb
sub
cwtl
cld
pusha
ficomps
das
sub
pushl
fwait
jbe
pop
lods
mov
xor
or
stos
cmp
inc
bound
pop
sub
pushf
sbb
incl
outsb
pop
push
add
or
cmpsb
lret
outsb
movsl
or
or
leave
adc
jp
es
pop
mov
ror
call
push
mov
std
dec
add
push
sahf
icebp
fstps
xor
fstpt
xchg
jns
push
or
stos
into
dec
or
mov
xchg
jno
cmpsb
decl
mov
mov
mov
jne
pop
jno
push
in
xor
adc
fnsave
neg
cmp
mov
xchg
mov
aaa
fiadds
out
jge
insb
cmp
dec
xchg
popa
pop
push
in
sub
lcall
ss
jp
inc
mov
mov
jno
cmc
adc
lea
mov
fsubrl
xlat
arpl
push
add
call
jmp
add
mov
adc
adc
jnp
insb
inc
repnz
mov
cmp
push
jne
mov
mov
insb
dec
orb
xchg
mov
mov
out
xor
mov
popf
xor
adc
imul
inc
fsts
incl
enter
push
scas
insb
lret
pop
int3
fs
int3
mov
fdivrp
xchg
inc
xor
or
pop
cli
aad
fidivl
adc
out
fisttpl
fnstsw
ficomps
xor
aad
cmp
jmp
push
call
lock
sub
adc
lods
mov
jnp
or
pop
jae
out
mov
call
xchg
loop
pop
aad
int3
bound
sbb
sti
fcomi
inc
pop
iret
jg
ret
add
dec
dec
not
xchg
ljmp
dec
incl
push
add
pop
mov
adc
push
lea
call
sar
mov
mov
cmp
arpl
sub
or
mov
jmp
xchg
icebp
outsb
jge
es
hlt
adc
cmc
push
inc
add
shl
and
iret
or
ljmp
jmp
addr16
loope
sahf
push
inc
sbb
jl
push
jb
insb
pop
xchg
orl
in
sub
mov
jge
mulb
cmpb
jle
mov
dec
in
add
das
loope
aas
or
bound
imulb
aad
xchg
jmp
pop
cmpsl
sbb
gs
std
cmpsb
das
sub
enter
pop
jge
jg
decl
ret
mov
pop
cmpsl
and
mul
sti
jp
lods
mov
mov
sub
in
sub
fstps
ja
xchg
mov
cmp
jne
sub
out
sub
jmp
or
push
cmp
pop
push
adc
mov
xor
in
push
lods
adc
sub
mov
cmp
mov
add
call
das
das
xchg
nop
mov
add
scas
jp
or
addr16
inc
loope
out
adc
scas
adc
imul
shll
xor
jnp
pop
dec
jae
fistpll
loop
jmp
jmp
mov
pop
fimuls
adc
xchg
jmp
sbb
adc
cmp
or
in
jle
gs
movsl
pop
pop
fwait
ror
pop
rcl
aam
push
push
push
mov
mov
xchg
std
fs
sub
fdivs
pop
lahf
pop
jne
sub
decl
or
outsl
hlt
and
mov
jge
mov
and
les
and
sub
pop
clc
sti
loope
arpl
and
sti
int3
orl
outsb
mov
inc
adcl
scas
cmc
sub
das
nop
inc
adc
sti
mov
aad
xchg
xchg
scas
std
fisubl
jmp
mov
pushl
fistpl
lahf
insl
xor
divl
and
popa
inc
lret
imul
sbb
cmp
sbb
repnz
adc
push
sub
call
mov
adc
dec
outsl
jecxz
and
mov
push
sbb
lds
test
pushl
aas
mov
jmp
cmp
insb
xchg
dec
enter
mov
adc
call
das
adc
add
cli
stos
mov
jne
jl
mov
hlt
dec
ret
incl
mov
pop
sbb
inc
fsub
aam
ds
call
mov
clc
loop
test
mov
sbb
inc
aaa
cli
ljmp
jb
push
sbb
inc
bswap
mov
das
icebp
xabort
or
stos
mov
and
dec
test
jns
add
push
imul
inc
mov
icebp
mov
or
cld
test
sti
stc
testb
sbb
aam
shrb
mov
mov
and
dec
inc
cmp
ljmp
andb
xchg
adcb
icebp
push
or
cmpsb
mov
incl
push
xchg
rcrl
xchg
xchg
in
mov
aam
cmp
inc
xchg
dec
jns
lret
loop
push
or
adc
sub
jb
mov
jnp
aaa
fwait
rolb
fisttpl
sbb
je
cmp
push
adc
in
pop
dec
std
call
clc
cmc
xchg
inc
xor
insl
jp
stos
enter
nop
aaa
inc
sbb
push
mov
jnp
mov
es
push
lods
in
lcall
call
push
pop
fmul
sbb
push
je
pop
out
xchg
sub
mov
lret
jmp
movsl
and
clc
add
fadds
roll
pop
hlt
and
sbb
add
fisubrs
mov
and
sub
leave
inc
pusha
jp
ljmp
mov
or
roll
push
ficomps
lcall
or
icebp
dec
mov
mov
xchg
call
sub
fcoms
mov
call
inc
inc
mov
arpl
mov
push
push
cld
sbb
inc
aam
lahf
mov
fs
or
aas
repz
fcmovnbe
in
lcall
pop
xlat
pop
pop
in
test
lea
jno
and
scas
cmp
xor
and
inc
orl
incl
hlt
xor
pop
dec
test
mov
sub
js
and
mov
xchg
sub
mov
jmp
inc
dec
lds
les
lcall
pop
xchg
lcall
mov
pop
and
mov
andb
mov
lcall
cmc
dec
stos
push
pop
push
push
mov
mov
mov
rcl
or
iret
mov
or
call
mov
adc
fs
push
jns
jmp
popf
fists
sbb
mov
pop
aas
lret
and
pushl
push
mov
jmp
mov
xchg
xchg
mov
sbb
push
adc
fstpt
adc
add
mov
dec
call
loopne
xor
call
xchg
jnp
out
shl
loope
lock
mov
ds
aaa
mov
jno
lcall
std
pushl
mov
or
adc
outsb
mov
sbb
ds
cmp
push
lahf
subl
call
mov
mov
lock
cld
stos
jno
outsb
outsl
call
mov
mov
andb
sbb
sub
popa
jle
lcall
inc
pop
mov
sub
xorb
scas
cwtl
mov
pop
ds
cmp
test
sub
scas
pop
insb
inc
pushl
insb
mov
push
cmp
ljmp
cld
lcall
jb
mov
add
dec
dec
call
sbb
scas
nop
shr
xor
or
subb
jmp
pop
lods
push
dec
ljmp
call
shlb
aad
push
cmp
and
mov
xchg
or
out
lcall
fsts
outsb
adc
rcr
mov
push
rol
or
xchg
dec
xchg
inc
mov
pop
jo
sbb
popa
and
mov
fstpt
jl
ja
fs
in
dec
cs
roll
sbb
cli
das
ret
sub
sarb
jg
mov
push
scas
shlb
mov
sub
jg
out
xchg
dec
jl
jnp
jae
cli
nop
rol
out
ljmp
dec
adc
in
sbb
or
cmp
xchg
jmp
mov
shll
jle
sub
pushl
mov
js
std
add
jnp
jae
cmp
mov
jecxz
push
push
paddw
xchg
xor
pop
leave
es
test
jg
jnp
cmp
push
add
or
mov
push
or
gs
jno
scas
pop
and
mov
mov
mov
jo
and
mov
mov
es
lret
sbb
cmc
mov
jmp
insb
ret
fistl
xchg
rorb
pop
in
out
jo
adc
mov
mov
mov
mov
mov
inc
ljmp
in
mov
mov
adc
hlt
stc
and
add
inc
sub
pop
xor
sub
dec
and
pushl
test
xchg
xchg
push
pop
inc
or
loope
js
pop
loopne
call
rcl
push
hlt
iret
int
pop
push
sarb
cltd
shrb
js
dec
mov
sbb
push
mov
enter
pop
arpl
fldt
dec
shl
nop
xorb
or
or
mov
adc
sbb
sub
mov
in
js
push
sub
jmp
or
push
or
sbb
pop
mov
adc
fistpl
fildl
xchg
lds
clc
ljmp
es
fs
xlat
and
jns
hlt
addr16
cld
sub
test
pushl
push
jl
mov
lds
push
lcall
add
xor
add
fucomip
js
fwait
mov
push
mov
push
scas
incb
sub
jg
insb
lea
mov
pop
jae
mov
push
jle
pop
and
adc
sub
push
jmp
loopne
cmp
fiadds
test
loop
mull
cmp
add
pop
fwait
sti
mov
jle
add
popf
push
fcmovb
loopne
inc
aas
mov
jge
leave
mov
out
cmp
pop
cwtl
mov
mov
sbb
ja
xor
sahf
popa
test
test
out
fstps
out
mov
lcall
and
cs
test
cmpl
into
sysret
pop
inc
es
push
mov
dec
pop
fnstsw
pop
xor
jmp
or
and
lds
inc
dec
dec
sub
jmp
fistl
xor
shlb
mov
push
pop
js
or
cmp
imul
testb
inc
push
mov
inc
lea
lods
out
ret
xchg
push
addb
push
stc
ljmp
push
mov
xchg
cmp
push
mov
add
lret
adc
dec
aaa
xlat
xchg
push
cwtl
call
ljmp
mov
adc
push
lds
cmc
movsl
cli
call
mov
in
sub
in
mov
ficomps
shl
cli
das
jo
and
sub
lret
jns
push
rorl
inc
ljmp
fs
loop
add
sub
arpl
dec
sub
cmpl
and
scas
ja
int
repz
mov
pusha
out
popa
fucomip
jg
lret
iret
mov
ficoml
mov
pop
or
cwtl
mov
insb
jl
add
ljmp
cld
pop
xlat
add
cmp
scas
xor
jo
shll
test
insl
fisttpll
jmp
mull
jb
pop
pop
leave
inc
jb
rolb
icebp
test
ljmp
pop
xchg
fistps
and
hlt
arpl
sbb
insb
or
jmp
ds
mov
in
cmc
and
sub
decb
push
dec
imul
xor
pop
fisubrs
popa
fbstp
outsb
xchg
adc
jns
ret
loopne
pushl
push
adc
jecxz
insb
jmp
sub
mov
or
dec
insl
daa
sbb
int3
mov
repnz
cmpsl
mov
pop
xor
pushf
jns
outsl
cld
mov
jle
fnstcw
int
cltd
xor
inc
lcall
push
mov
or
pop
dec
mov
push
inc
adc
xchg
pushl
inc
jne
in
pop
pop
scas
inc
or
push
lea
hlt
lea
jo
outsb
jl
fdivr
lcall
or
loopne
push
or
loopne
sub
pusha
sbb
inc
cli
movsl
and
pop
aas
test
ljmp
push
movsl
lods
aas
xchg
popf
pop
aaa
loope
loope
cwtl
test
sbb
loopne
or
cmp
sbb
lock
call
test
push
mov
pusha
push
data16
push
loop
or
cmp
icebp
inc
decl
xorb
pop
mov
incl
arpl
jns
aaa
add
lds
outsl
imull
add
sub
cmp
decl
lcall
stc
push
out
mov
inc
inc
xor
jle
cld
mov
xlat
loopne
call
jmp
sub
loop
xchg
sbb
stc
jae
dec
cmpsl
cmp
push
in
inc
incl
cmp
add
push
test
inc
adc
imul
pop
stos
and
in
dec
orb
jo
add
mov
enter
mov
jae
sbb
leave
jecxz
popa
or
inc
inc
out
incl
outsl
scas
jg
jecxz
test
repnz
or
movl
cld
decl
jae
fsts
sahf
jecxz
jo
sub
pop
jle
call
loopne
imull
mov
pop
add
xor
sub
clc
int
push
sub
dec
mov
les
ja
insb
out
pop
dec
push
decl
outsb
faddp
adc
lret
call
mov
ljmp
pop
nop
ds
rcl
mov
das
ffree
mov
decl
loop
sub
jecxz
jp
mov
pop
int3
xchg
and
das
mov
xor
pop
pop
or
loope
cmp
dec
adc
lods
incl
imul
adc
xchg
pop
push
outsl
pop
jle
adc
dec
cmp
movsb
stos
dec
int3
pop
std
sbb
and
enter
lds
dec
test
call
push
outsb
add
sbb
push
xor
and
dec
mov
pushl
lds
test
or
pop
sub
fsts
idiv
push
decl
pop
ljmp
decb
push
adc
insl
pusha
or
jmp
xchg
lret
ficompl
ret
pop
scas
mov
push
mov
jno
dec
adc
mov
in
jmp
cld
lods
xchg
xchg
mov
arpl
fisubrs
jg
lcall
aad
shrl
test
lods
cmp
cli
jp
arpl
or
incl
arpl
sbb
scas
xor
mov
arpl
test
mov
pop
add
sub
call
dec
popa
dec
int
jmp
repnz
adc
sti
jl
call
sub
fnstsw
mov
and
lret
bound
sub
lcall
mov
fcmovu
scas
mov
out
add
jae
sti
sub
lods
or
xor
mov
movsl
jne
adc
cs
das
aam
pop
lahf
or
pop
push
mov
mov
arpl
sbb
and
adc
sub
xor
adc
xchg
push
mov
and
cwtl
pop
push
fcoml
pop
movsl
mov
or
hlt
decl
std
popf
dec
cmp
repnz
int3
mov
rol
xchg
jo
push
adc
push
mov
test
ljmp
xchg
cwtl
mov
jle
divb
push
mov
mov
imul
inc
sar
incl
mov
icebp
xlat
mov
test
dec
cmp
incl
push
dec
jecxz
dec
xchg
cmpsb
xor
cmc
popa
inc
jg
fisubl
dec
dec
ljmp
hlt
fs
cmpsb
inc
cmp
mov
pop
push
cli
popf
xor
pop
in
incl
pop
sbb
outsl
sub
std
inc
test
call
aaa
fsubp
mov
xor
jo
in
lock
inc
je
adc
sub
jmp
int
mov
js
cmpsl
out
jp
mov
and
push
js
sti
push
ljmp
test
jb
mov
sar
lcall
push
pop
mov
xchg
push
subl
std
ljmp
movsl
pop
xchg
jmp
and
mov
sar
xchg
out
push
push
xchg
pop
lret
or
cmp
ret
push
dec
mov
incl
jecxz
jp
fs
and
jb
aaa
ljmp
or
mov
fstpl
inc
sti
mov
inc
dec
xor
mov
fdivrs
insl
pushf
dec
sahf
insb
inc
mov
pop
push
mov
pushf
shlb
xor
ss
data16
js
icebp
ljmp
ud0
call
popf
dec
and
xor
xor
xchg
addb
mov
xchg
add
pushl
jno
enter
jns
idivb
jbe
jne
pop
ljmp
in
inc
push
or
pushl
pushw
jmp
test
cmp
jg
pushl
dec
dec
dec
mov
inc
xor
bound
sbb
inc
arpl
jnp
ljmp
sbb
call
jbe
and
jmp
adc
int
sub
mov
ret
aad
stos
incb
inc
fwait
xchg
incl
outsb
test
out
out
out
mov
jb
int3
jns
in
cs
jmp
mov
lret
sub
stos
sbb
mov
cmp
sbb
sbb
lret
in
adc
call
and
mov
daa
cmp
sub
loop
cli
adc
call
or
pop
mov
mov
push
mov
incl
dec
mov
pop
into
xchg
fcoms
mov
js
jae
xchg
inc
jp
sti
aas
lods
or
mov
std
cld
jae
call
dec
test
movl
leave
adc
jg
fnsave
push
xchg
push
push
pop
pop
or
inc
cmp
and
int
scas
adc
fbld
dec
mov
int3
fdivl
orb
push
sbb
test
loop
push
mov
add
sbb
scas
fildl
mov
xlat
incl
adc
fnstcw
xchg
xchg
cmp
push
aam
jno
pop
jno
adc
pop
jecxz
ljmp
insb
ss
xchg
push
sub
mov
je
data16
out
scas
xchg
push
pop
pop
xor
pop
imul
cmpl
push
scas
xchg
pop
cmpsb
scas
cmp
inc
fstp
negb
xor
rol
push
mov
aam
dec
push
out
sbb
sbb
sbb
dec
mov
mov
jns
repz
sub
nop
nop
jo
inc
adc
and
stc
shll
in
xchg
dec
sti
push
call
sbb
repnz
push
loope
rcll
icebp
mov
jg
mov
gs
dec
in
movsb
mov
iret
push
or
movsl
cmp
jne
imul
incl
movsl
add
shlb
sub
repz
xchg
popl
movsl
decl
shrl
push
jae
scas
test
mov
pop
mov
out
xchg
mov
dec
mov
ss
sub
mov
xchg
fistpll
mov
push
nop
xchg
js
push
jns
push
roll
or
inc
shufps
ljmp
jns
imul
mov
lea
lods
lret
push
jg
add
mov
inc
cmp
mov
cmp
sub
or
jmp
mov
add
std
int
test
dec
sti
xor
out
pusha
push
xchg
pushaw
mov
push
xchg
stos
fsubp
push
imull
push
fisubs
mov
mov
or
inc
lcall
fcmove
lds
sub
sbb
pop
mov
or
adc
insl
int3
pop
inc
jg
js
ret
push
ss
mov
lea
dec
adcl
mov
dec
xchg
jg
sbb
push
sub
subps
push
pop
ret
or
inc
pop
or
mov
daa
pop
sub
in
sti
sbb
movsl
dec
mov
cmp
ret
fsubl
jns
mov
cld
das
icebp
dec
mov
fwait
test
inc
je
in
inc
shl
call
jo
push
add
lods
and
lock
ret
repz
inc
push
inc
rcl
lea
fdivrl
ss
ficompl
sub
gs
jb
dec
in
mov
mov
lcall
mov
je
xor
repnz
cmp
sub
jmp
sub
sub
jb
and
mov
jmp
xor
in
pop
cmpsb
cli
fnstenv
xchg
sub
arpl
ds
aas
jae
das
mov
adc
out
outsb
addr16
and
adc
jg
incl
mov
mov
in
shrl
in
and
cmp
es
sbb
cltd
mov
fisttps
push
jns
fsubp
jae
xchg
jle,pt
jne
test
je
cltd
call
pop
mov
xchg
pop
xchg
in
cmpsl
and
fnstenv
sahf
aas
add
movsl
pushf
js
xchg
push
std
jge
jg
pop
add
fucomp
jo
call
cli
fwait
daa
xchg
and
stc
test
stc
imul
cmp
cltd
outsl
dec
mov
fucomip
jns
fidivs
add
xchg
add
fldt
test
sub
fstpt
pop
cmp
es
lods
in
divb
mov
lret
insl
xchg
imul
jp
jnp
ds
das
pop
xchg
daa
lock
jb
nop
xchg
sbb
mov
push
daa
pop
or
fdivrl
push
add
sub
enter
sbb
lret
cmpsb
mov
ficomps
sub
lcall
pop
adc
push
iret
add
sti
inc
mov
scas
addr16
and
adc
xor
call
imul
lods
xor
mov
xchg
in
lds
pop
pop
pop
adc
test
fdivr
jns
xchg
daa
sub
fimull
fdivl
dec
dec
sub
xchg
imul
sub
and
jg
insb
lret
inc
pop
jno
scas
lods
pop
stc
dec
adc
lods
call
pop
mov
push
jmp
ret
jg
lret
leave
inc
mov
in
and
inc
call
sbb
decl
std
insl
out
ja
adc
movb
xchg
push
jle
and
sbb
jmp
notb
mov
jl
dec
into
pusha
imul
les
cwtl
loop
lds
pusha
mov
mov
out
ficomps
jne
cld
inc
or
adc
imul
sub
xchg
lret
mov
ds
xchg
adc
mov
inc
xchg
jbe
push
mov
mov
jae
mov
dec
add
lods
das
lock
pop
pop
inc
pushf
popf
xor
pop
gs
inc
sti
lcall
push
out
fcmovnb
mov
mov
add
sub
lcall
loope
and
mov
sub
pop
dec
iret
mov
inc
in
nop
repz
cs
dec
cld
in
sub
lock
imul
fwait
lcall
pop
xor
inc
mov
std
fistpll
jb
in
dec
mov
jecxz
lods
cs
loope
adc
mov
inc
lret
sti
add
xchg
loop
decl
jle
dec
stc
sub
push
pop
in
daa
push
xchg
adc
scas
rcll
ret
ljmp
xlat
sbb
call
mov
cltd
cs
jg
sub
mov
shlb
test
nop
inc
int
add
push
enter
mov
lahf
push
test
sbb
push
cmpsb
or
insb
add
into
jne
push
mov
cmpsl
clc
stos
mov
test
inc
shll
test
je
sbb
test
das
add
pop
test
mov
into
xchg
or
inc
push
aaa
decl
adc
cmpl
les
jmp
arpl
lds
push
lcall
std
jmp
outsb
mov
sbb
jp
add
jnp
loop
lcall
jg
sub
jno
fldl
mov
sbb
repnz
dec
fucomip
call
sbb
mov
and
cmc
push
dec
xchg
dec
gs
decl
call
jns
je
cmc
inc
divl
inc
cmc
xchg
cmp
and
push
pusha
sbb
sbb
shll
cmp
jnp
insl
ret
sarb
cwtl
xchg
mov
push
pushl
pop
xor
mov
lcall
js
add
ljmp
mov
scas
fistpll
imul
es
sub
pop
ljmp
pop
loop
pop
and
mov
add
and
adc
dec
jg
pop
push
mov
sub
sub
movsl
mov
jg
mov
sbb
dec
loopne
ja
sbb
iret
push
scas
out
pop
mov
std
ds
jl
rcll
addr16
dec
leave
xor
std
jmp
rorl
sbb
jo
movsl
out
sbb
xor
decl
nop
imul
insb
inc
push
cli
mov
aam
idivb
dec
mov
cmpb
sbb
add
inc
dec
insb
cmc
mov
jmp
rolb
clc
incl
leave
xchg
push
and
dec
clc
xchg
std
stos
call
sbb
lcall
sub
dec
cmc
out
inc
jmp
ret
sbb
xchg
sbb
cmp
imul
mov
push
cli
and
sbb
inc
imul
push
adc
imul
add
je
jecxz
decl
fistpl
xchg
mov
movsl
imul
sub
mulb
cmp
inc
cwtl
and
imul
mov
sub
pop
jp
pop
mov
test
mov
pop
add
jmp
in
cs
aas
lret
pop
sub
jge
add
fisttpll
imul
mov
dec
sub
cmp
and
dec
xchg
or
and
lods
inc
fsubs
or
jmp
ret
stc
decl
jl
mov
xchg
je
cld
mov
fdiv
mov
pop
mov
and
in
inc
ljmp
cld
dec
cld
pop
imul
xchg
mov
js
pop
clc
cs
pop
fistpll
mov
sbb
sub
data16
sub
jne
jecxz
mov
daa
mov
faddl
pop
stos
loopne
xor
scas
inc
push
inc
xchg
mov
mov
loope
or
mov
movsb
xor
push
lcall
pushl
scas
sbb
cmp
jge
iret
in
xchg
sub
jne
int
incl
mov
aaa
pop
cmc
lods
mov
shrl
dec
inc
inc
jae
sahf
lahf
popa
dec
sbb
mov
xchg
push
pop
cmc
xorb
shll
outsl
push
inc
adc
inc
negl
cli
fbstp
xchg
daa
xchg
push
xlat
mov
jg
in
jecxz
popa
addl
aam
fstpl
mov
pop
stos
stc
leave
cmovle
ljmp
nop
popa
cmp
xchg
in
aam
sub
or
arpl
ljmp
in
cmpl
mov
mov
insb
mov
call
aas
insl
mov
xchg
cmp
gs
cli
ljmp
popf
pop
sub
test
out
pop
jae
lret
idiv
mov
inc
notl
out
pushf
adcl
ss
mov
aas
inc
dec
mov
call
jnp
sbb
adc
pop
int3
in
mov
stc
lods
and
jl
sub
xor
pop
gs
mov
lock
mov
ret
mov
mov
push
jp
std
ljmp
xchg
pop
jne
pop
xor
dec
jno
cmp
lods
ljmp
loop
lcall
daa
sbb
aaa
lret
sub
loop
and
or
pop
push
push
in
mov
pusha
mov
fnstenv
jg
cmpsl
mov
mov
sti
mov
dec
jg
imul
mov
clc
in
loope
push
jns
sbb
mov
lcall
cli
and
sub
lock
mov
adc
fbld
std
xchg
ficoms
decl
cmp
push
sahf
mov
add
mov
lds
pop
clc
ja
fsubrp
jnp
xchg
mov
lcall
pop
loope
cs
dec
imul
int
jne
ja
lods
and
sbb
out
push
jns
mov
out
inc
es
hlt
mov
or
and
fnstenv
scas
sub
call
sbb
sub
xchg
push
lahf
add
pop
sahf
cmc
xchg
fdivrs
jmp
mov
pop
push
testl
cmp
mov
mov
pushf
mov
ret
add
push
lahf
dec
outsb
mov
push
push
xchg
jecxz
mov
jg
mov
subl
hlt
outsb
cmp
dec
incl
incb
adc
jno
nop
shl
or
fwait
or
decl
push
push
outsb
and
bound
mov
xchg
in
ljmp
loopne
inc
jb
push
fldcw
mov
adc
fwait
cmp
jg
decl
shlb
in
jb
inc
mov
orl
lcall
icebp
push
negl
test
popl
shlb
add
dec
pop
add
xor
int3
nop
dec
cmpsl
dec
jmp
adc
mov
pushl
jo
jecxz
mov
pop
enter
lock
xor
pop
incb
jmp
faddl
out
in
push
and
lcall
xchg
dec
scas
incl
adc
ljmp
in
jb
inc
mov
lret
mov
mov
incl
gs
add
insb
dec
inc
inc
xchg
ficoms
sarb
shl
cli
decl
std
cmpsl
int3
sub
hlt
ja
test
inc
lcall
mov
jle
outsl
fs
insl
lds
xchg
imul
cmp
mov
xor
push
push
test
sbb
mov
jno
mov
cmp
es
lea
icebp
inc
cmp
xor
mov
push
lahf
jl
dec
push
mov
gs
cmpsb
xchg
pop
xor
call
adc
fisttpll
jp
and
ficoml
lret
mov
aaa
push
insl
cmpsb
add
fldcw
or
jne
neg
in
outsb
mov
popa
add
sbb
and
pop
push
xchg
jecxz
stc
push
hlt
rcll
movsl
lods
inc
add
jge
and
xchg
jbe
cwtl
jp
scas
rcr
sub
das
lock
mul
sbb
push
cwtl
mov
mov
lret
mov
cwtl
idivb
xor
fistpl
xor
insb
inc
test
mov
mulb
test
out
xchg
sub
loopne
incl
sahf
movsb
andl
and
mov
ja
aas
or
mov
das
lock
imul
data16
lock
out
or
in
lret
mov
inc
icebp
pop
fsub
sbb
and
stos
mov
mov
dec
les
in
in
add
mov
sbb
xor
push
shr
rol
sbb
jp
jmp
mov
aad
call
mov
loop
mov
ja
add
dec
int3
pop
int3
jns
hlt
int3
inc
sbb
call
fistpll
sarl
inc
rorl
add
bound
outsl
cmc
fisttps
add
imul
leave
hlt
adc
ljmp
pushl
test
dec
pop
xor
cmp
mov
add
xor
enter
enter
mov
push
lea
mov
aam
addb
fcom
fildll
push
xchg
call
xchg
or
scas
xchg
inc
sbb
push
jbe,pn
fdivrp
pusha
xchg
rcll
cmp
jle
jmp
js
jb
xor
sub
mov
call
loop
inc
pop
sub
xchg
cld
mov
pop
mov
adc
cwtl
inc
loope
lods
inc
loopne
js
out
mov
nop
sti
dec
sub
push
jl
gs
fcmovnbe
sub
dec
jmp
mov
dec
mov
jmp
dec
push
shl
sahf
add
scas
in
xor
push
aad
sar
shl
mov
mov
fdivr
mov
or
inc
jge
mov
decl
add
popf
out
or
mov
cltd
push
jp
cwtl
jl
adc
xor
or
das
cmc
clc
stos
clc
sub
add
outsl
mov
sbb
popa
decl
fwait
jmp
jle
inc
iret
int
pop
in
xor
in
imul
ja
xchg
ja
scas
les
call
add
sti
adc
cmp
sub
xchg
scas
sub
and
outsb
call
pushl
or
scas
ret
dec
xor
pop
inc
arpl
inc
mov
xchg
movsw
aas
insb
cwtl
mov
decl
and
scas
ja
adcb
movhps
dec
arpl
adc
cmp
shrb
dec
push
push
or
jmp
fadd
inc
fsubr
jno
mov
mov
lea
cmc
and
movsl
push
jecxz
cmp
call
iret
aas
incl
inc
ja
xchg
pushf
jno
dec
pop
inc
adc
scas
xor
jp
and
call
add
je
ljmp
add
test
mov
or
add
out
push
xchg
mov
push
test
fwait
mov
push
gs
inc
shl
lds
pusha
jge
fwait
push
sbb
adc
inc
mov
aaa
mov
ds
and
xor
loope
stos
jp
pop
lahf
enter
pushf
std
ja
lcall
sub
aad
js
adcl
cld
notb
je
push
add
lcall
xor
mov
enter
xchg
nop
stos
cltd
aam
adc
test
jg
call
shrl
jle
movsb
mov
fldt
xchg
incb
xchg
mov
icebp
lcall
sahf
xchg
push
add
inc
ret
lret
clc
inc
and
cltd
push
repz
push
or
xchg
jns
mov
pop
mov
inc
push
incl
jbe
out
jmp
xchg
xor
shrl
xor
xchg
into
push
leave
dec
cmp
call
cmp
in
inc
xor
dec
sbb
pushl
flds
jnp
fsubrl
inc
fwait
in
sub
stos
pushl
insl
cmpb
or
mov
in
ja
jae
clc
push
add
push
dec
pop
push
dec
add
lods
push
sub
xor
test
pop
adc
mov
mov
xchg
jnp
push
jl
push
pop
add
mov
call
inc
adc
inc
and
mov
push
and
inc
xor
dec
call
out
and
lods
sub
mov
xchg
xchg
and
loop
das
lock
push
mov
mov
add
mov
pushl
pop
xorb
shlb
and
gs
mov
xor
outsb
inc
ljmp
adc
push
cmp
cmp
addb
in
adc
sbbl
lods
mov
sbb
sub
out
cmpl
mov
xchg
shrl
mov
xor
dec
cmpsb
fwait
mov
xor
cmpsb
xchg
jmp
mov
rcl
scas
or
xchg
das
cmc
jmp
or
xor
dec
sbb
push
das
sub
pop
pop
imul
lret
mov
loopne
hlt
daa
mov
cld
xchg
mov
hlt
movl
jg
in
add
addr16
aas
and
mov
sub
or
jg
ret
sub
jae
push
xchg
xchg
test
push
mov
mov
test
cmp
and
loope
jns
hlt
outsl
sbb
pop
mov
movsb
mov
push
xchg
inc
cmp
test
stos
in
inc
xchg
cli
inc
dec
fsubl
cs
aas
jp
mov
sub
or
sub
clc
ljmp
into
cmp
movsl
cmp
mov
hlt
and
add
fisubs
fildll
lcall
std
aaa
inc
test
pop
dec
fcoml
push
or
mov
mov
das
shll
sbb
ljmp
cld
xor
shll
imul
aas
dec
cld
push
lock
ljmp
xchg
mov
aas
pop
push
push
mov
call
xorl
jns
sbb
jp
cli
pop
mov
xchg
incl
fildl
and
sub
cld
shlb
loopne
pop
push
or
leave
jne
or
decl
aas
mov
mov
cmp
in
mov
push
mov
push
sbbl
sub
or
adc
xlat
cmpsb
cmp
loope
lret
mov
imul
data16
jle
jge
mov
ljmp
mov
popa
jne
lcall
int
data16
inc
jb
mov
cld
mov
cmp
sarl
cmp
add
out
inc
mov
adc
jmp
fiadds
or
or
ljmp
call
stc
daa
es
sub
cmpsl
in
push
test
jmp
pushf
fmull
xchg
shll
mov
mov
inc
ret
ljmp
pop
sti
dec
mov
adc
enter
inc
adc
dec
push
daa
inc
jp
lcall
mov
jo
or
fcompl
or
aaa
outsb
adc
clc
mov
jl
test
pop
jl
shrl
icebp
mov
jne
adc
fsts
ret
add
jecxz
das
bound
repz
fdivp
push
cmpsb
mov
jnp
adc
mov
mov
test
inc
pop
addr16
es
lock
fdivr
mov
call
pop
icebp
jmp
sbb
push
repz
stos
or
popa
cmp
cld
pop
clc
pop
enter
sub
scas
mov
lret
sbb
lcall
lods
ds
xchg
mov
fsubrl
int
lock
push
js
adcl
pushf
adc
ret
push
pop
adc
lods
icebp
fadd
xchg
aas
js
jg
sti
push
pop
mov
mov
in
test
lea
jbe
aam
pop
mov
shl
sbbl
pushl
arpl
in
imul
movsb
fwait
movsl
or
jmp
pushl
inc
mov
cmc
daa
inc
movl
leave
in
stos
fcomps
incl
lcall
cmp
inc
je
ja
mov
mov
lret
jl
push
mov
nop
adc
jbe
in
mov
pop
out
sub
push
cld
pop
decl
stos
in
lcall
xor
pop
mov
lcall
cmp
movsb
roll
hlt
mov
imul
pop
push
mov
incl
fcmovb
lods
mov
enter
push
push
aad
shrl
inc
fisubs
insl
jbe
jns
xlat
pcmpeqw
negl
icebp
adc
fsincos
stos
fs
test
lock
out
and
icebp
inc
inc
xlat
aaa
pop
loop
xor
xchg
sbb
sbb
add
mov
in
jg
incl
dec
sub
popa
cld
sub
out
and
fcmovnu
jns
incl
aas
psubsb
cwtl
pushf
fdivp
cmp
inc
jp
mov
mov
push
mov
loop
xor
f2xm1
lret
mov
dec
jmp
test
push
incl
xchg
mov
push
and
jle
call
incl
dec
jecxz
ja
xchg
inc
sar
sub
inc
add
mov
ljmp
pop
xor
add
das
mov
jg
out
sbb
xchg
adc
and
es
push
mov
push
push
mov
rclb
movsb
repnz
ss
scas
ja
xchg
cmp
sbb
insl
ret
inc
daa
scas
adc
rcrl
incl
aaa
dec
out
pushf
pop
insb
cltd
fdivs
imul
addr16
mov
repz
sbb
mov
imul
sbb
cmpsb
cmp
jecxz
dec
sahf
lods
mov
pop
das
lock
ljmp
xlat
data16
add
jg
inc
shll
push
sbb
add
xlat
call
mov
fnstcw
lret
inc
stos
xor
dec
dec
sbb
xor
add
lea
jecxz
icebp
decl
xor
popa
mov
mov
out
repz
in
cmp
mov
aaa
cli
incl
add
js
fdivrs
xlat
dec
cmp
xchg
fsub
inc
aas
and
push
cmp
movsl
ljmp
test
pop
mov
xchg
test
in
sub
or
aaa
jle
cmc
stc
sbb
adc
pop
test
cmovbe
shr
cmp
sub
cmpsb
mov
pusha
popa
test
mov
inc
das
add
xorb
xor
ds
test
test
cli
decl
into
daa
ret
loop
add
mov
push
stos
inc
cltd
xchg
das
cld
jmp
cwtl
push
and
pop
scas
jmp
push
stc
dec
insl
jne
adc
movsl
mov
daa
gs
dec
dec
mov
ficompl
fdiv
xlat
push
xchg
add
add
pop
sbbl
out
mov
mov
jge
mov
mov
or
fbld
sub
xchg
pop
shrl
aas
inc
pop
imul
pushl
decb
hlt
push
cltd
stos
mov
cmp
xor
mov
jmp
mov
les
pop
lcall
mov
jge
aaa
cli
add
sbb
dec
insb
cmpsb
mov
sub
std
mov
cmp
hlt
stc
pop
jg
insb
sti
xlat
into
fnstcw
cli
sub
mov
decl
fwait
mov
cli
jmp
lock
inc
roll
mov
xchg
jle
mov
pop
std
push
out
push
or
push
pop
sub
mov
inc
adc
mov
incl
jle
push
push
push
sub
stc
mov
mov
decl
xor
imul
imul
adc
rolb
icebp
mov
pop
lods
cmp
fisubl
push
sar
jg
jmp
pop
pop
out
push
xlat
mov
jle
repz
jb
test
xlat
incl
aas
adc
test
push
xor
push
inc
fistpl
pushf
dec
sbb
outsb
icebp
pushl
mov
outsb
insl
clc
xor
adc
aad
jl
push
daa
lret
mov
mov
jge
push
arpl
aad
pop
xor
or
push
jbe
cld
mov
jne
stc
out
fwait
call
imul
ficompl
insb
cmp
cmp
jg
fisubs
sbb
push
imull
add
fidivl
dec
push
cli
call
clc
movsl
icebp
dec
dec
pushf
add
test
pop
sti
ja
sti
mov
pushl
xlat
inc
test
aaa
add
aaa
xchg
loopne
fmuls
dec
inc
mov
sub
in
repnz
call
or
inc
mov
test
push
negb
iret
test
fdivl
decl
call
adc
jne
andl
cli
sbb
not
lcall
inc
call
dec
push
movsl
dec
shlb
mov
icebp
decl
repnz
xchg
mov
int3
shll
cmp
sub
add
mov
rorb
sarb
sbb
push
mov
xchg
mov
out
sbb
pop
sbb
add
xchg
pusha
mov
scas
adc
add
sub
mov
fld
je
call
xchg
mov
outsl
enter
cs
sbb
pop
push
xor
jg
bound
push
dec
jp
sarl
mov
sbbb
mov
insl
jno
movsl
rep
xchg
call
mov
xor
mov
movsl
test
jae
fnstenv
lret
dec
inc
stos
out
jae
mov
jecxz
ljmp
xchg
sbb
orl
sub
inc
and
clc
pop
jp
pop
daa
jae
pop
jo
add
outsb
out
es
jg
inc
mov
insb
lock
cld
lahf
mov
aad
pop
sbb
stos
pop
push
ret
les
imul
mov
fisttps
sbb
subl
clc
sbb
fdivr
cmc
xor
fucomi
out
add
aam
fisttpll
stos
sub
test
cltd
mov
add
movsb
or
lcall
ljmp
adc
ss
xchg
mov
push
jmp
adcb
dec
dec
stc
jg
fdivs
nop
and
sbb
pop
bound
lret
clc
into
cmpsb
lock
ljmp
and
pop
cli
jns
mov
cmp
cli
cli
add
fistps
push
and
daa
bound
jb
pusha
cmp
gs
enter
sub
lcall
cli
push
fcmovb
daa
sub
movsl
cmp
push
lahf
cmp
push
call
mov
insb
in
pop
adc
in
add
popa
dec
subps
cli
cmp
pop
xor
aam
dec
mov
mov
movsl
jmp
mov
stos
out
mov
imul
rol
cmpsb
jg
inc
decl
cmp
imul
popl
xor
ja
imulb
pop
in
iret
outsb
and
xchg
incl
sbb
jp
inc
aas
lcall
in
sbb
popa
inc
add
call
ds
lcall
and
fstps
mov
mov
test
pushl
sub
pop
es
fstpt
js
cmp
cmp
push
dec
and
or
sbb
mov
mov
ss
and
sbb
xchg
stc
push
decl
std
jo
scas
int
lock
pushf
enter
stc
sti
int
lcall
fwait
cmp
outsb
popa
ret
adc
lcall
sub
in
jne
mov
mov
sbb
mov
or
dec
std
jmp
stc
lea
iret
scas
cltd
arpl
in
pop
dec
sti
lahf
out
aaa
cmp
loop
fcmovnu
mov
mov
fnsave
inc
cmpsb
movsb
pop
mov
sub
rcrl
mov
inc
ljmp
stc
inc
mov
decb
cmp
sub
mov
cs
jle
outsl
ds
sti
enter
jg
aaa
clc
call
rol
les
add
dec
mov
add
push
loope
movsl
adc
call
cli
lret
out
loope
sbb
lea
mov
loop
in
xchg
cmp
bound
inc
push
stos
mov
add
pop
adc
fiadds
inc
enter
popa
jno
ss
xchg
sub
insb
dec
decl
repnz
jo
ja
sub
xchg
repnz
mov
or
mov
ret
mov
fwait
mov
mov
pop
pop
mov
mov
icebp
mov
dec
pushl
xchg
mov
jno
push
stos
push
mov
mov
cmp
fcomps
jmp
repnz
lods
imulb
pop
cmp
fistpll
sbb
dec
test
test
mov
aam
and
mov
mov
add
jge
sbb
clc
inc
incl
push
jmp
adc
add
fxch
adc
add
fdivrs
mov
scas
sbb
cltd
push
test
pop
push
sbb
je
push
leave
aaa
clc
jmp
rorl
cmp
adc
mov
imul
shll
sti
ljmp
ljmp
lret
push
iret
mov
inc
xor
xchg
mov
daa
not
jmp
dec
aas
jbe
cmp
push
inc
repnz
sbb
negb
push
fisubs
or
decl
add
jmp
lock
add
out
jge
pop
xor
pop
cwtl
inc
call
push
cwtl
insl
inc
ds
push
xorl
leave
sub
add
and
sbb
hlt
addr16
mov
cmp
loop
push
add
enter
cmp
xchg
idiv
fidivl
leave
pop
mov
cmp
dec
test
pop
add
js
dec
sub
ljmp
mov
mov
cmp
incl
lods
lcall
jg
ljmp
push
sti
sub
aaa
xorb
in
cmp
mov
pushl
add
mov
imul
push
and
mov
jns
out
pop
cltd
repz
data16
cmp
es
jle
xor
addr16
xchg
mov
push
sbb
mov
or
clc
mov
dec
mov
aad
pop
sbb
cmovo
sub
repz
pop
mov
in
mov
ficomps
mov
inc
jg
insb
aaa
adc
push
inc
inc
pop
add
pusha
das
into
out
das
cld
mov
repnz
push
stos
decl
aas
mov
push
inc
adc
cwtl
int3
cld
fucomip
lcall
dec
mov
jo
in
push
mov
into
cmp
mov
fildl
movsl
repz
mov
xchg
insl
xchg
test
jl
pusha
sbb
xor
decl
cld
and
outsl
shll
movl
jmp
push
or
add
out
dec
or
xchg
mov
jecxz
ret
sub
outsl
mov
incl
cli
scas
loope
out
test
insl
push
popa
in
jnp
or
sbb
cli
ljmp
push
or
lds
cwtl
rcrl
cld
add
jecxz
adc
pushl
or
sub
xlat
sub
add
aad
xlat
jle
inc
faddl
cmp
mov
xchg
repnz
inc
mov
jo
adc
jp
xor
cmp
xorb
mov
and
lock
addb
lods
jl
mov
call
es
sub
lock
aaa
dec
mov
jb
sti
cld
shlb
incl
loopne
loope
sub
testl
cmovo
push
inc
decb
int3
push
mov
xor
mov
mov
divl
test
add
shrb
insl
mov
jne
enter
jb
inc
add
mov
jne
adc
lcall
push
mov
xchg
xorb
jns
mov
sbb
aam
inc
bound
jmp
push
lea
std
add
mov
fsubs
fsubp
scas
mov
mov
jmp
mov
xor
insl
jg
scas
cmp
aas
loope
mov
divl
push
std
call
sub
inc
subb
mov
cmp
xchg
roll
je
das
or
sbb
push
push
and
push
jl
jmp
adc
adc
and
add
xchg
test
jle
cltd
call
jae
in
push
decb
sahf
lcall
std
add
icebp
cli
insb
sahf
xor
xor
das
hlt
call
inc
jp
cmpsb
cmp
call
xchg
nop
in
imull
mov
dec
std
ret
or
sub
mov
xchg
sbb
iret
bound
icebp
push
testl
les
aaa
jg
js
incl
push
mov
jbe
push
hlt
mov
cmc
sbb
mov
data16
sub
in
scas
push
jg
stc
pop
cmp
mulb
lods
pop
dec
fsubr
int3
pop
add
shr
jmp
sbb
cmp
in
jbe
cmc
add
adc
ss
imul
mov
jg
jg
sarb
aaa
stc
ja
cmp
icebp
sbb
and
aad
sahf
jg
jmp
outsb
pop
xchg
jecxz
ljmp
adc
lds
mov
mov
or
jmp
int3
mov
in
pop
iret
jbe
inc
ss
cmp
outsl
popf
test
lcall
fwait
adc
adc
adc
xchg
or
sbb
int3
pop
lcall
aaa
push
sahf
gs
xchg
ucomiss
test
lcall
mov
mov
jmp
sub
lret
and
cmp
pushf
mov
es
pushl
push
insb
push
sbb
add
push
jle
add
pop
call
outsb
xorb
lods
in
call
lcall
cmpb
inc
adcl
xchg
lock
xor
jp
or
out
mov
mov
xor
push
lcall
sti
aad
cmp
push
call
mov
or
fwait
add
mov
sub
ja
lahf
test
mov
outsl
or
sbb
adc
loop
mov
in
dec
ljmp
stos
inc
jp
push
les
push
and
aas
add
pop
cli
mov
mov
iret
fs
scas
movsl
cmp
pushl
cmc
outsl
jle
jmp
mov
push
and
jmp
popa
sarl
push
pop
std
mov
jo
jmp
push
cwtl
out
call
imul
inc
add
push
hlt
add
inc
push
out
es
push
fimull
pop
outsl
fnstsw
xchg
sub
decl
mov
sbb
add
dec
jg
jno
inc
lret
je
adc
sbb
into
sbb
xchg
or
hlt
aaa
add
cmp
push
test
call
icebp
mov
jb
pop
mov
sub
mov
xor
mov
fldt
push
out
inc
dec
add
sbb
push
xchg
jo
and
jg
add
add
lods
loop
mov
test
jl
push
xlat
lahf
call
cmc
sbb
scas
repnz
cld
pop
and
andb
insl
outsl
aad
rcrb
mov
daa
ljmp
push
cmp
stos
ss
test
or
lods
jecxz
jecxz
dec
das
xor
mov
jmp
mov
int3
cli
in
jecxz
sub
jne
cmp
lods
add
cwtl
mov
jg
repnz
jb
dec
cld
jg
testl
in
xlat
lock
and
or
sub
cmp
xchg
jns
cmp
xchg
dec
add
or
mov
cltd
repnz
jle
push
clc
jmp
adc
mov
jg
add
add
xchg
js
adc
or
sbb
mov
aad
jg
jg
xchg
xor
int
test
inc
cmp
cli
inc
aaa
sub
push
push
call
push
in
outsb
dec
pop
js
sbb
out
mov
mov
xor
rcrl
enter
xchg
xor
sub
ret
test
sti
pushl
clc
sbb
test
push
out
outsl
jo
jns
pshufw
inc
sbb
sbb
mov
pop
call
jne
push
push
imul
pushl
jge
daa
add
call
ljmp
orb
incl
fdivl
popa
mov
ss
outsl
pop
scas
rcrl
popf
or
mov
call
icebp
stc
ljmp
adc
rol
mov
andb
jmp
mov
js
cmp
and
inc
sbb
mov
push
call
decl
xor
arpl
pop
mov
mov
push
lret
out
or
pop
sbb
call
or
xor
fimull
or
mov
jge
test
fimull
jg
call
push
mov
not
shrb
dec
cmpsl
push
lret
push
inc
cltd
jnp
decl
lods
shl
or
idivl
out
push
aam
ss
xor
in
adc
lcall
add
sahf
xchg
loop
mov
push
jb
lret
inc
cmp
sub
faddl
dec
lcall
pushf
rol
test
add
call
arpl
out
mov
loopne
rclb
hlt
mov
decl
mov
cli
hlt
push
ss
aam
aam
cmpl
pop
cmp
pop
jg
xor
cld
idiv
add
mov
mov
ret
jmp
loop
mov
push
pop
pushf
ljmp
and
mov
mov
sbb
mov
dec
xor
in
fnsave
ds
das
add
ljmp
adc
movsb
sub
fcmovu
mov
mov
lea
ljmp
sbb
xchg
repnz
ror
movl
ljmp
mov
insl
repz
repz
inc
testl
xchg
out
mov
jmp
jge
add
inc
xrelease
out
xor
das
mov
mov
jb
sahf
into
mov
leave
loopne
jle
loopne
lret
movsl
lods
inc
cld
mov
hlt
pop
cmp
cld
lcall
or
pop
movsl
loopne
cmp
jp
mov
mov
dec
xor
ljmp
mov
mov
pop
out
lods
int3
xor
mov
inc
lcall
lahf
cmc
lods
mov
outsl
pop
outsl
ljmp
dec
dec
stos
inc
ljmp
jp
add
mov
loop
lods
sub
add
mov
notb
lcall
ret
xchg
pop
idiv
push
push
aas
xchg
dec
push
es
jno
dec
jnp
dec
cli
dec
pop
fbstp
jecxz
std
inc
ljmp
push
fmulp
xchg
test
mov
out
inc
and
lcall
mov
push
cld
adc
bound
rorl
adc
mov
xor
addl
and
mov
jbe
aam
fcoms
lock
fidivrs
sbb
fdivp
int3
xchg
push
pop
pop
cmc
call
movsb
xchg
pop
sub
call
mov
xchg
lcall
and
lcall
jmp
lcall
out
fisttps
push
mov
es
jno
xchg
adc
and
pop
dec
ja
xchg
jmp
and
popf
mov
push
outsb
sbb
dec
sbb
add
sahf
mov
pop
sbb
decl
loope
cltd
add
cld
xchg
jge
jmp
add
std
ja
add
pushf
dec
pop
call
dec
push
pop
add
and
sti
jle
hlt
dec
pop
dec
pop
mov
mov
idivl
jp
adc
jnp
mov
icebp
lcall
cmpsb
mov
int3
push
add
daa
mov
xchg
fldenv
pop
cld
call
cmpsb
xor
int
sub
out
scas
add
fdivs
jnp
pop
jg
mov
push
out
fiaddl
add
xorb
aad
sar
mov
stos
sbb
pop
lea
stc
outsl
je
insl
lahf
or
push
mov
int
lcall
sbb
push
shl
stos
add
lcall
lcall
mov
adc
scas
mov
leave
jecxz
dec
jg
js
add
pop
ljmp
outsl
jae
xchg
in
lcall
movsl
inc
inc
imul
lcall
sbb
pop
dec
ds
fwait
or
ss
mov
loop
inc
cld
push
dec
mov
jns
xor
lret
dec
jmp
out
ja
fdivrp
incl
aaa
push
sub
inc
dec
adc
in
xchg
enter
jbe
mov
pop
jmp
pushl
xchg
cmpsl
sahf
adc
mov
add
and
test
sub
lods
pop
fwait
pop
sub
fdivl
leave
leave
or
cmp
shlb
or
loopne
call
add
adc
out
jns
jg
mov
xchg
push
jg
insb
jb
dec
lods
js
mov
add
clc
ljmp
cmpsl
lret
out
test
mov
lret
mov
pop
jecxz
cmpb
cmc
mov
lcall
lds
std
push
push
aam
ret
dec
out
leave
fwait
insl
loope
xchg
into
mov
add
jb
push
in
mov
daa
shll
sbb
incl
inc
jmp
xlat
xlat
lcall
pushf
jl
cmp
pop
push
cmp
pusha
inc
andl
call
and
pop
push
ds
jmp
push
fs
xchg
icebp
jmp
dec
cld
lret
inc
dec
xor
lea
dec
pop
ljmp
call
cmp
loope
sbb
mov
pop
in
pop
loop
fbstp
dec
xor
fists
push
pop
jnp
mov
rcrl
lcall
mov
dec
repnz
cmp
add
mov
ja
fists
sbb
decl
stos
pop
xchg
pop
loop
pop
enter
mov
pop
xchg
nop
xchg
sub
mov
cmp
mov
cmp
pop
hlt
enter
loope
adc
jg
movsl
sbb
inc
pushf
lahf
inc
nop
loop
aaa
push
enter
lock
movsl
lcall
jbe
and
jmp
pop
cmc
mov
mov
mov
outsl
push
lcall
stos
dec
in
sbb
inc
sti
popf
ret
xchg
sbb
mov
mov
jmp
pusha
xor
push
sub
rcll
int3
ret
mov
dec
pop
mov
dec
loope
inc
cmp
shll
arpl
clc
cmp
push
mov
imul
mov
xor
sahf
lahf
das
lock
jae
mov
and
lea
dec
lock
sub
scas
adc
frstor
or
push
mov
jbe
lahf
jg
js
lock
jns
sub
adc
jg
pop
das
loope
fwait
sarb
std
cmp
stc
push
mov
push
jg
push
jp
adc
cltd
mov
cmc
pop
cmc
xor
push
lods
pop
xchg
cli
lcall
sbb
xchg
repz
cwtl
mov
sbb
jno
push
rcrl
movsl
jmp
pop
adc
icebp
pop
pop
fidivrs
js
mov
jge
adc
pop
xchg
movsl
stos
and
xor
xor
add
jle
cmpb
inc
lret
sbb
lcall
sub
fcoml
cmp
pusha
faddl
jg
mov
mov
out
sub
dec
enter
add
icebp
stos
arpl
lcall
fwait
shlb
xchg
icebp
pop
loope
nop
lds
scas
mov
or
sub
fdiv
push
ss
lcall
push
add
aad
movsb
jne
push
sbb
dec
outsl
fnstsw
mov
pop
stos
xor
xor
pop
xchg
mov
pop
inc
cwtl
adcb
mov
and
orl
sbb
insb
mov
cmp
xchg
clc
jg
rorl
shr
es
pop
insb
iret
scas
dec
popa
loop
aaa
xor
ljmp
icebp
test
ffree
dec
out
push
adc
push
test
dec
mov
pusha
add
jg
and
aaa
inc
cld
jecxz
iret
cmp
adc
call
inc
daa
or
ljmp
fnstsw
xor
call
jl
dec
scas
cmc
arpl
int
add
mov
lock
mov
and
cli
gs
or
add
mov
out
jne
dec
std
and
js
das
adc
aaa
mov
lcall
lret
inc
add
lea
aaa
cmpsb
fwait
add
lcall
jno
cmp
clc
movsl
loopne
push
cmpb
xor
inc
test
pop
dec
xlat
mov
or
in
repz
repz
in
inc
psubq
ret
jle
popf
adc
adc
and
cmc
std
mov
mov
decl
sbb
or
jl
enter
orb
jmp
pushf
push
cmp
pop
mov
or
call
jmp
and
sub
adc
dec
lcall
push
int3
push
in
call
cli
stc
pop
fwait
test
ret
xchg
cld
jg
mov
test
pop
cli
jmp
mov
xlat
mov
mov
jmp
pop
incl
scas
mov
dec
lahf
mov
jecxz
stos
xor
and
jbe
loope
cmp
xor
add
les
cld
jmp
and
dec
adc
idivb
mov
scas
arpl
call
xchg
pushf
popa
dec
add
mov
mov
mov
jb
enter
jns
adc
cltd
add
mov
ret
mov
mov
mov
aas
push
jne
cmp
adc
jge
int
sarb
mov
jmp
incb
xor
push
int
pop
shlb
loopne
cli
pop
movsb
out
jmp
cmp
int3
push
push
leave
and
mov
insl
xchg
shrb
and
xchg
dec
push
fld
ljmp
decl
ret
sub
in
test
int
adc
and
and
lcall
jne
in
jbe
mov
ret
jns
sahf
clc
rcrl
insl
hlt
test
mov
or
jg
sub
in
ret
mov
add
aad
insb
dec
mov
mov
mov
in
addr16
std
ljmp
and
icebp
or
fdivr
out
push
gs
mov
ds
push
paddw
sub
loopne
sub
sub
sbb
ljmp
lret
test
xchg
scas
loope
lds
and
insl
add
aaa
clc
inc
testb
repnz
cmpsl
fbld
or
xchg
imul
fdivr
jmp
cmp
shlb
jp
mov
mov
rcrb
pushl
jg
pop
loop
adc
jbe
xchg
sbb
mov
sbbb
ljmp
cwtl
sub
leave
in
pop
pop
mov
pop
mov
push
dec
addr16
xlat
cmp
insb
mov
mov
fisubs
stc
jo
and
das
shlb
jo
int3
sub
push
xchg
movl
cmc
pushl
into
inc
push
jg
mov
inc
icebp
cli
ss
addl
incl
lea
add
roll
push
adc
addr16
lods
mov
add
mov
bound
and
sbb
stos
lods
jb
hlt
jg
out
cmpsb
pop
sarl
pop
lock
mov
dec
xchg
or
das
lahf
data16
xchg
stc
mov
mov
cmp
pop
daa
movsl
test
ljmp
push
shrb
inc
cs
gs
loopne
lcall
push
cmp
sbb
xchg
ljmp
daa
sbb
fstpl
jmp
add
rcrb
jecxz
xor
mov
aaa
jl
pop
ret
mov
adc
repz
decl
lods
or
mov
jl
test
adc
int3
push
ljmp
cld
das
loop,pt
xor
mov
adc
sbbl
pop
out
dec
fs
jmp
cld
loop
jnp
sbb
xchg
mov
adc
cmp
iret
arpl
inc
sub
mov
hlt
in
dec
repnz
mov
lea
out
outsb
and
ljmp
pop
push
push
dec
and
mov
jmp
sub
sub
js
mov
mov
popf
push
hlt
add
inc
mov
mov
pop
mov
lock
aaa
or
inc
insb
and
lods
pop
cmp
mov
add
iret
jmp
in
lods
xor
xlat
add
mov
aam
iret
push
lods
lods
cmp
adc
lea
mov
cmp
mov
add
mov
shrl
cwtl
ja
cli
cmp
xchg
sti
cmp
stc
sbb
jg
jbe
inc
sub
mov
jl
in
jbe
aas
pop
test
decl
cs
in
jae
lods
in
sub
sbb
out
inc
scas
ficoml
pop
pushf
cld
adc
imul
ljmp
cli
mov
and
imul
test
jg
mov
jl
insl
dec
movsb
fs
mov
inc
sbb
push
add
pop
cli
ljmp
sub
orl
outsl
mov
cmp
lcall
sbb
stos
imul
cmpsb
mov
pushf
jge
inc
xor
cli
fsubrp
sub
das
dec
mov
pop
jne
pop
ljmp
cmc
xchg
pushf
cmp
sbb
sti
lods
and
decl
jbe
je
andl
in
das
dec
xor
pop
cmp
xchg
cmp
xor
call
ja
scas
mov
mov
dec
icebp
mov
jno
nopl
sahf
in
push
jg
dec
mov
lret
adc
mov
stos
mov
daa
xchg
gs
movsb
mov
outsl
lock
push
push
bound
das
bound
and
shrl
call
cli
pushl
int
dec
mov
out
icebp
dec
popa
sbb
fwait
rcl
ljmp
or
call
push
dec
cmp
outsl
ja
inc
mov
sbb
sub
rcl
mov
or
shll
into
outsl
in
jp
sbb
decl
rcrb
lods
sbb
clc
xor
out
mov
mov
jae
nop
and
lret
xchg
pushl
push
lea
outsl
cmc
clc
inc
or
imul
adc
movsl
idivb
jns
sub
mov
cld
incl
popf
or
clc
jmp
push
daa
int
decl
cmp
testb
xchg
out
and
std
mov
imul
push
call
cli
sahf
stos
mov
out
into
pop
repz
mov
sahf
mov
ss
pushl
jno
popa
push
jp
or
or
out
push
mov
jmp
ss
xchg
mov
stos
jg
insl
stos
sub
sub
bound
and
fidivrs
lcall
lcall
out
adc
cltd
adc
lret
xchg
or
inc
pop
ljmp
outsb
adc
pushf
xchg
cmp
sub
mov
dec
call
inc
xchg
out
pop
adc
inc
repz
pop
ja
pushl
adc
push
jae
fiadds
jae
stc
cld
pop
aam
mov
push
mov
ss
pop
mov
sti
adc
clc
pop
test
push
test
xchg
mov
test
pushl
nop
enter
jge
xor
xchg
icebp
push
into
pushf
loop
xor
cli
jp
int
xchg
into
lods
dec
mov
mov
insb
ljmp
adc
clc
clc
jg
mov
iret
jge
mov
jle
adc
ret
call
lods
in
popf
insl
mov
bound
test
push
fs
inc
jmp
sbb
cmpsb
add
ret
fistpl
jge
sbb
mov
inc
add
mov
insl
fbld
add
fnsave
or
dec
sbb
jg
outsl
cmc
int
jle
pushl
pop
mulb
jno
and
pop
mov
ds
outsl
cmp
popa
xchg
or
cmp
repz
lea
into
enter
xchg
loope
dec
lret
ds
in
xchg
decl
cli
push
push
mov
sbb
inc
cs
int
lcall
ljmp
icebp
xchg
and
adc
mov
push
add
lcall
xchg
mov
outsb
pop
sub
jnp
and
out
inc
jnp
idiv
ss
adc
fucomip
pushl
mov
pop
jle
outsl
sub
dec
cmp
xchg
les
ljmp
jbe
mov
mov
icebp
push
cmpsl
clc
dec
neg
jmp
popf
das
or
mov
rcr
test
mov
xor
jmp
add
inc
jecxz
mov
mov
xchg
pop
out
lods
push
jmp
dec
movsb
hlt
movsl
sbb
xor
das
push
fs
and
sbb
stos
adc
inc
xchg
lahf
nop
aaa
jp
cli
xchg
adc
outsb
ret
mov
and
shrb
fsubs
icebp
in
stc
out
shll
xchg
sub
cmp
push
inc
xor
call
sub
xchg
push
inc
test
xor
rol
dec
jb
inc
or
sbbb
xor
das
jge
sub
jmp
jmp
mov
std
adc
inc
lcall
ds
sub
add
mov
xchg
jbe
out
mov
pop
divb
pop
cmp
xor
ljmp
dec
dec
popf
mov
pop
ljmp
push
jb
jle
adc
das
outsl
cltd
call
in
xor
push
mov
cltd
pop
add
cmp
je
cwtl
add
mov
ds
scas
push
aam
or
lcall
mov
mov
les
and
fiadds
sar
add
adc
sub
imull
das
dec
divb
jns
test
decl
std
pushf
sbb
jle
mov
adc
stos
sub
cmpsl
mov
sbb
add
int3
mov
push
js
imul
xchg
jns
cltd
sub
jmp
cmp
jns
es
lods
cmp
xor
mov
mov
aam
movsl
mov
dec
aam
rclb
push
es
stc
lret
adc
incl
idivb
daa
add
data16
rolb
incl
sahf
lds
je
mov
int
negl
call
clc
mov
xchg
mov
jb
xor
fdivr
cs
ror
push
lds
cmpsb
aam
decl
mov
mov
lock
inc
or
into
int
iret
rcrb
cmpsb
mov
scas
ljmp
mov
xchg
sti
das
lods
xchg
js
jp
shr
mov
sbb
call
lahf
mov
cs
push
in
dec
lret
add
and
ja
inc
fcmovbe
inc
insl
inc
push
cli
pop
loop
aad
mov
fidivrl
lds
cmp
call
dec
dec
inc
pushf
outsb
ds
lds
sub
fmul
fs
jg
cli
adcl
inc
loope
mov
mov
in
cld
dec
ds
dec
cmp
mov
mov
mov
aas
pop
add
fldcw
push
mov
incb
add
incl
es
loop
adc
mov
in
adc
out
repz
cmp
out
out
pop
icebp
out
pop
xchg
sbb
mov
ljmp
push
mov
imul
mov
add
shll
pushl
sti
sub
sbb
popf
mov
lock
incl
lea
mov
fdiv
and
mov
fdivrp
add
sub
or
ljmp
stos
xchg
lahf
mov
or
in
xlat
and
xor
mov
mov
xor
cmpsb
popf
push
call
hlt
daa
add
imul
leave
fwait
sbb
mov
pop
loopne
or
gs
lret
mulb
call
sub
stos
jnp
mov
aas
mov
arpl
and
add
mov
mov
out
fwait
xor
jmp
pop
clc
jg
aam
fsubrs
ret
ret
call
scas
lds
mov
or
dec
sub
das
les
out
pop
movsl
cmp
call
dec
imul
pusha
enter
adc
push
in
xchg
push
out
push
shrl
fisttps
aam
inc
loop
rcll
fucomip
call
movsl
fs
mov
push
dec
pop
repnz
lods
jmp
stos
push
cmp
das
divl
pop
ret
scas
dec
and
pop
mov
cmpsl
mov
ljmp
adc
shld
sbb
dec
fimull
mov
dec
inc
xlat
jne
ficoml
imul
push
dec
inc
movsb
lahf
pop
sarb
and
mov
and
jg
enter
or
scas
cld
jae
clc
ficomps
fldcw
mov
dec
int
retw
pop
xor
mov
popa
ret
imul
inc
mov
out
cmp
cmp
cmpsl
pop
loop
decl
aam
bound
and
insl
mov
jl
sub
jmp
dec
xorb
and
mov
enter
sbb
je
lcall
addr16
iret
inc
cmp
add
movsl
sbb
mov
mov
push
lods
cld
decl
std
pop
xchg
push
adc
bound
mov
mov
fimull
add
xchg
lcall
adc
stos
jns
cmpsl
adc
test
push
cmp
scas
push
and
loop
inc
push
incl
push
imul
in
hlt
jmp
push
rorl
push
movsl
adc
test
lret
sbb
stc
cvttps2pi
cmpl
inc
rorl
dec
mov
push
cmp
cli
push
cmp
mov
fistl
aas
mov
pop
aad
popf
loop
push
add
and
pop
dec
lcall
mov
repnz
fs
loopw
in
out
pop
imul
cli
adc
push
sub
push
and
and
das
icebp
fnstsw
icebp
imul
inc
sub
jnp
push
shlb
xchg
jg
jecxz
incl
lcall
aas
gs
lock
xchg
and
mov
mov
jg
inc
aam
psubusb
jns
out
push
shr
je
jmp
into
mov
jg
inc
mov
sub
xor
or
movsl
ljmp
push
inc
std
les
jge
mov
cwtl
popa
push
pop
dec
shrb
lock
out
jno
jle
sar
adc
fcoms
xchg
decl
loope
adc
call
mov
xor
inc
inc
dec
lcall
std
jmp
cli
call
int
mov
mov
lret
sub
sarl
ljmp
lock
es
sbb
lcall
mov
aaa
in
jno
or
incl
in
fcoml
je
xor
test
mov
and
aaa
inc
cwtl
or
dec
call
push
lds
jo
jo
adc
xchg
movsl
xchg
cli
ljmp
in
es
jp
pop
icebp
xchg
insb
aas
outsb
inc
jae
push
test
lods
cltd
outsl
hlt
js
and
dec
js
cmp
aas
enter
test
in
or
stos
inc
incl
adc
orb
in
call
jg
mov
push
adc
xchg
clc
aaa
push
mov
movsl
jbe
movsb
sub
or
aaa
cli
xchg
inc
adc
sub
xlat
shlb
jl
aaa
repz
ljmp
lds
mov
mov
jg
jg
repnz
cmpsl
shl
pop
mov
dec
int
inc
outsb
ja
pop
stos
incl
test
push
push
in
dec
cmp
jmp
inc
dec
dec
out
push
sti
push
and
mov
fnstcw
cmp
lods
cmp
pushl
mov
mov
fs
and
jnp
sub
pop
lds
insl
push
outsb
imul
insb
decl
add
adc
or
arpl
ret
sub
lcall
das
and
mov
test
addr16
cmp
sahf
insl
add
push
jb
or
inc
lret
sub
jbe
jecxz
fwait
sub
xlat
inc
leave
data16
push
mov
xor
fbstp
aam
add
and
movsl
and
mov
dec
jbe
shl
fwait
cli
jg
dec
sub
sti
or
push
jo
filds
xor
adc
sbb
cld
pop
xchg
mov
xchg
ja
inc
cmp
mov
loope
mov
insb
xor
pop
pop
pop
mov
push
or
ljmp
adc
sbb
scas
xchg
mov
inc
mov
arpl
and
pop
push
xchg
mov
rcr
les
dec
pop
mov
inc
pop
insb
pusha
rol
cwtl
cmp
loop
call
jle
jno
push
inc
or
lea
dec
cmpsb
mov
cmpsb
popa
test
in
cli
xor
sbb
mov
add
mov
loop
inc
ja
jb
push
hlt
in
jnp
lcall
xor
fisttpl
sbb
lods
popf
daa
icebp
int3
icebp
xchg
insl
mov
xor
mov
lcall
jmp
inc
push
shll
cmp
push
or
or
mov
lret
gs
inc
lods
shll
cmpsl
loope
sbb
imul
adc
and
cmp
rcll
movsl
jae
or
mov
xchg
leave
call
push
test
mov
jns
cwtl
addr16
push
mov
fcomps
adc
test
out
test
std
mov
in
add
mov
bound
jecxz
cmpsl
inc
ss
dec
cmc
or
inc
mov
sub
pushl
gs
sub
mov
xchg
add
arpl
fidivl
mov
adcb
in
fisubl
lcall
add
addr16
out
popf
loop
pushl
in
and
sbb
pop
sub
push
mov
ret
mov
fcomip
jbe
iret
jno
cmc
mov
mov
pop
lock
sbb
inc
and
mov
clc
out
push
jle
adc
inc
out
ret
sbb
mov
insb
clc
outsb
cmp
sbb
mov
sbb
mov
cmp
jg
inc
repz
and
dec
in
mov
lea
sbb
pop
repnz
imul
mov
sub
stos
add
jg
js
lods
shl
out
jb
mov
sub
push
dec
or
movsl
decl
fwait
dec
mov
mov
xchg
push
cwtl
push
inc
sbb
mov
or
jo
addl
cs
jnp
fstpl
jle
add
push
test
into
lds
gs
push
xchg
pushf
mov
mov
lds
pushf
sarl
iret
mov
push
outsb
or
ret
or
sbb
lock
call
sbb
xlat
test
xlat
cmp
fiaddl
pop
leave
je
sar
jmp
or
adc
jg
mov
sub
dec
ret
cmpsb
xchg
jnp
pop
add
add
sub
inc
decl
data16
push
outsb
add
xchg
mov
in
xchg
cs
ljmp
xchg
test
ret
cmp
ret
cld
mov
sar
push
iret
mov
sbb
dec
jg
mull
push
out
jmp
cmp
pop
movsl
ds
cmp
mov
pop
jle
dec
in
call
ret
fcomi
roll
mov
incb
xchg
mov
decl
mov
fldcw
pop
loope
mov
cli
mov
xlat
out
cli
repnz
clc
das
std
js
aad
jb
hlt
test
xchg
mov
mov
stc
stos
pushl
decb
scas
push
mov
sbb
mov
call
pushf
add
sti
mov
mov
mov
cwtl
sbb
mov
pop
int
adc
cwtl
movsb
in
lods
fcomi
aaa
insl
ficomps
lret
jge
adc
mov
lock
ljmp
sub
mov
scas
inc
cmp
daa
cltd
xorb
sub
mov
fwait
jbe
out
shrb
call
xchg
sbbb
nop
mov
or
push
cmp
in
push
add
ljmp
cld
lea
mov
mov
push
clc
fmul
fnstsw
xchg
in
add
fcoms
ljmp
adc
rcrb
jecxz
or
idivb
sbb
bnd
cmpsb
mov
fdivrs
pop
in
mov
cmp
jecxz
mov
call
add
adc
xchg
pusha
lret
stos
and
fneni(8087
sbb
mov
jle
jb
mov
and
imul
push
xchg
insb
movsl
push
mov
std
push
jbe
jg
pop
jb
std
inc
dec
dec
mul
std
je
and
jmp
test
lcall
fnsave
test
movsb
hlt
sbb
pop
aas
fidivrs
pushf
push
outsl
js
sbb
cmp
adc
iret
mov
mov
pushf
out
outsb
push
push
outsb
fistpll
pop
std
scas
push
sbb
addr16
test
insl
flds
push
mov
mov
mov
pushl
roll
xchg
mov
mov
pushf
mov
imull
test
ljmp
inc
test
dec
popa
adc
cltd
in
mov
pop
fdivrs
mov
imul
jl
or
mov
jg
lcall
les
cmp
xchg
and
pop
mov
popf
ud0
call
xor
pop
sarl
adcl
cmc
push
pusha
sub
mov
dec
jb
es
ds
cld
outsl
inc
fdiv
loope
pop
xchg
mov
xor
sub
fdivrp
out
or
sahf
lock
dec
xchg
inc
ljmp
dec
xchg
incl
lock
sub
clc
es
inc
and
aas
leave
dec
mov
sar
mov
aaa
movsb
mov
sbb
out
lcall
pop
add
jmp
mov
and
inc
xchg
xchg
andb
push
xchg
roll
or
out
add
pop
call
add
xor
incl
jle
pusha
pushf
mov
inc
gs
dec
pop
or
loop
stos
xor
ds
sar
lods
sbb
xchg
lea
pop
scas
movsl
jno
mov
ljmp
jmp
daa
xor
cmp
ljmp
sub
lret
mov
xchg
ljmp
das
arpl
sbbb
inc
push
es
mov
idiv
lcall
jl
call
xor
push
sub
xorl
lods
pop
ljmp
push
pop
push
scas
adc
mov
dec
orl
mov
sub
dec
or
fs
arpl
mov
jp
push
mov
ljmp
ljmp
js
lods
pop
adc
jg
fimull
js
mov
mov
dec
hlt
or
cmp
mov
jne
mov
mov
out
mov
pop
std
fs
lods
sub
fstl
test
lcall
fbstp
sub
scas
loopne
lock
xrelease
sub
or
push
pop
push
notl
adc
mov
mov
ficoms
fwait
popf
enter
lret
mov
or
clc
jmp
push
jne
jecxz
add
add
or
mov
pop
sahf
jae
fstl
lcall
mov
xor
cli
test
mov
in
or
cli
inc
fs
xor
jnp
pusha
stos
lods
inc
pop
and
sti
mov
ss
inc
mov
fistps
sub
mov
pop
ljmp
cmp
adc
movsl
jmp
jg
call
movl
jg
out
jl
aaa
gs
bnd
mov
cmp
and
scas
lahf
jecxz
mov
fisubrl
cmp
lcall
stos
sub
out
cmpl
sub
xchg
pop
sub
incl
mov
loopne
mov
rorb
mov
add
mov
mov
xchg
repz
mov
jl
mov
sub
cmpsl
lock
int3
movsb
xchg
bound
dec
pop
cltd
loop
mov
test
in
jp
pushl
or
push
sbb
out
loope
movsl
pop
mov
jp
adc
popa
and
jecxz
es
cld
jg
cmpsb
out
leave
fcomip
or
imul
sbb
fs
loop
inc
jl
insb
mov
decl
mov
fs
adc
pop
enter
jg
sub
fists
dec
cmc
mov
test
jge
jno
jne
js
je
into
xor
nop
in
decl
imul
jmp
stc
lods
mov
lcall
sbb
mov
or
pop
mov
aaa
xor
push
mov
mov
pop
sub
rorl
add
sbb
pop
cmpb
mov
pushl
jb
and
rorl
push
add
stos
pop
ret
pop
stos
call
shlb
inc
push
incb
in
push
and
into
lret
push
xchg
add
xchg
or
push
mov
pushf
jbe
add
adc
sbb
cltd
adc
push
pushl
xchg
jmp
inc
orb
adc
xor
loopne
jno
sbb
cmp
pop
addr16
sar
idivl
pushf
jne
or
dec
cwtl
lret
mov
arpl
dec
add
mov
sub
into
mov
pushf
mov
xchg
sbb
popa
aaa
decl
sub
bound
fisubrs
movsl
ss
cltd
into
js
cmp
or
icebp
call
add
cli
xchg
fists
push
mov
pop
adc
aam
jge
lods
subb
imul
push
inc
adc
pop
cli
outsl
out
cmp
xchg
sub
push
xchg
aaa
add
mov
mov
pop
xchg
mov
mov
lock
push
loop
xchg
pxor
mov
lret
and
iret
ljmp
add
movsb
inc
adc
das
mov
mov
lret
mov
ljmp
jne
push
fsubrs
jecxz
out
in
call
enter
xchg
arpl
das
xorl
mov
das
pushl
cli
sbb
divl
cwtl
sbb
int3
sub
ljmp
decl
pop
dec
dec
mov
cltd
mov
mov
mov
adc
xchg
push
sbb
fcompl
fnstsw
arpl
lea
cld
ficompl
mov
cltd
mov
fbld
lea
sar
xadd
push
xchg
xor
sbb
mov
sub
jo
icebp
xchg
cmp
jge
sbb
mov
call
pushl
ljmp
xchg
jb
es
cltd
iret
pop
scas
mov
push
dec
mov
jmp
nop
jmp
mov
paddusw
cmpsl
pop
cmp
out
pop
sbb
cli
mov
repz
scas
scas
push
dec
es
pop
push
rcrl
jmp
pop
lcall
adc
dec
clc
ds
cmp
mov
jmp
dec
cmpb
mov
jae
inc
insb
push
pushf
bnd
mov
fldcw
jg
add
std
pop
push
add
cmpsl
outsl
aad
cmp
std
mov
outsb
pop
cmc
push
out
addr16
sub
dec
jp
outsl
adc
fdivrl
pop
sub
pusha
push
or
test
or
mov
sbb
jmp
enter
add
out
sub
mov
pop
lods
popa
sti
repz
pop
call
das
add
mov
test
sti
jp
inc
scas
adc
mov
add
pop
or
arpl
test
sbb
lahf
leave
xor
mov
sti
jb
mov
cltd
pop
repz
cli
mov
mov
cltd
imul
xchg
clc
ljmp
ja
xor
dec
icebp
jl
loopne
xor
lcall
sub
pushl
lea
jg
adc
lods
push
cli
mov
hlt
adc
stos
or
rclb
in
outsb
cmpsb
hlt
cmp
ud0
pushl
shl
adc
imul
mov
shll
cmc
ljmp
push
insb
push
pop
mov
sbb
shrb
lcall
mov
lock
cmpsl
cwtl
lcall
cwtl
add
dec
cwtl
fnstenv
pop
ds
sub
in
sub
and
cmp
cmp
cltd
xor
dec
ss
test
push
or
test
scas
hlt
pop
cli
ljmp
pushl
dec
pop
sub
mov
lahf
sbb
call
sub
mov
sub
adc
sahf
dec
sub
fwait
xor
add
adc
or
fstl
cltd
ja
outsl
sbb
ljmp
shrb
pop
icebp
test
jmp
mov
and
add
addr16
push
cmp
push
xor
test
jmp
push
dec
popf
xor
daa
icebp
sub
jl
jnp
and
icebp
in
cld
stos
adc
xchg
jg
or
jg
inc
adc
cmpsb
das
adc
xor
in
xchg
jmp
xor
pushl
xchg
movzwl
pop
xor
int3
out
sub
mov
ja
stos
push
inc
push
in
pop
pop
mull
stc
ret
sahf
cli
ljmp
adc
divps
and
adc
repz
call
or
add
ds
jae
outsl
jne
arpl
inc
fstps
lcall
dec
cmp
push
je
stc
imul
push
cmc
jg
decl
mov
js
popf
rorb
int3
or
loop
lcall
ds
add
pop
cs
add
call
push
sbb
std
adcb
out
adcb
jg
mov
mov
in
incl
cmp
je
popa
sbb
jns
fmuls
ds
or
in
mov
insb
lret
aaa
leave
clc
incl
fcomps
notl
das
ret
insl
jg
or
scas
out
cmp
lcall
leave
cmp
inc
xor
adc
mov
push
rcrb
xchg
gs
xor
cmp
stos
sbb
pop
idiv
incl
dec
loope
pop
stos
push
dec
inc
pop
popw
pop
dec
and
add
ss
or
jne
ljmp
adc
inc
cmpxchg
or
push
or
dec
mov
pop
mov
xchg
loope
adc
sbb
mov
or
or
je
in
push
fisttps
fsubp
push
mov
dec
xchg
jge
xor
jmp
aaa
cli
fldcw
mov
ss
add
jge
rol
cmp
sahf
mov
in
jle
popf
dec
decl
insl
sti
fsin
and
cld
shrb
movb
adc
decl
sbb
mov
pop
shll
push
std
cmp
sub
out
dec
inc
std
jg
mov
push
jecxz
sbbb
test
xchg
out
sub
ljmp
sbb
ficoms
xchg
lock
xchg
call
ljmp
jnp
cmc
cmpsl
pop
mov
inc
mov
fcoml
jg
daa
leave
daa
outsl
divb
mov
rcrb
pop
cmp
ja
flds
loopne
test
incb
cmp
out
out
aad
sub
test
mov
iret
fs
inc
out
sarb
mov
cmp
jg
inc
mov
lods
pop
sub
mov
xchg
jo
inc
sbb
push
jmp
sub
jg
jmp
jp
ja
push
hlt
mov
ljmp
sbb
fwait
ret
lock
outsb
lods
in
or
repz
stos
repnz
std
xchg
lcall
jae
mov
fucompp
pop
shr
pop
inc
xchg
jne
cmpl
xchg
cmp
ljmp
cld
adc
popa
inc
in
loope
push
jle
cpuid
addl
adc
shlb
sti
dec
jl
fcomip
data16
aam
mov
push
inc
sar
lods
int
lahf
shll
mov
jmp
push
test
add
jmp
mov
inc
roll
sub
add
out
dec
std
decl
popa
mov
push
aaa
mov
fstpl
bound
out
and
lcall
cld
rclb
xor
scas
xchg
lret
jne
xor
decl
jbe
cmpsl
sub
mov
rorl
add
imull
cmc
inc
push
decl
in
das
adc
sub
mov
sahf
daa
pop
and
les
pushf
scas
jge
aam
mov
dec
cwtl
pop
dec
jle
mov
cmp
sarl
rcl
ret
adc
xchg
loopne
pop
push
xchg
and
lcall
gs
xchg
or
pop
mov
mov
cmp
cwtl
pop
mov
jge
into
lcall
in
sti
js
pop
jg
and
inc
xchg
mov
push
repz
out
fnsave
in
cmp
lcall
mov
lret
in
pushf
mov
dec
adc
fwait
cmp
pushl
push
fimull
mov
pop
aas
das
sahf
fisubrs
lock
mov
xor
std
dec
cmp
gs
es
mov
test
pop
in
mov
sbb
dec
dec
aad
mov
pop
xor
dec
push
leave
or
jl
ljmp
cmp
subb
inc
mov
mov
test
cli
or
dec
ret
dec
xchg
mov
call
outsl
jnp
add
cmp
sub
sti
push
repnz
jnp
xchg
jmp
js
xor
jbe
lahf
and
and
xor
arpl
popa
and
insb
decl
cld
inc
or
lds
xor
outsl
fcomp
jmp
test
insl
and
das
cld
mov
push
pop
push
mov
cmc
xor
js
out
xlat
jno
mov
push
add
fnstcw
jl
in
sub
jmp
inc
arpl
pop
lea
or
push
jmp
rcr
xchg
mov
aad
pop
lret
sar
incl
lods
jo
pushf
pop
cld
and
roll
dec
mov
ljmp
decl
mov
inc
in
mov
lock
jp
mov
mov
jl
out
adc
dec
cmp
mov
imul
jle
mov
xchg
and
mov
inc
ljmp
fwait
iret
mov
push
mov
sti
push
aad
and
sub
sub
incl
lock
hlt
and
pop
pusha
jnp
push
push
cmpsb
test
mov
xor
pushl
cmpsl
repnz
jns
in
push
cmp
stc
js
cld
jmp
xchg
add
sub
scas
jb
in
out
pop
dec
jb
cld
add
in
incl
rorb
add
iret
push
aaa
jge
jecxz
outsl
hlt
and
ljmp
dec
jnp
add
jmp
pop
and
std
cltd
or
cmp
pop
decl
fwait
stos
dec
lahf
xchg
movsl
xchg
push
push
mov
jnp
cmp
test
dec
sbb
mov
bound
lods
adcl
das
cld
jbe
mov
rclb
into
ljmp
adc
ja
ds
xchg
push
push
fistpll
mov
mov
xlat
lcall
jmp
stos
xor
loop
jo
in
int
mov
mov
add
ljmp
mov
clc
pop
mov
xor
or
fs
lcall
adc
push
xor
jb
test
jge
loope
adc
jns
insl
and
jb
push
out
add
push
or
or
stc
mov
lahf
aad
cmp
cmp
inc
or
testl
inc
orb
ret
lahf
or
jmp
adc
rorb
in
ret
imul
jg
incl
popf
pop
into
pop
xor
iret
mov
mov
loopne
mov
roll
mov
addl
mov
insb
jp
out
call
movsl
pop
aad
mov
cmp
dec
pop
dec
loop
push
mov
pushl
xor
cs
int
in
or
scas
dec
jmp
and
scas
fs
mov
add
mov
inc
in
jns
aas
cs
mov
das
flds
jnp
cmp
lock
hlt
jg
les
cs
test
add
out
shlb
jl
imul
icebp
cld
int
enter
cmp
inc
nop
inc
xchg
pop
sub
adc
sti
das
hlt
outsl
cmc
lcall
das
loop
pusha
stc
mov
jl
inc
cmp
call
sahf
mov
ficoms
fiadds
fwait
cmc
ljmp
dec
loop
dec
add
pop
clc
inc
mov
hlt
xchg
push
mov
pop
mov
mov
popa
inc
mov
addr16
mov
aas
jmp
jge
xor
or
mov
add
add
pop
pop
imul
jnp
js
and
jg
jl
jno
pop
mov
movsb
and
test
mov
jg
push
shll
ja
cmp
aaa
clc
call
andb
int
out
nop
test
decl
inc
fmul
repz
sahf
mov
mov
fucomi
decl
in
mov
and
pop
mov
imul
jecxz
lret
test
mov
push
xchg
bound
pop
std
ffreep
jb
jge
jge
adc
mov
cwtl
js
cmpb
negb
imul
in
mov
idiv
inc
push
inc
ljmp
sbb
repnz
stc
lock
sar
cmp
sbb
mov
cmp
cld
lcall
adcl
adc
mov
lret
cld
pop
das
cld
ljmp
sbb
mov
dec
imulb
and
call
cli
ljmp
jno
sub
les
xor
stc
pushl
mov
push
jb
sbb
rorb
mov
aaa
sbb
scas
mov
jp
and
push
and
ljmp
idivb
add
jns
call
mov
mulb
rorb
movsb
mov
add
add
cmp
push
pop
into
adc
jo
ljmp
cmc
repz
ret
and
rorb
add
cs
decl
ret
out
shlb
dec
imul
ffree
test
out
or
out
cmp
mov
std
aam
add
popa
mov
mov
jg
cmp
lret
and
xchg
iret
js
fistps
fwait
adc
and
lea
xor
data16
push
insb
repnz
fiaddl
lret
ret
adc
or
fadd
outsb
mov
mov
jp
sbb
outsb
sub
push
sub
and
pop
clc
mov
and
sbb
lcall
int3
xor
add
outsb
push
and
xchg
lods
add
and
xchg
fisttpll
lcall
push
inc
dec
test
mov
inc
push
mov
xor
or
mov
incl
xchg
xchg
dec
decl
loop
in
mov
mov
push
mov
scas
popf
lock
cli
mov
push
ljmp
aas
cltd
jl
daa
dec
ljmp
sub
repz
mov
fisttps
js
mov
push
pop
int3
add
addr16
movsb
mov
xor
push
sub
and
dec
adcl
and
setge
mov
sbb
out
jp
data16
shlb
daa
pop
test
aaa
mov
jmp
mov
out
sti
mov
sar
jg
fstps
pop
inc
inc
push
clc
xchg
mov
mov
stos
js
push
pop
inc
frstor
in
cmp
inc
test
addr16
push
dec
or
mov
nop
es
and
jmp
lret
fstl
mov
mov
rorl
repnz
jg
pushl
fucomip
mov
pop
outsl
and
stos
ljmp
xchg
fbld
decl
lods
mov
xchg
push
pop
cmp
jmp
mov
add
add
cmp
xor
cmp
fisttpl
mov
cmpsl
out
in
inc
ljmp
gs
into
insb
cmp
or
mov
mov
pushf
movsl
aaa
jb
out
adc
mov
sub
cmp
les
sbb
dec
fnstcw
mov
jmp
jae
mov
add
xor
lahf
std
mov
clc
decl
std
pop
mov
cmp
adc
xor
pushf
das
sbb
pushl
lods
cmc
int
ficoml
sub
inc
push
call
sbb
cmp
push
adc
ljmp
negl
into
and
out
call
sahf
sbb
mov
inc
nop
popa
jns
jno
pop
movsb
shrb
mov
sbb
shll
int
lods
pop
clc
decl
and
repnz
jl
vrcpps
mov
lods
jmp
push
pop
test
sbb
in
sub
loopew
in
test
dec
fiadds
cmp
lret
into
bound
mov
fbstp
aas
ja
icebp
lds
orl
fs
jnp
push
adc
sbb
or
ret
loop
nop
iret
cmp
pop
in
jl
dec
addl
pop
fistpll
nop
pop
sub
xor
mov
pushf
push
sbb
jne
mov
jne
out
mov
in
out
sbb
add
jno
lcall
das
shlb
mov
cld
and
repz
add
iret
xchg
outsb
xor
in
dec
or
cmp
movl
pushl
int3
and
xor
xchg
xlat
ror
rcll
sub
xor
ljmp
rol
adc
cmp
repz
push
hlt
cmc
inc
cltd
fdivs
cwtl
mov
clc
ss
sbb
cmc
aad
movsb
dec
mov
inc
jp,pt
stc
daa
test
popf
test
lcall
lahf
sbb
mov
sbb
fsts
insl
xchg
pop
adc
dec
mov
aam
in
and
mov
and
or
or
xchg
je
xor
out
imul
or
fs
inc
jg
dec
orl
js
add
jge
outsl
jp
aad
mov
nop
cld
ljmp
push
lcall
cmp
sbb
sub
adc
ljmp
cli
push
cltd
mov
mov
adc
mov
pop
fsubr
xchg
inc
lds
push
call
fnstenv
mov
scas
neg
xor
ljmp
bnd
in
outsl
mov
out
out
xchg
mov
lods
cmp
in
jge
fidivrl
pop
cmp
clc
mov
pop
push
or
xor
mov
ror
lahf
scas
lcall
add
rol
rolb
ljmp
and
call
incl
mov
rorl
xlat
push
mov
test
or
loope
loope
cli
call
adc
subl
push
and
push
fsubrl
es
push
or
inc
jg
or
pusha
andb
lds
js
jo
xchg
push
mov
xchg
adc
xor
incl
cmp
outsl
cmp
ljmp
faddl
mov
cld
repnz
jno
fisubs
xchg
fs
cs
xor
sub
call
push
fwait
push
stos
stos
mov
popf
push
sub
clc
rcrb
push
mov
sbb
pop
js
cli
mov
mov
cmpsb
out
dec
insb
aam
fisttps
sar
movsb
jns
jg
cmp
mov
mov
stc
cmp
incl
std
lcall
aad
inc
into
imul
cmp
fisubrl
push
mov
jge
lds
gs
je
popa
sbb
loopne
out
cmpsb
jg
fdiv
dec
outsl
iret
add
adc
adc
sarb
insb
xlat
andb
inc
dec
ds
push
sbbb
cmpsb
mov
rcl
das
lret
js
loop
ljmp
push
sbb
inc
cmp
aas
push
lock
mov
ljmp
gs
sbbl
jns
rcrb
ja
pop
cmpsb
iret
lcall
std
aad
pusha
data16
cmp
fcoms
xor
jne
outsl
mov
fwait
xchg
sahf
data16
or
cmp
fdiv
sbb
call
jge
dec
imul
add
xlat
ja
insb
jb
in
daa
push
jp
sub
mov
inc
sub
jmp
rcrl
mov
xor
fstp
jl
testl
push
in
sub
pushl
inc
xchg
mov
dec
xor
pop
shlb
adc
leave
pop
aaa
inc
call
rcrb
jl
pop
inc
das
popa
push
jo
sub
out
loope
hlt
inc
xor
pop
clc
or
enter
cmc
adc
imul
iret
int
cmpb
fnstenv
add
repz
test
nop
mov
call
dec
sbb
in
sbb
int
push
popw
jb
xchg
clc
fs
test
divl
mov
cwtl
les
and
adc
push
sbb
jmp
sub
jle
mov
fwait
jecxz
push
xchg
push
mov
pop
push
out
cmp
push
ljmp
sub
data16
push
cmp
sub
outsl
mov
sahf
mov
lret
fidivs
and
pop
outsl
std
ljmp
push
mov
pop
clc
mov
les
filds
pop
adc
dec
push
mov
sub
add
sub
push
lahf
push
cmp
adc
sub
and
sarb
fwait
fwait
xchg
jge
scas
hlt
ds
loopne
mov
xchg
mov
inc
push
xchg
in
or
mov
sbb
stos
jg
mov
ret
subb
mov
dec
cmpsl
add
call
jg
imul
into
fildll
aaa
aad
push
sbb
subb
mov
lahf
mov
test
mov
sbb
hlt
aad
xor
orb
call
pop
cmpsl
addr16
pushf
pop
addr16
lret
xor
jae
push
call
pop
pop
loopne
dec
int
js
aas
cmp
lcall
insl
test
cmp
or
pop
inc
stc
rorl
fistl
test
fidivrs
loopne
mov
jg
repnz
addb
or
inc
dec
outsl
pop
jo,pn
lcall
mov
and
xor
aas
js
pop
xchg
imull
notl
push
jecxz
push
decl
push
mov
int3
andl
xor
cli
and
jno
sti
flds
popf
lcall
pop
adc
jbe
sbb
mov
addr16
lods
int
fmull
mov
scas
jl
in
pop
imul
jg
ja
jle
sub
sub
movsb
sbbb
aad
sti
adc
cld
mov
shll
xchg
js
xchg
aad
ljmp
cmc
mov
test
jmp
stos
xor
sbb
mov
test
sub
dec
ljmp
or
jmp
pop
nop
cmp
cli
sub
push
jge
mov
jne
mov
fildl
push
test
jecxz
decl
push
push
cmp
or
mov
mov
xlat
add
imul
decl
insl
cmpsb
push
push
outsb
pop
dec
mov
mov
jg
push
das
imul
fadds
mov
push
decl
cld
aad
data16
mov
xor
xor
enter
mov
pop
xlat
cltd
test
ss
adc
stos
mov
inc
adc
add
mov
mov
popf
cli
fucomip
dec
scas
fdivp
shlb
hlt
mov
add
push
mov
jmp
mov
mov
push
loop
ljmp
push
and
fdivrl
insb
out
mov
fcmovnb
adc
popf
xor
insb
push
loope
jl
xchg
das
std
lcall
pop
icebp
test
cmpsb
ficoml
xchg
lods
pop
mov
push
ficoms
in
stos
call
add
jne
pop
pop
xchg
loopne
scas
test
lahf
into
push
popf
xchg
loopne
sbb
ret
or
in
sti
pop
sub
dec
lds
in
xchg
sub
das
cld
lcall
mov
dec
fisubl
jg
inc
icebp
aas
data16
push
inc
add
jmp
inc
sti
jne
push
rorl
adc
sub
test
push
xchg
mov
lcall
incl
or
subl
mov
xor
add
fidivs
inc
lods
ljmp
std
stc
mov
data16
sub
adc
bound
stos
jg
mov
add
adc
fs
loopne
mov
jg
adc
daa
lret
mov
jmp
xor
mov
insb
sub
add
mov
xchg
stos
ret
sbb
mov
hlt
push
xchg
xor
dec
jmp
mov
and
and
popa
iret
adc
shrl
pop
and
in
mov
xchg
mov
inc
pop
cmpsb
in
cmpsl
pop
mov
pop
daa
cmp
jbe
mov
cmp
lret
enter
aam
dec
out
xchg
lcall
out
cwtl
hlt
mov
pusha
mov
inc
das
aad
call
pop
cmpl
pop
cld
scas
repnz
dec
lcall
ljmp
icebp
call
jno
in
or
jae
mov
mov
test
ret
mov
in
add
dec
call
sbb
imul
lcall
cwtl
xchg
insb
mov
scas
push
and
push
mov
xchg
jo
push
stc
mov
jge
mov
test
dec
inc
fsts
fwait
mov
sbb
fwait
pushf
push
sbb
pop
push
ret
ret
mov
in
test
mov
dec
xor
and
or
sub
jmp
pop
add
jle
shlb
hlt
call
incl
dec
dec
inc
iret
cmp
arpl
test
push
xchg
in
mov
orl
mov
add
jns
mov
xchg
jecxz
lcall
pop
adc
pushl
xor
arpl
shll
add
pop
div
in
push
push
jno
movsb
pop
imul
test
inc
cmp
sbb
stos
and
or
or
adcl
and
andl
jo
xchg
mov
lret
aaa
clc
jmp
jecxz
into
push
icebp
mov
sub
js
mov
outsl
ljmp
add
out
repnz
pop
sbb
sbb
imul
or
cld
imul
xchg
addr16
jnp
mov
fisubrl
xor
fnstcw
imul
adc
push
dec
lret
dec
movsl
mov
cli
pushl
xchg
in
adc
dec
mov
imul
jp
sar
add
das
inc
xor
push
push
fbld
fisttpll
cmp
scas
aas
push
in
fwait
push
mulb
and
mov
add
add
popa
rol
push
and
or
mov
adc
fcmovnb
pop
insl
gs
lods
mov
jno
cmp
add
push
jl
jmp
std
xor
das
cmp
jl
pushl
cmc
mov
in
lock
pop
cld
aad
out
int3
rclb
xor
popf
icebp
ds
decl
pop
adc
ret
lea
cld
mov
ss
ljmp
call
fiadds
push
mov
mov
ljmp
int3
add
cmpsb
mov
jbe
loopne
xor
mov
scas
popf
into
pop
ljmp
jg
decl
addr16
pop
adc
out
push
sub
cmp
push
mov
aaa
clc
add
adc
xchg
sahf
push
insl
push
cmc
jae
mov
decl
or
xor
ss
adc
mov
rclb
mov
fwait
lcall
cmp
push
push
shlb
mov
push
lock
push
push
into
bswap
callw
dec
or
call
pop
test
popf
out
popa
mov
in
push
sbb
jmp
data16
iret
int
mov
fsubs
sbb
rcrb
push
test
pushl
mov
inc
lock
push
imul
imul
ss
ds
cltd
inc
sahf
lock
jnp
cmc
sub
pusha
lahf
push
into
mov
fisubs
or
add
ds
fnstsw
sbb
pop
dec
cmp
mov
nop
hlt
ljmp
xchg
dec
test
push
jo
mov
cmpsl
stos
jge
push
test
clc
std
add
mov
bound
ja
nop
adc
mov
ret
dec
sbb
std
mov
pushl
shlb
loop
mov
and
jg
dec
sub
xor
pushl
mov
inc
sub
add
popl
test
outsb
inc
xchg
push
dec
pop
and
jl
std
add
push
sbb
xchg
push
xor
mov
call
add
int3
mov
ja
push
or
add
jbe
int3
sbb
lahf
xchg
subb
push
jb
pop
lock
sub
sbb
push
inc
push
test
popa
pusha
ret
shrl
cmp
insb
enter
std
lret
dec
sti
xchg
xor
push
push
mov
leave
xchg
int
jne
or
cmp
movsl
add
add
pop
mov
adc
inc
pop
pushf
xlat
imull
rclb
incl
sbb
and
fmuls
ljmp
push
inc
and
lds
dec
dec
xor
mov
jg
xchg
aam
fucomip
incl
pop
test
add
movsb
and
mov
mov
jg
into
sub
add
out
jecxz
icebp
stos
out
stos
pop
jnp
in
inc
mov
jl
outsl
lock
call
test
pop
sysret
sub
dec
les
daa
aas
lahf
sub
dec
lea
pop
lcall
add
addb
test
adc
jne
jae
lcall
std
xor
mov
stc
outsl
rorb
andb
test
jg
ret
loopne
test
aad
jl
xor
ret
lret
setno
xor
in
pop
lcall
outsl
fdiv
mov
fidivl
imul
repnz
sbb
sub
push
js
mov
bound
loop
push
push
popf
push
sbb
cmp
jmp
and
movl
bound
sbb
insb
jo
in
xchg
adc
mov
incl
ficoml
clc
pop
mov
cwtl
mov
imul
mov
or
pushl
jno
pop
sbb
jnp
popa
push
adc
into
push
sub
xchg
jmp
or
pop
sbb
shll
notb
push
icebp
add
jae
sti
add
in
mov
jg
out
sbb
adc
push
xchg
addr16
ja
incl
sahf
insl
mov
mov
mull
and
lods
or
shll
aad
in
mov
pop
xor
jl
in
in
jge
ljmp
xorb
scas
pusha
dec
push
inc
mov
cmp
xor
into
or
lcall
das
push
cmp
loopne
or
cwtl
pop
movsb
sub
ljmp
xchg
outsb
mov
jl
and
push
cld
inc
hlt
addr16
mov
movsb
or
xchg
in
jg
push
aas
mov
xor
pop
decl
movsb
push
inc
dec
or
push
sbb
mov
jmp
cmp
push
mov
mov
lret
or
mov
popf
lahf
jp
mov
xor
fidivl
ret
add
test
adc
adc
sbb
decl
in
mov
test
pop
sbb
jmp
hlt
sbb
inc
out
jno
mov
sbb
icebp
stos
cltd
mov
mov
add
cmc
shlb
lcall
jmp
xchg
hlt
cmp
gs
mov
data16
dec
push
inc
xor
sbb
mov
cmpsb
cmp
incl
sahf
clc
and
adc
push
cmp
xchg
ret
test
adc
sub
cmc
dec
mov
call
incl
push
lock
jge
adc
int
jecxz
imul
outsl
movsl
inc
sub
mov
pop
jo
xor
notb
icebp
push
lret
loope
sti
xchg
lret
jae
jp
jp
dec
fwait
pop
leave
sub
pop
mov
pop
loopne
clc
fisttpll
inc
out
loopne
dec
aam
ret
andb
mov
and
sub
es
lcall
cli
scas
mov
pop
inc
xor
in
mov
xor
jno
test
es
or
jbe
in
cmp
inc
dec
rorl
jmp
nop
mov
insl
push
dec
add
sub
es
mov
inc
dec
std
pop
inc
pop
hlt
jp
xchg
mov
add
inc
in
aad
jecxz
icebp
adc
sbb
pop
popa
sar
jmp
cltd
in
jae
das
push
or
and
imul
push
mov
sub
push
addb
divl
cmp
xabort
jmp
jmp
xor
mov
subb
adc
jg
xchg
cmpsb
aaa
lcall
jbe
pushf
adc
scas
clc
in
popf
adc
or
sbb
mov
push
push
shlb
cmc
aas
sub
add
pushl
ja
insb
ljmp
xadd
add
xor
sub
outsl
insl
add
mov
aad
jmp
imul
xchg
mov
and
mov
xchg
cli
out
leave
mov
mov
jp
repz
rorb
mov
es
repnz
loopne
xor
mov
syscall
sub
ss
mov
call
cmp
xchg
dec
dec
jecxz
mov
mov
mov
adc
jg
jno
add
mov
test
adc
pushf
lcall
filds
sbb
push
out
cmp
fs
mov
and
push
sbb
packssdw
mov
cmp
test
pop
jne
cs
sbbb
incl
pop
or
pop
push
jl
push
dec
icebp
testl
pushl
daa
pop
insl
sbb
sub
pop
fs
mov
ret
cs
or
jmp
xchg
fwait
out
inc
out
adc
xchg
push
jp
xchg
and
xor
ljmp
and
fnstsw
mov
dec
andb
inc
mov
fdivrs
push
loop
incl
movsl
call
sbb
dec
jecxz
or
jl
sti
ja
aad
jmp
xchg
imulb
sub
sbb
or
lds
aam
fstps
mov
imul
xor
aaa
es
addr16
shrl
int3
push
cmp
call
mov
pop
add
ret
mov
inc
pop
rorl
lcall
cmp
cwtl
and
daa
mov
es
pop
lret
xchg
outsl
cld
and
adc
cmp
lods
insl
aam
ds
shll
cmp
test
in
xlat
jb
mov
pop
test
xchg
loopne
jb
xchg
clc
jle
jbe
mov
xchg
mov
add
fidivrs
in
out
pop
stos
enter
xchg
clc
ljmp
xchg
cmp
scas
sbb
adc
loope
push
push
insb
lods
push
sar
pop
pop
hlt
call
jmp
and
pushl
cli
mov
fcoml
int
out
outsl
fwait
push
ss
test
cltd
out
sub
xor
ficompl
das
sbb
scas
mov
sbb
mov
push
push
push
jae
test
lcall
incl
shr
outsb
lods
jb
xor
fs
lock
loopne
call
jg
das
shr
idiv
or
sub
lods
cmc
lods
into
push
jnp
push
in
inc
loop
out
fadd
pop
add
mov
pop
xor
test
fists
icebp
test
addl
xchg
scas
xchg
movsb
mov
cmp
mov
jle
sbb
xor
lcall
fistps
pop
shll
mov
outsl
scas
mov
cmp
mov
mov
fdivr
jmp
pop
and
dec
push
pop
sarb
cli
decl
inc
sahf
cmp
insl
sub
and
int3
xor
ljmp
adc
inc
jno
push
inc
mov
loopne
enter
dec
jg
jecxz
call
inc
int3
hlt
lret
xor
xchg
inc
lea
and
ljmp
mov
mov
icebp
cmpsl
push
into
gs
aaa
out
out
xchg
push
fs
dec
das
and
loope
and
lcall
xor
push
ljmp
and
in
push
cmpsl
mov
ljmp
mov
popf
mov
cmpsb
mov
sbb
or
or
ljmp
stos
dec
mov
mov
aad
mov
shlb
movsb
dec
or
dec
std
xchg
cwtl
in
pop
mov
mov
mul
jo
test
add
sbb
xchg
dec
push
mov
mov
dec
pushl
or
mov
test
arpl
cmp
jle
mov
ja
jmp
lods
xor
cmp
mov
and
jne
xchg
xor
pop
inc
ds
leave
mov
adc
push
call
xchg
xchg
sarb
decl
mov
iret
jmp
insb
testl
inc
pushf
push
pop
dec
push
mov
scas
and
cmp
jg
jo
adc
decl
icebp
mov
pop
rcl
xor
lea
mov
pop
mov
adc
push
dec
sub
scas
sub
call
jae
ja
add
mov
std
xor
pop
call
loopne
fiadds
mov
and
xchg
jg
insb
filds
xchg
in
sbb
cmpsb
cmpsl
cwtl
imul
fldt
sub
mov
shl
ljmp
push
cmp
test
hlt
decl
cmp
dec
fmul
or
or
or
cmc
mov
pop
xchg
je
jo
inc
push
popa
xor
mov
cmp
and
jmp
mov
sbb
icebp
cltd
pushf
cmp
inc
push
lcall
imul
pop
ret
cmp
sti
sti
outsl
fimull
daa
shrl
adc
xchg
adc
or
cwtl
xor
xchg
or
incl
dec
adc
or
fstpl
icebp
xor
test
push
push
cmpl
and
out
aas
out
sbb
pop
outsb
stos
mov
lea
sub
clc
call
std
aas
inc
pop
jo
push
mov
sub
popf
jno
xchg
fs
xor
jnp
popf
inc
lcall
dec
imul
dec
sub
mull
sbb
mov
mov
jle
mov
jl
in
jp
mov
movsb
sbb
dec
jmp
cmp
mov
pop
lds
fdivr
jge
sub
cmp
leave
clc
xor
xchg
fcomp
sbb
ret
inc
aad
xchg
xchg
mov
mov
lcall
adc
jbe
dec
add
xchg
dec
les
dec
mov
mov
arpl
add
adcl
jle
test
add
pop
push
mov
cld
daa
ja
outsl
int
mov
jnp
je
xor
scas
dec
push
ret
mov
call
push
adc
std
xorl
jmp
dec
rclb
loope
gs
hlt
lock
mov
sbb
icebp
imul
call
faddl
xor
inc
mov
jp
sarb
add
mov
decl
test
bound
pop
mov
or
stc
pop
out
aaa
das
lock
push
idivb
test
dec
testl
sbb
arpl
outsl
cmpsb
push
ss
in
pushl
jae
idivl
xchg
dec
or
mov
xor
cwtl
fcompl
adc
std
mov
pushf
outsb
cmp
dec
dec
jp
push
sub
mov
cmp
lcall
dec
mov
pushl
sbbl
call
ss
aad
sti
call
xor
mov
fs
push
inc
into
call
into
pop
popa
rolb
jne
ss
outsl
sub
dec
out
les
xchg
sbb
pop
aaa
jg
cli
jle
data16
repz
add
sub
xor
add
sbb
xchg
mov
mov
sub
and
popf
enter
mov
test
jge
and
in
xchg
mov
call
dec
outsb
adc
mov
outsb
cmp
pusha
mov
out
fists
call
mov
push
lcall
and
jmp
cld
jmp
movsb
jmp
xchg
jno
push
stos
data16
pusha
xor
ret
dec
int
mov
pop
ja
and
xchg
sbb
xor
loope
mov
pop
inc
roll
daa
fisubs
and
arpl
pop
sbb
inc
out
adc
test
mov
add
pop
in
iret
and
leave
pop
loope
add
fldcw
fisttps
jns
loopne
pop
ret
out
and
jmp
stos
jno
ret
push
inc
js
push
sub
incl
xchg
jp
pop
addl
and
aaa
sub
call
pushl
aad
push
daa
inc
mov
push
push
imul
decb
cld
mov
jp
icebp
mov
jo
fwait
pop
push
lcall
gs
jp
lahf
out
mov
mov
jge
aaa
push
sbb
push
lcall
dec
push
out
pushf
rol
addr16
jge
push
loop
cmpsl
popf
cld
or
cmp
pop
idivl
aam
pop
arpl
cltd
jmp
outsl
into
inc
mov
lahf
inc
out
test
lret
ljmp
leave
int
jecxz,pn
rol
call
lds
mov
push
mov
pop
pushf
lock
cwtl
push
adcb
pop
cld
incl
push
xchg
dec
mov
and
xchg
sub
inc
dec
jo
aaa
fdivr
fwait
outsl
push
mov
cmp
inc
or
fistpl
jg
call
and
sub
or
cmc
insb
cmp
pushl
xor
leave
ret
adc
mov
push
or
jle
cmp
ljmp
inc
insl
xchg
sarl
lods
xchg
sbb
into
int3
or
jecxz
hlt
ljmp
or
push
push
pop
cmp
push
pushf
loopne
xor
sub
cmp
clc
mov
jae
shrl
jo
fsts
icebp
inc
dec
aas
outsl
dec
jne
pop
and
and
call
out
inc
jb
sbb
lret
clc
ljmp
and
jge
lods
into
ljmp
clc
add
xchg
inc
icebp
incl
decl
movsl
insl
dec
push
fs
hlt
imulb
jmp
adc
inc
in
jnp
add
arpl
or
xor
jne
fbstp
jle
xchg
fwait
pop
fucomip
jmp
cmp
sbb
mov
movsb
jno
insb
int
mov
lods
pushl
adc
xchg
push
inc
sbb
xor
fldcw
cltd
repz
push
pop
data16
dec
lahf
int3
neg
inc
xorb
in
nop
cmp
inc
mov
push
loopne
jle
fstps
jecxz
fcomps
decl
ljmp
sub
ret
call
outsl
incl
pop
dec
outsb
or
xor
insl
pop
add
mov
sbb
frstor
pop
leave
xchg
pop
dec
mov
inc
xchg
mov
loopne
jae
mov
xchg
jmp
xchg
std
cs
out
push
add
xchg
pop
insb
movsl
aaa
movsb
jne
adc
cmp
ret
addr16
ljmp
scas
push
mov
or
incl
pop
xor
cmpsl
xchg
ja
mov
aad
fsts
xchg
sti
lea
push
in
and
and
dec
mov
pushl
iret
xor
adc
sarb
fstps
xor
call
das
aam
jmp
call
repnz
sub
popf
mov
xchg
and
arpl
das
dec
insb
in
push
xor
push
pop
dec
call
scas
movsl
adc
ds
jge
inc
test
adc
out
cmpsb
enter
pop
dec
enter
out
mov
in
jmp
setae
mov
mov
inc
ds
aad
rolb
ja
addr16
pop
popa
std
outsl
add
dec
cmpsl
mov
cmp
mov
pop
test
dec
jmp
sbb
mov
incl
cmp
or
jns
sbb
add
xchg
rorl
in
dec
push
gs
inc
decl
je
std
in
stos
pop
pop
cmp
clc
mov
xchg
mov
in
stos
xchg
sbb
test
andb
sbb
loope
adc
ret
adc
sar
call
lret
xchg
fbld
les
in
data16
movq
jecxz
jne
add
or
mov
dec
xchg
mov
pop
sbb
enter
mov
scas
inc
aas
call
decl
nop
test
ficoml
xchg
out
mov
js
push
adc
or
fdivs
mov
je
outsb
mov
fimull
push
testb
sahf
repnz
jg
sbb
cmp
add
jbe
push
leave
adc
and
mov
rorb
sar
call
xchg
pop
adc
imulb
loope
ljmp
int3
in
xchg
mov
mov
pusha
cmp
pop
jns
lea
outsl
mov
ret
aaa
cli
ljmp
xor
adc
dec
adc
andb
cmp
or
lcall
mov
test
xchg
dec
add
ljmp
enter
mov
lcall
mov
add
and
cmp
and
jmp
cld
lds
pop
stc
and
or
sub
sar
mov
fldenv
and
push
sub
jne
xor
call
lcall
aaa
push
cmpsl
jnp
mov
ja
data16
xchg
push
outsl
icebp
mov
adc
xchg
subb
out
push
ljmp
mov
nop
int
xchg
iret
jns
xor
sub
cmp
push
sbb
sub
gs
testb
movsl
xor
mov
rorl
rcrb
inc
shll
xchg
incl
rcl
test
adc
inc
sbb
dec
lods
ljmp
cmpsl
fsub
mov
adc
and
push
sub
fnsave
mov
jne
inc
ljmp
lahf
cwtl
cmp
leave
xchg
xor
lcall
adc
xchg
xlat
iret
inc
in
pop
adc
andb
cmp
jmp
xor
mov
outsl
icebp
jge
and
stos
test
pop
lea
loopne
xchg
xorb
push
jo
decl
lds
int
xchg
pop
mov
popf
sbb
je
leave
stc
test
test
pop
add
mov
inc
decl
incl
fisubs
fldl
rorl
data16
sbb
pushl
ja
mov
test
stc
dec
mov
dec
pop
andl
cmp
xchg
sbb
ss
cld
add
fdivrl
mov
inc
and
xchg
xchg
mov
mov
xlat
in
decl
mov
xor
movl
addl
icebp
xor
mov
je
sub
orb
icebp
inc
scas
out
cltd
call
incl
bound
loop
or
pop
and
jmp
adc
jg
xchg
outsb
add
movb
adcb
sub
pusha
xchg
mov
or
into
stc
mov
mov
cs
jle
pushf
les
cmp
fldt
mov
mov
jg
lods
push
mov
out
xchg
push
jmp
xchg
sbb
outsl
inc
les
sub
lcall
std
pop
inc
mov
fildl
xchg
int
cmpl
enter
das
icebp
hlt
fidivl
cltd
daa
or
sub
fstpl
inc
jo
and
cmp
mov
jg
sbb
jbe
shr
sbb
mov
push
mov
add
std
sub
cmp
loop
xor
std
imul
jae
push
jno
and
jno
cmp
sbb
cmc
or
jecxz
push
lea
ja
or
pop
jge
rorb
or
std
jg
ret
dec
mov
add
mov
lods
aad
js
lahf
dec
adc
jns
mov
pushf
pand
lods
push
std
xor
ljmp
nop
mov
jl
fidivs
in
add
fwait
bound
mull
mov
pop
and
xor
mov
movsl
std
push
xor
inc
sub
fnstsw
inc
movsb
mov
addr16
fdivr
add
cld
xor
mov
fimuls
jg
push
mov
in
cmp
ss
inc
or
inc
xor
mov
pushl
and
push
fildl
loopne
mov
insl
pop
jo
xor
jmp
ss
in
ffree
icebp
mov
fwait
and
shrb
mov
mov
and
jg
mov
jl
idivb
add
cmpsb
addr16
test
inc
ljmp
call
test
outsb
loop
jg
repz
adcb
stos
push
xlat
and
lock
jmp
dec
and
leave
pop
frstor
std
stos
jb
repz
sbb
jmp
jg
subb
fsubl
in
xchg
push
int
in
jg
ljmp
mov
dec
addr16
rolb
adc
orps
jl
dec
aad
out
pop
test
push
push
loope
jns
mov
add
rcll
mov
shr
scas
das
xchg
mov
lcall
je
sbb
inc
dec
jp
hlt
jbe
mov
push
insl
ss
sbb
clc
mov
incl
and
mov
aad
push
pop
test
add
inc
pusha
in
lds
aaa
and
and
mov
sub
or
pop
fwait
add
scas
sbb
pop
and
sub
mov
mov
push
mov
lods
and
xchg
jp
das
dec
rcll
fidivs
pop
and
inc
mov
cmpsl
test
ss
loop
jne
push
jecxz
decl
push
mov
mov
fwait
nop
mov
repz
lock
pusha
hlt
cmpsl
sub
in
decl
jl
mov
imul
inc
jnp
out
cmovp
jmp
jno
mov
mov
mov
sub
mov
decl
mov
push
std
mov
movsl
adc
lret
call
js
xchg
xchg
fldt
push
stos
stos
cld
hlt
xor
jb
xor
mov
mov
pusha
mov
shrl
cmpsb
lcall
fwait
or
mov
test
fbstp
loopne
outsl
push
sbb
mov
shrb
pop
cmpsl
das
jo
aad
jge
dec
fiadds
mov
sub
mov
or
sbb
call
cli
xor
lret
mov
push
cld
jg
mov
push
mov
fiadds
test
jne
std
lcall
sub
shr
sub
mov
dec
loopne
mov
mov
cmp
xchg
ret
movsb
js
jmp
leave
aad
stos
add
cvtdq2ps
aam
or
xchg
faddp
mov
pusha
loop
or
mov
not
aam
add
add
out
mov
repnz
and
mov
decl
cmp
sub
adc
ja
out
mov
jae
fildll
push
xor
fsubrl
bnd
test
std
das
cmc
in
fsub
pop
lahf
nop
data16
or
lock
sbb
outsl
loop
jmp
jmp
clc
jmp
scas
adc
mov
mov
mov
xor
mov
lods
rolb
sti
cli
ljmp
add
push
cmp
movl
mov
outsl
int3
ds
fdivr
pushl
jne
in
aaa
test
sub
cmpsb
inc
push
push
js
fildll
clc
cmp
insl
pop
sbb
adc
popf
sti
pop
xlat
sbb
mov
xor
cmc
add
jno
mov
push
daa
dec
lock
movsl
call
jp
std
inc
stos
sbb
je
imul
ds
jmp
clc
pushl
es
and
dec
push
subb
negb
fsub
out
fistpll
outsl
cmc
xchg
xor
jl
pop
adc
and
dec
inc
mov
sbb
mov
jmp
jp
adc
leave
in
cmp
daa
dec
cld
mov
cmc
or
adc
lds
idiv
inc
rclb
mov
pop
pop
pop
cwtl
jge
sbbb
push
or
pop
sub
pop
std
xlat
and
test
jle
ss
mov
xor
fsqrt
fadds
jae
flds
xor
mov
lret
cwtl
xchg
push
sbb
or
sbb
ffreep
leave
movsb
dec
sbb
cli
fucompp
push
fs
shlb
jmp
mov
outsl
adc
mov
jmp
icebp
jge
pop
adc
ret
mov
pushl
out
lds
leave
mov
push
int3
jb
lcall
and
and
xor
loope
xchg
movsl
push
xlat
hlt
call
jne
incl
push
popf
dec
repnz
clc
sub
mov
mov
shlb
jle
jnp
or
pushl
das
ret
pop
les
inc
dec
filds
lcall
push
pop
sbb
add
aas
mov
pop
mov
in
cmpsb
insb
xor
ss
mov
data16
stc
test
sub
sub
adc
movl
outsl
hlt
decl
out
push
gs
out
sub
adc
push
jg
iret
out
cwtl
pop
jns
lds
jp
stos
cmpsl
inc
out
stos
lods
mov
push
ljmp
sbb
add
jbe
or
push
add
pushl
in
roll
in
les
jg
pop
loop
sbb
mov
push
cmp
sub
lcall
and
lret
test
pushw
mov
sub
iret
stos
add
jbe
add
call
and
notb
daa
mov
std
adc
cmp
je
or
inc
mov
lock
dec
or
test
adc
das
aad
lcall
sbb
inc
lods
mov
call
cmc
call
or
lahf
jnp
in
cmp
xchg
pusha
movsb
aaa
gs
enter
jb
fildll
paddsw
jge
inc
rcll
inc
mov
jg
cmc
mov
lds
mov
ljmp
inc
arpl
inc
mov
pop
pop
js
movsl
aad
incl
jmp
pop
add
sbb
jae
out
clc
movsl
incb
ja
test
sbb
or
sub
sahf
sub
das
jp
sub
xchg
cltd
lcall
add
shrb
adc
xchg
arpl
push
lcall
cmp
and
pop
push
mov
xchg
mov
jae
push
decl
js
mov
xchg
sub
and
stos
or
je
iret
stc
inc
mov
adc
jle
jb
cmp
fsubr
cwtl
popf
push
ret
sub
pop
jbe
push
stos
push
repz
sub
mov
jg
aaa
aaa
sbb
jle
mov
popa
inc
lock
sub
mov
mov
xor
iret
cmc
int
dec
sbb
insl
mov
and
imul
inc
aad
stc
adcb
pushl
push
sbb
sbb
daa
popf
nop
and
ljmp
aas
dec
sahf
test
cltd
test
pop
pop
jge
lds
cmpsl
adc
outsl
fbld
sbb
addl
and
loopne
rdtsc
cld
jg
xorl
or
mov
push
aad
or
jbe
hlt
ljmp
and
or
fnstenv
inc
push
fidivrs
jbe
jg
add
insb
push
stc
rcrl
mov
lahf
xchg
ljmp
mov
ljmp
mov
jle
sub
and
jb
mov
pushl
mov
shrb
inc
xchg
int
dec
nop
and
push
cmpl
cs
sbb
push
cmp
pop
dec
xor
xchg
repnz
push
sbb
dec
push
pcmpeqb
cltd
dec
sbb
xor
pop
adc
sub
xchg
jmp
pop
lods
loop
mov
mov
mov
stc
inc
xchg
std
lods
mov
push
cli
stos
mov
test
mov
xchg
or
clc
push
dec
xchg
cwtl
les
fldenv
or
jl
mov
mov
sar
ljmp
mov
and
xchg
lods
xchg
stc
fsubr
jg
mov
mov
jno
push
pop
clc
push
mov
xchg
mov
jle
and
sub
jg
xchg
loope
test
popf
loopne
rcll
mov
mov
pushl
cmp
shrl
mov
cmp
adc
loope
pop
shll
ljmp
xchg
paddd
stc
mov
jne
rep
test
sbb
out
mull
mov
jge
sub
lcall
cmpsb
shrb
imul
outsb
inc
std
incl
js
cld
or
test
stc
iret
clc
push
das
mov
fcompl
movsb
dec
loope
mov
jns
jo
xor
ljmp
xor
or
cmc
push
adcb
and
pop
ljmp
movsl
test
out
dec
sub
mov
dec
dec
inc
aad
sarb
mov
mov
insl
imul
sar
lcall
aam
mov
call
dec
lea
out
cmpsb
dec
call
xchg
sbb
nop
dec
repz
adc
or
ljmp
mov
xchg
mov
bound
sub
cmpsl
push
dec
mov
or
or
sub
or
lods
test
push
dec
je
add
call
jb
jp
sbb
fists
mov
fists
lahf
mov
jmp
jno
notb
jnp
pop
and
leave
dec
fcomps
fsubs
cmc
mov
push
push
xchg
ja
lcall
cmc
bound
lahf
hlt
cs
test
lret
pop
pop
or
or
jmp
xor
cmp
insb
loopne
pop
inc
loop,pt
testl
and
decl
jbe
add
fidivs
dec
fildll
or
call
mov
lcall
icebp
adc
sti
cmp
daa
mov
js
sbb
scas
xlat
jbe
cs
in
mov
scas
fsubrs
mov
adc
mov
push
mov
ja
loopne,pn
xchg
push
sar
fistpll
pop
jge
push
mov
jle
add
jl
jnp
mov
popa
sub
jg
mov
out
pop
xor
pop
add
ljmp
pop
enter
xchg
mov
ds
test
push
mov
push
call
fs
lahf
add
mov
add
mov
lcall
pushl
lret
dec
mov
fsubp
stc
negl
sbb
outsb
in
pop
push
mov
aaa
mov
vprotq
sbb
iret
and
dec
jmp
pushl
incb
dec
add
pop
dec
out
add
ljmp
fidivrl
add
jp
mov
xor
ficoml
stos
adcl
je
fistps
rclb
inc
xchg
cwtl
lret
jmp
adc
cmpsb
inc
call
repz
sahf
adcb
mov
in
inc
les
sbb
cmp
push
add
xor
mov
adc
js
std
jl
xchg
clc
fistpll
mov
sub
jge
jmp
aad
call
rorb
dec
inc
push
test
popf
roll
nop
xchg
mov
mov
jge
and
mov
xor
aad
pop
fcoml
sar
pop
call
cli
jns
mov
push
dec
iret
jno
mov
mov
add
popa
add
push
loopne
pushf
or
ds
xor
addr16
test
out
lcall
add
mov
xor
inc
call
jg
push
add
ret
dec
nop
dec
mov
mov
incb
mov
int
jae
outsl
mov
jecxz
jmp
jae
int3
mov
jo
or
lods
lret
pusha
aam
jmp
xchg
or
mov
insb
xor
xor
lds
into
or
in
xor
sbb
mov
popa
jmp
xlat
imul
cs
lahf
incl
mov
add
push
das
jne
or
mov
jge
sub
xchg
mov
xchg
mov
jmp
ljmp
mov
into
mov
dec
push
or
adc
mov
cmp
mov
inc
mov
arpl
jo
fisubrs
xchg
shlb
jp
fs
pop
das
imul
xchg
cwtl
mov
and
cmc
int
inc
jle
mov
xchg
jecxz
jbe
lods
jo
mov
lods
mov
repz
std
jmp
xlat
inc
test
and
out
jle
mov
pop
mov
push
out
pop
inc
push
cmp
mov
fstl
std
test
test
add
and
sub
adc
pop
push
push
movsb
cwtl
test
sti
cs
jmp
pop
pop
and
test
lcall
xor
scas
loop
jb
push
hlt
scas
xor
and
xchg
incl
and
sbb
es
clc
adc
sub
lock
sbb
xor
jmp
mov
es
inc
dec
mov
int3
jo
push
inc
jmp
mov
xchg
mov
and
ljmp
fistl
vcvtss2sd
dec
scas
sbb
sti
repnz
pop
mov
jmp
jae
jg
xor
data16
xchg
int
ljmp
xlat
loopne
cmp
ficompl
or
mov
jp
test
call
jns
and
push
inc
movl
fisttpll
subb
in
cmp
xlat
sbbl
out
fdivs
popf
bound
ds
add
jns
jecxz
shlb
jmp
inc
jmp
popf
jo
.byte
pop
.byte
ljmp
sub
add
das
inc
les
mov
cmc
or
inc
mov
mov
pop
push
jg
jno
pushl
push
pop
mov
iret
fiadds
add
xchg
sub
data16
sub
sub
sub
std
je
lcall
out
adc
push
adc
jbe
jmp
sarb
add
loope
mov
xchg
push
lret
sub
lcall
sbb
xor
not
pop
push
push
inc
pop
push
push
push
push
xor
mov
jle
xor
pop
adc
test
movsl
jmp
aam
call
mov
mov
imul
cs
cmp
mov
add
ds
jmp
enter
mov
or
decl
pop
xor
sbb
fldenv
pop
jp
fs
pop
inc
call
mul
test
hlt
lahf
outsb
xchg
js
xchg
in
inc
idivb
sti
lcall
jmp
and
dec
rorb
sbb
cwtl
jae
test
sbb
fs
pop
push
pop
inc
jmp
shr
shl
pop
xor
push
push
push
call
es
lock
mov
mov
xchg
mov
or
shll
cmp
and
fsubl
cltd
loopne
cmp
nopl
idiv
adc
sahf
add
ret
ret
test
incl
add
test
add
insb
inc
jo
dec
testl
jmp
adc
sbb
xlat
sbb
xor
inc
and
push
push
push
push
push
xchg
mov
aas
sub
cmp
test
sbb
jmp
adc
cmp
inc
ss
test
jmp
cmp
mov
sbb
inc
cmp
jo
ficompl
jmp
adc
jl
xor
jmp
sbb
add
push
rol
pop
mov
decl
negb
pop
and
ret
add
and
xor
xchg
cltd
loope
push
push
push
call
outsl
cmp
mov
call
mov
add
jo
and
inc
ror
pop
lods
fsubp
jne
outsl
ljmp
ljmp
push
inc
xor
mov
fstl
jmp
sbb
push
jmp
cmpsl
jmp
push
jmp
xchg
push
or
jmp
aas
jmp
mov
pop
push
call
call
cmp
push
add
adc
or
jmp
cmp
xor
jmp
xchg
push
push
push
inc
xchg
sti
ret
call
dec
add
mov
lds
jmp
or
mov
jg
push
ror
mov
add
cld
jg
push
add
inc
sub
pop
pop
cmp
jne
rolb
mov
sti
icebp
lds
sub
pop
sub
jge
ds
das
je
inc
mov
push
lcall
hlt
jg
add
movl
push
ljmp
icebp
mov
xchg
xchg
mov
dec
roll
leave
xor
jmp
inc
add
pop
mov
adc
ret
paddd
incl
adc
add
shll
lods
mov
jbe
xchg
lret
sbb
js
dec
add
xchg
xchg
pop
inc
pop
aaa
ss
filds
not
mov
fidivrs
std
mov
fildl
fdivs
fsubrl
fcompl
push
sub
shr
pop
mov
xlat
lds
pop
nop
mov
sbb
lds
incb
rcrb
daa
push
push
sbb
dec
dec
push
pop
pop
inc
idiv
fistl
pop
loope
cmp
inc
push
push
push
call
sub
jo
xor
push
mov
push
push
push
push
call
sbb
and
or
push
int3
in
cli
sub
lods
call
sbb
jbe
mov
cltd
mov
testl
lea
rol
test
xchg
jl
ret
push
loopne
mov
not
mov
pop
fwait
clc
decl
dec
sub
inc
pop
push
push
sub
pop
call
fwait
test
add
aam
mov
cmp
jmp
sub
sar
pop
mov
push
push
sub
mov
faddl
lds
add
sub
pusha
sbb
cmp
and
jns
ljmp
cmp
lock
je
jmp
pop
call
or
mov
sub
es
inc
xor
sub
jmp
sti
or
and
add
rdpmc
rclb
shrl
iret
pop
sub
sub
sbb
dec
jmp
xchg
inc
sub
or
push
and
popa
push
clc
jmp
bound
or
in
ljmp
test
adc
mov
inc
adc
mov
cmp
enter
in
push
lea
lea
fnstcw
mov
sub
xchg
adcb
cli
repnz
mov
push
iret
push
push
call
xor
mov
mov
sub
out
mov
add
and
insb
cmp
add
dec
xor
mov
add
shll
sbb
push
call
adc
loopne
mov
push
push
ret
xchg
dec
add
ret
dec
es
inc
xor
ror
pop
sub
push
out
loope
pop
aad
push
fstl
int
mov
sub
das
inc
call
nop
push
xor
pop
call
pushf
jmp
ss
pop
movsl
das
jmp
int
shr
in
idiv
pop
xchg
cmpsl
push
push
push
inc
sub
mov
in
sub
push
push
mov
inc
gs
push
call
loope
aam
inc
mov
iret
mov
lret
add
adc
mov
les
mov
sbb
popa
xor
xor
sub
sub
add
push
insb
les
shl
inc
mov
iret
sbb
xlat
decl
nop
push
push
push
push
call
test
adc
mov
push
loope
push
call
push
nop
and
ret
push
cmpsl
js
mov
cmpl
ljmp
shrl
rol
lret
add
mov
xor
loopne
push
push
cltd
je
ljmp
pop
sub
push
push
xor
insb
push
nop
jge
push
sbb
das
push
test
out
popa
popf
and
inc
mov
or
dec
mov
pop
loop
sbb
int3
mov
pop
and
hlt
xchg
das
mov
xlat
ret
lret
mov
jmp
test
xchg
sbb
pop
jne
mov
push
movsb
outsl
inc
add
sar
inc
pop
int3
add
sub
pop
dec
push
mov
fmulp
mov
mov
xchg
sub
decb
jmp
sub
sub
dec
jmp
outsb
sub
push
bound
lock
add
or
cmp
test
sbb
or
cli
pop
loopne
pop
flds
jl
and
mov
dec
fldenv
and
in
xor
imul
and
and
push
jbe
ret
inc
mov
sub
and
addl
scas
loop
lock
push
mov
sub
add
pop
in
or
xchg
loope
push
push
push
call
xor
aaa
or
loopne
jmp
pushf
cs
push
push
call
inc
dec
and
rep
insb
int
push
jae
add
fdivrp
mov
loop,pn
fstpl
push
inc
cld
in
out
sub
add
mov
jge
out
push
add
pop
pop
mov
jmp
push
push
lea
sahf
add
jmp
jmp
xchg
xor
add
mov
jmp
jmp
add
mov
xor
mov
push
push
push
push
sub
inc
or
and
addr16
and
pop
add
jmp
mov
dec
sbb
test
repz
lods
jge
push
push
sbb
add
push
sub
and
jmp
addb
inc
xchg
pop
js
fcos
jae
popl
push
push
sub
shl
push
sub
add
jnp
add
xor
lea
push
push
adc
add
mov
jg
or
rclb
pop
rol
nop
jno
or
dec
jmp
cmc
add
jno
clc
sub
nop
xor
nop
nop
cmp
movsb
and
dec
inc
dec
addb
pop
sub
sub
cmp
jno
lods
add
test
and
add
jmp
and
inc
or
test
push
inc
pop
addl
loope
sub
cltd
es
jg
loopne
fisttps
sub
sub
sub
repnz
cmp
mov
jb
push
lock
xor
ret
mov
std
mov
jb
xchg
stc
xchg
push
std
sub
and
fdiv
pop
sbb
sbb
push
sbb
or
in
decl
add
test
pop
mov
push
gs
das
and
xchg
push
clc
sub
dec
push
push
mov
pusha
shll
sbb
std
in
punpcklwd
je
leave
ret
js
mov
jmp
add
jmp
push
sti
and
dec
pop
push
push
dec
dec
mov
adc
xchg
sbb
scas
cmp
bound
dec
add
push
mov
dec
add
hlt
inc
ljmp
das
das
mov
mov
ds
call
mov
add
mov
add
xchg
mov
cld
mov
add
push
push
insb
clc
call
iret
pop
push
push
push
push
adc
add
inc
hlt
aas
call
xor
inc
mov
sub
incl
lcall
fldl
add
push
push
push
not
mov
outsl
inc
incl
in
sub
add
jecxz
roll
xchg
outsb
xor
sbb
add
pop
stos
and
dec
mov
int3
inc
in
ljmp
add
jmp
lret
add
lods
sub
pop
jmp
xchg
sub
inc
xchg
or
std
mov
add
xor
dec
and
pop
mov
xlat
add
add
lods
push
jmp
jmp
and
or
jmp
mov
jg
cmp
iret
mov
push
push
push
push
push
negb
adc
lds
xor
loopne
inc
pop
mov
test
jmp
lret
stc
add
es
push
mov
add
aas
jge
loop
enter
xor
pop
sub
push
not
rol
add
cld
incl
push
push
push
add
inc
lea
sub
mov
sub
xchg
inc
jno
inc
fisubrs
push
jne
sub
pop
add
fldl
dec
cmpsb
sbb
or
aaa
pop
push
addl
outsb
sbb
sub
cmp
push
mov
in
daa
sub
xchg
lcall
xor
push
adc
or
jmp
xor
add
jmp
popa
call
call
dec
cli
nop
dec
mov
mov
sub
shl
mov
inc
sti
mov
fldt
add
mov
rorl
fs
mov
push
and
test
push
cmp
mov
jbe
jae
sub
add
cmp
into
mov
loope
ss
sbb
pop
test
out
jle
in
jg
sub
rol
mov
repz
iret
cld
push
mov
das
mov
cmc
cwtl
push
adc
adc
ret
cld
push
jb
cmp
rcrb
mov
mov
insl
clc
call
adc
push
push
push
out
dec
and
push
and
sti
jg
push
push
push
xchg
cli
inc
rorb
and
inc
mov
cmp
popf
inc
xor
pop
and
fnstenv
mov
adc
adc
mov
pop
mov
inc
dec
cmc
xor
andb
outsl
xor
jmp
adc
and
or
shl
aad
test
loope
jne
adc
push
sub
push
aaa
push
sarl
adc
push
repz
inc
shl
xor
push
push
adc
push
fwait
pushl
xor
jle
stos
cmp
imul
rcrl
aam
shr
dec
test
mov
jl
pop
push
xlat
lods
or
das
aaa
js
lea
push
lret
out
mov
inc
out
mov
leave
add
lret
aas
dec
cmpb
add
lcall
popa
sahf
arpl
lea
add
mov
push
dec
mov
sub
popf
call
sub
jmp
jne
inc
inc
cmp
outsl
nop
popa
mov
inc
icebp
mov
add
jbe
jmp
cmc
inc
fistl
cwtl
sub
inc
xchg
je
das
inc
jnp
stos
xor
fimuls
test
cmpsb
lock
dec
les
jmp
and
adc
add
mov
sub
loopne
jmp
or
sbb
jl
or
or
xor
dec
and
cs
or
push
add
sarb
ja
lods
cld
sbbb
mov
push
push
xchg
or
or
pushf
push
xchg
sti
loop
sti
sub
dec
mov
andb
imul
aas
fs
shll
ds
lea
ror
pop
inc
cmp
sbb
cmp
adc
aad
sub
push
push
jmp
inc
mov
fs
sbb
add
sub
insl
test
mov
rolb
jg
dec
mov
repz
push
push
push
fistpll
push
sub
push
aad
mov
incb
add
push
push
lea
pop
cmc
push
xchg
add
mov
jle
test
cli
adc
ds
push
xor
dec
jae
decl
test
pop
mov
inc
cwtl
aas
jle
addr16
add
mov
ss
ret
push
add
movsb
out
dec
push
int
outsb
xlat
add
and
sub
adc
push
and
add
push
dec
add
push
xchg
inc
adc
mov
adc
mov
fstl
pop
imul
add
pop
and
fwait
sub
out
and
ret
mov
xor
test
cmp
popf
mov
adc
lahf
mov
jmp
or
rol
xchg
add
jp
jmp
scas
lock
mov
in
in
fisubrs
rcr
jmp
insl
xchg
add
popa
adc
pushl
mov
imul
push
push
add
orb
test
call
ret
int
adc
push
or
or
dec
xchg
hlt
and
sub
jl
arpl
enter
rol
fs
dec
pop
mov
rclb
add
dec
inc
cmp
jmp
dec
mov
mov
dec
xor
fstl
push
mov
sub
mov
shl
fcmovbe
push
push
inc
dec
add
dec
les
sbb
sub
xor
call
jmp
sbb
push
nop
add
outsb
cmp
lret
icebp
sub
or
sub
pop
adc
mov
out
push
push
adc
sub
cli
decl
test
pop
mov
push
push
inc
and
and
pusha
mov
dec
push
push
dec
not
add
dec
lock
mov
push
inc
adc
cs
stos
pop
add
adc
aam
ja
mov
mov
repnz
les
ret
jmp
call
pop
mov
adc
inc
and
push
push
push
push
call
adc
or
idivb
repz
push
call
dec
and
mov
js
add
pop
std
rep
jnp
shrb
xchg
dec
popf
dec
pop
inc
or
xchg
jl
adc
pop
or
fnstenv
adc
push
in
and
inc
rcrb
lahf
and
inc
pop
mov
lock
and
leave
jne
pop
cld
or
shlb
daa
mov
iret
mov
movb
stos
fimuls
jmp
loope
shlb
xchg
add
sub
add
mov
xor
cmp
sub
mov
ss
mov
pop
xlat
test
push
cmc
mov
mov
push
xor
add
pop
push
push
sub
add
add
aas
pop
lahf
add
pushl
sbb
std
mov
outsb
out
test
mov
xchg
push
or
add
enter
int
in
or
xchg
sub
pop
add
jmp
xorl
add
shll
popa
add
pop
shrl
cmp
nop
jno
jmp
jns
pop
pop
test
adc
sbb
jns
test
mov
test
das
lds
mov
inc
ret
add
ja
cmp
lcall
stc
push
push
call
adc
dec
jg
push
call
lea
mov
inc
sub
xor
cli
cld
add
jbe
xor
dec
aas
mov
lret
dec
inc
popa
clc
push
insb
dec
mov
call
add
mov
arpl
ss
cmp
xor
xor
jp
shr
push
fucomp
sub
or
adc
fcmovnbe
sub
pop
cmovnp
add
jbe
fmuls
add
std
pop
add
xchg
sbbb
add
sbb
add
push
fadd
mov
test
loopne
jno,pn
sub
inc
push
pusha
add
and
inc
mov
std
call
adc
sub
shr
rol
pop
popa
les
sub
pop
inc
mov
inc
out
or
add
cs
add
sub
pop
pop
mov
out
pop
addb
add
sub
add
clc
out
or
negl
flds
mov
hlt
lods
pop
jmp
in
push
adc
xchg
lea
and
outsb
mov
out
ds
mov
add
push
push
int
repnz
push
add
pop
mov
addr16
add
dec
sbb
jne
gs
push
pusha
cmp
jmp
popf
jmp
outsl
push
add
loop
bound
lods
push
push
push
pop
push
call
jo
popa
xchg
push
mov
pushl
mov
loope
movsl
xchg
mov
ret
into
mov
loopne
outsl
and
outsb
xchg
add
icebp
jg
push
push
call
inc
add
loope
mov
pop
call
jne
xchg
insl
push
jmp
repnz
jmp
dec
insl
hlt
outsl
testb
add
mov
xor
sub
shl
jns
push
sub
or
pop
dec
mov
shll
icebp
cltd
adc
inc
add
gs
enter
mov
call
inc
nop
cmp
js
push
cmp
subb
add
inc
cmpsl
es
mov
rolb
push
aad
sub
jmp
rol
pop
add
fs
and
adc
jmp
sub
mov
popa
js
jmp
call
shr
stos
in
or
inc
sbb
pop
inc
outsb
popl
adc
loopne
pusha
sahf
adc
jmp
pushf
push
adc
mov
jp
inc
adc
in
shr
sbb
aas
jg
sub
pop
inc
mov
add
inc
jno
hlt
sub
outsl
rol
sbb
jge
out
rorb
mov
mov
imul
pop
mov
mov
inc
push
mov
xchg
sbbb
inc
sub
push
int
push
xchg
cmp
adc
inc
loope
pop
clc
cmp
xor
adc
sub
nop
cmpsl
decl
mov
lcall
mov
dec
les
add
or
aaa
mov
or
lahf
or
xchg
push
push
sbb
jmp
sub
sbb
jnp
cmpsl
or
mov
cmp
push
dec
xor
jle
sub
loope
add
or
loop
iret
jo
loop
call
and
pop
lds
in
or
add
adc
add
sub
or
pop
pop
jg
mov
inc
and
in
sbb
adc
push
and
sub
cmovp
jg
test
add
sub
sub
pop
mov
sub
out
jg
jne
inc
jne
cmpl
and
lea
push
pop
aad
aad
add
decl
pop
xchg
mov
sub
push
call
test
mov
gs
mov
shr
mov
add
push
push
dec
js
mov
loop
adc
or
xor
xor
xor
mov
mov
shr
cmp
adc
pop
outsb
mov
pop
jl
loopne
mov
pop
mull
add
xchg
add
or
inc
add
hlt
inc
jo
mov
inc
jmp
sub
add
add
or
lret
shr
sbb
idiv
pop
jmp
jecxz
invd
outsb
mov
in
fcmove
add
push
sbb
or
sbb
lock
push
arpl
add
inc
xchg
add
xchg
push
push
push
fucomp
adc
loope
dec
adc
pop
lcall
add
xchg
pop
adc
dec
les
std
jmp
lock
add
push
push
push
push
sub
adc
call
pop
leave
sub
test
imul
outsb
push
call
dec
addl
or
ss
rclb
push
sbb
sub
popa
sub
sub
mov
push
mov
mov
subl
push
push
push
push
push
into
fmuls
call
dec
add
sbb
rol
lcall
or
repnz
push
dec
dec
add
pop
test
adc
movups
add
mov
push
push
add
fbld
adc
mov
add
cmpsl
enter
jecxz
mov
mov
and
cwtl
aaa
inc
adc
mov
test
jmp
out
adc
xchg
test
add
jmp
inc
jmp
inc
cmp
pusha
in
jmp
jne
and
mov
dec
lret
lea
rol
mov
sub
jno
pusha
or
push
nop
xlat
sub
popf
movq
enter
sub
test
push
mov
lods
icebp
inc
dec
cld
jg
rcrb
in
cmp
inc
aas
mulb
xchg
mov
incl
xor
lret
ljmp
mov
sbb
and
and
inc
cld
movl
xchg
into
push
lods
mov
add
arpl
dec
daa
arpl
into
or
push
data16
xor
mov
push
xchg
and
int
xchg
test
adc
jmp
cmp
jmp
aas
call
lods
call
fdiv
adc
or
mov
jle
add
cli
add
sub
call
rolb
xlat
shr
xor
pop
test
adc
lcall
ret
mov
or
xor
pop
test
inc
test
fiaddl
loop
add
jmp
xor
adc
push
jmp
jnp
push
push
add
sub
mov
push
jg
cld
push
sub
sbb
test
mov
stos
or
pop
out
push
sub
dec
mov
pop
mov
shll
xchg
jmp
test
sbb
xchg
pop
and
mov
pop
loop
add
inc
ror
inc
pop
sub
and
aad
jge
adc
push
das
push
insb
xor
mov
icebp
cmp
push
push
push
push
inc
mov
mov
mov
push
xchg
int3
pop
mov
hlt
imul
fldl
add
xlat
xorb
jmp
pop
mov
add
jno
or
lods
jmp
pop
xorb
push
xchg
dec
test
xor
dec
jmp
dec
loope
in
sub
hlt
repz
push
push
push
call
push
sbbl
bound
aam
sub
aas
dec
dec
jle,pt
push
cmpsl
test
adcl
inc
mov
ds
push
xor
imul
xchg
shll
add
stos
lcall
outsl
repz
mov
jmp
lea
cmc
loope
push
filds
push
push
mov
mov
add
xchg
sbb
aaa
mov
or
adc
push
push
or
add
ljmp
cltd
fprem
jg
ds
ror
pop
add
push
dec
lea
pop
xor
push
or
std
add
out
add
call
or
stc
lods
add
call
push
daa
inc
push
mov
xlat
adc
xor
movsb
push
nop
nop
push
incl
rorb
push
push
push
pusha
cli
cmp
in
out
push
call
push
shlb
loope
movsl
xor
loop
loopne
xor
int3
dec
mov
adc
inc
pop
push
subb
push
or
icebp
mov
stc
add
add
inc
add
sbb
or
mov
icebp
out
movsl
cmpxchg
jae
jb
ret
dec
mov
pop
inc
gs
xchg
and
rolb
add
add
mov
pop
out
imulb
out
add
shl
fcoml
push
xlat
mov
push
call
or
daa
mov
and
jg
insl
xor
add
and
adc
popa
inc
cmpb
pop
push
push
push
push
dec
mull
sbb
sbb
cmp
sub
in
xorl
sub
daa
cmp
sarl
xchg
enter
mov
mov
jle
mov
lcall
inc
push
push
push
push
call
push
add
lret
push
push
orb
and
push
sbb
shrb
stos
adc
subl
xchg
test
stos
outsl
adc
mov
sbb
movsl
or
lods
test
decl
cmp
inc
or
push
shll
mov
lcall
test
cmpb
mov
jnp
aaa
inc
jg
shl
pop
mov
pop
add
loope
mov
dec
or
add
ficomps
fwait
mov
mov
shr
mov
add
and
mov
jmp
jae
popf
mov
mov
adc
fisttpll
call
ret
adc
jecxz
mov
add
dec
adc
and
mov
stos
mov
or
jns
add
arpl
inc
ljmp
sbb
add
testl
out
adc
test
std
push
call
nop
test
ficoms
jecxz
push
fs
adc
hlt
mov
adc
adc
roll
mov
inc
leave
mov
das
dec
sub
jae
push
push
push
jno
and
stos
add
or
mov
push
add
xchg
sbbl
or
push
test
inc
fadd
add
pop
push
fcoml
push
jne
add
in
dec
jne
sub
push
push
call
adc
ret
sub
jp
lret
icebp
repz
icebp
add
leave
mov
cmp
fidivrl
adc
mov
ret
fs
add
add
call
push
inc
and
or
loopne
nop
sub
roll
and
sbb
dec
mov
add
clc
jmp
and
enter
add
cmp
je
lds
lret
nop
pop
es
pop
add
mov
dec
stos
sub
int3
xor
int
adc
push
sub
and
idiv
jne
add
sub
jle
dec
inc
xchg
je
clc
or
shl
or
push
dec
rol
aad
lret
cmc
lea
pop
call
push
call
inc
xorl
clc
lods
adc
fiadds
push
push
mov
push
stc
mov
fbstp
jo
jmp
push
xor
test
stos
mov
sbb
sub
add
pop
inc
pop
add
sar
ja
add
pusha
dec
dec
pop
and
dec
dec
cmpsb
lods
xor
pop
mov
pushl
pop
fbld
rorl
dec
mov
cmpsb
push
cmp
inc
and
scas
lock
jg
pushl
sarl
icebp
push
pop
outsb
xchg
push
pop
jne
jns
pop
or
jge
shll
mov
sbb
add
aam
incl
mov
dec
cltd
std
fwait
xor
mov
hlt
imul
push
movsl
fs
lcall
jbe
idiv
mov
aad
ret
jnp
mov
filds
ljmp
addr16
mov
mov
inc
scas
sub
icebp
test
int
xlat
fildll
les
das
inc
jne
pop
imul
into
lock
cmc
sbb
aad
scas
stc
outsl
test
xchg
xor
pushl
xchg
cmp
push
scas
call
and
mov
cmp
jl
mov
inc
add
pop
mov
cld
imul
xor
test
sub
loope
out
imul
push
scas
sbb
mov
popa
xchg
sub
or
push
dec
rcr
clc
mov
mov
adc
fisttpl
push
dec
test
cli
cmp
adc
das
jo
ficoms
jecxz
or
jmp
hlt
int
pop
cltd
inc
cmp
add
lods
outsl
dec
mov
out
sbb
lahf
scas
repnz
xchg
inc
cli
mov
pop
lret
call
setp
lock
mov
and
sbb
fbstp
sbb
pop
jl
test
xor
xchg
dec
mov
std
fmul
outsl
fsubrl
pushl
popf
push
popa
ss
mov
imul
in
jbe
xchg
sub
mov
sub
movb
push
outsb
filds
sub
cmp
js
jmp
fadds
pop
jb
pusha
inc
add
call
mov
push
andl
arpl
pop
push
negl
out
xchg
cmp
push
in
das
lea
inc
mov
insb
sbb
into
aam
sahf
int3
inc
fstpt
ret
lock
call
mov
imul
add
fisubrs
loopne
jmp
repnz
sub
push
and
ret
pusha
pop
pop
lret
adc
sub
movsb
xor
fidivrs
in
mov
int
aam
lret
jae
xchg
inc
imul
adc
jns
jg
call
sbb
and
scas
leave
ret
in
push
pop
adcb
pop
and
push
cs
decl
adc
xchg
mov
push
test
fistpl
xchg
xchg
push
ss
in
and
adc
xor
in
je
xchg
popa
sbb
inc
jg
xchg
adc
push
call
adc
mov
cmpb
xchg
js
fldenv
jne
call
test
addps
mov
sarl
sbb
je
nop
ss
cmpsb
mov
les
inc
test
rolb
pop
xor
dec
adc
jmp
mull
jmp
jmp
and
cmpsl
sbb
jg
mov
jb
int
stos
jo
js
xorb
je
out
outsl
mov
mov
add
and
add
mov
pop
xchg
or
and
ja
cmp
and
ret
pop
test
and
xor
jle
scas
mov
in
add
jmp
out
mov
in
inc
leave
ljmp
mov
rcrl
cwtl
shl
add
mov
shrb
shrb
std
xchg
or
mov
js
push
in
mov
push
out
jge
pop
cld
outsb
or
es
sbb
dec
in
mov
dec
mov
pop
mov
or
call
push
test
enter
ficompl
and
mov
call
jne
add
mov
dec
cwtl
fldt
mov
test
fs
pop
jg
or
dec
sbb
pop
mov
outsb
adc
push
ja
test
sarb
pop
cmp
mov
roll
or
lahf
push
lret
insb
jg
add
fistpll
call
movsb
adc
repz
sub
mov
ljmp
dec
pop
lahf
sbb
jmp
and
push
insb
aaa
mov
add
xor
aas
ret
lods
aas
movsl
adc
sub
sbb
fstps
mov
xor
xchg
push
decl
pushl
or
push
or
or
mov
in
mov
mov
add
jns
bound
xchg
pop
jne
inc
pushf
imul
and
out
push
xor
or
mov
test
ja
gs
mov
int
mov
daa
and
push
aam
leave
pop
inc
adc
jb
sahf
add
jmp
mov
mov
cltd
icebp
cld
lods
loope
ficomps
push
lahf
sar
add
aaa
decb
fildll
mov
or
push
fwait
lods
dec
movsl
and
inc
roll
cmp
mov
push
cmp
inc
inc
incl
adc
mov
mov
loope
sub
mov
jmp
add
xor
pop
ret
or
mov
rclb
psubsw
enter
sub
cmp
inc
push
mov
xor
incl
and
add
sbb
jns
add
pusha
movsl
loopne
sbb
jg
mov
aas
pop
mov
xchg
scas
xor
call
jbe
aad
jmp
inc
jns
jge
or
mov
inc
call
mov
push
fstpl
inc
jmp
out
fsincos
inc
ret
out
mov
jo
pushl
clc
jmp
pop
ret
fsubrs
adcb
dec
pop
rol
aaa
mov
scas
imul
mov
pusha
add
icebp
aam
shufps
jns
inc
xor
add
jno
cli
pushl
inc
test
pop
mov
pop
adcl
pushl
mov
pop
mov
test
clc
rcrl
sahf
decl
or
jmp
inc
call
add
xchg
sti
pop
rcl
in
gs
and
ljmp
adc
add
scas
jns
lock
inc
sub
ss
cwtl
mov
bound
mov
daa
ficomps
cmc
lret
decl
lret
jo
and
insb
fistps
insl
adc
nop
sub
xchg
pminub
sbb
or
decl
rcll
cmp
pop
in
inc
push
pop
fbld
mov
mov
hlt
bound
arpl
push
std
inc
addb
xor
inc
stc
cltd
movsb
enter
rolb
mov
jmp
or
mov
rol
pop
stos
pop
jo
fcomip
jnp
sbb
mov
cmp
sbb
and
push
mov
cmp
insb
mov
test
pushl
xchg
push
mov
pop
loope
mov
call
and
leave
xlat
ds
push
rcrb
in
fisttpl
js
sbb
add
shll
dec
ds
gs
ljmp
pushl
or
sbb
cli
jecxz
lahf
xchg
jae
mov
mov
rcll
adc
dec
push
cmp
jmp
sar
xchg
or
fisttpll
insb
push
stos
ss
jmp
mov
push
jae
aam
jb
mov
push
cli
mov
jb
aam
rolb
and
stc
jl
ds
ror
data16
incl
or
mov
stc
outsb
outsl
into
rolb
aaa
fsubrs
out
lods
mov
icebp
cmp
ss
mov
incl
arpl
mov
mov
jecxz
fnop
pop
enter
mov
int
cmp
aas
add
sti
mov
nop
mov
or
mov
adc
sub
rclb
arpl
mov
decl
xor
ds
push
dec
loopne
es
jo
ss
adc
inc
shr
sub
call
sbb
cmp
or
pusha
jge
jo
imulb
scas
cmc
jns
incl
sub
repz
fadds
cwtl
or
or
shll
mov
inc
lcall
adc
lcall
mov
mov
push
sbb
je
add
scas
test
cmc
icebp
add
inc
jg
ss
mov
mov
test
gs
int
data16
lcall
aam
inc
jmp
jmp
or
fimull
pop
mov
lret
inc
movl
std
and
adc
jo
loope
or
xchg
mov
ret
in
leave
leave
lea
xchg
pushl
add
in
test
mov
push
fwait
mulb
mov
inc
mov
icebp
aad
mov
ljmp
addr16
test
sub
gs
imul
cltd
inc
movsl
inc
frstor
mov
cs
incl
push
xor
jbe
mov
mov
js
fsubl
push
arpl
jmp
add
decl
inc
mov
es
add
lahf
add
cmpsl
jnp
push
mov
call
cmpsl
insl
not
flds
sbb
fwait
call
scas
push
cmp
push
pop
lret
mov
std
leave
mov
in
shrl
in
xor
xchg
push
sbb
push
repnz
mov
add
pushl
xor
imul
test
sub
aaa
pop
or
inc
enter
push
add
fwait
xchg
mov
sahf
jb
data16
repz
cmp
push
je
or
fimull
push
and
outsb
int
lods
inc
pop
mov
fwait
sbb
pop
popa
adc
lcall
out
enter
testb
mov
pusha
or
fists
inc
in
decl
pop
leave
add
gs
int3
or
xchg
loope
add
stc
or
cld
into
add
lods
mov
xor
xor
xor
xor
jne
pop
push
mov
mov
idiv
call
sahf
push
push
test
add
jge
sbbl
shl
out
sub
jg
stos
test
mov
in
jg
dec
inc
popf
icebp
pop
jmp
insl
jns
push
aas
pop
xchg
lea
ljmp
aad
sbb
les
sub
xor
insb
stc
movb
fidivs
lcall
mov
test
xor
out
dec
mov
aam
and
inc
jo
call
test
jl
mov
dec
or
xchg
iret
in
pop
fwait
sbb
pushf
cmpsl
ljmp
cld
add
jecxz
stos
lahf
push
mov
jp
stc
pushf
sti
mov
scas
xor
shlb
jo
call
push
fwait
fwait
push
shlb
outsb
push
xor
or
mov
push
adc
fisubrs
hlt
cmp
ds
pop
ja
aas
cld
lods
add
dec
and
jns
mov
enter
pop
test
jns
outsl
psrlw
andl
repnz
pop
les
sbb
ret
sub
add
jae
xor
cmp
decl
ror
jle
push
imul
scas
mov
bound
out
pmulhuw
push
xor
cmp
jmp
fsub
sub
jae
stos
or
xchg
js
mov
ud0
lcall
jnp
inc
ret
insl
lret
adc
dec
mov
push
sub
xchg
dec
sbb
decl
mov
inc
xchg
rcl
sbb
mov
dec
fisubrs
mov
ja
pop
dec
daa
outsl
pop
pushl
decb
pop
mov
push
inc
cmp
jnp
adc
pop
insb
leave
idiv
pop
jmp
sbbb
cmp
pop
and
mov
daa
mov
pushf
jg
inc
jg
xchg
negl
jno
xchg
sbb
nop
cmpsl
xor
dec
sbb
insb
inc
jns
add
mov
pushl
addb
out
lock
or
call
sarb
add
ljmp
inc
xchg
cmp
xor
mov
and
or
lock
loopne
mov
shrb
push
sub
sbb
sar
ljmp
xchg
test
xchg
shlb
xchg
outsb
push
aam
inc
xchg
jge
imul
xchg
xlat
int3
mov
test
sbb
decb
js
sub
lcall
jecxz
imulb
adc
adc
pop
ljmp
jg
dec
mov
jo
sbb
lcall
or
out
xchg
negl
cli
push
push
xor
btr
jne
cmp
cmp
cmp
inc
call
clc
dec
cmc
xchg
lcall
ljmp
orb
incl
jp
cmpsb
mov
push
push
sub
scas
lock
aad
inc
or
dec
xor
lcall
iret
fsubp
aam
jnp
sub
fwait
das
add
dec
and
cs
xor
lcall
int
jno
mov
int3
sub
push
nop
fisubs
out
pop
push
scas
mov
scas
jg
shrl
and
jnp
cwtl
sbb
jmp
xchg
icebp
pop
rclb
addl
mov
insb
test
xor
fidivrl
cmp
cmpsl
into
test
mov
clc
lcall
jge
decb
and
movsl
xchg
into
inc
jg
inc
pop
pop
cmp
call
ja
pop
jb
fadds
arpl
add
sub
icebp
leave
int3
cmp
into
push
out
lcall
ljmp
jge
out
aam
fdivs
jno
inc
inc
aas
loope
mov
xchg
xor
inc
cmp
pusha
xor
cli
inc
xor
cld
sti
add
mov
adc
pop
cmpsl
mov
leave
lds
fisubs
push
iret
xor
aad
xchg
pushl
push
cmpsl
dec
push
fistl
lcall
popf
mov
jbe
fsubrp
dec
lahf
fisubrl
inc
pop
rcll
jp
insb
lret
jns
ret
mov
sbb
mov
dec
pusha
cmpsl
popf
nop
ljmp
mov
les
or
scas
stc
jne
in
sub
cs
incl
decl
sbb
sub
insb
dec
sbb
ss
adc
push
or
jmp
mov
and
loope
dec
rcrb
pop
sahf
test
stc
loope
out
adc
jg
fidivl
lock
sub
push
jae
push
cmp
pop
adc
sbb
fildl
std
imull
insb
orb
mov
test
inc
sbb
fdiv
push
xchg
leave
xchg
inc
adc
dec
sub
mov
sub
fisttps
mov
jnp
inc
aam
push
out
test
push
pop
mov
inc
and
shl
repnz
adc
jns
push
and
shrb
sub
stos
jbe
out
insl
adc
lods
sbbl
pop
cmp
data16
int
test
pusha
xchg
sub
and
and
add
ret
xchg
repz
mov
lods
loopne
sahf
outsb
pop
imul
out
inc
fs
xchg
scas
lods
ljmp
test
sbb
xchg
jge
fiaddl
popa
jmp
lahf
cli
iret
jno
jnp
sub
insl
add
mov
sbb
out
pushf
mov
push
in
dec
mov
adc
sbb
std
xor
lret
pushf
sahf
cmp
add
dec
mov
dec
mov
je
mov
cmp
xchg
sub
inc
add
and
mov
pushl
addl
mov
aam
mov
and
pusha
sbb
jl
push
mov
es
push
inc
aam
and
mov
stos
sti
pop
sahf
outsl
add
push
adc
arpl
sbb
cmp
fwait
aam
cld
loope
cmp
test
cmp
bound
in
mov
je
push
repnz
movsl
mov
lods
dec
pushf
cmp
pop
xchg
into
ds
mov
pop
cltd
das
mov
jg
out
lds
mov
add
sti
scas
shrl
pusha
stos
out
inc
in
insb
shr
pop
decl
jns
add
pusha
mov
fdivrs
mov
jg
cmpsb
dec
cmp
pushl
cmp
aad
and
xchg
adc
add
mov
ds
jmp
or
out
and
addb
or
sub
mov
mov
fstpl
cmp
inc
pop
mov
nop
push
inc
xchg
jp
lahf
lock
xchg
sbb
fwait
push
or
dec
push
xlat
mov
ret
aad
pusha
ret
fistl
adc
pop
aad
xchg
push
or
ljmp
and
jge
addr16
dec
cmpsl
ja
dec
fistl
ljmp
push
xchg
gs
data16
mov
xchg
in
adc
sbb
push
je
je
js
adc
jmp
das
stos
pusha
pop
mov
adc
pusha
xor
xor
fsubrs
xor
dec
and
les
cmc
push
andl
push
jo
mov
test
xor
push
or
mov
cs
push
iret
arpl
call
out
add
mov
push
fwait
mov
and
pop
aam
push
test
jecxz
js
incl
mov
lret
push
idivl
loope
cltd
pushf
push
push
push
popa
adc
add
incl
pop
jae
icebp
mov
jb
cld
or
dec
andl
out
movsb
mov
cmp
lea
das
xchg
jl
and
mov
sti
jmp
cmp
xor
dec
xor
mov
push
push
push
add
sub
cltd
pop
pop
cld
xor
jecxz
enter
add
out
fistps
outsl
repz
cmp
push
jmp
jno
cs
hlt
push
mov
jno
dec
pop
clc
jns
fldcw
pop
cli
call
mov
xchg
iret
and
popf
push
add
pop
inc
inc
outsb
je
jmp
test
jmp
imul
inc
dec
jmp
and
push
data16
in
call
jb
push
repz
mov
in
lock
jl
push
sbb
mov
add
int
xor
pop
iret
pop
bound
add
push
xchg
fsubrl
decl
jae
mov
sbb
mov
inc
mov
in
test
das
jmp
or
mov
call
lcall
shlb
mov
out
mov
mov
mov
out
adc
fucomip
sti
jnp
inc
ret
and
iret
jp
int3
inc
mov
pushl
add
dec
inc
pop
push
mov
mov
add
movsl
setnp
call
jg
rolb
cltd
ret
pop
popf
push
mov
shll
mov
dec
inc
fdivr
adc
ficoms
pop
inc
stos
ljmp
mov
out
mov
jmp
les
and
mov
or
pop
movsl
mov
xchg
add
hlt
jmp
inc
cmc
ljmp
lock
xor
mov
test
jmp
push
mov
inc
lea
push
push
out
cli
fbld
js
push
jg
jge
and
push
pop
andl
mov
into
punpckhbw
adc
hlt
ljmp
lock
mov
js
mov
xchg
jbe
cmc
scas
decl
stc
outsl
mov
xchg
xchg
lret
pushf
das
lea
movsl
jns
rorb
pushl
jns
loop
inc
in
cli
mov
mov
or
cmp
pushf
push
jle
ffreep
jnp
push
fmuls
jmp
test
xor
push
roll
add
sbb
cld
das
cwtl
mov
int
cmp
mov
lods
pop
fnstsw
pop
jns,pt
push
lock
sbb
pop
mov
ret
out
cs
ja
outsl
cmc
mov
leave
mov
cld
adc
sbb
inc
jg
mov
loopne
push
add
outsb
addr16
je
outsb
rcll
enter
cld
call
outsb
jae
sub
sbb
out
addl
hlt
push
repz
aad
jb
stc
shlb
mov
push
test
test
mov
xor
xor
ss
mov
adc
cld
pop
mov
push
push
or
mov
push
fcmovnb
out
sub
add
push
movsl
decl
push
jmp
fwait
ds
sbb
imul
fistpll
and
dec
rorl
push
repnz
jne
cs
aam
gs
add
lcall
cmp
push
jecxz
fs
push
and
ja
xor
jb
sbb
jmp
lock
insb
lcall
jne
lret
outsb
jmp
xchg
and
mov
jmp
dec
xor
iret
ljmp
xor
cmp
aaa
or
outsl
outsl
stos
sahf
mov
mov
inc
mov
loope
sbb
adc
pop
loopne
cmp
jo
mov
mov
pop
cwtl
mov
dec
inc
push
call
pop
out
mov
icebp
aad
jno
stos
mull
subl
lcall
aam
xchg
push
add
test
sub
fnstsw
push
loop
lds
les
call
mov
fidivrs
sbb
jae
sub
or
not
mov
out
push
push
adc
mov
pop
nop
xchg
mov
push
mov
out
mov
sbb
cli
call
in
pop
jmp
cs
cmc
cltd
fidivrl
sub
rep
jmp
fildl
jle
test
ljmp
in
mov
lods
andl
jl
cmc
pop
sbb
js
pop
cld
repnz
cmp
cmp
cmpsl
out
xchg
xor
cmp
push
test
fwait
nop
jmp
andb
aad
dec
imul
outsl
shr
gs
nop
jmp
mov
nop
mov
xchg
jl
xlat
nop
daa
or
adc
mov
jg
adc
push
fsubl
jge
pop
or
inc
imul
xor
shl
sti
xchg
mov
lret
adc
outsb
xorb
push
or
jmp
jmp
rcr
and
push
xchg
call
xchg
lahf
xlat
out
sar
pushl
jge
rcll
lahf
testl
add
outsb
xorb
jg
push
pop
loop
stc
push
push
inc
inc
dec
roll
lcall
jmp
pop
outsb
lret
test
push
sub
lcall
cwtl
xor
sbb
out
aaa
push
pop
and
mov
xor
sub
lods
sbb
push
or
mov
xchg
fisttpl
lahf
jb
mov
mov
adcl
mov
loop
popa
outsb
scas
pushf
out
repz
push
mov
lcall
movsb
mov
and
mov
fstpl
jnp
mov
mov
pop
ficoms
fsubl
sahf
or
aam
movsb
ljmp
jmp
mov
lcall
cmp
jne
xchg
or
fstp
ret
andb
xor
push
push
mov
sar
jg
cltd
call
fmuls
push
mov
and
ljmp
push
or
pop
das
call
push
cltd
imul
int
call
loopne
mov
ss
cmp
mov
or
or
jbe
test
sub
std
incl
insl
and
aad
sbb
jl
ret
lcall
insl
cmp
ja
pop
cld
mov
into
and
imulb
stc
pop
arpl
dec
jge
clc
sbb
cwtl
test
das
loop
cwtl
push
iret
jb
pushl
pop
xorl
xchg
push
setno
shrb
mov
lcall
ljmp
movsl
sub
imul
lret
xor
pop
dec
sahf
hlt
mov
xor
pop
xor
popa
add
dec
repnz
leavew
mov
lcall
sbb
mov
pop
inc
xchg
jo
dec
sub
sbb
lcall
lret
aas
mov
popf
inc
lcall
mov
and
push
lods
jg
add
jne
loopne
test
jns
pushl
test
in
outsl
and
out
xor
pop
jb
inc
insb
mov
mov
jg
xchg
push
add
scas
jo
shll
sbb
loopne
xcrypt-ctr
cmpsl
pop
jg
pop
push
out
popa
mov
rolb
fwait
inc
aam
jmp
cmpsb
lds
movsl
mov
shll
cmc
dec
sub
sub
repnz
push
daa
gs
aam
cld
mov
std
mov
std
jp
mov
cli
inc
xchg
imul
ljmp
cltd
scas
pop
movsb
loope
add
in
push
add
push
leave
sbb
jg
jg
aas
in
repnz
repnz
jo
mov
movsl
insb
and
scas
inc
push
dec
mov
lcall
push
cmp
cmp
lock
aad
and
mov
and
push
push
in
jne
mov
rolb
lods
shlb
cmp
adc
or
jnp
sti
in
xor
fwait
sub
cwtl
call
mov
test
jg
pop
pusha
xchg
lret
ja
jecxz
sarl
pop
add
mov
ljmp
hlt
cmp
scas
in
mov
daa
rorb
jne
push
into
pop
jnp
stos
fldt
ret
loope
jb
sbb
mov
in
sar
mov
clc
adc
int3
je
adcb
popa
nop
ret
test
jmp
pop
ftst
mov
add
std
mov
ret
mov
lret
push
push
jle
add
incl
jae
mov
dec
fiadds
aad
lcall
movsb
fmul
lods
popa
hlt
or
adc
imul
pop
cmp
das
cld
stc
repnz
mov
or
hlt
fstl
out
es
out
xor
push
cmp
ljmp
sub
xchg
mov
and
cli
or
xor
xchg
das
inc
loopne
jbe
fstps
jp
sbb
std
push
push
ljmp
incl
sub
cmp
fs
pop
lcall
pushl
ds
xchg
icebp
cmc
sbbl
mov
inc
cli
dec
pop
mov
call
insb
aaa
xchg
repz
or
adc
loop
sbb
pushl
xchg
lret
jp
lods
dec
test
push
dec
clc
cs
inc
das
lahf
jnp
pop
mov
inc
inc
push
subl
enter
imul
outsl
xchg
test
insl
test
pushl
sbbl
fildl
or
sub
inc
in
jns
in
pusha
pop
push
ljmp
or
inc
rcll
test
lret
sub
mov
jg
jmp
push
ss
cld
xchg
sub
dec
negb
sub
mov
pop
add
call
lcall
inc
pop
gs
xchg
and
rcr
rcl
or
clc
inc
push
push
lcall
insl
fdivrl
mov
xchg
cmpsb
cmp
pop
dec
gs
push
mov
jg
push
sahf
jmp
adcb
xchg
ljmp
jbe
mov
outsl
in
mov
inc
sahf
shrb
fcmovb
push
jg
in
scas
jnp
push
add
add
mov
add
lcall
dec
add
aad
sti
js
imul
jmp
mov
mov
inc
sahf
push
jne
imul
setb
fisubl
add
push
xchg
cwtl
mov
test
test
loopne
lcall
or
fiaddl
insb
push
xchg
sub
popf
push
jno
rol
aaa
sti
cwtl
lock
mov
xchg
xchg
test
push
je
scas
or
mov
mov
mov
or
jg
pop
test
pop
pushl
cli
js
scas
scas
int3
in
sub
lret
mov
out
fdivr
xorb
cli
push
outsl
ljmp
fdivl
push
xchg
sub
mov
sub
jno
cmpsl
fisttps
add
scas
outsb
aam
inc
das
push
xchg
jg
icebp
incl
or
push
mov
iret
cmovbe
adc
mov
int3
xchg
pop
aas
call
pop
add
pop
scas
mov
aad
xchg
jmp
sub
dec
jns
inc
xchg
xchg
fldl
frstor
push
jge
das
pop
sub
incl
mov
add
mov
push
lahf
cmp
ret
das
cltd
stos
stos
push
and
pop
data16
aad
jns
es
incl
gs
sub
or
into
ficompl
cmp
pop
lods
jno
stos
push
fbld
inc
call
lcall
cltd
mov
mov
test
add
mov
out
movsb
divb
decl
xor
cmp
xlat
in
add
xchg
cmc
or
ljmp
int3
outsl
ret
ljmp
ret
adc
pop
call
cmp
jmp
cmp
mull
lods
and
cmc
roll
ljmp
sti
xlat
sbb
jg
jg
ja
call
into
fnstsw
sbb
cmc
pushl
adc
fdivrp
ds
push
call
addr16
or
add
add
fistpll
faddl
loopne
or
pushf
cmp
int3
jp
call
jmp
test
sub
add
cmp
jne
push
mov
cwtl
dec
and
cld
adc
xchg
fists
sub
inc
jle
arpl
test
pushl
mov
or
repz
mov
sbb
movsl
lods
clc
call
cltd
jg
fisttps
scas
test
ss
shlb
sti
mov
mov
scas
and
cmp
adc
add
fadds
sub
sti
addb
mov
sti
mov
cmp
push
std
adc
inc
mov
stos
sbb
lahf
inc
and
pushl
cmp
xchg
clc
stos
mov
sub
test
sub
xchg
and
xlat
jge
std
les
inc
lcall
call
cmp
jo
std
dec
test
add
sub
decl
lds
popa
pop
mov
adc
lods
inc
inc
aad
scas
cmp
cli
lock
lahf
mov
pop
adc
test
sub
out
jb
pop
repnz
adc
xchg
cmp
pop
js
decl
aas
fwait
subl
popa
mov
bound
add
mov
sbb
popf
fildl
test
jns
sub
int
mov
mov
jg
out
sarl
iret
mov
push
lret
mov
jg
cmp
adc
out
inc
loopne
pop
loope
jbe
in
add
out
clc
aaa
and
pop
jns
sbb
or
das
lock
scas
hlt
ficoml
or
fdivl
push
xchg
mov
in
dec
xchg
sahf
cmp
mov
jnp
mov
or
push
mov
cmp
inc
sti
jg
jnp
mov
jo
jl
jns
cmp
cmp
xchg
adc
decl
inc
cs
fdiv
cmp
cmp
cmc
repz
lret
adc
mov
jg
stos
jg
fsubrl
jp
adcb
orl
out
pushl
xor
xlat
cmp
inc
jno
pop
sahf
or
mov
test
dec
add
sahf
test
jg
jg
jmp
out
adc
adc
and
mov
icebp
incl
or
jbe
lcall
add
jbe
push
mov
lcall
pop
fdivp
shlb
adc
cmp
fidivs
xchg
mov
ljmp
call
add
fnstcw
cmpsl
jno
inc
aam
mov
out
dec
push
jg
jmp
mov
xchg
in
mov
lcall
ret
imul
and
sub
out
negl
xor
cld
aad
lds
pop
add
mov
inc
inc
jo
push
test
and
fnsave
call
dec
call
and
test
fimuls
pop
imul
fwait
jnp
mov
mov
push
mov
mov
cmp
repnz
aaa
sbb
cs
call
test
mov
mov
xor
jns
scas
dec
xchg
divb
dec
loop
dec
decl
insl
cwtl
shrl
cmp
pop
repz
sahf
dec
gs
decl
insb
mov
adc
sub
rcll
and
fildl
movd
call
fldl2e
cli
movsl
mov
or
xchg
in
mov
pop
mov
xor
ljmp
outsl
aaa
mov
adc
push
mov
xchg
out
jp
pusha
cmpb
and
pop
incl
jmp
icebp
subl
xchg
aas
rcl
pop
mov
or
pop
cs
dec
bound
mov
push
popf
mov
call
lcall
or
push
sbbl
push
aad
test
loope
decl
mov
div
jae
mov
adc
pop
mov
mov
data16
fstp
jb
and
cmp
lahf
pushf
dec
sbb
jecxz
jg
xchg
mov
ljmp
xchg
aad
jge
fldl
cs
mov
add
sub
enter
rolb
or
jecxz
std
add
add
lock
int
jg
ret
rcll
xchg
push
cmp
mov
add
jmp
incl
inc
sub
stc
leave
movsb
mov
not
int
insb
push
add
add
inc
cmp
xor
xchg
adc
xchg
jnp
ds
pop
add
repz
jle
mov
sbb
iret
xor
in
sbb
icebp
xchg
ds
testb
repnz
mov
test
fists
and
cmpsl
push
push
sub
adc
push
push
jno
or
sti
lock
movsl
aaa
jmp
ds
push
lds
or
popa
xchg
mov
mov
data16
dec
cmp
cmp
pop
sub
cltd
cmp
stc
dec
aam
ds
pop
pop
mov
jbe
ljmp
jno
sbb
jl
push
in
scas
inc
mov
clc
xchg
and
clc
sbbl
mov
es
rcl
stos
fidivs
hlt
adc
mov
pop
test
adc
push
aas
xor
cmp
out
aam
pop
lock
call
je
add
jns
decl
faddl
fstpt
outsl
outsb
sub
push
inc
push
loopne
or
call
cld
ja
das
dec
pop
dec
jb
loope
aad
xor
add
arpl
sub
and
dec
add
icebp
incl
leave
out
cmp
mov
out
sub
prefetch
pop
cld
xchg
sub
les
inc
sub
inc
push
ret
jg
daa
shll
add
call
fs
push
hlt
inc
sub
cmp
decl
arpl
adcl
fldt
cmp
ljmp
scas
and
xchg
imul
cmp
pushl
sub
hlt
cmp
dec
mov
icebp
movl
fwait
sbb
add
mov
ljmp
jge
movsb
fisubrl
or
mov
lods
lcall
xchg
sar
mov
sub
adc
ret
push
mov
daa
lds
jl
loop
clc
int
inc
pop
out
mov
add
mov
jg
dec
pop
jns
jo
inc
push
adc
xor
jb
sbb
sbb
call
push
test
pop
sbb
mov
or
cld
hlt
adc
lds
jmp
incb
mov
dec
std
test
test
shrl
mov
fisttpll
add
push
repz
jl
pop
pop
ljmp
jg
mov
pop
scas
rorl
push
sbb
adc
movb
movsl
jg
add
loopne
call
push
leave
lds
es
jecxz
adc
test
es
mov
call
push
mov
xchg
aam
sbb
fs
shlb
xchg
icebp
pushf
jae
pushl
incl
fs
insl
lds
ds
pop
in
lret
xchg
cmp
push
sub
sahf
js
xchg
sub
jb
roll
movsl
pop
inc
out
pusha
pusha
xchg
jle
jne
sub
ljmp
test
pop
stos
cwtl
sub
les
lcall
push
mov
mov
lret
out
std
cltd
iret
hlt
lds
in
sbb
inc
inc
icebp
pushl
ret
cli
movsl
bound
lret
sbb
cmpsb
add
fucomip
xor
icebp
jle
ret
sub
ret
mov
enter
pop
mov
jle
adc
mov
add
push
fadds
add
out
xchg
mov
add
sbb
lret
sbbb
mov
ds
stc
cli
lcall
sbb
imul
daa
gs
sbb
ljmp
test
rcll
mov
inc
movsl
cmpsl
pushf
cmp
sbb
incl
mov
stos
cmp
mov
xchg
insb
xchg
mov
mov
imul
jg
mov
enter
pop
fimull
dec
in
stos
xor
shrb
jmp
outsl
std
clc
adc
sbb
gs
pop
ret
iret
add
rcrb
lcall
mov
push
mov
repz
mov
incb
fbstp
push
jmp
xchg
or
lahf
lcall
cwtl
push
pusha
pop
mov
pop
push
mov
shlb
int
decl
jae
pop
dec
mov
addl
add
cmpb
ret
mov
sbb
adc
jo
pushl
es
pop
andb
dec
add
insl
mov
decl
mov
mov
fimull
outsb
pop
and
das
mov
mov
mov
lret
les
daa
call
add
test
iret
dec
outsb
call
dec
scas
mov
add
int
cmp
sbb
sahf
sti
mov
jnp
outsl
mov
mov
mov
add
push
rorl
adc
sbb
cmpsb
jg
jge
gs
jnp
cmp
jmp
lds
rcrl
loop
mov
or
mov
stos
sbb
xchg
push
xchg
push
inc
cmp
jle
incl
ja
cmp
or
popa
cmp
inc
add
mov
xor
xor
clc
insb
pushf
adcl
imul
mov
cli
adc
fidivrs
pop
xor
pop
dec
add
push
repz
sub
incl
nop
test
hlt
rcrb
xchg
test
gs
mov
out
in
push
xchg
test
jge
pushl
hlt
loopne
ret
push
push
and
nop
dec
pop
mov
jecxz
pop
iret
das
scas
jecxz
movb
scas
cmp
mov
insb
call
nop
dec
cld
pop
jmp
xor
push
or
jg
std
pop
xor
adcb
dec
popl
xchg
gs
cld
sbb
jae
and
std
in
fisttpl
sar
inc
mov
pop
or
movsl
mov
sbb
js
insl
inc
call
scas
xrelease
jp
imul
mov
inc
pop
cmp
add
cli
or
sub
in
popa
mov
adc
mov
int
push
pop
sbb
stos
test
xor
push
adcl
jg
mov
ja
adc
clc
or
call
pushl
push
lea
inc
insl
mov
add
adc
jg
loopne
lock
ljmp
jp
dec
repnz
test
jge
mov
pop
mov
in
or
icebp
dec
out
mov
ja
mov
xchg
aas
sub
jg
pop
cmp
pop
sbb
mov
test
ffree
push
in
call
dec
push
xchg
repz
adc
dec
mov
lret
das
jnp
cmpl
shr
jns
sub
jb
sub
cwtl
cld
pusha
ficomps
das
sub
pushl
fwait
jbe
pop
lods
mov
xor
or
stos
cmp
inc
bound
pop
sub
pushf
sbb
incl
outsb
pop
push
add
or
cmpsb
lret
outsb
movsl
or
or
leave
adc
jp
es
pop
mov
ror
call
push
mov
std
dec
add
push
sahf
icebp
fstps
xor
fstpt
xchg
jns
push
or
stos
into
dec
or
mov
xchg
jno
cmpsb
decl
mov
mov
mov
jne
pop
jno
push
in
xor
adc
fnsave
neg
cmp
mov
xchg
mov
aaa
fiadds
out
jge
insb
cmp
dec
xchg
popa
pop
push
in
sub
lcall
ss
jp
inc
mov
mov
jno
cmc
adc
lea
mov
fsubrl
xlat
arpl
push
add
call
jmp
add
mov
adc
adc
jnp
insb
inc
repnz
mov
cmp
push
jne
mov
mov
insb
dec
orb
xchg
mov
mov
out
xor
mov
popf
xor
adc
imul
inc
fsts
incl
enter
push
scas
insb
lret
pop
int3
fs
int3
mov
fdivrp
xchg
inc
xor
or
pop
cli
aad
fidivl
adc
out
fisttpl
fnstsw
ficomps
xor
aad
cmp
jmp
push
call
lock
sub
adc
lods
mov
jnp
or
pop
jae
out
mov
call
xchg
loop
pop
aad
int3
bound
sbb
sti
fcomi
inc
pop
iret
jg
ret
add
dec
dec
not
xchg
ljmp
dec
incl
push
add
pop
mov
adc
push
lea
call
sar
mov
mov
cmp
arpl
sub
or
mov
jmp
xchg
icebp
outsb
jge
es
hlt
adc
cmc
push
inc
add
shl
and
iret
or
ljmp
jmp
addr16
loope
sahf
push
inc
sbb
jl
push
jb
insb
pop
xchg
orl
in
sub
mov
jge
mulb
cmpb
jle
mov
dec
in
add
das
loope
aas
or
bound
imulb
aad
xchg
jmp
pop
cmpsl
sbb
gs
std
cmpsb
das
sub
enter
pop
jge
jg
decl
ret
mov
pop
cmpsl
and
mul
sti
jp
lods
mov
mov
sub
in
sub
fstps
ja
xchg
mov
cmp
jne
sub
out
sub
jmp
or
push
cmp
pop
push
adc
mov
xor
in
push
lods
adc
sub
mov
cmp
mov
add
call
das
das
xchg
nop
mov
add
scas
jp
or
addr16
inc
loope
out
adc
scas
adc
imul
shll
xor
jnp
pop
dec
jae
fistpll
loop
jmp
jmp
mov
pop
fimuls
adc
xchg
jmp
sbb
adc
cmp
or
in
jle
gs
movsl
pop
pop
fwait
ror
pop
rcl
aam
push
push
push
mov
mov
xchg
std
fs
sub
fdivs
pop
lahf
pop
jne
sub
decl
or
outsl
hlt
and
mov
jge
mov
and
les
and
sub
pop
clc
sti
loope
arpl
and
sti
int3
orl
outsb
mov
inc
adcl
scas
cmc
sub
das
nop
inc
adc
sti
mov
aad
xchg
xchg
scas
std
fisubl
jmp
mov
pushl
fistpl
lahf
insl
xor
divl
and
popa
inc
lret
imul
sbb
cmp
sbb
repnz
adc
push
sub
call
mov
adc
dec
outsl
jecxz
and
mov
push
sbb
lds
test
pushl
aas
mov
jmp
cmp
insb
xchg
dec
enter
mov
adc
call
das
adc
add
cli
stos
mov
jne
jl
mov
hlt
dec
ret
incl
mov
pop
sbb
inc
fsub
aam
ds
call
mov
clc
loop
test
mov
sbb
inc
aaa
cli
ljmp
jb
push
sbb
inc
bswap
mov
das
icebp
xabort
or
stos
mov
and
dec
test
jns
add
push
imul
inc
mov
icebp
mov
or
cld
test
sti
stc
testb
sbb
aam
shrb
mov
mov
and
dec
inc
cmp
ljmp
andb
xchg
adcb
icebp
push
or
cmpsb
mov
incl
push
xchg
rcrl
xchg
xchg
in
mov
aam
cmp
inc
xchg
dec
jns
lret
loop
push
or
adc
sub
jb
mov
jnp
aaa
fwait
rolb
fisttpl
sbb
je
cmp
push
adc
in
pop
dec
std
call
clc
cmc
xchg
inc
xor
insl
jp
stos
enter
nop
aaa
inc
sbb
push
mov
jnp
mov
es
push
lods
in
lcall
call
push
pop
fmul
sbb
push
je
pop
out
xchg
sub
mov
lret
jmp
movsl
and
clc
add
fadds
roll
pop
hlt
and
sbb
add
fisubrs
mov
and
sub
leave
inc
pusha
jp
ljmp
mov
or
roll
push
ficomps
lcall
or
icebp
dec
mov
mov
xchg
call
sub
fcoms
mov
call
inc
inc
mov
arpl
mov
push
push
cld
sbb
inc
aam
lahf
mov
fs
or
aas
repz
fcmovnbe
in
lcall
pop
xlat
pop
pop
in
test
lea
jno
and
scas
cmp
xor
and
inc
orl
incl
hlt
xor
pop
dec
test
mov
sub
js
and
mov
xchg
sub
mov
jmp
inc
dec
lds
les
lcall
pop
xchg
lcall
mov
pop
and
mov
andb
mov
lcall
cmc
dec
stos
push
pop
push
push
mov
mov
mov
rcl
or
iret
mov
or
call
mov
adc
fs
push
jns
jmp
popf
fists
sbb
mov
pop
aas
lret
and
pushl
push
mov
jmp
mov
xchg
xchg
mov
sbb
push
adc
fstpt
adc
add
mov
dec
call
loopne
xor
call
xchg
jnp
out
shl
loope
lock
mov
ds
aaa
mov
jno
lcall
std
pushl
mov
or
adc
outsb
mov
sbb
ds
cmp
push
lahf
subl
call
mov
mov
lock
cld
stos
jno
outsb
outsl
call
mov
mov
andb
sbb
sub
popa
jle
lcall
inc
pop
mov
sub
xorb
scas
cwtl
mov
pop
ds
cmp
test
sub
scas
pop
insb
inc
pushl
insb
mov
push
cmp
ljmp
cld
lcall
jb
mov
add
dec
dec
call
sbb
scas
nop
shr
xor
or
subb
jmp
pop
lods
push
dec
ljmp
call
shlb
aad
push
cmp
and
mov
xchg
or
out
lcall
fsts
outsb
adc
rcr
mov
push
rol
or
xchg
dec
xchg
inc
mov
pop
jo
sbb
popa
and
mov
fstpt
jl
ja
fs
in
dec
cs
roll
sbb
cli
das
ret
sub
sarb
jg
mov
push
scas
shlb
mov
sub
jg
out
xchg
dec
jl
jnp
jae
cli
nop
rol
out
ljmp
dec
adc
in
sbb
or
cmp
xchg
jmp
mov
shll
jle
sub
pushl
mov
js
std
add
jnp
jae
cmp
mov
jecxz
push
push
paddw
xchg
xor
pop
leave
es
test
jg
jnp
cmp
push
add
or
mov
push
or
gs
jno
scas
pop
and
mov
mov
mov
jo
and
mov
mov
es
lret
sbb
cmc
mov
jmp
insb
ret
fistl
xchg
rorb
pop
in
out
jo
adc
mov
mov
mov
mov
mov
inc
ljmp
in
mov
mov
adc
hlt
stc
and
add
inc
sub
pop
xor
sub
dec
and
pushl
test
xchg
xchg
push
pop
inc
or
loope
js
pop
loopne
call
rcl
push
hlt
iret
int
pop
push
sarb
cltd
shrb
js
dec
mov
sbb
push
mov
enter
pop
arpl
fldt
dec
shl
nop
xorb
or
or
mov
adc
sbb
sub
mov
in
js
push
sub
jmp
or
push
or
sbb
pop
mov
adc
fistpl
fildl
xchg
lds
clc
ljmp
es
fs
xlat
and
jns
hlt
addr16
cld
sub
test
pushl
push
jl
mov
lds
push
lcall
add
xor
add
fucomip
js
fwait
mov
push
mov
push
scas
incb
sub
jg
insb
lea
mov
pop
jae
mov
push
jle
pop
and
adc
sub
push
jmp
loopne
cmp
fiadds
test
loop
mull
cmp
add
pop
fwait
sti
mov
jle
add
popf
push
fcmovb
loopne
inc
aas
mov
jge
leave
mov
out
cmp
pop
cwtl
mov
mov
sbb
ja
xor
sahf
popa
test
test
out
fstps
out
mov
lcall
and
cs
test
cmpl
into
sysret
pop
inc
es
push
mov
dec
pop
fnstsw
pop
xor
jmp
or
and
lds
inc
dec
dec
sub
jmp
fistl
xor
shlb
mov
push
pop
js
or
cmp
imul
testb
inc
push
mov
inc
lea
lods
out
ret
xchg
push
addb
push
stc
ljmp
push
mov
xchg
cmp
push
mov
add
lret
adc
dec
aaa
xlat
xchg
push
cwtl
call
ljmp
mov
adc
push
lds
cmc
movsl
cli
call
mov
in
sub
in
mov
ficomps
shl
cli
das
jo
and
sub
lret
jns
push
rorl
inc
ljmp
fs
loop
add
sub
arpl
dec
sub
cmpl
and
scas
ja
int
repz
mov
pusha
out
popa
fucomip
jg
lret
iret
mov
ficoml
mov
pop
or
cwtl
mov
insb
jl
add
ljmp
cld
pop
xlat
add
cmp
scas
xor
jo
shll
test
insl
fisttpll
jmp
mull
jb
pop
pop
leave
inc
jb
rolb
icebp
test
ljmp
pop
xchg
fistps
and
hlt
arpl
sbb
insb
or
jmp
ds
mov
in
cmc
and
sub
decb
push
dec
imul
xor
pop
fisubrs
popa
fbstp
outsb
xchg
adc
jns
ret
loopne
pushl
push
adc
jecxz
insb
jmp
sub
mov
or
dec
insl
daa
sbb
int3
mov
repnz
cmpsl
mov
pop
xor
pushf
jns
outsl
cld
mov
jle
fnstcw
int
cltd
xor
inc
lcall
push
mov
or
pop
dec
mov
push
inc
adc
xchg
pushl
inc
jne
in
pop
pop
scas
inc
or
push
lea
hlt
lea
jo
outsb
jl
fdivr
lcall
or
loopne
push
or
loopne
sub
pusha
sbb
inc
cli
movsl
and
pop
aas
test
ljmp
push
movsl
lods
aas
xchg
popf
pop
aaa
loope
loope
cwtl
test
sbb
loopne
or
cmp
sbb
lock
call
test
push
mov
pusha
push
data16
push
loop
or
cmp
icebp
inc
decl
xorb
pop
mov
incl
arpl
jns
aaa
add
lds
outsl
imull
add
sub
cmp
decl
lcall
stc
push
out
mov
inc
inc
xor
jle
cld
mov
xlat
loopne
call
jmp
sub
loop
xchg
sbb
stc
jae
dec
cmpsl
cmp
push
in
inc
incl
cmp
add
push
test
inc
adc
imul
pop
stos
and
in
dec
orb
jo
add
mov
enter
mov
jae
sbb
leave
jecxz
popa
or
inc
inc
out
incl
outsl
scas
jg
jecxz
test
repnz
or
movl
cld
decl
jae
fsts
sahf
jecxz
jo
sub
pop
jle
call
loopne
imull
mov
pop
add
xor
sub
clc
int
push
sub
dec
mov
les
ja
insb
out
pop
dec
push
decl
outsb
faddp
adc
lret
call
mov
ljmp
pop
nop
ds
rcl
mov
das
ffree
mov
decl
loop
sub
jecxz
jp
mov
pop
int3
xchg
and
das
mov
xor
pop
pop
or
loope
cmp
dec
adc
lods
incl
imul
adc
xchg
pop
push
outsl
pop
jle
adc
dec
cmp
movsb
stos
dec
int3
pop
std
sbb
and
enter
lds
dec
test
call
push
outsb
add
sbb
push
xor
and
dec
mov
pushl
lds
test
or
pop
sub
fsts
idiv
push
decl
pop
ljmp
decb
push
adc
insl
pusha
or
jmp
xchg
lret
ficompl
ret
pop
scas
mov
push
mov
jno
dec
adc
mov
in
jmp
cld
lods
xchg
xchg
mov
arpl
fisubrs
jg
lcall
aad
shrl
test
lods
cmp
cli
jp
arpl
or
incl
arpl
sbb
scas
xor
mov
arpl
test
mov
pop
add
sub
call
dec
popa
dec
int
jmp
repnz
adc
sti
jl
call
sub
fnstsw
mov
and
lret
bound
sub
lcall
mov
fcmovu
scas
mov
out
add
jae
sti
sub
lods
or
xor
mov
movsl
jne
adc
cs
das
aam
pop
lahf
or
pop
push
mov
mov
arpl
sbb
and
adc
sub
xor
adc
xchg
push
mov
and
cwtl
pop
push
fcoml
pop
movsl
mov
or
hlt
decl
std
popf
dec
cmp
repnz
int3
mov
rol
xchg
jo
push
adc
push
mov
test
ljmp
xchg
cwtl
mov
jle
divb
push
mov
mov
imul
inc
sar
incl
mov
icebp
xlat
mov
test
dec
cmp
incl
push
dec
jecxz
dec
xchg
cmpsb
xor
cmc
popa
inc
jg
fisubl
dec
dec
ljmp
hlt
fs
cmpsb
inc
cmp
mov
pop
push
cli
popf
xor
pop
in
incl
pop
sbb
outsl
sub
std
inc
test
call
aaa
fsubp
mov
xor
jo
in
lock
inc
je
adc
sub
jmp
int
mov
js
cmpsl
out
jp
mov
and
push
js
sti
push
ljmp
test
jb
mov
sar
lcall
push
pop
mov
xchg
push
subl
std
ljmp
movsl
pop
xchg
jmp
and
mov
sar
xchg
out
push
push
xchg
pop
lret
or
cmp
ret
push
dec
mov
incl
jecxz
jp
fs
and
jb
aaa
ljmp
or
mov
fstpl
inc
sti
mov
inc
dec
xor
mov
fdivrs
insl
pushf
dec
sahf
insb
inc
mov
pop
push
mov
pushf
shlb
xor
ss
data16
js
icebp
ljmp
ud0
call
popf
dec
and
xor
xor
xchg
addb
mov
xchg
add
pushl
jno
enter
jns
idivb
jbe
jne
pop
ljmp
in
inc
push
or
pushl
pushw
jmp
test
cmp
jg
pushl
dec
dec
dec
mov
inc
xor
bound
sbb
inc
arpl
jnp
ljmp
sbb
call
jbe
and
jmp
adc
int
sub
mov
ret
aad
stos
incb
inc
fwait
xchg
incl
outsb
test
out
out
out
mov
jb
int3
jns
in
cs
jmp
mov
lret
sub
stos
sbb
mov
cmp
sbb
sbb
lret
in
adc
call
and
mov
daa
cmp
sub
loop
cli
adc
call
or
pop
mov
mov
push
mov
incl
dec
mov
pop
into
xchg
fcoms
mov
js
jae
xchg
inc
jp
sti
aas
lods
or
mov
std
cld
jae
call
dec
test
movl
leave
adc
jg
fnsave
push
xchg
push
push
pop
pop
or
inc
cmp
and
int
scas
adc
fbld
dec
mov
int3
fdivl
orb
push
sbb
test
loop
push
mov
add
sbb
scas
fildl
mov
xlat
incl
adc
fnstcw
xchg
xchg
cmp
push
aam
jno
pop
jno
adc
pop
jecxz
ljmp
insb
ss
xchg
push
sub
mov
je
data16
out
scas
xchg
push
pop
pop
xor
pop
imul
cmpl
push
scas
xchg
pop
cmpsb
scas
cmp
inc
fstp
negb
xor
rol
push
mov
aam
dec
push
out
sbb
sbb
sbb
dec
mov
mov
jns
repz
sub
nop
nop
jo
inc
adc
and
stc
shll
in
xchg
dec
sti
push
call
sbb
repnz
push
loope
rcll
icebp
mov
jg
mov
gs
dec
in
movsb
mov
iret
push
or
movsl
cmp
jne
imul
incl
movsl
add
shlb
sub
repz
xchg
popl
movsl
decl
shrl
push
jae
scas
test
mov
pop
mov
out
xchg
mov
dec
mov
ss
sub
mov
xchg
fistpll
mov
push
nop
xchg
js
push
jns
push
roll
or
inc
shufps
ljmp
jns
imul
mov
lea
lods
lret
push
jg
add
mov
inc
cmp
mov
cmp
sub
or
jmp
mov
add
std
int
test
dec
sti
xor
out
pusha
push
xchg
pushaw
mov
push
xchg
stos
fsubp
push
imull
push
fisubs
mov
mov
or
inc
lcall
fcmove
lds
sub
sbb
pop
mov
or
adc
insl
int3
pop
inc
jg
js
ret
push
ss
mov
lea
dec
adcl
mov
dec
xchg
jg
sbb
push
sub
subps
push
pop
ret
or
inc
pop
or
mov
daa
pop
sub
in
sti
sbb
movsl
dec
mov
cmp
ret
fsubl
jns
mov
cld
das
icebp
dec
mov
fwait
test
inc
je
in
inc
shl
call
jo
push
add
lods
and
lock
ret
repz
inc
push
inc
rcl
lea
fdivrl
ss
ficompl
sub
gs
jb
dec
in
mov
mov
lcall
mov
je
xor
repnz
cmp
sub
jmp
sub
sub
jb
and
mov
jmp
xor
in
pop
cmpsb
cli
fnstenv
xchg
sub
arpl
ds
aas
jae
das
mov
adc
out
outsb
addr16
and
adc
jg
incl
mov
mov
in
shrl
in
and
cmp
es
sbb
cltd
mov
fisttps
push
jns
fsubp
jae
xchg
jle,pt
jne
test
je
cltd
call
pop
mov
xchg
pop
xchg
in
cmpsl
and
fnstenv
sahf
aas
add
movsl
pushf
js
xchg
push
std
jge
jg
pop
add
fucomp
jo
call
cli
fwait
daa
xchg
and
stc
test
stc
imul
cmp
cltd
outsl
dec
mov
fucomip
jns
fidivs
add
xchg
add
fldt
test
sub
fstpt
pop
cmp
es
lods
in
divb
mov
lret
insl
xchg
imul
jp
jnp
ds
das
pop
xchg
daa
lock
jb
nop
xchg
sbb
mov
push
daa
pop
or
fdivrl
push
add
sub
enter
sbb
lret
cmpsb
mov
ficomps
sub
lcall
pop
adc
push
iret
add
sti
inc
mov
scas
addr16
and
adc
xor
call
imul
lods
xor
mov
xchg
in
lds
pop
pop
pop
adc
test
fdivr
jns
xchg
daa
sub
fimull
fdivl
dec
dec
sub
xchg
imul
sub
and
jg
insb
lret
inc
pop
jno
scas
lods
pop
stc
dec
adc
lods
call
pop
mov
push
jmp
ret
jg
lret
leave
inc
mov
in
and
inc
call
sbb
decl
std
insl
out
ja
adc
movb
xchg
push
jle
and
sbb
jmp
notb
mov
jl
dec
into
pusha
imul
les
cwtl
loop
lds
pusha
mov
mov
out
ficomps
jne
cld
inc
or
adc
imul
sub
xchg
lret
mov
ds
xchg
adc
mov
inc
xchg
jbe
push
mov
mov
jae
mov
dec
add
lods
das
lock
pop
pop
inc
pushf
popf
xor
pop
gs
inc
sti
lcall
push
out
fcmovnb
mov
mov
add
sub
lcall
loope
and
mov
sub
pop
dec
iret
mov
inc
in
nop
repz
cs
dec
cld
in
sub
lock
imul
fwait
lcall
pop
xor
inc
mov
std
fistpll
jb
in
dec
mov
jecxz
lods
cs
loope
adc
mov
inc
lret
sti
add
xchg
loop
decl
jle
dec
stc
sub
push
pop
in
daa
push
xchg
adc
scas
rcll
ret
ljmp
xlat
sbb
call
mov
cltd
cs
jg
sub
mov
shlb
test
nop
inc
int
add
push
enter
mov
lahf
push
test
sbb
push
cmpsb
or
insb
add
into
jne
push
mov
cmpsl
clc
stos
mov
test
inc
shll
test
je
sbb
test
das
add
pop
test
mov
into
xchg
or
inc
push
aaa
decl
adc
cmpl
les
jmp
arpl
lds
push
lcall
std
jmp
outsb
mov
sbb
jp
add
jnp
loop
lcall
jg
sub
jno
fldl
mov
sbb
repnz
dec
fucomip
call
sbb
mov
and
cmc
push
dec
xchg
dec
gs
decl
call
jns
je
cmc
inc
divl
inc
cmc
xchg
cmp
and
push
pusha
sbb
sbb
shll
cmp
jnp
insl
ret
sarb
cwtl
xchg
mov
push
pushl
pop
xor
mov
lcall
js
add
ljmp
mov
scas
fistpll
imul
es
sub
pop
ljmp
pop
loop
pop
and
mov
add
and
adc
dec
jg
pop
push
mov
sub
sub
movsl
mov
jg
mov
sbb
dec
loopne
ja
sbb
iret
push
scas
out
pop
mov
std
ds
jl
rcll
addr16
dec
leave
xor
std
jmp
rorl
sbb
jo
movsl
out
sbb
xor
decl
nop
imul
insb
inc
push
cli
mov
aam
idivb
dec
mov
cmpb
sbb
add
inc
dec
insb
cmc
mov
jmp
rolb
clc
incl
leave
xchg
push
and
dec
clc
xchg
std
stos
call
sbb
lcall
sub
dec
cmc
out
inc
jmp
ret
sbb
xchg
sbb
cmp
imul
mov
push
cli
and
sbb
inc
imul
push
adc
imul
add
je
jecxz
decl
fistpl
xchg
mov
movsl
imul
sub
mulb
cmp
inc
cwtl
and
imul
mov
sub
pop
jp
pop
mov
test
mov
pop
add
jmp
in
cs
aas
lret
pop
sub
jge
add
fisttpll
imul
mov
dec
sub
cmp
and
dec
xchg
or
and
lods
inc
fsubs
or
jmp
ret
stc
decl
jl
mov
xchg
je
cld
mov
fdiv
mov
pop
mov
and
in
inc
ljmp
cld
dec
cld
pop
imul
xchg
mov
js
pop
clc
cs
pop
fistpll
mov
sbb
sub
data16
sub
jne
jecxz
mov
daa
mov
faddl
pop
stos
loopne
xor
scas
inc
push
inc
xchg
mov
mov
loope
or
mov
movsb
xor
push
lcall
pushl
scas
sbb
cmp
jge
iret
in
xchg
sub
jne
int
incl
mov
aaa
pop
cmc
lods
mov
shrl
dec
inc
inc
jae
sahf
lahf
popa
dec
sbb
mov
xchg
push
pop
cmc
xorb
shll
outsl
push
inc
adc
inc
negl
cli
fbstp
xchg
daa
xchg
push
xlat
mov
jg
in
jecxz
popa
addl
aam
fstpl
mov
pop
stos
stc
leave
cmovle
ljmp
nop
popa
cmp
xchg
in
aam
sub
or
arpl
ljmp
in
cmpl
mov
mov
insb
mov
call
aas
insl
mov
xchg
cmp
gs
cli
ljmp
popf
pop
sub
test
out
pop
jae
lret
idiv
mov
inc
notl
out
pushf
adcl
ss
mov
aas
inc
dec
mov
call
jnp
sbb
adc
pop
int3
in
mov
stc
lods
and
jl
sub
xor
pop
gs
mov
lock
mov
ret
mov
mov
push
jp
std
ljmp
xchg
pop
jne
pop
xor
dec
jno
cmp
lods
ljmp
loop
lcall
daa
sbb
aaa
lret
sub
loop
and
or
pop
push
push
in
mov
pusha
mov
fnstenv
jg
cmpsl
mov
mov
sti
mov
dec
jg
imul
mov
clc
in
loope
push
jns
sbb
mov
lcall
cli
and
sub
lock
mov
adc
fbld
std
xchg
ficoms
decl
cmp
push
sahf
mov
add
mov
lds
pop
clc
ja
fsubrp
jnp
xchg
mov
lcall
pop
loope
cs
dec
imul
int
jne
ja
lods
and
sbb
out
push
jns
mov
out
inc
es
hlt
mov
or
and
fnstenv
scas
sub
call
sbb
sub
xchg
push
lahf
add
pop
sahf
cmc
xchg
fdivrs
jmp
mov
pop
push
testl
cmp
mov
mov
pushf
mov
ret
add
push
lahf
dec
outsb
mov
push
push
xchg
jecxz
mov
jg
mov
subl
hlt
outsb
cmp
dec
incl
incb
adc
jno
nop
shl
or
fwait
or
decl
push
push
outsb
and
bound
mov
xchg
in
ljmp
loopne
inc
jb
push
fldcw
mov
adc
fwait
cmp
jg
decl
shlb
in
jb
inc
mov
orl
lcall
icebp
push
negl
test
popl
shlb
add
dec
pop
add
xor
int3
nop
dec
cmpsl
dec
jmp
adc
mov
pushl
jo
jecxz
mov
pop
enter
lock
xor
pop
incb
jmp
faddl
out
in
push
and
lcall
xchg
dec
scas
incl
adc
ljmp
in
jb
inc
mov
lret
mov
mov
incl
gs
add
insb
dec
inc
inc
xchg
ficoms
sarb
shl
cli
decl
std
cmpsl
int3
sub
hlt
ja
test
inc
lcall
mov
jle
outsl
fs
insl
lds
xchg
imul
cmp
mov
xor
push
push
test
sbb
mov
jno
mov
cmp
es
lea
icebp
inc
cmp
xor
mov
push
lahf
jl
dec
push
mov
gs
cmpsb
xchg
pop
xor
call
adc
fisttpll
jp
and
ficoml
lret
mov
aaa
push
insl
cmpsb
add
fldcw
or
jne
neg
in
outsb
mov
popa
add
sbb
and
pop
push
xchg
jecxz
stc
push
hlt
rcll
movsl
lods
inc
add
jge
and
xchg
jbe
cwtl
jp
scas
rcr
sub
das
lock
mul
sbb
push
cwtl
mov
mov
lret
mov
cwtl
idivb
xor
fistpl
xor
insb
inc
test
mov
mulb
test
out
xchg
sub
loopne
incl
sahf
movsb
andl
and
mov
ja
aas
or
mov
das
lock
imul
data16
lock
out
or
in
lret
mov
inc
icebp
pop
fsub
sbb
and
stos
mov
mov
dec
les
in
in
add
mov
sbb
xor
push
shr
rol
sbb
jp
jmp
mov
aad
call
mov
loop
mov
ja
add
dec
int3
pop
int3
jns
hlt
int3
inc
sbb
call
fistpll
sarl
inc
rorl
add
bound
outsl
cmc
fisttps
add
imul
leave
hlt
adc
ljmp
pushl
test
dec
pop
xor
cmp
mov
add
xor
enter
enter
mov
push
lea
mov
aam
addb
fcom
fildll
push
xchg
call
xchg
or
scas
xchg
inc
sbb
push
jbe,pn
fdivrp
pusha
xchg
rcll
cmp
jle
jmp
js
jb
xor
sub
mov
call
loop
inc
pop
sub
xchg
cld
mov
pop
mov
adc
cwtl
inc
loope
lods
inc
loopne
js
out
mov
nop
sti
dec
sub
push
jl
gs
fcmovnbe
sub
dec
jmp
mov
dec
mov
jmp
dec
push
shl
sahf
add
scas
in
xor
push
aad
sar
shl
mov
mov
fdivr
mov
or
inc
jge
mov
decl
add
popf
out
or
mov
cltd
push
jp
cwtl
jl
adc
xor
or
das
cmc
clc
stos
clc
sub
add
outsl
mov
sbb
popa
decl
fwait
jmp
jle
inc
iret
int
pop
in
xor
in
imul
ja
xchg
ja
scas
les
call
add
sti
adc
cmp
sub
xchg
scas
sub
and
outsb
call
pushl
or
scas
ret
dec
xor
pop
inc
arpl
inc
mov
xchg
movsw
aas
insb
cwtl
mov
decl
and
scas
ja
adcb
movhps
dec
arpl
adc
cmp
shrb
dec
push
push
or
jmp
fadd
inc
fsubr
jno
mov
mov
lea
cmc
and
movsl
push
jecxz
cmp
call
iret
aas
incl
inc
ja
xchg
pushf
jno
dec
pop
inc
adc
scas
xor
jp
and
call
add
je
ljmp
add
test
mov
or
add
out
push
xchg
mov
push
test
fwait
mov
push
gs
inc
shl
lds
pusha
jge
fwait
push
sbb
adc
inc
mov
aaa
mov
ds
and
xor
loope
stos
jp
pop
lahf
enter
pushf
std
ja
lcall
sub
aad
js
adcl
cld
notb
je
push
add
lcall
xor
mov
enter
xchg
nop
stos
cltd
aam
adc
test
jg
call
shrl
jle
movsb
mov
fldt
xchg
incb
xchg
mov
icebp
lcall
sahf
xchg
push
add
inc
ret
lret
clc
inc
and
cltd
push
repz
push
or
xchg
jns
mov
pop
mov
inc
push
incl
jbe
out
jmp
xchg
xor
shrl
xor
xchg
into
push
leave
dec
cmp
call
cmp
in
inc
xor
dec
sbb
pushl
flds
jnp
fsubrl
inc
fwait
in
sub
stos
pushl
insl
cmpb
or
mov
in
ja
jae
clc
push
add
push
dec
pop
push
dec
add
lods
push
sub
xor
test
pop
adc
mov
mov
xchg
jnp
push
jl
push
pop
add
mov
call
inc
adc
inc
and
mov
push
and
inc
xor
dec
call
out
and
lods
sub
mov
xchg
xchg
and
loop
das
lock
push
mov
mov
add
mov
pushl
pop
xorb
shlb
and
gs
mov
xor
outsb
inc
ljmp
adc
push
cmp
cmp
addb
in
adc
sbbl
lods
mov
sbb
sub
out
cmpl
mov
xchg
shrl
mov
xor
dec
cmpsb
fwait
mov
xor
cmpsb
xchg
jmp
mov
rcl
scas
or
xchg
das
cmc
jmp
or
xor
dec
sbb
push
das
sub
pop
pop
imul
lret
mov
loopne
hlt
daa
mov
cld
xchg
mov
hlt
movl
jg
in
add
addr16
aas
and
mov
sub
or
jg
ret
sub
jae
push
xchg
xchg
test
push
mov
mov
test
cmp
and
loope
jns
hlt
outsl
sbb
pop
mov
movsb
mov
push
xchg
inc
cmp
test
stos
in
inc
xchg
cli
inc
dec
fsubl
cs
aas
jp
mov
sub
or
sub
clc
ljmp
into
cmp
movsl
cmp
mov
hlt
and
add
fisubs
fildll
lcall
std
aaa
inc
test
pop
dec
fcoml
push
or
mov
mov
das
shll
sbb
ljmp
cld
xor
shll
imul
aas
dec
cld
push
lock
ljmp
xchg
mov
aas
pop
push
push
mov
call
xorl
jns
sbb
jp
cli
pop
mov
xchg
incl
fildl
and
sub
cld
shlb
loopne
pop
push
or
leave
jne
or
decl
aas
mov
mov
cmp
in
mov
push
mov
push
sbbl
sub
or
adc
xlat
cmpsb
cmp
loope
lret
mov
imul
data16
jle
jge
mov
ljmp
mov
popa
jne
lcall
int
data16
inc
jb
mov
cld
mov
cmp
sarl
cmp
add
out
inc
mov
adc
jmp
fiadds
or
or
ljmp
call
stc
daa
es
sub
cmpsl
in
push
test
jmp
pushf
fmull
xchg
shll
mov
mov
inc
ret
ljmp
pop
sti
dec
mov
adc
enter
inc
adc
dec
push
daa
inc
jp
lcall
mov
jo
or
fcompl
or
aaa
outsb
adc
clc
mov
jl
test
pop
jl
shrl
icebp
mov
jne
adc
fsts
ret
add
jecxz
das
bound
repz
fdivp
push
cmpsb
mov
jnp
adc
mov
mov
test
inc
pop
addr16
es
lock
fdivr
mov
call
pop
icebp
jmp
sbb
push
repz
stos
or
popa
cmp
cld
pop
clc
pop
enter
sub
scas
mov
lret
sbb
lcall
lods
ds
xchg
mov
fsubrl
int
lock
push
js
adcl
pushf
adc
ret
push
pop
adc
lods
icebp
fadd
xchg
aas
js
jg
sti
push
pop
mov
mov
in
test
lea
jbe
aam
pop
mov
shl
sbbl
pushl
arpl
in
imul
movsb
fwait
movsl
or
jmp
pushl
inc
mov
cmc
daa
inc
movl
leave
in
stos
fcomps
incl
lcall
cmp
inc
je
ja
mov
mov
lret
jl
push
mov
nop
adc
jbe
in
mov
pop
out
sub
push
cld
pop
decl
stos
in
lcall
xor
pop
mov
lcall
cmp
movsb
roll
hlt
mov
imul
pop
push
mov
incl
fcmovb
lods
mov
enter
push
push
aad
shrl
inc
fisubs
insl
jbe
jns
xlat
pcmpeqw
negl
icebp
adc
fsincos
stos
fs
test
lock
out
and
icebp
inc
inc
xlat
aaa
pop
loop
xor
xchg
sbb
sbb
add
mov
in
jg
incl
dec
sub
popa
cld
sub
out
and
fcmovnu
jns
incl
aas
psubsb
cwtl
pushf
fdivp
cmp
inc
jp
mov
mov
push
mov
loop
xor
f2xm1
lret
mov
dec
jmp
test
push
incl
xchg
mov
push
and
jle
call
incl
dec
jecxz
ja
xchg
inc
sar
sub
inc
add
mov
ljmp
pop
xor
add
das
mov
jg
out
sbb
xchg
adc
and
es
push
mov
push
push
mov
rclb
movsb
repnz
ss
scas
ja
xchg
cmp
sbb
insl
ret
inc
daa
scas
adc
rcrl
incl
aaa
dec
out
pushf
pop
insb
cltd
fdivs
imul
addr16
mov
repz
sbb
mov
imul
sbb
cmpsb
cmp
jecxz
dec
sahf
lods
mov
pop
das
lock
ljmp
xlat
data16
add
jg
inc
shll
push
sbb
add
xlat
call
mov
fnstcw
lret
inc
stos
xor
dec
dec
sbb
xor
add
lea
jecxz
icebp
decl
xor
popa
mov
mov
out
repz
in
cmp
mov
aaa
cli
incl
add
js
fdivrs
xlat
dec
cmp
xchg
fsub
inc
aas
and
push
cmp
movsl
ljmp
test
pop
mov
xchg
test
in
sub
or
aaa
jle
cmc
stc
sbb
adc
pop
test
cmovbe
shr
cmp
sub
cmpsb
mov
pusha
popa
test
mov
inc
das
add
xorb
xor
ds
test
test
cli
decl
into
daa
ret
loop
add
mov
push
stos
inc
cltd
xchg
das
cld
jmp
cwtl
push
and
pop
scas
jmp
push
stc
dec
insl
jne
adc
movsl
mov
daa
gs
dec
dec
mov
ficompl
fdiv
xlat
push
xchg
add
add
pop
sbbl
out
mov
mov
jge
mov
mov
or
fbld
sub
xchg
pop
shrl
aas
inc
pop
imul
pushl
decb
hlt
push
cltd
stos
mov
cmp
xor
mov
jmp
mov
les
pop
lcall
mov
jge
aaa
cli
add
sbb
dec
insb
cmpsb
mov
sub
std
mov
cmp
hlt
stc
pop
jg
insb
sti
xlat
into
fnstcw
cli
sub
mov
decl
fwait
mov
cli
jmp
lock
inc
roll
mov
xchg
jle
mov
pop
std
push
out
push
or
push
pop
sub
mov
inc
adc
mov
incl
jle
push
push
push
sub
stc
mov
mov
decl
xor
imul
imul
adc
rolb
icebp
mov
pop
lods
cmp
fisubl
push
sar
jg
jmp
pop
pop
out
push
xlat
mov
jle
repz
jb
test
xlat
incl
aas
adc
test
push
xor
push
inc
fistpl
pushf
dec
sbb
outsb
icebp
pushl
mov
outsb
insl
clc
xor
adc
aad
jl
push
daa
lret
mov
mov
jge
push
arpl
aad
pop
xor
or
push
jbe
cld
mov
jne
stc
out
fwait
call
imul
ficompl
insb
cmp
cmp
jg
fisubs
sbb
push
imull
add
fidivl
dec
push
cli
call
clc
movsl
icebp
dec
dec
pushf
add
test
pop
sti
ja
sti
mov
pushl
xlat
inc
test
aaa
add
aaa
xchg
loopne
fmuls
dec
inc
mov
sub
in
repnz
call
or
inc
mov
test
push
negb
iret
test
fdivl
decl
call
adc
jne
andl
cli
sbb
not
lcall
inc
call
dec
push
movsl
dec
shlb
mov
icebp
decl
repnz
xchg
mov
int3
shll
cmp
sub
add
mov
rorb
sarb
sbb
push
mov
xchg
mov
out
sbb
pop
sbb
add
xchg
pusha
mov
scas
adc
add
sub
mov
fld
je
call
xchg
mov
outsl
enter
cs
sbb
pop
push
xor
jg
bound
push
dec
jp
sarl
mov
sbbb
mov
insl
jno
movsl
rep
xchg
call
mov
xor
mov
movsl
test
jae
fnstenv
lret
dec
inc
stos
out
jae
mov
jecxz
ljmp
xchg
sbb
orl
sub
inc
and
clc
pop
jp
pop
daa
jae
pop
jo
add
outsb
out
es
jg
inc
mov
insb
lock
cld
lahf
mov
aad
pop
sbb
stos
pop
push
ret
les
imul
mov
fisttps
sbb
subl
clc
sbb
fdivr
cmc
xor
fucomi
out
add
aam
fisttpll
stos
sub
test
cltd
mov
add
movsb
or
lcall
ljmp
adc
ss
xchg
mov
push
jmp
adcb
dec
dec
stc
jg
fdivs
nop
and
sbb
pop
bound
lret
clc
into
cmpsb
lock
ljmp
and
pop
cli
jns
mov
cmp
cli
cli
add
fistps
push
and
daa
bound
jb
pusha
cmp
gs
enter
sub
lcall
cli
push
fcmovb
daa
sub
movsl
cmp
push
lahf
cmp
push
call
mov
insb
in
pop
adc
in
add
popa
dec
subps
cli
cmp
pop
xor
aam
dec
mov
mov
movsl
jmp
mov
stos
out
mov
imul
rol
cmpsb
jg
inc
decl
cmp
imul
popl
xor
ja
imulb
pop
in
iret
outsb
and
xchg
incl
sbb
jp
inc
aas
lcall
in
sbb
popa
inc
add
call
ds
lcall
and
fstps
mov
mov
test
pushl
sub
pop
es
fstpt
js
cmp
cmp
push
dec
and
or
sbb
mov
mov
ss
and
sbb
xchg
stc
push
decl
std
jo
scas
int
lock
pushf
enter
stc
sti
int
lcall
fwait
cmp
outsb
popa
ret
adc
lcall
sub
in
jne
mov
mov
sbb
mov
or
dec
std
jmp
stc
lea
iret
scas
cltd
arpl
in
pop
dec
sti
lahf
out
aaa
cmp
loop
fcmovnu
mov
mov
fnsave
inc
cmpsb
movsb
pop
mov
sub
rcrl
mov
inc
ljmp
stc
inc
mov
decb
cmp
sub
mov
cs
jle
outsl
ds
sti
enter
jg
aaa
clc
call
rol
les
add
dec
mov
add
push
loope
movsl
adc
call
cli
lret
out
loope
sbb
lea
mov
loop
in
xchg
cmp
bound
inc
push
stos
mov
add
pop
adc
fiadds
inc
enter
popa
jno
ss
xchg
sub
insb
dec
decl
repnz
jo
ja
sub
xchg
repnz
mov
or
mov
ret
mov
fwait
mov
mov
pop
pop
mov
mov
icebp
mov
dec
pushl
xchg
mov
jno
push
stos
push
mov
mov
cmp
fcomps
jmp
repnz
lods
imulb
pop
cmp
fistpll
sbb
dec
test
test
mov
aam
and
mov
mov
add
jge
sbb
clc
inc
incl
push
jmp
adc
add
fxch
adc
add
fdivrs
mov
scas
sbb
cltd
push
test
pop
push
sbb
je
push
leave
aaa
clc
jmp
rorl
cmp
adc
mov
imul
shll
sti
ljmp
ljmp
lret
push
iret
mov
inc
xor
xchg
mov
daa
not
jmp
dec
aas
jbe
cmp
push
inc
repnz
sbb
negb
push
fisubs
or
decl
add
jmp
lock
add
out
jge
pop
xor
pop
cwtl
inc
call
push
cwtl
insl
inc
ds
push
xorl
leave
sub
add
and
sbb
hlt
addr16
mov
cmp
loop
push
add
enter
cmp
xchg
idiv
fidivl
leave
pop
mov
cmp
dec
test
pop
add
js
dec
sub
ljmp
mov
mov
cmp
incl
lods
lcall
jg
ljmp
push
sti
sub
aaa
xorb
in
cmp
mov
pushl
add
mov
imul
push
and
mov
jns
out
pop
cltd
repz
data16
cmp
es
jle
xor
addr16
xchg
mov
push
sbb
mov
or
clc
mov
dec
mov
aad
pop
sbb
cmovo
sub
repz
pop
mov
in
mov
ficomps
mov
inc
jg
insb
aaa
adc
push
inc
inc
pop
add
pusha
das
into
out
das
cld
mov
repnz
push
stos
decl
aas
mov
push
inc
adc
cwtl
int3
cld
fucomip
lcall
dec
mov
jo
in
push
mov
into
cmp
mov
fildl
movsl
repz
mov
xchg
insl
xchg
test
jl
pusha
sbb
xor
decl
cld
and
outsl
shll
movl
jmp
push
or
add
out
dec
or
xchg
mov
jecxz
ret
sub
outsl
mov
incl
cli
scas
loope
out
test
insl
push
popa
in
jnp
or
sbb
cli
ljmp
push
or
lds
cwtl
rcrl
cld
add
jecxz
adc
pushl
or
sub
xlat
sub
add
aad
xlat
jle
inc
faddl
cmp
mov
xchg
repnz
inc
mov
jo
adc
jp
xor
cmp
xorb
mov
and
lock
addb
lods
jl
mov
call
es
sub
lock
aaa
dec
mov
jb
sti
cld
shlb
incl
loopne
loope
sub
testl
cmovo
push
inc
decb
int3
push
mov
xor
mov
mov
divl
test
add
shrb
insl
mov
jne
enter
jb
inc
add
mov
jne
adc
lcall
push
mov
xchg
xorb
jns
mov
sbb
aam
inc
bound
jmp
push
lea
std
add
mov
fsubs
fsubp
scas
mov
mov
jmp
mov
xor
insl
jg
scas
cmp
aas
loope
mov
divl
push
std
call
sub
inc
subb
mov
cmp
xchg
roll
je
das
or
sbb
push
push
and
push
jl
jmp
adc
adc
and
add
xchg
test
jle
cltd
call
jae
in
push
decb
sahf
lcall
std
add
icebp
cli
insb
sahf
xor
xor
das
hlt
call
inc
jp
cmpsb
cmp
call
xchg
nop
in
imull
mov
dec
std
ret
or
sub
mov
xchg
sbb
iret
bound
icebp
push
testl
les
aaa
jg
js
incl
push
mov
jbe
push
hlt
mov
cmc
sbb
mov
data16
sub
in
scas
push
jg
stc
pop
cmp
mulb
lods
pop
dec
fsubr
int3
pop
add
shr
jmp
sbb
cmp
in
jbe
cmc
add
adc
ss
imul
mov
jg
jg
sarb
aaa
stc
ja
cmp
icebp
sbb
and
aad
sahf
jg
jmp
outsb
pop
xchg
jecxz
ljmp
adc
lds
mov
mov
or
jmp
int3
mov
in
pop
iret
jbe
inc
ss
cmp
outsl
popf
test
lcall
fwait
adc
adc
adc
xchg
or
sbb
int3
pop
lcall
aaa
push
sahf
gs
xchg
ucomiss
test
lcall
mov
mov
jmp
sub
lret
and
cmp
pushf
mov
es
pushl
push
insb
push
sbb
add
push
jle
add
pop
call
outsb
xorb
lods
in
call
lcall
cmpb
inc
adcl
xchg
lock
xor
jp
or
out
mov
mov
xor
push
lcall
sti
aad
cmp
push
call
mov
or
fwait
add
mov
sub
ja
lahf
test
mov
outsl
or
sbb
adc
loop
mov
in
dec
ljmp
stos
inc
jp
push
les
push
and
aas
add
pop
cli
mov
mov
iret
fs
scas
movsl
cmp
pushl
cmc
outsl
jle
jmp
mov
push
and
jmp
popa
sarl
push
pop
std
mov
jo
jmp
push
cwtl
out
call
imul
inc
add
push
hlt
add
inc
push
out
es
push
fimull
pop
outsl
fnstsw
xchg
sub
decl
mov
sbb
add
dec
jg
jno
inc
lret
je
adc
sbb
into
sbb
xchg
or
hlt
aaa
add
cmp
push
test
call
icebp
mov
jb
pop
mov
sub
mov
xor
mov
fldt
push
out
inc
dec
add
sbb
push
xchg
jo
and
jg
add
add
lods
loop
mov
test
jl
push
xlat
lahf
call
cmc
sbb
scas
repnz
cld
pop
and
andb
insl
outsl
aad
rcrb
mov
daa
ljmp
push
cmp
stos
ss
test
or
lods
jecxz
jecxz
dec
das
xor
mov
jmp
mov
int3
cli
in
jecxz
sub
jne
cmp
lods
add
cwtl
mov
jg
repnz
jb
dec
cld
jg
testl
in
xlat
lock
and
or
sub
cmp
xchg
jns
cmp
xchg
dec
add
or
mov
cltd
repnz
jle
push
clc
jmp
adc
mov
jg
add
add
xchg
js
adc
or
sbb
mov
aad
jg
jg
xchg
xor
int
test
inc
cmp
cli
inc
aaa
sub
push
push
call
push
in
outsb
dec
pop
js
sbb
out
mov
mov
xor
rcrl
enter
xchg
xor
sub
ret
test
sti
pushl
clc
sbb
test
push
out
outsl
jo
jns
pshufw
inc
sbb
sbb
mov
pop
call
jne
push
push
imul
pushl
jge
daa
add
call
ljmp
orb
incl
fdivl
popa
mov
ss
outsl
pop
scas
rcrl
popf
or
mov
call
icebp
stc
ljmp
adc
rol
mov
andb
jmp
mov
js
cmp
and
inc
sbb
mov
push
call
decl
xor
arpl
pop
mov
mov
push
lret
out
or
pop
sbb
call
or
xor
fimull
or
mov
jge
test
fimull
jg
call
push
mov
not
shrb
dec
cmpsl
push
lret
push
inc
cltd
jnp
decl
lods
shl
or
idivl
out
push
aam
ss
xor
in
adc
lcall
add
sahf
xchg
loop
mov
push
jb
lret
inc
cmp
sub
faddl
dec
lcall
pushf
rol
test
add
call
arpl
out
mov
loopne
rclb
hlt
mov
decl
mov
cli
hlt
push
ss
aam
aam
cmpl
pop
cmp
pop
jg
xor
cld
idiv
add
mov
mov
ret
jmp
loop
mov
push
pop
pushf
ljmp
and
mov
mov
sbb
mov
dec
xor
in
fnsave
ds
das
add
ljmp
adc
movsb
sub
fcmovu
mov
mov
lea
ljmp
sbb
xchg
repnz
ror
movl
ljmp
mov
insl
repz
repz
inc
testl
xchg
out
mov
jmp
jge
add
inc
xrelease
out
xor
das
mov
mov
jb
sahf
into
mov
leave
loopne
jle
loopne
lret
movsl
lods
inc
cld
mov
hlt
pop
cmp
cld
lcall
or
pop
movsl
loopne
cmp
jp
mov
mov
dec
xor
ljmp
mov
mov
pop
out
lods
int3
xor
mov
inc
lcall
lahf
cmc
lods
mov
outsl
pop
outsl
ljmp
dec
dec
stos
inc
ljmp
jp
add
mov
loop
lods
sub
add
mov
notb
lcall
ret
xchg
pop
idiv
push
push
aas
xchg
dec
push
es
jno
dec
jnp
dec
cli
dec
pop
fbstp
jecxz
std
inc
ljmp
push
fmulp
xchg
test
mov
out
inc
and
lcall
mov
push
cld
adc
bound
rorl
adc
mov
xor
addl
and
mov
jbe
aam
fcoms
lock
fidivrs
sbb
fdivp
int3
xchg
push
pop
pop
cmc
call
movsb
xchg
pop
sub
call
mov
xchg
lcall
and
lcall
jmp
lcall
out
fisttps
push
mov
es
jno
xchg
adc
and
pop
dec
ja
xchg
jmp
and
popf
mov
push
outsb
sbb
dec
sbb
add
sahf
mov
pop
sbb
decl
loope
cltd
add
cld
xchg
jge
jmp
add
std
ja
add
pushf
dec
pop
call
dec
push
pop
add
and
sti
jle
hlt
dec
pop
dec
pop
mov
mov
idivl
jp
adc
jnp
mov
icebp
lcall
cmpsb
mov
int3
push
add
daa
mov
xchg
fldenv
pop
cld
call
cmpsb
xor
int
sub
out
scas
add
fdivs
jnp
pop
jg
mov
push
out
fiaddl
add
xorb
aad
sar
mov
stos
sbb
pop
lea
stc
outsl
je
insl
lahf
or
push
mov
int
lcall
sbb
push
shl
stos
add
lcall
lcall
mov
adc
scas
mov
leave
jecxz
dec
jg
js
add
pop
ljmp
outsl
jae
xchg
in
lcall
movsl
inc
inc
imul
lcall
sbb
pop
dec
ds
fwait
or
ss
mov
loop
inc
cld
push
dec
mov
jns
xor
lret
dec
jmp
out
ja
fdivrp
incl
aaa
push
sub
inc
dec
adc
in
xchg
enter
jbe
mov
pop
jmp
pushl
xchg
cmpsl
sahf
adc
mov
add
and
test
sub
lods
pop
fwait
pop
sub
fdivl
leave
leave
or
cmp
shlb
or
loopne
call
add
adc
out
jns
jg
mov
xchg
push
jg
insb
jb
dec
lods
js
mov
add
clc
ljmp
cmpsl
lret
out
test
mov
lret
mov
pop
jecxz
cmpb
cmc
mov
lcall
lds
std
push
push
aam
ret
dec
out
leave
fwait
insl
loope
xchg
into
mov
add
jb
push
in
mov
daa
shll
sbb
incl
inc
jmp
xlat
xlat
lcall
pushf
jl
cmp
pop
push
cmp
pusha
inc
andl
call
and
pop
push
ds
jmp
push
fs
xchg
icebp
jmp
dec
cld
lret
inc
dec
xor
lea
dec
pop
ljmp
call
cmp
loope
sbb
mov
pop
in
pop
loop
fbstp
dec
xor
fists
push
pop
jnp
mov
rcrl
lcall
mov
dec
repnz
cmp
add
mov
ja
fists
sbb
decl
stos
pop
xchg
pop
loop
pop
enter
mov
pop
xchg
nop
xchg
sub
mov
cmp
mov
cmp
pop
hlt
enter
loope
adc
jg
movsl
sbb
inc
pushf
lahf
inc
nop
loop
aaa
push
enter
lock
movsl
lcall
jbe
and
jmp
pop
cmc
mov
mov
mov
outsl
push
lcall
stos
dec
in
sbb
inc
sti
popf
ret
xchg
sbb
mov
mov
jmp
pusha
xor
push
sub
rcll
int3
ret
mov
dec
pop
mov
dec
loope
inc
cmp
shll
arpl
clc
cmp
push
mov
imul
mov
xor
sahf
lahf
das
lock
jae
mov
and
lea
dec
lock
sub
scas
adc
frstor
or
push
mov
jbe
lahf
jg
js
lock
jns
sub
adc
jg
pop
das
loope
fwait
sarb
std
cmp
stc
push
mov
push
jg
push
jp
adc
cltd
mov
cmc
pop
cmc
xor
push
lods
pop
xchg
cli
lcall
sbb
xchg
repz
cwtl
mov
sbb
jno
push
rcrl
movsl
jmp
pop
adc
icebp
pop
pop
fidivrs
js
mov
jge
adc
pop
xchg
movsl
stos
and
xor
xor
add
jle
cmpb
inc
lret
sbb
lcall
sub
fcoml
cmp
pusha
faddl
jg
mov
mov
out
sub
dec
enter
add
icebp
stos
arpl
lcall
fwait
shlb
xchg
icebp
pop
loope
nop
lds
scas
mov
or
sub
fdiv
push
ss
lcall
push
add
aad
movsb
jne
push
sbb
dec
outsl
fnstsw
mov
pop
stos
xor
xor
pop
xchg
mov
pop
inc
cwtl
adcb
mov
and
orl
sbb
insb
mov
cmp
xchg
clc
jg
rorl
shr
es
pop
insb
iret
scas
dec
popa
loop
aaa
xor
ljmp
icebp
test
ffree
dec
out
push
adc
push
test
dec
mov
pusha
add
jg
and
aaa
inc
cld
jecxz
iret
cmp
adc
call
inc
daa
or
ljmp
fnstsw
xor
call
jl
dec
scas
cmc
arpl
int
add
mov
lock
mov
and
cli
gs
or
add
mov
out
jne
dec
std
and
js
das
adc
aaa
mov
lcall
lret
inc
add
lea
aaa
cmpsb
fwait
add
lcall
jno
cmp
clc
movsl
loopne
push
cmpb
xor
inc
test
pop
dec
xlat
mov
or
in
repz
repz
in
inc
psubq
ret
jle
popf
adc
adc
and
cmc
std
mov
mov
decl
sbb
or
jl
enter
orb
jmp
pushf
push
cmp
pop
mov
or
call
jmp
and
sub
adc
dec
lcall
push
int3
push
in
call
cli
stc
pop
fwait
test
ret
xchg
cld
jg
mov
test
pop
cli
jmp
mov
xlat
mov
mov
jmp
pop
incl
scas
mov
dec
lahf
mov
jecxz
stos
xor
and
jbe
loope
cmp
xor
add
les
cld
jmp
and
dec
adc
idivb
mov
scas
arpl
call
xchg
pushf
popa
dec
add
mov
mov
mov
jb
enter
jns
adc
cltd
add
mov
ret
mov
mov
mov
aas
push
jne
cmp
adc
jge
int
sarb
mov
jmp
incb
xor
push
int
pop
shlb
loopne
cli
pop
movsb
out
jmp
cmp
int3
push
push
leave
and
mov
insl
xchg
shrb
and
xchg
dec
push
fld
ljmp
decl
ret
sub
in
test
int
adc
and
and
lcall
jne
in
jbe
mov
ret
jns
sahf
clc
rcrl
insl
hlt
test
mov
or
jg
sub
in
ret
mov
add
aad
insb
dec
mov
mov
mov
in
addr16
std
ljmp
and
icebp
or
fdivr
out
push
gs
mov
ds
push
paddw
sub
loopne
sub
sub
sbb
ljmp
lret
test
xchg
scas
loope
lds
and
insl
add
aaa
clc
inc
testb
repnz
cmpsl
fbld
or
xchg
imul
fdivr
jmp
cmp
shlb
jp
mov
mov
rcrb
pushl
jg
pop
loop
adc
jbe
xchg
sbb
mov
sbbb
ljmp
cwtl
sub
leave
in
pop
pop
mov
pop
mov
push
dec
addr16
xlat
cmp
insb
mov
mov
fisubs
stc
jo
and
das
shlb
jo
int3
sub
push
xchg
movl
cmc
pushl
into
inc
push
jg
mov
inc
icebp
cli
ss
addl
incl
lea
add
roll
push
adc
addr16
lods
mov
add
mov
bound
and
sbb
stos
lods
jb
hlt
jg
out
cmpsb
pop
sarl
pop
lock
mov
dec
xchg
or
das
lahf
data16
xchg
stc
mov
mov
cmp
pop
daa
movsl
test
ljmp
push
shrb
inc
cs
gs
loopne
lcall
push
cmp
sbb
xchg
ljmp
daa
sbb
fstpl
jmp
add
rcrb
jecxz
xor
mov
aaa
jl
pop
ret
mov
adc
repz
decl
lods
or
mov
jl
test
adc
int3
push
ljmp
cld
das
loop,pt
xor
mov
adc
sbbl
pop
out
dec
fs
jmp
cld
loop
jnp
sbb
xchg
mov
adc
cmp
iret
arpl
inc
sub
mov
hlt
in
dec
repnz
mov
lea
out
outsb
and
ljmp
pop
push
push
dec
and
mov
jmp
sub
sub
js
mov
mov
popf
push
hlt
add
inc
mov
mov
pop
mov
lock
aaa
or
inc
insb
and
lods
pop
cmp
mov
add
iret
jmp
in
lods
xor
xlat
add
mov
aam
iret
push
lods
lods
cmp
adc
lea
mov
cmp
mov
add
mov
shrl
cwtl
ja
cli
cmp
xchg
sti
cmp
stc
sbb
jg
jbe
inc
sub
mov
jl
in
jbe
aas
pop
test
decl
cs
in
jae
lods
in
sub
sbb
out
inc
scas
ficoml
pop
pushf
cld
adc
imul
ljmp
cli
mov
and
imul
test
jg
mov
jl
insl
dec
movsb
fs
mov
inc
sbb
push
add
pop
cli
ljmp
sub
orl
outsl
mov
cmp
lcall
sbb
stos
imul
cmpsb
mov
pushf
jge
inc
xor
cli
fsubrp
sub
das
dec
mov
pop
jne
pop
ljmp
cmc
xchg
pushf
cmp
sbb
sti
lods
and
decl
jbe
je
andl
in
das
dec
xor
pop
cmp
xchg
cmp
xor
call
ja
scas
mov
mov
dec
icebp
mov
jno
nopl
sahf
in
push
jg
dec
mov
lret
adc
mov
stos
mov
daa
xchg
gs
movsb
mov
outsl
lock
push
push
bound
das
bound
and
shrl
call
cli
pushl
int
dec
mov
out
icebp
dec
popa
sbb
fwait
rcl
ljmp
or
call
push
dec
cmp
outsl
ja
inc
mov
sbb
sub
rcl
mov
or
shll
into
outsl
in
jp
sbb
decl
rcrb
lods
sbb
clc
xor
out
mov
mov
jae
nop
and
lret
xchg
pushl
push
lea
outsl
cmc
clc
inc
or
imul
adc
movsl
idivb
jns
sub
mov
cld
incl
popf
or
clc
jmp
push
daa
int
decl
cmp
testb
xchg
out
and
std
mov
imul
push
call
cli
sahf
stos
mov
out
into
pop
repz
mov
sahf
mov
ss
pushl
jno
popa
push
jp
or
or
out
push
mov
jmp
ss
xchg
mov
stos
jg
insl
stos
sub
sub
bound
and
fidivrs
lcall
lcall
out
adc
cltd
adc
lret
xchg
or
inc
pop
ljmp
outsb
adc
pushf
xchg
cmp
sub
mov
dec
call
inc
xchg
out
pop
adc
inc
repz
pop
ja
pushl
adc
push
jae
fiadds
jae
stc
cld
pop
aam
mov
push
mov
ss
pop
mov
sti
adc
clc
pop
test
push
test
xchg
mov
test
pushl
nop
enter
jge
xor
xchg
icebp
push
into
pushf
loop
xor
cli
jp
int
xchg
into
lods
dec
mov
mov
insb
ljmp
adc
clc
clc
jg
mov
iret
jge
mov
jle
adc
ret
call
lods
in
popf
insl
mov
bound
test
push
fs
inc
jmp
sbb
cmpsb
add
ret
fistpl
jge
sbb
mov
inc
add
mov
insl
fbld
add
fnsave
or
dec
sbb
jg
outsl
cmc
int
jle
pushl
pop
mulb
jno
and
pop
mov
ds
outsl
cmp
popa
xchg
or
cmp
repz
lea
into
enter
xchg
loope
dec
lret
ds
in
xchg
decl
cli
push
push
mov
sbb
inc
cs
int
lcall
ljmp
icebp
xchg
and
adc
mov
push
add
lcall
xchg
mov
outsb
pop
sub
jnp
and
out
inc
jnp
idiv
ss
adc
fucomip
pushl
mov
pop
jle
outsl
sub
dec
cmp
xchg
les
ljmp
jbe
mov
mov
icebp
push
cmpsl
clc
dec
neg
jmp
popf
das
or
mov
rcr
test
mov
xor
jmp
add
inc
jecxz
mov
mov
xchg
pop
out
lods
push
jmp
dec
movsb
hlt
movsl
sbb
xor
das
push
fs
and
sbb
stos
adc
inc
xchg
lahf
nop
aaa
jp
cli
xchg
adc
outsb
ret
mov
and
shrb
fsubs
icebp
in
stc
out
shll
xchg
sub
cmp
push
inc
xor
call
sub
xchg
push
inc
test
xor
rol
dec
jb
inc
or
sbbb
xor
das
jge
sub
jmp
jmp
mov
std
adc
inc
lcall
ds
sub
add
mov
xchg
jbe
out
mov
pop
divb
pop
cmp
xor
ljmp
dec
dec
popf
mov
pop
ljmp
push
jb
jle
adc
das
outsl
cltd
call
in
xor
push
mov
cltd
pop
add
cmp
je
cwtl
add
mov
ds
scas
push
aam
or
lcall
mov
mov
les
and
fiadds
sar
add
adc
sub
imull
das
dec
divb
jns
test
decl
std
pushf
sbb
jle
mov
adc
stos
sub
cmpsl
mov
sbb
add
int3
mov
push
js
imul
xchg
jns
cltd
sub
jmp
cmp
jns
es
lods
cmp
xor
mov
mov
aam
movsl
mov
dec
aam
rclb
push
es
stc
lret
adc
incl
idivb
daa
add
data16
rolb
incl
sahf
lds
je
mov
int
negl
call
clc
mov
xchg
mov
jb
xor
fdivr
cs
ror
push
lds
cmpsb
aam
decl
mov
mov
lock
inc
or
into
int
iret
rcrb
cmpsb
mov
scas
ljmp
mov
xchg
sti
das
lods
xchg
js
jp
shr
mov
sbb
call
lahf
mov
cs
push
in
dec
lret
add
and
ja
inc
fcmovbe
inc
insl
inc
push
cli
pop
loop
aad
mov
fidivrl
lds
cmp
call
dec
dec
inc
pushf
outsb
ds
lds
sub
fmul
fs
jg
cli
adcl
inc
loope
mov
mov
in
cld
dec
ds
dec
cmp
mov
mov
mov
aas
pop
add
fldcw
push
mov
incb
add
incl
es
loop
adc
mov
in
adc
out
repz
cmp
out
out
pop
icebp
out
pop
xchg
sbb
mov
ljmp
push
mov
imul
mov
add
shll
pushl
sti
sub
sbb
popf
mov
lock
incl
lea
mov
fdiv
and
mov
fdivrp
add
sub
or
ljmp
stos
xchg
lahf
mov
or
in
xlat
and
xor
mov
mov
xor
cmpsb
popf
push
call
hlt
daa
add
imul
leave
fwait
sbb
mov
pop
loopne
or
gs
lret
mulb
call
sub
stos
jnp
mov
aas
mov
arpl
and
add
mov
mov
out
fwait
xor
jmp
pop
clc
jg
aam
fsubrs
ret
ret
call
scas
lds
mov
or
dec
sub
das
les
out
pop
movsl
cmp
call
dec
imul
pusha
enter
adc
push
in
xchg
push
out
push
shrl
fisttps
aam
inc
loop
rcll
fucomip
call
movsl
fs
mov
push
dec
pop
repnz
lods
jmp
stos
push
cmp
das
divl
pop
ret
scas
dec
and
pop
mov
cmpsl
mov
ljmp
adc
shld
sbb
dec
fimull
mov
dec
inc
xlat
jne
ficoml
imul
push
dec
inc
movsb
lahf
pop
sarb
and
mov
and
jg
enter
or
scas
cld
jae
clc
ficomps
fldcw
mov
dec
int
retw
pop
xor
mov
popa
ret
imul
inc
mov
out
cmp
cmp
cmpsl
pop
loop
decl
aam
bound
and
insl
mov
jl
sub
jmp
dec
xorb
and
mov
enter
sbb
je
lcall
addr16
iret
inc
cmp
add
movsl
sbb
mov
mov
push
lods
cld
decl
std
pop
xchg
push
adc
bound
mov
mov
fimull
add
xchg
lcall
adc
stos
jns
cmpsl
adc
test
push
cmp
scas
push
and
loop
inc
push
incl
push
imul
in
hlt
jmp
push
rorl
push
movsl
adc
test
lret
sbb
stc
cvttps2pi
cmpl
inc
rorl
dec
mov
push
cmp
cli
push
cmp
mov
fistl
aas
mov
pop
aad
popf
loop
push
add
and
pop
dec
lcall
mov
repnz
fs
loopw
in
out
pop
imul
cli
adc
push
sub
push
and
and
das
icebp
fnstsw
icebp
imul
inc
sub
jnp
push
shlb
xchg
jg
jecxz
incl
lcall
aas
gs
lock
xchg
and
mov
mov
jg
inc
aam
psubusb
jns
out
push
shr
je
jmp
into
mov
jg
inc
mov
sub
xor
or
movsl
ljmp
push
inc
std
les
jge
mov
cwtl
popa
push
pop
dec
shrb
lock
out
jno
jle
sar
adc
fcoms
xchg
decl
loope
adc
call
mov
xor
inc
inc
dec
lcall
std
jmp
cli
call
int
mov
mov
lret
sub
sarl
ljmp
lock
es
sbb
lcall
mov
aaa
in
jno
or
incl
in
fcoml
je
xor
test
mov
and
aaa
inc
cwtl
or
dec
call
push
lds
jo
jo
adc
xchg
movsl
xchg
cli
ljmp
in
es
jp
pop
icebp
xchg
insb
aas
outsb
inc
jae
push
test
lods
cltd
outsl
hlt
js
and
dec
js
cmp
aas
enter
test
in
or
stos
inc
incl
adc
orb
in
call
jg
mov
push
adc
xchg
clc
aaa
push
mov
movsl
jbe
movsb
sub
or
aaa
cli
xchg
inc
adc
sub
xlat
shlb
jl
aaa
repz
ljmp
lds
mov
mov
jg
jg
repnz
cmpsl
shl
pop
mov
dec
int
inc
outsb
ja
pop
stos
incl
test
push
push
in
dec
cmp
jmp
inc
dec
dec
out
push
sti
push
and
mov
fnstcw
cmp
lods
cmp
pushl
mov
mov
fs
and
jnp
sub
pop
lds
insl
push
outsb
imul
insb
decl
add
adc
or
arpl
ret
sub
lcall
das
and
mov
test
addr16
cmp
sahf
insl
add
push
jb
or
inc
lret
sub
jbe
jecxz
fwait
sub
xlat
inc
leave
data16
push
mov
xor
fbstp
aam
add
and
movsl
and
mov
dec
jbe
shl
fwait
cli
jg
dec
sub
sti
or
push
jo
filds
xor
adc
sbb
cld
pop
xchg
mov
xchg
ja
inc
cmp
mov
loope
mov
insb
xor
pop
pop
pop
mov
push
or
ljmp
adc
sbb
scas
xchg
mov
inc
mov
arpl
and
pop
push
xchg
mov
rcr
les
dec
pop
mov
inc
pop
insb
pusha
rol
cwtl
cmp
loop
call
jle
jno
push
inc
or
lea
dec
cmpsb
mov
cmpsb
popa
test
in
cli
xor
sbb
mov
add
mov
loop
inc
ja
jb
push
hlt
in
jnp
lcall
xor
fisttpl
sbb
lods
popf
daa
icebp
int3
icebp
xchg
insl
mov
xor
mov
lcall
jmp
inc
push
shll
cmp
push
or
or
mov
lret
gs
inc
lods
shll
cmpsl
loope
sbb
imul
adc
and
cmp
rcll
movsl
jae
or
mov
xchg
leave
call
push
test
mov
jns
cwtl
addr16
push
mov
fcomps
adc
test
out
test
std
mov
in
add
mov
bound
jecxz
cmpsl
inc
ss
dec
cmc
or
inc
mov
sub
pushl
gs
sub
mov
xchg
add
arpl
fidivl
mov
adcb
in
fisubl
lcall
add
addr16
out
popf
loop
pushl
in
and
sbb
pop
sub
push
mov
ret
mov
fcomip
jbe
iret
jno
cmc
mov
mov
pop
lock
sbb
inc
and
mov
clc
out
push
jle
adc
inc
out
ret
sbb
mov
insb
clc
outsb
cmp
sbb
mov
sbb
mov
cmp
jg
inc
repz
and
dec
in
mov
lea
sbb
pop
repnz
imul
mov
sub
stos
add
jg
js
lods
shl
out
jb
mov
sub
push
dec
or
movsl
decl
fwait
dec
mov
mov
xchg
push
cwtl
push
inc
sbb
mov
or
jo
addl
cs
jnp
fstpl
jle
add
push
test
into
lds
gs
push
xchg
pushf
mov
mov
lds
pushf
sarl
iret
mov
push
outsb
or
ret
or
sbb
lock
call
sbb
xlat
test
xlat
cmp
fiaddl
pop
leave
je
sar
jmp
or
adc
jg
mov
sub
dec
ret
cmpsb
xchg
jnp
pop
add
add
sub
inc
decl
data16
push
outsb
add
xchg
mov
in
xchg
cs
ljmp
xchg
test
ret
cmp
ret
cld
mov
sar
push
iret
mov
sbb
dec
jg
mull
push
out
jmp
cmp
pop
movsl
ds
cmp
mov
pop
jle
dec
in
call
ret
fcomi
roll
mov
incb
xchg
mov
decl
mov
fldcw
pop
loope
mov
cli
mov
xlat
out
cli
repnz
clc
das
std
js
aad
jb
hlt
test
xchg
mov
mov
stc
stos
pushl
decb
scas
push
mov
sbb
mov
call
pushf
add
sti
mov
mov
mov
cwtl
sbb
mov
pop
int
adc
cwtl
movsb
in
lods
fcomi
aaa
insl
ficomps
lret
jge
adc
mov
lock
ljmp
sub
mov
scas
inc
cmp
daa
cltd
xorb
sub
mov
fwait
jbe
out
shrb
call
xchg
sbbb
nop
mov
or
push
cmp
in
push
add
ljmp
cld
lea
mov
mov
push
clc
fmul
fnstsw
xchg
in
add
fcoms
ljmp
adc
rcrb
jecxz
or
idivb
sbb
bnd
cmpsb
mov
fdivrs
pop
in
mov
cmp
jecxz
mov
call
add
adc
xchg
pusha
lret
stos
and
fneni(8087
sbb
mov
jle
jb
mov
and
imul
push
xchg
insb
movsl
push
mov
std
push
jbe
jg
pop
jb
std
inc
dec
dec
mul
std
je
and
jmp
test
lcall
fnsave
test
movsb
hlt
sbb
pop
aas
fidivrs
pushf
push
outsl
js
sbb
cmp
adc
iret
mov
mov
pushf
out
outsb
push
push
outsb
fistpll
pop
std
scas
push
sbb
addr16
test
insl
flds
push
mov
mov
mov
pushl
roll
xchg
mov
mov
pushf
mov
imull
test
ljmp
inc
test
dec
popa
adc
cltd
in
mov
pop
fdivrs
mov
imul
jl
or
mov
jg
lcall
les
cmp
xchg
and
pop
mov
popf
ud0
call
xor
pop
sarl
adcl
cmc
push
pusha
sub
mov
dec
jb
es
ds
cld
outsl
inc
fdiv
loope
pop
xchg
mov
xor
sub
fdivrp
out
or
sahf
lock
dec
xchg
inc
ljmp
dec
xchg
incl
lock
sub
clc
es
inc
and
aas
leave
dec
mov
sar
mov
aaa
movsb
mov
sbb
out
lcall
pop
add
jmp
mov
and
inc
xchg
xchg
andb
push
xchg
roll
or
out
add
pop
call
add
xor
incl
jle
pusha
pushf
mov
inc
gs
dec
pop
or
loop
stos
xor
ds
sar
lods
sbb
xchg
lea
pop
scas
movsl
jno
mov
ljmp
jmp
daa
xor
cmp
ljmp
sub
lret
mov
xchg
ljmp
das
arpl
sbbb
inc
push
es
mov
idiv
lcall
jl
call
xor
push
sub
xorl
lods
pop
ljmp
push
pop
push
scas
adc
mov
dec
orl
mov
sub
dec
or
fs
arpl
mov
jp
push
mov
ljmp
ljmp
js
lods
pop
adc
jg
fimull
js
mov
mov
dec
hlt
or
cmp
mov
jne
mov
mov
out
mov
pop
std
fs
lods
sub
fstl
test
lcall
fbstp
sub
scas
loopne
lock
xrelease
sub
or
push
pop
push
notl
adc
mov
mov
ficoms
fwait
popf
enter
lret
mov
or
clc
jmp
push
jne
jecxz
add
add
or
mov
pop
sahf
jae
fstl
lcall
mov
xor
cli
test
mov
in
or
cli
inc
fs
xor
jnp
pusha
stos
lods
inc
pop
and
sti
mov
ss
inc
mov
fistps
sub
mov
pop
ljmp
cmp
adc
movsl
jmp
jg
call
movl
jg
out
jl
aaa
gs
bnd
mov
cmp
and
scas
lahf
jecxz
mov
fisubrl
cmp
lcall
stos
sub
out
cmpl
sub
xchg
pop
sub
incl
mov
loopne
mov
rorb
mov
add
mov
mov
xchg
repz
mov
jl
mov
sub
cmpsl
lock
int3
movsb
xchg
bound
dec
pop
cltd
loop
mov
test
in
jp
pushl
or
push
sbb
out
loope
movsl
pop
mov
jp
adc
popa
and
jecxz
es
cld
jg
cmpsb
out
leave
fcomip
or
imul
sbb
fs
loop
inc
jl
insb
mov
decl
mov
fs
adc
pop
enter
jg
sub
fists
dec
cmc
mov
test
jge
jno
jne
js
je
into
xor
nop
in
decl
imul
jmp
stc
lods
mov
lcall
sbb
mov
or
pop
mov
aaa
xor
push
mov
mov
pop
sub
rorl
add
sbb
pop
cmpb
mov
pushl
jb
and
rorl
push
add
stos
pop
ret
pop
stos
call
shlb
inc
push
incb
in
push
and
into
lret
push
xchg
add
xchg
or
push
mov
pushf
jbe
add
adc
sbb
cltd
adc
push
pushl
xchg
jmp
inc
orb
adc
xor
loopne
jno
sbb
cmp
pop
addr16
sar
idivl
pushf
jne
or
dec
cwtl
lret
mov
arpl
dec
add
mov
sub
into
mov
pushf
mov
xchg
sbb
popa
aaa
decl
sub
bound
fisubrs
movsl
ss
cltd
into
js
cmp
or
icebp
call
add
cli
xchg
fists
push
mov
pop
adc
aam
jge
lods
subb
imul
push
inc
adc
pop
cli
outsl
out
cmp
xchg
sub
push
xchg
aaa
add
mov
mov
pop
xchg
mov
mov
lock
push
loop
xchg
pxor
mov
lret
and
iret
ljmp
add
movsb
inc
adc
das
mov
mov
lret
mov
ljmp
jne
push
fsubrs
jecxz
out
in
call
enter
xchg
arpl
das
xorl
mov
das
pushl
cli
sbb
divl
cwtl
sbb
int3
sub
ljmp
decl
pop
dec
dec
mov
cltd
mov
mov
mov
adc
xchg
push
sbb
fcompl
fnstsw
arpl
lea
cld
ficompl
mov
cltd
mov
fbld
lea
sar
xadd
push
xchg
xor
sbb
mov
sub
jo
icebp
xchg
cmp
jge
sbb
mov
call
pushl
ljmp
xchg
jb
es
cltd
iret
pop
scas
mov
push
dec
mov
jmp
nop
jmp
mov
paddusw
cmpsl
pop
cmp
out
pop
sbb
cli
mov
repz
scas
scas
push
dec
es
pop
push
rcrl
jmp
pop
lcall
adc
dec
clc
ds
cmp
mov
jmp
dec
cmpb
mov
jae
inc
insb
push
pushf
bnd
mov
fldcw
jg
add
std
pop
push
add
cmpsl
outsl
aad
cmp
std
mov
outsb
pop
cmc
push
out
addr16
sub
dec
jp
outsl
adc
fdivrl
pop
sub
pusha
push
or
test
or
mov
sbb
jmp
enter
add
out
sub
mov
pop
lods
popa
sti
repz
pop
call
das
add
mov
test
sti
jp
inc
scas
adc
mov
add
pop
or
arpl
test
sbb
lahf
leave
xor
mov
sti
jb
mov
cltd
pop
repz
cli
mov
mov
cltd
imul
xchg
clc
ljmp
ja
xor
dec
icebp
jl
loopne
xor
lcall
sub
pushl
lea
jg
adc
lods
push
cli
mov
hlt
adc
stos
or
rclb
in
outsb
cmpsb
hlt
cmp
ud0
pushl
shl
adc
imul
mov
shll
cmc
ljmp
push
insb
push
pop
mov
sbb
shrb
lcall
mov
lock
cmpsl
cwtl
lcall
cwtl
add
dec
cwtl
fnstenv
pop
ds
sub
in
sub
and
cmp
cmp
cltd
xor
dec
ss
test
push
or
test
scas
hlt
pop
cli
ljmp
pushl
dec
pop
sub
mov
lahf
sbb
call
sub
mov
sub
adc
sahf
dec
sub
fwait
xor
add
adc
or
fstl
cltd
ja
outsl
sbb
ljmp
shrb
pop
icebp
test
jmp
mov
and
add
addr16
push
cmp
push
xor
test
jmp
push
dec
popf
xor
daa
icebp
sub
jl
jnp
and
icebp
in
cld
stos
adc
xchg
jg
or
jg
inc
adc
cmpsb
das
adc
xor
in
xchg
jmp
xor
pushl
xchg
movzwl
pop
xor
int3
out
sub
mov
ja
stos
push
inc
push
in
pop
pop
mull
stc
ret
sahf
cli
ljmp
adc
divps
and
adc
repz
call
or
add
ds
jae
outsl
jne
arpl
inc
fstps
lcall
dec
cmp
push
je
stc
imul
push
cmc
jg
decl
mov
js
popf
rorb
int3
or
loop
lcall
ds
add
pop
cs
add
call
push
sbb
std
adcb
out
adcb
jg
mov
mov
in
incl
cmp
je
popa
sbb
jns
fmuls
ds
or
in
mov
insb
lret
aaa
leave
clc
incl
fcomps
notl
das
ret
insl
jg
or
scas
out
cmp
lcall
leave
cmp
inc
xor
adc
mov
push
rcrb
xchg
gs
xor
cmp
stos
sbb
pop
idiv
incl
dec
loope
pop
stos
push
dec
inc
pop
popw
pop
dec
and
add
ss
or
jne
ljmp
adc
inc
cmpxchg
or
push
or
dec
mov
pop
mov
xchg
loope
adc
sbb
mov
or
or
je
in
push
fisttps
fsubp
push
mov
dec
xchg
jge
xor
jmp
aaa
cli
fldcw
mov
ss
add
jge
rol
cmp
sahf
mov
in
jle
popf
dec
decl
insl
sti
fsin
and
cld
shrb
movb
adc
decl
sbb
mov
pop
shll
push
std
cmp
sub
out
dec
inc
std
jg
mov
push
jecxz
sbbb
test
xchg
out
sub
ljmp
sbb
ficoms
xchg
lock
xchg
call
ljmp
jnp
cmc
cmpsl
pop
mov
inc
mov
fcoml
jg
daa
leave
daa
outsl
divb
mov
rcrb
pop
cmp
ja
flds
loopne
test
incb
cmp
out
out
aad
sub
test
mov
iret
fs
inc
out
sarb
mov
cmp
jg
inc
mov
lods
pop
sub
mov
xchg
jo
inc
sbb
push
jmp
sub
jg
jmp
jp
ja
push
hlt
mov
ljmp
sbb
fwait
ret
lock
outsb
lods
in
or
repz
stos
repnz
std
xchg
lcall
jae
mov
fucompp
pop
shr
pop
inc
xchg
jne
cmpl
xchg
cmp
ljmp
cld
adc
popa
inc
in
loope
push
jle
cpuid
addl
adc
shlb
sti
dec
jl
fcomip
data16
aam
mov
push
inc
sar
lods
int
lahf
shll
mov
jmp
push
test
add
jmp
mov
inc
roll
sub
add
out
dec
std
decl
popa
mov
push
aaa
mov
fstpl
bound
out
and
lcall
cld
rclb
xor
scas
xchg
lret
jne
xor
decl
jbe
cmpsl
sub
mov
rorl
add
imull
cmc
inc
push
decl
in
das
adc
sub
mov
sahf
daa
pop
and
les
pushf
scas
jge
aam
mov
dec
cwtl
pop
dec
jle
mov
cmp
sarl
rcl
ret
adc
xchg
loopne
pop
push
xchg
and
lcall
gs
xchg
or
pop
mov
mov
cmp
cwtl
pop
mov
jge
into
lcall
in
sti
js
pop
jg
and
inc
xchg
mov
push
repz
out
fnsave
in
cmp
lcall
mov
lret
in
pushf
mov
dec
adc
fwait
cmp
pushl
push
fimull
mov
pop
aas
das
sahf
fisubrs
lock
mov
xor
std
dec
cmp
gs
es
mov
test
pop
in
mov
sbb
dec
dec
aad
mov
pop
xor
dec
push
leave
or
jl
ljmp
cmp
subb
inc
mov
mov
test
cli
or
dec
ret
dec
xchg
mov
call
outsl
jnp
add
cmp
sub
sti
push
repnz
jnp
xchg
jmp
js
xor
jbe
lahf
and
and
xor
arpl
popa
and
insb
decl
cld
inc
or
lds
xor
outsl
fcomp
jmp
test
insl
and
das
cld
mov
push
pop
push
mov
cmc
xor
js
out
xlat
jno
mov
push
add
fnstcw
jl
in
sub
jmp
inc
arpl
pop
lea
or
push
jmp
rcr
xchg
mov
aad
pop
lret
sar
incl
lods
jo
pushf
pop
cld
and
roll
dec
mov
ljmp
decl
mov
inc
in
mov
lock
jp
mov
mov
jl
out
adc
dec
cmp
mov
imul
jle
mov
xchg
and
mov
inc
ljmp
fwait
iret
mov
push
mov
sti
push
aad
and
sub
sub
incl
lock
hlt
and
pop
pusha
jnp
push
push
cmpsb
test
mov
xor
pushl
cmpsl
repnz
jns
in
push
cmp
stc
js
cld
jmp
xchg
add
sub
scas
jb
in
out
pop
dec
jb
cld
add
in
incl
rorb
add
iret
push
aaa
jge
jecxz
outsl
hlt
and
ljmp
dec
jnp
add
jmp
pop
and
std
cltd
or
cmp
pop
decl
fwait
stos
dec
lahf
xchg
movsl
xchg
push
push
mov
jnp
cmp
test
dec
sbb
mov
bound
lods
adcl
das
cld
jbe
mov
rclb
into
ljmp
adc
ja
ds
xchg
push
push
fistpll
mov
mov
xlat
lcall
jmp
stos
xor
loop
jo
in
int
mov
mov
add
ljmp
mov
clc
pop
mov
xor
or
fs
lcall
adc
push
xor
jb
test
jge
loope
adc
jns
insl
and
jb
push
out
add
push
or
or
stc
mov
lahf
aad
cmp
cmp
inc
or
testl
inc
orb
ret
lahf
or
jmp
adc
rorb
in
ret
imul
jg
incl
popf
pop
into
pop
xor
iret
mov
mov
loopne
mov
roll
mov
addl
mov
insb
jp
out
call
movsl
pop
aad
mov
cmp
dec
pop
dec
loop
push
mov
pushl
xor
cs
int
in
or
scas
dec
jmp
and
scas
fs
mov
add
mov
inc
in
jns
aas
cs
mov
das
flds
jnp
cmp
lock
hlt
jg
les
cs
test
add
out
shlb
jl
imul
icebp
cld
int
enter
cmp
inc
nop
inc
xchg
pop
sub
adc
sti
das
hlt
outsl
cmc
lcall
das
loop
pusha
stc
mov
jl
inc
cmp
call
sahf
mov
ficoms
fiadds
fwait
cmc
ljmp
dec
loop
dec
add
pop
clc
inc
mov
hlt
xchg
push
mov
pop
mov
mov
popa
inc
mov
addr16
mov
aas
jmp
jge
xor
or
mov
add
add
pop
pop
imul
jnp
js
and
jg
jl
jno
pop
mov
movsb
and
test
mov
jg
push
shll
ja
cmp
aaa
clc
call
andb
int
out
nop
test
decl
inc
fmul
repz
sahf
mov
mov
fucomi
decl
in
mov
and
pop
mov
imul
jecxz
lret
test
mov
push
xchg
bound
pop
std
ffreep
jb
jge
jge
adc
mov
cwtl
js
cmpb
negb
imul
in
mov
idiv
inc
push
inc
ljmp
sbb
repnz
stc
lock
sar
cmp
sbb
mov
cmp
cld
lcall
adcl
adc
mov
lret
cld
pop
das
cld
ljmp
sbb
mov
dec
imulb
and
call
cli
ljmp
jno
sub
les
xor
stc
pushl
mov
push
jb
sbb
rorb
mov
aaa
sbb
scas
mov
jp
and
push
and
ljmp
idivb
add
jns
call
mov
mulb
rorb
movsb
mov
add
add
cmp
push
pop
into
adc
jo
ljmp
cmc
repz
ret
and
rorb
add
cs
decl
ret
out
shlb
dec
imul
ffree
test
out
or
out
cmp
mov
std
aam
add
popa
mov
mov
jg
cmp
lret
and
xchg
iret
js
fistps
fwait
adc
and
lea
xor
data16
push
insb
repnz
fiaddl
lret
ret
adc
or
fadd
outsb
mov
mov
jp
sbb
outsb
sub
push
sub
and
pop
clc
mov
and
sbb
lcall
int3
xor
add
outsb
push
and
xchg
lods
add
and
xchg
fisttpll
lcall
push
inc
dec
test
mov
inc
push
mov
xor
or
mov
incl
xchg
xchg
dec
decl
loop
in
mov
mov
push
mov
scas
popf
lock
cli
mov
push
ljmp
aas
cltd
jl
daa
dec
ljmp
sub
repz
mov
fisttps
js
mov
push
pop
int3
add
addr16
movsb
mov
xor
push
sub
and
dec
adcl
and
setge
mov
sbb
out
jp
data16
shlb
daa
pop
test
aaa
mov
jmp
mov
out
sti
mov
sar
jg
fstps
pop
inc
inc
push
clc
xchg
mov
mov
stos
js
push
pop
inc
frstor
in
cmp
inc
test
addr16
push
dec
or
mov
nop
es
and
jmp
lret
fstl
mov
mov
rorl
repnz
jg
pushl
fucomip
mov
pop
outsl
and
stos
ljmp
xchg
fbld
decl
lods
mov
xchg
push
pop
cmp
jmp
mov
add
add
cmp
xor
cmp
fisttpl
mov
cmpsl
out
in
inc
ljmp
gs
into
insb
cmp
or
mov
mov
pushf
movsl
aaa
jb
out
adc
mov
sub
cmp
les
sbb
dec
fnstcw
mov
jmp
jae
mov
add
xor
lahf
std
mov
clc
decl
std
pop
mov
cmp
adc
xor
pushf
das
sbb
pushl
lods
cmc
int
ficoml
sub
inc
push
call
sbb
cmp
push
adc
ljmp
negl
into
and
out
call
sahf
sbb
mov
inc
nop
popa
jns
jno
pop
movsb
shrb
mov
sbb
shll
int
lods
pop
clc
decl
and
repnz
jl
vrcpps
mov
lods
jmp
push
pop
test
sbb
in
sub
loopew
in
test
dec
fiadds
cmp
lret
into
bound
mov
fbstp
aas
ja
icebp
lds
orl
fs
jnp
push
adc
sbb
or
ret
loop
nop
iret
cmp
pop
in
jl
dec
addl
pop
fistpll
nop
pop
sub
xor
mov
pushf
push
sbb
jne
mov
jne
out
mov
in
out
sbb
add
jno
lcall
das
shlb
mov
cld
and
repz
add
iret
xchg
outsb
xor
in
dec
or
cmp
movl
pushl
int3
and
xor
xchg
xlat
ror
rcll
sub
xor
ljmp
rol
adc
cmp
repz
push
hlt
cmc
inc
cltd
fdivs
cwtl
mov
clc
ss
sbb
cmc
aad
movsb
dec
mov
inc
jp,pt
stc
daa
test
popf
test
lcall
lahf
sbb
mov
sbb
fsts
insl
xchg
pop
adc
dec
mov
aam
in
and
mov
and
or
or
xchg
je
xor
out
imul
or
fs
inc
jg
dec
orl
js
add
jge
outsl
jp
aad
mov
nop
cld
ljmp
push
lcall
cmp
sbb
sub
adc
ljmp
cli
push
cltd
mov
mov
adc
mov
pop
fsubr
xchg
inc
lds
push
call
fnstenv
mov
scas
neg
xor
ljmp
bnd
in
outsl
mov
out
out
xchg
mov
lods
cmp
in
jge
fidivrl
pop
cmp
clc
mov
pop
push
or
xor
mov
ror
lahf
scas
lcall
add
rol
rolb
ljmp
and
call
incl
mov
rorl
xlat
push
mov
test
or
loope
loope
cli
call
adc
subl
push
and
push
fsubrl
es
push
or
inc
jg
or
pusha
andb
lds
js
jo
xchg
push
mov
xchg
adc
xor
incl
cmp
outsl
cmp
ljmp
faddl
mov
cld
repnz
jno
fisubs
xchg
fs
cs
xor
sub
call
push
fwait
push
stos
stos
mov
popf
push
sub
clc
rcrb
push
mov
sbb
pop
js
cli
mov
mov
cmpsb
out
dec
insb
aam
fisttps
sar
movsb
jns
jg
cmp
mov
mov
stc
cmp
incl
std
lcall
aad
inc
into
imul
cmp
fisubrl
push
mov
jge
lds
gs
je
popa
sbb
loopne
out
cmpsb
jg
fdiv
dec
outsl
iret
add
adc
adc
sarb
insb
xlat
andb
inc
dec
ds
push
sbbb
cmpsb
mov
rcl
das
lret
js
loop
ljmp
push
sbb
inc
cmp
aas
push
lock
mov
ljmp
gs
sbbl
jns
rcrb
ja
pop
cmpsb
iret
lcall
std
aad
pusha
data16
cmp
fcoms
xor
jne
outsl
mov
fwait
xchg
sahf
data16
or
cmp
fdiv
sbb
call
jge
dec
imul
add
xlat
ja
insb
jb
in
daa
push
jp
sub
mov
inc
sub
jmp
rcrl
mov
xor
fstp
jl
testl
push
in
sub
pushl
inc
xchg
mov
dec
xor
pop
shlb
adc
leave
pop
aaa
inc
call
rcrb
jl
pop
inc
das
popa
push
jo
sub
out
loope
hlt
inc
xor
pop
clc
or
enter
cmc
adc
imul
iret
int
cmpb
fnstenv
add
repz
test
nop
mov
call
dec
sbb
in
sbb
int
push
popw
jb
xchg
clc
fs
test
divl
mov
cwtl
les
and
adc
push
sbb
jmp
sub
jle
mov
fwait
jecxz
push
xchg
push
mov
pop
push
out
cmp
push
ljmp
sub
data16
push
cmp
sub
outsl
mov
sahf
mov
lret
fidivs
and
pop
outsl
std
ljmp
push
mov
pop
clc
mov
les
filds
pop
adc
dec
push
mov
sub
add
sub
push
lahf
push
cmp
adc
sub
and
sarb
fwait
fwait
xchg
jge
scas
hlt
ds
loopne
mov
xchg
mov
inc
push
xchg
in
or
mov
sbb
stos
jg
mov
ret
subb
mov
dec
cmpsl
add
call
jg
imul
into
fildll
aaa
aad
push
sbb
subb
mov
lahf
mov
test
mov
sbb
hlt
aad
xor
orb
call
pop
cmpsl
addr16
pushf
pop
addr16
lret
xor
jae
push
call
pop
pop
loopne
dec
int
js
aas
cmp
lcall
insl
test
cmp
or
pop
inc
stc
rorl
fistl
test
fidivrs
loopne
mov
jg
repnz
addb
or
inc
dec
outsl
pop
jo,pn
lcall
mov
and
xor
aas
js
pop
xchg
imull
notl
push
jecxz
push
decl
push
mov
int3
andl
xor
cli
and
jno
sti
flds
popf
lcall
pop
adc
jbe
sbb
mov
addr16
lods
int
fmull
mov
scas
jl
in
pop
imul
jg
ja
jle
sub
sub
movsb
sbbb
aad
sti
adc
cld
mov
shll
xchg
js
xchg
aad
ljmp
cmc
mov
test
jmp
stos
xor
sbb
mov
test
sub
dec
ljmp
or
jmp
pop
nop
cmp
cli
sub
push
jge
mov
jne
mov
fildl
push
test
jecxz
decl
push
push
cmp
or
mov
mov
xlat
add
imul
decl
insl
cmpsb
push
push
outsb
pop
dec
mov
mov
jg
push
das
imul
fadds
mov
push
decl
cld
aad
data16
mov
xor
xor
enter
mov
pop
xlat
cltd
test
ss
adc
stos
mov
inc
adc
add
mov
mov
popf
cli
fucomip
dec
scas
fdivp
shlb
hlt
mov
add
push
mov
jmp
mov
mov
push
loop
ljmp
push
and
fdivrl
insb
out
mov
fcmovnb
adc
popf
xor
insb
push
loope
jl
xchg
das
std
lcall
pop
icebp
test
cmpsb
ficoml
xchg
lods
pop
mov
push
ficoms
in
stos
call
add
jne
pop
pop
xchg
loopne
scas
test
lahf
into
push
popf
xchg
loopne
sbb
ret
or
in
sti
pop
sub
dec
lds
in
xchg
sub
das
cld
lcall
mov
dec
fisubl
jg
inc
icebp
aas
data16
push
inc
add
jmp
inc
sti
jne
push
rorl
adc
sub
test
push
xchg
mov
lcall
incl
or
subl
mov
xor
add
fidivs
inc
lods
ljmp
std
stc
mov
data16
sub
adc
bound
stos
jg
mov
add
adc
fs
loopne
mov
jg
adc
daa
lret
mov
jmp
xor
mov
insb
sub
add
mov
xchg
stos
ret
sbb
mov
hlt
push
xchg
xor
dec
jmp
mov
and
and
popa
iret
adc
shrl
pop
and
in
mov
xchg
mov
inc
pop
cmpsb
in
cmpsl
pop
mov
pop
daa
cmp
jbe
mov
cmp
lret
enter
aam
dec
out
xchg
lcall
out
cwtl
hlt
mov
pusha
mov
inc
das
aad
call
pop
cmpl
pop
cld
scas
repnz
dec
lcall
ljmp
icebp
call
jno
in
or
jae
mov
mov
test
ret
mov
in
add
dec
call
sbb
imul
lcall
cwtl
xchg
insb
mov
scas
push
and
push
mov
xchg
jo
push
stc
mov
jge
mov
test
dec
inc
fsts
fwait
mov
sbb
fwait
pushf
push
sbb
pop
push
ret
ret
mov
in
test
mov
dec
xor
and
or
sub
jmp
pop
add
jle
shlb
hlt
call
incl
dec
dec
inc
iret
cmp
arpl
test
push
xchg
in
mov
orl
mov
add
jns
mov
xchg
jecxz
lcall
pop
adc
pushl
xor
arpl
shll
add
pop
div
in
push
push
jno
movsb
pop
imul
test
inc
cmp
sbb
stos
and
or
or
adcl
and
andl
jo
xchg
mov
lret
aaa
clc
jmp
jecxz
into
push
icebp
mov
sub
js
mov
outsl
ljmp
add
out
repnz
pop
sbb
sbb
imul
or
cld
imul
xchg
addr16
jnp
mov
fisubrl
xor
fnstcw
imul
adc
push
dec
lret
dec
movsl
mov
cli
pushl
xchg
in
adc
dec
mov
imul
jp
sar
add
das
inc
xor
push
push
fbld
fisttpll
cmp
scas
aas
push
in
fwait
push
mulb
and
mov
add
add
popa
rol
push
and
or
mov
adc
fcmovnb
pop
insl
gs
lods
mov
jno
cmp
add
push
jl
jmp
std
xor
das
cmp
jl
pushl
cmc
mov
in
lock
pop
cld
aad
out
int3
rclb
xor
popf
icebp
ds
decl
pop
adc
ret
lea
cld
mov
ss
ljmp
call
fiadds
push
mov
mov
ljmp
int3
add
cmpsb
mov
jbe
loopne
xor
mov
scas
popf
into
pop
ljmp
jg
decl
addr16
pop
adc
out
push
sub
cmp
push
mov
aaa
clc
add
adc
xchg
sahf
push
insl
push
cmc
jae
mov
decl
or
xor
ss
adc
mov
rclb
mov
fwait
lcall
cmp
push
push
shlb
mov
push
lock
push
push
into
bswap
callw
dec
or
call
pop
test
popf
out
popa
mov
in
push
sbb
jmp
data16
iret
int
mov
fsubs
sbb
rcrb
push
test
pushl
mov
inc
lock
push
imul
imul
ss
ds
cltd
inc
sahf
lock
jnp
cmc
sub
pusha
lahf
push
into
mov
fisubs
or
add
ds
fnstsw
sbb
pop
dec
cmp
mov
nop
hlt
ljmp
xchg
dec
test
push
jo
mov
cmpsl
stos
jge
push
test
clc
std
add
mov
bound
ja
nop
adc
mov
ret
dec
sbb
std
mov
pushl
shlb
loop
mov
and
jg
dec
sub
xor
pushl
mov
inc
sub
add
popl
test
outsb
inc
xchg
push
dec
pop
and
jl
std
add
push
sbb
xchg
push
xor
mov
call
add
int3
mov
ja
push
or
add
jbe
int3
sbb
lahf
xchg
subb
push
jb
pop
lock
sub
sbb
push
inc
push
test
popa
pusha
ret
shrl
cmp
insb
enter
std
lret
dec
sti
xchg
xor
push
push
mov
leave
xchg
int
jne
or
cmp
movsl
add
add
pop
mov
adc
inc
pop
pushf
xlat
imull
rclb
incl
sbb
and
fmuls
ljmp
push
inc
and
lds
dec
dec
xor
mov
jg
xchg
aam
fucomip
incl
pop
test
add
movsb
and
mov
mov
jg
into
sub
add
out
jecxz
icebp
stos
out
stos
pop
jnp
in
inc
mov
jl
outsl
lock
call
test
pop
sysret
sub
dec
les
daa
aas
lahf
sub
dec
lea
pop
lcall
add
addb
test
adc
jne
jae
lcall
std
xor
mov
stc
outsl
rorb
andb
test
jg
ret
loopne
test
aad
jl
xor
ret
lret
setno
xor
in
pop
lcall
outsl
fdiv
mov
fidivl
imul
repnz
sbb
sub
push
js
mov
bound
loop
push
push
popf
push
sbb
cmp
jmp
and
movl
bound
sbb
insb
jo
in
xchg
adc
mov
incl
ficoml
clc
pop
mov
cwtl
mov
imul
mov
or
pushl
jno
pop
sbb
jnp
popa
push
adc
into
push
sub
xchg
jmp
or
pop
sbb
shll
notb
push
icebp
add
jae
sti
add
in
mov
jg
out
sbb
adc
push
xchg
addr16
ja
incl
sahf
insl
mov
mov
mull
and
lods
or
shll
aad
in
mov
pop
xor
jl
in
in
jge
ljmp
xorb
scas
pusha
dec
push
inc
mov
cmp
xor
into
or
lcall
das
push
cmp
loopne
or
cwtl
pop
movsb
sub
ljmp
xchg
outsb
mov
jl
and
push
cld
inc
hlt
addr16
mov
movsb
or
xchg
in
jg
push
aas
mov
xor
pop
decl
movsb
push
inc
dec
or
push
sbb
mov
jmp
cmp
push
mov
mov
lret
or
mov
popf
lahf
jp
mov
xor
fidivl
ret
add
test
adc
adc
sbb
decl
in
mov
test
pop
sbb
jmp
hlt
sbb
inc
out
jno
mov
sbb
icebp
stos
cltd
mov
mov
add
cmc
shlb
lcall
jmp
xchg
hlt
cmp
gs
mov
data16
dec
push
inc
xor
sbb
mov
cmpsb
cmp
incl
sahf
clc
and
adc
push
cmp
xchg
ret
test
adc
sub
cmc
dec
mov
call
incl
push
lock
jge
adc
int
jecxz
imul
outsl
movsl
inc
sub
mov
pop
jo
xor
notb
icebp
push
lret
loope
sti
xchg
lret
jae
jp
jp
dec
fwait
pop
leave
sub
pop
mov
pop
loopne
clc
fisttpll
inc
out
loopne
dec
aam
ret
andb
mov
and
sub
es
lcall
cli
scas
mov
pop
inc
xor
in
mov
xor
jno
test
es
or
jbe
in
cmp
inc
dec
rorl
jmp
nop
mov
insl
push
dec
add
sub
es
mov
inc
dec
std
pop
inc
pop
hlt
jp
xchg
mov
add
inc
in
aad
jecxz
icebp
adc
sbb
pop
popa
sar
jmp
cltd
in
jae
das
push
or
and
imul
push
mov
sub
push
addb
divl
cmp
xabort
jmp
jmp
xor
mov
subb
adc
jg
xchg
cmpsb
aaa
lcall
jbe
pushf
adc
scas
clc
in
popf
adc
or
sbb
mov
push
push
shlb
cmc
aas
sub
add
pushl
ja
insb
ljmp
xadd
add
xor
sub
outsl
insl
add
mov
aad
jmp
imul
xchg
mov
and
mov
xchg
cli
out
leave
mov
mov
jp
repz
rorb
mov
es
repnz
loopne
xor
mov
syscall
sub
ss
mov
call
cmp
xchg
dec
dec
jecxz
mov
mov
mov
adc
jg
jno
add
mov
test
adc
pushf
lcall
filds
sbb
push
out
cmp
fs
mov
and
push
sbb
packssdw
mov
cmp
test
pop
jne
cs
sbbb
incl
pop
or
pop
push
jl
push
dec
icebp
testl
pushl
daa
pop
insl
sbb
sub
pop
fs
mov
ret
cs
or
jmp
xchg
fwait
out
inc
out
adc
xchg
push
jp
xchg
and
xor
ljmp
and
fnstsw
mov
dec
andb
inc
mov
fdivrs
push
loop
incl
movsl
call
sbb
dec
jecxz
or
jl
sti
ja
aad
jmp
xchg
imulb
sub
sbb
or
lds
aam
fstps
mov
imul
xor
aaa
es
addr16
shrl
int3
push
cmp
call
mov
pop
add
ret
mov
inc
pop
rorl
lcall
cmp
cwtl
and
daa
mov
es
pop
lret
xchg
outsl
cld
and
adc
cmp
lods
insl
aam
ds
shll
cmp
test
in
xlat
jb
mov
pop
test
xchg
loopne
jb
xchg
clc
jle
jbe
mov
xchg
mov
add
fidivrs
in
out
pop
stos
enter
xchg
clc
ljmp
xchg
cmp
scas
sbb
adc
loope
push
push
insb
lods
push
sar
pop
pop
hlt
call
jmp
and
pushl
cli
mov
fcoml
int
out
outsl
fwait
push
ss
test
cltd
out
sub
xor
ficompl
das
sbb
scas
mov
sbb
mov
push
push
push
jae
test
lcall
incl
shr
outsb
lods
jb
xor
fs
lock
loopne
call
jg
das
shr
idiv
or
sub
lods
cmc
lods
into
push
jnp
push
in
inc
loop
out
fadd
pop
add
mov
pop
xor
test
fists
icebp
test
addl
xchg
scas
xchg
movsb
mov
cmp
mov
jle
sbb
xor
lcall
fistps
pop
shll
mov
outsl
scas
mov
cmp
mov
mov
fdivr
jmp
pop
and
dec
push
pop
sarb
cli
decl
inc
sahf
cmp
insl
sub
and
int3
xor
ljmp
adc
inc
jno
push
inc
mov
loopne
enter
dec
jg
jecxz
call
inc
int3
hlt
lret
xor
xchg
inc
lea
and
ljmp
mov
mov
icebp
cmpsl
push
into
gs
aaa
out
out
xchg
push
fs
dec
das
and
loope
and
lcall
xor
push
ljmp
and
in
push
cmpsl
mov
ljmp
mov
popf
mov
cmpsb
mov
sbb
or
or
ljmp
stos
dec
mov
mov
aad
mov
shlb
movsb
dec
or
dec
std
xchg
cwtl
in
pop
mov
mov
mul
jo
test
add
sbb
xchg
dec
push
mov
mov
dec
pushl
or
mov
test
arpl
cmp
jle
mov
ja
jmp
lods
xor
cmp
mov
and
jne
xchg
xor
pop
inc
ds
leave
mov
adc
push
call
xchg
xchg
sarb
decl
mov
iret
jmp
insb
testl
inc
pushf
push
pop
dec
push
mov
scas
and
cmp
jg
jo
adc
decl
icebp
mov
pop
rcl
xor
lea
mov
pop
mov
adc
push
dec
sub
scas
sub
call
jae
ja
add
mov
std
xor
pop
call
loopne
fiadds
mov
and
xchg
jg
insb
filds
xchg
in
sbb
cmpsb
cmpsl
cwtl
imul
fldt
sub
mov
shl
ljmp
push
cmp
test
hlt
decl
cmp
dec
fmul
or
or
or
cmc
mov
pop
xchg
je
jo
inc
push
popa
xor
mov
cmp
and
jmp
mov
sbb
icebp
cltd
pushf
cmp
inc
push
lcall
imul
pop
ret
cmp
sti
sti
outsl
fimull
daa
shrl
adc
xchg
adc
or
cwtl
xor
xchg
or
incl
dec
adc
or
fstpl
icebp
xor
test
push
push
cmpl
and
out
aas
out
sbb
pop
outsb
stos
mov
lea
sub
clc
call
std
aas
inc
pop
jo
push
mov
sub
popf
jno
xchg
fs
xor
jnp
popf
inc
lcall
dec
imul
dec
sub
mull
sbb
mov
mov
jle
mov
jl
in
jp
mov
movsb
sbb
dec
jmp
cmp
mov
pop
lds
fdivr
jge
sub
cmp
leave
clc
xor
xchg
fcomp
sbb
ret
inc
aad
xchg
xchg
mov
mov
lcall
adc
jbe
dec
add
xchg
dec
les
dec
mov
mov
arpl
add
adcl
jle
test
add
pop
push
mov
cld
daa
ja
outsl
int
mov
jnp
je
xor
scas
dec
push
ret
mov
call
push
adc
std
xorl
jmp
dec
rclb
loope
gs
hlt
lock
mov
sbb
icebp
imul
call
faddl
xor
inc
mov
jp
sarb
add
mov
decl
test
bound
pop
mov
or
stc
pop
out
aaa
das
lock
push
idivb
test
dec
testl
sbb
arpl
outsl
cmpsb
push
ss
in
pushl
jae
idivl
xchg
dec
or
mov
xor
cwtl
fcompl
adc
std
mov
pushf
outsb
cmp
dec
dec
jp
push
sub
mov
cmp
lcall
dec
mov
pushl
sbbl
call
ss
aad
sti
call
xor
mov
fs
push
inc
into
call
into
pop
popa
rolb
jne
ss
outsl
sub
dec
out
les
xchg
sbb
pop
aaa
jg
cli
jle
data16
repz
add
sub
xor
add
sbb
xchg
mov
mov
sub
and
popf
enter
mov
test
jge
and
in
xchg
mov
call
dec
outsb
adc
mov
outsb
cmp
pusha
mov
out
fists
call
mov
push
lcall
and
jmp
cld
jmp
movsb
jmp
xchg
jno
push
stos
data16
pusha
xor
ret
dec
int
mov
pop
ja
and
xchg
sbb
xor
loope
mov
pop
inc
roll
daa
fisubs
and
arpl
pop
sbb
inc
out
adc
test
mov
add
pop
in
iret
and
leave
pop
loope
add
fldcw
fisttps
jns
loopne
pop
ret
out
and
jmp
stos
jno
ret
push
inc
js
push
sub
incl
xchg
jp
pop
addl
and
aaa
sub
call
pushl
aad
push
daa
inc
mov
push
push
imul
decb
cld
mov
jp
icebp
mov
jo
fwait
pop
push
lcall
gs
jp
lahf
out
mov
mov
jge
aaa
push
sbb
push
lcall
dec
push
out
pushf
rol
addr16
jge
push
loop
cmpsl
popf
cld
or
cmp
pop
idivl
aam
pop
arpl
cltd
jmp
outsl
into
inc
mov
lahf
inc
out
test
lret
ljmp
leave
int
jecxz,pn
rol
call
lds
mov
push
mov
pop
pushf
lock
cwtl
push
adcb
pop
cld
incl
push
xchg
dec
mov
and
xchg
sub
inc
dec
jo
aaa
fdivr
fwait
outsl
push
mov
cmp
inc
or
fistpl
jg
call
and
sub
or
cmc
insb
cmp
pushl
xor
leave
ret
adc
mov
push
or
jle
cmp
ljmp
inc
insl
xchg
sarl
lods
xchg
sbb
into
int3
or
jecxz
hlt
ljmp
or
push
push
pop
cmp
push
pushf
loopne
xor
sub
cmp
clc
mov
jae
shrl
jo
fsts
icebp
inc
dec
aas
outsl
dec
jne
pop
and
and
call
out
inc
jb
sbb
lret
clc
ljmp
and
jge
lods
into
ljmp
clc
add
xchg
inc
icebp
incl
decl
movsl
insl
dec
push
fs
hlt
imulb
jmp
adc
inc
in
jnp
add
arpl
or
xor
jne
fbstp
jle
xchg
fwait
pop
fucomip
jmp
cmp
sbb
mov
movsb
jno
insb
int
mov
lods
pushl
adc
xchg
push
inc
sbb
xor
fldcw
cltd
repz
push
pop
data16
dec
lahf
int3
neg
inc
xorb
in
nop
cmp
inc
mov
push
loopne
jle
fstps
jecxz
fcomps
decl
ljmp
sub
ret
call
outsl
incl
pop
dec
outsb
or
xor
insl
pop
add
mov
sbb
frstor
pop
leave
xchg
pop
dec
mov
inc
xchg
mov
loopne
jae
mov
xchg
jmp
xchg
std
cs
out
push
add
xchg
pop
insb
movsl
aaa
movsb
jne
adc
cmp
ret
addr16
ljmp
scas
push
mov
or
incl
pop
xor
cmpsl
xchg
ja
mov
aad
fsts
xchg
sti
lea
push
in
and
and
dec
mov
pushl
iret
xor
adc
sarb
fstps
xor
call
das
aam
jmp
call
repnz
sub
popf
mov
xchg
and
arpl
das
dec
insb
in
push
xor
push
pop
dec
call
scas
movsl
adc
ds
jge
inc
test
adc
out
cmpsb
enter
pop
dec
enter
out
mov
in
jmp
setae
mov
mov
inc
ds
aad
rolb
ja
addr16
pop
popa
std
outsl
add
dec
cmpsl
mov
cmp
mov
pop
test
dec
jmp
sbb
mov
incl
cmp
or
jns
sbb
add
xchg
rorl
in
dec
push
gs
inc
decl
je
std
in
stos
pop
pop
cmp
clc
mov
xchg
mov
in
stos
xchg
sbb
test
andb
sbb
loope
adc
ret
adc
sar
call
lret
xchg
fbld
les
in
data16
movq
jecxz
jne
add
or
mov
dec
xchg
mov
pop
sbb
enter
mov
scas
inc
aas
call
decl
nop
test
ficoml
xchg
out
mov
js
push
adc
or
fdivs
mov
je
outsb
mov
fimull
push
testb
sahf
repnz
jg
sbb
cmp
add
jbe
push
leave
adc
and
mov
rorb
sar
call
xchg
pop
adc
imulb
loope
ljmp
int3
in
xchg
mov
mov
pusha
cmp
pop
jns
lea
outsl
mov
ret
aaa
cli
ljmp
xor
adc
dec
adc
andb
cmp
or
lcall
mov
test
xchg
dec
add
ljmp
enter
mov
lcall
mov
add
and
cmp
and
jmp
cld
lds
pop
stc
and
or
sub
sar
mov
fldenv
and
push
sub
jne
xor
call
lcall
aaa
push
cmpsl
jnp
mov
ja
data16
xchg
push
outsl
icebp
mov
adc
xchg
subb
out
push
ljmp
mov
nop
int
xchg
iret
jns
xor
sub
cmp
push
sbb
sub
gs
testb
movsl
xor
mov
rorl
rcrb
inc
shll
xchg
incl
rcl
test
adc
inc
sbb
dec
lods
ljmp
cmpsl
fsub
mov
adc
and
push
sub
fnsave
mov
jne
inc
ljmp
lahf
cwtl
cmp
leave
xchg
xor
lcall
adc
xchg
xlat
iret
inc
in
pop
adc
andb
cmp
jmp
xor
mov
outsl
icebp
jge
and
stos
test
pop
lea
loopne
xchg
xorb
push
jo
decl
lds
int
xchg
pop
mov
popf
sbb
je
leave
stc
test
test
pop
add
mov
inc
decl
incl
fisubs
fldl
rorl
data16
sbb
pushl
ja
mov
test
stc
dec
mov
dec
pop
andl
cmp
xchg
sbb
ss
cld
add
fdivrl
mov
inc
and
xchg
xchg
mov
mov
xlat
in
decl
mov
xor
movl
addl
icebp
xor
mov
je
sub
orb
icebp
inc
scas
out
cltd
call
incl
bound
loop
or
pop
and
jmp
adc
jg
xchg
outsb
add
movb
adcb
sub
pusha
xchg
mov
or
into
stc
mov
mov
cs
jle
pushf
les
cmp
fldt
mov
mov
jg
lods
push
mov
out
xchg
push
jmp
xchg
sbb
outsl
inc
les
sub
lcall
std
pop
inc
mov
fildl
xchg
int
cmpl
enter
das
icebp
hlt
fidivl
cltd
daa
or
sub
fstpl
inc
jo
and
cmp
mov
jg
sbb
jbe
shr
sbb
mov
push
mov
add
std
sub
cmp
loop
xor
std
imul
jae
push
jno
and
jno
cmp
sbb
cmc
or
jecxz
push
lea
ja
or
pop
jge
rorb
or
std
jg
ret
dec
mov
add
mov
lods
aad
js
lahf
dec
adc
jns
mov
pushf
pand
lods
push
std
xor
ljmp
nop
mov
jl
fidivs
in
add
fwait
bound
mull
mov
pop
and
xor
mov
movsl
std
push
xor
inc
sub
fnstsw
inc
movsb
mov
addr16
fdivr
add
cld
xor
mov
fimuls
jg
push
mov
in
cmp
ss
inc
or
inc
xor
mov
pushl
and
push
fildl
loopne
mov
insl
pop
jo
xor
jmp
ss
in
ffree
icebp
mov
fwait
and
shrb
mov
mov
and
jg
mov
jl
idivb
add
cmpsb
addr16
test
inc
ljmp
call
test
outsb
loop
jg
repz
adcb
stos
push
xlat
and
lock
jmp
dec
and
leave
pop
frstor
std
stos
jb
repz
sbb
jmp
jg
subb
fsubl
in
xchg
push
int
in
jg
ljmp
mov
dec
addr16
rolb
adc
orps
jl
dec
aad
out
pop
test
push
push
loope
jns
mov
add
rcll
mov
shr
scas
das
xchg
mov
lcall
je
sbb
inc
dec
jp
hlt
jbe
mov
push
insl
ss
sbb
clc
mov
incl
and
mov
aad
push
pop
test
add
inc
pusha
in
lds
aaa
and
and
mov
sub
or
pop
fwait
add
scas
sbb
pop
and
sub
mov
mov
push
mov
lods
and
xchg
jp
das
dec
rcll
fidivs
pop
and
inc
mov
cmpsl
test
ss
loop
jne
push
jecxz
decl
push
mov
mov
fwait
nop
mov
repz
lock
pusha
hlt
cmpsl
sub
in
decl
jl
mov
imul
inc
jnp
out
cmovp
jmp
jno
mov
mov
mov
sub
mov
decl
mov
push
std
mov
movsl
adc
lret
call
js
xchg
xchg
fldt
push
stos
stos
cld
hlt
xor
jb
xor
mov
mov
pusha
mov
shrl
cmpsb
lcall
fwait
or
mov
test
fbstp
loopne
outsl
push
sbb
mov
shrb
pop
cmpsl
das
jo
aad
jge
dec
fiadds
mov
sub
mov
or
sbb
call
cli
xor
lret
mov
push
cld
jg
mov
push
mov
fiadds
test
jne
std
lcall
sub
shr
sub
mov
dec
loopne
mov
mov
cmp
xchg
ret
movsb
js
jmp
leave
aad
stos
add
cvtdq2ps
aam
or
xchg
faddp
mov
pusha
loop
or
mov
not
aam
add
add
out
mov
repnz
and
mov
decl
cmp
sub
adc
ja
out
mov
jae
fildll
push
xor
fsubrl
bnd
test
std
das
cmc
in
fsub
pop
lahf
nop
data16
or
lock
sbb
outsl
loop
jmp
jmp
clc
jmp
scas
adc
mov
mov
mov
xor
mov
lods
rolb
sti
cli
ljmp
add
push
cmp
movl
mov
outsl
int3
ds
fdivr
pushl
jne
in
aaa
test
sub
cmpsb
inc
push
push
js
fildll
clc
cmp
insl
pop
sbb
adc
popf
sti
pop
xlat
sbb
mov
xor
cmc
add
jno
mov
push
daa
dec
lock
movsl
call
jp
std
inc
stos
sbb
je
imul
ds
jmp
clc
pushl
es
and
dec
push
subb
negb
fsub
out
fistpll
outsl
cmc
xchg
xor
jl
pop
adc
and
dec
inc
mov
sbb
mov
jmp
jp
adc
leave
in
cmp
daa
dec
cld
mov
cmc
or
adc
lds
idiv
inc
rclb
mov
pop
pop
pop
cwtl
jge
sbbb
push
or
pop
sub
pop
std
xlat
and
test
jle
ss
mov
xor
fsqrt
fadds
jae
flds
xor
mov
lret
cwtl
xchg
push
sbb
or
sbb
ffreep
leave
movsb
dec
sbb
cli
fucompp
push
fs
shlb
jmp
mov
outsl
adc
mov
jmp
icebp
jge
pop
adc
ret
mov
pushl
out
lds
leave
mov
push
int3
jb
lcall
and
and
xor
loope
xchg
movsl
push
xlat
hlt
call
jne
incl
push
popf
dec
repnz
clc
sub
mov
mov
shlb
jle
jnp
or
pushl
das
ret
pop
les
inc
dec
filds
lcall
push
pop
sbb
add
aas
mov
pop
mov
in
cmpsb
insb
xor
ss
mov
data16
stc
test
sub
sub
adc
movl
outsl
hlt
decl
out
push
gs
out
sub
adc
push
jg
iret
out
cwtl
pop
jns
lds
jp
stos
cmpsl
inc
out
stos
lods
mov
push
ljmp
sbb
add
jbe
or
push
add
pushl
in
roll
in
les
jg
pop
loop
sbb
mov
push
cmp
sub
lcall
and
lret
test
pushw
mov
sub
iret
stos
add
jbe
add
call
and
notb
daa
mov
std
adc
cmp
je
or
inc
mov
lock
dec
or
test
adc
das
aad
lcall
sbb
inc
lods
mov
call
cmc
call
or
lahf
jnp
in
cmp
xchg
pusha
movsb
aaa
gs
enter
jb
fildll
paddsw
jge
inc
rcll
inc
mov
jg
cmc
mov
lds
mov
ljmp
inc
arpl
inc
mov
pop
pop
js
movsl
aad
incl
jmp
pop
add
sbb
jae
out
clc
movsl
incb
ja
test
sbb
or
sub
sahf
sub
das
jp
sub
xchg
cltd
lcall
add
shrb
adc
xchg
arpl
push
lcall
cmp
and
pop
push
mov
xchg
mov
jae
push
decl
js
mov
xchg
sub
and
stos
or
je
iret
stc
inc
mov
adc
jle
jb
cmp
fsubr
cwtl
popf
push
ret
sub
pop
jbe
push
stos
push
repz
sub
mov
jg
aaa
aaa
sbb
jle
mov
popa
inc
lock
sub
mov
mov
xor
iret
cmc
int
dec
sbb
insl
mov
and
imul
inc
aad
stc
adcb
pushl
push
sbb
sbb
daa
popf
nop
and
ljmp
aas
dec
sahf
test
cltd
test
pop
pop
jge
lds
cmpsl
adc
outsl
fbld
sbb
addl
and
loopne
rdtsc
cld
jg
xorl
or
mov
push
aad
or
jbe
hlt
ljmp
and
or
fnstenv
inc
push
fidivrs
jbe
jg
add
insb
push
stc
rcrl
mov
lahf
xchg
ljmp
mov
ljmp
mov
jle
sub
and
jb
mov
pushl
mov
shrb
inc
xchg
int
dec
nop
and
push
cmpl
cs
sbb
push
cmp
pop
dec
xor
xchg
repnz
push
sbb
dec
push
pcmpeqb
cltd
dec
sbb
xor
pop
adc
sub
xchg
jmp
pop
lods
loop
mov
mov
mov
stc
inc
xchg
std
lods
mov
push
cli
stos
mov
test
mov
xchg
or
clc
push
dec
xchg
cwtl
les
fldenv
or
jl
mov
mov
sar
ljmp
mov
and
xchg
lods
xchg
stc
fsubr
jg
mov
mov
jno
push
pop
clc
push
mov
xchg
mov
jle
and
sub
jg
xchg
loope
test
popf
loopne
rcll
mov
mov
pushl
cmp
shrl
mov
cmp
adc
loope
pop
shll
ljmp
xchg
paddd
stc
mov
jne
rep
test
sbb
out
mull
mov
jge
sub
lcall
cmpsb
shrb
imul
outsb
inc
std
incl
js
cld
or
test
stc
iret
clc
push
das
mov
fcompl
movsb
dec
loope
mov
jns
jo
xor
ljmp
xor
or
cmc
push
adcb
and
pop
ljmp
movsl
test
out
dec
sub
mov
dec
dec
inc
aad
sarb
mov
mov
insl
imul
sar
lcall
aam
mov
call
dec
lea
out
cmpsb
dec
call
xchg
sbb
nop
dec
repz
adc
or
ljmp
mov
xchg
mov
bound
sub
cmpsl
push
dec
mov
or
or
sub
or
lods
test
push
dec
je
add
call
jb
jp
sbb
fists
mov
fists
lahf
mov
jmp
jno
notb
jnp
pop
and
leave
dec
fcomps
fsubs
cmc
mov
push
push
xchg
ja
lcall
cmc
bound
lahf
hlt
cs
test
lret
pop
pop
or
or
jmp
xor
cmp
insb
loopne
pop
inc
loop,pt
testl
and
decl
jbe
add
fidivs
dec
fildll
or
call
mov
lcall
icebp
adc
sti
cmp
daa
mov
js
sbb
scas
xlat
jbe
cs
in
mov
scas
fsubrs
mov
adc
mov
push
mov
ja
loopne,pn
xchg
push
sar
fistpll
pop
jge
push
mov
jle
add
jl
jnp
mov
popa
sub
jg
mov
out
pop
xor
pop
add
ljmp
pop
enter
xchg
mov
ds
test
push
mov
push
call
fs
lahf
add
mov
add
mov
lcall
pushl
lret
dec
mov
fsubp
stc
negl
sbb
outsb
in
pop
push
mov
aaa
mov
vprotq
sbb
iret
and
dec
jmp
pushl
incb
dec
add
pop
dec
out
add
ljmp
fidivrl
add
jp
mov
xor
ficoml
stos
adcl
je
fistps
rclb
inc
xchg
cwtl
lret
jmp
adc
cmpsb
inc
call
repz
sahf
adcb
mov
in
inc
les
sbb
cmp
push
add
xor
mov
adc
js
std
jl
xchg
clc
fistpll
mov
sub
jge
jmp
aad
call
rorb
dec
inc
push
test
popf
roll
nop
xchg
mov
mov
jge
and
mov
xor
aad
pop
fcoml
sar
pop
call
cli
jns
mov
push
dec
iret
jno
mov
mov
add
popa
add
push
loopne
pushf
or
ds
xor
addr16
test
out
lcall
add
mov
xor
inc
call
jg
push
add
ret
dec
nop
dec
mov
mov
incb
mov
int
jae
outsl
mov
jecxz
jmp
jae
int3
mov
jo
or
lods
lret
pusha
aam
jmp
xchg
or
mov
insb
xor
xor
lds
into
or
in
xor
sbb
mov
popa
jmp
xlat
imul
cs
lahf
incl
mov
add
push
das
jne
or
mov
jge
sub
xchg
mov
xchg
mov
jmp
ljmp
mov
into
mov
dec
push
or
adc
mov
cmp
mov
inc
mov
arpl
jo
fisubrs
xchg
shlb
jp
fs
pop
das
imul
xchg
cwtl
mov
and
cmc
int
inc
jle
mov
xchg
jecxz
jbe
lods
jo
mov
lods
mov
repz
std
jmp
xlat
inc
test
and
out
jle
mov
pop
mov
push
out
pop
inc
push
cmp
mov
fstl
std
test
test
add
and
sub
adc
pop
push
push
movsb
cwtl
test
sti
cs
jmp
pop
pop
and
test
lcall
xor
scas
loop
jb
push
hlt
scas
xor
and
xchg
incl
and
sbb
es
clc
adc
sub
lock
sbb
xor
jmp
mov
es
inc
dec
mov
int3
jo
push
inc
jmp
mov
xchg
mov
and
ljmp
fistl
vcvtss2sd
dec
scas
sbb
sti
repnz
pop
mov
jmp
jae
jg
xor
data16
xchg
int
ljmp
xlat
loopne
cmp
ficompl
or
mov
jp
test
call
jns
and
push
inc
movl
fisttpll
subb
in
cmp
xlat
sbbl
out
fdivs
popf
bound
ds
add
jns
jecxz
shlb
jmp
inc
jmp
popf
jo
mov
gs
mov
mov
insl
pop
cmp
jns
add
jl
arpl
cmpb
aas
ds
lahf
ret
inc
xchg
shr
push
cmp
inc
movsb
inc
add
lcall
loop
cmp
pop
test
cmp
std
xchg
inc
pop
add
pop
mov
js
bound
inc
sbb
jne
pop
xor
jb
and
in
push
outsl
sbb
call
test
ljmp
addr16
cli
lods
lea
push
decl
push
jmp
mov
leave
test
xor
jne
xor
cmp
arpl
or
mov
jmp
jno
fs
call
and
outsb
loope
decl
mov
fs
fisttps
pop
mov
aad
pusha
std
sub
outsl
ljmp
cmp
outsl
and
mov
pop
inc
push
adc
clc
dec
inc
mov
jmp
insl
xchg
pop
ffreep
inc
mov
aam
dec
jmp
push
push
add
not
jnp
xchg
pop
adc
push
out
adc
aas
adc
into
loop
dec
cld
fildll
das
punpckhbw
pop
pop
lds
insl
cmp
out
call
or
and
int3
cmp
mov
out
push
stos
fadds
les
call
xchg
cmpsb
outsb
jge
cmpsb
push
fldl
xor
jp
insl
adc
lods
xorl
pushl
cli
mov
insl
ficompl
testl
movsl
add
shlb
mov
pusha
jp
cmovg
out
mov
lcall
test
cmp
ja
dec
fsubl
stc
mov
inc
mov
inc
jno
add
stc
addr16
jmp
lahf
icebp
ljmp
in
mov
jp
je
andl
mov
inc
ret
jo
pop
aaa
js
dec
mov
dec
test
cmp
sbb
fistpll
mov
lahf
insl
daa
xor
add
iret
mov
dec
clc
cli
decl
in
arpl
dec
mov
loop
loopne
rorb
orl
js
fildl
insl
fwait
shll
or
push
sbbb
or
icebp
add
and
jg
mov
es
sub
decl
int3
inc
or
jp
jl
push
jae
inc
scas
adc
push
add
nop
scas
lahf
lret
cmp
mov
cld
sub
sub
mov
add
int3
stc
das
add
push
xor
lea
pop
std
inc
aam
xor
cli
mov
jg
or
pop
or
lret
dec
addr16
adc
cmp
push
popf
mov
scas
fists
cld
clc
sub
ss
cmp
sub
lahf
xor
sbb
pushl
clc
jmp
xorl
jge
jnp
cmpsb
mov
push
cmpsl
sub
jle
dec
std
lret
push
pop
push
mov
push
pop
movsl
out
sbb
ss
mov
mov
push
inc
cmp
xchg
push
popa
cmp
sti
jmp
xor
xor
cltd
mov
mov
out
les
enter
filds
cmp
out
cmp
xor
xchg
sbb
inc
and
xchg
xchg
addl
dec
jmp
mov
lds
sar
das
or
or
inc
cli
jecxz
je
mov
out
aad
aaa
mov
cmc
cltd
mov
daa
sbb
cli
incl
sub
xchg
loop
xor
sub
and
mov
mov
jmp
ljmp
push
stos
in
cmp
pop
sbb
int
inc
movsl
mov
out
in
out
mov
adc
mov
jno
lret
or
cmp
andnps
imul
fstpl
pop
les
in
es
jecxz
dec
xchg
scas
adc
mov
inc
sbb
repz
fidivrl
mov
in
icebp
out
arpl
xchg
repnz
sbb
das
std
ljmp
movsb
adc
or
push
imul
and
mov
push
arpl
dec
mov
pop
dec
cwtl
xor
rcl
daa
dec
push
mov
dec
mov
lcall
pusha
xor
push
pop
xchg
bound
xorb
jmp
stos
sbb
xchg
cmp
fidivs
pusha
mov
aam
stos
inc
mov
call
lcall
ss
icebp
ja
add
adc
clc
stc
push
cld
fistpll
fdecstp
stos
or
lret
iret
out
ja
sub
mov
mov
insb
fdivr
add
or
cltd
mov
lea
push
mov
pop
call
inc
pop
adc
ljmp
cmp
stos
cmp
ljmp
fistps
mov
pusha
or
sub
push
sti
jp
stos
push
adc
jge
mov
push
xchg
mov
bnd
rolb
jb
xor
cld
lods
push
cld
call
insb
popa
push
push
or
sbb
mov
sbb
test
xchg
jmp
sub
jo
outsl
js
fcmovu
or
xor
dec
adc
pushl
mov
dec
jecxz
cld
dec
push
int
test
lahf
mov
inc
aas
dec
jg
jmp
insl
cld
xchg
insb
mov
and
cmp
incl
inc
je
test
or
mov
push
mov
popa
out
sub
arpl
jmp
push
hlt
xor
cld
inc
add
sub
mov
cli
ljmp
jne
jae
push
test
pop
xchg
es
mov
incl
push
cmp
sbbl
sub
jmp
ror
fucomp
test
add
incb
in
adc
push
xchg
clc
jg
enter
adc
jne
pop
insl
fisubl
cmc
addr16
or
addr16
fists
jb
lret
or
outsb
xchg
xlat
cmp
in
xchg
je
loope
and
insl
fldt
int3
add
lret
pop
lods
insl
loopne
mov
sub
lcall
jno
adc
mov
imul
iret
std
les
cld
cmp
test
ljmp
test
mov
stos
adc
inc
pop
push
in
test
add
cmp
mov
in
verr
mov
or
cmpsl
mov
pushf
pushf
mov
push
lcall
inc
or
fstps
adc
mov
pop
cld
push
decl
cmp
dec
mov
out
xlat
lods
mov
call
or
aas
pop
in
mov
cwtl
test
hlt
stc
push
xchg
fistps
adc
gs
mov
mov
push
les
decl
movsb
jne
sti
insb
jnp
inc
push
in
stc
jno
nop
cli
ljmp
add
in
sub
iret
test
daa
shl
sub
or
ss
and
std
push
out
mov
das
hlt
pop
fwait
pop
mov
pusha
add
pop
cmp
lcall
std
wbinvd
jecxz
and
out
add
jge
aad
imul
xchg
and
mov
decl
fidivl
shlb
pop
jge
lods
ss
cli
dec
dec
pop
adc
inc
mov
lret
call
sbb
popf
aas
mov
daa
xchg
add
shrb
pop
add
fs
call
xchg
pop
aam
dec
and
cmp
sarb
mov
and
mov
cmp
inc
cmp
sub
sub
ds
test
in
call
xchg
movb
icebp
cmpsb
lea
xor
fnsave
or
imul
incl
pop
sub
int
xor
ss
fisttpl
pop
pop
mov
push
out
ljmp
in
xchg
push
pop
je
jo
sub
es
icebp
ss
lods
ds
inc
into
inc
inc
leave
mov
stc
daa
ret
sbb
jp
sbb
mov
incl
incl
pop
outsl
lock
movsl
jbe
out
fmul
fwait
cmpsl
pop
inc
sbb
rorb
test
mov
outsb
pop
jns
fwait
es
xor
jg
push
jp
fdivs
jl
mov
movsl
dec
leave
iret
lods
dec
add
mov
sub
push
dec
jg
rcrl
cli
mov
test
sbb
pop
nop
push
outsb
mov
sbbb
fucomip
jmp
push
pop
mov
in
mov
lods
mov
lcall
or
mov
xorl
mov
mov
js
decl
or
stos
out
ds
rcrb
jne
inc
enter
xchg
jg
adc
adc
in
imul
fiaddl
sub
pushl
or
in
enter
outsl
lea
add
xchg
pop
add
cmpsb
pop
insw
mov
sbbl
add
mov
iret
loop
jbe
and
push
dec
push
stos
adc
int
and
jmp
xchg
and
jae
mov
sub
test
incl
icebp
mov
pushf
mov
lahf
add
mov
sbb
xor
dec
mov
data16
jae
addb
push
add
dec
xchg
xchg
clc
pop
mov
xchg
das
jl
cld
insl
mov
stos
push
lcall
push
cltd
int3
push
outsl
push
aam
push
jnp
or
call
mov
test
in
loopne
jno
mov
lods
inc
sti
push
repnz
lods
hlt
pushl
inc
sbb
cmp
sti
push
pop
mov
pop
inc
mov
or
imull
cs
sub
outsb
pop
xor
mov
ja
pop
das
xor
aas
cmp
mov
daa
push
aaa
cmp
mov
lds
xchg
sbb
or
incl
dec
adc
jnp
cmp
add
and
xor
stc
xchg
fs
cltd
xchg
dec
sub
ret
divb
lahf
adc
push
mov
or
sub
mov
jg
inc
jns
and
push
fs
pop
xor
xor
push
in
sbb
popf
js
decl
outsb
sahf
mov
mov
mov
or
sbb
decl
fisttpll
in
sub
popa
mov
or
mov
or
lcall
adc
push
imul
xchg
pop
mov
call
pushf
mov
lds
std
pushl
cmpsb
jmp
mov
stc
push
les
fldl
test
add
inc
lret
dec
pop
call
fnstenv
mov
xlat
popf
stos
sub
fcomip
ljmp
nop
cltd
scas
sbb
pushf
xor
pop
jle
out
add
jmp
jge
sbb
mov
pop
pop
ficomps
call
xor
pop
shll
pop
and
or
xor
test
push
ss
enter
xchg
dec
clc
call
out
mov
sbb
es
rorb
out
add
add
jnp
scas
movsl
ret
ret
jl
aad
testb
and
and
in
lcall
sub
xor
dec
add
lods
or
mov
test
cmc
push
xor
std
pushl
and
jge
out
sahf
insl
aam
dec
insb
dec
rcpps
ret
out
mov
fistpll
jbe
and
and
jg
lcall
int
hlt
in
in
sbb
xchg
pop
insl
rcrb
mov
decl
pop
enter
push
movq
pusha
fisttps
repz
nop
lea
or
jg
sbbb
dec
add
pop
jmp
pop
test
jmp
xor
in
xor
dec
adc
aad
sahf
xor
cli
cmp
xor
cmc
or
int
es
sub
inc
ret
pop
pop
call
jae
push
xor
icebp
test
push
mov
ret
dec
insb
arpl
jecxz
ljmp
mov
clc
mov
pop
mov
dec
inc
adc
lcall
ljmp
loope
and
sbbb
push
data16
ljmp
xor
xor
ds
sbb
sub
outsl
cmc
pop
jo
fs
testl
std
mov
mov
and
add
popa
inc
lds
nop
lods
arpl
xchg
sub
push
int3
mov
lcall
and
mov
shll
add
sbb
dec
or
test
xlat
or
rcrl
push
fcmovnu
and
cmp
dec
fcom
mov
in
imul
call
out
add
adc
adc
shl
mov
pop
or
inc
mov
fldt
push
je
xorb
cmp
psllq
pop
push
clc
dec
inc
pop
push
int3
mov
pop
dec
faddp
dec
inc
dec
dec
inc
popf
xchg
dec
les
fucom
call
mov
das
mov
jmp
jb
xor
ss
in
gs
aad
xchg
fdivs
lahf
daa
inc
cli
push
xor
xor
das
adc
mov
inc
aas
scas
ljmp
or
xchg
sub
ficomps
imul
push
dec
jmp
decl
divl
sti
aaa
test
add
xor
fimull
call
pop
dec
test
mov
push
inc
mov
incl
loope
jg
mov
push
jecxz
xchg
pop
decb
add
dec
add
loope
inc
add
ljmp
add
aad
cld
ljmp
xlat
mov
bound
ljmp
xor
sbb
cltd
mul
rcl
mov
add
test
and
data16
adcb
cmp
dec
inc
mov
jecxz
dec
testl
iret
les
inc
cs
addr16
mov
ss
outsl
idiv
lcall
cld
mov
test
mov
xchg
inc
loope
jle
pop
loop
jmp
mov
mov
adc
mov
adc
jns
out
js
jae
repnz
fdivrl
ljmp
push
push
xchg
dec
mov
sub
cmp
pop
xchg
jne
jnp
push
jecxz
ljmp
cld
lea
jns
arpl
test
inc
cwtl
int3
push
mov
in
jp
lock
incl
pop
out
xor
cmp
sbb
mov
adc
jg
push
dec
arpl
inc
fiadds
in
adc
outsb
lahf
loop
outsl
ljmp
xor
xchg
or
and
loope
outsl
aam
mov
mov
inc
call
jp
pop
inc
ret
leave
or
ret
xchg
add
and
in
mov
mov
call
ja
or
cs
loopne
adc
add
fisttps
cli
or
mov
adc
lret
ljmp
cld
pushl
insb
mov
cltd
ds
bound
scas
repz
mov
shll
push
cmc
pop
loop
stc
push
mov
or
je
dec
sahf
popf
push
mov
pop
sbb
rorb
int
rorl
add
and
fwait
mov
pushl
xor
stos
or
fisttps
mov
dec
mov
adc
das
cmc
push
mov
jmp
mov
add
gs
mov
popf
inc
mov
mov
nop
xchg
sub
adc
clc
cwtl
push
es
xchg
movsb
call
mov
insb
mov
inc
sbb
test
xchg
mov
xchg
gs
in
aas
pop
pop
fwait
roll
filds
inc
and
pop
mov
ficompl
popa
pop
loopne
decl
out
sbb
pop
mov
je
or
cmc
decl
fnstcw
nop
cmpsb
mov
inc
fwait
xchg
sahf
sbbb
jg
pushl
mov
push
insl
sbb
xchg
dec
sbb
pop
loopne
cmp
fsts
ret
clc
jmp
adc
mov
mov
cmp
fs
enter
movsb
jg
rcrb
jecxz
aad
loope
mov
and
pusha
mov
pop
mov
push
mov
push
mov
pop
cmp
cs
shrb
or
fnstsw
lcall
movsb
bound
add
not
bound
pop
in
movsb
push
cmp
decl
mov
test
into
hlt
sub
dec
in
inc
in
jb
xchg
clc
cmp
pushl
pop
nop
push
shll
mov
xor
push
cltd
into
popa
pop
test
mov
jmp
xor
mov
scas
clc
xor
movb
cltd
out
inc
test
lcall
sarb
test
mov
addr16
lcall
std
jg
ficompl
jne
cmp
lods
outsl
addr16
jl
push
test
fbld
lock
popf
leave
and
cltd
mov
mov
add
mov
dec
lock
lods
jmp
ljmp
sbb
dec
outsl
insb
in
mov
in
les
shr
xchg
mov
test
mov
xor
dec
out
or
jge
xlat
xchg
aam
inc
fistps
push
jb
xchg
adc
gs
popf
test
mov
aam
xchg
and
fidivrs
popf
push
or
xchg
nop
in
das
cld
ljmp
jne
outsb
mov
rol
test
mov
add
push
pop
xchg
into
mov
scas
fnstsw
jg
inc
sbbb
mov
imul
aas
and
add
test
mov
xchg
test
ror
imul
sahf
cmp
lods
decl
std
cmpsb
push
loop
pushf
dec
enter
call
cmp
call
pop
scas
fsubl
dec
inc
jmp
ficompl
cmp
aas
push
mov
jg
and
and
xchg
push
aam
in
cs
mov
xor
pushf
out
mov
mov
inc
fisubl
mov
push
and
hlt
decl
mov
call
mov
sahf
inc
andl
outsl
pop
mov
rcrl
rorl
ss
decl
imul
lods
push
cmp
pop
add
fildll
outsb
xchg
and
add
push
mov
jb
jne,pn
pop
std
pushl
sbb
and
lcall
xor
sub
adcl
sub
mov
loop
int3
loopne
int3
out
nop
loop
incl
lret
rcrb
pop
dec
faddl
mov
test
out
iret
movsb
sar
pop
test
cltd
outsb
cld
ffreep
test
inc
movsl
ret
in
popf
inc
lret
fsubr
mov
dec
popf
decl
fs
lret
loope
pusha
lods
aas
mov
jl
push
jge
jmp
adc
movsl
pop
push
int3
fdivrp
icebp
sub
jb
aas
hlt
and
mov
or
add
ljmp
xchg
lret
push
loope
je
jl
mov
jp
sbb
das
std
jg
aas
inc
fistl
fldl
push
test
pop
cld
call
xchg
imul
or
mov
jnp
push
mov
dec
cltd
dec
or
xor
pop
popf
adc
call
into
dec
ret
rolb
and
and
sbb
iret
in
cmp
popf
mov
in
in
dec
loope
add
jno
and
imul
decl
jg
lods
movsl
or
xor
xchg
lock
and
decl
lahf
push
xchg
xor
sti
dec
inc
or
decl
mov
les
pop
adc
mov
call
out
ja
cmpsl
fdivrl
or
push
cwtl
and
or
or
sbb
mov
sbb
mov
mov
jle
jg
imul
jl
pop
ja
cmp
cld
pop
mov
leave
gs
mov
jne
call
mov
in
cwtl
imul
ds
ljmp
sub
scas
ja
ret
cmp
dec
aam
adc
adc
das
cld
ljmp
not
movsl
xchg
or
bound
dec
jmp
inc
mov
cmp
inc
add
push
mov
mov
adc
mov
add
mov
add
add
outsb
outsb
sti
repnz
insb
gs
popa
jo
imul
jb
outsb
or
std
incl
je
imul
popa
je
xor
adc
arpl
jmp
push
jne
jb
push
popa
insb
push
inc
cmovl
fs
gs
lahf
or
insb
outsl
jae
or
mov
sub
inc
outsl
js
popa
jb
insl
es
push
jmp
into
std
gs
inc
jne
data16
push
adc
push
aas
in
cmp
inc
dec
add
dec
loopne
push
and
add
add
xadd
lar
add
popf
int
int
adc
cmp
jge
mov
pop
push
jo
push
push
push
lock
push
sub
out
cld
je,pn
js
rcll
iret
pop
and
fs
je
addb
dec
shll
push
shrb
sub
add
daa
test
testl
lock
add
jb
sub
fwait
mov
sbb
inc
add
add
add
add
cmpb
jne
pusha
mov
lea
push
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
lea
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
popa
xor
ret
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
