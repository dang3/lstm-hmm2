ljmp
ds
loop
cwtl
shll
arpl
pushf
scas
stos
and
inc
clc
and
add
push
cmpsl
adc
xor
fnsave
clc
pop
jle
ljmp
sbb
fsubl
inc
cmp
inc
pop
pop
mov
cwtl
sub
mov
lret
stos
xorl
push
scas
mov
mov
or
js
cwtl
jecxz
ja
les
imul
jb
mov
out
mov
sub
xchg
jno
and
std
adc
jno
pop
je
scas
xchg
and
xchg
push
dec
dec
pusha
bound
and
or
jbe
mov
movsl
push
push
xchg
add
sub
ss
daa
jns
jl
pop
pop
pop
cmc
xor
icebp
fs
jg
hlt
or
test
out
dec
push
insl
sub
lods
std
ret
sub
adc
test
imul
mov
out
or
daa
and
clc
mov
pop
push
mov
sbb
enter
inc
rclb
push
adc
sub
jecxz
addr16
test
jae
ret
or
fs
cmc
in
nop
jecxz
clc
mov
xchg
loopne
fistpll
loop
test
sbb
rcrl
xchg
and
das
fsubl
mov
xor
push
lahf
cmp
shlb
add
cmc
cmp
and
movsl
call
nop
repnz
dec
dec
mov
insl
push
enter
icebp
sar
out
and
xor
sub
sub
loop
mov
jb
scas
and
pusha
sbb
jo
repz
xor
push
mul
mov
in
lods
lock
je
mov
into
js
das
or
imul
nop
mov
dec
add
popf
es
movsb
push
pushf
mov
pop
jg
out
mov
push
cmp
rolb
sub
loope
test
xlat
into
enter
ljmp
mov
cmc
xor
mov
mov
out
fistpll
cs
in
cmc
or
push
divl
jns
in
inc
ja
lods
popa
hlt
mov
or
mov
inc
xor
ljmp
mov
inc
addl
push
fistpll
dec
jg
push
imul
mov
ljmp
sub
cmc
push
mov
xor
mov
out
add
cmp
xor
leave
cmp
scas
ds
repz
fistpll
aam
bound
jno
imul
or
cmp
mov
mov
sub
pop
sbb
shrb
push
fldcw
and
mov
cmp
outsb
mov
sbb
push
xchg
dec
loop
and
mov
stos
out
cmp
and
xor
push
mov
pop
dec
jb
test
xchg
lret
std
push
push
clc
leave
push
lods
xchg
push
clc
negl
inc
cwtl
mov
pop
pop
mov
push
sbb
enter
inc
xchg
pop
inc
dec
jp
push
lock
and
sti
push
inc
mov
sbb
enter
add
jno,pt
adc
sub
inc
addb
sub
cmpsb
dec
lret
out
iret
and
dec
out
sbb
fisubs
and
mov
xchg
insl
mov
or
shlb
sub
push
adc
mov
mov
xor
or
sub
jno
xchg
andl
mov
add
jno
xor
push
and
mov
mov
aas
push
push
int3
push
lea
inc
fimull
sub
inc
out
sub
pop
sub
int3
lods
mov
dec
mov
iret
fucom
mov
mov
and
sahf
push
and
adc
lea
and
js
mov
add
gs
les
loop
fsts
sbb
push
aad
jge
fcmovnbe
adc
in
fistpl
enter
inc
inc
jle
add
sbb
mov
sbb
add
adc
pop
inc
xchg
and
das
fsubl
sub
aas
jnp
xor
repz
jo
pop
jg
push
push
in
lret
sub
lock
sti
mov
ss
testb
add
mov
xchg
and
xlat
jnp
xchg
adc
mov
jmp
sbbb
iret
sub
jo
das
int3
pop
push
xlat
xor
loop
fs
shll
cmpsl
out
lret
dec
pop
xor
sub
mov
dec
or
xchg
xlat
push
popa
mov
in
add
cmp
push
adc
cmpb
test
or
sbb
jge
lea
mov
mov
adc
pop
or
test
or
mov
idiv
sub
out
jge
pop
test
xchg
add
scas
test
cmpsl
ret
and
lcall
xchg
lea
jae
sub
cltd
sub
jb
mov
lcall
shr
pop
mov
outsb
mov
pop
ficoml
push
add
mov
int3
mov
sub
sbb
arpl
test
jne
mov
mov
cld
int
jecxz
aam
and
lret
inc
gs
daa
les
in
repnz
push
popa
adc
xchg
xor
jnp
xchg
xor
mov
mov
ror
mov
or
dec
out
jl
mov
cli
fisubs
fs
mov
sub
sarb
cmp
cld
nop
leave
mov
orb
sub
sahf
fildll
mov
jbe
push
shrb
outsl
mov
sub
xchg
jae
sub
mov
jne
push
jle
xchg
movsl
test
test
rorl
pusha
bound
lock
sbb
add
mov
mov
movsl
bswap
in
cmp
xorb
xchg
aam
imul
fbld
mov
lods
std
ret
sub
ss
call
xchg
or
and
mov
out
jno,pn
mov
jb
push
pop
lcall
mov
and
xchg
test
sti
push
mov
pop
inc
mov
mov
sbb
and
or
sbb
sarb
std
out
pushf
test
cmp
add
daa
mov
sahf
pop
in
ss
inc
mov
loopne
xor
jbe
sbb
jns
xchg
jp
mov
lahf
cld
push
adc
imul
push
popa
stc
or
push
jl
pop
mov
push
aas
pop
inc
jmp
aad
aad
push
or
jmp
cltd
ds
sub
dec
das
and
jo
sub
push
int
xchg
push
push
sbb
das
and
shl
popa
sbb
mov
jmp
call
mov
xor
addr16
adc
mov
es
push
cmc
dec
faddp
inc
sbb
push
jl
or
sbb
das
xlat
xchg
jne
int
or
push
push
mov
and
data16
jge
pop
cmp
mov
inc
xchg
cmc
hlt
call
fcomps
loop
cmc
mov
adc
bound
and
cwtl
sbb
dec
pop
shll
stc
cmp
cmp
in
iret
mov
fst
jne
out
fisttps
lods
mov
mov
lock
movsb
addr16
out
lahf
shrb
lahf
ret
outsl
filds
sub
sub
in
cmc
or
lods
fcmovnb
lds
jns
xor
mov
mov
xor
fwait
mov
data16
jp
fnstsw
sti
movsb
jnp
jne
cmp
cmc
adc
loopne
xor
dec
mov
movsb
jns
xchg
jp
mov
lahf
cld
lret
sbb
ret
sbb
fidivl
outsb
scas
jl
rolb
scas
psubusb
xor
sub
sub
loop
push
fstpt
pop
nop
aam
xchg
clc
cmp
frstor
in
fdivrl
and
cli
hlt
call
bound
shll
mov
or
ljmp
lret
push
loope
scas
or
inc
cltd
int3
mov
in
dec
movnti
loope
es
cli
std
pop
std
or
daa
push
jbe
hlt
call
mov
mov
sbb
aad
call
pop
or
test
inc
pop
mov
push
sub
in
lea
xchg
sbb
push
jno
pop
je
scas
or
adc
gs
stos
mov
xchg
pop
mov
adc
rorl
je
cs
in
cmc
or
jmp
fnsave
lahf
aam
and
mov
test
mov
push
arpl
lcall
mov
cmpsl
or
int
jb
shl
xchg
aas
out
mov
aad
jne
pop
inc
in
mov
pop
sbb
xor
add
clc
jae
les
aad
xlat
xchg
sbb
adc
lock
fdivr
and
arpl
pushf
scas
stos
and
inc
clc
and
add
push
cmpsl
adc
in
cmp
mov
or
or
pop
jle
ljmp
lret
jns
fsubl
inc
cmp
lret
stos
loope
fnstenv
xchg
mov
lret
stos
xorl
push
scas
mov
mov
lret
push
jl
inc
iret
out
in
pop
xchg
add
push
dec
inc
addb
push
sub
int
and
pop
and
mov
mov
xchg
stc
hlt
call
push
call
popf
mov
xchg
mov
cwtl
xchg
notb
inc
cmpsb
popw
mov
std
popa
je
fistpll
cmc
add
and
mov
lods
std
ret
sub
adc
test
push
fstl
add
test
out
dec
inc
rclb
push
add
add
jnp
invd
mov
jmp
shlb
ror
fcoml
test
mov
jno
dec
inc
sti
push
inc
push
or
loopne
mov
add
inc
add
jle
add
cmp
nop
and
loop
mov
push
adc
pusha
icebp
dec
dec
movb
pop
fnstsw
add
lret
inc
adc
jnp,pt
and
in
mov
sbb
int
and
xlat
jne
popa
adc
xchg
xor
and
addr16
pop
sub
mov
ljmp
jo
cmpsb
xor
daa
jl
faddl
ljmp
sub
mov
leave
inc
addl
sbb
movsl
push
scas
mov
jno
popf
popa
sbb
in
xor
push
adc
jno
ss
mov
lods
bnd
arpl
out
pop
sub
cmc
dec
faddp
inc
insl
or
fwait
cwtl
mov
nop
add
xor
popa
fisttps
inc
fmuls
and
test
sub
fdivl
jns
fnstenv
cmc
cld
divl
xchg
mov
mov
sub
daa
fs
or
jnp
mov
gs
lea
or
cmp
xchg
sbb
out
iret
fucom
mov
mov
push
add
sbb
add
and
fs
mov
shlb
mov
push
xor
mov
jp
fnstsw
dec
lock
adc
stos
mov
cmp
mov
jge
jnp
leave
mov
shl
push
cmp
les
aad
xlat
pop
call
inc
xlat
imul
stos
sbb
cmp
mov
shlb
sti
mov
aaa
xchg
repz
das
add
inc
inc
call
jnp
xchg
jb
pop
stos
add
mov
pop
pop
divl
jns
in
testl
sub
mov
stos
enter
sti
add
into
jno
xorb
scas
add
or
sbb
movsb
mov
lahf
xchg
mov
dec
mov
test
sbb
orb
sub
dec
dec
mov
movsl
in
in
dec
ror
addl
rclb
je
leave
push
pop
test
dec
and
test
sub
fdivl
add
cmp
enter
ljmp
xor
scas
inc
xchg
cmc
gs
divl
cmc
or
dec
stos
lods
pop
xchg
lea
jae
sub
cltd
sub
push
addr16
adc
out
xchg
sti
mov
ret
lods
adcb
or
lret
adc
incb
in
mov
adc
pop
pop
sbb
add
cmp
or
mov
or
cmp
or
and
mov
push
stos
sbb
mov
sbbl
xchg
or
call
shlb
sub
sbb
repnz
ss
aam
xor
sbb
and
cmc
call
lds
pop
nopl
dec
leave
inc
addl
dec
pop
rcll
mov
mov
pop
lds
xchg
incb
adc
push
rolb
jno
push
xor
mov
mov
jnp
bswap
sbb
les
int
adc
mov
clc
cmp
add
sahf
rcl
add
or
sahf
cmp
mov
and
push
movnti
stos
mov
rol
shll
xlat
in
int3
sub
test
cmp
push
xchg
jge
cmp
in
ljmp
sti
sti
call
fs
mov
test
daa
sbb
adc
pop
or
test
jbe
test
sti
sub
out
jge
xchg
mov
jecxz
shufps
data16
mov
or
cld
imul
call
push
nop
pop
js
mov
pop
push
outsl
xchg
mov
cmp
rsqrtps
outsb
repnz
push
or
int
jb
shl
jg
pop
out
mov
and
arpl
mov
jbe
enter
clc
in
testl
in
lock
outsl
or
stos
fs
icebp
shll
and
test
cli
cmc
movsl
lds
pop
mov
ret
lret
loope
sub
sbb
pop
in
and
out
out
mov
mov
stos
in
insl
or
fsubrl
xchg
cmc
sbb
cs
fisubs
add
sub
push
jnp
mov
imul
not
mov
orb
sub
sahf
fildll
in
out
movsl
in
in
dec
std
xorb
jmp
pop
mov
xchg
das
add
jns
decl
lods
xchg
es
xchg
xor
enter
sbb
lahf
outsb
stc
fldcw
inc
jmp
sbb
jp
inc
loope
pmulhw
add
popa
hlt
mov
sbb
cmp
push
out
sbb
inc
add
mov
cmpsl
or
int
jb
shl
cld
cmp
test
and
dec
aad
repnz
rcrb
sahf
outsl
xor
and
fildl
ss
test
mov
out
popa
adc
mov
xchg
push
inc
or
pusha
test
ficomps
imulb
insb
push
stos
sbb
push
cmp
aas
pop
clc
lahf
sbbb
idivl
push
jo
push
jno
fisttpl
dec
ljmp
shlb
pop
lahf
lods
pop
push
addr16
xor
mov
repz
ja
in
int3
inc
jp
dec
out
fxch
data16
out
dec
inc
pop
mov
jno
mov
jns
inc
addl
dec
add
and
stos
mov
add
xchg
test
jnp
lods
mov
or
fsubs
mov
dec
lods
dec
mov
scas
into
js
sub
and
mov
pop
minps
or
xor
aaa
movsl
cmpsb
add
mov
andl
mov
mov
hlt
loop
sbb
jle
cli
dec
sub
jle
xchg
and
xlat
jbe
jg
adcl
dec
je
cwtl
xchg
test
test
cmp
das
test
pop
fdivs
push
dec
xor
inc
jno
mov
rol
jne
adc
sub
cmp
cltd
jbe
cmp
call
push
mov
xchg
loop
daa
movsl
mov
nop
inc
subb
nopl
mov
clc
push
lods
jg
cmp
les
andb
add
pop
out
cmp
loopne
ljmp
mov
out
popa
adc
adc
inc
jmp
jne
mov
sbb
sbb
push
mov
aad
repnz
data16
and
adcl
cli
sbb
jl
pop
lcall
test
push
add
sub
sub
jns
in
orl
jecxz
aaa
cmpsb
xor
xchg
fdivrl
pusha
add
sbb
inc
js
cmp
imul
cmp
cld
les
fsubl
mov
lods
xor
or
pusha
dec
scas
or
pop
dec
mov
mov
pop
cmc
dec
rclb
pop
xor
insb
and
xchg
mov
repz
addr16
mov
xor
and
cmp
scas
stc
repnz
sahf
jbe
xor
jecxz
and
cld
cmp
je
test
pop
cmp
test
mov
sbb
cmp
jg
movsb
mov
pop
mov
xchg
lock
cmc
gs
divl
inc
aam
imul
fistpll
les
inc
movsl
stos
cmp
lock
push
fwait
cld
jbe
adc
nop
and
inc
lock
into
jb
mov
cmp
push
icebp
test
sbb
fcmovnb
lds
jns
mov
sbb
jmp
ret
and
push
adc
or
and
arpl
xchg
cld
pop
add
dec
push
cmp
imul
shlb
pop
cmp
repnz
and
addl
and
enter
mov
orb
mov
mov
inc
add
pop
jnp
ret
mov
sbb
sbb
push
mov
lods
popl
nop
dec
int
test
push
cli
out
fistpll
aaa
xor
mov
add
jno
cmp
jmp
jns
inc
addl
mov
out
fistpll
adc
or
mov
mov
xor
repz
adc
shrb
adc
call
in
aam
insl
iret
inc
rorb
or
jg
addr16
adc
mov
roll
xchg
jo
xor
repnz
fnsave
dec
cmpl
cli
hlt
call
pop
xchg
push
test
xlat
js
iret
into
lret
inc
in
mov
test
jnp
mov
add
pop
cmc
mov
fdivs
lret
xchg
leave
inc
addl
clc
xor
xor
pop
fisubrl
sarl
xlat
jnp
cmc
fwait
sbb
test
push
fsub
xchg
cmc
idiv
sub
out
jge
pop
test
pop
xchg
lock
js
scas
jle
in
and
movsb
mov
lods
std
ret
sub
adc
test
push
fstl
add
test
frstor
push
shr
cs
pop
xor
and
fisttpl
add
shll
rorl
xor
xor
add
jmp
in
jnp
mov
adc
repz
lret
cmpsb
lahf
mov
and
sbb
lock
imulb
insb
push
stos
sbb
mov
xor
lahf
mov
loopne
mov
sbb
cltd
ds
sub
dec
das
and
jo
xorb
rcll
mov
lcall
divl
jns
in
fs
shll
push
inc
xchg
std
das
nop
adcl
orb
cmp
sbb
enter
rclb
ds
and
jg
pop
mov
jb
ret
xor
dec
push
and
inc
or
test
cmp
xlat
xchg
jne
int
dec
js
or
sub
les
push
pop
or
test
or
mov
mov
or
and
adcl
pop
mov
push
or
adc
mov
mov
test
cltd
sub
push
addr16
adc
out
xchg
sti
mov
or
out
in
ret
rclb
push
adc
sub
adc
pop
nopl
mov
clc
push
mov
push
in
dec
sub
ljmp
test
fwait
adc
lds
add
mov
mov
adc
jbe
pop
jbe
xchg
inc
call
addl
in
hlt
in
mov
aam
bound
jno
ret
or
cmp
sbb
enter
out
or
stos
fs
repz
test
push
dec
mov
test
ret
or
bound
ds
lea
nop
xlat
jbe
nop
inc
jecxz
push
jl
fbld
cmp
jmp
loope
push
repnz
call
sub
push
lret
pop
cld
and
or
enter
test
decl
insb
nop
cs
push
stos
xorl
push
scas
mov
xchg
sbb
out
cmc
dec
faddp
inc
push
and
incb
sub
loope
xlat
cwtl
out
shll
sub
inc
test
adc
jmp
sub
pop
or
pop
idivl
adc
push
inc
sti
push
inc
cli
ds
mov
pop
enter
pop
in
mov
ss
mov
enter
lea
push
push
mov
dec
pusha
test
adc
sbb
fidivl
cmp
pop
je
andl
das
mov
stc
sub
xchg
nop
or
xor
movsl
cs
cmp
mov
in
xchg
sbb
movsb
lods
mov
adc
mov
inc
or
pop
jbe
roll
xor
call
int
sub
add
pop
push
in
mov
add
cmp
ljmp
add
cmp
mov
aad
jmp
xchg
stc
out
fistpll
sub
stos
in
insl
or
jns
and
sub
inc
pop
inc
fdivr
xchg
cli
hlt
call
pop
mov
dec
insl
ret
cld
cld
dec
nop
loope
or
clc
les
mov
clc
cmp
insl
adc
mov
hlt
out
mov
fs
push
lahf
xchg
mov
dec
stos
inc
jne
cmp
ret
sar
nop
repnz
dec
cmp
xchg
mov
dec
pop
xchg
xor
push
inc
cmp
and
test
sub
fdivl
jns
fnstenv
cmc
cld
divl
xchg
mov
mov
sub
inc
adc
lods
aas
stc
sbb
jno
jg
hlt
or
jmp
mov
mov
cmpsl
or
cli
jmp
bound
adc
into
pop
dec
push
push
gs
lds
fincstp
ss
test
cmp
add
push
mov
out
inc
pop
xor
jle
add
cmp
in
lock
outsl
or
or
xlat
push
shll
movsb
scas
inc
and
imul
mov
ret
lret
loop
mov
aam
xor
cmp
dec
testl
test
xor
and
roll
in
and
movsl
sbb
pusha
xor
push
mull
mov
dec
mov
out
push
repnz
jle
push
roll
enter
loope
xlat
add
shrl
sub
jecxz
cmp
jnp
fdivrs
sahf
movsb
fs
add
in
aad
lcall
lock
push
pop
test
pop
nop
fs
push
imul
push
ljmp
inc
int
movsl
push
mov
sbb
cwtl
lret
pop
or
jg
push
imul
or
stos
or
and
adc
cmc
xchg
xchg
cmp
sarl
inc
jle
add
cmp
nop
and
mov
jae
les
aad
xlat
xchg
sbb
jno
push
mov
push
cmp
and
mov
and
dec
mov
push
mov
dec
nop
sbb
pop
das
repnz
and
adc
outsl
sbb
ljmp
ret
fs
shll
cmpsl
out
xchg
push
inc
pop
hlt
sub
mov
dec
or
xchg
icebp
inc
iret
out
in
pop
xchg
add
andb
or
push
mov
enter
xchg
add
cmp
mov
cmp
pop
cmp
test
lods
xchg
es
orb
mov
mov
imul
out
jnp
stc
jg
stos
jp
push
mov
push
std
ret
sub
adc
test
push
fstl
add
test
fstl
addb
xchg
fwait
or
in
cmpsl
mov
push
sbb
stos
mov
adc
mov
add
pop
outsl
lods
or
push
jle
int3
pop
inc
ljmp
push
call
xchg
enter
mov
adc
add
addr16
clc
jp
test
sahf
add
nopl
stc
in
nop
fisttps
lret
mov
shrb
jecxz
mov
xor
jns
lcall
jbe
leave
stc
adc
xor
or
repz
out
fnsave
lock
lds
sbb
imul
std
repz
lods
mov
xor
ret
xor
pop
push
lahf
lret
loop
push
int
mov
push
addb
sbbl
ror
dec
addl
cmpsb
movsl
int3
jmp
adc
call
ret
test
jo
in
test
ss
dec
or
out
mov
les
lods
scas
push
lock
out
jno
jg
hlt
or
jmp
es
jmp
pusha
stc
adc
mov
sbb
or
pop
xor
push
mov
stc
sub
mov
mov
aas
ret
adc
adc
sbb
clc
cmp
cmc
adc
call
mov
mov
in
and
inc
mov
test
movl
scas
icebp
and
shr
push
inc
push
mov
and
lock
sub
out
enter
dec
in
sti
mov
ss
testb
out
subl
add
xchg
xor
jns
lcall
pop
nop
icebp
or
scas
out
xchg
addr16
dec
or
call
xchg
fwait
adc
in
in
inc
sbb
fistpll
int
and
sbb
mov
testb
fdivrs
dec
mov
ficoml
lock
mov
std
pop
push
mov
bound
ss
xchg
imul
jnp
out
pop
inc
inc
sbb
sbb
bound
nop
and
push
addb
sbbl
mov
pop
pop
in
add
outsb
pop
sarb
sub
cli
fst
ss
cli
hlt
stc
cmpsb
xlat
movsb
int
adc
push
push
add
sub
push
outsl
mov
pop
outsl
dec
pop
fdivrl
cld
cmp
popl
add
jp
inc
loope
xor
mov
mov
test
mov
mov
xchg
cld
daa
sbb
negl
cmp
cltd
jbe
sub
mov
push
jg
adc
sbb
adc
sbb
cmp
arpl
mov
adc
orl
xchg
mov
sbb
pop
inc
mov
and
mov
divl
and
sbb
icebp
out
mov
add
cmp
ficoml
dec
push
and
addl
jnp
adc
stos
push
loope
add
inc
mov
rcll
stos
sbb
jnp
scas
jge
fldl
cmp
ret
sub
ja
jmp
mov
pop
outsl
push
ss
sub
adc
scas
int3
pop
push
xor
jmp
pop
aas
mov
pop
pop
ljmp
mov
push
and
popa
jo
cmp
inc
adc
out
cld
icebp
inc
iret
out
out
push
subb
jno
fstl
cwtl
lcall
repnz
adc
stos
test
sub
pop
sub
fdivl
jns
fnstenv
cmc
cld
divl
xchg
mov
mov
sub
daa
adc
sbb
dec
jg
hlt
or
jmp
mov
mov
cmpsl
push
pusha
dec
add
cmc
adc
mov
out
xchg
sti
mov
ret
lods
adcb
or
and
arpl
xchg
cld
jno
dec
addr16
mov
mov
lods
pop
inc
mov
insl
and
jns
jmp
frstor
inc
adcl
jmp
mov
stos
and
in
pop
icebp
shll
and
sub
ljmp
sub
pop
inc
loop
es
adc
xor
dec
lcall
sahf
add
mov
ljmp
cmp
xor
cli
dec
imul
dec
je
out
xchg
sbb
les
push
ror
mov
or
dec
out
dec
inc
push
repz
ret
add
fcoms
ss
mov
lods
lock
je
mov
test
rorb
push
inc
add
ljmp
aaa
mov
stc
lret
mov
mov
sub
xchg
jae
sub
mov
ds
int3
xchg
test
push
push
movntq
out
and
call
pop
repnz
cld
fcoml
add
add
push
fs
jecxz
mov
mov
cmpsl
adc
jbe
add
mov
add
or
mov
and
xor
fcom
sbb
je
bnd
mov
push
dec
cmp
nop
and
xchg
pop
adc
loop
mov
push
adc
imul
push
push
cmp
jp
test
inc
adc
push
pop
xchg
iret
lock
cli
add
pop
push
jnp
cmp
mov
loop
and
mov
addl
pop
dec
push
mov
adc
cmp
pop
rsm
xchg
cltd
out
test
push
or
inc
repz
xor
repz
rcrb
idivl
shlb
and
mov
push
out
xchg
push
std
cli
add
push
pop
es
gs
cmp
xlat
inc
xor
xchg
iret
stos
sbb
shr
xchg
out
fistpll
inc
jo
dec
push
mov
out
cmp
repnz
mov
push
cmp
sbb
mov
xchg
sbb
repnz
add
mov
or
jge
iret
sub
inc
addb
pop
test
sub
jnp
inc
sti
push
inc
mov
call
push
cmpsb
lret
cmp
bound
and
fstps
cmp
lret
inc
addb
dec
dec
lods
lock
je
mov
test
jmp
repnz
fistpll
adc
inc
fcompl
pop
xchg
sub
and
adc
push
xlat
mov
sub
dec
and
test
sbb
enter
pop
push
and
xor
fistpll
inc
cli
lret
test
add
xchg
and
sbb
mov
adc
push
pop
repnz
out
gs
sbb
fimull
pop
mov
hlt
fsubrl
stc
push
mov
jno
ja
push
sub
adc
inc
sti
push
inc
arpl
fisttpl
into
mov
cmc
sbb
stos
in
imulb
sbb
sbb
inc
add
mov
add
in
lds
mov
dec
dec
addb
or
and
arpl
xchg
cld
jno
lret
sbb
cld
out
fistpll
sbb
add
push
xchg
je
and
div
cmp
pop
shrl
push
mov
nop
cli
in
nop
daa
je
shll
movsl
outsl
daa
adc
call
adc
sbb
sub
add
stos
pop
fwait
pushf
arpl
orl
shrl
clc
pop
jle
jmp
pop
push
mov
pop
bound
sub
mov
inc
ret
and
hlt
out
mov
fs
in
and
bnd
arpl
out
pop
sub
inc
mulb
mov
dec
lret
mov
jae
dec
pop
xchg
xor
push
inc
fadds
mov
into
ficoms
test
mov
test
push
dec
mov
sti
sub
out
jge
pop
test
pop
xchg
lock
and
cmp
pop
mov
push
or
cmp
xchg
sbb
jns
test
movsb
xlat
push
cltd
sub
push
addr16
call
loop
shlb
jno
sahf
mov
jno
mov
push
xor
mov
shl
mov
ret
in
fstpl
fwait
sbb
xchg
adc
loop
push
jns
ljmp
imul
addr16
clc
jp
pop
jmp
jb
add
sbb
jno
icebp
loop
cwtl
shll
outsl
adc
dec
push
in
mov
push
dec
mov
push
dec
mov
sbb
enter
xchg
cmp
xor
xchg
repnz
hlt
call
add
repnz
and
movsb
xor
je
mov
mov
mov
push
xor
movsb
inc
addb
xlat
in
pop
pusha
sub
mov
lods
xchg
imul
pop
test
pop
jp
mov
hlt
je
push
xchg
cmp
pop
jecxz
cmp
sbb
lret
mov
lcall
sbb
stc
lods
pop
mov
lcall
jo
test
insb
xlat
into
enter
ljmp
add
mov
jae
out
andb
push
sub
inc
in
pop
pop
andl
jno
push
inc
and
fisttpl
dec
adc
pushf
daa
mov
cli
xor
stos
iret
call
sub
mov
jns
push
out
cmp
insl
adc
clc
stos
adc
or
and
arpl
xchg
cld
jno
push
xor
out
sbb
add
jmp
in
jnp
mov
adc
cli
dec
aaa
pusha
outsl
jns
inc
addl
mov
adc
mov
cli
hlt
xchg
cmp
cli
sub
and
gs
insb
out
ljmp
hlt
addr16
mov
sub
dec
movsl
stos
in
roll
and
xchg
cmp
add
cmp
push
fs
imul
repnz
and
movsb
xor
sub
cmp
cmpsl
cs
lods
inc
or
sahf
push
rolb
and
les
inc
inc
imul
xor
scas
sbb
das
push
xor
mov
mov
or
call
jecxz
cmp
push
loope
xchg
adc
pop
cmp
adc
adc
jle
stos
outsl
pop
and
mov
fidivl
push
aam
dec
fisttps
push
fdivrs
inc
fisttpl
outsl
dec
pop
fdivrl
les
inc
movsl
stos
cmp
lock
dec
xor
ret
mov
mov
mov
inc
lods
sahf
adc
or
jg
das
rsqrtps
les
loop
xchg
or
and
clc
popa
mov
pop
sarl
das
jle
add
cmp
nop
and
loopne
mov
push
adc
pusha
icebp
out
mov
shll
icebp
loop
cwtl
shll
rcrl
lock
xor
out
sub
pop
or
push
pop
xchg
rclb
cmpsl
adc
add
js
fistpll
jl
jbe
leave
arpl
push
jo
sub
sub
loope
negb
and
sbb
mov
xchg
test
fdivrs
test
pop
jp
mov
hlt
je
push
sti
outsl
test
dec
test
shll
subb
mov
ret
push
xchg
push
dec
cmp
lods
mov
mov
jg
call
adc
xlat
cmp
sub
sbb
in
jae
sub
mov
ds
int3
xchg
test
push
push
test
iret
insb
in
bound
and
push
push
fcoml
imul
mov
clc
lahf
push
popa
notb
lds
gs
scas
adc
mov
xor
xchg
loop
pop
pop
jbe
bnd
xchg
jns
inc
addl
dec
sarb
adc
pop
nop
imul
pop
lret
jmp
xchg
xor
cmp
jle
add
icebp
loop
cwtl
and
leave
cmp
scas
stos
insb
repz
jns
hlt
call
jno
imul
mov
stos
out
or
loop
stos
sahf
cmp
out
adc
pusha
icebp
out
mov
shll
in
test
pop
cmp
test
out
mov
mov
ret
sub
in
cmc
mov
sbb
sub
mov
fistpll
rcrb
push
test
aad
repnz
sbb
pop
lock
ror
mov
or
inc
icebp
jno
stc
jp
shlb
pop
push
xchg
mov
pop
adc
add
push
push
imul
mov
shlb
cmpsb
fwait
ror
cmp
cld
sbb
jmp
stc
call
cld
icebp
inc
iret
out
out
push
subb
mov
pop
nop
dec
loope
pop
rcr
leave
add
adc
xor
movsbl
sbb
mov
pop
cmp
xchg
sub
popa
int3
stc
cmpsb
xlat
movsb
int
call
aaa
popf
cwtl
int
stos
sub
and
js
push
and
rorl
mov
and
sbb
push
loope
outsl
pushf
push
in
and
xchg
aas
mov
or
or
cmp
mov
out
dec
lds
push
repz
mov
mov
frstor
xchg
mov
push
push
add
mov
adc
xor
test
jnp
add
inc
sbb
mov
add
pop
dec
add
stos
add
mov
ja
nop
inc
and
imul
jo
in
sahf
jecxz
add
xchg
pop
fnstsw
adc
es
and
adcl
ja
adc
test
call
inc
lds
add
lret
jb
fcomp
xchg
fwait
adc
in
in
inc
ljmp
sbb
mov
push
stos
jl
xchg
add
mov
jmp
mov
mov
xchg
jg
addr16
adc
mov
roll
jl
idivl
jns
in
push
fnstcw
out
mov
pop
and
cmp
pop
sbb
xchg
sub
pop
and
mov
fdivs
jl
jb
mov
test
insb
xlat
into
enter
ljmp
push
lcall
add
mov
xor
or
ljmp
movsl
mov
test
dec
sar
xchg
aas
mov
or
or
cmp
mov
out
dec
lds
push
repz
mov
mov
fstpl
ret
add
xor
jp
adc
enter
repz
pop
ljmp
inc
sbb
sarl
cmpsl
je
shll
mov
mov
xor
pop
cmovns
mov
mov
sbb
or
cmp
movsb
mov
inc
popa
mov
dec
push
xchg
jp
push
sbb
cli
jg
nop
pop
sbb
pop
push
push
pop
inc
mov
nop
stos
mov
lcall
inc
insl
adc
and
shlb
add
cmc
xor
ja
ret
js
out
add
divl
jnp
out
dec
orl
shrl
clc
pop
jle
push
ljmp
arpl
test
jp
les
jge
hlt
add
or
pop
ljmp
fisubs
fadd
inc
inc
testl
cli
add
pop
pop
jl
std
pop
pop
test
xlat
push
sub
inc
jnp
xchg
imul
pop
test
pop
jp
mov
hlt
je
push
xchg
cmp
pop
jecxz
cmp
sbb
lret
mov
lods
pusha
imul
pop
mov
cmpsb
leave
cltd
mov
rol
popa
mov
cmp
jcxz
mov
xchg
push
ljmp
mov
add
xor
jno
icebp
mov
enter
pop
mov
sbb
mov
aad
in
jns
xchg
sbb
xchg
shll
mov
xchg
or
cltd
imul
sti
cmp
cltd
jbe
cmp
mov
adc
in
gs
lret
sub
sub
sbb
pop
sahf
outsl
xor
icebp
testl
pop
pop
mov
cmpsb
jge
xchg
sbb
inc
and
sbb
pusha
dec
add
das
mov
nop
dec
iret
in
sti
mov
aaa
xchg
repz
das
add
jb
add
jno
adc
sub
jo
das
call
inc
sbb
xchg
outsl
pop
jecxz
jnp
xor
call
mov
and
mov
xchg
leave
dec
addl
shll
mov
orb
sub
test
nopl
out
push
cmpb
out
cmp
push
jbe
and
and
rep
loope
clc
jge
mov
fiaddl
ljmp
dec
sbb
leave
test
jmp
repnz
aad
sbb
sub
fdivl
pop
dec
test
in
fisttps
hlt
adc
and
add
lea
push
shlb
or
inc
fistpll
xor
lods
movsl
sbb
imul
hlt
in
nop
dec
shll
pop
repz
xchg
rorl
fdivs
push
inc
and
fisttpl
dec
lret
mov
out
or
daa
and
clc
mov
aaa
xor
fnstcw
sbb
ret
adc
cltd
test
fsin
lahf
insl
ss
inc
out
in
and
insl
or
into
cltd
mov
jecxz
mov
push
pop
sti
push
inc
aam
daa
sbb
jnp
push
mov
nop
and
lods
xor
pop
sub
lcall
add
in
out
ljmp
cld
pop
outsl
imul
push
fwait
loopne
outsb
dec
pop
cmp
fstl
cmp
outsl
pop
jecxz
jnp
xor
pop
hlt
sub
mov
dec
and
es
cli
std
pop
std
or
xor
aaa
inc
sub
add
add
mov
imul
shll
sub
inc
test
aam
push
and
mov
inc
dec
cwtl
push
divb
dec
or
mov
pop
inc
fisttpl
outsl
dec
pop
fdivrl
les
inc
movsl
stos
cmp
lock
xor
cmp
jb
dec
andl
sar
xchg
aas
mov
dec
mov
mov
pop
je
andl
adcb
add
add
frstor
xchg
cmp
inc
inc
jp
adc
adc
enter
xchg
adc
cmc
adc
adc
push
mov
int3
lahf
fldcw
push
mov
mov
xor
pop
sub
lcall
push
cli
repnz
testb
sub
push
lret
pop
cld
and
or
enter
test
decl
insb
nop
and
lcall
out
cmp
cltd
int3
int3
dec
xlat
jl
sbb
shl
sub
in
rolb
jne
roll
enter
loope
xlat
add
mov
dec
add
pop
call
fidivl
push
aam
pop
insb
stos
mov
popf
js
mov
xchg
and
call
lahf
mov
cli
hlt
ljmp
pop
pop
aaa
imul
das
ds
mov
out
ffreep
js
jg
push
xchg
xchg
mov
cmp
lcall
pop
stos
jp
push
or
sarb
and
les
hlt
mov
imul
and
or
mov
imul
mov
or
andl
ret
inc
pop
push
in
xor
sbb
mov
pop
lret
sub
sub
inc
or
movsb
mov
or
push
and
ret
out
insb
jecxz
cmp
add
jnp
fsubl
sub
jbe
in
add
ss
cli
hlt
mov
add
fstps
cld
lret
sbb
shll
mov
lock
call
jns
repz
pop
lds
jmp
mov
jp
pop
and
xchg
and
xchg
cmp
cmp
in
cltd
xchg
push
lds
push
cmp
or
sar
scas
sbb
das
push
xor
mov
outsl
jmp
or
cmpsl
fistps
mov
mov
lods
imul
dec
mov
or
xor
mov
in
mov
cmp
sar
dec
sbb
leave
adc
xor
lahf
jl
lcall
je
lret
push
call
nop
fisubrs
fldcw
inc
jmp
sbb
in
inc
loope
movntq
add
popa
hlt
mov
or
mov
jb
movsb
cmp
out
inc
xlat
push
int
popf
cli
jnp
push
xor
test
out
xchg
inc
adc
sub
out
shll
cmp
mov
mov
inc
xchg
repnz
outsl
or
out
cmp
repnz
jmp
shll
xchg
pop
mov
sbb
xchg
push
sub
add
roll
adc
filds
and
add
jo
shlb
rol
leave
adc
cmpsl
leave
add
sub
add
sti
push
inc
push
mov
jge
mov
leave
mov
or
arpl
negb
js
mov
mov
or
movsl
jne
shlb
test
pop
xchg
cmc
fnsave
clc
push
out
cmp
pop
push
lret
pop
cld
and
mov
jl
xchg
out
pushf
xchg
outsl
pop
jecxz
jnp
xor
jmp
mov
pop
lock
xlat
push
dec
mov
out
push
repnz
dec
mov
es
inc
mov
xchg
xchg
sub
aam
mov
sub
iret
xor
movsb
mov
loopne
aad
lcall
add
scas
dec
dec
pusha
bound
and
cwtl
sbb
dec
pop
shll
stc
jle
scas
jb
movsb
mov
mov
mov
mov
cmpsl
adc
jbe
jl
pushf
dec
dec
inc
addl
ja
fs
aam
pop
test
sbb
sbb
cwtl
mov
call
xor
and
fisttpl
add
shll
cld
repz
xor
bound
icebp
imul
adc
repz
lret
cmpsb
lahf
mov
cs
cmp
cmp
or
cmc
lock
ljmp
jge
fldl
cmp
adc
mov
cli
int
jl
out
or
cmp
jg
movb
push
cmc
int3
xor
xor
cmpsb
push
stos
mov
pop
inc
aad
repnz
stos
rol
lcall
popf
std
jle
mov
enter
sbb
shr
and
xchg
push
sbb
pop
int3
inc
jp
dec
out
fxch
data16
cmp
mov
and
push
sub
fimull
imul
sub
ja
adc
adc
sbb
repnz
mov
je
and
in
jno
add
xchg
mov
out
mov
sub
xchg
jno
and
lcall
dec
push
pop
jno,pn
repnz
mov
sub
divl
jns
in
out
or
push
push
pop
repnz
push
xor
add
adc
mov
scas
pop
in
or
add
or
sub
rep
std
ret
sub
es
enter
pop
pop
addr16
mov
ss
push
dec
movsl
lret
in
out
or
cmp
xchg
bound
test
sub
or
sbb
pop
add
ret
adc
adc
sbb
push
add
mov
int3
mov
sub
sbb
arpl
test
in
inc
push
jp
mov
aad
mov
lret
inc
pop
pop
inc
push
mov
sub
lea
xor
cli
dec
imul
dec
je
out
mov
inc
mov
lret
mov
or
dec
out
jl
shr
or
sbb
fisubs
fs
ja
in
out
mov
stos
xchg
mov
lods
repnz
mov
lds
aam
mov
rclb
push
cmp
xchg
inc
pushf
insl
rolb
inc
mov
or
addr16
cld
push
loope
xchg
dec
mov
pop
pop
jmp
ret
sub
jmp
jle
pop
movsb
stc
lods
pop
mov
lea
mov
test
das
mov
mov
pop
jne
cmp
jg
jne
jecxz
ljmp
mov
sbb
push
ljmp
mov
add
stc
je
cs
in
rorl
cmp
xchg
jecxz
jns
mov
dec
push
fimull
jg
cli
subl
je
aam
jo
add
iret
jp
movsb
or
and
rcll
cmp
repnz
imul
add
fistpll
add
ret
adc
xor
rol
addr16
jle
int3
pop
inc
ljmp
sbbl
push
cmp
orb
sub
repnz
stos
arpl
sbb
add
nop
dec
int
repz
out
pop
out
jns
jmp
cltd
ds
sub
dec
das
and
xchg
repnz
stos
mov
push
xor
mov
addr16
rcl
dec
push
shlb
sub
push
adc
mov
es
push
call
mov
xchg
or
sbb
fistpll
push
jb
pop
xor
push
push
push
shlb
out
jnp
scas
push
pop
in
ss
sar
dec
sbb
leave
daa
cmpsb
lret
lock
decl
lods
xchg
es
xchg
xor
enter
sbb
lahf
outsb
stc
push
stos
popf
loopne
bound
stos
jp
inc
loope
xor
sub
sbb
mov
sbb
mov
dec
mov
pusha
cwtl
pop
cmp
dec
push
and
xor
inc
rclb
push
adc
inc
xor
xchg
xchg
cmp
sub
bnd
mov
push
dec
cmp
inc
inc
ja
push
ret
cmp
dec
gs
stc
jne
mov
sub
pop
or
call
fmull
inc
mov
aad
mov
lret
inc
pop
lds
mov
int3
adcl
inc
daa
in
xor
fimull
les
test
les
push
ror
mov
or
dec
and
frstor
in
adc
push
jmp
xchg
mov
jle
or
call
sub
sbb
mov
inc
push
fcomp
scas
or
sar
jl
ret
cli
inc
inc
aad
repnz
bswap
cmc
lret
mov
xor
add
lea
mov
pop
mov
sub
xchg
jno
and
nop
and
or
movsl
int3
jmp
test
addb
push
xor
add
jns
push
mov
inc
cmp
or
sbbl
push
cmp
test
jo
add
push
cmp
in
xchg
ljmp
call
inc
aad
repnz
divl
loopne
xlat
and
mov
sbb
mov
push
pop
js
je
gs
icebp
rolb
jg
mov
pop
arpl
dec
addb
dec
sar
xchg
cmp
mov
cmp
daa
and
clc
imul
or
push
cmp
cwtl
mov
and
addr16
jge
fsubrl
jae
inc
jbe
and
sti
xchg
sub
mov
loopne
hlt
inc
xchg
stc
hlt
call
pop
push
out
pop
push
cmp
orb
sub
adc
push
dec
xchg
lret
sbb
jbe
mov
nop
loop
enter
add
xchg
aam
jl
adc
and
addb
xchg
xor
and
mov
out
add
mov
aas
je
inc
fistpll
adc
add
lea
cld
testb
xchg
jns
pop
push
je
sub
mov
push
push
fwait
loopne
outsb
cmp
sbb
cmc
xor
jnp
mov
cmc
cmp
scas
outsb
sbb
std
and
add
mov
fnstenv
pushf
and
and
call
pop
jp
mov
hlt
je
mov
add
test
cmpsl
or
fildll
popf
cmpsl
das
cli
xchg
cli
out
fistpll
loope
xlat
add
mov
sbbb
enter
push
pop
pop
mov
cmpsl
rol
sub
jne
xor
jge
mov
divl
jns
in
cmp
jmp
aas
push
add
mov
cmp
mov
sbb
bswap
divl
pop
inc
nop
repz
stos
mov
stos
jg
cmp
or
cmp
sbb
lahf
aam
and
mov
add
add
jnp
in
shlb
outsl
mov
add
loopne
nop
and
xchg
loopne
pop
xchg
loope
stc
jbe
xorl
jbe
movsl
push
lds
and
pop
push
adc
inc
lods
push
xlat
mov
fwait
mov
data16
test
sbb
je
in
stos
mov
add
nopl
dec
in
fsts
cli
hlt
call
cmp
mov
cmp
push
dec
add
ljmp
scas
push
adc
push
mov
int3
lahf
fldcw
lods
cmpb
hlt
addr16
mov
inc
addb
lret
in
es
arpl
push
push
cmc
cmp
jl
sbb
cmpsb
out
imul
fucomi
iret
dec
nop
sbb
mov
xchg
xor
xor
adc
call
jecxz
aaa
cmpsb
xor
and
roll
sub
mov
xchg
repnz
fistpll
mov
xchg
sbb
mov
arpl
sbb
mov
xchg
stos
mov
outsb
jmp
popa
jo
cmp
inc
adc
out
cld
icebp
inc
iret
out
out
push
subb
jno
xchg
andl
mov
out
adc
loope
xchg
mov
out
jle
sub
andb
mov
mov
xchg
fdivs
push
dec
xor
inc
jno
mov
jns
loope
inc
jae
cmc
adc
add
into
pop
stos
ja
push
gs
lds
fincstp
ss
test
sbb
aad
mov
jecxz
clc
mov
inc
sbb
xchg
jmp
lock
outsl
or
stos
loope
sub
loopne
nop
and
xchg
pop
mov
insl
and
push
fdivrs
jo
pop
jg
sub
out
cmp
repnz
loop
cwtl
shll
arpl
pushf
scas
stos
ds
jg
stos
stos
fidivrs
mov
add
std
fwait
rcrl
xchg
into
addr16
xlat
mov
cld
or
sbb
push
stos
mov
arpl
push
lock
dec
sarl
nop
loope
jb
push
push
xchg
idivb
or
sti
insl
xor
jg
push
popa
mov
jne
and
or
mov
jle
mov
xor
mov
xchg
mov
fstps
mov
push
xchg
cmp
rol
sub
leave
aas
adc
mov
rolb
sbb
xchg
outsl
pop
jecxz
jnp
xor
pop
hlt
sub
mov
jle
cmp
es
cmp
push
loope
xchg
push
sbb
sbb
bound
mov
leave
cltd
mov
jecxz
mov
dec
jmp
dec
adc
and
dec
addl
xor
notb
test
add
vmwrite
les
dec
sub
pop
stos
mov
nopl
mov
dec
push
xchg
xlat
inc
cs
divl
jns
in
and
out
into
mov
cmc
sbb
stos
cmp
or
call
mov
xchg
rol
daa
out
add
mov
mov
nop
scas
adc
xchg
adc
rclb
push
adc
inc
dec
jmp
test
pop
pand
xor
scas
hlt
dec
xchg
notl
iret
add
xor
jp
adc
mov
gs
popf
daa
test
add
loopne
popl
and
mov
repz
mov
sbb
cmpsb
lahf
mov
or
push
cmp
jns
hlt
call
push
mov
out
cmp
repnz
stos
sbb
cmp
insl
mov
xlat
and
push
enter
inc
aad
repnz
adc
mov
repz
fistpll
sub
addb
pop
ss
jecxz
pop
outsb
xor
stos
pop
xchg
loope
out
lods
mov
aam
mov
lcall
add
lret
enter
adc
push
rolb
sub
inc
int3
mov
or
sbb
ret
aad
mov
ret
js
das
or
imul
nop
mov
dec
add
jnp
fdivrs
sahf
xchg
das
sub
sub
fdivs
negl
push
out
jmp
mov
jns
xchg
ljmp
push
shlb
sbb
ja
jbe
sti
push
inc
mov
cmp
pop
mov
pop
dec
movzbl
inc
pop
mov
repz
bound
shll
mov
je
jl
out
ljmp
scas
call
push
pop
mov
cmp
loope
test
push
pop
inc
pop
stos
ja
dec
push
outsl
adc
lcall
inc
insl
adc
call
out
xor
push
mov
push
aad
repnz
lret
fcoms
fidivrl
jnp
out
ss
cli
hlt
in
jae
mov
sub
lret
push
mov
out
enter
inc
jle
or
xor
fildl
bound
inc
addb
int
inc
lea
jae
leave
nop
and
xchg
nopl
mov
repnz
imul
nop
sti
in
nop
test
movl
sbb
xchg
lret
sbb
jbe
imul
in
nop
lock
sti
mov
mov
jmp
mov
rorl
pop
out
cmp
repnz
xchg
jns
inc
addl
clc
not
mov
das
push
inc
aas
cltd
call
mov
mov
aas
pop
out
cmp
adc
outsl
sbb
jmp
xlat
ja
fisubs
fadd
inc
inc
negl
popf
jge
bound
push
enter
into
sbb
jmp
pop
adc
pop
pop
sbbb
lahf
cmp
out
icebp
divb
and
mov
pop
pop
lea
mov
mov
xor
sub
push
stos
adc
pop
in
test
sub
in
dec
std
xorb
fistps
call
push
repnz
adc
loope
xchg
mov
out
call
xchg
lods
xchg
es
movsb
xchg
out
icebp
das
jg
cmp
dec
inc
jno
dec
sbb
enter
test
addr16
sbb
push
insl
mov
shlb
pop
cmpsl
ret
xchg
ret
mov
push
inc
and
sbb
cmp
adc
and
adc
out
xchg
mov
lret
fcoms
fsubr
imul
lock
addr16
jl
sarl
jl
dec
sti
movsb
jnp
jne
cmp
cmc
lret
jmp
pushf
into
mov
cli
sub
and
inc
push
push
sub
add
cmc
call
bound
pop
pmaddwd
mov
and
xchg
cmp
xor
dec
testl
test
xor
and
roll
sbb
divb
mov
jnp
shll
int3
cmp
insl
cs
mov
mov
lods
xor
or
xor
mov
in
mov
cmp
sar
dec
sbb
leave
daa
jge
pop
mov
push
cmp
ja
clc
cmp
sub
xchg
movsl
fsubr
test
movsb
pop
add
inc
jl
outsl
mov
mov
test
bound
mov
popa
hlt
mov
add
call
xchg
cmc
imul
lret
in
lret
shlb
stos
loop
mov
das
in
jl
sarb
mov
push
iret
int3
jne
cmp
cltd
or
xchg
jge
inc
nop
and
and
xchg
mov
xor
cmp
shlb
cld
lret
sbb
shll
hlt
in
ret
into
shl
xchg
or
push
push
icebp
sbb
jbe
aam
xor
push
pop
sbb
pop
lock
ror
mov
or
inc
icebp
jno
lahf
into
add
push
xchg
insb
jle
cmpsl
mov
inc
ds
shl
lds
inc
pop
sti
xor
test
test
cmpsl
fistps
dec
mov
addb
cmovp
mov
cs
adc
pop
in
mov
pop
movsb
jns
adc
andb
adcl
xor
push
inc
fadds
inc
inc
ljmp
test
int3
mov
adc
mov
popa
jo
jge
mov
cmp
dec
cmp
mov
pop
cmp
or
push
cmp
scas
or
adc
dec
insb
add
divl
jns
in
xchg
jp
jmp
or
outsl
inc
daa
xchg
mov
add
add
mov
mov
ret
in
lea
mov
fbld
mov
iret
push
idivl
jns
in
push
mov
pop
jbe
call
jb
hlt
call
pop
cmp
pop
je
andl
mov
xchg
cs
cmc
xor
xor
aad
sub
ljmp
xor
leave
cmp
jbe
movb
call
dec
bound
jno
imul
iret
cmp
inc
addl
dec
stos
cmp
dec
popf
iret
dec
dec
addb
clc
ret
or
bound
ds
lea
nop
xlat
dec
insb
ret
push
aas
xchg
icebp
jno
fisttpl
es
cmp
out
inc
lret
dec
cmpl
icebp
or
scas
call
push
lods
rclb
mov
mov
xchg
pop
repz
addr16
xor
lock
gs
stos
push
xor
jns
mov
ds
ss
cwtl
inc
inc
inc
cmc
push
push
test
xlat
jno
xchg
sub
sbb
push
cmpsb
andb
push
xchg
mov
aaa
negl
lea
jmp
inc
mov
movsl
xchg
add
mov
cmp
cmp
xchg
out
cmp
dec
adc
jnp
das
jo
imul
movsb
mov
aas
aas
stc
lcall
aam
imul
fcomip
call
aaa
fs
add
imull
repnz
shrb
jg
push
xchg
push
cli
rorl
jne
sub
cld
ljmp
mov
xchg
jae
xlat
adc
push
lahf
jecxz
mov
hlt
call
mov
test
cltd
arpl
mov
jo
adc
out
xchg
sbb
shr
pop
mov
in
ret
rclb
push
adc
inc
aaa
incb
xlat
jp
fnstsw
dec
lock
mov
lods
pop
inc
dec
xchg
xchg
add
xlat
push
sbb
stos
mov
dec
sbb
es
or
pop
sbb
push
mov
icebp
sti
popa
xor
pop
iret
mov
pop
fwait
sub
jge
pusha
aad
and
shlb
leave
repz
mov
add
ficoml
call
mov
mov
dec
aad
repnz
push
aam
or
add
inc
jns
mov
call
jmp
jg
test
pop
jg
xchg
jno
sbb
ljmp
jg
xchg
stos
adc
call
mov
std
pop
lods
or
sub
mov
and
inc
push
and
incb
sub
loope
and
shlb
xor
in
mov
in
cmpsl
inc
stos
push
dec
add
push
jb
sbb
mov
jp
jmp
leave
outsl
dec
pop
fdivrl
les
inc
movsl
stos
cmp
lock
dec
xor
inc
int
movsl
cmp
outsb
cwtl
jp
cmpsl
push
fnstcw
xor
fisubrs
lret
xchg
fcmovnbe
jnp
sbb
sbb
stos
test
xor
mov
fistpll
shlb
or
and
arpl
inc
addl
push
test
ds
les
add
cmp
leave
mov
insb
and
out
fistpll
xchg
jae
xchg
popa
mov
jne
imul
pop
adc
jp
cmp
inc
loop
and
aas
mov
xchg
cli
hlt
call
xchg
dec
repz
bound
sbb
xchg
inc
subl
icebp
outsb
addr16
mov
nop
dec
iret
in
sti
mov
aaa
xchg
repz
das
add
jb
add
jno
adc
mov
sub
xor
and
lret
or
sar
scas
sbb
das
push
xor
mov
mov
pusha
jo
lea
jb
lahf
std
fbld
push
jo
xor
jb
ret
xor
sahf
mov
jne
leave
stos
xchg
sbb
sub
aaa
les
xor
inc
dec
mov
movl
sahf
add
pop
add
jno
movl
mov
or
je
adc
cli
jo
in
xchg
lock
shll
mov
in
cmp
repnz
push
fimull
mov
dec
pusha
jmp
add
cmp
mov
add
cli
xchg
stos
pushf
pop
push
pop
pop
fldl2e
add
out
xchg
mov
inc
fistpll
mov
sbb
mov
jecxz
movsl
jne
test
ljmp
mov
popf
push
nopl
push
xchg
lds
jmp
push
push
xor
shlb
or
popf
and
push
mov
nop
cmp
popf
fimull
mov
popa
leave
cmp
out
cmp
lods
mov
inc
in
or
jle
out
fildll
mov
test
sbb
or
mov
mov
dec
call
and
fistl
dec
test
mov
push
pop
jmp
sbb
and
ret
dec
fs
mov
jo
sub
mov
pop
pop
push
pop
dec
pop
push
mov
jbe
sub
xchg
into
test
sahf
dec
adc
lds
fsubrs
lret
mov
xor
pop
push
lods
imul
inc
mov
std
dec
or
or
pop
jle
ljmp
aam
mov
lcall
add
das
lods
xchg
push
in
aam
adc
cmpsb
pop
push
js
cs
imul
inc
xchg
aad
mov
rolb
inc
cli
cmp
aaa
out
test
jle
dec
jecxz
sub
pop
out
push
fadd
xchg
sarl
adc
push
jae
mov
test
les
stc
push
mov
jae
jl
inc
ja
lods
call
push
pop
add
icebp
mov
shrl
or
cltd
imul
sti
cmp
cltd
jbe
cmp
mov
aad
sub
out
shll
ud1
iret
movsb
movsl
ljmp
sub
int
into
xchg
xchg
sti
je
fisubrl
and
cmp
ficoml
outsl
in
push
stos
sbb
sbb
adc
adc
cmp
outsb
scas
jl
pop
lcall
ret
cmpl
icebp
or
scas
call
sbbb
dec
loop
and
lcall
push
xchg
in
sub
scas
cmp
adc
ljmp
add
cmp
hlt
and
fnstenv
mov
hlt
pop
hlt
sub
mov
sbb
inc
aas
pushf
add
js
das
or
mov
filds
adc
mov
mov
rorb
pop
jmp
test
jl
scas
mov
inc
adc
dec
dec
pop
xor
dec
add
push
mov
cmp
sar
dec
sbb
leave
daa
cmpsb
lret
lock
stos
mov
pop
nop
jae
test
cmp
jmp
aam
imul
fcomip
jg
movsb
mov
pop
mov
cmp
jl
mov
sahf
jb
fsubp
movsb
es
int
ds
insl
loop
mov
mov
popl
icebp
cmpsb
pop
cmc
sahf
adc
enter
add
pop
or
aam
pop
xlat
push
cld
lret
hlt
push
cmp
test
iret
scas
mov
jmp
in
jnp
mov
adc
repz
lret
cmpsb
lahf
mov
cs
cmp
adc
hlt
call
pop
call
push
jmp
and
adcl
sti
push
cmove
jns
xor
repz
mov
stos
in
insl
or
fildl
mov
jns
xchg
nopl
stc
adc
add
cwtl
fnstsw
repnz
out
lret
dec
mov
adcb
cmp
adc
lret
dec
les
fsubl
sub
jle
in
mov
mov
mov
dec
leave
dec
addl
xchg
js
cli
inc
repnz
cs
dec
inc
nop
add
in
and
pop
cmp
jmp
aas
push
add
scas
arpl
mov
xchg
fdivs
push
dec
xor
and
mov
or
leave
bound
push
mulb
mov
cmp
dec
push
and
ds
cmp
test
loope
add
push
mov
out
inc
pop
xor
jle
add
les
lea
cli
hlt
call
mov
out
popa
adc
and
dec
pop
out
add
cmp
mov
jo
pop
stos
fucomi
or
push
cmp
ds
loop
cwtl
shll
arpl
pushf
adc
sti
ja
cmc
cmp
sub
lcall
add
in
sbb
test
daa
inc
movsb
fistpl
push
inc
mov
pop
add
cmp
leave
dec
addl
push
int
xchg
pop
jnp
xor
push
pop
inc
popl
xlat
imul
or
mov
jbe
shlb
repz
lods
mov
push
aad
and
add
dec
outsb
lock
mov
lods
add
cmp
ret
fiadds
jnp
inc
stos
lahf
sbb
jbe
xchg
xor
push
inc
fadds
xchg
mov
cmpsb
aas
push
cmp
jae
jmp
adc
add
addr16
aam
out
in
cmpsl
inc
or
test
aad
repnz
fldcw
stos
xchg
add
push
cmp
in
xchg
jne
mov
test
sbb
ss
mov
setne
sbb
jae
ja
insb
sbb
testl
mov
addl
mov
imul
pushf
dec
mov
pusha
cwtl
pop
outsl
es
or
sbb
popf
cli
jnp
push
xor
js
out
fisttps
aam
inc
sub
pop
nop
stos
loop
mov
das
dec
clc
sbb
mov
outsb
mov
pop
mov
and
sbb
jmp
imul
shlb
fadds
inc
mov
shll
loop
nop
and
lahf
cld
lret
sbb
clc
repz
fistpll
sarb
arpl
pushf
scas
test
out
scas
jge
ret
or
enter
push
jle
hlt
call
ret
call
in
lret
imul
dec
sub
push
lret
pop
cld
and
or
enter
test
decl
insb
int
lret
xor
lock
insl
push
scas
mov
mov
je
jae
mulb
mov
dec
in
arpl
jae
push
sar
inc
push
pop
xchg
jnp
sbb
mov
sbb
add
mov
out
push
push
cmp
pop
jg
adcl
cmp
xor
outsb
stos
fistpll
cmp
add
push
and
int3
clc
loope
out
mov
sbb
movb
cld
negb
addb
mov
mov
int3
iret
jo
add
out
stos
outsl
and
in
fistpll
nop
and
inc
loop
and
enter
inc
lds
gs
jbe
mov
inc
test
dec
fldl
jl
stos
repz
sub
push
addr16
adc
push
lahf
sti
lods
cmp
push
jno
hlt
call
stc
shlb
cmp
mov
push
cmc
cmp
or
pop
out
xchg
xor
in
mov
jnp
stos
mov
cmp
scas
stos
insb
repz
or
dec
add
inc
or
popa
stos
push
inc
xchg
mov
mov
ljmp
fnstsw
imul
repz
das
add
jb
add
jno
adc
sub
jo
das
int3
pop
push
insl
js
in
mov
mov
sbb
dec
shlb
repz
lods
mov
xor
ret
xor
add
movsl
lret
loop
push
int
imul
mull
xlat
cmpl
mov
cmpsb
leave
cltd
mov
jecxz
mov
xchg
ja
jecxz
sbb
sub
sbb
imul
push
insl
mov
jl
dec
sti
mov
aas
xor
inc
int
jle
out
fs
pop
std
mov
inc
lods
sahf
sbb
out
lods
adc
cmp
cwtl
je
aaa
fcomps
sbb
sbb
clc
push
mov
test
mov
ds
outsl
xor
and
int3
jge
scas
mov
xor
push
xchg
hlt
ss
mov
jecxz
pop
sbb
bound
ds
fdivp
loope
nop
fdivrs
push
jo
sbb
movsl
loopne
and
cli
repnz
clc
pop
jle
ljmp
aam
mov
lcall
cmc
out
fs
xchg
sub
cmpsb
pop
push
stos
xorl
push
scas
mov
mov
rolb
inc
cli
cmp
aaa
out
test
jle
xor
or
inc
scas
fdivrs
mov
fdivrp
dec
xchg
movsl
test
repz
movsb
mov
pop
mov
cmp
dec
push
lret
adc
xchg
cmp
pop
mov
xchg
inc
dec
stos
lods
mov
mov
lock
repz
cltd
sub
push
lret
gs
ja
sbb
rcl
jmp
mov
in
ret
shr
call
fmuls
in
and
mov
sub
imul
lods
mov
mov
int
inc
mov
loopne
loope
nop
fadds
cmp
dec
sbb
jns
xchg
jp
mov
lahf
cld
lret
sbb
ret
sbb
fidivl
outsb
stos
push
out
incl
fsubp
outsb
ja
jge
addb
pusha
loop
add
xor
loop
mov
jb
scas
and
pusha
sbb
jo
push
xchg
insb
jle
movsl
fsubrl
mov
andb
push
jnp
mov
mov
sbb
cld
mov
push
xor
xlat
test
mov
shr
stc
repnz
add
fcompl
ficompl
pop
xchg
xor
arpl
out
and
xor
xor
cmp
xchg
into
and
push
cmp
hlt
and
incb
sub
scas
test
cmp
into
iret
popf
es
movsb
push
pushf
mov
xchg
repz
jle
xchg
push
lahf
cld
mov
and
testb
xchg
or
icebp
int
test
sbb
xor
in
and
sub
movb
pop
addl
stc
imulb
add
iret
xor
pop
lds
gs
scas
adc
mov
mov
roll
in
xchg
mov
lret
fcoms
adc
inc
sbb
sbb
je
bnd
mov
push
dec
cmp
nop
and
mov
jae
les
aad
xlat
xchg
sbb
scas
cmc
pop
and
sbb
icebp
clc
jp
stc
fs
xor
mov
sbb
call
inc
shlb
pop
lahf
lods
testb
mov
xchg
jns
fsubl
inc
cmp
inc
pop
pop
mov
push
inc
pop
sti
push
inc
ja
mov
mov
std
pop
push
mov
bound
js
cwtl
jecxz
ja
das
fmulp
sub
xchg
push
leave
scas
nop
shrl
cmc
adc
push
cmpsl
hlt
pop
push
and
mov
sub
popa
int3
stc
cmpsb
xlat
movsb
int
adc
push
push
add
mov
add
test
loope
fwait
mov
gs
ljmp
xchg
ret
mov
push
inc
and
push
loopne
mov
jle
pushf
gs
jnp
outsl
mov
fistpll
pop
je
andl
mov
fstpt
inc
addb
mov
sti
iret
add
inc
addl
popa
mov
mov
call
enter
jnp
lods
mov
xor
push
xchg
hlt
ss
mov
jecxz
pop
sbb
bound
ds
lea
in
adc
inc
clc
and
add
dec
mov
out
cmp
fnsave
clc
pop
in
dec
sub
push
lret
pop
cld
and
or
enter
test
decl
insb
jle
xor
mov
jae
mov
nopl
sub
mov
xchg
mov
dec
stos
inc
push
push
xor
pop
adc
repz
mulb
mov
dec
adc
xchg
sub
xor
popa
fisttps
inc
fadds
xchg
mov
push
sub
xlat
pop
lea
nop
call
ss
cld
divl
xchg
mov
mov
sub
daa
adc
add
jg
hlt
or
jmp
mov
mov
cmpsl
or
pop
imul
insb
xchg
clc
nop
push
add
sbb
add
sbb
mov
adc
xchg
ja
or
aam
pop
xor
or
scas
aas
ret
adc
ret
mov
outsb
clc
roll
nop
jae
cmp
in
enter
pop
push
pop
dec
mov
les
cmp
in
fs
imul
js
mov
fs
dec
addl
push
jg
cltd
mov
jo
pop
stos
popl
pop
nop
jp
sub
into
lret
dec
stos
sbb
cmp
outsb
mov
sbb
movsb
roll
idivl
jns
in
js
out
sub
cmc
adc
gs
or
pop
fildl
fs
bound
scas
and
pusha
sbb
jo
push
xchg
insb
jle
movsl
dec
arpl
push
cmpsb
andb
fadds
lahf
xchg
mov
sbb
je
mov
stc
js
das
sbb
and
or
lret
sbb
cmp
into
iret
popf
es
movsb
push
fwait
push
sub
mov
ds
int3
xchg
test
test
inc
adcl
inc
push
push
pop
lahf
or
out
aad
lret
call
aad
repnz
test
icebp
inc
xchg
push
std
xchg
inc
dec
stos
lods
lods
imul
ljmp
dec
inc
aam
push
rclb
inc
in
shll
in
daa
aas
mov
dec
dec
addb
orl
push
into
pop
dec
aam
pop
testl
mov
sub
loope
jl
sbb
dec
jbe
mov
and
sbb
int3
mov
test
pop
mov
cmc
or
or
and
out
or
stos
fs
repz
test
push
dec
mov
sbb
sub
clc
rcll
sub
rcl
xchg
aam
jl
pop
sbb
xor
mov
add
in
inc
cmpsb
ficoms
inc
imul
xlat
aam
mov
rcll
sbb
pop
mov
negl
popf
jge
pusha
sub
inc
inc
lret
push
mov
sbb
movsl
outsb
cmp
aam
hlt
arpl
sti
sub
push
pop
xor
mov
lret
imul
push
aam
imul
fbstp
repz
pop
add
mov
inc
xchg
inc
outsl
xchg
testb
test
jnp
out
sub
ja
adc
adc
movsl
xor
mov
in
mov
cmp
sar
dec
sbb
push
sbb
mov
mov
mov
xchg
fs
cmp
push
shll
ret
mov
sbb
pop
push
and
cmc
ds
xadd
mov
sbb
push
jns
fsts
xor
out
cltd
enter
imul
xchg
push
sub
and
mov
repz
fistpll
cs
in
cmc
or
dec
imul
inc
addl
xor
or
mov
ja
aam
cmp
add
adc
repnz
jo
push
mov
lds
cmp
mov
leave
ret
jmp
xchg
enter
ljmp
call
mov
xor
fwait
mov
push
imul
jp
cmc
in
nop
jecxz
clc
mov
mov
fidivs
mov
cli
hlt
and
clc
icebp
push
push
pop
ljmp
enter
addl
je
dec
movsl
xchg
cmc
add
jle
jno
aad
repnz
leave
ds
cmpsb
lods
mov
cli
cmp
aaa
addl
push
lods
shlb
adc
stc
or
sahf
cmp
mov
jp
push
stc
test
shlb
pop
lahf
lods
testb
sub
push
lret
pop
cld
and
or
xlat
mov
mov
loope
fnstenv
add
sub
inc
int3
pop
loop
adc
cmpsb
mov
and
jae
mulb
mov
sbb
cmp
xor
pop
cmp
cmp
push
jle
and
in
mov
fld
pop
xor
adc
jnp
cmc
pop
jmp
mov
outsb
pop
sarb
sub
lahf
mov
mov
xchg
aad
lret
call
jns
les
dec
sub
pop
sub
int3
lods
mov
stos
cmpsb
mov
pop
sbb
add
repz
pop
imul
stos
sbb
and
dec
mov
mov
repz
and
and
mov
dec
ljmp
loopne
sub
jle
lea
push
out
dec
rorb
scas
ljmp
dec
sub
cmp
xchg
sub
push
mov
int3
mov
sub
push
in
cmp
insl
or
lds
mov
mov
in
or
mov
cs
mov
xlat
inc
stc
or
ss
aam
xor
sbb
mov
repz
inc
sbb
xchg
in
fstpt
push
xchg
testb
icebp
das
push
xor
mov
loope
outsl
jmp
cld
les
fsubl
add
ja
dec
test
dec
mov
std
lahf
inc
sti
pusha
dec
scas
push
pop
and
mov
fidivl
push
std
shll
sub
rcl
jae
fwait
test
jno
sbb
xchg
mov
mov
add
cmc
xor
jae
scas
test
icebp
inc
xchg
push
scas
mov
lahf
mov
cmpsl
inc
addb
gs
scas
adc
fs
dec
addl
adc
mov
or
ljmp
sahf
adc
int
stc
xchg
sbb
cmc
push
dec
push
loop
insl
insl
repz
in
gs
lret
sub
sub
inc
or
movsb
mov
aas
sub
leave
cmp
scas
stos
insb
repz
or
add
fsubl
pop
cmp
imul
pop
jle
or
mov
scas
mov
scas
inc
addb
icebp
clc
jp
sti
popa
xor
pop
iret
mov
push
cmp
mov
loop
inc
mov
xchg
mov
icebp
aad
jns
inc
addl
lods
xor
int
push
fisubl
mov
adc
add
orps
and
add
sbb
or
in
pop
jne
pop
jns
pop
out
cmp
repnz
daa
ja
lea
pop
jle
lcall
enter
imul
mov
mov
pop
paddsb
push
roll
enter
loope
xlat
add
pop
push
addr16
inc
popa
cwtl
mov
popf
es
or
aam
imul
fists
mov
stos
lods
jle
xchg
movsl
test
sbb
mov
adc
push
push
pop
repnz
cld
fcoml
add
add
push
fs
pop
call
lret
fiadds
bound
es
imul
lcall
lds
jns
xor
mov
mov
xor
fwait
mov
rclb
adc
iret
mov
push
mov
setne
lock
andl
pusha
call
pop
add
push
push
mov
mov
clc
cld
pop
pop
popa
jmp
inc
jns
jmp
pop
insb
xor
xchg
pop
add
and
pushf
movsl
jp
mov
inc
pop
xor
shlb
int3
adc
imul
aam
fs
xchg
ror
into
out
cld
test
or
add
xchg
pop
push
jmp
addl
jle
xor
jmp
sub
mov
xchg
push
jmp
lods
loop
xor
cmp
dec
push
mov
jmp
loope
hlt
sbb
fidivrs
js
addl
add
add
mov
pop
jmp
lea
nop
mov
lret
test
les
jmp
std
repnz
sar
lahf
in
mov
mov
sbb
add
sub
jmp
xor
xchg
test
xor
imul
push
neg
dec
push
pop
mov
dec
cmp
jno
cld
pop
pop
xor
push
push
lea
test
lea
cmp
inc
cmp
xor
cmc
inc
cld
pop
pop
cmp
je
jmp
push
and
jmp
fstps
fwait
cmp
jbe
in
add
push
dec
dec
outsl
jl
pop
mov
es
mov
cmpb
jne
jnp
icebp
jmp
push
inc
sub
scas
dec
jmp
fsub
mov
inc
je
adc
loopne
pop
aas
or
push
clc
shll
aaa
movsb
or
push
das
cmp
insb
and
push
push
pop
jmp
inc
out
aam
mov
jmp
jge
ret
inc
jns
pop
insb
xor
or
add
lret
mov
pop
add
and
ret
jmp
push
add
add
pushf
movsl
jp
mov
inc
pop
xor
shlb
add
add
adc
div
fs
jmp
leave
into
out
cld
test
or
push
push
pop
jmp
xor
jmp
addl
jle
sub
mov
sbb
xlat
les
add
pop
add
push
push
pop
add
jmp
cs
pop
gs
xchg
push
jmp
hlt
sbb
fidivrs
pop
das
insl
pop
jmp
ljmp
add
add
mov
lea
nop
mov
lret
test
add
jmp
std
repnz
rcrb
iret
push
adcb
in
mov
mov
nop
push
sub
add
add
xchg
test
xor
imul
stos
or
je
add
add
jmp
fstl
push
jmp
jg
xchg
stos
fwait
cmp
aaa
xlat
dec
pop
jmp
adc
in
add
push
dec
dec
outsl
jl
pop
mov
imul
pop
andl
add
push
push
xchg
neg
cmp
not
xchg
add
not
push
pop
xchg
cmc
cld
pop
pop
xor
push
push
neg
test
test
push
pop
lea
mov
clc
xor
push
pop
cld
pop
pop
xor
jmp
cwtl
icebp
push
inc
sub
scas
dec
fsub
mov
inc
je
adc
loopne
pop
aas
or
push
clc
shll
jmp
aaa
movsb
or
push
jmp
das
cmp
sbb
inc
out
aam
jb
inc
jns
pop
insb
xor
xchg
pop
add
and
rol
push
jmp
mov
inc
pop
xor
sarb
jmp
mov
int3
adc
add
add
sbb
int
xchg
ror
into
out
cld
test
sarb
test
or
add
add
addl
jle
sub
jmp
cmc
mov
sbb
xlat
les
cs
jmp
pop
gs
dec
loope
sbb
push
add
add
fidivrs
int3
jmp
ljmp
lea
nop
mov
add
add
jmp
inc
lcall
cmpsw
add
add
jmp
inc
sar
dec
jne
push
jmp
mov
test
xor
imul
sbb
cli
stos
or
or
and
fstps
fwait
pop
push
mov
jmp
dec
outsl
jl
pop
mov
es
mov
add
jmp
cmpb
jnp
icebp
pop
mov
push
push
test
not
cmp
dec
cld
pop
pop
add
jmp
fsub
mov
popa
xchg
popf
adc
loopne
pop
aas
or
push
clc
shll
aaa
movsb
or
push
das
cmp
sbb
inc
out
aam
jb
aam
jmp
inc
jns
pop
insb
xor
xchg
pop
add
jmp
and
outsb
setl
inc
pop
xor
shlb
int3
jmp
adc
div
fs
xchg
ror
into
out
cld
test
or
add
push
push
xor
dec
cld
pop
pop
push
push
push
cmp
add
dec
xor
push
pop
cld
mov
not
test
stc
cld
pop
pop
ret
