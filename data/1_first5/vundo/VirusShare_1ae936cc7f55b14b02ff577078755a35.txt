mov
gs
xchg
leave
push
shl
cs
mov
xchg
icebp
sub
push
cmp
mov
or
push
fisubl
inc
imul
mov
das
movsl
cwtl
jmp
popf
adc
sahf
loop
lock
sti
icebp
adc
mov
cwtl
push
pop
repnz
addl
hlt
lods
xlat
jg
icebp
mov
aad
ret
fisttpl
jo
inc
dec
jno
push
jl
jmp
pushf
add
and
jbe
out
jae
loop
lods
mov
sub
pop
xchg
shr
jmp
add
pop
and
and
dec
cltd
andl
scas
repz
push
aaa
xchg
add
es
xor
xor
and
and
test
push
jbe
addr16
xor
lret
outsb
xchg
pop
js
xchg
pop
es
imul
iret
in
jae
sbb
jbe
lcall
gs
lods
fwait
std
dec
jb
movl
in
mov
sbb
ljmp
sahf
hlt
inc
inc
add
sbb
jp
pop
fidivrl
insb
jnp
out
adc
sub
pop
in
sub
loop
fs
lods
push
inc
sub
xlat
xchg
xchg
push
jb
test
shl
add
push
jnp
mov
rcl
or
into
sbb
adc
mov
push
dec
and
dec
out
js
adc
roll
dec
imul
sub
fimull
fwait
pop
lahf
sub
mov
sbb
int
les
stos
add
ljmp
sar
and
imul
iret
lcall
adc
push
call
or
fcoms
lret
sbb
stc
testb
mov
xchg
dec
adc
shll
inc
es
and
mov
push
pop
dec
push
or
out
and
out
daa
sub
mov
push
dec
sti
aam
aad
imul
mov
scas
xlat
jmp
push
xchg
pop
sbbl
lods
sub
inc
xchg
test
lahf
mov
out
inc
iret
xor
jnp
scas
in
data16
xor
clc
xchg
call
mov
cmpsl
in
pop
pop
and
jp
lock
mov
sbb
ss
scas
out
out
pop
push
idiv
sub
jnp
shr
mov
jnp
pop
cmp
jmp
dec
jecxz
cld
orb
mov
or
lods
cs
add
stos
aam
in
mov
cmpsb
jg
cmpl
pop
jmp
out
jns
add
les
out
fiadds
dec
mov
leave
es
lock
cltd
leave
xchg
shl
xor
fdivl
movsb
cmp
mov
cltd
pop
adc
xchg
mov
data16
mov
in
mov
pop
mov
out
shrl
mov
pop
insb
pop
clc
or
in
fwait
popf
and
jmp
mov
nop
mov
insb
mov
dec
into
out
test
out
mov
inc
subl
xchg
inc
jp
adc
cmp
loope
mov
out
test
lock
scas
addr16
test
pop
xchg
pop
scas
lret
and
adc
std
or
stos
lcall
jp
xorl
adc
mov
and
pop
xorl
outsb
xor
clc
flds
addr16
push
push
movsl
fsubrl
xchg
in
fnsave
dec
xorb
and
call
xchg
lds
adc
loope
addb
pop
fmull
sub
outsl
repz
sbb
dec
sub
inc
jp
jg
enter
xchg
mov
xchg
dec
imul
bt
jbe
mov
or
hlt
test
out
mov
adc
dec
or
adc
out
mov
mov
and
sub
or
orl
mov
ret
sbbb
nop
jl
test
sbb
cli
and
mov
repnz
lds
sbbb
add
and
loop
pushf
jp
xor
nop
adc
mov
mov
test
pop
xor
pop
lret
rcrb
rol
push
mov
test
push
mov
push
sub
pushf
lahf
mov
stos
xchg
xchg
mov
imul
loop
outsb
inc
mov
hlt
mov
xchg
mov
or
in
sub
rolb
not
std
cwtl
daa
inc
call
mov
push
push
push
imul
popf
jno
fsubrp
cli
ret
xchg
sbb
dec
adc
sub
dec
icebp
pop
pop
mov
imul
xchg
aad
sahf
push
repz
out
aas
repnz
or
sbb
inc
push
pop
out
repnz
xchg
enter
aas
and
xchg
xchg
or
insl
loope
jne
xor
sub
sub
test
stos
ret
movb
dec
inc
dec
mov
xchg
ss
push
mov
aad
sbb
adc
mov
popf
clc
cwtl
mov
jmp
mov
stos
cmpsl
stc
jl
mov
jns
pop
add
and
out
xchg
cltd
imul
int
in
add
cltd
popf
mov
push
add
adc
dec
cli
xchg
jle
icebp
loopne
xchg
mov
cmc
call
adc
cmc
test
stc
fiadds
fdivrs
push
test
es
fldcw
fcompl
push
sub
jmp
jmp
cmp
jecxz
aaa
inc
mov
int
imul
scas
cli
outsl
jbe
xor
sti
sub
addl
in
aad
ret
fdivrp
add
lret
fs
push
and
shll
in
shll
aaa
or
inc
push
and
xchg
cmpsb
lret
mov
test
lods
pop
ds
inc
dec
out
mov
hlt
push
jp
nop
test
sbb
inc
add
hlt
lods
mov
ret
mov
cmp
add
popf
jns
xchg
inc
mov
daa
outsl
movl
clc
leave
push
dec
fs
repz
sbb
add
cmp
xchg
adc
cli
cwtl
or
rcr
scas
cwtl
xchg
daa
push
push
or
testl
cld
and
adc
adc
adc
pop
repz
xor
cmp
aad
pop
dec
into
xchg
lods
sarl
inc
adc
sub
sbb
das
test
jb
adc
out
cmc
xchg
jne
push
pusha
scas
call
mov
push
xchg
lods
mov
xchg
jae
inc
push
pop
inc
pop
jle
shll
mov
lahf
sbb
jno
sub
adc
mov
cli
data16
mov
jp
dec
sub
fwait
pop
jecxz
adc
movsb
sub
mov
mov
xchg
lock
mov
rcr
loop
cli
std
cmp
push
mov
pop
dec
addr16
hlt
jl
and
add
mov
jecxz
sub
or
mov
mov
rcl
xor
and
lods
in
outsb
lock
sub
data16
pop
inc
xorb
and
stos
loope
outsl
inc
test
nop
adc
add
pop
fcoms
enter
push
cwtl
scas
sbb
xchg
xchg
fs
sbb
jp
cmpsl
adc
cld
aad
lods
inc
cltd
pushl
fs
shlb
sub
call
jmp
pushf
mov
dec
cmp
shlb
mov
movsl
mov
sbb
or
push
mov
push
sub
ja
jge
push
adc
shlb
or
popf
icebp
push
std
enter
push
xchg
sbb
jo
mov
jp
jmp
xor
bound
call
ds
addr16
dec
jbe
pop
js
pop
xor
mov
adc
dec
adc
imul
test
sub
leave
gs
push
push
adc
push
mov
out
sbb
mov
inc
xor
or
jno
mov
push
into
pop
mov
push
or
jb
or
jecxz
psrld
jl
mov
or
cmp
fwait
xchg
inc
fwait
clc
loop
pop
xchg
das
inc
scas
push
cmp
sub
scas
lds
mov
jmp
test
jae
dec
xchg
mov
cmp
add
mov
clc
cmp
clc
icebp
pop
ret
jge
dec
add
jl
cmpsl
mov
fdivl
cmp
aas
outsb
inc
stos
arpl
jge
xor
daa
xor
mov
test
inc
mov
inc
test
adc
and
xor
pop
dec
pusha
shr
and
pop
into
mov
mov
inc
mov
faddl
jp
push
imulb
mov
and
sbb
std
insl
movsl
fistpll
xchg
mov
ret
xchg
divl
cmpb
stos
push
xchg
in
pop
pop
sbb
push
lds
lods
in
loop
sbb
loope
stos
leave
cmpsl
or
and
jecxz
or
adc
daa
scas
dec
or
jp
adcl
mov
mov
test
push
insb
pushf
fnsave
sub
jg
fcompl
pop
lret
jl
push
dec
pop
xchg
push
jbe
pop
or
popf
rep
icebp
pop
add
test
push
mov
inc
out
lock
and
cmp
sub
push
das
cs
sub
rorl
cmp
xchg
inc
sbb
in
xchg
dec
lcall
fisubs
mov
das
int3
pop
mov
call
bound
mov
xchg
mov
jbe
pop
push
pop
sub
push
cmc
fadds
std
mov
mov
flds
mov
or
imul
lds
dec
sub
ljmp
call
cwtl
ss
je
inc
jns
add
fadds
sub
ret
mov
cmc
mov
push
addr16
imul
sub
cmp
inc
cld
scas
lret
pop
dec
rcrb
jo
and
dec
jg
push
adc
jns
mov
inc
js
scas
or
dec
and
xchg
ffree
retw
pop
cltd
fbstp
das
adc
ds
xor
push
or
mov
push
sbb
jbe
push
mov
iret
popf
pusha
int3
cmp
mov
jno
push
lahf
lret
xchg
aas
add
jecxz
lea
icebp
nop
xchg
je
and
cli
mov
repz
xor
xchg
cmpsb
adc
dec
jne
and
push
pop
loop
stc
xchg
cwtl
fdivr
adc
push
cmp
ja
jbe
out
pop
mov
es
cmp
add
add
jmp
insb
stos
insb
cs
addr16
mov
dec
test
ljmp
add
ret
stos
sbb
bound
div
jmp
pop
mov
imul
xchg
cltd
push
js
dec
push
roll
sub
pop
jns
rorl
cmc
mov
adc
lret
ret
ret
xchg
insl
inc
dec
jmp
and
adc
movl
mov
addr16
les
inc
orb
inc
inc
dec
xor
mov
dec
lahf
inc
dec
aaa
dec
mov
pop
inc
sub
in
mov
inc
aaa
and
in
in
or
ja
jb
imul
test
call
lcall
sbb
bnd
test
lds
ffree
movsb
inc
lret
in
fisubl
push
sub
add
mov
cli
xchg
sbb
imulb
int3
subb
push
jno
jle
test
inc
ficoms
pop
stc
stc
xchg
data16
leave
nop
cmp
cmp
inc
sbb
sarb
into
inc
lret
mov
mov
dec
inc
jbe
fstpl
adcb
or
jle
or
jne
loope
in
add
insl
cmpsb
rorl
sub
movsl
test
push
cmp
fsub
mov
notl
sbb
cmp
test
or
fcmovnbe
dec
ret
mov
lods
lods
adc
ret
lahf
xor
fbld
loopne
or
enter
hlt
test
dec
inc
mov
inc
loopne
out
mov
sti
or
mov
cmp
mov
add
sbb
lahf
inc
mov
out
enter
pop
jp
and
sarb
jmp
js
xchg
lock
lret
push
cmp
ret
mov
inc
inc
add
bound
cmc
arpl
pop
cmpsl
jo
ret
or
dec
andb
cmpsb
or
mov
pop
mov
icebp
add
jae
je
push
xor
jge
cs
xor
lahf
repz
fdiv
pop
in
into
pop
test
hlt
mov
jmp
mov
and
btr
adc
mov
push
mov
jp
inc
mov
ret
jmp
cli
lahf
addr16
push
inc
movsl
mov
sbb
jg
ja
lcall
xchg
lods
loope
pusha
sahf
dec
addl
and
xchg
loope
ds
mov
pop
cmpl
mov
loopne
adc
xchg
fsubr
test
rolb
xor
iret
push
mov
movsb
xchg
jae
aam
and
sbb
jmp
lods
jo
repz
push
dec
sub
push
jae
cmp
fstps
pusha
sbb
mov
push
popf
sbb
pop
outsb
adc
fidivrs
in
jae
sbb
jae
jnp
push
ret
imull
lods
jb
inc
inc
mov
lcall
shlb
or
mov
pushf
int3
lahf
mov
test
lods
nop
sbb
xchg
cmc
mov
adcb
cwtl
xchg
jp
sub
rcrb
stc
hlt
popf
insb
enter
aaa
hlt
jp
enter
adc
and
cmp
xchg
movsl
mov
int3
rorl
pop
pop
lea
push
pop
iret
arpl
push
cs
sbb
push
dec
lds
xlat
xchg
jbe
xchg
mov
push
inc
sbb
mov
lcall
sub
push
adc
push
addl
sub
negl
arpl
in
mov
push
pop
lret
xchg
push
imul
jns
int
int3
adc
arpl
enter
fistps
or
cmc
sub
xchg
repnz
dec
popf
cld
push
pop
push
and
inc
mov
mov
lret
scas
inc
lds
fistps
inc
stc
push
mov
mov
cwtl
or
inc
divb
pop
addr16
sbb
in
dec
repz
inc
mov
cltd
xchg
fdivr
scas
pop
popf
mov
cld
cmp
cmpsb
in
sbb
jecxz
sbb
sub
mov
jmp
je
insb
cwtl
hlt
loop
outsb
jle
lret
pop
mov
std
sti
cmp
mov
jge
mov
lods
std
lahf
les
aaa
sub
inc
popa
cwtl
or
and
mov
sub
data16
shrl
xchg
add
insb
sub
call
mov
push
lods
lret
sbbb
cmp
dec
mov
mov
jl
mov
push
comiss
leave
dec
push
cmpsl
loope
dec
clc
pop
test
into
mov
xor
inc
mov
shll
mov
add
inc
leave
jae
lods
sub
mov
xor
adc
cltd
dec
sbb
nop
inc
xchg
mov
clc
xorps
dec
cmp
push
lods
push
push
adc
mov
fs
sti
ret
pop
jmp
iret
imul
in
divl
dec
scas
outsl
cld
imul
fstpt
jno
pop
jge
dec
mov
popa
mov
lea
outsl
push
and
jmp
cs
out
mov
mov
dec
lcall
mov
inc
pop
pop
incl
mov
pushf
ret
cmpsl
push
imul
xor
aad
js
add
mov
pop
cs
xchg
out
jbe
jb
shll
pop
xchg
std
aad
mov
aad
xchg
mov
xchg
pusha
pminsw
fucomp
mov
lds
clc
sbb
call
mov
jecxz
divb
mov
sarl
nop
cli
sbb
fcmovnb
adc
xor
ret
push
stos
out
insl
pop
std
clc
popf
inc
shrl
das
push
lret
aas
pop
stos
push
movsb
xchg
pop
fmuls
xor
mov
out
mov
cmp
xor
push
rclb
add
pop
xor
mov
stos
je
js
addr16
rclb
outsl
mov
inc
js
cmpsl
jne,pn
sbbl
addr16
push
jo
jbe
add
mov
jne
and
mov
sub
xchg
std
test
jg
sbb
cli
mov
sbb
outsb
movl
push
iret
stos
popa
add
mov
mov
mov
pop
jl
mov
rclb
mov
xor
lock
or
std
dec
std
cltd
dec
xchg
scas
add
out
outsl
add
pop
aas
aas
mov
sub
mov
in
das
ds
pop
pop
mov
es
xchg
cmc
add
cwtl
add
sub
cmp
lret
push
aaa
outsl
or
sub
push
xor
negl
fsubl
sahf
into
rcr
rcrb
mov
fwait
test
sub
sarb
or
mov
jno
adc
inc
pop
inc
jb
int3
push
out
or
cmp
adc
push
js
das
push
push
xor
lods
cmp
in
add
inc
imul
pop
arpl
imull
jg
aad
jnp
xor
rolb
push
pop
cltd
lcall
movsb
cmc
cwtl
sbb
push
das
in
cld
or
dec
sub
fstpt
add
pop
or
jmp
cltd
repz
lock
into
movsb
mov
lods
adc
cmc
pop
push
jae
in
mov
mov
jae
lds
push
cltd
pop
enter
xor
stos
mov
pop
mov
jp
pusha
pop
or
mov
xorl
stc
lcall
shll
jle
dec
dec
nop
push
adc
cld
pop
scas
mov
sub
fildl
addl
lods
xchg
jo
pop
clc
shufps
pop
lret
mov
mov
inc
arpl
and
inc
decl
add
adc
test
jmp
sub
sbb
insb
andb
xchg
adc
sub
lods
movsl
sar
sbb
sub
or
icebp
ds
ds
out
les
xchg
add
lds
xchg
lcall
shll
fists
mov
sbb
cltd
mov
sbb
xor
sbb
jb
movntps
in
dec
mov
add
bound
xchg
push
inc
mov
xor
test
ss
adc
mov
ficoml
xor
in
push
sub
pop
dec
fistl
out
pop
cmp
hlt
pop
lock
in
adc
fldt
ljmp
xor
inc
jae
push
push
xor
inc
hlt
sub
adc
in
andb
inc
pop
ds
enter
and
ficompl
jl
xchg
jb
cmp
jge
adc
pop
daa
push
cltd
inc
jl
outsl
push
lea
inc
xor
pop
mov
pop
rcll
add
out
push
lret
xor
mov
aam
data16
das
fildll
xlat
cwtl
xchg
xor
push
jmp
sbbb
jne
mov
pop
jae
insl
mov
es
or
mov
lret
jne
pop
inc
fucom
pop
add
fildl
fwait
cmp
in
xchg
rcl
and
jge
xchg
add
popa
inc
pop
dec
mov
inc
mov
mov
dec
arpl
ss
xchg
lret
jae
cli
and
fistpll
lret
dec
outsl
icebp
or
mov
leave
fcompl
into
mov
jecxz
inc
incb
out
adc
daa
sub
fsubrs
sub
jb
dec
mov
jle
fwait
mov
fsubrl
pop
cmp
jp
sbb
sti
and
sub
mov
push
ds
dec
push
cld
inc
lret
fcoml
lds
fs
jne
arpl
sub
pushf
fildll
rolb
jns
xchg
out
add
lea
adc
cmp
lret
mov
ret
jnp
enter
push
sub
rorl
mov
mov
cli
fbld
lods
jbe
mov
mov
cmpsb
std
push
jb
add
mov
or
adc
dec
xchg
add
pop
pop
pop
xchg
clc
arpl
es
jecxz
sarl
push
jne
fadds
dec
sub
mov
cli
xchg
xlat
cmpsb
push
push
ficomps
sbb
sub
xchg
testl
pop
call
into
cmp
gs
jbe
mov
sub
mov
xchg
and
mov
mulb
testb
dec
adc
sub
sbb
je
mov
cmpb
adc
aaa
das
sub
loop
rcl
xchg
inc
cs
push
test
dec
or
std
adc
xchg
inc
mov
ficomps
insl
or
les
int3
andl
xorl
mov
fsts
xorb
dec
in
popa
fs
sub
loop
mov
movsb
aad
cmp
push
fs
in
xor
pop
and
out
arpl
stos
cwtl
pop
mov
dec
add
iret
pop
mov
loop
sarb
lahf
xchg
jle
or
call
into
insl
shlb
and
cmp
stos
ljmp
xchg
or
mov
mov
adc
push
in
enter
enter
pop
sahf
cmp
jle
ss
sbb
mov
xor
cmp
sub
ds
add
jmp
imul
fldl
scas
or
lock
flds
int3
xor
xchg
call
xchg
cmpsl
cmp
push
mov
sub
mov
nop
test
sahf
jnp
sub
dec
out
push
dec
xlat
mov
sbb
lods
dec
imull
repnz
or
mov
inc
mov
jmp
int
lgs
pop
mov
sub
jo
out
sub
addr16
hlt
stc
out
pop
js
repnz
mov
inc
pop
mov
je
fnstcw
jno
mov
jl
mov
and
cld
cmp
mov
dec
push
lods
jb
stc
xchg
dec
sub
cmp
inc
add
jp
lahf
pop
or
add
jnp
add
xlat
mov
xor
enter
xchg
stos
push
out
decl
scas
stos
jb
jbe
jp
add
call
orl
push
outsl
mov
adc
mov
stos
movsb
jnp
dec
fwait
stos
pop
mov
mov
cwtl
jecxz
jae
lcall
xchg
adc
outsl
iret
jnp
xchg
xchg
jnp
ret
lea
lock
fwait
xor
popl
mov
cld
jge
dec
sub
int3
shrl
adcb
das
inc
sbb
xchg
xlat
movsl
stos
das
cmp
push
adc
inc
ljmp
and
enter
in
fistpl
mov
jp
movsb
hlt
push
out
cmpsb
in
iret
or
inc
mov
insl
xor
jnp
andb
stos
xchg
cmp
ficoml
xchg
pop
lret
push
add
and
cmp
sub
nop
cmp
inc
cmp
mov
mov
pop
jmp
sti
mov
mov
mov
pop
cs
jnp
jp
pop
xor
fbstp
cmp
inc
out
add
mov
int3
dec
lcall
cmp
frstor
mov
aad
xlat
lcall
rorl
sbb
and
xor
cmc
xchg
push
je
jb
repz
dec
cmp
pxor
push
gs
or
jge
std
bound
xchg
inc
xor
pop
lahf
arpl
test
sub
out
sbb
or
fwait
xchg
insb
mov
mov
jb
lea
repz
inc
loope
fcoml
enter
fwait
pop
dec
lods
or
mov
mov
mov
lods
cs
fsubl
in
faddl
add
sbb
je
push
fstpt
jl
mov
les
jl
hlt
stos
iret
sub
insl
mov
mov
mov
test
call
adc
jb
mov
jo
xlat
cli
jbe
cli
cli
push
xlat
clc
arpl
stc
notb
and
sbb
xchg
mov
push
jb
add
sti
add
in
sbb
subb
in
sub
or
orb
lds
out
cmp
incl
mov
decl
or
test
lcall
sti
das
leave
mov
mov
xor
sub
mov
cmp
stc
test
mov
jne
dec
outsl
cmp
cs
out
sub
pop
inc
dec
ljmp
aam
pop
xchg
movsl
arpl
imul
adc
sub
ret
and
scas
push
sbb
sbb
mov
push
mov
push
hlt
mov
int
icebp
mov
xchg
popa
lret
cmp
push
aaa
push
cmp
cli
aaa
jo
inc
jle
ficompl
ss
sub
jg
lock
dec
push
cmpsb
pushf
call
fld
outsl
xor
mov
pop
adc
xchg
cmp
lcall
in
sub
jp
pop
mov
gs
add
int3
rclb
lcall
mov
repz
fistpl
sbb
cwtl
pusha
stos
cltd
pop
in
dec
push
in
lret
je
stos
mov
iret
cs
jl
mov
and
mov
rclb
ret
lahf
addb
lret
jb
jle
jo
mov
insb
loope
cmpsl
movsl
jecxz
cmc
mov
shll
das
decb
jno
clc
dec
mov
lret
lds
lds
movb
test
lds
sub
pop
or
fwait
sbb
rcrb
jns
scas
and
dec
inc
mov
ror
push
aas
jle
jle
and
push
mov
mov
push
pop
mov
jo
aad
iret
out
push
or
movsl
add
and
in
int3
cmp
out
scas
clc
sbb
sti
outsb
sbb
jno
mov
jns
sub
cmpsl
xor
pop
push
shl
push
pop
rolb
mov
mov
hlt
movsb
out
cmp
cli
cmpl
adc
into
xor
fwait
add
ret
arpl
pop
jge
adc
daa
loopne
divl
cmc
repnz
mov
cltd
mov
push
sbb
notb
and
out
cmp
xchg
int3
or
pop
stc
leave
cmp
loop
xor
jns
in
xor
test
ljmp
push
idivb
push
inc
ret
mov
test
lahf
xor
ret
mov
movsb
add
and
jl
cmp
int
in
add
test
and
push
adcb
movsb
inc
mov
ss
testl
mov
cld
cmp
cmpsb
cmp
cmc
pop
les
into
push
out
popf
mov
xor
mov
and
pusha
dec
shrl
es
loopne
ret
orl
out
xor
sub
xor
and
test
leave
push
cmpsb
push
xchg
jmp
je
add
xchg
gs
cmp
shrb
mov
xorl
mov
sub
sbb
insl
sti
mov
push
pop
sub
jne
ret
inc
or
jo
sti
mull
fwait
lods
movsb
jbe
loop
cmc
sub
enter
lds
push
mov
cli
loopne
scas
pop
or
mov
mov
ljmp
jno
test
sbb
out
pop
mov
rclb
xchg
popa
incb
mov
jnp
aaa
aas
push
jp
sahf
icebp
mov
dec
repz
mov
daa
cmp
das
mov
das
mov
jecxz
ficoms
shr
push
leave
fbld
mov
mov
popf
lea
stc
faddl
lahf
pusha
and
popa
in
lahf
mov
mov
repz
sub
mov
fwait
subl
pop
xor
es
jge
mov
mov
jo
jl
adc
aaa
cmp
leave
inc
xchg
aaa
mov
mov
in
push
jmp
loop
mov
iret
fsts
sub
shll
sbb
sbb
jns
lret
adc
aad
lret
fdivs
ss
dec
lcall
imul
les
pop
cmp
rorb
lods
outsb
call
lods
mov
stc
mov
cmp
jg
and
xlat
ficoml
fucom
jae
test
mov
pusha
add
mov
fistps
inc
mov
out
sbb
pop
sbb
dec
xor
jnp
loop
lods
push
push
int3
mov
add
add
push
fadd
rorl
fsubl
jg
push
push
pop
pause
inc
clc
xchg
psubusb
mov
jne
daa
int
loop
mov
mov
pop
sbb
call
rcrb
push
cmc
mov
sub
fs
xor
aam
xor
ret
xchg
sbb
mov
lret
push
ja
sahf
mov
inc
mov
scas
out
out
fiaddl
cmpsb
movsb
xor
les
addl
mov
xchg
add
mov
or
pop
mov
sar
icebp
movl
sub
mov
dec
sub
rcl
out
sbb
jecxz
inc
setns
ss
xlat
mov
orps
cmp
pop
lds
cs
pop
adc
and
aad
mov
ret
into
pusha
cmp
cs
xchg
adc
jns
cmpsl
push
pop
mov
xlat
pusha
adc
dec
nop
push
addr16
ljmp
in
cmp
cmpsb
hlt
cld
insl
push
je
ds
pop
jp
inc
inc
stos
jo
shl
adc
popl
adc
ret
cmp
mov
test
mov
mov
scas
into
int
lret
rol
pop
sahf
out
insl
inc
mov
add
shrb
test
xchg
xchg
cld
sub
loop
sub
call
xor
and
xor
cli
loop
cmp
adc
subl
mov
adc
cmc
pop
stc
push
pop
inc
or
fsub
insl
and
loope
cltd
in
lock
std
arpl
add
fcomip
pop
stc
in
or
rcll
add
popf
mov
popf
rolb
loope
and
inc
clc
lret
inc
cmp
aaa
inc
ficoml
popa
add
cmp
addr16
xor
loope
ror
dec
enter
jmp
iret
int3
sub
icebp
mov
cmpsb
dec
push
subl
cli
fidivl
push
cmpl
std
dec
js
sahf
pop
pusha
lahf
jp
dec
dec
testl
xchg
mov
ds
mov
stc
xchg
idiv
fwait
mov
fwait
xchg
pop
xor
sbb
mov
scas
dec
or
mov
pop
or
add
addr16
int3
stos
pop
pop
ret
and
lock
jbe
pop
mov
lret
test
fcmovnu
fadds
push
pop
and
ret
ret
ret
xchg
xor
sub
xchg
or
fsubrs
adc
inc
push
mov
sub
rolb
popf
iret
roll
cmp
mov
cmp
pop
mov
pop
cltd
inc
pop
fstp
and
out
mov
cmpsb
js
lock
sub
loopne
js
imul
sub
dec
sar
mov
in
gs
lods
lret
or
add
xchg
pop
out
or
out
mov
mov
sbb
and
fcmovbe
test
cltd
dec
scas
mov
imul
push
jg
pop
rcrl
xchg
mov
jo
nop
aas
push
fistps
cld
pop
jecxz
repnz
lods
inc
ret
dec
push
fs
or
xchg
pushf
mov
sti
dec
lods
filds
iret
cwtl
mov
mov
insb
lret
frstor
rcrb
iret
fsts
out
sbb
and
xlat
push
in
and
or
pop
sti
fbstp
push
rorb
loope
ljmp
rolb
repnz
mov
sti
push
cmp
js
nop
mov
aam
mov
sti
cld
push
add
in
cwtl
mov
out
adc
sub
mov
cmp
movsl
xor
ficoml
mov
push
fbstp
xchg
cmp
fdiv
fistpl
in
mov
pop
sub
fsts
out
add
mov
jae
dec
and
push
push
inc
push
xchg
fwait
and
insl
pop
je
or
js
push
in
jae
cmpsb
js
daa
push
iret
cli
lret
mov
xchg
imulb
in
sub
addl
lods
pop
mov
ds
cmp
sbb
ret
cmp
jno
mov
push
rdmsr
kmovb
push
or
or
stos
add
dec
sbb
adcl
inc
lods
and
cwtl
movsb
sahf
sti
negb
arpl
cmp
pop
shlb
out
lds
fwait
xchg
sbb
lret
or
popa
out
pop
popf
push
jg
adc
add
sbb
ror
int
repz
jle
pusha
std
inc
add
out
push
add
addl
ja
fisttpll
xor
cmp
addr16
repnz
xlat
jo
adc
mov
out
subb
or
shrl
and
shll
stos
jle
das
mov
cmpsl
adc
xchg
cli
sub
enter
adc
inc
cmp
mov
xor
movsb
test
pop
xchg
push
xor
push
test
push
shlb
and
xchg
sbb
dec
mov
jno
in
sub
adc
and
xchg
lea
or
es
mov
in
cmp
repz
cmp
xor
ret
mov
gs
mov
jg
idivb
lea
cmp
adc
xlat
mov
inc
xchg
and
and
mov
sub
dec
sub
mov
insl
aas
std
enter
jno
adcl
movsb
or
adc
add
xchg
lret
mov
lahf
das
out
loope
aaa
mov
sub
jmp
mov
es
xorl
insl
lds
in
mov
ljmp
fisttpll
mov
push
cmp
iret
adcb
inc
adcl
mov
push
loop
nop
lods
xchg
jg
and
push
jno
jge
sbb
sbb
popf
negb
dec
into
xchg
outsl
push
jbe
xor
push
lods
inc
dec
inc
mov
fidivrs
into
stos
andb
ss
cmp
xchg
mov
pop
lods
adc
clc
ret
imull
jnp
mov
je
cld
imul
add
fwait
push
incb
push
ljmp
push
insl
pop
ljmp
daa
and
and
loope
dec
jp
pop
cmp
sbb
mov
test
jb
sbb
addr16
call
test
test
dec
addr16
xchg
iret
lret
out
mul
and
adc
pop
cmp
stos
jo
dec
insl
pusha
pop
subps
jecxz
aad
dec
pop
push
shlb
mov
dec
in
cmc
mov
cltd
subb
add
rcrl
push
pop
lock
ss
out
push
out
pop
push
and
daa
and
out
test
dec
out
icebp
jp
push
and
sbb
mov
inc
adc
push
nop
in
xor
call
cltd
adc
pushf
addr16
xchg
outsl
lret
out
mull
and
adc
pop
cmp
stos
jo
dec
insl
pusha
pop
subps
jecxz
aad
dec
pop
push
shlb
mov
dec
in
cmc
mov
cltd
subb
add
rcrl
push
pop
lock
ss
out
push
out
pop
push
and
daa
and
out
test
dec
out
icebp
jp
push
and
sbb
mov
inc
adc
push
nop
in
xor
call
cltd
adc
pushf
addr16
xchg
outsl
lret
out
mull
and
adc
pop
cmp
stos
jo
dec
insl
pusha
pop
subps
jecxz
aad
dec
pop
push
shlb
mov
dec
in
cmc
mov
cltd
subb
add
rcrl
push
pop
lock
ss
out
push
out
pop
push
and
daa
and
out
test
dec
out
icebp
jp
push
and
sbb
mov
inc
adc
push
nop
in
xor
xor
push
add
mov
sub
jmp
lea
push
lea
push
jmp
je
mov
jmp
shr
test
jle
jmp
push
xorl
push
subl
nop
nop
nop
nop
nop
push
addl
call
jmp
xor
mov
xor
jmp
add
jmp
mov
jmp
xor
jmp
mov
mov
xor
mov
jmp
mov
jmp
test
jne
jmp
and
add
add
jmp
test
je
call
call
jmp
pop
je
jmp
jle
mov
jmp
add
jmp
sub
sub
sub
add
mov
jmp
call
test
pop
lea
jmp
call
push
pop
cmp
mov
jmp
call
push
pop
cmp
jne
jmp
jne
jmp
nop
mov
mov
test
jmp
pop
pushl
call
jmp
mov
lea
sub
jmp
mov
jmp
nop
nop
push
push
jmp
mov
andl
push
jmp
pop
ret
nop
nop
nop
nop
nop
push
jmp
nop
push
push
push
push
jmp
and
mov
and
jmp
push
subl
add
jmp
mov
push
push
call
jmp
and
mov
movzwl
jmp
call
jmp
add
lea
mov
mov
jmp
push
subl
push
subl
push
jmp
and
mov
and
push
pop
cmp
jne
jmp
jle
mov
jmp
call
jmp
test
jmp
xor
mov
leave
ret
nop
nop
nop
nop
nop
popa
jmp
nop
nop
nop
nop
subb
pushl
pop
jmp
and
ret
push
jmp
je
push
jmp
nop
nop
nop
pushl
jmp
lea
jmp
push
jmp
nop
nop
nop
nop
nop
push
xor
mov
sub
push
jmp
shr
push
mov
jmp
mov
push
mov
mov
jmp
pushl
jmp
pushl
call
jmp
sub
add
jmp
mov
push
xor
push
addl
jmp
mov
mov
mov
jmp
cltd
pop
mov
idiv
jmp
test
jmp
and
test
jmp
incl
incl
push
lea
jmp
pop
jne
and
mov
nop
nop
nop
nop
nop
pop
ret
nop
nop
nop
nop
nop
push
pop
cmpl
jmp
push
pop
cmp
je
subl
jmp
push
call
jmp
je
push
addl
push
subl
call
jmp
test
jmp
shr
and
mov
ret
nop
nop
nop
nop
nop
test
je
jmp
mov
jmp
mov
jmp
test
je
jmp
xor
mov
mov
add
push
jmp
push
push
xorl
jmp
add
jmp
pushl
jmp
popa
jmp
jne
sub
decl
jmp
push
je
jmp
mov
jmp
nop
push
mov
xor
push
jmp
push
jmp
push
push
xorl
jmp
cmpl
jne
jmp
push
pop
cmpb
je
push
pop
jmp
call
jmp
mov
movl
mov
add
mov
jmp
nop
nop
nop
nop
nop
push
add
mov
jmp
jne
mov
movzbl
jmp
push
pop
cmp
jne
add
jmp
call
test
je
and
mov
jmp
push
pop
ret
nop
nop
nop
nop
nop
lea
push
jmp
lea
push
jmp
nop
nop
jmp
push
push
jmp
nop
nop
mov
add
sub
push
pop
cmpl
jmp
push
subl
push
addl
call
ret
nop
nop
nop
nop
nop
mov
jmp
call
test
jmp
push
pop
cmpb
jne
jmp
jne
addl
jmp
nop
nop
nop
nop
nop
nop
push
sub
mov
push
andl
jmp
lea
mov
jmp
pop
push
pop
cmpb
je
xorl
jmp
ret
mov
jmp
push
jmp
call
pop
jmp
add
pusha
push
pop
jmp
mov
jmp
mov
jmp
nop
nop
push
sub
mov
push
nop
nop
nop
nop
nop
mov
mov
xor
mov
push
jmp
push
push
xorl
push
subl
pushl
jmp
pushl
lea
jmp
push
pop
mov
call
test
jmp
jmp
addb
jmp
nop
nop
nop
nop
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
nop
pop
add
mov
pop
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
pop
or
adc
adc
adc
add
xor
add
sub
add
and
add
sbb
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
js
add
orb
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
sbb
add
cmp
add
pusha
or
adc
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
mov
add
mov
or
adc
or
adc
or
adc
or
adc
or
adc
or
adc
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
adc
add
sbb
add
sub
add
cmp
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
add
add
test
add
jmp
mov
mov
push
push
jmp
add
dec
jne
jmp
test
jne
mov
jmp
call
push
call
jmp
push
xorl
push
xorl
call
test
jmp
call
push
xorl
jmp
ret
call
jmp
call
test
pop
jmp
mov
xor
mov
mov
jmp
mov
test
jle
jmp
je
push
xorl
jmp
test
jne
mov
push
jmp
je
xor
mov
add
push
pop
cmpl
jmp
push
subl
call
mov
pop
jmp
jne
pop
push
jmp
leave
ret
nop
nop
nop
nop
nop
add
mov
popa
jmp
nop
nop
nop
nop
nop
xor
mov
add
jmp
push
pop
pop
lea
jmp
mov
jmp
push
call
lea
nop
nop
nop
nop
nop
push
call
test
je
jmp
pop
pop
pop
ret
nop
nop
nop
nop
nop
add
dec
jne
jmp
push
call
sub
add
pop
jmp
add
add
jmp
mov
test
jle
add
mov
jmp
lea
jne
mov
test
jmp
mov
test
je
jmp
push
pop
cmpl
jne
nop
nop
nop
nop
nop
push
pop
cmpl
jne
push
push
jmp
shl
shr
or
jmp
je
and
mov
jmp
jmp
mov
test
je
nop
nop
nop
nop
nop
push
addl
push
xorl
call
test
jmp
call
jmp
xor
add
dec
jne
jmp
sub
mov
mov
jmp
je
xor
mov
jmp
mov
jmp
call
jmp
pop
pop
jmp
jmp
andb
incl
jmp
nop
nop
nop
nop
nop
mov
push
pop
movzbl
jmp
movzwl
jmp
add
push
xorl
jmp
test
je
mov
jmp
pop
leave
ret
nop
nop
nop
nop
nop
incl
sub
mov
and
add
jmp
push
addl
mov
call
jmp
test
je
mov
mov
jmp
sub
add
shr
jmp
test
je
add
mov
jmp
jmp
mov
testb
jmp
je
test
je
jmp
mov
jmp
je
mov
push
addl
push
subl
jmp
add
push
pushl
jmp
and
pushl
add
jmp
mov
jmp
call
jmp
push
xorl
call
jmp
add
mov
nop
nop
nop
nop
nop
sub
jmp
test
jmp
test
mov
je
jmp
mov
mov
incl
jmp
je
add
jmp
push
subl
push
addl
nop
nop
nop
nop
nop
call
test
je
jmp
dec
jne
jmp
jmp
mov
add
jmp
mov
mov
jmp
mov
test
jmp
and
mov
lea
push
jmp
push
pop
jmp
jmp
jne
add
jmp
push
subl
jmp
jmp
push
pop
jmp
push
jmp
pushl
push
jmp
call
test
pop
jne
nop
nop
nop
nop
nop
push
pop
cmp
jmp
pop
pop
pop
jmp
call
pushl
mov
sub
jmp
jne
jmp
pop
jmp
pushl
push
push
jmp
lea
jmp
pop
pop
pop
ret
nop
nop
nop
nop
nop
call
add
push
xorl
nop
nop
nop
nop
nop
push
subl
jmp
push
call
nop
nop
nop
nop
nop
test
pop
je
mov
jmp
call
test
je
sub
mov
nop
nop
nop
nop
nop
pushl
jmp
and
mov
sub
jmp
push
call
push
pushl
jmp
mov
mov
incl
nop
nop
nop
nop
nop
dec
jne
jmp
jmp
push
call
add
push
xorl
nop
nop
nop
nop
nop
push
addl
call
jmp
sub
jmp
nop
nop
nop
nop
nop
sub
sub
add
mov
shl
jmp
push
addl
push
xorl
pushl
call
nop
nop
nop
nop
nop
push
pop
cmpl
jne
push
pop
cmpl
je
jmp
movzbl
nop
nop
nop
nop
nop
add
incl
and
mov
jmp
jmp
push
pop
cmpl
jne
jmp
lea
jmp
push
pop
cmpl
jmp
push
call
jmp
je
mov
and
lea
jmp
push
pop
cmp
pop
jb
jmp
add
push
push
subl
jmp
add
push
pop
cmp
jmp
pushl
push
call
mov
jmp
jb
add
push
pop
cmp
jae
jmp
test
je
pushl
jmp
sub
add
add
test
jmp
add
pushl
push
push
nop
nop
nop
nop
nop
call
add
add
testl
jmp
je
jmp
lea
jne
jmp
mov
jmp
call
push
pop
pop
jmp
and
mov
nop
nop
nop
nop
nop
sub
mov
jmp
pop
pop
leave
ret
nop
nop
nop
nop
nop
mov
nop
nop
nop
nop
nop
incl
nop
nop
nop
nop
nop
dec
jne
mov
jmp
nop
nop
nop
nop
nop
mov
mov
nop
nop
nop
nop
nop
mov
mov
incl
nop
nop
nop
nop
nop
incl
nop
nop
nop
nop
nop
push
pop
push
pop
cmpl
je
nop
nop
nop
nop
nop
mov
pop
nop
nop
nop
nop
nop
sub
pop
pop
nop
nop
nop
nop
nop
leave
ret
nop
nop
nop
nop
nop
add
add
stos
adc
add
add
cli
adc
add
adc
add
adc
add
adc
add
adc
add
add
add
add
push
adc
add
adc
add
add
push
add
add
add
add
add
add
adc
add
add
rclb
add
adc
add
add
add
add
mov
add
adc
add
stos
adc
add
add
cli
adc
add
adc
add
adc
add
adc
add
adc
add
add
add
add
push
adc
add
adc
add
add
push
add
add
add
fs
imul
add
add
je
jb
arpl
fs
jae
add
mov
je
popa
insb
inc
jb
gs
add
jb
jne
insb
push
jb
je
arpl
mov
je
popa
insb
inc
insb
insb
outsl
arpl
add
push
dec
inc
dec
xor
cs
insb
add
push
add
je
imul
add
push
popa
imul
inc
imul
push
imul
jae
cld
add
je
jne
jae
jb
outsl
jae
add
inc
push
outsb
jne
je
insl
add
inc
push
xor
cs
insb
add
sub
inc
jb
popa
je
inc
outsl
insl
jo
je
bound
inc
add
test
dec
imul
inc
inc
dec
xor
cs
insb
add
add
enter
inc
pop
into
pop
and
add
add
add
add
add
add
imul
loopne
push
add
add
add
inc
add
add
add
add
add
scas
lea
das
add
add
add
add
add
lahf
icebp
xor
add
add
add
add
dec
movsb
cmpb
add
add
add
add
add
xor
add
mov
pop
fisubrs
add
cmp
push
add
add
ficomps
es
jno
pop
inc
cmp
push
fwait
jg
push
nop
std
add
faddl
add
bound
mov
xor
ss
xor
sub
push
xor
js
dec
xor
repnz
xor
cmp
cmp
cmp
cmp
cmp
cmp
xor
cmp
push
add
inc
cmp
push
cmp
sahf
xor
or
jne
jnp
cmpb
ds
aaa
fnsave
out
in
xor
xor
xor
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
fdivrs
fdivrl
loopne
in
dec
cmp
jo
ja
jl
cmpb
cmp
cmp
or
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
add
add
add
xor
dec
xor
xor
xor
xor
push
xor
xor
add
add
xor
pop
es
pop
dec
jge
ja
jno
push
xor
or
sub
push
orb
je
insl
cmp
fs
or
sub
es
pop
dec
jge
ja
jno
push
fs
cwtl
stos
movsl
stos
scas
stos
pusha
jmp
sti
push
aam
add
inc
sahf
.byte
xchg
.byte
