mov
call
jmp
nop
mov
jmp
nop
push
xor
sub
pop
jmp
das
test
sub
orb
aas
jb
push
adc
sub
mov
push
xor
push
push
lea
mov
call
ja
es
les
outsl
sti
dec
sti
movsb
movb
movsb
mov
sbb
push
je
inc
add
enter
push
inc
add
lock
xor
int
bound
repnz
xor
rcr
adc
or
jo
cmp
idiv
add
movw
fnsave
je
cld
out
push
adc
lock
sti
out
push
and
push
in
repz
jle
add
xor
stos
dec
push
pop
xchg
jmp
adc
adcl
sbb
out
mov
insb
pop
test
pop
je
push
adc
push
mov
fistpl
lea
xchg
push
mov
jnp
fisubrl
dec
pop
pop
mov
pop
cmp
clc
xchg
mov
je
insb
sbb
jmp
mov
mov
add
movl
jl
pop
mov
pop
or
ficomps
add
mov
inc
add
mov
xorl
das
jnp
sub
shll
or
orb
fsubrl
add
fdivrl
dec
clc
mul
in
jne
pushw
je
call
inc
mov
mov
cmp
mov
sbb
sti
or
jo
and
xor
pop
push
icebp
push
mov
lock
ja
mov
mov
mov
pusha
mov
test
fadds
sbb
cld
jl
pop
jl
call
loope
dec
and
enter
jnp
mov
sbb
lock
push
in
fcoml
cmp
xlat
sub
adc
pop
adc
cmp
adc
pop
jle
push
sbb
xor
call
pop
add
and
sbb
into
adc
aaa
shl
pop
fs
into
out
push
pusha
add
leave
ret
nop
das
and
orl
test
inc
je
lock
nop
push
mov
push
pusha
mov
ss
cmp
mov
fisttps
push
push
push
push
push
mov
gs
call
push
addb
sbb
lock
pop
sbb
ret
sar
mov
ret
add
test
dec
test
aam
inc
je
cmpl
add
xor
adc
mov
mov
mov
mov
cmpsl
pop
pop
inc
fcomp
jo
mov
add
movsl
pop
pusha
das
pop
or
pop
dec
lea
std
pop
rorb
enter
loop
add
adc
adc
shl
mov
scas
sbb
add
push
sbb
cmc
arpl
data16
repz
add
add
ret
inc
or
inc
pop
lock
daa
xor
push
mov
dec
push
lods
lea
push
lea
cltd
pusha
push
pop
jo
xor
jne
add
add
add
int3
cmpb
or
rcrb
add
mov
push
insb
and
push
insb
sbb
add
xchg
adc
fcmovnu
lods
sbb
lock
jl
fstpt
loopne
addb
push
push
sub
lods
push
push
das
int3
cltd
jecxz
inc
adc
xor
push
or
cmp
je
mov
mov
mov
mov
ja
filds
sbb
sbbb
push
push
imul
incb
add
pop
pop
sti
loope
setp
or
cmp
pop
and
idivb
jb
mov
add
adc
out
dec
shrl
xor
mov
mov
add
sub
jne
push
ret
inc
mov
or
jo
shll
jecxz
adc
adc
cmp
adc
inc
nop
mov
adc
push
xchg
push
adc
adc
adc
xor
push
outsl
xor
inc
out
aaa
push
mov
and
dec
xor
mov
sahf
lods
jo
add
or
xchg
lods
loopne
inc
pushf
ds
add
inc
push
or
pushf
mov
push
mov
or
sbb
or
sbb
mov
pop
mov
lret
push
in
xor
adcb
xchg
js
cmp
orl
sbb
jmp
add
cmp
jne
js
cmp
je
cwtl
pop
orl
pop
fwait
pop
pusha
xchg
dec
push
pusha
ja
int3
sahf
or
adc
into
cs
inc
mov
pop
or
test
pop
dec
call
or
pop
imul
or
pop
iret
push
fmul
cs
pushf
dec
jmp
out
lea
jae
in
int
into
pop
jne
loopne
in
jg
add
push
mov
or
adc
adc
sub
rolb
lcall
test
je
movzbl
cmp
xlat
jne
add
add
imul
push
cmp
and
sub
je
xor
sbb
enter
adc
mov
sete
cmp
sarl
pop
add
cmp
sbb
clc
cmp
jae
mov
push
push
mov
add
push
fwait
xor
cli
inc
clc
mov
add
decl
xchg
sub
neg
pop
sbb
and
adc
cmpsl
lret
lea
movsb
pop
in
dec
fisttpl
jne
push
cmp
xor
mov
out
cmpsl
push
pop
or
sub
mov
and
and
mov
push
in
hlt
clc
sti
push
pop
jns
inc
cmp
repz
jmp
bound
dec
aas
cmp
out
pop
loope
push
xor
cmp
jne
cmp
or
mov
loopne
fisttpll
or
mov
xlat
js
jo
sbb
loope
mov
sbb
ss
sar
enter
je
push
add
jl
shrl
add
shr
or
decb
mov
add
repnz
push
call
imul
cmp
sub
push
aas
push
rcrl
push
pop
pop
je
mov
inc
ja
cmp
addr16
mov
int3
push
jo
pop
jne
push
in
inc
xchg
std
stc
sahf
enter
xchg
je
pushl
scas
dec
push
or
incl
add
stos
stos
xor
add
mov
sbbb
cs
jmp
cmp
je
jno
push
inc
cld
pop
jmp
call
rcll
call
sub
rolb
and
push
pusha
mov
push
cmp
sbb
shr
sbb
dec
add
cmc
jae
push
cmp
pop
inc
mov
andl
sbb
lds
rcrb
adc
or
push
push
and
inc
in
jge
fdivl
or
and
imul
in
dec
gs
add
es
push
push
ja
gs
rclb
push
and
mov
xchg
push
push
sbb
pop
or
jmp
mov
movl
push
or
cmp
jecxz
ret
arpl
sub
mov
movsl
mov
out
stc
mov
data16
popa
inc
sbb
sti
or
push
aaa
and
pop
in
mov
outsb
push
add
add
pop
adc
frstor
cld
clc
or
or
pusha
or
add
cmpsb
or
sarb
add
filds
adc
jo,pt
dec
push
scas
adc
inc
dec
add
out
or
lods
leave
cmp
or
mov
push
loop
or
leave
ret
pop
or
mov
cmpw
rclb
incb
add
cmpl
xor
sbb
add
inc
out
dec
adc
enter
adc
or
xor
xor
filds
or
jbe
jl
sbb
stc
jb
mov
add
pop
or
fnstcw
sti
jb
ret
cmp
jb
mov
and
dec
or
adc
push
les
repnz
pop
add
mov
in
mov
ret
push
or
pop
jb
cmpsl
push
sub
pop
push
dec
sub
pusha
inc
cmovl
inc
or
orb
or
jg
mov
das
sarb
or
pop
mov
mov
or
jne
mov
test
je
mov
jg
outsl
sti
inc
inc
inc
inc
ljmp
in
dec
pop
dec
dec
dec
mov
and
dec
mov
xchg
and
or
mov
je
andb
outsb
dec
jne
clc
divb
mov
adc
jl
sub
out
insl
test
add
addb
and
xchg
je
cltd
jmp
outsl
add
jge
movsb
jg
push
and
mov
or
jmp
mov
clc
popa
das
sbb
es
pop
push
mov
add
outsb
or
movsb
pop
ficoml
jb
mov
mov
and
lock
lea
call
or
jbe
stos
lahf
pop
jmp
dec
adc
sbb
mov
add
pop
push
dec
sub
outsl
push
loopne
push
roll
add
test
mov
inc
add
jb
mov
inc
add
aas
insl
and
push
adc
sarl
cli
jl
cmpb
fld
loopne
cmp
cwtl
inc
pop
jo
mov
push
dec
fs
push
fcomps
ja
jo
mov
jne
movsl
subps
nop
push
xlat
add
data16
push
add
daa
push
dec
jl
add
lods
xor
pop
xor
test
repz
jle
lahf
mov
je
cmp
jmp
push
lock
imul
push
jmp
lea
adc
out
js
add
push
xchg
comiss
and
xor
clc
cmpsb
pop
mov
or
enter
les
leave
or
pop
push
cld
out
fsubrp
sub
shl
and
or
add
inc
aaa
mov
clc
cmp
jb
mov
and
sahf
mov
test
call
pop
dec
mov
and
push
pop
cld
mov
sbb
test
mov
inc
xor
nop
adc
repz
or
insb
and
add
call
out
sbb
pcmpgtb
cld
jne
imul
push
inc
sbb
cmpsl
add
jae
and
test
xor
je
or
lods
dec
cld
lcall
je
ja
mov
ss
pop
mov
stos
jg
movl
cld
movl
insl
flds
cmp
inc
pusha
cmp
out
leave
insl
inc
sbb
adc
add
cmp
les
fdivr
push
ja
imull
dec
das
das
pop
out
sub
inc
nop
aas
jnp
cmp
and
cmp
loopne
and
xchg
shr
push
or
call
push
int3
add
into
push
dec
test
mov
sub
dec
adc
push
adc
out
and
adc
cmpsl
inc
loop
test
jne
mov
insb
dec
cmpl
push
sbb
push
cmc
jmp
fisubrs
or
sbb
fsubs
outsl
jmp
xchg
pop
negl
into
or
cmp
jae
roll
nop
xor
cwtl
mov
adc
and
orb
sbb
pop
add
and
adc
and
push
sti
dec
push
sbb
or
adcb
pusha
rcrl
inc
lds
loopne
lock
xchg
movsb
push
in
push
mov
sub
int
jmp
in
jl
xor
xor
add
pop
xchg
cmp
in
or
mov
sbb
jmp
movswl
test
jne
mov
mov
dec
movsl
loope
or
adc
push
adc
sub
mov
popa
outsb
push
and
jns
pop
es
outsl
cmp
in
jmp
mov
mov
mov
push
jb
cmp
inc
shl
mov
hlt
push
popf
call
cmpsl
adc
mov
push
aaa
push
movsl
jl,pt
rclb
les
push
mov
sub
outsb
push
and
push
nop
mov
cld
push
sub
ret
in
jno
mov
xor
jo
clc
adcl
cld
add
or
cmpsl
sbb
push
jo
mov
jno
movl
dec
nop
pop
ret
dec
leave
sub
das
sub
pop
test
xchg
pop
es
and
push
imul
xchg
dec
clc
and
mov
add
movzwl
pop
add
add
test
aaa
test
in
clc
or
mov
jbe
push
jmp
lea
xchg
jecxz
enter
dec
and
adcb
faddl
and
fidivl
or
mov
cmpb
jmp
and
je
sub
push
adc
shrb
inc
fsts
pop
sti
xor
call
shr
cs
flds
jecxz
pusha
cli
das
lcall
cwtl
insb
inc
movsb
push
jns
insb
inc
or
insl
lahf
loope
or
iret
inc
xor
cmpl
xchg
shll
lods
jbe
mov
mov
cmp
sbb
neg
orl
roll
inc
sub
adc
dec
imul
xor
or
xor
pop
mov
adc
add
jb
xchg
xchg
hlt
add
addr16
cmpsl
aam
xlat
inc
xchg
dec
and
jmp
cmpsb
xor
loopne
sti
sub
jmp
and
clc
int
inc
xchg
nop
pop
int
xchg
repnz
pushf
sbb
aaa
xchg
push
out
and
addb
cmp
or
push
ja
mov
sar
sbb
add
and
mov
cmp
push
cmp
push
idivl
mov
jno
and
and
xchg
ret
in
xchg
mov
cmpsb
cmp
sub
and
jl
aaa
sbb
mov
pusha
xchg
sub
jmp
mov
ja
adcb
call
or
fadds
lea
pop
push
shrb
shll
in
rorl
mov
data16
inc
push
pop
cld
add
rol
jae
cs
sbb
and
loopne
clc
sbb
inc
imul
stos
lock
stc
pop
sub
sub
jae
sbb
in
in
faddl
out
in
jnp
push
out
jne
mull
in
add
and
push
test
int
jb
in
sbb
subl
je
inc
jl
sbb
jle
mov
cmp
pop
inc
test
inc
lea
sbb
push
mov
push
or
inc
or
sbb
sub
and
mov
je
or
cmp
jno
and
fidivl
neg
sbb
push
mov
incl
and
and
cmp
idiv
and
sbb
imul
pop
aaa
adc
jmp
mov
movsl
cltd
inc
imul
loope
int
mov
cmc
push
js
sti
pop
pushf
es
jp
sbb
pop
fadds
adc
shl
cli
pushl
rolb
inc
repnz
lock
loope
xchg
mov
cmp
mov
enter
loopne
loope
andl
shl
mov
push
fcoml
ret
repz
shll
and
sbb
sub
andb
sbb
insb
mov
or
inc
push
xor
push
nop
or
lods
and
pop
or
xchg
mov
gs
pusha
and
loopne
and
cs
mov
insb
loopne
mov
imul
jmp
cmp
mov
xor
sub
sub
adc
add
adc
sbb
sbb
cmp
pop
cmp
cmpsl
in
insb
push
divb
push
or
and
push
cld
movsb
stc
xchg
pop
cld
push
mov
cld
mov
nop
and
imul
xchg
cli
hlt
cltd
or
add
daa
cmp
or
push
das
je
cld
xchg
or
imul
mov
dec
in
mov
clc
hlt
inc
scas
sahf
xchg
inc
xor
and
ja
lods
inc
insl
int3
es
in
xchg
pushf
int3
es
sbb
jmp
inc
sbb
dec
push
jno
ret
and
xor
pop
or
pop
push
or
in
mov
inc
inc
and
sbb
adc
xchg
scas
fsts
int
hlt
mov
inc
pop
xchg
hlt
fldenv
movl
cmp
cmp
ljmp
xor
and
scas
mov
in
inc
stos
inc
sbb
xchg
ret
scas
mov
pop
repnz
sub
test
dec
push
cld
push
inc
xor
or
and
ret
add
into
push
enter
and
and
push
cmp
and
push
cmp
jg
pop
mov
int3
je
sub
mov
jge
gs
ret
nop
int3
movzbl
jecxz
add
sub
and
cmp
and
fs
aas
aas
jno
adc
enter
cwtl
rolw
dec
push
dec
in
enter
sbb
fiadds
incb
pop
inc
cs
adc
dec
cmp
push
lret
mov
hlt
jecxz
mov
scas
or
xchg
ds
lock
in
lea
mov
add
mov
push
call
fbstp
movsb
xchg
rcl
sbb
xchg
scas
loopne
fsubs
cmp
shrb
bound
adc
movsb
sbb
pushf
cmp
and
je
adc
dec
rclb
in
ljmp
add
aaa
in
pop
in
or
adc
es
cmpsl
shlb
test
xlat
repnz
loope
les
int3
inc
int3
push
call
mov
mov
jl
adc
and
jb
insb
mov
mov
rol
int3
mov
xchg
andb
int3
int3
xchg
popa
pop
xor
adc
andb
orl
dec
mov
sbb
dec
xor
xlat
jle
adc
xor
in
int
and
pop
and
filds
nop
add
ret
mov
or
pop
cli
push
loopne
jo
sbb
stc
loopne
pop
push
sbb
mov
dec
pop
sub
and
jns
into
pop
aas
inc
push
or
dec
shrl
stc
out
cmp
lahf
imul
push
call
xorl
add
sub
pop
fidivs
mov
cmp
insb
mov
xchg
nop
jne
adc
mov
push
loopne
add
aam
mov
xchg
mov
cmp
jge
mov
inc
or
jne,pt
insb
rcl
fdivrs
sbbl
mov
cmpsl
or
xchg
add
dec
pop
mov
push
out
cmpsb
sbb
jge
pop
pop
in
fstpt
js
test
sbb
les
sbb
xchg
inc
or
test
pop
push
js
sub
mov
mov
shlb
adc
sub
fsubl
sbbl
dec
popa
outsb
shr
jmp
rolb
mov
cld
test
xchg
sarl
test
je
jmp
jmp
lcall
lret
sbbb
jmp
push
lret
xor
mov
add
push
pop
ret
add
and
inc
or
xorb
push
test
push
test
lcall
jbe
insb
mov
push
popa
sub
int
or
cltd
lods
mov
jmp
and
andb
inc
mov
jmp
fcmovnb
or
inc
adc
imul
out
push
mov
mov
cs
push
hlt
jmp
push
or
add
cmp
repz
mov
mov
cmp
xor
xor
push
repz
cmpsb
test
or
jno
mov
and
push
adc
ds
dec
daa
mov
hlt
es
push
in
and
mov
rcll
dec
movsb
icebp
hlt
pop
pop
fidivrl
and
in
cs
jle
or
add
ret
bound
loopne
test
int
pop
and
xchg
call
or
jmp
add
movsl
xchg
cmp
je
jnp
popa
or
loop
jmp
inc
es
jmp
adc
sbb
scas
push
add
out
pop
add
push
sub
lret
pop
jnp
pop
mov
push
jp
cmp
in
or
mov
jmp
call
sbb
clc
mov
jmp
dec
in
dec
dec
push
inc
dec
dec
sbb
xorb
push
push
xor
pushf
repnz
test
jmp
mov
imul
das
clc
setne
dec
and
push
inc
adc
push
test
out
pop
dec
rolb
loop
pushf
loopne
inc
push
adc
and
push
xchg
xchg
leave
or
lea
leave
js
imul
cmp
mov
adc
lcall
dec
fisttps
mov
inc
cmp
jb
cli
inc
loope
cmp
push
mov
pushl
fnstcw
add
push
test
pop
lahf
inc
inc
imul
push
clc
add
arpl
adc
das
loope
push
scas
jo
mov
test
mov
add
fisttpl
lea
push
je
pop
ret
mov
cmp
ja
sub
mov
popf
les
mov
ret
pop
aaa
outsl
pop
xchg
out
adc
adc
mov
mov
je
mov
into
cwtl
cmpsb
insl
negb
add
or
jb
push
pop
aad
add
sub
push
adc
clc
shr
sub
push
xlat
jl
and
dec
rcll
add
add
jb
xchg
shlb
sub
push
mov
lock
and
push
sub
jne
add
add
dec
loop
clc
repnz
sbb
pop
arpl
cs
nop
out
add
sbb
inc
xorl
cs
or
lock
push
in
jle
xor
cmp
jbe
mov
mov
test
je
lret
aas
test
fldcw
dec
inc
cmp
loop
pushl
pop
in
mov
nopl
xor
add
loopne
out
mov
data16
mov
or
sub
mov
mov
clc
pop
pop
ja
xor
fsubrl
jl
and
sub
push
popf
sahf
addr16
adc
and
cmpsl
xchg
fucomp
shr
cld
push
daa
test
std
or
push
lret
dec
cmp
jbe
fstp
jne
mov
push
inc
inc
imul
jmp
mov
mov
and
repnz
cmp
xchg
push
andl
sub
addr16
pushf
faddl
add
adc
rol
push
insb
filds
popa
je
ljmp
or
inc
into
mov
jmp
mov
jbe
sbb
into
and
mov
cmpl
je
popf
push
subb
or
fstpt
addr16
cld
movl
or
add
xchg
enter
jecxz
arpl
pop
mov
fs
mov
sahf
pusha
push
or
ss
cwtl
lcall
andb
repnz
cli
aad
jne
sub
sar
mov
jo
and
or
sub
and
add
faddp
sbb
add
je,pn
jbe
adc
adc
iret
pop
hlt
pop
add
fisubrl
xor
mov
jbe
dec
lock
enter
pushf
mov
pop
jp
cmp
cs
add
ret
xlat
mov
cmc
mov
pop
test
sbb
scas
or
or
aaa
in
pop
and
inc
xor
fimull
pop
adc
push
loopne
loope
pop
je
mov
jae
test
cmp
or
lcall
and
xor
or
je
or
int
test
jne
push
push
push
ss
xor
loope
sbb
mov
add
cmpsl
dec
test
or
repnz
add
stos
or
jno
dec
movsb
add
add
mov
lahf
sahf
icebp
outsl
push
sbb
iret
mov
jnp
fbld
js
divl
cmp
mov
mov
fcoms
sub
sarl
lock
es
mov
arpl
nop
bound
rcrb
cld
jno
xor
dec
jo
movsb
nop
sub
lods
js
dec
or
sbb
mov
xor
or
fiaddl
mov
cmc
or
arpl
into
or
cld
loope
punpckhbw
inc
insl
xor
mov
push
lea
pushf
pop
jne
push
pushl
sub
push
jne
mov
cmp
je
lea
sahf
lahf
cmp
mov
mov
cmp
push
int3
sub
pop
sub
lods
loopne
loop
cmp
jne
inc
outsb
ret
sbbl
ja
mov
hlt
jl
js
je
hlt
ja
clc
loopne
pop
inc
cmpb
mov
jne
jno
xor
ja
ret
sbb
sbb
daa
addr16
shlb
push
in
xchg
call
mov
imul
mov
mov
lea
lock
xor
mov
fists
outsl
test
push
mov
les
push
dec
sub
std
push
adc
mov
incl
sbb
jae
adc
pushl
ret
icebp
pop
ret
addr16
xor
cmp
jp
jp
sub
test
jne
push
jne
enter
and
dec
cmp
push
int
adcb
jg
or
add
shlb
mov
mov
ficoml
dec
lret
push
mov
add
subb
clc
push
cmp
outsb
hlt
fldt
push
cmp
xor
nop
pop
xchg
subl
mov
mov
inc
and
cmp
add
int
dec
cmp
jl
pushl
mov
or
mov
pop
and
inc
jns
mov
sub
sbb
je
dec
xlat
pop
and
inc
mov
push
and
ret
nop
test
vmresume
aas
lock
aaa
pop
jmp
btc
insl
xorl
and
jno
pop
xor
push
fisubrl
movb
mov
mov
push
sbb
or
add
lods
jmp
or
adc
mov
cmp
adc
cmc
lret
jo
push
inc
or
mov
push
aas
and
aaa
xor
mov
jmp
inc
call
adc
aam
push
add
cmp
add
mov
push
pop
mov
ret
enter
or
mov
hlt
sbbl
daa
push
es
roll
add
inc
rcrb
mov
adcl
xor
jo
cmpl
mov
xlat
or
inc
scas
cmp
add
and
jne
loop
addr16
xor
jmp
mov
mov
das
ss
sbb
jg
and
in
je
shll
jl
pop
adc
cmp
or
add
or
cmp
pushf
push
mov
add
popa
int
mov
stos
shlb
cwtl
andb
outsb
push
aas
mov
jmp
pop
sbb
cmp
je
or
push
sub
xlat
sub
push
jo
pop
shlb
cs
xor
addb
nop
cwtl
mov
adc
xor
aas
xor
sub
stos
cmp
rorl
sbb
mov
cmp
cmp
push
adc
cmpl
pop
jp
in
loopne
cmp
adcb
mov
cmpsb
or
std
in
test
je
pop
mov
cmpsl
ss
adc
or
and
dec
lods
addr16
pop
pop
das
mov
bound
mov
rolb
cs
xor
rorl
fistpll
xor
dec
jo
es
je
xchg
dec
clc
imul
add
mov
ret
ja
mov
mov
push
je
xchg
in
jb
movsb
rclb
cmp
aam
cltd
ss
push
dec
add
daa
pop
pusha
mov
mov
hlt
inc
das
pop
push
cltd
or
testb
pop
out
push
orl
ss
or
push
sbb
pop
push
adc
stc
ficomps
cmp
xchg
adc
cmp
nop
adc
sub
insb
cmp
pushl
pop
push
mov
xchg
in
pop
insl
xor
inc
jb,pt
leave
or
jle
je
pusha
and
jmp
pop
xor
or
dec
je
jns
aad
dec
lahf
cmp
mov
pop
xor
clc
or
or
sub
or
or
ret
jmp
inc
cltd
mov
fcoml
push
xchg
cmp
in
push
addb
out
dec
daa
cwtl
cmp
add
xchg
idivb
int3
fildll
mov
xor
test
or
adc
jmp
fimuls
mov
aaa
es
sub
sbb
mov
jno
mov
adc
inc
add
add
add
lret
in
pop
mov
mov
aam
pop
inc
inc
or
jmp
scas
dec
inc
mov
scas
je
push
inc
pop
pushf
mov
loopne
mov
push
cmc
cltd
cmp
mov
aad
adcl
or
inc
inc
jbe
inc
out
mov
or
lock
adc
ret
inc
lahf
test
mov
mov
jg
add
jno
and
jbe
jae
outsl
movsb
jl
add
or
and
sarl
aaa
mov
call
push
or
pop
push
and
pop
sbb
jae
xchg
sbb
xchg
push
mov
lahf
push
call
lea
inc
loopne
sbb
aam
jmp
sub
js
push
adc
sub
loope
xchg
cmp
pusha
mov
pop
sbb
sbb
add
push
lds
pop
jl
popa
jbe
push
mov
test
filds
adc
jbe
pop
call
cmp
mov
mov
movl
test
outsb
and
mov
cltd
mov
in
adc
stc
icebp
push
les
add
or
add
aas
sub
fstpt
test
and
dec
inc
inc
hlt
lea
xor
mov
andb
cltd
sti
imul
je
fwait
push
mov
data16
ss
pop
jne
or
xor
cmp
rcll
cmp
pop
pop
inc
jb
or
xor
jne
std
outsl
push
test
imulb
inc
add
mov
lock
push
add
push
push
jmp
lods
sub
inc
cmp
inc
push
lea
cmp
push
lock
push
xchg
in
or
xchg
adc
mov
jmp
mov
xor
mov
aam
cmp
orb
pop
ret
incl
mov
sar
push
sbb
rcll
test
adc
lret
das
cmp
mov
js
sbb
lds
mov
dec
dec
out
scas
les
test
ljmp
outsl
inc
cmp
and
shl
push
pop
sub
shl
or
inc
cmp
mulb
outsl
jl
clc
pop
jb
push
mov
pop
js
push
ret
subl
adc
out
inc
outsb
rcll
dec
pop
mov
out
hlt
mov
push
push
fsubr
pop
nop
in
nop
ljmp
js
fstl
int
and
cmp
mov
inc
popl
rcr
add
loopne
pop
xor
push
loope
xchg
lock
test
jmp
push
movsl
loop
dec
push
fldl2t
pop
clc
or
fcmovu
jle
pop
push
xor
cmp
bound
cmp
sub
nop
cmp
loopne
cmp
pop
adc
in
dec
push
movsb
mov
push
xchg
mov
adc
popf
shrb
jle
test
mov
icebp
stc
lods
scas
mov
popf
fdivl
scas
cmp
inc
mov
enter
pop
int3
jns
adc
ret
sbb
in
arpl
call
and
dec
push
inc
jl,pn
ds
dec
sarl
mov
in
repnz
cmc
push
scas
stos
push
bswap
cmp
rolb
ds
push
xchg
mov
inc
fadds
jbe,pt
add
push
push
push
add
jo
cmp
add
test
test
out
aaa
dec
sub
cmp
fsubs
jo
inc
lods
jne
ljmp
xor
mov
adc
push
mov
push
cmpsb
sbbb
mov
mov
cmp
or
dec
push
aas
mov
jne
adc
push
fisubrs
loopne
adc
mov
mov
sub
sti
add
sahf
pop
mov
push
push
dec
enter
jecxz
ds
rcll
cmp
aaa
rclb
gs
lock
lods
add
call
inc
outsl
mov
xchg
movsl
inc
nop
movsb
cmp
add
sub
add
pop
jnp
mov
xchg
pop
movsb
test
pop
mov
mov
push
out
and
into
lods
jmp
movsl
adc
mov
clc
and
sarl
mov
rol
cltd
mov
lods
jl
cmpb
testb
mov
jmp
push
mov
or
cmp
sub
mov
push
jmp
mov
lods
outsl
sub
or
sub
arpl
notl
sbb
sub
scas
or
adc
xor
inc
dec
mov
push
int3
pop
jbe
mov
cmp
jmp
cmp
pop
daa
les
jge
jmp
lods
jne
push
lcall
dec
pop
xor
pop
loopne
je
and
cmp
jae
test
sti
or
dec
fimull
mov
pusha
adc
or
ror
pusha
inc
rcl
mov
mov
cltd
mov
in
jmp
loope
fidivrs
cli
mov
or
mov
out
adc
enter
fmuls
dec
jbe
pushl
mov
cld
add
mov
cmp
inc
cmp
lret
jb
imul
dec
xchg
std
orb
sarb
inc
outsb
jbe
adc
test
mov
cmp
dec
add
push
mov
mov
std
dec
mov
push
push
bound
loopne
mov
xlat
cmp
jb
push
xor
in
xchg
or
shr
jecxz
mov
add
and
stos
mov
mov
rcrl
jb
scas
popf
cmpb
mov
outsb
rorl
cmp
xchg
or
into
inc
push
add
cmp
xor
sub
sbb
scas
and
movsbl
aad
pop
mov
lods
inc
push
cltd
sub
lea
xor
cmp
jecxz
les
ret
push
or
fmulp
push
xor
clc
mov
ret
cmp
adc
or
and
add
push
fimuls
sbb
jmp
adc
or
or
shl
mov
fldt
pop
mov
mov
push
nop
jl
fimuls
outsb
data16
adc
inc
test
push
aam
decl
push
jmp
test
je
sub
pop
cld
gs
cmp
push
sbb
push
jbe
jmp
loop
in
adc
inc
negb
call
jmp
push
pop
dec
hlt
xor
and
test
jbe
in
adc
pop
cmp
pop
jp
add
testl
stos
in
in
or
add
add
test
je
pop
arpl
inc
mov
cmp
add
sbb
and
xor
shll
xor
dec
lock
and
shlb
and
mov
push
cmp
sub
sbbl
xchg
cmp
pop
xchg
in
sbb
sbb
push
sbb
push
fistl
adc
nop
sbb
dec
test
mov
push
inc
cmp
and
fs
push
cmpb
insl
mov
jle
je
ds
sbb
clc
sbb
xchg
je
mov
insb
sub
jbe
inc
adc
fbld
sub
dec
jmp
divl
jo
sub
inc
sbb
pop
or
cmp
cmp
loope
pop
pop
mov
hlt
std
ret
or
sbbb
mov
frstor
hlt
js
or
add
and
sbb
test
lods
xchg
mov
daa
push
inc
push
push
hlt
std
push
xor
mov
lock
pop
ret
lock
notl
gs
cmp
out
jmp
or
and
adc
or
std
mov
xor
pop
fwait
divl
adc
int
add
xor
cmp
xlat
inc
das
or
push
jmp
lods
imul
xlat
jne
inc
adc
xor
jecxz
and
stos
xor
mov
push
loopne
fdivs
orb
push
xor
loope
add
jo
add
add
outsb
loopne
cmp
sarb
shlb
test
test
orb
cmp
mov
adc
sbb
push
pop
mov
fistl
sbb
mov
sbb
add
insb
pushl
test
jmp
loope
mov
sahf
push
add
cmpl
cmpsl
fcoms
loope
cld
faddp
inc
cli
adc
push
inc
push
inc
cwtl
cltd
lock
sub
and
add
and
mov
test
mov
popf
push
pop
movsl
add
outsl
jo
add
push
pushf
fs
cmp
xor
push
cld
fstl
push
cmp
not
add
cltd
bound
jbe
cmpsl
out
adc
lock
jp
sbb
hlt
test
cmpsl
lret
adc
mov
ror
mov
dec
mov
pop
jge
adc
cmp
inc
clc
jmp
pop
jmp
adc
sbb
ds
adc
scas
jle
aas
cmp
push
add
pop
test
jmp
adc
adc
push
add
push
mov
aaa
insb
and
gs
mov
daa
push
dec
jle
lock
pop
lahf
jne
mov
sub
call
inc
inc
inc
nop
std
push
orl
sarb
ret
mov
es
add
push
mov
lods
outsl
mov
mov
notb
or
fdivrs
ljmp
or
sub
add
popf
mull
xorb
sub
pop
xchg
mov
mov
nop
call
inc
sbb
or
pop
adc
pop
enter
dec
jo
pop
xor
fmuls
pop
pusha
mov
out
dec
testl
hlt
cmpsb
pop
sub
sbb
inc
cmpb
popf
add
das
movsb
mov
adcb
sub
jg
add
adcb
push
sub
jbe
sbb
pop
sbb
sub
dec
xchg
movsbl
or
inc
rclb
mov
adc
shlb
inc
adc
in
sub
ja
push
pop
mov
loopne
mov
pusha
sbb
in
shlb
push
adc
and
and
loopne
and
aam
cld
xor
testb
js
lahf
xchg
sti
push
push
sbb
arpl
rol
test
fucomip
scas
in
mov
jl
push
push
xorl
cmp
inc
or
in
sub
fs
push
jecxz
dec
xor
jne
pop
push
bswap
gs
fisubrs
arpl
push
cmp
pop
in
ljmp
push
popf
cvtpi2ps
nop
xor
cmp
stc
imul
pop
mov
repnz
inc
je
mov
leave
cmp
cmp
pop
stos
inc
js
repnz
fdivr
sbb
fmuls
adc
inc
pop
and
pop
or
ficomps
ret
xchg
pop
sbb
test
xor
in
mov
sbb
enter
imul
mov
repnz
add
dec
fs
xor
repnz
nop
cld
pop
das
icebp
ss
nop
dec
hlt
lahf
cmpb
mov
mov
and
sbb
mov
js
push
orb
cltd
mov
sbb
xor
inc
xor
push
inc
jbe
or
push
sti
fistps
lea
mov
mov
mov
data16
scas
test
call
dec
dec
pushf
inc
and
push
out
and
insb
sub
aam
jge
stos
sarb
sub
mov
push
inc
es
pcmpgtb
icebp
cmp
jg
push
sub
ret
fwait
lock
mov
ror
and
push
faddl
dec
enter
mov
ja
add
inc
in
inc
add
les
loopne
push
and
xor
sbb
or
into
jl
push
insb
push
pop
daa
ret
xchg
clc
push
jle
push
or
xor
in
sbb
clc
mov
or
leave
mov
cmp
arpl
hlt
sbb
mov
testb
ficompl
je
xor
add
ja
jno
in
and
lahf
add
mov
push
cmp
inc
push
imul
fsubrp
jge
mov
mov
andl
shlb
push
dec
push
or
aaa
xor
adc
mov
insb
sub
dec
loop
cmpb
lods
xchg
adc
sub
or
sub
idivl
mov
or
xchg
outsb
data16
or
push
push
add
cmpsb
sbb
nop
pop
shr
and
sbb
inc
add
pop
loopne
div
push
adc
mov
ret
cmpsl
push
or
add
push
push
movaps
dec
cli
sbb
bound
or
out
cmc
cmpl
sub
jne
dec
inc
or
les
aad
rcr
cld
loop
adc
cmp
add
push
pop
pop
xlat
pusha
and
sub
adc
sarb
xchg
mov
push
sub
push
mov
xor
inc
adc
js
add
in
sbb
mov
inc
push
sbb
jne
loopne
push
and
sub
lods
or
enter
pop
shrb
ret
das
andb
xchg
sbb
jns
jo
push
push
mov
test
clc
inc
inc
cmp
testb
repnz
ret
je
jmp
push
pushl
add
pop
sub
sbbb
mov
push
clc
mov
push
push
push
sbb
mov
les
xchg
inc
das
movsb
sbbb
jl
jae
xor
call
shlb
or
loope
or
jne
inc
and
pop
in
jmp
sbb
add
xor
fistl
sbb
jb
lods
mov
sub
sub
nop
jg
loope
pop
ror
jne
add
out
xchg
mov
jp
sub
pop
outsb
mov
adc
das
xchg
or
push
pop
je
dec
pop
leave
push
inc
cmp
rcrb
call
repz
xchg
bound
inc
stc
xor
outsb
je
jae
fwait
xor
test
adc
testb
mov
push
mov
je
mov
mov
push
sbb
add
scas
call
jbe
cmp
adc
loopne
pop
out
jge
mov
test
popf
sub
movsl
mov
cmp
adc
dec
jmp
push
ret
push
dec
push
fstps
adc
out
add
popf
cltd
push
fcmove
mov
cltd
or
imul
pop
fsts
dec
dec
push
dec
pop
repnz
push
cmpsl
cwtl
push
aam
in
sti
fidivrl
push
add
pushf
adcl
inc
jo
pop
and
push
dec
mov
sahf
mov
out
sbb
test
or
nop
pop
push
mov
mov
int3
pop
scas
in
popa
jae
mov
push
fidivrl
testb
test
xor
mov
inc
inc
out
mov
movsl
inc
mov
ret
loop
daa
icebp
adc
mov
aas
loope
and
neg
scas
inc
jge
or
arpl
cmc
divl
sub
add
aaa
arpl
sbb
sbb
inc
mov
or
popa
std
jge
ret
add
add
push
mov
shrb
xchg
aas
cltd
pop
mov
loopne
pusha
lods
ja
jl
jo
cmpb
test
push
cmp
arpl
push
dec
andb
fdivr
aad
loop
sub
ret
jle
pop
push
inc
and
cs
or
icebp
xchg
sbb
cwtl
filds
dec
push
test
or
pop
test
jle
fs
lea
mov
add
or
dec
jo
stos
add
inc
push
loopne
and
iret
cs
hlt
pop
call
sbb
std
xchg
adc
lods
xchg
lea
mov
jo
cltd
inc
pop
int3
outsb
and
xchg
pop
cli
inc
adc
dec
sub
pop
out
test
push
or
loopne
sub
popa
int
lret
jecxz
addl
mov
aam
movl
push
sub
jle
xor
inc
test
incl
push
iret
je
testb
jnp
pushl
push
mov
and
cmp
ss
ret
push
pop
orb
in
icebp
lea
inc
fwait
mov
das
test
inc
scas
cwtl
pop
pop
jge
icebp
or
sub
push
mov
adc
xchg
or
hlt
inc
cmp
adc
in
cmp
and
cld
daa
iret
xor
lds
and
inc
xor
sbb
add
shlb
sbb
sbb
xlat
inc
stos
xlat
dec
and
popf
shrl
push
jmp
sub
inc
or
loop
fstl
xor
lods
js
aam
mov
js
in
sbb
cmp
aas
insb
subl
jo
inc
jne
insb
int3
pop
sbb
and
test
insl
sbb
xor
dec
inc
push
frstor
imul
ret
ret
sbb
inc
loope
imul
push
and
lock
push
adc
pop
decl
es
add
imul
cmp
sbb
pop
sub
pop
sub
push
das
adc
loopne
aas
sub
leave
sbbl
or
rol
jae
xlat
sbbb
out
push
sbb
push
js
out
add
adc
xor
fs
outsb
sbb
lods
add
hlt
ficoml
lock
jg
cmp
jae
push
push
and
pop
push
push
sti
loop
movsl
jno
jg
xchg
sbb
dec
pop
inc
in
push
movsl
push
lock
sbb
call
popa
lock
dec
inc
add
inc
or
mov
out
popa
push
and
xor
out
sbb
incl
lea
sub
popa
jmp
xchg
adc
cwtl
bound
xchg
out
pop
mov
fstpl
push
or
ja
and
lcall
orl
sbbl
dec
push
push
inc
cwtl
sbb
mov
push
push
mov
movb
or
loopne
or
aam
enter
pop
rorb
mov
pop
lods
mov
and
lret
repz
dec
clc
vmovss
xor
cmp
cs
mov
faddl
bound
bound
cmp
mov
in
pop
or
pop
sti
jb
cmp
jne
or
xor
pop
ss
pop
ret
jle
push
and
cmp
xor
and
and
out
lock
or
sub
inc
xchg
hlt
mov
and
in
push
and
es
xchg
or
mov
jo
out
and
dec
cs
push
and
mov
dec
cs
loop
out
mov
jne
loopne
or
cmpsl
sub
je
pop
and
imul
int3
cmp
fcompl
xchg
lret
xor
popa
pop
adc
or
ss
fisttpll
xor
fs
pop
xchg
adc
or
push
dec
insl
cmp
mov
inc
mov
push
push
add
dec
cld
faddl
add
pop
jbe
inc
or
dec
sbb
enter
cmp
js
dec
dec
clc
jae
jge
dec
ret
fs
mov
push
bound
test
push
sub
or
sub
cmp
cmp
push
cmp
dec
inc
adc
ljmp
data16
push
pop
sbb
mov
sbb
dec
xor
ss
or
inc
mov
lret
sbb
mov
out
adc
sbb
mov
pop
or
cmpsb
jns
sbb
movsb
pushf
mov
icebp
fs
sbbl
or
add
imul
cmp
lea
cmp
sbb
mov
xor
sub
push
orl
push
loopne
scas
test
adc
test
std
rcrb
push
mov
dec
push
dec
push
push
call
notb
enter
fnstsw
sbb
ljmp
jl
cmp
jecxz
movsb
or
in
push
iret
add
mov
aaa
stos
add
mov
mov
sbb
sbb
call
push
sbb
or
les
jmp
mov
or
and
sbb
lret
clc
adc
je
or
outsb
aam
mov
stos
push
add
cmp
or
ret
rorl
jo
lcall
mov
sbb
rolb
jbe
rcll
xor
inc
dec
inc
or
adc
cltd
mov
imul
sub
cs
cmp
adc
adc
mov
cmpl
nop
lcall
das
je
xchg
mov
in
sub
xor
pop
outsl
cs
lea
clc
add
pop
and
and
mov
fs
jmp
xor
enter
pop
aas
push
pop
loop
sbb
aas
inc
and
xchg
movswl
pop
inc
leave
aaa
lock
sub
ffree
js
add
sbb
rorl
or
pushf
sbb
xchg
scas
fisubrs
fldenv
cld
aas
test
cmp
je
cmp
jne
sub
xchg
lret
mov
jns
insl
ds
dec
or
cld
and
or
push
int3
mov
cmp
je
inc
pop
andb
icebp
mov
das
icebp
pop
mov
and
pop
mov
jg
sbb
mov
push
inc
add
push
out
sub
sbb
inc
sub
xchg
push
push
inc
mov
lds
mov
push
loopne
loopne
les
repz
pop
lods
push
and
xor
or
adcb
sub
inc
test
sbbb
sbb
cld
pop
push
ja
fistl
outsl
and
pop
fiaddl
sbb
loope
loopne
and
daa
lock
sbb
pushf
add
cltd
les
loope
cwtl
push
addl
and
and
mov
or
call
or
inc
adc
or
ficoml
inc
ja
adc
in
jne
mov
mov
or
inc
pop
dec
lods
cmpl
xor
push
lea
outsb
lods
push
jle
cmp
lock
dec
andb
xchg
es
mov
xchg
xchg
lcall
mov
pop
rolb
jge
pop
mov
xchg
mov
divb
movsb
jge
mov
jg
pusha
test
sbb
loopne
cltd
stos
gs
mov
loopne
xorb
mov
inc
hlt
lock
loope
loopne
andb
or
sbb
aas
cmp
and
cmpb
mov
aaa
icebp
push
sbb
mov
cmp
jne
and
inc
stos
push
repz
cmpsl
jl
jp
out
ss
andb
push
test
clc
movsb
or
xor
mov
stos
xchg
jo
insl
sub
pop
push
dec
movsb
sarl
push
mov
jle
jecxz
sub
push
mov
pop
jmp
mov
cs
pop
sbb
push
push
dec
cmc
push
inc
xchg
movl
bound
data16
push
ja
rclb
and
dec
inc
ret
hlt
adc
sbb
mov
jbe
adc
pop
aaa
xor
and
lock
stos
inc
adc
mov
ljmp
pop
xor
subb
mov
or
adc
out
loope
jmp
nop
cld
pop
dec
xchg
push
sub
fucomi
mov
mov
cwtl
insl
push
sahf
cmp
jno
push
jecxz
push
add
cmp
js
pop
mov
push
movsl
divl
loope
into
cmpsl
daa
mov
das
test
push
jb
push
push
push
adc
daa
sbb
adc
inc
mov
inc
mov
inc
and
adc
inc
mov
add
or
ret
cmp
repz
or
subb
sub
incl
mov
lock
orl
dec
mov
push
sarb
dec
sub
push
ss
out
add
jae
adc
mov
inc
or
add
push
movl
scas
xchg
add
jmp
cs
push
xor
ds
mov
sub
pop
pop
xor
add
daa
fs
jle
sbb
jo
aad
mov
mov
jbe
sti
push
jmp
mov
mov
adc
push
data16
add
ja
xchg
cmc
or
xor
pusha
aas
jb
pop
into
outsl
add
mov
and
add
pop
add
cs
in
mov
sarb
int3
ret
inc
pop
add
add
pop
sarb
pop
test
jbe
push
pop
add
les
inc
rclb
push
cmpsl
inc
fidivrl
xor
mov
outsb
jl
cwtl
cltd
es
rcrb
pop
sub
ss
mov
jnp
mov
daa
jmp
adc
pop
mov
stc
cmp
addl
dec
jae
mov
inc
lea
mov
mov
mov
dec
cmp
pop
in
mov
add
lahf
lahf
lahf
sub
mov
movsb
mov
sub
dec
hlt
mov
xchg
and
inc
mov
mov
repnz
and
mov
adc
or
insb
jle
mov
stos
and
lock
xchg
dec
jmp
addr16
pop
jno
outsl
xchg
push
or
lea
mov
cmp
or
cmpsb
push
jb
negb
movsb
adc
cmp
mov
iret
sub
dec
sbb
inc
sbb
jno
jne
iret
inc
add
jp
out
push
adc
call
cmpsb
sbbl
lods
xchg
aaa
xchg
and
adc
or
mov
subl
mov
movb
mov
xor
or
adc
idivb
xor
shlb
fiadds
and
mov
sbbl
mov
incl
and
cli
jge
push
loopne
loopne
loopne
mov
inc
repz
cmp
call
or
sbb
and
push
cmp
sub
xor
jmp
inc
cs
xchg
sbb
jg
fs
xchg
cld
sbb
inc
loopne
repnz
cs
inc
mov
sahf
addl
push
push
add
adc
adc
jns
adc
or
jl
xor
nop
add
jle
mov
pop
leave
or
test
push
cmpsl
je
clc
dec
or
pop
pop
ja
lea
rcrl
mov
mov
into
mov
and
in
mov
mov
fstpt
mov
push
sti
pop
cmp
sbb
pop
popa
pop
bound
cmp
shr
movb
mov
inc
cmp
jl
push
subps
faddp
movl
out
inc
sub
fdivrs
ss
popf
in
sub
push
cli
xor
push
push
outsl
pop
sub
dec
push
mov
adc
pop
cmp
jp
lods
repnz
cltd
add
pop
pop
inc
lea
adc
shrl
inc
test
adc
ljmp
pop
mov
lods
sbb
iret
adc
jecxz
jo
lret
push
add
incb
js
dec
or
repnz
lret
out
or
and
cmp
push
push
adc
mov
jns
adc
adc
lcall
pusha
les
dec
adc
jo
add
aas
fwait
jl
mov
inc
or
pop
dec
shl
cld
out
pushl
repz
push
test
cmp
enter
lock
jb
fistps
push
int
iret
mov
das
sub
fwait
lods
andb
neg
or
add
push
sbb
xor
dec
and
aaa
push
and
popa
pop
jns
out
jle
inc
popa
mov
xchg
pop
ret
outsl
call
push
mov
pop
jge
and
lret
xor
sarb
add
mov
fldenv
dec
sbb
insl
mov
rorb
pop
jne
inc
ret
outsl
outsl
and
test
popf
loopne
int3
out
push
ret
jne
adc
xchg
je
gs
push
fs
push
sbb
sub
in
push
inc
sub
cmp
jns
adc
fnstsw
rcrb
or
enter
mov
mov
pop
jp
push
pop
add
or
xchg
cmc
cmp
push
or
js
adc
bndmov
adc
inc
sbb
cmp
cmp
test
xor
jne
pop
inc
mov
or
mov
std
test
or
sarl
add
lahf
sbb
sbb
pushf
adc
add
sub
xchg
ljmp
mov
jo
adc
lahf
test
mov
xchg
shrl
adc
mov
push
add
inc
sti
mov
data16
mov
ds
enter
jecxz
aaa
mov
push
mov
xor
loop
or
cmp
cmpsb
ds
jl
aad
ret
in
shl
cmp
fidivl
and
shlb
lret
sbb
loope
addl
jne
cmp
mov
std
push
addr16
add
int3
sub
andb
add
cmc
xor
ret
adc
mov
dec
sub
mov
adc
loop
sahf
rcrl
clc
sti
pop
les
mov
push
pusha
cmp
mov
dec
ljmp
or
jle
stos
int3
or
test
push
push
mov
pop
fildl
jge
ss
jle
pop
enter
push
mov
cmp
pop
push
pop
mov
sbb
mov
inc
lahf
jl
dec
inc
in
jo
test
mov
sbb
lds
fiaddl
dec
cmc
push
cmp
lea
sub
mov
subl
aaa
xchg
pop
movsb
push
enter
add
sbb
rol
push
sbb
adc
sub
sbb
cmp
adc
push
sbb
pop
outsb
push
lods
add
dec
pop
mov
push
shlb
out
pop
push
mov
xchg
jno
jl
inc
adc
mov
jns
and
insb
mov
filds
orb
add
dec
push
mov
adc
push
xor
cmp
jge
daa
shrb
mov
pop
stc
push
push
mov
addl
cmc
cmp
adc
das
jne
stos
test
adc
ret
and
adc
xchg
pop
movsl
mov
push
rorb
movsb
adc
jae
pop
sub
fisubs
pop
cmc
movsl
lock
xchg
sbbb
mov
jg
xlat
sarb
cmpsb
jmp
push
loope
mov
subb
push
addr16
inc
lahf
je
ja
cmp
dec
inc
add
xor
push
jl
pop
icebp
aaa
out
les
cmp
arpl
nop
add
push
push
test
or
insb
sub
inc
inc
jo
cs
movl
scas
dec
cmp
sbb
test
adc
fs
sub
popl
add
cmc
and
inc
mov
std
dec
es
pushl
jmp
and
sbb
dec
cli
or
fldenv
lock
push
fimull
out
add
cmp
inc
dec
adc
or
xchg
mov
xchg
adc
adc
movsb
adc
cld
aas
jbe
pop
push
bound
add
pushf
cmpb
and
push
sub
xchg
insb
add
pushf
cwtl
push
xor
push
mov
ds
ja
inc
adc
cwtl
loop
mov
jae
mov
push
sbb
push
inc
add
sarb
add
cmp
ret
pop
lods
mov
fwait
js
hlt
lahf
push
mov
adc
ss
mov
push
adc
xchg
ja
pop
add
pop
xlat
daa
rol
pop
out
cs
mov
nop
sbb
xor
mov
jo
aad
push
cmc
adc
jecxz
and
and
add
inc
pop
cmpsl
loopne
outsl
pop
xor
ret
push
xchg
jle
pop
mov
test
movsl
in
mov
mov
sbb
dec
push
cmp
mov
adc
jmp
xor
mov
fmuls
test
loope
pusha
in
je
push
cwtl
out
je
or
fwait
and
loope
xchg
adc
orl
add
mov
sub
push
orl
pop
hlt
push
pop
push
adc
inc
sbb
or
fcoml
sub
bound
jne
es
pushf
js
testl
push
js
jmp
notl
dec
jo
in
xchg
pop
push
mov
sbb
das
sub
sahf
jp
jl
jge
pushf
aaa
push
sbb
xor
jl
push
shll
addr16
sub
dec
js
lea
jno
notb
gs
mov
push
andb
lea
pusha
xchg
push
push
push
adc
and
mov
or
aaa
aam
clc
cmp
jae
imul
push
lock
cli
xchg
and
add
dec
inc
adc
cli
aas
dec
ficoml
ss
dec
cmpsb
inc
cmp
cmpsl
cmc
inc
bound
push
cld
dec
aaa
and
cmp
or
hlt
jmp
inc
inc
hlt
mov
iret
inc
subl
add
cs
xchg
sahf
imul
push
inc
daa
adc
dec
push
push
adc
xor
out
and
jae
pop
pop
jno
outsb
pop
mov
push
or
adc
xor
shll
popa
sub
cli
pop
adc
inc
mov
mov
mov
mov
sub
dec
pop
xor
push
or
fistpl
ret
aas
xor
cmp
adc
clc
leave
add
sbb
aad
push
dec
mov
adc
test
inc
in
adc
rcr
sub
push
cmpsb
fsubrs
cltd
mov
and
and
sbb
das
addb
dec
dec
push
in
xor
xor
jo
out
divl
je
mov
and
or
add
pop
xor
sbb
cmp
cmc
lcall
ret
repnz
inc
dec
je
out
or
je
add
lret
or
add
xchg
push
push
dec
mov
movb
jbe
inc
popa
or
sub
adc
lds
mov
outsb
or
push
pop
mov
add
js
pop
jne
and
insb
adc
push
popf
push
sub
sub
fsubl
pop
jmp
nop
and
or
dec
ljmp
pop
inc
out
push
aam
je
push
loopne
jnp
ljmp
js
cmp
ss
dec
add
xor
adc
cmp
push
push
divl
mov
mov
mov
sub
gs
sbb
cmp
pop
sbb
add
insb
fsubl
xchg
enter
shlb
mov
dec
subl
push
lahf
pop
mov
popa
js
das
scas
pusha
inc
std
test
jmp
mov
sbb
mov
je
add
cmp
push
jmp
sbb
push
in
jb
or
test
jmp
push
push
add
jge
mov
or
xor
sub
nop
or
arpl
cld
popf
mov
js
jae
push
repnz
loopne
or
add
lret
dec
and
adc
pusha
xor
clc
enter
sahf
cmp
xlat
push
jns
addb
stos
pop
add
sbb
push
in
push
inc
sub
adc
nop
jo
in
jae
shlb
sub
in
lods
mov
leave
push
icebp
ljmp
loop
mov
sub
adc
sahf
addl
in
cmpsl
out
mov
sbb
dec
xchg
mov
mov
arpl
or
aaa
push
outsl
roll
pusha
sbb
mov
cmc
daa
orb
xchg
inc
push
decl
push
jnp
loop
sbb
adc
nop
lea
or
or
insl
or
cmp
adc
movsl
pop
add
jnp
stc
jne
insb
pop
js
popf
shlb
icebp
mov
push
aas
movl
sub
cmpsb
add
push
cmp
fisubrl
outsl
push
xor
repz
ret
pop
iret
push
jnp
pop
sbb
loopne
push
cmp
mov
dec
into
test
lock
dec
aam
push
fdivs
inc
inc
pop
dec
mov
push
clc
add
xor
or
sbb
xchg
push
mov
xchg
pushf
adcl
sbb
xor
inc
sub
js
push
inc
cld
inc
jns
int3
cmp
call
pavgb
cmpsb
js
fsubrl
in
xchg
int
pusha
aad
cmp
mov
mov
mov
inc
andl
inc
sub
popa
addr16
mov
ja
jecxz
adc
data16
inc
hlt
pop
add
ret
sub
or
mov
aas
inc
pop
imul
aaa
xchg
or
cmp
push
sbb
mov
lahf
je
shlb
test
mov
aam
arpl
mov
pop
test
jns
xchg
adc
cmp
pop
icebp
add
mov
cmp
add
adcb
lea
push
push
or
mov
mov
and
jno
daa
test
andl
mov
inc
cmp
mov
mov
sbb
or
sbb
jnp
add
lea
movl
push
inc
unpcklps
push
loopne
cmp
inc
aas
mov
or
add
aaa
jmp
sbb
stos
stos
push
cld
mov
xlat
cli
push
mov
mov
mov
push
jl
or
cmpsb
mov
pop
and
add
andb
loop
adc
mov
popa
neg
inc
insl
dec
push
jo
or
test
xor
lcall
dec
add
pop
add
adc
aas
push
cmp
pop
cld
push
cmp
jne
sahf
mov
or
and
or
mov
fimull
dec
mov
enter
lock
data16
or
add
cmp
jne
mov
arpl
rclb
test
cmp
sub
push
inc
mov
lock
mov
cmp
fistpll
sbb
jno
je
inc
mov
adc
sbbb
dec
xchg
jge
dec
xor
sub
jno
xchg
fcmovbe
ljmp
add
dec
pusha
jbe
push
or
xlat
xchg
stc
clc
testl
movsl
dec
cmc
hlt
push
shl
incl
mov
cmp
movsl
cld
loopne
sub
bound
push
and
cmp
cmp
out
push
mov
mov
jne
loopne
mov
test
push
insb
fstpl
mov
lods
inc
rcr
add
pop
in
dec
cmpsl
hlt
pop
jmp
sahf
xchg
fisttpll
pushl
lea
cmp
xor
sub
outsb
xor
ss
lret
ror
ret
lods
fstpl
dec
loopne
jmp
inc
lcall
mov
sub
cltd
lret
leave
fnstenv
pop
and
dec
leave
rcr
xor
push
push
out
mov
out
call
push
mov
jecxz
and
push
inc
push
addb
inc
push
xchg
cmpsb
xor
sub
or
jbe
addr16
pushf
inc
rcll
loope
push
push
jge
das
push
imull
xchg
dec
push
inc
adc
cmp
adc
or
sub
pop
jl
mov
movsb
loopne
pushf
mov
xchg
mov
pop
test
push
add
jge
jae
add
icebp
dec
jne,pn
push
push
loopne
lock
pop
pop
pop
pop
push
sahf
sub
out
xchg
add
cmp
sub
push
jo
xlat
jl
cmovs
push
adc
pop
dec
movsl
push
jmp
sti
call
mov
clc
lea
or
div
xor
roll
and
add
sbb
cltd
xchg
sti
mov
js
ljmp
jl
mov
add
xchg
push
test
add
ret
mov
sub
js
inc
test
inc
call
arpl
mov
sbb
dec
dec
test
mov
push
scas
inc
adc
add
loopne
lahf
addl
cmp
adc
sbb
push
xchg
ret
popa
enter
les
cmpsl
arpl
into
pop
and
and
test
add
mov
push
sbb
mov
shlb
and
fistpll
and
and
fwait
ds
les
ja
sub
mov
insl
sbbb
jmp
arpl
orb
adc
sub
adc
push
pop
cld
xchg
shl
das
dec
xchg
mov
fidivl
xchg
loop
push
and
sub
jge
arpl
add
xchg
rcrb
fisubrl
cld
adc
sub
mov
cmp
sub
pop
push
pop
adc
rcll
sub
xor
cmpsb
or
ds
pop
lcall
add
sbb
and
push
jg
test
xchg
jl
cmp
mov
fsubl
xchg
std
push
mov
cmp
mov
adc
push
push
push
orl
add
pop
pushf
xchg
mov
jmp
insl
ja
repnz
ljmp
pushf
xchg
xchg
in
adc
xor
jae
mov
loop
sti
mov
mov
movsl
sub
adc
and
cmpb
movsl
push
mov
cmpsb
sbb
popl
nop
add
xor
stos
stos
push
cld
je
and
dec
movsl
push
xor
mov
shrb
test
jnp
pop
popf
sub
test
maskmovq
notl
add
xor
and
sti
imul
sbb
sub
ds
mov
cltd
int3
ds
roll
push
pusha
lahf
enter
jbe
cmp
sub
mov
or
ret
push
hlt
add
xor
dec
adc
sbb
push
pop
jns
outsb
pop
loope
push
add
lods
pop
cld
xchg
jbe
cwtl
xchg
push
add
ret
mov
cmp
xchg
mov
in
aas
test
xor
test
cmpsb
pusha
leave
adc
lret
stc
mov
scas
je
xchg
call
xchg
push
or
ss
push
and
mov
xor
xchg
std
push
push
lea
push
push
xor
dec
mov
pushf
testb
nop
jo
xchg
subb
jl
loope
jl
in
roll
cmpsb
xor
lea
insb
std
sbb
xchg
inc
and
lret
or
adc
ds
or
adc
ljmp
adc
std
mov
std
std
adc
shll
mov
dec
sti
ret
stos
loopne
add
imul
push
js
and
pushf
nop
adcl
fwait
and
adc
mov
xor
xchg
add
in
je
push
imul
nop
out
ret
push
mov
mov
pop
add
dec
mov
sub
mov
insb
cmp
cmp
das
cltd
scas
add
movsb
loopne
movl
add
nop
or
ja
push
in
movsl
mov
movsb
imul
orl
push
leave
xchg
mov
enter
inc
cltd
pop
xor
mov
pop
dec
inc
adc
and
or
lahf
mov
dec
lds
pushf
test
call
leave
jmp
sub
pop
xor
pusha
lods
pop
lret
mov
rep
test
int3
inc
data16
mov
js
adc
xlat
shll
inc
xchg
mov
inc
stos
push
mov
out
daa
pusha
xor
push
rclb
or
les
stos
fsubrs
scas
ret
or
push
push
cmp
mov
sub
mov
test
push
cmc
pop
pop
cmp
pop
dec
mov
orb
aaa
add
dec
test
pop
ret
sbb
sbb
imul
loop
shl
lea
in
pop
notl
push
push
jmp
cmp
outsb
xchg
decl
mov
addr16
jo
pop
dec
or
cmp
mov
xlat
push
faddp
pop
add
mov
jo
adc
pop
pop
adc
or
pop
out
filds
insb
pop
mov
loop
xorl
mov
xor
lock
cmpsl
fstpt
ficompl
mov
call
xor
popa
pop
int
sti
sub
pop
mov
dec
bound
pushf
cmp
insb
pop
sub
cmp
jns
in
lea
inc
lea
aaa
dec
inc
or
loopne
jno
stos
mov
cmp
clc
and
inc
cld
pop
lods
inc
mov
pop
sub
mov
adc
les
sub
xor
or
gs
lock
test
test
add
xchg
mov
loopne
sbb
enter
lods
mov
inc
sbb
push
insb
ljmp
jb
xchg
xchg
je
dec
test
lea
cmp
test
push
and
mov
ret
into
jl
scas
repnz
mov
add
sarb
pop
lret
adc
cwtl
or
jne
mov
and
mov
or
rorb
sbb
mov
je
xor
and
pop
add
xor
and
push
xchg
loopne
mov
std
out
sbb
ret
and
jmp
push
je
jb
and
fildll
push
stc
shr
cmp
jne
inc
lar
push
mov
and
xchg
fldenv
fisubrl
insl
test
adc
jmp
shll
leave
add
pop
pop
inc
les
xor
lods
jmp
out
sub
insb
sbb
call
call
add
popa
and
fs
test
pop
fstpt
mov
and
adc
sbb
fists
dec
jne
mov
jl
sub
pop
and
adc
rol
jmp
xchg
push
pop
andb
inc
clc
repz
loope
mov
rolb
inc
dec
push
aas
and
insl
or
fs
les
xchg
xor
lcall
push
push
push
loope
imul
lods
adc
sahf
add
pop
mov
test
mov
dec
bound
loop
sar
inc
inc
xor
add
pop
in
je
mov
jmp
pop
shl
adc
rol
sub
ljmp
adc
jne
lock
cmp
xor
repnz
xchg
ret
arpl
jecxz
push
or
mov
jo
dec
shlb
jnp
jne
inc
or
sbb
and
jbe
add
mov
cmp
and
dec
add
adcb
mov
adc
cmp
inc
test
call
xchg
push
mov
lret
incl
movsbl
lea
mov
sub
or
loope
jbe
push
push
fistpl
nop
cmp
xchg
shlb
xchg
xchg
add
adc
rcrl
push
jne
or
jmp
cwtl
scas
lock
jne
scas
adc
iret
pop
pop
mov
stos
push
adc
test
lock
fwait
mov
sarl
pop
add
xchg
adc
push
mov
push
pop
lods
mov
sbb
xchg
or
jmp
adc
shl
mov
push
int3
cli
loopne
in
shll
aam
les
mov
bound
mov
or
push
or
ss
mov
push
push
in
add
pushf
and
ljmp
mov
roll
fidivl
rcrb
cmp
ss
insb
aas
add
xchg
mov
loopne
push
test
cmp
popf
xchg
scas
imul
std
shlb
fmul
dec
cmp
mov
cmp
mov
fidivrs
fidivl
fdivl
xchg
mov
in
loopne
add
adc
xchg
and
dec
push
sbb
push
mov
inc
sbb
mov
mov
mov
dec
call
sbb
push
mov
and
call
in
lods
mov
jge
jl
iret
rcrb
sub
loopne
scas
xchg
mov
ds
pop
dec
and
imul
shlb
pop
xchg
das
cmp
mov
iret
sbb
adc
inc
clc
cmpsb
jle
lock
js
fsubrl
adc
loope
xor
pop
mov
lock
pop
mov
inc
inc
in
cmpsb
loopne
pop
cmp
aaa
or
cwtl
push
xor
mov
mov
add
pop
cmp
jl
jl
jl
cld
push
pop
incb
psubusb
in
scas
dec
mov
xor
into
cmpsb
mov
and
addr16
add
mov
int3
enter
or
pop
xchg
adc
jbe
or
lds
lcall
sbb
push
in
inc
xlat
ds
cmp
xchg
sbb
loopne
rclb
popf
or
jne
mov
adc
pop
mov
pop
jbe
push
jge
mov
push
aam
and
aas
js
enter
dec
and
cmp
jne
mov
push
sub
and
xchg
push
loope
xchg
sbb
cs
inc
mov
cmpsb
fs
mov
sub
dec
adc
jnp
jge
adc
sub
pop
sbb
cli
mov
test
add
adc
add
in
ret
es
push
push
in
mov
lcall
out
movl
sub
or
dec
or
adc
inc
insb
xor
ds
pop
aaa
in
sbb
xchg
inc
lock
xchg
jne
push
or
lahf
out
mov
jnp
testb
aas
lods
cmpsl
cmp
jne
call
mov
out
lock
rorb
push
sub
pop
pop
adc
push
xor
push
mov
sbb
cmp
inc
add
movsl
roll
enter
lcall
jb
pop
cld
enter
push
movsb
or
movsl
lret
ds
add
fsubrl
xor
jl
fldl
iret
push
rorl
add
xchg
mov
pop
jl
sbb
push
push
inc
lds
fisubl
movsb
dec
lock
mov
xor
add
adc
and
cld
add
push
dec
lods
jo
or
fwait
divl
xor
cld
adc
adc
test
mov
loope
jge
cmp
aad
xor
es
mov
inc
sub
sbb
fcom
jo
push
in
push
sub
inc
push
dec
sub
jb
lcall
push
int3
adc
inc
xchg
fucom
dec
cltd
or
inc
ss
mov
addb
fisttpl
js
les
add
cwtl
mov
lods
push
sti
clc
pop
je
push
out
add
sub
sub
sub
push
sbbl
adc
mov
add
in
aaa
and
lret
out
jecxz
push
insb
test
fdivs
lret
mov
push
add
adc
jne
cmp
and
pop
pop
mov
in
insl
mov
jmp
and
sbb
push
mov
or
add
movsl
adc
test
jp
xlat
rorl
xor
dec
pop
xor
mov
cmpsl
add
in
movsb
or
movl
out
add
add
mov
arpl
mov
jmp
imul
jbe
push
pop
lret
testb
sub
pop
xor
pop
mov
filds
jb
mov
mov
scas
lock
inc
add
add
clc
push
jb
add
lds
cmp
bound
sub
mov
dec
sbb
mov
andl
ss
xor
filds
mov
jl
sbb
sarb
xor
add
movl
stos
or
mov
jns
dec
cmp
pop
push
push
ret
pop
stos
adc
lcall
mov
dec
notb
mov
lahf
cmp
jne
mov
adc
or
mov
pop
jmp
xor
add
and
in
dec
out
sub
push
ja
cld
shr
stos
sbb
mov
je
push
cmp
insl
push
sub
pop
add
mov
add
hlt
mov
repz
ret
and
jno
shll
push
in
mov
inc
dec
or
adc
loopne
iret
adc
inc
jbe
add
push
fs
xor
inc
mov
sbb
push
hlt
stc
icebp
mov
jecxz
call
test
lahf
out
clc
cs
idiv
adc
in
xchg
rol
lea
rclb
push
and
cmp
js
push
or
sub
cltd
push
cwtl
popf
add
sarl
mov
push
loope
jns
mov
fcmovnu
xchg
add
jo
adc
mov
adc
shrl
movsb
jecxz
dec
les
jge
xchg
inc
sbb
inc
xor
loop
adc
lods
mov
outsl
lock
ja
adcb
add
int
mov
cld
shlb
movb
roll
jbe
jge
mov
popa
dec
ret
fcmovb
bound
cmc
add
int
mov
xchg
adc
cmpl
mov
xchg
push
jne
pop
mov
push
add
outsl
lock
mov
jne
rep
test
push
push
cwtl
or
inc
push
mov
test
mov
mov
mov
dec
adc
adc
and
xor
movsb
ja
cmp
pop
fldcw
xor
nop
pushf
xchg
xchg
cmp
lods
and
or
pop
lcall
dec
lds
cli
sub
shlb
movsb
dec
or
lods
mov
push
adc
lea
xor
repz
je
jno
stc
inc
sarb
inc
pushf
mov
pop
dec
mov
inc
and
mov
arpl
cs
sub
lea
add
xchg
adc
pushf
pop
inc
push
pop
jl
sti
cmpb
pop
mov
pop
sbb
inc
adc
cmp
aas
dec
adc
roll
pop
mov
cmp
sbb
cmp
and
mov
unpckhps
les
lahf
orb
cwtl
fs
leave
cwtl
cmp
in
dec
subl
pop
xchg
adc
mov
add
inc
adc
iret
adc
or
pop
adc
or
jmp
int3
and
out
shlb
mov
pop
add
xchg
aas
mov
mov
je
xor
movsb
dec
push
stc
cmpsb
jne
or
hlt
testb
and
cmp
pop
or
push
loopne
pop
jle
jne
pop
mov
or
cld
or
nop
dec
dec
add
xchg
cmc
arpl
into
jo
xchg
jecxz
add
push
mov
lods
in
aad
stos
xchg
inc
movsb
cld
divb
push
js
sbb
movsb
mov
stos
ret
mov
add
out
decl
sub
fwait
hlt
add
jo
out
mov
jb
adc
push
pop
add
test
inc
mov
mov
pop
dec
mov
sbb
inc
add
ucomiss
je
out
lcall
mov
movl
adc
sub
jp
add
insb
les
imulb
add
mov
das
mov
clc
rcl
fs
jo
fprem
clc
sub
call
push
mov
add
sar
push
inc
sbb
das
add
cmp
imulb
jo
and
xorl
and
inc
jle
inc
and
add
push
cmp
shlb
pop
lock
xchg
inc
pusha
mov
jl
dec
cmp
pop
rclb
int
dec
jge
sarl
testb
je
xor
je
mov
add
dec
cmp
adc
mov
ret
push
add
push
test
movsb
stos
in
into
sbb
stos
dec
je
add
mov
adc
and
lds
mov
in
daa
cmp
test
adc
ffreep
mov
mov
out
jmp
push
xor
jb
add
and
mov
out
icebp
imull
jecxz
lock
pop
shll
add
fidivl
lods
es
or
sbb
ja
inc
movsb
sub
ljmp
dec
inc
xor
sbb
and
popa
cli
pop
push
sbb
and
lods
push
adc
adc
in
loope
repnz
push
add
push
and
xchg
xchg
lds
pusha
xchg
and
add
push
mov
sub
cmp
or
mov
sub
cmp
adc
hlt
std
dec
sub
jl
lock
add
push
shlb
in
cmp
aaa
xor
mov
mov
sub
fbstp
sti
mov
lds
imul
mov
mov
icebp
mov
pop
insl
sbb
or
add
test
cmp
ret
adc
out
cld
movsl
lds
sahf
test
clc
dec
and
sbb
push
roll
jmp
inc
dec
add
cmpsb
lods
push
ja
repz
push
scas
in
pop
xorl
loope
or
and
leave
cmp
sbb
movsl
fldt
push
hlt
loop
bswap
push
xor
call
cld
mov
pop
adc
ds
lock
jo
notl
push
sbb
jp
std
push
xor
add
xlat
andl
cmp
jmp
enter
fadds
incb
add
adcb
jge
xor
pop
adc
subl
movsb
add
inc
scas
adc
aaa
fmuls
lods
jl
pop
mov
add
popf
push
xor
xchg
xor
in
cld
pusha
dec
or
stos
pop
ret
out
add
add
mov
cmp
notb
mov
jmp
and
xor
ljmp
add
xor
stos
pop
mov
inc
shlb
ret
xchg
jne,pn
loop
cwtl
pop
lahf
in
push
dec
xchg
pusha
add
test
dec
loopne
push
cmpl
call
cwtl
rcrl
pop
adc
push
shll
leave
or
and
sbb
push
jbe
inc
fadd
sbb
add
inc
inc
aaa
xchg
ljmp
sub
dec
inc
pop
push
lcall
add
xor
fcoml
ljmp
sub
push
inc
mov
mov
pop
xor
je
xor
jecxz
jmp
lea
in
and
jne
cmp
pop
sbb
loop
sbb
mov
sbb
or
add
ss
sub
cmpsl
push
inc
xor
jo
or
push
push
mov
rcrb
sub
mov
jge
iret
and
add
inc
add
sarb
jbe
adc
inc
mov
jl
mov
jl
faddl
lret
out
rol
and
xor
cmp
pop
push
enter
sub
out
cmp
into
adc
outsb
pop
xor
shlb
cmp
enter
movsl
lea
lret
sbb
shr
test
push
or
or
cs
test
adc
dec
push
sbb
push
ss
add
inc
mov
sti
je
add
dec
je,pt
inc
and
punpckhdq
enter
mov
jbe
and
jp
popf
cmc
sbb
cmpb
pop
popf
sub
and
arpl
add
jmp
pop
mov
pop
clc
adc
inc
sub
sbb
adc
dec
int3
mov
cmp
sbb
popa
cmp
ja
jno
cmpl
add
cltd
fucom
push
jmp
push
in
push
xor
je
lret
sub
xor
ja
push
and
shlb
inc
adc
push
or
das
add
mov
pop
add
cmp
jne
push
adc
call
xchg
push
or
or
dec
add
rorl
jb
jp
nopl
mov
mov
adc
test
mov
not
das
jg
sbb
jge
inc
push
sarb
fs
dec
mov
push
fistl
push
lods
cmp
lods
lahf
lds
ret
inc
push
and
and
mov
pop
push
das
mov
inc
pop
mov
sub
mov
dec
pusha
add
lock
adc
xchg
push
adc
mov
mov
cmp
sbb
enter
aam
data16
push
push
enter
or
adc
mov
sbb
adc
addr16
enter
adc
and
push
pop
stos
sub
mov
in
call
inc
ret
int3
push
or
pop
testb
int
push
cmp
dec
ljmp
dec
int3
aaa
test
or
pop
lret
movsb
sbb
sub
adc
shrd
leave
aad
sbb
inc
pusha
icebp
mov
into
hlt
pop
dec
ret
jo
cld
xor
pop
inc
and
cmp
mov
push
push
add
push
pop
mov
adc
and
mov
loope
xchg
int3
push
adc
sub
adc
xor
sub
int
xor
call
ret
or
je
rolb
aas
cld
iret
icebp
mov
xchg
movzwl
nop
dec
cmp
imul
movsb
dec
pop
cmp
adc
repnz
insb
sub
js
lds
std
cs
lret
aas
adc
aaa
mov
jmp
add
iret
xlat
or
or
call
loopne
sub
jg
jmp
or
or
add
push
add
int3
add
fildl
cmpsl
mov
mov
ret
push
pop
and
adc
push
or
je
cltd
mov
mov
jns
nop
cmpb
mov
or
test
mov
sub
je
call
in
aas
mov
cld
loopne
aas
cmp
aad
scas
iret
xor
add
aam
pop
loopne
or
aam
jae
sub
cmc
add
jbe
outsb
add
imul
loope
divl
adcb
dec
fcomps
sub
imul
call
subl
or
inc
dec
pop
cmp
jmp
popf
jne
dec
adc
or
lock
add
push
clc
dec
sbb
lods
xchg
and
mov
or
fsubrl
insl
imul
fcomp
xchg
sub
sub
mov
push
in
lods
aaa
cmp
fnsave
pop
sub
pop
sub
test
cwtl
ds
push
loope
jecxz
pop
push
pop
add
xorb
mov
or
scas
and
out
out
jbe
xor
and
xor
pop
dec
adc
xchg
les
mov
adc
cmp
mov
xchg
dec
push
scas
xchg
inc
hlt
pop
inc
cmp
or
and
lods
jmp
add
pop
clc
push
mov
jge
jne
jl
ja
aas
sub
nop
jns
cmp
jae
inc
cmc
inc
or
mov
loopne
add
daa
push
aas
pop
xor
nop
xchg
mov
cwtl
les
xor
mov
sbb
test
mov
push
mov
cmp
dec
ret
nop
and
cmp
jge
cmp
sub
xchg
fiadds
xchg
lcall
stos
cmpsb
rcrl
push
mov
push
adc
add
loopne
ds
lods
xchg
or
pop
rclb
shl
loope
lods
xor
dec
movsb
subl
out
popf
pop
cwtl
xorl
xchg
mov
cs
jmp
pop
sub
lea
push
sub
pushf
pop
int3
aas
xchg
lcall
cltd
mov
test
js
lods
les
push
aaa
inc
aam
sbb
mov
andb
inc
or
cmp
xchg
mov
fidivs
pushl
inc
adc
xchg
add
and
bound
pop
sub
pop
dec
xchg
jb
adc
add
insb
ljmp
push
push
cmp
jne
jge
ss
rorb
jnp
aas
xchg
jg
push
xorl
add
shrb
je
push
mov
das
je
mov
pop
push
das
mov
movl
lds
jo
pop
ds
lock
es
rcll
adc
or
or
push
push
loopne
pop
in
push
or
push
mov
inc
push
cmpsl
fwait
mov
mov
or
push
jns
lea
lock
pushl
inc
push
push
and
and
inc
rol
dec
jmp
jae
sbb
cmpsl
mov
in
pop
les
or
adc
add
mov
dec
ldmxcsr
adc
cld
lods
test
or
xor
push
and
sahf
mov
push
add
fadds
jge
xchg
orl
clc
clc
pop
pop
mov
xor
xor
aas
mov
or
out
in
movsl
lret
xor
mov
fs
push
cltd
mov
cmp
mov
popf
shl
push
mov
test
add
xor
and
addb
adc
insb
insl
inc
cld
and
add
or
insb
sbb
rcrb
push
imul
pop
adc
dec
loopne
daa
lock
adc
push
jge
lea
cmp
cltd
sbb
push
test
dec
mov
in
stos
add
test
mov
dec
hlt
pop
mov
xor
xor
ret
add
clc
and
cmp
popa
mov
mov
adc
jl
cli
mov
mov
shr
and
mov
jl
jns
sbb
adc
scas
fisttps
and
or
mov
fbstp
hlt
add
div
clc
movb
pusha
add
add
jle
rcrb
ss
jae
xchg
adc
push
sub
in
lahf
cltd
fisubrl
or
adc
or
xchg
push
in
addb
lock
outsb
es
push
sbb
and
je
in
push
out
mov
add
cmpl
cltd
call
outsl
push
test
jnp
cmpsb
inc
lahf
div
gs
push
dec
loopne
xchg
aaa
xor
push
sbb
es
jae
mov
xchg
push
daa
add
in
negb
test
push
jno
cmpsl
orb
lcall
push
add
out
add
bound
adc
add
or
out
aam
mov
push
pushf
inc
add
ret
cmp
iret
pop
cmp
movl
pop
fcomps
jmp
or
bound
fwait
sub
mov
scas
and
cmc
sub
or
jbe
sub
in
pop
jmp
jo
jns
or
inc
addb
movsb
dec
mov
inc
mov
mov
or
stos
int3
adc
loope
xor
add
sbb
mov
je
push
shl
ja
outsb
das
cmp
mov
adc
loope
fcomps
and
es
xor
rcll
adcb
add
pusha
int3
or
fdivrl
loopne
test
subb
ss
and
fcom
adc
sbb
push
mov
add
xor
mov
jle
fcoml
enter
sti
inc
stos
test
pop
mov
or
pusha
dec
sbb
jbe
sbb
dec
inc
shlb
aad
push
pushf
in
add
push
inc
fwait
jl
adc
imul
out
sub
imul
loopne
popa
push
popa
xchg
jns
pushf
inc
inc
push
sbb
push
seto
push
jge
push
in
add
adc
icebp
dec
xchg
aas
or
and
ds
call
push
xor
sbb
rcrb
adc
or
sbb
jmp
mov
pop
inc
cld
xor
push
lds
or
mov
cwtl
inc
sbb
add
mov
cmp
shl
test
insl
push
inc
push
xchg
xor
xchg
dec
mov
cmp
fdivs
mov
subl
scas
dec
cmpsb
add
lea
sbb
stos
test
loopne
sbb
push
in
icebp
add
inc
push
sbb
and
aas
testb
xchg
mov
repz
mov
in
sbbl
and
sbb
cmp
leave
loopne
pop
dec
mov
pusha
cld
inc
sbb
adc
jnp
icebp
xchg
add
cmp
imul
sbbb
fldt
xor
bound
icebp
mov
lea
or
mov
xlat
adc
out
sarb
add
fstpt
cmp
mov
or
push
add
sbb
ss
or
mov
add
xor
enter
pop
push
lea
ljmp
inc
in
inc
cmp
mov
jae
rcrb
push
sbb
mov
sbbb
mov
pusha
ja
inc
sbb
push
inc
add
cli
pop
mov
pop
cwtl
imul
lods
and
xchg
push
cli
mov
adc
push
es
inc
dec
mov
inc
sub
inc
jge
adc
push
imul
pop
lds
lds
pushl
xor
out
inc
jmp
push
pop
jo
and
dec
std
push
jo
push
cmp
lock
sbb
dec
loope
fidivs
push
sbb
push
dec
lods
push
push
imul
or
sub
dec
ret
push
fcomps
in
les
mov
test
clc
fdivrs
mov
mov
rcll
mov
mov
lret
pop
inc
notb
les
pusha
cli
sub
fwait
xchg
mov
jbe
and
inc
xor
mov
cmc
xchg
push
xor
stos
cmp
in
push
dec
adc
rolb
and
or
and
push
inc
rcll
xor
imul
lcall
das
sbb
scas
ret
cmp
fists
lods
out
lock
loope
subl
cmp
cmp
cmp
out
and
pop
loope
or
adc
sub
cmp
out
shr
sbb
adc
outsb
hlt
hlt
sbb
inc
pop
mov
dec
push
shll
mov
into
orl
movb
aaa
push
push
adc
sbb
aaa
ret
mov
jl
push
sub
mov
loopne
cmp
sub
xor
daa
xor
xor
lock
int3
fildll
dec
sbb
insl
pop
int
dec
iret
sub
nop
jg
out
or
ss
xchg
pusha
stos
roll
sub
fcmovnb
iret
mov
inc
test
add
pop
das
xor
loop
sbb
cmp
jbe
mov
mov
xor
std
mov
mov
or
insb
jg
fcmovu
mov
push
or
push
or
add
or
mov
mov
xor
shll
adc
adc
cmpsl
rcrb
adc
lock
add
jle
lret
jb
pop
mov
cwtl
dec
inc
mov
jo
inc
cwtl
push
xor
arpl
into
mov
jp
cmp
sub
into
shll
xor
test
mov
rorb
stos
xchg
xchg
pop
les
inc
sar
mov
imul
repnz
sahf
jbe
les
mov
rcll
test
xorb
xchg
xor
pop
div
push
sbb
push
insb
das
add
push
add
push
adc
stos
imul
or
sti
lods
fsubl
mov
pop
aas
mov
or
mov
es
cmp
mov
rcll
sbb
sub
nop
and
pop
sti
cmpsl
sbb
repnz
mov
mov
cmp
add
int3
add
add
mov
or
ret
cmp
xor
push
lods
inc
sbb
dec
iret
sub
mov
add
scas
push
sub
scas
in
rcrb
addr16
push
xchg
pusha
adc
and
jp
add
or
jg
push
cmp
or
mov
hlt
and
dec
mov
cmpsl
cli
rolb
adc
or
pop
mov
adc
inc
loopne
js
pop
sub
mov
cmp
clc
jmp
test
add
repnz
out
mov
clc
jns
mov
cwtl
adc
add
lock
xor
push
push
or
add
cmpsl
pop
inc
insb
jae
ljmp
clc
xchg
out
icebp
mov
or
in
or
int3
fsubs
pop
adc
stos
or
inc
stos
mov
mov
cs
cli
jl
xchg
pop
pusha
test
mov
mov
or
sbb
xor
mov
mov
mov
adc
add
sbb
repz
lahf
dec
add
loopne
push
xor
sub
and
or
push
mov
push
jns
cmp
or
inc
clc
out
sti
and
dec
cltd
jns
lock
adc
cwtl
dec
pop
lea
test
lock
les
or
pop
addb
xchg
inc
addr16
mov
pop
pop
sbb
sub
push
movsb
sbb
inc
inc
shr
xchg
dec
cmpsl
aad
pop
loope
aad
and
pusha
xor
out
cmpsl
sub
cmpsl
fistps
and
sbb
mov
jne
mov
dec
mov
cmp
ror
icebp
xor
mov
loopne
es
js
call
pop
js
or
mov
xchg
or
mov
comiss
push
push
xchg
data16
xchg
or
inc
sahf
lret
stos
push
call
or
shlb
jns
xor
lods
pusha
xlat
and
xor
test
nop
cmp
cmp
adc
push
ja
outsl
ds
add
int
inc
pop
jmp
push
and
dec
dec
xlat
pop
sbb
adc
test
insb
shlb
pop
jmp
test
shr
int
cmp
push
push
pop
out
mov
mov
cmp
or
adc
pop
xor
or
test
out
fsub
sbb
and
or
xchg
lcall
push
inc
sti
out
xor
mov
and
outsl
push
inc
push
and
dec
bndstx
lods
mov
mov
addl
hlt
mov
mov
adc
xor
xchg
pop
cmpsl
mov
adc
or
aad
add
negb
add
loopne
adc
aas
push
push
or
lea
sub
hlt
nop
nop
cmpsb
add
push
jmp
sahf
rol
bound
je
out
movsl
mov
push
mov
pop
dec
add
cmp
shrl
aaa
fwait
popl
jo
mov
lods
ja
stos
in
add
sarb
sbb
adc
test
sub
lods
adc
dec
jae
cs
mov
and
and
mov
rolb
or
push
mov
add
or
enter
inc
mov
adc
add
push
aaa
in
add
int3
cs
mov
fsubrl
mov
add
pop
jne
nop
push
push
rorb
insb
inc
xchg
sbb
ljmp
movsb
mov
adc
add
imul
pop
or
pusha
ja
mov
xor
jmp
mov
stos
inc
push
or
mov
inc
scas
xchg
mov
and
sub
jae
jne
dec
ret
jge
jne
xchg
xchg
pop
ljmp
push
lcall
push
add
in
andb
dec
mov
fdivrs
mov
cwtl
hlt
or
scas
gs
out
and
mov
in
fs
in
add
dec
sbb
push
jo
or
adc
mov
jp
add
adc
fcomps
rclb
cmp
sub
pusha
mov
mov
insb
dec
and
jne
ror
pushf
movsb
pop
ds
call
mov
jae
sub
sarb
lock
dec
adc
adc
lahf
or
push
dec
sbb
jbe
sysenter
inc
call
adc
clc
xor
dec
shlb
xchg
push
ret
pusha
out
aas
jmp
lret
in
mov
enter
and
int3
mov
jge
xor
jecxz
sub
cli
int3
jbe
dec
dec
xchg
or
add
jbe
jge
loope
outsb
pop
mov
add
imul
cmp
ss
adc
pop
bound
cmp
pop
fisubrs
sbb
in
lea
inc
sbb
ret
pusha
push
pop
mov
mov
fsubrp
das
mov
and
aaa
cwtl
inc
push
xlat
rorb
pop
addr16
sbb
sbb
dec
sub
call
imul
in
or
xchg
pop
sub
mov
pushf
mov
shr
iret
stos
sbb
in
inc
xchg
out
and
and
sub
jp
jmp
test
lock
lods
movsb
pop
addr16
push
sbb
fsubrl
cmpsl
fnstenv
clc
push
loope
push
mov
or
out
lods
add
dec
pop
scas
int3
cmc
adc
add
and
jmp
out
xor
stc
cmp
cld
pop
gs
jb
inc
idiv
cmp
adc
inc
mov
xorps
lock
or
adc
dec
mov
and
int3
pop
fwait
or
lcall
pusha
pushl
and
subl
fwait
pop
rclb
shl
jecxz
sub
jmp
push
pop
xchg
and
dec
mov
test
mov
lods
nop
ret
adc
cltd
out
cmp
clc
jge
rcr
int3
jmp
subps
je
lock
les
jmp
call
rol
bound
arpl
jl
ret
or
jmp
pop
mov
adcb
lock
or
dec
jp
adc
and
sub
mov
rclb
popa
adc
loopne
and
sbb
or
xlat
inc
sbbl
sbb
inc
or
je
fcoml
movsl
sbb
xor
in
or
xchg
hlt
bound
or
lods
and
dec
inc
or
arpl
rolb
mov
dec
imul
dec
adc
pusha
test
add
int
jmp
pop
in
lcall
bound
xchg
cmp
movsl
popa
jbe
and
in
sub
inc
or
lcall
xor
jo
push
jmp
dec
ficomps
fs
adc
test
cmp
xchg
and
dec
and
aam
fnstsw
pop
xor
mov
and
pop
call
pop
aas
fcomi
mov
xchg
popa
inc
inc
out
add
sbb
out
movsb
lock
fisubrs
push
push
lods
aas
int3
push
fisttps
cli
sub
sub
dec
push
movsl
mov
jge
pop
xchg
das
addb
push
lea
aad
add
jo
add
add
aam
and
push
leave
sbb
mov
or
mov
mov
neg
fbld
inc
xchg
bound
lock
je
imul
add
xor
or
inc
xor
mov
je
je
inc
cmpsl
push
mov
xchg
push
mov
mov
push
mov
xchg
xor
notb
adc
adc
or
ret
pop
push
fsubr
adc
cmp
mov
adc
add
scas
push
nop
push
jno
clc
jp
cmp
sbb
push
das
inc
ja
adc
mov
sbb
xchg
inc
cmp
mov
add
jge
xchg
pop
adc
ss
xor
or
enter
int3
jae
xchg
sarl
xchg
leave
rclb
pop
dec
push
js
cmpl
or
add
aas
push
add
testb
push
pop
mov
adc
rcrl
or
sub
mov
mov
movsb
in
sbb
call
or
add
je
jmp
testb
mov
cmp
push
mov
or
add
ret
mov
mov
dec
lods
lock
pop
mov
sbb
xchg
daa
add
add
xor
les
ret
cs
je
pop
imul
shll
sbb
or
sbb
adc
imul
subl
mov
sbb
rep
sahf
xor
push
jb
sbb
sub
leave
inc
adc
fadd
cwtl
push
rclb
xor
adc
and
popa
outsl
int
jl
int
int
pushaw
and
xor
or
setg
orl
dec
dec
xor
loopne
test
jo
data16
stos
pop
pop
jle
mov
or
clc
xchg
js
pushf
hlt
push
sbb
jb
or
adc
cmp
sbb
arpl
add
es
pop
xchg
jo
cmp
cmpl
jg
rolb
js
push
adc
js
cmp
add
pop
jmp
dec
or
mov
mov
test
sub
lods
mov
pop
push
cli
mov
mov
adc
nop
cmp
lcall
mov
jl
or
je
push
popa
inc
ljmp
ljmp
sti
cmp
jb
push
mov
mov
xchg
inc
lods
rep
test
movsw
icebp
fcmovnb
fwait
mov
or
scas
pop
sub
and
pop
add
mov
pop
or
cld
push
xchg
add
add
inc
mov
mov
push
xor
mov
cmp
and
and
mov
add
test
outsl
push
inc
add
out
or
clc
inc
add
xor
push
pop
push
add
ss
loopne
decl
rol
push
mov
mov
and
cmp
jne
or
mov
adcb
test
test
adc
xchg
push
inc
shlb
dec
ret
adc
mov
jp
push
std
push
sbb
in
pushf
adcl
fsubrl
dec
mov
xchg
dec
sbb
popa
sub
cmp
xor
sub
or
jp
sub
and
adc
subl
int3
loopne
push
lods
push
push
jo
and
test
and
daa
sub
icebp
leave
imul
xor
arpl
int
popa
mov
inc
lret
push
lds
xchg
xor
push
mov
lods
stos
pop
inc
lahf
pop
cmpsb
loope
xor
and
push
mov
adc
cmpb
imul
cs
dec
shl
push
ret
sub
add
adc
adcb
daa
loope
xchg
jl
jb
mov
or
push
lock
xlat
dec
mov
and
sbb
fwait
jne
sbb
cmp
and
add
mov
push
add
xlat
sub
xchg
adc
enter
ficoml
and
enter
call
mov
mov
loop
sbb
loopne
inc
xor
jo
push
dec
sub
cwtl
adc
jp
mov
mov
mov
cmp
jbe
sbb
xor
lods
andb
adc
movsb
pop
cmp
add
and
push
jno
cmp
add
adc
or
out
push
cmp
add
jo
mov
icebp
scas
loope
xchg
and
rorb
sbb
xor
push
pop
pop
test
movsb
lea
orl
ja
xchg
cmpl
push
push
clc
jo
cwtl
mov
mov
sbb
cs
int3
mov
call
movsb
out
jp
movsb
out
ja
or
dec
and
aaa
sub
dec
add
jmp
pop
jo
pop
pop
pop
shrb
aaa
repnz
into
sub
int3
sti
inc
mov
sub
inc
push
std
cmpsb
shr
mov
fmull
test
les
mov
add
pop
pop
push
and
cmp
scas
xor
stc
mov
sbb
xor
mov
sahf
das
adc
sbb
cs
mov
mov
in
add
dec
push
sbb
cmp
test
add
xor
dec
loopne
fsub
add
and
orb
or
sbb
ret
push
js
jp
add
add
cli
popl
xor
xchg
and
fnstcw
andb
sub
push
adc
mov
and
xor
addr16
add
push
push
pop
rcrb
pop
mov
push
bound
xor
testl
push
add
mov
cmp
jne
dec
sbb
lods
repnz
dec
add
pop
adc
sbb
cmp
enter
mov
adc
jae
loopne
out
repnz
jne
enter
pop
mov
mov
setno
aaa
adc
adcb
or
and
das
xor
cmp
push
inc
mov
or
imul
rorb
insb
dec
jbe
js
lcall
jnp
jae
add
adc
out
add
xor
pop
sbb
fsub
add
outsl
adc
je
push
xor
es
cmp
lcall
pop
jno
test
lret
movsb
fidivrl
sub
sahf
xchg
int3
sar
mov
shr
add
adc
testl
xlat
jecxz
addr16
and
sbb
jp
cmp
adc
cmp
insl
cld
xchg
mov
jbe
jne
jecxz
test
aas
ret
cli
mov
daa
lret
pop
cmp
inc
inc
js
sub
sbb
inc
lock
sbb
roll
lock
push
jmp
dec
mov
pop
adc
push
test
clc
sbb
add
cmp
int3
int
adc
pop
add
cmp
push
cld
push
jno
rol
sbb
add
add
hlt
lea
sbbl
xor
mov
inc
jns
cmp
cld
sbb
jne
mov
add
dec
sub
cmp
stos
sbbb
add
or
push
add
cwtl
movsb
lcall
pop
and
push
xor
xor
xchg
in
rcl
cmpsl
out
mov
xor
push
add
roll
cld
ret
or
push
pop
stos
arpl
or
mov
popa
pop
pushf
push
pop
inc
mov
pusha
insl
or
push
adc
clc
pop
sbb
adc
jle
aaa
pusha
aas
ror
xor
in
pop
mov
mov
or
pop
mov
rorb
js
lock
xchg
int3
movl
inc
sbb
jp
adc
or
xorl
cli
adc
add
pop
data16
repz
adc
or
push
or
int
add
pop
les
rcrb
pop
pop
xor
fistpl
in
mov
sub
in
lock
in
jb
xchg
and
call
movsb
fsubl
pop
cmp
clc
adc
fcoms
jae
imul
jne
mov
sub
andb
insb
push
push
sahf
sarb
adc
mov
mov
mov
or
jge
je
xchg
mov
push
push
in
test
jo
xor
or
adcl
push
or
sbb
loopne
sub
shlb
xchg
mov
aaa
mov
fmuls
test
fdivs
jl
add
sbb
imul
imul
xor
je
mov
xor
fcom
jl
mov
in
inc
inc
lea
movsb
or
xor
sbb
rclb
enter
movsl
mov
jmp
inc
xor
je
xchg
or
js
mov
ja
sahf
add
xchg
xor
cmp
sti
daa
mov
test
cmc
mov
or
add
or
dec
xor
add
jbe
sbb
xor
dec
dec
or
add
mov
insl
sbb
xchg
cld
dec
inc
jle
and
inc
adc
mov
jne
lea
mov
lret
dec
xchg
cmp
pop
cld
int
in
mov
dec
lock
mov
imul
std
scas
sarl
or
sub
dec
mov
ret
or
insb
aas
push
mov
xchg
aam
shll
popf
shl
or
int3
int3
cli
daa
sub
jge
cmp
push
dec
ret
add
sbb
movsb
das
loopne
jge
imul
pushf
xchg
lahf
inc
in
add
int
xor
sbb
aaa
or
inc
inc
push
mov
sbb
pminsw
sub
testb
into
fistl
add
nop
push
test
mov
fsubl
mov
lock
arpl
push
lahf
mov
jecxz
pop
or
popa
push
fmull
fmull
lret
dec
xchg
adc
adc
add
cmp
insl
leave
mov
mov
add
testl
into
and
and
xadd
sub
popa
inc
movsl
test
jl
sub
sbb
sub
adc
sbb
enter
leave
stos
mov
pop
les
xor
adc
sysret
sbb
aam
addb
jno
rorb
aaa
sub
pop
pop
jb
add
cmpl
push
xorl
jmp
mov
jmp
loope
push
fs
in
xchg
shl
push
in
in
je,pt
sub
cmpsb
or
faddl
test
inc
mul
rolb
add
jne
fldt
sbb
sub
lret
rolb
enter
mov
test
dec
in
and
fcoml
mov
sbb
jne
jmp
and
xor
clc
int3
subb
sbb
adc
test
or
cmp
cmpsl
adc
mov
cmp
lret
aam
int3
int3
sbb
ja
shrb
or
aaa
test
cltd
pop
pop
pop
pop
or
sub
cmpsb
mov
pop
inc
add
add
jne
test
insb
repnz
sbb
cmp
fcoml
mov
xor
add
add
xor
into
mov
lods
insb
cmp
js
movsl
jge
fdivl
sub
xor
jmp
xor
jne
mov
loope
and
push
pop
push
shrl
jp
adc
xor
or
mov
fisubl
or
adc
loope
and
shll
lods
lock
fisubrs
and
lods
and
ja
add
push
sub
test
inc
push
push
ja
filds
lock
jmp
push
push
xchg
fstpl
jl
and
jmp
push
pop
clc
imul
clc
jle
or
sbb
shll
leave
push
rorl
and
push
pop
adc
adc
adc
leave
enter
cwtl
cmp
mov
mov
insb
push
adc
xlat
leave
push
adc
sahf
test
jbe
add
push
in
mov
pop
push
push
push
push
or
or
xchg
pop
and
jl
mov
movsl
outsl
movsb
push
loop
cs
enter
push
dec
mov
popf
test
nop
lock
daa
ficoml
subb
test
int
push
xor
out
sub
inc
jecxz
add
lods
sbb
mov
js
inc
push
pop
and
je
clc
mov
push
les
pop
test
cmp
push
bound
sub
ret
push
imul
inc
adcl
push
push
rcrb
mov
inc
jne
cmp
jmp
jge
jo
or
adc
lcall
dec
jbe
int3
push
add
aam
inc
aad
dec
pop
add
mov
mov
orb
inc
pop
sti
jge
push
push
arpl
mov
mov
popa
or
jmp
rclb
inc
and
push
insb
pusha
xchg
xchg
fcoml
push
adc
xchg
mov
faddl
xchg
pushl
inc
bound
dec
sbb
push
inc
call
out
je
add
mov
das
or
inc
xchg
popa
lods
xor
mov
pop
dec
dec
je
push
loope
into
icebp
mov
hlt
mov
std
dec
sbb
ss
sub
shl
sbb
sbb
nop
jnp
imul
inc
aas
stos
mov
push
xchg
inc
fdivrl
sarb
std
or
pop
adc
add
test
add
in
movsb
mov
adc
ds
sbb
test
push
jb
add
xor
outsb
inc
sbb
xor
cmp
mov
jb
scas
fs
push
mov
adc
nop
pop
repnz
push
mov
imul
pop
negl
cmp
mov
push
sbbb
in
add
ficoml
adc
out
add
outsl
sahf
cltd
and
sbb
push
cmp
add
es
mov
lods
inc
add
inc
sbb
pop
add
insl
sub
inc
fdivs
or
xor
inc
orl
and
pop
jle
add
pop
xor
mov
lret
xchg
adc
xor
fisubs
lds
insl
loop
xchg
sbb
sbb
pop
mov
and
dec
xor
xor
inc
ljmp
loopne
pop
dec
xor
add
lcall
inc
test
sub
inc
mov
sub
and
pop
add
mov
or
xor
dec
loopne
jno
aaa
dec
sbb
pop
mov
push
ret
insb
repnz
inc
pushf
jae
imul
sbb
int
adc
test
push
cmp
sub
shlb
shr
je
sub
push
sub
pop
sbb
data16
jle
sub
mov
jmp
or
cmp
faddp
out
inc
call
or
jp
sbb
or
mov
ret
clc
mov
or
push
sbb
icebp
std
cmp
xlat
add
mov
inc
sbb
or
fsubrl
mov
pop
push
shrb
sbb
popa
lahf
stos
adc
in
lea
call
adc
ds
push
out
adc
cli
pop
cwtl
or
movsb
add
clc
fstpt
sbb
hlt
icebp
mov
movsb
pop
shr
jne
adc
in
inc
lock
dec
xor
imul
push
jmp
fsubl
add
stos
adc
jns
cmp
xor
mov
jge
fimuls
enter
mov
push
mov
lret
mov
sahf
and
frstor
cmp
pop
dec
fcomi
sbb
push
xor
sbb
ja
pop
inc
and
imul
test
lret
add
scas
loope
or
jno
push
push
data16
mov
arpl
insb
mov
and
nop
or
jl
cmp
jb
clc
add
dec
fisubl
or
inc
nop
out
stos
pop
clc
ss
mov
mov
out
jns
call
jb
or
sub
arpl
mov
xor
cmp
sbb
shl
loop
jmp
hlt
hlt
arpl
js
hlt
lret
mov
in
scas
dec
sub
loope
jb
inc
nop
out
push
dec
push
add
inc
sbbb
gs
mov
xlat
mov
pushf
adcb
clc
movsl
fs
inc
add
jbe
je
hlt
call
data16
pop
pop
stc
or
pop
jne
outsl
push
or
ljmp
adc
scas
lods
rcll
jg
xchg
add
sub
or
add
or
add
in
inc
ret
push
in
add
xchg
scas
xor
xchg
jae
add
adc
or
incl
rorl
push
adc
cmp
andl
div
pop
inc
adc
sbb
lcall
mov
in
xor
fsubrs
pop
pop
jns
inc
sbbb
jno
push
and
daa
in
repz
push
add
xchg
cltd
inc
sbb
fisubrs
enter
sbb
dec
cltd
les
xlat
in
jbe
popa
test
call
sub
addb
and
fisttpll
xchg
jbe
jno
cmp
dec
add
sub
iret
mov
ret
inc
movsb
or
sahf
push
fwait
xor
fstpt
sbb
mov
lea
orl
es
cmp
mov
sbb
stos
sbb
cltd
lods
sub
mov
cmpsb
cmp
or
pop
and
sub
out
xor
add
mov
push
aaa
scas
in
inc
inc
mov
push
cld
cmc
cmpsb
mov
rorl
mov
cmp
xor
adc
es
dec
mov
or
test
insl
dec
xchg
sub
and
clc
clc
sbb
in
inc
fcmovb
xor
or
push
fwait
xlat
xor
sbb
mov
fsubrs
mov
add
js
or
inc
shr
mov
inc
push
jb
sub
add
aas
or
fcmove
mov
out
hlt
jne
mov
dec
push
push
push
push
pop
and
cmp
push
sahf
les
mov
add
icebp
insb
xchg
iret
jno
dec
jmp
jecxz
jno
jle
jae
lea
jmp
or
imul
mov
add
or
sub
in
lret
inc
or
cmp
and
fcmovbe
call
sub
lods
mov
or
imul
pop
mov
mov
outsl
hlt
xor
add
jl
int
lock
xor
test
add
daa
inc
push
das
or
add
aam
push
rcrb
sbb
mov
rclb
sahf
xor
pushf
mov
je
xor
inc
pop
adc
bound
xchg
lock
mov
sbb
cmp
cmpsl
mov
insl
faddp
and
inc
xor
fsubrl
or
cmp
test
and
inc
lret
outsb
jl
pop
xor
lcall
rorl
dec
adc
push
and
andb
fwait
or
fstpl
inc
nop
pop
callw
cli
or
cmp
gs
addb
fdiv
sub
ret
loop
sbb
dec
ja
pop
xchg
mov
rol
lcall
popf
nop
mov
in
mov
xor
add
mov
push
lds
lahf
mov
push
push
jmp
dec
and
adc
aaa
pop
push
add
or
pop
pop
add
sbb
push
addb
pop
bound
das
adc
mov
sarl
xor
pop
pop
mov
jp
push
sub
arpl
fdivrs
scas
inc
addr16
ret
push
push
mov
and
xor
les
add
sub
mov
cmp
add
icebp
loopne
sbb
mov
sbb
pop
mov
dec
dec
jns
sub
je
psubsb
lcall
je
xchg
daa
mov
cmp
mov
imul
std
int
xor
or
jne
and
mov
jo
or
or
xchg
dec
sti
sub
inc
push
sbb
cmp
push
and
add
or
scas
add
int3
push
notl
xchg
and
push
in
mov
jmp
ja
loope
addb
dec
in
xor
and
inc
cli
mov
imul
add
dec
mov
sub
adc
mov
or
pop
add
movl
rcrl
pop
gs
jp
mov
add
sub
sub
cmpsl
test
sub
sbb
cmp
ds
push
aam
add
inc
lcall
mov
push
test
sbb
mov
loop
push
or
dec
mov
cmp
enter
insl
dec
out
lret
cmp
push
and
jb
mov
pop
shlb
add
shrb
call
add
in
or
pushf
cld
push
add
cmp
add
xchg
data16
lds
lock
sbb
sub
push
adc
push
push
or
ds
aad
inc
add
aad
ja
inc
xchg
cmp
sub
out
add
add
cmp
outsl
scas
xor
push
test
or
dec
leave
and
mov
mov
addr16
push
push
sbb
jle
or
aaa
push
cmp
jl
push
push
insl
pop
mov
xchg
mov
jnp
in
in
dec
in
cs
es
hlt
xchg
pop
adc
adc
inc
aad
out
cmp
in
mov
aas
pop
jne
mov
jl
jmp
scas
dec
add
adcb
pop
neg
call
ss
sub
lcall
es
out
push
and
add
arpl
and
stc
nop
daa
test
test
dec
add
xchg
dec
mov
dec
lea
mov
cmp
cmp
out
dec
or
testl
and
xor
xor
out
out
adc
push
shr
inc
mov
mov
sbb
ja
shr
rcr
shr
rcr
or
xor
std
int
push
mov
inc
mul
add
jb
cmp
std
decb
or
cmp
add
and
dec
movsb
push
fisttps
mov
push
add
loope
push
mov
jecxz
lcall
outsl
adc
mov
outsl
ja
roll
add
or
or
mov
and
ret
adc
es
mov
lcall
mov
jge
pop
or
xchg
dec
sbb
and
out
or
movsl
cltd
sub
add
adc
or
cmovns
mov
inc
nop
xchg
pop
pop
mov
pop
push
add
push
pop
in
or
xchg
divb
mov
sbb
dec
outsl
jo
das
mov
push
sbb
cmp
push
mov
push
ja
push
jne
dec
mov
or
inc
mov
inc
xor
cmp
push
nop
imul
push
or
in
cld
mov
bound
fistpll
inc
adc
sbb
cltd
test
jmp
repnz
xlat
lahf
cmpsl
pushf
movsb
xor
inc
rolb
inc
sbb
mov
mov
jmp
push
and
jmp
les
mov
or
cwtl
das
dec
out
loopne
or
test
or
lock
or
aam
in
xorl
add
mov
add
popf
lret
ja
dec
mov
pusha
loopne
mov
sub
ds
inc
adc
push
add
inc
add
ja
and
lock
outsb
and
arpl
jo
or
or
imul
push
outsl
insb
or
xor
imul
test
and
outsl
jb
gs
arpl
push
insb
outsl
and
imul
outsl
jnp
adc
outsl
cmp
lahf
pop
fs
dec
jb
addr16
insl
jae
mov
outsb
jae
gs
bound
outsb
aaa
xor
xchg
gs
bound
arpl
sub
sti
popa
je
fs
push
and
xor
int
sbb
push
sbb
and
popa
inc
iret
repz
pop
sub
aas
xchg
repz
dec
in
jl
std
fsubl
pop
scas
jmp
cltd
scas
cmpps
mov
aas
insl
dec
push
jg
out
jb
jmp
pop
dec
sub
js
cmp
pushl
cmpsb
es
or
adc
add
rolb
cmp
adc
xorl
pop
cmc
ss
decl
push
fldt
jmp
jbe
xor
adc
and
shrl
mov
mov
ret
adc
mov
xor
js
fistpl
faddl
pop
mov
xor
lret
pushl
push
fadds
in
sub
out
sti
pop
push
fistl
and
jmp
in
stos
outsl
negl
stos
push
mov
add
mov
xchg
or
clc
rcr
xchg
incl
sahf
mov
aas
push
idiv
jns
or
mov
xchg
ret
sbb
loopne
lock
inc
hlt
mov
in
gs
imul
loope
cld
inc
push
sti
mulb
xor
xor
insb
mov
xor
or
add
out
add
ss
loope
popa
call
cmpsl
add
jb
jne
test
movsb
aam
or
aas
andb
jge
add
lcall
jge
enter
adc
data16
add
sub
ljmp
into
outsl
rolb
sahf
inc
je
or
xor
add
push
test
jbe
mov
or
pop
lock
mov
push
aas
shl
mov
sbb
test
cmpb
mov
or
add
push
jmp
xor
xor
pushl
push
test
shrl
call
jg
notb
jmp
jmp
jle
mov
je
or
and
jns
std
aad
loopne
pop
add
inc
mov
ds
ljmp
inc
cli
push
push
sbb
push
lock
in
call
mov
shrl
sbb
dec
add
adc
iret
sbb
mov
add
cmc
adc
das
ret
les
adc
movsb
add
sub
or
in
test
sbb
insb
push
xchg
push
sahf
add
push
aaa
ret
add
pop
dec
loope
mov
push
adc
lods
cltd
movsl
ja
leave
dec
movups
pop
lret
sar
mov
decl
pop
sti
je
jmp
and
bound
into
inc
sbbl
inc
in
mov
push
or
mov
std
lcall
in
pop
rclb
inc
lea
inc
cmp
rcrl
invd
jne
mov
pop
cmp
inc
inc
imul
std
imulb
xor
add
fiaddl
sbb
mov
sub
fcoml
int3
add
push
rol
lea
in
loopne
outsb
push
xlat
stc
jbe
ds
cmovb
rcrl
cld
push
push
push
test
mov
fiadds
xor
or
jb
mov
repz
push
pop
or
xor
inc
mov
mov
insb
cmp
or
sbb
into
push
sub
push
into
push
sbb
lock
enter
sub
out
mov
pop
add
adc
add
and
add
mov
je
push
dec
mov
jb
jo
jne
testb
repnz
icebp
movl
sbbl
sub
test
dec
pushf
cld
test
arpl
mov
ficoml
lea
push
hlt
or
call
testb
cmpsl
jl
dec
test
xchg
pop
outsb
push
pop
ret
gs
xchg
rcrb
int3
mov
mov
incb
outsb
jo
dec
inc
mov
adc
aas
lret
in
push
lea
in
jae
mov
push
jecxz
pop
sti
add
cmp
loopne
scas
pop
aas
add
add
jl
ret
lret
inc
scas
inc
hlt
ret
rorl
jmp
cld
mov
das
clc
or
in
push
lea
lods
jo
cmc
outsb
test
pop
adc
pop
lret
or
out
adc
or
loope
inc
cmp
pop
lock
and
inc
fs
push
xchg
sarb
mov
or
and
mov
push
push
les
push
mov
adc
ret
idivl
movsb
push
push
dec
cwtl
push
sti
out
mov
pop
sahf
xorl
add
mov
int3
mov
push
push
push
sub
call
lock
xor
jb
add
rclb
test
fsubl
sti
inc
pop
adc
scas
loopne
push
fldl
andl
mov
int3
or
add
inc
loopne
in
lea
xchg
sbb
push
cld
mov
mov
mov
ret
call
inc
sarb
jl
pop
xchg
push
je
cwtl
loop
popa
jno
test
dec
add
adcl
mov
cwtl
push
jbe
push
cld
fistpl
push
test
push
mov
subl
shll
xor
outsb
jmp
faddl
dec
outsb
pop
mov
and
cmp
insb
inc
jp
loop
pop
lea
xchg
adc
pop
insl
insb
push
jge
ret
jle
dec
loopne
call
add
add
shr
gs
clc
inc
pushl
outsb
out
xlat
adc
push
into
call
xchg
cwtl
sub
subl
mov
scas
cmp
pop
cld
stos
mov
mov
decl
andl
std
xorl
pop
rolb
mov
sahf
inc
add
cmp
jecxz
jb
lods
xor
pop
fdivl
lea
call
push
loope
adc
and
pusha
mov
stos
cmp
leave
call
or
mov
push
inc
pop
test
jb
into
mov
int3
pop
je
je
incl
and
cmpsb
cli
cld
out
lock
pushf
adc
mov
mov
adc
inc
xor
jecxz
add
mov
outsl
das
or
fisttpl
ret
cmp
in
call
loope
rclb
sbbl
pop
mov
in
cmp
push
adc
int3
push
mov
jb
rolb
lock
and
out
repnz
ss
add
lcall
add
std
push
or
pushf
or
int3
call
pop
lock
sbb
sar
test
adc
jecxz
mov
inc
jne
fwait
imul
or
std
adc
repz
adc
pop
pop
jg
addr16
fdivl
xor
lods
jnp
jne
lock
adc
pop
jge
and
call
mov
lock
and
sub
lock
movsl
mov
adc
outsb
pushf
inc
aaa
cld
mov
dec
sbb
fwait
test
mov
mov
test
mov
lea
cmc
push
repnz
data16
pop
jb
inc
ret
dec
mov
out
mov
fs
xorb
jle
test
jb
int
push
inc
out
add
cmc
bound
subl
call
and
stos
rcrb
jae
test
rorb
lock
push
mov
mov
test
adc
adc
fwait
sub
mov
aas
mov
mov
pop
icebp
add
mov
call
adc
jmp
add
es
cli
mov
adc
hlt
insb
inc
ds
inc
pop
mov
jl
packuswb
or
adc
push
pop
xchg
rcr
or
inc
stos
popf
jmp
push
dec
insl
adc
jne
push
lock
ret
out
arpl
cmp
cmc
push
jl
xor
push
sarl
outsl
sti
pop
loopne
shl
xor
add
ljmp
mov
mov
push
mov
dec
cmp
insb
into
test
outsb
rorb
mov
mov
dec
cmp
add
push
test
orb
imul
rorb
inc
lock
cmp
add
leave
lret
fsubs
aam
lcall
mov
cli
neg
add
add
jp
jae
pop
das
pop
icebp
lea
push
push
pop
mov
testb
push
std
insb
pushf
push
cmp
mov
xor
mov
outsb
aaa
mov
je
inc
cld
insb
sti
push
mov
inc
and
cmp
add
mov
fsub
hlt
dec
jb
cmpsb
push
fnstsw
push
out
decl
adc
jge
ret
pop
xor
add
fsqrt
jb
xor
das
ret
mov
and
dec
imul
add
lods
cld
mov
lock
sub
cld
mov
int3
xchg
push
or
sub
hlt
inc
mov
icebp
inc
or
rorb
lods
in
int3
call
sub
push
pushf
jo
mov
aaa
or
lea
cld
test
idiv
hlt
in
es
add
stos
mov
pop
push
add
or
test
xor
push
sub
rolb
xor
scas
fcomps
mov
and
jne
fistpll
mov
mov
adc
jle
push
xchg
addb
and
jnp
xchg
loop
inc
add
rol
addr16
sub
std
add
xor
push
add
jg
in
fs
inc
adc
in
cmpsb
loope
int
shlb
lods
lock
push
inc
add
push
insl
jecxz
movhps
jl
push
sub
mov
inc
movb
subps
xor
rcr
scas
fldl
cld
jne
adc
pop
hlt
push
inc
adc
push
les
ret
loopne
jne
add
out
jecxz
jne
inc
call
js
fdivr
std
push
cmp
std
adcb
sbb
ret
test
cmp
push
mov
inc
or
adcb
add
mov
push
adc
sbb
push
add
adc
fistpl
push
or
sahf
pop
mov
mov
cs
inc
stos
adc
out
xor
add
push
ljmp
int3
je
push
xchg
nop
sbb
push
test
xor
mov
add
addl
lock
ja
cwtl
add
data16
adc
int3
or
pop
repz
mov
movsb
or
lods
ss
pop
rcrb
mov
out
push
jmp
clc
push
mov
mov
rclb
inc
aas
add
dec
inc
fdivr
clc
xor
stc
cmpsl
mov
push
mov
lds
test
add
les
stos
pusha
sbb
or
mov
xchg
out
sbb
xchg
test
movsb
clc
je
movsl
inc
mov
loop
mov
jo
or
out
xor
test
lret
jmp
adcl
add
adc
xchg
sub
stos
cmp
push
or
fsubr
adc
mov
mov
rcr
mov
lds
mov
inc
or
call
cld
push
lock
int3
call
push
or
call
or
mov
movsb
cmp
adc
neg
add
out
add
fiadds
cmp
mov
sbb
sbb
push
je
adc
jo
inc
push
adc
mov
xchg
mov
repnz
lahf
stos
in
add
ret
enter
test
leave
mov
add
das
mov
sti
cld
das
sbb
xor
cmp
mov
aaa
test
mov
and
mov
addl
pop
popf
jecxz
stos
mov
push
ret
call
cmc
hlt
outsl
jmp
sbbb
jo
jmp
rorl
jl
mov
int
push
mov
icebp
mov
sbb
js
jne
add
in
sub
lods
rcl
jl
pop
add
popa
inc
mov
sbb
jae
ror
insl
gs
cmp
cmp
push
fs
fiadds
inc
cld
pop
pop
outsl
clc
incl
push
add
or
ret
in
or
mov
sub
xor
jmp
outsl
cld
or
xor
les
sbb
clc
mov
lock
mov
mov
push
test
test
xchg
add
in
lret
clc
pop
hlt
dec
je
sub
in
std
push
mov
fs
mov
jp
push
and
in
cld
mov
in
cmp
push
addb
mov
out
subb
mov
push
jo
inc
push
xor
loopne
push
xor
mov
movsb
pop
mov
xchg
push
loopne
mov
mov
fcoms
sbb
ljmp
add
mov
sub
jmp
jb
add
pop
lock
fiaddl
xchg
add
dec
mov
aas
inc
xor
xchg
aas
cld
mov
popf
call
out
scas
mov
lock
pop
cld
cmc
mov
test
data16
cmpb
hlt
test
adc
cmp
scas
ss
xor
add
ds
push
rol
pusha
mov
mov
push
int
lcall
jge
daa
cwtl
cld
add
add
inc
push
adc
shrl
inc
cmp
outsb
mov
clc
or
rorb
rcrb
incw
cmp
and
incl
add
add
fisttpl
add
mov
xor
rclb
pop
test
sub
cmpsb
test
popf
sbb
mov
adc
and
out
shlb
adc
push
mov
or
jne
ret
fdivrp
popf
loope
ficompl
into
adc
pop
test
outsb
call
mov
test
shll
js
push
or
mov
or
jge
gs
mov
pop
cmp
icebp
push
cmp
ja
cld
aaa
jmp
pop
inc
cmp
int3
jne
loope
or
and
in
rolb
inc
add
repz
std
push
repnz
ljmp
enter
call
mov
inc
out
lock
roll
pcmpgtw
or
adc
lcall
sub
scas
ror
idiv
cmp
add
add
jns
or
test
cld
xor
in
sub
inc
pushf
out
rorb
cwtl
arpl
xchg
mov
inc
mov
adc
cmp
cli
push
mov
mov
pop
push
pushl
rclb
push
andb
xor
push
into
mov
decb
inc
mov
cmp
mov
leave
lea
xchg
daa
jne
out
test
and
cs
pop
cld
insl
aas
or
into
scas
ret
pmulhuw
add
mov
fdivrl
pop
pop
sub
test
cmp
es
sub
in
and
dec
pop
and
add
push
cmp
bnd
sar
cwtl
sbb
or
mov
pop
xlat
mov
call
adc
push
ds
adc
inc
push
and
sub
jbe
cmc
mov
out
inc
int3
movsb
add
add
push
decb
js
add
ret
mov
pop
in
add
or
mov
fistl
in
push
push
imul
mov
xchg
pop
and
push
sarb
call
imulb
mov
cli
rorl
or
or
push
loope
in
in
inc
ret
add
or
and
or
add
adc
jmp
in
rcl
jle
out
int3
ss
lret
jbe
data16
or
cli
pushf
pop
int3
lods
push
sti
stos
jmp
mov
call
push
leave
mov
add
test
fisubs
test
jmp
xor
jno
jp
pop
sub
scas
push
in
notb
sar
mov
ja
xor
jo
xchg
jmp
xor
or
out
push
std
testb
fisttpl
pop
jg
jg
test
sbb
pop
loope
bound
push
cmp
in
mov
jp
and
cmp
dec
divb
sbb
jge
imul
mov
fdivs
mov
xchg
pop
les
shr
mov
add
and
test
pushf
loope
pop
lock
push
shl
nop
or
adc
adc
pop
xor
out
ret
jo
adc
cli
xlat
add
int3
insb
xchg
inc
stc
outsb
pop
cmp
xor
leave
push
aad
mov
outsb
test
adc
call
test
pop
sarb
lock
pop
xor
cmp
pop
cld
pop
xor
or
int3
push
hlt
push
push
and
add
mov
aaa
outsb
inc
mov
sysenter
mov
sub
ret
pushl
jg
mov
adc
or
xor
push
push
incb
lods
add
jbe
mov
clc
push
sub
lret
or
stos
pop
mov
incb
je
xchg
sub
inc
jnp
or
push
lods
jo
pushl
iret
push
icebp
aaa
adc
push
cmp
js
clc
inc
test
push
lock
decl
xchg
adc
mov
fsubs
es
nop
outsb
push
lods
xlat
and
shr
fwait
pop
cmp
stos
pop
add
jne
leave
dec
pop
xor
mov
mov
je
int3
loopne
ficompl
add
mov
call
fimuls
add
xor
fadd
addb
push
mov
sbb
sbb
pop
push
jmp
pcmpgtb
sub
in
stc
add
xorb
push
call
mov
dec
imul
pop
sbb
xor
cmp
sub
adc
mov
out
mov
bound
je
ljmp
adc
repnz
adc
cmpb
push
cmp
test
mov
mov
scas
jg
rclb
int3
rclb
neg
into
out
ds
jmp
lea
movb
nop
outsb
fwait
cmp
inc
push
lcall
rclb
adc
cmp
in
pop
mov
repnz
repz
mov
pcmpgtd
add
lock
push
popf
test
pushf
pop
scas
inc
inc
fs
hlt
imul
ud0
enter
fisttpl
add
test
dec
cmp
fsubrl
mov
sub
add
into
mov
or
jg
add
movb
aas
push
incb
cli
hlt
pop
mov
adc
mov
sbb
faddp
xor
rcrl
adc
cld
insw
leave
dec
dec
sbb
sbb
je
rorb
orl
or
dec
sbbb
mov
jne
lret
or
ljmp
inc
out
outsl
pop
mov
or
add
lret
xor
lret
adc
js
adc
fidivl
test
imul
aaa
nop
jle
incl
insb
test
aad
adc
das
sbbl
out
xchg
shrb
lods
lret
xorb
fistpl
or
add
dec
int3
adc
dec
jne
adc
jle
inc
fs
clc
ljmp
mov
out
pop
js
hlt
mov
cmp
std
mov
aad
add
lret
jmp
sub
cmpsl
mov
inc
xor
pop
cmp
mov
dec
lret
orl
push
jecxz
ret
in
scas
adc
mov
inc
clc
cmp
int3
lea
inc
adc
call
mov
out
clc
decl
adc
loopne
orl
addb
xchg
jbe
ror
push
insl
cli
push
add
enter
in
loope
lods
js
jb
push
pop
jb
push
mov
xchg
inc
inc
push
shrb
je
sbb
jmp
shll
aam
lea
sbb
jo
mov
mov
das
clc
pop
cmpb
push
mov
lods
into
scas
pop
stc
xchg
imul
pop
orb
gs
fistl
add
ds
ljmp
and
mov
int3
sbb
je
cltd
mov
mov
call
xor
rcrl
adc
sbb
sbb
loopne
pop
pop
lcall
jne
mov
mov
repnz
ret
fucom
add
adc
fistpll
sbb
pop
add
mov
push
icebp
adc
dec
pop
push
jae
and
or
cli
sub
insb
inc
shlb
dec
into
pop
cmpsb
adc
ret
out
cmp
cs
aaa
ja
inc
lock
dec
mov
adc
xor
push
xor
roll
mov
mov
sub
pop
in
stos
fidivs
fmull
push
pop
cwtl
mov
mov
add
gs
mov
add
js
call
lret
jbe
mov
pop
and
sbb
mov
adc
cwtl
sbb
imul
aaa
xor
and
out
sub
mov
push
jo
pushl
or
gs
aad
fcoms
push
mov
sti
add
add
ljmp
sub
xor
data16
movsb
inc
imul
sub
sub
rorb
jns
xlat
lods
cmp
push
push
adc
and
mov
lock
lea
incl
mov
inc
xchg
adc
cmp
pusha
jne
or
pushf
and
inc
add
fcmovu
es
scas
cli
jle
mov
clc
sbb
shlb
cmc
jb
in
inc
push
or
aad
outsl
push
mov
hlt
pop
or
jbe
xorb
mov
pop
jl
add
out
sbb
jl
les
or
test
inc
shr
popf
push
rcrl
jne
jae
sub
mov
mov
test
jmp
mov
dec
mov
sub
push
adc
mov
push
rcll
add
xchg
data16
cld
movsl
ret
call
cmp
inc
cmp
imul
push
movsl
loopne
jle
insl
xchg
iret
mov
ret
ret
push
mov
adcb
ds
mov
pushf
jb
xchg
mov
adc
adc
jne
gs
push
mov
pop
nop
rcr
clc
lcall
xor
jp
push
dec
sarb
ja
not
lea
add
sub
jp
loopne
test
jmp
mov
adc
cmp
jo
aas
pop
mov
aam
pop
push
movsb
pop
pop
outsl
inc
test
int
unpcklps
decb
in
sahf
add
cmp
fistpll
iret
shlb
push
cmpsb
jmp
push
call
test
fdivrs
es
ficoml
decl
xchg
inc
sbb
andl
push
loopne
stos
push
loop
rcrb
adc
mov
cld
inc
add
mov
test
pop
mov
and
mov
push
cwtl
mov
adc
sbb
pop
mov
out
jae
nop
mov
fiaddl
sti
inc
fsubr
pop
ret
push
add
or
bound
or
adc
loopne
ret
sbb
outsb
jbe
mov
je
pop
adc
add
cld
mov
loopne
mov
fisubs
call
mov
sbb
decb
int3
mov
push
adc
mov
mov
dec
push
incl
movsb
aaa
adc
fdivs
mov
push
push
push
out
mov
aad
dec
and
fdivr
pop
mov
es
call
int3
cmp
push
loop
mov
es
data16
mov
push
pop
mov
jb
movsl
xor
sub
jo
inc
mov
cld
test
inc
in
cwtl
mov
xchg
roll
data16
push
fwait
mov
psubsb
popa
push
add
rcpps
adc
or
push
inc
cmp
fcoms
adc
cld
mov
std
inc
push
adc
mov
adc
out
cli
xchg
orl
inc
call
ficoml
pop
lock
cmp
arpl
or
mov
add
mov
fsubrl
loopne
notl
mov
stos
aad
and
js
enter
xchg
ja
mov
add
push
xchg
pop
pusha
ljmp
jo
mov
add
ret
inc
and
push
int3
add
mov
adc
lods
xchg
or
clc
test
cmp
testb
or
push
mov
fs
call
push
dec
das
cli
mov
push
or
jbe
into
push
decb
mov
xchg
ja
push
lea
mov
add
int
mov
cmp
les
push
sbb
loopne,pt
fiaddl
xchg
or
mov
and
xor
fidivrl
rorb
xchg
outsb
push
cmc
mov
into
inc
stos
outsb
outsl
mov
sub
mov
jbe
mov
lods
cs
add
push
add
sbb
cmp
loope
and
ljmp
cld
add
push
add
lea
mov
std
pop
fstpt
hlt
mov
clc
lgdtl
cmp
inc
addl
mov
cmpsb
stos
test
mov
mov
data16
pop
cmp
push
jle
xor
cmp
push
rorl
ds
and
fiadds
pop
mov
sbb
bound
add
mov
mov
xor
psubq
sahf
mov
add
sahf
mov
inc
sbb
adc
sub
mov
andb
add
cli
jae
loop
jb
pushf
std
popa
rcrb
push
lret
hlt
in
in
mov
jmp
add
jl
mov
adc
sub
or
popf
mov
inc
test
and
icebp
push
mov
or
jle
shl
ffreep
sar
call
mov
mov
or
incl
pcmpgtb
push
mov
add
insb
je
push
stos
je
stc
lret
push
cld
mov
inc
outsl
clc
fcomps
dec
or
js
adc
in
sbb
jo
inc
decb
pop
popa
mov
test
add
xor
add
mov
sub
insb
or
mov
test
xchg
xor
rcr
ja
arpl
push
ja
add
add
push
fisubs
lock
ja
sahf
push
sbb
jle
dec
out
hlt
mov
or
jle
xor
sub
and
xchg
clc
mov
add
push
fdivr
pop
push
adcl
outsb
dec
adcl
or
hlt
inc
shlb
mov
pop
sbb
jo
call
sbb
xor
sbb
inc
imul
insb
pop
mov
jle
scas
ljmp
mov
out
data16
stc
mov
mov
rorl
push
js
mov
add
ud1
lods
jo
mov
inc
push
cmp
cmc
add
mov
jg
add
in
movb
mov
or
test
sbb
sbb
mov
push
xchg
in
inc
fs
add
cld
add
pop
add
testb
sub
decb
ljmp
sub
pop
flds
sub
int3
adc
rorb
inc
push
push
jne
je,pn
or
pop
push
xor
call
and
les
sub
cmpsl
into
je
and
mov
shll
inc
aad
ss
inc
inc
ds
aas
xor
in
lcall
test
mov
cmp
sbb
push
mov
mov
shlb
stc
xchg
inc
mov
pop
rolb
mov
push
imul
rdmsr
or
push
decl
fldt
in
inc
mov
rclb
or
add
or
pusha
je
xor
adc
and
ljmp
ret
test
mov
mov
inc
dec
insb
inc
icebp
push
inc
push
ds
push
mov
test
or
and
push
movsb
mov
fwait
ds
jge
ret
mov
xlat
xlat
xchg
and
inc
ss
pop
icebp
add
push
inc
cmp
add
pop
lock
ds
scas
dec
dec
je
fistpl
push
push
add
cs
mov
sbb
out
adcb
pop
push
loopne
jp
test
fmull
ret
push
in
pushf
js
add
dec
enter
aad
xor
pushf
pusha
fsubrs
cmp
sbb
mov
jno
add
adc
out
adc
jbe
pop
mov
push
mov
fistpll
loopne
push
je
push
rclb
call
in
mov
adc
sbb
xor
mov
ds
push
in
loopne
mov
and
fs
shlb
add
ficompl
pop
mov
jge
jge
and
cs
add
call
adc
push
xor
xor
outsl
cmp
call
mov
sbb
jmp
adc
jge
mov
jp
ret
ds
je
mov
out
pushl
fadds
jae
loopne
std
movswl
int3
dec
std
pop
or
xchg
jo
imul
into
push
inc
mov
sbb
cmp
xchg
imul
sarb
call
push
repnz
pushf
add
lods
dec
cli
lcall
xchg
mov
in
dec
cmp
test
push
sub
cld
jge
inc
or
arpl
mov
stc
jae
jl
pusha
mov
lret
push
mov
add
es
fadds
mov
loope
push
mov
movsl
andl
and
mov
pop
or
call
add
inc
test
inc
int3
shl
shlb
sti
les
sbb
mov
push
push
mov
in
ds
call
mov
divb
inc
call
adc
pop
bnd
sbb
lock
mov
cmpb
je
inc
jge
cmp
mov
adc
mov
adc
cmpl
ret
mov
xchg
mov
and
lock
fiadds
sti
frstor
and
nop
add
mov
mov
sbb
mov
inc
je
pop
add
lock
xchg
or
jmp
in
lahf
lea
cli
addr16
movl
fdivrl
lock
outsb
subb
inc
aaa
mov
popa
sti
int
push
lock
mov
xchg
inc
ja
or
aaa
popa
or
cld
mov
cmpsb
xor
or
push
test
roll
scas
pop
sub
mov
lcall
mov
sbb
sub
call
pushf
dec
push
test
decl
loopne
pop
jl
mov
xor
inc
arpl
inc
cli
sbb
add
push
cwtl
clc
mov
cltd
lcall
imulb
fiaddl
pop
xchg
cwtl
insl
sti
xor
push
add
leave
add
lea
mov
cmp
jae
rol
and
fwait
xor
lods
push
mov
adc
push
and
int3
adc
daa
loopne
add
or
loope
leave
inc
adc
xor
push
int3
fstpt
inc
adc
mov
mov
cli
add
adc
push
out
pop
cmp
mov
bound
sbb
lret
cld
mov
push
sti
inc
into
fmul
sbb
push
push
adc
incb
shr
lea
loopne
pop
scas
push
push
orl
fdivl
js
dec
fdivs
pinsrw
ficompl
mov
mov
mov
outsb
sub
fsubs
pushl
mov
sub
syscall
add
push
jge
xchg
push
mov
shlb
xchg
pop
add
js
je
data16
ds
adc
or
mov
lret
push
cld
jne
xor
imulb
hlt
or
call
fadds
pop
je
pop
adc
push
gs
pushf
je
ljmp
add
addb
jne
xorl
xchg
les
jg
hlt
mov
aaa
dec
rclb
xor
add
xlat
mov
mov
xor
inc
fists
and
test
data16
je
jge
lea
push
ret
call
in
outsb
roll
jo
jns
mov
xor
ret
sbb
mov
push
sub
jle
call
pop
push
inc
xor
pop
adc
aas
andb
sub
push
arpl
mov
cmp
repz
call
cs
mov
push
or
gs
push
fcoml
cld
add
mov
sbb
and
aam
adc
das
cmp
dec
fs
je
imull
call
mov
cmp
xchg
repz
push
psubsb
add
mov
sbb
pop
jnp
sub
sbb
inc
arpl
mov
int3
cli
cmovs
call
inc
int
out
push
dec
mov
mov
in
sti
push
sub
ficoms
jg
mov
xor
shll
mov
push
cmpb
insb
rolb
in
fsubs
lock
mov
sbb
push
dec
and
sti
add
fcomps
or
aad
shrl
fisubl
cmpsl
aam
sti
or
mov
push
pop
lock
push
lea
or
call
cwtl
mov
cltd
mov
pop
add
jl
jae
dec
jmp
pop
mov
sahf
mov
pushl
test
fs
test
jp
jmp
testb
push
xchg
les
xor
clc
shl
loopne
icebp
add
inc
jmp
loopne
test
out
adc
adc
xor
inc
mov
in
inc
adc
scas
pop
adc
cmp
add
inc
push
je
jge
mov
pop
dec
xchg
pop
sti
aad
adc
ret
mov
sub
adc
rolb
add
les
loope
das
jne
sub
push
movsb
int3
sub
test
js
cs
mov
bound
sub
pop
mov
push
clc
sub
cmp
inc
dec
mov
mov
jecxz
or
jge,pn
clc
rcrl
mov
push
fdivrp
mov
jge
add
xchg
les
iret
pop
andb
sbb
fcos
inc
mov
jmp
lods
sbb
xlat
push
push
lcall
hlt
jp
xor
call
mov
rcll
and
mov
out
or
lock
fs
call
mov
push
cld
pop
pop
cmp
insb
ret
dec
cld
mov
add
imul
push
addb
out
call
sub
mov
sub
xor
mov
pop
push
or
bound
cld
push
subb
or
xchg
jae
or
lret
adc
aam
mov
jo
aam
cmp
ljmp
mov
enter
dec
mov
add
and
xchg
inc
push
jb
call
cmp
incl
imul
cmp
decl
xor
pop
add
adc
aad
or
jne
pushf
push
lock
and
mov
inc
gs
xor
or
es
pop
pusha
adc
adc
jbe
js
push
dec
out
ss
xor
cs
andl
or
mov
push
jmp
scas
scas
sbb
or
das
xor
add
sbb
xor
adc
jl
jo
add
mov
inc
ss
clc
mov
ljmp
xor
and
aaa
mov
movsl
loop
faddl
lret
inc
cld
test
or
je
mov
jns
jne
sub
mov
adc
fs
insb
sub
mov
out
dec
jge
mov
pop
loopne
fsts
mov
aam
dec
lods
int3
pop
mov
ja
cli
push
decb
push
inc
mov
insb
clc
add
int3
outsl
or
cmpsb
xchg
add
cmpsl
xor
sub
sub
add
sarl
test
fdivrs
outsb
push
pop
icebp
pop
jne
cmpsl
lods
cmp
es
ljmp
mov
xor
ret
jecxz
xorb
jbe
jb
in
jg
test
es
arpl
loopne
incl
mov
ret
or
pusha
push
pop
shl
in
test
add
call
pop
nop
inc
movsb
lea
add
fsubrs
push
add
mov
test
add
pusha
push
cwtl
fmuls
adc
mov
cmc
sbb
aas
cs
mov
inc
call
into
sub
push
xchg
stos
jp
int3
dec
inc
je
and
pop
or
test
sahf
cmp
test
adc
push
mov
mov
cld
mov
sbb
add
add
sub
sbb
lea
and
dec
cwtl
loopne
pop
int3
shlb
push
inc
and
or
mull
inc
mov
leave
mov
cmpsb
clc
jle
sti
loopne
std
out
mov
int3
jmp
hlt
cmp
adc
sbb
lods
pop
cmc
es
pusha
call
test
fisubrl
xchg
shl
imulb
add
fs
or
jno
mov
xchg
daa
movl
jae
not
jg
aam
in
rolb
mov
call
jmp
add
pushf
sbb
mov
mov
int
lret
fists
or
enter
jbe
push
lds
push
pushf
adc
je
pop
in
mov
orb
push
push
test
imulb
xchg
xor
cmp
pop
inc
mov
mov
cmp
jne
push
imul
xchg
jecxz
lcall
pop
mov
push
into
insb
in
aaa
pop
or
or
data16
out
jae
hlt
pop
scas
or
rorl
std
aas
sbb
xor
subl
cmp
xchg
out
in
mov
push
popa
mov
lock
add
add
or
mov
lock
pop
shlb
sbb
add
cmp
ficoml
and
and
push
andb
or
dec
inc
fisubrs
cli
pop
pusha
cmp
adc
xchg
int3
sub
pop
pop
mov
adc
insl
rol
test
repnz
xor
xor
popf
xor
out
push
testb
fcoms
cmp
fcmovnb
sub
out
nop
popa
mov
cmp
cmpb
enter
roll
jmp
xor
push
push
or
cmp
push
in
fadd
ds
js
and
xlat
lock
cmp
ja
inc
mov
jmp
lock
mulb
pop
xchg
mov
cmpb
mov
jl
jbe
mov
adc
in
inc
je
mov
mov
jno
mov
in
decb
mov
es
test
int
sub
dec
jle
mov
pushf
aas
add
test
clc
add
add
js
mov
lock
pop
mov
mov
shrb
loop
mov
stos
push
jl
call
adc
jne
les
cmp
mov
dec
inc
add
std
cmp
adc
test
sti
adc
call
cmpsb
mov
fs
dec
aas
xor
add
sbb
test
sarl
loopne
gs
pop
outsb
mov
fistl
sarb
inc
xchg
adc
add
add
pop
push
or
jmp
popf
mov
movsb
stc
push
iret
push
lock
mov
jp
sub
out
mov
cli
xor
aas
mov
push
and
ljmp
jl
mov
jmp
xchg
mov
or
mov
adc
bound
pop
mov
push
pop
mov
add
mov
add
or
jge
mov
xor
negb
inc
test
inc
fdivrl
ss
lret
gs
adc
dec
mov
pop
ficompl
popf
lcall
adc
loopne
or
inc
sub
jle
cmpb
mov
movsb
ror
mov
push
outsl
add
std
mov
sarb
cmpsb
push
mov
into
lock
clc
mov
xor
pop
adc
cld
punpckldq
fcmove
sub
test
lods
mov
in
cli
add
adc
push
sub
imul
call
inc
sbbl
testl
inc
xor
inc
pop
test
add
lcall
cli
out
lret
mov
lgs
aad
mov
pop
daa
push
pop
loopne
add
aam
adc
inc
mov
aam
addr16
sub
add
cld
cmpsl
stos
lcall
jg
ss
pop
adc
test
leave
cmp
in
cmp
xchg
fmull
sub
adc
outsl
push
decl
lret
push
mov
jae
pop
add
push
or
adc
mov
je
xor
or
test
mov
loop
sbb
std
mov
icebp
lea
sub
sbb
cld
adc
testl
aaa
out
push
xor
mov
cmpsb
mov
clc
sub
ss
shrb
int3
fs
sbb
add
or
mov
packsswb
push
add
xor
mov
push
xchg
add
cmpsb
add
rsqrtps
mov
fbstp
mov
ss
je
je
ja
outsl
dec
lea
lock
pop
jl
loop
lea
add
xchg
adc
inc
xchg
sarb
call
jg
fucompp
rol
mov
nop
add
mov
inc
loopne
pushl
popf
data16
clc
mov
pop
sbb
sbb
pop
add
std
dec
ret
adc
add
or
cmp
decb
pop
add
mov
xor
mov
dec
std
data16
add
dec
test
dec
into
jmp
aam
sub
xor
mov
call
push
push
shll
or
mov
mov
test
pop
in
sub
and
aam
adc
cld
push
iret
out
mov
int3
fs
clc
push
add
clc
inc
movsl
xchg
mov
jbe
ret
cmp
pop
inc
test
jge
roll
into
inc
imul
pop
adc
mov
mov
add
push
cs
cmp
fisubrl
loopne
push
stos
fstpt
test
mov
mov
cld
pop
pop
enter
pop
inc
jo
or
sub
and
lock
mov
rorb
loopne
inc
push
aas
mov
mov
xchg
sbb
mov
loopne
shl
sub
jp
test
int3
and
aam
data16
in
test
mov
fildl
cmp
mov
push
das
test
jmp
ljmp
or
push
int3
sub
cli
xor
add
push
xor
clc
jmp
pop
stos
ret
xor
cmovno
and
add
fildll
push
mov
ljmp
jmp
shrb
mov
scas
jl
cmp
adc
insb
dec
inc
mov
mov
das
clc
das
mov
decb
add
xor
inc
negb
popa
push
rcrb
xchg
icebp
test
cld
push
subb
add
and
cld
mov
out
xchg
push
push
cmc
jb
imul
insl
or
cmp
lea
push
icebp
ss
inc
xchg
rolb
and
hlt
call
jl
fmul
push
incl
loopne
or
stos
sbb
xor
push
or
adc
fildll
pop
pusha
aaa
mov
sub
mov
mov
int3
shr
or
inc
or
add
push
mov
jle
pop
adc
jae
mov
cli
push
or
mov
mov
mov
adc
cmp
stos
orl
push
inc
dec
push
mov
dec
mov
mov
inc
lret
push
dec
cld
lret
ss
pop
dec
mov
ljmp
mov
push
insb
pop
adc
out
push
aaa
addb
xor
mov
fcoms
dec
xor
jbe
in
mov
inc
inc
cli
popa
adc
mov
mov
rolb
imul
les
fcmovnu
jg
cmp
movsl
adc
sub
jecxz
adcb
insl
pop
ljmp
rolb
arpl
mov
or
pop
jne
mov
out
mov
movl
sbb
or
fiadds
pusha
jmp
inc
ficomps
xchg
sbb
xchg
push
ljmp
xchg
fisubs
inc
imul
inc
push
sbb
loop
pop
clc
into
add
hlt
sub
jns
es
sbb
dec
sbb
sarl
mov
adc
lret
pop
lret
testl
nop
adc
fdivr
jle
cld
cmp
inc
in
push
test
int3
inc
push
lret
rol
mov
fildl
popa
sub
ds
cli
dec
jl
fiaddl
inc
and
pop
je
push
rcrb
arpl
clc
push
adc
sti
jge
adc
test
call
mov
ljmp
shll
jo
and
stos
imul
xchg
adc
inc
or
inc
or
inc
pop
pop
insb
xor
ret
test
pop
js
xorl
push
xor
mov
or
or
adcb
ret
fsubl
or
call
into
je
and
lods
jg
data16
xor
in
adcl
lar
dec
cld
or
mov
push
inc
adc
gs
sub
fs
into
mov
mov
lock
sahf
dec
test
inc
add
stc
dec
mov
decb
sbb
jecxz
test
clc
or
orl
fdivrl
dec
xor
scas
xor
inc
cli
orb
add
data16
pusha
mov
add
sti
es
fsubs
xchg
push
repnz
fs
mov
cmpsb
loop
shll
mov
mov
sub
repz
inc
cwtl
je
lea
lock
out
aad
addr16
ret
enter
adc
jecxz
cli
dec
ror
push
fcoms
loopne,pt
outsl
jmp
adc
incl
xor
iret
xor
verw
xor
rorb
ret
adc
jmp
sbb
movsl
in
pop
cwtl
addl
shr
cmp
or
or
insb
cmp
jl
mov
add
xor
dec
loop
jbe
hlt
pusha
mov
sbb
add
sti
ret
pop
add
add
add
in
add
push
shrb
inc
adc
cmp
inc
inc
decl
clc
cmp
scas
mov
adcl
iret
into
pusha
sahf
out
shrb
outsb
pop
ds
dec
push
loope
mov
or
jge
inc
out
mov
test
icebp
push
push
push
jbe
outsl
call
je
mov
testl
jne
scas
pop
xor
mov
test
enter
mov
or
rolb
loopne,pn
xchg
hlt
ror
pop
mov
mov
push
pop
lds
cmp
sub
cmpsl
sbb
or
test
fs
push
lock
inc
pop
out
lock
jb
cmpsb
pop
add
push
ds
sbb
les
push
mov
mov
adc
push
sbb
add
sub
rolb
inc
pushl
call
repz
call
test
outsb
pop
sarb
add
sub
or
dec
shr
mov
cld
frstor
into
sbb
mov
call
adc
push
add
add
cli
add
lods
lret
lods
call
rorb
decl
inc
vunpcklps
mov
out
incl
fiadds
lret
cmp
lock
test
jp,pt
xor
cmp
inc
mov
add
icebp
push
jbe
mov
inc
scas
ret
and
insb
or
enter
cmp
add
push
push
push
lcall
pusha
out
pop
les
and
jmp
data16
and
icebp
pop
pop
add
add
ss
rcrb
xor
jp
es
mov
mov
inc
into
xor
mov
adc
lock
mov
add
fimull
std
jmp
lods
xor
clc
int3
enter
cmpsb
jecxz
scas
aam
test
push
clc
add
outsb
mov
test
subb
aas
js
mov
pop
sbb
je
inc
add
sarb
mov
gs
std
cmovnp
or
jae
adc
lods
shlb
or
faddl
and
fisubs
sbb
sub
xor
and
por
mov
or
sub
xchg
testb
pop
push
dec
ljmp
pop
cmpsl
out
hlt
push
adc
shrb
mov
sqrtps
aaa
inc
scas
rcrb
andb
je
jno
lock
das
sbb
dec
adc
jb
bound
push
and
adc
dec
inc
push
adc
jo
adc
adc
lock
xor
push
ljmp
or
sub
push
pop
and
mov
call
jmp
jbe
outsb
and
mov
pop
add
xor
and
lock
shrl
sub
pushf
dec
ret
jl
sbb
push
mov
fs
idivb
call
sbb
jg
cmp
int3
addl
cs
rolb
cmp
dec
inc
and
mov
mov
in
jne
jne
push
cmpsb
out
sar
pop
lock
jns
rcll
rol
insb
test
or
imul
adc
add
fdivrl
bound
cs
xor
push
dec
push
xlat
insl
mov
xchg
push
ror
ljmp
lods
add
add
aas
js
xchg
lret
pop
adc
repnz
add
or
adc
or
ret
incl
sub
incb
adc
adc
xor
xchg
rclb
push
jecxz
sub
push
loop
add
mov
mov
insl
sub
or
xor
fmul
add
push
fsubs
and
ret
loop
call
push
std
mov
aad
gs
push
mov
aam
xchg
inc
fwait
ds
mov
fldln2
push
mov
jge
push
lock
sub
subl
fdivrs
sbb
inc
fidivrs
mov
clc
mov
pop
jmp
push
inc
inc
jb
call
subl
push
in
inc
popa
inc
loop
divl
popa
jae
arpl
or
jmp
test
mov
push
fmuls
andl
clc
jmp
push
out
fsub
std
test
cmp
lock
jne
call
int
sahf
or
js
add
jne
ficoml
adc
rclb
lock
mov
mov
or
fiadds
sub
call
arpl
fwait
lock
cld
sbb
push
mov
int3
and
mov
dec
push
push
push
cwtl
mov
pop
xor
ret
sbb
jo
mov
mov
pusha
cli
shrb
int3
mov
cmpb
aas
pop
adc
icebp
popa
popa
pop
je
jb
pop
add
adc
sub
mov
psubb
mov
leave
aaa
lret
cld
inc
jle
test
push
push
mov
push
mov
mov
inc
ss
cli
fs
dec
jne
mov
inc
clc
invlpg
push
test
clc
push
mov
ljmp
adc
mov
mov
std
cmp
jmp
fisubrl
rolb
imul
ljmp
orb
xadd
stos
cltd
stos
adc
jge
insl
add
ret
loopne
cmp
ret
jo
fsubrs
fs
incb
push
lea
pop
add
loop
inc
adc
mov
shrb
lea
mov
out
inc
insb
adc
pop
lock
fs
lret
shl
shll
lret
bswap
inc
cld
push
jno
pop
subl
push
rorl
daa
roll
mov
xchg
push
mov
push
std
or
push
rol
in
push
fimuls
ljmp
and
jl
adc
push
ret
test
icebp
pop
jo
push
dec
adc
dec
fidivl
xorb
pusha
push
adc
push
inc
add
inc
or
add
lods
pop
test
ja
aad
movsl
push
movsl
push
aad
push
mov
dec
add
mov
rol
adc
xlat
div
inc
dec
push
jp
mov
push
jp
mov
add
inc
lods
or
faddl
sbb
and
push
pop
loop
sar
clc
outsw
fisttpll
cmpsl
add
cs
sar
push
in
fcompp
mov
push
sub
mov
push
sbb
mov
jl
dec
jl
sub
js
fsubl
outsl
lret
inc
inc
or
push
ds
bound
call
cld
pop
or
sbb
jo
adc
jge
add
stos
call
clc
and
decl
push
fdivr
cmp
std
inc
gs
mov
pop
push
les
lock
decl
int3
fnsave
call
adc
enter
pushf
inc
sub
lock
cli
js
jbe
fadd
inc
cs
incl
fwait
mov
or
cmp
pop
pop
mov
call
mov
push
xor
cmp
mov
xchg
adc
mov
sar
or
add
or
or
sti
inc
ja
dec
nop
in
inc
push
cmc
das
xor
lock
push
pop
insl
fmuls
inc
mov
das
cmp
aam
incb
push
jne
cmpb
test
out
mov
cmp
mov
dec
inc
mov
add
cmp
testb
mov
push
int3
mov
aad
lock
pop
xor
cmp
push
xchg
sbbl
sbb
pop
xor
add
test
cltd
inc
or
cmp
dec
push
dec
jo
mov
insb
cmp
dec
push
and
lcall
lods
sbb
movsl
add
mov
lahf
test
or
cld
mov
xor
adc
xchg
outsl
clc
scas
xchg
xor
rorb
clc
sub
push
inc
mov
jle
cld
mov
int3
push
xchg
enter
pusha
rcrb
js
adc
stos
movsb
pop
and
jo
pop
sub
lock
dec
outsl
push
mov
mov
adcb
adc
inc
ficoml
jp
add
or
mov
and
dec
add
mov
push
xchg
mov
add
jecxz,pn
or
or
push
add
out
inc
roll
les
loope
sbbb
pop
inc
sub
mov
test
aaa
or
push
or
jp
jb
mov
lock
push
xchg
stos
iret
xchg
or
mov
jp
pop
in
jg
cmpsb
je
clc
jmp
cmpb
in
cmp
cmpsl
pop
and
mov
xchg
mov
sbb
mov
sbb
and
add
mov
jl
cld
ss
imul
testl
and
add
xchg
push
rorb
sbb
call
mov
or
fidivrs
cmpsb
stos
std
xor
cli
inc
test
and
adc
shlb
push
call
push
ficompl
dec
mulb
add
jmp
xor
cmpl
shrb
aaa
pop
sbb
mov
or
rorb
imul
gs
or
mov
mov
or
stos
aas
cmpsb
mov
mov
pop
push
inc
insb
mov
test
out
fildll
cmpsb
add
xor
rorl
test
mov
cmp
jmp
nop
test
pop
std
fwait
sbb
add
push
mov
insb
imul
jg
jl
call
popf
test
sub
insb
stc
add
test
andb
sub
mov
addb
mov
shlb
xchg
lret
jne
mov
mov
andb
mov
push
mov
stos
lods
push
push
xchg
cmp
sub
adc
dec
mov
or
call
shl
pop
mov
cwtl
lock
inc
mov
inc
or
mov
pop
push
adc
clc
jg
stos
push
fldl
rorl
data16
or
push
aam
and
jns
inc
cmp
add
into
add
pop
mov
in
cs
xchg
test
xor
xor
clc
rclb
fwait
push
rclb
fdivrl
test
push
inc
push
push
ret
and
ret
sub
add
fists
dec
dec
xor
imul
in
cmpsl
lods
or
inc
push
subb
mov
es
ret
inc
pop
sahf
cmpsb
enter
and
add
push
es
mov
orl
fcompl
xor
push
dec
cmp
and
fbld
mov
mov
push
cmp
push
int
lea
dec
adc
lcall
int
adc
jmp
pushf
push
cmp
xchg
mov
fidivs
shrb
or
lea
sarb
inc
sub
sbb
lds
aam
dec
and
mov
mov
xor
gs
sbbb
add
jp
fmuls
repz
adc
subb
das
adc
shrl
mov
jo
fs
dec
lea
ret
iret
and
cld
out
xchg
push
scas
push
inc
cmp
cld
test
je
adc
enter
mov
xor
movsl
cs
inc
and
mov
bound
add
and
call
pushf
xor
cmpsb
pop
data16
add
cmc
inc
mov
repnz
dec
in
adc
xchg
mov
movsb
add
inc
pop
sub
sarl
mov
dec
mov
dec
xchg
in
jno
cmp
xchg
push
leave
cmp
pop
add
in
aad
push
fildl
pushf
sti
cmp
push
iret
inc
mov
mov
pop
lcall
cmc
js
cmpsb
inc
loopne
in
bound
sub
imul
aas
int3
sub
add
cmp
out
push
int3
std
and
jge
cmp
fdivrs
cmpsl
outsb
fidivl
je
pop
add
or
sbbl
dec
stc
sub
inc
inc
loope
push
inc
and
dec
dec
std
mov
lea
mov
testl
icebp
iret
cli
pop
test
aam
aam
pop
sbb
or
and
insb
pusha
and
nop
add
lods
sbb
cmpl
gs
shr
shll
pop
xor
cmp
dec
mov
adc
out
out
mov
out
push
jle
jle
cmp
inc
cmp
loop
mov
add
rolb
jbe
in
fsubr
xor
xchg
ljmp
pop
lods
popa
fcmovb
mov
icebp
call
clc
and
or
mov
fistl
mov
add
or
dec
insb
xor
inc
push
clc
in
sub
jg
mov
jae
orb
add
or
les
ljmp
rclb
add
cmp
sbb
ret
push
or
mov
xor
popa
ja
call
stos
cmp
push
or
cld
add
mov
jbe
push
jecxz
stos
add
in
aad
push
loop
cld
mov
jae
add
and
cmpl
out
xor
loopne
and
mov
add
push
mov
xor
mov
xor
cmp
gs
call
add
adc
cmp
and
cmp
sbb
subl
xor
push
orl
mov
ret
inc
mov
mov
das
stos
mov
adc
adc
int3
sbb
lcall
lods
enter
add
insb
testb
decl
les
sub
cmp
mov
shr
je
fadd
pop
idivl
xchg
insb
push
scas
addl
xchg
roll
xor
mov
ficoms
push
add
outsl
incl
sub
jp
aam
push
xchg
pop
mov
mov
leave
outsb
xchg
cmp
mov
aaa
and
cmp
pop
inc
push
xchg
adc
aad
aaa
std
out
shl
pop
mov
gs
fiadds
gs
push
push
add
enter
pop
dec
out
and
fcmove
xor
xchg
push
adc
push
mov
dec
stc
pop
std
jmp
or
test
shlb
or
jne
rclb
mov
inc
add
test
push
scas
mov
outsb
je
adc
add
ret
add
scas
inc
push
je
add
sbb
adc
bound
sar
int3
inc
test
push
mov
test
cli
mov
pop
rcr
and
inc
cmp
dec
push
xorb
push
sbb
sub
cld
and
icebp
mov
test
bound
aad
mov
add
fstpt
clc
cmp
mov
lcall
lea
sub
mov
cmpb
mov
push
sub
mov
mov
fwait
cmp
mov
sbb
cli
imul
push
or
mov
lock
adc
push
mov
adc
test
lret
lret
out
cli
add
sti
dec
sub
xor
jo
push
gs
push
fs
mov
xor
aaa
lret
xor
movl
jmp
lods
sbbb
fldl
outsb
add
sbb
adc
loopne
cmp
push
out
pop
addb
add
cmp
shll
pop
cmp
sbb
pop
pop
cmp
mov
into
pop
pop
clc
fisubs
adc
call
decb
sbb
push
test
outsb
lock
stos
adc
dec
xor
cmp
push
mov
mov
mov
jp
dec
mov
aam
aam
sub
or
inc
je
inc
or
adc
addl
clc
mov
fadd
loope
push
add
xchg
call
test
repnz
mov
add
clc
int
push
xchg
adc
inc
mov
stos
mov
and
int3
jmp
inc
adc
sti
push
in
stc
bound
ja
fiadds
ljmp
mov
into
dec
pop
dec
xor
mov
fidivrl
inc
xchg
in
lds
mov
ljmp
int
sub
shr
pop
imul
mov
mov
fnstcw
xchg
and
cmp
dec
out
out
xchg
stos
sahf
rcrb
jbe
or
les
sbb
ret
jo
ret
jge
push
call
clc
inc
in
adc
mov
push
test
push
jae
nop
dec
cmp
icebp
push
divb
sub
mov
and
dec
inc
popa
jb
lcall
fcoms
fdivs
mov
aas
mov
fs
jle
icebp
hlt
lea
dec
ds
add
add
pushf
mov
xchg
lock
add
mov
cld
test
imul
aad
mov
xchg
call
lock
jb
cwtl
mov
sbb
nop
orl
repz
push
cmp
jo
lock
jne
js
mov
leave
rolb
push
add
mov
pop
inc
pop
bound
inc
xchg
or
or
test
sub
cmc
aaa
mov
mov
jb
inc
mov
or
push
hlt
lcall
cmp
add
dec
inc
cmpsl
sbb
pushl
inc
adc
cmp
enter
fisttpl
add
pushf
mov
sub
cmpl
inc
cmp
bound
push
iret
and
incb
aaa
dec
clc
push
das
lcall
sbb
movb
add
sbb
cmpsb
scas
inc
andl
je
je
and
pop
dec
fsubs
push
jecxz
push
jge
xor
sub
add
push
in
cmp
bnd
hlt
call
mov
sti
shlb
shlb
or
push
push
mov
mov
into
enter
aaa
adc
add
ret
loope
jl
je
loopne
mov
into
in
push
aad
mov
jb
pop
cmp
mov
push
in
icebp
es
push
pop
add
adc
mov
pop
roll
repz
xor
orb
cmp
mov
test
in
testl
pop
dec
inc
std
xor
pop
rolb
sub
sbb
cmp
and
jl
lods
or
lea
pop
insl
sbb
test
pushf
dec
decl
loope
pusha
jb
js
rcr
mov
outsb
les
pop
pop
mov
rorl
int3
shl
aam
cmp
pop
aas
add
mov
jne
inc
aam
mov
movsb
push
lcall
dec
mov
push
jecxz
inc
xchg
loopne
add
mov
xchg
and
mov
ret
mov
adc
scas
pop
in
outsl
fadds
pop
xlat
inc
xchg
std
aas
decl
mov
adc
jg
adc
add
dec
pop
push
cmp
add
mov
nop
adc
shlb
ret
sub
cwtl
cs
rorl
adc
cli
mov
je
mov
push
inc
inc
rcrl
sbb
add
rolb
jl
mov
adc
mov
mov
mov
jle
ljmp
pop
jne
mov
push
mov
mov
jle
mov
sbb
pop
int
xchg
out
clc
lods
jmp
popa
pusha
xor
inc
jmp
adc
mov
cld
pop
mov
sbb
orl
test
call
pop
ror
inc
data16
arpl
cmp
cmpsl
jmp
and
push
jns
push
loop
xor
xchg
push
loopne
mov
es
adc
cmpsl
enter
add
mov
adc
not
dec
bound
push
call
clc
imul
mov
mov
push
mov
adc
fdivrs
aas
xor
jb
xchg
jne
mov
add
je
icebp
inc
ret
dec
jecxz
incl
lcall
and
add
test
movl
lea
adc
cmpsl
adc
xor
mov
je
loopne
popa
out
mov
cli
add
dec
je
addl
dec
movsb
mov
mov
in
shrl
js
cmp
aas
adc
mov
outsb
adc
inc
mov
sti
shlb
in
gs
push
pop
adcb
pop
js
adc
in
dec
in
mov
les
mov
add
data16
cmp
add
insl
xor
call
aam
movsb
cmp
decb
xor
test
dec
jg
cs
jmp
push
xor
cmp
pusha
or
pop
xor
dec
cmp
aam
fs
mov
clc
aad
sbb
xchg
fs
xor
mov
add
repz
dec
pop
push
xchg
enter
fcoms
decl
xorb
in
adc
jp
ret
fisttpl
ja
pusha
xchg
inc
imul
cmp
sub
ret
loopne
shrl
sub
inc
fcomi
inc
bound
ret
push
mov
pusha
pop
inc
add
push
or
adc
sbb
std
inc
mov
pop
push
jge
sahf
push
movsl
in
jle
pushl
jmp
popa
mov
inc
adc
imul
movsb
repz
push
jbe
add
cmp
aaa
sub
lock
dec
pop
rclb
hlt
sub
or
jo
or
mov
inc
and
inc
add
push
cmp
lods
push
decb
and
push
mov
mov
stos
and
aas
hlt
xchg
mov
mov
icebp
push
arpl
adc
je
adc
cli
push
mov
je
add
mov
xchg
movl
test
nop
jle
divb
leave
xor
cli
dec
mov
or
outsl
or
xor
pop
pop
ret
push
inc
clc
fwait
lods
into
dec
test
mov
sub
dec
pop
inc
orl
xchg
inc
push
add
je
mov
int3
out
pop
or
adc
add
lds
test
loop
jo
icebp
les
push
inc
mov
cld
aam
add
lret
inc
inc
fdiv
push
sub
cmp
mov
cmp
loopne
jge
mov
or
les
lock
add
mov
roll
insb
mov
movsl
and
lret
push
push
mov
push
and
inc
or
add
inc
movl
xchg
inc
clc
hlt
js
and
cmpb
sbb
mov
js
inc
test
sbb
xor
rcl
inc
call
call
and
mov
xor
outsb
push
jb
push
mov
aad
adc
xchg
sar
mov
xchg
mov
testl
lock
addr16
push
mov
dec
cmpl
adc
mov
inc
add
lds
inc
ficoml
mov
cwtl
loop
jg
push
hlt
data16
pop
jne,pn
popf
adc
imul
loopne
rolb
loopne
addb
and
push
daa
rcl
xchg
push
adc
insb
aad
jbe
cwtl
add
dec
sub
sbb
and
outsb
ret
cld
push
add
clc
and
add
jo
sbb
ds
call
call
jno
push
ret
bound
les
sub
add
adc
and
push
jae
add
nopl
adc
push
mov
clc
test
fdivs
jbe
push
insl
pop
faddp
xchg
outsb
test
leave
data16
xor
dec
xor
adc
pop
outsl
mov
push
or
or
test
inc
lea
call
xor
dec
sbb
pop
sbb
shrd
or
stos
jo
in
or
ret
or
mov
jb
mov
and
mov
dec
mov
jno
rclb
adc
loopne
add
xor
aas
add
or
ljmp
mov
mov
scas
or
push
push
mov
jl
jl
fidivrs
loopne
add
dec
jg
das
mov
xor
or
ljmp
cmp
in
divb
cmp
xchg
dec
lock
test
ret
adc
add
enter
sub
aas
xlat
into
xchg
dec
in
call
call
lock
outsl
shll
pop
call
xor
mov
mov
fmul
js
mov
gs
clc
ret
add
and
ds
int
mov
test
fimull
adc
je
push
sub
jge
push
sahf
ret
sbb
pushf
cld
adc
rolb
jo
mov
pop
inc
adc
inc
sbb
nop
dec
repnz
add
add
or
mov
push
in
xchg
xchg
aas
mov
mov
loopne
ret
popf
mov
dec
mov
mov
mov
or
or
add
inc
repnz
jb
inc
loopne
aam
push
minps
jb
ret
push
jnp
mov
in
es
push
inc
push
push
push
inc
xor
xchg
lea
rorl
mov
jmp
sub
xor
lock
fwait
cli
cmpsb
aaa
mov
imul
jl
incb
insl
cmc
adc
add
ljmp
cli
roll
test
jbe
pop
js
outsb
jge
gs
hlt
push
dec
shlb
inc
sub
push
gs
cld
outsb
mov
icebp
mov
xor
jp
imul
pop
lock
in
movsb
push
lcall
mov
in
inc
test
cmp
inc
test
mov
jg
adc
out
inc
cld
repz
in
clc
jg
jg
xor
add
add
add
and
push
mov
pop
xchg
inc
dec
cmc
mov
inc
nop
subb
pop
mov
incb
push
or
mov
mov
add
inc
cld
xchg
xor
insb
js
mov
lds
jo
loope
sbb
adcl
mov
or
std
or
jbe
movsb
outsl
movb
pop
xor
add
xor
xchg
mov
call
call
out
xor
add
pop
lods
push
xchg
push
jne
sbbb
stc
das
mov
cwtl
fistpll
sbb
push
cmp
push
push
les
fwait
add
or
pop
add
bound
xchg
adc
mov
aam
fiadds
mov
int3
or
add
xorl
lcall
jbe
and
pop
aam
sbb
adc
mov
test
enter
jbe
rol
adc
mov
mov
sub
lcall
insb
in
int
sbb
or
lods
jb
inc
push
inc
dec
mov
push
rol
cli
xor
mov
out
std
pop
mov
cs
incl
mov
outsl
mov
mov
lock
push
or
in
test
xlat
push
js
mov
incb
hlt
cmc
jo
rol
push
adc
cmc
sub
lcall
mov
orl
pop
dec
clc
scas
or
push
in
xchg
sbb
jnp
mov
loopne
mov
cmc
pop
push
dec
cld
fcmovnb
mov
cld
mov
dec
lea
mov
xor
mov
je
cli
or
add
shrl
clc
mov
inc
jge
ficoms
mov
or
rcrb
or
shll
orb
cwtl
shlb
lock
mov
pop
out
xor
icebp
out
xchg
fisubs
adc
sbb
movsl
and
jbe
fidivs
orl
incl
inc
add
mov
in
jp
or
stos
lods
iret
cmp
add
and
popa
pop
or
lea
call
add
inc
gs
or
mov
mov
mov
xor
pop
sub
push
cmp
lds
test
sti
pop
fidivrl
loopne
xor
aam
sbb
pop
bound
add
test
inc
mov
inc
sarb
add
pop
push
add
stos
das
mov
rorl
pop
inc
int3
cmp
push
cld
out
mov
mov
cmpl
int3
js
and
shl
aas
or
push
or
inc
into
or
aad
jmp
xor
inc
inc
leave
or
es
loopne
leave
mov
inc
jb
sti
adc
or
cmc
push
pinsrw
int3
cli
add
cmp
sbb
mov
clc
add
lret
mov
lcall
push
sbb
jmp
out
add
pop
dec
dec
fiaddl
je
xchg
mov
inc
jecxz
js
in
or
adc
xchg
lret
rolb
jbe
fidivrl
mov
int3
decl
xchg
push
fs
mov
pop
rorb
stos
in
push
popf
test
ss
ja
jbe
lea
test
pop
call
push
cmpl
movb
cli
cmpsb
dec
std
movsb
sarb
dec
dec
fmull
or
je
or
xor
outsb
jne
daa
cmp
jo
test
rcr
xor
hlt
int3
fs
push
lods
clc
mov
inc
jmp
and
jne
call
or
sbb
pusha
or
rcll
add
dec
arpl
mov
test
outsb
xchg
test
inc
push
push
dec
mov
sub
out
jns
sarl
push
cmp
push
sbb
xor
sub
xor
sbb
cmpl
push
push
outsl
fadds
mov
adc
testb
test
clc
pop
push
aaa
mov
inc
aas
addb
or
jbe
cmp
jb
push
lea
mov
fdivrp
mov
bound
and
mov
ds
hlt
push
ljmp
mov
inc
fbld
jl
xor
je
into
movsl
xchg
adc
je
add
pop
subb
mov
icebp
je
mov
mov
gs
sub
ds
cld
dec
mov
andb
cs
mov
dec
jl
inc
lahf
in
mov
mov
sbb
mov
repnz
jne
movsl
or
mov
data16
aam
je
sub
fsubl
xor
xor
mulb
rorb
xor
and
xor
jl
jle
adc
xchg
test
push
cld
je
stos
add
cmpsb
fcomps
sub
mov
call
sub
dec
adc
jg
xchg
and
inc
je
aad
add
aam
or
add
mov
jbe
rolb
and
sarb
ret
push
aam
jmp
and
call
push
pop
fadd
orb
icebp
pop
hlt
and
jns
pop
hlt
pushl
mov
and
cmc
mov
add
push
add
push
outsl
subps
mov
clc
mov
and
lds
push
in
jo
add
lock
ja
and
test
call
add
cld
lahf
sbb
jne
inc
ret
sbb
aas
inc
add
outsb
gs
out
lea
cwtl
imul
adc
fmull
sarl
hlt
enter
cwtl
int3
add
sbb
pop
gs
cmpsb
mov
and
addr16
xor
out
negb
insl
xchg
sbb
data16
enter
jo
test
les
push
mov
dec
lods
idivb
cld
int3
jo
lret
jge
es
popf
or
add
pop
sub
out
repnz
mov
pop
inc
cld
jle
jmp
movsb
outsl
push
je
adc
test
pop
push
ss
cmpsb
cmpsb
and
fisubs
lock
mov
add
push
ss
aaa
ljmp
fidivl
jp
jb
dec
push
leave
call
sti
incl
inc
push
test
mov
or
fisubrs
or
push
incb
lods
inc
clc
nop
aam
inc
cli
arpl
rcr
xchg
mov
and
jmp
xor
outsb
cld
test
adc
inc
inc
xlat
out
mov
cmp
xor
roll
scas
adc
sub
icebp
dec
jg
movsb
inc
push
rorb
out
clc
subb
cld
rclb
cmp
imul
add
add
mov
insl
xchg
inc
repnz
jo
push
or
jo
cmp
dec
in
gs
push
aas
je
fcoms
xor
vpmovsxwq
jmp
or
icebp
cli
push
push
jbe
fisubs
gs
push
pop
pop
push
mov
sbb
adc
xlat
enter
sbb
mov
test
cli
outsb
push
cmp
pop
mov
shlb
movl
add
fdivr
fldenv
repnz
mov
or
stos
jmp
push
lods
clc
cs
ljmp
imul
rorb
push
cmp
pop
sub
jge
gs
mov
shl
mov
mov
ds
pop
loop
aad
push
sbb
ss
lock
fistpl
sub
mov
inc
jge
mov
xlat
add
pop
dec
lahf
out
je
or
xlat
add
lcall
add
jg
or
push
add
push
insb
ret
sub
stos
sbb
test
adc
xchg
dec
lea
adc
inc
inc
sub
test
mov
pushf
in
ljmp
push
xor
push
filds
adc
incl
and
or
jae
lea
add
mov
movsl
subl
push
adc
inc
aad
fnstcw
add
jp
sbb
and
pop
nop
mov
sbb
movsb
test
mov
outsb
enter
mov
clc
mov
cmp
push
movsb
mov
loope
in
dec
test
ja
pop
loop
push
movb
rcrb
incl
in
adc
test
sub
mov
mov
adc
mov
cmp
test
push
push
jne
sub
sub
stos
paddb
outsl
lret
cli
lcall
test
dec
add
stos
cmp
call
xor
cld
or
decb
jo
data16
jle
jo
js
cmc
decl
fiadds
cmp
in
pop
mov
inc
or
or
sub
cmc
inc
xor
iret
stos
inc
in
mov
movsb
mov
and
sub
je
sbb
das
and
fs
mov
add
push
add
xor
add
mov
mov
or
push
adc
ljmp
xchg
in
cmp
jl,pn
stc
mov
mov
sub
jne
sbb
adc
mov
add
jbe
inc
sbb
lock
add
incl
mov
gs
movsb
push
sub
in
push
outsl
shrb
jge
adc
push
mov
xchg
rcr
lret
add
pop
vpsadbw
sbb
popa
dec
push
add
inc
push
pushf
mov
mov
imul
mov
and
leave
movsb
xor
andl
pop
and
test
fstp
pop
call
add
sarb
pop
lea
xchg
psrld
das
mov
adc
or
subb
add
cld
je
xchg
movsb
mov
int3
flds
pusha
call
adc
loope
inc
aas
loopne
mov
mov
test
adc
test
dec
fimull
mov
orl
adc
cmp
adc
pop
mov
test
test
rcrl
decl
push
stc
fsubl
xor
mov
lahf
je
ljmp
add
adc
test
push
cwtl
bound
add
sbb
sbb
or
xchg
and
pop
or
mov
in
insl
fadds
push
shrb
add
clc
sti
mov
ret
sahf
dec
call
les
and
dec
xchg
mov
in
fdivl
pop
movsl
mov
lcall
push
jae
pop
test
jo
or
pop
dec
mov
push
das
push
pop
mov
int3
mov
shlb
cs
xor
cmp
inc
ja
jmp
mov
push
adc
add
xchg
insl
lock
sub
sub
and
je
daa
mov
jle
pushl
sub
pop
ret
sub
cmpsl
imul
stos
cmp
subb
aam
fsubrs
push
sar
fists
push
pop
outsb
call
inc
add
pop
jne
aam
mov
add
rcrl
mov
sub
dec
sbb
xchg
pop
push
lds
jmp
or
in
xor
push
or
pop
mov
insb
shlb
cli
fcmovb
in
fsubrp
test
lock
ret
in
adc
jnp
or
mov
adc
xor
push
push
lahf
xchg
les
adc
push
push
js
mov
xlat
dec
inc
lock
mov
loope
push
and
mov
pop
sbb
sbb
ds
loopne
sbb
aas
push
loope
rol
pop
push
dec
mov
sbb
add
cld
push
data16
adc
xchg
mov
in
fadds
adc
adc
fs
lods
add
fwait
and
adc
shlb
push
in
clc
pop
loop
fsubs
data16
pslld
push
dec
lods
ret
out
orb
push
js
lock
call
pushf
inc
rorb
inc
sub
mov
dec
push
out
pop
push
and
and
adcl
mov
pop
sub
pop
push
sub
and
jg
push
and
mov
push
decl
inc
sahf
lock
add
mov
je
mov
pusha
adc
lock
push
rorl
xor
out
xor
shlb
inc
aas
ret
outsb
mov
gs
push
adc
add
add
sub
incl
add
push
sub
push
or
ljmp
data16
jmp
fdivr
pop
add
adc
mov
cmpsb
sub
fbstp
das
or
lea
push
mov
inc
lea
add
ficoml
or
in
xchg
test
xlat
xor
sbb
pop
fdivl
je
push
nop
out
xchg
rclb
sub
mov
das
mov
test
adc
orl
and
xor
mov
dec
out
fs
mov
mov
mov
jle
call
mov
clc
pop
lea
fwait
rolb
in
outsb
iret
aam
rorl
fdivrs
add
hlt
inc
mov
stos
or
push
pop
jae
and
jg
dec
or
scas
pop
cmp
mov
mov
xchg
mov
dec
rorb
pushf
shr
call
loopne
loop
jg
jmp
std
push
jo
and
insb
add
and
push
adc
mov
adc
fstpt
iret
fs
dec
push
jge
test
imul
add
sub
add
shlb
jp
push
add
or
push
adc
push
cs
les
dec
sub
xlat
test
pop
pop
icebp
add
loope
push
add
aam
xor
popa
cld
fwait
cmp
jge
sarb
add
or
pop
ss
pop
or
call
sbb
stos
in
pusha
mov
add
gs
mov
xorl
fiadds
and
jmp
xchg
mov
xchg
sbb
sbb
push
jle
add
lahf
mov
fcomps
loop
adc
fistl
lds
lcall
je
add
push
adc
and
call
jae
lock
inc
rorb
jo
add
inc
pusha
push
inc
les
xchg
add
ljmp
mov
xor
jp
pop
jp
pop
cmpsl
jl
cwtl
add
call
or
xlat
lcall
adc
cmc
aas
mov
dec
clc
mov
adc
add
add
add
mov
add
push
adc
sbb
lock
mov
sar
jmp
jnp
cmp
mov
fadds
push
pushf
mov
jno
clc
mov
outsb
loop
movsl
add
idiv
sub
mov
cli
sbb
out
mov
pop
shlb
outsb
cli
les
out
mov
or
jmp
sti
mov
sti
add
mov
mov
aam
sahf
out
pop
mov
mov
dec
incl
jne
stos
decb
mov
inc
sahf
in
shll
sub
cmpsb
pop
cld
adc
clc
mov
mulb
data16
push
pop
jmp
jne
cmpsb
insb
ficompl
aaa
or
mov
inc
jb
sarb
je
loop
xchg
bound
push
pop
adc
pop
int
ljmp
mov
adcl
pop
mov
fs
inc
mov
jo
subb
adc
es
mov
outsb
add
pop
mov
jl
fsubl
inc
mov
ljmp
in
cmp
adc
aaa
inc
add
movsb
cmp
mov
mov
sbb
out
ret
js
mov
and
aas
adc
xlat
add
push
mov
or
test
pop
mov
loopne
cld
daa
in
inc
outsl
mov
divl
lcall
mov
adc
xchg
jo
fildl
jl
ret
adc
test
orl
shlb
push
xor
push
inc
xchg
sbb
xchg
push
mov
cmp
cmp
jnp
insb
cld
push
jbe
mov
mov
dec
test
inc
rorb
shlb
data16
inc
imul
xor
das
jb
cmp
xor
out
sarb
mov
ljmp
inc
nop
icebp
add
lock
or
or
lret
test
popa
fcmovnu
jb
gs
cmc
test
jae
call
jecxz
imul
mov
rolb
call
inc
addl
daa
add
dec
in
cmp
rcrb
or
sbb
ret
decb
jbe
push
sbb
mov
add
sbb
fcom
sbb
movsb
mov
das
mov
and
mov
cmp
aaa
loopne
cwtl
jne
push
adc
mov
mov
add
movsb
jg
clc
add
std
mov
jo
jne
les
pop
jmp
jnp
sub
adc
and
mov
dec
and
divb
incl
out
mov
rcrl
push
push
add
and
sarb
cld
push
leave
dec
je
inc
jne
loop
add
or
movsb
mov
mov
jo
rorb
jo
cmp
cltd
aam
or
and
lahf
add
dec
lods
scas
or
inc
sti
fcmovnb
and
jmp
into
lret
orb
inc
mov
je
test
loop
add
popa
fs
xor
imul
pop
cmp
test
cvtps2pd
add
sbbl
or
mov
incb
insb
mov
xchg
pushl
lea
shlb
dec
push
in
les
dec
subb
arpl
pop
add
out
push
loope
fcmovbe
sub
sbb
or
scas
cmpsb
negl
pop
test
jb
dec
fildll
jne
mov
mov
je
or
fisubl
xchg
fadd
aam
loope
mov
xchg
dec
or
or
outsl
enter
cmp
js
jne
push
out
imul
push
or
mov
shrb
pop
insl
cmp
xchg
in
repnz
shrb
pop
icebp
dec
insb
rcl
inc
sarl
pop
or
ljmp
xchg
lea
call
pop
push
jge
mov
in
sbb
inc
cmp
out
inc
les
or
test
into
iret
cmc
incl
fdivrp
divb
inc
push
dec
daa
clc
xchg
lcall
lcall
cmp
mov
xor
add
decb
bsf
adc
inc
and
push
push
shrb
pop
arpl
adc
lcall
sahf
push
sbb
inc
pop
shlb
movsb
mov
fmull
pop
clc
popa
pop
cmp
in
gs
lcall
sarl
dec
add
push
imul
pusha
mov
aas
fidivs
in
add
and
xchg
outsl
test
sub
or
dec
movsb
pop
test
fmull
ss
xchg
or
mov
insb
mov
adc
mov
xor
outsb
or
test
or
fcoms
cli
and
ret
hlt
lret
cs
sub
pop
mov
push
fcoms
adc
out
xlat
popf
mov
imul
mov
mov
mov
leave
inc
out
jo
bound
ljmp
std
push
ja
repnz
xchg
jl
push
pop
xor
inc
push
mov
jmp
mov
add
or
ljmp
add
lahf
scas
nop
inc
imul
jne
cmp
stos
rorb
xor
and
push
inc
or
bound
push
clc
idiv
dec
sbb
hlt
testb
add
ret
add
rcrb
mov
adcl
std
cld
add
movsl
xor
nop
loope
sarb
aam
sbb
push
pop
push
cmc
in
js
aaa
push
fcmovnb
mov
inc
in
adc
mov
xor
pushf
imul
mov
divb
shll
push
mov
cmp
push
mov
push
dec
xor
cmp
push
shlb
cmpxchg
cld
add
push
mov
inc
pop
dec
sub
jb
sub
sub
jbe
inc
cmpsb
stos
outsb
push
stos
jl
inc
push
pop
clc
in
dec
addb
add
adcl
loopne
sub
pop
mov
decb
loopne
sti
and
add
cwtl
push
jecxz
dec
push
mov
int3
mov
fsts
xchg
test
pcmpgtd
scas
pusha
mov
adc
xor
psllw
sbb
ljmp
sub
jno
push
je
icebp
jg
stos
enter
call
add
mov
mov
call
in
clc
pop
add
ficoml
add
mov
test
and
push
pop
sbb
imul
mov
js
outsb
push
mov
cltd
mov
push
icebp
cmp
aas
loopne
jb
adc
pop
adc
loopne
add
cs
xor
insb
mov
xor
mov
cli
into
dec
jbe
push
leave
inc
test
scas
push
cmpsb
add
mov
outsb
adc
cmp
xor
imul
jecxz
testb
sub
subb
pushf
stc
mov
mov
pusha
jmp
jne
je
push
cwtl
rcrb
enter
jb
std
add
or
pop
or
lea
inc
das
sub
jbe
iret
sub
mov
test
icebp
insb
test
mov
inc
testb
loopne
fwait
call
jbe
jbe
mov
ljmp
and
sub
xchg
push
sub
pop
pop
and
mov
mov
push
jb
in
test
je
fdivr
pop
pop
cltd
sbb
jnp
adc
sub
sub
in
adc
pop
out
and
sti
mov
cmpl
push
sub
lods
andb
pop
jne
shlb
pop
aas
mov
mov
ljmp
xor
or
push
sub
daa
sub
sub
in
mov
or
jge
out
nop
test
cmp
mov
push
mov
loop
jae
mov
lret
stos
aam
dec
inc
fwait
dec
inc
call
ljmp
rcrb
or
clc
or
push
cmp
jo,pt
sbb
pop
in
in
call
xor
adc
fcmovnu
test
push
pusha
test
mov
mov
adc
pop
sbb
test
dec
ret
add
xchg
test
add
pop
lea
outsl
sbb
mov
or
xor
inc
int3
loop
ret
ljmp
test
push
cmpxchg8b
push
jmp
js
rcll
movsb
mov
push
jne
add
test
mov
data16
mov
adc
mov
fcomps
mov
popa
je
push
rclb
dec
inc
out
je
sub
jl
outsb
enter
push
xorl
jge
lret
out
push
mov
xchg
push
sub
xchg
adc
pop
or
adc
ficomps
adc
jp
lock
insl
jnp
adc
adc
loop
int3
ljmp
test
minps
enter
js
movsl
xchg
push
pushf
add
stos
hlt
inc
cs
sbb
or
adc
rorb
push
aas
ficoms
in
cwtl
xor
mov
add
sbb
mov
out
mov
dec
and
icebp
inc
lea
scas
shlb
es
je
and
xchg
dec
stos
cmp
sbb
sahf
and
fadds
sbb
int3
stc
mov
cmp
test
shlb
loope
rcrb
pop
push
outsl
add
test
adc
ss
inc
cmp
or
and
xor
or
popa
std
pop
aaa
add
cs
aas
adcb
or
ljmp
jbe
jbe
jo
xor
add
dec
push
pushf
pop
xlat
cmp
mov
adc
add
lret
data16
mov
shrb
xor
jb
push
and
add
or
mov
mov
pop
inc
bound
add
testb
in
sbb
in
out
inc
fnstenv
jp
jge
inc
sub
test
ljmp
xor
and
mov
jmp
sbb
repnz
add
icebp
jne
fs
cmp
mov
shrd
mov
add
into
loopne
jle
or
lods
mov
and
jne
mov
addsd
jl
jmp
sub
movsl
jl
and
push
cmp
xchg
pop
jg
mov
jb
jp
gs
sbb
mov
sbb
add
addl
adc
int3
push
jle
and
mov
fsubs
or
shlb
fstl
fwait
pop
in
mov
lea
gs
data16
mov
xor
cli
mov
mov
and
pusha
test
xchg
divl
sub
add
decl
add
push
out
jle
jg
rcrb
push
sbb
jl
test
idivl
mov
outsb
cmp
sbb
push
clc
xchg
mov
adc
jl
mov
std
mov
mov
dec
xor
clc
add
mov
cmp
and
pop
cmp
cmp
dec
bound
xor
fnsave
scas
ss
sub
fs
out
lds
stos
mov
mov
stos
push
sbb
xchg
cmc
jmp
inc
movsb
inc
jecxz
mov
cs
shll
loope
cmpsl
ja
fcmovb
push
movsl
mov
pop
push
jbe
call
subl
insl
mov
insb
or
dec
add
daa
loopne
scas
mov
rclb
data16
mov
xchg
add
xchg
inc
faddl
mov
push
pop
or
cmp
or
dec
pop
lods
inc
push
fmuls
xor
outsl
pop
icebp
adc
cs
inc
insl
les
adc
dec
scas
imul
pop
rol
adc
jp
inc
push
sahf
insl
jnp
mov
inc
or
mov
pop
cmp
js
push
pop
les
notl
jae
aad
aad
jne
mov
lcall
lock
test
push
popa
push
aaa
inc
out
idiv
mov
xor
rol
mov
add
pusha
xchg
dec
loopne
sbb
sar
cmp
sub
sbb
add
and
xor
rclb
add
xor
pushl
ds
ljmp
fldt
in
pop
jne
sbb
and
scas
lods
stos
push
loope
pop
fistl
pop
mov
test
jmp
and
scas
adc
mov
pop
outsb
insl
adc
test
xchg
lock
and
xor
fbstp
pop
scas
clc
adc
std
lds
mov
decl
int3
insl
loopne
test
sbb
shrb
fs
outsb
jge
pop
cwtl
cmp
mov
inc
xorl
frstor
mov
xchg
rclb
rol
incl
std
and
call
fadds
cmp
dec
fmuls
xchg
out
testb
xor
cli
daa
loop
pop
les
jb
cwtl
test
mov
jo
adc
cmp
lret
enter
push
pop
aam
adcl
lock
cmp
xchg
cli
stos
jo
jg
push
cmpsl
push
xor
xor
push
pop
adc
mov
dec
mov
adc
shlb
outsl
jb
outsl
add
cld
add
fs
dec
popa
lock
xlat
fnstcw
gs
jae
push
scas
sbb
pop
pop
pop
orl
cmp
loope
ret
pop
and
mov
jmp
aaa
mov
ss
nop
cmp
and
fnstcw
mov
test
mov
mov
xor
push
and
cld
mov
or
fs
into
push
std
ja
xchg
add
pop
and
adc
inc
fs
in
cli
mov
jne
or
popf
int3
shrb
add
in
rcl
jmp
in
pop
out
out
pop
je
jno
xor
jo
inc
add
add
loopne
hlt
jl
add
adc
pop
push
push
shrb
test
in
sbb
sahf
dec
leave
loopne
adc
mov
sub
push
dec
push
xchg
in
dec
js
icebp
fs
sub
sbb
add
std
sub
cmc
sub
sub
dec
fmuls
dec
cmp
aam
push
cmc
and
or
mov
jp
or
incl
cmp
jne
leave
sub
mov
adc
add
std
inc
scas
mov
and
or
scas
jg
mov
mov
xor
jge
imul
pop
mov
add
insb
add
xor
movsb
push
gs
adc
adc
dec
adc
fs
test
push
shll
movb
les
adc
out
mov
andb
pop
inc
or
xchg
adc
int3
or
lcall
mov
fisttpl
rolb
or
loopne
mov
lods
testl
inc
pop
sbb
jb
add
call
sbb
andl
sub
addr16
popl
mov
aam
pop
add
add
push
cmp
jnp
and
mov
cmp
test
ret
pop
hlt
jo
adc
cli
pusha
push
or
stos
jo
test
add
cmpsb
cltd
xor
clc
and
popa
int3
cwtl
stos
push
push
pop
das
or
inc
lock
pop
int3
pop
outsb
imul
sahf
lret
add
fadd
int3
insb
sub
orb
or
and
add
push
push
mov
adc
aas
incl
inc
fcmovnu
or
sar
sbb
pop
fidivs
mov
ret
or
insb
ljmp
loop
and
cmp
das
push
dec
sarb
call
or
cld
or
sub
stos
xor
push
jns
das
dec
or
aam
xor
inc
xor
test
stos
lock
testb
add
mov
aam
imul
push
lea
femms
xor
sbb
jg
cmpsb
and
and
xor
lret
inc
sbb
or
mov
pop
mov
sbb
and
in
pshufw
fiadds
imul
lods
test
decb
adc
loopne
ret
pop
jae
rclb
je
add
popf
out
pusha
repnz
mov
movsb
cmp
in
mov
xchg
add
pop
push
fidivrl
inc
mov
shlb
push
lock
ret
int3
inc
clc
pop
out
inc
ficomps
adc
test
clc
add
das
ljmp
sbb
push
daa
mov
loope
ret
adc
mov
push
insb
mov
wbinvd
add
add
loopne
clc
test
inc
or
mov
pop
cmp
add
pop
lahf
and
ret
mov
jle
xchg
xchg
into
adc
inc
add
cmpsb
adc
leave
dec
push
ret
adc
dec
ss
test
pusha
or
push
and
adc
lds
int
xor
fisttpl
xchg
adc
fldenv
add
es
pushf
push
lock
insb
mov
loope
fisubrl
push
or
imul
jge
test
push
add
test
xchg
je
test
ret
cmpsb
loopne
jbe
add
aam
add
call
xchg
cli
cmc
or
aam
mov
scas
push
inc
test
fs
mov
mov
add
pop
inc
mov
adc
outsb
push
push
inc
ss
movsl
ret
push
out
mov
les
fs
cmp
or
xorb
mov
sub
out
sbb
push
fsubrl
shl
inc
mov
in
add
sahf
and
cli
jl
push
xor
decl
fstl
rclb
daa
dec
call
push
xchg
loope
push
inc
pop
cmp
ud0
jmp
dec
inc
cwtl
push
push
filds
ret
loop
adc
or
mov
sbb
decl
inc
wbinvd
in
xchg
test
rolb
dec
sti
pop
jne
cmp
mov
lret
or
jmp
ror
fistl
ret
inc
sbb
push
mov
mov
push
push
cwtl
cmc
out
xchg
xor
xor
rcr
stc
loopne
lods
xlat
sub
movsb
fdivp
pushf
test
sub
jne
adc
xchg
and
add
dec
outsb
popa
mov
dec
cmp
push
push
push
xor
ljmp
push
push
sbb
lds
push
loopne
xor
outsb
xor
and
scas
addb
insb
cmp
int3
arpl
test
fdivrp
push
mov
bnd
sbb
lods
cld
test
mov
mov
jmp
mov
loopne
adc
cmpsl
and
test
add
inc
lcall
push
shrl
inc
adc
into
inc
cmp
les
push
sub
imul
test
ret
mov
push
xlat
inc
and
push
shlb
inc
shlb
jo
mov
ss
jmp
je
and
shlb
fs
add
jmp
inc
dec
adc
sbb
mov
pop
loopne
les
shlb
mov
rorl
test
and
gs
fistps
cli
xchg
mov
inc
add
inc
cli
loopne
ds
es
add
add
mov
sub
adc
mov
cmp
nop
fildl
xchg
sahf
sbb
xor
mov
das
cli
xchg
call
imul
dec
add
xor
cld
es
mov
js
or
mov
xor
jne
loope
roll
sbb
andb
inc
or
jle
adc
lock
std
dec
in
mov
orl
in
scas
push
pop
jg
movl
mov
add
adc
mov
xor
mov
call
mov
dec
mov
adc
push
push
fsubr
mov
popa
xor
xchg
or
jl
inc
sbb
jge
je
add
pushf
xchg
push
inc
adc
jno
or
or
and
inc
push
les
jne
mov
orl
pop
inc
cld
int3
add
push
rorb
mov
test
jle
scas
test
mov
lock
loope
cmp
inc
pop
xor
setnp
xor
pop
icebp
les
add
sub
inc
mov
and
call
cmpb
add
cmc
aad
das
cmpl
and
inc
repnz
sub
mov
stos
mov
sbb
pop
and
addb
cltd
shrl
scas
add
stc
pushl
hlt
add
int3
fs
jge
lea
inc
mov
outsl
jmp
pop
sub
int3
je
xchg
push
call
and
orl
loope
push
mov
adc
xor
lock
or
test
sub
in
les
and
lcall
cmp
sarb
loopne
mov
shl
push
cmp
adc
inc
lcall
push
mov
ficoms
ljmp
sbb
sbb
outsb
js
in
jp
mov
in
test
and
mov
cmc
pop
in
test
icebp
mov
or
pop
shl
mov
or
add
push
out
xchg
std
pop
sti
cli
jmp
lea
jns
mov
xor
inc
pop
sbb
jbe
add
mov
xor
jo
push
sbb
out
ficoms
pop
or
mov
nop
movsb
mov
call
or
inc
rcr
add
pop
cmpsb
sbb
aaa
icebp
jle
cmp
pop
push
test
and
rol
testb
adc
push
cmp
cltd
sub
loope
lock
movsl
or
icebp
out
cmp
push
add
pusha
movsb
call
fcompl
test
rsqrtps
orb
stos
sbb
mov
fcompl
mov
movsb
call
ret
mov
push
pushf
or
into
xor
jne
testl
cmpsb
and
imul
shl
inc
dec
inc
mov
outsl
pcmpgtb
jl
cmp
inc
pop
aam
jb
shll
fdivs
loopne
mov
mov
cmpsb
sbb
orb
nop
fisubrl
ss
les
ret
push
in
add
subl
inc
jb
rol
push
inc
lea
fmuls
push
ret
jp
lcall
mov
sub
loop
es
out
aam
gs
lock
or
enter
mov
mov
clc
push
repnz
xor
lret
pop
les
sub
xor
jo
subl
push
mov
xor
mov
jo
cmc
push
sbb
inc
push
mov
pusha
mov
mov
or
inc
xor
imul
mov
lock
mov
mov
sahf
mov
jl
cli
mov
xor
fnsave
js
rclb
push
clc
fwait
push
xor
adc
xor
mov
pop
jne
or
cmp
xor
in
stos
in
push
fsubrp
cld
push
add
fiadds
repnz
push
mov
or
xlat
sbb
cs
mov
cli
sub
sbb
push
divl
aaa
dec
cwtl
or
ja
std
mov
nop
test
sub
shrl
incl
xchg
inc
pop
adc
mov
mov
frstor
add
add
movb
cmp
fiadds
mov
test
ret
fs
mov
adc
ret
out
andb
mov
cmp
xchg
imul
fcompl
das
jp
inc
data16
jmp
lret
push
cld
pop
ja
push
nop
outsl
push
add
idivl
loopne
icebp
jne
add
fs
ljmp
cli
pushl
xor
mov
and
cli
push
sar
ljmp
lock
call
jmp
call
aam
push
and
push
or
add
addb
or
xorb
mov
pop
test
mov
cs
cmovb
mov
outsb
adc
mov
test
dec
outsl
or
lea
enter
outsl
add
int3
xor
callw
mov
or
mov
jo
inc
mov
popf
inc
rcrb
or
add
iret
mov
add
jl
fmul
jle
dec
pop
and
push
cmp
enter
in
lea
adc
mov
pop
out
mov
ret
or
ret
mov
pop
pushl
insb
jmp
or
in
dec
dec
add
dec
sbb
roll
ds
pop
call
push
mov
inc
ds
cmp
jge
cld
pop
bound
mov
mov
fidivrl
cmpsl
push
addl
sarl
test
stos
sahf
mov
or
rorl
cld
add
adc
clc
popf
ficompl
int
lock
add
add
stos
jo
add
xchg
mov
jp
mov
adc
dec
insb
xor
jp
adc
mov
or
mov
test
pop
stos
mov
push
mov
push
loope
insb
jmp
inc
sbbb
push
pop
movsl
mov
fidivrl
call
ret
movsb
adc
test
mov
jnp
out
iret
jbe
inc
sub
insb
pop
sbbb
push
adc
mov
stos
mov
sbb
mov
mov
lock
inc
dec
or
iret
mov
rclb
repnz
push
clc
mov
call
shll
adc
loope
push
andb
or
push
clc
js
xor
push
jecxz
push
inc
ret
xor
pop
mov
testl
test
cmp
in
loop
mov
push
in
inc
fmull
lods
pop
mov
incl
cwtl
mov
push
imul
dec
cmpsb
push
add
adc
outsl
add
imul
inc
jae
rcrb
lock
or
cli
jmp
pop
scas
pusha
sub
fisttpl
les
pusha
or
lea
les
clc
pop
push
rorb
js
out
out
mov
jo
lea
mov
xchg
add
sbbb
cmp
and
adc
adc
inc
jno
sar
or
adc
lea
inc
sub
mov
xchg
in
push
xor
loop
push
or
inc
sub
and
movsb
in
lret
push
cli
xchg
fsubrp
jmp
sub
popa
push
push
push
lock
ret
es
shll
call
arpl
push
cmp
lods
incl
pop
into
jge
cmp
je
popa
int3
mov
aam
mov
inc
in
sbb
push
sbb
add
jbe
mov
test
jge
pushl
mov
test
inc
loopne
jmp
movsb
aad
rorb
or
sarb
jo
push
sub
rclb
ds
xchg
icebp
jo
xorb
lock
imul
mov
xchg
push
push
into
pusha
mov
adc
and
inc
add
mov
in
inc
xor
push
add
inc
leave
inc
mov
mov
popf
test
or
mov
outsb
dec
cmpsb
xor
dec
jne
inc
jo
subb
inc
xchg
xchg
xor
fs
cmpsl
xor
jo
mov
or
add
mov
pop
add
and
js
je
mov
rclb
inc
loopne
sbb
sbb
aaa
call
ljmp
js
mov
push
add
ret
loop
jl
xor
imulb
call
adc
mov
add
std
mov
gs
sub
or
ret
jge
add
pop
icebp
mov
add
subl
adc
call
popf
xor
pop
stos
mov
adc
mov
push
sbb
add
sbb
and
loop
push
decl
insl
adc
pop
mov
dec
pop
and
pop
push
cmp
cmp
fstl
nop
inc
xor
std
loopne
lock
loope
ret
mov
pusha
inc
in
stc
cmp
lret
jmp
rorb
xor
cmp
imulb
inc
gs
lods
jmp
mov
mov
das
mov
call
lea
jns
clc
and
stc
mov
adc
adc
lcall
jp
les
movb
clc
insl
sbb
loopne
jne
jo
orb
push
mov
add
lods
mov
add
jmp
mov
mov
loopne
test
testl
mov
add
lea
sbb
cld
xchg
insb
cmc
sub
leave
inc
jo
jbe
fsts
inc
hlt
das
dec
sbb
lock
adc
scas
test
xor
ret
cmp
mov
shll
sbb
std
popf
add
mov
or
push
mov
and
pop
lret
xor
cld
inc
adc
fdivl
clc
cmp
push
sub
sbb
int3
fmull
leave
je
or
add
aas
inc
je
in
push
outsb
push
pop
stos
je
push
mov
fcmovnbe
push
popf
cmp
rclb
mov
hlt
lea
stos
or
mov
jl
inc
ret
sbb
mov
xor
aaa
jne
xor
mov
jnp
or
push
add
rolb
jbe
mov
les
xor
pusha
xchg
dec
loop
and
popf
mov
xchg
inc
mov
sar
push
pop
roll
pop
dec
mov
adc
inc
ret
mov
push
aam
add
lods
adc
add
add
sub
data16
add
dec
notl
call
or
add
add
push
add
mov
aas
cmpb
inc
mov
je
adcb
mov
xchg
test
add
aam
push
test
xor
adc
in
ret
in
call
sub
inc
push
ret
mov
xchg
push
sub
adc
test
push
adc
lock
mov
or
imul
lea
and
in
push
jmp
add
adc
add
test
cs
jo
dec
sub
stos
inc
sbb
pushf
mov
sbb
jl
pop
add
lcall
insb
in
cmp
jmp
stos
inc
test
adc
pop
ret
add
and
loop
cmp
inc
lar
push
or
xchg
push
mov
pop
or
aam
push
lret
inc
test
ret
std
inc
ret
jl
stos
push
jmp
aam
push
pop
loopne
inc
stos
mov
inc
inc
jb
in
aam
add
jb
mov
imul
inc
nop
das
and
adc
data16
lea
mov
je
popf
push
and
lcall
or
sbb
push
pop
repnz
and
push
pop
mov
sub
inc
and
sbb
sbb
sub
sub
pop
mov
jecxz
inc
int3
jne
jl
sbb
aas
subb
arpl
shlb
icebp
or
add
int3
test
cmp
mov
rorb
pushf
loop
push
xchg
xor
jle
decb
jg
mov
mov
sbb
lea
stc
push
inc
dec
xor
cld
iret
mov
xor
inc
icebp
fwait
insb
adc
mov
and
mov
mov
push
aaa
xchg
call
rcll
xchg
cmpsl
lock
or
pop
fs
push
add
decb
inc
add
add
mov
repnz
and
add
popf
push
cmp
or
jbe
fsubl
mov
addl
rcrl
or
fists
leave
cmp
out
add
push
sar
cmp
adc
mov
int3
imul
fisubrl
adc
stos
adc
push
mov
dec
dec
inc
jecxz
sub
and
and
lods
cs
mov
push
push
push
pop
push
add
xchg
and
and
cmpb
push
sub
mov
in
and
adc
es
cmp
aam
hlt
or
pop
push
call
popf
adc
mov
adc
stos
inc
push
shlb
dec
pop
cld
xchg
testb
jmp
push
outsl
xor
fidivrs
iret
add
push
faddl
sbb
std
stos
ljmp
xor
mov
adc
clc
ret
mulb
xor
test
lea
xchg
lods
xlat
push
and
stos
dec
sbb
adc
sub
iret
add
push
or
pop
xorb
imul
pop
mov
bound
cwtl
add
cmc
adc
pop
fwait
adc
pop
cld
aas
cmpsl
inc
out
push
or
pop
adc
pop
and
push
dec
cld
aaa
shrb
int3
or
and
adc
int3
fisubrs
mov
adc
in
add
or
add
cmpsb
mov
xchg
xor
sbb
aam
orl
add
sbb
xchg
push
mov
push
addb
clc
dec
xchg
lcall
or
adc
bndldx
test
add
jle
outsb
stos
xor
adc
repnz
mov
imul
and
add
inc
stc
push
adc
das
fiaddl
cmp
je
int3
push
testl
cmp
jmp
jp
aas
mov
or
xor
cmp
add
adc
sub
pop
and
ja
outsl
pushf
mov
loopne
inc
mov
ret
add
mov
test
nop
sarb
pop
or
pop
les
add
cltd
lock
xor
add
push
lods
xor
fld1
scas
sub
dec
jne
ret
cld
inc
mov
mov
adc
call
rclb
shr
mov
and
adc
inc
ret
insl
pop
insb
mov
cmc
cmp
jbe
mov
add
lret
xchg
mov
dec
int3
and
pop
cli
mov
and
sarb
adc
jae
cwtl
mov
mov
jle
js
leave
int3
cs
xor
rorl
sub
cmovo
mov
lock
push
pop
push
out
inc
cwtl
insl
or
jl
aam
sbb
adc
inc
push
push
imul
and
push
je
and
add
inc
add
shlb
movsb
icebp
jl
xchg
or
mov
jmp
aad
xchg
mov
mov
fisttpll
test
adc
pop
jns
xor
shlb
xchg
or
mov
repnz
jb
jle
int
inc
or
xor
mov
and
cli
fs
cs
aam
dec
or
std
xchg
bnd
add
and
rolb
enter
mov
movb
sar
data16
fcomip
loop
xor
test
clc
jnp
add
lea
fdivr
movsl
xor
je
pop
adc
sbb
fsubl
je
or
hlt
or
test
orb
cs
mov
scas
push
in
push
hlt
xchg
inc
inc
pusha
pusha
xor
pop
jge
test
and
cwtl
push
ja
push
lcall
sub
inc
out
pusha
mov
pop
jp
pop
insb
push
outsl
sub
and
ljmp
adc
mov
je
repz
testb
frstor
add
sub
mov
add
pop
mov
mov
ds
jg
push
call
cmp
je
ljmp
xor
out
loopne
mov
sub
jge
pop
fstpl
mov
int3
inc
inc
add
pop
adc
push
fmuls
dec
shlb
ljmp
push
mov
or
or
add
sub
or
adc
mov
mov
mov
push
jl,pn
adcl
sub
call
inc
mov
sbb
mov
lcall
xchg
push
push
test
or
jbe
push
popa
mov
mov
jb
sahf
test
sahf
mov
es
sub
stos
test
jae
mov
stos
pop
out
xchg
pushf
rorb
movsl
sub
push
mov
add
repnz
push
mov
add
mov
push
inc
fimuls
push
scas
mov
and
xchg
jne
test
stos
loop
inc
shl
call
cld
call
or
mov
aaa
imul
sub
call
and
mov
shld
push
inc
test
fs
sub
ljmp
fimuls
nop
jne
fsts
mov
inc
mov
xchg
pop
test
cmpb
push
lds
xchg
ss
mov
mov
rclb
sub
cli
mov
imul
push
xchg
test
or
shrb
and
or
sub
pop
dec
stos
or
test
sbb
or
cld
mov
mov
pop
push
pop
dec
xor
ljmp
pop
inc
pop
pop
clc
aam
jl
rclb
inc
loopne
push
in
lock
fldt
jne
std
loopne
shlb
loopne
push
xor
stos
push
jp
enter
hlt
or
dec
sti
adc
or
int3
cld
sbb
adc
fldpi
pop
mov
add
inc
xor
push
lea
fnsave
sti
fsubrl
cmp
sar
scas
aaa
scas
rorl
lds
adc
sub
mov
adc
jne
lret
stos
and
ficoml
testb
loop
add
add
xchg
in
lock
xor
and
test
nop
jmp
jmp
loopne
adc
add
lock
or
lods
push
gs
inc
loope
push
dec
sarb
mov
jmp
sarb
or
pop
into
push
repz
pop
fs
lock
loop
and
pop
inc
les
add
add
inc
dec
cld
mov
test
int3
mov
add
shlb
sahf
out
addl
nop
xchg
push
fst
mov
pop
jge
faddl
inc
sahf
add
mov
ret
xchg
ret
inc
cmp
xlat
mov
push
xchg
fcom
inc
clc
nop
or
subl
testb
inc
sub
xor
mov
xor
inc
add
sbb
shrl
loopne
inc
gs
adc
xor
arpl
or
inc
add
or
add
call
inc
xchg
shlb
cwtl
cwtl
add
adc
sbb
sahf
push
mov
xor
mov
int3
cmc
mov
dec
mov
push
pop
push
loopne
test
jnp
std
je
fstpt
cmp
jg
pop
incl
xor
aam
decl
mov
std
or
add
hlt
pop
std
xor
cmp
movb
jne
movb
add
sarb
imul
mov
mov
mov
mov
inc
or
lds
js
lret
pop
ret
pop
mov
dec
mov
jne
xor
xchg
mov
dec
inc
negl
in
or
dec
rcrb
ret
push
sbb
into
push
hlt
adc
jle
pminsw
in
mov
xor
add
xchg
jmp
sti
mov
je
sub
jmp
rolb
adc
jge
loope
xorb
mov
aam
jbe
push
fmul
sub
enter
mov
or
lret
and
dec
lea
test
add
pop
cs
sbb
out
pop
leave
push
enter
les
shl
add
mov
sbb
inc
cmp
mov
js
cld
inc
lock
outsb
adc
incl
and
xor
clc
call
cmp
add
inc
mov
fucomip
cmp
or
cmp
mov
loop
mov
sbb
xor
out
sub
lds
fstp
and
lock
mov
mov
dec
cmp
and
and
sub
dec
shl
or
push
mov
add
mov
cmp
clc
movsb
push
gs
sub
dec
cmp
notb
cmp
cld
jg
mov
pop
mov
mov
pop
fsubrs
in
pop
dec
mov
std
ljmp
inc
or
push
lcall
sbb
xor
aaa
ja
push
bound
aam
je
cli
xor
cld
add
jmp
and
push
push
mov
adc
push
rorb
xchg
sub
outsb
mov
rcrb
push
push
bound
xchg
inc
lods
push
xchg
adc
jb
movsl
test
jmp
cli
mov
mov
nop
outsb
je
mov
mov
mov
ret
div
psllw
add
sub
push
mov
data16
test
xor
jp
fidivrl
jg
cmp
int3
test
fldt
inc
lea
cs
loopne
das
xorb
into
push
mov
xchg
mov
mov
scas
sbb
add
xor
adc
pop
xor
mov
loopne
jne
mov
out
gs
shrb
sub
mov
add
mov
fsubrs
adc
ret
sbb
ss
inc
shrb
mov
fisubl
mov
cmp
add
lea
push
aaa
inc
pop
inc
push
andb
cld
sbb
fidivs
jb
test
mov
jne
out
pop
aas
stos
test
xchg
or
test
or
fistpl
mov
and
outsl
or
sbb
jp
popa
out
xchg
adcb
mov
adc
xor
pushl
xor
adc
adc
or
lds
jl
pushf
inc
push
cmp
aam
push
into
lock
fcoml
shll
jge
add
xchg
lds
add
lea
mov
push
js
clc
je
pop
jle
orl
out
mov
loope
aam
or
push
push
push
sar
jbe
push
push
pop
rolb
sub
dec
ret
or
cmp
add
sbb
and
shlb
adc
js
nop
add
adc
sarl
cmp
pusha
loope
pop
xor
scas
add
movsb
xchg
mov
push
mov
inc
sub
icebp
inc
or
inc
aam
popf
inc
jl
xor
pop
inc
or
pop
lds
call
and
in
pop
jne
sbb
push
imul
enter
push
or
mov
sbb
rol
stos
jle
repnz
inc
cmp
lret
cmpsl
pop
adc
test
repnz
fwait
mov
test
lds
repz
hlt
pop
or
xor
dec
decl
mov
decl
adc
call
fidivl
nop
jmp
inc
cmp
xor
jg
xor
adc
cmp
fcompl
add
xor
out
aas
or
inc
inc
cmp
mov
add
pop
mov
pop
jo
pop
dec
jge
cld
mov
add
loopne
dec
mov
mov
and
adc
adc
cmpl
pop
mov
xchg
mov
xchg
test
jmp
ret
sbb
out
rcll
add
or
cmp
clc
fwait
xchg
pop
mov
add
add
out
dec
push
mov
xor
push
dec
push
sub
or
popa
add
fcoms
sbb
loopne
test
push
lea
lea
xor
jge
sbb
imul
push
dec
xchg
push
jge
xchg
adc
imull
cmp
dec
pop
push
sahf
push
mov
pusha
xchg
jecxz
out
sbb
xchg
and
subb
inc
gs
push
addr16
push
cld
pop
sub
dec
lods
fs
mov
test
cli
out
clc
lea
push
and
cmp
mov
outsb
push
sub
arpl
je
xchg
jp
push
inc
fcoms
pop
inc
mov
lock
xor
idivb
les
push
rcll
pop
nop
mov
push
clc
fcoms
fs
dec
test
out
mov
aaa
test
loopne
push
push
scas
in
enter
arpl
gs
fnsave
pop
adc
xor
jge
es
push
popf
or
mov
js
inc
push
mov
mov
rcrl
ret
xchg
pushw
test
ss
mov
ret
mov
add
stos
cmp
fwait
mov
cmp
sbb
cmp
aam
jl
xor
jb
lret
jne
test
xchg
in
icebp
stos
dec
push
jb
int3
add
pop
jge
add
fidivl
inc
lret
or
sub
mov
dec
xor
js
ret
test
shrb
lret
jge
pop
rolb
mov
or
mov
imul
ljmp
cld
xchg
int3
sbb
ret
cld
orl
shlb
cmp
inc
cli
sbb
je
add
decl
sahf
xor
pop
pusha
scas
test
pop
sub
push
and
addr16
es
xor
or
inc
mov
and
add
push
cld
mov
and
std
clc
sbb
mov
enter
loope
adc
add
mov
push
insb
das
loopne
ret
add
jbe
inc
jbe
inc
add
sub
xchg
shlb
dec
loopne
mov
cmp
stos
mov
divl
xchg
loopne
scas
and
add
jecxz
pop
sub
ret
xor
xchg
or
xchg
adcl
xlat
sub
jmp
test
outsb
xchg
cmp
nop
or
sti
cmpsb
mov
adc
mov
popa
xchg
jge
dec
sbb
leave
xchg
xchg
jp
int3
inc
pop
icebp
and
test
fistpll
lock
add
fimuls
jl
sub
andb
icebp
in
ss
lea
dec
sbb
cmp
inc
xorb
or
movsb
inc
mov
and
xor
test
in
cld
loop
push
sbb
subl
mov
int3
test
adc
sarb
adc
mov
enter
and
cli
aad
xor
fwait
sub
and
insl
mov
loop
loop
inc
inc
jb
js
push
push
insb
push
pop
cld
pop
lock
dec
out
or
cmc
add
adc
sub
mov
cli
fsts
push
jo
and
iret
mov
jl
pop
pop
stos
inc
mov
into
push
cmp
shrb
icebp
or
push
mov
rolb
xchg
jge
push
cs
and
and
jb
cmc
dec
dec
rorb
push
mov
add
add
adcl
pop
push
ret
jp
mov
hlt
fists
rclb
loop
mov
pop
shrb
dec
call
adc
cmp
and
and
scas
nop
add
aam
inc
push
push
xchg
pop
or
dec
and
push
or
mov
sbb
inc
add
or
mov
sbb
pop
gs
push
call
pop
adc
orb
call
fs
rorb
jp
jbe
ljmp
jle
xlat
sahf
add
bswap
mov
add
inc
mov
inc
sbb
push
jne
and
cs
push
shl
add
test
gs
ss
mov
loopne
call
sub
cli
push
fs
adc
xor
add
mov
dec
addb
mov
mov
pop
jb
inc
int
stos
into
je
adc
std
test
loop
dec
mov
pop
mov
sub
jmp
sbb
or
outsb
lock
mov
sbb
sub
xor
rclb
ja
pushl
add
and
loop,pt
mov
daa
sub
rorl
cmp
je
xchg
mov
aaa
push
add
adc
rorb
in
test
loopne
hlt
nop
fcomp
nop
jle
push
xor
mov
mov
add
xchg
and
sub
ret
test
fstps
add
sbb
sbb
out
sbb
out
mov
jle
jb
push
les
mov
rolb
cmpl
es
das
fdivr
mov
cmpsb
je
test
xchg
ficomps
cmp
addl
je
xchg
add
lea
je
xor
fcmovb
inc
pop
xor
cld
push
inc
jne
cltd
adc
ljmp
or
push
ror
jl
push
sbb
rorb
fwait
add
inc
jb
xor
or
sbb
subb
pushf
pop
jnp
push
nop
pop
cmp
push
mov
call
cmp
adc
movsl
aas
in
push
test
jbe
xor
call
jne
lea
clc
push
xor
inc
repnz
mov
sbb
aas
xor
leave
xchg
mov
jp
dec
test
cmp
or
lcall
rol
insl
inc
push
add
push
stos
test
sbb
dec
or
mov
sbb
inc
mov
dec
inc
xchg
ss
xchg
inc
jns
xchg
mov
push
sbb
dec
subl
sarl
lea
lcall
jno
inc
lret
repnz
aas
adc
test
jecxz
test
scas
xor
inc
pop
xchg
pusha
jo
xchg
js
imul
je
fstps
or
pop
jp
sbb
sub
inc
fcoms
push
bound
ret
pop
jecxz
dec
test
xchg
and
rolb
mov
or
add
lea
add
lock
pop
dec
test
sub
or
add
pop
push
shl
push
cmp
rclb
and
jno
push
lea
or
js
jb
lret
inc
pusha
icebp
add
and
adc
xor
gs
test
aas
call
fs
insl
xor
fs
or
and
cld
stos
ret
inc
lea
push
mov
inc
push
loop
xor
rcll
add
test
cs
and
mov
inc
push
pop
mov
or
push
pop
scas
aas
gs
fdivs
lods
movb
loopne
mov
push
inc
cmp
leave
push
mov
mov
aam
dec
std
addl
dec
fsubrs
mov
pop
test
push
push
les
ljmp
enter
or
adc
push
lret
scas
dec
adc
xchg
cmp
sbb
rol
in
shr
mov
mov
xchg
pop
pop
dec
mov
dec
mov
mov
dec
dec
xchg
inc
fs
pop
jo
dec
xchg
pop
sbb
outsb
es
ret
aam
mov
add
pop
decl
xchg
or
jb
fimull
or
push
es
std
hlt
xor
bound
or
rorb
cli
push
or
xor
addr16
jmp
in
add
call
xchg
leave
incl
insb
jl
cli
daa
add
pcmpgtw
xor
ret
ret
popf
adc
cmp
lcall
mov
inc
push
jge
enter
jne
and
mov
cli
pop
mov
add
call
pop
bound
test
movnti
mov
mov
push
sbb
and
pop
mov
or
lcall
ficomps
aam
adc
sahf
shr
rclb
enter
push
es
adc
lcall
dec
gs
sarb
clc
shlb
loop
add
mov
or
adc
aad
cmp
insb
loopne
call
cmp
sahf
clc
add
mov
inc
pop
clc
mov
sbb
aas
decl
fwait
push
dec
adc
or
add
jo
push
xorb
or
ret
gs
sub
inc
movl
insb
mov
cmp
pop
fmuls
or
xor
push
and
std
decl
xchg
pop
push
sbb
cmp
push
sub
inc
test
push
into
movl
dec
cld
cmp
push
test
jne
lods
adc
lods
testb
push
call
inc
cmp
lock
add
pop
and
std
adc
andb
or
or
lock
mov
mov
lock
inc
or
scas
push
adc
push
mov
neg
cli
out
mov
rolb
mov
mov
jo
loope
mov
push
sgdtl
sbb
jmp
cmp
fsubs
mov
push
dec
les
adc
test
mov
test
lcall
in
dec
mov
pusha
sbb
lock
cmp
lea
sub
xor
xor
mov
sub
ss
sub
inc
mov
jbe
and
js
mov
aas
test
mov
test
push
jmp
add
lahf
fdivr
xor
push
xchg
decl
mov
mov
ljmp
mov
inc
gs
aad
sub
push
addl
icebp
inc
sub
test
and
shl
or
cmp
fs
les
xorb
mov
loopne
mov
jns
mov
inc
jns
adc
or
xor
inc
cmp
lock
cmp
mov
or
int3
stos
push
adc
scas
bound
cmpl
add
lahf
orl
xor
or
push
lock
push
add
cwtl
push
adc
mov
fcoms
push
cs
gs
or
scas
push
pop
loop
pop
clc
cwtl
or
aad
call
fwait
push
fs
mov
xor
mov
inc
pop
push
shrb
ror
jmp
mov
pop
mov
movsl
rolb
leave
inc
insb
mov
mov
xlat
test
and
push
fidivl
jle
inc
jecxz
int3
jb
dec
sub
mov
mov
or
cmc
inc
mov
xor
roll
test
ljmp
jnp
adc
add
cmp
lds
mov
enter
loope
ret
cli
dec
cmpsb
push
push
jge
add
mov
and
clc
or
pop
clc
lret
mov
xchg
mov
test
or
xchg
hlt
psubb
into
push
mov
pop
cmc
sbb
mov
sub
pop
add
and
sub
cmp
mov
and
xor
jmp
dec
push
inc
add
loop
sbb
into
dec
clc
fs
aas
pop
inc
push
jecxz
dec
jo
cmp
mov
xor
dec
push
mov
mov
inc
mov
xchg
inc
je
sti
push
inc
dec
mov
push
mov
andl
jmp
incb
les
pop
shlb
lcall
movsw
jge
xchg
out
mov
dec
test
ficomps
jl
orl
loop
dec
rclb
sub
dec
cmp
icebp
push
ja
jmp
adc
dec
sub
pushf
mov
jp
add
cmp
inc
add
push
stos
out
adc
add
mov
and
pop
mov
sub
push
add
xor
dec
cmp
mov
xor
sub
or
xchg
daa
outsl
divl
rcrb
or
orb
lret
and
add
xor
jge
xor
mov
inc
jo
cmpsl
lea
xor
sub
fidivrs
pop
rcl
adc
les
add
push
jne
test
ljmp
add
dec
xor
add
imul
sub
lret
or
mov
test
pop
roll
cld
sbb
mov
add
aas
mov
les
lock
add
rol
in
push
push
call
mov
rcrl
scas
rolb
movsl
movb
push
rolb
xor
loope
sbb
int3
sub
inc
sub
jae
adcl
test
dec
nop
cli
clc
jg
cmp
in
cmp
jae
xor
add
cmp
je
pop
loopne
mov
jne
adc
in
inc
aam
add
loope
repz
std
cmpsl
fs
push
outsb
jge
inc
add
loopne
mov
push
jle
xor
das
push
aaa
loope
pop
or
xchg
dec
cmp
or
hlt
ud2
cmc
lea
and
or
dec
test
loopne
push
cld
call
mov
adc
mov
xchg
cmp
adc
out
pop
and
into
or
xor
loop
pop
dec
adc
callw
fsubs
lcall
stos
rcl
inc
push
call
jecxz
adc
les
jg
ljmp
call
pop
shlb
adc
jmp
insb
xchg
xor
int3
inc
scas
xchg
or
add
mov
fwait
cmp
sub
sbb
inc
cld
je
movsb
fwait
pop
test
and
roll
std
push
push
mov
and
sbb
jmp
xor
inc
add
mov
dec
mov
fisttpll
call
mul
adc
jns
jecxz
jge
jmp
insl
data16
rcl
or
sbb
mov
xlat
mov
jne
test
cmp
sbb
cmpb
in
dec
or
cli
je
ret
cli
outsl
fildl
not
jge
dec
mov
xor
push
push
add
lea
sub
mov
dec
jmp
loop
and
sbb
popa
sub
aaa
ss
fs
loopne
add
inc
mov
jg
test
outsl
push
mov
xchg
push
add
push
in
jmp
stc
mov
and
inc
pusha
push
ret
rolb
jo
call
add
mov
push
mov
pop
mov
std
movsb
icebp
popa
push
fsub
jg
hlt
add
std
or
in
cmp
jle
mov
imul
jmp
test
imul
adc
pusha
mul
ds
add
xor
pop
lods
sub
adc
pop
sub
xor
dec
int
jmp
cmpb
pop
clc
cmp
add
and
push
movl
in
and
add
fsubs
call
push
imul
jo
cli
insl
mov
mov
pop
pop
clc
in
test
jne
jp
add
fs
aas
mov
insb
mov
outsb
inc
icebp
lds
add
pushf
push
sub
idiv
jns
pushf
push
mov
jecxz
subb
dec
testb
loop
sbb
inc
sub
imul
xor
sub
aas
scas
lahf
xchg
cmp
mov
outsl
inc
add
push
cmp
iret
mov
aam
je
add
dec
or
shlb
mov
je
cmpsl
lock
fcoms
inc
movsb
add
push
ss
jbe
or
icebp
push
int3
ret
clc
push
adc
popa
cmpsl
js
sbb
fldt
dec
mov
cmc
mov
jge
push
xor
cmp
inc
scas
js
aas
rorb
andb
push
mov
pop
outsl
movsb
xchg
mov
lret
cmp
add
jmp
xor
outsb
cmp
das
cli
push
mov
test
mov
aaa
inc
wrmsr
jo
rcl
pop
lret
cli
test
testb
xor
xor
cld
stc
jg
inc
in
add
arpl
mov
mov
mov
out
sub
incb
push
xchg
pop
pop
std
or
and
xor
rcr
xor
push
lea
and
dec
cltd
dec
nop
js
stc
mov
add
data16
cmp
push
loopne
mov
pop
lret
cmp
push
xor
adc
pop
add
out
lea
adc
popa
lea
mov
inc
sub
mov
dec
or
mulb
in
inc
enter
xchg
dec
add
and
push
leave
add
add
test
sbb
inc
jl
lock
hlt
push
mov
jmp
std
leave
pop
sub
push
cmpsl
adc
mov
pop
cmpsl
mov
pop
or
int3
or
and
and
push
mov
popa
loopne
rorl
push
js
sbb
or
lcall
adc
or
int3
lods
ds
lea
faddp
in
cld
or
ret
inc
fisubl
sbb
outsl
lea
out
rorl
xor
xor
loopne
enter
lods
mov
dec
and
les
das
sub
cmpsb
decl
xchg
or
inc
test
mov
mov
rcr
rclb
shr
adc
or
sbb
jbe
jg
inc
jne
cmp
and
std
or
popa
xchg
and
cmpsl
dec
repnz
je
mov
cmpsb
sbb
xchg
jb
dec
loopne
dec
insl
push
mov
fwait
push
dec
jnp
pop
jno
arpl
insl
gs
dec
pop
call
ds
jo
orb
fldt
cld
je
mov
add
std
inc
dec
mov
insb
das
inc
test
sbb
psadbw
add
or
test
mov
sub
bound
sub
xchg
push
mov
call
xchg
jne
jp
stos
mov
call
test
imul
inc
add
cmp
and
test
pop
les
outsl
test
mov
enter
out
mov
pop
sbb
cmp
lock
ret
ljmp
ret
pop
jo
sbb
sub
and
stc
lea
xor
in
stos
push
icebp
imul
sbb
subb
call
cmp
incl
or
add
or
xor
call
lock
scas
outsb
xchg
shll
dec
cld
addb
add
pop
cwtl
lret
aad
add
xor
or
andb
push
insb
add
add
shlb
add
insb
lods
push
sbb
xor
jmp
cmp
push
arpl
push
rorl
cmp
call
add
call
call
clc
adc
mov
mov
xchg
pop
push
add
jle
mov
and
test
pop
cmp
cmp
mov
mov
insl
test
inc
data16
ret
or
pop
add
pusha
xchg
test
and
jae
xchg
cmpsb
mov
push
fs
push
imul
ja
add
mov
xor
adc
push
fmuls
testl
rorb
test
jl
push
add
push
lods
pushf
mov
add
push
aam
jmp
stc
inc
cmp
pushl
outsb
sbb
sub
push
orb
xorb
cs
loope
mov
xor
orl
in
ret
cld
jo
movlps
in
loopne
sahf
xor
loopne
lcall
inc
push
xor
subl
xor
fmull
shrl
pop
pop
cmc
rcrb
scas
mov
dec
push
jle,pn
mov
orl
jb,pt
cmpxchg
add
je
pop
inc
insb
divb
push
test
or
pop
out
ss
sahf
bound
out
int
pop
nop
add
out
inc
sbb
push
xor
sbb
mov
push
mov
cmp
jge
push
jp
xchg
xor
cmpl
add
je
lods
mov
jmp
push
test
jbe
jne
cli
mov
adc
pop
mov
sbb
fmul
xlat
in
pusha
sbb
insb
dec
pop
push
iret
push
or
out
mov
es
mov
mov
add
add
adc
out
sarb
es
cld
xchg
mov
mov
cmpsb
xchg
cs
pop
adc
xchg
jns
data16
loopne
mov
inc
nop
jmp
popa
punpckhbw
adc
test
mov
mov
ja
cmp
push
ss
and
ss
or
cld
adc
add
in
je
xor
and
and
xlat
outsb
pop
js
divl
jmp
add
cltd
and
jg
cli
pop
push
aas
xor
xor
push
xor
pop
loopne
rorb
outsb
jecxz
and
xchg
ror
movsb
sar
loopne
pusha
mov
inc
lcall
lret
rcrb
pop
test
jl
ss
dec
inc
cli
mov
cmpsl
push
cli
mov
insb
sbb
sbb
mov
movsb
dec
pushf
lret
cmp
std
adc
jle
ljmp
mov
xchg
enter
add
sbbl
xor
sbb
cmc
xor
cld
sub
or
push
enter
adc
jl
into
push
stos
fcomip
insl
push
adc
jecxz
stc
sbb
cmp
sar
mov
dec
mov
adc
inc
rolb
scas
and
dec
fisttpl
mov
mov
add
cmp
pop
fdivs
fisttpl
repnz
popa
inc
call
mov
adc
fmuls
pop
call
or
idiv
mov
call
pop
xor
sbb
or
rcr
scas
xor
push
dec
into
loopne
aam
rorb
std
test
push
stos
loop
rclb
ret
add
repnz
mov
mov
orl
push
mov
sub
loopne
xchg
jp
shrl
cli
aas
mov
mov
test
int3
movb
mov
mov
inc
mov
jp
mov
test
mov
add
mov
ds
mov
fcomi
leave
and
ret
mov
loop
jge
les
inc
fists
push
sub
jp
inc
pop
pop
inc
push
xchg
add
or
fisubrl
inc
orb
call
mov
mov
mov
mov
int3
test
call
clc
or
mov
in
pop
cmp
xchg
dec
arpl
pop
mov
mov
movsb
int3
mov
push
add
int3
push
mov
test
jbe
loopne
lods
pop
loopne
mov
push
aam
orb
mov
jb
mov
fs
mov
mov
cmp
rorl
js
xor
jge
pop
inc
adc
xchg
in
fs
and
ret
inc
loopne
test
add
ja
push
inc
cmp
clc
push
dec
test
cs
imul
decl
push
notl
daa
icebp
int3
add
test
hlt
jle
add
daa
pop
ja
shr
pushl
mov
xchg
mov
ret
in
lcall
sbb
pushf
dec
pusha
popf
rolb
adc
dec
loopne
cwtl
xor
ljmp
mov
out
sbb
daa
pop
inc
adc
pop
push
bound
test
fadds
subl
mov
push
push
sbb
sbb
push
loope
add
sub
lcall
adc
addb
or
cs
ret
mov
push
inc
fisttps
mov
jne
decl
ds
cld
les
cmp
icebp
je
divb
in
or
inc
pop
add
subb
in
cli
mov
cs
fcompl
add
or
pop
pop
add
jb
sarl
or
mov
push
push
jo
push
or
xor
xor
mov
xchg
filds
lea
push
push
aaa
pushf
push
les
mov
fidivrl
call
clc
inc
mov
lret
pop
pop
std
faddl
fcompl
loope
mov
cld
stc
cld
add
adc
neg
jo
sbb
fwait
pop
insl
inc
cld
mov
fists
popf
cmp
push
push
jge
or
mov
xchg
push
inc
add
jo
mov
or
repz
orb
jge
rclb
dec
fmuls
sub
push
orb
mov
lock
flds
dec
les
das
xor
inc
xlat
call
add
outsb
mov
mov
pop
shlb
xchg
icebp
scas
jg
test
daa
add
adc
and
std
in
pop
loopne
jecxz
shr
and
int3
mov
lret
movsl
push
mov
je
js
lcall
push
and
pop
pop
add
dec
push
out
push
cmp
insb
imul
push
add
subl
cmp
pushf
pop
fs
pop
sbb
rcrb
fwait
pop
xor
movb
adc
cli
rcll
rcl
stc
mov
arpl
jle
ss
add
mov
push
cmc
push
inc
call
xchg
cmp
rolb
xor
cli
inc
std
and
test
push
pop
incl
jle
pop
cmp
lock
mov
fisubs
mov
sbb
hlt
test
mov
xor
push
mov
imul
js
dec
icebp
xchg
push
ror
adc
cmc
cs
adcb
and
imul
sub
mov
js
inc
por
sbb
es
mov
data16
les
add
mov
mov
push
push
test
ljmp
lea
sti
fs
cli
push
jns
fcompl
mov
cmp
jne
jl
andnps
mov
dec
or
jg
push
or
mov
push
std
push
add
movsb
mov
lock
lret
or
mov
add
mov
xor
pop
shr
add
insb
jp
sbb
or
xchg
pop
pop
adc
push
hlt
inc
push
les
popf
rorb
mov
inc
rcl
and
clts
cmp
aas
dec
push
mov
add
ret
add
lcall
movsb
cmpl
sbb
dec
in
xchg
mov
je
fiadds
push
rolb
das
add
dec
ret
mov
hlt
inc
int3
sub
push
adc
mov
test
cmpsb
icebp
fmuls
push
fsubs
scas
push
inc
lahf
testb
mov
rol
mov
out
shr
xor
xchg
pop
add
cld
dec
jmp
jbe
imul
leave
icebp
or
daa
sub
or
or
jp
add
cwtl
mov
mov
arpl
pop
das
fisubs
cwtl
pushf
sbb
mov
insb
call
or
rorl
push
sbb
mov
fdivrs
jne
or
test
stos
cmp
or
mov
inc
xor
clc
cmpsl
call
xor
xor
jo
and
lcall
xor
stc
in
push
sbb
jo
xchg
cwtl
or
push
js
testl
sahf
inc
sub
out
lock
jb
add
or
sbb
mov
cmp
js
movups
je
sti
fisttpll
jb
mov
sub
cmp
mov
test
cli
push
js
test
mov
js
inc
rclb
and
mov
mov
add
or
addl
loopne
scas
arpl
push
inc
cmp
icebp
mov
sti
or
sbb
daa
fimuls
and
sub
mov
pop
imul
xchg
push
push
cmp
sub
test
je
outsb
loope
add
test
rorb
mov
push
jle
clc
dec
incl
test
std
jge
cmpl
test
int3
add
push
add
xorl
popa
in
mov
xchg
xchg
push
push
sti
mov
inc
leave
rcrb
movsl
pushf
mov
hlt
pop
xchg
mulb
insb
ds
xor
cmc
push
daa
incb
xor
pop
mov
aaa
xlat
jne
pop
loop
cmp
adc
pop
ret
sbb
sar
out
jle
adcb
insb
lcall
cli
addr16
pop
push
add
pushf
gs
filds
jmp
and
fadds
cld
in
out
mov
subl
cld
cli
fdivl
call
nop
adc
lret
add
ficoms
and
pop
test
pop
xor
in
gs
testb
subl
or
push
andl
pusha
push
ss
inc
sti
mov
or
jmp
sti
fs
rorb
mov
stos
rorl
lock
mov
mov
enter
or
sahf
pop
or
incl
lahf
mov
xor
scas
mov
cwtl
pop
jmp
ljmp
shlb
jns
add
or
push
mov
cmp
inc
inc
sub
ret
and
sbb
mov
lock
xor
mov
fdivs
hlt
pop
inc
xchg
testb
repz
mov
call
adc
mov
jae
mov
ljmp
ds
outsb
lods
adc
cmp
stos
push
or
inc
add
and
inc
notb
mov
sbb
fimuls
mov
incb
cmp
dec
popa
mov
pop
dec
mov
push
xor
leave
mov
shlb
test
mov
add
push
test
loope
inc
sarb
inc
xor
cli
fmull
leave
mov
push
push
inc
adc
pop
jle
outsb
out
ljmp
pop
in
dec
push
lret
cld
or
xor
outsb
sbb
xor
fcomip
mov
adc
mov
inc
jmp
dec
and
cmc
lods
lock
jo
cs
or
cwtl
and
icebp
xor
mov
cmpsb
xor
push
push
cmc
shl
push
add
enter
mov
dec
mov
xor
mov
mov
in
sarl
es
mov
sub
and
clc
imul
cwtl
xlat
push
je
fmuls
loopne
andb
xor
pushf
call
or
dec
stos
cld
pop
dec
mov
xor
cwtl
pop
and
loop
rclb
je
outsl
cmp
adc
cmp
mov
out
or
mov
adc
js
sub
fdivl
sbb
inc
mov
jge
leave
mov
or
mov
add
add
dec
cmp
dec
jge
scas
jne
mov
mov
rclb
pusha
test
jmp
jno
sbb
inc
js
ljmp
jmp
xchg
imul
mov
push
jno
inc
and
mov
push
ljmp
hlt
andl
push
insb
cmpb
jno
sub
cmp
and
xorb
push
push
and
xchg
jmp
mov
repz
push
mov
add
push
adc
lea
mov
int3
xor
and
outsb
pop
in
push
xchg
mov
pop
push
jmp
add
push
pop
mov
inc
js
adc
hlt
aaa
adc
push
mov
sbb
sbb
out
add
add
pcmpeqd
xlat
lcall
mov
fidivrl
bound
inc
shrl
in
sbb
sub
adc
add
push
push
push
test
dec
push
js
call
mov
mov
sbbl
rclb
mov
call
inc
aad
data16
call
pop
andl
int3
cli
cltd
and
push
incb
cmp
cmp
and
jge
push
std
or
mov
sbb
adc
cmp
push
call
and
orl
leave
mov
lret
stos
ret
xor
push
push
mov
test
xor
push
je
add
pusha
lds
add
adc
icebp
cmp
sub
cmp
les
pop
pop
jb
or
je
in
loope
push
xchg
pop
mov
or
xchg
adc
sbbb
fcmovnu
ds
or
in
and
pop
cld
int3
jbe
dec
dec
inc
cmpsb
mov
rolb
sub
int3
xor
cmp
pop
orb
in
push
sbb
xchg
movsb
push
cmpl
imul
les
popa
sbbl
push
bt
dec
mov
ja
mov
jb
jl
aam
ret
stos
test
ficoml
pop
data16
mov
adcl
cmp
ss
in
mov
and
inc
shlb
scas
lods
pop
dec
cld
icebp
addr16
movsl
pusha
call
adc
insb
int3
int3
xchg
loopne
or
js
push
add
or
sti
mov
push
outsl
int3
sub
inc
or
fmull
leave
adc
inc
push
add
push
rolb
or
pop
outsb
hlt
mov
xchg
data16
pushf
add
js
sbb
js
and
push
mov
test
ss
adc
stc
call
or
or
mov
aas
or
xadd
and
pop
sbb
sub
testb
clc
daa
std
inc
xor
mov
xor
inc
sub
rclb
in
jae
add
lret
xor
fmull
popa
pop
lods
loopne
mov
cld
add
push
or
add
add
xor
sub
es
or
fs
jmp
inc
clc
fcomp
xor
lods
int3
push
push
pop
add
sti
sahf
or
push
lea
jbe
adc
sub
sub
jno
push
clc
jle
aam
dec
push
cmp
pusha
enter
mov
or
xor
push
adc
sbb
and
ja
sbb
les
mov
mov
push
xchg
dec
popa
out
incb
test
add
hlt
or
adc
pushf
rcrb
add
fsubrl
mov
rolb
cmp
outsb
sub
pop
jb
mov
mov
test
fsubs
inc
cld
push
add
inc
mov
pop
fnstenv
jo
cmp
stos
cmp
pop
dec
fdivrl
into
js
mov
js
dec
ljmp
or
std
add
mov
test
push
hlt
scas
loope
push
pop
xchg
insb
shlb
push
pop
inc
in
cmpsb
inc
test
xor
movsb
cwtl
jo
mov
dec
jl
add
xor
inc
mov
inc
add
add
inc
nop
incl
add
push
insl
std
mov
inc
int3
pushl
pusha
or
jo
cmp
xor
jmp
clc
lea
in
pushf
sub
pop
je
pop
push
andb
call
aam
adc
jne
xor
push
jecxz
xor
leave
gs
jmp
repz
push
xchg
mov
push
or
or
out
push
dec
test
push
addb
int3
push
dec
test
shrl
dec
inc
xor
mov
mov
movb
shr
js
xorb
das
clc
mov
cmp
push
push
lar
inc
or
add
shr
jno
pop
jmp
add
inc
mov
adc
inc
inc
push
cwtl
cmp
mov
pop
pushf
sbb
or
ja
orb
pop
in
xchg
pop
nop
mov
icebp
pushf
cld
rclb
xlat
pop
adc
pop
jbe
xchg
test
andl
es
je
xchg
inc
push
ds
push
and
jecxz
sbb
xor
adc
mov
mov
gs
mov
push
inc
lock
push
dec
pop
mov
fsubrs
and
cld
push
gs
xchg
std
stos
or
xchg
loopne
fdiv
decl
stc
cmc
es
out
push
sar
adc
jmp
clc
sbb
inc
cld
lea
sub
wrmsr
push
add
jp
mov
subb
add
push
push
mov
adc
dec
add
push
ss
out
add
pop
in
jb
add
add
outsb
mov
sbb
dec
sbb
testb
dec
les
mov
enter
arpl
xchg
adc
test
inc
adcb
mov
sbb
pop
or
cltd
sub
movsl
aam
and
sbb
inc
adc
mov
dec
divl
out
dec
rolb
call
filds
inc
and
mov
xchg
mov
test
lds
pop
cmc
push
push
pop
dec
jae
jl
sarl
pop
call
pop
mov
cli
mov
sbb
pop
imul
decl
push
daa
add
enter
xor
pop
mov
pop
gs
add
fidivrs
sbb
stos
fcoml
lock
std
push
call
xchg
scas
cmp
lret
bound
ss
shlb
cwtl
cmp
add
sbb
imul
push
xor
sbb
shlb
int3
clc
sbb
xor
lock
add
pop
in
or
mov
push
or
sarb
orl
jb
movsl
inc
push
dec
rolb
mov
add
dec
mov
aaa
mov
sbb
je
cli
nop
inc
aam
lea
out
loope
int
int3
push
add
andb
add
xor
incb
mov
mov
add
fndisi(8087
mov
add
push
push
cmpsb
call
int3
ret
fbld
and
push
inc
push
pushf
or
dec
mov
jle
mov
cmp
faddl
bound
push
inc
push
test
lcall
repnz
adc
push
jne
call
lock
mov
inc
hlt
ret
rorb
sub
inc
mov
pusha
cmc
add
mov
adc
call
cld
popa
xchg
mov
fs
adc
inc
or
mov
in
scas
negb
cmp
push
cmova
cmp
ret
shll
cwtl
cmc
nop
adc
jmp
incl
lea
xchg
cmc
std
decl
add
loop
aam
inc
mov
outsb
rorb
add
mov
fdivs
popa
add
mov
sub
pop
outsl
in
jge
pushf
push
pop
loopne
inc
cmpsb
test
ret
mov
dec
lea
in
xchg
or
fdivrs
dec
out
pop
in
iret
gs
adc
mov
pusha
cmp
dec
data16
aas
inc
mov
ud0
je
inc
ljmp
sbbb
lahf
out
sub
icebp
jns
loop
jne
or
adc
loope
sbbb
sub
fiadds
jg
mov
jo
cld
int3
decl
add
test
imul
lock
scas
mov
in
jb
je
inc
stc
and
hlt
jg
cmpsl
test
into
mov
jmp
loopne
push
adc
data16
pop
adc
sub
add
push
xor
and
mov
icebp
loop
leave
or
cmpb
or
repnz
cmp
add
sbb
mov
out
pop
sub
xor
test
xor
add
test
mov
add
dec
test
bound
or
jne
dec
test
scas
dec
inc
sbb
les
push
loop
dec
call
fucom
loop
inc
pushf
icebp
sub
push
and
mov
aam
out
cmp
mov
jge
test
fmuls
dec
xor
call
das
and
mov
out
inc
pop
mov
mov
push
xor
ret
add
add
test
xor
jb
pop
loop
fdivr
inc
cs
cmc
mov
cltd
fisubrl
pop
pop
or
mov
cmc
mov
mov
jae
xchg
das
fdivr
jmp
xchg
adc
rcr
shrb
jo
mov
sbb
push
dec
mov
insb
sar
and
popf
fadds
dec
jae
cs
icebp
lea
rorb
mov
fildll
and
jmp
call
and
test
ljmp
jg
loope
sbb
add
loopne
sub
imul
sub
out
adc
lea
push
shll
shrl
ret
mov
mov
or
pop
pop
mov
adc
loop
mov
test
lods
int3
pop
push
ret
dec
add
in
sbb
jae
insb
sub
mov
mov
pusha
shll
mov
xchg
add
pop
mov
xor
sub
push
jns
add
pushl
and
nop
add
or
fdivrs
pop
mov
pop
xor
inc
jb
clc
push
cli
clc
or
push
sub
mov
lea
fwait
push
push
decl
mov
add
add
in
popf
xchg
test
add
mov
jne
xchg
movb
and
je
stos
mov
and
mov
incl
adc
inc
sbb
popa
shlb
mov
into
push
nop
xorl
adc
push
pop
jne
and
neg
call
sti
xor
mov
hlt
mov
xor
lock
dec
xor
pushl
sub
cmp
fnstenv
arpl
add
or
jge
and
cli
and
in
pop
push
push
leave
sbbl
mov
mov
or
adc
clc
dec
xor
sub
mov
fs
inc
fsubp
repnz
add
push
push
cmp
push
orb
loope
xchg
rolb
lcall
mov
lahf
mov
lods
les
aad
mov
cmpsl
jno
clc
or
fcoml
es
out
push
aaa
adc
aas
add
mov
mov
add
mov
pushf
lods
inc
int3
or
dec
inc
ret
cmp
mov
rorb
adc
cmp
ret
xor
add
mov
pop
les
fchs
jmp
xor
sub
fs
pop
rorl
add
xorl
or
in
push
or
mov
xor
inc
inc
mov
out
push
out
outsb
pop
rcrl
push
push
adc
push
stc
fsubrs
xor
mov
fs
scas
push
mov
sub
dec
mov
adc
mov
fcmovnb
push
cmp
aaa
sub
stos
mov
sub
mov
cmp
inc
fcmovb
rorb
mov
mov
fdivs
xchg
out
cld
enter
es
cmp
mov
notb
call
aam
adc
jge
and
in
mov
adc
js
test
test
clc
mov
add
mov
jl
scas
inc
push
jbe
adc
out
dec
cmpl
mov
cvtdq2ps
sub
loopne
mov
insl
push
cli
and
lret
fs
js
cmp
adc
cmpxchg
sub
cmp
movsb
scas
push
jecxz
mov
into
inc
call
mov
je
pop
jle
add
popf
dec
pushf
inc
push
jne
push
jns
jne
pusha
xchg
cmp
jb
sub
xchg
mov
mov
pop
adc
fstl
bound
jmp
imul
mov
test
push
jecxz
or
cmp
ljmp
push
dec
pushf
inc
mov
aad
enter
ret
out
and
idiv
add
iret
add
cli
push
sbbl
cli
das
adc
add
cmp
adc
dec
sbb
dec
clc
or
call
add
insl
add
inc
xchg
mov
iret
sub
cmp
clc
add
mov
imul
cmp
les
incl
cwtl
add
adc
imul
jb
push
push
loopne
push
nop
push
fsts
pop
pop
sbb
push
insl
jecxz
push
imul
cmp
xchg
fisttpll
jb
xchg
mov
pusha
adc
xor
loopne
aam
pop
add
inc
cld
xchg
or
sbb
popf
rorb
jle
cld
mov
aaa
icebp
adc
stc
jp
add
jecxz
push
pop
scas
int
and
insl
lea
call
testb
jge
add
adc
insb
je
pusha
add
je
cmpl
test
inc
sub
ret
test
or
sub
sbb
adcb
jmp
mov
addr16
xor
push
xchg
mov
cmp
sti
and
cli
clc
lock
inc
lea
jo
push
incl
incl
jne
int3
adc
pop
imul
sarl
shrb
addb
xchg
adc
xor
sbb
inc
outsl
or
add
lods
dec
test
adc
scas
xchg
mov
and
in
mov
add
or
sub
jb
and
insb
add
les
ljmp
ds
push
jbe
mov
add
inc
bswap
rcrb
add
push
fs
sub
mov
and
sub
hlt
arpl
test
sub
add
fstl
fmuls
push
inc
ja
xor
sub
clc
pop
inc
hlt
adc
add
int3
lds
and
push
lfs
add
in
add
or
jb
adc
test
arpl
mov
out
mov
lcall
jae
test
push
sub
xchg
fmul
xor
in
cmp
repnz
arpl
cmp
lea
or
mov
sbb
psadbw
push
jnp
jno
outsl
es
push
out
mov
mov
and
xchg
clc
xor
je
fimuls
lock
sti
fdiv
push
pop
arpl
adc
test
jg
mov
sub
fcom
imul
mov
rol
loope
test
mov
sub
ret
xchg
ret
movswl
cmpsb
jbe
xor
jl
test
adc
xor
xchg
pop
push
lcall
sahf
push
dec
mov
mov
jge
popa
mov
test
stos
insl
add
cmp
out
pop
push
insl
adc
dec
filds
xchg
flds
das
ljmp
ret
iret
jbe
push
je
mov
cld
cld
shr
rol
cmp
or
push
mov
xorb
sbb
outsb
and
add
mov
adcl
xor
add
repnz
dec
sbb
popa
movb
mov
cmpl
fcoms
adc
icebp
pop
lret
ljmp
dec
sub
data16
mov
jb
and
mov
in
xor
sti
xor
idivb
call
es
push
hlt
push
int
fucomi
loopne
inc
push
adcb
mov
xchg
add
and
ljmp
mov
korw
mov
shr
mov
add
test
or
outsb
push
cmpsb
xor
cli
sub
clc
cmp
add
fs
push
lea
shrb
mov
mov
sbb
sbb
scas
cmp
fimull
sarb
mov
stos
inc
inc
fdivs
outsl
pop
loope
pushf
push
jmp
pop
mov
add
das
cli
pop
dec
lds
cld
xor
lea
cli
testb
shlb
shlb
xor
je
push
sub
push
out
push
jmp
mov
aad
xor
aad
mov
divl
test
cmp
and
outsb
ljmp
inc
mov
test
test
mov
cmp
push
leave
and
or
jnp
out
ret
cwtl
push
mov
fisttpl
mov
idiv
mov
push
mov
insb
add
je
mov
ret
inc
loope
dec
mov
bound
push
and
aas
lock
negl
mov
push
push
xor
mov
push
dec
mov
or
mov
and
sub
mov
in
andb
mov
loop
jge
insl
loopne
pop
clc
sub
gs
mov
pusha
rorl
outsl
dec
sbb
lret
shl
in
sbb
inc
xor
inc
mov
mov
sub
mov
add
add
call
scas
out
imul
sbb
inc
jnp
dec
sub
mov
pop
mov
mov
push
testl
add
push
inc
push
xchg
cld
jbe
mov
je
pop
out
into
dec
push
rcrb
loope
lahf
add
movb
dec
mov
jns
call
repnz
mov
decb
adc
daa
sar
rorb
arpl
or
call
add
sbb
push
or
lcall
lret
pop
pop
inc
add
aad
movsl
dec
cltd
or
push
pop
pop
shr
xchg
out
add
jl
pop
and
xor
scas
jb
mov
jle
stos
push
pop
push
inc
push
dec
sbb
notl
in
into
inc
cmp
mov
in
arpl
push
shrb
add
fwait
test
fmul
push
mov
inc
push
xchg
lret
jo
mov
dec
ret
inc
in
push
or
pop
adc
std
xchg
cmpsb
or
shr
push
loop
test
inc
inc
or
into
sub
add
xlat
call
rcrb
pop
nop
fimull
data16
and
ror
inc
add
mov
inc
shl
pop
push
or
or
pop
cmp
incb
and
ljmp
mov
fidivrs
mov
inc
sbb
pop
add
inc
dec
or
mov
inc
mov
mov
add
pushl
int3
add
xchg
sbb
jle
or
mov
inc
push
sub
out
adc
adc
mov
or
jmp
and
lcall
mov
lea
xor
and
rolb
sub
decl
and
xchg
popa
add
or
mov
adc
add
pop
inc
ljmp
and
popa
lcall
outsb
or
cmp
pop
push
add
loope
lods
cld
stc
repnz
data16
push
mov
add
into
jp
adc
loopne
push
sbb
pushl
xor
sar
rcrb
ss
and
cld
mov
inc
jle
mov
adc
jne
in
jbe
inc
adc
loopne
mov
les
clc
cmp
fdivrs
lock
push
jo
test
inc
lea
add
jge
xor
pop
in
jp
idivl
push
mov
loop
or
inc
push
in
add
inc
push
test
xchg
inc
ljmp
fcoms
add
mov
mov
div
push
push
inc
jae
test
jb
rolb
fisttps
push
xchg
outsb
dec
jo
mov
jo
inc
inc
pop
mov
inc
xor
insl
cmpsl
lcall
sbb
lods
or
movsb
jns
sbbl
stos
cs
es
and
std
subb
mov
test
mov
sbbb
fiadds
xor
push
pop
sahf
test
ds
adc
clc
int3
sbb
adc
ret
inc
jne
mov
lret
cmp
and
les
xor
push
xor
push
push
es
test
js
loop
and
cmpsl
jl
xor
or
notl
inc
mov
cmp
sub
popa
nop
adc
mov
mov
mov
cld
push
inc
dec
push
add
dec
sub
dec
adc
cwtl
push
addl
rcrb
enter
pop
dec
xchg
dec
xor
out
xchg
jo
std
insl
decl
add
insb
or
dec
add
sbb
stos
adc
mov
adc
jg
mov
mov
mov
add
gs
inc
push
mov
adc
or
aam
sub
sub
cld
sti
cmp
inc
mov
jbe
xchg
push
cmp
add
xchg
test
int3
call
xor
inc
jne
call
jmp
inc
inc
rcl
mov
inc
sub
es
pusha
mov
ret
and
leave
adc
jl
scas
lahf
mov
test
push
ljmp
jmp
add
adc
pop
or
adc
inc
loope
xchg
shlb
jae
mov
outsb
push
adc
mov
dec
dec
or
adc
dec
sbb
rolb
ret
ret
mov
rolb
adc
add
lock
mov
je
cmp
inc
lahf
icebp
aaa
inc
scas
decl
cmp
je
pop
cld
dec
push
loopne
jb
out
mov
jl
push
adc
pslld
cmp
inc
and
xor
hlt
mov
xor
fs
fsubrl
mov
jmp
inc
mov
fmuls
mov
mov
paddb
mov
repnz
dec
mov
lcall
sbb
jp
ficoml
adc
inc
xchg
mov
jecxz
lock
adc
mov
xchg
dec
loopne
loop
push
or
xor
sbb
push
adc
cmp
mov
push
mov
adc
hlt
or
xor
inc
adc
xor
add
dec
sbb
imul
test
je
and
call
cltd
xchg
mov
inc
mov
pusha
jmp
insl
int3
add
inc
mov
loop
inc
add
pop
add
sarb
jp
or
sbb
adc
rolb
ret
mov
lret
dec
mov
daa
jl
mov
sub
add
xchg
pop
push
dec
dec
add
mov
inc
xchg
test
incb
mov
clc
jl
in
stos
mov
xor
repz
jne
andb
std
sti
lea
lret
loop
mov
je
cwtd
jae
lret
adc
rclb
and
add
insb
cmp
loope
fisubl
pop
scas
fadds
inc
mov
inc
or
pop
shrb
test
movl
fs
sbb
or
sub
pop
push
insl
push
or
lret
ja
js
cwtl
loopne
dec
sbbb
loopne
incl
or
or
dec
pushf
adc
sar
xor
jb
mov
add
dec
sub
jo
fbld
adc
cs
rclb
pop
lock
arpl
loop
xor
daa
jp
and
lock
out
push
data16
adc
inc
push
insb
cmp
test
inc
rolb
xor
dec
adcb
cmp
and
mov
clc
push
pusha
mov
std
ds
or
rclb
loopne
mov
mov
sub
shrb
dec
xor
stos
sbb
dec
sbb
push
rcrb
sbb
lock
pushf
dec
mov
clc
or
jp
adc
sub
je
inc
repnz
mov
dec
sub
call
dec
test
stos
mov
push
mov
rcr
push
outsb
adc
dec
fadds
stos
mov
ss
rolb
in
loope
or
adc
push
pop
push
inc
add
inc
dec
add
push
stos
push
inc
rcrb
dec
cmpsl
jge
outsl
cld
loope
push
jmp
and
loopne
test
add
mov
lods
icebp
mov
sarb
mov
add
lcall
xchg
push
adc
jbe
or
jne
dec
lock
es
fld
cwtl
cmp
lock
push
jnp
hlt
sbb
les
push
mov
dec
test
pop
inc
jecxz
and
cmpsl
lock
dec
mov
orb
adc
cmpl
lea
bound
divl
inc
or
notb
xor
mov
mov
cld
push
clc
cmp
adc
pop
and
cmpsb
lcall
push
std
pop
inc
adc
push
adc
push
mov
jp
aad
inc
mov
hlt
lock
lods
push
loop
or
out
rolb
ret
add
pop
push
lea
call
and
pusha
push
lcall
in
cmpl
jbe
mov
add
lock
cmp
test
xor
adcl
jl
mov
pop
leave
dec
nop
test
int
bound
adc
add
push
xchg
mov
xchg
sbbb
or
ss
je
adc
xor
repnz
adc
or
xor
jns
pop
loope
ret
shlb
xor
add
dec
loopne
pop
inc
mov
sbb
pop
sub
ret
sub
adc
jae
xor
push
pop
arpl
mov
mov
int
sub
sbb
dec
decb
daa
jle
and
sub
or
and
pusha
pop
cmp
mov
push
lock
mov
rorb
push
dec
pop
ret
adc
ret
push
push
shrb
fdivs
fs
les
adc
scas
outsb
lret
je
dec
imul
sub
push
mov
inc
push
cld
xor
mov
mov
push
data16
loopne
int3
and
test
inc
mov
jge
inc
xor
sub
push
inc
dec
jl
add
jecxz
mov
xlat
push
es
adc
add
inc
ret
fs
add
in
xor
lock
mov
daa
or
adc
std
push
ljmp
popa
sub
xor
gs
dec
sbb
aam
mov
stc
rcrl
xor
daa
fldenv
inc
lahf
sbb
inc
aaa
pop
out
rolb
lock
cmp
retw
cmp
push
xchg
ljmp
fwait
loop
clc
out
aas
jl
inc
dec
shlb
in
pop
call
mov
outsl
iret
test
or
or
push
sub
cmc
cli
mov
repnz
adc
test
and
dec
cmp
push
pop
jmp
mov
in
push
pop
fcmovnb
cli
aaa
fucomp
inc
mov
xlat
cmp
and
jb
and
js
imul
ds
mov
jne
inc
push
add
les
push
je
int
add
stos
outsb
mov
bound
push
call
je
adc
test
and
sar
xchg
cmp
mov
mov
adc
sbb
and
leave
jbe
mov
cli
es
adcb
shlb
ja
test
add
ja
and
inc
pop
or
mov
push
adc
mov
inc
inc
imul
filds
loopne
pop
pop
sar
fistl
fsubrl
test
push
arpl
mov
cmc
pop
dec
lods
mov
out
add
and
addl
or
dec
push
jmp
pop
xor
xor
test
jne
pushf
test
sbb
fcoml
icebp
push
fwait
xchg
das
shlb
aaa
push
shl
enter
rolb
loopne
cmp
push
loope
jle
stos
gs
cmp
bound
sub
mov
xor
jmp
inc
jo
push
clc
loopne
jp
dec
xchg
pop
pop
pop
sbb
add
mov
imul
and
jo
jo
and
mov
lock
add
cmp
test
cmp
jmp
mov
xor
mov
jnp
jl
mov
ret
push
push
cmp
dec
push
jbe
mov
pop
and
aad
mov
or
cli
loopne
insb
pop
jne
cmp
xor
push
leave
aam
rolb
lock
mov
adc
dec
cs
in
or
pop
sbb
cltd
adc
in
xchg
mov
ja
jl
add
loop
cmp
add
sub
rorl
jge
pusha
mov
cmp
push
cld
jne
cld
cld
sti
imull
mov
fdivrl
popf
xor
cmpsb
inc
mov
mov
scas
mov
add
cmpsb
mov
mov
hlt
push
or
cmpsb
jge
pop
data16
cmp
push
int
call
fcompl
jle
or
lds
add
cld
ret
inc
fsub
xor
loope
xor
test
lods
and
mov
mov
cld
mov
gs
dec
test
decb
xchg
mov
cmc
mulb
shrl
mov
dec
xor
sbb
out
mov
or
movb
jl
xor
xor
mov
add
cld
aaa
mov
lcall
inc
in
movb
jp
leave
fnstcw
sub
js
inc
adc
add
jp
fcom
cmp
dec
ljmp
xor
test
jns
dec
pushl
adc
ds
jno
mov
pushl
fnstenv
xchg
adc
gs
mov
data16
push
mov
xchg
icebp
mov
push
mov
or
lea
xor
jne
les
popa
inc
outsl
adc
jp
jl
push
std
add
add
push
pop
dec
mov
std
cmp
lahf
outsb
adc
out
push
push
insb
clc
add
std
inc
push
jnp
cmp
les
shrb
add
shrl
sbb
into
push
dec
dec
and
jo
adc
mov
cs
adc
xor
or
sbb
xchg
mov
push
movsb
test
imulb
gs
fsubrs
inc
sbbl
lock
sbb
mov
add
jl
cld
xor
dec
sete
das
or
les
push
in
incb
sbb
movsl
cmpb
cs
dec
add
out
sbb
adc
adc
jne
or
dec
test
sub
jmp
xchg
and
mov
jmp
dec
int3
xchg
lret
add
je
mov
sbb
adc
adc
dec
mov
hlt
rorb
or
inc
punpckhwd
inc
mov
jo
cmpsb
mov
push
loope
arpl
sbb
jmp
mov
aas
pop
xor
loope
mov
or
xchg
cs
inc
in
cmp
push
fidivs
and
hlt
inc
jb
sbb
mov
call
insb
jbe
pop
xor
push
ret
rolb
add
data16
cs
push
pop
mov
stos
inc
pop
call
test
pop
je
ds
arpl
xchg
adc
cmp
and
add
xor
scas
test
scas
xchg
mov
xor
xchg
call
adc
mov
in
pop
sbb
mov
add
or
and
movsl
pop
pop
ret
push
je
sbb
js
sbb
adc
add
jle
jecxz
dec
push
inc
add
push
stc
push
pop
mov
cld
gs
lcall
sbb
push
fdivl
cmpb
mov
stc
enter
into
es
sbb
adc
into
add
popf
shlb
xor
adc
or
mov
insb
or
gs
add
inc
and
adc
hlt
lock
inc
adc
or
mov
int3
mov
mov
pop
cld
xchg
sub
ret
ds
or
pop
mov
cs
fildl
add
rorb
out
mov
jb
xchg
aaa
movsl
cmpsb
jo
out
orb
loop
mulb
dec
or
cld
rorl
enter
or
movsl
orl
mov
rcr
push
push
test
adc
mov
add
jb
lods
or
sar
fst
fisubrs
xlat
add
pop
adc
jns
cmp
xor
xchg
lods
or
js
inc
add
pop
call
loop
int3
jne,pt
sbb
pushf
mov
shlb
push
lock
enter
cmp
addr16
fistpl
xchg
xor
adc
inc
mov
xchg
ss
xor
and
frstor
test
adc
add
loopne
cld
pop
push
adc
or
cmp
or
push
nop
les
and
ficoms
cmp
push
fsubrs
cs
mov
xchg
stos
outsb
pop
pop
add
mov
loopne
lcall
add
mov
xor
std
and
cmp
inc
movb
mov
fidivs
ret
adc
add
dec
push
mov
jl
pop
xchg
inc
mov
inc
mov
jle
add
push
add
cmpsb
and
in
cmp
rcrl
push
sarl
imul
cmp
mov
inc
xchg
cmp
je
inc
lock
pop
mov
inc
push
leave
push
out
ret
and
int3
pop
test
jmp
mov
pop
data16
mov
aad
jbe
and
xor
sarb
clc
inc
loop
cld
adc
mov
mov
enter
mov
cmp
cwtl
sbb
lcall
mov
test
repnz
pop
mov
inc
inc
jo
addl
xchg
std
mov
cmp
rolb
push
insb
test
lea
insb
push
adc
out
stos
ljmp
fiaddl
test
lea
mov
adc
mov
inc
fs
std
rclb
out
sub
in
addr16
outsl
pop
andl
mov
jb
fsubrp
enter
test
out
add
sbb
call
jmp
add
enter
dec
cmp
push
or
mov
add
in
jne,pt
sbb
and
pop
jmp
or
and
mov
bound
jbe
sub
push
mov
sbb
sahf
mov
clc
pop
sub
mov
loopne
mov
mov
js
je
cli
gs
pop
push
fstps
in
push
sbb
ljmp
adc
inc
ret
mov
push
jmp
movl
mov
sub
stos
cmp
jl
jo
pop
bound
cmc
xchg
mov
adc
loope
in
jmp
inc
mov
push
lods
add
aaa
push
mov
sbbb
cmp
add
add
push
stos
enter
in
int3
xor
fcmovu
daa
testb
xchg
xor
and
or
xor
pop
loop
xor
push
sub
mov
adc
add
in
imul
inc
mov
and
lods
push
cli
cmp
sahf
add
dec
push
sbb
push
sbb
jg
mov
sbb
adc
shrb
test
dec
in
jno
or
sub
call
clc
mov
xor
fdivrs
aam
add
push
push
loop
xchg
lcall
mov
mov
xor
push
lret
shlb
xor
data16
pop
orb
ds
popa
mov
fdivs
push
dec
adc
jbe
cmp
mov
loopne
sbb
and
in
push
push
jl
mov
sub
mov
mov
push
jg
popf
call
push
stc
mov
rcll
sbb
sub
jmp
pop
addb
cmpsb
cmpsl
mov
mov
jne
xchg
mov
jmp
jne
rcl
adc
cld
int3
xor
add
push
sub
decl
add
mov
or
movsl
call
push
pop
mov
mov
ljmp
aam
xchg
push
xor
push
jae
push
inc
aam
xor
ss
loopne
cld
pop
outsb
addl
mov
mov
inc
aam
lea
mov
incb
sub
mov
sub
or
fdivr
adc
add
shlb
jge
shrb
mov
or
in
jg
andb
sbb
jb
push
inc
cli
inc
and
push
imulb
pushf
add
mov
movsl
in
xchg
cld
xchg
js
push
or
push
mov
xchg
push
mul
test
pushf
out
addr16
shrb
movsl
out
cli
sbb
push
dec
mov
push
sub
inc
call
mov
je
outsl
mov
fistl
jbe
int3
push
jb
rorb
icebp
ret
add
push
cld
das
lock
pop
sbb
add
ret
push
jge
rclb
add
push
imul
dec
stos
dec
jne
adc
rol
dec
ror
nop
call
mov
and
jp
push
lcall
push
test
mov
jmp
gs
jb
add
inc
xchg
pusha
ljmp
push
in
cwtl
movsb
and
pop
les
mov
dec
push
and
cmp
enter
mov
jno
sarb
jns
loop
imul
rolb
pushf
ror
sbb
adc
inc
sahf
mov
mulb
sahf
out
push
xchg
adcl
adc
mov
out
mov
jmp
stos
xor
jmp
fwait
xchg
or
mov
mov
mov
ljmp
mov
dec
jmp
mov
add
sub
jb
or
sarb
push
test
test
sbbl
lea
jl
add
shlb
insb
lock
rclb
mov
cld
jmp
ljmp
or
ds
repnz
andb
int3
icebp
cld
aaa
and
or
sub
pop
sbb
push
push
enter
and
mov
push
cwtl
aam
pop
push
push
in
and
dec
fwait
inc
mov
out
mov
enter
icebp
fsubs
xchg
test
add
sbb
cmp
add
jns
rol
icebp
inc
cld
dec
and
and
cli
cmpsb
mov
jnp
push
push
adc
clc
arpl
cmp
add
xchg
push
sti
cmp
stos
inc
cli
mov
adc
push
jbe
lea
adc
es
mov
adc
dec
cmp
adc
pop
les
pop
jp
add
pop
daa
fidivs
enter
inc
cmp
inc
mov
add
and
mov
add
push
xorb
push
pop
mov
adc
mov
jne
mov
adc
sbb
push
or
or
int3
add
push
xchg
mov
scas
cs
jb
push
adc
sbb
inc
cmp
mov
hlt
add
cmp
shlb
add
mov
out
add
sar
je
push
fcmovu
into
push
fwait
push
fcmovnb
inc
mov
inc
push
fs
in
xor
push
out
inc
pop
je
cld
clc
dec
mov
out
mov
inc
movsb
in
adc
xor
sbb
shlb
das
adc
jo
lea
stos
push
jmp
mov
cwtl
or
jge
pop
mov
js
add
leave
mov
in
bound
pop
cmpsl
inc
rol
loopne
je
mov
adc
xor
lock
mov
pop
mov
pop
cmpsl
jno
and
je
sti
push
loopne
outsb
repnz
fs
xor
or
and
or
out
pop
pop
mov
push
cmp
clc
push
lods
outsl
fisubl
test
ss
icebp
xor
call
rcrl
adc
push
jmp
push
int3
mov
das
adc
inc
je
or
add
int3
pop
mov
sbb
in
mov
fwait
movsb
mov
add
test
loopne
or
inc
inc
fs
call
pop
adc
cmp
mov
pusha
cmp
mov
push
nop
sbb
sub
icebp
mov
lock
inc
test
xchg
in
mov
adc
xchg
ret
xlat
push
add
and
jl
mov
mov
or
cs
js
ljmp
adc
and
xor
clc
mov
adc
orb
adc
test
xor
mov
add
mov
cmp
addb
and
ret
popa
fdivs
mov
jb
pop
sub
and
hlt
outsl
subb
push
pop
bound
mov
cmc
xchg
aam
jle
push
fisubrl
cmp
inc
mov
push
add
jns
push
or
adc
pop
add
std
decl
cs
or
push
adc
inc
or
adc
or
adc
mov
inc
xor
mov
pushw
add
xchg
pop
aas
std
or
fprem1
mov
loop
mov
cli
cli
inc
ljmp
dec
sub
or
subl
popa
mov
dec
xchg
and
nop
add
into
jb
add
or
xchg
jae
in
aaa
xor
and
pop
pop
sbb
add
scas
jno
mov
jmp
push
fcomip
mov
ret
cmc
clc
push
enter
mov
loopne
or
mov
push
dec
xor
lea
xchg
xor
dec
mov
cli
cld
xor
dec
push
pusha
mov
ret
add
das
xor
mov
add
into
repnz
adc
sub
cmp
clc
lock
cmp
fdivl
mov
pop
ret
adc
push
dec
fildll
movb
mov
fmull
push
lret
pop
push
aam
add
inc
ret
cmp
xor
jg
cmp
mov
add
test
mov
rcrl
invd
cmpsb
push
or
rorb
or
or
add
adc
xchg
inc
lods
stc
or
push
inc
inc
loopne
pushf
mov
mov
int3
nop
fisubl
push
imul
adc
push
xchg
icebp
out
sbb
jne
fiadds
stos
dec
jge
push
xchg
pop
xchg
cmp
incl
jg
push
push
jmp
add
push
and
push
test
push
jbe
pop
cmp
cmp
mov
mov
add
imul
fcmove
and
dec
mov
sar
leave
sub
out
cmpsb
orb
push
dec
test
mov
cld
xchg
call
or
lea
js
and
add
out
add
inc
jnp
sub
iret
sbb
test
jle
lcall
imul
xchg
mov
stos
cmpb
enter
movsb
jl
aas
pop
jne
gs
inc
inc
inc
cmp
adc
push
jo
out
mov
mov
pushl
aas
je
add
adc
dec
inc
call
pusha
add
mov
shlb
dec
imul
pop
jg
mov
fstpl
jne
mov
es
cld
sbb
mov
out
test
shlb
or
cmp
outsl
mov
mov
push
inc
sbb
jo
fldt
or
push
mov
inc
popa
or
ret
rorb
pushf
mov
fcompl
in
xchg
sbb
adc
rcr
mov
add
std
out
clc
je
cmp
hlt
insb
fisubrl
rolb
out
inc
push
lock
xchg
ja
jge
jo
add
loope
hlt
push
mov
pop
and
inc
dec
jo
inc
mov
jle
les
push
inc
fistpl
push
push
test
mov
sar
out
mov
mov
add
mov
sub
mov
leave
jp
push
mov
test
adc
das
js
mov
mov
add
push
pop
mov
test
sub
je
in
sub
outsb
shl
mov
mov
das
std
add
call
pushf
jo
jge
push
pop
mov
out
lahf
lods
cmc
push
cwtl
adc
sub
jne
imulb
push
inc
mov
adc
popa
mov
lock
push
pop
into
fs
push
orb
or
mov
inc
mov
ret
int
scas
scas
fadd
inc
inc
mov
int3
xor
adcl
dec
int3
lods
add
mov
lcall
cmp
add
testl
sbb
rolb
mov
iret
loop
dec
fistps
pop
push
stos
sub
and
and
rorb
mov
aas
pop
sahf
insb
inc
xchg
inc
push
mov
test
pop
inc
mov
call
or
or
push
dec
shll
xchg
sbb
push
mov
fdivs
nop
jno
sbb
adc
jo
loope
add
call
inc
insb
sbb
push
mov
sahf
and
jle
push
jecxz
popf
cli
stos
mov
and
sbb
or
movd
sub
push
pop
sub
faddl
mov
stos
mov
inc
xor
xor
lcall
or
push
xor
mov
sbb
add
cmp
add
hlt
add
sahf
or
sbb
call
dec
sbb
test
sar
fsts
sub
adc
les
inc
je
mov
push
mov
fld
adc
dec
pop
or
pop
pushl
sbb
pushl
je
mov
aad
aam
xor
mov
or
cmp
cmp
outsb
jne
rorl
pop
shlb
cmp
jb
call
bnd
lret
mov
xchg
rol
test
mov
mov
adc
inc
mov
sahf
dec
call
mov
inc
or
je
and
fidivrs
les
lret
gs
lcall
or
add
shlb
gs
mov
pusha
test
adc
mov
scas
push
loop
mov
sbb
mov
inc
icebp
sub
icebp
mov
es
je
adc
fmuls
or
cmpsb
xchg
shlb
dec
push
or
scas
xchg
xchg
fs
mov
adc
rol
mov
dec
loopne
cld
xorl
jo
mov
sahf
push
mov
mov
xor
pop
xchg
out
add
cmp
lea
test
jle
fucomp
jmp
and
fwait
movsb
scas
push
test
xor
pop
gs
cmp
or
push
push
or
push
gs
jbe
sub
push
jmp
sbbl
mov
xor
fdivrs
xor
out
loopne
add
into
push
call
mov
inc
add
enter
test
fstps
pop
mov
cld
daa
dec
add
int3
jae
sbb
pop
xor
sub
call
adc
mov
fwait
add
in
inc
cmp
lret
mov
addl
cmp
sub
sarb
cmc
adc
sub
pushf
lret
insb
mov
push
dec
cli
cmp
adc
push
xchg
cmpsl
mov
test
movsl
lea
add
add
popf
add
dec
rcr
and
hlt
lcall
lahf
test
mov
add
test
call
call
inc
xor
xor
insb
fildl
scas
xchg
rclb
dec
add
xor
sbb
cmpl
arpl
lcall
add
fs
std
roll
shlb
mov
pop
int3
in
int3
add
mov
ret
lock
mov
xor
enter
cmp
add
adc
int
cmp
sti
pop
cli
incl
repnz
sti
pop
cmp
inc
mov
cmp
dec
mov
jle
shl
fistpll
xchg
inc
aas
push
ss
fcoml
adc
jbe
mov
stos
mov
or
or
sub
enter
add
mov
push
jge
arpl
push
jbe
dec
jl
cld
lea
lea
and
pop
insl
ret
xor
mov
shll
adcb
adc
mov
andb
push
xor
inc
sub
lods
pop
pop
hlt
xchg
xchg
or
or
pop
xchg
pop
test
cmp
mov
aad
xchg
out
jmp
arpl
cli
or
ret
les
xchg
add
pop
mov
mov
lock
cli
or
inc
mov
orl
les
nop
or
pop
adc
cltd
add
aad
cld
in
test
pop
dec
xor
add
pushf
outsl
mov
insb
pop
test
sbb
push
aas
cli
inc
or
sahf
cmp
sub
cli
mov
or
mov
rcll
add
rcl
xchg
jecxz
push
xchg
fcmovbe
les
add
sub
mov
cld
adc
stos
cmp
mov
cli
add
push
adc
xor
sub
ds
dec
fmuls
pop
mov
adc
add
add
adc
mov
dec
ljmp
sbb
sub
adc
movsb
pop
jmp
mov
add
sub
mov
or
rorb
add
add
push
jb
js
push
dec
inc
shlb
mov
add
adc
or
stos
out
movsb
pop
mov
cld
inc
cmp
jb
jb
push
test
ljmp
mov
outsl
mov
call
xchg
repnz
adc
fimull
adc
jne
xor
scas
mov
inc
adc
incl
pop
sbb
sbbb
clc
adc
or
mov
and
jo
push
rolb
ja
or
mov
inc
mov
sbb
outsb
mov
cmp
fimull
cld
pop
insb
in
pop
push
sarb
cmp
xchg
loopne
ss
xlat
mov
xchg
cld
or
je
or
ljmp
cmp
and
pop
mov
inc
push
xchg
ds
test
movsb
sbb
cmc
adc
pop
nop
mov
cld
dec
orl
sbb
mov
xlat
test
add
ret
adc
lock
cmp
iret
into
add
mov
mov
sbb
scas
std
nop
push
mov
data16
push
sbb
mov
cmc
sub
cwtl
xchg
mov
data16
mov
inc
cmp
pushf
pop
inc
ljmp
lds
dec
nop
pop
sub
xchg
add
push
mov
push
rorb
sub
sub
incb
test
mov
es
ljmp
or
sub
scas
incb
pop
fsubl
es
call
int3
or
orps
aas
dec
or
xchg
aam
dec
add
push
add
scas
pop
jmp
add
jg
add
notb
sbb
ret
pop
lea
xchg
int3
cld
mov
aam
mov
xchg
jge
add
aas
aam
sbb
mov
mov
je
jne
outsb
or
sarb
xchg
enter
xchg
and
push
xor
adc
inc
mov
inc
adc
mov
xchg
shrl
and
xchg
div
push
lret
in
mov
add
dec
mov
mov
ret
jmp
int3
jg
popf
addb
adc
add
leave
fcoms
out
dec
loope
cmp
les
push
pop
hlt
sti
xorb
jo
iret
cli
push
cmpl
rorb
aam
or
xchg
pop
mov
js
mov
lock
mov
sbb
movl
in
sbb
adc
mov
aaa
adc
outsb
mov
adc
push
ret
test
int3
test
add
adc
mov
adc
cmp
clc
xchg
lods
jne
sbb
decl
adc
in
xchg
push
stos
add
sbb
std
inc
lock
add
rcll
pop
or
and
xor
test
push
jne
mov
or
in
pop
jle
or
call
lret
and
aam
xor
cmc
adc
pop
cli
test
pop
call
das
pop
add
add
outsl
fisttpl
shlb
jle
fadds
mov
test
fmull
lods
mov
stos
push
adc
adc
jle
loopne
cmp
imul
xchg
cld
xor
push
xor
pusha
fidivl
sbb
push
loopne
outsl
xchg
mov
mov
jge
push
lret
outsb
pop
mov
es
add
and
in
push
in
sbb
adc
push
jge
dec
outsb
xor
ds
xchg
xor
push
decb
inc
popa
xor
std
dec
jo
popa
pop
gs
ficompl
movl
fisttpl
and
cmpsl
push
loopne
xlat
cmp
xchg
or
mov
push
lcall
call
test
int3
data16
mov
or
xor
inc
pop
aaa
pop
add
lea
cld
dec
dec
push
adc
lea
mov
clc
out
cli
fs
fmull
or
jo
mov
mov
aad
push
lds
push
dec
and
fmull
push
adc
adc
fsubrs
push
nop
xchg
popa
jg
mov
inc
or
mov
push
stos
and
bound
lcall
inc
dec
push
ret
in
xchg
push
and
insb
add
fsubrs
mov
pop
ret
stos
sti
adc
shl
add
je
adc
sarl
repnz
ret
add
add
pop
sbb
pop
and
dec
xchg
xchg
stos
add
xor
les
in
mov
xorl
loop
cmp
mov
add
je
int
dec
das
aam
or
or
outsb
push
sub
addl
and
data16
testl
dec
testl
mov
bound
adc
dec
call
imul
mov
fs
or
loope
push
jbe
pusha
imul
imul
mov
faddl
mov
or
jo
ret
std
or
or
ss
lea
add
pop
clc
mov
int
push
subb
push
push
lahf
push
cmp
add
sbb
jle
pop
mov
add
mov
jno
test
testb
mov
lock
cmpsb
push
cmp
outsb
into
fs
jge
inc
stos
adc
and
cld
fwait
cmp
jle
call
pop
jecxz
sar
add
roll
cwtl
lret
pop
aam
int3
mov
loop
pushw
jno
mov
idiv
adc
push
outsb
inc
push
inc
ss
rorb
mov
ljmp
mov
add
popf
shl
push
mov
stc
dec
adc
lcall
rorl
je
jb
fs
pusha
adc
mov
pop
mov
cmp
insl
into
push
mov
sub
push
lea
xlat
inc
leave
nop
adc
adc
into
outsb
push
outsb
or
stos
xchg
mov
mov
gs
pop
or
sbb
mov
and
cmp
setl
pop
mov
loopne
popa
and
jl
pop
call
es
push
outsb
jl
mov
mov
outsb
mov
inc
mov
mov
or
mov
test
aaa
in
inc
movsl
cltd
or
mov
add
incl
add
insb
lea
jb
adc
and
test
dec
jne
mov
outsb
stos
mov
add
xchg
cld
cmc
pushl
js
mov
nop
xor
call
ds
mov
inc
dec
mov
push
adc
xor
icebp
inc
roll
dec
sub
sbb
xchg
cwtl
jle
sub
inc
pop
pushf
add
mov
mov
shll
xor
add
or
adc
outsb
mov
pop
test
mov
mov
or
rorb
inc
mov
mov
in
aad
xor
jg
lods
or
pushf
daa
dec
lock
xchg
lcall
add
mov
pop
shrb
outsl
inc
mov
sbb
iret
ret
mov
push
pop
ret
int3
andb
add
gs
push
pop
cmp
addl
loopne
fcmovb
out
jg
and
jmp
jmp
enter
test
mov
and
fnsave
jge
mov
adc
fwait
add
pop
mov
aaa
je
mov
dec
aad
push
sbb
jbe
lock
call
imul
jns
pop
or
dec
mov
mov
ffree
lods
or
or
inc
and
jbe
stos
lock
hlt
insb
mov
mov
sbb
push
mov
insb
pop
dec
push
adc
sbb
push
insl
sub
inc
dec
ja
pusha
lea
cmpsb
pop
jmp
sbb
jmp
mov
scas
cmp
or
push
jge
or
jb
call
jno
jbe
jmp
ljmp
addl
mov
xchg
in
mov
pop
rcrb
or
or
std
out
ss
hlt
out
or
std
je
mov
and
mov
leave
mov
testl
icebp
ret
mov
dec
rcrl
call
cmp
pop
mov
or
loop
fs
add
fildl
jnp,pn
xchg
notl
test
dec
sbb
add
nop
sbb
adc
jne
ret
imul
pop
add
orb
outsl
lea
xorb
mov
mov
mov
insl
or
leave
push
pop
cmp
adc
or
cmp
lcall
mov
inc
into
or
in
rcr
movsb
mov
stos
clc
or
mov
shrb
es
cld
incb
ficompl
rorb
jp
cmc
test
add
out
nop
xor
rorl
popf
pop
imulb
xor
fsub
xchg
gs
arpl
enter
clc
movsl
mov
shll
jecxz
dec
inc
inc
cli
call
inc
xchg
jle
mov
sarb
loope
sti
cmp
cwtl
jns
inc
or
add
imul
push
mov
lahf
pop
add
sbb
gs
pop
push
scas
dec
sub
push
jmp
cmp
xchg
insb
ss
mov
sar
mov
push
call
clc
add
incl
mov
test
hlt
sub
rcl
mov
mov
add
leave
lock
push
in
mov
lret
clc
jl
add
les
sbb
inc
push
or
inc
mov
add
imul
call
add
sbb
test
stos
add
incl
xchg
or
ret
cmp
stc
data16
push
test
fucom
push
call
ljmp
daa
add
lret
loope
call
pusha
and
mov
mov
sbb
xor
outsl
dec
repnz
cmp
test
add
jge
fistpll
cmp
inc
js
xor
std
pop
mov
movsl
mov
mov
or
adc
mov
pop
sbb
incl
popa
inc
push
in
push
jmp
cmp
testb
fisttps
cmp
jl
pop
jmp
xchg
mov
rolb
jmp
pushf
cmp
rcll
arpl
hlt
aam
cld
js
ds
add
lock
xchg
ret
movsl
jle
inc
sub
xor
les
minps
call
add
add
mov
les
jmp
mov
enter
dec
add
cmp
enter
fcomps
adc
xor
xor
xor
testb
ss
jne
mov
xor
jae
stos
pop
shl
push
je
sub
mov
call
cld
mov
push
push
push
pop
movsb
pushf
ds
addb
sub
cld
ss
inc
and
arpl
sarb
inc
pop
outsb
cmp
inc
sbb
push
xor
or
adc
adc
sbb
add
aaa
sub
mov
int3
add
ret
cmpsb
loopne
sti
pop
fwait
call
js
pop
inc
push
dec
shrb
xchg
lods
sbb
sbb
push
inc
out
dec
dec
lods
aaa
sar
xchg
icebp
add
mov
dec
cmp
jnp
paddq
int3
lock
inc
add
cwtl
and
mov
mov
xchg
fdivr
incl
incb
lock
mov
int3
jno
adcl
sub
out
sahf
mov
mov
mov
fdivs
inc
jb
outsl
push
testb
mov
cmpsb
inc
pushf
repz
add
fs
xor
mov
fmuls
pop
xor
ds
lds
mov
xchg
or
fs
sar
xor
push
std
mov
adc
inc
xchg
in
sub
fsubrl
inc
ret
inc
push
add
sub
pop
pusha
pop
lcall
shrb
add
and
lea
push
fidivs
and
lahf
add
aas
inc
insl
or
adc
lock
adc
or
dec
push
int3
cld
xchg
mov
fisttpl
add
push
xor
pusha
cld
push
inc
jmp
ds
into
decb
shl
add
push
inc
in
addb
out
stos
inc
mov
inc
xor
je
push
mov
add
dec
ja
inc
cmp
fdivs
adc
mov
push
pop
mov
pushf
lock
push
mov
outsb
adc
xchg
lcall
outsl
mov
mov
xor
sbb
mov
je
push
pop
outsl
add
xchg
mov
mov
mov
stos
add
dec
into
cmp
rcl
call
and
bound
mov
in
nop
pop
or
adc
jns
clc
lret
cmp
adc
mov
loop
xchg
cmp
dec
pop
lock
inc
add
mov
pop
xchg
jle
outsl
add
loop
pop
inc
push
mov
adc
vmaxps
xor
fs
mov
cmp
xor
inc
movsb
pop
mov
pusha
xchg
pop
movb
push
jne
mov
pushf
push
xor
jp
cmp
mov
add
mov
outsl
imul
ja
stc
mov
cld
pushf
adc
inc
or
mov
pop
and
inc
push
jno
mov
test
mov
or
cmp
incb
jb
ret
shrl
xchg
xor
jmp
jb
jg
ret
or
adc
lcall
data16
ja
add
sub
pop
dec
popa
punpcklwd
scas
rcrb
pop
lahf
pop
mov
aaa
dec
movsb
sbb
or
jmp
pop
and
lret
fmulp
xchg
inc
add
hlt
or
sarb
cli
inc
ret
insb
mov
lods
sub
sarb
jl
fs
lret
call
mov
sbb
scas
sarb
inc
es
xchg
les
xor
xor
mov
aad
or
xlat
and
decb
out
mov
jp
add
mov
add
pusha
cmp
aad
rcrb
jmp
jno
adc
call
ja
xchg
outsb
adc
test
mov
push
lea
loope
xor
ret
or
xchg
inc
inc
push
adc
push
in
aaa
fdivrs
cmc
adc
dec
inc
dec
loop
outsl
int
cmp
adc
out
mov
sbb
addl
ljmp
gs
add
push
adc
sub
movsb
cmpsb
jle
daa
loop
mov
jle
xor
and
adc
pop
pushf
fimull
daa
inc
lret
or
lock
roll
repnz
stos
xchg
cs
push
loop
and
das
lret
lea
call
cmp
cmp
es
add
push
push
cmp
shrb
pop
into
fdivs
pop
clc
mov
inc
sub
pusha
pusha
and
pop
sbb
cld
xor
jno
mov
insb
adc
xor
adc
adc
push
cmpsb
inc
sub
scas
adc
push
add
orl
cld
and
inc
lock
push
orl
mov
mov
clc
mov
push
je
mov
xor
and
push
adc
xor
xchg
dec
shlb
cmp
aas
or
insl
mov
mov
sub
xor
cld
push
adc
fcoms
loope
loop
int
xor
xor
sahf
in
fadd
pop
stos
lret
fisubrs
sub
addr16
push
xchg
out
sub
adc
push
or
jge
dec
xchg
adc
push
push
aaa
mov
mov
cs
movsb
sub
stos
inc
mov
push
insb
push
and
add
xor
popf
rol
xor
lock
jl
loop
mov
dec
mov
ss
pusha
push
scas
add
adc
pop
inc
sti
xor
xchg
add
inc
pusha
jo
jg
popf
push
mov
cld
or
jg
pop
pop
and
clc
add
into
movsb
inc
add
adc
add
js
cmpsl
je
jl
orl
cli
pop
or
data16
push
adc
mov
inc
test
orl
jb
mov
dec
sub
jnp
inc
adc
fstpl
push
cld
sar
adc
xor
out
mov
dec
movsb
in
das
loopne
leave
xor
push
movsl
mov
enter
imul
mov
sbb
adc
sbb
xchg
call
pop
jne
dec
sub
sub
fnstcw
cmp
adcb
in
sub
mov
push
add
rorb
adc
and
pop
cmpsl
fs
jp
inc
jbe,pt
jo
or
popf
test
mov
push
faddl
loop
mov
mov
fwait
lret
rolb
mov
mov
test
cmp
in
or
and
jo
mov
add
or
faddp
ret
jl
mov
sub
in
mov
xchg
clc
mov
movb
in
call
add
cmpb
stos
sbb
adc
aaa
fs
mov
push
or
dec
lods
fs
push
je
test
pop
enter
mov
mov
aam
mov
cmp
ja
mov
cmp
orb
push
je
jle
adc
int3
inc
cld
aaa
jecxz
pop
loopne
add
in
decb
push
enter
jae
sub
inc
push
mov
data16
xor
cmpsb
inc
mov
push
icebp
add
in
cmp
jno
mov
mov
ja
adc
add
or
or
or
ds
jne
or
dec
sti
cmc
push
inc
push
in
adc
mov
jge
sbb
or
mov
mov
push
in
mov
addps
pushf
pop
enter
add
pushf
fs
ficoms
push
nop
test
push
xor
add
arpl
fnsave
mov
loope
mov
mov
xlat
ljmp
and
aaa
filds
jb
mov
add
add
dec
les
clc
dec
imul
xor
adc
cmp
loopne
loop
xchg
roll
pop
pop
lock
inc
mov
inc
adc
cli
sub
out
push
sub
ss
mov
cmp
ds
adc
cmp
in
mov
and
cld
adc
add
fs
xchg
sar
scas
ret
push
and
xchg
adc
add
push
dec
inc
dec
lods
inc
icebp
mov
gs
lock
les
cmp
add
jb
and
xchg
pop
sub
push
mov
mov
push
xor
ret
or
aad
adc
and
cld
adc
inc
int
dec
push
add
test
dec
loopne
faddl
add
inc
add
xor
incl
testb
lds
xchg
scas
test
pop
sub
pushf
inc
movsl
aas
mov
mov
loopne
addl
hlt
push
inc
inc
cli
xchg
add
rol
mov
mov
in
les
test
push
pop
xchg
xor
or
in
mov
pushf
enter
inc
ret
ret
insb
pop
pop
add
aaa
or
add
das
inc
loopne
and
mov
cwtl
dec
xchg
fsub
mov
and
or
xor
cmp
xor
test
push
dec
adc
cwtl
xor
lock
out
jge
mov
mov
in
leave
shlb
pop
nop
adc
cs
cmova
pop
xor
mov
push
cs
clc
fisttpl
pop
push
mov
cs
fsubs
mov
enter
pop
lea
test
fildl
mov
lahf
sti
scas
scas
mov
sbb
mov
or
xor
mov
out
insb
push
cmp
pop
mov
and
mov
push
mov
cli
lea
and
jno
sarl
mov
dec
jge
cwtl
inc
ljmp
hlt
mov
add
cmp
inc
sti
ret
sbb
cmpl
scas
ror
imul
mov
push
out
shll
lods
into
and
insb
nop
pop
movsb
pop
sbb
inc
hlt
cmp
test
and
mov
jns
add
sbb
jo
add
jmp
push
inc
ljmp
cs
stc
insb
xor
outsb
cli
test
call
icebp
push
inc
ja
sub
fnsetpm(287
add
leave
loope
test
inc
test
mov
out
dec
in
scas
ljmp
push
xor
jl
lock
or
int
scas
jge
jne
movsb
pop
rorb
movups
push
nop
jo
adc
aam
push
and
out
test
xchg
rclb
sub
int3
out
push
push
fldenv
adc
mov
sub
in
ds
lock
cmp
pop
ret
add
push
pop
xchg
js
add
adc
incb
and
test
pop
cmp
and
sarl
pop
ret
clc
mov
iret
shlb
adcl
addb
sub
addl
insb
int3
ret
or
push
add
jbe
sbb
inc
int3
rolb
andb
xchg
cli
stos
std
sbb
add
cmp
xchg
lea
push
push
ds
jge
scas
fwait
jo
push
mov
xchg
rsm
inc
jmp
add
jo
sahf
pusha
popa
or
jo
in
notb
mov
imul
in
or
bound
jl
test
push
aad
adc
sti
das
mov
xor
pop
gs
call
mov
add
loopnew
inc
scas
ficoml
mov
scas
call
add
mov
clc
sar
gs
ljmp
test
into
add
shrb
push
je
cmp
adc
jge
mov
push
and
xchg
add
xchg
rclb
out
inc
mov
mov
sbb
jb
mov
test
fs
movsb
bnd
add
int
sbb
sub
mov
dec
sub
jecxz
pusha
popa
or
fcomps
mov
leave
cmp
cld
mov
mov
jg
je
xor
mov
push
loop
loopne
mov
add
add
std
add
aas
mov
mov
lret
sub
sub
les
mov
cmp
jl
push
xchg
push
int3
dec
pop
icebp
test
push
shrl
into
iret
test
jb
test
incb
jns
add
jbe
fcmovnu
xchg
call
push
adc
add
and
mov
and
je
mov
pushf
fildll
sbbl
ret
inc
pop
inc
push
cmpsl
outsl
clc
sub
mov
cmp
add
sub
sbb
mov
pop
push
pop
call
dec
shrb
pop
jo
xor
mov
loop
lods
in
lock
mov
push
mov
cwtl
dec
pop
lcall
pop
sti
imul
enter
push
movb
ja
inc
std
jp
adc
je
das
adc
in
xor
mov
in
shr
rcrb
jl
je
cmp
mov
iret
pusha
adc
mov
repnz
fsts
cmp
clc
push
shl
push
arpl
imul
fildl
mov
outsl
adc
lea
mov
test
int3
push
rolb
les
loopne
mov
pusha
mov
je
loop
outsb
cld
incl
inc
cmpsl
adc
inc
add
add
dec
cmp
mov
inc
xchg
iret
sub
fs
test
cmove
pop
movsb
iret
push
in
sbb
ret
rolb
lock
imul
cmp
in
test
mov
sub
add
dec
add
mov
pop
pop
jecxz
addb
add
and
xchg
jne
lret
incb
push
jo
mov
mov
push
iret
inc
clc
mov
fistpll
jns
push
pop
les
add
add
pushl
jge
scas
add
scas
call
movsb
outsl
adc
test
aaa
popf
mov
addr16
int3
inc
add
cmpb
cmp
and
ljmp
cld
and
push
adc
ss
mov
mov
add
pop
nop
mov
cld
rclb
or
xchg
mov
test
mov
cld
add
lock
lock
adc
movsb
daa
mov
aaa
shlb
cld
mov
data16
sbb
shr
clc
sub
fcomip
add
and
xor
mov
nop
scas
add
in
std
xchg
xor
outsb
sbb
adc
shr
lcall
fs
jne
stc
addl
and
fs
mov
pop
pop
fidivrl
in
push
push
add
xchg
out
add
cmp
dec
inc
and
aas
dec
sbb
sub
out
dec
loopne
data16
sbb
fisubl
test
dec
or
pop
jne
mov
in
orps
dec
add
ret
mov
add
add
inc
adc
and
jnp
push
push
push
adc
xor
sarl
addb
call
pop
sub
movsb
hlt
out
mov
mov
adc
pop
sub
incl
pop
inc
notb
push
and
and
fildl
push
add
hlt
test
sub
adc
adc
insl
nop
push
add
cmc
add
loop
ss
push
dec
pop
aad
jne
push
fimull
nop
loope
cld
jae
test
push
and
cwtl
xchg
mov
pop
sub
sbb
sub
inc
xchg
mov
das
in
add
pop
inc
dec
add
test
stc
push
test
test
imul
mov
aaa
and
hlt
mov
and
pushf
jne
test
int3
or
aaa
cld
in
rcl
dec
push
fisttpll
xchg
mov
pop
xor
movsl
and
sub
cmpsl
mov
rorb
sbb
adc
cli
pop
adc
lea
mov
je
pop
mov
les
add
aaa
inc
ds
jl
sub
xchg
leave
xor
pushf
pop
push
sub
lock
or
xor
push
dec
dec
mov
sub
mov
xchg
outsb
fimuls
loop
jne
insb
push
clc
je
push
shr
push
sub
das
imul
int3
or
call
sbb
test
jl
pop
xchg
pop
ret
pop
insb
ljmp
addb
pop
mov
sub
sbb
push
jbe
push
ficoms
movsb
repnz
xor
jmp
ret
add
add
lahf
inc
mov
and
push
inc
jb
scas
out
inc
sub
dec
js
ljmp
jg
fs
xor
xor
ud2
insb
jecxz
mov
adc
pop
adc
push
cmpsb
pop
cmpsb
add
and
in
stos
mov
push
ret
mov
imul
mov
sub
mov
lock
dec
in
sub
jbe
add
movsb
mov
push
roll
in
add
mov
nop
out
inc
cmpsl
sub
call
stc
fists
push
in
inc
inc
orl
jg
sub
aam
fmull
inc
mov
int
inc
int3
or
nop
add
fs
ret
sbb
sub
mov
pop
xor
push
push
push
adc
faddl
sub
dec
dec
call
ret
dec
rcrb
dec
lea
mov
push
movsb
add
daa
movsb
sbb
clc
scas
xor
test
adc
shl
sub
sbb
pop
mov
mov
adc
mov
and
pop
inc
sbb
add
mov
xchg
push
dec
and
xchg
cmp
mov
lds
jl
inc
push
dec
pusha
call
mov
stos
dec
push
rol
mov
push
and
ret
jne,pn
out
cld
les
push
cmpsb
gs
fwait
mov
mov
jle
insb
shlb
loope
push
call
and
mov
jb
sub
sub
xor
add
int3
imul
sti
mov
insb
mov
inc
insb
orb
lret
in
fistpll
pusha
xor
sbb
insb
adc
sahf
std
cmc
or
hlt
loop
inc
cld
gs
popf
aas
dec
insl
and
stc
lock
jae
ret
ret
sub
pop
or
push
aam
mov
sahf
rcrb
pusha
pop
or
test
xor
mov
sahf
add
xchg
stos
and
dec
loope
je
pop
ret
movsb
test
in
dec
std
sub
mov
test
inc
rcll
cwtl
mov
cmovge
dec
test
xor
loopne
lea
xchg
pop
mov
callw
js
faddl
loope
into
mov
fs
xchg
inc
test
and
or
incb
test
repz
push
hlt
loop
pop
pcmpgtd
xor
clc
cmp
xchg
lock
inc
pusha
jg
aam
pop
dec
xchg
mov
ret
inc
js
lock
push
jnp
xor
dec
loope
shrb
bound
ret
nop
es
and
jmp
aam
adc
lock
les
fnstcw
jl
add
mov
fchs
stos
push
testl
xchg
mov
sbb
pop
dec
inc
movb
or
repnz
mov
ret
mov
data16
or
inc
inc
cld
dec
or
xor
scas
stos
xor
je
sbb
outsb
cmpsb
mov
pushf
mov
stos
iret
mov
jge
pop
dec
or
and
jae
xor
outsb
mov
cmpl
fimuls
and
popa
dec
and
test
rolb
insl
pop
out
pop
mov
xchg
jg
fsubrl
inc
xorl
cmp
cld
xchg
mov
adc
fs
dec
aam
shrl
mov
cmp
outsl
in
in
pop
xchg
cld
lea
jo
fs
mov
test
lock
xchg
xchg
mov
push
mov
or
rolb
test
xchg
lret
lock
pop
xchg
pop
fimuls
inc
lret
xchg
add
dec
icebp
cld
das
test
ljmp
lea
sub
sub
movsl
cmp
inc
stos
sti
call
arpl
outsb
push
test
fildll
movl
jmp
adc
iret
rclb
and
mov
mull
mov
inc
xchg
int3
jo
clc
jmp
mov
inc
cmp
test
cwtl
inc
xor
addl
jno
adc
orl
ljmp
pop
aam
sar
pusha
lret
je
push
push
mov
insl
mov
jl
add
jp
mov
ret
lret
pop
mov
push
or
loop
fwait
jp
pop
dec
call
xor
in
insl
push
sbb
add
nop
mov
push
lods
xchg
hlt
into
enter
aaa
inc
inc
lar
je
cli
nop
loope
xchg
or
xor
stc
sub
js
sub
mov
lahf
push
std
mov
repnz
push
ror
sti
arpl
cli
pop
mov
lahf
push
mov
std
repz
adc
in
xor
pop
mov
jb
mov
inc
mov
call
fisubrs
mov
mov
insb
xorl
aam
xor
out
rclb
xor
xor
push
stos
pop
sbbb
out
shlb
push
test
add
lds
cltd
and
jne
xor
test
fiaddl
fcompl
lods
and
leave
or
inc
ret
cs
pusha
cmpb
add
push
clc
pop
inc
jb
jge
aad
imul
cmp
test
add
mov
adc
xchg
mov
xchg
xchg
jne
inc
rcrl
dec
mov
push
shll
nop
aas
add
das
adc
or
fstpt
rcr
cld
sub
xor
add
mov
test
jge
xor
cmp
and
ljmp
ja
xor
pop
mov
xor
scas
shl
xchg
xor
aaa
pop
xor
pop
popa
loopne
or
ret
js
inc
lods
add
inc
pusha
xchg
les
xchg
inc
incl
sub
push
fcomp
mov
dec
xchg
fdivr
adc
xchg
pusha
mov
xor
test
lcall
add
jmp
pop
jecxz
shrl
adc
push
push
sbb
or
pop
lahf
jle
mov
movsb
movl
roll
jmp
push
repz
sahf
add
jbe
cmp
test
push
add
stos
cs
mov
dec
add
dec
sub
push
loopne
les
mov
pop
inc
or
pop
in
sbb
cli
lods
add
enter
mov
shrb
cmpb
cmp
mov
daa
nop
ret
sbb
jo
les
jbe
decl
and
mov
lock
cmp
ficomps
insb
andl
pop
movsl
dec
mov
adc
and
xchg
loopne
push
clc
dec
push
xchg
decb
cwtl
mov
test
ss
sbb
imul
inc
and
xchg
in
lea
decl
inc
insb
sbb
lods
push
add
push
and
ss
cli
leave
add
int3
cld
mov
dec
test
mov
loop
mov
xor
movsl
mov
loopne
insb
inc
decl
add
movb
add
adc
loopne
inc
movsl
lock
imul
mov
sub
pop
repnz
fcoml
mov
cld
stos
dec
pop
and
xchg
insl
clc
setge
cs
jne
pusha
enter
pop
inc
jecxz
addr16
mov
cmp
add
outsl
enter
je
mov
aaa
mov
mov
xor
vpunpckhqdq
jae
ficoml
lods
jg
mov
rolb
pop
jl
inc
fsubl
jle
cmp
rol
call
cltd
pop
pop
in
dec
add
jo
jge
jg
je
push
shrl
cmp
addb
jl
lods
rclb
ret
mov
jle
jmp
push
call
adc
mov
into
push
or
fidivrs
pop
mov
mov
pop
fs
pop
add
adc
mov
and
dec
les
leave
pusha
xor
enter
xchg
xorl
dec
inc
sbb
outsb
dec
push
rorb
mov
je
mov
lods
inc
or
andl
mov
je
add
xor
inc
jne
movsb
dec
jp
mov
call
push
xchg
xor
sub
test
dec
push
imul
rclb
ljmp
jns
and
cmp
je
mov
sahf
push
mov
push
dec
mov
addl
imul
or
je
adc
push
jo
aas
inc
imull
sbb
and
in
aad
push
int3
sarb
sub
les
jmp
mov
fmuls
mov
std
dec
push
adc
rorl
adc
cmc
int
push
test
cmp
rclb
push
out
lea
sahf
pop
mov
lock
pusha
mov
mov
popa
push
dec
add
ret
ret
mov
mov
and
adc
or
jg
in
pop
sbbb
dec
mov
push
enter
add
loopne
movsb
mov
mov
add
or
orl
xor
cmp
or
nop
or
pop
stos
subb
idivb
pop
inc
movsb
rorb
cmp
clc
add
fwait
mov
mov
aam
ret
sub
mov
rorl
stc
pushf
pop
roll
push
cli
lods
test
lret
insb
out
jne
mov
fildl
insb
mov
pop
push
or
test
mov
cmp
mov
inc
mov
jne
out
ficoms
stos
jno
or
push
or
cmp
mov
add
subl
jne
fs
nop
push
xchg
mov
add
jmp
cld
cli
xchg
mov
adc
movb
push
outsl
test
mov
popa
roll
std
test
dec
inc
into
push
sbb
sbb
sahf
push
test
pushf
sar
mov
outsb
insl
mov
pop
mov
mov
pop
xchg
inc
or
inc
mov
jo
xchg
cmp
push
insb
mul
or
out
mov
adc
call
outsb
adc
cli
stos
push
push
push
ret
xor
sub
fsubl
add
or
inc
loope
cs
cmp
test
push
or
pop
push
adc
lock
loope
inc
add
insb
cmp
ds
add
jge
bound
push
adc
icebp
fsubl
xor
add
mov
push
push
add
and
jo
adc
shrl
cmp
mov
dec
push
cs
ret
aam
xchg
outsb
nop
cs
incl
jnp
lods
data16
inc
sbb
jo
enter
dec
push
fdivr
aaa
and
orb
add
lea
shrb
idivb
nop
aad
dec
aas
push
mov
xor
mov
push
push
test
clc
jae
lea
sub
clc
cmp
js
pop
sarb
insb
adc
add
add
jl
sbb
lds
in
xchg
icebp
fbld
jl
inc
cmpsl
sub
push
clc
add
jl
mov
lods
movsb
ret
movsb
xor
sbb
prefetchw
or
xchg
call
aad
shlb
mov
xor
stos
mov
or
xbegin
cwtl
dec
cld
clc
mov
mov
adc
mov
icebp
adc
popf
xchg
add
jo
mov
je
mov
add
incb
lock
leave
insb
push
cwtl
xor
mov
inc
cld
stos
jno
aad
cld
adc
jle
and
mov
adc
adc
inc
push
add
xchg
cmp
pop
gs
cld
lea
add
lock
push
cwtl
aas
or
add
mov
hlt
stos
adc
add
lea
dec
jl
dec
add
dec
push
fs
adc
fsubl
imul
inc
out
insb
pop
cs
shlb
inc
and
pop
or
je
or
test
fcoms
jecxz
mov
addl
push
fcmovu
fdivrs
shll
push
add
ljmp
aad
lods
cmp
pop
push
fwait
pop
popa
jg
push
mov
rcrb
call
add
test
sahf
fadd
push
addl
or
adc
jo
lahf
pushl
inc
into
ret
aaa
mov
out
addb
xor
fisubs
push
lea
out
push
push
popa
incb
cmp
aas
shlb
nop
lock
or
inc
push
pop
add
std
adc
outsb
pop
and
mov
addl
in
add
inc
xor
andb
push
dec
push
push
pop
fisubrs
out
nop
jbe
push
jb
loope
cmpsl
cmpsl
mov
dec
loope
cmp
test
mov
sub
imul
shlb
cmp
or
push
cli
inc
loope
inc
aam
adc
inc
cmp
push
sub
push
jb
outsb
pop
icebp
or
sbb
sub
mov
or
push
inc
leave
add
adc
testl
and
cmc
mov
sub
outsb
or
or
dec
aas
or
or
pop
les
cmp
sbb
test
pop
fwait
cli
xchg
cltd
adc
pop
adc
push
xor
jge
xor
faddl
into
repnz
mov
xlat
jp
adc
adcl
arpl
dec
pop
xchg
lret
je
cmp
xor
int
or
popf
lods
or
clc
sti
pop
dec
mov
cmpb
inc
jo
enter
mov
lahf
lret
sub
cld
dec
xchg
jmp
xchg
sub
push
adc
add
hlt
ja
push
inc
rolb
mov
out
scas
add
loopne
fdivrp
test
cmp
pop
cmp
scas
in
ret
push
sbb
pop
add
sbb
or
fcoms
sti
inc
xchg
pop
lcall
js
add
popa
cmpl
imul
xchg
pop
icebp
lcall
adc
inc
cmp
pop
add
or
xchg
mov
adc
pop
pop
scas
mov
jge
add
mov
mov
push
jns
aas
cltd
push
cmp
outsb
add
pusha
insb
call
movl
mov
fisttpl
mov
leave
dec
std
inc
ret
adc
pop
stos
or
addr16
je
lea
cmp
lock
lock
pushw
cli
add
ret
test
dec
mov
or
inc
add
test
and
in
sub
fisttps
ljmp
dec
dec
cwtl
dec
cld
psrld
bound
popa
inc
pop
stos
ret
sbbl
add
sahf
fisubs
dec
sbb
jae
add
add
dec
or
sbb
lods
test
add
jae
push
sbb
xchg
add
mov
std
xchg
xchg
push
mov
adc
cmp
pop
jmp
inc
or
cmp
aam
sub
adc
imul
dec
mov
dec
or
sub
lea
mov
add
bound
inc
jl
fstpt
mov
mov
std
inc
push
inc
sbb
int3
push
addb
mov
aam
push
jmp
enter
push
or
je
or
lods
push
sbbl
cld
xor
add
std
cmp
rorb
sahf
fdivs
lret
xor
mov
je
rcrb
push
call
pop
or
addb
inc
js
sarl
enter
das
push
dec
push
pusha
outsl
mov
xchg
scas
outsl
scas
out
xchg
xchg
or
inc
clc
or
xor
add
xor
mov
lock
lret
mov
shlb
xchg
movsb
test
pusha
test
mov
inc
add
pop
pop
dec
std
push
iret
fs
outsb
ret
in
sub
scas
incl
jge
repnz
sub
aaa
adc
hlt
mov
mov
call
popa
negb
or
out
xchg
push
insb
fcoml
dec
hlt
xor
jmp
jne
sub
sbb
ficomps
or
roll
xchg
repnz
mov
push
test
decl
mov
adc
into
adc
incl
mov
pop
loope
jle
aam
mov
add
das
icebp
inc
dec
lock
mov
jb
mov
xor
fsubrs
push
push
sbb
adc
dec
sub
or
and
cld
jbe
mov
sbb
xor
js
sub
add
inc
xor
jb
sub
jne
out
je
cmpsb
cld
shlb
inc
push
mov
add
fldcw
add
adc
and
dec
sbbl
pop
movsl
ret
mov
subl
dec
divb
inc
or
and
and
cmp
fsubp
mov
addr16
aam
push
or
lds
mov
pop
mov
in
sub
or
call
inc
sbb
out
cmp
push
roll
add
mov
dec
mov
lds
shr
cld
insb
aas
test
lret
inc
lods
lock
xor
int
bound
dec
push
mov
or
inc
pop
adc
inc
fmuls
jg
icebp
adc
and
push
mov
test
cmp
loop
adc
add
cmp
and
mov
fstl
xorl
inc
and
mov
or
sarl
xor
push
push
jle
or
mov
sbb
pusha
stos
or
in
rcll
pop
fsubrl
add
and
dec
sub
pop
test
ret
push
mov
mov
std
ret
or
cld
dec
fs
imul
lock
mov
and
pop
mov
clc
nop
lock
adc
xchg
loope
dec
inc
pop
push
cmpsb
mov
mov
pop
shrb
testl
shlb
or
mov
or
push
ja
lret
xor
push
jmp
call
popf
addb
add
enter
mov
push
pop
pushw
out
adc
mov
call
sub
sbb
pop
sub
inc
data16
push
test
mov
adc
adc
pop
ja
inc
mov
inc
adc
push
adc
and
pop
jno
jo
mov
inc
push
or
outsl
xchg
pop
jns
sbb
lret
je
adc
push
lods
xchg
jne
xchg
enter
jp
xor
into
cwtl
sbb
scas
rcrb
jne
sbb
data16
fcomip
lret
sbb
or
jbe
or
mov
mov
jmp
test
cld
test
inc
mov
imul
test
mov
pop
subb
xor
xchg
js
imul
stc
and
aaa
call
bound
fnstenv
dec
jle
pop
mov
subb
add
add
inc
popa
insl
xchg
push
add
or
jp
mov
fldenvs
xchg
data16
jbe,pt
push
xor
jge
push
dec
stc
xchg
aas
push
or
sub
push
lods
insb
dec
rolb
les
cltd
in
jp
push
and
lcall
inc
sub
mov
loopne
push
movsl
outsl
cmp
test
sbb
xor
decb
jb
add
add
je
das
push
jmp
testl
test
or
mov
xchg
fs
test
rcrb
jge
dec
or
mov
rolb
pop
ss
or
jmp
add
jno
test
xchg
cmp
push
pusha
out
out
loop
lea
lock
push
cmpb
mov
jl
insl
aas
test
jo
out
std
or
aad
jle
movsb
mov
push
inc
lret
push
mov
test
inc
add
and
in
mov
push
inc
shlb
xlat
push
push
sar
enter
dec
pop
in
mov
add
xor
jne
scas
fmuls
add
jo
mov
mov
jg
cmc
test
ljmp
std
test
mov
std
inc
test
push
xchg
inc
int3
mov
rol
aaa
insl
push
je
sub
lret
push
ret
mov
call
or
sti
mov
mov
jge
or
cmpsb
cmp
shl
adcb
jl
xor
xor
push
push
push
adc
sbb
or
push
push
xchg
and
fistl
and
push
in
cld
cmp
xchg
es
clc
jnp
aaa
movsb
movl
xor
jecxz
adc
pushl
xor
rolb
sbb
mov
xchg
xchg
loopne
adc
aad
add
add
and
nop
push
adc
stc
xchg
sbb
out
shlb
fadds
test
fadd
or
mov
push
push
pop
test
add
xor
sti
ret
insl
push
or
cmp
push
pop
ds
mov
mov
clc
pop
mov
and
subb
add
adc
xor
adc
int3
jmp
and
sub
pusha
mov
insb
inc
cld
jbe
dec
dec
pusha
insb
lcall
test
add
lea
stos
push
mov
and
push
stos
push
add
mov
push
mov
xor
sbb
sbb
je
mov
ljmp
xchg
je
in
dec
add
mov
les
push
mov
cld
pop
or
cltd
or
sub
sub
push
sbb
and
or
nop
sbb
push
cmp
ss
lea
mov
xor
ret
add
lea
outsl
cmp
fucomip
cmp
and
aam
sar
mov
push
clc
xchg
xor
pushl
test
dec
push
pop
lock
jmp
fidivl
clc
sub
cmp
fs
int3
sub
popl
push
cmp
call
std
gs
out
pop
fs
xor
mov
or
aaa
mov
jne
dec
rorb
xor
mov
fstpt
mov
inc
dec
push
neg
nop
jb
test
out
sbb
sub
cli
int
cmc
adc
add
hlt
test
ficoms
mov
call
pop
and
push
adc
add
fwait
and
clc
mov
xor
mov
dec
xor
cmpb
add
adc
push
and
adc
mov
mov
or
ret
add
test
push
outsb
loopne
dec
mov
add
mov
push
add
sub
jl
aad
loope
sbb
add
pusha
mov
sbb
icebp
je
dec
push
adc
or
adcl
push
mov
mov
add
and
in
incl
mov
loop
add
ljmp
jno
ror
xchg
add
int3
ds
mov
xor
dec
push
cmp
rorb
pop
pop
xor
lods
add
out
adc
in
add
jg
push
aam
inc
xor
pop
adc
out
add
adc
add
cmpb
arpl
rcr
nop
lret
cmpsb
out
adc
and
hlt
std
adc
add
je
int3
sti
into
cli
mov
xor
sarl
cld
pop
mov
jle
and
sub
pop
or
loopne
into
inc
pop
mov
push
pusha
adc
adc
daa
sbb
lock
ret
adc
pop
push
loope
adc
and
outsl
mov
or
mov
push
adc
add
add
push
push
insb
mov
jle
push
push
lret
and
jp
push
pop
loope
into
aas
repnz
fisubrs
scas
jp
cltd
sbb
inc
fs
and
outsl
and
push
sbb
mov
xchg
lcall
insl
mov
jne
test
and
flds
lock
decl
loopne
lock
or
int3
xlat
add
inc
push
mov
jns
jp
test
mov
in
mov
enter
ljmp
mov
mov
jne
aad
ljmp
pop
ljmp
sub
mov
adc
aas
clc
pop
add
mov
sarb
je
fnsave
int3
test
jbe
fldl
inc
mov
push
xor
pop
inc
add
inc
repz
xchg
fwait
orb
in
hlt
pop
movsl
xor
test
insw
mov
cs
outsl
jl
sarl
push
fdivrp
in
adc
adc
and
add
iret
sub
ss
jg
test
mov
inc
int3
lcall
icebp
push
aam
sbb
es
sub
mov
aam
pop
movsl
out
jo
inc
or
cmpsb
sub
fsubrs
sbb
lret
push
cmc
add
adc
adc
add
callw
mov
incl
mov
mov
cmpl
jmp
jmp
mov
mov
cmp
leave
cmp
jecxz
push
std
rclb
mov
stos
and
push
xchg
or
insl
xor
sbb
mov
add
ja
dec
mov
sbb
movsb
rorl
pop
fsubp
push
loope
gs
push
inc
clc
clc
addr16
jge
mov
mov
adc
mov
js
jb
out
lock
cmp
call
icebp
sbb
inc
xchg
sub
inc
push
mov
inc
push
cmp
sbb
cmp
jg
or
cwtl
xor
arpl
cmp
or
mov
jmp
int3
inc
inc
inc
loope
sarb
fs
push
pop
inc
decl
fiaddl
mov
fisubs
test
out
out
cmp
roll
pop
rol
call
sub
aam
mov
andb
testl
adc
adc
shrb
clc
lcall
adc
mov
and
stc
cmp
or
mov
mov
jmp
out
fadds
or
inc
ret
in
inc
push
mov
adc
roll
and
inc
lock
popa
shlb
and
les
add
or
or
add
mov
jp
jl
and
add
xor
jb
mov
or
and
adc
mov
pop
push
stos
mov
and
mov
or
push
or
mov
outsb
mov
push
add
call
xchg
ror
jl
jnp
inc
pop
mov
mov
andl
enter
lret
adc
call
loop
cmp
inc
bnd
xlat
pop
ret
sub
adc
shlb
push
out
popa
and
test
adc
pop
or
pop
xor
stos
xchg
decl
pop
pop
mov
outsl
cli
adc
push
sbbb
sub
jo
loopne
pop
lods
cli
je
orb
shlb
sbb
int
je
movsb
shl
out
mov
sub
mov
cwtl
and
je
push
lret
push
push
fmulp
loopne
popa
test
outsl
lea
lods
sub
gs
dec
popf
arpl
mov
jge
nop
mov
jle
movsb
rclb
cmp
mov
dec
inc
adc
lahf
mov
clc
call
ret
test
xchg
cld
dec
xchg
int3
les
repnz
push
outsb
imul
cmovo
les
adc
cli
mov
popf
ljmp
enter
icebp
scas
fidivl
xchg
add
mov
jne
andb
pushf
dec
xor
or
adc
mov
repnz
lods
dec
aaa
ss
out
inc
xchg
xor
loop
push
test
leave
sar
dec
fsubs
inc
dec
testb
aas
pusha
into
mov
les
or
call
int3
pop
xor
data16
aas
adc
inc
or
sar
jns
push
sbb
cmpsb
lods
jo
icebp
sub
push
icebp
in
lcall
nop
nop
pop
mov
push
xor
cmp
xor
fs
mov
notb
lret
es
aaa
mov
mov
shlb
adc
xchg
lods
nop
test
mov
adc
adc
mov
jne
ret
jae
sbb
insb
lcall
inc
sub
mov
push
mov
cli
stos
add
aas
into
call
or
cmp
add
enter
sub
inc
outsl
insl
inc
adc
nop
mov
mov
inc
jae
mov
enter
cli
or
outsl
incb
ss
rcrb
je
pop
enter
or
mov
xchg
inc
incl
mov
jge
pop
pushf
enter
shlb
scas
add
cld
jl
mov
fiaddl
pop
push
dec
add
xor
jle
pushf
in
add
adc
decb
and
and
scas
rcrb
imul
sbb
push
movsl
call
push
push
xchg
add
clc
and
jbe
add
push
sub
push
adc
call
xor
add
push
cmc
jne
int3
dec
call
adc
mov
push
scas
add
push
and
out
jb
push
or
outsb
hlt
lds
xchg
in
gs
pop
cmp
jmp
and
jne
xor
jo
mov
push
popa
repnz
inc
mov
daa
sbbb
int3
jo
scas
cmp
add
aas
cld
sbb
push
sbb
lea
cwtl
test
push
dec
fdivrl
inc
push
aam
push
sbb
cli
fsubr
or
mov
fdivs
push
mov
das
and
inc
push
rcrb
mov
out
add
lea
sub
pop
xchg
mov
adc
std
scas
fucomi
into
jno
test
inc
rcrb
std
lock
dec
push
insb
jle
and
imul
add
inc
pop
loope
xchg
aas
pusha
hlt
cmovo
lea
or
mov
mov
or
and
sbb
jne
lret
pop
mov
sbb
mov
xchg
mov
add
sub
adc
adc
lcall
pop
test
test
enter
ret
in
inc
int3
adcl
aas
fs
push
mov
es
vunpckhps
rolb
xchg
sbb
mov
add
push
mov
mov
lods
clc
add
and
sbb
mov
in
call
add
pop
xchg
jle
icebp
pop
cli
pop
lea
or
mov
ficoml
call
hlt
xor
mov
out
iret
xor
not
and
cmpsb
mov
inc
popa
pusha
xchg
sbb
test
fwait
mov
xor
and
add
test
push
js
sahf
xchg
adc
ds
dec
jp
test
clc
incl
shll
xor
sub
or
js
decb
aaa
adc
movsb
dec
adc
test
xor
xchg
jge
sbb
leave
imul
mov
adc
add
inc
int3
or
cmpsb
jno
test
push
clc
and
cld
cmp
xlat
cli
shrb
pop
cld
mov
data16
jmp
inc
test
test
mov
pop
and
inc
mov
cmc
sbbl
push
jecxz
outsl
call
in
fnstcw
pushl
jbe
sarb
in
pop
push
ds
push
lock
cmp
push
xchg
mov
dec
movsb
je
mov
xchg
add
ja
and
roll
adc
mov
test
adc
inc
pop
popa
mov
add
cmp
xor
out
idiv
loopne
aam
fidivrs
add
stos
vmread
movsb
push
and
sub
cmpsb
jbe
outsb
cs
xor
mov
xor
je
push
rolb
lea
in
call
mov
icebp
push
ret
mov
je
sbb
xchg
mov
jne
popa
push
pusha
or
stos
or
jb
incb
sub
fdiv
orb
add
jl
call
mov
add
test
inc
sub
xlat
add
imul
push
mov
stc
mov
pop
test
pop
fisttpll
xor
or
mov
lahf
add
pop
mov
in
cmp
jl
mov
or
stos
mov
pop
movsl
lock
les
std
sbb
lcall
adc
push
fs
jne
and
xor
test
cmp
stos
lock
mov
stc
in
addb
loopne
mov
cmp
adc
loopne
mov
js
outsl
xor
leave
push
incl
push
fildl
lods
aas
and
shlb
mov
dec
pop
psubb
inc
cmp
inc
or
mov
pop
lret
in
jg
out
sti
out
mov
mov
push
inc
cwtl
jno
das
popa
xlat
jl
adc
in
pop
add
push
int3
add
decl
lock
test
or
and
add
popa
je
add
call
add
inc
je
pop
repz
xor
jae
fsts
push
push
add
inc
mov
pushf
aad
mov
ret
sbb
mov
or
add
test
pop
inc
test
fldt
add
push
je
or
popa
aad
mov
dec
test
cmp
push
fidivl
mov
dec
or
mov
cli
dec
fnstsw
or
dec
inc
and
out
push
aas
mov
jle
sub
shlb
outsl
or
addl
imul
inc
push
mov
mov
mov
sub
enter
or
bnd
mov
dec
bound
loopne
dec
dec
jb
cmpb
stos
or
in
fimuls
shr
push
cmovnp
mov
shlb
dec
test
push
ret
stc
loop
shlb
dec
ss
or
cmp
dec
add
in
loopne
dec
xchg
xor
rolb
adcb
adc
subl
push
ret
inc
shlb
jge
shll
test
add
lods
push
bnd
sub
fdivs
mov
sbb
pop
xchg
jge
or
aam
lods
mov
sub
insl
pop
call
ljmp
ret
nop
add
inc
xor
je
add
rol
scas
xchg
push
mov
mov
fisttps
or
jmp
inc
out
inc
mov
sub
push
push
je
adc
leave
mov
mov
aaa
push
mov
std
push
push
cmp
cmp
mov
cmp
add
jne
jge
leave
imul
aam
scas
insb
gs
incl
fucomi
or
addr16
pop
cmp
hlt
push
enter
cmp
mov
ret
or
arpl
das
sbb
js
mov
add
mov
test
loopne
inc
mov
jmp
jbe
test
aam
push
rclb
or
icebp
clc
xchg
cwtl
push
hlt
sbb
add
add
pop
pop
cmpsb
jne
dec
mov
rcrb
add
inc
dec
lock
inc
push
pop
std
pop
cmp
mov
inc
add
push
mov
shrb
jmp
dec
adc
pop
cli
push
clc
sbb
in
mov
aad
and
rol
add
movsb
mov
mov
or
inc
clc
inc
xor
sub
jl
gs
cs
and
xorb
or
sub
bound
aaa
dec
int3
out
mov
mov
cmc
lea
jecxz
in
mov
clc
icebp
mov
aaa
xchg
mov
ret
adc
fwait
gs
andb
lcall
xor
or
sub
xchg
loope
stos
and
inc
fstl
lock
mov
mov
int
adc
xor
inc
data16
xchg
sbb
or
add
psubusb
outsb
pause
sbb
jp
inc
repz
jne
imul
xor
mov
adc
add
imul
shll
or
push
inc
cmp
clc
cmp
dec
clc
dec
dec
in
xchg
in
cld
or
or
add
lea
inc
pop
dec
fisubs
imul
pushf
or
push
test
sbb
cmp
inc
and
push
jbe
cmp
shrl
push
test
out
pop
add
enter
add
sub
adc
add
ja
jb
rclb
int3
and
sbb
pop
mov
push
popa
shll
sub
push
pusha
cmp
push
mov
mov
xor
push
es
push
add
pop
orb
inc
in
push
push
mov
leave
loopne
mov
push
and
push
lret
rorl
xchg
cmp
out
dec
xor
shll
push
push
jbe
add
mov
test
push
rolb
sbb
or
xchg
adc
pop
xor
clc
incl
out
jne
jns
inc
stos
shlb
add
pop
inc
std
adc
and
xchg
dec
jl
mov
mov
and
jmp
call
push
xchg
mov
inc
int3
mov
test
add
push
movsl
int3
ret
pop
inc
or
clc
neg
rcrb
sbb
mov
ja
jle
xor
jle
dec
lods
pop
cltd
icebp
xchg
fsts
dec
sar
mov
in
inc
jo
jmp
enter
add
stos
pop
cmp
and
ss
imulb
test
add
cmp
jp
gs
ja
push
push
aaa
inc
fimull
pop
inc
jge
fisttps
mov
mov
cmpsb
and
orl
inc
xchg
nop
sub
xor
push
in
sbb
sbb
dec
mov
es
rclb
les
in
outsb
mov
cmpsb
aas
push
adc
add
sub
push
jbe
mov
orl
jmp
les
les
add
fcoms
inc
add
scas
adc
mov
movsb
fildll
cld
lock
xor
mov
insl
xchg
sub
cmp
add
pop
inc
clc
fwait
call
leave
pop
or
faddl
fisubl
mov
mov
movl
inc
cmp
push
jne
add
stos
mov
outsl
pop
add
cmp
adc
cwtl
mov
mov
pop
js
pop
fbld
fidivl
scas
push
incb
stc
outsb
adc
shlb
repnz
aam
xchg
or
mov
and
into
jae
test
aas
dec
push
in
inc
and
aam
sti
mov
loopne
fmul
add
outsl
lds
outsl
outsl
mov
insl
or
jl
add
aam
pop
adc
or
jmp
outsb
or
repnz
movsb
aam
dec
rcrb
mov
cli
push
inc
jl
lods
shrl
hlt
clc
dec
faddl
inc
ljmp
ret
subl
loopne
push
and
gs
scas
cli
push
ljmp
call
popa
adc
or
sbb
mov
in
or
add
dec
ret
sbb
mov
sub
push
or
call
je
add
xor
andl
sbb
add
out
push
jp
mov
dec
mov
or
enter
adc
test
and
hlt
inc
add
adc
fildl
gs
or
mov
push
call
jg
cmp
cmp
faddl
inc
mov
and
pop
insb
xlat
mov
rorb
lods
or
test
enter
or
jl
adc
xor
push
cmc
xchg
inc
sub
movsb
pop
movsb
popf
pop
mov
pop
mov
decl
addr16
or
fcomps
call
stos
push
sbb
outsb
sbb
repnz
loope
or
sbb
jp
pop
movsb
pop
jbe
ror
dec
sub
add
push
iret
dec
and
ret
push
imul
push
test
xlat
adc
jo
sub
jecxz
loope
mov
and
sbb
int
mov
sub
idivb
mov
dec
add
ljmp
xor
push
mov
dec
dec
sbb
loopne
cs
or
rcpps
scas
mov
jp
mov
xchg
cs
cmp
mov
loopne
pusha
inc
sub
push
cmpsb
adc
out
shrb
mov
xchg
inc
inc
adc
call
scas
or
dec
andb
sbb
add
call
out
nop
jle
push
adcl
mov
xor
xor
ficoml
lea
test
pop
dec
pusha
insb
enter
sub
jne
jne
roll
cmp
incl
mov
mov
test
std
push
jbe
and
in
js
ss
inc
add
add
inc
es
xor
jge
jbe
ffreep
mov
test
pop
orl
nop
sarb
cmp
push
scas
pushf
popf
decl
and
inc
pop
xor
mov
cld
js
test
call
adc
push
int3
xchg
inc
pop
xchg
jle
pop
test
mov
leave
lods
mov
inc
cmp
mov
sub
xor
add
ret
and
psrld
pop
nop
gs
mov
cld
inc
js
inc
jl
and
pop
xchg
std
pusha
cltd
addb
xlat
mov
mov
in
xorb
xchg
jbe
xor
add
fisubrl
and
sub
lea
inc
sbb
sbbl
shlb
and
add
test
rolb
cmpsb
mov
push
mov
adc
and
inc
dec
sbb
push
shl
nop
push
shrb
inc
mov
mov
push
dec
insb
je
push
xchg
xor
jge
mov
push
ret
shll
and
shrb
incb
cmc
pop
call
pop
cmp
xchg
pop
dec
pop
mov
jae
cmp
in
or
push
adc
andb
ficoml
cmp
mov
flds
lods
sbbl
les
adc
sbb
adc
pandn
call
or
mov
xor
cld
or
and
inc
push
pushf
mov
adc
sbb
sbb
jo
subl
flds
pop
add
insl
xor
jne
jae
test
mov
mov
mov
loop
add
add
add
insb
loopne
pop
xchg
test
and
cmp
insb
jb
adcl
cmp
inc
cli
mov
loope
adc
repz
into
ljmp
jno
testb
jp
xor
mov
fdivrp
pop
shrb
inc
adc
decl
fs
aam
pop
cmpsb
sbb
mov
test
fisubrs
add
sub
pop
stos
sub
push
cmp
and
mov
push
clc
pop
pop
stos
shl
int3
mov
push
and
mov
or
lock
pop
adc
add
outsl
int
in
fcomps
popf
push
xchg
pop
decl
sub
es
dec
arpl
loope
add
adc
jmp
sub
lock
add
mov
cs
push
mov
pop
into
xor
push
cmc
dec
sbb
mov
dec
lea
das
or
jle
cmp
lea
ss
cmc
mov
fcomip
out
pop
cld
mov
insl
test
jmp
faddl
sub
mov
rorb
mov
jge
movsb
xor
aam
dec
cli
add
dec
loopne
pushfw
or
insl
sub
and
mov
add
mov
loop
pushl
pop
cwtl
jg
jo
fstl
stc
sbb
cmp
ja
inc
xor
add
js
or
pop
insb
call
adcb
xchg
movsb
movsb
rclb
dec
dec
call
inc
pop
ljmp
test
adc
ljmp
or
jp
stos
cmc
je
push
cld
out
andl
fwait
inc
add
push
cwtl
and
mov
sti
mov
cmp
add
call
push
xchg
cld
mov
dec
cwtl
nop
sbb
push
cs
or
add
inc
addb
mov
xchg
ret
fimuls
cmpb
cmc
add
inc
lods
or
jb
out
add
push
jns
jg
movsb
dec
inc
inc
and
into
push
fs
mov
jge
pop
outsl
lock
push
cmovns
ror
cli
int
push
je
lock
nop
inc
jp
ds
xor
adcb
lret
xchg
adc
pop
pusha
pop
sbb
xor
pushf
pop
or
sti
stos
cld
jae
pop
fisttpll
sbb
push
push
push
mov
lds
call
sbb
dec
mov
cmc
add
cli
lock
out
xor
add
lret
in
test
or
loopne
jle
stos
pop
cs
pop
inc
jl
inc
jmp
rolb
adc
out
rorb
sub
add
cs
test
add
pop
cmp
pusha
mov
test
cs
and
push
mov
loop
scas
aam
push
outsl
fdivl
or
xchg
or
and
bound
sar
test
inc
icebp
dec
xor
add
incl
jmp
add
mov
dec
push
fs
mov
out
clc
cmp
cmp
fidivl
add
lock
push
fs
scas
sub
add
sub
mov
sub
scas
adcb
jbe
jle
push
push
inc
rclb
pop
jmp
out
rolb
cld
dec
popf
cmp
in
lea
cld
rcll
ljmp
ret
into
push
stc
pop
jmp
les
js
dec
xchg
adc
lea
or
push
imul
shrb
inc
js
push
push
cmp
std
jl
xor
push
icebp
inc
mov
cmpsb
leave
push
mov
rolb
push
jbe
fsubr
cmp
rolb
jmp
pop
fildl
cmp
jmp
fisubrs
call
mov
push
movsb
mov
or
test
testb
inc
andl
cld
stc
incl
sbb
push
jo
push
adc
sub
sbb
or
bound
test
insl
xor
nop
lods
add
cmp
test
cwtl
lcall
dec
ja
cwtl
push
iret
fidivrl
push
sbb
xor
aaa
add
fcmovb
inc
xor
lcall
jle
push
into
inc
push
movsb
cld
scas
lret
push
aad
dec
sbb
mov
adc
mov
dec
or
cmpsb
add
inc
cld
fs
pop
lcall
xor
push
aam
movsb
sbb
jg
mov
push
popf
push
add
in
mov
add
mov
or
int3
scas
adc
int3
jmp
dec
pop
inc
mov
dec
xchg
xchg
sbb
pusha
test
addr16
insb
add
shrb
notb
mov
push
pop
rcr
outsb
loopne
add
sub
andb
insb
sbb
mov
inc
adc
inc
clc
es
inc
call
push
adc
jg
std
mov
inc
mov
push
mov
mov
jnp
in
mov
insb
int3
clc
loopne
and
jg
pop
mov
cmp
mov
pusha
sbb
scas
adc
addl
jo
push
jb
fsubs
sti
out
xchg
or
and
stos
insb
js
pop
dec
pop
mov
add
push
aam
ret
push
jae
sti
or
fdivrs
mov
insb
pushf
mov
test
test
fcoms
roll
rorb
pop
test
sbb
mov
push
or
cmp
pop
xchg
jp
call
mov
es
mov
push
xchg
jne
pop
rorb
add
pop
push
lods
clc
sbb
jmp
push
mov
ljmp
push
dec
ljmp
xlat
call
outsl
shl
out
test
push
pushf
cld
or
das
mov
dec
int3
call
lods
dec
ljmp
mov
jp
repnz
ret
loope
inc
inc
and
xor
loop
shl
sub
xchg
xor
cmp
inc
xchg
fimuls
adc
add
repnz
pop
mov
clc
rorb
sbb
or
mov
gs
add
jae
sub
dec
adc
add
add
fsubr
fdivr
inc
fbld
hlt
in
loope
sbb
pop
dec
clc
test
jle
push
mov
int3
mov
xor
enter
jecxz
ljmp
sti
js
ljmp
xor
push
mov
dec
xchg
or
mov
or
shr
mov
and
mov
mov
in
fnstsw
xor
psraw
xor
cmc
and
mov
pop
movsl
cmpsl
push
or
mov
fimuls
and
ljmp
or
push
lock
loopne
sti
adc
push
cld
je
mov
fsubs
xchg
testb
lods
insb
je
call
sarl
aad
and
lods
mov
mov
push
push
shlb
ret
cmp
pop
loop
aam
jl
cmp
shrl
clc
push
enter
ja
inc
ret
push
inc
jne
push
mov
inc
jo
rol
in
push
adc
sub
aam
insl
inc
shlb
pop
mov
push
out
mov
add
sub
popf
jmp
sbb
dec
and
cmp
mov
or
push
sub
rcrl
add
jmp
add
les
cli
xor
sub
fisubs
pop
sahf
jne
mov
jo
and
out
xchg
push
push
ss
xor
popf
dec
or
or
mov
ja
push
adc
and
fdivrl
pop
div
mov
jae
cmpsl
push
or
test
into
mov
add
adc
add
jo
lcall
test
enter
cmp
pop
shlb
mov
mov
push
mov
mov
mov
dec
xor
or
cmp
mov
es
stos
mov
sub
gs
cmc
fisttpl
inc
outsb
xor
adc
mov
add
ss
insb
loop
mov
push
jp
inc
push
mov
insb
ds
cmp
mov
mov
pop
fcmovbe
or
xchg
movsl
icebp
and
dec
push
fisubrs
jbe
mov
fimuls
ss
test
adc
adc
push
push
xor
ss
xor
dec
jl
mov
mov
ficomps
push
jmp
inc
pop
mov
push
adc
sbb
outsl
dec
js,pn
cmp
cmp
dec
in
or
imul
inc
pusha
addb
movsb
pop
je
and
aam
aas
pop
dec
loope
dec
and
sub
fdiv
add
and
sar
xor
rolb
mov
add
subb
inc
dec
jecxz
lock
adc
subl
ljmp
xchg
pushf
or
push
cmpsl
outsb
call
in
pop
jl
ljmp
inc
pushl
mov
push
mov
cmp
lea
shlb
xchg
sahf
fsubs
push
xor
adc
test
xchg
sbb
mov
inc
sarb
mov
leave
mov
loop
jp
adc
mov
outsb
adc
ds
sbb
add
adc
adc
jne
xchg
xor
pop
and
mov
mov
sub
or
cld
xor
mov
add
push
lea
add
cli
xchg
cmp
cli
mov
cmp
fcomps
adc
in
sbb
and
fs
aas
mov
call
cmp
lcall
adc
mov
shrl
rolb
add
shlb
inc
dec
cmp
je
inc
sar
fadds
mov
aas
repnz
sbb
add
push
imul
jg
jge
cld
push
call
test
daa
pop
insl
in
outsb
mov
call
ret
xor
gs
adc
mov
mov
sti
inc
adcl
and
bound
mov
xchg
mov
cwtl
sub
ljmp
xchg
dec
mov
adc
shlb
add
bound
ffreep
fidivrl
lret
test
xchg
push
inc
loopne
in
lock
inc
inc
fcoml
and
xchg
dec
push
xchg
decb
mov
fnstenv
and
jl
add
or
xor
enter
add
sub
ds
add
pop
add
push
dec
mov
subl
mov
ret
or
pop
inc
je
adc
add
sarb
out
out
cli
pop
icebp
push
es
subl
movl
jnp
mov
mov
js
cmc
mov
lock
imul
icebp
out
adc
into
cli
adc
dec
sahf
mov
movsb
sbb
ret
add
inc
mov
shlb
inc
cmpsb
insl
dec
lea
push
pushf
popa
mov
lea
imul
es
dec
in
idivl
lcall
rolb
ljmp
imul
je
ds
mov
pushf
movsl
pop
int3
push
mov
loop
aaa
test
cmp
shl
adc
es
shll
push
ljmp
xchg
data16
fmuls
test
pop
inc
mov
jbe
mov
das
mov
iret
shr
rorl
aas
nop
and
push
mov
shlb
add
dec
push
sbb
jae
mov
lock
jge
fmull
sahf
push
sbb
add
xor
hlt
rcrl
push
mov
inc
adc
js
rcl
jb
push
je
mov
movsl
daa
push
cmp
mov
adc
addr16
cmpsb
xor
aam
dec
cli
add
mov
push
pop
cmp
jmp
add
inc
movb
push
add
je
ret
lock
jge
add
cmp
outsb
and
xor
cmc
add
nop
cld
xor
jl
arpl
pop
idivb
hlt
sbb
loopne
arpl
sbb
fsubl
imul
cmp
dec
stos
add
popf
and
outsb
sub
shlb
add
cld
mov
mov
fmuls
mov
test
outsl
dec
cmp
popf
decb
stos
aad
outsb
loope
sub
sbb
test
fcoms
cs
push
jmp
add
and
cltd
add
bound
outsl
insl
add
std
push
push
jge
mov
pop
popa
and
push
jmp
and
jno
fs
push
or
les
or
sub
and
mov
test
xchg
inc
subl
lret
xor
sub
adc
xor
clc
cmp
mov
mov
cmc
leave
pushf
jp
in
pop
xor
or
xor
outsb
mov
call
loopne
aad
xor
push
push
lcall
cmp
ds
fdivrp
mov
lods
push
stos
add
jbe
sub
fdivr
jne
adc
test
sub
cmp
or
push
test
jl
ja
sub
ljmp
or
inc
in
mov
mulb
lea
push
sbb
cmpsl
dec
sbb
mov
fisubrl
outsb
scas
out
ficomps
xchg
js
lret
shrb
adc
outsb
inc
dec
dec
mov
sub
xor
adc
adcb
sarb
mov
jnp
cld
cld
push
clc
add
add
clc
loop
rcl
or
xchg
popa
push
cmp
popf
cmp
pusha
push
dec
pop
push
lea
xor
pop
and
push
arpl
xor
adc
push
mov
push
rcl
add
add
or
lock
aam
cli
out
pop
pop
or
adc
adc
jmp
outsl
popf
xor
or
ja
inc
inc
in
mov
mov
lret
push
add
or
mov
or
shlb
dec
add
inc
and
add
std
pop
shl
jge
inc
bound
test
in
lds
mov
sbb
add
jp
xorb
fs
les
test
in
inc
push
call
push
js
in
test
push
aad
jne
in
sbb
adc
sbb
and
push
or
outsb
shlb
mov
mov
sub
push
sar
inc
mov
pmulhuw
notl
jl
mov
push
pop
nop
in
mov
and
push
ret
xchg
jp
stc
aam
loopne
mov
dec
inc
push
fldenv
mov
fcmovnu
mov
pop
mov
cmpb
je
mov
mov
push
call
add
mov
push
aas
aas
sbb
mov
and
mov
stos
test
jmp
push
fs
push
add
call
add
sbb
dec
lcall
xor
fs
lock
add
and
and
push
out
lods
push
add
sbb
pop
mov
inc
mov
outsb
and
cld
bound
push
rclb
les
pop
cmc
and
lret
and
and
ret
or
jp
add
inc
std
test
maxps
clc
push
je
mov
sub
inc
push
mov
in
fs
aad
inc
push
jge
jmp
pop
aam
cs
inc
push
stc
sbb
or
stc
test
mov
sub
shll
or
gs
test
sbb
pop
mov
incl
pop
xchg
xor
inc
inc
mov
mov
aaa
add
mov
ljmp
mov
push
lock
sbb
mov
call
mov
lea
divb
add
cmp
aam
cwtl
aam
test
mov
call
repz
aad
cltd
jns
inc
mov
inc
push
cmp
sub
fidivrl
dec
mov
bound
loop
mov
addps
push
fmuls
mov
inc
xchg
in
mov
push
or
fdivl
insb
enter
ss
cmp
mov
clc
xlat
es
stos
mov
cmp
sub
jmp
clc
in
std
dec
add
adc
inc
mov
adc
add
repnz
add
dec
ljmp
movb
test
push
add
mov
pushl
add
push
gs
adc
or
add
jmp
jle
cld
insl
mov
clc
ret
test
cld
lea
mov
fcoml
jp
rolb
lret
sbb
test
push
push
aam
mov
or
sub
jae
jge,pt
add
rcl
std
pop
jb
inc
adc
cwtl
push
cmc
mov
dec
xchg
push
int3
xchg
rorl
sub
fdivs
or
jmp
rolb
decl
fcoms
js
in
jg
cmp
cmc
lea
rcrb
fsts
pop
and
roll
cmc
in
or
push
decb
mov
or
sbb
adcl
and
les
pop
xchg
jo
lods
inc
push
mov
je
xor
inc
mov
out
xchg
adc
mov
lret
mov
sub
lock
mov
loope
mov
subb
and
push
cmp
enter
mov
push
xchg
dec
std
pop
aam
clc
out
cltd
arpl
lea
jne
cmp
mov
push
mov
jecxz
cwtl
adc
mov
lock
inc
dec
in
push
add
cmp
cwtl
cmp
sar
lock
push
mov
adc
fdivrl
push
movsb
scas
xor
ja
or
xchg
push
push
fwait
mov
call
cwtl
mov
call
in
mov
or
mov
jp
pop
aam
sub
cmc
jne
push
sub
dec
cltd
push
gs
clc
sub
incb
rorb
std
cmp
push
and
mov
xchg
adc
or
push
xor
sub
push
std
or
dec
sub
inc
call
enter
push
jo
mov
loopne
daa
pop
loop
cmp
int3
and
cld
pop
out
xchg
pop
mov
stos
cld
push
rorb
lods
int3
movsb
ret
mov
push
aam
inc
cmpsl
sbb
cli
sub
imul
or
je
push
adc
dec
movsb
pop
ljmp
enter
sarl
jle
cmpsb
inc
or
add
push
mov
and
aam
pop
inc
std
in
test
test
test
mov
jmp
push
add
je
test
dec
inc
add
or
mov
mov
orl
iret
lds
mov
inc
int
pop
bound
insb
xchg
test
lock
xor
xchg
inc
in
in
call
pushl
inc
push
or
xor
pusha
gs
dec
add
sub
mov
and
repnz
daa
jmp
les
test
mov
popf
loop
push
incb
jp
shlb
dec
xor
or
js
adc
push
aaa
cmp
lcall
js
std
cmp
subl
insb
loopne
mov
mov
mov
imul
loopne
mov
pop
adc
idivb
adc
inc
and
aad
rclb
addr16
ljmp
popa
push
cld
cmp
push
jae
mov
xor
jge
in
nop
out
jg
test
lcall
inc
add
mov
shlb
adc
outsb
push
enter
leave
pop
add
shlb
adc
inc
aad
in
int3
int3
dec
and
push
push
out
inc
sub
pushf
shrl
aaa
adc
add
add
mov
div
push
and
adc
mov
pop
cmpsb
push
lcall
sbb
cli
subb
pop
adc
push
xor
push
orl
call
jle
xchg
adc
inc
shr
push
or
inc
adc
add
push
xor
mov
sub
add
mov
notl
cmp
pusha
add
setne
push
mov
cld
bnd
int3
mov
fbld
xor
push
mov
ljmp
add
sbb
and
ss
sub
cld
jne
and
sbbl
inc
ret
bound
fists
mov
je
cld
clc
dec
mov
mov
and
stos
jo
cmp
lods
faddl
cli
outsl
inc
test
mov
movsl
xchg
add
jecxz
pop
inc
imul
sub
fisubs
xor
push
mov
push
ljmp
sti
rcll
jg
ds
sar
pop
jo
push
push
cmp
xchg
out
pop
out
call
out
outsl
push
push
sub
decl
addb
call
inc
nop
outsb
sub
jae
std
mulb
xor
lret
pop
hlt
scas
or
stc
add
mov
inc
push
imul
clc
in
outsl
clc
mov
xlat
mov
mov
adc
lods
mov
and
incl
hlt
test
mov
pushf
pop
ss
push
mov
push
push
mov
jne
mov
mov
add
xchg
orb
fisubrs
add
cmp
lods
ss
mov
mov
hlt
jg
xchg
div
cld
xchg
mov
mov
mov
push
sub
outsl
mov
pop
dec
pop
jmp
clc
add
jb
adc
call
insb
push
or
std
xor
push
in
xor
jbe
push
clc
dec
or
out
data16
nop
pop
rorb
pop
push
push
inc
fistps
loope
andb
inc
mov
sbb
les
das
loope
adc
sbb
or
andl
clc
mov
iret
popa
ret
clc
xor
xchg
add
push
adc
out
pop
repnz
ficoml
inc
jno
shrl
cld
push
out
mov
push
shlb
xor
jmp
cmp
or
xchg
jg
inc
loopne
mov
test
add
dec
mov
jmp
mov
int3
adc
and
push
push
pop
dec
adc
pusha
adc
adc
pcmpeqw
lret
and
cli
fwait
sbb
inc
push
push
or
cld
cs
add
pushf
mov
sub
adc
lahf
push
pop
xchg
in
call
andb
adc
gs
and
adc
xchg
jmp
rorb
fidivrl
inc
cld
pop
push
sbb
mov
pop
sbb
add
or
fsubp
inc
pop
clc
cld
inc
loopne
into
test
ljmp
xor
nop
add
aam
or
push
sub
pop
test
push
loope
or
mov
lods
push
aam
in
dec
adc
mov
sub
mov
cmp
sub
pop
pop
imul
arpl
in
push
bound
leave
es
orl
sbbl
loop
js
xchg
or
push
push
mov
std
outsl
add
mov
sbbb
bound
xchg
shlb
scas
add
lods
dec
add
std
loop
aaa
aaa
pop
sbb
push
push
mov
cli
inc
scas
std
xchg
movsl
sub
ss
adc
xchg
pop
mov
clc
add
and
orb
mov
cs
nop
fdiv
enter
in
add
popf
or
data16
push
int3
mov
dec
mov
rcl
test
ret
pop
jecxz
push
xchg
pop
xor
mov
outsb
out
in
pop
incl
cld
adc
xchg
push
pop
inc
enter
or
roll
push
or
mov
mov
cmp
and
call
jbe
pop
loope
insl
sub
jo
test
icebp
lahf
dec
mov
lret
jmp
xor
xor
cmpsb
adc
push
jo
mov
ds
xor
lcall
movsl
jo
mov
add
adc
or
int
lods
fmuls
leave
sub
jle
sarl
sbb
jle
push
cmpsb
push
xor
cli
jbe
int3
fs
inc
mov
xchg
fsubr
add
inc
aam
mov
sub
xor
ja
jge
mov
lea
lret
cs
jmp
testl
ret
insb
sbb
lret
dec
adc
adc
stos
xor
push
sbb
nop
adc
enter
jne
mov
ret
jg
inc
and
add
xor
lods
push
test
or
inc
dec
mulb
clc
or
movsb
dec
sbb
xchg
add
into
mov
mov
sti
pop
mov
and
out
xor
dec
repz
dec
mov
jne
fwait
icebp
mov
push
mov
mov
cmp
test
scas
cmp
push
jmp
repnz
mov
lcall
insl
addl
rclb
mov
or
xor
add
rol
pop
movsl
mov
sub
sub
sub
testb
dec
nop
cmp
notl
bound
pushf
test
test
push
mov
clc
sbb
cmp
ljmp
pop
pop
adc
cmp
and
xor
pop
add
outsb
cmp
push
lods
inc
stos
rcr
js
in
movsl
mov
negl
test
mov
mov
mov
jge
inc
inc
loopne
dec
adc
jb
push
scas
xor
outsl
push
sub
mov
add
fs
gs
adc
pop
inc
mov
adc
push
push
cmpsl
mov
pop
es
jl
lahf
jle
xor
pushl
cmpl
mov
jbe
mov
push
lds
mov
adc
popf
and
xor
incl
call
or
lea
push
fwait
ds
jno
and
lock
std
mov
inc
or
push
leave
lar
jb
mov
movsl
out
popa
fwait
lea
add
clc
and
jp
repnz
cmp
mov
scas
addb
dec
xor
push
loop
jne
or
sbb
inc
push
mov
std
push
dec
push
adcb
or
cmp
and
mov
or
cmp
sar
xchg
adc
jns
xor
in
push
push
and
and
aaa
pop
lahf
add
push
rcrb
aaa
cmp
into
aaa
mov
daa
jmp
movsl
inc
xor
std
mov
or
cmpsb
jo
mov
adc
jb
mov
aas
xchg
xchg
test
dec
and
push
inc
sub
shll
stos
aad
jbe
push
or
push
loop
dec
mov
repz
lahf
jp
mov
xlat
or
call
add
cli
cmp
fcoml
push
aas
shrl
cmp
push
cs
push
dec
lock
and
mov
rcrb
adc
and
loopne
jmp
and
push
or
call
or
or
dec
data16
mov
incb
addl
and
jne
and
xor
inc
pop
or
jmp
push
mov
js
rolb
fadd
adc
xor
inc
ljmp
push
cwtl
mov
jno
adc
fs
addb
stos
ja
push
loope
fsubrp
push
add
xor
pop
jl
adc
mov
nop
test
rcll
incl
packsswb
js
mov
fsubr
mov
cld
lea
lods
mov
mov
dec
js
repnz
inc
lock
mov
mov
mov
sahf
add
add
notb
ret
cld
scas
mov
mov
sti
jbe
sbb
mov
push
xor
sbb
mov
ror
push
add
cmpl
add
mov
sub
add
push
outsl
jb
idiv
cmc
inc
or
xor
pop
shrl
jb
aas
mov
test
and
push
adc
stos
loop
push
adc
add
outsb
rorl
adc
insl
mov
icebp
sbb
jae
mov
push
or
fldcw
adc
adc
lock
call
pop
cld
stc
adc
push
cld
mov
pop
or
add
cmpsb
and
xor
shll
xor
lock
mov
shlb
fiadds
lock
ud0
cmp
cmp
mov
outsl
stos
aaa
stos
mov
push
sub
enter
cmc
jp
adc
sub
mov
xor
data16
mov
cmpl
ficompl
mov
lret
sahf
call
dec
mov
mov
popf
fsubrp
idivb
ficoml
pop
je
mov
cld
out
out
aaa
jl
jl
jbe
or
xor
lcall
adc
arpl
fimuls
cld
call
insb
cmp
and
push
idivl
mov
je
inc
orl
loopne
out
add
pusha
test
cmc
aaa
hlt
call
jae
dec
lods
dec
mov
sbb
shll
mov
ret
inc
push
xchg
mov
shrl
mov
jle
in
add
dec
or
xor
icebp
in
aas
rclb
in
mov
int3
jmp
les
jne
xor
cmc
push
ja
add
mov
je
fsub
sarb
rdmsr
popa
lahf
rcr
pushf
fmull
lock
mov
imul
jp
push
cmp
cmp
jne
add
mov
xor
xorb
inc
imul
loope
fdivl
ret
loopne
push
cmc
cmpl
sub
push
cs
cmp
popa
adc
add
push
aas
sbbb
xor
or
mov
pop
and
add
jg
xchg
sub
sbb
mov
sub
das
jg
vpsubsb
push
sbb
xor
mov
add
inc
sub
gs
push
sub
les
arpl
sub
imul
or
popa
aas
adc
adc
jp
pop
inc
lods
dec
or
mov
shll
push
add
ret
nop
rol
xor
sub
aaa
mov
lds
pop
push
push
xor
push
loopne
push
fdiv
inc
call
mov
lret
fdiv
incb
push
xchg
movsb
mov
add
or
pop
or
jg
fsubs
inc
cmp
decb
sbb
outsl
rcrl
sub
mov
loopne
mov
or
push
aam
mov
push
and
nop
inc
jo
repnz
sbb
xor
arpl
shl
cmp
fdivrs
lock
inc
lea
mov
jns
xor
cmp
jo
testl
js
insb
cmp
sbb
loopne
outsb
ret
nop
xor
sbb
out
pop
fs
add
test
push
jne
fbstp
call
stos
xor
mov
fiaddl
push
into
push
leave
loop
pop
mov
pop
mov
push
mov
std
push
aad
enter
mov
and
and
fucom
and
push
sub
or
scas
sbb
inc
aas
and
push
jo
jae
adc
mov
faddl
dec
push
cld
adc
out
fimuls
les
push
call
std
sub
inc
jb
push
lret
xor
jbe
add
inc
stos
outsl
add
dec
or
jecxz
dec
incb
add
jle
xor
and
inc
lds
mov
or
push
cmp
push
sub
or
mov
mov
lea
sub
sbb
lods
outsb
add
lock
ljmp
pusha
incb
or
test
cmp
add
test
movsb
inc
adc
adc
test
jmp
push
in
hlt
int3
jmp
pop
jp
cli
jbe
inc
adc
jmp
mov
mov
xorb
add
dec
shll
popa
pop
jle
sti
cmp
ds
fwait
outsl
fwait
mov
inc
xchg
mov
inc
lods
cmp
lods
cmpsb
fidivrl
clc
aam
mov
pop
adc
pop
sbb
add
cmp
mov
xorb
loopne
shlb
and
inc
mov
in
push
in
or
out
pushw
push
push
lcall
dec
and
xchg
or
adc
ss
push
push
adc
push
out
clc
and
add
fdivr
inc
sbb
leave
cmp
sarb
lcall
adc
aam
cld
aam
lods
inc
add
ja
lea
adc
es
adc
jb
cmpb
mov
enter
data16
dec
test
negb
mov
in
and
push
shrb
sbb
fwait
xchg
js
mov
push
hlt
call
andb
mov
cmp
adc
ljmp
dec
lock
lcall
shlb
cld
outsb
fsubs
dec
cld
add
adc
xchg
push
jmp
adc
fmulp
xchg
lcall
clc
fistl
fs
cmp
xchg
xchg
loopne
push
ficomps
addl
bound
movsb
vpxor
sarb
test
js
jle
pop
and
in
cs
sarl
push
mov
fs
int3
std
outsb
and
cli
rcrb
rcll
and
lods
outsb
mov
xor
and
xor
in
ror
inc
mov
mov
movb
and
lea
add
and
pop
mov
and
es
inc
dec
fadd
xlat
lret
push
lcall
cmp
inc
add
mov
stos
decl
dec
sub
dec
sbb
add
push
cmp
pop
mov
je
xchg
dec
mov
rcl
inc
sbb
stc
adc
and
mov
xor
push
mov
mov
js
test
in
pop
adc
test
sbbb
cli
das
mov
pop
add
int
add
sbb
js
pop
dec
int3
or
pusha
adc
rcrl
push
je
xchg
loope
dec
or
outsl
jge
jl
push
movsb
pop
nop
les
and
add
xor
decb
std
jl
adc
sbb
dec
xchg
mov
in
dec
xchg
cmpl
sti
and
mov
sbb
pop
add
sub
arpl
push
bound
insl
mov
repnz
inc
fidivs
pop
add
stos
xor
mov
adc
and
rclb
mov
mov
jg
mov
call
or
or
mov
or
jmp
push
orps
pop
lods
inc
and
les
addb
pop
cmp
adc
push
sbb
movsl
testb
arpl
mov
cmp
mov
out
test
inc
ror
shl
inc
add
ficoms
std
cmp
xor
mov
jo
cmp
hlt
dec
lcall
std
les
jbe
fs
movl
inc
xor
add
inc
push
xchg
add
sub
ja
shlb
rolb
les
mov
push
mov
adc
add
cmp
push
adc
mov
add
sbb
mov
fdivrl
in
test
mov
jnp
cmp
es
xor
in
imul
jbe
pusha
mov
lcall
push
stos
mov
in
jmp
test
cmp
adc
mov
pop
test
cwtl
cmp
push
rolb
and
int3
cmp
sarb
pop
fdivs
mov
test
je
mov
jg
mov
inc
das
xor
call
clc
paddb
loop
push
inc
fdivrs
push
sarl
call
xchg
xchg
push
jbe
out
add
xchg
imul
sub
into
jbe
push
daa
sahf
and
sub
xchg
jl
mov
inc
fimull
inc
adc
fwait
in
aas
cmp
popf
cmp
dec
xchg
add
mov
lods
jle
and
xor
cmp
les
pushf
int3
add
push
pop
aam
or
xor
scas
add
outsb
dec
jg
add
setae
lea
sub
aad
lock
pop
add
mov
jle
cmp
hlt
jg
or
shlb
in
imul
inc
test
ret
call
mov
hlt
ret
inc
jb
jo
pop
pop
push
inc
scas
and
lea
testb
fildll
pop
push
incl
xor
mov
push
xchg
dec
xor
xor
fstpt
aas
mov
add
push
mov
mov
inc
push
mov
push
jl
cmp
mov
or
int3
movsl
inc
shll
push
mov
push
pop
fdivr
adc
adc
sbb
add
mov
fcom
mov
mov
shll
std
cwtl
shrb
in
or
dec
or
adc
sahf
test
add
mov
adc
and
aam
cld
nop
xchg
or
mov
rcrl
adc
push
and
in
test
jnp
cmpsb
jo
inc
ret
sbb
add
xchg
test
out
mov
pushf
mov
add
and
cmp
jl
mov
cli
movsb
add
inc
mov
push
pop
rorl
pop
inc
push
push
dec
jg
cld
mov
in
push
add
mov
push
mov
rcrb
mov
aaa
out
mov
dec
mov
jbe
das
jbe
push
sarl
and
test
xor
invd
andb
aas
sbbb
lock
popa
jecxz
leave
adc
inc
js
faddl
shlb
negl
add
pop
sub
pop
inc
subl
inc
aad
pop
int
data16
mov
std
loope
pop
cmp
out
inc
rclb
fists
lret
jmp
pcmpgtw
fdivrl
adcb
addl
mov
dec
jge
or
jl
push
sarb
pop
outsb
adc
add
cmpsb
sbb
loopne
test
xor
lods
add
cli
das
mov
loop
jl
lcall
fs
pushw
shll
sbb
inc
out
cwtl
inc
outsb
ss
mov
push
pop
insb
mov
xchg
fdivrl
add
cwtl
xor
jne
mov
test
pusha
out
lods
push
loopne
ds
jmp
mov
je
xor
pop
push
xor
hlt
imul
cld
jg
dec
pop
test
pop
fsts
mov
fmuls
xor
push
enter
pop
cs
xchg
lock
test
std
xlat
inc
sbb
mov
pop
or
subb
and
dec
jne
cmp
not
jb
inc
cltd
inc
mov
addr16
push
test
xor
bound
mov
je
sbb
call
movsb
xchg
mov
mov
xor
xchg
mov
ljmp
or
aam
add
jnp
ja
fimuls
xchg
push
and
in
add
xchg
sub
inc
clc
xor
inc
add
test
push
adc
and
push
iret
add
adc
cvtpi2ps
push
outsb
cmp
inc
nop
addr16
add
mov
std
mov
cs
jge
faddp
test
inc
push
push
fs
pop
shrb
add
js
push
push
stos
sbb
fnsave
sbb
cmp
add
or
push
sti
pop
loope
gs
inc
fcomps
mov
mov
xor
push
sbb
jae
es
push
lock
mov
fstps
fildl
jp
cmp
and
push
stos
fstpl
sub
inc
icebp
push
ss
int3
sahf
dec
sbb
rclb
jne
inc
pop
push
xor
or
pop
pop
cmp
cwtl
loope
mov
mov
cwtl
jmp
fsubr
cmpsb
fimuls
fdivl
push
ljmp
andl
cli
incb
rolb
or
adc
test
pop
mov
push
incl
dec
maskmovq
testl
push
dec
jne
inc
or
cwtl
jle
add
incl
pop
jge
pop
int3
fisubs
scas
push
clc
pop
dec
mov
mov
add
xchg
push
push
add
lods
mov
mov
insl
or
aaa
scas
push
or
in
lock
lret
ds
and
mov
subb
cmp
lods
mov
sar
lock
push
call
adc
popa
mov
cltd
frstor
add
dec
mov
clc
lea
shlb
mov
xor
mov
hlt
sbb
es
lret
push
inc
cmp
pop
aad
les
lock
sub
inc
xor
or
xchg
movsl
push
or
inc
mov
js
lods
fs
inc
les
add
clc
sti
and
shlb
andb
movsl
out
sbb
fidivs
dec
lods
adc
ret
pop
mov
xchg
das
not
push
cmp
insl
mov
mov
scas
psubusw
sbb
push
push
fcompl
aas
sub
cmp
movsl
nopl
clc
push
or
repnz
mov
js
sub
sub
inc
lods
or
fisubl
into
jae
cs
insl
leave
inc
add
fdivs
adc
nop
or
pop
fs
roll
divb
ss
push
adc
pop
sbb
jl
jmp
shrb
icebp
daa
ret
cmpb
inc
dec
cli
jb
loope
push
aas
fdivs
dec
inc
ret
std
jle
lock
mov
jne
lock
sbb
stos
mov
adc
sub
jle
cmp
mov
incb
xor
xchg
mov
cmp
dec
out
xor
subb
outsb
or
test
inc
adc
fcmove
fcmovnbe
push
xchg
mull
cmpsl
adc
pop
stos
insb
je
enter
push
pushf
loope
pop
mov
jp
andb
fstp
ss
test
mov
lret
mov
icebp
mov
pop
inc
or
push
inc
cmp
mov
inc
or
mov
repz
outsl
mov
mov
and
jge
cli
or
icebp
imul
inc
cwtl
test
sub
adc
xor
and
jg
mov
in
adc
aam
clc
sub
test
add
rclb
mov
in
cld
psubd
fld
ljmpw
rol
test
jne
mov
icebp
sbbl
testl
test
xchg
xchg
xchg
rclb
shl
addl
cmp
stos
jb
dec
add
xor
into
pushf
decb
push
in
mov
les
je
shrb
xchg
jbe
mov
jl
mov
jge
xor
lcall
inc
push
loopne
fstps
mov
pop
mov
sbb
add
push
btrl
pop
std
mov
xor
adc
push
cmp
or
jae
cmp
fs
les
or
je
ja
pop
push
jns
rorl
adc
add
xor
sub
rclb
xorb
or
xchg
sbb
mov
cmc
test
mov
subl
mov
lea
mov
ljmp
pushf
adc
xor
and
inc
ljmp
insb
aam
stos
movsb
dec
sbb
mov
ja
stos
mov
ficompl
xchg
sbb
jae
xchg
mov
pusha
lods
mov
std
xchg
aam
lock
shrb
int3
cmp
xchg
sub
mov
inc
cmc
lret
xchg
ds
mov
push
adc
inc
cmp
adc
loopne
jmp
lock
push
sbb
add
jmp
jo
jl
jmp
add
add
pop
add
xchg
sbb
cmpsb
into
fisubs
add
and
push
or
test
fidivrs
push
xchg
ja
js
mov
lret
add
cmp
std
dec
add
mov
or
dec
push
pop
and
cld
pop
pop
pmuludq
cmc
xchg
adc
add
inc
lds
xor
sbb
repz
or
sub
inc
cmp
xor
xor
push
int
fidivl
lods
in
sub
mov
lret
and
imul
out
jne
dec
es
pop
jle
leave
jo
mov
xchg
jge
jp
test
jmp
inc
jmp
cs
test
push
dec
mov
loop
mov
int3
xor
push
or
fsubrs
std
incl
in
invd
into
xchg
stos
push
or
in
arpl
pop
add
adc
out
fs
and
test
dec
pop
vunpckhps
sahf
scas
inc
cmp
push
test
xchg
into
loop
divb
psubb
aad
mov
in
sub
in
pushf
jae
push
aaa
mov
clc
jge
pop
inc
lods
sbb
inc
jl
push
les
sbb
cmp
push
push
pop
lods
pop
adc
sbb
adc
addr16
fiadds
add
call
pop
loop
mov
lods
pushw
aas
and
mov
cmp
or
inc
xlat
loopne
jl
rolb
pushf
mov
insb
jle
ds
xchg
adc
sub
loope
cli
add
test
int
mov
inc
xor
pop
std
pop
push
cwtl
or
call
xchg
je
push
cmp
loopne
rolb
fiadds
xchg
shlb
fucomi
lock
xlat
jo
shlb
popa
fdivrl
fdiv
xor
and
in
mov
adc
aad
aas
push
jmp
sti
jmp
insl
addl
adc
aaa
ljmp
sar
xchg
in
cmc
jmp
addb
add
adc
insb
pop
insl
pushl
in
xor
jae
push
dec
std
xchg
mov
cmp
mov
lea
adc
dec
cld
bnd
push
inc
pushl
push
jmp
gs
ljmp
enter
into
rcrb
adc
sbbb
inc
test
inc
inc
test
or
jnp
ljmp
hlt
dec
push
adc
pop
xor
movb
push
dec
inc
inc
inc
leave
adc
test
xchg
xchg
dec
xchg
push
adc
push
adc
mov
cmpsb
or
sbb
outsl
into
in
mov
test
or
inc
ret
rclb
jmp
lret
add
jp
push
xchg
mov
sbb
mov
dec
or
cli
scas
mov
outsl
push
cld
fstpt
stos
mov
shlb
adc
movsl
sub
lcall
xor
jne
es
in
loopne
iret
lock
add
pop
negb
push
fs
incl
pop
mov
cmpsl
and
jbe
push
push
je
push
adc
incl
jb
sub
je
rol
ret
insl
mov
cmp
mov
inc
fcom
mov
add
push
arpl
or
je
adcb
pop
out
jo
decl
repz
daa
ret
lock
je
push
add
fisubrl
leave
jge
mov
push
addb
xchg
cmp
or
push
inc
call
dec
lods
fcmove
movsb
sub
cmpsl
stos
push
or
out
je
xor
inc
mov
rolb
cmp
mov
xor
cli
jb
mov
adcb
or
fidivl
mov
push
push
xor
pushfw
sahf
loopne
pop
push
out
clc
movsb
push
iret
xchg
jp
mov
push
rol
clc
jp
rolb
fdivs
push
loope
or
adc
cmp
loop
dec
in
loope
adc
popa
lock
ficoms
push
stos
mov
cmp
dec
adc
pop
fsubr
mov
sub
dec
sahf
sub
and
fs
int3
cmp
insb
sbb
push
push
sbb
mov
lcall
popa
dec
or
xchg
aam
hlt
loopne
xor
sbb
arpl
cli
mov
aas
mov
push
add
mov
xchg
mov
pop
pop
cld
push
push
fmul
or
rolb
adc
mov
shlb
mov
sbb
pusha
fldenv
sahf
data16
pop
dec
idivb
mov
ror
or
dec
gs
fidivl
add
jae
or
lcall
shlb
fsubrl
or
add
jmp
and
jp
int3
or
shlb
cmp
andb
add
and
inc
cmp
pop
or
loopne
inc
imul
test
pop
aam
mov
mov
push
mov
icebp
add
mov
dec
lcall
jl
dec
insl
inc
or
ret
pcmpeqd
test
js
push
fdivrp
mov
orb
mov
fwait
hlt
cmp
addl
fucom
inc
and
hlt
or
xor
or
into
movb
shlb
dec
push
pop
sbb
mov
mov
mov
jl
jo
inc
sahf
sub
negb
push
add
incb
cmpsb
cmc
lahf
mov
jg
dec
sti
mov
dec
jle
mov
adc
or
leave
mov
inc
arpl
jnp
pop
xchg
pop
sub
sti
pop
pop
push
sarb
mov
jl
sarl
ficomps
pop
mov
mov
cmp
es
mov
rolb
lret
movsb
nop
stos
cs
sbb
jp
lea
test
imul
add
pop
pop
subl
bound
cs
pop
xchg
mov
call
mov
test
and
mov
inc
rcrb
mov
in
inc
inc
fisubs
push
into
sub
fnstcw
adc
dec
mov
subb
sbbb
cmp
mov
call
sub
add
scas
cli
aaa
xor
loopne
lock
inc
jbe
push
add
pop
clc
jg
jne
push
inc
jge
add
adc
and
mov
cltd
ret
xchg
cmp
into
jne
icebp
negl
pop
clc
add
add
sbb
sahf
out
sub
push
fidivrl
lds
clc
les
lea
xchg
xlat
and
rol
jnp
dec
jecxz
ret
adc
adcb
add
and
cmpsl
outsl
and
push
je
repnz
mov
ljmp
rclb
out
and
fisttpll
mov
jbe
adc
das
test
pop
adc
xchg
outsb
add
shrl
xor
lock
testb
mov
gs
push
mov
add
add
and
jle
or
fadd
ret
outsl
call
aam
rcrb
sbb
enterw
dec
mov
push
inc
adc
push
fadd
and
sbb
nop
rolb
out
mov
addb
push
cmp
mov
idiv
sbb
push
xor
das
inc
outsb
xor
cmp
and
rcrb
imul
adc
ret
pop
push
pop
dec
push
fisubs
xor
lea
lea
pop
mov
and
add
insb
push
test
mov
ret
stos
push
and
cmp
xchg
jbe
bswap
aam
or
pop
daa
or
and
dec
dec
sti
adc
sbb
popf
fisttpl
cmpsb
push
sar
push
pop
les
rorb
les
jb
lea
push
rclb
sub
mov
int3
push
rclb
jmp
adc
or
pop
or
adc
je
or
inc
add
push
jle
push
add
lock
mov
sbb
in
push
mov
xchg
shrl
and
int3
shlb
aad
jl
fs
inc
rolb
int3
dec
decl
cmc
xor
mov
add
mov
vpmacssdqh
orps
test
test
xchg
cld
aas
mov
mov
sbb
adc
push
std
push
push
adcl
mov
dec
lods
xor
adc
sbb
int
movsb
cwtl
pop
push
fmuls
cld
jmp
or
adc
fdivr
dec
xchg
incb
hlt
adc
bound
fistps
inc
xchg
mov
repnz
dec
popf
lods
gs
mov
dec
add
outsl
and
lret
nop
jmp
add
mov
in
pop
or
lock
jnp
repnz
fsub
cmpsb
inc
fdivp
ljmp
dec
inc
sbb
sahf
mov
sbb
js
xchg
scas
mov
jnp
cli
sbb
fs
iret
imull
lret
xor
mov
adc
inc
in
xchg
pop
fidivrl
mov
pushf
imul
repz
add
insb
cmpsl
pop
in
pop
fmuls
xor
mov
out
add
mov
rolb
fcomi
inc
shlb
ret
jno
inc
imul
pop
rolb
mov
es
inc
adc
push
sbb
and
inc
dec
lea
loop
cli
add
jb
data16
cmp
jle
mov
popf
jmp
jno
push
cmpsb
inc
cmp
xchg
or
sub
ss
add
out
add
inc
sbb
xchg
int3
bound
sar
xor
mov
add
leave
les
jmp
xlat
or
pop
or
jge
inc
or
mov
outsl
mov
xor
sbb
loope
out
sar
cmpsb
mov
outsl
fcoms
push
sbb
jmp
pop
add
jmp
adc
sbb
mov
ljmp
jge
mov
aam
loopne
jle
adc
pop
push
add
mov
sarl
mov
or
inc
cli
adc
jmp
addl
and
cmp
add
sbb
xchg
je
lods
sub
sub
dec
ficomps
clc
cs
adc
mov
mov
pop
ret
outsb
sub
jns
pushf
loopne
cmp
and
loopne
jb
inc
inc
inc
repz
xchg
loop
xor
dec
stc
hlt
jbe
clc
push
sub
inc
mov
or
lock
jmp
cwtl
pop
push
adc
add
hlt
imul
or
ret
xor
mov
adc
shrb
ss
or
or
pop
push
mov
xor
mov
add
movsb
insb
test
adc
ljmp
int3
jmp
cmp
inc
push
cs
arpl
lahf
and
sub
adc
sub
pop
cmp
cmp
or
cld
cmpsl
fwait
mov
insb
add
sub
movsl
mov
jbe
add
jnp
sahf
xor
inc
inc
or
divl
or
pop
clc
xorl
or
jl
xor
movsb
es
mov
cld
jle
pop
aas
add
xor
push
jne
pop
gs
mov
addb
mov
and
mov
iret
adc
js
orb
mov
outsb
iret
mov
sahf
push
pop
rcrl
push
cmpsb
push
cmp
jo
mov
es
fisttpll
push
lods
cmp
add
xchg
mov
sub
cmp
jns
mov
fwait
in
push
pushf
stos
dec
cmp
ret
loop
xor
xor
mov
mov
popa
pop
fs
ret
jle,pn
hlt
pusha
push
pushaw
lcall
idivl
cmpsb
icebp
in
outsb
dec
adc
xchg
xor
push
xchg
and
push
fimuls
and
inc
and
mov
add
dec
pop
in
call
add
xor
mov
std
push
pop
xor
cmpsl
dec
hlt
nop
imul
add
lcall
inc
fs
in
call
aas
call
push
xchg
or
jo
pop
mov
call
cmp
lods
subl
add
test
loopne
fwait
int3
adc
shlb
pusha
xor
or
adc
vpsubusb
popf
push
pop
dec
jns
xchg
scas
lock
jecxz
sub
jge
xor
lcall
push
out
mov
inc
cmp
inc
add
add
into
add
or
pop
dec
out
cmp
clc
mov
rolb
fmuls
sbb
sub
rorb
cmp
pop
sbb
xor
in
inc
mov
lea
add
mov
je,pt
jbe
in
mov
test
in
mov
xor
dec
xor
enter
aaa
cmpsb
pop
and
mov
add
das
and
movsb
das
cwtl
adc
out
push
fsubrl
and
rcrb
mov
jo
js
pop
scas
inc
add
adc
mov
sub
jge
imul
xorl
pop
ss
mov
adc
mov
cwtl
or
push
or
pop
pop
xor
fs
push
dec
cmp
dec
aas
ds
push
insb
push
sahf
cmp
out
mov
cmp
nopl
addr16
out
inc
jmp
cmp
arpl
mov
dec
push
mov
xor
stc
insl
lock
dec
cld
mov
dec
add
data16
in
fcomip
call
mov
mov
fidivl
mov
shr
jns
add
cld
gs
cmc
pop
push
rolb
clc
jne
add
std
adc
shlb
xor
mov
pop
outsl
inc
arpl
popa
outsb
xchg
xor
pop
dec
enter
inc
outsb
mov
stos
push
idivl
incb
cwtl
xor
xor
mov
loopne
sbb
xchg
rcrb
add
enter
lahf
loop
push
stos
enter
dec
shll
mov
outsb
fwait
xchg
push
clc
outsb
test
mov
sti
inc
add
mov
js
fistps
cmp
push
jne
call
xor
jl
push
cld
push
mov
xlat
add
sbbl
pminub
jle
nop
add
fiaddl
ret
jle
rol
or
ret
es
daa
cmpsl
push
cltd
push
cmp
and
cmp
mul
sub
xchg
adc
add
push
xor
shlb
mov
mov
jne
in
lds
lret
push
int3
or
inc
icebp
sub
xchg
add
lcall
nop
and
and
inc
inc
cwtl
push
std
cld
mov
mov
adc
add
mov
xor
pushf
sbb
data16
dec
mov
pop
pop
adc
inc
inc
mov
add
sbb
and
jno
or
fldt
add
adc
test
adc
add
rorb
and
sub
adc
int3
mov
add
dec
pushl
mov
insb
lea
cmp
push
inc
dec
add
mov
push
loopne
dec
sbb
pop
ds
scas
xor
or
dec
inc
mov
scas
incl
outsb
pop
and
fbstp
cld
bound
ret
fadds
bswap
mov
add
ret
adc
adc
push
pop
ljmp
add
cmp
std
insb
pop
shlb
push
or
je
mov
and
movsb
stos
orl
call
lock
mov
adc
push
sbb
inc
loop
mov
adc
mov
and
jmp
std
xor
fdivl
mov
add
pop
mov
das
leave
mov
pop
lret
push
inc
or
je
push
outsb
aad
gs
mov
pushl
pop
add
fcoms
lds
cltd
es
pop
push
add
push
and
movsb
inc
or
rcrb
loop
outsb
cmp
add
ret
adc
mov
adc
out
mov
std
add
mov
les
xor
jecxz
xchg
xor
data16
inc
mov
dec
pop
das
xor
push
sarl
sbb
add
push
inc
insl
dec
fldt
test
movsb
sbb
and
pusha
pop
daa
xchg
push
loop
or
rcrb
insb
adc
popf
shlb
shlb
adc
add
fsubrs
fs
leave
mov
clc
in
sbb
loopne
movsl
add
jp
out
data16
addr16
add
adcl
add
push
or
pop
call
cmp
ljmp
jle
scas
pop
push
lcall
xchg
adc
push
mov
fld
mov
shrl
mov
and
test
add
int3
cmc
aad
or
mov
cvtpi2ps
out
pop
and
mov
pop
and
push
cld
mov
aaa
decb
mov
loopne
popl
mov
and
into
out
push
cli
pop
clc
add
std
scas
rolb
dec
out
call
cmp
sbb
dec
imul
inc
mov
xor
inc
jg
or
into
mov
rolb
stos
push
jle
test
je
pop
test
movsl
mov
fiadds
int3
push
shlb
lret
test
add
jl
jb
push
mov
jo
aaa
sarl
mov
test
push
jg
and
dec
pop
shlb
ret
test
xorb
aas
pusha
add
shrb
movsl
mov
cmp
and
je
lock
mov
and
cltd
mov
adc
xchg
popf
std
cmp
mov
push
inc
jmp
mov
mov
jl
jl
enter
fsubrl
push
jo
sub
ret
inc
adc
cld
xchg
jbe
push
jae
cmp
jmp
sub
scas
adc
js
xor
sbbl
in
fisubs
imul
dec
push
push
push
ret
jo
add
mov
rolb
ss
rcrl
sub
inc
mov
and
add
pop
sar
mov
mov
push
gs
jl
fisubl
pushf
mov
aaa
fimuls
cmp
orb
adc
into
and
jg
mov
mov
fdivs
pushf
stos
lods
and
cs
mov
dec
push
pusha
cmp
clc
popf
add
subl
mov
lahf
int3
add
inc
inc
xor
adcl
jg
add
add
xor
sbb
pop
lock
xchg
dec
sbb
mov
bound
dec
inc
pop
push
les
cmp
xchg
and
call
inc
inc
test
add
aam
inc
push
bound
add
jb
adc
lea
rolb
mov
push
push
inc
sub
sub
test
scas
pushf
jecxz
shrl
mov
jo
aad
aas
test
aaa
and
mov
rolb
out
or
inc
sahf
add
sbb
ret
xor
mov
add
loopne
test
in
mov
call
into
mov
mov
xor
jl
icebp
or
mov
hlt
jg
test
adc
mov
jne
insb
pop
rclb
add
mov
lock
push
and
repz
int3
aam
ja
mov
jne
lea
jle
js
push
orl
pushf
jb
push
adcl
jmp
fdivl
and
jg
out
and
inc
ret
mov
sti
ljmp
lock
mov
jne
and
stos
lods
xor
jb
add
pop
dec
sbbb
adcb
imul
loopne
sub
push
cs
xchg
adcl
pop
fisttpl
je
or
fdivl
push
sbb
jbe
sar
xor
lea
mov
adc
ret
rcrb
outsl
sti
fisubl
and
pop
adc
add
dec
add
adc
inc
clc
inc
mov
je
std
mov
lcall
or
nop
les
add
int3
xchg
mov
push
mov
push
sahf
pop
mov
out
mov
jl
test
pop
and
or
hlt
inc
out
push
movsb
jmp
sub
jle
outsl
xor
add
pushl
adc
in
or
lock
pop
pcmpgtw
hlt
inc
push
or
jle
mov
mov
or
adc
cwtl
xor
adc
sbb
push
shrb
pop
sbbb
fisttpll
call
fsubp
test
xchg
lock
sbb
push
xchg
push
fsub
mov
mov
fiaddl
inc
mov
lods
xlat
lahf
test
movhlps
jb
mov
add
cmpsb
add
call
call
dec
add
inc
or
add
les
jne
pusha
sbb
rorl
in
cmp
cmp
fdiv
pop
test
mov
dec
pop
or
mov
pop
in
dec
sub
mov
subb
or
mov
dec
test
pop
mov
jg
loopne
dec
adc
xchg
add
ret
jle
rorl
clc
sarb
sarb
test
adc
insl
leave
dec
in
adc
daa
jbe
push
fs
sarb
call
xchg
insb
add
jecxz
cmp
addl
sbb
push
nop
mov
jb
inc
fidivl
push
aam
fists
stos
outsl
add
movsl
cmp
mov
sti
pop
rorb
rclb
or
rcll
cmp
lods
mov
mov
rolb
or
xchg
push
jb
dec
test
sbb
inc
les
stos
test
and
adc
dec
or
bound
xor
adc
sbbb
add
xor
sbb
sub
cmp
adcl
sub
shlb
mov
push
minps
enter
cmpsb
mov
push
pop
add
xor
mov
int3
mov
jle
push
or
inc
mov
mov
adc
adc
add
je
or
dec
out
sub
sarb
or
lock
dec
mov
sub
xchg
mov
pop
inc
mov
frstor
dec
test
push
aas
push
xorl
xchg
mov
fcoml
lcall
pop
push
mov
divb
and
adc
inc
das
je
pop
inc
jmp
ja
mov
mov
outsl
outsb
subb
insl
out
decb
imulb
movsl
push
lock
sbb
and
xor
fiadds
push
mov
mov
mov
jo
cltd
in
push
push
int
addb
push
loop
xchg
dec
xchg
decl
mov
notl
and
cmpb
xor
pop
call
push
sub
and
xor
push
push
pop
cmp
pop
or
cld
hlt
sahf
les
push
lea
mov
mov
fdiv
icebp
daa
inc
cltd
and
push
xlat
movsb
test
fistpl
cld
sbb
inc
cmp
rol
mov
push
add
push
sbb
faddp
inc
mov
sbb
iret
push
cld
push
aaa
shll
aam
xor
inc
add
jle
cmp
cmp
or
in
int3
mov
mov
mov
insl
cmp
or
test
cmp
ljmp
fistpll
xchg
std
int3
lret
mov
push
xor
mov
icebp
sub
sar
adc
mov
pushf
or
xor
add
pop
push
clc
add
or
jmp
mov
xor
add
or
mov
push
jb
rolb
inc
xchg
push
add
jbe
clc
lods
mov
jae
rcll
cmp
enter
incl
lds
adc
les
inc
add
jecxz
les
insl
mov
dec
adc
pushw
imul
loop
loop
aam
lods
outsb
jb
sub
lret
mov
inc
cld
orb
call
movsb
mov
pop
or
add
dec
add
push
jmp
outsb
and
es
jl
cld
loope
or
cs
jne
cmp
cli
add
or
pusha
mov
ds
add
sbb
or
lret
fldt
out
push
hlt
stc
mov
and
je
dec
add
rcrb
pop
fs
or
mov
add
cmc
pop
lock
or
call
pusha
test
push
sarl
mov
stos
aam
add
arpl
cld
sbb
adc
add
call
js
lcall
xor
inc
add
sti
jbe
call
sbb
jbe
rcrb
js
inc
jge
sub
cmp
adc
jp
jecxz
push
mov
lcall
mov
mov
movsl
inc
aam
hlt
mov
add
cli
push
orl
pop
cmp
incl
or
xor
mov
push
mov
stc
inc
leave
int
cmp
clc
xor
mov
or
adc
mov
mov
inc
inc
add
cs
lods
ret
fcomps
int3
repnz
std
mov
jl
push
pop
add
dec
test
or
scas
or
mov
decl
cmp
adc
sub
imul
call
push
cld
jns
shrl
or
movsb
ja
rorb
add
cli
push
xor
inc
push
test
mov
call
add
ret
cmpsb
gs
repnz
leave
test
and
outsb
or
shlb
lods
inc
xchg
popf
inc
rcrl
jge
inc
mov
adc
sub
lea
push
and
push
push
sbb
jmp
jge
add
mov
jbe
dec
insl
lcall
jecxz
aam
jmp
inc
daa
xor
popf
int
std
dec
jo
cmp
loopne
loopne
insb
mov
adc
jnp
push
bound
add
fistl
push
pop
dec
cld
mov
or
push
push
loopne
push
mov
or
add
lea
pop
outsl
jl
fmulp
ficoml
mov
sbb
xchg
sbb
jo
call
xor
jbe
in
mov
push
inc
inc
lock
sub
test
rclb
mov
or
adc
mov
sub
hlt
ret
mov
sub
movsb
mov
mov
jb
stos
movsl
xor
sbb
or
adc
loope
into
lcall
test
ret
jl
cmp
mov
add
mov
dec
dec
popa
or
fcoms
adc
xor
push
mov
and
adc
fwait
ret
pop
or
cmc
push
add
push
jl
subl
push
inc
hlt
test
cmp
or
js
cmc
icebp
inc
lods
mov
lret
sbb
ss
jne
inc
sbb
repnz
dec
add
sub
push
xor
loop
jo
sub
inc
mov
xor
xchg
les
call
cmpsb
mov
mov
pop
dec
inc
fs
js
les
sbb
clc
imulb
movl
add
push
jl
test
pop
xor
adc
gs
fmull
xchg
adcb
out
add
inc
mov
fmull
hlt
xor
adc
enter
add
mov
xor
add
bound
push
jecxz
sbb
inc
xor
dec
cmpsl
mov
push
hlt
fimull
mov
fucomip
sbbb
mov
ror
loop
rcll
push
fiaddl
push
fs
into
sbbb
xchg
pusha
push
push
xor
or
pop
loopne
out
add
loope
cmp
bound
inc
push
insb
mov
mov
push
mov
add
and
outsb
push
xchg
push
and
cltd
adc
es
sbb
xor
pop
xor
sub
bound
inc
dec
sbb
in
int3
out
lock
aad
mov
call
push
xor
cli
cwtl
stos
inc
adc
add
mov
inc
testb
call
loopne
pop
data16
jne
pop
adc
pop
jbe
mov
xor
data16
pop
dec
out
add
inc
jmp
push
dec
leave
pop
cld
ljmp
xor
adc
mov
pop
mov
call
pusha
jnp
addb
lcall
xchg
mov
das
or
sub
ss
out
xchg
or
imul
fiadds
inc
sbb
mov
test
shl
mov
rolb
test
outsl
and
rorb
lea
sbb
dec
pusha
mov
addb
pop
roll
aaa
adc
loop
jmp
popa
ret
popa
insl
pop
jecxz
js
jb
inc
dec
ja
jle
add
add
xor
pop
inc
loop
dec
fidivl
lods
in
jecxz
mov
or
xchg
add
and
pop
push
loopne
adc
push
dec
bound
mov
push
mov
insl
cmpsl
test
mov
inc
rolb
data16
hlt
testl
adc
sub
repnz
es
data16
aas
cli
pop
rorl
lock
mov
in
mov
loopne
adc
mov
pop
ret
inc
gs
push
ljmp
ret
sub
ret
mov
xor
mov
push
test
or
push
test
ret
loope
loop
or
add
sub
js,pt
xchg
dec
mov
leave
jo
dec
bound
fdivrs
push
push
jnp
or
or
or
xchg
push
add
loop
mulb
int3
call
out
ss
imulb
push
mov
js
test
mov
mov
rclb
mov
adc
inc
dec
jge
test
data16
add
lcall
xor
xchg
xor
test
into
xor
std
sbb
adc
shrb
xchg
mov
int3
inc
and
mov
mov
dec
outsb
bound
inc
cmp
inc
imul
sbbl
pop
nop
sti
jo
push
test
adc
aas
clc
sbb
lea
shl
jmp
cwtl
ss
push
mov
outsb
mov
call
jns
add
punpckldq
out
dec
push
inc
cltd
inc
xchg
jge
mov
call
sbb
sbb
fcmovb
paddd
mov
push
cmpsl
pusha
int3
outsb
hlt
mov
mov
arpl
fs
outsl
ret
jmp
inc
pop
aas
int
outsb
pop
inc
icebp
pushf
dec
adc
inc
je
inc
pop
movsl
mov
ret
mov
push
stos
inc
jns
test
addr16
cmp
inc
mov
je
inc
push
mov
push
inc
imul
lcall
pop
fs
in
push
fsubl
icebp
scas
stos
mov
sbb
pop
jne
push
push
popa
rolb
jl
shll
rcrb
movsb
aaa
or
imul
add
cwtl
push
fdivr
and
enter
cmp
dec
cs
bound
out
fistpl
lcall
je
cmp
cs
dec
add
xor
push
add
test
xor
xor
xchg
pop
inc
pop
lcall
mov
mov
xor
jne
insl
mov
mov
or
add
adc
push
mov
add
cltd
cli
inc
std
stc
fimull
cmc
inc
adc
push
lcall
push
fsubrs
add
push
arpl
mov
push
push
mov
rorb
jo
bound
ljmp
in
icebp
push
pop
push
mov
push
inc
lods
inc
loop
fnop
pop
lock
mov
jg
aas
fcmovu
in
jge
repnz
mov
test
call
sub
xor
orb
pop
test
loope
jmp
rorb
dec
add
lret
test
in
jo
into
cmp
cmp
xchg
idivb
test
push
es
add
out
or
ret
mov
int
push
ds
mov
xor
sub
data16
cmp
hlt
push
adc
hlt
mov
jp
and
lcall
xchg
ljmp
xchg
in
rorb
clc
push
sbb
adc
push
jecxz
xchg
call
sbb
sbb
xor
inc
inc
je
cmp
fs
inc
xchg
push
movhps
mov
lock
or
push
dec
in
push
icebp
inc
adc
clc
or
mov
rcl
xor
mov
jp
call
loopne
lea
rclb
sbb
lea
jnp
pop
popa
pop
mov
sbb
test
les
mov
pusha
lock
repnz
sbb
enter
shl
aaa
in
xorl
mov
in
push
lret
dec
cmpsb
push
addb
popa
ret
int
lcall
or
jo
jge
mov
push
mov
xchg
loope
mov
out
out
and
add
xchg
inc
push
push
mov
cmp
repz
in
lea
roll
call
mov
sahf
dec
movsb
mov
mov
scas
lea
loopne
fstpl
push
jge
xchg
lret
sub
sarb
lret
call
into
xor
gs
out
adc
mov
inc
mov
push
or
loopne
dec
pop
add
cmp
or
icebp
fwait
sub
jl
testb
clc
mov
xor
pop
pop
movsl
enter
adc
mov
movsb
push
lds
or
andb
sub
scas
rolb
mov
outsb
xchg
cmp
out
insl
mov
xchg
sbb
adc
je
dec
cmc
mov
add
pushf
dec
les
jne
loope
mov
xor
jle
add
mov
mov
repnz
mov
call
sub
xor
dec
jno
push
adc
or
push
cli
push
sti
sub
add
fs
ret
push
or
mov
call
add
popa
dec
clc
scas
mov
in
lahf
xchg
imul
jb
xor
fdivs
mov
push
pop
flds
xor
pushf
in
in
ss
les
and
xor
flds
push
adc
adc
inc
in
pop
and
lods
push
xlat
dec
in
push
and
cwtl
lcall
lods
push
rclb
inc
loop
mov
loopne
or
xchg
sbb
mov
dec
mov
inc
dec
insb
push
call
add
rolb
stos
or
fcoml
pop
hlt
scas
cmp
sahf
dec
push
cld
arpl
inc
xchg
je
pop
push
inc
xchg
nop
jp
pop
enter
fs
cmp
push
and
inc
inc
adc
aad
pop
sub
and
xor
inc
out
dec
jbe
shll
bound
sar
sub
push
shll
push
int3
sub
pop
es
pusha
mov
popa
and
ljmp
push
imul
add
mov
push
mov
test
movzbl
push
daa
je
loopne
iret
cmp
fadd
sbb
and
insl
adc
and
shll
cli
out
sub
add
dec
cwtl
rclb
adc
mov
push
xchg
mov
arpl
insl
add
add
fsubrl
sbb
sub
sub
pushf
sub
popa
jo
lds
or
push
dec
or
ljmp
add
ficoms
xor
jb
add
outsl
mov
incb
out
mov
pop
pop
outsb
jmp
rol
jae
sbb
mov
mov
pushf
inc
decl
or
inc
jge
pop
push
push
in
outsb
or
rorb
shlb
adc
sbb
movsb
and
pusha
jge
je
add
iret
add
dec
or
in
sbb
sub
icebp
jmp
push
xchg
dec
inc
mov
inc
cld
std
sub
push
pop
sub
lcall
adc
and
xchg
cmp
adc
gs
add
push
cli
ljmp
repnz
xor
clc
daa
cld
pop
cltd
cli
add
fmuls
adc
popf
call
sbb
xor
and
add
pop
jno
lods
je
cmp
shlb
add
test
lcall
loope
and
data16
mov
push
push
xchg
jno
pop
push
mov
cmp
inc
mov
mov
js
in
cvttps2pi
popa
shlb
test
add
out
int3
mov
jmp
scas
dec
or
cmp
icebp
je
in
inc
outsb
adc
or
sahf
popa
cli
pop
add
cmpb
sbb
push
add
jo
aaa
fstps
ret
cmp
cld
pop
or
push
inc
lock
decl
jle
ret
add
out
push
dec
test
inc
jmp
mov
mov
cmp
mov
lods
and
popf
xor
mov
sbb
inc
jecxz
lock
adc
pushf
das
push
jle
jno
cmpsb
inc
mov
pop
test
jg
cmc
or
std
test
dec
push
jl
test
pop
notb
add
std
imul
mov
or
inc
mov
pop
add
pop
lock
cmp
insb
mov
add
add
and
adc
add
loopne
inc
jo
divl
outsb
mov
dec
push
in
xchg
pusha
cli
mov
pushw
sti
mov
jo
cli
movaps
xchg
mov
push
or
inc
in
push
inc
lea
add
dec
push
cmp
push
rolb
xchg
fcmovbe
lcall
jl
mov
mov
loopne
es
jns
inc
test
data16
mov
push
call
clc
sbb
leave
je
add
std
jecxz
or
or
mov
ja
popa
cmp
loopne
cmp
xor
insl
jp
mov
add
sbb
dec
aas
or
call
push
jmp
xchg
pop
push
dec
xor
outsb
sub
mov
movsb
je
mov
inc
cwtl
push
and
rol
jne
leave
sbb
jne
xor
xor
and
mov
arpl
je
pop
push
call
mov
adc
add
test
pop
xchg
push
aam
imul
out
mov
lea
xor
outsl
adcb
xor
lods
rorl
cli
andl
pop
push
lret
xchg
add
aam
lahf
pop
ret
push
fldl
cs
bound
sub
jg
or
xor
rorb
movsb
push
out
mov
test
addb
aaa
test
sbb
and
popf
adc
data16
push
mov
ss
xor
cmc
or
push
mov
inc
adc
popf
pop
les
add
add
std
xchg
pusha
inc
cwtl
and
loopne
fadds
sbb
jo
lret
mov
or
push
cmpb
dec
into
nop
sahf
inc
push
adc
mov
scas
xor
mov
xor
cmp
inc
fnstsw
pop
fldt
push
mov
add
mov
ss
dec
add
xchg
gs
inc
fistps
fisttpl
dec
icebp
mov
std
in
call
or
pop
call
lock
dec
or
adc
jge
ret
insl
mov
and
cmp
xor
sahf
js
cld
lea
push
call
inc
pushf
add
add
and
or
dec
and
xchg
mov
cmp
adc
dec
add
mov
lds
mov
movsb
xchg
aas
sbb
nop
out
call
cmc
notb
ljmp
lock
bound
lock
dec
push
cmp
lods
outsl
imul
push
iret
sarl
ljmp
mov
repz
cmp
jbe
adc
ret
sbb
setge
jnp
movsl
mov
add
or
in
out
jb
mov
imul
xor
mov
mov
push
mov
aaa
pusha
inc
nop
pushf
jle
push
loope
inc
test
rorb
mov
mov
arpl
mov
leave
jecxz
jo
mov
lret
movl
add
sub
push
faddl
lea
rcrl
faddl
jno
mov
or
mulb
cmp
cs
out
add
inc
cmc
int
enter
icebp
and
arpl
jle
adc
push
lret
inc
pop
leave
add
out
and
mov
or
test
inc
insl
xor
mov
sti
xor
in
add
adc
dec
cld
mov
subl
or
loope
ret
test
mov
js
cld
out
shl
inc
inc
jmp
adc
mov
push
push
ret
fbld
mov
add
lea
cltd
leave
and
fs
and
das
decb
mov
cli
push
mov
ja
ficoms
sbb
bound
sub
mov
inc
add
add
pop
mov
add
lcall
dec
and
cmpsb
xor
popa
mov
scas
mov
rcr
push
fildl
and
pop
push
fistl
xchg
push
mov
lods
jo
shll
jb
aas
mov
test
adc
scas
je
mov
fidivrl
mov
lods
or
lea
add
rorb
fs
rcl
inc
push
xor
inc
rolb
ss
cwtl
jge
add
adc
dec
xchg
lcall
cmpsb
cmp
push
dec
les
stc
lods
scas
mov
les
loope
inc
mov
ds
roll
fiadds
loope
ds
xor
jmp
or
loop
lea
dec
xchg
repnz
fs
bound
es
and
cmpsl
mov
mov
fcmove
mov
mov
clc
sub
cmp
pop
and
insb
or
decb
loope
in
dec
shl
gs
push
xor
inc
adc
hlt
inc
mov
ja
imul
movl
ds
mov
fs
inc
mov
dec
ljmp
or
mov
sub
cmp
push
add
gs
add
and
int
push
and
xchg
adc
push
push
pusha
bound
loopne
pop
aam
mov
add
mov
jb
xchg
imul
adc
in
xor
mov
mov
movl
ret
sahf
mov
mov
dec
in
cmp
jnp
cld
lock
xorl
push
fidivrs
and
jbe,pn
cmp
fisttps
ret
and
xor
popl
pusha
push
add
push
test
inc
sbb
fsubr
xor
push
adc
mov
dec
xchg
adc
orl
mov
xor
cld
jmp
ss
popa
mov
adc
mov
add
cs
or
shll
inc
lods
inc
rolb
push
xor
mov
sar
iret
jl
lock
jbe
jmp
imul
rolb
mov
jb
jae
cmpsl
nop
inc
mov
outsl
je
pop
add
xchg
cld
mov
push
adc
sbbl
test
mov
outsb
lock
mov
push
inc
sti
mov
add
pop
mov
dec
push
sub
aad
mov
dec
add
leave
pop
inc
jge
scas
or
fwait
sar
iret
fsubl
pop
je
xlat
aam
add
jl
sti
inc
fdivrs
inc
xor
push
xchg
seta
or
dec
in
rcr
dec
imul
pop
cmp
push
xor
push
loopne
test
sbb
enter
fbld
sahf
mov
cmp
bound
call
and
jb
dec
popa
add
mov
popf
notb
dec
push
in
mov
xor
outsl
push
or
dec
ss
test
ss
mov
orb
push
fs
mov
cmpsl
sub
and
and
jne
mov
fs
and
je
push
iret
xlat
int3
cli
test
inc
xor
cwtl
popa
add
lea
push
add
inc
jo
mov
data16
add
fstpt
out
sbb
jmp
xor
mov
pop
adc
sub
or
and
cmp
mov
xor
ss
aas
pop
mov
cld
mov
adc
mov
cld
inc
and
add
pusha
stc
std
xchg
divb
aam
mov
pushf
pop
xor
add
adc
test
pop
add
add
mov
mov
js
mov
push
jne
xor
cmp
mov
adc
push
icebp
jg
fadds
dec
insl
lock
std
testl
push
hlt
sub
inc
or
cmp
movsb
call
outsb
mov
xor
js
add
add
xor
mov
into
push
enter
orb
and
xor
fcompl
loopne
add
xlat
inc
pop
pop
int3
or
mov
mov
hlt
mov
stos
je
stos
rcr
notb
dec
lahf
xor
adc
push
rcrl
or
dec
push
mov
fadds
cmp
rcll
push
jnp
xor
stos
or
pop
shrb
out
fwait
ljmp
out
andb
adc
ror
mov
or
int3
rcr
push
mov
sub
mov
sub
sub
test
data16
pop
ret
add
hlt
pushl
mov
aaa
lock
mov
ja
add
repnz
test
in
sbb
cmp
cmpsb
mov
push
sbb
mov
orl
mov
fdivrl
pop
dec
clc
pop
movb
addb
lods
aaa
inc
add
pop
leave
dec
inc
xor
cmpl
cld
xorl
cmp
sbb
jecxz
xchg
dec
pop
enter
rcl
and
inc
mov
add
or
aam
mov
imul
out
jb
pop
cld
test
adc
sar
out
imul
leave
mov
or
stos
or
mov
sub
inc
adc
cld
push
xor
adc
add
lcall
jle
lods
leave
push
inc
cwtl
dec
test
jne
add
mov
xor
and
mov
add
xor
pushaw
mov
sbb
cmp
mov
pop
adc
fisttpl
lret
add
push
pop
inc
fs
mov
xchg
incb
imul
add
mov
add
icebp
data16
gs
sub
or
and
and
adc
lods
lods
mov
push
xor
arpl
or
cmp
jae
jbe
lock
icebp
lcall
xor
sbb
mov
inc
mov
in
xor
mov
or
movsb
imul
ror
xchg
or
mov
jmp
cmp
mov
jmp
data16
and
sahf
pop
out
xor
ret
push
stos
and
add
push
pop
lock
test
jbe
xchg
inc
adc
cmp
movsb
cmpsb
cli
dec
in
add
jecxz
dec
or
test
xor
outsb
xor
push
mov
je
adc
cli
mov
cmp
ds
inc
add
pop
lock
inc
xor
mov
push
or
rolb
and
dec
sbb
aaa
cs
sub
jg
fisubs
decl
sub
pusha
fsubrl
imul
mov
aad
test
gs
les
mov
adc
cmpb
mov
push
jae
push
loopne
rclb
inc
adcb
scas
test
pusha
ss
gs
repz
inc
andb
and
push
stos
and
inc
push
add
dec
cld
rcrl
loopne
or
les
sub
add
movsl
testb
into
add
add
sub
pminsw
int3
push
test
and
and
test
push
les
push
mov
mov
aaa
sbb
es
lods
sub
popa
and
dec
gs
jl
daa
push
inc
jl
mov
dec
mull
je
sarb
cmpl
pusha
das
lock
and
cltd
mov
icebp
mov
call
dec
xchg
mov
lcall
call
mov
inc
xorl
imul
aaa
aas
adcl
xchg
and
popa
dec
dec
jle
pop
dec
pop
sub
jne
xor
mov
xor
aaa
mov
imul
push
sbb
adc
and
xchg
div
out
add
test
and
dec
std
xor
inc
add
sbb
sbb
inc
and
inc
test
jb
ret
cmpsb
push
add
adc
cs
lock
mov
push
cmp
jae
and
sub
clc
iret
push
mov
jbe
add
xchg
mov
mov
push
add
subb
adc
loope
mov
loopne
enter
xchg
test
stos
hlt
daa
adc
call
adc
mov
cmp
mov
or
addr16
hlt
xchg
call
pop
idivb
jbe
sub
test
ret
js
jb
sbb
mov
movsb
sub
bound
adc
add
stos
inc
mov
hlt
and
nop
mov
lods
push
xchg
xlat
pushl
movsb
sbb
push
in
fldcw
mov
test
les
loope
pop
pop
aam
mov
insb
mov
addl
push
inc
andb
pop
or
repnz
clc
jge
dec
xchg
pop
or
adc
std
pop
lods
jae
data16
add
xchg
shrb
sub
jbe
push
inc
add
ret
xor
dec
push
test
cmpsb
inc
lret
fldt
dec
xchg
push
jl
jne
std
mov
dec
adc
push
shrb
prefetch
lock
push
push
int3
movsb
and
pop
mov
mov
or
xchg
in
cmp
enter
and
cld
xor
add
loopne
jmp
dec
jle
test
leave
lea
jg
adc
in
je
sub
hlt
mov
rclb
xchg
fmul
pusha
test
mov
std
inc
xchg
std
mov
and
xor
movl
lds
rorb
add
mov
xor
xor
inc
mov
cmp
cmpb
push
push
inc
cmp
pop
rcrl
nop
fsubl
adc
mov
push
out
adc
cld
in
jmp
or
xchg
mov
sub
andl
mov
push
daa
or
movb
faddp
mov
cmp
ljmp
push
sub
xchg
gs
inc
fisubrl
mov
xor
fstpt
add
test
add
loop
add
insb
inc
mov
aaa
jl
fcompl
call
or
and
xor
mov
xor
sbb
push
adc
mov
sbb
inc
xchg
stc
pop
in
xor
add
mov
fisubs
les
call
subl
mov
nop
cmpsb
hlt
add
movsl
cld
scas
into
mov
dec
aam
inc
push
fistl
add
cmp
xchg
ja
xchg
les
cmp
les
aaa
call
xor
sarb
inc
cld
test
nop
fdivrl
jo
outsl
push
push
call
out
jmp
and
sub
inc
fdivrs
lock
inc
cmpsb
push
adc
xor
clc
mov
push
inc
sti
int3
fbld
test
add
rolb
fldl
aaa
mov
inc
adc
xor
pushf
or
insl
addb
cmp
inc
testb
andl
aaa
mov
xchg
sbb
push
ret
push
or
mov
lea
mov
int3
les
dec
or
dec
inc
test
xchg
cld
dec
add
push
cld
aam
and
in
addl
jecxz
mov
enter
inc
pushl
push
xchg
jmp
add
sub
push
iret
push
mov
test
test
or
xchg
pop
mov
cmp
push
push
scas
loop
push
orb
xor
xlat
aaa
sub
ljmp
dec
aaa
adc
or
dec
jne
dec
or
push
shlb
outsl
jmp
push
adc
repnz
sub
mov
push
cltd
test
js
push
or
fistpl
pop
add
lret
insb
repnz
inc
mov
clc
pop
adcb
insb
mulb
loope
es
push
out
push
sbb
xor
dec
add
psllw
and
push
inc
adc
out
clc
mov
aas
xchg
cli
int
cmp
adc
dec
jb
inc
xor
loopne
sub
add
xor
lock
xchg
jb
xchg
les
jo
lock
sub
ror
call
or
dec
pushf
mov
lret
addl
inc
repnz
pop
stos
outsl
lods
or
inc
sarl
push
sub
add
ret
ret
das
push
data16
movsb
push
aad
cmp
push
add
inc
pop
sub
sub
mov
xor
jg
inc
push
mov
mov
or
push
rcrl
sbb
mov
sbb
adc
addl
mov
xlat
add
lahf
inc
outsb
add
cltd
rolb
scas
stc
push
xor
pop
aas
jo
cli
stos
adc
mov
pushf
push
and
mov
pop
mov
add
js
mov
lock
mov
dec
int3
ret
sub
fs
cld
shlb
jp
js
cwtl
sbb
or
mov
and
pop
add
mov
or
cli
cmp
rclb
sbb
sbb
add
adc
stos
testl
popf
pop
cmpl
std
bound
ds
push
add
fnstsw
mov
jne
subl
mov
adc
or
lea
jmp
pop
out
call
cmp
cmp
jb
cld
jl
and
sahf
mov
pop
ljmp
cmp
xor
sub
ljmp
rcrl
inc
sbb
sbb
or
aas
stc
psrld
fdivrl
std
sbbl
push
or
push
inc
or
sbbl
mov
pop
adc
fimuls
cmp
jne
cwtl
movsl
int3
hlt
push
ja
rclb
pushf
imul
push
pop
push
fisubrl
and
mov
sbb
rclb
cld
and
test
jb
ret
pop
mov
mov
sub
mov
pop
fmuls
adc
pop
pop
adc
pushf
jbe
mov
jle
fdivs
out
sbb
and
push
nop
repnz
mov
call
sbb
ss
adcl
cmp
sbb
adc
xor
inc
jo,pn
inc
ret
inc
mov
push
fs
push
je
push
ja
outsb
xor
sbb
mov
decb
mov
test
es
and
out
adc
inc
int3
sbb
mov
insb
mov
cld
add
lcall
ja
and
cs
xor
popf
les
aam
dec
cmc
push
sub
sbb
pushf
into
jl
outsb
pop
xor
inc
mov
std
ljmp
sbb
inc
pop
out
push
jge
movd
cmp
add
std
je
adc
cli
sbb
xor
mov
insb
dec
outsl
or
cli
inc
push
je
decb
cs
xchg
push
push
imul
mov
enter
bound
test
sub
inc
movsl
push
or
mov
lret
adc
adc
pop
xor
add
pop
add
das
ficoms
mov
mov
insl
pop
xorb
or
test
in
push
xor
rol
xor
insb
repnz
cmpsl
std
sti
ret
les
inc
xor
adc
cmp
in
jle
pop
into
jo
sbb
outsl
ror
xchg
popf
xor
cmpb
lods
in
mov
or
jns
xor
sbb
test
les
mov
push
shrb
in
pop
add
fidivrs
cmp
and
clc
add
jl
mov
adc
lods
mov
inc
test
les
add
xchg
cmp
in
in
sub
outsb
adc
push
push
fdivl
xchg
and
mov
xor
push
adc
add
jne
cmp
test
fsts
out
mov
and
dec
lcall
test
dec
sub
add
xor
and
push
add
push
cmp
aam
rolb
add
rolb
int3
pushf
push
pop
or
push
cmp
stos
test
sbb
clc
mov
int3
icebp
inc
xchg
or
and
clc
dec
in
repz
xchg
rcr
xor
lods
sbb
xchg
push
ljmp
mov
lock
adc
cmpb
and
inc
lods
lcall
lret
outsb
inc
popa
mov
pusha
loopne
loope
adc
mov
push
insb
add
or
pop
ret
pop
and
stos
pcmpeqw
jecxz
and
lcall
sbbb
popf
clc
mov
popf
jns
pusha
mov
repnz
sti
iret
mov
inc
fiaddl
push
mov
push
add
push
mov
das
or
std
xor
or
sub
sub
pop
into
push
call
adc
and
mov
mov
pop
jno
xor
cwtl
mov
dec
jb
pop
or
addr16
je
xor
fsubr
mov
in
pop
add
sbb
movsb
sbb
bound
and
sbb
add
insb
pop
shll
cmc
jne
cmpsb
push
jle
mov
push
sub
enter
or
andb
insb
jle
jmp
xchg
pusha
shrb
xor
add
mov
mov
xchg
mov
push
sub
icebp
fwait
rcrl
sbb
sbb
lahf
insb
sub
in
xchg
push
outsb
mov
mov
or
adc
add
mov
push
in
dec
mov
push
jb
ja
sbb
cwtl
and
ss
arpl
repnz
cmc
mov
sbb
adc
je
js
inc
mov
cmp
mov
popa
imul
push
add
leave
lock
sub
mov
sub
inc
inc
loop,pt
sbb
loopne
cmp
push
clc
mov
insb
jp
movb
out
insb
ss
inc
xor
pop
pop
add
jg
aam
and
adc
out
jl
sbb
testl
les
mov
cmp
dec
inc
cmp
xor
loope
mov
mov
jne
mov
xor
fxch
inc
adc
cmpsl
push
xor
lret
adc
loop
push
mov
mov
adc
gs
mov
dec
add
push
bound
mov
mov
out
test
and
add
ret
jle
mov
add
pop
fmul
mov
inc
pop
mov
mov
and
lea
in
pop
sbb
mov
adc
loop
pop
adc
pushf
add
or
dec
lea
mov
add
jns
insb
enter
adc
das
fsubs
jge
nop
mov
and
adc
popf
in
aad
test
pop
mov
pop
cmp
or
jmp
js
cwtl
mov
mov
and
outsb
add
adc
loopne
push
and
fsubrl
mov
or
push
std
jg
jecxz
inc
inc
or
ror
inc
sbb
out
lret
jmp
push
ret
mov
dec
mov
jge
call
testb
push
decl
cld
imul
sub
add
lea
mov
movsl
rorl
or
pop
sbb
incl
in
inc
mov
jne
jb
dec
adc
cmp
pmovmskb
jmp
mov
or
inc
adc
aam
lock
dec
in
lcall
in
sbb
mov
rorb
sbb
jae
push
or
adcb
pusha
je
mov
mov
and
ds
and
ds
pop
cld
inc
shl
test
cs
fmull
jl
dec
dec
call
or
pop
std
inc
test
stos
les
in
and
bound
ret
testb
mov
je
popf
int
push
push
cltd
pop
mov
jmp
je
mov
pop
jnp
inc
pop
jle
inc
sbb
inc
jb
test
mov
cli
hlt
mov
rorb
ss
add
orl
adc
xor
decl
in
rcrb
andl
adc
xor
jge
jecxz
lahf
aam
push
cmp
add
xchg
stos
mov
js
sub
and
fwait
movsb
dec
xchg
mov
mov
push
fwait
loope
pusha
dec
pop
je
and
push
or
xor
cmpsb
mov
cmp
mov
test
or
test
jge
call
add
dec
cmp
lods
lret
clc
lret
loopne
add
subl
enter
lea
test
dec
adc
fcompl
loopne
add
test
insb
add
push
push
jne
mov
or
test
cli
rorb
ljmp
sub
adc
pop
sti
cli
in
cs
pop
loopne
xchg
pop
add
push
add
mov
lea
inc
inc
stc
pop
clc
inc
lock
push
adc
mov
or
mov
adc
dec
pop
ljmp
mov
mov
repnz
mov
test
scas
mov
push
pop
dec
js
push
cltd
inc
outsl
or
leave
je
xchg
lahf
insb
fdivs
in
pusha
inc
pop
jmp
xchg
pop
test
rclb
pop
hlt
jnp
repnz
mov
cld
data16
mov
repnz
fldt
int3
mov
inc
sub
movsl
fisttpl
add
xchg
lock
push
add
int
mov
adcb
subb
push
sbb
hlt
jle
mov
cmp
js
pop
mov
add
out
outsl
and
data16
out
std
cwtl
daa
push
mov
push
pushf
movb
mov
outsl
in
sub
je
dec
xorb
pop
sbb
lcall
or
rcll
mov
cmp
loope
xor
sub
mov
fbld
fs
jae
mov
push
lret
int3
call
in
fisubl
aad
mov
test
push
jle
push
je
fmul
add
call
jno
sub
inc
inc
insb
cltd
aam
xor
push
les
fimuls
outsb
dec
cmp
sbb
mov
cmp
mov
jp
jbe
pop
add
fsubrl
and
mov
popf
xchg
stos
movsb
cli
in
sbbl
inc
rcll
data16
lahf
mov
lret
mov
jmp
inc
jne
std
xchg
cli
mov
sub
xor
jb
ss
push
pop
orl
ret
xchg
add
loope
insb
loope
stos
push
push
rorb
lret
scas
adc
insb
mov
jbe
mov
mov
movl
mov
loopne
stos
imul
push
mov
ja
lcall
lock
fidivs
in
test
jl
mov
adc
test
and
jb
rorl
mov
test
call
pop
mov
mov
out
xchg
popf
and
call
inc
popf
push
lock
data16
mov
mov
je
mov
or
fnstcw
lret
jo
es
divb
pop
push
roll
xchg
call
xlat
mov
mov
pop
mov
hlt
add
idiv
push
mov
pusha
mov
add
test
or
frstor
cs
inc
pop
xor
pop
lods
clts
rclb
cmp
stc
adc
and
push
cmp
imul
or
ret
loopne
test
push
rclb
pop
sbb
jge
push
push
inc
cld
das
into
test
cmp
orb
pop
xchg
cmp
dec
jmp
mov
fimuls
popf
clc
pop
lods
inc
inc
int3
push
sbbb
hlt
cld
lods
push
adc
ss
enter
test
add
cmp
jg
pusha
push
push
enter
insb
sti
add
adc
out
cli
gs
ljmp
inc
pop
dec
add
scas
pop
sub
mov
fs
mov
mov
push
xchg
push
scas
xor
lea
mov
push
xor
ds
ret
stos
mov
test
inc
aas
fs
mov
lock
push
shlb
pop
gs
sub
pop
cmpsl
inc
dec
pusha
cmpsb
ds
movsb
pop
ljmp
sbb
push
xor
lock
das
adc
test
adc
dec
pop
arpl
mov
mov
cwtl
clc
jo
xor
xchg
int3
jne
rcrl
xchg
sub
movsb
pop
mov
maxps
sbb
dec
or
xchg
loopne
or
push
push
loop
mov
fsubrs
add
add
add
or
add
mov
cmp
xor
mov
jle
mov
test
cvttps2pi
inc
pop
or
movsb
sub
outsb
pop
fs
shl
cld
mov
iret
mov
jg
inc
test
push
loope
or
in
lahf
mov
dec
int3
push
mov
inc
pop
cmp
ret
lret
xchg
dec
ljmp
xor
and
lahf
sub
rep
xor
subl
shrb
dec
push
jp
mov
gs
sbb
pop
jne
cmp
rorb
inc
inc
adc
hlt
push
jbe
shl
test
mov
or
outsb
sahf
mov
push
inc
push
outsb
insl
sbb
or
lret
loopne
loope
add
bound
stc
std
sbb
loope
repnz
dec
pop
dec
int3
lock
add
mov
adc
jb
rorl
jl
or
sbb
sub
xchg
ror
inc
cmp
pop
fld
cli
fdivs
in
xor
push
setle
sub
pop
cmp
fcmovnu
add
test
and
push
mov
or
jg
adc
ljmp
les
loopne
xchg
xor
and
lcall
adc
push
cmp
inc
fadds
outsb
faddl
lock
jbe
orl
data16
outsb
repnz
movb
jecxz
aaa
inc
mov
push
xor
push
push
sub
data16
or
aas
push
add
pop
mov
sub
or
hlt
addb
add
mov
aas
lods
mov
shll
push
bound
cmpsb
push
xor
adc
fadds
and
inc
sub
sbb
mov
nop
jle
sbb
movq
sbb
mov
jg
je
adc
inc
adc
cmp
sahf
mov
inc
popa
sub
xorl
dec
mov
shr
sbb
mov
inc
xchg
movb
je
sbb
outsl
outsb
push
adc
lret
inc
test
jae
mov
mov
sbb
cld
sbb
push
call
add
xchg
add
test
mov
mov
push
test
mov
or
and
add
sbb
orl
add
loopne
ss
lock
aas
insb
mov
mov
sbb
jmp
mov
rol
test
nop
adc
mov
aam
add
sahf
addb
cvtpi2ps
adc
jmp
mov
rcrb
movsb
dec
dec
xchg
int3
ret
mov
add
and
lret
lea
hlt
jb
pop
or
das
and
add
repz
pop
rolb
mov
push
sbb
xorb
sub
jg
bound
int3
mov
mov
push
outsl
iret
sub
hlt
aad
push
mov
and
cmp
inc
cli
cmp
mov
adc
adc
jb
adc
in
lock
lcall
adc
js
pusha
fsubs
call
outsb
add
or
repnz
aaa
mov
or
push
and
std
lock
test
dec
test
nop
scas
cs
subb
outsb
mov
test
and
cmp
and
imul
push
cld
inc
scas
loop
test
and
sub
push
call
push
adc
lds
or
cmpsl
inc
and
fisttps
jp
cs
ljmp
jecxz
pusha
cli
incl
les
sub
les
and
loopne
adc
jmp
cs
adc
int3
or
test
shll
add
mov
out
mov
sub
inc
loop
add
sbb
orl
push
out
dec
loopne
mov
fcoms
cmp
sahf
pusha
ja
inc
ror
mov
mov
inc
cmp
or
clc
cld
in
push
adc
cmp
orl
call
pusha
pop
mov
fld
pop
pcmpeqb
pushf
dec
dec
imul
or
popa
add
dec
loop
mov
push
or
push
or
xor
xor
sub
call
fbstp
mov
aam
les
mov
pop
in
and
dec
mov
push
inc
test
lods
rcll
arpl
es
je
sbb
aam
shll
aas
xchg
stos
orb
push
aas
sbbl
out
stc
dec
sbb
mov
inc
push
dec
into
or
lock
out
jecxz
test
xchg
out
lods
add
inc
xor
dec
pop
cli
xor
int3
ret
mov
lods
adc
mov
dec
add
dec
ror
push
push
imul
lock
in
sbb
inc
pop
mov
or
shrb
shrb
je
pop
sub
stos
push
xor
cmp
fs
add
xorl
aaa
adc
jge
insb
stos
mov
push
inc
jb
call
lea
es
lcall
mov
stos
add
jmp
inc
mov
xor
or
jl
rcrl
test
stc
xchg
add
mov
mov
mov
jmp
lea
fdiv
mov
cli
sbb
test
leave
push
dec
pop
push
inc
jne
sbb
cli
push
add
adc
mov
cmpsl
arpl
hlt
rcrb
mov
fiaddl
or
rol
cwtl
inc
push
cmp
outsl
inc
sub
cmp
xor
inc
ret
mov
mov
xor
push
shrl
push
movsb
mov
lods
orb
pop
push
stos
addb
call
add
insb
in
data16
xor
mov
imul
test
push
fistl
mov
push
xor
and
mov
icebp
xchg
xchg
rcl
dec
cmp
jg
popa
mov
xchg
in
cli
push
cmp
push
push
fmul
inc
dec
inc
mov
lahf
lods
outsl
dec
aas
mov
push
and
cmp
xor
or
popf
stc
lods
int
push
clc
cwtl
jne
inc
lea
jno
mov
test
jl
insl
push
es
loopne
xchg
dec
movsb
decl
call
and
adc
and
mov
mov
or
push
push
and
shl
aam
xlat
sub
call
outsb
lock
mov
enter
cwtl
ds
sub
dec
pop
je
cmpsb
mov
xor
dec
test
cwtl
mov
sbb
std
add
fs
inc
mov
inc
push
insl
lds
or
sti
push
xchg
call
insb
sub
shl
dec
mov
test
xchg
les
push
mov
rol
jp
lcall
dec
push
push
push
negb
dec
mov
inc
jmp
adc
cmp
add
push
jl
loop
call
std
xchg
xor
adcl
pop
std
dec
cwtl
cli
adc
mov
lret
stos
mov
and
fsubs
mov
ret
or
je
jle
test
repnz
jnp
adc
loop
nop
inc
aaa
in
call
ds
jae
jae
inc
mov
push
fidivl
out
movsb
insb
cli
sbb
in
cmc
loopne
and
push
or
cmpsb
add
and
push
sar
stos
sbb
add
cmp
fmuls
inc
adc
rclb
add
and
add
inc
xlat
inc
sarl
hlt
loopne
stos
push
push
and
fisttpl
rolb
outsl
int3
aas
inc
fmuls
jle
add
fldt
enter
or
adc
cmp
fdivs
in
push
pop
mov
outsl
fadds
cld
outsb
xor
or
and
push
fsubr
ja
ljmp
mov
push
inc
xlat
mov
mov
aad
stos
add
je
fidivrl
loopne
add
add
inc
mov
sti
hlt
and
sti
or
inc
jecxz
fwait
xor
cld
xor
pop
xor
xlat
adc
jo
push
shl
cs
mov
int3
in
add
ljmp
xor
and
dec
adc
subb
cmp
enter
inc
pop
cmpsb
int3
out
pop
aaa
dec
pop
in
fistl
mov
xchg
and
jecxz
movsl
or
es
jb
fstl
jp
ljmp
push
call
test
jbe
jecxz
mov
and
sbb
inc
sti
sbb
add
push
fcoml
sbb
push
pop
lds
movd
adc
mov
insl
inc
jp
je
pop
subl
pop
loopne
mov
paddd
fcmovbe
mov
add
stc
jl
cmp
mov
push
les
ret
or
loop
push
bnd
jae
adc
push
adcl
adc
es
popf
mov
hlt
and
ljmp
fs
and
jmp
movups
popa
loopne
sbb
ficomps
popl
ret
cmp
cs
mov
out
xchg
in
xor
inc
xor
add
jp
mov
pop
push
ljmp
xchg
push
and
pop
inc
jmp
rcrb
icebp
jnp
cmpb
cmp
mov
mov
and
xor
movl
mov
test
clc
push
into
or
gs
mov
or
cli
dec
loop
sub
pop
push
in
xlat
jne
xor
lock
or
lcall
sbb
loopne
cwtl
lahf
push
loop
scas
cmpl
stc
cmp
je
adc
push
mov
adc
pop
hlt
xor
push
pop
pop
movsb
mov
pop
jne
int3
sub
inc
and
cmc
mov
ret
test
in
aaa
sub
test
shll
loop
ret
std
push
mov
cs
jnp
ret
adc
and
pop
cltd
lods
mov
mov
pushf
lods
dec
jne
mov
push
das
out
add
inc
cmp
dec
shlb
ds
add
addb
lret
push
push
dec
push
mov
aam
jmp
pop
or
and
push
push
outsl
pop
xchg
jp
jp
imul
jmp
es
mov
jno
adc
inc
sbb
push
jge
inc
sti
mov
int3
int3
adc
ret
sub
stos
sub
insb
lea
incb
jno
imul
cmc
push
mov
inc
or
sub
fadds
enter
and
xor
sbb
scas
pop
xchg
in
cld
jae
dec
mov
loope
add
in
cmp
inc
or
xchg
ss
loop
aam
jo
fmull
add
sub
inc
adc
mov
xor
mov
sbb
xor
and
inc
sbb
fbstp
add
hlt
ljmp
pop
pusha
clc
and
inc
scas
notb
fiadds
call
repnz
add
jle
dec
cmp
xchg
add
mov
pusha
icebp
pop
sub
addb
fdivrs
mov
test
mov
xchg
test
je
into
jmp
push
ret
das
js
cmp
cmp
mov
mov
dec
ljmp
divl
fcoml
loop
xorb
ret
loopne
cli
dec
fnstcw
ret
add
xchg
fs
mov
cmc
pop
inc
test
push
adc
shlb
xor
dec
movsb
jg
cli
addl
outsb
mov
or
sar
cmp
ljmp
rclb
int3
faddl
fsubrs
nop
std
and
mov
call
ljmp
sbb
xchg
popf
inc
ret
rol
pop
jne
xchg
insb
mov
jb
push
outsb
sbb
scas
or
rorl
pop
leave
jno
inc
jl
add
jmp
inc
add
adc
add
jmp
cmp
jbe
push
or
jl
nop
add
stos
xor
nop
mov
ljmp
push
inc
push
push
sbb
fmuls
push
les
lock
fs
and
repnz
scas
dec
std
outsl
adc
call
jp
adc
xor
nop
sub
enter
and
faddl
adc
mov
decl
mov
jl
and
push
cmp
inc
lcall
mov
andl
fs
adcl
xorb
lret
pusha
cmpsl
cmc
add
ret
popa
sbbb
xor
adc
push
hlt
insb
rorb
sub
adc
push
pop
fiadds
add
xor
push
adc
add
inc
shr
sti
inc
pop
push
insb
lock
addl
sub
mov
inc
es
jo
mov
negl
adc
sbb
inc
mov
in
adc
inc
js
pushf
pushf
adcb
or
lods
xchg
and
push
adc
dec
pop
inc
mov
fs
mov
mov
inc
int3
add
inc
and
ret
jl
test
pusha
arpl
cs
add
mov
or
inc
in
into
nop
loop
add
push
add
jbe
lds
insb
sub
add
or
sub
data16
rclb
add
push
dec
and
rcrl
jle
movsb
movsl
add
dec
je
mov
push
fs
push
jb
or
mov
insb
clc
pop
sub
les
out
pushf
add
push
aam
adc
outsb
add
add
push
call
loopne
sbb
adc
or
fadds
cmp
int3
ljmp
xor
sbb
cmp
add
pushf
or
mov
mov
subb
pop
mov
mov
jne
je
mov
imul
cld
or
dec
imul
xor
outsb
dec
or
stos
nop
jl
mov
lock
pusha
pop
push
rolb
rcrb
push
mov
cmpsb
sbb
mov
adc
loopne
push
mov
or
mov
pop
rclb
mov
cmp
mov
push
aam
lea
dec
out
pop
ds
mov
pop
fmull
mov
mov
inc
je
jp
aad
adc
or
xor
test
ja
rol
pop
orl
mov
ss
stos
fbld
fiaddl
adc
out
xchg
push
dec
mov
lret
push
xchg
push
sahf
decl
pop
call
sbb
xor
adc
pusha
sbb
in
or
jg
cmp
xor
push
pop
cli
xchg
push
cli
jecxz
jbe
ret
stos
movsl
out
sub
adc
cmp
icebp
sbb
mov
rcrl
add
adc
add
dec
loopne
inc
dec
bound
mov
cmp
jb
loopne
je
sub
hlt
minps
nop
testb
or
xchg
popa
notl
inc
dec
and
ret
add
jae
insb
adc
adc
loopne
add
jbe
sbb
jne
or
dec
test
adc
push
aas
xchg
jmp
add
xor
xor
xchg
ds
mov
mov
push
push
mov
fimuls
lods
add
iret
cld
push
test
adc
cmp
aam
cli
cld
cmp
or
fcompl
lea
int3
cwtl
xchg
jmp
loopne
add
and
adc
cli
mov
jb
mov
fists
es
dec
enter
dec
setb
fdivrl
mov
inc
push
out
lods
xor
jl
fldl
rcr
std
sahf
xchg
inc
fcom
mov
dec
mov
fimuls
std
mov
cli
xchg
mov
clc
out
adc
jl
adc
adc
insb
sub
pop
pop
mov
bound
popa
adc
xor
icebp
lods
adc
pop
shrb
inc
or
test
jbe
push
pushf
lods
xchg
sub
add
rolb
xor
or
inc
mov
mov
sti
ror
pusha
pop
movsl
inc
push
mov
mov
lock
push
js
mov
xchg
je
push
ljmp
pop
test
into
mov
call
xchg
in
ficompl
mov
pop
sbb
mov
in
icebp
pop
call
and
push
adc
push
cmc
loope
push
stos
movsl
pop
pop
jo
loope
pusha
cli
nop
mov
sarb
sub
mov
and
dec
fisttpl
jmp
rorb
shl
mov
ret
mov
sbb
js
pop
aaa
adc
ret
dec
ljmp
jno
add
fnstsw
or
lods
shr
lock
or
inc
lock
push
imul
lret
jb
movntq
out
pop
sub
outsb
flds
cmc
xchg
mov
ret
test
pop
cli
mov
mov
or
imull
push
jb
push
sbb
push
ds
stos
push
faddl
pop
ret
mov
int3
std
adc
add
rcrb
movsl
sbb
cmp
lods
add
push
rclb
pop
push
mov
fisubl
jle
pop
push
mov
mov
leave
and
and
aam
add
cmp
dec
lcall
inc
xor
pop
jmp
add
insl
imul
test
mov
xor
xchg
sub
jno
cmp
push
jp
aaa
mov
mov
mov
push
incb
adc
aaa
sbb
or
dec
cld
inc
clc
mov
aaa
cmp
fmuls
inc
cmp
sarb
pcmpeqb
test
adc
inc
mov
clc
dec
add
icebp
fdiv
add
inc
pop
or
or
xor
insl
outsb
mov
loopne
pusha
loop
and
adc
cmc
add
mov
lods
jae
std
in
push
xor
sub
insl
enter
icebp
ret
rcrb
dec
outsb
push
cmp
push
icebp
adc
jbe
cld
jns
loope
inc
add
das
adc
aas
clc
or
ret
ret
aaa
jl
pop
out
lea
in
or
cmp
orl
out
das
add
push
inc
imul
jbe
push
adcb
stc
xchg
int3
ss
push
movsb
shr
data16
loop
mov
fyl2x
xlat
mov
push
jmp
push
cmpsb
jmp
push
inc
test
add
sbb
fs
add
rcrb
ds
mov
pushf
or
fs
dec
outsb
stos
push
rcrb
dec
or
mov
ljmp
pop
sbb
xacquire
jmp
dec
mov
xchg
or
loop
mov
mov
test
dec
mov
mov
dec
decl
push
jge
lcall
jl
push
push
and
sbb
mov
cmpl
inc
aaa
cmpl
lods
mov
push
pop
shll
xchg
sbb
test
lcall
add
je
or
pop
lods
xchg
jle
xchg
mov
push
mov
inc
shrl
sub
enter
mov
jge
mov
out
sbb
repz
cmp
mov
aam
pop
ret
xor
movsb
mov
inc
pop
inc
aas
jl
inc
xchg
xor
cmp
sbbb
add
cli
js
jbe
add
out
xor
pop
movsl
cmp
dec
orl
xor
xor
pushl
std
adc
jb
push
mov
inc
mov
and
mov
fmull
sbb
inc
testb
adc
js
aam
push
xor
or
or
out
into
faddl
lock
sub
pop
cmp
bsr
adc
divb
rorb
clc
mov
or
rolb
jbe
ja
add
jle
mov
cmp
push
pop
and
fucomip
push
pop
inc
sbb
je
rcrb
sub
dec
mov
loop
inc
adc
or
mov
and
cmp
cmp
insb
mov
mulb
sub
push
adc
cli
ss
and
push
inc
icebp
mov
orl
mov
imul
jo
mov
inc
cmpb
jg
fwait
add
cmp
inc
jle
gs
lock
pushl
and
ss
loop
sub
push
jne
shl
into
jp
addr16
clc
aas
sbb
mov
nop
addl
pop
lret
rcl
lods
xchg
add
and
mov
push
xchg
push
in
cmpsl
add
jb
mov
je
push
in
mov
out
dec
aam
add
out
es
not
push
js
add
inc
ret
mov
add
loopne
add
mov
jmp
add
loop
push
lea
mov
ret
rorb
adc
fldl
shlb
outsb
aam
xchg
pcmpgtd
and
arpl
loopne
sub
fsubrl
orb
inc
je
js
jge
jb
call
inc
xor
nop
xor
and
jg
sub
mov
push
mulb
pop
orl
jge
adc
inc
sub
cmc
adc
jbe
add
mov
xchg
push
enter
jecxz
cmpsb
and
into
call
pushf
lea
ja
sbb
push
mov
add
inc
jmp
and
add
incb
out
js
add
cmp
push
dec
clc
pop
enter
add
pop
sbb
jmp
dec
cmp
dec
fiaddl
pop
xchg
dec
jecxz
jl
rolb
dec
sarb
pop
js
incl
mov
in
add
dec
xchg
icebp
ret
cmp
add
cwtl
mov
out
cs
clc
pop
inc
add
loopne
mov
sbb
push
gs
gs
insb
test
ret
mov
mov
jl
sbb
add
adc
push
fistps
inc
xor
jo
mov
std
push
mov
sbb
loopne
pushf
nop
lea
jp
hlt
xchg
xchg
call
push
jbe
test
push
loope
loop
xor
mov
pop
dec
dec
mov
sarb
xchg
sbbb
mov
addb
fwait
cld
fildl
pop
stc
andb
divl
dec
adc
xchg
fdivrs
push
mov
andl
aas
push
mov
mov
loopne
mov
and
cmp
das
push
or
or
data16
cli
push
mov
adc
push
mov
jge
mov
gs
cmp
push
xchg
ljmp
mov
sbb
lea
nop
pop
jne
popf
shlb
push
add
fistpl
aad
sbb
fisubs
adc
sbb
lcall
ljmp
dec
adc
lods
add
roll
cwtl
popa
faddl
scas
fs
xchg
add
not
pop
add
and
dec
pop
testb
push
sahf
inc
push
push
dec
and
rcll
ret
outsl
pop
mov
mov
xor
push
xorl
inc
movsl
movsb
sbb
sub
inc
test
jp
xor
adc
fxch
add
mov
jae
mov
or
aas
or
ss
jmp
fdivl
inc
mov
leave
add
lea
cwtl
inc
mov
pusha
shrb
nop
push
dec
inc
test
adc
stos
aad
addr16
push
xchg
xlat
mov
xchg
cmp
fdiv
js
inc
jge
daa
pop
shlb
divl
sbb
cmp
ds
push
xchg
sbb
leave
dec
or
and
push
jecxz
push
jge
jge
add
and
fisttpll
clc
adc
xchg
push
insl
lods
enter
jge
jmp
jne
sti
xor
adc
adc
fisubl
xor
icebp
and
inc
addl
cs
push
dec
mov
dec
mov
xchg
cmp
adc
sub
and
lods
xor
inc
lret
fnsave
mov
adc
add
mov
dec
loop
push
ds
cld
mov
mov
outsb
xchg
inc
mov
pop
icebp
stos
jle
decb
adc
lds
bound
mov
negl
dec
or
repz
dec
and
push
aam
pop
pushf
ss
mov
mov
jbe
dec
add
pop
test
mov
fcomps
or
or
push
popl
cld
push
aad
add
ja
push
aaa
ds
fnstcw
dec
push
pop
sarb
stos
popa
mov
mov
ljmp
or
sar
push
fdivr
cmp
push
in
pusha
add
adc
sbb
xchg
clc
pop
jo
xor
mov
and
mov
les
pop
fmuls
test
jle
stos
scas
mov
test
push
or
clc
test
andb
mov
sbb
call
mov
cld
mov
dec
jmp
cmp
shr
sbb
jp
shrd
sbb
sbb
outsl
andb
adc
mov
push
add
movsl
pop
icebp
cmp
in
mov
fmuls
aam
fistps
dec
or
cmp
push
and
int3
gs
rcrw
push
push
push
mov
cmp
xor
mov
popf
cli
loope
sbb
dec
insb
inc
sti
rcrb
inc
and
test
fsubrs
shlb
pop
int
insb
ljmp
adc
mov
mov
clc
lea
mov
mov
adc
or
adc
and
ljmp
repnz
hlt
out
push
lods
add
xchg
lods
rorl
fmull
mov
shrl
inc
cld
movsl
cmp
dec
jecxz
enter
rorl
leave
mov
or
outsb
ljmp
mov
dec
rol
mov
mov
fists
xorb
push
cmp
or
mov
and
xor
test
test
xor
xchg
das
add
push
mov
pop
bound
cmp
pop
push
cld
push
loop
xor
push
add
mov
in
mov
or
in
dec
xor
leave
shr
cmp
outsb
push
data16
fisubl
cli
sbb
fisubrl
mov
in
jge
jp
mov
push
ss
inc
xchg
cmp
fdivr
mov
and
shrb
movsb
add
in
xchg
out
cmp
jle
loope
push
adc
in
ret
imul
push
pop
xor
push
adc
cmc
repz
adc
push
loopne
lock
and
mov
lret
sbb
inc
pop
cmovno
xchg
pop
xor
xchg
test
out
xor
xchg
pusha
fwait
add
mov
stos
or
cmpsl
cmpsb
enter
gs
in
lock
xor
pop
lock
lahf
jp
ljmp
callw
pop
add
push
mov
adc
sbbb
loope
faddl
dec
mov
frstor
leave
orb
std
mov
push
push
xchg
sub
mov
adc
pop
xor
mov
mov
mov
test
insl
jg
addl
jg
fdivl
cmp
jno
mov
mov
lea
fdivs
daa
add
and
push
call
pop
lea
adc
cwtd
fmul
jo
jo
lret
stos
mov
inc
inc
push
lret
into
int3
or
jne
push
jl
ret
sbb
or
lods
pop
cmpsb
je
jbe
jbe
xor
push
mov
pusha
push
insb
sub
cmpsl
jo
fidivrl
mov
dec
push
xor
inc
jl
cmp
jmp
mov
rcll
ss
mov
jge
xor
aad
mov
hlt
mov
test
sbb
orb
sbb
lods
adc
lock
sbb
cmp
xlat
test
sarb
outsl
popf
nop
addr16
push
in
popa
xorb
cld
dec
inc
loop
adc
test
std
push
leave
leave
sbb
mov
mov
dec
test
jg
dec
lret
inc
and
mov
inc
gs
mov
out
into
cmp
pop
dec
sub
push
je
add
imulb
push
push
sti
or
mov
pusha
add
scas
pushf
test
mov
xchg
lret
sbb
cmp
outsb
fdivrs
xchg
sbb
lea
lods
push
rcll
out
sbb
pop
sbb
andl
mov
push
mov
scas
aaa
inc
adcl
arpl
call
mov
push
scas
fs
dec
cmp
push
sbb
add
pop
or
lea
inc
push
xlat
add
imull
inc
call
add
xchg
outsl
pusha
push
push
int3
add
ds
loopne
add
cmp
je
adcl
jmp
sub
mov
test
dec
push
add
leave
pop
lods
adc
push
out
into
jae
xor
ss
push
push
ret
mov
pop
push
adc
dec
mov
jp
jne
xchg
add
sbb
shlb
pop
mov
ja
test
aaa
into
cld
adc
inc
call
mov
mov
and
ss
outsb
push
ret
ret
ficoml
mov
pop
cmc
pop
mov
xor
mov
cmp
js
xor
add
cld
jmp
jb
sbb
aam
clc
lods
dec
nop
rcrl
add
popa
or
push
xor
loopne
mov
test
adc
stos
bound
into
ljmp
and
lahf
sub
test
cmp
xchg
cmpl
add
lahf
popa
loopne
fs
ret
fsubrs
cwtl
mov
lcall
outsb
lock
mov
mov
add
pop
jp
push
fmul
mov
jns
out
popf
adc
dec
sarl
or
test
aam
mov
aad
add
out
and
xchg
add
mov
jge
xchg
movb
fimull
push
sbb
adc
push
ss
push
insb
mov
dec
adc
pop
sarb
lds
or
xor
pusha
cmovs
add
push
xor
ds
rcl
sbb
fcomps
pop
fcomps
xchg
adcb
gs
in
xchg
pop
clc
mov
repz
push
cmp
sub
call
pop
mov
add
aaa
ret
iret
push
pushf
js
ret
push
or
out
nop
aam
orl
adc
mov
add
and
sub
inc
mov
adc
pop
loop
adc
lcall
push
mov
movsl
xor
fadds
addb
adc
add
mov
mov
push
pop
test
mov
lods
mov
ds
aam
in
out
mov
shll
pop
pop
inc
mov
xor
mov
sub
xchg
or
sub
jbe
test
push
or
or
inc
cwtl
xchg
pushl
xchg
sub
jo
jo
push
push
inc
sbb
es
jp
fs
push
enter
mov
push
mov
mov
mov
pop
sub
fs
mov
pop
xchg
push
jb
lea
divb
dec
xchg
fisttps
mov
sbb
xor
pop
cld
xorl
sarl
jmp
stos
aad
xor
aas
sub
scas
into
and
sbb
adc
mov
xor
les
jle
jmp
jo
inc
lret
iret
mov
add
pop
ret
stos
jbe
or
ret
adc
cmp
push
js
cld
lock
mov
cmp
push
cld
dec
inc
shlb
loopne
cmp
pop
loopne
push
mov
inc
sarl
xor
jle
xchg
cmp
xchg
mov
shrb
inc
sub
aad
aam
adc
pop
insl
sub
dec
ljmp
loopne
push
int3
or
or
rclb
sti
push
call
or
loop
les
mov
imul
xor
out
xor
stos
add
in
jne
push
adc
inc
jae
add
xor
jne
shlb
sahf
push
adc
sbb
movsb
sub
add
clc
lea
js
call
insl
dec
aaa
pop
pop
and
movsb
test
out
lods
js
aad
fdivrs
adc
popl
dec
je
mov
rcr
adc
mov
sarb
dec
inc
aam
adc
inc
fs
add
mov
mov
and
cmp
cltd
xor
outsb
mov
out
xchg
mov
dec
data16
cmp
sbb
xorb
out
sub
and
push
sbb
add
fdivl
movsb
fildll
nop
clc
mov
inc
in
push
sub
ret
into
sti
lods
popf
push
insb
cmp
inc
lods
dec
sbb
rorl
push
dec
ja
cld
and
inc
mov
testb
push
insb
push
mov
cmp
push
pusha
push
pop
jb,pt
in
loope
or
cmp
dec
das
sbb
mov
inc
rorl
outsl
push
out
sub
pop
hlt
lret
sub
jp
repnz
out
cmp
inc
mov
add
push
push
movsb
add
mov
test
mov
sub
mov
popa
stos
push
push
push
arpl
mov
xchg
adc
imul
popa
addl
cmp
pop
inc
push
add
xor
fs
push
fcompl
cmp
out
into
movl
imul
or
loope
push
nop
js
mov
jb
rolb
push
hlt
mov
and
inc
mov
inc
fnstenv
cmp
mov
fs
popa
push
mov
sub
rcll
push
mov
add
mov
dec
call
int
mov
pop
cmp
jl
add
decl
push
add
pop
cmp
imul
fdiv
or
inc
mov
adc
test
loope
mov
cmp
lret
dec
sub
jne
add
inc
mov
arpl
test
test
mov
ret
fisttpll
inc
lock
push
sbbb
sbb
call
inc
add
adc
test
mov
cmpsb
adc
push
mov
clc
push
pusha
xor
leave
push
push
aas
jne
cmp
inc
push
adc
lock
or
push
lea
jo
pop
mov
scas
mov
dec
filds
mov
and
cmp
and
mov
stos
pop
insb
sbb
cs
loope
lret
add
in
or
enter
push
test
ret
push
mov
pop
ljmp
pop
mov
inc
enter
popa
inc
ds
or
shl
iret
je
inc
cwtl
or
pop
xor
add
mov
add
sub
int3
popf
xor
xor
mov
sbb
dec
movsb
or
jo
sbb
test
repz
je
orb
inc
push
cmp
std
mov
mov
imul
xor
ret
inc
cmp
ret
adc
push
jns
or
lcall
or
or
pcmpgtw
ret
push
and
and
adc
sub
adc
clc
cmp
loope
mov
int
mov
and
in
xor
aaa
shlb
and
rorl
dec
pop
fisttpl
nop
and
ret
dec
je
call
pop
inc
bound
add
mov
dec
rcl
dec
ror
sbb
idiv
pusha
xchg
add
or
jl
dec
jle
add
nop
in
dec
add
push
and
jp
mov
pop
es
loop
les
sbb
push
push
push
fwait
push
je
and
xchg
add
sbb
mov
inc
push
cwtl
xor
jmp
mov
test
inc
sbb
mov
add
jp
test
clc
pop
cli
mov
cmpsb
pop
lock
or
pop
and
je
rol
jbe
sbb
inc
pop
or
cli
in
call
xchg
icebp
mov
rcr
insb
add
mov
fimuls
mov
lock
push
push
adc
inc
pop
movsb
decl
fdivrl
xor
es
sbbl
movb
in
insb
mov
mov
add
mov
adc
and
mov
mov
add
xor
pop
cmpb
dec
in
loopne
and
push
mov
jne
jb
hlt
mov
mov
mov
mov
lea
and
add
popa
push
shl
adcl
mov
ss
idiv
xchg
jl
or
std
mov
sbb
sahf
push
sub
and
push
mov
push
and
or
hlt
adc
push
out
les
dec
adcb
shlb
push
inc
daa
rorl
xor
outsb
inc
es
sbb
mov
incb
pop
mov
test
or
sub
inc
or
test
mov
sbbb
ljmp
fiaddl
or
jmp
push
pop
adc
adc
cmp
jo
daa
push
jnp
pushf
push
das
mov
insl
pusha
or
ret
stos
xchg
inc
into
cwtl
xor
sar
add
pop
scas
push
add
out
sbbl
ret
jmp
mov
sbbb
jb
jecxz
or
xchg
lret
pushl
xchg
cmp
imul
test
call
int3
mov
addl
or
in
jmp
aaa
push
push
sbb
fcomi
std
popa
jmp
fnsave
inc
cld
dec
insb
aam
inc
jl
fdivrl
mov
test
cld
lret
addl
lea
jbe
outsb
cli
add
pop
pop
test
rclb
cld
add
inc
mov
adc
mov
ss
add
ror
or
push
or
sub
test
out
add
jge
lret
cmp
add
data16
jmp
ret
data16
sub
insb
insb
sbb
adc
mov
nop
xor
lods
lea
and
hlt
and
lea
xchg
jb
push
push
dec
out
add
xchg
push
inc
loope
mov
hlt
data16
xor
mov
push
aam
cmp
mov
mov
push
cvtpi2ps
lods
add
push
cld
adc
mov
out
repz
insb
cli
dec
ret
jg
mov
push
pushf
push
push
clc
in
movsl
xchg
inc
cmp
call
or
insl
pop
aaa
add
lock
mov
fs
or
sar
inc
es
cmpsb
or
out
mov
icebp
shlb
pop
shll
es
loop
inc
shlb
std
je
test
push
cwtl
adc
adc
jp
test
aad
shlb
add
ret
sbb
test
and
dec
push
cmc
fimuls
xchg
inc
xor
adc
cs
or
test
jo
mull
pop
lcall
testb
pop
jb
daa
push
push
mov
inc
sarb
xor
flds
out
cwtl
push
test
push
sbb
push
lea
sahf
jg
mov
push
movb
lret
adcl
ja
xlat
pop
lock
sbb
mov
insb
in
mov
std
sub
incl
popa
stos
divb
call
inc
je
test
ljmp
ret
xchg
popa
jle
paddsb
mov
lock
in
lcall
in
out
and
dec
push
mov
test
subb
mov
xchg
es
pop
aas
hlt
bound
lock
int
popf
fiadds
xlat
or
stos
add
push
rorb
scas
xchg
cmp
mov
jo
add
cmc
bsf
adc
push
inc
in
repz
sbb
ljmp
js
fs
orl
je
and
xor
rcll
fwait
ret
js
push
xorl
pusha
pushaw
xchg
es
push
mov
or
mov
push
incl
andb
mov
outsb
jae
inc
mov
push
jnp,pn
test
stos
jle
icebp
dec
jne
cld
fimull
cld
jb
scas
ret
ljmp
mov
fwait
and
mov
out
ret
push
mov
and
push
test
push
cld
loopne
jo
jne
movsb
sub
popa
dec
cwtd
ss
lea
adc
mov
cmp
xor
sbb
fimull
data16
jp
aas
push
fcoms
xchg
adc
les
fbstp
sbb
out
mov
test
or
add
insb
subb
xchg
sub
xchg
push
fimull
fsubrl
shll
movsl
shrb
movsb
push
jmp
bound
ret
xor
or
mov
cmp
mov
iret
rolb
rolb
popfw
jne
lock
and
or
or
and
daa
test
incl
jecxz
ja
cmpb
xlat
push
mov
fwait
adc
shrb
notb
add
pop
sbb
rclb
test
jp
imul
xor
clc
mov
add
das
sub
insb
push
ret
pop
popf
mov
mov
mov
dec
test
inc
call
mov
cmpb
mov
or
insl
ss
insl
mov
rorb
ficoms
sbb
out
int3
ret
dec
jb
mov
gs
dec
ret
or
or
pushf
mov
lods
sti
cld
popa
call
push
pop
jmp
push
and
push
cmp
mov
test
cmpl
push
ljmp
or
cwtl
dec
test
mov
xor
ret
ret
mov
sbb
sbb
mov
fisubrl
orl
cmp
adc
fwait
jbe
test
aaa
outsl
xchg
dec
enter
sbb
sbb
adc
fisubrs
cmpsb
mov
push
pop
jb
cmpsb
cwtl
mov
inc
push
cli
stos
jl
or
movsb
jge
ret
test
push
aas
lea
or
cmp
mov
andl
jne
jb
mov
rolb
scas
push
aas
test
fcmovnu
mov
outsb
test
push
xor
mov
jmp
push
lock
pusha
mov
arpl
or
mov
sbb
and
testb
mov
pop
ljmp
rcll
jp
adc
cmp
sbb
sub
push
mov
dec
test
adc
stos
es
test
jl
push
sub
mov
stos
das
and
and
scas
jnp
gs
cli
add
dec
call
mov
lds
lcall
mov
add
dec
push
mov
movsb
push
loope
pop
xchg
inc
cs
fidivrl
sub
jo
loopne
or
outsl
cld
call
jb
adc
hlt
dec
aaa
ss
int
fs
and
cmp
incb
inc
fdivs
push
push
dec
movsl
ds
jae
aam
mov
rol
add
rclb
mov
mov
pop
mov
dec
dec
adc
cltd
mov
fstps
cmc
in
push
and
adc
incb
dec
adc
test
mov
lods
cli
adc
arpl
xchg
push
dec
sub
push
call
loopne
xchg
push
and
jl
mov
xchg
or
out
lret
lds
ja
cmpsb
mov
and
loopne
stos
or
cmp
xor
add
mov
push
mov
xor
fcoml
inc
mov
add
fdiv
push
xor
fwait
add
xchg
and
fists
or
push
jns
test
ja
aam
stos
enter
jb
xchg
inc
sbb
push
rolb
pusha
mov
mov
ja
loope
cmpsl
inc
dec
call
dec
pop
sar
sti
inc
push
leave
or
adc
cmp
roll
sub
int
cld
into
xor
fidivl
pop
or
inc
jb
add
or
jl
mov
call
pop
xor
mov
or
inc
gs
and
mov
movsl
adcl
jo
push
mov
cmc
fwait
mov
xor
ret
xchg
je
pop
mov
in
adc
lcall
add
ret
or
adc
stos
rcll
jmp
fdivrs
movsb
out
clc
les
cli
push
std
sbb
xchg
rolb
js
jl
mov
decl
int3
adc
or
mov
mov
mov
flds
inc
mov
add
xor
data16
xor
scas
fsub
rcl
mov
loop
mov
push
nop
insl
rclb
xlat
ljmp
mov
cli
push
stos
inc
ja
add
adc
jecxz
sbbb
inc
scas
mov
ss
jnp
cmc
or
fdivs
cmp
pop
lahf
pop
cmc
sub
mov
mov
mov
jne,pn
mov
push
lea
push
dec
jp
into
loopne
loope
mov
push
dec
adc
mov
inc
adc
stos
adc
jo
mov
mov
subb
ss
xchg
mov
or
xor
mov
and
jg
pop
cwtl
ljmp
aam
insb
lret
shl
std
push
mov
push
fsubrp
xor
push
dec
dec
add
fmuls
fidivs
test
pop
decl
ret
or
out
xchg
sub
or
dec
ret
cmp
xor
sbb
repnz
mov
adc
ret
clc
fsubrs
cmp
cmpsb
les
dec
aaa
testl
jmp
jecxz
cld
test
push
sbb
jp
pop
mov
inc
push
pop
fdivrl
je
xchg
adc
adc
decb
fucomi
lock
add
rclb
ljmp
sub
daa
dec
inc
cs
lock
setp
out
cmp
cmpsl
pop
mov
sub
cmp
jmp
lret
in
xor
add
push
in
roll
and
mov
push
inc
call
pop
pop
je
fs
out
in
xchg
cld
and
andl
outsl
push
jne
sbb
int
cmp
adc
js
loop
pop
std
and
fidivl
scas
or
mov
jecxz
rcrl
faddl
cld
je
aaa
jo
inc
adc
add
clc
mov
pop
ja
fdivl
clc
dec
arpl
in
jb
lea
insl
dec
add
and
mov
cmp
mov
js
sub
push
xor
dec
xor
mov
imul
js
shr
lods
sti
sbb
scas
mov
push
push
call
insb
xor
mov
movsb
jbe
testb
fsubl
insb
arpl
and
push
dec
push
callw
ror
and
mov
outsl
outsb
leave
mov
sub
mov
push
inc
and
push
lods
lcall
stos
push
mov
adc
scas
sbb
into
shrb
popf
xchg
inc
ljmp
pop
or
cmpsb
mov
and
mov
lcall
pop
add
enter
insb
pusha
add
and
in
fstpt
lsl
insl
jmp
ljmp
or
outsw
mov
imul
sub
add
push
icebp
psrld
mov
add
shlb
ss
add
jmp
add
mov
fadd
fsubl
call
mov
ds
mov
daa
nop
mov
inc
fistps
in
bound
mov
in
inc
outsb
adc
shlb
cmc
xor
cmp
mov
test
mov
adc
pop
and
ss
pop
ja
dec
push
loopne
in
jg
jbe
mov
mov
rcrb
push
push
pop
adc
pop
int3
dec
fdivrs
push
les
push
loope
jp
pop
add
out
mov
and
sar
lods
sbb
movsb
cld
cmp
push
repz
nop
std
ret
pop
jle
hlt
jne
adc
add
data16
cmp
jle
pop
push
mov
int3
inc
cmp
jge
jo
pop
add
fs
mov
lock
cmc
pop
data16
out
dec
mov
adc
fs
hlt
jg
add
fdivr
arpl
sbb
dec
dec
sahf
jb
inc
cmp
test
push
add
ret
jmp
fs
mov
adc
in
jmp
push
aaa
repnz
in
sub
popa
in
xor
int3
in
jo
jmp
insb
push
add
sub
add
js
enter
mov
sbb
stos
lea
mov
stos
add
mov
jo
mov
add
sbb
inc
scas
jno
jmp
pushf
jl
int3
inc
rclb
daa
push
nop
movsb
je
lock
cmp
call
mov
adc
adc
enter
cwtl
test
add
mov
push
mov
pusha
data16
fdivrp
ficoms
mov
xlat
push
nop
negb
xlat
and
outsb
pop
jne
push
int3
add
ret
lahf
mov
loope
and
xchg
test
push
add
and
notb
sbb
inc
imul
cmp
sbb
jo
mov
xor
notb
test
leave
or
gs
push
divb
lcall
push
je
xlat
mov
push
loope
decl
push
jmp
adc
lock
xor
es
mov
xor
push
jl
xchg
push
cmc
add
mov
cwtl
cmp
push
mov
xchg
aam
xor
and
xor
adc
adc
push
in
rorl
into
rcrb
decl
inc
popf
xor
or
ret
scas
pop
decl
add
adc
sbbb
test
xchg
mov
lea
cmpsb
jno
sahf
sbb
cmp
mov
jp
dec
pop
aaa
je
xor
inc
jne
xchg
cmp
stos
dec
sub
adc
stc
divps
das
fstps
add
movsl
mov
sub
fildl
popa
mov
pop
mov
xor
or
pop
sbbb
imul
mov
push
jle
roll
lds
pop
lods
add
test
shl
mov
js
mov
int3
filds
pop
outsl
pop
jbe
lret
pop
in
xchg
imul
les
mov
rorl
mov
mov
xchg
je
inc
or
pop
push
xchg
push
cmp
adc
jge
cmpl
push
into
add
icebp
testl
dec
and
pop
das
adc
in
sub
cmp
adcl
add
cmc
fildll
imul
jno
bound
sti
xor
xorl
sub
mov
je
shrb
insl
mov
movsb
bnd
clc
xor
mov
ss
sahf
xor
dec
cmp
cmp
call
add
push
mov
pop
push
mov
add
call
cltd
and
pop
test
rol
neg
add
sub
and
ret
fisubrl
jmp
inc
scas
mov
push
imul
imul
js
jbe
mov
jo
push
call
leave
shlb
mov
dec
cltd
mov
push
pusha
cmp
add
and
lods
add
jmp
aam
push
gs
dec
out
test
call
mov
ds
insb
mov
mov
movsb
shll
xchg
sub
xor
jbe
mov
jb
cmp
jo
sahf
out
cli
pop
loope
adc
mov
push
das
and
subl
imul
cmp
fwait
push
je
push
int3
inc
shll
pop
enter
push
hlt
hlt
daa
adc
hlt
jecxz
mov
scas
lods
or
sub
jl
xor
cmp
and
je
xor
test
jno
xor
test
xchg
or
nop
pop
inc
or
xchg
jnp
addr16
repnz
movb
mov
jl
mov
mov
orl
test
inc
mov
hlt
fld
stc
or
aas
inc
add
std
mov
push
bound
add
xor
pop
push
aad
cmp
lea
add
jne
and
cmp
fiaddl
cld
fwait
add
shll
push
add
inc
jne
and
das
push
push
lcall
sbb
nop
push
jb
shlb
popa
mov
jmp
mov
add
xchg
lock
adc
dec
sbb
sarb
enter
xor
sub
push
mov
or
pop
outsl
adc
out
add
push
lret
add
cmpsb
enter
mov
mov
cld
or
cmpb
cmp
std
call
cs
xor
pop
adc
add
arpl
inc
push
std
aad
or
inc
dec
and
rorb
xor
xchg
mov
cmp
sbbb
test
imul
cmpsb
mov
scas
aaa
mov
mov
call
sbb
adc
es
mov
mov
push
xchg
nop
cmp
sbb
insb
daa
shlb
mov
inc
inc
std
mov
sbb
jb
pop
add
adc
nop
mov
scas
mov
pop
test
insl
mov
lret
and
in
sbb
and
inc
aas
or
test
leave
test
dec
add
test
imul
arpl
xor
xor
mov
inc
cmpsb
mov
fs
jl
mov
loope
fs
je
push
je
inc
test
imul
shlb
loop
push
push
push
push
movsb
adc
fdivrs
and
fdivrs
cld
mov
rcrb
icebp
inc
xor
cld
rclb
push
call
push
je
jb
icebp
add
aaa
pop
leave
popf
mov
fsubrl
inc
cld
xor
mov
jne
push
ljmp
jl
mov
push
xchg
sbb
adc
dec
xor
mov
imul
fidivl
test
sub
clc
sub
fsubrp
btl
push
or
stc
in
nop
insl
push
push
push
mov
lea
cli
adc
push
or
push
movsb
loop
dec
sbb
fwait
adc
inc
add
and
pop
dec
shr
nop
add
pushf
pop
push
mov
jbe
pushl
into
xchg
shlb
jle
into
dec
lcall
inc
sub
call
pop
cld
xor
nop
xchg
inc
outsl
mov
decl
rolb
adc
pop
cmp
sbb
pop
push
sbb
jecxz
mov
dec
subl
and
xor
ret
ficoml
icebp
push
rcrb
addl
push
add
inc
cld
adc
adcb
bound
outsl
sbb
test
cs
push
je
mov
sbb
jbe
shrb
dec
addb
jl
sub
ljmp
adcl
inc
sbb
xchg
mov
aaa
cmpsb
negb
imul
sub
call
pop
repz
pop
jae
std
jmp
and
sbbl
cmp
sbb
jb
cmp
jae
fs
jmp
jge
push
outsl
push
test
sbb
xchg
fdivrl
push
push
ret
push
or
movsb
dec
pop
aaa
mov
inc
hlt
fdivrs
int3
cmp
xor
push
xchg
mov
les
aam
clc
xor
subl
lock
inc
and
pusha
mov
or
push
mov
xor
or
inc
call
and
xchg
ficoml
lea
pop
mov
push
xor
sub
adc
loop
ds
cmp
xor
cmp
pop
in
pop
mov
gs
cs
push
roll
cmp
add
sbb
inc
outsl
leave
dec
ret
cli
adc
sbb
inc
xor
xlat
aas
insl
mov
mov
lret
outsl
jge
adc
mov
pop
outsb
aas
mov
mov
loopne
call
mov
and
add
js
jns
dec
cld
mov
pop
sub
call
sbbl
jl
cld
add
sbb
mov
or
sub
pop
fwait
lea
cli
xlat
push
sub
int3
add
mov
pusha
les
test
jmp
add
out
loop
int3
push
in
ret
or
inc
jl
addl
add
shrb
es
fcoms
jge
popf
subb
pop
cmp
js
add
mov
out
fcoms
rcl
test
add
xchg
add
dec
sub
jne
add
call
add
inc
adc
jae
test
shll
insl
fistpl
push
inc
ret
add
out
shrb
fwait
jle
fdivr
or
jmp
lds
xchg
mov
push
in
mov
dec
xchg
test
pop
adc
pop
insb
adc
sub
incl
insb
dec
cmp
mov
push
bnd
push
xchg
cli
add
add
outsb
push
pop
pop
mov
loope
mov
int3
lret
fsubrs
dec
filds
mov
adcb
les
pop
mov
mov
dec
notb
mov
push
pop
sub
imul
add
pop
pusha
lods
fsubs
mov
xorl
sbb
sahf
int3
cs
insb
jne
fidivs
xor
aaa
int3
xor
push
test
or
out
dec
cmp
add
pop
add
and
adc
sbb
fs
lods
xlat
pop
cmc
add
mov
cs
mov
pop
and
inc
pop
arpl
lea
in
cld
inc
xor
cli
lods
rcll
dec
jmp
jbe
inc
or
fbstp
inc
xchg
add
in
pop
inc
je
gs
aaa
or
js
faddl
cld
adc
xor
ss
inc
xor
int
xor
jbe
xchg
mov
push
sbb
sub
dec
push
add
hlt
mov
mov
push
rorb
test
popa
inc
inc
paddsb
mov
pop
adc
loope
incb
adc
stc
mov
sub
sub
mov
mov
rcrb
push
lea
push
pusha
mov
add
roll
push
dec
cmp
mov
mov
add
loop
loop
imul
mov
inc
subl
repz
test
and
fildll
fsubrs
jo
mov
fprem
push
dec
pop
mov
mov
mov
jo
mov
add
shrl
jge
cmc
lods
test
call
mov
mov
push
icebp
inc
sub
arpl
push
mov
and
lahf
push
rcrl
test
mov
add
loop
push
stos
fadds
inc
mov
mov
push
push
inc
dec
xlat
movd
lcall
push
xor
push
mul
mov
adc
push
cmc
push
rorb
outsb
lea
add
push
out
jp
rcr
movsl
pop
adc
mov
insl
mov
lret
dec
insl
mov
add
inc
into
pop
ret
pop
out
or
jl
xchg
test
adc
push
xorl
insb
push
cs
shrb
popa
cld
pushf
jmp
cmp
xor
and
cmc
repz
pop
insb
dec
movsl
add
lods
or
pop
cmpsb
ficoml
pop
cwtl
sbb
stos
lods
mull
push
ret
mov
xor
xchg
cmp
mov
xchg
adc
sub
adc
out
jb
cmpb
adc
adc
fcomps
outsb
rorb
testb
add
fcompl
call
adc
adc
jmp
ss
jp
sahf
lcall
add
imul
cmpsb
out
mov
add
mov
leave
sti
mov
xorb
js
ljmp
mov
push
scas
mov
cmp
ficompl
sub
mov
inc
xor
insb
jne
mov
mov
dec
leave
jg
test
dec
fs
sti
inc
mov
rorb
cmp
and
or
sar
adc
js
cmp
jp
filds
xchg
insb
dec
les
cmp
dec
mov
imul
inc
adc
fs
push
jl
cmp
cmp
push
in
push
rcll
ds
dec
sub
lods
bound
aad
lock
mov
pop
adcl
idiv
xchg
nop
dec
push
push
sub
dec
cwtl
ds
jg
mov
ds
add
push
or
mov
sbb
and
bound
rcll
xchg
dec
call
clc
or
xchg
enter
cld
jmp
rol
cli
push
notl
js
xchg
mov
and
in
out
sbb
jg
mov
test
sti
inc
in
jmp
jmp
mov
jmp
shll
mov
sbb
cmp
add
inc
pop
pop
xchg
loopne
dec
into
cmp
push
and
pop
shrb
and
xor
xchg
testb
mov
push
in
xchg
gs
cli
je
call
je
sahf
lds
stos
fdivl
cmpsb
ss
in
xchg
in
add
lock
call
pop
jg
pop
pusha
inc
cli
sbb
sbb
sub
push
ret
jp
xor
rorb
rorl
adc
push
int3
fstpl
adc
or
cld
test
sbb
sbb
or
lock
repnz
clc
cli
add
iret
xor
icebp
movsl
les
jmp
daa
cld
xor
push
push
fmull
dec
jae
mov
add
les
mov
out
rol
push
movsb
push
jmp
cli
arpl
frstor
push
test
jns
cs
cmp
stos
pop
cld
adc
pop
jmp
mov
cmp
icebp
movsl
shrb
jmp
lock
data16
out
and
inc
hlt
sub
sub
mov
scas
mov
invd
pop
xor
jbe
movsb
fdivrl
int3
jmp
mov
hlt
inc
loopne
jg
pop
xor
xchg
sub
mov
sbb
adc
fsubr
adc
mov
inc
les
inc
lahf
sbb
push
es
mov
rol
mov
call
and
sbbl
push
and
dec
aam
jae
push
pusha
call
test
xchg
mov
cmp
push
fwait
ds
sar
inc
loopne
adc
rorl
int3
fwait
adc
push
adc
cli
ljmp
pop
rcrb
pop
sbb
mov
mov
sub
jp
lret
cwtl
test
mov
jmp
mov
push
lods
or
test
mov
add
sbbb
lret
or
or
jne,pn
push
adc
cmpsb
cld
or
and
jl
inc
cld
mov
bound
fimull
adc
cld
shll
cmpsl
ret
mov
push
inc
xor
mulb
xchg
jo
dec
shrl
les
pop
adc
rcr
test
lret
shlb
cmp
sbb
fmuls
adc
push
inc
push
push
sbb
adc
xor
add
jo
mov
inc
add
adc
loop
ljmp
rolb
jl
out
pushl
es
mov
adc
sbb
mov
push
rol
mov
adc
pop
mov
xor
outsl
xor
call
test
jb
nop
ret
pop
or
incb
push
std
ljmp
imul
adc
in
xchg
aad
shl
repz
jb
test
xor
mov
cli
xchg
pop
jne
loopne
push
lock
subl
add
inc
pop
cltd
mov
xor
pushl
mov
or
mov
js
jbe
mov
add
mov
jmp
inc
push
in
ret
sub
lds
mov
pusha
xchg
lea
push
gs
xchg
pushf
adc
push
adc
push
and
mov
mov
data16
mov
sbb
xor
pop
fcoms
adc
pop
in
push
lcall
sub
cmp
add
jmp
jl
xchg
test
push
mov
cmp
jecxz
shr
xchg
cmpsl
push
jno
or
add
fbld
sar
shlb
or
insb
dec
sub
jle
and
push
adc
and
pop
inc
test
sti
or
and
xchg
pop
push
pushf
mov
mov
andl
stos
inc
xor
sbb
mov
or
dec
pop
fistpll
or
push
loope
sbbl
roll
mov
cmp
jne
and
and
mov
inc
dec
in
adc
leave
xor
popf
add
mov
add
jmp
mov
adc
add
outsl
pop
pop
movl
loope
dec
inc
hlt
or
mov
cmp
inc
rclb
push
or
add
add
inc
jb
std
aas
mov
adc
test
mov
out
push
add
adc
pop
xorb
fs
add
and
sbb
adc
push
out
loopne
addr16
mov
je
test
xor
je
adc
nop/reserved
cli
or
fucomi
lcall
mov
mov
mov
test
rclb
push
jne
push
mov
or
rcl
push
sbb
mov
mov
add
jl
or
cs
fisubs
push
mov
pop
fs
cmpsl
xor
jle
cmp
hlt
shrb
and
scas
movsb
push
jge
rol
adc
popa
mov
es
adc
dec
hlt
mulb
ret
aam
push
test
and
add
mov
cld
mov
pop
pop
iret
mov
xorl
xor
xor
or
inc
loopne
pop
orb
cs
std
adc
test
mov
and
push
push
adc
mov
push
push
jmp
into
int3
and
gs
test
cmp
mov
adc
int3
in
jmp
clc
or
mov
or
jle,pn
mov
stos
mov
cmp
les
push
push
pop
xor
aam
les
inc
gs
or
shrb
sub
jne
outsb
cld
add
pop
pop
or
inc
cmp
mov
jp
shrl
dec
je
into
and
push
data16
push
js
pop
adc
mov
adc
out
mov
mov
int3
push
orb
add
or
mov
pop
add
nop
lcall
out
dec
stos
inc
cwtl
shlb
adc
push
out
insb
movsb
fwait
mov
mov
mov
addl
jle
cmp
sbb
les
add
mov
rcll
loopne
mov
ljmp
fisubrl
cmp
fidivl
testb
mov
imul
add
mov
mov
adc
mov
mov
sbb
add
sub
mov
orb
clc
or
sub
xor
adc
mov
cmpsb
jne
jmp
dec
imul
data16
dec
ret
imul
adc
mov
adc
je
adc
das
and
in
in
xchg
jbe
xor
aad
in
push
jne
jmp
stc
mov
in
mov
mov
js
add
mov
push
adc
testb
cmp
lcall
pop
js
jle
gs
push
push
ret
scas
insb
shl
adc
mov
ljmp
insb
roll
push
push
or
insb
or
sar
pop
add
jo
lcall
sub
pushf
push
negb
jae
add
movsb
cmp
inc
sub
aaa
inc
adc
pop
ljmp
push
cld
sub
cmpsb
mov
je
ja
or
test
adc
inc
pop
aam
mov
mov
pushf
jo
stos
dec
add
leave
add
pusha
test
fs
cmp
imul
ds
stc
je
movsl
jnp
daa
sub
in
mov
test
fimuls
sarb
fwait
or
pop
sar
enter
inc
nop
test
ficompl
outsb
dec
sub
test
mov
cmpsb
fbld
sub
mov
data16
sub
aaa
std
mov
inc
divl
add
dec
mov
adc
popf
mov
sbb
punpcklwd
ror
test
rclb
test
nop
shl
inc
pop
pop
mov
and
outsl
popa
ffree
sub
in
mov
in
loop
jo
push
push
lea
xor
test
aaa
adc
push
cmp
or
stos
addl
repnz
es
add
loopne
rol
ficompl
in
outsl
sub
adc
dec
leave
rcl
popf
inc
rorb
mov
or
xchg
xchg
mov
xor
push
and
add
xchg
dec
jp
pop
dec
fucomip
idiv
ljmp
push
mov
test
mov
sub
movsb
xchg
jbe
loope
mov
test
dec
stos
pop
pusha
add
inc
inc
mov
js
sbbb
add
add
out
sub
jo
xor
int3
loopne
mov
pop
je
dec
movb
outsb
sbb
inc
jecxz
cs
pop
mov
js
adcl
or
test
insl
or
in
in
outsl
mov
fs
dec
push
mov
cld
test
int
push
push
or
sahf
jo
push
sub
data16
testb
xor
in
inc
mov
sub
lcall
xor
popf
js
push
xchg
mov
push
orb
mov
push
push
fimull
add
sti
ret
adc
mov
lds
ja
mov
pop
roll
ljmp
pop
push
mov
add
test
inc
mov
ss
into
fisubrl
xor
sbb
xchg
jo
and
shrb
inc
gs
mov
es
inc
mov
out
push
mov
clc
out
cs
add
hlt
shlb
adc
clc
cmc
and
pop
dec
cltd
jbe
call
adc
mov
inc
and
outsl
push
jl
pop
xchg
cs
or
out
cmp
add
adc
add
cli
push
test
sbb
mov
nop
sub
push
je
xor
mov
xchg
inc
clc
or
int3
adc
mov
je
adcl
xchg
cwtl
jle
lcall
test
adc
rclb
jge
xchg
adc
addl
lods
mov
daa
push
add
rorl
cmpsl
fsubrs
lcall
xchg
mov
push
cmp
test
add
dec
cmpsl
andb
pop
shrb
xor
cmpl
push
mov
test
jl
add
mov
cmp
or
in
dec
nop
enter
mov
adc
mov
inc
xor
ss
pushf
push
movsb
jg
pop
fcoml
pop
adc
nop
lret
cmp
mov
xchg
xorl
and
int3
jne
shlb
xor
inc
fwait
fs
and
mov
cmp
cmp
rcrl
xor
stos
bound
jg
ftst
add
lret
lcall
pushl
xchg
pop
pusha
mov
or
shrb
push
inc
scas
xor
imul
imulb
jmp
adc
mov
xchg
outsb
or
or
mov
jle
sub
pop
insb
lock
inc
lods
adc
xchg
mov
dec
dec
data16
cmp
lods
xor
inc
push
lea
clc
js
xor
xor
add
and
add
cli
push
in
cmp
push
cmpl
scas
gs
mov
roll
aad
adc
add
cli
jae
cmp
repnz
insl
shl
and
fldt
push
push
xor
mov
sub
pop
movaps
sub
adc
je
pop
call
orl
cmp
imul
sbb
pop
or
into
repnz
push
xor
cmp
test
nop
and
aas
addl
nop
leave
push
dec
inc
mov
pop
xchg
pop
add
inc
push
enter
jg
mov
push
adc
lcall
mov
icebp
sbb
lcall
andl
push
test
test
push
ljmp
inc
mov
xchg
ja
jo
insl
ret
shlb
sarb
decl
push
cmp
push
and
mov
fadds
pop
jb
jae
mov
push
cmp
inc
add
cmp
jge
pop
mov
push
push
pushf
roll
cmp
je
inc
orl
enter
loop
and
lods
add
and
lods
ret
xchg
sbb
cmpsb
sti
push
leave
test
movsl
push
jp
inc
aad
adcb
clc
fdivrl
pop
and
lds
cld
jo
push
fimuls
and
mov
adc
movsl
add
mov
dec
data16
push
or
sbb
mov
sbb
stc
or
dec
les
loopew
mov
aam
push
loopne
divb
dec
sub
sbb
and
dec
out
jns
movsl
mov
xor
push
sahf
or
div
lret
cmpsl
dec
ljmp
outsl
loopne
sbb
inc
dec
or
inc
inc
jo
pop
mov
test
mov
nop
lret
push
call
test
in
mov
outsl
dec
sbb
pop
jge
lock
orb
mov
shll
ret
xor
push
push
jle
and
cwtl
insb
test
and
js
outsl
and
movl
sar
sahf
rol
movsb
pushl
pop
sbb
pop
test
and
adcb
call
sub
mov
inc
subb
outsb
rorb
sbbb
push
flds
push
lods
add
mov
add
aaa
enter
pop
xor
inc
mov
aas
movsl
jl
cld
jae
jno
outsb
sbb
mov
or
ss
fisubrs
lods
add
ret
je
jmp
adc
ret
repnz
push
xchg
and
jp
fmuls
mov
movsb
push
or
scas
call
nopl
jae
or
outsl
or
pop
clc
pusha
in
xchg
add
ret
lcall
aam
jmp
or
clc
lret
push
pusha
cmp
pop
loope
mov
xor
cld
lods
pop
hlt
push
add
fsubrs
push
data16
fdivrs
dec
mov
and
clc
pminub
mov
clc
pop
test
push
adc
sbb
mov
push
outsl
ljmp
pop
xchg
add
push
adc
or
push
cmp
and
loop
leave
mov
sbb
add
fs
mov
repnz
mov
or
xchg
dec
outsl
insl
call
cld
or
jbe
cmp
ds
cltd
pop
mov
out
nop
lods
or
mov
cs
lock
or
push
test
adc
mov
xor
loopne
loop
ljmp
add
add
sub
add
test
push
loop
nop
dec
adc
inc
adc
sbb
xchg
rcl
adc
outsb
jo
push
inc
adcb
push
add
lea
dec
notb
jne
lock
mov
jl
push
enter
sbb
dec
dec
xchg
mov
mov
mov
inc
xlat
pop
fildl
andps
add
fadds
cmp
or
enter
leave
jle
mov
iret
icebp
lea
add
enter
adc
gs
mov
test
jbe
scas
fimull
adc
aad
pop
leave
inc
and
adc
jne
push
and
cld
icebp
mov
adc
and
adc
int3
add
push
sub
lods
aas
stos
stos
add
pushf
jge
pop
mov
push
inc
pop
push
test
mov
je
mov
jnp
pop
add
ret
add
adc
popa
lret
cmpsb
jb
dec
clc
inc
mov
mov
push
icebp
and
fmuls
sbb
lods
cmp
lods
cld
adc
pop
popa
push
in
push
add
adc
push
aam
orb
call
mov
fs
cld
shrb
lock
sti
mov
inc
pop
pop
push
xchg
pop
das
dec
adc
lea
and
movsl
sub
decl
mov
pusha
ret
sbb
sbbl
jb
int
sbb
add
dec
and
mov
add
adcl
js
push
mov
cmp
add
mov
inc
push
dec
shll
cmp
lds
jne
xchg
call
push
jae
nop
adcl
mov
addl
ss
inc
or
mov
push
inc
mov
sbb
or
mov
fmull
or
or
sbb
mov
int3
add
xor
scas
shll
incb
pop
push
pop
push
add
loopne
and
pop
cs
adc
cs
xor
sbb
or
loop
xor
cmp
lods
push
sub
movsb
add
cmp
sub
imul
or
adc
cli
add
adc
cld
cmpsb
and
outsw
mov
dec
call
int3
ret
sbb
xchg
ret
add
add
pop
bound
js
xchg
add
jp
cmp
push
push
pop
inc
sub
call
push
into
jp
cmp
adc
inc
mov
jne
mov
fs
addr16
int3
pop
loopne
lods
push
les
jb
cmp
div
insb
xor
int
adc
xor
es
push
fcoms
dec
adc
inc
lods
cli
inc
add
cli
outsb
add
cmp
and
in
ds
pop
cmp
icebp
and
lea
enter
xor
loopne
iret
dec
fsubl
loop
inc
sbb
pusha
inc
repz
lea
into
ret
and
sub
std
push
push
mov
mov
mov
jne
lods
xchg
lea
jl
lea
aas
add
lret
fs
sub
out
lea
notl
hlt
mov
mov
dec
mov
stos
add
mov
mov
xor
adc
scas
jbe
jg
insb
cmp
ljmp
sub
dec
dec
adc
movsb
call
ret
mov
or
push
push
or
push
sbb
adc
lea
inc
inc
iret
pop
mov
mov
lcall
sub
out
mov
test
decl
mov
decl
sub
cmp
stos
mov
adcl
inc
cmpsb
add
fisttps
inc
mov
test
push
les
xor
hlt
lfs
aam
aaa
std
or
or
push
xor
js
cmc
stos
xchg
jge
ljmp
or
fwait
imul
mov
jmp
mov
adc
jo
dec
add
dec
fadds
cmp
std
pop
cmp
inc
aam
data16
push
sbb
mov
stos
dec
mov
ds
gs
adc
outsb
ljmp
fildl
or
jb
cltd
sub
sti
lret
and
jno
mov
jo
bound
dec
mov
js
daa
inc
fists
test
cmp
xchg
mov
lods
je
aam
mov
aaa
mov
push
or
adc
cld
addl
jg
inc
nop
mov
enter
mov
mov
inc
shrl
or
jp
pusha
adc
lods
mov
or
add
ss
aam
lcall
inc
enter
inc
enter
loop
push
cs
clc
incl
push
aaa
sub
sbb
je
adc
aaa
cmp
loop
ret
jns
or
dec
mov
add
scas
adc
divl
je
popa
or
popa
dec
push
push
fs
mov
add
push
lea
shll
lods
xor
dec
pop
push
ljmp
mov
aaa
incb
pushf
enter
and
pop
insb
dec
push
push
jp
lods
in
mov
rclb
mov
inc
test
cmpsl
push
add
adc
pop
adc
dec
fsubrl
sub
xor
xchg
nop
mov
out
inc
cltd
inc
fdiv
xchg
cmp
into
and
js,pn
inc
adc
dec
je
add
fwait
xchg
mov
cmp
mov
sahf
pop
push
mov
enter
mov
mov
push
adc
cmpsb
push
and
loop
aam
fistl
jmp
cli
mov
sbb
sub
lock
and
xor
pop
call
adc
daa
xor
es
shr
push
or
add
int3
insb
adc
push
or
loope
inc
pop
call
add
shr
xchg
jno
gs
int3
pop
push
rcrb
call
mov
rolb
push
add
loopne
scas
lds
cld
outsl
fmul
movsb
lock
and
lock
cmc
inc
mov
push
rcr
fmull
movsb
stos
mov
pop
xorl
shrl
adc
add
jle
mov
jns
fs
call
add
setge
inc
loopne
ret
fiadds
test
mov
adc
data16
inc
adc
outsl
push
jne
adcb
lock
dec
ljmp
push
mov
loopne
movsb
addl
lock
aas
mov
insb
mov
jl
cmp
into
push
add
cld
pop
add
push
pop
inc
inc
pop
adc
add
xor
dec
std
jle
lock
sbbb
push
and
roll
push
loopne
cmp
stos
popa
mov
jecxz
clc
inc
inc
pop
aad
lods
push
fidivl
add
lds
in
fcoms
int
bswap
nop
pusha
xchg
rol
sarb
loopne
and
mov
mov
lcall
inc
and
enter
js
sub
add
add
add
mov
gs
mov
ljmp
jns
cmp
sub
adc
mov
incl
outsb
add
ret
loope
je
fstl
clc
scas
ljmp
push
cmpsb
pop
or
in
sbb
mov
or
dec
into
aas
cwtl
sarb
xor
mov
enter
mov
lret
ret
inc
test
loopne
mov
xor
into
cmpsb
push
mov
adc
push
dec
clc
cmc
inc
xor
xlat
add
icebp
add
jmp
xor
jbe
movsl
movd
arpl
inc
push
popf
lea
test
out
pop
mov
test
jmp
or
dec
lret
jg
or
mov
pop
jbe
imul
imul
push
or
aam
inc
loopne
roll
lcall
scas
test
xchg
sarl
fdivl
or
out
adc
shl
inc
cmp
fiadds
cmp
inc
mov
int3
sub
dec
push
xor
out
and
sub
cld
aam
jge
lock
sbb
dec
add
push
fistl
dec
dec
lds
or
cmpsl
movsb
fsubs
xor
pushw
cmp
push
xor
push
push
xchg
fisubrs
add
jno
test
into
jnp
xor
mov
stos
out
shll
int
xchg
call
mov
pop
lods
inc
pop
mov
lods
jae
lcall
ss
push
int3
test
inc
inc
sub
sub
add
jno
outsb
hlt
fistl
sbb
mov
rorb
les
lock
ljmp
sbb
mov
les
ficompl
pop
mov
push
icebp
sahf
adc
hlt
les
jmp
inc
fisttpl
call
nop
dec
pop
in
mov
nop
jmp
cld
es
xchg
cld
inc
sbb
dec
xor
push
add
lea
addl
lcall
fildl
cmp
cli
lcall
mov
add
mov
inc
gs
aad
loope
dec
scas
xchg
xchg
pushf
ss
xchg
call
mov
cmp
cmp
mov
imul
and
cmpsb
sahf
cmpsb
mov
push
mov
xor
mov
cmc
test
push
sub
cs
int3
cmp
mov
jo
inc
test
add
inc
popa
insb
aam
adc
and
adc
enter
mov
mov
inc
test
mov
fs
int3
xchg
push
inc
dec
sbb
pop
popa
sub
pop
sub
js
loopne
testb
push
lret
xor
loopne
call
cld
push
ss
out
push
inc
adc
pop
xchg
xor
mov
xchg
push
vmread
into
or
fildl
sub
inc
jmp
loope
push
ret
and
push
xor
jle
ret
loopne
test
push
fcoml
or
sbb
pop
add
ficoml
inc
dec
cld
add
cmc
add
and
fstpt
or
cld
scas
jo,pt
mov
test
mov
push
jae
sbb
loopne
jmp
pop
inc
push
jae
fs
loop
test
push
cmp
inc
jg
pop
std
dec
imul
add
pop
adc
mov
inc
mov
jle
es
jno
fsubl
mov
cmp
push
mov
sarb
mov
data16
sbb
ret
das
mov
gs
add
insb
inc
in
int3
mov
adc
pop
daa
hlt
cmp
std
jne
add
add
cs
or
in
loope
add
mov
lret
add
inc
call
pop
xor
in
cwtl
aam
dec
push
add
mov
sub
rolb
int3
fcoml
clc
clc
cmp
es
adc
rorb
fmul
arpl
add
inc
sbb
pusha
loope
subb
sbb
pushl
test
and
in
lcall
call
scas
add
pop
call
jns
pop
inc
ror
inc
inc
outsl
push
pop
mov
cmpb
add
cld
mov
mov
or
jb
test
mov
rcrb
jl
clc
adc
mov
jp
ret
stc
in
mov
aas
fnclex
ret
jo
mov
dec
imul
pusha
xor
adc
iret
jmp
inc
push
jle
and
mov
jge
in
cld
or
or
repnz
rorb
mov
mov
lods
push
jle
or
insl
mov
push
pushf
mov
ror
les
add
je
pop
add
push
imul
mov
or
popf
push
adcl
ja
mov
sahf
cld
push
ds
add
je
enter
pop
sub
pop
rcll
inc
mov
jne
mov
popa
ljmp
call
les
add
mov
push
jb
mov
push
sbb
pop
jmp
add
fcomps
cli
test
inc
push
mov
sbb
mov
or
cmp
insb
test
push
aaa
mov
fcmovu
add
xchg
mov
mov
add
push
push
test
test
pop
xor
mov
test
shrb
in
fstl
jbe
mov
int3
pop
cmp
mov
movl
xor
add
insl
rorl
push
pop
nop
jae
sbb
or
out
das
int3
inc
jle
jmp
daa
adc
and
lea
loope
int3
into
fs
push
add
inc
roll
test
lock
in
mov
sub
dec
adc
xchg
stos
fs
les
jle
mov
add
jl
jl
or
mov
or
and
xchg
cmpsb
cmp
mov
pop
lea
jge
adc
xor
pop
xor
loope
test
lret
enter
mov
insl
loope
ljmp
push
minps
or
into
int
gs
jmp
jge
shrb
shr
jmp
jno
xor
and
inc
add
hlt
lods
out
sub
mov
int3
xchg
movsb
mov
inc
cltd
push
lea
clc
cmp
pop
push
xchg
sbb
xor
add
insb
add
sub
cmp
jae
das
xor
gs
test
adc
cmc
and
and
dec
fsubs
rorl
cmpl
adc
ds
mov
xor
decl
adc
pop
aam
inc
leave
push
xchg
mov
data16
or
hlt
mov
fwait
and
std
dec
add
sub
mov
pop
frstor
mov
into
and
mov
cli
pushf
int3
mov
in
mov
js
fs
and
xor
xchg
add
mov
inc
cld
cs
sub
rcrl
fisubl
fistpll
insb
lods
sbb
jnp
aaa
jb
push
cmp
roll
jp
shll
iret
int3
push
pop
std
push
pop
mov
mov
cmp
pop
mov
mov
push
pusha
js
mov
test
xchg
pop
sahf
hlt
cmc
or
add
sub
je
jmp
adc
gs
inc
je
push
jmp
orb
insb
fldt
dec
and
pop
lock
ret
fs
decb
dec
call
fisubl
jl
call
mov
and
push
rolb
js
fs
popf
push
push
insb
or
loopne
inc
mov
and
fwait
mov
into
test
sbb
xorl
jo
adc
xor
mov
lock
fsubrs
xchg
add
in
cmp
fs
xchg
test
xor
lock
xchg
cs
or
mov
popa
rcl
adc
inc
xchg
dec
stos
ret
pushl
ret
js
or
add
and
dec
xorb
rcr
cwtl
xor
or
mov
arpl
push
xchg
sti
push
jle
or
test
mov
lods
movsl
sbb
stos
dec
cs
pop
pop
xor
push
out
jb
inc
fldl
dec
out
fisttpl
add
add
js
adc
jb
inc
jo
push
mov
xchg
cmp
mov
xor
xor
je
mov
push
lock
xchg
pusha
fdivp
bound
jne
clc
rorb
xor
js
mov
mov
rcrb
sub
push
xor
cmp
mov
cmpsl
ror
dec
xor
or
sarl
inc
movb
je
stos
add
adc
outsl
push
test
mov
dec
call
or
cli
cmp
pop
gs
movsb
push
push
mov
add
jle
push
lods
inc
jge
inc
nop
test
je
arpl
inc
adcb
or
lfs
lock
pushw
insl
xor
and
es
xor
fwait
jno
sbb
sub
stos
je
addl
outsb
sbbb
pop
pop
nop
imul
sahf
sub
divb
mov
lcall
cmpsb
inc
pop
addr16
cld
dec
pop
push
pop
into
dec
xchg
mov
xor
and
push
and
jb
cmc
push
mov
sbb
or
test
es
mov
pop
mov
add
pop
ret
push
dec
lock
inc
xor
clc
gs
gs
ljmp
pop
mov
test
clc
mov
test
insb
andb
addb
pop
xor
mov
sbb
sbb
mov
sub
pop
data16
xchg
jp
jne
adc
and
pop
xor
jl
push
movsb
sbb
cmp
push
lods
adc
int3
adc
into
xor
orl
fucomi
adc
in
pusha
or
sbb
call
pop
mov
pusha
and
sbb
ljmp
hlt
add
ljmp
sub
pusha
mov
mov
sub
hlt
jl
fstpt
mov
fs
ficoml
lea
rol
inc
mov
nop
sarl
shl
cld
cs
push
fiadds
pop
addb
fs
into
int3
mov
jg
test
add
mov
cmp
nop
mov
lret
ljmp
test
std
rol
or
notb
and
ret
pop
aaa
test
adc
ljmp
xchg
int
and
and
int3
es
push
movsb
cltd
insb
stos
fdivrl
icebp
ficompl
out
mov
ds
cmp
push
aas
pop
xchg
movsb
outsl
int3
push
addr16
sub
and
jne
sub
mov
add
or
addr16
and
aas
mov
mov
mov
in
outsl
test
ret
mov
xchg
push
jle
xchg
leave
loopne
adcb
lock
inc
sub
push
fldcw
push
mov
inc
test
shrl
jp
test
xchg
test
dec
faddl
push
dec
inc
and
jo
popa
xor
cmp
mov
push
pop
ds
lret
lock
jecxz
std
or
lock
call
out
push
movsl
sbb
loopne
jnp
jo
xchg
ror
mov
pushw
jo
xchg
mov
popa
mov
push
mov
push
pop
es
jae
je
and
das
adc
shrb
mov
insl
push
sti
mov
add
sahf
cmc
xor
add
pop
icebp
add
push
shufps
clc
push
and
push
push
pop
gs
daa
in
sub
inc
scas
push
jne
shrb
or
outsl
mov
js
and
fisttps
or
call
push
pop
cwtl
jecxz
popf
shrb
cmp
and
xchg
dec
int3
sbb
cmp
mov
sbb
mov
mov
xchg
leave
mov
dec
sub
dec
fstpt
adc
lcall
notb
jmp
cli
in
sub
sub
sub
jno
ret
fdiv
or
jp
imull
inc
inc
gs
jo
popf
in
inc
sub
jle
out
xor
jmp
inc
leave
add
loop
sahf
add
cmp
fnstsw
jl
add
test
sahf
pop
daa
push
arpl
mov
pop
sbb
hlt
call
push
mov
sahf
data16
loop
mov
ljmp
cmpb
repnz
lods
add
repz
add
sahf
inc
mov
lsl
fs
dec
cwtl
filds
adc
sbb
adc
fldenv
dec
add
xor
inc
jae
adc
push
and
sahf
shlb
notb
and
pusha
cmpsl
popa
xchg
jle
cmp
or
and
and
add
movsl
push
ss
mov
mov
and
mov
dec
xor
or
movsb
out
fwait
ret
or
lea
inc
mov
push
jns
push
xlat
xor
cmp
in
jo
testl
sahf
adc
jl
loop
jle
mov
cmp
std
test
loopne
nop
mov
cmp
fildll
push
popa
mov
ret
addb
rorb
shrl
icebp
std
mov
inc
cmp
push
cwtl
add
mov
stos
push
push
ret
xchg
or
push
add
xchg
pop
sbb
add
pop
and
add
and
les
xor
loop
mov
add
ficoms
pop
xor
mov
inc
or
fsubr
loopne
dec
sbb
jg
jo
lods
sarb
test
mov
and
es
fwait
and
push
or
enter
sub
sub
jb
mov
arpl
push
mov
jle
movsb
mov
pop
add
aas
shlb
push
sub
xchg
lock
fcomi
inc
add
and
idivl
adc
inc
and
add
hlt
sti
repnz
imul
cld
or
mov
ds
je
mov
in
xor
add
int
enter
pushl
inc
or
adcb
scas
xor
shl
adc
test
ja
push
pop
in
push
jmp
int3
lret
sbb
and
int
pop
fcmovnu
inc
add
jle
pop
enter
push
mov
test
cmp
dec
loope
les
jl
jo
cld
inc
lea
lea
cmpb
mov
sbb
push
outsl
jbe
xor
push
sub
jl
cltd
or
inc
xlat
rorb
lea
fnsave
push
xor
sub
sbb
lods
cmpsb
loopne
push
stos
ret
jb
xor
or
push
jo
inc
xor
sbb
jp
dec
mov
dec
and
faddp
mov
jne,pt
incl
loopne
push
pop
dec
or
jo
jl
inc
pop
push
xchg
icebp
mov
popl
xor
shl
push
movsb
pushl
jmp
jo
adc
add
or
call
adc
sub
sbb
addl
push
cld
test
cld
int3
xlat
xchg
stos
inc
ljmp
adc
add
stos
cld
movsb
mov
push
jb
mov
jb
loopne
std
int3
push
xchg
jmp
cld
jne
inc
imul
divb
xchg
cs
idivb
or
fs
xor
je
jecxz
mov
xchg
in
push
and
xchg
lods
push
push
test
in
cld
adc
call
frstor
leave
pushfw
in
imul
cs
mov
jbe
push
mov
sbb
hlt
mov
inc
add
cli
lea
mov
add
pop
add
cmc
xchg
xchg
mov
fcoms
rcr
adc
mov
pop
in
andl
insb
in
push
clc
movsb
add
cld
xchg
ret
psrlw
sbb
xor
pop
mov
loope
sbb
fs
in
aam
jmp
es
idiv
inc
mov
mov
cmc
std
inc
jl
xchg
pop
test
into
push
dec
popa
fsubrl
orb
cwtl
or
dec
mov
stos
push
add
fildll
loope
add
adc
sub
and
sti
rorb
adc
sti
insl
je
mov
mov
inc
xor
xor
mov
or
popa
xor
clc
sbb
int3
outsb
loop
pop
add
inc
call
mov
cmp
or
push
adc
data16
mov
xor
sub
xchg
push
or
push
mov
fistl
call
jne
sub
cmp
lcall
dec
cmpsb
push
pop
push
add
pusha
mov
andl
jmp
push
jge
push
popf
add
addl
lea
push
and
sub
ret
repz
mov
adc
mov
push
sub
pop
add
xchg
pop
push
jbe
inc
cmp
inc
pop
xorb
sbb
push
push
mov
pop
scas
test
add
std
sbb
adc
test
mov
movsb
push
in
add
jmp
or
and
das
pusha
nop
mov
sarl
outsl
mov
push
inc
push
xor
push
test
inc
pop
es
roll
jge
lods
adc
push
mov
sbb
inc
dec
call
xor
xchg
sbb
mov
or
inc
rep
push
push
rolb
pop
or
or
xchg
push
pushf
or
add
cld
lea
test
inc
sub
and
xor
pop
test
incl
add
push
sahf
mov
lea
clc
and
xchg
lods
mov
out
mov
sub
xchg
adc
sub
loopne
addb
and
rorl
xchg
jae
dec
add
sbb
xchg
ss
cld
adc
push
or
inc
and
add
and
repnz
add
add
lahf
push
cmp
rorb
test
xor
mov
push
sub
fisttpl
ret
out
push
mov
sbb
fcoms
pusha
cmp
cli
aad
dec
sub
jbe
cmp
js
pop
in
jo
mov
jb
repz
push
sbb
push
loopne
push
loope
xor
insl
hlt
popf
xor
adc
xchg
and
gs
loope
xchg
es
rol
ret
loop
mov
mov
sbb
or
push
pop
lods
jecxz
leave
add
dec
repnz
cmp
cmp
ja
incb
lea
lock
sarb
or
shrb
js
clc
inc
inc
rorb
mov
adc
dec
mov
jbe
cld
cld
push
push
loopne
or
sbb
clc
test
jno
loopne
test
or
mov
jo
popa
ror
mov
movsb
add
ficompl
pop
or
clc
ficoms
jnp
mov
push
cmp
int
inc
push
or
loope
cmp
popa
loopne
jb
cmp
mov
cmp
adc
es
add
dec
incl
add
nop
xchg
insl
lock
bound
mov
or
enter
cwtl
rcll
test
cld
imul
popa
inc
cld
add
outsl
fwait
hlt
fmul
push
adc
pop
jmp
call
cs
cmp
push
sub
adc
js
int3
icebp
and
std
adc
testl
push
mov
dec
call
push
jge
out
dec
jo
mov
shr
outsb
stos
adc
out
leave
ror
jno
cmpsl
xor
jecxz
cmp
outsl
xorb
or
pop
and
mov
test
scas
in
fadds
add
adc
or
and
sbbb
push
inc
mov
ret
pusha
popf
jle
add
les
jbe
push
jmp
out
outsb
sarb
xor
testb
lods
inc
cmp
fisubrl
ds
mov
pop
and
add
mov
adc
dec
sub
gs
hlt
lcall
mov
sbb
out
ret
cs
mov
and
jp
enter
pop
sub
dec
add
and
inc
mov
dec
add
and
ljmp
setg
push
jmp
test
push
je
imulb
push
mov
xchg
push
aas
adc
push
fmuls
into
push
xor
xchg
int3
push
adc
ss
mov
add
mov
daa
sub
jo
adc
mov
cld
int3
push
lock
xor
pop
lea
out
mov
xlat
test
bound
lock
call
or
push
icebp
bound
mov
nop
push
cmp
xchg
jo
mov
or
add
lret
sti
ret
mov
push
int3
int
mov
sub
push
lret
test
fadds
cmp
clc
fsubrs
sarb
fnstenv
clc
movsb
sti
dec
adc
pop
decl
ror
cld
cmp
dec
imul
in
jne
into
xorb
or
aas
push
add
fisubrs
int3
push
add
hlt
xorl
gs
ds
clc
test
mov
in
test
mov
test
push
clc
outsl
add
iret
push
mov
mov
dec
imul
mov
mov
push
xchg
jb
seto
xor
xor
test
ret
fisttpll
ret
push
aas
pop
xchg
adc
nop
jo
adc
cmp
movsl
inc
add
lods
mov
xor
push
outsl
mov
push
int3
adc
std
int3
orb
nop
push
mov
fsubrp
mov
les
inc
jl
gs
lods
jnp
add
addr16
xchg
mov
lods
xor
fmuls
cmp
lock
jb
dec
in
inc
ret
shr
pop
js
sub
inc
es
mov
xchg
dec
mov
int
dec
inc
cmp
daa
lock
inc
dec
dec
js
adc
adc
fs
mov
imul
add
dec
sbb
out
mov
push
add
inc
lret
insb
sbb
fstps
movsb
lock
cld
pop
xchg
fsubrs
fwait
lcall
inc
dec
insl
or
pop
rolb
cmp
mov
adc
jg
cmp
mov
or
fldl
jmp
inc
or
and
mov
xor
int3
mov
mov
cld
ret
jb
mov
shlb
adc
cmpb
inc
push
and
cmpsb
cmpb
cmp
pushf
rorb
rclb
je
data16
push
rorb
mov
push
sub
lock
out
cmp
xchg
and
pop
aad
daa
add
mov
cmp
jge
adc
or
test
add
and
xor
xor
sbb
pop
mov
lcall
sbb
mov
les
inc
lock
cwtl
xchg
or
mov
lock
inc
inc
jne
test
leave
lcall
mov
inc
and
mov
mov
pusha
adc
mov
sub
out
out
xorb
testb
add
sbb
adc
jb
mov
add
outsb
inc
stos
inc
cli
outsl
enter
cld
arpl
cli
in
in
push
dec
stos
dec
or
or
adc
sti
inc
sbb
add
jmp
inc
call
push
rol
cltd
pushf
fmuls
fisttpl
mov
shll
fs
imul
les
cmp
mov
add
or
push
hlt
or
icebp
rolb
inc
xchg
dec
shl
ljmp
push
pop
sbb
push
jl
enter
or
cmp
jnp
pop
cld
xchg
push
cmp
jne
dec
inc
push
mov
pop
ja
lret
jle
pusha
repz
add
incl
dec
xor
or
add
mov
pop
imul
adcb
push
jg
cmp
mov
mov
push
inc
mov
push
cmc
popf
adc
xor
jle
add
push
adcb
test
mov
enter
pushf
adc
gs
ret
lock
repnz
pop
addr16
repz
fisubrl
test
jo
cmp
fadds
push
push
pop
or
repnz
pop
jg
enterw
add
lds
cmp
cld
ljmp
xor
pop
loopne
incl
xor
push
insb
add
sub
inc
sub
in
pop
push
lock
sbb
test
mov
mov
cmp
pop
adc
test
ja
mov
xor
add
int
mov
ljmp
jb
call
popa
jo
jnp
arpl
cmp
xor
loope
mov
inc
dec
pushl
fisttpl
pop
ret
out
pop
mov
call
shlb
cmp
mov
mov
divb
loope
xor
add
cli
dec
fcomip
push
pusha
sub
les
mov
jmp
test
or
add
jle
xor
mov
mov
je
es
es
inc
adc
les
les
dec
inc
adc
bound
mov
push
xchg
xchg
mov
loope
call
mov
xchg
mov
pop
ficompl
sarb
lcall
or
adc
cmp
rolb
mov
pushl
cwtl
mov
inc
in
int
pop
ffreep
mov
and
imulb
cmp
scas
pop
leave
in
mov
mov
hlt
popf
adc
popaw
mov
add
inc
jp
and
sbb
rol
push
and
jbe
pop
test
les
mov
xchg
loope
push
push
push
outsl
push
sbb
push
in
push
shl
xchg
mov
sbb
loope
cld
push
add
dec
enter
inc
ds
rol
cmpsb
or
call
mov
int
adc
rcll
repnz
cmp
lock
loop
ja
sbb
imul
inc
into
movsb
pop
and
cmp
inc
clc
xor
lahf
ds
add
lahf
cwtl
repz
mov
dec
rorb
jns
rclb
inc
mov
in
or
or
push
xchg
jb
scas
mov
fdivrl
jle
xor
xchg
mov
je
lock
jge
clc
and
pop
add
mov
aas
xchg
imul
sbb
push
bswap
lods
movsb
int3
pop
add
mov
xchg
mov
push
dec
fdivr
mov
push
fxch
repnz
nop
push
xor
ljmp
orb
mov
daa
mov
stos
sub
enter
test
mov
mov
sbbb
mov
mov
inc
jecxz
or
cmpsb
call
or
cwtl
jne
adc
inc
xchg
test
pop
pop
and
sub
and
aam
cmp
rcrl
cmovge
lret
and
cmpsb
incl
adc
std
clc
inc
or
jge
ret
cmp
push
aam
out
mov
or
int3
sub
pusha
xchg
mov
aaa
cwtl
ljmp
sti
cmp
sub
fs
jmp
sub
pusha
mov
inc
mov
leave
sbb
cli
cli
cld
sbb
mov
push
push
push
or
cld
xchg
push
push
push
xor
rorb
sub
mov
es
subl
lcall
push
enter
inc
inc
int3
xor
push
in
jbe
cmc
stos
aaa
fiaddl
push
flds
cmp
xchg
popa
pop
xorl
mov
adc
jns
xor
test
imul
pop
js
and
cmp
inc
ret
aaa
sarb
push
sbb
mov
push
or
xchg
add
sbb
jmp
rolb
cli
imull
leave
push
call
fcoml
sbb
add
leave
mov
out
clc
stos
pop
js
pushf
maxps
jne
dec
xor
jb
dec
inc
or
aaa
popa
je
sbb
or
icebp
int
cld
mov
inc
sti
inc
push
scas
imul
icebp
add
scas
outsb
sbbl
ret
adc
push
and
adc
test
push
inc
out
pop
xor
pop
jnp
js
or
scas
fadd
insb
lock
int3
push
les
sbb
insb
inc
aaa
sbb
push
dec
push
adc
adc
pop
or
int3
rorb
inc
push
pushl
inc
dec
add
loopne
inc
jg
mov
xor
popa
pop
lret
mov
mov
xchg
in
fdivrl
mov
out
stc
bnd
xor
imul
ljmp
mov
mov
xor
jle
ret
loopne
shlb
scas
test
cwtl
jbe
jp
lcall
mov
pop
and
adcb
sub
jl
in
xchg
clc
dec
push
adc
iret
xor
dec
inc
inc
pusha
scas
push
or
std
negb
lret
cmp
push
inc
sub
lock
dec
fwait
sbb
mov
sub
add
push
inc
mov
sub
out
orl
mov
mov
cli
decl
in
imul
xor
lock
lock
inc
pusha
in
add
jmp
shrb
inc
cwtl
xor
or
xor
jo
mov
and
xor
push
push
jmp
cli
mov
arpl
mov
mov
shlb
test
roll
inc
sub
call
push
adc
popa
loop
mov
xor
jp
add
xor
movsb
push
incb
mov
mov
repnz
fs
add
jbe
call
xor
jb
sbb
and
cld
push
shl
jo
cs
push
and
dec
inc
cwtl
notl
add
or
scas
push
pusha
lds
test
jmp
rcl
fdivrl
repz
mov
outsl
es
lret
pop
xor
jo
nop
flds
hlt
mov
or
and
insb
icebp
cmp
pusha
in
mov
ds
sti
dec
push
sbb
push
loop
mov
aas
add
lea
jle
mov
or
dec
add
pop
add
call
call
jbe
dec
xor
cli
test
stos
add
push
xchg
sbb
push
push
sar
push
mov
xchg
js
les
push
andb
push
enter
sbb
inc
pop
or
js
inc
lea
xor
mov
addr16
das
adc
jnp
pop
ljmp
push
je
into
or
adc
add
les
jo
cmp
repnz
lock
clc
mov
mov
xor
imul
inc
push
aam
cltd
push
dec
sbb
inc
test
push
adc
xor
int
addr16
mov
sub
xor
loope
push
call
sub
test
push
dec
lods
and
movzbl
jbe
adc
mov
faddl
add
inc
xor
dec
sbb
shlb
dec
mov
ficoml
mov
jecxz
and
inc
addr16
push
in
inc
sbb
pcmpeqd
mov
pop
dec
push
mov
add
xor
add
add
sti
mov
sahf
and
lock
std
or
test
and
insl
ror
mov
mov
mov
jo
decb
or
into
push
sub
sub
inc
cmp
push
sub
fistl
ret
jmp
push
lea
add
sub
add
loope
nop
int3
test
mov
fsub
push
xor
inc
jecxz
add
mulb
cld
push
nop
into
rcl
filds
dec
adc
cpuid
and
mov
je
push
shr
clc
fidivl
dec
jmp
add
or
cli
sub
lock
movsb
xlat
adc
lcall
inc
xor
mov
je
cs
jb
or
pusha
mov
add
sbb
mov
js
insl
adc
icebp
loope,pn
into
xchg
ds
out
insb
mov
je
cwtl
jle
test
push
loopne
aam
or
push
jae
je
sahf
dec
mov
xchg
inc
sbb
lock
hlt
fsubs
cmp
insb
loopne
xorb
aas
jp
lock
sub
add
dec
mov
call
daa
mov
rorb
sbb
es
adc
and
leave
jbe
outsl
imul
mov
adc
bound
or
lea
lcall
ss
pusha
mov
loopne
inc
add
clc
mov
push
push
mov
adc
xor
insb
popa
call
push
fwait
jle
loopne
mov
and
mov
data16
mov
fisttpl
sbbb
test
add
cld
scas
cmp
jne
push
push
leave
test
jmp
outsb
mov
repnz
dec
mov
xor
mov
imul
push
movsl
jge
adc
push
and
imul
sbb
in
out
push
jo
stos
mov
outsl
loopne
push
mov
cld
sbb
call
lods
mull
int3
cmpsb
pop
adc
sub
sbb
stos
dec
mov
out
incl
adc
push
and
andl
mov
mov
push
roll
mov
add
insb
jp
jl
test
in
or
aam
sbb
dec
mov
lcall
push
arpl
pop
push
sbb
ret
jne
stos
xchg
popf
dec
dec
jo
ffree
outsb
lahf
xor
mov
xchg
dec
gs
xlat
jge
setae
inc
xor
add
pop
add
and
in
icebp
inc
js
rol
fmull
dec
adc
cmp
pusha
or
push
jecxz
jge
test
test
push
nop
or
test
ss
mov
aas
test
sbb
cli
jb
adc
xor
mov
xchg
test
lock
mov
lock
in
aaa
cmc
cmpsl
mov
mov
cmpsb
mov
inc
popa
inc
stc
sbb
fsubs
push
mov
sub
mov
loopne
pop
mov
test
xor
push
adc
xor
loopne
mov
cmp
push
xor
decb
in
sahf
rolb
rcrl
sbb
iret
inc
cld
inc
xor
adc
lock
popl
lods
lods
adc
mov
pop
push
jp
pavgb
fnstenv
gs
out
mov
repnz
faddp
rolb
mov
cmp
add
swapgs
push
mov
sarb
xchg
push
test
incl
and
in
pop
insb
jae
inc
jne
inc
push
ss
push
sbb
and
js
test
aam
sar
std
imul
jb
in
push
jae
and
push
mov
ds
pop
and
mov
lahf
mov
fs
inc
mov
adc
lods
add
xor
cli
in
adc
jmp
pop
movsb
add
inc
mov
ss
call
inc
hlt
sbb
or
fisubrl
add
sti
cwtl
call
daa
xor
ret
xchg
sub
add
cld
iret
je
add
push
dec
cld
push
enter
movsb
jo
sbb
arpl
cs
popa
add
mov
mov
test
cmp
push
pop
adc
int3
add
dec
fistl
pop
vmovlhps
loopne
mov
xchg
cs
mov
fdivrp
aaa
stos
stc
cmp
pop
nop
je
int3
push
inc
sbb
std
aas
out
out
lret
push
flds
gs
nop
pop
ret
daa
sarl
push
mov
lods
mov
mov
addl
add
ret
jae
push
lods
jg
mov
mov
shl
sbb
neg
leave
nop
jno
sbb
cmpsb
xor
scas
fld
cld
sub
sub
jnp
mov
movsb
cld
add
ljmp
inc
add
test
xor
ja
xchg
xor
pop
push
push
outsl
inc
xchg
pusha
push
aam
adcl
insl
mov
jbe
push
xorb
loope
dec
inc
loopne
je
adc
add
cmp
clc
mov
jmp
and
lcall
sub
jecxz
or
mov
shlb
in
mov
mov
cmp
xchg
lcall
insb
imul
pusha
push
fiaddl
mov
stos
push
push
mov
add
pushl
lret
inc
inc
and
daa
or
mov
inc
xor
std
sub
divb
gs
inc
pop
fadds
call
push
or
pop
sbb
rcll
push
rcll
dec
inc
add
clc
inc
stos
sbb
push
shlb
adc
inc
sbb
test
mov
add
lods
roll
or
cld
push
aam
mov
mov
pop
cmp
aam
and
add
inc
or
and
in
decl
mov
fs
mov
pop
xchg
jno
mov
sub
jne
xor
testl
incl
enter
add
pop
js
js
data16
std
push
sbb
mov
mov
mov
mov
sbb
add
push
xlat
std
das
movsb
cld
cmpsb
movl
minps
xchg
xchg
pop
hlt
xchg
scas
pop
stc
cli
push
push
lock
int3
push
or
mov
mov
adc
das
push
jb
adc
mov
cmp
cmp
push
cmp
or
andb
mov
cld
repnz
icebp
sbb
add
or
cmpsb
and
push
cmpl
xor
and
rcrl
sar
pop
adc
rorb
loopne
dec
dec
jle
and
cmp
lods
jbe
insb
push
push
adcl
or
rolb
je
and
jo
or
push
les
inc
and
lock
movsb
mov
mov
add
xor
mov
jecxz
xor
in
sahf
xor
mov
inc
into
xor
nop
adc
adc
mov
add
push
je
popa
or
push
jbe
or
clc
std
jbe
ss
push
in
jnp
sbb
loopne
nop
cld
clc
add
and
bound
adc
popf
sti
insl
or
outsb
dec
jmp
lret
lret
shll
ss
jno
adc
jno
pushl
clc
decb
addl
and
insb
cltd
je
jg
push
test
xchg
aas
dec
fs
punpckhbw
sbb
fists
xor
in
test
inc
std
movsb
sbbl
cs
push
aad
push
hlt
add
sub
es
push
fsubrs
in
addb
adc
add
add
xor
clc
outsb
mov
call
call
dec
push
stos
fwait
cmp
test
adc
call
fildl
sub
sarb
loop
int3
cmp
mov
sbb
fbstp
in
add
push
bound
popa
add
push
jbe
shll
mov
mov
mov
push
pusha
gs
rcrb
lcall
orl
out
push
cmp
test
pop
or
inc
push
stos
sbbl
xor
xchg
mov
dec
leave
test
or
sar
pop
inc
pusha
jle
inc
xor
nop
les
fdivr
and
sub
push
pop
dec
cld
mov
nop
xor
cmp
out
push
dec
subl
add
or
into
movsb
nop
sub
cld
ljmp
aad
mov
arpl
ljmp
jge
jo
mov
sbb
outsb
push
icebp
adc
pop
test
mov
mov
or
test
dec
xor
sub
ftst
and
dec
into
ljmp
mov
outsb
sbb
int
xor
and
pop
push
rolb
fdivr
enter
adc
outsb
pop
add
lcall
dec
inc
xchg
fsubrl
xchg
sub
inc
mov
mov
add
ss
dec
test
push
add
sbb
lods
pusha
pop
loope
sar
mov
or
xchg
sbb
decl
xor
mov
jge
inc
xchg
adc
mov
push
cmp
add
pop
pop
xchg
fs
push
clc
mov
pushf
movsb
cmp
out
pop
call
jl
ret
dec
xor
shlb
jp
lret
push
not
sub
push
dec
xlat
incl
jge
cmpb
push
std
ret
rcrb
pop
std
push
or
rclb
pop
test
push
and
outsb
movsb
adc
push
add
mov
mov
or
fimuls
add
mov
mov
icebp
inc
pop
imul
leave
data16
mov
push
xor
sub
cwtl
gs
rol
push
arpl
ja
gs
and
je
aad
mov
mov
xchg
mov
sahf
mov
pushl
cmp
enter
ret
cmc
mov
cwtl
rclb
popa
and
sub
insb
aam
or
mov
mov
stos
inc
push
add
mov
push
loopne
fstps
mov
pop
mov
mov
push
inc
lock
data16
loop
test
leave
loop
push
inc
ret
mov
xor
push
stc
test
or
and
mov
add
dec
pop
mov
ljmp
add
push
add
call
fldt
jmp
or
and
mov
cs
insl
das
int3
mov
ficoml
scas
mov
call
jle
in
push
xchg
rcll
or
mov
mov
add
arpl
jge
push
gs
cld
fidivrs
jle
jno
rcrb
jg
imul
xchg
mov
mov
into
cmpb
nop
loop
imul
cmpsb
test
pop
mov
ret
cmpsb
cmp
push
out
and
int3
push
cwtl
inc
mov
add
shrl
out
arpl
and
cmc
sbb
or
cmpsb
fs
imulb
loop
jl
jns
dec
xchg
push
or
scas
add
out
ljmp
mov
sub
add
pop
dec
scas
jne
ss
mov
mov
bound
adc
jg
scas
mulb
notb
mov
lods
xor
ljmp
adc
and
sbb
mov
push
sub
add
lret
fdivrl
and
shlb
lock
xchg
cld
add
das
add
xchg
ljmp
dec
xor
jmp
std
pop
sbb
sub
inc
mov
cld
pop
test
add
lret
mov
add
or
test
inc
mov
sbb
int3
test
adcb
mov
add
movsb
andnps
jb
lea
shll
test
shl
mov
pusha
test
mov
lret
subl
sub
lret
gs
mov
loopne
xor
mov
ja
dec
pusha
mov
repz
mov
orb
mov
xchg
icebp
movsb
mov
fsubl
ficomps
jbe
faddl
push
mov
add
jbe
shrb
cwtl
pop
push
inc
and
mov
push
iret
dec
cld
adc
mov
mov
add
loopne
add
cwtl
mov
mov
mov
jo
cmp
call
das
jp
in
xor
mov
or
or
fidivl
or
jle
fists
or
subb
xchg
mov
ljmp
adc
adc
clc
cmp
pop
dec
imul
aas
mov
mov
js
cld
mov
xchg
ret
and
stos
jmp
push
call
inc
jb
or
add
and
dec
adc
call
lock
mov
jmp
pop
xchg
loope
jo
add
dec
es
xor
and
or
sahf
cmpsb
and
pusha
ja
stos
daa
add
push
jbe
je
cld
jmp
test
xor
lea
mov
or
test
inc
add
sti
push
loope
mov
and
jp
enter
lods
mov
adc
mov
outsl
clc
inc
call
push
test
shrb
je
rorb
lcall
fwait
lods
pop
adc
jmp
xchg
cmp
loopne
and
push
push
inc
adc
xor
ja
les
add
lret
inc
ret
movnti
add
aam
sbb
fadd
xor
xchg
testb
jo
fwait
pop
and
rcll
fwait
adc
sarb
adc
rclb
ss
xchg
inc
je
fdivs
ret
jmp
loopne
shlb
jmp
pop
insb
sbb
xchg
push
lock
or
hlt
jnp
sbb
mov
mov
call
cmpsb
cmp
punpcklwd
mov
mov
or
pop
push
nop
mov
dec
adc
push
incl
adc
xchg
push
aam
sbbb
inc
push
adc
mov
shlb
addl
cmc
push
push
cmpsb
rorb
sbb
call
mov
sbb
xor
int3
fwait
jbe
sbb
test
pop
shlb
xor
dec
mov
popf
add
add
mov
gs
xchg
rcl
lahf
rorb
in
sub
adc
and
je
pop
ret
inc
pop
adc
js
cmp
lcall
imulb
sahf
jb
int3
or
or
mov
xor
fwait
incl
je
jo
xor
popf
aam
pop
cmp
push
pop
nop
adc
cli
imul
insl
std
pushf
pop
xor
je
insb
shlb
scas
clc
cmpsb
cs
icebp
test
jle
sbb
jmp
add
in
and
pop
mov
mov
inc
adc
jae
je
xchg
std
je
fdivl
hlt
incl
stos
add
negb
xchg
aaa
add
movsl
pop
push
dec
loope
pushf
dec
jmp
cld
subl
or
nop
icebp
or
add
test
scas
add
cmp
negl
rclb
daa
jle
sub
shrb
sbb
add
daa
lock
mov
and
push
jp
push
cmp
sub
and
scas
sub
aaa
mov
insb
add
jp
stos
enter
js
add
faddl
mov
icebp
sub
xor
push
inc
mov
xchg
jle
sbb
mov
sbb
das
or
sub
leave
pop
pusha
add
push
dec
jg
out
call
lea
lods
dec
out
or
xor
mov
ljmp
inc
test
xor
jp
ds
cmp
sbbb
pop
and
xor
add
and
jl
in
adc
inc
push
pop
mov
sti
inc
jne
mov
loop
xor
mov
push
pop
sarb
leave
inc
mov
loopne
xor
test
test
dec
sbb
jmp
rcr
add
imul
jo
sbb
mov
adc
call
jne
xchg
mov
cmp
cld
inc
lcall
aam
add
insb
xor
shrb
clc
sub
jb
lock
les
or
mov
mov
shld
mov
adc
jp
lock
test
inc
sbb
mov
xchg
pop
sbb
or
in
shr
inc
mov
xor
cmp
scas
lea
mov
inc
push
rcrl
loopne
lcall
lfs
ret
lock
push
in
cmp
in
mov
dec
loopne
lods
adc
xchg
xchg
test
insb
or
sbb
add
lret
faddl
inc
adc
outsl
fcmovb
bound
pop
adc
push
pop
xor
lock
ss
xchg
push
bound
inc
cmp
mov
sbb
push
jmp
xchg
out
inc
mov
push
fdivr
pop
lods
lret
push
xchg
sbb
mov
dec
push
or
std
rcrl
aam
mov
aam
iret
call
ret
nop
xchg
loopne
and
les
fdivl
add
or
orl
fiaddl
data16
jo
daa
push
scas
sbb
pop
jg
push
iret
test
cmc
adc
fbstp
subb
and
lods
divps
dec
cs
adc
push
cwtl
sub
addb
sbb
add
in
and
std
mov
jne
pushf
pop
int3
shrb
inc
xchg
test
push
add
test
loope
in
xor
xor
pop
push
pop
add
cmp
and
dec
mov
call
mov
loop
sub
and
sahf
and
and
jo
mov
fsubrs
nop
fcmovb
jecxz
hlt
movsl
lcallw
enter
pop
sub
ljmp
sub
outsb
push
dec
xor
jle
push
mov
push
lods
gs
mov
push
outsb
add
add
ds
sub
cmp
leave
je
decl
xchg
inc
fs
sub
adc
xor
inc
push
enter
push
ret
xchg
les
jmp
cmpsl
mov
mov
xlat
add
lods
lds
test
add
cmp
adc
lods
aam
in
jl
adc
xorl
jb
adc
ret
and
xor
lahf
cmp
mov
add
push
add
je
xchg
adc
scas
fsub
sub
push
stos
add
jae
jl
fsubrs
lods
adc
push
cli
push
daa
incb
mov
mov
pop
pop
or
stos
mov
or
sub
push
mov
inc
cmp
and
mov
cmp
outsl
sbb
sti
inc
pop
xchg
add
rcll
insl
cld
cmpsb
cld
xor
loopne
push
mov
sub
test
into
cmp
sarb
jmp
lock
xor
sub
insb
inc
sbb
out
jle
std
cmp
pop
shlb
rorl
mov
adc
pusha
xchg
in
lret
add
push
xlat
xor
dec
mov
xor
cli
mov
shll
in
dec
mov
ret
add
push
xor
lcall
pop
sti
addl
add
or
int
outsb
cmpl
adcl
sub
sbbb
inc
xor
jbe
sti
add
lea
or
jne
push
shrb
inc
inc
inc
data16
decl
stos
dec
push
or
push
addl
in
gs
xchg
sarb
les
nop
ror
sbb
add
mov
xor
dec
push
push
pop
out
out
mov
inc
push
mov
jg
inc
push
pop
sub
cmp
gs
lock
push
inc
cwtl
or
xor
pop
rcrb
rcrl
js
lock
adc
push
movsb
stos
pop
loopne
lds
sahf
movntps
and
mov
rol
int3
fisubrl
pop
scas
jne
push
mov
or
aam
pushf
fadd
sbb
sbb
loop
cld
adc
dec
mov
inc
mov
idivb
jmp
sub
aaa
int3
or
mov
gs
dec
ljmp
mov
scas
push
lret
sti
nop
adc
sub
and
xchg
cltd
xchg
inc
ret
wrmsr
enter
adc
cld
pop
ret
adc
add
fisubl
and
sub
in
mov
ret
pop
cmpsb
and
sbb
mov
enter
lods
int3
jle
cmp
xchg
loope
add
xchg
and
or
les
bound
es
mov
xor
incl
movsb
push
daa
mov
test
xor
mov
andb
sahf
movsb
fimull
mov
xchg
mov
inc
adc
fsubrl
jg
cmovne
or
jo
int3
imul
sub
mov
ficoms
inc
clc
dec
dec
jne
stc
fcoms
jo
pop
and
jb
jg
mov
mov
push
ret
or
xor
xor
in
loopne
loopne
inc
xchg
jae
push
les
arpl
psllw
imul
push
in
cmp
mov
jnp
sub
fmul
add
scas
push
and
pusha
fmuls
test
enter
aaa
or
dec
or
test
pop
mov
push
out
int3
sahf
push
mov
inc
flds
jle
shl
imul
ljmp
and
ret
add
and
sub
mov
popa
hlt
or
loop
fsubrl
mov
pusha
fdivr
cvtpi2ps
outsb
xor
dec
test
rcl
jmp
cs
imul
mov
sti
subb
sbb
adc
ret
call
test
lods
repz
das
fidivrl
ds
cwtl
in
xor
add
mov
xchg
xor
inc
inc
inc
xchg
adc
fsubs
push
mov
push
inc
xor
lock
or
ss
cmp
adc
mov
inc
pushf
xor
rclb
sub
cli
mov
add
das
sub
outsb
outsb
adc
in
mov
sub
push
sbb
xor
xorl
aam
jb
inc
aaa
outsl
pop
icebp
aad
insb
decb
add
push
mov
test
mov
cld
lods
mov
ret
lods
fcoms
xor
pop
push
push
test
scas
lock
xor
inc
dec
cmp
inc
mov
jp
adc
push
add
inc
add
mov
ret
aad
insb
je
pop
es
lret
and
push
int3
cmc
push
add
pop
cmp
orb
push
insb
xchg
push
adc
cmp
or
ljmp
int3
mov
mov
inc
aaa
je
ret
add
mov
adc
cld
cmp
mov
inc
inc
pop
or
or
js
xor
hlt
and
mov
xor
fidivrl
mov
pop
test
fisubrl
add
adc
in
outsl
mov
sub
je
movsb
pushf
or
push
lret
mov
fistpll
cmp
adc
push
adc
mov
insb
sub
push
test
fwait
push
pop
pop
test
hlt
push
je
addr16
sbb
mov
inc
hlt
lret
out
sub
pop
sbb
sbbb
dec
mov
jo
xor
aad
jle
fisubl
pop
das
sbb
and
dec
mov
fdivr
mov
push
test
mov
popf
mov
cli
nop
jo
or
les
dec
push
mov
mov
insb
imul
mov
imul
clc
add
xchg
cld
xor
cwtl
nop
mov
add
incl
js
adc
aaa
and
mull
orl
sbb
fdivrp
cmc
hlt
and
insb
inc
sbb
sub
push
repnz
movsl
icebp
aam
xchg
test
sub
push
sbb
mov
inc
or
jle
mov
dec
jmp
hlt
into
test
pop
adc
movsl
push
push
add
push
test
push
mov
fcoml
push
dec
mov
push
mov
popf
mov
push
lea
mov
int
xor
push
shlb
push
push
div
call
pop
dec
cmpsl
add
je
test
sub
or
push
pusha
inc
pop
sbb
sbb
fcmovbe
add
push
inc
js
adc
sub
rorl
mov
sbb
xchg
je
loopne
in
je
aas
push
adc
hlt
push
les
insb
data16
or
mov
inc
push
sub
lret
js
or
fdivs
and
push
inc
adc
xchg
test
fdivr
mov
pop
push
xlat
not
int3
sub
mov
inc
mov
ds
sbb
inc
push
dec
pop
push
mov
mov
out
test
ds
pop
jo
mov
gs
ret
pusha
sub
lcall
hlt
xor
cs
adc
push
je
mov
cltd
push
or
rcr
and
pop
sarb
or
or
in
pusha
adcl
lods
outsb
lret
fs
jae
imul
xor
xor
push
stos
push
push
add
mov
inc
mov
mov
push
dec
test
pop
test
imul
ljmp
and
push
push
mov
jb
add
sub
push
pusha
loop
out
imul
push
adc
dec
cli
adcl
jbe
jbe
inc
test
sbb
push
and
in
add
pusha
mov
scas
inc
mov
pusha
es
add
add
ja
js
sub
mov
pop
pop
mov
jle
jl
xor
rcr
out
ds
inc
and
stc
pusha
adc
sarl
sar
call
mov
mov
call
jne
sahf
sarl
ret
jo
inc
arpl
fiaddl
xlat
daa
fwait
or
adcl
mov
mov
push
jne
ficompl
mov
std
lea
inc
pop
adc
push
ret
mov
or
xor
dec
xchg
pop
xor
mov
jl
pop
movsb
out
mov
mov
orl
mov
add
push
clc
rol
enter
rcrl
decb
push
push
outsb
mov
push
insl
mov
test
jmp
inc
rcrl
js
jns
dec
push
push
je
and
fimull
pusha
jo
out
mov
jb
xchg
or
loope
fildl
adc
mov
pop
push
jb
add
or
fcmovu
push
aas
and
dec
sub
pop
push
dec
push
lock
pop
xor
or
stos
aad
iret
lods
mov
dec
divb
sbb
outsl
data16
jne
or
mov
test
bound
add
xchg
lock
rolb
mov
add
cli
mov
ss
xchg
test
or
or
pop
inc
jl
shll
push
pop
mov
xchg
rcrl
mov
mov
fcomip
cmp
imul
inc
and
pop
subl
adc
out
xchg
pop
add
in
cli
dec
add
fmull
lahf
push
push
cmpsb
pushl
pop
call
jmp
pop
inc
pop
sarb
inc
loopne
push
addr16
inc
inc
adc
jne
lods
stc
int3
fs
add
aaa
push
cmp
rcrb
std
or
ja
nop
or
xchg
dec
jmp
or
xor
xchg
add
popa
inc
mov
push
dec
push
push
add
bound
clc
dec
rcrb
mov
fldl
inc
xchg
mov
add
sbb
pop
je
xchg
push
jmp
push
push
inc
pop
adc
imul
leave
in
repz
popa
call
int
xor
push
imul
pop
cmpb
add
push
decb
mov
xchg
push
inc
je
cmpsl
insb
sub
call
aaa
outsb
je
inc
push
pushf
fmuls
mov
inc
dec
dec
sti
incl
mov
mov
inc
cs
and
les
rorb
icebp
imul
call
cmp
out
inc
loopne
adc
call
xor
xchg
in
xchg
adc
in
clc
mov
dec
mov
in
fcos
imul
add
imul
adc
push
movsb
mov
jb
imul
pushf
movl
cmp
test
and
scas
movsl
mov
int3
inc
add
adc
sarb
mov
add
jge
inc
pop
pop
popa
xchg
cli
mov
cvtps2pi
ss
roll
fiaddl
cmpsl
add
mov
ja
insb
lcall
pop
xchg
jle
lock
rsqrtps
pop
xor
jnp
mov
push
xchg
mov
adcb
jbe
imul
xor
jge
mov
adc
aaa
mov
xor
cmp
inc
push
stos
push
push
push
and
add
sbb
mov
mov
or
bound
jp
sub
imul
aam
push
pop
ret
or
call
sbb
fs
cltd
lods
lahf
or
push
jne
xorl
insl
push
std
push
sets
ss
aad
dec
add
fnstenv
cmp
lods
dec
addb
and
aaa
mov
dec
push
decl
call
inc
push
cmp
cwtl
insl
add
ret
fstpt
ret
xor
xor
mov
xor
push
mov
sub
out
testb
jmp
push
clc
jecxz
pop
dec
icebp
dec
sbb
data16
xchg
loopne
jno
dec
sahf
scas
jg
mov
pop
mov
mov
sbb
popa
adc
fsubs
inc
js
rolb
enter
xchg
mov
dec
sbb
out
fsqrt
and
inc
rolb
in
xor
or
movsb
xchg
out
dec
push
inc
and
aam
xor
mov
cld
xchg
cmp
mov
pop
cmp
xchg
sbbb
dec
sub
clc
sub
cmp
xor
add
sarb
fistl
dec
add
adc
push
cld
add
ja
mov
shlb
sub
add
inc
call
xchg
adc
jle
mov
pop
adcl
cmp
mov
pop
shll
ljmp
insb
sub
cmp
mov
clc
mov
dec
push
cmp
loopne
test
mov
sarb
cmpsb
divb
add
jne
ret
subb
cld
ds
mov
test
scas
cmpl
add
iret
sub
pusha
push
adc
int
xor
xchg
rclb
shrb
sbb
sbb
pop
inc
dec
aam
add
xchg
mov
pop
fmull
rorl
dec
test
add
fbld
push
call
add
jge
dec
inc
adcl
adc
pushf
xor
outsb
jmp
gs
push
xor
insb
repz
push
xor
nop
jne
jb
dec
test
fildll
movsb
jge
push
dec
jb
movsb
int3
or
scas
jmp
mov
pop
mov
xor
int3
mov
shl
inc
scas
sbb
push
pop
xor
int3
push
adc
mov
pop
loope
test
or
push
jp
add
cmp
sbb
test
pushf
push
pop
out
decb
enter
cs
push
pop
mov
jbe
cmp
add
mov
fisubl
pop
xor
sub
test
outsb
imul
and
lock
jo
mov
dec
adc
inc
pop
inc
or
lods
pop
dec
sbbb
push
jge
jle
call
fdivr
rolb
push
call
hlt
add
add
cmp
faddl
push
add
inc
pop
mov
pop
push
lock
cwtl
ds
imul
data16
fs
cld
dec
lods
cli
ljmp
push
push
stos
mov
sti
sbb
jl
leave
lods
push
push
icebp
or
xor
std
sbb
dec
inc
add
pushf
jle
mov
mov
dec
jne
jb
push
lea
xorb
fdivr
inc
and
pop
or
sbb
mov
fsubr
mov
stc
inc
inc
cmpsb
outsl
xchg
ljmp
mov
push
sub
add
inc
push
mov
adc
je
lods
pop
cmp
lock
fadd
jmp
icebp
int3
rclb
sub
dec
sbb
xchg
add
and
pop
sub
cltd
push
mov
adc
add
pop
sub
ja
add
xor
xchg
xor
pop
je
shlb
jo
ljmp
cmp
lahf
xor
ljmp
inc
fsts
dec
loopne
xchg
xor
dec
repnz
push
scas
xor
test
iret
fs
mov
sbb
adc
pop
into
push
push
or
sbb
cmpsl
mov
fs
dec
jne
mov
mov
push
inc
push
scas
lock
pop
js
pop
dec
aaa
test
sub
adc
popf
and
loopne
and
mov
and
fstpt
sbb
lock
iret
ret
xor
outsl
or
push
xchg
sbb
fs
out
aam
outsl
mov
fcmovbe
or
cmp
je
test
or
clc
aas
test
jmp
in
mov
fstpt
mov
ret
pop
xchg
dec
aas
jmp
lods
cmp
sbb
mov
dec
inc
in
loopne
jmp
daa
bound
sub
js
mov
adc
xorb
daa
inc
sub
repz
xchg
xchg
xchg
pop
andl
push
popa
adc
sub
mov
inc
jl
or
pop
cmp
adc
push
adc
inc
je
shll
xchg
enter
push
inc
lret
xchg
inc
lock
pop
adc
lea
mov
adc
in
jnp
push
pop
dec
cmp
loope
fmuls
inc
call
pop
inc
loope
sbb
cld
pop
scas
xchg
subl
ljmp
mov
in
inc
add
fsubs
daa
shlb
push
inc
movsb
popa
popl
sub
xor
pop
add
pop
incb
sbb
push
push
push
and
loop
cmp
sarb
push
xor
icebp
arpl
rclb
das
call
push
mov
lock
test
push
add
push
test
cwtl
xchg
inc
mov
addl
cmpsb
mov
mov
test
mov
and
push
into
xor
xchg
push
stos
lret
sar
mov
es
imul
bound
mov
add
andb
cmpsl
push
lock
add
dec
js
push
xchg
pop
xchg
jo
xchg
stos
repnz
addr16
popa
add
popa
add
bound
push
and
and
pop
sbb
or
clc
addr16
out
inc
inc
ret
adc
lret
push
ljmp
push
call
mov
cmpsb
arpl
dec
call
mov
cmp
xor
sbb
sub
mov
or
add
pop
lds
sar
in
xor
fdivs
and
inc
jg
and
pop
push
or
sub
shl
jo
add
dec
adc
adc
imul
arpl
fcomps
sar
mov
addl
mov
pop
xor
je
push
push
test
push
cli
mov
test
testb
lock
pcmpeqw
mov
pop
cld
shl
or
je
mov
imul
push
inc
sub
mov
je
mov
sbb
pop
enter
mov
fwait
aam
jno
movsl
cli
xorl
push
push
or
mov
cmc
add
loopne
push
arpl
dec
addr16
mov
push
add
test
decb
mov
push
in
shll
jp
pushf
stos
mov
cmp
mov
add
mov
sub
ror
xor
xlat
cmp
push
lods
and
and
bound
xchg
push
inc
jnp
test
cmp
cli
or
sub
sbb
ror
les
decl
lea
jmp
mov
mov
cli
loopne
cmp
pop
push
insl
or
mov
push
jnp
ret
pop
sub
mov
pop
mov
mov
xor
fwait
push
pop
inc
inc
sbb
loopne
mov
adc
imul
mov
add
mov
popf
add
js
inc
fisttpl
sbb
xor
and
addr16
cmc
stos
stos
jno
cmp
sbb
and
jl
mov
fisttpll
xchg
cmp
enter
jle
orl
imul
insl
and
mov
mov
cmp
push
push
dec
and
shll
mov
je
es
outsb
mov
or
xor
clc
push
pop
jo
push
push
xor
pushf
dec
std
roll
sbb
push
in
inc
adc
movsb
in
sbb
sub
pop
call
xchg
lcall
and
push
push
outsl
lock
sub
cmp
lods
imul
ret
push
add
ret
test
inc
mov
add
mov
adc
ret
dec
loope
or
aam
push
sahf
inc
mov
js
ljmp
mov
mov
pop
cld
jg
mov
repz
mov
mov
into
aas
and
pop
xchg
ret
aam
rorb
add
cltd
add
xor
addb
pop
ret
mov
cwtl
lcall
and
mov
aad
and
mov
or
mov
les
rol
push
cmp
adc
add
es
mov
fidivrs
les
ds
pop
js
sub
push
mov
test
cld
inc
inc
ret
or
out
data16
push
add
movsb
xchg
sbb
aaa
xor
xchg
clc
in
iret
ds
xchg
cmp
add
jge
push
ljmp
jne
push
loopne
dec
aaa
mov
testb
cld
aaa
cld
or
fcos
push
and
jbe
repz
jnp
mov
enter
ret
cmp
mov
loop
in
cbtw
mov
movsl
decl
lock
inc
in
xor
data16
inc
jge
int3
pop
into
push
add
in
push
jb
jnp
sbb
mov
pop
mov
inc
jmp
cmp
mov
push
arpl
je
mov
and
jecxz
add
push
adc
pop
xlat
push
cmc
inc
loope
scas
pushf
xorl
add
or
scas
xor
inc
sbb
fsubrl
pop
decl
clc
sub
pushf
add
and
cmpl
add
dec
push
mov
pop
mov
scas
push
mov
pop
mov
sbb
imul
addr16
push
push
or
sub
push
sbb
cmp
fs
adc
jp
call
clc
and
dec
int3
sarb
or
test
shrb
ficoms
xchg
jb
out
and
lea
popa
test
outsb
xchg
lea
stos
jle
ret
imul
dec
enter
test
pop
adc
mov
mov
bound
int3
cmpsl
and
je
ljmp
hlt
mov
pop
filds
cmp
ljmp
push
jo
sbbl
adc
cmp
loopne
jne
xchg
test
mov
and
cld
lock
ss
sub
loopne
test
push
outsb
cmp
push
add
pop
mov
xor
out
or
ss
cmp
pop
mov
mov
inc
lods
inc
cmpsl
mov
enter
cmp
scas
leave
mov
ja
mov
sbbb
cld
push
mov
sbb
inc
cmp
pop
add
and
pop
call
test
mov
scas
adc
push
inc
adc
and
incl
sub
test
jmp
jbe
fiaddl
cmp
test
leave
push
gs
cmp
out
add
jmp
pusha
add
dec
sub
push
pop
adc
mov
push
and
or
pop
or
mov
inc
rclb
add
add
sub
pop
mov
mov
int3
xchg
jp
fiaddl
add
enter
call
sbb
xor
push
lcall
cld
jo
loopne
jb
jp
ret
adcl
adc
push
mov
imul
pop
notb
fcomi
cs
outsb
clc
inc
push
insb
push
pop
sub
sbb
pop
imul
ret
int3
enter
lds
loopne
and
push
adc
dec
and
mov
lods
pushf
les
xchg
push
xor
sub
adc
add
nop
mov
push
gs
out
jl
cs
data16
shll
xlat
mov
mov
mov
adc
push
add
pop
gs
jne
mov
ret
and
fsubrl
inc
adcl
nop
movsb
sbb
or
lods
sahf
test
fcoms
cmp
mov
inc
ljmp
sub
call
test
mov
cltd
xor
call
daa
fwait
jp
dec
rolb
push
cmp
mov
cs
pop
inc
mov
rolb
int3
cwtl
or
lret
add
stos
mov
es
or
sub
adc
inc
test
cmpsb
or
xor
jle
add
and
je
push
or
notl
push
add
xchg
or
mov
push
adc
rcr
dec
lock
or
pop
sbb
or
add
shr
jae
xor
and
mov
orl
sbb
je
mov
jmp
inc
arpl
subl
push
sbb
scas
je
call
mov
sub
cmp
gs
inc
dec
xor
lea
fidivrs
add
outsb
add
sub
int3
push
je
movlps
add
jmp
jmp
mov
sbb
iret
push
dec
jecxz
imul
in
gs
jl
fs
sbb
push
mov
or
popf
xchg
cltd
sbb
movsb
mov
lea
push
scas
cmp
sbb
add
pusha
lock
mov
mov
push
dec
je
cmp
mov
test
adc
aam
leave
fistpll
mov
test
out
sub
pop
mov
mov
mov
mull
test
clc
inc
adc
xor
daa
in
cs
or
pop
mov
cwtl
movsb
sbb
js
mov
ss
jecxz
push
mov
mov
dec
lock
int3
lods
and
pop
add
sbb
pop
js
xchg
ret
or
cmpl
pop
stos
sub
xchg
cli
movlps
aaa
fistl
push
pop
shlb
dec
test
pop
dec
popa
js
mov
loope
push
lret
xor
int
pop
mov
cwtl
mov
mov
aam
jp
in
ror
shrl
aad
push
movb
dec
std
dec
mov
icebp
sar
mov
gs
push
jg
and
inc
call
mov
add
mov
cld
push
jl
push
pop
mov
outsb
imul
mov
add
gs
gs
adc
cs
outsb
mov
lock
popa
or
lods
mov
xor
clc
cmp
cwtl
je
push
divb
lea
adc
dec
ljmp
jmp
adcb
pop
jno
in
loope
jae
in
data16
or
out
add
push
pop
mov
mov
icebp
fs
lods
mov
and
ja
rorb
mov
ds
test
ds
pop
test
pop
or
push
jne
sbb
mov
cmp
push
fcmovnbe
pop
subb
lock
mov
shl
adc
scas
clc
pop
ret
add
cmc
push
add
add
pop
jne
loop
pushf
xchg
enter
ret
std
cli
mov
shlb
test
sbbb
pop
mov
mov
sarl
or
loop
push
je
add
and
sbbl
outsb
pop
cmpsl
push
dec
dec
jo
outsl
mov
dec
pop
repnz
adc
xchg
adc
mov
adc
jne
xchg
je
inc
ret
lods
jne
adc
loopne
adc
imul
sub
dec
jns
push
xchg
arpl
jg
into
jmp
adc
push
movsl
jg
cmc
adc
mov
lahf
lea
add
loope
loope
cmp
mov
outsl
and
daa
push
push
push
xchg
insb
or
add
loopne
lods
outsl
jl
add
outsb
sub
cs
mov
adc
dec
xchg
xchg
sbb
and
fdivrl
adc
nop
in
mulb
and
insl
mov
cmp
insl
jne
or
into
or
loopne
arpl
insb
popa
lret
sub
mov
lcall
test
je
xchg
adc
repnz
lret
mov
pop
cmc
jmp
add
jnp
inc
mov
sub
jmp
mov
cmp
add
or
mov
rcll
in
cs
cmp
lcall
and
sbb
cmpsb
jb
out
insb
or
outsb
sti
mov
popf
add
adcl
mov
inc
push
push
adc
sub
out
sbb
dec
pop
aam
cld
fsubs
les
movsl
out
aas
bound
loopne
jne
test
and
sub
call
std
mov
and
mov
mov
inc
dec
arpl
fwait
mov
mov
push
movsb
xchg
negb
js
scas
adc
fldt
mov
addl
rcrl
je
call
rcrb
inc
mov
or
pop
arpl
test
inc
divb
jne
leave
push
mov
mov
push
test
fmuls
jge
push
dec
or
add
ret
inc
cmp
aas
xor
pop
xchg
sbb
sub
cld
popl
xchg
add
sub
cltd
icebp
jnp
cmp
rcrb
mov
dec
pop
sbb
arpl
or
aaa
call
adcl
push
add
mov
mov
jmp
fwait
xchg
add
test
push
nop
mov
movsb
mov
cli
xor
xor
inc
mov
je
push
sub
or
movb
inc
mov
je
femms
cmp
inc
inc
adc
loop
add
mov
test
pop
int
data16
jb
or
jl
push
lock
daa
cli
out
sub
push
lock
imul
push
lahf
out
and
xlat
adc
addl
and
ret
sbb
loopne
adc
and
push
mov
mov
mov
push
mov
jle
and
jg
lea
into
sbb
mov
or
decb
add
or
jmp
mov
cmc
out
std
cmp
outsb
test
mov
shlb
mov
mov
ret
jne
inc
pop
pusha
fldl
mov
cmp
dec
push
enter
adc
mov
add
mov
mov
sub
pop
push
mov
jg
adcl
push
jmp
les
pop
push
les
cld
mov
dec
mov
shlb
jecxz
and
out
xor
add
fstl
gs
outsl
divb
pusha
add
pop
or
add
lea
pop
sub
bound
push
outsb
cmpsb
jbe
insb
or
out
mov
cmp
popa
fcmove
push
pop
dec
sbb
or
fwait
jb
sub
bound
cmp
rolb
cs
cmp
push
call
fwait
add
stos
sbb
faddl
cmp
sbb
fcompl
rclb
mov
lahf
lcall
cmp
subb
or
test
decb
das
insb
incb
sbb
ljmp
movd
clc
push
out
add
call
adc
xor
pushf
push
loop
mov
aaa
mov
inc
mov
lods
xchg
rcrb
push
int3
outsl
jge
jle
shl
lock
or
push
gs
outsb
jmp
out
test
pop
subb
inc
push
xor
mov
js
xor
aas
and
xor
inc
fsubp
fisttps
cs
mov
inc
sti
andb
dec
add
xor
push
rcl
add
and
adcb
out
jge
mov
xor
sub
bound
incb
and
push
add
pop
add
push
or
mov
stos
xor
mov
xor
popa
inc
call
idivb
jo
add
push
ret
lahf
stos
sub
test
test
and
and
sbb
ds
out
and
nop
push
aad
mov
mov
lsl
add
ret
std
test
adc
fldpi
inc
clc
shlb
add
cwtl
loop
testl
fs
insb
adc
fcompl
inc
xor
mov
pop
es
imul
inc
pop
loop
ja
lock
incl
adcb
mov
add
add
lcall
es
subb
dec
pop
orb
mov
push
adc
xchg
cmp
cmp
or
nop
pushf
xor
loope
inc
sbb
cld
testl
sti
xchg
mov
cmp
jb
hlt
cmc
inc
test
inc
test
cmp
add
loopne
sub
and
cld
ficomps
icebp
mov
xchg
inc
cmp
jne
jp
in
movzbl
testb
inc
add
stos
push
xor
loop
loope
jo
test
mov
rorb
movsb
xor
jmp
or
fidivs
into
dec
jp
stos
test
call
add
xchg
mov
adc
xor
sub
test
lea
adc
nop
pop
fs
push
fst
mov
dec
fsub
mov
jecxz
dec
call
insb
repnz
jbe
xor
jge
mov
gs
test
cltd
inc
jg
aam
jo
jne
add
xchg
add
push
pop
mov
cli
push
ds
rclb
inc
dec
xchg
fcmovb
xor
adc
in
in
sub
dec
jne
mov
mov
ret
pop
cmp
idivl
hlt
push
sub
jbe
and
or
cmp
cwtl
xlat
inc
int3
or
or
mov
dec
xor
je
daa
mov
dec
ljmp
cmpsb
cmp
adc
les
xchg
cld
or
push
cmp
outsl
rol
jg
sbb
add
or
or
dec
std
pop
jle
pop
or
cs
or
cmp
ret
movsb
mov
push
lds
lods
lret
jbe
data16
pop
sahf
jne
lea
add
insb
sar
mov
rolb
addb
and
std
push
ljmp
out
inc
push
jmp
mov
xchg
subl
fstps
data16
jne
mov
aas
push
inc
mov
xchg
sbb
stos
inc
fdivr
bound
les
loopne
add
lcall
pop
je
fisttps
mov
cld
dec
mov
imul
andb
and
cli
and
jl
cvtps2pd
jge
adc
stc
ljmp
jmp
call
mov
andb
xor
andb
xor
dec
pop
sub
mov
popf
push
ljmp
sbb
or
inc
leave
incb
or
mov
outsb
cmp
jne
pop
fcmovu
sub
adc
fnstcw
test
data16
pop
sbbb
fiadds
pop
call
nop
fcmovb
sbb
push
cmp
inc
rorb
add
sbb
loopne
shl
push
out
loope
pusha
jp
mov
or
fadds
push
mov
outsb
push
cmp
jo
xchg
call
jg
xor
push
jbe
cld
out
inc
xor
gs
scas
lret
fists
inc
or
or
loopne
mov
leave
cmpsl
cs
xor
rorb
xlat
cs
dec
add
or
orb
call
enter
lret
repnz
mov
mov
js
xchg
in
or
loopne
and
jno
lock
adc
loopne
scas
in
fsubs
test
add
cmpsl
in
push
jge
bound
jmp
inc
outsb
or
pop
mov
pusha
enter
outsb
bound
and
call
lods
add
pop
push
dec
dec
add
shrl
rolb
pop
fwait
sub
pop
adc
subl
and
jb
push
push
add
dec
jmp
push
je
cmpl
or
adc
push
sub
xchg
lcall
jb
adc
stos
mov
test
adc
xor
push
or
std
movsb
xchg
call
ret
aaa
and
fadds
js
mov
xor
pop
lods
arpl
mov
push
ss
fs
push
sub
sbb
aam
rolb
sub
fistps
sub
pop
push
std
call
inc
inc
jno
call
sbb
int3
mov
mov
sub
sbb
and
lcall
sub
inc
xlat
push
loopne
jo
dec
ret
icebp
adc
adc
roll
and
in
enter
jmp
jne
push
mov
xor
adc
mov
fcmove
and
nop
call
ret
sti
inc
std
cwtl
or
ret
in
clc
in
add
xor
ret
insl
mov
pusha
mov
inc
and
and
rcll
jae
push
add
push
cmp
mov
mov
mov
lock
jmp
xchg
push
out
into
pop
aad
vpaddb
xchg
and
jle
push
inc
fdivl
add
xor
jbe
fwait
ret
sbb
push
sub
and
pop
rclb
ss
add
into
mov
shr
inc
in
adc
mov
fmull
and
or
ret
push
ror
push
cld
mov
popf
inc
mov
ret
mov
adc
add
push
hlt
mov
sub
mov
mov
shlb
or
dec
loop
in
lret
or
mov
icebp
scas
subb
stos
ret
jl
cmp
std
mov
movsl
pop
sub
fildl
push
add
mov
or
lcall
jg
push
shrl
mov
inc
xchg
sbb
aam
cld
addb
sbb
push
das
fisubrl
push
call
add
mov
dec
fcmovne
push
das
mov
push
aam
and
cmp
sarb
rorb
popa
mov
les
pop
add
push
add
jl
add
adc
push
push
push
or
lock
lock
and
xor
mov
lret
ljmp
add
fcoms
shll
addb
fcmovnb
xor
hlt
test
insl
or
cmpsb
mov
fiaddl
add
in
lret
inc
rolb
inc
js
fs
out
sti
push
adc
mov
sbb
ret
sbb
in
std
inc
enter
cmp
clc
je
test
call
xor
xchg
test
leave
ljmp
loop
inc
push
adc
lock
stos
shrd
sbb
mov
clc
cld
mov
lea
mov
adc
cltd
jle
push
adc
pop
or
mov
inc
and
lock
sahf
inc
push
push
test
mov
pop
aam
jl
imul
rcrl
fsubs
add
enter
xchg
dec
nop
fdivs
add
fadd
sub
insb
insl
adc
pusha
pusha
imul
push
add
fidivrs
fcmovb
dec
js
mov
loope
xchg
rolb
dec
in
push
in
sbb
xchg
xor
mov
inc
push
mov
movb
ret
push
ud0
mov
das
test
testb
inc
mov
shrl
test
add
xchg
je
mov
mov
in
jo
add
pop
mov
mov
add
mov
ret
rorb
adc
jae
scas
or
ja
push
mov
jmp
mov
fwait
mov
and
lea
inc
xor
call
ret
std
into
sub
rol
inc
stos
stos
test
andl
inc
xor
test
repnz
fs
push
sbb
sbb
ss
js
std
dec
cli
mov
inc
or
dec
pushl
xor
cmpl
popa
mov
fisubrl
pop
sbb
inc
jmp
sub
mov
push
addb
pop
push
daa
popf
rolb
dec
mov
enter
lea
call
xor
pop
lds
cwtl
or
adc
mov
push
mov
mov
mov
aaa
cmc
dec
pop
push
icebp
mov
jb
and
push
add
sub
push
xchg
repz
mov
add
inc
js
xchg
lea
or
mov
aas
sahf
retw
jbe
jne
jno
jmp
adc
or
jo
mov
xchg
or
xchg
pushf
adc
fs
pop
faddp
push
jo
pusha
dec
test
pop
xor
minps
stos
inc
jmp
movsb
push
mov
call
pop
pop
les
add
test
cmp
test
jne
sub
xorb
ljmp
insl
push
cs
sbb
adc
jae
loopne
adc
pop
jno
in
scas
sbb
add
push
hlt
cmp
test
xlat
push
mov
push
stc
imul
sbb
xchg
xlat
mov
call
xor
add
inc
jl
bound
or
push
dec
jmp
sub
jle
inc
orb
test
mov
push
pop
mov
ret
cld
in
bswap
and
test
jbe
adc
dec
jmp
stc
or
clc
or
xor
inc
ret
xchg
ss
in
and
pop
mov
imulb
fnop
aaa
cmp
es
pushf
int3
scas
int3
call
ja
shrb
bound
cli
lret
and
sbb
test
jecxz
push
push
mov
ljmp
xchg
icebp
add
pop
loop
mov
shrb
push
push
jbe
inc
loope
clc
inc
cmpl
popa
dec
call
cmp
fildl
sub
out
and
add
and
mov
lcall
adc
inc
shrb
dec
jae
pop
push
outsl
sub
inc
mov
repnz
sub
call
inc
shlb
ficoml
gs
xor
into
inc
insb
test
sbb
rcll
add
aaa
loopne
adc
lock
mov
push
dec
xchg
push
mov
jo
push
pop
xchg
mov
lock
push
or
push
add
and
sbb
adc
sarb
lock
test
rcll
inc
inc
lea
jl
push
jmp
aam
jle
scas
test
add
mov
orb
popf
adc
dec
mov
mov
cwtl
push
aam
mov
sub
test
ret
in
aaa
mov
adc
cmpsl
mov
aaa
lods
dec
loopne
xor
std
mov
adc
mov
inc
hlt
push
mov
add
lods
or
cmpsb
call
divl
ljmp
mov
test
js
insb
andl
test
inc
cmp
out
ds
ds
jo
jl
clc
dec
mov
mov
cmp
shl
mov
sub
movsb
mov
xor
test
fisubrl
fiadds
xor
push
and
dec
test
or
das
sahf
or
adc
cmc
shll
cmpl
jp
ret
or
nop
clc
pusha
sbb
js
pop
or
bound
pop
bswap
or
push
push
pop
fadds
mov
jge
pop
add
or
pop
dec
test
outsb
push
push
xchg
incl
add
repnz
push
sub
mov
mov
jle,pn
add
pop
sbb
outsb
addb
nop
clc
ja
and
pop
decl
rclb
pushf
addb
ljmp
push
je
mov
jbe
jg
bound
inc
test
adc
jne
mov
and
fdivrp
pop
pop
jmp
ss
shrl
gs
inc
neg
or
cld
and
cld
lea
pusha
dec
jne
es
inc
mov
aad
dec
aam
shr
stos
fsubs
inc
push
sbb
sbb
pop
cmp
xor
mov
pop
cmpsb
xchg
inc
mov
sbb
jbe
out
ficoms
mov
pop
xor
addr16
je
jge
add
rorb
pop
or
and
je
jmp
adc
push
xor
mov
sar
cmovb
push
notl
inc
aam
js
or
adc
push
pushf
loopne
mov
push
adc
outsb
mov
movsl
add
and
mov
movb
or
sub
adc
xor
loopne
push
or
int3
sbb
add
ret
cmp
cmp
adcb
jge
mov
mov
inc
shlb
incl
sub
sub
cwtl
push
dec
lods
pop
aaa
mov
sub
bound
aaa
and
insb
in
rolb
lock
sub
in
loopne
adcl
in
mov
data16
mov
test
mov
lods
shll
stos
xchg
sbb
cmp
mov
clc
lods
pop
cld
ds
inc
mov
mov
jl
jle
lds
adc
xchg
mov
inc
mov
test
and
mov
push
movsb
adc
sbb
jmp
sbb
xor
aam
outsb
inc
push
stos
adc
bound
xchg
mov
adc
adc
loopne
mov
push
push
inc
xchg
sub
dec
loop
shr
jae
roll
mov
ja
mov
fcoml
sub
pop
dec
add
push
and
add
movl
or
rorb
ss
addr16
mov
ret
cmp
sub
xor
sub
jge
and
or
push
dec
dec
jo
xor
iret
ds
add
int3
enter
push
jb
cld
or
cs
adc
data16
dec
inc
or
xchg
xlat
jbe
fsub
stos
popf
ret
adc
xor
pop
mov
outsb
dec
imull
push
pop
test
mov
inc
dec
and
insb
test
std
rcll
fimuls
nop
incl
lods
sahf
ss
daa
outsl
push
popf
rorb
lea
and
lea
test
nop
sub
shlb
enter
add
les
lods
out
add
sub
mov
mov
and
and
or
dec
push
js
adc
push
mov
push
pop
push
lock
mov
lea
clts
add
roll
ret
call
inc
inc
lock
mov
icebp
outsb
leave
popa
xor
pop
int3
mov
mov
sub
jo
or
jle
nop
cld
cli
push
inc
outsb
add
cmp
mulb
pop
out
inc
pop
jmp
iret
lock
or
cmp
pop
dec
pop
mov
push
mov
add
je
rorl
sbb
mov
lods
ficoml
push
push
sbb
pop
cmpsb
add
inc
movsl
dec
push
jno
js
xor
daa
inc
imul
dec
or
xchg
orb
adc
je
fildll
and
push
xor
ret
cmpsb
xchg
sbbl
xor
lahf
test
mov
and
js
add
enter
pusha
dec
or
sbb
adc
sbb
and
dec
lea
xlat
jge
jle
jb
dec
clc
inc
sbb
push
lret
push
cltd
and
adcl
or
cwtl
dec
in
mov
or
cmp
call
mov
add
xchg
stos
mov
cs
in
jb
and
xchg
xchg
dec
push
mov
mov
and
loopne
mov
and
or
xor
icebp
cmp
or
subb
sahf
or
sbb
xchg
das
add
sti
test
and
fidivl
testb
mov
cmp
add
cmp
fdivl
fidivs
sahf
sbb
pop
add
lds
clc
dec
inc
mov
fmull
test
lods
loop
jl
xchg
jo
xlat
leave
add
mov
imul
add
je
imul
cmpsb
push
lods
sbb
push
inc
push
ljmp
std
lcall
mov
popa
test
neg
test
xorb
adc
add
dec
add
cmc
pop
pop
jg
jo
inc
ljmp
xchg
inc
hlt
and
dec
dec
jle
testl
cmp
inc
adc
xorb
adc
push
push
xor
and
pop
sub
leave
push
xor
stos
pushf
test
shlb
test
insb
xor
or
mov
pop
xlat
push
sub
pop
and
sbb
es
push
addl
push
and
mov
push
or
pop
or
or
push
adc
pop
scas
pop
mov
mov
shll
lods
daa
aad
inc
data16
rclb
jne
orb
add
jo
add
cmp
insb
jmp
les
push
gs
pop
sbb
inc
add
push
call
test
fs
inc
adc
jg
or
out
popf
cmp
add
add
add
or
jae,pn
or
rolb
cmp
lret
or
mov
push
mov
xor
lods
out
cld
loope
lea
js
and
push
or
test
inc
test
pop
pop
in
inc
add
rolb
xchg
enter
dec
pop
xor
pusha
jge
lock
std
push
mov
imul
loopne
adc
mov
rcr
xorb
test
or
jl
inc
or
ss
inc
pop
push
cmp
mov
sbb
into
shlb
stos
lea
movsb
rol
fwait
dec
push
fcmovu
cmp
jmp
push
and
push
addr16
jae
add
or
js
adc
push
loopne
adc
mov
xchg
sbbb
lods
jmp
and
stc
or
sti
push
hlt
and
clc
push
add
add
dec
jae
dec
xchg
inc
mov
sbb
sarb
out
push
or
push
mov
int3
test
pop
add
add
loopne
push
adc
xchg
sbbb
mov
push
mov
push
imul
mov
lcall
cmc
sub
rorb
and
lahf
adc
lret
clc
imul
hlt
jmp
outsl
push
rdmsr
xchg
mov
mov
mov
mov
lret
call
sbb
jbe
test
lods
dec
fsubl
add
scas
or
xchg
pop
push
push
insb
fildl
cld
lcall
movsb
arpl
mov
jmp
nop
sbb
insb
xor
mov
mov
pop
xlat
jb
sub
or
mov
and
es
lods
push
add
push
shll
into
push
clc
sar
mov
lret
push
xchg
test
xor
jne
lods
mov
daa
je
adc
push
bound
faddl
insb
pop
pushf
filds
int3
mov
dec
mov
push
adc
mov
adc
cmp
push
ficomps
int3
sub
roll
int3
cli
and
push
std
sbb
hlt
mov
xor
mov
outsb
stc
cmp
or
in
mov
cwtl
cmp
out
inc
in
add
inc
stos
mov
aas
cs
inc
int3
inc
cmp
push
les
push
push
xchg
and
les
cmp
mov
xor
xchg
inc
inc
pop
mov
lock
nop
pop
xchg
adc
test
fbld
loope
adc
adc
loopne
xor
stos
cs
shlb
adc
loop
popa
and
mov
adc
sub
cmp
mov
rcrb
or
sbb
jo
test
addb
and
movsb
addl
fs
in
add
add
mov
or
sbb
lret
ss
call
dec
push
add
mov
mov
adc
push
push
data16
rcll
or
mov
popa
jl
sbb
mov
inc
push
mov
ret
jl
add
shrb
mov
ja
xor
or
cmp
push
adcl
clc
xor
sbb
jmp
fcompl
ret
sbb
lea
fadds
sbb
aad
adc
pusha
lds
adc
imul
inc
xchg
cld
add
sbb
pop
int
sbb
daa
test
loopne
push
or
shr
ret
and
inc
incl
xor
mov
int3
fs
push
xor
adc
jmp
mov
sbb
notl
cmp
mov
cld
test
and
lcall
cmp
ret
cmp
and
fldl
xorl
ret
sbb
test
sub
rcrl
lea
mov
mov
pop
test
xor
mov
lea
std
stos
aas
cmpb
jmp
dec
rclb
or
cs
sbb
push
stos
shrl
shlb
clc
inc
orb
push
test
mov
das
or
push
sbb
int3
mov
sbb
scas
in
or
call
adc
pop
pushw
lret
xchg
pusha
add
loopne
push
fisttps
push
enter
mov
in
and
cld
mov
mov
inc
test
out
jg
sub
ret
push
ret
cmp
push
cmp
adcl
push
sbb
fs
adc
sub
fwait
int3
jne
addr16
movsb
decl
or
leave
gs
add
std
fwait
sub
rolb
add
ljmp
adc
pop
and
in
mov
sbb
push
add
mov
jle
xchg
jnp
ror
cmp
lea
jne
xor
xchg
push
cmp
mov
push
lock
jbe
rcr
shlb
inc
push
std
push
inc
cld
jne
inc
call
push
int3
inc
or
fcmovu
ds
pusha
adc
lods
add
orb
push
add
xchg
push
xor
jmp
dec
les
rolb
cmpl
outsl
jo
adc
into
in
lock
fs
push
or
push
sbb
jo
inc
sbb
xor
push
fadd
pop
or
cmp
mov
inc
sub
int3
lods
je
mov
push
ljmp
clc
adc
cld
or
add
push
adcl
adc
push
pop
test
add
push
std
outsl
test
inc
and
cmpl
lsl
in
mov
clc
pop
pusha
mov
in
insb
mov
loope
push
or
xchg
pop
stos
cmpsl
mov
inc
loopne
loopne
or
mov
imul
mov
inc
leave
inc
pop
inc
adc
ret
jbe
pop
dec
dec
xor
es
aaa
push
adc
xor
jbe
aam
outsb
shl
sub
fists
jo
ds
pop
or
jb
movsb
add
mov
sbb
mov
pop
xor
mov
or
push
orb
cltd
mov
mov
mov
ret
adc
int
push
adc
xchg
xor
adc
mov
and
sahf
and
jl
mov
mov
xchg
mov
sbbb
cmc
int3
cmp
pop
subps
mov
cmp
xchg
or
dec
aad
cmp
lods
push
lock
xchg
mov
xchg
cli
pop
jno,pt
fadd
std
lods
ret
ficompl
cwtl
movsb
outsb
push
lock
jl
push
jb
inc
mov
or
stc
lahf
jo
shr
fidivs
mov
sar
nop
mov
shrb
push
adc
idivl
cmpsl
lea
sbb
rorl
or
dec
push
adc
jno
lds
cmp
xor
sti
add
mov
int3
push
mov
and
es
mov
mov
mov
dec
addl
jecxz
add
adc
inc
xchg
mov
mov
icebp
jg
data16
in
lock
nop
jge
sub
push
rol
push
pop
push
inc
rolb
outsl
push
push
insb
popa
test
dec
pop
inc
cmc
dec
popf
mov
aam
xor
pushf
sub
push
push
ret
and
scas
cmp
sub
xchg
sbb
scas
mov
add
jbe
int3
sbb
test
pop
inc
pop
lock
repz
or
push
out
loope
aas
cmpb
jp
xchg
sub
jo
std
push
ret
loopne
sub
xchg
lds
pusha
mov
into
push
cld
or
adc
shrb
add
test
dec
rcll
call
sar
jo
aam
lea
out
aas
cmpl
or
call
push
cmp
ret
push
push
and
jl
mov
fimuls
inc
jecxz
push
mov
jp
shl
cmp
btc
orb
or
decb
call
xor
inc
imul
inc
xor
fiaddl
sub
testl
adc
add
in
sbb
cli
lods
cwtl
inc
fcomps
psllq
push
lcall
andl
mov
or
push
shlb
mov
sbbb
pushw
int
mov
addb
push
push
xchg
xorl
mov
jb
insb
test
rcr
or
outsb
loope
je
add
push
ret
xchg
pusha
and
xchg
inc
adc
es
adc
fcoms
movsb
aam
test
jp
je
cli
jo
pusha
xchg
jmp
in
mov
sbb
mov
insb
outsb
int3
add
arpl
mov
jb
loope
mov
js
lea
pop
mov
mov
and
loopne
ret
or
xor
ljmp
sbb
je
int3
xor
leave
imul
xor
mov
loope
mov
stos
test
add
add
nop
adc
dec
pop
das
adcb
ss
hlt
loope
lock
mov
push
pop
out
and
inc
sbb
loopne
std
adc
jmp
int3
dec
push
insb
and
ret
or
or
mov
sbb
pop
into
mov
or
popa
icebp
mov
sbb
cmp
inc
daa
push
xchg
mov
lods
lods
jg
fmull
test
xor
push
outsl
mov
gs
rclb
dec
push
jg
imul
mov
mov
gs
xchg
xchg
cmp
loopne
mov
icebp
cmp
cmpxchg
cmp
lock
nop
pop
pop
flds
fiaddl
mov
xor
and
push
push
int3
push
pop
rorb
dec
in
inc
inc
add
ret
rol
ret
fs
jp
fcoms
push
jbe
ret
pop
lret
enter
mov
call
fstps
idivl
pop
adc
leave
aam
shrl
push
repnz
test
cmpsb
push
or
test
or
add
jecxz
mov
sarl
lea
and
cmp
adc
adc
jecxz
ret
add
adc
adc
add
shlb
push
jo
sbb
push
inc
stos
movlps
mov
push
cmp
jbe
inc
pop
outsl
mov
rol
adc
jo
adcl
out
xchg
push
enter
sar
mov
add
inc
mov
cmp
and
jne
in
movsl
test
out
cmpsb
rolb
pop
mov
jle
or
push
add
pop
cwtl
fsubs
gs
invd
add
popa
xchg
bound
or
or
rolb
movsl
dec
or
adc
jl,pt
rcl
xchg
push
add
fstpl
ss
sub
ret
nop
pop
add
loop
mov
or
mov
test
insl
cmp
lods
mov
movb
push
inc
ss
aad
add
es
adc
cs
test
pop
cmp
clc
push
push
jb
fdivl
cmp
add
push
adc
cld
std
mov
and
mov
xlat
ret
xor
ljmp
or
or
xor
scas
xor
cmp
cli
jne
or
and
loope
les
mov
sarl
adcl
gs
push
into
outsb
push
jo
or
hlt
mov
inc
sahf
push
aaa
mov
std
js
cmpsb
lcall
and
cmpsl
lock
pop
cwtl
adc
dec
xor
ljmp
gs
in
hlt
int3
scas
lds
lret
add
push
sbb
pop
cmp
daa
or
adc
inc
rcrb
or
cwtl
sub
repnz
cmp
jmp
mov
jl
mov
call
das
ss
jg
test
jle
lods
imul
inc
shll
fldenv
dec
rorb
inc
rcl
add
add
mov
jbe
push
lcall
movsb
fcmovb
cmp
jo
inc
rep
or
cli
call
xchg
jb
in
jbe
or
std
xor
scas
mov
std
shlb
mov
loope
fisubrl
xor
mov
push
push
ret
call
rclb
decb
add
cs
push
leave
ds
andl
mov
sbbl
inc
mov
jb
ljmp
inc
lea
push
imul
add
sar
pop
push
add
adc
push
xor
ret
int
sub
cmp
repz
cmp
cmp
add
test
add
push
adc
test
cld
outsl
push
pop
push
pop
mov
test
nop
test
call
hlt
test
lock
cmpl
mov
lret
cmp
rolb
or
lock
push
out
push
add
mov
cli
adc
push
ss
cs
jmp
jne
dec
outsb
lea
dec
std
ret
lcall
decb
iret
cmp
mov
jne
stc
clc
pusha
stos
and
dec
push
cmp
pop
add
mov
roll
enter
xchg
push
adc
adc
pop
dec
gs
shrl
push
adc
inc
out
push
pop
push
adc
outsb
aaa
xor
pop
mov
adc
lea
fnstcw
test
mov
mov
int3
add
pop
pop
dec
ret
imul
xor
lods
outsb
xor
push
loopne
inc
ret
stos
sbb
xlat
rcll
test
out
push
sub
outsb
or
movsl
test
int3
add
xor
fs
cmp
cmpsb
inc
mov
mov
sbb
cmp
ret
loopne
push
outsl
lods
cmp
add
push
cmp
jbe
add
ds
lods
bound
pushf
add
mov
incl
dec
arpl
data16
mov
mov
iret
in
insb
sbb
jge
cmp
sbb
sub
push
aam
mov
mov
sahf
mov
push
push
jb
mov
movb
adc
fs
mov
xor
inc
or
lock
movsb
jmp
loop
cmp
jo
sub
inc
add
inc
mov
pop
dec
lods
pop
push
mov
and
cltd
cs
jo
sbb
outsb
push
pop
cmp
pushf
std
mov
xchg
add
mov
jmp
fcomip
sub
sub
pushl
rcll
mov
mov
inc
leave
imul
sbb
lock
ret
adc
dec
ljmp
sub
test
xchg
add
jo
ret
rclb
leave
xchg
pop
cvtpi2ps
add
adc
inc
cmp
pusha
adcb
nop
inc
cld
dec
dec
mov
push
xor
jne
add
aas
call
ret
or
rcrb
mov
push
je
sub
dec
fwait
insb
pop
xor
addl
cmp
mov
and
shlb
jmp
fs
add
js
js
add
cmpl
dec
push
cmpl
decl
sub
pushf
dec
inc
jmp
subl
int3
in
push
loopne
orb
lock
inc
enter
or
pcmpeqd
out
test
adcl
cmpsl
mov
adc
scas
outsl
mov
ret
int3
cmp
push
xlat
pop
xor
jle
pop
enter
inc
lret
jmp
call
mov
pushf
xchg
xor
pop
mov
cmp
pop
and
lock
sub
movl
jp
in
mov
jg
add
sti
dec
pop
or
mov
ffreep
jmp
fnstsw
fscale
mov
in
adc
push
xor
and
xorl
xchg
push
insb
pop
lea
or
stos
sub
pop
xlat
push
test
sahf
add
insb
xchg
fildl
out
add
mov
shr
jne
movsl
fwait
inc
inc
pusha
fs
cld
mov
push
mov
decb
icebp
and
fidivs
mov
sbb
testl
dec
pop
xor
pop
or
mov
call
shlb
in
lcall
add
cmp
or
or
inc
or
clc
imul
adc
dec
scas
and
nop
lcall
out
std
add
test
fisttpl
xchg
mov
dec
fmuls
pop
xchg
arpl
rorl
add
add
dec
and
dec
insl
in
int3
out
imul
mov
in
pop
es
sbb
add
push
rolb
sub
dec
pop
push
sub
add
cmp
adc
mov
mov
lcall
rorb
and
inc
adc
dec
es
and
stos
aaa
and
xor
shrb
lcall
inc
xor
pop
jb
add
sub
mov
stos
or
push
inc
cmp
hlt
stos
mov
adc
bnd
adc
icebp
adcb
shll
mov
sarb
adc
into
or
cmp
dec
ror
mov
jg
pop
xchg
lock
or
aad
stc
add
popa
sti
jbe
sbb
adc
jne
and
push
mov
mov
cmpb
fmull
pop
pop
test
andb
mov
add
clc
negl
xor
lock
cmpb
mov
pop
jns
sar
loope
test
jle
jne
push
push
pop
nop
inc
adc
incl
ret
out
pop
add
xor
stos
fcoms
stos
test
dec
pushf
add
or
push
xchg
test
add
adc
outsb
or
idiv
rorb
add
cmp
cs
or
cmp
adc
inc
fwait
or
jmp
inc
push
push
mov
pop
jo
jecxz
and
dec
or
sub
add
rcrb
addl
cli
jmp
add
sbb
inc
js
jmp
dec
bound
cs
inc
test
xor
mov
fldenvs
lods
inc
std
adc
ds
mov
sub
xchg
mov
inc
adc
jae
mov
mov
xor
mov
add
outsb
gs
mov
call
in
and
push
dec
pop
push
dec
adc
ds
je
outsb
andl
ljmp
cmp
adcl
mov
outsb
push
inc
pusha
or
jb
lock
and
lock
cs
or
or
xor
xchg
scas
je
ret
ss
out
inc
rolb
std
jmp
loope
xchg
jne
mov
dec
xchg
into
popf
inc
out
mov
movsb
lock
int3
mov
add
adc
xor
std
xor
clc
scas
cmp
sbb
ds
fisubrl
push
push
clc
inc
adc
add
loope
mov
and
ret
outsl
js
aam
mov
ret
fdivrl
inc
std
push
pop
dec
rclb
fmul
fidivs
testb
mov
jle
incl
or
xchg
inc
mov
dec
xor
out
les
jne
mov
lea
push
mov
inc
js
xor
pop
and
dec
lods
call
mov
add
lock
adc
movsb
lret
hlt
sbb
rorl
pop
pop
or
cld
sbb
push
or
jg
mov
test
pop
call
pop
mov
sahf
or
push
xchg
or
inc
scas
jmp
adc
je
add
icebp
push
sar
clc
lock
mov
ret
ficomps
scas
xchg
mov
in
sbb
insb
bound
sbb
and
insl
cvttps2pi
push
or
out
add
stc
add
aaa
pop
and
ss
inc
mov
cltd
dec
adc
cld
shlb
jge
cmp
push
push
rclb
xchg
call
push
int
cltd
push
test
and
sub
add
les
shrl
or
jo
mov
inc
lea
add
dec
in
add
xchg
imul
pop
inc
pop
mov
sub
cs
push
mov
fidivl
pop
fdivr
xlat
jb
rcll
xchg
in
popf
add
dec
cmpl
test
add
add
sbb
push
pop
add
mov
add
adc
inc
push
push
pop
sub
aad
lock
andl
imul
xor
push
icebp
mov
aad
movsl
xor
add
inc
in
rorb
mov
push
mov
testl
ja
mov
adc
push
jge
pop
xor
addb
mov
xor
push
inc
call
jnp
bound
and
adc
add
cmp
popa
pop
adc
mov
out
data16
and
pusha
push
jo
cmc
inc
push
pop
gs
rorb
mov
imul
imul
pop
push
call
out
push
arpl
filds
les
ds
scas
fiadds
loop
push
dec
inc
inc
enter
adc
jb
fwait
jb
shr
xor
pusha
stos
adc
adc
mov
adc
dec
arpl
cwtl
addb
enter
cmp
je
sub
pushf
mov
sbb
mov
sti
or
push
gs
pop
shlb
fmull
dec
test
xchg
jge
loope
fisubs
roll
fdecstp
xchg
out
mulb
in
cmp
incl
sar
aaa
inc
repz
push
pop
adcl
add
cwtl
inc
push
cld
cwtl
es
test
sbb
jo
push
pop
cld
push
cmp
adc
dec
dec
jmp
cwtl
or
mov
and
test
mov
adc
loopne
push
roll
hlt
and
xor
and
mov
inc
ljmp
or
addr16
idivb
add
das
lock
jecxz
adc
dec
test
fsubr
ret
sbb
pop
in
clc
fcmovnu
jno
fcompl
push
and
mov
mov
fsubl
inc
dec
xchg
adc
pop
insb
and
and
push
mov
prefetchw
aaa
and
sub
fwait
adc
jecxz
sbb
fsubr
push
aas
dec
insl
fcmovnb
adc
je
fadds
push
leave
add
push
mov
xchg
in
mov
add
xor
ret
dec
push
mov
cld
and
or
cmp
inc
jo
mov
je
inc
cli
mov
mov
push
inc
mov
rcrb
mov
lock
outsl
mov
push
add
push
inc
mov
js
pop
push
or
cmpsb
fistps
pop
cmp
push
inc
call
add
add
in
cld
pusha
call
mov
mov
cwtl
mov
inc
inc
rolb
cmc
ret
test
adc
rcr
lea
sarb
xchg
xor
inc
jecxz
enter
jl
cld
or
outsl
je
dec
andb
mov
push
paddd
or
add
stc
pop
cmpsl
mov
in
ss
pop
test
push
loope
or
clc
dec
test
add
add
jne
cmp
out
les
cmc
mov
roll
lods
pushw
pop
ret
rorb
fimull
push
push
push
and
mov
mov
mov
lds
jns
cmpsl
mov
jne
jo
push
bound
push
jne
scas
popf
add
and
sub
jnp
jmp
jno
std
pop
test
jg
leave
adc
add
bswap
js
mov
push
and
pushf
mov
loope
and
and
repnz
add
adc
out
xor
movsb
cmp
pop
and
scas
movsl
dec
ret
sbb
lds
push
and
sti
sub
push
pop
clc
cmp
fidivs
mov
ret
int3
outsb
jne
add
add
sub
xor
xchg
out
jno
addl
sub
cwtl
lods
add
inc
adc
outsl
push
mov
xchg
xor
and
add
dec
lock
pusha
or
jo
fs
and
pop
aad
xchg
into
mov
subl
mov
mov
je
dec
push
jmp
dec
and
stc
cmp
xchg
stc
push
out
idiv
sub
or
jecxz
pushf
push
es
dec
clc
std
xor
pop
jle
jb
in
jne
icebp
es
pop
outsb
sub
cmp
mov
and
data16
mov
push
add
orb
lock
add
mov
push
xchg
pop
add
insb
lcall
adc
fisttpl
push
or
sub
pop
inc
pop
cmpsb
mov
xchg
ljmp
mov
pop
jb
movl
mov
jl
fs
js
jmp
rclb
sbb
bound
xor
arpl
sbb
cwtl
test
add
add
and
add
outsb
aaa
lret
test
pop
inc
push
mov
idiv
test
aad
sub
mov
adc
loope
cli
cmpsb
or
repz
sbb
jle
mov
adc
sub
aam
hlt
call
xchg
and
pushf
jbe
push
add
lret
push
popa
xchg
xor
pop
xchg
fldenv
lock
cmp
adc
dec
pop
xor
les
push
shlb
pop
outsl
lea
sbb
std
or
xchg
push
lods
nop
inc
cs
and
jmp
cmc
call
pop
add
incl
data16
in
sahf
mov
ret
arpl
test
insb
push
sbb
gs
inc
push
repnz
sub
cmc
xor
and
dec
jne
rclb
xchg
cltd
cmp
lock
jno
xchg
dec
andb
add
or
push
jne
inc
add
cs
je
mov
push
fwait
int3
lock
mov
mov
ljmp
xchg
inc
xchg
lret
lods
dec
data16
gs
rolb
push
push
call
int3
mov
fists
add
inc
stc
adcl
mov
rclb
outsl
shll
push
adc
push
sarb
xor
push
push
mov
cmp
pop
sbb
mov
test
or
cwtl
ss
jg
xchg
and
repnz
divb
sub
aaa
cmp
mov
and
cmp
push
cmp
xor
xor
dec
loope
mov
ljmp
loope
mov
cld
add
dec
ror
inc
add
sbb
xor
mov
add
js
cmpsb
xor
rorb
icebp
xchg
fucomip
xor
add
shrb
call
pop
adc
add
sbb
jo
or
inc
pop
mov
mov
push
bound
test
inc
add
ljmp
ss
or
cmp
jmp
pop
dec
cmc
inc
push
inc
or
push
xor
shrb
xchg
call
dec
jbe
sub
adc
jns
test
fs
sbb
xor
mov
adc
sti
and
pop
lock
rorb
add
gs
jbe
jle
call
mov
jo
inc
sbb
cmpsb
sub
out
mov
mov
inc
push
in
aam
mov
mov
shlb
in
syscall
sub
in
add
ffreep
adc
fs
call
movsb
mov
push
mov
sub
iret
adc
push
dec
cmp
and
and
xor
mov
xor
or
rcll
jae
push
cmp
push
int3
stos
mov
jg
fimull
in
push
add
add
adc
popa
je
iret
inc
push
cmpsb
pop
adc
mov
call
and
popa
and
cwtl
cmp
sub
or
add
test
or
xchg
dec
loop
pop
mov
xor
std
lock
cmp
int3
inc
adc
mov
je
cmp
mov
jo
test
sbbl
fdivl
push
push
nopl
add
test
cmp
ret
or
fisubs
mov
test
pop
inc
rcrb
and
add
andb
jl
sbb
xor
out
xchg
cmc
sub
popa
jle
mov
aaa
or
dec
insb
rorb
sarl
xor
mov
incb
cmp
xchg
ds
mov
ror
adc
add
xchg
mov
pop
gs
jmp
cmp
clc
in
lret
negb
daa
adc
js
rclb
pop
sar
xor
push
mov
pusha
and
imul
cld
and
or
adc
push
stc
adc
jge
imul
les
sbb
jb
outsb
add
clc
decl
mov
push
test
rolb
int3
adc
test
and
addl
adc
mov
lock
and
mov
push
enter
nop
mov
arpl
addl
cld
dec
xor
cld
out
push
les
sar
in
inc
or
mov
mov
lea
test
pop
add
stc
push
push
mov
movsl
jmp
or
je
pop
rcr
daa
into
test
add
in
insb
aas
jl
repnz
cmpsb
push
inc
iret
mov
mov
insl
adc
cmp
jae
dec
int
sbb
xchg
cmpsb
adc
push
ret
pop
test
add
jmp
push
pop
dec
ds
mov
out
mov
push
inc
sti
mov
cld
xor
xor
sbb
lea
pop
add
inc
and
xchg
xchg
sub
loop
jnp
js
or
mov
fiaddl
adc
mov
push
xor
das
and
mov
sub
pop
shll
and
push
cmovne
ljmp
int3
or
lock
mov
test
in
stos
inc
jne
sub
popa
inc
lods
pop
dec
sbb
sahf
cwtl
aad
adc
jo
jo
push
push
ds
xor
xor
andl
mov
decb
in
sub
xor
add
or
pop
push
push
int3
les
dec
adc
js
xchg
push
cmp
jle
sti
fs
xchg
mov
into
shlb
and
mov
push
arpl
pop
pusha
cmp
adc
dec
jo
in
xor
adcl
sbb
into
pop
pop
cmp
cmc
js
or
mov
jl
xor
stos
add
int
jge
mov
aaa
pop
mov
cwtl
js
push
jne
hlt
aaa
clc
arpl
movsb
xor
fildl
je
in
mov
shl
jne
stc
in
inc
mov
cs
push
xchg
xlat
mov
jmp
shlb
popa
sub
fdivp
pop
subb
cli
push
mov
lcall
jb
inc
loopne
mov
pop
mov
and
lock
inc
xchg
lcall
icebp
hlt
mov
jmp
sbb
jmp
lret
rcr
subl
inc
ret
rcl
push
pop
push
ret
stc
push
pop
inc
or
xor
xor
lock
inc
stos
and
adc
lea
xor
inc
cmpl
loope
mov
mov
movsb
cmp
jbe
js
fiaddl
js
mov
add
cmp
mov
test
add
in
insl
adc
scas
in
les
mov
xchg
or
data16
call
loopne
push
dec
into
pop
leave
hlt
jg
mov
mov
add
xor
cmp
test
clc
adc
cmp
mov
adc
push
sub
or
lcall
xor
pop
mov
sub
repnz
sbb
js
cmp
pop
xor
iret
into
loop
dec
inc
push
sbb
sub
mov
adc
and
mov
test
pusha
mov
shlb
adc
out
adc
add
sbb
xor
rcrl
cmp
test
ljmp
sbb
call
call
add
push
int3
lea
and
loop
jb,pn
je
shl
adc
push
cmp
negb
mov
lret
ss
mov
inc
add
shlb
jo
or
cwtl
popa
das
inc
sub
dec
push
add
andb
test
fptan
js
clc
in
lock
dec
xor
add
lret
je
cmc
sbb
decb
call
add
add
inc
sub
cmp
je
out
mov
mov
push
xchg
inc
idiv
popf
cli
cmp
push
push
scas
jnp
sarl
or
aam
and
test
enter
pop
and
int3
mov
cpuid
rcrb
push
mov
mov
ficompl
loop
jbe
sbb
shlb
adc
pushf
jp
push
mov
mov
lock
inc
and
push
scas
shrb
add
lock
push
xor
rorl
les
aam
lcall
fsub
sub
mov
movsl
into
ret
clc
xor
jl,pt
cmpsl
mov
fld
pusha
pop
loope
rolb
repnz
xchg
jne
push
inc
mov
sar
nop
sarb
mov
call
stos
fdivrl
push
adc
movb
or
sbb
insl
cmp
loope
push
xlat
pop
and
xor
or
push
pop
cmp
int
pusha
jmp
sbb
dec
or
gs
cmp
cld
test
push
or
and
fidivrs
pop
add
test
rclb
and
mov
dec
repnz
push
cmp
adc
mov
adc
shrb
xchg
or
fs
loop
mov
sahf
cld
mov
mov
and
or
test
cmp
es
aam
push
adc
push
popa
mov
or
sti
xor
cs
leave
imul
or
aam
in
mov
int
jl
pop
sub
orb
add
ljmp
clc
pop
sbb
jge
lock
mov
jle
sbb
or
sub
clc
sti
push
push
mov
inc
clc
shrl
and
adc
push
mov
pop
xchg
ret
xor
cmpsb
add
fsubrs
call
test
insb
clc
xchg
mov
leave
je
cmp
nop
jle
call
pop
test
push
adc
aaa
pushl
insb
call
xchg
adc
sbb
xor
adc
movsb
aam
add
pop
cld
cld
jge
jb
enter
pop
inc
dec
mov
xor
dec
push
je
icebp
out
cmpsb
in
jbe
jmp
push
jl
pop
push
inc
sar
or
mov
add
mov
lsl
faddp
gs
xor
cwtl
fisttpl
inc
add
dec
and
mov
cmpsl
sub
aas
out
add
call
gs
sub
xchg
push
cld
fnstsw
ffree
dec
fs
rorb
push
fisubrs
or
push
pop
add
mov
push
mov
push
inc
loop
and
std
push
add
add
ss
cmp
clc
add
push
cmp
data16
js
adc
mov
sbb
fs
fisubl
aaa
jno
clc
ljmp
je
or
jl
icebp
mov
cld
xor
fs
or
jmp
bound
and
xchg
pop
loope
cli
push
push
add
pushf
xor
or
push
add
dec
test
or
push
addr16
or
add
call
add
xorl
xor
insb
js
outsl
insb
add
dec
lcall
fcmovbe
movl
nop
mov
xor
cs
push
test
jne
lea
and
je
in
add
call
jno
xor
xor
pop
jl
xchg
push
push
or
mov
pusha
ret
mov
shll
adc
loopne
xchg
in
addr16
lret
inc
jae
xchg
shlb
inc
xchg
shrl
xor
fnsave
push
adcl
or
ret
fcmovnu
inc
loope
add
add
mov
inc
call
imul
pushf
repnz
cwtl
add
test
test
lods
shlb
pushf
xor
or
into
push
enter
icebp
push
adc
lods
sbb
inc
por
movsb
testb
js
cld
ss
test
testb
leave
mov
clc
outsb
cmp
cmpl
shrb
push
or
inc
fadds
adc
or
adc
aas
mov
cltd
clc
movsl
mov
movsb
dec
in
stos
movsb
lock
mov
inc
adc
cmp
bound
incb
pusha
insb
push
mov
cmp
adc
in
xor
aaa
hlt
ror
push
mov
dec
or
xchg
lock
loop
rcrl
push
ret
loopne
cmpsb
sbb
inc
subl
es
sbb
mov
clc
dec
inc
notl
out
cli
inc
hlt
sbb
pop
imul
jl
enter
bound
dec
mov
or
inc
mov
nop
add
jl
test
scas
sahf
cltd
imul
enter
outsl
dec
lock
xor
push
sbb
jg
rcl
jge
xor
xor
push
add
cmp
sbb
pop
mov
dec
adc
xchg
xchg
dec
push
imul
les
xor
and
shlb
push
and
call
inc
mov
sbb
jne
mov
pop
sbb
loopne
mov
fldenv
pop
jge
jle
fdivrs
xchg
mov
repnz
loop
js
mov
je
in
loop,pt
add
enter
adc
adc
movb
mov
push
movsl
bound
test
decb
add
leave
inc
and
cld
mulb
cli
out
inc
xchg
jle
outsw
jb
and
or
add
incb
pushl
imul
adc
push
test
adc
dec
or
cli
cmp
sub
mov
push
loop
sub
dec
insb
pop
pushl
int3
leave
lock
scas
imulb
pop
stos
cmp
inc
xor
pop
mov
loope
mov
dec
add
clts
ret
push
or
cwtl
add
xor
decb
inc
adc
adc
inc
xor
inc
inc
mov
inc
push
cld
in
adc
fbstp
mov
stc
inc
mov
fs
jmp
pop
inc
add
add
add
or
push
out
inc
jb
inc
inc
pop
fisubl
in
push
lret
push
pop
ljmp
cmp
popa
fbld
imul
lds
mov
push
pop
ret
add
repnz
dec
mov
mov
call
jecxz
add
js
sub
jo
pushf
xchg
mov
fidivrl
data16
movsb
in
cld
lock
jle
lea
add
jp
push
lock
lcall
roll
mov
mov
push
in
jne
add
push
inc
imul
jge
sub
bnd
incl
out
pop
ljmp
shrd
lret
or
inc
xor
add
ljmp
int3
and
add
fdiv
push
pop
loope
int3
les
movb
xchg
inc
lock
cmp
loop
mov
xchg
dec
push
lods
xchg
mov
cmc
push
mov
push
mov
rcr
add
stos
and
xor
or
jbe
test
adc
decl
pop
cmp
mov
cmp
push
xor
in
leave
lret
pushl
call
rorb
rorb
dec
cs
push
cmp
dec
push
xor
mov
mov
mov
pop
or
js
mov
cs
lock
ds
insb
xor
push
xor
scas
pop
and
adc
enter
jae
cmc
inc
lea
inc
jbe
add
pop
inc
ret
movsb
jp
or
rcrl
test
lock
imul
jmp
or
jp
fistpl
inc
call
mov
mov
or
andl
add
aas
mov
insl
sbb
jl
add
loop
out
push
ret
rolb
add
insb
int3
push
std
and
adc
outsl
sub
jl
loope
outsl
movb
push
outsb
rclb
stos
inc
push
nop
lods
enter
xor
push
xchg
push
rorb
push
pushf
xor
sbb
stos
and
shll
aaa
fadd
test
xchg
loop
xchg
dec
rclb
test
bound
cmp
push
outsb
push
dec
lret
clc
outsl
call
test
rorb
sub
lahf
jle
push
xor
push
dec
or
ret
call
popl
ror
pusha
adc
stos
cmc
stc
jle
add
inc
fisubs
fistl
add
cli
adc
jb
xor
and
adc
or
fwait
dec
mov
shlb
add
nop
cmp
mov
ficompl
fmull
push
stos
or
sub
push
inc
lds
or
dec
push
pop
pushf
insb
adc
stos
ret
add
int3
fmull
add
xor
stos
repnz
lock
fists
inc
mov
ret
add
mov
jl
adc
les
jl
inc
ret
dec
std
mov
sbb
adc
inc
mov
adc
xchg
pop
push
fidivs
inc
clc
aaa
fld
push
rcrl
enter
enter
dec
push
or
aaa
test
bound
push
jl
out
or
cli
or
mov
mov
jl
aad
std
mov
push
inc
mov
mov
or
shrb
pop
test
dec
xor
add
hlt
aam
je
dec
sub
pop
dec
and
int3
in
inc
push
lock
push
sub
clc
add
rcrb
shr
mov
adc
mov
adc
push
lods
sarb
push
mov
std
and
or
enter
outsb
mov
mov
add
dec
or
mov
call
movsb
pusha
push
jbe
das
mov
mov
inc
loop
mov
cwtl
push
jmp
xchg
cmp
incw
and
and
cwtl
cwtl
call
push
addb
push
mov
push
sub
mov
push
xor
popf
sbb
insb
push
mov
cwtl
sub
mov
and
stos
or
and
push
popa
icebp
mov
push
faddl
hlt
cmp
jg
xchg
jne
cmp
mov
dec
shlb
mov
mov
inc
and
out
es
add
je
mov
sub
stos
test
or
mov
jl
hlt
mov
scas
popa
pop
cs
adc
nop
mov
mov
je
push
popa
jmp
dec
or
mov
jo
lgs
push
lock
adc
xor
shlb
sarb
fcomps
subb
and
int
loope
shlb
or
push
pop
test
ss
jb
or
pop
loope,pt
inc
call
mov
lea
sbb
push
pusha
in
fildl
sbb
fstpt
xchg
jo
xor
pop
add
cmp
jmp
lcall
data16
inc
push
push
pushf
mov
push
pop
mov
addb
imul
lcall
sbb
xchg
sub
inc
jmp
in
mov
mov
incb
sbb
sub
inc
sti
xor
or
cwtl
inc
add
bound
xor
add
fisttpll
cmp
fcom
jge
mov
mov
ja
add
and
rolb
shrl
aas
mov
jge
pop
pusha
popa
hlt
push
mov
scas
xor
cmp
rorb
std
shl
std
inc
add
inc
mov
and
in
add
or
outsb
add
or
pop
lods
in
je
mov
xchg
add
loope
and
lock
std
test
call
inc
aam
sbb
adcl
cs
in
or
insl
dec
icebp
stos
nop
xorb
mov
push
push
mov
xlat
or
push
stos
dec
daa
mov
js
outsb
xchg
hlt
cmp
cmp
cmp
lds
inc
mulb
je
dec
jmp
not
loop
test
lock
pushf
sub
and
jb
cli
and
push
xchg
out
add
xchg
mov
pop
loopne
jo
mov
cli
sbb
jo
outsb
jmp
sbb
mov
jge
call
out
jge
mov
movsb
lcall
dec
cmp
dec
mov
dec
mov
or
pshufw
fcoml
jbe
pusha
add
adcl
mov
popa
sbb
jg
call
std
xchg
and
rcrl
dec
xor
mov
adcb
mov
jns
push
push
and
sub
mov
push
cs
sbb
fmuls
insb
clc
out
jp
cld
cmp
faddl
xor
jmp
pop
das
aam
xchg
sub
push
je
sbb
je
mov
clc
mov
pop
clc
std
xlat
bound
add
adc
sbb
pop
cs
repz
sarb
filds
dec
sbb
xor
shlb
cmp
jg
fiadds
push
add
test
dec
lock
mov
and
adcb
push
mov
xchg
pusha
mov
cmp
ljmp
decl
test
mov
cmp
icebp
lea
in
or
dec
clc
pop
iret
cmp
push
in
cli
or
hlt
loope
loop
lock
xor
push
decb
dec
jnp,pn
cli
push
pusha
pop
fwait
mov
adc
and
enter
out
adc
add
andl
inc
pop
mov
jl
int
inc
cmp
rorl
ljmp
xor
inc
sbb
inc
ror
xlat
push
rcr
dec
xor
mov
sub
xor
and
int3
add
jne
ret
sbb
push
mov
nop
test
lods
push
jns
fs
jne
mov
inc
ror
fisubl
adc
cmp
pushf
jae
push
inc
mov
mov
popf
movsb
add
bound
sar
add
adc
pop
out
cmp
leave
popf
cld
test
mov
inc
int3
je
sbb
xor
adc
sub
call
mov
add
xchg
int3
mov
je
push
xchg
mov
sbb
xor
cmpsb
or
jo
jbe
cmp
mov
imul
pop
jp
andb
cmp
push
adc
pop
push
adc
fidivs
aam
mov
addb
inc
push
mov
add
adc
lcall
inc
in
fisubrs
push
add
jne
decb
stos
adc
sub
shll
fwait
mov
dec
enter
xchg
andl
sbb
out
jmp
pop
cmp
xorl
mov
popa
cli
cmp
dec
aam
das
outsb
sbb
rcl
lret
pop
pop
dec
cmp
mov
call
sbb
jg
rorl
push
mov
mov
add
inc
aam
adc
mov
std
mov
adc
bound
push
xor
add
loopne
call
dec
cmp
lcall
cmp
enter
rcrb
xor
jg
inc
lods
fisubrl
rcr
xor
insb
add
testl
dec
shlb
cmp
and
push
or
aas
mov
je
out
or
call
cmp
cmp
xchg
js
push
shlb
mov
adc
aad
nop
or
stc
pop
movb
lock
dec
push
xchg
movsb
adc
pushf
dec
lods
cld
or
int3
jmp
jne
enter
sahf
push
and
sub
lods
leave
lea
sbb
inc
sti
sarl
mov
inc
inc
cmpb
inc
xor
rorb
jp
nop
cli
cmp
push
push
mov
outsb
add
outsl
jbe
loope
movb
xor
jns
sar
adc
xor
adc
dec
ljmp
aam
pusha
fistps
jecxz
pop
dec
insb
test
push
hlt
add
adc
jnp
sub
test
sub
push
adc
cwtl
insl
test
mov
les
sub
rclb
mov
and
jle
addr16
dec
cld
adc
add
pop
sub
add
sbb
push
pop
push
in
mov
add
dec
mov
ret
out
and
adc
aas
test
xchg
nop
faddl
rcr
mov
add
pop
or
mov
and
mov
jb
ljmp
bound
test
call
add
stc
dec
incl
xchg
adc
std
inc
push
imul
clc
movl
add
push
dec
jmp
insb
pop
push
fwait
adc
cld
xor
pop
push
adc
nop
je
enter
test
push
push
outsb
add
lea
call
add
and
and
xorb
rcr
shrl
cld
inc
fldt
mov
xlat
xor
pusha
imul
movsb
mov
or
dec
or
push
adc
jo
sub
por
faddl
add
pop
push
stos
call
psubw
xor
pusha
rclb
push
lcall
lea
mov
or
cltd
jno
sub
jl
push
xchg
mov
fwait
and
lahf
or
xchg
call
pop
push
cmc
or
ss
test
test
dec
mov
enter
dec
sbb
sub
adc
dec
aam
push
inc
xorb
add
xor
adc
popa
into
pop
cmp
in
push
jl
call
jp
and
cwtl
fprem
jne
cmpb
je
mov
inc
add
add
inc
test
adc
pop
push
mov
inc
repnz
pusha
inc
adc
rorl
vmread
sti
push
sahf
push
mov
jmp
ds
jb
sbb
cmp
xchg
or
int3
jbe
jl
mov
call
jmp
mov
and
ret
jge
mov
jecxz
ja
inc
rcl
inc
or
cmp
incb
lock
push
pop
mov
clc
sbb
ja
add
dec
dec
dec
xchg
and
jmp
push
mov
pop
cld
sbb
adc
cwtl
fs
rcr
or
insl
outsb
aam
addl
mov
inc
xor
or
push
lock
or
lea
push
call
and
mov
push
mov
jmp
ss
lods
ss
inc
mov
iret
popa
insb
inc
mov
xor
and
js
das
mov
adc
mov
notb
loope
or
pop
xchg
inc
push
out
inc
mov
shrb
loop
pop
dec
cli
nop
fmuls
idivb
pop
mov
cmp
pop
add
sbb
fwait
lock
add
lret
sub
add
mov
inc
sbb
loopne
inc
mov
xchg
clc
and
adc
rorb
sub
ds
cmpsb
enter
inc
adc
andb
mov
jb
fiaddl
push
push
enter
out
or
rorb
adc
out
mov
not
xchg
push
xchg
rorl
imul
cli
jmp
mov
jb
orb
pop
sub
stc
test
mov
and
pop
mov
add
mov
test
mov
jge
adc
arpl
icebp
in
xchg
cli
data16
mov
mov
adc
push
adc
mov
loopne
mov
repnz
inc
fldenv
call
mov
pop
adc
push
jg
xor
and
repz
hlt
cmpsb
cmp
ret
inc
lret
jmp
add
cmp
js
cli
insb
out
rolb
inc
xor
mov
push
mov
and
cmp
add
inc
fmul
addl
sub
ss
call
push
pop
add
cmpl
xor
out
pop
pop
add
out
hlt
add
mov
rclb
jp
and
push
in
je
push
decb
mov
add
inc
out
rorb
mov
cmp
pusha
inc
mov
shrl
sarl
hlt
pop
add
inc
inc
inc
decb
pop
sbb
inc
mov
xchg
add
cmp
fnstcw
cld
ret
xchg
inc
adc
pop
adcb
push
xchg
popa
mov
sub
push
jbe
mov
mov
jmp
roll
xchg
lods
gs
sub
mov
cmp
xor
or
call
ret
adc
pop
push
push
jo
sub
mov
adc
mov
push
in
adc
cmp
and
and
cmpsb
sbbb
ret
enter
xchg
dec
push
mov
outsb
xchg
sbb
mov
pop
stos
rcll
fmuls
mov
cmp
mov
push
lret
jb
cmpl
les
mov
dec
mov
repnz
add
or
add
rclb
ret
jg
mov
outsb
loope
push
fiadds
lret
xor
xor
jl
lock
adc
arpl
push
cwtl
and
cld
or
cmpb
add
sbb
out
insl
lods
inc
js
mov
test
fstl
dec
dec
leave
aam
pop
mov
repnz
mov
mov
decl
pop
sbbb
sbb
jbe
sub
outsl
sub
adc
push
jmp
jbe
push
in
add
sub
repz
shll
dec
and
addl
xor
mov
ficoms
inc
sbb
mov
xchg
lock
or
inc
xchg
mov
cmp
mov
out
mov
adc
xor
xorl
jmp
jne
cs
in
add
fisttpl
test
fidivl
cld
cmp
cli
cmp
mov
mov
in
mov
test
inc
rcrb
adc
xchg
imul
call
mov
ss
inc
loope
ljmp
in
orb
inc
sub
cli
shlb
int3
inc
jge
call
adc
xchg
xor
addl
xchg
add
pushf
mov
push
sub
pcmpeqb
scas
jae
loop
adc
enter
pop
push
adc
xchg
adc
ret
mov
inc
loopne
filds
cmp
aad
push
cld
insl
adc
add
mov
std
pshufw
mov
mov
jnp
js
je
aad
fwait
ljmp
jg
push
testl
xor
insb
insl
pop
scas
jo
sub
mov
adc
jmp
or
inc
test
sub
adc
clc
shll
cmp
mov
lock
rorl
cmp
push
inc
fsubrs
cltd
loopne
test
xor
mov
lret
push
push
push
subl
dec
dec
inc
nop
inc
jg
mov
icebp
inc
aam
or
sub
xlat
or
push
std
mov
and
mov
data16
enter
sub
call
scas
push
aas
sbb
mov
cmp
push
cltd
xchg
pop
aam
xchg
pop
push
inc
cmp
lea
test
adc
bndstx
data16
inc
popa
imul
xchg
or
test
adc
dec
inc
push
sub
in
xchg
mov
jl
into
push
out
adc
add
xchg
aaa
adcb
xlat
pop
nop
imul
cmp
cs
and
icebp
adc
int3
adc
shrl
push
enter
lret
and
push
call
in
pop
cmovne
outsl
push
movsl
or
dec
sbb
and
xchg
aas
or
add
call
adc
push
in
std
mov
popl
mov
sbb
inc
std
orb
jmp
or
outsb
mov
sub
or
pop
mov
lahf
lea
repnz
push
mov
jne
inc
inc
ret
dec
xorl
data16
fidivrs
out
inc
xchg
pop
push
jne
or
mov
rolb
jne
sbb
insb
ud1
pop
mov
jmp
fmull
loope
mov
dec
mov
test
push
cli
fdivrs
inc
call
sub
sbb
in
subb
mov
jp
xor
movsb
lret
pop
in
sar
xchg
xchg
testl
mov
fwait
sbbl
push
adc
pop
inc
inc
add
push
clc
or
call
push
data16
push
int
xchg
sub
xor
iret
insb
call
ds
cmp
cmp
mov
xor
ret
hlt
aas
inc
sub
testb
shrb
lcall
dec
cwtl
idiv
push
cld
inc
adc
or
xor
push
cvttps2pi
push
push
shll
sub
fdivrs
or
and
mov
jo
jbe
jb
cwtl
cmp
mov
mov
fwait
gs
lock
outsb
dec
dec
imulb
pop
add
fiadds
nop
ficoml
hlt
scas
movsl
jno
mov
and
pop
mov
addl
dec
inc
push
int
mov
addl
jnp
push
aas
stc
imul
and
cmp
ret
add
or
insb
inc
loopne
xchg
pop
pop
jecxz
dec
inc
xchg
sub
inc
cmpsb
fwait
mov
push
cltd
inc
out
mov
pop
lahf
shrb
jmp
int3
loopne
add
outsb
push
mov
or
jo
loop
cmpsb
rolb
ljmp
add
mov
aaa
inc
pop
les
jle
add
push
dec
xor
and
inc
dec
adc
pop
pop
cmp
imul
jne
jecxz
gs
or
push
or
mov
mov
inc
ret
ret
push
je
or
push
push
xor
dec
dec
std
es
sti
mov
int3
inc
pop
xlat
xor
dec
nop
sbb
cmc
and
out
pusha
mov
ret
insb
cmpsl
jg
mov
xor
push
mov
lea
adc
inc
xchg
jne
ret
push
int3
leave
mov
hlt
sbb
frstor
xchg
int3
xchg
icebp
addl
pop
leave
or
mov
psubsw
ret
js
mov
xchg
adc
xor
ds
push
mov
adc
mov
dec
cs
ror
mov
sub
pop
fcos
jmp
mov
pop
lock
stc
sarb
popa
inc
mov
add
pop
xorb
jns
mov
mov
js
cmpl
cwtl
xchg
ret
mov
and
xchg
xchg
xor
les
shll
in
imul
add
sti
repz
test
pop
dec
addl
push
lea
std
outsb
adc
xor
mov
dec
in
lcall
cmp
subb
insb
jno
and
mov
test
addb
pop
inc
decb
mov
mov
clc
mov
or
add
or
insl
sub
push
jno
icebp
setge
cmp
pushl
cmpsb
and
out
add
or
je
or
cmp
jle
adc
push
cltd
dec
movsb
fsubrs
fs
loope
and
dec
adc
push
sbb
mov
ret
jmp
dec
and
or
divb
ret
xchg
inc
mov
je
shl
and
mov
sub
and
xor
pop
and
call
nop
mov
dec
pop
xor
inc
aad
add
adc
fsubs
lock
sbb
sbb
inc
cmp
js
shlb
sbb
jg
mov
pop
iret
rolb
xor
pop
xor
add
int3
cltd
or
push
jmp
inc
xchg
cmp
shlb
icebp
dec
pop
sahf
inc
jne
pop
inc
cmc
cmovae
adc
movb
push
out
nop
icebp
or
push
jp
mov
push
or
cld
mov
add
lea
js
push
pushf
or
shll
pushw
mov
xor
and
mov
adc
jp
pop
xor
inc
movhlps
cmp
mov
xor
test
mov
xchg
fisubrl
ss
or
add
sarb
aam
cs
inc
je
mov
or
dec
xlat
nop
icebp
mov
mov
ret
inc
xor
jmp
ss
pop
add
sbb
dec
fs
add
adc
inc
nop
and
es
notb
sahf
ret
loop
jbe
pushl
add
adc
outsb
inc
jne
in
mov
mov
and
loopne
stos
push
enter
dec
dec
pop
push
repnz
jmp
or
sbb
mov
dec
push
pop
mov
ljmp
mov
mov
or
mov
or
ss
fmuls
mov
xor
pop
add
jne
sbb
stos
mov
push
mov
ds
loopne
nop
or
and
pop
and
pusha
jo
aam
adc
add
push
loope
jmp
xor
dec
push
cmp
pop
xchg
fistl
rcll
sarb
mov
fs
mov
insb
mov
leave
pop
push
pop
imul
shlb
fs
push
cwtl
pop
insb
cmp
sub
jno
mov
into
or
sub
rorl
sub
add
lods
aam
les
jp
mov
adcb
ret
ja
pusha
cwtl
es
data16
sarb
push
dec
xor
or
idivl
das
or
sbb
lods
sahf
dec
xor
filds
push
loopne
lods
xor
jle
cli
mov
adc
mov
in
push
jo
cmp
xor
in
adc
mov
mov
sbb
and
push
adc
lret
push
rclb
mov
push
inc
xor
jmp
loopne
mov
in
jp
inc
fidivl
fcmovnbe
aam
mov
push
jp
data16
test
sbb
lret
jo
or
adc
fmulp
data16
nop
es
dec
add
jp
fldenv
push
push
add
mov
negb
outsl
cmpsl
fwait
add
mov
xchg
cli
mov
add
cld
into
rorb
aam
movl
daa
lods
add
test
push
js
pop
ljmp
pop
test
add
je
ss
inc
jle
shll
sub
adc
loope
adc
gs
int3
pop
mov
into
and
pop
cwtl
mov
sub
dec
mov
jle
jge
ds
add
inc
adc
adc
mov
jne
mov
fdivr
clc
xchg
icebp
fwait
test
outsl
mov
mov
rorl
inc
and
aas
jmp
push
les
pop
push
mov
cmp
in
mov
mov
fistps
push
rcrb
adcl
sub
pushf
mov
mov
subl
int3
cmp
imul
or
test
imul
or
adcl
mov
mov
xchg
and
mov
add
add
xor
mov
cli
fadd
push
xor
ss
dec
pop
mov
mov
cs
push
ret
adc
pop
xchg
ds
mov
iret
cmp
je
adc
fdivrl
iret
dec
mov
adc
jg
jb
xor
jmp
and
inc
jb
xchg
fcoms
sub
mov
jnp
ss
mov
cmp
push
in
lahf
xchg
push
cmp
lods
and
std
add
imul
inc
lret
cmp
clc
test
cli
cmp
mov
loopne
jmp
out
and
push
jmp
jbe
mov
cmp
outsb
dec
jle
stc
shlb
and
call
dec
lcall
push
push
push
mov
xchg
inc
cs
jo
jb
fs
inc
add
pop
lret
pop
sbb
jmp
bound
int3
popa
in
jae
cwtl
mov
outsb
push
add
add
ds
in
mov
add
scas
jne
jne
cld
cmp
and
and
adc
pushf
call
mov
add
mov
lock
jnp
add
xorb
data16
adcl
pop
pushf
rol
or
push
cmp
push
outsb
jp
push
aas
pop
ja
fwait
dec
pop
dec
mov
in
xor
std
rcrb
add
jne
adc
imul
call
outsb
outsl
filds
insb
icebp
jmp
cmpl
movsb
mov
in
lods
dec
std
mov
repnz
xchg
push
data16
inc
pop
inc
mov
mov
adc
fadd
shlb
add
inc
loop
pop
pop
sbb
leave
adc
out
jo
nop
ret
jb
ret
adc
add
cwtl
push
inc
add
shlb
cwtl
sub
ljmp
shr
cmp
test
shll
xchg
add
shrb
add
inc
or
pop
les
popa
call
insb
xchg
pop
outsl
icebp
push
aas
dec
testl
addb
fs
mov
dec
imul
fisubrs
mov
test
incl
in
out
push
push
jae
mov
loopne
push
les
cmc
mov
push
lods
shlb
adc
push
cpuid
adc
mov
add
fs
movb
add
adc
mov
push
jne
loopne
int3
sarb
call
add
cmp
sub
mov
jg
pop
adc
cli
lcall
or
jmp
lock
lcall
dec
and
or
lods
adc
xlat
movsb
mov
pop
sub
inc
jp
cld
push
cwtl
adc
out
bound
ret
mov
mov
push
loope
sbbw
dec
inc
jbe
test
cli
xchg
sbb
sub
rclb
cmpsb
shlb
or
pusha
repnz
adc
je
call
pop
xchg
sub
push
xor
ret
xor
inc
mov
push
loope
cmc
aas
mov
jbe
lock
and
push
push
jl
inc
mov
ret
aam
std
pop
test
adc
mov
icebp
or
scas
inc
aaa
or
add
xchg
sbb
xor
test
xchg
rcrb
xchg
sub
loopne
cld
adc
pop
cmpsb
aam
xchg
pop
push
xchg
cmp
fs
shl
sbb
fsubrl
push
rcr
je
clc
or
cld
lea
mov
xor
repz
ret
push
adc
mov
pushl
adc
push
aad
xchg
cltd
ljmp
mov
xor
xor
mov
fcom
das
or
sbb
lods
imull
in
clc
push
jl
pushl
inc
incl
stos
jle
movl
push
or
clc
dec
cmc
jmp
xor
mov
mov
sub
cld
mov
push
ljmp
mov
adc
testb
and
aaa
or
scas
movsb
lock
mov
in
test
hlt
inc
inc
push
cmpsb
xchg
xor
sub
bound
mov
jmp
inc
int3
and
cld
icebp
add
enter
mul
ja
xchg
and
adc
cmp
sub
jle
rolb
cmp
cmp
xchg
mov
pop
je
cltd
cmp
call
push
repnz
test
sbb
mov
dec
cld
mov
mov
push
scas
cli
add
lcall
sbb
call
outsl
mov
data16
decl
dec
adc
sub
cld
pop
test
fdivrs
xor
ret
mov
and
xchg
dec
add
pop
aaa
es
mov
or
inc
push
inc
cmpsb
scas
add
loopne
ret
repz
add
xor
adc
push
lock
pusha
movsb
and
cmp
jle
jmp
int3
mov
in
jne
or
orb
fwait
mov
neg
sub
or
sub
dec
push
sbb
pop
and
test
std
cltd
dec
xor
mov
pop
test
sbb
scas
mov
mov
loope
jb
mov
push
inc
divb
je
inc
push
push
ficompl
pusha
inc
ficompl
outsl
mov
ljmp
gs
sub
cli
sbb
fprem
xchg
divps
xlat
jnp
call
mov
aas
adc
pop
data16
xchg
rorb
int3
inc
inc
pop
test
push
mov
hlt
mov
fildll
xor
lret
dec
pop
cmp
push
pop
xor
rol
xchg
jo
loope
loopne
andb
stos
mov
dec
push
jle
push
dec
les
popa
inc
mov
je
inc
or
add
sbb
imulb
cmpsl
flds
in
push
lea
add
push
mov
jmp
rorl
fdivs
mov
pop
add
cmp
jl
adc
insb
mov
or
sbb
adc
outsb
push
adc
test
jl
adc
sub
sub
adc
adc
int3
loopne,pn
cli
push
mov
push
push
mov
cmp
inc
inc
or
inc
dec
lods
or
cmp
or
inc
iret
add
push
mov
sbb
or
call
xor
cmp
inc
test
mov
add
add
jne
jns
insb
aas
nop
or
int3
jns
stos
cmp
in
jo
adc
pushf
pop
mov
cmp
dec
cltd
adc
clc
xor
sbb
push
inc
insb
mov
push
scas
and
mov
std
fidivrl
hlt
jp
push
pop
sbb
jg
imul
xor
mov
daa
inc
bound
pop
scas
shrb
cmp
inc
ret
and
or
mov
nop
push
or
add
nop
out
jnp
cwtl
call
mov
lea
incb
call
push
or
inc
pop
aaa
sahf
movsl
jle
jle
cmp
fldt
push
lods
jbe
inc
lock
push
movsb
jmp
adc
pusha
fimull
mov
cld
inc
push
inc
dec
add
sub
push
sbb
pop
flds
push
mov
push
bound
call
add
lock
popa
hlt
ss
xor
dec
xchg
lods
es
lret
push
iret
loop
inc
mov
or
mov
or
ljmp
sbb
xchg
add
aam
lea
mov
push
mov
pop
sub
jo
inc
fs
in
les
mov
out
bswap
inc
xchg
mov
push
pop
xor
inc
push
sbb
adc
cltd
cmp
hlt
test
sarb
pop
daa
decb
decl
sub
test
inc
sub
test
jmp
inc
cmp
mov
dec
mov
hlt
mov
out
loopne
jb
imul
lods
jne
push
dec
fists
or
push
movsb
jo
mov
arpl
xchg
test
adc
dec
mov
mov
xor
or
inc
inc
es
and
jbe
rcr
adc
pop
mov
aam
ss
push
mov
mov
ficoml
insb
push
test
push
loopne
rolb
aas
leave
sbb
rclb
push
sarb
insl
pushf
inc
xchg
add
sti
aaa
cld
out
pop
loopne
add
jg
rol
sub
scas
stc
adc
add
dec
popa
ljmp
sub
dec
jecxz
hlt
cmpsl
movsb
pop
js
outsb
jb
inc
lret
in
jb
inc
push
stos
outsb
nop
mov
sar
cwtl
data16
sub
mov
jmp
xchg
lea
push
lods
push
cmc
std
jecxz
adc
sub
xchg
inc
popa
xor
add
pop
cs
or
push
add
push
scas
jae
sar
and
inc
push
shr
neg
idivb
loope
leave
mov
andb
adc
jecxz
add
mov
jo
lods
dec
pusha
lea
or
cwtl
testb
sub
mov
in
outsb
mov
loope,pn
call
orl
inc
jp
jne
sbb
mov
loopne
xor
stc
xor
push
sbb
hlt
xchg
mov
cld
push
ficoml
xor
sti
xor
mov
lea
or
les
and
jl
jo
inc
js
sbb
pusha
mov
faddp
add
dec
popl
pop
mov
inc
mov
mov
lret
sbbl
pop
mov
cmp
jb
and
mov
cs
mov
jmp
outsl
push
jmp
rol
push
mov
repnz
push
add
inc
add
push
adc
dec
test
fs
in
mov
sbb
xchg
loopne
je
xor
lods
sbb
sar
mov
adc
gs
rolb
mov
dec
std
je
cld
mov
jbe
ss
insb
mov
sub
inc
pop
pop
jnp
pusha
sbb
movsb
xor
loopne
sbb
ret
inc
rcl
and
push
or
pop
adc
inc
or
inc
int3
in
mov
push
cmp
pusha
mov
sbb
or
add
push
push
rorb
inc
jno
add
lcall
ret
js
jmp
outsl
xchg
int3
loope
inc
xor
mov
leave
ficoml
adc
dec
push
and
or
cs
sub
enter
pop
mov
push
push
faddl
xchg
inc
loope
imul
cmpsb
jg
pop
incl
mov
mov
inc
jo
pop
jbe
push
popa
subl
roll
dec
out
popf
js
push
push
push
jmp
sub
jmp
inc
addb
clc
inc
mov
cs
mov
paddw
and
fidivl
std
or
dec
jns
and
jl
or
es
mov
push
lret
push
les
mov
icebp
cmpsl
add
lds
fnsave
pusha
xchg
mov
pop
rcl
add
mov
jle
int
out
xor
lods
mov
and
or
decb
mov
dec
cmpsb
mov
mov
mov
or
push
jne
repnz
cmp
or
fs
out
imul
mov
std
or
push
cmp
adc
add
jmp
add
push
adc
inc
jge
out
pop
hlt
std
enter
scas
xor
push
sbb
test
cmp
cmp
lds
push
xor
loop
mov
paddb
cmc
sbb
sbb
mov
mov
sti
push
pop
fbld
and
adc
add
stc
aas
imul
pop
fadds
mov
xor
sbb
add
push
xchg
xor
ret
sbb
lcall
adc
cmp
push
xchg
ljmp
sbb
adc
xor
sbb
cmpsl
in
pop
mov
int3
cmp
out
js
and
outsb
inc
cmpsl
jo
mov
mov
orb
addl
jmp
imul
pop
cmp
xchg
xor
fnclex
jmp
pop
mov
adc
lret
inc
mov
inc
lods
mov
aaa
fistpl
nop
mov
and
mov
in
cwtl
jo
fs
push
jmp
push
mov
mov
pop
insb
sbb
scas
je
int3
icebp
push
test
es
decl
mov
imul
insb
ret
xor
add
sub
dec
xchg
cmpsb
jg
subl
push
xor
jbe
add
lock
push
push
movsb
mov
call
in
xor
in
and
cmp
shrb
mov
adc
push
adc
loope
out
adc
mov
hlt
jp
mov
dec
sbb
call
sub
mov
call
add
cmpsb
mov
in
or
sbbl
cmc
ret
pop
add
push
xor
fldl
mov
subl
loopne
dec
sub
popf
or
xchg
outsb
adc
or
adc
push
adc
fisubl
jp
cmp
xor
jp
mov
push
lea
inc
jb
xor
add
inc
scas
or
out
or
fwait
or
movb
rclb
outsb
imul
incl
pushl
decl
sarl
int3
dec
int3
add
add
stc
adc
push
adc
jns
call
cmp
test
je
mov
aad
mov
add
es
or
sub
adc
xchg
lods
das
cwtl
lret
push
insl
cwtl
je
movb
testl
test
or
insl
sbb
repz
iret
jb
cmpsl
lods
daa
and
add
mov
jne
xor
push
xchg
pop
sub
andl
lock
test
mov
jmp
jnp
in
sbb
add
adc
and
iret
xor
fstpt
data16
fs
je
out
push
cmp
outsl
insb
in
mov
call
adc
xor
clc
add
dec
and
mov
cmp
jl
and
es
xor
testb
ret
pushf
dec
and
test
sub
push
adc
movsb
push
mov
cli
lock
and
insb
push
out
push
inc
dec
mov
fidivs
sbbb
fnstsw
fldcw
jmp
pop
dec
mov
scas
and
or
fdivrs
lahf
adc
mov
mov
mov
adc
mov
sbb
inc
in
cs
dec
and
aam
lahf
adc
mov
push
in
loopne
les
ret
mov
sub
push
inc
fcomp
adc
insb
push
jge
jo
fcmovbe
xchg
sbb
push
out
nop
hlt
das
movb
xor
xor
in
sub
add
mov
push
inc
call
xor
pop
mov
shrb
roll
and
cmp
insb
aam
decl
pop
cld
cmp
int3
add
pusha
data16
sub
push
mulb
mov
ror
and
test
or
jl
xchg
divb
jne
xor
push
icebp
push
sub
fs
pop
mov
dec
bound
andb
xchg
mul
sub
add
push
xor
cmpsb
ss
rorb
cmp
inc
jae
push
push
push
pusha
mov
ret
ja
sub
mov
sub
push
std
or
decb
ret
mov
into
mov
dec
jl
mov
jnp
mov
clc
icebp
adc
xor
lret
adc
aaa
mov
cmpsb
xchg
lea
jbe
push
inc
arpl
adc
call
mov
pop
ds
adc
jg
andl
pop
push
ret
inc
push
loopne
sub
mov
dec
sar
adc
ds
outsl
pop
mov
or
les
inc
and
rorb
rorb
jne
scas
sbb
mov
loope
or
fcoms
addb
rorl
movsl
mov
mov
outsl
insl
sbb
fldcw
loopne,pn
sbbb
sbb
insb
cmp
mov
subl
ss
es
pop
sbb
mov
jne
leave
ss
leave
add
push
and
loope
sub
rcl
pop
cmc
fwait
push
repnz
xor
cmp
mov
fs
adc
mov
ljmp
subl
std
mov
imul
jnp
inc
pop
loopne
add
call
xchg
in
mov
cmp
fidivrl
scas
cli
dec
or
ret
cmp
mov
sbb
push
loopne
pop
les
pop
inc
jae
push
fcompl
add
mov
outsb
mov
hlt
push
fs
mov
xor
cmp
fdivr
cs
addr16
cld
int3
test
mov
push
decl
adcb
mov
add
mov
jp
fildll
ljmp
inc
pop
push
aaa
xchg
cld
repnz
or
dec
lret
aam
xor
cld
cld
jle
sti
insb
lock
xor
cmc
scas
jp
outsl
push
fincstp
pop
negl
fs
xor
test
mov
jl
mov
sub
call
insb
sahf
or
jno
push
fmull
js
fsubrs
cmpsb
enter
xchg
mov
xor
and
ret
push
mov
inc
in
pop
imul
mov
push
movsb
sahf
xor
pop
adc
xchg
out
push
shlb
adc
push
sub
enter
int3
push
je
sbb
sub
jmp
pop
sbb
adc
or
pushf
cmp
push
adc
repz
cld
mov
andl
out
decl
popa
inc
pop
adc
mov
xor
fimuls
int
fists
jecxz
fistpl
rcrb
adc
mov
outsb
mov
pushl
idivl
in
dec
ljmp
call
sbb
jmp
arpl
mov
faddl
adc
loope
bound
sub
outsb
xor
mov
aad
xchg
clc
inc
inc
and
xchg
je
mov
dec
add
adc
and
push
lret
lock
pop
push
fcomi
call
mov
hlt
mov
adcl
mov
pop
mov
test
test
mulb
fs
jecxz
push
mov
push
push
inc
pusha
sub
int3
cli
popa
xor
fisubrl
stos
and
mov
pop
dec
mov
mov
insl
cmc
sbb
hlt
ja
iret
jno
or
cmp
mov
je
popa
dec
or
ljmp
pop
cmpsb
lock
mov
fs
sarb
mov
push
push
and
cmpsl
and
mov
jmp
movsb
jb
inc
pop
cmp
sbbb
or
testb
call
rorl
fs
mov
test
inc
dec
push
stos
bound
add
out
dec
int
pop
mov
xchg
mov
insb
cld
fs
xchg
jbe
enter
mov
loope
push
adc
push
das
jns
gs
adc
lock
loopne
push
push
lret
in
mov
ljmp
insb
test
add
fs
add
rolb
jmp
adc
inc
adc
add
jl
addl
or
fs
mov
inc
and
mov
mov
ret
jg
dec
sub
or
inc
jbe
push
inc
shlb
insb
dec
sahf
inc
inc
push
and
xchg
pop
push
aam
push
test
push
dec
std
mov
adc
push
jo
pop
mov
dec
addl
inc
cli
mov
lods
and
cs
cld
popa
test
push
push
dec
je
mov
mov
mov
mov
loope
mov
pop
lcall
jg
xor
xor
or
sahf
push
push
cmp
mov
lea
aad
inc
flds
sub
xor
and
pop
mov
inc
int3
xor
sahf
inc
fisubs
movsb
xor
mov
icebp
adc
lock
or
inc
mov
inc
or
jne
cmp
testl
push
fisubrl
sbb
or
es
push
push
sbb
and
movb
lds
mov
push
test
jge
fisttpl
pusha
call
vphadduwd
push
jae
mov
je
adc
sbb
add
cmpsl
lcall
dec
je
pop
and
data16
pop
ljmp
or
adc
lods
test
loopne
daa
sub
mov
rcrl
clc
mov
es
push
xchg
inc
adc
cmpsl
fcompl
scas
xor
jge
outsl
xchg
test
push
add
push
mov
incl
jmp
pop
push
pop
hlt
or
stos
jge
cmp
adc
insl
push
jle
movsl
mov
add
in
add
mov
add
pop
jno
imul
push
mov
mov
cmp
sbb
ret
les
sbb
pop
daa
ret
movsb
int3
test
and
ss
sbb
mov
test
ret
cmp
outsl
pusha
cmp
rolb
out
inc
jge
ljmp
test
roll
cli
inc
mov
scas
push
add
add
sub
mov
and
lods
pushf
cmp
loop
or
push
cwtl
outsl
in
or
scas
push
mov
cmp
pop
jmp
sarb
je
fadds
enter
mov
mov
xchg
gs
cmpsb
bnd
fbld
fisubrl
push
mov
xchg
lods
adc
icebp
sub
mov
xor
ja
push
push
nop
inc
addr16
push
or
inc
outsl
pop
xchg
sbb
cmp
addl
push
mov
call
hlt
xchg
and
fucomi
add
pop
andl
jg
mov
xchg
negb
js
mov
pusha
mov
ret
dec
call
or
adc
addb
dec
std
xor
add
test
mov
ja
int3
mov
sub
mov
cmp
into
or
push
es
dec
repnz
lock
pop
pop
inc
insl
fs
cmp
adc
adc
xchg
and
ret
divb
adc
outsl
sbb
ret
mov
loopne
pop
adc
jl
push
sub
lcall
movsb
adc
or
or
inc
imulb
les
loope
rol
dec
xchg
movnti
xadd
je
adc
adc
xchg
jp
dec
syscall
fsubl
push
scas
adc
jp
inc
pop
adc
out
jl
pop
insb
stos
int3
into
mov
push
sub
int3
aam
pop
and
aas
std
sbb
inc
cmp
dec
pop
shlb
loope
hlt
pop
clc
mov
inc
cmp
adc
jbe
sbb
lock
cmpsb
aad
cli
inc
xor
pop
inc
movsb
add
xor
adc
xchg
xorl
hlt
add
mov
xchg
xchg
xchg
inc
rcrb
xchg
lods
add
insb
pushf
pop
fdiv
mov
jmp
add
leave
sub
bound
lcall
fldl
lea
push
hlt
movsl
dec
jb
sbbl
add
cli
sub
push
arpl
mov
test
iret
cmpsb
add
add
sti
adc
inc
fisubrl
aas
jle
fstps
sub
testb
lret
dec
adc
lods
ret
mov
mov
push
or
popa
add
adc
pop
sub
cmp
testb
das
add
sahf
jb
mov
call
add
stos
adc
or
dec
mov
mov
js
add
xor
lcall
ljmp
rolb
cmpsl
pop
test
dec
and
cmp
sbb
loop
push
add
into
xchg
dec
inc
popf
xchg
fistpl
add
icebp
gs
cmpl
push
add
dec
mov
into
adc
add
jo
mov
push
fstpt
and
xchg
std
push
test
or
sbb
in
loopne
xlat
push
dec
les
sbb
test
sbb
push
xor
or
and
mov
loop
inc
push
sbb
adcb
shrb
mulb
mov
test
mov
inc
cmp
clc
aam
mov
inc
or
jge
adc
dec
movsb
jbe
and
pop
mov
imul
cmp
xor
adc
popf
decb
in
out
sbb
sar
rorb
rorl
fsubrl
dec
push
cmp
inc
imul
cmp
aam
out
lock
fsubl
popa
fmuls
cmp
pop
mov
es
fildl
jbe
add
test
imul
inc
pop
or
into
loop
jge
add
or
mov
test
mov
xchg
and
xor
decl
in
inc
push
or
imul
dec
jl
ja
pop
xchg
lock
and
arpl
pusha
lcall
sub
pop
clc
mov
rol
adc
js
dec
xchg
cld
inc
idivb
movsb
and
or
adc
adc
sub
inc
loopne
mov
adc
pop
xchg
cmpsb
adc
add
cs
jg
dec
or
lcall
cwtl
ds
xchg
aam
push
inc
imul
test
pop
xor
je
or
pop
je
or
push
lds
and
ret
sbb
add
ljmp
pop
iret
cmc
jmp
fcoml
adc
gs
out
sbb
or
or
enter
and
imul
ret
xor
rorl
orb
lock
inc
dec
push
sar
adc
leave
loope
pop
add
mulb
pop
pusha
xchg
ret
int3
push
aam
jbe
clc
mov
pushl
clc
jmp
in
pusha
lea
pcmpgtb
int3
mov
pop
ret
sbb
nop
scas
or
hlt
xchg
xor
sub
mov
pop
pop
pop
int
mov
loop
and
rorl
xor
add
cmp
adc
pop
xchg
int3
xchg
inc
js
push
inc
sbb
adc
roll
jge
mov
pop
mov
mov
add
and
hlt
adc
loopne
or
push
fs
cmp
and
pop
jmp
in
mul
mov
push
test
in
xor
clc
or
cld
fildl
inc
adc
aam
fdiv
fdivl
les
sub
sarb
mov
jb
or
jmp
add
xchg
mov
aam
mov
jno
push
cld
ret
or
inc
fs
subl
mov
into
cli
xor
loop
push
addl
cmpsl
cmp
leave
and
pop
push
dec
pop
adc
jne
lea
lret
cld
add
and
add
pushf
xor
pusha
adc
mov
or
mov
aam
add
mov
mov
cmp
loop
cwtl
or
scas
sbb
clc
pop
dec
or
mov
dec
mov
jo
incl
gs
inc
dec
mov
outsl
pop
and
pop
ss
addb
aas
int
addb
push
call
add
pop
mov
inc
cmp
loope
sbb
in
pusha
movb
sbbl
cmp
ja
inc
inc
sbb
loop
add
test
mov
adc
xchg
mov
mov
rorb
cmp
bound
add
xchg
xchg
ljmp
pop
outsb
sarb
jne
sbb
enter
icebp
aas
or
cmp
xor
mov
sub
adc
mov
scas
notb
lea
add
sbb
push
roll
scas
xchg
orb
push
add
ret
and
add
cmp
enter
or
out
cmp
repnz
cmp
jne
add
inc
clc
pop
add
ret
jle
dec
add
ret
push
roll
xor
adc
pop
lret
mov
loope
pop
gs
test
inc
mov
insb
mov
test
adc
xor
add
mov
mov
xchg
sub
push
pop
test
xchg
scas
sub
fwait
mov
out
sub
stos
es
imul
mov
loop
cwtl
in
mov
xor
jmp
push
add
push
test
js
lcall
lock
das
inc
in
enter
push
pusha
add
jge
fisttps
mov
add
scas
lock
xor
and
lea
jbe
aaa
and
outsb
inc
or
add
pop
add
pop
push
push
mov
faddl
enter
andb
xor
mov
andl
mov
push
push
sbb
imul
xchg
insb
aas
pop
fcoml
xchg
shrb
push
adc
sbb
jne
push
inc
aaa
adc
xchg
fmuls
jmp
pop
xor
shlb
aas
inc
int3
mov
aas
lret
add
fs
sub
inc
mov
adc
mov
push
subb
sub
push
push
sub
mov
jae
jbe
cmpsb
cmp
jo
push
add
xor
inc
xchg
cmp
xor
mov
mov
cmovge
adc
insl
add
adcl
testb
or
shlb
dec
mov
test
push
adc
in
mov
lock
push
fs
in
loopne
out
int3
insb
js
test
stc
push
push
scas
mov
and
pop
adc
test
rorl
sub
mov
push
inc
loope
aaa
popa
pushf
pop
and
dec
sbb
pop
adc
insb
cmp
jp
fiaddl
xor
js
push
ret
ljmp
mov
shll
pop
mov
xor
push
icebp
mov
or
arpl
add
xchg
out
cmp
in
push
pop
in
pop
push
adc
jmp
inc
lock
or
mov
sbb
dec
scas
push
lock
push
mov
inc
xchg
push
ficomps
inc
or
pusha
inc
insl
mov
call
jmp
cmp
test
incb
test
dec
sti
add
lods
and
xchg
jae
or
or
std
pop
into
cmp
xor
jmp
or
xorl
pusha
xor
cmp
jne
and
or
xor
push
hlt
rclb
test
push
and
rorb
je
add
les
push
jne
or
cld
or
loope
and
mov
sti
stc
ret
xor
jne
mov
sbb
ljmp
pusha
adc
pop
ret
cld
fsubs
adcl
jp
xchg
lret
je
push
pop
pop
push
fwait
pop
lcall
mov
and
in
adc
add
rorl
cwtl
gs
add
shrl
mov
add
fisubs
xor
nop
inc
cmp
cmpb
adc
rolb
jne,pn
call
push
mov
push
mov
xchg
mov
sbb
sti
dec
add
sbb
clc
loopne
shr
arpl
outsl
add
jne
pop
push
shlb
inc
add
test
daa
mov
movsb
lods
push
push
enter
mov
int3
xchg
xchg
push
mov
cld
pop
mov
mov
and
add
inc
and
mov
xor
push
outsb
sarb
call
add
sub
pop
enter
in
cmp
hlt
mov
mov
loop
les
aad
cmp
push
js
add
insb
push
insl
lock
fstps
inc
pop
or
test
push
add
insl
cld
sub
loopne
in
cwtl
pop
sub
jne
push
adc
and
cli
jne
mov
xor
adc
jne
push
push
ljmp
push
ljmp
jo
mov
mov
ds
adc
and
jbe
or
loopne
hlt
xorl
inc
cmp
ret
sub
arpl
cmpl
jb
arpl
inc
mov
and
enter
mov
add
dec
cld
pop
jae
xor
dec
bound
call
add
jne
or
inc
sub
or
movsb
or
inc
rclb
outsl
cld
outsl
or
pop
insb
std
adc
sbb
add
xchg
pusha
sub
orl
sbbl
sbb
mov
fidivs
and
inc
mov
daa
lret
inc
and
jmp
int3
xor
inc
mov
sbb
cmp
arpl
push
cs
dec
dec
cld
mov
xchg
aam
push
sbb
push
sub
and
cmpl
ret
idiv
cmp
push
add
jbe
jl
mov
push
push
cmpsb
rolb
test
decb
adc
lods
into
jp
mov
clc
cwtl
ret
lret
pop
mov
aas
lea
adc
data16
adcl
mull
mov
mov
psubsb
mov
std
pop
xchg
icebp
pop
call
popf
mov
lods
lcall
push
je
out
and
mov
inc
aaa
adc
add
inc
aaa
dec
push
out
xor
push
rorl
mov
dec
inc
outsl
and
adc
call
lahf
mov
inc
or
test
sarl
rorb
or
cld
push
and
insb
mov
or
incl
xor
fdivrp
into
mov
dec
pop
fidivrl
mov
hlt
out
aaa
mov
sarb
mov
test
and
mov
push
push
adc
ss
fs
cmp
and
dec
enter
fldcw
ljmp
in
mov
add
dec
cmp
mov
clc
ljmpw
and
lea
add
aam
or
sub
jge
push
outsl
fadds
or
pop
add
cmovne
call
push
enter
inc
lds
cli
rolb
or
or
sub
push
inc
push
lea
add
ljmp
sar
mov
fnsave
lea
and
fidivl
lret
add
add
pop
or
insb
xchg
mov
or
sub
and
jb
shl
cmpl
stos
ds
mov
pop
hlt
push
mov
into
adc
loop
inc
jl
cmp
mov
cmp
push
aam
lock
movsb
and
dec
cmp
push
adc
mov
mov
or
stc
dec
inc
inc
or
jo
jo
adc
or
inc
imul
push
loop
dec
or
mov
inc
adc
sbb
stos
pop
cmp
jle
jne
enter
mov
mov
pop
test
and
jne
call
popa
adc
add
cmp
xlat
jae
mov
jg
pusha
loop,pn
add
shrb
out
or
outsb
xchg
js
and
test
jp
cli
push
xor
ret
aam
in
fdivr
push
jl
test
jns
ret
mov
xchg
loopne
adc
push
jae
lock
out
test
mov
add
sub
add
test
pop
stos
pop
push
mov
and
adc
sbb
test
shlb
lods
or
mov
je
rcr
icebp
adc
in
mov
dec
fistps
pop
stos
sbb
hlt
jo
mov
aaa
mov
push
dec
jmp
sbb
les
push
ret
popa
push
loop
push
or
add
test
leave
mov
cmp
lods
arpl
fimuls
outsb
stos
sub
jle
jne
xor
in
dec
aam
add
mov
test
inc
cmp
fsubrs
lods
imul
push
popa
mov
es
xchg
push
sub
push
fmuls
and
push
rcrb
mov
xor
in
mov
sbb
push
jle
mov
mov
rol
pushf
mov
add
adc
sbb
idivl
adc
fcmovne
adc
jns
test
push
push
push
push
dec
push
cmpsl
push
sahf
arpl
fcomps
loope
sbb
in
pop
test
sahf
test
xchg
mov
and
roll
pop
call
cmpsl
insb
push
add
fldl
jle
es
cwtl
xchg
fs
push
add
mov
ds
add
call
cld
cmp
dec
dec
pop
xor
ret
mov
pop
rcrb
fisttps
add
fdivrs
jns
cli
fisubl
sub
hlt
add
cltd
mov
xor
ja
mov
imul
xchg
xor
xor
ret
sub
add
inc
scas
dec
lcall
pusha
rcrb
stc
and
cs
insl
subb
mov
lock
add
inc
mov
push
hlt
add
jl
and
inc
nop
sub
push
clc
add
add
jle
adc
js
inc
pop
jl
mov
leave
xchg
ret
stos
loopne
or
fsubr
jb
mov
cltd
test
push
fadds
ds
inc
mov
lods
pcmpeqd
inc
lock
xlat
push
gs
es
icebp
ret
lret
jo
xor
sarb
mov
rol
pusha
inc
adc
push
push
push
aam
or
rolb
sbb
mov
ss
xor
jb
insl
nop
decb
daa
gs
sub
lret
int3
xchg
ficomps
push
outsl
xor
pop
sub
xor
add
addb
pop
push
lods
ror
lock
sbb
aad
out
fmull
or
hlt
add
icebp
std
push
adc
gs
and
lods
mov
push
cmp
pop
xchg
cmpb
sbb
fsubrs
nop
ljmp
cmp
adc
cmp
lds
fsubs
shll
adc
dec
fsubrl
sub
jle
imul
push
lret
es
icebp
sti
inc
cmp
xchg
push
test
pop
mov
lea
addl
push
fwait
jbe
cmpsb
lods
mov
or
pop
clc
out
mov
inc
int3
test
mov
sbb
dec
js
jno
call
xor
xor
lea
fsubrs
push
sbbb
and
jle
xchg
stc
dec
jb
fdivl
add
mov
pusha
or
into
mov
add
enter
shlb
mulb
mov
push
inc
inc
insb
mov
scas
jb
push
or
fdivr
aaa
imul
lea
roll
push
fsubrl
push
push
cld
pop
fs
or
cmp
in
mov
jmp
fsubl
inc
pop
add
loopne
xor
push
cmp
ljmp
inc
xlat
in
add
push
mov
cmp
lock
mov
loopne
or
adc
pop
cs
lea
mov
adc
outsb
add
or
push
add
clc
dec
dec
or
clc
jnp
ljmp
xchg
inc
loope
mov
pusha
jg
loopne
call
cld
scas
das
add
js
int3
mov
sbb
mov
cli
mov
pop
adc
mov
les
rolb
sub
push
rcll
sbb
daa
xor
mov
rolb
in
dec
inc
test
jecxz
add
cmpsb
mov
push
mov
lods
lret
jo
xor
out
arpl
ret
xor
je
loop
dec
jl
push
push
insb
pop
mov
inc
dec
rcrl
pop
pop
cmp
xor
test
inc
cwtl
subl
fnsave
jmp
daa
loope
sbb
fildll
mov
ret
jns
pop
aas
mov
test
and
sbb
push
inc
xor
push
add
or
xchg
fnstenv
push
or
pusha
ret
mov
loopne
test
mov
push
test
clc
fadd
mov
dec
inc
clc
rclb
or
jge
push
mov
add
outsl
add
pushf
xorb
lea
icebp
dec
or
pop
loop
or
test
dec
dec
jae
andb
dec
mov
or
add
push
fmuls
ljmp
fs
aad
lods
test
ss
aaa
inc
jg
cmp
jnp
sub
rolb
add
fdivrl
ss
xor
loop
push
or
int3
cmp
mov
lock
outsb
cmc
clc
nop
mov
cmpsb
loopne
cs
fcmovu
in
or
xor
das
mov
sbb
test
push
fdivrs
test
adc
fsub
pop
inc
loop
pop
mov
insl
xor
outsl
push
shll
in
mov
xchg
loopne
jl
lea
adc
xor
mov
mov
in
push
dec
pop
dec
repz
xchg
aam
push
sbb
xchg
pop
sub
inc
sub
shlb
inc
inc
test
jbe
fwait
push
mov
lock
arpl
mov
inc
mov
fcomps
es
cld
rclb
dec
jo
or
imul
inc
xchg
pushf
je
xchg
lock
scas
inc
adc
je
test
pop
cld
ret
mov
repnz
or
inc
mov
add
insb
inc
out
dec
adc
cs
cmp
add
ret
mov
mov
mov
fwait
and
pusha
and
push
xor
jge
push
push
insl
adc
jmp
ds
jmp
arpl
leave
pop
pushf
adc
cmp
mov
or
pop
in
or
or
fs
cli
xchg
cmp
pop
outsb
test
push
lea
daa
add
mov
xor
mov
push
xchg
loopne
adc
push
inc
sti
xchg
in
sbb
andl
adc
adc
adc
decb
add
js
das
inc
aad
mov
and
cmp
out
test
fsubr
lret
sub
adc
jmp
inc
popw
mov
outsb
or
jmp
push
xchg
rclb
notb
push
clc
sbb
rorl
sbb
or
fcoms
sbb
loopne
add
and
or
clc
jbe
and
mov
mov
mov
and
popf
lret
fdivs
mov
bound
nop
mov
xchg
lea
jo
es
mov
cmp
mov
mov
mov
jne
outsb
cmc
mov
subl
js
std
outsb
inc
mov
add
and
aad
mov
call
adc
inc
mov
ljmp
add
push
hlt
in
test
sub
clc
clc
ret
and
stos
sbb
shl
shrl
push
mov
mov
lret
push
and
mov
int3
jb
push
cli
xchg
push
inc
aaa
test
lods
mov
testb
cmp
adc
lea
call
aaa
jp
sub
je
jg
bound
xor
pushl
negl
clc
push
push
data16
addb
es
sbb
shl
mov
rorb
lock
hlt
sti
fbstp
lock
ret
mov
or
push
sbb
fmuls
movb
lret
sahf
add
add
xchg
push
jp
push
mov
add
mov
ljmp
out
imul
dec
push
clc
movups
fcomps
fistps
ret
inc
cli
orb
mov
subb
call
mov
jo
cmp
jo
mov
push
js
pcmpgtb
cli
xchg
add
xor
jo
pusha
and
jne
dec
and
or
push
popa
xchg
movsl
subb
hlt
push
add
imul
and
push
inc
rcrb
nop
xchg
call
pop
mov
inc
xor
add
rclb
ret
mov
xchg
jge
in
outsl
fisubl
xchg
cld
es
jo
insb
loope
mov
mov
scas
mov
dec
adc
shl
inc
add
mov
xorb
rcrb
inc
nop
rclb
add
clc
into
push
push
movsl
orb
adc
pop
cmp
test
mov
add
add
inc
mov
dec
push
sub
adcb
test
data16
lock
push
cli
popf
rclb
mov
mov
and
push
xor
dec
mov
xchg
sbb
xchg
jnp
dec
mov
rorl
adc
rcll
pop
cmc
dec
adc
mov
ja
js
push
je
dec
sbb
mov
add
incl
or
lods
adc
inc
test
js
sub
test
jne
push
mov
out
outsb
aaa
roll
fs
push
xorl
jno
inc
cmp
cmp
call
and
xchg
and
lock
aad
cs
push
stos
mov
ss
call
enter
cli
push
loopne
dec
add
dec
cmp
in
notb
mov
or
lcall
outsl
xor
test
push
std
pop
mov
xchg
push
mul
mov
push
std
popf
call
jb
cld
fiaddl
insl
xor
ds
rclb
cmp
push
xchg
dec
loop
adc
mov
dec
ficomps
cmp
sub
loopne
shlb
aaa
dec
lock
mov
xchg
sbb
lock
xor
fistpl
loope
fadds
dec
adc
pop
xchg
push
mov
enter
outsb
dec
xchg
scas
mov
rolb
mov
jp
int3
push
inc
jmp
loop
jbe
sbb
mov
scas
mov
jge
xchg
popf
adcb
stc
imull
adc
adc
aas
adc
or
jo
mov
sub
je
dec
popa
push
aam
sbb
adc
lea
xchg
cli
inc
cli
lea
mov
cltd
mov
add
scas
cld
lcall
cmp
mov
sub
or
js
or
outsl
mov
adc
lret
imull
inc
js
and
rol
shrl
sbb
std
adc
int3
xchg
ja
add
adc
xchg
adc
push
xchg
jbe
push
out
cli
fldt
aaa
inc
ret
inc
addl
cli
dec
movl
lods
cmp
aad
ret
jne
or
sub
cmpsb
scas
push
mov
leave
jbe
cld
adc
nop
sahf
cmp
int3
and
and
push
adc
sub
and
jecxz
std
sbb
inc
and
or
call
lea
sti
in
jo
ret
stos
or
adc
fadds
sub
inc
fmull
inc
xor
ret
or
orb
std
xchg
push
call
xor
out
sarb
sbb
xchg
jp
or
dec
data16
push
imul
mov
push
mov
adc
loop
cld
adc
and
push
xchg
into
shlb
mov
in
jg
fs
xor
xchg
sbb
rol
dec
sbb
das
mov
shl
adc
inc
jecxz
js
or
ds
push
rolb
sub
push
cmp
cmp
popf
xor
aas
xor
sbb
cmp
ljmp
out
test
push
mov
cmp
jo
xchg
fsubrl
loope
mov
mov
push
cmp
mov
and
aaa
pop
data16
xchg
xor
dec
insb
add
add
and
jb
sbb
add
add
jmp
mov
shlb
add
jo
mov
fidivs
mov
xor
cs
addl
clc
adc
inc
mov
decb
adc
imul
mov
xor
gs
call
call
js
inc
insb
popa
arpl
dec
je
dec
and
xchg
out
ja
push
clc
xor
shrl
or
out
push
lock
les
inc
jns,pt
sbb
hlt
add
dec
mov
lahf
xchg
jbe
xor
andl
fldl
adc
push
les
mov
or
mov
mov
xchg
or
push
repz
sbb
in
dec
mov
push
imul
dec
push
ret
pusha
xchg
dec
pop
bound
adc
cld
hlt
dec
inc
orl
add
loop
adc
mov
push
add
loopne
cmp
sbb
movsb
sbb
dec
mov
je
pop
fdivl
adc
es
add
fs
lock
inc
faddl
jno
adc
adc
ljmp
sbb
movb
jns
mov
mov
mov
mov
stos
push
lret
inc
test
and
lea
mov
pop
sub
outsb
mov
or
inc
cli
cmp
fdivrs
jle
test
loop
aas
stc
push
xor
adcl
jb
out
pushl
incb
lcall
push
addb
mov
fwait
add
xchg
mov
push
xor
xchg
sub
mov
pop
aaa
sbb
call
and
addb
add
cwtl
jle
jle
add
rclb
je
bound
push
xchg
jne
lret
stc
in
and
adc
jle
push
mov
pop
sub
int
inc
rcr
popa
ret
pop
jmp
insb
xchg
adc
lret
ret
call
mov
add
pop
push
pop
idivl
push
aam
mov
pop
jb
adc
cmpsb
lea
arpl
push
loop
testl
and
sarb
mov
or
cmovo
outsl
clc
or
push
jae
fs
lea
mov
xchg
mov
push
cs
inc
mov
push
and
dec
dec
das
pop
pop
pop
jbe
mov
pushaw
outsb
shl
insb
fcompl
mov
sub
pop
js
dec
add
aam
je
hlt
add
pop
pushf
inc
mov
mov
pop
mov
int
pop
dec
xchg
lret
push
add
jle
xlat
add
in
jb
push
lea
pop
lods
cpuid
inc
mov
xorb
jmp
data16
dec
stos
add
shlb
jo
jge
mov
cld
adc
in
add
cmp
push
or
outsb
les
mov
sub
les
sub
push
insb
in
call
mov
inc
std
xor
push
dec
sub
sar
mov
and
inc
inc
inc
add
je
xor
adc
inc
mov
push
fdivrl
pop
adc
stos
pop
clc
cmp
loopne
dec
insl
inc
dec
dec
adc
inc
outsb
inc
std
or
xor
mov
cwtl
adc
ret
add
sarb
ss
jns
ja
dec
dec
add
adc
fdivs
mov
test
add
into
and
xlat
shlb
sbb
xor
cmpsl
test
inc
xor
cmp
scas
or
add
mov
leave
adc
loope
ds
nop
sub
sub
push
enter
push
stos
dec
pop
scas
subb
test
jp
xorl
mov
cmpsb
or
pushf
pusha
pop
push
sbb
fs
rcrb
jecxz
ret
in
jg
hlt
in
mov
jbe
ss
ljmp
and
mov
lcall
fsubs
adc
test
aam
icebp
cld
and
jg
adc
aaa
xchg
adc
push
lock
pop
dec
fistpl
mov
fcompl
stos
ss
add
mov
notb
mov
pop
shlb
loopne
xchg
ss
jo
xchg
adc
fcom
pop
in
mov
add
cmp
cli
lods
lret
mov
xor
adc
inc
loope
push
sub
dec
pop
cmp
sub
clc
fsubrp
mov
stos
jg
fildl
cmp
shll
call
lods
xchg
cmp
xor
jmp
xchg
xor
shl
or
mov
add
adcb
push
jmp
add
jl
inc
sub
test
add
fdivr
dec
mov
nop
mov
cs
daa
negb
call
dec
jmp
mov
sbb
jb
xchg
cmpsl
sub
into
push
pop
cld
test
ret
shlb
cmp
cmp
lock
loopne
lods
push
int3
inc
push
sub
lret
gs
mov
jge
sub
ret
jg
test
out
jge
add
fisttpl
scas
inc
decl
out
inc
or
push
inc
add
dec
cld
add
inc
dec
push
and
insl
enter
mov
das
mov
js
cli
std
adc
adc
std
pop
pop
stos
cmp
cmp
dec
js
aas
push
mul
rcr
jmp
repz
push
mov
xchg
add
sub
cmp
cli
and
mov
imul
mov
lahf
inc
sub
cmp
insl
pushf
xchg
fstpl
adc
add
test
jnp
xor
adc
push
add
mov
outsl
js
test
push
or
movl
push
lods
outsl
mov
pop
dec
sub
testb
popa
and
idiv
mov
sarb
xor
jl
xchg
xor
xchg
cmp
ret
dec
push
call
mov
sbb
and
ja
and
jl
dec
into
xor
sarb
sub
ret
sbb
lods
sub
aam
lcall
push
or
arpl
aaa
mov
out
je
add
add
scas
push
das
add
sti
dec
repnz
imul
rcrl
lea
inc
inc
or
out
stc
pop
pop
mov
sub
in
aam
pushf
js
jmp
sahf
movq
cli
js
pop
cmp
mov
add
add
mov
add
imul
jne
xchg
push
xchg
aas
sahf
pop
xchg
or
sbb
cmp
xchg
xor
add
hlt
rorb
mov
xor
dec
mov
ljmp
mov
cli
jp
lods
lcall
or
and
sbb
adc
cmp
push
cmp
mov
bound
aam
int3
push
dec
pop
add
cmc
clc
dec
mov
es
or
jl
test
push
pop
pop
push
cltd
loope
mov
dec
and
dec
mov
or
pop
cs
pushf
andl
prefetch
int
pop
add
out
pop
sub
xchg
sahf
inc
pop
out
push
sub
int3
test
out
cmc
adc
sbb
inc
push
js
ret
movsl
xchg
clc
insb
rclb
fsubrs
mov
cld
in
cmc
out
push
imul
push
add
push
lds
adc
gs
xor
mov
je
jl
xchg
push
and
or
adc
cmp
and
xor
add
fidivl
nop
adc
cltd
fsubs
les
test
add
pushf
les
sti
sub
movsb
dec
aaa
stos
sub
mov
loopne
mov
inc
add
add
addb
xlat
push
mov
out
dec
push
cmp
or
mov
mov
clc
clc
inc
repz
sub
aaa
cli
add
xlat
mov
pop
lret
les
aam
shrb
lea
adc
js
mov
inc
std
shrb
clc
insb
sbb
clc
das
xchg
addb
rcll
cli
and
decl
mov
orl
data16
xor
rcrl
adc
loop
jmp
cmp
leave
mov
jmp
adc
es
add
in
mov
mov
inc
inc
gs
test
pop
inc
push
fcmove
dec
and
or
mov
mov
push
pop
out
insl
leave
fwait
push
lcall
je
lea
stos
cmp
or
xlat
and
lea
nop
mov
cwtl
clc
mov
dec
xchg
pop
fadds
sbb
adc
push
adcl
js
or
out
pop
jmp
adc
outsl
inc
cld
test
lock
push
mov
test
pop
leave
push
sbbb
dec
decl
jmp
push
mov
movl
into
push
and
add
mov
mov
xchg
push
mov
mov
bound
clc
addb
rcr
mov
data16
pop
and
ret
add
adc
jge
lahf
push
jbe
inc
cmp
xor
add
notb
mov
leave
or
push
ljmp
outsb
add
fmuls
in
mov
add
pop
mov
sbb
adcb
and
sub
or
sbb
pop
sarb
sub
push
inc
in
sahf
or
orl
mov
sbb
mov
add
add
dec
cmp
mov
sub
sub
mov
out
push
cld
adc
test
jb
hlt
jne
pop
ljmp
and
les
push
sbb
lock
push
clc
and
xchg
je
pop
sarb
inc
xchg
testb
sbb
pop
mov
inc
xorl
dec
jg
rcl
fmuls
cmp
push
adc
rorb
test
xlat
loope
xchg
mov
clc
std
das
sbb
mov
mov
push
push
dec
or
xor
lds
rcll
fdivrs
sbb
mov
jne
fldl
add
sbb
hlt
cmp
mov
cmp
lea
inc
mov
fldenv
cmp
inc
push
movl
sub
dec
and
dec
jge
inc
and
js
nop
sub
and
adc
pop
jo
xchg
xor
inc
dec
jl
inc
ja
pusha
xchg
xor
dec
fbld
xchg
inc
fchs
out
outsb
aaa
call
pop
jp
stc
add
sbb
mov
inc
shl
dec
cs
shrb
inc
adcl
add
and
mov
pop
xlat
fisttps
inc
loopne
mov
push
dec
or
mov
cmp
xor
inc
std
sbb
decb
mov
push
pop
lret
xor
adc
jbe
ret
push
or
rol
jp
cld
fistpl
mov
adc
mov
ljmp
adc
data16
add
sti
adc
push
add
in
mov
bound
sub
sbb
mov
xlat
js
iret
int3
inc
cli
mov
stos
test
pushl
jb
orb
insl
movl
scas
mov
cld
sbb
and
adc
fdivrs
pop
adc
or
es
mov
xchg
mov
cltd
popa
cmpb
cli
pusha
imul
or
inc
push
xor
adc
aam
mov
mov
xor
adc
imul
xor
test
xchg
mov
in
and
ret
xchg
js
push
sbb
sbb
icebp
add
cmp
add
cmp
pop
jle
xor
inc
jbe
lret
call
stos
push
lea
xchg
insl
andb
ficoml
adc
push
xor
push
fisubs
call
aam
nop
lret
jb
clc
add
cltd
in
cli
clc
add
rclb
sub
rolb
adc
loopne
pop
add
sahf
mov
xor
out
or
push
bound
sbb
repz
xorl
inc
inc
pop
push
or
out
xor
jae
sub
jle
dec
icebp
fildll
mov
adc
call
ss
mov
enter
rclb
icebp
add
dec
push
jb
int
xchg
jbe
mov
pop
dec
pop
sub
gs
ljmp
push
cld
or
aas
cs
popaw
dec
pushf
push
xor
outsl
xchg
adc
cld
xor
cmpsb
push
mov
add
mov
jecxz
ret
xchg
inc
enter
pop
mov
mov
sub
push
data16
mov
rorb
orb
xchg
add
shrl
test
rcl
movsl
call
add
push
sub
cmpsb
mov
out
push
or
aad
add
push
hlt
call
push
scas
jne
dec
std
rorb
test
xor
inc
adc
xchg
mov
mov
sarb
in
mov
adc
pusha
push
mov
jns
cmc
inc
cld
ja
dec
push
xchg
sbb
or
inc
in
adc
sbb
mov
test
sbb
jae
cmc
dec
lock
nop
testb
imul
test
jae
shlb
fldlg2
pop
sbb
inc
outsl
inc
xchg
inc
pop
xor
inc
rcl
decl
and
and
dec
popa
push
add
sub
dec
add
aaa
pop
pop
test
add
inc
sbb
mov
int3
neg
cmp
inc
inc
subb
fcoms
loop
pusha
loop
insl
test
adc
mov
cmc
out
or
inc
inc
sub
add
stos
enter
sbb
bound
setl
sbb
daa
sbb
cmp
adc
rorl
mov
push
or
les
mov
xor
icebp
dec
jne
aam
jb
mov
mov
nop
push
push
inc
pop
and
add
sahf
push
inc
add
roll
lods
cwtl
data16
pushf
je
rolb
stos
dec
mov
and
repnz
sub
jmp
add
ficoml
inc
mov
sysret
ljmp
ja
insl
sub
lods
or
push
sti
fs
aas
lock
inc
or
in
sub
inc
sub
and
mov
pop
and
xor
mov
or
pop
inc
repnz
iret
push
mov
sarb
dec
ljmp
lock
loop
and
or
test
jl
xor
push
rorl
pop
sbb
add
jecxz
test
cmp
push
push
mov
mov
xor
clc
cs
aam
in
sbb
das
mov
rcl
mov
mov
ret
dec
or
je
jp
sbbb
aam
push
dec
popa
adcb
inc
pop
pop
iret
dec
pop
mov
adc
and
aam
int3
mov
pop
sarb
adc
cmpb
pop
call
push
hlt
insb
jmp
push
or
pop
mov
ret
inc
lods
lea
xor
dec
sbbb
outsl
call
add
add
adc
xchg
out
mov
or
incb
je
loop
xchg
les
adc
ljmp
aas
sub
or
int
add
cli
mov
push
xor
adc
mov
and
push
sbb
loope
push
fldenv
das
sub
push
or
push
js
stos
add
cmp
pop
inc
clc
mov
add
cmc
daa
fidivl
decb
adc
cmp
sbb
sbb
ret
push
in
ss
xchg
shrb
fcompl
jno
cmp
ret
add
ds
cmp
mov
pop
loopne
and
lea
or
xor
clc
rcrb
mov
adc
cwtl
pop
in
sbb
bound
lret
insl
jge
pusha
test
jmp
sub
cmp
mov
mov
outsb
icebp
aad
push
sub
rcll
lods
and
jo
xchg
push
dec
in
aam
sbb
ret
test
lods
mov
popf
cmp
add
rorb
adc
cmp
or
rclb
push
add
sarb
aad
int3
mov
and
add
push
add
sahf
cmp
xor
nop
jle
inc
push
int3
pop
out
add
call
hlt
xor
test
cmp
push
pop
sub
jecxz
push
mov
dec
int3
push
mov
inc
jp
adc
shl
stc
inc
xor
insl
mov
sub
mov
imul
scas
jmp
cmp
add
ret
es
inc
imul
push
lret
and
repnz
sarb
loopne
cltd
push
push
dec
insb
jecxz
repnz
pusha
jo
cmpsb
or
add
into
outsl
sqrtps
pop
and
and
adc
jp
aaa
cld
pop
test
shr
mov
outsb
daa
xor
pop
pop
sbb
jno
mov
icebp
cmpb
jl
icebp
in
imul
jg
mov
gs
je
cmp
or
pop
ljmp
aam
pop
inc
cmp
adc
dec
insb
lret
mov
adc
mov
or
cmp
pop
ret
or
pop
cld
inc
push
jecxz
cmp
fmull
test
inc
loop
sbbl
shlb
dec
mov
dec
iret
push
inc
sbb
dec
pop
bound
test
pop
insb
push
gs
fsubl
pop
push
inc
add
jne
add
popa
stos
or
add
xor
push
decl
aaa
mov
cmp
xor
jne
and
and
dec
mov
adc
jg
shll
cmp
inc
mov
inc
add
xor
adcl
fdiv
mov
xchg
pcmpeqb
and
rcr
jle
inc
mov
fs
jl
mov
mov
fdivs
push
ds
xor
rolb
mov
adc
movsb
in
mov
cmp
in
adc
and
sub
je
enter
inc
push
cmc
js
fisttpll
test
dec
add
add
int3
sti
sub
cld
incl
es
add
adc
push
inc
ret
push
aam
cmp
fwait
test
xchg
test
push
inc
pop
xor
int
mov
cmpsb
or
stos
fdivl
je
call
push
clc
aaa
fsubrl
xor
or
int3
loopne
inc
jmp
sbb
mov
lock
loopne
pushw
dec
inc
inc
push
pop
mov
and
push
mov
xchg
les
test
mov
sarl
inc
cmp
rcl
pop
lcall
cmp
adc
adc
sub
sub
push
and
add
movsb
or
inc
dec
insb
sbb
ret
aam
addr16
mov
or
lock
faddl
mov
push
sahf
xor
imul
cli
call
icebp
xor
or
loopne
decb
rorb
popa
push
cli
add
adc
sub
mov
testb
out
in
clc
inc
push
fsubrs
icebp
push
dec
dec
xchg
out
sahf
in
lods
mov
or
out
adc
sub
push
mov
inc
bound
out
inc
or
jge
adc
and
mov
sub
xchg
popa
mov
mov
test
dec
jl
cs
jp
in
sbb
push
and
fcomps
or
lock
xor
push
imul
ljmp
and
inc
bound
sub
xor
in
dec
lea
fsubrl
insb
nop
ret
inc
add
movsb
and
shlb
fistl
loope
mov
cld
xor
lods
inc
jo
imul
je
inc
ret
mov
xorb
adc
cld
roll
push
add
add
rcrb
or
mov
cmp
fadds
sbb
dec
push
mov
dec
mov
cli
mov
lcall
loop
xor
hlt
pop
inc
cmpsb
clc
test
ret
pushf
mov
sub
jne
xlat
shrb
in
cmp
xor
je
push
mov
fimuls
fmull
sub
adc
movb
sti
pushl
jbe
inc
ss
je
mov
rolb
sub
pusha
scas
mov
movsb
push
adc
mov
mov
jecxz
sbb
mov
dec
cmp
js
mov
stos
mov
push
movsl
jne
xor
lods
cmp
rcrb
xor
cli
or
rolb
imul
stc
push
sbb
mov
mov
or
mov
bswap
push
sbb
jnp
cmp
or
ljmp
incl
enter
add
gs
mov
out
inc
orl
mov
add
out
dec
push
enter
xchg
xchg
mov
adc
inc
add
clc
push
sbb
rolb
push
or
ss
int3
inc
pushf
vmread
mov
xchg
into
stos
push
xchg
push
mov
pusha
aam
sub
cmpsl
ja
out
movsb
adc
rorb
adc
or
mov
add
mov
call
pop
es
ficomps
or
mov
outsb
inc
push
xchg
push
cmp
push
ss
lock
xlat
sub
and
movsb
sar
int3
fidivrs
arpl
adc
push
ret
push
pop
fsubrs
decb
loope
ss
int3
push
aas
adc
adc
andl
lods
cmp
push
push
mov
xchg
inc
push
sarl
inc
jbe
add
sub
mov
push
in
enter
inc
daa
add
dec
sbb
jns
push
cmp
inc
movsl
pop
repnz
dec
loop
pop
inc
pushf
mov
repnz
mov
cmp
pop
jae
push
loope
or
mov
or
or
inc
push
dec
mov
sar
cmp
mov
mov
in
pop
test
addps
xor
or
xchg
mov
lds
jmp
cltd
bound
inc
add
mov
icebp
pop
fiaddl
pop
xor
cmp
xchg
mov
adc
or
out
nop
fisubrs
rorl
call
and
cld
roll
icebp
adc
fsubl
jne
loopne
mov
mov
dec
aam
xor
insb
and
mov
out
mov
shlb
mov
adc
cmp
mov
pop
lret
sti
adc
fbstp
call
inc
fcoms
sti
mov
inc
jno
loope
sub
add
imul
incl
push
je
lods
add
cli
out
xchg
cmpb
je
or
xchg
cld
jnp
push
adc
ret
mov
ljmp
and
test
loope
push
or
sbb
mov
outsb
mov
sbb
test
push
fldl
pop
and
sub
add
xor
push
decl
popl
mov
inc
ljmp
add
insb
testb
mov
nop
xor
inc
jmp
mov
jg
pop
mov
lret
subl
lock
xor
mov
loop
cmpsb
or
fcomps
mov
lock
and
xor
pop
call
inc
scas
aam
arpl
in
adc
or
fld
sub
std
push
and
dec
repz
jae
xchg
cmp
lcall
rorl
and
sub
or
mov
add
call
mov
dec
add
sbb
les
dec
pop
dec
xor
wbinvd
add
testb
add
xchg
movsl
out
aam
or
cld
push
add
mov
repz
and
jmp
ret
mov
inc
shr
sub
cmc
cld
adc
xchg
xor
push
or
rcll
and
mov
lret
pop
orl
adc
adcl
or
xor
xchg
test
data16
push
jecxz
loopne
pop
sbbl
loopne
push
xchg
aam
dec
je
adc
pop
data16
loop
shrb
test
ss
incl
stos
sbb
test
fidivrs
xor
mov
push
movl
inc
movsb
mov
pop
inc
adc
sbb
mov
dec
add
mov
movb
jmp
cmp
bound
dec
sub
xchg
insl
xchg
sarb
sbb
dec
xchg
lcall
cmp
mov
mov
cmp
jmp
fadds
mov
sbb
pop
and
jo
sbb
call
rolb
add
cmp
jbe
cmc
pop
clc
rol
cmp
add
and
call
xchg
sbb
or
pop
mov
add
jb
outsb
adc
push
sbb
jo
daa
mov
aam
call
inc
cld
jmp
stos
nop
test
pause
hlt
add
icebp
call
add
pusha
or
sbb
jne,pt
mov
sub
xor
mov
adcb
inc
out
or
pushf
lret
inc
push
add
inc
add
daa
cmp
pop
lea
out
stos
std
mov
push
popf
lea
sbb
pop
sub
fmul
int3
andb
movsl
sahf
or
repnz
loopne
mov
cwtl
les
push
hlt
push
mov
xchg
inc
or
jl
notb
xchg
cmp
push
mov
dec
sub
pop
and
xor
loop
aam
lea
mov
addb
or
imul
sub
mov
shll
jbe
jmp
pop
mov
sub
and
ficomps
xor
pop
push
inc
stos
addb
pop
test
push
mov
daa
add
pop
add
ret
sarb
dec
inc
push
xor
add
mov
pop
icebp
lcall
out
pop
push
push
inc
imul
xor
xchg
pop
inc
mov
psrlw
loop
or
cli
sub
jge
or
mov
xchg
loop
shll
pushf
frstor
and
rcrb
push
jne
addr16
insb
mov
outsb
add
adc
mov
jae
and
xchg
pushf
andl
jmp
rcrb
repnz
mov
push
sub
dec
mov
rclb
cwtl
pushf
cmp
add
push
lock
sub
lret
cwtl
idivb
mov
fcomps
test
pop
aas
add
cli
aam
pusha
and
cmp
lahf
subl
xor
mov
fimull
inc
push
mov
outsl
lea
hlt
or
inc
les
roll
test
fcomi
insl
sub
mov
int3
push
mov
push
imul
cwtl
mov
push
fwait
xchg
jmp
movsb
push
inc
pop
sarl
stos
push
jae
mov
mov
or
pushw
xchg
shlb
push
sbb
or
stos
jge
inc
mov
cmp
pop
int3
or
out
add
outsl
mov
or
mov
lcall
rcrl
add
push
test
pop
pop
add
xor
push
sar
adc
inc
add
adc
shlb
das
mov
std
das
in
lret
pop
push
mov
call
jp
shr
dec
and
pop
ret
subl
mov
int3
je
pop
dec
inc
cmpsl
push
sbb
lea
dec
xchg
xor
test
call
les
fldenv
clc
mov
lea
movb
cmp
xchg
mov
leave
cmp
shlb
outsb
xchg
loope
pop
ret
je
and
jmp
push
test
dec
lea
int3
movsl
outsl
sbb
jb
jl
stos
lods
cli
stos
and
sub
mov
arpl
push
std
pushw
jp
test
push
pop
or
mov
cld
xchg
mov
in
dec
inc
jmp
ss
dec
pop
and
test
js
outsb
mov
shlb
push
in
inc
inc
icebp
daa
ljmp
push
add
push
addr16
sbb
push
adc
dec
mov
sub
les
cmpb
enter
mov
pop
sbb
int3
cmp
mov
mov
sti
lock
push
jb
xor
cli
ds
ja
loopne
mov
popa
pop
faddl
push
pop
xchg
sbbb
ds
push
divb
call
test
jg
adc
cld
adc
cmp
cmp
cmp
cld
outsb
mov
inc
cld
push
mov
test
pushl
inc
cmp
add
inc
and
int3
call
scas
fcomp
and
idivb
popf
sbb
inc
ror
and
xchg
mov
dec
lret
mov
add
es
cmp
mov
fdivs
insl
xor
sub
mov
jle
inc
inc
call
lea
sub
push
mov
adc
dec
xor
out
sbb
add
mov
lea
sbb
stos
into
cmpb
add
dec
xchg
sbb
cli
xchg
dec
dec
loop
add
or
int
jo
push
ret
fisttpll
or
lock
fsubrs
add
or
test
mov
xchg
pusha
mov
xbegin
cmp
pop
adc
outsl
push
je
add
std
out
and
pop
xchg
xchg
ret
incb
adc
add
xor
push
mov
fbstp
rcl
cmp
push
inc
dec
xor
pop
dec
push
push
test
int3
jb
movsb
push
mov
add
ljmp
mov
repz
or
cli
mov
inc
pop
jo
and
leave
jne
jne
mov
dec
push
mov
mov
cld
mov
add
add
jge
sub
subl
sub
push
push
or
pop
or
fsub
cmp
popf
outsb
aam
les
aas
and
lock
stos
or
popa
sbb
sbb
and
cld
and
push
sbb
dec
jl
hlt
mov
jmp
pop
jo
out
mov
pushf
push
scas
push
movsl
aas
sbb
mov
jl
fisttps
inc
push
lock
pop
inc
push
sub
or
enter
xorb
das
enter
adc
jecxz
and
xlat
mov
dec
xor
and
decl
js
xchg
cmc
xor
sub
and
add
push
sub
cmp
aas
or
or
xor
aas
jnp
ss
jge
pop
mov
negl
popa
aad
dec
push
xchg
fimull
add
cmp
xchg
mov
pop
js
movsb
rclb
gs
add
sub
sarb
lock
adc
sbb
cmp
xchg
in
and
jg
shlb
push
loope
lock
popa
pop
mov
xorl
dec
mov
xor
test
cmp
push
pop
rep
add
mov
push
lea
inc
in
or
outsb
incl
cmp
inc
or
popf
add
push
inc
repnz
fst
pop
sahf
cli
xor
divb
sahf
pop
inc
add
add
dec
mov
or
rclb
insl
testb
mov
mov
mov
cmp
fdivs
push
add
sbb
inc
sahf
xor
inc
push
cmp
test
jmp
ja
mov
xor
xchg
xor
movsb
jmp
testl
xchg
dec
test
ret
xchg
push
mov
inc
inc
cld
inc
cmpsb
lret
in
xor
fs
mov
fdivr
movb
dec
outsb
xchg
xor
fistpl
loopne
jp
roll
lcall
push
jns
and
test
xor
cwtl
clc
xor
shr
imulb
enter
mov
outsl
inc
jle
xorb
sti
js
mov
fdiv
jl
add
fwait
xchg
dec
mov
daa
and
add
outsl
decb
pop
sbb
clc
and
mov
mov
pushf
mov
dec
cmc
loop
int3
fdivrs
mov
push
in
xchg
call
adcl
mov
cmp
sbb
into
jne
add
jne
hlt
popa
add
mov
pop
rolb
push
stos
and
fmul
sub
mov
jne
jmp
pop
dec
cmc
pop
sbb
mov
jns
orb
dec
ficoml
mov
icebp
insl
adc
cs
cld
push
sub
cbtw
mov
cmp
inc
call
push
in
inc
aam
jb
adc
mov
jne
std
cmp
ficoms
and
sahf
sarb
pop
leavew
adc
fadds
pop
add
push
jecxz
shlb
not
add
pop
cld
jg
xchg
cwtl
add
lret
call
mov
into
fisttpll
imul
mov
test
mov
mov
mov
push
cmc
pop
outsl
fiaddl
push
fs
push
jbe
lods
dec
pusha
inc
add
mov
mov
ret
das
pop
imul
xor
jmp
lods
dec
mov
adc
sbb
lcall
ret
push
xchg
rcll
and
mov
adc
inc
push
mov
test
lock
int3
jmp
test
push
push
inc
mov
call
push
aaa
cmp
rorb
push
rolb
pop
les
jmp
lock
xor
jmp
mov
out
jp
js
pusha
inc
pusha
sub
push
jmp
adc
pop
add
ds
dec
addl
test
pop
scas
inc
mov
mov
mov
push
push
xor
jl
mov
sbbb
xchg
addb
rcll
inc
adc
push
pop
adc
mov
push
push
inc
pop
into
rcll
pop
enter
je
mov
adc
mul
hlt
lods
push
nop
ret
push
add
pop
add
insb
cmc
push
inc
movsl
lret
push
test
xchg
scas
inc
jecxz
js
mov
pop
mov
rorl
dec
mov
aam
inc
in
jle
push
imul
push
ret
xchg
mov
ret
xor
mov
mov
inc
or
cmp
dec
push
add
add
mov
lock
add
lock
rcrb
jo
int3
js
sbb
pop
movsb
nop
sub
imul
std
xchg
test
xor
and
dec
or
push
dec
sbb
ret
pop
jb
mov
mov
loop
mov
pop
mov
nop
sub
scas
bswap
movsb
mov
mov
clc
jp
mov
test
cld
adc
rorl
xor
xchg
lea
add
adcl
and
repz
inc
ret
shrb
addb
mov
clc
lcall
in
imul
push
xor
inc
cmc
mov
jl
lds
ficomps
les
std
or
xor
inc
repz
add
fiadds
mov
cmpsb
je
mov
add
xchg
push
gs
add
aaa
inc
push
sbb
inc
nop
rol
and
leave
add
mov
inc
lret
add
stos
jg
ret
dec
mov
loope
fs
cld
ret
dec
dec
mov
adc
sarb
sub
mov
mov
loopne
cmp
stos
adc
and
bound
or
dec
rclb
pop
sarb
test
sbb
lods
xchg
clc
clc
adc
push
lcall
or
mov
adc
add
cld
cmp
pop
mov
in
das
xor
sbb
cs
imul
incl
call
lahf
add
aad
loop
cltd
sarb
incl
jp
add
sbb
pop
and
ds
and
dec
ret
push
add
inc
ds
pusha
mov
or
ljmp
sub
aas
cld
xchg
add
dec
movsl
ret
mov
pop
fwait
inc
xchg
dec
cmpl
push
je
faddl
push
jnp
and
xchg
sub
ss
dec
scas
mov
add
movsb
les
fsin
and
jmp
jb
sbb
mov
jl
sub
xor
add
je
std
jns
rorb
cwtl
jp
jmp
dec
ficompl
adc
sub
add
cmp
aam
adc
lret
jp
les
mov
and
cmp
lock
add
push
lea
test
or
test
or
push
movsb
dec
cld
push
inc
lret
jno
ret
mov
ss
data16
dec
std
jecxz
jb
xchg
mov
orb
dec
push
xor
mov
jmp
xchg
jo
adc
xchg
pop
out
push
and
mov
cmpb
movsb
addr16
cmp
add
jmp
sbb
pop
xchg
jo
sbb
cmpsb
mov
mov
jo
add
mov
mov
es
cltd
clc
addb
lcall
out
inc
loopne
fs
mov
into
mov
imul
popa
lcall
inc
in
push
xchg
add
jns
add
rcrb
in
cli
sti
frstor
inc
mov
in
mov
jmp
jb
sti
loopne
add
dec
je
sub
ret
adc
pop
das
mov
je
cmp
ss
loop
push
bound
sbb
sub
push
mov
in
inc
xchg
mov
enter
xor
jno
inc
pop
hlt
cwtl
jne
push
insl
pop
fadd
dec
sub
sahf
xor
push
pop
dec
sbb
mov
mov
les
sbbb
fiadds
gs
in
push
push
add
dec
insb
test
lods
jo
loopne
mov
mov
je
add
push
jle
mov
jle
inc
stos
adc
ds
out
pop
and
or
stc
orl
push
loope
movsb
add
jae
iret
cmp
mov
outsb
lea
xor
mov
inc
push
inc
test
jle
outsl
test
xchg
mov
push
or
xor
ud0
mov
xor
xor
mov
or
pop
dec
push
inc
and
push
fwait
mov
xchg
push
subl
mov
icebp
push
movsb
dec
fildll
je
test
inc
popa
xchg
test
sub
outsl
mov
hlt
ljmp
mov
ret
push
ljmp
mov
jl
into
stos
push
push
cmpsl
mov
xor
in
loopne
push
add
xchg
or
xchg
mov
subb
stc
pop
aas
nop
xchg
insb
rclb
cmp
test
xchg
add
inc
sub
stos
sub
mov
call
sbb
nop
outsl
jg
sahf
push
sbb
inc
xor
sbb
cltd
jle
add
mov
je
sub
fisubrs
adc
sbb
mov
les
dec
push
movsb
jo
es
movl
jl
push
enter
rorl
and
cwtl
lea
daa
and
mov
or
lret
inc
mov
call
das
fidivs
jae
out
gs
out
fcmovbe
mov
push
flds
jo
adc
pcmpgtw
cmp
or
push
repz
push
mov
incl
lea
inc
inc
mov
loopne
jne
negb
outsb
adc
rclb
ret
push
notb
lcall
cwtl
push
push
push
movsl
orb
push
and
mov
jnp
push
cli
adc
lock
js
bswap
rolb
sub
lods
jbe
stos
clc
mov
dec
test
sbb
or
nop
jp
pop
popa
adc
cmpsl
andl
push
lcall
fcomps
add
nop
mov
mov
dec
xchg
sahf
mov
les
pusha
movsl
fstl
or
fs
dec
inc
fdivrl
call
arpl
xchg
or
cli
fisubl
mov
jb
add
pusha
adc
add
sahf
adc
sbb
cli
mov
sbb
mov
cmp
hlt
cmp
std
lret
in
lea
and
or
ljmp
scas
xor
dec
or
std
or
cwtl
rol
and
fildll
lcall
adc
subb
out
popa
adc
test
push
jp
sub
sbb
or
mov
add
movsb
push
or
inc
pushf
ret
sbb
mov
rcrb
push
aam
fimull
inc
lcall
and
adcb
or
or
and
push
mov
pop
outsb
ja
mov
or
das
inc
inc
xor
and
cmp
push
ret
push
rolb
lock
stc
subl
inc
fists
xchg
mov
divb
push
cmpsb
notb
addb
sbb
aam
push
sub
push
pusha
mov
addl
xchg
jecxz
lcall
inc
loop
ljmp
cmpb
sbb
aam
cmpsl
cwtl
out
adc
mov
nop
jno
mov
add
sub
fsubs
xor
inc
fistpll
ja
mov
repnz
je
bound
pop
sbb
mov
cmp
inc
add
mov
call
cwtl
push
js
adc
add
xchg
into
inc
xor
loop
sbb
enter
test
sub
jno
and
pushl
cmp
jl
sbb
hlt
ret
outsl
adc
xchg
pop
and
sahf
cmp
xchg
movsb
cmp
roll
clc
aas
xor
cmp
cmp
pop
xchg
stos
jmp
add
outsb
mov
xor
xchg
mov
ret
mov
or
push
ss
aas
mov
push
xchg
sbb
dec
pusha
mov
add
add
int
out
rolb
test
pop
and
aaa
mov
xchg
jae
dec
xlat
xor
sahf
sub
dec
les
cs
ret
cld
xchg
xchg
push
push
fcmovb
sub
mov
push
aaa
jmp
popf
push
rol
lret
rclb
add
mov
lea
rorb
dec
xchg
and
jl
mov
pop
mov
sub
xchg
mov
inc
orl
or
mov
xchg
sub
push
aad
pusha
iret
push
inc
fistps
adc
push
insl
aas
test
out
push
fstpl
xor
dec
cs
adc
fadds
andl
jo
xor
mov
lea
cmpsb
push
push
xor
pop
or
mov
aam
xchg
inc
fsubr
popf
push
test
lret
mov
icebp
add
in
mov
cmp
iret
cli
je
call
pop
std
lea
je
test
cmp
pop
data16
xchg
push
mov
roll
cs
add
push
sarb
sarb
cld
jp
mov
add
mov
cmp
adc
imull
sbb
pop
icebp
push
lock
mov
in
sub
jg
or
adc
and
dec
or
dec
add
iret
cli
ret
and
adc
pusha
xor
inc
call
dec
rorl
loopne
js
ljmp
mov
fsubrs
mov
mov
ret
loop
mov
loop
aam
mov
mov
xchg
jns
push
lds
std
clc
cmpsb
mov
push
and
loope
je
jne
test
das
lock
pusha
or
test
shrb
push
in
push
in
and
push
addr16
imul
je
fmuls
les
xchg
out
mov
movsb
test
add
rol
jle
sbbb
out
add
nop
rol
fadds
icebp
out
mov
jb
movl
xchg
sub
mov
or
sub
pop
or
adc
jne
or
inc
add
out
scas
sub
call
adc
pop
test
pop
and
icebp
testb
pushf
adc
pop
add
mov
lcall
sub
movsb
cld
add
or
test
cld
push
loop
test
jge
mov
add
psrlq
test
adc
inc
test
add
add
pop
into
cmpsl
hlt
orl
inc
push
mov
pop
cwtl
in
call
xchg
pop
lods
and
test
push
adc
xchg
enter
add
dec
and
pop
pop
mov
adc
mov
adc
stos
enter
mov
insl
push
and
inc
loopne
pop
imul
test
push
scas
mov
mov
loopne
jmp
in
add
inc
push
sbb
gs
ror
mov
adc
pop
pop
add
notl
xor
add
push
dec
add
test
fadd
shl
outsb
push
cmp
les
pop
cmp
inc
clc
mov
outsl
scas
fsubrl
inc
mov
adc
fbld
pop
aam
cmp
mov
call
cmp
mov
imulb
jle
test
add
ret
lret
adc
xchg
push
pop
sub
ja
or
ja
add
push
push
call
adc
push
jae
stos
push
dec
jl
add
je
dec
adc
repz
jmp
mov
or
or
scas
mov
pop
mov
mov
lock
call
xor
push
mov
pop
roll
cmp
add
das
fs
sub
cld
adcb
sahf
adc
pop
and
push
sub
sbb
imul
and
mov
rolb
pop
incl
dec
clc
inc
lock
cld
ss
dec
adc
add
adc
ss
jb
mov
test
push
pop
mov
int3
inc
mov
test
cmp
push
je
mov
mov
out
push
rolb
call
xchg
jae
les
dec
sbb
inc
imull
mov
out
jg
xchg
pop
sbb
loop
xor
push
push
cmp
mov
jl
and
jmp
mulps
rcrl
orl
mov
xchg
adc
and
outsl
and
and
mov
gs
jb
push
loopne
je
inc
jmp
pushf
test
sti
cmp
mov
enter
cmp
sub
xchg
stos
xchg
mov
xor
adc
xor
and
nop
sub
popf
cmp
inc
rorb
cmc
dec
or
mov
dec
mov
jmp
sub
inc
push
jmp
fildll
movsl
cmp
or
mov
orl
ljmp
adc
outsl
loop
push
repnz
add
mov
add
mov
inc
mov
push
aaa
adc
lods
mov
xchg
jl
push
adc
mov
push
imul
push
jnp
pop
and
jo
test
adc
fidivrl
data16
pusha
push
push
fildl
jne
cltd
dec
fisubs
test
stc
nop
mov
mov
shlb
incl
test
fsubrp
sub
movsb
or
push
mov
sbb
and
mov
fisubl
pop
add
rorb
xor
mov
test
xchg
mov
push
dec
cmp
imul
cli
and
test
js
mov
or
and
std
cld
test
sbb
cli
adc
movd
cmpsb
xchg
mov
pushf
pop
sub
lea
adc
xchg
push
pop
pop
jge
lds
jp
loopne
jmp
mov
xor
push
incb
bound
push
ret
or
adc
pop
mov
and
cmpsb
aam
inc
test
mov
adc
fimuls
ja
mov
decl
and
rcl
insb
cld
mov
jae
incl
clc
adcb
push
xchg
and
fs
stos
push
jmp
rcl
icebp
sbb
adc
test
xor
movsb
add
push
sub
and
mov
xor
ficompl
jae
xchg
push
mov
cmp
xor
jo
in
or
pop
sahf
dec
jl
mov
test
mov
cmp
cwtl
in
xchg
mov
mov
imulb
mov
and
stos
hlt
ret
xchg
push
add
or
mov
and
mov
dec
call
pushf
js
push
add
decb
add
sbb
ret
adc
xchg
jl
repz
clc
add
cmc
ror
cli
call
incb
outsl
inc
rclb
or
sub
mov
popa
loop
dec
or
rol
dec
dec
inc
cmc
mov
dec
add
adc
mov
mov
leave
sbb
xadd
idivb
and
and
add
jp
imul
adc
cli
pop
adc
push
nop
ljmp
xor
mov
mov
insb
push
mov
lret
mov
test
or
cld
jg
adc
cli
arpl
adc
dec
shrb
fwait
push
int3
jb
or
xor
daa
jge
ffreep
pop
dec
adc
cmp
movsb
adc
sub
add
push
ret
or
test
mov
leave
lea
scas
mov
clc
pop
mov
outsb
sbb
popa
cmp
xchg
or
mov
fidivrl
or
mov
adc
stc
dec
jl
or
insb
out
loopne
add
sbb
push
mov
jmp
std
add
sbb
test
dec
out
xor
adc
inc
cmc
dec
fcomps
add
loope
loopne
jbe
std
mov
dec
push
rolb
pop
fsub
nop
xor
xchg
mov
popf
pushf
xchg
adc
push
fsubr
fistl
push
lods
ficoms
insl
add
sbb
fwait
cmp
cld
jle
jmp
add
adc
lahf
je
je
lret
test
dec
movsb
ss
les
and
outsl
lcall
mov
ljmp
enter
mov
push
pop
push
add
push
add
add
adc
icebp
dec
shlb
inc
mov
push
dec
add
add
push
push
fdivr
xor
outsb
outsb
push
lcall
push
lea
cld
mov
je
mov
shlb
out
jmp
sub
lcall
add
xor
add
mov
mov
mov
sbb
daa
and
mulb
std
not
jle
outsl
test
xchg
ds
fldt
and
jbe
push
shrb
cmp
fidivl
add
adc
out
rolb
pushl
or
inc
push
lcall
sahf
fs
ljmp
aam
mov
and
and
push
cwtl
cmpl
sub
push
dec
cmpsb
adc
int3
xchg
test
cli
mov
aam
adc
adc
and
mov
adc
adc
or
mov
push
mov
xor
sub
int3
outsb
lret
mov
pop
inc
inc
push
add
mov
jp
loope
pop
lock
dec
int
cmp
cmp
push
int3
movsb
inc
push
dec
loope
mov
data16
lea
lods
and
push
imul
adc
pop
add
gs
mov
pop
push
mov
or
xor
jp
add
push
push
add
or
cli
or
stos
sbb
dec
mov
push
inc
daa
jmp
mov
outsb
inc
add
push
mov
adc
dec
fs
add
in
lods
sarb
ss
es
mov
mov
push
mov
inc
pop
add
aas
imul
clc
sbb
lock
push
xchg
adc
add
ds
mov
add
dec
push
or
clc
subb
mov
xchg
adc
out
mov
or
pop
xchg
cmc
insl
rol
int3
js
and
mov
inc
inc
add
cli
inc
push
dec
outsl
xor
loopne
cmp
mov
jg
sbb
out
or
push
xor
fldz
and
aas
sub
push
loope
jmp
add
adc
or
xchg
push
inc
cmp
fdivrs
xchg
repnz
pop
adcb
lods
push
dec
cmpb
pop
cmc
adcb
add
je
rol
sbbl
addb
push
hlt
std
pop
test
outsb
test
sub
add
incb
pop
xchg
mov
add
mov
add
out
push
dec
fwait
insl
push
xchg
sarl
inc
jbe
rol
sub
in
pop
fmuls
mov
fmuls
lock
test
jne
xor
cs
in
adc
jbe
gs
and
sub
mov
sbb
inc
mov
xchg
lcall
xchg
mov
cmp
inc
cwtl
jle
add
xor
jge
add
call
lods
subb
les
cld
stos
push
in
push
mov
nop
pusha
shl
push
leave
jno
lea
inc
xchg
out
movsb
es
ds
fwait
aaa
dec
or
ret
push
add
test
and
pop
mov
add
mov
and
inc
sahf
imul
mov
divps
sub
dec
or
addl
or
push
adcl
icebp
xor
stos
fsubp
int3
pop
dec
bound
mov
jl
lock
dec
data16
movsl
mov
or
mov
push
jle
push
scas
mov
push
cld
lods
xor
pop
cs
cli
dec
mov
or
clc
cwtl
jns
inc
daa
cld
std
sub
shr
notb
push
shll
or
js
sar
inc
xchg
mov
fdivrs
cmc
insl
add
lock
jbe
stc
add
jb
dec
or
cmp
lcall
out
pop
dec
test
sti
popa
enter
xor
hlt
inc
dec
out
push
jo
or
test
cld
push
inc
inc
adc
mov
pushf
imul
and
loope
pop
add
mov
mov
data16
movb
addr16
mov
pop
pop
mov
movl
push
sti
decb
test
mov
dec
je
shrb
in
cmp
fwait
cmp
lods
inc
xor
mov
inc
xor
mov
imul
mov
inc
xor
jecxz
rorl
int
sbb
bound
xchg
popf
sbb
hlt
jle
add
jl
xchg
rcrb
jbe
mov
or
int3
std
mov
loop
push
ss
pop
test
out
fs
leave
add
clc
adc
or
sbb
outsb
jmp
add
xchg
mov
mov
int
rol
lds
xorl
loop
xchg
push
pushf
mov
jbe
ret
out
push
mov
call
mov
cwtl
dec
data16
gs
pop
or
cld
shlb
xchg
sub
in
mov
test
mul
lret
fisubl
add
and
std
pop
dec
std
cmp
cwtl
mov
sub
mov
mov
imul
adc
js
jge
aam
sbb
push
divb
sbb
sub
or
cmp
test
cld
lahf
test
lock
jmp
ret
xor
insw
mov
stos
stos
incb
xor
cmp
jne
mov
pop
test
push
mov
push
popa
push
cmp
mov
int
sub
cmpsb
adc
mov
xor
add
push
xchg
xorl
clc
into
adc
mov
mov
insl
out
add
or
mov
adc
cmpb
push
mov
ss
das
in
loop
mov
addr16
cli
xor
movsb
pop
lock
mov
xchg
xchg
nop
cs
cld
movsl
jne
insl
lret
and
push
rcll
inc
out
loop
cmp
ror
fwait
sub
inc
mov
mov
aam
jle
xor
ficoms
add
xchg
in
aaa
loopne
inc
xor
data16
push
sub
push
push
adc
decl
sbb
js
pop
std
mov
dec
les
movsb
roll
dec
divb
pop
push
inc
and
pop
sub
test
mov
rolb
mov
pop
dec
and
fdivr
mov
in
ds
and
adc
mov
jmp
xchg
add
lock
xlat
mov
adc
inc
jmp
or
in
repz
testb
push
mov
inc
and
je
cmovl
adc
mov
enter
ds
ss
sbb
arpl
pop
shl
clc
pop
push
sub
and
push
fistpl
filds
xchg
add
cmp
call
mov
dec
adcb
sbb
jb
mov
dec
enter
add
push
add
sbb
loopne
push
mov
mov
cwtl
rcrb
push
jbe
ds
pushf
loopne
sub
ljmp
lods
scas
lret
sub
xor
and
add
or
add
and
pop
loope
push
andb
dec
call
add
mov
mov
mov
les
or
test
sbb
cmp
arpl
pop
mov
mov
test
jl
lea
call
adc
scas
outsl
push
push
addl
popf
jle
cmpsb
ss
mov
int3
add
jge,pn
sbb
and
xor
add
cmp
mov
push
dec
aad
test
add
mov
int3
rol
xor
mov
dec
ds
setge
jmp
aam
call
mov
int3
dec
adc
inc
aam
adc
or
sub
adc
or
mov
fimull
insb
ss
test
into
sub
popf
inc
mov
adc
pop
mov
mov
les
sbbb
push
es
in
inc
push
addb
gs
add
mov
cld
xor
sub
or
ret
dec
fidivrl
pop
inc
lock
das
mov
xchg
jbe
cld
add
pop
outsl
xor
cmp
inc
pop
test
jmp
and
push
adc
jne
xor
push
addb
shl
in
mov
and
stc
leave
adc
jo
cmc
or
mov
movsb
inc
adc
and
call
inc
repnz
add
test
adc
aam
ljmp
push
add
out
xchg
gs
cmpsb
outsb
xor
or
fisttpl
rorl
lcall
xchg
loopne
xchg
inc
fs
das
and
mov
movsb
sbb
pop
or
push
jmp
pop
insb
leave
push
add
aas
push
loope
jmp
add
ret
or
test
inc
sub
scas
add
movsb
incl
out
push
enter
jl
or
ljmp
push
test
jne
lret
push
adc
or
dec
xchg
mov
inc
setg
jmp
inc
jp
pop
test
xor
mov
xor
sub
cmp
push
pop
into
ss
or
mov
inc
cmp
sbb
aam
scas
push
test
inc
sub
in
packsswb
je
incl
lods
pop
decl
adc
repz
adc
dec
decl
pop
gs
push
mov
adc
and
and
add
nop
add
nop
mov
jnp
pop
add
cmp
lea
pop
or
cld
lret
cmp
sub
mov
pushf
clc
iret
jp
shll
loopne
lea
icebp
inc
adc
lss
sub
inc
imul
push
ret
dec
mov
ret
lea
cwtl
push
sub
add
sarb
outsb
sbb
inc
xchg
movsl
mov
push
jo
fs
clc
xchg
icebp
in
add
fisubrs
pop
dec
jle
das
daa
push
mov
or
rclb
jnp
lods
add
dec
lea
je
icebp
add
test
ds
sub
rclb
mov
mov
aas
das
test
inc
test
mov
or
faddp
xor
push
movsb
lods
jge
lret
test
push
lret
mov
lcall
adc
lods
push
inc
mov
adc
cltd
test
adc
pop
cltd
aaa
or
jb
js
or
dec
and
push
hlt
or
inc
push
cs
outsb
mov
loopne
stos
adc
cmpb
push
mov
sbb
add
pop
out
cmc
loopne
ret
push
lods
ret
pop
jmp
xchg
and
sub
and
inc
inc
fistpll
push
and
lcall
lock
adc
cld
xchg
std
mov
rcrl
jo
bound
lods
add
mov
sub
outsl
loop
inc
lods
loopne
aaa
shrl
cmp
push
push
inc
inc
rol
fildl
jmp
sbbb
rorb
and
push
push
dec
subb
push
loopne
add
jp
mov
xor
inc
jo
dec
sbb
mov
push
inc
out
xor
adc
loop
lahf
push
sbb
add
gs
shrb
xorb
je
dec
and
popa
ss
jl
clc
ret
test
push
stos
filds
mov
ss
and
mov
negb
cmp
int3
ret
mov
push
push
pop
ljmp
mov
xchg
push
fmuls
push
and
jecxz
clc
or
lret
incl
push
lock
dec
js
sbb
inc
lock
negb
aaa
add
mov
add
sbbb
mov
lock
aaa
lcall
push
in
out
mov
inc
sarb
shll
lods
idivb
notb
sti
insl
std
imul
sbbl
sbb
inc
mov
or
dec
in
add
cmpsb
dec
dec
mov
cmp
movsl
lock
jle
hlt
xchg
dec
cmpsl
xor
sahf
inc
push
pop
jle
mov
in
adc
cs
rcl
mulb
cltd
and
outsl
call
pop
sbb
enter
fs
cmp
lret
mov
je
sahf
call
jb
fsubrs
in
sbb
insl
sub
push
add
and
push
mov
add
mov
clc
mov
lock
rorl
and
add
pushf
or
jne
push
ss
push
fidivs
xorb
and
ret
add
pusha
inc
xor
stos
int
cmp
subl
add
fwait
inc
je
dec
or
mov
rclb
repz
push
inc
add
add
lret
or
add
jp
leave
inc
dec
jmp
adc
push
xor
fwait
std
pop
cs
int3
adc
push
ljmp
xchg
lret
std
outsl
mov
and
sub
or
lods
test
movsb
push
aas
lods
adc
push
ffreep
push
popa
pop
and
test
out
or
add
loop
add
data16
scas
add
xchg
imul
push
mov
sbb
shlb
mov
je
les
ljmp
out
mov
xor
xchg
or
jb
jg
and
add
or
pushf
loope
jae
aaa
ljmp
add
in
icebp
ljmp
les
enter
sbb
lock
push
dec
jmp
test
cmp
js
clc
xchg
aad
or
in
add
mov
mov
js
lret
xchg
xchg
mov
std
in
popa
jl
sarl
mov
lock
xor
mov
sbb
adc
cli
dec
int3
sbb
orb
or
add
jg
nop
leave
rclb
jge
lea
inc
xor
push
ficoms
dec
xor
push
push
fdivs
and
mov
dec
or
ret
cmp
mov
in
cmp
hlt
data16
push
aam
test
push
orl
and
subl
in
inc
mov
repnz
sbb
std
flds
push
cmpsb
sub
pop
jo
aas
pop
inc
cld
inc
push
push
jmp
addl
stos
or
dec
sbb
push
pop
sub
ret
test
and
mov
or
ret
pop
add
lret
jbe
mov
and
pop
dec
adc
in
push
insb
ret
int3
test
scas
gs
repnz
mov
cld
inc
cs
mov
pop
loope
jle
or
adc
loope
mov
rcrl
inc
lea
ja
xchg
push
xchg
negb
in
push
xor
daa
je
fidivrs
rolb
sub
movsb
repz
in
aas
cmp
or
cmpsb
out
and
or
popa
jae
add
lret
mov
dec
cmp
and
sti
cmp
dec
xchg
icebp
cmp
aam
cmp
lods
lcall
mov
pop
mov
or
and
mov
push
dec
cmc
pop
mov
xor
adc
je
int3
adc
sub
push
sbb
movsl
adc
xchg
mov
sub
cmp
push
add
adc
in
dec
push
add
lea
xchg
mov
cld
add
dec
out
lock
sarb
jp
mov
ds
loope
sbb
add
or
lock
out
int3
adc
jmp
inc
mov
or
icebp
xchg
lcall
adc
jbe
jbe
mov
test
je
push
lods
mov
jne
jl
mov
inc
ret
bnd
mov
dec
add
ss
xlat
sbb
mov
jp,pn
test
fisubl
add
jae
mov
or
nop
data16
sti
cwtl
push
fldenv
adc
mov
roll
imul
pop
leave
xchg
fisttps
mov
out
rdmsr
test
cwtl
gs
jb
pop
and
rol
adcb
mov
and
cwtl
aam
dec
stos
inc
ss
insb
inc
andl
ror
add
mov
inc
out
mov
add
mov
les
loopne
or
out
dec
jl
sub
jl,pt
push
iret
jne
jb
jge
fsubrs
add
andl
mov
push
movsb
push
call
mov
jp
shlb
lret
push
nop
lock
jl
mov
movsb
pusha
fidivrl
rcr
clc
mov
movsb
sbb
mov
jmp
mov
adc
in
push
or
mov
xchg
shr
push
inc
or
or
or
mov
push
add
popa
mov
dec
cmp
add
xchg
adc
bound
push
push
or
mov
push
sbb
push
mov
push
pusha
cmpsl
aam
xlat
xchg
mov
push
xchg
xorb
rcrl
es
cmp
dec
sbb
cmpsb
add
add
push
rcrb
insl
mov
test
pop
dec
add
jge
pop
dec
pushf
dec
inc
ja
mov
mov
in
add
in
jge
lmsw
jb
cmp
out
nop
or
lcall
jmp
fidivs
lcall
rolb
adc
dec
xor
sbb
frstor
sub
and
push
je
lock
jge
dec
aas
dec
xor
outsb
std
roll
mov
inc
push
xor
ret
add
sbb
xor
dec
cmpsb
xor
sbb
rolb
les
or
add
insb
mov
ret
aas
sti
sub
int3
xor
loope
xor
push
repnz
inc
fs
cli
mov
mov
in
fldt
pop
mov
cwtl
mov
push
mov
dec
insb
out
xchg
mov
and
or
jecxz
je
xchg
cmpsb
test
ds
or
sbb
js
fisttpl
out
xor
sbb
gs
mov
in
pop
movl
or
push
jne
cld
adc
fadd
rorb
adc
and
mov
mov
dec
inc
dec
lods
jl
popa
mov
testl
in
push
push
push
icebp
pop
icebp
mov
pop
ret
push
shl
pop
push
mov
pop
sbb
xor
cld
sbb
mov
ss
xchg
push
mov
mov
enter
push
xchg
jb
add
sbb
adc
call
loopne
loop
mov
push
gs
push
or
push
and
mov
jle
gs
lea
cmc
pop
mov
scas
loop
adc
jmp
movsb
loope
adc
dec
cmc
inc
jb
push
inc
rclb
pop
cmpsb
and
cld
int3
or
push
mov
leave
jbe
dec
pop
add
sub
cmp
xor
dec
sbb
mov
pop
stos
push
adc
pop
mov
mov
lock
cmp
mov
mov
out
adc
dec
xchg
dec
jle
lcall
cmp
dec
adc
jmp
orl
jg
test
sub
push
inc
negl
xor
std
pushl
stos
fs
cmc
pop
inc
call
out
add
push
rol
sub
shlb
adc
inc
mov
sub
jle
mov
or
ljmp
pop
mov
cmp
jns
cli
test
pop
mov
rcl
lock
mov
add
adc
clc
adc
enter
nop
sbb
in
push
gs
outsb
jecxz
mov
push
stos
fs
inc
insb
cmp
adc
outsl
mov
ret
in
movsb
std
and
jle
or
pop
dec
jge
mov
sbb
adc
jp
mov
popa
and
mov
push
inc
sbb
xor
test
dec
push
mov
mov
push
aad
lods
jmp
test
pop
shrl
mov
movsl
clc
xchg
out
stos
push
dec
push
xchg
mov
test
add
lds
scas
or
fiaddl
fisubrs
lods
or
xchg
mov
or
inc
mov
mov
xchg
adc
out
cs
shlb
mov
pop
addb
test
jae
push
popa
jg
cs
add
mov
inc
mov
stos
mov
loop
inc
inc
lock
and
movb
fs
pop
inc
cli
jo
dec
leave
mov
push
inc
sbb
inc
loopne
adc
adc
out
lret
and
xor
sub
in
push
pop
sarb
pop
jno
push
inc
lcall
xchg
and
mov
jo
mov
loopne
in
rorb
into
add
inc
call
push
fs
jle
mov
lds
dec
pusha
rorb
sub
xor
push
add
je
andl
or
push
dec
xchg
add
push
loop
sub
call
push
push
mov
xor
push
rclb
lods
ss
sbb
pop
mov
and
gs
imul
dec
inc
mov
loop
call
test
dec
test
pop
movsb
mov
pop
popa
cmp
mov
mov
and
dec
test
lods
push
sbb
cmpb
mov
cs
data16
jb
push
call
ljmp
loope
jmp
movsl
xor
or
gs
out
or
add
jne
sub
mov
jb
mov
adc
fimuls
mov
push
and
push
lods
mov
lea
xor
cmp
mov
inc
cmp
loop
or
sub
clc
add
add
mov
mov
or
pop
jb
pop
adc
shlb
sub
ret
ljmp
lcall
insb
movsb
into
cmp
adc
inc
jae
mov
add
or
jp
mov
pop
scas
sbb
inc
popf
test
shr
cmpb
cmp
dec
xor
add
adc
push
sti
stos
scas
or
hlt
jecxz
fxch
xchg
xor
and
xchg
push
in
es
add
lods
fcoms
imul
mov
out
push
mov
push
push
jecxz
pop
add
pavgb
cli
cs
lret
jecxz
xor
ret
add
leave
xor
adc
xorb
test
mov
es
sti
mov
pop
stos
and
je
or
shlb
hlt
cmp
lret
popa
bound
popa
xor
fmuls
fsub
orl
loop
mov
adc
or
jl
mov
bound
mov
sub
loop
push
pop
or
mov
loope
sub
icebp
scas
js
inc
enter
jmp
xchg
push
jecxz
jg
arpl
cmp
add
popl
je
cld
out
xor
roll
nop
hlt
add
jp
cmp
sbb
push
and
je
fldl
push
xchg
cmp
gs
jge
sahf
push
mov
adc
ljmp
xchg
mov
mov
lcall
rcrl
lret
adcb
inc
icebp
icebp
pop
mov
push
hlt
cmc
lret
inc
add
cmp
push
push
mov
cmpb
data16
push
call
scas
or
mov
jle
jb
jmp
adc
and
push
leave
adc
hlt
mov
adc
in
es
inc
ret
xchg
xchg
inc
xchg
pushf
sbb
les
mov
clc
add
add
mov
jb
mov
mov
pop
fwait
sub
push
xor
arpl
and
cld
aaa
loope
je
add
addb
in
jbe
sbb
cmp
mov
and
push
or
mov
sbb
outsl
jb
ss
adc
or
add
lret
xchg
dec
mov
xchg
fsubrs
imul
xchg
dec
lcall
push
popa
stos
outsl
inc
leave
dec
cmp
pop
jo
sub
insl
loope
adc
dec
cmp
or
into
push
mov
loope
cli
pop
insb
dec
nop
push
jp
push
adc
add
std
test
cmp
sub
jae
mov
and
add
fdiv
push
aam
adc
and
mov
or
pushf
or
xchg
movsl
xor
adc
cld
pop
or
inc
mov
jnp
or
loopne
adc
fldcw
fnstenv
push
mov
hlt
or
rorb
outsb
lock
adc
cli
setp
incl
mov
cmp
or
rcrb
or
push
lea
or
movb
dec
mov
adcb
mov
out
nop
stos
mov
push
mov
lock
push
pop
xor
push
mov
sbb
shlb
inc
adcb
inc
cmovle
sub
add
arpl
push
mulb
movsl
sbb
mov
xor
add
insl
xchg
stos
inc
pop
cmpsb
in
jo
test
add
data16
xchg
xchg
out
mov
sub
bound
loop
jne
or
jle
test
adc
pop
mov
mov
movl
xchg
popa
pushf
push
mov
ss
in
loopne
repnz
or
aam
std
jecxz
mov
adc
fiaddl
movsl
dec
mov
cli
xchg
mov
mov
outsb
icebp
decl
and
sbbb
cmp
cmp
pop
pop
jae
adc
call
sub
outsb
xor
into
mov
pop
inc
leave
clc
cmp
xor
xor
sub
mov
jecxz
mov
stos
sbb
mov
add
sub
and
test
or
orl
lock
cmp
jecxz
loopne
sub
or
mov
loop
imul
les
movl
test
push
mov
test
test
xor
imul
sahf
clc
addb
add
das
xchg
dec
push
movsl
imul
mov
sbb
out
jge
icebp
in
inc
inc
push
fwait
xor
inc
inc
je
mov
mov
aad
testl
mov
les
lock
popa
adc
in
bound
mov
scas
outsl
dec
enter
jecxz
outsb
add
add
fs
dec
add
add
push
dec
insb
gs
addr16
and
out
cld
pop
adc
rcr
and
ljmp
call
cld
push
xchg
add
xlat
test
push
inc
dec
subl
push
add
add
int3
push
ds
push
dec
mov
test
ret
cli
mov
stos
mov
push
or
cwtl
xchg
pushf
clc
pop
pop
adc
popf
mov
lods
cmpsl
fdivp
sub
lods
or
sub
rorb
clc
outsb
jl
popf
pushf
dec
je
outsb
mov
or
out
mov
fmuls
cmpb
mov
gs
or
inc
lds
inc
push
cli
inc
adc
add
cmc
fdivs
push
lock
mov
push
mov
jl
pop
pop
mulb
lcall
loope
add
add
popf
cmp
testb
mov
std
add
fmuls
pop
rorb
fs
or
mov
fisttps
ds
push
inc
shrl
cmp
adc
enter
add
mov
je
push
add
insb
push
bound
sub
or
lret
xor
pop
pop
pop
sbb
loope
imul
adc
sub
add
sub
pcmpgtw
sbb
push
lret
add
xor
insb
mov
mov
clc
jl
sbb
rcrl
incl
and
push
inc
push
out
sbb
notb
subl
pop
mov
or
sarb
fimull
out
sbb
push
jl
es
mov
or
dec
js
pop
rol
xor
or
or
xchg
push
test
inc
outsl
movsl
mov
push
out
loop
roll
adc
fidivrl
cmp
fsubp
jmp
dec
adcb
cmpsb
addb
shr
push
pcmpeqd
add
daa
mov
add
lret
inc
jo
inc
xchg
adc
xchg
sub
mov
xchg
push
outsb
dec
cmpsb
repnz
icebp
fldl
xchg
ljmp
leave
push
shl
add
rcl
ret
ljmp
mov
fldl
cmc
push
push
testb
mov
pushf
loope
xor
push
jle
add
add
or
int3
ljmp
mov
je
jmp
add
aas
int3
xchg
xor
icebp
dec
insb
adc
mov
sbb
bound
sub
aaa
inc
jp
inc
inc
test
pusha
jae
arpl
dec
mov
or
mov
or
shll
cwtl
sarb
push
xor
xor
or
rclb
pop
sarl
jmp
inc
and
push
adcl
hlt
cmp
hlt
or
insb
mov
or
push
or
pop
cmp
or
fdivrl
roll
sysexit
nop
add
or
cmp
dec
push
ja
cld
inc
cld
xchg
int
push
aad
ds
pop
add
push
add
fmull
mov
push
dec
mov
push
xor
into
adc
add
nop
test
movb
outsl
mov
mov
mov
inc
pop
daa
pop
ja
loopne
sub
imul
mov
dec
dec
jp
test
inc
and
inc
call
and
xlat
mov
cli
inc
push
push
pop
xchg
xor
cltd
pop
adc
dec
cmp
sar
test
pushl
std
xchg
lods
jne
lock
gs
and
scas
xor
jge
daa
or
jo
clc
dec
or
test
pop
adc
lock
int
pushf
push
xor
lods
xchg
fcomps
nop
rcrb
int3
or
push
or
add
daa
lret
and
pushf
xchg
lock
enter
mov
orb
jmp
pop
push
shrb
inc
jbe
pop
cld
or
and
lea
div
adc
es
pop
cli
push
stos
pusha
jb
adc
mov
pop
cmp
pop
jbe
or
shl
push
jbe
add
xchg
sub
sahf
push
test
xor
andb
add
sbb
mov
mov
iret
add
jge
add
sub
dec
loop
xor
dec
and
xor
pusha
mov
inc
ret
cmp
movb
xchg
sahf
jmp
add
test
mov
cli
call
push
dec
dec
ljmp
icebp
push
push
sbb
int3
and
in
and
add
in
into
fsubrs
jb
aaa
jle
sbb
loopne
das
mov
xchg
lea
in
repnz
adc
movl
inc
xor
xchg
add
loopne
jmp
ror
outsb
or
xchg
mov
lret
xor
data16
shlb
dec
sub
pusha
popa
sti
scas
pop
or
push
xor
stc
adc
cs
pop
dec
out
adc
adc
mov
outsb
jge
xor
pop
setb
mov
xchg
hlt
test
lcall
add
sub
or
lea
sbb
add
imul
in
jb
test
repz
inc
das
fs
jp
dec
and
adc
clc
cmp
and
inc
or
xchg
sub
loopne
mov
mov
mov
mov
clc
orb
adc
dec
dec
ret
les
xchg
mov
inc
dec
sub
enter
cli
leave
jp
mov
decl
inc
mov
pop
loopne
cwtl
sbb
and
mov
push
fiaddl
out
jecxz
or
pop
push
ds
test
and
jbe
push
xchg
test
xchg
loopne
sbb
clc
incl
inc
add
adc
xor
pop
lcall
call
je
cmp
and
xchg
cmp
leave
adc
scas
mov
add
sbb
cli
pop
lock
mov
sub
lock
bound
push
pop
xchg
je
xchg
xorb
ret
sbb
push
cmp
cwtl
fs
rcrl
pop
insb
and
testb
cmp
jb
pop
mov
adc
lods
or
jge
jmp
xchg
add
inc
daa
or
repz
or
sysenter
jo
cmp
sub
orb
mov
push
enter
mov
ror
pop
fisubs
push
or
cmp
xchg
nop
or
mov
mov
bound
push
stos
lock
rcrb
sub
sbb
lret
xor
xchg
mov
test
ss
ficoms
data16
decl
and
jb
jne
test
inc
push
jae
push
xor
cwtl
call
and
mov
or
push
dec
movsb
jg
jl
pop
cmp
push
sar
gs
mov
incl
fsqrt
int3
jmp
pop
add
lret
mov
dec
mov
or
add
loopne
xchg
xchg
scas
je
js
mov
popf
out
mov
mov
loopne
mov
sub
into
insb
jae
cmc
adc
and
add
pop
xor
push
sub
mov
xchg
xchg
enter
cld
jbe
jo
xor
in
xchg
adc
mov
or
mov
ljmp
sub
pop
in
cltd
inc
pop
in
pop
icebp
jg
js
push
push
call
sarb
vmread
icebp
sbb
jecxz
adc
and
add
ror
test
hlt
shl
shrb
add
cmp
ret
mov
push
int3
dec
loop
daa
pusha
faddp
pop
or
fdivrs
ja
mov
pop
aam
sbb
xor
push
cmpsb
pop
fnstcw
mov
mov
neg
sbb
gs
movsl
aaa
push
arpl
sbb
xor
mov
popa
sbb
push
jno
enter
or
ds
int3
rcll
ss
jo
rorb
mov
push
xor
xchg
movsl
sub
sub
insb
movsb
push
jne
and
add
mov
adc
nop
mov
pop
add
or
pop
mov
pusha
fiaddl
bound
xlat
aam
push
jne
orl
lock
add
je
pop
je
add
add
pop
pop
xchg
and
xor
cld
mov
pop
mov
inc
movb
cmp
add
nop
xor
clc
inc
sub
sti
and
ja
scas
xchg
push
pusha
mov
lret
ret
incb
mov
jne
add
pop
sti
or
repnz
sti
push
fstpt
jle
pop
das
sub
jmp
mov
leave
loop
fwait
cmc
dec
lods
incl
ror
cmpsb
adc
adc
loopne
in
cli
cwtl
cmp
cmp
push
int
and
lcall
jle
mov
inc
jae
or
fstpt
mov
push
add
dec
insl
test
arpl
push
scas
int3
sub
inc
inc
insl
jo
lret
ds
jp
cmp
ret
jge
push
nop
cmp
rorb
iret
add
jo
addl
mov
or
pop
daa
gs
add
shrb
xchg
movsl
loop
pushf
xor
and
xchg
and
fidivrs
push
sti
loopne
inc
clc
cli
inc
mov
cmp
jl
or
add
stos
pop
inc
aam
push
adc
imul
fstpl
fisttps
stos
loop
pop
stos
add
pop
daa
jp
mov
jg
fcmove
mov
test
mov
xor
jo
mov
clc
adc
mov
mov
pop
fsubs
jmp
rorl
cmp
push
add
mov
je
adc
push
mov
jne
loopne
daa
sub
xor
insb
jns
lds
mov
adc
xor
insl
cmp
ret
push
or
loope
sbb
test
mov
test
popa
clc
add
xchg
pop
les
mov
sub
pop
dec
and
inc
mov
inc
jge
pusha
or
add
sar
les
sbb
adc
in
cmp
or
loopne
adc
loop
test
insb
and
ret
inc
iret
out
js
inc
push
enter
inc
jl
movb
sub
std
nop
test
nop
jbe
test
cs
das
rcrb
into
mov
rclb
outsb
adc
out
dec
std
adc
scas
fildl
jne
dec
inc
adc
fisttps
dec
adc
fcmovne
and
cld
jg
test
loopne
mov
add
pop
shl
push
jmp
inc
mov
call
dec
push
subl
scas
imul
mov
mov
and
adcb
icebp
add
push
add
and
dec
pop
push
add
mov
add
popa
lea
push
mov
push
jl
cmp
mov
stc
in
cltd
or
sub
push
pushf
test
pop
sbb
roll
push
aaa
outsl
and
scas
sbb
and
cmp
inc
test
push
xor
adc
movsl
imul
sarb
pop
rclb
dec
jp
into
mov
and
mov
addl
mov
xchg
test
aam
add
scas
jae
out
inc
test
jb
lock
xor
insb
sti
dec
repnz
mov
mov
cld
mov
ljmp
es
jmp
pop
inc
scas
sbb
push
sahf
xor
mov
clc
mov
sbb
adc
push
sub
lcall
cmp
mov
gs
pop
push
mov
and
nop
mov
push
test
pop
mov
dec
push
imul
xor
call
cmp
push
test
xor
jl
mov
lods
push
pop
dec
xor
out
sbb
sbb
sbb
jo
xor
loope
outsl
cwtl
insb
sbb
js
dec
and
adc
xor
or
imul
push
mov
adc
sahf
xchg
lcall
push
mov
pop
push
pop
xchg
clc
push
lret
push
out
jl
lahf
sub
lock
pop
pop
leave
push
ljmp
pop
aaa
or
cmp
dec
add
adc
sbb
dec
mov
or
xor
inc
cld
fstpt
scas
mov
adc
jbe
in
cld
sbb
incb
movsb
es
fstl
dec
testl
mov
inc
fwait
dec
scas
stos
xor
dec
cli
gs
jmp
je
fiaddl
data16
mov
clc
shl
pop
adc
movsl
popf
sbb
adcl
clc
add
mov
mov
add
imul
pop
fs
and
sbb
pop
cmp
sti
stos
xor
or
sub
jne
loope
mov
dec
push
push
xchg
or
leave
adc
and
movl
inc
sarl
clc
packsswb
or
or
mov
sbbb
xor
push
and
adc
add
jbe
adc
ret
pushl
lea
idivl
jle
push
xchg
das
adc
and
mov
or
aas
adc
lock
pop
push
push
or
jle
jmp
jmp
or
leave
shll
lret
into
ret
clc
xlat
mov
add
ds
dec
dec
out
into
incl
mov
clc
mov
loop
lock
cmp
xor
inc
or
mov
xlat
into
mov
jp
xchg
inc
mov
cmp
cmp
cs
or
fmull
loope
pop
aas
cli
test
call
std
fists
push
subb
es
mov
or
stos
mov
int3
inc
or
add
cmpsl
movsb
inc
aam
scas
push
push
sarl
xchg
or
push
xor
test
or
cwtl
inc
aad
sbb
or
rcr
mov
lock
popa
outsl
clc
mov
mov
push
pushf
add
mov
mov
aam
outsl
adc
imul
push
push
rolb
cmc
mov
xor
and
fwait
fs
loopne
hlt
inc
push
and
jle
add
jle
dec
inc
rcll
pop
js
push
jg
pop
cmp
jb
test
add
dec
les
scas
add
xchg
outsb
cmp
repnz
fsts
clc
imul
adc
dec
loope
ljmp
test
loopne
fnstsw
loopne
push
xchg
lea
cmc
daa
out
mov
mov
jle
aas
mov
add
in
push
inc
jo
xor
ret
jle
sub
std
call
jmp
xchg
dec
aaa
mov
or
cmp
sub
jb
inc
mov
in
mov
or
lock
ret
or
or
add
mov
popf
f2xm1
incl
and
orl
adc
xor
mov
mov
outsb
test
dec
mov
or
into
pusha
dec
enter
out
and
jmp
pushf
mov
psadbw
sarl
sbb
jbe
test
mov
mov
sub
dec
adc
subb
daa
xchg
push
sub
js
or
add
fs
fsubl
mov
rol
dec
add
mov
nop
cld
or
sahf
push
jb
mov
clc
pop
or
add
outsl
xchg
shr
leave
pusha
andl
sub
mov
pop
pop
add
inc
pop
cmp
ret
mov
jge
adc
nop
xor
add
inc
outsl
std
dec
mov
push
popa
jl
incl
and
sub
or
push
mov
push
enter
pusha
sti
adc
pop
jae
push
and
nop
mov
or
repnz
shrb
add
cld
lahf
and
mov
push
dec
add
incb
xchg
push
inc
mov
push
add
mov
in
iret
push
std
mov
inc
rorb
push
push
pushl
sub
or
jne
or
daa
jmp
push
rolb
clc
cmp
xor
icebp
das
in
inc
inc
adc
sub
test
cmc
xlat
icebp
ds
fcomi
mov
les
mov
pop
arpl
gs
push
test
mov
addl
or
lds
adc
aad
js
and
cli
ljmp
pop
enter
jmp
push
gs
mov
insb
loopne,pn
add
lock
lods
mov
cli
pop
scas
add
popa
push
xor
call
test
jb
mov
push
ficoml
enter
dec
push
ja
and
hlt
dec
pop
lret
pop
mov
and
es
fcmovb
mov
mov
mov
adc
push
push
push
adc
sbb
ljmp
shl
adc
jbe
frstor
add
mov
loope
ret
adc
mov
mov
data16
loope
inc
xor
fnstenv
inc
lock
or
jl
pop
ljmp
sbb
lret
or
sbb
outsl
ret
lcall
mov
and
jmp
cmp
ljmp
cmp
call
sub
dec
and
push
mov
xchg
xchg
jo
sahf
clc
adc
fstpl
rol
mov
iret
into
fsubrs
add
add
lcall
fs
sbb
popa
mov
in
sub
and
mov
jcxz
je
adc
call
push
jge
add
adc
js
mov
and
ss
insb
outsl
push
add
filds
out
jmp
pop
add
dec
jmp
gs
push
pop
jle
dec
call
push
pop
jl
pushf
lea
push
and
lret
adc
and
fsubp
fsubs
sub
lret
adc
add
inc
mov
sbb
adc
add
add
outsb
cmpl
mov
pop
cmp
push
addb
ficoms
pop
jns
push
sub
into
or
js
push
dec
cmp
push
je
enter
lods
jmpw
in
call
cltd
push
icebp
test
popa
adc
add
lock
and
sbb
mov
inc
cmovo
inc
adc
pusha
outsl
add
outsl
push
call
push
add
shr
add
movsb
lock
shlb
push
pop
dec
and
cwtl
mov
and
aam
stos
push
addb
push
leave
mov
mov
sbb
test
cmp
test
decb
addl
outsl
pop
cmp
inc
rolb
fdivl
pop
subb
or
pop
jo
nop
stos
test
jle
add
adc
ret
movsl
icebp
enter
sbb
sti
inc
bound
dec
and
mov
fadds
dec
mov
loopne
mov
pop
sbb
dec
scas
fsubr
add
adc
push
jl
mov
add
xor
jp
xor
sub
cmp
fsts
inc
push
fcoms
dec
pop
pop
std
and
jb
inc
roll
push
loopne
dec
bound
scas
lret
fs
inc
mov
xor
mov
adc
mov
fnstsw
out
ss
xor
push
push
inc
or
bound
lock
jge
je
popf
dec
jle
incl
sub
jmp
jne
cmp
outsb
je
xor
dec
sub
loopne
sbb
test
sbb
push
push
dec
imulb
aas
cmp
fs
push
and
push
lods
decb
rclb
and
rcl
imul
lock
sahf
movsb
push
push
dec
js
ljmp
push
fnstcw
cld
js
les
lea
pop
nop
cmp
sub
cld
ds
jmp
adc
xor
imulb
and
pushf
outsl
push
int3
or
inc
or
movsb
jge
test
xor
test
pop
scas
xchg
ss
mov
inc
fucomip
cmpb
xorb
xchg
push
inc
or
cld
mov
data16
daa
push
insb
sbb
or
nop
stos
jle
adc
jle
test
or
xor
lcall
jecxz
sbb
js
cmc
mov
aad
push
mov
outsb
je
jno
jg
adc
cmp
cmp
push
mov
xor
push
pushf
shrb
test
out
adc
push
and
push
sbb
xor
data16
pop
xor
push
clc
popa
sbb
xor
adc
pop
jg
sub
call
sub
push
cmp
in
cmp
cli
xchg
fiadds
je
cmp
lock
xor
fcoml
or
mov
aas
mov
mov
aad
mov
ljmp
inc
lods
fsubl
notl
pop
push
adc
sarl
lock
xchg
jne
and
dec
ss
aas
enter
mov
loop
sub
cmp
gs
push
pusha
pop
int
pop
aam
test
pop
push
int3
cmp
sahf
data16
cwtl
adc
inc
jo
add
add
pop
int
sub
add
loop
decb
lea
ret
test
adc
mov
mov
sub
test
inc
sbb
mov
andb
mov
push
add
add
stos
add
call
inc
lea
mov
cmpsl
mov
test
cmp
fisubs
rorb
rorb
sub
jp
daa
adc
roll
add
sarb
inc
pop
movswl
loop
sub
dec
pusha
mov
fcmovnu
mov
jne
dec
cmp
xchg
xchg
push
fsubs
lock
addb
ret
sbb
adc
loopne
jno
push
cmc
sbb
xchg
and
add
or
es
sub
das
sbb
push
cld
les
xor
add
mov
xchg
cmc
and
xor
pop
inc
jmp
sub
inc
and
add
fwait
or
pop
pushf
add
inc
push
lock
sbb
push
xchg
adc
std
mov
or
xor
mov
push
xchg
ja
lret
cmp
sbbb
stos
cmp
mov
scas
dec
in
lret
rclb
push
nop
push
js
xor
inc
dec
fninit
test
or
in
out
xchg
or
rolb
fcos
loopne
push
dec
and
or
xor
or
test
adc
adc
mov
std
xchg
pop
js
cmp
mov
or
ret
push
push
in
lock
dec
loopne
out
mov
sub
dec
lret
or
dec
rolb
inc
ds
mov
lock
or
and
add
mov
adc
movsb
mov
xor
icebp
lock
sbb
aad
cltd
leave
nop
xorb
les
imulb
stos
push
decb
stc
into
cmp
pusha
mov
sbb
sbb
push
push
loope
fs
clc
addb
xor
add
push
and
mov
mov
pusha
std
sahf
push
push
sub
mov
adc
inc
pop
pop
fildll
repnz
push
xchg
mov
into
in
cmpsl
cmpsb
pop
cwtl
add
aam
std
jns
sub
or
clc
xchg
in
xor
call
fisttpll
fidivrl
dec
mov
jo
dec
xchg
fs
and
clc
sahf
push
pop
outsb
cmp
jp
xchg
push
xor
adc
fdivs
adc
add
push
push
jmp
dec
nop
adc
pop
test
add
outsl
or
rorl
es
sub
call
pop
pop
mov
dec
mov
push
jnp
cmp
ljmp
jno
pop
adc
inc
mov
cld
jnp
lods
mov
inc
mov
add
mov
enter
dec
cmp
add
pop
or
inc
int3
inc
dec
inc
push
nop
or
orl
pop
gs
ljmp
add
push
xchg
inc
or
xchg
jl
cwtl
ret
mov
add
sub
test
mov
nop
movsb
stos
loop
xor
popa
mov
in
mov
shrd
cmp
mov
and
jne
push
or
add
or
dec
or
nop
push
push
mov
jp
mov
dec
mov
stos
pop
jl
cld
sbb
outsb
sub
xor
pop
mov
add
and
lock
mov
sahf
pushf
mov
ficompl
pop
ret
adc
xor
pop
inc
push
inc
mov
mov
adc
jmp
sub
push
ret
push
pop
lock
xor
subb
cli
jg
in
push
clc
cld
and
inc
add
gs
mov
pop
inc
push
fimull
in
xor
inc
imul
insb
orb
aam
xchg
aam
cmp
scas
xchg
push
sub
mov
adc
imul
cld
fiadds
cmp
mov
xchg
ja
jo
mov
xchg
adc
data16
push
jmp
jb,pn
pop
or
push
nop
sbb
mov
push
adc
xor
test
rolb
xchg
fisubs
movsb
jg
xor
orb
mov
pop
mulb
out
pop
mov
and
cwtl
sbb
fnstcw
sub
into
mov
add
dec
sbb
dec
add
xor
pop
jle
je
mov
aaa
scas
xchg
sub
and
hlt
push
and
fisubl
rorb
out
pop
ljmp
jbe
xorb
ljmp
or
mov
lea
dec
inc
mov
imul
xor
add
imul
aam
mov
adc
outsl
mov
xor
mov
lret
hlt
or
push
pusha
adc
cwtl
lea
mov
jmp
mov
push
movl
push
sub
loopne
std
fs
inc
push
std
mov
jecxz
add
arpl
stc
lea
stc
or
scas
and
mov
add
scas
clc
pop
push
pusha
loopne
push
inc
xor
add
out
and
inc
push
rol
and
jb
cmc
decl
aas
sbb
add
mov
leave
mov
or
add
adc
jo
shl
inc
ss
enter
sub
xor
and
clc
dec
push
mov
add
aam
adc
fwait
xor
ror
push
test
adc
shlb
ds
daa
mov
rorb
add
push
test
loop
push
xchg
mov
cmpl
jmp
adc
dec
fistl
inc
mov
out
add
xor
adc
mov
and
dec
dec
aas
mov
lret
inc
push
push
or
mov
pop
pushl
add
rcr
jmp
sti
xchg
push
add
popf
add
xor
push
call
dec
mov
out
adc
dec
les
shrb
sub
pop
push
mov
sbb
inc
shlb
and
test
test
setbe
pusha
push
ljmp
xchg
jns
or
push
adc
ja
cld
dec
pop
inc
and
add
and
call
mov
hlt
ljmp
loopne
xchg
adc
fisttpl
sbb
popa
in
cs
add
sub
shl
xchg
cmpsb
icebp
jle
cli
adc
data16
das
dec
jecxz
clc
cmp
arpl
sbb
inc
in
adc
mov
mov
test
out
or
sti
mov
inc
dec
cmc
je
sub
test
pop
inc
dec
mov
daa
xchg
or
lret
pop
vmptrld
push
sub
mov
dec
jb
test
dec
sub
or
outsl
loopne
jl
mov
jne
add
std
arpl
push
loope
out
jo
leave
add
fstps
loopne
es
sbb
lock
adc
jne
mov
mov
add
add
adc
pop
or
or
rolb
jl
sub
push
inc
pop
insb
aam
pop
mov
adc
jg
lods
mov
sub
xor
cmpxchg
mov
pop
in
cli
push
popa
iret
inc
cmp
mov
cmpb
add
mov
mov
rclb
cmc
jmp
sub
xor
jmp
iret
adc
sub
out
call
test
push
cmpl
sbb
lock
les
push
jns
xchg
les
popa
orl
rorl
or
aaa
add
inc
xchg
inc
and
push
aad
testb
cli
mov
mov
addb
pop
icebp
pop
int3
dec
inc
push
push
dec
lea
mov
sbb
mov
sbb
mov
adc
mov
mov
movsb
cli
inc
lock
pop
push
mov
push
cmp
mov
jge
mov
out
xchg
rcrb
adc
lret
je
call
xor
jmp
inc
int3
int3
dec
sarl
mov
push
loope
xor
jbe
outsl
outsb
cli
fbld
mov
ds
pop
push
push
dec
jp
sub
pop
inc
jl
jae
mov
jo
aaa
shll
pop
outsb
or
mov
inc
mov
mov
add
xchg
mov
add
clc
mov
mulb
aam
jmp
push
fisubs
jl
mov
data16
insb
loopne
lock
mov
add
cmp
test
sub
js
mov
popa
sti
mov
mov
enter
in
sub
inc
lock
mov
add
int3
adc
scas
outsb
adc
inc
mov
and
mov
add
call
hlt
loopne
insb
rcll
test
pop
push
cmp
cmpb
lock
and
loope
mov
and
lret
into
shl
outsl
cmp
push
int
movsb
push
jge
cmp
dec
js
fsubrp
dec
stc
cmp
mov
cs
push
push
call
cmp
and
ds
xor
nop
dec
adc
test
xor
cmpsb
mov
jo
inc
cwtl
xlat
shll
cli
sbb
ret
inc
jl
mov
pop
enter
cld
sbb
push
mov
adc
popf
and
and
jo
mov
clc
outsl
scas
cmp
push
icebp
jmp
lret
xchg
sti
lock
aad
pusha
push
jmp
in
mov
sti
ds
xor
push
mov
add
adc
loopne,pt
clc
nop
movsb
mov
repz
jp
mov
or
inc
pop
inc
push
mov
stos
mov
push
data16
mov
loopne
pop
hlt
cmp
clc
or
cmp
inc
fistl
xor
imul
int3
leave
and
mov
ss
jg
pop
aas
or
movl
pushl
xor
add
mov
shl
outsb
mov
dec
jne
adc
mov
dec
adc
or
scas
pop
ss
jl
push
aas
mov
in
out
or
fistl
add
dec
or
xchg
sub
sahf
push
ja
sbb
repnz
icebp
xchg
pop
pop
dec
fdiv
inc
scas
push
xlat
sub
xchg
je
xchg
xchg
mov
out
xchg
sbb
push
pop
mov
push
data16
mov
cmp
aam
test
push
fistpll
mov
mov
add
push
cld
fldcw
mov
inc
xorl
int
mov
ret
xor
push
adcb
mov
push
or
push
inc
sarb
xor
shlb
pop
jle
fwait
mov
mov
inc
nop
xchg
shlb
rcrb
inc
mov
add
jbe
push
cmc
sbb
inc
dec
fsubrl
dec
jmp
sti
shlb
push
test
sub
and
xor
add
add
xor
sub
adc
das
add
hlt
adc
das
faddl
push
mov
jp
mov
sub
adc
adc
mov
loopne
mov
ret
inc
add
dec
fcmovnb
ret
lock
ds
repz
popa
jl
insb
loope
and
pop
out
xor
test
mov
add
push
adc
movsb
inc
or
sbb
imul
stos
mov
pop
mov
mov
call
add
push
je
or
or
enter
lret
pop
lds
and
push
test
out
push
push
cmp
pushf
shl
adc
push
push
dec
xchg
test
lock
sbb
dec
xchg
pusha
sbb
test
or
mov
dec
pop
fldt
cmp
jbe
sub
lock
es
call
push
fsubl
sbb
pop
rol
or
mov
inc
js
mov
inc
inc
adc
push
sti
rclb
out
xchg
outsb
or
imul
aas
push
add
lret
push
test
jbe
test
or
ss
or
adc
dec
jne
inc
cld
fsubs
mov
xor
jmp
les
sbb
fidivs
in
pop
nop
and
add
pop
push
or
adc
xor
inc
sbb
push
dec
push
adc
test
cmp
push
aam
or
stos
sub
add
int3
iret
movsb
pusha
inc
add
sub
dec
or
aam
aam
add
shlb
jbe
cmp
dec
mov
int3
adc
cmp
cmp
mov
push
es
inc
xor
call
xchg
movsb
mov
cwtl
xchg
push
mov
ja
xor
cmp
lcall
stos
sbb
add
or
std
outsl
pop
ljmp
push
popf
gs
add
jp
inc
dec
cmp
mov
cmp
xchg
xor
pop
je
js
fs
or
call
insb
xchg
sub
stos
addb
mov
into
inc
sbb
mov
add
mov
push
test
ret
lods
lcall
inc
cmp
mov
jp
jne
mov
push
dec
pushf
hlt
pop
mov
mov
mov
push
mov
rorl
addr16
adc
arpl
insb
xchg
shlb
mov
mov
fwait
arpl
mov
xor
or
popf
pop
mov
test
bound
rclb
xchg
test
mov
cmc
pop
inc
push
and
pop
and
xor
mov
xchg
mov
and
jl
je
add
fidivrs
push
fs
adc
outsb
cmp
clc
shrb
aas
clc
sub
insb
or
pop
push
push
mov
pushw
movsb
mov
xchg
mov
dec
cmp
sub
ret
mov
jmp
jp
push
cmpsb
xor
loop
push
call
push
ss
push
aaa
fidivrl
pop
mov
sahf
in
add
jmp
sti
cwtl
add
jne
das
movsl
sbb
mov
lea
fs
inc
mov
mov
cli
push
fs
and
mov
add
adc
xchg
mov
subb
add
int
fldt
pushf
adc
mov
cmpsb
neg
cli
cs
add
cmp
and
das
rol
adc
sarb
ds
pop
inc
jecxz
inc
js
inc
cmp
fistpll
adc
sbb
loopne
adc
inc
and
cwtl
faddl
test
ljmp
fadds
or
push
les
in
push
gs
and
or
add
xchg
pop
push
push
call
xchg
into
xchg
outsb
ret
mov
and
test
inc
cmp
pop
fwait
push
into
repnz
adc
fs
js
icebp
pop
or
or
clc
addr16
pop
mov
and
push
in
mov
call
test
mov
outsl
cs
xchg
lea
test
dec
cld
mov
push
pop
jmp
jg
mov
inc
add
xor
loope
mov
xor
mov
xor
push
pop
rcll
je
add
leave
stc
stc
and
test
lods
std
mov
mov
iret
xor
incl
or
test
inc
je
dec
or
sbb
fldt
dec
fs
arpl
add
push
mov
nop
push
push
and
jbe
es
sbbl
mov
inc
ret
ja
lock
pop
test
rcl
mov
xor
movsl
mov
or
xor
shll
push
pop
negb
push
mov
pop
sbb
mov
mov
xchg
jo
xlat
or
add
add
rorb
inc
outsl
pushw
pop
inc
lock
loopne
addb
mov
mov
je
cmp
mov
dec
push
jne
movsb
and
pop
xchg
cmpsb
add
mov
bound
and
fidivs
xor
mov
cli
mov
test
xchg
stos
sbb
mov
or
mov
xor
mov
mov
jo
nop
js
xor
ljmp
lcall
push
nop
shrl
iret
pop
push
mov
add
xor
mov
dec
add
adcl
xchg
pop
imul
mov
inc
incb
xorb
or
mov
jl
push
jg
push
add
push
stos
test
xor
add
push
test
sbb
stos
loopne
in
shlb
adc
imulb
ret
shlb
xchg
ja
fsubrs
mov
jge
push
into
xchg
inc
adc
cmp
aas
rorl
mov
cld
jne
in
fwait
mov
dec
fs
ja
sbb
push
or
adcb
xor
sbb
sbb
add
adc
mov
cld
cmc
push
or
pop
add
push
loopne
pop
subb
and
neg
xchg
clc
cmp
cld
mov
cmp
sbb
push
and
pop
in
int3
std
push
pop
push
lock
call
inc
add
repz
mov
lock
insb
jge
inc
push
sub
nop
add
inc
fdivl
xor
jb
jl
insb
or
dec
dec
shlb
rclb
je
pop
js
imul
push
fs
xchg
daa
adc
add
add
sbb
lods
inc
div
sub
ror
pop
popa
push
int3
xor
int3
xor
add
pop
adc
jmp
mov
in
xor
out
xor
test
add
jb
dec
mov
stc
jge
mov
adc
xor
aas
inc
jnp
loopne
das
mov
mov
mov
jne
inc
adc
call
xorl
nop
js
loope
aad
xor
sbb
sub
add
jmp
stos
or
into
mov
add
push
cs
jmp
sub
popa
push
std
sahf
mov
mov
int3
bound
cmp
call
in
ret
or
sbb
fidivl
inc
mov
scas
ficomps
popa
orb
mov
jle
mov
mov
fdivl
ffreep
adc
add
lock
cmp
lods
xor
rclb
sbb
movsb
into
hlt
and
fimull
aam
mov
add
in
mov
sub
mov
adc
je
mov
jp
decl
add
cmc
jo
jl
add
inc
test
inc
dec
sbb
lahf
push
mov
add
sub
dec
push
mov
xor
inc
sbb
popa
sub
inc
xor
add
fisttpl
ret
stos
add
ret
sub
jmp
cmc
in
mov
and
or
adc
pop
inc
xor
adc
and
rcrl
push
fistpll
mov
push
outsl
test
movsb
pop
pusha
loope
cwtl
out
shlb
sbb
outsl
xor
and
loopne
adc
add
push
add
in
xor
aaa
xchg
xor
xchg
shll
mov
loope
js
popa
dec
mov
lret
add
add
mov
aam
mov
sub
cmp
leave
mov
mov
pop
ljmp
push
ret
call
dec
or
not
mov
and
and
xor
insb
int3
lock
fists
xor
push
mov
outsb
stos
fcmovne
pusha
sub
xor
or
adc
xchg
mov
or
push
nop
add
shr
add
sbb
and
xor
or
out
test
inc
mov
add
xorl
push
rcrb
aaa
jp
mov
push
cld
xchg
fiaddl
pushl
xchg
in
inc
ljmp
push
in
pop
ljmp
add
mov
sub
enter
adc
add
xor
mov
sbb
sub
xor
and
inc
push
mov
or
enter
xor
clc
push
cli
or
mov
mov
orb
sbb
xchg
dec
jle
add
push
inc
rcrl
nop
cli
lcall
push
test
mov
into
call
adc
or
xchg
mov
into
and
rcll
cld
out
push
jo
cmp
popa
inc
cmp
jo
ljmp
and
ljmp
sbbb
sub
pop
and
pop
jo
inc
xchg
mov
cld
in
lcall
push
leave
rolb
xchg
xor
xor
lods
stos
push
dec
xchg
sbb
pop
lea
adc
pop
in
ljmp
rcl
rcl
cmp
sbbl
cmp
test
lret
rclb
aaa
cmp
add
inc
inc
test
xchg
inc
push
jge
ret
pop
mov
add
mov
jl
imul
dec
jl
or
ja
xor
outsl
inc
jl
pop
push
mov
xor
inc
stc
dec
mov
adc
inc
adc
dec
addr16
or
push
inc
ficoms
mov
pop
push
lock
es
std
push
mov
mov
mov
ljmp
push
xor
add
fcomps
das
clc
push
and
stc
mov
pop
adc
push
in
jle
int3
ja
xor
orb
mov
mov
int3
dec
int
push
popa
push
dec
loopne
ror
ja
cmpb
dec
jecxz
xchg
mov
cmp
mov
test
sbb
int3
int3
jl
or
jge
lock
and
jmp
nop
loope
shrl
sbb
mov
clc
add
sbb
or
add
mov
mov
std
fwait
or
inc
push
int3
xor
or
mov
das
cld
loope
and
fs
jp
es
or
jb
add
and
lods
and
lods
stos
sbb
adc
shl
nop
inc
idivl
movsb
aaa
xor
and
cmp
arpl
xchg
pop
or
sahf
pop
in
inc
mov
inc
mov
icebp
pop
xchg
in
cltd
push
jmp
stc
fs
jns
call
ss
push
or
pop
inc
imul
adc
test
lods
ja
dec
and
pop
push
xor
or
rclb
in
iret
or
insl
dec
cmp
ret
nop
out
inc
aas
mov
push
sub
pushf
pusha
sub
push
nop
jb
xchg
push
adc
dec
or
push
inc
inc
adc
push
adc
pop
sarb
sarb
jne
pop
gs
jg
push
inc
add
sbb
stos
cmp
dec
pop
mov
subl
inc
inc
mov
lret
mov
fcoml
in
mov
jge
pusha
mov
inc
sub
pop
incl
in
adc
or
mov
or
and
jo
mov
sti
jo
rol
leave
sti
popa
inc
test
aam
sahf
push
dec
inc
psrad
das
adc
jne
adc
test
mov
ret
insl
push
sbb
pcmpgtd
push
jl
xorl
stos
call
adc
cmp
adc
cmp
dec
push
mov
push
mov
ds
mov
movsb
push
imul
jg
scas
push
add
add
lea
mov
adc
pushl
idivb
mov
dec
sub
inc
sbb
loopne
cmpsb
mov
pcmpeqb
mov
mov
sub
push
ret
mov
inc
popa
call
xorb
je
aaa
pop
call
adc
or
push
push
jl
sub
mov
add
daa
or
adc
fcos
les
lret
mov
inc
push
mov
push
sub
test
xchg
ret
rol
aaa
mulb
lds
xor
or
or
clc
jecxz
outsb
xor
xchg
or
inc
out
push
mov
sbb
call
popa
pop
cld
add
or
push
mov
or
sbb
push
insb
dec
and
dec
rolb
dec
inc
call
mov
sub
mov
cmp
mov
loopne
or
bound
inc
repz
pop
ret
cld
les
je
inc
shrb
or
sahf
xchg
push
xor
movsb
jne
lods
mov
push
adc
enter
cmp
adc
add
cmpsl
xchg
std
and
sub
in
push
push
and
pop
adc
les
shll
cs
ljmp
imul
mov
lret
mov
add
cmc
and
or
pop
adc
mov
clc
rolb
jp
leave
hlt
fistl
fcomps
push
test
mov
gs
mov
dec
push
mov
shlb
fsubr
sbb
outsb
test
out
repz
cmpsl
test
cli
or
jb
mov
ret
mov
vpinsrb
push
add
and
test
lods
sub
into
in
lods
repz
loope
pushf
jle
push
ret
movsb
jmp
jp
cmp
push
lods
lret
mov
cmpsl
cmc
push
sbb
int3
cmp
and
push
lcall
add
xor
call
xchg
call
pop
adc
shrb
stos
lds
jecxz
pop
call
inc
adc
xchg
shlb
hlt
clc
sbb
mov
sbb
mov
gs
push
mov
call
inc
adc
sti
addb
mov
jp
subl
add
fdivl
push
ds
fs
les
ss
push
add
fidivrs
cmp
cmp
int3
shl
and
pop
inc
push
push
js
add
pop
or
mov
inc
mov
mov
jp
inc
mov
lds
inc
and
add
adc
lcall
rcll
cmp
pusha
xor
fsubl
rcrb
mov
sbb
cli
inc
pop
sbb
imul
sahf
clc
outsb
xor
cmc
hlt
nop
pop
adc
jae
or
lahf
nop
sbb
pop
add
test
push
adc
jo
ret
sbbb
jmp
sbb
fs
add
add
fists
push
cmp
incl
orb
xchg
dec
add
add
fsubrs
adc
subl
sbb
cli
cmp
sti
and
cli
xchg
cmp
inc
pop
add
adc
ljmp
push
mov
pop
and
testb
mov
fdivr
sub
test
int3
dec
push
push
lock
int3
mov
sub
add
pusha
shll
arpl
iret
fimull
inc
jge
cmp
dec
or
lock
ret
cmpb
mov
xor
mov
rcr
sti
or
ss
repnz
cmpsb
inc
dec
add
add
int3
mov
pop
push
or
inc
adc
jno
xor
xchg
lock
push
and
subl
inc
imul
jp
xor
or
adc
push
xor
fs
test
add
ret
pop
inc
pop
and
call
add
mov
and
int3
test
pop
pop
call
pop
push
or
fsubrl
sub
sub
jns
jp
dec
jl
hlt
fmull
xchg
div
adcl
dec
scas
fimuls
loop
add
lret
iret
shl
cmp
je
dec
pusha
push
xchg
mov
add
or
fisubrs
imul
inc
add
pop
xchg
mov
cmp
pushf
imul
nop
jbe
testb
ja
mov
hlt
mov
mov
and
insb
inc
jb
cmp
movsb
pop
sub
jle
js
add
push
lock
push
pop
or
dec
mov
inc
push
pop
jmp
push
enter
mov
fwait
mov
outsb
js
dec
push
or
ds
sbb
pop
xchg
test
cmp
test
sbb
fcompl
test
push
icebp
je
inc
ret
adc
sub
lea
push
aam
mov
icebp
xchg
mov
outsb
push
dec
pusha
fs
xchg
or
scas
inc
cmp
cmpsb
xchg
jle
not
xchg
jle
mov
addb
sbb
mov
test
push
jl
loop
icebp
cli
mov
xorb
lock
imul
lret
out
dec
fwait
std
pop
addb
xchg
inc
sub
dec
mov
js
push
push
dec
jmp
pop
int3
xor
testb
dec
or
adc
data16
mov
hlt
mov
or
mov
enter
xchg
les
idivb
mov
or
lfs
dec
adc
mov
sbb
int3
add
cwtl
rolb
enter
test
test
enter
inc
leave
push
test
mov
comiss
in
lret
sub
and
idivb
xor
sbb
lret
push
es
test
pop
jmp
pop
lds
dec
pop
test
push
popa
mov
ja
add
xchg
pop
repz
bound
inc
stos
insl
test
ds
sub
and
aam
inc
mov
dec
jecxz
sub
add
rolb
out
test
out
push
push
popf
push
or
add
and
adc
inc
add
mov
enter
ret
add
jo
jae
sbb
jle
adc
xchg
push
mov
es
push
jne
pop
loopne
and
insl
cmp
or
in
or
inc
out
dec
pop
ljmp
mov
jns
xor
add
ss
fmuls
cmp
cli
push
outsl
andl
dec
data16
mov
dec
pop
cld
push
fsub
shlb
cmpsb
fadd
daa
xchg
lock
cmovge
and
in
push
add
incb
inc
adc
lock
dec
cld
cli
lea
jne
push
es
jno
enter
scas
mov
fcmovb
inc
mov
xor
sub
fdivp
jno
adc
sahf
insb
mov
scas
addb
movsbl
out
in
std
test
mov
xchg
adc
adc
sti
mov
ror
sub
pop
xchg
addb
push
aas
gs
mov
jb
mov
ds
pop
lds
in
loopne
fwait
mov
dec
sti
sbb
leave
sbb
add
pop
push
scas
cmp
sbb
mov
movsb
repz
mov
and
fs
push
adc
das
cld
push
mov
xlat
dec
adc
pop
dec
or
xchg
xor
cmpsb
ds
hlt
xor
gs
xor
sbb
rol
les
pop
dec
shrb
mov
xchg
jmp
push
and
add
add
das
ss
icebp
dec
mov
insb
inc
add
rolb
add
in
insl
cmpsb
cmp
jle
mov
add
jle
call
mov
repz
gs
cmp
xlat
and
or
mov
sbb
cmp
cli
aas
or
or
xor
sbb
inc
adc
cli
push
sub
out
add
int3
loopne
push
inc
inc
sar
xor
cld
sub
and
and
mov
push
clc
inc
mov
jp
xchg
orb
popf
std
leave
pop
sub
test
dec
xor
fsub
fs
pop
xor
mov
es
or
jnp
cltd
clc
shll
fsubr
mov
movsl
insl
nop
dec
das
sbb
inc
inc
xor
lea
pop
js
loope
sti
sarb
and
mov
es
pop
xchg
mov
push
add
hlt
mov
xchg
scas
inc
sub
or
pop
pop
or
pop
push
push
gs
test
mov
push
cmp
dec
out
cmpb
test
pop
in
ja
call
mov
cld
call
add
mov
testl
push
mov
jbe
call
mov
mov
dec
xorl
leave
addr16
inc
or
dec
dec
mov
and
leave
mov
mov
push
mov
std
loop
sbbb
call
add
or
rcrl
xchg
xchg
add
orb
fimull
or
push
mov
testb
add
adc
scas
sarb
pop
push
call
into
int3
cld
and
lea
mov
and
movsb
sbb
test
rcll
addb
add
dec
mov
ret
shl
adc
pusha
push
cmp
adc
xor
js
outsl
cld
and
push
lret
inc
outsl
push
mov
inc
insb
jmp
sbb
cmc
and
mov
inc
xor
pushf
push
sbb
nop
xor
xor
repnz
dec
or
jb
or
ss
es
and
sub
std
out
dec
mov
pusha
lock
test
dec
jnp
xor
push
adc
sbb
dec
adc
in
xchg
jbe
add
je
and
pop
push
mov
jge
or
addb
test
mov
lock
or
add
pop
mov
pop
push
pop
pushf
in
dec
inc
mov
movsb
jno
xchg
insb
xchg
or
pop
pop
ret
ljmp
or
fs
mov
or
out
sub
out
mov
inc
mov
mov
mov
push
sahf
movb
clc
or
aam
and
add
xchg
es
outsl
jle
and
loope
jne
inc
call
push
add
inc
xchg
insb
xchg
incb
mov
mov
and
rcrl
adcl
jno
and
xchg
ret
dec
test
and
enter
push
push
adc
add
sbbb
mov
imul
test
aam
inc
mov
int3
xor
aaa
jl
adc
push
inc
fs
adc
cs
adc
pop
inc
pop
sub
cmpsb
lods
or
sub
mov
push
addl
add
mov
adcb
rcrb
test
enter
pop
enter
pop
mov
inc
xor
dec
adc
aad
jb
mov
nop
inc
test
and
test
sub
mov
test
loopne
xor
sub
push
les
cmpsb
push
je
sub
mov
push
push
push
cmp
mov
and
mov
in
test
popa
dec
orb
lods
dec
xchg
and
add
lea
cmp
cwtl
push
gs
fisubrl
sub
ret
leave
fs
fldl
mov
push
mov
mov
or
clc
mov
mov
push
std
int3
test
fwait
test
xchg
aam
cmp
push
nop
mov
cli
inc
jge
mov
or
jae
cwtl
call
dec
lods
subl
test
jne
cmc
mov
outsl
fs
cmc
test
mov
pop
pop
sub
and
pushf
lahf
and
lret
mov
lea
mov
gs
mov
sarl
stos
dec
adc
xlat
dec
push
add
pop
sbb
int3
icebp
or
out
fisttpl
mov
aaa
enter
or
fsts
cmp
dec
outsl
mov
wrmsr
sbb
mov
pop
adcl
mov
or
rcr
loope
mov
xor
pop
add
loopne
loop
sbb
mov
je
xor
sub
test
push
insb
icebp
int3
in
push
loopne
in
loope
dec
pop
jo
add
push
rorb
out
dec
or
pop
inc
std
add
inc
sub
xor
sub
dec
add
aad
jae
aam
jbe
mov
outsl
add
pop
dec
xlat
shr
lods
xor
add
aas
inc
xor
add
pop
call
subb
lea
je
adc
insb
mov
or
fsubrp
aam
inc
lock
mov
xor
pusha
jp
insl
lcall
xchg
mov
hlt
jg
push
pop
test
out
int3
dec
push
std
pop
test
sbb
hlt
and
dec
rcl
ret
mov
jmp
pop
std
xchg
int3
or
movb
iret
es
call
mov
add
sub
es
inc
rclb
mov
inc
cs
addb
jo
pop
cld
inc
mov
icebp
mov
xor
shr
scas
jg
fimull
jae
je
jne
add
sbb
adc
xchg
mov
call
test
dec
ss
adc
loope
push
sbb
cmpsb
pop
rcll
sbb
shl
pop
int
cld
test
test
outsb
loop
push
sti
jb
cs
jne
inc
push
test
test
stc
cmp
add
rcrb
inc
xorb
mov
fistl
shlb
push
or
cmpsb
dec
cld
add
testb
sar
stos
aam
mov
dec
mov
and
cmp
and
mov
add
roll
pop
in
mov
mov
cmp
xor
lret
clc
push
pop
mov
cli
aas
mov
pop
mov
lock
push
jg
mov
pop
pusha
or
add
mov
lcall
push
or
and
paddq
jecxz
add
or
and
jp
mov
pop
jmp
add
mov
sbb
and
add
push
fisubl
je
mov
mov
dec
fadd
dec
or
enter
cs
push
sbb
les
js
rcrb
mov
in
clc
dec
or
cmp
rcrl
data16
sbb
mov
push
or
adc
add
mov
mov
dec
cmpl
icebp
dec
ss
jne
adc
lret
shlb
inc
and
inc
push
out
cld
lds
and
push
call
add
int3
clc
mov
int3
dec
sub
int3
in
rcll
mov
jo
and
jne
push
sbb
test
cli
dec
cmp
adc
xchg
pop
sbbb
loopne
rorb
or
cmp
or
mov
add
faddl
js
hlt
inc
or
mov
add
or
imul
imul
cld
inc
or
std
pop
std
inc
mov
xor
mov
ror
rcrb
mov
or
aaa
call
push
add
and
add
sbb
popl
mov
sbb
aam
movsl
inc
jae
data16
andb
jo
fisttps
orb
jb
mov
cmp
add
xor
in
pop
inc
mov
icebp
popf
fs
outsl
int3
or
xor
sbbb
jb
adcb
add
jno
pop
clc
sub
aad
xchg
dec
inc
inc
or
aaa
mov
fcomps
je
jne
bound
je
mov
push
std
clc
and
add
sti
orb
inc
add
in
pop
shll
or
shll
mov
mov
mov
sub
mov
and
mov
mov
data16
std
gs
mov
dec
ja
cmc
rcr
add
push
call
subl
jmp
fstpt
dec
fisttpl
dec
push
insl
jb
jbe
adc
mov
incl
cs
ret
incl
xor
push
mov
dec
mov
ret
fisubrl
shlb
loopne
inc
push
sbb
push
loop
sub
mov
cs
pusha
mov
pop
mov
pop
jo
jnp
cli
cld
or
mov
push
rol
jbe
xor
dec
or
mov
cld
sbb
rorb
test
cmp
pop
popl
sbb
mov
xchg
push
cld
lcall
mov
jne
ret
sbb
test
mov
loopne
das
push
cmpb
ja
sbb
mov
movsl
scas
or
xor
lea
int3
pop
mov
and
in
add
add
dec
cmp
call
push
aas
cld
std
fisubrl
shlb
push
inc
push
mov
add
and
fs
dec
flds
and
mov
cli
insb
cmc
xchg
or
leave
or
sub
pushf
gs
stos
in
das
lret
pop
inc
cmc
mov
mov
jo
mov
add
xchg
add
leave
mov
and
ret
nop
cmp
pop
pushf
sub
ds
out
add
push
scas
add
or
jl
icebp
dec
cmp
and
leave
lea
popa
cld
jle
jg
clc
jecxz
and
mov
mov
js
pop
leave
test
outsb
fstpt
popa
sbb
loop
and
cmp
pop
sub
mov
adc
in
shl
ljmp
cmp
xorb
iret
and
push
add
mov
stos
add
es
adc
or
or
out
cmc
push
jg
lea
ljmp
add
fsubp
push
rorl
hlt
xor
cli
sub
inc
out
xchg
in
inc
or
into
clc
scas
xor
inc
mov
add
or
mov
aaa
add
inc
call
pop
insl
ljmp
or
xchg
test
mov
adc
je
mov
jbe
int3
iret
push
cmp
push
fdivrl
add
mov
fdiv
inc
ret
stc
repz
in
ret
push
add
xlat
push
adc
cs
sar
xchg
push
ret
fmull
insl
es
shrb
mov
push
loopne
xor
cmp
outsl
mov
mov
mov
into
push
sbb
fs
loop
outsb
xchg
enter
add
pop
mov
xchg
mov
adc
jne
add
push
jecxz
mov
sbb
js
sub
xlat
clc
imul
dec
jl
cmp
cmpl
call
mov
mov
pop
les
push
mov
call
imul
pop
xor
mov
mov
jae
dec
mov
xchg
xorb
jle
push
dec
pop
hlt
shll
int3
inc
gs
mov
lcall
pop
push
or
adc
add
aad
insl
add
adc
fs
into
hlt
adc
add
arpl
fmul
inc
ret
adc
lock
mov
je
sbb
fists
js
fwait
dec
insl
add
xorl
dec
sub
or
pop
aas
jmp
ret
rol
jmp
in
mov
cmc
enter
test
inc
mov
repz
fdivrl
pushl
add
and
mov
cmp
cs
inc
mov
or
mov
adc
xor
bound
sbb
xor
or
rolb
call
jne
dec
xor
jg
loop
or
jb
dec
test
fmuls
cmp
adc
push
inc
js
push
xchg
inc
jns
push
repnz
sahf
es
aam
or
sub
jl
and
int
adc
mov
fwait
inc
mov
icebp
iret
rcl
xchg
or
push
mov
mov
pusha
xor
push
and
push
xorl
push
loopne
int3
add
cmp
test
call
in
push
negl
stc
idiv
outsl
rcr
jmp
mov
shlb
inc
aaa
add
call
das
jne
mov
xchg
push
add
add
mov
les
xchg
mov
and
inc
or
push
pushf
les
stos
mov
lods
cmp
lcall
cld
adc
ret
add
outsl
jmp
jne
imul
or
dec
lock
adc
pop
mov
test
push
jl
pop
xor
push
dec
in
adc
movsl
adcl
jbe
popf
dec
jo
jae
push
dec
inc
rolb
scas
cld
push
mov
jae
out
pusha
rsqrtps
push
rcl
testl
pop
int3
adc
add
sub
inc
pusha
add
push
orb
lods
mov
push
add
pop
adc
mov
pop
add
je
push
rorl
dec
dec
cli
sbb
mov
lods
aad
mov
mov
or
or
hlt
jmp
xchg
jp
mov
adc
add
mov
inc
jo
dec
call
pop
lcall
mov
bound
call
add
or
push
and
jae
js
ss
testb
pop
inc
shl
push
ret
pop
sbb
shl
fdivs
insl
rcr
push
dec
and
dec
stos
dec
jl
sar
fs
or
pop
mov
test
stos
shrl
dec
popf
push
mov
xor
ret
ss
ja
add
stc
and
cmp
jecxz
mov
inc
repnz
fdivs
es
inc
xor
jge
mov
xor
lcall
xchg
lock
and
sub
mov
push
syscall
cld
fcom
mov
mov
stos
sbb
adc
adc
js
cmp
pop
inc
mov
dec
xchg
cs
push
push
sarb
and
call
xor
cmpsl
cmp
xor
mov
call
add
push
jge
fs
movb
sub
adc
sbb
int3
inc
js
dec
push
sti
mov
call
pop
inc
adc
mov
sub
dec
arpl
cmp
cmpxchg
add
test
or
les
pop
push
mov
mov
inc
clc
jmp
pop
add
pop
and
adc
incl
mov
ret
fmull
icebp
imul
and
cld
inc
mov
sub
cld
cmpb
fs
jmp
addb
js
adc
inc
cmp
icebp
push
or
xor
inc
jp
cmp
and
mov
out
bound
cmp
adc
insb
and
loope
add
dec
ss
call
lea
mov
push
call
imul
push
insb
sub
push
cmpsl
or
push
xor
dec
jbe
mov
call
inc
add
and
in
cmp
cmp
das
pop
pop
xor
mov
push
push
or
test
aas
xchg
lret
in
lahf
pop
inc
jl
sbb
push
push
movsb
fdivrl
xor
push
xor
push
inc
es
fsubs
loopne
push
sub
xlat
add
dec
inc
rcl
rolb
sbb
je
push
cmp
and
cld
mov
outsb
mov
jmp
pop
data16
jno
pop
push
dec
inc
mov
and
lret
adc
lods
or
sub
test
mov
adc
and
mov
inc
aaa
dec
mov
or
adc
cmpl
mov
aam
pusha
popa
inc
out
mov
pop
pop
cli
repz
xchg
push
add
mov
in
and
hlt
rcl
cmp
inc
orb
leave
jb
lods
push
xchg
and
adc
mov
sti
mov
pop
mov
push
fs
jbe
xchg
dec
push
xchg
pop
nop
in
xchg
mov
mov
push
add
testb
pop
nop
mov
jb
in
add
mov
outsl
xchg
lret
inc
repnz
leave
add
mov
scas
push
insl
insb
fcoml
cli
add
rclb
add
xchg
adc
inc
xchg
sti
notb
cmc
mov
add
xor
in
mov
add
and
mov
add
push
sti
outsb
mov
mov
xor
in
xor
push
mov
mov
divb
loop
cmp
test
arpl
push
jmp
cmp
es
add
jp
push
je
dec
fsubrs
add
cmp
scas
dec
or
clc
mov
mov
popa
mov
and
mov
gs
dec
push
shlb
adc
push
cmp
pop
add
jb
mov
out
es
xchg
add
jmp
dec
sub
cltd
cmpw
inc
jae
push
mov
aad
scas
mov
sbb
inc
jmp
aam
out
call
xchg
pushf
or
cmp
stos
mov
clc
push
mov
ja
pop
inc
lea
xchg
or
push
jne
lea
cmc
add
or
fs
sub
andb
and
insb
or
mov
mov
add
push
sti
xchg
xor
shlb
inc
ja
xchg
ss
frstor
xchg
inc
add
mov
push
sti
push
push
sbb
lock
lcall
sbb
sbb
add
push
mov
test
dec
in
cmpsb
mov
sbb
lret
addl
inc
fildll
les
cmp
push
shl
ljmp
adc
and
icebp
adc
in
ret
add
sub
ss
or
pop
jmp
cwtl
subb
xor
sbb
push
ds
testb
add
test
push
stc
rcr
fcomps
ja
mov
pop
cmp
loopne
shlb
or
fcomp
add
push
sahf
and
pop
and
dec
mov
xor
pop
loopne
loopne
jp
pop
rcl
ja
push
pop
adc
jbe
jbe
add
sub
cwtl
add
outsb
mov
xlat
mov
add
adc
add
cmpl
pop
rclb
cmpxchg
inc
jmp
pop
adcb
mov
mov
push
or
andb
movsb
decl
out
mov
jmp
pcmpgtw
cld
inc
xchg
push
xchg
xor
inc
push
test
in
out
cmc
cmp
inc
sub
test
sbb
data16
cli
mov
inc
sbb
mov
imul
repnz
push
ret
cmp
fdivl
xchg
pop
loope
jl
inc
adc
mov
push
gs
lcall
dec
adc
add
jo
or
aaa
testb
and
popa
imul
outsb
mov
gs
lea
mov
int3
pop
mov
xchg
popa
mov
xchg
adc
lcall
inc
sub
mov
push
jl
push
xchg
imul
xor
sub
mov
dec
int
push
push
xorps
mov
push
scas
jecxz
in
push
aaa
or
xchg
mov
push
test
in
jmp
adc
enter
test
out
dec
xor
or
movsb
push
xlat
stos
inc
je
jp
push
jbe
test
nop
fcmovnbe
ja
rorb
xor
add
xorb
mov
and
pushf
cmp
adc
inc
sbb
mov
dec
idivl
ret
and
add
test
test
inc
mov
mov
pusha
in
dec
or
test
fisubrl
or
dec
movsb
jae
ret
adc
out
jge
incb
sbb
rclb
and
push
test
cmp
sbb
jmp
push
xor
sub
jg
sbb
inc
push
outsl
mov
loope
xor
dec
pop
mov
dec
ficomps
adc
jae
js
in
int3
cld
push
xchg
or
xchg
les
scas
pop
inc
ss
inc
adc
into
push
xchg
subb
mov
fcompl
push
test
push
xor
add
push
and
jmp
cmp
push
clc
push
jmp
xor
clc
xor
sub
mov
sar
fstpt
mov
sub
data16
loopne
xor
xor
add
shll
pop
int3
fucomi
bound
and
sahf
adc
jns
cmp
lods
movsb
scas
inc
sbb
mov
xchg
xor
or
push
pop
and
mov
jmp
push
fdivrs
mov
sub
out
and
and
push
imul
xor
dec
or
test
dec
arpl
dec
arpl
movl
cmp
ret
push
pop
leave
jp
sbb
incl
xor
inc
mov
pushf
lea
xchg
shlb
in
xchg
lock
rorl
int3
nop
push
mov
and
cmp
push
or
mov
call
inc
fdivs
push
cmp
and
mov
fistpl
loopne
es
movb
inc
clc
cmp
jmp
push
mov
in
inc
lahf
pop
sbb
adc
ret
std
in
out
leave
xchg
push
fsubrs
out
push
aad
ds
inc
adcl
pop
jge
inc
fdivs
aam
lods
lods
clc
popf
es
shr
imulb
inc
push
and
shrb
add
call
or
push
gs
pop
test
xchg
and
mov
xchg
por
mov
rorb
cmpsb
jbe
xchg
pop
sbb
mov
pop
in
popa
les
push
sub
int
faddl
sub
mov
pop
imul
or
mov
test
imul
adc
jbe
enter
or
or
arpl
pop
lock
cld
bound
fldt
outsl
jbe
pushf
cmpsb
jg
sbb
cli
push
adcl
imul
jle
fwait
jbe
repz
fisttpll
cwtl
jnp
test
mov
add
fisubrl
popa
cmc
out
aam
add
mul
call
add
loopne
jbe
cmp
or
in
jne
inc
imul
lret
test
and
jge
int
mov
pop
add
push
inc
pusha
xor
jmp
add
push
or
or
test
fs
shlb
add
and
add
repz
shrl
rclb
and
insb
mov
cmp
xorl
pop
pop
loopne
add
jl
outsl
ret
mov
ds
lret
std
stos
daa
cli
pushf
ret
adc
cmp
or
rclb
fsubrs
push
push
std
jb
pop
inc
fwait
push
adc
dec
mov
push
ss
jp
adc
lods
push
pop
mov
int3
mov
test
inc
sbb
out
or
ret
pop
mov
mov
stos
repnz
inc
cld
add
dec
int3
add
les
stc
sub
aas
dec
or
add
outsb
aam
test
mov
inc
sahf
ljmp
je
xor
jle
fisubl
xor
movsb
in
and
pop
mov
inc
mov
mov
hlt
rcll
sub
loop
push
ret
sldt
adc
adc
and
roll
ss
adc
xchg
push
jo
pop
shrl
adc
es
sub
jb
sarb
es
jg
mov
dec
int3
sub
insl
lret
aam
push
inc
xchg
mov
stos
xchg
sti
mov
add
pop
push
jbe
adc
pop
mov
dec
ret
ss
cwtl
mov
push
sbb
mov
and
add
mov
rorb
mov
inc
in
in
xchg
testl
add
rcll
mov
sbb
and
mov
push
adcb
push
mov
sbb
mov
pop
dec
and
xorl
lret
js
push
add
inc
ret
sub
and
call
loopne
out
mov
test
mov
adc
outsb
xchg
mov
std
enter
pop
push
pushl
cmp
xchg
mov
rolb
mov
mov
jge
aad
pop
push
adc
lahf
xorb
sub
and
fisttps
jg
inc
sub
cmp
jmp
add
mov
enter
shlb
sbb
push
xor
mov
js
xchg
xchg
fstps
std
popa
ret
pop
xor
repnz
xor
add
aam
xchg
cmp
xor
xor
ret
mov
xor
mov
aaa
mov
adc
aaa
jge
jmp
lock
inc
xchg
inc
hlt
adc
loope
notb
mov
pop
push
pop
loope
and
loopne
imul
pop
push
sbb
cmp
or
adc
andb
call
dec
inc
insl
rcrb
ficoml
add
cld
pop
cmc
push
mov
adc
mov
cld
ret
in
loopne
sbb
push
push
icebp
pop
xchg
cs
cmp
add
inc
xor
sub
loop
test
mov
cmp
cli
mov
outsl
fwait
jo
mov
cmp
inc
pop
and
inc
inc
push
rclb
je
push
shll
rcr
les
inc
mov
xor
add
inc
xchg
or
xchg
jp
pop
cli
push
mov
fadds
clc
push
dec
sbb
cmp
shlb
and
test
xor
arpl
sub
aas
lock
sub
test
enter
addr16
mov
or
fs
aam
out
enter
out
pushf
fs
mov
pop
mov
jle
fnsave
pusha
inc
loop
mov
fsubrs
adc
shrl
add
xlat
jo
inc
orl
data16
and
rolb
ljmp
lock
rolb
inc
icebp
addr16
and
fcmovbe
add
dec
mov
push
mov
add
sarb
adc
push
out
adcl
and
sub
jp
int3
fs
jg
mov
push
int3
inc
cmpb
shr
and
mov
int3
movl
mov
and
je
add
ds
sub
add
dec
movsb
pop
push
sarb
and
repnz
cld
add
faddl
jo
mov
inc
movsb
add
int
inc
cmp
cmp
xchg
imul
dec
jl
sub
fstl
stc
or
int3
outsb
push
push
xchg
addr16
add
sub
push
out
add
lcall
ret
fmuls
loope
adc
neg
jbe
mov
ret
dec
popa
jmp
push
sbb
lcall
cs
shlb
mov
sbb
lods
jb
ja
jmp
mov
enter
sbb
jo
sar
cmp
mov
sbb
sarb
add
sub
or
xchg
and
ljmp
mov
cltd
popa
loope
lcall
movsb
int3
sbb
pop
and
add
pop
negb
es
adc
pop
fwait
test
cld
sbb
mov
jo
add
loopne
adc
mov
popf
sarb
punpckhbw
xchg
and
lds
fsubl
incb
cmp
insb
lret
dec
scas
mov
xor
push
cmpsb
test
pop
sub
dec
out
mov
jne
sarb
ret
clc
loope
xorb
mov
inc
mov
push
add
dec
nop
push
inc
jl
or
inc
pop
call
aaa
cwtl
dec
mov
loope
mov
mov
dec
pop
les
inc
xchg
xchg
iret
shll
mov
insl
repnz
adc
push
cmp
add
sahf
add
adc
mov
pop
and
dec
mov
repz
adc
jmp
data16
dec
adc
mov
out
mov
sbb
add
mov
lahf
mov
add
pusha
add
jbe
mov
add
and
dec
mov
nop
rorl
and
xor
xor
xorl
mov
push
mov
pop
xchg
push
ss
int
pop
inc
mov
bound
push
cwtl
insl
insl
mov
insb
xor
mov
lcall
inc
ss
jo
cmp
dec
enter
cmp
call
xchg
inc
push
add
add
in
xchg
mov
adcb
add
inc
and
add
add
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
push
enter
fmuls
pop
xor
add
inc
in
aaa
xchg
sub
outsb
je
sbb
in
fldt
jo
insb
insb
outsl
arpl
gs
jb
gs
sub
std
fcmove
add
inc
pop
gs
insb
gs
popa
outsb
fisttpll
and
inc
fs
jg
sti
pop
inc
imul
jne
jae
push
gs
imul
push
push
dec
popa
jae
inc
jb
jb
popa
insl
mov
inc
gs
push
mov
addr16
pop
daa
push
lock
mov
pop
fsubrl
inc
js
pop
imul
push
fsub
cmp
adc
addr16
xor
out
mov
clc
push
popa
imul
push
arpl
pop
shlb
sub
imul
mov
dec
stos
popa
fs
fistps
pop
xorb
jns
insb
mov
outsb
adc
jo
xchg
idivb
outsl
data16
imul
push
or
add
outsl
jae
jbe
aas
sub
pop
mov
cmpsb
inc
outsb
sbb
inc
insl
dec
stc
cwtl
insl
idivb
jle
inc
insb
push
test
pushf
cmp
shrb
inc
jae
imul
into
sub
push
scas
dec
outsl
inc
cwtl
mov
dec
icebp
mov
add
xchg
push
imul
arpl
stc
sub
inc
dec
sbb
push
leave
jle
jns
xor
push
insb
je
push
xor
je
jne
ss
imul
mulb
jae
or
arpl
in
test
adc
clc
hlt
gs
push
xor
push
or
scas
xor
mov
push
outsb
push
adc
mov
cmp
jae
fidivl
jae
js
push
sbb
mov
add
and
inc
inc
push
sub
push
addr16
push
rcrb
sub
xchg
mov
pop
and
ret
sub
rclb
mov
sahf
stos
outsw
inc
mov
xor
sub
and
idivb
pusha
addr16
ret
mov
bound
jne
jmp
jbe
inc
sub
jbe,pt
fldcw
adc
fisubl
and
push
outsl
daa
fisubrs
fwait
in
push
xchg
jb
enter
and
in
push
dec
push
push
and
addl
bound
mov
and
je
pop
mov
in
scas
xchg
inc
ja
mov
dec
outsl
nop
dec
testl
fdivs
outsl
test
mov
mov
insb
xchg
or
add
xor
arpl
je
jl
inc
inc
xor
and
xchg
inc
mov
outsl
push
sub
inc
push
and
jb
jo
fsts
push
inc
xor
jae
inc
xchg
jno
pop
fadd
mov
ret
inc
addr16
gs
adc
enter
outsb
xor
inc
inc
inc
pop
pop
dec
inc
pop
fwait
aaa
push
adc
sbb
inc
insl
xor
test
xor
inc
or
dec
aas
ss
and
ficompl
inc
shll
inc
xchg
jbe
test
or
inc
xchg
bound
xor
mov
pop
sub
or
push
or
inc
pop
mov
inc
or
aam
sbb
mov
leave
adc
flds
cmpsb
sbb
and
cmp
dec
aas
imul
sbb
inc
or
jne
inc
dec
addr16
xchg
xor
lods
fs
mov
inc
xor
inc
mov
jne
fcoms
xor
push
pop
add
cmp
aad
fincstp
roll
ja
cwtl
insl
jo
fidivl
mov
adc
and
pop
ss
lret
pop
ja
stos
out
fldt
mov
push
je
popa
push
addr16
gs
push
icebp
addr16
push
sub
jne
adc
jo
adc
sbb
push
out
punpckldq
jb
insl
insb
ja
arpl
stos
pop
adc
sbb
dec
outsb
push
addr16
insl
popa
out
cmp
jb
jae
sti
fsubrl
popf
pop
rcrl
or
je
imul
arpl
insl
outsl
fs
fdivl
pop
jae
jo
je
jo
inc
xor
arpl
mov
and
outsb
sbb
pop
cmp
push
mov
inc
js
inc
or
and
push
insl
test
data16
dec
addl
outsl
push
jno
xor
push
stos
and
mov
sti
fwait
mov
push
xchg
mov
in
push
mov
out
add
lock
dec
ds
in
ret
and
jne
fs
adc
in
clc
add
inc
push
dec
inc
xor
and
fs
cmp
bound
data16
pop
push
and
xor
mov
or
sub
jb
add
xor
dec
sub
xchg
sti
mull
and
jg
pop
enter
xchg
ljmp
cmpsl
jle
outsl
ja
push
outsl
add
xchg
add
and
dec
dec
fwait
loopne
loopne
mov
add
loop
dec
or
loop
push
adc
or
add
push
lods
smsw
in
fwait
cmp
adc
add
add
lcall
rorb
adc
dec
pop
xchg
insb
add
adc
push
xchg
cs
outsl
add
aaa
pusha
jb,pn
call
div
pop
inc
mov
add
dec
pusha
sbb
or
dec
cs
shl
xchg
add
mov
add
inc
jg
sahf
xchg
and
ret
add
orb
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
