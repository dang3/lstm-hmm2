je
add
inc
add
je
je
outsl
add
inc
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
dec
add
insb
add
add
je
add
dec
add
popa
add
je
imul
push
add
je
insb
add
push
add
js
je
add
inc
add
je
je
outsl
add
push
add
js
je
add
add
inc
add
popa
add
push
add
js
je
add
add
inc
add
je
je
outsl
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
inc
add
arpl
add
add
add
imul
add
je
push
add
js
je
add
dec
add
insb
add
add
je
add
inc
add
jo
push
add
jb
imul
add
popa
add
add
add
add
outsb
add
arpl
je
imul
inc
add
jb
add
jb
add
add
inc
add
je
imul
inc
add
jb
add
jb
add
add
push
add
je
insb
add
push
add
js
je
add
push
add
outsb
add
add
push
add
js
je
add
add
dec
add
outsb
add
push
add
js
je
add
add
push
add
outsb
add
add
inc
add
popa
add
add
add
imul
outsl
add
add
add
dec
add
outsb
add
add
add
dec
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
je
imul
push
add
je
insb
add
add
inc
add
arpl
imul
add
outsl
add
outsb
add
add
add
push
lds
neg
pop
pop
jl
sbb
push
les
pop
add
add
add
add
or
add
out
add
loope
pop
add
cmp
lahf
add
pop
add
add
add
sub
push
add
mov
add
add
add
mov
add
add
jno
sub
cmp
push
add
add
and
push
add
test
add
or
add
add
push
add
add
add
addl
jno
and
push
add
add
add
add
add
push
add
flds
pop
add
add
add
icebp
add
add
flds
pop
add
add
add
add
push
add
add
add
push
cmp
lea
sub
add
add
and
flds
pop
add
into
add
add
or
add
flds
sbb
add
add
ret
add
add
add
add
add
aam
and
push
add
mov
add
sub
or
cmp
add
add
and
sub
add
add
add
add
add
add
add
or
pop
add
add
add
icebp
add
pop
add
adc
mov
and
mov
add
jno
or
add
out
add
add
add
add
add
add
push
add
jo
cmp
add
dec
add
add
mov
push
add
add
add
dec
add
nop
add
xlat
add
mov
add
ss
add
add
jno
jnp
dec
add
sub
imul
add
mov
add
add
pop
add
in
add
add
add
addr16
add
add
add
add
push
add
add
add
add
add
add
add
add
add
lods
add
add
add
or
add
add
add
add
sub
jae
mov
add
add
add
add
add
add
push
add
sub
or
lea
filds
pusha
add
add
add
jne
push
add
sub
sub
add
add
add
cmp
add
add
add
add
add
add
add
add
jl
dec
add
add
add
add
add
mov
adc
bound
pop
add
add
push
add
add
add
add
dec
add
add
xchg
add
add
fiaddl
add
add
add
add
add
add
mov
out
add
add
add
add
insb
add
add
add
add
pop
add
xor
test
add
add
add
add
push
add
add
adc
jo
sub
cmp
add
in
add
add
add
add
add
add
push
add
add
add
add
test
add
test
add
sub
dec
add
add
sub
loope
add
add
cld
add
add
dec
add
add
add
add
add
mov
add
add
add
add
pop
add
add
add
add
inc
add
lea
push
add
add
add
add
add
add
cmp
add
add
data16
mov
mov
mov
stc
daa
jns
or
es
mov
out
and
jo
cmpl
aaa
mov
jge
test
cld
add
arpl
clc
jnp
fnstsw
sbb
mov
sub
pop
repnz
enter
scas
push
mov
out
xor
lahf
and
out
aaa
dec
mov
test
scas
jns
inc
ffreep
mov
ds
pop
pop
push
cltd
mov
test
dec
iret
out
xor
dec
xorl
data16
out
test
inc
ds
jno
xchg
ss
pop
mov
xor
pop
gs
xor
push
jecxz
inc
xor
sub
cmp
out
lret
test
fiaddl
cmpsl
je
mov
mov
scas
mov
sbb
repz
fadd
dec
aad
fsqrt
pop
and
gs
xchg
mov
jbe
push
pop
lock
in
and
ret
sbbl
popf
cmpsl
inc
mov
jae
sub
jb
imul
fwait
arpl
dec
inc
xchg
xor
cmp
jne
loop
adc
mov
mov
sbb
mov
jns
cltd
fadds
aas
stos
cld
lahf
mov
jno
popa
pop
fsubrs
xor
loop
movsb
xor
add
mov
out
xor
pushf
negb
mov
js
mov
pop
aaa
mov
loop
int3
xchg
int3
cmpl
cli
stos
or
scas
and
pop
or
sarl
out
or
ds
fwait
push
int3
stc
push
leave
adcl
add
adcl
dec
arpl
sub
dec
enter
cmp
test
test
xchg
pop
mov
mov
add
jnp
jg
mov
dec
arpl
push
inc
outsl
aas
ret
popf
cmpsl
repz
jl
xchg
mov
cli
call
fwait
popf
jecxz
cmp
cwtl
push
out
nop
mov
sub
out
sarl
cmp
xchg
adc
add
mov
pmuludq
xchg
pusha
mov
rclb
mov
jp
ret
push
fstpt
jno
je
hlt
and
sbb
xor
mov
cmp
push
fmul
jle
aas
sub
call
adc
mov
mov
jo
sub
testl
shlb
and
aaa
sbb
lea
sbb
insl
test
imul
jae
hlt
popa
stos
dec
dec
mov
sahf
in
jl
arpl
ret
insb
jge
sti
cmp
pop
aas
rclb
jbe
mov
loop
mov
ret
pop
cs
cmp
add
add
add
add
add
add
add
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
push
mov
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
call
call
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
pushl
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
cmc
pop
in
aad
lds
aad
lock
sub
xchg
gs
push
cld
inc
in
xor
mov
in
aad
lds
movsl
or
cmp
push
jne
gs
and
inc
in
xor
mov
in
aad
lds
movsl
or
cmp
sub
fsubl
mov
pop
enter
shrb
mov
adc
insb
cmc
cmp
or
mov
cmpsl
mov
mov
xchg
mov
aaa
inc
repz
pop
les
and
lahf
sbb
mov
test
xor
jmp
xor
mov
outsb
inc
sbb
adc
mov
iret
imul
cmovno
mov
mov
in
mov
mov
in
shlb
jne
fdivrs
or
pushf
dec
jb
mov
lods
or
xchg
sbb
sub
loope
xchg
scas
test
cltd
addb
call
cmc
mov
ffree
xchg
insb
and
les
push
imul
pushf
and
adc
pop
in
aad
lds
movsl
or
cmp
sub
fsubl
push
cld
inc
in
xor
mov
mov
fnstcw
gs
js
movsl
popa
int
cltd
sub
push
lds
idivb
xchg
sub
jo
inc
xchg
push
test
xchg
addr16
scas
add
addr16
mov
xor
sub
fsubl
push
cld
inc
in
xor
mov
in
aad
lds
movsl
or
cmp
sub
fsubl
push
cld
inc
in
xor
mov
inc
and
xchg
loope
outsl
push
cmpsl
inc
clc
cmp
mov
scas
xor
jae
fcomip
sub
cli
cld
cmc
sub
sbb
inc
gs
mov
inc
inc
pushf
or
jb
add
xor
ljmp
xchg
aad
rcl
adc
outsl
jb
xlat
cmp
xchg
stos
sbb
pop
adc
aas
repnz
jno
dec
or
test
or
sub
sub
fbld
mov
out
dec
das
and
cltd
sub
add
nop
jmp
cmp
push
add
jne
mov
or
sub
mov
jp
sbb
add
shl
iret
inc
xchg
sub
mov
and
outsb
lahf
lret
adc
jbe
lret
push
leave
test
jne
rolb
xor
in
cmc
cwtl
stos
fs
xchg
mov
into
cmp
pop
sbb
dec
bnd
sub
push
stos
pop
icebp
movsl
xchg
int3
sub
and
je
push
push
inc
sbb
rorb
repnz
adc
fadds
mov
sbb
pop
mov
jb
fcmovnu
adc
pushf
fisttps
dec
xchg
std
and
xor
mov
lea
dec
xchg
jo
adc
dec
push
push
mov
jecxz
std
lods
ret
ret
push
mov
popf
fwait
cmpsl
mov
inc
js
enter
xchg
mov
out
cmpsb
movsl
mov
mov
xchg
fidivrl
out
jmp
aad
push
lahf
lret
in
jae
add
leave
sub
je
mov
adc
inc
pop
fnstsw
ja
dec
xchg
bound
xor
sbbb
jbe
es
clc
bound
insl
sub
sub
push
mov
adc
out
and
out
mov
fwait
cmp
jno
lret
push
shrl
push
int3
aad
insl
mov
mov
fst
ss
negl
aas
aad
adc
pushf
sti
cs
sti
pop
popf
sahf
scas
push
mov
xchg
pop
outsb
sub
adc
mov
je
mov
repz
and
mov
je
enter
or
test
ficomps
mov
sbb
lret
addr16
fwait
push
pop
push
pop
out
fsubrs
add
mov
lret
fimull
dec
mov
sbb
or
stc
jg
sub
test
mov
or
movsb
sub
daa
fcompl
and
stc
leave
stos
jnp
stc
outsl
cmp
imul
lea
mov
xchg
and
negb
xchg
cmp
xor
add
xchg
jmp
mov
aad
push
or
das
xor
jns
add
jl
mov
in
aaa
push
sbbb
loopne
stos
scas
lahf
js
test
pop
or
lods
int3
icebp
in
add
jp
data16
ljmp
ror
mov
inc
stc
insl
xor
mov
pop
mov
call
lahf
dec
sti
call
cmpsl
jnp
repnz
clc
add
inc
and
rcll
pushf
shll
fnstcw
test
add
arpl
call
cmp
rorl
inc
mov
int
xor
call
popa
loop
mov
fbld
shrb
jnp
pop
mov
cs
pushf
clc
sub
cwtl
mov
sbb
cmpsb
and
cmp
add
push
mov
mov
inc
or
mov
cs
icebp
sbb
in
xor
xor
repz
scas
mov
cmp
icebp
jp
outsl
mov
xorl
arpl
outsb
and
sub
ljmp
shl
push
mov
stos
sub
jnp
mov
call
sti
in
shrl
adc
stc
mov
in
or
into
and
out
and
sbb
or
test
mov
mov
fldt
lea
or
popa
in
inc
add
push
sub
fmull
xchg
mov
sarl
xchg
adc
adc
lds
repz
int
mov
cmp
loope
xor
mov
pop
xor
shlb
jmp
xor
or
add
mov
and
mov
aaa
ljmp
jmp
push
and
sub
bnd
test
mov
lret
inc
shlb
js
dec
arpl
jb
sub
mov
cmp
sbb
add
lods
mov
sbb
push
sub
pop
lahf
stc
mov
mov
decl
scas
sbb
jbe
es
arpl
movsl
nop
frstpm(287
leave
adcb
shrb
cmp
adc
loop
jecxz
mov
mov
sti
scas
inc
jne
xor
fxch
stc
sbb
dec
jbe
ror
test
mov
dec
lret
movsb
xorl
xchg
sbb
mov
movsb
push
inc
pop
int3
call
push
jge
movsb
push
out
lods
scas
in
test
icebp
mov
movsb
cld
dec
lret
aam
jae
out
mov
sbbl
and
push
push
inc
xchg
pop
mov
jns
imull
addr16
pop
add
mov
rcll
pop
mov
dec
fimuls
mov
cmp
dec
pusha
lcall
addr16
sbb
popa
data16
mov
cs
cmp
shlb
inc
mov
pop
imul
in
test
les
xlat
fidivrl
or
inc
call
xchg
repz
xchg
js
sbb
jbe
call
pop
adc
sub
les
xor
int3
out
cli
and
add
imul
out
aam
mov
xlat
pop
insb
arpl
jnp
mov
jbe
lret
and
cmp
insl
rorl
lahf
sub
mov
nop
das
adc
add
or
mov
mov
sti
aad
aad
cmpsb
mov
xor
adc
sub
xchg
sbb
adc
add
pop
xchg
lds
fisubrs
lret
loopne
lods
movnti
sbbl
and
bound
xchg
notl
dec
int3
push
and
inc
bound
outsl
icebp
nop
pop
jo
aad
mov
fadds
mov
and
mov
lea
lret
aad
cmp
push
xor
jl
pop
jb
pop
add
leave
incb
xchg
mov
cmp
pop
xor
sar
jnp
test
mov
leave
add
sub
or
or
xor
aas
adc
cmp
mull
jl
lahf
lds
bnd
fdivr
cmpsl
pop
sub
mov
jge
cmp
dec
inc
popl
xchg
inc
pop
inc
aaa
sbb
mov
out
ja
sub
mov
int
mov
out
mov
or
sub
dec
ss
rcll
jg
and
or
sbb
jecxz
movsb
in
mov
insb
push
inc
inc
insb
xchg
cmpsb
testl
xor
andl
in
pop
cmc
mov
xchg
mov
fimuls
xchg
sbb
out
inc
and
mov
xorl
and
cmp
and
jo
aam
ljmp
cmc
sti
push
leave
xchg
sub
fistl
nop
fnstenv
add
add
lods
sbb
add
sbb
mov
sub
rcll
adc
xor
add
arpl
sub
add
mov
inc
inc
xchg
cmp
arpl
mov
xchg
mov
sub
push
repz
inc
sub
flds
rcll
jns
out
cs
jnp
pop
xor
out
mov
push
and
jl
mov
pop
push
or
shrb
in
outsl
inc
jb
scas
insl
sub
cmp
test
fxch
xor
test
lds
dec
mov
jns
daa
push
test
add
dec
adc
imul
out
leave
pop
cmp
cmp
out
push
cld
xor
push
mov
push
push
aas
mov
push
mov
in
xchg
stc
xor
aam
and
xorl
in
xchg
data16
jns
daa
pop
lea
push
daa
push
insb
out
cmc
lods
mov
xor
pop
cmp
enter
imul
add
ss
insl
jno
gs
mov
xchg
add
pusha
push
rorl
cmp
adc
enter
inc
xor
lret
mov
movsb
dec
and
add
push
xor
addr16
lods
mov
in
mov
sbb
stc
fadds
inc
or
sti
add
test
dec
jmp
popf
std
cltd
shlb
sbb
rorb
mov
in
jge
xchg
ljmp
std
mov
pop
lock
jg
cli
ret
push
popf
nop
jp
andl
push
and
sub
add
fiadds
pop
sub
clc
addr16
loopne
rcl
jns
addb
hlt
push
add
jmp
cmp
dec
sub
jae
cli
std
xor
es
movsl
cld
mov
and
cmp
adc
push
push
or
mov
add
mov
sub
dec
xchg
inc
and
mov
inc
dec
xchg
add
sbb
mov
mov
inc
xlat
and
insl
cmpsb
popa
fs
insb
push
cwtl
pop
movsl
loope
in
adc
xchg
stos
sahf
movsl
es
jmp
sahf
inc
xchg
jnp
scas
enter
mov
lea
mov
in
and
icebp
je
inc
subl
es
sbb
xor
loop
pushw
cmpsl
dec
and
mov
push
icebp
inc
pop
jp
lret
xchg
mov
xchg
ja
pop
add
and
in
sbb
pop
cltd
mov
mov
mov
mov
movb
sub
jge
xor
repz
test
mov
lods
cmp
mov
arpl
sahf
dec
xchg
lds
sbb
stc
push
and
aas
mov
mov
pop
imul
ret
pop
mov
stos
pop
test
push
push
ficoml
sbb
cmpsb
vcvtps2dq
sbb
aas
mov
fwait
mov
es
push
sbb
stos
sbb
jl
xor
xorl
pop
mov
add
icebp
imul
fldt
sub
inc
sbbl
test
mov
jbe
push
sbb
call
out
jg
sbb
cld
push
pop
data16
int3
mov
ficoml
sbb
sub
mov
pop
cli
enter
movsl
and
cs
ret
mov
inc
int3
cwtl
mov
lods
mov
jle
mov
leave
jg
xor
fldcw
movsb
sbb
dec
popa
ret
mov
adc
mov
arpl
ja
adc
jge
mov
das
push
or
or
dec
ds
xchg
sti
aaa
js
pop
int3
jns
cltd
loope
dec
mov
enter
shl
les
lods
mov
call
sub
mov
in
dec
push
fimuls
add
mov
xor
cmc
jno
rcl
sub
repnz
rcrb
addl
add
js
pop
push
fmul
jae
insl
jmp
dec
pop
outsl
sub
adc
xor
dec
add
push
faddp
ljmp
cmp
push
test
add
pop
lret
mov
xchg
sti
inc
gs
jmp
cmpsl
out
addr16
inc
movsb
inc
mov
ds
sub
pop
popa
xor
jmp
mov
test
push
push
xchg
xor
xchg
popa
mov
int
addr16
ffreep
rorb
test
adc
and
ds
fisttpll
and
and
push
push
lods
pop
out
cmpsl
ljmp
std
js
mov
push
mov
cmp
push
imul
add
addb
jb
leave
outsb
pop
add
mov
lods
xor
out
push
lods
outsl
icebp
xchg
mov
or
jg
push
je
add
add
lock
scas
les
cmp
lcall
cmp
sahf
shlb
outsb
imulb
lret
scas
jmp
jl
jo
outsl
xchg
aam
fs
cmp
jns
in
fucomip
mov
data16
popa
shr
sbb
lcall
int
jp
in
fiadds
subl
bound
cmp
inc
inc
inc
pop
push
jl
mov
filds
xchg
or
loop
mov
mov
push
imul
adc
lods
sbb
dec
les
imul
fstpl
mov
lea
dec
ret
imul
cmp
nop
iret
aaa
mov
aas
outsl
or
xor
outsb
and
dec
mov
mov
push
inc
cmpsl
jp
popf
popa
push
and
jb
jge
stos
sbb
movsl
dec
sbb
push
and
pop
pusha
jge
inc
enter
sub
push
pop
sbbb
jns
hlt
jmp
imul
add
mov
inc
add
lock
lret
mov
cmp
arpl
sbbb
addr16
cmp
leave
outsb
sbb
movsl
cmc
push
mov
test
sbb
loopne
push
adc
lret
test
outsb
pop
daa
mov
imul
mov
mov
ljmp
cmpsb
loopne
and
jg
inc
popa
sub
je
dec
cld
mov
sbb
fwait
ret
cli
jp
mov
push
xchg
jmp
ja
pop
mov
mov
roll
inc
lods
pop
aad
sbb
dec
pop
lds
pop
int3
ss
inc
mov
push
je
cmp
out
sbb
mov
push
lods
cwtl
push
xchg
cli
idivl
mov
jb
pop
nop
jle
jl
ffreep
insb
and
xor
push
jo
stos
and
pop
loopne
add
cmp
dec
out
push
xchg
dec
hlt
cltd
xor
cli
es
sub
dec
add
cmp
fistl
fimuls
popf
aas
mov
jle
cmc
xchg
das
adc
xor
pop
arpl
ja
dec
cmp
stc
aad
xchg
inc
inc
and
dec
sahf
push
aas
scas
jg
ficoml
test
imul
les
push
imul
scas
xor
or
loopne
hlt
jle
dec
mov
pusha
in
ds
jno
popf
cmpsb
mov
cwtl
divl
sub
bound
xchg
push
gs
outsl
stos
in
lods
mov
cmpl
stos
adc
pop
sbb
loope
outsl
inc
dec
int3
add
out
in
push
fstpt
xor
push
jnp
or
test
shlb
mov
shr
push
xchg
hlt
sbb
lea
mov
lock
add
fwait
xor
inc
mov
push
add
push
rorl
jecxz
out
icebp
pusha
or
mov
adc
adc
sbb
fwait
insb
in
push
lret
jle
sti
stos
loop
sbb
mov
inc
dec
and
inc
push
push
xchg
in
test
mov
ret
push
jnp
out
pop
xchg
aad
cmp
or
push
lret
bound
daa
pop
mov
out
mov
movb
xchg
push
add
fmul
gs
inc
adc
ret
out
lock
inc
je
cwtl
mov
jp
ja
xchg
repnz
cwtl
adc
xlat
ret
outsb
add
push
mov
je
and
popf
jbe
mov
cmp
mov
sti
or
cmp
outsb
iret
movsl
clc
lods
das
pop
out
or
add
test
mov
adc
mov
mov
inc
mov
dec
je
mov
jl
mov
fstpl
scas
adc
jae
arpl
inc
or
xchg
dec
cltd
adc
aas
ret
rolb
call
insb
jmp
cmpsb
push
fbld
or
jg
mov
std
adc
add
cli
daa
dec
sub
pushf
jbe
add
jecxz
int3
mov
orb
scas
jecxz
inc
ret
sub
imul
dec
jecxz
pop
bound
leave
adc
scas
lods
arpl
adc
das
sbb
das
lea
sbb
cmp
mov
outsl
mov
adc
sub
in
mov
xchg
in
fisttpll
sbb
or
cmpl
fucomi
inc
rorl
or
sub
imul
mov
mov
sub
push
sahf
enter
fs
dec
mov
sbb
int
mov
dec
outsl
or
addr16
aas
popa
mul
inc
xchg
mov
ja
mov
js
sbb
lcall
adc
xchg
push
aaa
push
jo
or
decb
shl
dec
inc
dec
in
js
cmpsl
stc
or
jmp
arpl
out
add
ret
mov
push
pushf
mov
push
repz
push
mov
shr
pop
xlat
add
clc
jnp
rcrl
into
or
pop
sahf
outsl
dec
call
and
outsb
mov
mov
mov
xchg
sub
dec
cmpsb
outsb
aaa
xchg
jnp
pop
lret
hlt
jbe
jecxz
mov
pop
arpl
xchg
jg
leavew
pop
cmp
test
sbb
xchg
adc
mov
out
lods
mov
dec
ljmp
adc
fistps
dec
add
out
call
cld
jno
aas
lret
push
mov
add
loope
fwait
adc
jmp
repz
aam
bound
repz
sub
scas
mov
push
jae
xor
sub
or
xor
sti
pop
arpl
push
xchg
arpl
or
push
xchg
fisubrl
or
rclb
ret
ja
clc
jecxz
ror
scas
sbb
movsl
inc
push
js
dec
or
fimull
mov
loopne
cmc
out
cmp
sbb
and
cmp
adcb
and
por
clc
mov
add
incb
nop
icebp
and
cwtl
orl
lods
lock
imul
aaa
aas
cmp
mov
lds
adc
sub
fistps
mov
stc
sahf
jb
data16
loopne
jge
ja
jno
rorb
retw
mov
sbb
imul
adc
adc
jns
xchg
dec
sub
jbe
push
sti
popa
mov
push
push
pop
ljmp
mov
stos
lret
repnz
dec
push
jl
stc
adc
jle
fcompl
addr16
jl
mov
and
sub
push
push
and
sbb
adc
mov
prefetchwt1
and
loop
mov
jl
insl
mov
je
aad
in
bound
and
shll
sbb
mull
xchg
lods
jno
in
je
lahf
hlt
and
ljmp
xchg
mov
sbb
xor
sub
cmp
mov
sbb
stos
pusha
mov
mov
enter
or
cmp
pop
out
xchg
aam
loop
ss
std
aam
rcll
xor
adc
in
pop
xor
repz
lds
pop
insl
dec
mov
add
enter
iret
fmuls
test
arpl
or
inc
aam
lods
sbb
fistpll
mov
mov
pop
arpl
mov
mov
enter
push
cmp
xchg
fisttps
xor
enter
imul
das
xchg
mov
xor
sub
cs
stc
jecxz
inc
cmp
inc
out
inc
iret
js
xor
outsb
mov
fadds
mov
xor
mov
cwtl
sbb
mov
mov
fldenv
adc
int
jge
dec
cmp
mov
jge
orb
dec
js
jecxz
sahf
sti
mov
arpl
leave
das
mov
scas
inc
and
cmp
in
lds
mov
imul
insb
ret
push
push
pusha
cmc
mov
aas
lods
mov
mov
lcall
mov
push
sbb
sbb
hlt
push
pop
cs
jns
sbb
pop
cmpsb
cmp
jno
shrb
mov
cmp
mov
loope
jns
jge
pop
mov
jbe
mov
sub
and
cmpb
sti
rclb
jge
insb
xorb
mov
or
jl
add
ljmp
pop
aaa
cmp
push
lret
xor
mov
mov
movb
inc
jmp
rcr
pop
dec
mov
pop
aam
inc
call
inc
adc
xor
inc
sub
xlat
dec
dec
mov
mov
out
dec
flds
lret
xor
icebp
inc
mov
adc
xchg
pop
dec
xor
int3
outsl
fmull
sbb
cmc
bound
outsb
sti
push
jno
or
lahf
ss
das
les
jmp
xchg
lret
jno
movsl
push
push
jae
cld
sbb
push
sbb
subl
lods
mov
movsb
fcmovnu
push
sub
aas
dec
mov
sbb
xchg
icebp
fs
pop
cs
mov
fmull
movsb
aas
adc
fcompl
jo
outsl
daa
sbb
inc
in
and
cmc
xor
pop
cmpsl
or
pmullw
fs
mov
adc
jecxz
sbb
mov
xchg
xchg
in
xchg
arpl
testl
cmpb
scas
sub
test
lret
adcl
jne
outsl
inc
push
dec
aad
imul
mov
mov
iret
inc
sbb
cmp
fnstenv
lcall
sub
jle
xor
mov
mulb
jae
ds
pop
lds
or
fsubr
mov
or
lock
pop
push
sub
ljmp
mov
sbb
stc
mov
shlb
sbb
sub
xor
clc
lcall
test
mov
pop
clc
jne
scas
and
pushf
fcmovnb
mov
into
pop
cmp
cmp
xchg
jno
repz
and
mov
mov
mov
xor
ja
fisubrs
dec
ret
cmp
jns
rcrb
insl
xchg
lcall
cwtl
ja
dec
scas
dec
fwait
in
pushf
xchg
xor
pop
pop
sbb
xor
pop
inc
dec
cmp
mov
aas
xchg
pop
scas
fwait
jae
stos
push
xchg
mov
inc
jo
mov
clc
or
push
dec
out
jecxz
imul
adc
icebp
and
out
jbe
inc
inc
mov
rcll
sub
jp
loopne
or
cli
lock
ja
xchg
std
jns
das
pop
stc
popa
add
out
icebp
dec
lods
sub
and
into
pop
mov
sub
roll
dec
int
pop
jge
sub
mov
popf
pushf
lret
push
xchg
jno
call
call
fbld
fcoml
outsb
mov
xchg
jnp
mov
mov
aas
lods
adc
dec
and
or
outsl
xor
mov
pop
and
inc
adc
sahf
or
xor
fwait
sbb
pop
cmc
stos
xor
cmp
xchg
gs
or
sub
pop
sub
scas
test
push
and
out
imul
sbb
xchg
fwait
inc
fmul
iret
adc
movsb
cli
into
or
adc
repz
hlt
xor
rcrl
out
subl
jp
insl
jns
sub
sahf
dec
fnstsw
mov
movsl
or
cmp
sub
fsubl
push
cld
inc
in
xor
mov
in
aad
lds
movsl
or
cmp
sub
fsubl
push
cld
inc
in
xor
mov
in
aad
lds
movsl
or
cmp
sub
fsubl
push
cld
inc
in
xor
mov
in
aad
lds
movsl
or
cmp
sub
fsubl
cld
inc
fwait
inc
adc
jae
inc
cli
push
int3
int3
int3
int3
int3
sahf
aaa
aam
in
hlt
js
inc
out
test
fstpt
pushw
add
push
sbb
xor
ror
aam
aam
hlt
clc
test
mov
dec
dec
push
js
push
adc
cmp
pop
int
cld
inc
in
cli
popf
mov
movsb
mov
xchg
pop
cmp
aaa
add
sub
jno
pop
pop
cmp
lcall
mov
pusha
mov
stos
cwtl
cmp
call
les
leave
in
in
inc
mov
push
call
stos
or
or
enter
dec
leave
aam
lods
repnz
lret
mov
inc
lds
cmc
sti
sub
mov
repz
enter
inc
mov
push
mov
jo
cmp
fs
sub
rcr
and
sub
mov
lods
push
fnsave
stos
dec
jno
je
scas
pop
adc
and
aam
stos
stc
jns
cmp
pop
sbb
inc
mov
xchg
jne
les
add
les
xor
add
aam
in
jecxz
xchg
mov
cmp
dec
sahf
jl
insl
xor
or
and
sub
fadds
cld
stc
mull
push
push
sbb
push
imul
orl
icebp
aam
sub
add
popa
pop
addr16
push
dec
xor
lods
sahf
out
cmpl
mov
inc
dec
push
pop
fs
adc
and
xor
enter
call
xchg
cwtl
movsb
test
mov
fs
adc
and
xor
enter
dec
pushf
aam
adc
fs
icebp
pop
xor
jg
cld
into
insl
lods
inc
pop
dec
pop
fdivl
mov
stos
cmp
dec
jnp
mov
out
add
mov
in
jns
nop
push
sbb
sbb
sub
or
mov
mov
data16
sub
ficoms
lcall
xchg
call
jbe
xor
addr16
sbb
jo
into
hlt
adc
cmpsb
dec
cmp
adc
adc
jnp
mov
xchg
adc
enter
cmp
das
cmp
pop
mov
test
stos
jbe
ret
xchg
jmp
sbb
je
adc
fwait
push
fwait
in
xchg
mov
sbb
sbb
loopne
jns
mov
and
dec
loope
add
xor
jne
aas
xchg
cmc
out
xor
jmp
pusha
jmp
test
mov
pop
scas
loope
adc
cmp
mov
rcr
dec
lret
sbbl
fs
pop
or
aad
push
inc
mov
shlb
mov
ss
adc
les
out
loopne
adc
jecxz
cmpsb
addl
xchg
cli
pop
lahf
jle
mov
sub
adc
outsb
pop
in
jbe
jb
mov
imul
or
pop
xchg
and
in
test
in
out
inc
out
mov
jge
cltd
fwait
aam
insl
pop
lea
stos
dec
lret
sbb
nop
jmp
mov
push
push
ja
adc
cs
jbe
lods
outsb
movsb
int3
adc
sbb
pop
mov
lods
scas
or
push
cmpsl
int
fisttpl
test
lock
and
adc
mov
repnz
imul
inc
push
in
stc
dec
pop
mov
leave
dec
mov
push
mov
sub
mov
cmpsl
and
lea
lock
mov
sub
jnp
xchg
or
mov
mov
mov
jne
cmp
push
inc
sbb
sbb
push
pop
out
outsb
push
lock
test
mov
add
sbb
cmp
dec
lds
lret
test
pusha
pushf
jp
adc
push
call
mov
adc
cmpb
jp
callw
mov
mov
cmp
clc
xchg
or
mov
std
ffreep
mov
repnz
lods
adc
xor
cli
inc
fistpll
negb
sbb
lods
jnp
mulb
sub
fprem
div
jle
scas
cld
fisubs
push
jmp
pop
push
popa
push
or
pop
dec
dec
mov
sub
mov
xor
es
xchg
inc
test
stos
mov
testl
bound
push
mov
scas
pop
outsb
mov
inc
inc
mov
push
add
test
pop
out
outsb
sbb
aas
adc
xchg
andb
add
dec
xorps
and
arpl
mov
outsl
pop
adc
push
mov
dec
and
je
pop
mov
mov
pusha
rorb
divb
stos
fwait
jb
lods
mov
cld
stos
ja
push
arpl
les
call
insl
je
in
sbb
sbb
adc
sarb
dec
adc
popa
mov
jns
stos
jne
lret
loope
mov
outsb
cmp
adc
push
hlt
imul
mov
mov
movl
dec
xchg
cmp
mov
add
jmp
loope
sub
pop
andl
sub
and
pop
xor
xlat
mov
leave
push
insb
lock
ret
mov
test
imull
in
mov
stos
out
dec
dec
scas
push
push
jle
rclb
pop
bound
insl
subb
sbb
pop
sub
mov
cmp
adc
pop
cmc
cmpsl
push
push
sbb
jne
mov
movsb
scas
push
pop
subb
cmp
and
push
mov
mov
push
jmp
mov
out
fnstcw
jge
out
jmp
fcmovnb
jl
xchg
aas
inc
mov
jo
sbb
pop
shll
push
pushf
mov
jmp
pop
lds
xchg
mov
outsl
push
pop
jae
cmp
sub
loopne
lods
pushf
dec
jge
cmc
jns,pn
push
jae
stos
les
sbb
cmp
or
in
insb
jg
bound
stos
stos
jg
cmp
xor
in
movsl
pop
dec
andl
lods
in
xchg
mov
sub
sbb
xchg
push
pop
das
repnz
adc
pop
daa
js
in
push
or
jb
inc
mov
or
orl
sti
ficompl
js
xchg
sbbb
pop
lcall
out
es
mov
mov
cs
pushf
xchg
add
push
daa
mov
mov
adc
push
dec
dec
push
push
test
repnz
adc
mov
ficoms
mov
sub
mov
xchg
rol
lods
int
lock
rol
mov
fidivs
or
add
imul
cwtl
jl
shll
call
clc
push
fsubrl
dec
out
push
add
xor
jno
mov
ja
fstpt
dec
lods
cli
and
xchg
loop
lods
mov
dec
mov
adc
jle
aad
pusha
lret
addr16
ret
in
popf
xor
in
sbb
int
out
and
dec
iret
push
or
stos
neg
xor
outsb
mov
repz
mov
cmp
insl
lcall
push
call
lret
imul
pop
scas
popa
inc
mov
mov
push
stc
pop
out
les
imul
lcall
popf
xchg
pop
loopne
fidivrl
xor
push
cltd
shll
push
push
fcomp
lcall
out
jecxz
add
lret
mov
adc
xchg
fmuls
int
xor
rdpmc
pop
insl
sbb
mov
movsl
cld
or
dec
out
aas
into
fcoml
inc
cmp
mov
jns
loop
fsts
rcll
jle
movsb
rcll
inc
cmp
sub
lea
pop
notl
scas
nop
mov
dec
pop
movsb
pop
iret
dec
mov
jecxz
aas
pop
xor
out
aam
lock
mov
and
push
pushf
and
rorl
sub
cmpsl
loopne
xor
shl
push
sahf
push
lcall
into
add
jle
daa
xchg
or
xchg
data16
cmc
inc
test
daa
and
cli
std
in
ja
test
sbbb
aam
xchg
dec
push
jmp
shr
mov
lret
jp
cmpsl
sub
fcmovnb
push
xchg
add
jecxz
cltd
sbb
xchg
subb
push
in
loope
pop
inc
cmpsb
shlb
jbe
dec
xor
in
pop
movl
or
mov
pop
jmp
lahf
pop
mov
add
xlat
inc
or
cmp
lahf
enter
jg
stos
fdivrp
sbb
lret
repz
inc
les
add
ret
arpl
in
sarl
je
jp
hlt
mov
orl
and
enter
adc
mov
lods
test
push
cwtl
adc
pop
pop
str
jae
in
mov
cmp
push
in
test
push
ss
dec
mov
sbb
push
addl
sub
mov
lret
cmp
mov
dec
inc
sbb
push
mov
pop
mov
push
out
stos
mov
stc
push
lock
shll
xchg
fisttps
mov
xor
cmpsl
sbb
lcall
add
push
xchg
ficoml
mov
mov
jne
shr
adc
pop
adc
leave
jb
jp
jle
rclb
cld
cmpsl
push
insb
pop
leave
xchg
jnp
mov
shlb
cmp
divl
and
icebp
adc
pop
adc
cli
mov
imul
xchg
scas
jp
inc
inc
stc
pusha
dec
sub
cmp
cmpb
sub
sub
loop
dec
xor
mov
jg
js
and
int
clc
xchg
cmp
mov
jns
xchg
aam
xchg
xchg
mov
jno
cmpsb
outsl
sbb
lret
pop
cmpsb
or
shll
cmp
lea
cs
jg
xchg
lock
add
pop
inc
mov
repnz
outsl
dec
flds
test
popf
aas
mov
jbe
xor
mov
pop
add
pusha
scas
arpl
cli
dec
xor
mov
ss
int3
mov
add
scas
push
ss
inc
mov
xor
bound
cmpsb
loope
testb
iret
inc
movsb
jle
out
sbb
dec
mov
sbb
dec
and
sbb
test
pusha
dec
ja
adc
mov
xchg
cli
push
and
push
movsl
daa
jmp
notb
outsl
lods
pop
inc
sti
inc
imul
movsl
leave
inc
cmpsl
divb
mov
lret
outsl
lea
stos
pop
or
inc
stos
add
insl
inc
jmp
repnz
add
cltd
loop
fldcw
adcb
lret
adc
aad
fwait
and
inc
mov
lret
inc
sub
mov
add
mov
shrb
fs
aam
lods
sub
jnp
int
ret
pop
pop
test
or
pop
dec
push
fisubs
mov
popa
movsl
movsl
mov
adc
ret
and
xor
or
sbb
addb
mov
roll
mov
shll
popa
pushf
fnsave
imul
xorb
push
enter
pop
sbb
add
pop
std
mov
out
dec
adcl
cli
pop
cwtl
or
pop
test
fimull
lret
int3
mov
mov
xor
scas
xchg
lcall
loopne
jmp
cmpsl
add
mov
mov
sub
push
lret
shlb
mov
sbb
mov
jbe
cmp
mov
mov
out
sar
inc
js
outsl
cmp
icebp
fnstenv
xchg
jg
or
js
in
int
mov
ret
add
add
sub
dec
bound
add
xchg
jne
mov
loop
sbb
or
mov
int3
adc
testl
jge
es
mov
arpl
loopne
adc
int3
stos
and
dec
arpl
push
out
and
sbb
rcr
adc
ret
insl
mov
clc
rorb
xchg
je
jns
lds
ficomps
sbb
pop
mov
das
dec
mov
stos
add
enter
sbb
mov
push
mov
imul
xor
pop
jnp
imul
sub
mov
imul
push
aas
or
fidivl
push
scas
flds
add
and
popa
in
push
lahf
repnz
mov
dec
iret
mov
pop
cwtl
sbb
mov
jae
movsb
pop
shlb
mov
xchg
sahf
gs
dec
jge
adc
sub
mov
or
push
cwtl
clc
lea
rcr
push
xchg
xor
test
cwtl
popf
test
sub
cmp
sahf
push
mov
in
test
cwtl
pop
mov
jnp
nop
les
adc
cmp
clc
roll
in
pop
rorl
jb
pop
push
iret
cmpsb
dec
adc
psubusw
push
ds
pop
pop
shrb
push
mov
fs
nop
addr16
outsl
popa
mov
xchg
insb
clc
cmp
dec
or
cmp
cmp
xchg
stos
pop
lods
mov
call
dec
pop
mov
pushf
xchg
mov
inc
loopne
lret
jo
xchg
adc
push
mov
stos
divb
or
sbb
call
pusha
icebp
loopne
add
cmp
adc
mov
movsb
jbe
leave
fsubs
sbb
es
xor
loop
mov
mov
cmp
and
aaa
test
adc
sub
jmp
scas
stos
nop
push
in
insl
ja
push
aas
aaa
push
xchg
sub
or
push
popa
jnp
in
sub
jnp
sub
jle
lock
dec
dec
dec
jnp
mov
mov
daa
shld
pop
dec
sbb
adc
xor
out
ret
xor
cmc
ja
mov
cmc
mov
pop
and
push
mov
inc
mov
scas
adc
movsl
mov
mov
call
daa
std
out
push
cmc
cmp
xlat
jnp
imul
aad
fistpll
cmp
xor
stos
pop
movsl
scas
loope
out
stos
shl
mov
jl
jl
dec
fimull
cmc
loopne
or
inc
push
push
aam
fistps
jecxz
lea
push
test
scas
repz
pop
ljmp
fisubrs
jle
call
mov
xor
mov
add
imul
dec
cmp
or
fsub
mov
aad
cli
daa
mov
jl
and
pop
aas
rolb
inc
jmp
xchg
addb
cvtps2pd
xchg
rorl
jle
cmp
lret
pop
ljmp
enter
sub
jbe
xor
arpl
orb
shl
cltd
insl
and
jnp
mov
mov
movsb
rcrl
and
xchg
scas
std
mov
sahf
mov
cmc
push
in
push
stc
gs
or
or
fcomps
test
dec
insl
mov
imulb
insb
fnsave
pop
enter
pop
sbb
cltd
mov
fidivrl
movsb
fistpl
inc
cmpsl
xor
fmuls
jmp
or
mov
inc
inc
push
std
or
add
xchg
dec
adc
dec
std
leave
aam
loopne
xor
add
lods
sbb
inc
ret
in
std
fiaddl
mov
out
idivl
in
and
dec
popa
adc
lods
or
test
or
adc
adc
fisubs
pop
mov
mov
jecxz
mov
shlb
dec
mov
adc
rcrb
imul
adc
arpl
rcl
dec
insl
icebp
or
scas
adc
mov
jo
aam
mov
bnd
push
addr16
jl
sbb
jbe
add
insl
pop
fisubrs
icebp
roll
mov
and
adc
dec
adc
pop
jae
xchg
faddl
and
mov
mov
pop
xor
mov
addr16
test
xchg
jbe
sahf
popf
sti
mov
stc
ljmp
mov
add
inc
sahf
and
sub
mul
shr
loop
lahf
xchg
cli
je
mov
mov
xchg
xor
push
mov
pop
push
call
xchg
pop
jne
mov
jo
sbb
into
and
int
adc
repz
add
stc
subl
mov
xchg
push
mov
popa
dec
movsb
incb
lock
cmp
pop
fxch
leave
xchg
adc
pop
xchg
int
aam
out
jo
xlat
scas
cmpsl
iret
xorl
test
jo
xchg
orl
test
xor
mov
std
insb
mov
lcall
xchg
jle
aas
ret
inc
inc
jne
inc
or
das
push
mov
flds
mov
scas
dec
inc
and
mov
test
xor
inc
jbe
sti
cltd
inc
in
daa
rcr
inc
push
push
js
out
inc
lock
lret
jmp
and
jl
dec
inc
xor
mov
in
pop
adc
push
lods
fcmovnb
adc
repz
popa
sub
outsb
into
and
mov
dec
fidivs
in
xor
divb
sbb
lds
sbb
sub
jno
ror
cld
jb
shr
xchg
les
mov
cmp
ret
in
inc
or
and
xchg
loopne
cmp
lret
scas
push
dec
pop
xor
icebp
mov
mov
cmc
jb
mov
pop
std
jno
push
add
xchg
xor
in
mov
es
sub
mov
add
clc
dec
out
xor
push
push
imul
test
jno
push
xchg
and
jb
mov
pop
rorl
or
scas
sub
mov
mov
addr16
fstpt
push
aaa
or
in
fdivp
ds
jp
ja
add
lods
jo
sbb
or
jbe
push
bound
insb
adc
push
mov
hlt
call
cmpsl
dec
or
pop
cwtl
mov
cmpsb
jno
jbe
jo
push
jp
cmp
push
je
ss
mov
aad
in
je
dec
fucomi
test
pop
cmp
jns
test
mov
mov
pop
sbb
mov
cmpl
mov
imul
andl
clc
shll
and
inc
cmpsb
mov
fbstp
xor
jae
aad
outsl
sub
mov
push
dec
adc
or
or
cs
cmp
sub
out
xchg
cmpsb
pop
jnp
mul
add
repz
js
decb
sbb
adc
push
decb
cpuid
call
jg
inc
fs
jbe
pushf
js
ret
das
test
jb
sub
adc
inc
int
outsb
inc
push
xchg
mov
pop
addr16
test
push
in
jp
test
inc
mov
jl
push
aam
sub
mov
mov
in
lock
stos
sub
data16
aad
adc
inc
aad
int
ja
les
hlt
and
test
popf
hlt
cmp
out
inc
mov
sub
outsb
outsb
push
push
je
cmp
mov
xor
fists
jo
push
and
leave
xchg
icebp
js
jne
mov
add
jl
add
push
mov
insl
push
fs
xchg
xchg
sbb
adc
add
cmpsb
mov
dec
add
push
stc
push
mov
and
stc
mov
shr
ret
fiadds
adc
and
adc
in
push
xor
inc
outsb
pop
xor
inc
stos
mov
sub
xchg
mov
pusha
cmpb
rorl
aas
mov
pop
adc
ja
sub
das
jne
ljmp
aad
pop
in
fwait
cmp
out
xor
pop
pop
push
xchg
cmp
push
jmp
in
pop
mov
or
sahf
hlt
push
scas
mov
out
or
fisubrl
xorb
ret
push
dec
fistps
in
cmp
popa
and
roll
rcr
lods
xchg
dec
in
movsl
je
adc
add
jbe
pop
mov
lret
push
add
test
xchg
mov
cmp
cmp
adcb
xor
sub
mov
jl
sbb
call
pop
cltd
dec
enter
and
sbb
push
insb
js
popa
pop
repz
aam
outsl
mov
mov
cmp
push
cmc
lret
sub
fistl
push
xchg
lods
clc
adc
call
push
clc
lret
pop
dec
mov
cld
out
jb
xchg
mov
xchg
add
lods
aam
pop
lods
loop
mov
jg
xor
sbb
push
jp
test
popa
lcall
cmc
xchg
jg
data16
inc
iret
pop
fs
adc
mov
cltd
add
insb
ja
into
dec
xchg
mov
pop
xor
fdivr
subl
rcll
jl
push
mov
jo
ljmp
aaa
pop
jbe
jp
test
mov
ja
mov
sub
mov
pop
sub
sub
xlat
jno
std
add
pop
mov
hlt
nop
push
in
aam
pusha
pushl
addr16
adc
loopne
dec
sub
pop
call
les
dec
pop
aas
and
adc
loopne
mov
out
in
fcom
jmp
cmp
leave
test
push
loope
adc
in
mov
test
xchg
push
clc
loope
test
add
mov
lock
dec
cmp
and
scas
std
out
ror
in
pushf
enter
xor
push
xor
mov
mov
ja
enter
mov
jne
sub
fisubrs
aad
mov
mov
push
dec
xchg
inc
aaa
or
out
stos
jecxz
je
dec
push
mov
or
mov
inc
inc
pop
mov
pop
ds
fimull
aaa
sub
outsl
aam
je
ficoml
shlb
mov
xor
rol
mov
mov
loope
loop
push
mov
outsl
xor
pop
jmp
pop
subb
insb
mov
ljmp
mov
cmovge
lock
ljmp
inc
mov
stos
inc
scas
adc
cmpsb
imul
cs
add
push
jge
inc
jnp
sub
lea
push
enter
inc
xchg
fildl
push
jne
pshufw
lret
and
push
or
pop
lods
fwait
out
mov
jb
jmp
jle
push
cmpsb
aad
cwtl
std
pop
sub
in
js
pop
xor
mov
in
xchg
lahf
roll
xor
testb
lock
jle
jnp
test
sbb
or
pop
adc
cmp
pop
pop
mov
js
jmp
out
imul
sub
adc
mov
mov
adc
aam
movsl
xchg
stc
jge
mov
cld
mov
popa
std
cld
and
xchg
mov
xor
jne
pop
mov
mov
pusha
fimuls
and
mov
test
mov
mov
cwtl
cs
sub
std
cwtl
movsb
pushf
mov
xchg
mov
dec
outsb
es
dec
sbb
flds
orb
or
add
and
jae
icebp
dec
fists
gs
pop
pop
dec
push
push
xchg
in
sub
jb
push
xlat
xlat
stos
icebp
es
mov
sahf
mov
push
hlt
pop
pop
dec
cmpsb
fsub
add
aas
sbb
or
jmp
or
test
lock
mov
inc
cmpsb
imul
pop
mov
and
mov
lods
stos
decb
int
sarb
mov
or
fsts
js
jne
dec
add
jo
es
lds
dec
xchg
roll
push
fs
lock
sbb
gs
cmpsb
in
test
adc
popa
pop
pop
cld
dec
inc
scas
jmp
lahf
movsl
and
push
cmp
sub
rclb
loopne
xor
lret
shrb
fiaddl
xlat
push
mov
push
leave
xchg
stos
push
cmp
outsb
cmp
xchg
js
cltd
inc
mov
mov
pushaw
int
sarl
int
push
adc
mov
sbb
bswap
add
aad
push
jnp
mov
dec
and
lods
cwtl
mov
and
sbb
cmp
push
mov
rclb
movsl
add
cmpsb
dec
push
aam
and
notl
icebp
in
or
aas
stos
adc
jmp
jmp
mov
sar
out
stos
outsb
fistl
flds
loopne
add
cmc
jp
mov
pop
inc
lret
jle
test
cmpsl
icebp
dec
add
cmp
xchg
std
mov
and
adc
imul
dec
js
cmpsl
test
clc
test
mov
inc
dec
push
pop
fs
adc
and
xor
enter
call
xchg
cwtl
movsb
test
mov
fs
adc
and
xor
enter
nop
hlt
clc
test
mov
inc
nop
push
pop
pusha
push
adc
and
add
fcom
call
xchg
cwtl
and
xor
mov
push
pushf
out
xlat
lret
int3
int3
int3
int3
int3
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
push
mov
push
push
push
push
movl
movl
movb
call
andl
andl
push
push
movl
movb
movl
mov
movb
call
push
push
mov
call
andl
mov
lea
movl
push
movb
movl
movb
movl
movb
movb
movl
call
pop
leave
ret
add
xor
in
jg
sub
aaa
mov
imul
pop
add
pushf
inc
in
push
cld
int3
jb
xchg
sub
cmp
add
sbb
inc
loop
loop
repnz
sbb
or
push
sub
pop
fmull
jp
jb
fwait
sub
pop
std
insl
lret
aas
mov
cmp
jge
and
inc
stc
adc
push
add
add
imul
lret
jo
mov
pop
subl
arpl
push
ja
xor
and
sarl
dec
xchg
jns
and
or
in
aad
insb
addl
mov
aad
insl
sub
or
cs
repnz
add
pushf
mov
or
push
or
dec
sbb
imul
shlb
fisttps
das
or
push
imul
shrb
pop
loop
ljmp
dec
mov
mov
pop
insb
loop
xchg
cmp
mov
or
in
inc
cld
int3
imul
mov
push
lret
push
repnz
outsb
lods
ja
inc
loopne
lock
xchg
das
mov
decb
jg
sub
xor
dec
incl
cs
and
rorl
mov
and
das
fistpll
dec
loopne
lock
jb
subb
mov
insb
sarb
repnz
add
pushf
inc
in
push
cld
int3
jb
subb
mov
insb
sarb
repnz
add
jb
mov
pop
add
lods
dec
cwtl
xor
cmp
jnp
pop
mov
xchg
add
xor
aam
xor
and
adc
xor
fistpll
sub
sbb
mov
ss
out
or
shl
xor
adc
inc
jge
jns
fs
sbb
lods
jg
in
cmp
insb
stos
xor
mov
mov
dec
movsl
cltd
adc
cmpsl
mov
loope
pop
roll
mov
inc
ret
bound
xor
shl
aas
subb
cmpsl
out
lock
jle
and
insb
jnp
xor
sbb
and
out
inc
arpl
andl
inc
addr16
es
jne
push
lcall
ror
add
adc
mov
inc
ljmp
push
cli
add
sbb
adc
xor
insb
jbe
mov
aas
out
sbb
lods
pop
mov
lret
mov
adc
jmp
mov
mov
xchg
mov
int3
adc
mov
xchg
lods
lods
dec
mov
jp
repz
inc
mov
sbbl
ret
gs
xchg
jp
adc
js
mov
popf
sbb
and
fdiv
test
inc
pop
push
xchg
mov
xchg
push
push
sub
popa
ljmp
xor
notb
nop
aam
scas
add
lcall
xchg
mov
sub
into
and
pop
pop
cmp
sahf
lret
movsl
call
xchg
jno
or
xchg
mov
imul
add
pop
addr16
cmpsl
mov
push
lods
mov
icebp
insl
xchg
mov
mov
in
cmp
xchg
jg
xor
push
cmp
lods
stos
cs
stc
dec
subl
es
xchg
inc
scas
lcall
adc
jae
cmp
test
xchg
in
mov
gs
pop
cwtl
adc
mov
cltd
jbe
out
imul
clc
popf
xlat
or
jecxz
ds
bnd
ja
push
push
loop
or
int
mov
xor
fdivrl
pop
test
in
data16
lcall
mov
outsb
jne
and
js
sbbb
loope
inc
push
mov
arpl
out
adc
out
adc
les
cmp
sbb
lret
mov
mov
and
mov
inc
cltd
mov
dec
aad
out
cwtl
xchg
rolb
or
mov
and
imul
jae
xchg
mov
repnz
pop
dec
xchg
decl
jb
jp
test
cs
jnp
pop
mov
int3
iret
dec
cwtl
push
fldcw
jmp
push
test
movsb
and
xor
xlat
dec
push
jo
or
push
ret
das
sti
scas
adcb
pusha
shll
leave
mov
xor
out
jne
iret
xchg
xchg
xchg
in
mov
cld
in
push
jmp
enter
leave
hlt
push
outsb
lcall
mov
dec
jns
mov
adc
into
dec
jge
sub
sub
mov
xchg
outsl
std
xchg
push
gs
lods
scas
adc
cs
adc
xor
outsb
inc
jae
jge
lea
pop
test
push
mov
xor
cld
std
push
sbb
mov
push
mov
adc
inc
adc
rclb
aad
mov
in
ljmp
pop
mov
sub
ss
inc
mov
pop
repnz
add
orl
sbb
scas
add
add
in
sub
mov
push
pushf
shlb
lock
aas
inc
cmp
mov
cmp
xchg
ret
fs
inc
dec
xor
xchg
mov
mov
mov
ss
popf
adc
stos
jg
xchg
xorl
fnstsw
ja
aaa
push
lahf
cmc
mov
adc
add
mov
cmp
sub
or
jmp
mov
leave
or
inc
xchg
das
cmc
fwait
xor
lods
adc
add
ficoms
jbe
cmpl
jbe
adcb
push
xchg
jmp
aam
xchg
bound
or
daa
enter
mov
mov
stos
fnstcw
loope
sub
cmpsl
jae
push
sbb
or
adc
mov
cwtl
aaa
mov
inc
inc
adc
sbb
lret
and
imul
mov
inc
rol
jl
lea
mov
jb
call
jno
nop
jo
adc
fcmovne
movsl
movsl
scas
sbbl
outsl
mov
xchg
les
in
inc
stc
in
sub
outsb
data16
loope
push
mov
push
nop
cs
es
jl
jmp
sub
cmc
mov
mov
mov
sbb
movsb
mov
jo
inc
mov
add
sub
cmpsb
sahf
fsubrs
std
mov
adc
push
inc
popa
cmp
xchg
aaa
adc
in
popl
cltd
adc
adc
push
lock
aam
es
call
jnp
jp
xchg
jo
or
jne
mov
adc
jne
mull
cmp
jle
insl
xchg
push
das
pop
gs
cmp
adc
xchg
movsb
sbb
mov
fwait
andl
jl
sbb
cmc
push
test
xchg
inc
lds
popf
scas
jecxz
imul
iret
jno
adc
xor
mov
mov
push
out
clc
loope
xor
inc
gs
sub
cmp
sub
adc
lahf
rcrl
imul
insl
or
fisttpl
sub
out
iret
and
jbe
out
mov
mov
dec
lods
outsl
xor
add
inc
mov
ljmp
mov
lods
stc
cmp
in
in
test
adc
inc
movl
pop
bound
fisubrl
ror
movb
jno
pop
dec
ds
ret
xchg
sbb
movsb
cld
cmp
xchg
fdivl
int
cmp
jne
stc
mov
enter
adc
fwait
jl
ds
aas
repnz
or
movl
lret
xor
mov
jp
pop
sbbl
scas
arpl
sub
xchg
movsb
pop
negb
xor
loop
pop
pop
arpl
mov
jl
sub
xchg
mov
fidivrs
cmp
int
cmc
test
mov
pop
sub
out
imulb
jb
xor
and
aas
mov
sahf
imul
pop
cmc
or
out
int
cmp
data16
mov
shl
cld
jb
fisubrs
in
adc
dec
fsubp
ss
fdivl
incl
jle
out
mov
test
in
pop
stc
push
loopne
in
mov
push
sahf
aad
mov
pop
pop
sbb
cmc
adc
stos
push
xchg
sub
sbb
push
push
pop
dec
div
inc
mov
sub
dec
jg
mov
cwtl
aad
icebp
fdivl
test
pop
mov
stos
pop
pop
pop
sub
lret
ret
scas
jp
scas
xchg
in
aaa
push
push
clc
punpckhbw
sti
fsub
jge
andl
lret
mov
hlt
xchg
xchg
clc
popl
inc
daa
stc
mov
add
pop
out
adc
cmc
dec
in
or
cltd
cmp
int
dec
insl
imul
in
jecxz,pt
lret
leave
fimull
mov
insb
inc
lea
ljmp
imul
pop
aad
mov
add
stc
xchg
and
ljmp
sub
outsl
cmp
jo
cmpsb
addb
cltd
fwait
cmp
xor
mov
inc
pop
addr16
ficompl
mov
test
adc
sbb
mov
jmp
inc
stos
xchg
pop
sti
jle
enter
rcr
insb
nop
int
scas
push
dec
outsb
cwtl
in
xor
adc
xor
int3
sub
mov
sub
popa
popa
mov
imul
pop
or
js
pop
mul
sbb
xchg
pop
pusha
popa
adc
xor
xchg
in
add
lret
mov
sub
sbb
mov
jo
xor
xchg
jns
std
sub
aas
in
or
xchg
xchg
and
and
sub
ret
mov
pushf
cmpsb
mov
jno
sub
hlt
push
add
cmpsb
popf
push
daa
mov
out
jb
pop
push
pop
scas
stc
fwait
shrl
sub
popa
lods
cld
jp
mov
pop
lods
bound
iret
dec
mov
mov
lahf
and
cs
or
dec
mull
aas
inc
push
and
loopne
aaa
sysexit
insl
leave
add
aam
aaa
imul
or
cltd
xor
pop
mov
insb
stc
add
inc
jnp
dec
sub
or
pop
jg
rcll
popf
cli
sbb
dec
sub
and
or
stos
mov
dec
jae
pop
push
popf
xor
sbb
shll
lock
in
push
jl
mov
mov
mov
jecxz
xchg
imul
push
jg
gs
inc
inc
pop
addr16
or
ret
mov
lods
ss
xchg
push
cltd
cmpsb
xchg
sub
dec
cld
cld
pop
bound
cmp
inc
jbe
xchg
ficoml
jo
sbb
in
pop
scas
insb
cli
mov
gs
pop
mov
scas
jg
filds
lods
pop
mov
or
sub
jnp
repz
mov
outsb
sub
out
dec
maskmovq
idivl
xor
xchg
add
mov
mov
dec
aam
cmpsb
pop
ret
add
out
push
jecxz
push
adc
or
inc
or
push
frstor
insl
or
jg
fwait
xchg
fxch
jns
or
leave
into
fdivrs
lods
pop
les
int
arpl
and
aas
xor
test
jg
cmp
mov
xchg
push
push
enter
imul
xchg
popf
leave
cltd
mov
push
and
sub
cmp
jbe
push
cwtl
and
cltd
inc
fbld
scas
leave
sub
mov
popa
dec
or
rcrl
xchg
xchg
popa
or
jge
push
sbbl
push
stos
nop
dec
cmp
insl
lcall
mov
fmuls
gs
fisubrs
jne
out
or
or
fcoml
mov
imul
loop
cwtl
sub
ds
jo
cli
sbb
ret
cld
ss
push
cmpl
pushl
or
push
clc
scas
xor
mov
out
loopne
popf
mov
pop
imul
push
xor
xchg
out
jnp
sbb
push
add
cmpsl
xor
rorb
dec
or
sbb
stos
jge
out
lods
pop
mov
push
mov
jle
pop
xchg
loop
sbb
push
mov
mov
add
lds
jb
lret
dec
add
imul
mov
ja
mov
faddl
jle
rolb
mov
mov
in
jmp
fsubl
std
push
lret
stos
daa
js
cmp
daa
test
or
cmp
jge
aaa
leave
xchg
sub
pop
enter
mov
push
xor
add
xchg
xchg
fiadds
add
in
sub
in
sbb
incl
cmpsl
call
xorl
scas
jge
and
mov
mov
xor
enter
jp
popl
testb
adc
outsb
popf
mov
in
or
fisttps
or
and
and
jge
pop
clc
add
mov
mov
ja
mov
mov
lcall
frstor
data16
stos
jo
aaa
cmp
mov
add
arpl
cmp
cld
sbb
loopne
test
cwtl
test
loop
push
pop
ss
loope
stos
push
sbb
xchg
push
mov
cmp
leave
sahf
xchg
jo
mov
imul
cmp
xor
test
cmp
mov
fsubp
shl
sub
ss
out
loope
aam
outsb
mov
push
cli
xor
sti
or
xchg
inc
jne
lahf
fdivrs
pop
xchg
lret
arpl
fisubrs
div
jge
test
fnstenv
push
cmpsb
cmpsb
call
int
jg
dec
push
loopne
dec
jge
jnp
aam
hlt
xchg
sbb
outsb
fdivrl
and
pop
aas
mov
adcb
xchg
clc
push
imul
bnd
xor
xchg
dec
xchg
sub
aam
inc
xchg
or
and
mov
daa
pop
lods
rolb
flds
aaa
mov
inc
jmp
daa
and
xlat
xor
push
jmp
inc
js
movsl
scas
imul
mov
push
inc
xchg
negl
xor
lret
push
insl
xchg
xchg
out
pushf
sub
das
out
sbb
push
fs
into
scas
bound
popa
lds
xorl
mov
jb
cmpsl
mov
loop
movsl
adc
leave
pushf
sbb
push
pop
lock
in
pop
test
mov
xchg
inc
push
jno
sub
shlb
pop
sbb
mov
cmp
aad
lods
jb
mov
jmp
icebp
cli
pop
or
adc
out
movsl
rcrl
dec
repz
mov
bound
push
mov
push
push
or
dec
scas
jl
nop
cld
add
in
pop
sbb
clc
mov
add
int3
repz
fcompl
aam
mov
cmp
inc
les
mov
es
cmp
push
icebp
sbb
mov
mov
fisubrl
mov
outsb
push
stos
cmpsb
decl
adc
popa
jp
mov
movsl
rolb
sbb
clc
and
xor
mov
inc
sarb
lods
mov
insb
jno
hlt
fcmovnu
fmuls
mov
movsl
dec
or
ljmp
pop
adc
pop
sub
insl
cld
jl
test
mov
inc
jecxz
cmp
mov
push
imull
dec
lods
out
lret
jmp
xor
dec
and
icebp
int
cmc
jge
pop
loope
daa
xor
data16
or
repz
xchg
or
sbb
add
pushf
mov
int
sbb
testb
pushf
inc
xor
push
pop
fsub
and
sub
jl
mov
add
lods
push
jb
dec
imul
sub
mov
movsb
test
mov
or
mov
mov
mov
xchg
jb
hlt
jp
sub
add
je
xchg
adc
cmp
lock
push
inc
fidivl
je
lock
xchg
mov
add
faddl
dec
jnp
test
push
mov
push
lock
addb
shlb
sbb
sub
adc
pop
jb
cltd
lret
gs
pop
xchg
gs
movsl
lods
mov
frstor
nop
icebp
daa
movsl
lahf
iret
mov
fisttps
jg
jae
cmc
lods
pop
iret
test
sub
lret
movsb
stc
pop
inc
add
shll
sub
mov
jmp
lods
iret
pop
orb
cmc
into
jno
adc
mov
adc
insb
mov
dec
pop
aam
ljmp
sub
sbb
push
add
ljmp
cli
push
dec
sbb
or
xchg
add
push
lea
jb
add
inc
inc
negb
push
sub
or
cmp
cltd
addr16
dec
mov
mov
ror
call
pop
fdivl
mov
mov
mov
pusha
popa
es
mov
hlt
mov
movsl
mov
lea
pop
scas
lods
xor
sub
and
pop
mov
je
jg
and
das
cmc
xchg
jl
cmp
mov
je
ret
cwtl
jne
lea
pushl
sbb
mov
into
push
pop
sbb
repz
enter
push
mov
and
loope
fidivrl
dec
movsb
insb
cmp
in
ss
pop
aad
pop
pop
jecxz
xchg
mov
push
add
jo
mov
pop
dec
aad
rcrb
dec
leave
mov
add
insl
add
popf
mov
push
stc
pop
test
out
ss
mov
jle
popa
mov
faddl
pop
jmp
aam
xor
and
movsb
outsl
pusha
mov
mov
push
xchg
mov
jo
notb
jmp
test
jl
mov
call
loope
xchg
lcall
or
mov
dec
dec
test
adcl
push
popa
inc
les
push
nop
in
test
loope
divb
movsl
xchg
into
movsl
imul
mov
dec
mov
jb
mov
scas
rsm
arpl
insl
je
shlb
std
mov
jp
push
xchg
or
and
shl
mov
gs
sbb
mov
mov
pop
es
dec
das
ret
pushf
xlat
push
mov
push
xchg
scas
xor
xor
popa
icebp
jmp
add
mov
sbb
jg
inc
jb
pop
cmp
pop
xchg
rcrl
lds
stos
popf
jmp
loope
insl
imul
inc
and
xor
insb
nop
into
pop
sbb
outsb
movsl
mov
mov
cmc
addr16
and
mov
xor
aam
test
and
pushf
lcall
clc
popa
cmp
add
add
ljmp
cmpsb
mov
movsb
mov
in
insl
sbb
mov
shlb
xor
enter
cwtl
in
mov
xchg
dec
mov
int3
add
lods
sbb
test
test
push
sbb
cwtl
inc
cmp
mov
mov
xlat
loope
adcb
jg
shlb
rcrb
ljmp
mov
pushf
mov
xchg
lds
sub
ret
les
ret
and
pop
sti
dec
lret
popa
pop
add
insb
negl
mov
std
stos
cwtl
clc
sub
mov
dec
sti
daa
xor
arpl
dec
mov
out
addr16
in
fld
mov
cmc
popa
xor
dec
into
sub
add
adc
jne
pop
repz
jns
push
jae
dec
data16
sub
jmp
xor
xchg
xchg
andl
fldcw
push
sahf
sbb
out
outsb
xchg
sub
xor
jge
mov
loope
lea
and
pop
int3
inc
mov
pop
dec
stos
pop
or
mov
clc
sub
push
jbe
jne
inc
and
xchg
and
pop
sahf
lods
push
andl
pop
add
mull
das
sub
dec
or
lret
fwait
repnz
popa
dec
cmp
jecxz
pop
adc
rcrl
and
mov
xlat
xchg
cmp
dec
pop
and
gs
xchg
xchg
cmc
adc
xchg
lret
fsubrs
mov
sbb
into
pop
das
pushf
pop
jle
sub
add
push
call
adc
mov
dec
lods
sbb
mov
or
inc
mov
insl
xor
pop
loope
int
inc
loope
or
cmp
dec
stos
outsl
out
dec
mov
adc
fisttpl
pop
push
or
pusha
push
mov
xchg
jae
cmp
pop
outsl
cs
mov
pop
sarl
jbe
enter
mov
icebp
pop
pop
xor
mov
loopne
or
and
cmpsl
sbb
sti
push
sbb
mov
outsl
pop
lds
or
mov
iret
push
xchg
test
lea
pop
out
addr16
push
push
lods
lcall
push
lock
dec
cmp
mov
inc
repz
add
loop
jle
push
sub
mov
mov
out
hlt
rorb
mov
xor
add
sarl
ja
loop
dec
push
sub
mov
je
or
shrb
int
sahf
or
shlb
sub
xchg
scas
cmp
push
clc
enter
pusha
pop
jns
lea
imul
lcall
scas
data16
je
mov
pop
in
movb
xchg
and
jb
jge
mov
js
mov
pop
lret
aad
sbb
push
xor
andb
into
hlt
pop
out
cmp
and
das
ror
scas
ret
inc
pop
test
int3
aam
andb
xor
push
push
push
jae
cmp
adc
stc
or
mov
in
mov
jb
testb
mov
fisubrs
test
sbb
sub
or
repz
add
xchg
inc
inc
aas
xchg
sub
xchg
stos
lahf
jnp
mov
lods
cmc
iret
jo
or
stc
ret
test
dec
xor
clc
or
in
imul
xchg
cpuid
int
or
jno
add
pop
and
mov
dec
push
rcrl
popf
cs
insl
mov
xchg
mov
shl
sbb
sub
lcall
mov
dec
int
adc
lods
and
fcmovbe
fimull
lret
mov
dec
sub
leave
adc
imul
inc
cmp
addr16
cmp
or
inc
popa
adc
jae
cmpsl
or
fistpl
pop
ds
inc
inc
lcall
or
xor
dec
aaa
inc
sub
fidivrs
mov
jns
add
jmp
mov
imul
aaa
rcr
iret
mov
fs
xchg
sti
mov
aam
xchg
mov
bound
jbe
ljmp
sub
jmp
cmpsl
sub
inc
out
cltd
sbb
push
push
popa
fidivs
into
lods
sbb
push
jbe
jl
out
pop
clc
mov
xor
pop
inc
pop
sbb
imul
sbb
xchg
loope
xchg
aaa
dec
std
fsubrs
arpl
lahf
mov
arpl
icebp
mov
dec
pushf
ficompl
fstpl
sub
cli
stc
pop
adc
and
int3
sub
imul
sub
push
mov
cli
lret
sti
std
mov
out
xchg
in
imul
jmp
adc
xchg
imul
push
pop
scas
out
stos
sbb
enter
inc
xor
lcall
jns
insl
bnd
push
sub
loop
sub
xchg
jg
das
mov
cli
std
push
jb
xchg
lods
add
dec
sub
dec
mov
add
jl
mov
mov
pop
andb
jle
fldenv
add
push
sub
push
jo
sbb
mov
scas
xchg
or
cmp
cmc
pusha
sbb
scas
xchg
cld
push
mov
pushf
inc
in
push
cld
int3
jb
subb
mov
insb
sarb
repnz
add
pushf
inc
in
push
cld
int3
jb
subb
mov
insb
sarb
repnz
add
xor
enter
sub
mov
ret
jl
inc
lock
and
faddl
push
cld
loop
repnz
shrl
or
imul
or
int3
int3
jnp
imul
add
mulb
push
jne
add
pop
ljmp
loopne
lock
rorl
xor
dec
adc
popa
sub
inc
or
mov
lret
xchg
jnp
stos
icebp
fwait
rorl
pop
add
cmp
jno
inc
or
mov
lret
mov
movsb
in
and
cmovno
daa
je
push
lcall
push
adc
pop
imul
leave
neg
push
mov
dec
and
xor
inc
icebp
stos
stos
int3
jns
subb
arpl
pop
sarl
mov
pop
mov
sti
mov
or
push
int
dec
mov
xor
inc
sbb
jno,pt
dec
or
and
icebp
jmp
sbb
into
mov
ljmp
adc
movsb
pop
jle
xchg
call
test
xchg
daa
cwtl
mov
fsqrt
xchg
lret
or
lods
mov
jecxz
jmp
mov
mov
imul
add
cmp
jno
inc
or
mov
lret
xchg
mov
rorl
xor
push
cmp
pop
add
sti
rorl
loope
xchg
stos
mov
mov
mov
dec
push
pop
ds
daa
jb
and
arpl
pop
jg
les
ret
mov
movsb
incb
xor
daa
imul
or
mov
lret
xchg
mov
rorl
pop
add
cmp
jno
inc
or
mov
lret
xchg
mov
rorl
outsb
fs
lds
ljmp
dec
sub
test
mov
fistpll
push
ljmp
cmpsl
fistps
dec
pop
rcll
lods
hlt
pushl
adc
cmp
mov
cmp
mov
push
popf
mov
test
daa
mov
jl
scas
iret
pop
cmpsl
xor
or
sub
push
cmpsb
popf
jb
fstps
movsl
stos
cs
pop
xlat
jnp
pop
movsb
int3
andl
in
xchg
ret
scas
jle
imul
cli
std
pop
dec
ret
in
or
xchg
add
hlt
or
jb
pop
mov
lods
fwait
pop
dec
dec
addr16
ficomps
inc
out
xchg
sbb
in
dec
jmp
jns
js
xchg
mov
jmp
rorb
rcll
ljmp
les
les
dec
adcl
ljmp
leave
decl
cmp
ffree
cltd
push
cli
push
sarb
div
xlat
xchg
outsb
push
bound
xchg
sub
int3
sub
mov
nop
cmc
adc
xchg
lret
cli
dec
cmp
cmp
xlat
sbb
pop
les
out
jnp
out
mov
mov
push
addb
mov
xchg
loop
ss
pop
dec
or
clc
or
pop
mov
and
and
lods
jns
int
sub
pop
jmp
repz
scas
jecxz
popf
push
movsb
insb
int
xchg
movl
xlat
cmc
adcl
lods
pop
cmp
aad
xor
xchg
dec
and
dec
mov
in
pusha
push
test
loop
scas
stc
inc
pop
xchg
pop
test
ja
test
fisttpll
syscall
push
or
adc
jg
adc
cmp
daa
rcr
jno
je
pop
rcrb
dec
mov
ror
test
cmp
jbe
jno
sbb
lods
xchg
lcall
mov
jnp
xor
jo
cmpsl
sub
sbb
jp
lret
addl
bnd
xor
int3
pop
fs
das
leave
fldenv
sbb
push
imul
push
push
fisubrl
and
subb
xchg
mov
xchg
in
test
cmp
cmp
or
cmpsb
iret
push
adc
mov
fildll
sbb
pop
ss
nop
imul
jmp
xor
xchg
cmp
pushf
stc
push
call
push
lret
dec
int3
add
xor
mov
fiaddl
or
or
adc
cld
ret
jle
mov
jne
addr16
push
stc
cli
or
ret
sbb
push
dec
shll
sub
shll
sub
push
xor
mov
into
pop
mov
in
sub
out
sbb
xchg
test
mov
fnstenv
xor
cmp
pushf
push
jge
lea
and
xchg
and
cmp
pushf
inc
pushf
jnp
sbb
add
xor
pushf
lods
ret
fdiv
jmp
sar
mov
cmp
xor
arpl
inc
xor
lahf
dec
pushf
test
adc
sub
mov
add
sub
and
test
cmc
lock
and
test
movsb
add
pop
lods
cmpsl
sbb
push
jle
test
int3
mov
mov
jb
fnsave
adc
daa
inc
cmp
jo
or
add
repnz
xchg
inc
pop
fimuls
pop
cmpsb
les
xchg
push
cmp
int3
jnp
mov
xchg
dec
stc
test
dec
and
push
in
jl
loopne
fdivr
cmpsb
sub
sbb
fldenv
pop
push
int3
jno
mov
jnp
jge
ja
xchg
outsb
orb
rcrl
sub
push
push
stos
stc
and
lahf
mov
pop
pushf
bound
sub
pop
out
and
mov
test
mov
inc
push
cli
push
sbb
mov
popf
jnp
push
sub
inc
out
pop
dec
mov
mov
mov
stos
xor
sbb
popf
sbb
stos
std
fwait
stos
add
mov
fcoml
stc
icebp
fs
ffreep
cmpsb
enter
jmp
xor
inc
out
mov
sbb
insl
pop
in
mov
sbb
jbe
cmp
mov
xor
ficompl
scas
icebp
test
sbb
adc
jno
mov
pop
add
cld
ljmp
cmc
insb
or
imul
out
jmp
je
xorb
jmp
cmc
jp
xlat
pop
mov
cmp
nop
xlat
mov
repz
or
mov
jnp
push
jns
sub
push
lock
xor
xor
adc
push
lret
pop
fnstenv
sub
aad
cmp
pusha
or
mov
pop
mov
ds
cltd
adc
or
xor
pop
xchg
and
sarl
mov
cmp
sarb
es
cli
scas
mov
pop
add
in
sbb
dec
xor
sbb
icebp
sub
iret
fucomp
mov
jg
daa
jecxz
mov
add
xor
push
or
rcrb
aaa
in
mov
pop
cmp
lods
cwtl
and
in
incb
cmp
scas
inc
and
sbb
popa
insl
fnstsw
test
scas
xchg
and
pop
in
jnp
lods
dec
clc
loop
outsl
icebp
jo
outsb
add
sub
jno
push
orb
add
mov
inc
xor
insl
cmp
je
popf
out
ljmp
jne
inc
push
or
popa
sbb
nop
icebp
sub
xor
in
or
call
ss
dec
mov
rcrb
nop
fstpl
jb
fdivrs
arpl
lret
mov
test
xor
cmpsl
cli
and
pusha
cs
insb
int
jno
jb
ljmp
out
sbb
and
mov
fwait
cmpb
shlb
pop
imul
lds
xor
sti
imul
dec
xchg
fs
and
bound
mov
and
push
fistpll
add
aam
push
and
jle
dec
rcr
ret
leave
sbb
lahf
dec
mov
push
jp
stc
or
mov
insl
nop
pop
or
cmp
ljmp
xchg
and
addb
scas
clc
sub
push
dec
ror
sti
stc
outsl
lret
push
add
pop
pop
mov
sbb
jb
data16
sub
inc
or
rcl
lock
and
stos
nop
push
mov
xor
xor
arpl
imull
int3
pop
cltd
xor
xlat
adc
ret
out
fwait
jmp
xchg
mov
push
mov
mov
cltd
fcomps
out
cwtl
xchg
js
popa
lds
cmp
pop
and
sbb
lcall
dec
mov
xor
pop
xor
and
pop
jle
nop
pusha
cmpsb
xor
aaa
jae
repz
mov
cmp
dec
adc
mov
mov
cmp
push
es
or
rorb
dec
leave
pushf
in
mov
pop
adc
sarl
adcb
xchg
icebp
xor
and
mov
xor
pop
cmp
adc
daa
mov
call
pop
test
inc
cmp
fstl
mov
pop
fcomp
inc
aad
lock
dec
jno
popf
or
lcall
cmpsl
ljmp
imul
xchg
cmpsb
ja
movsb
jo
lods
inc
xchg
outsl
pop
pop
push
movsb
sub
jge
mov
mov
out
xor
outsb
mov
int
sahf
jne
inc
or
mov
cltd
xchg
gs
adc
repnz
push
popl
inc
ret
mov
shlb
gs
mov
adc
icebp
mov
enter
dec
dec
sbb
jnp
mov
mov
pop
sbb
cmc
loopne
inc
cli
or
mov
aad
jecxz
inc
addr16
fnsave
fcmovnb
xchg
cmpsb
jae
shrb
dec
mov
aam
inc
adc
sub
fs
push
iret
adc
test
lret
ret
enter
imul
insb
mov
mov
push
sub
fisubrl
sub
sub
fidivrl
clc
jns
inc
jg
xor
outsl
shlb
mov
shrl
mov
dec
mov
stc
pop
int
repz
pop
in
mov
sti
jo
dec
cwtl
add
imull
insb
jno
jbe
inc
jp
push
mov
sub
cwtl
scas
daa
add
out
pop
adc
sbb
xchg
das
mov
or
jnp
mov
adc
scas
dec
clc
xchg
xchg
mov
scas
pushf
popf
in
lds
lahf
call
cmpsl
sbb
and
std
adc
mov
xor
or
imul
leave
dec
lahf
lods
pop
add
cmp
orb
fcoml
inc
mov
sub
cmp
sub
rcrb
add
adcl
nop
fwait
aas
sub
out
add
and
and
in
hlt
push
test
add
or
mov
xor
xchg
jae
fucomip
inc
sbb
push
shll
stc
arpl
sub
add
and
sub
sub
push
fwait
jae
cmpsl
xchg
push
fidivrl
xor
cmp
test
mov
dec
outsl
stos
or
rcr
xor
pop
insl
jmp
jae
sub
xlat
lods
cmp
pop
pop
adc
pop
lcall
mov
sub
dec
mov
xchg
mov
xchg
and
icebp
aaa
sub
lods
pop
insb
stos
sub
lods
xor
xlat
add
repnz
push
push
inc
or
cltd
insb
mov
arpl
icebp
dec
adc
loope
ret
mov
jl
or
movsl
pop
or
int
jne
dec
stos
lods
xchg
mov
leave
pop
inc
sub
loope
lret
pop
rolb
xchg
xor
inc
ss
push
push
jb
inc
test
push
int
push
sub
fcoms
jle,pn
js
inc
arpl
lods
sti
push
out
sbb
nop
in
adc
or
test
rorb
pop
inc
xchg
pop
lods
pop
pop
add
loope
faddl
inc
rcrl
enter
sbb
aas
xchg
or
loope
out
stos
scas
adc
dec
in
repz
rep
mov
pusha
jge
pop
xchg
mov
leave
xor
xlat
aad
int
xor
mov
add
mov
mov
cmpsb
ss
jl
add
add
in
mov
mov
xchg
dec
sahf
outsb
mov
imulb
cmp
popa
mov
mov
pushf
int
mov
rolb
inc
inc
das
push
loopne
add
cmc
push
stos
xchg
push
loop
push
jl
or
movsb
out
lcall
insl
int3
mov
jmp
xor
mov
int3
cmpsl
mov
nop
loope
sbb
fnstenv
mov
negl
popa
into
ja
ljmp
dec
adc
cmp
add
cmc
jb
std
imul
stos
subb
rcll
js
outsb
xor
add
cltd
xor
lods
push
xorb
lcall
adc
popf
bound
mov
inc
sahf
out
add
mov
jns
and
and
test
test
cld
adc
rcl
cmpsl
and
popl
insb
lods
into
jnp
jae
in
pop
bound
xchg
dec
test
cmp
fstl
int3
push
mov
cmpl
dec
jecxz
mov
jo
idivl
out
mov
stos
cwtd
js
lods
dec
insb
popf
xchg
jo
pop
inc
inc
loope
xchg
fwait
sti
cltd
adc
cs
arpl
mov
push
sti
add
in
and
daa
into
cli
sub
lea
cmpl
ja
outsl
icebp
test
out
xchg
mov
jno
inc
cmp
into
and
cltd
adc
add
mov
cmpsl
jle
jbe
cmp
and
adc
push
cmp
xor
cmp
aam
je
pop
and
xor
mov
jb
xor
xchg
sbb
mov
xchg
cmp
mov
push
repnz
xlat
inc
sub
mov
jae
movsl
popf
and
lods
add
pop
faddp
sub
outsl
sbb
sub
or
add
add
fsubs
aaa
push
jg
push
pop
adc
shrl
jle
xchg
lock
push
mov
lock
lods
sub
and
lret
xor
push
pushf
jno
jo
aad
ds
mov
push
outsl
mov
or
inc
andl
or
cli
test
cmp
addr16
cli
call
mov
data16
pop
adc
sbb
pop
add
jno
cmp
mov
in
lock
mov
pop
dec
mov
mov
xchg
movsb
pusha
jb
sbb
jo
scas
cmp
ljmp
xorl
adc
daa
jp
scas
scas
insw
sub
xor
push
sub
mov
ds
arpl
or
nop
mov
test
add
xor
ja
inc
push
jne
xchg
cs
cltd
and
inc
fiaddl
bound
loopne
clc
sbb
xchg
dec
jnp
sbb
movsb
push
dec
jbe
push
mov
mov
jecxz
lds
into
mov
jb
cmp
stos
cmp
sub
stc
xor
mov
mov
push
xchg
je
push
pop
in
add
cmp
push
aam
cmp
nop
and
and
out
and
sbb
popa
jg
pop
imul
out
daa
cmp
mov
outsb
mov
mov
mov
clc
xor
int3
imull
pusha
rolb
jecxz
jmp
adc
cmpsb
scas
xchg
pop
adc
scas
inc
sbb
lcall
inc
inc
add
jecxz
pop
arpl
daa
pop
mov
push
adc
push
fidivrs
out
mov
mov
pop
xor
adc
adc
out
das
mov
adc
or
push
shrl
jecxz
or
movsl
gs
sbb
jne
pop
xchg
into
mov
inc
fldcw
loope
xchg
gs
mov
cmpb
add
shll
dec
cld
or
mov
pop
stos
pop
jae
xchg
jae
movsb
xor
and
sub
push
test
mov
mov
and
js
inc
adc
sub
decb
jb
in
in
push
xor
lock
mov
and
inc
mov
push
std
dec
je
dec
jae
dec
cmpsb
cmpsl
push
push
movl
xor
stos
xlat
dec
mov
lcall
in
xchg
roll
and
insl
sbb
push
cmc
mov
cltd
push
cltd
sub
mov
loopne
fsubs
adc
jge
cwtl
adc
cmp
and
mov
push
sbb
dec
addr16
fimull
int
and
lock
adc
pop
in
dec
adc
outsb
out
add
loopne
subl
popf
cld
jge
outsb
loop
pop
rclb
mov
mov
stos
adc
test
icebp
sub
hlt
shll
mov
loop
jnp
xlat
sub
insb
jb
and
adc
push
inc
insl
loopne
ror
add
inc
das
mov
lret
xlat
shlb
push
pop
sub
in
andl
rcl
cmpb
out
sbb
push
aaa
repz
fwait
mov
jmp
sbb
idivl
inc
jbe
inc
xchg
js
sarb
pop
push
sti
lahf
imul
pop
enter
or
sbb
push
mov
sbb
xlat
sub
or
out
es
ja
xor
stc
dec
dec
pusha
inc
inc
clc
add
sbb
in
andb
aam
std
mov
inc
testl
mov
dec
loope
pop
jb
add
dec
xor
cmc
mov
jecxz
inc
xor
jmp
inc
lods
sti
into
jecxz
dec
int3
aas
xchg
mov
sbb
ja
sub
jne
jp
jmp
pop
adcl
pop
ljmp
jnp
test
daa
stos
sbb
lret
jp,pn
adc
jp
mov
mov
mov
xlat
stos
pop
cld
push
dec
cs
jmp
mov
daa
out
or
out
mov
int
test
je
mov
xchg
push
fs
mov
sub
fsubs
inc
jg
aaa
mov
loopne
leave
pushf
pop
mov
sbb
pop
shll
mov
push
lret
mov
imul
mov
fidivrs
mov
lcall
out
mov
repnz
or
jg
fwait
loope
sbb
out
mov
sub
mov
rolb
push
jmp
je
add
pop
mov
cmp
pop
jg
outsl
icebp
insb
es
lret
cmp
insb
loop
add
adc
outsb
add
aas
add
or
popa
mov
rorl
cld
xor
jg
sub
inc
push
int
or
xchg
das
aas
repz
out
mov
jns
mov
mov
icebp
ljmp
sahf
add
cmpsl
xor
xchg
in
in
lahf
rcl
mov
hlt
inc
pop
jp
jno
pop
dec
push
daa
mov
jecxz
fs
lock
in
dec
xor
mov
js
ret
loope
stos
fsincos
cwtl
fwait
divb
inc
dec
adc
sarl
and
xchg
add
lods
lea
in
xor
out
lods
orl
and
subl
sbb
out
nop
test
aad
stc
movsb
js
test
movsl
mov
dec
mov
xor
shr
cmpsl
ret
push
adc
pop
dec
call
add
mov
icebp
std
pop
loope
cs
je
sbb
jne
pop
imul
aas
adc
imul
pop
movsl
out
xchg
xchg
add
mov
clc
push
pop
xor
mov
stos
jns
sbb
jp
pusha
and
dec
sub
jecxz
cmp
and
popa
or
ret
lods
out
dec
mov
and
movsb
mov
inc
xor
leave
lock
mov
mov
dec
ja
popf
mov
fwait
cmc
or
inc
xchg
and
movsb
lahf
aas
jbe
cmp
push
lods
rcl
inc
jno
fidivrs
adc
jne
xor
lret
cld
popa
fwait
leave
popa
xchg
dec
xorb
jnp
push
dec
inc
inc
icebp
rcrb
div
test
iret
hlt
imul
idivb
repnz
adc
fildll
xor
shl
icebp
notb
imul
gs
pop
xchg
jnp
or
add
push
lret
ret
and
loopne
fsubrs
xor
orb
addl
xchg
or
lods
xor
roll
adc
dec
push
adc
loop
cs
fstl
outsl
scas
pop
dec
outsb
xchg
cltd
std
xchg
mov
inc
out
out
rsqrtps
and
pop
les
fcmovnu
out
inc
mov
addr16
and
dec
adc
leave
inc
jno
inc
cmpsb
and
pop
jb
jns
loopne
addr16
mov
cmc
repz
aad
in
sbb
decl
jle
lret
out
lea
xchg
mov
cmpsb
adc
sub
push
rcrb
or
sub
popf
add
sub
or
and
push
aam
sub
push
jnp
push
inc
jo
mov
pushf
out
mov
mov
and
mov
mov
or
out
in
jo
fidivrl
xchg
mov
jnp
xchg
adc
imul
roll
outsb
stc
popa
std
mov
dec
and
fbstp
rcrl
cwtl
push
and
js
mov
ret
push
mov
cwtl
mov
mov
and
cwtl
add
into
insl
movsl
jmp
lret
setl
das
push
jns
mov
mov
test
sbb
call
mov
mov
into
mov
lods
bound
or
lahf
mov
mov
cmpsl
pop
mov
repnz
mov
mov
pop
leave
jns
xchg
jns
icebp
inc
outsl
aaa
cmp
inc
dec
imul
inc
mov
ret
andl
sub
in
dec
repz
cmp
dec
arpl
cmp
arpl
mov
cmpsb
and
push
push
pop
inc
adc
sbb
inc
xor
es
adc
ret
scas
sbb
loopne
mov
les
cmc
pop
into
stos
jno
cmp
scas
mov
push
fwait
outsb
scas
shlb
push
sub
int3
aam
lds
xor
jecxz
fnstcw
stos
dec
xchg
out
push
popf
aam
mov
andb
push
in
sahf
test
and
fiadds
cltd
icebp
shl
inc
xlat
movsb
les
cmp
cld
imul
or
jns
std
dec
mov
data16
and
in
dec
leave
stos
ds
aaa
ljmp
dec
mov
mov
xor
sbb
add
and
inc
stos
inc
lods
popa
push
xchg
pop
dec
pop
sbb
je
test
lds
pop
shll
test
jl
dec
mov
mov
cli
mov
loopne
rol
jp
push
jns
xchg
stc
xor
mov
or
mov
mov
lret
js
outsl
sub
movsb
inc
jge
sti
jmp
sbb
inc
xchg
mov
cmpl
test
loop
loopne
ficoms
shl
xor
insb
lret
sub
lahf
sahf
mov
mov
popf
les
jge
js
xor
adc
add
call
jb
mov
or
test
in
arpl
xor
xchg
test
mov
or
or
popa
mov
imul
mov
das
xchg
pushf
test
and
cmpsb
jb
add
rep
loop
dec
int
cwtl
enter
testl
sub
cltd
xor
xor
mov
mov
sbb
sub
test
fdivp
jle
movsl
and
xchg
cmp
loope
bound
movsl
jo
adc
inc
inc
mov
cmpsl
inc
ffreep
adc
push
mov
in
test
psubusb
hlt
xlat
hlt
cwtl
mov
lea
nop
mov
repnz
or
hlt
add
cmp
mov
or
mov
lret
mov
mov
out
push
stos
or
in
xor
stos
mov
or
popa
jmp
sub
adc
rclb
xor
notb
dec
push
push
test
jl
je
outsb
or
clc
cwtl
loop
xchg
and
push
pop
dec
or
push
mov
sbb
cli
mov
scas
movb
or
fdiv
xor
lret
lret
sbbl
jb
fistpll
inc
stos
lock
cmp
dec
jge
test
xchg
mov
dec
jle
insb
push
push
leave
popa
lret
pusha
outsl
and
pop
add
cmp
jno
inc
or
mov
lret
xchg
mov
rorl
pop
add
cmp
jno
inc
or
mov
lret
xchg
mov
rorl
fildl
dec
adc
inc
mov
mov
lret
xchg
mov
rorl
pop
add
cmp
jno
inc
or
jno
lret
out
imul
cs
int3
int3
int3
int3
push
mov
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
pop
inc
dec
stos
jl
insb
mov
xchg
and
fistpll
into
daa
cld
or
or
lods
dec
pop
mov
insb
mov
or
cmp
sub
fdivrl
int3
sub
cmp
or
lods
dec
pop
mov
insb
xchg
sbb
or
cmp
sub
out
adc
incl
sub
add
xor
inc
cmpsl
or
out
negb
jmp
adc
jmp
mov
mov
adcl
ja
jo
adc
pusha
mov
adc
lret
decb
mov
les
jmp
scas
jae
bound
imul
pop
jmp
stos
mov
fcomi
sub
sub
sub
inc
aam
sti
adc
int3
sub
jae
xchg
imul
sub
rorb
sub
addr16
adc
inc
pop
lods
mov
mov
dec
inc
fwait
xchg
inc
aaa
roll
fwait
cmp
sbb
fistps
jnp
scas
pop
lahf
mov
insb
xchg
sbb
or
cmp
sub
fsubl
int3
xor
add
adc
lods
das
cmp
das
stos
cmp
arpl
lods
push
test
sbb
int
fstps
es
cmp
jns
inc
fnstcw
imul
imul
add
aaa
cs
dec
into
cmp
or
pop
xchg
or
cmp
sub
fdivrl
int3
sub
sbb
or
lods
dec
pop
mov
insb
mov
or
cmp
sub
fdivrl
int3
sub
sbb
or
lods
dec
pop
mov
adc
fidivrs
xchg
add
icebp
ja
mov
jmp
lea
xor
xchg
lret
outsb
lods
testb
rcrb
test
imul
add
add
lods
sbb
outsb
arpl
out
pop
pop
push
mov
mov
or
sbb
fcompl
sbb
dec
mov
and
lcall
out
mov
aam
xor
addr16
icebp
mov
adc
lods
ret
pop
mov
shll
loopne
jno
mov
pop
lea
dec
mov
mov
add
test
or
or
fidivrs
sub
cmp
shll
sbb
jb
mov
pop
in
pop
stos
nop
negb
in
cmpsl
or
movsl
shll
dec
push
sub
ljmp
xchg
jge
add
jne
fcomi
mov
pushf
lcall
mov
lods
and
inc
fstpl
popf
adcb
test
enter
or
push
or
addl
mov
mov
jno
dec
addr16
push
or
mov
les
popa
cmp
push
dec
push
xchg
jp
cmpb
mov
pushl
mov
cmp
imul
fists
mov
scas
cmp
add
sub
mov
pop
movsb
data16
mov
stos
inc
push
xor
aad
jle
mov
push
jne
or
stos
dec
lret
jbe
jge
pushf
mov
dec
jmp
xchg
sbb
push
and
and
fidivl
ffreep
or
fcoms
outsl
mov
or
push
pop
test
mov
dec
dec
outsl
lahf
sbb
test
in
xor
and
testb
pusha
cmc
and
xchg
mov
ret
or
mov
xlat
jp
pop
call
adc
add
mov
negl
mov
imul
lahf
pop
xchg
sbb
loopne
jbe
je
mov
add
je
mull
pushf
push
dec
sub
jb
adc
daa
xor
mov
xchg
inc
push
lds
shl
stc
mov
out
in
pop
inc
or
mov
xlat
fldcw
lea
in
bound
xor
out
sti
int3
adc
int3
xchg
push
jp
xor
sub
mov
out
nop
mov
test
sbb
pop
cmpsl
sub
inc
inc
jl
into
in
sub
add
xchg
and
cmp
inc
or
aaa
pop
inc
pop
sub
sub
inc
loop
or
mov
jle
push
push
mov
ffree
in
cs
inc
imul
adc
or
adc
imul
js
dec
ja
pop
mov
scas
cmp
dec
mov
imul
pop
ret
loope
jne
popf
in
adc
push
mov
and
sub
cmp
and
arpl
adcb
xor
mov
or
ss
xor
out
rcr
or
xchg
pop
loopne
cwtl
rolb
or
xor
ss
ficoms
out
sub
and
jno
sub
dec
push
sar
in
hlt
mov
lret
xchg
repnz
cmp
mov
push
inc
jae
add
arpl
xlat
imul
int
shl
pop
mov
int
sahf
and
push
movsb
cwtl
pop
test
jb
aad
rcrb
dec
popa
add
fisubrl
mov
or
ljmp
int3
dec
lds
ljmp
fmuls
movl
or
mov
lock
jo
sbb
adc
mov
lcall
push
or
out
push
xchg
mov
jbe
dec
and
leave
ret
adc
sub
or
xchg
mov
jg
fnstsw
mov
or
ret
mov
aas
testb
es
inc
jbe
jbe
jo
je
fxam
mov
xchg
js
sahf
xorl
pop
shl
xchg
mov
mov
sub
cmpsb
out
in
sarl
shrb
sti
lods
sub
shrl
leave
aam
sahf
aas
sub
rcl
adc
iret
mov
mov
cmp
shll
popa
dec
pop
shr
std
mov
inc
adc
inc
cmp
lret
adcl
lahf
push
rclb
xchg
sub
push
lea
fcmovne
loope
test
lcall
jne
inc
out
push
aad
inc
ja
push
int3
imul
xor
mov
aad
sub
jo
push
add
sahf
cmp
xchg
loopne
subl
movsl
xor
adc
push
stos
dec
xlat
jp
cs
xor
arpl
jne
or
cmc
pop
fstps
rol
add
jecxz
pushf
mov
mov
lock
push
lods
shr
sub
rolb
and
mov
test
mov
dec
std
stos
inc
xchg
xlat
loopne
flds
push
pop
xchg
fstpl
xchg
daa
dec
xchg
xor
movsb
and
sub
nop
xchg
test
sub
leave
mov
das
fwait
jecxz
dec
movsl
adc
xchg
cmp
mov
pop
stc
notl
ficompl
push
mov
mov
push
xlat
out
clc
push
cmp
and
sub
inc
dec
inc
rcr
jnp
aad
lods
adc
fld
loop
leave
push
mov
mov
mov
fsubrs
fwait
push
subb
test
lods
cmpsb
testl
xchg
pusha
mov
add
mov
mov
clc
stos
xor
sbb
dec
dec
pop
in
fwait
pusha
fsubs
pushf
std
dec
dec
add
jb
jo
stos
scas
or
dec
test
in
cld
mov
mov
sub
es
inc
imul
jnp,pn
add
sahf
test
adc
rorb
mov
enter
pusha
bound
mov
lds
nop
adc
movsb
jbe
push
fwait
rorb
cmp
pop
stos
and
ret
in
out
sbbl
xor
xor
xchg
fcmovu
xlat
mov
sub
test
push
mov
mov
xor
movsl
jne
ss
pusha
call
lods
mov
sub
xchg
xor
cwtl
lcall
imul
sub
ret
cs
xchg
rcrl
loope
jae
add
testl
aad
jmp
jae
and
daa
jl
pop
call
out
adc
les
inc
inc
mov
sbb
pop
outsl
mov
mov
cwtl
mov
ljmp
or
or
sub
xchg
sbb
push
jne
cmpsb
jmp
push
notl
pop
in
rorb
push
sbb
dec
mov
sahf
js
pop
sub
fisttpll
jo
shrb
fs
sub
cs
mov
cld
xchg
in
jo
gs
pushf
xor
pop
push
mov
in
lcall
jge
out
mov
jecxz
mov
test
pop
push
fidivrs
mov
std
jb
sub
sub
stos
jl
cmp
xor
pop
ljmp
mov
fcomip
outsb
push
push
adc
cmp
repnz
mov
sbbb
ret
imul
jg
cmp
dec
data16
add
imul
fstps
inc
push
dec
lods
mov
pop
cmp
xchg
push
push
and
shlb
popa
mov
xchg
lods
and
stos
adcb
inc
mov
addl
sbb
cltd
fmulp
and
or
xor
dec
imul
dec
xchg
pop
cmp
arpl
je
stos
pop
call
gs
popa
sub
mov
and
adc
inc
xchg
sbb
dec
je
mov
push
lods
insl
testb
mov
cld
out
jo
test
xor
dec
mov
xchg
inc
ljmp
fdivrl
dec
jl
mov
lods
dec
sub
add
push
cmp
or
insb
pop
filds
ret
orl
pop
mov
test
dec
jbe
cs
mov
sbb
rcrl
aaa
roll
andb
pop
fcmovnbe
xor
fisubs
mov
mov
jecxz
mov
nop
test
push
lea
add
clc
xorb
stos
sarl
inc
call
loopne
cwtl
loopne
or
add
jle
mov
into
je
mov
test
inc
sub
or
out
in
mov
sub
or
daa
sub
and
lret
stos
popa
or
outsl
rorl
insb
fs
sub
push
int3
xchg
adc
in
ret
roll
sbb
sbb
outsb
dec
pushf
les
clc
sub
out
std
add
or
dec
loop
lods
mov
fucomp
iret
jbe
cmp
jp
or
xor
rcr
pushf
fs
pop
mov
push
fisubs
js
ljmp
cmp
out
ret
adc
mov
stos
cs
jns
mov
out
jno
jmp
cmc
negl
jo
sub
push
sub
movsb
insb
call
daa
leave
nop
jno
dec
icebp
or
cwtl
mov
and
jb
jge
js
fs
iret
and
mov
inc
sahf
repnz
lods
fs
pop
push
pushf
movsb
mov
xchg
dec
aam
mov
mov
std
dec
mov
push
repz
sbb
cmp
push
jecxz
lds
je
cli
cmp
or
ds
mov
sub
pushf
xlat
icebp
fwait
rorb
adc
jo
cmp
mov
mov
mov
mov
mov
sbb
pandn
sbb
int
es
out
insb
lcall
jbe
lods
jno
jmp
pop
xchg
int3
adc
iret
xchg
gs
mov
cltd
mov
test
jns
and
jb
jo
sub
popa
mov
lcall
pusha
enter
stos
in
xor
imul
mov
cli
lea
push
icebp
rcrb
das
lret
mov
mov
fs
push
fnstenv
add
negl
xchg
push
cwtl
lahf
cli
xor
mov
inc
push
pop
sbb
pop
xor
adc
push
dec
inc
inc
pop
test
inc
jne
add
mov
cmp
bound
popf
shrl
fistps
inc
xor
into
js
pop
mov
xor
or
jne
mov
out
outsb
sahf
pop
mov
sbb
stc
pop
out
dec
sbb
inc
cmp
mul
adc
adcb
mov
jbe
add
xor
mov
je
cli
xchg
das
or
cmp
inc
sbb
lahf
testl
pop
ficomps
pop
add
icebp
push
sbb
insb
add
adc
mov
add
mov
popl
xor
test
jo
sbb
mov
ret
pop
mov
mov
push
jge
mov
pop
clc
jns
pop
sbbb
push
cmpsb
xor
lea
loop
push
inc
ss
or
sub
ret
loop
mov
outsl
mov
ljmp
mov
ret
and
pop
push
push
sbb
sbb
fisubrs
adc
or
shlb
jl
cmp
push
int3
lods
les
mov
add
pop
imull
push
nop
cmp
or
imul
mov
xor
push
aaa
mov
lods
jne
mov
mov
xor
dec
gs
lock
enter
cmp
ljmp
jo
test
mov
nop
fbstp
shl
inc
and
ds
pop
inc
xchg
lahf
inc
lcall
aad
adc
ss
mov
dec
nop
xor
or
mov
popf
das
xchg
push
add
out
loop
test
adc
cli
inc
scas
lcall
in
push
std
push
sbb
pop
imul
push
jno
out
sbb
fiadds
jbe
cmpb
mov
test
push
test
mov
fmulp
mov
loop
repnz
and
add
inc
xchg
cmpsl
jnp
adc
stos
lds
mov
mov
cs
mov
adc
push
mov
mov
int
repnz
cmp
cmp
scas
stos
repz
lahf
jne
pop
xchg
rolb
das
cmp
mov
les
inc
dec
mov
inc
out
mov
xor
sbb
jnp
popf
sti
inc
xchg
scas
ja
and
or
add
aas
ret
and
dec
aad
out
jne
cwtl
lahf
lock
push
adc
xor
sub
pop
call
and
fldcw
les
add
xchg
adc
pop
cltd
cmp
lock
ret
or
dec
mov
cmp
ja
pop
fcomps
jb
mov
out
aas
dec
jae
mov
mov
frstor
push
sub
data16
mov
clc
mov
adc
jnp
ja
dec
ljmp
or
jne
ficoml
outsb
cmp
xchg
cs
cmp
mov
dec
or
lret
sub
mov
dec
adc
adc
lea
leave
adc
push
lahf
mov
mov
pop
bound
mov
push
xchg
and
mov
aad
push
gs
lods
sbb
movsl
ds
push
in
push
clc
push
leave
aas
mov
daa
sbb
mov
xor
out
jle
lds
xor
fsubr
jge
adc
sahf
cmp
lcall
xor
mov
mov
jp
push
pop
mov
xor
mov
pusha
insl
mov
cmp
into
lret
mov
sbb
stos
pop
sbb
cmp
push
fidivrl
mov
inc
test
sbb
xchg
pop
mov
scas
inc
push
stc
dec
cltd
rcrb
pop
xchg
mov
push
mov
add
sub
fisttps
pop
pop
mov
adc
xlat
dec
in
test
pop
nop
gs
adc
faddl
pop
add
inc
pop
rcr
sbb
shlb
and
pop
mov
push
das
rcr
push
xchg
inc
mov
jp
push
sbb
sub
fwait
xor
cmp
sub
xchg
inc
mov
call
aam
and
stc
adc
test
daa
cli
cli
sub
rcrb
test
mov
lea
jl
dec
addr16
sub
fdivr
js
int3
lds
and
and
iret
sbb
push
adc
dec
or
lods
sbb
mov
sbbb
sub
test
bnd
pusha
cwtl
or
cld
add
ret
ja
leave
push
mov
or
test
call
sarl
xchg
mov
shlb
out
mov
int
or
mov
in
jl
xchg
xor
adc
out
sub
test
pop
es
out
mov
sbb
mov
divb
and
jg
lods
stos
pop
push
test
mov
enter
int
fists
push
outsl
pop
jge
jmp
insb
icebp
adc
repz
es
rcr
or
je
shll
jo
fidivl
mov
sbbl
inc
ret
jno
adc
insl
daa
pop
inc
xlat
and
mov
jno
jns
imul
xor
pushw
ds
dec
xor
in
pshufw
sub
jecxz
rcrl
push
add
push
cmp
xchg
repz
mov
jbe
ret
out
push
mov
cltd
sbb
out
inc
jbe
call
or
popf
leave
jge
push
or
adc
je
cmp
loope
ret
jecxz
push
push
gs
fimull
jg
jae
adc
jp
fildll
mov
and
icebp
sbb
adc
arpl
xor
loop
xchg
scas
adc
ret
shrl
or
and
fisubrl
in
push
mov
or
fcmovnbe
and
push
adc
mov
mov
jnp
repnz
pop
push
inc
mov
pop
arpl
mov
add
dec
stc
fmull
pop
push
xor
pop
mov
mov
add
insl
mov
mov
pop
pop
stc
inc
xchg
sbb
popf
push
xor
test
inc
filds
ja
ficoml
adc
les
test
xor
fnstcw
mov
cltd
into
pop
ret
inc
in
add
fisubl
bnd
into
jle
test
xor
mov
fnstenv
and
sbb
cmp
xchg
push
or
sub
jns
pop
push
cmp
fadd
and
xor
xchg
and
pop
xor
pop
sub
cmc
and
xor
fstps
mov
test
adc
pop
loope
add
in
scas
and
sub
mov
aas
push
xor
adc
mov
xchg
mov
flds
arpl
mov
cltd
jecxz
enter
mov
xor
sti
adc
sahf
int
pop
push
test
iret
sub
inc
dec
arpl
ja
dec
adc
add
dec
lret
push
es
in
or
mov
mov
addb
mov
std
cmpsl
out
mov
jmp
fists
arpl
mov
ss
jns
rorl
xchg
cld
mov
jb
jp
ret
mov
jecxz
add
xchg
dec
mov
mov
fistps
jne
mov
pop
aam
or
or
js
jg
sub
jne
mov
push
cmpsl
mov
mov
sahf
push
out
aaa
enter
aam
xchg
cld
or
test
stos
cmp
jl
jo
cmp
pop
xor
mov
cmc
les
jge
ljmp
push
mov
push
in
mov
or
js
cmp
cmpl
jnp
dec
repz
retw
in
adc
fst
and
ja
jmp
repnz
enter
push
in
jbe
mov
popf
mov
pop
pop
add
push
inc
dec
inc
dec
adc
mov
testl
push
aad
pusha
inc
lea
cs
inc
inc
sbb
xchg
out
lahf
cmp
icebp
mov
push
loope
mov
bound
xorb
ficomps
push
es
pusha
dec
mov
cltd
inc
mov
out
lods
push
paddsw
lods
or
xchg
mov
jns
das
cmp
ljmp
orb
lcall
add
in
cltd
jge
aaa
push
push
or
loopne
jg
lods
push
fisttps
cmp
stc
repnz
fprem
movsl
sbb
push
xor
ljmp
push
ret
pop
sbb
pop
lock
out
push
cld
pop
int
mov
or
add
out
repnz
bound
adc
mov
hlt
fdivrp
clc
jmp
inc
mov
std
rclb
movl
mov
mov
pop
inc
testb
ja
inc
dec
or
dec
mov
pop
mov
repz
xor
mov
inc
fsubrl
inc
inc
mov
pop
out
and
jp
mov
push
or
xchg
insb
push
movsb
xchg
fdivs
fnsave
xchg
mov
sbb
or
cmp
fisttpll
xor
subl
sub
add
stc
jno
ficomps
and
ficoms
xchg
push
inc
inc
js
cmp
stos
push
mov
pop
nop
inc
push
jbe
testb
out
sub
mov
xorl
jno
xchg
imulb
mov
pop
lret
adc
sub
test
mov
mov
xlat
pop
lock
aas
sbb
jle
aas
push
aas
xchg
push
gs
insb
jmp
fisubl
imul
xchg
lret
mov
xor
cmp
insl
pop
or
dec
or
push
outsl
push
dec
sub
out
ret
dec
testb
lock
jnp
mov
jae
sub
adc
ret
movsl
push
mov
ret
mov
sub
xchg
xlat
and
inc
adc
xor
jnp
lods
add
inc
and
adc
pop
or
into
push
adc
fwait
inc
std
xor
push
int3
push
inc
dec
out
cmp
stc
movsb
jne
std
incl
mov
mov
lret
push
jl
xchg
cmc
and
inc
pop
inc
xor
mov
dec
mov
sub
mov
sbb
gs
push
aad
out
rolb
in
cmp
jle
out
rolb
mov
jmp
sub
jne
sub
daa
xchg
adc
cltd
xchg
xchg
imul
stos
push
cmp
enter
leave
pushl
lock
insl
fiaddl
fidivrs
mov
int3
cld
js
outsb
popf
out
xchg
les
mov
jmp
lret
and
daa
jle
xchg
jg
ss
mov
notl
dec
lock
sbb
push
mov
iret
mov
aam
pop
fs
ja
stc
int
push
cmp
lds
in
jle
lcall
push
mov
pcmpeqb
inc
inc
mov
das
mov
xchg
cmp
dec
movsb
xor
push
clc
dec
inc
cwtl
mov
pop
mov
negb
pushf
and
lret
jecxz
cmpsb
adc
xor
mov
inc
or
inc
stos
aas
cmp
and
dec
ljmp
ret
and
subb
mov
push
push
pop
cmp
jg
or
mov
lahf
xchg
outsl
xchg
loop
shr
cltd
jg
testb
arpl
movsb
push
dec
mov
aad
fs
lret
arpl
repz
inc
scas
addb
pusha
fs
pop
mov
aaa
outsb
shrb
rcrb
std
loope
inc
jo
bnd
sti
mov
mov
imul
pop
cmp
dec
pop
jb
inc
and
shl
xor
mov
adc
xchg
aas
add
jl
and
bound
nop
daa
mov
push
loope
mov
inc
call
pop
add
push
xor
aam
cmpsl
loope
popa
jle
mov
and
pop
sbb
mov
xchg
ljmp
sahf
imul
rorb
lret
cmp
cmp
in
dec
sarb
inc
jbe
cmp
dec
movsb
lret
xchg
xchg
add
pusha
push
xlat
mov
and
mov
dec
stos
adc
pushf
mov
cmpsl
mov
fwait
out
and
cmp
push
or
mov
jae,pn
mov
fsubl
add
leave
cld
in
shll
inc
xor
inc
push
mov
iret
repnz
lods
dec
push
jbe
lea
jne
xor
dec
faddl
cltd
lret
mov
and
jnp
jl
or
jg
mov
dec
add
bound
xchg
pop
adc
aaa
or
movsb
mov
test
stos
ret
jmp
stos
inc
je
mov
or
cmp
sub
fdivrl
int3
sub
sbb
or
lods
dec
pop
mov
insb
mov
or
cmp
sub
fdivrl
int3
sub
sbb
or
lods
dec
pop
mov
insb
mov
or
lret
fnstsw
int3
sub
sbb
or
lods
dec
pop
mov
insb
mov
or
mov
cmp
adcl
add
inc
movsb
push
mov
int3
int3
int3
int3
fistpll
in
mov
or
cmp
sbb
or
cmp
cmp
mov
fwait
in
mov
lods
lret
pop
cmp
sbb
jnp
imul
dec
fs
xor
cmp
jmp
fldt
adc
or
ja
jle
push
mov
test
cwtl
cmp
or
xchg
sbb
loope
pop
mov
sub
jl
imul
and
stc
sbb
xchg
rcrl
and
mov
push
jbe
cmp
dec
aam
fldt
jp
stos
hlt
movsb
adc
add
add
inc
push
lods
xor
loopne
inc
clc
in
pop
jecxz
or
cmp
pop
rcll
je
cli
add
aaa
into
daa
dec
jl
iret
jl
in
lret
pop
imul
movsb
and
and
adc
mov
inc
scas
cltd
sub
dec
sub
or
lods
cmp
das
dec
xchg
in
mov
hlt
jmp
fisttpl
lret
lcall
or
imul
sub
mov
mov
loop
xchg
loop
enter
pop
pop
pop
pop
sbb
dec
outsb
sbb
push
pop
dec
or
fwait
stc
cmc
mov
lret
cmp
pop
jl
adc
sbb
push
ds
sbb
repz
jmp
fldt
jl
insb
or
or
cmp
sub
fdivrl
in
mov
lods
lret
pop
cmp
sbb
jnp
imul
dec
fdivrl
sub
push
aaa
repz
bound
loopne
loop
xor
xlat
push
mov
jp
dec
cmovno
stos
data16
clc
cmp
dec
push
mov
repz
mov
lcall
jne
dec
loop
test
adc
rol
xor
mov
push
test
add
ret
cmp
sub
jecxz
cmp
test
lds
jmp
pop
adc
push
shlb
ja
mov
push
nop
mov
pop
push
lea
push
pop
sub
or
into
ss
scas
cbtw
jp
xor
xchg
xchg
imul
shl
pop
push
les
lods
sarl
cli
out
pop
lret
mov
mov
test
jp
je
xor
cltd
into
lock
hlt
jae
cmp
mov
testl
or
pop
fsubrp
in
push
add
jae
aad
xor
fsubl
dec
mov
aad
mov
loope
outsb
jecxz
add
sbb
sub
and
inc
or
mov
pop
rcrl
lcall
in
jno
rcl
inc
xlat
je
clc
mov
adc
mov
push
and
mov
sub
inc
cmp
pop
mov
jp
cmpxchg
cmc
addb
fcmovnu
adc
or
jno
cwtl
jbe
cld
xchg
adcl
leave
mov
fdivp
loop
in
out
gs
stos
fisubrs
mov
popf
repz
lea
cmpsb
or
aaa
and
iret
mov
lock
cmp
cwtl
fdivs
subl
push
dec
push
idivb
ret
inc
cmc
push
cmpsb
pop
jae
scas
cmp
pushf
call
dec
mov
fisubrl
outsb
loopne
negb
sti
lret
sarl
ja
inc
push
sahf
mov
bnd
rcrl
inc
sbb
lea
jp
gs
xchg
ja
fbld
das
mov
insb
cs
popf
pop
cs
sub
sub
fmul
jge
mov
push
pop
ds
icebp
mov
lods
mov
mov
mov
add
dec
jno
mov
std
nop
lods
jmp
cmpsl
lea
adcl
lcall
pop
sbb
pop
cmp
xchg
and
mov
dec
filds
aad
push
fwait
jmp
xor
adc
mov
pop
xchg
ret
cmp
mov
sahf
out
in
inc
outsb
roll
adc
cwtl
nop
int
ja
jae
aas
and
cltd
push
int3
or
out
cmp
mov
aaa
inc
mov
inc
mov
cmpsb
push
push
call
push
xlat
dec
inc
mov
jmp
es
adc
fidivrs
mov
ja
cmp
cmc
ret
rcll
pop
in
clc
daa
fistl
inc
mov
inc
out
cmp
fcmovnbe
in
jle
cmp
sahf
test
dec
data16
call
mov
pop
xor
cmp
pop
sub
adc
lock
pop
cmpsb
movsb
enter
cmp
and
push
mov
in
mov
pop
imul
iret
inc
dec
mov
jb
sub
test
les
mov
scas
lock
rcrl
cmp
imul
movups
mov
dec
sbb
jbe
cli
add
xor
leave
ss
adc
scas
lahf
and
gs
hlt
imul
sbb
out
mov
add
mov
lds
xchg
mov
or
frstor
sub
mov
lock
dec
neg
adc
mov
or
ret
test
push
mov
mov
data16
jne
scas
movsl
movsb
adc
iret
pop
add
push
xchg
xor
inc
and
int
je
mov
and
imul
mov
lret
cld
mov
push
or
clc
nop
fidivrs
cld
mov
aam
negb
mov
mov
divl
inc
leave
inc
fstps
xlat
adc
fs
push
add
rorl
lahf
push
das
mov
fldenv
pop
aam
testb
cld
repz
xor
inc
pop
stos
or
cltd
cmp
fs
loope
jb
subl
into
test
mov
pop
mov
pusha
insb
arpl
nop
xor
or
add
xchg
push
mov
cltd
loopne
pop
xor
jns
xchg
push
jmp
mov
sub
imul
scas
inc
shl
xchg
stos
loopne
sub
ja
mov
inc
push
pop
leave
jns
fidivs
xor
inc
add
add
leave
mov
mov
mov
into
cs
insb
sahf
cmpsl
lods
inc
pop
sti
jp
mov
clc
jb
jmp
cmp
jbe
incb
repz
outsl
data16
repnz
cs
outsb
aaa
mov
xchg
and
add
ss
ret
cmpsb
cli
xchg
inc
loope
jmp
stc
inc
pop
mov
or
imul
jb
jns
push
aaa
lret
xchg
in
pop
adc
sub
add
pop
mov
push
jmp
sbbl
mov
pop
adc
lcall
xor
sbb
sub
outsb
andb
xor
inc
in
dec
lods
loope
jo
outsb
push
cmc
fsubs
dec
mov
ss
orl
fsts
xlat
mov
sbb
ja
push
pop
movl
push
jmp
and
adc
cli
pushf
xor
shlb
repz
test
xchg
js
inc
mov
cmp
icebp
pop
stos
jo
xchg
int
es
or
stc
test
mov
scas
xor
enter
cltd
jno
jo
jno
ret
pop
mov
xchg
xor
negl
fmuls
mov
inc
adc
mov
fcomp
popf
mov
pop
mov
adc
mov
xchg
mov
ja
rcll
insl
mov
insl
xor
ja
rcr
push
mov
inc
in
out
jecxz
arpl
cltd
xor
jb
add
sbb
pushf
into
test
mov
push
cwtl
jge
sub
je
dec
movsb
pop
in
mov
sbb
les
sbb
cmp
xor
aas
cmp
fildl
cli
fimuls
inc
mov
push
sbb
add
push
lret
call
gs
popa
mov
adc
mov
fldenv
pushf
inc
cli
add
lea
pop
mov
test
into
outsb
pop
fildll
xchg
sbb
jmp
shl
dec
adc
xchg
bound
xchg
and
jl
mov
sub
mov
inc
adc
fwait
sbbb
lldt
movsl
lcall
mov
cld
adc
shlb
dec
add
adc
lods
or
cwtl
imull
test
lds
cli
push
push
pop
push
in
and
mov
jae
outsl
sub
pop
fnsave
push
xchg
mov
call
fnstenv
inc
lods
jg
jne
subl
outsb
xor
jne
js,pt
push
outsb
fsin
dec
or
and
add
jge
dec
push
test
and
pop
mov
sub
or
mov
xchg
jp
rcll
inc
out
cltd
imul
movsb
sub
es
call
xchg
int
mov
xor
dec
daa
data16
leave
mov
adc
cmc
ljmp
push
scas
adc
pop
pop
pop
fisubrl
sub
mov
xchg
inc
dec
xchg
mov
es
push
mov
push
mov
jl
pop
adc
outsb
lret
fstpl
sub
sbb
repnz
cli
push
and
push
or
es
xchg
push
pop
out
mov
xlat
mov
jmp
pop
mov
dec
or
cmpsl
xchg
fiaddl
xor
dec
mov
js
es
test
andl
jo
in
and
repnz
movsl
out
mov
push
sbb
ret
jecxz
push
mov
fsubs
jg
or
and
cmpsb
test
sub
es
cmp
mov
aad
mov
popa
test
loop
inc
test
aam
into
mov
shl
push
sbb
bound
maskmovq
out
pushf
cs
add
mov
inc
fisubrs
stos
push
fdivs
push
dec
addl
sahf
gs
jbe
les
push
sub
mov
sub
mov
movsb
mov
push
test
jnp
iret
cmpsl
stos
xchg
sarb
lock
lods
roll
dec
mov
fdivl
insl
das
stos
jne
adcl
sub
lds
dec
add
hlt
dec
int
outsl
ja
cmp
mov
inc
sub
imul
dec
adc
scas
xchg
xor
xchg
je,pt
dec
lds
lods
pop
cwtl
add
and
dec
in
inc
mov
push
insb
enter
sub
popa
lea
add
pop
insb
subl
jecxz
lock
stos
leave
fimull
or
loope
ljmp
inc
mov
jp
jb
sub
and
pop
or
in
inc
sub
cli
imul
rorl
inc
jo
aas
xchg
fdivrs
fisubrs
bound
test
push
ljmp
std
sub
insb
inc
jmp
xchg
pop
inc
outsl
ret
or
inc
lods
jge
push
testb
popa
and
xlat
or
and
mov
xor
xor
lea
push
orl
out
movsl
dec
scas
cs
mov
xor
cmp
clc
ss
sbb
in
int3
cmp
push
lods
add
adc
fidivrl
lahf
xchg
jg
enter
shl
or
add
loope
lret
movsl
dec
nop
xor
adc
adc
int3
cmc
sub
push
lds
in
rol
pusha
int3
xchg
lds
inc
mov
mov
cmp
in
mov
out
inc
sbb
mov
insl
mov
test
fsts
sub
jno
xor
pop
out
mov
pop
mov
loop
dec
popa
cmp
and
adc
in
neg
mov
mov
add
xor
jg
sbb
leave
jmp
pop
add
sti
adc
or
dec
push
cmp
dec
xchg
push
imul
or
aam
das
push
test
adc
xchg
inc
ljmp
xor
clc
lret
mul
sbb
dec
mov
cmp
pop
and
dec
xor
loop
jnp
push
mov
cmp
test
push
pop
ss
loop
movsb
pop
bound
pusha
or
int
cld
or
scas
mov
insl
and
jecxz
sbb
lret
movsb
mov
push
inc
adc
xor
popa
fs
orb
popf
lods
lds
andb
popa
scas
push
add
inc
fdivs
or
pushf
shl
pop
ds
pop
jle
sbb
icebp
mov
cmpsl
mov
xchg
and
pop
adc
sbb
test
push
sbb
and
push
adc
arpl
push
mov
int
mov
push
mov
cmc
sbb
call
repnz
jmp
repz
loopne
mov
push
in
nop
arpl
shll
or
cmp
stos
adcl
mov
sti
cltd
scas
aaa
jge
sbb
lahf
sbb
icebp
cmc
pop
cmp
and
inc
fimull
sub
icebp
or
add
cli
cli
in
roll
mov
xchg
ret
adc
js
jne
sub
add
hlt
xor
fisttpll
popf
movsb
mov
ficompl
sahf
pushf
cld
repnz
insb
jnp
mov
loop
sbb
mov
ret
shll
pop
out
movsb
mov
mov
jno
loope
pop
cmp
fnstsw
mov
mov
nop
inc
les
push
mov
mov
shrb
cmp
pop
stc
mov
pop
or
and
int
mov
aam
dec
int3
lods
insb
adc
add
mov
lcall
and
or
call
cld
mov
inc
sub
xor
dec
mov
pop
mov
cmp
mov
sbb
lods
popa
aam
movl
stos
jo
jnp
sahf
orl
jp
push
dec
inc
fwait
mov
push
call
pop
ljmp
xorb
or
or
add
insb
mov
jnp
cmp
stc
ss
stc
dec
pop
lds
xchg
out
fstpl
jb
xchg
subl
call
mov
lods
add
jbe
jmp
rorl
and
sbbb
xor
jno
push
lret
and
lock
mov
aad
fdivr
mov
pop
lock
dec
jbe
lret
pop
cltd
cltd
push
xchg
lret
fstpt
mov
dec
sqrtps
cmp
iret
push
xchg
adc
dec
mov
xchg
mov
pusha
pop
js
xor
cmpsb
popa
push
cmp
fbld
mov
and
xorb
movsb
xchg
inc
or
call
adc
cwtl
inc
and
push
push
scas
xchg
fs
aas
aad
push
xor
sub
inc
inc
jge
test
outsl
shlb
in
xor
mov
jge
jge
insb
insb
ret
dec
pushf
sbb
mov
push
inc
xor
testl
or
mov
ja
out
cmpsb
jl
fs
stc
and
cmp
sub
test
sub
xchg
fs
cmp
leave
loopne
xor
dec
lcall
insb
inc
pop
xchg
jo
aam
icebp
jb
add
cwtl
jns
mov
dec
mov
cmp
leave
mov
mov
outsb
lods
je
jp
add
setp
jae
cmpsb
or
add
rcl
es
inc
icebp
fistl
mov
xchg
lods
mov
sbb
cwtl
outsb
mov
ds
pop
sti
jmp
aaa
enter
sub
mov
test
aam
ja
pop
mov
mov
mov
fcmovnu
loop
cli
adc
nop
leave
stc
aad
or
cmpsb
mov
cmp
rep
arpl
loope
inc
xchg
fldenv
mov
in
popl
imul
shrl
lock
sbb
pop
iret
sahf
and
pop
pop
mov
mov
mov
mov
imul
fsubrl
xchg
jge
sbb
iret
loopne
gs
jecxz
sbb
divb
pop
testl
mov
rcrl
mov
jg
pop
xor
xor
xchg
cs
jne
xchg
std
stc
pop
xor
sbb
dec
bound
fwait
and
ret
pop
xorb
mov
jne
cmp
or
mov
xchg
mov
add
add
call
mov
jle
movsl
addr16
pop
cmp
rclb
jo
ret
in
adc
dec
xor
sub
lahf
aaa
pop
xor
mov
and
dec
lret
pop
andb
dec
and
enter
inc
add
int3
dec
iret
or
jecxz
cli
cmp
pop
fimull
dec
pop
sahf
mov
mov
sbb
cs
or
add
lock
lods
jge
xor
inc
aad
bound
adc
icebp
cmp
mov
xor
or
jmp
and
mov
mov
stos
pop
fdivrs
mov
fisubs
xor
mov
cmp
sub
nop
push
cmpsl
fxam
mov
dec
push
mov
or
mov
mov
pop
loopne
inc
stos
fadds
loop
insl
dec
stos
mov
or
fwait
cmp
fsubl
test
pushf
xchg
xor
insb
jl
push
push
mov
push
mov
fidivs
push
jns
inc
shll
pop
cmp
mov
outsl
fildll
push
mov
testb
test
add
adc
fisubl
or
faddl
add
stos
mov
out
stos
xchg
xor
test
xor
fcoms
inc
push
out
sbb
leave
jo
ss
daa
std
js
jmp
cmp
sbb
mov
lods
fnstcw
clc
or
mov
mov
dec
inc
std
mov
out
fists
mov
imul
lret
mov
xorl
sub
scas
xor
shlb
call
mov
rol
jae
xor
iret
das
mov
pop
sbbl
mov
incb
in
jnp
xlat
xor
test
clc
cmp
cmpsl
rorb
iret
shrl
adc
test
test
pop
adc
inc
lahf
cld
or
fwait
bound
aam
cwtl
xor
aaa
fwait
add
imul
or
ss
xor
imul
out
js
mov
mov
sbb
cmpb
sti
sbb
jnp
popa
jle
arpl
ds
and
adcl
lahf
or
and
lods
push
jecxz
mov
outsl
js
movsb
es
jl
cli
test
pop
push
push
int
add
inc
mov
add
orb
pop
call
sbb
dec
ds
pop
or
movsl
out
mov
add
ljmp
iret
xchg
imul
lahf
dec
stc
mov
orl
and
cwtl
roll
cmp
or
ljmp
cmpsl
pop
lock
push
dec
adc
call
adc
add
dec
jbe
mov
xor
loope
pop
adc
pop
into
shrl
out
xchg
push
in
jnp
ljmp
and
inc
adc
push
dec
xchg
mov
and
cs
jno
std
cmp
mov
push
stos
pop
ss
pop
sbb
daa
jp
or
inc
sub
es
pop
sbb
pop
ljmp
cmc
mov
inc
dec
sbb
into
pop
fisubs
mov
aaa
pusha
shrl
mov
pop
in
daa
daa
jge
pop
mov
push
push
andl
iret
stc
enter
add
xchg
loopne
mov
push
mov
cli
imul
dec
adc
pop
jg
neg
dec
adc
inc
test
pop
add
divl
ja
adc
fldt
lret
ja
orb
pop
cmp
stc
outsb
adc
sbb
xor
addl
daa
daa
test
pop
ret
insl
push
push
inc
fistpll
or
lret
lds
push
fs
movsl
jl
add
push
push
dec
icebp
jns
fldt
scas
mov
and
stos
adcl
arpl
sub
bound
lret
int3
jno
sub
scas
cli
imul
lea
add
mov
xor
aam
mov
es
ds
scas
scas
push
pushf
jb
sarl
idiv
pop
fistl
jae
jae
cmp
adc
rclb
out
cmpsl
adc
pushf
scas
fsts
iret
or
aaa
rcrl
cmpl
push
xor
bnd
call
sbb
stos
imul
mov
inc
add
clc
testl
dec
loop
popa
sub
jl
sar
js
add
jo
icebp
test
test
cwtl
jne
or
mov
lock
js
fsubrs
insl
lods
ja
mov
adc
lds
pop
and
popa
popa
jg
mov
pop
ret
aaa
scas
pop
gs
notb
mov
je
aas
and
jns
int3
ljmp
sub
push
push
cmp
shll
pop
xor
xchg
int3
loope
imul
push
and
fs
xchg
es
int3
rorl
mov
xor
stc
dec
and
outsb
inc
in
je
into
das
outsb
imull
dec
mov
ja
bound
fnstcw
icebp
enter
das
sub
cmpsl
mov
jno
mov
je
std
jbe
pop
dec
jl
cld
push
cwtl
pop
fidivs
popf
inc
jne
cmp
inc
fwait
jae
iret
xchg
mov
cli
imul
lret
xchg
mov
in
adc
sbb
xchg
add
lahf
fidivl
xchg
das
ljmp
fdivs
mov
sbb
mov
je
shl
pop
test
hlt
out
stc
out
xor
sbb
and
cmp
pop
fwait
pop
xor
pop
imul
push
jns
scas
aad
jnp
add
clc
insl
scas
pop
adc
jl
sub
jle
in
add
mov
fisubrs
adc
push
cmovg
pop
xor
mov
cli
movsb
lds
push
in
xor
jl
inc
shrb
je
adc
bound
adc
outsl
ss
call
add
in
push
xchg
sub
dec
pop
lahf
xor
push
xchg
lret
adc
ljmp
outsl
push
xchg
mov
fwait
jne
das
arpl
xor
or
jle
fistpll
je
xchg
adc
sub
cmpsb
pop
test
push
mov
or
fldt
xor
mov
xor
dec
cmp
cmc
call
jne
shl
inc
mov
sahf
dec
test
repz
mov
shl
push
mov
pop
in
dec
jne
fxch
andb
pop
xchg
jg
je
adc
movsb
xchg
fs
psubusw
inc
ret
push
dec
aad
imul
popf
sub
test
int
push
inc
jae
fists
mov
shll
std
insb
stos
add
mov
adc
mov
pop
jns
lods
lcall
mov
movsb
push
inc
dec
rorb
repz
xlat
iret
std
out
idivb
nop
loopne
xchg
xchg
and
jo
icebp
test
pusha
mov
and
inc
cmp
ret
stos
dec
adc
mov
cli
push
sub
cmp
out
sbb
pop
sarb
dec
aaa
cmp
test
iret
icebp
dec
adcb
pop
mov
call
ret
out
ljmp
mov
adc
dec
mov
xor
arpl
lea
mov
sub
addr16
mov
adcb
and
and
mov
sbb
leave
inc
xchg
rcrl
pushf
in
add
ljmp
jle
push
nop
jge
cli
int3
mov
in
sbb
lahf
stos
nop
js
stos
mov
sti
mov
mov
cmp
sbb
jnp
imul
dec
fdivrl
in
mov
lods
lret
pop
cmp
sbb
jnp
imul
dec
fdivrl
in
mov
mov
fldt
mov
insb
or
sbb
cmp
les
mov
int3
mov
sub
pop
cmp
jl
repz
int3
int3
int3
int3
push
mov
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
mov
push
push
call
mov
call
push
push
pushl
mov
pushl
pushl
call
mov
push
push
pushl
call
mov
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
call
push
mov
call
xor
leave
ret
mov
or
cmp
sub
loopne
push
sbb
push
stos
lcall
push
sbb
dec
ljmp
lret
sub
pop
lcall
lcall
push
sbb
or
cmp
sub
fimull
lret
sub
pop
lcall
lcall
push
dec
mov
sub
or
rcrl
cmpl
sti
cmp
lods
mov
jecxz
rolb
adc
lock
mov
jecxz
daa
imul
xor
lahf
iret
or
int
add
mov
fidivl
sbb
cmp
scas
sub
and
pop
fwait
lcallw
mov
pop
mov
dec
cltd
pop
ljmp
imul
jne
inc
push
repnz
decl
xchg
dec
jg
adc
xor
push
orb
movsl
pop
pop
iret
jle
push
in
sti
das
jmp
inc
fimull
lret
sub
pop
lcall
lcall
push
sbb
or
cmp
insb
outsb
mov
sbb
lods
sbb
das
lret
cmp
cmp
aad
into
add
ja
jae
mov
dec
orb
mov
jp
adc
ret
push
xchg
jne
gs
dec
cmc
inc
insb
mov
pop
mov
sahf
sbb
dec
mov
push
lcall
push
sbb
or
cmp
sub
fimull
lret
sub
pop
lcall
lcall
push
sbb
or
cmp
sub
fimull
fbstp
pop
je,pt
aam
jnp,pn
fldl
pushf
adc
je
rcll
push
adc
aas
aad
loop
sbb
mov
cli
lahf
test
mov
push
pushl
mov
sub
or
push
loope
sbb
inc
mov
add
push
inc
fs
or
xor
test
leave
add
push
insb
add
inc
adc
inc
or
sub
lahf
pushf
xor
ss
sbb
insb
cmp
pop
in
sbb
int3
sarb
std
test
addb
sbb
mov
pop
cwtl
imul
cwtl
sti
mov
sarl
stos
adc
dec
cld
movsl
fildl
in
int
pusha
cmp
add
xchg
and
aad
pop
and
aaa
inc
inc
sarb
sbb
imul
insb
adc
and
jl
daa
addb
aas
rsm
out
in
inc
xchg
sbb
arpl
xor
shl
pop
cmp
xor
and
mov
inc
stos
pop
iret
dec
enter
fwait
dec
mov
mov
add
xchg
fisttpll
nop
or
sbbb
test
aaa
insl
mov
sub
fisubrl
push
pop
les
sub
mov
mov
mov
std
cmpsb
push
mov
or
in
fnsave
out
int
mov
mov
and
and
inc
out
cmp
insl
inc
adc
test
hlt
scas
out
out
bound
push
dec
pop
fnstcw
and
jmp
dec
xchg
xor
clc
sbb
dec
mov
sbb
push
mov
add
imul
sahf
pop
std
xchg
mov
scas
and
insb
lods
out
clc
mov
inc
cmpb
inc
and
repz
movsb
sub
dec
mov
and
call
xchg
cmp
mov
cmpsl
rolb
clc
jne
push
mov
xchg
arpl
out
inc
popa
and
sbb
sub
mov
roll
aam
scas
loop
push
inc
scas
push
fimull
jmp
add
add
inc
and
cmc
mov
ret
lods
sbb
sub
fiadds
push
jnp
mov
mov
dec
mov
xor
rclb
lock
cld
pop
mov
rcr
outsl
inc
shrl
in
cmp
sbb
scas
cmp
pop
push
jecxz
mov
inc
pop
xor
inc
cli
push
cwtl
mov
inc
rclb
pop
adc
mov
xor
xor
rcpps
fsubs
pop
mov
aad
enter
cmp
insl
jmp
out
mov
cli
mov
lock
adc
mov
sub
cltd
push
and
inc
subb
adc
and
fldl
pop
out
mov
mov
dec
adc
mov
lods
jno
push
not
mov
or
mov
dec
std
sbb
pushw
shr
jno
andb
aam
lcall
push
notb
std
mov
std
mov
fnstcw
aaa
push
sbb
imul
mov
mov
jp
inc
pop
ret
jbe
jl
mov
ljmp
mov
pop
lcall
dec
lods
dec
mov
ljmp
cmp
xchg
add
push
jb
and
xchg
icebp
js
mov
pop
es
into
lds
mov
outsl
mov
ljmp
inc
ljmp
scas
or
jo
scas
fwait
clc
push
xchg
loope
lods
sbb
inc
mov
dec
clc
cmpsl
js
lods
out
sub
iret
in
data16
jbe
rcrl
and
xor
mov
negl
aas
ljmp
mov
lds
xor
sti
ds
mov
popf
cmp
cmc
fxch
xchg
gs
insb
inc
int
pop
mov
mov
movsl
dec
scas
ljmp
jbe
data16
ficomps
sub
xchg
jae
daa
ret
pop
pop
cltd
push
shrb
jo
sbb
gs
xor
sub
das
add
jbe
add
jae
mov
push
mov
out
call
and
and
bound
sbb
pop
xorb
push
daa
mov
mov
mov
outsb
movsb
insb
imul
sbb
jl
jg
push
sti
xor
cmp
xchg
pop
sub
pop
ljmp
ret
shr
je
addr16
and
pusha
mov
add
mov
sub
test
mov
dec
lock
fwait
fwait
sarb
cmpsl
mov
scas
sub
daa
sbb
dec
aam
ret
hlt
movsb
xor
aad
mov
not
add
and
pop
fildl
add
cmp
and
mov
add
and
lcall
inc
and
xchg
sub
ret
adc
loop
shr
mov
es
mov
aas
lods
dec
dec
addr16
jmp
int3
mov
daa
cmp
out
out
jle
int
xor
mov
adc
sub
push
fs
ljmp
sbb
imul
add
pop
insl
inc
jns,pt
insl
mov
pop
clc
in
mov
cmpl
sub
cmp
adc
xor
sub
adc
jae,pn
dec
cmpb
and
cmp
call
loop
decb
cltd
ficompl
jbe
mov
mov
pop
push
in
outsl
jnp
shr
aad
stos
xor
fwait
int3
ljmp
mov
loop
sti
cs
roll
jmp
shll
lea
mov
dec
dec
jno
xchg
inc
dec
push
push
movsb
pop
enter
aam
jle
clc
insb
int
add
mov
mov
rcl
adc
iret
xchg
mov
sub
fnstsw
push
or
and
icebp
roll
mov
aam
jne
xchg
js
scas
sahf
dec
mov
push
jbe
add
aaa
ljmp
pop
xchg
push
sbb
stos
pop
fwait
or
cmpsl
out
dec
cmp
cwtl
sarb
jg
roll
mov
inc
mov
into
sub
notl
leave
rcrl
dec
cmpb
pop
mov
lods
pop
addl
push
mov
jmp
xchg
sbb
cs
out
cmc
pop
pop
sahf
bound
sbb
cmp
inc
iret
repz
or
inc
push
call
xchg
push
fidivs
fsubl
in
lret
and
clc
pop
xor
or
cmp
cltd
inc
xor
gs
mov
add
mov
lahf
popf
jo
dec
test
into
pop
lods
jmp
jg
xor
lahf
jmp
leave
dec
adc
mov
add
push
mov
and
adc
shll
mov
adc
dec
es
ss
jns
aad
repnz
shrb
push
jp
in
mov
mov
adc
or
mov
aaa
idivb
mov
adc
fucomip
jo
lret
negb
sub
dec
sbb
jg
dec
divb
mov
pop
sbb
mov
and
cltd
or
xor
mov
fstpl
push
outsl
insb
xchg
xlat
mov
mov
sub
sti
xor
sub
or
sbb
push
orl
testl
dec
lret
push
cld
mov
daa
out
sbbl
outsb
xor
loopne
bnd
jle
xchg
cmc
sub
sub
std
cmpsb
or
xchg
adc
sbb
xor
sbb
icebp
xchg
dec
std
mov
jb
lock
daa
inc
test
ja
push
enter
inc
sub
or
xchg
cmp
mov
adc
mov
les
and
mov
lea
cmpsl
pop
js
adc
inc
in
jnp
push
and
in
ds
push
xchg
lret
sbb
pop
jecxz
mov
pop
je
xor
jno
mov
inc
mov
test
loopne
sub
cld
cmp
add
aam
mov
sub
or
into
cmp
testl
lds
negl
test
clc
xchg
push
inc
mov
cmpl
bound
or
adcb
add
into
cs
xor
add
or
pushf
push
adc
or
xchg
cli
push
insb
inc
adc
push
xor
mov
dec
jnp
ss
mov
sub
sbb
xchg
arpl
fistps
or
mov
nop
outsb
sbb
pop
les
les
xor
xchg
jl
jge
dec
stos
jp
lods
xor
sub
ret
sub
scas
xlat
jbe
fdivrp
jo
dec
xor
sub
pop
xchg
std
jo
cs
xor
inc
add
add
adc
mov
int
inc
dec
push
fsubrs
pop
ret
lds
daa
in
sub
fsubs
les
or
push
fstp
cmp
lahf
sub
cmc
mov
inc
add
test
mov
cltd
dec
jle
insb
jge
imul
out
mov
dec
sub
cmpsb
jmp
and
cmp
xchg
xor
adc
into
add
pusha
dec
xchg
and
js
jno
dec
push
dec
or
lods
in
das
pop
lock
insb
sub
fucomi
fistpl
sbb
loope
fistps
out
dec
mov
xor
cmpsl
sarb
pop
cmp
ja
mov
push
jo
add
ret
pop
jg
dec
or
aam
out
leave
outsl
jne
out
data16
add
adc
cmp
pop
and
sahf
fdivrl
mov
add
inc
inc
jns
sbb
jnp
es
gs
add
int3
mov
enter
mov
mov
inc
xchg
cmp
in
add
sbb
je
ja
mov
out
cmp
fldenv
push
out
ret
iret
fnstsw
add
dec
and
jnp
test
mov
les
push
or
inc
cwtl
cmpsl
mov
lds
sub
lret
dec
loop
rol
loopne
ds
jno
shll
xchg
stos
ficoms
dec
icebp
adcb
push
inc
lods
fldl
mov
loop
sarl
repz
jle
add
mov
push
push
dec
pop
cmp
mov
je
fwait
mov
mov
loope
jnp
shll
insl
xchg
js
and
cmp
mov
xor
imul
je
xor
pop
jnp
ljmp
lcall
mov
fiaddl
test
adc
divb
jecxz
xor
mov
or
sub
sbb
push
jbe
jb
ret
lock
or
pop
cmp
mov
lcall
jmp
jg
stos
inc
ds
enter
out
cmp
push
lcall
enter
pop
aad
lret
and
pop
fs
mov
repz
ret
xchg
inc
in
pop
cmp
mov
sub
push
mov
mov
stos
adc
and
xchg
push
sub
fucomi
divb
mov
cmp
push
inc
movsb
je
xchg
xorl
mov
fcomps
or
cmpsb
sbb
pop
adc
fdivrl
mov
or
mov
adc
push
adc
push
into
andl
insb
mov
into
dec
sbb
push
xchg
aas
pop
test
mov
sub
inc
cli
cmc
jae
adc
or
sub
les
sbb
daa
js
mov
movsb
hlt
mov
out
dec
mov
mov
lods
add
inc
add
dec
aam
rcr
cmpsb
adc
push
movl
cmp
aaa
roll
pop
ss
push
push
inc
cmp
mov
call
into
jno
push
rcl
sti
inc
into
sbb
ss
inc
jmp
xchg
push
das
mov
aam
jl
add
dec
adc
xor
vpunpckldq
mov
adc
push
cmpsb
mov
pop
dec
cli
notrack
sub
nop
or
jmp
mov
rclb
and
call
inc
fcomps
push
push
sbb
test
mov
xchg
jg
jo
add
lods
dec
xchg
mov
adc
sahf
add
and
dec
sbb
dec
xchg
and
sti
jmp
cmp
loope
mov
lret
and
fmull
inc
jbe
cmp
mov
pushl
aam
mov
fnstenv
cs
leave
fwait
add
sbb
push
and
mov
rep
loope
adc
inc
inc
jle
or
push
loope
adc
xchg
cmpsb
xor
sub
mov
insl
inc
mov
jbe
shll
add
imul
push
dec
jmp
rorb
outsl
jecxz
js
std
out
sub
sub
cmp
dec
cld
movswl
insb
push
mov
jne
rcll
in
mov
sub
mov
dec
or
aam
outsl
cmp
rcl
cmc
pop
xchg
xchg
cmpsl
xchg
notb
fwait
mov
cmpsb
addr16
xchg
in
daa
jb
ror
repnz
jnp
mov
sbb
sub
xchg
mov
inc
cmp
inc
gs
faddp
sub
int3
fs
dec
ret
push
js
xchg
or
pop
fsubl
dec
dec
push
filds
pop
clc
fiadds
rcl
jecxz
test
jecxz
sbb
mov
cmp
xlat
xlat
jnp
shrb
pushf
pop
fsts
lcall
decb
xchg
stc
ss
xchg
scas
aaa
icebp
out
ficoms
xor
mov
ficoms
push
push
lds
cwtl
pop
gs
push
movsb
daa
loopne
inc
xchg
mov
stos
lock
sahf
dec
sti
adc
in
leave
push
push
loop
mov
inc
jmp
push
jno
out
int3
sbb
lret
notl
lret
sahf
cld
inc
out
mov
int
or
ljmp
xor
mov
subl
pop
mov
adc
lret
repnz
adc
add
push
into
dec
std
loopne
xlat
sub
adc
sbb
nop
sbb
jb
loop
push
cs
insb
std
es
in
loope
lret
ror
in
cs
sbb
iret
mov
xor
roll
jg
jl
xchg
push
jl
mov
fiadds
inc
add
xor
dec
imul
mov
or
enter
ficompl
pop
testb
pop
lods
push
dec
shlb
rorb
mov
xchg
mov
adc
cs
mov
and
pushf
mov
int3
into
jecxz
cmp
mov
xor
pop
xchg
mov
hlt
mov
or
mov
push
cmp
rcr
xchg
jns
cs
xor
and
out
jl
jl
scas
mov
sbb
mov
adc
jb
pusha
push
xor
bound
add
mov
add
push
sbb
lahf
subl
insb
shlb
adc
leave
push
mov
andl
inc
aad
pop
scas
rcrl
into
mov
and
lret
and
scas
outsl
adc
cmpsl
les
into
scas
jecxz
sub
sub
dec
test
adc
sub
in
jp
cmpb
inc
mov
inc
insb
xor
push
movsl
pop
dec
fwait
lret
mov
xor
inc
andb
sub
mov
cltd
aad
mov
adcb
jle
cmp
dec
dec
and
out
int
imul
push
inc
inc
pop
ljmp
pop
add
fmuls
fdivl
in
or
xor
push
int
dec
addl
mov
or
iret
or
cmp
mov
mov
sbb
push
inc
and
dec
push
xchg
mov
dec
outsl
mov
roll
push
inc
loopne
push
loopne
loope
xchg
sbb
pop
mov
int3
rcrb
fmuls
sti
ja
test
dec
in
lods
enter
adc
hlt
mov
in
int3
adc
in
jle
daa
cmp
mov
pop
test
sbb
or
lods
inc
ljmp
psadbw
xchg
mov
lcall
add
stos
movsb
or
fbld
aaa
or
outsl
and
pop
push
cld
sub
fincstp
jecxz
jae
sbb
mov
dec
ds
lods
mov
mov
cwtl
and
pushf
pushf
inc
test
stos
sub
fnstsw
imull
enter
sbbb
test
leave
in
pushl
mov
shr
and
mov
mov
jg
jo
xchg
inc
xlat
mov
in
mov
orb
subb
bound
fs
out
testb
sahf
jno
bound
xchg
jg
ret
pushf
xchg
enter
and
sub
xchg
xchg
call
xchg
inc
sbb
mov
mov
mov
push
and
fs
or
push
fs
mov
add
add
aad
ds
xchg
xchg
std
adcl
sub
sbb
xchg
lea
addb
ja
std
xor
fmulp
cmp
mov
pop
sbb
jo
jl
shll
rcll
add
pop
jo
sbb
push
jmp
dec
mov
popf
adc
sbb
loopne
pop
stc
ljmp
pop
pop
push
inc
into
insb
dec
dec
sbb
mov
mov
push
sub
cs
mov
push
add
pmullw
daa
nop
stos
mov
push
mov
sarb
dec
mov
mov
fs
aaa
cld
mov
hlt
fisttpll
loop
jo
push
adc
ret
out
add
pop
inc
mov
insb
or
lahf
add
cmp
and
jo
mov
jae
sbbb
xor
mov
cmp
mov
roll
jns
dec
scas
bound
adc
jne
insb
mov
aaa
cmp
sbb
shl
fcmove
loopne
xlat
push
gs
call
fcoms
adc
push
call
leave
push
add
sub
pop
jne
mov
pop
lock
lds
and
xchg
xor
push
or
hlt
gs
inc
jg
mov
inc
pop
or
and
jl
mov
xchg
jb
sti
insl
cmp
aaa
nop
inc
fdivrs
fbstp
cmp
cmp
fdiv
stos
rcrb
dec
mov
sub
arpl
mov
int3
xor
mov
cmp
sbb
pop
mov
or
js
movsb
jge
lods
jnp
out
mov
pop
xor
and
fidivrs
pop
in
bound
lods
cmp
pop
pop
repz
xchg
std
ja
push
push
mov
mov
sbb
jl
test
and
cltd
out
lcall
imul
mov
testl
aad
lods
out
adc
fisttpl
cmp
shrb
xchg
aaa
fadd
test
xor
pop
sar
mov
sbbl
rcl
mov
out
jle
lea
loope
arpl
enter
sarl
inc
roll
jmp
sbb
aam
fs
scas
mov
hlt
pushf
and
aam
jmp
sbb
sub
mov
nop
inc
inc
add
sub
push
sbb
out
rolb
dec
adc
and
out
cmp
scas
push
xchg
stos
pushf
fmul
xchg
push
imul
out
jbe
sub
sar
sbb
lods
ss
shrl
push
mov
jbe
dec
rclb
mov
mov
mov
xor
repnz
adcl
bound
jge
mov
pop
jb
sbb
out
pop
mov
mov
lret
outsb
pop
or
es
notl
xchg
sub
cmpsl
xchg
xchg
loope
outsl
orb
xchg
cmp
lods
ret
or
cmc
clc
test
cmp
std
xor
repz
push
aam
sbb
jb
sub
and
into
or
cltd
inc
ret
cmp
mov
sbb
in
nop
and
and
jae
out
inc
xchg
xlat
cmp
mov
out
dec
xchg
xor
fldcw
test
and
or
aad
sub
bound
xlat
arpl
ds
xchg
and
sbb
add
jb
pop
cltd
cld
in
sahf
aad
popa
sbb
cmp
rclb
xchg
iret
inc
push
sub
fidivrs
pusha
or
push
jecxz
or
lcall
out
clc
fs
fdivrp
mov
dec
jp
repnz
cmc
test
or
dec
mov
jne
and
dec
in
push
push
xor
jnp
push
shr
jbe
insb
rcrb
imul
add
stos
sub
xchg
push
mov
mov
repnz
and
mov
xor
mov
ja
add
ret
adc
or
aam
mul
call
stos
inc
icebp
or
scas
pop
cmpsl
push
mov
negl
xlat
rorb
jnp
ror
mov
scas
xor
mov
sahf
mov
push
sbb
imul
dec
jno
and
insb
jle
bound
das
and
orb
bound
nop
imul
pop
in
aam
fwait
adc
ljmp
pushf
cmpsb
fs
fst
jo
js
shlb
mov
inc
push
jmp
push
jge
jbe
aam
hlt
fcompl
stos
aaa
or
iret
nop
add
leave
nop
shl
out
outsl
dec
xchg
dec
pop
xor
mov
xor
aam
enter
mov
mov
pop
icebp
adc
ja
imul
xorl
pop
in
lcall
out
test
std
shrb
imul
dec
push
push
enter
and
fdivs
sub
mov
test
xor
out
ds
jnp
cmpsb
les
lahf
aaa
cli
cmp
sbb
lods
mov
insb
lock
jnp
pop
mov
jae
in
sub
xchg
mov
push
ret
jp
fnstenv
adc
sbb
insl
xabort
mov
stos
jp
xor
jae
insl
jnp
push
cwtl
cmp
sub
xor
add
add
out
mov
cmpl
lret
js
ret
pop
inc
hlt
cmp
fstl
in
stc
pop
cmpsl
sub
shll
out
adc
xor
lcall
cmpsb
cmc
pop
mov
pop
outsl
ss
lds
js
imul
and
test
fucom
xchg
cbtw
lds
shll
inc
out
lcall
lret
pop
sub
roll
push
inc
stc
fists
out
xchg
jo
gs
sub
cmpsb
ja
or
or
divb
es
ficomps
xchg
add
adc
sub
pop
lcall
lcall
push
sbb
or
cmp
sub
fimull
lret
sub
pop
lcall
lcall
push
sbb
or
cmp
sub
fimuls
lret
sub
pop
lcall
lcall
push
sbb
or
cmp
sub
fimull
lret
sub
pop
lcall
lcall
sbb
add
int3
int3
int3
int3
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
sbb
xor
imul
andb
mov
aad
dec
mov
mov
add
adc
push
xor
adc
mov
movsl
nop
cmpsl
in
mov
mov
sbb
sub
dec
pop
sbb
fdivrs
xchg
lods
cmpsb
xchg
int3
adc
movl
pop
inc
fwait
popf
inc
test
and
pushl
lds
or
jne
and
movsb
lcall
or
mov
fwait
xor
push
outsb
jo
loopne
cwtl
fidivs
inc
inc
sbb
nop
xchg
aas
test
fistps
pop
outsl
jo
jl
cmc
jmp
or
push
call
add
loopne
jne
jnp
dec
pop
sub
or
aad
mov
push
out
xchg
xorl
jge
or
cmovge
sbb
xlat
adc
cmpsb
aad
aad
inc
jno
int
scas
popf
loopne
je
xor
icebp
dec
loopne
adc
divl
adc
adc
inc
xor
jl
xchg
push
popf
sub
fnsave
adc
push
inc
jle
jne
and
inc
add
mov
sar
out
mov
jl
insb
aaa
inc
stos
dec
jns
popa
or
push
call
rorb
lds
jae
add
pusha
push
data16
jne
rclb
loopne
nop
aad
lds
adc
pusha
and
xor
rclb
loopne
nop
aad
lds
adc
aas
daa
pop
fisubs
xchg
mov
iret
mov
cmp
xchg
xor
pop
sar
and
or
mov
je
call
int3
mov
pop
push
into
insl
test
sub
stos
shrb
add
in
shrb
icebp
mov
xor
mov
xor
cmpsl
xchg
fwait
aam
test
pop
lret
push
xchg
pop
shr
sahf
sbb
sbb
and
jp
outsl
mov
pop
js
dec
lods
inc
rolb
mov
shrb
jo
ret
loope
pop
imul
push
mov
testb
sub
repz
cmp
jne
scas
fstl
xchg
pop
pop
fsts
pop
mov
xchg
and
cwtl
fcmovnu
jnp
add
mov
pop
outsl
xchg
jg
sti
fwait
test
dec
outsb
test
mov
jo
rcrb
add
lcall
sub
daa
push
icebp
adc
sub
mov
lods
adc
or
mov
cmpsb
stos
subl
push
adc
movsb
push
xor
sub
pop
vmovntps
jno
faddl
fsubrp
pushf
mov
cwtl
sub
sub
or
sbb
inc
push
pop
and
repnz
jg
pop
jmp
dec
sub
lock
outsl
xor
movsl
pop
mov
and
cmp
jae
adc
int
pop
arpl
mov
push
ret
sub
or
pop
stos
rcl
cmpsl
jo
fildll
lahf
and
sahf
inc
dec
loopne
mull
lock
insl
push
ja
dec
scas
jb
pop
sti
bound
inc
mov
mov
js
movsl
movsl
add
lret
stos
dec
pop
lret
std
xor
fisttpll
lret
add
aas
int3
xlat
push
clc
sub
xchg
outsb
push
xor
xchg
xchg
push
imul
andl
mov
mov
xor
inc
call
push
push
jmp
aas
dec
or
shll
aam
push
sub
xor
push
cld
ret
lods
adc
pop
adc
xchg
xorl
data16
jo
rcrl
sub
gs
inc
mov
sbb
jge
jns
lods
lods
out
jb
jmp
xchg
gs
sub
jnp
xchg
inc
loopne
push
std
nop
out
mov
fdivrl
out
cmpsl
fwait
cmp
mov
mov
sub
cmp
mov
fsubrp
sti
mov
hlt
outsb
adc
mov
fnsave
andb
fidivrl
xor
mov
stc
pushf
out
sub
dec
ja
std
mov
sub
arpl
xor
rcrb
mov
xorl
sahf
fwait
mov
and
test
xchg
fidivrs
repnz
mov
push
jle
fadds
nop
mov
jne
lret
hlt
test
movsl
push
jo
add
push
lret
rol
pushf
and
fbld
insl
clc
fisttps
scas
es
mov
xor
clc
fwait
out
ja,pt
jbe
push
arpl
mov
add
and
data16
arpl
sbb
cmp
dec
insb
push
jmp
cs
cmpsl
push
xorb
inc
clc
out
pop
jo
push
andl
inc
jo
clc
push
pop
pop
fnstenv
pop
stos
add
sub
stos
dec
scas
faddp
xlat
adc
mov
sbb
mov
sbb
int3
sub
xor
dec
ret
mov
arpl
scas
inc
imul
push
cwtl
mov
jnp
aad
mov
mov
mov
hlt
test
jae
push
inc
sahf
test
test
cmp
sub
adc
push
test
push
dec
xchg
std
pop
xchg
movsb
inc
repnz
dec
jo
lahf
xor
fisttpl
fmull
stos
mov
pop
ja
add
int
cmp
sub
popa
xorl
add
stos
rorl
inc
fstpt
shlb
pop
or
jmp
loopne
lds
sbb
mov
rorb
int3
jo
fwait
xchg
fbstp
sbb
and
test
fsubrp
push
sub
xor
mov
les
mov
fbstp
add
aas
test
inc
adc
xchg
add
mov
popf
mov
roll
mov
fists
movsl
lret
lods
daa
sub
mov
pop
inc
sar
mov
out
add
ss
and
inc
cmp
lock
stc
cmp
mov
inc
lea
sub
pop
push
sbb
addl
xchg
loope
in
mov
mov
fldenv
mov
mov
mov
mov
jne
sti
xchg
ljmp
imull
dec
xor
inc
dec
test
jnp
mov
lods
inc
jecxz
repz
movsl
or
xchg
lret
push
enter
pop
lea
sbb
push
cmpsl
out
pop
pop
xchg
data16
jp
and
push
sub
mov
les
mov
stos
test
dec
xchg
lea
out
dec
adc
shlb
dec
ss
inc
scas
push
fs
loope
mov
jns
add
push
cmc
lods
pop
fs
mov
and
push
and
pusha
sbb
adc
popa
ret
andb
enter
daa
pusha
xchg
xchg
test
push
pop
push
aad
call
arpl
arpl
lods
dec
or
dec
ret
push
add
sub
movsl
fldln2
loope
jae
lock
js
cld
mov
pop
and
aam
add
mov
pop
leave
int3
mov
push
xchg
add
push
sub
mov
dec
sbb
out
int
push
dec
lret
aam
push
xor
add
sub
sbb
mov
hlt
xchg
fwait
jns
pop
xor
fst
inc
es
aas
dec
sub
mov
cmp
cli
sub
int3
mov
push
bound
lds
and
lods
inc
inc
fxch
sarb
enter
mov
test
lahf
dec
push
fisttpl
repnz
shl
in
sub
mov
jg
das
and
dec
jnp
mov
loope
cmp
push
enter
xor
aad
lcall
fcomps
mov
mov
lcall
xor
in
jmp
enter
scas
push
dec
fxch
jne
jl
call
pop
and
pop
fstps
sbb
orl
dec
stos
cmp
andb
mov
inc
and
stos
iret
add
fisttpll
sbb
mov
mov
daa
enter
aam
cwtl
dec
cmp
pop
loop
jbe
std
mov
jp
rclb
rorb
fsubr
add
and
add
mov
cmpsb
push
test
jb
mov
xor
push
in
and
xor
cmp
mov
mov
mov
out
test
xchg
out
ljmp
push
movsl
test
sub
sub
mov
cmp
mov
dec
stos
ss
ljmp
push
pop
jmp
sub
fstl
jo
jge
jne
inc
cmp
jae
add
push
fs
jae
ljmp
mov
scas
rol
pop
adcb
nop
dec
cwtl
iret
pusha
movsl
gs
xchg
mov
shll
int
subb
icebp
je
pop
lret
scas
ds
call
jle
ds
jnp
inc
or
add
jmp
cltd
std
xor
mov
jl
sbbl
sbb
test
sub
add
in
cmp
pushf
inc
mov
push
scas
mov
sub
mov
jno
cmp
shrl
dec
xchg
enter
jle
push
dec
hlt
jno
add
insl
jnp
xchg
daa
jae
sub
fs
pop
or
out
test
bound
mov
jb
mov
mov
mov
adc
and
mov
call
out
rorb
dec
cmp
adc
xor
test
or
xor
add
pusha
jnp
pop
xchg
cmp
clc
inc
or
scas
pop
pop
call
sub
mov
ror
hlt
daa
cld
xchg
xchg
fiaddl
out
pop
dec
stc
add
jle
sub
xchg
sub
icebp
sbb
out
fimuls
dec
and
out
cmp
lods
lods
jns
dec
and
and
xchg
idivb
xor
cld
jne
sub
loope
xchg
fimuls
cmp
daa
cmpsl
push
push
pop
testl
sti
ss
cmp
add
nop
outsb
mov
mov
xorb
out
cmpsl
mov
idiv
cmpsl
pop
xchg
adc
or
sub
sbb
repz
lea
popa
mov
pop
pop
or
xor
cmp
out
push
add
sahf
outsl
inc
pop
mov
dec
sti
xor
jle
add
inc
or
sub
clc
cmpl
orb
xchg
out
dec
xchg
cmp
ficoml
pop
cmp
imul
paddd
mov
mov
inc
add
xor
push
or
lret
jae
cmpsl
mov
mov
adc
dec
rcll
test
mov
out
lret
push
and
bound
scas
sahf
mov
pusha
dec
inc
das
sbbb
mov
test
pop
inc
mov
mov
mov
pop
iret
pop
mov
mov
mov
cltd
in
mov
mov
es
scas
xor
jecxz
lahf
lods
sbb
and
mov
mov
push
mov
cmp
inc
push
je
iret
addb
outsl
in
inc
inc
aaa
inc
movl
ljmp
and
pop
pop
cmp
ds
jne
shll
ja
sub
orb
cmp
fs
lds
push
cld
loop
dec
ror
scas
daa
sbb
aas
or
xchg
xor
cld
sar
cmpsl
mov
loope
sbb
scas
or
push
push
xor
pop
movl
int
xor
sahf
lds
add
xchg
and
mov
icebp
mov
fbstp
push
cli
stos
hlt
sahf
ja
mov
out
sub
cmp
adc
jg
add
pop
mov
jge
shlb
scas
fcompl
jb
mov
mov
ja
data16
and
or
psrad
pop
dec
inc
xchg
clc
fwait
movsb
stos
lea
repnz
nop
xor
lods
arpl
add
in
cld
add
jbe
cltd
or
push
dec
inc
sub
popa
cltd
inc
daa
xchg
ret
clc
add
imul
fidivrl
sub
les
fcoms
out
and
cmc
insl
mov
mov
jecxz
sub
jmp
jns
inc
sbb
inc
push
repz
daa
and
xchg
rorb
mov
xchg
jnp
xchg
test
xlat
or
ljmp
mov
add
xchg
bound
inc
and
lret
inc
dec
sub
sub
daa
mov
nop
int
addr16
jecxz
into
push
push
dec
lret
out
or
pop
mov
xor
mov
imul
outsl
idivl
shr
sub
setle
test
xor
cmp
filds
pusha
hlt
and
out
movb
movsl
xlat
inc
repz
aas
movsl
in
popa
fs
mov
inc
or
scas
mov
rcl
ret
ret
add
dec
cltd
or
add
outsb
ret
addr16
xor
push
ds
xor
sbb
adc
cmpsb
rorl
out
push
dec
dec
jnp
mov
sub
fdivrl
mov
fisttps
xor
pop
int3
pop
repnz
push
add
inc
in
add
push
mov
jge
imul
inc
stos
sti
mov
rclb
repz
cmp
mov
enter
cmp
nop
sub
pop
fcompl
adc
push
jae
mov
shl
xor
cmp
mov
std
fyl2x
mov
fnstsw
push
rol
sahf
pop
pop
packuswb
pop
push
mov
xor
xor
and
push
out
sbb
and
push
imull
sub
cmc
ret
xchg
in
outsb
xlat
repz
lods
insl
jno
inc
data16
loope
int
xor
je
jl
jmp
push
push
xlat
push
xchg
and
mov
clc
lcall
hlt
fsts
xchg
lea
ds
in
mov
js
pop
mov
movsb
dec
aad
test
popa
cmp
add
jo
mov
mov
push
divb
or
xchg
pop
lahf
push
lcall
and
lock
pop
mov
nop
jecxz
jnp
sub
cmpsb
or
sbb
rcl
mov
ss
jo,pt
inc
jb
jl
pusha
mov
inc
add
pop
enter
rol
cs
ja
cmp
add
xchg
push
adc
daa
mov
clc
xor
pop
xchg
cmp
je
ds
adc
jp
sbb
sub
dec
sbb
add
ret
push
in
sahf
outsb
jb
mov
addl
or
add
xchg
xor
cmp
je
pop
je
sub
movsl
flds
lods
outsb
inc
sub
movsl
xor
cwtl
add
test
mov
push
out
lods
jle
bound
fcompl
or
lret
gs
daa
movb
lea
or
popf
stos
into
and
lock
push
ja
inc
or
clc
enter
mulb
lods
mov
jl
cld
dec
cmpsl
insb
push
lock
add
in
mov
pop
pop
xor
sti
or
loopne
lea
mov
mov
mov
jp
daa
loopne
push
pop
out
jne
jae
push
dec
jb
adc
cltd
aaa
cmpsb
and
lods
push
in
nop
adc
sub
or
iret
rcrb
pop
mov
jo
xor
rorl
mov
mov
fists
insb
sahf
inc
in
or
decl
nop
loope
popa
lods
jge
int3
mov
sub
ret
int3
rcll
popf
ret
lret
scas
shll
sbb
je
aas
dec
or
rorl
leave
in
or
out
je
jne
insb
jns
movsl
pushf
pop
inc
xchg
das
testb
jle
pop
cltd
jbe
idivb
push
sti
pusha
mov
test
incl
repnz
pop
add
lods
sbb
popa
int
mov
mov
outsl
xor
das
daa
xor
push
sub
in
adc
cs
mov
adcl
push
sbb
mov
fwait
and
lea
pusha
pop
fidivrs
adc
jl
inc
cmpl
lods
mov
inc
mov
popf
rorb
sti
out
addr16
loope
adc
dec
mov
jmp
xorb
enter
sbb
jl,pn
adc
mov
sub
pop
mov
push
pop
arpl
out
ret
cs
fistps
insb
mov
pop
cmp
push
push
hlt
add
outsl
cli
cmpsl
pop
add
lret
repnz
test
adc
mov
mov
lret
stos
mov
or
popf
lret
mov
push
mov
pop
pop
inc
sub
dec
je
je
adc
pop
push
dec
xchg
jbe
add
jae
and
mov
cmp
add
xlat
rorb
movsb
jb
xchg
enter
xchg
jg
jno
adc
stos
mov
push
in
inc
push
leave
jge
push
inc
cs
movl
add
pop
mov
addb
lea
add
lods
in
or
cltd
xchg
je
sbb
or
stos
push
xlat
xchg
addr16
jmp
mov
push
inc
in
mov
arpl
js
add
mov
mov
test
jbe
push
mov
enter
fnstcw
idiv
lea
andb
push
in
gs
lods
cli
pop
mov
cli
xchg
sub
push
stc
mov
sub
sub
xor
push
adc
movsl
aam
fsin
jne
sbb
rcll
aam
xor
fmuls
jno
pop
pop
ret
sub
test
fists
sarl
adc
xchg
int
inc
xchg
push
mov
pop
addr16
pusha
pushl
ds
mov
sbb
sub
xchg
int3
or
rorb
adc
pop
and
pusha
push
inc
push
xchg
push
xchg
pop
jno
imul
jo
insl
cli
dec
mov
jmp
aad
jge
ficoml
repnz
mov
push
or
mov
pushf
stos
je
push
jnp
fdivs
imul
js
jns
insl
jle
lret
jne
xchg
in
mov
sbb
test
dec
mov
sbb
sbb
add
jp
mov
pop
or
inc
and
and
ds
pop
stos
jmp
leave
test
xchg
mov
sbb
mov
cmp
cmp
ret
sbb
inc
outsl
add
outsb
mov
outsb
sbb
push
fimull
sub
sub
je
dec
fsubrs
cld
mov
jmp
mov
scas
scas
setns
cmp
or
xor
jno
orb
mov
and
gs
cld
call
cmp
clc
test
imul
mov
mov
or
jne
mov
pushf
cs
or
ja
cmp
mov
and
imul
scas
jp
fsubl
mov
mov
jmp
or
nop
jecxz
mov
jmp
push
outsl
jne
call
or
sub
add
sbb
or
pop
test
lea
int
shlb
lret
pop
je
inc
frstor
cmpl
orl
stos
cmp
dec
xor
jb
scas
mov
test
fstl
dec
inc
mov
pop
jns
mov
cli
cmc
outsb
mov
fdivrl
inc
clc
sar
cli
sub
leave
mov
adc
out
sbb
xorl
ljmp
loope
out
push
loop
inc
mov
icebp
sub
cmc
sbb
cmc
push
xchg
mov
cmp
xchg
fldt
das
movsl
jl
mov
fisubl
pop
cltd
push
fucomp
mov
cmpsl
add
enter
lds
mov
mov
and
fildl
adc
push
out
pop
aas
popa
les
jmp
xor
movsb
pushf
aaa
sub
shll
std
loop
inc
stos
decb
pop
out
sbb
std
fists
imul
cmp
shl
dec
in
push
sub
pop
dec
es
inc
nop
mov
fdiv
loope
mov
ret
shrb
cmpsl
sub
sbb
jo
jno
push
push
cld
pop
pop
out
int
out
daa
xchg
inc
mov
cmp
or
inc
sbb
jecxz
ja
imul
cltd
loope
mov
aas
sub
jecxz
iret
pop
orl
std
adc
cs
and
mov
test
lret
fdivrl
mov
xchg
ss
movsl
scas
js
clc
lcall
pop
mov
add
add
xor
test
imul
jno,pn
and
pop
push
inc
or
xchg
cmp
mov
lds
inc
xor
lea
mov
add
cli
pusha
pop
mov
popa
lods
push
pop
cmpsl
cmpsl
cmp
mov
orl
add
out
loopne
das
and
inc
out
jp
xchg
mov
mov
jmp
movsb
and
cs
pusha
mov
mull
fbld
stos
popl
fnstenv
stc
mov
push
fisubs
sub
lret
lods
fists
les
sbb
arpl
call
adc
sbb
push
dec
xor
mov
stos
mov
jl
mov
add
jae
sbb
sbb
iret
push
push
out
out
pop
ja
mov
adc
pop
iret
jl
movsl
xor
in
push
jo
scas
sub
push
mov
test
cmc
dec
in
push
add
loop
repz
dec
or
call
jl
scas
addr16
ret
repz
or
insb
cmp
inc
sbbl
pop
xchg
push
dec
lret
loope
fiaddl
pop
xor
or
js
out
xor
xor
mov
lcall
and
cmpsl
push
fcompl
lods
push
ret
sbb
lret
ret
das
or
cmp
cmc
sub
outsb
xchg
popf
xor
loopne
loop
lods
xchg
fmull
in
frndint
sub
or
paddd
mov
adc
xor
imul
inc
insb
pop
sub
out
adc
cli
push
insb
cltd
jl
jb
or
jns
sub
adc
mov
fadd
mov
add
and
mov
sub
push
sub
data16
mov
inc
cmpl
lret
in
clc
rcrb
stc
and
dec
out
dec
int3
testl
out
cli
stos
jg
mov
inc
outsb
test
test
cmp
mov
popa
scas
xchg
xor
lcall
ret
pop
sub
cld
lock
faddl
outsb
or
mov
test
lret
mov
xlat
loope
in
push
int3
das
cmp
scas
jo
icebp
mov
jmp
int3
push
popa
movsl
clc
xchg
mov
out
cli
mov
mov
aam
sbb
cwtl
lea
cli
cmp
lock
push
enter
add
xor
sub
jg
imul
sub
jo
or
test
aad
mov
enter
aaa
push
mov
mov
lods
aaa
adc
push
stc
outsl
and
scas
shrb
add
inc
mov
scas
push
add
popf
xchg
loop
out
mov
mov
mov
rolb
pop
add
stos
cmpsl
sbb
les
das
mov
inc
int
in
inc
sub
jecxz
mov
push
sbb
inc
das
adc
sbbb
mov
cmp
jmp
and
in
aas
data16
or
fs
xor
mov
mov
cwtl
adc
out
or
jp
ret
mov
call
and
es
cwtl
dec
sbb
add
in
or
testb
aad
inc
mov
sbb
cmp
add
inc
sub
dec
shll
pop
or
out
adc
mov
or
sbb
dec
inc
jb
out
rclb
iret
test
dec
mov
std
lock
jo
sub
sarl
xor
ja
shll
cmc
pop
repz
mov
scas
out
mov
ret
imul
sub
and
pop
dec
add
adc
inc
xor
rclb
loopne
nop
aad
lds
adc
pusha
and
xor
rclb
loopne
nop
aad
lds
adc
pusha
and
xor
gs
rolb
aad
lds
insb
add
xor
adc
inc
xor
movsl
rclb
loopne
out
or
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
rolb
add
add
add
add
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
lahf
add
add
test
add
je
add
insb
add
add
pop
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
add
add
loopne
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
pop
push
add
js
add
mov
inc
add
rorl
jmp
or
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
hlt
push
add
cld
push
add
add
add
or
add
adc
add
sbb
add
and
add
aaa
pop
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
push
pop
add
pop
pop
add
push
pop
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
mov
add
fmull
add
add
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
jg
add
insb
or
add
add
add
add
add
add
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cwtl
or
add
or
add
or
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
cmp
add
pop
or
add
inc
add
rorl
jmp
or
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
aam
add
fmull
add
in
add
in
or
add
or
add
or
add
add
pop
or
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
xor
add
cmp
add
dec
or
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
