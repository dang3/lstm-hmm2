add
add
jne
dec
add
add
insb
add
add
je
add
add
jb
popa
add
add
outsb
add
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
popa
add
add
outsb
add
add
je
imul
push
add
je
insb
add
add
dec
add
je
push
add
popa
add
imul
add
add
add
jne
je
je
outsl
add
inc
add
add
jb
outsb
add
je
add
popa
add
add
add
outsb
add
outsl
add
imul
outsl
add
add
add
dec
add
data16
push
add
js
je
add
add
inc
add
je
je
outsl
add
dec
add
add
je
add
inc
add
je
je
outsl
add
inc
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
dec
add
insb
add
add
je
add
dec
add
popa
add
je
imul
push
add
je
insb
add
push
add
js
je
add
inc
add
je
je
outsl
add
push
add
js
je
add
add
inc
add
popa
add
push
add
js
je
add
add
inc
add
je
je
outsl
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
inc
add
arpl
add
add
add
imul
add
je
push
add
js
je
add
dec
add
insb
add
add
je
add
inc
add
jo
push
add
jb
imul
add
popa
add
add
add
add
outsb
add
arpl
popl
das
sub
and
add
add
push
add
add
push
add
add
cmp
add
add
push
add
add
add
aaa
add
pop
add
adc
enter
jecxz
imul
dec
add
add
add
jo
jo
add
pop
add
add
add
add
inc
add
add
add
add
add
mov
push
add
ret
add
mov
add
add
add
push
add
add
add
add
add
cmp
add
add
add
add
add
add
push
add
add
cmp
add
or
mov
push
add
add
add
add
add
add
sbb
pop
add
push
add
add
add
add
add
xor
popa
add
xchg
add
add
add
add
add
jo
pop
add
add
add
add
cltd
add
add
add
add
faddl
inc
add
add
add
add
push
add
add
push
add
add
add
add
add
push
add
test
mov
add
add
roll
or
insl
add
add
add
add
push
add
sbb
pop
add
push
add
add
add
add
add
add
xor
mov
push
add
add
add
add
push
add
add
add
add
add
aaa
add
push
add
add
add
jb
sbb
pop
add
add
inc
add
add
add
or
cwtl
add
add
add
add
mov
add
add
push
add
add
lret
add
and
and
adc
mov
adc
add
inc
add
add
pop
add
add
add
xchg
add
add
aaa
add
add
add
aaa
add
add
pop
add
add
push
add
add
add
add
add
add
dec
add
push
add
jns
roll
push
add
push
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
and
test
add
add
aam
pop
add
push
add
add
data16
mov
iret
add
pushf
add
add
jbe
jns
fwait
add
inc
add
add
add
jb
inc
add
add
add
add
jns
mov
add
add
add
add
xchg
add
inc
add
add
popa
add
add
add
add
add
push
add
add
or
pop
add
add
add
add
add
add
add
add
push
add
add
ret
add
add
add
push
add
add
add
add
pushf
add
add
add
add
test
add
add
push
add
add
add
add
add
add
cmpsl
add
add
push
add
add
add
add
add
push
add
add
add
add
rolb
add
add
mov
push
add
add
add
verr
add
push
add
mov
test
inc
mov
in
push
stc
insb
popl
push
pop
add
jge
cmp
xchg
icebp
insb
push
mull
adc
push
jb
cwtl
out
pop
inc
push
pop
mov
out
jecxz
adc
pop
leave
imul
add
das
into
push
cwtl
xchg
fxch
push
insl
sub
xor
ret
xor
sbb
adc
and
jno
mov
xchg
jne
pop
bound
es
cmc
mov
fistps
inc
and
andb
popf
mov
bound
xchg
xor
pop
test
cmp
cmp
fdivs
xor
inc
cmc
and
cmpl
fstpl
cmpl
push
repnz
fcomps
rcrl
sub
jbe
ljmp
movsl
mov
dec
loop
jg
fld
dec
mov
xlat
push
loope
inc
dec
insl
cmpsb
pushf
or
out
and
add
cmpsl
inc
add
push
add
adc
incb
in
insb
jmp
les
cmpl
inc
push
insb
push
jns
dec
dec
xchg
dec
mov
adc
inc
lret
ret
sbbl
in
jns
sub
pop
inc
lods
es
sbb
push
sub
jb
xor
mov
outsb
lret
inc
inc
inc
push
out
xchg
cltd
rcll
or
pop
push
jge
mov
and
adc
scas
mov
in
push
stos
gs
loopne
and
mov
xor
insb
add
int
hlt
xlat
lds
mov
mov
js
dec
out
test
imul
shlb
cmp
mov
cli
rcrb
mov
and
sub
in
dec
add
mov
pop
sub
dec
stc
push
dec
push
xchg
add
dec
out
mov
dec
daa
mov
mov
icebp
in
test
jb
adc
sub
cmpl
push
and
imulb
in
dec
cmp
or
jb
dec
fisubrl
cmpl
std
inc
data16
sub
sbb
and
sub
jnp
aad
mov
inc
inc
push
in
xchg
outsl
icebp
jbe
lock
sbb
sub
pop
out
cmp
push
pop
jle
mov
and
imul
hlt
pop
ss
xor
sbb
popf
ljmp
js
iret
clc
mov
inc
add
out
out
inc
aas
cmc
stos
cmp
jge
sbb
lcall
cwtl
adc
sub
mov
popa
xchg
fistps
add
sbb
xchg
xorb
mov
call
rclb
test
jp
cmp
popl
add
add
add
add
add
add
add
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
push
mov
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
push
call
mov
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
pushl
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
mov
cltd
sbb
xchg
mov
leave
lods
cmp
or
jns
sub
pop
fisttpll
mov
sbb
jmp
lods
cmp
or
jns
imul
mov
sbb
jmp
lods
pop
mov
or
cmp
dec
pop
mov
dec
gs
pop
sub
and
int3
pop
loope
imul
js
pop
jbe
add
aad
rcr
inc
dec
aam
adc
adc
and
jg
outsb
jl
imul
in
xlat
fistpl
leave
push
jns
pop
dec
cmpsb
cwtl
dec
ljmp
popf
insl
clc
push
stc
lods
xor
mov
out
testb
xlat
push
pop
dec
or
jne
dec
es
lahf
lds
fucom
popf
cmp
pop
and
aad
cmp
cld
lea
mov
mov
fwait
dec
push
imul
sbb
std
popf
int3
dec
fmull
mov
sbb
jmp
lods
cmp
or
jns
imul
aam
jp
fists
cs
sbb
lds
inc
loop
stc
addr16
adc
adc
clc
jle
jns
push
fimuls
pushf
sbb
dec
mov
leave
jl
inc
cmc
dec
clc
cmpsb
push
mov
popf
sub
daa
pop
jmp
cmp
jmp
lods
cmp
or
jns
imul
mov
sbb
jmp
lods
cmp
or
jns
imul
mov
dec
pop
push
cmp
pop
hlt
mov
dec
dec
pusha
ljmp
pop
into
push
pminub
sub
cs
cmp
xchg
push
xor
inc
dec
mov
cmp
xchg
cld
iret
mov
dec
pop
pop
fwait
shrb
mov
in
adcl
push
ret
arpl
mov
icebp
xchg
lahf
mov
lods
cs
stos
imull
out
cmp
jae
lock
push
loopne
hlt
dec
inc
pushf
ljmp
pusha
and
cld
test
adc
imul
clc
mov
cwtl
pop
push
push
xor
pop
sub
lahf
fdivrl
mov
push
mov
jmp
jge
inc
sbb
jge
in
mov
mov
je
out
mov
fdivrl
arpl
sbb
mov
cs
aam
and
add
mov
inc
loope
mov
out
and
popa
inc
mov
jno
loop
lretw
push
cmp
mov
push
std
mov
and
sub
lret
xor
and
daa
pushf
or
pushf
push
mov
popf
or
das
inc
push
mov
jnp
lret
fstps
add
cwtl
adc
mov
adc
or
jno
sbb
inc
addr16
fwait
enter
add
add
call
scas
lret
xor
xlat
mov
push
ficoms
xchg
sahf
push
pop
jnp
xchg
into
shlb
push
mov
imulb
into
stc
call
fwait
sbb
inc
cmpsb
push
cmp
lcall
pop
or
jnp
test
jg
jbe
aas
inc
fstpt
je
addb
inc
jp
pop
sbb
inc
lea
and
mov
jmp
pop
loop
es
push
shlb
aaa
adc
aam
repnz
in
pop
dec
loopne
imul
sahf
adc
pop
clc
cmc
mov
adc
pop
hlt
jo
and
aam
loop
aad
jl
fadds
adc
in
test
cmp
cs
mov
sub
rclw
sub
cltd
xchg
sub
in
pop
add
dec
cmpsl
mov
push
pop
sub
shl
lahf
test
add
loop
in
add
pop
mov
cmp
pop
stc
inc
mov
push
ret
jmp
or
repz
xchg
cli
add
mov
lock
push
insl
filds
mov
mov
test
xorl
xchg
adc
lods
or
cwtl
inc
xchg
lret
push
mov
and
pop
cmp
idivb
jns
lea
pop
mov
rclb
scas
fstl
add
mov
push
das
pop
pop
fsqrt
push
std
mov
jbe
mov
push
xor
mov
lahf
mov
jo
sahf
xchg
mov
lods
jns
cmc
data16
nop
cmp
iret
jo,pt
and
mov
mov
std
sub
and
popf
outsb
jae
sub
cltd
test
ja
shlb
cmp
outsl
shll
ja
loope
xor
shrb
leave
mov
push
inc
sbb
cwtl
out
mov
sub
mov
ljmp
pop
sub
cmp
pushf
jb
mov
icebp
push
jge
sbb
push
jbe
jns
xchg
mov
sbb
jae
pop
mov
dec
fadd
and
repnz
cmp
and
sub
pushf
pop
shr
and
orl
push
rorb
jb
push
rcrl
jg
popf
les
jg
je
lods
jle
test
mov
in
xor
jns
fildll
xor
inc
pop
inc
push
xor
push
inc
sbb
pop
mov
cmpsb
or
int
jle
das
adc
sbb
leave
mov
cmp
or
push
rcr
xor
dec
lret
sub
jecxz
movsl
cmc
xor
data16
jno
mov
push
fcmovb
out
jl
enter
popf
rorl
xor
arpl
imul
mov
mov
fisttpll
clc
es
jnp
cli
push
in
adc
jp
dec
cs
scas
outsl
fprem
jmp
rorl
add
inc
data16
jg
test
adc
push
sbb
mov
xchg
dec
mov
hlt
out
adc
cmp
adc
mov
cmpsl
sbb
sbb
xchg
push
pop
mov
mov
sbb
jp
mov
sub
or
xchg
js
mov
lds
mov
ja
dec
xchg
add
orl
cmp
xchg
cmp
sbb
push
ret
icebp
popa
lret
stc
cltd
mov
mov
mov
cmp
shrl
mov
mov
pusha
mov
fsubl
test
scas
fmul
nop
add
cmp
adc
ljmp
cmp
test
adc
or
mov
push
push
push
fwait
push
movsl
fiadds
or
shrb
xchg
notb
mov
iret
pop
test
pop
call
ja
cmp
lret
jbe
outsb
and
jl,pt
pop
cmp
ja
imul
pusha
and
and
cltd
dec
adc
fwait
mov
cmp
add
fwait
and
xorb
inc
sub
mul
sub
sub
pop
push
ret
out
das
cmp
aam
xchg
cmpsl
push
sub
xchg
fildl
mov
sbb
jne
cmc
pop
mov
popf
or
mov
adc
add
xor
xor
testb
lods
stos
xor
push
mov
jmp
outsb
push
jnp
adc
dec
jo
and
mov
das
xor
inc
push
notl
divb
cld
add
xchg
cmp
outsb
xchg
pop
add
sub
jle
push
std
pop
jae
lahf
stc
je
enter
jg
xchg
cmp
repz
cmp
jo
jge,pn
aaa
and
xchg
ret
repz
mov
aam
stos
jecxz
push
mov
push
sbb
in
mov
out
mov
subl
rorb
and
add
sahf
ja
inc
and
lods
dec
dec
sahf
xchg
xor
shll
jbe
mov
cmc
mov
sahf
adc
mov
push
ret
aaa
or
add
push
jecxz
mov
mov
aam
popf
mov
xchg
sbb
jno
sub
rclb
mov
or
inc
push
mov
jns
sbbl
iret
adc
sub
lock
xor
out
and
test
mov
pop
neg
scas
iret
aaa
pop
mov
insl
test
mov
andl
stos
cli
leave
mov
repz
fidivs
bound
into
movsb
je
mov
add
and
xchg
pop
mov
add
push
mov
out
hlt
sbb
fcoms
mov
lea
lds
hlt
sub
popf
mov
cmp
xorl
jns
xor
lahf
ja
and
jno
lea
adc
sbb
add
js
in
xchg
je
xor
adc
mov
mov
xor
push
push
clc
cwtl
test
aaa
mov
idivl
mov
lods
mov
aaa
sub
in
repnz
orl
xchg
jne
mov
adc
fildl
in
bound
movsb
cmp
inc
or
mov
sti
mov
fnstenv
push
gs
mov
aas
or
das
arpl
add
xchg
test
jae
inc
test
loop,pt
xor
inc
fildl
xchg
jmp
ret
rcrl
in
js
adc
push
bswap
out
mov
inc
mov
insl
and
pop
xchg
sub
mov
gs
loop
cmp
mov
xchg
lcall
cs
imul
xchg
shl
cmp
cmp
mov
movsb
sbb
pop
insb
sti
cmp
pop
out
mov
xor
jae
xchg
pop
loop
cltd
and
bound
dec
dec
push
jnp
push
repnz
out
sahf
xchg
scas
adc
loopne
xchg
mov
jnp
dec
mov
sbb
dec
ret
xchg
push
mov
mov
jne
xor
rorb
jge
pop
push
sbb
lahf
add
dec
add
sub
mov
popf
pop
data16
sub
mov
inc
or
lcall
loopne
jle
stos
in
xchg
cmpsl
test
insl
mov
inc
mov
data16
and
push
js
test
cld
mov
dec
push
jno
push
popf
jg
jno
mov
dec
xor
test
lea
dec
movsb
rclb
xor
jns
or
inc
or
mov
xchg
jae
fwait
lret
cmp
adc
jl
jns
aas
adc
xor
and
ret
push
mov
jno
aam
or
mov
shlb
sbb
gs
push
stos
mov
xor
lods
or
mov
sub
aam
sbbl
or
cmpsb
ja
inc
pushf
jns
gs
ss
fwait
enter
xchg
and
jmp
call
cli
rcrb
shr
ljmp
cwtl
jb
push
add
cmp
mov
xor
popa
ds
out
fcompl
jge
jo
pop
into
push
mov
inc
cs
imul
fidivrl
sbb
or
mov
rcrl
stc
adc
xchg
jo
cmp
insl
push
lahf
lcall
pop
ret
insl
lret
leave
fs
xchg
or
cmpb
mov
push
adc
jae
xchg
xchg
int3
push
mov
arpl
cmp
jns
sub
jmp
pop
cmp
mov
in
jg
inc
enter
lds
push
mov
sub
push
xor
pop
adc
add
aaa
and
cwtl
out
mov
in
dec
cmp
sub
dec
aam
cltd
jl
mov
nop
add
pop
ja
push
in
movsl
int3
fiadds
out
loopne
scas
jmp
xchg
pop
mov
mov
test
push
push
adc
xor
mov
sub
repz
js
pop
xor
fnstenv
jne
lods
test
mov
sbb
int
sbb
cmp
add
sahf
pop
mov
dec
fwait
mov
jnp
ja
stos
xlat
mov
add
push
jle
loopne
dec
repz
out
jo
call
outsl
mov
sbb
arpl
jecxz
xchg
incb
int
sub
xorb
sbb
dec
mov
fsubrs
or
enter
mov
xchg
idivl
pushf
xchg
sub
push
lods
pop
scas
jle
repnz
mov
xchg
int
cmp
mov
fimuls
mov
push
push
add
cld
daa
aaa
xor
sbb
pop
dec
lcall
push
insb
jmp
into
test
bswap
lods
sbb
push
push
add
cld
mov
lahf
ficompl
fidivs
or
lock
jbe
fiaddl
and
and
push
pop
ret
bound
bound
test
cmp
or
xor
jo
jmp
out
js
repz
jle
or
push
pop
pusha
ss
xchg
xor
xchg
ja
leave
or
pop
jle
leave
out
inc
enter
add
imul
jmp
cmp
push
aaa
mov
js
dec
sbb
dec
loopne
aam
cltd
pop
fisubrl
adc
lcall
mov
xchg
push
xor
mov
sbb
or
add
jmp
sub
mov
sub
imul
es
push
and
mov
jbe
adc
inc
nop
sbbl
push
sub
data16
out
or
cmp
aaa
fwait
xchg
xlat
mov
mov
es
or
loopne
push
push
into
and
adc
mov
lods
lea
pop
xchg
jl
icebp
pop
movsl
or
lea
and
daa
cmp
inc
and
rclb
or
insb
sbb
mov
call
inc
cmpsb
jg
addr16
mov
cmp
xor
xor
push
fisubrs
xchg
pop
cmp
insb
mov
cwtl
inc
dec
call
push
fimuls
mov
stc
adc
cmp
dec
xor
cmp
sbb
add
movsl
sub
push
ds
push
sti
and
push
dec
out
jmp
sub
cmpsb
jp
push
lret
ljmp
jbe
or
loop
and
add
sub
jmp
ja
test
cmpsl
pop
aas
push
mov
popf
xor
pushf
dec
or
pop
scas
scas
sub
adc
rolb
jne
cmpsb
scas
xchg
mov
into
test
fdivr
xor
ficoml
xor
aaa
and
xchg
lock
or
aad
mov
push
xchg
cmp
jns
pop
lods
jl
lret
jns
add
xchg
es
insb
mov
mov
lahf
xchg
sbb
mov
push
mov
dec
aad
addr16
test
jae
cmpsl
push
into
data16
mov
dec
fstpl
xor
leave
xor
div
xor
cltd
adc
repnz
push
mov
push
not
adc
sub
incl
cmp
push
mov
jg
outsl
mov
push
push
xchg
mov
fs
loop
inc
cmpsl
leave
mov
jnp
cs
idiv
pop
lret
out
stc
cmpsb
mov
dec
sub
mov
sbb
cmp
jp
inc
bound
xor
xchg
sar
fmuls
clc
push
in
sub
push
pop
out
int
xorb
in
into
jecxz
loop
sub
sti
jnp
add
outsb
in
dec
ret
push
adc
test
icebp
icebp
js
loop
ja
push
jo
xor
push
fmull
ja
add
add
movsl
aad
inc
insb
jle
xchg
in
inc
dec
lea
insb
outsl
out
sbb
push
fiadds
adc
popf
sub
inc
pop
cltd
lret
push
cmc
pop
xlat
mov
mov
testb
cmp
gs
lock
pop
cwtl
dec
les
mov
jge
mov
jbe
lea
insl
jno
in
jle
push
cs
int3
outsl
fsubrl
lret
pop
into
mov
adc
jns
sbb
les
add
addr16
pop
fs
mov
mov
jb
testb
call
sbb
pop
lock
outsb
jae
push
inc
jg
sti
inc
std
mov
push
rclb
and
pop
or
mov
pop
mov
inc
lcall
pop
jge
push
loop
adcb
inc
push
and
xorb
pop
inc
dec
dec
inc
add
or
int3
int
sahf
jle
ror
stc
in
pop
xchg
out
xchg
cmp
sub
pop
sbb
fisubl
xchg
or
cmp
sub
or
divps
js
add
loopne
xchg
imul
pop
loope
xor
lcall
mov
push
xchg
sbb
test
fcompl
jmp
mov
and
mov
sub
rorl
pop
fdivrs
sbb
std
jmp
mov
ss
sub
pop
xor
sub
push
dec
cmp
ret
push
sub
std
outsb
insb
jg
jle
insl
cmp
mov
add
ss
jno
xchg
jge
add
stos
data16
lea
xor
mov
mov
int3
icebp
sar
mov
rol
inc
cmc
aad
pop
pop
bound
cmp
loope
lcall
mov
mov
inc
lods
jno
aaa
fisubs
jnp
orb
and
data16
mov
cmp
int
mov
cmp
cmp
xor
inc
aaa
push
out
insl
cmpsl
gs
mov
xlat
popf
mov
adc
xchg
pop
leave
call
jo
and
xor
loope
inc
stc
sbb
lods
or
mov
hlt
movsl
loop
fisttpl
lock
xor
cmpb
lret
loopne
es
sbb
add
jp
std
ljmp
aad
dec
adc
test
cmp
jmp
fsubl
arpl
int
popf
dec
lahf
or
or
lock
outsl
in
cmc
mov
jbe
nop
or
ljmp
mov
push
lods
test
mov
xchg
sbb
dec
pop
sub
clc
movsb
clc
arpl
cld
pop
jl
pop
ljmp
sbb
pop
mov
add
in
idivb
dec
loopne
jae
fst
add
std
fmul
pop
ret
cmp
jge
sub
loop
pop
jnp
xor
push
sub
dec
fs
cwtl
xchg
inc
mov
push
rorb
inc
dec
jecxz
or
push
sarb
insb
jb
mov
mov
gs
and
stc
or
popa
adc
insl
pop
xor
cltd
sbb
inc
xchg
sbb
mov
xchg
fmuls
loope
xor
mov
xchg
popa
jp
shl
lahf
push
xchg
xchg
or
enter
jbe
bswap
lcall
xlat
dec
push
mov
enter
js
xor
and
jmp
dec
pop
add
in
jb
sub
stos
gs
dec
sbb
sub
jns
dec
shl
xor
and
popf
or
ja
dec
in
add
adc
lcall
cli
inc
pop
dec
mov
leave
addr16
movsb
enter
adc
sbb
stos
cmpsl
jmp
out
loope
cwtl
mov
fs
sbb
push
add
or
jmp
pop
ret
ficomps
jg
jbe
adc
fnstsw
dec
pop
push
xchg
ret
leave
sbb
fiadds
cmpsb
add
pop
cwtl
loope
leave
or
repnz
call
icebp
test
jmp
inc
push
xchg
and
cli
dec
jmp
in
inc
mov
or
inc
xchg
xlat
arpl
sbb
dec
nop
jae
add
lock
push
xchg
cmpsb
jo
imul
or
xchg
cli
push
inc
xor
or
movsb
add
cltd
xchg
sbb
xchg
clc
es
sbb
mov
pop
mov
push
mov
xor
je
arpl
push
lods
ret
push
sub
pushf
scas
dec
inc
in
in
cmpb
cmp
pop
mov
add
push
push
arpl
mov
and
ret
sub
or
das
out
jb
sahf
mov
and
insl
lds
or
jecxz
scas
or
notl
jmp
mov
pop
pusha
push
stos
popf
loope
push
mov
clc
sub
cmp
rep
fdivrs
dec
enter
xor
arpl
push
push
pop
cmpb
mov
out
mov
lods
add
sbb
out
lcall
clc
ret
sub
push
xorb
lcall
xchg
stos
mov
lods
adc
push
clc
xchg
insl
push
pop
stc
sti
addr16
icebp
stos
stc
cli
xchg
pop
jecxz
dec
enter
int3
mov
jne
jne
dec
inc
sbbl
xchg
and
or
xor
or
add
inc
xor
mov
inc
inc
jmp
sahf
test
mov
imul
hlt
nop
ljmp
mov
insl
push
nopl
loopne
sbb
pop
call
pop
cli
and
cmpsb
jmp
or
jne
xchg
arpl
xchg
out
sub
mov
sub
sbb
inc
adc
mov
pop
adc
xor
ja
pop
or
pop
jb
repnz
test
ja
inc
mov
rcl
xchg
dec
xchg
xor
enter
push
sahf
pop
sarb
insb
pop
insb
jnp
jmp
imul
pop
push
adc
adc
cmp
aad
cmpsb
add
cld
jb
aam
mov
gs
hlt
loop
xchg
adc
out
dec
jae
mov
and
dec
hlt
addr16
cmp
push
mov
jns
jnp
iret
xor
rcrb
push
and
sbb
pop
daa
jg
test
ss
fstpl
sub
add
jne
sub
out
insl
push
stos
inc
push
rolb
int
fwait
sbb
sub
sub
cmp
shlb
dec
pop
or
imul
fs
sbb
cld
jbe
cmpsl
pop
and
xchg
inc
ja
ret
and
aad
inc
push
xor
mov
fldenv
mov
mov
flds
inc
jg
lods
cmp
adc
lock
pop
dec
jnp
mov
inc
or
movl
and
dec
stc
mov
add
rcl
pop
dec
aas
mov
push
rcr
pop
mov
jo
adc
dec
xchg
test
shlb
lahf
xor
cs
in
sub
addb
int
pop
dec
pop
pop
repz
sahf
pop
scas
cmp
mov
xchg
iret
lods
das
test
rcll
int
dec
xchg
fcmovbe
mov
cmp
scas
jge
lods
pop
sbb
dec
xchg
scas
fsubl
inc
movsb
and
cmc
mov
daa
fisubs
jle
rol
clc
push
jb
adc
in
insl
pop
jbe
andb
ficoms
outsl
push
fstl
jge
sub
movsb
test
insl
stc
jge
dec
fstps
lods
cmp
or
jns
imul
mov
sbb
jmp
lods
cmp
or
jns
imul
mov
sbb
jmp
lods
cmp
or
js
imul
mov
sbb
imul
mov
jle
icebp
jne
xor
aaa
push
pop
cs
shrl
xor
mov
mov
xlat
xlat
daa
push
aaa
push
pop
cs
ds
ja
inc
outsb
push
jle
mov
mov
out
xlat
ds
cs
pop
ss
jle
outsl
inc
pop
jbe
fs
fucomi
mov
fwait
mov
pop
ja
pop
popa
mov
mov
nop
mov
push
stos
iret
call
pop
adc
movsl
cmpsb
push
enter
stos
ret
ja
ret
mulb
push
sahf
jbe
mov
out
out
sub
hlt
jno
pop
movsb
sbb
pop
int3
sbb
pop
mov
fimuls
faddp
adc
es
daa
push
into
xor
cwtl
outsb
jbe
mov
fidivs
inc
sbb
xlat
xchg
ja
mov
ficomps
cmpsl
jg
add
xchg
addr16
cmp
movl
inc
cs
mov
pop
cmp
mov
adc
out
out
push
or
ds
and
dec
addr16
inc
ja
addr16
mov
cmpsl
call
out
leave
fucomp
xlat
lcall
arpl
adc
adc
or
push
adc
sti
repz
mov
mov
push
push
cmp
add
in
sar
xchg
std
out
pushf
mov
xorb
imul
das
and
inc
outsb
push
jle
mov
mov
out
xlat
daa
push
aaa
push
pop
cs
ds
ja
inc
outsb
push
jle
mov
mov
out
xlat
daa
push
sbb
or
push
outsl
jno
adc
into
leave
and
push
pop
dec
sub
daa
fidivl
or
push
and
aaa
cli
mull
jno
jnp
fisubrs
dec
xor
shrl
es
iret
loopne
lods
mov
test
lahf
std
gs
sti
testl
popa
shrb
leave
ljmp
jmp
pop
stc
enter
cmp
les
or
sbb
inc
insb
inc
mov
lock
scas
icebp
and
add
xchg
movsl
lcall
mov
filds
jae
into
pop
dec
jmp
push
pop
cmp
bound
ja
gs
pop
in
pop
pop
add
or
mov
cmp
fisubs
xchg
jle
hlt
fldcw
lret
das
je
xlat
lret
repnz
call
mov
mov
add
cwtl
or
imul
mov
add
push
add
cmc
cmp
mov
pop
ret
inc
lcall
aad
in
fcoml
js
dec
jg
dec
xchg
push
add
hlt
imul
stos
loop
push
mov
cld
insb
int3
hlt
pop
xchg
dec
mov
inc
pusha
add
mov
jbe
dec
lock
lods
jne
sbb
fimuls
pop
adc
test
pop
jbe
jb
dec
insb
je
push
cmpsl
add
pop
pop
lret
insb
mov
mov
je
sub
or
jg
orb
mov
sbb
mov
outsl
lea
daa
stc
in
cmp
call
inc
adc
push
sub
insb
jecxz
cmp
dec
pop
outsb
popf
lret
pop
cs
dec
or
ficoml
fucomp
mov
inc
push
jg
add
cmp
pop
push
imul
cmp
lahf
inc
pop
jg
insb
mov
loop
into
scas
outsb
xor
test
xchg
out
pop
sub
sub
pop
jle
sbb
xchg
pop
sub
adcl
mov
loop
jnp
pop
inc
jb
or
bound
addr16
or
fpatan
mov
or
out
out
mov
call
fimuls
test
out
icebp
daa
push
xor
mov
jo
xchg
divb
adc
dec
mov
pop
xchg
insb
fadds
les
xchg
push
sub
stos
movsl
and
sbb
arpl
mov
fdivl
lods
mov
or
mov
xchg
lock
popa
mov
adc
pcmpeqw
and
jge
push
xor
adc
dec
fbld
outsl
scas
scas
pushf
cmp
roll
jl
les
mov
add
and
jbe
fisttpl
fldl
aas
add
and
jbe
xchg
mov
mov
adc
xchg
mov
fcomip
mov
mov
cmp
jb
mov
scas
pop
jle
sbb
inc
jl
inc
mov
mov
pop
inc
repnz
loopne
mov
dec
fsubr
cmp
lret
pop
test
leave
xor
xchg
in
pusha
xchg
dec
pop
sub
mov
adc
daa
icebp
jecxz
pop
lea
lret
out
sar
pushf
nop
push
leave
jae
aam
jg
jnp
push
xchg
sbb
mov
aaa
gs
ror
inc
inc
adc
xchg
or
loop
rcrl
hlt
aas
xorl
shlb
pop
out
mov
and
mov
hlt
in
frstor
adc
out
and
jnp
xchg
pop
lahf
push
push
jno
sbb
out
mov
inc
xchg
decl
and
cwtl
jmp
ss
adc
leave
lea
push
inc
push
movb
mov
or
punpcklbw
pop
push
imul
into
decb
add
stos
jecxz
fsubs
mov
rclb
and
shll
sub
pop
mov
jmp
packuswb
mov
sbb
and
push
mov
or
sub
cmp
out
jg
iret
pop
mov
mov
xor
pop
sti
xor
mov
ficoml
repnz
mov
call
jge
mov
cmp
xor
into
jne
enter
fs
call
cs
pop
ss
jmp
sti
arpl
fisubrs
call
popf
sub
stos
mov
sbb
push
popf
daa
inc
xacquire
repz
mov
jmp
test
pop
int
inc
mov
xor
pop
sbb
adc
adcb
sbb
mov
mov
mov
xor
hlt
scas
fmul
fildl
sti
add
dec
enter
jne
fdivs
cli
imul
push
adc
inc
js
xlat
pop
xchg
insl
xchg
mov
or
adc
icebp
in
movsb
pop
lods
mov
jno
mov
loopne
cmp
push
in
mov
hlt
dec
push
push
jle
push
push
jae
inc
xchg
push
in
jo
xorl
inc
add
mov
push
adc
movb
inc
ss
jae
jb
xchg
and
int
push
jne
cmpordps
mov
jl
jno
adc
xchg
xchg
stos
inc
sub
call
cmpsl
pop
sbb
dec
pop
inc
cmp
sbbb
sbb
sub
jns
js
and
repnz
jmp
xor
lea
stos
mov
and
lret
lock
lret
test
push
mov
cmp
out
and
movsb
inc
mov
sub
fnstcw
stc
into
pop
scas
pusha
mov
ficompl
and
popa
or
test
cmp
lret
mov
addr16
sub
xor
js
lret
leave
fisubs
adc
lea
add
shll
lret
or
notl
or
jb
movb
icebp
pop
negb
je
pop
add
push
popf
push
dec
test
rol
jns
or
scas
and
addr16
sbb
je
out
mov
enter
and
mov
shlb
mov
push
and
cmp
jle
mov
mov
sub
out
sahf
pop
xor
xor
lods
jl
mov
xchg
jb
sub
out
lcall
adc
sub
mov
pop
decb
in
jne
pop
je
sub
das
or
data16
push
adc
icebp
into
aas
cs
xchg
lret
mov
aas
mov
dec
movsl
jecxz
push
imul
mov
dec
mov
cmp
xor
adc
inc
or
cwtl
or
daa
xor
mov
insl
cmp
mov
movsl
xchg
pop
add
dec
mov
test
test
fucomip
jnp,pt
pop
add
sti
mov
cli
sbb
rclb
xchg
ljmp
int3
loopne
dec
mov
shll
mov
scas
jbe
dec
adc
push
jmp
or
aaa
dec
mov
cltd
add
mov
aam
mov
pop
inc
mov
movsl
pusha
sub
push
in
mov
jl
stos
cmp
mov
mov
ljmp
les
aam
rorl
test
in
sbb
stos
xchg
loope
aad
add
mov
xlat
dec
jae
xchg
adc
cmc
pusha
mov
xorl
in
int
das
jae
sbb
pushf
xchg
lods
adc
push
cltd
nop
inc
pop
fcmovnb
es
mov
movsb
mov
xchg
lcall
cmpsb
outsb
lcall
lcall
push
scas
jae
jne
xlat
call
xor
adc
push
or
hlt
fwait
pmaxsw
mov
and
insb
mov
xchg
fstpl
in
out
xor
outsl
fsubs
mov
addr16
int
push
icebp
aam
int
pop
pop
imul
mov
mov
sbb
ds
cmpb
xor
sub
xlat
pop
or
pop
sbb
das
sub
xchg
xor
repnz
sbb
pop
shlb
and
push
fldcw
push
and
inc
mov
jo
cltd
mov
mov
into
mov
pop
add
adc
mov
push
xor
or
pop
in
pop
and
int3
sub
and
push
es
push
sti
xor
pop
shll
idivl
inc
mov
fadd
mov
cld
sbb
in
mov
cmpb
out
cmpsb
int
outsl
and
pop
ret
cmc
mov
into
in
sub
xor
dec
jae
repz
mov
das
push
cli
aas
lret
cmc
jecxz
or
inc
xor
insl
aaa
mov
scas
push
cmp
push
inc
dec
add
es
adc
aaa
pop
subl
cs
stc
imul
inc
ficomps
pop
idivl
lea
les
ljmp
movsb
cwtl
push
push
dec
pop
repz
lret
fdivrp
enter
aaa
jmp
ss
jb
adc
dec
sbb
sbb
jl
fimuls
movsl
lds
jl
lds
cmc
add
adc
incl
dec
cs
clc
adc
xchg
sbb
inc
rorl
lock
dec
jbe
ficoml
nop
dec
adc
dec
jno
ficompl
mov
lock
cld
push
add
int
adc
cmpl
lock
adc
rcrb
outsl
scas
mov
mov
pop
jg
jecxz
pop
jae
xchg
adc
bnd
adc
test
push
jmp
pop
in
enter
rorl
loop
add
lcall
jg
jb
add
rcr
xchg
or
cmp
aas
inc
movsb
add
xchg
test
dec
aaa
adc
test
cs
mov
mov
push
or
jl
orl
pop
nop
jmp
lds
decb
sub
mov
outsl
lret
and
ljmp
or
cmp
das
cmp
stc
arpl
add
out
ds
shrl
and
pop
push
inc
dec
pop
or
fdivrs
xor
mov
push
stos
pop
adc
cmp
cmp
adc
addb
or
mov
test
ljmp
lcall
mov
add
pop
sarb
mov
xlat
inc
mov
lods
je
cmpsl
pop
add
pop
fisttpl
mov
pop
lods
aam
mov
mov
outsb
ret
ljmp
icebp
lcall
popf
dec
jle
sub
testl
jecxz
in
sub
or
movsb
push
repz
sub
fwait
sub
ljmp
add
xor
insl
xlat
ret
das
sub
xchg
outsb
inc
mov
pop
jg
ret
test
mov
sahf
dec
add
mov
and
es
mov
popa
cmp
inc
push
jg
movsb
mov
pop
pop
or
sub
pop
fidivrl
psllw
push
adc
pop
insl
outsl
in
jl
xchg
stos
and
loope
sub
orb
pop
push
jecxz
fisubrl
fists
xor
xchg
push
and
fsubrl
dec
push
sub
dec
mov
mov
jns
into
cbtw
mov
adc
rcrl
add
sarb
jle
pop
xchg
pop
pop
jnp
dec
jle
std
push
or
mov
fsubr
or
lret
test
dec
rcll
jae
cmc
test
gs
push
clc
loope
mov
inc
sbb
gs
rclb
fcomi
sbb
add
out
lock
ret
hlt
test
sbb
push
push
enter
std
adc
aad
push
or
shl
imul
cld
sub
in
ss
clc
inc
jecxz
repnz
scas
bound
cmpsb
mov
inc
xchg
mov
sahf
mov
cwtl
pop
in
mov
out
add
jne
cmp
sbb
pop
adc
xchg
arpl
mov
cmp
push
in
out
xor
in
xchg
fcmovnu
push
loope
shll
pop
rorl
jmp
jbe
sbb
sub
and
mov
jecxz
mov
mov
pop
xchg
int
push
mov
xor
add
xchg
push
xor
sub
mov
mov
into
mov
int
mov
popa
imul
or
fsubl
mov
mov
add
aaa
loopne
cld
jno
adc
mov
lret
ret
pop
insl
inc
pusha
add
das
js
mov
movsl
mov
jno
cmp
ss
in
jne
cmp
push
fs
push
js
loope
es
xchg
inc
cmp
mov
shll
mov
sbbl
add
in
loopne
in
mov
pop
add
pop
dec
call
jbe
lds
ficoml
sbb
jge
or
inc
mov
sub
jecxz
sbb
loopne
repz
sub
or
jne
iret
pop
imul
push
test
mov
imul
xor
inc
arpl
iret
add
out
and
outsl
mov
es
out
cltd
and
pmullw
stc
add
push
xor
loop
arpl
and
cmp
lods
add
pop
xor
pushf
pop
loop
mov
mov
or
jmp
inc
cmp
in
jecxz
xchg
sub
lods
sti
push
dec
popf
movsl
mov
insl
and
add
inc
cmp
push
cli
push
shrl
dec
in
inc
addr16
mov
mov
cltd
shrb
fsubs
pop
inc
not
mov
ret
divl
mov
lock
int
cli
jne
lret
inc
bound
lcall
jno
ret
push
test
arpl
cmc
nop
or
movsl
jbe
loopne
push
popf
cmpsb
add
xlat
call
repnz
mov
sbb
jb
or
xor
inc
xchg
xchg
push
cmp
stc
adc
xor
sub
lcall
test
stc
pop
daa
scas
cli
xchg
mov
out
mov
in
jecxz
lods
jbe
jge
push
and
cmpsl
cltd
mov
push
inc
dec
lahf
inc
push
das
insl
mov
push
sbb
icebp
jne
ficomps
sub
jl
into
adc
lret
mov
dec
mov
or
fistps
inc
xlat
daa
out
push
inc
stc
mov
push
pop
daa
stos
leave
jp
inc
lret
jge
rep
or
add
jae
add
into
cli
nop
jne
into
ds
in
int3
adc
mov
fmull
loope
or
xor
dec
xchg
fistpll
or
in
and
dec
roll
js
cmp
xchg
mov
pop
jae
mov
push
xor
fbstp
add
cld
insl
adc
mov
je
sub
lret
negb
les
sub
lahf
enter
cli
es
adc
or
xlat
sbb
adc
mov
out
ret
cmp
lret
lea
push
aam
mov
xor
mov
sbb
fs
inc
pop
xchg
sbb
sti
add
test
dec
call
mov
scas
out
sti
mov
lods
xor
repnz
rclb
mov
mov
mov
add
icebp
scas
rolb
lds
rorl
aaa
loope
sub
xor
pusha
dec
cmp
pushf
mov
inc
and
mov
subb
repnz
popa
cmp
repz
or
adc
popf
bound
rcrb
and
cmpsl
inc
push
test
jge
outsb
cmp
out
sti
push
dec
mov
incl
pop
outsb
and
xchg
es
in
jg
in
xchg
mov
in
push
aaa
mov
push
cmp
lret
jnp
cwtl
jbe
setae
cld
push
xor
add
ds
push
xchg
addr16
xchg
jecxz
lret
xchg
aam
and
in
fiaddl
mov
inc
and
pop
xor
out
aaa
in
fdivp
cmc
pop
mov
xchg
cmp
xor
rolb
inc
test
and
xor
pusha
call
es
fsub
mov
out
loopne
into
outsb
mov
lock
cmpsl
mov
push
inc
pushf
fidivs
mov
scas
in
push
lds
dec
icebp
lods
addr16
mov
mov
xchg
loope
mov
xchg
adc
sbb
jg
xchg
lods
cmp
mov
inc
mov
pop
jne
xchg
cld
sti
aaa
call
push
sbb
fildll
inc
inc
jl
testl
xor
push
in
mov
fwait
push
inc
xor
cmp
lcall
dec
icebp
rol
lods
xor
stos
push
negb
repnz
dec
nop
stos
push
lcall
mov
jecxz
aaa
dec
push
xchg
movsb
or
out
rorb
push
pusha
bound
cld
xchg
push
pop
loopne
sub
scas
imul
in
iret
repz
int3
jo
lret
sbb
shll
push
movb
stc
shr
ljmp
cmp
jae
pusha
mov
mov
aaa
int3
movsl
adcb
jle
das
in
mov
cmp
cwtl
rcrl
mov
cmp
cmp
and
jae
test
stos
sub
jecxz
jns
mov
jb
mov
leave
pop
push
or
pop
cmp
shl
push
sub
sbb
xchg
xor
scas
fildl
lcall
add
icebp
add
jno
aaa
mov
mov
cmc
jl
adc
pop
sub
xchg
push
fstpt
das
and
popf
ret
or
mov
cmp
sbb
pop
test
add
int
cs
sub
jp
insb
push
arpl
sub
xchg
ljmp
cmpsb
fiaddl
mov
jbe
and
sbb
dec
mov
inc
push
inc
inc
jno
push
repz
int
arpl
jecxz
mov
iret
push
sub
icebp
jne
cmp
insb
jp
in
mov
scas
dec
mov
pusha
aas
cmp
xor
cmpsl
inc
adc
pop
adc
fistl
jnp
shr
flds
and
push
xor
xor
aas
and
mov
jnp
mov
mov
mov
les
push
cmp
cmp
cld
subl
shr
push
movsl
mov
int3
ret
cmpsl
jo
mov
popf
mov
cmp
pushf
jmp
dec
push
cmpsl
ret
cli
add
sbb
xchg
sbb
cmp
jo
les
dec
clc
ja
mov
xchg
mov
les
mov
fwait
data16
jo
push
rolb
inc
outsl
sub
jecxz
or
movsb
add
icebp
cwtl
ds
inc
faddl
or
or
xchg
mov
cmp
mov
pop
or
push
jecxz
loopne
xor
or
imul
repnz
in
push
aas
push
in
add
sub
les
fisttpl
imulb
fisttpl
bound
out
add
jg
scas
loopne
xor
mov
clc
add
out
mov
cmpsb
jp
lcall
repz
inc
cmp
mov
roll
clc
gs
cmp
cltd
cmc
xor
push
out
or
xchg
test
dec
outsb
mov
fadds
outsl
fidivl
das
cwtl
xchg
and
add
adc
cmp
rcr
test
mov
jo
jnp
popf
fidivrs
jnp,pt
cmp
inc
nop
cmp
adc
and
addr16
sbb
add
cmp
imul
icebp
iret
lahf
ror
in
xchg
and
lret
gs
dec
ss
and
and
repnz
fstl
and
lock
or
sarb
pop
gs
arpl
fldcw
es
sub
or
inc
int3
int3
dec
mov
rcr
iret
clc
icebp
sbb
fldenv
or
sbb
out
mov
push
popa
lods
hlt
pop
into
jp
inc
int3
adc
push
into
flds
aam
jp
shr
fistps
dec
xor
fs
push
out
xor
jne
arpl
fimuls
dec
and
cmp
aad
in
fwait
add
inc
cmpsl
cmpsl
aas
jo
mov
lret
addr16
das
jns
mov
in
mov
subl
mov
pop
sbb
xor
pop
pop
das
push
add
mov
dec
and
test
test
pop
xchg
and
inc
insl
cltd
sub
out
call
inc
addb
in
sub
sbb
dec
ljmp
inc
in
sub
hlt
lret
xor
or
xchg
repnz
pop
lcall
adc
and
inc
sub
lods
clc
scas
sub
mov
xchg
dec
outsb
negl
xchg
mov
in
dec
jnp
subb
jbe
lret
scas
leave
punpckhbw
or
arpl
daa
and
add
pop
inc
cwtl
je
cmp
hlt
push
mov
popf
cmp
imul
fcoms
mov
ljmp
dec
ja
inc
outsb
push
jle
mov
mov
out
xlat
daa
push
aaa
push
pop
cs
ds
ja
inc
outsb
push
jle
mov
mov
out
xlat
daa
push
aaa
push
pop
cs
ds
ja
inc
outsb
push
jle
mov
mov
out
aad
daa
push
xor
ds
ja
outsb
xlat
jle
mov
sub
inc
jg
cmp
sub
push
mov
sub
mov
andl
andl
andl
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
mov
lea
push
movl
movb
movl
movb
movl
movb
movb
movl
call
leave
ret
and
xor
add
adc
bound
pop
bound
pop
out
adc
mov
mov
sti
ret
fiaddl
xor
outsb
or
sbb
jb
inc
dec
push
aas
mov
mov
cli
ret
ficompl
or
sbb
jp
dec
push
pop
stos
xchg
cltd
ljmp
cmpsb
xchg
scas
mov
add
jg
shlb
cwtl
dec
jns
in
addl
arpl
pop
xor
into
sub
jp
test
mov
outsb
sbb
jb
mov
cmp
ja
add
stos
daa
xor
stos
mov
xchg
mov
or
push
cmpsl
pop
das
out
decb
jb
mov
push
mov
push
dec
insb
pop
sbb
mov
aas
lds
cmc
pop
sahf
loope
xchg
leave
sbb
pop
adcb
xorb
cmpsl
mov
fidivrs
fnsave
sub
mov
adc
shlb
stos
mov
or
outsw
sti
mov
and
add
adc
xchg
jp
dec
hlt
pop
fs
sub
stos
ljmp
dec
sub
jbe
push
or
das
push
mov
fincstp
ljmp
mov
outsl
inc
push
push
jo
jae
or
pop
aas
mov
pop
je
iret
loopne
sub
enter
insb
stos
scas
xchg
mov
pop
imul
jb
inc
dec
push
pop
mov
mov
cli
ret
fisubl
sub
cmp
or
sbb
jb
inc
dec
push
pop
mov
mov
cli
ret
fisubl
sub
lods
lahf
or
loope
add
loope
int
inc
sub
repz
fldt
adc
mov
cmp
inc
jb
lock
rcrb
bound
xchg
iret
repnz
mov
mov
test
add
lea
loope
or
insl
push
jb
pusha
or
clc
out
pop
mov
mov
jmp
imul
cmp
mov
pushf
in
lcall
push
cmpsl
push
xchg
push
shrb
stos
inc
cmpsb
sub
jecxz
xor
xlat
repz
stc
mov
leave
pusha
jle
mov
frstor
jae
mov
sbb
push
jmp
adc
sub
jae
and
ss
shrl
push
sub
pushf
nop
bound
or
rorb
ss
cmp
xchg
shr
loope
jno
scas
jb
push
cmp
and
data16
xchg
xchg
pusha
push
sub
jbe
push
xchg
or
icebp
stos
int3
fbld
sahf
fwait
dec
sti
int3
pop
out
pop
sub
jb
xchg
push
subb
arpl
ss
dec
xchg
pop
js
aaa
lock
jmp
int3
jno
mov
sbb
cmove
xchg
stos
mov
pop
xor
fld
je
push
mov
scas
lea
cmp
loop
jecxz
repnz
iret
and
cmc
movsb
xchg
shrl
inc
jno
push
xchg
movsl
popa
mov
in
inc
not
jb
jp
imul
testl
jmp
xlat
aam
in
cmp
pop
test
out
cld
lret
call
mov
adc
jno
adc
push
cwtl
sbbl
sarl
sub
jmp
pop
cmc
cmp
jg
cmp
je
cld
fistps
lea
sbb
stc
cmp
out
insl
hlt
loope
and
dec
add
lret
cld
jmp
push
andl
bound
rclb
out
cld
jno
dec
movq
cld
es
xlat
sbb
cmp
movsb
fldcw
movsb
jmp
sti
es
repnz
iret
sti
add
sub
add
cld
ss
jo
add
movsb
cmp
fs
jb
mov
insb
int
aam
push
mov
mov
and
jb
jns
fbstp
out
and
push
xchg
sub
mov
add
jo
xor
rorl
lods
ret
dec
fcomps
push
jae
andl
rcrl
into
addr16
pop
xor
in
jbe
fisubs
push
sub
test
xchg
lea
into
pop
mov
test
div
dec
data16
dec
pop
lods
cld
dec
lahf
rclb
lahf
sahf
push
lcall
mov
and
and
stos
push
adc
mov
xorb
fdivrl
dec
imul
adc
dec
sbb
xchg
mov
ja
shr
lret
subb
xchg
cmp
insl
enter
jno
rorl
fdivr
cmp
xchg
loope
lret
fsubrs
ret
sub
mov
dec
sbb
int3
dec
inc
iret
cli
cmp
dec
cmp
frndint
sub
test
and
xchg
out
adc
adc
stos
fisttps
ss
add
add
pushf
lret
adc
outsb
pop
bound
xchg
sub
movsb
pop
mov
add
lea
shll
enter
out
push
popf
dec
scas
cmp
nop
cmp
sbb
icebp
sbb
sub
xchg
jle
push
pushf
jecxz
ss
pop
mov
cli
mov
rcl
mov
movsl
cmp
iret
ror
add
test
push
xor
loop
mov
cwtl
aas
sub
fiaddl
les
push
cmp
jle
popf
mov
fucom
shl
pop
push
cmpsb
mov
add
cmp
stos
push
xchg
pop
insb
sbb
adc
mov
imul
shl
cmpsb
dec
mov
out
and
mov
jo
jbe
and
std
mov
dec
lods
jno
dec
cmp
jecxz
adc
je
or
mov
cmp
jo
insl
addr16
mov
mov
lahf
push
sbb
pop
ss
push
fcomps
incb
dec
loop
mov
mov
sbbl
je
jmp
and
cmp
in
cmp
inc
push
inc
icebp
inc
mov
jo
lock
xor
xor
lret
add
loopne
pop
xor
jmp
pop
out
xchg
jnp
outsb
inc
into
fldl
mov
fcompl
mov
fwait
pushf
lea
les
scas
jecxz
mov
push
sbb
push
sub
and
fwait
aad
jl
xor
mov
cli
cmp
cmp
jae
out
js
inc
inc
insb
sbb
adc
jp
data16
sub
jecxz
sub
jp
push
ret
mov
int
lea
je
cmp
mov
push
fidivl
daa
bound
dec
xor
xlat
push
jbe
cmpsl
xchg
push
sbb
xchg
aad
xchg
int
xor
pop
cmp
mov
stos
xchg
ja
js
jne
inc
ds
loopne
mov
mov
push
add
adcb
lcall
hlt
add
nop
cli
xor
jecxz
hlt
out
lahf
sbb
rol
pop
cltd
das
and
in
jns
das
pop
xchg
inc
sub
add
nop
fildll
and
jl
or
add
lods
ficoml
jp
adc
jp
cmp
scas
in
jae
sub
or
jno
jmp
jns
cli
popa
je
mov
popa
pusha
ret
push
fiaddl
sarl
and
cs
push
jmp
push
or
or
into
push
fwait
sub
adc
or
mov
ret
mov
call
sbb
outsb
mov
push
dec
mov
xor
fwait
popf
es
mov
jae
leave
int3
fstp
push
das
fsubrl
lea
adc
cmpsl
into
lahf
adc
test
xchg
mov
test
mov
or
xchg
ja
mov
push
xchg
ficoml
shll
fistpl
out
jecxz
insl
stos
icebp
xchg
pusha
mov
dec
in
and
dec
and
mov
in
fildll
jp
or
push
and
out
pusha
mov
xchg
stos
std
push
ljmp
jmp
mov
push
add
and
std
mov
std
aaa
mov
fwait
xor
add
test
addr16
mov
loope
or
stos
inc
popf
leave
fists
cmpsb
lods
fstps
sbb
xor
cmp
test
mov
cwtl
jno
in
dec
pop
xchg
je
jp
cmpsb
int3
in
cmc
arpl
imul
outsl
enter
xchg
cmc
ss
push
shrl
jno
lds
loope
ret
xor
xchg
ja
cmpsb
movsb
pop
xchg
roll
call
sbb
in
scas
lret
jecxz
outsl
cmpsl
cwtl
cmp
sbb
push
xchg
lods
dec
xchg
test
inc
imul
fistps
shrl
aam
cmpsl
sti
es
punpckhbw
pop
out
and
ss
fisubrs
xor
push
mov
test
clc
sub
xchg
outsl
cmc
pop
aaa
fcmovu
js
and
fnstcw
push
daa
ds
jmp
adc
bound
mov
in
repz
inc
cmp
lahf
ret
es
rcl
ds
fdivrs
test
inc
pop
xor
clts
xlat
pop
in
xchg
xor
xchg
pop
stos
popl
cmp
xchg
sar
sbb
mov
xor
rcrb
addr16
mov
out
cld
pop
sub
rcr
mov
and
xchg
inc
add
pop
repz
ret
shl
scas
fcomip
mov
insb
fadd
adc
push
jae
icebp
or
out
rol
mov
adc
sahf
rclb
inc
ja
cwtl
rcl
repz
int
inc
repnz
xor
xor
add
jo
jns
mov
stos
pop
addr16
aaa
push
mov
push
loop
mov
loope
cmc
arpl
sbb
repnz
fsts
nop
in
adc
pop
loopne
add
mov
push
and
ss
xchg
and
jne
jno
adc
cld
jns
pop
inc
or
jge
ret
mov
dec
fs
fcoms
mov
xor
mov
dec
lahf
int
push
in
or
sti
pop
lock
push
xchg
pop
mov
pop
mov
inc
sbb
mov
jg
repnz
jg
out
jmp
sbb
in
in
imul
repnz
popf
imul
inc
fstps
pop
movsl
out
shl
js
icebp
lock
test
pop
sbb
sti
mov
sub
mov
mov
push
test
out
jne
arpl
loopne
int
jno
sub
pop
int3
ror
inc
xchg
stc
lret
mov
jle
out
mov
dec
roll
daa
aaa
std
ljmp
out
pop
popf
pop
mov
fs
sbb
jo
ja
fnstcw
jl
sbb
scas
call
xchg
call
mov
mov
lret
inc
call
cmp
daa
cwtl
mov
pop
cmpsl
cmc
mov
pushf
dec
aam
ficompl
pop
inc
sub
in
mov
ss
or
enter
or
sbb
stc
in
lea
out
push
daa
adc
das
je
and
xacquire
xorb
clc
idivl
inc
jge
mov
mov
push
rcrl
jle
sbb
cmp
adc
aas
ljmp
dec
addr16
sti
out
lret
call
pop
push
xchg
push
fstp
xor
and
ss
or
fimull
xor
shrl
out
ds
jl
fldl
ljmp
sub
loopne
sbb
in
movsb
mov
idiv
xor
mov
cli
xor
cmp
addr16
sub
mov
sbb
sbb
mov
lock
inc
push
mov
mov
pop
cmpl
mov
ficoml
rcll
int3
jp
mov
adc
pop
sbb
cmp
mov
mov
add
jge
call
cmpsl
je
pusha
xchg
xchg
sub
add
jmp
imul
mov
jmp
push
imul
lock
mov
cld
sahf
dec
add
mov
sub
notb
sbb
push
or
insb
jae
es
inc
test
mov
inc
test
loope
jmp
or
jl
dec
jmp
or
ljmp
pop
sub
fidivl
lcall
xchg
leave
loopne
xor
inc
inc
jecxz
jne
aaa
gs
xchg
pop
xchg
dec
jns
or
xchg
fwait
or
and
jns
mov
push
daa
test
pop
inc
scas
cwtl
mov
mov
ficompl
adcl
jmp
arpl
xchg
enter
push
adc
lea
jl
and
pusha
push
dec
ror
jne
mov
fs
scas
lds
popf
jo
inc
xchg
test
adcl
cmp
inc
sub
test
adc
xor
repz
clc
or
pop
sti
xchg
mov
cld
flds
fdivs
imul
aas
cmpsl
add
repz
lret
push
mov
add
mov
hlt
jb
cmpsb
mov
fs
push
adc
or
dec
pop
in
es
or
rorl
pusha
into
mov
mov
leave
cmp
pop
mov
pop
lods
jnp
sti
mov
sub
aad
or
dec
std
mov
jne
xchg
xor
repz
xchg
xchg
jl
and
adc
xchg
or
xchg
and
lret
inc
mov
mov
xor
ficoms
rcll
lcall
addr16
jg
scas
lcall
cmc
icebp
and
push
fdiv
lahf
outsb
jae
add
push
mov
lcall
jo
mov
lock
sbb
mov
inc
loopne
push
loope
sbb
mul
add
sub
pop
test
pop
in
dec
scas
and
ret
inc
add
mov
jnp
sbb
sub
or
pop
loopne
add
out
cmp
cwtl
adc
dec
and
push
in
aad
add
leave
dec
bound
andb
jno
jl
out
idivb
leave
xor
fists
adc
adc
mov
jecxz
dec
cmp
and
sti
andl
push
xor
push
and
sbb
cmp
sbb
in
add
mov
mov
mov
repnz
fldt
and
inc
lret
cmp
jbe
dec
mov
push
dec
jo
push
inc
mov
int
xchg
xchg
cmc
adc
les
adc
dec
xchg
mov
xchg
sub
jb
lret
insl
cmp
nop
push
mov
xor
inc
push
pop
and
in
xor
jnp
out
xor
and
icebp
sbb
icebp
popa
out
cmpsb
scas
jnp
adc
add
aam
mov
xor
adc
test
dec
in
iret
imul
xor
push
sbb
push
push
adc
xchg
cmpsl
cmpsb
xlat
add
addr16
and
js
icebp
xchg
jmp
mov
nop
or
add
pop
push
pop
cmpsb
adc
jnp
push
adc
or
pop
jno
leave
jmp
mov
or
mov
add
and
int
adc
in
repz
es
shll
and
jno
mov
or
test
or
lret
inc
add
and
add
fnstenv
xchg
int
mov
sbb
lods
mov
divl
jl
cmc
mov
push
mov
ficoms
cmpsl
aas
mov
cwtl
xchg
aaa
add
stc
jp
lret
sti
fdivrl
mov
sub
inc
cmp
push
and
inc
loopne
push
dec
movsl
scas
mov
mov
xor
add
lret
add
nop
add
jle
faddp
cmpsl
mov
xor
jp
push
jmp
jmp
cmpsb
dec
ja
fs
out
arpl
cld
sar
filds
test
xor
shll
pop
and
or
shll
int3
fs
sub
das
inc
test
and
push
stos
sub
push
movq
cmpsl
push
sbb
aam
dec
loopne
icebp
sbb
push
mov
xchg
add
adc
cmp
and
inc
mov
xchg
sti
push
xor
cmp
fstps
cmp
stos
mov
push
pop
out
clc
or
stos
leave
ret
lods
movsb
outsb
or
mov
out
xor
jns
jne,pt
out
dec
sahf
aas
je
shr
inc
push
cmp
and
mov
cltd
ss
out
dec
xchg
adc
into
mov
sub
out
test
jl
and
or
jecxz
cs
pop
test
fnstenv
lds
mov
in
inc
dec
jecxz
ror
nop
cs
or
fstpl
out
jb
pusha
mov
inc
leave
sbb
jno
shlb
outsl
add
xor
jae
mov
out
aam
mov
jb
rolb
xor
push
dec
inc
add
repnz
xchg
sbb
sarl
mov
and
pop
jg
sbb
mov
cmp
inc
and
imul
sbb
jo
sbb
xchg
inc
cmpsl
popa
outsl
push
push
add
repnz
leave
adc
mov
push
xchg
cmp
les
sub
push
nop
and
xchg
xor
mov
dec
or
pop
mov
mov
mov
push
sbb
dec
mov
sub
dec
outsl
adcb
dec
mov
xor
movb
jge
sbb
xor
mov
and
sbb
clc
aad
sub
pop
in
mov
lret
sbb
lds
dec
rclb
push
jl
xchg
add
fwait
daa
adc
add
xchg
ret
inc
jo
xor
inc
adcb
push
aaa
sub
xchg
mul
xchg
test
mov
sub
jmp
mov
test
jg
jecxz
mov
adc
std
dec
dec
stos
addr16
adc
push
mov
add
cmp
xchg
push
out
fnstenv
test
push
dec
ret
mov
mov
mov
repz
test
inc
popa
jp
jl
xor
adc
xchg
jl
pushf
mov
cli
dec
addr16
sub
push
or
test
pop
adc
sbb
popa
rcrl
lret
test
mov
dec
out
xor
mov
sbb
ja
icebp
adc
movsb
adc
or
mov
jae
dec
js
lea
mov
mov
cltd
mov
pop
sbb
mov
cmp
and
adc
push
out
sub
inc
divl
sbb
inc
lods
push
jno
jns
pmullw
inc
ss
scas
pop
mov
rcrb
test
movzwl
icebp
es
inc
cmp
std
pushf
add
negb
cmp
out
call
sbbb
cmpsl
jg
sahf
enter
insb
in
xchg
repnz
add
jbe
pop
int3
out
leave
cmpsl
pop
sbb
add
sti
out
imul
push
or
cmp
jno
lcall
xchg
mov
cmp
std
aad
dec
movsl
adc
dec
dec
lock
push
push
scas
sbb
cmp
jmp
hlt
lods
int
int
mov
sti
stc
jecxz
push
add
xchg
es
mov
ja
xchg
mov
add
popf
jge
fsubp
mov
ret
mov
or
add
push
and
cmp
lahf
mov
movsb
mov
pop
fdivrs
cmp
mov
mulb
jns
push
jnp
adc
lret
xchg
xchg
adcb
xchg
test
xchg
xchg
js
xchg
rclb
and
in
sub
adc
and
mov
testl
mov
repz
and
popf
cld
dec
clc
mov
setle
push
test
and
rol
sbb
rclb
sbb
sbb
adc
mov
insb
out
xor
fs
bound
int3
out
testl
gs
repnz
das
inc
and
and
repz
pop
xchg
and
inc
jb
testb
stos
sub
into
inc
mov
jecxz
xor
lret
jmp
and
and
push
lret
in
mov
sbb
fcoml
aas
divb
push
mov
pusha
subb
pmaxub
in
loope
push
mov
aad
ret
cltd
decl
push
lds
dec
jb
cmp
call
pop
cwtl
push
xchg
inc
ljmp
pop
lcall
enter
dec
mov
lahf
push
out
scas
stos
js
push
or
rcll
jno
ror
rcl
cmpsl
scas
mov
into
ror
lods
test
icebp
add
fldt
dec
in
out
cs
test
push
mov
dec
pop
ja
mov
sub
dec
cmp
sbb
cmpsl
pop
movsb
mov
sbb
mov
sub
ret
jmp
jne
mov
adc
cmp
ret
sbb
fcmovnb
mov
xor
aaa
and
or
xchg
sub
mov
enter
fildl
mov
inc
add
add
shrl
adc
jae
popf
gs
dec
push
imul
in
ret
das
fmul
pop
daa
dec
cmpsb
aam
arpl
xor
fcomi
stc
mov
outsb
negl
mov
xchg
shrl
shll
scas
fldcw
imul
jp
push
in
aad
xchg
mov
in
ss
negl
dec
aaa
add
rcrb
ret
repnz
inc
bound
sahf
jo
jecxz
lods
movsl
jmp
jg
xor
adc
mov
ljmp
push
xor
inc
notl
sbb
in
xor
ret
pop
cmpsl
cmpsb
jno
aas
xor
push
mov
fadds
iret
out
push
lret
pop
cltd
mov
jne
jl
push
test
popa
xchg
nop
jmp
xor
hlt
push
iret
or
lcall
leave
mov
iret
adc
fisubs
push
lret
mov
fs
fsubs
addr16
scas
push
xor
aad
and
push
shl
dec
xchg
in
ljmp
inc
inc
pop
sbb
sub
xchg
lock
push
in
enter
jecxz
push
fadd
fists
test
mov
dec
or
push
jge
inc
repz
in
hlt
mov
push
adc
add
sub
pop
daa
jbe
mov
add
in
add
test
xor
mov
lret
in
dec
sarl
pop
shll
lcall
jbe
nop
out
sbb
cmp
out
xchg
in
dec
pop
mov
adc
testb
lods
jo
fcoms
je
icebp
adc
outsl
sbb
cld
test
sbb
nop
dec
inc
jecxz
add
push
gs
ljmp
bound
jp
dec
push
pop
mov
mov
cli
ret
fisubl
sub
cmp
or
sbb
jb
inc
dec
push
pop
mov
mov
cli
ret
fisubl
sub
cmp
adc
repnz
jp
dec
xchg
pop
mov
mov
cli
ret
fidivl
sub
pop
or
sbb
bound
dec
rcrb
sub
jp
cmp
push
adc
pop
mov
or
jg
test
jns
dec
mov
lds
aad
in
cmc
sbb
leave
xor
xor
test
pop
movsl
dec
mov
add
dec
cmc
sbb
popa
xor
test
jne
test
mov
lds
push
nop
jge
sbb
jno
and
sahf
fidivs
outsb
xchg
lea
push
ret
sub
je
adc
icebp
inc
dec
bound
gs
leave
mov
js
adc
pop
and
cmp
aam
mov
js
push
call
inc
test
das
sub
test
sar
les
xchg
or
or
fnstenv
shl
jb
data16
fbld
data16
dec
cli
cld
cmc
adc
lcall
out
xor
and
sub
mov
hlt
out
sub
inc
out
mov
cmp
leave
jne
shrb
adc
popf
inc
xchg
sub
mov
jmp
xor
mov
test
xchg
mov
lds
cmc
ja
mov
pop
testl
ja
test
lock
cmp
aad
xchg
js
lods
jo
inc
test
cld
inc
adc
loopne
les
cmpsl
sub
les
jne
push
adc
mov
mov
test
jns
dec
mov
lds
aad
in
cmc
sbb
leave
xor
mov
test
jns
dec
mov
lds
aad
in
cmc
sbb
push
cmc
mov
cld
jle
cmp
cmpl
inc
addl
push
mov
scas
popl
push
pop
addr16
dec
fdivs
add
add
pop
xchg
sbb
sub
subb
fldcw
fucom
sub
lds
sbb
sbbb
sar
rcll
stc
insl
push
jb
pop
movsb
scas
mov
mov
scas
mov
jmp
dec
iret
push
mov
pusha
xchg
push
out
inc
ds
mov
stos
lods
push
mov
loop
push
push
inc
pop
sahf
das
and
or
movsb
out
mov
adc
aas
filds
imul
mov
xchg
push
or
mov
mov
std
aas
push
xor
push
pop
inc
jmp
push
loope
pusha
js
out
inc
push
call
out
lret
insl
sub
mov
stos
xlat
repz
and
xchg
or
rclb
jae
negl
iret
pop
stc
or
push
xchg
fld
mov
mov
xchg
shlb
stos
dec
sub
xor
jl
jg
cmp
stos
loop
adc
stos
mov
mov
dec
sbb
in
fcmovu
push
inc
mov
jl
xchg
and
jbe
ljmp
into
xor
fwait
jmp
rorb
sti
xor
outsb
out
xor
push
and
enter
cmp
jbe
ds
mov
push
xor
and
divb
sub
shll
fucomi
test
sti
ja
daa
jns
push
push
and
lret
jmp
test
fs
fwait
xchg
cs
ljmp
sbb
hlt
add
sarl
push
aaa
pop
pop
nop
movsl
bound
push
jmp
pop
mov
xor
dec
aaa
bound
ds
fsincos
xchg
and
test
inc
pop
lret
das
sub
aam
push
sbb
xchg
mov
cmp
sub
and
gs
cmp
push
je
or
pop
and
add
fisubl
lods
pop
pop
fsubs
push
fldcw
addr16
mov
pop
xchg
enter
movb
in
scas
movsl
sbb
push
inc
cmp
aaa
push
inc
push
sbb
mov
rorl
cmpsb
arpl
cmc
xchg
aaa
aaa
adc
sti
add
fistps
mov
int
leave
inc
mov
push
ja
pusha
and
cs
sti
ss
in
mov
dec
pusha
lds
imul
fcmovbe
inc
arpl
jl
rcr
fs
pop
sbb
std
push
mov
lret
adc
dec
shl
adc
out
popf
pop
mov
lret
sub
inc
sti
pop
adc
clc
int3
fucomip
rol
jle
push
cwtl
xchg
inc
and
fmul
xor
aad
pushl
lods
xor
mov
dec
push
adc
outsl
mov
stc
cltd
push
fs
sti
jle
xlat
leave
or
or
fldt
pop
sub
push
or
sbb
xorl
and
mov
lods
fistpll
mov
fldt
dec
mov
cmp
jmp
jnp
mul
jle
cmp
pusha
mov
mov
enter
clc
cmp
fwait
hlt
mov
popf
data16
popa
outsl
pusha
jnp
sahf
add
cmpsl
mov
or
xor
or
sbb
xor
fists
cltd
rol
xchg
icebp
inc
out
in
mov
or
pusha
push
addr16
std
cltd
test
cmp
in
inc
or
mov
adc
rclb
pop
mov
cmpsl
mov
cmp
mov
hlt
push
leave
ficoms
ss
popf
mov
in
lods
stc
jne
cmp
cmp
pop
or
jg
inc
sar
add
push
jge
xor
sub
cltd
push
xchg
push
pop
pop
loop
pushf
movsl
repz
shl
cwtl
dec
into
insb
mov
sub
jle
mov
dec
jecxz
xor
inc
mov
mov
and
mov
mov
sbbb
cltd
lock
test
cmp
cmp
sti
loope
inc
mov
inc
jle
loop
imul
add
ret
add
sbb
shlb
xchg
sub
sarb
ja
movsb
pop
mov
fcompl
mov
stos
lret
movb
mov
jp
sub
enter
xor
ss
data16
movl
jge
es
sub
in
sub
jne
call
sub
pop
insb
cmp
test
sbb
out
ret
and
sbb
or
dec
aam
addr16
mov
fldenv
push
fwait
jb
ret
pop
cld
or
sub
mov
hlt
xor
fisttpll
leave
in
adc
jno
lret
rorb
outsb
cld
div
and
jns
add
ds
jmp
addr16
leave
and
push
adc
insl
mov
lods
jp
sbb
int
mov
push
mov
mov
notb
es
sbb
lret
xchg
cmp
in
dec
add
cmpsl
push
cltd
nop
sbb
ja
add
and
cld
bnd
ss
xchg
cmpsb
jb
or
mov
iret
sbb
lcall
lahf
sbb
push
jecxz
aad
pop
cld
icebp
or
xchg
mov
lods
je
pop
fdiv
adc
cmc
sti
mov
je
movsb
lea
imul
call
push
stos
testl
test
jnp
in
mov
scas
fdivl
loopne
les
dec
mov
mov
xchg
jnp
jecxz
aam
lods
mov
mov
ficomps
std
sbb
pop
fstps
popf
xchg
jecxz
fprem
fidivl
mov
jecxz
iret
adc
sbb
sbb
or
iret
push
dec
inc
enter
sbb
mov
das
test
sbb
sub
cld
rcrb
scas
push
mov
fistl
loopne
push
mov
hlt
sub
nop
lea
pop
mov
or
inc
jno
mov
inc
lret
aas
cltd
in
movsb
and
pop
fisubrs
cmp
xchg
xchg
nop
cmpl
pop
and
stos
push
inc
add
test
xchg
jo
mov
pop
cmp
cli
mov
and
sbb
pop
in
jmp
fsubrs
rorl
adc
and
lods
aam
xchg
std
ljmp
fs
jno
sub
mov
fisubl
or
inc
mov
xchg
pop
gs
mov
mov
or
and
insb
push
cltd
cli
jecxz
rcll
pushf
mov
arpl
mov
imul
pop
cmp
fnstenv
adc
outsl
lcall
sbb
pop
dec
pop
and
std
mov
sbb
fisubs
xor
jecxz
cld
pop
mov
adc
cmc
cmp
push
in
data16
aad
cmp
push
fwait
mov
or
jbe
and
adc
insl
adc
mov
or
nop
out
lea
nop
les
xchg
sub
ljmp
jns
mov
sahf
sti
jne
mov
pop
in
xchg
pop
into
jnp
lds
push
xlat
call
xchg
lds
and
pop
mov
xchg
pop
xchg
popa
daa
insl
mov
mov
sub
add
ficompl
mov
fdivrl
sbb
sub
push
repz
or
mov
sub
xor
sbb
sbb
leave
sbb
xor
push
lret
cmp
xor
fistpl
cmpsb
arpl
sti
jb
sbb
cmp
mov
dec
xor
imul
loop
notl
and
je
jecxz
ss
les
or
cs
imulb
jnp
add
xor
les
xor
and
jecxz
stos
jb
repz
sub
out
mov
rcl
sub
repnz
call
add
rolb
fldcw
testb
cli
arpl
inc
sub
cmp
mov
inc
mov
dec
aam
ss
icebp
mov
sti
cwtl
pop
in
add
mov
push
mov
mov
add
mov
shll
cmp
out
jg
add
push
movsb
mov
pop
in
or
stos
in
add
jecxz
gs
mov
dec
lock
rcr
sbb
push
cmp
std
scas
sbb
cmc
push
xor
mov
ljmp
fstl
aaa
dec
movsl
fcomip
and
or
imul
or
cmc
jge
aam
ds
xchg
push
sbb
cmp
add
mov
sub
cmp
in
inc
sub
daa
dec
pop
iret
imulb
sbb
cmpsb
aas
mov
pextrw
movsb
into
adc
sub
adc
mov
xor
lods
add
call
xchg
mov
rclb
xorl
aad
enter
adc
sbb
enter
sbbl
cs
out
and
and
lds
mov
or
pushf
gs
or
leave
xchg
aas
mov
jns
push
aad
nop
pop
xchg
mov
sbb
insl
sub
clc
sub
movsl
ja
inc
dec
mov
mov
in
scas
jns
incb
ror
call
mov
and
pushf
pop
mov
sbb
dec
push
inc
mov
mov
dec
inc
adc
push
push
dec
gs
xchg
mov
mov
add
call
push
fadd
push
cmpsl
vcmpsd
jno
inc
pop
add
pusha
in
test
jge
adc
pushf
mov
fimuls
dec
pop
mov
or
nop
xchg
mov
std
mov
jle
popf
call
mov
jl
ret
dec
mov
cmp
xchg
les
or
inc
add
and
sub
xor
or
outsl
aas
fwait
ja
and
mov
icebp
je
mov
lret
xchg
or
mov
or
imul
push
jbe
pop
je
push
xchg
cmp
scas
adc
incb
adc
inc
test
or
and
add
pop
inc
push
outsb
lret
mov
xor
test
sub
mov
lcall
mov
xchg
xchg
fimull
mov
imul
sub
mov
pop
popf
mov
icebp
and
insl
jb
aas
add
shlb
fnstenv
push
jnp
cmp
push
test
pop
mov
out
sbb
mov
jle
or
loopne
hlt
fisttpl
test
xlat
test
xchg
lahf
decb
sbb
jge
popa
or
rclb
and
les
mov
call
push
test
imul
lods
xor
scas
push
mov
test
faddp
mov
add
mov
xor
or
mov
xor
xlat
ret
ror
mov
or
nop
adc
mov
es
test
gs
loope
xchg
xchg
sub
jmp
imul
push
or
lret
cs
mov
daa
push
mov
mov
test
cmp
mov
adc
add
dec
data16
out
jecxz
mov
test
das
sub
push
add
insl
sub
jo
stc
and
and
test
mov
insb
cmpsb
lret
cmp
pusha
ret
mov
xor
cmpsb
mov
xorl
cwtl
or
fcoms
push
lods
push
mov
jo
js
cltd
xor
out
xchg
xchg
cs
lds
mov
aaa
out
mov
and
sbb
into
dec
xchg
pop
push
xchg
test
mov
sbb
mov
insb
and
cmpsb
pop
push
orl
xchg
sub
push
leave
aam
lds
jmp
addr16
push
ret
mov
mul
movl
repz
xchg
xchg
fstps
jp
movsl
out
xor
les
sbb
fnstsw
lea
cmp
cwtl
call
adcl
ss
lahf
push
jne
ja
jmp
sbb
or
xchg
mov
frstor
imul
sbb
sub
imul
out
fistps
jno
mov
xor
adc
and
rcr
mov
scas
sub
std
das
push
cmp
add
inc
cltd
std
jbe
dec
dec
push
sahf
loopne
inc
lahf
push
lea
das
je
jno
jno
daa
or
mov
or
sbb
insb
sub
sbb
push
jno
and
push
imul
mov
sub
out
adc
imul
add
jns
repnz
pop
lock
sub
add
icebp
adc
mov
fucom
inc
repnz
and
xchg
mov
int3
sarl
dec
xor
cmp
aaa
xlat
arpl
scas
popa
mov
rcr
cmpsb
inc
and
xor
ljmp
mov
loopne
adc
or
and
mov
xor
scas
xor
cltd
daa
push
notl
ficoml
mov
push
mov
mov
cmpsl
test
rcrb
xor
imul
aad
pop
cwtl
add
addr16
lods
push
adc
pop
push
popf
mov
rep
std
pop
out
adc
aas
sub
insb
cmp
xor
jnp
mov
inc
jno
ret
push
dec
aas
std
rcrb
sub
lahf
xchg
add
nop
or
aam
sub
mov
int3
xor
cmpsl
pop
xor
into
jle
sub
pop
imul
cmpsb
mov
loope
mov
and
dec
and
fbstp
adc
mov
mov
in
movb
push
fs
pop
ret
call
mov
mov
jl
shll
dec
pop
mov
rep
cltd
mov
push
dec
sbb
push
inc
lahf
pop
sbbb
in
pusha
or
mov
cmc
out
cltd
dec
lret
stc
lea
push
imul
add
sub
mov
pop
js
xchg
ljmp
mov
push
enter
xor
mov
out
test
cld
mov
cmp
mov
cli
mov
xchg
inc
cmp
fs
das
cmp
and
daa
in
aaa
std
fsubl
and
jbe
test
fwait
sbb
push
fstpt
fwait
adc
insl
mov
mov
fcoms
arpl
and
xor
jbe
in
pop
icebp
mov
jl
and
xor
push
mov
cmpsb
pop
sub
xchg
sbb
shlb
les
xor
mov
inc
mul
mov
sti
les
jno
adc
out
jne
dec
or
jno
mov
cmp
gs
cs
jb
adc
loopne
stc
xor
push
pop
adc
shll
inc
lcall
xchg
adc
mov
aas
jbe
stc
stc
out
lock
fisubrl
or
inc
icebp
popf
or
sub
mov
mov
and
and
mov
jl
mov
fcmovnb
fistps
in
lcall
pop
pop
lcall
push
inc
stos
xchg
lock
xchg
cld
lcall
and
out
lds
in
addb
lea
pop
xlat
push
aas
jne
push
dec
fwait
add
lret
sti
clc
fidivrl
lea
adc
xchg
insb
lock
and
fcomi
ja
loopne
lods
xchg
out
out
in
std
mov
inc
pushf
add
int
mov
and
adc
mov
lcall
xchg
jns
dec
cmp
inc
xor
xor
sti
lea
or
out
movsl
xor
ficomps
mov
into
int3
das
or
jno
call
mov
sbbl
sbb
push
jge
loop
push
cltd
mov
scas
inc
xchg
arpl
jae
push
xor
dec
adc
push
mov
push
xchg
jbe
push
jmp
or
and
inc
cwtl
mov
icebp
pop
cmpsb
int
test
test
xlat
out
inc
cs
push
xorl
pop
push
faddp
clc
lea
insl
in
aad
ja
add
and
movsl
mov
and
loopne
xor
or
std
daa
jmp
push
push
push
push
cld
sbb
out
jge
lock
jno
xchg
mov
mov
mov
lret
push
loopne
ljmp
inc
and
icebp
ljmp
and
lock
xor
adc
or
test
cmpsl
sub
call
cmp
mov
mov
pop
jl
push
cmp
adc
imul
and
dec
sub
jp
arpl
out
xor
jne
add
mov
fdivl
lahf
and
mov
adc
mov
lea
add
jl
or
sbb
fidivrl
testb
js
and
inc
jne
cmp
std
mov
jns
add
cs
push
ds
dec
loop
andl
les
jnp
ja
or
cmpsl
ja
push
sbb
fimuls
pop
out
jle
xchg
cmpsl
mov
lret
mov
adcl
imul
mov
xchg
test
dec
gs
enter
jae
insb
in
data16
inc
sbb
dec
push
add
add
jbe
fisttpll
push
jne
lahf
into
and
and
loope
fstp
test
push
mov
enter
lds
jge
icebp
push
mov
add
add
or
xor
int
or
inc
add
or
repz
jnp
push
cmpsb
cld
test
xchg
aaa
jp
leave
ret
push
jns
les
mov
nop
push
imul
sub
or
out
push
jbe
ret
jo
pushf
test
cmpsb
std
pusha
mov
lcall
fiadds
jns
punpckldq
cmp
adcl
jb
xchg
pop
into
mov
andl
mov
imul
xchg
jno,pn
adc
insb
jp
jge
pop
negb
pop
ficoms
fnstcw
jb
fsubs
fs
enter
xor
mov
mov
insl
xchg
lds
int3
out
divl
sub
out
push
subl
sub
and
cmp
dec
dec
sub
fwait
or
sub
test
jl
les
and
mov
ja
fbld
adc
daa
test
push
out
mov
pop
jle
or
and
cmp
icebp
daa
mov
jmp
js
insl
xchg
cmp
add
xor
gs
bound
pop
loopne
xchg
xor
xor
cld
cmc
decb
lret
fld
test
or
ret
sahf
jno
ja
pop
dec
sbbb
int
and
lods
mov
inc
mov
mov
pop
pop
add
addr16
sbb
inc
jae
mov
cmpsl
inc
imul
test
adc
daa
push
test
add
dec
mov
push
adc
movsb
dec
es
mov
cltd
jo
pop
pop
mov
lret
push
jmp
flds
sbb
lcall
fldenv
cmp
lahf
das
push
mov
lret
testl
stos
popf
mov
cmpsl
fwait
test
add
imul
xchg
movsb
xor
clc
push
add
push
iret
inc
inc
xor
movsl
mov
ljmp
push
and
in
jnp
add
cs
movsl
jecxz
mov
mov
scas
rcrb
dec
imul
or
cltd
lods
mov
add
mov
xchg
mull
or
sub
push
xlat
or
test
lds
pop
decl
sbb
cmp
fmul
fs
stc
dec
xchg
or
ss
pop
movsl
ret
test
fistpl
xor
pop
out
lods
pop
lods
fstpl
iret
cmp
mov
xchg
xlat
je
sahf
sub
mov
repz
inc
mov
stc
loop
rorb
test
xor
in
jg
inc
cwtl
and
pop
std
out
mov
into
es
mov
xchg
dec
inc
cmp
mov
push
push
xchg
stc
pop
sahf
jne
outsl
mov
mov
outsl
enter
xchg
or
push
sub
sub
loopne
jb
outsb
into
fisubs
gs
or
xchg
addps
jle
mov
andl
adc
in
push
mov
push
mov
in
test
cmp
std
pop
mov
loop
mov
pop
pushf
repnz
or
jg
jle
loope
aad
cmp
add
adc
xchg
fmul
and
sbb
enter
xor
lods
fcoml
ret
mov
xchg
idivb
in
sub
push
gs
xchg
stos
cmpsb
add
rorb
cmp
xlat
int
outsb
sbb
mov
lcall
jmp
stos
fistl
call
cmp
mov
pop
jns
addr16
pop
and
xchg
and
push
cmp
xchg
inc
cmp
xor
sub
icebp
push
stc
and
xor
mov
test
jns
dec
mov
lds
aad
in
cmc
sbb
leave
xor
mov
test
jns
dec
mov
lds
aad
in
cmc
sbb
mov
fld
test
cmc
cltd
test
mov
lds
aad
in
cmc
sbb
leave
xor
mov
test
mov
mov
movsl
xchg
testb
in
sbb
pop
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
ss
es
dec
push
pop
jg
add
sub
sbb
in
movsb
cld
xchg
int3
xchg
imulb
pushf
ss
es
dec
push
pop
jbe
data16
or
sbb
in
cmpsb
pushf
xchg
int3
xchg
imulb
pushf
ss
es
dec
push
pop
jbe
data16
or
sbb
inc
test
out
jecxz
imul
xchg
rcll
insb
inc
and
and
jns
xor
mov
jb
hlt
pushf
cltd
sbbl
test
cld
jmp
scas
retw
stos
or
add
jns
mov
fcoml
outsb
jl
dec
xor
mov
sbb
or
mov
xchg
and
lods
insl
jl
jae
adc
aad
add
cltd
cmp
addl
aaa
sub
cmpsb
out
jae,pn
adc
mov
mov
stos
sbb
lahf
mov
scas
stos
sbb
or
inc
sub
adc
cli
fiadds
pop
pop
in
mov
jns
cld
icebp
cltd
jecxz
data16
fstl
mov
les
push
dec
push
pop
jbe
data16
or
sbb
in
cmpsb
cld
xchg
int3
xchg
imulb
cmc
push
add
push
and
or
inc
ret
mov
mov
movsb
ret
lcall
mov
inc
insb
push
jle
dec
inc
adc
adc
sbb
xchg
rorl
iret
adc
jmp
es
push
and
cmp
sub
cmp
or
sbb
in
cmpsb
cld
xchg
int3
xchg
imulb
pushf
ss
es
dec
push
pop
jbe
data16
or
sbb
in
cmpsb
cld
xchg
int3
xchg
imulb
pushf
ss
inc
xor
cmpsb
loopne
int
or
mov
aaa
outsb
repnz
jns
fwait
ja
repnz
loopne
mov
cmp
push
shl
repnz
ret
or
xchg
pop
pop
pop
js
adc
ret
push
mov
cmp
or
scas
daa
loope
mov
xor
movsl
adc
cmp
fsubl
and
mov
les
mov
jge
sbb
jp
pop
dec
cmp
cmp
mov
mov
push
imul
inc
lcall
push
outsl
mov
out
lods
pop
imul
dec
pushf
jmp
lret
scas
jge
fcoml
push
pop
popf
test
bound
cmp
lret
jns
movsl
fcoms
aam
pop
hlt
test
lahf
in
sbb
int3
xchg
das
dec
rol
sub
push
cmp
leave
xor
stos
outsb
scas
in
cmp
pop
push
mov
out
lahf
int3
cmp
add
dec
test
dec
lahf
pop
pop
cmp
xchg
dec
cwtl
loop
je
stos
cwtl
subb
inc
push
js
pop
jge
pop
dec
clc
repnz
cmp
xlat
add
cmp
pop
mov
mov
add
dec
idivl
sahf
sub
mov
xor
mov
mov
ret
mov
jge
sub
aaa
ljmp
fldl
dec
mov
rol
push
test
mov
fucomip
dec
mull
mov
mov
xchg
rorb
movsb
iret
insl
pop
jns
pop
daa
sbb
ret
xchg
push
movsb
scas
jge
mov
cmpsl
adc
scas
stc
lahf
or
dec
dec
jnp
xor
push
xor
out
gs
mov
test
jbe
mov
fildll
aam
insb
sbb
xchg
fmull
push
mov
scas
add
stc
adc
mov
dec
in
into
fdivs
nop
in
clc
mov
xchg
test
cld
rol
stos
or
push
movsb
xchg
dec
inc
mov
push
movsl
dec
sbb
or
ds
out
pop
mov
xor
lods
ret
cltd
sti
cmpb
pushl
in
iret
hlt
pop
mov
dec
das
adc
in
inc
stos
push
shrl
and
mov
in
mov
mov
outsl
cmpb
add
in
dec
jno
adc
push
pop
jp
mov
pop
cld
mov
push
ljmp
aam
pop
jmp
inc
inc
sti
bound
jbe
movsb
test
mov
repnz
outsb
testb
xchg
mov
daa
popa
mul
popf
cmc
test
xchg
jnp
les
push
cs
mov
jle
repz
aam
lea
pop
cmp
jb
std
jg
inc
subb
cli
pop
ljmp
fimull
and
popa
cmp
in
arpl
dec
add
adc
dec
add
jae
out
dec
out
cmp
add
sub
fs
and
mov
ss
enter
icebp
ds
jns
xchg
dec
jns
xchg
xchg
lods
jecxz
jb
adc
repz
ficoml
mov
adc
adc
or
sar
xchg
pop
lea
and
jb
mov
push
fadds
mov
movsb
xor
mov
rolb
stos
jmp
pop
call
and
mov
loopne
les
or
out
movsl
cmc
arpl
pop
mov
jg
mov
popa
push
imulb
pop
inc
or
sbb
inc
inc
loope
sbb
pushl
push
fdivrl
push
adc
inc
dec
add
lret
sbb
add
mov
and
jecxz
call
bound
dec
pop
push
mov
add
or
dec
clc
xlat
and
imul
xchg
imul
pop
sub
pop
in
popa
dec
shlb
sub
mov
pusha
xor
stc
cmp
jbe
mov
jbe
js
lock
mov
dec
xor
xor
jae
inc
push
mov
scas
adc
mov
mov
lret
negb
mov
andb
mov
aaa
adc
jo
cld
add
loopne
cmp
imul
mov
adc
fmuls
xchg
pop
jle
mov
lcall
imull
test
in
jo
cmp
icebp
xlat
jle
aas
subb
dec
or
divb
adc
dec
mov
lret
fistpll
out
cmp
adc
fnstsw
inc
adc
or
sub
adc
mov
mov
test
mov
ljmp
loop
mov
xchg
dec
ret
adc
popa
ja
scas
arpl
cmpsl
mov
cmpsl
shrl
in
pop
or
dec
adc
adcl
cmp
mov
xchg
movsb
imull
fcoml
je
xchg
mov
sbb
addr16
cmp
cmp
and
dec
stos
mov
dec
jns
pop
pusha
pop
dec
loopne
cld
dec
sub
pop
imull
jmp
ds
repnz
lahf
sub
ss
jne
add
and
out
int3
push
mov
jmp
adc
push
movsl
lds
add
mov
or
imul
or
fcomps
add
incl
mov
lods
fdivrs
xor
inc
or
fsts
sbb
ja
and
lret
ljmp
rclb
mov
mov
fists
rcl
push
push
xchg
cmp
mov
lds
aam
ljmp
cwtl
sbb
imul
fsts
hlt
jno
adcb
rep
andl
fdivrs
cmpsl
lret
testb
sub
sbb
std
stos
jne
test
syscall
stos
sub
push
push
cwtl
push
fdivs
movsl
jmp
stos
aad
sub
dec
sbb
xor
push
inc
xor
es
push
cli
add
fisttps
pop
pop
cmp
test
cmpsl
cs
mov
add
jecxz
cmp
push
mov
pop
push
mov
xchg
cmc
pop
jno
enter
insb
adc
adc
out
popa
dec
loope
sub
std
inc
fldt
dec
xlat
lcall
jle
dec
lods
jp
fdivrs
lea
pop
mov
bnd
mov
in
int
sbb
xor
sbb
xchg
mov
or
outsl
push
stc
dec
xlat
mov
adc
sub
push
pop
js
es
data16
sbb
pop
xor
jo
lret
cs
jb
test
xor
inc
popf
iret
adc
jg
dec
into
jle
and
mov
xchg
inc
out
ds
mov
stc
and
dec
jmp
mov
sbb
nop
sbb
icebp
and
inc
dec
mov
lods
inc
sub
insl
jle
pop
imul
pop
lods
pop
cld
sti
iret
lock
adc
dec
lods
mov
in
inc
leave
jbe
jecxz
jecxz
lcall
popf
add
addr16
push
sub
pop
sub
and
push
dec
loopne
cs
inc
xor
ret
sbbb
fdivrl
jno
pop
subb
outsb
mov
dec
mov
inc
mov
inc
mov
mov
inc
mov
inc
out
jecxz
mov
aam
xchg
repz
mov
xor
fwait
shll
stos
or
imul
out
int
mov
push
inc
inc
fwait
cmp
sub
xchg
scas
lds
jbe
xchg
xlat
jns
adc
mov
sub
push
into
mov
xchg
push
das
shlb
cltd
pop
sub
cmpsl
bound
outsl
or
jnp
or
shrl
in
xchg
cmp
mov
pusha
in
fistpll
or
ds
aaa
push
test
and
adc
jae
loop
mov
out
fnsave
push
sub
and
aas
fbstp
push
fildl
test
stc
leave
shrb
mov
xor
je
stos
loope
nop
mov
shl
adc
pop
mov
std
pop
negl
cmp
sub
call
ds
sbb
add
lea
jl
gs
adc
int3
into
add
outsb
xor
sbb
lods
jp,pt
int3
stc
pop
or
push
mov
push
lret
dec
jae
scas
xor
lds
pop
jp
pop
cli
repz
pop
jae
rcl
fsubs
adc
and
cmc
les
insl
mov
fnstsw
and
aas
xor
leave
stc
into
push
adc
mov
sete
or
std
or
and
mov
pop
cmpsl
xor
pop
xchg
repnz
fdivs
push
mov
dec
pusha
xchg
mov
mov
push
push
ss
adc
mov
or
fwait
sbb
popa
push
lahf
jae
filds
sub
push
lcall
es
lods
aas
xor
mov
fwait
sbb
jbe
push
rcrl
fildl
leave
dec
shlb
fcom
movsl
jb
jmp
jnp
or
cwtl
sub
movsb
jl
mov
cli
lahf
stc
ret
hlt
mov
xchg
lea
add
mov
out
movsb
pop
or
xchg
clc
jp
or
lock
ret
lret
movsb
and
inc
mov
sti
mov
fwait
in
and
jl
aad
in
xor
imul
sti
repz
or
cli
fldl
inc
xchg
add
daa
xchg
mov
xor
out
lret
jmp
data16
inc
cmc
addr16
outsb
push
sub
sub
mov
xor
adc
scas
or
jns
mov
cli
mov
jae
fisubrs
mov
jae
and
mov
push
mov
pop
jne
dec
mov
mov
scas
or
mov
psubd
add
nop
leave
bound
adc
outsb
lock
mov
fnsave
cmpsb
in
and
and
andl
inc
pop
gs
pop
stos
sub
and
mov
inc
sahf
repz
cltd
xor
mov
test
test
loope
xchg
jo
hlt
push
out
cmc
push
pop
movsb
shrl
int3
add
add
push
fimull
pushl
push
dec
add
push
mov
movsb
stc
imul
cld
loopne
in
mov
es
test
sbb
cmp
repnz
xlat
xor
in
icebp
xor
aaa
in
sbb
js
sti
mov
cwtl
ds
movsb
and
sbb
jp
cmpsb
sub
mov
insl
dec
test
dec
mov
mov
scas
sub
push
sahf
cli
sbb
adcb
cmc
faddp
mov
pop
mov
sbb
inc
mov
test
shlb
ja
dec
dec
dec
outsb
cld
popa
mov
cli
in
ret
xchg
push
jmp
xchg
push
sbb
sti
mov
add
andl
imul
loop
dec
or
jno
mov
clc
lods
movsb
inc
mov
push
mov
pushf
inc
sahf
scas
push
out
mov
int
fwait
add
in
cli
cmp
call
or
xchg
xchg
je
pushf
aaa
mov
cmp
push
and
int
mov
je
das
pop
mov
call
adc
inc
arpl
lret
sbb
sbb
push
aam
test
push
fdivrs
mov
test
adc
hlt
daa
rorl
lods
lahf
mov
popa
lret
sbb
stos
dec
pop
popa
es
add
push
inc
stos
jne
hlt
sub
movsl
in
mov
fwait
sbb
mov
add
jl
push
shl
xor
cmpsl
dec
and
scas
add
sub
scas
inc
test
pop
dec
inc
xor
adc
les
or
mov
adc
fidivl
shrb
pushf
in
arpl
and
ljmp
dec
movsb
fbstp
cmp
adc
sub
mov
adc
es
outsl
lret
mov
inc
stos
pop
ljmp
pusha
mov
push
pop
adc
sub
jb
out
jno
mov
or
lahf
loopne
push
lret
out
sub
sti
xchg
les
lds
jecxz
out
push
mov
mov
xor
fmull
xchg
and
pop
ds
roll
push
ret
mov
ret
adc
popf
pusha
fwait
popf
push
or
adc
or
lock
sti
hlt
insl
outsb
inc
dec
jmp
lock
sbb
xchg
mov
mov
cli
fldenv
xchg
mov
nop
mov
outsl
mov
ffree
loop
mov
ret
sbb
sbb
cltd
push
adc
lahf
push
inc
mov
test
cwtl
ds
mov
outsb
sub
adc
add
popa
sub
icebp
repz
pop
inc
xor
into
and
out
ss
mov
push
mov
into
jns
inc
ret
mov
cmc
adc
add
not
or
xchg
pop
dec
mov
dec
mov
add
inc
repz
mov
jne
push
popa
test
and
das
loop
mov
xchg
fisubrl
iret
xlat
mov
sahf
test
hlt
icebp
jne
fstpl
xchg
fwait
add
mov
sbb
sbb
and
mov
sub
jbe
insb
enter
sub
lea
into
jl
dec
int3
daa
in
adcb
mov
mov
sub
mov
pop
flds
adc
inc
lahf
add
rcll
dec
add
dec
or
inc
sub
cmpsb
sbb
in
xor
sub
stc
push
inc
test
iret
jbe
pop
sbb
add
mov
das
push
test
push
adc
adc
pop
sar
jnp
popa
inc
jno
test
std
pop
flds
lds
xchg
imulb
mov
inc
gs
jmp
loope
xor
bound
mov
jecxz
push
int
lcall
repnz
rcrl
ljmp
sbb
lret
mov
aam
imull
adc
jp
bound
test
fsubrp
adc
push
pop
inc
ja
lret
iret
mov
cmp
cmp
jno
cs
dec
inc
les
lret
or
enter
mov
je
test
adc
daa
add
push
inc
push
add
add
mov
idiv
addr16
movsb
jae
insb
lds
ret
adc
jbe
xchg
test
pop
shll
filds
fndisi(8087
xchg
ja
test
imul
jns
and
inc
hlt
in
cmp
lds
in
fldl
movsb
pop
int3
movsb
shlb
jle
outsb
pushf
lahf
popa
cmpsb
shrl
addl
xchg
mov
ss
dec
xchg
jo
aaa
cmp
in
xor
hlt
fiadds
xchg
jle
pop
mov
outsb
mov
xchg
jb
push
es
jno
loope
sahf
or
loop
out
gs
cltd
push
mov
inc
call
or
js
aaa
adc
and
cmc
inc
cmp
dec
and
add
mov
sti
scas
and
jp
ja
iret
stc
jl
adc
mov
adc
ret
hlt
inc
jns
add
and
jl
fsts
rorb
xor
pop
arpl
mov
cmp
inc
scas
jp
jle
and
mov
xlat
jae
movsl
or
leave
xchg
jbe
push
les
aas
movsb
push
fisubl
out
js
pop
scas
icebp
dec
sbb
les
push
fiaddl
mov
push
repnz
jnp
jle
sbb
mov
repz
daa
xlat
jmp
dec
cmc
popf
push
or
jno
repnz
stos
inc
lods
mov
cmpsl
arpl
mov
int3
imul
jl
mov
fdivrp
aad
clc
xor
adc
test
pop
daa
shl
dec
cltd
mov
outsl
hlt
mov
not
push
loope
aaa
pop
jne
iret
movsb
int3
es
push
lods
mov
nop
sub
sbb
pop
imul
pop
mov
sub
push
in
into
notl
addb
cmc
xlat
cli
mov
arpl
cli
jns
imull
fwait
mov
pop
mov
out
cvtpi2ps
pop
dec
xchg
pop
xlat
insb
ljmp
dec
ret
sub
cmpsl
lods
push
push
enter
push
pop
lret
divb
sti
data16
push
inc
ljmp
fcmovne
mov
cmpl
jmp
sub
aad
ret
sub
mov
addl
jp
inc
cwtl
cs
cmp
xchg
ss
jno
dec
lea
orl
lret
mov
xchg
gs
jge
mov
insb
lcall
xchg
adc
repz
iret
pop
je
sbb
mov
in
addb
push
lea
xchg
lods
mov
pop
cwtl
dec
mov
leave
pop
lock
leave
mov
ljmp
ja
fidivrl
add
push
xchg
in
or
push
out
cltd
inc
faddl
push
orb
hlt
mov
mov
out
sub
pop
fists
lahf
dec
or
sbb
jae
cwtl
out
dec
and
outsb
fwait
aam
push
and
mov
call
nop
lahf
sbb
add
out
dec
pop
call
sbbb
inc
cs
jb
fildll
push
imul
rcl
adc
inc
fnstsw
pop
ficoml
mov
pop
sbb
and
pushf
jmp
ja
shll
mov
inc
xor
add
inc
mov
cmp
inc
testl
in
jl
dec
inc
xchg
mov
mov
adc
popa
popa
movsl
pop
jae
push
mov
les
inc
sbb
push
lock
sub
mov
mov
movsl
mov
subl
loop
and
adc
adc
out
cs
cwtl
arpl
mov
adc
jge
xor
mov
popf
sub
subl
mov
scas
xor
push
cmp
jbe
sbbl
push
shl
mov
int3
inc
push
aaa
add
cmpsl
sbb
push
adc
imul
cmp
jge
das
cltd
loopne
inc
loop
sbb
push
loope
mov
rclb
gs
pop
scas
push
test
fsubr
sub
cs
ficomps
mov
cmp
xor
out
js
lret
and
test
ret
cmp
cmpsl
mov
and
push
and
imul
mov
inc
inc
jp
sub
fwait
sbb
iret
xor
xchg
lods
inc
jecxz
insl
jne
lahf
test
xchg
stc
and
sbb
push
push
xor
movsb
pop
push
maskmovq
testl
ret
jb
and
movsl
xlat
mov
ss
push
sbbl
hlt
test
in
adc
add
cmp
xor
je
xor
cmpsb
sti
cmp
nop
inc
arpl
mov
adc
or
pop
mov
dec
push
xor
adc
rcl
jge
mov
pop
outsl
adc
leave
loopne
adc
icebp
insb
sbb
push
sub
jl
inc
das
mov
mov
ret
push
mov
in
xchg
jae
cmp
adc
dec
add
mov
jne
movsl
sub
sti
cmp
shrb
ret
jge
in
jo
xor
or
jge
push
xor
fsts
or
das
push
dec
push
cmp
push
jb
cmp
aad
sahf
or
aas
mov
js
cmp
inc
les
dec
stos
mov
aad
sahf
test
fidivl
xchg
ficomps
push
push
push
mov
xor
ret
clc
pusha
sub
mov
xor
push
lcall
stos
mov
or
cwtl
pop
mov
loope
movsl
inc
add
inc
les
outsl
into
jle
lret
jno
dec
add
repz
sub
lea
stc
jmp
mov
jo
inc
sub
pop
xchg
pop
fwait
and
imul
mov
inc
daa
xor
xchg
nop
rcr
daa
mov
rcrb
mov
fstps
inc
mov
into
or
out
mov
mov
mov
pop
xor
outsb
or
aaa
sbb
lsl
push
xor
or
mov
mov
adc
xchg
fwait
sub
rcrl
outsl
rcll
add
into
movsl
push
stos
and
int
test
mov
addb
or
mov
jo
mov
inc
call
mov
aaa
not
lods
ret
stos
into
repnz
jg
lods
lret
cmp
push
mov
sub
jmp
xorps
insb
lods
fimuls
mov
test
out
mov
jge
cwtl
hlt
xchg
and
xor
xchg
jmp
popf
fldl
lods
arpl
push
add
test
shl
scas
xchg
lods
pop
cmc
fldt
dec
jecxz
es
sub
mov
std
inc
inc
mov
aad
jb
negb
mov
push
sub
pushf
shll
sti
pop
jns
imulb
jle
dec
jl
dec
push
pop
jbe
data16
or
sbb
in
cmpsb
cld
xchg
int3
xchg
imulb
pushf
ss
es
dec
push
pop
jbe
data16
or
sbb
in
cmpsb
cld
xchg
int3
xchg
imulb
pushf
ss
es
push
int3
push
pop
jbe
addr16
mov
cmpsb
cld
xchg
int3
xchg
imulb
pushf
ss
es
dec
push
pop
jbe
data16
or
sbb
in
pop
push
cmp
xchg
jae,pn
arpl
in
sub
cmpl
mov
je
cmp
je
push
lea
push
push
movb
call
call
mov
xor
xor
call
mov
xor
call
mov
mov
lea
push
call
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
pop
pop
test
jne
mov
not
mov
movb
or
mov
leave
ret
sub
jle
dec
sbb
bound
pop
cs
stos
mov
fsubrp
scas
sti
mov
sub
jle
dec
sbb
jnp,pn
dec
push
pop
stos
out
mov
fsubrp
ret
lret
mov
sahf
sub
jle
dec
sbb
jnp,pn
dec
push
pop
push
stos
out
mov
mov
test
mov
bound
imul
test
mov
enter
jmp
inc
add
xchg
adc
mov
pop
lcall
adc
out
ja
mov
jae
and
pop
xor
std
mov
stos
mov
icebp
mov
jb
scas
or
outsb
sub
pop
jge
lcall
fs
stos
adc
ds
test
lahf
aam
dec
cs
push
and
shlb
pop
ds
xor
fisubl
stc
mov
aam
add
dec
pop
sti
push
xchg
das
mov
pop
sti
call
lods
jae
fmulp
xlat
scas
cli
in
lret
mov
jle
dec
sbb
jnp,pn
dec
push
pop
push
stos
out
mov
fsubrp
scas
sti
mov
insl
push
aas
outsb
dec
jle
pop
dec
xor
dec
sbb
xchg
mov
stos
mov
xchg
fisttpl
or
pop
sub
sub
addr16
jp
movsl
mov
mov
mov
sub
bound
cmp
jnp
dec
push
pop
push
stos
out
mov
fsubrp
scas
sti
mov
sub
jle
dec
sbb
jnp,pn
dec
push
pop
push
stos
out
mov
fsubrp
scas
sti
mov
sub
push
mov
aas
pushf
mov
jecxz
je
jns
es
stos
lods
cli
or
mov
sahf
jmp
stc
test
cmp
scas
loop
pop
aaa
push
inc
push
bound
inc
push
jecxz
and
sbb
jbe
loopne
lea
icebp
fstps
aaa
dec
cmp
adc
data16
fcompl
dec
ffreep
lods
negl
jbe
jo
sbbb
push
pop
cmp
adc
adc
and
adc
aam
adc
cli
jae
xchg
and
push
fldcw
aad
mov
mov
or
pushf
sub
ja
pop
fldenv
inc
add
or
rolb
xor
lods
sub
fstpl
sub
jae
addb
in
dec
dec
xor
push
daa
std
rorb
ljmp
cmpsl
out
mov
sub
jbe
icebp
adc
mov
testl
icebp
leave
mov
das
xor
push
mov
cmp
mov
sahf
xor
jmp
jmp
cmp
sbb
inc
push
pop
clc
lret
push
push
outsl
test
inc
jns
lahf
js
jno
insl
fiaddl
addr16
mov
rclb
mov
xchg
cld
push
push
push
pop
dec
daa
clc
add
stc
insb
bound
pop
jno
mov
sbb
out
push
push
andl
xor
cmp
push
xor
int
out
or
sbb
xlat
dec
cmp
dec
pop
push
inc
pop
xorb
lods
cmp
pusha
dec
dec
cltd
les
push
fsubrl
xchg
jno
nop
jmp
push
pop
push
jecxz
scas
out
fnstcw
int3
jno
jnp
push
and
or
popa
das
fs
xor
mov
repnz
jbe
jae
arpl
xor
cli
je
movsb
lret
jb
xchg
sti
sbb
aad
sbb
inc
sar
je
adc
jne
lcall
or
pop
mov
lock
movsb
dec
mov
js
xchg
push
cmp
movsl
decb
jns
push
je
cld
xor
mov
jge
shll
mov
stc
lcall
loope
rorb
bound
jg
lds
add
enter
in
enter
lods
inc
add
xchg
cmp
sbb
cmp
xchg
xchg
in
pavgw
out
push
sti
lea
je
shll
test
cmp
ljmp
sbb
sbb
or
add
stos
test
aad
dec
push
jge
mov
add
mov
sbb
loope
inc
mov
pop
call
xchg
pop
mov
outsb
fldz
or
cmp
jne
into
pop
jb
dec
in
sbb
aas
lret
loopne
push
stos
test
test
fimull
inc
cmpl
sbb
xor
stc
inc
std
or
mov
xor
inc
add
mov
push
cld
lds
les
in
inc
out
mov
into
mov
das
dec
sub
pop
push
inc
push
fidivrl
push
inc
negl
mov
push
mov
pop
insb
pop
jbe
mov
test
pop
lock
pop
mov
nop
outsw
fistl
mov
push
out
add
sub
jl
mov
xchg
sahf
mov
mov
add
mov
aam
testb
fmull
push
jp
arpl
setp
and
sub
test
mov
clc
push
mov
pop
xchg
andl
and
test
xchg
dec
cmp
sbb
in
jmp
push
or
adc
xor
or
and
in
out
mov
imul
inc
and
fsubl
lahf
ja
or
mov
pusha
fcmovnbe
sbb
push
leave
imull
lods
xchg
jno
repnz
ficompl
jbe
in
add
adc
jbe
repz
aad
pushf
mov
xor
outsl
out
test
push
int3
je
mov
sbb
mov
xlat
cmp
mov
mov
testb
xchg
loopne
idivl
push
mov
mov
bound
dec
xchg
inc
cmp
rcrb
cmpl
or
loope
cmpb
jbe
sti
enter
cltd
cmpsl
adc
inc
mov
push
pop
push
roll
mov
fldl
push
sub
lods
cmp
imulb
cmpl
iret
dec
jbe
and
js
sub
rcll
xchg
mov
lret
or
mov
orps
cld
mov
push
call
iret
mov
cmc
rorb
cmp
sub
fcompl
pop
xor
sahf
orl
xor
and
data16
jg
push
inc
xchg
push
mov
insl
mov
adc
dec
pop
arpl
inc
call
jae
mov
dec
ds
ljmp
push
ficomps
pushl
movsb
add
jge
sub
or
out
mov
popf
mov
jbe
gs
or
scas
ficoml
or
jb
inc
std
lods
jo
inc
cmpsb
insl
aas
push
inc
pusha
jge
dec
lahf
pop
les
aaa
and
test
pop
jb
sbb
xchg
mov
adc
hlt
int3
fidivrs
lret
xchg
test
cli
jns
in
hlt
popf
sub
push
inc
xchg
push
add
cld
mov
or
pop
mov
push
push
in
outsl
cmp
lcall
jge
adc
pusha
es
loope
pop
mov
mov
inc
rclb
mov
jb
or
pop
cmp
push
aad
inc
dec
pop
add
sahf
jg
pop
push
fists
sar
add
cli
adc
add
cwtl
mov
popf
int3
jle
imull
push
fsubp
popa
jo
jno
xchg
pop
pop
mov
scas
daa
dec
cmp
repnz
add
pop
psubsw
sahf
and
mov
ret
movb
cmc
cmp
repz
scas
xor
or
cli
scas
leave
bound
test
cli
mov
fiadds
sub
andb
in
inc
and
adc
dec
lods
jb
fisubs
addr16
lds
fcoms
in
or
mov
lods
cmp
addr16
add
add
mov
cwtl
xchg
sarl
out
mov
movsl
es
sti
int
icebp
pop
into
pop
stos
add
dec
lret
dec
push
es
add
adc
lcall
rcrl
push
add
or
cltd
dec
and
adc
push
cmpsl
shlb
and
das
fiadds
test
push
shll
jae
mov
pop
lcall
pop
or
jmp
or
sub
jge
cmc
bound
pop
rorb
jb
cwtl
cmpb
test
inc
outsl
je
mov
xor
stc
sub
pop
arpl
sub
scas
bound
push
sahf
xchg
add
mov
loope
add
and
add
cli
or
add
aam
mov
jno
cmpl
in
xchg
in
mov
xor
sahf
pop
dec
xor
push
xchg
mov
loopne
shll
adc
cmpsb
daa
imul
clc
add
scas
shl
push
jmp
add
xor
jp
pop
mov
xchg
sub
clc
and
inc
jne
adc
or
jp
pop
push
out
insb
pop
sub
fdivrl
std
or
into
sub
dec
cmp
je
out
loope
movsl
and
pushf
lods
divb
push
jno
insb
dec
and
sub
stos
dec
mov
xchg
insl
test
jbe
mov
pop
pop
dec
cld
sbb
xchg
xor
ror
ss
out
adc
adc
and
jbe
iret
fistl
xor
xchg
or
inc
loope
and
mov
es
adc
loopne
inc
push
sub
fwait
inc
rol
ror
rolb
ss
add
shrl
je
mov
xchg
negb
mov
cmp
add
mov
add
fdivs
pop
iret
insl
inc
stc
neg
mov
inc
hlt
sub
outsb
out
mov
cwtl
out
pushf
iret
test
shll
xchg
ret
out
fistpl
lea
push
mov
jg
pop
jo
xor
sbb
mov
dec
fisubrs
movsb
cmp
cltd
lods
xor
ret
cmc
int3
mov
les
dec
jbe
cmp
out
out
in
inc
jno
push
mov
cmc
sub
add
or
sbb
or
mov
imulb
push
jmp
xor
es
add
jne
inc
sbb
push
aas
lods
cmpsb
fmul
push
or
mov
xorl
ljmp
cmp
insb
pop
mov
push
dec
icebp
mov
dec
out
stos
mov
add
xor
sarb
fwait
push
inc
add
out
cld
sub
movsl
sahf
divb
pop
in
rcll
jecxz
push
jg
aad
out
notl
aaa
stos
mov
jmp
test
adc
fsubp
push
jg
jbe
cmp
xchg
loopne
out
scas
push
pop
test
sbb
dec
jae
ret
std
jmp
ret
pop
cmp
js
enter
pop
cli
lock
sbb
out
mul
pop
jmp
and
xchg
and
push
mov
sub
dec
and
ret
xchg
sti
and
xchg
pushf
add
jmp
jg
lea
pop
jnp
nop
out
cmpsb
shll
out
or
xchg
sbbl
sahf
and
mov
jp
sbb
pop
cmpsl
xorl
jmp
ffreep
inc
pop
fdivrs
inc
movsb
xor
sbb
dec
xchg
xor
dec
scas
and
mov
clc
lret
stc
inc
sub
int3
push
pushf
cmpsl
xor
dec
pop
cmp
or
or
out
fmull
mov
cli
push
ficoms
andl
pusha
cwtl
test
daa
ds
js
jp
inc
add
insb
cmp
insl
mov
orl
icebp
mov
clc
arpl
rcrl
lods
cmp
stos
in
movsb
aad
and
push
cmp
out
rolb
pop
or
cs
pop
mov
jmp
dec
jge
sarb
insb
xor
cmpsb
pop
outsb
add
in
test
dec
dec
xor
ret
lock
in
mov
xor
fs
sub
outsl
pop
xchg
pop
sbb
pop
xor
sahf
add
sub
ret
push
daa
inc
push
fwait
mov
fnsave
xor
ret
dec
repnz
dec
sub
push
gs
inc
push
ja
stos
lret
cmp
loop
push
das
cmp
fistps
or
daa
outsb
arpl
ret
mov
negb
sub
push
cmpl
scas
push
or
aam
clc
sub
in
andb
cmc
mov
cmp
pop
andl
std
andb
sub
mov
js
jns
mov
in
push
sahf
ret
daa
xlat
push
push
dec
pop
in
es
sub
mov
cs
fisttpll
cmp
inc
call
inc
testb
push
outsl
mov
fsub
sub
pop
loope
cmp
outsl
inc
idivb
push
mov
push
cmp
iret
ljmp
js
or
mov
ds
xchg
in
aaa
stos
push
xchg
inc
icebp
out
scas
loope
mov
adc
mov
iret
pop
icebp
test
cmp
dec
and
fs
adc
out
stc
mov
mov
in
icebp
push
xor
cmp
push
das
lahf
sarb
adc
cmpsl
test
out
je
and
test
les
sbb
mov
je
mov
xorb
imull
sbb
jmp
jns
enter
into
mov
adc
into
mov
adc
insb
pop
mov
push
pop
inc
or
mov
popa
xchg
ficomps
or
test
push
add
xor
or
lret
mov
xchg
fs
cltd
adc
mull
adc
sbb
xchg
lret
xor
mov
mov
push
add
sub
daa
xchg
mov
xchg
ljmp
mov
jge
sub
xor
addr16
mov
push
fwait
ja
push
mov
inc
push
push
xchg
popf
stos
mov
pusha
out
and
jb
pusha
mov
jmp
mov
jg
cli
jb
push
mov
mov
rcll
cltd
mov
aad
ret
js
mov
jne
sub
mov
adc
dec
in
add
inc
cmp
fists
pop
lea
fbstp
sbb
js
push
mov
subb
ret
sub
lods
cmp
sbb
xorb
mov
add
mov
int3
push
dec
adc
adc
out
and
outsb
xchg
int
fs
dec
jg
js
jbe
jg
scas
bound
or
push
data16
ljmp
repz
bound
and
outsb
jb
dec
cmpl
movsl
pop
inc
rclb
decb
xchg
ficompl
xlat
ja
es
sub
mov
cmp
mov
sbb
xchg
sub
inc
ret
cmp
jns
and
mov
inc
mov
mov
test
inc
fcoms
or
lret
test
imull
mov
xor
push
push
cmp
imul
xchg
out
sbb
stos
imul
mov
popf
jge
sbb
cmp
dec
adc
loop
jge
sub
or
cmp
xchg
clc
cmp
push
aaa
xor
sbb
or
ret
inc
adc
and
sbb
sbb
sub
xorb
xchg
lahf
pop
mov
push
xchg
out
dec
ror
pop
dec
jl
scas
push
in
or
pusha
xor
aad
dec
lret
push
das
sbb
orl
jae
in
out
xor
cmp
aaa
cmp
ret
xchg
mov
sti
xor
std
xchg
jbe
aaa
adc
js
imul
imul
push
push
push
jb
push
aam
adc
xor
out
iret
lret
popf
jmp
jmp
xor
push
jg
mov
jge
sbb
fimull
dec
stc
outsl
push
push
dec
jbe
test
aad
jns
clc
cld
movsb
xchg
xchg
inc
sbb
test
jg
mov
jne
pop
dec
inc
dec
inc
or
addr16
jmp
push
jecxz
es
stos
ds
ret
mov
and
aaa
cmp
fsubr
jne
adc
sbb
nop
xor
mov
jne
xor
fidivl
loope
xchg
pop
pop
dec
add
push
inc
fcompl
inc
test
pop
adc
test
aam
pop
inc
cmp
sbb
sbb
mov
rol
out
adc
push
lea
rolb
insl
dec
clc
fistps
fisubrs
jb
jne
mov
iret
roll
mov
sbb
out
and
sub
push
cmp
mov
push
loopne
xchg
cmp
cmp
adc
and
into
add
into
pop
imul
mov
into
fs
adc
rcrl
xchg
inc
push
inc
ss
loope
in
rolb
aam
test
out
es
clc
add
pop
gs
sub
mov
sbb
jecxz
mov
dec
adc
sti
lock
scas
or
sub
ss
imul
cmc
inc
mov
xchg
repz
cltd
in
jae
mov
fidivl
out
fstl
or
fsts
addr16
out
push
imul
mov
push
mov
cli
arpl
mov
rolb
stos
pop
roll
and
cld
outsl
punpcklbw
cwtl
add
cmp
shr
pushf
daa
sarb
inc
sbb
cwtl
adc
push
mov
pop
stos
mov
mov
push
fcoml
xchg
pusha
mov
mov
sbb
clc
inc
imul
bound
mov
loop
fs
cmpsb
push
mov
or
mov
jae
out
out
xlat
dec
mov
idiv
cmp
xchg
sub
shl
decl
fildll
mov
mov
sarb
fcmovnb
mov
jle
inc
lods
into
mov
pop
aad
ret
test
stc
ljmp
cmpsl
cld
hlt
sub
push
fiadds
orb
mov
mov
or
scas
daa
mov
inc
lods
enter
stos
test
fsubrl
lret
bound
pushf
test
das
sbb
out
sub
xchg
cltd
sbb
push
rolb
pop
out
adc
xchg
push
fcoms
xor
or
ret
xor
and
push
movsl
insb
and
pop
mov
mov
xchg
push
add
fxtract
add
movsb
xchg
jecxz
int3
adcb
mov
popf
mov
loop
push
push
fcompl
mov
daa
bound
mov
in
inc
jne
sahf
sahf
aad
ficoms
popa
test
inc
sbbb
pop
orb
into
push
ja
iret
sbb
lock
fisttpl
sbb
insb
hlt
mov
imul
push
push
sbb
daa
arpl
outsl
sti
mov
insl
shrb
xor
dec
int3
xor
es
shl
out
ljmp
pushf
mov
mov
adc
push
push
dec
in
mov
mov
mov
or
ljmp
adc
fs
leave
leave
add
or
xchg
mov
lahf
mov
loop
sarb
out
or
rclb
xchg
les
or
mov
and
ja
push
xor
movsl
lret
adc
lds
add
test
nop
cmpsb
fsubl
arpl
pusha
sub
mov
js
addr16
and
aaa
xlat
mov
addb
in
inc
dec
cmp
fistpll
jg
jnp
mov
inc
fdivs
ljmp
add
loop
jb
aaa
int
mov
fucomip
pop
mov
test
and
cmp
mov
idivb
rcrb
xchg
fdivrs
fcmovne
adc
pop
sbb
xor
push
push
cmp
cli
out
mov
push
lahf
push
mov
xor
inc
icebp
cmp
jo
cmc
aaa
jle
fs
rclb
repnz
insl
add
fadds
and
pop
adc
notl
daa
fcoml
gs
jg
mov
xlat
leave
shll
jecxz
adc
inc
insl
cli
aaa
sub
test
xor
or
lret
xchg
outsl
ret
popl
movsb
popa
and
sub
push
bound
sarl
arpl
xchg
mov
outsb
or
cltd
or
in
fcoml
ljmp
mov
mov
into
inc
sub
mov
and
ud2
cs
or
pop
xor
and
aam
fstps
int3
leave
pop
filds
push
adc
push
pop
hlt
mov
mov
sub
xchg
movsl
aaa
inc
sbb
adc
push
pop
das
pusha
xor
or
sbb
push
ja
xchg
shlb
or
cmpsb
fisttpll
jae
xchg
mov
pop
cs
mov
das
or
xor
in
mov
and
xchg
dec
inc
out
out
jl
stos
xchg
shll
mov
xchg
and
mov
push
jmp
push
gs
jp
mov
je
cltd
gs
fstl
xor
stc
ret
nop
jmp
scas
xchg
roll
addr16
mov
pusha
ds
sub
sub
pop
xchg
jl
jb
pop
sbb
cmp
lea
inc
idivl
in
xor
push
or
pop
cmp
push
in
roll
add
call
jecxz
repnz
xchg
xchg
fstl
mov
std
mov
in
jbe
sahf
outsb
movsb
inc
mov
popf
jge
jne
lcall
mov
inc
movsb
lods
sub
pop
pop
loopne
in
cmpsl
rclb
mov
ret
neg
mov
dec
arpl
push
xchg
lods
sub
rorb
fmull
imul
das
adc
pop
pop
js
or
jmp
aaa
test
mov
and
lods
sbb
inc
stc
fnsave
push
sub
imul
testl
pop
int
push
scas
lret
push
addr16
dec
loopne
xor
out
adc
enter
cmp
or
pusha
shlb
pop
cmc
push
jmp
and
call
mov
aaa
stc
enter
cmp
xchg
shr
jecxz
arpl
mov
into
dec
push
jle
mov
pushf
add
jge
bound
sahf
mov
jg
or
xchg
mov
outsb
orb
les
cmp
inc
inc
xor
stc
ds
dec
sbb
scas
in
dec
mov
dec
cmpsb
sarb
xchg
sub
mov
lea
add
push
adc
mov
sub
cmc
sbb
adc
pop
rcrb
mov
int3
pop
mov
xor
mov
cmp
mov
je
out
sbb
in
stc
int
fcompp
testl
je
loope
jnp
into
ja
jge
loopne
xchg
add
test
mov
and
fsubs
fsubrl
rol
test
aad
jp
or
outsb
int3
pushf
push
xlat
andb
push
jmp
pop
inc
in
scas
sub
out
xor
ds
fstl
jb
jle
push
mov
pop
ljmp
imul
ds
push
pop
push
stos
out
mov
fsubrp
scas
sti
mov
sub
jle
dec
sbb
jnp,pn
dec
push
pop
push
stos
out
mov
fsubrp
scas
sti
mov
sub
jle
dec
sbb
jnp,pn
dec
push
pop
push
stos
out
mov
fsubrp
scas
sti
mov
sub
jle
dec
sbb
jnp,pn
dec
push
pop
push
stos
out
mov
test
xor
and
push
mov
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
jmp
lea
push
pushl
call
lea
push
pushl
call
jmp
call
push
mov
call
xor
leave
ret
ret
in
scas
fnstsw
rcrb
pop
insb
das
dec
aas
pop
dec
cmp
jg
xchg
lahf
in
scas
fnstsw
mov
pop
jno
insl
add
dec
dec
dec
cmp
outsl
sbb
pop
hlt
sub
jns
fbld
xchg
jae
dec
and
cmp
add
outsl
or
into
mov
popf
jmp
enter
lcall
cmpsl
sbb
and
dec
xchg
lds
cmpsb
sub
dec
je
std
enter
ss
lahf
int
pop
les
jb
and
rorb
into
jae
in
repnz
fbld
xchg
ss
xchg
jge
insl
shlb
shll
sbb
out
shlb
ljmp
jmp
dec
xchg
aas
mov
pop
test
loop
sbb
push
and
xor
fsubrs
orl
mov
dec
or
push
and
daa
or
push
adc
aas
mov
adc
outsl
or
ror
iret
mov
inc
xchg
std
jge
jne
inc
and
inc
xor
std
std
jmp
test
mov
sahf
call
jg
pop
sub
pop
xor
sbb
popa
xchg
pop
test
scas
je
cmpsb
mov
mov
dec
cmp
cmp
cmp
std
std
lods
in
fistpll
fildll
pop
insl
das
pop
aas
dec
dec
cmp
jg
std
lahf
in
scas
fnstsw
lods
out
popf
decl
das
pop
aas
dec
dec
cmp
jg
std
pop
incb
pop
loopne
xorl
outsb
lret
jp
sub
sbb
dec
cltd
out
mov
pop
fsubs
xchg
cmc
sbbl
sbb
mov
jae
sub
sti
and
cmp
xchg
cmp
pop
ljmp
xchg
inc
push
jo
test
mov
pop
arpl
test
sub
push
test
mov
aam
xchg
daa
cli
inc
fnop
repz
mov
aad
int
sbb
iret
cmp
repnz
aad
sahf
mov
push
clc
out
jbe
inc
cmp
xchg
xchg
xlat
push
xor
daa
inc
xor
cmp
cmp
or
and
lods
jne
pop
mov
data16
rcrb
cmpsl
ljmp
fimuls
sub
incb
shlb
and
push
popf
adc
push
nop
jle
dec
xchg
int3
inc
add
mov
sbb
xor
outsb
inc
dec
into
mov
test
pushf
sbb
add
cld
mov
sbb
or
cmp
and
jl
jle
mov
jge
ret
push
pop
dec
and
arpl
add
sahf
addr16
xchg
daa
cmc
mov
jg
lods
sub
dec
les
jle
xor
sub
add
or
lock
outsb
aad
lods
jecxz
and
sahf
movsl
cmp
adc
ja
shr
in
repnz
aad
cmp
fwait
lahf
adc
test
mov
add
xchg
aad
pop
ja
and
xchg
nop
dec
push
mov
les
inc
add
xchg
dec
pushf
inc
cmp
dec
scas
mov
jle
test
push
jmp
insb
jge
outsl
sub
cmp
push
mov
dec
repnz
pushf
loop
sub
stc
arpl
sbb
test
lahf
test
fidivs
or
mov
mov
enter
repnz
loop
sbb
cmp
popf
xlat
je
in
cmp
push
and
sub
push
dec
push
ja
or
loop
fs
push
cld
dec
or
inc
orl
filds
mov
adc
adc
jl
mov
push
pusha
lock
dec
loope
push
push
les
mov
dec
push
jno
inc
int3
xchg
outsl
dec
and
data16
inc
sbb
pop
sti
pop
push
mov
sub
xchg
sbb
ret
sbb
addr16
movsl
je
fdivl
mov
pop
push
fsub
sbb
mov
and
mov
fimuls
clc
shlb
je
popf
es
fbld
mov
data16
push
cmp
mov
ljmp
fcomps
mov
out
xor
icebp
lahf
mov
lds
mov
and
add
outsb
and
push
pop
sbb
xor
pop
out
les
rcrb
mov
icebp
out
loope
mov
stc
shlb
sub
pop
mov
loopne
mov
cld
shrb
adc
popa
xchg
fsubrs
and
movsb
cmc
pop
ja
mov
mov
sub
fucomip
add
push
xor
lea
lods
es
sub
xor
shrb
inc
dec
or
or
mov
data16
or
lcall
dec
sub
mov
jo,pn
lret
movsb
ljmp
or
adc
std
push
mov
jo
xor
sbb
loope
mov
pop
sbb
lcall
adc
out
loope
repz
sahf
dec
das
rclb
stos
jo
mov
sti
nop
ljmp
adc
negb
loop
call
test
lret
mov
and
test
push
into
jmp
test
mov
stos
clc
mov
adc
inc
mov
test
xor
sti
data16
loopne
call
add
daa
add
push
mov
push
fcmovnu
cmp
and
icebp
loope
in
ss
push
test
sub
data16
xchg
repnz
daa
jo
lcall
xor
mov
xchg
add
mov
in
jmp
fbld
pop
dec
or
inc
jnp
push
in
aad
rep
sub
or
loopne
sarl
mov
jnp
or
sbb
mov
fstl
inc
hlt
addr16
test
aam
out
sbb
or
into
mov
cmc
push
hlt
or
mov
in
test
adc
movsl
dec
push
repnz
pop
inc
lcall
jae
dec
sub
lea
shrl
daa
xchg
sti
and
fidivs
cmp
fidivrl
cmc
insb
add
cmc
lcall
jg
mov
pop
mov
mov
mov
push
xor
arpl
push
scas
ds
je
cmp
lahf
adc
imul
sub
enter
pop
cwtl
sub
lods
jp
cs
ret
jb
push
sarl
inc
int3
mov
push
cli
mov
cwtl
pop
add
mov
push
test
cmp
mov
push
dec
outsl
jmp
mov
sbb
sbb
repz
enter
inc
lret
add
sbb
jg
adc
mov
dec
and
jns
sub
out
push
fwait
popf
stos
and
nop
push
fdivrs
cwtl
ds
pop
push
cmp
fistl
nop
inc
int
add
pushf
stos
les
leave
les
sub
mov
sub
sahf
int3
cmpsb
test
in
dec
lret
sub
sub
data16
jl
fldt
or
jae
sbb
iret
mov
lea
jnp
add
aam
stos
jp
mov
push
in
ficomps
and
ljmp
jecxz
sbb
call
xchg
mov
xor
out
iret
je
fwait
mov
and
pusha
cmpb
xlat
shlb
sub
add
pop
icebp
push
sbb
pusha
push
lfs
lea
pop
lock
clc
mov
add
inc
push
xor
dec
icebp
movsl
dec
push
mov
lret
mov
adc
lret
int
repnz
addr16
cmc
rcr
btr
xchg
adc
cmc
cs
in
add
sub
cmp
jns
mov
cmp
lret
mov
data16
and
rcl
inc
push
imul
imul
jmp
adc
add
negl
insl
xor
mov
sbb
in
lods
pop
xorl
xor
add
shlb
movsb
mov
jge
sbb
mov
test
mov
lods
and
fbld
mov
in
jle
pop
popf
fidivrs
mov
add
cmp
adcb
call
dec
inc
fstpt
movsb
rolb
dec
inc
rcll
pop
subl
test
inc
cmpsl
push
jp
xchg
mov
test
or
cmp
adc
repnz
xchg
mov
adc
stc
cwtl
out
ret
sbb
mov
dec
push
cmpsb
cli
push
dec
jmp
adc
into
int
sbb
push
adc
enter
dec
xor
inc
xchg
shl
sbb
jge
ja
ja
mov
int
sub
adc
add
mov
pop
mov
or
lahf
rcl
sbb
dec
sbbb
mov
enter
jno
mov
xor
cmp
test
movzbl
popa
cwtl
ja
and
ret
sbb
xor
cli
scas
ljmp
xor
ss
je
shufps
in
and
outsb
xor
imul
int3
test
sub
clc
movsl
mov
cmp
or
aad
cmc
daa
or
shll
add
and
fiaddl
cmp
in
andb
or
inc
in
cmpsl
or
adc
sub
inc
sub
lcall
push
fs
push
push
xlat
jl
enter
sub
add
push
fistl
out
ficomps
div
dec
push
popf
and
in
jle
fcmovb
dec
lret
das
scas
add
pushf
mov
xchg
push
aaa
mov
mov
sub
and
int
sbb
or
inc
pop
cmpb
mov
or
arpl
add
js
push
pop
jns
mov
add
outsl
or
adc
inc
imul
inc
imul
or
movsb
mov
push
mov
push
sbb
aam
out
xchg
xchg
or
mov
int3
sbb
jb
jno
and
mov
jb
inc
lret
jl
les
outsb
jl
mov
fcmovne
jnp
mov
subl
lds
das
dec
jbe
imul
or
cmp
das
mov
subb
in
mov
imul
inc
inc
xlat
jp
cmp
xchg
mov
rcll
cmp
ss
mov
mov
imul
push
dec
jae
int3
ret
mov
test
push
adc
fcompl
ret
cmova
ret
ljmp
fidivs
cmp
scas
push
mov
xor
lea
push
cmp
cmpsb
push
addr16
cmpsl
xor
push
repz
xor
xor
aad
mov
jbe
cld
mov
cld
fbstp
inc
push
inc
cmp
fnstcw
dec
dec
pop
lahf
or
insl
jbe
out
movsb
push
inc
sbb
out
ja
mov
mov
nop
shl
push
sti
sub
adc
adc
movsb
mov
pop
popa
icebp
jl
call
movsb
insl
jns
mov
lret
int3
hlt
adc
movsb
adc
test
push
sbb
icebp
mulb
sub
test
mov
xor
iret
and
lods
shrb
mov
jae
leave
cmp
pop
sbb
inc
cwtl
test
or
dec
add
jbe
sbb
push
push
xor
gs
push
cwtl
xchg
dec
lods
xor
negb
loop
addr16
or
ljmp
clc
mov
shll
jge
scas
movsl
bound
cmp
arpl
stos
inc
outsb
xor
mov
lret
pop
out
test
pushw
repz
jp
mov
push
subb
rcl
lret
fnstenv
aaa
popf
int
mull
inc
jb
pop
cmpsl
xor
sarl
ret
dec
pop
cs
mov
adc
or
push
stos
mov
xlat
lds
outsl
fs
dec
nop
adc
inc
sbb
pop
cmpsb
pushf
outsl
aaa
out
cmp
iret
lret
mov
pop
scas
testb
mov
push
out
out
mov
jmp
inc
lock
xchg
pop
les
insb
aaa
xor
scas
jmp
sbb
dec
lret
mov
addb
pop
cmp
push
lahf
nop
jnp
mov
sarb
mov
ss
jae
jle
mov
xchg
roll
push
push
add
add
leave
add
cmp
fbld
sti
imulb
inc
in
scas
rcr
jns
inc
mov
int
cmp
mov
scas
fsts
arpl
inc
or
add
mov
leave
nop
dec
mov
adc
pop
push
mov
pop
rcrb
sub
add
sbb
cmp
testb
ret
pop
lds
mov
enter
mov
or
into
in
dec
jbe
test
fdivl
aaa
mov
data16
xorb
cmc
xchg
jae
shlb
jo
out
dec
cli
sbb
sbb
dec
push
lahf
sub
sti
lods
lret
dec
popl
fiaddl
leave
loop
cmpl
lods
in
div
adc
and
pop
popf
cmp
fldt
mov
sub
fchs
rcr
subb
mov
xchg
add
dec
lds
leave
sub
push
mov
mov
pusha
imul
dec
out
xchg
dec
loop
mull
pop
inc
ds
imul
test
or
xor
ss
mov
lret
out
sbb
xchg
fwait
mov
jno
dec
mov
cmp
ja
mov
pop
mov
inc
aas
jle
jmp
pusha
and
int
cwtl
dec
pop
inc
push
rcrb
adc
xchg
xchg
add
fs
lods
dec
sub
mov
outsb
or
ret
pushf
jnp
inc
cs
rolb
int
adc
cmpsl
xor
aad
inc
inc
or
test
xchg
or
or
sub
xchg
addr16
rcl
mov
dec
sbb
lods
push
out
lret
mov
push
pusha
mov
xchg
cmp
sbb
aaa
mov
sbb
jo
enter
in
jae
mov
xor
fucomip
inc
or
mov
mov
and
or
scas
cmp
imul
and
jmp
lds
dec
idivb
or
xor
jae
mov
push
aam
lods
mov
loope
push
hlt
repnz
cmpsb
scas
pusha
lcall
xor
scas
sar
dec
enter
stos
add
and
xchg
adcb
push
cmp
or
jno
xchg
cmp
cmp
shr
pop
clc
fsubs
xchg
scas
iret
mov
push
nop
js
test
add
lret
mov
dec
stc
sub
adc
jnp
popa
inc
andb
loopne
and
fdivl
adc
add
pop
push
pop
lods
push
leave
sbb
fimull
loopne
inc
mov
mov
repnz
sbb
cmp
push
mov
inc
and
stos
push
int
out
scas
pop
or
mov
iret
and
jo
push
sub
fld1
lahf
sbb
xlat
jbe
aaa
inc
clc
mov
sbb
loopne
test
inc
cmp
jnp
bound
cmp
sbb
or
push
lods
call
bound
cli
fisubrs
sub
outsl
mov
cmpsl
adc
rcrb
jno
push
sbb
in
dec
fsts
jns
mov
movb
test
nop
or
mov
mov
and
jns
imul
jnp
cwtl
inc
cwtl
cmp
mov
jg
pusha
push
nop
jge
std
test
dec
xchg
out
adc
ficoms
push
std
scas
and
cmpsl
sbb
lock
stc
insl
push
add
je
mov
jns
adc
movsl
xchg
push
into
fs
popf
jmp
sbb
xchg
push
mov
icebp
pop
or
lcall
call
inc
cld
jp
adc
imull
sbb
sub
mov
je
dec
iret
cmc
xor
int
mov
mov
xchg
add
cmpsb
mov
or
xchg
sub
inc
test
xor
jp
add
stos
and
mov
movsl
pop
mov
mov
daa
test
mov
inc
mov
add
lock
in
xchg
add
sub
or
out
inc
ljmp
aaa
push
push
jg
stos
imul
lods
mov
mov
test
call
in
sub
mov
popa
inc
in
in
loop
dec
bound
pop
push
mov
fcmovnb
out
cmp
or
pop
jecxz
mov
add
gs
roll
jle
xor
mov
sub
fldenv
leave
icebp
jno
lds
mov
arpl
mov
or
rolb
out
leave
jle
or
sar
jecxz
push
cmc
movsb
andb
sub
jbe
adc
popa
rcll
sbb
dec
and
inc
dec
fiaddl
outsb
pop
mov
repnz
jno
sahf
xlat
jg
imul
jecxz
jo
imul
fistps
outsb
idivl
push
sti
ret
sbbb
cmp
xchg
ss
loop
adc
mov
sbb
stos
or
mov
mov
lea
push
xlat
mov
mov
adc
lock
jbe
cwtl
inc
aas
popf
in
or
cld
imul
fistl
push
sub
sbb
arpl
rcll
test
sahf
mov
mov
or
inc
imul
scas
jb
mov
sbb
mov
popa
cmp
ret
fisubs
das
lea
mov
and
push
movsb
pop
rcl
push
bound
cltd
popa
or
mov
push
or
pop
xchg
mov
push
push
push
sbb
into
mov
test
ds
into
sub
imul
std
jmp
inc
adc
adc
adc
cli
rcrl
daa
xchg
jo
in
or
xchg
mov
imul
insb
int3
out
bnd
and
mov
cmpb
mov
addl
adc
sbb
inc
xchg
and
cld
fwait
sti
xchg
lods
das
ljmp
cwtl
mov
sub
imul
pop
lock
les
hlt
cmpsb
pop
inc
mov
sub
jmp
rcll
ret
push
scas
mov
je
add
cmp
jp
inc
dec
cmpb
push
inc
cmp
sbb
mov
jge
hlt
or
roll
add
rcrl
rorb
push
cmp
pop
imull
das
jl
add
mov
test
in
les
enter
fstps
xor
push
int
lock
and
and
fadds
js
cmp
xchg
jo
popf
and
fsubp
int
decb
push
sbb
xor
mov
dec
aad
cmp
cmpsl
pop
mul
mov
aaa
mov
xchg
insl
ljmp
jbe
sbb
lret
push
or
mov
push
push
movsl
fildl
sub
sbb
cmp
jmp
notl
in
call
dec
push
push
mov
insl
pop
test
cmp
test
ret
mov
jno
push
ret
mov
in
mov
xchg
mov
ds
jns
jg
mov
dec
xchg
push
jmp
iret
fwait
push
adcl
popf
adc
or
sti
dec
mov
xchg
push
xchg
xor
sub
fbld
sub
loopne
lods
mov
xchg
and
dec
jno
stos
mov
leave
ror
psrad
in
xchg
push
add
xchg
testb
out
stos
mov
jne
mov
repz
dec
lret
cld
or
subl
push
push
imul
pop
call
inc
push
add
lret
dec
mov
jl
ljmp
pop
push
pusha
or
out
adc
into
sub
in
cmp
mov
fsubs
fwait
xchg
popf
and
nop
xchg
js
scas
stos
mov
xchg
dec
test
mov
pop
sub
fisubrs
jne
mov
in
and
pushf
xor
xor
lds
add
int3
inc
xor
nop
push
adc
scas
andb
mov
adc
fistl
pushf
cmp
movsb
cmp
add
mov
xor
mov
pop
notl
cs
hlt
imul
sbb
sbb
sar
push
pop
nop
xor
add
addr16
mov
mov
mov
mov
mov
hlt
mov
cmc
adc
pop
test
pop
xchg
add
push
sbb
or
call
sbb
push
enter
mov
mov
rclb
clc
popf
into
loope
sbb
es
int3
mov
inc
orl
shl
ja
std
push
push
mov
or
lret
inc
push
mov
mov
fcmovnbe
jbe
cld
insb
push
mov
iret
out
dec
cmp
cmp
rcrl
inc
cltd
xor
cwtl
imul
test
sub
xor
fistpll
cmpsl
out
aaa
sub
lds
clc
dec
adc
inc
lcall
std
or
or
ja
adc
jge
xchg
xchg
nop
add
mov
sbb
pop
sub
inc
mov
push
cmp
cltd
ljmp
aas
into
imul
rcrb
hlt
sub
js
add
and
in
gs
adc
xor
pop
pushf
ja
cmpsb
mov
das
rcll
in
dec
mov
rcrl
gs
arpl
add
jge
scas
into
mov
mov
jg
jo
xchg
sti
pop
fisubrl
cltd
sbb
js
xor
lret
daa
add
xchg
pop
idivb
xor
out
out
addr16
mov
ss
jl
out
dec
pop
nop
jecxz
dec
mov
push
mov
cmc
or
xchg
xchg
shrl
xlat
cmpsl
mov
xor
pop
shlb
mov
aas
inc
sti
jnp
sbb
pop
sub
pop
sub
mov
mov
cmpsb
sti
les
movsl
aad
adc
sbb
mov
jmp
iret
mov
movsb
mov
mov
dec
mov
gs
imul
sub
lret
inc
cmp
push
test
cli
mov
ja
cmpsl
mov
fcmovne
rcll
lds
lcall
andb
mov
add
mov
jle
xor
cmp
int
xchg
jo
pop
jg
movsb
mov
cld
push
add
cmp
into
ss
repnz
lods
out
popf
decl
das
pop
aas
dec
dec
cmp
jg
std
lahf
in
scas
fnstsw
lods
out
popf
decl
das
pop
aas
dec
dec
cmp
jg
std
pushf
in
mov
mov
decb
es
cmp
cmp
dec
or
fsts
lods
out
popf
jg
loopne
test
cmp
mov
push
nop
bound
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
pop
cmpsl
adc
and
and
out
cmp
xchg
sahf
loope
icebp
push
push
mov
xor
popa
ret
jno
mov
xchg
xor
or
rorl
loope
icebp
push
sbb
sub
pop
rorl
jns
data16
and
popa
out
xor
jno
adc
insl
rcrb
dec
in
lods
or
mov
jp
imul
mov
sub
sbb
mov
and
scas
js
cmp
sub
fsubrl
pop
cld
mov
sub
enter
lret
adc
push
or
imul
ds
xchg
dec
xchg
ss
shll
mov
ret
mov
jno
mov
stc
shll
jbe
mov
jne
dec
js
inc
insb
adc
xchg
bnd
popa
das
mov
outsb
fs
mov
imul
data16
adc
fsubp
pop
adc
mov
add
jo
arpl
mov
add
shll
scas
icebp
cmp
das
adc
push
jecxz
repz
ret
push
fwait
mov
pop
leave
popf
loope
call
faddl
jmp
mov
xchg
cmc
pusha
xchg
inc
shll
mov
test
xchg
cmp
in
cmc
inc
lock
xor
stos
xor
addl
in
les
movsb
sub
jae
es
and
and
out
xor
cmp
jno
andl
mov
shll
loope
icebp
push
add
xor
popa
ret
jno
andl
mov
shll
loope
icebp
push
add
pop
jge
test
loope
pop
mov
and
lret
cmp
dec
test
test
lret
fisubs
and
outsl
pop
add
insb
lock
stc
xor
cmp
mov
add
inc
add
pop
sub
or
movb
jecxz
dec
mov
or
les
mov
sub
mov
mov
stos
vpsubsb
popa
inc
xchg
mov
dec
cmpl
jae
pop
rclb
push
aaa
and
xor
jecxz
pop
gs
cltd
sbb
adc
inc
jmp
in
cmp
in
mov
mov
push
out
test
mov
ret
clts
xchg
xchg
shlb
mov
nop
fidivrl
and
inc
iret
sbb
xchg
scas
or
inc
push
std
mov
stos
add
jecxz
clc
lods
fdivrs
dec
lret
pop
clc
and
sbb
and
out
add
test
xor
movsb
enter
out
xchg
fistl
mov
add
clc
inc
mov
or
enter
insb
in
in
inc
xchg
dec
mov
ret
mov
add
iret
dec
push
movsb
pop
push
lea
mov
icebp
gs
arpl
ljmp
and
cmp
popa
lcall
in
das
pop
fwait
xchg
cmpsl
sbb
add
daa
ret
pop
pop
ds
fwait
enter
out
sub
mov
jecxz
mov
dec
xchg
adc
xor
jmp
mov
mov
or
orb
into
aaa
mov
fcoml
push
or
pop
ret
xlat
xchg
xor
and
aas
dec
pop
shlb
pop
mov
sbb
mov
sub
jle
lcall
aas
jp
cltd
push
mov
fists
mov
xor
jl
leave
add
into
aad
decb
sbb
popf
xchg
emms
cmpsl
es
jae
lds
lock
jle
dec
jns
and
pop
iret
addb
stos
xorl
into
cltd
cs
inc
xor
loop
xchg
xchg
xor
shl
or
mov
pop
ss
test
lret
out
loopne
imul
ret
xor
pop
in
adc
mov
dec
fbstp
ljmp
inc
sbb
icebp
shlb
jmp
pop
xlat
mov
fwait
je
clc
lods
lods
mov
push
lods
outsl
aad
sbb
or
fxch
sbb
repz
outsb
push
jne
inc
imul
mov
lods
cs
loope
push
mov
mov
cmpb
inc
push
cmp
adc
mov
xorl
xchg
mov
xchg
es
push
mov
out
or
cld
aam
xor
dec
add
cli
jns
xchg
and
sub
mov
and
or
outsl
loopne
dec
fwait
push
test
push
aaa
xor
push
mov
inc
sbb
xor
dec
xchg
sub
ss
fs
stc
outsb
pop
pop
js
lret
out
mov
push
iret
adc
insb
pop
sbb
mov
paddsb
jg
sarl
cmpsl
cs
out
or
inc
mov
adc
aaa
int3
add
xchg
jne
loop
roll
lea
cmp
push
leave
loop
xor
adc
cmp
push
xchg
and
add
div
adc
in
add
push
add
jp
xor
mov
mov
mov
sub
rorb
cmp
lods
mov
movsl
jge
test
jecxz
pop
mov
jg
cmpl
aas
push
or
nopl
fcomp
sbb
add
icebp
test
pop
ljmp
push
test
fbld
mov
testl
pop
ja
dec
adc
js
lods
call
jge
insb
mov
adc
jmp
dec
push
iretw
icebp
add
std
fcmovne
sub
inc
inc
add
cli
inc
add
or
out
fnsave
push
daa
push
sbb
add
mov
add
shlb
and
mov
int
mov
sub
repnz
xchg
push
ds
daa
jmp
xor
inc
movsb
daa
fldl
or
add
push
ja
push
mov
lcall
dec
cltd
jne
add
hlt
mov
push
push
leave
negb
sub
std
sti
xor
ds
js
sub
jle
mov
test
ret
push
mov
loopne
jecxz
pop
mov
xor
orb
inc
popa
mov
je
cmp
push
dec
sbb
xchg
jbe
mov
cmp
mov
xchg
adcb
inc
jb
mov
add
adc
pop
jge
out
pop
sub
pop
ljmp
sbb
jg
mov
test
pop
pop
xchg
outsl
jae
add
inc
lahf
gs
add
mov
cwtl
dec
mov
xchg
aad
pop
aad
andl
mov
icebp
jle
ljmp
enter
mov
ljmp
imul
aaa
add
push
data16
xor
sub
lret
dec
cltd
or
rcl
cwtl
mov
adc
les
std
adc
pop
pop
rclb
cmc
data16
pop
fildll
js
jp
or
pop
jge
and
aad
pusha
cmp
push
or
mov
jg
and
mov
jae
adc
push
add
out
dec
mov
fucomi
xchg
shrl
iret
xchg
into
enter
jbe
ret
or
fbstp
and
fnstcw
jne
and
das
and
cmpsb
out
popl
nop
ret
adc
jnp
jge
push
mov
mov
mov
fdivs
stos
fdivrl
jp
mov
mov
mov
iret
cmp
sub
xor
ja
test
roll
data16
popf
jo
ret
or
add
aaa
mov
fnstsw
ljmp
ja
cmp
mov
dec
lret
test
push
in
jge
inc
les
push
inc
inc
fidivs
jb
xchg
xor
daa
out
xchg
ss
shrw
push
shl
ss
out
cmp
pop
std
roll
in
and
add
mov
and
sub
test
movsl
push
dec
adc
mov
dec
or
inc
pop
ret
fdiv
or
add
mov
pop
xchg
pusha
mov
stos
xchg
sub
fwait
xorl
dec
lock
mov
dec
sbb
call
jge
sbb
mov
enter
push
jnp
pusha
xor
les
xor
rcrb
cmp
xchg
arpl
xor
dec
mov
out
mov
cmp
test
or
stos
jb
lret
cmpsb
or
sbb
xchg
ret
pop
lods
cmp
xor
cltd
mov
mov
pop
mov
scas
call
dec
loopne
mov
imul
leave
sub
inc
nop
out
orl
inc
sbb
add
pop
cmp
cmp
push
daa
pushf
inc
inc
test
je
jno
xchg
fwait
jae
cmpsl
jae
out
and
scas
mov
cmp
addb
push
outsb
icebp
inc
pop
cmc
jae
rorl
xlat
xchg
mov
movsb
stos
dec
adc
pop
stos
jns
cmp
adc
lcall
sub
lret
fldcw
rcll
stc
pop
and
loopne
outsl
add
dec
xor
scas
add
call
loopne
mov
cld
sub
inc
and
popa
sub
push
in
loopne
dec
inc
jno
or
mov
icebp
jns
shlb
xchg
mov
fcompl
push
popf
insb
stc
movsl
stc
fsts
pop
aas
jg
call
mov
lcall
repz
sub
jnp
push
jo
insb
test
cmp
fldl
fcomip
daa
mov
sub
and
imul
push
outsl
add
xchg
sbb
test
ret
das
and
std
xchg
push
push
clc
scas
cmp
hlt
cmp
in
out
adc
inc
and
mov
mov
pop
push
push
ljmp
in
cmp
pop
adcl
out
mov
mov
or
pop
inc
xchg
dec
mov
cmp
or
in
jl
or
mov
hlt
lcall
fldcw
adc
xchg
subl
dec
cli
adc
mov
inc
ret
jg
xchg
sahf
cmp
rep
mov
push
xor
adcl
stos
pop
cmpsl
mov
pusha
out
dec
xchg
test
mov
clc
ss
push
mov
adc
add
mov
push
or
cmpsb
sbb
mov
ret
addr16
nop
pop
push
call
dec
inc
xchg
iret
stos
mov
inc
jae
mov
sub
pop
addr16
out
insb
in
jge
movsb
sub
shlb
ljmp
mov
or
int
imulb
push
movb
and
dec
xchg
xor
sbb
xor
push
mov
lcall
push
in
and
lea
mov
int3
popf
jbe
insl
or
xchg
bound
mov
test
mov
lahf
hlt
movsl
jo
inc
scas
cmpsl
or
xor
sahf
fstpt
dec
inc
push
jmp
jbe
daa
clc
and
mov
pushf
mov
bound
push
mov
pop
dec
jae
push
dec
imul
iret
jecxz
mov
stos
dec
pop
ds
fdivrs
jp
adc
adc
cmp
gs
lcall
rcl
fisubrl
mov
xchg
push
mov
and
in
mov
ljmp
or
lcall
jmp
mov
xor
and
sub
icebp
add
jl
ljmp
fsubs
out
in
loope
pop
pusha
dec
jmp
mov
fdivp
vmaskmovpd
xchg
push
sahf
or
inc
inc
push
das
pop
push
sahf
rol
sti
pop
clc
sub
cmp
mov
les
popa
mov
dec
lock
stos
cltd
in
dec
in
repnz
notl
mov
mov
mov
ja
int3
loope
xchg
popa
movsb
stc
cmp
sbb
in
xchg
out
in
sbb
mov
in
mov
aaa
mov
dec
jb
mov
out
das
pop
cmp
lret
push
xchg
xor
jae
dec
and
jnp
xor
je
or
push
lret
icebp
cltd
dec
bound
or
out
mov
jp
xchg
mov
inc
fwait
shll
insb
add
or
fisubs
maskmovq
pop
neg
sub
repnz
iret
dec
add
mov
das
inc
cvttps2pi
nop
mov
pop
or
js
xor
outsb
mov
xchg
subb
outsb
movl
sbb
sub
test
test
add
dec
dec
and
pop
outsb
push
insb
dec
push
mov
cwtl
insb
filds
in
push
mov
lahf
xor
and
rcrl
ret
mov
scas
jg
push
or
lret
adc
jmp
jns
cmpsl
sbb
ds
ret
js
jge
outsl
push
imul
or
push
or
into
out
sahf
mov
mov
xor
in
arpl
daa
cmp
div
push
add
cli
xor
fsubrs
xchg
dec
int
loope
pop
fnsave
jo
mov
paddb
xchg
mov
sti
fdivrs
repz
scas
add
xor
out
pop
mov
sub
leave
inc
adc
and
imul
and
cmp
pop
inc
mov
lahf
mov
dec
jbe
inc
dec
outsb
cltd
daa
ja
sub
pop
push
int3
imul
ret
adc
dec
stos
add
mov
xchg
mov
aaa
es
inc
pop
nop
jle
std
xlat
daa
sub
enter
int3
dec
es
dec
and
sbb
sub
push
je
in
sbb
add
push
mov
clc
popf
mov
into
dec
hlt
repnz
adc
testl
test
add
pop
push
bound
lods
inc
add
sbb
add
sub
sti
pop
pusha
ds
sub
pop
and
mov
jae
jb
adc
xchg
movsb
pop
ja
lods
mov
imul
fcmovb
pop
aas
popa
dec
movsl
mov
push
out
insl
push
vaddps
xor
fists
mov
clc
sbb
pop
rclb
jle
mov
idivl
mov
and
mov
int3
cltd
mov
push
xor
ljmp
sbb
in
pop
fwait
stos
lcall
jle
in
mov
cmp
out
sub
out
cli
sub
cmpsb
cs
stos
aad
jecxz
sbb
mov
push
push
pop
sbb
cmp
lea
cmp
fmull
adc
loop
cmp
mov
jbe
daa
cmp
push
not
daa
inc
push
push
and
dec
lock
push
fmuls
lcall
xor
sbbl
add
xchg
and
add
lods
shll
addl
xlat
je
cmpl
mov
lds
mov
xchg
jg
outsb
mov
mov
movsb
adc
lcall
popa
stos
lock
jb
sub
xchg
pop
imul
scas
and
push
das
inc
xor
ret
mov
aam
xor
dec
mov
stos
xor
fdivs
aas
imul
nop
dec
mov
ja
mov
pop
mov
and
sub
ret
xor
jns
out
aam
aas
inc
jb
or
sbb
loopne
dec
adc
in
xor
xor
jae
lock
add
das
jae
add
lock
push
rol
and
les
adc
xchg
fnstsw
scas
sti
pop
addb
xchg
arpl
or
mov
dec
sbb
and
cmp
jmp
lock
rol
push
mov
scas
sti
mov
cld
loop
je
sbb
call
stos
lods
ljmp
sbb
icebp
push
ja
lret
sub
mov
mov
push
jmp
dec
leave
loop
jbe
xor
mov
dec
addr16
add
cmp
out
sbb
mov
sbb
test
aad
push
or
fs
lods
mov
les
inc
bound
rorl
int
xchg
add
sub
les
in
aam
aad
mov
sbb
jl
sub
ljmp
mov
sub
sub
mov
sub
inc
add
test
and
jg
ljmp
jge
aas
xchg
dec
inc
stos
scas
repnz
or
jns
aas
or
mov
xchg
xchg
dec
jecxz
popa
inc
lock
adc
fs
insl
mov
or
mov
lahf
test
mov
and
sub
xchg
cmp
in
cli
movsl
cmp
push
ret
mov
xchg
sub
mov
jbe
jecxz
cmp
adc
pop
sbb
push
pop
lods
aad
push
shrl
push
testb
add
sub
xor
lahf
sub
shll
push
xlat
mov
mov
testb
xchg
hlt
xchg
es
or
jns
lcall
add
sbb
cmc
jb
fwait
and
add
xor
or
sub
int3
lea
sysenter
inc
and
outsl
mov
adc
fdivrs
xor
jecxz
cld
cmp
imul
jmp
and
in
aam
addl
dec
inc
cmp
cmpl
es
inc
iret
aas
notb
lahf
push
sbb
icebp
inc
mov
pop
bnd
into
addl
int
push
sub
add
out
aaa
outsl
fs
lea
repz
in
pop
adc
mov
aad
outsb
lea
clc
xcrypt-cfb
cmpsl
daa
ljmp
inc
jecxz
aad
and
dec
clc
arpl
loope
and
xchg
lock
or
xchg
push
pop
mov
push
fdivl
sahf
push
push
cmpsl
outsl
not
or
pop
arpl
rorl
mov
xor
rcrl
cmp
pop
cmp
lret
test
std
aam
loop
fwait
call
cmp
mov
xor
lock
pop
jle
mov
out
pop
imul
inc
stos
cmc
outsl
test
test
mov
cltd
shlb
pop
pop
adc
push
aaa
icebp
mov
int3
add
insl
mov
ss
dec
pushl
inc
xchg
jnp
pop
mov
enter
xabort
add
jns
cmpb
mov
filds
push
insl
bound
or
sub
addl
jbe
mov
ret
ljmp
xor
popa
rcl
mov
gs
cli
fs
fsubl
xchg
sub
mov
add
icebp
mov
cld
sub
mov
cmpsb
push
or
jno
repnz
pop
mov
xor
sbb
and
insl
gs
subl
out
testl
xchg
imul
push
gs
stc
jo
insb
mov
push
in
inc
fisubrs
mov
xlat
leave
lods
je
ljmp
pop
jns
icebp
pop
roll
aas
jp
jg
mov
lahf
jmp
mov
ds
sub
scas
icebp
jnp
addr16
xchg
cltd
push
inc
or
push
test
push
popf
outsl
add
mov
adc
rcr
mov
xor
fisttpll
xchg
sub
in
lahf
stc
cmp
xor
pop
pushf
xlat
int
push
xor
pop
out
nop
scas
les
sbb
fnstenv
xchg
cmp
xchg
push
add
jae
out
mov
sub
push
shll
in
aad
mov
adcb
imul
or
jne
fldcw
xlat
stos
mov
stc
and
sbb
sub
data16
jb
xor
cmp
sbb
ljmp
js
out
shlb
lds
insb
cmp
dec
mov
dec
insb
lods
outsl
subl
sti
js
outsb
jp
mov
pop
mov
jle
mov
and
mov
enter
xchg
xor
add
pop
mov
data16
outsb
add
test
ffreep
loop
imul
mov
sti
hlt
lock
push
popf
add
and
cmp
push
fiaddl
mov
xlat
addr16
mov
jne
and
es
adc
adc
lret
dec
xor
shlb
cmpsb
in
rclb
mov
aam
notl
aam
stos
and
mov
hlt
mov
xor
bound
push
enter
aad
ds
mov
gs
int3
out
jb
movsb
cmp
or
jg
push
jge
or
xchg
fldenv
xor
das
xor
clc
inc
insl
cli
mov
pushf
lcall
inc
push
aas
add
cmp
lds
jle
out
mov
add
pusha
popf
push
sbbl
mov
and
and
push
pop
mov
or
add
push
sbb
jp
cli
sub
adc
inc
popa
xor
xchg
inc
mov
sub
adc
sub
or
add
inc
jbe
adc
es
fs
pusha
mov
sahf
clc
and
cwtl
jo
pop
push
mov
cld
mov
rorl
jge
fistpl
push
jne
lods
pushf
cmp
in
cmp
out
sub
mov
repnz
test
and
loope
and
push
call
adc
fs
adc
repz
ja
jmp
lods
mov
icebp
add
jle
mov
negb
fists
out
cld
mov
lret
add
add
push
adc
inc
lahf
pop
cmp
bound
mov
or
and
jmp
lret
mov
imul
xor
push
xor
pfcmpeq
cmp
adc
push
decl
js
mov
jno
push
pop
outsb
pop
push
push
rorl
mov
clc
aas
call
xchg
fidivrl
leave
or
lret
cmpsb
mov
sbb
push
in
jbe
dec
dec
psrad
inc
loop
xor
adc
mov
icebp
enter
addl
lret
add
mov
sbb
cmc
pop
cltd
shr
cmp
sbb
lods
ret
sbb
dec
xchg
dec
in
adc
jbe
sub
into
loop
mov
sahf
imul
push
cmpsb
addr16
clc
insb
iret
ret
xchg
pop
mov
arpl
orb
add
pop
add
add
gs
leave
outsb
icebp
inc
push
fisubrs
jns
xor
xchg
mov
or
in
cmpl
lock
mov
jmp
lahf
sbb
mov
jae
jge
mov
push
and
add
outsl
inc
jge
xor
push
fcomps
cmp
sarl
pop
mov
mov
fld
loope
xchg
or
jnp
call
mov
xchg
xchg
inc
jecxz
repz
ret
jno
andl
mov
shll
loope
icebp
push
add
xor
popa
ret
jno
andl
mov
shll
loope
icebp
push
add
xor
popa
jno
andl
mov
shll
loope
shlb
addr16
inc
jecxz
repz
icebp
adc
outsb
cltd
or
mov
mov
pop
or
cmp
sub
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
hlt
add
mov
add
mov
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
das
cmc
add
sbb
add
adc
add
or
add
add
add
cld
hlt
add
hlt
hlt
add
in
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
cmc
add
push
cmc
add
pop
cmc
add
jo
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
call
testb
xor
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
test
add
mov
add
xchg
testb
pushf
testb
movsb
testb
lods
testb
mov
add
testb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
loopne
add
call
testb
or
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
shl
add
testl
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
clc
add
jl
add
je
add
insb
clc
add
fs
add
pop
clc
add
push
clc
add
dec
clc
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
test
add
mov
add
mov
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
dec
stc
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
in
add
in
stc
add
hlt
stc
add
cld
stc
add
add
add
or
add
adc
add
daa
cli
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
inc
cli
add
dec
cli
add
pop
cli
add
insb
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
