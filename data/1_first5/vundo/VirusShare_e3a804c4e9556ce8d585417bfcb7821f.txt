add
add
push
sub
jle
dec
ja
add
add
add
add
add
add
add
add
sub
add
pop
add
add
add
aaa
aas
add
js
add
js
add
bound
add
add
push
sub
add
add
sbb
add
jns
add
add
add
add
add
add
outsb
add
xchg
add
jns
add
add
sub
add
add
add
sub
add
sub
add
pusha
sub
add
mov
add
js
add
bound
add
add
push
sub
add
add
sbb
add
add
jl
add
jl
add
inc
outsl
add
jl
add
fisubrs
add
aas
add
jl
add
add
add
jl
add
jl
add
jl
add
push
rolb
push
rolb
js
add
mov
add
js
add
bound
add
add
push
sub
add
add
sbb
add
add
jl
add
jl
add
inc
outsl
add
jl
add
fisubrs
add
aas
add
jl
add
add
add
jl
add
jl
add
jl
add
ja
add
test
add
js
add
mov
add
js
add
bound
add
add
push
sub
add
add
sbb
add
add
jl
add
jl
add
push
mov
push
push
push
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
pop
mov
add
mov
mov
cmpb
je
cmp
jle
mov
jmp
mov
mov
mov
movzbl
sub
inc
test
jne
dec
movzbl
sub
je
incl
push
pushl
call
pushl
push
call
pop
pop
jmp
call
mov
xor
push
push
mov
push
push
mov
push
push
push
push
push
pushl
pushl
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
push
mov
sub
push
push
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
movl
call
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
mov
push
push
push
call
mov
call
xor
mov
push
push
push
call
lea
push
push
push
call
add
push
pushl
call
push
mov
push
push
call
push
push
push
push
push
pushl
call
pushl
call
push
push
pushl
pushl
pushl
call
push
push
push
push
push
call
pushl
pushl
pushl
call
add
pop
jmp
lea
push
pushl
call
xor
mov
push
push
push
push
pushl
call
pushl
mov
pushl
pushl
push
push
call
lea
push
call
pop
push
lea
push
push
push
push
call
push
lea
push
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
jmp
push
call
xor
pop
pop
leave
ret
mov
andl
andl
push
push
movl
movl
movl
movl
mov
call
push
push
mov
call
andl
mov
mov
push
movl
movl
mov
movl
call
ret
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
push
pushl
call
mov
call
push
push
push
pushl
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
pushl
pushl
pushl
push
push
call
add
mov
add
cmp
jb
mov
leave
ret
push
mov
sub
pushl
call
pushl
movl
movl
movl
pushl
movl
movl
movl
movl
movl
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
push
lea
push
push
call
add
leave
ret
push
mov
sub
cmpl
push
mov
je
cmp
je
lea
push
call
call
call
movzwl
mov
mov
mov
movzwl
xor
movzwl
xor
lea
push
call
mov
xor
xor
test
jne
mov
call
not
mov
pop
mov
or
mov
leave
ret
dec
add
add
dec
cwtl
arpl
add
add
add
add
add
add
adc
add
sarl
add
add
add
insb
add
add
add
xor
add
add
add
sub
clc
add
add
data16
popa
popa
and
ja
jae
inc
jae
dec
lds
aad
and
add
add
bswap
lcall
mov
pop
or
push
mov
pop
mov
sub
test
test
call
loopne
addl
addb
or
mov
cmp
inc
push
decl
call
push
mov
jge
push
push
add
add
xor
push
mov
test
loopne
add
adc
je
push
call
orl
call
incl
push
repz
add
push
add
test
xor
lea
inc
clc
adc
push
add
add
inc
add
adc
add
insb
add
add
add
add
add
push
add
fs
add
inc
inc
add
outsb
gs
adc
push
popa
sbb
add
popa
je
inc
outsb
gs
inc
dec
mov
gs
add
popa
dec
insb
imul
gs
insb
gs
add
inc
outsl
jb
xor
jb
mov
add
add
adc
add
add
loope
add
add
jno
add
les
in
pop
ret
outsl
out
mov
jmp
roll
fidivs
xchg
push
aad
pushl
pop
lret
dec
scas
push
into
or
sub
xchg
cmp
cwtl
lret
jg
push
mov
or
lea
mov
cmpsb
jb
jecxz
out
imul
adc
inc
push
xchg
roll
dec
jg
dec
sbb
cmp
lret
mov
push
ret
test
or
into
icebp
xor
arpl
ljmp
sarl
mulb
daa
jl
shl
inc
enter
lds
sbbb
or
testl
int
fsub
lods
cld
gs
xor
dec
insb
jb
adcl
popf
stos
and
inc
inc
inc
push
dec
loope
add
aaa
cwtl
call
ss
xchg
loope
into
aaa
shr
pop
out
push
push
sub
popa
loop
repnz
out
cld
jg
push
push
sbb
or
ljmp
aas
jg
fwait
dec
mov
adc
mov
cmp
loopne
fwait
leave
mov
cwtl
test
add
mov
mull
adc
jmp
mov
iret
pushl
cmp
mov
cmp
cld
xor
lret
xchg
lock
lret
or
mov
gs
ja
jnp
xchg
pop
scas
push
daa
xchg
jnp
pop
rcrb
fidivrs
xor
shlb
dec
jg
cwtl
sar
lods
nop
loope
jbe
push
dec
dec
rclb
mov
ret
or
addl
scas
push
repz
fsubr
call
orb
xor
sti
rorb
addps
pop
aaa
mov
mov
insl
fsub
xor
xchg
dec
ljmp
mov
add
mov
ret
movsb
cld
sub
sti
shlb
in
or
sbb
adc
scas
xlat
in
hlt
cmp
inc
js
push
std
jl
cmc
in
in
jecxz
repnz
pushaw
xchg
cmpsb
fisubrl
hlt
and
mov
mov
loop
out
or
cmp
shl
xchg
ret
pop
and
iret
dec
sub
pushf
xlat
inc
mov
in
jae
shrb
inc
or
xchg
and
ja
out
sarl
adc
fstl
jecxz
fadds
test
sbb
jmp
dec
aaa
jbe
fistl
lock
sti
dec
cmp
shlb
outsb
inc
add
push
cmpsb
jge
xchg
in
inc
repz
jmp
fdivrl
pop
jns
test
lcall
movsb
decb
xorl
in
xchg
scas
cmpsb
jge
push
adc
sbb
lock
arpl
lcall
aad
rol
inc
xor
sbb
jb
or
fsubrs
dec
fmull
inc
lret
sub
sbb
and
pop
push
jecxz
scas
and
aas
sbb
mov
fmuls
rep
out
push
sbb
add
push
pop
or
sarl
movsb
xor
test
xor
leave
push
adc
lds
add
lret
inc
xchg
adc
mov
fs
add
stos
mov
shlb
lahf
shll
or
lds
push
repz
mov
lock
and
stc
pusha
mov
aas
adc
sub
dec
sbb
pusha
sbbb
mov
xchg
sbb
xchg
jmp
psubusb
mov
or
sarl
scas
add
inc
cwtl
ret
lods
fildl
or
movsl
pop
vmovmskpd
push
sbb
mov
pop
addr16
mov
or
mov
fwait
ja
xchg
cltd
mov
sub
fwait
stc
and
cmpsl
adc
cmp
and
pop
cli
cmp
and
sahf
lahf
icebp
stos
cmpsl
sub
mov
jne
mov
lea
adc
mov
push
inc
xor
roll
insl
outsl
into
inc
clc
repz
mov
sub
movups
rorb
adc
pop
inc
adc
daa
inc
in
sbb
nop
xchg
imul
daa
push
jl
lds
pop
xchg
push
out
movsb
mov
cli
in
pop
push
add
cmp
out
inc
jle
leave
push
mov
lret
in
adc
mov
add
ret
add
les
mov
aam
jecxz
jecxz
jnp
add
push
add
adc
cli
test
mov
push
pop
repnz
or
shll
sub
add
inc
ds
mov
mov
jle
xchg
lahf
aaa
dec
aam
mov
mov
subl
adc
xor
inc
orb
addb
cmp
je
jne
aas
sub
cmp
jge
leave
ljmp
mov
jb
dec
mov
sbb
movsb
imul
out
pop
roll
lret
negl
adc
pop
out
jbe
and
mov
xor
xchg
sbb
shrb
add
mov
popa
data16
mov
in
cli
sahf
sub
iret
fs
pop
push
aam
jle
jge
mov
sbb
jmp
call
hlt
jnp
push
ds
jnp
popf
xor
xor
inc
loop
jae
dec
or
roll
mov
xor
enter
pop
cmp
jge
xchg
mov
leave
jl
test
inc
adcl
test
movsb
cmpb
mov
inc
cwtl
mov
sbb
inc
mov
xor
aas
insl
mov
stc
jge
xor
test
lahf
sub
sahf
mov
jb
push
addr16
mov
xchg
xchg
outsb
out
insl
cmp
push
inc
mov
fsubrl
test
jns
mov
adc
xchg
insb
xchg
xor
fwait
in
push
push
loopne
sbb
lret
sub
adc
push
and
popf
sub
lret
mov
loope
mov
pop
xchg
cld
sbb
loope
mov
or
xchg
push
add
lea
cmp
mov
popf
lods
and
cmp
push
iret
pusha
lret
sbb
dec
add
push
dec
jl
mov
stc
add
push
mov
pop
inc
pop
push
mov
bound
iret
dec
cs
fwait
pop
lahf
fstpl
imul
scas
aam
pusha
sub
pop
rorb
pushf
mov
sbb
cmp
filds
mov
inc
or
push
dec
xchg
xor
data16
mov
std
fs
mov
out
add
push
ja
or
cli
arpl
shrb
mov
repnz
inc
lret
inc
sarl
pop
out
repz
inc
mov
rorb
jnp
or
or
jno
aas
adc
in
dec
and
push
orb
lds
in
packsswb
mov
mov
jmp
sti
lea
push
or
lock
rcrl
mov
int3
inc
add
mov
ss
xchg
mov
mov
les
outsl
xor
lahf
mov
shll
out
ret
jg
mov
mov
jecxz
lock
mov
jns
rorb
adc
lcall
out
cli
imul
lahf
adc
pop
shlb
sbb
sbbb
jecxz
fisttps
sbb
popl
int3
clc
add
or
ljmp
sbb
push
dec
cmp
stos
add
jmp
inc
into
pop
cmp
xchg
mov
sub
shrl
inc
pushf
or
mov
sbb
pusha
popf
inc
xorl
scas
movsl
stc
cmpb
ja
dec
je
aad
jbe
xchg
inc
add
mov
lods
cmp
fsubs
call
fs
fidivl
jle
adc
imul
inc
sahf
mov
pusha
jo
decl
jo
or
js
testl
out
sbb
mov
jnp
cmp
mov
movsb
xor
insb
push
pop
dec
imul
imul
ret
sbb
or
xchg
popf
rorl
nop
mov
inc
sub
movsb
sbb
or
inc
adc
mov
idivl
pushl
or
and
loope
inc
popa
push
mov
pop
out
ficompl
push
and
jae
push
addr16
cmc
xchg
gs
sub
mov
push
jl
mov
inc
pop
cmpsb
cmpsb
enter
rorl
addr16
shrl
and
cmp
lahf
int3
dec
in
push
add
sub
stc
jecxz
mov
in
andb
pop
nop
lret
push
add
xlat
cmp
into
xor
pop
mov
or
xchg
mov
push
cli
mov
data16
cmp
jmp
repnz
pop
sbb
test
mov
mov
xchg
xor
pop
and
imul
aad
js
in
shr
cmpsb
nop
cltd
movsl
jmp
es
pusha
dec
ret
mov
and
je
test
ds
and
cvtdq2ps
inc
and
inc
test
test
ss
call
jp
xchg
cli
in
lds
iret
xchg
pop
cmp
ja
pop
jb
jae
or
gs
out
xchg
rorb
sbb
lds
push
stos
cmp
scas
mov
dec
addl
scas
enter
lock
dec
insl
mov
ds
call
dec
stc
push
mov
xlat
add
push
and
testb
adc
cmp
mov
call
mov
lds
jne
out
cmc
cs
je
cmp
ficoml
stos
xchg
dec
add
stos
and
mov
mov
sbb
dec
inc
and
sahf
xor
ret
pop
xor
rclb
in
ljmp
jecxz
or
and
and
push
jmp
mov
bound
fwait
stos
jg
or
mov
dec
fcoml
adc
call
mov
jnp
or
imul
inc
push
add
inc
ss
dec
adc
adc
or
xchg
jne
adc
jb
in
popf
into
in
addr16
ds
push
sub
enter
je
xor
mov
sbb
mov
mov
mov
adc
cmp
sti
imul
and
fdivl
add
adc
lods
in
mov
xchg
outsb
push
pop
bound
insb
out
inc
mov
inc
mul
je
ret
push
xor
das
in
push
sbb
test
cmp
scas
inc
sbb
into
cmp
js
add
mov
mov
out
xchg
push
fdivs
inc
inc
sti
pop
mov
pop
imul
sbb
addb
push
mov
push
mov
xor
out
and
jp
jp
mov
adcb
fwait
lcall
adc
out
mov
aaa
lds
push
mov
je
jne
xorl
ds
pop
insl
dec
shl
xchg
js
sub
das
pop
mov
and
cmpsb
and
fbstp
cmpb
mov
xor
cmp
xchg
mov
jnp
sbb
mov
dec
test
adc
jg
icebp
push
push
sbb
je
dec
inc
dec
jnp
decb
and
outsl
jo
sbb
fwait
cmp
jne
push
and
mov
scas
push
cmpsl
pop
divl
out
mov
insl
mov
pop
fmul
jecxz
lds
lea
icebp
xchg
sti
in
jmp
xchg
shrb
clc
add
cmp
movd
xchg
hlt
sbb
es
mov
sub
loopne
popf
int
dec
stos
jae
test
popf
xchg
xchg
cs
xchg
inc
popf
mov
aaa
cmpsl
add
fimuls
es
or
jb
jmp
insb
xor
dec
add
in
xchg
lahf
mov
dec
fwait
xchg
mov
pop
push
jne
sbb
jbe
in
dec
ljmp
cmp
gs
hlt
subb
call
inc
xchg
pop
cmp
lcall
test
ficompl
jge
push
inc
jle
insl
mov
mov
mov
in
cmp
lods
mov
in
adc
outsl
mov
mov
sub
add
fsubr
lock
xchg
xchg
dec
imul
mov
xor
add
repz
push
out
test
adcl
jb
fs
dec
mov
xlat
pop
stos
mov
push
ret
daa
mov
xchg
adcl
fimuls
jmp
cmp
aam
testb
pop
inc
mov
adcl
lret
mov
in
and
ja
xor
pop
mov
aas
sub
push
popf
mov
cli
sbb
loop
out
mov
push
outsl
inc
inc
lcall
adc
loopne
xchg
aas
jecxz,pt
test
imul
dec
xor
add
fistl
mov
mov
push
inc
rcrl
scas
loopne
xlat
pop
into
dec
jns
shl
mov
jo
pushl
sarb
jb
jl
int3
icebp
and
jb
repnz
cmpsb
ljmp
adc
adc
icebp
xor
dec
ss
or
push
rorb
mov
xchg
repz
popa
les
pushf
dec
sub
hlt
pop
shll
js
leave
shlb
add
mov
js
mov
out
push
xor
jmp
or
loope
or
movsl
mov
or
out
adc
fiaddl
or
cltd
push
nop
pop
mov
cs
jl
inc
aad
adc
or
sub
mov
mov
iret
mov
stos
shl
cli
pop
lds
sub
cmp
xor
std
shrl
loop
jge
test
imul
popa
ret
gs
push
pushf
loop
adc
pop
lret
out
test
rorb
fwait
mov
cmc
mulb
adc
jg
cmpsb
stc
movlhps
in
and
fdivrs
pop
movsb
cmp
push
shl
pop
iret
shrl
jp
inc
xchg
cli
dec
sbb
and
scas
push
and
xchg
addb
cs
pushf
push
repz
les
out
scas
jae
mov
call
les
idivb
cmp
shrb
adc
sub
mov
mov
mov
sbb
iret
push
adc
ud2
add
add
fisubrl
addr16
xor
cs
and
dec
jns
cmpsb
jnp
push
sbbb
xor
add
es
sbb
out
repnz
mov
mov
les
and
lret
lds
in
xchg
or
inc
xor
xchg
fdivrl
cmpsb
shll
or
and
lods
xor
sub
je
push
notb
cmp
stos
xor
dec
daa
adc
or
pop
push
xchg
sub
jae
pop
fldcw
mov
stc
mov
popa
scas
or
fidivrl
mov
xor
mov
xchg
mov
push
out
sahf
pop
jno
jnp
insb
dec
enter
jae
fdivrs
jge
addr16
cltd
dec
cli
repnz
gs
aad
lds
lret
das
jae
push
mov
ret
mov
aad
xchg
sti
rep
inc
inc
scas
popa
mov
loopne
push
arpl
jae
mov
push
insl
pop
pop
cmp
pop
cmc
pop
in
and
mov
into
jmp
sarl
dec
sbbb
fwait
icebp
loopne
xor
aam
push
outsb
push
push
inc
rcll
loope
cmpsl
mov
movsb
out
adc
pop
sub
jmp
sbb
fidivl
push
test
xor
dec
pop
push
not
fildl
sti
mov
push
out
xchg
xchg
mov
dec
add
jne
push
cmp
leave
test
test
insl
insb
or
push
lahf
push
xchg
add
jnp
outsl
loop
scas
pop
sahf
jb
mov
into
sub
test
ds
ret
adc
pop
jecxz
push
or
mov
mov
and
sbb
sub
dec
rolb
xlat
rorb
shlb
inc
mov
cmp
test
push
xchg
adc
push
xorl
sahf
enter
sub
lock
lods
pop
fs
in
gs
mov
ss
jbe
pop
mov
sbb
rcll
out
or
cld
in
cmp
push
and
mov
push
and
lods
std
scas
or
xchg
bound
jnp
dec
popa
test
out
sub
push
jecxz
push
andb
push
pushf
rorl
add
insb
inc
hlt
das
jecxz
and
lds
and
pusha
inc
out
mov
pushf
xchg
inc
fsincos
scas
pop
dec
push
faddp
dec
cmpb
loop
mov
dec
mov
pop
lods
into
pop
movsl
mov
sbb
pop
pusha
in
movsl
cmpsb
xchg
xchg
lds
scas
pop
mov
push
jne
mov
xchg
std
pop
lret
sub
cwtl
push
roll
cmp
pop
loop
int
xlat
cmp
outsl
inc
insl
pop
js
jl
int
push
loopne
or
jo
dec
sub
push
mov
pop
leave
xchg
aas
aad
jl
fwait
mov
mov
decl
and
adcb
int3
mov
into
mov
adc
rorl
sar
fwait
dec
in
push
adc
in
adc
stc
arpl
xor
mov
and
les
aas
aas
or
sub
call
insb
pop
add
pop
scas
pop
cwtl
sbb
outsl
lods
mov
xchg
or
pop
fwait
mov
test
gs
fcoml
rcll
cmpsb
sbb
or
xchg
ljmp
mov
hlt
clc
add
clc
mov
sub
xchg
adc
cwtl
dec
pop
mov
cmpsl
sbb
aad
xchg
lcall
mov
pop
cmp
test
and
je
mov
jno
jae
cmp
je
mov
clc
mov
jl
loope
xlat
push
mov
stos
mov
cs
cmp
fcmove
jno
pop
inc
xor
sub
push
or
test
push
adc
lds
jge
ja
hlt
xchg
dec
inc
dec
mov
adc
in
sub
mov
icebp
cmp
in
mov
daa
sbb
sub
cmp
paddusb
dec
cmp
xor
inc
insl
xor
jns
xchg
push
and
inc
pusha
enter
jle
pop
push
sarl
mov
cmp
or
xor
mov
mov
inc
aas
pusha
dec
in
pop
ja
fmull
adc
ret
addr16
call
je
fbld
lret
loop
in
adc
movsl
enter
icebp
lret
aaa
mov
lock
pop
inc
in
adc
push
leave
in
or
xchg
mov
jnp
inc
jle
mov
push
mov
pop
sub
dec
lods
xchg
into
bound
mov
xor
cmp
mov
jge
repnz
sahf
test
insb
or
imul
into
add
aad
divb
or
out
cli
lcall
jno
jbe
jl
cmp
int
jge
sbb
sub
imul
int3
inc
cltd
mov
mov
sbb
std
loop
xor
cmpsl
adc
jns
cld
jmp
cli
aam
add
pop
loop
or
insl
into
mov
xor
mov
inc
imul
or
adcb
pop
pushl
fptan
xchg
rolb
pushf
repz
outsl
iret
je
dec
jo
mov
xor
cld
lds
pop
mov
xchg
and
inc
orb
fnstenv
lock
xchg
movsb
mov
aaa
dec
mov
jecxz
sub
pop
inc
fs
add
loope
int
aad
add
lods
idiv
popa
test
mov
lods
inc
dec
and
popf
loop
sub
sub
mov
aas
xchg
mov
push
movaps
dec
icebp
mov
sarb
ret
ss
jne
sub
mov
push
dec
or
mov
push
arpl
sub
cltd
cltd
inc
es
pop
gs
dec
aad
outsl
data16
lea
push
fildll
nop
push
aad
sub
dec
jle
rcll
pushf
xlat
call
mov
or
fmul
iret
repz
popl
lahf
in
int3
or
out
sahf
dec
out
xor
es
loopne
push
imul
cmp
shlb
jo
outsb
push
push
adc
mov
jg
lock
mov
mov
addr16
xchg
movl
sahf
ljmp
mov
mov
mov
repnz
push
lret
cmp
lahf
stos
rcll
cmp
lcall
jl
push
jbe
jb
dec
dec
pop
lea
cmpsb
pop
xchg
inc
pop
push
out
and
mov
fisttps
test
mov
sub
dec
adc
out
add
lea
add
add
popa
add
xor
add
icebp
add
test
add
add
adc
add
add
add
add
rolb
add
add
or
add
add
sbb
add
xor
mov
add
add
add
add
add
stos
stos
inc
add
mov
call
imul
mov
inc
add
add
add
add
sti
add
add
adc
add
add
add
add
add
or
mov
add
je
add
and
add
add
fwait
add
add
xchg
movb
test
add
cmp
cmp
lds
sbb
filds
arpl
pop
gs
push
imul
add
outsb
dec
jne
push
mov
and
or
push
inc
sbb
xchg
lea
mov
mov
mov
mov
inc
jne
call
orl
ds
lea
sbb
add
mov
mov
push
test
decl
add
adc
rolb
and
in
mov
loopne
add
adc
adcb
call
call
inc
or
adc
adc
inc
add
add
push
data16
push
clc
mov
mov
jbe
enter
cld
incl
mov
decl
incl
add
test
add
add
add
add
add
mov
add
add
add
add
outsb
je
inc
add
cs
jg
outsl
inc
imul
outsl
je
imul
popa
pop
inc
test
popa
dec
and
add
insb
push
gs
push
push
gs
push
jae
push
popa
pop
shlb
cs
arpl
arpl
add
add
add
add
add
add
add
push
add
pop
add
add
add
xchg
add
add
add
add
add
add
add
push
jae
or
jb
push
dec
pop
rcrb
dec
push
mov
cltd
mov
add
rcrb
dec
inc
addb
mov
scas
dec
pushf
dec
movsb
mov
out
xor
sbb
push
sbb
lcall
nop
rcrb
mov
into
adc
test
xchg
cmp
jl
xchg
dec
push
dec
lcall
xor
mov
xor
dec
xlat
cli
cmp
sub
pop
push
dec
adc
repnz
cli
es
lods
inc
bound
dec
mov
fs
rcr
dec
popa
dec
js
xchg
aaa
inc
lahf
pop
mov
mov
jns
dec
out
push
lret
mov
jo
xchg
std
in
movnti
pop
je
jb
sub
aas
call
xor
xor
adcb
fisttpll
cmc
cmpsl
out
cmp
gs
jl
iret
pop
mov
hlt
mov
in
int3
jmp
lds
rolb
mov
sarb
xchg
stos
stos
xor
push
xor
fidivl
mov
pusha
call
ror
repnz
mov
pop
sub
cmc
jns
test
jae
mov
js
in
and
mov
mov
dec
aas
int3
xor
in
hlt
sbb
mull
inc
movsl
int
mov
dec
loopne
mov
xor
test
jno
int
cltd
cld
sub
out
jg
out
xor
push
mov
pop
or
std
or
clc
insl
xchg
cmp
mov
sbb
test
sbb
gs
lahf
test
or
jb
xor
jne
out
lods
and
xor
jae
js
push
jb
push
sarl
sub
adc
adc
xchg
gs
nop
mov
xor
test
fdiv
cmp
stos
ss
jne
fldenv
jb
lret
repz
stc
enter
fists
es
shll
aas
rcll
jno
mov
outsb
test
rcrb
gs
aas
add
addb
fcomi
arpl
xchg
iret
mov
cli
scas
ss
sub
inc
or
fldt
xor
add
lea
and
cld
jecxz
scas
xchg
repz
inc
popa
inc
push
jp
xchg
push
es
inc
int
lret
mov
popa
jnp
lcall
notl
dec
js
jle
cs
repnz
fsubr
cld
push
xchg
sbb
shll
mov
push
add
xchg
neg
loope
cmp
ss
add
imul
fimull
jg
lock
jmp
loope
push
inc
cld
push
push
mov
cmp
jg
pop
fwait
xor
int3
movsl
push
out
out
add
xchg
test
add
jae
aaa
shll
sub
sub
popa
mov
sahf
popf
test
xchg
das
add
lds
rcll
dec
dec
mov
mov
mov
adc
push
sbb
jnp
jge
repz
cmp
xor
dec
inc
jbe
shll
xor
jmp
pop
push
pop
mov
push
out
iret
shrb
mov
mov
popf
push
push
rcll
aam
mov
ss
pop
jbe
test
out
loopne
jb
push
dec
cmp
loope
dec
fidivs
xor
cld
test
lods
mov
cmpl
andl
pusha
outsl
jecxz
jmp
and
add
adc
cmp
out
or
lret
adc
mov
xchg
mov
data16
std
inc
icebp
imul
rcll
ss
xchg
test
ret
lds
xorb
jne
int
out
sub
sti
cmpsl
pop
push
sbb
shll
aas
sub
mov
dec
and
jb
or
call
add
mov
loop
fnstsw
jnp
adc
outsb
inc
push
in
or
ss
mov
adc
dec
push
enter
enter
cmc
dec
xchg
cmovs
mov
sub
leave
lds
pop
popa
mov
outsl
nop
jp
xor
std
push
popl
sub
test
xchg
cmp
daa
clc
je
ficompl
ret
push
sbb
imul
jp
inc
pop
xor
mov
pop
cld
jno
int3
push
std
cmp
sbb
xchg
xchg
jg
fidivl
stos
pop
add
sbb
adc
ds
out
mov
bnd
imul
in
lahf
mov
xor
fildl
es
adc
cmp
add
int3
jmp
icebp
jns
imul
adc
psubsw
and
lods
mov
test
inc
lds
out
out
daa
repz
mov
test
popf
xchg
and
push
loopne
insl
sti
das
or
sarl
mov
sbb
out
adc
clc
mov
addr16
and
push
xchg
cltd
xor
cmp
mov
out
adc
lret
dec
jae
pop
lcall
shrb
icebp
xchg
je
xlat
pop
roll
sysret
fnsave
push
mov
fsts
lock
pop
arpl
lods
pushw
jns
inc
mov
mov
push
andb
imul
mov
fcmove
xchg
and
rcrl
es
dec
push
or
pushf
adc
mov
repz
inc
or
mov
inc
add
add
in
arpl
xchg
dec
imul
pop
enter
call
call
mov
adc
xchg
sti
sbb
scas
inc
jbe
je
sbb
sub
lcall
jp
ret
sub
scas
dec
ret
cmp
outsl
shl
xor
push
pop
dec
ret
movl
mov
testb
xchg
add
mov
aad
or
bound
imul
sub
dec
pop
aad
fisttpl
mov
aas
in
push
lret
scas
lret
dec
scas
mov
xchg
fstps
sbb
dec
rolb
pusha
cmpsb
mov
sahf
insl
stc
pop
sbb
scas
ljmp
sbbl
rolw
sbb
incl
ljmp
pusha
sub
add
lcall
pop
jl
div
xchg
xor
jp
or
mov
loop
inc
loop
and
fs
inc
jp
cmc
push
xchg
repz
leave
xchg
addl
mov
adc
popf
les
repz
xchg
shlb
push
mov
adc
jp
lahf
dec
fldl
push
or
jl
pop
imul
cmp
mov
cmp
dec
mov
das
mov
or
xchg
sub
mov
sub
ret
push
ljmp
cmpsl
fimull
packuswb
cmp
xchg
jb
popa
mov
dec
imul
je
fs
fnstenv
movsl
or
xchg
ljmp
push
stos
push
daa
mov
inc
nop
sub
int3
loopne
jo
mov
imul
jne
add
pop
call
jo
jp
xor
cmc
sar
sarb
xchg
jne
clc
xor
ret
adc
add
mov
add
jns
inc
sbb
test
test
enter
lock
fs
or
mov
andb
pop
sub
fcmove
fwait
rcrl
call
inc
cltd
sbb
hlt
lea
mov
jae
fdecstp
ss
sub
pop
arpl
xlat
cmp
mov
or
inc
push
jmp
or
mov
mov
add
cmp
push
out
outsb
add
push
std
cld
xchg
push
mov
lcall
inc
add
addr16
lods
les
and
ss
mov
test
jne
scas
pop
popf
stc
das
xchg
add
pop
imul
and
in
cmpsb
pop
jmp
or
std
sahf
xlat
sub
bound
into
js
cwtl
popf
pushf
lock
popa
jo
mov
xorl
into
es
push
fcoml
fstpl
jg
push
jo
clc
xchg
dec
outsb
mov
aas
sub
push
xchg
hlt
mov
or
cmc
fadd
xor
shlb
in
pop
mov
jl
dec
repnz
dec
loope
add
fmuls
rolb
rcl
inc
ja
jecxz
add
pop
std
fstpt
lret
cs
mov
mov
std
push
sbb
aaa
hlt
dec
cmp
std
mov
mov
test
xchg
cwtl
mov
inc
das
push
sub
jb
das
mov
addl
outsl
cwtl
pop
shll
in
mov
arpl
outsl
cli
popa
fmulp
push
dec
fisttps
push
arpl
pop
inc
jmp
ljmp
dec
inc
jg
sbb
jne
mov
xchg
ja
jp
stos
mov
iret
xchg
and
push
pop
fisttps
lcall
out
push
ror
mov
cmp
mov
daa
mov
jns
pop
mov
pop
sub
sbb
imul
and
jo
cmp
movsl
jbe
and
testb
mov
aam
cwtl
xor
cmp
adc
hlt
aam
rorl
push
xchg
push
pop
xchg
shr
jne
sub
stos
popf
scas
pusha
xor
pop
loope
cwtl
cmp
shr
das
test
sub
or
mov
sub
jno
push
jle
pop
sub
sub
cwtl
into
adc
pushf
sbb
mov
sub
lds
xlat
hlt
cmp
ds
xchg
adc
jp
push
addb
lret
test
shrl
fdiv
pusha
push
out
push
lock
sbb
sub
inc
int
nop
clc
inc
or
mov
into
in
adc
movsl
inc
movsb
out
int3
add
fcomps
fisttpl
fwait
jnp
mov
sbb
test
ss
mov
inc
cld
mov
lahf
and
jmp
mov
inc
mov
imul
mov
push
out
add
mov
aaa
xchg
dec
jp
inc
dec
into
adc
stos
mov
adcl
inc
cmpsl
xlat
in
cmp
xor
push
or
stos
jb
and
jo
xchg
fsubs
cmp
rcr
or
repz
jbe
push
jbe
mov
std
cmpsl
adc
aam
sub
pop
adcb
jp
stc
loopne
push
je
adc
inc
lock
faddp
lret
aas
jge
inc
mov
inc
jb
jmp
call
fcomps
leave
mov
lds
add
lret
imul
add
or
dec
mov
adc
inc
push
jbe
in
push
xor
push
add
cmp
lahf
shr
mov
into
pop
mov
mov
nop
sub
std
or
fmulp
fisubrl
fnstenv
sbb
or
aaa
jae
idivl
shrb
xchg
bound
and
pop
sbb
lret
sbb
xchg
ja
xchg
mov
mov
inc
addr16
sbb
data16
xchg
cwtl
les
cld
mov
mov
aad
shlb
add
inc
mov
pop
xor
add
push
cmp
addr16
cltd
stc
out
jns
jmp
sub
inc
imull
dec
inc
adc
std
push
sarb
mov
pusha
ljmp
mov
mov
and
outsb
dec
pop
dec
push
sarl
jae
lds
sub
nop
add
gs
and
jecxz
and
in
shrl
aam
es
inc
std
sub
mov
jmp
lret
dec
je
sub
iret
and
stos
jg
ret
mov
adc
xchg
and
mov
int
clc
jle
push
adc
push
mov
ret
pop
scas
imul
jb
jae
fstcw
cmp
rorl
xchg
pop
dec
test
sbb
add
lahf
jecxz
mov
cli
cmp
mov
addl
popa
fcoms
xchg
jne
xor
dec
xor
inc
out
sbb
sbb
push
lods
lret
push
incb
adc
xchg
ficoml
lret
clc
ror
mov
mov
dec
lahf
adc
les
cmp
stc
jecxz
pusha
mov
push
pop
mov
mov
adc
or
push
iret
push
dec
sbbb
lods
int3
cwtl
rcr
jb
inc
push
or
imul
xchg
fwait
pop
xor
imul
mov
aad
mov
int3
out
repnz
repz
cmc
movb
subb
leave
lods
jo
dec
and
sub
push
call
mov
add
push
xchg
lods
incl
aad
mov
ljmp
das
stc
fidivs
sbbl
xchg
test
movsl
pop
mov
mov
push
add
rorl
mov
jns
cltd
ljmp
imul
xorb
repnz
sub
add
xchg
out
enter
test
pushf
dec
stos
fcomp
daa
fisttpl
lds
xor
test
jp
bound
xor
dec
cmpb
push
mov
xor
mov
cwtl
add
icebp
aaa
inc
cld
jns
mov
test
mov
dec
lods
ja
cmpsl
hlt
data16
xor
jp
add
xor
out
mov
cmc
mov
cmp
call
imul
inc
outsl
jns
arpl
ret
xchg
fcompl
fisttps
sub
and
sbb
xor
out
into
fidivrs
or
push
cwtl
out
mov
test
push
js
bound
aas
dec
pop
lea
push
lret
popf
lret
outsl
movsb
loopne
ss
mov
pop
pop
and
cld
imul
cmp
xor
out
xchg
cmp
adc
push
call
xchg
push
cld
pop
jmp
lcall
icebp
fwait
mov
hlt
insb
mov
mov
js
and
dec
mov
jmp
mov
and
std
jp
das
testl
sahf
shrb
dec
stc
adc
adc
cmp
es
sub
arpl
mov
and
mov
std
cmpsb
scas
jne
imul
stc
dec
adc
and
popa
adc
sbb
xchg
stc
xor
push
je
fildl
inc
iret
jno
js
mull
push
mov
inc
add
cltd
cmp
aad
lcall
lock
addb
jne
inc
inc
mov
repz
and
aas
jb
aas
or
nop
pop
into
insl
sbb
pop
mov
adc
inc
shl
addr16
pop
adc
out
mov
dec
dec
loopne
adc
sub
dec
dec
sub
ret
jmp
lret
andb
sub
add
or
sbb
ja
mov
or
int
das
cld
jo
or
jno
push
dec
mov
lods
nop
sar
xchg
cmp
sbb
imull
jo
fcmovnb
int
dec
cli
and
cli
cmp
call
push
mov
loope
nop
ret
push
mov
outsb
pop
xlat
push
insb
add
call
push
std
xchg
mov
dec
lock
popf
repnz
popa
aad
jg
mov
lret
push
loopne
pop
and
pshufw
in
xchg
xchg
jmp
ret
mov
xor
xchg
shll
arpl
sahf
inc
shlb
mov
inc
fsubl
sub
mov
mov
fstps
jae
sbb
rcrl
es
lahf
add
dec
cs
sub
sbb
cld
incl
mov
mov
int
scas
pop
lcall
mov
and
in
out
jp
cli
jp
lcall
and
repnz
arpl
insb
repnz
stos
lock
sbbl
in
and
cltd
sub
test
adc
pop
cmp
mov
ret
jbe
dec
nop
jmp
test
add
lcall
fistpl
xchg
cmpsb
xchg
std
out
mov
hlt
imul
push
insl
adc
shlb
in
scas
xchg
sub
out
jb
lock
xchg
xor
mov
pushf
js
enter
in
inc
add
clc
and
push
shrl
inc
jae
mov
xor
xorb
push
sbb
pop
push
in
add
ljmp
inc
testb
inc
jnp
sbb
sub
jne
jp
mov
xor
jb
arpl
and
push
inc
or
ds
jmp
push
iret
pop
xor
leave
scas
adc
aas
xchg
pop
aaa
mov
adc
loopne
or
out
fmull
dec
jo
push
pop
es
icebp
mov
xchg
out
inc
ret
pusha
repz
movsb
mov
sub
push
dec
adc
dec
mov
je
iret
pop
fcmovnu
xchg
jns
gs
gs
xorl
enter
xchg
and
mov
insl
lahf
in
mov
jne
rorl
inc
sbb
jmp
pop
pop
mov
jno
scas
jl
xchg
cmc
rcrb
cmc
cmp
cmp
sbb
jp
jne
push
rorl
cs
cli
dec
rep
jecxz
fcompl
ret
arpl
xchg
pop
jl
sub
push
sahf
add
jae
test
jl
dec
icebp
and
and
hlt
jle
ret
dec
sub
jo
lds
sbb
dec
adc
dec
fcmovnb
out
mov
int
les
push
push
push
aam
xchg
out
push
xor
mov
sub
mov
mov
push
sti
rorb
jbe
ficoms
sub
adc
mov
out
into
xchg
mov
cmp
mov
hlt
xchg
add
shll
cmp
jg
movnti
pop
shrl
jbe,pn
cmp
fisubrl
add
hlt
cld
ljmp
dec
lock
movsb
lret
add
aaa
or
lods
dec
inc
divl
lret
pop
push
shll
mov
add
andb
scas
lds
jae
xchg
pushf
xchg
hlt
sub
add
mov
rorl
stc
cmp
fstl
sahf
xchg
xlat
dec
in
ljmp
adc
xor
mov
fnstsw
mov
and
jb
or
jl
imul
and
cmc
pop
loop
xchg
mov
sub
adcb
or
inc
fistl
jp
movb
and
movsb
dec
std
je
ds
lods
movsl
data16
in
sbb
cltd
sbb
cmpsb
fistl
mov
test
lret
lahf
push
imul
popa
dec
jnp
push
aam
xchg
shlb
jmp
outsb
sahf
shlb
and
and
aad
test
punpckhbw
sti
bnd
jge
ja
cli
add
ficomps
mull
sbb
test
cs
adc
ret
jmp
inc
test
sbb
cmp
inc
pop
movsl
pop
ljmp
xchg
cmp
out
icebp
add
into
mov
fldenv
cmc
and
or
or
outsl
and
outsl
dec
add
lds
adcb
fisubrl
jne
push
fiaddl
rcll
movsb
fdivp
mov
out
mov
cmp
mov
call
es
sbb
cmp
mov
and
addb
cld
push
xchg
fst
dec
sbb
ljmp
mov
lcall
leave
and
pushf
lods
or
adc
popf
je
inc
adc
ret
hlt
and
adc
push
jmp
sub
cwtl
mov
dec
add
cmc
idivl
and
fmulp
in
add
rorl
call
out
icebp
aaa
imul
lcall
xchg
mov
cmpsb
push
add
pop
cmp
cmpsb
jle
sub
out
popa
cmpsb
in
sub
fs
lods
mov
push
mov
jne
adc
add
cmp
pop
mov
test
cs
lock
test
out
cwtl
inc
jmp
ret
and
mov
rcrl
mov
xchg
loopne
mov
incb
or
jo
sub
int3
mov
insb
push
pop
sub
xchg
cmp
sbb
pop
adc
xchg
xor
sub
push
fsubp
out
jle
clc
jbe
sub
pushf
push
sarl
inc
cs
outsb
call
arpl
dec
lds
inc
loop
jmp
call
out
xor
fs
cld
and
nop
push
jb
or
mov
enter
push
xorb
in
adc
push
jno
pop
adc
dec
and
or
push
ret
dec
xor
ljmp
sub
mov
xlat
add
pop
rclb
dec
movsl
loop
pop
add
pop
hlt
or
lea
mov
push
cmp
insb
outsb
xchg
fists
jmp
sbb
clc
mov
sub
dec
mov
inc
ret
pop
inc
shll
adc
pop
scas
sahf
repnz
mov
mov
jl
sub
xchg
inc
loope
popf
inc
testb
pop
xchg
push
or
or
fucomi
mov
and
scas
push
lds
or
test
test
stos
xchg
push
les
lods
or
lods
insb
add
xchg
add
fildl
add
add
add
add
imul
add
add
mov
add
add
add
add
add
add
dec
add
add
or
test
add
add
add
add
movl
add
add
add
add
ja
mov
incl
inc
inc
add
add
pop
and
and
outsl
and
les
in
xor
add
add
add
pop
add
add
pop
add
add
add
add
or
add
fs
iret
xchg
add
add
add
sbb
sbb
nopl
or
xor
add
and
jb
push
dec
leave
jb
fs
add
push
outsb
or
cld
stc
xor
dec
inc
in
jmp
fdivr
or
decl
les
ret
add
adc
leave
dec
add
cld
decl
pop
in
mov
ss
in
add
adc
sbb
add
adc
sbb
push
inc
cld
stos
aam
rolb
adc
loopne
mov
adc
xor
rolb
xor
push
add
jmp
std
pop
std
je
push
xor
cs
adc
or
call
loopne
lock
push
adc
loopne
add
dec
jne
sarb
jo
push
sub
push
call
add
push
add
repz
and
je
add
add
add
add
xchg
sbb
sbb
add
cmp
cmp
out
add
sbb
jae
outsl
xor
insb
movsl
insl
insl
add
inc
je
add
movsl
outsb
lods
clc
inc
outsl
gs
imul
jae
insb
je
push
insb
imul
inc
push
jne
gs
jae
les
jae
jae
loopne
insb
add
add
add
and
add
add
add
les
add
ret
cmp
addr16
mov
dec
jae
push
outsl
cmp
out
dec
sub
mov
lods
fsub
gs
dec
xchg
repz
cltd
sbb
and
sbb
addr16
shrl
inc
clc
into
inc
jbe
test
push
imul
fadds
push
fcompl
xor
shlb
jmp
sbb
mov
sub
pop
cmp
mov
cs
test
sbb
aaa
and
std
outsb
nop
push
scas
enter
adc
filds
and
lret
mov
jne
call
mov
int3
sub
push
orl
test
mov
mov
pop
fiaddl
jle
addr16
outsl
je
mov
fcompl
movsb
mov
mov
rol
fcomps
add
jle
gs
sub
fwait
jecxz
sbb
mov
or
mov
jno
mov
shlb
lcall
push
fiadds
nop
inc
imull
in
sahf
push
icebp
loope
xor
arpl
ret
and
jmp
xchg
mov
je
mov
jge
sbb
cmp
in
idivb
jno
popf
adc
pop
cwtl
gs
jnp
into
loopne
xchg
mov
add
and
iret
pushf
pop
xchg
inc
adc
aas
mov
sbb
mov
jmp
ffree
fidivs
mov
pop
lret
inc
ljmp
test
stos
mov
lea
lods
rcr
cwtl
enter
cmpsl
sub
xor
mov
test
push
fldcw
xchg
cmc
outsl
push
jmp
jge
sbb
sub
add
repz
inc
or
cmp
roll
mov
xchg
rclb
adc
out
xor
push
ret
add
call
out
sub
dec
les
icebp
sbb
scas
xorb
mov
jno
or
das
pop
adc
inc
int
cmpsl
pop
mov
and
xchg
adc
stos
xchg
cmc
push
enter
push
aam
lret
fwait
jp
jns
jg
jg
sbb
rcll
dec
fcompl
sub
dec
xchg
or
jne
xchg
gs
shll
call
icebp
in
daa
jo
dec
add
add
sub
imul
mov
mov
jns
test
push
ss
push
jo
out
ss
fstpl
sub
bound
in
inc
nop
push
inc
lret
imul
jp
cli
push
lret
rcr
stos
cwtl
fsts
dec
adc
jmp
mov
mov
pop
sarl
add
rolb
cs
call
mov
stos
loope
and
push
fs
inc
les
inc
push
inc
rclb
and
stos
sti
popf
in
xchg
jbe
lods
lahf
push
int
jp
enter
enter
adc
dec
insb
xor
sahf
add
flds
mov
mov
pop
adc
aam
sub
sbbb
sub
sti
mov
mov
fildll
or
fwait
imul
in
dec
sarl
rcl
aam
cmp
call
add
stos
or
shll
imul
add
fisubrs
mov
xor
fbld
pop
mov
ja
push
sarb
cmc
das
clc
push
popa
fcom
add
pop
lods
leave
jnp
pop
insb
mov
stc
adc
shlb
jge
push
and
sahf
jbe
dec
mov
mov
stos
repz
popf
jmp
ja
dec
mov
or
sbb
mov
icebp
xor
push
and
or
mov
in
xchg
inc
cmp
sbb
adc
sub
ljmp
add
cld
inc
or
cmp
sbb
xor
ljmp
int
addb
lods
xor
fmul
stos
inc
inc
inc
pop
and
out
andl
cmp
lret
jg
fisubrs
dec
hlt
jno
lock
test
adc
jb
bound
push
dec
out
rorb
jne
inc
mov
jl
mov
rorb
shll
sub
push
out
mov
xor
lcall
cwtl
push
push
jmp
lea
add
call
icebp
pop
cmp
stos
imul
mov
adc
mov
xchg
push
ja
mov
std
cmp
adc
sub
testl
inc
in
sahf
stc
add
mov
dec
jmp
imul
xor
pop
mov
xor
or
dec
sbb
add
inc
ret
mov
xor
lods
mov
add
loop
loopne
mov
adc
xor
sbbb
push
adc
pop
std
sbb
pop
cs
mov
movsb
addb
loop
xchg
xchg
orl
jge
testl
push
sub
cmpsl
add
inc
std
xchg
sbb
negl
lea
xchg
inc
xor
inc
cmp
ret
in
scas
in
add
scas
jecxz
in
xchg
jo
shrd
mov
fadds
mov
xor
pop
add
add
or
push
pop
in
cmp
test
xchg
inc
sub
xlat
add
sahf
loope
les
int3
jge
das
push
jg
stc
dec
push
xchg
lods
xor
cltd
sbb
mov
cltd
call
shl
add
mov
ret
arpl
in
leave
push
jns
push
dec
ds
fisttps
bound
adc
dec
scas
leave
faddl
xor
pop
mov
or
lret
jno
xchg
and
pop
mov
mov
cmp
pusha
or
das
pusha
push
fiadds
mov
xchg
push
ss
sub
dec
mov
push
movsl
add
pop
push
pusha
out
lds
fdivl
cmp
aaa
xor
out
mov
mov
mov
popa
int
sbb
jne
add
xlat
push
cmp
mov
fnstenv
push
js
sub
test
and
jnp
push
jb
stos
dec
sbb
subb
cli
push
in
movsl
cwtl
inc
je
push
iret
lds
cld
and
xchg
jecxz
dec
pop
scas
mov
subl
ss
add
call
lods
outsb
out
imul
inc
int
lods
cmc
xor
addl
fdivrp
lret
pop
mov
out
in
sbb
mov
mov
int3
add
mov
jmp
nop
out
mov
stos
mov
adc
and
call
pop
inc
xor
pop
lds
mov
mov
jbe
sub
mov
int
cld
push
scas
movsl
or
test
std
pop
stc
jg
cmpsb
es
mov
mov
aaa
jecxz
dec
clc
roll
cmp
lods
dec
lcall
rclb
fwait
test
popf
mov
insl
fisubrl
push
mov
adc
in
nop
sbb
and
mov
into
or
test
jg
imul
jno
in
push
or
adcb
shr
mov
and
and
cmpl
jne
je
data16
fdivl
mov
dec
add
out
xor
cmpsl
cwtl
test
sahf
shl
mov
mov
inc
enter
push
mov
or
retw
lea
cs
xchg
lahf
and
jle
stc
mov
ds
fisubs
cwtl
out
sub
xchg
nop
bound
adc
push
stos
loop
aad
hlt
int3
xor
aas
xchg
fidivrl
inc
push
adc
sbb
mov
shlb
lds
push
arpl
dec
cmpsl
or
lods
ja
mov
enter
or
cmpsb
shl
fdivl
es
mov
in
pop
mov
cld
rclb
stos
mov
ss
fidivrl
mov
movsb
push
pop
xor
inc
jo
lea
sar
xor
arpl
jb
ds
mov
lds
mov
sub
xlat
addr16
push
movsb
mov
in
enter
or
loopne
cwtl
mov
and
dec
pusha
jbe
in
inc
xchg
inc
xor
mov
je
jl
popa
sbb
ljmp
test
or
popf
call
mov
stos
leave
rorb
push
mov
loop
lahf
mov
addb
cmp
push
dec
jp
insl
xor
xor
out
and
xchg
cmp
outsb
and
mov
rcr
in
or
pop
aad
inc
mov
jge
ror
imul
adc
pop
push
cmpb
sbb
ret
insl
pop
sarl
cmpsl
lea
jbe
lret
mov
sti
inc
xor
jl
dec
in
push
aam
insl
cltd
add
mov
pop
mov
sub
test
dec
movsb
mov
out
add
jl
ja
mov
popf
jae
add
out
mov
movl
imul
xchg
push
sbb
sub
rorb
sbb
add
jmp
mov
clc
inc
out
inc
sti
mov
or
jb
arpl
pop
push
xor
and
push
mov
daa
mov
fimuls
mov
cmp
out
add
popa
leave
pop
xor
pop
jnp
test
repz
andl
mov
mov
insb
jmp
pop
sbb
aaa
cmp
ss
jne
or
xor
xlat
addr16
add
xor
pop
or
push
inc
or
or
idivl
dec
test
or
mov
sar
lds
lcall
repz
clc
insb
push
sbb
inc
ljmp
pmaxsw
mov
xor
mov
dec
mov
clc
daa
cltd
jb,pn
add
jbe
jno
inc
dec
sub
shl
pop
lock
scas
push
dec
xchg
popf
fstp
sahf
arpl
shll
stos
popf
cmp
aam
lods
or
and
push
das
inc
in
pop
xor
adc
jecxz
mov
xor
es
sub
mov
pop
dec
test
xor
mov
mov
lods
lock
add
mov
mov
push
clc
stos
shl
mov
sub
inc
mov
xor
ret
out
and
inc
inc
pop
or
popf
inc
mov
roll
js
test
add
loopne
movsl
cmp
push
add
push
xor
adc
out
dec
ss
mov
outsb
xor
repz
ret
aam
out
addb
mov
push
sub
pop
push
lahf
xlat
lds
pop
sti
push
sbb
cli
out
cwtl
inc
add
frstor
fdivrp
out
lret
dec
cmp
lret
gs
add
inc
insl
loopne
aaa
aaa
int
pushf
sbb
adc
ss
cmpsl
fistl
fs
inc
mov
fsubrs
or
int
loopne
jmp
out
in
movsb
mov
fdivl
pop
ja
clc
pushf
test
pop
jne
jmp
imul
mov
test
loopne
mov
jo
mov
mov
pop
stos
lret
or
fwait
icebp
aas
icebp
cmp
and
or
lcall
add
ja
ret
fmull
divl
pop
adc
movsb
fsubrs
pusha
cltd
mov
iret
pop
out
dec
leave
jp
and
dec
insl
enter
inc
or
push
test
pop
test
pop
add
js
aas
mov
or
dec
int3
nop
add
pop
inc
adc
jl
mov
mov
stos
arpl
andl
outsb
pop
push
loope
call
adc
je
inc
mov
and
int
cmp
add
inc
lods
xchg
fs
jecxz
inc
xor
stc
jle
jl
pop
push
mov
mov
inc
in
leave
adc
mov
push
data16
jp
in
dec
and
ljmp
xchg
lcall
leave
mov
xor
and
pop
test
es
jp
push
out
sbb
mov
xchg
mov
repnz
pop
and
lods
jmp
mov
push
pusha
hlt
sarl
add
inc
mov
mov
daa
fidivrs
adc
movsb
pop
into
xchg
jp
cli
add
fstl
stos
vsubpd
lds
popa
fistpl
imul
mov
dec
jp
pop
jecxz
dec
jno
push
and
outsb
pusha
sbb
cmp
cmp
jbe
jmp
and
andb
and
xor
cmp
fidivrl
out
mov
sub
imul
out
cld
jne
lea
lea
aas
arpl
cld
movsl
dec
and
cltd
out
repnz
add
loop
std
adc
in
or
push
mov
adc
imul
pop
mov
rcrb
je
push
lahf
fmull
and
xchg
add
jae
clc
test
lock
pop
push
shrb
and
jb
movsb
jne
jno
lea
je
sbb
mov
into
and
movsl
stos
push
adc
sub
mov
es
or
xchg
mov
in
fwait
mov
cli
lods
ds
insl
inc
aaa
jae
pop
pop
fisubrs
mov
xchg
stc
sbb
xchg
jg
xchg
mov
roll
js
addr16
shlb
lods
mov
pop
pop
fsubrl
js
fsubs
repnz
insb
mov
fistpl
test
push
aad
stos
mov
icebp
out
aad
sbb
or
mov
or
adc
fildll
test
dec
int
sub
jecxz
addl
adc
inc
xchg
clc
add
push
and
inc
cmp
xchg
mov
push
sbb
sbb
cmp
push
sti
test
cltd
add
repz
sti
imul
out
cmp
or
mov
adcl
cli
push
push
mov
stos
mov
pop
mov
jno
cwtl
inc
movsb
xor
sub
lods
and
mov
orl
or
xchg
or
subb
sbb
inc
jmp
push
mov
xchg
mov
pop
pop
scas
imul
xor
stos
cmpsb
jmp
pop
enter
scas
push
pop
imul
fs
loope
jmp
add
push
jne
je
mov
cld
sub
or
xchg
jl
shr
mov
inc
push
xchg
cli
outsb
sub
mov
dec
and
cwtl
pop
or
mov
je
pop
cmp
roll
addb
inc
dec
push
mov
fdivs
inc
add
orl
sbb
subl
lods
jns
stos
fwait
lcall
enter
push
int3
mov
test
movsl
lret
jle
mov
aaa
aaa
daa
jl
outsb
fbld
rorl
cmp
outsl
push
jp
test
sti
push
sbb
and
mov
cmp
ds
movsb
mov
cmp
adc
stos
mov
adc
adc
adc
mov
sub
dec
call
adc
daa
inc
in
loop
aam
xchg
insb
push
pop
lea
ljmp
divb
les
ret
movsl
outsl
jnp
push
mov
ja
and
cmc
in
inc
cmp
add
push
sbb
push
sbb
fldl
xchg
rcrl
or
lahf
jecxz
sarl
lods
stos
dec
jae
addl
dec
in
xchg
jno
and
fnstcw
sub
jae
int3
cmpsl
mov
insb
add
jb
test
sbb
xchg
mov
push
js
fldcw
stc
xor
call
dec
jno
or
cwtl
or
in
jge
mov
pop
inc
insb
adc
jo
push
sti
mov
js
mov
test
jp
push
jmp
xchg
push
lock
jmp
mov
xor
or
push
fdiv
sub
pop
stc
pop
fst
mov
into
lods
mov
add
push
add
cmp
cs
test
aad
push
test
popf
and
sbb
lods
xchg
pop
mov
xor
adcl
mov
and
inc
inc
movsb
fstl
sti
das
shrb
dec
adc
jge
ja
imul
popa
jbe
test
mov
lcall
hlt
cmpsb
call
and
cmp
es
inc
xor
rorb
cmp
dec
mov
in
sub
lahf
pop
push
push
xchg
fisubrl
mov
sub
sahf
scas
jno
jb
cmc
popf
iret
dec
out
sbb
mov
int3
out
jno
push
xchg
xchg
shlb
mov
pop
cmp
lods
mov
je
subb
iret
pop
adc
out
stos
lock
fbstp
xor
jecxz
stos
xchg
add
loop
jl
cmp
adc
dec
jecxz
sti
sub
xchg
daa
pusha
mov
mov
les
lods
jo
out
jns
or
and
pop
cs
orl
leave
cmc
mov
adc
js
jnp
dec
pmaxub
test
cwtl
lret
add
call
xor
das
pop
idivb
mov
cs
xlat
fsubs
or
sub
cmc
adc
xor
mov
outsb
mov
jnp
mul
jp
aam
push
dec
jne
repz
cmp
je
mov
shlb
adc
popf
sub
sbb
mov
dec
lcall
mov
iret
imul
inc
and
aaa
mov
movsl
out
cmp
push
test
shr
jb
fdivrs
push
dec
hlt
sbb
aas
int
xor
cmp
insl
dec
inc
pusha
pusha
in
divb
pushf
and
jno
mov
fcoms
es
mov
pop
dec
adcb
test
in
jmp
push
les
shlb
sbb
testb
fldcw
imulw
out
sub
mov
xchg
and
jnp
mov
adcl
xor
xchg
imul
mov
mov
mov
dec
test
lcall
cmp
push
sahf
push
inc
cmp
je
jl
jne
adc
sbb
scas
test
lods
cmp
mov
cwtl
fucom
aam
fdivrl
xchg
xchg
sbb
inc
add
sub
repnz
mov
push
mov
ja
mov
pop
push
dec
les
push
cmp
xor
push
les
ret
idiv
cmp
enter
nop
bound
scas
scas
cmp
adc
add
sbb
in
movsl
dec
inc
mov
jnp
mov
inc
mov
fsubl
mov
mov
cmp
fs
mov
xorb
mov
jae
lcall
decl
dec
testl
imul
ret
clc
arpl
fdivl
outsb
pushf
or
dec
in
cmp
imul
cltd
mov
shl
nop
cmp
xlat
jp
or
call
in
lds
imul
mov
insl
mov
das
adc
and
pop
push
cmp
mov
pop
icebp
dec
fldl
adc
and
int3
int
or
dec
rorl
out
ljmp
aaa
mov
stc
rcll
pop
sub
jecxz
xchg
arpl
mov
int3
adc
cmp
mov
sub
dec
and
testb
mov
dec
add
mov
gs
jge
or
inc
out
stos
and
jl
lahf
push
cmc
dec
sbb
popf
sbb
lea
cs
adc
adc
jp
cmpsb
call
cmp
cmp
xchg
dec
push
or
cs
aaa
hlt
jl
rcll
pop
pusha
push
pop
imul
arpl
push
add
movsb
addr16
in
cli
popa
ja
dec
stc
push
pop
popf
mov
xor
sbb
cmp
dec
pop
stos
sbb
ja
in
outsl
dec
sbb
insb
jp
add
and
jmp
loopne
dec
sarb
sbb
das
nop
push
sbb
popl
mov
addl
inc
fwait
push
in
iret
adc
sbb
add
mov
rclb
dec
and
sbb
xor
sbb
int
inc
mov
ja
mov
mov
sub
imulb
pop
adc
cmp
cwtl
lcall
cld
pusha
cmc
push
ds
ljmp
xchg
dec
repnz
pop
inc
aad
inc
jb
outsl
pop
rorb
psraw
xchg
in
or
xchg
inc
inc
inc
jle
and
mov
outsb
and
inc
fdivrp
sbb
sub
in
mov
xchg
pop
movsb
xchg
and
push
jno
jno
lret
jb
notl
sub
lea
adcl
arpl
insb
in
fdivrs
mov
push
inc
in
xor
sahf
push
dec
or
fadds
pop
ret
imulb
int
push
xchg
adc
rol
push
mov
bound
jb
out
xchg
in
loop
ficomps
pop
mov
pop
mov
loope
test
mov
sbb
fs
add
adc
std
jo
into
call
lret
and
mov
add
add
add
add
paddq
add
add
out
hlt
add
push
add
add
add
imul
add
add
add
add
xchg
add
add
or
in
in
in
in
inc
add
add
addb
stos
stos
add
ja
js
xlat
dec
js
js
add
int3
inc
add
add
add
outsb
add
mov
roll
add
add
add
add
and
add
add
add
add
add
add
jns
mov
add
add
add
and
outsb
push
pop
std
ja
dec
add
push
jb
inc
mov
sti
test
enter
mov
inc
les
push
lea
adc
notb
cs
incl
pop
add
mov
enter
pop
dec
adc
jge
out
ret
add
push
incl
push
add
mov
lea
adc
add
push
decl
adc
xorl
inc
je
push
cmp
add
adc
adc
cld
adc
lea
adc
push
cmp
inc
mov
rorl
pop
cltd
add
jne
cmp
add
add
pop
add
int3
inc
jl
inc
inc
add
gs
lods
dec
inc
dec
je
gs
je
jo
sbb
insb
jo
push
push
add
push
dec
arpl
insb
leave
add
cs
addr16
push
gs
xchg
jb
xchg
push
imul
js
xor
add
add
lods
jecxz
add
add
jae
add
add
movsl
sub
cmc
lods
cmpl
ja
aad
out
repnz
pop
decl
xchg
loopne
add
movhps
cltd
mov
jb
sub
cli
xor
enter
insb
sbb
mov
lods
dec
gs
das
out
jmp
wbinvd
les
push
lcall
lret
mov
sub
cmc
int3
ljmp
or
fnsave
mov
mov
popf
icebp
mov
push
inc
sub
test
dec
and
mov
sbb
mov
lahf
into
lds
imul
adc
xor
lock
loopne
dec
pop
xor
shlb
inc
in
or
pop
add
xchg
push
pop
in
sbb
imul
jno
stc
add
inc
call
push
push
or
dec
or
inc
sbb
test
mov
sysret
inc
add
mov
iret
leave
lret
sbb
pop
and
addl
ficomps
mov
cmpsb
ret
push
mov
xchg
mov
push
test
lock
dec
jbe
mov
jae
mov
ja
add
ret
jge
mov
insb
mov
shrl
xlat
cwtl
lds
and
dec
jl
or
sahf
test
outsb
out
sbb
jne
jecxz
inc
pop
pushf
mov
inc
cli
xchg
inc
test
lahf
push
cmc
dec
push
cmpb
stc
in
lret
dec
or
sub
inc
fwait
mov
xchg
pop
lret
pop
aad
out
shlb
mov
lods
pop
imulb
mov
and
add
sub
or
mov
add
push
inc
mov
es
mov
sub
mov
or
stos
or
dec
xor
cmp
insb
mov
mov
in
push
popa
mov
cmpb
ret
in
add
cmp
mov
sbb
cs
daa
int3
int3
mov
in
mov
pusha
xchg
push
test
int
out
jecxz
mov
cmp
scas
pop
sbb
loopne
subb
out
in
sub
mov
je
stc
sahf
jle
jo
rcrb
adc
or
or
or
mov
or
dec
scas
pop
loopne
andb
mov
loop
xchg
or
mov
jnp
enter
cmpsl
jbe
jl
les
cmc
cmp
push
ljmp
adc
or
cmc
sub
mov
sub
leave
aam
xor
dec
and
push
loop
and
xchg
pop
sarb
fiadds
fsubl
mov
aas
mov
in
xor
dec
inc
pop
jecxz
out
and
cmpsb
inc
lcall
cltd
xchg
mov
lcall
pop
aam
lret
add
pop
in
ret
iret
and
vpunpckhdq
outsl
mov
stos
dec
mov
cwtl
pushf
pop
pushf
xchg
mov
pop
repnz
inc
inc
roll
xchg
jne
xlat
jge
pop
out
in
mov
inc
adc
pusha
test
dec
roll
inc
aaa
jne
repnz
dec
fsubs
jae
ret
add
call
pop
popa
into
sbb
enter
mov
adc
loop
ret
std
xchg
loopne
jg
lds
stc
test
mov
xor
fdivl
cmp
shrl
sti
or
jle
xchg
test
inc
mov
in
or
jecxz
jge
mov
or
ret
daa
pushf
pop
xor
mov
jbe
in
mov
sbb
daa
and
in
into
sub
sub
cmp
out
add
sub
mov
sbb
xlat
popf
push
dec
mov
enter
cmp
push
stos
jecxz
sub
mov
mov
xchg
mov
test
cmp
xor
fwait
adc
pop
add
test
lret
xchg
xchg
push
add
std
int3
cmc
mov
inc
mov
daa
addr16
ficomps
sbb
sub
dec
cmp
fwait
pusha
add
sbb
add
ja
test
popa
or
int
out
push
cld
pop
mov
push
add
mov
bound
pop
outsb
adc
inc
arpl
daa
imull
jbe
ret
fimull
xchg
push
mov
jns
cmp
fldl
cmp
subb
xor
aam
inc
into
sar
sbb
lock
in
jnp
xor
js
ljmp
pop
or
and
lods
xchg
ficoms
push
xor
push
pop
jns
adc
pop
sub
insl
mov
iret
lahf
mov
aad
rolb
sub
shlb
insl
pop
pop
pop
loope
or
aad
xchg
scas
lret
hlt
ss
mov
outsl
sbb
and
imul
or
cmp
fildll
cld
cmp
je
and
push
cmp
sahf
ds
in
bound
iret
mov
adc
and
idivl
nop
mov
pusha
movl
sub
addb
jo
cltd
inc
aaa
sub
inc
sahf
popf
fsubr
rorb
std
sub
mov
jns
sub
sbb
decb
mov
mov
bound
xchg
popf
aad
jg
aas
xor
stos
sarb
and
add
test
int
sbb
pop
cs
inc
insb
inc
cmpsl
sarb
lods
mov
dec
lret
xchg
ss
rcrl
sar
mov
sbb
cmp
test
dec
and
in
sub
mov
sbb
imul
dec
sbb
lea
jno
addl
cmpsl
into
push
sbb
xor
outsl
int3
mov
lods
inc
xchg
arpl
out
cltd
cmc
aas
flds
push
sub
popa
lods
xchg
inc
movsb
or
out
insl
filds
cmp
in
arpl
leave
js
jmp
mov
push
pop
jecxz
lret
cmp
sub
push
out
lcall
xor
jge
and
cltd
push
in
popa
lods
inc
dec
xchg
pop
pop
icebp
xchg
jle
and
mov
and
leave
fldenv
outsb
inc
inc
inc
adc
sub
sub
lea
jg
xorl
aaa
sbb
pop
in
mov
inc
add
mov
cmp
out
scas
or
ljmp
sti
xor
push
sbb
push
gs
dec
cmpl
jns
dec
stos
shlb
scas
adc
push
rcr
mov
ret
xchg
dec
xor
sbb
ret
jl
bound
inc
inc
mov
rol
in
int
dec
xor
sbb
das
out
rorb
gs
dec
dec
aam
sbb
push
sbb
cwtl
shlb
cmp
mov
dec
mov
mov
sahf
cmp
cmc
xor
loop
testb
xchg
jp
and
mov
mov
bound
shll
roll
lret
sbb
add
sbb
cmp
mov
push
xlat
push
mov
shlb
shll
incb
mov
rolb
sbbl
sub
scas
add
cld
sti
rcr
push
pop
xchg
outsl
mov
mov
fmull
mov
jge
repz
hlt
dec
mov
fstps
roll
jmp
orl
jp
mov
push
ss
cli
xsha256
cmpsb
xchg
repnz
mov
push
inc
pop
jae
ret
jmp
jmp
sbb
jge
jb
dec
fisubl
jp
loopne
dec
fs
movsl
in
gs
push
adc
cmpsb
inc
cltd
jb
dec
cs
cmp
fisttpll
out
fildll
jo
mov
push
sarb
xor
int3
test
hlt
mov
jns
out
or
js
pop
xchg
push
cmp
xchg
dec
sbb
cmpsb
push
lods
xorl
and
push
mov
xchg
push
addb
lahf
jno
mov
push
jne
jge
popa
push
jge
sbb
push
lods
and
cli
clc
mov
loop
sahf
pop
mov
push
push
inc
sbbb
mov
xchg
shrb
sbb
mov
push
lcall
push
fsubrs
popf
test
push
push
push
mov
sbb
out
call
push
fidivrl
movsl
rorl
mov
sahf
jle
shlb
xor
ret
mov
aad
adc
cld
insb
scas
in
cli
nop
push
jle
pop
mov
popa
mov
xor
shr
jo
jae
sbb
pop
pusha
cmp
frstor
icebp
in
sarl
or
add
sbb
fwait
test
jl
lods
sbb
into
stc
add
mov
lods
mov
adc
xchg
inc
or
xor
mov
and
dec
mov
loop
inc
cmp
xchg
lret
cmc
lods
dec
sub
pop
pop
dec
mov
mov
sbb
mov
xor
imul
fistpl
in
adc
adc
lds
dec
fistpl
mov
xchg
stc
in
dec
shll
or
adc
das
lds
out
push
fistps
aas
stos
hlt
inc
jae
in
mov
adc
add
sub
mov
enter
sub
add
dec
fldln2
or
cwtl
movsl
ljmp
dec
mov
ret
push
jle
sbb
push
push
pushf
dec
test
hlt
icebp
movsl
fsin
add
jbe
cmp
scas
inc
mov
and
cmp
cs
cmpsb
xchg
or
add
sbb
test
mov
jge
in
daa
mov
adc
data16
test
pop
xor
je
fsubl
xor
outsl
fsubrs
jp
aaa
xchg
icebp
outsl
call
dec
outsl
pinsrw
mov
arpl
mov
and
lods
xchg
sub
std
ja
lcall
pop
gs
icebp
add
push
inc
lahf
mov
nop
cld
aas
sbb
xchg
ljmp
loope
mov
xor
inc
xor
or
xor
xchg
test
cmpsl
mov
sbb
jecxz
pop
jle
sbb
cmp
fsubr
mov
rcl
lods
or
test
aas
data16
dec
notb
adc
incb
fcomps
sub
push
outsb
jge
mov
xor
das
addr16
pushf
mov
enter
movsl
push
mov
movsb
cld
mov
iret
jmp
mov
xchg
pusha
repnz
data16
pop
scas
mov
loop
mov
out
mov
jae
inc
fwait
push
inc
cmp
jl
xchg
std
pop
mov
cld
out
lret
fstl
repz
or
pop
mov
int
shl
jno
popa
jb
test
test
iret
shrb
sbb
icebp
mov
inc
fldenv
lret
adcb
mov
push
or
add
mov
inc
add
jno
xchg
ljmp
loop
pop
gs
dec
and
push
or
or
out
inc
outsb
icebp
pushf
cmp
notl
stc
add
loope
push
in
sbb
or
fstpl
pop
js
xchg
jnp
cmp
andb
dec
cmp
sbb
xchg
dec
inc
xor
mov
pop
shll
rorb
pop
leave
and
xlat
or
or
mov
mov
push
ret
push
xchg
movsb
cmp
sbb
mov
les
outsl
out
mov
mov
sbb
cmpsl
cmp
mov
test
decl
out
push
mov
inc
int3
outsl
into
mov
mov
shr
dec
aam
jo
xor
test
xchg
lcall
scas
sahf
lret
inc
cli
aam
sub
movsb
lods
popa
aam
test
jmp
sbb
movsb
push
test
adc
pop
jns
das
fucomp
mov
addb
sbb
sbb
cmp
add
lock
stos
cmc
mov
jb
xchg
hlt
push
lods
pop
mov
jnp
and
fisttpll
mov
mov
stos
imul
dec
add
mov
lcall
mov
decl
and
shrb
mov
and
in
add
fcmovnb
jae
imul
popf
jmp
mov
outsb
iret
adc
push
scas
and
dec
mov
and
push
and
inc
sub
test
dec
cmp
cmp
aaa
je
or
push
fcmovbe
mov
in
or
xchg
insb
sbb
mov
mov
fcoml
adc
ret
add
xor
jbe
lock
pop
mov
mov
stc
shrl
inc
subl
xchg
fs
data16
adc
imul
outsl
xor
pop
xor
sbb
lret
mov
add
dec
sub
dec
je
imul
data16
cmp
push
outsb
popf
into
xchg
pusha
mov
mov
loope
jl
pop
inc
gs
mov
or
out
inc
sub
testb
jl
pusha
fmuls
xor
rcrl
dec
push
mov
out
sarb
push
push
loop
iret
repnz
lret
push
fwait
mulb
test
loopne
fwait
jecxz
or
cmc
pop
inc
lret
xchg
mov
es
cmpb
mov
add
rolb
iret
lds
and
mov
mov
imul
popw
int
inc
jns
shlb
fidivs
push
shll
mov
outsb
jl
mov
pop
out
mov
iret
repnz
fnsave
data16
cltd
xchg
pop
das
cmp
push
je
inc
dec
repz
fimuls
fcompl
jp
int
sub
cwtl
mov
ret
adc
mov
dec
movl
shr
stc
pop
filds
and
inc
lret
inc
lock
addr16
imul
inc
mov
lcall
pop
push
scas
adc
cwtl
sti
mov
in
mov
lahf
stc
mov
mov
repz
in
jp
fnstcw
cmp
push
jmp
fdivr
loop
shrl
sarl
cli
push
xor
bound
das
xor
or
jp
xchg
scas
push
mov
xor
pop
sub
adc
cltd
inc
cmp
xor
push
dec
add
push
or
sbb
pop
mov
sar
xchg
negl
sbb
xchg
xlat
iret
jmp
shrb
test
loopne
in
orb
xor
dec
xor
icebp
cmpsb
fs
fwait
lea
ds
jmp
sbb
imul
in
jbe
and
cld
cmp
push
xchg
adc
add
sub
inc
xor
or
mov
pop
dec
xchg
adc
xor
in
jmp
mov
shlb
repz
inc
push
push
and
add
aad
xchg
xchg
fldenv
das
scas
jno
bound
bound
fsubrl
mov
adc
ficomps
sub
sti
xor
dec
in
add
sub
mov
mov
cmp
js
aaa
pusha
repz
lea
es
jbe
mov
insb
loope
dec
xchg
jne
xchg
add
stos
dec
or
outsl
or
sti
push
nop
push
cmpsl
mov
adcl
mov
pop
leave
push
jb
inc
mov
gs
fcoml
sub
jmp
call
adc
push
movsb
aam
pop
pop
fisubs
sbb
lds
stc
dec
mov
insb
or
cli
inc
push
dec
das
push
shrl
add
cmp
dec
pop
push
mov
sub
xor
mov
and
xchg
popa
bound
insb
sbb
sbb
mov
aas
mov
in
decb
cmp
mov
sbb
je
enter
inc
push
bound
call
std
mov
mov
jns
enter
inc
dec
ret
dec
stos
cli
jp
gs
pop
cmp
imul
rcrb
pop
xchg
inc
push
push
ss
jae
push
adc
push
call
and
jle
out
mov
stc
and
mov
xor
push
in
pop
popf
inc
aad
lds
or
mov
into
push
daa
leave
inc
or
lock
and
jle
pop
mov
mov
iret
aam
int3
pop
pop
adc
lock
ja
scas
or
or
pop
aas
sub
clc
lahf
in
adc
mov
aam
insb
icebp
sbb
cmp
cmp
scas
jne
adc
jns
push
mov
jl
cld
xlat
jno
adc
scas
mov
add
mov
jne
js
cmc
cmp
adc
xor
stos
out
inc
push
adc
fstp
sbb
mov
std
and
lret
pop
cmp
lahf
mov
cmpsb
addr16
rorl
pop
inc
test
arpl
mov
pop
fidivrs
mov
and
cmp
push
mov
int3
xor
scas
popa
ret
inc
pop
sub
shrd
divl
mov
mov
push
decl
out
subl
or
jno
aaa
dec
hlt
leave
push
sub
sub
ja
leave
xchg
rcrb
dec
sbb
mov
scas
lea
mov
dec
mov
pop
jbe
push
jmp
mov
adc
call
aam
mov
loop
jb
test
mov
pusha
ret
cmp
inc
mov
mov
lret
out
fs
loop
lahf
enter
popf
outsb
xchg
inc
js
cmpsb
test
mov
and
imul
cmp
data16
subb
adc
sub
xor
lods
into
jecxz
mov
out
adc
jnp
and
cld
test
pop
test
shlb
push
mov
pop
dec
pop
mov
inc
sbb
adc
add
ljmp
mov
bound
mov
sbb
into
push
inc
xor
pop
pop
ds
in
jo
rolb
mov
imul
add
xor
ds
xchg
adc
push
inc
imul
cmp
adc
cmp
out
repz
aad
mov
lret
xchg
sub
repnz
pop
dec
es
in
and
mov
sbb
xlat
jecxz
imul
and
jg
mov
mov
xchg
aam
push
fs
add
jl
outsl
rclb
or
pop
bound
lods
aas
dec
stc
mov
je
jnp
sahf
jg
ljmp
mov
das
push
dec
push
addb
imul
mov
cmp
fwait
jbe
cmp
lods
inc
xchg
lea
dec
xchg
lret
cwtl
dec
push
leave
or
dec
imul
icebp
mov
call
push
enter
test
popa
cmp
mov
sbbb
jb
lret
fcmovnbe
sti
dec
ret
rorb
push
out
xchg
and
push
add
imul
xlat
lahf
push
out
cmp
mov
add
subb
rcrb
mov
cltd
movsl
and
sbb
daa
mov
stos
add
in
cmp
fcompl
sbb
or
add
jnp
mov
sub
ret
lret
faddl
lods
jmp
cli
or
push
or
jnp
stc
xchg
xor
inc
pushf
cmc
in
out
scas
cmp
stos
add
pusha
test
je
push
or
aad
or
mov
rolb
jno
mov
jnp
sub
scas
test
inc
jb
rorl
jb
mov
xchg
jecxz
and
repnz
and
mov
pusha
stos
movsl
cmp
insb
pusha
mov
fidivrs
pop
xchg
out
mov
push
mov
mov
ljmp
adc
mov
or
imul
imul
push
jns
mov
dec
cld
xchg
adc
push
icebp
or
clc
sbb
xchg
sahf
loope
xchg
pop
add
test
ss
fsubs
test
fwait
jp
enter
xchg
and
jl
xchg
jg
cmp
dec
push
lds
aas
outsl
mov
repz
xchg
js
dec
es
lods
mov
pop
jecxz
push
addr16
push
mov
leave
pop
lret
dec
lock
shll
jge
rol
dec
push
and
aaa
scas
clc
mov
adc
xchg
repz
or
fildll
cmp
sbb
lret
loopw
imul
test
pop
lahf
lcall
leave
adc
mov
cmp
push
mov
mov
in
jne
orl
fisubrs
dec
test
push
pop
repz
and
mov
jae
stos
push
lret
push
and
nop
xor
repz
mov
movsb
xor
ret
mov
loopne
idiv
lea
jo
xor
and
inc
push
mov
mov
cwtl
adc
mov
cmpsb
popf
add
pop
adc
mov
and
xor
mov
adc
ljmp
in
inc
add
sbb
pop
repz
add
int3
inc
jl
in
and
add
add
mov
add
rolb
add
ja
mov
inc
insb
incl
incl
add
add
add
and
and
orl
add
add
add
add
add
adc
jne
add
insb
add
add
add
add
add
mov
lret
fcomps
push
sbb
push
sbb
sbb
cmp
les
inc
jb
push
push
pop
add
dec
imul
pop
add
ficompl
xor
inc
jmp
pop
add
add
in
pop
cld
inc
orb
cld
sbb
call
incl
push
dec
incl
jne
push
fs
push
inc
add
je
in
testb
adc
adc
enter
fcoml
jecxz
add
xor
and
sar
add
add
pushl
push
add
add
or
and
and
add
lea
add
or
decl
popf
loopne
add
lret
cmp
lea
add
mov
push
jne
in
add
pop
add
add
add
in
js
add
lcall
xor
dec
sbb
pop
xor
add
jb
je
js
outsl
push
outsb
outsb
je
add
imul
outsl
jb
outsb
push
imul
add
popa
add
cmc
fs
insb
addr16
popa
add
jns
outsl
outsl
imul
popa
popa
push
jne
filds
add
add
and
add
add
loope
add
cmpsb
xchg
and
adc
cmp
mov
and
or
loop
hlt
xor
sub
push
out
sbb
clc
sbb
jo
cmp
jecxz
aam
pop
lods
sahf
ret
fwait
push
xchg
inc
fisttpl
scas
movl
fsubrl
shll
rcrl
pop
jnp
inc
cwtl
aaa
sbb
insl
xor
xchg
in
xchg
repnz
xchg
mov
or
pop
xchg
mov
stos
test
xchg
out
jmp
and
sbb
cmp
movaps
jbe
xor
push
pop
arpl
pop
xchg
lahf
sub
scas
sub
sub
outsb
rcl
pushf
adc
flds
mov
jcxz
in
push
popa
pop
cmp
in
into
hlt
mov
inc
or
add
mov
dec
push
pop
popa
mov
xchg
cmpsb
bound
inc
add
out
notl
in
lret
inc
sub
mov
pop
xlat
jns
adc
test
loopne
lds
scas
add
daa
pop
popa
mov
mov
mov
data16
dec
std
mov
add
rorl
and
sbb
add
sbb
mulb
repz
nop
loop
push
shll
pusha
xor
pushf
push
add
or
rclb
push
out
adc
pop
or
into
je
fistps
adc
in
movsb
pusha
in
jle
shll
push
inc
sbb
cld
loop
cmp
pop
push
lock
loope
addr16
mov
addr16
and
das
popf
sub
pop
in
aas
sub
aas
lea
ret
xchg
jle
test
jae
cmp
test
lahf
in
jb
jae
dec
out
cmc
gs
test
mov
jns
jbe
ljmp
fnstsw
xchg
iret
les
sub
jae
mov
xchg
in
imul
push
aad
fnstsw
incb
repz
cmp
ret
cmp
popa
std
int
lahf
xchg
mov
in
adc
rcl
insl
mov
lahf
pop
mov
cmp
lret
pop
and
jne
fnstenv
mov
push
jecxz
cwtl
sti
ja
xchg
test
xor
jge
js
and
jecxz
das
movsb
cmp
cli
andl
push
mov
lahf
frstor
movsb
xchg
dec
lcall
std
les
jne
into
mov
daa
and
xchg
inc
test
daa
out
mov
push
ljmp
fdivr
and
fsubrl
pop
xchg
iret
fs
sub
jb
lea
stos
js
shrl
pop
std
loop
or
cmpsb
clc
sub
mov
addr16
push
mov
cmpsl
and
xchg
dec
push
popl
clc
outsb
mov
xor
pushl
rclb
push
or
sub
orb
xlat
fwait
dec
or
mov
jno
cld
ret
or
cwtl
jne
push
add
mov
mov
push
aad
popl
sbb
adc
xor
adc
jo
add
std
out
or
mov
cmp
xchg
push
scas
mov
cs
sbb
push
push
loope
sub
jnp
das
ja
nop
test
stos
mov
in
push
out
jns
pop
jl
mov
test
or
sbb
jb
filds
add
scas
call
loop
or
mov
pop
xchg
ret
pop
call
test
mov
xor
mov
xchg
in
or
test
jbe
mov
cmp
in
clc
stos
jnp
clc
daa
dec
pusha
cmpsl
insb
mov
mov
in
rcrb
out
add
inc
inc
lods
pop
int3
mov
ret
fnstenv
lds
sbb
cwtl
mov
addb
pop
mov
xor
sti
stc
inc
stos
jae
pop
lock
push
repnz
cli
shrb
sti
sub
sub
clc
lret
fs
add
push
gs
je
add
lock
dec
xor
int
mov
jb
mov
push
test
add
sbb
and
insb
push
cwtl
cmp
adc
sbb
stc
add
in
push
repz
je
pop
push
push
push
mov
jecxz
mov
push
mov
lahf
mov
loopne
leave
test
inc
aaa
xlat
pop
iret
test
and
sbb
aad
adc
jp
push
or
out
push
jg
pusha
faddl
mov
mov
pop
xor
sbb
cmp
ret
je
jle
fdivs
mov
test
pusha
lret
jnp
and
hlt
fsub
pop
xchg
sbb
xchg
into
aaa
jnp
lds
and
in
mov
ss
arpl
pop
gs
push
xchg
push
bnd
cli
and
test
in
add
cwtl
xor
or
inc
stos
adc
aam
sahf
rclb
inc
xchg
enter
dec
daa
mov
ljmp
lcall
int
jns
cmp
negb
js
out
or
ds
ret
xor
pop
int3
out
push
mov
xchg
bound
adc
pop
add
jnp
ret
sub
xor
push
gs
jp
bound
fnstcw
adc
jne
push
xor
xchg
outsb
jecxz
lahf
aas
cmp
js
hlt
je
shr
cs
pop
xchg
dec
push
push
jl
int3
leave
jae
stos
dec
jecxz
jge
sub
fucomi
mov
aam
ret
lret
jle
shr
cltd
jns
add
inc
add
cmp
push
sbb
clc
adc
lds
mov
mov
cmp
leave
xor
sub
mov
cmpsb
push
sbb
dec
and
test
and
iret
ss
push
imul
pop
enter
pop
jno
mov
lret
adc
add
roll
mov
dec
aad
test
fidivrs
jmp
stos
jle
dec
jmp
push
rorl
repnz
pop
dec
adc
imul
inc
insl
pop
sar
sub
fldcw
jmp
cmp
gs
push
imul
pop
nop
jl
xchg
inc
shll
push
fiadds
cs
push
and
jbe
cmp
pslld
mov
in
jge
outsb
fistps
rclb
jl
xchg
sub
mov
push
adc
jp
out
push
test
mov
dec
add
js
cld
sub
aaa
xchg
xchg
test
sub
dec
je
mov
and
and
push
test
add
push
and
lods
cmp
aam
cmpsb
or
leave
xorl
out
push
inc
adc
imul
cli
pop
ret
movsl
int
lret
daa
xlat
in
mov
cld
pusha
jge
outsl
pop
stos
push
rcrb
xchg
jle
in
ds
pop
xchg
addl
push
pushf
in
jecxz
cwtl
push
push
sbb
push
xor
jge
adc
add
stc
cmp
sahf
sub
add
sbb
push
cli
push
in
fsubl
arpl
xor
adc
or
jne
adc
out
and
out
insb
or
bound
mov
push
out
call
stos
push
jae
mov
repnz
inc
in
leave
mov
mov
mov
cmp
outsb
jge
rolb
in
popf
ret
cmp
lods
and
lock
stos
inc
test
dec
cwtl
sub
lods
dec
push
xor
in
sbb
daa
lahf
mov
and
outsb
inc
int
add
or
mov
inc
inc
and
mov
into
dec
mulb
pop
inc
pop
adc
pushf
mov
mov
jnp
scas
cltd
dec
jg
push
int3
cmpsb
xchg
adc
das
pop
add
push
sarl
les
aas
out
push
in
lcall
sahf
sbb
push
arpl
movsl
xor
fidivl
xor
shll
aam
je
shlb
jne
pop
mov
scas
mov
int
lret
fwait
adc
xchg
call
roll
push
adc
push
sbb
jmp
and
ret
pop
loopne
xor
mov
pusha
rcll
lcall
jb
fistps
loop
test
sbb
sub
xor
fimull
stc
js
xor
mov
fadds
mov
stc
orl
outsl
repz
push
jp
and
pop
add
adc
adc
gs
xchg
clc
mov
mov
test
and
in
xor
pop
mov
push
xchg
pop
mov
sbb
in
jnp
mov
lret
xlat
adc
sbb
xchg
cli
cmpsb
roll
shlb
stc
movhps
in
popf
fs
bound
pop
adc
mov
leave
mov
xchg
sub
insb
lods
sub
fiadds
repz
xlat
pusha
je
jl
xor
aaa
ja
out
outsl
cld
or
pextrw
push
push
push
cmp
dec
fidivrl
adc
rolb
adc
in
sbb
inc
sbb
icebp
mov
pop
xor
mov
mov
nop
test
cmc
ss
or
std
and
jnp
or
adc
data16
push
imul
sbb
sbb
loop
rorb
outsl
xchg
call
add
sbb
test
jp
dec
jne
dec
in
jle
mov
and
out
sub
ss
push
jae
in
fisubl
sbb
js
jmp
in
popa
add
shll
and
sbb
adc
int
les
jne
outsl
adc
pop
ret
xor
fimull
pop
xchg
flds
iret
les
dec
mov
rorl
dec
add
sub
adc
js
xchg
loop
aaa
xchg
or
inc
sbb
xor
jecxz
or
xchg
cmp
mov
mov
inc
sbb
loopne
es
divl
lea
test
int
dec
icebp
pop
dec
pop
outsb
cmp
inc
add
xchg
in
sub
and
dec
sbb
dec
push
mov
sbb
mov
in
push
mov
pop
mov
mov
stos
int3
xor
jl
adc
mov
mov
cli
mov
cs
xchg
in
add
mov
adc
mov
and
adc
sub
adc
mov
push
ret
add
in
rcr
loope
inc
daa
adc
dec
adc
ficoml
xor
int
cmp
mov
adc
js
cmp
ret
adc
in
xchg
push
and
test
cmpsl
jle
jns
and
jae
xchg
dec
sysenter
fildl
cmp
dec
or
adc
loop
aad
pop
les
clc
xor
cmc
test
jl
dec
fcoml
push
ja
movsb
mov
push
adc
jl
scas
fisttpll
or
jne
and
lds
dec
insl
negb
add
mov
or
enter
icebp
sub
xchg
add
aas
movsb
mov
dec
iret
xor
lods
add
je
mov
sbb
stos
mov
jl
or
xlat
inc
jge
and
jbe
xor
xor
fmull
add
jb
adc
xchg
jecxz
push
cmpsb
fyl2x
mov
lods
pop
push
xor
fwait
test
jbe
jl
xor
mov
lods
or
das
ljmp
sahf
mov
xchg
fs
test
adc
dec
adcb
and
mov
scas
jg
sub
pusha
inc
ret
cmp
adc
movsl
or
mov
andb
imul
test
or
cmp
fiaddl
nop
mov
adc
out
loop
movsb
or
mov
test
push
inc
test
lcall
imul
dec
xchg
mov
cwtl
xchg
dec
jg
aad
nop
xchg
in
fists
popa
xchg
outsl
pop
push
sbb
repz
and
loopne
adc
repz
mov
xchg
mov
repz
xchg
out
push
xchg
pop
lds
iret
cmc
test
ss
mov
and
push
movsb
nop
outsl
pop
insb
sbb
mov
mov
pop
cmp
xchg
ljmp
mov
in
cmp
ret
jp,pn
roll
inc
cli
mov
push
mov
fwait
hlt
cmp
test
test
xor
jae
arpl
pop
repnz
push
sub
clc
jb
imul
mov
sub
adc
imul
xchg
call
fnsave
mov
lret
fsubs
das
out
add
sub
mov
jnp
cmp
adc
stos
pop
roll
insb
inc
andl
sbb
pop
sbb
mov
jge
push
sub
aam
out
ret
jl
push
mov
loope
push
repnz
push
enter
fxch
pop
xchg
inc
cmpsl
dec
jecxz
adc
hlt
mov
aas
mov
xchg
scas
pop
aas
outsb
sub
fmul
dec
nop
addr16
pop
out
add
pushf
cmpsl
icebp
lcallw
mov
pop
in
in
das
xor
shrb
dec
repnz
rol
lahf
inc
sub
xchg
mov
incl
mov
mov
xor
aaa
outsl
jp
pop
out
fisttps
or
jg
mov
xchg
out
lcall
mov
xor
pop
stos
incb
pop
dec
and
ljmp
cltd
dec
jp
dec
dec
lret
mov
jb
jns
jp
stc
mov
xchg
jne
adc
icebp
fs
addb
cltd
push
ljmp
cmpsl
sub
lock
fwait
cs
adc
jmp
shlb
add
add
hlt
and
inc
lea
sahf
je
push
and
out
dec
ficoms
cmp
leave
mov
cmp
inc
jns
ret
stos
jns
jae
push
pusha
rcrl
testb
imul
push
test
mov
in
xchg
cmp
sub
cmpb
rclb
pushf
stos
iret
adcb
push
jo
insl
int3
out
imul
and
js
sbb
in
inc
mov
out
sbb
push
std
or
push
out
and
fmull
sub
adc
add
sbb
in
pusha
pop
call
subb
lret
inc
pop
adcb
dec
cmpsl
int3
insl
bound
and
nop
movsl
nop
jbe
lds
and
pop
lods
ja
bound
int
mov
or
icebp
sub
jl
jecxz
pop
push
imul
movb
mov
out
imul
dec
movsl
jo
xor
xor
and
pop
mov
ficomps
call
sub
out
xor
sub
xchg
adc
dec
xor
lock
filds
lods
movsl
jle
adc
sub
mov
cmp
adc
cld
add
pushf
xchg
std
jecxz
mov
dec
push
add
sahf
jne
mov
inc
ja
mov
xor
add
daa
mov
insb
and
mov
in
cmc
dec
jecxz
mov
testb
and
ja
pop
popa
adc
es
pop
out
mov
jle
pop
jo
push
repnz
je
lds
repnz
fs
cmc
and
mov
xor
jbe
push
out
cli
ret
outsl
imul
mov
dec
adc
pop
inc
xchg
mov
mov
or
inc
pushf
loop
test
ljmp
aaa
movsl
cmp
mov
cmc
cmp
std
mov
xlat
jo
movb
cmp
jmp
xchg
push
xchg
jge
stos
adc
cmp
dec
loopne
call
fcomps
stos
jecxz
incl
loop
mov
cli
sarl
fcomip
ret
stc
imul
rorl
push
sbb
jl
xchg
xor
jp
mov
mov
ret
mov
in
pop
inc
stos
ret
pop
push
mov
test
add
fcomps
cmp
bound
scas
ja
mov
mov
dec
push
sub
pop
out
lcall
imul
outsl
push
mov
and
or
std
jp
mov
outsl
cmp
push
leave
inc
ljmp
xorb
ficomps
and
out
add
setnp
test
xchg
adc
outsb
popa
shr
in
outsb
xchg
mov
lock
es
aas
cmp
sbb
ds
xchg
pushf
inc
sub
pop
dec
sub
notb
xchg
jno
push
inc
fistpl
mov
in
cmp
hlt
into
mov
mov
or
or
push
add
xchg
sbb
in
fnstenv
out
testl
test
cmp
fcompl
lods
clc
insl
mov
hlt
sub
push
mov
and
mov
mov
test
mov
jl
mov
fstps
sbb
xchg
mov
dec
push
xorl
adc
pop
stc
add
dec
mov
mov
orl
shll
pop
inc
repnz
aad
cmp
xor
adc
mov
repz
repz
test
adc
push
adc
pop
and
clc
dec
mov
adc
ret
shl
rorl
test
xchg
mov
lods
addr16
ror
imul
xchg
aad
movsl
imul
leave
add
add
xchg
cltd
fcompl
adc
push
mov
adc
cld
pop
pop
lods
mov
js
jecxz
or
xchg
sub
push
imulb
rcl
cmovg
cmc
sub
push
and
sbbb
xor
jae
mov
xor
sub
mov
fsub
ret
and
mov
roll
and
mov
sub
cmp
lcall
fxch
mov
xchg
inc
mov
mov
imul
mov
lds
lock
lods
ret
cmp
stos
mov
es
fistpll
xor
adc
inc
dec
outsb
testl
and
cmp
xor
fadd
aam
xor
mov
mov
notb
mov
call
push
adcl
add
out
clc
test
xor
add
cmp
leave
mov
push
sbb
dec
insb
sti
repz
jg
jbe
mov
dec
inc
and
test
cmp
fists
mov
or
inc
push
lret
or
xchg
testb
add
mov
pop
push
dec
and
fdivl
dec
stc
cmp
ret
clc
mov
and
cmc
cwtl
xchg
loope
loopne
rcrb
lcall
xor
mov
popa
aas
insl
subl
aas
jb
shrb
pop
mov
nop
rolb
ret
idivb
xor
pop
pop
sbb
mov
adc
in
mov
lret
into
testl
jecxz
cmpsl
push
out
mov
xchg
adc
xchg
jae
sbb
movsl
icebp
cmp
aaa
insl
rol
sbb
cs
movl
add
ss
xlat
cwtl
inc
xor
int3
mov
iret
adc
jo
inc
loopne
jp
ds
jnp
add
jae
orl
fs
sub
xlat
aad
dec
test
outsl
sbb
push
mov
in
and
or
loope
fimuls
jle
into
mov
cli
sbb
insb
mov
fisubs
addr16
cmp
cmp
enter
inc
xor
jle
pop
adc
rolb
jb
jl
sbb
push
or
rclb
pop
enter
stos
sahf
fnstenv
inc
and
pusha
or
pop
push
mov
push
push
int3
push
mov
pushf
mov
and
out
push
daa
mov
cmp
adc
pusha
repz
clc
flds
rcl
sbb
inc
fnstsw
adc
imul
pop
push
pop
xor
rolb
pop
sbb
xchg
xor
and
insb
outsl
xchg
xchg
daa
sbb
sbb
testl
cmpl
clc
mov
jg
in
pop
stos
out
in
xor
sub
dec
and
mov
mov
sti
mov
or
mov
inc
inc
push
mov
jns
pop
or
imul
jns
mov
aas
mov
into
loop
divb
mov
xor
pusha
dec
addb
out
repnz
add
jno
scas
sbb
push
jb
sbb
mov
notl
mov
testl
stos
es
out
jno
jle
rcrb
xor
sub
mov
into
addr16
imul
pop
xchg
mov
push
ret
dec
mov
push
add
fs
lret
movb
pop
lods
das
xchg
sub
cmpsb
rcr
lods
sbb
xchg
or
inc
add
leave
pushf
mov
mov
inc
out
add
add
inc
mov
icebp
adc
add
add
adc
xor
pusha
add
add
add
add
add
add
add
add
add
add
pop
add
and
add
adc
add
addb
add
stos
stos
add
call
jb
jne
insb
push
jb
je
arpl
add
add
add
add
push
or
add
add
add
xchg
test
add
add
add
or
add
add
add
add
add
add
add
pusha
add
add
add
sub
add
add
add
add
test
add
add
sahf
outsl
outsl
jne
outsb
add
aaa
pop
add
push
leave
mov
popa
sahf
iret
or
roll
repz
dec
push
mov
incl
std
sub
call
decl
push
push
lea
inc
or
pop
divl
mov
pop
in
add
push
je
rol
push
add
incl
mov
adc
add
daa
add
decl
ljmp
ljmp
incl
loopne
jmp
test
lcall
add
call
jge
push
adc
aaa
push
incl
std
xchg
jmp
jne
lea
jne
add
adc
add
movl
add
add
add
add
add
add
add
add
add
add
xchg
add
add
imul
imul
dec
add
gs
sarl
add
jae
add
inc
add
add
dec
inc
fs
push
add
popa
add
mov
jne
gs
push
push
outsl
push
add
add
add
add
add
sti
jae
add
add
add
add
add
add
add
add
add
add
sbb
inc
dec
adc
loop
fidivrs
xorb
jnp
jmp
adc
cmp
push
rcll
push
push
dec
fucomip
mov
jmp
jnp
inc
imul
imul
mov
push
hlt
xchg
dec
mov
in
or
xchg
jnp
xchg
cmpsb
cltd
pop
fildll
pop
arpl
fldcw
push
fadd
mov
clc
fcompl
inc
repnz
xlat
lret
mov
test
pop
jge
push
xor
mov
push
inc
inc
and
testb
add
lahf
mov
ret
lds
inc
fisubrs
std
xlat
movsl
aam
sbb
mov
and
fisttpll
push
cli
push
testl
jp
push
xchg
rol
fdivrl
xchg
fsubs
mov
and
push
xlat
sub
in
mov
xor
xchg
push
ds
adc
bound
xchg
xchg
sbb
imul
lahf
outsl
jle
and
call
out
inc
jl
out
stos
push
lcall
loop
insb
aaa
xlat
movsb
and
inc
add
cmp
cmp
xchg
jo
outsl
das
xchg
jge
sub
push
cmc
push
addr16
paddd
xchg
testb
and
push
jp
hlt
lcall
push
in
insl
stos
pusha
rolb
push
dec
ds
es
mov
jo
xchg
cmc
mov
mov
imul
pop
pop
mov
mov
imul
aad
sbb
mov
push
xchg
test
lea
fisttps
mov
sbb
mov
out
repnz
mov
js
pop
inc
dec
mov
xchg
pop
sub
data16
es
es
call
leave
mov
lahf
pop
push
imul
lods
stc
add
add
xchg
xchg
xor
cwtl
xchg
sub
ja
aaa
xchg
jae
lret
xor
loop
push
aaa
into
loop
push
mov
mov
jg
pop
push
cmp
sbbb
shrl
jne
push
adcl
xchg
jae
lret
imul
aaa
lds
and
jns
ljmp
stc
xchg
jle
mov
pop
cmpsb
imul
sbbb
dec
lods
leave
sub
jp
cld
mov
imul
pop
sahf
sbb
add
out
mov
inc
in
leave
jecxz
and
int
leave
out
mov
fadd
lea
mov
loopne
add
and
inc
add
xor
or
cmp
into
inc
popa
shlb
jae
ds
cmp
ficomps
jg
fwait
mov
cli
dec
mov
push
pop
add
xchg
inc
imull
nop
out
test
jno
scas
negb
loop
aam
lods
test
and
sub
aaa
push
add
pop
lea
in
xchg
push
scas
jnp
add
fldt
xchg
sbb
sbb
fimull
cltd
pop
addl
scas
jmp
mov
out
xor
ljmp
and
jb
test
and
sti
mov
inc
mov
mov
dec
and
mov
push
pop
incl
xchg
mov
dec
jp
out
sub
rorb
movsb
pusha
cltd
int3
lcall
fistpll
icebp
push
jp
pop
mov
dec
push
and
add
repnz
scas
arpl
xor
fistpll
push
clc
and
inc
dec
cmp
and
or
cmp
add
mov
xor
add
iret
lods
dec
sub
xor
sbb
dec
stos
or
adc
push
add
rcr
push
xchg
addl
into
push
and
cmp
sbb
sbb
jno
out
dec
lcall
dec
mov
push
jge
lea
fwait
add
and
jb
lcall
and
out
sbb
push
xchg
xchg
jno
push
sbb
rdtsc
das
push
or
ds
ret
xchg
jae
in
out
into
jge
bound
mov
mov
ret
inc
shrb
sub
sti
push
sarb
xchg
inc
dec
subb
pop
rcll
jmp
add
int
inc
jno
add
fs
mov
push
cmp
or
xor
mov
in
fnsave
push
data16
imul
dec
call
popl
hlt
ljmp
push
mov
rcrl
mov
jp
or
cmc
inc
std
dec
add
sbb
jns
jl
fisttps
or
push
push
add
dec
je
jl
jle
xchg
ss
sbb
ss
adcl
pop
sar
dec
fs
imul
data16
cmp
xchg
fcmovnb
cwtl
jge
test
in
and
repz
jp
ss
lcall
lds
sti
inc
icebp
lods
xchg
xor
and
rclb
push
jno
pop
ljmp
mov
mov
std
xchg
mov
sub
inc
sub
add
inc
std
dec
cmp
push
pop
shrb
push
daa
test
clc
lret
cmc
cli
or
inc
add
push
fwait
cmp
fcomps
bound
shll
mov
and
jno
or
sahf
push
shll
icebp
push
mov
xchg
sub
pop
adc
mov
dec
int
push
push
xlat
out
jae
jp
mov
daa
lea
and
lods
je
push
movsb
lcall
int
sub
nop
adc
cmp
out
fs
pusha
pop
leave
movsb
js
sbb
push
lea
pop
mov
and
and
shl
sbb
fcmovb
in
xor
out
jno
and
inc
mov
dec
xchg
jg
push
cmpsl
inc
in
sbb
data16
dec
in
push
fisttpll
jle
leave
sar
dec
mov
adc
lods
scas
mov
in
sub
add
push
sbb
andb
or
add
ds
inc
mov
and
fstpl
mov
sub
aam
inc
ja
leave
into
je
pop
jnp
adc
mov
dec
xor
inc
aad
stos
daa
bound
sarb
and
pushf
lret
inc
ret
lods
and
clc
add
jle
xchg
inc
andb
sahf
ja
dec
test
lret
test
imull
mov
scas
push
test
or
leave
jbe
mov
cwtl
inc
outsl
addr16
dec
jecxz
rorb
xchg
bound
mov
pop
in
adc
cmp
sbb
jg
dec
sahf
scas
sarb
adc
movsl
pop
xlat
dec
out
push
jg
and
loopne
cmp
mov
lret
data16
imul
inc
adc
js
jle
xchg
sub
push
jg
jnp
outsb
mov
int
push
add
leave
loop
das
pusha
scas
push
mov
sub
sub
fldcw
lcall
roll
inc
ljmp
or
sbbb
sbb
orb
cmpsl
and
hlt
pop
push
bound
data16
fisttpl
mov
jecxz,pn
in
icebp
out
mov
das
xchg
jge
mov
gs
cmp
xchg
xor
js
cmc
cmp
cmpsb
out
aam
jnp
sbb
lock
or
insl
test
push
sbb
pop
sbb
daa
push
xchg
loopne
xor
adc
xchg
ficoml
lods
outsb
inc
cmp
pop
rorb
sbb
xor
xchg
mov
in
mov
mov
adc
xchg
xorl
mov
loopne
push
je
jb
adc
rclb
jl
nop
mov
std
out
sub
ds
push
imul
insb
cld
xchg
repnz
add
jo
lock
xor
xor
xor
daa
fldl
or
inc
cmp
or
pusha
aaa
adc
int
xchg
mov
ljmp
test
stc
rcr
addl
cld
lcall
mov
js
jns
lods
cmp
je
mov
sbb
ljmp
or
mov
jge
cmp
push
fs
push
jmp
inc
push
sti
mov
or
call
pop
inc
push
cld
mov
add
fistpll
xor
popa
add
jbe
adc
rorl
jg
test
out
test
adc
insl
mov
cmp
add
imul
add
sahf
mov
jns
mov
outsb
sub
out
jne
mov
ljmp
fisubrs
mov
scas
cmp
cmc
adc
push
int
push
mov
add
ret
push
jg
inc
cmp
pop
daa
cwtl
fwait
and
cmp
movsl
jae
push
fimull
adc
scas
push
inc
sbb
mov
fisttpl
adc
test
push
cmp
pop
rol
fldl
xchg
cmp
sbb
sbb
and
sbb
clc
add
pushf
icebp
scas
dec
mov
inc
aaa
lcall
pop
rorl
mov
aas
sub
cmp
lret
cmpsl
push
inc
mov
pop
mov
jb
adc
mov
xor
movsl
push
pop
xor
je
fcompl
inc
mov
addr16
xchg
mov
lods
std
mov
pop
iret
dec
addl
jl
pop
add
test
inc
jae
je
mov
mov
lret
dec
fstl
das
arpl
sbb
repnz
or
mov
neg
jns
jno
pop
mov
mov
mov
stos
pop
cmpsl
pop
pop
mov
mov
push
adc
test
aas
push
aam
xchg
inc
jb
test
sarl
add
scas
mov
push
sub
pusha
adc
call
outsb
sti
in
enter
mov
pop
lock
lcall
cld
jle
xor
pop
sub
cmp
mov
lahf
or
push
push
push
mov
pop
mov
pop
in
negb
inc
mov
jbe
add
test
sub
sbb
mov
rcr
pop
and
sub
xor
jmp
adc
mov
xorl
pop
ret
nop
xchg
inc
pop
out
stos
sbb
mov
outsb
cmpsl
cmp
adc
pusha
rcrb
out
inc
and
add
add
push
sub
mov
or
jbe
xchg
mov
outsl
add
dec
pop
inc
js
fcompl
pop
or
lahf
fwait
xchg
in
jp
stos
movsb
insl
pop
add
lock
lret
mov
mov
xor
mov
mov
ficoms
enter
cmp
mov
pop
adc
in
mov
jl
jbe
lahf
mov
sbb
jo
psubd
push
fimull
add
loop
inc
cltd
pusha
test
pop
fnstsw
sbb
ss
pop
sub
dec
mov
sub
test
mov
scas
mov
sub
adc
adc
mov
nop
out
adc
mov
xchg
jmp
jge
pop
ljmp
adc
or
je
push
add
xchg
mov
imul
cmpsb
js
jl
and
mov
lcall
clc
mov
xor
mov
pop
or
jmp
sti
fcomps
fidivl
mov
cmp
dec
lock
divl
fcoms
sub
cmp
push
mov
scas
scas
push
in
fldt
cmp
mov
dec
call
lock
push
push
inc
mov
xor
push
pushf
and
push
xchg
lods
lcall
sub
nop
xor
inc
xchg
or
faddl
pushf
cmpsl
adc
ljmp
mov
jno
xchg
fisubrs
fiaddl
je
fisubs
xor
stos
inc
xlat
popf
popa
lods
dec
cmp
push
lahf
pop
or
shl
jmp
adc
daa
cltd
out
les
push
fidivrl
div
and
clc
xchg
adc
ret
dec
idivl
scas
push
xor
test
lds
jmp
pusha
lahf
out
ss
jge
xor
aaa
pop
cwtl
jg
sub
scas
pop
push
roll
loopne
or
ja
cmpsl
or
adc
loop
or
cmpsl
jno
mov
mov
and
jno
leave
push
mov
mov
push
and
cmp
inc
adc
mov
popa
fstp
nop
pop
inc
sarb
pop
mov
test
push
dec
dec
inc
outsb
enter
or
stc
xor
mov
popa
dec
mov
inc
jae
jb
pushl
adc
mov
pop
dec
int
mov
mov
js
ret
lcallw
pop
ret
pop
dec
jno
mov
jg
xor
mov
xchg
or
or
inc
cmpsb
cwtl
xchg
and
sahf
dec
clc
ret
and
je
sub
call
test
jns
pop
loop
subl
les
xchg
xchg
cmpsb
xchg
pushf
cmp
popa
loope
inc
adc
or
xchg
mov
repnz
faddl
rcr
cmc
add
inc
adc
jo
test
push
bound
jmp
xchg
pop
dec
sarb
call
sub
sti
mov
inc
cmp
or
sti
out
ficomps
xor
clc
shrb
cli
stos
loopne
push
inc
and
fsubr
pop
xor
into
jmp
jnp
xchg
pop
inc
xor
add
and
push
cmp
push
stc
inc
mov
icebp
lock
adc
or
push
jp
out
adc
inc
mov
in
lret
andb
addr16
push
clc
cmp
mov
jp
sub
xchg
xor
cmp
dec
das
mov
cmp
xlat
push
cli
jecxz
aas
push
les
adc
cmpsl
out
jb
and
cs
in
sub
xchg
fs
push
mov
and
negb
jle
mov
stc
in
shl
sub
ficoml
lcall
adc
lret
pop
nop
xlat
dec
or
data16
add
mov
movsb
push
cmp
inc
dec
push
leave
mov
fisubs
divl
fidivl
daa
bsr
sub
lcall
pop
pshufw
push
rcrl
cmpsl
xor
cmpsl
dec
jmp
xlat
xor
adc
push
lea
cltd
scas
cmp
imul
data16
jl
sub
jb
sub
mov
std
fs
je
xchg
jp
andl
test
cmpsl
iret
cld
add
xlat
divb
push
push
fimull
nop
add
ret
ja
mov
bound
sbb
and
mov
jl
dec
bound
jne
sbb
add
ret
or
dec
cmp
popa
mulb
out
jecxz
mov
adc
ret
sbb
jge
xchg
jle
sub
cmpsl
lods
push
mov
mov
es
pop
ficompl
jno
addl
xorl
out
lret
cltd
popa
movsl
sbb
mov
mov
xchg
dec
xchg
enter
xchg
out
enter
cmp
add
dec
or
sub
cmp
push
negb
mov
jle
insl
pop
pop
cltd
out
mov
add
nop
dec
pop
ret
insb
ds
sub
fsubl
out
scas
mov
mov
jmp
mov
dec
dec
push
jmp
xchg
dec
int3
add
notb
jns
in
imul
andl
bound
pop
cli
aaa
cmp
push
adcl
test
in
lret
adc
sbb
sbb
pushf
in
jb
or
sbb
repnz
xchg
sahf
push
push
sti
xchg
inc
aam
lds
clc
cwtl
inc
in
repz
mov
hlt
and
pop
pushf
loope
jle
movsb
outsb
ret
lds
aas
xor
lret
divl
incl
jno
mov
lds
mov
fcomip
jp
push
adc
ret
xchg
aaa
or
loop
cmp
pop
lea
gs
jae
movsb
mov
or
movsl
xchg
sbb
roll
cltd
pop
stos
mov
popa
je
lea
sub
scas
or
mov
daa
sbb
aas
inc
fistpl
outsb
cmp
push
fstps
add
sub
or
push
xchg
fsubrl
test
sub
xchg
adc
fisubl
cld
hlt
orb
fstl
repnz
shrb
pop
add
xchg
xchg
fadds
pushf
cmp
inc
fidivs
adc
jg
lods
lahf
lock
dec
push
call
aad
push
push
and
adc
into
cmp
mov
mov
mov
imul
insl
icebp
shlb
add
xchg
stos
xor
fsub
dec
imul
daa
sub
xchg
ss
pop
arpl
out
mov
mov
dec
pop
ror
lds
inc
leave
es
test
in
iret
inc
xlat
mov
lahf
sti
dec
into
sbb
mov
cli
ja
mul
push
xor
decb
cli
inc
mov
lods
xchg
and
sbb
mov
loop
jecxz
jp
xchg
rcrb
and
aam
ret
movsbl
or
and
shlb
es
aas
fstps
lret
arpl
in
ret
mov
push
call
xchg
and
mov
jnp
pop
ljmp
cmp
lods
adc
mov
cli
and
popf
inc
loop
and
mov
rcl
aam
cwtl
iret
leave
mov
cmc
jno
ds
popf
sti
pop
xchg
dec
adc
ret
jno
xchg
jmp
dec
pusha
out
pop
out
cmpsb
mov
inc
lods
cld
in
es
dec
call
scas
loopne
or
mov
ds
mov
das
mov
leave
pushf
sub
dec
mov
cmpl
sbb
out
rol
adc
lods
pusha
addr16
out
pop
mov
pop
mov
jmp
adc
jo
xorb
sub
ftst
cmp
les
icebp
lods
lods
dec
loopne
and
adc
in
js
rcr
stos
inc
iret
adcl
add
or
sub
add
das
cltd
push
dec
dec
aam
aad
dec
shrl
lcall
push
mov
cmp
push
xchg
push
cmp
cli
orl
jle
adc
mov
addl
xchg
in
popa
out
mov
sub
mov
mov
sbb
lods
shlb
shll
mov
mov
daa
and
stc
lock
fdiv
xlat
jae
enter
xor
adc
push
pop
cmp
fs
es
jecxz
jg
repnz
mov
xchg
test
enter
xor
add
daa
testl
mov
adc
paddd
lock
xchg
inc
pushf
es
pop
pushf
movaps
mov
xchg
pop
sbb
sbb
inc
and
xchg
rcll
imul
mov
push
mov
inc
pop
clc
ret
ficoms
bound
sbb
addr16
pop
fisttpll
data16
mov
flds
icebp
jl
addr16
cmpsb
loopne
mov
xlat
and
mov
daa
mov
gs
adc
and
out
xchg
jecxz
jp
inc
mov
add
aam
jge
movsb
fists
insl
jbe
call
pop
fs
or
xchg
mov
xchg
dec
xchg
enter
cwtl
or
adc
andl
cwtl
test
shrb
sub
fdivrs
or
and
mov
loopne
cmp
lret
fbstp
sub
inc
setne
mov
push
push
pop
nop
mov
push
lcall
out
jg
mov
pop
in
stos
ficomps
xchg
pop
jecxz
mov
je
fldl
stos
insl
mov
repz
cwtl
popa
xchg
add
or
stos
and
dec
repnz
inc
xor
push
insl
aaa
or
data16
std
mov
rcl
iret
in
std
adc
flds
mov
leave
add
jecxz
xchg
in
pusha
mov
adc
ficoml
push
mov
dec
mov
pop
popa
pop
pop
pop
and
rcr
mov
mov
jnp
imul
adc
pop
daa
pop
dec
dec
inc
pushf
add
sbb
ljmp
fists
mov
pop
ljmp
stos
mov
mov
pop
mov
in
mov
insl
mov
outsb
xchg
inc
clc
loopne
jns
or
xchg
aam
cmp
adc
pop
inc
mov
std
shll
jno
sbbb
lcall
fwait
ds
inc
xor
push
cmp
mov
negb
push
adc
int3
repz
dec
push
or
mulb
pop
xchg
add
rcr
jge
loop
bound
add
add
add
add
add
add
add
add
jmp
add
add
add
add
fwait
xchg
add
add
add
add
add
add
add
mov
add
add
mov
add
add
add
add
ret
add
stos
stos
add
ja
push
jo
jo
jo
add
add
add
add
or
jne
or
add
add
add
sub
inc
add
add
add
push
mov
add
add
out
add
add
add
add
add
add
add
add
add
add
add
add
jo
add
imul
add
shufps
add
sub
add
push
lea
mov
dec
mov
in
or
inc
incl
clc
add
cld
or
or
lcall
rolb
push
add
mov
testl
lret
cmpl
add
add
jmp
add
add
adc
add
xor
call
add
decb
cld
test
std
std
stc
add
cld
decl
add
enter
add
push
cmp
clc
add
add
jne
lret
mov
or
test
inc
adc
dec
push
in
push
hlt
adc
add
add
add
movb
add
add
add
sub
add
add
inc
gs
xor
inc
outsl
outsl
std
outsl
test
insb
imul
mov
jbe
je
arpl
aaa
push
gs
cs
outsl
inc
pushf
jb
insb
jge
add
outsl
imul
je
je
je
insb
push
jl
add
add
add
add
add
add
int3
add
add
add
add
pop
inc
add
popf
bnd
shrb
push
push
push
lahf
jle
sbb
xchg
and
adc
icebp
gs
rol
push
adc
dec
aam
fisubl
imul
and
lcall
cmpsb
jge
insl
mov
dec
xchg
fdivl
fcomps
imul
cmp
loope
test
sbb
test
imul
xor
or
inc
sub
xlat
xor
fnstcw
mov
inc
pop
loopne
mov
lods
cmp
test
lock
cmpsl
enter
xor
movsl
loope
les
call
add
add
hlt
fwait
pop
or
mov
mov
movsb
cli
or
mov
cmp
movsb
stc
lods
sbb
push
add
push
sbbl
out
into
pushf
shl
or
xchg
dec
sbb
jns
stc
rcl
cmp
pop
cmp
jo
jp
inc
js
push
fnstsw
sarb
push
cwtl
loopne
jg
or
test
and
fs
aas
pop
push
daa
inc
lret
inc
mov
dec
or
and
sbb
mov
pop
js
int3
dec
call
into
sti
xchg
sbb
xor
inc
or
pop
add
repnz
lahf
outsl
scas
push
add
push
and
jmp
mov
inc
pop
ds
inc
xchg
fwait
dec
test
push
pusha
fwait
cmp
pop
jmp
push
xchg
sbb
pop
cltd
adc
es
mov
daa
shrl
dec
insb
fs
dec
xchg
and
cwtl
mov
aam
lea
fidivrl
cmp
sub
inc
addl
sub
mul
add
xchg
push
ret
inc
pop
xchg
shlb
mov
movsb
fcmove
jae
movsl
jmp
out
hlt
les
fidivl
rol
mov
sbb
call
cmc
xlat
and
insb
neg
xor
pop
push
jno
pusha
lahf
xchg
repnz
push
pop
leave
add
xchg
pop
out
setg
fisubs
cltd
xor
cwtl
pop
and
jns
sbb
jne
inc
mov
in
das
ljmp
out
sbb
xchg
in
jo
dec
in
aam
push
pusha
push
and
or
std
pushf
hlt
cmc
mov
mov
in
int3
loopne
faddl
pop
mov
std
dec
imulb
mov
test
sbb
mov
push
ss
xchg
imul
test
xor
xchg
lock
adc
loope
mov
sub
push
xor
ja
pop
pop
xchg
stc
jae,pt
jmp
jnp
xor
jl
test
cmp
arpl
sub
mov
fwait
sub
sbb
pop
cli
push
mov
adc
cmp
mov
es
nop
je
jne
stos
daa
inc
lret
int3
mov
sub
xor
pop
sub
add
and
sub
adc
xor
jno
aas
and
into
fwait
dec
sbb
sbb
xchg
pop
or
lea
inc
into
gs
popf
mov
mov
jb
shll
popa
push
stos
movsl
add
xchg
xchg
pop
hlt
dec
xchg
bound
ss
add
mov
aas
adc
adc
movb
dec
ljmp
jae
daa
rolb
jno
pop
adc
fstpt
fwait
xchg
jbe
and
imul
push
aam
pop
mov
aaa
jle
push
push
mov
jmp
pusha
mov
adc
xchg
xchg
pop
and
xor
adc
scas
mov
call
xchg
xor
je
adc
es
adc
mov
loopne
fimuls
mov
leave
xor
fistps
jne
jbe
or
xchg
mov
lock
mov
mov
mov
scas
test
cmpsb
lds
or
aad
pop
sbb
jmp
sbb
ret
stos
fcmovb
not
fmulp
sbb
mov
ficoml
leave
js
sub
mov
ret
aas
lcall
cmp
jb
xlat
ret
outsl
cwtl
test
rcr
hlt
pop
js
mov
push
xchg
pop
xchg
xchg
stos
or
scas
cmpsl
fdivrs
cltd
xchg
fmuls
jns
lods
pop
or
sahf
add
adc
mov
loop
pushf
cmp
jg
pop
in
inc
dec
fnsaves
imul
dec
mov
jnp
out
cmpsb
cli
mov
lea
js
jle
xlat
or
cmc
fmul
fwait
repnz
es
shl
sub
leave
cmp
xchg
mov
popa
mov
sub
lahf
pop
push
andb
mov
mov
or
ss
rorl
and
push
shrb
mov
inc
mov
pushf
loope,pn
lret
pushf
adc
fcmovnb
pusha
dec
pushf
aam
xchg
ss
push
jmp
fcomi
jbe
dec
pop
sbb
fwait
das
push
testb
cmpsb
arpl
bound
in
mov
lret
int3
imul
fwait
cmp
imul
jae
sbb
das
dec
xor
into
sub
adc
lahf
fwait
mov
mov
push
rolb
popa
pop
mov
mov
dec
inc
inc
lret
jnp
ffree
fisubrs
lcall
iret
xchg
inc
cli
push
push
lds
mov
pop
inc
cli
leave
test
mov
test
pop
push
fwait
mov
out
insb
repz
mov
ds
push
adc
add
pusha
pop
shlb
xchg
lret
mov
jno
test
pusha
leavew
mov
dec
xchg
out
out
xor
dec
push
aas
subl
mov
repz
jmp
pop
addb
fisubs
fcoml
dec
mov
test
clc
cmp
xchg
sub
arpl
imul
ss
stos
stos
aas
repnz
mov
sub
sbb
or
addr16
pop
sbb
loope
mov
mov
xor
lea
adc
adc
and
flds
push
push
mov
add
xchg
cmc
cmp
insl
or
mov
rcll
stos
jo
ljmp
mov
jb
pop
lods
popa
push
aaa
lcall
ss
dec
pop
jne
and
sbb
addr16
ret
xchg
add
not
mov
ret
jle
lret
ja
xchg
fiadds
mov
pop
inc
sahf
into
loopne
xor
leave
xlat
rorb
dec
sti
cmc
aas
push
add
lcall
aam
daa
in
xor
imul
adc
inc
ljmp
loopne
out
add
out
out
xor
out
dec
pop
push
jmp
stos
mov
hlt
inc
push
jb
mov
mov
adc
jg
xchg
popf
sub
lock
fcoml
fsts
jnp
inc
mov
lahf
push
jno
xchg
jle
lahf
dec
or
mov
pop
int
inc
into
pop
sub
xor
mov
decl
xchg
pop
out
xor
pop
inc
dec
sbb
jns
jp
push
nop
add
xor
xchg
cmp
rcrb
inc
jle
out
les
test
xor
mov
sahf
adcl
int3
lcall
xchg
mov
insl
loop
movsb
pop
or
pop
test
les
xor
push
jmp
adc
into
pop
dec
jge
cwtl
inc
add
and
inc
shlb
inc
das
pop
cmp
jp
out
dec
and
jle
mov
test
ret
jp
mov
sbb
ret
rcrb
sbb
insb
push
push
mov
rorb
jmp
addb
mov
cmp
enter
sub
xlat
ret
mov
roll
push
mov
iret
pop
iret
cmpsb
adc
or
push
mov
stos
aam
scas
inc
xor
lahf
jmp
adc
or
inc
roll
jb
push
mov
insl
call
shl
pusha
and
int3
xchg
or
jo
cld
jmp
jno
mov
or
inc
mov
into
dec
mov
scas
push
clc
mov
dec
rcrb
sub
icebp
adc
jno
adc
push
aam
iret
loop
stos
pop
push
fwait
mov
test
lret
push
lret
dec
pop
lret
shl
pop
iret
fbld
xor
jmp
ret
cmp
shll
mov
or
scas
pop
lret
mov
add
mov
pushf
mov
test
jmp
repnz
stos
jns
out
movsb
or
movb
and
add
dec
jo
push
es
out
aaa
mov
pop
adc
dec
decl
ljmp
mov
clc
xor
xchg
sub
mov
xchg
add
enter
out
cltd
lret
add
add
or
pop
gs
push
or
inc
inc
test
leave
arpl
lds
enter
push
push
push
push
je
dec
xor
sbb
sbb
out
pusha
and
std
jns
pop
adc
decb
imul
daa
and
rcl
jmp
hlt
js
ret
add
add
jnp
repz
int
sbb
pop
inc
in
in
insb
xchg
mov
imulb
mov
xchg
xor
cltd
mov
mov
or
aad
rolb
jmp
jno
inc
add
add
jae
xchg
sbb
sbb
fdivr
xchg
xor
iret
jmp
jno
cltd
add
pop
add
adc
mov
scas
imul
hlt
shlb
pop
pop
mov
ljmp
cmp
in
sbb
out
in
push
or
popf
pop
jbe
fucomi
data16
push
in
mov
mov
in
pop
imul
or
mov
ret
cmp
cltd
out
popf
cmp
dec
into
and
mov
jmp
mov
cli
push
inc
add
ret
mov
cmp
jmp
add
dec
lods
pusha
loopne
ret
add
jecxz
pop
push
add
pop
jecxz
mov
and
fidivrs
mov
sarl
iret
lods
decb
mov
and
ds
mov
inc
xchg
or
out
insl
push
test
cwtl
mov
cmp
repz
loope
ja
ret
fs
cmp
mov
sub
enter
jg
mov
test
clc
mov
and
push
adcb
loop
sub
rclb
xor
cmpsl
aaa
in
pop
pop
mov
loopne
or
fdivrs
aaa
movsl
jl
pusha
pusha
insl
fwait
pop
pop
std
inc
push
ficomps
add
scas
stos
cmp
xchg
gs
and
jp
aam
les
test
sub
sbb
jbe
sub
inc
fdivs
mov
cmp
loope
inc
lods
add
int
cwtl
add
add
rcrb
movsb
mov
sbbl
sbb
add
xchg
mov
add
ja
cmp
scas
outsb
rcrl
leave
mov
cli
inc
cli
pop
inc
ljmp
lcall
mov
cwtl
fstpl
xchg
dec
push
jns
mov
or
push
mov
mov
add
dec
test
add
negl
pushf
jno
aad
out
add
scas
repnz
outsl
push
push
rcrl
lcall
inc
rcr
out
insb
or
pop
xor
dec
popa
ucomiss
pop
scas
loop
orl
push
or
mov
loopne
cmp
inc
push
aaa
outsb
subl
pop
or
dec
out
sti
aas
push
inc
icebp
xorb
outsl
jecxz
sub
cltd
mov
stos
in
mov
pop
push
das
call
inc
notl
cmp
xor
pop
imulb
int3
pop
pop
gs
loop
ffreep
cmpsb
scas
push
lea
pop
push
mov
pop
int3
mov
xchg
or
and
outsb
iret
mov
mov
ror
xchg
negl
std
adc
push
cwtl
push
xchg
xchg
push
je
mov
pop
inc
decb
movsl
pop
mov
ja
mov
scas
das
mov
jno
mov
push
mov
pop
adc
or
lods
inc
pop
cmp
sbb
fistl
or
push
mov
xchg
mov
cli
lret
in
and
insb
xchg
test
push
lock
mov
xchg
cs
je
not
push
xor
cltd
stos
div
mov
sub
xor
mov
and
pop
fistpl
xor
negl
xchg
adc
cmp
lss
xor
nop
add
ljmp
pop
fstl
and
push
xor
out
push
into
xchg
inc
pop
mov
mov
jb
arpl
dec
xchg
push
sub
hlt
loope
push
insb
inc
nop
xchg
pushf
inc
sbb
testl
popa
pop
pusha
test
xchg
and
cmp
loop
test
aaa
push
mov
mov
and
stos
jae
rclb
aas
iret
addr16
add
notb
xchg
cmp
xchg
outsl
xlat
jmp
xor
fcompl
sbb
stos
pop
pop
push
mov
fcomi
sub
daa
pusha
dec
xor
pop
jp
dec
lcall
push
inc
or
mov
add
popa
and
cmp
add
iret
pop
sbbl
mov
scas
cld
repz
xor
mov
pusha
mov
adc
sub
pop
shl
cmp
cmp
mov
inc
js
sbb
xchg
jae
and
push
in
sub
pop
lods
gs
push
inc
lahf
lods
xchg
mov
sub
loop
cmpsl
fxch
out
divb
mov
jmp
scas
sub
xchg
fcoml
add
clc
add
pop
and
ljmp
cmp
pop
das
add
popa
movsl
sbb
fstpl
pop
lcall
jne
ljmp
addr16
jp
mov
lods
and
pop
loope
push
setae
dec
mov
je
ljmp
scas
testl
jbe
sbb
inc
ret
addr16
mov
fidivs
push
iret
and
jl
adc
sub
push
lsl
es
rorl
sub
dec
pop
ret
out
jmp
sbb
fs
dec
cmc
movsb
cmc
jle
mov
cli
mov
cmpb
int
orb
into
stos
lods
in
mul
movsb
cmp
xchg
xchg
push
cld
fs
mov
pop
add
jge
jl
mov
out
into
push
pop
or
je
mov
maxps
jne
dec
mov
stos
push
stos
int
addr16
jno
mov
cmpsb
repnz
push
outsb
je
cmpb
rclb
std
lds
or
out
xchg
in
pop
push
sbb
pop
scas
mull
out
les
popf
xchg
pop
jp
aam
adc
out
shll
ret
scas
daa
adc
xor
push
dec
fistpll
les
add
fsubs
push
xchg
jecxz
xchg
dec
and
adc
push
popl
pop
push
sub
lods
jbe
fwait
mov
imul
jbe
fimull
xor
ret
pop
ss
notl
cmpsb
dec
push
sbb
and
inc
add
pushf
mov
pop
push
popa
cmpl
pop
lahf
fldl
add
and
cmpsl
inc
xor
xor
cli
sbb
lods
push
les
aas
lahf
je
sbb
addr16
movsl
dec
icebp
test
adc
inc
sub
xor
mov
xlat
insl
jae
mov
jle
mov
adc
mov
push
mov
cwtl
mov
cs
push
lods
lods
sahf
add
pop
dec
pop
mov
pop
mov
outsl
stos
sbb
and
jb
mov
clc
xchg
addr16
enter
and
das
inc
dec
outsl
sub
xlat
icebp
fidivs
data16
dec
dec
or
icebp
scas
sbb
icebp
jne
sbb
insl
xchg
sahf
push
mov
test
mov
jnp
int
mov
ljmp
dec
or
jnp
xor
int
sahf
dec
aaa
jle
dec
inc
scas
fmull
jne
aad
int
xchg
inc
hlt
loope
nop
nop
fdivp
test
outsl
jae
call
dec
cld
adc
ss
popf
mov
push
xchg
pop
pushl
sub
pop
test
sbb
pop
xchg
loopne
xor
sbb
dec
popf
mov
cmp
xchg
insl
push
mov
aam
jno
mov
cmpsb
cmc
jle
or
push
fwait
push
cmpsb
out
notb
add
mov
push
in
call
sbb
rclb
inc
daa
cld
shrb
xlat
rolb
sbb
add
mov
adc
push
rclb
or
jbe
test
es
and
add
mov
cmpsb
jbe
sbb
arpl
or
adc
fnsave
fwait
jnp
sub
fdivl
inc
incl
lret
pop
jo
or
pop
jmp
cs
xor
mov
adc
push
push
or
lods
hlt
mull
adc
add
push
jo
lret
mov
cmp
adcb
sbb
fwait
xchg
push
lret
xchg
outsb
xor
xorl
js
jns
fcompl
mov
lods
push
stos
ret
push
cld
outsb
lahf
xor
stc
mov
mov
pop
cmc
out
nop
and
xchg
scas
arpl
addr16
jg
xchg
js
std
mov
jno
fcmovu
lcall
lea
mov
jp
repnz
inc
inc
mov
sub
sub
adc
fcomi
xor
xor
jp
int3
adc
jns
out
enter
ds
sahf
mov
sbb
inc
mov
aad
test
test
aaa
push
and
outsb
in
mov
sbb
scas
leave
in
lahf
pop
pop
aad
mov
lcall
inc
and
dec
rorb
mov
in
dec
pop
mov
fldt
dec
adc
addl
xchg
sub
jo
lods
in
inc
pop
subb
pop
mov
outsb
test
jp
mov
and
add
scas
leave
jo
cmc
aad
jne
repz
mov
sub
iret
std
jns
sub
jge
ja
push
and
orb
push
add
in
loop
rolb
mov
cwtl
mov
cmc
lods
std
xchg
dec
mov
sahf
pop
xor
jo
movsl
inc
test
or
xor
or
test
sbb
mov
std
in
pop
add
out
enter
mov
xor
sbb
sti
inc
and
and
sbb
inc
jnp
xlat
or
push
fs
sbb
lea
ficoml
adc
xlat
enter
mov
pop
lcall
jbe
imul
mov
jne
ljmp
push
dec
jnp
jmp
leave
inc
push
sti
dec
xchg
mov
into
out
into
sbb
std
jmp
es
sub
adc
sbb
cmp
lods
arpl
sub
lret
xor
mov
insb
sbb
pop
xor
jg
rorl
ja
scas
cld
fcoml
je
es
icebp
cmpsl
and
pop
enter
mov
dec
sbb
sarl
std
sbb
mov
loop
cmp
or
aas
dec
addr16
dec
xchg
int
mov
adc
pop
sbb
ja
nop
rclb
push
bound
xlat
and
inc
mov
decb
inc
xchg
mov
adc
insb
fnstsw
pop
pushf
dec
or
add
call
mov
jne
or
mov
std
aam
add
mov
dec
nop
add
movsb
call
fiaddl
fisttpll
inc
sub
fwait
loopne
xor
sbb
pusha
push
dec
outsl
repz
xor
lcall
cmpsl
mov
jb
pop
sbb
or
cmc
xchg
jnp
pop
ss
scas
bound
gs
mov
js
adc
or
add
jnp
jp
mov
ds
es
mov
leave
xlat
xchg
sub
mov
aaa
jmp
push
pop
lcall
in
pop
cmpsb
insl
adc
xchg
jmp
movsb
jp
fdiv
jge
pushf
xchg
cltd
dec
cld
xchg
mov
push
pop
pop
mov
push
in
dec
lret
mov
adc
mov
jecxz
ficompl
add
movsl
push
icebp
inc
lret
cwtl
cli
add
and
mov
mov
adcl
addr16
in
mov
icebp
lret
and
ret
sbb
xchg
pop
les
xchg
pusha
dec
scas
dec
addr16
popf
cmpsl
mov
arpl
test
shr
outsb
and
in
movsb
cwtl
xchg
push
inc
jp
jmp
test
fwait
lods
repz
or
orl
xchg
cs
aam
daa
lea
enter
addr16
jns
jne
jb
push
push
popf
sbb
add
sbb
aad
roll
xchg
pusha
xor
dec
push
mov
xchg
adc
pop
jns
cmc
shlb
das
xor
lahf
adc
cmp
scas
mov
aas
add
add
add
add
dec
mov
add
add
add
add
movb
add
add
add
sub
add
add
add
add
add
add
add
add
mov
add
add
out
add
add
add
add
add
add
add
add
add
add
ljmp
icebp
mov
incl
add
add
add
mov
outsl
cld
jb
or
add
adc
adc
add
adc
inc
adc
add
lds
or
add
add
add
jb
add
add
add
fcomps
sbb
sbb
sbb
sbb
sbb
sbb
add
jb
jns
jne
dec
outsl
je
jb
outsl
jge
outsl
jo
test
push
enter
jecxz
out
xchg
jg
mov
jb
clc
add
addl
mov
repz
xchg
incl
push
pop
call
adc
lock
clc
lcall
pop
xchg
mov
push
add
add
push
incl
movsl
cmp
add
dec
jmp
incl
add
mov
mov
decl
mov
in
push
test
je
rcrb
dec
or
push
add
add
call
test
jmp
je
clc
jnp
mov
movsl
repz
push
ljmp
push
call
inc
sub
add
add
leave
pop
sbb
add
and
pop
add
xchg
add
sbb
sbb
sbb
sbb
sbb
int3
sbb
sbb
cmp
add
jb
gs
jae
and
insb
add
add
add
fs
add
test
imul
add
je
xor
gs
gs
add
jo
add
fs
add
test
dec
xor
add
add
add
add
xor
add
add
movsb
add
add
adc
add
add
add
adc
mov
add
pop
and
xor
jnp
fcompl
cmp
in
adc
cmp
fcoml
adc
fisttpll
leave
loop
mov
cmp
mov
mov
aaa
pop
jo
push
loop
mov
mov
mov
push
fidivl
rol
cmpsb
cmp
xchg
scas
mov
jnp
das
loopne
ffree
mov
dec
popa
test
sub
push
push
ret
imul
cmp
mov
out
push
scas
and
sbb
les
cmp
call
mov
mov
dec
fcompl
pop
xchg
ret
lods
addr16
and
jmp
sbb
in
xor
jecxz
iret
mov
aad
sub
add
pop
adc
adcb
lret
push
adc
jne
or
outsl
and
call
inc
xchg
pop
add
mov
adc
jmp
inc
movsl
in
cmp
inc
push
outsb
sbb
add
adc
push
mov
sti
mov
divl
mov
add
jno
hlt
sbb
cltd
dec
mov
cli
pop
das
shl
ret
test
fcomi
aad
scas
dec
gs
dec
sbb
cmc
fsubl
fucomi
pop
pop
scas
out
push
rcl
fldl2t
push
mov
aas
dec
cmp
or
bound
jne
jl
push
xchg
imul
data16
push
sub
and
shl
iret
enter
fnstsw
sub
popw
mov
imul
inc
fsubs
sarb
popf
lret
push
ret
dec
pop
dec
notb
mov
dec
push
out
test
xor
in
dec
mov
xor
jae
loopne
cld
enter
mov
popf
test
add
out
pop
push
mov
mov
popa
jb
arpl
cmp
decl
sub
dec
sbb
decl
mov
arpl
sbb
push
popa
jns
mov
int
and
cmp
sub
into
adc
jne
and
mov
js
cmovno
lods
loop
mov
jo
nop
xchg
enter
aam
mov
adc
xchg
out
mov
jge
cmpsb
dec
les
daa
push
jg
jp
fidivl
out
insb
loopne
dec
jmp
pop
mov
ds
inc
dec
sub
sbb
je
or
push
sub
rcr
or
imul
sahf
mov
arpl
daa
pop
pop
icebp
cmp
inc
addr16
dec
jg
arpl
push
inc
iret
stos
jg
cmp
cmp
add
call
and
mov
icebp
inc
gs
out
test
daa
mov
cs
rcrb
jle
test
bound
clc
js
aad
int3
push
push
and
jmp
push
ds
xchg
cmp
jp
and
add
pushf
imul
fsubrp
ret
xor
pop
pop
in
dec
adc
mov
vcvtpd2psy
shr
pop
ljmp
sub
dec
adc
dec
fwait
inc
sub
aam
push
mov
cmpsb
mov
jg
adcl
in
mov
jne
cmp
jb
jmp
sarb
jae
sbb
inc
mov
leave
sub
aas
add
push
sahf
jmp
mov
dec
adc
iret
jb
pop
mov
pop
stos
and
mov
cli
dec
or
inc
pop
inc
das
add
adc
out
flds
leave
push
mov
push
jmp
xor
add
enter
popl
out
andb
push
cli
cmp
mov
mov
sti
addb
roll
add
addl
ds
mov
push
in
stos
mov
xchg
add
stc
mov
add
xor
int
rorl
sub
push
je
sub
lock
out
mov
jo
fwait
shrb
pop
aam
sahf
add
mov
imul
add
jecxz
ljmp
outsl
xchg
pop
lock
ljmp
mov
pop
addr16
adcl
cmp
mov
mov
ret
outsl
dec
sahf
js
sub
sahf
fwait
jp
add
mov
xchg
mov
mov
xor
sbb
cmpsb
insl
mov
clc
xlat
mov
scas
fwait
dec
jl
test
addr16
ficomps
sbb
sub
testl
add
cmp
or
sbbb
jl
or
pushf
out
or
xchg
aas
fimuls
pop
cmp
cmp
scas
fsts
mov
push
and
mov
stos
xor
push
inc
mov
into
iret
in
mov
pop
push
xor
pop
and
aaa
btr
test
mov
test
aaa
and
push
nop
dec
and
mov
mov
jle
pushf
jne
mov
inc
and
out
pop
inc
dec
inc
mov
add
cmp
and
inc
mov
mov
ret
xor
fmuls
repnz
push
jle
adc
jle
shr
inc
pop
sub
cmp
jae
mov
sub
sbb
shrl
add
fisubl
push
cltd
mov
sti
xlat
loope
in
and
mov
jg
cmp
jno
cmp
enter
jae
lret
sahf
rorl
jl
shl
repnz
mov
dec
mov
jno
sub
jb
pop
les
jmp
shll
pushf
fs
nop
jns
and
mull
scas
movsl
jp
mov
dec
xor
jp
stos
dec
scas
sarl
ljmp
in
lods
les
mov
fistps
sub
sbb
jmp
dec
outsl
push
sub
inc
lods
dec
mov
or
ds
stos
pop
or
push
js
jo
pop
cmp
xchg
lcall
sbb
xchg
lcall
pop
and
sub
cld
bound
dec
mov
adc
incl
cwtl
roll
mov
pop
mov
shrl
push
fistl
mov
inc
jno
fsts
sub
push
mov
xchg
repz
lock
adc
xchg
xchg
jp
in
lock
jo
jnp
inc
cmp
cmpsb
adc
loopne
xchg
dec
lock
inc
sbb
mov
xchg
push
fcmovnb
xchg
out
cmp
leave
xor
and
aad
adc
push
je
sbbl
and
aam
jge
popf
mov
adc
mov
xor
ficoml
in
push
sub
sbb
fcomps
out
icebp
cmp
or
dec
inc
dec
icebp
cmp
pop
cld
mov
or
jg
js
mov
jo
mov
mov
mov
pop
inc
shll
jg
add
scas
stos
or
jmp
push
and
cwtl
xchg
add
mov
sbb
pop
or
adc
lods
fwait
in
mov
call
aaa
in
repz
inc
dec
nop
push
out
lods
jns
or
int3
lret
xor
xchg
ljmp
rolb
sub
add
out
popa
setbe
jge
sti
dec
aad
sub
sbb
push
cmc
cmp
roll
jmp
push
cmp
in
fcmovnb
out
cld
je
xchg
adc
daa
mov
or
dec
push
push
dec
in
xor
enter
sahf
push
adc
mov
inc
out
je
call
jo
sti
xor
sarl
mov
aaa
inc
mov
xor
jbe
pop
out
sbb
js
insb
push
add
xor
fwait
push
add
adc
in
xchg
xchg
xchg
shl
outsl
ds
aad
iret
loope
sbb
adc
pause
cmp
pop
sub
and
jmp
jbe
loope
xchg
mov
rcrb
mov
xchg
lea
les
icebp
cld
lret
push
mov
loope
popf
mov
xor
add
dec
data16
hlt
sbb
add
movaps
cli
pop
jnp
jns
mov
and
xor
push
mov
cltd
bound
sbb
inc
xchg
xchg
add
sbb
add
jl
xor
cmp
push
adc
xor
addl
add
sub
add
adcb
cld
xor
insl
and
test
loope
pop
leave
sti
xchg
das
xlat
cmp
xchg
dec
push
and
out
cmp
lods
mov
jae
pop
loop
xor
aam
inc
js
sub
adc
icebp
mov
shll
jmp
enter
aaa
dec
movsl
addr16
inc
movsb
fwait
xor
mov
int3
pop
js
mov
fs
adc
xchg
xor
sub
stos
xor
mov
sbb
je
mov
adc
adc
and
push
push
jnp
pop
inc
xor
fnstenv
fnstenv
mov
jns
xchg
nop
sbb
sahf
loopne
nop
lret
push
pop
push
fs
arpl
sar
jmp
xchg
and
sbb
or
sub
fisttpll
and
test
cltd
int3
fs
cmp
test
rorb
mov
pop
jmp
btr
sbb
pop
ja
push
shlb
sbb
adc
and
lds
icebp
inc
rcrl
fistl
and
repnz
jno
enter
inc
sbb
outsl
fwait
outsl
mov
push
xor
movb
push
adc
mov
sbb
jmp
mov
rolb
and
jbe
add
arpl
jmp
arpl
in
cmp
data16
ficompl
test
gs
jo
hlt
inc
xchg
pop
sub
ss
xor
mov
push
clc
and
push
mov
mov
in
int3
frstor
mov
cmc
adc
sub
mov
je
mov
dec
lods
cmpsb
jns
shr
pop
adc
fs
clc
mov
push
inc
pop
jp
test
xchg
jbe
xor
or
ret
push
test
mov
cmpsl
leave
pop
cli
add
hlt
in
xor
addr16
inc
repnz
adc
aas
sub
jae
mov
push
mov
stc
sbb
xor
rcrb
lods
sub
inc
in
decb
std
xor
ds
mov
push
nop
shrl
mov
mov
popl
pop
test
cli
data16
in
mov
xchg
aas
mov
repz
popf
push
mov
imul
cli
in
in
ljmp
sub
add
fcomi
jnp
push
test
and
in
cmp
cmpsb
sarl
jne
pop
mov
sub
dec
addr16
filds
push
mov
and
mov
jg
pop
jp
lcall
xor
mov
mov
jl
mov
mov
stos
bound
mov
mov
call
xchg
adc
push
sbbb
hlt
lret
jl
sub
sti
pushf
and
or
push
mov
jle
cmpsl
dec
sbb
repnz
adc
stos
pop
jae
sbbl
adc
or
mov
cmp
xchg
xor
in
hlt
mov
mov
dec
adc
imul
addr16
sbb
push
insw
sbb
das
mov
mov
push
mov
je
lock
inc
sahf
jg
pusha
sbb
in
mov
xor
andb
into
mov
adc
mov
or
jecxz
jnp
pop
mov
imul
push
adc
icebp
mov
ja
repz
mov
jge
jnp
dec
and
ds
out
insl
je
fs
push
inc
aad
push
in
lahf
and
lods
cmp
and
loopne
jae
imul
jbe
xchg
ret
pop
push
cltd
lahf
mov
xchg
sbb
inc
jg
xchg
arpl
jge
push
dec
cltd
sub
jmp
push
and
jg
xor
std
inc
bound
insl
add
mov
lea
pop
ja
xchg
adc
mov
mov
sbb
mov
xchg
jo
jp
or
inc
pop
popa
mov
sub
in
es
push
mov
cli
xor
sbb
pop
mov
lock
sub
movsb
dec
jmp
pop
adc
roll
test
rolb
push
mov
mov
push
int3
loope
out
xor
xchg
add
pop
mov
push
ja
jecxz
pushl
scas
int
push
inc
shrl
xor
mov
fs
cmc
jae
mov
mov
mov
xchg
loope
test
subl
stc
shlb
popf
popf
shlb
cmp
xchg
mov
fdivs
jp
loopne
ljmp
mov
dec
xchg
mov
fistl
pusha
cmc
les
mov
adc
mov
sahf
mov
das
testl
in
add
mov
cmpsb
outsl
adc
mov
inc
fwait
pop
fisubrs
mov
push
popa
std
dec
jl
call
sahf
sub
mov
ljmp
push
dec
lods
sub
dec
jge
imul
popa
popa
cmpl
hlt
pusha
push
cmp
push
lock
seta
repnz
sub
mov
repnz
ror
les
pushw
movsb
cmc
inc
xchg
fdivs
addr16
repnz
cld
in
pop
rcll
cltd
jecxz
popf
int3
lret
sbb
pusha
mov
push
movl
imul
push
cld
jo
fiaddl
and
fldt
push
fnstcw
push
imul
jl
inc
push
xchg
sub
cmp
sbb
dec
push
xor
and
daa
int
cmp
test
orl
adc
sub
aaa
pop
mov
sub
in
xlat
sub
dec
nop
cmp
and
mov
mov
aas
push
loope
push
dec
cmpsl
or
lds
push
mov
pop
scas
cmpsb
hlt
dec
xor
gs
out
mov
jmp
push
orb
sub
call
or
or
andb
shlb
dec
fmul
test
cmp
mov
dec
push
mov
xor
rclb
dec
test
in
push
movsl
adc
cmp
cs
dec
inc
and
shlb
dec
lds
xorl
push
stos
xor
sahf
ficompl
stos
add
mov
shrl
pop
sub
cmp
mov
push
lock
out
insb
insl
jbe
add
aas
inc
sahf
je
dec
out
add
mov
cmc
xchg
pop
dec
test
inc
sbb
adc
sahf
sbb
mov
inc
daa
sbb
xchg
xchg
lock
jae
loope
xchg
jl
jno
sahf
add
rcll
push
repnz
loopne
adc
mov
enter
mov
mov
sbb
fcmovbe
pop
ss
lret
movsb
push
push
daa
mov
out
mov
orb
jmp
dec
das
mov
fcompl
push
and
mov
add
pop
cmpsb
fldcw
mov
nop
xchg
and
test
roll
jge
imul
pop
dec
lds
fs
mov
xchg
ss
cmp
je
jae
negl
jno
dec
sub
enter
in
pop
cmpsl
imul
loop
ss
pop
repnz
out
cmpsl
sub
add
push
jmp
mov
es
insb
fcmovnbe
call
xor
sbb
push
pop
xor
lahf
lahf
mov
dec
cmp
jno
mov
pop
fldt
aam
ljmp
fadds
jecxz
xchg
cli
fiadds
xchg
je
push
cmpsl
scas
and
imul
outsb
xor
mov
shl
sbb
mov
sbb
sub
adc
and
mov
push
push
mov
idivl
and
mov
cmp
jg
imul
out
push
into
pop
lea
rolb
mov
jnp
lret
icebp
adc
mov
cmpb
push
sbb
jp
mov
dec
stos
pop
adc
popa
and
jne
pop
popf
xchg
stos
mov
mov
and
hlt
mov
sub
mov
xchg
mov
pop
cltd
idivl
jbe
shll
xchg
sbb
dec
mov
push
sti
adc
dec
inc
sub
pop
test
and
mov
pop
js
out
add
push
mov
lret
lea
shrl
cmpsl
jnp
and
push
fwait
pop
sti
arpl
push
add
cmp
inc
mov
aad
cs
clc
jp
jb
in
jne
into
lret
stc
xchg
or
ret
adc
and
fstps
mov
adc
lret
xchg
enter
xor
ljmp
inc
xor
xor
lods
imull
inc
or
testb
dec
lcall
loope
outsl
in
mov
repnz
movhps
gs
cmp
mov
or
out
sbb
movsb
ja
mov
cli
cld
mov
lcall
inc
pop
xor
aaa
in
mov
divb
mov
push
mov
jne
adc
das
ficoms
push
pop
icebp
ljmp
in
and
loope
sbb
mov
rep
rorb
add
pop
lods
xorb
imul
aad
cmp
push
adc
fucomi
mov
call
jns
out
or
jo
push
ja
cltd
mov
testl
popf
call
clc
pop
sub
lods
mull
dec
sub
cli
add
mov
jo
test
andl
mov
cmp
mov
out
movl
pop
cli
ja
test
adc
out
mov
loop
icebp
stos
or
mov
out
dec
in
adc
js
clc
pushf
or
jp
inc
pop
mov
fs
les
iret
call
repnz
xor
sub
out
ds
iret
sub
mov
insl
dec
lret
cmp
or
push
dec
jle
pop
dec
mov
cli
sbb
pop
out
mov
inc
test
adc
mov
and
xchg
mov
arpl
add
xor
es
or
push
icebp
loop
fimuls
add
push
push
xor
pop
mov
cmp
xchg
je
jp
mov
cmp
outsb
sbb
in
pusha
repz
xchg
mov
cmpsl
xchg
dec
cli
int3
fcom
sub
dec
and
mov
dec
pop
dec
stos
fisubrs
addr16
jl
sub
push
pop
ds
out
xor
es
fistps
in
mull
or
rolb
sub
sub
lahf
aaa
cmp
cmpl
scas
lcall
cmp
aad
into
lods
pusha
les
xchg
add
pop
jnp
aam
scas
jp
mov
shll
dec
mov
rol
notb
jo
js
xor
push
jmp
mov
daa
pop
mov
sub
cmpsb
pop
xor
mov
flds
push
add
push
in
push
add
mov
add
in
rcrl
je
fistl
sbb
stos
adc
lret
and
jecxz
bound
in
mov
iret
lea
mov
neg
in
fdivr
faddp
mov
sbb
aam
cli
mov
ss
das
ds
xor
push
dec
jle
jecxz
jnp
or
sbb
jns
repnz
push
push
sub
xchg
mov
mov
mov
add
sbb
insl
fisubrs
sbb
into
cmc
inc
jmp
jnp
and
add
int3
orb
mov
xor
xor
pop
sbb
mov
inc
imul
pop
sbb
adc
push
negl
insb
lahf
rcrl
sbb
jl
push
test
push
mov
mov
or
adcb
repnz
les
mov
push
icebp
inc
and
pop
mov
jp
adc
or
idivl
dec
sub
fcmovne
mov
ljmp
dec
sbb
in
pop
sub
mov
add
leave
scas
adc
pop
ljmp
cs
mov
jne
stc
into
notl
mov
xchg
xlat
das
or
cmp
iret
inc
sbb
adc
lods
je
daa
js
in
btc
pop
ja
ret
cld
cmp
xor
adc
mov
xor
cltd
data16
fcoml
imul
loop
xchg
fmull
in
sub
cmp
out
mov
or
push
push
pop
push
dec
dec
mov
insb
push
aam
fwait
jg
xchg
mov
into
js
cmc
rol
dec
push
or
shll
and
fisttpll
mov
movsb
dec
push
push
popa
stos
or
jge
adc
mov
jbe
push
arpl
jl
push
inc
or
push
inc
inc
add
jg
ss
leave
and
pop
cmp
outsb
flds
mov
ret
sbb
mov
bound
sbb
adc
dec
sub
xchg
notb
jle
arpl
xchg
and
arpl
mov
mov
rep
mov
adc
fidivl
decb
push
into
lret
das
push
sub
add
sbb
xor
mov
imul
or
xor
inc
movsb
cltd
loop
xor
clc
mov
daa
xchg
imul
ds
pop
ja
dec
call
imul
imul
cmpl
out
sub
and
icebp
mov
add
add
and
add
add
aam
add
add
inc
add
add
mov
add
add
add
add
add
add
add
add
lds
add
add
add
add
add
add
sti
stos
add
ja
mov
jg
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
jmp
push
push
push
pushl
call
push
pop
pop
ret
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
xor
add
pop
in
add
sub
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
in
add
in
in
add
in
add
fsubr
add
aam
add
int3
in
add
in
add
mov
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
sbb
add
and
add
sub
add
inc
in
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
in
add
add
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
push
out
add
pop
out
add
fs
add
insb
out
add
je
add
jl
add
test
add
xchg
out
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
add
mov
out
add
fsubr
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
lock
add
sbb
add
inc
lock
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
mov
lock
movsb
lock
pushf
lock
xchg
lock
mov
add
test
add
jl
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
fdiv
add
loopne
add
in
lock
add
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
js
add
cwtl
icebp
add
shl
add
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
adc
add
sbb
add
and
add
sub
add
xor
add
cmp
add
inc
repnz
push
repnz
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
jo
add
js
add
mov
add
pushf
repnz
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
