xchg
add
test
adc
mov
div
div
div
fcoml
out
inc
adc
jbe
xchg
ret
push
add
cmpsl
lea
cmp
loope
sub
rcrb
mov
les
xlat
ret
dec
add
jo
or
aas
mov
popf
cmpsl
add
outsl
in
cld
xchg
adc
scas
jecxz
cld
popf
mov
push
fadds
loop
lods
out
mov
mov
orl
andl
out
fwait
sti
and
ja
sub
jae
loop
test
sub
adc
mov
push
xchg
in
int3
cwtl
ret
pop
cs
sahf
les
push
sti
fs
nop
rorl
adc
push
sub
je
ljmp
dec
subl
popa
cmp
test
mov
cmp
xchg
out
sti
pop
mov
sbb
clc
xchg
mov
test
dec
inc
js
adc
mov
xor
sbb
push
cmp
fadds
fcomip
fisubrs
cmpsl
push
jne
xor
movb
mov
mov
xchg
popf
leave
test
dec
rcll
mov
pop
adc
leave
stos
jae
fiadds
rorl
xchg
mov
cs
mov
cmpsb
clc
add
jnp
pop
xor
pop
bnd
mov
inc
pop
and
xchg
lcall
or
sub
shl
lcall
xor
or
punpcklwd
or
jno
add
jb
jle
push
mov
fiadds
fnsave
notb
jmp
mov
test
shl
loop
int
js
in
jns
mov
mov
push
fnsave
push
mov
pop
xchg
cmpb
sbb
mov
ljmp
stos
loope
cmpsl
and
jae
cmpsl
jbe
inc
cli
aaa
insb
aad
push
hlt
sub
jns
adc
loopne
jl
andl
in
movsb
lret
les
ficoml
mov
and
or
notb
and
xor
aad
jp
dec
movsb
fwait
or
aaa
js
mov
mov
push
xchg
test
push
inc
fsubs
jae
cli
js
insb
dec
xchg
xchg
dec
add
sbb
outsl
inc
dec
add
add
lods
and
jno
sbb
int
andl
fisttpll
lret
in
mov
inc
dec
jbe
movsb
add
mov
inc
mov
jl
ss
xor
in
jg
lret
sub
into
es
lds
clc
sbb
lret
test
shl
lret
lret
arpl
pusha
mov
sbb
insb
mov
cld
pop
out
xor
orl
das
pop
sahf
push
movsb
lods
cmp
imul
and
aas
sahf
push
inc
int
movsb
pushf
rcl
mov
mov
dec
rclb
xchg
push
lahf
outsl
rcrb
fisubrs
ljmp
push
xchg
sub
dec
test
repz
je
mov
inc
sbb
rorb
out
loopne
rcrl
adc
arpl
mov
xchg
dec
jae
sub
mov
mov
sar
rcr
xchg
pop
les
mov
sub
loop
push
sarb
adc
popa
cltd
aad
sub
jge
adc
pop
lods
jle
fimuls
insl
dec
cmp
ror
lds
mov
xchg
or
ds
dec
push
sub
int3
aam
dec
dec
xchg
add
mov
dec
and
inc
sub
jno
sub
lds
shrb
and
leave
in
scas
mov
dec
sbb
mov
popa
and
clc
cs
push
push
push
sub
mov
fs
pop
jo
pop
loop
fnstcw
fdivs
xchg
test
xchg
mov
aam
lahf
jmp
cmp
ficoml
jge
cmp
pop
push
pop
std
xchg
xchg
rorb
mov
mov
and
decl
mov
mov
mov
adc
sub
push
dec
sub
repz
mov
pop
fcmovbe
mov
test
dec
jo
xor
leave
fndisi(8087
cmp
pop
shl
xor
loopne
add
cmp
sub
cmp
hlt
inc
sar
xor
or
xchg
and
ds
out
out
cmp
adc
sarl
ja
imul
lods
std
add
mov
sub
mov
sub
cmp
dec
fcompl
adc
and
xchg
pop
pop
daa
mov
fs
mov
call
stos
inc
sub
loopne
bound
lods
pop
rclb
inc
mov
lds
lds
and
sti
leave
jae
dec
xchg
loopne
jbe
jb
std
jns
popf
imul
mov
xchg
push
pop
jns
test
dec
mov
mov
jge
sti
jl
mov
notl
inc
or
mov
mov
jmp
xchg
xor
push
mov
push
outsl
add
out
xchg
int3
mov
daa
popf
test
js
push
or
cmp
pop
push
icebp
pop
dec
test
iret
cmp
mov
inc
int3
cmpsb
scas
adcb
mov
xchg
jae
cltd
or
adc
movlps
popf
fdivl
jle
sbb
xchg
adc
mov
rcl
xchg
sub
jnp
pop
pusha
shlb
pop
je
cmc
lods
fs
xchg
fisubrl
out
mov
add
js
adcl
stc
adc
ljmp
sti
enter
mov
sahf
jo
out
call
mov
xchg
mov
inc
out
mov
loope
fldt
add
sbb
fcmovne
stos
lock
add
cmp
movsb
push
shl
mov
adc
cltd
adc
mov
push
aam
nop
add
dec
push
xchg
sub
les
dec
lods
test
mov
jb
mov
ds
mov
in
mov
mov
repz
popa
mov
sub
pop
mov
pop
mov
int
in
aas
pop
loop
sbb
pop
das
inc
push
fnstenv
sbb
sahf
add
mov
neg
jo
adc
jns
pop
and
mov
lret
into
stc
iret
sub
inc
movsb
clc
push
lds
sub
movsb
mov
mov
dec
fs
fisubl
add
inc
or
imul
ret
pop
iret
cmp
push
mov
hlt
mov
xchg
adc
mov
daa
loopne
stc
aas
movsb
mov
mov
repz
mov
pop
push
push
insl
out
mov
emms
mov
xor
xor
xchg
or
mov
mov
out
push
push
sbb
clc
jae
lret
js
aaa
out
inc
out
cmp
or
fs
pop
pop
notl
push
push
lods
popf
xchg
stos
or
cwtl
or
push
jle
mov
insl
aad
lea
cmpsl
jo
jg
arpl
inc
lahf
xor
insl
mov
xor
andl
xor
xchg
adc
xor
xchg
adc
popa
paddsw
dec
aas
arpl
mov
adc
push
mov
mov
outsl
mov
test
mov
hlt
scas
cld
or
popf
jnp
ds
jns
mov
adc
and
notb
push
int3
and
lock
notb
and
fldcw
or
push
cmp
push
sbb
xor
or
xchg
mov
cs
fwait
add
mov
notb
mov
daa
in
nop
lods
std
xchg
fidivrl
fsubs
adc
sbb
sbbl
lcall
xchg
cmp
push
test
xor
movsb
hlt
and
maxps
push
test
push
call
jecxz
rolb
outsl
rorb
add
sbb
aam
insl
pop
xor
adc
and
sub
in
mov
test
sub
inc
int
inc
push
into
lds
sti
je
hlt
mov
add
or
jmp
aaa
push
sbb
sarl
cwtl
and
cltd
fisubrs
sbb
stos
jae
mov
jecxz
es
or
cmpsb
and
jmp
fisttps
mov
shrl
jle
jnp
cmp
daa
repz
hlt
divl
lds
pop
mov
mov
dec
lds
inc
out
mov
aas
push
sbb
int
lret
push
emms
xchg
or
lahf
mov
cmc
jl
dec
fbstp
frstor
mov
inc
aam
in
add
fwait
mov
jp
sbb
and
test
add
mov
adc
mov
icebp
push
ret
mov
xor
sbb
mov
insb
sub
xchg
or
sbb
imul
xor
icebp
dec
or
int
daa
lcall
subb
in
dec
push
add
lcall
cld
arpl
icebp
rcl
jo
inc
add
push
hlt
push
mov
or
jl
jno
cwtl
adc
loopne
or
jnp
lahf
sbb
inc
or
or
in
aad
ja
adc
jae
xchg
push
js
push
clc
push
ret
fsubrl
mov
aad
scas
cmpsl
mov
and
rclb
in
push
and
scas
cli
add
daa
and
fbstp
pop
or
xor
sbbl
ljmp
es
arpl
jo
negb
cmp
pushf
or
pop
lods
in
xchg
dec
nop
movsl
jns
test
stos
pop
out
and
cmp
lret
mov
ret
fwait
loopne
cmc
adc
xchg
push
cmp
idivl
mov
pop
fs
add
fs
jl
push
lods
push
aam
cmp
out
mov
and
lahf
test
xchg
movsl
push
clc
pop
insl
cmp
pop
leave
add
jns
push
mov
jg
push
call
adc
jb
lods
push
xor
inc
xor
js
mov
sti
pop
mov
fists
cmp
out
aas
ljmp
mov
mov
scas
cmp
fistpll
pop
inc
sbb
stos
cmp
cltd
insb
cmp
in
adc
jp
jge
xlat
jns
mov
mov
sbb
add
iret
mov
push
jno
out
in
ljmp
fsub
jb
jmp
xchg
mov
loopne
fwait
repnz
inc
gs
mov
cmp
ljmp
repnz
jmp
sbb
fists
mov
jge
out
ja
insb
shl
cmc
pop
lsl
push
aam
mov
aad
push
push
aad
stos
fucompp
addr16
fistpll
int3
inc
jne
adc
jg
gs
push
fs
shlb
inc
xchg
pusha
lahf
xor
mov
lret
adc
mov
in
cmp
push
hlt
shlb
rcrb
and
adc
cmp
jl
cmc
iret
cmpsb
add
push
loope
or
fs
or
jle
or
imul
inc
cmp
ficoms
test
lods
inc
fsubrp
ljmp
jle
add
dec
jp
mov
hlt
and
sbb
inc
fcmovne
imul
nop
xlat
test
aaa
and
xchg
push
and
mov
stos
push
ja
test
in
stos
and
sarb
nop
or
xor
inc
sbb
popa
gs
movsb
inc
inc
or
movsb
into
dec
jmp
aam
js
out
push
mov
shrl
outsl
subb
inc
fbld
sti
cmp
pop
rcr
ret
dec
xchg
pushf
pop
shll
jne
dec
cltd
in
pusha
movsl
pop
xchg
orb
fists
sbb
or
xchg
pushfw
add
adc
cmp
lahf
stos
loope
jne
insl
dec
xchg
pop
sub
or
lock
or
or
xchg
push
push
pushf
cmp
stos
cmc
inc
push
adc
xchg
cs
push
sub
add
cltd
inc
push
test
fs
xor
and
ss
aaa
test
ror
sbb
pushf
sub
mov
or
aam
aad
movsl
cmpsl
fiadds
pop
jns
mov
pop
sub
push
xor
arpl
cmp
and
jns
dec
sahf
pop
pop
iret
mov
test
movsl
jg
fisttps
daa
sti
or
dec
aas
jne
mov
cmp
lcall
bound
jle
movsb
xchg
fcoml
lahf
dec
adc
lods
in
cmpsl
rcrl
mov
push
dec
and
fnstsw
arpl
lods
fs
xchg
shl
xchg
outsb
lea
movsl
inc
mov
fstps
js
aad
sarl
mov
enter
lcall
inc
jp
jae
into
addl
dec
dec
xor
and
lods
or
xor
std
shlb
out
push
les
add
test
cmpsl
jl
lret
jcxz,pn
mov
add
test
xor
push
lcall
xchg
or
xchg
addl
sub
xchg
adc
js
adc
out
imul
int3
pushf
jle
sbb
cltd
ret
cmp
jbe
loop
jge
js
fisubrl
pop
pop
mov
les
arpl
jmp
stos
mov
xorl
divl
mov
lcall
mov
or
pushf
pop
and
scas
sbb
dec
inc
inc
adc
fildll
adc
lods
jnp
pusha
test
pop
fidivrs
lret
push
pusha
sarb
int
sub
int3
pop
lahf
jne
mov
mov
mov
jle
inc
push
mov
dec
jge
mov
ja
pop
fidivl
adc
fists
push
je
jle
mov
xor
rcrb
out
mov
xlat
or
bound
cli
js
stos
pop
mov
enter
bound
sub
xorb
push
divl
dec
dec
mov
dec
insb
push
daa
clc
jmp
pop
lods
mov
rolb
and
push
xor
faddl
mov
in
jl
or
shr
outsb
leave
call
xor
and
and
jns
mov
pop
mov
jl
cld
xor
mov
cs
insl
movsb
xor
and
aaa
scas
fsubrs
out
mov
sbb
pop
and
or
sub
adc
sbb
mov
or
leave
fucomip
xchg
mov
sti
fistpl
or
adc
fcomp
and
jo
outsl
sbb
mov
aam
jo
leave
dec
leave
je
pop
rclb
dec
adc
iret
lret
lret
dec
cmp
jb
add
lods
xchg
cld
loope
add
repnz
icebp
mov
cltd
jle
outsl
insl
shll
je
mov
and
xchg
int
adc
pop
cmpl
mov
sub
pop
pop
mov
inc
cmp
and
dec
sub
es
sub
cli
sub
nop
mov
cmc
jg
adc
pop
nop
and
push
mov
lea
adc
cmp
cmpsb
jne
fimull
pop
mov
jmp
xchg
sbb
sub
jb
and
shll
mulb
push
in
imul
jnp
jmp
dec
inc
sub
xchg
cmp
outsl
scas
cwtl
dec
jae
xadd
mov
icebp
adc
jbe
ja
clc
lock
mov
leave
sbb
jecxz
fwait
loope
lret
xchg
jg
cwtl
test
cld
inc
inc
int
fcompl
out
mov
fdivl
push
xchg
push
push
in
out
xchg
dec
inc
scas
fisttps
adc
sbb
popf
nop
std
xor
call
sbb
lods
inc
in
jp
lock
out
das
inc
sub
jno
add
inc
cmp
mov
adc
add
xchg
cmp
and
cltd
divl
jp
jo
mov
add
cmp
inc
je
or
popf
add
mov
pop
jge
pop
adc
lock
bound
std
out
iret
fwait
pop
xor
mov
mov
pusha
cmp
sub
xchg
ss
jnp
xchg
int3
dec
nop
cli
mov
addr16
andb
movsb
pop
jne
test
lcall
inc
cmpb
pushf
stc
cmp
int
lods
out
addr16
jle
icebp
dec
or
in
cli
out
lret
into
mov
lcall
lods
daa
inc
subl
inc
fwait
out
stos
ljmp
out
fdivrs
dec
cld
dec
std
mov
repnz
pop
mov
jl
push
gs
inc
shlb
frstor
cld
add
push
cmp
jge
movsl
xor
add
stos
lret
cmp
je
add
fcmove
es
stc
mov
and
fwait
movsl
cmpsl
pop
cwtl
mov
bound
test
sub
or
shl
mov
lods
mov
xorl
imul
xchg
cs
aaa
mov
xchg
jmp
xchg
mov
pusha
xchg
fiadds
mov
pop
nop
cmpsl
dec
lahf
mov
insl
popa
mov
mov
mov
add
lret
call
mov
sbb
inc
adc
sbb
ds
shrl
addr16
cmpsl
call
pop
cmc
orb
fwait
cs
std
int
roll
inc
and
cmp
push
leave
aas
and
fisttpl
popf
into
mov
xchg
scas
cmp
and
xchg
push
in
ret
fs
inc
sub
or
pop
out
pop
sub
xchg
add
sbb
push
dec
lods
lods
adc
and
pusha
addb
inc
lahf
mov
inc
push
frstor
cltd
popf
adc
push
push
push
push
das
rorl
lods
xor
arpl
stc
cmpsb
inc
mov
nop
shll
dec
nop
movsb
pop
lret
pop
mov
mov
rcrb
pop
test
sahf
cmpsb
pop
jb
es
jne
xor
cmp
andb
lcall
pop
popf
pop
add
in
pop
push
out
test
inc
push
mov
fwait
adc
je
and
test
aas
inc
xchg
or
dec
test
lea
cmc
adc
int
outsb
shll
pusha
jns
mov
outsb
mov
jo
jne
out
popa
push
or
stos
adc
inc
cmp
loopne
dec
dec
sbb
int
lock
out
mov
iret
push
shrb
andl
dec
mov
push
stos
lcall
inc
jne
subb
pusha
lret
dec
sti
test
cmpsl
loop
sbb
nop
mov
ret
and
scas
add
pop
and
stos
cmc
inc
and
subl
inc
in
imul
jbe
xor
xchg
sub
iret
pop
cmpsl
dec
lret
xor
fstl
jp
inc
mov
movsl
mov
xor
cmp
xchg
in
daa
jo
cmp
lds
mov
mov
scas
js
int3
xchg
stos
and
mov
push
mov
lahf
push
or
dec
dec
out
imul
mov
push
jbe
popa
adc
add
mov
or
push
sbb
adc
mov
sub
or
push
outsb
mov
testb
sbb
test
aaa
mov
sbb
cld
and
mov
lock
lret
xchg
mov
mov
push
dec
lret
dec
into
cmp
push
outsl
scas
lcall
jnp
jl
xchg
add
inc
nop
ret
std
pop
dec
jae
xchg
mov
cmp
cmp
in
pop
mov
lcall
sub
pop
insl
cmp
sahf
cmp
or
jg
lahf
mov
loop
aas
jmp
xchg
sub
cli
imul
fdivr
es
or
cmp
jl
addr16
icebp
leave
adc
jns
int
decl
insl
add
sub
loopne
repz
insl
mov
mov
jg
jne
data16
cmpsb
cmc
daa
out
mov
sub
pop
jmpw
pop
movsb
and
fs
or
pop
fstps
mov
add
rep
movsb
out
or
ret
xchg
xor
faddp
jns
or
pop
ss
jge
jl
stc
gs
jne
jg
xchg
and
jmp
mov
cltd
dec
jge
push
or
add
test
aam
loope
sar
mov
mov
jne
adc
push
mov
arpl
notl
push
ds
addl
into
mov
cltd
cmc
mov
push
cmp
les
ret
pusha
popa
test
cwtl
sahf
popa
pop
cmpsb
test
fsubrs
push
dec
aaa
push
jae
dec
xor
into
sbb
pop
or
insb
xchg
addr16
or
sarb
xchg
out
fnop
jle
push
fbstp
or
or
int3
pop
lock
dec
xor
dec
lock
je
add
push
stos
mov
sub
cmpb
repz
mov
aad
mov
out
xor
test
jns
jge
dec
or
insb
aaa
pop
repnz
lock
ret
and
sub
mov
rcll
lods
add
push
or
jne
arpl
dec
jecxz
pop
movsb
adc
out
fwait
scas
in
aas
inc
ja
dec
mov
xorb
sub
adc
xor
xchg
pushf
push
jg
loop
adc
pop
fidivs
mov
shll
out
aas
stc
sub
or
xchg
daa
push
out
fwait
lahf
in
loopne
aam
ljmp
cmp
inc
in
push
cmp
xor
cmpsb
ljmp
test
aas
fdiv
outsb
mov
cmp
push
mov
loop
jb
dec
ss
inc
mov
xchg
stos
xchg
iret
bnd
repz
dec
and
fldcw
movl
jno
dec
repz
mov
aam
mov
and
addr16
in
jae
xor
rolb
jne
jge
mov
les
mov
rolb
add
cmp
xor
inc
out
inc
mov
and
xchg
sub
cs
out
popf
in
int3
pop
rclb
mov
testb
sbb
mov
sub
dec
repz
xchg
cmpsl
mov
mov
fstl
jb
sbb
gs
sbb
ret
fildll
add
imul
decb
popf
cltd
mov
insl
mul
xchg
fisttpll
mov
dec
inc
iret
push
lock
lahf
dec
push
pusha
push
bound
cmp
add
sbb
add
arpl
inc
or
andl
ds
push
push
mov
aas
adc
daa
imul
or
cmp
lods
mov
push
rcl
or
inc
jno
mov
jmp
ret
insl
fistps
repnz
fisttps
adc
test
jecxz
js
sbb
shrb
cld
xchg
pop
dec
mov
sbb
sbb
cmpsl
inc
xchg
fmull
into
inc
push
fisttps
mov
xor
mov
scas
stc
jae
cmp
in
inc
dec
pop
xchg
and
sub
in
rorl
scas
xchg
or
or
leave
pop
out
cmp
cltd
cmc
mov
arpl
add
sub
mov
add
nop
jecxz
in
pop
mov
pop
test
mov
or
lds
popf
sbb
jl
jecxz
dec
jl
mov
xor
mov
and
pop
adc
fstl
mov
sti
inc
dec
clc
in
xor
ss
mov
mov
out
mov
fsubrp
inc
pop
cmc
sbb
nop
inc
or
push
mov
jl
add
cmp
lcall
insb
add
daa
not
adc
lods
cmp
xlat
cld
mov
sbb
rolb
dec
xor
out
test
hlt
aaa
push
pop
mov
and
hlt
jne
push
stos
ljmp
vunpckhps
inc
pop
push
cmp
daa
push
inc
dec
ficompl
shrd
fmulp
in
dec
mov
aad
cltd
loop
leave
addb
loope
dec
lds
daa
pop
gs
shlb
in
or
xor
push
cmp
repnz
sbb
in
ds
push
into
dec
jns
xchg
mov
add
inc
xchg
adc
and
pop
lea
enter
dec
jno
mov
sbb
ja
jb
add
inc
or
push
add
add
jle
filds
dec
das
dec
out
jb
mov
mulb
fdivl
iret
add
jns
inc
cmpsl
test
addr16
push
cmc
mov
mov
out
int
sub
mov
lods
and
out
lods
mov
stc
das
dec
cwtl
mov
ja
popa
call
pop
xchg
sub
and
out
sub
push
jge
or
clc
and
cld
orl
imul
pop
jbe
mov
aaa
mov
jnp
ficomps
adc
iret
inc
popa
shrl
mov
xchg
movq
adc
lock
and
test
mov
dec
jmp
outsl
mov
sub
cltd
test
cld
ret
push
jl
cmp
cmc
xchg
lret
and
xchg
mov
sub
inc
shl
out
das
sbb
shrb
sub
xor
mov
push
inc
mov
sarl
insl
cli
adc
sbb
vpcmpgtw
or
sub
testb
test
jb
test
sbb
push
and
jae
xorl
aad
cmp
jl
sahf
nop
dec
inc
shlb
add
mov
dec
mov
xor
adc
call
cltd
cmp
jecxz
fidivs
and
sarb
mov
popf
je
mov
jne
shlb
lods
std
fcomps
cs
mov
xadd
stc
mov
lcall
test
pop
daa
or
call
pusha
enter
call
movsb
push
sub
xor
mov
mov
lea
in
or
movsl
adc
insb
sti
push
divl
and
sub
bound
pop
es
data16
xchg
notl
call
sub
xchg
jg
ret
cld
push
jae
stc
pop
xchg
ja
jns
push
mov
xor
inc
repnz
enter
push
push
mov
flds
mov
and
lcall
jno
psraw
jecxz
lahf
sub
out
jo
dec
add
and
fwait
lock
dec
pop
push
aaa
ss
test
mov
call
or
xchg
jle
jle
aaa
sarl
scas
shrb
psubd
cmpl
dec
jp
aaa
xchg
mov
pusha
pusha
mov
into
mov
jns
pop
repnz
mov
out
sahf
cmp
aam
fwait
shlb
sbb
add
lcall
mov
repz
leave
or
movsl
mov
xchg
dec
or
loop
cmpb
push
add
sbb
ljmp
push
sbb
adc
sub
sub
xor
xor
cltd
mov
or
cli
test
movsl
mov
add
pop
and
mov
and
repnz
std
cmp
fwait
arpl
pop
mov
inc
inc
addr16
pop
cmp
shlb
mov
daa
xchg
mov
sbb
jmp
jns
cmp
ljmp
sub
adc
jbe
decl
fimull
inc
xchg
ret
sahf
fcomps
sbb
clc
js
mov
lahf
adc
aam
std
outsl
cli
test
packuswb
adc
movsl
fwait
ret
jno
stc
sbb
or
or
int3
sbb
nop
pop
and
pop
pushl
lock
pushf
into
out
int3
enter
cli
cmc
adc
push
inc
ljmp
cmp
jle
sbb
add
pop
or
sarl
sahf
fiaddl
adc
lds
scas
inc
xor
inc
pop
mov
push
push
cmpsb
pop
stos
mov
cmp
jle
fnsave
in
add
std
mov
imul
iret
cs
pusha
mov
xor
daa
rcrb
testb
mov
sbb
push
aas
inc
adc
xchg
add
and
repnz
xchg
inc
jmp
loope
roll
fisttps
mov
inc
push
and
clc
out
jns
xchg
push
push
mov
inc
and
and
xchg
ret
popa
leave
loopne
push
push
icebp
jo
repnz
pop
adc
call
ss
xor
lea
pop
ja
decb
js
int3
aas
mov
cmp
inc
imul
cmpsb
movsb
mov
add
or
negl
mov
int
clc
mov
cmc
fs
pusha
push
sub
insb
outsl
adc
and
mov
pop
cmpsb
fldenv
stos
les
repz
mov
mov
cmp
lods
adc
sbb
les
out
loopne
push
lahf
mov
mov
xchg
jmp
push
and
enter
mov
mov
push
adc
xor
mov
sbb
sub
jmp
xor
int
js
and
cmpsb
xor
push
mov
dec
sub
fstps
pop
jb
and
in
fildll
dec
mov
push
cmc
push
add
add
in
push
sahf
loopne
lods
push
push
cmp
jmp
xchg
inc
add
cmpsl
mov
and
jae
mov
pop
add
push
movsl
pop
or
pop
fnstenv
loopne
scas
sahf
adc
repz
fs
fdivs
enter
aam
cmp
dec
inc
add
loope
call
sbb
std
je
loop
inc
inc
xchg
sar
movsb
cmp
inc
sub
cmp
push
dec
inc
xchg
jo
push
js
and
xor
mov
inc
arpl
and
sbbl
pop
mov
dec
shld
sub
pop
out
jmp
cmc
dec
jge
int
fs
or
leave
pop
aas
push
dec
cmp
in
addr16
xchg
lret
inc
and
out
fisubrl
dec
or
add
push
jnp
loope
xor
xchg
and
and
cmp
ret
test
clc
not
or
pop
jbe
lock
stos
xchg
push
insb
sbb
push
cmp
xor
call
xchg
add
nop
mov
sub
jbe
adc
pop
ja
leave
and
xchg
pop
add
out
mov
jp
repz
movsl
ret
adc
add
ss
cmp
ficomps
loope
cmp
in
xor
fldcw
jecxz
sub
dec
fwait
mov
in
dec
xor
out
pop
out
push
mov
push
sub
insb
xbegin
lcall
add
inc
push
mov
cli
ds
mov
loop
rclb
jae
jns
sbb
lods
xchg
and
lods
mov
popa
mov
sub
inc
aas
mov
test
mov
add
adc
inc
hlt
jo
fs
jg
movsl
adc
xchg
movsb
jbe
out
jae
out
test
sbb
sbb
pop
ret
cwtl
and
cmp
mov
scas
repz
xor
inc
sub
repz
nop
jo
fcoms
xorl
xchg
jb
push
inc
pop
les
lea
repz
js
pop
bound
mov
and
popa
roll
jg
mov
jne
lock
sbb
popf
push
adc
int3
jo
push
cli
cmp
or
les
mov
leave
out
push
out
xchg
fwait
sub
jno
adc
jle
cmp
push
pop
jns
jnp
inc
pop
rcrl
xor
daa
lods
sti
cmpsl
mov
aas
popa
mov
mov
pop
mull
mov
jnp
lds
stos
int3
dec
pushf
mov
daa
adc
add
std
push
push
jae
sti
enter
mov
int3
fmuls
jae
or
mov
jmp
sti
inc
fs
xchg
movsl
hlt
hlt
int
mov
pop
mov
mov
ja
pop
mov
daa
std
ror
mov
sub
div
xchg
pop
adc
or
inc
je
and
fiaddl
push
shrl
xchg
repz
aam
push
sbb
popa
flds
lds
and
popf
loopne
jp
ret
pop
sub
ljmp
sub
lds
fmulp
call
add
pop
pop
mov
pop
add
push
sub
mov
inc
sbb
pusha
call
xchg
orl
sarb
xchg
ffree
mov
lret
imulb
sahf
ja
mov
and
cmpl
cmpsl
das
insb
xor
cmc
and
push
xor
mov
dec
sbb
mov
out
cmpsl
icebp
jo
aad
dec
aad
loop
sub
scas
call
xchg
test
mov
pusha
stc
frstor
out
out
int3
gs
outsl
cli
loope
dec
xor
adc
push
jbe
mov
ret
dec
js
rcl
dec
dec
mov
xor
ret
ljmp
shl
sub
fdivrl
mov
xor
jo
mov
pop
daa
add
push
in
mov
push
mov
sbb
iret
jl
mov
cmpl
sub
outsb
jne
in
scas
pop
push
cwtl
add
inc
add
arpl
cmp
iret
inc
imul
loope
shlb
pop
loope
jge
imul
xchg
repnz
cmpsl
add
ss
fiadds
pop
push
sub
mov
mov
imul
cmp
dec
popf
xchg
push
adc
mov
mov
fwait
subb
push
jge
std
std
and
sbb
in
shll
and
or
dec
pop
add
xor
sarb
dec
push
jge
and
cs
out
ror
and
xor
daa
call
jmp
cld
adc
push
and
and
cmp
cli
sbb
mov
ljmp
mov
js
popa
mov
pop
and
sbb
mov
jp
adc
inc
xor
pusha
loop
mov
push
jnp
mov
ret
mov
inc
out
outsl
repz
in
outsl
loopne
and
rolb
dec
lock
movb
popa
daa
mov
arpl
je
loop
aaa
outsb
rcrl
push
mov
xchg
dec
fcmovnbe
std
gs
test
adc
mov
pop
push
inc
or
adc
sub
in
xchg
adc
cs
sbb
xor
mov
into
out
out
sub
test
popf
lahf
aaa
cmc
les
pop
add
push
int
std
loop
xchg
inc
sub
loop
add
daa
sub
push
mov
xchg
lods
movsl
hlt
into
imull
popf
testb
pop
jnp
xchg
xchg
xchg
data16
hlt
mov
scas
imul
cmp
mov
add
and
mov
mov
sbb
subb
adc
scas
jecxz
hlt
and
jl
and
or
sbb
or
or
stos
lea
in
sub
movsl
mov
push
add
cltd
mov
aaa
jle
jb
and
dec
xchg
out
int
pop
jge
dec
ljmp
cld
sub
adc
sub
mov
lods
mov
mov
fdivrs
or
xchg
js
rolb
ret
mov
mov
mov
sbb
daa
sbbb
shrl
xchg
mov
xor
jno,pn
push
mov
rcrb
mov
sbb
cmpsb
repnz
fsubrl
repnz
outsb
dec
add
fmulp
loopne
adc
scas
push
call
iret
pop
push
out
stos
push
fsubl
jae
inc
loope
movsb
pop
mov
sti
pop
jns
inc
mov
sub
inc
in
pop
inc
scas
loop
loope
in
dec
push
clc
lock
cmpsl
dec
xchg
add
stc
sub
pop
aas
mov
imul
pop
sub
push
stc
jl
fs
push
mov
sbb
mov
sub
cmp
int3
cmpb
fsubl
xchg
cld
adc
pop
cmp
jle
and
xor
out
adc
scas
daa
dec
jb
xor
mov
nop
ds
push
outsb
xor
dec
imul
movsl
jae
je
pop
push
sub
cmpb
jge
lods
sbb
movsb
or
dec
cmp
int3
dec
test
in
and
popf
cmpsb
inc
mov
xchg
int3
lea
jo
add
mov
jg
das
xor
jmp
mov
dec
adc
in
dec
mov
sti
inc
mov
dec
mov
mov
add
out
xchg
movsl
xor
push
xchg
adcb
mov
das
lea
clc
adc
clc
lcall
cs
push
ds
xchg
xor
enter
jl
stc
xchg
jae
add
or
mov
or
inc
xor
ja
fs
xchg
insl
in
mov
push
push
mov
mov
mov
bound
or
lock
push
add
aaa
jg
enter
jp
inc
neg
dec
out
or
sub
aam
jle
ljmp
mov
adc
imul
jne
jp
scas
mov
add
nop
js
ret
fsubrs
sarb
sahf
ror
dec
bound
push
enter
fucom
add
mov
inc
adc
xchg
iret
mov
test
mov
xchg
mov
data16
push
fistps
cmpsb
outsl
pop
push
cld
repnz
xchg
add
ja
mov
jp
mov
inc
rolb
inc
sub
jbe
jb
jp
pop
aaa
push
push
add
stos
inc
sub
pop
loope
xlat
jmp
cld
adc
stos
mov
arpl
pusha
cmpb
lea
mov
in
outsb
fwait
dec
outsl
sbb
push
xchg
adc
jp
sahf
jge
in
mov
sub
sub
aas
xor
movsb
sbb
jmp
or
and
aam
test
mov
jno
insl
sbb
xchg
or
mov
mov
mov
jno
fdivl
pop
testb
mov
xchg
cmp
pop
inc
cwtl
loope
aas
xchg
jbe
das
xchg
ret
test
push
push
or
leave
mov
push
insl
out
dec
fisubrl
xchg
jle
mov
movsb
sbb
mov
test
adc
aad
out
repz
shrb
ffreep
pop
push
shr
xor
mov
cmp
jne
sarb
iret
icebp
ret
in
jmp
jns
fldl
xchg
or
lcall
shrl
xchg
mov
pop
sbb
loope
lcall
sbb
sub
into
xor
or
and
mov
xchg
divb
mov
mov
sub
inc
es
mov
enter
or
gs
adcl
sub
or
inc
jl
push
cltd
add
mov
adc
pop
orb
sub
movsl
fadd
int
out
jmp
pop
js
jp
push
lcall
jecxz
inc
xor
jae
out
add
mov
mov
gs
das
in
bound
mov
push
ss
mov
sub
pop
insl
lock
jnp
in
cmc
push
and
dec
xor
lds
adc
mov
cwtl
nop
or
push
sub
rcll
push
and
inc
insb
mov
out
mov
add
int
in
outsl
and
pop
sti
gs
jg
in
push
jb
sbb
jo
iret
inc
cmp
sub
mov
sub
movsl
jg
and
out
dec
sbb
inc
xor
test
inc
loopne
fildll
push
test
xor
lock
stc
hlt
ds
fimull
mov
lods
mov
in
stos
iret
hlt
ds
popf
fs
rolb
push
rorl
cltd
jns
mov
xchg
pushf
js
in
bound
gs
lcall
aam
aas
stos
test
jne
mov
data16
or
jl
mov
dec
xchg
mov
scas
pop
rcl
out
and
movsl
push
adc
mov
push
xchg
fcomps
insl
or
jmp
out
faddl
popa
aaa
stc
test
outsl
hlt
and
jecxz
fisubl
xor
pushf
dec
pop
cmpb
icebp
mov
ret
scas
rolb
nop
std
js
push
push
xchg
movsl
push
inc
mov
jns
pop
js
push
fcmovb
cltd
notl
xor
mov
xchg
and
add
mov
lcall
rcrb
popf
pop
addb
adc
andb
inc
sbb
fs
cwtl
mov
push
nop
pop
lret
xchg
mov
mov
jecxz
sbb
js
loopne
int
and
adc
dec
jbe
mov
sahf
fwait
int3
mov
mov
pop
iret
lret
pop
push
and
stos
sub
andl
dec
outsb
adc
lret
sti
pop
jl
repz
outsb
ss
adc
push
and
jmp
cld
cmp
movsb
test
dec
xchg
mov
popa
stos
lock
inc
ret
shlb
push
sub
aam
movsl
ja
push
or
jl
jl
outsl
outsl
addr16
bound
data16
lcall
push
or
mov
xchg
enter
popa
cld
dec
jnp
pop
scas
es
lret
repz
add
cld
inc
pop
aam
cmp
data16
in
add
cmp
xchg
ds
sarl
ja
sbb
pop
inc
push
sahf
pop
push
arpl
mov
aam
out
add
cmp
cmpb
rcl
mov
mov
sub
lcall
out
shll
push
sub
mov
out
mov
dec
movsl
pop
jo
jl
cwtl
xchg
les
add
push
mov
push
mov
and
push
test
mov
push
mov
dec
cwtl
mov
cmp
inc
dec
movsb
pop
movb
jo
icebp
pusha
sbb
sahf
sar
ljmp
and
les
adc
and
pushf
inc
mov
sbb
sub
cmp
loopne
sbb
mov
cmp
aad
inc
pop
pop
rcrb
mov
cli
mov
inc
sub
fdivp
jnp
inc
jb
add
imul
sti
cmp
int3
jecxz
loopne
cmp
lahf
xchg
movsl
mov
mov
in
lds
in
rclb
mov
movsb
fldcw
rcll
ljmp
popa
cwtl
push
cmp
pop
loope
sbb
push
xchg
mov
sbb
int
shr
inc
mov
ficompl
popl
add
or
dec
jmp
andl
aam
jle
and
fwait
cmpsl
xchg
or
pop
out
ss
aaa
cld
mov
cmpsl
movsl
inc
lods
out
pop
mov
dec
gs
leave
pusha
jle
sbb
ja
xor
imul
push
dec
add
and
xlat
pop
dec
cmc
pop
jo
mov
inc
inc
pusha
insb
insl
imul
xchg
or
int
add
repnz
inc
and
dec
outsb
fiadds
fistps
ljmp
sub
outsb
in
mov
mov
push
and
ja
mov
xchg
sti
repnz
add
cmc
lods
loope
fists
xchg
imul
mov
std
pusha
push
cmp
dec
mov
jmp
mov
repnz
test
sub
xchg
push
adc
jae
add
aas
xor
into
inc
and
insl
mov
test
sbb
jns
leave
stc
and
mov
mov
adc
or
inc
ljmp
das
lret
and
or
clc
mov
call
data16
je
push
and
loope
daa
adc
int3
or
sub
imul
popa
imul
mov
fmuls
mov
imul
inc
fsubs
inc
jp
int3
push
jl
adc
jmp
and
sbb
nop
std
mov
dec
test
lods
mov
jmp
pop
or
dec
ja
lods
into
jl
jg
fistpl
and
test
jnp
addr16
js
cmc
movsl
pslld
and
mov
cmp
insb
int3
pop
in
popa
lahf
arpl
aad
das
xor
fcoms
sbb
cli
dec
into
xchg
fstps
fsts
int3
mov
inc
sbb
das
push
pop
mov
stos
dec
sbb
gs
aad
aaa
std
mov
xlat
out
dec
mov
sbb
repnz
stc
lods
mov
shl
gs
rcrb
call
cmp
inc
popa
push
xchg
sub
push
mov
xor
fwait
mov
mov
les
dec
or
add
loope
inc
aaa
stos
lds
sbb
shl
lcall
jnp
cld
mov
mov
fsubs
xchg
stos
mov
data16
sbb
loope
test
outsb
mov
xor
pop
das
push
iret
je
push
mov
xor
xchg
out
sti
insb
sub
shlb
fdivl
bound
sbb
adcb
lret
and
jnp
icebp
enter
outsl
ret
adc
in
fdiv
sahf
fldt
adc
inc
cmp
add
dec
shlb
pop
jl
daa
cltd
fstps
movsb
sub
sti
call
sbb
lock
push
sbb
loopne
addr16
push
notl
or
imul
int3
lods
into
out
repnz
mov
push
add
stos
mov
subl
pop
sub
outsb
loopne
push
je
popa
ret
mov
int3
pop
mov
fidivs
aas
sbb
orl
and
js
orb
test
mov
xor
test
incb
mov
pop
test
push
mov
js
and
add
movb
ljmp
mov
mov
sti
fiadds
scas
test
into
fs
xchg
iret
shrb
jl
mov
aas
lds
add
mov
shll
xorb
add
xchg
cli
test
mov
add
daa
enter
lea
inc
out
shll
push
test
jge
mov
mulb
or
fwait
inc
push
aas
out
push
jbe
mov
fwait
das
xchg
stos
loope
lods
inc
mov
add
or
mov
fcom
mov
lret
sub
jp
mov
cmp
fimull
adc
stos
push
setle
pop
ljmp
mov
inc
push
mov
enter
arpl
jmp
inc
repz
enter
mov
popa
pusha
or
aad
hlt
pop
sub
xor
adc
push
add
mov
imul
add
jle
adc
ss
sti
dec
pop
test
lods
xor
jg
push
add
addb
inc
add
aas
inc
jp
popw
mull
scas
shll
outsb
icebp
in
pop
imul
inc
sbb
pop
add
push
jno
lods
mov
adc
nop
outsl
add
insl
push
inc
test
fmull
fcoms
lea
fst
test
xchg
adc
inc
push
insl
push
out
inc
mov
outsb
pop
cltd
icebp
jbe
sub
jle
cmc
lcall
rcll
popa
mov
jge
jle
es
dec
sub
sbb
mov
lods
sub
xor
pushf
sbb
push
iret
cmc
ret
daa
jge
ljmp
outsb
jmp
jecxz
out
imul
hlt
add
fisubrs
loope
xchg
sbb
inc
push
in
les
ss
xchg
and
rcrb
stc
insl
or
cmp
fucomi
mov
ds
mov
and
sbb
add
push
clc
xchg
bound
popf
aam
fdivl
in
adc
sti
mov
scas
divl
and
xor
in
or
jno
iret
divb
cmp
jmp
test
pop
imul
fwait
xor
fbstp
sub
xchg
sub
add
cs
xor
es
outsl
dec
push
inc
adc
mov
test
insb
hlt
push
in
push
dec
mov
mov
or
shl
shlb
mov
sbb
js,pn
test
mov
fs
inc
mov
shlb
sbb
loopne
dec
cli
xlat
iret
xchg
hlt
sti
aam
or
xchg
mov
int
test
popa
test
jp,pt
bound
test
scas
outsb
mov
mov
jle
cli
cmc
int
fists
ret
ja
jge
jbe
cwtl
inc
stos
cmpsb
or
ja
movsl
ret
scas
loopne
sbb
cltd
movzwl
subb
sub
pop
sub
fbstp
into
outsl
mulb
xchg
add
dec
das
loope
pop
mov
stos
cmp
outsb
mov
sarl
push
ficomps
shrb
repnz
scas
aad
xchg
stos
out
mov
fsubrl
push
pop
movsl
mov
insb
scas
in
loop
mov
mov
cmp
scas
insl
sbb
sahf
ds
adc
sbb
cmp
mov
fnstcw
sbb
sbb
dec
dec
shlb
add
shlb
lcall
call
sarl
xchg
mov
ds
enter
mov
mov
or
pop
insl
loop
imul
imul
xor
mov
ds
loop
idivl
mov
mov
cmp
xor
and
xor
cld
jno
leave
nop
int3
dec
rcr
aam
bound
push
leave
cmp
sbb
mov
mov
leave
or
xchg
test
cltd
xchg
mov
xchg
jle
dec
jb
sbb
idivl
pusha
frstor
out
out
shlb
daa
push
jbe
lret
add
inc
or
stos
fildl
in
shlb
inc
mov
cmp
push
loope
outsb
sub
add
cltd
rorb
cwtl
data16
sbb
sub
nop
int
push
div
ret
inc
or
lds
xchg
or
repnz
mov
dec
jg
mov
sub
or
mov
loopne
rorl
mov
sbb
mov
dec
rcll
mov
rcll
xorl
mov
outsl
cwtl
and
push
dec
cld
mov
nop
xor
adc
ljmp
dec
add
mov
ds
out
ds
push
pop
scas
loope
scas
inc
sbb
mov
or
es
mov
fistpll
adc
std
xchg
xor
jnp
sbb
and
mov
repnz
push
data16
unpckhps
add
add
frstor
lea
jnp
in
out
jg
lods
pop
aas
add
sub
es
leave
cltd
jl
mov
jmp
jg
das
dec
mov
pop
or
pop
loop
pop
fdivl
xor
popf
bound
setns
fisttpll
in
and
js
out
sub
jns
fwait
pop
pop
mov
pop
mov
adc
sub
ret
xor
jl
xchg
sub
jno
mov
pop
add
cmp
lds
and
out
push
in
loopne
je
dec
imul
mov
xor
mov
mov
jmp
adc
fiaddl
aas
xlat
lahf
scas
adc
mov
inc
std
xor
mov
fdivr
call
push
addl
mov
shrl
sbb
jge,pt
dec
ret
mov
js
mov
lock
push
pop
icebp
push
inc
out
in
fsubrl
push
sub
add
jmp
fisubl
fwait
sub
flds
lahf
sub
repz
mov
out
incl
in
mov
xor
les
and
jmp
pop
nop
mov
push
fcoml
add
das
sub
mov
hlt
push
in
xlat
cmp
out
xchg
lcall
jmp
add
pop
pop
mov
pop
fsts
xor
fs
push
jns
cmp
dec
cmp
jle
sub
in
repnz
es
nop
mov
lods
je
and
cmpsb
out
xor
test
jne
shrd
popf
andl
add
sahf
aas
ss
movsl
xor
xor
and
lods
jecxz
int
xor
ljmp
and
xchg
sbb
mov
pushf
mov
insl
and
inc
cmp
xor
popa
jmp
push
inc
fcomip
sbb
cli
and
mov
mov
jns
pop
push
dec
mov
mov
aad
imul
push
arpl
mov
jge
imul
cmpsb
jmp
stos
xor
rol
pop
out
fcmove
cmp
xchg
mov
or
je
stos
push
insb
lods
xlat
xchg
and
mov
add
mov
sti
and
sbb
pop
push
fs
or
stc
pop
xchg
lcall
in
in
pop
jp
popf
push
clc
push
dec
adc
mov
mov
ljmp
mov
call
xchg
xor
push
arpl
stos
mov
mov
mov
addr16
lds
cmp
pop
jge
sbb
mov
cmpsl
jb
push
nop
stos
test
hlt
push
ljmp
outsl
out
int3
mov
xchg
aam
rcrb
repnz
outsl
sub
stos
xor
jbe
incl
or
movsl
rcl
jp
call
mov
xlat
pop
mov
jo
aad
mov
ret
out
push
stos
or
in
inc
sub
movsb
jne
add
lret
cli
clc
mov
jae
add
outsl
addr16
adc
cmp
and
arpl
push
ljmp
push
pop
imul
xchg
dec
jbe
js
fmull
or
fmulp
ret
xorb
mov
int
xchg
cltd
fistpl
loopne
addr16
es
idivl
and
pop
subb
les
and
sub
sub
sub
jb
nop
out
cmc
mov
cmp
pop
xchg
push
fistl
jmp
pmulhw
add
fcmovne
int3
jl
xor
ljmp
sahf
aad
out
leave
mov
xchg
inc
jl
add
sysenter
iret
push
add
aad
xor
mov
dec
loopne
pop
mov
cmpsl
mov
cmp
pop
jo
scas
jns
inc
cli
jnp
mov
test
jnp
fsub
cmc
xchg
cmp
ja
jno
fmuls
leave
popa
adc
fisubrl
sbb
mov
leave
mov
ss
enter
or
adc
pop
inc
sbb
xor
js
std
jbe
aas
mov
ret
cmpsl
xchg
adc
sbb
jecxz
ss
jbe
cltd
jg
sbb
loope
jno
iret
pop
adc
lcall
mov
cmp
xchg
aaa
dec
mov
in
pop
fwait
mov
sbb
icebp
decb
push
xor
enter
push
inc
enter
mov
rolb
and
fldcw
leave
and
iret
std
or
jl
add
add
add
inc
cli
cld
pop
jns
mov
mov
mov
sub
mov
cwtl
dec
mov
add
mov
xor
std
push
add
dec
daa
push
sub
push
mov
testb
aaa
movsl
dec
adc
test
sti
add
fisubrs
ja
sbb
inc
mov
rorb
mov
cwtl
jp
nop
shlb
aaa
cmp
lret
jle
cli
fnstcw
test
test
pop
cli
cld
mov
rcrb
cltd
push
ds
push
pop
inc
cmp
nop
jbe
xchg
add
mov
incl
xchg
nop
into
jle
fistps
lods
cmpsb
jb
or
lret
and
add
fiadds
xchg
xlat
fs
imull
jmp
pusha
lahf
cmp
scas
add
lds
add
cmc
cmp
lcall
mov
sbb
inc
mov
cmp
or
loop
jl
jg
out
imul
mov
dec
je,pn
inc
into
cmp
negb
pop
mov
xchg
push
mov
jno
pushl
icebp
push
xor
sbb
inc
notl
sbb
inc
pop
addr16
xchg
fisubs
mov
pop
fisubl
cmpsl
cmp
mov
jae
int
mov
rorb
mov
hlt
data16
jne
push
or
jo
loop
jl
add
push
cmpb
mov
stos
mov
fbstp
mov
fcom
jns
adc
dec
out
jno
sbb
out
out
jns
push
out
movb
enter
lods
and
in
aas
jb
into
pushf
xor
sub
push
mov
das
add
aas
mov
jbe
test
jns
insl
add
push
xor
mov
aas
fadds
xor
data16
insb
lea
daa
outsb
sarl
lods
cmp
and
jo
jge
jbe
ds
mov
aam
test
cli
cmp
hlt
add
mov
icebp
pop
ficoml
adc
and
in
dec
nop
mov
mov
mov
or
and
outsl
ljmp
cli
cmc
sub
xchg
aad
in
imul
add
mov
shrl
dec
dec
scas
je
cmp
fisubl
cmpsb
scas
enter
popf
and
divb
cmpb
mov
dec
mov
repnz
ljmp
inc
ljmp
sbb
insl
inc
jbe
ja
pop
fwait
not
lods
adc
pop
je
push
ss
jne
mov
push
popa
dec
mov
xor
cmp
jne
push
rolb
pop
push
je
pop
pop
or
lret
fbld
hlt
push
mov
fwait
scas
pop
or
rorl
loop
sbb
sub
cwtl
loope
dec
bound
lea
std
clc
and
js
cli
push
xor
pop
and
sub
add
movsb
mov
mov
mul
jns
shrb
pushf
or
cmp
test
sub
or
fwait
jnp
push
arpl
addl
jmp
add
dec
xchg
std
cmp
cli
push
jb
and
int
inc
jecxz
xchg
mov
mov
ret
in
aad
xor
cmp
mov
mov
xchg
jnp
mov
xchg
out
mov
push
pushf
stc
fildll
ret
xchg
add
jge
adc
and
mov
call
sbb
jae
jo
cmc
mov
inc
int3
div
push
mov
aam
push
fiaddl
pop
push
shll
sbb
and
into
inc
mov
sbb
adcb
sub
dec
lcall
inc
insb
cmp
jns
cmp
jge
xchg
inc
mov
cltd
xlat
pop
xchg
leave
xchg
push
cmp
xor
cltd
mov
or
testb
push
and
insb
push
pop
cwtl
inc
in
jecxz
xchg
ds
mov
ds
loop
jo
stos
xchg
lret
lret
repz
popf
bound
and
dec
pop
sub
ja
jmp
push
inc
and
mov
push
inc
ror
in
sbb
push
sub
outsb
sub
nop
mov
shlb
mov
test
divb
or
xlat
inc
stos
xor
xchg
out
rcrl
stos
imul
jmp
xor
nop
jns
sbb
cmpsb
xor
mov
push
mov
lret
adc
stc
adc
fsub
inc
cwtl
push
xor
testb
nop
xchg
inc
dec
daa
insb
leave
push
sub
std
mov
mov
ds
pushf
and
shlb
in
andb
xchg
adc
push
popa
adc
jae
xor
sub
ret
mov
out
fdiv
ds
mov
sahf
xor
adc
outsb
inc
stc
aam
outsb
jnp
idivb
lods
insb
sbb
cmp
xchg
or
jbe
out
clc
or
jl
subl
movsl
rcrl
aam
mov
push
pop
add
dec
scas
pop
cli
push
fsubrs
cmp
xchg
faddp
lea
leave
stc
jbe
lret
cli
xchg
push
xor
out
dec
cwtl
outsw
dec
jle
pop
sbb
push
add
dec
jle
xchg
lods
cmpsl
add
fcomip
or
pusha
jg
sbb
mov
mov
outsb
mov
ret
push
mov
jb
mov
sub
or
std
xor
dec
xchg
push
sub
fimuls
inc
mov
mov
mov
jns
xlat
push
sub
mov
cmpsl
mov
jl
push
imul
andb
add
and
jle
test
cmpb
dec
andb
jecxz
and
aaa
xchg
test
in
aaa
adc
fldt
cmp
cmp
ljmp
into
push
push
dec
sbb
cld
jno
int3
add
cmp
adc
pop
cs
enter
and
insb
dec
test
sbb
add
stos
dec
mov
push
scas
jge
xchg
pop
pusha
dec
jns
ficoml
xchg
js
outsl
adc
and
dec
dec
jp
adc
xchg
inc
push
push
imul
test
and
pop
add
daa
xchg
scas
jecxz
hlt
loop
and
xchg
push
adc
cmpsb
push
xlat
mov
ds
movsb
cmp
pop
xlat
mov
sbb
lock
mov
inc
add
aam
fs
xor
frstor
cmp
or
daa
stc
sarb
jl
xor
loop
sbb
mov
mov
daa
mov
push
sahf
fisubrs
loope
sbb
mov
xor
fcmovnu
stos
mov
push
imul
pop
aad
jecxz
pop
stc
jmp
and
fs
lea
repz
jae
fwait
dec
ss
cmp
push
outsl
add
popa
out
cmpsb
cmp
xor
aam
rcrl
clc
or
lahf
sub
push
shlb
fstps
lahf
dec
shr
iret
cltd
pop
lods
iret
into
lea
out
mov
pop
mov
inc
adc
jecxz
repz
mov
es
pop
shlb
add
nop
cltd
and
jns
sub
cs
rorl
lcall
jae
push
pop
sub
shrl
call
call
or
addps
mov
adc
xchg
mov
jmp
cmpl
jp
lods
icebp
aam
xchg
out
mov
sbb
leave
out
pop
arpl
imul
out
icebp
imul
fwait
stos
shll
mov
jnp
mov
xor
dec
jp
mov
ret
push
outsb
sub
cmpsb
in
mov
and
jns
lret
cmp
addr16
out
xchg
ror
mov
pushf
fisttpll
lock
enter
rcl
test
sub
xchg
out
popf
sahf
subl
repz
sub
or
cmp
jge
ja
mov
je
andb
leave
daa
push
jns
mov
idiv
xlat
lea
inc
test
xchg
pop
xchg
xor
jo
mov
cli
push
jle
pop
cmp
fwait
add
repz
pop
lret
aas
adc
xchg
adc
mov
xchg
out
popa
stc
inc
sub
pusha
imul
mov
push
icebp
fsubr
mov
fcoms
jbe
xchg
movsl
and
and
cmp
daa
adc
dec
loopne
bound
mov
out
shrl
sahf
sub
cmpsl
imul
cwtl
pop
rcrb
xchg
pop
es
mov
sub
add
inc
fwait
inc
and
sub
outsb
jns
dec
enter
outsb
daa
out
bound
sbb
pop
mov
inc
out
cmp
push
addr16
ret
xchg
inc
sub
sahf
add
push
outsb
icebp
lcall
xchg
and
fdivrs
sbbl
rclb
xor
mov
jae
lock
dec
sahf
push
mov
sbb
outsl
test
add
and
xchg
clc
xchg
jg
lcall
or
ret
lahf
push
shlb
nop
pop
stos
cmpsb
dec
or
or
inc
pop
jle
jae
cld
rolb
jge
inc
dec
out
movsb
sub
sub
iret
leave
pushaw
aaa
call
push
xchg
roll
pop
pop
in
pop
mov
xchg
rcr
lock
mov
lret
fucomi
iret
cmp
dec
and
cmc
push
lret
stos
adc
lcall
inc
fidivrl
stc
mov
fists
mov
stos
jbe
jnp
xchg
ja
es
and
mov
stos
inc
addr16
pop
fstps
enter
push
cltd
aad
les
stos
xchg
cmp
clc
insb
popa
pop
push
loop
adc
lret
mov
out
add
das
orb
xchg
das
imul
fsts
dec
repnz
ds
add
lea
in
dec
shll
mov
and
and
mov
and
in
and
jmp
pop
out
in
pop
outsl
xor
out
movsb
dec
jbe
bound
loopne
insb
push
outsl
jnp
jle
pop
mov
data16
xchg
mov
cs
fsub
shll
sub
loope
mov
or
xchg
data16
test
scas
pop
and
pop
dec
aaa
adc
sbb
ficompl
xor
lahf
inc
outsb
out
gs
xorl
pop
fld
jno
fstl
sub
and
fs
rolb
push
ja
aaa
sbb
out
test
fisubs
leave
lods
cli
js
cld
cmpsb
xor
inc
ja
incb
inc
xchg
cmp
nop
subb
ds
sub
addr16
call
add
sbb
scas
or
stc
jb
jge
test
nop
cmpsl
and
popa
loope
lds
mov
jne
xchg
inc
aad
fidivrs
cmpsb
jne
aas
lea
addl
cmpsb
js
movsl
sbb
push
inc
ret
inc
and
jae
push
mov
cwtl
loopne
adc
push
jg
pop
sub
dec
jmp
stos
movsl
lret
cmp
stos
fmull
or
jnp
pop
or
push
and
fprem
cmp
icebp
xor
adc
pop
scas
fwait
and
mov
in
sahf
ret
sub
adc
test
sbb
jl
outsl
or
xor
pop
sub
jns
add
pusha
push
jno
popa
mov
or
je
inc
sub
dec
imul
test
sub
lods
nop
jl
stos
inc
insb
mov
dec
fwait
mov
mov
xchg
mov
das
pop
mov
dec
out
xchg
jb
ret
sti
lret
cltd
mov
cltd
sbb
inc
mov
mov
fwait
iret
sarb
ljmp
mov
mov
sbb
popa
ss
adc
cmc
cmp
call
repnz
inc
jns
push
add
jl
icebp
js
or
sbb
cmp
sbbb
mov
sbb
jecxz
or
out
negb
cmp
push
je,pn
xor
ret
push
mov
adc
aad
push
add
adc
xchg
inc
mov
das
cmp
sarl
nop
cmp
push
test
inc
dec
cmp
shlb
jne
pop
jae
inc
mov
fsubrl
roll
movsb
popa
cld
or
ret
jg
pushf
ljmp
pop
cmp
cld
mov
jbe
inc
sub
pop
and
push
das
push
shrl
jle
and
add
xlat
cmp
adc
idivl
dec
jb
stos
mov
pop
popf
add
fistl
adc
mov
or
cmp
cmp
sbb
cmp
lds
mov
into
sbb
jl
xor
mov
mov
repnz
fisubrl
mov
pop
mov
lds
adc
in
dec
dec
mov
test
dec
ss
mov
xchg
clc
jne
pop
repnz
ja
push
sub
mov
cmpsb
shr
test
cmp
pop
pop
or
out
dec
xor
xor
cli
call
fsubl
push
pop
jo
inc
sub
add
and
nop
push
lcall
loopne
jae
in
and
xor
ljmp
inc
out
pop
mov
iret
cltd
adc
sub
data16
sbb
push
lods
add
in
cmp
pop
movsb
imul
cld
sahf
add
inc
pushf
adc
push
leave
dec
cwtl
cltd
mov
inc
pusha
mov
sbb
xchg
push
mov
push
xchg
std
pop
orb
cmp
mov
test
inc
adc
fdivl
jl
adc
xchg
sbb
rcrl
movsl
scas
dec
jo
push
and
mov
and
sub
mov
adcb
jle
outsl
arpl
and
rolb
jge
ja
xor
push
sbb
push
jb
nop
call
fisubl
sub
movsb
add
fdivs
push
lds
int3
jb
out
xchg
int3
inc
daa
es
dec
out
adc
cmp
jp
stos
out
mov
test
sarl
or
and
test
push
mov
dec
mov
adc
sbb
xor
fstpl
das
mov
mov
or
xchg
or
arpl
add
filds
shl
call
jns
int3
xor
sti
aas
int
mov
cmp
movsb
daa
mov
mov
jle
popa
addr16
sahf
aas
mov
add
pushf
xor
fiadds
and
into
fildll
insl
jecxz
into
das
loop
scas
rcl
lods
and
imul
fdivr
repnz
ucomiss
dec
jl
mov
mov
fidivl
pushl
or
pop
arpl
pushf
rcrb
jmp
mov
dec
dec
adc
cmpsl
mov
push
call
inc
xor
stos
sub
sub
insb
pop
xchg
cmp
pop
mov
es
xlat
ret
lock
test
xor
pop
jl
mov
imull
cld
jle
xchg
xorb
dec
push
or
pop
cmpsl
inc
and
add
xor
inc
aam
cmpsl
lret
in
scas
mov
sti
rcrb
int
sub
out
int3
test
or
dec
mov
cmp
fimuls
pop
xorb
aam
sbb
xor
cmc
fsubs
js
sbb
jecxz
outsl
jle
lock
cld
dec
xor
std
pop
inc
xor
cwtl
mov
popf
mov
push
sbb
fdivs
mov
or
fisubrl
add
call
mov
sub
pop
push
int3
and
sbb
stos
orb
push
pop
adc
flds
out
mov
pop
cmp
pop
lret
xor
jbe
dec
mov
sub
imul
jl
mov
sub
aas
push
sbb
js
mov
jnp
pop
adc
arpl
je
or
pusha
pop
leave
jb
sbb
rolb
rcrl
sti
jne
pop
fldl
inc
pop
xor
aad
cmpsl
inc
test
out
lock
pushf
xor
push
rclb
mov
pop
inc
inc
icebp
cwtl
jl
inc
pop
pop
mov
adc
push
loop
mov
mov
repz
xchg
arpl
push
push
pop
out
rorl
dec
arpl
scas
sub
jg
xor
lock
mov
stc
ret
or
sbb
mov
ljmp
icebp
xchg
cmc
adc
cmpb
stos
cmp
jne
dec
dec
call
hlt
jne
sbb
inc
mov
imul
arpl
pop
jg
aad
fwait
dec
pop
cmp
leave
jb
aam
imul
pop
iret
test
mov
jle
adc
inc
sbb
js
mov
mov
out
scas
lret
add
sbb
into
fcompl
subl
mov
push
sbb
repnz
mov
nop
xor
aas
dec
out
call
fstpt
mov
xchg
sbb
xchg
sarl
gs
xlat
sbb
in
jle
test
in
and
imul
mov
sbb
js
ljmp
inc
stc
adc
pop
cmp
jns
or
inc
out
add
fbstp
xor
icebp
sub
pop
mov
in
inc
xor
fcoml
or
mov
jmp
notb
stos
fists
dec
stos
jae
scas
xchg
and
mov
push
rol
push
leave
push
bound
shufps
or
outsb
jmp
fimull
daa
cltd
cmpsb
sub
or
mov
cmc
jns
arpl
sahf
int3
mov
pop
aam
or
push
std
lea
fdivrs
push
ja
inc
cmovl
mov
inc
dec
adc
sub
jge
movsl
leave
int
stc
sar
stos
sahf
jl
mov
lock
or
push
lea
les
imul
lods
fxch
es
mov
iret
negl
cmp
xchg
xor
adc
icebp
stos
sarb
hlt
sahf
mov
jg
pop
and
and
adc
add
add
mov
push
dec
js
ja
js
inc
inc
push
pop
int3
lahf
mov
int
push
mov
cmpsb
or
dec
mov
pop
mov
mov
out
push
aas
dec
movsb
mov
imul
pop
aam
fwait
pop
inc
cltd
add
add
in
cmp
xor
dec
fsqrt
add
iret
in
in
mov
pusha
lea
jmp
sbb
mov
pop
or
add
jo
scas
xchg
int
push
mov
mov
cmp
and
fwait
imul
pusha
rep
call
mov
bound
lahf
adc
out
lea
mov
mov
movsb
das
mov
cmp
mov
dec
xor
mov
dec
xor
cmc
or
adc
jge
jp
mov
inc
inc
sarl
inc
fs
push
and
mov
iret
je
sarl
sub
sub
sub
les
ds
ficoml
push
cmp
movsl
cltd
push
jo
xor
and
dec
rcrl
mov
aad
cmpl
sub
xorb
aam
xor
pop
push
sbb
sar
fs
mov
mov
das
movsb
movsl
and
mov
stos
sarb
and
mov
fnstenv
mov
mov
out
or
mov
pop
mov
shlb
js
xchg
rcl
sbb
movsl
jle
adc
push
jecxz
mov
mov
xchg
cmp
aad
cmp
xchg
pop
dec
push
adc
test
mov
js
out
jnp
lods
sarl
sub
testb
or
or
add
add
jbe
mov
movsl
push
rclb
jb
and
add
cmp
dec
jbe
stos
dec
mov
sahf
aad
inc
imul
or
jns
std
inc
ja
aaa
adc
xchg
push
jl
pop
sti
imul
push
sahf
push
cmpsb
xlat
adc
jbe
cmp
rorl
aas
sub
int
push
orb
outsl
retw
pop
xchg
or
je
dec
loop
inc
aaa
bound
jl
fistl
sub
or
pop
fstps
jge
mov
mov
xchg
add
ja
movsl
add
cmp
adc
out
cs
push
std
shll
scas
loope
xchg
test
fwait
testb
scas
jmp
push
jae
popf
loop
and
or
cmp
movsl
dec
int3
gs
rclb
loopne
js
andb
mov
mov
in
inc
sbb
or
test
xor
int
dec
mov
clc
sbb
cs
xor
push
sub
filds
and
jmp
adc
xchg
adcl
push
insl
dec
jbe
mov
jne
xchg
out
dec
cmp
or
mov
sbb
in
std
inc
imul
repz
repz
movsl
sbb
fprem1
jns
cmp
cs
in
test
dec
or
arpl
or
outsb
xor
mov
mov
ss
xchg
test
pop
xchg
xorb
sbb
pop
cs
lods
or
sbb
xor
sub
loopne
dec
push
dec
mov
daa
shr
add
out
pop
out
in
outsl
cld
incl
pushf
andl
stc
add
aaa
pop
loopne
imul
mov
popl
imul
add
or
lret
jg
enter
sub
adc
jnp
out
inc
out
inc
clc
inc
push
push
sahf
mov
stc
fiaddl
and
shlb
cmp
push
and
pop
out
cmc
es
int3
movsb
mov
pop
daa
xlat
and
xchg
in
push
jb
xchg
xlat
cld
aaa
inc
fcomps
pop
adc
adc
push
lds
dec
sbb
lock
loopne
aam
xor
inc
ja
sbb
cmp
scas
lea
xor
sub
aad
or
inc
cmp
adc
orl
and
and
mov
lret
jmp
js
data16
sbb
fdiv
mov
cs
or
xchg
cmp
fdivrl
testl
shll
scas
adc
mov
scas
jnp
jge
sub
int
or
shrl
inc
jmp
incl
xchg
aad
push
inc
mov
or
add
jg
sbb
mov
ret
idivb
sbb
pop
jl
xchg
cli
cmp
inc
xchg
cmc
inc
xor
push
or
fcmovnb
push
sbb
jmp
pusha
xor
and
sub
call
sbb
jecxz
shrl
test
jno
cmpsl
aad
sub
rclb
mulb
into
push
sub
mov
xor
push
lods
xor
repz
jecxz
jne
mov
mov
repz
jbe
sub
sbb
cltd
idiv
popa
inc
pop
adc
mov
sub
cmpsb
push
pop
mov
pop
mov
fsubr
bound
fwait
sub
add
test
inc
lcall
stc
push
dec
push
test
jo
and
cmpsl
push
or
ret
into
xor
cmp
or
pop
stos
adc
roll
dec
arpl
add
cmp
sbb
jo
rcrl
mov
movsb
xlat
stos
scas
in
dec
xchg
pop
out
sbb
stc
shll
daa
inc
mov
sub
mov
movsl
iret
push
jl
bound
jg
in
flds
push
data16
xor
rorb
xchg
sbb
push
scas
sub
repz
lret
pop
inc
movb
mov
mov
lcall
cmp
pusha
sbb
repz
adcl
or
sub
jmp
mov
mov
xchg
stos
inc
popf
cmc
or
mov
jmp
and
xchg
mov
pop
fnstcw
andl
jbe
cmp
push
pushf
in
jo
cmpsl
mov
sub
nop
jp
push
cmp
jl
or
dec
out
sbb
mov
sbb
mov
push
dec
ret
mov
loope
insb
xlat
dec
lds
popf
repz
mov
jl
and
mov
in
and
add
or
inc
adc
sbb
mov
loope
xchg
stos
leave
insb
imul
loope
movsl
shlb
cwtl
mov
push
movsb
jbe
jecxz
pop
jmp
mov
cmp
ja
mov
mov
jecxz
or
ja
and
or
sub
psubusw
mov
mov
xchg
cmpsb
sti
in
out
div
dec
rorl
test
push
pop
mov
add
or
inc
push
fidivrl
out
out
in
fdivl
hlt
push
mov
xchg
out
sub
mov
dec
subl
pop
push
movsb
repz
ljmp
inc
out
add
push
mov
and
add
mov
shrl
and
mov
pop
test
inc
or
cmp
js
adc
pop
popa
sahf
outsb
inc
insb
xchg
jmp
fisttpll
push
and
mov
jno
cmc
test
mov
jp
pop
inc
repz
ds
fs
mov
les
inc
mull
insl
xor
dec
xchg
or
add
and
mov
sbb
flds
pop
pop
test
dec
dec
add
cmp
inc
hlt
popa
mov
aad
pop
pusha
gs
fwait
gs
aad
sub
dec
mov
mov
aaa
pop
xchg
cli
push
jbe
outsl
imul
adc
rcll
popa
fwait
xor
outsb
xor
sub
jl
mov
push
xor
jecxz
jp
and
and
icebp
mov
pop
sahf
pop
in
mov
int
scas
out
pop
movsl
inc
test
enter
cld
mov
jg
mov
rclb
jecxz
mov
add
stos
fadds
daa
push
pop
pop
lret
lods
jecxz
sti
push
pop
inc
mov
or
push
inc
popf
cmpsb
mov
jb
push
xor
lea
frstpm(287
xor
pop
xlat
stos
out
gs
cs
pop
jae
movsb
jb
ret
push
pop
ljmp
notl
xchg
xchg
pushl
push
into
or
out
lret
mov
outsb
subl
or
adc
push
lret
in
dec
sahf
inc
popf
rolb
mov
adc
addr16
clc
sub
sbb
lods
loop
or
xlat
adc
leave
les
or
arpl
adc
fld
mov
ret
cmp
jnp
neg
jl
lods
adc
out
xchg
xchg
or
imul
add
test
mov
out
mov
dec
test
out
and
cld
add
jno
mov
in
iret
xchg
imul
je
sbb
sbb
sbb
jge
lods
sub
sbb
inc
inc
imul
sbb
je
dec
jp
out
inc
popl
inc
inc
js
test
fs
aam
mov
push
fsts
sub
cmp
shll
int
int3
fadds
fnstenv
arpl
imul
es
adc
test
aas
nop
outsl
ss
lock
jno
fs
add
add
add
jmp
cwtl
dec
mov
or
data16
jbe
cwtl
adc
xchg
shlb
in
rorl
cmp
pop
and
mov
fs
mov
lea
loopne
test
xchg
dec
ret
out
dec
jle
push
or
pop
cmpsb
out
mov
mov
adc
jmp
jbe
cli
adc
movsb
gs
sbb
add
xlat
fcomi
mov
test
jne
lahf
push
xor
cmp
dec
push
or
shlb
dec
mov
call
xor
push
sbb
mov
test
and
mov
loopne
pop
sbb
xchg
dec
jo
cmp
fbstp
imul
les
dec
sbb
sbb
shlb
movsl
sub
mov
pop
sbb
inc
cmpsl
int
cli
fcoml
jnp
pusha
mov
das
jns
push
test
jo
rclb
mov
xchg
mov
sub
lea
push
cmp
sub
test
out
jnp
in
jl
jl
dec
pop
mov
jns
mov
dec
sbb
pushf
push
xor
jg
dec
xor
and
sub
pusha
jmp
xlat
mov
outsl
testb
loopne
andb
mov
xchg
xadd
insb
xor
iret
mov
subb
push
pop
jl
pop
stc
fsubl
test
ret
fadd
xchg
imul
pop
adc
in
cli
test
cmp
mov
jns
and
in
xchg
add
or
dec
ljmp
data16
fsubl
cs
hlt
rcrb
push
dec
test
shll
clc
daa
lret
std
pop
insl
mov
cli
inc
shrl
mov
jmp
ror
call
xorb
pop
mov
rcr
cli
test
sar
mov
dec
cwtl
shrb
loope
adc
gs
into
je
push
sti
cmp
hlt
fdivp
leave
test
xor
por
lea
mov
pop
xchg
adc
sbb
sbb
sub
jnp
hlt
loope
push
out
pop
mov
aaa
iret
fistpll
jecxz
mov
clc
scas
sbb
xchg
int
lahf
fidivrl
dec
fnstsw
test
fisttps
rcll
cmc
das
mov
inc
loope
mov
push
mov
in
inc
jns
loop
push
jno
insb
mov
cwtl
out
and
dec
xor
cmp
xor
scas
hlt
adc
sub
pop
mov
out
call
add
loope
push
mov
cmp
jbe
mov
aad
adc
sub
and
and
shlb
fwait
mov
adc
mov
mov
pop
adc
movsb
fimull
jo
mov
mov
add
cs
dec
and
hlt
mov
test
mov
mov
cwtl
adc
lcall
pop
fisttpll
jge
push
fs
imul
incl
pop
sbb
int
in
xor
xchg
and
dec
mov
mov
fwait
jb
mov
test
mov
repnz
aam
ja
shl
rcr
pop
cmp
rorl
push
jp
jcxz
mov
popa
dec
inc
leave
sahf
sub
lcall
int3
or
and
loope
push
jae
adc
sahf
push
mov
cmp
lret
lea
enter
ficoml
and
mov
jae
mov
clc
xor
jno
pop
idivb
in
aam
scas
sub
nop
xchg
cmp
inc
push
popf
sub
test
sti
iret
lret
lods
nop
mov
sbbl
pop
int3
out
dec
test
scas
push
mov
or
cmp
jp
or
add
roll
pushl
mov
int
hlt
testb
sbb
and
insb
cmc
fimuls
or
test
ja
mov
or
adc
xor
loop
push
push
sti
loopne,pt
hlt
mov
addr16
pop
daa
inc
ror
out
int
xor
mov
rorb
shll
jne
push
xchg
adc
arpl
imul
call
jo
push
jecxz
ss
push
jl
xor
pop
xor
sub
mov
mov
lahf
mov
jl
mov
and
addb
std
ret
mov
xor
cmc
inc
int
popa
testb
inc
pop
inc
dec
int
and
dec
sbb
std
inc
add
iret
xor
xlat
dec
cmp
dec
push
xchg
add
pop
push
in
adc
clc
dec
sbb
ljmp
inc
mov
stc
call
add
pop
mov
lahf
cmp
mov
lea
sahf
repz
fnstsw
xor
pop
jno
pop
movsl
insl
push
mov
clc
fimull
mov
arpl
out
cld
adc
mov
adcb
addr16
push
loop
mov
and
sahf
pop
fisttpl
mov
jmp
addb
dec
leave
xor
rcrl
das
out
out
xchg
es
xor
dec
sbb
jo
mov
xor
push
cwtl
ds
jecxz
mov
sub
movsl
in
clc
jns
stos
adc
dec
daa
push
sbb
or
pop
push
mov
popf
xchg
hlt
and
mov
repnz
pop
pop
dec
dec
sbb
ret
pop
movl
pop
fwait
inc
lea
clc
pop
mov
pusha
test
addr16
ljmp
or
idiv
mov
rcll
aas
fs
iret
sbb
jecxz
cld
movsb
ljmp
out
mov
sub
dec
xor
mov
and
addr16
fiaddl
addr16
xchg
out
out
pop
test
mov
aad
sarb
xor
mov
cmp
cs
and
inc
loopne
mov
push
adc
mov
ljmp
jl
int3
adc
xchg
mov
clc
sub
imull
aad
xchg
loope
mov
mov
jge
dec
sbb
fmuls
stos
and
xchg
push
lcall
sahf
aam
int
int3
jmp
ret
pop
adc
mov
jp
dec
and
mov
shlb
xor
add
cmp
add
iret
push
pop
dec
arpl
inc
ds
jbe
incl
jae
push
test
bound
outsb
or
mov
lcall
gs
mov
sti
sbb
js
mov
jge
fucomi
jae
inc
mov
sub
and
sarl
mov
fs
sub
test
mov
scas
inc
out
jnp
lcall
sbb
xchg
push
jbe
scas
in
sbb
xchg
jg
mov
sub
out
sbb
dec
cltd
cwtl
jg
gs
mov
mov
mov
push
loope
dec
aaa
test
aas
sbb
scas
and
test
rcrb
insb
lret
xchg
sbb
fisttpll
adc
shl
jo
sub
pushl
popa
subb
cmp
add
sbb
sub
pop
in
adc
jb
xlat
xor
inc
lcall
stos
xchg
negb
shrl
push
dec
dec
lods
dec
pop
fstpt
adc
sti
outsl
shrb
test
inc
aad
pushf
call
push
aas
xchg
inc
push
scas
dec
mov
lods
lcall
pop
nop
add
mov
sahf
pop
ret
cltd
or
add
sbb
jp
cld
mov
xor
xor
aad
int
inc
mov
adc
clc
pop
sbb
stos
idivb
pop
or
sbb
repz
test
outsb
push
push
dec
stos
stc
pop
and
sbb
sbbl
hlt
jmp
and
aas
gs
popf
cmp
inc
in
push
iret
imul
enter
std
adcb
adcb
leave
cld
and
jle
xchg
cld
mov
mov
test
fbld
cmp
mov
pop
xchg
bound
jae
mov
sti
xor
ljmp
jecxz
xchg
adc
jge
cmp
push
inc
daa
push
mov
inc
imul
cmpsl
pop
fnsave
jb
inc
mov
jae
arpl
push
icebp
add
mov
mov
push
sub
movl
fbstp
pop
pop
mov
out
mov
push
mov
xor
js
mov
iret
out
dec
out
ret
jp
mov
cmp
in
mov
push
push
push
scas
or
and
push
push
inc
orl
ds
movzwl
test
pop
jmp
aad
cli
adcb
mov
jl
push
test
cmc
sub
insb
mov
out
xchg
ficomps
data16
push
jae
xchg
ljmp
xchg
inc
mov
ds
imul
add
xchg
xchg
cmc
ret
out
inc
pop
pop
cmpsb
sub
mov
cmp
adc
testb
int3
mov
or
bnd
stos
sbb
and
insl
sub
pop
sub
jb
rolb
jb
pop
mov
dec
mov
and
aas
and
jmp
into
imul
movsl
sbbb
add
xor
lret
xchg
daa
test
or
shl
sbb
in
jp
dec
lea
int
mov
repnz
push
mov
mov
xor
testb
and
pushf
cmc
pop
dec
popf
lret
test
xor
cli
data16
out
nop
mov
sub
push
leave
cld
lret
iret
mov
arpl
lock
out
add
das
hlt
mov
jbe
adc
arpl
dec
jno
insl
mov
inc
test
or
pop
pop
jne
add
insb
mov
in
xchg
ror
lock
aam
jne
incl
lock
out
stc
in
or
pop
test
xchg
jmp
daa
pop
push
ss
lea
in
cmp
insl
loopne
int3
mov
dec
sbb
cli
mov
ss
jnp
cli
push
mov
and
addr16
cwtl
hlt
aas
lea
sbb
outsb
lcall
inc
test
push
sub
mov
or
scas
mov
out
ds
xchg
shll
xorb
add
jne
rclb
pop
add
jle
gs
les
mov
pusha
cmc
or
pop
and
fisubs
je
fstpt
je
dec
xor
sarl
cmpsb
loopne
pop
out
and
test
lahf
push
sbb
dec
je
fs
cmpsb
xor
aas
fnstenv
xchg
xorl
cmp
mov
sbb
push
mov
push
in
pop
sbb
and
test
or
jno
ss
imul
sub
dec
xchg
mov
xor
lcall
inc
sti
sti
lods
pop
insl
inc
or
rep
lcall
jne
or
push
pop
sahf
das
xchg
or
cmc
rcrb
call
imul
test
mov
stos
mov
int3
imul
das
mov
ja
loop
jae
xchg
xchg
mov
cwtl
repz
xorl
pushf
shlb
cmp
add
in
mov
stos
lods
mov
mov
test
jmp
test
cmp
sbb
js
push
jae
xchg
mov
into
mov
mov
into
frstor
das
adc
xor
cld
lcall
dec
data16
ja
push
or
add
mov
in
imul
rcr
daa
xor
les
lods
xor
xorb
mov
push
call
movsl
mov
adc
fstps
and
or
xchg
push
popf
xchg
test
shrb
inc
iret
dec
or
mov
dec
bound
jae
xor
out
jmp
push
mov
in
ret
lods
lds
in
mov
aaa
sbb
mov
pop
cmpsb
jb
pop
ss
adc
xchg
scas
push
scas
scas
in
popf
inc
or
das
add
mov
int
dec
repz
idivl
cmc
mov
jl
sarb
ss
adc
jns
push
mov
adc
pushf
cmpsl
cmp
adc
sub
iret
into
push
dec
jge
outsb
mov
test
mov
dec
sarb
add
test
or
mov
and
mov
xlat
sti
test
jo
les
test
mov
cmp
and
cs
mov
test
icebp
jo
push
rorb
sti
xor
pop
xor
mov
rcrb
imul
jbe
std
nop
adc
jo
mov
dec
fs
sub
out
pushl
fwait
std
out
add
int
mov
and
push
pop
and
pop
sub
insl
cmp
mov
xor
xchg
fsubp
clc
jge
outsl
aam
cmpsl
repz
xlat
cmp
pop
test
adc
dec
testb
push
inc
adc
mov
or
jo
xchg
incb
dec
inc
repz
sub
push
arpl
fisttpll
dec
lods
out
aad
cmc
xchg
add
flds
xchg
in
mov
and
add
inc
or
dec
scas
or
jmp
imul
push
out
lods
pop
imul
cs
and
cmp
adc
sub
fsubp
push
pop
ror
or
shl
clc
jns
sbb
inc
mov
into
movsb
mov
xor
sub
lods
test
push
cld
in
shlb
add
movsb
add
std
out
mov
in
repnz
dec
pop
pop
outsb
adc
cs
add
mov
jno
adc
adc
and
mov
jge
mov
mov
nop
das
push
imul
inc
lock
sbb
mov
jp
ljmp
xchg
cmp
mov
repnz
cmpsb
out
popa
mov
gs
add
push
lods
xchg
mov
aaa
lret
repz
add
cs
aas
lods
mov
sbb
loopne
xor
mov
mov
push
dec
and
shlb
push
scas
dec
lar
out
sbb
nop
repnz
pushf
das
add
jnp
fiaddl
stos
fistpll
pop
jecxz
mov
int
xchg
ret
inc
dec
cmp
es
add
adc
repz
pushf
pop
sbb
test
sbb
daa
mov
test
out
mov
rcrl
or
xor
mov
mov
dec
jecxz
add
cmc
mov
jns
cmc
mov
das
inc
xchg
pop
and
sbb
jnp
push
lods
ret
hlt
popa
shrl
mov
xchg
lret
in
cmp
scas
xor
pop
push
dec
fisubrs
or
stos
fwait
popa
adc
dec
sub
sbb
hlt
and
add
pop
cmp
xchg
add
fnstsw
mov
push
add
cmc
and
cld
push
in
mov
scas
mov
jp
das
xlat
xchg
mov
mov
inc
ss
jmp
addb
lret
and
inc
xchg
outsl
ja
int3
push
pushf
movsb
inc
sub
pop
jb
out
sti
lret
adc
inc
adc
mov
enter
add
leave
ret
xor
inc
xor
xchg
je
shrb
das
aad
lea
fs
fmull
sbb
pusha
push
jecxz
pop
fisubrs
popf
mov
mov
sub
rcl
call
arpl
aas
ffreep
add
sub
sarb
lret
adc
and
xchg
aas
xor
inc
movsb
shrb
jg
xor
sub
inc
cmp
xchg
orb
out
fsubp
jl
mov
and
mov
insb
mov
in
xchg
in
sbb
mov
push
pop
test
frstor
fwait
mov
adc
xchg
je
out
and
lcall
mov
mov
jl
dec
sub
jmp
and
shrl
icebp
mov
and
adcb
xor
fnsave
rcl
fsubl
sbb
push
iret
imul
inc
stos
imul
cld
push
inc
mov
mov
or
xchg
scas
jo
outsb
enter
fmulp
mov
cmp
pop
ja
push
clc
in
gs
scas
sbb
in
pop
adc
into
je
push
inc
mov
sti
add
lahf
cmp
movsl
imul
add
cmp
push
into
adc
inc
adc
push
mov
pop
and
fidivs
scas
or
imul
and
inc
pop
mov
add
jno
push
test
add
xor
shlb
in
sarb
arpl
jge
outsl
mov
mov
loope
mov
mov
test
repz
sbb
push
mov
mov
push
mov
insl
testl
push
inc
jno
or
bound
std
js
mov
mov
lret
cmp
aas
and
or
sahf
test
push
dec
out
int3
popa
sbb
lea
fildll
pop
pusha
sub
push
nop
sbb
dec
push
fwait
scas
xchg
cmp
flds
push
add
push
pop
int3
andb
sbb
fldt
sub
sahf
das
icebp
les
fadds
push
jl
adc
das
jb
xchg
xor
scas
outsb
mov
out
adc
push
aam
dec
mov
add
clc
call
jp
or
sbb
mov
bound
mov
stos
mul
jg
cmp
pusha
lcall
jo
cltd
fwait
or
jmp
fbld
add
sbb
pusha
addr16
push
inc
das
pop
out
loop
scas
push
xor
shlb
fsubl
in
pop
ss
orl
inc
lods
lds
popf
adc
xchg
inc
jbe
pop
rol
std
and
std
dec
jbe
out
add
xor
xchg
jecxz
push
out
pop
mov
mov
dec
add
sub
push
iret
sbbl
fadds
inc
scas
mov
loope
dec
xlat
jno
insb
arpl
int3
cmp
cmpsb
outsl
and
rorl
outsb
xor
orps
xlat
or
mov
pop
push
shrl
pop
mov
jb
rcl
push
ror
inc
inc
cmpl
repz
or
inc
adc
sub
scas
jmp
mov
outsb
mov
or
sbb
cli
lods
mov
jge
iret
aad
pop
and
cmc
xchg
mov
in
inc
outsl
shr
cltd
dec
rcrb
xchg
mov
sub
mov
orb
sarl
psllq
xlat
sub
and
mov
leave
sarb
mov
mov
icebp
lods
sbb
outsl
lods
sbb
xchg
aas
sti
mov
adc
sbb
ror
repnz
rol
orl
and
dec
arpl
repnz
pop
jmp
test
or
popa
adc
in
gs
pop
or
pop
out
add
mov
dec
sahf
rorl
fucomip
mov
add
mov
scas
dec
arpl
loop
push
xor
adc
fcompl
data16
das
lcall
push
sbb
outsb
jge
push
arpl
sub
fcomp
sahf
sub
int
or
push
iret
cmpsb
pop
inc
adcb
mov
cwtl
pop
fimull
pop
adc
mov
int3
pushf
frstor
jecxz
fsubrl
repz
sub
ljmp
int3
jmp
fbld
imul
subl
es
pop
jg
cli
ja
mov
sub
mov
leave
stos
xor
icebp
sub
dec
es
clc
xchg
xchg
addr16
inc
je
insb
dec
ja
ret
bound
enter
xchg
js
push
ficomps
test
in
push
jno
or
mov
pop
mov
fadd
add
and
cmp
jle
js
add
insb
jns
fisubrl
stos
jno
insb
in
add
nop
pop
mov
adc
and
jno
testb
dec
imul
push
push
es
jae
dec
ret
mov
mov
icebp
sub
pop
bound
cltd
push
cli
lahf
ja
aam
stos
decb
loopne
iret
cmp
add
int3
pop
pop
imul
sbb
push
mov
in
in
sbb
je
ljmp
cmp
mov
std
jl
cmpsb
xor
cli
add
andl
shr
popa
sbb
xchg
pop
and
stc
push
negl
int3
lahf
xor
adc
mov
roll
lcall
repz
sub
push
cmp
xchg
mov
and
mov
xor
scas
out
mov
pop
pop
lds
sti
in
jbe
pushf
je
data16
cmp
mov
lds
sbb
adc
flds
mov
repz
push
subl
mov
jg
inc
testl
jle
call
mov
add
enter
sbb
das
inc
push
mov
mov
mov
mov
mov
pop
push
loop
mov
sub
scas
or
sbb
loope,pt
mov
mov
lret
in
and
mov
outsb
jbe
cmp
je
cmc
cmc
push
jecxz
leave
imul
or
cmp
sahf
roll
std
test
sarb
mov
rclb
xor
ret
push
in
stc
mov
cmp
add
inc
movsb
add
cwtl
cwtl
aad
insl
js
lods
mov
inc
scas
iret
andb
sti
mov
out
fwait
push
mov
lea
mov
addr16
lock
mov
xchg
pop
sub
xor
mov
ljmp
or
xchg
mov
push
mov
mov
aas
das
fistpll
pop
or
sbb
inc
test
mov
shrl
push
and
stc
add
dec
js
inc
inc
aaa
dec
mov
jle
iret
xlat
xchg
jg
jb
aas
leave
xchg
inc
jg
pop
adc
adc
push
scas
insb
sbb
jg
adcl
inc
loope
popa
es
push
div
cli
push
push
pop
es
int
add
add
fidivs
ror
cmp
and
cmpsb
dec
sarb
clc
mov
cmpsl
lea
std
lahf
repz
adc
in
mov
and
pop
rorb
cmp
sarl
out
mov
es
test
add
sbb
jmp
std
add
test
and
adc
pop
std
shlb
int
mov
mov
outsl
lahf
jno
addr16
sub
sbb
dec
pop
insb
jmp
idiv
dec
mov
mov
fs
test
pushf
mov
jecxz
xchg
sub
stc
or
mov
dec
push
and
push
xorb
pop
inc
lcall
jg
vpmadcswd
ret
pushf
mov
fpatan
ja
or
cmp
mov
test
out
push
icebp
xor
push
jb
shrl
or
mov
sub
js
scas
and
stos
jnp
mov
adc
in
or
outsb
ljmp
push
aas
xchg
shlb
inc
lret
insl
jbe
xchg
aad
orl
aas
sub
pop
ljmp
test
in
inc
xchg
adc
addr16
xchg
popa
repz
dec
sbb
cmp
fwait
mov
call
inc
stc
iret
out
in
dec
cmpb
mov
cmpl
loop
jbe
ror
xchg
mov
sbb
inc
or
fsts
adc
pop
sub
adc
notb
test
inc
pop
mov
in
sub
in
push
jne
push
sti
icebp
fisttpl
cmc
push
loopne
mov
xchg
xchg
test
outsl
lret
xchg
mov
jmp
nop
pop
loopne
and
jno
es
test
xor
lahf
pop
bound
rclb
inc
push
movsl
pusha
fisubrs
call
imul
mov
addr16
push
or
stos
popf
popf
mov
mov
jecxz
pop
lock
push
clc
lret
es
push
xchg
lea
scas
jle
add
aaa
jne
es
pop
shrb
jle
sbb
xchg
push
push
mov
mov
stc
sub
sub
mov
cmpsb
mov
xor
sarb
incb
mov
lret
dec
inc
cmpsl
movsb
pop
sarb
xor
pop
or
cltd
fmul
les
xlat
into
cmp
or
icebp
mov
pop
cwtl
cs
mov
mov
cmp
fcompp
mov
jno
out
stc
mov
jp
jno
shlb
push
push
pop
jp
sub
xchg
fsts
and
jl
in
push
inc
mov
mov
inc
mov
push
or
movsb
repnz
mov
shrl
out
mov
push
divl
fnstenv
mov
add
adc
insl
sub
xor
jno
fldcw
mov
jnp
pop
adc
divl
pop
addl
lods
test
inc
stc
test
ret
and
clc
sub
mov
pop
pop
mov
jecxz
in
aas
xchg
add
or
jle
pop
ja
mov
pop
add
ret
adc
inc
shrl
es
je
cmp
adc
push
out
inc
xchg
push
daa
daa
cmp
push
jne
mov
adc
movl
cld
adc
and
mov
jne
mov
fisubrs
or
test
xor
rolb
lock
pushf
sahf
icebp
popa
mov
pop
imul
push
fdivs
mov
call
sbb
pop
arpl
loop
mov
ja
clc
cmpsb
or
movsl
dec
and
ds
push
jge
and
pop
into
mov
imul
push
xor
or
xor
nop
cmp
xchg
sbb
in
icebp
adc
xor
outsl
cmp
xor
lods
dec
mov
andb
adc
mov
xor
jecxz
xor
and
pop
cmp
inc
test
xchg
cmp
cmpsl
mov
je
mov
or
or
inc
mov
mov
pusha
popf
mov
imul
std
xor
dec
pop
repnz
cmp
xchg
cmp
sbb
fstps
repz
or
insl
pop
pop
fdivr
and
inc
je
jne
push
or
sub
jae
xchg
jl
rorb
pop
jo
and
lods
dec
or
stc
inc
out
out
loope
mov
mov
mov
mulb
xchg
addr16
ficomps
movsb
mov
ljmp
pusha
test
int3
jmp
xchg
lahf
xorl
ret
ljmp
icebp
cmp
jmp
das
test
jne
jmp
sbb
sbb
cmp
lea
fisubs
hlt
mov
aad
jmp
gs
inc
cmp
dec
pop
jmp
ja
xchg
lds
orl
push
inc
ss
mov
les
outsb
xlat
add
add
icebp
xor
sub
loop
jne
jbe
lcall
popf
ds
or
out
cmc
aas
ds
mov
or
imul
sub
pop
mov
inc
lahf
cltd
hlt
dec
test
lods
test
xor
or
lahf
popl
add
and
sub
inc
pusha
je
icebp
xchg
das
ret
aaa
mov
push
shrb
aam
lock
cli
fsubs
pusha
jl
sbb
jne
clc
and
daa
test
or
in
cs
in
das
push
xor
daa
ljmp
ljmp
add
adcb
mov
in
jae
aaa
jae
dec
aas
negl
stos
insl
cmpsl
fimull
les
adc
or
cmp
mov
pop
mov
lahf
pop
push
das
or
dec
cld
cltd
pop
scas
jne
rcrb
or
test
arpl
xor
jo
jo
pusha
mov
xlat
leave
scas
stos
sbb
in
sbb
adc
sbb
jae
pop
dec
push
mov
jp
push
fldcw
push
dec
mov
xchg
je,pt
roll
cmp
mov
mov
and
xor
or
test
push
cs
imul
xor
movsb
jo
lret
lods
movsl
mov
mov
push
fmull
out
dec
or
mov
jmp
cmp
fstpl
add
aas
xor
arpl
arpl
adc
jmp
shlb
cld
dec
mov
push
mov
add
orb
sar
or
out
jmp
ja
push
adcb
push
ja
dec
icebp
cmp
out
and
fidivrl
cmc
or
push
fadd
pop
sub
dec
int
sub
mov
jecxz
cmp
lock
mov
cli
sub
in
test
dec
jae
add
dec
jbe
mov
push
loop
xchg
push
xchg
sbb
test
loopne
pop
mov
mov
hlt
aam
sub
outsb
and
cli
roll
leave
add
jnp
jne
int
push
xlat
cld
mov
jle
pop
xchg
push
dec
dec
sbb
andb
inc
mov
je
push
xor
push
pop
incb
jl
test
push
pusha
jmp
add
and
movsb
xlat
push
lods
dec
push
xor
pop
das
push
loopne,pt
dec
lds
out
and
shll
iret
jp
dec
xchg
bound
jo
pop
mov
cltd
popa
mov
aas
adc
and
cwtl
fildll
cmp
sub
ffreep
mov
sbb
fiaddl
xchg
fisubs
dec
cmc
mov
inc
xlat
cld
test
hlt
xchg
outsb
lret
shll
or
push
data16
cmp
jecxz
mov
mov
movsb
fbld
cltd
jmp
xchg
cmp
cmc
dec
mov
xor
dec
mov
fidivrs
dec
scas
aas
fcmovb
stos
inc
ljmp
les
ret
adc
gs
sbb
lcall
or
lock
sub
and
hlt
fiadds
push
push
mov
inc
rcll
push
orl
pop
mov
fstps
lock
in
lea
je
pop
imul
call
imul
les
sbb
flds
lret
xchg
ret
sbb
add
inc
jno
xchg
adc
adc
mov
lods
add
push
xchg
or
inc
or
lea
lcall
fildll
sub
aad
std
lret
inc
cmpsb
insl
pop
push
dec
mov
icebp
scas
jno
and
hlt
jp
inc
jns
arpl
arpl
and
and
mov
inc
xchg
sbb
push
cltd
out
xor
sub
lds
push
push
xchg
xchg
sub
je
out
stos
sahf
sbb
rolb
hlt
popf
test
fdiv
aas
push
dec
gs
ds
sbb
cmpsl
and
jae
pop
or
sbb
sub
xchg
sbb
add
popa
pop
imul
push
cmp
imul
test
mov
aaa
mov
and
dec
push
inc
cld
dec
out
inc
dec
inc
or
jno
pop
cli
in
fisttpll
out
push
push
addr16
sbb
xchg
mov
ds
add
mov
stc
stos
pop
push
or
call
dec
insl
sarb
or
pop
inc
inc
sarb
leave
push
add
adc
insl
pop
cmp
ljmp
bound
addl
mov
ss
ja
adc
popf
popf
repnz
mov
dec
in
arpl
and
dec
sbb
xor
push
pop
icebp
js
lods
fwait
cltd
xchg
mov
mov
add
and
jne
jmp
mov
das
or
lock
mov
fucomi
es
bound
in
lret
mov
xchg
pop
pop
xor
cwtl
sub
aas
mov
insl
mov
xchg
inc
lods
loop
xchg
xor
inc
repnz
leave
inc
mov
sub
xchg
shl
cmp
iret
imul
cli
cwtl
cmc
mov
cmp
test
jmp
adc
ss
and
dec
xchg
cmp
or
inc
sub
dec
push
daa
push
fistpl
iret
aad
mov
andl
xchg
xchg
in
xlat
pushf
outsb
insl
cmc
out
leave
mov
pop
addr16
inc
lret
enter
imul
insl
adc
mov
test
fisubrl
mov
jge
mov
adc
xor
mov
les
jecxz
push
lock
scas
mov
sub
dec
xor
aaa
aad
jmp
jae
sub
inc
ljmp
dec
mov
pusha
insl
cmp
push
jo
pop
mov
sbb
fistpl
xchg
movsl
hlt
mov
sub
mov
out
jecxz
test
xchg
jecxz
jmp
jae
clc
fwait
sti
add
sbb
lahf
mov
test
sub
sahf
test
rcl
insl
jno
bound
jmp
loop
lret
in
pushf
inc
out
loopne
mov
subl
out
xor
loope
fldenv
sub
in
pop
jnp
les
adc
idivb
fstpl
pop
mov
push
clc
test
stos
iret
add
dec
add
pop
dec
mov
jo
mov
cld
xchg
aam
mov
movsl
add
xor
scas
int
sub
insl
jl
or
in
xorl
dec
repnz
loop
mov
jo
jo
and
ret
aad
les
dec
pop
stos
jecxz
sbb
adc
push
outsl
inc
cmp
sahf
inc
lods
test
sarl
inc
cmp
lods
rorl
mov
dec
cltd
push
xchg
or
jp
aaa
xchg
sub
xchg
imul
leave
cs
jns
sub
fcomps
mov
cmpsl
aad
lar
push
sbb
adc
ja
jg
mov
cmp
rorb
daa
divb
mov
xchg
lcall
xor
or
pop
push
mov
mov
jl
imul
mov
cmp
mov
int
jle
loope
rclb
mov
sti
adc
and
jp
mov
xchg
lods
aad
shld
lahf
lock
mov
jmp
cmc
pop
or
push
loop
into
cmp
sub
scas
repz
mov
add
xchg
sub
jo
lods
repnz
mov
fstpt
test
xlat
cmp
daa
cmpb
cmp
icebp
cli
xchg
das
iret
or
xchg
mov
dec
sbb
sbb
mov
xchg
shrb
out
ficompl
jne
adcl
adc
mov
sahf
test
xchg
lret
addr16
jge
inc
dec
test
mov
push
in
xchg
pop
mov
cmpsl
push
dec
add
mov
push
lret
inc
xchg
xor
movsl
push
mov
mov
shrb
mov
adc
jb
cmc
sahf
rorl
fwait
aad
sub
or
xchg
pop
int3
xchg
xchg
dec
jae
in
sarb
lahf
test
iret
fwait
sti
adc
std
mov
sti
cmp
mov
movb
pop
mov
idiv
stos
ret
inc
xchg
jg
mov
dec
stos
stos
xchg
adc
dec
cmp
ret
mov
pop
adc
ljmp
icebp
xchg
or
jle
es
and
cmp
outsb
call
mov
sbb
sub
ret
mov
dec
sub
test
mov
mov
jg
nop
dec
mov
push
sarl
out
fistl
mov
les
aam
or
or
jno
cltd
add
mov
rcrl
push
loopne
xchg
push
fcmovnbe
aad
lret
lret
scas
into
cmp
je
loop
arpl
push
sahf
ja
adc
mov
movsb
mov
imul
cmp
fidivs
lret
repnz
jmp
dec
ja
es
mov
and
cmc
add
cmp
sbb
sub
mov
testb
ja
fnclex
mov
clc
std
adc
test
in
cmp
aad
lds
add
mov
jb
lds
pop
mov
inc
je
cmp
mov
shrb
loopne,pt
fidivs
jo
push
pop
lds
xchg
ret
stc
xor
cli
test
cmp
inc
test
sbb
jmp
cmp
mov
pop
arpl
out
popa
inc
hlt
cmpsb
cmpsl
dec
sbb
pop
fimuls
cmp
or
sub
dec
lock
out
sub
insb
in
sub
adc
ficompl
fldcw
popa
shll
and
fsts
loop
add
cmp
int3
addr16
rcll
and
arpl
xchg
daa
mov
mov
mov
movsb
jp
loope
xor
push
xor
ret
mov
xchg
outsl
add
push
jno
iret
mull
xchg
cmpl
into
ds
or
out
clc
das
daa
iret
sub
pop
pop
push
add
adc
es
jmp
mov
lods
mov
insl
cld
pop
sahf
pop
dec
mov
jne
cmp
jl
cmc
fadds
xchg
scas
faddp
fadds
mov
and
push
mov
test
insb
push
or
fsubl
xor
pop
adc
fcmovne
nop
mov
in
add
mov
push
cld
dec
sti
pusha
arpl
mov
shll
jl
out
push
bound
clc
sub
rcrb
lret
mov
les
mov
nop
lds
bts
pop
mov
jle
mov
xor
call
sti
push
inc
outsb
in
out
sub
pop
adc
shrb
xchg
push
xor
enter
or
ljmp
or
push
mov
dec
jg
fwait
test
sbb
movsb
shlb
lret
repnz
push
jg
mulb
cwtl
test
add
push
leave
sub
cmp
or
xchg
lods
add
mov
je
inc
mov
je
aad
lds
add
xchg
fcmovnb
test
jo
mov
sub
xor
cmp
xchg
cs
mov
fcmovnbe
sub
mov
setnp
fidivs
js
jb
mov
add
fiadds
outsl
adc
jo
notl
in
dec
and
imul
lret
pop
aad
andb
js
cltd
lret
pop
movl
or
out
jl
sbb
mov
xchg
ss
subb
lods
dec
dec
inc
adc
scas
dec
ret
cmp
aad
jp
fmulp
fstpl
idivl
sbb
pop
fcomip
sar
test
push
jns
push
mov
mov
cmp
sub
lahf
bound
das
inc
loopne
push
sahf
xor
mov
imul
rcrl
out
xchg
jb
mov
or
loop
mov
mov
or
jge
cmp
fstpl
stc
aaa
pop
dec
cmpsl
addb
mov
sub
and
pusha
enter
imul
movsb
dec
add
cmpsb
fwait
addb
and
cmpsl
and
js
ds
lea
xchg
mov
push
scas
or
mov
sbb
test
popf
push
push
out
sbb
dec
in
imul
cmp
push
sbb
lds
mov
pop
mov
fwait
hlt
xchg
dec
push
mov
cmp
lahf
adcb
cmp
stc
xchg
dec
fst
cs
or
xor
dec
jns
sar
imul
stc
and
jae
fs
mov
sbb
pop
aam
call
leave
cltd
movsl
scas
and
gs
mov
mov
in
ds
push
mov
mov
out
sub
sub
lcall
push
adc
fisttpl
mov
add
test
cmp
out
enter
and
inc
int
pop
rclb
add
lock
ror
imul
or
imul
out
test
push
loopne
sub
cwtl
jne
stos
shl
pop
je
cmp
sub
xor
mov
adc
fidivrs
imul
scas
pop
push
je
int3
jle
xorl
mov
jno
xor
cmp
push
xchg
filds
xchg
loopne
pshufw
in
in
icebp
dec
imull
dec
push
inc
mov
in
cltd
dec
push
iret
mov
and
scas
cmp
insb
sbb
mov
aad
sti
xor
clc
inc
les
jns
out
ds
movsb
pop
pop
popa
xchg
and
pop
into
test
jb
outsl
mov
jb
lret
adc
test
fbstp
pop
sbb
push
adc
lods
xor
es
test
arpl
and
or
rcll
push
sbb
mov
inc
rcrl
mov
cmp
pop
fisubrl
movsb
pushf
out
mov
push
mov
push
add
dec
ljmp
out
fstpt
lret
cmp
xor
jb
jp
add
inc
in
in
mov
mov
inc
pop
lds
mov
jge
lahf
lcall
mov
pop
frstor
jecxz
sub
cmpsl
scas
test
push
push
stos
into
ljmp
into
xlat
dec
jle
test
jb
call
mov
xor
add
pop
sub
inc
shlb
xchg
insl
cmp
or
and
je
pop
xor
add
cld
push
repnz
mov
cs
ret
mov
enter
shrl
ljmp
cmp
rcrb
dec
pusha
xchg
stc
mov
jo
in
sub
inc
inc
mov
insl
xor
xchg
mov
adc
test
insl
ficomps
cmovbe
cmp
inc
adc
push
mov
add
pop
pop
jns
leave
or
jb
inc
rcll
ret
call
xchg
xchg
lahf
das
xchg
sbb
sbb
push
add
sub
ss
xchg
inc
dec
fstpl
or
out
push
iret
mov
sub
stc
dec
inc
cmp
xor
jmp
mov
orb
popa
cwtl
pop
jl,pn
xchg
jb
outsb
lahf
xor
sbb
mov
xor
faddl
sub
xchg
mov
out
xor
dec
test
jmp
sub
or
insl
hlt
mov
into
dec
cs
xchg
cs
int
in
jnp
sti
push
or
out
xchg
mov
or
mov
xchg
mov
call
mov
ljmp
sbbb
cld
sbb
xchg
mov
mov
pop
push
leave
push
ds
int
add
adc
test
inc
sti
jp
inc
mov
or
xlat
stos
fnstsw
jle
pop
ror
and
sub
imul
pop
pop
imul
mov
mov
je
jge
aaa
xor
dec
push
push
shll
fbld
icebp
sbb
or
cmp
pop
inc
ret
mov
and
sbb
xchg
push
andb
daa
push
loop
jmp
lret
vroundps
daa
in
lahf
mov
imul
push
pop
xor
outsl
aas
stos
mov
ljmp
fcomps
mov
je
jae
das
roll
xlat
repz
cmc
push
sbb
jg
xor
bound
jmp
jl
mov
in
daa
insl
pop
mov
scas
sbb
negl
sbb
adc
sbb
xlat
adc
cmp
mov
fstl
mov
cmp
test
and
mov
push
jecxz
sub
jnp
mov
stos
mov
and
inc
aam
xlat
jge
test
xchg
add
jge
test
insb
out
mov
cld
inc
mov
cli
fs
mov
cmpsb
pop
dec
xchg
pop
sub
or
pusha
dec
jb
stc
fdivrs
dec
icebp
cwtl
mov
xor
mov
sub
andb
fwait
pushl
les
int3
push
clc
or
dec
fs
mov
mov
jnp
sarb
cli
adc
cmp
xchg
or
scas
loop
int
add
jne
sbbl
push
ret
roll
lods
shlb
subl
int3
dec
sub
inc
lods
es
and
fdivl
sbb
xchg
mov
js
outsb
dec
int3
xchg
mov
push
and
xchg
cli
dec
or
nop
mov
insl
ss
mov
fdivl
test
pop
imul
loop
fidivrs
dec
mov
jl
shlb
mov
and
outsb
repnz
fiadds
mov
out
dec
jnp
jo
aam
loopne
lock
add
jg
imul
jle
mov
imul
aam
call
add
sbb
adc
cld
adc
mov
lret
ja
jmp
xor
mov
test
jb
and
lock
mov
lods
push
aam
imul
outsb
cltd
xlat
xchg
in
cmc
fstpl
pop
and
and
in
inc
cltd
add
into
nop
fsubrl
or
mov
mov
cltd
cmp
cmp
push
sbb
jno
inc
jge
mov
loope
mov
repz
fwait
rclb
enter
lcall
leave
fcomp
sti
add
sbb
fwait
or
mov
xchg
and
das
ds
call
inc
inc
iret
dec
scas
inc
and
mov
jmp
push
xchg
cld
xchg
mov
xor
enter
cwtl
repnz
sbb
lret
and
jmp
cmp
pop
adc
lcall
daa
jmp
orl
inc
bound
push
cmp
popa
bound
pop
mov
cmp
cmpsb
ljmp
mov
js
dec
imul
sbb
push
ret
xor
daa
out
xor
sti
mov
out
sub
addl
sarl
dec
nop
mov
lret
dec
add
sbb
mov
test
ljmp
stos
jp
or
aaa
in
fisttps
mov
loopne
pop
leave
jne
add
push
das
subb
mov
xchg
bound
cmp
mov
inc
push
mov
loop
mov
int3
sbb
adc
dec
mov
push
jg
stos
sub
gs
mov
cmpsl
dec
decl
xor
dec
ja
inc
lock
fs
inc
adc
cmp
mov
sbb
sbb
cmp
lds
mov
aad
add
or
bound
aas
pusha
cmp
sub
push
dec
xor
mov
hlt
fwait
xchg
cmp
mov
cmp
shrb
or
sahf
aas
scas
xlat
enter
inc
daa
rcll
fwait
mov
dec
sbb
loope
add
movsb
lds
ret
call
dec
repz
iret
aam
pop
adc
mov
jne
pop
mov
sbb
pop
test
xor
out
outsb
jecxz
mov
jnp
pop
add
fisttps
mov
lea
cmc
cmp
add
lock
xchg
jl
daa
dec
outsl
inc
or
xchg
jge
out
sbb
stos
xchg
inc
mov
jle
hlt
mov
out
divl
dec
movsb
iret
ficompl
cmpb
inc
lods
sbb
jmp
or
jb
inc
xlat
in
mov
cmp
inc
outsb
xchg
pop
ret
lods
push
hlt
inc
bound
xchg
pop
xchg
leave
ret
dec
int
inc
jg
or
push
or
rcrb
es
and
aas
movd
jle
pop
adc
lea
sub
nop
scas
pop
popf
mov
ljmp
xor
adc
fmul
out
movsb
flds
sub
mov
cmp
xorl
jne
inc
je
out
and
push
out
in
lds
xlat
sub
fildl
ljmp
scas
fnsave
fisttpll
sub
jg
xor
and
and
adc
rcr
test
les
int
jle
in
sbb
adc
es
push
and
mov
add
cmp
sahf
xchg
adc
sti
sub
jecxz
add
mov
outsl
inc
fdivrp
sub
loope
scas
xchg
xchg
call
xlat
jbe,pn
xchg
jecxz
jbe
rcrl
addb
mov
pusha
push
je
mov
mov
cmp
pop
dec
fldt
dec
ss
jl
push
incb
dec
mov
fwait
sub
pop
jns
lods
jae
mov
iret
ffree
xchg
cmp
into
lock
fcom
fstl
dec
scas
es
movsl
lret
call
inc
inc
ds
mov
movsl
insb
aaa
int
out
mov
mul
xlat
inc
outsl
pop
sbb
xor
and
fdivs
ror
pop
adcl
cmp
std
pop
push
jge
ljmp
mul
outsb
xchg
decl
in
mov
xor
jecxz
sbb
inc
fs
in
cld
cltd
inc
pop
push
jne
add
push
xor
jbe
xor
inc
test
add
dec
test
dec
scas
loope
clc
jl
out
add
rcr
or
data16
loopne
xor
xchg
xchg
cld
aam
loopne
sub
pusha
jp
addr16
call
popa
into
fstpt
pop
cmpsl
xlat
rcrl
or
push
xchg
inc
in
add
lret
int
mov
xchg
dec
dec
cmp
cwtl
test
fsubrs
cmc
repnz
and
inc
xor
adc
sbb
mov
movsb
pop
mov
sti
cmpsb
push
movsl
movl
jmp
jge
mov
jb
xor
adc
xchg
xor
sbb
cmpsb
xchg
out
int3
and
lods
xlat
cmpb
pusha
inc
inc
iret
fisubrs
sahf
loope,pn
dec
inc
cmp
fs
mov
inc
sub
shl
mov
popa
mov
cli
sbb
lcall
and
into
insl
xor
jno
sub
movb
movsb
call
adc
or
mov
dec
out
fcoml
jecxz
jmp
leave
push
idivb
pop
inc
lds
mov
imul
jmp
int
nop
jle
je
xor
not
test
mov
out
imul
adc
data16
imulb
aam
pushf
in
sub
sbb
ffree
xor
icebp
arpl
mov
mov
shr
pop
pop
loopne
fs
repz
mov
sbb
inc
ret
pop
sub
out
loop
in
das
movsb
jne
fildl
pop
orb
jns
add
xor
mov
pop
lock
xor
cmp
shrl
in
sbb
pusha
adcl
sub
jno
mov
sbb
adc
push
add
lods
mov
sub
adc
cld
notl
ss
xor
loopne,pt
or
lret
insb
in
pop
clc
mov
fcomi
ret
push
xchg
inc
test
data16
sbb
mov
int
sub
dec
loopne
and
es
jbe
cmp
sub
stos
ret
sub
testb
in
adc
jecxz
xor
cmp
mov
stc
cli
movsl
pusha
ja
shl
stos
cli
sub
cmp
xchg
stos
push
dec
aad
adcb
outsl
pusha
cmp
push
push
aad
and
sub
adcl
mov
push
inc
and
jmp
cmp
cmpb
arpl
mov
push
int3
pop
sub
ss
xor
icebp
pushfw
roll
sbb
fcoml
mov
push
jl
repz
dec
jbe
jne
cld
mov
adc
jbe
rclb
inc
dec
sbb
pop
push
jge
insb
mov
dec
jbe
push
rol
jmp
repz
add
lds
loop
add
and
and
insl
push
imul
js
scas
sub
cmp
mov
arpl
pop
and
push
cwtl
or
arpl
sarb
mov
test
outsb
int3
mov
inc
int
scas
cmp
push
je
jmp
inc
out
repnz
inc
xchg
mov
das
or
xlat
sub
nop
pop
mov
pop
mov
pop
xor
subl
xchg
pop
sahf
rorb
out
xor
dec
mov
jno
jne
loope
mov
push
aad
out
filds
lahf
shrb
aaa
incb
outsl
inc
rol
jmp
inc
sbb
cmp
insb
mov
xchg
cltd
lcall
lock
dec
jb
rclb
mov
add
jmp
inc
xor
test
enter
push
mov
adc
addl
in
fcomip
nop
mov
frstor
adc
adcb
test
push
pop
jge
and
cltd
jno
lds
call
xor
std
sti
pop
popf
dec
sbb
or
push
mov
sbb
xlat
fs
imul
and
addl
js
dec
sub
subb
jle
push
dec
in
cmpl
mov
mov
cmp
fbld
or
push
jo
jbe
bound
dec
in
and
test
jle
nop
sbb
push
pop
dec
daa
out
mov
out
sbb
cmp
dec
out
jb
pop
addr16
cmpsb
or
pop
mov
test
test
cli
mov
sbb
mov
sbb
sti
dec
lcall
call
in
in
daa
xchg
call
dec
loopne
lret
push
or
enter
push
clc
ja
into
pop
lret
jb
popf
cmpsb
stos
hlt
mov
faddl
mov
imul
test
addr16
jb
xor
mov
sbb
fcomi
sub
mov
mov
jae
cli
and
xchg
add
out
push
out
adc
mov
leave
nopl
fldenv
sub
xchg
stc
gs
fdivl
or
add
test
lods
jns
push
push
add
cmp
push
and
sbb
cmp
inc
jo
push
mov
cmp
imul
leave
jne
clc
mov
mov
mov
in
stc
xchg
mov
pop
cmpb
pop
and
aaa
mov
lahf
mov
int
and
dec
jge
push
push
sbb
pop
shll
jle
xor
sbb
rclb
or
push
jne
gs
push
test
jbe
mov
jnp
out
cs
vpsubsw
in
lods
minps
pop
out
and
insb
cli
or
jmp
sbb
jb
sti
mov
xchg
mov
aam
scas
dec
push
mov
fs
xchg
popf
inc
fsubl
mov
inc
add
stos
test
outsb
push
fsubs
adc
and
xchg
loopne
add
or
int3
es
movsb
inc
test
jle
out
call
in
inc
cs
cltd
pop
inc
clc
cmpsb
pop
in
daa
pop
and
cltd
into
push
mov
xor
aas
hlt
loopne
jmp
mov
std
addb
mov
and
push
icebp
jbe
inc
fsubrs
mov
sbb
ficoms
outsb
faddp
pop
pop
imul
test
lcall
jg
arpl
fstpt
push
cmp
jns
ja
cs
xchg
mov
xchg
aad
push
sub
pop
in
test
mov
xlat
sub
pop
sub
mov
inc
insl
xor
mov
jae
je
jecxz
push
sbb
cmp
mov
scas
je
imul
mov
and
sub
add
push
stos
fstpt
test
jle
ret
inc
push
pop
sub
into
jecxz
rcll
and
jns
cltd
subb
mov
mov
clc
aaa
and
add
cmp
push
into
repnz
lret
jo
mov
push
aam
mov
fstps
sti
push
adc
orl
hlt
pop
fwait
push
pop
sarl
sbb
and
cmp
push
packuswb
mulb
mov
out
sub
std
mov
or
sub
cs
and
ss
jl
adc
xor
jns
inc
mov
or
jae
insb
mov
add
repz
jle
or
into
repnz
repz
dec
stc
frstor
lea
rorb
cmpsb
decl
add
stos
aam
pusha
fwait
inc
imul
mov
pop
out
mov
or
adc
insl
sub
aaa
mov
cs
mov
test
ja
inc
cmpsl
jo
sbb
pop
mov
cmp
les
ds
in
push
addl
xor
mov
and
hlt
wbinvd
sbb
push
pop
jecxz
aas
push
mov
sbb
and
mov
test
cltd
inc
in
jbe
lock
mov
shrb
xor
jne
cwtl
and
mov
jne
xor
loop
jle
cmpsb
inc
stos
push
pop
jp
adcl
or
icebp
sarl
mov
pop
push
out
iret
xor
add
ret
push
cmp
insl
sub
fsubs
mov
sti
xchg
adc
push
xchg
xor
notb
push
sbbb
rcrb
dec
cwtl
lret
cltd
mov
je
sbb
mov
xchg
pop
je
fnsave
call
cmp
iret
ss
and
test
adc
mov
xor
sbb
mov
jo
adc
sub
and
lods
or
xchg
leave
jns
inc
mov
mov
inc
dec
cmpsb
mov
or
push
mov
inc
cli
aad
cltd
add
pushf
dec
stos
xchg
mov
or
sbb
mov
push
sbb
nop
and
jle
mov
push
jae
and
sahf
xchg
xchg
cmp
nop
dec
je
lds
cltd
jo
xor
lods
push
aam
xchg
es
and
push
mov
daa
into
push
push
add
add
jno
icebp
pop
std
jp
mov
loopne
sub
xchg
test
mov
sub
es
push
pop
call
loopne
subb
dec
cmp
insl
enter
js
jle
pop
js
xchg
lods
jno
outsl
xchg
fidivl
popa
xchg
push
lcall
mov
fcomps
test
loope
aad
in
fiadds
repnz
dec
aam
sbb
or
jo
loopne
out
fwait
cli
inc
enter
add
daa
pop
add
out
testl
cwtl
fdivrl
pusha
lret
aam
pop
cwtl
mov
fidivrl
enter
imul
out
in
inc
dec
hlt
push
pusha
sarl
aad
ficoms
dec
sub
aam
shlb
popa
pop
sbb
insb
addr16
pop
adc
rorl
idivl
push
cli
cmc
or
pop
test
stos
xlat
int3
mov
mov
int
add
and
sub
shlb
inc
clc
dec
dec
repnz
jle
dec
jne
mov
xchg
push
leave
aaa
jl
bound
int
lods
cli
xchg
outsb
clc
inc
out
mov
call
loope
inc
fidivs
or
pop
xchg
push
stos
cld
int
sub
xor
xchg
sub
ljmp
std
mov
or
pusha
pop
stc
cmpsb
jno
pushf
negl
leave
sub
xor
pop
adc
push
outsl
xor
or
ja
hlt
pop
roll
and
sbb
sbb
pop
cld
sub
repnz
xchg
jp
cmp
mov
popa
mov
xchg
xor
lods
push
clc
data16
dec
xchg
cmp
pushf
scas
pusha
mov
xchg
sti
xor
popa
xchg
add
mov
repz
call
push
mov
adc
xlat
or
xor
pop
loopne
jbe
fdivrl
pusha
adc
popf
lea
push
or
stos
push
aas
xor
pop
lret
mov
iret
sbb
cmp
mov
and
aas
pop
fimuls
dec
mov
insb
cld
xchg
test
stos
in
xchg
iret
pop
cmp
xlat
aam
xlat
lcall
shr
sub
aam
scas
cmp
cld
dec
pushf
loope
push
pop
sub
addr16
aad
lods
add
mov
pop
sbb
enter
dec
aas
sbb
in
sti
es
xor
inc
pop
mov
inc
mov
adc
cmp
adc
sbb
push
add
and
lret
les
setnp
mov
jae
addr16
cs
fmul
adc
insl
and
scas
aam
scas
add
in
jg
pop
call
xlat
push
and
mov
popf
aas
test
push
pop
sar
adc
push
or
popf
in
je
leave
ljmp
add
jmp
or
sub
pop
sub
lcall
xchg
fists
outsl
mov
setge
dec
xchg
data16
sbb
mov
movsl
arpl
nop
push
iret
pop
daa
fnstsw
fnsave
stc
inc
xlat
push
aad
test
pop
push
ficompl
jp
jp
and
mov
mov
adc
and
out
cmp
lea
or
icebp
fimuls
xlat
xlat
pop
pop
dec
jecxz
ja
sub
inc
dec
pop
jl
fnstsw
stc
mov
shl
lret
stc
or
pop
cmp
jb
shll
daa
pop
cmp
push
jae
pusha
xor
fcmovb
sub
push
insl
adc
push
xor
fisttpll
les
faddl
js
iret
mov
stos
imul
add
push
sahf
mov
icebp
cmc
inc
sub
leave
jl
jae
or
call
and
insl
adc
xchg
dec
aad
out
xorb
ja
add
jl
test
dec
inc
pop
js
cmp
dec
jae
cmp
outsl
dec
add
push
or
push
outsl
fstp
add
push
pop
or
loopne
xchg
dec
imulb
or
mov
mov
lret
adc
pop
inc
add
xchg
mov
lahf
enter
pop
loop
adc
add
or
jmp
pop
insb
mov
mov
inc
cmp
inc
not
ror
mov
xchg
mov
jnp
sub
sti
push
push
jb
xchg
aaa
xchg
cmp
rol
push
add
lahf
and
mov
cs
mov
mov
push
loopne
or
xor
dec
pop
dec
fwait
mov
cli
cli
push
rep
popf
jne
xchg
lahf
pop
xlat
pop
or
cltd
cmp
fiadds
xor
lret
push
and
bound
pop
push
scas
call
mov
mov
xor
idivb
pop
inc
ja
xchg
inc
pop
shll
addr16
inc
sbb
or
dec
data16
inc
jo
jl
cmp
inc
dec
das
inc
call
into
scas
add
mov
pusha
mov
fidivl
push
push
mov
daa
loopne
mov
and
jg
adc
xchg
notl
scas
movsb
cmp
xchg
and
and
fmull
jl
xor
pop
leave
daa
push
or
jo
and
push
inc
mov
clc
addb
dec
jne
jle
jae
dec
dec
or
jl
push
ss
or
mov
hlt
dec
and
mov
testb
dec
test
xor
push
xchg
int3
into
cmp
cld
negl
xchg
sarl
xor
push
inc
dec
jg
repnz
pop
sbb
push
scas
push
mov
jno
lds
push
jl
xor
repnz
sbb
xchg
fists
insl
sbb
clc
cmpl
mov
sub
gs
sbb
xchg
dec
fucom
push
mov
ja
xchg
inc
mov
and
pop
mov
mov
and
cmp
leave
leave
out
push
inc
adc
bound
test
inc
and
sar
and
in
int3
ret
ret
out
pusha
jne
jmp
and
rorl
sbb
and
leave
test
test
push
jne
jp
sahf
xchg
arpl
bound
jns
mov
and
paddusw
dec
lods
std
out
sub
sub
sbb
dec
lods
call
pusha
xor
or
jne
imul
cli
adc
mov
xchg
pop
jp
mov
test
call
inc
inc
push
dec
mov
das
out
lar
push
mov
inc
xor
jb
sbb
inc
pop
roll
mov
jns
or
dec
stos
push
adc
pinsrw
sub
ret
stc
shll
cs
iret
mov
add
add
mov
xchg
or
pop
lods
and
mov
or
jae
shlb
sbb
fstps
hlt
jmp
inc
dec
dec
and
pop
pop
jmp
mov
push
dec
ss
and
iret
aad
pcmpeqw
outsl
sub
fcompp
xchg
push
sbb
sbb
add
stos
cmc
rol
clc
or
int3
cmp
cld
lret
push
mov
es
fstps
dec
cmp
cmp
in
sub
sar
ret
jnp
fmuls
push
repnz
mov
mov
lahf
test
inc
and
pop
xchg
adc
cmpsb
dec
aas
mov
cmp
lret
dec
xor
mov
imul
dec
outsb
lock
cmc
add
inc
pextrw
dec
lods
mov
mov
add
push
jecxz
mov
adc
push
pop
rcrb
cltd
jle
stc
push
mov
sbb
jnp
out
rorl
pop
cmpxchg
shr
sub
jnp
dec
sti
jl
xor
daa
ret
fsubl
mov
adc
or
mov
push
popa
mov
mov
ret
jae
sub
xchg
js
iret
push
mov
enter
dec
sub
cmp
stos
jne
or
mov
xchg
mov
jns
les
dec
xchg
fs
jae
btrl
add
test
mov
add
jmp
cmp
jns
cmpb
cmp
sub
xchg
aad
dec
clc
xchg
loop
out
push
lock
scas
std
xchg
push
jae
mov
insb
arpl
aad
les
push
pop
pop
jb
dec
test
xor
pop
outsb
pop
xor
jmp
inc
xor
rol
rorb
xchg
test
fimull
mov
sub
leave
and
mov
ret
push
adc
imul
cmp
xlat
out
vpunpckhbw
lahf
outsl
repnz
sahf
xchg
xorb
add
jl
jae
adc
and
xorb
nop
sbb
int
cwtl
and
leave
in
lock
pushf
inc
xchg
adc
mov
aaa
sahf
imul
dec
and
push
mov
mov
cmpsl
or
jge
mov
jp
adc
adc
aam
test
adc
xchg
push
xor
in
rcr
lods
sub
dec
scas
popf
mov
xchg
push
sbb
inc
push
lds
push
and
stos
jne
fisubs
pop
or
and
out
xchg
mull
repz
das
or
and
mov
cmp
inc
ss
pushl
mov
and
scas
mov
lods
mov
adc
imul
xchg
mov
or
adc
movsb
test
sbb
pop
push
test
jp
mov
jle
adc
inc
mov
cmp
mov
ficoms
mov
subl
lods
add
cwtl
fidivs
pop
loop
adc
xor
into
jno
push
hlt
out
adcl
out
andps
push
out
pop
adcl
in
xchg
inc
jb
add
and
jns
aad
in
sub
add
clc
fucomp
lock
fildl
dec
ss
cmpsb
dec
mov
outsl
cmp
into
mov
imul
test
lea
scas
jne
mov
repz
out
sub
and
outsb
outsl
fsubrp
rcll
push
lock
movsb
adc
icebp
fnstcw
jae
insb
nop
push
push
cmp
jnp
sbb
mov
in
movsl
dec
or
jb
push
sbb
xchg
cmp
cmp
movsb
sub
jns
movsb
lods
inc
inc
int
outsb
mov
mov
jmp
je
leave
mov
cmp
aas
push
jl
dec
rep
sar
outsl
lock
dec
mov
test
sbb
sbb
or
add
xor
pusha
mov
int3
hlt
add
insb
andb
adc
rorb
daa
sbb
sbb
pop
in
sbb
inc
inc
xor
add
bound
sbb
clc
lret
dec
xlat
push
adc
ret
add
ret
sar
lahf
xor
mov
add
out
mov
arpl
in
int3
aaa
ljmp
fs
les
mov
aas
out
iret
pop
mov
fistl
inc
bswap
inc
cmp
jp
xor
cltd
aas
out
je
scas
inc
repz
lds
xchg
or
dec
adc
jmp
pusha
mov
dec
pop
adcb
sbb
mov
das
inc
es
pop
and
push
les
ss
pop
push
outsb
push
mov
lret
dec
mov
jbe
mov
xor
push
fiaddl
leave
jmp
push
insl
nop
loope
sarb
rcr
rolb
cli
iret
cld
shlb
rorl
push
xlat
inc
enter
icebp
jnp
mov
fdivs
jge
lods
mov
push
fucom
and
fisubs
mov
xor
aad
stos
or
insl
iret
pusha
arpl
and
fldcw
cmp
xor
mov
push
bound
mov
jmp
sub
jg
sub
sbb
fcmove
addb
mov
subl
test
xchg
imul
push
adcl
push
xchg
mov
mov
mov
inc
pop
mov
push
stos
test
pop
cmp
cld
icebp
xor
insb
cwtl
push
mov
add
adc
jnp
xor
sbb
pop
bound
and
cmpsl
test
or
fwait
pushf
mov
adc
sbb
cmp
aas
push
xor
xchg
inc
scas
fidivs
dec
xchg
lock
mov
xchg
in
ret
icebp
shlb
int3
fidivl
ficoml
lret
mov
pop
inc
int
imul
in
and
sub
lret
jle
xchg
ds
xchg
dec
xlat
xchg
loope
push
sbb
addr16
xor
fistps
cmc
and
or
mov
rclb
test
inc
mov
sub
mov
pop
test
xchg
inc
or
xor
xchg
int3
or
decl
loope
xor
or
sub
jle
pop
lret
pop
xor
jl
sub
mov
fisubrs
lods
insl
outsl
mov
sub
repnz
mov
movsl
push
fwait
int3
push
repnz
xchg
icebp
sarl
push
xor
jne
or
mov
dec
das
cmp
mov
shr
pop
fs
mov
scas
sbb
fadds
je
or
xchg
inc
xor
and
out
mov
fs
jg
xchg
cmp
xchg
cmp
jge
cmpl
lea
add
mov
or
dec
adc
test
pop
out
lcall
push
fdivs
scas
cld
gs
sbbb
sarl
stos
pusha
loope
negl
cs
inc
and
push
push
loopne
ret
pushf
jecxz
jmp
test
arpl
les
xor
cli
inc
xchg
daa
loope
pop
rcll
inc
pop
mov
sti
lcall
rcrl
sarl
addr16
clc
adc
pop
in
sbb
and
jecxz
insb
test
mov
test
scas
pop
in
popa
imul
cmp
add
adc
pop
fdivr
and
sub
inc
lret
lea
ljmp
roll
dec
xchg
enter
xchg
push
sub
push
xchg
mov
adc
cwtl
clc
and
xchg
mov
ret
add
into
in
pop
dec
mov
rolb
popa
jmp
mov
and
je
in
nop
ss
and
or
pop
test
jno
push
movsl
test
scas
sbb
cmpsb
pop
aad
inc
jne
inc
fbld
xchg
xor
sbb
test
mov
stos
out
ss
mov
dec
push
cmp
mov
lods
test
mov
xlat
mov
xchg
jns
or
push
sti
faddp
std
xchg
aaa
ret
scas
icebp
movsl
mov
sbb
shll
fstpt
mov
and
dec
cmp
xchg
inc
je
movsb
pop
jnp
cmp
sbb
test
xchg
lret
scas
loopne
push
add
aas
test
push
dec
addr16
outsl
add
mov
add
sub
enter
call
mov
shl
divb
sbb
add
shl
imul
out
aas
sub
xchg
repz
fsubs
mov
mov
popa
iret
loope
gs
add
call
leave
inc
dec
fwait
bound
xchg
inc
dec
xchg
lret
movsl
outsl
pop
cld
jle
inc
dec
fisubs
stos
dec
xor
cmp
int
mov
jp
in
pop
nop
daa
test
add
cwtl
out
call
or
mov
mov
cmpsb
sub
cmp
inc
sbb
mov
pop
lods
js
cld
pop
fimuls
mov
dec
add
xlat
push
lods
pop
sub
and
dec
xor
jnp
mov
out
nop
jge
add
push
scas
or
ljmp
test
dec
out
std
jg
sub
in
inc
cmc
pop
imul
adc
lods
cs
push
lods
icebp
sub
pop
lods
cs
sbbb
or
subb
imul
push
outsl
push
and
lret
push
jae
stos
outsb
jnp
add
sbb
push
pop
jae
sahf
mov
pop
adc
sub
xlat
pop
adc
pop
cmc
mov
add
cwtl
jne
mov
fwait
and
daa
and
subl
popa
push
idivb
mov
in
loop
and
push
subl
and
and
inc
cmp
cmp
mov
adc
adc
xchg
insl
orl
fdivrp
stos
or
dec
mov
xlat
mov
mov
adc
adc
adc
cmp
mov
ret
pop
add
mov
inc
in
fnstcw
add
test
mov
iret
sbb
shl
lods
sahf
jne
pop
out
adc
aad
and
and
in
daa
lods
sti
jno
or
test
cs
xor
jge
rcll
loop
mov
sbb
add
xlat
mov
test
mov
mov
dec
sbb
xor
mov
jmp
cld
cmpsb
inc
negl
aas
je
fisttps
and
flds
and
and
and
aad
lret
mov
pop
mov
bound
pushf
nop
mov
sbb
mov
push
or
call
mov
xchg
sub
inc
cltd
xor
cmp
sarb
pop
pop
mov
aaa
es
push
test
aas
sbb
push
xchg
pop
lret
aad
inc
xchg
das
fwait
cs
imul
sub
imul
repnz
cmp
scas
sub
scas
rclb
neg
shl
or
pop
mov
mov
pop
das
or
push
push
inc
subps
xor
push
mov
jne
std
lock
mov
or
inc
test
dec
repz
fsubrs
mov
aas
in
and
cmp
ds
dec
adc
push
mov
push
cltd
inc
xor
das
popf
inc
or
std
mov
sub
xor
mov
lret
cwtl
movsb
ret
xchg
ret
inc
aas
fiaddl
pop
cli
mov
into
cmpsl
cmp
test
xchg
sub
repz
push
mov
imul
fbstp
cmpsl
jno
or
cmc
or
xor
ja
adc
mov
shl
popa
sub
mov
jbe
xchg
mov
loop
push
fdivrs
and
sahf
dec
jo
adc
mov
cmp
nop
cld
shl
xlat
mov
jmp
or
das
subl
addr16
add
mov
xchg
lds
jecxz
cmp
insb
aad
sahf
dec
pushf
pushf
mov
fstpt
in
xor
je
xchg
and
repz
aaa
jmp
imulb
std
movsb
repz
lods
cs
shll
inc
mov
mov
mov
pop
in
std
sbb
or
xor
enter
xor
std
scas
jp
mov
push
clc
addr16
pop
out
pop
sub
clc
xor
test
insb
mov
push
out
lahf
sbb
out
mov
mov
mov
dec
xor
jne
xor
fdivl
dec
push
out
and
shr
push
test
mov
setae
cmp
push
ljmp
in
jbe
jb
insb
push
push
push
data16
stos
lea
frstor
aad
gs
imul
push
std
mov
gs
xchg
mov
outsb
in
jbe
push
push
push
mov
or
pop
push
pop
jp
notl
fmull
shll
inc
xchg
shl
add
cmp
das
nop
mov
in
jo
jge
sub
jno
inc
dec
mov
movsb
adc
pop
aad
daa
icebp
subb
aaa
push
mov
pop
jp
jmp
shl
adc
sub
pop
inc
movsl
addr16
fisubrl
stos
push
in
add
mov
mov
ja
ret
movsl
mov
out
push
loope
mov
push
xchg
je
call
dec
sbb
in
mov
push
dec
sbb
imul
inc
xor
out
scas
in
cmc
mov
loopne
fwait
sti
rclb
xchg
adc
inc
xlat
mov
jle
inc
filds
add
or
jecxz
call
mov
loop
lea
fistpll
push
das
adc
ficompl
imul
lods
inc
movsb
cwtl
dec
inc
inc
mov
testb
cld
cli
jecxz
orl
popa
filds
add
inc
cmpsl
cs
xor
jno
mov
pop
fs
rol
cmp
es
mov
cmp
lds
xor
pop
jno
js
mov
xchg
mov
clc
mov
test
icebp
mov
sub
jge
dec
pop
push
jae
inc
stc
lret
lea
divb
fcompl
movsb
int
or
and
out
mov
inc
ret
jl
jns
jle
inc
int3
pop
fmull
jbe
scas
pop
movsl
sbb
cltd
arpl
sbb
jmp
loop
fs
mov
in
pop
sub
fbld
mov
insb
cmpsb
lock
movb
in
sti
jl
xor
cmpsl
jp
adc
xor
das
jb
adc
mov
adc
dec
ret
or
stos
and
sbb
fs
loope
xchg
bound
adc
fcomi
ja
pop
or
arpl
test
ret
leave
popf
cmp
or
mov
movsb
xorb
aas
fsubs
les
ja
pop
aam
fcmovbe
jnp
push
jg
lahf
decl
dec
inc
inc
push
cmp
ficompl
cmp
mov
sbb
mov
mov
int
xor
push
sub
imul
sbb
std
jb
sub
cmpsl
jne
stc
cs
pop
xchg
push
lods
mov
cmp
test
jmp
out
mov
arpl
dec
scas
sub
inc
dec
mov
test
inc
lret
mov
sbb
dec
push
mov
sub
mov
mov
out
xchg
xor
rcrl
scas
rorb
xchg
push
inc
push
dec
repz
or
add
hlt
jle
mov
lods
insb
scas
int3
dec
cltd
sahf
adc
add
pop
lock
push
in
jnp
xor
hlt
dec
hlt
imul
jle
int
movups
test
xchg
xorl
sbb
lcall
add
adc
pushf
bound
cmp
ja
into
jg
mov
data16
cmc
inc
and
loopne
cwtl
test
sub
insl
icebp
sbb
jb
data16
push
sub
push
mov
jecxz
xchg
sti
sub
cmp
in
add
mov
inc
nop
lods
push
add
repz
test
mov
or
sub
cmp
mov
add
fldlg2
dec
push
scas
andb
jl
gs
ret
inc
int3
jecxz
imul
testl
xor
jnp
gs
aaa
dec
into
fsub
mov
push
insb
push
cmp
insb
xchg
push
push
fstpl
xor
xchg
fwait
cwtl
loope
sbb
leave
pop
pop
xorl
loope
into
sahf
xchg
sub
ret
cmc
fstps
gs
xor
jl
gs
jecxz
push
adc
xor
cs
cld
loope
push
xchg
scas
xchg
inc
adc
xchg
jmp
sub
in
pushf
xor
icebp
in
jo
in
dec
insl
jmp
mov
test
pop
mov
test
es
out
inc
add
or
clc
sub
mov
fwait
loop
inc
ret
mov
mov
mov
cwtl
fistps
divl
insb
pop
iret
lret
leave
cmp
loop
jg
out
mov
jg
repz
shrb
mov
mov
out
mov
xchg
xor
sarb
pushf
sbb
out
lods
jle
add
and
frstor
scas
mov
mov
in
push
in
xor
fcmovnb
mov
mov
jecxz
xor
ljmp
inc
sbb
mov
pop
xchg
mov
mov
xlat
fistpl
subl
loope
lods
push
push
jno
adc
inc
pop
ret
iret
sbb
mov
movsb
test
jecxz
rcrl
xor
cmp
clc
sahf
cmp
xchg
pop
inc
int3
push
mov
iret
lahf
inc
ret
idiv
jae
arpl
out
xchg
call
mov
pop
pushl
shrl
jmp
pusha
in
dec
fdiv
movsl
mov
cs
inc
mov
popa
jne
jg
jge
fistpll
and
bound
add
ds
mov
dec
pop
test
lret
sub
icebp
rcr
xchg
mov
pop
divl
jge
and
add
out
repnz
call
or
or
jae
lret
push
aam
adc
stc
in
out
movsb
sbb
push
inc
into
fldcw
popf
mov
adc
out
ret
out
or
loope
ljmp
cmpsl
adc
cmp
lock
enter
sti
xor
dec
add
push
je
add
mov
aas
data16
ljmp
cmp
repnz
fistps
inc
popf
mov
sub
and
sub
push
das
sub
and
fdivl
shrl
imulb
flds
outsl
aas
jo
xchg
cli
es
addl
shl
popa
and
xchg
out
je
add
mov
jle
in
mov
xor
int3
inc
xchg
je
mov
lods
adc
das
rorl
es
jmp
mov
es
test
popa
push
mov
popa
add
cmp
jne
incb
subb
movsl
sbb
cmpsl
and
sarb
adc
inc
imul
iret
xchg
jne
je
jns
pop
icebp
dec
jecxz
and
das
fiaddl
mov
loop
loopne
arpl
dec
push
adc
test
in
repnz
sub
jp
pop
test
and
push
add
jmp
jge
stos
movsl
stos
jb
push
nop
call
mov
ljmp
mov
or
data16
ret
jge
push
lods
sahf
and
test
test
repnz
cmpsb
mov
jle
cmp
xchg
xchg
lods
mov
and
andb
or
aaa
jae
aam
and
fimuls
ja
inc
add
xchg
es
jle
xchg
aad
mov
shrb
lods
cs
arpl
xchg
mov
sti
adc
aaa
lret
or
imul
push
sub
mov
std
movsl
push
lea
mov
cmovno
cmc
fisubl
pop
bound
pop
adc
jno
movsl
jmp
andl
mov
sti
pop
fisubrs
mov
jg
mov
pop
cmpsl
lods
repz
dec
idivb
lret
aam
pop
loope
mov
adc
sub
orb
loop
xchg
push
xlat
into
shrl
mov
cld
fwait
or
cmp
call
je
lods
les
mov
jnp
ljmp
jnp
ja
xor
pop
xchg
rcr
mov
repz
outsl
lods
test
pushf
out
imul
push
xchg
ljmp
lock
mov
inc
fsubrl
popf
and
push
inc
mov
jno
jae
mov
sub
mov
inc
in
popf
mov
add
push
push
dec
aad
push
mov
jns
or
rolb
les
dec
popa
or
call
mov
jne
call
outsb
pop
pop
jne
fs
in
ja
jns
mov
dec
adc
sbb
or
outsl
inc
push
or
inc
lret
ljmp
dec
xor
cmp
cli
aas
and
ret
mov
push
sub
push
mov
fwait
push
ja
insb
adc
inc
cwtl
mov
xor
jg
outsl
icebp
out
xor
cld
lahf
or
orb
sbb
xor
dec
hlt
sbb
fists
int3
arpl
sub
sti
test
and
xchg
add
enter
lea
hlt
sub
iret
and
ror
sub
inc
mov
sub
jecxz,pn
mov
push
mov
lret
pop
xor
sub
jnp
mov
out
loop
mov
in
inc
fwait
repz
jae
push
push
or
imul
dec
fwait
push
pop
jbe
adc
jge
aad
cmpsl
jns
dec
pop
adc
inc
gs
repnz
adc
adc
pop
or
test
loop
shll
cmp
insl
dec
fildll
inc
les
xor
icebp
es
mov
push
sbbl
push
and
inc
inc
aaa
nop
ja
stos
inc
adc
xchg
mov
xor
or
add
clc
xchg
fldl
negb
in
inc
or
or
movsl
xchg
mov
mov
pop
and
pushf
dec
sbb
push
inc
cltd
je
jecxz
push
pop
data16
pop
ror
imul
cli
ds
push
loope
loope
test
fistpl
enter
in
mov
jb
into
mov
mov
xchg
inc
fwait
aaa
iret
adc
cli
mov
scas
inc
maskmovq
notl
sub
adc
mov
mov
adcb
imul
daa
pushf
inc
adc
fsubrl
fucomp
mov
aad
bound
xor
je
mov
fisubs
popf
mov
iret
xchg
adc
mov
imul
and
andb
xor
xchg
pop
adc
cmp
das
ds
shll
xchg
imul
cs
pop
aad
mov
or
dec
popa
dec
xchg
adc
outsb
or
sahf
xor
cmp
mov
mov
imul
scas
cli
scas
aad
lock
inc
cli
pop
or
jge
push
mov
xchg
add
adc
scas
shlb
lea
pop
push
mov
divb
adc
pop
mov
ja
lods
ss
sub
inc
inc
mov
xchg
call
cmp
icebp
sti
add
xchg
sub
jmp
stos
aam
js
push
cmc
cs
lea
insl
mov
and
pop
push
enter
xor
aaa
and
push
adc
insl
jne
pop
and
pop
je
xlat
sub
push
insb
mov
cmpsl
stos
inc
cmp
bound
push
push
mov
lret
aaa
mov
mov
mov
xchg
sarl
out
daa
aam
sbb
push
inc
cmp
jl
mov
mov
data16
and
ss
fistpl
sub
lcall
and
out
pop
js
push
lock
test
pop
iret
jg
jl
adc
hlt
das
add
out
sub
lcall
int3
xchg
mov
stos
lret
cs
xor
imul
adc
and
sub
addb
jecxz
cmc
les
shlb
and
fnop
loope
push
sarl
fldl
sub
xor
push
dec
lods
cs
rorl
icebp
push
jp
incb
aam
push
mov
lea
dec
lds
mov
pop
xlat
int3
mov
cmc
adc
popa
mov
push
and
rclb
or
xchg
or
ffree
aad
es
sub
call
push
xchg
xor
incb
rcrb
test
clc
ret
pushf
in
push
push
fucompp
cmpsl
stc
dec
gs
out
inc
ja
cli
mov
outsb
jns
jg
mov
and
pop
aad
lret
xchg
jmp
sti
rcrl
inc
pop
pop
call
outsb
xor
pop
or
in
jno
in
mov
stc
adc
into
outsl
jno
test
ret
imul
js
fdivrl
push
mov
movb
mov
push
cmp
push
adc
xchg
popf
jl
pop
mov
pop
dec
jne
aam
push
mov
std
in
lret
pop
cli
out
and
cmp
stos
lea
xchg
cmp
and
ja
push
mov
adc
adc
and
outsb
jne
jmp
mov
sub
push
andl
dec
in
sbb
shlb
mov
mov
cli
clc
sti
or
arpl
add
jb
scas
sbb
xchg
aad
incl
cli
ds
fdivs
dec
pop
mov
inc
push
adc
push
xor
sbb
mov
gs
fisubl
mov
fwait
out
dec
pusha
rclb
int3
paddusw
loope
xor
pusha
push
push
lods
repz
imul
sbb
and
cmp
xchg
dec
data16
es
inc
push
sub
mov
push
pop
cmp
testl
push
loopne
repz
les
cwtl
fldl
inc
pop
sub
cmp
sbb
call
fcompl
jle
nop
adc
call
mov
xchg
add
push
arpl
push
adc
sbb
ficompl
dec
mov
call
dec
lods
push
mov
out
fmull
or
pop
inc
push
jb
inc
into
test
jbe
les
xchg
les
nop
addps
scas
shl
insl
mov
int
push
lds
cmc
mov
jmp
sarb
xchg
movsb
mov
xor
scas
or
in
outsl
jge
xor
les
out
testb
js
shll
add
cmpsl
mov
add
mov
mov
gs
pop
xchg
xchg
cltd
outsb
aad
mov
fwait
and
and
push
push
lea
mov
das
sub
push
inc
cmpsl
dec
iret
ljmp
int
repnz
stos
mov
out
cmp
ljmp
hlt
cmpsb
inc
push
pop
pop
dec
aaa
xchg
pop
sbb
lcall
push
lcall
sbb
xchg
push
sahf
pop
inc
sub
add
or
or
cmc
xchg
xchg
cmp
or
push
push
sti
cs
jno
sub
aad
stc
mov
xchg
fisubrl
inc
lret
jnp
out
pop
inc
pop
cmc
cmp
add
int
into
sub
jl
dec
testl
pop
xor
insb
jge
mov
push
or
jmp
fsubrs
cmp
fidivrs
xchg
push
xor
mov
push
nopl
or
not
mov
mov
fcompl
data16
les
sub
cmp
jne
cli
xor
outsb
out
pop
test
loop
sbb
divl
xchg
arpl
jle
cmp
fildl
out
fs
xchg
sub
pop
push
jns
mov
inc
adc
lock
lds
cmp
xchg
mov
mov
loope
and
sti
inc
cmpsl
fcmovnu
sbb
xorb
push
mov
push
xchg
mov
pop
aaa
aas
test
aaa
icebp
xchg
xchg
stos
inc
push
sarl
lea
sbb
pop
sti
adc
xlat
fs
fwait
and
mov
dec
test
mov
dec
mov
repnz
jnp
imul
ljmp
sub
fsubp
xor
xlat
nop
call
sub
cmc
push
popf
stc
fisttps
mov
lahf
push
adc
scas
pop
sub
push
out
mov
cld
cmp
in
lea
mov
icebp
pop
lcall
pusha
add
test
xchg
sahf
jbe
fdivrl
push
stos
js
push
xchg
lock
fisubl
adc
jg
or
mov
mov
mov
dec
lea
mov
add
test
jmp
pop
test
mov
testl
inc
push
stc
call
insb
stos
pop
inc
xor
mov
pushl
pop
loopne
inc
jecxz
cmp
pop
aad
xorl
out
cmpsl
orb
xchg
xchg
scas
jno
gs
pushf
or
add
je
mov
ja
popf
or
adc
shll
add
jns
pop
cmp
push
pop
dec
iret
mov
call
lret
jb
jmp
inc
stc
and
cmp
xchg
clc
cltd
mov
dec
in
sub
mov
sbb
xor
push
frstor
mov
sbbl
adc
mov
add
dec
fisubs
rorb
cmc
rcrl
add
lret
test
fnstenv
push
push
or
and
push
test
xchg
lods
iret
dec
out
rorb
lret
popl
xor
repnz
jg
inc
pop
xchg
add
mov
jecxz
data16
psubq
mov
and
nop
mov
add
lahf
sbb
out
or
scas
mov
or
movsb
fiaddl
push
push
xchg
repnz
std
xor
mov
test
das
nop
pusha
adc
fwait
scas
fadd
les
cmp
cmp
and
mov
fs
in
lret
fisttpl
xor
jmp
es
imul
dec
xchg
clc
mov
stc
fisubrs
add
std
mov
mov
sub
int
pop
xor
stos
lahf
fdivr
add
mov
pop
in
jne
adc
jne
push
fcmovnu
jne
mov
arpl
cmp
push
orb
call
fwait
mov
and
mov
shlb
stos
mov
xchg
fldl
adc
push
fstps
leave
inc
addr16
cwtl
jne
sbb
fsub
test
loope
ficompl
adc
and
dec
mov
and
jne
mov
dec
ss
jbe
ja
dec
pop
subl
sbbl
sub
dec
pop
movsl
xchg
popa
jb
lcall
cmp
pop
mov
and
push
push
push
stc
ljmp
and
call
inc
mov
cmpsl
add
pop
cmp
ret
fnstsw
and
xor
jne
mov
fdivrp
or
jno
jecxz
stos
add
ret
mov
aad
push
xchg
notb
mov
sub
arpl
mov
sub
ljmp
adc
adc
ja
push
jbe
pop
add
mov
or
mov
insb
pop
cmp
pop
pop
adc
lcall
cld
out
pop
pop
and
imul
insl
stos
jge
call
mov
in
sbb
iret
push
mov
add
add
nop
xor
ljmp
jo
imul
and
mov
cmp
mov
jp
outsb
lods
ffree
and
inc
push
lods
xchg
mov
adc
and
cli
imul
add
lcall
rcrl
xchg
sbb
outsl
and
and
pop
or
lds
in
mov
ljmp
mov
lds
xor
imul
mov
cld
dec
cmp
dec
jg
xchg
or
mov
jmp
in
ret
call
mov
mov
mov
sbb
je
jae
sahf
lea
lret
push
sub
inc
and
push
mov
inc
cli
push
mov
or
aam
icebp
fs
bound
pop
sub
enter
sub
lods
lods
push
test
or
inc
popf
mov
fbstp
das
fmuls
in
pop
cmc
aam
je
inc
xchg
movsl
stc
sbb
lods
cmpsb
dec
xor
insl
and
push
sub
mov
je
aam
shll
leave
inc
sahf
aad
lret
push
test
push
or
mov
imul
jecxz
inc
cmc
test
pop
pop
lret
sub
test
or
and
mov
xchg
es
iret
fisttps
aad
es
or
jno
mov
in
insl
cs
roll
inc
jnp
mov
dec
inc
movsb
cmp
sbb
aam
jl
dec
cmp
xchg
imulb
mov
or
mov
repnz
cmp
push
les
addr16
movsb
in
ja
aas
aaa
sub
xchg
mov
rcll
fisubs
aas
jns
mov
lret
scas
sub
dec
mov
inc
out
cmp
dec
pop
sbb
into
mov
js
call
ret
lds
nop
xor
cmp
stos
leave
es
popa
mov
pushf
jae
fwait
mov
lods
mov
lcall
push
fldln2
push
add
mov
mov
or
jbe
jl
imul
fstpl
or
in
xlat
cmp
cs
imul
cmp
pushf
push
call
pop
popf
jnp
ret
mulb
cltd
jo
cmp
shlb
fisttpll
push
xor
stc
rolb
dec
in
test
out
filds
pop
mov
jp
cmp
adc
push
leave
int
push
stos
mov
pop
lahf
lahf
mov
clc
stos
lods
mov
push
jle
sti
into
les
adcb
repz
xlat
and
pop
or
xor
pop
mov
and
xchg
push
sbbl
lea
pusha
pop
fucomp
ss
pop
jmp
inc
dec
push
push
or
cmpsb
icebp
adc
es
cmp
out
pop
jecxz
cwtl
xor
enter
sub
test
add
enter
add
push
or
lods
lods
js
lock
mov
push
outsl
add
dec
shrb
adc
dec
mov
dec
outsb
sbb
stc
pop
mov
hlt
icebp
xchg
pop
and
pushw
jo
or
jl
inc
push
mov
inc
xor
cmp
repz
mov
cld
adc
pop
rcll
jb
jmp
leave
jl
jnp
jae
stc
out
inc
fcoml
lret
jns
sarb
cmp
gs
jecxz
and
push
mov
sbb
xchg
and
in
pop
pop
lret
xor
sbb
sbb
imul
int
push
cli
es
dec
jb
jmp
inc
not
out
js
jmp
mov
addl
pop
or
mov
push
push
add
movsl
add
fistpl
push
or
xor
movsl
jp
lea
adc
out
cwtl
loopne
into
push
pop
and
inc
push
xchg
mov
rolb
mov
sbb
xchg
pop
rorl
sarb
fimuls
jno
popf
data16
cmpsl
movb
and
xor
or
mov
gs
jne
cmp
or
jns
xor
cmp
movsl
jge
outsl
add
stos
lcall
push
outsl
std
fwait
cmpb
int
or
sbb
adc
pop
jecxz
dec
jb
aad
test
jg
and
enter
inc
lret
loop
mov
xlat
out
pop
call
lea
cmp
xchg
pop
and
jbe
cmpsl
popa
adc
pop
fcompl
push
xchg
gs
pop
hlt
hlt
jne
vpaddw
dec
movl
movsl
sahf
pop
sarl
xlat
stc
pop
push
lcall
mov
xchg
sub
enter
sarl
jo
xor
data16
push
lret
fstpl
repz
jne
ja
mov
mov
xchg
push
pop
int
into
in
pop
cmpsb
test
lods
arpl
cld
add
add
aad
mov
ja
stos
push
ds
and
and
test
aas
decl
or
adc
popa
xchg
lods
stos
pop
not
fidivs
pusha
in
add
xor
jae
mov
insb
mov
xorl
mov
xchg
inc
pop
dec
xor
js
sub
popf
mov
sbb
mov
inc
mov
inc
mov
int
dec
jecxz
mov
in
xchg
jecxz
out
mov
mov
mov
out
inc
sub
leave
xorl
add
jmp
sub
in
repnz
dec
in
inc
pop
pop
push
mov
mov
mov
in
pop
push
fisubrl
cs
mov
iret
lea
int
cmpsl
inc
ljmp
add
or
push
fisttps
adc
jnp
addl
jge
dec
push
ja
addr16
add
mov
test
scas
nop
pop
jns
jbe
sarb
xlat
mov
cmc
lock
mov
movsb
push
dec
xchg
sub
pop
or
mov
pop
or
mov
pop
insb
insl
adc
lods
or
mov
dec
ret
int
sub
filds
push
fcomp
leave
lcall
cmp
adc
xchg
stos
lret
clc
xchg
sub
ss
fsub
fidivl
movsl
dec
loope
addr16
enter
push
push
es
popa
cmp
mov
stos
addl
jno
int
push
setge
jg
faddl
data16
mov
in
push
sti
mov
xor
je
inc
out
or
inc
lret
mov
dec
sub
sbb
xchg
push
pop
fcmovnb
xor
mov
sub
subb
cmp
sbb
lock
test
fadds
xor
movsb
lcall
jmp
subb
xchg
lods
and
test
push
pop
lea
out
mov
add
into
mov
mov
sbb
outsb
dec
mov
lods
inc
mov
pusha
ja
aaa
dec
out
xor
loopne
and
int
and
jae
prefetch
fisubrs
popa
mull
fwait
dec
aam
leave
jecxz
dec
mov
add
add
hlt
int3
jmp
push
pop
shlb
xchg
or
jnp
dec
sub
mov
imul
inc
push
push
sub
push
fnstenv
insb
fildl
iret
lcall
and
push
cmp
push
mov
mov
pop
sbb
mov
fiaddl
test
pop
test
and
or
dec
and
clc
sbb
shrl
mov
loope
cmc
loop
popa
xchg
icebp
repz
cld
and
ss
lods
mov
jbe
js
xchg
adc
xchg
loope
aad
sbb
dec
cmpsb
mov
cmpb
lock
xchg
gs
pop
sub
cmpsl
jnp
repz
mov
mov
pop
xchg
movsb
arpl
bound
xor
arpl
xchg
scas
jg
add
popa
mov
shlb
fsubl
jl
enter
xchg
dec
int
add
sub
test
mov
icebp
out
dec
stc
adc
inc
push
ret
jg
das
jns
idivl
js
xchg
loope
cmp
jb
adc
pop
scas
dec
xor
aas
jge
cli
adc
cmpsb
mov
dec
int3
push
push
cs
inc
pop
imul
outsl
add
in
sbb
cmpxchg
push
repnz
leave
xor
mov
fistl
xor
push
stos
aam
inc
add
mov
in
mov
nop
xor
xor
loop
mov
xchg
fbstp
mov
scas
js
into
mov
sub
jg
mov
push
sbb
mov
repz
xchg
cltd
adc
dec
sub
imul
cmp
icebp
arpl
cmp
testb
dec
fisttpll
xor
or
xlat
xlat
sub
rorl
mov
out
adc
dec
loope
cmp
js
in
fisubl
ret
andl
sub
aad
xchg
add
sub
xor
jne
pop
out
sahf
inc
dec
inc
int
std
sbb
imul
sub
mov
cmp
sub
add
sub
scas
iret
cmc
ljmp
lods
adc
sahf
xlat
push
imul
sub
and
jbe
leave
popf
leave
shr
adc
xchg
sahf
ja
out
lret
dec
xchg
sbb
push
rorb
movsl
jno
lea
scas
or
jl
in
xchg
es
pop
pop
jns
mov
daa
sub
imul
int3
add
xchg
int3
cs
insb
insl
or
loope
jge
daa
pop
shlb
xchg
and
push
mov
ja
popa
imul
jge
cmp
subl
addr16
push
xor
and
inc
xor
adc
mov
mov
fucomi
lods
movsl
add
mov
in
dec
sub
ljmp
fcomip
cmp
dec
pop
adc
out
sbb
push
aad
adcl
xchg
xor
sbb
cltd
sub
mov
fsubl
mov
pop
mov
test
pushf
sub
sub
sub
cld
xchg
mov
jno
nop
repz
ds
xchg
mov
jae
in
lds
cmc
mov
sbb
cltd
cmc
imul
addr16
shrl
shrb
and
int
ss
ljmp
push
ljmp
mov
xlat
pusha
mov
jmp
in
mov
sbb
xchg
adc
movsl
sub
lds
push
dec
frstor
inc
or
push
insl
jnp
jno
out
fsubrs
inc
adc
out
cmpsb
bound
outsb
shr
mov
pop
pushw
and
stc
mov
xor
and
jne
xor
sarb
push
and
inc
push
lret
sub
xchg
xor
push
pop
ljmp
ret
sbb
loopne
mov
int
pop
fdivr
lods
cmp
cli
mov
ret
pop
lahf
les
sub
popa
mov
inc
cwtl
inc
ret
in
and
aam
push
repnz
lahf
fs
mov
ljmp
mov
repnz
adc
cmp
pop
jno
fbld
fisubl
jne
repnz
int3
loopne
insl
scas
in
jl
aas
insb
notb
ret
xchg
mov
sahf
out
jb
sub
mov
xor
movsl
ret
jge
shlb
mov
scas
lds
fmuls
or
and
aad
adc
sbb
sub
adc
daa
xchg
push
xchg
pop
into
sbb
enter
cmpsb
cld
in
daa
scas
insl
pop
dec
mov
in
nop
cltd
mov
iret
sub
rcrl
add
mov
ret
push
je
push
mov
gs
pop
fdivl
jo
sub
pushf
adc
cld
xor
jne
xchg
and
pop
or
in
lods
sub
xchg
lcall
rorb
scas
mov
add
mov
clc
mov
push
neg
insb
sbbb
mov
lahf
lods
mov
cmp
dec
in
cmp
sbb
cmp
pop
out
icebp
subb
in
mov
rcrb
aad
subb
pop
and
mov
aaa
sbb
mov
lret
mov
ret
ficoms
dec
sbb
leave
into
lods
add
aas
pusha
pop
and
pop
push
jp
std
jmp
scas
data16
in
lahf
popf
dec
std
add
lret
scas
push
add
jae
inc
xchg
cmp
mov
mov
xlat
movsl
jp
mov
push
push
fsub
lcall
adc
int3
sbb
dec
jnp
mov
loope
into
cmp
out
or
sarl
mov
cmp
add
jnp
dec
dec
jnp
push
lods
cmp
lods
icebp
inc
ljmp
ja
ljmp
push
jmp
out
imul
push
imul
mov
call
jbe
inc
and
test
xchg
out
mov
stos
jl
int
lret
xor
lret
pop
mov
inc
adc
lock
pop
sahf
pop
sub
rcr
rcll
fs
ds
mov
jmp
shlb
jb
and
mov
mov
fdivs
sub
ret
push
jno
mov
cmp
push
js
rcrb
mov
mov
and
rcr
call
pop
push
adc
jecxz,pn
lock
mov
push
jle
dec
jo
sub
das
sbb
xor
outsb
fwait
inc
insb
pop
lahf
mov
cmpsb
or
mov
sub
aaa
sbb
pushf
inc
add
adc
xchg
scas
pop
imul
nop
stos
mov
scas
mov
inc
xchg
sub
imul
pusha
leave
mov
call
in
inc
subl
jp
lods
dec
push
fcompl
mov
jbe
shrb
cmp
lods
push
je
xchg
pop
jecxz
add
push
push
aad
inc
in
jg
adc
xor
xor
out
fwait
negl
pop
cli
jne
in
sbb
scas
cmp
sbbb
lods
fcoms
outsl
inc
mov
mov
insb
rorb
add
fwait
xlat
xchg
push
or
insb
and
dec
jo
and
hlt
dec
xchg
arpl
in
push
mov
gs
add
pop
pop
xchg
sbb
ret
repz
adc
and
popf
fistps
cs
outsl
test
icebp
jle
push
into
sbb
dec
fisubs
popa
lea
inc
outsl
lcall
ljmp
cmp
je
xor
push
xchg
cli
mov
popf
push
movsb
pop
loop
leave
add
lcall
scas
lea
jge
sbb
and
push
cmpsl
jo
in
mov
adcl
sub
hlt
sbb
push
das
rorb
dec
dec
xor
cli
or
and
mov
nop
arpl
sub
sahf
push
cmc
ss
fcmovu
cmp
sub
std
mov
sub
dec
sub
lock
in
ja
cmpsl
imul
out
or
loopne
jns
dec
jecxz
jecxz
pop
jo
lret
adc
mov
fbstp
scas
inc
jg
or
cli
jae
clc
lea
push
outsb
cwtl
jge
cltd
xchg
repnz
sti
popa
inc
mov
cld
insl
mov
or
xchg
xchg
xlat
test
jno
push
aas
add
push
dec
mov
xlat
scas
xchg
push
movsl
lock
testl
daa
mov
in
xorb
mov
les
loopne
dec
pop
lret
mov
stos
inc
loopne
repnz
rcrb
lock
push
fbstp
aam
fwait
add
jno
mov
clc
div
xor
pop
lret
dec
cmpl
lods
jo
ret
in
jl
pop
lds
data16
xchg
or
and
popa
jecxz
jns
clc
push
out
int3
dec
jmp
sti
sub
lret
or
sub
arpl
fldcw
and
dec
outsb
mov
fldt
push
mov
adc
scas
or
xor
ja
inc
mov
lds
mov
sub
shl
mov
shrl
sub
push
xorb
fstp
lods
loop
aaa
out
pop
les
mov
movsl
mov
pop
inc
pop
adcl
nop
pushl
es
cmp
jp
cs
and
pop
mov
stos
mov
push
imul
or
push
or
test
lock
sbb
rorl
fldl
pop
push
sbb
mov
sbb
sub
push
loop
pop
xchg
notb
ficoml
fidivl
mov
aad
mov
cs
cmp
cmpl
fistpll
xor
shll
scas
pop
cmp
sub
push
pop
mov
sbb
shl
out
mov
mov
adc
dec
loope
outsl
dec
mov
xlat
pop
test
push
lret
push
daa
pushf
cli
and
rorl
adc
mov
xor
pop
in
push
adc
cltd
push
push
clc
in
loopne
cmp
dec
mov
push
cmpsb
idivl
sub
fstpl
ljmp
mov
and
fs
movsb
mov
jl
in
lds
jae
xor
sahf
inc
jl
aaa
xchg
popf
sahf
mov
js
inc
iret
out
les
imul
imul
cwtl
ss
adc
mov
cmpsb
int
inc
jae
les
stos
stc
add
dec
xor
in
imul
inc
or
fsubr
push
cwtl
cmp
je
mov
stc
push
or
pop
fbstp
jle
or
pop
push
pop
aad
inc
std
mov
imul
sbb
out
jmp
lods
xchg
cwtl
push
scas
cmpsl
leave
push
mov
pushf
sbb
lods
arpl
sti
adc
xchg
add
fs
mov
sub
pop
sub
sbb
jne
lods
dec
lret
inc
adc
loope
jne
repnz
nop
mov
or
push
mov
daa
stos
xchg
sub
inc
adc
mov
push
in
pusha
mov
push
leave
jecxz
mov
and
outsb
dec
stos
mov
inc
ljmp
mov
int3
subl
or
cmp
aas
clc
jecxz
loopne
push
mov
dec
test
gs
out
cmp
je
out
inc
cmp
or
sub
or
in
in
ret
imul
and
stos
push
jnp
out
and
dec
sub
adc
mov
pop
and
pop
jp
fs
lds
sub
sbb
imul
movlps
addr16
xchg
mov
loop
pushf
mov
movsb
push
inc
push
mov
add
lret
enter
jb
push
iret
test
popf
dec
inc
lgs
in
pusha
in
test
bound
mov
shlb
inc
inc
dec
frstor
daa
xor
das
push
outsl
stos
ljmp
push
fdivr
aas
push
jae
mov
push
pop
mov
jnp
popf
xor
repnz
sbb
test
orl
ds
test
aaa
loopne
push
cmpsb
push
add
outsb
in
imul
testl
aad
xchg
jae
mov
cmp
xchg
xlat
cmp
leave
push
or
fwait
cmp
sahf
dec
movsb
adc
jmp
icebp
fdivr
add
clc
and
aad
es
test
in
int
aad
pushf
stos
cmc
fs
mov
rcl
outsl
push
adc
stos
rcr
int3
push
lret
cmp
fst
add
pusha
inc
inc
bound
xor
lock
out
addr16
pusha
sar
dec
jp
popf
jne
adc
or
adc
stc
lds
movsl
scas
xor
ja
shlb
js
in
push
mov
out
jb
mov
cmp
fidivrs
cmp
push
sbb
fidivs
fdivs
or
imul
sbb
mov
clc
ret
inc
repnz
xor
and
dec
out
xor
jle
aaa
jns
test
cli
cmpsl
loop
repnz
leave
add
scas
jl
fwait
pop
fcomi
pop
cwtl
loope
call
clc
sub
int3
cld
xchg
mov
mov
adcl
test
dec
lds
jnp
jg
jne
aam
lret
clc
out
sbb
lock
bnd
cmpsb
mov
jge
xchg
jp
insl
jl
xor
cltd
pop
inc
inc
into
xchg
pop
aam
enter
inc
pop
cmp
xchg
rcll
mov
cmpsb
std
pushf
ret
fcomps
inc
jp
or
mov
cmpb
lds
ret
add
lock
loope
faddl
jp
test
push
inc
sbb
repnz
movsb
lea
jnp
jns
push
clc
dec
out
push
jge
xchg
iret
mov
xchg
mov
xor
enter
gs
leave
outsl
inc
ljmp
push
js
stos
dec
stc
mov
pop
test
mov
popl
or
out
mov
cld
andb
stc
inc
cmp
mov
sub
push
xchg
push
dec
aaa
mov
adc
inc
stos
mov
dec
cmc
fcompl
insb
push
call
int3
pop
mul
popl
les
jne
jle
jecxz
lcall
mov
orl
sti
inc
or
outsl
jae
dec
xchg
aas
aam
int3
add
jbe
push
xchg
leave
insb
repnz
xlat
push
mov
inc
jne
add
push
add
mov
roll
adc
xor
sbbl
std
nop
or
cmpsb
jle
xor
iret
push
lret
sub
jb
push
stos
lret
popa
or
jecxz
adc
pop
mov
ret
sub
lret
dec
push
call
mov
jmp
adc
ret
mov
cmp
and
mov
and
jns
insb
cld
xchg
mov
sahf
test
jns
push
jne
dec
inc
push
outsl
insb
or
dec
insb
xor
dec
stos
inc
test
outsb
aaa
repnz
dec
sbb
cmpsb
pop
iret
arpl
scas
dec
sbb
xchg
stos
mov
rorl
mov
fildl
push
add
repz
insb
mov
test
bound
cmpsl
pusha
mov
xchg
xor
mov
sub
popf
lret
ds
sub
xchg
inc
fistps
frstor
jmp
ja
inc
or
pop
imull
jl
imul
mov
dec
or
sub
push
cmp
sbb
insb
cltd
add
jo
into
sbb
testb
lret
adc
movntq
inc
insb
or
fucomp
inc
enter
xchg
call
shll
repz
lds
mov
and
hlt
mov
cmc
out
jp
sub
xor
push
pushf
filds
adc
fwait
mov
bound
mulb
test
xor
sub
inc
fcmovu
das
test
je
imul
clc
mov
dec
jge
jp
sub
mov
dec
leave
inc
cmc
roll
out
addl
adc
outsl
inc
cmp
xor
and
call
in
pop
pop
in
inc
mov
das
jnp
sbb
dec
mov
ds
je
mov
xor
mov
roll
xchg
mov
xchg
lock
pop
shl
ret
jno
cli
dec
mov
leave
dec
inc
xchg
insl
idivl
in
movsb
test
dec
pop
aaa
imul
sysexit
dec
insl
lahf
push
mov
inc
and
and
aad
ss
pop
push
sbb
or
jo
push
popf
inc
push
jecxz
fisubl
bound
lret
add
or
push
rcrl
test
out
cmp
cmp
filds
aaa
adc
dec
pop
cltd
mov
dec
or
imul
stos
ret
int3
pusha
inc
rolb
sti
jmp
lock
dec
ds
mov
loopne
mov
mov
push
mul
stos
test
ret
psllw
lret
outsl
shll
xchg
subl
out
jae
mov
loop
lock
xchg
sub
cmpb
mov
loopne
xchg
xor
popf
stos
addr16
insl
xor
test
mov
push
cmc
gs
pop
cmpsl
ja
je
fucomi
dec
xchg
fxch
xor
and
inc
mov
fdivrs
mov
dec
or
daa
mov
int
and
mov
adc
sbbl
insb
push
mov
insl
push
dec
mov
lock
movsl
push
call
call
or
add
mov
or
leave
enter
aaa
movsl
rclb
add
movsb
dec
jmp
cmpsb
inc
and
sub
push
inc
iret
pop
xchg
mov
xor
dec
mov
out
push
dec
sub
sbb
rcrl
pop
aam
or
jae
fpatan
mov
ja
jge
pop
add
decb
add
push
pushf
jl
fs
dec
pop
dec
cmpsl
lret
jmp
ror
stos
inc
pop
xchg
jne
repnz
in
add
loope
mov
into
dec
inc
imul
xchg
add
insl
and
addr16
inc
into
imul
shll
popf
jle
das
mov
leave
out
subl
xchg
vcmppd
adcl
jbe
jne
sbb
pop
mov
push
inc
ss
jle
fwait
lock
mov
mov
sub
push
sub
pop
ret
loope
pop
dec
push
scas
or
mov
pop
adcl
js
fidivrl
cwtl
shlb
filds
movsl
dec
int
in
repnz
sub
mov
vucomiss
repz
and
int3
dec
data16
mov
push
loope
ficompl
xorb
adc
popf
icebp
lahf
xchg
loope
adc
push
cmp
sbb
scas
data16
sbb
and
ss
push
mov
test
pop
cwtl
rol
pop
inc
mov
mov
mov
and
inc
lds
ljmp
add
dec
mull
pop
movsl
jp
mov
mov
mov
pop
sub
iret
outsb
xchg
popa
push
or
loope
sub
sbb
imul
mov
fdivrl
repz
mov
jle
xorb
xor
in
mov
aaa
jle
pop
and
lods
out
push
mov
lds
push
cmp
and
cmpsl
mov
roll
sbb
lcall
push
mov
shlb
shl
popf
cs
std
and
dec
hlt
inc
fistps
aad
mov
lds
mov
add
jno
cmpsl
xchg
mov
test
add
push
shrb
inc
movsl
out
mov
cltd
imul
pop
pop
xor
call
divb
push
lea
mov
mov
cwtl
iret
xor
je
inc
jg
mov
sbb
ljmp
add
dec
test
dec
iret
mov
icebp
nop
jb,pt
fmuls
jge
mov
sbb
stos
cmp
loop
stos
pushf
pop
dec
push
push
inc
dec
repnz
loopne
fwait
or
push
push
clc
adc
les
mov
dec
out
dec
imul
adc
cmp
add
sbb
bnd
sar
icebp
xchg
scas
cmp
mov
scas
sahf
stos
pusha
push
clc
sbb
mov
bound
std
sbbb
fwait
int3
out
jmp
add
fcoms
sbb
cmc
pop
xor
ljmp
pop
mov
popa
pop
and
sti
lods
add
jmp
mov
mov
push
loopne
lahf
ret
fsubl
aas
test
jns
jl
test
sbb
mov
xchg
repnz
add
movl
sub
xor
cmp
repnz
or
into
pop
ds
mov
test
jne
push
or
out
scas
pop
and
pop
cmp
push
add
push
icebp
shr
fisubrl
movaps
insl
std
cld
cmp
leave
jle
xchg
popf
adcl
adc
pushf
and
sbb
mov
push
dec
mov
xor
es
push
inc
mov
push
adc
in
test
mov
dec
cmp
adc
cli
adc
mov
cmp
adc
jbe
and
mov
jl
inc
insb
mov
fistps
mov
cmp
std
mov
push
subl
test
imul
ss
iret
std
mov
call
and
sub
mov
jecxz
shlb
lea
ret
iret
repz
mov
in
lret
adc
aad
sbb
xchg
mov
call
mov
sahf
xchg
and
xchg
sbb
test
mov
pop
in
ss
push
cld
jl
clc
pop
test
aam
mov
xchg
cmpsb
sub
addb
test
mov
in
xchg
mov
test
dec
pop
and
inc
sub
mov
and
in
les
loop
fnsave
sbb
sub
mov
dec
loop
loop
pop
andl
scas
out
xchg
add
das
repnz
test
cltd
lds
loop
out
pop
adc
cmp
das
inc
test
in
push
popa
push
mov
jno
sub
mov
lret
and
stos
pop
cli
pop
sahf
data16
mov
jecxz
in
aam
insl
inc
iret
mov
sahf
xor
mov
cmp
das
xlat
or
sub
nop
stc
add
dec
mov
inc
arpl
adcl
push
sbb
push
arpl
and
mov
fwait
mov
jmp
pop
lea
popf
add
pushf
jae
push
pop
movsl
loop
mov
xor
stc
jle
add
test
fdivs
jmp
fs
rcr
and
lods
pop
cltd
cwtl
and
sbb
sbb
push
pop
cmpsl
jl
add
mov
cmp
fbld
lcall
sbb
xor
push
test
pop
dec
inc
out
mov
mov
pop
cmp
es
pusha
jne
iret
lahf
loopne
pop
gs
int
mov
push
jmp
adc
inc
jo
adc
xor
xchg
mov
dec
jne
in
and
sbb
push
cmp
lea
mov
inc
cli
ljmp
adc
into
inc
sub
pusha
shlb
ret
or
out
jae
cmp
xchg
arpl
dec
ret
cmp
or
test
lahf
es
xor
scas
pop
sbb
mov
xor
or
cmc
mov
sbb
rcr
mov
sub
fcomp
stc
xor
inc
jno
sbb
xor
adc
gs
add
mov
aad
testb
cmp
mov
xchg
jmp
aaa
sbb
int
add
mov
sbb
push
arpl
jg
repz
jns
mov
pushf
ficoml
cmpsb
adc
iret
pop
or
push
xor
fstpt
ud2
loope
in
popf
mov
ja
or
mov
leave
sub
out
jge
push
aad
mov
data16
pushf
popf
xchg
adc
in
push
mov
mov
push
js
adcb
jne
repnz
mov
and
ljmp
loop
sti
xor
pop
cs
add
sbb
ret
xchg
imul
ljmp
or
scas
out
addr16
dec
or
push
xlat
ret
fwait
mov
out
jle
lds
out
fs
or
and
cld
hlt
outsl
shl
je
mov
add
fwait
movsb
mov
hlt
fnsave
popa
adc
cmp
fsubr
icebp
xchg
adcl
mov
in
cmp
imul
xlat
xchg
cmp
lcall
mov
adc
lods
aaa
pop
icebp
sbb
roll
xchg
addr16
pop
mov
es
enter
jle
scas
inc
ret
movsl
mov
cmpsl
stos
ja
xchg
data16
js
push
pop
adc
inc
popf
inc
daa
popa
or
add
xor
fbstp
aam
fs
xchg
rcrl
push
cmp
shrb
sub
push
fidivrl
mov
and
mov
rolb
cs
mov
sbb
mov
out
jl
fdivl
in
xchg
ret
and
pop
sti
lods
inc
push
ja
scas
add
lret
imul
xchg
aad
add
mov
add
leave
dec
mov
divl
pop
sub
popf
inc
push
xor
mov
cld
push
push
lcall
inc
xchg
lret
mov
cwtl
loopne
lret
lods
std
or
nop
jge
sbb
inc
mov
aad
mov
or
rorb
inc
inc
arpl
cmp
adc
push
iret
xchg
loope
lcall
cmp
xor
pop
mov
cli
shll
je
call
sbb
insl
fstp
lret
fldt
jp
jecxz
sbb
pop
shr
pop
outsl
fs
xor
jno
aam
jns
sbb
cs
lds
mov
jne
in
popa
inc
dec
rorl
mov
cmc
popa
mulb
cld
jp
imul
aaa
fiadds
xor
lods
xchg
fimuls
push
cmp
inc
aaa
xchg
jne
sbb
inc
addb
push
int
push
xchg
mov
frstor
lods
cs
mov
lds
add
jo
sbb
push
and
ss
enter
pop
dec
fldenv
lods
inc
dec
cmp
or
negl
ret
mov
push
call
jb
nop
sub
int
jb
outsb
sbb
lods
divl
pop
fstl
mov
mov
xchg
je
lods
clc
jno
dec
int3
out
sbb
or
lds
lea
sub
pop
divl
jmp
dec
mov
rcrb
push
pusha
std
sub
dec
jae
pop
lds
arpl
pop
fnsave
lods
cmp
sbb
test
push
xor
insl
inc
mov
inc
xor
cld
test
or
rorb
or
imul
gs
out
lock
xchg
jg
call
lret
nop
xor
jbe
call
dec
push
icebp
xchg
sar
out
je
mov
push
lret
negb
fmul
cmpl
xchg
push
rclb
or
popl
xchg
in
pop
xor
sub
inc
fidivs
aad
repnz
sub
je
lret
int3
loope
fldcw
movsb
addr16
push
dec
ljmp
in
pop
cmp
outsl
jnp
push
pop
cld
add
shr
adc
push
int
and
imul
aam
aas
and
xchg
in
jnp
aaa
mov
mov
movsl
sub
push
sub
popl
mov
into
jbe
push
jnp
mov
insb
and
pop
rol
jp
div
jecxz
jns
outsb
jbe
xchg
cmp
push
clc
and
test
push
mov
xchg
push
dec
cs
inc
subl
mov
mov
sub
jbe
imulb
or
nop
inc
xor
test
ror
xorb
fsts
push
jne
jle
pop
mov
sahf
shlb
imul
adc
mov
cmp
fcom
les
shr
cs
idivb
cmpsb
adc
mov
loope
fnstenv
aaa
xchg
shll
mov
sub
rolb
xchg
xor
and
mov
std
insl
fnstsw
xchg
add
test
sti
daa
sbb
cmc
jmp
mov
sti
ret
jbe
test
fs
xchg
sub
mov
ja
les
data16
fisubs
jno
clc
sub
aas
scas
sub
xor
into
pushf
test
dec
bnd
ror
dec
mov
popa
popa
jne
jo
rclb
push
pop
or
jl
loop
and
dec
lahf
push
loop
push
dec
push
xor
dec
jnp
outsl
mov
xorb
pushf
sub
xor
pop
adc
xchg
frstor
xlat
xchg
in
cmpb
sbb
inc
jp
lcall
fcmovnbe
jl
push
repnz
adc
std
push
std
ficomps
xchg
outsb
fiadds
push
jl
into
loop
dec
cld
icebp
xlat
add
inc
xlat
mov
imul
repz
push
outsb
daa
fmull
and
test
sbb
flds
outsb
jo
arpl
negb
fimull
sub
andl
inc
mov
sbb
das
cmpsb
xchg
sbb
icebp
jge
incb
int
jo
je
add
cmp
out
das
fisttpll
mov
lds
pop
in
push
xor
bound
insl
dec
or
mov
test
into
xchg
inc
xchg
sar
jle
inc
cmp
mov
movsb
xor
fadds
test
iret
call
nop
es
mov
movsb
andl
int
es
mov
js
aad
cltd
jmp
ret
cmpsb
push
pop
stc
fcmovu
ret
mov
out
push
sbb
xchg
lods
or
adcb
loopne
cmp
movsl
add
pop
out
add
push
aas
dec
lahf
sbb
imul
jl
mov
and
in
xchg
je
movsb
sbbb
in
leave
push
push
ja
xchg
inc
mov
sbb
test
mov
sub
lret
or
fstps
dec
pop
and
inc
ds
imul
mov
pop
pop
mov
mov
dec
ja
nop
out
and
ret
cld
sbb
stos
call
sub
mov
in
imul
dec
pop
mov
mov
sub
inc
pop
cmp
pop
sub
movsl
call
lahf
movups
adcl
mov
testb
jmp
jae
pop
cmpsb
jmp
dec
mov
push
xchg
dec
or
mov
std
gs
lods
lret
sub
negb
mov
cmpsb
cltd
mov
lock
movsl
into
jp
lea
or
sbb
jge
cmpsl
clc
stc
cwtl
mov
divb
and
mov
xor
movsl
mov
ret
out
movsl
adc
into
lock
xor
inc
pop
lods
cmp
pop
in
or
mov
lock
test
dec
xchg
sbb
jno
cs
mov
mov
cmc
pop
dec
mov
sbb
add
sub
and
fwait
cmp
pop
hlt
pop
outsl
popf
aam
jecxz
int3
es
in
cwtl
jns
lret
inc
scas
xchg
xor
sti
ja
lods
dec
sbb
add
add
in
out
push
xchg
sub
or
mov
out
mov
cs
pop
and
jbe
movsl
push
rclb
shl
xchg
test
ljmp
adc
movsb
xchg
xchg
loope
loope
and
xchg
mov
jle
pop
push
push
xor
xchg
sbb
into
int3
sbb
bound
lods
dec
adc
push
inc
fisttpl
cltd
inc
inc
xlat
les
pushf
pushf
push
inc
fs
fdivrs
dec
jae
mov
cmpb
jl
stc
dec
mov
mov
push
es
lret
mov
push
or
jle
int
fstl
fwait
mov
dec
xchg
xchg
mov
fcmovbe
xor
xlat
lock
add
adc
xorl
cmp
pop
mov
mov
or
jmp
xor
dec
in
imul
sti
pop
or
or
push
or
jb
adc
pop
dec
incb
mov
and
sbb
mov
dec
call
sub
int3
push
out
fs
dec
movzwl
mov
dec
pop
mov
and
cli
push
or
hlt
cmpsl
iret
or
adcb
lock
and
dec
xchg
xor
or
pusha
out
cmpsb
and
scas
jbe
or
enter
lods
cmp
mov
push
lret
cwtl
sahf
jns
ret
add
arpl
sbb
jns
ret
inc
dec
sub
inc
cltd
mov
fldcw
subl
aam
jae
jge
adc
xchg
dec
popf
das
xor
loopne
leave
mov
adc
sbb
out
popa
dec
shll
mov
cmp
icebp
pop
bound
push
xchg
push
pop
add
or
testl
xchg
daa
cmp
mov
loope
mov
xchg
and
imul
ja
add
loop
xlat
push
mov
xchg
sbb
push
xchg
mov
ret
aas
fistpl
repz
jl
in
sbb
lcall
in
sbb
jno
hlt
inc
out
stos
mov
lds
mov
iret
rcll
rcr
jno
jge
jno
rcrl
inc
adc
loop
in
mov
jo
ret
dec
insl
cmpsb
test
pusha
test
mov
cwtl
ss
je
cwtl
cwtl
insl
jno
lods
test
aas
dec
mov
mov
add
dec
enter
lret
movsb
out
shrb
xchg
xchg
rorl
pop
mul
int
adc
fistpl
push
mov
push
or
fdiv
out
push
pusha
mov
gs
jns
jno
mov
in
imul
repz
dec
xor
push
mov
mov
push
xchg
sbb
mov
test
jge
imul
jne
and
dec
shrb
sub
push
dec
cmc
movsb
rcl
lcall
xor
fsubp
xchg
mov
mov
ss
cmpl
cld
adc
popf
inc
pop
push
ds
ss
js
xor
pop
mov
loop
ja
cwtl
or
cmp
imul
dec
xchg
cmp
add
sbb
es
je
aas
lock
jb
nop
cmpsl
sub
xchg
or
lods
test
xor
lock
inc
insl
mov
loope
in
movsl
lods
xchg
enter
jle
mov
mov
movsb
mov
jae
mov
roll
fsts
mov
dec
popa
les
aam
sbb
and
and
cmp
sbbb
cmp
testb
jae
popa
outsl
jb
pop
add
push
dec
mov
push
cmpsb
and
mov
jbe
movsl
inc
shl
lahf
push
outsl
jbe
xor
sub
push
js
sub
bnd
cmp
jp
sbb
into
pop
fnstcw
inc
stc
jecxz
std
popf
inc
lock
dec
sarl
aaa
or
mov
cmp
or
fcomps
mov
xchg
sbb
cmovno
xchg
mov
push
std
rcl
push
sub
add
movsl
shufps
mov
inc
out
mov
les
jo
out
or
push
je
imul
or
ds
sbb
add
jno
inc
loopne
pusha
cmp
call
fwait
addr16
sub
mov
inc
or
mov
cmp
sar
pop
lock
push
adc
aaa
mov
or
mov
rolb
mov
scas
scas
dec
fiaddl
push
push
popa
sub
mov
ja
pop
and
outsl
rcrb
push
jo
mov
or
pop
in
cs
imul
xor
mov
mov
mov
lret
fwait
mov
push
pushf
push
adc
cmp
inc
dec
sbb
ja
cld
or
rorl
push
cli
mov
pop
mov
add
and
jns
jne
jg
push
test
jg
pushf
pusha
adc
ja
lock
xchg
lea
mov
xchg
scas
stc
imul
jmp
adcl
add
adc
pushf
cmp
sahf
clc
rclb
out
movsl
cmp
add
or
sub
push
pop
mov
adc
jecxz
cli
lock
inc
inc
je
out
mov
mov
js
lahf
call
cmp
inc
sbb
dec
cli
scas
inc
jnp
mov
xchg
repnz
cs
sbb
dec
mov
xchg
mov
fwait
mov
pop
mov
fs
mov
sub
dec
mov
add
or
jl
push
xchg
xchg
add
pop
into
call
fucom
pushf
les
dec
pop
mov
addr16
les
push
or
cmp
mov
mov
dec
ficoml
mov
vmovlpd
mov
aad
xchg
sbb
pop
xor
xor
fldcw
mov
sub
cltd
idivl
adc
in
ljmp
mov
mov
dec
jns
dec
and
sub
and
fnstenv
xchg
mov
dec
cmp
push
mov
jnp
inc
pop
cs
ret
jle
outsb
sub
mov
xchg
repnz
inc
pop
mov
jle
jbe
testl
ret
iret
imull
lock
dec
loopne
adc
jne
dec
jae
loop
sahf
std
and
pushf
xchg
cli
jp
add
testl
cmpsb
imul
into
mov
inc
add
cli
sub
in
mov
hlt
pop
imul
push
and
push
add
dec
arpl
icebp
stc
lahf
and
loop
jle
mov
fsubrs
scas
adc
pop
jae
lods
popa
xchg
or
pusha
add
bound
into
adc
hlt
add
scas
scas
cmp
out
sbb
gs
or
xchg
rolb
inc
loope
cltd
dec
stos
add
cmp
jnp
xlat
sbb
cmp
sbbb
test
shlb
sti
xchg
xor
or
outsb
adc
in
repnz
add
gs
sub
stos
push
or
pop
repnz
push
inc
std
leave
outsb
xchg
int3
mov
addl
das
addl
das
pop
pop
sub
jg
mov
addr16
daa
adc
xor
add
push
cmp
push
mov
fmul
pop
pop
ret
push
das
sbb
aam
pop
pop
xor
mov
inc
xchg
adc
adc
aas
jle
lds
icebp
pop
cmp
xchg
jb
push
leave
pop
popf
fsubl
push
lcall
cld
and
inc
lahf
or
mov
add
jp
subl
lods
divb
add
or
enter
pop
icebp
call
mov
cwtl
mov
loope
lahf
push
stc
fldl
int
aad
cmc
jl
ss
fld
fsubrp
push
inc
pop
cmp
jge
push
xor
mov
sbb
pop
leave
push
cmc
jno
sbbl
jp
aas
bound
jmp
fdivl
das
out
pusha
sub
push
repz
test
push
mov
rclb
sbb
negb
movsl
push
popf
popa
pop
xchg
xor
jle
mov
mov
mov
mov
enter
sub
sub
int
inc
mov
in
mov
ret
sbb
pop
push
jb
cmc
jne
lds
push
sub
push
jle
jecxz
outsl
add
cmp
pop
and
imulb
gs
push
dec
or
cmp
sbb
lahf
push
sub
cld
adc
adc
xchg
cld
fwait
sahf
sti
and
sub
sarl
lock
pop
cmp
add
ss
adc
push
mov
pusha
adc
xor
sub
aad
lea
int3
ja
lock
rorb
loope
daa
pop
outsl
pop
cmc
lods
ja
jle
out
or
adc
in
fnsave
add
mov
lds
inc
popf
inc
rcrl
cmp
popa
pop
ss
shlb
int
jne
enter
insb
addr16
lret
imul
ffreep
pop
cwtl
outsl
movsb
sbb
or
mov
push
fimuls
lds
pop
test
adc
fbld
mov
fnstenv
jne
lret
aad
sbb
mov
inc
or
adc
mov
mov
mov
aad
lahf
lahf
sub
stos
mov
adc
leave
xor
dec
aad
mov
adc
pop
push
inc
mov
testl
cmp
shll
mov
repnz
mov
pop
andb
fmuls
jp
inc
or
fldenv
mov
ret
fisubrs
pop
fmuls
andnps
dec
jge
pop
lahf
xchg
mov
es
mov
outsb
inc
aas
int3
jecxz
pop
cwtl
mov
insb
jl
xor
xorl
xor
movsb
mull
cld
push
call
adc
cmpsl
sbb
ljmp
mov
out
xor
and
pop
mov
scas
mov
xor
stos
mov
add
addr16
and
sahf
daa
and
ffree
andl
loopne
mov
addl
sub
jl
cmp
jp
roll
mov
hlt
pop
xlat
test
mov
push
int
jp
movsb
test
test
popf
adc
and
or
cs
sub
es
sbb
repz
bound
leave
jae
negb
dec
insb
sub
add
es
lock
imul
or
pushf
stos
mov
push
ljmp
dec
dec
jp
adc
popf
add
pop
jae
inc
xor
lret
stc
mov
adc
push
sbb
fstp
sti
dec
pop
aam
jmp
xchg
shrb
mov
dec
imul
xor
test
inc
or
xchg
sbb
jae
es
ficoms
push
fcoml
roll
lahf
pop
push
out
push
lret
sarl
and
push
arpl
jl
or
out
out
out
xchg
add
mov
aas
xchg
scas
xchg
out
jge
int3
mov
arpl
inc
daa
or
xor
dec
pop
test
call
sbb
inc
fstpl
inc
mov
jmp
xor
jns
xor
test
xchg
cmpsb
or
add
adc
ss
hlt
into
cmp
cltd
jno
aad
lahf
test
outsl
mov
movsl
inc
push
and
and
arpl
pop
jge
pushf
inc
pop
dec
push
jns
adc
lock
jp
mov
xor
lds
push
stos
cmp
cmpl
mov
int3
rorl
mov
or
inc
aad
or
jbe
mov
js
nop
xchg
ljmp
xor
pop
neg
fs
add
mov
mov
push
push
fisubl
add
lcall
inc
sbb
inc
movsb
inc
call
mov
mov
out
mov
jne
fwait
scas
add
pop
cmp
shlb
adc
sub
lods
fwait
sahf
xchg
lret
aas
in
pusha
xchg
adcb
dec
testb
inc
fsubrl
neg
loope
lret
mov
sub
dec
sub
cld
ret
lods
and
lods
push
es
cmp
jbe
aaa
fstl
enter
and
mov
or
xorl
sbb
mov
leavew
sub
push
lret
mov
pop
jge
xchg
mov
shlb
push
jge
xchg
and
popa
jmp
sbb
in
div
cmp
cmp
out
js
outsb
cli
mov
or
roll
movl
div
cltd
sub
dec
sbb
push
addl
mov
std
cli
into
cmpb
push
dec
jbe
fisubrl
fnstcw
push
notl
into
pop
rorl
out
cltd
xchg
out
cmovbe
popa
add
aaa
and
jne
lea
pop
mov
fstl
outsl
sar
pop
fistpl
aam
pop
push
testl
lret
aam
stc
aad
out
clc
in
dec
or
outsl
loopne
dec
cmp
jl
xor
adc
arpl
or
jbe
out
mov
test
ja
xchg
idivb
sub
fisubrs
icebp
inc
rcrb
mov
mov
sbb
mulb
stos
jecxz
lret
clc
mov
div
lret
loope
loopne
cld
into
adc
outsl
xor
xchg
adc
mov
lods
sbb
test
in
js
xor
mov
fwait
in
in
int3
jge
roll
pop
push
jns
jge
mov
xbegin
inc
mov
repz
push
in
mov
pop
iret
xor
cmp
cmpsb
push
sbb
mov
add
and
lods
leave
aam
cmpsl
loopne
dec
cmp
cmp
ds
mov
dec
cmp
jnp
sbb
jmp
hlt
mov
mov
or
das
mov
cmp
inc
sti
mov
icebp
sbb
fwait
add
push
hlt
js
sbb
pushf
lret
mov
addr16
xchg
pop
sahf
out
hlt
cld
addl
inc
repnz
xchg
pop
push
rcrl
push
pop
inc
mov
cmpsb
push
pop
xlat
outsb
in
mov
xchg
fistpl
push
lock
lahf
cmc
sbb
sub
fnstenv
imul
inc
and
xchg
pop
pusha
mov
enter
xchg
repnz
mov
push
fsubr
in
fists
repz
add
push
scas
mov
insb
pop
addl
mov
dec
das
sub
icebp
mov
jnp
or
ret
mov
jb
dec
inc
icebp
sbb
addr16
stos
loope
in
mov
lret
jmp
test
pop
mov
xchg
push
mov
stos
sub
in
and
ljmp
pushf
icebp
sarb
sub
adc
lahf
push
in
add
mov
aaa
aam
addb
jmp
mov
mov
pop
scas
or
test
sub
outsb
mov
repnz
pop
jo
dec
mov
jae
sbb
dec
dec
inc
loop
jmp
adc
int3
xchg
mov
push
adc
dec
sbbb
inc
jns
inc
cmp
dec
or
or
fwait
and
jbe
cmpsb
xchg
frndint
dec
je
jecxz
rcrb
shrl
cmp
mov
xchg
int
decb
insb
dec
push
and
in
fcmovne
mov
cwtl
xor
inc
jge
loopne
dec
mov
iret
push
int
pop
scas
sbb
sub
lea
lret
cwtl
iret
ret
arpl
test
enter
adc
sub
or
cmp
dec
mov
les
ja
pusha
mov
adc
xorps
sbb
icebp
mov
xor
adc
jo
rcrb
rcll
lcall
inc
jns
stos
push
xlat
stos
negb
lret
and
popa
mov
sub
or
mov
sbb
xor
xchg
cs
cmp
fwait
cmpb
xchg
inc
jbe
inc
mov
sub
and
push
ja
mov
dec
dec
and
add
jg
push
incl
push
pusha
jecxz
pop
push
cs
add
fmull
jp
xor
mov
dec
test
lods
in
xchg
jecxz
xchg
popf
sti
push
fstps
pop
out
pusha
sbb
icebp
cmp
mov
jl
out
ss
inc
in
sar
lahf
fimull
sarl
or
testb
cmc
jae
sub
xor
dec
and
xchg
arpl
push
mov
dec
xchg
sub
cmp
jo
jmp
filds
push
stos
pop
mov
sub
push
and
out
cmp
pop
sbb
movsb
jne
lock
xor
dec
cmpsl
subl
xor
divl
dec
mov
es
outsl
add
xchg
rcrb
jecxz
add
jmp
popa
dec
int3
and
xor
adc
aam
scas
jb
mov
dec
xor
or
enter
pop
mov
xor
enter
shll
test
mov
dec
xlat
dec
loopne
and
movsb
xor
mov
sbb
mov
and
and
rcpps
popf
mov
xor
push
push
jecxz
ror
addr16
jbe
sbb
divl
sub
sbb
adc
or
out
or
or
test
lock
fmuls
es
fdivs
and
jne
cmp
add
push
scas
cmpsl
lds
pop
cmp
jnp
dec
sub
mov
pop
inc
cmpsl
sbb
mov
dec
jecxz
hlt
pop
mov
dec
pop
jns
call
mov
lods
inc
inc
sub
shll
pop
add
push
mov
int
mov
lret
bound
cmpsb
fs
ljmp
sub
sbb
sbb
mov
hlt
rol
in
dec
rcll
icebp
jle
pop
jns,pn
or
out
mov
xor
dec
ss
mov
push
or
sub
mov
xchg
in
daa
lahf
sbb
insb
and
call
sbb
push
sti
and
fdivs
jae
mov
sbb
mov
xlat
fstpt
out
jecxz
mov
sub
push
pop
mov
or
mov
and
xchg
fwait
ss
pop
ror
addb
pusha
lds
lret
xchg
add
mov
gs
repnz
mov
js
xchg
stos
insb
push
pop
rorb
or
imul
scas
inc
and
cmp
push
das
dec
outsb
aad
shl
xorl
pop
sub
out
aad
stc
mov
mov
push
arpl
ljmpw
push
mov
repz
or
sub
sbb
cmc
dec
jno
loopne
ret
dec
xchg
jo
bound
pop
cmp
stos
lcall
sbb
or
test
and
test
js
mov
andb
cmpb
loopne
inc
mov
push
xor
push
and
movsl
sbbl
fbld
aaa
es
lcall
mov
imull
hlt
jecxz
mov
xor
lret
pushf
pushl
lahf
pusha
xchg
ss
add
and
ja
add
scas
lds
aaa
fnstsw
xlat
push
sti
add
lcall
cld
into
ljmp
push
mov
mov
mov
jmp
daa
out
rol
pushf
in
mov
jae
mov
lret
pushf
or
rol
mov
jae
stos
lds
leave
or
xchg
xchg
mov
push
shlb
pop
sub
jge
lcall
pusha
int
repnz
test
movsl
lretw
add
xchg
sub
es
call
adc
cltd
sbb
pop
sub
mov
or
mov
das
hlt
addr16
cmp
aam
mov
subl
pop
xchg
and
push
jae
mov
outsl
cmp
mul
repnz
push
iret
cwtl
pop
mov
mov
pushf
ljmp
movsl
sub
cs
lcall
fimuls
bound
inc
add
stos
mov
popf
mov
sbbb
je
ja
sub
pop
and
aam
arpl
ds
adc
jns
mov
adc
iret
movzwl
pop
fldl
repnz
pop
aas
call
xor
daa
sub
xor
pop
rcl
cmp
cli
lds
ret
add
xor
js
test
test
cmp
push
roll
fisubs
movsl
add
mov
and
mov
dec
fnsave
cmc
cmp
dec
cmc
test
incb
dec
xchg
fdiv
mov
rcll
and
cltd
xchg
inc
jb
inc
lods
add
pop
cli
sub
repnz
sub
fwait
imul
js
shr
cmpl
xorl
out
mov
xchg
int3
adc
adc
cmp
push
ljmp
in
inc
mov
pop
dec
out
push
mov
lock
icebp
sahf
aad
xchg
jbe
inc
iret
or
mov
pop
repz
dec
sbb
sbb
mov
pop
sub
cmp
adc
fimull
mov
dec
roll
sti
jns
push
sub
jl
pushf
inc
pop
inc
jns
neg
jle
adc
lods
or
inc
test
sbb
ficompl
dec
and
adc
mov
lcall
in
add
fs
pop
pop
mov
bound
test
test
daa
lods
xchg
inc
test
add
sbb
xorl
jge
push
or
jno
sbb
iret
popa
rcrl
aaa
or
xchg
pop
or
icebp
sbb
pop
jl
xor
cmp
push
push
incb
pop
outsb
rorb
sbb
loop
xor
or
mov
imul
es
stos
push
mov
lcall
call
pop
and
sbb
mov
int
jp
fdivl
mov
popa
in
testl
push
inc
movb
ficomps
scas
and
lods
clc
push
push
xor
movsb
mov
add
pop
inc
mov
lcall
mov
add
add
shrl
sbb
add
pop
ds
push
repnz
xor
aas
sahf
dec
add
aad
dec
jl
xor
dec
aad
in
nop
into
push
scas
mov
mov
mov
outsl
cmpsl
adc
pop
mov
subb
and
insl
shl
inc
loopne
push
sbb
jecxz
push
in
cld
pop
xchg
or
jbe
cmp
pushf
xchg
mov
repnz
dec
cmp
data16
jmp
int
jmp
test
xor
lea
in
arpl
dec
sbb
dec
cltd
mov
mov
dec
shrb
daa
xchg
pop
dec
jle
pop
out
jns
ret
loopne
sti
mov
fstps
xor
xor
movsb
cmp
lods
jecxz
int
cmp
pop
sub
fistl
cmp
fistl
icebp
ds
aas
lcall
fldl
mov
js
jne
fs
lret
lret
jl
lret
and
cwtl
fisttps
lea
sbb
in
push
movsl
cmp
sub
sar
popa
shl
inc
inc
arpl
jmp
pop
lods
xchg
add
cmpsl
push
push
ror
or
adc
out
pop
in
xchg
sbb
je
or
shlb
flds
push
aaa
inc
pop
sbb
cmp
adc
imul
clc
cmp
lahf
sbb
add
lods
testb
out
xchg
test
or
pusha
stc
imul
insb
out
cmp
mov
cmpsb
cmpsb
cmp
mov
rolb
inc
je
cltd
das
nop
pop
add
dec
dec
mov
push
aas
xchg
adc
cmpsl
test
jne
into
jg
cli
xlat
xchg
fcomp
ja
xlat
aas
jbe
inc
jbe
pop
fs
pusha
xrelease
icebp
loope
inc
shll
push
ss
int
loopne
sub
iret
cmp
pop
xor
jge
push
pusha
ja
mov
mov
outsl
inc
pop
stos
sbb
cld
shll
inc
pop
sbb
xor
loop
ja
xchg
xchg
fwait
mov
cmp
fcoms
and
into
push
mov
into
icebp
lret
mov
repnz
flds
xor
sbbb
aam
cmpsb
decb
pop
mov
pop
ret
push
cltd
adc
pop
int
xchg
int
inc
xchg
jno
inc
sub
int
xchg
xchg
iret
add
push
aad
sub
or
xchg
scas
sub
xor
add
and
in
negl
iret
insl
pop
sahf
nop
out
dec
insb
pop
xchg
and
shlb
addl
aas
js
mov
jno
pop
sub
mov
sub
or
mov
lret
das
xlat
out
scas
sub
sbb
mov
xor
out
push
jp
mov
popf
jns
push
or
and
orb
pop
mov
and
ret
call
test
bound
decb
adc
andl
dec
mov
and
adc
les
and
mov
jns
out
jne
int
cmpsb
xor
movsl
adc
insb
and
data16
hlt
push
shl
outsl
xchg
fldl
mov
jl
jp
sbbb
mov
sub
push
add
das
mov
aad
mov
call
orl
dec
push
inc
pop
mov
loopne
inc
mov
or
jmp
les
hlt
xchg
sub
xorb
push
cmpsb
rorb
lret
cmp
adc
push
lock
in
fadds
pop
cmp
pop
mov
ljmp
pop
mov
imul
sub
lods
hlt
pusha
cmpsl
sbbb
sub
cwtl
cmp
jbe
lods
mov
mov
sbb
ljmp
adc
lods
cmpsl
insb
imul
inc
cli
bound
add
leave
inc
sub
jg
pusha
rclb
jmp
push
pop
push
pop
popf
nop
shrl
rolb
fwait
mov
jno
loopne
xchg
insl
lock
ljmp
mov
ljmp
cmp
mov
mov
pop
dec
jg
mov
enter
das
xchg
lods
ja
mov
sbb
aam
push
mov
loope
test
pop
scas
scas
fucomp
lret
sbb
sbb
mov
ss
test
sub
fs
pop
int3
shlb
mov
fwait
gs
jne
xchg
jge
cld
addr16
jmp
das
lcall
call
adc
pop
adc
push
popa
xchg
repnz
imul
or
movups
jge
ljmp
imul
sahf
outsb
test
dec
or
popf
daa
cmp
cmp
xlat
test
daa
lahf
xchg
loope
inc
negb
add
xorl
pop
pop
lea
insl
sahf
fcompl
and
stos
sbb
arpl
pop
popf
ret
mov
mov
push
ret
cld
mov
add
cld
sub
arpl
adc
scas
add
xchg
rol
jae
dec
mov
inc
pop
mov
pop
jg
push
xor
movsb
xor
push
sub
xchg
push
jle
cmp
mov
ds
push
push
cmpsl
inc
mov
inc
sbb
sbb
inc
movsl
scas
push
lret
xchg
or
pop
and
sub
xlat
sbb
sub
dec
repnz
lret
lods
es
fmul
test
lahf
xor
sbb
mov
fs
pushf
dec
add
jge
jae
cmp
sbb
dec
in
mov
sbb
inc
xchg
xchg
icebp
mov
lea
xlat
sub
out
cltd
xchg
inc
loope
adc
cmp
mov
aam
pop
mov
and
decb
gs
arpl
adc
cmpsb
movsb
repnz
xor
int
test
loope
xor
aaa
mov
sbbb
and
xchg
cwtl
ss
lea
cmp
push
inc
loop
fwait
sub
lret
mov
sti
jbe
push
pushf
pop
mov
inc
mov
fsubr
pop
adc
pop
xchg
loopne
and
xor
xchg
inc
je
int3
test
dec
mov
stos
popa
out
mov
sbb
flds
fistpll
fdiv
test
test
movsb
jno
xor
iret
dec
fisttps
push
insl
int3
test
jo
shr
mov
cwtl
jns
fnstcw
stc
mov
lock
ja
xor
and
cmpsb
xchg
jae
mov
cmp
xor
mov
aas
cltd
adc
sub
das
test
insb
cmp
adc
push
outsl
insb
xchg
repz
dec
repz
out
mov
mov
mov
mov
push
fisubrs
dec
sub
adc
add
repz
pop
lret
jp
or
mov
jb
into
dec
gs
mov
stos
repz
int
inc
pop
sbb
dec
out
stc
adc
fsubl
xor
cs
jp
les
loop
inc
jl
xor
mov
or
dec
push
jmp
cmp
in
mull
ret
bound
bnd
std
xchg
jno
scas
int3
push
aam
cmpsl
push
mov
pop
xor
inc
xchg
xchg
in
xorb
dec
popa
jo
sar
xor
xchg
mov
into
sbb
push
movsl
push
xchg
sub
mov
cmpsl
rorb
add
sahf
xlat
fisubs
shll
iret
mov
inc
jae
je
cmp
dec
std
mov
inc
mov
mov
out
scas
jne
adc
pop
mov
push
xchg
xor
pop
and
push
lods
rorl
dec
jle
sarl
sbb
mov
jns
shlb
fbstp
mov
xor
lea
je
inc
and
test
push
outsb
adc
addr16
or
fcomps
adc
sub
sbb
daa
fisubrl
ret
call
bound
lods
mov
mulb
ja
jnp
add
jb
xchg
loopne
jnp
or
out
cmp
jb
cmp
jns
insb
push
xor
dec
and
jo
fldt
push
shll
dec
int
lahf
sbb
cmp
xor
push
insl
sarl
adc
or
stos
ret
sub
cmp
ret
jnp
js
inc
arpl
je
loope
sub
jns
or
out
mov
or
jp
popf
sub
inc
call
add
dec
lods
arpl
movsb
ss
adc
sbb
in
test
xchg
sbb
mov
adc
inc
add
jl
cmpl
cmp
fcmovnbe
popf
jge
lea
fstpt
inc
xlat
mov
repnz
xchg
scas
stc
gs
mov
clc
xlat
push
mov
loopne
insl
pop
push
dec
fldt
mov
or
mov
xchg
dec
mov
jp
fildll
xchg
out
jge
and
shl
or
arpl
pop
adc
daa
nop
rolb
xlat
ret
loop
push
out
mov
pop
in
cs
cli
pop
enter
push
xchg
inc
gs
ds
dec
out
sahf
stc
dec
jno
jl
push
arpl
outsl
xchg
insl
mov
mov
in
mulps
cli
adc
xor
out
xor
xchg
mov
stos
cmpsb
ja
push
shll
imul
lret
movsl
mov
pop
mov
xchg
jno
xor
fdivr
repz
or
loope
xor
addb
test
push
inc
test
shrb
ja
std
xor
fld
push
jnp
leave
mov
mov
loop
push
imul
test
pop
dec
iret
pop
dec
xor
iretw
sub
dec
fistl
jno
sbb
mov
pop
in
add
mov
mov
pushf
repz
xchg
test
call
push
data16
into
mov
cltd
push
testl
je
pop
fs
inc
int3
adc
or
hlt
mov
mov
das
inc
sub
les
icebp
stos
cmp
add
ret
daa
rcll
sbb
popa
js
cltd
dec
add
jo
inc
sub
mov
pop
xchg
test
stc
pop
xchg
sbb
push
sbb
loopne
and
and
dec
enter
daa
or
jae
push
xlat
and
test
scas
je,pn
sub
push
jns
push
xor
ds
or
sbb
mov
sub
add
cltd
inc
lock
adc
div
mov
xor
stos
testb
mov
sub
scas
dec
push
pushl
hlt
leave
sub
xchg
mov
bound
in
jae
daa
push
sub
mov
pop
mov
jb
fldcw
mov
push
cmp
lcall
cwtl
jae
inc
mov
sub
clc
into
nop
inc
dec
and
jb
out
js
lods
stc
push
push
filds
sub
and
pop
mov
cmc
testb
xor
dec
add
mov
mov
inc
sbb
imul
in
aas
scas
pop
adc
pop
aam
int3
dec
fnstenv
xlat
cltd
cli
inc
jo
inc
sbb
sub
lds
pop
sub
adc
sbb
push
adc
xchg
lods
das
mov
jnp
imul
out
and
pop
lock
pop
movsb
flds
fwait
clc
mov
pop
arpl
in
dec
or
out
rorl
push
fisttps
ja
addl
xor
popa
ljmp
add
adc
gs
xchg
cmp
xchg
pop
ss
repz
mov
pop
int
aas
mov
les
pusha
sub
xor
push
push
xchg
and
lcall
inc
bound
popa
movsb
stc
icebp
pop
sbb
dec
test
jle
cmpsl
imul
adcb
sbb
jg
jae
mov
rcl
test
sbb
jmp
sub
shll
jne
jb
hlt
out
xchg
sbb
dec
adc
fldenv
subb
popf
loope
nop
aaa
mov
sbb
into
mov
nop
xchg
stos
in
xchg
add
iret
and
mov
out
pop
int3
adc
outsl
scas
xor
and
jne
in
arpl
into
sbb
mov
pop
je
xchg
mov
sub
cmc
lret
insb
mov
xor
repz
scas
mov
mov
or
loop
out
call
out
out
popa
out
ljmp
lret
lahf
pop
fldcw
push
test
into
rcl
out
mov
cmpsl
sbb
in
pop
xchg
push
popa
mov
or
test
cltd
cmp
sti
int
mov
es
out
movsb
cmpl
push
popa
scas
test
jne
fwait
int3
mov
loopne
je
repz
xor
mov
aam
stc
stos
xor
pop
push
fs
mov
lods
mov
pop
add
lret
or
add
test
sti
jle
test
test
lods
data16
mov
fidivl
lret
into
ja
mov
cld
hlt
mov
xlat
stc
repz
sub
test
mov
xor
int3
lcall
fcompl
dec
cmp
mov
clc
xlat
inc
scas
mov
lds
pop
int3
movsl
and
dec
push
in
or
add
adc
mov
aas
cwtl
imul
push
mov
addl
jo
push
cmp
out
and
sbb
mov
mov
or
data16
stos
loopne
addb
mov
ret
lock
movsl
lock
push
stc
mov
or
and
cmpsl
push
cmpsb
ja
in
or
push
xor
xor
inc
push
cmpl
sub
pushf
and
mov
pop
retw
notl
inc
xor
shll
ljmp
cmp
leave
xor
je
push
and
int
mov
cmp
mov
fstpt
cmc
cs
pop
iret
mov
add
in
xchg
jle
mov
mov
dec
cmp
scas
mov
inc
lods
sbb
sbbb
rol
stc
ss
loop
stc
inc
fs
inc
aad
pusha
add
ljmp
testb
outsl
pop
xor
jmp
xchg
daa
ja
int
sbb
mov
cmp
or
in
ljmp
sub
push
push
lea
pusha
inc
mov
aas
arpl
movsl
cld
andb
mov
adc
mov
mov
popa
inc
stos
pop
xchg
push
jb
out
or
sbb
insl
xlat
fcoms
in
mov
push
mov
jge
cmpsl
gs
jno
or
outsl
cmp
inc
fs
test
into
cmp
out
jmp
test
test
pop
addr16
stos
jg
imul
sbb
mov
or
sbb
fchs
cmp
push
cld
sbb
dec
dec
sub
mov
aas
lret
in
aaa
add
jb
je
adc
cs
leave
sti
sti
aam
cmpsl
arpl
xchg
cmp
push
add
push
jg
lahf
push
dec
fdivr
loopne
pop
popf
ficoms
mov
mov
sbb
adc
call
repz
xor
push
pop
aas
xchg
cmp
mov
outsb
dec
cmp
ret
mov
cwtl
stos
inc
mov
popa
mov
adc
test
leave
loope
jnp
sub
pop
mov
mov
and
mov
pop
lea
shlb
mov
cmp
out
stc
push
repnz
mov
cwtl
pop
cmpl
fidivs
test
mov
shlb
in
and
aas
xor
and
mov
adc
addr16
scas
stc
fists
ja
mov
xchg
lret
pop
mov
push
adc
idivl
lds
loop
loopne
bound
pop
mov
fstp
es
dec
add
jge
ds
ret
repz
out
sbb
cmp
jae
orb
es
sbb
testl
adc
sbb
call
mov
rol
icebp
pop
sub
xchg
xchg
mov
imul
mov
jb
fcomi
test
sbb
inc
add
xlat
iret
jno
xchg
movsl
add
lea
adc
test
mov
inc
or
int
test
out
fbld
xchg
in
addr16
test
mov
and
insl
sub
fsubr
stos
cli
sub
pop
xchg
lods
or
bound
bound
jns
xor
ficomps
aam
subl
adc
sub
lods
inc
mov
mov
cmp
test
cli
mov
mov
dec
push
adc
push
lock
fs
pop
inc
push
cmpsl
out
or
xor
je
aad
loopne
int
repnz
mov
inc
adc
xor
sbb
push
push
push
dec
outsl
cmp
pop
adc
jae
cld
outsb
dec
cmp
scas
mov
jmp
mov
shl
inc
daa
gs
cwtl
scas
adc
icebp
sub
vmovsd
push
test
mov
es
pop
adc
inc
stc
cwtl
inc
jl
inc
jnp
clc
or
mov
sbbb
pop
cmpsl
jl
mov
xchg
dec
add
jbe
mov
add
dec
imul
xchg
repz
sbb
ss
push
adc
and
gs
rorl
lret
enter
xor
nop
ds
iret
adc
sbb
adc
lret
sbb
jo
fidivs
jle
push
and
rolb
push
test
jecxz
mov
cmp
or
cmp
cs
cmp
mov
xchg
stos
lret
mov
lock
add
nop
push
imul
int3
pop
es
in
push
mov
xor
loop
scas
mov
fmull
popa
cmp
int3
test
jno
loopne
jge
adc
int
das
dec
stos
mov
sbb
aas
cmp
in
inc
daa
mov
pop
inc
ret
and
pop
aam
sbb
movsb
inc
sub
sub
jmp
mov
push
ret
lods
subb
outsl
leave
cli
adcl
sub
mov
push
adc
aam
mov
dec
jo
sub
dec
mov
call
loop
ds
mov
movsl
stos
add
test
call
mov
xchg
pop
sahf
lcall
ljmp
stos
popa
push
cltd
cli
mov
pop
sub
jo
and
mov
popf
inc
repz
int3
out
je
movsb
jle
std
lcall
repz
mov
mov
pop
jmp
jl
cmp
out
jnp
leave
sbb
dec
lcall
call
push
xchg
mov
sahf
insl
jg
jns
js
xor
jle
jp
xor
cli
fwait
xchg
jno
sbb
test
hlt
fisttpll
pop
mov
xchg
sahf
nop
sbb
pop
mov
out
push
decb
push
frstor
div
mov
pop
nop
jb
add
mov
add
clc
mov
shl
add
and
dec
ret
arpl
rorb
inc
hlt
xor
mov
cmp
xor
and
test
lock
stos
sub
dec
xlat
inc
and
dec
pop
lea
add
push
repnz
ret
lds
jae
je
dec
and
mov
shlb
cmp
pop
sbb
mov
sub
xor
xor
ljmp
push
call
ljmp
pop
or
arpl
lahf
push
movsl
sub
xchg
pop
and
jp
icebp
sbbl
call
xor
inc
cld
adc
rcll
adc
fldt
sahf
push
rcrb
pusha
add
dec
loope
insw
repnz
mov
stos
outsb
jnp
fcompl
xchg
aas
sets
mov
fstps
pop
ret
jne
add
dec
ss
jl
out
outsl
fsubrs
test
xchg
aas
adc
outsb
add
rclb
cltd
push
shr
jns
fisubrs
xchg
mov
mov
lcall
sub
lahf
test
lods
arpl
sub
cmp
sbb
rclb
fiaddl
mov
pop
ret
adc
lahf
or
mov
and
push
xlat
test
das
mov
add
jb
or
push
data16
in
dec
frstor
jo
loope
loopne
xor
scas
fs
in
lcall
es
pop
xchg
or
mov
push
inc
mov
lds
imulb
mov
push
pop
call
adc
xor
pop
dec
int3
stos
lock
or
rolb
addr16
xor
xchg
popa
into
out
add
in
mov
or
lock
sbb
mov
daa
loope
push
sub
scas
imul
shr
movsb
or
xchg
push
xor
lret
pop
jb
jo
fisubrl
pushf
loopne
adc
leave
push
push
nop
stos
pop
inc
cmp
xor
adc
jl
adc
mov
add
sbb
cs
int3
pusha
fwait
mov
xlat
push
leave
lds
jnp
xchg
fisttpl
adc
sbb
cmc
repz
push
sbb
lods
push
sti
lret
outsb
sahf
or
xchg
jne
daa
inc
addr16
addr16
imul
sbb
pop
xchg
ret
outsb
add
xor
xchg
add
stos
movsb
pop
inc
mov
jae
data16
or
fnsave
ret
inc
push
test
mov
cwtl
bound
in
arpl
adc
movsb
pop
icebp
call
xor
rep
aaa
jns
mov
xchg
shll
and
lods
mov
xchg
sbb
rclb
or
mov
sub
or
shll
aas
mov
sub
mov
xchg
sahf
push
in
add
jg
jl
dec
push
divl
adc
pop
mov
imul
add
and
and
or
cltd
sbb
pop
out
out
cmp
xchg
test
push
inc
testb
cmp
and
push
sub
mov
scas
aaa
sbb
arpl
insb
or
and
enter
mov
mov
shrl
dec
xchg
pop
mov
cmp
lock
jg
rolb
xor
sub
and
pop
cmp
incl
mov
mov
add
mov
rolb
cmp
in
dec
shrl
cmc
jae
jecxz
addr16
in
mov
dec
addr16
pop
sub
add
jae
dec
and
unpckhps
mov
cs
data16
xor
aaa
pop
mov
dec
fcmovnbe
arpl
sbb
int3
mov
icebp
push
mov
pop
adcl
sarb
dec
mov
cmp
inc
push
sbb
rcll
mov
sub
xor
arpl
pop
insb
daa
insl
out
data16
inc
call
cmpsb
mov
mov
sbb
inc
lods
mov
cmp
testb
out
inc
pushf
pusha
test
inc
enter
add
push
inc
andb
fsub
roll
adc
clc
es
fists
xor
in
fdivp
inc
loop
lcall
addr16
adc
ss
push
mov
js
popl
mov
jecxz
fistpll
fcoms
popf
iret
xchg
or
dec
xchg
fldt
arpl
jne
or
xchg
xchg
adc
dec
dec
shlb
out
fldt
xchg
in
and
sbb
fdivrl
dec
stos
mov
scas
ss
xlat
ljmp
ljmp
jae
ljmp
int3
cmp
arpl
or
push
or
sbb
fistl
imul
adc
out
sbb
push
push
xchg
push
sbb
mov
jae
aad
repnz
shrl
xor
lea
sbb
xchg
in
arpl
mov
and
hlt
pop
pop
mov
push
sti
mov
je
mov
adc
bound
fidivrl
pop
rorl
aas
outsb
stc
rolb
popf
cmp
mov
lea
jge
mov
sbbl
bound
jge
cmc
out
jb
xchg
xchg
and
sub
sti
or
xor
ds
divl
pop
jnp
dec
leave
mov
push
jb
cmp
fwait
dec
scas
in
sbb
jg
adc
adc
test
lret
jnp
and
dec
sub
cmp
pop
xor
add
dec
adc
loope
jl
push
xor
out
fwait
popf
mov
dec
push
fwait
cld
imul
jne
sub
push
pop
pop
mov
lcall
enter
pop
push
sbb
push
mov
test
mov
int
sbb
shll
xlat
mov
xor
lea
pusha
lahf
sub
pop
ret
pop
pop
add
pop
cmpsb
cwtl
mov
rcrl
dec
out
push
dec
andb
or
push
sti
mov
daa
pop
or
push
xor
and
jb
mov
adcb
in
cmpb
adc
mov
dec
repnz
arpl
cmp
pop
or
adc
rcl
xchg
lcall
adc
sbb
cmp
popa
shlb
nop
and
lods
jns
js
data16
lods
xchg
fimuls
jns
adc
lret
dec
inc
dec
sbb
inc
inc
cmp
jo
rolb
sahf
cli
les
adc
push
int
into
dec
fadds
icebp
test
lret
imulb
test
in
lcall
mov
test
mov
push
adc
inc
pushf
adc
orb
lret
int
or
mov
inc
and
test
fldcw
lahf
mov
fneni(8087
lcall
adcb
inc
icebp
xchg
mov
cltd
mov
ja
iret
daa
pop
and
adc
fdivs
dec
pop
loop
mov
mov
imul
cmpsl
imul
cmp
insb
ret
enter
jb
in
add
sub
outsl
js
xchg
les
sbb
xchg
rorb
jmp
orb
jae
push
outsb
and
fnstsw
mov
push
pop
imul
cmp
mov
ja
cmp
dec
cmp
nop
fwait
icebp
jns
insb
loopne
and
les
xchg
and
insb
inc
mov
mov
and
sbbb
mov
dec
or
cmp
push
fsts
push
test
xchg
sbb
sub
ja
je
ljmp
enter
push
mov
sbb
out
jb
and
push
mov
hlt
or
cmp
adcl
push
sbb
pop
push
ficompl
jns
je
fcoms
in
ja
enter
push
scas
pusha
movsl
pop
das
je
add
cmp
jo
and
adc
push
xor
ficompl
dec
imul
mov
dec
test
shll
inc
and
loop
or
std
mov
sbb
dec
or
inc
xchg
imul
push
in
dec
pop
aaa
or
mov
and
cmpsb
mov
xchg
outsb
mov
adc
adc
sub
cmp
mov
jl
add
pop
fwait
int
xchg
add
cld
lret
sbb
stos
iret
dec
xchg
add
stos
inc
and
loope
mov
cmpsb
pop
sub
mov
adcl
insl
outsl
hlt
and
gs
ja
fsubl
cmc
shlb
hlt
mov
lret
dec
daa
cs
sub
es
movsb
in
repz
sub
jecxz
sti
dec
mov
push
pop
aad
mov
xchg
pop
hlt
pop
push
sahf
cmpsb
test
js
push
or
inc
stc
iret
fidivl
repnz
imul
popa
test
cs
cmp
outsb
lea
add
pop
hlt
fdivrp
call
pop
sti
add
hlt
ja
lcall
fmull
mov
push
cmp
fldt
repz
dec
mov
dec
xor
and
mov
mov
fdivrp
adc
lret
ret
sub
jmp
or
jmp
inc
rolb
xchg
xchg
fs
adc
in
jb
adc
out
scas
push
cmpb
push
ja
cltd
fstl
mov
fisubs
mov
jne
mov
inc
xchg
daa
push
int3
pop
lcall
ljmp
mov
ja
cltd
xchg
mov
cwtl
movsb
je
xchg
test
bound
dec
and
cwtl
jb
push
pop
push
leave
sbb
les
xorb
mov
jae
sbb
outsl
or
cmp
fsubr
stos
jae
push
icebp
out
cld
sti
ret
cmp
cld
push
cli
pop
fdivrl
jecxz
imul
and
jp
xchg
loop
push
and
sub
fdivr
mov
push
xorb
and
mov
popa
movsb
daa
stos
mov
and
pop
xchg
popf
xchg
mov
enter
sar
mov
inc
out
pop
adc
lods
and
subl
lods
mov
stos
jmp
bound
loope
scas
lret
push
ss
inc
fimuls
push
push
jmp
and
int
sbb
pop
cmp
push
sbb
jbe
lea
jl
ret
es
or
mov
rorl
lret
ret
push
push
jge
daa
dec
xor
popf
mov
mov
int
testl
xchg
aam
and
cmp
xchg
lock
aas
lahf
outsl
hlt
arpl
fimuls
push
jbe
mov
dec
sub
into
ss
cmp
insl
mov
pusha
mov
mov
nop
mov
mov
pop
sahf
imul
shll
adc
cltd
dec
xor
adc
popf
xchg
pop
inc
pop
inc
jb
sbb
mov
xor
add
imul
cltd
jg
xchg
jns
pop
sahf
dec
mov
sti
and
fistl
cmpsl
push
out
sub
aas
jecxz
sahf
mov
push
or
add
xor
mov
inc
popf
test
rolb
clc
sub
sub
cmpl
dec
fbstp
jne
pop
movsl
push
cwtl
pop
fidivrs
jg
mov
mov
add
add
jbe
cli
sbb
and
das
test
cld
sub
std
adc
cld
rcl
aad
xor
jae
nop
and
rcll
roll
cmpl
divb
push
sub
push
inc
arpl
scas
sarl
imul
jge
pushf
jbe
lahf
add
mov
dec
jbe
dec
into
push
adc
pop
mov
rclb
mov
jae
out
movsl
or
adc
ss
sub
call
push
pop
push
shl
loop
xchg
repz
push
inc
jno
push
xor
mov
repz
lcall
ss
and
cwtl
fadds
frstor
xchg
mov
jecxz
pop
mov
or
js
dec
popaw
push
mov
cwtl
fiadds
xorl
das
push
clc
test
inc
or
movl
dec
adc
cmpsl
mov
push
div
xor
lods
fistpl
and
insb
push
insl
les
jle
mov
push
ljmp
fldt
orl
push
test
negb
loopne
push
addr16
sbb
xchg
jne
aas
sub
pop
mulb
mov
fwait
arpl
cli
arpl
dec
sub
dec
xor
mov
add
ret
add
jne
int3
rorl
addr16
call
mov
in
imul
out
popa
cmp
pop
fdiv
pop
in
jns
push
insb
dec
pop
shlb
mov
xor
addb
mov
movsb
daa
insl
lcall
outsb
daa
add
int3
stc
sub
flds
dec
out
push
cmp
add
inc
xchg
sbb
jnp
pushl
xor
imul
cmpsb
jbe
pop
iret
adc
mov
cvtdq2ps
sbbb
mov
jl
mov
mov
and
jae
mov
fwait
inc
movsl
dec
mov
jg
jns
xor
loopne
mov
mov
out
inc
cmp
shll
rol
push
ja
scas
or
out
cwtl
jg
xchg
cmpsb
push
mov
pop
push
icebp
mov
add
lods
adc
pushf
mov
mov
lcall
jmp
inc
push
sti
lods
mov
add
mov
mov
xor
sub
jge
sbb
sub
sub
cwtl
dec
jne
mov
and
xchg
jp
je
and
ds
push
mov
daa
addr16
sub
mov
movsb
or
dec
loop
xchg
push
jle
adc
sbb
les
adc
ja
scas
test
xchg
cmp
lock
test
sarl
xchg
in
test
sarl
jp
clc
ljmp
scas
jmp
mov
pop
mov
xor
lret
stc
int3
push
xchg
adc
jl
jbe
adc
int
shrb
out
xchg
mov
aam
xchg
aad
in
xchg
xchg
pop
jb
lahf
cld
add
mov
push
lods
jns
mov
pop
sub
test
mov
in
mov
hlt
or
sbb
frstor
xchg
cwtl
mov
pop
add
pop
jge
outsl
notb
lock
cmp
cmp
loopne
fsts
xlat
inc
mov
xchg
imul
inc
mov
or
pop
add
mov
add
mov
mov
inc
and
adc
and
mov
push
or
dec
dec
pop
sbb
mov
mov
rclb
jmp
mov
dec
pusha
push
sub
ja
xchg
add
jp
jg
loopne
nop
stos
jae
lahf
cmp
testl
leave
add
cmp
sbb
pop
jo
sbb
out
inc
sahf
sahf
js
hlt
dec
arpl
ror
cs
and
imul
pop
outsl
jo
jne
inc
in
dec
fcompl
or
ret
jnp
repz
xor
rorb
xor
inc
jmp
imul
lods
jecxz
push
rcll
shl
push
loope
mov
mov
push
out
rorb
jmp
shll
sbbl
xchg
shlb
jo
jge
pop
sub
sbb
inc
jg
scas
arpl
imul
in
or
pop
lret
mov
shlb
out
or
hlt
aad
int3
push
fstps
and
insb
lea
push
push
jne
outsb
sub
push
inc
push
add
sbb
cmpl
and
test
sti
sbb
in
jbe
ljmp
test
in
add
inc
xor
int3
mov
mov
leave
xor
mov
lahf
and
pop
sbb
ds
rorb
mov
ret
icebp
out
pop
fs
push
dec
jbe
leave
xor
clc
jnp
add
mov
repz
mov
rorb
or
add
mov
push
mov
xlat
je
and
mov
rcrl
xchg
xchg
sbb
mov
push
jnp
pop
and
mov
daa
test
mov
lds
ret
pop
test
mov
mov
sub
imul
adc
add
jg
or
mov
sbb
cmp
jnp
iret
push
push
mov
dec
repnz
dec
push
jbe
xor
push
movsl
jbe
das
cs
and
pop
sbb
testl
popa
fstpt
mov
testl
insl
lcall
cmp
inc
popa
cmpsb
test
jns
out
mov
loop
push
xchg
xor
int3
xchg
cmp
out
xchg
sbb
adc
jae
inc
inc
push
dec
or
movsl
pop
jg
stc
int
pop
cmp
xchg
xchg
mov
xchg
mov
movsb
mov
test
repz
and
cltd
pop
or
loopne
fnsave
ret
pushf
icebp
push
aaa
pop
push
inc
sub
sarb
es
inc
sub
and
jo
jbe
xor
dec
jl
es
rcll
xor
push
lods
fidivs
sbb
adc
insl
mov
fdivs
pushf
pop
jmp
orb
mov
sbb
pushf
out
pop
dec
stc
dec
arpl
xchg
adc
inc
stos
aas
jg
jge
pop
adc
inc
fnstcw
cmp
pop
fwait
pop
aam
repnz
flds
js
imul
and
inc
push
mov
sbb
jno
adc
pop
test
test
lret
inc
cmp
cmp
pop
and
out
aam
lods
cltd
ss
sbb
data16
jae
sbb
cli
pop
jge
jb
ja
lods
add
push
outsb
push
lods
sub
aam
lds
rcll
inc
loopne
stos
dec
orb
scas
jp
je
int3
and
and
xor
arpl
mov
push
testb
pushf
adc
inc
mov
das
sub
shl
mov
mov
clc
ret
nop
les
add
test
xchg
int
xor
cmpsl
pop
inc
je
or
mov
fistpl
xor
repnz
ret
shll
ljmp
pop
sahf
ret
xchg
xor
jae
push
jb
and
bound
xorl
pop
xorl
adc
or
das
dec
add
fcmovnbe
jle
sti
add
in
push
or
mov
mov
imul
mov
rclb
jp
insb
notb
jmp
push
mul
cmpl
push
cmpsl
out
add
cld
inc
xor
pop
scas
cli
fists
shrl
sbb
rcll
mov
or
mov
imul
and
loopne
ret
xchg
push
orb
bound
bound
inc
sbbb
mov
xlat
out
lahf
dec
pop
xchg
pop
xorb
test
in
xor
xor
push
adc
std
aad
mov
add
and
cmp
fnstsw
adc
fcmovb
lahf
cmp
lret
fistpll
loope
in
adcl
jmp
incb
jbe
xchg
push
repz
outsb
push
mov
cmp
lret
lret
xor
dec
stc
iret
push
mov
stos
test
dec
add
add
sahf
sbb
orps
adc
and
fs
jns
xor
cmp
rcrb
xor
aad
inc
add
pop
jmp
popf
in
xor
loop
jns
push
or
sub
lahf
fcoms
rcrb
inc
shlb
inc
lahf
loope
jp
dec
sbb
cmp
outsl
fst
daa
dec
pop
sar
jg
pop
in
adc
pop
test
adc
cltd
mov
aad
xchg
iret
mov
and
sub
mov
imul
insb
inc
nop
lods
data16
pop
jb
out
add
lea
inc
fsubrs
sub
mov
maxps
sbb
cwtl
cwtl
push
fst
decb
stos
icebp
sub
xor
test
sbb
inc
lret
cs
push
push
xchg
roll
pop
ja
or
test
sub
xor
fsubs
dec
lea
adc
cmpsb
test
repnz
repz
xor
mov
jp
popl
pop
mov
mov
adc
fmuls
mov
mov
lahf
add
mul
lret
pop
jmp
in
pop
push
out
push
pop
adc
imul
in
xchg
fldl
scas
sub
clc
fisttps
push
lret
ja
cmc
mov
jno
cs
mov
pop
hlt
and
or
and
push
adc
xchg
out
jno
repz
push
outsb
dec
jmp
push
into
js
imul
test
scas
in
call
add
mov
sbb
cmp
jb
mov
push
popa
push
into
pop
test
mov
push
pushf
repnz
fistl
dec
jo
jl
into
push
pop
or
insb
pop
add
mov
cmp
mov
xchg
pop
mov
test
iret
in
and
test
aad
push
inc
les
inc
gs
jle
push
das
mov
cmpsb
xchg
rcr
xor
jo
add
jp
xchg
enter
popa
xchg
divb
or
pop
and
aad
xchg
divl
bound
pushl
pop
stos
cmp
lock
jno
in
aas
lret
dec
mov
xchg
push
or
inc
xchg
mov
loope
jg
ret
xchg
sbb
mov
jo
cmp
pop
mov
mov
add
daa
outsl
std
repz
pop
xor
std
lods
jp
lock
sub
sub
fildll
int3
cmp
pop
pusha
mov
and
mov
sub
lahf
sub
lds
xor
push
xchg
out
cmp
fmulp
pusha
pop
outsl
cld
and
or
mov
aaa
jge
das
daa
je
cmp
push
mov
int
enter
jbe
outsl
mov
pusha
into
push
je
clc
inc
test
xor
sub
xchg
clc
push
scas
mov
test
cmpsl
mov
mov
xor
fwait
popf
xchg
jle
call
push
popf
sub
inc
jbe
loopne
repz
imul
push
push
xlat
into
out
pop
movsb
mov
vpand
pushf
dec
adc
dec
adc
push
dec
in
hlt
pushf
fidivl
add
or
sub
xor
sbb
pop
mov
addr16
imul
fnsave
xchg
repz
inc
dec
iret
jecxz
inc
or
aad
adc
cmp
fdivrl
push
repnz
jl
icebp
imul
jmp
mov
popa
test
pop
and
je
mov
outsl
jo
insb
scas
push
cmc
pop
scas
in
outsl
test
dec
add
jl
adc
leave
push
iret
lcall
and
xor
push
pop
mov
ret
test
add
lea
cmp
out
jns
sbb
sub
je
lahf
lret
nop
cmp
sbb
xlat
jmp
jo
xor
gs
push
dec
popa
in
jns
add
iret
add
jnp
das
emms
std
dec
sbbl
std
push
cltd
pop
out
hlt
pop
cmp
pusha
iret
inc
cmp
daa
add
cmp
mov
or
test
mov
data16
push
test
xor
adc
push
adcl
cmp
call
aas
in
jecxz
clc
int
cmp
push
ss
ret
je
clc
addl
scas
ret
rcrb
stos
sub
fldl
test
or
jo
mov
pop
inc
gs
mov
and
inc
fcoms
mov
xor
scas
inc
loopne
into
xor
lret
sti
fmuls
hlt
faddl
in
test
mov
lock
xor
leave
stos
push
inc
fs
sbb
outsb
adc
xchg
jno
fdivr
adc
movsl
or
cli
inc
mov
scas
add
in
add
cmp
lahf
shld
sti
test
adc
mov
sbb
lock
dec
pop
andl
pop
test
xchg
xchg
push
imul
rclb
sbb
sbb
rclb
or
aas
aas
mov
adc
and
cmp
jmp
cmpb
inc
fsubrs
inc
xlat
mov
enter
sbbl
repnz
sub
mov
iret
imul
mov
push
pop
jne
test
test
icebp
jbe
xor
insb
out
imul
xchg
push
inc
sbb
pop
cmp
popf
push
and
or
xorb
and
lds
add
ret
insb
int
mov
jecxz
mov
add
jge
ss
das
inc
das
ret
in
das
mov
loop
cwtl
lcall
push
ja
dec
xor
adc
jb
push
dec
jno
mov
lret
adc
cli
cmp
cmp
aam
jle
pop
std
in
sbb
cmp
dec
adc
sbb
or
gs
stos
test
in
iret
xchg
add
xor
sub
pop
lock
fst
pop
mov
cld
or
push
ljmp
cld
mov
jle
ret
push
mov
pusha
fadd
pop
jmp
dec
mov
pop
cld
mov
add
stos
arpl
out
or
jae
mov
mov
inc
sub
cmp
mov
cmpsl
mull
lcall
push
in
lea
sti
adc
xchg
out
test
mov
scas
jg
pop
clc
jns
and
fcoms
popf
xlat
add
push
and
and
stos
mov
pop
lcall
jbe
icebp
push
cld
inc
xor
aas
mov
push
in
dec
fcomp
push
and
jmp
clc
fistl
lods
push
mov
into
pop
push
jle
js
dec
fiaddl
in
lcall
dec
xlat
lock
sbbb
ja
push
je
jno
jbe
push
fwait
or
cmp
push
push
jg
mov
stc
cwtl
shl
mov
push
jbe
cmp
test
out
call
js
insl
into
insb
jnp
test
and
jmp
arpl
loop
jge
dec
les
fmulp
ss
lods
add
iret
insl
dec
pop
repz
sbb
gs
mov
and
sub
cmpsb
roll
scas
mov
sub
lods
movsl
aam
movsl
adc
cmc
shll
jp
push
ficomps
popf
lock
cld
cmpsl
insl
adc
cmpsb
dec
enter
mov
push
loope
xchg
pop
lods
xor
sub
xor
xchg
push
pop
xor
or
sbb
cmp
imul
mov
push
or
push
push
or
movsl
lods
xchg
dec
popf
in
mov
fcoms
mov
std
push
pusha
mov
in
repz
call
in
ror
mov
jno
sti
cmp
mov
xchg
outsl
add
jns
fs
fistpl
inc
ljmp
gs
negl
adc
cmc
push
sbb
aam
sbb
add
push
pushf
dec
sti
or
hlt
loop
std
push
mov
xchg
jb
in
cmc
test
imul
test
sub
dec
fdivr
xchg
mov
and
stos
lret
leave
cmp
jns
xchg
es
xchg
movsl
int
lret
scas
mov
ror
push
test
divl
sti
inc
outsb
in
adc
cmp
sahf
xchg
pop
cmp
rcrb
sbb
mov
sti
sti
test
sub
pop
or
dec
xor
dec
mov
cld
adc
add
hlt
adc
in
push
lret
or
push
or
xchg
push
sbb
mov
stos
stc
popf
fwait
mov
fisubl
std
daa
xchg
xchg
mov
jl
pop
mov
ds
into
sbb
pop
loop
sub
and
fsubl
decb
adc
push
sub
sub
inc
inc
inc
push
push
clc
mov
rcrl
cmpsb
or
mov
sbb
or
fwait
test
loop
aas
pop
clc
xchg
popl
fdivr
aam
les
and
fists
pop
divl
in
aas
outsl
fstp
test
adc
and
insb
in
es
fisttpl
push
xchg
das
dec
sti
ja
fdiv
and
test
pop
insl
and
mov
add
out
push
push
out
adc
jl
dec
andl
es
fisttpll
xchg
cmp
adc
jecxz
mov
fisubrs
dec
sbb
lea
mov
ss
jno
jnp
clc
jle
fldt
lods
adc
pop
dec
xor
mov
icebp
xchg
jle
mov
pxor
sub
pop
add
mov
dec
pmulhw
addr16
lock
lods
xchg
and
jmp
fcmovnb
addr16
xchg
je
mov
inc
mov
mov
xchg
add
sub
add
outsl
ret
mov
jbe
cli
push
pop
test
rorl
ret
loope
cs
xchg
jne
add
aaa
pop
add
imul
div
push
sbb
xor
pop
fistpl
jbe
xor
mov
rcrl
push
out
mov
shrb
push
jp
pop
icebp
push
and
lds
mov
dec
pop
or
lea
outsl
leave
inc
mov
cmpsb
mov
or
inc
sub
mov
js
cld
push
icebp
iret
xchg
pop
push
mov
jecxz
add
subb
arpl
lods
push
or
or
adc
call
data16
imul
dec
int
ficomps
cld
vpcmpgtw
imulb
pop
in
mov
mov
je
pusha
lock
mov
js
inc
and
pop
jno
mov
imul
aas
inc
scas
insb
adc
xor
stos
jo
inc
lds
repnz
cltd
scas
add
fnstenv
in
pop
mov
cli
and
in
sub
jne
aaa
jge
pop
mov
fldcw
addl
mov
mov
mov
in
sbb
jbe
sbb
push
jbe
dec
push
inc
mov
push
push
ja
mov
fucom
out
fcompl
push
daa
sub
out
hlt
mov
push
scas
and
cmpsl
movsl
ret
faddl
add
aaa
jge
pushf
mov
push
jnp
pop
in
idivl
loopne
ds
mov
push
jno
rcrb
cmp
idivb
aaa
test
out
dec
vmovupd
dec
sub
int3
add
call
scas
outsb
shll
push
out
test
inc
mov
std
sysret
aas
repnz
xchg
loope
jo
push
push
mov
lret
or
push
cs
cmp
stos
fistl
push
fcompl
sahf
or
xorl
in
fsubrs
insb
sbb
das
ror
push
insb
lea
xchg
dec
cwtl
or
mov
adc
lock
das
mov
fistpll
pop
bound
adc
fstpl
mov
push
cmp
xchg
dec
mov
dec
fs
enter
mul
jb
dec
das
jo
inc
xlat
inc
adc
iret
imul
dec
dec
xor
and
jb
xor
inc
push
outsb
fidivl
mov
test
jecxz
arpl
stos
mov
gs
mov
inc
les
jl
mov
push
cmp
movsb
out
sbb
test
test
jp
cmp
or
aam
fcmovnb
mov
mov
ja
stc
push
or
or
dec
add
daa
int
inc
out
nop
aad
xchg
pop
loope
xor
adcl
aam
mov
ret
push
ljmp
add
fs
call
je
ljmp
push
push
test
ljmp
xchg
xchg
int
testb
aaa
bndldx
stos
jne
repnz
mov
push
or
mov
in
jo
insl
adc
or
mov
pop
cmc
push
shll
xor
adc
rorl
pop
stc
jno
dec
leave
sub
cmc
loop
outsl
xchg
sub
icebp
jae
repz
cmp
and
loop
call
xor
data16
ljmp
sub
cmpsl
mov
mov
imul
sub
dec
adc
dec
out
sub
aam
lods
push
dec
ffreep
and
inc
out
iret
xlat
push
jp
fs
mov
pop
repz
xchg
xor
xchg
aam
jns
push
iret
adc
dec
stos
int3
jno
xchg
lahf
cmp
and
sarb
jns
inc
xchg
xorl
xor
subl
rcll
pusha
movsl
sbb
add
fisubl
jnp
data16
fidivrl
cmp
dec
push
fsubrs
sub
orl
lcall
jp
lret
pop
inc
pop
das
rolb
mov
inc
push
out
inc
jmp
arpl
jns
xchg
sbb
jnp
rol
cmpb
nop
shlb
xchg
arpl
aad
fstpl
repnz
mov
jg
adc
adc
pop
mov
jp
or
or
cmpl
pop
pop
call
dec
inc
stos
cmp
mov
adc
dec
pop
shlb
sbb
sarl
mov
sti
call
and
nop
in
push
and
and
movsl
iret
sahf
or
jno
xlat
scas
push
test
sub
fimull
mov
es
pop
shr
fildl
adc
xchg
scas
jnp
push
cld
js
xchg
cli
jg
cmp
popf
mov
das
call
pop
xor
or
push
ret
fs
stc
jp
cmp
jg
ss
pop
rcrl
mov
sbb
sbb
xor
cmc
out
mov
je
pop
jb
dec
gs
data16
fmull
xlat
ss
loopne
subb
adc
pop
xchg
adc
push
outsb
outsl
adc
or
aad
inc
test
ljmp
inc
rcl
call
mov
pop
sub
hlt
jg
mov
ret
jecxz
ljmp
or
out
jge
icebp
lods
dec
insb
or
push
fstl
cld
cmp
test
aas
mov
cmp
ds
mov
ss
out
jb
cmc
push
xchg
sbb
push
add
or
add
pop
mov
pop
and
insb
imul
mov
xchg
pop
out
addr16
cmpsl
cmpsl
lods
leave
adc
jbe
pop
stc
or
call
xchg
popa
inc
add
sarl
shlb
test
loop
cmp
jle
push
sbb
cmp
stos
pushf
sti
ljmp
adc
imull
xchg
dec
negb
adc
ret
cli
sahf
or
jb
inc
dec
gs
in
aaa
aam
mov
sub
adc
mov
mov
hlt
aad
inc
mov
shll
outsb
rcr
jge
cmpsl
fstpt
cmpb
cmp
push
mov
cld
ds
mov
test
xchg
dec
pop
lods
fistpl
push
sub
xchg
int
test
jecxz
sarl
inc
mov
or
and
sub
dec
sbb
pop
les
jmp
sti
test
into
mov
ret
xor
jne
scas
xchg
cltd
push
les
cmp
test
pop
in
push
ret
xlat
addr16
or
repz
mov
insb
add
mov
call
aaa
mov
push
sbb
int
sti
es
stos
sbb
mov
sub
loop
and
sub
jl
neg
inc
inc
pop
pop
inc
adc
in
insb
add
mov
ret
pusha
repnz
dec
cwtl
lock
js
add
xlat
or
iret
sbbl
sbb
xchg
adc
cmpsb
out
jnp
das
clc
or
inc
dec
sbb
cs
push
bound
or
cmp
sub
out
outsb
add
sub
repz
scas
sbbb
push
dec
or
pop
inc
clc
jecxz
mov
mov
lcall
jae
jno
pop
xor
mov
test
js
fistpl
sbb
gs
imul
jecxz
add
outsl
dec
into
mov
pusha
push
push
and
sbb
lret
sbb
jbe
mov
sbb
ret
sbb
cltd
mov
cltd
adc
push
add
and
push
cmp
lret
jl
dec
pop
lahf
cmpsb
dec
sub
or
jecxz
loope
stos
jno
push
pop
arpl
testl
adc
cli
xor
sub
add
data16
mov
dec
out
pop
mov
add
flds
xor
add
movsl
test
push
push
xchg
jecxz
pop
movsl
imul
sahf
test
imul
test
test
mov
into
pop
fsubl
push
mov
pop
mov
dec
stos
test
sbb
pop
sub
lret
jnp
dec
cmpsl
push
fmul
shrb
das
push
push
lea
and
popf
outsl
aad
sbb
dec
pop
hlt
pop
sti
popf
push
sub
jb
mov
xlat
xchg
sbbl
pop
inc
pop
xchg
cld
scas
insb
loopne
in
rcll
iret
pop
push
test
xor
enter
pop
pop
jp
sub
lret
xchg
ficoml
sub
aad
lahf
pop
shrl
arpl
sbb
imull
xor
insb
orl
and
and
repz
ja
bound
add
adc
scas
dec
xchg
pop
andb
mov
xlat
add
pop
sub
enter
sub
iret
adc
adc
inc
and
adc
mov
popa
dec
cltd
sub
cltd
inc
cld
lds
gs
jl
aaa
mov
sti
or
and
pop
sbb
inc
dec
lea
xor
roll
pop
cmp
inc
in
addr16
rolb
andb
dec
cmp
outsb
shrl
fcomp
test
jns
push
pop
mov
cs
xchg
jbe
mov
add
stos
xchg
lods
dec
cmp
or
movsb
dec
insl
xchg
push
vmovhps
inc
stos
mov
jg
xchg
daa
ljmp
das
and
in
mov
cmp
sub
and
fcoml
jo
mov
das
cwtl
popf
xchg
xor
test
inc
mov
jle
shll
mov
bound
push
out
add
jno
sbb
mov
mov
and
inc
and
pusha
aas
jne
std
sbb
pop
call
push
test
cmp
add
and
lahf
fistl
push
aas
sub
or
mov
sbb
int3
mov
sbb
and
jmp
mov
sbb
or
repz
adc
cmp
or
sbb
fistpll
mov
jb
cmp
push
dec
mov
movaps
or
in
and
mov
xor
repz
cwtl
fsub
inc
stos
arpl
pop
dec
fldl
enter
ss
int
mov
les
les
cmp
pop
push
dec
push
dec
sbbb
mov
pop
cltd
xor
mov
pop
xchg
adc
xor
inc
aad
or
mov
lods
xor
add
pop
negb
stos
call
std
insb
cltd
xor
xchg
pusha
jmp
roll
int
push
mov
inc
add
fsubrs
or
test
cmpsb
int3
mov
idivb
push
cli
int
jle
pop
inc
mov
jbe
mov
in
mov
pop
cli
and
push
addr16
push
pop
pop
lods
sarb
push
out
sub
out
das
frstor
imul
movsl
mov
lods
inc
imul
jo
ja
adc
fsubp
sub
xchg
jmp
bound
lock
cs
mov
sbbb
iret
loope
gs
pop
iret
clc
jmp
adc
icebp
mov
jns
sbb
add
aaa
jo
xchg
jl
scas
ret
je
movsb
incb
add
mov
mov
scas
repz
jp
fbld
shrb
mov
cmp
dec
jb
in
lret
mov
shrb
imull
movsb
mov
pop
mov
mulb
jb
sub
add
lahf
or
loope
hlt
mov
popf
lcall
out
sbb
xchg
cmpsb
mov
jo
xchg
in
add
push
mov
in
add
sub
jl
jle
add
orl
cmp
sbb
push
and
subb
add
sub
test
pop
pop
push
mov
inc
xchg
push
sub
in
stos
sub
mov
shrl
dec
mov
mov
push
xor
mov
es
je
jg
out
lret
cld
add
sbb
lods
mov
add
adc
or
mov
scas
addr16
dec
sbb
sub
push
xor
sbb
pop
jb
inc
bound
int
outsb
mov
repnz
hlt
push
sbb
pop
push
aad
nop
cmpl
dec
inc
push
sbb
pop
in
cmpsl
lock
popf
into
pop
das
jecxz
dec
mov
out
repnz
xchg
xorb
pop
push
popa
insl
std
and
sbb
lret
fcoml
loope
jo
clc
loop
pop
mov
mov
cld
scas
or
pop
mov
gs
mov
mov
ret
loopne
and
pop
xchg
fisttpl
pop
push
insb
cltd
cltd
movsl
sub
movsb
clc
rol
jb
mov
das
stos
push
cli
xchg
daa
push
enter
lcall
lret
fs
loopne,pn
mov
mov
sbb
sub
aam
mov
jecxz
rorl
inc
cmp
pop
fisttpl
mov
jge
shrl
push
inc
outsl
stc
fwait
add
cmp
jae
pop
cltd
inc
cs
adc
push
sub
aam
jo
jge
ficomps
mov
lcall
jb
cmp
add
rcrb
mov
std
add
js
ds
cmpsl
lock
jl
subb
sub
jo
pop
push
andb
jg
inc
mov
fistl
jb
fs
iret
bnd
outsb
stos
jg
adc
mov
pop
hlt
cmp
or
jmp
xlat
dec
adcb
xor
xor
int
cmp
xchg
inc
outsl
repnz
cmp
and
sub
jbe
mov
add
jmp
ds
std
pop
xlat
out
stos
mov
or
mov
in
push
mov
jp
xor
adc
xorb
push
fs
imul
daa
cmpsb
dec
and
xchg
or
lods
lods
into
gs
push
fwait
ljmp
cmpsl
je
scas
movsl
cltd
outsb
jno
jle
popf
xchg
insl
in
jecxz
push
repz
adc
fs
aad
push
out
das
sbb
inc
aas
xchg
sbb
cmp
add
xor
pop
imul
and
sub
mov
dec
stc
jnp
test
jbe
adc
add
loope
jp
fdivrs
sub
or
icebp
int
lods
xchg
fnstenv
mull
in
jbe
imul
arpl
xorb
pop
imul
pop
xchg
stos
adc
subl
mov
pop
cs
xchg
std
fdivr
pop
push
in
sti
ret
fadd
jb
mov
shl
inc
into
jne
push
xorl
and
lock
aaa
or
or
test
das
rcr
and
scas
pop
add
jg
loop
xchg
out
add
enter
test
xor
mov
fldcw
stc
sub
aaa
mov
xchg
mov
incl
je
mulb
adc
pop
daa
notl
int3
pop
pop
adc
and
in
xchg
or
cmc
mov
negb
insl
adc
lahf
cmp
mov
sbb
aas
sub
idivl
adc
hlt
arpl
test
cld
addl
jno
inc
xchg
pop
std
out
dec
loopne
dec
mov
test
pusha
cmpsl
in
pop
xchg
jle
sub
std
mov
jo
insb
fisttpll
jno
int
sub
stc
mov
push
daa
adc
decb
pop
add
out
add
fldcw
adc
and
scas
fsts
mov
pushf
cmpl
lahf
aaa
xlat
icebp
adc
cmp
inc
neg
lods
mov
push
jne
ss
xchg
jmp
jp
fs
dec
in
jne
sub
lcall
mov
shll
psrlq
testb
push
xchg
inc
movsl
inc
bound
push
and
loop
jmp
jnp
push
or
les
leave
rorb
xor
jmp
lret
popl
repz
mov
shrl
int3
lock
mov
fcoml
push
inc
test
or
shl
daa
insl
or
and
sub
push
or
scas
sub
rcrl
inc
jno
es
sbb
sbb
jnp
xor
push
dec
sub
mov
stos
mov
movsl
push
les
mov
jg
adc
jmp
leave
enter
mov
sbb
sub
add
jbe
sbb
add
pop
hlt
and
push
cltd
or
aas
insb
je
insl
xchg
rcrl
insb
and
in
pop
dec
sbb
mov
movsl
jp
adc
scas
loope
xor
iret
xlat
cmp
scas
int3
roll
mov
scas
mov
fwait
mov
cmpsb
push
pop
dec
xchg
or
or
clc
jge
kandnb
shlb
xchg
dec
das
arpl
test
jle
pop
in
pop
addr16
xor
push
cmp
loop
jo
add
mov
add
xor
enter
inc
mov
out
jno
cmp
jb
cmp
xchg
test
out
push
pop
cmp
jns
mov
sub
andl
test
fcmovne
inc
sub
jl
cli
xchg
inc
mov
lods
addr16
js
jb
sbb
pushf
push
adc
mov
dec
sar
clc
and
cmp
cmp
xchg
pop
pop
gs
insl
xor
hlt
shr
in
sahf
push
jns
stos
arpl
push
add
push
lret
sub
xchg
clc
in
xchg
adc
pop
jno
mov
ret
mov
xchg
adc
popf
test
sub
pop
pop
and
dec
add
test
pushf
faddl
inc
sbb
movsl
pop
adc
mov
imul
or
iret
sbb
lea
xchg
je
idivl
sbb
pop
sub
sbb
cmp
jg
scas
mov
fstpt
mov
fwait
xchg
xchg
xor
pop
adc
enter
lahf
mov
pop
mov
clc
subl
mov
in
xchg
addr16
xchg
add
xor
jp
sbb
ret
xchg
jecxz
bsf
inc
pop
stos
popa
inc
xor
jmp
lcall
inc
loop
out
pushf
or
sbb
nop
cmpb
das
mov
mov
out
pop
xlat
xor
popf
mov
cmpb
jb
mov
ja
or
sub
cmp
or
fildll
or
adc
pop
or
mov
scas
packssdw
xchg
outsl
aam
fdivs
scas
mov
jnp
movsl
mov
filds
or
scas
xor
cmp
stc
ror
pop
push
sub
int3
scas
inc
test
sbb
jle
xchg
not
pop
fcmovu
adc
in
pop
push
enter
push
adc
cwtl
mov
test
cmp
pusha
fimull
xchg
scas
cmpsl
sarl
out
aad
mov
test
add
or
mov
inc
lods
sbb
iret
dec
jo
add
mov
rclb
inc
mov
mov
dec
or
lods
outsb
ljmp
scas
inc
mov
push
xchg
adc
popf
jns
out
fisubl
popa
push
mov
dec
and
iret
insb
jecxz
and
test
or
arpl
leave
add
cmp
sbbb
in
rcr
ljmp
cmp
mov
clc
push
stos
cmpsl
adc
inc
fwait
ja
fsqrt
jge
rcll
pop
push
cld
xor
push
sbb
repz
push
arpl
pop
add
pusha
loop
mov
mov
sub
imul
stos
mov
lcall
divb
inc
mov
nop
lods
jbe
pop
and
sbb
add
jo
scas
sub
test
cmp
xor
xorb
push
mov
aam
mov
loop
adc
sub
add
mov
jle
fidivl
iret
inc
pop
xor
inc
xchg
inc
and
cmc
dec
shll
pop
sub
stos
mov
stos
shll
adc
mov
sbb
mov
int3
mov
outsl
mov
out
add
mov
sub
mov
lock
inc
insl
sti
imul
nop
or
aam
gs
pop
fistl
mov
cli
mov
xor
push
call
test
dec
cld
mov
fcmovu
in
insb
bound
cli
jl
out
or
mov
xchg
mov
je
andl
push
pop
cmp
dec
aaa
test
sbb
add
insl
fidivrl
cwtl
addr16
or
lret
inc
jno
ds
pop
pop
and
filds
mov
and
xlat
mov
orl
xchg
jle
and
pop
jns
dec
dec
fstpt
cmp
push
lret
aam
cli
stos
lcall
xor
cmp
sub
xor
std
divb
fs
insl
aam
fyl2x
push
call
ret
jle
daa
ret
hlt
popf
mov
add
lahf
enter
mov
stos
dec
into
push
cld
jb
lds
es
jge
sub
xor
xor
in
jg
jnp
test
adc
cmc
pushf
add
mov
mov
jmp
fnstcw
fsubrl
mov
add
pusha
ljmp
addb
push
mov
lret
sbb
and
sub
sti
fsts
pxor
jne
test
sbb
or
ljmp
insl
pop
xor
repnz
iret
fisttpll
push
xor
test
jnp
fists
scas
shrl
adc
aaa
loope
int3
bound
test
adc
rep
sarl
movq
outsl
push
sbb
dec
lds
jb
out
in
sahf
sti
jp
pop
push
pop
mov
mov
out
ljmp
aad
lcall
push
inc
sti
aaa
leave
leave
je
fldl
mov
repnz
push
enter
inc
vpcmpgtq
mov
mov
jns
cmpsb
shlb
cmp
and
add
or
jbe
movb
pop
lea
cmpsb
sub
mov
or
mov
sbb
fwait
jne
outsl
idivb
data16
jb
mov
push
loopne
add
hlt
jl
inc
mov
xor
dec
jg
push
aaa
and
sti
movsb
enter
cmp
cmp
mov
push
movswl
cmpsl
push
xchg
adc
cmpsl
shll
xchg
add
inc
mov
in
dec
fdivp
fmull
lret
adc
sbb
fpatan
ss
push
sub
cltd
dec
or
movsb
sahf
xchg
jno
ret
lock
pop
adc
cmp
ficompl
push
cltd
xchg
jp
jp
cmpsl
dec
in
add
xchg
stc
push
add
test
cmc
das
or
mov
int3
out
pop
lcall
jecxz
xchg
jbe
push
out
jns
andb
and
sbb
in
dec
shll
mov
or
adcl
xchg
xor
or
xor
movsl
push
popf
pusha
lea
xor
rolb
mov
sub
xor
fbstp
out
je
mov
data16
lcall
lock
inc
mov
cwtl
loope
das
ljmp
es
mov
xchg
dec
ficoml
cmp
pop
cltd
jg
ffree
inc
repz
sar
cmpsl
add
push
std
push
push
xchg
mov
idivb
jle
fiadds
dec
pop
leave
subl
cmp
repz
sub
loop
jg
ret
sub
mov
adc
inc
xlat
in
shrl
push
in
sarb
push
and
push
nop
gs
fdivl
push
xor
movsl
xchg
repz
vfmadd132ss
xor
nop
fmuls
xor
stos
adc
jmp
ret
in
adc
lea
imul
add
xchg
mov
out
push
inc
sbb
jae
iret
cli
adc
cmp
mov
xor
xchg
icebp
pop
sub
inc
mov
loop
dec
popf
and
add
lcall
dec
dec
push
xchg
mov
add
lahf
out
sbb
xchg
scas
pop
pmaxub
cs
cmpb
cmpl
jnp
mov
add
in
push
int3
mov
je
pusha
movsl
mov
pop
mov
sbb
faddl
and
shrl
push
scas
inc
test
sub
mov
jne
sbb
or
dec
xchg
lea
stc
movl
inc
mov
mov
or
test
cmp
rcll
xorb
jl
mov
out
and
mov
outsl
rcll
pop
aas
imul
mov
cld
add
pop
sti
movsb
mov
xchg
dec
dec
pop
mov
xor
call
xchg
sahf
fsts
cs
push
push
jb
xor
inc
mov
sbb
inc
notl
push
out
inc
xor
jle
xor
flds
jo
add
out
mov
loopne
mov
xchg
lds
cmp
clc
push
jmp
push
or
in
cli
scas
adc
push
lds
hlt
rclb
or
xlat
filds
or
ja
in
sbb
inc
xchg
jmp
mov
mov
dec
int
bound
les
sar
int3
movaps
mov
jp
adc
insb
into
shrb
jno
pusha
mov
inc
sub
mov
test
outsl
icebp
int
cmp
inc
stc
or
jl
outsl
inc
les
push
or
sbb
sbb
ss
arpl
push
mov
and
pop
cmp
dec
shrb
fsubl
out
xor
add
sahf
addr16
fisubrs
test
mov
rcrl
sub
leave
rolb
dec
cmp
int3
sbb
mov
repz
scas
sbb
sub
lret
and
push
adc
jb
mov
push
mov
cmpsb
out
pushf
fiadds
scas
scas
push
push
sbb
pop
cli
xchg
mov
add
and
in
stos
lret
push
aam
aad
lret
jno
or
js
push
cld
and
jnp
dec
dec
loop
sar
leave
orb
mov
inc
mov
in
cmpsl
xlat
jmp
aad
ljmp
lahf
mov
fadds
ds
push
jae
and
les
pop
movsl
inc
push
stc
add
jl
push
push
push
mov
pop
and
lcall
sbb
push
pop
mov
pop
ficomps
inc
or
icebp
jae
push
or
inc
adc
cmp
adc
mov
lods
xor
xchg
stos
lock
or
push
xor
mov
sahf
rclb
adc
pcmpeqb
pop
push
sub
cld
repz
xchg
jb
mov
mov
outsb
push
movsl
mov
xchg
mov
sub
ja
idivb
sbb
mov
lcall
lret
fcmovne
or
aas
push
or
add
sti
xchg
inc
out
adc
shrl
shll
fidivl
ljmp
in
and
cmpsl
mov
xchg
inc
mov
jmp
xchg
incb
mov
test
cwtl
std
pop
popf
pop
push
lea
sbb
orb
jmp
jo
rcrb
fdivrl
xchg
or
push
lahf
in
lock
jmp
lods
imul
add
or
dec
ret
or
pop
adc
pop
sbb
pop
popf
mul
push
push
mov
jg
push
mov
xchg
popa
or
mov
mov
jno
fstl
jno
int3
data16
mov
push
add
jb
jle
cmpsb
adc
xor
ror
test
jo
jmp
cmp
imul
pop
fcoms
pop
scas
ret
jle
jmp
aas
pop
aam
push
fdiv
pop
fadd
scas
pop
pusha
loope
jno
cmp
fcompl
icebp
dec
rclb
inc
mov
enter
inc
sub
and
jns
in
pop
cmpsb
mov
aam
insl
push
add
test
aaa
sahf
in
pop
icebp
stc
push
push
aaa
push
les
jge
pop
pop
cmp
xor
bound
mov
or
pushf
dec
daa
mov
iret
icebp
jmp
int
mov
in
pop
sub
sub
mov
adc
std
dec
out
push
popf
out
sub
stc
push
pop
stos
lret
fists
cmp
jl
mov
add
fbstp
frstor
ficompl
decl
dec
stc
lcall
cld
ret
cmp
dec
or
sub
dec
sub
je
jo
xlat
sub
lea
stos
add
xchg
lret
inc
out
sbb
jmp
push
dec
mov
in
lahf
mov
je
xchg
into
xchg
mov
cmp
mov
into
bound
out
stos
outsl
stc
adc
cmpsb
push
out
push
adc
rorl
mov
loopne
lcall
pop
and
daa
mov
pop
push
cmp
jne
in
ret
push
and
jae
and
fwait
inc
sub
push
out
test
and
cld
bound
and
movsl
pop
mov
sti
addl
adc
stos
lcall
in
xor
cmp
and
lds
xor
stc
jb
in
enter
bound
sbb
test
mov
xlat
loopne
bswap
lods
imul
sbb
push
push
jp
mov
shrl
push
leave
jmp
pusha
aad
divb
out
pop
lods
jp
jle
fstps
push
or
jmp
adc
arpl
jbe
scas
insl
cwtl
add
data16
shlb
mov
in
cmp
pop
or
es
sbb
cmp
sub
push
sbb
push
pop
sub
sar
ret
and
lods
jmp
iret
and
add
flds
add
lods
mov
lret
sub
out
sub
mov
sbb
and
aas
bound
dec
cs
loope
scas
push
filds
fs
dec
subl
frstor
adc
add
ds
in
cmp
lock
lcall
push
mov
aaa
inc
pop
and
cld
outsb
insb
sahf
lods
cmpsl
lods
jnp
insl
fs
shll
xor
sahf
jbe
shlb
jbe
clc
pushf
xorl
iret
xchg
cs
addr16
pop
cmp
test
xor
mov
cwtl
fiaddl
pop
push
pop
repz
pop
push
sub
test
icebp
xchg
js
sbb
fmul
and
adc
jno
fstpl
scas
mov
sbbb
or
dec
and
and
pop
pusha
add
mov
repnz
cld
gs
adc
push
lods
dec
xchg
or
cli
outsl
nop
mov
jbe
nop
cmp
add
rcll
cltd
xor
imul
sub
jp
int
addr16
loopne
dec
add
sbb
cli
int
cmpb
scas
inc
or
jns
jecxz
icebp
iret
pop
leave
ret
data16
mov
pushl
in
adc
in
cmc
repnz
jp
xlat
and
es
iret
pop
in
daa
cmp
mov
dec
jl
or
es
sahf
arpl
stos
xor
mov
mov
repz
dec
mov
outsb
pop
mov
adc
jg
aam
push
pop
fbstp
iret
lcall
pop
jge
addr16
or
mov
insl
outsb
xchg
arpl
cmp
mov
lret
nop
mov
push
test
push
inc
in
in
mov
cmp
outsb
jb
lret
push
push
inc
dec
inc
inc
mov
bswap
das
popa
adc
pop
dec
int
push
cli
push
test
je
sbb
push
cltd
cmp
and
aas
sbb
jecxz
mov
ss
mov
pop
in
push
outsb
es
cmc
pop
jns
scas
mov
cmp
scas
mov
fnsave
mov
out
and
in
iret
xchg
sahf
lret
arpl
icebp
lret
or
fisubrl
adc
or
pop
rclb
insl
aad
or
xchg
ljmp
jns
cmpsl
adc
sub
movsb
insl
push
xchg
xchg
mov
mov
inc
and
inc
push
xchg
mov
sub
in
jmp
sbb
and
out
cmp
sub
fnstsw
cmp
je
push
or
add
jns
movsb
push
enter
xor
dec
and
jbe
jmp
orl
xchg
lret
sti
loop
jge
push
xchg
fistl
xchg
xlat
lds
dec
fdivr
stos
mov
push
add
mov
cs
scas
or
or
js
add
push
jo
pushf
pop
lcall
clc
in
and
sub
jno
movsl
lock
sub
pop
sbb
sbb
mov
push
jmp
ja
in
pop
pushf
mov
xchg
idivl
inc
dec
dec
mov
sub
push
in
ds
arpl
add
hlt
mov
pop
jmp
ljmp
push
jmp
pop
les
ret
data16
cld
in
and
mov
nop
and
shlb
pop
adc
ljmp
mov
ja
xchg
arpl
push
dec
cmp
push
insb
xlat
test
xchg
scas
adc
inc
jl
push
stos
sti
dec
inc
test
jge
jle
iret
icebp
adc
push
adc
lods
addl
mov
rcll
aad
dec
push
repz
pop
xchg
push
mov
push
aas
pop
xchg
lods
in
inc
pop
adc
fcompl
dec
rclb
add
push
test
iret
or
xor
js
subb
cmpsb
xor
mov
ret
mov
xchg
and
scas
stc
mov
into
sbb
scas
pushl
repz
enter
push
jb
cmpsl
arpl
stc
cli
sahf
mov
xlat
leave
xor
push
jns
dec
add
cmp
pop
mov
mov
cmpsb
lret
cmp
rcr
scas
pop
adc
gs
cmp
sub
cwtl
sahf
ret
dec
jge
add
xor
cmp
loope
sbb
iret
or
pop
dec
ja
mov
addr16
sbb
mov
and
add
daa
sub
sub
bound
xchg
mov
shlb
cli
sbb
dec
movsb
pop
mov
test
or
ffree
add
aad
xchg
lahf
fists
inc
cmpsl
stos
and
adc
sub
data16
stos
or
roll
es
out
jl
test
je
xchg
jp
cwtl
xor
and
mov
stos
stos
push
mov
ret
mov
sub
mov
lret
cmp
scas
ss
push
fwait
cmp
imul
iret
arpl
clc
lahf
cmp
lods
clc
and
mov
push
inc
fsubrs
das
or
mov
jge
ficomps
lcall
sub
fcomps
rcrb
js
mov
dec
cld
stc
insb
adc
nop
pop
add
mov
mov
jns
lock
push
icebp
inc
aas
aas
test
sti
xchg
xor
mov
loopne
push
and
in
jns
ja
notl
pop
or
xchg
out
and
test
loop
xchg
into
and
js
xor
or
mul
push
test
shll
subl
cld
into
push
or
mov
cwtl
test
push
jg
in
sbb
adc
addr16
loopne
in
or
imul
jno
push
xchg
sbb
lods
imul
jecxz
fnstenv
call
dec
jge
out
mov
divl
jle
hlt
fincstp
in
mov
inc
loope
mov
sub
sbb
cld
daa
loope
push
adc
push
test
arpl
in
js
cli
mov
mov
cmpsb
stos
lret
fisubrs
push
dec
mov
sbb
xchg
int
in
pusha
inc
aam
and
mov
xor
push
and
jnp
adcl
jecxz
in
cmp
dec
xor
mov
or
push
sbb
std
hlt
stc
adc
push
fs
inc
jecxz
xchg
add
xor
into
mov
imulb
stos
test
in
inc
mov
xchg
mov
xor
cli
pop
outsl
push
cmpsl
jge
inc
sbb
xlat
pop
jno
push
xor
inc
in
cmp
push
add
fistl
and
pop
out
sub
xchg
leave
jb
or
jae
add
outsl
sbb
inc
jecxz
repnz
jmp
dec
or
mov
xor
push
mov
hlt
movsl
mov
hlt
lods
push
rcll
mov
pop
sbb
in
lret
adc
fcmovne
xchg
pushf
lret
movsb
mov
mov
adc
and
ljmp
adc
add
xor
add
cmp
mov
cltd
add
sub
lods
repnz
jmp
xor
mov
jbe
jge
inc
pcmpgtd
lahf
and
std
mov
loope
lret
lods
mov
jne
call
and
jns
mov
inc
mov
mov
popf
sbb
xlat
rclb
in
adcb
movb
insb
out
out
mov
xchg
dec
xchg
cmp
or
ds
or
sbb
cmp
cs
lods
cmp
repnz
popa
inc
adc
and
cmpsb
sbbl
adc
cmp
out
rclb
or
cmp
jecxz
rorb
push
xor
fnsave
sbb
ja
or
lea
pmaxub
push
ja
cmc
mov
and
shlb
push
roll
dec
sbb
mov
jbe
push
out
xor
mov
pop
mov
xor
call
pop
sbbl
ret
pop
ret
inc
mov
cli
mov
sbb
wrmsr
imul
dec
pop
dec
xchg
push
dec
ror
fsubrs
xor
pop
clc
add
dec
or
and
xchg
int
out
mov
lods
out
movsl
push
lods
sub
shlb
popf
pop
add
andl
addb
mov
leave
mov
push
sbb
mov
cmpsb
jb
fisubrs
sub
push
out
pop
enter
mov
xchg
sub
idivl
fs
jne
inc
adc
sub
enter
push
hlt
mov
add
shl
clc
js
arpl
je
hlt
and
gs
inc
or
in
test
movsb
cmp
ss
mov
push
lds
push
mov
test
jecxz
push
mov
ja
inc
iret
jmp
cmpsb
jae
push
mov
call
test
arpl
fldt
ret
pop
or
mov
negl
jp
push
inc
jns
cmp
xchg
dec
add
ror
add
xchg
aam
jns
sub
mov
repnz
dec
out
cmp
adc
mov
pop
daa
cmp
mul
xchg
xor
xlat
cld
mov
mov
push
dec
dec
mov
out
das
test
fidivl
xchg
mov
and
add
jl
outsb
fimull
in
push
pusha
sahf
sahf
and
aad
sbb
aaa
movsl
xchg
mov
mov
test
fs
lock
or
inc
mov
dec
sub
push
mov
lcall
jecxz
outsl
xchg
push
iret
and
cmpsl
leave
pop
inc
and
push
xchg
or
sub
cmpsl
shll
aam
push
stos
cmpsl
lea
mov
leave
inc
popf
pop
dec
cmpl
inc
mov
sub
lcall
inc
push
ja
stos
aas
adc
std
add
mov
divl
scas
dec
repnz
bound
sbb
stc
stos
cmp
dec
fisubl
xchg
test
incb
jnp
sbb
in
test
sub
cld
push
popa
rcl
into
push
push
push
mov
push
std
jp
pushf
flds
cltd
stos
imul
maskmovq
negl
jnp
movsl
fcoms
mov
push
xchg
rep
loop
cmc
lea
ret
cmp
push
enter
inc
call
mov
mov
xchg
mov
int
jmp
sbb
inc
das
sahf
pop
and
mov
test
add
push
insb
inc
mov
xor
inc
loope
xchg
pop
mov
jnp
iret
movsl
int
cmc
call
dec
or
sub
pop
in
jge
mov
xor
pop
inc
mov
push
and
jp
xchg
pop
jp
adc
subl
add
pop
mov
out
xor
stos
mov
rcrb
pushf
fcomi
pop
jne
rcll
xchg
mov
add
mov
mov
out
mov
mov
inc
inc
adc
push
mov
lds
mov
aad
add
xchg
cmp
or
mov
lea
xchg
and
inc
pop
pop
push
or
cli
jno
lea
cmp
add
sbb
popa
jae
sub
and
cs
loopne
cmp
xchg
mov
pop
in
jmp
cmp
fsts
dec
leave
and
ror
int
cmp
xor
addl
push
or
cmp
jecxz
xchg
or
ja
sti
out
outsb
push
and
imul
jg
div
xchg
sbb
xor
fs
bound
arpl
or
jl
pop
cmc
pop
jae
xor
mov
movsl
ljmp
fs
loopne
dec
dec
int3
jl
fcomi
loopne
push
inc
cmpsb
call
bound
xor
mov
dec
jb
xchg
mov
lcall
xchg
or
or
popa
ficomps
popa
fsubr
data16
sbb
lret
sbb
insl
dec
xor
pushf
xchg
sub
jg
sub
jb
lods
popl
loopne
pop
add
or
add
inc
andb
mov
jg
in
inc
les
fsub
lret
lcall
imul
fcmovu
rclb
push
jne
and
jbe
in
movsl
out
xchg
mov
pusha
xor
pop
movsl
mov
loop
es
inc
repnz
movsl
pop
loopne
jp
mov
mov
aaa
ret
iret
ffreep
mov
mov
fiadds
mov
nop
add
mov
jecxz
cmpsl
jne
shlb
push
testl
adc
arpl
cmp
xor
loop
jmp
sub
inc
or
int3
dec
xchg
sub
das
mov
pop
pushl
inc
cmpsb
mov
mov
daa
popa
sbb
xlat
sbb
mov
add
cmc
mov
cmpsb
aas
adc
aad
sbb
repnz
inc
lea
mov
adc
out
push
fwait
gs
inc
fidivrs
mov
jnp
cmp
in
sub
mov
xchg
scas
jnp
ja
cli
or
imul
inc
jo
ficoms
insb
fidivrl
leave
mov
jns
push
mov
cmp
xchg
cmp
push
daa
adc
cmp
dec
in
xchg
pop
cmp
and
cmp
jmp
cltd
or
leave
mov
add
push
movsl
cmp
das
add
adc
stos
fwait
lea
enter
pop
shl
mov
push
cmp
ret
scas
popa
ss
xor
lret
cltd
dec
push
lods
mov
xlat
in
sarb
sti
mov
inc
adc
cs
cli
xchg
dec
and
repnz
shl
jnp
mov
cmp
in
scas
pop
ljmp
data16
fistpl
xor
ret
inc
add
xchg
and
mov
dec
add
icebp
add
fstp
popf
adc
jo
add
jb
dec
shl
fdivrs
test
mov
jle
mov
icebp
insb
or
mov
pop
cmp
out
xchg
or
xor
adc
clc
and
movsl
push
mov
dec
in
fdivrs
popf
and
lret
mov
xor
pop
adc
inc
adcb
cltd
push
xor
fnsave
not
pop
sub
bound
jl
mov
jno
adc
mov
test
test
ds
sub
cmc
mov
lret
test
pop
mov
dec
inc
sbb
shrb
jbe
cmpsl
ds
addr16
push
adc
xor
iret
mov
add
pop
xchg
push
lahf
push
repz
stc
scas
ds
mov
test
sbb
cmp
jb
test
cmp
int
dec
ja
dec
cwtl
xor
lock
mov
cmp
mov
in
jb
cmpsb
les
cmp
sarb
jg
stos
icebp
stos
roll
mov
jecxz
cmpsb
mov
fs
iret
add
add
sbb
inc
mov
jne
cmp
out
adc
mov
lret
lds
xor
push
inc
test
test
mov
pop
add
sti
insl
sbb
mov
sahf
fildll
lds
jbe
dec
xor
sub
pop
mov
imul
mov
jbe
in
in
xchg
test
stos
adc
jb
lea
xchg
add
popf
adc
mov
mov
lock
mov
jo
inc
pop
xchg
sub
insl
add
jo
out
ds
pop
or
aaa
fisubs
sub
imul
enter
cmp
std
addr16
cwtl
mov
xlat
add
inc
lods
insl
xchg
ficomps
popa
bound
rcl
mov
push
mov
dec
into
lea
insl
and
popf
pop
ja
fcoml
or
movb
loopne
sbb
cmovbe
sahf
fiaddl
push
out
lcall
popa
es
pop
retw
inc
loop
inc
adc
xchg
mov
notl
mov
shll
loopne
adc
adc
xlat
mov
mov
stos
mov
mov
divl
jno
cmp
mov
lods
scas
rorb
jo
xor
ja
cld
lcall
arpl
pushf
stos
pop
mov
push
push
int3
ss
pop
or
xchg
pop
fwait
push
pusha
or
jb
hlt
sub
adc
xlat
pop
jmp
fcomip
sahf
lret
inc
rol
add
xor
sbb
adc
aas
dec
mov
pop
xchg
jp
or
mov
subl
mov
hlt
xchg
dec
movsb
in
jo
push
xchg
mov
xchg
frstor
les
pop
and
xchg
pop
push
in
stos
repz
hlt
mov
lret
enter
adc
xor
test
scas
xor
lret
cmp
or
pop
popa
je
cwtl
pop
jle
mov
dec
fdivs
mov
add
pop
out
movsb
aad
cmc
fisttps
test
int3
in
and
mov
enter
cmp
es
mov
in
or
in
andb
mov
cmp
or
jo
sub
mov
cmp
inc
mov
out
pop
in
or
cs
std
addl
ljmp
push
pusha
push
clc
mov
sbb
leave
mov
xor
fisttps
cmpsl
jb
pop
lds
out
mov
adc
fdivrs
lahf
mov
cmp
hlt
jno
outsb
or
inc
ja
insb
cmp
sbb
pop
and
iret
repnz
sub
scas
xor
divps
pusha
imul
mov
mov
pop
das
and
pop
mov
xchg
test
lods
or
cmp
and
push
push
mov
xchg
std
sub
faddp
inc
add
leave
cmp
cli
mov
cmp
in
ret
jecxz
mov
shrl
or
adc
sbb
popf
pop
and
dec
imul
out
mov
add
or
pusha
imul
int
xor
sbb
and
mov
cmpsl
pop
mov
out
cmp
into
inc
sub
inc
push
dec
pop
xchg
push
push
jp
roll
ret
cmp
cmp
push
mov
into
mov
pop
and
and
xchg
mov
xchg
outsb
cmp
daa
popa
das
or
fcompl
mov
shlb
jns
cmp
addl
xchg
add
add
mov
inc
xchg
xchg
cmp
addr16
push
jle
shl
insb
aaa
insb
dec
or
xor
xorl
pop
and
pop
clc
into
mov
jp
ret
fisttps
push
sub
fbld
sti
lock
cmpsl
inc
imul
loopne
xlat
out
xor
push
mov
aas
jae
xchg
fbld
arpl
ds
push
into
push
adc
test
bound
out
outsl
mov
push
subb
or
xchg
push
mov
mov
div
popa
pop
shlb
inc
dec
xchg
fnstcw
sbb
push
jns
pop
cs
leave
dec
fs
adc
fidivrs
push
stos
mov
dec
popf
fstps
in
inc
sbb
mov
and
push
inc
add
scas
jb
xchg
sub
out
enter
sbb
in
nop
push
mov
out
xor
push
mov
xchg
jmp
fwait
hlt
fstps
bound
mov
sbb
arpl
jno
dec
pusha
xchg
mov
out
sarl
aam
pop
cmpsb
sub
cmpsl
jb
mov
push
repz
nop
outsl
arpl
stos
cmpsb
out
sub
icebp
leave
fisttps
push
jecxz
xchg
jecxz
and
xchg
cltd
push
inc
lret
call
lods
mov
mov
je
fnsave
pop
cmpsb
jp
jmp
cmp
adc
pop
movsb
push
in
mov
hlt
mov
fnstcw
loopne
rorb
nop
insl
xor
mov
and
sub
sbb
shlb
inc
test
test
pop
xor
fstl
jg
popf
xchg
add
add
in
jno
into
rcr
je
jmp
fs
cmp
stc
push
dec
sub
in
mov
sub
jno
icebp
mov
add
sbb
or
pop
inc
inc
repz
jmp
daa
adc
add
xor
mov
dec
mov
adc
sbb
lods
rcll
repz
adc
ljmp
popf
mov
adc
pop
and
mov
imul
sti
jb
ret
stos
pop
mov
icebp
mov
addr16
inc
xchg
mov
mov
jl
ja
push
test
out
rorl
adc
pop
call
gs
cs
fadd
xchg
imul
daa
cmp
cmp
lret
pop
cld
cmp
icebp
mov
cmp
cltd
adc
ds
iret
loopne
int
movsl
jne
xor
add
and
sbb
loop
cld
jnp
mov
cltd
push
stos
mov
sub
dec
mov
sbb
je
or
ss
nop
cltd
pop
inc
and
sub
clc
and
lahf
push
mov
popf
lahf
out
daa
or
ret
stc
bound
pop
mov
or
jl
inc
mov
ja
xor
movsb
mov
dec
outsl
push
cmp
lock
mov
sbb
dec
ljmp
xchg
sbb
sbb
inc
sbb
pop
pop
add
pop
mov
mov
dec
subb
jl
fs
fwait
lock
out
mulb
fldcw
dec
mov
mov
daa
inc
push
es
pop
scas
icebp
inc
arpl
mov
or
ss
xor
ja
pop
push
xor
xchg
jge
cltd
std
data16
cltd
xchg
jge
sbb
cvtps2pi
outsb
sbb
addr16
call
mov
push
xchg
and
inc
sahf
insl
xchg
dec
or
pop
idiv
lock
rorb
mov
jp
out
fcoml
or
cwtl
xchg
aam
mov
mov
popa
mov
pop
arpl
pop
sarl
mov
je
mov
inc
addr16
jbe
test
test
popa
pop
xchg
mov
cmp
dec
mov
sbb
pushf
sbb
jb
jo
subl
mov
add
sub
fstps
movsb
data16
dec
icebp
sbb
and
sahf
into
mov
ret
sbb
test
pop
loop
mov
xor
lret
rcrl
js
stos
popa
add
mov
and
addr16
jmp
or
lods
push
iret
shr
jg
and
mov
add
lods
stos
imul
mov
or
mov
mov
and
jle
insl
jns
or
sub
je
jb
jge
dec
in
arpl
in
fsts
incb
movsl
mov
mov
and
bound
push
jbe
jne
popf
xchg
aad
sub
scas
mov
add
das
adc
xor
adc
sti
pop
sbb
add
mov
xor
shl
jle
movsl
mov
test
rorb
rorl
out
scas
push
out
jbe
sbb
push
push
hlt
rorb
fstps
push
xchg
jg
mov
sub
shl
jbe
aas
fcmovnbe
mov
cwtl
into
cli
scas
mov
mov
inc
inc
test
sbb
sarl
or
adcb
lods
mov
xor
mov
sbb
mov
clc
aas
sub
jg
das
les
add
loope
jbe
sbb
cs
push
jp
add
icebp
cmp
movsl
stc
std
pop
dec
xlat
das
jns
into
add
cmp
imul
loopne
pop
sub
xchg
shll
mov
xchg
sbb
lcall
negb
out
pushf
loop
mov
mov
add
lds
out
push
push
mov
addr16
aas
xchg
push
cmp
movsb
adc
lcall
sub
mov
icebp
sub
and
xchg
call
cmp
dec
lds
sarl
lods
jp
ficoml
jo
xchg
dec
andb
sti
jg
pop
and
jecxz
pop
adc
jae
mov
ror
cmp
sbb
xor
add
add
int3
sarb
mov
enter
xor
sub
rcrb
data16
clc
push
lcall
pop
xchg
lcall
mov
lock
leave
into
add
sub
push
jg
addr16
ljmp
stos
cmp
nop
js
es
pop
mov
push
stos
adc
xchg
les
ud0
add
cmp
lods
call
clc
mov
mov
pop
pop
out
hlt
ficomps
mov
add
out
out
lods
or
dec
fisttpll
clc
or
fadds
movl
imul
mov
and
sub
jns
repnz
jae
jo
nop
push
fisubrs
f2xm1
jb
or
jle
push
shrl
mov
jnp
sbb
icebp
mov
cmp
push
stc
and
mov
rcrl
lds
fildl
xchg
xchg
sub
pop
jge
rcrl
push
std
push
sti
jg
aad
jecxz
lcall
shrl
es
outsl
mov
xchg
loopne
enter
xor
xlat
sub
pop
jb
ret
daa
adcl
rcr
insb
lret
roll
pop
movsl
in
loop
sub
popa
pop
je
cmpsb
mov
imul
inc
sti
daa
cmpb
or
mov
mov
mov
push
dec
je
cmp
mov
popf
xchg
mov
out
cld
xchg
js
cld
mov
imul
pushf
pop
push
mov
bound
fistl
fwait
fs
sbb
sbb
adc
pop
dec
mov
mov
iret
add
dec
call
cmp
leave
aam
mov
into
ds
push
pop
push
mov
push
add
fisubs
sti
lret
lock
aam
jbe
fldenv
cmp
pop
mov
rolb
dec
add
iret
pop
jp
dec
test
mov
imul
in
adc
iret
cmp
push
cmc
icebp
and
test
adc
cmp
mov
mov
cli
mov
out
int
jno
loopne
shlb
cld
mov
fadds
sub
pop
adc
notl
popf
mov
lods
mov
in
cli
stc
push
mov
add
pop
repz
aas
paddd
test
out
call
insl
push
cs
adc
adc
inc
push
inc
pop
mov
in
cmp
jae
dec
inc
jo
xchg
lret
aaa
mov
xor
test
dec
mov
ss
mov
jmp
imul
outsl
pop
jle
xor
movsl
mov
mov
andl
stos
ja
cmp
pop
push
push
adc
add
imul
mov
sti
test
mov
sti
sub
and
adc
dec
movsl
push
mov
mov
in
and
pop
mov
push
sbb
test
cmpsl
fsub
pop
sbb
scas
ret
int3
push
jnp
inc
in
nop
popa
mov
fisubs
gs
insl
pop
inc
pop
scas
jp
push
mov
add
cmp
jns
fs
push
repnz
aas
jno
sbb
repz
pop
dec
loopne
mov
je
int
int3
add
movsb
mov
mov
or
cmp
sub
insl
inc
adc
jnp
fisubrs
push
sarl
mov
cli
inc
sahf
loope
lahf
ficoml
mov
add
je
add
xchg
ja
dec
lret
pop
adc
add
outsb
movsb
xchg
adc
sbb
sbb
dec
cmp
add
mov
sub
aad
jg
xchg
ds
int3
loopne
adcl
pop
addr16
pusha
cld
out
pop
or
rorb
xor
pop
lea
sti
pop
xchg
sahf
push
dec
subb
jmp
out
jo
cmp
lods
dec
mov
nop
hlt
mov
sbb
jo
lds
adc
sub
cmc
test
shl
add
add
mov
frndint
repnz
xor
outsb
push
pop
jmp
cmp
or
push
loop
aam
call
js
or
pop
dec
push
sbb
sti
je
mov
mov
add
sub
flds
xchg
outsb
mov
subb
dec
sub
pop
nop
mov
out
jne,pt
out
test
mov
stos
push
xchg
cli
adc
psubusb
clc
ret
leave
mov
ret
mov
mov
push
cmp
xchg
mov
cmp
clc
cmp
fstpl
shrb
and
test
add
xlat
leave
insb
fcoms
out
daa
mov
mov
fucom
mov
fidivl
ss
imul
test
sub
dec
int3
lret
sahf
mov
outsl
mov
pop
andl
orb
imul
je
inc
sub
xchg
sub
repnz
pop
repz
lahf
aam
cmp
and
aad
dec
shll
sbbl
mov
gs
cli
adc
jno
js
lods
xor
loopne
das
mov
ret
push
into
xchg
pop
mov
fldl
push
lret
insb
js
loop
jp
push
and
inc
fmul
mov
pusha
dec
inc
and
xchg
lock
jmp
push
mov
jne
mov
sahf
jae
dec
in
or
mov
and
xchg
into
lea
push
xchg
xchg
add
xchg
sub
fcmovnb
outsb
push
repz
push
fsts
jp
mov
mov
jno
inc
push
xchg
cs
jp
sub
push
mov
mov
jne
inc
adc
popa
lret
jno
aaa
and
pushf
into
mov
hlt
push
dec
xchg
fmull
add
out
add
mov
sbb
loope
or
mov
sahf
cmp
xor
sbb
xchg
sbb
pop
mov
push
daa
pop
fcoms
jecxz
xor
bound
xlat
fldt
test
inc
dec
ret
xchg
pushf
in
leave
scas
sbb
and
mov
mov
mov
add
mov
pop
test
testb
in
cmpsl
outsb
es
ror
sbb
dec
lcall
adc
xor
jp
pop
push
fimull
mov
stos
jo
cltd
fmuls
cmc
cltd
xchg
andb
and
sbb
inc
push
and
push
mov
xor
dec
je
jbe
aam
jne
repnz
sub
mov
jns
pushf
outsl
jmp
outsl
cmc
std
adcb
lods
mov
jecxz
aad
enter
stos
loope
sbb
mov
pop
push
push
mov
lret
ds
gs
vunpckhps
movsb
lcall
subb
out
push
fistpll
jle
inc
insl
les
mov
loop
imul
aad
pop
mov
cmp
stc
je
add
inc
mov
jne
cmp
test
ret
js
jl
ja
jmp
ljmp
sbb
mov
mov
lock
loopne
xor
pop
jbe
push
outsb
or
sub
pop
xor
mov
jecxz
xor
jg
pop
lea
xchg
sbb
pop
lret
repz
dec
test
sub
enter
push
js
jb
cli
inc
push
push
lock
pushf
jmp
jge
cmp
out
arpl
jmp
fidivrl
fcomp
and
pop
addr16
push
mov
icebp
jns
dec
lock
push
pop
insl
xchg
cmp
jno
mov
mov
imul
xchg
mov
xor
or
scas
xor
pop
jno
test
test
out
test
or
je
push
mov
xchg
cmp
cmp
fstpl
aas
mov
in
add
nop
mov
aad
outsb
out
cmpb
dec
nop
mov
and
mov
adc
jae
fiadds
insb
mov
dec
aam
jp
out
in
daa
dec
cmpsl
fnstsw
pop
data16
repnz
cmp
out
sbb
sahf
adc
add
sub
inc
sub
fisttpl
and
sub
inc
mov
aad
out
imul
push
sbb
cli
mov
inc
cmc
jg
sub
or
leave
pop
jl
jecxz
fiadds
enter
mov
xor
test
ret
pop
int
ret
xchg
les
aad
dec
mov
movsb
bound
push
lahf
in
add
sbb
flds
movsl
sbbl
es
xor
movsb
and
pop
inc
push
add
lock
call
dec
ret
fbstp
adc
shrl
and
mov
fwait
mov
loope
sub
jo
pop
cli
sub
sub
cmp
insl
in
stc
popl
pop
cmp
pop
outsl
loop
jp
push
push
outsb
or
fstp
push
and
cltd
mov
movd
dec
mov
call
aam
jge
sbb
call
jl
jge
sti
pop
sbb
add
popf
sub
pop
adc
in
dec
add
ret
fsubrs
sub
xor
hlt
mov
jno
aaa
adc
push
sarb
jmp
xchg
add
mov
add
jnp
mov
or
dec
inc
and
push
sub
sub
pop
dec
fs
mov
dec
push
mov
mov
inc
cmpsl
xchg
mov
adc
mov
push
scas
cmp
mov
push
shlb
movsl
cmpsb
push
mov
repnz
fdivrs
dec
sub
outsb
incb
lea
pop
mov
mov
movzbl
add
jle
and
fsubrs
repnz
jnp
in
rolb
push
add
jmp
inc
fwait
xchg
push
int
int
sbb
les
xchg
pop
inc
cmp
add
test
push
jmp
push
cltd
ret
aad
fs
fadds
fstpt
cwtl
aam
fisttpl
scas
test
inc
scas
test
sub
mov
or
jo
push
sahf
push
sbb
lret
push
xchg
add
pop
rcrl
jb
add
or
cli
ljmp
ret
gs
cmc
xchg
and
ror
fcmovb
loop
scas
sbb
mov
test
daa
xchg
rol
roll
pop
mov
push
pop
cmp
jo
mov
call
repz
sbb
cmc
dec
xorb
fstpt
mov
aaa
add
scas
mov
push
stc
lret
jmp
les
mov
aad
mov
pop
std
mov
jmp
das
lods
mov
jl
pop
fabs
rcll
hlt
gs
push
sub
sbb
sub
sbb
xchg
lock
jge
xchg
push
mov
cli
fwait
pop
daa
ljmp
stos
out
loop
inc
cmp
fists
dec
insl
cmp
jnp
inc
and
insl
mov
scas
data16
into
aad
mov
int
popf
imul
or
movsl
xchg
mov
sub
pop
xchg
pop
and
in
loope
inc
xchg
out
ds
imul
mov
jecxz
adc
insl
xchg
adc
stc
gs
xchg
jecxz
movsb
cwtl
fcoms
dec
ret
sub
out
aaa
dec
mov
pop
mov
dec
outsl
adc
dec
lods
stos
mov
cmp
ljmp
cmc
adc
sub
cmpsb
xlat
ret
jo
push
mov
mov
jno
mov
push
adc
mov
cmpsb
mov
pop
push
arpl
jo
pop
jne
fsubl
cmp
ret
into
add
filds
xchg
cwtl
xchg
cltd
lods
pop
dec
nop
test
push
cltd
pop
xor
loop
rep
sahf
in
pop
sbb
mov
les
inc
daa
inc
cmp
test
es
ret
stos
mov
cwtl
push
popf
bound
imul
push
xchg
push
xchg
mov
ljmp
push
movsl
popf
iret
daa
insb
adc
aaa
cli
xchg
mov
fsubrp
or
or
mov
mov
clc
xchg
pop
jp
mov
fwait
inc
in
and
pop
fcom
mov
mov
inc
cmp
mov
and
stc
cld
xchg
jo
out
and
ret
inc
ja
scas
xlat
dec
jns
xchg
and
out
inc
xor
mull
sbb
mov
cltd
jbe
inc
xchg
stos
inc
incl
jecxz
or
cwtl
adc
xchg
xchg
dec
sub
xchg
or
xchg
je
xchg
fcmovnu
xor
jne
push
cmp
mov
inc
mov
mov
xor
inc
adc
xor
iret
popa
lcall
push
aam
and
and
rorb
daa
pop
adc
movsl
fnstcw
mov
fimuls
jbe
ss
jne
cmp
in
inc
push
add
dec
sub
call
mov
and
and
push
insl
jno
push
scas
mov
lods
cmpsl
rcll
pop
pop
cmp
jae
add
and
imul
inc
cmp
pop
aas
jecxz
jl
sarb
dec
and
jmp
loop
sbb
inc
cmp
xchg
lods
stos
xchg
cmp
dec
mov
xor
add
sbb
scas
and
jg
imul
xchg
daa
not
pop
je
aaa
and
loope,pt
fscale
push
sahf
ds
dec
in
popf
cmpsl
sarl
popf
sahf
mov
inc
mov
aam
mov
xchg
push
pop
add
movsl
pop
jge
jmp
cmc
loop
mov
les
mov
rcrb
push
xchg
or
cs
outsb
sahf
and
dec
clc
xlat
and
jp
jecxz
add
jo
repnz
push
sarl
cmp
mov
cmp
jae
ret
cwtl
jae
addr16
and
insb
lret
mov
testl
movsl
inc
stc
fstpt
jnp
dec
ss
xchg
jmp
and
push
jecxz
incl
mov
jp
xor
add
test
aad
in
add
xor
push
xchg
out
inc
movsb
jo
mov
fildl
lcall
cmpsb
fsts
lds
cmc
gs
testl
and
loop
or
push
mov
test
adc
lock
fs
testl
pop
push
rcrl
or
in
jp
push
fmull
repnz
mov
ficoml
enter
sbb
xchg
mov
scas
add
notl
jb
mov
push
add
sbb
or
mov
out
imul
xchg
out
xor
add
sbb
fbld
imul
aam
pop
idivl
cmp
ljmp
jecxz
sbb
scas
cli
sub
lds
movsl
fisubl
imul
xor
es
insl
loop
pusha
aaa
pop
push
cltd
loopne
push
lods
pop
ret
mov
mov
ret
incb
movsb
outsb
les
jb
in
add
jmp
orb
xor
pop
xchg
dec
insl
lret
test
xchg
jge
push
sub
sub
sbb
add
popf
lcall
insl
xchg
xchg
cmp
sbb
or
pusha
scas
fbstp
popf
ds
pushf
mov
int3
xchg
jp
cli
xchg
mov
adc
inc
mov
je
mov
hlt
lcall
push
icebp
sub
js
in
ljmp
dec
pop
jnp
in
add
pop
mov
filds
ror
cs
lock
arpl
or
hlt
sbb
cwtl
sbb
push
dec
testl
cld
ds
mov
mov
fs
jge
add
sub
test
jne
ror
adc
cwtl
and
or
mov
jbe
adc
xchg
cltd
push
xchg
sbb
or
adc
pop
cmp
lcall
push
mov
ljmp
shl
stc
shl
jmp
or
leave
jne
inc
movsb
sbb
vshufps
subb
data16
pop
lds
jmp
andl
mov
scas
adc
pop
xor
inc
pop
xchg
cmp
mov
dec
ljmp
sub
in
sbb
call
adc
sahf
in
icebp
aad
mov
xor
dec
sbb
xchg
in
stc
jns
imul
pop
mov
mov
imul
jnp
jecxz
sub
stc
jo
loop
inc
jbe
adc
inc
scas
xchg
rorb
out
pop
inc
cmpsb
sub
fisubrs
shlb
cmp
ss
sbb
mov
insb
lret
int3
popa
cmpxchg
sarb
mov
jge
jns
test
xor
push
popf
inc
out
lret
fisubs
ljmp
xchg
je
push
repnz
xor
iret
sbb
mov
adc
fsubp
daa
dec
pop
push
stos
mov
jg
dec
inc
sbb
fisubrs
out
mov
adc
add
gs
adc
out
sti
out
je
cmp
lcall
push
les
popf
pop
in
sub
or
dec
loope
push
mov
rorl
xchg
fidivrl
mov
xlat
test
mov
adc
popa
and
pop
test
and
shrb
dec
or
pop
ds
add
rdtsc
fldl
in
aas
jbe
mov
insb
shlb
es
mov
xchg
bound
pop
pop
lds
or
xor
or
out
mov
ret
outsb
mov
pop
xor
sub
ret
imul
jmp
ljmp
subb
and
mov
scas
pop
inc
xchg
jp
jp
mov
call
mov
lahf
fdivrl
xor
imul
sub
sbb
xor
mov
pop
icebp
cmp
jmp
fs
cli
xchg
repnz
xor
mov
xor
fildl
dec
and
icebp
das
xchg
add
jle
xchg
and
aas
pop
inc
roll
call
sahf
xchg
or
mov
sti
mov
pop
fwait
dec
rcll
imul
xchg
jns
inc
insb
mov
sub
jmp
jbe
aad
ror
std
outsb
loop
xor
cmp
xor
ret
pop
dec
pop
cmp
test
xchg
cmc
cli
push
rcl
test
xchg
adc
cs
shl
leave
scas
pop
sub
int
jl
sti
push
fisttps
inc
adc
mov
pop
pop
mov
jne
nop
jnp
ret
mov
mov
popa
sub
push
add
loope
not
cltd
and
jne
push
or
lock
pop
mov
cmp
pop
xor
lds
mov
shll
push
iret
sub
ret
or
jl
mov
inc
imul
xchg
pushf
mov
or
sub
aas
jecxz
cmp
test
scas
test
cmp
pop
xchg
mov
adc
push
cmp
push
pop
sub
nop
test
imul
mov
jl
test
cwtl
cmp
lds
inc
in
sbb
sahf
cmp
imul
stos
rcr
mov
push
cltd
dec
out
inc
ret
xor
cmp
pop
clc
pop
add
jecxz
sbb
or
xor
xchg
or
or
jecxz
sahf
cmp
xchg
test
mov
lret
rolb
cltd
inc
hlt
mov
mov
jns
xor
aaa
fisttps
cmp
jb
pop
aas
in
lock
test
pop
sahf
fnsave
cmp
insl
cwtl
hlt
into
jecxz
in
jl
add
jmp
and
out
mov
fisttpll
or
paddusb
jnp
jae
movsl
sbb
push
pusha
pop
adc
outsb
push
mov
cmc
mov
shrl
add
aaa
pop
cmp
inc
call
insl
ret
or
and
xor
stc
mov
ret
adc
cs
enter
xor
lds
lods
hlt
mov
movsl
push
push
lods
or
out
adcl
cmpsb
imul
repnz
out
sub
adc
sbb
ret
aam
xor
or
adc
sbb
stc
xchg
fcomps
gs
sahf
xor
ds
adc
enter
pop
push
cmpsl
icebp
inc
cmp
rcl
mov
xor
vcvtdq2ps
xchg
mov
bound
push
test
and
xchg
and
out
aas
rcl
lods
out
sbb
rcll
lcall
mov
xchg
scas
lock
cli
fadds
mov
mov
cmp
outsb
sub
fistpll
movsl
inc
sbb
push
pop
pop
popf
push
pop
jp
cli
mov
mov
xchg
sbb
cmp
push
sbb
xchg
lods
int3
mov
in
cmpsb
push
xchg
pop
popf
mov
jns
notl
mov
xchg
rcll
dec
xchg
xchg
cmp
cmp
loopne
pusha
arpl
pushf
push
stos
daa
loop
add
pop
hlt
xchg
adc
mov
pop
mov
mov
in
xor
or
dec
or
jo
mov
mov
jecxz
stos
lods
dec
sarl
push
cmp
adc
repz
push
test
inc
pop
lods
lds
imul
dec
xor
or
pop
out
jmp
aam
adc
bound
cmp
push
daa
incb
mov
inc
test
std
leave
push
js
repz
pusha
subl
lcall
aas
xchg
add
mov
adc
iret
fisttpl
mov
dec
in
sub
xor
sbb
xchg
mov
or
sbb
nop
xchg
adc
xchg
movsl
mov
jmp
insl
sub
mov
jo
fwait
inc
int
repnz
std
pop
int
push
push
lods
mov
popf
aas
rcrb
cld
rcl
fwait
and
arpl
mov
sub
jge
sub
mov
cmp
xor
aad
xor
mov
mov
fsubs
adc
adc
out
and
pop
jno
sarb
sub
dec
cmpsl
lcall
xchg
pushf
sub
outsl
dec
sub
sub
adc
dec
xchg
and
mov
sbb
jle
lods
xchg
pushl
inc
mov
data16
stc
sbb
je
mov
push
cld
sahf
pop
daa
or
movsl
fwait
jecxz
es
mov
clc
add
jl
mov
movsb
rol
out
or
sbb
mov
sub
cmp
adc
mov
xchg
fwait
add
cmp
push
sub
or
out
rclb
rolb
add
mov
jo
mov
shl
or
std
int
sbb
xchg
sar
fwait
icebp
jnp
inc
dec
pop
sahf
mov
add
inc
mov
or
xchg
push
jl
in
aas
mov
mov
sahf
testl
pop
leave
loopne
aam
pop
xchg
add
pop
xor
int3
dec
bound
lods
sbb
pop
inc
dec
mov
mov
sbb
xor
data16
iret
aas
sbb
aaa
out
xchg
jmp
fidivs
sbb
fisttpl
cmp
mov
stc
xchg
int3
hlt
cmpl
mov
outsl
test
mov
lret
aas
sub
or
idiv
xchg
xchg
cmp
or
xchg
mov
pop
adc
out
cmovg
xchg
test
pop
int
jg
clc
aad
jge
daa
jb
popa
xor
bound
mov
int3
aad
popa
inc
frstor
dec
xchg
mov
dec
insl
stc
ret
mov
out
popf
inc
fidivs
bnd
out
push
cmpb
cmp
push
lods
jl
pop
insb
ljmp
push
xchg
repz
cmpb
xchg
dec
addl
ret
pop
lret
lods
cmpl
aaa
jge
inc
push
in
movsl
mov
sub
xchg
add
adc
or
add
mov
pop
jg
adc
clc
test
int
sub
aaa
imul
popa
imul
mov
pop
loop
mov
cwtl
test
push
mov
mov
out
arpl
arpl
in
push
mov
sbb
inc
enter
push
loop
pop
cwtl
adc
add
push
jmp
shr
bound
add
add
push
out
cmc
in
jb
in
in
loope
outsb
leave
xor
mull
insb
push
lret
and
test
fistl
adc
or
sbb
pop
lock
mov
outsb
lcall
inc
sub
jg
jno
lea
cwtl
fwait
adc
pop
xchg
xchg
dec
fs
sbb
orl
jmp
mov
fstpt
repz
mov
in
mov
dec
enter
jno
sbb
repz
jge
push
fmull
jmp
xor
cmpl
in
std
fsubs
push
shll
scas
int
xor
mov
inc
fstps
push
mov
xor
push
jecxz
jns
std
fsub
stc
jne
and
int
lret
inc
push
push
dec
fnstsw
pop
add
xchg
jne
pop
mov
xor
inc
inc
ss
enter
push
xchg
data16
or
sbbb
leave
mov
xor
sahf
xlat
lea
insb
dec
lahf
test
rorl
add
test
jmp
into
shlb
sbb
pop
cld
cmp
pop
cmc
push
add
addb
sbb
sbb
adc
outsl
xchg
aaa
dec
sbbl
movsb
xchg
xor
inc
cmpsl
stos
cmp
fs
jg
or
shrb
ja
add
or
fcomip
pop
addb
repz
std
std
adc
js
mov
mov
push
ficoms
sbb
std
mov
cmc
cmp
clc
add
frstor
mov
fimull
inc
lahf
lds
aas
and
dec
sub
jmp
push
jb
lock
jnp
fxam
xor
outsb
clc
dec
pop
and
pop
movsl
mov
paddw
mov
xchg
lcall
add
nop
push
xchg
jmp
daa
inc
cs
out
shl
jo
pop
mov
mov
ficoms
lock
mov
ds
add
divb
dec
ja
add
lea
xchg
cmp
lahf
inc
sub
sub
lret
push
stc
rcr
aas
sbb
jge
mov
cmp
add
and
xorl
ret
sbb
gs
enter
mov
loopne
pushl
add
sbb
fwait
lods
cli
outsl
out
add
xchg
mov
push
pop
bound
or
shrl
inc
cmc
pop
mov
iret
sarb
lds
cs
push
mov
xchg
jb
or
cmp
push
jp
outsb
push
or
mov
jg
mov
cld
pop
jne
subl
lcall
or
jmp
in
test
cwtl
xchg
ss
scas
jb
out
test
gs
mov
mov
lret
push
dec
xchg
mov
std
lcall
xor
mov
add
xchg
hlt
mov
xor
pop
shll
dec
dec
sbb
ffree
sub
cmp
lahf
addb
sbb
ret
push
dec
and
shrb
push
cmp
jg
pop
pusha
rcrl
sub
dec
add
xor
pop
adc
push
sar
cmc
sub
loop
xchg
mov
sbb
in
push
xor
rcrl
dec
jle
mov
pop
shlb
inc
out
mov
mov
repz
sub
xchg
inc
call
mov
sti
cmpb
pop
lcall
lds
pop
fsubl
mov
repz
arpl
popf
les
inc
outsl
adc
popf
cld
rorb
arpl
lret
sub
sbb
pop
mov
mov
jb
insb
xor
rorl
mov
fcmove
test
ret
ret
mov
xor
cmpsl
test
jno
je
lret
cltd
clc
iret
lret
pop
xorl
pop
inc
xorl
inc
push
inc
dec
push
add
sub
mov
mov
ja
movsl
pop
jmp
jbe
repnz
sbb
push
mov
cmp
xchg
mov
or
lret
xchg
dec
das
sbb
xlat
lea
cmp
push
push
std
and
dec
mov
push
sbb
mov
jl
cmp
or
mov
pop
xor
or
add
or
dec
mov
roll
xlat
addr16
enter
aam
adc
sbb
add
inc
mov
inc
xor
cmp
push
leave
adc
pop
outsb
scas
mov
sti
bound
inc
les
mov
movsb
mov
fdivrl
iret
cmpl
fwait
gs
les
in
ss
inc
aad
movaps
rorb
pushf
adc
xchg
sbb
xor
fld
inc
add
icebp
push
pop
mov
sbb
repz
cltd
cmc
insb
icebp
xchg
mov
push
push
mov
insl
mov
mov
mov
xor
in
add
dec
jg
mov
pushf
pop
and
das
testl
mov
sub
stos
fimull
pop
out
jecxz
ljmp
sbb
sbb
aaa
imul
test
addr16
cmp
adc
xor
cwtl
pop
dec
jge
lds
xchg
xor
and
sub
pop
mov
iret
push
inc
stos
and
aas
je
cwtl
xlat
rorl
in
or
mov
imul
mov
mov
mov
push
lret
movsb
add
in
icebp
dec
mov
nop
test
fcomp
jno
sub
push
pop
fs
es
inc
dec
call
adc
jne
daa
push
xor
xchg
fistl
cmp
pop
adc
fldenv
jle
jp
pop
push
mov
fs
popa
std
sbb
xor
cli
frstor
add
mov
js
mov
push
adc
out
push
cmpsl
repz
lods
pop
nop
in
xchg
test
repz
test
stc
js
cwtl
aam
xor
jno
jg
mov
jo
adc
push
or
mov
loop
mov
jne
sarl
addr16
ret
fisubrl
fcompl
jae
fdiv
scas
cmp
xchg
es
lcall
sub
cmp
cmp
dec
and
sbb
mov
scas
mov
clc
sub
shrl
cwtl
movsb
mov
enter
or
adc
in
sub
cmp
lcall
ljmp
cmpsl
push
and
inc
and
jns
sti
sub
pop
or
shlb
test
loop
loope
cmp
push
dec
xchg
push
fdivr
push
push
aas
sub
je
sbb
in
inc
xor
or
ds
arpl
shr
xchg
nop
pop
mov
xchg
pop
inc
int
and
jecxz
mov
leave
repnz
mov
or
xor
xchg
mov
sub
div
mov
pop
ss
arpl
jno
icebp
popf
ficompl
mov
loop
lods
call
sub
push
cmpsb
movsl
push
add
and
push
fstpt
inc
test
sbb
and
dec
shr
mov
sub
or
add
subb
xchg
push
push
jl
cmp
cmp
xlat
mov
sub
push
scas
icebp
sbb
cmc
jbe
inc
adc
adc
fdivrs
pop
ret
push
lret
das
mov
adc
pop
cmp
adc
jnp
mov
mov
jge
xlat
cmp
mov
add
dec
jne
xchg
adc
lret
js
or
adcb
clc
sbb
xlat
push
jnp
xlat
in
pop
mov
add
sar
mov
cmp
out
xchg
xchg
lds
or
lret
mov
cmp
push
sub
inc
jb
pop
pop
ret
test
mov
test
dec
pop
jle
fldenv
arpl
aaa
sbbl
add
movsb
lret
mov
xchg
inc
mov
out
mov
cld
add
in
or
in
cli
ja
pusha
jo
dec
lods
mov
pop
outsb
lds
pop
jno
fucom
les
nop
imul
cmp
dec
lods
or
pop
scas
push
mov
cwtl
cld
mov
cli
xlat
imul
xchg
adc
sar
lahf
mov
cli
test
push
mov
cld
cmp
dec
and
and
mov
cli
dec
jo
ds
pop
or
clc
ja
nop
push
in
jg
out
jecxz
arpl
and
inc
pop
sbb
pushf
inc
xchg
jno
idivl
lcall
adc
shlb
xorl
sbb
or
fwait
out
mov
outsb
xor
cmp
mov
dec
cmc
adc
or
cli
aaa
out
and
mov
mov
cmp
js
push
into
fs
push
push
add
ret
xor
pop
adc
ret
mov
pop
cmp
xchg
and
mov
inc
jbe
std
add
lods
pop
ret
fs
lds
xchg
xor
in
jp
jae
inc
lock
mov
pop
imul
sarl
inc
mov
add
jmp
sbb
lcall
je
notb
jnp
mov
insl
inc
or
ljmp
pop
orl
mov
dec
push
dec
mov
outsl
adc
jg
ja
xchg
bound
pop
and
pop
ret
dec
lahf
sbb
lret
push
xchg
test
sahf
test
addb
bound
add
int3
ljmp
push
fucomp
je
lret
mov
inc
add
xor
fisubrl
sub
mov
int3
nop
push
in
pop
icebp
jg,pn
jnp
fldcw
xchg
inc
lret
cmpsb
stos
je
or
xor
in
cmp
fistps
sbb
cmp
clc
push
xlat
jle
and
fstp
mov
mov
js
pop
jle
or
jmp
lds
mov
dec
loopne
lds
repnz
and
dec
mov
jp
in
iret
test
pop
ja
pusha
xor
nop
cmpsb
leave
jno
out
xchg
pop
xlat
pop
daa
adc
xchg
in
push
inc
sbb
je
inc
test
sbb
jp
push
int3
and
adc
aad
inc
rep
out
dec
adc
test
dec
rcll
add
push
push
mov
adc
aad
mov
pop
and
pusha
int
and
pop
mov
sub
pop
incl
sbb
mov
clc
mov
push
aas
push
dec
cmp
push
or
inc
shr
lock
dec
or
xchg
mov
lret
outsl
mov
ret
mov
push
enter
mov
outsb
mov
fwait
sarb
lods
or
push
aas
insl
and
mov
and
repz
testl
test
jecxz
sub
mov
add
push
pop
leave
xchg
add
cmp
imul
adc
sub
shrb
cmpb
dec
or
dec
jno
shl
push
push
inc
sbb
in
inc
sti
test
or
sbb
push
mov
fucom
mov
push
orb
js
jl
sbb
data16
jp
aaa
cmp
lock
push
mov
or
insl
nop
push
aam
xor
cmp
cmp
sub
movsb
fdivrs
lea
icebp
frstor
add
test
movsl
movb
notl
out
test
ljmp
or
xlat
aas
dec
xchg
jo
test
jo
cmp
fdivrp
jae
lds
ficompl
ja
xor
add
mov
movsb
push
fwait
mov
pop
push
xchg
es
dec
jbe
push
xor
and
test
pop
add
fsubrs
fwait
ds
mov
imul
adc
xor
jbe
push
repz
shrd
xchg
jb
testb
pop
push
inc
mov
out
repz
fnstsw
xor
ret
or
inc
lea
pop
scas
pop
popf
les
popa
jb
int
inc
inc
sarb
insb
mov
cmc
popf
les
pop
push
push
movsb
mov
mov
pop
xor
mov
pop
dec
push
aam
xorl
mov
outsb
mov
mov
sbb
mov
mov
sub
xchg
lret
and
out
dec
mov
push
cmpsb
pop
rorb
jp
lcall
aam
fdivrs
cmp
mov
out
and
mov
loopne
mov
xchg
jne
push
add
sbb
xchg
stos
addr16
sbb
mov
cmp
and
scas
jae
insb
pop
dec
lret
pop
xor
dec
movsl
ds
push
aam
in
push
pop
stos
push
inc
pop
pop
or
jecxz
push
inc
xchg
lods
inc
in
out
mov
cmpsl
popa
mov
xchg
add
cltd
add
aam
addr16
xchg
clc
pusha
mov
loopne
shrl
dec
inc
xlat
fs
test
inc
adc
std
out
outsl
xor
mov
push
test
jge
mov
rclb
lods
sbb
les
sahf
cmp
cmp
cmp
jmp
repz
dec
in
bswap
imul
mov
inc
mov
sbb
fidivs
cmpsb
scas
dec
gs
daa
pop
mov
push
aad
push
mov
pop
imul
push
lods
or
pushf
fs
jg
xor
mov
or
push
ret
sahf
cmpl
lods
loop
xchg
test
xor
imul
popf
mov
insb
cmp
fucomi
fstpt
sbb
mov
iret
lods
pop
bound
jno
pop
xorb
mov
jb
xlat
dec
jbe
stos
aaa
fldenv
xchg
push
jb
add
mov
sub
xchg
lea
and
sti
jns
pusha
sbb
push
fistl
and
xchg
stos
mov
mov
insb
scas
pop
pusha
mov
sub
mov
mov
or
out
cltd
xor
inc
add
test
iret
cmpsl
fs
sbb
std
aas
repz
cmp
es
pop
or
ds
pop
pop
shll
sub
mov
outsl
rclb
stos
fcomp
mov
icebp
mov
enter
mov
xchg
mov
add
lods
xchg
repz
loopne
cmp
sar
dec
jge
pop
icebp
fsts
jb
pop
std
dec
mov
xchg
lods
cmc
into
stos
shll
inc
mov
jae
adc
mov
adc
sbb
loope
mov
arpl
repz
jecxz
push
xchg
sbb
std
or
outsl
or
cmp
loope
out
out
mov
leave
cmpsl
loope
xor
mov
aas
inc
sahf
mov
push
in
ja
push
cmp
int3
cmp
jl
pop
cmp
sub
outsb
jnp
jne
dec
mov
push
push
fwait
stos
lahf
mov
call
insb
iret
sbb
inc
cmp
xor
sbb
xchg
orb
sub
hlt
adc
push
mov
mov
test
fwait
mov
xlat
mov
rolb
subl
xchg
arpl
jnp
push
in
clc
mov
cmp
dec
adc
mov
decb
sub
hlt
in
arpl
jns
out
mov
insb
movsl
cltd
sti
shlb
pop
mov
mov
xor
jns
adcb
mov
jl
out
ja
inc
mov
pushf
push
cmpsl
lcall
dec
rclb
or
mov
push
fiadds
pop
int
dec
movsb
cmpsb
push
stc
cmp
xor
pop
sub
insl
mov
mov
xchg
mov
mov
imul
dec
inc
dec
stos
adc
and
scas
aas
sbb
in
out
mov
cs
cmpsl
mov
fisttpll
stc
movsl
mov
xor
xorb
test
push
and
mov
in
inc
leave
inc
push
stos
mov
jp
scas
repz
xchg
pop
stos
sbb
in
loope
hlt
push
and
inc
cmpsl
gs
test
adc
push
stos
rolb
loop
lock
mov
pop
push
addb
adc
push
imul
imul
pop
fsubrl
rol
adc
imul
rcrb
mov
mov
mov
repz
push
dec
push
test
sbb
loop
outsl
aam
or
or
cltd
mov
push
arpl
add
mov
xlat
loop
ficoml
pop
xchg
sbb
and
push
loopne
push
sub
xor
rcll
xor
push
ret
jo
add
std
pop
and
dec
dec
inc
repz
lret
cmpl
mov
cld
jnp
rolb
fcos
fs
pop
dec
xor
test
mov
stos
scas
popa
push
in
mov
sub
jb
jmp
decb
movsl
adc
nop
aaa
pop
sbb
push
pop
inc
jae
std
cmpsl
mov
jmp
cmp
fwait
push
mov
xchg
pusha
test
adc
testl
add
test
loopne
mov
int
in
push
pop
enter
movsb
sub
idivb
push
stc
mov
cli
ljmp
cmp
out
bound
negl
inc
es
push
aaa
cltd
out
loope
cs
cli
pop
cltd
cmp
roll
push
addb
insl
pusha
xchg
mov
xor
add
arpl
inc
clc
cmp
dec
push
into
int3
std
in
sbb
pop
scas
xchg
pop
in
sbb
or
inc
pop
lea
jecxz
testb
psrld
cld
mov
cmp
or
gs
xchg
arpl
jle
mov
in
sbb
and
sub
aaa
call
mov
and
int3
das
xchg
inc
in
pop
loop
ret
loopne
out
enter
cmp
fildl
in
sub
add
mov
dec
push
adc
sub
push
gs
lds
ja
nop
xchg
cmp
or
and
lahf
dec
popf
enter
inc
int
leave
fwait
dec
scas
daa
mov
loope
insl
repnz
notb
xchg
test
es
or
fstpl
inc
xchg
jecxz
push
daa
jbe
sbb
mov
aad
rolb
inc
xor
stos
push
lret
dec
pop
or
push
or
subl
mov
inc
mov
sbb
xchg
test
lods
sbb
mov
mov
pop
cmp
mov
mov
out
inc
xor
pop
mov
jo
cwtl
idivl
pop
xchg
lret
pop
dec
add
movsb
call
push
mov
xor
inc
outsb
pushf
inc
mov
adc
pop
push
iret
lahf
push
add
jnp
push
lcall
out
dec
mov
imul
sarl
test
movaps
pop
push
add
jae
cs
sub
out
lods
aaa
inc
xor
pop
sti
add
push
adc
xchg
add
xchg
movsl
pop
dec
in
jo
pusha
hlt
cmpl
imul
xor
popf
daa
dec
test
repz
repnz
jl
lds
in
push
cli
adc
sbb
ss
sbb
bnd
cmc
cltd
std
xchg
cld
js
push
ljmp
test
rcll
jmp
divb
cld
xlat
pushf
daa
jg
int
mov
orl
pop
js
add
jle
enter
punpcklwd
rdpmc
ret
sub
aas
jae
cmpsl
inc
out
inc
mov
insl
into
fdivrs
jl
fwait
adc
mov
flds
out
rsm
dec
mov
addr16
mov
lock
mov
inc
push
insl
cmc
fnsave
sub
aas
sub
test
out
pop
adc
push
pop
xchg
push
and
jno
inc
aaa
push
cmpsl
fwait
ljmp
out
mov
cmp
sti
mov
mov
jae
outsl
mov
push
push
arpl
mov
in
aaa
xchg
inc
in
adc
xchg
aaa
sub
xor
cmp
scas
unpcklps
cmpsb
xorb
xchg
sbb
dec
in
mov
mov
push
pop
adc
fsubs
shl
in
lahf
icebp
add
pop
cwtl
fsts
insb
pop
test
je
mov
sbb
lcall
mov
insb
lcall
outsl
xor
rcll
push
cmp
enter
xchg
lret
xlat
or
out
sbb
mov
loopne
jecxz
and
jmp
cmp
dec
mov
fstps
and
orl
jno
aad
out
xor
adc
lret
push
push
cmc
mov
out
pop
mov
scas
daa
enter
inc
add
pop
mov
std
popf
ja
mov
and
cmc
aam
adc
cmp
imul
dec
jnp
cltd
adc
movsl
popf
popa
or
mov
out
dec
aaa
add
stc
rcr
repnz
sub
xchg
bound
shlb
in
out
mov
add
pushf
insb
rolb
fidivrl
or
out
or
pop
xchg
inc
inc
or
inc
mov
es
ds
stc
sub
sbb
jmp
sub
scas
stos
imul
sbb
pop
cwtl
xor
push
int3
imul
inc
jns
sarl
out
sbb
and
dec
or
xlat
sarb
cmp
stos
dec
pop
out
ss
sar
push
sub
flds
stc
loope
lret
xchg
dec
je
into
sbb
stos
test
push
ljmp
daa
leave
xchg
adc
mov
push
add
xchg
lock
lret
or
pop
dec
jns
jg
xor
sbb
hlt
out
mov
movsb
outsl
sbb
cmp
xchg
imull
dec
imul
inc
sbb
and
into
adc
dec
xchg
xor
js
movsb
adc
cwtl
inc
mov
mov
sub
add
inc
pop
ss
adc
and
mov
in
in
movsb
inc
popf
push
push
push
mov
cli
ror
jae
testb
lds
smsw
and
adc
xchg
push
push
cmpsb
pusha
push
aad
out
outsl
cmc
lret
dec
mov
xor
fdivrs
repz
insb
adc
xchg
push
lret
scas
push
shrl
fwait
push
out
and
dec
loop,pn
popf
xchg
fwait
cmpsl
xor
pop
jne
enter
mov
jo
pusha
jg
aam
push
pusha
xor
scas
daa
data16
sub
pushf
out
lods
push
jnp
inc
lcall
in
hlt
fcmovnbe
push
filds
ffreep
xor
mov
outsb
repz
out
lea
fsubp
fstp
imul
sarl
mov
inc
push
jns
pop
nop
adc
sub
lcall
xor
rclb
aas
fmuls
call
push
outsl
add
adc
xchg
cltd
inc
pop
enter
xchg
cmp
out
roll
sti
xchg
push
mov
insl
insb
push
in
dec
xor
jecxz
jnp
outsl
dec
insl
js
mov
lods
and
scas
popf
icebp
test
inc
js
cltd
pop
mov
xchg
fisubrl
fcomi
lcall
fbld
add
popf
in
call
or
les
in
stos
mov
add
mov
xor
push
repnz
les
inc
stc
push
rclb
cli
fsubs
inc
arpl
jp
mov
jnp
mov
dec
mov
push
xchg
lods
or
jecxz
lock
std
sbb
add
cmp
aad
mov
and
in
lret
cld
shlb
stos
push
or
ljmp
push
fnstenv
insl
fisubrl
push
xchg
add
stos
into
lret
out
out
jecxz
addb
fbstp
cmpsb
xchg
cld
repnz
mov
pop
fwait
jo
movsb
adc
lahf
mov
jne
js
or
mov
push
add
fdivl
int
fbld
testl
fistpl
inc
sahf
or
std
jmp
xchg
mov
sbb
add
mov
test
jb
cmpsl
js
or
xor
jae
adc
jno
fmul
mov
cmpsb
push
stos
insl
repnz
mov
pusha
dec
mov
int3
jp
in
or
sub
int
add
xor
imul
add
ss
dec
dec
pop
cmp
xchg
cmp
movsb
inc
xor
stos
cmp
pushf
test
or
inc
stos
jo
jb
nop
loope
and
lcall
push
lock
pusha
daa
push
daa
das
mov
inc
xor
sbb
xor
xor
xlat
fstp
xor
test
sbb
push
xor
cltd
pop
adc
pop
cmpsb
daa
xchg
mov
lods
pop
or
cwtl
and
cmpsb
pop
mov
cmp
xchg
cld
mov
and
out
jmp
stos
lods
add
pop
out
sbb
nop
lret
call
cmpsl
mov
inc
sbb
fdivrs
mov
mov
dec
pop
sti
pop
push
sbb
dec
jo
mov
pop
mov
adc
aad
imul
daa
pop
xor
pop
stos
sbb
xor
int3
jne
and
lods
movsb
pop
sub
aad
stos
test
dec
jmp
jb
lret
cmp
mov
stos
add
js
mov
sub
sbb
adc
sbb
fs
testb
xchg
push
or
imul
sub
loopne
pop
stc
popf
repz
mov
cmp
stos
jg
add
sbb
pop
or
push
inc
ss
ja
stos
inc
or
mov
test
fdivp
ja
cwtl
and
gs
pop
or
into
xchg
int
dec
stc
push
and
fidivs
cmp
or
fsubl
pop
pop
inc
imull
loop
pop
mov
add
push
mov
sbb
cld
bound
call
imul
push
mov
sbb
or
mov
addl
repnz
bound
test
call
and
shrb
sahf
decl
cmp
inc
lods
neg
out
and
sub
sub
xorps
out
sbb
icebp
push
pop
shl
divl
sub
cmpsl
cld
outsb
mov
cmp
outsb
or
clc
dec
frstor
cli
dec
mov
pop
shll
test
inc
or
xchg
or
push
and
push
add
sbb
int3
or
movsl
test
fisttpll
stos
insl
inc
loop
lret
imul
cmpsb
cmc
outsl
mov
or
out
push
ret
sub
leave
lcall
mov
mov
xchg
cld
inc
test
sti
test
adc
fldenv
mov
add
sbb
lea
cmp
dec
mov
push
jmp
fcom
movsb
xor
inc
icebp
mov
pop
cmp
movsb
push
mov
jbe
inc
mov
sub
push
out
loope
xchg
push
pop
mov
enter
sub
enter
lods
push
push
fiaddl
popa
shr
jl
push
repnz
fisubl
leave
dec
aad
pop
cmp
shrb
aaa
aad
pop
cs
mov
aaa
pusha
cli
std
movsl
xchg
into
cmpb
pop
dec
mov
pop
sub
jbe
push
movsb
test
ja
ja
pop
sub
adc
sbb
sbb
cli
cwtl
outsl
insl
push
leave
loopne
push
cmp
loopne
stc
je
out
ret
out
int
frstor
sbb
popf
popa
data16
pop
jb
pop
sub
xor
and
dec
add
cmp
std
insb
mov
lea
and
or
inc
fwait
adc
in
insb
jno
movsl
in
push
shl
adc
jecxz
lock
xlat
insl
push
stos
jae
outsb
aam
sbb
xor
jg
mov
jno
or
mov
int
repnz
jb
cs
mov
lock
xchg
andb
xor
pop
imul
mov
imul
cmp
test
sbb
nop
hlt
push
push
mul
push
fidivrl
mov
sub
xchg
ror
mov
cwtl
and
push
out
lea
mov
ss
jg
ret
cmpb
push
faddl
pop
mov
pop
push
dec
imul
jecxz
lods
lahf
and
cmp
hlt
adc
imul
jb
loope
add
mov
jns
mov
mov
mov
add
mov
cmpl
cmp
xor
or
add
int
aad
ds
xchg
ror
push
dec
xchg
aam
inc
push
fwait
and
loop
testb
add
xor
loopne
int3
jg
mov
xor
fadd
mov
sbb
jns
loope
aad
pop
cmp
push
jo
jl
mov
sbb
lods
testl
mov
adc
push
mov
cli
adc
pop
insl
fwait
dec
xor
dec
mov
imul
mov
xor
xchg
mov
or
pop
jb
adc
test
or
subb
cs
lock
fistpl
unpcklps
flds
imul
pusha
inc
xlat
shll
push
int3
xchg
pop
inc
les
data16
shlb
inc
inc
jno
and
and
in
jno
adc
xor
clc
loopne
dec
push
adc
add
dec
jae
xchg
xor
cmp
mov
add
cs
mov
adc
dec
or
clc
cmc
andl
jb
in
or
inc
dec
cli
pop
loope
cld
out
dec
sbb
hlt
and
stos
xchg
std
movsb
fwait
mov
pop
icebp
xor
sbb
rorl
stos
cmp
int3
icebp
aas
xchg
xchg
dec
fiadds
outsl
ret
lret
movl
je
arpl
fistps
es
je
sarb
in
xlat
outsb
adc
in
iret
mov
call
int3
push
adc
fidivl
or
jns
fstpt
enter
mov
cmpsb
dec
out
mov
andl
push
inc
inc
in
arpl
add
or
movsb
sub
cmpsb
fcom
stos
lds
jne
pushf
imul
cltd
je
lods
dec
popf
mov
lods
dec
pop
test
into
int3
mov
mov
notl
jne
xor
push
subl
xlat
loop
ds
inc
mov
add
xor
fsubs
cltd
push
pop
mov
cltd
jge
pop
mov
in
imulb
stos
pusha
outsb
add
xor
and
dec
jnp
scas
loopne
sbb
sub
cmp
cmpps
add
mov
jnp
xchg
imul
outsb
pop
fs
add
jno
mov
cld
add
ljmp
stos
in
and
repnz
add
dec
pop
shrb
sbb
jne
cmp
cld
rcrl
ja
out
mov
adc
fmul
cli
in
std
or
dec
call
adc
roll
adcl
and
fidivrl
xchg
andl
mov
or
aaa
jo
mov
xor
adcb
out
xchg
outsl
test
inc
push
jae
inc
dec
inc
mov
mov
push
rcrl
cld
fwait
mov
push
add
or
test
push
mov
cwtl
xorb
or
es
adc
js
imulb
pop
test
cmp
cmpsw
orb
test
lock
cs
mov
cmpsl
push
xchg
push
bnd
shll
pushf
sub
cmp
mov
aam
push
push
hlt
int
add
cmp
and
mov
sbb
testb
scas
lret
xor
mov
mov
stos
push
test
arpl
test
test
rcll
mov
addr16
inc
cmp
adc
nop
lret
test
sub
repnz
and
adc
inc
add
mov
frstor
test
inc
push
rcrl
ja
xchg
cmp
mov
push
xchg
or
cmpsb
mov
mov
cmp
lcall
xchg
adcl
xor
mov
xor
adcb
add
stc
lahf
repz
les
cmp
and
das
pop
pop
ljmp
push
xor
rcrb
adc
stos
xchg
imul
flds
cmc
stos
js
and
push
add
lods
adc
push
scas
lcall
and
mov
adc
enter
enter
mov
test
or
push
mov
and
out
sub
add
fcompl
push
jns
fxam
cmp
gs
push
into
fs
xor
mov
test
adc
adc
loope
pop
int
adc
or
push
inc
cld
xor
loope
repnz
loop
push
enter
push
int3
push
dec
in
cmpsl
cmpb
jae
lods
movsb
add
xrelease
xchg
shll
cwtl
popf
scas
add
jb
push
sbb
aaa
jp
xchg
out
clc
ret
pop
mov
aas
fmulp
push
fwait
nop
jge
into
scas
pop
std
fst
sbb
popa
cmp
pop
data16
cwtl
in
ror
out
adcl
fs
sub
jle
scas
popa
inc
xchg
mov
and
in
or
jp
lds
bound
xlat
clc
addr16
enter
dec
cmp
iret
xor
jl
ljmp
clc
jg
push
mov
repnz
nop
xchg
cli
stos
popf
jecxz
and
pop
jnp
pop
and
inc
divb
rcrl
pop
mov
adc
sahf
mov
or
loope
mov
pop
in
and
inc
inc
cwtl
push
mov
scas
inc
pop
cli
and
sbb
fcmove
push
fstpt
jle
into
mov
pop
xchg
mov
mov
leave
push
pop
push
ret
outsb
and
gs
fwait
xor
mov
shl
andb
mov
out
add
xchg
mov
loope
fsubs
vprotq
xor
iret
mov
call
inc
mov
pop
and
test
mov
cmpsb
mov
stc
jo
and
mov
cmc
lcall
movsb
pushf
fwait
rcl
push
cmp
lret
cmp
push
ljmp
jge
lret
cltd
adc
push
and
subb
or
xor
stos
lds
scas
cs
fstl
jg
dec
cltd
lods
out
daa
inc
xchg
test
popf
nop
xchg
adc
icebp
xchg
lret
loop
scas
aas
gs
push
sbb
fs
xchg
ret
xor
ret
jo
outsl
arpl
sub
mov
lock
leave
pop
repz
out
orb
cmc
jns
lock
jo
mov
lods
mov
lods
sarb
enter
cmp
test
rorl
adc
push
jl
pushw
add
insl
pop
push
xor
in
popf
les
jae
aad
jle
or
mov
test
orl
negb
or
push
dec
push
les
nop
adc
repnz
loopne
dec
stc
jbe
gs
inc
ret
clc
in
lret
sbb
stos
or
fdiv
add
xor
xor
loope
data16
mov
xchg
stos
lret
xor
daa
loop
ret
out
into
pop
jge
or
fsubrs
jae
add
int
mov
cld
rcrb
mov
or
stos
int3
ret
negb
adc
sbb
xor
xor
or
inc
fs
xor
sahf
sbb
push
dec
pop
pop
in
dec
push
fsubl
mov
loop,pn
das
fs
cmc
mov
adc
mov
mov
xchg
movsl
sbb
les
sub
shrb
sbb
sbb
hlt
mov
lock
and
mov
xchg
icebp
or
pop
loope
andl
adc
jnp
popa
test
mov
fidivrl
pop
ficomps
rorl
call
fdivrs
adc
pop
in
fsubp
ret
stc
outsl
mov
sub
mov
popf
mov
int
inc
stc
stos
ja
inc
xchg
andl
cmpsb
sub
jns
jmp
push
sub
aas
sub
mov
ja
neg
inc
fs
xlat
hlt
adc
and
push
mov
push
xchg
sarl
and
dec
mov
mov
add
int3
xchg
mov
push
outsl
lock
fdivr
mull
rorl
adc
xor
dec
iret
cli
lea
dec
imul
jbe
aaa
pop
mov
inc
sar
popf
push
mov
mov
out
addr16
ret
dec
out
ds
scas
scas
push
outsb
outsb
jmp
icebp
std
gs
xchg
enter
cmpl
pop
movsb
repnz
xor
jmp
xchg
jl
push
cmp
jle
xor
in
and
xor
mov
or
inc
dec
and
sti
mov
dec
mov
repnz
pop
add
pop
push
push
cmpb
mov
imul
cmc
jne
inc
sbbl
sbb
or
cltd
xchg
mov
leave
lret
and
lock
mov
clc
add
inc
or
rcrb
iret
pop
inc
adc
in
inc
inc
ds
pop
adc
add
mov
push
lret
sub
adc
repz
roll
mov
sbbb
jecxz
xchg
mov
mov
mov
lcall
shl
mov
mov
adc
and
pop
cmp
mov
iret
xchg
push
adc
ret
jl
or
xlat
sarl
enter
adc
lret
fstp
aad
xor
lahf
rcrl
inc
and
into
adc
addl
sbb
dec
xor
call
push
idiv
popf
sub
daa
inc
movsl
or
stos
cmp
out
ret
mov
mov
mov
mulb
mov
ss
jmp
dec
in
mov
sbb
lock
and
in
dec
das
pop
mov
ret
shrl
fcomps
xchg
cmpl
xor
dec
jge
mov
mov
push
mov
lock
aas
cltd
mov
shrb
mov
mov
movsl
push
dec
or
insb
ret
insb
cbtw
hlt
fadds
es
popf
les
mov
stos
out
push
sahf
data16
push
mov
loope
inc
sbb
lahf
daa
dec
stc
cmpsl
popa
inc
jmp
sar
xchg
imul
pop
or
repnz
into
ja
dec
dec
push
call
dec
mov
or
int
inc
scas
sbb
dec
call
inc
fsubl
cs
jg
sbb
push
mov
gs
fmull
or
add
jge
aas
push
in
ss
jb
sub
roll
xor
in
ret
rcrb
leave
lea
xchg
and
into
sub
mov
jne
and
ss
subl
sti
test
dec
pop
rcrb
jle
pop
jp
lahf
sub
movsb
test
ja
or
sbb
push
into
pop
gs
mov
aaa
sub
rol
push
arpl
push
add
jb
xor
push
adc
inc
ficompl
pop
mov
dec
cmpsb
add
pop
popa
adc
adc
adc
xchg
mov
fwait
cmp
mov
icebp
fwait
into
mov
mov
add
clc
mov
in
pushf
xorb
mov
pop
jmp
nop
test
cmpsl
sub
adc
pusha
mov
jle
mov
jns
mov
sti
xor
mov
imul
clc
js
lock
inc
dec
mov
fsubrs
inc
mov
ds
push
jnp
mov
js
test
fisttps
sahf
lcall
xchg
adc
mov
and
push
or
pop
outsb
jp
or
add
movsl
jo
mov
xchg
push
and
add
aas
or
out
adc
js
aad
fcmovnu
les
imull
inc
push
stos
or
dec
movsl
lcall
daa
int
mov
add
mov
jno
rcrb
cld
and
insb
arpl
and
xchg
iret
into
jnp
sub
mov
mov
adc
nopl
in
or
mov
and
push
ficoms
xor
inc
jb
aaa
iret
jl
push
push
and
push
gs
sahf
mov
aaa
or
clc
cld
test
out
mov
mov
sub
mov
mov
pop
inc
inc
decb
push
cltd
lods
fs
scas
lcall
cmp
sub
and
xchg
add
rcr
nop
xor
ret
pop
pop
sbb
in
ljmp
fidivs
sub
stos
push
pop
push
or
inc
lahf
aam
cli
dec
icebp
mov
pop
bound
nop
and
flds
push
pop
xor
mov
cmp
mov
ficomps
mov
sub
xor
daa
ds
subl
push
repnz
insb
mov
ja
pop
adc
mov
movsl
stc
push
outsl
sbb
xchg
leave
mov
sbb
or
xchg
xchg
rorb
pop
fstpl
movsb
add
imul
dec
pop
fnstenv
out
pop
test
jmp
pop
lock
fucomip
mov
cmp
jmp
in
mov
jo
insl
or
mov
in
das
aad
pop
jns
adc
xor
push
mov
mov
pop
sarl
pop
out
pop
leavew
test
jge
add
inc
fdivs
out
sbb
inc
xor
in
popf
enter
movsl
ss
push
add
xor
cmp
or
cmp
xchg
sbb
jno
lods
call
lock
adc
decl
xchg
mov
inc
mov
add
stc
es
push
mov
out
and
xchg
mov
insb
adc
xchg
xchg
mov
lea
aam
dec
cmp
daa
mov
je
mov
loop
filds
ds
adc
mov
es
popa
mov
dec
dec
xlat
incb
push
stos
or
stc
clc
add
test
test
mov
fsubs
imul
lods
imul
pop
dec
insb
hlt
or
xchg
pusha
ds
sub
cld
std
mov
sub
mov
adc
xor
inc
subb
arpl
mov
xor
mov
inc
jb
mov
sub
stos
outsl
fsubrs
adc
test
aas
fmull
loop
psllq
mov
mov
cmp
mov
js
mov
jp
push
insl
cmc
xchg
jbe
stos
aas
fidivl
mov
or
andl
inc
jo
addl
pusha
mov
mov
pop
je
imul
pop
jmp
jecxz
jge
and
mov
icebp
sub
xor
in
xor
arpl
jecxz
xor
sub
mov
xchg
int3
sbb
lret
dec
mov
push
pop
adc
hlt
push
jge
mov
test
adc
pop
mov
push
loop
pop
pop
xchg
popa
cmp
popa
inc
push
cmp
and
js
mov
mov
pop
push
jne
fldcw
mov
push
pop
sub
std
mov
adc
adc
iret
mov
lds
shrb
repnz
addr16
xchg
ficoml
adc
pop
cli
ljmp
jnp
ret
aaa
mov
fists
in
mov
iret
cmp
aaa
mov
mov
mov
jnp
dec
mov
bound
insl
dec
cmpsl
mov
stc
mov
subl
or
xchg
mov
xor
pop
pop
cs
fwait
test
nop
add
xor
filds
inc
sbb
ret
cltd
shlb
sar
rclb
cltd
out
pop
std
loope
js
js
jmp
xor
jl
xor
pop
add
leave
shll
icebp
sbbb
and
sbb
inc
jecxz
in
mov
fstpt
add
xor
mov
je
xchg
icebp
mov
rorl
das
push
cltd
adc
mov
lods
mov
popa
mov
cli
ja
ds
gs
mov
cmp
stc
repnz
jnp
inc
in
stos
scas
push
sbb
inc
adc
sub
sub
scas
lahf
jne
pop
call
rol
inc
rcrb
ret
xor
dec
push
insl
hlt
jecxz
mov
aas
fmull
jnp
adc
js
in
add
mov
not
ret
fnstsw
cld
test
out
pop
in
pusha
rcll
pop
cmpsl
push
xorb
adc
pop
mov
mov
stc
scas
add
sbbb
unpckhps
pop
lret
in
stos
or
aam
sub
fdivrs
xchg
jle
or
or
sbb
sub
test
repz
adc
mov
or
rolb
pop
out
dec
sbb
into
ljmp
pop
cli
sub
inc
mov
mov
sub
les
inc
repz
pop
std
pop
lods
sti
stos
push
in
add
mov
mov
pop
cmp
xchg
cmc
lock
insl
lods
adc
gs
mov
pop
pop
repnz
cld
movups
xchg
xchg
mov
pushf
xchg
test
into
mov
cld
xchg
outsl
push
pop
mov
addb
and
fwait
sahf
mov
test
jecxz
cmc
sar
pop
jle
stos
adc
mov
sub
cmp
mov
mov
lea
in
jp
sti
cltd
mov
mov
jae
bound
pushl
add
lods
stc
in
nop
les
decl
jnp
add
xchg
adc
add
sub
aad
les
faddp
outsl
test
cltd
jecxz
jmp
push
xchg
loopne
add
jge
nop
mov
push
movsl
adcl
push
mov
jge
dec
push
adc
popa
adc
cmpsl
xchg
aas
and
in
xchg
mov
mov
xor
stos
sahf
lahf
inc
iret
mov
stc
cmc
and
fxam
call
mov
enter
out
adc
pushf
insb
push
push
fiaddl
adc
add
cmp
shll
jo
mov
and
mov
push
push
movsl
mov
rcll
in
jmp
call
in
add
mov
push
inc
mov
jmp
push
roll
jnp
adc
cmp
adc
push
push
out
add
pushf
add
push
addr16
popa
mov
mov
pop
pop
fucomip
popf
arpl
rcrb
out
mov
inc
je
mov
jp
test
dec
btcl
fadds
arpl
hlt
inc
jo
movsl
push
sbb
dec
cmpsb
into
inc
inc
outsb
addr16
ja
add
jns
data16
in
jmp
push
add
or
mov
sub
in
mov
sbb
call
out
cmp
shlb
ret
cmpsl
xor
mov
hlt
mov
loop
stc
mov
test
fs
pop
jg
fidivs
inc
cld
cs
adc
and
xchg
mov
aad
rcr
and
push
fs
mov
je
dec
movsl
mov
push
out
lret
jb
out
daa
xchg
xchg
xlat
add
push
add
xor
xchg
les
mull
xor
repnz
mov
lea
xlat
repz
or
out
xchg
mov
cmp
fnstenv
and
bswap
jnp
mov
mov
mov
cli
cld
nop
test
loop
push
out
xchg
je
scas
shrb
mov
scas
aaa
aaa
cli
mov
and
je
or
lock
icebp
iret
scas
sbb
std
pushf
sbb
mov
adc
xchg
incl
add
inc
fcomip
popa
ficoms
jb
mov
lcall
pop
cmpsb
xchg
mov
call
les
dec
xchg
bound
clc
push
inc
mov
loop
mov
push
loopne
inc
and
jbe
pop
aad
mov
dec
inc
andb
cmpsl
mov
cmp
mov
mov
fsubrp
mov
inc
setg
push
lahf
test
mov
push
adc
adc
test
or
aas
xchg
fld
out
pop
mov
or
test
xlat
les
inc
aas
add
lock
cmp
push
cld
call
add
cmp
mov
sbb
test
push
pop
and
outsl
lret
push
cmpsb
pusha
ret
jle
mov
jge
movsb
test
cmp
ret
and
iret
or
sahf
mov
fidivs
scas
mov
adc
imul
inc
incl
mov
test
fnstsw
push
pop
pop
das
subl
and
dec
in
push
inc
lea
aaa
and
in
data16
mov
and
sti
push
sbb
mov
ss
push
sbb
les
push
enter
sub
aaa
js
adc
daa
in
cmpsb
shr
jl
jno
xor
punpckhwd
shrb
jl
add
int
ds
push
enter
addb
jle
ds
repnz
in
addb
xor
mov
test
scas
adc
jb
fsubrl
repz
lahf
roll
inc
and
and
push
pushf
add
sbb
les
arpl
xorl
out
out
mov
cmp
movsb
dec
jmp
daa
xchg
inc
push
pop
mov
xor
ljmp
pop
dec
test
mov
lods
jecxz
dec
xchg
or
mov
xor
sub
sub
jae
scas
push
mov
sub
pushf
lods
cld
popa
pop
fldcw
ss
dec
cmpsl
std
pop
jb
xlat
and
rcl
ds
xchg
add
dec
inc
push
fbstp
es
aam
sbb
shll
xlat
lods
add
shlb
jecxz,pt
and
pop
and
or
psrlw
mov
sub
mov
push
icebp
int3
push
fstl
imul
xchg
std
inc
or
xchg
loop
pop
sbb
cwtl
dec
jne
sub
scas
lea
movsl
dec
leave
add
xchg
hlt
cmc
mov
xor
stc
pop
or
aad
aaa
ficoml
cmpsl
inc
pop
repnz
push
push
jnp
xlat
adcl
inc
push
push
xor
pop
popf
adc
mov
push
jg
lods
jno
push
es
loopne
daa
mov
in
xor
scas
adc
dec
lahf
push
stos
pop
lods
icebp
add
stos
push
imulb
imul
ljmp
fisttps
mov
outsb
pop
dec
subb
cmp
dec
inc
mov
xchg
pop
cli
scas
adc
pop
sub
loope
jg
pop
in
jle
adc
cmp
cmp
aaa
icebp
les
mov
insb
int3
jns
lods
push
or
push
scas
jecxz
add
shl
push
into
cmp
mov
testl
ss
repz
xor
cmpsb
sub
add
mov
fs
mov
dec
fbstp
jp
int
push
and
roll
push
adc
xchg
xchg
nop
add
jne
xchg
test
jmp
nop
fwait
arpl
cs
adc
lea
adc
xchg
arpl
iret
inc
jecxz
pop
or
subb
add
sub
movsl
jb
push
das
jbe
mov
cmc
in
inc
jmp
sub
and
shlb
insl
data16
sbb
cmpsl
nop
xchg
leave
mov
int
xlat
jle
cmp
xor
adc
daa
sbb
or
push
jecxz
loopne
push
push
call
pop
iret
into
mov
push
fiaddl
or
inc
sub
and
dec
inc
add
sub
test
mov
mov
cmpsl
adc
xchg
inc
das
icebp
and
push
movsl
jns
push
sbbl
aad
aam
or
nop
pop
fs
les
jg
out
push
mov
sbb
push
adc
ss
fdiv
dec
or
scas
dec
xchg
cmp
bound
scas
pop
mov
xlat
in
sub
hlt
out
shll
enter
jne
fldl
mov
test
leave
loope
jnp
inc
cmp
push
xchg
test
adc
lods
bound
pop
ljmp
sub
or
ret
push
ror
jecxz
ficompl
inc
test
cli
or
sbb
call
lret
in
loope
in
hlt
cmpsb
imul
pusha
or
lahf
in
stos
fsub
mov
inc
sbb
aam
pop
lret
xchg
or
mov
cmp
inc
pop
and
lea
sub
pop
gs
les
jb
jns
pop
je
ret
jmp
lods
jne
xchg
add
cmp
add
xlat
testb
shld
popa
xchg
jns
jmp
mov
popa
lds
repz
es
add
jne
sbb
or
pushf
gs
pop
mov
std
rorb
xchg
mov
lahf
push
pop
xor
cld
sti
xor
mov
add
jae
pop
push
inc
outsl
add
out
sbb
jbe
xor
and
or
pop
scas
jecxz
test
or
pop
or
inc
cld
inc
and
dec
into
sub
mov
out
inc
push
jmp
div
out
adc
add
sbb
mov
addl
sbb
insb
mov
icebp
dec
inc
jo
popa
arpl
mov
js
shrl
mov
fidivl
cmpsb
and
dec
jbe
fisubl
push
lock
loop
jmp
inc
shlb
sbb
push
push
dec
adc
cmp
pop
mov
loop
cmp
and
popf
pop
cld
xor
aas
sub
bound
xchg
pop
xchg
aaa
pop
mov
push
ss
inc
inc
cltd
jno
fs
inc
das
lods
in
dec
inc
pop
icebp
mov
and
jecxz
or
jg
nop
popf
repz
cld
inc
jmp
pop
cld
lret
cmp
xor
jo
mov
fisttps
cltd
push
out
mov
sbb
jp
cwtl
repz
sbb
mov
or
xor
cli
xchg
cmp
clc
push
loopne
lods
stos
iret
push
and
loopne
out
lret
and
jne
xor
nop
inc
dec
sbb
pop
insl
cmp
call
push
jne
sub
add
lcall
pushf
sbb
mov
fcomp
mov
dec
outsb
push
popa
mov
in
inc
movhps
std
in
icebp
and
mov
fsubl
arpl
jle
mov
cmc
mov
out
les
xchg
sbb
mov
in
sub
inc
xchg
mov
mov
pop
in
loop
and
push
push
jle
mov
aad
xor
in
cmpsb
cmove
clc
shlb
sub
lahf
cmpsb
es
xchg
ds
cmp
dec
int
imul
setnp
or
repz
inc
cli
sub
fnstcw
push
fsubr
xor
mov
mov
push
lret
test
pop
cld
rol
pop
imul
push
ret
xchg
fidivrs
ss
adcb
jne
cmp
fidivrs
pop
jno
loope
roll
fwait
test
in
xchg
mov
push
fldt
mov
inc
insl
inc
loop
jle
in
stos
jo
add
lahf
sub
das
rcrb
in
fiaddl
and
repz
sub
jge
call
int3
mov
and
loop
in
and
repz
sbb
mov
scas
jle
xor
jmp
or
dec
lods
add
ficomps
sub
add
das
dec
mov
repz
xchg
mov
adc
jno
lret
adc
scas
loopne
and
sbb
inc
incl
add
outsb
imul
std
mov
xchg
lock
lret
pop
add
movsb
adc
and
sub
ss
xchg
fcoml
inc
inc
add
cmp
mov
push
mov
iret
sub
jg
xchg
mov
sbb
inc
dec
into
mov
std
and
dec
mov
out
stc
jmp
cs
xor
stos
jne
jg
popa
div
div
cmpsl
cmp
add
xchg
add
and
and
sub
ljmp
test
jo
add
ja
xchg
movsb
sbb
aaa
xchg
ret
dec
out
fbld
jl
scas
mov
pusha
add
sub
push
pushf
adc
xchg
das
pop
cmp
dec
sahf
icebp
lods
adc
idivl
out
add
pop
mov
mov
testb
push
sub
cmp
xor
pushf
xlat
mov
cmp
fimull
ja
pop
test
mov
in
sub
pusha
or
mov
and
addr16
shlw
imul
test
shll
dec
mov
jnp
popf
and
cmc
ret
daa
mov
xchg
aaa
sub
xchg
shrb
fs
out
call
push
ret
ljmp
push
movsb
add
je
lcall
push
sti
subl
mov
imul
mov
rcl
scas
clc
orl
cmp
pop
adc
mov
adc
cltd
imul
sub
push
fisttps
push
sub
xor
insl
push
cmpsl
inc
adc
pop
dec
push
nop
cwtl
mov
pop
je
vmwrite
jmp
aas
dec
mov
cmp
pop
inc
je
inc
dec
int
push
and
mov
or
ljmp
int
std
cmpsb
sbb
in
sbbb
scas
and
sbb
pop
fbld
enter
enter
add
pminub
jp
push
test
pop
movsl
pand
jmp
mov
daa
sbb
and
lea
sarl
movsl
xor
push
movsl
and
ret
add
add
and
movsb
xchg
nop
pop
outsl
push
dec
leave
lods
pop
jne
add
mov
scas
imul
aad
cld
nop
outsb
into
imul
cmp
sarl
jl
bound
call
jecxz
out
loopne
ja
pop
mov
rolb
or
lahf
xor
adc
and
jae
lret
dec
rcr
test
shl
push
adc
inc
ljmp
jnp
inc
pop
mov
movsl
in
sbb
push
subl
jnp
in
or
adc
mov
arpl
fistl
cmpsb
dec
mov
stos
and
push
outsl
ja
pop
fstps
xchg
es
add
call
andb
out
cmp
dec
dec
inc
movsb
pusha
dec
and
cmpsb
movsb
shl
pop
sub
hlt
imul
adc
imul
sti
iret
fwait
ret
push
mov
xchg
pop
daa
aam
std
pop
mov
out
xchg
xchg
dec
mov
popa
add
jp
sbb
add
movsl
insl
mov
mov
fs
sub
out
jae
add
hlt
cs
sub
out
ljmp
sbb
in
je
cmp
scas
mov
mov
fdivrp
sbb
mov
mov
adc
fs
jnp
sahf
cmp
push
repnz
inc
dec
pusha
mov
inc
leave
mov
adc
dec
test
rcll
je
push
mov
nop
stc
std
sbbb
test
gs
adc
insl
cmp
mov
push
es
out
out
je
cmpsl
sub
jno
cli
mov
fdivs
cmp
fisubs
cmp
add
jmp
jle
and
mov
imul
xchg
push
js
adc
sbb
test
or
or
inc
cmc
xchg
popf
adc
scas
jo
add
shrl
push
adc
mov
fs
mov
loop
dec
shrb
dec
stos
loop
mov
andb
leave
or
dec
inc
sbbb
lea
fxam
and
add
and
rol
rcl
jecxz
sub
push
subb
and
push
enter
loopne
cmc
jb
push
cmp
popf
adc
sbb
sub
das
cmpsl
ja
sbb
jecxz
mov
outsl
sub
test
xor
dec
clc
ret
inc
push
and
lahf
mov
dec
movsl
dec
sbb
cmp
or
mov
dec
cmp
out
filds
sahf
aas
test
inc
test
cmc
cltd
dec
pop
dec
jne
icebp
outsb
pop
sbb
fs
outsb
xchg
insb
sbb
lock
adc
mov
sbb
fisttps
jne
sbbl
test
les
popa
cmp
lcall
jne
jo
mov
movsb
push
xor
pop
cmp
loope
dec
cmp
xlat
push
adc
jnp
movsb
sbb
aam
int
sbb
mov
adc
loope
int3
jecxz
aaa
aas
dec
jbe
mov
popf
or
mov
lods
movsl
lods
push
mov
enter
add
adc
jecxz
faddl
xor
jns
or
in
in
pop
inc
inc
in
xchg
loope
mov
push
imul
or
fisubl
cmp
imul
sti
insl
xor
lods
out
cwtl
pop
push
pop
dec
mov
movsl
enter
xchg
ds
push
ja
arpl
addr16
ds
add
mov
jns
repnz
cmpsl
push
cld
dec
xchg
cmpl
mov
and
mov
mov
pop
addb
scas
push
pushf
adc
fsts
or
loope
or
and
mov
xchg
popl
cmp
test
stos
push
iret
sahf
inc
xor
fbld
add
out
loope
cmpsb
clc
mov
push
stos
sti
aam
adc
jne
pushf
dec
sub
pop
ss
dec
movsl
in
dec
fisttpl
pop
xchg
sub
scas
das
fs
ficomps
mov
nop
pop
and
jl
or
push
jp
adc
in
mov
jbe
mov
dec
pusha
scas
repz
jle
enter
aaa
inc
insl
movsb
mov
into
out
sub
out
fbld
out
sub
scas
ret
mov
and
das
insl
jbe
cmp
dec
mov
repz
sbb
iret
sti
xchg
rclb
data16
push
sbb
sbb
mov
shl
pop
mov
cmp
cmp
mov
ret
mov
or
loope
int3
mov
xor
out
xor
repnz
test
pop
sbb
and
movsl
shrb
sbb
shll
inc
jbe
xor
out
xchg
adc
and
lea
sub
xor
lods
iret
mov
dec
cmp
mov
hlt
mov
popa
cmpsl
nop
cwtl
ja
call
jmp
inc
lret
test
cmp
mov
pop
lcall
int
int3
and
ja
pop
add
clc
dec
push
jecxz
aad
dec
cmp
dec
mov
ja
adc
mov
and
aaa
jle
loopne
sarb
aaa
add
dec
sub
testb
xor
pop
mov
addb
dec
mov
stos
adc
ds
shlb
mov
aam
cltd
cmp
out
enter
jb
push
ret
cmp
ss
mov
cmp
fs
xchg
out
rcrb
mov
push
and
push
fsubrl
mov
push
xchg
sub
mov
into
stos
cmpsb
daa
mov
cld
xor
jp
sub
pop
rcll
jmp
je
mov
jle
icebp
add
mov
lahf
add
sub
adc
inc
push
mov
addr16
jno
dec
xor
mov
mov
sub
gs
mov
dec
cmp
aad
or
clc
out
data16
xchg
addl
cld
mov
popa
cmp
xchg
stos
lods
cmp
xchg
xchg
mov
sbb
test
jmp
mov
jl
lret
dec
test
jmp
loopne
jmp
dec
leave
sub
es
add
das
jg
mov
ret
dec
repnz
imul
pop
dec
out
in
adc
out
cmp
inc
pop
add
mov
adc
cmpsl
xorb
in
jnp
adc
mov
daa
jmp
mov
idivb
int
pop
push
jge
mov
jbe
xlat
lea
vmovaps
sub
mov
imul
and
cltd
dec
xchg
jmp
dec
xchg
inc
dec
lcall
or
and
fildl
dec
jnp
mov
bound
cmpsl
jbe
adc
stos
lock
dec
mov
xchg
xor
sub
pop
ret
xchg
inc
bnd
movsb
adc
pop
test
cmp
mov
das
xor
adc
xchg
and
sbb
xor
push
mov
mov
lret
or
jge
sbb
aas
xchg
sahf
push
pop
xchg
into
add
test
sti
mov
sub
fcmovbe
sbb
cmpsl
scas
getsec
outsb
inc
cmp
push
or
test
sahf
and
sbb
sub
into
fs
push
repnz
outsb
lds
xchg
adc
mov
inc
lods
or
ja
and
mulb
mov
xor
outsb
stc
adc
pop
adc
out
hlt
jl
add
and
cmp
pop
repnz
stos
mov
add
imul
fcompl
stc
dec
les
mov
leave
cmp
pop
das
enter
std
jno
es
ret
xchg
push
xchg
sub
in
push
mov
fisubrs
dec
adc
mov
inc
push
arpl
pop
int3
jecxz
adc
push
jno
out
inc
push
je
sbb
pop
add
xchg
sbb
mov
movsl
fisubrl
test
shll
jns
cmp
in
dec
frstor
loope
lret
shll
loope
repz
jns
negl
cld
add
loop
das
push
sbb
scas
icebp
or
int
sub
insl
jg
push
xor
movsb
test
testb
or
push
fstpt
dec
pop
sbb
cmp
icebp
les
les
sarb
test
sbb
push
mov
fcoml
daa
sbb
aaa
cmp
xor
mov
imul
inc
dec
xchg
nop
inc
xor
fisubrs
mov
aaa
and
mov
mov
jns
add
xor
mov
loope
pusha
inc
or
inc
sti
adc
sbb
lahf
pop
or
pop
mov
or
test
enter
je
movsb
es
push
xor
jp
iret
xchg
and
push
out
rclb
xchg
sbb
push
jge
je
hlt
pushf
rol
test
mov
jle
or
pop
js
imul
xlat
xor
popa
in
xchg
mov
loopne
in
stos
sti
and
push
cmp
xchg
adc
enter
jl
ja
inc
repnz
mov
cmp
mov
lods
movsb
out
repnz
arpl
push
leave
push
leave
mov
jl
cwtl
push
push
test
aad
fld
mov
stos
repnz
movsb
xchg
and
out
arpl
adc
jp
imul
cmpsb
fstpl
stos
xchg
sahf
dec
pusha
into
data16
gs
roll
pop
imul
sub
ss
or
filds
aaa
enter
mulb
fisubrs
ljmp
mov
sub
jg
xchg
cmp
cwtl
in
add
sbb
xlat
sub
sub
or
rcll
fistpll
ss
hlt
scas
adcb
mov
cli
adc
lahf
ljmp
mov
loope
mov
sbb
jo
int
lods
mov
das
push
negl
stos
fidivs
mov
loop
mov
jmp
mov
in
lods
dec
cmp
inc
movsb
jb
cmp
adc
subb
mov
ds
mov
add
testl
out
xchg
xchg
lea
push
jb
sbb
test
les
mov
iret
adc
inc
das
mov
cltd
lahf
push
jecxz
loopne
cmp
arpl
inc
pop
lcall
hlt
xchg
adc
fcoml
cmovnp
into
repnz
xchg
sbb
in
mov
lods
cmp
cmp
mov
xchg
in
sbb
mov
ja
mov
sub
out
mov
clc
mov
lods
aaa
lods
leave
enter
inc
aas
mov
setg
xchg
xlat
sub
xor
mov
push
aaa
pop
mov
popf
xchg
xchg
insb
cmp
xor
out
aam
adc
mov
jg
inc
dec
mov
fwait
addr16
pop
pop
jae
pop
dec
mov
lods
cmp
sub
iret
jns
imull
test
imul
push
fs
mov
xor
cmovs
sub
mov
xor
push
push
lock
cwtl
inc
push
arpl
sti
mull
xor
frstpm(287
popl
in
or
sbb
in
data16
xor
xor
inc
sub
xor
inc
mov
push
cmp
insb
push
shll
popa
push
pop
test
test
pop
or
out
out
fxsave
leave
in
jmp
popa
out
xchg
outsl
jle
test
pop
xchg
scas
sbb
dec
mov
jnp
mov
ss
xchg
and
test
pop
shrl
or
in
mov
addr16
jb
mov
lods
faddl
mov
rcrb
dec
js
jno
and
push
pop
iret
jg
stos
fldt
sbb
test
rclb
scas
mov
jmp
in
sub
int3
pop
mov
ja
gs
xor
movsb
ljmp
in
mov
jo
and
outsl
xchg
xchg
mov
adc
dec
daa
add
in
sbb
pop
cmp
shrb
mov
pusha
shlb
mov
sub
stos
or
adc
mov
xor
or
sub
dec
std
dec
pop
ds
loope
cmp
in
pop
dec
imul
movsl
pop
cltd
jg
pop
daa
and
fisttps
arpl
cmp
inc
jecxz
xorb
cltd
jno
mov
sub
sub
in
stos
bound
pop
addb
and
cmc
jnp
push
and
jbe
mov
sub
cmp
lods
sbb
push
popf
push
in
das
cmp
add
jno
xlat
xchg
lods
lods
or
cmp
out
cmpsl
enter
daa
sbbb
xchg
jg
scas
xor
dec
test
lds
xlat
daa
push
or
rcll
mov
jbe
and
or
inc
lock
mov
mov
rcrl
jae
push
mov
push
or
pop
mov
sub
mov
cmpsl
push
cltd
inc
or
xchg
cli
inc
fsubrl
cmp
fstl
les
pop
sub
xchg
lahf
jae
in
dec
lret
mov
xor
loop
jno
mov
cmp
cmp
pop
mov
xor
pop
xor
or
push
ds
mov
mov
and
in
cmp
xlat
pushf
insl
and
xchg
cmpsb
inc
fs
or
and
rorb
test
xchg
push
iret
xor
inc
dec
sbb
in
pop
scas
out
pop
loope
icebp
and
pop
jne
les
mov
movswl
lods
xchg
incb
out
fimuls
addb
shl
cmp
lea
add
sub
bound
sbb
loope
call
and
cmc
or
pushf
mov
push
aaa
jl
ror
add
dec
pop
sub
sub
cmp
loopne
and
jmp
mov
lock
xchg
xchg
xchg
mov
or
push
sbb
notl
mov
adc
jbe
push
shrl
aaa
aaa
mov
es
movsb
dec
rcrb
aaa
mov
js
loop
lods
int
pusha
xchg
pop
and
repz
mov
mov
adc
movsb
pop
cmpsb
addr16
push
mov
mov
aas
test
lret
cmp
dec
cmc
cltd
or
adc
cmc
cmc
sub
inc
mov
jge
and
mov
mov
adc
lret
mov
cs
rcr
ror
xor
std
add
cmp
jg
adc
add
xchg
sub
adc
xchg
je
loop
inc
mov
fmul
andb
push
or
or
stos
push
mov
stc
inc
aas
bound
xchg
je
enter
dec
pop
cld
mov
imul
or
or
fadds
lods
cld
and
mov
fdivs
shl
cmp
push
movsb
add
ret
ljmp
fistl
arpl
aam
cmpl
xlat
scas
stc
fisttps
out
xchg
roll
sarl
cld
or
cmp
stos
sub
mov
hlt
nop
jmp
in
movsb
cli
lret
mov
mov
xchg
pusha
shrl
into
ret
sbb
push
insl
add
lcall
sbb
xchg
cmp
mov
movsb
push
xchg
push
sbb
das
sub
ret
scas
and
adc
repnz
movsl
rorl
testl
dec
cmpsb
dec
push
mov
inc
rcrb
fstpt
dec
popa
lret
mov
sti
or
fldt
add
xchg
push
ljmp
sbb
filds
lds
nop
xchg
outsl
xor
jbe
mov
mov
xor
xor
shl
sbb
push
adc
adc
pop
xchg
int3
arpl
std
fs
in
rep
into
lret
loopne
jae
jmp
lea
out
jp
adcl
adc
lret
xchg
xchg
ds
add
ss
cmp
jno
add
xlat
movsb
fcomps
sbb
sbb
jne
xchg
cmp
mov
mov
mov
and
aad
negb
ljmp
add
stc
mov
sbb
test
pushf
fildll
shr
mov
dec
stos
loop
aas
mov
iret
outsl
dec
lods
roll
jb
push
jnp
xor
stos
and
jmp
push
push
ret
rcrl
out
sub
lahf
cmpsb
insb
jle
mov
xor
movsl
pop
sbb
push
and
in
imul
push
out
jne
xor
test
push
in
in
mov
add
pop
cwtl
mov
xlat
cmc
sub
xor
jmp
mov
jbe
cmpsl
xor
sahf
or
or
lock
xor
xchg
test
sbb
lds
mov
andb
lock
dec
mov
stc
xlat
imul
jnp
jae
icebp
ss
out
imul
ljmp
pop
pop
xlat
cmpb
fcom
fnstsw
scas
pop
out
fstp
data16
mov
mov
dec
popf
add
testb
pop
push
xor
fs
mov
pop
cmpsb
mov
inc
mov
jbe
stos
mov
dec
outsb
xchg
jno
jg
into
dec
xchg
xorb
fnstenv
mov
or
fst
dec
pop
out
in
popa
ss
jmp
dec
icebp
adc
sub
xchg
xor
cmpsl
ljmp
mov
test
fwait
cmp
pop
clc
test
pusha
xchg
stos
subb
add
xchg
pop
fmul
jnp
xchg
pop
fisubs
push
into
fsubrs
push
repnz
popf
jge
std
pop
xchg
xchg
out
jne
jmp
ffree
sub
mov
jbe
arpl
icebp
test
dec
into
dec
sbb
jg
idiv
inc
test
arpl
pop
fcmove
in
xor
jae
jb
outsl
sti
sbb
leave
jnp
movsl
xorl
aad
inc
add
fcmovnb
sub
cmp
mov
sub
adc
sbb
mov
push
jno
push
xor
add
xor
push
xchg
mov
pushf
and
pop
sub
mov
fdivrs
icebp
xchg
pop
dec
pop
iret
xchg
and
fwait
outsb
shlb
cld
or
push
xor
lahf
dec
dec
cmp
mov
mov
jmp
mov
in
outsl
xor
jae
adcb
xchg
adc
rol
ja
xchg
call
add
add
std
or
lods
aas
sbb
mov
stc
cmp
leave
cwtl
out
imul
ss
jmp
xchg
sbb
lret
push
cmp
repnz
cmp
cld
cli
adc
xor
push
mov
pushf
mov
or
roll
loope
and
sbb
pop
xchg
cmp
mov
mov
or
dec
push
repz
mov
lcall
iret
lds
adc
loopne
dec
out
fdivp
xor
aaa
mov
aas
jecxz
es
mov
mov
xchg
xchg
cmp
or
int
cmp
sub
dec
jne
fbld
mov
es
outsb
and
fnsave
test
fisttpll
fwait
sub
aaa
xchg
cli
push
aas
daa
xchg
mov
decb
test
jle
test
rcr
roll
lods
adc
fnsave
mov
data16
ret
pop
mov
adc
dec
aam
subb
ljmp
sbb
cmp
icebp
in
mov
pop
xor
aad
jge
ror
pop
inc
mov
enter
dec
ficompl
and
cmp
test
icebp
repnz
xor
insb
out
pop
jecxz,pn
adc
fdivrs
dec
dec
jmp
push
rcr
and
mov
push
mov
mov
lret
cmpsb
repz
jle
pop
add
mov
pop
jmp
fldt
repz
xor
popa
adc
adc
pushf
lods
sahf
ljmp
add
sti
stc
fadd
push
or
push
push
jecxz
sarl
jo
sbb
pop
ret
fs
mov
das
insb
and
adc
push
stos
push
mov
jge
fbld
sub
bound
lahf
lahf
fildll
mov
jns
or
pop
or
scas
pop
jae
dec
sub
leave
jne
int
sub
adc
push
adc
mov
dec
lcall
push
test
mov
gs
out
scas
cmpsl
ret
cs
divl
mov
mov
inc
jbe
xchg
adc
fdivrl
dec
lods
ffreep
cmpsb
dec
push
sahf
cltd
mov
push
dec
dec
pop
dec
cmp
mov
addr16
mov
out
cmp
enter
dec
stos
jge
daa
dec
add
dec
ja
jge
fcomps
daa
aad
mov
sub
jno
and
shlb
fdivs
add
loop
out
mov
outsl
or
in
in
ret
lds
test
mov
enter
mov
sub
jns
sbb
jmp
mul
lds
loopne
out
shll
scas
inc
insl
adcb
sbb
hlt
jecxz
in
shlb
cs
inc
or
mov
stc
adc
imul
shll
aam
ds
mov
inc
jge
mov
es
popf
aad
and
ret
inc
test
sbb
pusha
movsl
add
push
add
add
and
ret
xchg
push
gs
sbb
cmp
addr16
xchg
std
mov
inc
sti
and
add
test
cld
cs
es
gs
or
dec
dec
adc
pcmpgtd
mov
sti
xchg
jo
jae
repnz
sub
push
mov
mov
test
xchg
cmp
sub
loop
jge
subb
push
xor
scas
lods
sbb
stc
pushf
test
nop
add
mov
sbb
std
add
in
push
test
imul
sbb
jb
fstl
push
nop
fidivrl
scas
std
sbb
jl
imul
sti
add
test
ljmp
stos
movsb
lods
xchg
out
xor
push
mov
aad
jo
pop
fstpt
jne
loopne
and
xchg
out
test
and
xchg
cmp
in
bound
and
mov
lock
cmp
pop
sahf
es
xor
pop
sub
insb
jle
out
mov
push
clc
add
push
sub
mov
roll
clc
or
das
xchg
push
fsubr
dec
arpl
dec
addr16
outsl
fnsave
les
dec
xor
int3
mov
inc
decb
clc
jge
jge
push
xchg
int3
rcr
inc
xor
faddl
in
push
adc
jbe
jae
mov
sbb
dec
decl
xchg
leave
add
in
jle
aad
xchg
sbb
inc
lods
jae
push
loop
mov
in
add
mov
loopne
sbbl
xchg
outsb
movsl
or
mov
sahf
je
sbb
out
jl
and
add
sti
mov
mov
and
or
lret
negl
shrl
cmp
push
add
adc
fidivrl
push
xor
inc
int
push
cmpsb
xchg
icebp
es
shl
scas
out
js
and
jno
aaa
subl
add
rep
insb
lock
fstps
lcall
adcb
jnp
mov
dec
lcall
fcoms
sbb
xor
sahf
xor
push
push
pop
xchg
cmp
add
xchg
nop
push
into
pop
mov
shr
add
or
and
mov
jae
test
repnz
scas
in
movsb
nop
ss
or
mov
cmp
adc
outsl
mov
ja
sub
enter
mov
cltd
rcrl
bound
mov
hlt
pusha
cmp
cs
xchg
pop
jecxz
inc
adc
insl
and
insb
pop
lcall
or
pop
aam
in
mov
mov
inc
mov
mov
lret
in
push
mov
push
popf
inc
push
inc
insb
movsb
lahf
add
adcl
pop
or
loope
push
cmp
mov
xor
pop
adc
shrl
xor
daa
cmc
aad
in
xchg
fcmovne
cwtl
out
sub
fwait
sti
call
inc
inc
mov
cmp
add
fdivr
push
mov
imul
shlb
xchg
xor
or
lea
imul
imul
fimuls
int3
jle
mov
mov
inc
stos
clc
cmpsb
jbe
xor
and
mov
dec
xchg
in
push
fnclex
push
and
stos
gs
mov
push
xchg
fisubrs
xchg
loope
insb
mull
sbb
pop
sbb
jbe
je
inc
loop
pop
inc
pop
xor
and
xor
xor
pop
add
mov
pop
cmp
cmp
nop
mov
dec
test
cs
test
and
insb
mov
fstl
std
pushf
enter
mov
mov
aam
aas
sbb
in
cmp
arpl
testb
imul
cs
pop
mov
pop
adc
push
stos
iret
xor
xor
xchg
or
dec
cltd
xchg
cwtl
out
mov
int
adc
int3
add
push
lods
in
lock
je
sbb
and
mov
mov
cmpsb
pop
cmp
addr16
mov
push
inc
fsubp
ja
dec
ret
jl
sarl
mov
pop
mov
fiaddl
clc
stos
jb
pop
lods
sarb
addr16
mov
cmc
testb
cmpsb
push
lods
test
pushl
hlt
ss
aaa
or
xchg
shll
pop
xchg
sub
insb
mov
jmp
sub
ljmp
rcl
mov
popa
mov
fidivrs
cli
pop
push
add
xor
xor
jle
push
dec
fimuls
jno
jecxz
bound
hlt
test
ljmp
add
push
pop
fwait
mov
out
pop
jb
mov
popa
xchg
inc
movsb
ret
in
cmp
lea
sbb
lahf
xadd
mov
repnz
ret
xor
inc
fnstcw
aas
and
jb
jae
xor
xchg
lea
add
fstpt
and
adc
in
cmc
repz
aas
fs
repz
das
test
jnp
jo
add
cmpsl
adc
ret
jg
repnz
test
mov
pop
sub
shrl
shll
cmc
icebp
fadd
dec
sti
out
jg
mov
add
stos
stos
incl
test
iret
add
mov
frstor
test
or
dec
loop
lcall
xlat
scas
fdivl
and
mov
push
into
mov
lss
lahf
out
int
mov
jo
add
mov
movsb
pop
ficoms
dec
inc
adc
or
lods
pushl
ljmp
std
adc
bound
pop
or
jo
sbb
rcll
sub
xchg
cmp
imul
dec
mov
mov
ret
fldcw
sbb
je
ficompl
cmp
sub
adc
push
add
out
jmp
xchg
test
xor
pop
mov
js
and
add
mov
scas
sub
adc
jne
call
jmp
aas
mov
sbb
sbb
xchg
cmp
and
mov
loope
jns
and
and
sub
lret
lret
push
adc
out
push
mov
pop
jge
sbb
mov
addl
mov
cmc
test
outsl
mov
iret
packssdw
shll
add
nop
ret
xor
andl
push
js
imul
in
lret
movsl
push
mov
mov
jns
xor
mov
scas
jmp
mov
jbe
and
mov
sbb
xor
push
mov
ss
fs
jo
xchg
and
jb
les
dec
les
dec
and
ss
loope
adc
mov
pop
ljmp
fdivr
shll
or
jge
shlb
xchg
inc
xorl
add
or
cs
orb
mov
lea
cld
nop
pusha
in
mov
flds
push
push
mov
ljmp
jo
jmp
jmp
mov
or
mov
movsb
stos
push
inc
add
aam
mov
in
xchg
or
ret
dec
jecxz
pop
in
dec
mov
cmp
stos
js
and
xorb
test
imul
xor
cs
ret
add
push
pop
sbb
insb
and
inc
push
nop
roll
jbe
cld
sbb
xorps
scas
xor
mov
or
push
inc
out
and
es
mov
push
aaa
nop
test
mov
cmp
push
mov
mull
adc
pop
clc
movsb
xor
rorb
sbb
mov
sub
jbe
or
fwait
mov
sbb
data16
loop
arpl
adc
jle
or
hlt
movsl
push
popa
fldenv
or
xor
pop
push
clc
cmp
jp
mov
arpl
mov
adc
mov
mov
lods
es
push
hlt
jle
test
leave
loopne
xchg
jb
aad
cmpsb
or
aam
xor
repz
cmpsl
inc
push
push
and
incl
scas
imul
and
sub
pop
jbe
roll
cli
push
nop
jns
lret
adc
pop
sub
nop
adc
pop
mov
jae
jmp
lcall
push
cltd
aas
ret
or
jnp
and
sub
roll
test
push
daa
dec
scas
push
stc
push
stos
pop
sub
sti
push
cmpsl
xlat
addr16
mov
sub
cmp
scas
or
fs
out
cmp
mov
lods
mov
add
pop
xchg
pop
imul
and
add
pop
test
les
sti
dec
stos
mov
call
mov
fcmovne
xor
inc
js
in
xor
stc
int3
or
lods
adc
mov
enter
js
xchg
stc
xchg
imulb
push
add
push
stos
pop
fdivs
int3
push
sub
jns
dec
add
leave
mov
loopne
aaa
push
and
pusha
shrb
pop
lods
cmpsb
out
and
lock
push
into
sbb
push
xchg
xchg
ljmp
mov
adcb
and
fimull
ss
xchg
aaa
pusha
jb
mov
cmpsb
jge
jo
mov
pop
dec
pop
inc
add
push
mov
xor
nop
popa
shl
lods
push
hlt
jno
pop
out
mov
divb
push
and
jo
cmpsb
call
push
int
scas
test
jl
enter
loop
and
jmp
lret
pop
inc
cmp
push
mov
sbb
pop
jecxz
mov
xchg
jecxz
in
cld
xor
jb
daa
xor
out
mov
hlt
repz
push
aaa
jb
push
push
scas
add
dec
xor
xchg
inc
push
hlt
insb
mov
mov
aam
faddl
es
fcmovbe
fnstcw
bnd
mov
mov
mov
sbb
inc
mov
dec
xor
jg
dec
aaa
mov
call
push
clc
adc
dec
sbb
stos
adc
jle
sub
loopne
repnz
fadd
and
cmpsb
lods
dec
mov
clc
stos
pop
mov
fwait
std
out
inc
movsb
or
call
add
loope
orl
scas
sbb
cmpsb
adc
je
inc
hlt
mov
dec
arpl
jmp
or
cs
call
lcall
inc
xchg
sbb
xchg
xchg
add
xor
sbb
xor
out
xchg
lcall
mov
xchg
xor
and
mov
aaa
ret
fs
xchg
inc
das
push
in
cmp
xor
push
ss
mov
mov
and
fisubrs
xchg
mull
or
ljmp
adc
data16
insb
inc
add
loope
mov
lds
and
icebp
iret
push
call
inc
out
cltd
call
sbb
dec
or
shrb
push
jmp
xchg
sub
mov
inc
jns
mov
ret
arpl
xchg
add
mov
lds
pop
fidivs
out
and
imulb
dec
in
push
xlat
cwtl
pop
mov
sub
addr16
pop
jmp
push
loopne
shll
sub
cltd
push
sub
push
mov
test
adc
leave
rcrl
mov
adc
adc
add
dec
int3
jns
or
gs
jp
shrl
into
mov
fisttpl
fisttps
xor
jp
popf
mov
aad
inc
mov
popa
adc
xchg
xchg
sbb
lea
negb
and
jae
inc
mov
dec
faddl
popf
push
xchg
enter
pop
test
in
scas
xorl
sbb
data16
sub
rclb
loopne
mov
and
pop
inc
mov
jne
push
xchg
inc
je
fld
sbb
stos
xchg
pop
decl
sahf
icebp
mov
pop
push
aaa
add
pop
jnp
in
lds
pop
cmp
xchg
icebp
popa
or
loopne
xchg
scas
dec
les
cmp
xor
sub
and
imul
sub
push
xchg
push
jo
sub
sub
sub
cmp
or
cld
jnp
sbb
mov
push
ror
jnp
mov
push
push
dec
push
sbb
mov
sbb
mov
jmp
arpl
test
xor
jno
add
pop
cs
inc
rorb
data16
pop
sub
sub
dec
add
stos
insb
dec
cmp
ds
pushl
je
cmp
ret
rolb
mov
pushf
push
and
out
jbe
movsb
push
outsl
aas
mov
sub
mov
pop
push
lock
in
cltd
pop
dec
pop
mov
aad
and
dec
lahf
hlt
mov
mov
pop
xor
and
lret
adc
jae
pop
or
outsl
subb
push
adcl
jge
push
scas
mov
push
inc
fwait
aam
lret
retw
jne
cli
pop
nop
dec
dec
xor
cmp
ljmp
adc
and
int3
cltd
inc
test
or
jp
cmp
dec
mov
lahf
or
lock
mov
add
jne,pn
add
dec
aad
jae
dec
or
cltd
or
lret
sub
stos
cwtl
xchg
xor
lock
jae
xchg
adc
and
stos
adc
repnz
jge
clc
sti
mov
ret
les
sbb
rorb
outsl
jecxz
xor
mov
cli
movsl
lods
xchg
cltd
xlat
test
dec
fsubs
arpl
cmp
sbb
rcrb
jbe
mov
cwtl
imul
roll
pushf
repnz
out
aas
jmp
je
test
sarl
push
jne
aam
outsl
mov
jmp
pop
adc
and
mov
out
fisubrl
mov
test
cmpsb
ja
lods
sub
insb
shll
icebp
dec
cmp
test
lahf
or
or
add
fucomi
jne
mov
sbb
sbb
jecxz
cmp
jle
add
lods
cmpsl
loope
push
pop
cmp
pop
sub
push
loopne
mov
pop
mov
pushf
test
cmpb
lcall
sub
stos
xor
lret
inc
adc
repnz
mov
push
ss
cmp
xchg
stos
movsl
out
push
push
xchg
mov
arpl
or
faddl
jo
or
xchg
inc
sub
jp
mov
lahf
xchg
and
in
jbe
pop
jns
cli
pop
or
pop
xchg
xchg
decb
std
pushf
lcall
and
bound
jne
lods
xlat
outsb
out
mov
jno
aas
rcll
or
adc
repnz
addr16
or
xchg
sub
mov
jb
lock
dec
push
dec
adc
jno
jle
pcmpeqb
pushf
lret
hlt
test
lret
jge
lock
aaa
pop
test
stos
sbb
jns
adc
arpl
cmp
jmp
inc
popa
push
pop
je
mov
fwait
lea
pop
stc
enter
inc
out
xchg
sbbb
outsl
add
inc
mov
mov
adc
lods
popa
fimull
add
call
out
ss
pop
mov
dec
into
adc
adc
rcr
mov
cld
jb
insl
fcoml
call
sbb
mov
jge,pt
mov
sahf
popf
flds
insb
push
xchg
adc
xchg
lahf
adc
loopne
ret
out
insl
int3
lahf
cmp
out
or
and
adc
pop
lods
ljmp
cli
cmpsb
adcb
dec
or
xor
push
je
orl
out
push
xchg
push
hlt
xlat
and
jbe
aam
ljmp
cwtl
es
pushf
repnz
cmp
sbb
mov
out
sbb
aad
aaa
inc
push
mov
fs
sahf
pop
rol
inc
hlt
pop
mov
pop
jmp
cwtl
out
mov
pop
in
das
popa
xchg
xchg
outsb
ljmp
mov
adc
add
or
push
mov
sub
push
pushl
push
sub
sub
cltd
jns
or
sub
sbb
cmp
les
and
cwtl
repnz
lahf
dec
fdivl
pop
je
jne
jb
addb
jb
dec
pushfw
repz
daa
xor
out
mov
adc
shlb
xchg
add
imul
ret
sbb
outsl
sbb
ret
enter
andl
in
or
mov
sub
or
test
pop
mov
insb
add
hlt
pop
pop
jae
andl
sarb
or
push
adc
or
pop
test
push
lds
sub
pop
ljmp
add
nop
mov
incl
jle
jecxz
faddl
mov
lret
inc
lods
fwait
dec
int3
xor
pop
xchg
pop
lods
add
xchg
sti
or
jae
adc
jns
mov
push
push
sbb
testb
cmp
scas
dec
xor
xor
cmp
lods
js
xor
aaa
test
jecxz
enter
test
sbb
mov
imul
sbb
dec
loopne
movsl
out
imul
add
jne
mov
and
sbb
and
mov
inc
shl
rcl
adc
pusha
add
outsb
mov
clc
mov
inc
inc
sub
add
jo
or
ret
push
push
mov
and
add
cmp
dec
out
scas
mov
icebp
xchg
int3
fcompl
add
pop
sub
jbe
fists
mov
nop
out
dec
sub
dec
pop
mov
fisubrs
ret
imul
aas
insb
mov
pop
push
insl
sahf
mov
sub
imul
mov
xchg
out
loop
lahf
aaa
pop
mov
mov
xchg
es
dec
adc
into
sbb
sub
fs
data16
int3
dec
sahf
mov
addl
gs
repz
mov
shrb
xchg
outsb
lahf
jge
jl
imul
rorb
inc
sub
stos
jbe
mov
je
jl
inc
or
mov
inc
cmp
mov
ds
and
sbb
push
and
dec
dec
outsl
and
add
add
mov
stos
and
jno
scas
xchg
sbb
movsbl
push
shl
adc
jge
mov
adc
jno
mov
jmp
add
push
cmp
fs
das
push
push
ja
movb
fsubrs
and
jle
push
sub
mov
clc
pop
fwait
jae
inc
push
fidivl
add
xor
cmpsl
inc
mov
push
fdivr
inc
gs
mov
add
inc
mov
mov
pop
out
pop
push
xchg
fidivrs
dec
mov
mov
mov
inc
xchg
mov
jge
inc
add
or
scas
mov
pop
lods
mov
imul
fistps
mov
loop
pop
std
or
jmp
das
inc
jb
in
shlb
into
mov
clc
sub
ret
bound
mov
cmpsb
addr16
pop
out
pop
insb
mov
pop
fmuls
mov
movsl
mov
clc
dec
sbb
jle
ficomps
es
rcll
jno
pop
push
lods
lds
push
sub
ss
inc
push
aas
pop
lods
movsl
jmp
pusha
ret
gs
xchg
inc
xchg
adc
stos
clc
jns
test
mov
sbb
sub
gs
mov
sbb
and
stos
jno
lret
dec
negl
xchg
lahf
lcall
lret
sub
jl
frstor
pop
sbb
and
sbb
jecxz
pop
and
mov
pusha
sbb
ret
stos
jle
fsubrs
add
btr
je
mov
fidivrl
adc
xlat
sbb
lret
ds
aas
jae
push
lahf
pusha
cmp
cwtl
enter
mov
mov
fisttpl
in
adc
push
jbe
xor
mov
loopne
dec
cmpsl
inc
icebp
lea
cmpb
mov
pop
sbb
xchg
scas
arpl
sbb
repz
pop
les
mov
push
outsl
in
movsl
mov
push
cwtl
add
int
scas
test
call
stos
cmpl
or
or
loopne
ja
lock
scas
pop
cmp
icebp
fs
push
mov
push
xchg
scas
sub
test
inc
int
sub
jmp
outsb
inc
cs
and
aas
or
pop
xchg
bound
jns
or
or
lock
mov
adc
xchg
dec
add
mov
fsts
test
cmp
in
cmp
mov
in
fsubp
pushf
sbb
xchg
out
out
xor
loopne
mov
notl
sar
mov
jb
outsl
lret
add
add
inc
mov
sahf
pop
in
imul
shrl
jae
movsl
arpl
add
inc
dec
mov
insb
leave
adc
popa
inc
add
xchg
sub
pcmpgtw
push
inc
mov
inc
or
pop
pop
mov
adc
push
inc
lcall
out
mov
lock
push
sti
in
or
push
scas
mov
mov
repz
pop
fwait
subl
pop
rcrl
lret
ljmp
out
das
shr
gs
inc
mov
push
jg
or
mov
mull
jne
push
push
mov
leave
mov
mov
mov
aam
out
les
add
jge
mov
xor
mov
sbb
mov
cwtl
pop
inc
aaa
out
addr16
dec
std
jb
xor
pop
ljmp
aas
jecxz
rol
pop
loop
aaa
test
inc
mov
bound
insl
daa
or
pop
in
faddl
lds
or
pop
sub
pop
mov
push
rorb
add
sbb
loop
jmp
and
or
jmp
movaps
lret
mov
enter
mov
divb
cmp
pop
filds
mov
in
xlat
mov
dec
pop
icebp
mov
fwait
inc
les
sti
lds
sub
mov
movsb
sti
mov
dec
push
inc
shl
andb
xchg
and
dec
mov
adc
adcl
fadd
movsl
adc
and
mov
push
in
sahf
ror
fisubrl
xor
cmp
dec
and
jbe
gs
bsr
mov
movsb
lahf
sarl
xchg
es
leave
in
mov
xlat
xchg
sub
cmpsl
fsub
jnp
push
add
push
hlt
int
sbb
jle
pop
outsl
mov
xchg
pop
psadbw
lcall
in
in
cmc
xor
push
sub
xor
push
repz
ja
pop
push
mov
dec
lods
imul
xor
out
mov
xor
xchg
cmpsl
pushf
lret
sahf
nop
xchg
sub
and
std
lret
pop
hlt
aad
andl
popf
and
sahf
mov
sbbb
mov
dec
push
dec
and
aam
cs
ret
pop
fsubrl
cli
inc
stos
add
insb
mov
mov
push
jnp
or
hlt
adc
push
push
lahf
ljmp
aam
and
lock
sub
pop
adc
arpl
dec
stos
add
cmp
fwait
cmp
cmp
and
shl
add
fldcw
int
add
jne
mov
sbb
das
popa
ror
out
lods
inc
orb
jecxz
fsts
lret
mov
adc
mov
iret
fdivs
stc
or
lods
inc
std
pop
addr16
mov
test
inc
ret
rol
cmpb
js
data16
xchg
inc
loopne
lock
inc
js
adc
pop
jmp
outsb
mov
cmp
cmp
andb
shll
hlt
jno
xchg
dec
loope
cltd
fidivrs
and
xchg
cmp
into
iret
lods
jmp
push
shll
cltd
int3
xor
xchg
leave
mov
add
std
jle
into
and
sarb
js
jns
mov
ss
cmp
xor
add
fsub
loop
repnz
or
sub
mov
mov
jl
je
roll
and
adc
and
cs
or
sti
xlat
loope
cmp
sbb
add
loopne
pop
notb
test
fsub
mov
push
add
fadd
repz
into
divl
add
xchg
rolb
sub
test
cmpsb
bound
decl
cmp
mov
xor
and
fsts
pop
or
imul
movsl
xchg
sbb
iret
into
fildl
orl
xor
inc
pop
push
enter
jb
arpl
or
fildll
mov
and
jmp
mov
arpl
add
bound
rorb
sbb
pushf
cmpsl
pop
pop
mov
pop
and
mov
dec
add
push
insl
pop
in
push
test
cmp
mov
and
or
inc
pusha
jle
or
xchg
aam
arpl
jmp
fildl
into
mov
negl
mov
bound
dec
mov
shlb
or
mov
mov
sbb
jle
mov
hlt
cltd
lock
push
and
jge
loope
mov
inc
aas
sbb
andl
inc
int3
and
aas
add
in
xchg
mov
sub
mov
inc
jle
int3
cs
sbb
loope
jne
out
lret
in
mov
cmp
jp
and
lret
xor
pop
sbb
push
add
dec
pop
dec
xchg
pop
iret
adc
out
arpl
das
dec
test
and
mov
aaa
mov
jnp
out
dec
int
push
mov
popa
fistl
js
jmp
mov
and
aam
mov
sbb
xor
stos
mov
or
dec
jecxz
inc
call
xchg
push
lret
inc
and
dec
ficompl
adcb
jmp
bound
dec
dec
test
lds
dec
cmpsl
pushf
test
xchg
rclb
mov
and
and
fcomps
jmp
sub
test
aas
jmp
dec
cmp
test
cmpsb
mov
sbb
push
jno
push
or
pop
lds
sub
stos
mov
dec
test
sbb
nop
xchg
insl
dec
loope
fstpt
sbb
outsb
lret
jge
ret
roll
aad
movsl
bswap
mov
dec
les
sets
mov
cld
mov
push
xchg
das
mov
jl
xor
mov
mov
mov
movsl
or
push
cmp
pop
inc
pop
adc
lea
jae
add
xor
adc
xlat
or
test
cmpsl
popf
sahf
fildl
mov
popa
and
push
dec
sub
int3
cmove
jl
testb
out
xchg
and
mov
stos
sub
jge
lea
jge
jg
cld
push
ljmp
adc
insl
mov
cwtl
cmpsl
repnz
stos
mov
push
xchg
dec
lea
jl
lret
cmp
push
insl
adc
sub
jl
jg
adc
sarl
mov
sbb
mov
push
daa
scas
add
les
cld
test
fdivr
paddb
xor
jo
sub
aas
dec
fldt
sahf
push
inc
dec
mov
jnp
dec
sarb
and
push
and
out
cld
jle
andl
movsl
test
shr
cld
mov
push
xchg
cmpb
lods
lea
xor
pop
xor
adc
dec
dec
jl
out
pop
pop
push
loopne
lock
fstl
lahf
push
pop
xchg
and
lods
fimull
jnp
out
adc
sar
pop
dec
add
jnp
mov
ret
std
sti
rol
stc
pop
repnz
lahf
out
clc
or
adc
adc
cld
in
xor
xchg
pop
fsubl
jl
in
jg
xchg
jae
lcall
push
mov
pop
fadds
lods
shrb
jg
std
stos
loop
and
cmp
xchg
hlt
inc
add
mov
ss
push
ss
xchg
sub
mulb
lods
fistl
incl
push
and
and
insb
loope
xchg
sub
jbe
jae
out
cmp
fisttpl
orb
nop
dec
ficomps
imul
jge
fnsave
and
and
cld
sahf
sub
fiadds
pushf
in
shrb
mov
sub
push
imulb
dec
xor
addr16
sbb
dec
stc
fcomps
mov
xchg
int
cmp
add
add
and
imul
stos
and
dec
or
adc
jb
jmp
push
je
dec
jl
pop
rorb
ja
mov
sub
jb
sub
jp
or
out
fnsave
out
jne
lret
ds
jae
hlt
adc
lret
and
pushf
mov
jmp
ret
out
dec
mov
imul
sbb
sub
ljmp
ss
mov
jno
fidivrl
add
xchg
sub
cltd
lcall
push
dec
iret
pop
push
xadd
iret
lods
ljmp
mov
cwtl
mov
sub
xchg
add
push
movsl
push
fsubrl
subl
mov
xchg
push
mov
add
add
adc
and
mov
sbb
mov
push
xlat
stos
pop
mov
mov
jnp
pop
xchg
xor
push
xor
lret
popa
test
mov
pop
cmp
fdivrs
add
ficoms
fwait
mov
je
ss
and
pop
pop
jecxz
cmp
cmp
jae
or
fistps
aad
sub
or
rol
dec
jmp
inc
pop
inc
fidivl
shl
testb
push
xor
xor
jg
mov
fs
insl
test
out
insb
gs
sti
cmc
xor
mov
mov
add
popa
out
testb
orl
xchg
arpl
add
shrl
lods
out
push
or
stos
push
fdivrl
jae
mov
test
bound
fwait
pop
pop
ss
in
out
bound
sub
cmpsl
or
std
jl
fdivrl
mov
fidivs
cmp
jge
xchg
jmp
dec
pop
cmc
testl
inc
jl
sub
or
cmp
push
das
cmp
aam
out
sbb
dec
stos
fidivrs
cmp
sar
popa
ds
fists
mov
imul
push
mov
sub
pop
sbb
in
pop
push
xorl
outsb
jecxz
mov
pop
cmp
jo
mov
xchg
inc
mov
push
je
add
jo
add
daa
pop
jae
jle
jno
in
nop
sub
cld
xchg
mov
lcall
insb
cli
mov
sbb
add
inc
fisubl
lcall
cld
hlt
popa
mov
popa
call
cwtl
mov
add
mov
pop
sti
ficomps
loope
mov
sbb
sub
mul
mov
sub
or
xor
ja
fisubl
add
dec
rol
rorl
cmp
ret
pop
cmpsb
or
or
icebp
notb
call
loopne
mov
push
push
push
insl
popf
jp
mov
sti
je
pop
aam
les
in
lock
pushf
and
call
jmp
rcll
ss
dec
and
std
or
sbb
aas
jge
stc
mov
fildll
mov
push
ret
dec
dec
jae
clc
push
test
sahf
lcall
out
add
jnp
pop
andl
fsubrp
loop
pop
cmp
aad
push
sub
mov
jg
xchg
mov
inc
mov
mov
pop
sub
popf
or
inc
lea
adc
or
mov
popa
pop
mov
mov
sub
jge
sbb
mov
mov
xchg
loope
xchg
rcrb
push
ss
int
adc
stc
sub
aam
das
inc
notl
mov
enter
jge
adc
outsl
or
mov
in
pop
sbb
ret
dec
fists
loop
xor
xlat
sub
stc
test
mov
enter
es
or
inc
jle
xchg
int
mov
cmp
cmp
loop
rclw
mov
das
jge
iret
mov
test
or
mov
mov
es
jne
mov
mov
mov
xchg
adc
inc
cltd
cmp
sar
mov
xor
sarl
call
push
stc
orb
lods
and
in
dec
xchg
icebp
das
cld
and
pop
fstpt
mov
sub
pop
push
jp
loop
or
push
xor
or
sub
pushw
mov
out
pop
xchg
and
mov
push
sub
push
lods
add
mov
or
fsubs
ljmp
jno
xchg
and
dec
xchg
sti
addb
or
addr16
push
cmp
xor
sahf
out
lds
insl
inc
cmp
rcrl
jno
adc
adc
mov
mov
daa
pop
cltd
jle
sbb
mul
in
call
sbb
jno
shlb
hlt
or
push
or
daa
pop
and
lods
out
jp
and
cmc
leave
pop
inc
inc
pop
adc
fs
fsubs
xlat
cmp
movsl
mov
or
pop
ss
push
fs
pop
or
ss
mov
xor
insb
push
xchg
ret
inc
xchg
cmpsb
push
adc
rclb
loopne
iret
or
inc
pop
push
lret
andl
lahf
dec
xor
iret
cmpsb
rol
jecxz
mov
inc
popa
popf
sbb
push
fsubs
bound
adc
jne
mov
pop
movsb
cmc
and
add
ficomps
ljmp
mov
sub
in
jecxz
sub
push
mov
pop
dec
fdivrl
sbb
ljmp
dec
dec
lahf
icebp
lds
fiaddl
aaa
mov
jae
mov
dec
push
mov
xor
xchg
xchg
jp
movb
bound
ljmp
test
adc
test
xchg
mov
or
leave
push
cmp
hlt
mov
dec
adc
std
les
scas
inc
sub
adc
js
cmp
xchg
pop
mov
lea
cmp
jle
adc
cmp
push
stos
nop
mov
mov
daa
fstps
add
test
dec
or
loop
rclb
lea
scas
push
mov
fistpll
enter
rep
and
dec
scas
adc
pop
ss
xor
ret
push
jecxz
jecxz
cmp
test
mov
lea
test
stos
adc
sbb
mov
jno
mov
lahf
xor
cmp
push
in
sub
adc
push
scas
jbe
movsl
jecxz
jbe
mov
fdivl
xor
xor
cwtl
scas
sub
or
mov
or
mov
rcll
cmc
push
mov
push
data16
mov
mov
daa
std
lcall
stos
push
xchg
pop
pop
xor
pop
inc
cmc
sub
pop
add
cld
ds
sbbl
mov
sbb
jp
loopne
addl
jp
sub
mov
hlt
mov
sti
outsl
lods
mov
andl
popf
stos
cmpsb
bound
mov
outsb
ficompl
sbb
leave
out
arpl
and
pop
imul
subb
xchg
xchg
and
pop
adc
mov
xchg
and
inc
ljmp
add
mov
dec
dec
movsb
jns
mov
pop
insb
imul
sub
orb
inc
jnp
mov
dec
mov
and
xchg
sarl
xor
push
xchg
add
xchg
add
jge
jns
lea
mov
mov
repnz
ja
jmp
mov
xchg
push
out
dec
pusha
xor
mulb
pop
xchg
shl
loopne
vxorps
movsl
aas
stos
jmp
add
lea
cmp
stos
jmp
scas
shlb
push
sub
mov
xchg
jge
fistps
inc
loope
or
mov
pop
adc
nop
scas
stc
mov
inc
push
rcll
sub
lea
jp
in
or
imul
xchg
sti
int3
jmp
cs
js
jecxz
dec
imul
pop
mov
je
mov
gs
sub
pop
xor
dec
mov
div
add
and
dec
cs
cmp
jp
mov
inc
rorl
lock
gs
push
insb
subl
add
dec
sub
arpl
dec
enter
bound
xor
or
rorl
repz
fadds
leave
div
pusha
jne
stc
rorb
mov
subb
sub
or
test
mov
mov
loop
sbb
sbb
pop
aad
inc
loop
aad
xchg
aad
inc
aam
push
fsubl
int
out
aam
mov
push
mov
outsl
mov
inc
je
push
mov
mov
fwait
inc
push
mov
nop
pop
fidivrl
cltd
int3
icebp
sbb
jmp
add
notl
sbb
xchg
or
push
in
daa
mov
sbb
push
push
sub
xlat
shl
jl
cs
out
arpl
dec
and
out
and
std
aas
or
loop
push
out
push
mov
adcl
mov
sbb
and
in
adc
shlb
movsb
negl
xlat
data16
jmp
repnz
call
in
int
sub
sbb
sbb
addr16
imul
or
xchg
add
mov
add
je
clc
insl
cld
fimull
outsb
mov
push
or
out
or
data16
lcall
dec
aam
in
and
movsl
dec
lods
xor
sbb
sbb
js
subl
mov
fnstcw
dec
adc
not
dec
sub
or
lds
adc
xor
rcr
out
insb
xchg
and
jl
lret
and
test
repz
iret
sub
xorl
or
sub
test
fdivrs
xchg
icebp
cld
ljmp
jg
popf
jmp
jg
or
cwtl
and
in
push
inc
mov
dec
push
call
push
push
xchg
mov
cmp
stos
sahf
imul
ja
pop
mov
or
pop
push
int3
cld
test
in
dec
mov
pop
daa
jmp
xchg
and
xchg
fadds
cmp
daa
pop
lock
gs
cmp
mov
sbb
and
scas
out
fisubrs
std
les
add
lock
aad
fldl
cmp
jg
or
stos
cld
pop
cmp
sub
andb
mov
ljmp
add
push
lcall
testb
iret
jns
add
xor
cltd
adc
adc
cld
fwait
out
or
or
pop
fs
lahf
lea
call
mov
mov
push
sbb
mov
and
mov
adcl
aaa
lahf
test
inc
test
mov
arpl
or
pop
jb
jp
and
inc
or
test
xchg
sub
aad
out
fs
in
push
repz
icebp
sub
stc
aaa
les
mov
in
pusha
das
outsl
lahf
imul
fldenv
outsl
mov
nop
pop
dec
add
ds
jg
gs
mov
fldl2e
mov
cld
adc
ret
cmp
pop
and
pop
jb
lea
arpl
sbb
cmp
fcomps
aam
in
mov
stos
xchg
mov
aad
jmp
int
cltd
dec
jecxz
xor
jbe
sbb
insb
in
cmp
sub
cmpl
jb
int
jle
sbb
mov
mov
and
hlt
adc
inc
push
lcall
divb
rorl
jg
mov
add
int
mov
mov
xchg
ficoml
out
push
pop
jno
sbb
cmp
fstpt
mov
sbb
rcl
dec
and
test
imul
xor
out
pop
les
ds
pop
xchg
mov
loopne
ss
cmp
cld
popa
aad
cmpsb
ret
mov
lahf
insb
out
sub
xor
pop
rorb
xor
in
shll
sub
cli
adc
insb
inc
fdivp
movsb
test
leave
jp
loopne
lahf
push
jle
mov
push
xchg
cmpsb
mov
inc
leave
mov
push
xorl
sahf
fsubs
cmpsb
fdivrs
jnp
mov
jne
mov
daa
je
sub
push
xchg
pop
adc
in
subb
push
daa
sbb
jge
cs
leave
ss
cmp
insl
add
lahf
jg
jge
sub
insb
in
pop
and
test
in
and
and
mov
lds
jno
outsb
sbb
icebp
xchg
movsb
aaa
and
jecxz
insl
adc
push
fldcw
adc
nop
hlt
loopne
jg
mov
imull
ss
es
mov
sbb
sti
ss
cmc
mov
mov
js
idiv
dec
push
sti
ljmp
mov
xchg
ja
fwait
mov
out
jecxz
mov
push
jmp
jmp
cmp
fld1
push
addr16
pop
cmc
xlat
lret
mov
mov
add
sahf
xchg
push
sub
in
mov
fsubrs
test
outsl
bnd
dec
cmp
rcr
sbb
sub
mov
fs
mov
xor
repnz
mov
lret
popf
xchg
fsts
sub
xchg
mov
jae
and
nop
push
repz
loopne
daa
inc
sub
loop
ss
lods
and
out
dec
dec
leave
pop
inc
rcrb
inc
jb
int3
cmp
pop
fstpl
hlt
xor
xor
mov
les
out
adc
sub
mov
push
adc
rcrb
scas
lret
xor
aaa
push
shll
adc
sbb
adc
cmp
aas
or
lods
push
mov
push
pop
cmc
daa
mov
shlb
jo
ret
in
and
mov
or
mov
imul
sub
fwait
mov
sbb
aam
add
mov
out
xchg
sete
xlat
push
adc
sbb
insb
lock
das
sbb
clc
divb
adc
jp
jno
cmp
jmp
and
pop
in
xchg
pop
and
arpl
push
and
cs
imul
xor
dec
aas
mov
xlat
cmp
sub
cmpsb
mov
jns
dec
aas
push
and
mov
ret
inc
jns
jge
into
pop
popa
add
das
nop
iret
mov
and
jbe
sub
pop
jo
sahf
mov
inc
push
fchs
sub
test
iret
out
movb
clc
push
bound
sub
lea
sbb
dec
lds
cmp
in
inc
cli
mov
sarb
push
sbb
fs
mov
dec
call
out
inc
sahf
aad
pop
loop
sarl
iret
xlat
iret
nop
jne
movsb
push
mov
push
ljmp
fnstcw
out
push
cmp
ds
in
adc
popf
sub
les
mov
mov
mov
mov
cmp
and
sub
lods
dec
loopne
into
adc
add
and
bound
out
sub
cmpsl
loopne
dec
cli
jae
push
std
in
adc
sahf
jecxz
lods
je
pop
xor
push
push
jb
outsl
jg
ss
dec
or
jmp
sub
call
jno
lea
or
inc
test
add
inc
lahf
cwtl
cltd
ja
jecxz
dec
or
aam
out
adc
jne
into
out
shl
mov
pop
push
mov
ja
mov
pop
imul
adc
aam
jg
mov
sbb
mov
sbb
or
out
pop
mov
jmp
loope
cli
aas
xchg
adc
pop
ffree
outsl
dec
dec
rcrb
fdivrs
loopne
aas
jbe
fisubrs
push
adc
pop
cmp
inc
rcrb
dec
push
fidivs
cmc
test
fisttpll
sarb
fstps
push
sub
pop
inc
mov
adc
scas
jp
shll
push
xchg
dec
rcrl
std
sbb
int
aas
scas
mov
mov
arpl
xchg
mov
ja
out
pop
mov
lods
jmp
xor
and
sub
mov
mov
arpl
lock
mov
inc
push
xlat
sahf
sbb
adc
add
mov
scas
xor
mov
xchg
mov
loop
push
xorl
sbb
jmp
xor
jne
dec
xor
out
not
pop
mov
jmp
lds
jmp
or
sbb
fistpl
jmp
push
in
mov
mov
xchg
jle
jae
mov
mov
repz
in
inc
out
and
or
cmc
mov
mov
push
ss
push
gs
cmp
add
pop
mov
dec
jbe
inc
movsl
xchg
loopne
stos
lock
mov
cmpsb
arpl
out
sbb
inc
into
add
jp
shlb
nop
xchg
mov
iret
xchg
xor
icebp
sbb
jg
jg
xchg
pop
adc
fadd
mov
sbb
mov
add
adc
popa
sbb
jnp,pt
sbb
ret
pop
cmc
fnstcw
adc
leave
mov
dec
repnz
aad
push
das
pop
repz
sub
jle
aaa
repnz
push
dec
xchg
int
or
insb
inc
sarb
push
mov
push
push
add
das
pop
outsb
mov
cmc
ret
pop
mov
ret
add
inc
test
lret
aam
xchg
test
push
out
jno
cmpsb
adc
or
sub
js
mov
mov
xchg
or
push
cmc
dec
cmpsb
inc
pop
sub
mov
jb
jl
les
arpl
or
fwait
cmpsl
sub
xchg
loopne
push
jne
pop
sbbl
pusha
sub
xor
and
cmpsl
pop
mov
test
pusha
and
je
fnstsw
xchg
into
hlt
icebp
stos
jns
push
rcr
scas
fcmovnbe
push
xchg
add
test
negl
mov
mov
ss
mov
pushf
sbb
or
mov
aas
gs
jb
cmpsb
mov
popf
mov
xchg
in
push
cmp
int
stos
mov
lea
std
leave
add
imul
mov
mov
lret
jle
mull
mov
das
push
push
sbb
je
jge
loopne
fs
jl
push
in
stc
sbb
icebp
cmp
fistpl
outsl
lret
outsb
in
xchg
mov
xchg
pushl
adc
mov
lods
stc
bound
jne
mov
fs
cs
mov
fs
push
idivb
popa
add
mov
xchg
cmp
js
notl
dec
push
pop
add
gs
add
xor
inc
jg
xchg
xor
push
ja
loope
pusha
sarb
jle
insl
cmp
pop
not
inc
jne
pop
adc
data16
dec
mov
push
ret
mov
mov
xchg
push
xchg
push
xor
dec
sbb
cs
jl
xchg
mov
les
jbe
pop
mov
sub
leave
clc
push
mov
xchg
repnz
mov
insl
lods
lods
roll
or
lds
aad
lods
leave
aad
mov
pop
rclb
jbe
cmp
sub
cltd
adc
out
or
fidivs
stos
mov
xor
inc
jge
inc
fsts
ret
and
xchg
jmp
xchg
daa
push
pop
ret
divl
xchg
roll
adc
cmp
or
pop
icebp
popf
cli
hlt
adc
decl
push
fists
notb
pop
test
ds
push
mov
adc
cmp
sub
sub
mov
pop
adc
js
and
mov
pop
dec
push
sub
lods
sbb
or
or
dec
out
xchg
imul
adc
mov
mulb
rol
pop
insl
cs
fcoml
and
and
idiv
or
shll
fwait
push
add
sbb
add
pop
and
mov
out
cmp
dec
rorb
dec
adc
fadds
pop
xchg
addr16
daa
insl
lcall
into
lods
decl
lods
mov
insb
xchg
sbb
dec
or
cmp
aaa
mov
pop
ds
xor
cmpl
xchg
fstps
pop
push
add
repnz
testb
push
es
fcomps
mov
mov
loope
push
mov
pop
imul
mov
mov
aaa
push
outsb
mov
jmp
mov
mov
cmpsb
mov
push
jbe
mov
sub
sub
movsb
fwait
jne
sub
adc
jnp
push
add
rcll
sahf
add
out
lret
bound
mov
pop
sub
hlt
adc
sub
sbb
mov
subl
sbb
ret
and
add
lahf
icebp
xchg
xchg
sub
shlb
shll
sub
push
adc
dec
xlat
lcall
ds
ds
es
and
pause
pop
mov
rcrl
pop
call
ret
inc
push
pop
mov
stos
adc
jae
aam
xor
lcall
hlt
xchg
xchg
jb
xchg
cmpsb
xor
bswap
scas
call
fbstp
pop
pop
mov
iret
add
pop
jo
mov
cs
xchg
cmp
popa
sub
pushf
xor
xchg
inc
mov
pop
jno
clc
push
testb
jmp
enter
or
xlat
mov
cmpsl
push
stos
jge
pop
adc
into
and
mov
sahf
jb
add
mov
inc
sub
sbb
inc
in
js
mov
outsl
push
sbb
aam
pop
repz
sbb
pop
les
dec
or
inc
arpl
ja
das
sar
je
enter
iret
jg
orl
fchs
jmp
xor
mov
cmp
inc
adc
pushf
shrb
mov
mov
mov
pop
and
mov
sub
mov
cltd
dec
popf
mov
pop
test
dec
arpl
cltd
mov
iret
mov
imul
inc
enter
lret
test
inc
cwtl
fdivs
loope
test
pop
jp
sarl
imul
xor
or
xchg
sar
stos
mov
data16
test
sub
mov
adc
cmp
push
mov
ret
mov
sub
xchg
push
lcall
pushf
cmc
mov
shll
inc
and
arpl
cld
and
pop
mov
push
push
mov
stc
aaa
or
mov
sbb
out
sbb
daa
sub
xor
jno
mov
sti
push
call
sbb
and
or
int3
jg
repnz
push
mulb
rcrl
das
incb
lret
mov
insb
add
popf
xor
cs
rcll
dec
mov
push
fnstenv
cmp
addr16
mov
push
cmpb
inc
mov
pop
les
mov
pop
in
fs
push
xlat
cmp
xchg
mov
imul
pop
and
cs
repnz
mov
pop
rolb
cmp
mov
sub
arpl
dec
mov
mov
out
fcoml
push
jns
mov
fsubl
pop
and
pop
add
push
mov
in
dec
adc
repz
push
test
hlt
add
mov
push
lcall
outsl
es
shrl
sbb
pop
ret
test
jmp
mov
scas
xchg
jne
push
shll
jae
fcomi
adc
and
mul
sbb
fisttpll
jb
push
adc
inc
stos
or
xchg
in
ret
mov
pop
stc
test
push
and
or
jmp
mov
imul
insb
xchg
inc
or
sub
mov
push
push
cmp
call
mov
loopne
addr16
mov
xor
mov
push
xor
je
mov
lods
out
pop
dec
jae
or
mov
dec
aad
jl
aas
sub
stc
movsb
enter
test
add
cmp
mov
int3
pop
and
dec
std
xlat
xor
test
jns
cmpsb
mov
sbb
mov
fwait
inc
push
mov
push
shlb
scas
pcmpgtd
outsb
inc
shrl
test
lods
push
sarb
inc
jnp
mov
jae
test
add
iret
lahf
test
test
jo
repz
pusha
mov
jno
mov
cli
stos
mov
or
cwtl
add
xchg
push
sbb
dec
dec
decb
fldl
int
aam
nop
mov
es
adc
inc
ret
or
adc
test
imul
int3
fwait
test
ss
test
ret
jmp
int3
inc
inc
enter
xor
add
icebp
or
int3
lea
push
stos
or
adc
inc
adc
inc
cld
xor
jne
push
jmp
add
fsub
push
call
push
adc
jne
sbb
movsl
lock
and
in
cmc
adc
jle
push
add
test
negl
jg
fs
mov
sbb
jp
in
jl
jne
fsubrp
call
aam
cmp
mov
add
or
out
add
add
lods
adc
pop
lret
leave
mov
sbb
repz
cmp
clc
std
mov
push
in
sysexit
sbb
aad
or
js
cwtl
jb
rorl
pop
mov
aaa
cltd
and
les
cmpb
adc
xor
sub
dec
jmp
sub
mov
inc
mov
scas
push
sbbl
cmpsb
sub
jmp
sub
mov
adc
or
fcoml
push
mov
xchg
push
pop
xor
xor
inc
addr16
rcrl
cmp
sbb
sarl
dec
orl
mov
sbb
test
cmp
aad
lods
gs
push
adc
cmp
loope
out
mov
push
jmp
test
dec
scas
adcl
adc
dec
dec
mov
adc
fcoml
inc
insb
ud0
xchg
or
shrl
xchg
push
scas
fs
add
sub
or
xlat
loopne
cmp
in
push
ss
sbb
fbld
mov
push
into
sub
push
mov
fisubs
iret
ds
push
jbe
fidivrl
aam
andb
insl
incl
lcall
cmp
add
repz
push
add
mov
mov
mov
icebp
mov
mov
mov
mov
rcr
and
cltd
icebp
imul
cmp
into
mov
arpl
xchg
or
repz
int3
icebp
hlt
xchg
pop
daa
push
scas
sub
jae
xor
data16
add
jmp
fs
out
mov
andl
push
lret
scas
pop
test
cs
jge
sbb
sub
mov
pop
clc
xor
sub
orl
sub
push
pop
xor
jl
jp
je
cmp
pop
decl
cld
push
xchg
fchs
cmp
cs
push
outsb
adc
mov
int3
stos
hlt
mov
push
ret
mov
daa
inc
cwtl
lret
lahf
mov
ret
std
xor
or
jle
subb
or
push
jecxz
fcmovnbe
movsl
pop
pop
mov
mov
std
and
sub
rcrl
xchg
mov
pop
xchg
xchg
mov
int
xor
mov
and
enter
loop
loopne
pushf
dec
and
ftst
sbb
xor
inc
cmp
push
xor
aaa
pop
pop
loope
sti
mov
and
scas
mov
jg
xchg
test
pusha
push
shrl
fidivrl
adc
or
mov
mov
test
xchg
mov
push
mov
ss
sub
mov
dec
jge
pop
xchg
sbb
adc
or
mov
sub
xchg
pop
mov
pop
fsubl
cmp
aaa
pop
push
lods
cli
push
or
push
or
call
mov
outsb
imul
cmp
jb
xchg
dec
bound
scas
inc
sbb
cmp
fdivrs
test
mov
outsb
xchg
jmp
movsb
outsl
add
and
addr16
add
or
leave
and
lcall
lcall
popf
or
inc
jns
xchg
or
insb
lods
mov
dec
sar
cmp
in
cmp
sarb
fcompl
fcmove
sub
sbb
pop
aas
add
fcoml
cmpsl
call
orl
push
loopne
scas
sbb
in
cmp
push
hlt
push
dec
xor
jg
incl
mov
out
xor
xor
es
fdivs
adc
bound
jg
packssdw
stos
xor
test
and
mov
add
add
xchg
mov
xchg
stos
mov
xor
scas
jns
mov
lock
scas
rorb
outsb
sbb
dec
insb
nop
and
push
and
sarb
nop
pop
je
or
mov
cmp
inc
dec
rcrl
insl
aaa
addl
roll
mov
fstl
mov
jo
int3
insb
rcll
icebp
sbb
out
lahf
add
in
icebp
std
or
or
jg
xchg
mov
dec
xor
outsb
mov
adc
cltd
mov
cmpsl
sbb
jp
js
mov
shl
xor
push
mov
es
jle
int3
lock
out
cltd
and
insl
dec
sub
outsl
addb
shll
mov
frstor
mov
pop
mov
or
xchg
scas
jg
pop
jo
loopne
xor
pop
push
and
insb
dec
mov
out
inc
repnz
arpl
fsubl
sbb
xchg
pop
call
ljmp
repz
ret
pop
fs
in
insb
aam
sub
dec
mov
test
sub
mov
repnz
inc
pop
insl
xchg
adc
jl
or
out
sti
or
or
nop
out
sbb
inc
jne
jae
mov
lds
leave
inc
xor
les
mov
add
xor
lcall
cmp
mov
xchg
inc
clc
cmp
outsb
aad
add
jbe
inc
xchg
lea
push
repz
xlat
aaa
das
push
xchg
push
push
sbb
cmpl
sub
mov
rcll
es
jmp
ds
into
mov
adc
mov
adc
add
movsl
ljmp
adc
cmpsl
pop
imul
fsubr
xchg
imul
pop
push
cltd
mov
dec
mov
fiaddl
repz
data16
out
jne
outsb
inc
dec
dec
cs
lret
shlb
mov
or
mov
mov
rcr
cmpsl
push
pop
ret
jl
adc
inc
insb
iret
dec
loope
mov
sbb
lret
mov
popa
adc
insb
xchg
xchg
sub
not
inc
pop
das
scas
imul
dec
pop
dec
push
push
ljmp
gs
ret
jle
sti
inc
mov
out
rclb
ret
adc
int
or
jle
jmp
fsubrp
cmc
dec
sub
addr16
mov
mov
cmp
xchg
mov
or
and
popa
popf
mov
lods
sub
bound
mov
test
gs
push
inc
shlb
call
inc
jecxz
cltd
jl
mov
inc
mov
mov
push
test
rolb
icebp
cltd
xor
test
scas
mov
out
jmp
jmp
adc
cmp
sub
dec
mov
shlb
mov
cmpsl
bound
pop
jle
xchg
push
mov
or
ja
rclb
push
fisttpl
or
cmp
fs
movsb
pop
addb
iret
out
pop
adcb
mov
leave
dec
xchg
clc
inc
decl
fsubs
jne
adc
sbb
xor
rolb
xor
mov
daa
gs
lds
orb
push
pop
pop
or
ds
mov
inc
mov
adc
in
jb
add
dec
cli
clc
movsb
push
inc
and
in
call
xchg
lds
sbb
faddp
sbb
cmp
and
xchg
adc
sub
in
lahf
rolb
jg
or
jl
or
mov
mov
pop
test
xchg
inc
mov
dec
jb
data16
int
mov
mov
sbb
loope
xor
adc
sub
pop
mov
jmp
xchg
and
movsb
cld
or
and
xchg
js
sbbb
fstps
test
repnz
sub
push
sbb
jns
rcrl
pop
sbb
and
cltd
std
push
mov
cli
jns
cli
xlat
add
adc
push
rolb
dec
jns
dec
sub
leave
mov
or
es
add
push
pop
inc
jns
mov
das
mov
inc
xor
push
imul
add
mov
pop
mov
xchg
add
sbb
sub
into
stos
les
pop
outsl
fs
push
dec
pop
cmp
and
cli
es
sti
mov
sahf
push
adc
jg
test
fs
inc
push
push
fstps
xchg
mov
lds
sub
adc
nop
cld
repnz
jle
mov
xchg
fwait
xor
cmp
aad
mov
daa
fwait
add
pop
sti
test
loop
lret
sbb
std
es
xchg
adc
jno
mov
inc
fnstsw
jecxz
mov
jge
test
ljmp
dec
faddp
jo
fsubrl
rol
jbe
clc
lahf
adc
push
pop
mov
push
std
mov
popa
mov
xor
mov
jp
push
in
dec
lods
out
jp
and
push
cwtl
jl
inc
vsubsd
adc
rol
pop
ret
pop
mov
xchg
popf
xchg
jl
cmpsb
cld
fs
fiadds
mov
add
xor
mov
add
std
ret
jno
mov
test
adc
adc
sub
lods
shrb
sub
test
sarb
xchg
xor
rcrb
insl
jo
xchg
iret
aam
mov
or
fistps
out
mov
and
mov
ljmp
push
and
inc
mov
es
add
imul
mov
sbb
sub
inc
popf
cmc
mov
repz
mov
into
in
out
inc
mov
sahf
les
adc
push
rcl
daa
dec
adc
shrb
pop
adc
add
lock
lods
cli
dec
sbb
loope
mov
mov
lods
mov
repz
mov
jecxz
sub
scas
loope
inc
push
jmp
dec
pushw
and
aaa
outsl
mov
bound
bound
outsb
jnp
or
mov
and
or
or
pop
test
arpl
mov
sbb
sahf
outsb
ds
push
sti
jp
sub
jecxz
cmp
insb
mov
ss
pop
aad
scas
sub
sbb
xor
nop
pop
fistps
imul
cmp
jno
shr
jns
repnz
fwait
mov
xor
imulb
xor
in
dec
add
sti
pop
std
repz
or
movsb
jle
jb
adc
pop
sbb
std
out
mov
adcb
push
fdivrp
cmp
dec
arpl
cmp
out
cmp
adc
into
mov
jnp
rclb
pop
movsb
sbb
jbe
mov
inc
push
adc
ja
mov
fwait
dec
inc
cmc
pop
inc
add
xor
push
xchg
lods
ror
clc
sarl
loope
or
aad
fistpll
shlb
jne
push
dec
mov
push
xorl
jmp
dec
xor
lcall
inc
sbb
leave
pusha
jb
add
jg
pop
iret
pushf
inc
sti
ret
adc
pop
outsb
adc
stc
pop
mov
inc
fwait
xchg
pusha
ja
ss
jg
fistpll
cmp
or
aam
sarb
fsubr
pop
fs
push
jns
add
jns
adc
or
and
sbb
pop
mov
sarb
dec
cmp
add
add
sbb
bound
and
lock
dec
mov
test
iret
cmpb
push
pushf
pop
add
lods
adc
mov
or
fidivrl
jg
es
leave
nop
movsl
icebp
dec
xor
cmp
push
arpl
imul
xchg
push
sub
add
lods
adc
fucomi
test
mov
xchg
sub
imul
or
jl
push
js
shrb
stos
fnstenv
popf
loopne
ss
mov
sbb
insb
testb
test
mov
mull
sbb
jb
xchg
push
loopne
xchg
and
dec
jae
aas
icebp
fnstsw
mov
push
scas
push
sbb
fdivrl
push
lods
sti
dec
sbb
faddl
popa
sub
pop
jo
movsb
or
sbb
ftst
jge
test
cmp
pop
mov
cmc
jge
in
add
hlt
mov
jb
cmpsb
mov
add
sub
sarl
shl
cld
je
cmp
cmp
xor
push
inc
daa
pop
mov
inc
ja
fst
std
test
mov
sub
sahf
mov
adc
int3
bound
inc
mov
and
loop
std
ret
dec
cld
and
hlt
push
cli
inc
xchg
cmpl
inc
pop
jne
fldt
out
sub
call
gs
jno
push
xorl
mov
es
sti
xor
add
int
int
inc
in
push
mov
xchg
outsb
aas
dec
xor
mov
sbb
pusha
jae
das
push
cli
or
cmpsb
adc
sub
aaa
lahf
das
in
mov
inc
xor
sub
push
ljmp
das
test
pop
mov
jno
ja
out
cmp
jnp
test
jo
dec
bound
cmp
aaa
ficoml
adc
sti
clc
mov
and
push
loope
das
or
adc
lea
idivb
loope
orb
push
mov
cmp
popa
pop
xchg
adc
imul
lock
bnd
xchg
add
addl
or
dec
push
or
jmp
shll
xchg
mov
sbb
lahf
mov
int3
leave
icebp
sub
movsb
inc
or
cmp
dec
push
sbb
imul
mov
insl
jl
popf
mov
mov
into
and
add
push
and
jg
test
jne
xchg
or
fnstcw
cmp
mov
into
adc
xor
dec
mov
les
add
mov
sti
jle
popf
pop
mov
or
outsl
adc
or
pop
cmp
push
xchg
pop
orb
dec
inc
fistps
cmpsl
test
sub
cmp
pop
xor
dec
inc
cmc
loop
mov
xor
xor
lea
push
je
les
adc
jg
emms
roll
mov
lea
repnz
mull
ljmp
and
sti
sub
fdivl
sub
les
mov
mov
jmp
xor
into
pop
cmp
popa
jns
dec
pop
or
test
call
fwait
inc
pop
cmp
sub
lods
int
pusha
inc
pop
stos
adcl
das
mov
or
lcall
fs
dec
divb
push
jnp
pop
call
or
mov
es
xor
clc
pop
pop
xlat
cmpl
inc
fwait
loop
repnz
cmpb
jne
sbb
xchg
mov
inc
mov
arpl
jge
call
lods
dec
jmp
cmc
sub
dec
and
int
mov
add
dec
stc
pop
push
xchg
inc
int
xchg
mov
test
xchg
outsb
shll
cwtl
mov
fcoms
inc
sbb
mov
daa
mov
test
out
xchg
dec
fsubrs
out
inc
ds
pop
fcmovnbe
push
int
aam
jg
mov
sub
mov
shlb
sbb
test
mov
inc
push
lret
push
rcrb
rolb
dec
dec
sarl
lods
xchg
mov
inc
fdivrs
dec
jg
stos
or
lds
mov
or
testb
push
rolb
add
add
pop
xchg
in
jecxz
subb
clc
or
mov
cmpsl
rcrb
ljmp
mov
adc
mov
cmpsl
lahf
je
sub
lret
cmp
test
aam
cmp
test
mov
add
push
ret
subb
dec
mov
adc
ja
ret
pop
cmpsb
mov
dec
jle
mov
out
stc
outsl
mov
jb
mov
subb
fnstcw
lea
xchg
jl
or
sbb
pop
or
xchg
pop
rcr
shr
mov
out
iret
out
dec
or
ja
into
add
out
xchg
dec
lods
int3
out
gs
sbb
jge
mov
outsl
adc
jo
xchg
pusha
call
movsl
mov
xchg
test
pop
pop
jnp
push
add
fs
scas
inc
cmpsl
orb
lret
fcmovb
and
inc
add
push
sbb
pop
fwait
mov
roll
jp
loop
mull
fnstsw
sbb
dec
push
cmc
shll
fsubs
xchg
push
inc
outsl
mov
adc
sbb
or
and
xchg
daa
sbb
and
sbb
ds
inc
test
js
insl
movl
xchg
push
das
test
add
stos
rclb
insb
adc
das
adc
sbb
stos
sar
and
dec
sti
add
dec
sbb
in
repnz
fwait
mov
scas
jb
xor
sub
pop
stos
add
jnp
out
mov
sub
mov
jb
ficoms
ja
lahf
test
shrl
stos
mov
xor
jno
pushf
test
andb
addr16
xchg
icebp
clc
mov
lcall
sahf
xchg
out
push
cmp
mov
stos
lcall
out
rcrb
jbe
jne
mov
dec
mov
add
imul
jmp
and
mov
scas
shrl
pop
push
push
dec
pop
bound
jne
ror
scas
and
jnp
rol
lcall
out
xchg
and
addr16
int3
pop
xor
xchg
cmp
jge
stc
pop
mov
sbb
stos
les
mov
aas
adc
and
push
push
push
push
aaa
testl
mov
jb
jno
in
int
in
cli
leave
mov
jo
pushf
outsl
xor
mov
dec
jmp
jl
mov
inc
test
dec
fiadds
movsb
pop
call
stc
xchg
dec
dec
cmpsb
stos
cmpsb
mov
mov
lret
insl
call
mov
pop
imul
dec
add
add
cmpb
aaa
dec
cld
sbb
bnd
js
scas
test
push
push
repz
mov
xorl
mov
mov
push
pushf
xchg
adc
in
repnz
pop
mov
cmp
inc
in
imul
lea
xchg
mov
repnz
das
test
mov
sbb
and
pop
in
popa
or
out
imul
int
outsb
mov
loopne
mov
les
mov
add
inc
push
sub
int
cmp
sahf
xchg
in
cmp
sub
inc
mov
cmc
inc
and
insl
and
enter
shlb
aas
outsb
sbb
mov
cmp
pop
pusha
repz
mov
adc
sbb
loop
jg
gs
xor
insl
dec
dec
xor
test
setne
xor
outsb
aam
icebp
pop
ljmp
cli
cs
mov
sbb
fdivp
shl
xor
bound
push
sbb
popf
pop
dec
mov
movsb
ret
jae
jecxz
mov
pop
out
push
aas
rcll
test
sub
mov
adc
mov
inc
add
mov
scas
int3
and
or
in
or
hlt
dec
aad
fisubrl
pop
or
pop
lods
and
fs
jnp
stc
sbb
loope
and
sbb
hlt
in
loope
addl
mov
mov
adc
jne
test
mov
adc
stos
int3
push
pop
dec
or
fwait
mov
out
mov
inc
lahf
dec
movsl
std
test
mov
mov
push
mov
ljmp
fcmovb
inc
sub
push
lods
sbb
jne
negl
ret
sub
xor
xor
adc
and
outsl
jo
leave
mov
div
mov
ficoms
ljmp
jge
push
sbb
cmp
filds
adc
mov
lret
stos
pop
dec
cwtl
imul
xchg
pop
mov
mov
cmp
adc
inc
cs
adc
pop
push
cmp
loop
pop
loopne
arpl
ret
mov
movsl
aaa
xor
xchg
imul
sbb
push
int3
imul
sub
repz
sub
iret
jp
xor
adc
ficoms
out
cmp
pusha
arpl
xchg
addr16
sub
mov
cmp
mov
mov
aas
dec
mov
mov
xchg
clc
frstor
lods
lods
jmp
repnz
sub
popf
xchg
jns
dec
lds
jne
jne
mov
xchg
push
push
testb
sahf
xchg
mov
test
or
xchg
into
mov
dec
fsubp
jno
cmp
repz
or
pop
cmp
and
or
xchg
adc
mov
hlt
dec
in
pop
aaa
jmp
cli
lret
or
out
clc
orl
or
cli
sub
adc
sub
inc
jp
jbe
movsb
pop
lcall
add
stos
mov
out
inc
pop
ss
scas
fbld
xor
mov
adc
imul
cmpsl
or
cmp
into
xchg
in
mov
xchg
jl
mov
add
inc
jmp
jle
andl
and
add
ficompl
daa
adc
or
inc
mulb
add
stos
dec
ret
out
sbbb
mov
inc
add
mov
push
push
cmp
scas
or
cmpsb
push
and
jnp
insb
sbb
icebp
cli
shlb
insb
xorl
insb
outsb
inc
cmpsb
popa
je
mov
popa
leave
mov
pop
xchg
xchg
add
ret
je
aas
mov
out
int
int
loope
sbbl
cmp
popf
popa
lods
jnp
fmulp
lret
pop
sub
femms
mov
les
movsl
pop
mov
jbe
adc
shrb
xchg
pop
fwait
inc
movsl
jge
out
in
stc
cmp
mov
push
cld
lret
mov
in
leave
inc
popf
mov
lret
mov
mov
test
jmp
push
inc
or
fsubrs
pushl
stos
sahf
add
dec
xor
aaa
push
add
mov
pop
pusha
mov
in
loopne
scas
or
add
dec
mov
aaa
dec
add
scas
cld
adc
mov
cmpl
mov
xlat
call
inc
xor
cmp
xchg
jl
out
outsb
mov
in
sbb
xor
xor
ficoml
in
or
shr
mov
repnz
in
imul
inc
or
fists
or
jp
es
push
push
pop
or
inc
or
sbb
jmp
hlt
mov
dec
shlb
adc
or
xchg
shll
sti
sub
out
popa
arpl
or
jnp
or
cmpsb
pushw
into
pop
add
inc
loope
push
sbbl
in
into
sbb
push
int3
std
inc
dec
xchg
mov
mov
adc
and
repnz
add
addb
ss
repz
mov
cltd
mov
pop
sahf
mov
pop
mov
lahf
pushf
push
or
or
mov
inc
sbb
imul
sar
aam
sbb
shl
mov
sbb
mov
nop
cltd
xor
adc
cld
cmpsl
addr16
stos
add
jbe
push
or
add
negl
imulb
push
push
push
inc
insb
insl
dec
sub
sbbl
mov
ja
popf
std
xor
sahf
cmpsb
out
int
jg
or
push
cmp
loopne
in
bound
imul
jecxz
jmp
dec
fmul
in
inc
jle
pop
pusha
add
rcrl
andb
clc
or
popa
cmp
mov
imul
pop
jb
xchg
out
fldl
sbbl
sarl
in
inc
scas
and
jle
dec
pop
adc
and
pushf
xor
jmp
dec
mov
and
icebp
popa
jae
sbb
aas
pop
arpl
xchg
shrb
dec
shl
mov
cltd
rclb
imul
mov
adc
mov
and
adc
add
fwait
repz
push
xchg
addr16
xor
jbe
xorb
jno
hlt
cmpl
mov
mov
dec
mov
outsb
and
sub
cmp
xlat
scas
lea
adc
cmpsb
pop
jl
jo
addr16
mov
push
mov
push
xor
push
lret
mov
push
xor
add
fists
mov
push
sahf
dec
fldenv
and
into
and
fs
and
clc
mov
ja
push
adc
cli
xor
les
mov
cmp
cmp
lret
iret
test
or
hlt
cmp
push
xchg
stc
inc
loop
aaa
outsl
mov
mov
mov
and
push
xchg
popa
dec
mov
add
sti
fsubrs
add
cli
xor
test
cmp
test
sar
arpl
push
fadds
sbb
xor
out
jge
into
xchg
sbb
out
mov
mov
mov
ret
jl
jae
push
filds
imul
mov
inc
imul
mov
add
nopl
and
xor
jno
es
and
rcrb
subl
mov
push
xor
cmp
pop
lret
push
jge
mov
push
call
es
push
mov
insb
cld
jecxz
lds
rcrb
cmp
pushf
ret
cmp
jae
hlt
cld
aam
fiaddl
and
xor
ljmp
aam
jle
adc
inc
fsub
scas
sbb
int3
orb
push
pop
popf
sub
movsl
and
and
repnz
dec
inc
adc
in
sahf
pop
pusha
inc
das
hlt
insl
cmp
fadd
test
xchg
mov
mov
push
mov
sbb
scas
xchg
pushf
fwait
mov
or
fcmovu
insl
sub
test
xor
aad
pop
pop
jne
inc
xchg
loopne
fsub
dec
xchg
int3
and
jp
cwtl
insl
scas
pop
xadd
jae
inc
dec
pop
adc
push
lods
push
dec
and
sub
cmpsb
pushf
sub
cmp
pop
dec
test
jecxz
jne
mov
xor
push
outsb
sub
jle
fistpl
sub
inc
push
divb
inc
mov
xchg
cwtl
or
aas
shlb
cmp
jg
mov
xor
xchg
sahf
or
shrl
out
lds
in
cmp
out
mov
jp
pushf
in
mov
inc
ja
jno
jl
and
or
xor
xchg
mov
add
iret
movsb
jnp
pop
scas
push
out
bnd
shrl
sbb
mov
in
dec
test
and
add
inc
or
push
pop
xor
dec
in
adc
sbb
jbe
fcmove
js
scas
imul
mov
inc
sbb
fstl
cmpl
add
mov
enter
mov
imul
pop
xchg
mov
pop
cmc
jne
into
lods
cli
push
inc
popf
push
push
add
ret
lea
or
xor
or
movsb
mov
daa
andl
and
imul
outsl
inc
sub
arpl
jle
xchg
lcall
xchg
xor
mov
clc
jge
int
stos
push
adc
fstps
or
push
mov
adc
insb
clc
add
pop
add
dec
xor
jle
lahf
std
cmp
ss
pop
sbb
arpl
xchg
jle
or
and
lret
push
fldenv
dec
fnstcw
pushf
call
adc
pop
push
in
out
push
adc
or
cmp
mov
jb
dec
adc
adc
insl
and
and
imul
cmp
scas
mov
jno
roll
test
adc
rcll
dec
lret
jnp
sub
adc
fxtract
sbb
in
inc
fsts
dec
andb
add
mov
dec
pop
enter
jmp
pop
out
mov
push
mov
lock
out
ret
aad
cld
roll
loopne
add
jbe
pop
shr
cvtps2pd
mov
ja
pop
in
cmp
fwait
call
and
repnz
sbb
sub
jno
rorl
daa
mov
cmp
aam
mov
scas
cld
ja
add
fisttpl
sub
xlat
outsl
nop
adc
lods
jl
cmp
mov
add
pop
xchg
repz
inc
nop
sub
loope
jp
out
adc
imul
mov
mov
sbb
xor
sbb
jl
xor
xchg
fiadds
loop
xor
subl
clc
xor
repnz
adc
sub
mul
insb
nop
sarb
add
mov
fwait
sub
sahf
inc
adc
test
out
pop
leave
pop
rorl
adc
or
mull
mov
add
test
xor
inc
lods
shrb
out
push
fwait
cwtl
lock
mov
jmp
shr
add
popf
mov
cltd
inc
ret
sub
and
xlat
mov
sbb
pop
aaa
shll
fisttpl
jb
pusha
clc
xacquire
dec
pop
mov
or
mov
mov
sahf
xlat
ret
nop
mov
in
and
jbe
enter
in
pusha
mov
sub
andb
gs
outsl
sbb
mov
dec
mov
or
jp
mov
mov
cmp
test
and
insb
mov
loopne
outsb
mov
mov
xchg
andb
sub
fisubrl
xor
mov
pop
popa
xor
cmpsl
cmp
push
push
cs
xor
mov
shll
dec
or
clc
xor
cs
enter
icebp
mov
push
mov
mov
jns
ss
je
xchg
push
push
sarb
cmp
int3
mov
jmp
in
out
xlat
jecxz
pop
icebp
imul
xor
outsl
jle
fldenv
sbb
div
adc
cmp
or
in
inc
cmc
das
add
jae
imul
fisubl
es
rol
shlb
sti
dec
push
mov
sbb
fdivp
cs
jbe
daa
std
jbe
cmp
or
xor
imul
nop
inc
mov
gs
and
aam
cmc
stos
jle
xchg
pop
stc
movsb
hlt
call
xchg
aad
out
adc
ss
add
push
icebp
sub
mov
cmp
orl
daa
and
pop
fisubs
xor
loop
inc
sbb
movsb
jl
add
mov
outsb
and
das
jb
lods
jl
dec
adc
push
adc
xor
je
enter
loopne
inc
adc
xor
and
and
clc
dec
movsb
lahf
mov
jmp
lock
dec
or
inc
add
dec
hlt
push
nop
jno
jmp
xor
enter
or
pop
cltd
gs
add
lock
out
repz
fwait
into
pop
sub
mov
xor
mov
cmp
inc
pushf
pop
fmul
lahf
negb
faddl
xor
mov
inc
cmp
cmc
pop
cltd
mov
hlt
aad
push
mov
xor
and
xorl
out
sbb
and
mov
call
add
cs
or
pop
test
and
shr
mov
sub
push
fnsave
pop
mov
out
lea
jnp
mov
pop
push
lret
popl
xor
aaa
jno
mov
out
es
jbe
xchg
sti
shrl
or
xchg
repz
int
test
imul
aad
xor
mov
dec
in
jnp
ljmp
imul
and
mov
pop
push
mov
add
inc
outsl
sbb
jmp
adc
ret
into
lret
enter
das
push
std
cmc
loope
inc
mov
fwait
out
out
jbe
popf
push
xchg
push
scas
scas
mov
loope
and
mov
mov
scas
inc
mov
lea
push
jb
fwait
mov
jbe
cli
fcomip
shll
sbb
in
pop
mov
or
mov
js
sbb
sub
add
andb
out
loope
inc
ljmp
inc
pop
clc
push
je
push
dec
fwait
push
xchg
pushf
and
loop
fbld
push
aad
aas
jg
movsl
or
call
pop
sti
xor
push
mov
sbb
ljmp
push
int
mov
test
xchg
dec
imul
mov
out
sti
in
adc
cmp
ds
sub
in
mov
fsub
adc
int3
mov
nop
ljmp
in
inc
mov
sbb
cld
dec
sbb
mov
mov
jne
js
lret
test
xchg
scas
inc
lods
cld
sbb
cmp
ret
int3
mulb
shll
insb
push
mov
iret
or
and
loope
scas
fldt
cld
inc
popf
push
and
add
mov
push
addr16
sbb
jl
pop
arpl
and
popa
cmp
sbb
popf
add
scas
rcll
mov
push
into
fsubrl
cld
in
or
cmpsb
dec
sti
mov
mov
push
sbb
flds
jne
or
fcmovnb
xchg
xchg
sub
test
cmp
insl
call
out
jo
pop
andb
and
jb
adc
jbe
aas
fwait
mov
jae
stos
lret
sahf
cld
ret
pop
pop
mov
jmp
andb
test
scas
xor
sub
jne
repz
pop
add
dec
xor
xchg
fsubrl
bound
mov
dec
xabort
popa
pop
xchg
mov
jg
test
mov
jge
mov
mov
adc
std
mov
insb
sbb
and
js
mov
popf
fiadds
fstl
add
mov
in
sub
scas
loop
cld
sub
sub
aad
add
push
adc
aas
ret
cld
adc
xchg
and
xor
bound
dec
adc
mov
mov
jae
icebp
ja
cmp
xchg
sbb
vcvtsi2sdl
jge
adc
fmull
or
push
pop
dec
jp
push
outsl
jge
or
xchg
adc
and
mov
lds
lahf
imul
jp
jg
mov
pop
and
xor
jnp
cmpsb
hlt
mov
sub
and
outsb
addr16
in
sbb
xchg
mov
add
daa
leavew
cwtl
ja
test
mov
push
jae
jle
sub
jl
fimull
mov
inc
cmp
adc
push
leave
push
scas
adc
ds
scas
xor
and
aam
xchg
inc
adc
and
jmp
add
xchg
movsb
jns
dec
or
hlt
mov
sbb
rolb
lcall
hlt
jmp
mov
in
xchg
int3
sub
adc
add
cs
out
mov
sub
xor
cld
inc
loopew
addb
inc
cmp
sbb
in
out
or
mov
ret
fadd
jae
sbb
dec
and
push
mov
lcall
xor
dec
xchg
push
enter
orl
sub
sti
rorl
mov
sbb
mov
mov
bound
icebp
adc
jecxz
xchg
test
dec
cmp
sub
xor
and
jnp
addl
push
ret
mov
lods
push
int3
jle
sub
enter
ficomps
xor
call
jbe
jbe
adc
mov
punpckhwd
sbb
clc
sahf
loope
jo
mov
sti
jecxz
aam
notl
jle
stc
xchg
sbb
lcall
xor
je
out
loopne
cld
cltd
imul
test
aad
jne
push
js,pn
dec
jge
xor
mov
mov
xchg
push
lds
mov
or
push
xor
jnp
pop
rclb
xor
dec
sub
popf
xchg
aaa
sub
insb
std
lods
int3
cmpsl
sahf
mov
mov
bound
xchg
test
xor
ds
test
mov
cmp
and
jno
adc
stc
daa
loope
mov
cwtl
sub
cmp
loopne
cmp
xor
in
pop
scas
push
sub
dec
pop
mov
cmp
adc
loope
push
sti
je
and
fwait
jle
mov
add
les
xchg
and
mov
repz
cmpsl
and
js
dec
lea
mov
cmp
pop
test
push
imull
les
xchg
popf
imul
or
mov
cmc
mov
dec
fadds
xlat
mov
cmpsl
aam
dec
cmp
test
shl
jmp
push
sbb
sbb
call
mov
mov
popa
add
testb
inc
and
and
aas
std
lds
fstpt
mov
aam
test
int3
cmpsb
add
mov
scas
add
sbb
or
fcos
and
daa
out
mov
mov
add
adc
pop
and
lret
pop
test
ljmp
pop
cmpsb
aad
and
imul
mov
cmp
test
mov
dec
pop
psadbw
inc
es
addr16
fwait
rol
mov
loopne
xor
or
test
in
cmpsb
rorb
add
das
test
or
stc
subb
nop
add
mov
fucom
pop
rcll
mov
dec
cli
out
push
call
fsubr
adc
jae
cmpsl
pop
lods
and
std
jmp
cmc
cld
xchg
sub
dec
sub
sahf
adc
and
ljmp
xchg
inc
sbb
sub
xchg
inc
push
mov
mov
mov
xchg
movsb
mov
sub
sub
pop
test
fsts
aas
push
add
sarb
and
popa
mov
ja
xchg
push
mov
shll
scas
pop
sbb
hlt
jecxz
sahf
in
rcll
es
sub
mov
xchg
push
sbb
sbb
lods
ret
mov
push
lret
or
test
jge
lret
movl
sbb
jno
jae
or
mov
enter
push
dec
mov
int
or
shr
cmpsb
clc
daa
lock
push
hlt
call
bound
fmull
jge
lds
xchg
push
call
mov
fsts
mov
dec
shlb
dec
clc
fucomi
or
pop
icebp
ret
push
testl
cmp
mov
mov
arpl
and
mov
sbb
outsl
mov
rcr
lret
popf
rcll
test
cmp
mov
out
cmp
fcomps
pop
push
dec
jne
dec
jnp
insl
mov
jne
lods
sub
push
add
xor
mov
inc
fisubrl
enter
mov
pop
sbb
xor
xchg
addr16
jp
shl
insb
js
leave
pop
mov
jb
shll
stos
dec
pop
fidivrl
or
ss
add
pop
sarb
repnz
sub
lret
aaa
sbb
repnz
or
inc
icebp
inc
std
inc
inc
mov
rcrb
aas
sub
lret
lahf
xor
ret
or
pop
cmp
xchg
cli
int
fsubrs
pop
pushf
scas
jecxz
popf
push
add
add
pop
add
push
orb
xchg
inc
mov
sub
stc
push
jle
cli
dec
fidivl
pushl
int3
outsb
xor
push
cmp
mov
leave
inc
lods
push
xchg
lea
inc
scas
std
scas
inc
je
xchg
loopne
fsub
outsl
sbb
loopne
lods
push
je
mov
push
xchg
xor
xchg
pop
mov
ret
mov
or
loope
and
xchg
fimuls
or
dec
or
loope,pt
popf
sub
int
out
lock
add
cmp
pop
jmp
ljmp
adc
loopne
out
sub
mov
jl
cmp
rclb
jo
je
fs
lods
popf
stc
cmp
mov
inc
mov
pop
or
mov
jne
adc
or
out
aad
mov
xor
or
test
cs
insl
pop
and
pusha
shrl
pop
inc
data16
call
scas
shrl
setnp
clc
mov
sbb
jno
lods
cmp
pop
call
pop
cmp
fcmovb
sub
cs
rclb
fnstcw
test
imul
dec
jns
pop
mov
adc
sarb
cmp
gs
test
sub
fcmovnbe
aad
mov
cmovnp
call
ds
add
add
test
mov
popf
lods
hlt
into
and
jns
jns
pusha
and
in
mov
add
mov
insl
push
xchg
sbb
pop
push
das
jae
dec
daa
cmp
mov
jae
mov
inc
arpl
movsb
test
pop
mov
fidivl
stc
mov
dec
dec
push
jb
mov
jae
rorb
xlat
and
mov
push
jge
aaa
sub
arpl
pop
ja
outsb
jl
popa
adc
xchg
imul
xchg
inc
cmp
xchg
pop
adc
iret
into
test
jmp
mov
flds
cli
in
movsl
pop
inc
out
xor
fdivl
and
testb
in
fwait
clc
push
bound
movsl
lock
jg
in
push
pop
inc
mov
lea
xor
jns
mov
fsubl
hlt
shll
sbb
mov
vucomisd
jg
icebp
push
ss
in
out
add
xor
add
mov
mov
clc
out
int3
adc
cmp
pop
bound
fisubrl
ret
jns
mov
mov
pop
xor
adc
sbb
xchg
add
inc
bound
mov
or
ljmp
in
or
sub
es
jne
pusha
mov
sti
add
ja
xchg
lahf
add
lret
inc
daa
pusha
pop
dec
mov
loopne
push
nop
enter
shll
xchg
jmp
mov
cltd
int3
dec
or
aam
jae
add
xor
je
shll
lret
xchg
out
pop
pop
pop
dec
arpl
cmp
notb
mov
orb
adc
xor
or
nop
hlt
pop
push
repz
sbb
jmp
test
dec
ss
sub
ret
je
sbb
xlat
xor
insl
loopne
jbe
adc
cmc
xor
push
cmpsl
in
loopne
rorl
add
xor
test
mov
lea
fisubrs
xchg
jo
fnstenv
insl
or
fldlg2
add
std
aad
test
jns
mov
mov
lock
loope
into
daa
mov
sbb
stos
ret
mov
shll
push
xchg
in
fwait
xor
xchg
inc
pop
mov
icebp
dec
push
sub
pop
cld
pop
add
push
in
mov
out
subb
jg
mov
adc
lods
ja
out
mov
and
dec
in
aad
stos
cmp
inc
aam
ror
jecxz
in
popa
pop
xor
lret
mov
mov
imul
iret
mov
mov
movd
clc
fsts
jge
int
int3
xor
push
roll
and
rclb
push
sti
sbb
scas
outsb
test
aas
fwait
aad
sub
hlt
test
jbe
jnp
cmp
pop
and
enter
lea
dec
pop
adc
mov
and
pop
or
sti
sahf
nop
outsl
in
in
es
mov
xchg
sbb
mov
sub
insl
xor
cmc
mul
ds
lds
enter
sub
jne
incl
mov
daa
push
ja
lds
inc
test
mov
jg
movsl
sub
pop
out
cli
jle
add
scas
ja
shll
mov
aas
shl
pop
lret
ret
adcl
gs
roll
je
mov
jnp
fmul
gs
sbb
and
push
sbb
push
int
aad
out
xchg
or
xor
mov
es
push
lods
push
call
out
mov
xor
movsl
out
and
in
repnz
in
hlt
or
pop
xor
into
ds
xor
and
jo
jp
test
jo
aas
dec
inc
pop
fisttpll
mov
mov
fldcw
mov
ja
jns
pop
imul
jl
push
pop
cmp
mov
mov
inc
ss
mov
xchg
mov
mov
inc
test
mov
xor
sbb
adc
push
jmp
dec
in
int3
leave
shl
cmpsb
inc
inc
and
aas
stc
jb
push
mov
push
shrb
cld
pop
out
cmpsb
test
cli
cwtl
pop
sbb
neg
loope
aad
sub
hlt
mov
and
ds
stos
sahf
xchg
jp
pusha
mov
pop
insl
insb
pushf
rcr
mov
in
push
js
int
xchg
jge
pop
repz
cmpsb
movsb
sahf
mov
add
cmp
cmp
cld
and
add
cltd
fs
sbb
fidivrs
shll
add
mov
scas
or
push
addr16
cld
out
jns
xchg
test
arpl
fs
mov
test
ja
push
push
pop
adc
ds
mov
or
ljmp
in
push
por
nop
mov
mov
jp
inc
into
jne
mov
lret
sahf
stos
addr16
or
sti
cmpsb
sub
inc
jnp
leave
jae
push
push
in
dec
loope
xor
aas
inc
sahf
mov
repz
add
fcom
lds
push
xchg
adc
adc
mov
push
mov
pavgw
cmp
dec
fs
sahf
push
gs
mov
ja
es
adc
rolb
outsl
pop
lods
lret
enter
imulb
mov
lods
cmp
push
cmp
into
ret
mov
sbb
inc
mov
jge
outsl
shl
rcrb
call
subb
pusha
lahf
xchg
clc
jbe
addr16
lods
jns
cld
loope
push
or
jne
mov
push
adc
inc
gs
inc
dec
inc
inc
pop
and
les
cmp
adc
mov
testb
imul
imul
addr16
inc
mov
push
scas
mov
loop
out
mov
dec
add
cmp
inc
xlat
xor
scas
jl
mov
lods
in
jl
cld
jg
xchg
sti
mov
mov
sub
jae
daa
dec
dec
in
xchg
xor
or
pop
add
fwait
inc
cs
clc
cld
xor
cmpsl
rcrl
add
inc
cmp
or
lahf
sub
fsubrs
bound
fbld
pop
std
mov
ljmp
fstp
mov
shrb
mov
sahf
dec
imul
iret
lods
xlat
mov
cmpsl
sub
mov
addb
sbb
out
dec
adc
sbb
push
dec
pop
xchg
xchg
xchg
and
fsubrs
add
mov
jp
pop
js
pop
mov
into
mov
jns
ret
inc
insb
in
sub
pushf
jbe
fwait
and
push
cwtl
dec
lods
sbb
adc
xlat
xorl
aam
popa
out
popa
or
sbb
xchg
sbb
and
add
and
idivl
outsb
shrb
leave
xor
xchg
call
jle
dec
mov
popf
es
xchg
and
stos
cmc
idivl
jl
sub
rclb
inc
lcall
ret
test
je
outsl
arpl
mov
shlb
in
ljmp
roll
movl
in
fs
sbb
pop
scas
ret
sbb
clc
nop
lahf
ffreep
movsb
arpl
mov
xchg
push
push
push
aaa
dec
clc
pushf
inc
mov
int
mov
jle
fnstcw
jnp
xchg
mov
lcall
pop
testb
cmpsl
sbb
jbe
cmpb
ficomps
insb
xor
mov
and
cmp
int
push
sub
cmp
in
ret
cmp
fdiv
mov
cmp
cli
sbb
push
ss
fstl
out
es
pop
lret
sar
jmp
repz
inc
push
push
cmovp
mov
sbb
and
cmp
cmp
mov
hlt
fdivrl
dec
add
addl
aad
jmp
mov
fwait
mov
xchg
xchg
jnp
adc
sbb
enter
add
xchg
into
divb
in
hlt
not
mov
jle
andb
cmp
mov
adc
shlb
loop
jg
lock
jmp
xchg
xor
pop
imul
xchg
xchg
mov
xchg
mov
mov
lods
xor
mov
inc
daa
and
popf
lcall
mov
pop
loopne
shll
mov
ja
pop
mov
loope
push
orl
notl
add
pop
loopne
xchg
or
notb
xchg
aas
xchg
lock
fidivrl
sub
sbb
inc
and
mov
mov
aas
xorb
lcall
pop
vpunpckhwd
inc
xchg
dec
jno
and
and
sub
cmp
js
insb
jg
dec
xorl
aaa
pop
pop
and
and
pop
mov
lcall
pop
out
fstpl
xchg
cmp
cvtps2pi
dec
sbb
add
xlat
xor
jae
inc
call
mov
repnz
sub
sbb
and
sub
stos
cmp
cs
pop
out
sbb
aaa
add
cmp
ret
xor
loope
push
push
mov
sti
dec
or
ja
clc
pop
lea
fstp
mov
cmp
stos
dec
jnp
test
xchg
jo
out
ds
fnstenv
pushf
push
pushf
pusha
leave
sub
dec
and
inc
push
adc
mov
test
icebp
add
jge
mov
out
loop
sahf
mov
repz
imul
sub
mov
sub
xchg
inc
inc
add
daa
int
scas
pop
fsub
out
loope
rclb
es
push
cmpsb
ja
repz
cmp
movsl
lods
ret
and
xchg
dec
out
pop
pop
lea
hlt
test
push
add
mov
out
pop
and
fs
ret
cmpsl
in
jecxz
adc
stc
xorb
sbb
dec
mov
xchg
out
scas
mov
dec
mov
int
and
dec
jne
inc
testb
imul
jns
sbb
stc
mov
stos
imul
stc
rcl
dec
cwtl
imul
cmp
lods
sbb
mov
cmpsb
add
fwait
xchg
lcallw
fs
pushf
lods
xor
adc
or
iret
insl
rcll
fidivl
daa
jo
sub
mov
sub
dec
add
lods
pop
imul
and
jg
adc
mov
push
push
clc
sti
addl
fsubrl
arpl
sti
pusha
cmp
je
xchg
lahf
sub
or
pop
fldcw
shrb
push
fidivs
dec
aad
ds
pop
pop
inc
mov
ret
mov
xlat
cmpsl
loop
mov
adc
gs
stc
movsl
arpl
mov
jmp
adc
cmp
inc
nop
fnsave
ja
inc
mov
inc
xchg
mov
add
dec
add
in
xchg
push
adc
outsb
in
mov
mov
mov
cmp
cmpsb
sub
adcl
mov
repnz
xor
out
into
shlb
dec
mov
imulb
test
popl
mov
jmp
and
nop
or
add
sbb
in
and
cld
lret
pop
cmp
je
xchg
mov
test
mov
xchg
inc
sarb
pushf
jg
xchg
pushf
cmp
dec
cmp
test
cmp
mov
cli
lcall
into
and
jge
sbb
push
pop
sub
xchg
jb
cmc
sbb
cld
leave
inc
dec
mov
loop
sbb
xor
push
jecxz
pop
cmc
jg
ror
push
pop
mov
pusha
mov
pop
movsl
push
sbb
mov
stos
leave
or
inc
rcrl
out
mov
mov
je
fistps
aaa
idiv
or
mov
adc
cmp
mov
add
jae
lret
xchg
jnp
pop
mov
call
pop
pushf
cmp
sub
cmp
or
pop
mov
mov
jg
and
stc
rcl
or
xchg
ret
movsb
clc
sub
push
mov
jae
and
mov
xchg
cli
pop
add
into
inc
loopne
push
xchg
mov
cmp
xor
mov
push
mov
add
add
lock
stos
xor
outsb
ficompl
jecxz
scas
xor
xchg
or
mov
loopne
js
stos
inc
adc
test
filds
mov
pop
jns,pn
mov
mov
fwait
push
sub
fcomi
dec
or
jecxz
xchg
cmp
adc
and
inc
test
aam
xor
test
mov
aam
rclb
xchg
les
dec
inc
cmp
stos
mov
push
dec
jl
or
lds
cltd
fwait
push
mov
je
fyl2xp1
dec
mov
xor
sbb
stos
int
xchg
mov
jge
adc
cmc
mov
mov
fdivs
cwtl
test
xor
imulb
xor
sahf
pop
outsl
in
sbb
cmp
nop
pop
adc
mov
sub
push
vphsubbw
lea
aas
mull
mov
loopne
pop
sahf
or
xor
lods
and
mov
pop
repnz
add
cmpsb
add
pop
repnz
js
pop
xchg
dec
in
pop
or
adc
adc
inc
ret
push
pop
idivl
inc
mov
xor
mov
sub
or
orl
xlat
inc
in
pop
cmp
mov
data16
imul
aam
loopne
arpl
rcrb
push
xchg
insl
aas
leave
pop
pop
mov
aaa
stc
pop
je
xchg
out
jmp
mov
lock
hlt
outsb
mov
lcall
sub
mov
xor
inc
mov
and
xlat
scas
sbb
fistpll
imul
fcomps
out
adc
xchg
cwtl
mov
push
lcall
test
fiaddl
lea
dec
mov
movsb
clc
repnz
or
or
mov
add
xor
or
or
outsl
jnp
adc
stos
push
jbe
punpckldq
xchg
mov
aam
lock
clc
movsl
fcom
insl
loopne
jbe
jmp
jmp
adc
cmp
sub
mov
jbe
les
dec
mov
xchg
fidivs
ja
dec
xor
ret
sub
stos
pop
sub
sbb
mov
and
out
in
loop
outsl
push
push
cmpsl
icebp
xor
int
icebp
xorw
xchg
sub
jg
iret
in
jecxz
movl
inc
mov
imul
inc
sahf
ret
cld
popf
push
iret
cli
xchg
xor
inc
pusha
daa
jg
add
int
sub
jnp
shll
and
stos
in
sub
nop
lahf
jmp
mov
cmpb
push
push
loope
ret
mov
mov
sbb
pop
jl
push
lds
mov
fldl
xchg
shll
dec
test
pusha
lock
adc
push
push
das
std
xor
int
or
xor
in
jp
xchg
xor
cmp
pop
call
xchg
adc
out
lret
push
cltd
push
lds
fsubl
daa
repnz
sub
push
and
imul
test
push
mov
sub
in
out
xlat
push
xor
jmp
dec
call
aaa
jp
pop
rclb
popa
aam
dec
lock
dec
mov
xchg
cmp
xchg
icebp
xor
xchg
mov
mov
inc
out
push
push
in
sub
lods
and
and
shl
out
into
dec
sub
xor
inc
push
push
jg
add
mov
mov
test
imul
xor
inc
das
and
popf
out
push
ja
xor
cli
mov
push
lock
daa
loop
fwait
imul
stc
bound
shll
jae
int
pop
cmp
icebp
enter
int3
outsl
pop
outsl
imul
iret
pop
loopne
sahf
add
or
cmc
dec
sbb
imul
rorl
in
int
pop
push
sbb
dec
stc
inc
sbb
sbb
adc
rcrl
or
mov
cs
in
fwait
jns
cmp
hlt
mov
es
loopne
ja
test
jno
push
out
adc
fsubr
test
shrl
fimuls
inc
cmp
cmpb
xchg
mov
les
out
data16
test
pop
in
fistl
xchg
jg
out
cmp
xor
cmp
sbb
mov
adcb
or
shrl
shlb
inc
pop
shlb
fsubrl
push
lcall
pop
std
adc
mov
fsubs
push
push
inc
fisubrs
push
dec
fwait
xor
jne
adc
mov
push
div
jo
sub
int
pop
psubq
mov
push
inc
pop
mov
and
clc
repz
xchg
xchg
mov
dec
mov
ja
lds
and
push
ja
mov
or
xchg
inc
pop
imul
or
ret
ss
mov
jl
jno
div
roll
lock
lods
movb
adc
inc
add
pop
dec
mov
adc
cmp
dec
clc
pop
mov
pop
rclb
sbb
jge
sbb
push
fdiv
adc
je
inc
cmc
test
stc
inc
dec
adc
xchg
sbb
xor
adc
in
icebp
fistpll
mov
popa
jecxz
push
mov
xchg
add
xor
in
push
push
inc
mov
shrb
push
dec
or
cmp
or
aad
push
pop
rclb
dec
gs
repz
cmpsb
xchg
push
jecxz
imul
push
fimull
nop
imul
sarb
add
scas
leave
lock
jg
mov
and
jmp
mov
out
adc
scas
sti
cmpsl
clc
data16
fsubl
sbb
add
jg
jno
dec
and
fimuls
mov
xor
les
xlat
enter
inc
int3
pop
dec
les
adc
nop
mov
mov
fldl
add
mov
push
daa
outsl
mov
shl
fstpl
stos
lcall
xor
repz
js
sarb
sub
dec
roll
fdivr
jp
push
fsubrs
movsb
clc
jl
adc
mov
insl
mov
mov
xor
leave
lods
in
es
push
add
mov
and
rol
sarl
mov
gs
inc
push
cmp
sbb
xlat
mov
dec
xchg
ficoms
fs
iret
or
jbe
sub
lahf
out
adc
and
xchg
leave
repz
insl
sahf
xor
stc
lock
out
arpl
sbb
ljmp
ret
or
test
gs
jp
sub
ds
mov
ffreep
mov
test
xor
cmpsl
adc
in
cwtl
insl
sbb
out
repz
adc
cmp
scas
inc
test
outsl
stos
jns
loop
mov
shlb
jae
xor
jle
cmp
cmpsl
int3
cltd
das
lds
aad
mov
jge
rorb
dec
insl
fsubs
jge
or
xor
fwait
jbe
imul
and
stc
dec
mov
imul
jae
mov
xchg
add
xor
xchg
cli
std
sbb
sub
ss
aad
das
jmp
lods
das
push
jmp
jo
ds
out
or
dec
les
enter
and
add
and
lret
mov
daa
movsb
ss
or
dec
mov
std
clc
dec
mov
outsl
hlt
repz
repnz
mov
and
out
mov
lods
ds
and
ja
nop
add
and
inc
mov
movsb
rorb
in
ja
mov
lock
jmp
sbb
fcomps
cltd
gs
lods
add
dec
inc
stos
fistl
push
inc
movsl
scas
cmp
cs
int
loop
test
cmp
in
shrb
jno
jns
rolb
and
pop
xor
xchg
mov
or
test
xor
dec
mov
dec
dec
js
add
fsubl
es
adc
movsl
xlat
ds
xchg
mov
cmp
rcl
push
mov
mull
add
call
ss
js
ds
xor
out
imul
les
call
sbb
mov
aam
push
aam
mov
clc
ret
movsb
pop
outsb
aas
mov
add
inc
bound
and
call
pop
xor
fstpt
add
or
add
fmulp
in
fbld
ss
jno
push
and
out
lock
ficoml
leave
test
sbb
test
cmp
xchg
dec
stos
call
sti
stos
sub
shr
lds
jp
dec
cmp
sbb
mov
inc
add
loope
sahf
mov
lahf
sbb
dec
dec
xor
xlat
push
ret
hlt
cmp
iret
loop
push
gs
pop
loop
xor
test
punpckhbw
xchg
loope
or
insl
fimull
jno
jmp
mov
xchg
xor
add
shlb
dec
or
xor
cli
mov
add
add
add
or
xor
pusha
add
fisttpl
mov
nop
cmpsl
insl
test
icebp
sbb
xchg
stos
or
mov
jbe
dec
xor
sub
arpl
adc
es
or
xor
mov
or
mov
mov
push
enter
push
adc
mov
scas
jmp
mov
mov
cmp
mov
lret
mov
shr
mov
neg
aaa
idivl
in
dec
lahf
push
push
ss
andl
scas
cmpsb
decl
push
adc
and
or
xchg
adcb
mov
fdiv
sub
dec
mov
rorb
sahf
xor
jae
sti
inc
cmp
std
sub
and
arpl
xchg
ja
sti
or
xlat
mov
xchg
leave
mov
fwait
add
dec
nop
in
push
imul
cmpsb
loop
cmpsl
push
inc
xor
cli
mov
dec
insl
xchg
mov
repz
lds
pop
fadds
push
inc
xchg
fldcw
pop
cs
cmp
and
aas
mov
ret
cmp
mov
js
call
add
rclb
sub
or
aas
lahf
sub
mov
das
mov
add
mov
out
mov
mov
mov
xchg
inc
jne
mov
mov
cli
loope
push
pop
cmp
pop
js
out
mov
dec
insb
hlt
mov
enter
loopne
jmp
adc
or
jno
fwait
dec
out
rcrb
jb
or
xchg
jp
push
pop
ljmp
popa
scas
fmull
adc
stos
mov
jae
roll
inc
mov
scas
mov
test
add
push
dec
fwait
insb
adc
jecxz
add
ret
fs
mov
pop
xchg
adc
cmp
push
jmp
scas
mov
aam
mov
mov
outsl
adc
mov
outsl
jo
imulb
jmp
outsb
repnz
ret
int3
inc
pop
mov
sbb
mov
mov
jae
xchg
pop
inc
inc
mov
cmp
and
jns
popf
lds
std
sub
fwait
sub
push
inc
ss
or
xor
pushf
decb
sarb
adc
orb
pop
negb
push
dec
sbb
sbb
aaa
jno
fdivp
mov
xchg
fisttpll
mov
adc
fs
add
jno
imul
jge
dec
dec
push
xchg
jmp
inc
jae
fwait
je
or
insl
ret
out
rorb
aas
out
adc
cltd
cld
xchg
cmc
mov
fcmovbe
cmp
in
movb
inc
cmp
aas
jmp
and
xor
pop
cmp
pop
pop
cmc
fildll
icebp
sbb
pop
movb
jo
and
icebp
push
dec
jmp
mov
es
test
sub
cltd
cmpsb
pop
mov
cld
jnp
dec
test
xor
test
mov
int3
outsb
clc
jl
cmc
push
mov
lret
and
les
ja
xchg
inc
outsb
scas
sub
adc
mov
mov
subl
gs
lods
dec
pushf
std
jno
stos
cli
leave
mov
pusha
sub
mov
adc
loope
pop
cs
xchg
fs
outsl
mov
sbb
mov
sub
sub
mov
outsl
notl
incb
int
test
es
xchg
sub
cmpb
pushf
outsb
or
int3
adc
add
jmp
aad
inc
bound
into
js
sbb
rcrl
xor
jns
cmp
not
jl
and
ds
or
dec
test
push
xor
ss
daa
insl
rolb
inc
mov
or
adc
push
mov
rcrl
cmpsl
mov
mov
fdiv
sub
mov
xchg
xchg
and
iret
imul
pushf
mov
ret
inc
mov
mov
push
ljmp
push
mov
and
or
xchg
daa
sbb
add
loop
push
divb
lret
jg
mov
cvtps2pi
fimull
lcall
arpl
js
cmp
sbb
jne
in
lret
inc
pop
pop
or
jmp
pop
xchg
rolb
stos
pop
inc
adc
out
mov
sub
pop
cmpl
push
xchg
in
sub
and
mov
jecxz
loopne
pop
xchg
bound
cmp
mov
lods
jno
inc
mov
out
sub
lea
sar
mov
decb
dec
sarl
push
movsb
insl
and
fwait
jae
mov
sqrtps
inc
cld
mov
cmp
jle
das
push
out
std
push
push
or
sub
jnp
repnz
int3
testb
xor
cmp
dec
pop
pop
xchg
je
hlt
mov
xchg
push
jb
xor
dec
arpl
stc
mov
lods
dec
jno
rcrl
iret
ljmp
mov
shlb
int
or
test
inc
sbb
nop
hlt
test
popa
jno
mov
in
int
faddl
or
mov
sbb
pop
jbe
add
pop
test
cltd
xor
dec
fwait
add
push
cli
cmc
mov
pusha
bound
mov
sub
pop
icebp
sahf
lret
adc
or
outsl
dec
popa
jecxz
or
mov
lcall
daa
rcrl
mov
mov
es
and
xchg
inc
testl
mov
sbb
outsl
adc
jbe
arpl
jecxz
inc
test
iret
es
inc
mov
shlb
out
and
xchg
data16
sahf
movsl
call
das
mov
xchg
sbb
xchg
push
add
jbe
call
jp
sahf
pop
or
xchg
sub
mov
xlat
js
out
sbb
cmpsl
inc
cmpsl
jo
push
inc
push
pop
mov
iret
outsl
and
mov
fdivrs
nop
dec
in
ljmp
or
in
sbb
xchg
addr16
stos
jb
jg
cmp
js
cmp
ds
inc
mov
scas
cmp
jne
sbb
stos
int
xchg
shl
xor
mov
fs
aaa
adc
pop
pop
inc
mov
nop
inc
add
out
insb
bound
xor
es
mov
out
mov
inc
cltd
movsl
shl
iret
imull
imul
stos
mov
sbb
lods
adc
mov
cmp
movsl
jg
psubusb
jle
inc
imul
jmp
xor
inc
arpl
push
popa
jg
cmp
and
jecxz
inc
pusha
divl
pop
jne
mov
or
sub
inc
cmpsb
add
pop
dec
pop
sub
inc
rorb
or
jnp
fmull
xor
sub
stos
in
jp
mov
and
inc
fidivrl
test
push
and
jbe
sahf
push
mov
cmp
lcall
jl
pop
inc
ss
into
or
jge
inc
into
loop
xor
movsl
pop
repz
in
adc
cmpsl
test
nop
xchg
xor
jle
push
into
aam
or
pop
divb
jecxz
pop
xlat
push
shlb
cld
push
push
inc
repz
test
xor
mov
in
jo
movsl
or
lahf
xlat
int
mov
adc
dec
push
mov
lret
repz
sub
imul
xchg
loop
iret
cmp
adc
leave
jnp
roll
jo
pop
lcall
scas
test
cmc
fmuls
xchg
movsl
mov
sbb
fadd
mov
mov
pop
outsb
and
jno
pop
jnp
xchg
push
ss
stc
inc
or
es
roll
push
sub
jnp
sbb
loop
fs
test
cmpsb
scas
rol
fidivrl
add
xchg
bnd
dec
and
push
mov
jmp
mov
inc
data16
cmp
fnstsw
adcb
sub
mov
mov
sarb
dec
jns
lods
inc
int
mov
jno
mov
add
xor
hlt
loop
jbe
jmp
lret
out
pop
cmp
inc
xchg
and
fildll
aas
roll
push
mov
sub
mov
lods
mov
ja
xchg
adc
push
mov
and
xorl
xorl
mov
pop
xlat
and
and
xchg
sti
fwait
scas
test
sbb
push
arpl
cmc
push
jecxz
ror
jno
cmp
push
jbe
xchg
lods
sub
sti
mov
cmpsl
loop
jb
fdiv
mov
push
hlt
push
mov
fwait
xchg
and
push
jecxz
push
xchg
fsubr
xor
repz
dec
cmp
cmp
sti
sahf
push
mov
push
lods
cltd
mov
out
sub
test
stos
dec
lods
adc
sti
pop
pop
pushf
rorl
sub
cld
cmpl
jno
ja
insl
out
into
mov
sahf
fidivs
inc
inc
pop
mov
call
insl
mov
mov
movsb
cmpsl
iret
jge
sub
sbb
ljmp
xor
mov
mov
daa
jmp
pop
stos
push
stos
daa
test
jne
test
push
jmp
add
shll
inc
or
idiv
jge
xor
fs
sbb
push
mov
iret
lds
or
or
lds
scas
mov
or
fsubs
xlat
in
push
mov
sbb
outsl
jmp
fsubs
cmp
iret
pop
mull
push
mov
dec
jnp
or
test
movsl
cmp
add
or
mov
inc
xchg
add
outsb
sub
cltd
lret
inc
add
add
pop
mov
push
mov
pop
call
and
sub
cmc
inc
in
ret
push
adc
lcall
inc
aam
add
adc
into
jne
mov
jl
shlb
jge
jmp
dec
iret
mov
sbb
ja
push
inc
pop
mov
fistl
jmp
bound
mov
push
clc
movl
adc
adc
fmuls
mov
enter
aas
pop
aas
sub
xor
dec
sub
and
rclb
shll
inc
insl
adc
mov
jbe
insb
pop
stos
mull
sbb
or
ret
clc
fcmovu
out
cs
and
outsb
fistl
iret
incb
jge
dec
xchg
jmp
push
mov
fdivrl
jg
lret
loop
aam
jge
mov
dec
push
adc
xchg
and
loop
cmp
std
xor
fdivrp
mov
mov
sub
pop
imul
insb
mov
jle
jb
icebp
sbb
fildll
iret
fucom
inc
adc
scas
ljmp
sti
aad
cmp
dec
push
lock
jne
out
mov
daa
jo
ret
inc
mov
jge
jp
repnz
rol
mov
and
or
bound
movsl
fcomip
push
mov
lods
mov
inc
or
int
test
sbb
lret
sahf
clc
adc
mov
sahf
repz
xor
pusha
fsubrs
push
aas
scas
orl
sub
inc
dec
iret
popf
ret
jno
or
sub
rcrl
dec
pop
sub
mov
ss
lea
mov
stos
cmp
or
sub
and
dec
adc
adc
hlt
sti
hlt
fnstenv
xor
call
and
pusha
cli
negb
sub
pusha
lods
xchg
inc
inc
idivb
sub
sbb
or
inc
pop
inc
dec
sbb
ret
lahf
jb
lahf
pop
lret
pop
xor
aam
out
or
into
mov
fnsaves
rolb
lock
lds
sahf
jo
mov
adc
aam
dec
xchg
sarl
int
insl
or
ficomps
cli
cmp
loopne
xor
adc
test
test
cmpsl
inc
xchg
add
popa
xchg
pop
das
xor
mov
aam
ds
fnstenv
pop
push
lret
pop
and
jecxz
jl
add
or
mov
sub
stos
jmp
pop
mov
sub
rolb
gs
jle
call
lods
cmp
ja
add
pop
das
cmc
jno
adc
and
jbe
shl
jo
cmpsb
mov
mov
dec
clc
adc
inc
sub
fs
jns
xchg
aas
lret
pop
test
dec
pop
cmpsb
sbb
test
push
add
push
lds
jae
ret
repz
into
jno
mov
jb
lahf
cmpsl
sub
mov
jmp
push
loope
mov
mov
and
rorl
ss
loopne
idivb
subl
loop
int3
insb
std
sub
adc
and
std
dec
dec
popf
out
or
ja
or
movsb
sub
lret
or
and
lret
mov
and
test
and
jno
sub
cmp
adcb
xchg
loop
jecxz
je
dec
inc
mov
dec
inc
or
lahf
into
or
sbb
pop
dec
stc
pop
jae
out
jo
movl
xchg
out
stc
dec
stos
mov
mov
shlb
mov
pop
shl
pop
dec
inc
scas
cld
arpl
lock
into
es
stos
test
subb
loopne
imul
fisttpl
popa
loopne
push
xor
aas
xor
rorb
mov
je
in
mov
mov
fs
popl
int3
adc
loopne
daa
cmp
in
aam
push
inc
and
inc
mov
push
neg
push
inc
addr16
dec
ja
popa
mov
adc
rcrb
imul
loop
and
inc
xor
sub
jo
dec
sub
push
jbe
sbb
ret
adc
cmp
cmp
sbb
std
jge
outsb
test
popf
test
enter
push
dec
xor
jp
push
stc
imul
leave
cli
cli
aas
rcrl
std
gs
mov
subl
sbb
std
dec
cmc
fs
imul
insl
push
adc
xchg
xchg
fstpl
xor
incl
inc
add
dec
shrl
mov
lods
mov
rcrb
ret
add
mov
pop
fwait
cmp
sub
iret
jae
lret
adc
out
fiaddl
sub
cmp
bound
in
stos
fistl
add
sub
dec
dec
sahf
mov
jge
out
sbb
stos
xchg
xor
cmp
pop
js
push
aam
jg
out
adc
and
mov
scas
mov
push
inc
xorl
fcmovnu
cmp
jo
cmp
loop
add
mov
add
imul
lds
sti
cmp
xor
add
and
add
push
push
daa
push
mov
inc
sti
mov
lds
mov
je
add
popf
lods
dec
push
inc
sbb
js
fisttps
cli
add
sahf
ss
pushf
scas
bound
andb
jne
fimull
adc
mov
push
push
lods
nop
mov
loopne
pop
inc
dec
rcr
lret
fwait
mov
lcall
icebp
test
in
lret
sbb
dec
sub
sbb
sub
pop
push
sub
clc
les
jae
or
inc
arpl
lret
push
jge
aam
jp
inc
or
das
pop
inc
into
ljmp
imul
mov
xor
add
xor
fdivs
mov
cmp
dec
into
lock
out
sahf
loope
in
dec
cmp
cmp
adc
lods
jne
sub
mov
push
xor
xchg
jb
or
dec
add
inc
aad
shl
nop
in
outsl
xor
ss
jl
push
add
jns
ret
mov
pusha
push
jg
repz
sub
xchg
das
mov
sbb
dec
test
jo
mov
ret
pusha
iret
xchg
mov
cmp
imul
cmp
lods
out
jg
dec
push
cmp
cmp
mov
cmpsl
scas
ficoml
mov
test
sbb
cmp
movsl
jmp
das
and
mov
add
test
cmp
lds
mov
inc
loope
out
lds
mov
cmpsb
and
lahf
in
push
lahf
add
mov
push
ret
xor
loope
sbb
push
and
push
imul
rcrl
stos
test
imul
push
in
inc
mov
or
push
sub
idivb
imul
inc
loopne
and
out
test
sbb
je
push
popa
bound
sbb
mov
inc
jne
push
push
mov
lret
cli
loopne
lahf
in
sub
nop
addr16
loopne
mov
add
sbb
ds
dec
sbb
andl
xchg
scas
sbb
dec
xchg
and
cmp
hlt
lret
stc
mov
xor
push
xchg
xor
inc
push
jne
and
jle
and
adc
dec
insl
cli
jno
sar
aaa
leave
push
pop
cmp
jge
insb
push
outsb
mov
pop
aam
jp
dec
ret
in
adc
loop
lret
add
sub
xchg
std
test
cmp
xchg
cmc
mov
mov
ret
lock
pop
pop
popa
sahf
jns
jno
mov
xchg
inc
je
insl
xor
mov
test
inc
out
cmp
movsl
adc
sbb
mov
dec
fidivs
sti
cltd
pop
loope
sti
push
sbb
addl
stos
xchg
dec
push
aam
push
int3
sbb
pop
cmp
dec
xlat
nop
pop
idivb
fldenv
imul
sbb
or
lret
add
jg
andl
mov
imul
sbb
imul
mov
sbb
or
jb
pushf
scas
orl
iret
pop
stos
xchg
fucomi
add
cmp
icebp
js
mov
mov
mov
add
addb
adc
jl
icebp
outsb
insl
lea
fmuls
add
out
and
enter
stos
inc
addr16
jmp
inc
pop
fcomi
or
ljmp
add
fisttps
outsl
or
stc
imul
sub
mov
sub
push
scas
daa
insl
movb
push
jbe
or
sti
pop
int3
cmc
and
scas
in
jg
es
das
loopne
aas
add
rclb
dec
add
sbb
cwtl
repz
movsb
or
or
and
clc
jbe
fstps
or
inc
pop
fdivp
lea
in
xchg
stos
mov
stc
mov
adcl
xchg
call
pop
mov
xchg
or
fsub
fisttpll
push
push
shll
nop
mov
mov
subl
es
enter
sbb
xor
popl
mov
cmp
repz
js
xchg
pop
adc
push
icebp
in
mov
rorb
cmpsb
pop
rolb
xor
dec
mov
rorb
or
xchg
addl
fwait
mov
imul
sub
mov
dec
icebp
pop
fsubs
sbb
popf
cmp
scas
fcom
jle
mov
test
arpl
or
add
xor
shr
pop
pop
das
or
cli
xchg
loop
pushl
sbb
out
movb
in
punpckhbw
push
ds
add
jbe
xlat
xchg
imulb
int3
mov
lret
les
stc
mov
loope
lcall
xchg
sub
jle
dec
or
lcall
test
insb
jns
popf
push
jo
movsb
mov
or
mov
and
movsl
adc
jo
lahf
mov
cld
lahf
daa
dec
push
cmp
push
and
popf
cltd
xchg
gs
clc
stos
ss
out
cmpsb
cli
mov
xlat
outsb
ljmp
imul
sub
repz
sbb
outsb
jae
inc
mov
imul
mov
popa
cmp
or
addb
ret
jge
aaa
pop
adc
pop
cltd
repnz
jg
lahf
cmp
or
add
or
cmpsb
pop
add
ljmp
push
xchg
jb
cmc
and
les
pop
pop
loope
ljmp
and
inc
das
sbb
mov
fcmovb
nop
shlb
fdivr
push
shlb
sub
inc
push
sub
fs
mov
pop
dec
scas
or
mov
nop
and
aas
push
cmp
test
xor
mov
dec
shlb
cmp
cmp
jne
push
push
jmp
inc
std
repnz
mov
cld
push
ret
lahf
pop
out
dec
dec
push
xchg
inc
xchg
out
aad
sub
out
mov
inc
out
push
cmpsb
xor
jb
cmp
xchg
xor
dec
xor
xchg
xchg
repnz
pop
je
mov
decl
push
sbb
inc
pop
jne
cmp
jg
add
xor
or
mov
mov
pop
xor
hlt
push
scas
aam
cld
jecxz
imul
sub
aas
aam
mov
test
xchg
pop
rol
mov
dec
popa
mov
mov
cli
mov
test
jns
addr16
cmp
daa
inc
and
pop
lcall
inc
stos
lea
bound
and
aas
aad
cmp
loop
sub
rcr
push
shlb
dec
std
pop
sbb
inc
ss
in
dec
popa
call
fildl
clc
sbb
and
sub
cmpsb
aas
arpl
mov
xchg
xchg
xor
jmp
ja
fs
sbb
adc
in
dec
dec
or
mov
stc
mov
or
je
sub
add
jb
shll
psraw
lds
shl
leave
aaa
popa
pop
sbb
aas
jns
clc
mov
push
xor
jbe
mov
mov
mov
loop
sub
jbe
push
xorl
jne
sbb
jo
data16
imul
dec
dec
mov
or
cmp
add
aas
jns
sbb
dec
mov
shr
xchg
cmp
sbb
add
loopne
jge
pop
mov
xlat
or
xchg
in
mov
jb
xor
sbb
dec
sbb
repnz
pop
and
stos
test
cmp
push
insb
loope
imul
jmp
out
lret
movsb
cmp
ss
mov
outsb
push
add
cmpl
sub
xor
add
int3
cmp
jg
sahf
int
dec
sbb
add
or
or
sub
mov
popf
add
cmc
cmpsb
xor
or
xor
leave
xchg
movsl
aam
mov
fsubr
pop
inc
pop
lods
test
lret
lret
insb
cmpsl
setle
loope
mov
inc
int
sub
sbb
jmp
fcomps
or
sar
sub
and
xor
pop
dec
fwait
or
aad
aad
add
pushf
repz
cli
test
lret
mov
lods
mov
push
cmp
out
or
hlt
test
push
inc
mov
pop
or
js
rorl
cmpsl
mov
stc
aaa
repz
or
xor
ret
sahf
xchg
lret
mov
cmc
push
inc
rorb
cwtl
dec
out
out
jo
inc
mov
jg
mov
mov
aad
je
aaa
mov
add
lret
fldcw
sub
and
xor
scas
out
or
mov
inc
xlat
out
xor
push
add
jo
pop
lock
xorb
lods
push
and
adc
aam
pop
std
mov
std
test
sti
lret
lret
sub
lcall
push
xor
or
mov
inc
out
cltd
test
mov
sbb
mov
fs
pop
arpl
push
ret
bound
testl
fnstcw
fcoml
fisubl
xor
fidivl
loopne
sbb
loope
mov
ljmp
and
xor
popf
and
fucompp
pusha
sbbl
mov
push
pop
sbb
testb
popf
adc
push
adc
std
cmp
lea
mov
adc
push
dec
jo
fnstsw
fnstcw
add
cltd
int3
test
fwait
jl
xor
je
ljmp
fsubrl
jecxz
xor
push
adc
insl
lock
int3
dec
push
shlb
and
mov
mov
insl
mov
jae
cwtl
cmc
add
sbbl
test
mov
repnz
sub
dec
loope
add
ret
xor
or
jo
hlt
imul
dec
cs
int3
or
xchg
adc
aaa
inc
ja
push
mov
insb
sbb
fnstcw
sub
push
xor
push
push
movsb
fcoml
cmp
mul
xchg
cmp
int
iret
inc
sbb
dec
xchg
mov
pop
outsb
jns
add
pop
test
imul
lock
mov
pop
sub
jbe
leave
movsb
lock
cmp
pop
aaa
in
push
mov
lock
mov
xchg
lahf
push
dec
sub
mov
add
push
push
repnz
repz
cs
ja
mov
stos
sub
or
mov
test
jge
mov
test
xorb
nop
xchg
hlt
fisttpll
adc
cmpsl
push
fmul
ds
dec
mov
scas
dec
jge
mov
push
sbb
mov
mov
popa
pushf
mov
outsl
sbb
leave
in
out
adcb
jbe
or
roll
jmp
outsb
cmpsl
hlt
jnp
dec
arpl
add
jnp
out
lahf
dec
push
lods
mov
addr16
mov
stos
cmp
mov
cmp
xor
int
div
imul
inc
out
imul
xor
rcl
cmp
xor
xchg
mov
sbb
inc
shl
les
test
push
xchg
adc
mov
stos
aad
add
js
pop
mov
pop
pop
pop
fsubs
stos
orl
or
sbb
xor
les
aam
arpl
cmp
xor
dec
push
testl
jl
and
or
test
cmp
mov
mov
adc
cs
rolb
popf
lods
in
cmp
movsl
and
dec
pop
pop
pop
ret
inc
ss
test
outsb
adc
repz
xchg
and
xor
std
mov
je
or
cltd
mov
dec
movsl
fldl
scas
jge
movsl
mov
adc
xchg
pop
std
sub
or
xor
mov
rclb
insl
and
shlb
daa
shl
or
scas
cmp
xor
pusha
sti
push
std
movsl
fbld
and
lret
jo
jo
test
xchg
pusha
and
and
pop
push
cmc
std
pop
fdiv
ljmp
jb
push
mov
cmp
push
push
push
cli
cmp
inc
push
mov
bnd
cmc
addl
xor
mov
je
sub
xlat
or
dec
nop
and
int
scas
jge
scas
std
mov
rcrb
mov
testb
loopne
insb
inc
xchg
pop
xor
push
xor
sbb
cmp
rorb
fldenv
or
and
roll
in
mov
aam
and
push
xchg
int3
jle
leave
adc
cli
adc
sub
mov
int
mov
es
pop
imul
ss
mov
push
ja
and
out
pop
xor
pop
fiadds
mov
pushf
dec
ret
xchg
pop
test
fwait
pop
jb
mov
adc
mov
pusha
sub
dec
sti
fs
mov
mov
loop
push
stos
hlt
push
add
sbb
mov
dec
gs
xchg
pop
mov
pop
lea
adc
out
clc
mov
stc
insl
out
sahf
xchg
movsb
into
or
jg
dec
add
fdivl
adc
add
inc
das
cltd
cmp
aaa
call
leave
xor
mov
fidivl
cmp
pop
pop
mov
and
or
mov
ficoml
mov
mov
loope
scas
sub
or
clc
fcmovb
jg
xchg
push
add
xchg
insb
stc
cmp
inc
cmp
lods
lcall
mov
cmp
xchg
shll
js
mov
icebp
inc
add
popf
test
lret
orb
jbe
xor
inc
shrb
es
popf
ss
jnp
add
std
icebp
loope
xchg
aad
push
out
pop
stc
je
sub
pop
in
sbb
jno
mov
mov
mov
fcoml
push
nop
lea
sbb
test
outsb
sti
aaa
clc
sahf
xor
ss
jae
lret
aad
mov
and
cmpsl
pop
inc
mov
into
jl
mov
push
add
rcrw
scas
out
sbbb
cpuid
pop
xchg
mov
jbe
or
dec
jnp
sbb
push
lds
jp
push
cltd
push
pop
dec
push
xchg
fwait
jmp
insl
cld
push
push
dec
in
adc
sahf
lock
pusha
mov
ljmp
dec
cmpsl
sbbb
in
int
mov
adc
sbb
push
or
and
movb
ds
add
sti
pop
stc
pop
and
dec
in
cmp
cmpsb
push
mov
push
push
push
fdiv
imul
sub
jmp
lahf
movsb
jno
and
sti
mov
push
push
dec
mov
fnstcw
ja
jmp
shlb
push
xlat
push
sbb
call
pop
into
xchg
dec
mov
inc
cmp
test
push
movsl
cmp
arpl
xchg
push
insl
mov
shll
aam
jp
pop
fimull
cmp
pop
nop
cmp
lock
vmaxps
movl
pushf
or
cltd
add
xor
aas
jo
mov
loope
add
stc
lods
jg
mov
cmc
sbb
jmp
inc
adc
ds
mov
jecxz
jle
loopne
ror
rcll
xor
inc
pop
jb
xor
out
leave
sarb
rclb
jmp
sarl
xchg
sbb
scas
adc
iret
rorb
shl
lods
add
xlat
lret
test
test
les
inc
sbb
xchg
aam
int
fs
pop
rcrb
test
shll
pusha
push
test
adc
xor
push
stos
out
mov
in
aaa
xor
mov
aad
mov
in
js
lahf
mov
fadds
repz
inc
outsl
test
lods
cmpb
adc
in
xchg
popa
add
xor
into
pop
adc
into
lahf
pop
rep
and
roll
addr16
jle
mov
and
jbe
shlb
fbstp
sbb
ljmp
js
in
or
jge
dec
dec
xlat
inc
or
sub
cld
jne
lds
mov
xchg
shrl
fcmovnu
out
out
xchg
cs
jo
lahf
sub
jecxz
mov
leave
pop
ret
cmp
and
sub
fsts
xorb
mov
mov
fwait
subb
and
pop
loope
sub
add
pop
aam
test
loope
fwait
outsl
xor
sub
sbb
lahf
sub
cld
loop
xchg
dec
fstl
mov
xchg
inc
mov
inc
out
push
cwtl
scas
lahf
cmp
movsl
mov
add
pop
std
repz
fidivl
js
dec
cmp
mov
mov
inc
sub
lock
aas
sbb
pop
pushf
insb
jb
dec
add
jmp
xor
stos
in
xor
mov
mov
sbb
scas
es
aad
xor
mov
mov
aaa
aas
sbb
dec
pop
in
rcll
and
xchg
shll
in
mov
out
fwait
mov
pop
cmp
in
into
mov
inc
push
not
pop
fbstp
sub
jns
mov
leave
icebp
inc
rol
xchg
adc
mov
xchg
lcall
sub
ror
imul
dec
cmp
aad
sti
jns
fdivl
xor
xchg
xchg
push
cmp
insb
mull
adc
cwtl
mov
pop
or
out
dec
mov
inc
test
lea
mov
lods
and
and
lcall
sub
int3
push
mov
push
arpl
ss
jne
fcmovu
xchg
cmp
loopne
movsb
mov
mov
xchg
out
mov
movsl
gs
mov
push
push
jo
faddp
xchg
cmp
stos
and
jnp
pop
or
scas
outsl
and
mov
jno
mov
ret
daa
mov
fincstp
or
cmp
jmp
aad
stc
mov
mov
mov
jae
jp
cmpsb
jecxz
loope
pusha
out
imul
aad
sub
mov
mov
test
sbb
mov
pop
sbb
dec
push
cmpsb
push
mov
jo
pop
lahf
scas
inc
lock
mov
mov
lahf
test
mov
mov
bound
mov
add
inc
push
cmpsb
daa
jmp
mov
xchg
sahf
lea
aad
aas
inc
and
addr16
lahf
mov
lock
insl
or
das
mov
add
cmp
jo
lock
in
cmp
or
push
mov
push
sahf
mov
xor
enter
mov
je
test
or
rclb
addb
pop
mov
movsl
shlb
jl
push
inc
lods
push
loopne
mov
hlt
adc
cltd
dec
and
xchg
and
jns
mov
xor
sbb
sub
dec
cli
sbb
imul
filds
pushf
jne
adc
add
inc
enter
imul
imul
test
xrelease
aaa
inc
nop
popa
scas
in
adc
fiadds
or
mov
hlt
lret
repz
inc
cld
add
repz
repz
inc
movsl
xchg
add
add
push
imul
insb
sub
iret
or
or
test
movsb
sbb
jle
cli
xlat
das
lods
adc
scas
mov
xor
fwait
in
pop
jg
jecxz
repnz
jge
jmp
xor
cmpsl
adc
pusha
repnz
into
and
pop
fsubs
adc
movsb
loope
mov
in
mov
inc
mov
xchg
sbb
mov
add
dec
dec
fistpl
mov
movsb
out
mov
pop
mov
pop
xor
mov
or
mov
inc
push
sbbb
adc
dec
add
repz
call
cmp
dec
mov
ljmp
pop
cld
movsb
daa
sbb
icebp
push
add
ss
xchg
insl
scas
xor
loope
mov
cltd
mov
pop
push
dec
outsb
les
or
pop
xchg
mov
std
repz
out
subl
mov
in
imul
aaa
or
ret
repz
loopne
int
dec
xor
aam
leave
notb
scas
add
int
mov
inc
xchg
adc
loopne
cmpsb
sbb
orb
popa
cmpsl
in
or
mov
add
shll
cmpsl
mov
lock
xchg
nop
mull
xlat
mov
adc
sahf
xorb
les
aaa
pop
inc
in
mov
push
mov
xchg
es
jbe
enter
mov
xchg
call
and
call
push
mov
jbe
les
inc
xorl
inc
rcrb
rol
scas
insl
addl
and
xchg
les
jne
add
lock
xchg
push
aam
rcrl
data16
ret
mov
fwait
jns
mov
sbb
test
xchg
insb
pop
adcb
dec
pop
std
jne
popf
adc
mov
push
push
pop
or
enter
pop
push
push
cmp
inc
aam
adc
push
dec
cltd
int
in
data16
push
icebp
dec
dec
test
test
jecxz
mov
or
jnp
ja
mov
mov
movsb
dec
mov
out
cmp
or
dec
mov
push
mov
push
jl
jmp
sub
stc
outsb
and
inc
fwait
pop
sbb
pusha
into
mov
js
int3
inc
dec
stc
adc
loopne
mov
outsl
jp
shll
xchg
js
and
pop
jmp
in
ret
dec
mov
mov
rcrl
sbb
sbb
jecxz
aad
lods
in
adc
sbb
lret
xchg
cmpsb
add
cli
jecxz
out
cmp
popf
xchg
push
jns
mov
outsl
xchg
divb
sub
mov
jge
cmp
pop
cmp
adc
clc
sbb
lock
leave
xchg
adc
push
dec
adc
jno
pop
sub
out
cmpsb
or
ljmp
push
stos
repz
jl
add
cmp
adc
testl
insb
leave
psraw
mov
ret
pop
call
ss
ljmp
inc
xor
aas
jmp
xchg
test
and
adc
addb
sbb
dec
adc
mov
nop
pusha
movsb
mov
and
mov
sub
std
and
adc
or
mov
stos
jp
xor
insb
pop
fwait
out
xchg
lods
mov
pop
int
jbe
jmp
hlt
loopne
dec
cmp
jae
notb
push
subl
movsb
xchg
jae
mov
xchg
pushf
add
repnz
fidivrs
insb
push
fsubr
mov
mov
sbb
sbb
lcall
mov
test
lea
mov
mov
dec
insb
pop
lock
jns
into
addr16
mov
bound
rolb
in
pop
cmp
jnp
mov
pop
sub
inc
xor
and
xchg
xor
and
dec
iret
int
xor
mov
insl
lret
add
lock
mov
hlt
xchg
xchg
andl
mov
sub
hlt
insb
push
inc
dec
popf
push
fwait
or
jnp
sbb
sbb
les
rcl
les
cmp
push
fs
sub
mov
call
mov
lods
push
shlb
dec
std
add
insb
push
sar
out
sub
xchg
ds
fimull
test
mov
data16
test
push
in
insl
inc
xchg
inc
or
jb
fcomps
sbb
popa
sbb
pop
xor
sbb
gs
adc
into
inc
jno
add
jbe
sarb
add
push
mov
loopne
or
pop
bound
jmp
push
lahf
jl
pop
or
jnp
adc
ljmp
bnd
mov
lahf
jmp
bound
popf
cmp
bound
adc
xchg
sub
xorl
shlb
xchg
cmp
inc
jne
rcl
adc
xor
mov
cmp
out
xlat
add
cs
shll
aam
inc
push
inc
shlb
add
lret
cmpsb
out
sub
cmpsb
fs
cmp
into
movsl
mov
adc
nop
je
fildl
cmp
sbb
out
js
mov
test
test
or
pop
xor
mov
les
loop
xor
inc
adc
add
sub
popa
fwait
push
andb
in
pop
mov
cmpsl
jge
jl
dec
add
jno
rcll
dec
dec
loop
add
fs
loope
cltd
jbe
xchg
stos
sbb
cmp
adc
mov
sub
pop
xchg
outsl
inc
subb
mov
les
sbb
adc
cwtl
mov
fwait
test
cmp
mov
testb
mov
mov
push
jno
xlat
imull
repnz
xchg
push
sti
popa
mov
stos
leave
xlat
adc
not
jmp
xor
push
push
mov
sbb
mov
insb
xchg
xchg
stc
adc
or
push
stos
fdivrs
into
hlt
out
rclb
es
bound
subb
scas
int3
mov
or
test
fdivrl
loopne
aas
pusha
test
or
pop
lods
jno
or
inc
push
sbb
outsl
dec
pop
sub
mov
sub
jle
cmp
popf
sub
bound
jle
test
pop
mov
add
jo
jmp
add
inc
popa
mov
lods
test
cmpsl
inc
mov
lcall
mov
mov
or
mov
inc
loope
jl
negb
add
andb
or
jge
mov
lods
cltd
cltd
mov
dec
mov
dec
cmpsb
pop
out
dec
xor
lods
push
lcall
insl
cld
add
loope
in
mov
arpl
mov
fiaddl
add
jnp
orb
shl
sub
shl
call
data16
sub
inc
stc
mov
out
mov
js
xchg
xor
cmc
add
fdivrp
xor
aam
cwtl
lret
or
fstpl
adc
fidivrs
pop
adc
adc
cmp
cmp
mov
push
sub
and
hlt
scas
rolb
ret
int3
cmp
cmp
les
sbb
inc
lret
mov
push
movsl
push
int3
gs
mov
sti
mov
fisttpll
xchg
jp
cltd
add
stc
cmc
jecxz
mov
dec
push
jge
addb
xlat
dec
cmp
jl
adc
pop
call
dec
lock
adc
or
mov
clc
mov
stos
jle
or
js
loop
es
sub
cmp
and
addb
xchg
or
sub
cmp
aam
outsl
xchg
dec
pop
mov
inc
loopne
mov
lret
test
mov
jle
sahf
stos
push
stc
dec
addr16
inc
stos
idivl
sub
cmp
push
iret
inc
mov
pop
ret
cld
dec
shll
mov
test
push
sub
nop
fwait
mov
das
ljmp
mov
pop
push
sbb
jne
outsb
mov
mov
inc
gs
fsubp
cwtl
pop
sub
xchg
sahf
and
subb
jl
sti
movzwl
loopne
mov
or
mulb
cmc
xchg
test
scas
inc
adc
and
movsb
cmpsl
pusha
jmp
adc
popa
lahf
push
mov
out
mov
add
and
or
mov
mov
negb
push
cmp
es
jbe
jp
daa
daa
jmp
cmpl
jle
and
jle
daa
or
cmpsl
fidivrs
cmpl
andb
adc
mov
icebp
jno
dec
aam
jb
adc
sbb
dec
mov
aam
in
xchg
repnz
cmp
movsl
aad
sub
xchg
rcrl
iret
lret
jae
out
negb
jb
mov
mov
popf
or
leave
sub
lods
int
and
cmpsl
mov
push
enter
fwait
imul
stos
jb
fucomp
push
in
jb
xor
xchg
aad
out
out
test
push
add
sub
fadds
cmp
xorl
int
clc
pop
mov
mov
add
sub
jo
fistps
and
testb
dec
ret
dec
adcl
dec
pushf
push
xor
inc
mov
push
jl
jg
fmuls
mov
les
mov
dec
mov
dec
sub
xor
ljmp
mov
inc
in
psllq
mul
mov
dec
sbb
push
push
iret
jle
or
xorb
push
adc
mov
or
pop
dec
scas
ds
incb
push
fimuls
xorb
std
pop
mov
scas
cmp
push
push
mov
cs
out
and
mov
shlb
iret
xchg
jge
mov
enter
lret
xchg
add
scas
dec
out
inc
mov
les
imul
push
bound
jl
mov
sub
sub
mov
xchg
sahf
imul
jmp
jg
mov
mov
and
mov
repz
add
mov
rcl
enter
push
cli
bound
mov
mov
cli
add
icebp
jge
idivl
jl
test
adc
pop
push
cmpsb
stc
xor
jne
loopne
lahf
cwtl
icebp
out
cmp
out
cmc
fiadds
inc
jecxz
in
adc
sbb
sbb
mov
or
fistpll
push
loope
mov
ja
jge
mov
mov
mov
int
mov
mov
aam
js
fcoml
dec
popl
out
adc
mov
mov
sbb
add
shlb
cmc
fcompl
test
xor
test
andl
xchg
imul
hlt
mov
xor
sbb
mov
add
ror
mov
and
ret
push
inc
pop
xchg
pop
mov
add
fbstp
pop
sbb
mov
mov
insb
iret
lahf
pop
lock
popa
cmp
enter
mov
cmpsb
addr16
roll
shr
mov
pop
adc
out
mov
loop
xlat
mov
jae
mov
sarl
nop
cmp
xchg
into
pop
xlat
pmulhw
sub
out
lods
sbb
outsl
or
es
adc
mov
pushf
insb
mov
pop
xchg
mov
aaa
ds
les
jno
call
hlt
push
pop
cmp
cli
rcll
mov
xchg
out
fs
jmp
pop
nop
mov
or
shll
jo
jp
rcl
pusha
cltd
push
lea
sub
imul
jb
and
ljmp
pop
scas
cwtl
ljmp
sub
add
adc
pop
jb
inc
adc
xchg
and
repz
or
jmp
adc
pop
in
mov
pop
inc
push
mov
pop
xchg
das
movsl
push
or
lahf
cld
sbb
inc
cltd
repz
lret
push
and
inc
cmc
cwtl
das
xor
hlt
jae
jae,pn
loopne
xchg
icebp
xchg
mov
ja
shrl
pop
rcrl
cmp
pop
add
fincstp
mov
lahf
cmp
xchg
cmc
jge
xchg
inc
out
mov
mov
mov
js
and
pop
fstpt
test
pop
or
push
negl
inc
test
pop
mov
testb
jp
inc
mov
fisttps
sub
xchg
dec
bnd
pop
cltd
movsb
icebp
jg
jmp
stos
xchg
jne
add
scas
movsb
jae
bound
and
ds
hlt
outsl
mov
xchg
in
lods
jmp
les
les
das
jnp
arpl
shll
dec
jg
fs
cld
imul
inc
notl
or
xor
shrl
je
lcall
xchg
insb
jl
push
add
and
inc
movsl
mov
mov
xor
mov
jecxz
or
cmp
push
cld
cmp
movsb
inc
mov
add
fmuls
aad
mov
jo
loope
cmp
rorl
imul
push
xchg
mov
push
lods
les
lds
add
aam
loopne
jb
add
xchg
rcrl
mov
aad
adc
lahf
xchg
sub
rcl
mov
in
mov
xchg
mov
inc
mov
push
sahf
aad
fsubs
mov
adc
pop
or
xor
push
sbb
scas
mov
shrb
sbb
push
adc
jns
push
sub
and
es
stos
leave
and
sub
xchg
in
mov
nop
fstpt
sbbb
enter
mov
and
scas
adc
cmpsl
cltd
push
outsl
pop
clc
cmp
test
jl
aad
add
jecxz
inc
loop
xchg
mov
jp
push
std
add
lods
shll
cltd
idivl
pop
xor
arpl
stos
ss
popw
mov
add
aaa
imul
sarb
mov
push
in
lret
sub
sub
inc
sub
mov
stos
dec
and
mov
or
out
dec
stc
adc
mov
xchg
fldenv
jle
mov
or
dec
adc
fdiv
and
dec
xchg
into
fnstsw
mov
loopne
lods
pop
ja
arpl
out
push
push
push
mov
jne
add
pop
cmpsb
xor
shlb
aaa
cmp
and
and
pop
mov
jl
idivl
cwtl
cltd
inc
fidivrs
xchg
shll
repnz
push
pop
cmp
mov
std
mov
stos
xor
fwait
jge
inc
fld
pop
sbb
repz
xchg
push
out
add
aam
std
and
out
subb
pop
int
jmp
test
clc
movsl
jns
cld
popa
insb
fstps
sbb
push
rcr
ss
leave
fwait
into
xchg
lahf
jl
sub
adc
sbb
ja
mov
sbb
sub
and
push
cs
icebp
outsl
loope
sbb
sbb
sbb
inc
pop
test
xor
xchg
dec
pop
xchg
iret
stos
inc
cmp
in
sub
sahf
push
sarl
dec
pushf
pop
fbstp
ja
or
imul
cmp
push
fsub
pop
dec
daa
rcll
push
mull
sbb
idivb
frstor
push
mov
jl
ja
movsl
daa
or
or
cmp
fidivl
inc
and
or
outsl
sub
push
cmp
pop
jle
add
fs
mov
test
jbe
xrelease
imul
dec
push
popf
xchg
dec
in
mov
je
ret
aas
jb
push
cmp
push
and
jle
push
ret
jg
or
sbb
mov
orl
repnz
fbstp
mov
fwait
je
in
es
mov
js
jp
cmp
lret
push
stc
insb
pop
or
xchg
hlt
mov
fnsetpm(287
mov
out
test
inc
inc
jmp
clc
es
fiadds
jae
mov
or
mov
push
mov
dec
in
mov
jns
mov
mov
jae
imul
ret
fwait
sub
pop
and
mov
pop
cmc
lcall
xchg
sub
movsl
jp
cld
jl
xchg
cmp
pop
aam
jns
aaa
setnp
arpl
ss
xor
lcall
sub
out
dec
stos
daa
xor
insl
sub
mov
js
adc
xchg
push
add
sub
jmp
and
mov
xlat
adc
lret
adc
pop
and
cwtl
inc
sbb
jl
pop
dec
cmpsb
popa
xchg
mov
mov
inc
test
lret
mov
out
sub
lret
adc
mov
xor
xor
add
jge
dec
adc
iret
cmp
gs
push
mov
push
push
sbb
sbb
movsl
cltd
scas
mov
adc
cli
xor
cmpl
sub
mov
pop
xchg
inc
cmpsb
xchg
decl
mov
addr16
popf
scas
mov
sub
adc
sbb
xchg
outsb
or
adc
sub
adc
push
mov
xchg
mov
push
bound
adc
popa
pop
fstpt
lds
jge
popl
or
or
sbb
test
mov
jle
xchg
mov
sub
and
jbe
data16
xchg
imulb
mov
ret
and
pop
and
jle
insl
add
push
jl
scas
and
rcl
shrl
xchg
lret
dec
push
push
mov
mov
test
dec
inc
pop
mov
lods
dec
stos
mov
imul
xor
vpunpcklwd
scas
jae
or
pop
mov
jecxz
stos
mov
sbb
cmp
mov
and
jmp
push
insl
ljmp
mov
fistpll
xchg
push
out
inc
xchg
jecxz
fldt
ficoml
stc
sahf
cwtl
sbb
aad
adc
mov
pushf
enter
inc
xchg
inc
rcrb
ret
cmp
notb
icebp
outsb
rolb
in
insl
fwait
aad
loope
mov
sub
mov
and
jl
repz
xchg
sahf
and
pop
aad
mov
mov
mull
nop
mov
mov
mov
cs
sbb
jne
adc
push
push
out
daa
mov
xor
rclb
add
jb
in
add
bound
mov
sub
lahf
mov
and
add
mov
sbb
mov
sbb
sbb
add
sbb
jg
mov
xchg
insb
ljmp
das
inc
cmp
aas
mov
cmp
push
push
and
fildll
insb
fildl
fwait
insl
jb
mov
addr16
dec
sub
xor
and
xchg
movsl
push
dec
sub
mov
stc
cs
hlt
ficoms
mov
add
push
sbb
sub
or
mov
cli
jl
into
inc
outsl
or
scas
fucomp
rcrl
mov
dec
mov
push
mov
inc
sub
push
sub
jmp
jmp
cmp
xchg
mov
and
xchg
xchg
mov
jge
cs
cwtl
test
and
loop
movsb
jecxz
es
jae
and
arpl
inc
enter
push
push
hlt
lock
hlt
adc
je
push
mov
xor
inc
cmpsl
jne
and
mov
xor
lret
push
nop
push
js
pop
xor
add
push
mov
push
jns
lcall
xchg
sub
pop
mov
es
pop
mov
or
stos
mov
jbe
pusha
aam
movsl
ljmp
mov
sbb
adc
loop
sbb
dec
movsb
mov
dec
inc
and
mov
push
rcl
mov
pop
shrb
push
jo
mov
rcrl
dec
cs
jnp
in
aaa
dec
cs
int3
jmp
mov
nop
push
push
adc
in
loop
aad
push
jae
in
add
data16
mov
mov
mov
xor
leave
push
mov
push
pop
rolb
fs
nop
mov
decb
add
push
into
bound
or
sub
gs
push
loopne
aaa
pop
mov
or
xchg
mov
aas
ret
xchg
cmp
xorl
xor
pop
jbe
aas
jo
rorb
adc
sbb
jl
dec
mov
mov
push
adc
sbb
or
cli
jbe
sub
dec
cmp
jno
mov
mov
cs
mov
xlat
popa
xchg
out
sahf
out
add
mov
jge
nop
into
out
sbbb
ljmp
mov
inc
mov
divl
sbb
repz
push
pushf
aaa
jmp
ss
stos
popa
dec
fcomps
enter
cmpsl
push
cmp
dec
arpl
add
xor
inc
jo
rcll
sub
cmp
lcall
ljmp
and
mov
sub
out
mov
ss
xor
sub
pop
clc
stc
jbe
scas
repnz
xchg
mov
push
mov
xlat
fs
xor
ret
or
ficoml
pusha
pop
test
inc
push
push
cwtl
inc
scas
jmp
adc
mov
movsl
cwtl
lock
pop
mov
inc
dec
mov
sbb
popf
loopne
clc
ds
push
or
mov
add
stc
and
lods
jae
dec
add
test
jae
cwtl
push
shr
mov
and
in
mov
lods
aam
imul
pop
mov
pop
cmpsb
mov
xor
push
nop
hlt
sbb
xchg
xor
pop
test
mov
sub
ss
lret
outsb
mov
std
xlat
subl
push
add
pslld
fld1
into
xor
clc
adc
pusha
dec
adc
pop
pop
xor
fcmovnb
hlt
inc
pop
dec
xor
sarl
scas
pusha
gs
bound
mov
sub
popa
lret
in
dec
stc
inc
orb
pop
jns
add
out
or
push
lods
xlat
ret
dec
xchg
outsl
aad
pop
jns
dec
orl
cmpsl
lret
mov
sub
cmpsl
push
scas
pop
mov
and
out
dec
and
mov
mov
sbb
add
dec
lock
andl
jns
lods
das
fcomp
mov
gs
mov
cmp
popa
jbe
sbb
sub
pop
imul
xchg
adc
xlat
xchg
xchg
mov
ljmp
mov
mov
outsl
jae
pop
data16
push
sub
add
add
mov
add
test
mov
jmp
ret
addr16
aad
pop
pop
loop
repz
jle
sub
push
jae
mov
push
mov
aam
add
lret
push
pop
sbb
or
sub
in
lahf
ljmp
cwtl
addl
out
fisubl
cmpsl
mov
outsb
repnz
iret
stos
add
in
mov
xchg
into
sbb
and
adc
xchg
or
mov
push
nop
adcb
jb
push
mov
data16
cmp
xchg
dec
stos
imul
sbb
mov
sub
mov
sbb
mov
or
sub
pop
das
jle
ret
dec
mov
mov
adc
jg
inc
xchg
pop
nop
cmc
sbb
out
xchg
out
pop
jb
xchg
dec
cmpsl
mov
adc
mov
ficompl
push
or
push
mov
mov
pop
sub
xchg
mov
mov
fsubrl
sahf
sets
mov
mov
lcall
insl
je
pop
jb
daa
popa
lahf
jp
push
or
test
loop
faddl
mov
cmpsl
or
jo
cltd
pushf
test
and
add
aad
push
sahf
pop
out
add
and
shlb
movsb
aam
jge
clc
push
sub
push
and
ss
fistpll
sti
stos
sbb
movsb
fisubrs
mov
xor
sbb
cli
dec
pop
cmpsb
xor
dec
inc
lahf
cli
std
mov
or
imul
inc
fwait
in
pop
lods
cmc
or
add
sbb
daa
jb
outsl
jae
bound
divl
dec
and
mov
mov
jns
sbbl
cmp
xchg
gs
dec
add
cmc
pop
lret
xor
popa
fcoml
pop
jg
add
pop
scas
fbstp
cld
mov
shl
sar
notl
pop
leave
push
xchg
xchg
push
orb
sub
cwtl
ljmp
aaa
or
sahf
pop
push
fucomp
push
pop
pushl
test
push
mov
fst
sub
or
fwait
and
call
test
insl
sbb
pop
push
inc
icebp
cmpsl
imul
sub
js
sahf
loopne
fmul
je
cmp
mov
popf
mov
nop
jnp
gs
lahf
mov
lea
cmpsl
aaa
pop
sub
repnz
xlat
xchg
and
mov
and
ss
dec
pop
ds
or
js
or
mov
out
inc
lret
out
xchg
lock
cmp
sbb
xor
scas
mov
out
mov
dec
and
dec
dec
mov
les
iret
in
add
out
jg
cld
cmpsl
clc
mov
mov
ja
mov
push
aas
jb
mov
outsl
out
mov
out
push
dec
pop
add
and
testb
sub
dec
out
dec
xchg
mov
xchg
xchg
cs
leave
in
mov
insb
or
test
test
adc
xchg
stos
cmpsl
insb
cmp
add
orl
xchg
add
ja
mov
lret
scas
pop
inc
insl
rorl
mov
pop
pop
movsb
push
push
fidivrs
and
mov
daa
adc
xor
and
repnz
xchg
lea
push
repnz
popf
sahf
insl
arpl
add
arpl
imul
pop
testb
dec
push
adc
outsb
jp
ss
fimull
or
scas
inc
mov
mov
mov
xchg
out
inc
sarb
in
outsb
mov
mov
adc
out
ret
mov
push
lret
fs
lds
push
call
sbb
sbb
and
hlt
mov
fildl
adcb
mov
push
xchg
jp
jmp
cmp
andb
ret
bound
notb
scas
push
cmp
mov
in
nop
aaa
pop
aad
or
mov
cmp
mov
mov
cmp
mov
vcmpss
scas
push
mov
shll
js
pop
mov
daa
pop
dec
cmp
int3
sub
into
adc
push
stc
movsb
lcall
add
imul
adc
xor
mov
in
sub
jl
pop
mov
sar
ret
cmpsl
mov
icebp
mov
inc
mov
shll
or
into
ret
aas
mov
into
push
adc
es
stos
cmpsb
push
xchg
push
ds
xchg
and
jmp
cmp
jle
lcall
xchg
fsts
cltd
enter
inc
andps
punpckldq
clc
push
imul
mov
fcomp
jbe
inc
mov
mov
pop
sbb
ds
mov
sarb
push
inc
outsl
and
xorb
arpl
daa
dec
dec
jmp
dec
icebp
push
rep
stos
aas
aas
and
jmp
cmpsb
int
test
rcr
mov
sub
bound
xor
xchg
fistl
pop
cwtl
fsubrl
nop
mov
or
daa
outsl
dec
adc
mov
call
les
push
sbb
aam
sbb
fisubrs
jmp
mov
and
jp
fcmovnb
inc
pop
fcmovnbe
cltd
jecxz
mov
in
in
popa
cmpsb
push
sbb
jl
push
pop
divl
dec
fisttpll
iret
je
mov
subb
clc
sub
fiadds
add
xchg
test
dec
addr16
pop
test
xchg
xchg
ja
lds
repz
or
dec
shrb
and
adcb
scas
sub
sub
add
inc
cmp
fstpt
test
loop
outsb
push
sbb
xchg
test
orb
bound
cmp
test
push
push
call
xchg
ret
xor
lcall
inc
fnsave
stos
inc
xchg
cmpb
fstl
mov
loope
sbb
or
int
loop
iret
shll
inc
pop
test
movsb
sbb
mov
stc
cmp
repz
icebp
cmp
and
jno
mov
jp
int
xor
add
mov
fwait
sub
in
jl
adc
fiadds
ret
fmull
mov
mov
xchg
ret
or
pop
xor
stos
push
mov
hlt
xor
ljmp
or
shrl
jp
cmp
adc
jmp
fiadds
xchg
addl
mov
cmc
sub
js
daa
inc
jg
jnp
xlat
in
or
daa
push
stos
lods
xchg
adc
or
mov
mov
das
jge
jle
test
stos
dec
and
fwait
adc
out
ljmp
cmp
mov
test
xor
mov
out
push
cmp
pop
arpl
inc
inc
out
xchg
dec
je
and
add
adc
cld
test
pop
push
inc
outsb
fists
bound
xchg
sbb
mov
imul
dec
leave
mov
sbb
adcl
gs
push
in
aaa
adc
mov
popf
out
inc
mov
xchg
scas
inc
lock
dec
push
sbb
or
dec
cmc
jo
lcall
fdivrs
push
ja
test
jno
in
jo
sbb
xchg
and
mov
xchg
fistpl
xor
or
leave
insb
lea
mov
xchg
js
add
in
jecxz
mov
inc
pop
pusha
in
leave
shlb
mov
sbb
mov
insl
leave
push
test
in
pushf
mov
jno
dec
scas
fidivrl
cmp
xchg
cmc
push
ret
jge
popa
lea
movsl
outsb
out
js
mull
mov
pusha
and
out
lret
jae
sub
fdivl
or
adc
push
fimuls
fnstenv
push
sti
insb
dec
and
jp
pop
mov
push
popa
mov
mov
jge
jl
imul
cmp
pop
sbb
dec
jle
mov
push
cmp
add
mov
and
scas
js
adc
fsubr
arpl
mov
jae
xor
sbb
fsubrl
ljmp
cmp
adc
out
mov
imul
bnd
xlat
sbb
imul
xor
cltd
ffreep
cmpb
push
test
mov
mov
sub
adc
js
xchg
jbe
ds
dec
stc
es
and
dec
and
or
popf
xor
pop
sar
cltd
aam
mov
clc
es
sub
dec
push
fnstenv
test
xor
loopne
in
loopne
xchg
mov
pop
cmc
test
stos
push
add
cmpsb
mov
movsl
mov
fs
in
cltd
leave
gs
cmp
scas
mov
pop
pop
cli
sbb
xchg
sbb
les
gs
fwait
cmpsl
fidivs
mov
mov
imul
lea
xchg
loop
pushl
js
jo
sbb
nop
cld
aam
jp
push
and
xchg
sbb
aaa
mov
push
or
sub
insb
sbbb
arpl
xchg
push
push
mov
sbb
and
adc
lahf
popw
cmp
lea
xchg
cld
imul
cwtl
mov
push
mov
or
cld
xor
mov
xor
mov
movsl
dec
mov
xlat
xchg
flds
sbb
push
pop
fisttpll
popa
xchg
sub
mov
int3
int3
out
pop
mov
fldt
cmp
sahf
sub
lock
xchg
xor
call
popf
or
ret
mov
xchg
iret
push
sbb
xor
sbb
lds
jmp
xchg
jmp
test
mov
jmp
lcall
push
xlat
mov
fdiv
call
dec
pushf
stos
and
xchg
outsl
dec
sub
inc
ja
dec
notb
out
in
insl
mov
lea
mov
mov
sti
inc
es
mov
lods
mov
mov
mov
mov
les
sti
test
divb
mov
push
andb
test
lds
push
loop
xchg
sbb
pop
mov
je
sbb
mov
dec
mov
nop
jnp
mov
and
outsb
setno
daa
js
ljmp
mov
dec
jne
stc
mov
mov
jmp
lahf
push
inc
mov
ja
aas
nop
mov
test
mov
inc
pop
out
mov
pop
repz
inc
dec
cmp
inc
lods
inc
pop
out
push
daa
adc
lret
mov
lock
jecxz
imul
aas
mov
clc
or
push
cs
lret
filds
out
fxch
cmp
ficoml
cltd
or
dec
andb
enter
mov
int3
mov
test
mov
pop
movb
xor
mov
or
imul
xor
sbb
sbb
daa
cs
push
hlt
sahf
clc
mov
cmc
jp
gs
adc
xchg
cmp
loop
outsl
repz
or
test
sbb
and
adc
test
push
mov
mov
and
pusha
mov
mov
xchg
dec
int
sub
fadd
or
jle
lcall
push
ljmp
inc
cli
outsb
icebp
inc
fwait
hlt
push
xchg
icebp
in
cltd
add
out
and
outsb
shlb
mov
andb
xchg
sub
aad
mov
xor
imul
add
sbb
xor
cld
pop
subb
rclb
jns
aas
bound
pop
js
add
stos
dec
movsl
aaa
mov
stos
mov
adc
outsb
push
cwtl
xor
xchg
sub
mov
fiaddl
dec
and
pop
dec
std
cltd
in
push
clc
mov
dec
or
jnp
mov
mov
sbb
push
and
xchg
leave
pushf
aad
ds
push
cli
xchg
xchg
xchg
ficoms
sahf
dec
jo
xchg
mov
out
and
cmp
dec
fsub
pop
mov
pushf
mov
iret
sbb
mov
inc
lret
or
sub
mov
mov
movsl
dec
test
sub
xor
cmp
xchg
pusha
xchg
sbb
pushf
sbb
js
sahf
xor
js
adc
inc
iret
jnp
or
arpl
test
push
and
mov
mov
aaa
inc
jno
movb
rorb
cmpl
xor
enter
mov
push
stos
xchg
mov
ficoms
aam
inc
out
cmp
popa
in
stos
jnp
setbe
insl
das
cmc
sbb
adc
fisubs
jns
addr16
fwait
into
pop
lcall
dec
mov
or
cmp
dec
arpl
nop
daa
xor
bt
push
sub
call
sbb
outsl
jne
mov
out
cmp
and
in
stos
out
lds
adcl
xchg
shll
xchg
scas
xchg
stos
mov
jnp
jmp
out
pop
push
mov
sar
add
push
mov
les
and
jae
fcoms
and
insb
mov
mov
push
lea
xor
fistpl
cmp
push
cmp
adc
not
or
and
arpl
int3
dec
arpl
inc
push
and
nop
adcl
sti
cmp
test
mov
inc
or
lret
mov
pop
sti
out
addb
les
push
mov
test
hlt
push
push
sub
add
rcll
shl
mov
iret
jmp
inc
dec
stos
pushf
and
mov
sub
adc
in
and
cwtl
rolb
mov
clc
cli
xor
dec
pushf
ficompl
pop
sbb
xchg
gs
add
movsb
das
or
lcall
insl
lea
fs
lret
inc
and
cmp
adc
pop
inc
aam
add
inc
xorb
js
bnd
in
mov
add
xor
mov
out
xchg
mov
adc
arpl
mov
mov
lods
and
push
jne
icebp
les
mov
xchg
jbe
jp
es
push
add
jg
xor
push
hlt
icebp
inc
lock
cwtl
inc
xchg
ljmp
iret
outsb
es
pop
das
imul
cltd
out
imul
test
insl
push
sbb
pop
xchg
lods
dec
or
decb
loopne
pop
movsb
fimuls
lock
push
sub
addl
stos
les
inc
xchg
daa
scas
mov
icebp
and
pop
pop
inc
sbb
and
cli
push
pop
add
push
push
sbb
xlat
and
mov
fpatan
shrb
push
repz
cs
cli
add
xor
jno
mov
or
xchg
pop
ljmp
add
pusha
xor
lods
mov
adc
repnz
sub
mov
mov
idivb
mov
fwait
repnz
scas
test
outsb
jo
ljmp
repz
fcoml
pusha
sbb
mov
jecxz
sbb
movsb
pop
push
ss
orb
faddl
sub
push
or
pop
loope
mov
ljmp
ret
lods
js
xchg
hlt
lcall
add
testb
test
loop
push
xchg
mov
int
cmp
out
cmp
adc
mov
movsl
lds
jecxz
cmp
mull
or
inc
aad
scas
call
jmp
pop
cmpsb
lods
jbe
lock
xor
mov
xor
mov
inc
push
mov
push
testb
sbb
fcompl
lahf
push
sar
imulb
mov
idivb
imul
cs
jno
ja
inc
jno
pop
adc
imul
xchg
ficoms
pop
shl
pop
mov
cmpl
mov
pop
aaa
cmpsb
roll
pusha
mov
shlb
in
loopne
jno
shlb
or
mov
sbb
or
mov
cltd
movsl
xor
inc
lret
rcl
or
xchg
ja
push
lret
enter
ret
lds
lods
jne
sbbl
mov
arpl
mov
sub
stos
dec
push
fbstp
inc
cmp
xor
sbb
dec
inc
pop
ja
xor
mov
jmp
add
pop
outsl
sub
sub
sbb
pop
lcall
sub
dec
mov
call
mov
test
ds
push
or
or
or
outsl
scas
sub
pop
sarb
fisttpl
push
dec
fsubrs
sbb
in
and
inc
ja
icebp
push
jp
movsb
pop
pop
enter
movsb
pop
mov
push
stc
xchg
fldz
mov
hlt
xchg
mov
mov
cld
push
test
call
sub
jno
xchg
repz
xchg
outsb
es
scas
iret
lods
rcl
leave
fs
and
pop
xor
push
push
add
cltd
lret
rolb
lds
ds
sbb
mov
xchg
sahf
or
ds
scas
scas
push
stos
pop
adc
jb
js
jge
icebp
add
jl
mov
dec
or
mov
xor
shl
mov
shlb
gs
cmp
ret
dec
rcl
outsb
sub
mov
cmpsl
sarb
add
jge
pop
sbb
sub
mov
adc
mov
mov
test
jns
popl
lahf
sub
gs
fidivl
jnp
in
fcoml
push
add
pop
js
mov
mov
adc
hlt
push
pusha
in
xchg
mov
jne
add
jbe
stc
fstl
dec
call
insl
inc
dec
cmp
push
adc
jb
adc
lea
inc
xor
pop
enter
movlps
subb
ljmp
push
xor
test
cmpb
pop
sub
pop
push
mov
in
iret
popa
int
dec
shrl
xorb
pop
mov
mov
test
je
pop
mov
and
push
in
pop
andl
inc
pop
cli
pop
ja
aad
push
out
dec
std
and
sbb
cmpb
lret
sbbb
push
fidivrl
stos
stos
mov
in
outsl
fwait
sbb
lods
add
roll
xorl
jp
push
xlat
out
enter
xchg
pop
scas
out
daa
cmp
dec
mov
jns
sub
mov
xchg
in
sti
stos
jb
sub
les
push
outsb
inc
jmp
scas
sub
pop
cmc
mov
shrb
mov
imul
roll
push
mov
mov
jbe
or
pop
fisttpl
pop
scas
int
loopne
ss
imul
pop
les
or
adc
jno
lret
jo
mov
clc
add
cwtl
sarl
inc
add
xor
sub
pop
js
inc
cmp
push
rcr
sahf
in
cmp
xlat
push
lahf
sbb
out
popa
scas
mov
mov
mov
adc
scas
fiadds
test
mov
sub
in
push
push
and
adc
jo
xchg
xlat
cmp
xchg
pushf
lret
mov
test
dec
sbb
inc
mov
clc
jmp
stc
insb
repnz
xchg
in
dec
pop
jnp
out
mov
out
push
mov
xor
pushf
mov
push
fdivrl
xchg
jae
inc
push
shll
cld
pop
cmp
jne
mov
push
insl
xor
jb
addl
lahf
daa
xchg
lds
mov
lods
stos
cmpsb
cs
fstpl
sbbl
rcrl
scas
cld
cmpsb
xor
pop
pop
push
pop
mov
mov
in
xchg
enter
mov
jo
outsl
bound
in
mov
jmp
xchg
movsb
jmp
in
xchg
xor
mov
icebp
add
sarl
mov
or
je
xchg
cmpsl
inc
sbb
test
cltd
call
clc
xor
gs
lea
into
mov
dec
es
push
pop
and
push
sbb
jmp
mov
std
jo
ret
jae
mov
or
filds
test
add
and
sub
out
xor
leave
data16
adc
das
mov
movsl
cmpsl
and
sub
gs
std
addl
mov
mov
and
idivl
repnz
popa
or
hlt
jg
or
sub
daa
mull
cmpsl
adc
and
mov
int
fwait
lret
test
cli
insb
aam
pusha
pop
push
push
cltd
ficomps
sbb
jge
sub
lock
outsb
int
shlb
sbb
jmp
in
cmp
test
push
mov
xchg
cmp
or
add
adc
push
in
and
xchg
add
sbb
push
adcb
and
lcall
jmp
pop
push
jg
cmp
test
cmpsb
and
inc
or
and
mov
cmp
xchg
xor
cmp
sub
je
jns
stos
sbb
add
add
mov
stc
and
in
ja
add
xchg
jbe
loopne
lret
es
data16
xchg
push
clc
fnstenv
adc
xor
into
outsl
jbe
fisttpl
mov
cmpsl
ljmp
je
mov
lods
push
out
push
scas
lods
cmpsb
xchg
jo
push
outsl
pop
sub
push
and
mov
dec
inc
jmp
dec
int
jo
mov
mov
xor
pop
outsb
xor
jbe
inc
and
or
pop
outsb
fs
cltd
mov
ljmp
sar
jle
aam
sub
xchg
cmp
inc
mov
jnp
out
out
mov
push
test
mov
std
enter
shlb
xchg
mov
push
jne
test
xor
dec
imul
sub
or
add
lods
sub
scas
cmp
pop
xchg
ljmp
in
dec
xchg
aam
in
cli
insb
xchg
xor
gs
mov
js
and
stos
sub
ficoml
xchg
ds
mov
in
lods
iret
lods
stos
fstps
ja
cmpsb
pop
jo
xchg
and
iret
test
mov
or
xor
addl
adc
add
mov
mov
pushf
fstps
out
push
jge
push
arpl
mov
sub
mov
jbe
or
lods
into
add
xchg
cmp
js
or
das
das
and
mov
xor
insb
push
scas
into
repnz
ja
jmp
out
xor
fldcw
and
cmpsl
fisubs
jmp
fmuls
pop
jbe
dec
in
mov
adc
stc
movsl
je
xor
mov
js
lds
dec
js
push
cmpl
sub
scas
fidivrs
test
mov
lahf
push
and
insb
xchg
movsb
pop
scas
pop
addr16
pop
mov
in
les
shl
pop
dec
or
sahf
div
mov
mov
pop
pop
stos
aaa
mov
pop
cs
mov
mov
popa
dec
sar
jl
and
push
mov
mov
pop
jle
push
enter
cmp
cmp
add
cld
out
fwait
out
scas
push
adc
pushf
aas
lods
dec
mov
mov
xchg
push
push
add
cmp
mov
dec
lahf
hlt
in
arpl
ja
bound
sarb
stos
mov
ss
aad
stos
adcb
icebp
inc
mov
sbb
mov
outsl
mov
loopne
lcall
sbb
es
cmp
enter
call
xlat
mov
push
ss
add
xchg
cmp
addr16
and
pop
mov
ljmp
mov
fwait
jo
cmp
lret
shlb
mov
sub
scas
mov
lret
cmpl
push
popl
sbb
iret
fcompl
iret
jns
inc
jo
enter
rcrl
mov
stos
push
cmc
add
into
dec
add
pop
cmp
mov
and
jmp
sbb
mov
add
xor
add
jns
push
addl
mov
fwait
sbb
mov
add
or
ljmp
loope
pusha
imul
push
pop
das
jno
leave
cmp
jmp
outsl
adc
xchg
push
mov
inc
fsubrl
leave
push
sti
cmp
frstor
fdivrs
js
adc
cmp
jns
insl
push
sbb
jmp
jecxz
fwait
jno
into
rolb
sbb
jge
cs
addr16
mov
jne
icebp
scas
cmp
int
dec
fmul
sub
xchg
ljmp
mov
inc
stc
cmp
mov
fsubp
paddq
sub
dec
fcomps
and
jmp
xchg
push
adc
into
popa
cmp
pushf
and
jne
and
rolb
stos
sbb
ffreep
xor
add
cmp
push
dec
sbb
push
push
mov
jne
sub
adc
aad
bound
dec
lahf
out
cmpsb
push
sub
loopne
mov
dec
jns
out
pop
sub
dec
iret
dec
jbe
pop
or
pop
lock
loope
push
sbb
add
movsl
popf
inc
bound
xchg
fistps
lods
mov
stos
nop
shlb
into
test
mov
in
lds
adc
dec
push
jg
mov
pushf
scas
mov
mov
push
mov
jmp
xor
sub
sub
jnp
and
addl
mov
daa
stc
mov
pop
push
insb
pushf
cli
cmpsb
push
cmpsl
out
cmp
adc
int
pushf
aas
pop
lcall
xor
mov
popa
mov
in
in
ja
or
jno
push
add
cld
jb
xor
xchg
mov
lcall
mov
adc
in
out
out
gs
shll
insb
push
mov
testb
icebp
pop
and
iret
dec
xor
hlt
inc
sbb
adc
push
jb
jge
fisubrs
xchg
js
sti
mov
jp
add
testb
imul
repnz
or
and
mov
cmp
sahf
inc
cmp
add
cli
sub
xrelease
mov
adc
shl
dec
jb
clc
bound
mov
mov
pushf
outsb
imul
add
cld
adc
or
aad
hlt
insb
inc
mov
sub
gs
out
mov
enter
push
push
out
iret
dec
xchg
xchg
cmp
sbb
jmp
loop
adc
jg
pop
loop
jae
shll
jbe
or
ret
sub
nop
lods
insb
inc
cmp
cmp
pusha
shr
cmp
mov
or
mov
or
mov
inc
das
add
rorb
xchg
adc
push
and
sahf
xchg
str
ror
sbb
sub
mov
mov
dec
pushf
adc
inc
fwait
daa
pop
cld
out
cmp
jle
pop
cmpsb
lahf
imul
aam
push
mov
imul
icebp
xchg
stos
inc
add
push
cmp
pop
insb
adc
and
test
add
pop
dec
movsl
pop
sub
ljmp
inc
mov
aas
nop
jmp
push
cltd
xchg
and
sub
or
out
inc
out
cltd
mov
mov
mov
leave
xchg
imul
mov
mov
loop
cmp
repnz
fildll
lods
mov
dec
mov
cmp
out
lea
sub
and
cs
int3
inc
sbb
xchg
out
lret
mov
jecxz
pop
jae
and
dec
mov
test
xor
lds
std
iret
pop
push
xchg
xlat
cmp
gs
pop
aas
loop
arpl
sti
fnstenv
jb
cmpl
inc
or
mov
jne
stos
lcall
pop
dec
push
lret
fwait
out
xor
xor
test
mov
aaa
mov
adc
in
popf
loopne
outsl
cs
test
xchg
jle
aaa
sbb
xchg
xchg
or
out
rcr
push
out
sbb
dec
aam
add
ljmp
test
cltd
push
into
jno
fnstcw
out
xchg
vxorps
mov
lea
cld
sti
aad
mov
mov
mov
ss
dec
mov
bound
sub
movb
lcall
fdivs
mov
test
xor
cs
mov
sbb
mov
adc
mov
enter
push
sub
inc
mov
adc
int
lock
cmp
sub
pop
inc
mov
sub
and
sbb
jb
mov
movsb
xchg
sbb
mov
push
adc
ljmp
xor
mov
aad
inc
aas
jmp
add
mov
sub
call
and
and
jo
jmp
sub
aaa
push
leave
fnstenv
adc
addl
inc
mov
jg,pn
jle
jne
xchg
mov
leave
sub
push
movsb
cli
int3
dec
stos
notb
xchg
xorl
out
test
repz
cmp
inc
mov
inc
xchg
xchg
aad
ret
inc
rcll
or
inc
inc
or
inc
sub
data16
inc
inc
mov
mov
push
mov
outsb
lret
lods
xchg
repz
xor
rorl
ss
mov
mov
cmp
test
icebp
jo
fld
js
or
jp
les
xor
sub
jle
iret
test
xor
dec
je
mov
loopne
pop
test
xchg
inc
out
movsb
daa
jl
push
mov
fbld
dec
addr16
pop
loopne
std
sub
mov
ret
fmull
pushf
adc
cmpb
icebp
jb
push
mov
sub
xchg
imul
cmp
jnp
adcl
adc
xchg
pushf
leave
aas
or
inc
mov
inc
loop
adc
sub
scas
and
arpl
in
mov
sahf
jmp
nop
adc
mov
adc
adc
sti
js
mov
mov
fabs
xchg
lods
outsl
adc
or
dec
std
push
bound
adc
insl
mov
pop
outsl
mov
inc
loopne
test
sbb
outsb
sahf
dec
jne
ja
inc
push
int3
call
aas
rcll
fcoml
clc
mov
mov
cmp
or
imul
add
daa
xchg
or
xchg
jae
cltd
xchg
mov
movsl
es
iret
inc
call
addr16
jae
or
adc
outsb
out
mov
cld
cmp
aaa
lock
sarb
pop
int
pop
dec
adc
inc
xchg
inc
xchg
int
adc
add
mov
in
jmp
xchg
fsub
loopne
repz
sub
jge
mov
xchg
mov
rorl
jge
jge
dec
xor
inc
movl
bound
insb
xchg
inc
inc
or
mov
lret
mov
out
adc
leave
mov
and
adc
xchg
stos
push
mov
push
add
test
sbb
xchg
xchg
int
and
inc
inc
in
shll
cmp
cmp
cmp
pop
cmp
push
mov
out
pop
enter
mov
int
into
mov
xor
data16
cld
shll
pop
ja
jne
es
je
test
pop
leave
lock
or
push
mov
mov
or
inc
ficompl
pop
into
push
sbb
xchg
lods
scas
adc
and
cmc
popa
mov
xor
push
andl
sub
adc
push
push
xor
xor
adc
mov
sbb
fisubl
mov
jne
je
mov
inc
fists
outsl
pop
movsl
iret
testb
stos
fbld
jp
jmp
lods
mov
jae
mov
pop
iret
pop
int3
inc
xchg
lret
jl
fldcw
movsl
out
cmp
or
add
sub
mov
in
lock
inc
ds
popa
hlt
in
inc
imul
dec
mov
jne
mov
push
movsb
insb
shll
sbb
jo
gs
push
jle
dec
adc
in
nop
dec
xchg
aaa
xchg
xor
in
push
sbb
pop
dec
mov
sti
add
loopne
add
stos
leave
push
and
push
jp
or
adc
sub
push
xor
int3
js
adc
cli
pop
das
push
test
in
insl
pop
test
lds
add
push
shr
out
jmp
pop
xchg
notl
enter
nop
outsb
pop
dec
pop
push
enter
cld
inc
xor
inc
pop
orl
push
xchg
adc
shlb
cmc
mov
inc
jno
mov
lods
stos
cmp
add
jae
xlat
sub
mov
push
xchg
push
add
or
pop
iret
clc
repnz
fstl
mov
cld
scas
mov
and
notb
inc
xor
sub
repz
nop
loope
out
xor
sbb
jmp
cmp
sbb
rcr
add
and
mov
lods
movsb
test
dec
mov
add
fistpll
cmpsb
out
leave
in
rcl
push
js
or
xor
dec
dec
mov
or
imul
cld
pop
mov
push
dec
fisubs
xor
adc
jne
rcrl
inc
jmp
addr16
xchg
outsb
ljmp
jnp
pop
dec
sub
jecxz
js
leave
icebp
mov
xchg
push
repnz
incl
insb
cltd
add
aad
mov
jb
les
movsl
mov
out
cmc
outsb
daa
adc
push
je
sub
in
sub
iret
or
sbb
jns
call
lcall
pop
pop
mov
sarb
xor
xchg
imul
mov
aam
push
fildl
std
mov
clc
mov
movsl
clc
scas
loope
jb
jno
bound
in
pop
fstl
add
push
mov
incb
clc
lods
insb
dec
and
cmp
bound
jle
push
data16
loopne
arpl
push
out
cmpb
psrlq
gs
or
adc
and
or
stc
mov
outsl
call
repnz
push
push
cmpsb
mov
lds
fadd
inc
cld
outsb
ja
es
mov
imull
xlat
fisubl
lret
rcrb
fsubl
test
dec
in
cmp
push
shrl
ret
inc
pop
add
loop
call
push
or
dec
mov
addl
jle
popf
lahf
sbb
mov
pop
mov
outsl
inc
add
sahf
adc
adc
push
sbb
adc
inc
loop
dec
adc
jg
jle
js
mov
mov
sbb
ds
roll
shlb
cmp
xor
rorb
lcall
cltd
pop
push
cld
push
shl
out
inc
jno
pop
shrl
xor
popa
or
stos
mov
pop
bound
xchg
mov
sti
cmp
test
stos
fistps
fcomps
push
and
sub
cmp
push
repz
hlt
inc
aas
mov
bound
dec
andb
loope
xor
inc
mov
dec
testl
push
pusha
cmp
push
sti
inc
and
push
xchg
cmp
addr16
lret
or
sbb
ret
sub
inc
lret
mov
sahf
cmpsl
imul
fsubs
ret
lods
sbb
pop
mov
out
mov
imul
pop
jo
jbe
ds
cmp
dec
stc
inc
pop
cmovge
push
rorl
and
push
js
shlb
jbe
and
sub
out
adc
jb
sarb
arpl
inc
mov
pop
ret
push
inc
mov
pop
dec
mov
sub
xor
cmp
jg
in
mov
pop
inc
sub
lret
xchg
and
jl
stos
jb
xchg
mov
in
push
loope
jecxz
mov
sbb
int
and
dec
mov
scas
scas
dec
jmp
inc
mov
test
js
out
insb
pusha
loop
int
pop
or
lcall
push
cmp
bound
out
dec
jge
pop
mov
dec
aad
push
popf
imul
cld
scas
int3
bound
nop
push
rcrb
inc
sbb
pop
xchg
jg
pop
daa
lahf
fisubrl
push
mov
out
xchg
dec
scas
fdiv
cwtl
ficoml
mov
sub
nop
ds
push
enter
lahf
xor
adc
mov
gs
adcl
mov
xchg
into
repnz
dec
hlt
xchg
xchg
mov
cmp
push
push
popf
std
cmp
icebp
sub
in
lds
cmp
xchg
scas
sub
and
xor
pop
shr
push
pushf
fisubl
push
and
pop
ljmp
jl
push
sbb
aam
pop
es
mov
sub
mov
inc
add
out
add
jle
out
movsb
les
inc
je
enter
inc
add
popa
pop
push
into
sub
rolb
leave
pop
push
jb
push
cli
cli
add
dec
test
pusha
ss
mov
pop
push
outsb
pop
and
jmp
iret
stos
push
addr16
jg
sub
test
xchg
pop
jno
adc
xor
pop
or
rcr
test
int3
ds
push
push
outsb
mov
aam
dec
push
adc
jle
cmpsb
cmpsb
iret
in
jmp
repnz
std
scas
push
adc
mov
push
ret
pusha
xor
inc
xor
pop
mov
mov
cmpsl
pop
inc
ret
pop
adc
xchg
nop
push
pop
mov
ljmp
mov
das
inc
cmp
add
inc
mov
stc
in
test
jle
mov
sbb
mov
mov
lahf
lock
js
rcl
xor
into
out
jne
cmp
fisttps
shll
jb
mov
addr16
int
bnd
dec
adc
test
mov
xchg
mov
stos
sbbl
dec
inc
das
cltd
fwait
adc
jmp
das
enter
es
pop
push
mov
cmpsl
dec
je
icebp
lcall
xchg
mov
cmpsl
push
adc
sub
xor
test
lret
xchg
sahf
bound
push
testl
les
cmp
shl
push
shr
sub
adc
dec
fiaddl
push
mov
mov
fmull
adc
dec
cmpsl
sub
push
mov
mov
or
popa
out
repz
movsb
xchg
lahf
mov
loop
js
cli
xchg
insl
jecxz
sub
mov
outsb
das
es
call
sub
jbe
fmull
add
cmp
dec
jmp
mov
in
rclb
push
adc
jnp
negl
dec
fsubs
mov
xchg
leave
insl
jbe
push
test
mov
fbld
mov
push
jno
aaa
out
mull
sti
and
leave
mov
cmp
or
push
pop
xchg
adc
dec
mov
ret
jg
xor
dec
jge
push
test
inc
repz
shlb
add
cmp
lds
push
or
adc
sbb
jo
add
push
sbb
jmp
aaa
jg
jp
clc
sub
jg
or
add
sarl
push
ret
mov
xchg
jbe,pt
insl
and
or
clc
xchg
dec
fidivs
loopne
aam
pop
pop
jl
sub
bound
in
ss
aas
pop
into
or
std
or
shll
lock
cmp
mov
xchg
sbb
adc
ljmp
fildll
rcrb
fwait
jae
adc
stc
mov
push
imul
jne
gs
sub
insl
mov
inc
lcall
push
clc
cmp
lahf
out
jno
xchg
call
test
sub
pop
out
daa
gs
out
inc
cmpsb
cmp
cmp
dec
jle
sbb
and
add
hlt
stos
out
or
and
push
fistl
sub
pop
jno
repz
mov
int
in
lret
test
inc
icebp
adc
insl
jge
mov
lods
or
cwtl
push
aad
negl
mov
inc
addr16
mov
sub
pop
or
mov
inc
repz
jg
loope
xlat
mov
in
in
imul
cld
add
xor
in
push
pop
rcrl
xor
sub
sti
cmp
push
idivl
jle
mov
dec
sarl
call
adcl
adc
pop
in
mov
mov
loope
fdivs
push
mov
dec
xchg
mov
jo
adc
jb
mov
in
cli
xchg
and
pop
xor
xlat
gs
mov
xchg
sti
fisubrs
or
xchg
js
push
jne
adc
jno
adc
les
pop
stos
xor
lcall
jo
push
fdivs
pop
es
jno
xchg
or
mov
cltd
cmpsb
sbb
sub
xchg
and
stos
lret
ja
push
lcall
jne
fucom
mov
orl
std
test
lods
adc
dec
jecxz
ret
xor
dec
mov
xor
outsl
xchg
xlat
cs
stc
sub
enter
jns
xor
xor
sbb
enter
lods
adc
cltd
inc
and
mov
mov
dec
fildll
xor
in
dec
adcb
aas
out
pop
nop
pop
sub
rcll
dec
fwait
jns
jnp
outsb
mov
cmp
pusha
daa
fwait
or
sbb
push
adc
cmp
fs
test
fisttpll
dec
add
dec
xor
in
adc
jae
jmp
rol
cmpsl
fistl
call
stc
add
outsl
pop
inc
dec
stos
mov
jno
iret
shr
jg
xor
aas
push
out
fidivrs
imul
and
mov
test
jns
xor
xchg
mov
not
or
hlt
xchg
pop
sbb
pushf
out
cld
or
pop
pop
sbb
inc
adc
add
inc
and
sbb
mov
arpl
mov
push
and
adc
lods
or
call
pop
or
fs
aad
xor
dec
xchg
aas
push
testb
jle
std
lods
incb
sbb
dec
sbb
test
rcr
add
rcrb
addr16
insl
jne
lret
cmp
ljmp
sbb
imul
jbe
sbbb
fdivs
inc
pusha
jo
pusha
xor
aaa
sbb
inc
stos
sahf
dec
mov
lods
stos
sahf
add
out
cli
xchg
loope
fdiv
ficompl
mov
or
push
jge
cli
jp
lret
scas
mov
adc
pusha
adc
xchg
adc
pop
xor
ret
sbb
imul
lahf
ss
mov
test
mov
daa
mov
loope
xor
jnp
mov
pop
stos
fmul
lds
sub
and
sub
test
sarb
int3
mov
aad
jno
shll
jne
inc
cltd
cmpl
adc
add
cmp
cmp
lods
push
stos
lock
mov
lret
aas
addr16
push
add
jo
addb
mov
mov
test
inc
sbb
cmp
fisubs
adc
mov
out
push
or
inc
lea
pop
cmp
loope
stos
out
mov
add
stc
cmp
jbe
mov
adc
xor
sbb
repz
jle
jne
jle
add
bound
gs
shll
scas
sub
cmp
push
and
packssdw
and
add
lock
jnp
mov
aad
push
adcl
jnp
shll
sbb
aam
pop
cmp
mov
into
jge
fisubrl
mov
stos
pop
jmp
test
cld
sub
push
mov
mov
sub
or
mov
push
pushl
mov
inc
pop
aas
ljmp
mov
xchg
outsl
inc
and
dec
and
fildl
lods
dec
xchg
divb
movsb
jle
sub
jne
into
insl
enter
dec
ret
mov
inc
and
in
add
fwait
pop
xchg
pop
push
icebp
fildl
push
andb
dec
aas
dec
ficoml
cmp
ja
out
mov
inc
rclb
shlb
push
sbb
sub
pop
xchg
adc
cli
mov
xor
inc
mov
fwait
bound
repnz
vmread
into
repnz
push
clc
and
sti
arpl
inc
pop
mov
test
iret
gs
int
enter
fs
movsl
or
xchg
push
mov
xchg
daa
fs
outsl
insl
pop
nop
or
inc
bound
data16
mov
push
dec
mov
mov
sahf
stos
mov
lock
jnp
or
sub
dec
pop
jle
int3
mov
out
mov
inc
out
add
xor
inc
pusha
data16
adc
jno
mov
jp
dec
fwait
xchg
push
inc
and
pop
pop
inc
cmp
mov
adcb
sub
xchg
stos
aas
daa
mov
mov
shlb
scas
jmp
mov
pop
insb
cmpsb
into
icebp
sbb
ljmp
adc
sbb
cli
insb
out
inc
cwtl
mov
fcoml
push
imul
fldenv
shll
cmp
and
aaa
pop
xchg
into
flds
out
test
stos
sbb
add
movsl
sub
dec
stos
dec
mov
pusha
inc
out
call
stos
sub
pushf
pop
subb
jecxz
adc
mov
xchg
jl
sub
xchg
ja
adc
cwtl
shl
test
andl
ret
fnstcw
arpl
xchg
insl
test
dec
jbe
cltd
inc
ret
fdivrs
or
cmp
add
scas
ss
lods
addr16
inc
arpl
nop
xor
getsec
adc
outsl
imul
das
pop
scas
push
lcall
sub
push
cmpsb
mov
sbb
sub
xor
add
dec
mov
popa
mov
in
das
or
lret
sbb
inc
jae
movsb
cli
pop
lcall
mov
adc
push
sahf
and
push
mov
sub
cwtl
pop
or
xor
jnp
xchg
fidivrs
das
push
ret
or
sbb
out
inc
sub
push
and
sbb
cmp
mov
pusha
repnz
xor
mov
push
xor
movb
jp
push
arpl
add
mov
sbb
and
xlat
rcrl
js
add
outsb
scas
jmp
pop
pop
mov
lea
cmpl
leave
and
xchg
adc
shlb
mov
aad
sbb
sti
push
int3
aam
femms
inc
imul
jl
push
rcrb
test
lods
adc
fbstp
js
imull
inc
cltd
in
mov
aad
jnp
jb
mov
fildl
mov
push
jnp
mov
lret
pop
pop
aam
js
lods
std
sbb
pop
aad
and
mov
out
xchg
lods
sbb
lcall
pop
adc
cmp
cmc
loope
repz
push
dec
pop
sub
stos
aaa
test
sub
arpl
fstpl
leave
mov
rcr
adc
inc
fildll
add
mov
outsb
ret
lds
cmpsb
pop
add
xchg
aas
cmpsb
sbb
movsb
sbb
sbb
jmp
gs
mov
lock
int
and
in
jp
or
lea
push
rclb
jnp
jne
fs
mov
cmpsb
push
dec
sbb
mov
xchg
add
adc
jne
jl
ret
ror
dec
push
ds
or
adc
push
push
jb
cmp
adc
loop
mov
shlb
mov
fisubrl
mov
cmp
jae
adc
mov
or
cwtl
mov
push
mov
mov
fisttpll
jmp
jb
lock
sub
sub
scas
fstpt
jp
pushf
jnp
jbe
cmp
pop
xchg
pop
out
aaa
pop
dec
cs
roll
test
jp
jo
mov
cmp
sbb
xchg
sti
aaa
push
insl
out
iret
lock
jnp
add
xchg
jae
and
jbe
or
lea
dec
cmp
fsts
rolb
test
int3
cmp
dec
lcall
jbe
in
jo
ss
add
mov
pop
fldl
fadd
outsl
push
lods
loope
sti
jno
rcl
sahf
sbb
xchg
shlb
cmp
jo
cwtl
push
mov
push
paddb
sbb
jo
mov
aaa
mov
mov
mov
and
hlt
xchg
push
jmp
mov
sti
lret
pop
lret
test
mov
sbb
rcl
sbb
fidivrl
mov
nop
adc
inc
jmp
mov
xchg
xchg
add
fmull
cwtl
repz
hlt
mov
lock
jle
lds
lea
scas
fldenv
cmp
mulb
jae
inc
sti
mov
sub
sbb
add
jmp
cmp
in
cmp
mov
xlat
jmp
pop
and
sbb
mov
dec
sbbb
cli
popf
xchg
push
push
adc
jmp
bound
pusha
push
repnz
mov
sub
dec
dec
lea
inc
xor
mov
push
daa
push
fcmovnbe
push
jle
push
aam
dec
and
mov
dec
fs
outsb
mov
out
arpl
fidivs
mov
clc
and
cmova
mov
mov
les
cli
xchg
dec
jae
out
cmp
in
sbb
dec
cmpsb
xchg
push
xchg
adc
mov
fcoml
cmc
mov
or
clc
test
mov
faddl
sub
add
loope
pushf
mov
dec
std
dec
cmp
mov
pushl
sahf
idiv
loop
out
addl
xchg
out
popa
mov
scas
mov
das
idivb
push
gs
mov
pop
mov
bswap
jle
sub
repnz
mov
stc
movsb
loope
lods
inc
jae
xchg
stos
cmp
ret
shrl
push
movsb
pop
push
es
mov
pusha
and
dec
cs
dec
or
xchg
jo
adcl
adc
lret
scas
sub
and
or
lods
icebp
adc
cmp
incb
and
jno
mov
add
xor
inc
cli
insb
sbb
and
sahf
psubq
mov
mov
ss
xor
shlb
shlb
and
scas
xor
jmp
cmpsl
add
aad
and
leave
sub
mov
sbb
add
xor
jl
ss
shrb
vphsubbw
hlt
imul
int
push
push
hlt
push
xor
je
lods
lock
out
outsb
loope
test
mov
cli
out
iret
cli
pop
call
bound
pop
sub
into
clc
xchg
fldcw
addr16
push
test
mov
insl
and
cmp
out
pusha
lock
or
add
sbb
inc
lock
jle
insb
or
inc
pop
jno
jbe
cltd
ljmp
jmp
sbb
inc
mov
lret
addr16
in
mov
test
push
fstpl
inc
pop
push
addr16
push
push
in
insl
inc
imul
jno
push
xchg
add
das
adc
mov
sbb
sti
xlat
and
mov
inc
fst
or
xchg
out
sub
cld
shlb
fnstenv
lret
enter
xor
xchg
xor
test
cmp
rcrl
pushf
adc
test
or
lods
or
push
xor
mov
mov
or
adc
loop
je
mov
daa
xchg
cld
push
aam
inc
and
imul
xor
test
ret
imul
in
and
test
test
jns
mov
je
adc
fwait
push
sbb
push
out
xchg
cmp
arpl
ficomps
dec
xor
sbb
dec
jne
cmp
cmp
sbb
mov
xor
insb
movsb
xor
sbb
jg
movsl
mov
cmp
jmp
pop
and
and
jns
mov
dec
sbb
pop
faddp
lods
ds
jno
lods
jmp
int
out
insl
add
mov
cli
and
gs
mov
dec
in
sbb
jecxz
lcall
mov
push
and
sbb
sub
jle
test
sub
jmp
loope
sarb
jecxz
xchg
in
xchg
fisubs
pusha
and
push
mov
sbb
jecxz
mov
jmp
or
sahf
jnp
mov
lods
push
push
cli
xor
xlat
xchg
push
xchg
out
sar
data16
and
inc
test
dec
xor
add
fnstsw
popf
sbb
aad
arpl
mov
jae
push
inc
or
cs
pop
push
jle
jb
inc
stc
sbb
mov
add
and
xor
clc
pop
jl
xor
fadds
mov
rcrb
sarl
call
xchg
mov
ljmp
push
outsl
js
outsb
push
pop
dec
int3
orl
cli
cmp
mov
or
insl
mov
shll
jl
jle
test
sub
aam
insb
shrl
xor
lods
imul
notb
push
cs
sub
sbb
sbb
sub
jle
push
adc
fistps
sbb
and
inc
lock
jns
lahf
push
or
mov
jne
mov
add
dec
mov
out
sbbl
cmpsb
cmp
rcl
fmuls
or
lods
dec
adc
and
push
push
and
aad
or
xchg
pop
inc
nop
xor
xchg
stos
mov
adc
out
dec
lods
adc
mov
daa
pop
pop
or
sbb
inc
xchg
sub
jg
mov
sbbb
outsb
incb
and
aam
sub
jecxz
dec
and
jp
jmp
ja
repz
xchg
mov
movsl
mov
stos
mov
out
push
xor
push
loope
cli
push
aas
dec
mov
sbb
xchg
ds
nop
sub
in
nop
out
out
cld
test
pop
cmp
les
dec
add
or
mov
call
push
mov
add
or
mov
jp
sub
jno
mov
addr16
jmp
sub
fdivrl
popf
add
cld
xor
sub
int
or
jl
ds
push
subb
mov
cld
ja
ret
push
int3
loope
mov
push
mov
mov
cmp
pop
mov
sbbl
jae
shrb
repz
mov
fucom
das
lods
xor
addl
scas
mov
stos
data16
mov
xchg
sbb
pop
cld
test
mov
adc
push
sarb
icebp
inc
cmp
jne
pop
hlt
xlat
pop
fldenv
mov
flds
push
xor
mov
stos
jne
sbb
cmpsl
lods
hlt
stos
out
jmp
in
insl
dec
test
pop
lods
and
mov
loop
pop
mov
inc
std
add
in
in
loop
mov
fwait
sub
push
mov
lods
stc
call
sbb
or
shll
cmp
loop
jecxz
cmp
aaa
fimuls
dec
lahf
xchg
mov
mov
movsl
popf
movsb
test
jmp
mov
decb
or
scas
stos
xor
push
xchg
jg
mov
jns
sbb
dec
push
jo
xor
loopne
pop
aam
cli
pushw
mov
mov
neg
cltd
lahf
adc
mov
dec
cmc
mov
or
notl
outsb
inc
or
sub
inc
jae
or
stos
jno
iret
outsl
push
gs
insb
adc
xor
push
jmp
roll
movsl
andb
xchg
push
xor
jmp
jp
int3
add
or
xor
fs
js
jmp
adc
das
dec
push
mov
outsl
jmp
or
cmp
out
pop
and
dec
mov
push
xor
cli
sub
orl
adc
dec
jp
adc
addl
jae
jmp
add
adc
mov
aaa
sbb
xchg
adc
outsb
lcall
mov
mov
pop
xchg
pop
divl
popf
push
mov
adc
sti
fidivl
orl
xor
push
enter
push
inc
movsb
mov
iret
daa
iret
into
and
fnstsw
pop
int
outsb
push
xor
jmp
mov
sbb
mov
rcrl
xchg
shrl
movsb
mov
jnp
push
add
mov
cmpsb
add
mov
pushf
pop
cmc
adc
test
lret
mov
cmp
jo
sub
pusha
mov
jne
std
repnz
in
cmp
mov
movsb
jb
mov
inc
xchg
inc
lock
jo
xor
das
call
enter
rcrb
adc
xchg
ficoml
mov
sub
xor
push
cmp
jne
dec
mull
nop
pop
lods
lods
lds
movsb
jbe
pop
dec
repnz
fnstenv
fucomi
xor
or
rorb
cmp
xchg
mov
xor
insb
arpl
or
push
in
xchg
add
xchg
je
movsb
cmp
subb
xor
pop
dec
mov
je
sbb
mul
repz
xchg
icebp
out
mov
and
add
jbe
jle
loop
mov
fstp
imul
jmp
loope
inc
jnp
jbe
mov
adc
inc
sbb
cwtl
add
lret
nop
mov
jp
mov
xchg
dec
and
movsb
cmpsl
mov
out
loope
mov
mov
lds
and
xor
ret
stos
dec
xor
rcrl
and
push
or
xchg
mov
repz
mov
pop
or
dec
fnstenv
popa
in
imul
pop
aam
add
mov
mov
or
out
xchg
movsl
cltd
inc
and
cmp
or
adc
lock
cmp
das
and
mov
mov
xor
mov
aas
pop
in
data16
hlt
push
xor
mov
shl
fcmove
das
pop
adc
pop
lcall
xor
popf
pushf
mov
cmp
xor
inc
sub
ret
iret
pop
dec
addb
daa
clc
xchg
mov
daa
add
test
add
inc
mov
adc
mov
rcrb
movsl
xor
insb
xchg
or
jns
push
repz
lret
outsl
mov
daa
bound
lret
mov
pop
lods
fnstenv
inc
sti
out
lods
loopne
mov
hlt
dec
and
nop
adc
stos
stos
push
popf
mov
mov
push
jb
repz
in
out
loopne
js
push
gs
adcb
andb
cmpsb
imul
push
out
xor
pop
ja
push
ja
out
aad
mov
clc
jbe
mov
pop
out
mov
test
leave
and
ret
or
mov
sbb
sbb
pop
mov
je
cli
insb
stc
or
xchg
push
mov
pop
out
pop
dec
imul
das
mov
mov
loop
dec
out
nop
sbb
ss
jne
mov
fwait
sbb
lods
sti
stos
sbb
xchg
sarb
mov
movsb
sub
data16
imul
sbb
cwtl
out
lds
loope
mov
pop
xchg
jp
mov
pop
iret
pop
push
in
cmp
inc
pop
stc
push
int
movb
push
push
mov
fstl
sub
mov
add
adc
add
pop
xor
xchg
out
xor
mov
fidivrs
sti
xchg
js
shl
jb
hlt
pushf
gs
mov
or
sti
sub
enter
pop
sub
jbe
add
rorl
add
repnz
addr16
das
lahf
sbb
mov
icebp
stc
or
dec
mov
ss
lret
xor
je
popa
dec
inc
fcmovnu
out
test
rcr
insl
loop
xchg
push
xchg
cmpsl
cmpsw
mov
stos
dec
jg
pop
mov
push
sub
sbb
arpl
aaa
xor
jo
sub
cltd
into
xor
arpl
es
ja
push
xchg
xchg
mov
pop
xor
dec
cmp
subl
outsl
ljmp
popa
out
imul
push
lahf
ret
or
cmp
insl
dec
sub
inc
push
fldenv
push
les
loop
jl
sub
inc
and
xor
sub
enter
mov
clc
sbb
fmulp
jno
in
mov
mov
subl
xor
pusha
push
hlt
push
fs
xchg
adc
sub
and
out
xchg
stos
repz
addr16
out
jno
and
dec
push
fisubl
mov
jo
mov
js
ret
mov
lods
and
add
lods
fisubrl
negl
popa
sub
add
dec
aas
xlat
imul
mov
dec
or
add
out
mov
adc
nop
jns
ficompl
loopne
out
sbb
rorb
aam
and
jbe
bound
test
pop
fstpl
imul
jp
mov
ljmp
dec
sahf
jge
sbb
add
dec
popa
or
push
popa
stos
mov
lret
dec
insl
aaa
loopne
sbb
pusha
bound
mov
sbb
cmp
into
out
les
and
std
pushf
push
fdivs
fldt
xchg
inc
sbb
int3
ss
xchg
std
stos
dec
ljmp
push
inc
xchg
shll
jno
jmp
insb
lcall
lods
out
xchg
push
mov
xlat
cs
or
pop
aas
and
loop
es
lods
mov
fldcw
or
test
enter
mov
out
iret
out
lods
cmpsb
daa
out
int
lea
mov
xchg
insb
sub
and
mov
sub
sbb
mov
xor
inc
sahf
cmp
inc
jae
loop
nop
or
jle
mov
mov
mov
adc
mov
dec
xchg
cmp
imul
push
andps
lcall
dec
sbb
les
mov
xor
or
push
arpl
adc
fmuls
in
aaa
adc
jmp
out
shll
negb
cmp
pop
jecxz
outsb
dec
test
out
lcall
push
les
inc
in
mov
fcoml
push
mov
xchg
pop
add
in
sbb
test
cmp
or
jbe
aas
loope
cmpsl
inc
mov
cmpsb
rolb
push
xor
roll
adc
data16
out
in
mov
add
mov
lock
mov
inc
lahf
mov
dec
scas
iret
mov
in
mov
subb
ficompl
inc
xchg
mov
bound
lret
mov
add
push
fstps
cmpl
pop
int3
xchg
push
dec
cmc
stc
jl
ss
dec
mov
jmp
mov
lea
pop
pop
cmp
cltd
pop
jge
lds
pop
hlt
push
cltd
and
mov
xchg
or
dec
and
dec
pop
inc
outsl
ret
mov
faddl
mov
push
pop
sub
lret
push
mov
jae
mov
push
cmpsl
sbb
fstpl
loop
pop
cmpsb
mov
out
and
aas
push
mov
or
mov
pop
pop
test
and
fistpl
jnp
sub
lods
mov
sub
pop
pop
fldl
cmp
sbb
push
push
cmp
rorb
cmp
dec
inc
scas
xacquire
js
repnz
fninit
mov
mov
in
mov
pop
mov
cs
pop
mov
sbb
out
je
dec
jo
dec
loopne
xchg
push
push
add
jge
js
nop
push
in
mov
push
out
fadds
adc
add
arpl
frstor
sub
lods
push
dec
fdivl
lea
xchg
fbld
pop
mov
daa
cmp
orb
or
push
mov
or
nop
xor
ficomps
fisubs
pop
cmpsl
jmp
mov
inc
dec
jnp
lock
cmp
fisubs
cli
movsl
jb
push
daa
cld
sbb
pop
shr
sbb
or
dec
out
aas
lret
imul
sbb
mov
mov
mov
jb
out
sub
add
lea
jo
jb
iret
or
push
scas
pop
js
cmp
cs
dec
leave
add
jns
push
popf
repnz
repz
inc
and
enter
dec
and
jmp
sub
jg
sbb
xchg
mov
and
inc
insb
dec
shrb
scas
sti
adc
mov
mov
xlat
inc
ljmp
and
mov
inc
addr16
int3
in
jb
xchg
ljmp
es
cmp
fcoms
mov
jmp
xlat
sub
push
jno
out
adc
fiaddl
jns
je
xor
imul
and
int3
in
mov
pop
mov
push
inc
stos
mov
pop
and
cmp
inc
insl
dec
cli
push
push
lds
popa
ret
ja
stos
popa
fildl
ss
das
inc
cmp
imul
cmpsb
sub
or
mov
hlt
and
dec
xor
rcr
mov
test
cmpsl
dec
push
sbb
test
mov
in
or
mov
mov
and
lea
add
pop
data16
sbb
and
pushf
dec
jbe
subb
loope
cmc
push
mov
data16
push
scas
outsb
pop
cmp
cmp
xchg
pusha
mov
inc
je
lods
cs
fsubrs
sar
lcall
push
sbb
adc
rcr
dec
mov
pop
push
lods
pop
jmp
pop
xchg
cmp
cmp
push
repnz
mov
mov
cmp
jo
aad
mov
incl
movsl
jecxz
adc
nop
adcb
in
or
mov
loopne
shll
mov
test
and
sub
js
outsl
and
sbb
aas
xchg
pop
pop
fmull
out
xor
push
jne
jno
enter
mov
push
movsl
frstor
daa
ja
pop
idivb
mov
and
add
mov
nop
adc
test
mov
repnz
movsl
les
nop
mov
xor
sti
lret
aad
lret
mov
jecxz
addr16
dec
pop
push
std
push
push
pusha
push
cmp
ljmp
push
push
repnz
adc
arpl
mov
in
and
and
or
pop
call
fistpl
popa
sti
roll
popa
push
loopne
adc
dec
leave
fidivs
int
sti
ljmp
sbb
mov
adc
cmc
daa
pop
push
loopne
lods
mov
test
pusha
push
push
sbb
jle
test
scas
fsubrs
jg
decb
out
fs
fmuls
inc
rcpps
mov
mov
xor
xchg
gs
xor
push
jnp
xchg
lret
add
sbb
jge
push
out
movsl
inc
into
rcll
ret
ror
mov
push
inc
xor
int
repnz
adc
les
add
fisubs
lahf
mov
cmp
mov
adc
push
sbbb
mov
cwtl
lahf
dec
sub
mov
out
push
aad
insl
pushf
cmc
arpl
bound
cltd
cltd
sub
jl
aad
outsb
xchg
jmp
adc
sub
int
call
jp
rcrb
lret
add
sbb
aas
negl
sbb
cmp
sarb
push
xor
mov
test
stos
add
sbb
arpl
das
cmc
pop
sub
out
pop
shl
and
sbb
add
jns
insl
inc
push
sub
nop
loope
pop
pop
nop
xor
lahf
or
or
ds
lock
mov
pop
fcoms
repnz
xchg
imul
loope
cmp
mull
mov
stos
gs
sbb
leavew
cmpsl
in
sbbl
or
int3
setbe
xchg
jne
scas
jle
push
test
add
add
fadds
dec
loopne
mov
or
fidivrl
jl
and
aas
daa
push
repz
sub
out
dec
or
int
sahf
push
ss
inc
out
sub
push
stos
repnz
sbb
shlb
pop
rolb
movsl
mov
push
outsl
mov
int
sahf
jo
pusha
jmp
outsb
lahf
insl
fdivp
or
movsb
or
push
and
stos
pushf
adc
ja
scas
nop
cwtl
cwtl
jg,pn
mov
loope
repz
mov
xchg
pop
into
add
inc
jb
lret
jle
aas
mov
outsl
dec
mov
lahf
loope
leave
jnp
out
cltd
xchg
xor
repnz
rolb
jae
outsl
pop
dec
aam
sub
xchg
jb
and
push
sahf
rcl
subl
aam
sbb
mov
push
jbe,pn
out
and
fucomi
test
and
cwtl
jg
sbb
out
out
jb
mov
icebp
ret
sbb
jbe
mov
jbe
leave
mov
lods
mov
mov
sbb
in
jge
adc
dec
xor
inc
mov
add
xor
cltd
cmpsb
sti
cld
xor
popf
xchg
and
pop
dec
add
push
and
jmp
jo
scas
ja
add
pop
push
pop
jo
mov
pop
mov
xor
fmuls
mov
and
xor
out
jne
sbb
xchg
out
pop
push
call
jmp
je
addr16
and
xor
adc
adc
lds
incl
push
cltd
adc
and
push
leave
aaa
lret
ret
xlat
loop
sub
loope
shll
addr16
cwtl
daa
add
cmp
int
sub
repz
or
dec
pop
mov
inc
loope
jb
cmp
stos
sbb
fwait
xor
scas
insb
jb
xchg
fidivs
cmp
jle
ret
mov
or
stos
pop
inc
mov
jle
aas
xchg
pop
xchg
mov
push
cmp
xor
in
mov
nop
stos
mov
jle
sub
sbb
scas
xor
pop
xchg
in
loope
mov
sbb
xchg
or
push
inc
repz
sub
insb
xor
outsl
cltd
push
push
push
popf
ds
mov
rcll
push
xorb
mov
arpl
sub
in
push
xchg
sbb
xor
sbb
loope
stc
jo
and
xchg
xchg
pop
pop
and
andb
cld
pop
inc
add
push
iret
sub
les
mov
jb
xchg
add
xchg
bound
mov
sbb
idivl
and
rol
jo
jecxz
leave
pop
mov
push
ja
push
add
xlat
mov
fwait
inc
in
call
sahf
icebp
add
sub
insb
das
xchg
xor
sahf
add
cmp
sbb
inc
pop
or
push
pop
outsl
outsb
pop
mov
icebp
addr16
or
and
cwtl
lods
rep
loope
dec
push
insl
mov
dec
and
inc
xor
push
out
jae
xchg
in
stc
testl
xor
out
and
mov
sbb
mov
iret
inc
daa
lcall
xchg
mov
iret
dec
ret
pop
mov
mov
popa
pushf
cs
push
mov
xchg
aad
fisubs
xchg
pop
ljmp
cmp
jno
cmp
xchg
test
push
in
mov
mov
sarb
or
pop
push
repz
orb
xchg
test
test
shlb
cmp
les
mov
inc
xor
es
xor
and
loopew
lret
push
mov
mov
ret
lea
add
mov
xchg
and
or
lcall
fistpll
mov
and
jno
mov
or
or
stos
inc
lcall
adc
subb
adc
clc
lret
inc
popf
jecxz
xchg
loopne
pop
sbb
inc
aaa
xchg
stos
mov
jno
cmp
cltd
jle
idivl
push
mov
pop
push
idivl
clc
stc
add
xchg
lret
pusha
shr
lea
fisttpl
xor
repnz
sbb
push
loopne
cmpsl
call
dec
mov
shl
xor
fsts
and
mov
inc
pop
and
call
outsb
push
mov
inc
into
lock
dec
jb
mov
scas
popa
lock
mov
icebp
insb
sbb
dec
in
inc
out
fbld
xchg
jne
pop
jl
pop
cmp
push
xchg
lret
rdtscp
xchg
mov
lcall
enter
jbe
or
fisubrl
leave
pop
pop
les
test
cmp
repnz
xor
imul
adc
xchg
or
ret
lock
test
sbb
mov
xor
jnp
pop
movsl
enter
pop
mov
jo
mov
cmp
push
sub
movl
aad
mov
add
cmp
mov
mov
gs
ret
xorl
out
jmp
pop
push
fsubs
cwtl
mov
jl
cwtl
mov
aad
sti
push
sahf
stos
mov
dec
adc
xor
test
stos
scas
push
push
dec
sbb
mov
mov
insl
or
and
fwait
fs
jns
inc
ficoms
cmp
mov
mov
aaa
imul
mov
repnz
add
mov
xor
loope
pop
hlt
fldenv
cwtl
adc
sbb
shll
movsl
sbb
xchg
dec
inc
lds
pop
mov
pop
xchg
data16
mov
lea
sbb
ret
jne
jmp
lds
test
xlat
arpl
lds
sti
inc
ret
mov
or
push
and
insb
push
mov
les
mov
cltd
cmpsb
cmpb
fwait
adcb
loop
dec
jbe
das
push
jecxz
in
push
jg
jbe
add
push
cmp
mov
sbb
fdivs
push
fidivs
xor
out
dec
cmpb
in
ds
and
sub
xchg
lds
outsb
insl
push
aaa
subl
push
sbb
adc
jecxz
sub
pop
push
jb
test
orb
lret
cmpsb
add
jbe
callw
and
or
repnz
mov
dec
pusha
lods
imul
imul
pop
mov
jo
pushf
mov
fistpl
sti
pop
mov
movsl
xor
js
test
dec
shlb
sub
sbb
dec
push
scas
sub
aam
jmp
inc
inc
mov
aam
insl
out
xchg
sub
xchg
dec
movsl
mov
jecxz
mov
pop
xchg
add
aaa
sub
rcrb
mov
dec
mov
pmuludq
mov
sub
push
add
jg
add
ret
imul
icebp
arpl
pop
xchg
pop
in
leave
adc
loope
push
cmp
test
add
cs
ret
mov
movsl
add
add
sub
dec
aaa
push
out
sub
xchg
sub
pop
and
icebp
sub
loope
mov
adcl
pop
inc
pop
rol
lahf
es
int3
pop
xor
stc
lret
or
add
adc
xor
push
adc
jb
je
je
fs
test
incl
aas
add
imul
adc
jns
mov
mov
mov
or
pop
sbb
stos
das
jb
fildl
add
xchg
jg
cld
mov
movsb
and
pop
or
xchg
push
sbb
and
addb
mov
mov
xor
jbe
ret
add
in
mov
call
pop
dec
mov
pop
mov
jo
cmc
aas
sbb
xchg
pop
mov
lds
leave
call
xlat
stos
mov
js
mov
xchg
mov
js
sub
movsl
popa
fmull
jbe
stos
mov
push
js
and
fcmovbe
xchg
aaa
in
data16
jnp
inc
xor
or
fs
and
sbb
mov
mov
push
xchg
xor
adc
dec
mov
nop
clc
std
fdivl
sar
xor
add
stos
mov
mov
inc
mov
sub
inc
ds
adc
test
sub
aas
or
clc
push
test
out
or
icebp
insl
adc
pop
lods
pop
in
leave
add
mov
pop
sub
mov
mov
lret
and
mov
jnp
adc
sti
push
sarb
insb
mov
jmp
int3
test
fsubr
mov
push
iret
dec
mov
xchg
test
iret
cmp
mov
push
outsl
inc
js
cmp
xor
pop
adc
sarb
xorb
lahf
adc
jne
mov
xchg
gs
rolb
mov
int3
sub
dec
mov
mov
cmc
popf
scas
out
sub
sub
mov
lods
jns
in
stos
lret
rorb
xor
and
cmp
jne
mov
cwtl
pop
xchg
mov
fs
fs
clc
out
mov
xor
inc
sbb
mov
add
insl
cwtl
sub
mov
and
xor
imul
pop
pop
mov
stos
cmp
test
dec
popf
mov
cmc
mov
push
jne
mov
mov
add
inc
xlat
mov
mov
arpl
lahf
cmpsl
andb
mov
pop
sbb
push
lods
out
shrl
xlat
sbb
pushf
fwait
outsl
push
test
or
push
sarb
scas
lock
xor
cmpsl
xorb
lods
pop
xchg
jmp
fs
xor
les
lds
cwtl
int
mov
imul
lea
leave
lret
mov
jno
aaa
add
popa
ficoms
mov
outsb
movsb
xlat
cmpsl
lret
jecxz
lret
xchg
or
pop
mov
add
or
inc
lds
int3
add
cmp
push
push
dec
xchg
stc
bound
push
ljmp
mov
cwtl
iret
jl
mov
adc
sbb
or
push
or
xchg
neg
or
aas
xor
adc
jecxz
and
sarb
aas
jl
jae
mov
enter
pushf
cmp
inc
xor
adc
insb
out
mov
mov
pop
push
or
stos
ljmp
push
xchg
leave
cltd
psraw
cli
or
and
jb
in
sbb
and
inc
xlat
mov
stc
rorl
mov
push
outsl
dec
js
das
ret
movsl
dec
lods
sbb
sub
je
mov
stc
fldz
push
push
dec
idivb
jae
mov
adc
dec
add
lock
mov
arpl
inc
adc
push
adc
pusha
imul
add
pop
dec
sub
lods
mov
jb
or
iret
add
mov
mov
icebp
dec
add
cmp
mov
add
test
and
mov
dec
icebp
outsl
jmp
popa
mov
lods
inc
push
inc
ret
aam
or
shll
lcall
push
and
insl
cli
loop
mov
stos
leave
adc
insb
push
jno
cmp
mov
mov
push
and
xchg
mov
sub
or
inc
inc
cmpsl
aam
pop
xchg
jns
mov
les
decl
pushl
fs
mov
sub
sbb
mov
xor
imul
shl
fs
in
pop
xchg
pop
jl
jmp
push
pop
xor
mov
icebp
std
cs
dec
aaa
push
iret
lods
mov
mov
jg
mov
mov
inc
or
int
mov
rcrb
and
lahf
insb
fstps
cmp
les
push
cli
int
icebp
enter
mov
jg
add
xchg
ret
sub
fsubrl
es
test
jge
mov
or
in
divl
jp
div
sbbb
les
loop
lock
xchg
in
fistps
xchg
mov
fwait
orl
in
mov
pop
in
jg
ds
aad
xchg
cs
sti
fldenv
inc
mov
jl
sar
mov
dec
sarb
shrb
add
dec
push
jae
call
out
sahf
std
mov
dec
or
xor
inc
test
cli
adc
mov
outsl
outsl
loopne
add
imul
enter
outsb
pop
loop
jae
or
outsl
ret
outsb
jmp
inc
cld
mov
mov
push
fisubrs
xor
pop
mov
fs
testl
pop
xor
adc
pop
pop
pop
adc
test
xor
or
pop
shll
daa
ss
push
sbb
sub
add
mov
shll
jmp
int3
push
sub
push
mov
insl
lds
les
cmp
adc
aas
sbb
cmp
inc
out
push
and
addl
pop
lock
cmpsl
jne
divb
jno
addr16
lret
orl
data16
add
adc
mov
jmp
dec
mov
sbb
popf
lds
ret
mov
popl
mov
outsl
fbstp
push
inc
cmc
jnp
in
fmul
mov
xchg
xor
push
mov
icebp
addr16
pop
add
cwtl
mov
pop
mov
fwait
shll
pop
jnp
lahf
dec
xchg
and
xor
aam
lods
jp
hlt
aas
lods
dec
push
stc
adc
mov
and
mulb
fbstp
mov
inc
sub
jbe
out
xchg
sbb
sti
jge
adc
adcb
sbb
cs
sbb
lods
add
gs
rcll
jo
jmp
test
idivb
and
in
sti
mov
test
push
outsb
loopne
xchg
shrb
nop
dec
or
shll
inc
test
out
push
dec
es
sbb
rcrl
push
imull
addl
jns
sbb
insb
or
les
fcoml
aaa
mov
adc
clc
xor
fcmovne
sbb
push
cltd
adc
das
test
push
cmp
jg
jb
cld
mov
ror
xor
pop
pop
dec
aas
cmp
stc
js
stc
jmp
jg
ret
mov
mov
add
push
xorl
lea
mov
sub
insb
dec
sub
push
push
call
test
mov
js
cwtl
std
out
xor
shl
call
mov
jae
cmp
or
decl
xchg
mov
ret
ret
lret
mov
adc
sahf
mov
inc
or
mov
sbb
aaa
dec
fildl
mov
addl
inc
xor
jnp
cmp
outsb
inc
enter
shrl
fwait
mov
out
pop
in
inc
cmp
inc
jl
inc
test
outsl
xchg
sub
mov
nop
cld
push
nop
mov
out
mov
test
sub
and
fstps
out
and
loop
add
stc
pusha
repz
sub
das
pop
cwtl
adc
clc
jp
jg
adc
xchg
and
sbb
btr
xor
or
xor
mov
dec
cmpl
or
jne
push
sub
ret
data16
mov
sbb
xchg
insl
filds
pop
loope
mov
jecxz
mov
dec
jmp
mov
ss
movsl
into
or
xor
sub
inc
syscall
xorb
leave
adc
push
jl
dec
cmp
push
sbbb
mov
mov
push
sbb
pop
lret
xor
sbb
mov
mov
pop
mov
call
test
fisubrs
int3
cli
mov
and
shrb
push
in
fs
fildll
out
inc
out
data16
push
pop
or
mov
ret
movsl
push
cmp
insb
imul
push
test
jae
jbe
cmpsl
cmp
insb
test
xchg
push
mov
jnp
mov
and
orl
sub
jb
iret
mov
int
test
in
inc
jne
mov
push
adc
test
setp
les
cli
cli
inc
int
mov
outsl
push
sbb
xchg
iret
jbe
mov
mov
add
or
jnp
cmp
and
mov
jmp
inc
dec
push
cmpsl
cs
xchg
adc
inc
es
mov
inc
mov
aas
gs
pop
or
mov
popf
daa
jns
pop
sbb
or
addb
mov
loope
js
fsubrl
fidivrl
bound
sti
sti
out
std
sbb
sbb
add
inc
jmp
or
cmp
push
mov
dec
dec
sub
or
je
ljmp
or
fwait
add
lds
aad
or
scas
push
test
cmp
ror
pop
aas
iret
mov
dec
sbb
jg
add
sub
lahf
add
pusha
lret
stc
ja
mov
jl
adc
out
add
inc
pop
outsb
test
pop
imul
xor
pop
inc
sub
inc
leave
mov
jbe
idiv
lods
mov
dec
fsubr
push
pop
cld
xor
decb
xchg
sbb
xor
mov
inc
push
into
pop
mov
js
sub
pop
shlb
sbb
ss
xchg
and
sti
ret
pop
ja
pop
stc
int3
and
dec
cmp
call
iret
cld
arpl
in
push
or
adc
or
in
push
fnstcw
imul
pop
cmp
out
mov
jp
mov
fdivrl
add
push
xorb
adc
vpmuludq
cmp
dec
xchg
xchg
mov
jae
pop
in
gs
data16
fmull
cmp
negb
aaa
inc
mov
add
je
mov
xor
ffree
cltd
mov
jle
push
cmp
push
ret
sbb
or
mov
inc
pop
inc
add
adc
lods
imul
add
stc
push
lea
dec
aaa
mov
inc
mov
or
dec
or
in
adc
lcall
pop
push
inc
mov
shr
mov
out
mov
lea
mov
sbbb
ficomps
fisubl
int
jge
out
jp
or
and
gs
push
ds
frstor
dec
add
add
jae
sub
arpl
push
pop
js
mov
inc
adc
jl
mov
insb
cmc
and
out
cmpsl
subl
mov
sbb
into
imul
nop
into
dec
mov
cmp
and
adc
cmp
movsl
push
and
addl
js
cmp
mov
call
stc
leave
pusha
mov
fisttpl
jle
daa
lock
inc
cmp
lds
add
lret
fldenv
cmp
lods
or
add
repnz
in
or
repnz
test
and
in
fldcw
clc
adc
sbb
pop
in
mov
insb
mov
adc
and
call
adc
adc
repnz
mov
ss
lods
push
mov
cmpsb
loopne
jg
lock
loop
xchg
lock
xchg
cmp
push
adc
jbe
and
in
sbb
test
js
popl
add
pop
add
in
and
decl
or
cmp
test
in
lcall
sub
sub
ret
out
push
les
xlat
cmp
popl
mov
ret
fwait
dec
or
and
sahf
jle
xor
push
in
enter
pop
push
dec
rorb
or
loopne
cs
insb
ja
cltd
xor
cmpsb
loopne
sbb
mov
subl
inc
lret
inc
fwait
and
xchg
pushfw
or
xor
es
lods
or
cmp
out
fs
repnz
mov
xchg
xchg
fdivl
imulb
cmp
mov
mov
and
add
aaa
sub
outsl
pop
inc
scas
dec
jle
add
ja
ret
sbb
loop
sti
sti
out
jbe
xor
jl
je
nop
fs
outsb
add
adc
sub
inc
xor
outsl
inc
cmpsl
repnz
jb
aad
test
movsb
pusha
stos
lret
xchg
and
push
in
std
mulb
cmp
pop
mov
mov
xor
aas
loope
mov
cmpsb
filds
movsb
dec
mov
pop
xor
adc
bound
push
rorb
jae
cli
test
sbb
jmp
fidivrs
cmpsb
cmp
add
dec
jecxz
mov
iret
div
jae
jae
push
ret
fidivl
out
lock
call
inc
shl
and
insb
xor
leave
sub
jbe
cmp
std
or
dec
mov
sbb
xor
test
fdivl
xchg
sti
stos
xor
sbb
mov
fldenv
std
push
lock
pop
clc
insb
ffree
push
cmc
ror
es
adc
cmp
mov
in
and
or
scas
ljmp
cmp
add
and
mov
jmp
sub
in
aaa
sbb
scas
dec
js
mov
mov
in
pusha
mov
fadds
cmpsb
incl
cltd
cwtl
jp
shrb
adc
ficomps
iret
lods
jb
pusha
movsl
or
popf
push
aaa
xchg
push
jnp
inc
xchg
pop
stos
fiaddl
ss
inc
adc
and
test
sbb
fimuls
push
xor
jnp
repnz
bound
xchg
movsb
add
dec
add
int
fldcw
popf
mov
pop
call
in
or
cmpsb
lds
aas
adc
xor
mov
jl
cmp
dec
mov
jl
enter
pop
gs
pop
repz
mov
repnz
test
mov
jl
sub
xor
dec
dec
xor
jbe
dec
popa
push
sarl
mov
add
rorb
ficompl
test
pop
rorb
mov
loopne
daa
loopne
sbbl
push
test
pop
dec
scas
jl
xor
lret
or
and
mov
inc
test
aaa
scas
and
xchg
mov
call
mov
out
lds
lret
xor
lret
dec
cmp
inc
shlb
cmp
aam
scas
inc
sbb
outsl
inc
sub
pop
push
adc
aas
stos
xchg
push
push
test
pushf
rorb
inc
icebp
and
cmc
sub
dec
and
sub
insb
and
insb
sbb
sbb
mov
mov
ds
or
stos
push
or
xchg
aas
daa
cmp
adcl
movsb
sbb
out
sti
insb
das
out
cs
and
dec
dec
mov
fucompp
lea
imul
push
push
mov
ss
mov
testb
xor
jl
mov
xor
push
dec
xchg
push
lea
pop
test
adc
pusha
sbb
push
loop
add
mov
mov
mov
ffreep
inc
xor
sub
out
call
and
cmp
adc
push
adc
bound
push
loopne
push
clc
jnp
fucomi
lret
loop
add
add
in
inc
add
pop
xlat
movsl
stc
divl
jbe
loop
je
ret
stc
ds
fildl
sub
xchg
jae
xor
insb
jb
cmc
jge
mov
sarb
mov
fsubrs
aas
lock
adc
pop
rol
mov
stos
and
or
in
mov
es
fs
sar
into
fsubl
jo
push
push
fidivrl
sbb
fcmovbe
push
mov
pop
xchg
mov
xlat
and
int
sbb
pop
pop
adc
inc
and
cs
pop
mov
out
inc
leave
push
add
mov
mov
or
mov
enter
scas
adc
dec
jo,pn
jl
adc
push
add
jo
jl
and
loope
std
jl
outsl
mov
out
dec
and
mov
sbb
je
cmp
xor
movsl
js
fidivs
icebp
loop
scas
lcall
ja
sub
cmp
push
xor
jno
hlt
paddsw
ret
pop
add
loop
sarl
pop
stc
shlb
xorb
inc
mov
mov
xchg
mov
call
les
inc
jmp
or
mov
adc
mov
clc
test
jp
xchg
jmp
shl
test
push
mov
inc
push
xor
push
cli
in
shlb
mov
mov
or
xchg
ret
aad
mov
es
mov
xchg
lret
jae
xchg
pop
push
test
mov
icebp
dec
mov
out
divl
loop
int3
in
je
popf
push
mov
movsb
add
lahf
add
and
dec
lock
ret
std
add
pop
addr16
mov
sbb
jbe
fmull
adc
loope
jg
imul
sub
jge
xorb
pop
pop
push
sbb
dec
adc
inc
ret
aaa
mov
mov
pop
outsb
adc
cld
mov
adc
mov
cs
pop
sbb
scas
into
sbb
arpl
add
ror
sub
rep
dec
adc
imul
pop
jle
and
je
ljmp
sub
bound
js
ret
cmp
fistps
jne
in
mov
rcrl
mov
jae
gs
rcrb
hlt
arpl
nop
push
adcl
mov
inc
cmp
jmp
mov
andb
xchg
cltd
fs
push
dec
jg
lea
lahf
shrb
sti
sbb
lods
mov
aam
pop
dec
cmpsl
popf
ret
clc
pop
inc
fwait
jno
orl
loope
or
das
mov
mov
insl
cli
ds
push
cmp
cmp
orb
js
into
test
mov
jbe
in
mov
jge
mov
popa
stos
fadds
ds
sub
inc
sub
and
lahf
std
bound
shll
fdivs
pop
pop
enter
clc
xchg
push
cmpsl
cli
pop
xchg
adc
xchg
pop
outsb
es
ss
icebp
jge
cs
dec
sbb
and
push
mov
inc
imul
add
dec
mov
xchg
hlt
fwait
cli
stos
cs
jno
mov
sahf
pop
test
mov
mov
decl
outsb
lcall
insl
jns
push
dec
adc
jo
xchg
jb
lret
or
dec
and
lods
sub
cmp
ss
pop
fisttpl
sbb
mov
movsl
pop
jae
dec
xchg
or
out
mov
mov
mov
or
pop
jle
into
mov
imul
pop
les
push
sti
jb
loopne
ja
mov
sbb
cmpsl
lds
jns,pn
sub
outsb
fwait
mov
mov
pushf
movsl
int
stos
sti
mov
std
cmpsb
or
insb
out
test
loopne
les
mov
dec
mov
sar
jecxz
loope
bound
mov
adc
jmp
mov
add
mov
adc
push
add
in
icebp
lahf
jecxz
inc
mov
iret
or
call
ret
mul
gs
mov
outsl
cwtl
in
cs
jnp
cli
es
mov
mov
fnstenv
push
les
lock
pop
aam
push
es
jo
mov
xchg
mov
mov
iret
arpl
add
repz
loope
call
repz
pusha
sub
jnp
fistpll
sub
mov
cmp
ficomps
cmp
mov
dec
addb
imul
cmc
jnp
push
sbb
add
or
jg
inc
push
pop
rolb
je
test
lret
xor
xchg
add
pop
pop
movsl
cmpsl
icebp
fsubrs
ret
and
fsubs
push
adc
push
in
sub
or
arpl
mov
or
xchg
mov
push
sub
jns
inc
push
test
aam
in
mov
inc
das
inc
pop
pusha
adc
xor
rclb
xchg
out
cmp
or
andb
call
jmp
jno
sti
jnp
pop
xchg
stc
sarb
inc
cltd
pop
cmp
lret
adc
out
incb
testl
scas
jbe
push
cld
xor
sub
xor
aaa
roll
dec
arpl
xor
gs
cs
in
loop
xchg
and
bound
ret
ljmp
mov
xor
std
fldenv
sub
loop
jne
mov
mov
mov
lock
sbb
dec
stos
sub
mov
inc
cmc
icebp
dec
mov
movsl
lahf
add
lret
lea
mov
mov
cmpsl
pop
les
in
aam
lret
pushf
sbb
in
repz
data16
lret
mov
pop
cmovnp
dec
lcall
cmpsb
mov
bound
mov
xchg
popa
adc
inc
and
bound
jle
in
mov
out
mov
mov
faddl
push
jns
enter
lahf
je
or
or
aas
ret
pop
mov
dec
mov
xlat
lds
mov
lock
push
arpl
mov
dec
cmp
push
imul
lcall
jae
cs
sub
sub
negb
inc
mov
leave
mov
ja
dec
out
ffree
subb
push
dec
call
push
mov
cmp
cli
push
dec
lods
shlb
notb
aad
clc
inc
imul
mov
js
mov
fnstcw
jmp
dec
sbb
fidivrl
pushf
cli
shll
mov
pop
xchg
ret
add
leave
bound
insl
dec
cli
sub
dec
adc
sbbl
rcrl
jmp
inc
push
pop
mov
inc
jno
arpl
shll
pushf
adc
cltd
stos
xlat
js
mov
into
fisubl
mov
les
out
sbb
scas
mov
xchg
and
test
fs
aas
jge
dec
cwtl
ret
or
push
in
or
mov
xchg
jp
into
jp
inc
or
in
push
fists
pop
out
mov
inc
mov
popf
mov
mov
mov
ljmp
jo
inc
out
mov
pop
sub
fcoml
inc
mov
rcl
fbstp
ja
int3
movsl
mov
dec
fadd
loopne
or
xorl
sti
hlt
xchg
push
jns
shlb
xchg
xchg
das
lods
and
leave
mov
xor
mov
dec
and
loope
outsl
mov
mov
sbb
enter
stos
cld
js
sbb
mov
dec
cltd
push
push
ja
xchg
inc
sarl
jae
and
insl
dec
cmp
popf
dec
mov
adc
aad
int3
xor
jecxz
out
mov
or
xor
mov
data16
cmp
xchg
fmull
hlt
xchg
mov
into
mov
xor
loopw
mov
out
and
in
and
mov
mov
pusha
sbb
mov
push
lcall
push
fistps
push
mov
or
xor
mov
cmpsl
imul
and
xor
call
fdivs
dec
adc
jp
mov
pop
jne
inc
iret
push
int
jmpw
mov
bnd
sar
fsubp
aaa
sbb
mov
mov
mov
mov
in
xor
xchg
mov
push
ljmp
mov
dec
and
addr16
jnp
pop
in
scas
mov
cltd
fimull
out
pusha
push
inc
ss
mov
dec
jae
cwtl
lods
cmpsl
push
out
push
jo
mov
mov
or
push
cmp
imull
adc
mov
lea
mov
sahf
and
pop
adc
mov
int
mov
insl
jbe
sub
and
xor
fistpll
dec
jecxz
inc
sti
mov
mov
jo
inc
cld
scas
add
xorl
cmp
mov
mov
add
add
jo
aaa
insb
or
add
insb
outsb
cmp
aad
dec
inc
push
pop
ljmp
in
push
jmp
stos
jae
adc
jecxz
push
dec
cmp
dec
jl
movsb
and
insl
movsl
pop
mov
mov
xor
push
mov
fwait
add
sbb
push
fldcw
pushl
dec
jne
push
cli
inc
aas
les
orl
mov
enter
pop
pop
decb
in
xchg
arpl
je
aam
jmp
or
adc
mov
mov
or
mov
into
sbb
jbe
jne
sbbl
sub
adc
outsb
push
pop
test
iret
or
leave
rcll
mov
cld
pop
adc
xor
jmp
addl
inc
cld
pop
out
data16
push
sti
bnd
cmpsl
mov
mulb
lret
lods
and
jge
dec
mov
push
les
movsl
add
mov
pop
das
push
mov
adc
inc
mov
pop
xchg
cmp
call
push
repnz
pop
adc
addr16
pushl
mov
fwait
andl
imul
adc
popa
xchg
push
fwait
pop
adc
mov
push
movsl
cmp
int3
ficomps
add
lods
mov
clc
aam
mov
adc
rcl
in
xchg
rcl
inc
jp
cmp
ficoml
push
jge
rcl
dec
mov
xchg
xor
cmpl
inc
lret
adc
data16
testb
rclb
inc
fcompl
lret
ret
movsb
out
or
or
popf
xchg
mov
setb
nop
inc
imul
pop
fidivrs
les
mov
out
sbb
push
mov
int3
fidivrl
inc
aas
xchg
cmp
insl
in
adc
pusha
hlt
adc
rol
shrl
xchg
mov
push
not
cld
push
jbe
xor
add
xchg
sub
mov
add
rclb
mov
stc
push
cli
stos
testb
sahf
jg
push
in
std
pop
jle
add
sbb
aas
fsubs
cs
stc
icebp
mov
cld
lahf
clc
pop
pushf
out
std
mov
mov
cltd
iret
dec
inc
xchg
xlat
or
jl
cmp
sub
mov
mov
pushl
sub
xchg
push
push
xchg
and
push
and
xchg
adc
negl
ja
mov
push
and
dec
cmp
leave
push
out
leave
inc
dec
iret
jns
jnp
inc
js
and
in
sbb
adc
lock
fisttpl
mov
jne
lret
aaa
cmp
sub
xchg
dec
push
cli
dec
cmpsl
outsl
or
xchg
daa
jmp
cltd
fldt
andl
aad
and
movsb
push
xchg
cmpsb
xor
test
outsb
push
inc
jecxz
lock
jp
sub
xchg
push
notb
or
mov
test
xchg
sti
cmp
dec
leave
xchg
mov
cmp
xchg
xchg
cmpb
mov
inc
pop
out
or
sbb
xchg
nop
mov
lds
mov
pop
pop
cli
fs
cmp
testl
insb
es
test
cmpsb
add
jbe
sbb
rcll
fs
bswap
add
sub
cltd
mov
adc
test
data16
fiaddl
in
sti
inc
inc
mov
adc
xchg
adc
iret
xchg
jp
fs
fsubp
cli
divl
mov
aas
shll
stos
jbe
scas
je
sti
jge
inc
add
stos
pop
and
pop
xor
nop
pop
xorl
and
jle
dec
or
xchg
push
add
dec
into
xor
stc
jo
loope
pop
hlt
ret
sub
mov
mov
sbb
test
pop
mov
xor
dec
inc
lret
push
insl
clc
jns
xor
jmp
repnz
jmp
inc
cmp
fwait
lods
lea
std
int3
dec
inc
adc
jle
roll
imul
cmp
imul
cli
mov
icebp
aad
inc
test
dec
sub
add
jns
cmp
dec
je
jp
jmp
out
inc
mov
and
pop
cli
scas
divl
mov
roll
mov
inc
out
blcfill
bound
sbb
pop
dec
dec
adc
iret
int3
clc
sahf
scas
insl
inc
push
in
inc
xlat
insl
mov
rcrl
xchg
pop
stos
repnz
outsl
mov
out
cwtl
fcoms
ja
popa
hlt
icebp
sub
nop
pop
cs
leave
outsb
sbb
cmpsb
xchg
sbb
lcall
test
lcall
mov
pop
je
and
pop
mov
pop
mov
scas
push
or
test
les
les
jl
pop
shlb
mov
or
mov
in
aas
popf
lcall
les
xor
lods
inc
push
jg
adc
add
mov
dec
popa
push
call
pop
xor
xor
jmp
mov
shll
or
iret
push
scas
into
push
xor
mov
pop
lahf
lret
lods
cmpsb
sarl
sbb
dec
or
mov
idivb
sarb
mov
dec
or
cwtl
xchg
lods
inc
int3
dec
push
js
nop
pop
loop
pop
out
push
in
xor
pushl
arpl
test
int
mov
or
pop
fs
sbb
dec
in
mov
xchg
insb
addr16
out
and
cltd
sbb
fcmovnu
mov
jo
aaa
cli
pop
cs
ljmp
jmp
cmp
dec
push
or
cmpl
movsl
pop
add
push
cli
push
push
jne
pop
xchg
loope
adc
fwait
clc
out
mov
das
flds
push
or
push
out
push
xchg
and
xlat
cmp
cmp
or
lds
mov
cmc
test
pop
mov
mov
stos
or
pushf
loopne
push
mov
push
imul
and
jne
mov
int3
insl
cmpb
sub
push
scas
jg
push
sbb
jmp
jg
pop
stos
gs
sahf
mov
ljmp
and
cmp
or
imul
jge
lds
xor
add
mov
lahf
or
xchg
adc
mov
push
push
lods
xor
or
add
int3
sarl
mov
xchg
ja
xchg
push
mov
out
lock
and
adc
insb
cmp
jo
mov
mov
scas
movsb
pop
stos
outsl
ret
test
adc
mov
pop
pop
sub
imull
inc
mov
in
popf
sbb
call
ficomps
push
mov
out
jae
cmc
into
lret
lock
lret
fdivrp
xorb
fs
loop
push
cmpl
inc
sbb
jmp
mov
adc
dec
fwait
mov
sub
mov
xor
adc
pop
int
inc
cs
and
popa
ljmp
add
fwait
xchg
leave
cltd
aam
lods
cmp
cmp
cmp
jg
pop
jne
clc
cmpsl
adc
leave
xor
jae
jno
out
adc
popf
cmp
mov
js
fidivrs
push
jmp
imul
rclb
push
inc
add
xchg
mov
xor
sbb
push
add
jns
jnp
lret
pop
push
pop
addb
jecxz
pop
fucom
bound
xchg
loopne
pop
mov
mov
mov
mov
jns
divb
ds
outsb
fwait
xor
jl
popa
jle
adc
cli
out
xchg
nop
stc
sbb
mov
xchg
out
sbb
cmp
lcall
mov
mov
xchg
clc
loope
jg
std
mov
cmp
js
xor
cmp
add
adc
push
inc
sbb
ds
loopne
fs
mov
enter
jl
sub
adc
test
stc
jnp
aam
cmp
jne
or
sbb
mov
xchg
pop
int3
push
stc
repz
or
das
jle
sbb
xchg
dec
adc
ljmp
cmp
bound
negl
imul
mov
ret
scas
std
pop
rcll
mulb
subl
jo
fstpt
add
scas
das
mov
insl
mov
cmp
push
lock
push
push
mov
idivl
je
mov
sub
pop
imul
pop
insl
xor
sub
scas
in
cs
push
test
ljmp
or
mov
mov
out
divb
add
mov
adc
cmpsb
push
jecxz
movsb
ds
or
or
cli
inc
push
sbb
add
xor
fucomip
add
sub
mov
dec
cmp
test
dec
mov
or
in
cmpsb
sub
dec
jp
rorl
shrb
lds
sub
testl
cmp
xchg
mov
dec
sub
flds
aam
lock
fstp
xchg
es
cmc
movsb
dec
xchg
jp
xchg
add
cmpsb
cmp
repz
fcmovbe
hlt
adc
dec
stos
aaa
sub
in
lret
cmp
sar
ds
sub
xchg
outsl
mov
testl
insb
dec
das
and
aad
out
insb
test
adc
lret
cmp
rcr
cmpsl
cmp
cmp
aas
pop
in
in
pusha
mov
jno
loope
pop
and
gs
sub
int3
lods
ret
xorl
add
adc
dec
aad
dec
gs
out
sarl
inc
dec
ret
scas
push
adc
and
sbb
fcmovbe
gs
js
fisttpll
jl
sub
ja
mov
push
subl
subl
pop
jo
fiaddl
pop
rcll
and
and
js
mov
out
aaa
into
lds
xor
icebp
dec
les
das
pop
test
pop
xchg
push
roll
xchg
gs
enter
cmpsb
sbb
push
adc
mov
add
xchg
mov
in
shlb
push
dec
cmp
sti
insl
push
and
or
movsl
mov
xchg
inc
jne
add
xor
push
fsubs
mov
and
mov
cld
sarl
add
lcall
mov
or
repnz
pop
dec
mov
cmp
mov
jns
pop
mov
xchg
cli
xchg
mov
pop
add
cmc
xchg
ja
popa
insb
sbb
mov
jmp
cmp
pop
stos
out
ss
xor
subb
das
dec
mov
jecxz
stos
pop
pop
push
bndstx
pop
push
jb
popl
inc
jmp
incl
jnp
adc
sbb
xchg
add
xor
inc
cmpsb
loope
sub
add
cld
lds
in
push
pushf
push
decb
mov
test
int
mov
mov
rcr
inc
roll
iret
popa
in
mov
aad
add
out
js
inc
insb
aad
movsl
mov
and
pop
data16
cmp
rcrb
or
mov
test
jge
je
sahf
test
add
mov
mov
pop
les
xchg
ja
imul
fwait
xor
sub
adc
scas
adcl
fstpl
jnp
add
jecxz
fidivrs
cmp
xor
xchg
iret
sbb
add
icebp
mov
inc
xchg
mov
push
dec
adc
jne
cmpsl
ljmp
nop
and
lock
in
add
stc
js
imul
enter
push
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
testb
add
add
rolb
add
push
add
add
add
add
add
repz
add
add
addb
add
or
add
add
add
add
adc
or
add
add
add
sub
add
push
add
orb
add
add
mov
add
add
add
adcb
add
lock
adcb
add
add
adcb
add
push
add
add
add
add
add
add
add
sbbb
add
or
add
xor
add
pop
add
cmpb
add
addb
adcb
add
test
add
add
add
or
add
add
add
or
test
add
or
add
add
add
add
or
add
add
push
add
add
add
add
add
add
mov
add
add
add
add
add
mov
add
or
add
add
add
mov
add
or
add
add
add
or
ljmp
add
add
add
add
add
add
add
or
dec
add
add
add
add
add
add
add
test
or
adc
add
or
add
rorl
mov
add
or
add
ret
or
test
add
or
add
add
add
les
add
add
add
add
add
add
add
add
add
lds
add
add
or
add
add
add
or
insb
add
add
add
add
add
push
add
add
add
add
add
mov
push
add
or
add
in
add
add
add
add
add
add
add
or
cmp
add
add
add
dec
add
mov
add
sbb
pop
add
add
add
add
add
add
add
or
xor
adc
or
or
or
or
or
add
add
add
add
add
add
add
add
je
add
je
add
je
add
je
add
jne
add
jne
add
jne
add
or
push
jne
add
or
test
or
mov
or
mov
mov
add
pop
add
add
sbb
add
sbb
add
sbb
add
mov
add
add
cmp
add
mov
push
add
dec
add
add
gs
je
dec
popa
imul
inc
jb
popa
je
push
jb
je
arpl
outsl
arpl
inc
insb
insb
inc
popa
outsb
push
outsb
insb
outsl
popa
fs
outsl
ja
inc
insb
insb
inc
gs
insb
popa
jae
dec
bound
arpl
outsb
imul
je
dec
outsb
je
jb
popa
arpl
add
inc
jo
popa
insb
insb
push
popa
arpl
add
popa
inc
jo
popa
insb
insb
push
popa
arpl
addr16
popa
jae
je
jb
jne
push
inc
jo
popa
insb
insb
push
popa
arpl
addr16
outsb
je
jne
je
add
inc
jo
outsb
imul
push
popa
arpl
add
popa
inc
jo
outsl
outsl
outsb
push
gs
imul
dec
jae
inc
jo
outsl
outsl
outsb
push
jae
jb
dec
jae
inc
jo
outsl
outsl
outsb
push
jae
jb
js
push
gs
insb
dec
outsl
outsl
data16
popa
insb
dec
outsl
outsl
outsb
add
dec
outsb
imul
add
popa
jb
jne
add
sbb
add
insb
add
dec
xchg
add
add
add
mov
add
and
add
add
add
push
add
cmp
add
fiadds
add
and
add
jns
add
add
xor
add
push
cld
add
xor
add
aam
add
xor
add
mov
add
mov
add
sub
add
xor
add
add
add
add
add
cmp
add
pop
push
add
push
add
add
add
lods
jbe
add
or
loopne
or
add
add
pusha
jbe
add
add
add
lcall
or
imul
gs
xor
cs
insb
add
add
add
dec
outsl
popa
fs
imul
add
add
inc
gs
jb
arpl
fs
jae
add
add
add
push
imul
insb
insb
outsl
arpl
add
add
jb
jne
insb
inc
jb
add
mov
call
add
sub
rcl
das
pusha
push
inc
inc
outsl
insl
jo
arpl
add
sarb
xchg
ljmp
test
scas
out
out
shl
xchg
pop
jmp
adc
and
or
aad
adc
lahf
push
adc
add
xchg
cmp
flds
sarl
ss
or
cmpsl
mov
inc
rol
and
xchg
in
mov
lock
and
aad
insb
ret
sbb
mov
mov
jno
fstps
es
in
dec
xor
push
dec
push
xchg
adc
ss
add
fistpll
fcompp
adc
lcall
mov
pop
pop
enter
adc
mov
inc
sub
jecxz
pop
out
movsl
fldt
loop
mov
jae
in
dec
mov
dec
shlb
mov
xor
push
jp
or
dec
xor
sbb
ss
fldcw
xchg
and
push
push
aam
mov
or
inc
sub
xor
pop
jmp
imulb
or
scas
rcrb
xlat
or
inc
mov
fdivrp
add
xchg
scas
pop
rcrl
shrb
ds
rcl
mov
jmp
pop
and
sbbb
ret
mov
push
popf
lods
adc
sbb
push
aam
mov
enter
pop
and
inc
test
mov
pop
lds
scas
mov
pop
test
sub
enter
push
aad
sti
mov
cs
into
popa
dec
xchg
fiadds
arpl
mov
mov
dec
call
daa
fldenv
scas
roll
mov
sbb
adc
negl
push
leave
push
dec
push
xchg
mov
stc
rcrb
fnsave
cmp
inc
push
shr
add
into
fstpl
fidivs
pop
sbb
dec
or
push
mov
add
push
shlb
push
ljmp
sbb
or
lea
dec
aad
jnp
cwtl
push
cld
ss
jmp
push
xchg
sbb
push
test
cmp
shrb
pop
mov
lock
jle
scas
fpatan
jmp
dec
xchg
stos
flds
push
xchg
rcll
and
pop
fstl
lret
push
and
pop
sbb
xor
mov
repz
pop
icebp
sbb
mov
pop
mov
cld
rcrl
push
xchg
iret
inc
jae
mov
xor
pusha
dec
add
ds
call
push
scas
mov
lods
scas
mov
add
rclb
rcrl
imul
cmp
or
lret
lret
adc
sahf
push
and
hlt
sarb
jp
jmp
mov
shr
and
xor
call
or
lret
outsl
mov
stos
cld
rcrl
ficomps
push
mov
repnz
mov
mov
pop
adc
shr
fwait
lret
in
test
push
mov
and
clc
sub
push
in
arpl
inc
iret
into
dec
pop
js
out
cltd
lcall
add
outsl
loope
mov
sbb
in
pushf
cmp
loopne
push
adc
and
bound
inc
and
ret
pop
mov
sub
fistps
mov
sub
push
inc
jecxz
fsub
push
popa
outsl
mov
decb
enter
dec
dec
dec
int3
mov
iret
or
incb
inc
shrb
lcall
push
or
sub
in
and
fcmovnu
leave
adc
idivb
aad
and
and
data16
cltd
enter
movsb
loope
or
flds
jecxz
stos
test
rep
rclb
scas
or
push
sets
fimuls
movl
popf
outsb
shr
cmpsl
xor
xchg
pop
lret
iret
ds
arpl
xor
enter
cwtl
ud2
nop
mov
cmp
aad
mov
cmpsl
inc
cltd
push
pop
cld
scas
call
into
stos
fldt
fdiv
adc
adc
call
sbb
fwait
xchg
pop
pop
js
in
scas
xor
aad
sbb
and
test
data16
pop
mov
shlb
pushf
fimuls
sub
test
fistps
sub
add
adc
adcb
cmp
dec
adc
fiaddl
fimuls
lea
fidivrl
push
fcoml
imul
sbb
mov
arpl
pop
test
pop
xlat
mov
xchg
pop
fwait
pop
lea
sbb
rorb
push
mov
pop
mov
popf
ror
enter
icebp
mov
hlt
push
gs
sub
cli
adc
call
jmp
mov
dec
aad
pop
sar
sub
test
stos
inc
ljmp
pop
cmp
adc
push
shl
mov
ret
sar
orb
imul
mov
push
out
loop
xchg
mov
fldt
fdivs
cmp
sbb
xor
repnz
sub
aaa
xchg
leave
push
push
ljmp
fstpl
fdivp
sub
pop
ret
mov
cmc
vzeroupper
jno
fmuls
pop
mov
test
sub
aam
stc
pop
mov
mov
jle
adc
fcomi
shlb
and
xor
push
xchg
notb
icebp
push
xchg
mov
inc
les
in
sti
push
pop
std
pop
xlat
mov
sub
int3
test
addr16
dec
sbb
repnz
inc
xchg
fsubr
pop
adc
pop
push
dec
pop
push
sbb
loopne
popf
fcompl
mov
mov
rclb
mov
xlat
sahf
scas
jae
loopne
xor
sub
scas
cmp
inc
jmp
aam
lds
push
xchg
sar
rcrb
inc
fwait
push
mov
in
sbb
xlat
mov
lret
sti
sbb
jmp
shlb
mov
mov
add
dec
scas
cld
cltd
jg
xchg
lcall
int3
xor
push
or
sar
repz
fildl
lea
xchg
in
dec
xchg
js,pt
sahf
aad
jl
or
pushf
fstps
sbbl
xchg
popa
xor
cli
sbbl
cmp
pop
aam
adc
xchg
cwtl
push
mov
movsb
aam
or
fsubrs
or
mov
in
ljmp
rcrl
fidivs
ds
xorb
scas
pop
jne
stos
les
and
sbb
inc
mov
loope
scas
andl
xchg
loop
aad
fldcw
clc
or
add
ljmp
jbe
mov
sub
sti
cmpl
xchg
and
lods
mov
lret
add
les
les
push
and
and
xchg
inc
and
sbb
mov
loopne
xchg
scas
push
push
dec
or
insl
nop
lods
fwait
test
mov
scas
xor
sbb
shlb
jge,pn
fisttps
fstpt
xor
mov
jecxz
adc
push
shll
ljmp
pop
movsb
aad
pushf
loop
jae
fsub
scas
cmpsl
push
sahf
dec
mov
mov
ds
sub
loope
hlt
cmpsl
out
push
ficompl
enter
aad
scas
jp
adc
scas
mov
push
push
sbb
cld
pop
push
les
fcmovnbe
addr16
cmp
adc
test
scas
out
loope
lock
jno
sub
int
mov
mov
jecxz
test
pop
lds
fdivrs
xor
dec
mov
sbb
out
cmp
cmp
movsb
and
inc
mov
pop
repnz
aaa
imul
xchg
cmp
repnz
rclb
and
push
and
imulb
jg
aad
cmp
mov
jle
sub
jnp
jno
adc
jo
adcb
call
iret
scas
js
jb
pop
mov
inc
inc
popf
fcom
sub
mov
ret
push
or
rclb
gs
mov
in
push
sub
cmpsb
fcompp
pop
outsb
ret
popa
or
std
xchg
rorb
xchg
adc
mov
daa
inc
fdivl
dec
or
into
lcall
enter
iret
in
push
and
cld
adc
loope
and
lret
push
add
cmpsb
lcall
cmc
push
cmp
xchg
loop
sub
dec
shll
negl
push
inc
or
xchg
pop
jecxz
xchg
fsubrl
or
inc
adc
movsb
lret
sti
mov
mov
lcall
cmp
jae
xchg
xor
test
mov
sbb
push
pop
or
or
lret
sub
push
push
dec
xor
fdivl
sbbl
ljmp
mov
ficoms
lret
pop
into
pop
or
xchg
sub
sub
cmp
sahf
mov
rcll
xor
push
flds
and
mov
cld
xorb
aam
xchg
fdivrs
jbe
inc
out
inc
mov
pop
lahf
lea
ljmp
repz
xchg
pop
mov
ja
mov
dec
mov
dec
rcl
jne
fstps
into
fistl
fcmovnb
pop
sbb
xorb
jecxz
inc
mov
mov
and
ficoml
jb
sub
divb
push
sub
les
push
pop
mov
clc
adc
xchg
jmp
xor
mov
mov
mov
cli
mov
xchg
enter
test
mov
mov
into
pushl
inc
xchg
and
in
sub
mov
xchg
loopne
leave
out
jmp
mov
cli
or
data16
mov
test
cmp
mov
mov
push
push
mov
add
jecxz
mov
lahf
mov
jle
xchg
fcompl
mov
fsts
sbb
push
mov
mov
mov
mov
scas
xor
fwait
push
out
xchg
and
jae
inc
dec
rcrl
push
lea
or
cmp
xor
mov
adc
out
jg
pop
icebp
fidivrl
push
cmpsb
repnz
imul
fisubrl
mov
jmp
fcmovu
test
push
xor
sbb
xor
xor
adc
fcmovu
xor
jbe
xor
dec
xchg
sbb
shlb
neg
fcmovu
out
cmpsl
fcmovu
test
test
lods
fcomps
imul
sub
jle
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
sub
mov
popa
ret
add
or
pushf
push
add
mov
orb
push
jbe
add
add
adc
or
fs
add
lea
mov
mov
mov
movb
add
sub
mov
xor
ret
mov
popl
add
push
push
push
push
push
push
lea
mov
push
mov
push
push
pushl
push
mov
add
mov
call
pop
mov
push
push
mov
mov
add
mov
mov
mov
add
mov
mov
add
mov
add
lea
push
push
push
call
pop
pop
add
mov
push
mov
mov
add
sub
mov
mov
mov
call
mov
mov
mov
pop
jmp
add
push
push
push
call
mov
pop
pop
pop
pop
pop
pop
jmp
add
add
add
lock
add
add
sbb
sub
add
add
and
outsb
setl
inc
pop
jmp
xor
shlb
int3
adc
div
fs
xchg
shr
out
into
out
cld
test
or
add
addl
jle
sub
mov
pusha
pushfw
push
call
xlat
xchg
lea
add
sub
xchg
sub
sub
add
add
sub
pop
xorl
sub
add
xchg
xchg
push
mov
mov
xor
pop
dec
inc
add
xorl
xorb
xorl
xorl
pop
popfw
jmp
jmp
stc
jmp
ds
in
mov
mov
test
xor
imul
stos
or
push
and
fstps
fwait
cmp
aad
jbe
in
add
push
dec
dec
outsl
jl
pop
mov
cwtl
jmp
icebp
push
inc
sub
scas
dec
fsub
mov
inc
je
adc
loopne
pop
aas
or
push
clc
shll
aaa
jmp
movsb
or
push
das
cmp
jmp
sbb
inc
out
mull
aam
jb
inc
jmp
jns
pop
insb
xor
xchg
pop
add
and
pushf
movsl
jp
jmp
mov
inc
pop
xor
shlb
jmp
int3
adc
div
jmp
fs
xchg
ror
into
out
cld
test
or
add
addl
jle
sub
mov
sbb
shlb
call
xlat
les
xchg
push
mov
xchg
pop
sub
add
lea
jmp
aad
fstpt
mov
push
mov
mov
mov
xor
jmp
test
cmpsw
push
std
repnz
pop
dec
inc
lea
lea
sub
sub
pop
xorl
add
add
sub
sub
sub
sub
add
xor
sub
add
xorl
xorb
xorl
xorl
pop
popfw
jmp
jmp
fwait
jmp
cmp
jbe
in
add
push
dec
dec
outsl
jl
pop
mov
es
mov
cmpb
jnp
icebp
jmp
push
inc
sub
scas
dec
fsub
mov
jmp
or
inc
push
push
clc
shll
aaa
movsb
or
push
das
cmp
sbb
inc
out
aam
jb
inc
jns
pop
insb
xor
xchg
pop
add
jmp
and
jmp
pushf
movsl
jp
mov
inc
pop
xor
shlb
push
dec
jmp
adc
div
fs
xchg
ror
into
out
cld
test
or
jmp
add
sub
xor
sub
mov
sbb
xlat
les
xor
cmp
dec
loope
hlt
sbb
fidivrs
pushf
push
call
fstpt
mov
and
inc
push
jmp
scas
mov
shll
add
add
inc
dec
push
mov
sub
pop
lea
pop
xorl
lea
dec
sub
xorl
xorb
xorl
xorl
pop
popfw
jmp
jmp
fldpi
ds
jg
xchg
stos
fwait
cmp
jbe
in
add
push
dec
dec
outsl
jl
pop
mov
es
mov
cmpb
jnp
icebp
push
inc
jmp
sub
scas
jmp
dec
fsub
mov
inc
jmp
je
jmp
adc
loopne
pop
aas
or
push
clc
shll
aaa
movsb
or
push
das
cmp
sbb
inc
out
aam
jb
fcmovnb
inc
jns
pop
insb
xor
pop
mov
jmp
pop
add
and
pushf
movsl
jp
mov
inc
pop
xor
shlb
test
jmp
sbb
int
xchg
ror
into
out
cld
test
or
add
addl
jmp
jle
sub
mov
sbb
xlat
les
cs
pop
jmp
gs
dec
loope
hlt
sbb
fidivrs
js
jne
pushfw
push
call
and
inc
push
nop
mov
add
add
das
jp
sub
pop
xorl
push
xchg
mov
add
add
add
sub
pop
xorl
xorb
xorl
xorl
pop
popfw
jmp
jmp
mov
mov
push
and
fstps
fwait
cmp
jbe
in
add
push
dec
dec
outsl
jl
pop
mov
es
jmp
mov
sub
mov
or
icebp
push
inc
jmp
sub
jmp
scas
dec
fsub
mov
inc
je
adc
loopne
pop
aas
or
push
clc
shll
aaa
jmp
movsb
jmp
or
push
das
cmp
sbb
inc
out
aam
jmp
jb
inc
jns
pop
insb
xor
xchg
pop
add
and
mov
jmp
sub
pop
xor
shlb
int3
adc
div
fs
xchg
ror
into
out
cld
test
or
add
addl
aad
jle
sub
mov
sbb
xlat
les
cs
test
jmp
jmp
loope
cmp
hlt
sbb
fidivrs
js
mov
and
inc
push
nop
mov
lret
test
cmpsw
push
std
repnz
shr
stc
ds
in
mov
mov
test
xor
imul
add
push
call
sbb
cli
stos
lea
lea
lea
lea
add
sub
lea
push
xchg
add
add
pop
pop
xorl
xchg
sub
add
lea
lea
lea
add
add
xorl
xorb
xorl
xorl
pop
popfw
jmp
jmp
sub
mov
scas
dec
fsub
mov
inc
je
adc
loopne
pop
aas
or
push
clc
shll
aaa
movsb
or
push
das
cmp
sbb
shrb
jmp
inc
out
aam
jb
inc
jns
pop
insb
xor
xchg
pop
jmp
add
and
pushf
movsl
jp
mov
inc
pop
xor
shlb
int3
adc
push
call
xchg
push
mov
jmp
leave
into
out
lea
xchg
xchg
xchg
pop
xchg
xchg
sub
sub
sub
lea
xchg
push
mov
pop
sub
sub
add
sub
push
xchg
jmp
xchg
arpl
fidivrs
icebp
add
add
xchg
lea
pop
sub
add
xchg
pop
xorl
push
jmp
test
cmpsw
push
std
repnz
lea
add
add
pop
add
inc
push
sub
lea
add
mov
pop
xorl
xorb
xorl
xorl
pop
popfw
jmp
jmp
jmp
xchg
sahf
jg
xchg
stos
fwait
cmp
jbe
in
add
push
dec
dec
outsl
jmp
jl
jmp
pop
mov
es
mov
cmpb
jne
jnp
icebp
push
inc
sub
scas
dec
fsub
mov
inc
je
adc
pop
jmp
aas
or
push
clc
shll
aaa
movsb
or
push
das
cmp
sbb
inc
out
aam
jb
inc
jns
pop
insb
xor
xchg
pop
add
shr
and
pushf
movsl
jp
mov
inc
pop
xor
shlb
pushf
push
call
adc
testb
test
sub
sub
sub
sub
pop
xorl
lea
push
add
add
add
pop
xor
xorl
xorb
xorl
xorl
pop
popfw
jmp
jmp
loop
xor
pop
gs
dec
loope
hlt
sbb
fidivrs
js
mov
and
inc
push
nop
mov
lret
test
data16
cmpsl
push
std
jmp
repnz
sar
lahf
in
mov
mov
push
xchg
test
xor
imul
stos
or
push
and
fstps
data16
jmp
cmp
cmp
jbe
in
add
push
dec
dec
outsl
jl
pop
mov
es
mov
cmpb
jnp
icebp
push
inc
sub
aam
scas
dec
fsub
mov
inc
je
adc
mov
jmp
pop
jmp
clc
shll
aaa
movsb
or
push
das
cmp
sbb
inc
out
aam
jb
inc
jns
pop
insb
xor
xchg
pop
add
and
pushf
jmp
jmp
movsl
jp
mov
inc
pop
xor
shlb
int3
adc
div
fs
jecxz
xchg
ror
into
jmp
out
cld
test
or
add
sub
add
jle
sub
mov
sbb
xlat
les
cs
pop
gs
dec
loope
hlt
sbb
pushfw
push
call
mov
js
xchg
jmp
nop
mov
pop
rolb
rolb
in
sub
sub
add
sub
add
xchg
push
add
add
add
sub
pop
sub
sub
push
mov
mov
lea
xchg
pop
push
xchg
pop
push
mov
add
lea
lea
pop
push
lea
xchg
add
add
xchg
pop
push
xchg
add
xchg
pop
sub
inc
push
add
mov
mov
lea
pop
push
mov
mov
lea
lea
pop
dec
add
lea
add
push
xchg
mov
pop
jmp
aaa
xchg
add
add
add
jmp
sub
lea
pop
xorl
xchg
push
lea
add
pop
inc
sub
lea
add
add
xorl
xorb
xorl
xorl
pop
popfw
jmp
pushfw
push
call
setl
inc
pop
push
jmp
pop
push
decl
incl
insl
add
mov
add
add
cmc
test
fildl
add
add
sub
push
lea
mov
mov
pop
add
sub
sub
dec
add
add
sub
add
push
mov
xchg
mov
xchg
jmp
xchg
arpl
fsubrp
add
mov
add
add
add
add
decl
incl
mov
add
add
aam
pop
popfw
jmp
jmp
lret
test
cmpsw
push
std
repnz
sar
cs
in
mov
mov
test
xor
imul
stos
or
push
and
fisubs
fstps
xchg
stos
fwait
cmp
jbe
jmp
jmp
in
add
push
dec
dec
outsl
jl
pop
mov
es
mov
cmpb
jnp
icebp
push
inc
jmp
sub
scas
dec
fsub
mov
inc
add
pushfw
push
call
adc
loopne
pop
aas
xchg
dec
add
lea
jmp
or
das
xchg
push
add
add
sub
mov
pop
xchg
lea
lea
push
lea
mov
sub
sub
sub
sub
pop
jmp
xor
shlb
xchg
jmp
div
fs
pop
add
sub
push
xchg
xchg
pop
lea
sub
sub
push
add
pop
pop
xorl
add
inc
lea
sub
add
xor
lea
xorl
xorb
xorl
xorl
pop
popfw
jmp
jmp
xchg
jmp
arpl
fidivrs
js
mov
and
inc
push
nop
mov
lret
test
cmpsw
push
std
repnz
sar
jmp
lahf
in
mov
mov
push
xchg
test
xor
hlt
lock
stos
or
push
and
fstps
xchg
stos
fwait
cmp
clc
adc
in
jmp
add
push
dec
dec
outsl
jl
pop
mov
es
mov
cmpb
jnp
icebp
push
jmp
inc
sub
scas
dec
fsub
mov
jbe
pushfw
push
call
je
adc
sub
jmp
push
push
lea
sub
sub
sub
add
inc
add
jmp
sub
mov
jmp
add
add
xchg
push
mov
add
jmp
xchg
pop
add
and
jmp
pop
lea
lea
push
lea
pop
pop
xorl
lea
xorl
xorb
xorl
xorl
pop
popfw
jmp
pushfw
push
call
sbb
int
add
add
xchg
sub
dec
xchg
add
sub
xchg
lea
pop
xorl
add
add
sub
add
push
jmp
cs
pop
mov
xchg
pop
sub
add
xchg
sub
add
lea
push
xor
xchg
lea
add
jmp
push
nop
mov
lret
pop
xorl
xorb
xorl
xorl
pop
popfw
jmp
pushfw
push
call
cmpsw
push
std
repnz
xchg
push
add
add
pop
jmp
mov
push
mov
mov
pop
sub
sub
pop
xorl
xchg
jmp
jg
xchg
stos
fwait
cmp
jbe
xorl
xorb
xorl
xorl
pop
popfw
jmp
pushfw
push
call
add
push
dec
dec
sub
sub
lea
jmp
adc
mov
sbbb
sbb
add
sbb
add
dec
sub
xchg
push
xchg
lea
add
pop
sub
add
add
push
add
mov
pop
xchg
sub
add
xorl
xorb
xorl
xorl
pop
popfw
jmp
pushfw
push
call
push
ror
ss
push
add
xchg
xchg
xor
add
xchg
pop
jmp
aam
jb
inc
jns
pop
insb
xor
lea
sub
sub
xor
pop
xorl
push
mov
pop
xchg
sub
sub
xorl
xorb
xorl
xorl
pop
popfw
jmp
pushfw
push
call
pop
push
dec
adc
sub
sub
jmp
leave
into
out
cld
test
and
add
add
add
sub
pop
xorl
lea
dec
add
jmp
loop
adc
xchg
add
xorl
xorb
xorl
xorl
pop
popfw
jmp
pushfw
push
call
pusha
sbb
push
xor
xchg
pop
lea
xchg
sub
xor
xchg
pop
xorl
add
add
add
sub
xorl
xorb
xorl
xorl
pop
popfw
jmp
jmp
mov
push
xchg
test
xor
imul
stos
or
push
and
fstps
fwait
cmp
jbe
in
add
xlat
adc
dec
outsl
jl
pop
mov
es
addr16
mov
jmp
cmpb
jnp
icebp
push
inc
sub
scas
dec
fsub
mov
inc
je
adc
loopne
pop
aas
or
push
clc
xor
jmp
cmp
sbb
inc
out
cs
aam
jb
inc
jns
pop
insb
xor
xchg
pop
add
and
pushf
movsl
jp
mov
fisubs
jmp
inc
pop
xor
shlb
int3
jmp
adc
sub
int
xchg
ror
into
out
cld
test
or
add
addl
jle
sub
jmp
mov
sbb
jmp
xlat
les
jmp
cs
pop
gs
dec
loope
hlt
sbb
fidivrs
js
mov
and
inc
push
nop
mov
lret
movsbl
pushfw
push
call
cmpsw
push
std
repnz
push
add
mov
mov
sub
pop
lea
pop
xorl
push
xchg
jmp
cli
stos
or
incl
adc
add
add
decl
decl
mov
add
add
add
pop
popfw
jmp
jmp
jg
cmp
fwait
cmp
jbe
in
add
push
dec
dec
outsl
jl
pop
mov
es
mov
cmpb
jnp
icebp
jmp
push
inc
jmp
sub
scas
dec
fsub
mov
out
xchg
popf
adc
loopne
pop
aas
or
push
clc
shll
aaa
movsb
or
push
das
cmp
sbb
je
pushfw
push
call
daa
aam
jb
inc
jns
sub
sub
add
sub
xchg
push
sub
sub
sub
sub
pop
xchg
push
jmp
pop
xchg
mov
pop
sub
dec
pop
xorl
add
xchg
sub
add
xchg
xorl
xorb
xorl
xorl
pop
popfw
jmp
pushfw
push
call
add
orl
mov
add
lea
sub
sub
jmp
test
cmp
dec
loope
ljmp
xchg
push
xor
pop
pop
xorl
jmp
and
inc
push
nop
mov
add
add
inc
xor
xorl
xorb
xorl
xorl
pop
popfw
jmp
jmp
fdivs
push
xchg
test
cmp
xor
imul
stos
or
push
and
fstps
fwait
cmp
jbe
in
add
push
dec
dec
jmp
outsl
jmp
jl
pop
mov
es
mov
cmpb
jne
jmp
jnp
icebp
push
inc
sub
scas
dec
fsub
mov
inc
jmp
je
adc
loopne
pop
aas
or
push
clc
shll
aaa
movsb
or
push
das
inc
jmp
jns
pop
insb
xor
pop
mov
pop
add
and
pushf
movsl
jp
mov
inc
pop
xor
shlb
int3
jmp
adc
div
fs
int
xchg
ror
jmp
into
out
cld
test
or
xor
add
addl
jle
sub
mov
sbb
xlat
les
cs
pop
gs
dec
jmp
loope
hlt
sbb
fidivrs
jmp
jmp
push
nop
mov
lret
test
jmp
cmpsw
push
std
repnz
sar
lahf
in
mov
mov
test
xor
imul
stos
or
push
and
jmp
fstps
fwait
cmp
jbe
jmp
in
add
jmp
push
dec
dec
outsl
jl
pop
mov
es
mov
sub
mov
or
icebp
push
inc
sub
scas
dec
fsub
mov
jmp
loopne
inc
cltd
pop
aas
or
push
clc
shll
aaa
movsb
or
push
das
cmp
sbb
inc
out
aam
jb
inc
jns
pop
insb
xor
xchg
pop
add
jmp
and
outsb
setl
inc
pop
xor
shr
out
mov
int3
adc
div
fs
xchg
ror
into
out
cld
test
or
add
sub
sbb
xlat
les
cs
pop
gs
dec
loope
hlt
sbb
fidivrs
js
mov
and
inc
push
nop
jmp
mov
das
lcall
std
repnz
sar
lahf
in
mov
in
dec
mov
test
sub
xor
imul
stos
or
push
and
jmp
fstps
fwait
cmp
jmp
jbe
in
add
push
dec
dec
outsl
jmp
jl
pop
mov
es
mov
cmpb
jnp
icebp
push
inc
sub
scas
dec
fsub
mov
jmp
push
call
popa
jmp
popf
adc
loopne
pop
aas
push
mov
mov
xchg
sub
add
mov
pop
xor
add
inc
xor
xchg
sub
sub
push
add
xchg
pop
jmp
in
pop
xorl
add
sub
dec
sub
xorl
xorb
xorl
xorl
pop
popfw
jmp
jmp
pop
jmp
shlb
int3
adc
div
fs
xchg
ror
into
out
cld
test
or
add
addl
jle
sub
mov
sar
sbb
sub
xlat
les
cs
pop
gs
dec
loope
jmp
hlt
sbb
fidivrs
js
jmp
mov
and
inc
jmp
push
nop
mov
lret
test
cmpsw
push
std
repnz
sar
lahf
in
mov
mov
mov
pushfw
push
call
xor
imul
clc
push
test
jmp
stos
jp
add
add
pop
xorl
push
xchg
mov
lea
pop
xchg
jmp
dec
add
push
dec
xorl
xorb
xorl
xorl
pop
popfw
jmp
jmp
mov
cmpb
jne
jnp
icebp
push
inc
sub
scas
dec
fsub
mov
inc
je
adc
loopne
pop
aas
jmp
jmp
or
push
clc
shll
aaa
movsb
or
adc
push
jmp
das
cmp
sbb
inc
out
aam
jb
inc
jns
pop
insb
xor
xchg
jmp
pop
jmp
add
and
pushf
movsl
jp
mov
inc
pop
jmp
xor
shlb
int3
adc
div
fs
jmp
ror
into
out
cld
jmp
test
or
add
addl
jle
sub
mov
sbb
xlat
les
cs
pop
gs
dec
jmp
loope
hlt
sbb
fidivrs
js
mov
pushfw
push
call
and
inc
push
mov
xor
jmp
test
data16
push
std
repnz
lea
pop
dec
sub
push
add
add
sub
pop
push
mov
mov
mov
mov
lea
pop
jmp
fisttpll
lea
lea
lea
pop
add
add
lea
pop
xorl
jmp
add
shll
jmp
and
lcall
add
add
mov
decl
dec
push
call
add
add
add
pop
popfw
jmp
jmp
add
jne
jnp
xor
sub
repz
imul
xchg
popf
adc
loopne
pop
aas
or
push
clc
shll
aaa
movsb
or
push
das
cmp
add
jmp
daa
aam
jb
inc
jns
sub
cmp
xchg
pop
add
and
jmp
pushf
movsl
jp
mov
inc
pop
xor
xor
mov
int3
adc
mov
int
xchg
ror
into
out
cld
test
or
add
addl
jle
sub
mov
sbb
mov
jmp
iret
pop
gs
dec
loope
cmp
hlt
sbb
fidivrs
js
mov
and
inc
push
nop
mov
lret
test
cmpsw
push
std
repnz
jmp
sar
jmp
lahf
in
mov
mov
test
xor
out
lock
and
movb
fstps
fwait
cmp
jbe
in
add
fists
push
dec
dec
outsl
jl
pop
mov
es
add
jmp
icebp
push
inc
sub
mov
scas
dec
fsub
mov
inc
je
adc
loopne
pop
aas
or
push
clc
shll
aaa
movsb
or
push
das
cmp
sbb
aam
jmp
sub
daa
aam
jb
inc
jns
pop
insb
xor
xchg
jmp
jmp
pop
add
and
pushf
movsl
jp
mov
inc
pop
xor
shlb
push
dec
adc
imul
sub
fs
xchg
jmp
ror
into
out
cld
test
or
add
addl
jle
sub
mov
sbb
xlat
les
cs
pushfw
push
call
gs
dec
loope
ret
push
sub
jmp
pusha
add
sub
push
xor
xchg
pop
sub
sub
lea
pop
xorl
lea
add
add
xorl
xorb
xorl
xorl
pop
popfw
jmp
pushfw
push
call
shll
std
repnz
inc
dec
xchg
jmp
xchg
sub
sub
add
xchg
sub
add
inc
sub
add
add
lea
xchg
push
lea
lea
mov
pop
xchg
xchg
pop
xorl
jmp
pop
mov
es
xchg
sub
sub
xchg
xorl
xorb
xorl
xorl
pop
popfw
jmp
pushfw
push
call
cwtl
icebp
push
inc
sub
in
lea
push
xchg
pop
lea
xor
pop
xorl
xchg
add
sub
xorl
xorb
xorl
xorl
pop
popfw
jmp
pushfw
push
call
movsb
or
push
das
jmp
dec
xor
lea
sub
sub
pop
xorl
push
mov
add
jmp
xchg
pop
add
enter
or
mov
add
add
add
add
decl
mov
mov
add
add
add
pop
popfw
jmp
pushfw
push
call
movsl
jp
mov
inc
pop
xor
sub
sub
add
sub
sub
sub
lea
jmp
xchg
lea
xchg
add
inc
sub
sub
lea
add
add
add
sub
lea
jmp
push
xlat
les
arpl
add
aam
add
sub
sub
sub
sub
xchg
sub
sub
lea
xor
xorl
xorb
xorl
xorl
pop
popfw
jmp
jmp
push
mov
and
inc
push
nop
mov
inc
lcall
std
repnz
sar
lahf
in
mov
mov
test
xor
imul
and
sub
push
and
cmc
and
sahf
jg
xchg
stos
fwait
cmp
jbe
in
add
push
dec
dec
outsl
jl
pop
mov
es
mov
addb
push
inc
sub
mov
scas
dec
fsub
mov
inc
je
adc
loopne
pop
aas
or
push
clc
shll
aaa
movsb
or
push
das
jmp
cmp
and
inc
out
aam
jb
inc
jns
jmp
pop
insb
xor
xchg
pop
add
jmp
and
pushf
movsl
jmp
jp
mov
inc
pop
xor
shr
sub
int3
adc
div
fs
xchg
ror
into
out
cld
test
or
jmp
add
addl
jle
sub
mov
shr
and
test
cmp
dec
loope
daa
push
hlt
sbb
fidivrs
js
mov
and
inc
push
jmp
jmp
nop
mov
lret
test
cmpsw
push
jmp
std
repnz
sar
lahf
in
mov
mov
test
xor
imul
stos
or
sub
fstl
and
sahf
jg
xchg
jmp
stos
fwait
cmp
jbe
in
add
push
dec
dec
outsl
jl
pop
mov
es
mov
jecxz
cmpb
jnp
icebp
push
inc
sub
cpuid
pushfw
push
call
fsub
mov
inc
je
and
push
mov
pop
lea
pop
xorl
sub
sub
add
add
xorl
xorb
xorl
xorl
pop
popfw
jmp
jmp
sub
and
daa
aam
jb
inc
jns
pop
jmp
insb
xor
xchg
pop
add
and
sub
pushf
movsl
jp
mov
repnz
xor
shlb
int3
adc
div
fs
xchg
ror
into
out
cld
test
test
fildll
push
xlat
les
cs
pop
gs
dec
loope
hlt
sbb
fidivrs
ljmp
lea
repz
nop
mov
xor
lret
test
cmpsw
push
std
repnz
sar
lahf
in
mov
mov
test
xor
imul
jmp
and
movb
and
fstps
fwait
cmp
jbe
in
add
push
dec
dec
outsl
jl
pop
mov
es
mov
cli
add
add
sub
ds
sub
scas
dec
fsub
mov
inc
je
adc
loopne
pop
aas
or
push
clc
shll
aaa
movsb
or
push
jmp
das
cmp
sbb
inc
out
sub
aam
jb
inc
jns
pop
insb
xor
lret
mov
pop
add
and
pushf
movsl
jp
mov
inc
pop
xor
shlb
int3
adc
div
fs
xchg
ror
jne
pushfw
push
call
cld
test
or
add
out
jmp
ret
sub
lea
dec
sub
sub
add
add
add
pop
xorl
add
add
dec
inc
xchg
dec
add
sub
sub
add
add
lea
xorl
xorb
xorl
xorl
pop
popfw
jmp
pushfw
push
call
fstpt
or
pop
pop
xorl
add
add
push
xchg
lea
lea
lea
add
add
pop
sub
dec
jmp
test
xor
inc
dec
xor
dec
add
xorl
xorb
xorl
xorl
pop
popfw
jmp
pushfw
push
call
and
fstps
lea
push
lea
xchg
add
add
xchg
xor
pop
add
sub
xchg
lea
xchg
pop
xorl
lea
push
lea
add
xor
lea
sub
pop
push
add
mov
lea
pop
xorl
xorb
xorl
xorl
pop
popfw
jmp
pushfw
push
call
aas
xchg
sub
sub
sub
sub
push
xchg
pop
push
lea
xchg
add
add
sub
mov
pop
xchg
jmp
cmp
xor
xchg
sub
inc
push
mov
mov
sub
xchg
lea
jmp
push
dec
adc
add
sub
add
sub
xor
lea
push
lea
mov
mov
add
pop
xchg
lea
sub
sub
pop
xorl
lea
xorl
xorb
xorl
xorl
pop
popfw
jmp
jmp
pop
jmp
gs
dec
loope
hlt
sbb
fidivrs
js
mov
and
inc
push
nop
mov
lret
test
cmpsw
push
std
repnz
shr
stc
ds
in
mov
mov
test
xor
imul
stos
or
add
push
call
mov
push
and
pop
sub
xor
push
mov
sub
xchg
pop
push
xchg
add
lea
pop
sub
sub
add
sub
lea
lea
sub
xor
sub
add
lea
pop
xorl
xchg
sub
sub
xorl
xorb
xorl
xorl
pop
popfw
jmp
jmp
adc
loopne
pop
aas
or
push
clc
jmp
shll
aaa
movsb
or
push
das
cmp
sbb
inc
out
aam
jb
inc
jns
pop
insb
xor
xchg
jmp
pop
add
and
pushf
movsl
jp
mov
xorb
jmp
pop
shlb
int3
adc
div
fs
xchg
ror
into
out
cld
test
or
add
addl
jmp
jle
sub
mov
idiv
sbb
xlat
les
cs
pop
gs
dec
loope
hlt
sbb
fidivrs
js
mov
and
inc
push
inc
jmp
scas
jmp
mov
shll
std
repnz
sar
lahf
in
mov
mov
test
xor
imul
stos
or
push
and
jmp
fstps
fwait
cmp
jbe
in
add
push
dec
dec
outsl
jl
pop
mov
es
jmp
lods
jne
jmp
jnp
icebp
push
inc
sub
scas
dec
fsub
jmp
mov
inc
je
adc
loopne
pop
jmp
aas
or
push
clc
shll
jmp
aaa
movsb
or
adc
push
das
cmp
sbb
inc
out
aam
jb
inc
jns
pop
insb
xor
pop
mov
pop
add
and
pushf
movsl
jp
mov
inc
jne
pushfw
push
call
pop
shlb
incl
push
mov
mov
mov
lea
pop
add
sub
add
sub
xchg
jmp
cmp
sub
jmp
sbb
xlat
les
shll
rorb
add
add
lea
pop
xorl
xchg
push
xchg
lea
pop
jmp
inc
xorl
xorb
xorl
xorl
pop
popfw
jmp
jmp
shll
std
repnz
jmp
sar
lahf
in
mov
mov
test
xor
imul
stos
or
push
and
fstps
stos
fwait
cmp
adc
in
add
push
dec
dec
outsl
jmp
jl
pop
mov
and
andl
add
jne
jnp
icebp
jmp
push
inc
sub
mov
scas
dec
fsub
mov
popa
xchg
popf
adc
loopne
pop
aas
or
push
clc
shll
aaa
movsb
or
push
das
cmp
sbb
das
ret
inc
jns
pop
insb
xor
pop
mov
pop
add
and
pushf
movsl
jp
mov
inc
pop
xor
shlb
int3
adc
div
jmp
fs
xchg
ror
into
jmp
out
cld
test
or
add
icebp
xor
jmp
sub
mov
sbb
xlat
les
cs
pop
gs
dec
loope
hlt
sbb
pusha
sbb
mov
js
mov
and
inc
push
mov
jmp
inc
lcall
std
repnz
sar
xor
lahf
in
mov
mov
test
xor
imul
stos
or
push
jmp
and
fstps
fwait
cmp
jbe
in
add
movb
jmp
push
mov
jmp
pop
lods
jne
jnp
icebp
push
inc
sub
scas
dec
fsub
mov
inc
je
adc
loopne
pop
aas
jmp
or
push
clc
shll
aaa
movsb
or
movl
jmp
dec
sub
daa
jmp
aam
jb
inc
jns
jmp
jmp
pop
insb
xor
xchg
pop
add
and
pushf
movsl
jp
mov
inc
pop
xor
shlb
int3
adc
mov
int
xchg
ror
into
out
cld
test
or
movl
jmp
jle
sub
mov
sbb
jmp
xlat
les
cs
pop
gs
dec
loope
hlt
sbb
fidivrs
js
mov
and
jmp
jmp
inc
push
nop
mov
lret
test
cmpsw
jmp
push
std
bnd
inc
sar
lahf
in
mov
mov
test
jmp
xor
imul
stos
or
push
and
fstps
mov
dec
add
push
dec
jmp
dec
outsl
jl
pop
mov
es
mov
cmpb
jnp
icebp
push
inc
sub
scas
dec
fsub
mov
imul
xchg
popf
adc
loopne
pop
aas
or
jmp
push
clc
shll
aaa
movsb
or
adc
push
das
cmp
sbb
inc
out
aam
jb
inc
jns
jmp
pop
insb
xor
xchg
pop
add
and
pushf
movsl
jp
mov
inc
pop
movl
jmp
fs
int
xchg
ror
into
out
cld
test
or
add
addl
jle
sub
mov
sbb
xlat
les
cs
pop
gs
cmp
dec
loope
hlt
sbb
pusha
sbb
mov
cmc
fstpt
xor
lea
nop
mov
lret
test
cmpsw
push
std
repnz
sar
lahf
in
mov
mov
jmp
test
xor
sub
imul
stos
or
mov
push
and
fstps
fwait
cmp
jbe
in
add
push
dec
dec
outsl
jl
pop
movw
jmp
mov
sub
mov
or
icebp
push
inc
sub
scas
dec
fsub
mov
inc
je
adc
loopne
pop
aas
or
push
pop
clc
shll
aaa
movsb
or
adc
push
das
cmp
sbb
repnz
daa
aam
jb
inc
jns
jmp
pop
insb
xor
xchg
pop
add
and
pushf
jmp
movsl
jp
mov
inc
pop
xor
shlb
int3
adc
ret
jmp
xchg
ror
into
out
cld
test
cmp
or
add
addl
jle
sub
mov
sbb
xlat
les
cs
pop
gs
dec
loope
hlt
jmp
sbb
pusha
sbb
mov
js
jmp
mov
and
inc
push
nop
mov
lret
test
cmpsw
push
std
repnz
sar
lahf
in
mov
pushfw
push
call
fdivs
push
xchg
test
xor
sub
sub
sub
dec
add
add
add
sub
sub
add
pop
xorl
jmp
fwait
cmp
jbe
in
sub
add
xorl
xorb
xorl
xorl
pop
popfw
jmp
pushfw
push
call
jl
sub
sub
add
push
mov
pop
push
mov
mov
jmp
push
pop
lea
lea
lea
xor
jmp
xchg
push
xchg
add
pop
sub
sub
pop
xorl
lea
push
sub
pop
xorl
xorb
xorl
xorl
pop
popfw
jmp
pushfw
push
call
or
push
lea
xchg
pop
jmp
aam
jb
inc
push
lea
pop
lea
sub
add
xchg
pop
xorl
dec
inc
xorl
xorb
xorl
xorl
pop
popfw
jmp
pushfw
push
call
sub
pop
shlb
call
enter
add
add
push
jmp
leave
into
out
lea
xchg
xchg
xchg
pop
add
add
sub
sub
lea
lea
pop
xorl
xchg
push
mov
xchg
lea
add
lea
pop
xchg
sub
add
sub
xchg
sub
push
mov
mov
mov
mov
pop
lea
xchg
push
lea
pop
add
add
xchg
jmp
fdivs
push
xchg
test
rorl
mov
lea
pop
sub
add
add
lea
xorl
xorb
xorl
xorl
pop
popfw
jmp
pushfw
push
call
stos
fwait
cmp
jbe
push
xchg
mov
xchg
add
lea
xchg
pop
xor
sub
inc
pop
xorl
jmp
jnp
icebp
push
inc
sub
add
pop
add
add
decl
mov
mov
add
add
popfw
jmp
jmp
enter
je
inc
popf
adc
loopne
pop
aas
or
push
clc
shll
aaa
movsb
or
push
das
cmp
sbb
inc
out
aam
jb
inc
jns
pop
insb
xor
pop
mov
pop
add
and
outsb
setl
inc
jmp
pop
xor
shr
sub
dec
adc
div
fs
xchg
ror
into
out
cld
test
or
add
cmp
jmp
jle
sub
mov
jmp
sbb
xlat
les
cs
pop
gs
dec
loope
hlt
sbb
fidivrs
js
mov
and
add
add
jmp
lret
test
cmpsw
push
std
repnz
sar
xor
lahf
in
mov
mov
test
xor
imul
stos
or
push
and
fldpi
fcompl
xchg
stos
fwait
cmp
jbe
in
jmp
add
push
dec
dec
outsl
jl
pop
mov
es
mov
cmpb
jnp
icebp
push
inc
sub
scas
sub
jmp
imul
xchg
popf
adc
loopne
pop
aas
jmp
or
push
clc
shll
aaa
movsb
or
push
das
cmp
sbb
inc
out
aam
jmp
jb
inc
jns
pop
insb
xor
xchg
pop
add
and
add
push
call
outsb
xchg
xchg
lea
lea
push
mov
pop
add
inc
add
add
push
mov
pop
sub
sub
sub
pop
xorl
push
sub
add
pop
xorl
xorb
xorl
xorl
pop
popfw
jmp
jmp
mov
sbb
xlat
les
xor
cmp
dec
loope
hlt
sbb
fidivrs
js
mov
and
inc
push
nop
mov
fisttpl
lret
test
cmpsw
push
std
repnz
xorl
jmp
xor
xchg
test
xor
ds
stos
or
push
and
fstps
fwait
cmp
jbe
in
add
push
dec
dec
outsl
jl
pop
jmp
mov
es
addr16
mov
cmpb
jnp
icebp
jmp
push
jmp
inc
sub
scas
dec
fsub
mov
inc
je
adc
loopne
pop
jmp
aas
or
push
clc
shll
aaa
movsb
jmp
or
push
das
cmp
sbb
icebp
sub
daa
aam
jb
inc
jns
pop
insb
xor
xchg
pop
add
and
pushf
movsl
jp
jo
in
test
add
pushf
push
call
and
xor
shlb
in
sub
dec
xchg
xchg
xor
xchg
jmp
call
jmp
cmp
sub
mov
jmp
push
xlat
les
jmp
sub
lea
inc
sub
lea
sub
sub
add
sub
add
add
sub
add
pop
xorl
sub
add
xorl
xorb
xorl
xorl
pop
popfw
jmp
jmp
lcall
cmpsl
push
std
repnz
sar
lahf
in
mov
mov
test
xor
imul
stos
or
push
and
fstps
xchg
stos
fwait
cmp
jbe
jmp
in
add
push
dec
jmp
dec
outsl
jl
pop
mov
es
mov
cmpb
jnp
icebp
push
inc
sub
scas
dec
fsub
mov
or
sub
or
push
aaa
pop
clc
shll
aaa
movsb
or
push
das
cmp
sbb
inc
out
aam
jb
inc
jns
pop
insb
xor
xchg
jmp
pop
add
and
outsb
setl
jmp
inc
pop
xor
shlb
sub
sbb
int
xchg
ror
into
jmp
out
cld
test
or
add
addl
jle
sub
mov
sbb
xlat
les
push
hlt
sbb
fidivrs
xor
js
mov
and
inc
push
nop
mov
lret
test
cmpsw
push
std
repnz
sar
lahf
in
mov
mov
push
xchg
test
xor
imul
pushfw
push
call
or
push
and
inc
add
xor
sub
add
sub
add
add
sub
add
add
lea
xchg
add
sub
xchg
pop
xorl
push
mov
mov
lea
pop
add
sub
jmp
faddl
incl
add
add
xorb
xorl
xorl
pop
popfw
jmp
jmp
pop
jmp
aas
or
push
clc
shll
aaa
movsb
or
push
das
cmp
sbb
inc
out
aam
jb
inc
jns
pop
insb
xor
xchg
pop
add
shr
and
jmp
pushf
movsl
jp
mov
jmp
inc
pop
xor
shlb
int3
jmp
adc
div
fs
xchg
ror
into
out
cld
jmp
test
das
fimull
call
cmp
jle
sub
mov
sbb
xlat
jmp
les
cs
pop
gs
dec
loope
hlt
sbb
fimuls
test
pushf
push
call
aad
fistl
enter
jl
gs
lea
sub
sub
pop
xorl
add
sub
push
lea
lea
add
add
mov
mov
pop
xor
push
add
mov
mov
pop
sub
sub
lea
xorl
xorb
xorl
xorl
pop
popfw
jmp
jmp
