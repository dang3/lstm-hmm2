add
add
jne
dec
add
add
insb
add
add
je
add
add
jb
popa
add
add
outsb
add
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
popa
add
add
outsb
add
add
je
imul
push
add
je
insb
add
add
dec
add
je
push
add
popa
add
imul
add
add
add
jne
je
je
outsl
add
inc
add
add
jb
outsb
add
je
add
popa
add
add
add
outsb
add
outsl
add
imul
outsl
add
add
add
dec
add
data16
push
add
js
je
add
add
inc
add
je
je
outsl
add
dec
add
add
je
add
inc
add
je
je
outsl
add
inc
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
dec
add
insb
add
add
je
add
dec
add
popa
add
je
imul
push
add
je
insb
add
push
add
js
je
add
inc
add
je
je
outsl
add
push
add
js
je
add
add
inc
add
popa
add
push
add
js
je
add
add
inc
add
je
je
outsl
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
inc
add
arpl
add
add
add
imul
add
je
push
add
js
je
add
dec
add
insb
add
add
je
add
inc
add
jo
push
add
jb
imul
add
popa
add
add
add
add
outsb
add
arpl
ljmp
or
or
daa
aad
add
push
pop
add
add
add
add
insb
add
add
add
call
add
insl
add
add
add
add
push
add
or
enter
insl
add
add
add
add
add
add
add
add
add
add
add
add
loopne
dec
add
add
insl
add
enter
data16
add
add
insl
add
add
add
add
in
test
enter
insl
add
add
add
add
add
add
add
add
ret
add
add
add
aaa
add
add
inc
add
add
add
add
add
insl
add
add
add
add
add
add
add
add
add
sbb
mov
enter
insl
add
add
add
add
mov
add
add
add
popl
cwtl
add
add
add
aaa
add
add
add
add
add
outsb
add
add
sbb
mov
imul
es
inc
add
enter
out
add
add
add
add
lret
add
add
add
add
lea
popl
rolb
add
jg
add
add
add
add
add
add
lahf
add
scas
add
insl
add
add
add
add
add
add
add
add
enter
roll
xor
add
arpl
test
or
mov
jecxz
enter
cwtl
add
sbb
xchg
add
add
jbe
mov
arpl
or
nop
add
add
mov
add
add
add
add
add
add
push
add
add
add
add
add
push
add
add
cmp
add
dec
add
add
add
mov
aaa
add
add
insl
add
mov
loopne
enter
leave
add
enter
inc
add
mov
enter
jnp
sti
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
enter
sbb
arpl
push
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
scas
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
push
add
mov
push
add
dec
add
add
das
add
add
push
add
add
add
mov
insb
add
add
add
jle
mov
add
add
add
or
add
inc
add
add
add
mov
add
add
add
add
faddl
cwtl
add
add
add
add
popa
add
mov
insb
add
add
add
cli
add
add
push
add
add
add
aaa
add
add
add
add
add
add
cwtl
add
add
nop
add
add
add
add
loopne
sbb
shll
das
sub
mov
xorb
pop
mov
mov
lods
movsb
cmp
inc
out
fucomp
bound
xchg
iret
mov
pop
jmp
les
cmp
aad
adc
dec
push
clc
dec
and
mov
xchg
mov
scas
ret
aas
push
mov
lods
mov
jle
mov
daa
xorb
xchg
fdivp
jnp
cmc
repnz
fcoms
mov
das
outsb
xchg
test
lea
fimuls
push
xor
jge
xorl
push
test
aaa
pause
and
sbb
sarl
fwait
mov
xchg
adc
mov
out
lods
adcb
push
xorb
mov
cmp
hlt
sub
mov
hlt
sub
pop
inc
in
pop
cmpsb
jae
loopne
sub
mov
pop
pushf
je
mov
aad
jp
lret
mov
add
xchg
in
dec
ss
cmpsb
push
fildll
or
sub
mov
imul
sbb
movsb
jecxz
mov
dec
inc
fwait
data16
sub
fwait
shrb
sub
xor
jle
dec
dec
inc
leave
nop
lds
jmp
imul
dec
push
fwait
sarb
mov
and
pop
fnsave
enter
pop
or
pop
test
pop
xchg
xchg
push
sub
mov
mov
movsb
jg
dec
bound
push
int3
punpcklbw
dec
je
add
into
or
push
jl
push
sbbl
sub
and
aas
fwait
imul
add
ret
into
fimull
jl
adc
sbbl
js
inc
loopne
or
jle
stos
mov
jno
xor
pop
cmpsb
jbe
in
jno
push
xor
lock
and
shr
test
std
sub
mov
or
adc
push
push
in
dec
ss
sar
sbb
and
jle
mov
mov
fcmovbe
mov
shll
inc
jb
sub
inc
mov
rcrb
add
inc
shrl
mov
cli
fdivrp
pop
inc
icebp
mov
mov
imul
dec
mov
addr16
repnz
pusha
jns
mov
push
mov
imul
outsl
push
insb
andl
test
sahf
notb
cmp
mov
xor
jnp
mov
sarl
aam
leave
mov
pop
inc
fiaddl
iret
stc
pop
adc
aaa
push
sub
mov
pop
sysenter
pop
or
mov
mov
mov
adc
pop
jp
lods
fstpt
mov
cltd
mov
jge
push
pusha
outsb
xor
popf
mov
add
add
add
add
add
add
add
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
push
mov
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
push
call
mov
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
pushl
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
mov
push
mov
mov
fsubrp
scas
loop
das
stos
outsl
je
jg
pop
cmp
das
rcrb
nop
out
out
iret
fistpll
mov
outsl
outsl
jg
inc
dec
pop
aas
add
pop
nopl
push
or
mov
ja
jg
add
cs
push
stos
iret
mov
xor
ljmp
in
adcb
mov
imull
pop
lock
repz
mov
and
mov
or
nop
xchg
andl
mov
push
scas
xchg
cmpsb
fists
fiadds
jg
les
outsb
nop
outsl
mov
fsubl
fdivrs
lret
lcall
dec
lea
push
cmp
dec
mov
pop
mov
sub
arpl
adc
and
mov
pushf
sub
fisttpl
arpl
scas
dec
scas
int3
inc
das
sub
jp
jp
out
add
mov
push
dec
sbb
jbe
xchg
das
pop
cltd
dec
xor
pop
jecxz
jne
arpl
mov
jmp
lahf
aaa
or
xchg
arpl
xor
pop
pop
imul
mov
fcmovbe
mov
out
fcomps
sub
pminsw
cmp
push
dec
jbe
test
add
std
into
in
repz
lods
inc
push
or
sbb
dec
aas
push
dec
insb
lea
mov
jecxz
mov
jg
outsl
jg
dec
dec
pop
aas
das
das
aas
pop
nop
out
out
iret
fistpll
lahf
jg
outsl
jg
dec
dec
pop
aas
das
das
aas
pop
nop
out
sub
repz
dec
adc
aam
jl
insb
push
out
jo
add
dec
jl
es
sahf
mov
inc
arpl
std
rol
dec
push
inc
ljmp
or
in
jne
cmp
cli
inc
cli
std
loope
in
push
lret
adc
and
add
jle
fbld
pop
mov
adc
jp
mov
xor
flds
mov
movsb
and
jns
xchg
data16
pop
cmp
xchg
enter
push
mulb
add
and
push
insl
xchg
mov
xor
cmpb
and
outsl
add
pop
gs
adc
movsl
cmpsb
cmp
push
xlat
jecxz
test
jecxz
aad
jg
mov
sbb
push
test
push
mov
dec
mov
out
push
mov
and
test
and
xchg
leave
or
jns
ds
outsl
nop
push
loop
mov
test
add
dec
sub
push
adc
push
mov
in
push
sub
into
jg
sub
pusha
fwait
pusha
in
stos
push
out
pop
jno
insl
aaa
and
jns
mov
mov
pushf
xchg
cmp
cmpsb
jnp
adc
pop
xchg
ficomps
pop
cmp
inc
cmp
pop
test
les
adc
test
mov
jg
add
ja
pop
frstor
sbb
call
outsl
push
xor
inc
inc
leave
fidivs
sarl
ljmp
fsts
mov
sahf
jns
fs
lret
push
cmp
daa
movsl
dec
fwait
test
adcl
mov
mov
inc
fcmovne
into
in
repz
or
and
push
jae
aas
pushf
out
mov
xorb
cmp
and
mov
xchg
inc
add
inc
and
repnz
jecxz
or
imul
ja
subl
fisubs
xor
pop
lret
jmp
int3
pop
mov
pop
jl
xchg
imul
arpl
pop
imul
pushf
push
mov
pop
xchg
xor
xchg
dec
xchg
cmpb
movsb
aas
ljmp
dec
add
inc
pop
in
loop
xchg
outsl
mov
mov
add
je
aad
push
cmp
das
clc
xchg
inc
jo
in
mov
je
sbb
jp
in
std
cmpsl
add
test
jg
insl
inc
loopne
test
shl
int
xor
js
in
add
push
xor
repnz
in
xchg
ljmp
cwtl
cld
stos
xor
inc
adc
dec
inc
pop
lea
xchg
daa
sbb
scas
dec
dec
xlat
std
fwait
add
lret
adc
out
xchg
mov
movsl
jmp
xor
mov
jns
sub
sub
fcompl
cmp
cmp
sub
mov
loope
pop
call
adc
lcall
mov
push
out
or
or
lea
fstp
jns
pop
xchg
xor
and
cltd
aad
sub
sarl
loop
rcl
stos
ja
jl
outsb
lret
lret
adc
mov
mov
pop
cmp
push
mov
call
adc
adc
sarl
sbb
mov
lea
jbe
jns
or
inc
fsubr
inc
testb
cmpsl
sbb
and
jl
loop
mov
out
jns
ja
pop
rol
outsl
cld
pushf
shrb
out
pop
jne
xor
inc
push
iret
jnp
mov
dec
mov
mov
inc
pop
pop
lahf
mov
cs
loop
adc
fwait
jnp
dec
dec
mov
xor
adc
iret
push
push
cmp
lock
sub
sbb
popa
or
mov
int3
add
push
xor
mov
pop
dec
jbe
cmpsb
jl
std
sub
pop
mov
mov
jae
jne
lea
stos
push
fsubs
cmpsb
inc
xlat
lock
loope
into
xor
int3
push
cwtl
test
add
sbb
repz
mov
adcl
int
subl
xchg
mov
inc
cmpsb
lss
cmp
loopne
bound
fs
ss
xor
sbb
js
lcall
out
sbb
mov
stos
sbb
sub
pop
inc
in
call
mov
pop
sbb
dec
xchg
ds
inc
hlt
or
sub
iret
stos
sbb
jnp
cmp
push
and
mov
out
or
into
arpl
rcrl
mov
je
xchg
push
stos
adc
int
push
popa
push
inc
cmp
add
icebp
outsl
pop
jno
inc
sarl
mov
ljmp
xor
push
test
cmpsb
pop
shlb
xchg
test
sub
or
js
xor
je
test
lret
jae
fdiv
add
sbb
arpl
xrelease
fidivrl
add
or
mov
cmp
jae
es
sahf
adc
jl
xchg
mov
in
scas
dec
negb
xchg
inc
adc
aas
sub
sbb
andb
xorb
pushf
add
loopne
jmp
lods
pusha
jb
adc
mov
dec
jo
fwait
stc
sbb
ror
mov
xor
imul
into
arpl
pop
jno
shrb
lret
fdivs
mov
sti
sub
add
ret
lock
jge
enter
fucomip
adc
arpl
cmp
mov
outsb
out
mov
js
xchg
or
mov
add
adc
out
das
push
jp
push
jb
cmpsb
popf
dec
sbb
mov
xor
rorb
and
addr16
cmp
jmp
or
sahf
aad
mov
js
mov
or
jecxz
inc
in
lret
call
xchg
adc
push
out
pop
in
es
lods
cpuid
rolb
icebp
dec
mov
pop
jp
cmp
insb
cmpsb
cmc
cmp
icebp
or
cmc
out
lret
add
lock
jmp
jl
add
cmpsb
inc
pop
jb
ss
pop
add
pushf
cmp
xor
iret
dec
test
mov
insl
dec
into
pop
pop
add
call
inc
aaa
test
aam
enter
jo
xorb
insb
notb
loop
lock
popa
flds
push
sbb
adc
dec
js
movsl
inc
jbe
movsl
mov
mov
movb
adc
rclb
call
mov
js
ljmp
mov
stc
andb
mov
outsb
arpl
lds
js
rorl
xchg
repnz
arpl
add
mov
fmull
mov
pop
ret
fnstcw
sub
dec
adc
or
stc
mov
out
xchg
rorl
push
xor
xor
cmp
lret
mov
cmp
cmc
mov
cmp
into
dec
and
lahf
push
mov
inc
rclb
mov
imul
jo
push
pop
in
les
rcll
mov
movsl
mov
cmpsl
inc
xchg
adc
or
shr
mov
ja
cmp
mov
jns
imul
rolb
out
cmp
repnz
in
sub
pop
jecxz
push
sbb
push
test
adc
inc
ds
mov
and
cmpsb
mov
lods
mov
clc
add
in
or
je
test
in
xchg
xchg
out
mov
pop
xchg
lds
xchg
mov
inc
fdivr
pop
sbb
add
xchg
mov
or
in
mov
loop
stos
pop
aas
cmp
jne
jge
sti
clc
outsl
dec
push
pop
jecxz
inc
out
mov
pop
test
inc
sub
sahf
jp
nop
loopne
ja
test
and
and
aam
dec
jl
mov
cmc
adc
inc
outsb
jle
clc
in
jecxz
aad
xchg
ret
into
cmp
test
addr16
mov
jne
cmp
movsl
cld
ficomps
inc
xchg
imul
lea
push
mov
pop
mov
xor
in
rdtsc
shr
jo
lahf
jmp
mov
cmpsl
pop
xchg
jns
ret
and
lods
repz
xor
pushf
jle
mov
int
inc
scas
push
pop
cltd
test
push
push
adc
cmpsl
xor
mov
ja
push
int
in
shrb
xchg
or
cld
sub
xchg
and
stc
push
js
push
lds
pop
or
mov
fbld
mov
sbb
clc
rcrb
mov
add
jno
jg
sahf
shl
sbb
mov
lret
push
xchg
push
cmpsl
loop
loopne
mov
call
xor
into
scas
mov
jb
xorb
or
sbb
popa
int3
mov
lods
xorb
push
xchg
adc
dec
pop
fwait
pusha
push
cmp
xor
mov
insl
inc
std
pop
dec
notl
rclb
shl
mov
xchg
nop
cmpsb
cmp
inc
mov
push
mov
lret
ror
mov
cmpb
jbe
add
mov
and
mov
insb
mov
icebp
sub
pop
and
jbe
pushf
push
push
fwait
mov
mov
xor
jbe
packuswb
scas
jmp
call
in
lods
push
fsubs
sbb
push
int
test
outsl
movsl
popf
fsts
lcall
and
sbb
loopne
orb
repz
js
lea
test
lods
movsl
jo,pt
dec
nop
das
sbb
iret
ja
mov
xchg
adc
sub
sub
or
xor
les
cltd
push
adc
mov
fistps
and
fistps
add
popf
sbb
cmp
sub
out
imul
shlb
and
mov
test
or
mov
cmc
rorb
sub
sbb
xchg
xor
jae
add
pop
xor
jb
push
mov
jb
jmp
sub
xchg
xchg
inc
sahf
push
stos
xchg
mov
lret
and
pop
sbb
dec
mov
pop
push
push
es
daa
jo
inc
fmuls
cmp
cmp
movl
dec
dec
cmp
gs
push
xor
add
leave
mov
mov
js
push
push
mov
sti
xchg
xlat
les
xlat
jb
mov
push
cmp
mov
lret
lock
jno
iret
push
rcrb
mov
mov
shlb
mov
push
arpl
xchg
shrl
or
stos
sarb
jnp
mov
fcmovb
iret
call
cmp
jb
aaa
push
lcall
sbb
in
out
movsl
mov
mov
push
dec
mov
test
xor
sub
aam
pop
xchg
std
xor
in
shr
add
pop
cmp
mov
mov
jmp
ja
addb
iret
test
out
and
mov
sbb
inc
xor
or
jns
inc
cltd
inc
sub
mov
outsb
jp
adc
jae
pop
mov
cwtl
sub
lret
dec
popf
out
test
push
jp
cmp
xor
adc
mov
int
pop
dec
aaa
cmp
fucomip
inc
pop
xchg
xor
mov
icebp
stos
inc
adc
subb
addr16
sti
ret
and
stc
jmp
adc
jecxz
out
ficomps
push
and
gs
xchg
ds
imul
or
scas
addl
outsl
jbe
loope
aad
mov
cli
pushf
xor
mov
in
or
or
imul
sahf
popf
insl
inc
arpl
xor
push
mov
in
loope
lret
popf
dec
scas
xchg
cmp
adc
jl
mov
cwtl
sub
add
mov
push
cmpb
rorb
push
cs
imul
cmpsl
pop
pop
pop
push
add
xchg
int
jmp
and
sbb
xchg
and
divb
pop
loop
in
fiadds
mov
out
mov
loopne
pushf
sub
je
inc
lcall
or
fcmovbe
mov
jb
rcrb
fsubs
pop
mov
cmpsb
sub
subl
popf
or
mov
jecxz
lds
je
cmpsl
and
jae
sbb
lcall
jmp
push
xlat
lahf
fadds
push
repnz
mov
add
inc
xor
cmpsb
popf
adc
fcoms
dec
sub
xor
and
lods
adc
add
mov
mov
jge
inc
push
addr16
addr16
in
out
iret
fmuls
jne
mov
into
pop
add
shlb
sbb
fnsave
popf
outsl
subw
lcall
shlb
lcall
xor
xchg
mov
push
inc
add
and
jecxz
sbb
fcomi
sti
push
jnp
pop
or
xchg
fcmovnb
or
rclb
cmp
push
xchg
xchg
mov
and
lahf
cmpsw
andl
jecxz
xor
scas
jge,pt
cmp
outsb
jno
ds
fisttpl
int3
xchg
int
jmp
lock
mov
inc
out
movd
sahf
xchg
in
loop
jb
mov
jo
cmp
dec
mov
xchg
ja
mov
inc
xchg
hlt
test
lret
mov
pop
mov
adc
in
mov
fmuls
xchg
pop
add
push
test
adc
mov
mov
inc
decb
aam
inc
nop
mov
mov
int3
test
push
cld
outsl
inc
test
ficoms
cwtl
hlt
rcl
in
arpl
xor
aas
pop
pop
pop
testl
imul
movsl
jb
imul
jbe
mov
mov
sbbl
cs
out
xchg
in
or
lock
and
pop
int3
sti
jae
enter
sar
push
adc
pop
adc
faddl
or
xlat
mulb
pop
xchg
inc
and
aas
sub
and
push
fnstenv
imul
dec
and
adc
jle
or
in
cltd
or
outsl
mov
cmp
xchg
xchg
mov
data16
out
mov
jge
jnp
stos
sti
dec
xchg
mov
mov
mov
cmp
out
pop
mov
inc
cmp
hlt
jbe
repnz
cli
outsb
cmp
xor
ljmp
push
aas
mov
mov
mov
and
sbb
mov
dec
jmp
push
clc
js
addl
test
and
mov
dec
mov
jns
push
daa
bndldx
cmpsb
xor
sub
cltd
jmp
push
and
jp
add
push
scas
leave
xor
xchg
test
out
jmp
jl
or
rcr
fisttps
in
out
and
insl
pop
xchg
ficoms
xor
loopne
dec
or
inc
pushf
cltd
shl
push
int
addr16
sub
lahf
sbb
out
rorl
adc
mov
adc
cltd
xor
daa
sbb
mov
aam
cld
pusha
pop
push
incl
pop
jle
je
loope
cld
rcrl
lock
sub
subl
sub
adc
pusha
sti
pop
les
push
add
jns
or
xchg
mov
cmp
call
sbb
shl
pop
xor
imul
sysexit
sub
push
and
sub
pop
pop
xor
fmull
lock
sbb
adc
shrl
or
jo
ffree
mov
nop
movsl
sub
jae
mov
leave
loope
scas
xchg
pushf
dec
xchg
inc
sub
pop
sub
icebp
add
adc
rolb
fucomip
sub
push
xor
ds
in
sbb
lock
ret
outsb
jae
int
sbb
or
xchg
in
pop
imul
mov
inc
xchg
add
cmc
jo
adc
add
mov
imul
cli
divb
push
rorb
xchg
mov
into
jg
xor
mov
cmpsb
xor
push
jmp
lahf
sub
bound
mov
out
and
stos
ud1
pop
nop
clc
push
mov
test
aam
jmp
cmp
daa
test
cmc
pushf
cmpb
adc
xor
fwait
sub
outsl
hlt
test
or
test
xor
out
loopne
ss
mov
popf
mov
sahf
mov
lea
cmp
sti
jmp
mov
aas
ss
sub
bnd
lods
cmp
inc
movsb
or
inc
sbb
mov
jge
xchg
fldenv
lods
pop
dec
pop
test
icebp
je
xchg
push
test
jbe
sti
sti
subl
mov
jle
ds
sub
push
ja
sub
mov
in
dec
test
mov
fistpll
shlb
call
repz
pop
and
mov
mov
mov
adc
aam
mov
pushf
mov
dec
aam
push
xchg
pop
ljmp
adc
push
xchg
fwait
mov
nop
sub
xor
push
or
aaa
fnstsw
mov
or
cmp
jb
inc
imul
xchg
pop
insb
pusha
sub
mov
cmpsb
or
mov
jg
jbe
sub
push
xchg
hlt
arpl
mov
and
push
cmp
xor
je
out
dec
pop
neg
add
cmpsb
add
data16
and
out
adc
popa
push
dec
inc
pop
pop
out
lcall
ret
mov
jl
cmp
imulb
pop
clc
mov
jl
scas
jae
dec
aas
jge
and
xor
nop
fs
outsl
or
dec
out
mov
push
mov
sti
jle
in
jp
fimuls
fnstsw
or
mov
adc
and
sub
ja
subl
adc
jae
andb
js
testb
scas
adc
scas
outsb
rcr
into
sti
push
cli
adc
xor
pop
inc
aaa
cmp
lock
pop
mov
loope
imul
inc
sbb
shl
lcall
fs
ret
sub
add
push
push
xchg
out
sub
mov
in
ds
lret
mov
iret
sbb
cmpsb
adc
cltd
pusha
cmpsb
in
sub
push
testb
pop
dec
inc
out
xchg
test
out
out
jecxz
jo
inc
mov
insl
cli
rcrl
mov
je
mov
jg
xchg
insb
mov
mov
push
jo
cmp
inc
jae
call
cwtl
popa
and
sti
mov
and
push
lret
addl
pop
add
jle
mov
inc
fcomi
mov
push
das
movl
or
test
mov
adc
mov
pop
out
cmp
dec
ljmp
xchg
jb
packssdw
pop
notl
movl
call
mov
xlat
sub
mov
flds
and
adc
mov
aas
rorl
push
pop
mov
in
xchg
fs
sbb
in
inc
call
add
aas
test
adc
xor
pushf
xchg
data16
pop
jecxz
sti
loopne
mov
frstpm(287
jge
pop
popw
lock
cli
pop
out
jl
sub
daa
test
fisubl
or
and
mov
test
iret
mov
frstor
je
jge
popa
or
mov
adc
data16
fistpll
mov
xchg
enter
lahf
loope
push
lock
push
push
cld
js
add
andb
pop
mov
adc
mov
pusha
fwait
push
xor
nop
inc
movsl
flds
lcall
jns
pop
jb
add
pop
and
fs
dec
adc
out
mov
xor
sbb
jg
xchg
loopne
push
cmpsl
xchg
loopne
lock
daa
push
ror
arpl
out
and
jp
cmp
pop
sarl
push
inc
push
insb
push
insb
ficompl
rcr
jle
xchg
and
lods
mov
repnz
test
lahf
xchg
add
stos
mov
fs
nop
or
jbe
rorb
xor
push
and
adc
fcmove
and
setg
test
pop
insl
mov
cmp
orl
xor
inc
xor
mov
and
ds
rol
dec
and
fdivrl
sti
sar
es
dec
add
sti
cmp
ret
ret
pop
pop
push
inc
das
cmp
dec
cli
hlt
int
sbb
jo
adc
loop
mov
fwait
or
push
jle
hlt
cs
jge
xor
cld
push
cs
dec
fcoml
cmp
adc
fs
cmp
arpl
xchg
jbe
mov
pop
adc
or
bound
ss
sahf
movsb
popa
aam
sbb
ja
sahf
fdivl
pop
ja
dec
out
and
and
pop
call
divb
dec
push
outsl
push
xchg
nop
out
cmp
ja
jno
fistpll
push
mov
rolb
mov
xchg
mov
aas
adc
adc
mov
fistpll
lahf
jg
outsl
jg
dec
dec
pop
aas
das
das
aas
pop
nop
out
out
iret
fistpll
lahf
jg
outsl
jg
dec
dec
pop
aas
das
das
aas
pop
nop
jmp
icebp
iret
xlat
iret
fstpt
mov
jnp
dec
dec
push
aas
sub
aas
sbb
aas
sti
out
ret
sbb
out
mov
pfcmpge
nop
aad
dec
dec
sub
cmpsl
inc
loopne
lock
cmp
sub
lcall
inc
ficoml
cli
jne
test
xchg
or
aad
in
cmc
push
add
mov
push
lret
jne
test
mov
lds
jbe
xchg
cmc
jb
inc
adc
fldenv
lea
inc
mov
ljmp
in
dec
insl
cmc
rcrl
mov
cltd
push
xor
js
ljmp
mov
xchg
sbb
shlb
xchg
les
mov
cmp
fidivrl
mov
insl
sti
lea
sbb
rorl
jb
faddl
aaa
lret
cli
xchg
lret
xor
inc
ficoml
xchg
lds
and
gs
and
fstl
fildl
xor
js
push
imulb
scas
sub
jb
push
leave
pusha
lcall
cmp
adc
das
sub
adc
cmp
xchg
cli
lcall
xor
push
xor
ficompl
xchg
cli
movsl
mov
aad
in
cmc
ljmp
xor
xor
jne
icebp
dec
rorl
leave
jns
add
cs
mov
fsubl
ret
xor
add
rcrl
push
xor
lea
push
js
pop
fists
push
mov
xchg
dec
mov
dec
test
aad
in
cmc
push
lcall
inc
ficoml
gs
jne
test
xchg
or
pop
aad
in
cmc
push
lcall
inc
ficoml
gs
jne
test
nop
cltd
out
mov
mov
mov
and
sbb
jb
dec
cmpsl
test
dec
jecxz
dec
fwait
add
test
xor
imul
push
mov
lds
dec
fistps
fistpl
mov
pop
jns
mov
jl
jae
rcrl
xor
fnstcw
mov
outsl
mov
mov
sahf
sbb
outsl
arpl
xor
add
sbb
mov
ds
pop
ret
push
test
insl
loopne
ffree
adc
gs
fcmovbe
push
iret
and
mov
xor
ds
push
movsl
inc
leave
pop
mov
push
out
fwait
inc
in
and
loop
js
call
push
push
sub
jge
notl
loope
push
mov
jmp
fwait
lds
pop
adc
loope
in
xchg
and
jns
sub
pop
mov
mov
stc
push
sub
jl
jnp
popa
dec
or
and
adc
xchg
push
arpl
mov
dec
subb
inc
xchg
pop
mov
mov
dec
notb
fbstp
movsl
pop
cmp
xor
in
adc
ljmp
ret
bound
cmp
mov
pop
aas
xchg
les
sub
in
xor
lods
xor
xor
out
cwtl
imul
lea
enter
scas
out
imul
lcall
mov
cmp
xlat
rclb
mov
test
bound
dec
movsl
out
sub
in
pslld
in
push
push
imul
dec
sbb
sti
mov
movsb
and
cld
mov
push
jmp
jne,pt
or
movsl
mov
divb
cltd
sub
xor
enter
cli
push
out
jp
xor
aam
es
out
and
jg
inc
dec
cmp
xor
fwait
sub
arpl
jae
jle
jp
mov
loopne
test
xlat
jb
sub
dec
adc
ret
icebp
and
inc
pop
aas
mov
xchg
mov
add
or
mov
lods
dec
clc
and
push
sbb
adc
sbb
gs
ret
loop
cltd
mov
enter
cs
cmp
in
jo
and
lea
jae
sbb
aad
int3
push
insb
mov
jecxz
adc
or
xchg
ss
sub
out
mov
push
jbe
loop
pop
inc
sahf
adc
or
int
push
lods
imul
dec
stos
jp
xor
add
mov
ja
shrl
cmp
cmp
inc
cmc
add
jl
out
mov
jg
test
iret
push
nop
adc
addb
jg
scas
bound
lds
loopne
dec
push
sub
popa
push
cmpsb
cmp
mov
mov
dec
mov
sub
sbb
add
and
push
mov
xor
mov
data16
xchg
leave
jle
add
loop
xor
pop
rclb
in
sbb
out
mov
jae
cmp
loopne
aad
dec
push
adc
mov
xor
ret
clc
lahf
or
push
scas
xchg
icebp
ret
int3
and
xchg
test
mov
xorb
outsb
mov
xchg
leave
and
xor
scas
cmp
jge
push
test
out
aam
into
mov
sti
adc
shlb
cmp
adc
js
mov
out
and
mov
fwait
jle
sub
lea
int3
pop
leave
sub
sbb
data16
add
cli
xchg
jg
in
scas
shll
call
sbb
inc
cmp
popa
add
sub
mov
adc
push
sarl
sahf
fstpt
jbe
cmp
scas
aaa
lea
out
fucom
lcall
pushf
jo
nop
es
add
sbb
inc
setno
out
iret
dec
sbb
inc
mov
repnz
jno,pt
test
cmpl
ljmp
jp
mov
fs
add
loopne
negb
lcall
scas
push
out
bound
es
pusha
ds
jb
es
lock
aaa
and
pop
or
inc
andb
cmp
adc
cmpsw
sbb
stc
adc
movsl
and
xor
sub
stc
movsb
pop
mov
cmp
push
inc
jmp
pop
lcall
iret
pop
inc
mov
push
cmp
mov
sbb
jecxz
dec
push
mov
push
and
xchg
pop
cmp
lcall
int3
sbb
je
sub
xchg
adc
push
cmp
xor
inc
and
pusha
dec
sub
scas
jae
fnstsw
adcl
sub
cmp
test
dec
push
test
xor
push
or
fwait
cmpsl
cmp
fsubr
dec
int
dec
andb
sbb
add
add
sub
cltd
cmp
mulb
xchg
std
sbb
cli
sahf
push
enter
mov
and
and
adc
add
pop
cmp
rcll
mov
movsb
sub
loopne
in
enter
jmp
repz
xor
cs
incb
aaa
jg
push
mov
cmp
shlb
icebp
jo
xor
cmp
mov
leave
lcall
ror
out
mov
xor
push
sub
pop
scas
popf
test
or
mov
lcall
cmp
jne
add
das
adcb
ror
xor
push
adc
notl
std
test
shrb
sub
clc
out
mov
lret
callw
and
in
sub
inc
and
ror
pop
repz
xchg
lods
pop
jg
pusha
shlb
repz
fstpt
imul
add
loope
mov
xchg
insb
cli
stos
adc
cwtl
test
push
out
cmp
repnz
jp
or
push
mov
clc
inc
dec
insl
xchg
ss
mov
inc
stos
repnz
jmp
outsb
dec
out
jb
iret
add
mov
out
fcomi
jg
jmp
pusha
int3
push
inc
inc
jo
rclb
xor
inc
pop
pop
pop
xchg
pop
outsb
dec
cld
ds
aam
add
jns
ja
out
test
push
push
lret
popa
fnstsw
in
pop
and
or
add
aaa
cmp
jmp
cmp
or
or
out
fsts
mov
mov
or
dec
movsb
sbb
or
add
cmp
cmpxchg
negb
in
arpl
insl
sub
ret
std
cld
hlt
jnp
sbb
test
lods
push
lods
popa
xor
flds
mov
xchg
xchg
sbb
push
push
es
inc
jbe
dec
push
sbb
pop
mov
into
mov
in
adc
push
xchg
cmp
mov
leave
shll
jo
gs
movsl
scas
jle
ret
les
insb
dec
out
pop
test
adc
loopne
lret
lahf
das
inc
sub
and
in
cmp
and
sbbb
add
cltd
test
dec
icebp
inc
js
inc
cmp
ljmp
stc
or
loop
test
push
out
mov
adc
jmp
adc
in
and
rcl
cmp
pop
dec
push
jmp
xor
sbb
sti
cltd
popa
lea
lea
and
outsb
test
adc
or
aas
dec
xor
adc
sbb
push
pop
adc
rorl
adc
push
mov
dec
cmc
in
clc
test
push
testb
imul
or
inc
leave
and
les
std
inc
rolb
push
jmp
xchg
out
std
mov
sbb
sub
pop
test
scas
cmp
and
jecxz
jp
jmp
stos
pop
and
push
cltd
xchg
mov
nop
int3
aas
dec
mov
push
and
mov
jl
and
mov
pop
xlat
cmp
or
and
add
es
andl
mov
test
in
test
clc
dec
push
aam
fucomip
test
xchg
fsts
sub
jg
arpl
rcrb
lds
pop
inc
jae
lret
insl
les
jmp
cltd
int3
rol
push
and
sbb
cs
sub
inc
pop
sub
cmp
fucom
and
adc
dec
jo
pop
add
adc
cmpsl
mov
mov
xchg
push
test
push
cltd
sub
jecxz
test
ljmp
ds
jle
jge
cmpsb
ja
das
cltd
adc
mov
xchg
mov
and
out
sbb
mov
pop
stc
lock
dec
cmpsl
mov
scas
ljmp
fidivs
mov
jge
je
add
bound
or
and
xorl
sbb
inc
and
dec
int3
adc
adc
in
cmpsl
adc
pop
into
adc
dec
insb
addr16
lods
stc
loopne
lret
inc
test
ja
push
cmp
push
mov
test
sbbb
adc
int3
or
adc
mov
xor
mov
stos
xchg
lds
jno
jge
das
jns
mov
fwait
jne
loop
faddl
mov
insb
push
sub
inc
mov
push
mov
out
cli
push
pop
out
into
inc
jge
int
pop
loope
fwait
xchg
push
sbb
jmp
or
add
and
in
and
inc
sub
push
or
cmp
sahf
push
cmpsl
jecxz
fidivrs
and
bound
enter
and
mov
cmpsb
fwait
pop
outsb
cld
jne
incb
call
pop
mov
or
icebp
repz
stc
mov
pop
cmp
nop
bound
sbb
mov
push
pop
jecxz
hlt
pop
mov
mov
push
pop
pop
adc
fisttpll
loop
fstps
mov
outsb
sub
xor
fs
pop
inc
xchg
test
jmp
arpl
leave
cmc
push
xchg
mov
lret
cs
jbe
popa
arpl
inc
aas
xchg
in
iret
inc
push
mov
test
mov
cmpsb
jnp
in
inc
aas
test
xchg
lahf
mov
fsubs
cwtl
push
cld
aas
or
push
std
test
or
push
xchg
xchg
idivl
imul
cmp
dec
mov
inc
adc
mov
je
inc
in
cmpsb
mov
aaa
in
xchg
pushf
cmp
repz
into
mov
pop
sub
pop
imul
outsb
loope
std
xchg
fstps
cltd
dec
sub
lea
punpckldq
iret
sbb
xchg
inc
cmp
inc
mov
gs
mov
sub
aad
imul
sarb
push
lods
jne
jmp
lods
js
dec
insl
inc
pop
fiadds
and
pop
out
xor
leave
push
cs
or
xchg
mov
rcrb
and
or
in
and
inc
xlat
cmp
ret
sti
inc
mov
repz
xlat
push
sbb
add
lahf
mov
imul
cmp
push
mov
repnz
xor
mov
cltd
sbb
je
ret
bound
imul
out
mov
ds
and
mov
mov
cs
adc
xchg
xchg
sahf
pop
pop
not
cld
out
fwait
out
cmovnp
inc
loopne
pop
cmp
xor
fidivl
enter
sbb
gs
movsb
inc
mov
or
sub
das
stos
jmp
insb
jae
xor
jae
ds
or
inc
adc
mov
data16
stc
sub
inc
dec
and
stos
sbb
xchg
push
pop
sbb
adc
pop
push
cmc
or
es
mov
add
adc
popf
rolb
xchg
outsl
add
and
icebp
or
insb
or
int
or
mov
loope
lret
mov
stos
ds
outsl
js
add
lret
lds
or
sbb
daa
sti
stos
pop
jl
mov
dec
stos
xchg
mull
sub
push
and
fstpl
mov
mov
divl
jle
mov
insl
inc
mov
sub
idivl
daa
mov
push
bnd
or
mov
sub
shl
dec
add
nop
int3
mov
adc
cmp
mov
mov
inc
dec
and
call
fwait
xchg
test
jp
ret
fbld
lods
dec
mov
imulb
adc
adcl
ret
or
xchg
int3
addr16
jg
stos
in
lea
ret
clc
lret
gs
jnp
or
pop
cli
jno
aas
jle
loopne
jge
mov
cld
sahf
in
jp
cli
int3
mov
add
cld
aas
jno
cmp
call
push
addr16
push
and
stc
jns
sbb
or
or
int3
shlb
fstpl
rcrb
das
andl
add
cmovl
in
cmp
xchg
mov
push
pop
xor
daa
pop
addr16
in
mov
call
xchg
xchg
mov
mov
sub
push
out
les
int
test
sbb
dec
xchg
rol
or
mov
jl
rcrb
pop
push
add
inc
xchg
xor
lret
xchg
movsb
lret
loop
inc
xor
adc
cltd
cmc
mov
fucom
int
jne
scas
jb
mov
push
sbb
pop
adc
add
jo
movl
divl
cmp
aas
into
add
adc
call
ror
cmp
xor
and
icebp
fs
mov
fldl
outsb
scas
jecxz
arpl
addr16
in
pusha
dec
dec
or
pop
jmp
outsl
mov
push
sub
icebp
dec
in
lret
roll
mov
push
cmpsb
test
testl
jb
or
rcl
pop
sub
test
movsl
inc
outsb
imul
imul
adcb
pop
mov
mov
shlb
test
mov
call
jae
sbb
mov
int
xchg
outsl
mov
sbb
das
andl
lret
and
jb
testl
cmpsl
cmp
fstp
jns
adc
test
cmp
inc
imulb
pusha
inc
inc
or
mov
fwait
std
in
ds
sti
push
call
sub
add
cli
icebp
push
xor
loope
dec
cli
mov
mov
hlt
jecxz
shr
xorl
add
enter
sahf
in
xor
cli
or
idivb
shrb
sbbl
int3
pop
loop
insl
push
test
add
inc
fistl
or
pop
xor
xchg
test
or
imul
push
sub
lcall
mov
out
xchg
jo
leave
out
sbb
mov
das
jp
push
add
jge
repnz
add
scas
mov
jae
fwait
scas
pop
cmp
mov
mov
dec
data16
and
les
cmp
sub
dec
xchg
sub
jae
jb
pop
ficoml
mov
xor
lahf
jnp
stc
fisubrl
sub
fs
popl
mov
in
lahf
sbb
adc
jo
stos
push
sbb
dec
shll
jle
push
and
xchg
pop
scas
fimuls
imul
lods
invd
mov
jbe
mov
push
adc
add
cmpsl
pop
sub
gs
inc
add
ds
mov
jge
dec
daa
ret
imul
sub
jge
movsb
clc
pushf
icebp
pop
mov
daa
push
decb
in
push
xchg
sbb
jno
mov
jge
dec
xchg
inc
cltd
cltd
pop
xchg
or
fcoml
aam
loope
clc
js
roll
jns
movsl
bswap
or
mov
pop
pop
jecxz
dec
mov
call
fadds
pop
sti
daa
lea
icebp
rorl
stos
rorb
rol
ds
jecxz
cld
lods
movl
decb
jns
movsl
pusha
xchg
fs
testb
dec
in
jecxz
xchg
movsb
cltd
call
adc
xor
fbstp
mov
pop
loopne
outsb
push
mov
inc
jo
popa
fidivrs
decl
icebp
js
xchg
fidivrl
imul
popf
xor
add
fstps
mov
cmp
es
sub
pushf
iret
pop
out
add
in
inc
mov
xchg
sbb
dec
imul
inc
pop
cs
xor
out
mov
mov
repnz
jno
jae
les
push
cmp
lea
cmpsb
sbb
sbb
out
jbe
pusha
or
sbb
pop
dec
imul
fcoml
test
sub
xchg
jae
arpl
call
xor
sbb
pop
roll
sbb
add
pop
jl
add
xorb
aam
mov
dec
jo
or
push
test
rcrb
xchg
iret
mov
mov
fwait
insl
mov
aad
gs
int
or
sbb
scas
inc
shrb
cmc
fucomi
mov
mov
ret
lcall
test
dec
divb
ja
cmp
mov
push
sti
dec
jno
nop
mov
mov
jge
jg
aaa
push
je
lods
pop
mov
mov
pop
mov
jmp
or
jle
sbb
cmp
popf
pop
das
ret
mov
insb
add
lea
mov
mov
sub
mov
cmp
lock
cli
sub
shrl
inc
mov
dec
jnp
mov
leave
sbb
pop
sub
aam
test
ret
push
sbb
mov
mov
orl
mov
xchg
push
aam
mov
mov
mov
inc
or
adc
or
adc
rcl
pop
jmp
enter
aas
sbb
jle
adc
mov
aas
ret
xor
and
insb
fcoml
push
jp
mov
jecxz
dec
inc
rcll
push
in
stos
adc
popf
dec
mov
mov
aad
mov
ret
cmp
iret
out
mov
out
and
test
adc
shr
stc
mov
add
or
dec
ret
push
cltd
dec
fadd
adc
and
cltd
push
xchg
pop
rcll
aas
ror
cmp
outsl
out
test
cmp
fildll
mov
sbb
jl
leave
enter
or
lock
lock
add
push
aas
xor
pop
sbb
rcll
mov
xchg
fsts
loop
sbb
popa
mov
inc
cld
jp
xchg
jb
and
arpl
xchg
pop
notb
xor
xchg
leave
adc
shrl
xchg
fwait
push
xchg
and
in
out
cld
dec
pop
and
sti
ja
inc
add
adc
inc
lea
cwtl
xor
jns
inc
jbe
sbb
cmp
movsb
mov
roll
test
lret
fmull
push
pop
sub
pushf
xor
xor
xchg
lcall
and
or
adc
test
adc
out
stos
push
insl
add
dec
dec
ljmp
hlt
leave
sbb
lods
dec
xlat
movsl
in
mov
pop
sub
push
add
mov
xchg
movsb
outsb
sbb
xor
ja
mov
ret
arpl
xor
xor
ja
les
adc
movsb
jo
dec
dec
sbbl
pushf
push
cmp
jne
or
dec
js
mov
outsl
call
fisubl
mov
aad
js
rorl
mov
mov
and
fimuls
mov
push
lcall
rclb
fs
push
cwtl
pusha
adc
sarb
pop
add
xor
xchg
push
dec
stos
aam
cmp
sbb
add
ret
int3
pop
mov
sbb
popa
lcall
roll
rcrb
les
cmp
mov
call
push
pop
and
push
jne
imul
sub
pop
sbb
stc
xor
je
mov
aad
mov
or
or
mov
or
cmp
out
mov
div
in
sbb
adc
rolb
pushf
jle
lret
push
jmp
mov
and
inc
mov
int3
mov
movsb
lahf
sbb
repnz
rcrl
jmp
push
lcall
sbb
mov
cld
scas
out
test
pushf
pop
add
jp
dec
nop
sbb
jbe
ss
inc
xchg
add
in
pop
or
sub
inc
jns
add
pop
repnz
xor
mov
xchg
ja
sbb
test
sbb
mov
mov
mov
pop
mov
stos
xchg
pop
jmp
dec
int3
lock
sub
xchg
mov
arpl
cmp
or
pop
aad
in
cmc
push
lcall
inc
ficoml
gs
jne
test
xchg
or
pop
aad
in
cmc
push
lcall
inc
ficoml
gs
jne
test
xchg
inc
movsl
inc
mov
lds
loop
jp
push
inc
adc
stos
inc
ficoml
fidivl
sbb
lds
dec
in
cmc
push
gs
fnsave
push
fnsave
push
mov
sub
mov
andl
andl
andl
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
mov
lea
push
movl
movb
movl
movb
movl
movb
movb
movl
call
leave
ret
test
xchg
movsb
push
mov
jo
mov
push
add
xchg
inc
out
divl
test
xchg
movsb
push
mov
les
jbe
inc
hlt
xor
adc
and
cmp
fs
je
popf
lea
mov
data16
jbe
inc
hlt
push
sbb
jecxz
clc
inc
mov
and
movsb
push
ret
cltd
and
and
insb
fisttpll
cmpl
fsubrl
out
jbe
sti
popa
into
popa
faddl
jns
adcl
lods
fs
xchg
push
roll
sub
outsl
popf
xor
push
cmpsb
jmp
sbb
mov
lret
je
test
nop
inc
cmp
jbe
dec
cmc
mov
pop
adc
adc
mov
aam
sbb
sub
push
sbb
in
int3
cltd
test
pop
shlb
mov
scas
fs
jg
and
mov
std
pop
int3
cld
cmpsb
cltd
mov
repz
je
dec
lea
movsb
push
mov
shll
jbe
inc
in
push
sbb
xchg
idivb
je
call
inc
rclb
mov
test
js
push
aad
out
xchg
xor
jmp
cmc
pop
lret
dec
les
and
cmpsl
js
ret
jno
and
jne
inc
cmpl
adc
clc
gs
mov
in
hlt
push
add
adc
and
xor
inc
out
mulb
test
xchg
movsb
push
mov
les
jbe
inc
hlt
push
add
adc
and
xor
inc
out
mulb
test
mov
shrl
mov
in
int3
or
insl
jg
jae
xlat
ss
adc
xchg
andl
test
loop
sbb
sub
pop
adc
movb
pusha
pop
jp
imul
xchg
aam
loope
repz
push
insb
xor
mov
add
pop
pushf
add
mov
mov
jo
ds
jns
jmp
mov
nop
or
dec
inc
ds
mov
push
repz
and
sub
dec
sub
out
sbb
or
push
into
mov
mov
stos
jno
sub
mov
repz
push
xchg
lcall
cmc
sub
scas
pop
iret
mov
xchg
fimuls
stc
push
lret
dec
pop
sub
mov
int3
out
jbe
push
sbb
dec
mov
pop
movsl
jge
push
roll
cmp
ror
jno
fwait
xchg
int3
cmp
bnd
mov
or
les
test
xchg
movsb
xor
std
hlt
dec
lock
xor
in
lock
das
pop
sub
mov
inc
mov
fs
sbb
es
cwtl
icebp
push
jnp
stc
push
pop
std
pushl
push
pop
cmp
scas
xchg
mov
fst
in
mov
and
test
mov
addr16
ljmp
ss
ljmp
out
sbb
lahf
xor
aam
repnz
fildl
cmp
or
mov
add
out
add
lcall
cmpsl
push
hlt
adc
rcll
cwtl
sub
xchg
adc
sub
hlt
mov
jbe
or
xor
cmp
imul
in
dec
test
in
jge
test
sbb
xlat
jge
dec
lods
in
pop
cmc
push
movsb
add
stc
push
push
xchg
pop
loope,pt
xchg
outsl
jecxz
add
xchg
pop
pop
ljmp
xlat
std
mov
mov
mov
test
mov
dec
mov
out
mov
daa
popf
out
dec
jns
jmp
adc
out
rorb
data16
clc
testl
push
dec
cli
add
imulb
sbb
cmp
jnp
mov
xor
sbb
fstps
imul
adc
push
rcr
imul
fisttpll
test
push
pop
hlt
ss
popa
imul
mov
or
push
or
addr16
out
std
in
add
call
ret
xchg
mov
cmp
mov
push
mov
xchg
add
test
xlat
sub
add
mov
cmp
jle
inc
or
jmp
dec
into
jp
icebp
add
lcall
out
insb
add
pop
push
lea
dec
insl
fsts
test
cli
arpl
or
mov
xor
inc
pop
inc
sub
xor
add
push
cmp
pop
call
mov
sub
xor
iret
cmp
xchg
sbb
pushl
lcall
push
daa
xor
push
jo
xor
xchg
lahf
dec
jno
repnz
lods
mov
cmp
lret
jb
xchg
rol
cmc
dec
popl
fldz
inc
sarl
mov
cmpsb
mov
scas
inc
inc
stc
arpl
rcrl
adc
adc
mov
popf
pop
iret
lret
mov
test
sub
rol
push
jge
cmp
addr16
jns
adc
jns
mov
cmpsl
cwtl
cmp
cmp
push
insl
xor
mov
and
add
or
je
pushf
dec
adc
into
push
jle
lret
dec
xchg
iret
xchg
bound
dec
lea
pop
mov
push
dec
lds
push
mov
lods
and
pusha
sarl
inc
mov
or
xchg
jp
test
test
gs
add
push
aam
pop
fcmovu
sbb
adc
xchg
fildl
cmpsb
int
sbb
xor
dec
or
ret
push
daa
xor
xor
cmp
rclb
push
jge
cmp
out
outsl
aam
and
lds
mov
aad
sbb
repnz
cltd
fstpl
adc
mov
aam
movsl
test
loopne
popf
repnz
out
jg
gs
add
daa
int3
mov
aaa
imulb
nop
scas
or
lahf
aad
int3
inc
inc
push
pop
or
inc
mov
xchg
cwtl
mov
inc
push
pop
pop
xchg
repz
sbb
mov
outsl
sarb
repz
or
jb
cmpsb
jge
lret
jecxz
addr16
inc
movsl
mov
nop
ficoml
mov
sbb
and
inc
pop
imul
cmp
mov
xchg
subb
cs
push
dec
iret
cmc
push
and
outsb
in
xor
call
mov
sbb
xor
stc
sub
xor
lcall
or
cli
xor
dec
das
mov
mulb
cwtl
test
rcl
repnz
nop
mov
int
outsb
push
ds
pop
rol
adc
call
outsl
sub
sub
mov
fisttpl
sbb
push
mov
sbb
ja
out
mov
push
imul
aad
adc
sbb
inc
cmp
shrb
jmp
fnsave
mov
call
test
add
sbb
out
jo
fwait
mov
iret
loope
fidivl
inc
call
flds
xchg
out
iret
sbb
aam
pushf
adc
or
adc
rolb
cwtl
mov
or
fistps
and
lock
cmp
subb
push
mov
repz
mov
mov
xor
arpl
pcmpgtd
call
lds
push
mov
xor
movsl
into
decl
cwtl
stos
jb
sub
es
iret
push
add
inc
aas
aam
fwait
adc
lock
adcl
sub
add
clc
lcall
push
cmp
stc
out
out
mov
pop
inc
pop
enter
fistl
sbb
mov
adc
loope
xchg
or
loopne
adc
adc
jp
imul
das
fs
mov
call
inc
jmp
cli
inc
std
out
pop
insb
mov
and
in
mov
xchg
sub
pusha
sbb
push
jns
mov
fcomip
xorl
xor
push
mov
into
addl
aaa
xor
scas
adc
movl
popf
dec
es
cwtl
mov
lock
xlat
lods
push
imul
dec
insl
les
pop
outsl
fsubl
push
dec
push
ret
pop
lods
jbe
pop
filds
or
dec
dec
cli
add
jmp
into
mov
jnp
lcall
pop
cmp
pop
aam
sub
mov
jnp
cltd
mov
outsl
mov
aas
or
mov
popa
add
mov
aas
je
jno
cmp
fldenv
fistpl
shlb
jg
adc
inc
push
mov
movsb
fdivp
cs
jno
mov
imul
inc
jo
jp
mul
adc
imul
lods
xor
mov
mov
adc
and
hlt
sarl
das
movsb
orl
mov
pop
and
adc
cmp
out
adc
divb
cltd
mov
cltd
dec
notl
jo
jge
shl
jb
inc
pop
jmp
cmc
pop
xchg
daa
jnp
sub
rcrl
adc
jnp
fdivl
adc
jmp
cwtl
sbb
push
lcall
sbb
jae
fs
lea
fstpt
or
jp
icebp
xor
xlat
sete
mov
pop
jmp
cmpsl
test
xchg
jno
jmp
rorb
jne
sbb
cmp
andl
out
mov
pop
idivl
jbe
adc
xchg
push
cmp
rol
push
jb
adc
inc
lret
or
cld
mov
outsl
shrl
clc
jb
sub
pop
shl
aam
mov
xchg
dec
jnp
mov
adcl
int3
in
sar
pop
sbb
dec
les
inc
pop
pop
jns
cmpsb
dec
dec
ljmp
mov
bound
jge
lret
testb
fs
xor
or
jmp
clc
push
fldcw
mov
mov
ljmp
mov
push
insl
notb
in
pop
das
cli
cmp
jmp
mov
lods
into
aas
repz
pusha
les
imul
cmp
js
jg
sbb
mov
cltd
pop
sti
sbb
inc
push
xchg
xor
xchg
loop
pop
adcl
cmpl
push
movsl
subb
and
int
lods
insb
cmp
je
add
adcl
in
loope
mov
jmp
and
out
fwait
pop
or
lret
repnz
cmc
pop
popa
push
add
aam
call
xchg
loop
sbb
sbb
pop
aad
shll
add
popa
and
aas
ljmp
mov
inc
push
xchg
iret
fimuls
dec
lahf
jae
or
push
iret
adc
pop
frstor
mov
shrb
insb
or
mov
jb
sub
xchg
gs
js
fdivs
mov
push
aaa
jg
pop
leave
lea
mov
and
mov
dec
insl
mov
jecxz
mov
mov
jno
jb
lahf
sbb
out
movsl
xchg
roll
hlt
or
ljmp
in
mov
cltd
addr16
movsl
aad
or
ret
mov
push
pop
gs
jno
sub
add
xchg
in
cld
cwtl
jo
iret
push
or
push
xchg
outsl
jp
adc
jmp
mov
sub
testl
push
data16
adc
fwait
sbb
push
or
push
lods
xorb
imul
aas
ss
dec
mov
test
jge
adc
add
div
xchg
addr16
xchg
add
push
stc
jns
and
mov
add
ss
push
cli
mov
fmuls
in
iret
popf
mov
cld
movsb
les
cmc
clc
push
xchg
mov
lods
or
lret
push
clc
jo
sbb
loop
subb
and
clc
stc
mov
and
inc
stc
and
mov
loope
push
mov
add
sub
add
xchg
rorb
and
sbb
pop
aam
ret
scas
and
insl
mov
jo
cli
adc
rclb
icebp
sbb
mov
fcmovbe
out
out
enterw
ja
orl
jl
add
xchg
testl
sub
xor
or
push
or
jnp
pop
out
pop
adc
jo
movsb
or
in
xchg
pop
outsb
mov
add
bound
and
fnstsw
inc
das
outsl
jge
popa
inc
fdivrs
fstp
jg
cld
incb
push
mov
das
or
jmp
adc
cld
pushf
pop
fnclex
mov
mov
inc
das
push
sub
dec
cmp
mov
nop
ds
pop
push
xchg
push
adc
xchg
test
push
push
or
adc
pushf
filds
pop
call
jnp
xchg
rol
fcomip
mov
mov
cmp
movsb
clc
and
icebp
mov
daa
pop
cmp
mov
cmp
mov
rep
and
adc
arpl
outsl
push
jl
pop
stc
fisubs
outsb
xor
sub
jg
pop
inc
push
mov
mov
mov
jb
lods
loopne
mov
sahf
nop
jl
loopne
stos
add
imull
leave
adc
add
into
popf
imul
inc
xor
and
cmp
mov
cmp
xchg
push
sub
sub
test
dec
sub
pop
insl
loope
mov
adc
loop
loop
and
push
xchg
jns
incb
jg
sti
in
ror
mov
push
std
in
outsl
xchg
psllq
inc
insl
push
xchg
sbb
rorb
dec
cli
inc
xorb
lds
jle
xchg
movsb
adc
or
mov
mov
add
jl
into
xchg
dec
cld
push
enter
push
lock
xor
xor
arpl
xchg
scas
mov
push
adc
pop
mov
lds
daa
lcall
sbb
mov
negb
xor
cmp
lods
sbb
mov
jp
sbb
mov
in
hlt
or
dec
adc
mov
lods
mov
fwait
shl
mov
sub
xchg
into
pop
mov
jb
cmp
jecxz
mov
in
bound
sti
iret
dec
lret
lods
scas
pop
test
fldenv
mov
sbb
dec
sub
cmp
out
ljmp
shll
imul
dec
seta
cli
cwtl
push
push
add
xor
shrl
int
leave
out
jb
push
xchg
jg
popa
lods
clc
sbb
dec
cmpsl
add
push
in
or
and
ja
ds
mov
cmp
and
xchg
add
ret
jne
and
fwait
pop
lret
cmpsb
cmp
ja
jmp
and
pop
fwait
lods
jge
lret
mov
jecxz
popa
pop
or
cmp
mov
mov
out
mov
xchg
hlt
cmpl
sbb
les
mov
cmc
sbb
and
movsb
add
and
mov
jnp
dec
mov
lods
mov
cmp
icebp
stc
cwtl
xlat
add
lret
add
mov
out
in
cli
mov
cmp
test
and
mov
add
jmp
addl
mov
and
movsl
lret
push
push
stc
mov
inc
dec
and
pop
pop
pop
iret
mov
mov
getsec
lock
sti
mov
mov
inc
jle
lcall
lods
push
fistpl
rolb
in
repz
leave
rcll
cmp
test
mov
jns
xor
pop
insb
pop
pop
mov
rclb
cmpsl
mov
hlt
aad
dec
sub
insb
mov
test
inc
xchg
cmc
sti
cs
dec
pusha
ss
sub
xchg
inc
dec
movsb
je
mov
repz
cmp
sbb
sub
sbbb
js
sbb
in
cmpsb
ss
push
cmp
lea
ljmp
sbb
mov
pusha
and
sbb
add
icebp
dec
leave
loopne
mov
dec
repz
push
sub
gs
lock
mov
cmp
mov
rep
mov
jp
loope
inc
xchg
and
sbb
jmp
push
inc
push
les
in
inc
cmp
dec
leave
or
pop
jmp
cmp
aaa
cli
and
add
inc
das
xchg
mov
fdivrl
or
rcll
sub
daa
loopne
sub
cs
lods
xchg
inc
adc
orb
test
mov
mov
sbbl
enter
pop
aam
jno
rolb
int
rcll
mov
sub
mov
insl
insl
adc
xor
dec
pop
xchg
push
popa
jae,pt
xlat
jl
je
and
dec
outsl
call
mov
pop
cmp
push
cmp
cmp
jg
imul
mov
in
jns
mov
out
out
mov
or
jae
ret
and
add
lds
test
popl
add
jp
sbbb
loope
and
sub
imul
enter
in
or
out
rorl
push
cwtl
pop
jl
xor
cmpsl
xchg
sub
pop
lds
sbb
ja
inc
xor
mov
pop
sub
push
nop
sbb
or
out
in
in
jge
or
in
aam
out
jo
andl
mov
sub
sub
jo
out
out
pushf
sbb
cli
shl
add
mov
pushf
mov
add
xchg
adc
mov
cmpsl
mov
cs
fidivrl
pop
xor
xchg
rcrb
sbb
das
es
sarb
xchg
inc
lahf
xor
inc
test
push
test
pusha
dec
call
adc
jge
or
pop
adc
stc
pop
sub
int3
push
in
stos
fwait
xchg
enter
adc
xchg
mov
and
sbb
xor
mov
push
shr
sbb
pop
out
cmc
pop
sub
adc
mov
outsl
pop
scas
xlat
mov
insl
pushw
movsl
imul
push
or
les
and
sub
nop
dec
ljmp
lds
daa
imul
adc
mov
in
lea
test
imulb
adc
fs
pop
loopne
cmp
stos
push
jg
cmp
dec
push
lret
mov
mov
adc
sbb
js
push
lret
icebp
insl
pop
shll
cmpsb
mov
mov
mov
xchg
jae
push
in
or
jbe
mov
int
repnz
dec
add
jmp
and
incb
inc
sarl
popa
dec
inc
cmpsl
fildll
mov
cmp
jns
mov
test
and
js
inc
aaa
jne
mov
aas
adc
xchg
dec
in
jle
push
push
jae
jp
nop
xor
mov
jb
mov
lret
push
mov
jg
inc
add
jle
mov
push
leave
sbb
addr16
js
lods
cltd
bound
cmpsb
loop
jbe
and
cmp
jb
stos
jns
inc
xchg
test
add
jg
popf
push
xchg
sbb
cmpb
push
xlat
push
and
outsb
movsb
mulb
loopne
ret
imul
adc
mov
mov
push
mov
mov
hlt
stos
lods
mov
pushf
jmp
mov
push
push
andb
add
dec
movsb
out
dec
or
jnp
adc
decb
rol
lret
test
shll
add
fwait
mov
and
and
dec
scas
insb
mov
stos
push
pop
lea
outsl
mov
xchg
adc
inc
fcmovu
mov
add
dec
adcb
mov
icebp
leave
and
jb
jle
outsb
or
stos
mov
addl
add
and
lods
ja
dec
stc
push
shr
or
xor
shlb
push
mov
idivl
adc
adcl
pop
insb
jbe
jg
mov
sbb
jbe
sub
adc
rorb
pop
jns
sbb
inc
xor
rorl
xchg
sub
mov
adc
pop
aaa
loope
or
inc
icebp
sbb
and
or
icebp
mov
adcl
cli
call
push
aad
and
and
clc
lods
loopne
lds
dec
adc
inc
popa
sbb
cltd
loope
xchg
inc
lods
cs
insb
pop
jmp
sub
popa
out
popf
rolb
das
outsl
xchg
xor
sbb
sbb
cltd
fwait
mov
push
test
add
and
add
je
jne
cwtl
xchg
lods
andb
add
dec
cmp
xor
pop
into
fidivs
jecxz
or
xchg
pop
jecxz
jg
push
test
repnz
push
int3
adc
sub
in
mov
add
js
jns
cmpsl
push
fneni(8087
popf
pop
pop
stc
in
cmp
sub
inc
lods
outsb
mov
xchg
into
roll
mov
mov
inc
add
cmp
cmpsb
fstl
pusha
ds
cmpsb
sub
pop
or
aad
xor
sarl
sti
pop
sti
mov
push
out
stc
dec
mov
movsb
adc
fsts
into
mov
in
loop
ss
inc
jb
lcall
xorb
movsl
pop
xchg
test
leave
push
mov
inc
scas
sub
ret
xchg
jbe
sbb
int
jp
fwait
and
xor
popf
push
stos
aas
scas
dec
ss
subb
ret
jp
xchg
ljmp
addb
scas
pop
push
dec
sub
mov
rorb
add
clc
insl
fsubrp
popf
gs
fs
mov
mov
mov
test
cmp
cmp
gs
pop
or
out
mov
pusha
adc
xchg
inc
push
and
jb
and
insb
addl
cmpsb
enter
ret
lcall
nop
out
sbb
push
fsubrs
xchg
sbb
lret
sub
jne
hlt
popf
aam
fimull
lods
aad
out
cmpsl
int
adc
mov
or
xchg
mov
cmp
adc
jg
adc
inc
data16
fnstenv
lds
es
scas
not
mov
lock
sbb
scas
mov
inc
mov
out
mov
and
adcl
add
mov
rolb
add
int
jp
or
mov
push
aam
xor
cld
clc
daa
test
in
es
or
jmp
ficoms
push
les
jbe
inc
hlt
push
add
adc
and
xor
inc
out
mulb
test
xchg
movsb
push
mov
les
jbe
inc
hlt
push
add
adc
and
xor
inc
out
mulb
test
xchg
movsb
push
mov
les
jbe
inc
hlt
push
add
adc
and
xor
inc
out
mulb
test
xchg
movsl
push
mov
data16
fs
je
sti
cmpsb
jmp
mov
fmull
fwait
cmp
cmp
or
sbb
add
jae
inc
lcall
add
adc
jecxz
repz
or
sbb
dec
xchg
pop
arpl
push
lcall
adc
jecxz
repz
adc
add
push
xchg
inc
arpl
xorb
jge
dec
stos
push
xchg
dec
pushf
jge
stos
sub
push
mov
mov
mov
mov
mov
int3
test
and
mov
push
subl
pop
out
loope
test
sub
into
lcall
add
in
xchg
sbb
js
or
jle
cmp
jp
jge,pt
arpl
sbb
cmp
cmp
cli
data16
fisubl
or
mov
adc
movsl
arpl
arpl
push
fnstsw
adc
test
dec
mov
pop
jae
mov
scas
xorb
jecxz
push
and
test
xor
pop
push
jb
jl
sbb
xor
push
mov
mov
jnp
mov
sbb
add
push
xchg
inc
arpl
push
andl
xor
add
adc
cmpsb
or
adc
shlb
and
ja
and
aas
cmc
inc
xchg
inc
lret
loopne
cmpl
in
fisttps
cs
ss
shll
add
push
flds
addr16
jno
adc
stos
imul
mov
dec
xchg
pop
arpl
push
lcall
adc
jecxz
repz
or
sbb
dec
xchg
pop
arpl
push
lcall
adc
jecxz
push
mov
jns
sub
mov
out
push
xchg
xor
xor
or
pop
roll
push
jbe
fcom
mov
pop
clc
xchg
in
cwtl
push
fbld
mov
stos
repz
sub
mov
in
repnz
sahf
cli
pop
hlt
bound
repnz
fstl
je
outsl
mov
lret
cmpsb
mov
popf
mov
xor
cmp
sbb
sti
repnz
loop
in
loop
push
jo
les
jb
mov
push
inc
jecxz
cmp
les
movsl
mov
popa
jl
adc
movsb
mov
gs
enter
cs
adc
jmp
xor
pop
pop
xor
in
jl
xor
mov
add
or
push
pop
mov
gs
mov
out
enter
fldt
push
cmp
iret
mov
xchg
and
stos
push
cmp
aam
ret
bound
jno
outsl
xor
jne
xchg
or
addl
mov
mov
leave
lcall
push
cmp
mov
imul
and
and
push
test
call
adc
incb
mov
stos
mov
hlt
inc
xor
mov
jl
sub
and
push
arpl
imull
iret
movsb
cmp
pop
lret
outsl
mov
out
scas
mov
dec
stos
stc
repnz
push
orl
bound
lcall
xchg
lcall
xchg
aam
xlat
sub
pusha
jl
dec
mov
daa
dec
xchg
add
std
sbb
lock
add
push
dec
and
int
jnp
cmpsl
notl
cmpsl
xor
push
inc
xchg
xor
mov
add
clc
out
mov
lock
pop
sbb
xchg
cltd
sbb
dec
xchg
mov
movsl
dec
leave
push
data16
imull
push
add
iret
dec
sub
in
sti
inc
fstpl
insb
in
aaa
clc
add
rorb
imul
fwait
or
or
push
fadds
popf
lods
mov
mov
dec
inc
cmpsl
lds
fnstenv
into
jb
and
xchg
test
xchg
or
sti
jmp
add
dec
out
imul
jbe
sahf
cmc
inc
rclb
cmc
out
jmp
xorb
in
mov
stc
lods
inc
fists
adc
sub
push
add
repnz
push
mov
cwtl
repnz
jp
leave
inc
fldenv
scas
mov
test
xor
mov
pushl
ficoms
mov
and
adc
xor
xchg
lods
push
call
stos
pop
dec
push
cmpsl
mov
lods
in
xchg
cli
gs
lcall
aam
push
cmp
loop
lds
dec
jnp
pop
inc
aam
stc
bound
cmp
enter
xchg
xchg
popl
loopne
fs
loopne
xorb
inc
cmp
mov
movsl
xchg
mov
mov
jge
mov
pop
and
movsl
inc
sahf
jbe
fwait
scas
hlt
pop
aas
inc
stos
sahf
pop
dec
dec
mov
insb
inc
cmp
pop
lds
xchg
xchg
xor
mov
mov
mov
stc
sbb
mov
inc
mov
or
cltd
mov
pop
ds
sub
mov
and
push
leave
push
cmpsl
outsb
lret
cld
mov
jecxz
and
jmp
jnp
call
adcb
stos
jae
mov
push
pop
adc
fwait
mov
rol
xor
sbb
push
xor
lcall
mov
call
jecxz
sti
and
xchg
leave
inc
in
pusha
shlb
pop
rclb
out
enter
je
out
push
out
in
xchg
add
stos
adc
adc
idivb
fs
xchg
inc
cmp
icebp
or
fmuls
dec
out
xchg
imul
mov
sub
call
pop
rcr
sahf
enter
mov
shlb
jle
jbe
popa
imul
sbb
movsl
pop
call
and
addb
iret
enter
lods
cld
fcmovnu
cwtl
cmp
ret
mov
jg
loopne
cmp
xchg
mov
mov
pop
ljmp
rcrl
lea
mov
fcomps
inc
cli
loop
push
daa
repnz
jp
mov
repnz
ds
das
inc
mov
icebp
dec
es
out
dec
ds
adc
cs
insb
mov
daa
jecxz
subb
in
cmc
dec
arpl
push
in
sub
adc
dec
insl
jl
repz
sub
sub
xorl
hlt
xchg
xchg
das
stc
push
rcl
fnstsw
cmp
pop
push
inc
stc
mov
lock
xchg
mov
sbb
shlb
mov
add
cmp
out
inc
fwait
jp
in
push
dec
daa
jae
lock
mov
sub
and
add
xchg
jne
sbb
sarb
xchg
in
jg
daa
jp
in
jbe
mov
lock
or
in
dec
mov
fcompl
pop
lret
shld
sub
cmp
xchg
mov
sbb
xchg
enter
push
arpl
jnp
dec
dec
pop
cmp
jge
cmp
je
in
adc
sbb
sahf
scas
das
clts
rolb
stc
call
xchg
scas
in
mov
pushf
popa
in
push
jns
lds
insl
jecxz
sbb
jmp
jmp
cltd
pusha
vmaxsd
jecxz
lock
pushf
test
sti
mov
sbb
sub
cwtl
jno
inc
stos
add
ss
push
adc
sub
or
and
popf
stc
aas
sahf
and
ret
pop
and
add
pusha
jecxz
xlat
gs
es
sub
in
pop
xchg
fcoml
inc
lret
adc
test
add
or
add
mov
jnp
scas
out
aam
ljmp
mov
jmp
movsl
inc
adc
cmp
add
jnp
icebp
jae
mov
adc
test
dec
adc
sbb
dec
mov
add
inc
repnz
call
lods
mov
aam
ss
dec
int3
fists
pop
in
aaa
test
fadds
sbb
imul
jmp
adc
xor
fs
shlb
mov
inc
aas
adc
sub
xchg
xchg
aas
out
adc
in
xchg
mov
rclb
int
xor
mov
fwait
pushf
cmpsl
loopne
jmp
cs
out
ficomps
jg
cmpsb
and
leave
fildl
sahf
orb
aam
pop
adc
cmp
loope
ss
dec
xor
mov
adc
mov
decb
mov
xlat
arpl
push
lcall
stc
out
sub
xor
cltd
lock
cmp
mov
jecxz
mov
inc
or
loope
stos
push
shlb
mov
mov
push
push
mov
mov
cmp
aad
cmp
fbstp
dec
xchg
and
ljmp
pop
lock
or
sbb
icebp
sub
loopne
fwait
and
lcall
ds
xlat
xor
and
mov
cs
popa
jno
sub
dec
jno
dec
mov
das
jg
cwtl
and
and
inc
jge
dec
inc
insb
insb
sbb
sub
leave
les
and
sbb
cmp
or
stc
push
mov
je
fstl
rcll
mov
adc
jns
push
push
jbe
dec
out
cmp
and
adcb
sub
dec
ja
push
mov
imul
mov
xchg
sub
jns
xor
clc
outsb
xor
cld
cmpb
pop
or
jmp
popf
cmpsl
jnp
popa
add
jbe
imul
fistps
ds
lcall
out
adc
cltd
ss
jae
jge
shll
sub
pop
mov
jecxz
and
fidivrs
mov
loop
iret
or
sub
es
cmovb
xor
lock
and
and
ss
xor
idivb
adc
inc
fs
int3
lods
ss
loopne
adc
leave
stos
imull
push
test
dec
dec
test
lret
sar
fbld
xchg
pop
fisttpll
test
fadd
and
or
arpl
ja
push
jge
popa
cmp
imul
dec
adc
xchg
nop
popf
fnsave
pop
out
adc
mov
in
inc
inc
ret
pop
sub
pushf
inc
arpl
lock
test
andb
fsubrl
cmp
cwtl
cld
stc
pop
inc
ds
insb
leave
jbe
inc
dec
mov
lahf
jmp
xor
popf
mov
xchg
mov
imul
rcrb
mov
out
push
pushl
movsb
lds
add
sti
imulb
rol
jne
insl
pop
mov
shr
sbb
mov
cmp
add
addr16
push
mov
cmp
sub
sbb
lret
fsts
dec
test
ss
repnz
cli
mov
aas
les
out
cmp
ljmp
jle
inc
mov
and
or
mov
cmc
out
xorb
gs
xchg
insl
xor
mov
mov
pop
sub
lds
pop
cmpsl
adc
popf
arpl
mov
fsubs
je
jno
sub
or
xor
fnsave
movsl
in
sub
addb
or
fstpt
or
push
jg
add
fnstenv
mov
imul
mov
xchg
mov
mov
pop
test
scas
leave
or
jae
test
es
out
loopne
or
rorl
xchg
and
xor
xchg
icebp
nop
cmp
lret
mov
arpl
fdivrs
les
stos
imul
fsubs
lcall
gs
pop
sahf
subb
dec
lods
movsl
test
or
out
adc
mov
inc
sub
dec
leave
pop
sub
jb
lea
imul
push
mov
pusha
jl
aas
sbb
stos
pop
repnz
popa
xchg
pop
fidivrs
mov
lods
and
dec
jmp
and
adc
push
arpl
in
mov
lods
mov
data16
aaa
mov
sub
test
daa
lods
outsl
ret
dec
mov
out
jno
adc
inc
cmc
mov
inc
cld
ss
adc
mov
cmp
repnz
out
out
mov
icebp
inc
xor
dec
cltd
and
out
cmpsb
test
jmp
jp
cmp
push
mov
mov
pop
sahf
sbb
jns
arpl
out
sub
in
push
jno
sbbl
and
frstor
adc
insb
xchg
xchg
adc
movsb
sub
mov
nop
ja
add
imulb
lahf
lods
ret
cltd
mov
pop
push
adc
sub
lods
lret
xchg
mov
xchg
sub
mov
mov
scas
imul
in
notb
jnp,pt
mov
push
inc
aas
dec
xchg
jo
adc
cmp
mov
shl
push
or
mov
adc
scas
lea
push
hlt
pop
lods
cmpsl
test
aaa
ds
lods
adc
stos
das
loope
xchg
pop
push
mov
in
and
jns
das
ja
xor
xchg
xchg
sub
pop
cltd
into
adc
testl
xchg
jnp
pop
stc
fimuls
xchg
cmp
jecxz
in
lods
outsl
mov
jo
xor
pop
sub
adc
aad
rcr
adc
pop
push
cmp
std
jns
pop
and
dec
in
pop
jne
xor
add
pop
popf
in
dec
addr16
divb
sbb
leave
pop
jbe
xchg
lret
cmp
push
jo
lret
mov
push
rep
fimull
cmp
lret
jle
jge
fbld
cmp
push
or
data16
dec
or
sub
cld
pop
cltd
arpl
lds
test
jnp
lods
mov
add
adc
jbe
out
inc
jl
je
loope
jp
std
add
aaa
push
mov
xor
repnz
aad
mov
lock
push
aad
popf
push
sub
mov
les
add
cmpsb
cmp
mov
cmp
mov
je
int
push
adc
inc
or
cltd
pushf
sbbb
aaa
jg
lahf
add
test
add
sbb
mov
xchg
add
push
clc
in
and
sub
sub
mov
jo
ds
dec
inc
in
push
add
rorl
push
jo
gs
lahf
stos
loope
sbb
lret
push
pop
loop
inc
adc
sbb
cmc
mov
lods
scas
aas
add
xchg
fisttps
inc
inc
aaa
orl
xchg
repnz
dec
mov
in
inc
mov
adc
dec
xor
aad
test
pop
mov
mov
je
push
mov
pop
adc
scas
lea
imul
adc
shrb
sahf
dec
xor
pop
mov
add
push
jo
ss
cmp
or
inc
dec
stos
dec
jmp
in
pop
jge
pop
js
adc
sbb
mov
imul
out
pushf
fwait
enter
push
cmp
gs
popa
sbb
jmp
lahf
mov
xor
jp
push
popa
outsl
mov
xchg
fisubs
inc
decb
pop
pop
or
mov
pop
mov
ljmp
je
jmp
mov
jmp
cmp
mov
ret
cmpl
addl
xchg
add
pop
ret
dec
lods
inc
aam
sub
repz
icebp
nop
and
js
pushf
sub
xchg
dec
fldcw
xchg
adc
stc
sahf
rcll
in
fwait
inc
call
mov
add
xlat
data16
fisubs
jg
push
shll
inc
das
call
jge
pop
inc
jb
jmp
test
inc
or
adcb
pop
jmp
inc
xlat
xchg
cmp
out
dec
pusha
sub
jmp
repz
sub
xchg
jns
sbb
sub
and
inc
addr16
mov
sub
add
andb
adc
jmp
pop
cs
sub
xorb
pusha
push
pop
push
shll
sub
jne
jg
inc
arpl
and
mov
mov
bound
xor
inc
inc
popa
je,pt
je
icebp
test
mov
xor
pop
repz
call
cmpl
jg
or
sub
sub
ret
push
cmovp
bound
or
xor
add
seto
pop
xchg
arpl
inc
ja
or
inc
xchg
sbb
or
xchg
xchg
test
jnp
mov
add
jle
push
loopne
sub
add
repz
je
insl
call
mov
inc
jbe
test
out
popf
inc
imul
les
cmpsb
out
fcmovb
add
in
xchg
add
push
adc
js
cmc
cmp
jge
gs
or
jle
lret
mov
cmp
fadd
es
adc
daa
movl
adc
xchg
push
inc
push
int
xchg
cltd
stos
lret
cld
push
jle
or
aas
xchg
sub
nop
push
pop
nop
test
js
cld
or
mov
or
xor
rcll
mov
aas
dec
cmp
xor
cmp
lock
dec
push
sub
int
xor
xchg
dec
cmp
fdivrs
sahf
xor
call
hlt
out
orb
xor
pop
pop
out
jbe
jb
aad
adc
arpl
out
cmp
aaa
out
add
xchg
ljmp
sbb
test
loopne
or
mov
std
or
mov
ficoml
outsl
je
dec
mov
shlb
dec
push
pop
or
shll
adc
inc
and
out
xlat
es
stc
sbb
lcall
mov
mov
jp
mov
pop
mov
out
xchg
and
outsb
movsl
jp
dec
rolb
push
hlt
push
pop
jo
inc
add
mov
jle
repnz
push
lret
aaa
mov
inc
dec
out
bound
mov
aaa
fs
jge
mov
cmpsl
inc
sahf
ficomps
stos
xchg
orl
cmp
inc
xor
sub
mov
cli
clc
js
push
sbbl
mov
sub
push
or
sbbb
cmp
add
dec
mov
dec
pop
xchg
push
mov
mov
jge
shl
push
cmp
movsl
sub
in
sti
or
sub
mov
pop
movsl
add
fldl
or
aam
insl
js
pop
dec
repnz
scas
adc
mov
mov
cwtl
push
mov
cs
sub
fs
cmpsb
and
bound
in
mov
call
ret
pushl
push
mov
lea
dec
vpmacsdql
gs
mov
mov
out
movsb
sub
imul
lcall
sub
sub
push
andl
lods
mov
lock
mov
xor
cltd
movsb
mov
pop
pop
cmpsl
mov
mov
cld
cld
push
gs
lcall
sti
cmc
leave
enter
adc
cmc
xor
fstp
cmp
cmpsb
dec
and
xchg
fsubs
int3
inc
xor
ljmp
xor
or
cmpsb
leave
xlat
sbbl
insb
loopne
xchg
jb
ljmp
and
popf
movsl
outsl
addr16
pushf
cmc
mov
pop
outsb
mov
lahf
lret
push
mov
mov
rol
popa
xchg
stos
sbb
jno
lea
loope
ja
mov
inc
ds
pop
nop
adc
gs
sti
ljmp
cwtl
data16
push
inc
insb
imul
inc
cltd
jl
es
fimull
fisttpll
fsubl
jae
mov
jns
cld
mov
stos
push
mov
aam
stos
push
icebp
xor
inc
out
inc
ss
dec
pop
mov
pop
push
fisubs
pop
mov
xor
cmp
mov
jge
popa
fists
jl
test
movsl
xor
rolb
popa
ds
push
cmp
dec
jb
std
rorb
pop
mov
enter
sub
and
sbb
das
inc
js
mov
mov
jl
neg
call
and
int3
repz
xchg
lret
cmp
cmp
fldl
xlat
lock
mov
inc
mov
ror
call
pop
std
cmp
in
mov
lret
loope
scas
push
push
mov
push
repz
or
ss
dec
mull
lods
inc
pop
and
lods
in
jae
addb
es
mov
dec
dec
push
push
jp
repz
ss
xor
push
mov
pusha
inc
adc
add
fldenv
sbb
ret
push
repz
popf
inc
or
sbb
les
bound
mov
sti
movsb
dec
push
push
sbb
ss
sub
inc
mov
push
ds
or
in
aam
nop
outsb
cmc
ret
in
pop
mov
insb
call
push
in
pop
push
xor
lds
xor
lret
xlat
fcoms
daa
adc
into
cmp
fiaddl
movb
pop
cmpsl
mov
pop
jecxz
enter
xchg
adc
rcrb
push
jmp
outsl
ret
sub
cltd
or
jecxz
adc
lcall
sub
dec
adc
repnz
push
lahf
movsl
mov
in
orl
sub
pop
aas
lret
dec
sub
cwtl
out
push
js
aad
xor
lahf
jle
pop
xchg
sahf
mov
sub
mov
shl
dec
out
inc
mov
cltd
inc
movsl
icebp
xchg
ficoml
push
loop
out
cmp
in
loope
in
pop
arpl
outsl
push
jmp
xchg
sub
addl
loopne
addl
inc
adc
or
push
cli
jb
lret
mov
jno
inc
or
iret
push
mov
movsl
cmpsl
in
pushf
push
test
sub
sub
mov
movsl
fistpll
popf
jo
dec
push
xchg
aad
push
mov
mov
add
and
and
or
pop
dec
stos
les
fwait
push
fidivl
es
and
in
in
call
xchg
mov
push
loopne
sbb
clc
test
add
sahf
repnz
jmp
add
or
add
add
sbb
push
jb
xchg
in
out
gs
push
inc
push
ljmp
push
push
in
rcr
push
or
pop
jno
stos
out
popf
adc
andl
push
stos
into
cmpsb
adc
das
test
mov
lahf
and
test
es
jp
std
outsb
pushf
gs
cmp
addr16
or
outsl
mov
xor
js
pusha
cld
sbb
stos
or
test
dec
inc
xchg
add
dec
mov
inc
add
pop
int3
notb
inc
cwtl
dec
lea
adc
mov
pop
dec
push
hlt
and
movsl
or
and
and
add
lods
dec
leave
test
call
das
or
jecxz
cmp
rcrl
mov
dec
xchg
pop
arpl
push
lcall
adc
jecxz
repz
or
sbb
dec
xchg
pop
arpl
push
lcall
adc
jecxz
repz
or
sbb
dec
xchg
pop
arpl
push
fwait
and
xor
add
adc
jecxz
repz
or
sbb
dec
xchg
pop
arpl
push
in
push
bound
and
in
sbb
pop
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
lock
lcall
loopne
shrb
cmp
or
cmp
push
cmp
dec
inc
pop
push
mov
sbbb
lret
shlb
and
push
outsb
add
adc
jnp
dec
add
mov
mov
nop
repz
lock
int
sub
outsb
adc
aaa
pop
cmp
xor
mov
hlt
shl
push
adc
sbb
aam
mov
notb
inc
dec
push
xchg
stos
divb
xor
arpl
nop
jecxz
add
popf
adc
xlat
add
clc
mov
cld
movsb
insl
sti
and
add
sub
vcvtsd2ss
in
xchg
popa
aas
mov
mov
stos
xor
adc
and
das
push
sti
push
pop
or
inc
inc
out
or
fisttpll
inc
dec
roll
cmp
fcmovbe
lret
fadd
addr16
lcall
rol
jo
mov
mov
mov
imul
icebp
xor
push
lds
cmc
adc
adc
push
pop
push
push
mov
nop
cli
loopne
lock
shlb
and
xor
add
adc
bound
inc
inc
cmp
iret
fbstp
mov
sbbb
inc
js
je
push
add
add
inc
aas
adc
sbbb
cmpsb
mov
shrb
pop
cmp
popa
outsl
jg
add
sbb
and
mov
out
call
cli
lock
shrb
and
xor
add
adc
jp
dec
inc
pop
push
stos
mov
lcall
rcr
sub
cmp
or
sbb
push
jp
dec
inc
pop
push
stos
mov
repnz
lds
add
hlt
jns
sti
jns
mov
and
out
jbe
mov
push
jmp
add
xchg
pop
test
mov
push
or
mov
add
cmp
movsb
cld
xchg
cltd
pop
xchg
je
repz
mov
xor
cmpsl
lret
xor
and
inc
test
adc
pusha
xor
daa
add
or
pop
sbb
inc
cld
adc
mov
lds
shlb
add
leave
test
or
adc
adc
dec
push
stos
push
mov
nop
popa
test
mov
pop
or
rcl
arpl
push
ficoms
aaa
subl
je
push
call
adc
add
in
pop
daa
insb
das
testb
mov
xor
dec
dec
pusha
stc
jecxz
mov
je
cmp
push
stos
xlat
push
fwait
adc
pushf
pusha
iret
sbb
decl
add
mov
icebp
fimuls
loop
popf
adc
imul
aaa
adc
dec
fwait
add
cmpsl
xchg
pop
cli
ror
push
adc
pop
jbe
adc
test
out
inc
aad
adc
add
aad
inc
mov
in
adc
daa
push
mov
out
and
mov
out
mov
cmp
inc
jo
sub
jmp
cwtl
mov
mov
and
pop
cmp
ret
in
pop
hlt
or
enter
sbb
add
in
repz
push
add
dec
cmp
mov
adc
je
xor
xlat
jb
shrl
fnstsw
xchg
or
xor
sbb
and
fcomi
cs
mov
adc
pop
add
mov
inc
int
jg
cmp
mov
movsb
sub
js
addr16
ret
xor
jne
xor
not
inc
out
into
sub
or
or
inc
scas
and
sbb
and
sbb
iret
jecxz
and
outsb
mov
ror
xchg
sbb
cmc
and
xor
bound
dec
cmpsb
in
mov
andb
sub
loopne
adc
cwtl
sar
lock
mov
adcl
test
popf
or
cld
rcl
xchg
mov
mov
push
sarb
orl
shrb
and
and
pop
imul
xchg
and
fildl
xchg
scas
adc
sti
dec
or
popa
mov
test
and
push
addr16
sub
mov
fmulp
ffree
ret
lahf
mov
es
jbe
rcll
xchg
mov
pop
pusha
mov
popf
imul
push
test
cmpsl
add
dec
ficompl
andb
nop
stos
cmp
leave
mov
push
mov
fistps
repz
xlat
repz
movsl
mov
sub
mov
jo
dec
fwait
xchg
stos
and
jge
mov
or
pop
iret
ljmp
sbbb
mov
cmp
pusha
loop
fs
lcall
xchg
imul
movsl
clc
jmp
orl
sbb
jp
call
andb
in
setge
lods
fisttps
aad
shll
ja
movsb
out
outsb
test
sub
mov
sub
fwait
inc
std
shrl
sbb
xor
pusha
into
mov
add
repnz
ficoml
repnz
call
fcompl
andb
cmp
ljmp
js
fsubrp
sbb
fstl
add
ja
pop
fcompl
push
push
mov
mov
sbb
mov
mov
stos
jb
or
sti
js
dec
mov
jg
push
shll
shrb
cmpsl
sub
dec
adc
adc
cld
mov
sti
add
or
jno
add
add
cmp
sub
add
jae
add
pop
clc
mov
testb
jb
mov
push
pop
fidivs
js
stos
pushfw
mov
add
scas
outsl
xchg
inc
lea
aas
fsts
sub
pop
adc
xchg
into
jp
ss
mov
pushf
push
or
out
jo
neg
pop
popf
jecxz
sbbl
cmpb
ljmp
xor
test
dec
sbb
and
add
cmc
push
aam
icebp
sbb
test
pushf
xor
movsl
sbb
mov
inc
cwtl
xchg
popf
and
mov
cld
rcll
jb
scas
cmp
xor
and
pop
or
gs
jno
xchg
push
out
fisubrs
cmp
fimull
test
mov
or
cmp
movsb
into
push
test
sub
js
lea
jl
sbbb
pusha
rorl
push
loop
mov
sti
shrl
and
scas
dec
mov
dec
aam
iret
setp
xchg
fimull
dec
lcall
push
popa
shr
aad
imul
inc
test
and
frstor
rcrb
inc
lahf
push
push
stc
iret
lds
pop
inc
and
fcomp
xchg
mov
and
testl
cmpsb
inc
cld
inc
scas
sub
mov
jo
adc
arpl
and
mov
lea
xor
hlt
xchg
pop
jno
loopne
sbb
cmp
dec
inc
pop
pop
pop
bound
out
arpl
gs
push
push
sub
stos
add
add
or
je
shrb
mov
add
imul
jp
sbb
ret
imul
and
adc
rolb
loop
int3
jmp
pop
mov
icebp
fucompp
test
test
push
cmp
dec
scas
mov
inc
xchg
push
sbb
loop
pop
add
sbb
lret
push
pop
scas
les
mov
sub
cmp
push
sub
mov
or
mov
sbb
push
and
xchg
inc
lock
xor
jl
mov
mov
push
in
subb
lret
rclb
and
mov
hlt
aam
mov
mov
pop
fsub
pop
out
sub
mov
add
shl
in
stc
mov
lods
aam
loope
sub
push
inc
fs
cltd
repnz
fadds
aas
cmp
data16
sub
add
cmp
mov
loopne
int3
aam
aaa
jbe
xor
lret
xchg
sub
in
or
sbb
jecxz
pop
sbb
inc
or
pop
testb
das
nop
js
divl
cmp
dec
rcll
lods
mov
in
pop
cmp
sub
scas
lret
push
xchg
pop
loope
rol
dec
adc
mov
push
xchg
jo
push
jl
xchg
cld
or
or
inc
inc
pop
mov
inc
jb
scas
popa
jp
xor
xor
pop
fcoms
scas
mov
cmp
push
movsb
add
pop
mov
or
insb
mov
jne
cwtl
jmp
gs
sbb
ss
outsb
fdivrs
mov
mov
and
xor
jae
jle
fstpl
push
pushf
outsb
out
cli
out
mov
cmp
inc
lcall
lahf
fisttps
mov
inc
test
stos
movsb
ja
loopne
push
nop
in
push
jle
cmp
push
scas
or
fnstcw
pop
repnz
das
push
mov
mov
mov
sbb
lea
jne
inc
ja
ja
sahf
lahf
imul
fmulp
jmp
cmc
icebp
bound
sbb
inc
test
add
dec
fidivrs
cmpsb
movsl
es
mov
push
sub
mov
dec
sbbl
in
xchg
fists
cltd
icebp
lahf
out
in
inc
push
les
pop
push
adc
add
sub
and
stc
aad
xchg
sbb
gs
testb
dec
xchg
iret
in
insl
les
call
or
lcall
int
cmc
pusha
je
push
add
push
mov
and
ss
lret
pop
mov
cmp
cli
jmp
pop
sbb
mov
aad
data16
or
push
or
and
push
rclb
xor
icebp
bsr
mov
vpackssdw
inc
or
iret
mov
xor
jp
repnz
pop
pop
ds
xlat
fwait
lods
pop
stc
or
push
or
cld
and
pusha
push
inc
or
mov
out
cli
inc
mov
pop
adc
sbb
js
mov
test
les
int
cmpsb
mov
aam
push
sbb
mov
pushf
mov
sub
nop
movsl
imul
subb
fsubl
insl
adc
in
fnsave
pop
mov
aad
mov
adc
into
mov
jbe
jle
adc
add
outsb
sarl
jno
dec
xchg
loopne
cltd
mov
xchg
out
lock
leave
and
aaa
cmpl
mov
aaa
add
xor
mov
mov
inc
adc
cli
adc
out
xchg
fcomp
adc
pop
adc
adc
cwtl
test
inc
mov
cmp
or
xchg
iret
or
push
push
jmp
daa
inc
and
in
repnz
loop
aaa
xchg
mov
inc
inc
int3
mov
mov
adc
inc
sub
in
sub
loopne
fwait
scas
addr16
xor
push
mov
fmul
imul
stos
pop
jmp
lods
dec
sub
call
pop
cmp
int3
call
aaa
jno
xchg
xchg
jb
mov
mov
mov
sbb
or
sub
idivb
insl
sub
pop
cmc
xchg
cmpl
or
ss
and
jp
dec
aam
aas
rcrb
xor
fldt
mov
fs
dec
inc
sub
push
lea
push
adc
and
and
fdivr
es
mov
push
rol
lcall
imul
jmp
shrl
je
std
pop
jns
xlat
jnp
cmp
inc
decb
sbb
bound
adc
cmpsl
stos
cli
lret
leave
push
insl
fidivl
mov
mov
int3
mov
sub
adc
fsubrp
loopne
sub
push
xor
insl
je
inc
subb
sbb
movsl
shl
xchg
daa
scas
mov
movsb
insb
add
stc
mov
inc
push
out
mov
cltd
std
xor
sbb
rclb
mov
pop
dec
add
pop
ret
scas
fmull
mov
int
jp
cmp
aas
xor
push
jns
insb
fistl
leave
fsubp
pop
push
insb
sbb
in
bound
ss
inc
es
or
inc
pop
push
push
psraw
xchg
sub
mov
mov
sti
imul
mov
cli
add
hlt
mov
mov
loope
sbb
jge
jae,pn
push
dec
mov
dec
loop
cmp
add
xlat
lods
test
cmp
dec
sub
inc
mov
xchg
icebp
jae
xor
and
stc
jnp
sbb
sbb
into
xchg
les
jle
je
xchg
pop
xchg
lds
das
aas
mov
pop
mov
daa
movsl
sub
pop
sbbb
mov
inc
nop
sbb
or
stos
fs
xchg
xchg
push
lds
loopne
and
mov
pusha
dec
movsb
movsl
mov
xchg
mov
push
gs
dec
loope
stos
mov
int
sti
dec
cmp
pop
and
out
mov
push
shll
mov
std
out
or
ret
inc
scas
mov
lret
lods
jle
fdivrs
imul
inc
adc
cld
xchg
sbb
xor
add
push
cmp
cwtl
jno
pop
cmpsl
sti
xorb
cmc
int3
pop
cmp
js
push
ja
outsl
pop
sub
rcr
jbe
pop
repnz
pop
sbb
or
loope
mov
sbb
and
push
push
dec
xor
addb
and
mov
sbb
fisttps
das
adc
out
mov
repnz
lods
imul
mov
add
das
sti
mov
cmp
mov
stos
xchg
dec
movsb
pop
loopne
mov
cmp
test
cmpb
mov
adc
in
sbb
sub
mov
push
arpl
mov
hlt
fistpll
outsb
inc
xchg
jge
fcmovbe
xchg
je
insb
rol
stos
fildll
xor
xor
jle
loopne
cld
loop
out
mov
dec
sbb
cmpsl
jbe
into
mov
xchg
test
out
ficoms
dec
or
push
or
shrl
in
in
inc
cmp
into
lea
pop
dec
inc
push
mov
into
testb
das
fdivl
leave
sub
insb
xchg
pmaxsw
and
pop
neg
bound
cs
push
pop
popf
popa
or
sbb
js
outsl
xchg
and
popf
and
call
pop
xchg
lcall
mov
inc
push
sbb
testb
ljmp
mov
sbb
jnp
out
dec
stc
pop
or
cmp
inc
roll
pusha
mov
jno
int
les
inc
push
and
mov
mov
out
lret
jg
xchg
shrl
std
and
loop
sbb
cld
int3
xor
push
or
jne
insb
shrb
fldenv
loopne
xlat
and
ret
inc
imul
iret
fiadds
xor
add
bound
jle
jne
cmc
stos
mov
add
adc
jg
mov
loop
scas
rcrb
and
popl
push
cmc
or
pop
sarl
mov
loope
pop
sti
mov
sbb
ljmp
adc
mov
loope
mov
sti
sbb
pop
xor
mov
call
daa
ljmp
and
xor
call
add
and
pop
out
pop
pop
repnz
push
imul
dec
jne
push
outsl
je
pop
or
cmp
mov
or
push
dec
mov
dec
add
fisubrs
pop
jg
or
stos
or
jp
mov
insb
les
or
and
jbe
je
out
enter
ds
jno
adc
xor
push
ficoml
mov
aam
pop
and
push
cmpsl
pop
mov
sbb
sahf
sub
lcall
cmp
fld1
lcall
rorb
and
stos
movl
pop
push
dec
mov
lods
cmp
push
sahf
inc
test
jbe
scas
jmp
jne
sbb
sbb
jnp
jb
sbb
push
and
fisttps
fs
rorb
jp
repz
inc
in
push
sub
lds
inc
adcb
dec
mov
xlat
sbb
cltd
sbb
and
cmovae
pop
ds
pop
and
cli
jo
imul
mov
push
test
pushf
dec
sbb
xor
out
inc
lods
xchg
loopne
in
or
sti
mov
roll
mov
enter
mov
sub
push
push
or
imul
out
jns
pop
jno
jb
jmp
iret
xor
fbld
jp
je
fs
leave
jno
in
sbb
xchg
test
mov
mov
leave
lock
and
pop
movsb
sbb
daa
mov
xchg
iret
shlb
mov
jp
sarb
or
inc
mov
pop
push
clc
adc
or
hlt
add
icebp
scas
cmpb
pop
sbb
xchg
aaa
jmp
jns
cmp
push
loope
xorb
dec
aad
cli
or
pop
sub
sub
frstor
add
sbb
ret
call
xchg
mov
dec
sti
ds
sub
jl
sbb
sub
mov
fsubp
call
push
inc
sbb
xlat
dec
pop
inc
adc
out
and
loop
and
idivl
test
fildl
pop
iret
and
sbb
out
es
dec
inc
push
out
adc
ja
pop
adc
aas
cmp
push
sub
mov
mov
add
xlat
shlb
or
fwait
mov
and
pop
in
xchg
push
fdiv
fsqrt
adc
inc
jnp
sbb
add
mov
jecxz
in
fnstsw
jbe
or
and
sbb
pushf
out
pop
rcrl
push
lret
lods
add
aam
fs
shl
es
sbb
in
mov
into
daa
ret
mov
mov
mov
sub
jl
divl
pshufw
stc
sahf
mov
mov
aaa
lea
cmp
arpl
sub
cltd
sub
mov
pop
push
imull
dec
mov
jae
sub
rcll
push
in
test
mov
and
std
imul
test
add
jge
enter
pop
ljmp
sub
pop
lock
fists
push
or
sub
push
add
les
sub
in
jae
dec
cmpsl
pusha
mov
lcall
dec
mov
test
xor
push
les
daa
pop
sbb
push
cli
imul
jnp
xor
sti
fisubrl
mov
jg
cmp
mov
jb
or
call
andl
cwtl
int3
cld
add
clc
insl
nop
mov
cmp
je
aam
flds
mov
int
mov
mov
imul
push
xor
cmp
mov
lds
and
bound
dec
xchg
sbb
sbb
rolb
outsl
adc
je
daa
fmuls
dec
push
aam
pop
std
fidivs
clc
imul
pop
mov
inc
movsb
daa
scas
mov
mov
and
adc
into
mov
mov
sbb
mov
js
iret
adc
lods
inc
or
fstl
cwtl
ja
call
pushf
daa
mov
cmpsl
or
pop
scas
insl
add
cmpsb
and
shll
push
nop
jl
jbe
lcall
cmp
ret
mov
inc
push
sbb
push
jp
sahf
sbb
repnz
insb
cmp
sub
fsubr
lock
xchg
pop
adc
jnp
xor
aaa
idivl
mov
mov
movb
shll
insb
movsl
fmull
cmp
mov
xor
loope
xchg
pop
jae
mov
lcall
lods
ss
into
iret
and
ret
add
pushf
push
push
cmpsl
jb
scas
enter
pop
pop
cmpsb
pusha
addl
cmpxchg
xor
js
and
lods
inc
addr16
add
in
addr16
dec
in
xchg
fisttpll
push
mov
mov
xchg
xchg
inc
push
fisubrs
push
icebp
nop
mov
lret
shll
loope
iret
dec
pop
adc
dec
in
dec
imul
jne
in
mov
jp
xchg
mov
and
lahf
js
std
mov
push
xchg
and
inc
aad
scas
out
popf
adc
insb
xor
aaa
js
dec
adc
jge
lods
sbb
push
insb
insl
mov
movsb
jle
dec
mov
pop
dec
push
in
fimull
mov
cmc
lea
jne
adc
pop
dec
push
inc
adc
loop
in
push
jae
call
and
shlb
incl
cwtl
sbb
aas
xchg
xor
cmp
cld
dec
js
sbb
ja
arpl
sar
sub
lea
fsubl
in
and
mov
rcll
and
shrl
push
sti
sti
aad
push
cmp
push
mov
adc
sarb
cmpsb
mov
sarb
bound
mov
lret
pop
mov
sti
or
push
push
push
iret
inc
xchg
xlat
cli
push
call
jo
cmp
and
push
sub
lret
dec
ficomps
mov
cmp
scas
pop
pop
shrb
movsb
es
dec
test
sbb
push
lods
sbb
shlb
stos
inc
ljmp
dec
es
clc
mov
cmp
and
cmp
pop
push
pusha
push
or
jge
push
lea
mov
insl
sub
cmp
in
fdivs
shlb
in
repz
mov
test
sub
cmp
mov
stc
loop
rorb
mov
xchg
cmp
sar
sbb
inc
mov
movsl
sub
pusha
mov
jle
stos
cmp
ljmp
outsb
mov
mov
add
idivb
into
insb
push
pushf
cmp
xchg
std
mov
xor
insb
pop
adc
int
push
in
xor
cwtl
or
jecxz
cltd
xor
jo
cmp
sbb
in
sub
movsl
pop
jle
test
dec
ret
pop
insl
js
xchg
stos
sbb
je
add
xor
pop
pop
fiadds
mov
shrl
addr16
push
mov
dec
mov
aaa
push
ret
and
sbb
xor
sbb
jecxz
jmp
and
jg
lcall
rcr
sub
cmp
or
sbb
push
jp
dec
inc
pop
push
stos
mov
lcall
rcr
sub
cmp
or
sbb
push
jp
dec
inc
pop
push
stos
mov
lcall
rcr
sub
sbb
push
jle
dec
inc
imul
mov
ljmp
rcl
and
lcall
repnz
mov
movsl
scas
push
mov
sub
cmpl
mov
je
cmp
je
push
lea
push
push
movb
call
call
mov
xor
xor
call
mov
xor
call
mov
mov
lea
push
call
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
pop
pop
test
jne
mov
not
mov
movb
or
mov
leave
ret
or
sbb
sub
cmp
inc
push
cmp
push
inc
jbe
mov
cltd
xchg
stos
mov
fcmovnbe
jmp
sti
repnz
sbb
sub
cmp
dec
inc
pop
push
imul
mov
mov
shr
loop
repnz
sbb
sub
cmp
dec
inc
pop
push
imul
mov
lret
xchg
test
test
xchg
cmpl
push
xor
push
sub
stc
inc
popa
mov
mov
xchg
add
lods
out
in
aam
mov
inc
pop
xlat
xchg
push
js
notb
insl
push
mov
pushf
ret
mov
add
inc
dec
jb
push
dec
mov
mov
aam
pop
mov
xlat
push
shrb
sti
dec
or
ss
loope
push
xor
jnp
jnp
push
insl
dec
es
push
fwait
ret
adc
jo
pop
jbe
inc
scas
jb
mov
xchg
or
push
mov
fisubs
pop
xor
adc
sti
or
xchg
lahf
adc
les
inc
rcrb
int3
xchg
faddp
pop
pop
shll
sub
stc
out
add
adc
and
xor
pop
push
imul
mov
mov
shr
loop
fwait
outsb
push
js
insl
and
cs
xor
add
jmp
sti
sti
xchg
fadd
inc
dec
sbbl
ja
inc
jp
cs
or
push
stc
leave
cld
jmp
icebp
mov
roll
inc
sbb
push
pop
push
push
insb
pop
push
imul
mov
mov
shr
loop
repnz
sbb
sub
cmp
dec
inc
pop
push
imul
mov
mov
shr
loop
repnz
jp
mov
inc
lock
ss
mov
push
mov
and
imul
iret
and
nopl
xor
lret
mov
push
mov
pop
sbb
or
data16
cmp
fwait
mov
adc
gs
push
jecxz
adc
cmp
mov
mov
bound
push
popa
dec
stos
aaa
mov
lods
lret
lcall
iret
nop
fucom
out
mov
lret
stos
es
test
mull
adc
sbb
jmp
cli
adcl
xchg
pop
push
mov
mov
dec
mov
pop
fldl
xchg
jae
in
dec
xchg
scas
fsubl
cmp
cmp
add
ss
lret
sub
in
stos
scas
xchg
data16
sub
sbb
mov
mov
rorl
mov
mov
xor
jl
inc
scas
xor
adc
sahf
fs
and
out
or
lahf
lcall
jae
push
sbb
mov
xor
push
mov
cmp
mov
and
popa
loop
je
cli
jmp
fwait
xorl
hlt
xchg
mov
jns
inc
sub
xor
jbe
test
sbb
test
cmp
fldcw
xor
push
sbb
sub
cltd
mov
mov
sub
insb
pop
sbb
mov
mov
xchg
andl
mov
mov
cmc
mov
xchg
dec
xlat
int3
mov
sbb
test
mov
addl
cmp
sub
cs
sbb
dec
imull
out
xchg
hlt
inc
dec
push
aas
jne
and
pop
adc
outsl
sub
in
xor
imul
in
repz
stc
pop
xchg
inc
mov
hlt
mov
add
iret
sbbb
out
push
pop
aam
repnz
pop
mov
jecxz
popa
xor
dec
lcall
movsb
xorb
sahf
mov
shlb
in
and
inc
jle
add
int
movsl
xchg
cmp
mov
xchg
mov
popa
pop
orb
sbb
test
xor
add
pop
insb
movntq
cld
push
xor
frstor
hlt
and
jno,pn
jnp
fcoms
mov
xchg
pop
insb
dec
dec
xchg
out
pop
jb
js
repnz
add
or
pusha
pusha
insl
push
add
loopne
loope
mov
mov
pop
sub
cmc
fstps
repnz
andb
cmpsl
addl
add
loop
jl
add
cld
mov
add
pop
aaa
xor
iret
and
fdivs
adcb
add
or
pop
xchg
loopne
pop
cmpsb
adc
outsb
js
push
and
xor
fiadds
adc
addl
adc
mov
hlt
push
push
pop
mov
jno
adc
fabs
jnp
repnz
out
sub
xchg
lret
rcll
ret
test
jns
add
iret
ret
js
mov
cmp
aad
xchg
daa
daa
addb
popa
dec
daa
test
aam
and
rcrl
std
mov
dec
add
sub
js
out
jmp
fisttps
rcll
es
das
or
mov
inc
ss
jae
ret
std
xchg
add
int3
mov
lock
cmpb
mov
mov
mov
adc
fwait
repz
sbb
arpl
cmp
or
rorl
add
stc
clc
in
inc
test
add
enter
inc
push
outsb
pop
or
gs
jbe
adc
dec
xchg
sub
adc
hlt
pop
mov
stos
sahf
int3
fcomps
cwtl
loop
cmp
fmuls
jle
dec
pusha
lds
cmp
mov
jbe
mov
fistpll
popf
jecxz
test
cwtl
inc
and
mov
xchg
xor
btc
test
xor
and
hlt
cmp
es
dec
sub
add
jnp
mov
pusha
movsl
xchg
dec
lock
add
flds
dec
outsl
xchg
cmp
cmp
ljmp
fsubrl
inc
ret
or
insl
inc
orl
test
ljmp
outsl
loope
iret
in
pop
pop
cmp
ja
test
es
ja
or
jne
xor
subl
jno
fsubrs
lret
repnz
mov
or
mov
mov
lds
leave
addb
jns
pop
xor
mov
inc
stos
in
inc
mov
and
jne
jb
ja
dec
test
lret
dec
dec
sahf
mov
and
mov
dec
push
pop
mov
test
xlat
mov
scas
mov
test
push
inc
sub
cmpsb
fnstsw
lods
mov
pusha
pop
leavew
xlat
enter
jmp
sti
in
mov
cmp
push
and
idivl
imul
hlt
push
dec
inc
jnp
sbb
jg
push
das
rcrl
stc
inc
in
ds
xor
into
push
cmpl
inc
and
int3
decb
divb
and
cltd
and
ja
or
sbb
inc
pop
mov
sbb
fsubl
jnp
hlt
pop
add
jns
shrl
pop
mov
jle
xchg
fcmovb
inc
mov
jns
pop
pop
es
arpl
xor
jbe
ret
push
fcmovbe
outsl
mov
jle
bound
inc
nop
cmp
xchg
lds
push
inc
nop
pop
sarl
imul
cmp
ds
inc
imul
mov
mov
or
and
rcll
sbb
repz
inc
cmc
stos
out
jne
scas
ficoml
lahf
and
jnp
int
mov
push
fldt
imull
mov
dec
adc
ds
jl
and
add
push
adc
inc
adc
xchg
in
adc
jns
popf
add
pop
xor
or
jge
ss
jge
pop
ret
jg
rorb
cwtl
adc
cmp
xchg
dec
fs
repz
xchg
int
adc
ja
inc
call
push
push
pop
pop
cli
jp
add
scas
rclb
test
cmpl
lahf
jg
mov
pop
das
jle
push
jmp
dec
arpl
shll
cmc
out
into
mov
push
push
es
pop
push
cs
xor
mov
loop
mov
bound
adc
or
inc
or
jb
stc
cwtl
stos
xchg
cwtl
sahf
dec
dec
dec
cmp
pop
test
sub
sub
lahf
lods
adc
or
hlt
scas
cmpsl
xchg
dec
insb
stc
lods
cld
enter
call
push
xchg
insb
insb
sbb
es
lock
push
test
or
lds
sbb
cld
or
push
or
imul
jo
mov
imul
jecxz
hlt
mov
fstpt
xor
lcall
pop
mov
xor
jg
sub
mov
xor
or
mov
call
push
add
sbb
repz
jns
mov
sub
or
inc
jecxz
aam
mov
nop
push
fadd
call
or
mov
ds
pusha
mov
in
sbb
sub
mov
xchg
insl
push
aaa
sub
mov
sbb
add
pop
lock
es
dec
fcompl
xchg
fldcw
cld
cmp
jge
stc
dec
sbb
or
and
shrl
adc
mov
mov
lea
jo
enter
das
dec
jmp
rcrb
inc
cli
xlat
lods
fstps
add
in
in
xor
cmp
loopne
push
lcall
aam
add
xor
pop
or
mov
out
or
dec
jg
popa
enter
jnp
xchg
inc
push
pop
push
jno
fimull
cmc
adc
inc
cwtl
jne
repz
sbbl
cmp
cmp
and
cwtl
test
cmp
add
cmp
call
mov
loopne
jge
insb
mov
les
loopne,pt
xor
lret
fcoml
shlb
cmp
pop
je
dec
popa
adc
ljmp
pop
in
inc
xor
out
and
cmpsl
popa
int
sub
clc
or
test
sbbb
bound
stc
fdivr
iret
imul
push
xchg
cmp
xlat
iret
add
mov
jecxz
add
xchg
sbb
cmp
fst
or
sbb
cmp
push
lea
sbb
mov
add
subb
negb
cmp
adc
ja
int
cs
push
mov
push
in
out
in
pop
pusha
add
fadds
lods
pusha
pop
add
pop
ret
sahf
bound
into
dec
popa
insl
fwait
loop
je
fwait
into
sub
lret
sub
xchg
std
jp
sahf
sub
or
and
xor
push
mov
add
mov
cmc
jb
jns
add
pop
lea
pop
fnstenv
adc
mov
iret
xor
jle
or
pop
rorb
out
push
sbb
rcll
add
jae
movsl
insl
sbb
sbb
lret
cli
mov
push
add
dec
rcll
in
push
xchg
pop
inc
mov
ljmp
sbb
inc
jbe
scas
inc
add
jecxz
arpl
xor
into
push
pop
insl
mov
in
pop
repz
mov
dec
fnstcw
mov
xchg
mov
lcall
sub
or
aaa
and
aaa
dec
ljmp
pop
xor
loope
xor
xchg
pop
add
xor
push
andl
loopne
dec
cmp
xor
or
test
xchg
cwtl
lods
test
ret
pop
popf
sahf
xchg
stos
call
js
sti
popl
dec
ret
rsqrtps
aad
test
push
pop
add
repnz
lahf
push
dec
mov
adc
add
add
cld
mov
mov
add
outsb
or
repnz
pop
sub
dec
jge
cld
mov
outsl
popa
cmpsl
insl
mov
xchg
pop
xor
xor
sbb
testl
imul
xor
movsl
rolw
xor
mov
clc
or
fs
cwtl
add
add
dec
mov
daa
ret
cmpl
loop
pop
sbb
mov
pusha
pop
jb
mov
adc
in
push
int
pop
add
and
loopne
sbb
ror
adc
out
mov
adcl
int3
fldenv
ret
ja
icebp
mov
jbe
pop
mov
popa
and
movsb
lea
jo
mov
mov
or
lea
inc
jns
mov
xchg
outsl
das
pop
test
push
jb
sub
int3
iret
cs
inc
pop
pop
adc
pop
add
out
std
pop
pop
scas
mov
xchg
test
dec
mov
mov
jmp
xchg
pop
scas
fisubrl
mov
pop
sbb
rcl
mov
es
jle
js
enter
in
out
pop
int
add
xor
int3
test
jae
mov
negl
pop
daa
repz
outsb
das
idivb
sub
xor
mov
aaa
sbb
shll
jp
imul
push
adc
cs
and
xchg
aam
frstor
inc
cmc
mov
fsubrs
sub
mov
std
ds
push
or
pusha
jo
insl
add
or
in
pop
test
push
push
xchg
in
bound
out
and
jns
popa
inc
in
xor
xchg
je
mov
and
cli
pop
sub
mov
shlb
pusha
clc
inc
or
out
les
mov
arpl
movsb
pop
lret
mov
dec
lcall
and
cmpsb
shll
hlt
pop
es
dec
cmpsl
pop
movsl
jecxz
jle
jg
cltd
push
test
lahf
jo
int
fs
movsl
enter
mov
sub
bound
inc
dec
add
out
shl
stos
inc
lret
mov
push
pop
inc
and
dec
mov
dec
jp
subl
cmp
and
sar
mov
mov
repz
ret
bound
fnstenv
ret
popf
adc
filds
mov
push
out
mov
fisubrs
aaa
fwait
push
jge
out
jns
mov
xor
jp
mov
mov
sub
push
ret
fdivs
jbe
xchg
cmp
mov
iret
nop
cmc
mov
gs
or
mov
faddl
jmp
out
mov
sbb
sub
aaa
add
stos
orb
pusha
in
push
dec
jl
pop
les
add
popf
mov
ficomps
aad
inc
sbb
push
lds
aad
xor
out
mov
inc
mov
inc
movsb
lahf
popf
out
test
lock
and
lea
dec
cmc
testb
cmp
movsb
vpcomd
mov
push
repz
popa
jns
fldcw
iret
out
repnz
inc
xlat
sbb
addr16
loopne
xchg
xchg
dec
or
iret
fdivl
jne
popa
sbb
push
mov
div
adc
test
adc
jg
loopne
lea
pusha
mov
push
add
les
stos
insb
pop
dec
jae
add
popf
pop
xor
mov
xor
pop
cltd
pop
sub
mov
ljmp
es
mov
jns
stos
dec
lods
test
cmp
inc
imul
js
ret
or
pop
vpmaddwd
mov
pop
pop
mov
popa
fcoms
lret
fldcw
mov
lods
aam
inc
push
pop
jmp
and
icebp
and
push
ret
xor
xor
movsb
adc
mov
out
sbb
jbe
pop
stos
push
aam
and
loope
es
outsl
cmp
pop
scas
pusha
push
jl
std
push
out
hlt
sbb
iret
clc
mov
jo
inc
imul
flds
nop
xchg
cmp
fdivrl
imul
add
insl
pop
decl
insb
dec
ficomps
mov
sbb
push
jge
add
xor
testb
mov
aad
int3
repz
or
mull
sbb
sub
push
cmp
xor
rclb
jb
sub
xchg
jge
mov
sub
loopne
xor
out
sub
mov
scas
xlat
shl
in
xor
mov
enter
nop
inc
mov
outsl
add
mov
pop
mov
mov
jg
into
xor
rorl
xchg
adc
out
leave
push
lahf
mov
jae
stc
mov
xchg
vmovss
adc
popf
push
outsb
shll
nop
mov
jb
jnp
mov
faddl
dec
pop
insb
xorl
icebp
xchg
push
jg
adc
fwait
mov
in
hlt
add
cmp
shll
lret
push
cltd
or
sbb
adc
cmp
aam
frstor
in
lds
dec
cmp
pop
push
jbe
or
mov
and
in
mov
xchg
inc
addr16
add
add
adc
sub
mov
sub
sub
outsl
sub
sub
mov
aaa
lods
pop
iret
xchg
inc
add
pusha
imull
jmp
call
lcall
pminsw
sub
pop
mov
cld
sahf
lret
inc
aaa
adc
push
adc
xor
rclb
je
mov
fucomi
xchg
adc
and
push
xchg
sub
pop
add
stos
popf
repz
std
xlat
int
pop
inc
ss
mov
shrl
enter
sbb
xchg
fists
push
jge
mov
es
addr16
popf
xchg
xlat
shll
test
or
push
sbb
aaa
jno
jp
mov
cltd
fisubrl
mov
fdecstp
sub
and
mov
dec
dec
lods
sbb
sub
jbe
sbb
movsb
ss
rcrb
ljmp
xchg
outsl
ret
aad
sbb
add
and
xchg
mov
addr16
sti
push
and
movnti
mov
ret
mov
xchg
cmp
push
popa
or
popf
jle
je
cs
mov
ficompl
jno
jo
xor
in
in
inc
data16
or
mov
push
loope
repnz
jns
xor
mov
jno
mov
mov
xchg
cmp
lods
xchg
push
dec
ja
mov
pop
mov
dec
and
mov
and
inc
cs
cmp
fcmovnu
icebp
addr16
icebp
mov
xchg
jl
or
xor
iret
lea
add
xorl
jmp
push
pop
lahf
cmp
adc
sub
xchg
out
mov
and
fmuls
std
xorb
inc
fnstsw
aad
jp
and
cmp
shlb
movsb
jnp
repnz
inc
push
loopne
dec
add
mov
inc
cmp
jnp
lahf
adc
loope
inc
jns
pop
fsub
mov
xor
xchg
dec
xchg
mov
mov
nop
jne
adc
bound
retw
out
cmp
movsl
or
mov
add
inc
and
mov
sub
mov
xchg
out
lds
dec
pop
ss
push
mov
lret
cmpsl
in
ret
mov
aam
add
lods
testl
lcall
and
mov
adc
iret
mov
and
lods
mov
nop
xchg
pusha
test
and
andb
fnsave
mov
aam
nop
jmp
sbb
ret
bound
push
pop
cmp
and
cmp
in
mov
scas
xchg
nop
popa
inc
test
es
les
mov
xchg
inc
rcrb
xchg
daa
into
daa
lret
movsl
xor
push
daa
jnp
iret
ds
sub
cltd
adc
xor
mov
mov
cmp
jbe
jge
jmp
imulb
adc
adc
xor
andl
in
add
testl
mov
push
aad
icebp
dec
xor
mov
mov
mov
jecxz
adc
nop
in
insl
mov
rcrb
lcall
fstl
test
push
and
cmp
xchg
out
iret
mov
test
test
adc
adc
sub
rorb
insb
inc
xlat
dec
arpl
pusha
fisubrs
cmpsl
and
mov
pop
clc
pop
pop
pop
jge
xor
mov
gs
xlat
sbb
jmp
pop
movsb
or
cmp
sbb
xchg
or
ds
repz
mov
sbb
xchg
lods
les
addr16
mov
icebp
cli
sti
lock
pushf
cltd
push
adc
call
xchg
mov
fs
xor
inc
outsl
push
mov
mov
inc
adc
adc
sub
out
cmpb
lods
mov
ja
or
je
data16
mov
out
or
or
insl
jge
dec
jb
jge
scas
mov
sub
out
fldl
loopne
stos
xchg
pop
inc
faddl
and
push
jnp
addl
test
xchg
dec
in
jge
push
in
jnp
shlb
insl
test
out
fiadds
shrl
shlb
lock
sub
mov
xchg
fildl
xchg
mov
sbb
std
sub
ljmp
cmc
mov
and
pop
mov
sahf
ss
test
jo
ljmp
test
faddl
loopne
test
sbb
test
push
adcl
pushf
mov
cld
insb
mov
xchg
lods
in
xorl
sbbb
add
mov
cld
pop
jns
stos
add
stos
or
dec
data16
scas
fwait
ljmp
push
cmc
shll
jle
repz
fidivs
dec
mov
subl
test
leave
arpl
jnp
inc
pop
xchg
mov
cld
push
bound
mov
addr16
inc
mov
pop
push
xchg
scas
repnz
mov
and
sub
add
gs
sbb
mov
js
push
jp
xchg
pop
aad
cmp
mov
sarl
mov
inc
dec
dec
adc
nop
out
xchg
jnp
pop
repz
mov
arpl
cmpb
xor
inc
int
stos
adc
ret
cmpb
jp
nop
xchg
das
sub
in
xchg
mov
and
pop
pop
dec
lcall
adc
lea
xchg
jle
addl
out
inc
lds
mul
pop
repnz
out
mov
out
mov
fildl
sbb
ja
dec
or
mov
das
popf
add
jmp
xchg
sub
jmp
gs
xchg
sahf
scas
scas
das
xchg
xchg
mov
push
push
push
jg
mov
mov
sub
xor
mov
ja
mov
out
xchg
daa
pop
pop
outsl
adc
cmp
dec
inc
pop
push
imul
mov
mov
shr
loop
repnz
sbb
sub
cmp
dec
inc
pop
push
imul
mov
mov
shr
loop
repnz
sbb
sub
cmp
dec
inc
pop
push
imul
mov
mov
shr
loop
repnz
sbb
sub
cmp
dec
inc
pop
push
jmp
sti
jb
andb
mov
sub
push
mov
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
jmp
lea
push
pushl
call
lea
push
pushl
call
jmp
call
push
mov
call
xor
leave
ret
pop
fisttpl
jle
outsb
jmp
iret
jl
push
call
iret
dec
jnp
imul
scas
sub
dec
lret
jle
outsb
jmp
fwait
push
mov
mov
into
dec
jnp
imul
or
fisttpl
jle
outsb
jmp
fwait
push
mov
mov
in
pop
xchg
or
imul
shrb
fldt
mov
xlat
pop
test
mov
add
ja
das
cmp
sbb
shr
mov
loop
rol
mov
ljmp
shlb
sub
jnp
push
fisttpl
xlat
push
into
inc
sbb
xchg
int3
jnp
mov
jo
ficomps
cs
into
sbb
cmp
les
lret
outsb
cmp
cs
push
push
test
lds
aaa
sahf
sub
push
je
inc
imul
push
cwtl
dec
jnp
xchg
pop
int
jno
out
cmp
xor
push
cld
mov
movsb
ds
add
imul
add
sti
cs
sti
outsb
jmp
fwait
push
mov
mov
into
dec
jnp
imul
scas
insl
pop
mov
sbb
mov
jl
pop
fisubrs
fidivs
stos
and
adc
mov
mov
sub
push
decb
inc
aam
stos
mov
sub
loopne
rorb
inc
cmp
add
ds
into
dec
jnp
imul
scas
sub
dec
lret
jle
outsb
jmp
fwait
push
mov
mov
into
dec
jnp
imul
scas
sub
imul
or
loopne
jl
aad
das
popa
add
arpl
insl
aas
sbb
pop
xor
mov
lret
lds
int
into
mov
bound
aam
stos
add
push
push
shll
pushf
add
out
xorb
and
mov
fstpt
or
xor
pop
sbb
jle
sbb
pop
add
cld
nop
in
into
inc
xchg
gs
outsl
inc
in
push
add
dec
xchg
mov
cmpsb
stos
aas
jo
out
pop
rorb
xchg
adc
sbb
inc
in
sahf
push
and
add
je
out
push
aam
int3
scas
pushf
inc
or
sahf
ret
cltd
add
mov
pop
test
out
loop
hlt
sahf
jl
inc
sub
or
sub
sbb
cmc
sbb
int3
or
shll
popf
lea
pusha
push
pop
and
push
ljmp
xlat
in
dec
fdivs
aaa
xchg
sub
sub
xchg
aad
or
xor
jecxz
mov
pop
int
add
add
xor
mov
mov
jg
mov
push
add
loopne
pop
int3
int
adc
sub
jmp
mov
insb
or
mov
add
pop
cld
mov
daa
ljmp
xchg
fnstenv
adc
in
jge
mov
mov
xlat
cmp
inc
test
push
movsl
shl
sbb
cmp
test
or
mov
push
jbe
fsubrs
xorb
aad
pop
pop
mov
mov
jns
and
popa
pushf
pop
data16
notb
xor
les
mov
clc
xchg
fistpl
or
aas
push
cmp
int
insl
insb
mov
stc
pop
mov
aas
hlt
xchg
pushf
lret
or
cmp
jmp
lods
pop
adc
pop
xor
pusha
loopne
aad
mov
mov
mov
mov
pop
push
ljmp
sub
cmp
mov
inc
or
xlat
and
subb
dec
out
xchg
test
out
lahf
or
pop
cld
in
aaa
fstpt
call
cli
pop
in
aaa
mov
sarl
add
rclb
test
and
imul
mov
das
out
pop
cld
pop
dec
popf
je
fsubr
pop
cwtl
arpl
sbb
dec
sub
popa
aaa
mov
lcall
jl
outsl
or
cmp
xor
sub
aas
fsubrl
pop
cld
dec
fidivs
jne
and
and
lods
movsl
mov
lea
lock
pop
cmpsb
cmp
out
mov
lods
cmp
std
dec
mov
loope
movsl
xchg
and
xor
in
inc
aas
rcrb
xchg
mov
cmp
out
mov
lods
inc
sbb
in
push
in
inc
pop
mov
roll
cmpsb
mov
icebp
insb
cmc
fidivs
loope
jmp
roll
dec
sub
inc
sub
xchg
imul
movsb
test
jnp
paddusb
das
rol
sub
push
jl
mov
std
int3
stos
and
iret
cmpl
pop
stos
xchg
push
es
pop
jge
insl
mov
xlat
sarb
mov
jecxz
aad
fnstcw
loope
aas
lret
out
sbb
dec
push
dec
xor
jmp
cwtl
inc
inc
out
pop
lcall
cmp
xlat
push
mov
mov
out
jne
jecxz
cmp
push
loope
lods
cmp
or
push
sub
inc
jmp
mov
popf
pop
fwait
aas
fidivl
xchg
push
jl
shl
push
das
mov
xchg
cwtl
stc
outsb
xor
pusha
ja
pop
mov
xor
pop
aam
in
repz
mov
jb
or
xor
xor
enter
xor
hlt
xorl
lods
fistps
and
or
js
xchg
nop
sahf
push
cmp
mov
dec
pop
add
lock
ss
jmp
cmp
test
sahf
and
or
lods
stos
ds
xchg
and
cld
sub
lret
cmpsl
xchg
add
es
call
pop
cmp
fwait
xor
and
call
pop
fstpl
stc
push
daa
pop
das
stc
bound
pop
push
cs
lods
mov
cmpsb
icebp
andl
and
call
outsl
lahf
cmp
and
test
loope
aas
and
pavgb
pushf
sti
cmc
mov
or
mov
mov
addr16
popf
imul
jmp
cltd
add
in
pushf
add
fs
mov
mov
or
in
jmp
pop
scas
jl
pop
cld
cmp
push
jae
lcall
cli
lods
test
cmpsl
xchg
shrb
pop
imul
push
xchg
mov
insl
call
imul
add
jno
sub
xor
push
add
jae
add
addr16
mov
add
smsw
dec
add
loopne
xchg
fidivs
stos
mov
sbb
jmp
fmulp
stc
ja
jmp
stc
push
jb
insb
fs
movsl
mov
lods
jmp
std
shr
mov
inc
inc
adc
mov
mov
je
mov
aad
lock
cmc
and
and
push
sub
pop
add
add
or
cmpsb
mov
push
jmp
out
dec
into
int3
fwait
jecxz
sahf
addr16
mov
jle
fdivrs
clc
lock
ds
ret
sub
jle
nop
testb
xor
inc
fldl
mov
mov
insb
sub
push
cmp
and
popf
cmp
and
xor
or
push
addb
pop
inc
daa
fwait
pop
adc
daa
hlt
punpckldq
inc
subl
cwtl
jnp
sbbl
cmpsl
shr
leave
fistps
mov
cs
xor
lret
cmp
mov
mov
pop
add
int3
sbb
sbb
mov
sbb
in
pop
pop
or
fimuls
jns
ficoms
mov
cld
ljmp
inc
and
jmp
mov
fsub
fdiv
cmpsl
rclb
fbld
add
cld
mov
cltd
ja
add
push
pusha
test
mov
rcr
dec
sbb
sbb
or
xchg
fwait
int3
add
cmp
not
mov
and
mov
push
adc
xchg
lcall
push
into
mov
dec
lds
iret
lods
js
push
push
js
in
push
xchg
inc
pop
mov
push
rcll
mov
mov
int3
push
jnp
sbb
ss
das
xchg
push
jno
adcl
pop
adc
xor
push
mov
cmp
jge
add
enter
mov
loop
test
movsl
sbb
add
addr16
jle
mov
ds
das
call
sti
cmp
sti
les
arpl
ret
lret
xchg
movb
jbe
lret
push
int
mov
and
imul
fsubs
insb
push
mov
js
dec
inc
add
push
fs
int3
dec
cmc
out
fimull
or
fucomip
jo
fildll
insb
lds
orl
mov
jne
mov
sbb
adc
and
imul
fdiv
sbb
cmp
int3
arpl
leave
rcll
inc
inc
xchg
repnz
test
add
stc
mov
icebp
out
lcall
jns
mov
test
sbb
push
dec
jns
inc
loop
jae
imul
and
stc
push
fsts
stos
pop
out
loopne
out
jne
xchg
cli
pop
dec
or
jge
cmpsl
lret
roll
jb
leave
xchg
test
or
clc
lock
mov
mov
in
ud1
xchg
inc
mov
ds
adc
into
sub
stos
enter
adc
cmp
pop
cmp
pop
movsl
sbb
imul
popl
add
push
cmp
test
sti
pop
inc
and
mov
push
inc
lods
push
loopne
xorl
push
aas
xchg
cmp
jo
lock
fdivrs
mov
dec
xchg
loop
or
cld
jbe
insb
push
and
sub
inc
scas
mov
pop
sti
adc
popf
mov
jo
xchg
cmp
mov
popf
and
sbb
xor
into
sub
adc
jl
push
ss
xchg
add
fwait
sub
mov
stos
hlt
sub
or
pop
movsb
xchg
push
leave
xor
cmpsb
popa
inc
add
mov
dec
popf
mov
mov
hlt
into
inc
xor
int3
and
mov
mov
mov
ffree
xlat
bndstx
inc
ficoms
mov
adc
call
call
push
popa
mov
fcoml
jbe
inc
movsb
mov
bnd
and
in
and
out
imul
mov
xorb
insb
and
mov
js
repz
mov
add
mov
call
fadds
movsb
fxam
jg
int
test
sbb
jmp
adc
inc
or
movsb
cmp
leave
mov
es
lock
mov
add
pop
or
inc
jg
mov
pop
in
mov
xchg
cmp
and
inc
fs
out
push
fnstsw
jbe
loope
xchg
adc
and
loop
icebp
sub
pop
and
pushf
sbb
cmpsb
test
idivb
ja
xchg
mov
lea
adc
int3
addr16
cmpsl
cmp
and
push
sbb
cmp
cmp
ficomps
pusha
push
mov
sub
jbe
mov
pop
jnp
inc
mov
cmp
popf
popf
lock
loopne
pop
and
jmp
movsb
xchg
cmp
mov
push
jns
add
adc
pushf
jno
insl
xor
adc
in
adc
push
mov
test
cmc
jno
pop
fcomp
into
ficoms
lds
fld
sahf
cld
mov
out
sbb
fimull
push
rcr
jne
fstpt
mov
jns
inc
inc
aad
push
pusha
das
push
mov
jmp
pop
mov
ret
fsubp
push
movsb
lret
mov
addr16
imul
shrb
mov
push
aas
adcb
leave
pop
mov
pop
repz
ja
cmp
mov
adc
xchg
cmp
cld
push
pop
test
leave
mov
loope
js
fxch
pop
repz
les
jnp
cmc
jnp
rcrl
out
nop
jge
mov
or
adc
or
fwait
add
sub
pusha
sub
jae
and
mov
cld
inc
inc
adc
jmp
pop
push
mov
push
push
dec
movl
fcomp
stc
mov
mov
xor
fstps
add
add
dec
inc
jns
into
fidivl
xchg
xchg
cltd
aas
xor
arpl
jae
or
adc
mov
daa
daa
bound
lahf
cmpb
stos
mov
scas
in
test
xlat
cltd
mov
fsubl
pop
and
mov
pop
inc
sahf
push
mov
ljmp
sti
rorb
gs
and
loope
inc
push
push
in
ja
mov
xor
andb
fcomip
xchg
mov
lahf
lret
divb
loopne
addr16
xor
std
std
cmp
pop
test
mov
fidivl
dec
adc
and
sub
xchg
and
into
inc
flds
push
sbb
dec
lea
push
mov
xchg
addr16
fsqrt
cmc
mov
lods
push
icebp
mov
and
inc
cmpsl
xchg
rorl
lea
leave
sbb
out
inc
out
and
nop
out
in
enter
ds
jo
in
xchg
out
xor
or
lret
jmp
outsb
xor
pop
cmpsl
lods
and
jns
add
fcoms
insl
xchg
and
aaa
adc
out
outsl
xchg
outsb
je
sub
mov
jb
xor
mov
push
xchg
out
xor
call
sub
sti
pop
xchg
adc
push
ret
adc
push
jmp
dec
add
lea
mov
xchg
dec
int3
sahf
and
cmp
adc
inc
js
xor
push
cwtl
lock
dec
xor
push
add
sub
pop
jns
insl
comiss
pop
xor
popf
mov
addr16
stos
scas
lods
add
jb
adc
test
pop
jae
xchg
in
lahf
sub
cwtl
in
push
xor
add
push
dec
arpl
mov
ss
adc
pop
xor
es
jae
xchg
mov
outsl
xlat
outsb
add
push
into
pop
lods
or
in
fs
add
mov
cmp
loopne
xor
add
add
sbb
test
add
mov
jp
mov
loope
xchg
dec
mov
adc
adc
or
into
ds
lret
adc
mov
stc
sub
andl
pop
inc
test
add
xlat
inc
js
pop
add
mov
cmc
das
cmp
mov
jnp
xchg
jle
jp
add
push
lds
jno
mov
sub
push
shll
fwait
pusha
cmpsb
inc
leave
andl
outsb
and
dec
mov
mov
mov
pop
movsl
inc
pop
adc
lret
add
ret
inc
mov
shll
pusha
jle
lcall
mov
sbb
xor
lahf
sbb
push
xchg
dec
xor
adc
test
push
jbe
jbe
xor
sub
jmp
popf
lret
xchg
lock
dec
mov
shr
cmpsb
cmp
mov
sbb
adc
mov
jae
cld
cwtl
out
mov
jle
mov
adc
sbb
sti
mov
aaa
notb
js
sbb
mov
jo
xor
pop
addr16
mov
lds
jmp
mov
xchg
push
cmp
push
inc
in
or
inc
mov
arpl
dec
and
jecxz
out
bound
inc
popf
outsl
mov
into
fs
fucomp
inc
xor
in
vmread
shrb
rclb
cli
lea
popf
inc
xor
pop
shrb
or
gs
test
sub
call
mov
push
add
jmp
rep
test
dec
call
pop
daa
push
push
mov
sub
ds
shll
sbb
adc
lahf
sbb
push
adc
lods
clc
mov
sahf
pop
ja
lds
mov
sub
push
outsl
sahf
cmc
cltd
xlat
inc
mov
inc
push
lahf
clc
popf
adc
lds
aas
or
adc
mov
ret
inc
sub
rcl
cli
imul
inc
cmp
ljmp
insb
mov
loop
arpl
push
mov
test
and
pop
or
or
mov
imul
mov
pop
loope
add
in
jb
es
dec
xor
xor
add
xor
mov
out
cmp
cmc
cld
xor
xor
inc
enter
das
movsb
stos
pop
stos
push
das
insb
fcmovnbe
jmp
ja
jb
sahf
aad
xchg
fimull
bound
xlat
or
jge
jl
cmp
jg
mov
ljmp
push
jecxz
lock
nop
add
and
inc
or
lock
push
movsl
movsb
cwtl
mov
and
lds
mov
rcrl
adc
dec
lret
dec
and
sub
cmp
lahf
loopne
leave
adc
lret
stos
xchg
jne
mov
repnz
fwait
jmp
aas
pop
addr16
xor
cmp
mov
rcl
jle
xchg
push
mov
out
mov
test
pop
xlat
mov
stc
lcall
test
push
xlat
cmpsb
fdivs
out
push
test
mov
adc
ret
mov
push
dec
jle
mov
enter
push
popf
sti
xchg
mov
mov
in
ss
xor
mov
es
inc
add
jle
data16
lock
insl
lahf
ret
iret
push
pop
jp
mov
imul
dec
aam
pop
cmpl
mov
mov
sahf
sbbl
jae
cli
fcom
or
pushl
jne
test
sbb
pop
fsubl
or
mov
adc
lret
push
pop
sbb
leave
sbb
cmpb
push
and
add
test
lods
int
mov
cwtl
inc
dec
je
gs
push
xor
mov
pop
pop
sbbl
and
mov
mov
inc
mov
cli
pop
repnz
mov
mov
rorb
lret
dec
xlat
xchg
fsubl
scas
sub
inc
cmp
add
xchg
je
fwait
rolb
in
imul
mov
add
das
push
sarb
ret
call
push
mov
mov
xchg
movsl
jnp
mov
imul
in
cmp
and
pushf
jmp
mov
ret
dec
mov
ss
js
sub
out
rcrl
rclb
in
xor
test
ja
std
bnd
inc
mov
idivb
popa
lret
mov
cmpsl
pop
cmp
in
dec
or
in
inc
sub
and
movsl
jle
pop
push
data16
shrl
sbbl
leave
inc
mov
adc
cld
lds
insl
in
repnz
incb
clc
mov
and
push
sbb
mov
rol
loop
dec
mov
das
aas
xchg
cld
dec
jle
in
and
push
sub
mov
pop
add
ja
push
insb
aaa
mov
or
sbb
lcall
popf
xorl
xor
mov
push
dec
stos
shlb
popf
jne
stos
invd
stc
aas
iret
out
std
ficoml
ret
pop
sub
cwtl
ret
mov
mov
xor
pop
cmp
push
mov
or
jno
push
pop
movsb
xchg
js
xchg
sti
int
arpl
mov
mov
shrb
gs
loop
jne
fadds
cmp
cmp
inc
je
into
ss
adc
xchg
cmc
ffreep
jnp
out
test
mov
loop
aaa
stc
clc
mov
mov
rcll
mov
out
cli
pop
xchg
leave
popa
pop
pop
add
pop
and
jo
dec
mov
cli
in
lahf
subb
push
jp
jl
cmc
mov
inc
inc
adc
fisubl
fcmovb
mov
mov
lds
daa
lds
in
int3
lret
mov
xchg
mov
and
add
xor
ss
mov
push
or
or
loopew
dec
sub
pop
mov
fsubrl
imul
xchg
call
mov
pop
add
dec
ret
mov
out
and
rclb
or
xchg
xor
in
ror
adc
adc
mov
int3
cmp
pusha
sbb
push
dec
and
push
aas
pop
cmc
mov
jbe
and
rcr
std
push
or
aas
cltd
jmp
in
cmpsl
inc
in
aaa
sub
mov
sbb
rorl
fsts
mov
fidivl
cmpsl
test
and
xor
cs
push
data16
aas
sahf
popf
add
pop
stos
sbb
and
aas
jnp
out
int3
xor
push
cmp
and
aam
shlb
sbb
and
add
adc
mov
or
movsb
les
sbb
xorb
dec
mov
aaa
cld
test
insb
loope
fldln2
ss
jo
pop
mov
fdivrl
insb
mov
out
xchg
movsl
fdivr
jne
sarb
ficoml
xchg
dec
inc
or
lods
push
or
leave
sbb
fadds
dec
jnp
mov
popa
imul
mov
out
sbb
cmpsb
aad
jle
add
add
rcr
push
mov
mov
nop
repnz
scas
ljmp
pop
fisubl
lahf
jns
loop
ss
and
test
or
sub
call
jb
outsb
and
inc
std
imul
pushf
adc
scas
movb
adcl
addl
mov
mov
inc
xor
xchg
bound
shlb
rdtsc
jns
rclb
repnz
xlat
push
adc
nop
ljmp
add
std
add
dec
jmp
jmp
cmp
jns
and
icebp
sbb
cmpsb
lods
push
sbbl
sbb
xchg
je
loop
std
rcl
xchg
add
out
xor
cmp
lret
push
jbe
sub
mov
sahf
adc
cs
add
inc
add
test
jae
pop
int
sub
jbe
cmp
popl
test
xchg
add
lcall
add
std
outsb
std
mov
movsl
into
ljmp
jge
cmc
push
clc
mov
int3
push
insl
enter
fcoms
inc
xor
dec
push
push
fidivs
sub
mov
push
or
inc
pop
mov
into
cmc
fiadds
jp
shlb
xor
pusha
call
jbe
pop
testb
lret
jg
outsb
jmp
fwait
push
mov
mov
into
dec
jnp
imul
scas
sub
dec
lret
jle
outsb
jmp
fwait
push
mov
mov
into
dec
jnp
imul
scas
sub
into
lret
sti
outsb
ljmp
scas
stos
ficomps
dec
jnp
imul
scas
sub
dec
lret
jle
outsb
out
push
fwait
push
or
cmp
push
fisubs
sbb
xchg
hlt
into
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
popf
orb
fidivrs
mov
push
aaa
out
adc
ss
dec
fnstsw
jle
cli
orb
faddp
into
ret
out
xchg
push
push
adc
xor
xor
jle
outsb
jb
fwait
jl
sub
jbe
rcr
lret
out
call
push
pop
dec
inc
xor
adc
sbb
mov
or
adc
lds
popa
mov
fnstcw
push
jb
jb
ds
sub
lock
and
arpl
mov
and
or
xchg
xchg
mov
lret
stc
lret
xchg
mov
stc
not
sub
int
out
jmp
bound
inc
fsub
insl
pop
pop
inc
loope
ret
add
push
in
mov
jle
xlat
jg
outsb
bound
subl
xor
and
inc
cmpsl
jne
gs
imul
xor
popa
jge
out
pop
push
cmp
dec
daa
ja
jecxz
mov
mov
fcmove
shrl
mov
pusha
insl
je
xchg
fadds
cmp
mov
loop
jmp
add
push
pop
inc
dec
dec
js
jae
cmp
lret
xlat
mov
mov
xchg
push
insl
pop
adc
dec
push
sub
and
or
jmp
int3
ror
fnsave
xchg
mov
ja
inc
push
xor
xor
push
pop
add
loop
ffreep
std
testl
add
adc
and
xor
dec
push
jle
outsb
jb
orb
faddp
into
sar
loop
repnz
add
adc
and
xor
dec
push
jle
outsb
jb
subb
jl
outsb
mov
dec
mov
push
add
xor
mov
xchg
push
nop
xor
xor
aam
scas
sarb
inc
fdivs
dec
lds
adc
mov
dec
xchg
aas
cs
and
mov
mov
push
mov
in
pop
inc
popf
and
xrelease
out
dec
sub
push
sub
mov
sti
popl
in
sahf
dec
fstpl
ljmp
outsl
sub
push
and
jnp
das
and
leave
pop
aas
pop
outsl
nop
and
mov
mov
loopne
in
mov
rcl
mov
push
cld
push
stos
test
cli
pop
roll
pusha
sbb
jbe
std
xor
aad
loopne
js
push
add
sbb
in
sti
cmp
fmuls
lret
leave
pop
adc
cmpsl
pop
or
sub
push
jnp
clc
jbe
add
mov
aas
scas
es
xor
jmp
jl
loope
jo
xor
mov
decb
cld
das
js
add
push
cwtl
mov
insb
cmpsl
popf
adc
imulb
cmp
leave
and
hlt
xor
mov
pushf
fdivs
sbb
and
iret
dec
xchg
enter
mov
negl
cli
jp
xchg
leave
inc
fsubrl
mov
addb
fwait
inc
xlat
imulb
sub
jp
cld
mov
fisttpll
cmp
mov
pop
js
inc
mov
adc
mov
xor
inc
pop
cmp
out
and
dec
dec
mov
mov
pop
test
in
leave
dec
mov
and
imul
adc
jmp
push
daa
out
mov
test
aaa
lahf
jo
push
mov
imul
fwait
loopne
jb
or
addl
in
fsubp
add
iret
cmp
cmp
sbb
loopne
pop
or
aad
push
movl
es
sbb
test
cmp
arpl
ucomiss
add
popf
inc
or
int3
cmp
jne
shrb
cmpsb
data16
cmc
sbb
fsubs
pop
repnz
mov
arpl
add
daa
mov
in
jae
fisubs
and
mov
mov
dec
pop
xor
mov
push
push
push
push
in
nop
and
sahf
and
and
ret
test
inc
clc
push
orb
loopne
scas
movntq
orb
fdivrl
fisttps
mov
popa
push
xchg
fidivs
or
and
pop
insb
outsl
push
sub
jge
mov
pop
pop
ret
in
lcall
push
mov
cmp
out
sbb
lcall
adc
fwait
xchg
or
mov
and
ret
daa
es
std
loopne
push
inc
jnp
mov
invd
cmp
xor
mov
push
xchg
out
imul
mov
or
imul
call
xchg
sbb
sbb
movsl
fistl
jecxz
push
mov
pop
aam
icebp
pop
in
pushf
or
cmp
rorb
cld
jbe
xchg
xor
int3
xchg
xchg
sub
jle
or
jmp
stos
sbb
clc
in
lret
stc
mov
push
data16
cmpsl
jbe
orb
mov
push
movsb
sbb
ret
dec
jbe
xor
xor
out
leave
aaa
stos
pop
or
xchg
sbb
rcrb
sub
fistps
inc
aam
addr16
xchg
and
pop
icebp
lahf
data16
mov
dec
mov
iret
lock
cmp
pop
iret
test
andl
ds
loop
add
fcompl
jg
mov
sub
cmpsl
punpckldq
mov
mov
mov
jo
iretw
shlb
fwait
jmp
bound
fcomps
sbb
mov
out
into
xchg
adc
pop
xor
push
dec
or
out
sbbl
xchg
xor
push
scas
cmove
gs
test
dec
xchg
call
pushf
ficoml
adc
mov
das
insl
shll
jle
movlhps
push
jbe
cli
mov
push
or
mov
out
out
or
test
or
cmpsb
mov
mov
daa
in
pop
pusha
inc
scas
pop
sbb
mov
push
inc
fdivl
movsb
jnp
shrl
out
cmc
sarl
sub
repz
pop
loope
jno
out
dec
test
mov
sub
rorl
ljmp
in
test
sub
mov
jmp
mov
mov
insb
pop
pop
and
mov
scas
pushf
xchg
ds
sub
shl
lods
and
movsl
sti
mov
adcl
frstor
dec
sub
lock
outsl
dec
fldl
mov
adc
xchg
loope
jl
daa
out
dec
adc
dec
inc
xchg
js
xor
pop
xor
fsubs
pop
cwtl
jmp
adc
js
in
push
jg
mov
arpl
dec
mov
shl
add
mov
pop
add
mov
inc
cld
sub
cmp
je
add
mov
test
adc
sub
pop
dec
rcrb
fiadds
push
dec
sub
fbstp
lds
dec
in
xor
xlat
in
or
or
imul
icebp
pop
xchg
jae
sarl
hlt
imul
iret
stc
push
dec
xor
shlb
jl
push
fbld
ljmp
mov
aam
cmp
xchg
jmp
in
dec
xchg
call
es
pop
sbb
adc
icebp
mov
or
pop
mov
cmp
aam
ror
cmpxchg
loopne
mov
jge
fnstenv
outsb
insb
xor
out
aas
xchg
mov
inc
add
stos
mov
pop
pop
sub
adc
scas
and
mov
mov
jp
sti
jle
inc
cwtl
and
fcom
fwait
push
iret
scas
cmp
test
mov
sub
mov
xchg
pop
or
and
or
push
jmp
cmc
pushf
mov
scas
sbb
or
outsb
xor
test
aas
aad
and
rcrb
int
jb
lods
cli
test
in
cmp
lahf
out
into
outsb
into
xor
shll
aad
mov
mov
add
mov
addr16
adc
push
std
sub
pop
sbb
cmpsb
xchg
scas
mov
jno
loop
sbb
std
loopne
sbb
or
addr16
jae
push
and
add
aas
mov
xchg
xor
pop
jns
mov
jg
and
xchg
arpl
cmc
cld
add
lea
out
pop
inc
or
lods
icebp
mov
jmp
mov
xchg
lock
insl
pop
je
es
les
fsub
mov
cwtl
ss
pop
pop
mov
xor
lret
das
jno
pop
inc
jmp
fs
ret
push
jge
mov
mov
cmpsb
fnstenv
rorl
mov
dec
and
jnp
pop
ja
and
mov
sti
js
popf
push
pushf
sbb
mov
test
test
or
test
and
mov
jns
cmp
ret
lret
sarl
and
test
es
mov
fwait
repz
icebp
ss
test
subb
add
push
mov
jne
dec
xchg
push
xor
sahf
fs
hlt
in
mov
push
ret
jns
cltd
dec
loop
test
ljmp
adc
aaa
imul
sbb
insb
xor
ljmp
lahf
dec
add
dec
jno
in
lea
push
inc
or
test
stos
ljmp
fxch
rcrb
and
jbe
pop
push
loope
ret
leave
in
lcall
mov
lds
loop
aaa
push
xchg
enter
in
jmp
inc
pop
cli
dec
pop
ds
imul
mov
jl
push
inc
out
std
push
loop
sbbl
xchg
sbbl
push
inc
scas
inc
imul
test
clc
sarb
in
xor
mov
mov
or
ss
mov
mov
lock
add
test
sahf
cli
mov
and
ret
sbb
add
cmp
dec
mov
in
sub
cmp
cmpsl
push
aaa
push
out
hlt
push
xor
je
aad
ljmp
shlb
adc
fmull
add
fcmovnbe
idivl
jl
aas
adc
adc
pop
add
pusha
inc
cmp
sbb
lods
ja
sbb
adc
add
mov
sti
mov
mov
subps
mov
adcl
push
jp
adc
insl
icebp
ljmp
adc
mov
in
pusha
dec
sub
imull
cmp
sarl
mov
mov
dec
arpl
call
mov
mov
jne
add
cld
fldl
das
lea
fwait
jnp
imul
popa
lock
mov
mov
pop
xchg
jmp
push
push
aas
nop
jl
sbb
mov
ret
data16
mov
adc
ficoml
push
mov
mull
pop
outsl
dec
aad
xchg
jmp
movsl
mov
rcrl
and
pusha
hlt
jp
inc
pop
mov
jne
mov
pop
dec
cmp
inc
add
jge
leave
cmc
mov
push
push
mov
mov
shll
and
mov
insb
call
dec
fadds
inc
cmp
lcall
stos
jmp
dec
push
out
xchg
push
into
insl
bswap
mov
add
leave
cmp
mov
jle
jg
frstor
call
mov
adc
pusha
imul
jp
scas
jl
pop
shll
xor
and
jg
jp
mov
inc
test
loope
mov
jl
in
test
or
movsl
jg
or
push
fs
push
mov
cmp
in
int3
mov
je
cmp
sahf
test
push
pop
or
cmp
mov
insb
adc
ds
mov
out
cmp
pop
fsubrl
fdivs
xor
fnstsw
scas
xchg
add
notb
mov
sub
pusha
pop
dec
jnp
cmp
jo
popa
push
sahf
jl
jecxz
add
mov
mov
and
sbb
dec
popl
xchg
sub
push
lds
fimull
push
lds
push
lock
icebp
ss
xchg
nop
xchg
jecxz
fwait
stos
ja
or
daa
and
inc
aam
mov
test
push
or
rsm
mov
mov
or
push
scas
pop
push
jb
add
jae
mov
outsl
pop
xor
std
dec
cmp
push
pop
mov
push
and
or
addb
adc
inc
pop
mov
lret
and
in
clc
jne
jmp
rorl
cs
jge
ljmp
popf
push
repnz
fwait
imul
xbegin
cmc
lahf
xchg
mov
scas
inc
cmp
pop
sbb
add
push
std
in
dec
jb
mov
add
lock
push
pop
push
or
addb
test
and
popa
pop
js
mov
pop
jp
movsl
daa
xchg
mov
inc
les
fcmovnu
sbb
sub
outsb
push
inc
icebp
daa
mov
or
adc
cmp
inc
ja
fstpt
cmpsl
or
in
jl
jmp
xor
inc
in
stc
dec
imul
mov
or
push
and
mov
mov
mov
mov
jge
mov
or
adc
cld
jbe
inc
pop
cmp
sbb
out
outsb
adc
lods
pop
shrl
push
pop
cmp
mov
sbb
pop
ficompl
dec
add
cmpb
add
mov
cmp
into
cmp
hlt
jle
mov
push
cmp
xchg
inc
ret
mov
call
lahf
inc
sti
xor
lea
push
cmp
xchg
pop
mov
xchg
xchg
loopne
stos
loope
ljmp
mov
mov
inc
dec
inc
adc
rcll
aas
cwtl
cs
into
ljmp
pop
mov
xor
add
mov
fstpl
daa
arpl
xchg
add
lret
rol
xchg
rcl
nop
data16
pop
push
loopne
xchg
push
scas
cltd
cmp
js
jae
dec
jae
adc
aaa
pop
into
loopne
sbb
mov
pop
fwait
lods
loope
mov
lods
jg
add
ljmp
scas
adc
jmp
data16
push
dec
mov
xor
mov
mov
fdivrs
cmp
je
xchg
lret
lods
sub
leave
cmp
cmpsb
clc
push
sbb
pop
bound
or
fwait
in
les
aam
xchg
imul
sub
fdivl
cltd
mov
add
pop
mov
adc
cli
and
loopne
mov
ljmp
lds
pop
repz
out
loopne
pop
pop
mov
int
rcll
push
loope
ret
mov
or
enter
mov
cli
nop
sbb
jae
popa
jl
xchg
movsb
loope
jno
es
cmp
dec
cmp
adc
popf
mov
daa
adc
mov
jns
jbe
dec
push
loop
sbb
sbb
cmpsl
push
xchg
cmpsl
and
mov
insl
or
cltd
xor
dec
jge
mov
xchg
add
sbb
mov
mov
test
fldt
sbb
xor
pop
push
test
in
mov
into
pop
popa
sub
inc
sub
outsb
int3
test
in
lock
insb
or
outsb
iret
ror
aaa
stos
push
push
jno
sbb
mov
and
rol
fsubl
adc
and
mov
aam
mov
shll
adc
lret
sar
jle
pusha
fstps
test
mov
jmp
ficompl
gs
pop
jno
test
inc
or
xor
jno
out
in
cwtl
dec
sbb
add
pushf
dec
adc
and
xchg
decl
fwait
xlat
xor
jge
xchg
pop
xor
mov
outsl
lahf
adc
lcall
mov
lcall
xor
enter
test
test
pop
sbb
movsb
dec
add
add
jmp
imul
pop
cmp
ja
push
outsb
add
xor
test
xchg
jl
imul
adc
xchg
adc
aam
sub
cmp
and
imul
xchg
insb
dec
sbb
clc
and
loope
imul
sarl
loop
orl
loope
outsb
aas
into
les
adc
iret
aas
test
jg
std
rcrb
scas
jecxz
dec
mov
cmpl
pop
inc
loope
dec
cli
test
dec
inc
aad
jecxz
and
icebp
sti
xor
pusha
push
push
jle
jmp
cmp
std
push
cmp
or
push
psubsw
icebp
pop
dec
adc
aas
pop
pop
inc
add
xchg
out
ljmp
push
in
mov
cmp
adc
cmp
xor
dec
mov
and
leave
aam
aam
sbb
stc
or
jle
or
xchg
cmp
xor
notb
sub
cwtl
scas
mov
stos
mov
mov
cmpsl
push
sti
mov
subl
test
pusha
and
cmp
jecxz
imul
movsl
sub
inc
mov
loopne
cli
mov
daa
dec
adc
loopne
sbb
shrl
cwtl
sbb
cmp
cmpsb
jle
ds
fbstp
mov
fidivrl
adc
ret
arpl
lods
pop
sub
xchg
mov
in
sub
call
inc
push
das
test
xchg
xlat
mov
sub
inc
cwtl
pop
mov
lods
jmp
xlat
push
xor
lret
in
and
push
xor
pop
or
cs
pop
xorb
pop
push
ja
loopw
xor
mov
punpckhwd
pop
mov
pop
or
cs
push
and
sarl
cmp
or
cs
stos
xchg
in
notb
mov
movsb
stc
xor
rclb
lds
aad
xor
cmp
ret
std
aad
or
inc
pop
mov
sub
sbb
add
jne
lret
sbb
push
adc
cmpsb
jno
pop
out
jo
mov
aaa
mov
push
lahf
xor
add
xor
daa
into
pop
push
dec
shr
mov
xchg
xchg
negl
xchg
adc
ret
idivl
dec
jno
mov
xor
lret
arpl
and
lea
xchg
mov
testl
jnp
add
xchg
ret
test
les
mov
pop
gs
pushf
imul
mov
pop
pop
faddl
loopne
sbb
inc
sub
loope
mov
or
repnz
cmp
movsw
jmp
cmp
das
rorl
sub
lods
scas
dec
xchg
arpl
adc
cs
gs
push
cmp
push
mov
mov
add
cs
mov
dec
iret
sbb
test
xor
lret
jns
add
sub
xor
movsl
enter
adc
leave
hlt
xor
push
rorl
mov
pop
aad
jo
aas
pop
mov
fs
sbb
jns
rclb
xchg
mov
lea
aam
mov
push
or
jmp
jg
jle
mov
lret
xor
scas
hlt
xchg
lock
std
in
xlat
pop
insl
outsb
gs
adc
adcb
jno
jae
jae
lret
jmp
fwait
cmpsb
cld
in
les
mov
push
mov
push
xchg
mov
push
mov
jle
ss
add
mov
pop
leave
pop
inc
jnp
xlat
xlat
jp
xchg
movsl
pop
aam
test
call
inc
iret
pop
in
shlb
into
ret
or
sbb
sbb
lods
and
cmp
and
rcrl
mov
and
int
lret
popf
sub
xchg
gs
mov
mov
push
dec
or
leave
sub
cmpsl
pusha
and
lahf
in
jo
push
pusha
cs
sub
cmp
jge
mov
int
xor
sti
popa
lret
add
movsb
push
dec
popa
imul
dec
dec
into
pop
inc
je
and
adc
je
bound
comiss
les
pop
cmp
push
into
push
mov
pop
xor
push
les
xor
mov
pop
adc
xchg
js
in
mov
cmc
repnz
sbb
push
push
mov
lea
orb
adc
js
cli
push
movsl
push
jbe
mov
mov
ficompl
in
dec
push
mov
push
mov
outsb
cmpsl
and
push
mov
lock
push
out
fwait
sbb
dec
xchg
jle
fdiv
or
jne
iret
adc
mov
sub
es
xor
push
mov
loop
jns
xor
push
mov
hlt
jbe
pop
stos
fistl
fdivs
or
adcb
push
mov
rcrl
inc
mov
gs
or
shlb
out
inc
aaa
jbe
test
push
fildl
mov
fbld
loopne
xor
gs
mov
mov
js
mov
popf
inc
adc
adc
push
mov
movsl
push
jne
pop
adc
call
mov
cltd
xor
in
aad
mov
mov
dec
dec
fnstcw
gs
cmpl
ss
cli
negl
jne
xlat
daa
fdivrs
jmp
pop
inc
cmp
mov
ja
scas
in
fs
jge
mov
shlb
je,pn
clc
jae
mov
add
mov
loope
or
push
ret
xchg
cmpl
insb
push
mov
in
dec
add
mov
into
popf
jp
iret
add
xchg
jmp
sbb
mov
rolb
fmull
jno
sub
test
cmp
scas
stos
imul
and
pop
adc
push
and
cli
addr16
and
scas
add
je
adc
test
scas
rorb
sub
shl
dec
pop
fildl
aam
xor
xchg
test
adc
sbb
push
cmpl
in
ds
xchg
sahf
push
icebp
daa
or
jle
push
jne
les
cmp
test
add
pop
pop
and
xchg
imul
jp
sbb
imul
push
pop
xor
xor
adc
rcr
sbb
inc
mov
adc
dec
mov
fimull
idivl
imul
outsl
ret
push
dec
mov
std
fcomps
pop
insl
popf
push
mov
das
xor
frstor
jnp
jb
aaa
sbb
mov
jmp
inc
jmp
sbb
mov
cmp
mov
sub
or
add
pop
xchg
dec
xor
xchg
cmp
rclb
ds
movsb
inc
push
int3
jnp
jb
inc
jg
mov
push
adc
movsl
jo
iret
std
inc
sub
cmp
xchg
adc
repnz
loop
jle
inc
rcrl
sbb
xlat
js
ret
xchg
stc
mov
into
sar
loop
repnz
add
adc
and
xor
dec
push
jle
outsb
jb
orb
faddp
into
sar
loop
repnz
add
adc
and
xor
dec
push
jle
outsb
jb
cmpb
dec
ret
loop
repnz
add
adc
and
ss
inc
pop
push
jle
xchg
xchg
xchg
in
mov
loop
xor
add
mov
sub
sub
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
hlt
add
mov
add
mov
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
das
cmc
add
sbb
add
adc
add
or
add
add
add
cld
hlt
add
hlt
hlt
add
in
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
cmc
add
push
cmc
add
pop
cmc
add
jo
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
call
testb
xor
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
test
add
mov
add
xchg
testb
pushf
testb
movsb
testb
lods
testb
mov
add
testb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
loopne
add
call
testb
or
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
shl
add
testl
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
clc
add
jl
add
je
add
insb
clc
add
fs
add
pop
clc
add
push
clc
add
dec
clc
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
test
add
mov
add
mov
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
dec
stc
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
in
add
in
stc
add
hlt
stc
add
cld
stc
add
add
add
or
add
adc
add
daa
cli
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
inc
cli
add
dec
cli
add
pop
cli
add
insb
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
