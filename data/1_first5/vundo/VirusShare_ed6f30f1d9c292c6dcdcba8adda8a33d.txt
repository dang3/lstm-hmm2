sbb
add
outsl
std
clc
cmpsl
loop
outsb
xor
push
cmp
dec
jmp
and
adc
insb
mov
mov
sti
sbb
pop
pop
imull
jmp
bound
and
sahf
mov
mov
aaa
inc
cmp
xchg
idivb
lcall
push
cmp
mov
repnz
imulb
test
mov
jbe
icebp
cwtl
mov
repnz
xlat
pop
lcall
mov
ljmp
xor
or
inc
cli
jge
add
push
daa
sbb
mov
push
ljmp
jnp
fdivrl
mov
clc
push
xchg
xchg
pop
jbe
les
adc
frstor
and
jns
xor
pushf
push
and
cmp
ss
in
mov
nop
xor
rorb
adc
je
dec
outsb
test
xlat
sbb
add
inc
daa
cmp
xor
sub
dec
pop
mov
mov
sbb
mov
xchg
xor
mov
sbb
lds
scas
gs
sub
jl
int3
jns
movsl
add
adc
cltd
jg
addr16
pop
lahf
sub
inc
lods
add
inc
or
sub
arpl
in
repnz
fwait
sbb
lods
icebp
std
outsl
mov
or
jp
sbb
adc
test
js,pn
scas
push
out
lods
cmp
cmp
scas
enter
sbb
mov
fsubl
les
xor
rcll
jo
xor
mov
sub
popf
sbb
call
jl
sbb
jnp,pn
push
cwtl
stos
mov
lahf
aad
mov
call
in
outsl
test
xchg
jge
ljmp
popf
iret
lods
jae
fisubl
xchg
outsb
sub
mov
scas
fcompl
or
cli
inc
sub
xlat
fisttpl
arpl
cmpb
lds
sub
in
sub
xor
ds
mov
clc
xchg
cmpsb
cmpsl
or
mov
repz
xchg
mov
divl
out
es
jmp
xchg
cmp
cltd
push
sti
pop
push
ret
inc
xchg
dec
insb
loopne
sbb
inc
bound
push
andl
pop
sub
pop
test
call
add
es
es
push
cmpsb
mov
sbb
out
stos
call
sub
mov
ror
adc
or
stc
mov
mov
adc
ficompl
ffree
xor
jmp
fdivrs
ja
pop
push
lea
lods
cmp
mov
mov
mov
mov
sbb
subl
fidivrl
popf
dec
inc
push
into
inc
mov
jmp
inc
fs
xchg
inc
mov
ret
mov
rolb
cmp
movsl
mov
lret
int3
aaa
in
mov
sbb
sub
adc
scas
loope
lret
imul
stos
fistpll
sub
mov
insb
imul
mov
cmp
fdivl
ret
lret
aas
test
mov
std
es
add
inc
daa
ficoms
movsb
inc
adc
scas
aad
repz
mov
add
xorl
xor
stos
jne
xchg
push
dec
jp
outsl
mov
cmp
in
pop
add
iret
aaa
bound
add
imul
or
arpl
insl
add
xor
shl
addr16
cltd
mov
inc
ret
cmpsl
mov
mov
fldcw
in
in
cmp
fcmovnu
xor
enter
cmp
jecxz
mov
or
jge
and
and
fs
dec
testl
adc
or
call
sub
popa
sbb
jno
sub
adc
scas
fldpi
sub
bound
mov
dec
cmp
daa
aam
push
and
mov
mov
rorl
loop
xor
jg
addr16
mov
fnstenv
inc
loope
jbe
xor
and
mov
sbb
mov
and
and
or
jge
js
popa
out
loope
add
add
out
sbbl
mov
iret
cwtl
or
out
das
ja
or
or
xor
cmp
mov
sbb
mov
cld
les
cmp
cmc
mov
xchg
sahf
pop
and
mov
mov
xchg
inc
scas
out
add
movsb
push
les
pop
cmp
xchg
fnsave
jb
fldt
mov
or
sub
or
adc
repnz
mov
leave
sub
inc
xchg
cmp
dec
or
mov
les
push
out
ficomps
push
stos
inc
and
xchg
mull
push
sub
insb
test
cmp
mov
mov
xor
dec
rorl
stc
addb
cmp
cmpsl
icebp
fistps
inc
push
lcall
xchg
mov
cmp
mov
mov
in
lea
dec
mov
adc
sti
xor
outsl
fnstenv
iret
shrb
andnps
sahf
push
int
je
jl
mov
loopne
lock
jl
mov
sbb
aam
or
aad
lcall
iret
lock
ss
mov
adc
dec
mov
push
mov
gs
add
leave
add
mov
jnp
or
sub
mov
mov
je
cmp
mov
cwtl
jo
xor
xchg
xchg
xchg
fdiv
stos
fs
fcomps
cs
dec
add
fdivrs
lods
dec
pop
sahf
pop
push
bound
sub
hlt
test
pop
jo
out
inc
addr16
imul
std
push
mov
inc
or
lahf
lea
ljmp
in
pushf
test
shlb
lfs
aad
fs
nop
enter
mov
sarb
cld
mov
fnsave
mov
out
loopne
pop
stos
es
lock
int3
push
ret
pop
xchg
or
lea
jecxz
push
dec
mov
out
xchg
mov
inc
inc
jo
jecxz
and
sub
outsb
xchg
fdivp
and
inc
stc
fwait
aad
jno
pop
ja
or
or
mov
dec
or
ss
xor
nop
ja
scas
cs
mov
movsl
xchg
xchg
imull
insb
into
jg
ljmp
inc
pop
popf
ss
xor
dec
in
mov
xor
leave
mov
bound
aam
xor
mov
inc
popa
xorl
jae
sbb
lock
cmpsb
cmpsb
adc
stos
popa
jo
push
jle
pop
mov
sub
xchg
fs
push
sbb
cmp
inc
pop
js
pusha
daa
aad
scas
xor
lahf
repz
pop
jle
test
xchg
ffree
shr
dec
add
adc
pop
int3
shl
cmc
into
mov
pushf
pop
into
mov
xchg
cmp
mov
mov
in
sbb
lea
ret
jnp
movsb
add
mov
add
sub
iret
mov
mov
clc
mov
xor
xchg
pop
loop
scas
in
push
dec
dec
stc
fnsave
jo
frstor
pop
xchg
shlb
and
cmpl
popa
adcl
dec
data16
ss
mov
loop
shll
mov
clc
outsb
fidivrl
ja
jae
mov
stos
in
ss
xor
xchg
xchg
shl
cld
mov
cmp
or
push
cmp
add
sub
mov
icebp
rcrl
or
aam
mov
out
out
sub
push
add
fwait
pushf
sbb
fdivr
push
mov
enter
lret
mov
sbb
cmp
or
jp
inc
jg
in
mov
xchg
dec
push
cs
push
mov
lret
das
cmp
dec
insl
mov
ficompl
add
divb
mov
xor
jno
or
or
xor
ror
jl
fnop
gs
sub
imul
pop
pop
mov
fs
std
jo
mov
and
sbb
cmpsl
test
or
mov
dec
popa
jg
outsb
fldl
inc
in
xor
ret
cmp
icebp
sub
or
andl
or
imul
jle
scas
mov
icebp
aam
pop
shl
sub
imull
rcl
dec
jno
xchg
imull
jns
add
ficoml
sbb
movb
int3
pop
adc
dec
pop
sarl
nop
jl
dec
and
lods
mov
sbb
jle
push
pop
fsubr
ret
pop
xchg
mov
xchg
lods
push
sub
pop
dec
lcall
pushl
jmp
or
cwtl
mov
and
mov
out
inc
cmp
and
aas
decl
push
pop
add
sub
icebp
aas
clc
inc
in
data16
sbb
add
or
shrl
cmp
pop
ja
lcall
fldl
mov
inc
loop
mov
aam
enter
cmpsb
inc
sarb
in
ja
adc
cwtl
mov
imul
pop
jg
mov
push
jnp
push
and
fwait
add
push
lds
or
in
push
fdivrp
int
xchg
xor
mov
stos
add
mov
test
pop
cmp
sub
sahf
mov
push
mov
pop
arpl
pop
imul
stos
je
sbb
mov
stc
lcall
sub
xchg
pop
mov
jmp
cwtl
cld
cmc
or
js
xor
stos
pop
push
sbb
cs
addr16
wrmsr
cs
cmp
adc
cmp
xor
inc
xor
mov
xchg
push
sbb
jb
or
mov
adc
cmp
ss
repnz
or
xorb
cmp
flds
shl
xchg
imulb
pushf
and
out
test
fistpll
inc
outsb
xchg
arpl
or
jae
out
cld
adcb
stos
pop
shll
jb
aam
fnstsw
popa
test
and
imul
jae
roll
jo
out
in
aaa
push
xchg
mov
repz
xor
test
int
push
pop
popf
cmpsb
sbb
test
add
adc
mov
lods
push
ja
jo
aas
adc
fs
leave
mov
ret
int
data16
mov
scas
mov
repz
adc
add
outsb
mov
xchg
add
aas
xchg
mov
repnz
sbb
fdivl
cmp
cmp
popf
sub
les
data16
pop
jl
int3
mov
lret
lods
push
es
fwait
jl
xor
jl
pop
fiadds
call
iret
mov
cmpsl
cwtl
mov
jo
cs
sub
mul
xor
jae
stc
out
jg
inc
jge
cmp
mov
cld
cmp
shrl
jo
lcall
jl
lcall
mov
pop
and
scas
sbb
cmpsb
lret
jne
jno
adc
pop
inc
sti
pop
repnz
push
dec
cmp
loopne
and
leave
and
cmp
fcmovu
push
cmp
cmp
cmp
mov
mov
aam
pop
pop
aad
popf
cld
push
bound
in
xor
enter
jo
loope
dec
fs
sub
add
clc
fisubrl
mov
dec
pop
fldt
fcom
popa
pop
ret
sub
dec
mov
sub
jb
bound
and
or
js
xchg
add
shlb
adc
adc
lods
gs
xchg
fldcw
aaa
cmc
jo
pop
inc
dec
ficoml
test
les
iret
clc
orl
jg
xchg
insb
or
xchg
add
out
fnstcw
ds
jnp
mov
ds
mov
mov
mov
jns
jp
aam
test
pop
loopne
mov
dec
add
dec
rcll
pop
jecxz
stos
loopne
cmp
xchg
lahf
dec
adc
loope
mov
sbb
xlat
jno
xchg
sub
xlat
add
lock
pop
and
cli
popa
movsl
outsb
mov
outsb
sahf
jae
scas
or
pop
scas
pop
outsb
lret
adc
js
jbe
ss
push
test
pop
adc
fcmovnbe
sub
cmp
sti
loope
fnstsw
sbb
push
gs
popa
ficoms
cmpsl
jne
dec
or
out
leave
mov
das
push
or
outsl
or
cwtl
fldl
bound
pop
mov
mov
cmpsb
jl
inc
lock
scas
pop
cmpsl
jns
insb
cmpsl
and
cmp
xlat
sub
fldcw
adc
out
cmpsl
or
jmp
mov
pop
push
add
lcall
add
inc
adc
fstps
pop
lcall
pop
jo
mov
cmc
adc
xchg
das
stos
loopne
and
pop
sbb
mov
call
mov
sub
sub
fisubrs
je
dec
push
lea
push
adc
std
mov
pop
xor
int
dec
das
cwtl
sbb
and
push
sbb
mov
jge
int3
and
sub
pop
pop
cmp
jmp
mov
sbb
out
push
sub
dec
mov
inc
xchg
pop
mov
adc
mov
pop
lret
lds
into
enter
inc
cli
test
inc
mov
dec
sbb
stos
push
fildll
xor
fidivrl
and
movsb
jl
shlb
lea
aaa
wrmsr
lret
push
mov
imul
das
stos
or
mov
popa
les
data16
aad
fdivrs
ss
adc
add
add
lcall
jae
lods
fnsave
adc
fdivl
fisubs
aad
pop
fsubp
cmc
and
push
xchg
shrb
ja
sti
mov
push
cmp
dec
mov
sbb
pop
in
pushf
sub
addl
into
xor
bound
das
ret
stos
push
push
push
add
in
adcl
xchg
jb
and
jg
pop
repz
cvtdq2ps
sbb
fs
mov
inc
lahf
mov
xlat
dec
push
leave
adc
out
mov
push
push
cli
push
out
aam
movsb
dec
lds
out
imul
negl
js
lods
and
pop
jae
mov
jae
xchg
int
xor
xchg
aaa
mov
std
enter
cmp
or
lea
iret
mov
iret
sub
push
sarb
movsb
sbb
or
iret
pop
sub
adc
push
movsl
jecxz
cli
gs
stc
add
xor
adc
adc
addr16
inc
mov
jg
cmp
sbb
jmp
aad
push
iret
mov
dec
fcompl
push
sub
mov
adc
lcall
inc
js
insb
lods
cld
pop
mov
sbb
bound
mov
inc
or
cmp
ljmp
pop
jp
add
xor
incb
push
repnz
mov
bswap
aam
lahf
mov
cmp
lret
ljmp
ret
sub
int3
mov
add
jne
or
lahf
push
idivb
add
fcompl
xchg
mov
or
cmp
push
mov
cltd
mov
adc
dec
pop
mov
cltd
xchg
out
mov
repz
mov
int3
jmp
negl
mov
repnz
pop
xchg
insl
aam
rcll
mov
xchg
loope
js
xor
push
inc
inc
jno
pop
xor
inc
inc
xor
mov
sbb
cmp
mov
iret
fucom
fildll
pop
mov
or
inc
cmp
xchg
inc
inc
or
pop
addl
and
dec
idiv
lret
std
ss
rorb
cmc
sub
mov
sahf
pushf
aam
push
jl
jecxz
mov
icebp
cs
mov
cmp
and
pusha
pusha
gs
mov
cmc
push
cmp
add
iret
in
dec
cli
insl
jecxz
inc
or
movsb
dec
pop
cmp
jp
stc
ret
ffreep
mov
pop
ljmp
mov
xchg
loop
pop
xor
fnstcw
mov
dec
sti
jbe
mov
push
add
test
jge
adc
mov
mov
and
inc
out
hlt
adc
xor
js
insb
ds
inc
xor
xor
or
and
test
inc
cmp
cld
push
cs
push
sub
out
and
xchg
jnp
dec
add
enter
push
push
mov
and
sbb
hlt
iret
xchg
cwtl
inc
jbe
cld
dec
aad
or
push
aaa
dec
mov
mov
jle
jg
adc
pop
sbb
test
std
mov
mov
jle
stos
nop
mov
fsubs
cmc
les
jle
sub
jne
or
mov
sub
add
ret
dec
xchg
fdivl
push
push
add
sbb
xor
xchg
and
aas
sub
enter
adc
clc
cmc
in
clc
push
or
sahf
push
roll
cmp
jge
sbb
cmp
mov
jp
mov
push
sbb
jae
fcmovu
mov
hlt
arpl
inc
sbb
inc
lds
xor
mov
push
mov
xchg
and
in
addl
cmpsl
lahf
pusha
inc
and
sub
out
pop
movb
and
cmp
mov
cmp
lods
mov
mov
nop
std
pop
cmp
cmp
sbb
mov
adc
lock
pop
mov
mov
shll
pushf
jbe
inc
xchg
jo
pop
mov
xor
dec
xchg
addr16
fsubrp
and
mov
pop
daa
dec
out
mov
add
adc
pop
pop
mov
test
pop
pop
cmp
ljmp
add
pop
xchg
in
and
push
mov
jmp
into
dec
and
push
stos
dec
or
or
or
or
inc
lea
mov
sub
jl
fcmovb
clc
add
mov
inc
push
test
jmp
enter
lea
lcall
or
das
lods
sub
and
xchg
daa
adc
xor
and
iret
lea
mov
cld
mov
inc
push
fidivrs
lds
lods
adc
sub
jbe
xchg
jecxz
cmc
add
jge
cmp
dec
sti
popa
sub
jns
test
pop
ja
out
repnz
popa
mov
adc
dec
inc
mov
push
push
int
sbb
loope
mov
cld
sbb
adc
cmpl
popf
in
mov
jo
outsb
cli
outsl
cmp
sub
mov
or
adc
pop
jge
pop
xor
dec
jle
stc
jne
shl
out
std
addr16
stc
mull
adc
cmp
jne
fwait
idivb
pop
pop
jo
ja
mov
mov
rorl
and
stc
mov
sbb
imul
cmpsb
leave
loopne
test
mov
addl
jl
xchg
sub
sbb
or
test
lock
cmpsl
add
mov
lcall
jb
fstl
stos
lret
out
adc
xchg
jb
sbb
mov
mov
bnd
push
outsl
push
adc
pop
in
pop
add
jno
mov
inc
or
pusha
stos
xor
lahf
and
insl
cmpsl
imul
jmp
adc
outsl
adc
xchg
pop
dec
loopne
push
mov
lea
and
sbb
in
stc
aas
sbb
out
fs
sbb
cmc
mov
loope
mov
jnp
or
cltd
pushf
sbb
inc
xchg
ja
and
jne
std
in
ja
gs
sub
ljmp
dec
shr
adc
add
lea
or
scas
in
cltd
xor
mov
xor
dec
mov
clc
xchg
push
sbb
repnz
jg
test
jae
mov
lcall
repz
orb
sbb
sub
and
rcr
in
xchg
or
mov
aam
xchg
hlt
xor
sbb
cmp
and
je
mov
cmp
mov
in
jns
loope
or
inc
popf
mov
fdivrs
int
push
xor
gs
jo
sbb
loope
dec
mov
push
push
je
cmp
repnz
scas
ja
test
dec
in
jmp
cmc
dec
jge
pop
fldt
imul
iret
ss
mov
clc
scas
pop
shrb
outsl
sub
out
xchg
int
aad
jmp
hlt
dec
cs
movsl
icebp
test
sbb
cs
pop
and
sbb
inc
mov
push
cli
iret
add
adc
cltd
int
mov
mov
push
mov
mov
jo
inc
vpshuflw
icebp
mov
bound
jne
mov
mov
and
add
clc
cmpb
mov
inc
std
ret
inc
jl
scas
adc
push
scas
adc
push
push
repnz
jb
cwtl
das
xchg
sbb
cltd
cwtl
dec
in
inc
dec
leave
sbb
mov
imul
pop
mov
sbb
loop
cmp
in
jle
mov
or
les
or
push
or
or
xchg
push
push
lods
cmp
out
xor
xchg
and
pop
add
sub
sub
lods
cmp
lcall
pop
jecxz
xchg
jg
xor
stos
jmp
repnz
aaa
cmpsb
int
pop
inc
jb
dec
test
pop
jne
std
cmpsl
call
pop
push
xor
cltd
push
cmpsl
cmp
mov
sti
in
icebp
or
add
mov
sub
lcall
lret
movsb
aam
cmp
stc
je
aam
sbb
sbb
xlat
jae
push
push
sbb
lock
lret
fwait
dec
subb
outsl
xor
or
aad
fisubs
dec
insb
notl
outsl
loope
clc
cmp
insb
push
xlat
sahf
push
daa
jnp
jns
add
jp
or
lods
and
jl
lea
jg
jbe,pn
paddb
cmpsl
push
cltd
pop
jge
sbb
and
nop
xchg
jmp
and
and
dec
stos
mov
pop
xchg
cmpsb
rorb
repz
shl
sarb
test
test
arpl
stos
push
push
mov
xchg
imul
imul
pop
insl
cli
mov
cmpsb
stos
cmpsl
mov
jp
test
mov
push
daa
pop
xchg
nop
cli
xchg
fiadds
xor
sbb
stos
jno
xchg
divb
sbb
jge
std
jne
ss
sub
or
and
mov
push
popl
cmp
out
push
jmp
xchg
fnstenv
jle
xchg
pop
jmp
stos
pop
movsb
fucom
jne
cmp
add
test
inc
repz
jbe
dec
mov
mov
out
sbb
pusha
sbbb
outsl
orl
test
and
hlt
pushf
rclb
call
aaa
andb
cmp
adcl
sbbb
rolb
pop
sbb
pop
jl
mov
xchg
adc
sarb
int
add
stos
int
sub
pop
fisttpl
jge
andb
add
adc
jge
sub
frstor
xchg
xor
sub
int3
xchg
and
sub
bound
xchg
inc
sbb
push
mov
jbe
and
pushf
enter
clc
loop
xchg
add
mov
sbb
mov
sbb
xchg
rcrb
and
jge
dec
push
sub
add
icebp
cwtl
das
xchg
cmp
cs
or
call
pop
push
repnz
repnz
pop
mov
mov
ja
flds
int3
enter
mov
imul
jmp
dec
ja
inc
dec
sarl
sahf
aaa
fwait
rep
and
std
cmpb
fdiv
test
and
dec
shrl
scas
mov
cmpsl
push
fdivp
pop
insl
addl
int3
clc
into
call
in
fcmove
mov
fs
xchg
mov
cmp
jp
out
loopne
xchg
fcomps
fldcw
mov
sbb
xor
pop
sbb
jp
imul
fbstp
icebp
sbb
rcll
test
dec
aam
mov
scas
jno
mov
mov
add
lea
xchg
push
je
cli
sbb
pushf
cs
popa
or
mov
lods
push
mov
mov
sbb
jmp
insl
dec
mov
or
mov
into
andb
ret
pop
jle
mov
ror
cmpsb
or
leave
inc
addr16
xor
lock
xor
adc
push
mov
inc
xchg
leave
mov
testb
aam
and
sbb
push
mov
inc
pop
enter
in
das
in
push
fisubs
cwtl
sahf
cltd
out
popa
dec
sti
adc
push
int
xlat
cltd
outsl
seto
repnz
es
push
cld
addr16
mov
loopne
je
push
sbb
mov
and
in
imull
fwait
pop
cmp
cmp
xor
fldl
push
push
lea
push
je
and
push
xchg
push
rorl
aaa
call
hlt
roll
dec
cwtl
popf
lret
subl
xor
mov
cmpsb
mov
shl
test
or
sar
sub
aaa
jge
xchg
arpl
aas
dec
adc
mov
pushf
mov
rcll
or
xchg
daa
sbb
add
add
cmpsl
xor
adc
test
inc
mov
mov
cld
and
leave
adc
ss
or
addb
jns
shl
mov
out
mov
push
bnd
add
daa
push
push
xor
rcr
jge
jb
iret
int
shll
fstpl
inc
xchg
scas
lods
or
imul
flds
or
fwait
jae
or
aas
cmc
das
pop
das
inc
adc
fdivrp
xor
cld
adc
cmp
and
mov
pop
push
inc
adc
mov
or
ret
fdivr
movsb
popa
shlb
pop
mov
lods
mov
jle
insb
or
arpl
mov
pop
inc
dec
inc
mov
fstpt
shrb
dec
ljmp
jecxz
mov
mov
fdivrl
aaa
int3
mov
hlt
into
adc
jmp
mov
push
cmpsl
mov
fnstenv
lret
xor
push
cld
imul
pop
mov
lea
lods
repz
fxch
mov
add
test
cli
fmull
sbb
cmp
jne
push
adc
mov
lods
aam
sub
dec
mov
mov
dec
rclb
mov
or
add
xchg
xor
jmp
imul
enter
cmp
mov
dec
fwait
or
out
js
adc
aam
lods
and
mov
sar
jbe
mov
insb
addl
add
outsb
adc
jns
pop
into
mov
push
addr16
push
cmc
stos
cwtl
adc
mov
jbe
mov
or
imul
bound
push
cmp
add
outsb
xor
hlt
mov
sub
push
adcb
movsl
sbb
fcmovbe
push
mov
pop
insl
mov
pushf
dec
mov
lret
mov
rolb
dec
dec
pop
mov
jle
jl
shll
pushf
rclb
int3
jo
xchg
xor
mov
cltd
addr16
cld
xchg
sbbb
xor
out
scas
cmp
insb
cmpsb
cmpl
sti
sub
adc
sbb
jae
mov
fisubrs
int
in
cmp
mov
mov
xor
mov
out
cltd
pop
push
test
xor
mov
cmp
fimuls
mov
push
jecxz
or
shll
push
or
fdivrs
fs
jo
nop
dec
add
mov
stc
pop
loop
pop
sub
call
or
mov
add
mov
out
cmp
adc
aas
xchg
inc
cmp
call
es
in
scas
inc
ret
or
into
out
lret
adc
inc
faddl
sbb
arpl
add
fisubrs
dec
or
dec
xor
jl
push
add
imul
push
jmp
insb
pop
nop
shrl
xlat
push
inc
inc
nop
inc
into
ljmp
movsl
jl
outsb
cmp
pop
mov
sbb
jp
or
sub
andb
pop
fisubrl
ss
mov
cmovno
jnp
subb
jbe
pop
add
jne
lahf
cli
inc
loop
inc
cmp
shrl
xor
lcall
xor
in
xchg
adc
inc
push
jge
adc
or
fidivs
aam
ret
mov
jge
mov
fdivl
fnsave
cmpb
fisubs
sbb
cmp
mov
pop
sarb
inc
jmp
popa
mov
dec
inc
push
or
sub
mov
fisttpl
mov
add
addr16
adc
xchg
insl
ds
repz
outsl
jo
xchg
mov
daa
push
scas
jmp
movsl
or
xchg
cmp
enter
push
or
push
jb
pop
dec
jb
jns
pushf
mov
push
andl
pusha
pop
call
push
add
cmpsl
mov
xor
mov
or
mov
lds
or
rcl
addr16
mov
push
mov
inc
imul
mov
ja
scas
jmp
sub
pop
lret
adc
sahf
push
int
cmp
or
mov
imul
mov
xchg
dec
icebp
das
inc
aas
sbb
not
mov
jne
int3
cmpsb
or
adc
sti
pop
xor
sarl
add
nop
imul
pop
and
aad
add
sti
es
push
adc
jo,pn
scas
mov
mov
mov
cwtl
cltd
sub
in
dec
inc
xchg
sbbb
xor
and
gs
push
mov
push
loopne
sbb
ret
push
ret
inc
inc
jo
addr16
sbb
cmpl
mov
push
sub
daa
gs
add
jp
or
call
fsts
in
sbbb
mov
or
out
cwtl
dec
sub
std
xchg
mov
loop
push
scas
frstor
mov
hlt
and
and
sub
dec
mov
inc
pop
push
mov
pop
sarl
fisubs
orb
xchg
or
cmp
ffreep
loopne
scas
into
jo
add
pop
aas
push
cmp
fisubrl
adc
jge
cs
dec
or
xor
cld
sub
out
jecxz
pop
push
pop
into
fldl
or
mov
shl
test
hlt
push
sub
push
inc
push
iret
cmp
and
dec
add
dec
sbb
inc
lea
jne
add
cmp
xchg
mov
cmpsb
adc
or
imul
lds
imul
es
jne
orl
jno
add
cs
xor
mov
out
jae
mov
sbb
loopne
mov
test
leave
xchg
mov
iret
fadd
cwtl
clc
add
mov
dec
cmp
in
mov
dec
xor
aas
insb
and
pusha
sub
mov
cmp
jmp
clc
xor
mov
pop
mov
push
div
ss
xchg
mov
int
mov
cs
lock
mov
dec
lea
ss
mov
xor
mov
cli
arpl
inc
mov
dec
ret
popl
inc
or
cmp
pop
push
push
mov
int3
cmpsb
out
pop
cs
push
lock
shlb
int3
xor
xchg
dec
sahf
jp
push
inc
pop
pop
sub
in
adc
test
daa
pop
test
mov
and
xchg
add
sarb
mov
and
scas
pop
xlat
inc
mov
dec
push
call
push
mov
cmp
lret
bound
inc
in
rclb
insb
inc
and
and
push
mov
pusha
sub
sbb
lock
inc
xchg
sarl
movsl
mov
jnp
dec
sahf
mov
push
sahf
sub
inc
cmpsb
inc
sti
and
outsl
in
xchg
xchg
sbb
inc
bswap
pop
cmc
sub
or
sub
inc
mov
repz
inc
jecxz
xor
xor
push
and
xchg
addr16
js
ljmp
bound
inc
inc
xor
jns
push
fcomp
cmpsb
or
sbb
add
pushf
sbb
xlat
sbb
mov
icebp
add
int3
enter
sub
adc
int3
enter
push
mov
call
cwtl
xchg
int
mov
jg
lock
stos
pop
cmp
cmpl
repnz
xchg
enter
pop
dec
mov
xorl
mov
pop
jg
shll
lcall
bound
pop
in
mov
shrl
sbb
testb
loopne
sub
je
cmp
aam
mov
std
lds
pusha
clc
add
mov
out
pop
jo
in
jns
xor
mov
push
sub
push
clc
xchg
test
loop
cmp
dec
aad
cmp
lods
fmull
xchg
insb
in
in
test
mov
or
add
out
xchg
xchg
xchg
shl
xor
shrb
mov
sub
leave
dec
lahf
sub
out
xor
stos
inc
out
mov
fcmovnbe
push
in
mov
cwtl
cld
or
cltd
jbe
xorl
cmpb
jle
cwtl
or
loopne
mov
push
sub
aaa
inc
or
mov
out
cmp
adc
mov
outsb
jmp
sub
pop
push
add
incl
lret
sbb
call
mov
mov
mov
lods
jge
mov
adc
and
inc
mov
adc
mov
cmpsb
cmp
test
pop
cld
inc
pop
ret
push
outsb
and
sarb
and
arpl
pop
mov
dec
test
mov
sbb
popf
ret
mov
dec
repz
leave
pop
das
int3
mov
enter
mov
out
fidivl
jl
daa
lods
loope
adc
pop
cld
adc
mov
pop
sbb
repz
pushf
inc
ja
cltd
xor
or
jbe
mov
sub
adcb
pop
mul
adc
xchg
fnsave
cmc
aam
jo
cmpsb
sub
lods
sbb
mov
test
cmpsl
shl
xchg
fistl
add
repnz
mov
mov
jb
sub
leave
cmp
mov
clc
sarb
dec
mov
or
mov
xor
imul
dec
cli
pop
dec
inc
ljmp
jp
xor
xchg
sbb
cld
push
cmpsl
jno
jb
lahf
insl
cmpsb
dec
mov
sub
ds
push
mov
or
js
dec
inc
pop
mov
cli
ss
je
scas
xchg
daa
aas
ljmp
shr
lds
shl
mov
mov
mov
mov
adc
cmc
cwtl
dec
mov
les
dec
fmuls
movsb
das
in
outsl
aad
inc
int
les
or
cmp
iret
es
cmp
sbb
inc
jge
repz
maxps
and
mov
fcom
call
pushf
pop
cmp
push
fiaddl
loopne
scas
pop
xor
jecxz
jp
pop
pop
mov
mov
in
cmp
iret
in
jb
pushf
xchg
pop
lds
adc
icebp
push
sarl
fmull
movsb
lahf
cltd
and
sbb
test
or
pop
push
mov
stc
aam
jbe
cmp
adc
pushf
lods
sub
mov
ret
cld
mov
push
xchg
sbb
xchg
sub
cmp
mov
jbe
arpl
dec
xor
cld
mov
push
cmp
out
mov
dec
inc
xchg
aas
pop
es
daa
xchg
insl
and
xchg
repz
mov
int3
and
je
or
mov
fstpl
pushf
daa
cmp
in
idivl
sub
jle
ljmp
push
mov
jbe
sub
pushf
pop
stos
dec
sbb
movsl
ret
fistps
jno
int3
push
popa
add
pop
xor
push
pop
imull
push
int
cmpsb
lock
int
in
mov
mov
dec
stc
jl
sbb
jp
mov
mov
add
jae
and
xor
mov
inc
sub
mov
xor
jmp
and
stos
or
mov
mov
in
add
jmp
add
pop
inc
push
popf
es
popf
mov
jbe
stos
push
push
gs
out
push
xor
loop
out
dec
mov
jnp
cs
stos
jp
cld
call
les
xor
cld
push
push
aam
fisttpl
lea
das
and
sti
push
push
in
mov
sarb
adc
fadd
push
in
xchg
pop
inc
movsb
fists
stc
int
inc
pushf
push
loopne
sbb
xor
js
adc
addb
jge
push
outsl
lcall
xor
dec
bswap
xor
pop
inc
into
push
pushf
subb
shlb
sbb
or
and
repz
dec
aam
jo
pop
mov
cli
imul
jp
pushf
adcb
jg
test
imul
xlat
popa
call
pop
loopne
cmc
rclb
xor
mov
dec
rcr
int
jl
adcb
cmpsb
test
adc
adc
in
xor
std
mov
int3
fsubrl
addl
inc
stc
filds
jle
adc
mov
or
test
jbe
mov
les
dec
xor
aad
cli
in
add
push
cmp
dec
mov
sub
int
stos
xchg
into
loop
mov
outsl
sub
or
pop
push
xor
sbb
mov
xchg
xor
lods
clc
cltd
xchg
jmp
mov
subl
loope
jecxz
jbe
iret
jae
cmp
jmp
dec
test
fldl
sub
lods
pop
jns
stos
xor
xchg
dec
sub
mov
sbb
fdivr
outsl
or
out
je
inc
mov
mov
xor
jmp
ljmp
inc
or
xor
pusha
add
cmp
inc
roll
jo
imul
adc
fsubr
cli
add
test
mov
push
or
inc
sub
insl
shll
aaa
mov
xor
mov
mov
push
push
pushf
lahf
mov
mov
adc
xor
add
clc
mov
mov
pop
jp
add
cmovo
push
mov
je
iret
fisubrs
push
xchg
inc
lock
into
mov
and
out
mov
push
xchg
sarl
lods
adcb
or
loope
mov
push
mov
fildl
jge
mov
sbb
stos
cmpsb
icebp
push
mov
ret
test
cmpsl
pop
sub
insb
mov
fs
sub
cmpsl
xor
pop
bound
adc
or
es
fsts
mov
call
lea
loop
cmp
hlt
loopne
hlt
sbb
mov
jecxz
push
pop
add
shrb
sub
xor
or
push
jecxz
int3
add
mov
inc
fisubrl
stos
mov
mov
mov
xchg
dec
xorl
insl
stos
xor
cltd
pop
pop
jl
sbb
inc
ja
jne
in
ja
jb
mov
andl
inc
mov
in
sti
mov
or
loope
pop
sbb
xchg
push
iret
cli
and
stos
mov
jne
shrl
dec
fcoms
jo
arpl
out
jl
pop
cmp
or
in
ficomps
and
jp
pop
adc
aaa
call
mov
push
rorl
sub
jmp
mov
leave
mov
lods
out
das
mov
push
fcoms
sbb
mov
enter
push
aaa
pop
fistl
iret
enter
jns
jecxz
rcr
mov
mov
adc
or
fstps
push
push
and
aas
mov
das
fidivl
stos
or
xchg
out
mov
loopne
out
sbb
out
daa
mov
mov
or
repz
cmp
jns
jge
outsb
or
js
cmp
sbb
mov
nop
lock
mov
stos
int
jge
loop
jecxz
mov
mov
pop
inc
adc
or
test
xor
gs
adc
lret
xchg
sub
test
mov
and
ret
in
lcall
movsl
shlb
mov
adc
and
lds
out
sbb
or
push
jb
fistpl
pop
nop
jnp
and
ds
frstor
jns
jecxz
int3
jns
ficoml
das
subb
xor
adc
subl
dec
sub
xchg
in
mov
add
inc
or
add
jmp
leave
inc
ret
and
and
popa
cmpsb
addr16
call
or
jmp
inc
test
cmp
lock
int
sub
adc
push
int
std
mov
cli
idivb
jnp
loopne
std
js
push
adc
fstps
test
clc
test
ret
push
push
add
xchg
stos
imul
mov
jne
cmp
adc
push
fldenv
sbb
fstl
xor
sbb
pop
arpl
sub
cmp
cmp
mov
nop
dec
stos
xchg
mov
repz
test
add
inc
std
nop
ss
icebp
or
adc
dec
ja
lea
cmp
cmpsl
bound
push
fstl
add
int3
pop
stos
jp
and
sub
xor
jg
sbb
xchg
into
mov
xchg
dec
cltd
and
xlat
mov
add
sub
mov
outsb
test
add
cld
mov
adc
or
testl
repz
out
mov
dec
test
pop
sbb
test
stc
push
adc
ret
and
dec
mov
push
jb
mov
mov
dec
mov
bound
or
lret
xor
aad
je
ljmp
notl
xor
mov
fisttpl
jb
clc
jae
stos
ds
test
add
js
cmp
sub
adc
or
adc
lret
sbb
roll
addr16
insb
pop
mov
and
stos
repz
test
cmp
push
ljmp
sbb
add
xchg
into
inc
and
pop
mov
xor
outsl
cmc
scas
sub
lea
jns
test
pop
test
loop
jle
lret
add
addb
in
cmp
add
inc
mov
sbb
adc
stos
or
mov
push
fdivrl
lcall
scas
lods
pop
cwtl
inc
insl
fcmovnb
aad
and
jle
je
shll
ret
pop
jle
and
sbb
scas
scas
jmp
push
mov
test
fcom
test
out
mov
ja
ja
roll
mov
mov
lret
jle
push
les
lods
sbb
adcb
dec
add
mov
adc
add
aam
jg
or
lahf
cmpsb
ds
xchg
adc
lret
fadd
sub
pop
movsb
jno
shl
mov
cmp
cmp
inc
aam
pop
xchg
pop
popf
mov
in
xor
xor
aaa
call
push
pop
cmc
mov
add
aaa
dec
and
ret
xor
mov
cmp
negl
test
push
insl
jbe
add
xchg
push
lcall
bound
fsubs
fsubs
out
mov
push
repz
insl
add
popa
jmp
inc
pop
js
push
and
test
sub
sbb
inc
adc
test
test
shll
add
ror
jl
push
test
es
cltd
sbb
push
stc
imul
rorl
inc
les
in
mov
popf
test
shlb
sti
cmp
out
stos
int3
inc
jae
repnz
push
inc
cmpsl
mov
fistpll
cmp
adc
scas
mov
jno
xchg
sbb
xor
cs
push
dec
cmp
enter
inc
call
loope
out
inc
sbb
pop
and
fwait
ja
push
stos
push
jle
add
out
jp
sub
cmp
and
out
dec
adc
pop
mov
jl
push
popf
sub
mov
test
pop
aaa
ds
fwait
xacquire
imul
and
xor
mov
pop
add
jl
add
cld
sbb
add
add
xor
addr16
mov
pushf
sbb
jno
xor
ljmp
inc
jo
sub
rcl
add
xor
push
mov
lock
adc
ds
lcall
inc
sbb
mov
pop
dec
or
cmpsl
add
cmc
es
scas
push
add
aaa
in
imul
sub
mov
test
int3
daa
pusha
push
popf
adc
mov
out
bound
imul
inc
fnclex
popa
or
jl
add
sub
cli
jnp
shll
dec
lcall
cwtl
sahf
adc
test
in
pop
mov
pop
bswap
cmp
addr16
push
xor
xlat
and
aas
pop
imul
jns
jns
addl
test
inc
add
stos
mov
xchg
inc
xor
pop
ret
lea
push
jg
fadds
aad
push
add
xchg
aad
in
sub
movsl
sbb
popf
ret
les
mov
fsub
gs
mov
pop
push
stc
pusha
jno
xchg
pop
or
lods
in
sub
jno
add
int
sar
das
daa
scas
mov
jg
lret
or
in
aaa
lds
mov
and
ret
mov
cmp
sbb
dec
dec
jp
sbb
pop
cld
addr16
jb
mov
pop
out
arpl
sbb
in
xor
arpl
push
lcall
int
mov
in
xchg
sub
addl
push
jbe
fsubl
dec
jle
shlb
adc
lods
dec
and
cmp
cmp
shll
pop
adc
insl
in
mov
pop
inc
dec
idivl
mov
mov
daa
xchg
jecxz
cmp
movsb
arpl
fisubrs
inc
icebp
push
mov
cmp
push
sub
fdecstp
xchg
daa
jb
test
rcrb
push
lcall
sub
xor
lea
jbe
jmp
and
jg
jns
ljmp
cltd
or
loope
add
testb
adc
clc
and
push
mov
arpl
call
fisubs
sbb
push
cmp
in
icebp
cmpl
andl
sub
cmp
mov
popa
pop
xor
add
int3
loop
mov
test
cmp
fdivr
outsl
add
dec
aas
dec
push
data16
negb
push
inc
int3
fs
das
or
mov
xchg
or
xchg
sub
xor
lds
inc
shlb
mov
pop
xor
jae
pop
rcrb
mov
dec
loop
clc
lahf
rclb
loop
aas
inc
cwtl
test
out
stc
push
je
xchg
mov
es
mov
mov
lea
ret
xor
push
filds
js
jae
push
add
adc
bound
lods
sahf
xchg
jae
in
xor
mov
pop
fisubrs
pop
xor
dec
jo
mov
sbb
cmpsl
clc
cld
xor
xor
jae,pn
sahf
insb
test
jae
push
xchg
mov
xchg
adc
mov
pusha
ja
push
xor
dec
ret
cmp
jecxz
roll
repnz
sbb
rol
lods
pushf
and
and
dec
jl
ret
mov
push
xchg
cwtl
ds
cli
fucomi
mov
pop
jmp
mov
dec
andb
push
xchg
fsubp
sarl
cs
fsubp
dec
jle
or
clc
xor
adcl
adc
inc
xor
test
jne
cs
lods
push
xlat
adc
add
outsl
pop
push
stc
xchg
shll
push
mov
pop
push
popa
pop
rep
mov
mov
cmp
xlat
faddl
sbbl
or
dec
cmp
and
sarb
enter
add
imul
pop
sahf
outsl
or
jl
arpl
pop
mov
lds
xor
fbstp
inc
rclb
and
dec
cwtl
rol
or
repnz
icebp
xlat
pop
lahf
movsl
fdivrs
add
pop
sahf
call
sub
sbb
popf
outsl
mov
addr16
fcompl
xor
ds
outsb
popa
stos
sbbb
adc
jbe
loop
sbb
lahf
adc
pop
mov
in
pop
mov
mov
xchg
loop
je
and
mov
ja
fwait
jae
jmp
push
dec
insl
push
dec
cmp
mov
push
cli
nop
inc
pop
dec
mov
jp
fists
fsubrl
and
jge
rorl
add
xor
pop
pop
repnz
loop
mov
mov
test
xor
adc
lea
loopne
movsb
cmp
sti
jb
jo
lret
je
xchg
fcmove
push
sub
or
inc
daa
popa
mov
inc
mov
push
shll
out
cwtl
and
mov
stc
leave
inc
pop
fdivrp
xchg
ss
repz
stos
push
pop
mov
or
inc
jae
daa
aam
negl
mov
pop
cwtl
pop
stc
int3
jnp
fstps
pop
dec
or
roll
cmp
fstl
xchg
dec
cmp
pop
dec
cmp
sub
cmp
mov
inc
adc
lcall
out
out
repnz
cld
or
jno
out
add
xor
mov
and
pop
xor
neg
push
inc
test
out
bound
mov
inc
pop
cmp
inc
rcr
and
popf
sbb
mov
xor
pop
jns
arpl
mov
mov
mov
call
aad
sub
sbb
es
adc
mov
jb
xlat
sub
bound
test
jp
test
sbb
mov
xor
leave
imul
sub
sbb
out
repnz
mov
or
push
movsl
jmp
cs
pop
rcr
inc
aaa
inc
lahf
mov
mov
push
inc
scas
test
xchg
sub
pop
mov
sub
or
shlb
dec
popa
rolb
test
dec
out
movsb
pop
cmc
mov
mov
out
in
push
or
sbb
orl
sub
lock
int3
lret
push
cmp
push
xor
mov
jne
clc
jle
xchg
fdivl
ja
shr
or
inc
adc
sbb
daa
mov
repnz
xor
outsl
mov
je
jno
add
jmp
hlt
sbb
sub
call
adc
sub
dec
pushf
mov
jp
xchg
lret
dec
mov
sarb
xchg
aad
mov
js
sarb
lcall
dec
js
sub
inc
daa
cmc
dec
lcall
jmp
aas
addr16
sub
inc
adc
into
jne
push
mov
add
push
inc
mov
cmp
adc
and
sarb
out
out
and
push
lcall
xor
sahf
and
cld
dec
nop
mov
mov
xchg
cmpsl
outsl
aas
int
xchg
xor
popa
adc
xchg
movsl
call
cmovo
cmpsl
add
cmpsb
cmpsl
push
pop
aaa
aad
or
adc
jmp
mov
fists
lods
scas
adc
xlat
jp
clc
mov
xor
addb
clc
loopne
pop
and
js
mov
leave
mov
xchg
pop
pop
xchg
rcr
fdivs
lret
sub
ret
mov
sbb
shrl
repnz
add
pop
lahf
out
push
add
push
mov
jp
adc
jne
inc
mov
cltd
arpl
addr16
arpl
mov
popf
sti
stc
mov
mov
cmpsb
push
aam
scas
xor
cmp
mov
insb
jne
add
mov
pushf
sbb
jo
pop
ja
push
test
and
mov
bswap
push
sbb
xor
or
inc
mov
sbb
mov
icebp
adc
sub
dec
enter
sahf
vpsrlw
orl
stc
adcb
scas
hlt
inc
pop
and
repz
test
lret
lods
in
jecxz
mov
jecxz
lock
dec
lds
cmp
fisttpll
stos
cmp
loopne
popf
dec
mov
enter
adc
jecxz
loop
arpl
ds
cmp
bound
mov
xchg
in
dec
sub
mov
sbb
xchg
cmp
pop
into
jg
cmpsl
or
mov
inc
dec
movsl
stc
int
es
aaa
pop
imul
sub
and
mov
mov
insl
in
mov
imul
div
ds
adc
mov
jnp
mov
jmp
or
push
shl
in
sub
adc
inc
cltd
aad
scas
jl
mov
mov
orl
jecxz
into
xchg
data16
call
or
lahf
repz
xchg
add
lods
lea
mov
xlat
xchg
adc
nop
mov
ljmp
push
lret
mov
cmc
outsl
cmp
push
scas
pop
xor
pop
push
and
ja
or
pop
pop
enter
fistps
push
push
dec
mov
and
xchg
testb
dec
mov
imul
xchg
mov
pop
leave
cwtl
xchg
stos
mov
cmp
mov
hlt
cmp
pushf
popl
jbe
cmp
or
jecxz
adc
mov
and
or
adc
pop
add
adc
pop
in
jnp
sti
mov
pop
dec
leave
mov
xchg
xchg
dec
scas
mov
dec
or
or
and
dec
in
pop
jp
jae
es
pop
sub
scas
mov
out
pop
and
sub
js
pop
jmp
and
or
mov
mov
popf
lods
ss
andl
push
pushf
push
jo
xor
xlat
xchg
test
jmp
subb
out
xchg
mov
into
rolb
fptan
in
stc
mov
xchg
adc
ret
sbb
shrl
adc
inc
push
inc
mov
imul
mul
outsl
mov
inc
cmp
popf
out
fisubrs
jle
out
out
xor
sbb
dec
xchg
mov
icebp
pop
adc
fdivl
es
pop
xorb
scas
dec
insl
pop
sub
pop
andl
lods
lret
vmovntps
aas
and
movsl
addr16
adc
lods
cmpb
mov
or
pop
jmp
es
pop
mov
xor
xchg
loope
push
push
enter
sub
xchg
jg
decl
push
adc
ja
imulb
addl
mov
xor
lds
or
xor
mov
inc
int
xchg
dec
mov
xchg
dec
hlt
les
adc
popf
ret
xchg
in
xor
mov
aad
dec
les
add
mov
mov
pop
jns
and
pop
cmpsb
sti
out
cmp
ret
xor
test
pushf
sahf
clc
sti
mov
incb
jmp
loop
out
push
mov
cltd
rcll
or
and
push
dec
adc
xor
out
cli
je
sti
lahf
call
popa
add
mov
mov
rcrb
sbb
jg
test
or
aaa
loope
scas
cmpsb
add
adc
into
pop
test
mov
inc
push
lret
mov
xchg
xchg
pop
xor
mov
repnz
into
mov
sbbb
test
and
cmp
dec
aaa
lea
pop
test
aam
mov
dec
and
stc
pshufw
mov
hlt
sub
pop
ret
jae
xchg
sbb
pop
dec
and
int
cmp
dec
and
mov
add
dec
mov
mov
sbb
repz
mov
and
or
ljmp
insl
xor
lahf
cmp
sbb
fisubrs
jle
movl
lcall
rorl
adc
lea
les
ret
in
iret
inc
pop
addr16
fistl
sbb
or
es
mov
mov
ja
out
sti
xor
jle
pop
addr16
mov
shll
aad
clc
das
fistpll
aas
ss
jp
pop
pextrw
push
mov
mov
fs
out
mov
popa
jne
std
repnz
test
jno
call
mov
in
lcall
imul
clc
jge
lods
add
cli
imul
adc
fisubrs
mov
pop
ja
lret
push
xchg
idivb
mov
repnz
outsb
push
ret
shl
jmp
das
jo
mov
add
push
lret
call
mov
xchg
out
mov
movsb
cmpsl
fldl
jne
pop
pop
sti
addr16
es
ja
daa
in
lds
out
mov
shrb
and
fdivrs
outsb
and
inc
movsl
jbe
adc
pop
xchg
mov
mov
je
pop
outsl
cmp
cmp
push
jb
pop
out
or
insl
scas
sbb
notb
notb
out
mov
popf
outsb
jge
addr16
test
ret
cmp
sbb
dec
nop
das
add
arpl
sbb
pop
shll
test
dec
data16
or
add
xor
loop
mov
and
cmpb
imul
push
dec
sbb
or
outsl
adc
adc
pop
sti
dec
mov
pushf
fwait
lods
inc
out
dec
icebp
lods
and
lods
cwtl
loope
fists
mov
aaa
xchg
cmp
stc
or
sub
push
out
cmpsb
cmp
sub
lret
xor
xchg
mov
add
or
popf
or
sub
pop
rcll
dec
mov
mov
jge
lods
gs
sub
sbb
dec
jne
mov
out
dec
enter
movsb
xchg
lcall
and
jno
push
push
sub
mov
jle
dec
adc
push
lret
add
dec
in
and
int
test
fisubl
and
push
fcompl
sar
mov
xchg
add
xlat
pop
scas
jno
out
fwait
xchg
add
dec
sti
shlb
lret
aam
sub
or
repz
add
outsb
outsb
int
insl
add
sbb
lcall
adc
lret
in
xchg
stos
cmpsl
into
xchg
pusha
cmpsb
xchg
into
in
jecxz
addr16
repnz
push
pushf
inc
dec
jg
pop
lock
cmp
lcall
outsl
push
into
dec
int3
scas
out
push
repz
jmp
pop
cmc
jae
mov
push
dec
xchg
cmp
cmp
sbb
pop
cld
cmp
andl
clc
jnp
stos
pop
jo
add
fs
cmp
jae
jns
out
cmpb
inc
or
pop
xorl
mov
jl
imul
shrl
test
loopne
mov
cltd
hlt
outsb
mov
cmpb
popa
repnz
xor
sbb
cmp
adc
add
dec
movsl
push
in
pop
mov
push
fidivl
out
push
xor
xchg
ja
mov
jmp
mov
stos
cli
hlt
and
lds
scas
jle
mov
jecxz
jns
mov
lret
dec
movsl
and
insl
aas
dec
loop
pop
adc
and
add
push
mov
loopne
inc
or
adc
mov
xor
loopne
arpl
out
daa
aad
cmp
pop
adc
sbb
jp
aad
mov
hlt
das
push
adc
js
cli
int
sub
add
arpl
insl
adc
test
in
adc
daa
loope
push
lret
mov
mov
xchg
mov
push
sarb
xchg
pop
jno
push
in
xchg
xlat
mov
int3
pop
sub
std
jg
push
add
mov
rcrl
mov
inc
mov
jecxz
test
aad
inc
jp
shlb
push
jnp
mov
push
sub
cld
fs
repz
jo
xchg
or
iret
in
nop
into
and
lret
aas
popf
sahf
lea
sbb
and
pop
popa
add
and
clc
fstl
sbb
mov
xchg
sub
rol
mov
and
push
movsl
aaa
jg,pn
icebp
xchg
loope
cli
fidivl
arpl
jge
dec
popf
sbb
popl
lods
dec
sbb
push
je
cli
jb
adc
stc
mov
adc
mov
or
mov
add
lea
add
mov
and
mov
lods
mov
mov
add
fwait
dec
push
mov
xor
xor
mov
jnp
insb
std
add
and
sbb
pusha
aad
lods
and
mov
and
sub
add
ret
les
mov
ret
and
loope
xchg
aaa
jno
push
movswl
test
pusha
xchg
push
cmp
xor
das
xchg
sub
test
add
inc
shll
pop
and
pop
adc
mov
add
ja
mov
scas
sub
sti
xor
lds
jp
icebp
add
lret
mov
xor
jb
or
add
mov
sub
addr16
mov
and
sbb
pop
jle
dec
bound
cmp
sbb
or
dec
movsb
mov
adc
dec
lods
fiaddl
dec
cmpsb
sub
dec
lods
pop
or
push
and
fists
pop
lds
xor
push
pusha
movl
adc
mov
xorl
into
addr16
xor
jo
jb
out
mov
jb
cmpsl
inc
xor
dec
pop
faddp
adc
mov
pop
inc
fistps
and
in
pop
popf
mov
pop
inc
or
sahf
inc
push
mov
out
movsb
jecxz
popf
loopew
ret
test
out
add
xor
jns
mov
outsb
mov
xlat
jnp
aad
rcrb
mov
test
mov
or
cmp
sbb
jns
ret
jns
idivb
mov
pushf
mov
xor
sub
repz
dec
push
repz
aad
loope
mov
adc
stos
cmc
or
inc
or
sub
push
jns
mov
dec
or
repnz
and
gs
sub
inc
fcoml
into
in
xchg
adc
icebp
loop
aad
or
inc
pop
xor
push
jnp
subl
out
jle
jae
xor
mov
or
add
jae
xchg
in
mov
lcall
mov
jnp
addb
xor
cmp
sti
shlb
add
mov
daa
xor
cwtl
cmp
data16
push
mov
dec
pop
pusha
mov
pop
pop
out
adc
dec
push
popa
rcr
std
hlt
int3
jno
jbe
lcall
push
cmp
inc
stc
maskmovq
jecxz
xchg
mov
gs
cmp
call
push
fwait
cwtl
push
mov
dec
outsb
cmc
jl
sub
fisubl
jo
mov
mov
out
cmp
push
mov
sbb
xchg
cmp
fidivrl
sub
mov
test
idivl
mov
shl
xchg
div
js
das
cmpsl
gs
inc
cli
cmp
je
xor
out
adc
push
sti
notb
dec
lahf
stos
rcr
aaa
sbb
or
std
dec
cmp
mov
cmc
sbb
or
mov
pop
ljmp
mov
adc
test
mov
rorl
mov
pop
bound
adc
jp
scas
push
fistpl
pop
stc
test
ja
jb
push
les
fwait
xchg
mov
xchg
jmp
pop
push
movsl
rcrb
movsb
test
pop
sub
mov
and
sub
adc
push
mov
ja
insl
pop
mov
and
xchg
jnp
dec
sbb
les
aaa
xchg
push
lods
addr16
jecxz
or
ret
incl
inc
pop
cmp
mov
mov
sbb
inc
add
mov
frstor
pop
bound
in
stos
mov
sarl
nop
xchg
lods
jnp
je
mov
mov
push
jno
add
jne
mov
mov
pop
scas
dec
and
adc
add
dec
andl
mov
pop
mov
lock
mov
sbb
push
fwait
lods
pop
out
jle
inc
rcrb
inc
mov
adc
fldl
dec
add
nop
out
mov
lods
fdivs
push
dec
lods
out
mov
in
fnstsw
mov
and
mov
loopne
lea
clc
ret
sarb
add
ss
andb
mov
ret
cmp
cmp
in
sub
fwait
pop
mov
popa
sub
cmp
int
sahf
es
xchg
movsl
jg
xchg
push
imul
js
int
xor
aam
fimull
scas
lods
popa
daa
cmp
add
ljmp
enter
fistps
jmp
xchg
adc
or
shl
push
mov
pop
jl
xor
dec
mov
divl
mov
ss
je
mov
xchg
mov
mov
cld
add
xor
adc
aas
inc
jb
push
test
mov
lahf
outsl
pop
adc
enter
inc
xor
vmovsldup
adc
testb
jecxz
mov
lock
xor
inc
cli
nop
sub
xchg
popa
in
xchg
in
test
ja
cmovs
pop
fistpl
push
sub
dec
int3
addr16
jne
pop
mov
paddd
push
fisttpll
ficoms
iret
out
adc
mov
aaa
jae
dec
pop
aam
scas
in
jl
or
mov
clc
or
jne
xchg
adc
sahf
fsts
pusha
pop
xchg
stos
aam
adc
out
ficoms
sbb
clc
xchg
jmp
repz
sub
jle
daa
hlt
aad
insb
cmp
cmpsb
testl
rcll
int3
inc
adc
addr16
mov
inc
mov
outsb
lock
popa
jne
mov
or
sbb
stos
mov
aas
hlt
adc
cmp
imul
jbe
aam
sbb
loopne
lea
cs
pop
mov
sub
movsl
adcb
mov
sub
lods
clc
xor
jne
scas
cmp
mov
lods
arpl
or
xchg
push
cli
adc
movsl
into
cltd
sbb
inc
ds
push
aam
shr
push
inc
test
dec
in
dec
rolb
lcall
enter
inc
sbb
lock
mov
sbb
popf
pop
in
outsb
ffreep
addr16
lret
xchg
push
test
cmp
fcoms
pop
fcomps
jnp
cli
mov
in
shrl
jae
mov
push
int
cmp
mov
cmp
mov
dec
sahf
fisttpl
mov
hlt
out
sub
jne
fcompp
ljmp
mov
repnz
and
mov
test
imul
leave
cmp
jo
push
push
imul
sbb
je
cwtl
pop
inc
fs
mov
cwtl
sub
call
cmpl
lahf
mov
push
mov
bnd
xchg
push
inc
jnp
enter
insl
sbbb
cltd
adc
mov
int
jl
fldenv
shll
lret
mov
push
pushf
mov
in
xor
adc
pop
mov
mov
xor
xor
adc
lds
sub
push
xor
push
shlb
mov
int3
test
into
cltd
repz
ds
pusha
iret
jmp
xchg
ret
xor
fyl2xp1
sbb
push
xchg
mov
test
cmc
nop
push
repz
ret
sbb
xor
mov
loopne
or
fld
jp
in
xchg
iret
pop
mov
lret
enter
xor
cmpsb
shlb
mov
sub
out
inc
dec
or
lret
jne
mov
arpl
push
mov
cmp
mov
outsl
aad
scas
pop
xor
pop
mov
dec
dec
pop
sar
fs
dec
cmp
add
jno
and
stc
xchg
push
xchg
stos
mov
and
outsb
movsb
hlt
xor
and
inc
adc
lock
pop
outsb
sub
aad
imulb
data16
mov
lret
testb
cmc
flds
xchg
aad
insl
fildl
je
popa
lds
stos
mov
lea
pushf
fisttps
sbbb
movsb
sub
test
stc
push
shll
add
jge
cmc
mov
jle
jmp
es
clc
cltd
mov
dec
mov
aad
xor
out
cmp
jno
scas
push
dec
frstor
push
test
pop
jae
xlat
fidivs
repnz
fs
sbb
das
ljmp
dec
lret
jmp
xchg
ljmp
fcmovnb
scas
iret
fwait
lahf
or
rorb
xchg
xchg
jp
dec
adc
dec
xor
in
dec
imulb
mov
enter
sub
mov
stos
nop
mov
bound
jo
push
dec
dec
outsb
rorl
xor
cmc
enter
lret
sub
lock
mov
test
data16
insl
lahf
mov
popf
push
and
insb
insb
push
in
test
stos
test
mov
mov
pusha
arpl
std
mov
and
adc
cld
and
sahf
jno
addr16
cmpsb
sbb
je
cmp
aam
push
scas
insl
mov
daa
mov
pushf
push
xor
lahf
mov
xor
aam
cld
adcl
outsb
inc
stc
xchg
clc
call
cmp
outsl
add
out
sbb
loop
rcrb
add
lcall
push
outsb
jae
add
fistpll
ret
dec
sub
add
inc
movsb
mov
jno
adc
and
fisubs
addb
add
int
pop
pop
cltd
paddd
add
insb
pop
into
inc
mov
dec
mov
lea
jno
std
pop
sar
sub
icebp
adc
ja
add
xchg
sbb
cmc
std
test
dec
push
arpl
adc
int3
pop
shl
jl
arpl
int
xor
jmp
adc
lcall
inc
mov
dec
push
imul
sbb
pusha
icebp
cmp
arpl
inc
mov
lret
icebp
clc
subb
cmp
stos
or
arpl
cld
and
in
mov
dec
test
inc
pop
scas
cmpsb
sahf
and
cmp
nop
mov
sbb
aaa
fwait
add
cs
pop
popa
filds
push
cmp
out
int3
scas
jne
pushf
sub
iret
dec
or
fimuls
xchg
repz
add
out
scas
mov
inc
xorl
lock
add
mov
push
lea
test
xchg
sbb
push
jne
scas
inc
mov
xchg
mov
xchg
shrl
push
mov
xor
xor
insl
xor
and
in
push
mov
adc
fwait
outsl
and
test
xbegin
push
push
cltd
xlat
adc
jp
mov
or
aaa
aam
mov
pop
dec
mov
xchg
sbb
cltd
cs
dec
mov
popa
aad
popa
pop
nop
cmp
jne
jae
sbb
in
mov
gs
jl
mov
xor
addb
movsb
leave
dec
inc
notl
roll
cmp
jo
out
mov
pusha
inc
or
dec
pop
add
mov
dec
jb
in
or
mov
cltd
adc
lahf
fisttpll
hlt
loop
pop
data16
fistps
hlt
jbe
sarl
jbe
scas
dec
sub
out
xor
out
popa
xchg
add
and
std
shlb
lods
cld
adc
cmpsl
mov
add
cld
stc
rorl
or
xchg
loop
pop
sbb
sub
sarl
jmp
add
xlat
mov
jl
addb
aad
adc
popa
lcall
fistps
cmp
addr16
inc
fld
push
mov
xor
cli
dec
divb
sub
das
movsb
lock
push
dec
mov
loopne
mov
in
frstor
scas
pop
test
push
dec
adc
nop
fsts
andb
sub
jb
loope
jo
cs
mov
jp
pop
sub
std
mov
ja
dec
mov
jge
push
sarl
mov
stc
push
loop
test
std
push
jns
inc
jno
cmp
das
inc
add
shl
mov
testb
fs
xor
push
mov
jg
test
add
fsubl
mov
data16
mov
loop
push
call
pop
push
or
add
push
stos
cwtl
mov
push
insb
std
mov
xchg
roll
mov
add
lock
popa
shlb
mov
dec
xchg
lods
popa
cld
push
jg
or
push
sub
jno
cwtl
stos
movsl
or
mov
xor
sub
fidivrs
jbe
std
xor
repz
loopne
or
xor
cmp
adc
into
sub
cltd
ljmp
jge
outsl
or
fdivrs
pop
std
rolb
mov
out
or
mov
pop
sahf
repnz
mov
pop
sub
stc
push
rorb
and
adc
cs
sbb
jns
fimuls
dec
daa
and
lods
loope
jmp
and
jg
stos
xor
in
ja
in
aaa
xchg
js
movsb
add
sahf
fidivl
repnz
cmp
pop
add
lock
dec
lea
mov
mov
std
push
sbb
ss
in
or
dec
xchg
clc
test
dec
xorl
nop
outsb
xlat
add
popa
sbbb
repnz
adc
dec
imul
pop
cmc
push
jle
push
push
push
iret
mov
scas
inc
addr16
adc
mov
xlat
mov
mov
dec
js
mov
lock
add
adc
add
fs
scas
mov
pop
mov
or
lea
mov
clc
inc
enter
mov
fistl
jb
dec
mov
faddp
lock
inc
or
jb
out
test
dec
mov
pushf
dec
xor
xchg
push
pop
fsubs
or
testl
lds
and
xchg
push
jmp
aad
xlat
shrl
sbb
ret
push
test
xchg
cltd
ffreep
mov
aam
out
sti
in
ljmp
jle
sti
outsb
jecxz
lret
fdivs
push
add
or
or
add
inc
bound
repnz
out
shrl
jbe
imulb
mov
jne
jmp
flds
std
lret
jp
cmp
push
and
jnp
movsl
xchg
mov
loopne
xor
stos
mov
dec
hlt
loope
add
push
xchg
adc
mov
jmp
cmp
sbb
xchg
les
add
xchg
jo
mov
cli
push
daa
add
sbb
loopne
je
mov
mov
pop
mov
js
dec
inc
aam
mov
pop
dec
pop
pop
adc
inc
pop
cmp
pop
cmp
jae
jle
imul
sub
jecxz
push
adc
aaa
fcoms
inc
lods
mov
fistpl
push
arpl
cli
cwtl
xor
out
loope
dec
data16
add
gs
mov
mov
imul
lods
insl
cltd
jne
xchg
pushf
dec
test
ljmp
into
js
lock
lret
popf
jecxz
inc
shlb
test
add
lret
mov
loope
fbstp
pop
shlb
out
lods
mov
mov
xchg
das
aas
xchg
leave
cmpsl
and
stc
pushl
lahf
outsb
or
aad
cmp
fwait
pushf
add
ja
popf
jg
push
lcall
lea
jg
dec
inc
in
mov
lds
dec
and
cld
mov
cmpxchg
int
ret
clc
cld
adc
jecxz
xchg
cli
mov
mov
inc
leave
lret
rol
jg
aaa
ja
ficomps
cmp
movsl
popa
ret
mov
mov
addr16
push
pop
out
je
pop
push
jno
cli
bound
inc
push
testb
dec
push
pop
in
loopne
and
movsb
mov
cmp
pop
aaa
scas
cmpb
cmp
jp
cmp
lret
xchg
cltd
push
out
daa
jne
mov
stos
jl
cmp
and
sub
cmp
dec
lcall
jle
inc
pop
arpl
dec
incb
xchg
add
test
add
sbb
into
test
or
pusha
and
push
ror
pop
xor
xchg
add
imul
cmpb
xchg
out
or
shlb
mov
sub
test
js
cmp
shlb
lds
push
sub
or
cmpsb
add
call
sub
lods
dec
xchg
xchg
jecxz
scas
imul
fcmovnu
roll
out
cld
add
push
mov
xlat
js
xor
cs
inc
push
lods
cmp
repz
rcrl
fs
stos
movsb
imul
and
fcomps
dec
xchg
frstor
pusha
xchg
mov
sub
adc
addr16
je
pushl
pop
dec
mov
arpl
adc
int
xchg
xor
xchg
stos
pop
xchg
lret
xor
insb
add
cwtl
iret
push
in
or
xor
aad
and
mov
fdivl
arpl
push
dec
mov
aad
int3
xchg
dec
imul
sarl
jmp
pop
inc
xchg
in
es
enter
sahf
mov
outsl
add
sub
jae
es
xchg
bound
inc
adc
aam
data16
pop
and
lea
adc
popf
icebp
out
pop
push
pop
int
xchg
or
xchg
mull
pop
aas
fisttpl
sbb
sbb
push
enter
cmp
fdivrp
push
mov
dec
das
xchg
jo
push
lds
or
fildll
sub
xor
mov
pushf
out
mov
out
iret
inc
sub
in
push
jmp
fnstsw
ror
into
call
mov
push
xchg
fldcw
repnz
out
cmp
out
jmp
in
mov
cs
or
lock
lods
loop
pop
add
test
xchg
jp
loopne
mov
inc
mov
test
push
mov
xor
pop
lods
cmp
push
idivb
cmpsb
lods
imulb
xor
loop
inc
pop
cmp
es
xor
mov
aam
mov
loop
lea
fnstsw
and
repnz
sahf
js
sbb
gs
sbb
cli
pop
dec
clc
add
shll
stos
fst
push
cltd
jo
jmp
pusha
dec
sub
aaa
mov
mov
mov
sbb
clc
jge
cwtl
jl
add
sbb
adc
add
or
ja
mov
enter
movsl
push
mov
cmp
loope
and
mov
mov
xchg
sbb
and
mov
out
sub
mov
xchg
dec
sbb
push
jbe
and
in
insb
in
push
sti
xor
adc
sbb
add
sub
sahf
lock
push
sub
cmpsl
jmp
sbb
pop
popa
sti
in
cmp
xchg
aas
inc
imul
xor
les
cmp
stos
cmp
sbb
inc
cmp
int3
pop
cmp
sub
push
add
daa
repnz
dec
or
movsb
out
out
mov
add
aaa
inc
push
jo
sbb
js
cli
data16
jo
fidivrs
jne
movsl
push
fimull
or
adc
jo
and
or
cmp
inc
mov
nop
into
in
imul
in
outsl
out
movsb
enter
inc
mov
aas
fwait
sti
fiaddl
push
fwait
mov
jno
sub
test
movsl
adc
test
jae
cs
bnd
mov
cmpsb
mov
mov
xor
fistps
pop
push
mov
dec
jp
shl
jns
mov
mov
mov
push
or
enter
test
pop
xlat
sbb
leave
cmpsl
inc
es
mov
popf
pop
decb
nop
or
xor
call
xor
and
mov
pop
sub
int3
movsb
jecxz
fs
sbbb
imul
pop
mov
push
outsl
jns
sarl
ret
mov
lahf
push
lcall
lods
clc
cmp
mov
insl
outsb
mov
push
and
mov
sub
movsb
add
jae
ficompl
adc
call
nop
sbb
mov
mov
cli
mov
addr16
cmp
stos
xchg
jmp
adc
sub
inc
rorl
mov
inc
popa
mov
add
int
or
sti
ss
das
mov
ret
push
push
adc
shl
iret
dec
xchg
mov
push
mov
add
dec
lods
add
int
cmc
push
xlat
in
lret
enter
nop
jnp
mov
mov
sti
popa
or
add
sti
rcr
fcomps
pop
adc
inc
or
and
mov
decl
mov
shll
cmp
lods
movsl
cmp
das
ljmp
rclb
rorl
mov
jnp
add
cmp
dec
adc
lea
subl
dec
mov
fdivl
nop
mov
in
mov
mov
pusha
pop
jl
ret
mov
dec
mov
pop
aam
inc
mov
ret
add
test
shlb
cmpsl
movsl
xor
cmpsb
dec
dec
jmp
jl
mov
pop
data16
aam
xchg
cmp
daa
pop
sbbb
jbe
outsl
pop
mov
push
and
out
into
add
xchg
jmp
cmc
mov
mov
cli
jge
mov
jo
out
test
dec
popf
test
popf
mov
inc
cmpsl
add
clc
xor
dec
pusha
popl
nop
gs
aam
pop
mov
inc
lahf
gs
lahf
push
push
pop
inc
ja
cwtl
jno
mov
mov
pop
push
push
and
mov
outsl
lcall
out
cmp
cmc
xchg
enter
add
mov
jb
pushf
xor
mov
add
pop
outsb
lea
daa
dec
shll
xchg
mov
dec
xchg
cs
pop
xchg
fcom
pop
shr
mov
popf
psadbw
lret
test
nop
fxtract
movsl
in
mov
into
subb
inc
cmpsb
lds
fmuls
push
inc
mov
lret
addr16
xchg
xbegin
popf
popa
repnz
int3
xor
sub
outsb
pop
or
jbe
pop
add
lahf
jp
or
lret
jno
inc
push
jle
cmc
sub
cmp
clc
ds
sahf
ret
jp
pushf
mov
pop
stos
int
mov
inc
call
pop
lahf
cmpsl
mov
mov
adc
cmp
outsl
andb
mov
or
cmpsl
xchg
push
rcl
adc
fs
sbb
adc
loop
push
add
and
xchg
lds
inc
cmp
sbb
out
push
lret
arpl
test
icebp
lds
adc
roll
mov
xchg
inc
jnp
mov
xchg
insl
sahf
mov
cmc
jae
add
pop
push
sbb
push
jmp
add
fs
xchg
scas
dec
adc
in
popa
inc
xchg
clc
out
fisttpl
out
test
xorb
sbb
lods
fbstp
push
rol
xor
imul
out
sub
fnstsw
outsl
and
xchg
mov
cmp
lock
les
dec
inc
repz
sbb
cs
mov
nop
addb
xor
pop
sbb
adc
mull
stos
aad
or
push
jmp
mov
ljmp
push
and
mov
negb
ss
push
xchg
and
inc
in
adc
fisubrl
mov
aam
xchg
lock
dec
call
rep
addb
subl
arpl
mov
add
les
pop
and
hlt
hlt
paddusb
movsb
bound
and
imulb
or
push
mov
loopne
and
xor
jg
ljmp
sub
mov
cmc
pusha
jp
pop
fimull
fcompl
negb
negb
sbb
mov
pop
ljmp
call
mov
sub
es
stc
sub
mov
mov
mov
cmp
pop
mov
hlt
cmp
mov
pop
or
mov
lea
cmp
filds
cli
pop
addr16
xor
das
push
lret
cmp
or
sti
inc
mov
or
vpcmpgtw
sub
imul
fstl
inc
sarb
adc
jecxz
lods
push
out
sbb
and
xchg
jbe
push
sub
aam
cmp
or
cmp
dec
mov
xchg
insb
rorb
ds
jmp
fildll
jnp
das
outsl
xchg
mov
pop
jo
or
cmc
jae
mov
jle
loopne
jns
mov
dec
fs
aad
pusha
or
mov
scas
xor
enter
jmp
fsubp
add
xor
jb
mov
push
adc
mov
pop
xchg
sub
push
sbb
out
inc
or
out
mov
mov
mov
mov
subb
pop
cltd
push
mov
or
cltd
mov
pop
jae
mov
inc
sbb
dec
fldenv
ret
scas
pop
std
int3
xchg
push
aam
adc
sbb
push
jmp
adc
dec
ljmp
jmp
inc
shll
dec
inc
xorl
jle
rcrb
add
jbe
pop
jae
and
aad
jb
lods
mull
xor
adc
sbb
sbb
inc
fcmovbe
lcall
mov
nop
iret
inc
loopne
iret
rorb
or
mov
dec
jge
or
lahf
dec
mov
ja
arpl
xchg
test
and
arpl
test
cmp
ss
fstps
xchg
adc
mov
in
push
hlt
fmuls
fdivp
xlat
lock
popf
movsb
or
inc
call
mov
cli
xor
cmp
shlb
lret
mov
jecxz
jo
test
lret
dec
inc
mov
stos
dec
lds
dec
push
rcrb
mov
and
xor
in
add
xor
mov
dec
dec
push
std
sub
sub
pop
or
xor
ljmp
stos
inc
lea
dec
pusha
iret
jnp
inc
lret
fcomip
cwtl
ret
push
sbb
pop
cmp
popf
add
fiadds
pmaxub
jg
pop
fimull
push
lret
cld
call
jp
into
repz
dec
sbbb
pop
in
lret
inc
sub
in
push
cld
mov
or
dec
pop
insb
pop
loope
into
sbb
and
sub
loope
shlb
xchg
out
lock
jge
aam
cmp
rcrl
ja
xchg
loope
lahf
decl
jecxz
in
ret
xor
adc
movsl
loopne
shlb
inc
cmp
sub
adc
jae
mov
jle
and
cltd
dec
mov
fisubl
jo
jecxz
iret
sbb
sub
cmpl
add
int3
clc
mov
dec
dec
mov
jg
jle
stc
push
xor
xor
pop
ret
dec
or
mov
loope
and
push
mov
mov
xchg
pop
mov
push
test
and
pop
insb
pop
es
cmp
mov
aam
lahf
jb
mov
inc
sub
cmc
les
pop
inc
sub
add
xchg
and
or
lahf
aaa
pop
jne
fdivl
add
push
stc
inc
ss
cmp
jg
int
fstl
pop
push
dec
dec
enter
pop
shufps
push
pop
ror
dec
xchg
pushf
cmpsb
idivb
mov
adc
test
and
scas
mov
cwtl
leave
arpl
arpl
sub
pushf
inc
pop
jb,pn
jg
dec
outsb
jecxz
out
dec
insl
cli
mov
jmp
xchg
inc
pusha
in
xorl
lock
das
orl
test
nop
jnp
outsb
xchg
mov
mov
sub
pop
iret
lea
das
sub
leave
repnz
mov
push
lcall
xor
sbb
xor
jb
inc
pusha
add
jne
jmp
int3
aam
test
movsb
xor
sbb
xchg
xchg
cld
adc
sub
iret
int
pusha
sub
xchg
and
call
jne
sub
pop
jmp
sub
cpuid
push
and
aad
fnstsw
imul
rorl
loop
popa
adc
pusha
lcall
rolb
and
mov
xor
cmpsl
inc
stc
jle
inc
xchg
ds
mov
and
push
sub
loop
pop
test
xor
in
add
cs
dec
imul
mov
lea
arpl
push
movsb
dec
fsubrl
sbb
and
jg
inc
std
les
test
inc
sbb
lds
pop
popf
das
rcl
out
stc
int3
sub
aad
stos
cmpsb
adc
mov
in
xor
pop
mov
bound
stos
inc
xchg
xchg
mov
lcall
dec
or
push
pushf
cmp
addr16
or
nop
lea
aas
xchg
lret
test
pop
aaa
mov
sub
divl
pop
ljmp
mov
andl
sti
sti
adc
push
loope
pop
rorb
jb
pop
mul
repnz
mov
test
pop
mov
adc
sbb
adc
pop
popa
xor
outsl
inc
pop
xor
ljmp
push
aas
xlat
sarl
imulb
lret
cmp
js
push
or
insl
dec
or
movsb
inc
cmp
xchg
jbe
jo
sti
xchg
xchg
es
jp
fnstsw
push
pusha
adc
ficoml
insl
add
or
dec
insl
aam
imul
scas
cs
push
je
bound
mov
cmpsl
rcl
cs
xchg
repnz
pop
das
or
mov
jmp
fdivs
roll
jge
dec
pop
mov
in
and
les
or
mov
cli
aam
iret
pushl
sbb
fs
add
mov
jecxz
xchg
test
push
lcall
cwtl
and
adc
and
adc
push
inc
pop
or
loop
and
int3
loop
pop
je
jl
loop
add
jb
add
sub
mov
aam
mov
fnstenv
imul
call
add
arpl
cwtl
mov
jp
nop
dec
rcl
cmp
fcoms
pop
lret
sbb
adc
scas
and
push
in
sbb
sub
mov
or
bound
das
test
push
push
jne
not
dec
adc
stc
lcall
test
les
mov
xor
pop
mov
call
mov
out
inc
push
pop
xchg
pop
pop
and
xor
mov
out
mov
pop
and
cmpsb
mov
push
pop
cltd
xlat
cmp
jl
jle
fldenv
ds
inc
repz
hlt
xor
shlb
adc
pop
iret
push
mov
popa
out
mov
dec
nop
int3
pop
inc
push
jge
aad
enter
hlt
xchg
xchg
ret
sbb
iret
mov
or
shrb
add
ficompl
push
sahf
repz
mov
pop
inc
daa
dec
dec
mov
repnz
pushf
and
dec
mov
shrl
push
dec
test
lret
idivb
cmpl
mov
out
mov
test
jle
or
movsl
jno
scas
mov
nop
into
gs
pop
int
xchg
mov
rorb
fnstenv
imul
sbbl
pop
add
gs
gs
add
mov
loopne
jae
rol
and
int
mov
jne
sbb
and
fwait
xchg
loope
lret
inc
pop
dec
or
shll
aad
popa
and
dec
aam
or
testl
es
jns
out
mov
out
psrlq
pop
ret
dec
push
sub
cmp
jp
stc
lods
jns
dec
xchg
sub
push
mov
add
ss
and
iret
popa
dec
divl
enter
movsl
fldl
cmpsb
and
dec
out
mov
jecxz
sahf
into
mov
push
outsl
clc
jp
rolb
mov
ss
sbb
xchg
xchg
out
add
mov
cmp
stc
sbb
test
sti
ss
mov
imul
mov
ljmp
in
lea
arpl
xor
lods
in
je
call
sub
cwtl
xor
sbbb
imulb
mov
fidivrl
mov
pushf
das
nop
cmpxchg
cmp
out
sbb
dec
shrb
leave
dec
pop
mov
mov
cltd
jecxz
or
orb
mov
cld
jp
subl
ds
jns
data16
call
scas
into
xchg
cmp
xor
popf
or
lea
sub
xchg
sbb
sti
add
shrb
das
mov
mov
mov
pop
jno
xchg
sub
jo
adc
or
fidivs
lret
test
pop
cmp
sub
sub
stos
imul
add
pop
cmp
mov
lods
das
mov
add
gs
dec
mov
inc
sub
push
and
nop
gs
xchg
xorb
or
negl
sbb
and
repz
das
cwtl
push
or
dec
inc
inc
fldt
dec
cmp
jnp
in
lahf
jle
rclb
or
lahf
lods
pop
icebp
jo
clc
pushf
inc
fldz
arpl
inc
insl
dec
dec
pop
jno
fdivrs
arpl
sub
dec
xchg
jno
dec
jno
insb
lock
sub
add
enter
jne
push
test
mov
loop
test
rcrb
out
mov
ljmp
js
jnp
rcl
inc
mov
sahf
jbe
mov
sbb
ret
fidivrs
out
xorb
test
push
ja
push
and
sub
mov
and
jae
adcb
push
pop
loop
fimuls
lods
push
loop
mov
jmp
cmp
cld
repz
pop
sti
mov
cmp
int3
rorb
aas
mov
xor
out
je
das
ficoms
add
aas
fldt
test
push
sahf
or
repz
sbb
out
fdiv
pusha
mov
es
or
or
stc
inc
pop
and
and
cmpsb
fistpl
pushf
cmp
aad
cmp
jmp
popf
loop
je
paddd
dec
ror
inc
jmp
jo
shlb
rorl
shr
lea
inc
lret
sub
pop
arpl
inc
lea
pop
xlat
jmp
or
and
loopne
mov
mov
jnp
mov
fwait
mov
sbb
jae
jae
fistpll
sbb
ss
sbb
xor
or
lret
stc
pop
inc
in
push
or
push
dec
cltd
push
call
outsb
sbb
xchg
add
sub
lea
dec
mov
sub
into
push
xor
mov
jb
out
in
push
ret
inc
xchg
icebp
mov
pop
xor
adc
mov
aad
in
xor
lret
loopne
in
cmpsb
dec
fnstcw
dec
mov
iret
lret
push
outsb
addl
lcall
int3
push
mov
lea
shrl
mov
in
cmpsb
ja
repz
xlat
inc
jp
ret
mov
fmull
ret
fbld
popa
push
scas
or
gs
pusha
xchg
xlat
or
dec
inc
jno
fldt
pushf
jmp
jmp
cmp
cld
inc
jno
stos
bswap
mov
testb
or
push
sbb
psubq
push
push
xorb
aas
neg
add
cld
les
das
leave
xchg
cld
repnz
mov
dec
xchg
insl
xor
loopne
sub
dec
mov
pop
sbb
pop
sbb
adc
mov
pop
mov
lcall
lcall
pusha
cmp
lds
jecxz
ror
push
lock
mov
mov
xchg
mov
sarl
jnp
or
imul
daa
lods
jne
dec
icebp
lahf
dec
andb
push
sub
in
xor
fildl
sub
xchg
xor
fistpl
cs
or
outsb
xchg
add
das
scas
lcall
or
ja
fidivl
mov
cmpsl
popa
pop
dec
mov
jnp
adc
lret
out
cmp
mov
dec
and
dec
jle
mov
add
addr16
lods
jbe
inc
or
mov
jnp
sbb
sbb
xchg
dec
xchg
or
pop
fs
push
sub
mov
lods
jmp
cmp
xor
sbbl
add
pop
scas
clc
sbb
pop
daa
jg
jae
push
pop
inc
pop
push
sbb
or
push
repnz
mov
pop
jle
fcmovnbe
bound
clc
inc
cs
lods
fs
add
jmp
sub
iret
int3
arpl
aas
aam
daa
push
inc
or
xor
mov
xchg
push
shrl
xchg
movsl
fs
gs
push
adc
cli
mov
cmp
sub
les
push
inc
icebp
stc
and
sbb
adc
pop
clc
mov
xchg
test
jnp
cmpsb
xchg
dec
push
cli
inc
dec
movsb
in
iret
xchg
and
ficoml
mov
sub
imul
cmp
aam
pop
sub
pop
aam
js
inc
data16
cltd
mov
push
xor
mov
cmc
jae
mov
addr16
mov
pop
arpl
ror
and
and
add
pop
sahf
stos
aad
clc
sub
ljmp
in
test
das
subl
aam
xchg
inc
dec
push
push
arpl
cli
mov
lret
icebp
rol
sub
out
mov
jle
out
push
lods
out
ja
mov
cmp
xor
stos
mulb
subl
xor
inc
dec
out
push
and
jnp
aaa
daa
inc
mov
in
scas
sbb
pop
arpl
sbb
cmpsl
test
mov
pop
scas
call
or
shrb
imul
sub
pop
ret
popf
sub
push
lock
aaa
cmp
or
mov
lahf
cmpsb
mov
mov
imul
jns
cmp
mov
mov
cld
stos
xor
sbb
inc
outsb
mov
and
rorb
test
add
icebp
mov
pop
jo
xchg
cld
ljmp
xchg
mov
in
pop
and
pop
inc
lods
sbbb
lods
stc
cmpsb
pop
lahf
inc
pusha
jl
neg
sub
add
lret
fldenv
loop
mov
jne
xor
adcb
jne
outsb
jle
push
push
jp
inc
push
and
loope
ljmp
lret
into
rclb
ds
inc
fildll
xchg
les
push
dec
mov
mov
cmp
aad
mov
aas
adc
pop
push
roll
std
push
inc
pushf
dec
cmpsl
cs
jge
push
or
push
lock
out
jbe
mov
fucomp
stc
adc
dec
test
mov
mov
dec
xchg
jae
xlat
xchg
push
lret
dec
ljmp
xor
xchg
cld
mov
jbe
mov
inc
sti
sub
cmp
sahf
sbb
push
cmp
adc
addr16
sbb
mov
rcrb
mov
insb
xor
sti
sub
sub
xchg
lret
pusha
idiv
cmpsb
jbe
daa
or
std
cwtl
mov
lods
sar
push
inc
pop
push
push
add
inc
in
mov
and
ja
add
orb
jge
rcll
fcoml
or
cmpl
jb
push
or
and
loope
inc
in
cmc
sub
sbb
fcoml
push
popl
ja
test
test
lds
pop
inc
aaa
mov
in
push
sbb
data16
or
lods
inc
xor
xor
adc
inc
xchg
in
rolb
ret
ret
fidivl
lock
mov
and
xchg
mov
jmp
inc
icebp
jne
jbe
jmp
or
cmp
addb
xor
add
into
sbb
in
pop
or
inc
push
cmp
jbe
cmpsb
clc
adc
das
mov
mov
out
sbb
add
mov
add
popa
xor
shlb
not
gs
fidivrl
jmp
out
or
adc
ljmp
sub
cwtl
jb
xor
pop
int
or
arpl
sahf
mov
mov
ret
cmc
add
fs
xchg
cmp
dec
adc
rorl
mov
lret
imul
test
lcall
cwtl
push
pop
mov
out
mov
sahf
fists
jge
les
dec
xchg
inc
inc
and
dec
mov
add
pop
or
bound
shrb
insl
fmuls
lret
mov
mov
cmp
sbb
sbb
push
cmp
xchg
ljmp
into
addr16
or
rep
adc
scas
js
sub
adc
jne
inc
jg
push
xlat
jne
fnsave
adc
adc
filds
mov
das
dec
rcll
mov
xor
scas
mov
ds
dec
shrb
add
fcmovnb
clc
mov
mov
adc
add
outsb
pop
mov
arpl
bound
idivl
out
push
mov
sbb
pop
xor
sub
adc
dec
iret
and
ds
jl
mov
mov
jnp
lods
stos
and
das
xor
out
dec
subl
sub
jnp
or
jmp
not
mov
mov
or
loop
mov
aaa
mov
icebp
subl
pop
imul
dec
test
mov
cmp
lock
jmp
pop
aaa
lock
popa
sahf
mov
push
repz
in
cmp
gs
dec
and
adc
mov
adc
stos
jmp
incl
out
and
adc
hlt
push
mov
scas
ret
push
leave
or
add
mov
test
and
mov
mov
ret
dec
mov
or
lcall
push
shr
fldcw
lods
lcall
les
xchg
loop
jecxz
xchg
sbb
sbb
mov
xor
shlb
add
test
sbb
js
rorb
push
pop
lret
ficompl
inc
jg
data16
shrl
jb
mov
popa
ret
dec
jp
into
addb
add
pop
sbb
cmp
sbb
aaa
xchg
int
mov
mov
shrl
mov
and
jmp
cmc
mov
mov
pop
lods
mov
fs
loopne
iret
xor
fimuls
outsl
push
shlb
loop
jae
repz
jl
test
pop
ret
or
ljmp
cli
mov
jge
xor
pushf
push
in
stc
mov
jecxz
xor
aaa
cmp
dec
fadds
lret
and
pop
sbb
iret
out
cmp
out
or
xchg
mov
popa
out
xor
outsl
iret
inc
test
mov
push
jo
adc
dec
mov
mov
pop
ja
aas
in
aas
jp
pop
int3
inc
xchg
lods
ret
xchg
fstpt
inc
or
jbe
loop
mov
mov
mov
addr16
test
lret
pop
xchg
popa
xlat
movsl
aad
mov
cli
lock
outsb
ja
test
out
loope
pop
dec
dec
sub
xchg
inc
out
mov
out
sahf
and
lea
sub
subl
loope
int3
gs
jnp
mov
dec
pop
and
lcall
jl
out
jg
mov
cmp
and
push
movsl
cmc
mov
fldcw
cmp
lahf
jmp
stos
xor
jmp
cmp
jl
sarl
pop
out
xlat
pcmpgtb
inc
es
mov
dec
das
inc
mov
enter
sbb
fidivs
mov
or
popa
cmp
and
push
or
outsb
testb
idiv
loop
cli
jecxz
add
xor
flds
repz
mov
fcompl
add
push
adc
mov
lock
shl
fcomps
pop
andl
mov
sbb
inc
sahf
pop
cmp
mov
xor
jne
js
or
dec
call
jle
or
enter
mull
int3
cmc
cmc
xchg
xchg
out
dec
adc
mov
icebp
ret
lods
cltd
call
out
xchg
adc
ds
mov
into
stos
ret
push
or
ljmp
hlt
movsb
pop
outsb
sub
lahf
inc
jge
xor
in
les
sbb
jbe
out
mov
into
mov
stos
sub
jnp
sbb
mov
xor
pop
mov
sub
leave
and
in
dec
jp,pt
adc
push
insl
shlb
popa
cmp
aas
in
xor
xchg
and
aad
cmpsl
scas
ljmp
inc
imul
sub
cmp
icebp
fsubl
ljmp
in
das
fwait
adc
add
sub
das
mov
std
shrl
insb
add
xchg
inc
imul
sbb
dec
shl
scas
sub
xor
pusha
sti
or
imul
push
test
and
jbe
jmp
shl
pop
lods
dec
repnz
outsb
add
mov
arpl
push
lea
outsb
rcrl
mov
call
xor
xor
lahf
pop
ds
dec
pop
dec
addr16
ret
ds
icebp
stc
pushf
or
xor
ret
mov
movsl
in
push
cmpsb
pop
aaa
stos
xor
test
sbb
js
jp
movsb
mov
sub
and
xlat
cmp
or
mov
ss
je
mov
lea
or
js
mov
rolb
xor
cmpsl
sub
movsb
sub
out
sarl
dec
fisubl
in
inc
dec
movsl
idivb
push
out
aas
popa
cli
orl
or
addl
cmp
stc
int3
sub
shll
fildl
pusha
loope
xchg
lock
sub
arpl
aam
push
inc
pop
push
sbb
jne
and
popf
imul
lret
jp
mov
adc
adc
dec
test
adc
into
or
pop
mov
mov
add
xchg
push
data16
inc
cmpsl
decb
or
sbb
or
add
out
int
stos
jne
neg
cmp
dec
punpckhbw
mov
add
inc
jecxz
push
orl
mov
jl
pop
jl
mov
mov
jae
lock
pop
daa
ds
sub
xchg
lock
push
sahf
out
fstl
popf
outsl
test
loope
in
popf
inc
scas
adc
mov
ja
in
mov
mov
subl
ret
mov
add
mov
jp
lahf
push
pop
pop
ja
sbb
xor
je
xchg
dec
jg
and
addr16
movsb
add
mov
ss
pushf
xchg
fnstsw
psrld
add
inc
sbb
dec
lea
sbb
pop
ss
mov
xchg
js
outsb
movb
mov
add
add
xor
setnp
leave
shrl
fists
adc
adc
call
les
mov
xchg
jg
call
xor
clc
cmp
pop
and
cmp
xor
push
xchg
jns
xchg
cli
inc
je
pop
sti
cmp
cmpb
arpl
cmpsl
pop
jecxz
xchg
call
xchg
xor
call
xchg
lods
test
inc
push
inc
pop
popf
hlt
imul
std
icebp
in
addr16
mov
xor
inc
xlat
mov
adc
add
popf
push
ficomps
jp
gs
inc
decl
cmp
testb
fwait
cmp
negl
cwtl
test
jae
rolb
jecxz
and
and
das
cmp
hlt
pop
mov
cmp
jbe
lock
incl
mov
xlat
xchg
lcall
xchg
pop
pop
cmp
orb
cmp
mov
pop
rcl
or
mov
aam
cltd
aas
cmp
fdivrs
lds
insb
gs
loope
mov
cmpsl
ss
scas
fisttpll
fldl
aas
stos
mov
mov
add
mov
pop
fimull
inc
cltd
mov
mov
hlt
push
call
jb
jle
dec
mov
push
sbb
push
out
xor
sbb
xchg
pop
cs
subb
icebp
jp
mov
leave
jp
pop
imul
add
push
cwtl
sbb
pop
je
stc
test
outsl
mov
jns
shll
xchg
dec
jnp
test
lock
push
iret
roll
or
xor
cmp
rcr
jbe
jb
aad
jge
jo
xor
inc
xlat
inc
xchg
ss
loope
ds
dec
cld
adc
jecxz
add
ror
lcall
cmpsl
test
out
push
ja
fwait
jo
add
fisttpll
dec
cmp
and
push
jge
adc
clc
mov
hlt
fcompl
stc
rorb
in
ss
jmp
adc
and
push
mov
pop
mov
inc
xorb
xchg
movsl
icebp
mov
jno
nop
mov
les
jge
cld
inc
inc
mov
mov
xor
out
or
push
add
cmp
jbe
cmpsb
fwait
mov
inc
es
sub
lret
daa
in
ret
pop
and
repnz
repz
xchg
adcb
add
ljmp
xchg
retw
lock
and
cwtl
mov
xchg
add
fwait
push
inc
dec
push
fcompl
adc
mov
call
out
icebp
iret
and
pop
cmc
xor
pushf
testl
lds
mov
movsb
pop
jecxz
pusha
popa
arpl
pop
jp
pop
fdivr
arpl
or
xchg
aam
adc
pop
mov
mov
cmp
or
test
movsl
adc
aaa
out
imul
mov
pop
cmp
mov
jo
jo
rol
sarb
sub
and
fs
xor
mov
cs
test
das
lret
xchg
into
stos
xchg
sahf
sub
xor
add
inc
lahf
mov
mov
outsb
or
mov
and
pop
rclb
push
cwtl
sbb
sbb
xchg
pop
jne
repz
mov
shlb
push
add
cmp
pop
sub
enter
outsl
jae
adc
cmc
test
xlat
xchg
lods
pop
xlat
je
xor
fldenv
xorl
iret
mov
movsl
out
out
pop
pushf
pop
push
and
cmp
test
mov
mov
push
scas
sub
shrl
or
inc
cmp
shrl
or
or
and
inc
and
push
dec
aas
shrl
test
jp
cmp
push
xchg
ret
mov
sbb
inc
in
push
xor
loopne
inc
push
mov
iret
int3
adc
sbb
mov
sahf
jg
cmp
dec
or
pop
mov
sti
pop
cmp
push
inc
movsl
test
pop
mov
fsts
imul
pop
adc
mov
jbe
cli
mov
mov
outsb
pop
mov
pusha
adc
cmpsl
lret
pop
jmp
xadd
xchg
mov
inc
fsubrs
push
mov
clc
lock
hlt
clc
into
push
stc
lds
clc
vhsubpd
stc
movsb
jge
cmp
test
xor
scas
pop
push
sbbb
push
lcall
cli
lods
jge
xor
xor
add
ret
pop
dec
flds
adc
fsubrp
pop
and
sti
ljmp
dec
sar
es
lret
jmp
jl
call
pop
sbb
ja,pt
inc
jmp
shlb
xorb
xor
pop
nop
xchg
mov
ret
out
jne
nop
movsb
sahf
dec
pop
pop
inc
stos
push
pop
aaa
add
and
loopne
jae
mov
mov
or
xchg
out
dec
addr16
mov
addr16
add
repnz
rcrl
stc
insb
ss
push
cmp
js
jb
dec
xchg
mov
sbb
adc
lea
fs
jns
pop
mov
add
inc
fs
fwait
adc
cmp
jle
mov
je
mov
xor
sbb
flds
outsb
cld
ds
es
push
mov
jns
xchg
pushf
jle
ret
jg
mov
dec
mov
cwtl
subb
sti
imul
dec
mov
jmp
aam
ret
push
lds
add
ficoml
rclb
mov
mov
sub
dec
adc
sub
popa
sbb
mov
sbb
fwait
adc
push
mov
sub
xor
pop
mov
lret
cwtl
jecxz
lea
and
leave
out
pop
cmp
add
leave
lahf
lock
mov
hlt
dec
pop
in
shll
into
dec
xor
push
es
add
testb
dec
fisubrs
dec
pop
add
int
push
mov
cmp
out
sar
movsb
xchg
ret
enter
mov
xor
test
sbb
cmp
negl
out
xchg
test
imul
mov
adc
test
cmc
sub
lea
mov
inc
xor
lea
stos
cld
and
fsubl
mov
mov
push
xor
jo
jne
adc
test
sub
idivb
hlt
stos
lcall
push
and
movsl
lret
jmp
repz
inc
dec
fucomip
adc
gs
push
inc
loopne
or
inc
or
dec
je
stos
inc
inc
ljmp
aaa
push
insb
imul
in
ret
add
jecxz
les
addr16
leavew
mov
in
repnz
movsl
jge
add
mov
jbe
xchg
mov
pop
mov
lods
int3
pop
push
pop
int
scas
mov
dec
inc
mov
ret
test
xor
cmc
mov
dec
jge
cmp
jno
mov
scas
shlb
inc
lahf
mov
adc
rcrl
mov
fldcw
ret
push
mov
hlt
xchg
cmc
or
adc
nop
jnp
lcall
inc
lcall
push
dec
push
cmpsb
and
sti
aaa
popa
xchg
push
je
into
cmp
in
mov
pop
jnp
push
xor
mov
inc
cmp
push
xor
mov
outsb
js
jg
fnsave
push
data16
pop
lahf
je
sbb
nop
bound
leave
cld
cli
inc
jle
gs
movsl
cmp
mov
les
ret
outsb
aaa
mov
push
lods
cmp
ljmp
mov
pop
icebp
lds
mov
mov
outsl
shrb
out
rcll
aam
push
fsubr
pop
lea
pop
loope
dec
xor
cltd
xchg
pop
dec
mov
cmp
cmpsl
dec
push
retw
pushl
sbb
xor
mov
in
jecxz
rol
mov
sub
cmp
ljmp
adc
pop
add
sbb
cmp
aad
testb
sub
jo
leave
imul
mov
and
push
push
pushf
idivb
and
movl
sbb
movsb
xchg
fnop
das
jecxz
icebp
pop
push
sbb
rolb
xchg
mov
sbb
mov
push
xor
push
shr
jnp
ret
iret
sub
jae
adc
enter
xchg
addb
fwait
jmp
int3
pop
test
aam
jecxz
or
mov
int3
jnp
std
cwtl
fidivrl
inc
mov
pop
aad
pushf
mov
xchg
sbb
push
xor
mov
xchg
xchg
add
inc
ds
into
gs
xor
mov
iret
lret
lret
push
dec
jno
xor
inc
pop
or
cmpsl
jmp
lret
test
paddw
in
test
movsl
jmp
pushf
sbb
mov
cmpsl
dec
iret
lea
cmp
jb
lds
sbbl
sti
and
fs
out
jae
nop
repz
push
shrb
cmp
mov
dec
jl
mov
pop
movsb
push
scas
mov
imul
mov
mov
mov
enter
mov
adc
int
shll
ret
lds
dec
push
sbb
jbe
aas
inc
cwtl
sti
cmpsb
or
xor
ja
lods
xchg
mov
lret
ret
mov
arpl
bound
push
sbb
daa
adc
add
and
and
push
mov
lahf
push
xlat
xchg
lret
cmpsb
sub
xchg
sarb
adc
adc
das
cmc
cmp
leave
lcall
push
cmp
es
jo
mov
mov
pop
jne
mov
push
bound
pop
mov
out
or
loope,pn
sub
shlb
jmp
jno
gs
push
aam
leave
mov
int
insl
dec
iret
lods
cwtl
test
testl
xchg
movzbl
sbb
mov
psrlq
in
lods
stos
mov
dec
mov
dec
movd
adcb
ret
shll
cli
dec
addl
adc
test
hlt
and
fsubrp
dec
clc
pop
sub
adcb
ja
fstpt
or
inc
pop
xor
mov
rcl
iret
pop
popf
jle
pop
test
cmpsl
adc
mov
gs
adc
cmp
adc
movsl
jle
das
nop
loop
orb
lea
insl
cmp
int
repz
shll
pop
lea
fs
cmovno
loope
mov
add
xorb
and
mov
or
xor
mov
jl
arpl
xor
or
adc
dec
in
and
daa
inc
xor
arpl
push
pop
push
rdtsc
insl
dec
aam
mov
mov
icebp
sbb
popf
adc
add
pop
jg
jecxz
dec
sub
cmp
aam
iret
mov
call
in
int
cmp
or
jl
or
and
mov
and
sbb
push
dec
in
inc
sahf
mov
xchg
rcr
add
sbb
popa
out
in
jns
out
sar
xchg
data16
test
xor
js
das
stc
rcr
imul
cmpsl
xor
sub
mov
es
or
cmp
scas
js
lea
mov
sub
fcmovu
int
push
xlat
test
xor
sub
test
fstpl
pop
add
fdivp
ficoml
sub
adc
lock
jg
add
dec
nop
ret
shufps
push
dec
imul
ljmp
jecxz
in
xor
ret
adc
into
mov
mov
movsb
xchg
xor
xor
jmp
test
out
das
movsl
movsl
test
mov
and
repnz
in
and
in
mov
adc
lds
aaa
popf
dec
adc
mov
inc
sbb
shlb
aaa
dec
pop
sahf
imul
bound
outsb
xlat
sbb
js
sahf
orl
xchg
pusha
sub
out
orl
lods
xchg
popf
lcall
xor
sub
fbld
int3
scas
sahf
push
outsb
push
jns
jns
subb
push
or
lods
or
sarl
mov
or
pop
js
xor
dec
call
daa
scas
mov
sarb
cmp
addr16
mov
cld
jno
pop
xchg
sub
cmp
adc
sbb
inc
xlat
jmp
lcall
in
sbb
xchg
movsb
xlat
sti
or
jmp
jbe
mov
icebp
sbb
sub
sub
arpl
int
aad
sbb
jg
or
fdivrs
pop
fwait
xor
push
or
stos
aaa
push
jecxz
cmp
push
loopne
into
lret
cwtl
sub
add
imul
xor
insl
sbb
inc
jg
iret
or
inc
adc
addr16
ljmp
cwtl
sbb
popa
sub
mov
adc
xchg
inc
fbstp
sbb
cmp
jo
nop
push
push
pop
outsb
cld
ret
dec
negl
mov
lret
or
jge
or
push
out
mov
mov
xor
xlat
cmp
and
pop
in
das
outsl
mov
inc
in
mov
daa
insl
test
ljmp
dec
and
in
push
sahf
mov
jmp
adc
cltd
jno
rorb
push
cmp
int3
inc
add
push
pop
mov
sbb
mov
pop
ds
mov
jge
adc
stc
bound
dec
lahf
add
ret
es
inc
fisttpl
test
mov
enter
xchg
adc
cltd
bound
inc
testb
mov
mov
push
cmpsl
xor
rcl
sbb
push
xlat
pop
pusha
push
inc
add
lcall
sbb
fs
dec
xchg
sub
pop
notl
lret
lahf
mov
out
sub
imul
jns
decl
xchg
xor
inc
sahf
dec
bound
ret
cmpb
into
in
shll
dec
in
add
lret
push
pop
bound
mov
push
xchg
rcl
shrl
sbb
jge
mov
ds
adcb
fwait
imul
or
lds
jmp
add
jecxz
sbb
push
xlat
dec
dec
cmovge
sub
push
int3
addr16
and
scas
pop
xchg
mov
cltd
imul
je
sahf
inc
dec
jae
in
mov
jmp
outsl
repnz
outsb
aas
cmc
into
fs
je
dec
jne
leave
xor
aad
sahf
adc
dec
cmp
mov
leave
or
mov
dec
or
cmp
add
inc
cmp
cmp
les
adc
mov
or
cmpb
cwtl
cli
pop
repnz
sbb
in
loop
or
loope
adc
nop
in
mov
inc
sbbb
into
imul
cmc
lock
jp
pop
sbb
jp
std
cltd
mov
jge
dec
fucomi
ret
or
sbb
fstpt
fisttpll
dec
repnz
data16
data16
mov
scas
movsl
cs
pop
mov
mov
inc
stc
stos
fsubrl
xchg
add
mov
call
cs
xor
lahf
loope
gs
or
adc
lret
sbb
xchg
jl
fldenv
mov
or
inc
inc
inc
push
mov
repz
sbb
dec
iret
xchg
sbb
out
fildl
mov
pop
xchg
mov
adc
add
arpl
and
mov
inc
movsb
mov
aam
mov
mov
cmp
je
push
sbb
adc
negb
mov
push
xchg
dec
rorl
add
xchg
notb
repz
mov
outsl
aaa
movsb
imul
mov
sbb
pushf
or
in
sub
push
mov
xchg
or
orl
cltd
mov
sub
push
lock
dec
push
pushf
cli
lret
jnp
or
fmul
mov
and
cwtl
inc
ret
lcall
movsl
aam
in
xchg
sub
fwait
insb
daa
cmp
and
leave
mov
xor
fldt
jg
mul
lods
xorl
scas
sbb
je
or
dec
pop
mov
xchg
adc
outsl
xchg
adc
les
lea
xchg
imul
or
mov
dec
fmuls
pop
mov
out
addl
cmpsl
adc
aas
xor
in
call
push
and
aam
into
jbe
cltd
fisubrl
mov
std
mov
ljmp
lods
js
pop
cmp
jb
mov
stc
xlat
loope
cmpsb
stc
shll
cwtl
push
push
lret
jmp
lret
xchg
mov
dec
mov
test
ret
call
pop
mov
ja
ljmp
pop
push
cmp
lods
pop
push
or
int3
push
cmp
inc
movsl
pop
fiadds
mov
pop
imul
sbb
pop
xlat
jg
mov
sub
mov
xchg
dec
inc
fnsetpm(287
ds
hlt
jnp
pop
and
and
pop
rclb
ja
iret
out
fs
test
imul
cwtl
adc
loop
fdivl
dec
into
test
and
mov
dec
push
pop
jle
imul
ljmp
or
out
xor
ss
dec
ret
xor
js
sub
and
push
and
pop
inc
inc
repnz
in
fwait
mov
cmpsl
jmp
arpl
dec
adc
xor
mov
daa
mov
mov
xchg
scas
push
cmpsl
test
fldt
jae
sahf
push
and
out
dec
repnz
addr16
std
aaa
ljmp
xor
cmp
gs
push
jb
add
cmp
mov
xor
mov
and
in
les
mov
mulb
cltd
ja
sbb
into
inc
cmpsb
and
jae
lret
pop
sub
shrb
push
imul
sub
jle
sbb
xchg
ret
dec
cmpb
cmp
adc
stc
ret
cmp
into
insb
movb
cmp
pop
xchg
sbb
fiaddl
mov
popf
pop
insb
adc
cmp
sti
cmp
mov
jge,pt
in
sbb
inc
mov
jbe
pushl
dec
movsl
mov
mov
cmp
add
push
or
jmp
sub
adc
xlat
neg
pop
add
insl
add
dec
sbb
xchg
push
mov
sub
stos
lahf
push
mov
dec
pop
mov
or
je
dec
mov
inc
div
ror
cmpsb
adc
cwtl
repz
cmpsl
mov
gs
adc
in
scas
sub
pop
insl
adc
and
and
mov
sbbb
mov
mul
or
add
imul
and
cmp
lods
in
add
inc
fisubl
jle
mov
fwait
out
rcrl
out
shll
fldt
mov
sbb
je
mov
sbb
xchg
jle
aaa
dec
je
stos
gs
outsl
rolb
stos
sbb
lahf
adc
dec
pop
mov
mov
add
icebp
cmp
loopne
adc
jecxz
jb
clc
out
adc
jne
mov
mov
lret
mov
inc
lods
push
lcallw
add
enter
jo
jb
insl
mov
cld
mov
aas
bound
or
jmp
test
adc
sahf
imul
or
pop
pop
push
shl
mov
or
insb
cmp
popf
lods
aad
add
add
rorb
data16
movsl
mov
pop
lahf
and
jae
adc
sub
out
mov
out
fnstcw
insl
mov
cs
out
xor
mov
sahf
sarb
inc
hlt
insb
arpl
shlb
xor
pop
pop
xchg
jmp
lret
mov
jmp
jg
adc
sbb
cmpl
hlt
push
in
dec
sub
add
xchg
scas
push
pop
rorb
xchg
outsl
sub
cmpsb
mov
push
stos
jns
inc
mov
push
lret
cmp
mov
ljmp
outsb
mov
adc
xor
ror
adc
push
pop
adc
xchg
imul
xchg
push
mov
imul
mov
push
jg
sbb
pop
test
daa
xor
xor
cmp
dec
ret
popf
lock
repnz
addb
das
aas
xchg
pushf
outsl
arpl
mov
movb
mov
sub
out
lahf
sahf
xor
push
sub
push
lret
out
jge
adc
or
mov
ret
ja
dec
roll
leave
xchg
xchg
test
adc
adc
int3
xchg
mov
mov
cld
adc
jmp
es
cmp
cmp
sahf
jb
aas
out
cwtl
shrb
test
and
xchg
scas
cmovle
sbb
or
lahf
mov
pop
das
outsl
inc
mov
cltd
in
adc
adc
lahf
sbb
repnz
xchg
xor
test
out
or
repnz
int
mov
sbb
mov
mov
pop
sahf
cmp
sub
xchg
xchg
xchg
in
iret
fwait
xor
orl
dec
sbb
xchg
push
shlb
push
jle
mov
push
mov
outsb
lds
cmpsb
or
bnd
push
das
sbb
mov
pusha
push
cmpsb
aas
adc
les
cli
fadds
or
outsb
pop
adc
fisubrs
dec
js
mov
inc
lea
out
js
push
insb
cmp
mov
imul
js
mov
or
std
les
inc
data16
jns
dec
dec
cmp
fstl
xchg
or
aas
cmpsl
outsl
jnp
mov
roll
ss
cmp
in
push
mov
mov
dec
repnz
icebp
mov
mov
repz
sub
out
inc
or
addr16
xor
repz
ror
jne
xor
jno
test
outsl
jge
mov
cmp
jmp
lods
pop
jne
insb
out
pusha
sarb
add
pop
test
xor
mov
cwtl
daa
lock
in
sub
test
icebp
dec
jns
arpl
jne
idivb
inc
clc
push
mov
dec
push
cvtps2pd
push
lea
xor
cmpsl
sub
push
sub
lcall
adc
scas
jl
loope
sub
ret
lds
mov
mov
cmp
in
mov
ret
xchg
add
scas
jne
mov
mov
out
jmp
daa
mov
push
mov
cmpsl
cld
mov
or
cwtl
or
dec
mov
dec
rcl
sub
fwait
scas
inc
popf
dec
jae
sub
addl
movsb
mov
fstps
sub
xor
lods
xor
sub
xor
push
mov
lods
push
xor
vmovntps
test
adc
out
mov
adc
insb
sahf
mov
ds
fwait
dec
push
and
ljmp
adcb
iret
mov
bnd
movsl
nop
xchg
xor
xchg
jo
pusha
inc
mov
xchg
sbb
sub
ret
jge
pop
sahf
lds
pop
dec
mov
pop
ret
gs
push
mov
lock
xor
insl
cmc
bound
push
mov
jb
loope
cmc
xchg
jb
xchg
mov
imul
mov
xor
insl
idivl
push
cli
mov
mov
add
insb
cmp
shll
gs
call
ret
pop
lods
inc
shr
hlt
xchg
stos
cs
cmp
shlb
inc
mov
das
out
sub
fildl
xor
sbb
xor
negb
enter
or
and
stos
in
fwait
add
andb
ljmp
sbb
or
mov
and
ficompl
pop
sub
aas
or
or
fdivrp
test
ss
ret
mov
or
xor
mov
pop
jmp
cld
imul
ja
mov
jne
iret
pushf
and
into
scas
outsl
mov
inc
pop
inc
out
dec
lret
je
pop
inc
imul
or
outsb
ljmp
mov
cmp
push
stc
adc
mov
xor
add
fdivrl
mov
repz
pop
fildll
into
add
sub
movsb
and
xor
out
mov
mov
add
je
pop
lock
xchg
jmp
fnstcw
mov
sarb
out
mov
inc
mov
sbb
mov
sbbl
movsb
lahf
ds
xor
mov
and
mov
inc
pushf
xorb
imul
orb
in
into
bound
sbb
sub
add
pop
orl
add
push
out
sbb
aad
dec
aad
in
sarl
sarl
inc
ss
addr16
scas
jns
and
cmpl
inc
dec
adc
push
bnd
clc
lods
or
push
mov
push
test
subl
mov
mov
xchg
aaa
rorl
add
jecxz
outsb
pop
xor
jle
lods
cmpsb
push
mov
int3
ss
int
out
xchg
lahf
sbb
repz
and
outsb
push
stc
inc
inc
or
cs
jge
add
outsb
jae
sub
scas
stc
mov
addr16
les
sti
or
jmp
arpl
mov
cmp
xchg
rclb
or
xor
push
fsubrl
inc
ss
and
fisttpl
loope
jle
lock
jle
or
mov
push
push
mov
add
icebp
movsb
ret
jno
sbb
mov
inc
cmpsl
adc
xchg
inc
dec
mov
and
out
das
in
ja
push
roll
lods
pop
arpl
dec
ljmp
in
mov
dec
sub
cmp
loop
insl
stos
add
xchg
pop
lahf
lods
add
fimull
mov
insl
aad
mov
adc
addl
test
test
inc
int
addr16
ds
test
pusha
add
insl
call
lret
xor
xor
icebp
pusha
pop
push
ret
shll
jl
adc
and
jge
enter
push
ss
jbe
xchg
xchg
adc
mov
add
sub
push
test
lcall
aam
outsl
lahf
std
sub
mov
loop
push
mov
cmp
add
dec
or
xchg
in
xchg
jmp
or
pop
out
lahf
enter
and
mov
sub
icebp
stos
xor
ret
shrl
sub
fidivs
rolb
call
add
cmpsb
lret
out
aaa
adc
std
xor
aam
shll
mov
jp
xchg
push
int3
movsl
push
sahf
sbb
mov
imul
leave
shrl
push
mov
fisttps
mov
ljmp
push
add
ja
mov
pop
jbe
outsl
cmp
out
ljmp
or
mov
mov
cmp
pop
sub
adc
xor
and
cmpsb
xlat
in
sbb
fs
mov
jae
cld
push
cwtl
jmp
clc
out
mov
scas
and
divl
mov
mov
sub
das
int
add
lcall
leave
cld
xchg
incb
lahf
and
lcall
inc
insl
cmp
mov
jg
mov
lret
fiadds
lock
add
mov
test
push
push
cmpsb
fldcw
push
pop
mov
addb
addr16
jl
or
inc
fsubp
int
rcr
pop
out
mov
pop
or
cmpsl
fdivrl
pushf
inc
js
cmc
pop
ror
sub
std
adc
and
cmc
push
jno
adc
repnz
sbb
test
aam
rolb
lea
mov
ret
mov
mulb
in
sbb
imull
xor
mov
dec
mov
adc
inc
cmpsb
and
mov
push
mov
push
mov
xor
repz
int3
das
cmp
repz
test
mov
insl
lods
xchg
sbb
jo
lock
fwait
push
mov
cmp
scas
lock
jae
xchg
xchg
iret
fucomp
adc
pop
call
lret
mov
aaa
and
incl
cwtl
fldenv
jbe
ret
popf
cltd
sub
popf
jae
lods
jmp
mov
fdecstp
sbb
shrl
aas
sahf
pop
add
jo,pt
push
push
rorl
mov
and
cmp
pop
fisttps
loop
ret
and
inc
mov
inc
mov
fisubl
jp
test
xchg
pminub
add
and
jg
push
cmp
subl
sarl
inc
push
test
and
icebp
out
mov
mov
stc
pushf
fcoml
push
bound
shr
je
xchg
es
add
dec
arpl
nop
push
add
je
cmp
inc
rclb
popa
mov
loope
fmuls
or
jmp
fdivr
xchg
push
cmp
lret
ja
testb
scas
aad
outsb
push
add
es
das
shlb
cwtl
subl
ret
mov
loope
sub
mov
test
pop
in
and
iret
imul
or
or
lods
cmp
repz
ret
add
outsl
pushf
outsl
xchg
xchg
fbstp
pop
rcrl
mov
push
addr16
data16
and
call
shlb
aam
or
stos
andb
cmpb
out
mov
mov
test
and
ficoml
and
mov
push
add
test
sarb
adc
or
aad
gs
rolb
jo
aas
hlt
mov
das
jb
dec
std
insl
ret
enter
cmp
adc
out
sbb
dec
movsl
lcall
or
or
loopne
sub
inc
stos
fdiv
pop
outsb
sar
jecxz
out
cli
xor
sub
out
inc
sahf
movsl
jge
push
mov
popa
jg
sub
outsl
lret
jge
loop
rcrl
roll
popf
popf
dec
fs
mov
add
dec
int
inc
lds
and
pushf
jo
ret
cmpsb
pop
aas
pop
xor
popa
aad
arpl
or
pop
test
stos
loop
or
les
dec
out
inc
mov
and
inc
xchg
inc
outsb
and
jge
lret
outsl
xor
jns
insb
shlb
sarl
xchg
imul
dec
cld
jbe
fildll
sbb
cmp
rcl
inc
jns
pop
sub
mov
add
inc
cmc
dec
sbb
repz
in
movsb
nop
push
repnz
jo
les
cmp
sbb
mov
dec
std
inc
xchg
cld
loope
pop
into
add
or
adc
push
xchg
xchg
pop
jmp
shl
or
aad
add
std
inc
int3
cli
push
fwait
or
stos
add
push
xchg
stc
pop
jae
insl
dec
icebp
scas
and
mov
dec
fs
inc
daa
cmp
inc
cmpsb
xor
add
xchg
or
fisubl
or
mov
inc
sbb
lods
scas
je
push
cmp
jp
stos
add
mov
sub
adc
mov
jmp
cld
adc
outsb
jne
shl
push
rcrl
mov
sbb
shlb
arpl
pop
int
aaa
in
cmp
test
sbb
das
push
es
fcoml
in
int
addl
mov
mov
mov
out
pop
iret
dec
adc
mov
cmc
cmpb
xchg
inc
and
pop
cmp
xor
sub
sti
fs
inc
orb
jg,pn
cmpsb
fdivr
inc
xor
nop
push
or
or
int
ret
in
sbb
pop
ss
fidivs
popa
mov
or
sarl
int
push
rclb
es
stos
rorb
push
jp
into
cmp
out
mov
fbstp
outsb
push
jp
push
adc
cwtl
xchg
push
pop
xchg
mov
add
negb
or
hlt
cmpsl
add
pusha
mov
lea
cmpsl
movsl
jnp
xchg
inc
inc
jbe
pop
in
inc
push
inc
inc
lds
adc
in
pushf
dec
or
shrl
call
pop
push
fdivr
gs
xor
lcall
js
cmc
ret
sub
xchg
mov
and
cli
mov
adc
call
dec
decl
neg
cld
or
and
sbbb
pop
rcrl
pusha
mov
subb
aaa
out
xor
add
cmp
mov
mul
adc
cmp
pop
adc
lret
adc
loope
mov
cli
movsb
sbb
out
jbe
repnz
int3
mov
in
outsb
push
xchg
jle
mov
cmp
adc
pushf
daa
mov
xchg
inc
sbb
cmp
jecxz
iret
fucomip
adc
dec
adc
xchg
push
sub
xchg
push
call
push
fdivrs
jne
cs
das
popf
les
or
add
pop
sbb
stc
sbb
add
mov
ds
sbb
dec
cmp
and
sbb
jno
lods
aad
inc
imul
repz
sbb
js
or
gs
stc
addr16
fidivs
ret
negl
mov
movsl
outsl
popa
jae
inc
jae
jne
mov
add
mov
add
addr16
mov
mov
and
ja
jbe
adc
pushf
mov
mov
test
jecxz
push
jg
mov
mov
mov
outsb
dec
test
jno
bound
adc
push
imul
ljmp
sub
push
and
lcall
mov
xchg
repnz
jg
mov
pushf
dec
xor
mulb
nop
jle
es
mov
dec
mov
mov
cli
imul
fxam
and
pushf
xlat
sbb
cwtl
xchg
dec
xor
inc
pop
dec
inc
mov
add
inc
cmc
cli
scas
and
scas
xor
mov
movsl
jl
jo
icebp
mov
pop
popa
imul
xor
dec
aas
dec
cs
incl
lahf
mov
pop
push
inc
dec
clc
lahf
lahf
fsubl
pop
mov
mov
popf
xchg
bound
adc
mov
lret
ljmp
out
cmp
mov
loopne
and
pusha
pushf
call
shl
addr16
int3
cld
mov
add
dec
inc
lret
in
dec
sti
roll
pop
inc
data16
pop
xchg
sbb
xchg
mov
insl
cmc
mov
pop
in
loope
adc
xor
das
sbb
test
adc
mov
aas
out
jns
ja
mov
pushf
lcall
mov
out
lret
dec
dec
inc
nop
jmp
push
test
ss
xor
nop
fcoml
sub
mov
repz
xchg
mov
rcpps
ja
jb
push
std
and
call
xor
cmp
mov
fstpt
cmpsb
push
jecxz
mov
mov
cli
or
push
or
push
addr16
mov
js
and
in
jbe
bound
sbb
jne
call
incl
sub
enter
bound
xor
pop
iret
jnp
adc
lea
xchg
test
xchg
sbb
popf
mov
push
jns
mov
stc
add
and
inc
mov
lock
mov
add
fwait
jns
stc
xor
dec
sbb
in
test
cwtl
mov
addr16
fadd
push
fcomp
or
mov
inc
mov
adc
mov
ja
cmc
addr16
dec
adc
inc
or
mov
jmp
xchg
mov
jp
dec
pop
stos
mov
inc
dec
insl
dec
or
and
and
in
push
cmp
leave
jge
lock
enter
push
ror
adc
test
out
arpl
test
in
and
cs
mov
cld
xor
pop
sarl
int
mov
jne
or
mov
and
in
sahf
mov
push
bound
add
jbe
mov
push
pusha
mov
adc
lods
jmp
pop
test
out
leave
mov
mov
mov
sbb
add
mov
cmc
mov
mov
push
lahf
aaa
jb
cmpsb
xchg
leave
arpl
xor
stc
jo
fs
cmpl
incb
xchg
or
mov
lret
push
out
or
fstpt
scas
cmp
jl
mov
mov
cmp
ret
inc
dec
cmp
popa
cmpsb
push
cmp
cmpsb
out
xchg
adc
popf
aad
shlb
adcl
cli
cmp
push
mov
mov
mov
pushf
jbe
and
mov
lret
lock
push
test
inc
sbb
sbb
inc
fwait
adc
repnz
mov
xchg
jne
sub
orl
loope
sahf
xchg
ret
les
push
mov
je
mov
mov
adc
mov
lods
bound
pop
fistl
hlt
data16
inc
int3
push
jb
out
int3
fadds
dec
adc
lret
ja
lock
lods
loop
test
stos
mov
pusha
je
add
pop
push
pushf
repz
daa
mov
lods
and
jecxz
lods
xor
ss
mov
leave
mov
dec
sahf
gs
mov
mov
test
sub
dec
mov
cmp
stc
cli
mov
shl
add
pop
and
scas
jg
stos
dec
arpl
push
mull
push
dec
or
shlb
iret
clc
xchg
dec
cmp
mov
inc
cmpsb
js
outsl
fidivs
adc
out
out
in
jge
in
jecxz
add
dec
cmp
repnz
sbb
xchg
sbb
pop
test
pop
dec
testl
push
sub
mov
mov
cs
outsl
pop
mov
cmp
arpl
mov
sti
in
and
xor
mov
ret
cmp
fstp
lods
stc
sbb
xor
cmp
add
sbb
xchg
jo
jbe
sbb
push
mov
into
mov
cmpsb
xchg
adc
mov
pop
outsl
push
mov
test
fisubs
jmp
mov
fbstp
imul
rorl
pop
xchg
and
ljmp
sarl
mov
jnp
fsubrs
leave
movsb
pop
and
jecxz
stos
xchg
adc
cmp
mov
inc
jne
mov
sub
or
jno
sti
subb
pop
pop
xor
iret
mov
dec
add
scas
lds
jnp
jae
xor
sub
cmp
xchg
leave
pop
fucomp
outsl
inc
out
mov
inc
pop
hlt
pop
js
das
scas
jge,pt
outsb
dec
jbe
ret
test
sbb
out
aam
xchg
mov
sub
fimull
mov
ror
mov
xor
adc
dec
push
xchg
inc
jne
adc
inc
test
push
les
enter
lds
jl
add
sbb
outsb
insl
push
popf
jnp
mov
mov
rcl
les
aaa
inc
adc
adc
push
clc
mov
add
icebp
pop
inc
out
dec
push
stos
sub
mov
mov
test
inc
inc
cmc
int
int
xor
cmpsl
or
inc
sar
mov
mov
dec
fs
pop
pushw
repnz
push
subl
enter
test
xchg
pop
cmp
enter
xor
pop
or
lahf
add
dec
sub
dec
icebp
or
mov
je
xor
rdpmc
dec
sub
mov
popa
and
and
adcl
sbb
stos
insb
pop
mov
fidivrl
sti
cmp
jne
out
pop
std
pop
fldenv
call
xchg
popa
out
inc
sub
jbe
add
jae
ja
insb
fadds
inc
cmpsb
inc
push
jp
xchg
gs
sbb
repz
fisttps
das
int
adc
mov
add
pop
jmp
sub
push
aam
mov
xlat
outsb
sbbl
js
cld
push
shr
xor
and
mov
add
mov
inc
adc
mov
mov
aaa
out
cld
stc
xchg
out
inc
push
test
mov
leave
rcrb
pop
lock
data16
iret
jnp
jae
push
fists
int3
lret
dec
push
inc
ret
mov
xlat
mov
shll
lock
push
push
aaa
dec
pop
pushf
mov
push
adcl
and
push
and
scas
sub
ror
or
mov
pop
jo
ror
pop
out
adc
rcrl
hlt
push
add
int
pop
mov
out
outsb
stos
out
hlt
outsb
arpl
adc
test
sbb
ljmp
bound
push
push
dec
aaa
rcrb
out
push
xor
pusha
bound
fcomi
jl
mov
inc
jno
add
imul
push
mov
push
push
cltd
sub
pop
scas
push
mov
sti
mov
rcrl
cmc
or
ljmp
outsl
ret
push
repz
orl
pop
jns
cmp
mov
push
test
push
sub
int
stos
movsl
or
seta
in
imul
add
inc
sahf
cmp
daa
xor
push
arpl
dec
xor
jae
call
jne
jl
pop
pop
inc
jo
shll
lea
jp
push
xchg
sbb
pop
xchg
enter
fstsw
push
pushf
ss
loopne
lock
inc
cmp
jg
adc
cs
push
and
bnd
push
stos
add
jbe
mov
push
inc
shlb
push
lahf
fstpt
movsb
cmp
lock
inc
adc
data16
mov
fs
jle
sub
jl
or
mov
dec
scas
mov
cmovne
add
in
push
xor
es
lahf
mov
cltd
xor
add
jg
add
enter
movsl
repnz
or
jecxz
mov
stos
jae
aad
lea
lods
mov
dec
dec
mov
addl
aam
rcrb
and
in
sub
cmc
xchg
adc
jno
jp
scas
and
push
xor
orl
pop
adc
insl
and
cmp
dec
dec
mov
mov
scas
or
push
mov
mov
adcb
jge
stos
jmp
adc
cmc
lods
outsl
enter
es
push
call
inc
jl
out
call
jmp
popa
data16
cmp
insl
dec
jmp
pusha
roll
insb
xor
cld
lret
and
sahf
cmp
cld
add
mov
das
and
test
cmp
aas
sbb
lds
loopne
mov
mov
std
adc
adc
dec
int3
and
imul
gs
andb
movsl
pop
lret
xchg
and
clc
cmovge
addr16
in
repnz
popa
mov
gs
out
imul
mull
add
dec
mov
imul
mov
cmp
adc
stos
cmpl
fwait
hlt
mov
sub
push
sbb
shrb
shrb
or
bndldx
repz
arpl
dec
in
rclb
loopne
xchg
mov
in
test
cmp
and
lea
dec
repnz
push
out
rcll
push
cltd
cmp
bound
sbb
xor
rolb
mov
xor
mov
fistpll
push
adc
add
sbb
pop
fcmove
push
mov
adc
xchg
inc
cld
lret
jbe
stc
mov
in
pop
test
pop
cwtl
shrb
lock
shrl
mov
arpl
fimull
sbbl
das
ss
push
out
out
fdivs
lcall
dec
std
lcall
loope
cwtl
sahf
dec
mov
enter
mov
clc
mov
vmovss
gs
jg
int3
and
jmp
out
mov
cli
inc
xchg
inc
adc
adc
out
sub
cmp
xchg
aam
xor
xchg
xor
push
ret
negl
iret
maxps
imul
insb
mov
mov
cmp
pop
rcr
and
sbb
mov
lret
xor
sbb
mov
add
jl
adc
add
ljmp
add
mov
sbb
sti
fcoml
lods
pop
xchg
lock
mov
mov
sbb
jbe
or
out
mov
rclb
pusha
clc
jecxz
or
or
scas
xchg
cmpsl
mov
sub
aad
arpl
fstl
in
insb
or
int3
test
subb
push
jecxz
cmc
ficoml
mov
inc
into
pop
push
dec
mov
jae
fdivrl
jl
xchg
cmp
xor
int3
es
rcrl
jb
cmpb
stos
out
cld
fs
adc
pop
mov
mov
jb
xchg
push
sbb
movsb
xchg
xchg
out
test
leave
repz
test
int
xor
cmp
mov
xor
xchg
add
cmpb
sahf
or
pop
xor
cli
popa
int3
mov
out
xchg
ja
sbb
jle
xorl
push
sahf
scas
repz
sbb
add
or
cld
repz
sub
fcoml
pop
mov
and
cld
test
jle
jg
fstpl
dec
lret
pop
data16
mov
cmp
push
ds
es
cwtl
jae
rcrb
or
mull
repz
gs
daa
je
call
lret
sub
cltd
outsb
insl
out
push
add
sub
pop
js
rclb
lcall
add
stos
imul
sarb
fidivs
sbb
cmp
dec
xchg
pop
jl
test
xorl
shl
mov
jmp
outsb
xchg
fidivs
fwait
jmp
pusha
dec
sub
shrl
cltd
xchg
cmp
mov
scas
cli
icebp
xchg
out
jae
fmuls
lahf
lret
and
int3
int
into
push
subb
idivl
mov
out
mul
lea
loope
cs
cs
or
lret
inc
jp
aad
sets
hlt
xchg
push
jmp
adc
push
mov
cmp
sbb
cmp
add
sub
push
sub
aam
or
sti
inc
adc
lds
adc
xchg
mov
fcomps
adc
shl
push
pop
lret
fstl
add
mov
inc
js
inc
arpl
test
out
pop
xchg
mov
add
dec
push
dec
js
inc
dec
fwait
rorl
ficoms
mul
pop
pop
jnp
mov
dec
inc
pop
mov
addr16
fnstcw
ss
adc
sbb
and
push
fiaddl
dec
push
cltd
mov
push
lret
lods
sbb
xor
sbb
jae
xor
cmp
pop
daa
inc
lret
mov
mov
mov
pusha
fwait
mov
data16
push
shll
inc
lret
sbb
faddl
cwtl
pushf
andb
dec
jmp
add
sbb
jns
inc
mov
repz
adc
inc
sbb
aaa
clc
or
push
sub
mov
js
out
sbb
mov
insl
mov
cmp
je
cli
hlt
popa
or
mov
adc
push
test
outsl
jno
push
or
negl
pop
call
sub
arpl
or
mov
int
pop
inc
pop
lock
add
fcmovnb
adc
lret
mov
fmuls
mov
pop
xchg
lds
add
jae
xchg
idiv
mov
mov
clc
lret
sarl
test
cmc
es
sar
cwtl
mov
daa
and
jns
repnz
out
mov
shrb
int3
inc
inc
enter
aas
insb
sbb
sub
ljmp
pop
sbb
insl
popa
movsb
shll
adc
push
enter
rcr
push
in
cli
filds
sahf
data16
popl
dec
or
xchg
fistps
xchg
and
push
jno
cwtl
aam
popa
inc
inc
ljmp
adc
add
outsl
fldl
ret
inc
call
adc
xor
lret
fnsetpm(287
mov
push
and
lea
xor
xor
push
pop
adc
loopne
mov
outsb
or
dec
or
pop
jl
call
leave
subl
inc
ss
sub
sbb
xchg
jmp
push
xchg
out
hlt
imul
cmp
mov
gs
out
xor
mov
cmp
imul
out
sbb
cmpsb
pop
mov
movsl
inc
xor
sbb
dec
mov
ret
add
xchg
dec
add
pop
and
hlt
cmp
jle
pop
dec
jo
dec
mov
push
inc
dec
push
inc
pop
pop
cmp
mov
push
jmp
ja
dec
pop
aas
mov
or
mov
xor
mov
shl
jb
dec
jecxz
xor
xchg
gs
icebp
test
lretw
orb
push
mov
add
xchg
rcrl
xor
iret
jle
or
inc
add
sbb
test
lret
xchg
or
iret
xor
scas
mov
inc
ja
add
mov
xchg
verw
cmpsl
xor
int
and
out
out
pop
xor
add
iret
shll
mov
sub
pop
cmpl
and
cmpsl
jae
pop
mov
mov
stos
pop
pop
xor
fs
push
dec
mov
rorl
cmpsl
push
push
jecxz
leave
loope
push
xchg
out
das
add
sub
mov
xor
sti
lret
ds
test
cmpsb
int3
mov
sub
ljmp
int
popf
es
mov
fsub
por
out
lock
lgs
inc
mov
hlt
dec
movl
pop
xchg
cmp
xor
movsl
shrb
add
sbb
das
xchg
clc
xor
mov
pop
fdivrl
mov
cmp
fsubrs
jo
in
popf
push
mov
scas
test
jae
and
cmp
sbb
lock
cmp
mov
xor
lret
out
fdivr
push
imulb
mov
insb
int3
cltd
adc
inc
push
lcall
lods
aad
cmp
push
push
addl
mov
sbbl
mov
mov
jbe
mov
mov
je
adc
add
aas
out
daa
fists
dec
add
add
push
nop
mov
xlat
sahf
nop
fistps
shrl
cmp
and
call
adc
push
or
ljmp
std
aas
push
icebp
fmul
mov
adc
and
sub
adc
imul
jno
and
mov
sbb
ret
sub
gs
out
jae
mov
fucomp
std
stc
or
lahf
icebp
filds
test
sub
mov
repz
int
or
jmp
push
cmpsl
mov
push
sbb
dec
test
push
jne
pop
fdivs
jns
out
lods
and
ret
or
test
xorl
sbb
adc
cmp
loopne
mov
mov
aas
sub
adc
fidivl
sbb
sub
mov
cmpsl
mov
push
xlat
mov
fistpll
imul
aam
enter
pop
cs
mov
pop
negl
das
xchg
filds
xchg
push
and
sbb
lods
jo
fcoms
inc
outsl
push
cmp
pop
mov
or
imul
mov
mov
xchg
mov
mov
lods
repz
add
int3
lds
subb
jg
test
mov
cmp
data16
je
pop
insb
or
dec
lcall
sbb
loop
repnz
inc
cmp
fdivrl
xchg
popf
scas
inc
inc
imul
addr16
aaa
push
aam
and
jno
or
and
cli
loope
cmp
lret
push
mov
pusha
fmull
adc
in
push
sbb
pusha
out
xorb
cmp
mov
pushf
xor
aam
movsl
xchg
leave
fdivl
jb
jl,pt
mov
insb
loopne,pt
jg
mov
icebp
push
pop
xor
in
fwait
mov
inc
mov
loopne
dec
push
or
mov
ficoms
adc
arpl
into
arpl
xor
repnz
outsl
jmp
push
jne
scas
testb
pop
mov
or
mov
push
xacquire
sbb
sbb
arpl
and
insl
popa
mov
pop
lds
stc
xor
repnz
sbb
pop
imul
sbb
jl
jb
ret
in
jbe
outsb
pushf
pop
and
cmp
testl
into
popl
sbb
lret
fimull
cmp
xchg
lret
cmp
mov
dec
xchg
mov
push
ret
sbb
repz
cltd
lea
adc
inc
and
iret
std
adc
addl
xchg
xchg
or
and
fmull
cmpsb
lcall
and
les
lock
jmp
mov
lret
adc
jecxz
jo
movsb
push
sarl
ror
popa
or
aaa
in
xlat
dec
dec
and
inc
leave
pop
dec
jb
sti
xchg
fsts
pop
fwait
clc
push
xchg
push
mov
pushf
addr16
jo
mov
popf
adc
aas
jmp
scas
clc
sub
cmpsb
cmp
jb
inc
push
mov
xor
aam
pop
add
cmovo
outsb
sti
test
aaa
pop
mov
jp
loope
ss
js
inc
pop
xchg
arpl
mov
test
fwait
aam
inc
inc
add
adc
mov
test
ja
xchg
lcall
mov
pop
sub
pop
xchg
movsb
pop
test
cmp
jno
jns
icebp
loop
mov
jae
gs
rep
daa
lahf
add
or
xchg
mov
sub
add
pushl
ss
sbb
inc
mov
cs
enter
mov
sahf
and
and
mov
pop
xchg
mov
pop
jmp
xchg
fstl
leave
and
ret
ja
push
outsb
andl
push
mov
mov
jo
xchg
mov
jl
fyl2x
bound
das
adc
lea
push
pop
mov
jge
push
mov
scas
inc
pop
aad
std
mov
push
xchg
ljmp
es
xor
shll
out
mov
into
or
push
test
xchg
pop
and
sub
incb
je
pop
je
inc
dec
pop
sub
in
rcrb
inc
repz
jbe
jl
loopne
loopne
jo
ficoms
sti
out
adc
xor
and
lods
sbb
sub
cmp
ficoms
cmp
jnp
adc
xchg
pusha
movsb
and
lcall
loope
sbb
pop
loop
rolb
jg
call
cmp
lea
js
ret
and
mov
ret
sbb
das
push
fldl
iret
cltd
mov
mov
sbb
outsl
push
popa
xchg
mov
add
inc
jle
neg
mov
cmp
cmp
mov
push
mov
xchg
cmc
adc
sub
jl
or
jno
std
aam
xchg
incb
inc
pushf
mov
loope
ja
xchg
cs
in
add
mov
jecxz
fstpl
or
sbb
nop
popa
enter
xlat
jecxz
jo
arpl
jae
mov
test
cwtl
mov
dec
inc
lcall
xor
idivl
sbb
adc
insl
stos
push
mov
mov
loop
inc
enter
or
mov
add
leave
and
dec
loop
popa
es
out
sub
pop
repnz
sub
mov
sbb
dec
pop
pop
mov
testl
dec
fcoml
jns
in
pop
enter
int3
cmp
out
mov
mov
jbe
psllq
outsl
lods
dec
outsb
aaa
fdiv
sub
push
xchg
cs
mov
jmp
popf
mov
jg
xor
mov
add
xchg
mov
imul
pop
dec
cwtl
mov
adc
popf
mov
fnsave
sbb
dec
nop
mov
scas
pusha
inc
fidivrs
xchg
fisttpll
jae
in
outsb
dec
mov
mov
fucomp
adc
cmp
sub
es
aaa
stos
adc
and
clc
pop
lea
adc
jg
mov
cmp
mov
xor
pusha
popa
mov
jno
repnz
aaa
lods
lret
xchg
loop
cmp
fnstcw
icebp
sti
sarl
add
popa
rcrl
and
rcr
clc
fsubrl
jno
lods
add
mov
cmp
pusha
xor
mov
xchg
addb
add
fstps
mov
push
adc
xchg
xor
add
rclb
cmpsl
push
sub
lret
cmp
js
and
jle
shrb
jbe
xor
out
fcompl
imul
or
pop
lods
cwtl
add
mov
divl
push
mov
ret
daa
sub
into
cmp
nop
mov
cmp
jecxz
inc
pop
std
loop
mov
cs
lock
push
icebp
into
aad
or
xchg
push
xchg
test
xchg
ror
testb
pushw
jmp
mov
xor
test
xlat
insb
addr16
jle
mov
andl
ficomps
negb
and
test
adc
leave
mov
es
dec
int3
lods
movsl
test
inc
push
dec
in
dec
jno
jo
sbb
testb
cmp
cmp
push
pop
test
jno
pusha
scas
mov
xor
push
jl
push
testl
sub
add
jg
pop
mov
dec
xchg
push
mov
mov
add
jo
and
push
mov
dec
cmp
xor
int3
sbb
sti
scas
dec
or
stos
pop
pmaxsw
push
xchg
fcmove
jmp
xlat
cmpsl
pop
push
ja
pop
loope
push
les
jae
xor
test
sbb
jne
push
stos
sbb
stos
or
xchg
lea
pop
fldenv
movsl
nop
and
sub
mov
mov
push
scas
sub
lret
pop
loopne
stos
leave
sbb
pop
xor
fwait
je
lret
loop
and
orb
loopne
lcall
push
inc
dec
push
jg
xor
cmc
icebp
out
add
mov
push
das
ss
xchg
inc
shlb
sub
lret
sbb
dec
mov
mov
sub
jae
pop
mov
mov
pushf
sbb
sahf
das
sbb
jne
ficoml
dec
sti
sbb
leave
sahf
mov
mov
dec
mov
ds
sbb
pop
pop
testb
lret
loopne
sbb
stc
subb
sarb
outsl
es
fxch
and
mov
mov
enter
sub
jne
pusha
pushf
mov
lcall
mov
pop
and
stos
stos
cld
cs
fdiv
pop
les
stos
fistl
call
aas
jmp
lea
dec
testl
pushf
insl
xor
mov
sub
sub
into
jbe
fs
xchg
test
xor
sbb
fnstsw
add
sub
inc
scas
jmp
cmc
or
push
xor
stos
out
jmp
adc
sub
push
cld
xchg
js
mov
fistps
pop
mov
ficompl
test
mov
xchg
jl
xchg
cmpsb
inc
mov
sbb
mov
fwait
mov
bound
fwait
push
dec
jnp
arpl
mov
int
aad
sbb
or
xchg
push
pop
in
inc
adc
jmp
ret
mov
add
xchg
mov
pop
repz
dec
jl
ja
push
xor
pop
jg
cltd
cmc
dec
pop
inc
mov
lret
cli
jbe
push
push
push
popa
enter
push
sub
cmpsb
pusha
add
add
cmc
fstpl
push
sar
imul
hlt
jnp
inc
scas
dec
mov
lret
mov
outsl
jmp
xor
sbb
std
inc
dec
fisubrs
inc
mov
jnp
stc
sbb
adc
arpl
das
lods
lods
adc
fs
imul
sbb
pop
and
in
dec
nopl
cld
fmul
cmpsl
fcomip
fsts
xchg
adc
mov
cmpl
push
sub
mov
icebp
fbld
pushf
mov
adc
loop
sub
dec
xchg
iret
loopne
sbb
daa
lds
dec
test
inc
add
adc
nop
mov
rorb
or
nop
fadds
cmpb
push
mov
insb
jnp
push
fstl
cmc
adc
push
or
orl
pop
dec
imul
mov
and
cmc
mov
roll
loop
xchg
movsl
sbb
fldl
add
int
push
xchg
in
sub
cld
cs
inc
inc
fnsave
push
push
cmp
sub
inc
add
cli
aaa
sub
clc
pop
fisttpll
pop
adc
adc
fnsave
repnz
rcll
add
add
daa
or
insb
pop
dec
pusha
jle
jo
icebp
mov
mov
push
mov
inc
imul
adc
mov
test
xchg
test
cmp
fmuls
lods
jo
sbb
aam
mov
jg
pop
insb
out
or
or
add
or
or
xorl
cmpsl
add
mov
ret
pop
mov
daa
mov
mov
push
je
xor
cmp
fistpll
sti
fdivs
addl
jns
or
mov
aas
jmp
add
push
pop
push
pop
hlt
jae
ss
shlb
pop
ss
movsb
repz
mov
push
test
popa
insl
ja
lret
sbb
rdpmc
movsb
and
scas
test
fwait
mov
fcmovne
jns
xchg
cltd
xchg
lods
jo
sarl
push
jl
adc
inc
inc
mov
adc
or
out
fdivrs
cltd
mov
jl
lret
lcall
inc
or
pop
pop
sub
xchg
xchg
ja
xor
xchg
xlat
add
sti
cli
cmp
rclb
mov
mov
cmp
adc
pop
idivb
addb
inc
inc
dec
jnp
cmp
cmp
outsb
sbb
jbe
lods
xor
mov
in
shlb
lahf
cli
data16
sahf
ja
sub
and
punpckhbw
push
scas
cmp
dec
inc
push
cmpsl
mov
dec
test
adc
pop
fcoml
jo
js
and
idivb
jno
add
scas
enter
in
test
add
mov
mov
push
js
push
mov
mov
fucomi
orw
popa
xchg
dec
adc
scas
mov
repz
fnstsw
lds
or
push
and
lret
or
das
lock
movsl
daa
xlat
cmp
xchg
stc
test
mov
cmp
pop
push
hlt
pop
orb
jns
aad
fisttpl
test
in
inc
pop
mov
adc
aam
int
pop
add
int
mov
mov
push
mov
jne
inc
xor
popf
cltd
and
sbbl
shrb
je
add
iret
pop
xor
out
fmuls
sbb
pop
cmp
cmp
xchg
xorl
mov
mov
push
insb
sbb
sbb
inc
mov
jp
ljmp
outsb
pop
push
fidivl
out
add
pop
and
xor
add
enter
push
mov
sub
lret
mov
adc
dec
stos
jl
push
lret
ret
add
or
shrl
mov
pusha
mov
mov
inc
test
mov
loope
jae
xor
repnz
mov
mov
ljmp
jnp
std
xchg
jnp
dec
lahf
jo
jnp
loope
out
cmp
in
jnp
pop
addr16
fsub
rcl
cmp
fisubrs
pusha
pop
push
test
aam
mov
sub
dec
pop
and
sbb
imul
jge
test
mov
xor
mov
push
push
mov
sub
fwait
scas
jo
sub
outsl
lods
mov
cltd
stos
sti
stos
repnz
sub
sub
imul
test
ds
subb
inc
andl
popa
sbb
push
and
sub
ja
dec
ss
mov
jecxz
xor
xchg
xor
addl
aam
mov
stos
mov
adc
pop
jecxz
mov
push
fwait
or
fcmovu
mov
jl
pop
dec
jo
jp
arpl
cli
pop
insb
sti
cmp
cmp
push
scas
jns
and
lcall
test
lods
cmpsl
dec
repnz
sbb
test
jg
stos
bound
int3
ljmp
lret
data16
outsl
dec
sbb
iret
fsubrp
das
fimull
insb
mov
mov
hlt
lret
out
sti
hlt
mov
pushf
mov
pop
bnd
inc
sbb
sub
cmp
clc
jg
jne
stos
adc
xchg
mov
out
adc
mov
in
nop
nop
and
stos
mov
out
daa
mov
xchg
push
dec
scas
xor
mov
and
mov
and
cwtl
sbb
xchg
inc
push
mov
roll
mov
cmp
jo
fisttpll
sbb
clc
mov
xor
and
adc
cmc
inc
mov
sbb
mov
and
fidivs
test
sub
or
adc
sub
cmp
push
cmp
cmp
jl
negl
jg
inc
std
sub
mov
popf
fisubs
adc
std
out
jg
xchg
sub
out
push
dec
ljmp
outsb
fisttpl
inc
jb
imul
and
pop
lods
pop
cmp
add
cmc
cwtl
and
push
popf
pop
xchg
in
lret
pop
addr16
xlat
repnz
push
push
insb
ja
pop
fidivs
add
pop
fwait
dec
sbb
dec
mov
imull
push
pop
pushf
sub
push
cmpsb
mov
mov
sbb
xchg
lock
ss
repnz
cmp
sub
or
push
ret
call
jl
sbb
scas
xor
shlb
jno
movsb
sub
cmp
ja
mov
sahf
jecxz
gs
mov
je
xor
push
jge
sarl
fptan
shrb
sub
aas
and
cltd
xchg
xor
cmp
and
or
filds
or
cwtl
cmp
jo
sbb
mov
mov
scas
nop
lea
aaa
cmp
lret
mov
sti
loopne
inc
pop
popa
inc
cmp
imul
into
cmpsl
pop
dec
mov
leave
in
les
jb
nop
sbb
int
scas
jecxz
adc
call
out
in
xor
adc
xchg
add
cltd
jnp
xchg
mov
das
sub
push
adc
add
enter
outsl
push
shlb
or
shl
push
test
fstp
mov
pop
movsb
or
jle
ja
xor
ret
in
enter
mov
js
je
add
mov
in
xor
js
loope
add
daa
daa
les
dec
mov
adc
inc
jno
xchg
push
cmc
call
and
repnz
insb
stos
aam
jle
in
mov
aaa
fwait
arpl
out
adc
addr16
push
mov
xchg
jg
jb
loop
dec
sbb
sbb
xor
sbb
out
push
jne
push
inc
repz
daa
cs
mov
out
xchg
in
cwtl
add
xorl
mov
shlb
and
cli
ret
sub
xor
sub
mov
or
jecxz
sbb
mov
scas
adc
dec
fs
std
ret
jne
push
in
rcrb
arpl
call
jle
repnz
cld
insl
mov
or
mov
inc
mov
mov
leave
lock
add
pop
gs
out
andl
sbb
push
cltd
fsubp
or
sbb
lcall
loop
jnp
lret
lods
adc
jae
mov
imul
orl
mov
pop
sahf
xchg
mov
sbb
loope
push
scas
jmp
sub
dec
sub
mov
adc
fadd
movhps
xor
mov
jmp
sub
cltd
das
testl
or
int
shlb
mov
push
push
repz
int
adc
jecxz
inc
jno
cmp
xchg
dec
xchg
jecxz
repnz
int
shrd
push
cmpsb
push
xor
je
in
xchg
mov
fisubs
jne
xor
subl
ja
ret
dec
lea
or
bound
mov
xchg
jne
jg
stos
jecxz
pop
call
pop
rclb
pop
and
cmc
xorb
and
sbb
gs
push
mov
lret
sub
push
cwtl
jb
sbb
dec
push
sub
sbb
js
mov
pushf
rcl
out
stc
hlt
push
jmp
xchg
mov
mov
push
shll
rol
and
sarl
repz
adc
inc
inc
fbstp
sbb
jmp
xchg
xchg
jmp
pop
nop
mov
jns
jo
jbe
adc
add
test
imulb
fisubrs
lret
lea
jmp
scas
cmc
push
mov
jo
jecxz
movsl
or
push
fcomps
push
loopne
pop
enter
inc
leave
frstpm(287
es
pop
notb
mov
sbb
and
addr16
mov
lret
or
fidivrl
loop
repz
or
leave
subl
mov
ss
test
pop
sub
pop
mov
out
inc
push
fstps
and
clc
sub
mov
out
cmp
mov
popa
std
and
fimull
outsl
xchg
pushf
pushf
loop
rclb
daa
xlat
xor
std
stos
das
mov
pop
popa
adc
mov
add
into
push
push
in
jp
xor
mov
inc
sbb
jge
jg
js
add
add
add
call
in
pushf
and
sar
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
