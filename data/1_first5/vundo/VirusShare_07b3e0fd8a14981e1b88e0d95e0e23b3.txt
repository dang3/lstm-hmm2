add
push
pushl
mov
call
movl
mov
pop
pop
ret
int3
int3
int3
int3
int3
ret
int3
int3
int3
int3
int3
xor
inc
ret
int3
int3
int3
int3
int3
xor
inc
ret
int3
int3
int3
int3
int3
xor
ret
int3
int3
int3
int3
int3
mov
push
mov
push
mov
mov
call
pushl
mov
call
push
push
pushl
call
xor
inc
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
push
xor
xor
test
jle
push
lea
push
mov
cmp
je
inc
add
cmp
jl
pop
pop
cmp
jl
xor
jmp
test
jle
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
call
inc
xor
test
mov
jle
lea
mov
inc
add
cmp
jl
pop
ret
int3
int3
int3
int3
int3
xor
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
test
pushl
pushl
jne
push
pushl
call
jmp
dec
push
call
pop
ret
int3
int3
int3
int3
int3
call
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
pushl
mov
pushl
mov
push
call
mov
mov
movzwl
movl
mov
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
push
push
mov
mov
push
call
mov
push
push
push
pushl
call
mov
push
call
mov
push
mov
call
neg
sbb
inc
push
push
push
call
in
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
lea
push
pushl
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
call
pushl
call
jmp
mov
push
push
call
mov
call
mov
jmp
push
lea
push
push
pushl
call
xor
mov
push
push
push
push
pushl
call
pushl
mov
pushl
pushl
push
push
call
lea
push
pushl
call
push
pushl
pushl
push
call
lea
push
call
pop
push
lea
push
push
push
push
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
pop
jmp
call
push
mov
call
xor
leave
ret
mov
mov
push
mov
mov
push
mov
mov
mov
mov
mov
mov
add
add
mov
push
mov
pushl
add
mov
mov
mov
call
mov
call
mov
mov
mov
movzbl
movzbl
sub
je
addl
xor
mov
push
push
push
push
push
push
push
push
push
pushl
pushl
push
call
push
push
mov
call
pushl
call
push
pop
pop
pop
ret
push
mov
push
xor
push
push
movl
movl
movl
mov
movl
mov
mov
call
mov
mov
mov
push
push
movl
movl
mov
movl
call
push
push
mov
call
push
mov
call
pop
pop
ret
push
mov
sub
push
pushl
call
mov
movl
andb
mov
andb
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
pushl
movl
movl
movl
pushl
movl
call
add
test
jne
push
pop
jmp
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
push
lea
push
push
call
add
leave
ret
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
add
push
pushl
call
mov
mov
movzbl
mov
movzbl
sub
test
je
mov
add
mov
push
push
push
pushl
call
mov
sub
mov
add
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
movl
mov
sub
test
je
call
call
call
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
push
call
mov
add
mov
jmp
jmp
push
pushl
call
mov
pushl
pushl
pushl
push
push
call
add
pushl
call
cmpl
jb
mov
leave
ret
pop
add
add
add
add
dec
jae
and
inc
dec
add
je
and
add
inc
add
add
int3
pop
add
add
add
js
mov
lods
add
insb
add
add
add
sbb
sbb
add
add
add
add
add
and
popa
das
push
dec
push
inc
outsb
imul
push
cld
add
sti
jecxz
jne
leave
in
js
mov
maxps
push
lea
movl
leave
or
je
call
push
leave
in
fmull
or
dec
or
adcb
sbb
add
lea
cltd
push
call
mov
loopne
mov
mov
add
xor
push
loopne
add
inc
or
add
je
push
pop
dec
je
push
mov
mov
decl
add
lea
fdivrp
loopne
add
mov
or
inc
test
clc
add
loopne
add
add
pop
add
add
add
pop
sbb
sbb
sbb
outsb
add
add
add
add
add
movsl
jae
gs
add
imul
lds
add
outsb
je
inc
fs
dec
add
dec
gs
je
call
add
jns
iret
jne
outsb
jae
inc
push
add
inc
xor
jb
imul
cmpsb
add
cld
add
add
add
add
insb
add
add
add
inc
add
faddl
add
add
push
das
je
adc
shll
jae
cmp
adc
push
icebp
mov
dec
pushf
mov
jecxz
jae
test
or
dec
out
and
mov
scas
cmp
cs
pop
sub
or
cmp
push
outsl
fimuls
jnp
sub
cmp
sahf
out
xor
aam
movsb
add
sahf
jb
rcrl
sub
icebp
movsb
lret
xchg
mov
scas
ss
lock
out
ror
mov
push
filds
inc
sbb
mov
push
adc
dec
push
jl
aam
sbb
aad
push
jge
je
aas
cmpsl
adc
cmp
adc
cmp
loopne
gs
ljmp
stc
mov
xchg
mov
pop
pop
filds
test
out
subl
push
push
rclb
ja
adc
cwtl
popf
sub
pop
fwait
xchg
cmp
cli
jbe,pt
add
stos
cmc
stos
mov
mov
rorl
sti
mov
mov
aaa
sub
adc
fisttpl
dec
jg
push
dec
ja
mov
pop
pop
mov
mov
push
jnp
sbb
pop
fisubrs
add
xchg
cmp
adc
mov
jle
push
cs
push
bnd
mov
or
ffree
inc
out
stos
or
arpl
mov
je
outsl
push
jp
sahf
jle
or
insb
pop
movsl
mov
rcll
pop
movsl
add
iret
xchg
sub
xor
cli
ja
jb
js
and
or
pop
std
or
sbbl
stos
std
cmc
ds
iret
das
lret
jg
addr16
and
fyl2x
outsl
in
push
aas
popf
push
sahf
mov
cmp
dec
fnstcw
stos
inc
adc
cli
jns
pop
adc
or
and
mov
dec
aaa
jg
aad
push
fcmovnb
xchg
mov
rorl
xchg
jns
and
aad
jle
mov
and
adc
add
out
inc
lea
leave
jge
iret
popa
cmpb
daa
jbe
dec
neg
push
rcrb
cltd
rcll
cmp
mov
addr16
push
les
nop
call
cwtl
pop
add
xor
repnz
fidivs
movsl
sub
xor
jp
adc
test
xchg
lret
sbb
pushf
outsl
inc
sbb
adc
call
js
outsb
add
cmp
mov
xor
push
pusha
push
cmpsb
add
das
mov
inc
lods
ja
fs
stc
aam
aaa
inc
push
lea
pop
jmp
push
mov
add
mov
icebp
lea
cmpsl
pop
add
test
pop
mov
jmp
xlat
fstpt
loope
jmp
rcll
mov
mov
mov
sbb
mov
test
add
jno
sub
pop
loop
dec
add
rcl
xor
mov
pop
out
cs
insb
jae
dec
loop
mov
rcrb
orb
jge
mov
dec
mov
mov
clc
mov
imul
insb
sbb
xchg
cmp
mov
ja
adc
subb
add
xor
les
loope
sbb
mov
cli
cmp
ret
bswap
std
add
sub
lds
sub
xor
push
dec
scas
push
fistps
jl
jno
inc
xor
push
cltd
dec
xchg
inc
out
sbb
stos
loopne
cmp
cmovne
not
loopne
mov
in
mov
imul
cmp
pop
jbe
daa
je
out
mov
arpl
mov
inc
insl
aas
ljmp
sub
repz
out
lds
pushf
adc
sbb
movsl
aaa
imulb
repnz
mov
lcall
cmp
cld
popf
mov
mov
dec
std
mov
out
out
cmp
loop
mov
lea
iret
mov
nop
push
xchg
cmpsl
mov
sbb
pop
mov
sbb
loop
cmp
xlat
and
jns
mov
lcall
ret
mov
jl
arpl
xchg
push
cwtl
cli
les
fwait
push
sub
clc
in
mov
sarb
push
es
xchg
call
into
pop
outsb
xor
notl
ret
fdivp
mov
sahf
xchg
push
xchg
lcall
out
mov
ret
xlat
fadds
pushl
loop
fcompl
push
xchg
mov
insb
sbb
push
std
into
rclb
pusha
das
in
inc
sub
loopne
lea
or
mov
xchg
mov
das
test
mov
and
mov
pusha
lods
int3
andb
imul
inc
popf
pop
add
mov
cld
xor
sbb
addr16
pop
data16
jge
jge
xchg
scas
and
test
test
mov
xlat
pop
xlat
loop
repz
or
cmpsl
shr
pushf
in
jmp
fwait
mov
dec
nop
add
pop
out
shl
jp
inc
mov
push
call
dec
loop
out
mov
cmp
jecxz
mov
add
jnp
jnp
outsb
fmull
mov
mov
dec
orl
test
mov
xor
ljmp
cmp
push
pop
fmul
sub
not
and
mov
cmc
hlt
stc
push
mov
cltd
rcl
inc
sub
adc
dec
leave
psrld
lods
xor
xorb
cmpsb
fsubr
aas
cmp
mov
and
bound
cwtd
pop
or
movsl
insb
stos
and
push
jne
lods
xchg
pop
pusha
cmp
cmc
cmp
imul
enter
insl
inc
test
aad
adc
cmp
lods
dec
test
frstor
mov
mov
pop
cmpsl
into
test
dec
pop
jo
xchg
rorb
sub
jae
add
lret
xor
pop
pop
adc
inc
fldcw
pusha
push
mov
decb
dec
adc
xchg
pmulhuw
or
mov
sbb
mov
xor
int3
aaa
adc
outsb
or
pop
jg
mov
fiaddl
pushf
loope
jbe
das
sbb
mov
xchg
and
lods
mov
jae
add
ret
sti
adc
mov
ljmp
cmp
push
mov
js
push
or
in
mov
mov
scas
fwait
mov
imul
out
cmc
or
jle
loopne
in
test
mov
lcall
jb
sbb
mov
mov
nop
lds
push
stos
xchg
dec
add
sub
mov
mov
and
adc
mov
dec
sarb
mov
push
cmpsl
sub
das
daa
pop
addl
cmpb
xchg
pusha
dec
leave
xchg
dec
xchg
fidivl
xor
std
push
push
out
push
stc
aas
push
mov
cltd
mov
add
pop
inc
fsts
mov
popa
mov
push
push
mov
fmull
jbe
or
add
stc
je
aas
sbb
in
pop
cmpsb
adc
jo
jmp
outsl
inc
mov
push
movsl
scas
repnz
es
jno
add
fsubs
mov
inc
enter
xor
repz
cs
test
dec
pop
push
adc
mov
mov
neg
in
xchg
xchg
divl
andb
xor
jno
mov
add
jge
stos
mov
aaa
xchg
ret
cmp
mov
enter
int
jle
push
loope
and
xchg
jp
loop
sub
jle
or
cmp
sbb
pop
icebp
mov
inc
adc
mov
mov
shrb
daa
mov
dec
in
sub
gs
mov
call
and
dec
xor
mov
xchg
pop
push
rcll
sub
xchg
inc
outsl
xchg
xchg
scas
aad
jbe
lea
aad
out
bswap
add
sub
das
loop
fisttpll
gs
add
inc
jp
adc
popf
roll
push
dec
push
lea
es
jle
arpl
dec
in
daa
mov
cmp
arpl
mov
in
xor
gs
shr
insb
jecxz
cmp
mov
and
mov
jno
push
shlb
ret
cs
sbb
nop
clc
sub
shll
lret
mov
pop
loope
sbb
xlat
js
jns
and
lea
jge
addl
loopne
pop
add
mov
fnstcw
cmp
jg
inc
cmp
fidivrs
mov
sahf
mov
add
push
mov
in
inc
add
je
mov
stc
fildl
insl
xchg
and
pushf
in
sarl
pop
jg
mov
jle
cmp
sub
adc
jle
icebp
ljmp
lahf
mov
sbb
dec
test
pop
test
xchg
sbb
dec
stos
fidivs
jg
mov
sbb
lock
add
insb
inc
outsb
adc
stc
adc
inc
subb
push
add
in
add
fmul
ret
add
mov
lds
xchg
lahf
ret
sbb
mov
pop
ja
testl
sbb
cld
mov
imul
stc
gs
mov
mov
push
movsl
lcall
pop
addr16
insl
mov
cmpsl
pop
xchg
jp
rcl
jae
mov
sub
ja
ljmp
shlb
loop
sub
inc
jp
aaa
clc
and
sti
mov
fimuls
sbb
into
sbb
js
negl
inc
sbb
dec
in
dec
xchg
aam
mov
rcrl
xchg
xchg
jl
repz
scas
jo
aas
jae
jle
test
enter
test
icebp
pop
rcl
jg
sarl
data16
jg
mov
loop
xlat
shl
rcll
mov
push
insb
vcvtps2pd
mov
mov
jmp
sbb
mov
add
mov
jg
andl
inc
mov
aaa
addb
movsb
sub
mov
xor
scas
out
lods
repz
push
dec
daa
and
int
cmpsb
xor
mov
cmp
mov
sbb
lods
sti
pop
inc
adc
add
jmp
cli
pop
ljmp
pop
xor
insl
and
jnp
pop
mov
lods
and
mov
jnp
xorl
add
in
jmp
jne
mov
ja
andb
test
inc
sub
fs
ja
fs
push
movsb
jmp
mov
repnz
roll
out
jle
dec
xor
jno
dec
xchg
or
ret
insb
shr
jge
mov
out
fucomp
inc
adc
enter
push
jl
imul
cli
inc
or
ja
mov
fs
ss
std
lret
or
cs
std
or
inc
xor
pop
ss
xor
jno
mov
lods
sbb
mov
sub
rorl
xor
inc
xchg
jne
push
sahf
dec
jge
pushl
cltd
xlat
lods
lcall
adc
cmp
ja
cli
push
imul
imul
std
sub
jnp
int
shll
lret
stc
in
mov
test
fdivl
scas
outsl
inc
pop
rol
mov
jb
popf
pop
sub
mov
or
mov
aad
out
sub
fiadds
or
pop
xchg
dec
inc
imul
dec
push
pop
cmp
adc
xchg
and
andl
push
loope
mov
or
pusha
or
rcr
repz
xor
push
add
cmp
std
pusha
idiv
cmp
rorb
ret
icebp
or
movb
fs
cmpsl
movups
lcall
pop
mov
rcrb
rolb
dec
push
ljmp
sbb
xchg
call
add
ret
sbb
ret
dec
pop
jmp
inc
repz
scas
jbe
dec
cld
adc
fistps
aam
std
loop
rorl
cwtl
mov
inc
add
fimull
sti
xlat
pop
xchg
inc
scas
cmp
repnz
scas
add
adc
lcall
in
add
mov
pop
mov
repnz
addb
iret
imul
pop
cmp
mov
mov
xchg
cmp
test
addl
mov
repnz
lods
mov
bnd
jmp
imul
jae
addb
inc
xchg
jmp
test
adc
aas
mov
push
clc
insb
push
and
iret
rcll
std
xchg
std
cmp
cmp
jae
js
fiadds
jecxz
add
dec
pusha
popa
aaa
out
test
movsl
or
mov
in
cmp
jl
or
jae
stos
test
leave
divl
popa
xlat
add
icebp
cmp
mov
ss
jmp
aaa
sbb
or
inc
fnstenv
pop
mov
rolb
inc
sbb
insb
push
xchg
bound
repnz
jl
bound
push
xchg
sahf
dec
mov
add
and
pop
sahf
cmpsb
popf
hlt
je
push
mov
mov
aad
pop
loopne
or
sub
lret
insb
das
sub
leave
lcall
arpl
ficomps
mov
pop
or
and
push
or
int
and
add
jp
and
mov
adc
fwait
data16
idivb
loopne
sub
mov
stos
sarb
pop
sbb
scas
data16
push
imul
push
adc
or
stos
int
mov
daa
ds
test
mov
pop
push
iret
ss
into
lea
xor
inc
adc
je
bound
hlt
inc
sub
and
cmp
jne
pop
insb
cmpl
enter
mov
xor
cmp
jne
add
push
leave
sub
in
push
mov
nop
aaa
lret
cmc
adc
jle
ret
sub
bound
adc
xor
adc
dec
lahf
jnp
fdivrl
push
pop
mov
fstpl
xchg
adc
add
icebp
push
mov
xchg
push
add
shrl
adc
out
and
repnz
adc
mov
mov
jmp
jl
pop
and
cli
mov
aam
mov
xor
popf
push
or
sub
int3
push
jge
sbb
fs
mov
push
scas
lret
xorps
out
out
in
inc
and
push
pop
repnz
js
push
leave
fdivp
and
mov
sub
mov
int
insb
and
ret
clc
xchg
pop
sahf
js
cmpsb
daa
loope
outsb
jp
sub
push
mov
jge
inc
pop
insl
jbe
or
mov
push
xchg
scas
mov
inc
mov
pop
jmp
shl
gs
add
xor
mov
xchg
mov
inc
fadds
jae
mul
in
lcall
inc
push
lods
mov
call
sti
or
cmp
jae
pop
outsb
mov
sbb
cmpsl
add
fwait
mov
push
sub
jae
popa
sbb
out
ss
cmp
mov
cli
and
popf
sub
lock
mov
push
in
loope
mov
aas
or
sub
punpckhbw
mov
push
inc
aaa
mov
pop
cmp
sub
iret
add
pop
lret
iret
mov
mov
xchg
push
shlb
cmp
popa
mov
sbbl
mov
pop
pop
sbb
dec
mov
mov
rcr
inc
scas
xor
adc
testl
mov
or
lret
pushf
cmpsb
mov
andb
rcll
popf
push
fdivl
lock
scas
les
xor
adc
out
inc
push
cmp
lret
xchg
mov
jno
popf
and
add
and
jnp
popf
push
shll
cld
mov
sbb
incb
ret
cmp
jmp
xor
add
cwtl
xor
arpl
dec
adc
add
lock
lret
shlb
addb
aam
js
and
push
add
lods
jno
jo
das
aas
test
movsl
jbe
cmc
mov
push
push
push
jnp
int
lret
ret
cmp
jne
push
add
cmp
repnz
mov
jo
pop
test
fistl
and
cmp
lcall
inc
std
insb
pop
sbb
fldl
dec
xor
loopne
inc
stos
xchg
cmpsb
push
lods
movl
mov
pusha
lret
lcall
es
xor
push
push
jp
in
stos
cli
jo
test
lock
rolb
fs
mov
pop
push
jo
in
enter
mov
sub
popf
call
mulb
sbb
push
lea
mulb
or
imul
outsl
int
mov
or
push
das
mov
dec
cmp
sbb
cltd
xchg
les
lcall
bound
sbb
test
xchg
sub
into
xchg
and
cmp
in
inc
sub
or
dec
sbb
pop
dec
push
pop
pop
mov
sub
cmpsl
lret
push
mov
xchg
nop
and
clc
les
insl
loope
mov
lcall
add
and
data16
add
jmp
aas
jp
or
jg
jns
faddl
pop
ficoml
pop
mov
sub
jle
repnz
mov
popf
out
mov
push
sbb
jle
jg
adc
xor
push
ja
mov
subb
inc
xchg
and
icebp
jo
sub
xchg
push
in
mov
push
insl
ja
xor
sti
dec
xchg
dec
push
sahf
out
gs
scas
adc
into
gs
push
dec
mov
push
lret
xchg
ljmp
rolb
imul
arpl
push
or
push
inc
test
mov
dec
jle
cmpsb
cmp
jl
push
cmpsb
orl
pushf
mov
out
mov
push
ficomps
sbb
lds
fcom
mov
jl
lcall
cli
dec
aas
ret
xchg
out
shrb
psubsb
xchg
loop
call
fdiv
jo
jle
test
lret
pop
les
repnz
adc
out
lock
xor
insb
addr16
ljmp
and
test
das
mov
push
lahf
sbb
fsubrs
mov
adc
xchg
jo
loope
sub
ja
mov
mov
mov
outsl
cwtl
cld
pop
jg
jecxz
hlt
adc
add
add
insb
add
add
add
inc
add
faddl
add
add
add
add
dec
add
add
add
data16
cmp
add
add
add
add
add
add
lods
add
add
add
add
add
xor
xor
xor
ss
add
add
add
add
stos
stos
add
sti
ja
mov
fcos
nop
sbb
inc
add
add
mov
and
les
xchg
xor
add
add
out
add
add
add
cmp
cs
add
add
add
add
add
cmpsb
shufps
add
insb
add
or
xor
add
and
popa
gs
push
imul
dec
push
jg
mov
and
sti
pushl
roll
push
jmp
fcoms
push
add
incl
adc
jne
jne
cld
pop
decl
pop
testl
popa
lock
mov
mov
sbb
add
push
mov
sar
aam
fadds
add
and
sub
adc
xor
rolb
adc
call
lea
decl
jl
std
insb
std
adc
dec
add
add
push
loopne
lock
push
adc
clc
incl
decl
dec
enter
insl
call
push
jne
lea
push
add
nop
add
add
add
add
jg
add
add
add
cmp
out
add
out
xor
outsl
insb
push
dec
insb
inc
movsl
gs
inc
jne
inc
testl
iret
je
dec
outsl
insl
je
imul
dec
insb
gs
fs
add
xor
insl
jne
push
xor
jae
push
gs
jae
jae
loopne
insb
inc
dec
add
add
filds
add
add
add
add
dec
add
add
add
pushf
add
incl
add
add
add
out
jae
lahf
sbb
cmp
fisubs
loopne
jg
inc
dec
rclb
sti
xchg
sub
lock
or
dec
enter
mov
pop
movsb
mov
xor
and
cmpb
jecxz
out
xlat
and
xor
cmp
sub
dec
repnz
loope
adc
mov
adc
push
sub
rcl
push
xchg
test
and
xor
ret
es
dec
rcl
ljmp
adc
cmp
repz
mov
mov
xchg
push
mov
mov
mov
sub
xchg
or
lods
xchg
ret
mov
arpl
cmp
mov
push
mov
test
stos
dec
loop
pushf
or
sbb
push
pop
jns
cmpsb
xor
inc
popa
insb
lea
adc
leave
mov
add
mov
ss
push
mov
outsb
jbe
shrb
in
cmc
test
sbb
dec
cltd
jmp
out
stos
subb
std
jae
push
jbe
repz
hlt
insb
mov
mov
std
in
ret
jg
loopne
adc
or
mov
xchg
xor
mov
ljmp
mov
jge
xlat
push
sbb
std
out
dec
ror
lea
adc
inc
leave
and
cmp
arpl
xchg
rcl
cmp
pcmpeqb
xchg
outsl
rcll
xor
sarb
xor
add
es
rorl
into
push
fdivr
out
push
call
push
mull
mov
lock
inc
iret
js
mov
cmpsb
fucomip
das
pushf
cmp
lock
xlat
sub
loopne
xor
test
in
jnp
mov
xchg
cmpsb
lods
sti
in
cmp
in
inc
sti
push
sarb
xchg
xor
mov
dec
dec
or
push
scas
imul
shrb
mov
sub
fadd
arpl
dec
scas
xor
sbb
loopne
mov
in
lea
inc
stc
lea
stc
loopne
aad
iret
mov
and
lock
sbb
bound
jo
addr16
jbe
dec
pop
fwait
out
inc
sahf
push
fnstsw
arpl
dec
ficoml
add
cmp
les
xor
pop
cmp
and
imul
xchg
dec
imul
xchg
inc
stos
add
add
stos
cmpsl
jne
cmp
gs
sub
ds
icebp
rclb
fistpl
mov
ss
aaa
idivl
movsb
data16
xor
out
in
outsl
adc
xor
xchg
dec
faddl
inc
xor
sbb
inc
ss
popa
repz
jle
adc
cwtl
dec
outsl
fsubl
dec
loope
jb
testb
pop
addr16
pop
loope
dec
imul
sub
rclb
adc
push
mov
inc
aas
add
aaa
pop
or
lock
shlb
push
lods
out
out
cmpsb
mov
push
cmpsl
lock
sahf
jo
aas
jg
addb
pop
test
add
fsubs
add
popf
movsl
pop
pop
mov
xor
adc
sbb
xchg
iret
in
repnz
mov
inc
fistl
add
clc
fdiv
sbb
add
pushf
lea
popf
imul
mov
jle
xor
push
gs
mov
pop
or
jl
outsl
clc
sub
mov
dec
int3
mov
push
xchg
rol
out
or
push
inc
mov
aas
push
in
repz
add
inc
adc
sub
cmp
dec
pop
out
out
popf
rorl
dec
sbb
and
je
push
fwait
mov
sbbl
out
xchg
test
mov
jae
out
jge
pop
xchg
xchg
xlat
bound
or
xchg
stos
push
out
dec
xor
cld
or
into
mov
cvtdq2ps
xchg
push
adc
call
mov
shrb
push
sarl
adc
xchg
out
xor
imul
enter
ret
jl
dec
das
xlat
pop
inc
xor
notb
jbe
fmul
push
push
int3
pop
jb
dec
mov
sub
cmp
pop
enter
rolb
push
cmp
pop
sbb
xchg
adc
sarb
jmp
xorb
imul
hlt
xchg
adc
outsb
enter
sub
popa
adc
into
sub
test
jl
cwtl
lods
adc
cmp
jmp
orb
sti
orb
lea
aam
sub
rclb
inc
and
xchg
decb
xchg
ja
mov
mov
sub
push
fsubr
fnstsw
movsb
and
push
call
aad
and
sti
xchg
ljmp
imul
shrl
add
dec
std
lahf
stos
push
pop
mov
fcmovnb
nop
mov
inc
repz
mov
mov
mov
sbb
push
jg
imul
dec
mov
jp
les
int
fmuls
sbb
fwait
std
shrl
sbb
xchg
in
sub
ss
es
insl
push
xor
xor
jle
mov
push
shrl
sbb
cmp
test
sti
sbb
movsl
adc
lret
popa
out
lds
rcrl
je
adc
lret
xchg
fmulp
sbb
subb
repnz
xchg
dec
mov
rclb
ljmp
jae
cmp
rorl
jmp
lods
sahf
mov
imul
cwtl
lcall
jecxz
inc
divl
mov
dec
mov
cmpsb
mov
inc
lock
test
push
cmpsl
movsb
cmpsl
fmuls
scas
jle
inc
nop
data16
outsb
xor
pop
jbe
pushf
fmull
pop
fwait
outsl
dec
xchg
sub
cmp
push
dec
ljmp
mov
push
or
mov
xchg
add
adc
inc
cmp
jmp
pop
xchg
inc
neg
inc
pop
inc
aas
xchg
adc
dec
sub
mov
lea
adc
sub
fs
lret
sar
es
movsl
push
add
mov
scas
sbb
add
aas
loopne
inc
jne
pusha
mov
popl
adc
adc
or
ret
hlt
jbe
dec
scas
add
jbe
ss
xchg
xchg
mov
test
mov
add
imul
lret
push
mov
jae
jbe
pop
mov
pop
imul
dec
ss
adc
pop
mov
adc
mov
jns
jns
popf
test
or
pop
lcall
sub
scas
or
outsl
mov
shll
mov
mov
movsl
inc
negl
inc
or
fcmovu
sarl
leave
inc
repnz
rcpps
mov
lret
int3
int
test
es
mov
jne
loop
sub
hlt
jmp
add
add
dec
mov
and
int
mov
pop
fwait
adc
inc
or
addr16
sub
xchg
dec
mov
xchg
nop
loop
sbb
mov
pop
and
into
mov
lock
movsb
adc
es
into
cmpsb
xchg
sub
cmp
xchg
ja
add
dec
lahf
xor
dec
movb
mov
xchg
jmp
push
incl
jmp
and
push
into
pop
jbe
add
push
subb
sbb
push
pop
cmp
mov
or
jl
xor
test
inc
scas
ret
iret
adc
xor
mov
adc
push
xchg
mov
jmp
xchg
jb
push
xchg
jbe
in
cltd
outsl
add
ja
mov
adc
add
push
repnz
ds
xchg
nop
or
stos
mov
lret
test
push
pop
das
pop
cmp
mov
sub
insl
xchg
repz
and
rorb
add
add
push
sti
movsl
stos
mov
pusha
and
cs
mov
and
or
fiaddl
pop
flds
insb
test
cmp
dec
mov
pop
xchg
pop
add
shll
jecxz
and
outsl
daa
push
xor
jecxz
dec
mov
and
mov
push
dec
adc
mov
arpl
xchg
mov
sti
xor
iret
popf
pop
add
push
sub
stos
push
scas
das
sub
or
mov
push
scas
add
out
add
pushf
out
mov
incb
fsubrl
sbb
test
cmp
hlt
mov
dec
sub
lods
js
aad
sub
mov
sti
mov
adc
dec
hlt
shrl
scas
mov
lret
sub
mov
cltd
aad
test
imul
adc
addr16
pop
adc
pop
cmpl
mov
and
das
xchg
push
mov
add
movsl
xor
or
inc
push
std
insb
mov
fistpll
sbb
movsl
push
inc
ret
fcmovbe
xor
fwait
adc
mov
sub
cmp
mov
ds
repnz
sti
nop
mov
and
icebp
lods
imul
mov
lds
xor
inc
xchg
mov
xchg
dec
test
push
mov
and
cmpsl
insl
mov
or
inc
movsl
pop
ret
inc
mov
repz
adc
js
pop
dec
mov
cmp
lahf
mov
and
rolb
push
sub
mov
enter
push
sub
mov
dec
es
or
inc
enter
mov
ds
sub
test
or
shlb
pusha
ljmp
call
repnz
dec
jb
xor
mov
or
nop
mov
mov
adc
mov
xchg
jecxz
ljmp
cmp
fnstcw
mov
pop
clc
aam
mov
sub
jbe
pop
orl
cmpsl
test
je
pop
ficoms
sarl
fsubrs
fnstcw
in
add
adc
push
rclb
or
add
pop
dec
fs
pusha
mov
and
add
push
call
les
lahf
xlat
cmp
outsl
out
mov
push
mov
cmp
sbb
nop
scas
add
cmpsl
pushf
and
insl
sbb
out
sarb
and
sub
scas
mov
mov
jnp
jbe
outsb
int3
scas
call
lods
fdivrl
jno
jge
add
fistl
icebp
sub
sar
dec
xchg
or
hlt
jbe
jl
adc
adc
clc
loopne
stos
pop
sbb
fisubl
sbb
bound
in
dec
sub
gs
bound
sbb
loope
mov
push
cltd
dec
xor
loope
or
sbb
push
adc
mov
cmc
mov
pop
or
or
lds
xchg
mov
std
and
push
pop
push
insl
mov
mov
mov
ljmp
aam
repnz
shlb
pop
dec
loop
or
sti
mov
pop
insl
adc
inc
das
lods
adc
jo
les
jp
sahf
pusha
shll
scas
inc
inc
jecxz
push
sti
mov
icebp
mov
mull
imul
jo
stc
les
xor
add
xchg
jns
pusha
xor
jge
jbe
lret
xor
mov
daa
in
xchg
out
imul
adc
rolb
sbb
mov
mov
rorl
rclb
xchg
jp
mov
inc
idiv
cmp
lds
icebp
insb
sub
push
xchg
xchg
rcr
xchg
fcomps
pop
out
aam
das
push
gs
lret
scas
aas
xor
xchg
faddp
or
jl
adc
add
push
add
stos
mov
pop
movsl
sbb
fisttpll
cli
inc
aad
push
jg
cmp
and
in
mov
fstps
es
xchg
or
outsb
fsubs
fisttpl
push
repnz
xor
dec
sbb
xor
test
out
movhps
cltd
addb
and
lret
in
sbb
jmp
and
iret
xor
add
mov
mov
inc
int3
add
frstor
adc
sbb
adc
aaa
and
loop
adc
daa
pop
cmp
repnz
loop
cli
xor
lcall
jb
lcall
push
adc
sub
jb
push
orl
xor
pop
or
jp
mov
dec
insl
outsb
lods
adc
pushf
cmpsl
cmpl
std
jbe
cmp
cli
fs
pop
scas
add
pop
loopne
rorb
call
negl
mov
gs
lea
repnz
xchg
fwait
mov
or
mov
lea
test
mov
les
addr16
and
loop
mov
lret
fs
stc
pushf
cmc
sbbl
xchg
pushf
cmpsb
fisubs
pop
out
ret
push
xlat
daa
clc
insb
push
inc
xlat
insl
add
mov
dec
dec
jae
mov
xchg
hlt
outsl
cmc
or
jnp
sbb
or
mov
push
stc
lret
and
sub
stc
dec
out
data16
daa
sub
sbb
enter
js
nop
jne
les
cmp
in
insl
mov
dec
xchg
xor
cli
jl
push
and
jns
or
idiv
mov
inc
push
out
aad
jge
sub
mov
pop
adc
xor
out
pusha
jae
test
jg
pusha
cmp
cmpsb
stos
test
aaa
sti
pop
adc
xchg
mov
or
out
xor
das
mov
jb
pop
popa
in
add
outsl
sbb
pop
or
xchg
es
test
scas
out
popf
test
out
jns
stos
mov
mov
movsl
cmpsl
insb
sub
test
aas
daa
lret
dec
std
inc
data16
cmpsb
add
mov
cltd
aaa
test
outsb
cmpsb
pop
mov
sbb
ja
in
cmp
inc
in
popf
mov
push
fsubp
push
pop
cvtps2pd
aam
lock
repz
mov
in
push
test
cmp
lahf
push
sub
mov
das
push
mov
mov
or
lds
mov
fisubrl
pushl
add
dec
sub
addl
imul
sub
fs
in
fisubrl
pop
fstl
jns
daa
sbb
mov
xor
pop
sub
push
jl
cld
xor
aaa
add
jle
push
mov
in
in
filds
insb
push
dec
out
das
rcl
jmp
test
nop
mov
inc
pop
rcl
or
mov
mov
mov
arpl
dec
xor
jae
movsl
les
add
mov
repz
repz
arpl
xor
dec
adc
divb
cli
in
mov
test
push
mov
test
scas
aas
imul
int
jp
sar
xor
and
aad
inc
and
sub
sub
adc
add
and
not
sbb
mov
idivl
dec
das
or
data16
pop
cmp
xor
cld
int
xchg
in
pop
add
and
sbb
outsb
push
popf
sbbb
pusha
loope
stos
imul
adc
mov
rcrl
dec
mov
icebp
lahf
cltd
xchg
inc
xchg
mov
add
daa
cwtl
imul
cwtl
rorb
mov
sub
stos
popa
pop
inc
ret
lds
sub
or
jno
enter
mov
clc
stos
mov
lret
ds
pop
cwtl
fmull
shl
cld
mov
loope
mov
aam
loopne
insb
cmp
stos
lods
call
loop
inc
jmp
popa
mov
mov
sbb
sbb
xor
jp
jnp
or
iret
adc
jo
mov
mov
sbb
das
out
sub
xlat
jmp
inc
fldl
push
dec
add
andb
xchg
insb
dec
dec
cmp
movsl
rcr
dec
insb
sub
inc
fisubrl
std
subb
pusha
lcall
shlb
lcall
mov
rorb
jb
in
scas
rcrl
jns
push
shrb
push
mov
and
iret
xorb
movsl
sbb
sti
mov
bound
xlat
and
sbb
mov
lock
push
jle
fcoms
dec
cld
pop
sbb
gs
dec
lcall
add
out
push
xor
sti
adc
sub
and
loope,pt
mov
popa
push
cmp
movsl
lds
pop
in
and
fists
mov
fstl
and
clc
test
outsb
bound
icebp
sub
jg
sub
add
mov
xor
mov
mov
jmp
cmpl
popf
sahf
mov
xor
loop
fwait
lret
repz
push
xchg
std
lock
ret
aaa
mov
roll
xchg
addr16
xor
and
les
test
loope
push
addb
in
add
lods
int
inc
inc
fnstcw
push
test
lcall
inc
in
and
in
push
inc
cmp
mov
mov
push
sbb
addb
cld
ficomps
icebp
push
repz
ret
and
sbb
data16
lods
jo
pop
stc
cwtl
repz
in
insl
sub
push
sbb
sbb
pusha
lret
cmp
jb
int
mov
jecxz
rorb
movsl
xlat
mov
mov
jo
add
scas
cs
mov
das
sbb
iret
shlb
mov
pop
popf
lea
shl
insl
je
icebp
lods
dec
add
movsb
inc
or
cwtl
cmp
data16
cmp
pop
dec
sbb
lcall
pop
push
cld
add
test
cmp
xchg
mov
sbb
mov
mov
pop
fmull
insl
lds
mov
rcr
inc
or
inc
aam
popa
cmp
jge
test
loope
setae
scas
mov
repnz
push
push
jp
shll
sarb
and
lods
mov
cmp
lods
ja
into
lahf
addr16
sbb
or
fnstcw
jae
js
fst
notb
rcr
and
int3
xchg
sti
or
icebp
ret
pop
in
jnp
xchg
mov
sub
arpl
lret
repnz
scas
xor
xchg
dec
enter
mov
mov
sub
pop
mov
jne
mov
or
loope
mov
fisubrs
mov
fisttpl
inc
sahf
enter
inc
out
test
imul
inc
mov
pop
into
orb
call
push
fistps
stos
sub
dec
imul
test
jl
push
gs
out
inc
fidivrs
test
mov
xchg
cmp
push
lds
in
mov
into
shll
jecxz
push
pop
jecxz
lock
xchg
cmc
dec
popl
fldcw
imul
subb
shll
add
add
add
dec
add
add
add
pushf
add
incl
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
or
fadds
add
or
in
in
in
in
inc
add
add
add
add
add
ja
mov
test
js
add
add
add
add
add
add
add
add
adc
add
add
add
add
dec
add
add
add
loop
push
add
add
add
add
fsubs
add
add
addb
add
add
add
sub
clc
add
add
gs
outsb
and
pop
ja
jae
inc
dec
and
push
ja
mov
add
xor
test
jne
pushl
les
mov
sub
std
adc
jmp
test
rcrl
mov
adc
add
jno
xchg
cmp
inc
add
add
push
xor
decl
int3
inc
lea
jge
push
push
add
add
or
loopne
cld
push
call
incl
adc
sarb
inc
or
inc
dec
dec
add
call
int
add
repz
add
push
push
add
mov
clc
mov
std
clc
add
jne
call
adc
push
inc
add
pushl
add
insl
add
insb
add
add
add
add
add
push
add
fs
jb
jbe
inc
inc
outsb
or
inc
jne
adc
je
jo
sbb
popa
jo
leave
outsb
inc
je
inc
gs
insb
mov
lret
arpl
popa
push
cmp
jb
insb
push
jae
gs
jne
inc
push
jb
xor
gs
js
xor
add
add
or
add
and
add
add
add
add
add
in
add
add
add
inc
add
add
add
add
sub
cmc
and
nop
mov
cmp
dec
loopne
inc
inc
xor
cmp
cmp
stos
out
and
dec
sbb
inc
lods
rorb
and
dec
dec
stos
jle
cld
xchg
add
pop
cmp
xchg
in
mov
dec
pop
inc
ret
lds
daa
push
mov
into
scas
mov
in
sbb
fnstenv
pushf
or
lret
mov
push
sti
sub
test
add
mov
jno
shll
jmp
mov
push
sbb
push
stos
inc
ds
cmpsl
bound
xor
imul
imul
mov
adc
dec
scas
jae,pt
addl
fnstenv
xchg
sbb
test
sahf
and
sbb
dec
push
cmp
mov
stos
xor
jge
les
sub
scas
mov
push
fldt
stos
fcoms
mov
pop
gs
xchg
push
in
cs
adc
lret
ss
lret
cmp
mov
cltd
mov
cltd
bound
stos
cli
insb
sub
loopne
jne
lret
arpl
cmp
mov
and
imulb
repz
jb
mov
popf
rclb
adc
mov
cmp
cld
mov
ljmp
pop
rcl
loopne
cmp
mov
pop
neg
repnz
pop
mov
das
notb
cmp
mov
lds
xchg
push
dec
enter
xchg
xlat
jnp
jl
jecxz
xchg
mov
xor
xor
lock
pmullw
sub
imull
popa
insl
sbb
popf
pop
add
inc
push
jno
xchg
scas
xor
jge
inc
ret
popa
test
mov
cmp
adc
stos
sbb
xor
ror
das
cmp
out
insl
jmp
jbe
out
roll
sti
sti
je
xchg
xor
add
iret
sbb
cmp
ljmp
mov
pop
pop
fldt
outsb
add
push
pop
gs
lods
jl
pop
rcll
and
mov
or
daa
jo
bound
repnz
mov
sub
lods
jmp
cld
ret
xlat
mov
xchg
or
sub
adcl
or
nop
adc
xor
push
xor
mov
mov
xchg
scas
mov
hlt
jl
mov
xor
or
push
lds
lret
jecxz
in
and
add
inc
lret
and
das
insl
mov
jno
cltd
in
fcoml
push
sub
es
inc
inc
sbb
or
movsb
loope
push
and
push
in
imulb
lock
stos
cmp
int3
mov
rclb
repnz
push
cmpsl
fdivrs
jae
xchg
mov
sbb
sbb
shlb
add
pushf
pop
mov
push
fbstp
pop
xchg
repz
jns
or
xchg
test
cmpb
ja
and
dec
loop
pop
aaa
mov
sub
pop
outsl
rol
fnsave
inc
or
push
or
fisttpl
std
in
das
pop
pop
jnp
xchg
aad
in
scas
add
call
int
push
fnstenv
cmp
lock
mov
mov
push
xlat
hlt
mov
or
fstp
outsl
aaa
in
add
sbb
fbld
cs
mov
dec
adc
fstpl
js
sbb
icebp
xor
jae
pop
jno
ret
cmp
je
jle
loope
add
pop
mov
xor
shrl
lock
movb
mov
dec
push
ret
mov
lret
fsubr
mov
jmp
and
xchg
dec
mov
xrelease
jo
jg
cld
outsl
loop
mov
push
xchg
mov
lret
pop
cld
inc
repnz
push
iret
jle
dec
dec
pop
adc
test
inc
and
cmc
subb
mov
sub
imul
and
add
pop
mov
sti
and
stc
shl
mov
fdivrl
mov
mov
rcrl
cld
mov
mov
jae
cmp
in
jle
mov
and
or
loopne
sbb
inc
out
pop
sub
rorb
ret
cmp
jmp
pop
arpl
add
ja
mov
add
scas
dec
add
bound
stos
mov
int
out
and
popf
push
sbb
jecxz
fbld
or
ss
fcom
mov
push
inc
push
sti
sti
xchg
dec
xlat
in
jmp
pushf
lahf
dec
and
aas
mov
mov
push
aas
adc
mov
inc
add
js
mov
fldcw
imul
stos
fwait
js
push
decb
sbb
and
xchg
xchg
ljmp
xchg
mov
mov
pop
push
addr16
lahf
sarl
mov
ja
ljmp
gs
sub
mov
xchg
add
lods
xchg
in
aaa
xor
lahf
mov
addr16
inc
mov
sub
cmp
insb
or
mov
lock
lret
mov
mov
xchg
sub
iret
loope
rorb
loope
aad
ficompl
lret
mov
push
mov
push
add
aaa
and
call
or
out
xor
adc
out
mov
pop
test
dec
pop
xchg
dec
andl
sbb
int
xchg
xchg
int
insl
test
bound
add
cwtl
push
imul
pusha
orb
cwtl
nop
inc
dec
int3
inc
jmp
xchg
sbb
mov
xchg
adc
loop
lods
push
dec
fs
push
iret
cmp
clc
xchg
mov
jge
loopne
xchg
pop
fldl
scas
xorl
jne
push
aam
cmp
dec
push
push
inc
or
call
pop
mov
gs
ljmp
popf
mov
add
mov
mov
es
das
mov
adc
sub
imul
mov
jne
loop
jns
leave
pushf
pop
adcl
sbb
mov
mov
cmpsl
mov
nop
inc
call
lock
arpl
in
sub
sub
daa
mov
test
jecxz
call
push
and
push
ds
mov
jnp
pop
cmpsb
xor
push
scas
sub
lods
push
icebp
scas
add
cli
jmp
fstps
cmp
addr16
pop
insl
sbb
sbb
pop
aas
leave
dec
jecxz
subb
mulb
cmp
fsub
add
aaa
mov
and
mov
jb
push
add
sti
out
fsubl
mov
jno
pop
push
mov
xchg
add
and
mov
push
push
dec
into
mov
mov
lret
imul
inc
jle
inc
enter
subb
out
sbbl
clc
and
stos
or
outsb
in
pop
push
pop
or
pop
mov
inc
mov
xchg
and
lret
sbb
pusha
inc
and
lds
movsl
inc
mov
mov
pop
movsl
cmp
ret
push
pop
or
lret
adc
mov
dec
hlt
pushf
mov
out
ljmp
mov
mov
xchg
divb
jp
push
pop
pushf
cmp
push
push
loope
in
imul
ret
dec
out
sub
mov
add
push
mov
push
leave
cmp
out
std
stos
lret
push
imul
sub
icebp
fwait
lods
mov
jae
outsb
sarl
rcll
push
inc
lret
jno
dec
add
aad
jbe
out
psadbw
fisttps
into
daa
rorb
int
decb
andb
pusha
mov
cltd
mov
imul
inc
mov
sti
pop
push
xorl
push
popf
test
pushl
movsl
repnz
sub
sbb
mov
mov
movsl
adc
pop
mov
push
pop
in
call
pop
popf
outsb
jecxz
clc
loopne
mov
push
dec
sub
mov
lret
cmp
pop
push
lds
mov
push
adc
iret
xor
addr16
cltd
cltd
lods
mov
insb
push
mov
mov
inc
jmp
dec
fcom
addl
hlt
call
fiaddl
sahf
and
adc
test
loope
jne
and
mov
daa
or
fwait
xor
mov
scas
xor
mov
jae
cmp
xchg
mov
pusha
sub
jl
jae
dec
and
and
cmovle
hlt
fiaddl
lock
cmp
stc
jmp
mov
or
lret
enter
and
jg
int
jp
shll
jecxz
pop
xor
pop
xor
xchg
aas
aas
rcll
pop
aaa
jle
insl
mov
mov
mov
or
dec
add
mov
mov
loope
inc
xor
xchg
jle
adc
sub
in
int
insl
movl
aam
xor
inc
sub
jecxz
lods
insl
lahf
push
ljmp
push
insb
fisttps
mov
cmp
movsb
and
adc
mov
jl
add
cmpsl
jmp
push
sbb
fdivs
enter
jne
test
add
cmp
imul
cli
cmpsl
les
outsl
mov
xchg
repz
enter
mov
or
push
jg
jae
test
mov
ss
push
in
xchg
xor
andb
fsubs
push
lds
fldl
mov
cmpsb
push
mov
insb
jne
test
mov
jnp
or
push
in
adc
pusha
ds
sbb
pop
arpl
enter
cmp
stos
in
out
push
sbb
iret
mov
lret
sbb
sbb
js
loopne
xor
mov
mov
enter
lret
push
scas
push
inc
or
pushf
mov
add
push
pusha
por
pop
cltd
cmc
in
and
or
mov
stos
push
push
out
xchg
inc
and
and
out
std
pop
lea
adc
adc
pop
pushf
cwtl
sbb
push
mov
add
das
mov
add
sbb
mov
sub
movsb
orb
and
inc
xchg
fisttps
mov
fistps
jp
cltd
jb
sbb
mov
xchg
test
push
mov
out
xchg
and
pushl
add
xchg
mov
xchg
in
aam
inc
add
shr
inc
sbb
jle
pop
je
int
cwtl
loop
ds
inc
pop
rol
movsl
shll
test
call
xor
jno
cmovne
ljmp
clc
fldcw
xchg
xchg
fdivrl
lock
fisubrs
ja
mov
pop
ds
jnp
test
addb
lret
xor
das
sbb
jno
not
mov
sbb
mov
mov
mov
std
fldl
sbb
inc
sbb
or
mov
out
cli
shr
insb
push
cwtl
flds
lret
test
es
and
rol
imul
shrl
clc
and
fcomp
and
dec
in
aaa
sub
aas
mov
scas
cmp
inc
int
xchg
jmp
pop
insb
mov
lock
dec
mov
call
cmpsl
outsl
mov
adc
test
jge
xor
in
fiaddl
arpl
shl
sub
loop
jo
mov
outsl
pop
and
or
xorl
jns
ret
jmp
lds
inc
arpl
add
lret
inc
xor
lret
clc
xchg
pop
xchg
pop
sbb
and
cmpsl
pusha
adc
adc
dec
xor
jl
sbb
push
adc
fucomp
stc
loop
push
aas
xchg
jbe
inc
xor
ds
enter
fwait
xchg
mov
es
or
mov
sub
lods
ja
rol
lock
mov
xor
outsl
out
and
orb
pop
add
push
stos
loopne
mov
dec
adc
dec
fidivrl
andl
lret
push
subb
fiaddl
rol
in
jo
xchg
aad
lahf
test
mov
push
ja
pop
mov
shlb
std
cmp
inc
mov
das
sti
mov
jnp
push
fcmovbe
movsb
sbb
push
mov
fs
dec
scas
mov
popf
test
or
xchg
dec
adc
scas
push
jbe
mov
jne
popa
push
ljmp
xchg
imul
cmp
xchg
fildl
xorb
mov
cld
out
aam
arpl
inc
mov
nop
mov
or
inc
sub
xchg
mov
inc
xchg
pop
dec
mov
dec
cmp
xchg
mov
fmuls
test
cltd
push
cmpsl
inc
dec
dec
enter
inc
shl
js
mov
adc
sar
aad
lret
cmp
or
jb
inc
adc
lret
cmp
mov
cltd
mov
stos
rcll
loop
mov
daa
jns
icebp
test
repnz
adc
in
test
mov
pop
fistl
add
mov
sbb
nop
repz
fdivs
add
sub
shlb
xor
xchg
add
mov
into
aam
sbb
pop
cmpb
lds
negl
and
sahf
xor
cli
inc
adc
push
or
es
stc
ljmp
jp
push
pusha
das
sbb
jne
lahf
mov
out
or
lea
jo
out
lea
adc
or
gs
inc
mov
adc
xchg
test
jmp
das
movsl
in
popf
cltd
jmp
push
sbb
int
popf
mov
jns
cmp
jb
sub
pop
cmp
xchg
and
cmpps
add
jae
cltd
xchg
dec
out
dec
inc
lret
imul
mov
pop
stos
add
mov
lret
mov
push
lcall
mov
sti
xchg
push
out
jecxz
mov
fnstenv
movsl
int
fs
push
enter
add
out
mov
loop
inc
mov
mov
lahf
jo
jge
jb
lcall
shl
jge
orb
add
inc
mov
and
subb
adc
or
rcl
lods
mov
loope
lods
fchs
ss
fwait
test
mov
je
add
dec
jp
je
or
add
je
xor
aam
cmp
sahf
ret
and
dec
adcl
add
cmp
push
scas
movsl
dec
pop
jns
nop
inc
cmp
mov
daa
loop
cli
sub
cld
jne
cmp
pop
pop
jb
jecxz
fcmovbe
lahf
js
or
pushf
out
add
mov
iret
je
fmuls
push
mov
xor
addr16
hlt
lea
inc
jge
or
dec
jg
xchg
aaa
xor
lret
pop
mov
shrb
std
lods
sbb
and
in
mov
imul
fs
ja
movsl
roll
jle
arpl
sub
imul
out
and
ret
mov
test
dec
bsr
adc
fwait
cli
sbb
je
adc
inc
in
setge
pop
inc
call
cmp
xchg
std
push
test
roll
lds
cmp
dec
lahf
loope
jge
sbb
push
add
jl
mov
mov
nop
out
cld
bnd
cmp
out
bound
push
inc
inc
adc
fiaddl
inc
lcall
pop
pop
sub
ret
test
int
mov
les
mov
rcl
rolb
daa
push
aaa
xchg
mov
mov
fimuls
fdiv
mov
fidivrl
push
push
dec
inc
jp
sahf
push
or
in
push
jbe
sub
add
and
aas
cmp
setb
pop
sub
and
faddl
data16
insb
icebp
cmp
xchg
and
and
out
inc
mov
movsl
jno
push
mov
mov
mov
mov
aaa
aad
lock
out
jbe
mov
cmp
sbb
leave
pop
movsl
lret
lods
addl
push
or
mov
xor
push
cmpsl
int
ljmp
fcoms
adc
loopne
adc
gs
cltd
pop
push
sub
repnz
bound
xlat
add
dec
subb
jl
push
xchg
stos
pop
cmp
in
std
mov
rorb
pop
mov
fiaddl
jmp
popf
stos
sub
xorb
cmp
add
sub
popa
mov
cmp
sbb
jns
or
stos
sbb
push
jle
loop
push
enter
mov
or
inc
sbb
push
jle
jmp
mov
js
xor
enter
adc
sub
jp
adc
iret
mov
movsl
fpatan
ds
je
adc
push
pop
mov
and
fwait
pusha
popa
xor
rcll
mov
cli
add
xorl
xchg
dec
push
pop
mov
aad
jmp
lds
je
roll
cmc
shrb
sbb
mov
jno
push
jnp
mov
loope
test
and
jbe
mov
outsl
add
call
mov
pop
push
shl
pushf
ret
mov
popf
fistps
outsb
cwtl
xlat
mov
dec
lcall
sti
mov
lock
rolb
sub
out
push
mov
jo
mov
leave
iret
inc
sbb
gs
shlb
jae
sarl
dec
pop
dec
aaa
in
insl
jo
scas
xchg
xor
adc
filds
mov
fs
or
and
jge
xor
in
xor
jg
sbb
cmp
rsqrtps
jnp
xchg
lret
mov
sbb
in
outsb
imul
push
imul
mov
movsl
sbb
ret
mov
xor
inc
mov
je
orb
loopne
fstpl
mov
inc
stos
mov
pop
mov
dec
add
ds
je
cmp
add
leave
mov
in
pop
loop
jmp
hlt
jmp
push
in
das
adc
popl
pushf
mov
xor
sbb
in
xchg
jle
mov
sub
loope
push
loope
mov
lds
push
cwtl
jg
int3
inc
aad
adc
lods
push
push
in
test
push
ljmp
loopw
push
mov
jge
add
movsb
mov
addr16
aad
jmp
shll
inc
cmpsb
mov
lock
sti
cltd
xor
les
aas
mov
out
and
popa
addr16
ret
cmp
add
adc
movsb
out
jg
mov
inc
iret
push
das
test
out
mov
movsb
jle
mov
sbb
and
fs
addb
add
push
pop
dec
lahf
jmp
mov
and
add
rolb
add
add
add
add
inc
add
pop
add
add
add
repnz
int
add
add
add
add
add
adc
add
add
add
push
add
add
add
add
sbb
sbb
scas
add
add
add
sbb
ljmp
ja
mov
pushl
je
arpl
add
push
or
add
add
add
add
jae
add
add
add
add
ret
add
add
add
pusha
add
rolb
add
inc
push
aam
add
add
add
add
test
add
add
popa
outsl
outsl
jne
outsb
add
xlat
pop
add
push
leave
mov
add
sahf
iret
or
movl
dec
push
mov
incl
std
aam
call
decl
push
push
lea
mov
jne
mov
pop
in
add
push
mov
rol
push
add
incl
mov
adc
add
daa
add
decl
ljmp
ljmp
incl
loopne
jmp
test
lcall
add
call
jge
push
adc
enter
std
xchg
incl
mov
ret
lea
jne
add
adc
add
movl
add
add
add
jecxz
add
add
add
add
add
add
add
jae
add
add
outsl
je
imul
add
gs
sub
inc
add
jae
add
add
insb
cmpsb
add
fs
push
add
push
jne
popa
add
inc
outsb
imul
gs
mov
outsl
push
add
add
add
add
add
add
add
add
add
add
xchg
arpl
add
add
add
add
and
inc
dec
jp
scas
ror
push
sub
fisubl
mov
outsb
aaa
sahf
adc
cmp
cs
and
dec
enter
inc
mov
xor
cmp
fadd
mov
popa
xor
mov
mov
or
inc
das
jno
push
xchg
int
push
pushf
xchg
fcmovnbe
mov
lahf
push
or
push
loop
sbb
pushf
cwtl
in
pusha
andb
add
adc
jg
popf
les
dec
out
jno
mov
dec
fwait
sbb
std
pop
gs
sti
leave
sbb
rorb
xchg
lretw
jae
shrb
push
jnp
ja
or
jno
sub
fstpl
push
fwait
gs
fstpl
out
pop
sub
jle
pop
stc
mov
into
push
inc
orl
inc
sbb
add
mov
addr16
pusha
rcll
inc
pop
xor
adc
jbe
adc
xlat
inc
out
pushl
enter
fcompl
movsl
fwait
cwtl
fs
or
pop
cld
mov
xor
inc
xchg
fbstp
scas
mov
test
push
imul
lcall
and
out
nop
pop
and
mov
push
pop
in
bound
orl
insl
movsl
mov
inc
cs
xchg
cmp
sub
je
push
ljmp
sub
out
cmp
scas
subb
jno
xchg
das
std
stos
hlt
pop
jmp
or
mov
aaa
sbb
enter
add
sbb
sbb
in
xchg
mov
add
or
sub
mov
cmp
push
arpl
or
mov
sub
xchg
mov
out
cltd
inc
cli
mov
cmp
cmpsl
fbld
movsb
das
and
mov
jg
outsl
aas
xor
jecxz
xor
push
movsl
cmc
orl
jae
loop
pop
and
repnz
dec
pop
mov
mov
lds
test
push
popa
adc
fimuls
adc
inc
leave
in
popa
into
jno
inc
jmp
add
std
mov
std
inc
mov
add
push
add
subl
imul
int
mov
xor
inc
hlt
test
xchg
jp
jb
lret
pushf
aas
icebp
mov
decl
push
ret
aam
cmp
or
mov
cmp
icebp
test
enter
xor
aas
enter
cmpsl
inc
mov
or
mov
repnz
mov
pop
loopne
cmpb
mov
push
adc
test
movsb
movsb
stos
adc
or
xor
out
jp
sbb
jbe
test
cmp
addr16
pop
outsl
in
inc
inc
fistpl
push
pop
cmp
and
outsb
sub
hlt
push
das
jo
fstps
fs
inc
sbb
sbb
out
dec
sub
jnp
ljmp
sbb
fstps
int
add
adc
sub
sbb
add
sbb
in
cli
mov
inc
cmpsb
decb
cmpb
xor
and
shrl
push
pop
mov
xor
inc
scas
push
rorb
fdivrl
daa
push
out
adc
shrb
divl
das
jle
cld
mov
dec
or
jno
ret
jno,pn
shl
sti
shrb
mov
push
push
or
scas
rorl
adc
in
dec
and
and
mov
jmp
adc
push
rorl
ficoml
xchg
xchg
nop
sub
or
dec
sbb
cld
ds
sub
sti
hlt
jecxz
add
fucomi
imul
add
mov
mov
mov
pop
and
loop
jmp
jg
push
push
pop
mov
in
test
inc
sub
mov
iret
test
xchg
xor
movsb
push
nop
inc
push
and
xor
aad
hlt
and
adc
sbb
repnz
fdivl
jnp
shlb
dec
dec
inc
mov
sub
and
inc
xchg
es
sub
add
adc
and
gs
cmp
dec
dec
pusha
inc
push
mov
rclb
out
scas
adc
movsl
adc
cmp
stc
jne
jmp
xchg
and
xor
and
aaa
bnd
fwait
mov
stos
mov
enter
ds
xchg
rorb
ret
mov
push
mov
inc
into
adc
popf
and
mov
aas
mov
lods
mov
dec
xchg
jle
sbb
ss
sub
add
movsb
xchg
sub
push
ljmp
sub
cmp
and
and
pop
adc
aam
push
or
in
jns
xor
adc
bound
inc
pop
xlat
in
add
shr
dec
shlb
int3
je
int3
rcll
stc
and
int
mov
fs
mov
jg
mov
mov
sbb
mov
jae
fdivrs
xchg
sbb
sub
mov
cmp
push
push
cwtl
mov
sbbb
aam
call
lret
xor
mov
lods
xor
ret
xchg
imul
xchg
and
rorb
test
xchg
std
fsubrl
sub
or
jle
incb
adc
addr16
insl
lea
jecxz
push
mov
xchg
xor
adc
leave
sub
add
loope
mov
or
add
je
push
add
inc
outsl
and
pop
mov
push
call
push
or
ret
push
inc
call
cmpsl
or
mov
outsb
pop
aad
in
es
jbe
sti
add
fchs
cmp
daa
js
js
mov
sbb
iret
hlt
imul
cmp
push
loop
adc
dec
clc
pop
push
jo
sub
dec
lahf
and
push
add
xchg
cld
rcrb
push
jle
je
in
lret
sbb
imul
popa
sar
adc
cmp
inc
lods
pop
fimuls
fdivp
adc
lcall
in
stc
int3
or
movsb
or
loope
and
or
mov
cmp
mov
inc
stos
cmp
and
fdivl
inc
sbb
sahf
adc
stos
cs
xchg
dec
lahf
cmp
nop
insl
xchg
dec
sub
mov
dec
lret
jmp
imul
in
int3
lock
cmpsb
push
stos
pushl
mov
popf
bound
fwait
ja
scas
pop
xchg
dec
lock
aaa
and
mov
mov
push
out
fcmovne
sub
imul
pop
aas
push
mov
test
xchg
outsl
imul
pop
andl
fs
stos
push
mov
loopne
insl
mov
push
sbb
mov
mov
ss
icebp
pop
movb
test
sbb
jb
inc
out
pushf
mov
into
xchg
jl
cmp
inc
mov
clc
mov
fs
lret
cmpsb
out
xor
repnz
fdivl
mov
xor
sbb
and
test
call
std
scas
jnp
cs
dec
fstl
xchg
cmp
rcl
ret
popf
xchg
mov
dec
mov
sbbl
xchg
xor
mov
out
and
sbb
adc
popa
push
sbb
sbb
fisttpl
sbb
jb
ret
dec
icebp
push
in
loop
lea
xorl
xchg
mov
sbb
and
orl
push
dec
addr16
pop
test
lahf
in
or
push
aaa
cmp
mov
rorl
jnp
into
cmp
xor
push
push
ljmp
out
pop
lret
or
and
xchg
inc
les
ffreep
dec
cli
jmp
mov
xchg
add
test
lret
sahf
jge
or
pop
lret
push
or
lret
mov
sub
sub
xor
fsincos
aas
mov
jle
imul
popf
xlat
pushf
adc
or
and
mov
outsb
jecxz
xlat
lcall
aam
jge
add
fwait
cmp
xchg
xchg
das
cmp
jb
xorl
ss
or
push
add
pop
add
bound
nop
jecxz
push
lahf
js
adc
lods
cmpl
dec
mov
daa
ljmp
insb
jge
fwait
dec
push
or
xor
js
jecxz
or
xchg
mov
add
psllq
icebp
pop
mov
mov
fidivs
push
data16
in
push
lahf
movsb
test
xor
push
push
leave
and
pop
aaa
and
shrl
out
push
fimuls
inc
ds
aas
test
leave
fidivs
jl
cmpsl
arpl
inc
sub
outsl
fdivl
lret
mov
inc
mov
cmp
dec
std
ljmpw
ds
andb
cltd
lock
movsb
adc
push
lret
jle
cmp
push
loope
cmp
jmp
and
out
jno
jle,pn
mov
and
mov
mov
stos
lods
cmp
dec
fnstsw
mov
mov
fmul
cmp
sub
iret
adc
loope
adc
mov
and
sub
xor
jno
jae
fnstcw
jns
loopne
mov
sub
jae
push
stos
xchg
int3
outsl
mov
inc
sbb
inc
scas
dec
insl
out
daa
arpl
repz
jp
sub
jo
repnz
rolb
fmull
lahf
stc
or
insb
outsl
sti
rorb
ret
pop
rclb
inc
adc
push
and
scas
or
movsb
out
cwtl
add
xor
jg
pop
or
cmp
es
and
dec
sti
fstpl
ss
jg
cmp
sub
mov
jne
std
stos
icebp
mov
lods
dec
pop
and
insl
cwtl
xchg
mov
sub
xchg
mov
je
push
pop
jecxz
mov
fldl2e
in
bnd
xor
inc
adc
pop
lea
ficomps
data16
loop
mov
push
jle
push
std
out
push
add
xchg
lds
lret
es
xchg
movl
ds
cmp
test
icebp
mov
sbb
adc
je
test
cld
adc
add
jo
repz
fidivrl
pop
add
inc
dec
dec
int
inc
shll
xor
inc
test
fs
mov
or
jecxz
pop
into
roll
xor
pop
mov
test
daa
mov
xchg
cli
push
cmc
cmc
fldcw
arpl
cmc
inc
sbb
notb
push
cmp
mov
mov
leave
and
popf
call
shlb
movsl
pop
mov
mov
jp
adc
repz
dec
adc
and
out
in
xor
sti
pusha
jbe
in
xor
sbb
inc
inc
push
and
mov
pop
mov
push
mov
jecxz
aam
outsb
cmp
je
cs
jmp
jg
dec
idivb
mov
mov
cmp
and
sbb
popa
insl
leave
jnp
xchg
xor
pop
shrb
sub
sti
out
inc
mov
pushf
pop
in
gs
jl
xchg
mov
push
mov
jo
inc
ljmp
outsb
insb
sub
dec
jle
jle
xchg
pop
lods
dec
cs
cmpsb
cs
jl
cs
push
inc
inc
jbe
sahf
lods
push
jb
xchg
testl
push
popa
jl
js
into
xchg
xchg
xchg
add
std
insl
sub
js
sahf
pushf
pop
stc
and
clc
xor
mov
repz
popw
mov
in
out
jb
iret
and
jb
shr
imul
lret
pop
mov
add
lods
jnp
les
es
mov
in
and
sti
imul
and
addl
hlt
mov
jp
cld
and
iret
adc
aam
and
cmp
mov
push
popa
and
mov
rol
stos
dec
xlat
add
out
clc
push
mov
xor
stos
pusha
pop
mov
int3
push
adc
mulb
ss
imul
xchg
shll
repnz
jmp
sub
add
repz
adc
nop
xchg
lcall
sbb
xlat
ret
movb
push
adc
mov
pop
dec
pop
xchg
or
xor
pop
cmp
xchg
bound
mov
sbb
iret
aam
mov
cmp
lret
pop
ja
fwait
jmp
dec
in
and
nop
sbb
fsubrs
scas
jae
and
xorl
lret
and
in
scas
dec
mov
hlt
lret
push
mov
call
jmp
test
sbb
mov
jecxz
stc
push
rorb
and
lahf
scas
or
ficoms
enter
jmp
xchg
out
stos
popf
outsb
add
xor
cmp
repz
xchg
sub
in
jg
mov
adc
inc
push
jge
mov
sbb
xchg
jmp
mov
notb
mov
pop
mov
inc
stc
movsb
inc
movsl
in
lods
pop
das
adc
mov
sub
sub
pop
les
cmpsb
int
mov
inc
and
shrl
push
mov
cs
xchg
popa
aad
add
out
hlt
sar
out
rorb
push
orl
outsb
outsb
mov
lret
out
divl
adc
dec
nop
jbe
inc
adc
sbb
lahf
push
push
pop
or
cld
out
xchg
clc
sub
loopne
jle
rorb
inc
xor
sti
jecxz
fisttps
movsl
mov
mov
add
xchg
jns
rcll
mov
ss
lret
adc
push
push
inc
fistpll
fldenv
mov
inc
dec
and
xor
cmc
push
fimuls
aas
imul
imul
mov
cmc
gs
and
mov
push
cltd
imul
repnz
or
inc
movsb
xchg
popl
enter
in
mov
mov
incb
cmp
cmp
push
xchg
adc
addr16
mov
jmp
adc
addb
mov
mov
adc
icebp
mov
sbb
stos
push
mov
repz
cwtl
xchg
icebp
pop
and
mov
outsl
cltd
jne
ljmp
iret
sbbl
rorb
inc
ds
add
mov
stc
fnstsw
repz
sbb
popl
xchg
in
xor
inc
add
into
sbb
subb
xor
mov
inc
push
jbe
add
aaa
cmp
and
pop
inc
stos
sbb
push
in
jge
shl
out
aad
xchg
lock
jnp
jmp
bnd
js
orb
ret
loopne
out
jecxz
arpl
stc
bnd
pop
icebp
neg
xchg
inc
loope
sbb
sub
test
and
out
hlt
and
push
cmp
or
add
pop
in
fwait
and
inc
sub
xchg
or
repnz
pop
xor
nop
outsl
pusha
test
mov
int
lret
fcmovbe
call
out
test
pop
inc
adcb
rcrl
int3
repz
std
in
ljmp
mov
mov
test
jp
sbb
lea
aad
sub
jmp
inc
jl
imull
int3
pop
cwtl
jno
jbe
loope
ss
jo
lock
push
aam
mov
adc
dec
je
fwait
fwait
jp
iret
push
cwtl
ja
cli
jno
mov
dec
jmp
push
mov
xor
hlt
psubusw
les
arpl
sub
js
and
int
mov
cmpsl
adc
cmpsb
es
call
push
aam
mov
shl
ficompl
bound
icebp
std
add
add
in
adc
mov
cltd
push
loop
push
pop
mov
addr16
mov
sti
rclb
std
add
mov
adcb
test
scas
inc
sbb
mov
inc
in
adc
dec
out
push
push
movsb
xor
iret
inc
cmp
cmp
stos
or
mov
insb
movsb
imul
ja
adc
data16
push
cmpsb
sbb
push
aad
push
push
xor
lcall
jns
cltd
test
arpl
in
push
daa
lock
mov
imul
cmp
stc
test
int3
fnstcw
in
lcall
jns
lock
out
int3
iret
pushf
jb
xchg
aaa
push
xchg
orb
and
and
scas
cs
fstp
mov
stos
fwait
popf
mov
jge
inc
incb
repnz
aas
or
xor
dec
mov
test
dec
sar
cs
ljmp
mov
nop
mov
pop
stos
leave
into
aad
xlat
and
sarl
mov
xchg
shll
cmp
ss
xor
jecxz
repz
xor
sub
int3
inc
sahf
push
fwait
add
dec
mov
xor
inc
pop
std
jle
xchg
or
pop
xchg
cmp
sub
or
int3
push
sbb
or
mov
aam
ss
sbbb
mov
push
mov
icebp
les
testl
and
dec
test
mov
ret
in
stc
and
jnp
mov
jecxz
fsts
xchg
ficoml
jne
jnp
dec
rol
or
sbb
popl
mov
test
mov
sbb
stos
je
test
dec
mov
outsb
add
dec
push
xor
aaa
rorl
xchg
xchg
fstpl
pop
ret
pop
pop
lcall
lahf
imul
xor
add
mov
imul
add
xorl
imul
dec
pop
test
mov
dec
cmp
and
xchg
mov
nop
jno
in
jge
lahf
fadds
or
mov
xor
rorl
shlb
stc
pushl
shlb
in
test
repz
jb
mov
push
dec
push
pop
push
sbb
int3
es
lock
push
sarl
fmull
pop
xor
leave
dec
mov
mov
sub
aam
jle
mov
scas
sub
test
push
inc
or
js
xor
push
cwtl
cmp
inc
xchg
in
mov
sbb
add
sbb
or
and
cmp
outsb
repnz
pop
adcl
and
out
lea
lds
push
cld
insl
sbb
inc
push
inc
stos
loop
jae
cli
or
add
ret
adc
adc
int
arpl
xchg
rol
lahf
ljmp
lahf
les
movsl
stos
fimuls
or
push
fldcw
fs
out
in
mov
loopne
or
pop
xor
or
and
xchg
mov
adc
xchg
shrl
or
repnz
fisubrl
icebp
lods
popa
es
pop
mov
addb
stc
pop
jb
test
aam
movsl
add
add
add
add
xchg
arpl
add
add
add
add
repz
add
add
add
je
add
add
add
add
add
add
addb
add
addb
push
add
addb
add
add
add
add
add
mov
add
add
movsb
xor
jo
jo
jo
jo
or
or
add
adc
adc
add
popl
mov
add
add
add
add
add
add
add
add
or
add
add
add
jb
add
add
add
jne
sbb
sbb
add
add
add
add
add
and
jo
gs
dec
jae
inc
jb
outsl
je
popa
jo
sub
bswap
insl
shr
mov
enter
or
fisttps
incl
in
add
mov
or
push
add
cld
push
mov
push
call
add
push
lock
clc
xchg
pushf
push
push
dec
pop
push
mov
sub
aas
pop
pop
mov
push
incl
movsl
mov
add
decl
add
adc
add
loope
and
test
decl
addl
and
or
decl
add
adc
push
add
cmp
call
sub
adc
push
push
in
push
loopne
add
adc
sbb
add
add
cmp
add
sbb
add
sbb
sbb
sbb
sbb
sbb
xchg
add
add
jb
gs
gs
outsl
insb
test
outsl
add
gs
add
jo
jbe
je
arpl
outsl
add
inc
je
xor
addr16
jge
add
pop
jo
add
push
add
add
gs
inc
xor
faddl
add
add
sub
add
add
mov
push
popa
adc
mov
movsb
push
sbb
aad
adc
xchg
jne
mull
mov
sbb
sub
mov
mov
pop
fcoms
pop
adc
call
les
shll
shl
out
nop
inc
add
test
sbbl
xchg
jne
or
mov
loopne
mov
xchg
movsb
cltd
sbb
add
out
push
enter
call
dec
lahf
push
xchg
fs
push
sub
insl
mov
push
dec
outsb
mov
sbb
adc
pushf
sub
mov
andnps
xor
add
inc
cmp
mov
jae
inc
xchg
lahf
pusha
dec
or
xor
xchg
or
dec
rcl
icebp
sub
mov
jno
adc
out
fisubl
mov
adc
stos
stos
sub
popa
jns
lods
cmc
xchg
adc
pop
push
fldcw
lret
sbb
popf
add
mov
cmp
xchg
jno
sbb
sti
dec
popf
ss
int3
repnz
or
stos
lcall
mov
pop
enter
daa
xor
in
mov
adc
lds
and
jg
cld
bswap
mov
mov
mov
sub
sbb
mov
push
movsb
sub
rcll
enter
mov
xlat
mov
loopne
icebp
fmulp
add
fisttpll
push
sbb
cltd
test
mov
jg
loope
in
icebp
add
out
push
mov
mov
push
imul
sarb
psubw
test
mov
add
js
lahf
add
push
aad
push
pop
pop
in
jns
notb
mov
imul
outsl
jns
adc
mov
pusha
dec
cmpsb
shl
popf
adc
inc
test
inc
pop
mov
xchg
sahf
aaa
mov
pop
fcmovnu
subb
mov
rcrb
jp
cmpsb
pusha
sub
and
seta
enter
imul
cmpsl
pop
ljmp
popf
xchg
jle
je
and
mov
ljmp
xchg
jno
int3
mov
loope
or
mov
or
mov
mov
insb
or
jg
inc
sahf
insb
lret
imul
cli
int
pop
mov
push
out
jb
pop
jecxz
outsb
lds
mov
adc
mov
mov
inc
xchg
sarb
addr16
add
rol
ja
pop
and
ret
std
pop
push
jae
mov
ljmp
je
push
sbb
and
mov
scas
cmp
pop
and
jo
jp
adc
mov
or
iret
fs
mov
sbb
in
out
xchg
adc
mov
aad
mov
adc
push
lods
js
add
and
call
inc
push
mov
jae
loopne
and
jg
and
lock
jge
fmuls
int
outsb
mov
jl
or
mov
mov
push
xor
sbb
enter
push
xor
xor
out
and
clc
mov
and
pop
mov
movsb
es
jns
push
xor
mov
arpl
dec
xor
std
sub
sti
ja
mov
jb
jnp
or
sbb
mov
inc
xor
lret
leave
sbb
cltd
adc
aam
in
dec
xlat
arpl
pop
sbb
rclb
aaa
push
stos
cmp
mov
lds
or
or
jno
mov
dec
rcl
sbb
loop
rol
mov
cld
mov
loop
push
fistps
aaa
xor
sbb
nop
xor
aas
mov
cmp
mov
fdivl
mov
sub
in
out
mov
clc
fildll
or
cmpsl
xchg
addr16
in
mov
clc
adc
push
add
outsl
mov
hlt
pusha
mov
dec
push
sbb
jno
and
xor
popa
js
data16
shl
cld
or
dec
xchg
and
adc
mov
mov
xchg
sub
stos
movsb
push
adc
cmp
bound
loop
movsb
loope
dec
ja
lods
pusha
mov
dec
imulb
mov
ja
cmp
push
mov
ljmp
cli
add
mov
push
in
cmp
xchg
out
sub
cld
loopne
sub
test
stos
test
scas
xchg
inc
outsl
imul
movsb
or
out
sub
inc
xor
dec
sub
fmull
pop
cltd
rcrb
sub
xor
ret
jle
mov
jno
dec
mov
mov
pop
cmpsl
outsb
cmp
sub
mov
imul
outsb
adc
pop
roll
and
push
lahf
push
test
stos
cld
arpl
push
test
xor
and
cmp
insl
cltd
andl
ja
ljmp
mov
pop
nop
mov
push
insb
outsl
out
pop
xor
into
cmc
imul
shll
jbe
cmpsl
xor
jb
aas
sub
ss
imul
sbb
out
sbb
fstpt
test
aad
mov
sbb
mov
xor
pop
xchg
jmp
mov
dec
loop
out
cmp
xor
ds
sbb
adc
lcall
and
cltd
mov
cs
push
roll
push
mov
std
jo
out
adc
xor
scas
insl
mov
jbe
inc
imul
cmp
xor
cmpsb
dec
mov
sub
cmp
or
cld
test
loope
pop
out
aas
das
ret
mov
cli
aad
or
dec
xor
dec
hlt
push
leave
roll
icebp
inc
jecxz
outsl
shl
icebp
loope
mov
jo
fidivrs
test
pop
and
mov
xor
add
lock
inc
mov
es
test
js
sub
add
mov
lret
inc
bound
nop
aam
mov
jle
push
mov
xor
clc
inc
rcrl
xchg
or
ja
int3
lahf
test
imul
xor
in
mov
fwait
lock
out
icebp
mov
add
xchg
jmp
push
ss
arpl
movsl
iret
sbb
orl
out
xor
lds
sbbb
jle
negl
mov
xor
jae
repnz
insb
push
je
sub
in
mov
mov
dec
adc
test
cmp
fs
cltd
pusha
in
outsb
and
std
mov
push
sub
ja
outsb
xor
in
push
idivb
push
sahf
xor
mov
inc
and
xchg
test
pop
xor
ja
cmpsb
cltd
push
or
push
popa
imul
cli
ss
xor
add
sub
inc
pop
pop
into
rolb
cmpsl
jmp
movsl
mov
mov
inc
int3
jmp
dec
mov
jne
push
add
xor
into
xchg
rcrl
and
aaa
repnz
sbbl
adc
push
out
sti
xchg
mov
js
lods
xor
loop
imul
mov
add
add
dec
pop
sbb
sar
cmp
inc
push
clc
pop
std
mov
add
jge
mov
ret
repz
inc
pop
push
cmc
mov
aas
cli
in
cmpsl
jno
adc
mov
cmpsb
xor
movsb
scas
sbb
dec
cmp
icebp
ret
jno
cmpsb
mov
xor
js
shll
push
ds
jle
mov
gs
testb
lods
add
jg
cmp
dec
jno
fsub
mov
pop
popw
or
mov
ds
pop
dec
push
or
mov
lahf
inc
xchg
fmull
mov
sub
add
imul
xchg
jmp
jp
fimull
mov
je
test
imul
cmpsb
cmp
fnsave
out
and
ljmp
jmp
in
jne
xchg
iret
lods
scas
cmc
mov
cmp
dec
lea
imul
mov
rcl
sbb
and
push
movl
insb
jbe
cmpsl
jle
sub
pop
ss
cwtl
repz
gs
fwait
sub
fadd
mov
loop
push
push
cmpsb
jmp
mov
xor
xchg
mov
nop/reserved
lret
push
cs
mov
mov
inc
fidivrl
lds
push
dec
pop
fstps
lahf
xchg
xor
cwtl
aaa
pop
and
in
jge
movsb
shrl
push
xchg
xchg
adc
js
adc
lret
and
fisttpl
sbb
mov
sub
aad
test
pop
dec
pop
pop
adc
push
pop
cmc
push
and
fbld
and
mov
imul
les
testl
xchg
or
push
xor
je
inc
or
scas
clc
mov
loop
int
add
xor
xchg
jne
das
pop
jo
mov
xor
sbb
js
sub
movsb
inc
push
fwait
cmp
pop
fcoml
rcll
push
xchg
or
mov
cwtl
pop
add
mov
call
gs
out
adc
test
and
mov
inc
pop
lcall
mov
testl
or
icebp
lds
dec
ret
cwtl
pop
add
jmp
jecxz
mov
inc
int
popf
jp
xor
aad
insb
pushf
ljmp
mov
cmp
rcl
pusha
xor
sahf
mov
test
cmp
mov
and
jecxz
push
shl
adc
iret
sbb
jno
push
stos
sub
out
push
sub
push
fiaddl
icebp
xor
or
ficoml
data16
mov
xchg
jnp
sbb
in
inc
and
dec
lock
xchg
pusha
mov
push
dec
mov
pop
xchg
dec
dec
scas
sub
mov
fnstenv
shr
scas
nop
flds
ja
cld
dec
lret
popa
lds
ss
test
lock
cmp
jnp
scas
mov
hlt
daa
insb
sbb
lods
loope
sbb
dec
mov
stc
scas
pop
and
xchg
adc
cltd
sbb
push
arpl
or
or
dec
sub
lcall
pusha
push
mov
outsb
jns
mov
out
mov
sbb
mov
arpl
movsl
adc
insl
cltd
popf
push
fdivrs
test
adc
inc
outsl
daa
cwtl
jg
sbb
mov
out
mov
and
adc
je
lea
adc
sub
cli
aam
mov
add
xor
icebp
shlb
fwait
cld
adcl
inc
cmp
sbb
in
flds
add
out
dec
or
mov
add
lods
mov
shll
pop
dec
sbb
fs
jecxz
sub
adc
pop
dec
jge
mov
pop
out
adc
mov
add
dec
aaa
cmpsb
ss
in
stos
and
scas
filds
lret
xlat
mov
in
mov
stos
cmp
add
xor
xchg
add
and
fldt
or
mov
ja
out
jbe
xchg
aam
jmp
mov
stos
xchg
fstps
xchg
or
loopne
mov
into
int3
sbb
or
inc
enter
or
push
aaa
in
fcoml
test
adc
sub
cmp
shll
data16
scas
jnp
ret
mov
mov
ljmp
cs
int
cmpsb
arpl
and
imul
inc
add
repz
outsb
inc
add
cli
mov
push
or
cld
lcall
and
jb
dec
daa
mov
ss
ja
cld
xor
testl
add
jae
add
sub
jmp
mov
enter
add
xchg
xor
jp
repnz
jbe
jnp
sbb
fbstp
xchg
cwtl
nop
or
mov
jb
jecxz
rcrb
add
and
repz
fwait
jge
popf
mov
push
lds
ss
inc
or
cld
in
fldcw
add
mov
imul
mov
xchg
xor
mov
rcl
ljmp
add
pavgw
xchg
jmp
cs
sub
js
jnp
dec
repnz
ljmp
dec
jae
xor
dec
xchg
mov
mull
in
or
popa
jle
push
mov
jb
pop
pusha
jne
add
ss
enter
out
push
mov
shll
addr16
mov
sub
cmp
bound
lcall
pop
add
push
mov
sti
jg
iret
push
push
test
mov
mov
sbb
sub
andb
test
notb
pop
pop
inc
push
mov
popf
adc
pop
lahf
sub
cltd
adc
jge
or
sbb
enter
xchg
ss
sbb
cmp
lret
cmpsb
lea
ret
out
sub
sbb
and
jno
into
in
fiadds
ds
in
sbb
pop
xor
into
sub
pop
mov
fstp
mov
pushf
add
xchg
ss
int
inc
dec
movlps
movsl
jecxz
pop
mov
cmp
fsubrl
sti
sbb
ljmp
ret
mov
cmp
sbb
jno
into
fstl
add
decb
aaa
pop
std
notb
xorl
loope
pop
or
andl
es
mov
movsb
enter
ljmp
stos
sbb
mov
mov
fwait
jp
mov
rcrb
or
dec
jle
sub
out
in
push
popa
cmp
mov
arpl
dec
ret
in
scas
in
or
dec
pop
aaa
pop
jle
xor
stos
mov
sbb
push
outsl
pop
fsubrs
dec
subb
hlt
push
ss
stc
out
movsb
loope
inc
push
test
push
mov
in
test
mov
pop
xchg
xlat
fs
nop
fwait
xchg
lods
int3
xor
inc
or
pcmpeqb
outsl
xor
jmp
pop
pop
rcrb
pusha
shrb
pop
stos
push
stc
ja
cs
xchg
inc
push
mov
add
dec
add
pop
leave
xor
jp
jne
jae
jg
ret
out
xchg
cmc
in
push
lock
aam
in
cmp
stc
sbb
and
inc
jae
mov
test
jecxz
jmp
repz
cmc
enter
pop
push
xchg
dec
insl
mov
cmpsl
out
sbb
sbb
inc
push
mov
fwait
es
xchg
and
mov
push
shll
mov
scas
stos
js
rclb
stos
push
add
jnp
lret
jae
test
outsl
rcrb
mov
dec
xchg
xchg
add
jnp
in
push
push
inc
stc
mov
cmp
pop
rcl
sub
jne
push
hlt
ret
lahf
cmpsl
and
dec
jg
pushf
sbb
xchg
test
cwtl
fstps
or
sub
or
mov
fnstenv
pop
push
pop
push
inc
int
or
cld
stc
sbb
je
xchg
lcall
imul
dec
add
jg
ret
sub
dec
mov
jnp
test
aas
addl
cli
lcall
fwait
jae
hlt
cli
ja
test
pop
cmp
jmp
outsl
jns
popa
lock
push
sbb
cmc
jmp
dec
fcompl
std
xlat
js
pop
cmp
mov
xorl
cmp
aad
jl
or
lock
xor
jl
loope
xor
fidivrl
stos
ret
das
push
adc
push
jns
and
or
sbb
in
adc
das
cltd
cli
enter
lret
popf
lods
adc
cwtl
fimull
lret
mov
rcrb
jnp
clc
imul
sub
cmpsl
push
cmp
xchg
je
sbb
jmp
dec
xor
and
out
shll
push
xor
icebp
xlat
cmp
jp
movsl
fbstp
out
lea
gs
sahf
xlat
ja
int
cmp
stc
jne
adc
pop
and
xor
jbe
repz
dec
push
js
push
test
xor
pop
nop
dec
pop
push
ja
pshufw
mov
aad
jle
je
cmp
xor
mov
xlat
xor
addr16
sbb
rol
mov
out
sub
icebp
push
dec
repnz
jmp
cmp
and
lock
shrb
loop
iret
jns
popa
mov
inc
cmpb
loope
fmulp
mov
adc
rolb
sub
sub
adc
ficomps
xor
aad
sbb
ret
jbe
loopne
lods
arpl
or
pop
sahf
pop
mov
add
stc
lahf
fnsetpm(287
jecxz
cmp
push
pop
push
jg
mov
and
aaa
int
jo
mov
jge
icebp
xchg
aam
cmpb
adc
push
sbbb
inc
pop
sub
push
ljmp
mull
sbb
or
dec
push
pop
jecxz
add
clc
sti
loope
add
cwtl
xchg
dec
sbb
jno
test
dec
push
es
bound
jo
sub
add
mov
stos
int3
dec
sbbl
aad
std
pop
ds
loop
or
jns
jnp
push
sbb
popa
mov
inc
mov
adc
jne
mulb
fisttpl
pop
jnp
mov
pushf
out
push
lds
push
test
push
fstpt
mov
rorl
aad
xlat
mov
push
inc
cmc
mov
jne
add
xchg
arpl
arpl
cmc
daa
add
sbb
mov
push
mov
push
or
mov
xchg
daa
lock
mov
xor
inc
xchg
push
and
fsubrs
pop
mov
sarb
test
mov
test
inc
jnp
mov
hlt
mov
xor
mov
xchg
xchg
inc
add
mov
leave
sbb
mov
add
xor
sbb
xchg
js
pop
pop
inc
ficoms
inc
jge
jno
mov
cwtl
dec
add
or
jb
cmp
es
les
jg,pn
xchg
cmp
in
addr16
clc
lods
test
repnz
movl
sti
aas
and
nop
pop
sub
test
and
pop
popf
orb
sti
jge
popa
aam
pop
inc
pop
fsubr
push
jg
jl
and
mov
pop
outsl
shlb
rcrb
xchg
push
stos
icebp
imul
add
xchg
pop
dec
cmp
cmp
sti
fcomps
insb
in
imul
mov
ret
mov
jns
inc
add
std
loope
int3
mov
nop
insb
mov
fbld
pop
cmp
cwtl
fs
fimull
loope
and
jno
adc
jg
fwait
sbb
add
inc
icebp
std
xchg
insb
xor
cmp
xchg
inc
cltd
add
add
add
sub
add
add
mov
push
add
add
add
add
pushf
add
add
dec
add
add
add
add
add
add
in
add
add
fildl
add
add
add
add
add
js
add
add
add
add
add
stos
stos
int3
add
mov
jg
jg
jg
mov
push
cmpl
push
mov
je
cmp
je
call
call
mov
mov
push
mov
call
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
not
mov
pop
mov
or
mov
leave
ret
add
add
add
cmpsb
add
or
or
adc
add
add
adc
add
add
add
add
add
add
add
add
add
add
enter
add
arpl
mov
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
jecxz
cmp
js
add
outsb
pop
push
push
add
add
add
push
testl
roll
pop
push
or
add
pop
incl
mov
test
sub
cld
adc
add
adc
add
in
cld
xchg
pop
inc
fs
je
in
push
pop
inc
cmp
add
incb
add
push
adc
add
jmp
add
or
decl
sbb
call
decl
cmp
mov
and
cld
dec
push
lock
movb
inc
lock
lock
call
add
lret
cmp
jmp
incl
lea
adc
push
jne
inc
add
leave
add
pop
add
cmpsb
sbb
add
add
sbb
xor
sbb
sbb
sbb
sbb
sbb
sbb
add
add
je
jae
mov
insl
add
mov
push
outsl
add
push
add
insl
insl
outsl
js
add
jo
insb
jae
xor
fs
inc
jns
popa
add
add
outsl
jbe
fs
insb
gs
popa
push
add
add
add
add
mov
add
add
add
add
add
add
cmp
add
add
add
add
test
add
xchg
cmp
xor
or
popa
dec
jns
enter
rep
pop
repnz
scas
jae
mov
bound
call
and
pop
cmp
loope
imul
movsb
enter
loope
movsb
cwtl
bound
push
gs
mov
lret
arpl
gs
rcrb
xchg
jmp
jg
mov
aaa
enter
ljmp
iret
sub
mov
jae
fs
out
jecxz
mov
lea
imull
loopne
jecxz
call
arpl
scas
addb
sub
or
mov
or
adc
cmc
divl
mov
in
mul
das
inc
rcrb
mov
movsb
ljmp
loopne
test
outsl
add
sub
in
or
pop
loop
call
repz
mov
cmpsl
sbbb
pop
and
pop
std
jmp
cmp
mov
jo
jnp
add
test
sub
mov
xlat
rorl
es
jae
in
bnd
aam
or
xchg
je
ja
dec
cmpsb
push
scas
xchg
scas
mov
and
nop
js
dec
fistps
sub
scas
sahf
loopne,pt
or
add
inc
movsl
push
mov
stos
test
js
push
push
into
mov
and
in
rol
pop
jmp
shrl
fcomip
cmpsb
add
push
cmp
jbe
fiadds
sti
mov
sbb
and
mov
adc
dec
out
cmp
fidivrl
cmp
repnz
cld
push
fstpl
cltd
adc
and
mov
inc
out
push
jno
call
dec
adc
negl
mov
push
aaa
int3
lods
popa
adc
cmc
or
and
sub
jae
mov
pop
push
stos
mov
insl
cmp
dec
cwtl
and
test
dec
leave
mov
cmp
mov
cmp
aad
and
lea
xor
enter
nop
insb
aaa
shll
loope
adc
je
daa
or
and
pop
jnp
jno
sbb
mov
push
sarl
out
je
sub
sub
lret
idiv
and
sbb
les
pop
or
stos
sahf
pop
in
prefetchwt1
xlat
push
jmp
mov
cwtl
mov
ss
mov
or
sbb
sbb
in
aam
frstor
sub
adc
imull
jge
pop
push
arpl
jbe
in
push
inc
jg
data16
and
into
dec
int
or
ds
stos
jb
adc
adc
xor
mov
xchg
pop
mov
push
mov
icebp
and
push
sbb
push
jb
aas
mov
shlb
loope
ret
imul
addr16
fmulp
mov
mov
sbbb
aad
or
hlt
lahf
push
int3
mov
dec
sbb
std
xlat
mov
das
xchg
test
push
subl
lock
mov
sbb
icebp
add
fildl
adc
fmull
pop
add
arpl
lods
push
push
fld
jbe
jne
jae
sub
mov
mov
movzwl
stos
xchg
fwait
mov
hlt
fidivl
fwait
gs
xor
pop
out
mov
movsl
outsb
std
hlt
push
test
push
xlat
push
lahf
cwtl
ret
sbb
leave
sar
stos
shll
xchg
jmp
and
aam
movsb
outsb
test
jnp
or
dec
das
fldenv
imul
mov
inc
adcb
shll
stc
jne
stos
cmp
mov
pop
popa
mov
in
add
rolb
dec
mov
or
es
enter
shll
push
mov
jg
out
add
jns
fs
std
xor
xchg
mov
test
push
mov
cmp
mov
leave
jg
mov
js
add
fsubrl
sbb
mov
roll
dec
fs
pop
pop
idiv
mov
dec
ret
call
inc
data16
inc
out
insb
or
pop
cwtl
loop
inc
repnz
jo
and
in
lret
outsl
cmpsl
nop
cmp
xchg
mov
sub
dec
nop
insb
dec
pop
leave
jle
movsb
fnsave
jmp
fmuls
int
pushf
xchg
pop
jl
cmpsb
imul
test
dec
pop
icebp
inc
mov
in
sbb
subb
lret
dec
push
mov
movsl
out
xchg
sub
daa
mov
or
aaa
popf
push
es
lods
mov
addb
inc
add
ret
pop
cmp
add
test
add
aad
xor
iret
xchg
or
repnz
inc
xchg
rclb
dec
lds
jns
bound
inc
jne
mov
aas
loopne
add
rorb
outsl
dec
out
int3
pop
mov
push
lods
pop
inc
lahf
xlat
scas
mov
mov
test
lret
jne
aam
negl
mov
mov
add
jae
pop
ds
inc
outsl
push
daa
push
inc
mov
adc
movsb
ljmp
xchg
bound
lret
mov
push
daa
mov
jl
adc
iret
mov
loope
xor
cmpsb
pop
mov
jo
popa
sbb
imul
out
pop
leave
test
cmp
pop
mov
rorl
jo
dec
addl
mov
mov
xor
push
push
dec
mov
dec
sarb
test
jmp
adc
stc
fisttpl
idivl
cmp
dec
movsl
decl
sub
mov
popf
movsb
mov
loope
cmp
fsubrs
xchg
outsl
stos
cmpsb
mov
scas
push
lret
sub
mov
shl
push
pop
fcomps
push
or
je
mov
rcl
test
push
add
aam
daa
add
push
jg
das
addr16
jns
int
lock
lock
and
jb
std
scas
add
icebp
or
out
bound
ljmp
jne
xlat
popf
add
jbe
and
mov
imul
sub
jge
pop
mov
hlt
xor
ret
leave
int3
stc
jne
mov
ja
ret
mov
dec
jge
xor
nop
test
cmp
repz
sbb
outsl
pop
mov
scas
pop
add
inc
sahf
cmp
jbe
test
test
test
mov
add
aam
mov
data16
push
fidivrs
pop
jmp
in
pop
jns
lock
push
cltd
mov
fisttpll
hlt
inc
lock
sbb
sub
mov
in
or
sbb
jge
pop
pop
gs
pop
cltd
jmp
dec
repnz
jb
sub
stos
les
call
push
dec
jne
repnz
aaa
inc
mov
mov
jnp
jb
pop
ret
sahf
add
scas
lret
push
pop
mov
push
xchg
lods
pavgw
push
jb
jno
fidivrs
mov
fnstsw
cmpsb
imul
jbe
or
push
push
mov
lcall
mov
jae
movsb
push
xor
cltd
xor
dec
or
daa
sbbl
pop
mov
in
mov
sub
mov
pop
cltd
iret
inc
or
sbb
jns
popa
xor
inc
paddusb
fidivrs
or
rolb
loop
lods
in
pop
fldt
push
cmp
or
mov
lds
push
push
xor
aas
into
addr16
jmp
push
push
fcmovnbe
aam
xchg
sahf
lock
push
pop
inc
cmc
les
hlt
mov
xor
cmpsb
or
cld
sbb
xor
sub
sub
inc
mov
sbb
ljmp
mov
rolb
pop
xchg
pop
cli
in
mul
xchg
lcall
cs
sti
leave
aam
popf
inc
push
cmp
mov
cli
jge
out
cmpsl
jae
inc
push
push
rcll
mov
push
and
pusha
shl
sbb
cltd
mov
inc
cmp
push
xchg
arpl
adc
jmp
pop
das
insl
adcb
les
xchg
push
mov
sbb
lock
dec
xor
adc
or
xor
sbb
push
ds
stos
or
fs
adc
dec
jae
cmp
mov
lods
pop
pop
call
js
pop
aad
jne
xchg
xchg
sarl
cmp
lea
shlb
add
adc
das
cwtl
je
sub
push
fidivrl
push
mull
adc
sbb
cli
outsl
mov
sub
out
fadds
cmpsl
mov
rorl
aad
mov
xchg
test
jp
mov
imul
stos
loope
or
test
adc
fwait
cld
mov
jne
jnp
bound
xchg
insl
les
dec
mov
push
dec
mov
and
adc
ds
add
insl
loop
inc
and
scas
inc
sbb
rol
loopne
lea
push
adc
mov
lret
jne
push
mov
call
and
sub
fcoms
loopne
xchg
ret
xchg
repz
popa
aam
push
sbb
xchg
push
fadd
call
mov
int
in
shll
scas
pop
pusha
ret
fcmovnbe
mov
enter
xor
outsl
jns
in
push
xor
jb
cmp
repnz
pop
mov
push
js
sbb
repnz
popf
icebp
movsl
imul
insl
mov
push
out
cli
xchg
aas
pushf
push
jb
lcall
and
xor
bound
dec
xchg
std
test
inc
dec
ja
jae
int
sub
imul
add
add
lahf
ss
sar
movsb
loope
mov
push
pop
incl
push
popa
jp
or
sub
mov
mov
testb
imul
ret
mov
add
sbb
ret
xor
push
pop
mov
or
fcomip
pop
jns
mov
sti
repz
xor
loopne
jns
sar
sub
inc
inc
or
inc
inc
icebp
repnz
cmp
pop
jne
adc
clc
addr16
sub
mov
int3
fisttpl
adc
callw
insb
adc
aam
lret
and
lods
mov
sub
rol
add
mov
cwtl
fisubrl
les
mov
sbb
mov
fwait
xchg
les
jg
jle
js
sbb
mov
in
dec
push
daa
iret
add
out
xchg
sarb
or
mov
aam
pop
jecxz
mov
cmp
ss
int
out
je
inc
xchg
leave
lods
mov
data16
push
mov
out
adc
cmp
fadds
aas
sti
push
aad
push
sbbl
sbb
pop
pop
xor
lea
cmpsl
inc
ljmp
adc
adc
inc
pop
in
inc
les
jno
pop
shrb
xor
fists
dec
mov
js
iret
xchg
xchg
mov
xlat
mov
mov
cmc
sbb
mov
xchg
repz
pop
push
enter
subl
div
mov
xchg
aaa
icebp
push
daa
inc
dec
aad
call
dec
repz
int
sbb
repz
push
vhsubps
push
inc
and
mov
shll
sahf
cmpl
cwtl
into
xchg
mov
cli
inc
dec
jp
sub
mov
cmp
imul
dec
push
insl
cltd
and
cmpb
xchg
mov
add
fwait
enter
mov
and
xor
xor
ja,pn
xor
mov
shll
sub
adcb
movsb
sub
stos
sub
icebp
leave
adc
out
cmpsb
adc
add
shlb
in
out
lods
jmp
sbb
stc
es
test
jo
mov
js
sub
inc
inc
into
ss
inc
sbb
xchg
lahf
aaa
test
int
mov
push
and
inc
adc
fisttpl
xchg
jnp
stos
pusha
rcrl
pop
shlb
hlt
xchg
push
cmp
in
pop
push
mov
loop
lods
repnz
ret
inc
xor
mov
inc
and
mov
test
repz
cmpl
shl
jno
jo
push
fs
jns
rcll
ljmp
mov
cmp
inc
mov
sub
pop
push
lret
rcl
bound
add
es
or
cwtl
sbb
sbb
divl
mov
lods
xchg
cmpsl
push
popf
aas
je
dec
cmovo
fnstsw
bnd
push
int
jge
push
mov
xchg
xchg
jnp
add
ds
scas
lret
pusha
sahf
jno
call
sahf
movb
add
mov
dec
jl
pop
mov
mov
mov
jae
inc
and
jle
xchg
cld
mov
gs
mov
loope
outsb
stc
xchg
cmp
mov
sub
imul
cltd
push
or
jno
lahf
mov
pushf
pop
or
push
jg
push
dec
lahf
cmpsl
add
test
imul
fstpt
xchg
mov
insl
rolb
jns
mov
cs
js
sub
push
jle
cmpsl
shll
jl
pushf
ss
fbstp
fstpl
hlt
jp
shlb
sbb
fistl
xchg
mov
es
jne
imul
jl
inc
lods
push
test
ret
dec
lods
cmp
push
popf
bswap
push
cmc
push
scas
scas
sub
movsb
movsb
aad
dec
daa
jp
insb
or
mov
fs
pop
pop
sbb
shrb
adc
enter
pop
add
mov
cmp
cmp
xor
xor
mov
sub
mov
arpl
sbb
push
mov
sbb
lret
sbb
dec
adc
imul
sbb
mov
clc
push
xlat
in
xchg
dec
pusha
iret
xor
out
repnz
fwait
cmp
sub
std
push
ret
pop
sub
fs
cli
pop
xor
cmp
jp
seto
sub
mov
and
push
repz
xchg
pop
xor
sub
xor
mov
stos
lret
cmpl
dec
pop
ret
and
ds
scas
push
mov
and
lods
fadd
xchg
stos
sarl
lahf
fistpll
xor
pop
sbb
inc
int3
pusha
sbb
ret
aam
sub
fcompl
inc
jp
jno
shll
call
jno
int3
mov
mov
fldl2e
jae
or
out
cmpsb
xor
pushf
aad
or
lahf
hlt
mov
mov
jg
fcmovbe
jl
out
out
clc
popf
xlat
cmp
push
fdivrs
mov
xor
dec
mov
xchg
hlt
int3
fstpt
mov
lods
insb
loop
clc
mov
cmp
cs
arpl
sub
mov
pop
sbb
sub
sub
inc
mov
test
or
or
stc
movsl
jnp
adc
mov
ficoms
iret
mov
jg
sbb
repz
jp
mov
call
je
pop
pop
fistpl
pop
xchg
mov
aam
push
cmpsl
outsb
popl
fcmovbe
ficoml
lcall
push
imul
je
lds
push
or
andb
sub
xor
xchg
xor
fimuls
inc
cmc
imul
aam
jne
vmwrite
movl
dec
pop
mov
mov
mov
inc
pop
jne
daa
and
mov
cltd
imul
pop
fldcw
lock
mov
lds
cwtl
popl
dec
jbe
ret
and
pop
roll
out
mov
gs
adc
push
cmpsl
jno
cmp
mov
gs
test
test
and
add
sbb
xchg
movsl
notb
in
mov
jecxz
in
dec
sbbb
mov
aad
mov
add
mov
popf
sti
xchg
inc
divl
mov
xchg
xchg
test
lods
dec
push
sbb
fsubrl
xchg
jbe
jnp
test
inc
test
add
add
out
push
das
and
sbb
or
in
jo
pop
adc
repz
inc
add
fcoms
pop
nop
pop
push
sub
dec
arpl
dec
push
adc
ljmp
mov
push
lea
aas
adc
in
push
sub
add
jmp
pop
or
rol
dec
add
dec
jo
loop
cld
or
les
bound
cwtl
setb
in
adc
mov
add
xor
daa
dec
stos
shll
cwtl
cmp
pushf
rclb
into
cwtl
lret
mov
and
adc
cmp
clc
imul
lods
jne
push
adc
pop
mov
dec
xor
std
ss
loope
xor
rorb
loop
mov
je
mov
jmp
std
and
rcr
xlat
inc
mov
xchg
in
pop
xlat
inc
push
sub
mov
add
push
hlt
push
insl
ss
and
inc
push
cmpsl
xlat
fisubs
repz
out
dec
mov
ret
into
add
mov
std
in
sbb
sub
cwtl
inc
dec
subb
lret
mov
pop
sti
nop
mov
scas
pop
fwait
jb
cmp
sbb
out
pop
sbb
mov
stc
cmp
out
or
je
cmc
lods
out
sub
xor
cmpsb
mov
or
cmp
xchg
ds
cmp
out
jb
mov
dec
lds
mov
xor
sbb
enter
insl
stc
sbb
jl
inc
loop
mov
fcmovu
xor
aam
xchg
mov
into
push
inc
mov
ss
sub
pop
les
lods
mov
stos
into
adc
hlt
dec
outsb
nop
mov
insb
out
mov
or
and
int
push
or
nop
sub
mov
or
fstps
push
jo
mov
hlt
fwait
sub
fcmovnbe
pop
add
bound
and
test
add
test
cmp
pop
jg
jl
inc
pop
lret
mov
and
push
mov
imul
fistl
data16
mov
pop
fidivrs
lret
inc
js
adc
pop
mov
in
fbstp
shll
mov
fstpl
cltd
leave
adc
inc
ja
mov
mov
add
push
jae
fs
lret
std
call
and
and
inc
js
push
stos
adc
out
mov
ss
mov
jg
aas
hlt
insl
xchg
movsl
add
ret
das
test
cmp
stos
fnstsw
mov
inc
push
dec
dec
or
imul
add
add
pop
sbb
aam
bound
pop
sbb
add
and
js
adc
sbb
add
popa
push
sbb
xchg
mov
mov
adc
es
imul
lods
scas
jne
cli
sbb
mov
sub
pop
push
mov
sub
push
popf
ja
test
xor
loope
adc
xchg
add
in
mov
xchg
mov
and
jno
and
lret
dec
shr
mov
mov
add
add
cmp
add
add
add
add
test
add
add
add
add
fadds
add
add
add
add
add
add
add
add
add
add
add
add
clc
add
add
add
add
add
add
add
add
push
addb
add
add
stos
stos
add
ja
adc
call
jb
jne
insb
push
jb
je
arpl
loopne
add
push
pushl
call
push
mov
pushl
call
pushl
call
add
add
add
add
add
and
add
add
add
add
fadds
inc
add
adc
sbb
add
insb
add
add
add
dec
add
add
add
call
add
add
add
add
mov
add
add
add
push
add
push
push
push
jb
push
gs
add
dec
je
fs
fiaddl
sub
inc
sbb
fstpl
lea
pop
test
add
add
in
or
inc
subb
ljmp
clc
cmp
or
or
mov
cld
test
add
ja
adc
push
insb
leave
cmovno
scas
rolb
adc
add
enter
fdivr
add
in
in
adc
add
adc
xchg
add
xor
adc
call
push
add
add
lcall
aad
cld
add
push
and
addl
cld
inc
xor
enter
add
incl
jne
lret
roll
lret
xor
adc
call
cwtl
adc
push
add
add
sub
add
add
scas
add
add
add
or
xor
add
insl
jb
je
js
outsl
outsl
outsb
or
jo
insb
mov
outsb
jb
outsb
jns
jp
gs
inc
gs
sub
popa
push
imul
push
add
insb
jns
outsl
outsl
imul
je
je
je
insb
add
add
test
add
add
add
add
sbb
add
add
mov
add
cmpsb
adc
iret
popf
adc
data16
loop
xchg
adc
jne
xchg
outsb
into
mov
icebp
outsl
lods
jge
movsb
inc
loope
inc
mov
shr
fistps
dec
popf
sub
dec
in
sub
jns
dec
dec
shrl
sbb
rep
lods
cmp
data16
jno
fcomps
dec
out
jo
inc
std
lock
or
out
mov
loopne
sub
or
movsb
dec
aam
mov
ret
mov
loopne
cltd
clc
pop
jno
jp
ret
mov
sub
cltd
jno
jno
icebp
pop
cmp
or
sahf
cmp
xlat
loop,pn
incl
jno
arpl
lods
adc
or
addr16
inc
lret
sti
push
dec
add
lods
add
rcrb
pop
pop
data16
inc
std
and
inc
sub
mov
or
int3
cmp
and
test
cmc
xorb
cld
sarb
ss
dec
popf
push
inc
mov
add
imul
vmovaps
jb
jbe
mov
ret
xlat
sbb
sbb
inc
ljmp
pop
mov
jbe
movsl
bound
and
cmpl
mov
xor
jae
adc
sub
mov
cltd
ficoms
movl
adc
arpl
out
int
mov
xor
lds
jmp
cli
pop
jg
fwait
or
xor
jmp
mov
push
xchg
xchg
push
orl
mov
push
sub
sbb
movsb
xchg
dec
shlb
out
pop
aas
lea
pop
lock
daa
inc
stos
outsb
lods
call
jns
out
sbb
int3
es
lea
ljmp
sarb
push
cwtl
cli
arpl
loop
std
hlt
and
fmull
out
adc
insb
das
lret
jp
jnp
xchg
popa
addr16
loope
xchg
xchg
mov
mov
mov
loop
lods
shl
mov
xchg
and
movsb
lahf
movsl
aad
push
frstor
mov
pop
stc
mov
xchg
sub
mov
lea
cmpsb
jmp
imul
fcoml
mov
fdivl
cmp
add
mov
sbb
out
xchg
push
xchg
mov
rol
and
icebp
xor
mov
enter
in
sbb
pop
cs
in
mov
movsb
aas
or
lock
sbb
xor
clc
pop
ficoms
outsb
lods
or
fdivl
repz
lret
int3
and
xchg
mov
test
rcrb
sar
cli
cltd
and
mov
popa
xchg
aaa
dec
xchg
cbtw
xchg
lods
xlat
jae
xor
fxtract
insl
repnz
inc
popa
xor
mov
jns
aad
push
and
daa
and
mov
cmc
mov
add
mov
stos
jg
cmp
addb
ds
jne
cmp
int3
jns
cmp
mov
ds
sarb
outsb
repnz
mov
out
pop
xchg
adcl
mov
dec
popa
jle
mov
dec
out
xor
insl
sbb
data16
add
pushf
sub
fcompl
fs
out
loope
jae
ret
repz
xchg
rolb
push
mov
sar
dec
rorb
jp
mov
lock
mov
and
int3
dec
jl
xchg
and
sbb
push
and
jne
in
sti
or
xor
stc
ffreep
dec
dec
dec
mov
popf
mov
ljmp
cld
add
mov
out
mov
sti
js
cmpl
pop
scas
icebp
lock
or
out
into
fisubs
gs
sahf
push
fs
js
hlt
repnz
push
inc
add
or
sbb
cmp
in
jp
dec
or
mov
loopne
mov
inc
inc
into
or
inc
xor
nop
flds
lahf
lds
inc
mov
or
ds
inc
push
xchg
sahf
popa
jo
mov
test
stc
pop
fcmovbe
sbb
pop
mov
pusha
jno
or
inc
dec
jnp
mov
hlt
out
push
outsl
insl
rorl
rorb
adc
xchg
nop
out
dec
rcll
sbb
lods
cmp
jge
xor
jo
out
sub
loopne
imul
or
cmp
iret
es
adc
xchg
xor
ds
aas
jb
hlt
and
fists
test
pop
mov
fcoms
aad
mov
xor
inc
cmp
cmpb
pusha
icebp
sbb
or
bound
stos
scas
loopne
ja
xchg
mov
insl
xor
fs
xchg
rcrb
cmp
mov
aad
mov
hlt
mov
loop
xor
dec
js
fistpll
aad
mov
sahf
sar
imul
fiadds
cmpsl
insl
cltd
out
push
lcall
add
pop
bswap
icebp
add
add
add
mov
repnz
ffreep
mov
add
aas
mov
in
lret
mov
or
pop
cltd
fadds
add
jecxz
sahf
test
dec
push
frstor
mov
adc
cmp
xlat
arpl
sbb
mov
or
inc
int3
hlt
or
mov
movsb
mov
adc
fnstenv
pop
cmpsb
sbb
pop
shll
out
hlt
sbb
lods
push
bound
pop
adc
sbbl
cltd
and
push
scas
lcall
pop
pop
movb
or
add
jecxz
xchg
add
mov
stos
jecxz
cmp
dec
or
out
mov
fwait
nop
stos
or
sub
repz
out
cmc
jecxz
mov
scas
popf
pop
les
add
ljmp
jb
push
sbb
jg
mov
lods
loop
iret
cmp
jg
sbb
xchg
adc
push
push
cmp
sbb
andb
mov
jmp
jnp
cmp
test
inc
xor
movsl
dec
mov
jo
xchg
dec
fidivs
test
sub
aas
inc
outsb
sub
mov
mov
movsl
arpl
notl
outsl
sub
cltd
out
inc
filds
shrb
imul
sbb
xchg
sarb
lock
repz
mov
add
adc
pop
iret
in
sti
mov
repz
xchg
jno
mov
and
push
inc
mov
imul
cmp
out
cmp
jp
aam
xchg
mov
lods
or
mov
js
xchg
push
and
jg
popf
cmp
add
mov
adc
add
or
ss
fwait
and
push
sti
cmp
data16
ljmp
rcrb
adcb
mov
cwtl
mov
insl
movsb
lods
test
lret
mov
lcallw
rolb
mov
xchg
insl
adc
cmp
adc
jmp
jmp
sbb
jb
push
adc
sub
popf
test
pop
inc
sbb
jns
sbb
cmp
daa
jns
jl
mov
insl
movsb
gs
jp
lret
mov
lea
cld
add
mov
jae
out
shlb
repnz
mov
jbe
push
mov
mov
adc
push
hlt
pop
inc
jo
fadds
stc
dec
pop
mov
pop
fs
cmp
aaa
push
mov
cmp
enter
es
fsubr
int
dec
fwait
sub
dec
pop
das
movsb
mov
lahf
icebp
xor
xor
es
leave
pop
cmp
lods
lea
inc
fdivp
pop
sub
xor
out
ja
xor
sti
aas
jno
sub
sub
mov
sahf
imul
into
into
adc
outsb
sub
imul
js
sub
inc
pop
aad
or
es
lret
inc
in
rolb
sub
push
scas
push
and
cmpsb
pop
mov
popa
cmp
push
jp
andb
andl
inc
idivb
lahf
lcall
test
mov
sbbb
xchg
fldt
mov
mov
xor
ds
loope
pop
inc
stc
popa
cmp
sbb
popf
lock
xor
inc
stos
xchg
leave
xor
movsb
dec
jmp
loopne
scas
or
ret
icebp
xchg
stos
aam
popf
inc
jmp
ret
add
adc
lcall
std
add
mov
arpl
ljmp
xor
and
dec
pop
dec
in
dec
daa
fwait
mov
hlt
rorb
push
mov
dec
xor
push
push
inc
adc
add
insl
xchg
inc
push
stc
adc
and
fnsave
xor
rorb
stc
lods
mov
push
dec
pop
or
int
push
mov
jl
dec
cmp
scas
xchg
push
imul
cmp
test
push
es
add
sub
and
fstpl
std
xor
ja
mov
mov
repz
insl
cs
dec
xor
push
jmp
push
mov
adc
shrl
jbe
dec
hlt
fbstp
test
stos
cmp
ret
aam
dec
es
pop
sub
push
cmp
mov
gs
xlat
mov
test
cli
jge
and
sub
mov
push
jno
shlb
adc
cmp
outsl
mov
xchg
xchg
mov
sarb
js
xchg
inc
rcrb
shld
popf
xor
xor
inc
dec
mov
stos
arpl
add
mov
iret
pop
and
fisttpll
pushf
xchg
jl
pop
jecxz
cmp
mov
test
mov
popf
out
fildll
leave
jae
jl
stos
decl
cwtl
push
mov
lods
push
pop
jmp
jae
mov
or
das
lret
lahf
push
jecxz
sub
jnp
test
fmul
pop
test
mov
mov
jg
and
icebp
xor
dec
xor
jnp
xchg
xchg
out
sbb
fisttpll
mov
xchg
mov
sti
xchg
sbb
inc
fistpll
mov
leave
fbstp
and
push
movsl
dec
or
das
dec
icebp
jo
xchg
outsb
jns
vmaxps
in
adc
pop
cmp
xchg
iret
inc
mov
cmp
push
nop
mov
push
test
xchg
pushf
mov
cltd
pop
in
mov
gs
dec
fldl
inc
jo
cmpsb
andb
subb
cmp
xor
jmp
mov
rolb
cmp
in
scas
icebp
inc
mov
mov
movsl
rolb
jb
adc
or
in
rcr
mov
stos
fbstp
push
cmp
add
xchg
xor
cmpsl
adc
xor
fnstcw
cmp
mov
xlat
add
add
xor
out
cmpsb
aam
add
push
cmpsl
mov
sbb
ds
pop
jno
add
ss
iret
xchg
sarb
rcll
js
aaa
sub
jl
sbb
scas
cli
fxch
sti
xor
jge
rol
or
lahf
lds
gs
hlt
rcll
push
inc
ljmp
js
and
pop
pusha
inc
sbb
into
les
push
push
ret
push
mov
test
xchg
push
adc
adc
lahf
add
or
xchg
xor
sbb
sub
notl
or
rolb
pushf
push
arpl
cmpsl
jmp
push
arpl
cmpsb
add
or
pop
jbe
out
dec
jmp
or
pop
cmp
idivl
jle
mov
pop
cmp
call
dec
addr16
pop
loopne
clc
xor
push
lods
jbe
test
push
mov
insb
iret
loopne
rcll
xor
iret
push
xlat
xor
cmpsl
hlt
push
xchg
cmc
and
or
call
jecxz
std
in
loopne
add
les
mov
out
pusha
pushf
lret
jns
leave
rcrl
adcb
jnp
scas
arpl
js,pn
push
cld
lret
scas
out
and
dec
jmp
add
xor
fists
push
or
stc
je
nop
inc
and
pushf
mov
sub
add
ret
mov
cmpb
loop
sub
push
stos
jmp
mov
lock
pop
popf
cmp
xchg
es
xchg
push
add
adc
add
in
fstl
mov
mov
and
lret
pop
xor
imul
or
xchg
push
inc
sti
notb
push
repz
push
cmp
push
int3
mov
pop
xchg
xor
jg
adc
xchg
add
xchg
rol
xorb
stc
mov
pop
clc
test
push
cmp
mov
push
movsb
in
pop
into
sbb
xchg
clc
push
and
add
popa
sti
nop
mov
jecxz
add
adc
xchg
lods
cmc
js
ds
icebp
scas
or
js
dec
xchg
sbb
pop
pop
mov
data16
add
mov
mov
stc
aas
cmp
test
in
dec
sbb
out
test
adc
cwtl
dec
mov
loopne
inc
cmc
pop
imul
adc
les
mov
cmpsb
sbb
jo
adc
jle
mov
xor
rcll
int
shll
adc
dec
sbb
sub
or
xchg
imul
push
in
nop
mov
mov
mov
mov
data16
loope
adc
adcl
cltd
xchg
inc
and
sub
jge
adc
stc
ss
cmp
mov
jnp
ret
xchg
jmp
inc
ljmp
dec
sbb
xor
pop
jmp
stos
insl
std
cld
cmp
insb
mov
mov
sahf
mov
fdivl
popl
pop
mov
scas
xchg
push
mov
lahf
rclb
dec
dec
cmp
aaa
sarl
shl
dec
mov
sub
idivb
nop
shll
sub
cmp
std
lods
push
or
fwait
and
movsl
bound
mov
lds
test
shrb
dec
add
inc
push
pop
mov
rcrl
fcoml
push
mov
pop
sbb
lret
repz
adc
mov
ja
cld
fistl
sbb
adc
adc
clc
jns
rolb
mov
lret
xor
or
movsl
ljmp
test
shrb
outsl
test
fcoms
test
add
loopne,pt
rorl
cwtl
mov
fidivrl
test
xor
mov
not
push
icebp
adc
xchg
inc
test
bound
outsb
out
jb
loop
xchg
and
sub
addl
pop
xchg
pop
jno
mov
lock
and
jb
aam
jae
xor
inc
and
and
pop
pushf
clc
call
sub
push
sbb
movsl
aam
stos
xchg
push
aas
pusha
adc
rcll
jne
hlt
enter
mov
cmp
pop
xchg
sub
mov
or
movsb
xor
clc
ret
ficompl
jb
ljmp
mov
xchg
add
inc
popl
sub
out
ret
xchg
pop
vmovaps
ja
push
adc
and
in
insl
cmp
push
outsb
das
repz
pop
xchg
imul
pop
cmp
data16
mov
je
push
dec
mov
mov
scas
push
mov
cmp
stc
mov
jle
and
xchg
ljmp
in
lcall
pop
sti
push
or
cmc
test
mov
cmovge
cmc
jmp
mov
inc
lcall
or
sub
aaa
movsb
or
sub
fwait
jnp
xchg
and
dec
add
or
sbb
xchg
push
cmp
cwtl
dec
insb
data16
mov
in
dec
xlat
mov
mov
adc
and
or
sub
cli
jb
mov
mov
fsubrp
or
fdivr
fisubrl
jg
loopne
mov
adc
rcrl
inc
mov
dec
push
push
adc
xchg
adc
imul
cmc
outsl
push
jl
cmpsl
jmp
stos
in
dec
out
les
loop
out
dec
aaa
ljmp
pop
mov
cmpsb
jecxz
mov
rcr
js
jp
lds
pop
mov
sbb
shl
das
mov
inc
icebp
cmp
dec
testb
mov
popf
mov
push
popa
pop
aaa
lret
push
aaa
cmp
jp
sub
es
jle
sub
or
out
jl
cmp
repnz
and
lock
add
das
ss
into
ficompl
pop
xchg
shl
cmp
cmp
mov
lods
push
jnp
lds
fcmovnb
and
nop
aas
ficomps
movsl
mov
lret
push
leave
dec
lcall
adc
mov
lahf
xchg
jno
xor
push
mov
mov
je
adc
adc
aad
in
fs
roll
add
outsl
mov
xchg
xor
xchg
pop
in
cmp
mov
scas
add
in
dec
in
mov
dec
lods
push
icebp
lcall
orl
push
test
rep
test
int
ja
movsl
pop
jg
mov
jle
pop
dec
aaa
addr16
mov
pop
stc
scas
cmpsl
daa
std
icebp
shlb
std
mov
mov
sbb
mov
aad
imul
mov
leave
mov
adc
jg
fmull
xorb
mov
mov
and
rclb
push
cmp
xchg
cmc
pop
mov
repz
iret
cmp
ret
inc
int3
adc
jl
mov
aas
mov
clc
sub
sub
jno
adc
in
pop
test
insb
xchg
in
test
int
ret
push
iret
cmp
addl
das
fs
cld
push
loope
mov
loopne
jl
cli
and
xor
les
in
and
lret
ja
fcoms
dec
imul
sbb
daa
call
mov
push
ret
adc
xchg
pusha
push
add
sbbl
hlt
jno
bound
ds
mov
sbbb
aaa
push
xor
mov
test
clc
stos
fistpll
cmp
icebp
sub
in
aam
jb
outsl
jmp
orb
xchg
xchg
out
bound
xlat
cmpsb
and
inc
adc
mov
mov
ror
xchg
or
mov
push
rcrb
push
js
loopne
dec
lcall
push
lret
xchg
mov
mov
out
test
add
lret
loope
js
mov
in
or
loope
dec
out
rclb
fsubr
mov
pop
mov
jnp
or
loopne
insl
jo
lds
or
cmpsb
leave
imul
jno
mov
and
pop
mov
cmp
jmp
push
stc
pop
xchg
dec
bound
jnp
mov
in
es
ja
sbbl
xchg
shlb
cmpl
push
enter
loop
mov
cwtl
pop
bound
xor
jmp
fisubs
pop
inc
mov
add
aad
aad
cmp
scas
shll
lahf
in
pop
hlt
push
mov
jmp
nop
mov
sahf
mov
mov
fstpt
cli
add
cs
lock
jbe
mov
cmp
cmpsb
leave
scas
xchg
fwait
cmp
add
add
add
sbb
add
add
mov
add
add
add
add
add
enter
add
add
add
add
nop
add
add
jns
add
add
add
add
add
add
add
add
call
pop
add
add
adc
add
stos
stos
add
ja
mov
incl
incl
add
add
gs
add
add
add
add
add
add
add
add
add
and
add
outsl
out
fiadds
inc
add
add
add
add
cmp
addb
add
add
pop
jae,pn
push
arpl
je
decb
add
jne
push
inc
aaa
add
jl
fidivrl
mov
adc
mov
lea
inc
testb
cs
adc
test
incl
adc
clc
add
adc
adc
jge
out
mov
lea
decl
mov
gs
inc
rolb
jbe
cmpl
add
adc
xor
push
push
call
cmp
add
dec
jle
push
cld
adc
mov
lea
add
adc
mov
clc
inc
roll
add
idiv
incl
cmp
add
add
push
lock
stos
add
add
add
add
add
add
mov
add
clc
add
add
push
imul
adc
dec
outsl
imul
arpl
outsl
xchg
add
inc
push
popa
gs
pop
add
insb
gs
gs
addr16
push
dec
jb
into
xchg
imul
arpl
add
add
add
mov
add
push
sahf
scas
movsl
xlat
mov
cltd
imulb
mov
bound
add
inc
and
push
fwait
bound
cltd
int3
xor
fldcw
repnz
stos
jne
inc
mov
stc
cld
je
xor
pop
cmpsl
pop
add
dec
jl
in
or
jl
jg
jb
and
shl
mov
sbb
enter
repz
push
repnz
gs
pop
cmp
mov
sbb
pop
arpl
pop
or
mov
mov
mov
les
ljmp
jb
out
fidivrl
fiadds
jecxz
jo
aad
sub
pop
and
movsl
jg
mov
loope
add
out
add
pop
aam
lret
sbb
inc
ljmp
push
in
jle
ret
mov
sub
or
fmull
mov
dec
mov
subb
sub
xchg
lock
and
sub
addb
orl
ljmp
push
sbb
push
cs
xchg
clc
xor
pop
fildl
sbb
cltd
cmp
mov
fisttps
je
adc
mov
stos
shl
mov
insb
leave
pop
mov
mov
mov
int
cmp
push
popa
lock
stos
outsl
add
push
test
clc
push
jb
in
lock
xor
daa
sub
or
or
push
sbb
jg
mov
jno
dec
int3
dec
xor
adc
jl
cs
adc
xchg
test
adc
pop
cmc
cmp
jl
push
mov
push
idiv
sbb
mov
das
jge
lock
enter
loopne
jecxz
mov
es
shrb
arpl
and
mov
pop
test
or
insb
push
fsubr
fdiv
rolb
xchg
iret
pop
adc
addr16
and
sti
xchg
lds
sahf
adc
sub
sbb
sbbl
fwait
orl
sti
outsl
add
jae
sub
add
jo
cmp
push
lret
ret
mov
in
notl
push
push
aam
mov
movsl
pop
mov
repz
test
mov
xchg
cmp
repnz
add
sarl
add
push
mov
cmp
pop
jmp
ljmp
in
jg
clc
fisubl
sbb
imul
mov
clc
xor
out
insl
jl
xchg
and
mov
gs
fwait
lods
xchg
repz
lret
ds
rol
dec
dec
int3
jle
add
mov
fs
cmp
iret
movl
fstl
lods
sub
inc
pop
mov
scas
fcomps
inc
jne
mov
hlt
or
inc
pop
iret
stos
mov
sub
popf
mov
mov
imul
mov
mov
stc
mov
sub
dec
pop
sti
mov
adc
aas
xchg
orl
lret
iret
jecxz
dec
sub
push
jb
repnz
mov
mov
int
je
cli
aam
out
fldt
in
dec
push
cld
sub
sub
arpl
inc
jmp
xchg
fists
dec
and
cmp
andb
pop
sub
jbe
dec
mov
or
inc
int3
dec
das
addl
in
xchg
inc
push
xor
pop
out
xor
std
push
jbe
test
ss
cmp
mov
enter
stos
shlb
mov
out
add
pop
push
sahf
adc
cwtl
jmp
mov
mov
stos
divl
mov
push
fcmovb
cltd
inc
mov
inc
loopne
fldcw
mov
test
out
test
cld
lea
sbb
xchg
push
movsl
xor
mov
mov
xor
adc
sti
push
iret
add
daa
into
or
fstl
enter
in
and
pushf
cs
subl
mov
insb
jno
xlat
sbb
push
test
adcl
jo
mov
ret
xchg
call
std
adc
and
je
rcll
in
imul
icebp
lret
mov
ret
push
mov
dec
mov
push
cmc
repz
test
xor
notl
add
inc
inc
das
mov
and
jle
not
sub
daa
add
or
mov
xor
shll
fildll
test
cs
mov
sar
fdivrs
jge
sub
data16
scas
sbb
push
xor
mov
loopne
mov
or
in
push
jp
shl
cld
aad
or
push
push
mov
mov
xchg
lahf
cmpsl
outsl
xchg
idiv
fs
ja
and
mov
and
push
jg
xchg
push
lahf
or
test
fwait
and
pushf
jg
cmpsb
jmp
jl
push
jecxz
xor
sub
fs
cmp
fcomps
fnstsw
fldpi
push
pop
xor
in
dec
shll
mov
shrl
outsl
jecxz
push
les
out
out
mov
xchg
imul
or
test
pop
sti
inc
lods
mov
lock
cmp
cmp
pop
les
in
pop
mov
pop
cs
mov
xchg
xchg
cmp
pop
or
pop
fsubl
fidivs
push
cwtl
mov
rcr
fstpt
in
int
cmpsl
call
adc
les
dec
jmp
lods
sbb
movl
rsqrtps
insb
loope
cmc
lds
shll
hlt
jbe
inc
push
aad
std
ja
adc
mov
mov
xor
xchg
addr16
dec
fnstenv
call
rolb
and
pop
ja
add
mov
dec
cld
les
mov
iret
imul
fwait
lea
jge
ss
push
dec
cmpsl
xchg
pop
pop
mov
ret
sub
mov
or
lcall
sub
xchg
mov
xlat
push
cli
lea
add
xchg
pop
add
push
add
pop
dec
negl
jg
dec
movsb
cwtl
ljmp
test
pop
test
push
stos
in
and
int
inc
dec
push
push
inc
fwait
add
ljmp
lods
dec
sub
add
xlat
repnz
sbb
sbbl
mov
inc
mov
add
in
mov
mov
push
push
rdpmc
mov
outsb
mov
sbb
imul
sub
sub
mov
add
in
or
jo
div
mov
xchg
pshufw
popa
push
call
cmc
addr16
cwtl
pop
dec
push
adc
test
aad
push
cmp
iret
pop
dec
inc
and
data16
sbb
mov
jb
cwtl
imul
xchg
scas
out
hlt
pop
cwtl
dec
fiadds
jle
fabs
roll
std
in
sbb
cmp
jle
sbb
addb
test
adc
xchg
adc
daa
jl
xchg
pop
sub
jo
into
mov
push
xchg
mov
mov
cmp
mov
icebp
lea
rorb
adc
mov
push
adc
xor
push
ret
add
sbb
lods
pop
jmp
rcr
fwait
xchg
jl
push
jbe
pop
fwait
xchg
xchg
and
pop
popf
sbb
aaa
pop
lcall
icebp
test
ljmp
int
adc
shrl
in
dec
je
xor
popf
stos
sti
js
push
out
sbb
enter
xchg
aam
dec
push
in
cmc
xchg
imul
mov
fdivrp
inc
dec
nop
dec
sbb
dec
test
jbe
xchg
lea
cs
leave
insb
jp
jmp
pop
idivl
push
aam
fdivs
pop
fldenv
lahf
in
ds
testl
lock
pop
inc
pop
fisttps
dec
add
dec
out
ss
into
vaesenc
adc
dec
xchg
shll
mov
popf
test
aaa
mov
enter
ret
push
dec
iret
xchg
xchg
push
leave
push
rorl
cmp
test
lret
inc
mov
and
add
or
outsb
cmp
sub
or
mov
test
mov
leave
mov
dec
pop
jecxz
iret
sbb
lods
inc
inc
cltd
jge
fcmovb
in
test
daa
scas
xchg
sub
xlat
jno
xor
mov
repz
addl
inc
mov
dec
xor
push
iret
pop
dec
jnp
push
or
dec
outsb
mov
incb
int
push
shl
insl
cmp
jg
and
sbb
cmp
and
ret
daa
stc
adc
fwait
in
cmp
mov
cmp
mov
pop
shll
out
xchg
imul
push
jmp
xor
jae
mov
inc
out
lea
push
cmp
sbb
and
jbe
loop
dec
cmp
scas
pop
das
les
ret
push
sbb
mov
fsubrp
out
movsb
mov
dec
push
movsb
or
movsl
mov
sub
mov
xchg
bound
jmp
push
aam
in
xchg
mov
add
pusha
or
xchg
cmp
adc
cmpsl
or
mov
adc
neg
aas
arpl
cmpsl
xchg
jns
push
fs
push
aas
rcll
sbb
stos
lds
inc
adcb
add
push
outsl
mov
lods
dec
mov
lea
loopne
popf
subl
adc
repnz
int3
int3
scas
jne
xor
lcall
or
rolb
xchg
mov
scas
jp
in
scas
mov
les
push
les
clc
pop
andl
out
mov
jmp
es
jo
xchg
fldcw
mov
add
loopnew
cltd
adc
mov
adc
cmp
dec
jmp
ss
imul
pop
test
jge
adc
push
es
jp
sbbl
rcl
popf
add
jle
dec
jp
jge
lea
js
xchg
inc
cld
xchg
push
inc
jb
sbb
push
xor
aaa
or
cmp
mov
jle
mov
sbb
push
in
dec
mov
sub
shlb
xchg
adc
sub
mov
std
mov
ja
push
push
dec
ljmp
dec
xor
sbb
add
gs
in
dec
cmp
push
sarl
cmp
xorl
out
fs
mov
cltd
dec
cmpsl
xor
sbb
stos
dec
sub
clc
xchg
ret
cwtl
sub
jnp
mov
xchg
vunpcklpd
pop
jle
xchg
in
lahf
rolb
outsb
xchg
jbe
adc
push
inc
enter
mov
rorl
inc
rolb
in
pop
cltd
jg
fsts
pop
leave
add
mov
clc
xchg
mov
js
into
sub
xchg
loop
xchg
in
jbe
scas
pop
repz
out
cld
jno
data16
mov
scas
je
dec
sub
addb
mov
sarb
cmp
iret
lret
mov
inc
ret
gs
pushf
push
dec
and
cmp
or
clc
iret
test
out
lea
sub
outsb
mov
leave
inc
fists
sbb
adc
mov
mov
jb
outsb
mov
in
dec
out
sbb
push
pop
sbb
pop
lret
xor
out
sub
fildl
cmpsb
pop
in
and
out
pop
outsl
into
loop
sub
test
movsb
aaa
daa
xchg
and
fcompl
dec
leave
rorb
jmp
xor
adc
dec
aaa
pop
or
xor
stos
dec
xor
mov
dec
sub
cltd
hlt
jmp
test
and
cltd
out
mov
and
push
loope
ja
xor
cmpsb
shll
fldenv
jae
add
push
pop
int
nop
fdivl
push
out
push
xchg
in
rcr
imul
xchg
or
imul
adc
out
out
cltd
pop
or
popf
aam
push
int
stc
xchg
adc
pop
int3
xor
jg
lea
cld
mov
add
lret
inc
test
ficoms
mov
mov
loope
js
cmpsb
jp
vphadddq
mov
mov
mov
adc
and
push
out
jl
outsb
mov
shl
xor
fdivl
loop
repnz
push
out
xchg
mov
out
dec
xchg
push
mov
inc
aaa
je
fists
sbbb
pop
xor
cmp
adc
lret
loop
js
mov
test
and
mov
subl
stos
ja
add
popw
inc
sbb
adc
dec
push
popf
frstor
adc
mov
insb
xchg
aaa
lock
lock
and
sahf
inc
inc
stc
iret
mov
push
out
mov
stos
or
dec
int
add
out
xchg
mov
addr16
add
setns
aas
or
jge
aad
xlat
lcall
xchg
clc
jno
int
addr16
lret
xor
sub
sub
xor
gs
mov
daa
or
mov
lods
and
cmp
scas
cld
aad
adc
inc
mov
repnz
aas
jae
ss
xor
lahf
sbbl
xchg
loop
dec
xchg
pushf
mov
mov
xor
xlat
ret
inc
add
repnz
and
pop
jns
and
adc
push
push
dec
leave
fwait
sub
or
out
cltd
popa
lds
test
xor
cmp
ss
popa
push
mov
out
sbb
jecxz
pop
push
rcrl
inc
xor
jle
iret
outsl
push
pop
je
loopne
jnp
cmpsb
push
out
xor
repz
xchg
sbb
jle
push
mov
push
mov
aad
inc
in
ds
mov
push
iret
aad
mov
test
dec
lock
or
xchg
jecxz
aaa
or
loope
fcoml
jge
mov
ss
test
add
cmp
push
pop
js
loope
adc
pop
rcl
pop
and
pop
bound
test
call
xchg
in
gs
int3
cmpb
addl
jb
inc
leave
fmull
xchg
sub
cmp
por
out
jge
test
lods
div
out
cs
lret
sarl
cwtl
fwait
cmpsl
pop
fmul
sbb
lea
or
or
inc
int3
jmp
or
or
pusha
xchg
fsubl
jo
cmp
xlat
pop
xor
push
push
inc
mov
cs
push
xor
push
addr16
xchg
inc
lret
jg
cmpsl
scas
rorl
insl
fwait
scas
xchg
call
jne
je
je
dec
adc
fwait
test
pop
pop
cwtl
pushf
stos
and
xchg
ljmp
popa
stos
or
cmpsb
mov
pop
mov
and
jb
lds
arpl
les
insl
cwtl
pop
out
int3
jne
push
sub
popf
or
and
insb
insl
gs
or
addr16
ret
push
sub
insb
inc
cmp
imul
pusha
mov
je
inc
sar
lcall
test
inc
shll
push
or
cmp
cmpsb
and
pop
stos
call
jns
fisubs
adc
mov
ds
xchg
clc
lret
jp
dec
aas
jp
xor
leave
lock
or
xchg
xchg
add
cltd
xor
arpl
jge
mov
add
stos
sub
adc
into
xchg
xchg
jno
mov
jmp
stos
je
sbb
mov
and
inc
lret
push
mov
test
lds
pop
in
push
or
pop
or
add
sti
mov
cmp
cmpl
shrb
neg
xchg
jg
inc
inc
push
jnp
fistl
pop
inc
icebp
jl
imul
cltd
adc
sti
mov
test
leave
and
fcomps
xchg
push
insl
add
in
adc
sub
adc
sti
jbe
je
roll
dec
xor
xlat
inc
mov
inc
and
outsl
mov
xor
in
in
fnsave
inc
xor
hlt
mov
add
jae
jle
cmc
loop
fsubrs
into
int
cmpsl
push
ret
cmp
mov
das
ss
repnz
add
xor
adc
daa
aaa
jne
scas
add
dec
jnp
test
cs
js
test
ja
xchg
add
iret
gs
mov
je
ret
inc
out
jno
xor
js
push
ja
popa
in
loopne
inc
or
xor
sti
ja
outsl
arpl
sbbb
pusha
adc
mov
cwtl
mov
pop
adc
jno
jo
pusha
icebp
mov
inc
shlb
or
pop
lret
xchg
mov
shlb
or
push
dec
ljmp
pop
frstor
jp
sub
sbb
aam
cmc
sub
imul
mov
call
flds
imul
fists
xchg
cmp
js
add
sti
loop
xchg
lcall
jmp
pop
icebp
into
mov
push
xchg
pop
sbb
lea
mov
push
int
dec
mov
mov
lds
sbb
xlat
or
xlat
inc
and
mov
ret
insb
add
xchg
jge
pop
pushf
mov
and
push
and
xor
add
sub
pop
lcall
push
stc
sbb
xor
pop
hlt
je
loope
lret
std
or
fldt
or
insl
das
mov
jmp
ret
mov
xchg
rcr
jo
push
cmp
out
inc
lds
dec
adc
lock
jno
adc
lret
daa
gs
loopne
jae
popa
xchg
push
das
rcrb
xor
mov
mov
mov
mov
sbb
xlat
ret
std
push
and
nop
inc
enter
inc
add
jle
mov
jb
lea
andl
repz
aad
scas
push
xor
mov
lret
sbb
jmp
push
or
mov
mov
lahf
popa
das
mov
call
and
cmp
sub
repz
jne
out
and
rolb
addr16
push
cmp
mov
pop
inc
jno
ja
aaa
ret
jns
dec
or
incb
xchg
out
leave
outsl
loopne
pop
mov
arpl
jge
sub
pop
shrl
push
lret
outsl
ss
xlat
push
cmc
mov
or
in
daa
push
andl
addr16
add
loop
jno
push
jb
ljmp
push
mov
mov
stos
xchg
into
les
or
or
sahf
sub
sub
ljmp
mov
jle
cmp
aaa
fs
mov
mov
pop
and
mov
sub
add
sahf
scas
push
add
add
dec
add
js
add
add
add
add
add
add
fmulp
add
add
add
add
add
ja
mov
dec
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
xor
add
pop
add
adc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
call
add
in
add
in
add
add
aam
add
int3
add
add
mov
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
sbb
add
and
add
sub
add
inc
xlat
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
xlat
add
add
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
push
fadds
add
add
add
add
add
add
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
add
mov
fadds
add
fadds
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
lock
add
add
inc
fiaddl
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
mov
fiaddl
add
add
xchg
fiaddl
add
add
jl
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
fcomp
add
loopne
add
in
fiaddl
add
fildl
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
js
add
cwtl
fildl
add
fildl
add
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
adc
add
sbb
add
and
add
sub
add
xor
add
cmp
add
inc
faddl
add
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
jo
add
js
add
mov
add
pushf
faddl
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
