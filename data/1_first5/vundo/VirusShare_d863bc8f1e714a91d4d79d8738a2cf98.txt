add
sub
rolb
rorl
jmp
add
test
call
mov
call
inc
and
rorb
rorb
rorb
movb
roll
rorl
sub
xchg
mov
push
xchg
mov
add
add
mov
or
add
mov
sub
push
xchg
mov
add
sub
push
pop
and
add
mov
sub
call
rorl
rorl
mov
cmovbe
test
shl
arpl
mov
lea
verw
push
pop
rol
call
dec
mov
verw
mov
cmovs
push
mov
mov
test
inc
stc
pop
pop
repnz
mov
add
xchg
mov
add
mov
roll
roll
sub
xor
rolb
mov
mov
xor
roll
xor
mov
push
sub
mov
sub
and
rorb
mov
mov
or
rolb
add
push
xor
push
push
and
roll
movb
or
mov
rorb
add
add
add
add
rorl
rorl
sub
xor
rorb
xor
roll
xor
mov
xor
xchg
add
add
sub
or
je
rorl
rolb
jmp
mov
inc
je
adc
loopne
pushfw
call
roll
rorl
rorl
mov
roll
rorb
movl
sub
xor
rolb
rorb
xor
movl
roll
roll
xor
push
and
mov
movl
or
movb
roll
rorl
add
and
add
sub
call
testl
add
add
add
add
push
mov
xchg
mov
sub
rolb
inc
dec
jne
sub
notl
jle
mov
add
aaa
popf
xor
imul
sar
pushl
sbb
rorl
roll
xor
mov
xor
mov
add
rorb
inc
dec
jne
sub
rorb
push
andb
inc
fcoms
add
adc
nop
mov
add
add
jae
mov
rorb
rorl
rorb
roll
rolb
xor
roll
mov
xor
rolb
rolb
xor
mov
add
rolb
inc
dec
jne
sub
movb
movl
rolb
movl
rorl
sub
xor
movb
rorl
xor
rolb
xor
mov
push
mov
rorb
add
mov
add
add
popfw
jmp
xor
and
mov
xlat
cmp
adc
sub
push
mov
mov
mov
pop
add
sub
jmp
jp
mov
inc
pop
xor
shlb
sar
roll
mov
mov
mov
mov
mov
mov
mov
pop
sub
add
nopl
push
jmp
into
out
cld
test
or
add
jmp
addl
jle
sub
mov
sbb
xlat
les
xchg
add
sub
call
bndldx
mov
inc
dec
add
sub
push
jmp
pusha
sbb
mov
js
mov
and
add
lea
add
add
mov
pushfw
call
push
popl
and
movl
movl
sub
xor
rorl
rorl
xor
movb
xor
push
roll
movl
xor
roll
rorb
xor
rorb
xor
mov
add
xor
add
sub
call
ds
aas
roll
mov
das
das
inc
mov
das
das
rorb
roll
xchg
mov
sub
push
add
xchg
mov
notb
inc
dec
jne
sub
nopl
notw
xchg
in
roll
rorl
rorl
sub
xor
rorl
xor
movb
xor
mov
subb
inc
dec
jne
sub
xorb
jo
add
add
xchg
in
shll
les
test
decl
incl
add
dec
jne
sub
push
mov
add
subb
inc
dec
jne
sub
xchg
notw
jg,pt
add
add
add
inc
ljmp
push
and
movl
rolb
or
rorl
rolb
movb
add
decb
inc
dec
jne
sub
movb
movl
pop
add
mov
popfw
jmp
js
fsubl
in
sub
sub
lea
add
push
mov
mov
mov
mov
mov
pop
sub
sub
lea
popl
push
and
call
push
popl
xor
lea
jae
verw
arpl
mov
mov
jbe
verw
mov
bt
shr
xadd
cmp
mov
stc
xor
shl
verw
cld
and
rorl
or
rorb
movl
add
roll
roll
rorl
sub
xor
rorl
roll
xor
roll
roll
mov
xor
mov
add
push
and
rolb
sub
xor
roll
xor
rorl
mov
xor
mov
arpl
movswl
ror
push
pop
jmp
mov
test
xchg
mov
cmovo
verw
lea
arpl
cmova
neg
cmp
jmp
xchg
verw
push
pop
push
pop
rcr
test
repz
push
xchg
mov
add
xor
add
and
rorl
rorb
rorl
or
mov
roll
add
jmp
push
call
push
popl
xor
mov
arpl
verw
arpl
dec
mov
dec
cmp
bt
mov
xchg
cld
and
rorl
rorl
roll
or
movl
add
xchg
mov
add
xor
inc
dec
xchg
bndstx
pushl
add
mov
xchg
mov
sub
test
add
verw
cld
push
push
movl
mov
xor
rolb
roll
xor
rorb
roll
xor
mov
add
and
add
or
add
sub
mov
mov
xchg
lea
add
sub
sub
sub
push
jmp
dec
fsub
mov
inc
je
adc
loopne
jmp
pop
aas
or
push
clc
shll
aaa
movsb
or
or
lds
dec
sub
daa
aam
pop
cli
pushfw
sub
xchg
mov
call
push
popl
add
call
pop
shl
std
std
pop
subw
jecxz
movb
push
rorl
roll
xor
rorl
mov
xor
rorl
movl
xor
mov
add
xor
add
incb
inc
dec
jne
sub
rorl
cwtl
cmp
xchg
add
pop
pop
push
decl
add
add
and
add
incb
inc
dec
jne
sub
nopl
notl
xchg
clc
js
and
mov
add
add
add
incb
inc
dec
jne
sub
movb
movl
rolb
rolb
sub
xor
rorl
roll
xor
rorl
movb
xor
mov
sub
mov
popfw
jmp
pop
in
sbb
jmp
seto
push
and
call
push
popl
and
call
or
add
add
mov
rorl
add
cltd
ja,pt
add
add
add
and
pop
icebp
pop
cmpsb
loopne
add
inc
and
roll
and
rorl
mov
or
movl
sub
xchg
mov
push
xor
popl
call
sub
ror
add
mov
push
rorb
xchg
mov
sub
notb
inc
dec
jne
jle
mov
decl
imul
or
fwait
xor
das
xor
add
hlt
pop
pop
sbb
int
adc
inc
andl
out
test
mov
push
rcll
xor
push
stc
cmp
loop
arpl
fidivrs
xorb
adc
adc
mov
movb
rolb
or
rorl
add
xorb
inc
dec
jne
enter
dec
dec
mov
orb
dec
fwait
dec
dec
dec
insl
and
rorb
dec
xor
mov
mov
mov
data16
mov
dec
dec
or
int
push
dec
dec
shlb
dec
dec
dec
dec
rol
xchg
testl
insl
enter
add
negb
inc
dec
jne
jge
rcll
ljmp
int
xchg
adc
fildl
push
clc
pop
cmp
and
xorl
adc
adc
dec
outsl
jl
pop
mov
jmp
es
mov
cmpb
jne
jnp
icebp
push
inc
sub
out
sub
imul
xchg
popf
adc
loopne
pop
aas
or
push
clc
shll
aaa
movsb
or
add
ret
pop
loopne
scas
add
add
sahf
xchg
shrl
call
mov
incl
movsb
add
add
sub
and
add
decb
inc
dec
jne
sub
add
add
xchg
xchg
add
add
dec
and
mov
add
add
movsl
add
add
add
add
add
imul
add
add
and
and
mov
add
add
adc
sub
add
add
aam
and
mov
xor
add
add
sub
decb
inc
dec
jne
sub
movb
movl
sub
mov
xchg
mov
add
popfw
jmp
sbb
addr16
dec
movl
rorb
roll
roll
movb
rorb
mov
add
push
push
push
movb
mov
mov
add
add
and
add
sub
pop
mov
push
add
call
push
popl
and
jbe
inc
cmovbe
movzbl
xchg
verw
arpl
mov
cmp
lea
xchg
mov
je
movzwl
cmp
bts
inc
xor
rcr
cmp
push
pop
lea
cld
movl
roll
mov
push
rorb
movl
mov
xor
rorl
rorl
mov
xor
roll
rorb
xor
mov
add
add
add
mov
add
cpuid
lea
push
mov
pop
bndstx
add
add
cmp
jne
jmp
setl
roll
movb
jmp
xor
rolb
and
inc
and
push
rorl
movl
xchg
mov
sub
sub
push
push
add
mov
xor
add
sub
mov
add
call
push
popl
or
mov
add
roll
mov
xchg
mov
sub
cmp
jne
pushfw
call
push
popl
and
call
rorl
and
movb
movb
or
call
out
lret
js
out
rolb
mov
add
nop
push
add
mov
negb
inc
dec
jne
sub
nop
notl
jg,pt
incl
add
add
push
sub
cli
sub
and
inc
and
or
movl
rolb
movl
add
decb
inc
dec
jne
sub
addb
loope
push
add
mov
notb
inc
dec
jne
sub
notw
cltd
jle
ret
add
add
or
xchg
add
add
roll
add
xchg
add
repz
jg
faddl
add
cmp
jmp
or
xchg
mov
sub
call
arpl
mov
incl
add
decl
ljmp
pop
rolb
inc
dec
jne
sbb
and
flds
add
rep
rcrb
add
nop
add
add
add
movsb
repnz
add
add
add
add
add
add
cltd
loopne
sbb
and
and
add
add
sti
add
add
pop
js
ljmp
jo
pop
cmp
mov
dec
dec
dec
pop
pop
push
lret
into
lret
push
data16
leave
leave
leave
popf
dec
out
jg
leave
leave
popf
push
out
insb
popf
dec
out
mov
leave
leave
sti
out
popf
push
out
jp
leave
leave
push
push
out
jle
out
rorl
rorl
rorb
xor
mov
add
popfw
subw
cwtl
inc
repnz
add
notl
jg
add
add
push
sub
xlat
mov
sbb
add
mov
or
add
or
add
rolb
inc
dec
jne
sub
nop
notl
jg,pt
std
add
lods
adc
jl
mov
add
add
mov
pop
add
add
test
decl
add
rorl
or
add
mov
popl
add
mov
call
jge
fstps
push
dec
test
add
xchg
mov
add
notb
adc
fucomi
cmp
mov
and
inc
push
nop
mov
lret
test
cmpsw
push
std
repnz
sar
lahf
in
mov
mov
test
xlat
jmp
insl
mov
sbb
cli
stos
or
mov
push
and
fstps
fwait
cmp
jbe
in
add
push
dec
dec
outsl
jl
pop
mov
subb
push
adc
jmp
cmpb
jnp
icebp
push
inc
sub
jmp
scas
dec
fsub
mov
inc
je
adc
loopne
pop
aas
or
subl
rclb
pop
inc
sub
clc
xor
roll
rorb
xor
roll
mov
rorl
xor
mov
add
decb
inc
dec
jne
test
cmp
ret
mov
add
movsl
xor
aam
add
push
enter
add
add
out
imul
roll
aam
lea
xor
add
add
add
subb
inc
dec
jne
and
and
adc
mov
mov
loope
je
adc
loopne
pop
mov
clc
push
ss
mov
lahf
and
jmp
mov
aam
jb
inc
mov
mov
mov
xchg
xchg
add
sub
sub
sub
sub
notw
or
add
add
nop
loope
add
cltd
jg,pt
add
add
fsubrp
nop
lock
add
add
or
add
rolb
inc
dec
jne
add
jle
add
int3
add
add
add
sbb
add
add
add
sub
decl
fyl2xp1
bound
dec
stc
incl
dec
cmpsl
sbb
inc
test
call
and
decl
inc
and
cmp
decl
inc
addb
jne
sbb
icebp
add
je
add
xchg
lods
push
or
pop
dec
push
ffreep
mov
pop
pop
fwait
orl
pop
inc
maxps
cmpsl
call
idiv
fs
push
faddp
pop
push
lea
nop
mov
or
cmpsw
push
std
repnz
sar
pop
xor
sub
push
jmp
test
xor
imul
pop
push
mov
mov
mov
pop
lea
push
pop
xorb
inc
dec
jne
cld
xchg
inc
jge
jge
std
mov
mov
sbb
jge
mov
addb
addb
jge
cli
icebp
pop
addl
adcb
lcall
add
add
or
add
popfw
rolb
sbb
fstl
lea
add
add
icebp
incl
add
or
jmp
pushl
add
add
and
add
mov
rorl
mov
xor
roll
mov
xor
rorb
xor
mov
add
popfw
jmp
xlat
je
sub
sub
bndldx
nop
jmp
sub
xchg
roll
rorl
mov
xchg
mov
sub
sub
call
movb
movl
and
mov
rorb
movl
or
mov
and
mov
verw
neg
mov
cmovne
neg
test
cmovp
mov
xchg
xor
verw
xchg
mov
xchg
inc
cld
push
movb
mov
sub
xor
rorb
mov
rolb
xor
rorl
roll
movl
xor
mov
or
add
xchg
mov
add
xor
pushfw
call
rorb
movb
and
rorl
or
add
mov
call
cs
adc
inc
pop
jnp
popa
xchg
mov
cltd
jb
int
mov
std
std
push
push
add
xchg
mov
xor
add
or
add
nopl
push
roll
mov
roll
xchg
mov
sub
incb
inc
dec
jne
sub
notb
xchg
adc
jnp
lods
rorb
roll
sub
xor
rolb
xor
rorl
xor
mov
notb
inc
dec
jne
sub
notw
js
push
rolb
xchg
mov
sub
decb
inc
dec
jne
sub
movb
movl
movb
rolb
xchg
mov
sub
push
push
sub
mov
or
add
or
add
popfw
jmp
pop
jno
mov
dec
and
inc
and
mov
push
and
call
rorl
mov
rorb
and
rorb
or
xor
test
jmp
cmp
verw
mov
shl
xor
lea
dec
ja
push
pop
inc
inc
movsbl
xchg
cmp
xor
sbb
mov
rcr
arpl
cld
mov
add
add
and
mov
rorl
movl
or
mov
roll
rorl
add
mov
pushfw
sub
mov
call
mov
mov
and
mov
roll
or
call
xor
inc
xchg
testl
add
add
adc
add
push
push
push
rorl
and
movl
or
movl
rorb
rorb
add
and
add
or
add
negb
inc
dec
jne
sub
roll
insb
push
mov
incl
movsb
add
add
sub
notb
inc
dec
jne
sub
rolb
xor
mov
incb
inc
dec
jne
sub
movb
movl
add
xchg
mov
mov
add
popfw
jmp
aaa
es
fsts
call
mov
mov
rorb
rorb
roll
mov
roll
rorb
roll
roll
roll
rorb
rorb
sub
xchg
mov
push
rolb
xor
rolb
rorb
mov
xor
movb
movl
mov
xor
mov
add
sub
mov
sub
xor
rorl
mov
movl
xor
rorb
roll
roll
xor
mov
add
lods
pushfw
sub
xchg
mov
sub
xchg
mov
call
ds
xchg
cwtl
lods
cmp
pop
call
push
rolb
rorb
mov
xchg
mov
sub
and
add
addw
inc
add
mov
decl
incl
add
dec
and
mov
rorl
sub
xor
mov
mov
xor
mov
rorb
xor
mov
xchg
mov
sub
popl
call
addr16
gs
jae
sub
and
push
gs
add
add
rorl
fcmove
and
add
cmp
add
mov
icebp
jmp
dec
mov
and
mov
test
pop
pop
sub
pop
popa
and
mov
ljmp
cmpsl
push
xor
push
adc
jb,pn
repz
sti
es
add
add
call
stos
lods
pop
sub
add
add
dec
bound
add
or
add
aaa
fimull
cmpsb
add
add
ret
mov
mov
add
lods
mov
mov
add
jo
fdivl
inc
xchg
xor
xchg
testl
pop
add
add
adc
test
insl
enter
add
jmp
sbbl
add
pop
aam
es
mov
mov
xchg
sub
roll
std
add
add
test
xor
and
enter
divl
mov
aam
and
std
add
add
add
addr16
addr16
jmp
imul
add
rorb
rorb
sub
xor
mov
xor
rorl
xor
mov
call
sub
loope,pn
in
cld
mov
push
mov
rorb
xchg
mov
sub
rorb
inc
dec
jne
pop
roll
mov
add
add
rolb
add
add
add
add
pop
mov
vmwrite
call
jns
cld
decl
cmp
add
xor
add
or
add
xorb
inc
dec
jne
xlat
mov
xor
push
ret
in
sbb
rcll
test
push
push
push
push
fucomp
repnz
test
ljmp
pop
shll
and
enter
enter
sahf
jbe
imul
pop
mov
sahf
lahf
dec
adc
pop
lcall
popa
push
sahf
xchg
sbb
popa
loopne
and
popa
popa
pop
mov
popa
movl
lcall
cmc
push
movsl
inc
jle
ljmp
out
arpl
inc
ror
mov
dec
pop
cmpsl
jo
ret
pop
jle
sti
incl
add
orl
jne
sub
inc
cmpb
cmpb
lcall
gs
imul
andl
cmp
incl
push
test
incb
inc
sbb
call
sub
mov
rorl
mov
call
inc
and
sub
xor
rorb
rol
and
cmp
test
call
inc
and
mov
movl
xor
mov
pop
popfw
jmp
adc
stc
inc
std
into
call
push
popl
add
sub
mov
cmp
cmovle
cmovl
cld
cmovns
push
pop
inc
rcr
mov
not
xor
js
verw
mov
xchg
push
pop
cmp
xor
cmovl
test
movzbl
mov
push
pop
mov
cld
pop
add
mov
ret
mov
sub
add
mov
popl
sub
xchg
mov
mov
mov
and
not
arpl
xchg
not
cmovo
mov
xor
cmp
not
push
pop
mov
cmp
std
cld
pop
mov
add
add
push
bndldx
lea
push
mov
mov
mov
mov
mov
pop
mov
push
or
sub
mov
mov
movsbl
call
or
jge
xor
add
cmp
cmova
clc
push
pop
nop
push
mov
inc
pop
pop
xor
rol
cmp
verw
cld
push
mov
xor
add
or
add
add
xchg
mov
push
jmp
jmp
loope
hlt
sbb
ljmp
add
add
dec
inc
push
push
or
sub
xchg
xchg
mov
add
sub
cmc
verw
verw
ror
mov
repz
mov
verw
arpl
cmovge
bsr
repz
push
mov
rolb
xchg
mov
sub
xor
add
rolb
sub
xor
roll
rorb
rorb
xor
mov
xor
mov
mov
dec
inc
push
jmp
lret
test
cmpsw
push
std
repnz
sar
lahf
in
mov
lea
jmp
push
xchg
test
xor
imul
mov
pushfw
call
push
popl
xor
sub
xchg
mov
roll
roll
xchg
mov
sub
sub
popl
rorb
roll
sub
xor
rolb
mov
xor
movb
movb
xor
mov
call
lods
mov
push
ja
mov
std
mov
or
movl
rorl
xchg
mov
sub
push
mov
or
add
decb
inc
dec
jne
sub
notb
mov
add
cmp
xchg
add
add
mov
scas
insb
add
add
fcompl
add
add
jns
add
add
add
xchg
or
rolb
or
mov
rorl
rolb
add
notb
inc
dec
jne
sub
push
and
mov
or
movl
add
rolb
inc
dec
jne
sub
subb
jns
xchg
out
add
add
cld
incl
add
add
movsb
add
add
call
mov
movsb
mov
jnp
pop
ss
dec
adc
sbb
movsb
cld
jmp
xchg
add
add
cmp
add
mov
or
rorl
roll
add
rorb
inc
dec
jne
pusha
sti
movl
sub
fisubs
lcall
int3
pop
or
add
add
and
test
add
pop
inc
dec
jne
lcall
pop
pop
or
pop
pop
sbb
cmp
rclb
pop
pop
bound
pushf
or
push
push
xchg
daa
movsb
xchg
pop
arpl
push
push
inc
cmc
jg
push
push
push
xchg
into
xlat
pop
push
push
mov
fldt
jecxz
aas
mov
cs
jl
sti
jg
sbb
lcall
mov
add
add
pushf
loopne
loopne
mov
hlt
in
inc
cmp
loope
loope
inc
loopne
cltd
xchg
rcrl
loope
loope
iret
pavgb
loopne
addr16
cmpsl
addr16
push
pop
pop
dec
aas
les
pop
xchg
arpl
add
lcall
add
xchg
push
add
add
add
and
roll
or
rorb
rorl
roll
add
xor
add
addb
inc
dec
jne
sub
movb
movl
mov
add
add
xchg
mov
add
popfw
jmp
dec
dec
and
cltd
call
push
popl
add
call
push
popl
and
test
test
shl
cld
add
xchg
mov
roll
xchg
mov
sub
mov
rolb
rorl
push
mov
sub
mov
or
add
add
add
rorl
sub
mov
push
add
xchg
mov
sub
sub
mov
push
rorl
movl
roll
sub
xor
movl
xor
movl
mov
rorl
xor
add
xchg
mov
sub
popl
mov
add
add
xchg
mov
mov
pushfw
call
mov
and
rolb
mov
or
sub
xchg
mov
call
inc
test
cmp
clc
call
add
xchg
mov
subl
lock
add
cmp
fadds
adc
add
xchg
jp
mov
add
sbb
cmp
dec
bound
push
add
add
mov
add
push
add
xchg
mov
incb
inc
dec
jne
sub
movb
movl
add
xchg
mov
xchg
mov
add
popfw
jmp
sbb
pop
out
jb
jbe
nop
add
sub
add
add
lea
xor
rorl
roll
mov
jmp
jmp
jp
lea
pushfw
sub
mov
rorb
roll
push
add
call
push
add
sub
sub
nop
dec
pop
add
add
and
add
notb
js
roll
add
xchg
mov
xor
mov
rorb
inc
dec
jne
sub
movb
movl
pop
mov
or
add
popfw
jmp
adc
rorb
call
push
popl
and
call
push
popl
or
verw
xadd
xchg
test
add
cmovs
cld
mov
add
add
movl
movb
rorl
mov
add
add
push
or
push
sub
mov
sub
mov
xor
add
add
xor
add
inc
lea
rol
xchg
xor
push
mov
mov
mov
mov
mov
mov
mov
pop
sub
sub
add
inc
roll
rorl
rorb
add
call
push
popl
add
push
xchg
mov
add
sub
rorl
rorb
mov
and
add
push
xor
push
pop
sub
and
roll
rolb
or
roll
movl
movb
add
add
rorl
rorb
rorl
mov
rorl
add
sub
xchg
mov
push
xchg
mov
add
sub
mov
add
cmpb
jne
xchg
xor
add
inc
nopl
sub
add
bndstx
xchg
xchg
cmp
je
pushfw
add
mov
push
or
call
bound
cltd
es
jmp
fdivl
fisubs
sbb
rorl
or
mov
add
notb
mov
add
add
add
dec
test
add
add
incl
add
inc
dec
jne
sub
nopl
subl
into
dec
dec
pop
add
aas
mov
add
xor
sbb
notb
jg
mov
add
xchg
std
notl
jle
lcall
lret
jnp
cltd
int3
add
aas
jl
incl
add
jnp
add
add
negb
inc
dec
jne
sub
push
push
rorl
roll
xor
roll
roll
mov
xor
mov
rorb
movb
xor
mov
add
add
add
rorb
inc
dec
jne
sub
xorl
push
cmp
testl
push
sub
jmpw
cmp
add
mov
addb
inc
dec
jne
sub
push
xchg
mov
add
rolb
inc
dec
jne
sub
movb
movl
rorl
movl
sub
xor
roll
movl
rorl
xor
rorb
mov
movl
xor
mov
mov
rorb
xor
rorl
xor
movl
mov
xor
mov
add
popfw
jmp
jno
mov
pushfw
call
push
popl
and
sub
xchg
mov
and
add
sub
call
hlt
nopl
jle
push
add
pop
cmp
add
and
mov
or
mov
rolb
rorl
add
xchg
push
push
add
mov
and
add
negb
inc
dec
jne
sub
movb
movl
and
mov
rolb
rorb
or
rorl
movl
rorl
add
and
movb
or
movl
movb
roll
add
popfw
jmp
out
js
sbb
sub
icebp
pop
lea
lea
inc
add
mov
roll
movl
sub
xor
movl
rorb
movl
xor
movl
rolb
xor
mov
push
xor
cmovo
add
inc
arpl
arpl
arpl
mov
and
movswl
push
pop
push
pop
cld
rorl
roll
pop
add
mov
add
pushfw
call
movl
rorb
and
rorb
movl
or
call
push
popl
and
call
mov
sub
adc
adc
cwtl
cmc
push
lret
loope
and
roll
or
rolb
rorb
rolb
add
push
roll
rorl
rorb
xor
mov
rorb
roll
xor
rorb
xor
mov
add
notb
inc
dec
jne
sub
notl
or
incl
add
hlt
lcall
xor
mov
sub
subb
inc
dec
jne
sub
notw
xchg
jmp
test
clc
rorl
rorl
sub
xor
rorl
xor
rolb
rorl
rorb
xor
mov
negb
inc
dec
jne
sub
rorb
and
aaa
mov
decl
incl
add
incl
mov
movl
add
mov
add
mov
popfw
jmp
or
jmp
or
call
push
popl
add
push
pop
arpl
movzwl
push
pop
dec
mov
mov
mov
neg
lea
push
pop
rol
sub
xor
inc
cld
pop
mov
movb
xor
rorl
xor
rolb
mov
xor
mov
add
mov
pushfw
call
mov
and
movl
or
movl
rorb
mov
sub
xor
rorl
movl
rorl
xor
rolb
rorb
rorl
xor
mov
call
cmp
dec
jno
lcall
mov
add
addb
jle
and
add
or
incl
add
outsb
iret
incl
add
jle
incl
add
add
pop
mov
inc
and
add
insb
cwtl
or
add
xor
subl
pop
lods
rorb
aam
and
movb
or
rolb
mov
movb
add
negb
inc
dec
jne
sub
notw
xchg
repnz
xchg
mov
subb
inc
dec
jne
sub
movb
movl
mov
xor
add
rorl
sub
xor
mov
mov
roll
xor
rorl
movl
xor
mov
popfw
jmp
out
leave
adc
pushfw
rolb
mov
sub
mov
call
push
popl
or
call
jmp
fwait
leave
lods
mov
push
mov
mov
or
add
xorb
mov
xchg
sub
out
sub
mov
notb
inc
dec
jne
sub
movb
movl
mov
add
mov
xor
add
popfw
jmp
test
hlt
xchg
sub
add
sub
sub
add
jmp
ror
into
out
cld
test
or
add
nopl
xchg
lea
xchg
push
jmp
push
xlat
les
lea
add
nop
rorl
rolb
mov
roll
roll
sub
xor
roll
rolb
xor
roll
rorb
xor
movb
rolb
mov
sub
xor
rolb
xor
rorb
roll
xor
mov
sub
push
sub
mov
add
rorb
rorl
xchg
mov
sub
sub
xchg
mov
push
mov
or
add
sub
and
rorl
rorl
rolb
or
rorb
rolb
add
call
rorl
and
rorl
mov
rorl
or
push
mov
add
sub
rorl
sub
xor
rorb
mov
xor
roll
xor
mov
roll
roll
rorb
sub
xor
rolb
mov
xor
mov
rorb
mov
xor
push
roll
rorb
mov
sub
xor
rolb
xor
rorb
xor
mov
xor
add
sub
push
mov
add
add
push
roll
xor
mov
xor
rorl
xor
mov
add
add
add
pop
bndldx
roll
movb
roll
rorl
movb
movl
roll
movb
rorb
roll
rorb
rorl
jmp
inc
lcall
std
repnz
movl
rolb
rorl
mov
jmp
ds
in
mov
mov
add
add
sub
add
sub
sub
lea
push
mov
pop
pop
call
push
popl
xor
push
xor
push
or
popl
test
arpl
not
arpl
mov
lea
movzbl
inc
cld
and
roll
or
rolb
movl
roll
add
mov
add
leave
call
push
popl
add
add
mov
ror
jo
shrd
xor
lea
xchg
lea
cmp
neg
mov
verw
mov
arpl
xchg
verw
push
pop
arpl
arpl
bsr
cmp
arpl
inc
cld
mov
or
add
xchg
mov
add
ret
push
and
push
rorb
xchg
mov
add
sub
movl
roll
roll
xor
roll
movb
mov
xor
mov
rorb
xor
mov
add
call
mov
roll
mov
push
sub
mov
add
movl
sub
xor
rorb
xor
rorl
xor
mov
push
jmp
adc
in
add
push
dec
mov
add
mov
mov
sub
mov
add
add
sub
xchg
add
mov
sub
push
xchg
mov
add
add
mov
movb
rorb
sub
mov
add
call
rorb
rolb
mov
push
xchg
mov
add
sub
roll
mov
and
rorb
rolb
roll
or
rolb
roll
add
mov
sub
push
mov
and
add
add
roll
rorl
movl
sub
xor
rolb
rorb
xor
mov
roll
xor
mov
call
push
popl
or
mov
sub
pop
add
pushfw
rorl
sub
xor
mov
xor
rorb
mov
xor
mov
call
rorl
rorl
rorl
mov
call
outsl
dec
outsl
jo
jp
and
leave
xchg
mov
add
nopl
addl
mov
fcmovu
jmp
sbb
add
decb
inc
dec
jne
sub
push
add
xchg
mov
xorb
inc
dec
jne
sub
movb
movl
add
xchg
mov
roll
rorl
rorl
mov
xor
movb
xor
movb
mov
rolb
xor
mov
add
popfw
jmp
add
pushfw
push
and
mov
rolb
push
and
call
adc
dec
and
push
subl
mov
mov
xor
rorl
rorb
roll
xor
mov
add
notl
aas
ja
incl
add
or
add
add
addb
inc
dec
jne
sub
push
and
movl
mov
or
movl
mov
rorl
add
negb
inc
dec
jne
sub
push
push
push
push
roll
roll
rolb
xchg
mov
sub
and
add
add
add
xor
add
negb
inc
dec
jne
sub
xchg
rorl
and
sar
add
insb
add
xchg
cmc
sub
and
inc
test
pushl
roll
sub
xor
roll
xor
mov
roll
roll
xor
mov
decb
inc
dec
jne
sub
rolw
lock
ficoms
xchg
or
movsb
cld
inc
mov
add
add
dec
jne
sub
movb
movl
roll
movl
sub
xor
roll
roll
roll
xor
rorb
rorl
xor
mov
xchg
mov
add
popfw
jmp
xlat
and
sarl
xchg
add
sub
jmp
cmp
xchg
pop
add
and
push
push
jmp
sub
pop
xor
shlb
push
dec
adc
div
fs
pop
adcb
jmp
test
or
add
addl
pop
push
mov
mov
mov
pop
mov
pushfw
push
and
call
mov
roll
mov
call
push
dec
ret
cmpsb
out
loope
lcall
push
pop
push
roll
sub
xor
rorl
movl
xor
rorl
rorb
xor
mov
notb
inc
dec
jne
sub
subb
sub
cs
imul
jg
jnp
add
iret
fwait
mov
and
fs
mov
or
rolb
roll
add
notb
inc
dec
jne
sub
subw
out
lret
add
mov
cli
bound
dec
rorl
loope
push
xchg
mov
add
decb
inc
dec
jne
sub
notb
xchg
jno
add
inc
mov
add
add
inc
dec
jne
sub
pushfw
sub
xchg
mov
call
rolb
movb
rorb
and
rorl
movl
or
call
out
mov
in
jne
cmp
roll
rorl
roll
or
rorl
roll
roll
add
push
movl
movb
xchg
mov
sub
addb
inc
dec
jne
repz
mov
insb
imul
fucomip
jno
jb
sub
xchg
inc
xchg
pop
jno
jno
notb
add
xchg
cmp
xchg
xor
inc
xchg
sbb
jno
ss
cld
sub
jb
mov
addl
ret
add
add
add
mov
add
and
add
cmp
adc
add
mov
sbb
sbb
adc
pop
cmp
mov
sbbb
sbb
pop
xorl
or
jl
dec
pop
mov
vmwrite
call
jns
stc
std
adc
test
incl
outsb
mov
nop
sbb
lods
or
push
and
ficompl
pushf
cmp
ja
in
add
push
dec
dec
outsl
jl
pop
mov
fadds
adc
mov
cmpb
jnp
out
cwtl
icebp
jmp
push
inc
sub
scas
dec
fsub
mov
inc
je
adc
call
aas
or
push
clc
shll
aaa
movsb
or
notw
xchg
pushf
mov
add
addb
inc
dec
jne
test
addr16
add
xchg
add
add
lret
xchg
add
add
add
dec
sub
test
shrb
add
add
sub
add
add
mov
testb
add
aaa
cwtl
sub
add
add
add
dec
sub
cwtl
sub
add
add
add
ret
add
add
pop
cmp
add
popfw
push
add
xchg
mov
addb
inc
dec
jne
sub
movb
movl
and
movl
rorb
mov
or
rorl
roll
roll
add
rolb
movb
roll
xor
movl
rolb
xor
rolb
rorb
roll
xor
mov
add
popfw
jmp
cltd
inc
lcall
add
inc
and
xor
add
add
add
add
push
popl
or
mov
or
xchg
mov
dec
push
pop
cld
roll
sub
xor
rorl
xor
rorl
movl
roll
xor
mov
xchg
mov
add
add
pushfw
call
push
popl
xor
sub
mov
call
jle
inc
mov
das
insb
stos
lea
cmpsb
cmpsb
mov
xchg
mov
sub
notb
xchg
or
outsb
outsl
mov
movl
xor
rolb
mov
mov
xor
roll
movb
xor
mov
add
xorb
inc
dec
jne
sub
roll
inc
mov
sub
add
mov
inc
mov
add
add
inc
dec
jne
sub
notb
cltd
pushf
call
push
popl
or
push
call
add
repz
test
je
mov
dec
and
push
rorl
xor
mov
movb
xor
rorl
xor
mov
add
push
mov
add
subb
inc
dec
jne
cmp
scas
dec
sbb
cmp
mov
fnsave
dec
pop
mov
mov
mov
dec
jne
sub
push
mov
or
add
rorb
inc
dec
jne
loopne
push
cli
or
cs
in
jb
sti
aas
popa
mov
cmp
stc
and
loopne
dec
lahf
testl
pop
xchg
cmc
xor
fmull
jp
mov
pop
pop
mov
adc
icebp
cmp
sbb
mov
and
mov
or
rorl
rorl
add
xorb
inc
dec
jne
mov
push
xor
lret
repnz
lret
inc
xor
xor
lret
dec
out
adc
mov
xor
movsb
cld
incl
movsb
add
add
add
popfw
bndldx
push
and
rolb
rorl
or
movl
add
incb
inc
dec
jne
sub
rolw
js
inc
and
mov
and
add
subb
inc
dec
jne
sub
rorw
mov
movsb
add
add
mov
add
add
and
add
xorb
inc
dec
jne
sub
movb
movl
roll
rorb
push
rorl
xchg
mov
sub
xor
add
roll
rolb
movb
and
mov
or
roll
add
popfw
jmp
es
push
call
push
popl
add
call
mov
lahf
add
sbb
lock
sbb
push
sub
mov
or
add
rorw
add
cmp
add
test
inc
sub
mov
sub
mov
call
fidivs
mov
add
add
inc
and
xor
rorl
movb
roll
xor
rorb
rorl
mov
xor
mov
add
or
add
xorb
sub
mov
add
mov
roll
pop
xor
imul
xchg
lea
jmp
mov
push
and
fstps
rorb
push
inc
add
mov
notb
inc
dec
jne
jle
mov
insb
dec
incl
inc
push
out
sub
inc
std
jl
mov
adc
cmp
je
jle
cwtl
jmp
adc
dec
cld
jg
add
mov
addr16
sub
dec
push
dec
fsub
mov
inc
je
adc
loopne
loopne
pop
aas
or
push
clc
shll
aaa
movsb
or
add
add
xchg
or
push
add
adc
and
roll
or
mov
movb
roll
add
addb
inc
dec
jne
or
lods
dec
or
mov
insb
mov
mov
das
lds
lods
cmp
dec
and
sbb
cmp
rorb
rorl
add
pop
popfw
push
xchg
mov
add
incb
inc
dec
jne
sub
rorl
adc
xchg
psrlq
rorl
xor
movb
rorl
xor
movb
roll
xor
mov
add
decb
inc
dec
jne
sub
subb
subb
add
cmpsb
sub
pop
fimull
add
aam
repnz
lock
iret
add
add
test
test
cltd
or
add
add
add
add
add
xorb
inc
dec
jne
sub
push
add
mov
xorb
inc
dec
jne
sub
push
mov
add
decb
inc
dec
jne
sub
movb
movl
push
xchg
mov
add
xor
add
xchg
mov
add
popfw
jmp
sbb
xor
xchg
sub
sub
sub
add
sub
inc
add
add
dec
add
sub
sub
sub
inc
xchg
add
add
xchg
sub
sub
add
add
mov
sub
xchg
pop
sub
test
cmp
jb
verw
xor
cld
roll
rorb
movl
xchg
mov
sub
mov
rorl
movb
xchg
mov
sub
mov
call
push
popl
or
rorb
roll
sub
xor
mov
xor
roll
movl
rolb
xor
mov
arpl
test
cmovb
dec
rcr
arpl
dec
push
pop
test
dec
cld
sub
mov
mov
xor
add
push
pushfw
push
xor
call
push
popl
or
call
pop
orl
in
ljmp
lea
sbb
roll
rorl
or
rorb
add
push
mov
add
rolb
inc
dec
jne
sub
xorl
adc
faddl
jmp
adc
add
rorb
inc
dec
jne
sub
rolw
aam
push
mov
and
add
and
add
notb
inc
dec
jne
sub
rorb
cmpsb
adc
inc
and
sub
xor
rorl
roll
xor
rorl
roll
xor
mov
rolb
inc
dec
jne
sub
subw
lock
sti
xchg
mov
add
rorl
jno
and
incl
and
decl
jmp
adc
add
xorb
inc
dec
jne
sub
movb
movl
mov
add
pop
popfw
jmp
into
jae,pt
jns
pushfw
rorb
rolb
rolb
sub
xor
rorl
mov
rolb
xor
roll
mov
xor
mov
movb
mov
rorl
sub
xor
mov
roll
movb
xor
roll
rorb
movl
xor
mov
add
sub
call
xor
test
jecxz
push
xchg
jne
mov
inc
and
aad
les
add
xchg
mov
push
rorl
movb
rolb
rorb
movb
sub
xor
mov
mov
xor
movb
xor
mov
decb
inc
dec
jne
sub
bndstx
notl
xchg
out
sub
dec
and
inc
rorb
xor
rorl
mov
rolb
xor
rorb
mov
movl
xor
mov
add
addb
inc
dec
jne
sub
rorl
inc
add
loop
add
add
mov
dec
psubsb
add
inc
movsb
lret
imul
add
add
int3
xorl
cmp
add
shrl
mov
les
addb
add
sub
jne
sub
nopl
rorl
add
mov
add
add
add
add
add
and
add
add
add
decl
inc
xchg
add
add
add
lahf
or
in
cld
decl
inc
mov
add
lret
jne
push
mov
pop
pop
adc
ret
movsl
mov
scas
and
dec
mov
push
stos
outsb
loopne
xchg
xor
cmp
imul
test
push
test
add
sti
jge
aad
in
scas
mov
adc
cmp
and
adc
loopne
pop
push
mov
movl
xor
rorl
mov
rorb
xor
mov
xor
mov
add
xorb
inc
dec
jne
iret
mov
dec
dec
dec
inc
sub
mov
push
push
andl
aaa
mov
shr
dec
dec
dec
int
mov
mov
mov
fs
dec
dec
push
or
mov
dec
test
or
jle
mov
jle
mov
sbb
and
incl
mov
call
push
lahf
sti
sti
sti
mov
sti
sti
add
jmp
mov
cs
sti
sti
sti
imul
mov
decl
scas
out
pop
or
or
andl
xor
decb
jmp
xchg
xorw
rcl
add
add
mov
add
movsb
fs
mov
add
cltd
arpl
add
add
push
popl
or
call
rorb
rolb
roll
and
movb
roll
or
call
push
pop
and
pop
rcrb
test
mov
pop
rolb
xchg
mov
sub
push
mov
sub
mov
rorb
inc
dec
jne
pusha
jp
add
add
jp
pusha
xor
pushl
add
add
add
add
loopne
aas
loop
sub
inc
or
loope
or
sub
add
add
add
add
cltd
addr16
xchg
mov
add
and
add
negb
inc
dec
jne
sub
xorl
cmp
add
add
decl
in
cld
pushl
test
inc
test
xor
rorb
decl
pushl
test
inc
test
lcall
test
decl
decb
inc
dec
jne
sub
movb
movl
push
add
mov
add
add
mov
add
add
popfw
jmp
add
mov
adc
push
mov
mov
mov
mov
mov
pop
jmp
mov
inc
pop
xor
shlb
int3
adc
call
pushfw
sub
mov
call
push
popl
add
call
ds
jge
test
in
sbb
movsl
jmp
movsb
add
add
add
addl
push
arpl
add
add
add
mov
add
notb
inc
dec
jne
sub
pushfw
sub
xchg
rorl
sub
xor
roll
xor
rolb
roll
mov
xor
mov
sub
push
add
call
inc
jnp
into
aaa
mov
mov
add
subb
inc
dec
jne
pop
lret
or
dec
xor
adc
lahf
mov
stos
aaa
inc
adc
mov
cmp
mov
mov
sub
xchg
ljmp
imul
scas
or
pushf
inc
subb
int
lret
fwait
aam
jp
nop
and
jb
dec
jge
lret
inc
leave
push
add
xchg
jl
bound
insb
fcmovnu
and
fcmovnu
add
jmp
add
add
add
decl
incl
sbb
add
xorb
inc
dec
jne
add
ja
push
addb
addb
imulb
movsb
or
addb
addb
addb
jno
jg
jl
mov
jmp
or
ds
scas
adc
std
adc
in
scas
mov
nop
cmp
je
jle
repnz
jg
add
jp
out
test
push
sbb
xor
in
imul
xchg
in
add
sub
sub
add
jmp
or
popa
pop
xorb
inc
dec
jne
mov
push
or
int
cmpsb
hlt
hlt
hlt
loop
mov
or
or
hlt
hlt
stos
flds
test
xchg
scas
or
or
mov
testl
mov
ud2
or
insl
xchg
mov
pop
bound
sbb
popa
stos
or
or
pop
mov
or
push
addr16
es
add
lock
xchg
adc
add
mov
sub
decb
inc
dec
jne
sub
xorb
push
mov
add
add
aaa
out
pop
daa
xor
incl
movsb
add
add
add
addb
inc
dec
jne
sub
subb
mov
out
add
add
add
or
add
add
add
add
decb
inc
dec
jne
sub
movb
movl
sub
mov
add
xchg
mov
popfw
jmp
sub
mov
and
call
push
popl
and
push
add
xor
lea
js
jbe
push
pop
neg
cmovs
mov
cmovle
rcl
nop
dec
rol
call
outsl
dec
push
mov
dec
dec
pop
pop
rcr
cld
mov
add
push
add
mov
add
add
test
jne
add
sub
add
xchg
add
add
jmp
mov
pop
add
and
pushf
movsl
push
call
push
popl
add
push
and
push
pop
verw
jmp
push
pop
verw
xchg
test
dec
mov
dec
repz
lea
verw
bts
std
push
pop
mov
mov
mov
verw
xor
cld
pop
mov
add
add
push
call
push
popl
xor
call
push
popl
add
mov
dec
push
pop
mov
arpl
xchg
repnz
cmp
xchg
rcl
inc
mov
inc
xor
cmovae
mov
xor
cmovns
jno
xor
xor
dec
test
cmp
cld
rorb
sub
xor
rorl
xor
mov
xor
mov
rorb
xor
rorb
xor
rolb
roll
xor
mov
add
pushl
nopl
sub
inc
sub
sub
sub
sub
add
nop
inc
dec
call
movb
sub
xor
rorl
xor
movb
rorb
rorb
xor
and
rorl
movl
or
roll
rolb
rolb
add
sub
add
mov
arpl
mov
push
pop
test
xchg
cmovbe
xor
mov
inc
not
test
xor
lea
cmovae
rol
push
pop
xor
inc
dec
cld
sub
mov
sub
mov
call
pushfw
sub
xchg
and
movb
or
roll
add
sub
xchg
mov
sub
call
imul
subl
jns
nop
nop
nop
roll
movl
xchg
mov
sub
notw
cltd
jle
cmp
mov
pop
and
roll
movl
or
rorl
add
subb
inc
dec
jne
sub
movb
movl
sub
mov
rolb
rolb
xchg
mov
sub
popfw
jmp
mov
inc
cmp
inc
lahf
rorl
push
push
and
push
xchg
mov
add
sub
mov
add
call
rorl
movb
roll
and
rorl
movl
or
push
pop
add
mov
xor
add
rolb
rorb
sub
xor
rorl
roll
rolb
xor
roll
rorl
roll
xor
sub
mov
sub
sub
xchg
mov
popl
mov
sub
add
xchg
mov
call
mov
and
roll
mov
or
push
pop
add
push
mov
and
add
add
add
movl
call
push
popl
add
call
push
popl
and
arpl
test
jno
verw
jo
cmovne
mov
cmovge
call
push
not
xor
rol
mov
verw
verw
mov
push
mov
clc
pop
pop
adc
inc
cld
mov
or
add
and
rolb
or
rolb
add
mov
call
push
popl
and
push
or
xor
stc
cld
pop
mov
or
add
mov
nop
add
add
test
jne
rorb
rolb
roll
nop
call
rorb
movl
movb
mov
push
mov
add
add
push
mov
add
add
xor
add
sub
xchg
mov
push
mov
add
add
sub
push
sub
mov
or
add
movb
rolb
roll
mov
rolb
jmp
push
xchg
test
xor
mov
pushfw
push
or
call
roll
and
rorl
or
call
sbb
adc
imul
adc
decl
push
xchg
pop
add
add
je
incl
add
add
dec
into
add
add
lock
loopne
cmpl
inc
add
add
mov
add
mov
lahf
pop
int3
daa
mov
add
fldl
mov
add
add
xchg
addr16
add
add
int3
pushf
call
movb
mov
call
push
popl
xor
call
ja
mov
pop
arpl
aaa
cmp
test
inc
rorl
rorl
xchg
mov
sub
jmp
jmp
pop
lods
jne
jnp
icebp
push
inc
sub
scas
dec
fsub
mov
inc
je
adc
loopne
pop
aas
or
push
jmp
clc
shll
aaa
jmp
movsb
or
push
das
cmp
jmp
sbb
inc
out
aam
sub
jns
pop
insb
xor
xchg
pop
add
and
pushf
movsl
jp
loop
mov
inc
pop
xor
shlb
int3
adc
andl
shrb
stos
mov
add
negb
add
add
pop
add
add
lods
ss
dec
add
mov
decl
incl
add
inc
dec
jne
arpl
push
loop
loop
gs
test
loope
jecxz
loop
cs
mov
arpl
fsubp
loope
adc
fsubp
loope
imul
loope
loope
xchg
loope
loope
outsb
push
fsubp
loope
mov
adc
fsubp
loope
imul
loope
loope
cmpsb
out
jle
fsubp
loope
imul
loope
loope
jg
out
lcall
push
arpl
addb
inc
dec
jne
sub
notb
cltd
roll
lea
add
mov
add
notb
inc
dec
jne
sub
notl
cltd
or
add
xchg
repz
push
add
mov
or
add
or
add
rorb
inc
dec
jne
sub
movb
movl
pop
push
xchg
mov
add
and
add
popfw
jmp
cmp
adcl
mov
jo,pt
add
add
push
popl
and
sub
xchg
mov
verw
lea
cmp
cld
push
push
and
movl
or
rorl
mov
add
or
add
and
add
rorl
roll
mov
xchg
mov
sub
add
pushfw
movb
rorb
sub
xor
mov
rorl
rolb
xor
movl
xor
mov
add
sub
push
and
call
and
and
mov
aad
inc
and
rorb
xchg
mov
sub
addb
mov
add
cltd
jle
cmp
cmp
dec
movb
push
mov
xor
add
and
add
negb
inc
dec
jne
sub
notb
addl
add
add
xor
roll
movl
rolb
xor
mov
roll
xor
rorl
mov
movl
xor
mov
add
subb
inc
dec
jne
sub
movb
movl
pop
mov
and
add
popfw
jmp
fwait
rep
add
add
jmp
arpl
fidivrs
js
mov
and
push
jmp
nop
mov
jmp
lret
test
jmp
cmpsw
push
std
repnz
sar
jmp
lahf
in
mov
mov
push
xchg
test
ljmp
mov
pushfw
sub
mov
xchg
mov
sub
call
xchg
lods
lcall
in
ds
adc
test
dec
and
mov
inc
and
sarl
pushl
xchg
and
inc
inc
and
push
xor
mov
xor
mov
xorl
mov
add
mov
fld
inc
and
sahf
sub
xor
movb
rolb
xor
rorl
xor
mov
rolb
inc
dec
jne
sub
rorw
shrb
lds
add
stos
aad
pop
int3
add
add
stos
add
add
enter
test
incl
mov
add
add
shll
add
add
int
sub
xchg
push
and
mov
or
rorl
movl
rorb
add
add
add
sub
call
rorb
mov
call
arpl
out
lods
mov
das
prefetcht0
push
mov
rorl
rorl
push
mov
and
add
and
add
addb
inc
dec
jne
lcall
pop
pop
aam
add
loope
mov
pop
cwtl
add
arpl
add
outsb
lret
sahf
bnd
add
fsubrs
dec
or
or
push
xlat
mov
mov
shll
test
jp
ljmp
add
testb
cltd
and
dec
sub
jmp
clc
shll
aaa
movsb
or
push
sub
sub
inc
sub
push
mov
mov
mov
mov
mov
pop
add
add
sub
add
add
push
mov
rolb
sub
xor
mov
movb
movb
xor
rorl
xor
mov
notb
inc
dec
jne
jle
into
aas
jbe
decl
jle
ljmp
outsb
movsb
jmp
jle
call
ss
call
clc
mov
push
mov
roll
sbb
jmp
mov
xorw
js
adcl
and
dec
xchg
mov
sub
xorb
inc
dec
jne
xor
hlt
pop
mov
xchg
jns
dec
xor
pop
mov
push
and
mov
leave
push
scas
pop
lahf
loope
jae
push
les
rorb
jo
pop
inc
stos
and
mov
jmp
js
mov
and
testl
lcall
std
repnz
sar
lahf
in
mov
mov
test
xorl
lcall
add
decl
decb
inc
dec
jne
test
and
andb
add
add
icebp
mov
addr16
xchg
jbe
add
inc
jne
add
add
mov
add
add
outsl
orl
pop
fstpt
data16
add
add
add
negb
inc
dec
jne
jge
lods
cmp
add
add
cmp
add
add
cmp
add
add
faddl
add
ja
pop
add
add
ja
fdivrl
xchg
fcompl
mov
push
jg
add
add
iret
faddl
add
sub
add
int
faddl
add
sub
je
mov
pushf
and
decl
jmp
addw
imul
mov
incl
pushl
xchg
and
inc
mov
rolb
xor
roll
movb
rorl
xor
mov
subb
inc
dec
jne
sub
push
and
mov
mov
mov
or
movl
mov
rorl
add
xorb
inc
dec
jne
sub
push
xchg
mov
add
notb
inc
dec
jne
sub
movb
movl
sub
mov
movb
xchg
mov
sub
popfw
jmp
pop
cmpsb
xchg
jns
dec
sub
lea
jmp
jbe
in
add
push
dec
dec
outsl
jl
pop
mov
jge
mov
sub
call
push
popl
xor
neg
verw
arpl
cld
add
mov
push
mov
or
add
xor
add
test
je
sub
xchg
push
mov
xor
add
xor
add
sub
push
and
verw
jns
jo
mov
arpl
push
pop
verw
verw
cmp
cmp
arpl
push
pop
cld
and
mov
or
roll
rorb
rorb
add
add
mov
test
jne
push
mov
mov
mov
mov
mov
pop
nopl
sub
sub
inc
dec
xchg
sub
add
xchg
add
sub
push
jmp
enter
je
adc
loopne
pop
aas
or
add
add
cvtdq2ps
shll
aaa
movsb
or
push
das
cmp
jmp
sbb
inc
out
aam
jb
inc
jmp
jns
movsbl
insb
xor
xchg
pop
add
and
add
fisubl
call
push
popl
or
sub
mov
call
push
outsb
and
or
push
add
push
add
xchg
mov
and
add
notl
js,pt
incl
add
mov
add
decb
inc
dec
jne
sub
push
xchg
mov
add
decb
inc
dec
jne
sub
notb
jle
xchg
add
add
mov
movl
sub
xor
mov
roll
xor
rorl
rorb
xor
mov
call
push
popl
add
call
aas
loope
test
jae
test
jmp
and
mov
add
add
sub
push
xchg
mov
add
rolb
inc
dec
jne
sub
notb
aas
mov
add
int
scas
pop
add
add
test
subb
inc
rorl
mov
jns
add
call
add
int
insl
adc
add
cmpsb
jle
call
aas
mov
inc
mov
add
add
add
cmp
add
add
cmp
call
dec
and
roll
mov
mov
rolb
sub
xor
rorl
rorl
mov
xor
roll
xor
mov
and
add
decb
inc
dec
jne
test
cmp
add
jg
fdivr
add
add
fadd
mov
xlat
add
cmp
outsb
add
dec
and
and
add
add
add
pop
add
add
jne
sub
add
add
xchg
add
sub
cmp
in
add
testb
mov
mov
add
inc
dec
jne
sub
ljmp
rolb
loop
inc
and
mov
incl
mov
lcall
dec
push
test
incb
inc
test
movb
add
jmp
jmp
incl
decb
xor
and
and
mov
and
add
popfw
xorb
xchg
adc
cmp
roll
rorl
or
roll
add
decb
inc
dec
jne
sub
movb
movl
roll
mov
xor
movb
xor
rorb
xor
mov
add
roll
xchg
mov
sub
popfw
jmp
mov
pop
enter
xchg
pushfw
push
xor
sub
xchg
mov
call
test
xchg
or
sti
div
mov
rorb
xchg
mov
sub
notl
or
incl
add
movb
mov
movb
or
roll
add
rolb
inc
dec
jne
sub
push
movb
rorl
xchg
mov
sub
negb
inc
dec
jne
sub
push
pop
xorb
inc
dec
jne
sub
movb
movl
push
rorl
roll
xor
rorb
xor
rorb
xor
mov
add
add
add
pop
popfw
jmp
push
mov
push
out
ss
dec
pushfw
mov
movb
movb
sub
xor
mov
xor
rolb
rorb
xor
xchg
mov
add
sub
call
push
popl
xor
call
dec
nop
enter
adc
rorb
rorl
sub
xor
rorb
movl
xor
rorb
xor
mov
push
and
movl
or
rolb
add
notb
inc
dec
jne
sub
nop
xorl
lahf
mov
add
add
add
decl
decb
inc
dec
jne
sub
movb
movl
and
roll
movl
movb
or
mov
rorb
movl
add
rorb
xchg
mov
sub
popfw
jmp
mov
lea
daa
push
and
push
arpl
cmove
push
pop
ja
xor
push
pop
std
inc
cmp
arpl
cld
mov
add
mov
or
add
and
pushfw
roll
call
push
popl
add
call
rorb
movl
movb
and
mov
or
call
cmp
lret
lods
arpl
enter
mov
xor
add
notb
xchg
or
roll
rorb
xchg
mov
add
subb
inc
dec
jne
sub
movb
movl
and
movb
rolb
rorb
or
rorl
rorb
roll
add
and
rolb
rorb
roll
or
rorl
add
popfw
jmp
movsb
sbb
insb
popa
mov
add
add
xchg
mov
push
xchg
mov
add
sub
push
rorl
xchg
mov
sub
and
add
call
push
popl
xor
push
mov
add
add
pop
jmp
jl
pop
add
pushl
rolb
rolb
mov
bndstx
jmp
mov
cmpb
jnp
icebp
jmp
push
inc
sub
scas
dec
fsub
mov
rcrb
pushf
push
xor
sub
xchg
mov
call
lcall
inc
loope
lods
fisubrs
dec
dec
sub
mov
rorw
fstpl
add
add
add
add
subb
inc
dec
jne
sub
xorb
cmp
add
xchg
jmp
dec
and
clc
movb
movb
xor
mov
xor
roll
roll
xor
mov
add
rorb
inc
dec
jne
sub
push
mov
add
xorb
inc
dec
jne
sub
push
mov
xchg
mov
add
rorb
inc
dec
jne
sub
movb
movl
mov
xor
add
rorb
movb
sub
xor
roll
xor
movb
rorl
mov
xor
mov
popfw
jmp
pop
adc
in
add
mov
add
inc
and
out
inc
and
sub
xor
mov
rorb
rorb
xor
mov
xor
mov
push
pop
movswl
dec
mov
bnd
lea
xor
test
cmp
verw
mov
inc
mov
mov
mov
arpl
mov
and
inc
cld
roll
roll
sub
xor
roll
roll
rorl
xor
rorb
xor
mov
push
mov
xor
add
add
add
call
sub
xchg
mov
xchg
mov
sub
lea
bsr
jne
mov
xor
arpl
verw
mov
btr
or
mov
push
pop
movsbl
not
mov
inc
cld
pop
movb
rorb
rorb
sub
xor
movl
mov
xor
rorl
movl
rorl
xor
mov
call
jmp
insb
xor
xchg
pop
add
in
add
add
xchg
mov
push
rorb
xchg
mov
sub
add
add
mov
push
and
push
push
push
mov
add
or
add
or
add
sub
mov
movb
rorl
sub
xor
mov
xor
mov
xor
mov
rorl
sub
add
pop
pushfw
push
xor
call
movl
and
mov
rorl
movb
or
call
adc
divl
jb
fwait
test
jb
lcall
adc
add
addw
movb
add
add
jne
add
add
add
add
push
or
add
aam
cmpsb
mov
xor
roll
xor
rorl
xor
mov
add
decb
inc
dec
jne
sub
xorl
cmpsb
inc
roll
add
add
jo
dec
jne
sub
push
mov
and
add
decb
inc
dec
jne
sub
movb
movl
xchg
mov
add
roll
add
mov
popfw
jmp
in
scas
mov
mov
mov
mov
mov
mov
mov
pop
jmp
call
cmp
jle
sub
mov
dec
add
sub
sub
test
jne
sub
add
jmp
pop
gs
dec
loope
hlt
sbb
cmpsb
arpl
sbb
mov
sbb
nop
xchg
jmp
sbb
mov
call
rorb
movl
roll
mov
push
add
xchg
mov
add
and
rorl
movb
mov
or
rorb
add
push
xor
mov
sub
mov
or
add
mov
rorl
movb
call
push
popl
or
push
roll
mov
sub
xor
movb
xor
mov
rorl
movb
xor
mov
add
xchg
mov
add
add
mov
push
add
xchg
mov
sub
pop
pushl
movb
mov
mov
call
push
popl
xor
mov
add
mov
add
mov
sub
push
mov
or
add
sub
rorb
movb
mov
sub
xor
rorb
roll
xor
rorb
movb
movb
xor
mov
call
nop
dec
inc
jmp
stos
or
push
and
fstps
pushf
push
or
call
push
popl
xor
call
sbb
aas
pop
jmp
outsl
outsl
mov
and
add
push
rolb
rorb
rorl
xor
rorl
mov
movl
xor
movl
xor
mov
add
decb
inc
dec
jne
sub
rorb
inc
mov
add
add
adc
or
xchg
divl
add
add
add
subb
inc
dec
jne
sub
push
sub
mov
decb
inc
dec
jne
sub
subl
aam
pop
push
filds
add
add
add
out
add
add
int
adcl
inc
add
xchg
and
decl
incl
add
inc
dec
jne
sub
movb
movl
movl
rorl
sub
xor
roll
xor
movl
rorl
rolb
xor
mov
pop
popfw
jmp
or
xchg
das
push
insl
and
pushfw
push
and
call
push
popl
add
call
mov
jne
adc
insl
xlat
loope
out
out
push
add
mov
and
add
rorb
notw
jg
inc
add
add
add
add
push
add
add
xor
mov
and
mov
sbb
inc
and
sub
test
ljmp
dec
and
dec
roll
rolb
xor
movb
roll
xor
mov
add
subb
inc
dec
jne
sub
movb
movl
mov
xor
roll
xor
rolb
rorl
xor
mov
add
add
mov
popfw
jmp
aaa
test
roll
cmpsl
ljmp
xchg
mov
call
mov
mov
call
lods
lahf
pusha
test
movsb
or
sbb
or
sbb
rolb
rorl
rorl
movl
movb
sub
xor
rorl
xor
mov
xor
mov
push
and
mov
mov
or
rorl
rorb
add
addb
inc
dec
jne
sub
push
push
push
and
rorb
rorl
mov
or
mov
mov
add
xor
add
xor
add
xorb
inc
dec
jne
sub
movb
movl
mov
rolb
xor
rorb
rorl
xor
rolb
mov
xor
mov
add
sub
mov
popfw
jmp
lcallw
and
call
inc
sbb
add
add
rorl
rorl
roll
and
mov
or
push
sub
mov
sub
roll
xchg
mov
sub
add
cmp
jne
jmp
cmp
xchg
pop
add
add
add
dec
inc
sub
add
jmp
inc
nopl
jmp
mov
adc
and
lcall
dec
mov
jmp
add
mov
jmp
ror
into
out
cld
test
or
add
rcrb
sbb
add
ret
mov
mov
jno
movl
movl
add
call
rorl
and
roll
movb
movl
or
push
and
mov
or
roll
rorl
add
sub
sub
mov
shl
rolb
roll
roll
roll
jmp
hlt
sbb
fidivrs
js
mov
lea
lea
nopl
add
add
sub
add
mov
push
or
push
add
lea
dec
cld
push
mov
xor
add
add
add
sub
mov
mov
xchg
add
jmp
in
mov
bndstx
add
lea
push
mov
pop
add
sub
push
jmp
sbb
add
or
push
and
jmp
fstps
fwait
cmp
jbe
in
add
jmp
push
dec
dec
pop
sub
add
nopl
push
mov
pop
add
sub
push
mov
mov
mov
pop
push
jmp
pop
lods
jne
jmp
jnp
icebp
jmp
push
inc
sub
scas
jmp
dec
fsub
mov
add
ret
ljmp
add
rclb
psubb
ss
movsb
or
push
das
cmp
sbb
add
call
push
popl
add
call
push
popl
and
dec
inc
inc
cld
roll
mov
roll
sub
xor
rorl
rolb
xor
mov
rorb
mov
xor
mov
movl
xchg
mov
add
add
pushfw
push
xor
sub
xchg
xchg
mov
add
sub
call
pop
and
mov
jmp
xor
roll
or
rorl
mov
rorb
add
push
push
push
sub
mov
xor
add
xor
add
incb
inc
dec
jne
sub
movb
movl
xchg
mov
add
pop
popfw
jmp
stos
xchg
add
and
add
cmp
push
pop
add
mov
mov
add
mov
roll
movl
rolb
sub
xor
mov
roll
rolb
xor
rorl
rorb
mov
xor
mov
add
sub
mov
sub
rorb
mov
roll
sub
xor
rolb
xor
mov
rorl
rolb
xor
mov
add
push
mov
sub
sub
mov
jmp
xchg
mov
sub
sub
xchg
roll
rorl
movb
xor
mov
roll
xor
mov
xor
mov
add
sub
shr
not
jmp
cmp
push
pop
cmova
xor
cmovl
xchg
mov
not
rcl
inc
cld
sub
mov
sub
mov
push
add
sub
add
add
pushl
sub
xchg
mov
and
add
sub
movl
movl
roll
sub
xor
mov
movl
xor
rorb
mov
movb
xor
push
push
mov
add
or
add
xor
add
sub
rcl
mov
xadd
rcr
inc
mov
xor
cmovne
rcl
test
xor
cmp
inc
lea
cld
sub
mov
add
xchg
mov
call
sub
xchg
mov
call
push
popl
add
popl
sub
xchg
xchg
mov
add
sub
verw
arpl
bsf
shl
lea
lea
cld
rorl
movl
xor
roll
mov
xor
movl
mov
xor
mov
add
rorl
sub
xor
rolb
rorl
rorb
xor
rorb
xor
mov
push
sub
add
rorb
mov
movl
mov
mov
sub
xor
movl
movl
xor
movl
rorb
xor
mov
mov
sub
add
mov
call
mov
mov
and
rorl
mov
rolb
or
push
mov
sub
xor
rolb
rorb
xor
rolb
mov
movl
xor
mov
add
push
rorl
roll
xor
movb
movb
xor
rorl
mov
xor
mov
add
add
add
call
push
popl
or
push
xchg
mov
add
add
roll
xchg
mov
sub
sub
call
pushfw
call
push
popl
xor
call
mov
movl
and
rorb
roll
rorl
or
call
sbb
outsl
push
jmp
inc
jp
add
add
test
ljmp
mov
loope
das
adc
mov
add
cmp
add
push
aam
mov
add
add
rorb
inc
dec
jne
sub
movb
movl
rorb
movl
sub
xor
mov
xor
roll
movl
xor
mov
sub
mov
popfw
jmp
push
jb
cmpsl
push
jmp
dec
xchg
jmp
repnz
sar
lahf
in
mov
addl
rorl
xchg
mov
sub
add
mov
cmp
push
pop
jmp
cmovnp
mov
arpl
xor
shl
lea
mov
dec
mov
neg
dec
cld
mov
xor
add
movb
rolb
mov
rolb
sub
xor
mov
xor
rorl
roll
mov
xor
mov
jmp
rolb
mov
rorl
sub
push
add
push
mov
rolb
sub
xor
movl
rolb
mov
xor
roll
mov
xor
mov
add
movb
xchg
mov
sub
mov
call
rolb
rolb
and
mov
rorb
rorl
or
push
xor
test
cmp
rcr
neg
cmovge
bsf
cld
pop
mov
or
add
mov
xchg
push
jmp
and
fstps
or
ja
dec
add
add
outsl
pop
jmp
pop
mov
mov
call
push
popl
and
rorl
mov
sub
xor
rolb
rorb
xor
roll
xor
mov
roll
add
xchg
mov
sub
test
ror
push
pop
cmp
xadd
jne
cmp
cmp
jne
call
mov
rcr
mov
push
pop
pop
pop
cmc
xor
test
btc
arpl
jmp
push
pop
not
xchg
mov
dec
cld
add
mov
xchg
mov
add
add
push
xor
mov
rorb
rorb
sub
xchg
rorb
mov
xor
mov
movb
rorl
xor
roll
rorl
xor
mov
add
sub
sub
mov
popl
cmovae
jmp
xor
ror
jbe
cmovs
bsf
adc
mov
xchg
rcl
mov
mov
or
arpl
xchg
cmp
mov
neg
test
test
not
cld
rorl
mov
add
add
mov
mov
nopl
lea
bndldx
lea
sub
sub
jmp
pushfw
sub
xchg
push
mov
xor
add
add
add
sub
call
push
popl
add
call
mov
ret
jp
inc
add
pop
push
mov
and
rolb
or
mov
add
rorb
inc
dec
jne
sub
notw
cltd
orl
aam
add
add
pop
xor
add
negb
inc
dec
jne
sub
rolb
cmpsb
or
jmp
sbb
add
decb
inc
dec
jne
sub
addb
and
mov
sub
loopne
add
ds
loopne
add
or
add
xchg
repz
incl
add
add
add
negb
inc
dec
jne
sub
notw
cltd
or
js
roll
notl
or
incl
add
add
add
add
decb
inc
dec
jne
sub
movb
movl
sub
mov
pop
popfw
jmp
iret
xor
int3
push
pop
xchg
nopl
pop
push
mov
mov
mov
pop
xchg
xor
add
add
push
jmp
daa
aam
jb
inc
jns
pop
mov
cmp
pop
mov
pop
add
and
add
mov
add
or
pop
push
mov
and
add
xor
add
sub
rorl
rorl
sub
xor
movb
xor
mov
roll
xor
mov
push
mov
add
roll
rorl
and
rorb
or
movb
rolb
rorb
add
add
add
mov
push
rolb
mov
rorl
sub
mov
sub
roll
rorb
movb
xor
roll
rorb
xor
rorl
rorl
xor
mov
add
mov
rorb
movb
call
push
popl
xor
push
push
and
rorb
rorl
or
rorl
rorl
roll
add
add
add
add
and
rorb
rolb
or
movl
roll
movb
add
sub
leave
pushfw
xchg
mov
sub
call
mov
rolb
rorb
mov
call
shrl
adc
mov
cwtl
aas
cmc
add
pop
add
add
xor
add
bndldx
notw
or
add
add
xchg
xor
add
xchg
in
jle
cld
decl
decb
inc
dec
jne
sub
subl
jmp
add
jg
insb
add
add
push
movl
mov
or
add
negb
inc
dec
jne
sub
movb
movl
pop
sub
mov
popfw
jmp
push
daa
sbb
or
mov
sbb
xlat
les
testb
sub
push
jmp
dec
loope
hlt
sbb
fidivrs
ljmp
mov
lea
nop
mov
jmp
lret
test
cmpsw
push
std
jmp
repnz
sar
lahf
in
mov
mov
sub
add
push
lea
lea
mov
sub
add
jmp
mov
push
and
fstps
mov
call
mov
jmp
dec
xchg
stos
fwait
cmp
jbe
in
add
push
mov
nopl
mov
roll
movb
rorb
nopl
push
bndstx
sub
xchg
mov
push
mov
and
add
sub
add
xchg
mov
push
xor
push
mov
add
add
add
rolb
push
rorl
rorb
sub
xor
rorl
movl
rolb
xor
rolb
roll
xor
mov
and
add
bndldx
mov
roll
rorl
roll
sub
xor
mov
rorl
xor
rorb
rorb
movb
xor
mov
call
mov
movl
mov
and
rorl
or
bsr
cld
movb
rorb
xchg
mov
add
roll
xor
movb
rorl
roll
xor
rorl
roll
roll
xor
mov
add
mov
pushfw
roll
rorl
mov
sub
xor
rorl
movb
rorb
xor
mov
mov
xor
mov
xchg
mov
sub
popl
xchg
mov
sub
call
inc
or
add
mov
mov
inc
inc
push
sub
mov
and
add
nopl
notl
cltd
jge,pt
add
add
movb
rolb
rolb
movb
push
add
xchg
mov
and
add
sub
push
add
call
cmp
and
rorb
or
rorb
rolb
add
rorl
add
add
test
mov
movb
mov
movl
mov
xor
movb
roll
rorl
xor
roll
xor
mov
add
add
add
rorb
inc
dec
jne
cmp
sbb
jmp
cmp
data16
jp
add
test
ret
movsl
jg
pop
add
add
add
adcb
dec
xlat
daa
cmp
xchg
jmp
push
lods
mov
sbb
inc
mov
pop
sahf
out
leave
pop
cmpsl
mov
adc
pop
shlb
int3
jmp
adc
div
fs
xchg
ror
into
out
cld
test
or
add
add
add
add
add
add
add
add
cmp
add
add
xchg
mov
incb
inc
dec
jne
sub
jmp
xchg
push
add
call
pushl
cmp
add
std
subb
inc
dec
push
test
incb
xorl
xchg
inc
and
lds
std
cmpl
mov
std
std
std
cmp
and
test
and
incb
mov
jmp
inc
dec
push
test
popa
lret
add
loopne
cmpsb
arpl
cmpsl
arpl
loop
loopne
and
rcrb
int
loopne
pushl
mov
call
test
mov
call
mov
decl
inc
and
jle
test
cld
decl
inc
dec
and
fbld
sbb
mov
or
rolb
rorl
roll
add
popfw
notb
cltd
subl
fadds
add
xchg
adc
incl
movsb
add
add
add
and
add
negb
inc
dec
jne
sub
push
mov
add
add
rorb
inc
dec
jne
sub
push
mov
add
rolb
inc
dec
jne
sub
notb
jg
pop
add
add
popa
notl
cltd
jle
imul
dec
insb
stos
jb
add
jno
push
add
jge
cld
add
push
push
add
add
xlat
mov
ljmp
rcll
sub
xor
inc
xorl
adc
cmp
add
jg
mov
add
jae
stos
mov
mov
ret
add
addr16
pop
add
cmp
add
inc
fcmovu
add
add
add
rolb
rorl
xchg
mov
sub
or
add
xorb
inc
dec
jne
sub
rorw
sub
and
add
gs
inc
mov
cld
decl
incb
inc
dec
jne
sub
movb
movl
roll
push
movb
rorb
xor
movl
xor
rolb
xor
mov
add
or
add
add
mov
popfw
jmp
mov
lcall
ljmp
mov
lea
nop
mov
lret
jmp
test
cmpsw
push
std
repnz
shr
stc
ds
in
mov
mov
push
xchg
test
xor
imul
sbb
inc
sub
cmp
jbe
push
and
mov
sub
rolb
rorb
rorl
rolb
sub
xor
rorl
xor
movl
rorb
movb
xor
mov
rorl
rorl
movl
sub
xor
roll
xor
movb
xor
add
xchg
mov
sub
push
add
mov
add
mov
add
cmp
jae
call
push
popl
and
xchg
mov
sub
test
repz
test
neg
test
cld
mov
xor
add
xchg
mov
add
pop
push
mov
mov
mov
mov
mov
mov
mov
pop
add
add
xchg
add
add
push
mov
mov
mov
mov
mov
pop
sub
add
lea
pop
call
push
popl
or
call
rorb
movl
movb
mov
lea
movzwl
arpl
verw
dec
mov
push
pop
cld
rorl
xchg
mov
sub
push
movl
and
rorb
mov
rolb
or
movl
roll
add
xor
add
pop
call
push
popl
or
push
lea
push
pop
imul
xchg
cmp
jbe
cmp
not
arpl
rol
arpl
xor
dec
arpl
xor
neg
push
pop
std
cmp
arpl
mov
mov
xchg
bsf
cmp
not
add
cld
roll
xchg
mov
sub
add
mov
ret
pushfw
rorl
sub
xor
roll
roll
xor
roll
xor
and
rorl
or
movb
add
sub
call
push
popl
or
call
repz
xchg
aas
test
push
mov
add
notl
jg
fdivr
add
sub
mov
add
add
rorb
inc
dec
jne
sub
addw
mov
add
roll
rolb
mov
sub
xor
movb
rorl
xor
rorb
mov
xor
mov
add
add
subb
inc
dec
jne
sub
movb
movl
movb
and
rorl
or
rorl
mov
movl
add
mov
roll
xor
roll
xor
rorl
movl
movb
xor
mov
add
popfw
jmp
jl
movsb
mov
lods
mov
pushf
call
push
popl
or
push
xor
call
mov
pop
in
cmp
dec
bound
jle
aad
aad
push
and
rorb
or
roll
movb
rolb
add
subb
inc
dec
jne
sub
notw
xchg
call
mov
cld
decl
inc
xchg
add
add
inc
dec
jne
sub
push
push
movl
roll
mov
xchg
mov
sub
or
add
xorb
inc
dec
jne
sub
movb
movl
movl
xchg
mov
sub
sub
mov
popfw
jmp
xor
ret
push
test
test
sub
push
jmp
pop
insb
xor
pop
nopl
xchg
add
add
pop
sub
sub
sub
sub
push
mov
mov
mov
mov
mov
pop
nopl
sub
sub
jmp
adc
div
fs
xchg
ror
pop
pushfw
push
push
and
call
dec
lret
imul
mov
and
add
push
rorb
sub
mov
decb
inc
dec
jne
sub
subl
mov
aam
add
call
or
movsb
cld
incl
add
icebp
incl
lock
jmp
decl
add
add
add
add
mov
add
popfw
jmp
add
fildl
add
notb
fistps
and
nop
call
jmp
lods
loop
xor
call
push
sub
mov
xadd
not
jmp
cmovle
inc
verw
verw
mov
xchg
mov
jmp
arpl
js
movzwl
shl
cmp
jno
inc
sbb
cmp
inc
cld
movb
rolb
movl
xchg
mov
sub
mov
movl
movb
roll
add
mov
mov
jmp
arpl
sub
mov
roll
sub
xor
rorb
rorb
roll
xor
rorl
xor
mov
push
xor
jo
adc
arpl
verw
lea
mov
rol
mov
cmp
dec
xadd
dec
xor
stc
cld
push
movl
movb
xor
rorl
rorb
roll
xor
rorl
rorl
rorl
xor
mov
add
and
add
xchg
mov
add
mov
pushfw
mov
sub
call
push
popl
add
call
pop
mov
adc
nop
cmp
push
std
aam
adc
add
xchg
mov
push
mov
roll
mov
xchg
mov
sub
subb
inc
dec
jne
sub
movb
movl
movb
roll
push
add
xchg
mov
xor
add
mov
xor
mov
roll
mov
xor
rolb
xor
mov
add
popfw
jmp
movsb
mov
jle
call
push
popl
and
sub
xchg
mov
xor
add
sub
dec
mov
xchg
mov
cmovp
verw
call
int3
inc
push
mov
std
mov
push
pop
mov
test
cmovno
push
pop
pop
pop
mov
verw
mov
cmp
mov
push
pop
not
arpl
cld
add
mov
sub
mov
add
pushfw
push
xor
sub
mov
call
add
jne
rorb
pop
and
sbb
call
add
add
rorl
rorl
roll
sub
xor
mov
xor
rorl
xor
mov
xor
add
addb
leave
adc
add
add
rorb
inc
dec
jne
sub
push
push
mov
and
add
or
add
decb
inc
dec
jne
sub
nop
push
xchg
mov
add
rolb
inc
dec
jne
sub
push
sub
mov
negb
inc
dec
jne
sub
push
sub
mov
rorb
inc
dec
jne
sub
movb
movl
xchg
mov
add
add
mov
popfw
jmp
xor
add
and
and
mov
fld
dec
and
sahf
xor
rorl
xor
push
and
mov
or
roll
movb
add
and
add
sub
call
push
popl
and
verw
test
inc
test
mov
jo
mov
mov
btr
test
mov
cmp
arpl
xchg
arpl
cmp
cmp
push
pop
cmovge
jo
stc
lea
mov
arpl
cld
mov
or
add
rorl
xor
mov
rorb
roll
xor
rorb
roll
rorb
xor
mov
add
push
add
sub
jmp
in
add
push
dec
dec
push
mov
mov
mov
pop
lea
lea
dec
add
xor
push
push
jmp
pop
lods
jne
jnp
icebp
push
inc
jmp
sub
mov
scas
dec
fcompl
xchg
push
mov
mov
mov
mov
mov
pop
jmp
inc
je
lea
push
mov
mov
mov
mov
mov
mov
mov
pop
push
call
push
popl
and
call
rorl
rorb
roll
and
mov
mov
or
test
cmp
not
sbb
mov
xchg
cld
and
mov
rorl
roll
or
rorb
roll
add
add
xchg
mov
pushl
movl
roll
mov
roll
push
mov
add
add
xchg
mov
xchg
mov
sub
push
mov
add
sub
pop
pushl
add
mov
xchg
mov
sub
xor
dec
cld
xchg
imul
neg
xor
imul
jno
imul
cmp
push
pop
not
mov
xor
mov
push
pop
mov
dec
cld
mov
add
sub
mov
add
sub
xchg
mov
or
add
sub
call
rorb
mov
rolb
mov
jbe
verw
push
pop
mov
xchg
and
xchg
inc
cld
roll
rolb
and
rorb
movb
or
rorl
rorb
add
movl
movb
movl
xchg
mov
sub
push
pushfw
xchg
mov
sub
push
or
call
cmc
pushf
inc
lret
pop
pop
clc
aad
mov
and
push
mov
xor
add
add
add
rorw
mov
add
xor
add
addb
inc
dec
jne
sub
rolw
add
add
inc
roll
xor
jl
add
jo
test
dec
and
mov
or
add
xorb
inc
dec
jne
sub
movb
movl
mov
xor
add
mov
rolb
mov
sub
xor
roll
movb
xor
rolb
roll
xor
mov
popfw
jmp
outsl
shll
xchg
or
push
jae
jmp
aas
ds
sub
call
pushfw
sub
xchg
mov
add
add
sub
sub
mov
call
inc
clc
cld
pop
xlat
xor
loop
movsl
inc
ret
and
sarb
rorl
roll
sub
xor
rolb
roll
mov
xor
rorl
xor
mov
push
mov
add
rorb
inc
dec
jne
sub
xorw
jecxz
call
rorl
mov
push
and
call
xor
add
cmovae
mov
sar
decl
dec
and
jle
in
cld
xor
rorb
rorl
mov
xor
mov
xor
mov
rorl
rcr
add
add
cmp
incl
movsb
add
add
sub
decb
inc
dec
jne
xor
add
add
add
add
add
add
mov
add
add
dec
dec
adc
bound
mov
jecxz
jecxz
nop
jecxz
and
and
loop
xor
loop
es
sub
stos
or
add
and
cmp
pop
outsb
aaa
or
lcall
mov
imul
js
dec
and
adc
fdivrl
push
test
cmp
hlt
jne
adc
inc
rcll
mov
or
push
and
fstps
fwait
cmp
jbe
in
push
push
movl
movl
rorb
xor
mov
rolb
movb
xor
roll
movl
movl
xor
mov
add
or
add
subb
inc
dec
jne
jl
push
sti
sti
sti
jnp
cmpsb
cld
sti
sti
add
jle
cld
jnp
mov
sti
sti
mov
pop
mov
cli
cli
cli
ret
cli
cli
lods
adc
jle
imull
pop
idiv
cli
cli
int
pop
lahf
int
pop
in
test
pop
out
cs
pop
idiv
cli
cli
mov
roll
xor
mov
rolb
inc
dec
jne
xor
dec
add
add
lock
cmp
decl
add
xor
lock
test
xchg
xchg
lahf
pushl
xchg
add
add
jo
or
adc
pop
inc
add
aaa
jp
xor
jno
xchg
lahf
call
rolb
add
add
enter
ds
pushl
ffree
add
add
add
add
mov
xor
add
or
add
addb
inc
dec
jne
sub
xchg
xorw
xchg
rcrb
scas
add
add
pop
inc
dec
jne
sub
addb
pop
rorl
push
add
cmp
xorl
and
inc
and
mov
movl
or
rorb
add
notb
inc
dec
jne
sub
movb
movl
add
xchg
mov
mov
or
add
popfw
jmp
icebp
add
sub
lea
add
pushfw
push
push
call
outsl
int
leave
inc
stos
loopne
xchg
icebp
icebp
fcmovu
fimull
add
add
addl
loopne
imul
push
pop
mov
add
out
popf
dec
push
rorb
roll
sub
xor
movl
rorb
mov
xor
roll
rorl
xor
mov
negb
inc
dec
jne
sub
push
pop
addb
inc
dec
jne
sub
movb
movl
xchg
mov
add
rolb
mov
rorb
xchg
mov
sub
popfw
jmp
call
movsl
push
mov
sub
push
or
not
push
pop
not
xor
not
js
lea
cmp
push
pop
xor
mov
mov
mov
mov
nop
dec
cld
push
mov
add
add
and
add
add
mov
add
push
or
mov
sub
xor
movl
roll
xor
movb
rorl
xor
mov
mov
xor
or
xor
push
pop
neg
cld
add
mov
mov
add
add
cmp
jne
mov
sub
sub
xchg
mov
test
arpl
not
xor
verw
cld
movl
roll
xchg
mov
sub
mov
or
add
push
add
sub
jmp
jge
add
add
push
popl
and
xchg
mov
sub
popl
mov
sub
xchg
mov
add
push
or
mov
add
mov
add
pop
pushfw
push
add
sub
xchg
mov
call
xor
sub
cs
adcb
insl
xchg
pop
test
test
or
mov
add
subb
dec
addl
cmp
add
push
mov
push
jmp
add
add
addb
inc
dec
jne
sub
movb
movl
and
roll
roll
rorl
or
movl
add
push
push
xchg
mov
add
add
add
and
add
popfw
jmp
push
cs
subb
lea
jmp
sbb
int
xchg
ror
into
out
cld
test
add
add
add
add
jmp
cmp
sub
mov
sbb
xlat
rorb
jmp
lods
loop
xor
jmp
cmp
add
add
push
jmp
dec
and
dec
rorl
rorl
rorb
rorl
movl
movb
call
mov
rolb
mov
push
push
xchg
mov
add
or
add
sub
pop
mov
sub
push
xchg
mov
add
add
and
mov
or
mov
rorl
add
jmp
fidivrs
js
mov
xor
xchg
push
jmp
scas
mov
shll
std
pop
nop
mov
sub
lea
xchg
push
jmp
xchg
test
xor
imul
stos
or
mov
push
and
fstps
jmp
fwait
cmp
jbe
in
pop
sub
add
jmp
jl
jmp
mov
es
mov
pop
xchg
add
add
xchg
sub
push
jmp
inc
sub
mov
scas
dec
fsub
mov
inc
je
jmp
adc
loopne
pop
aas
or
xchg
dec
inc
xchg
push
mov
mov
mov
mov
mov
pop
xor
pushfw
sub
mov
push
call
out
dec
fisubrl
std
cmc
push
add
add
add
or
add
xorl
mov
add
int
add
sub
notl
or
add
add
loop
pop
xchg
roll
add
add
daa
cmpsb
cltd
loopne
add
add
cmpsb
or
mov
les
xchg
add
add
icebp
incl
add
push
push
xor
call
push
imul
add
add
add
notb
jg
push
add
add
mov
add
add
inc
and
lret
xlat
rolb
roll
sub
xor
rolb
xor
rorl
xor
mov
decb
inc
dec
jne
sub
add
add
aam
and
mov
add
pop
rorl
inc
dec
adc
shrd
les
add
test
or
add
add
add
out
add
add
adc
ja
jae
adc
daa
push
xchg
add
add
mov
kmovb
gs
cwtl
xchg
jb
lods
leave
fwait
and
sbb
push
nop
dec
adc
push
pushl
dec
and
or
rorl
movl
movl
add
push
sub
mov
rorb
inc
dec
jne
sbb
stc
or
pushl
ja
push
pushl
ja
and
pop
dec
lds
pushf
xchg
mov
add
stos
inc
add
add
add
clc
add
jbe
push
int3
add
add
pushf
outsl
stos
push
add
push
add
test
mov
add
cmc
test
in
cld
mov
notb
inc
dec
jne
jle
ret
cmp
add
add
cmp
add
add
jl
sti
js
fildl
add
add
pop
add
add
sub
fldt
add
add
js
pop
incl
sub
popfw
subb
fists
xchg
bnd
add
mov
decl
incl
add
inc
dec
jne
sub
movb
movl
mov
xchg
mov
sub
sub
mov
popfw
jmp
inc
add
push
jmp
jle
nop
sub
sub
xor
lea
sub
sub
inc
dec
xchg
lea
inc
push
mov
mov
mov
pop
xchg
lea
lea
lea
lea
lea
push
jmp
mov
and
inc
push
nop
mov
pop
mov
shll
ret
ret
call
dec
jne
pushfw
call
push
popl
or
roll
roll
sub
xor
mov
xor
rolb
xor
mov
call
repnz
sbb
cmc
sbb
ljmp
add
add
and
decl
pushl
or
add
push
movl
rorb
rorl
xor
movl
rorl
xor
mov
mov
xor
mov
add
decb
inc
dec
jne
sub
movb
movl
rorb
xchg
mov
sub
xchg
mov
add
popfw
jmp
or
repnz
mov
imul
mov
roll
sub
xor
rorl
xor
roll
xor
and
rorl
or
movb
add
sub
xor
jo
test
lea
mov
cmp
lea
not
cmovs
not
xadd
verw
dec
mov
rol
inc
arpl
mov
jmp
not
cmovo
test
dec
stc
push
pop
xor
cmovge
cmp
cld
movl
rorl
xchg
mov
sub
mov
xor
add
push
mov
mov
rorb
jmp
fstps
pushfw
mov
sub
add
mov
call
inc
cmpsl
cs
sub
std
push
sbb
mov
and
add
subl
jns
and
add
add
add
xchg
out
xchg
mov
add
notb
inc
dec
jne
sub
xorw
shlb
add
add
rorl
fnstcw
add
rorb
loopne
xchg
add
jl
fmuls
adc
add
add
or
add
or
add
jle
test
mov
or
add
inc
dec
jne
sub
notb
or
cltd
jle
sub
add
mov
icebp
mov
add
add
movl
and
roll
or
call
movb
rorb
mov
call
clc
push
sub
in
mov
rorl
xor
rorb
mov
xor
mov
xor
mov
add
add
add
sub
jmp
mov
inc
je
adc
mov
and
add
rorb
inc
dec
jne
pop
roll
add
popl
fwait
pushl
imul
mov
add
add
add
decl
jmp
rolb
shlb
jne
dec
add
aas
addl
add
add
loop
add
push
mov
faddp
xchg
add
add
fidivs
rorl
push
psrlw
and
roll
or
movb
rorl
rorb
add
subb
inc
dec
jne
sub
movb
movl
roll
xchg
mov
sub
movl
sub
xor
rolb
mov
roll
xor
rorl
mov
mov
xor
mov
popfw
jmp
testl
cbtw
call
push
popl
xor
push
and
popl
push
xor
lea
verw
push
pop
lea
xchg
arpl
movswl
verw
mov
cmovne
mov
bsf
rol
cmovne
mov
mov
arpl
add
mov
test
cld
mov
sub
xor
rorb
movb
mov
xor
rorl
rorl
mov
xor
mov
xchg
mov
add
call
push
jmp
inc
jns
jmp
pop
insb
xor
jmp
xchg
pop
add
and
outsb
por
mov
inc
pop
xor
shlb
push
dec
adc
div
jmp
fs
xchg
call
lea
push
mov
mov
mov
pop
add
add
xor
sub
push
mov
mov
mov
mov
mov
pop
push
jmp
addl
jle
jmp
sub
mov
sbb
xlat
les
xor
cmp
jmp
dec
loope
hlt
jmp
sbb
fisubrs
sub
dec
inc
jmp
fstpt
mov
and
inc
push
cmp
je
lea
mov
xor
xchg
mov
pushfw
sub
xchg
mov
push
call
ss
lods
pop
sub
stos
es
and
rorl
roll
or
mov
add
add
add
push
sub
mov
xorb
inc
dec
jne
sub
movb
movl
rorl
rorl
sub
mov
mov
add
popfw
jmp
mov
adc
xor
or
sbb
cli
stos
or
or
push
and
fstps
rsm
fwait
cmp
jbe
in
add
push
dec
dec
outsl
jl
sub
add
push
xor
push
jmp
add
jne
cmp
jne
sub
sub
mov
push
sub
mov
add
rorl
xchg
mov
sub
call
push
popl
and
push
mov
add
add
add
rolb
movl
xchg
mov
sub
sub
mov
push
add
mov
sub
roll
rolb
xor
rorl
xor
rorl
roll
roll
xor
mov
add
push
and
push
add
xchg
mov
add
rolb
rolb
rolb
xchg
mov
sub
call
push
popl
xor
mov
sub
add
mov
add
pushfw
push
add
sub
mov
call
pushf
lret
mov
push
jg
inc
test
jmp
or
lcall
pushl
or
rorb
roll
xor
rorl
rorb
xor
mov
add
push
push
mov
or
add
xor
add
notb
inc
dec
jne
sub
xchg
subb
fbstp
aas
cld
shlb
enter
add
xchg
hlt
fdiv
and
mov
or
rorl
mov
movb
add
rorb
inc
dec
jne
sub
xorl
in
sbb
subl
pop
sub
roll
add
add
inc
sbb
add
jle
incb
add
cmp
push
push
and
pushf
movsb
add
add
add
rorb
inc
dec
jne
sub
movb
movl
mov
add
sub
mov
popfw
jmp
or
pushfw
call
rorb
and
roll
or
push
or
call
mov
pop
or
sub
call
sub
mov
notb
andl
and
aam
roll
mov
rolb
or
rorl
add
incb
inc
dec
jne
sub
movb
movl
mov
xor
add
movb
xchg
mov
add
popfw
jmp
ja
jmp
sbb
sub
mov
popl
push
add
lea
clc
cld
push
mov
xor
add
and
add
sub
mov
mov
jmp
mov
roll
call
push
popl
or
push
add
popl
mov
sub
mov
or
add
add
nopl
popl
movb
rorb
rorl
rorl
mov
mov
sub
xor
rolb
mov
xor
mov
rorl
xor
xchg
mov
add
sub
push
rorl
and
rorb
or
rorb
movl
movb
add
add
sub
mov
call
push
popl
or
push
sub
mov
sub
mov
add
add
call
rorb
and
mov
mov
rorl
or
push
pop
sub
mov
or
add
add
movb
rolb
mov
jmp
pop
xor
shlb
int3
adc
add
add
mov
call
mov
inc
mov
mov
call
fs
xchg
ror
into
out
cld
roll
mov
movl
roll
rorl
mov
call
mov
rolb
movb
mov
push
add
xchg
mov
add
xchg
mov
add
sub
xchg
mov
push
rorl
rolb
xchg
mov
sub
sub
and
mov
mov
or
movb
movb
add
nop
mov
xchg
mov
sub
push
xchg
mov
add
sub
push
push
mov
and
add
xor
add
xor
add
sub
mov
push
movl
rolb
roll
sub
xor
rorb
mov
xor
rorl
mov
xor
mov
add
mov
mov
roll
mov
add
push
xor
push
add
xchg
mov
sub
mov
or
add
call
push
popl
xor
push
roll
movb
mov
xor
rolb
rolb
rorl
xor
rorb
rorb
rolb
xor
mov
add
add
mov
and
add
movb
rorl
rorl
rorl
rolb
mov
movb
rorl
rolb
rolb
push
xor
push
mov
add
add
add
and
rolb
movb
rolb
or
mov
rorl
add
sub
cmp
jne
pushfw
mov
sub
mov
movl
sub
xor
mov
xor
movl
roll
xor
sub
mov
sub
call
into
xor
fisubrs
aaa
aaa
sub
mov
addl
int
push
das
notw
cltd
xchg
add
add
add
add
add
add
les
add
mov
xorb
inc
dec
jne
sub
rorl
fstpt
mov
add
add
push
roll
roll
sub
xor
rorl
xor
rorb
movb
xor
mov
incb
inc
dec
jne
sub
push
push
rolb
rorl
xor
roll
movb
xor
rorb
rorl
roll
xor
mov
add
add
add
decb
inc
dec
jne
sub
movb
movl
mov
or
add
mov
add
add
popfw
jmp
notl
movzbl
movsb
cld
incl
add
and
mov
push
add
add
dec
lds
or
pop
frstor
sahf
push
rorl
rorl
xor
rolb
rolb
rorl
xor
mov
movl
xor
mov
add
add
add
notw
cltd
or
or
add
add
xchg
jo
add
jle
jp
add
xor
fwait
in
add
ja
notw
jle
xchg
add
add
jmp
sbb
mov
cld
decb
inc
dec
jne
sub
notw
jg
mov
outsb
add
repnz
add
add
lds
add
and
mov
cmpsl
and
mov
add
add
add
rorb
inc
dec
jne
sub
notw
or
add
add
add
add
addr16
dec
jne
sub
pushfw
push
push
call
inc
ret
inc
inc
mov
lcall
decl
incl
mov
add
add
add
rorb
inc
dec
jne
sub
add
sub
xchg
jmp
in
add
push
dec
subl
mov
movsb
add
add
xchg
xchg
mov
add
negb
inc
dec
jne
jge
mov
xchg
jne
pop
add
add
jg
cld
add
add
outsb
push
add
add
add
add
add
add
ret
mov
enter
add
add
or
rorl
pop
aam
and
or
mov
add
add
inc
xor
movb
add
decl
incl
sti
mov
gs
rorb
cmc
int3
jg
incb
add
incb
add
pop
scas
jmp
outsb
data16
mov
add
add
add
negb
inc
dec
jne
sub
movb
movl
roll
movb
roll
pop
mov
add
add
popfw
jmp
shl
jbe
fxch
dec
out
or
pop
movsb
aam
xchg
and
decl
incl
pop
movsb
aam
adc
mov
add
add
rorb
roll
roll
sub
xor
mov
xor
rorl
xor
mov
jmp
sub
scas
dec
fsub
mov
test
in
add
je
cmp
xchg
mov
add
movb
xchg
mov
sub
push
xor
push
mov
and
add
sub
mov
or
add
mov
pushfw
xchg
mov
sub
xchg
mov
sub
call
cmc
ds
xor
outsb
insb
insb
pop
push
xchg
mov
add
notb
inc
dec
jne
sub
rolb
lcall
add
add
negb
inc
dec
jne
sub
push
mov
add
add
decb
inc
dec
jne
sub
nopl
rolw
nop
testb
nop
add
add
int3
roll
add
add
aaa
cmp
push
add
call
rorl
rorl
roll
mov
call
sbb
cmp
decl
ljmp
mov
add
add
negb
inc
dec
jne
jge
mov
add
add
les
roll
add
aam
pop
xchg
sub
loop
icebp
jecxz
icebp
jecxz
pop
sub
jg
add
add
lods
jne
jne
jne
jne
jne
movsl
lcall
test
xlat
testl
sub
cmc
and
mov
les
sbbb
jne
and
lds
call
incb
jmp
incb
andl
xchg
add
mov
and
and
sti
mov
gs
cmc
scas
add
lcall
call
adc
xchg
and
incl
jg
call
icebp
incl
sar
jmp
ljmp
push
mov
or
add
and
add
popfw
jmp
cmp
sbb
adc
pushf
push
or
push
xor
call
and
maskmovq
sti
mov
sub
adc
cli
cli
pop
notb
ds
and
add
mov
add
add
add
pop
or
add
push
je
jecxz
add
add
dec
add
add
cltd
addl
xchg
mov
add
xorb
inc
dec
jne
sub
movb
movl
mov
and
add
sub
mov
popfw
jmp
in
scas
mov
call
roll
mov
call
push
popl
xor
mov
movzwl
cmovns
push
pop
xor
and
xchg
verw
cld
add
xchg
mov
mov
add
add
pop
pushfw
rorl
roll
rorl
sub
xor
rorb
xor
rolb
rorb
xor
rorb
push
movb
roll
mov
movb
rorl
mov
xchg
mov
sub
and
add
sub
sub
mov
call
test
ljmp
cld
decl
jmp
xchg
sbb
add
xchg
testl
add
add
decb
inc
dec
jne
sub
movb
movl
rolb
xor
roll
movl
rolb
xor
roll
rorb
rorl
xor
mov
add
rolb
roll
xchg
mov
add
popfw
jmp
cmp
xchg
sti
movl
roll
roll
rorl
nopl
rorb
movl
movb
nop
push
add
push
sub
mov
sub
add
mov
call
push
popl
xor
push
and
movb
or
movl
movl
add
add
push
push
mov
movb
mov
sub
xor
roll
rorb
xor
mov
xor
mov
add
add
and
add
add
pushfw
rolb
rorb
movl
mov
roll
push
add
call
movb
mov
and
mov
or
call
xor
lret
push
cld
testl
add
xchg
mov
xchg
rorw
adc
add
add
and
fisttpl
add
js
out
cmp
push
adc
mov
pusha
xchg
pop
add
add
data16
add
add
lea
inc
cltd
notl
jle
test
add
push
push
mov
add
nop
in
add
and
xchg
add
add
mov
mov
add
rorb
inc
dec
jne
sub
notb
cltd
notl
xchg
lock
mov
xchg
mov
sub
incb
inc
dec
jne
sub
push
push
mov
add
or
add
negb
inc
dec
jne
sub
notl
or
incb
add
xchg
lock
incb
inc
dec
jne
sub
xorw
leave
jns
pop
add
add
add
xchg
imul
add
jb
add
lcall
lret
pop
dec
xchg
fwait
and
add
add
add
add
xchg
mov
add
xor
add
decb
inc
dec
jne
sub
movb
movl
sub
mov
movb
xor
movl
rorb
roll
xor
roll
xor
mov
add
popfw
jmp
or
or
xor
and
and
inc
and
test
mov
mov
rol
inc
and
lock
mov
call
rorl
rorl
and
movb
rolb
rolb
or
push
rorb
movb
push
and
mov
mov
roll
or
rolb
mov
rorb
add
xor
add
add
mov
xor
add
push
add
push
pop
sub
push
xchg
mov
add
add
add
pop
jmp
xchg
sub
pushfw
call
rorl
rorl
movl
and
roll
rolb
or
call
rorl
movb
rorb
and
roll
or
call
fwait
sarl
incl
add
decl
incl
add
xchg
inc
sub
add
add
jle
inc
add
add
or
cmp
add
pmullw
bound
add
add
ss
pop
add
add
das
inc
xchg
arpl
add
cltd
or
jg
jno
add
dec
inc
sbb
addl
or
test
add
push
and
rorl
or
roll
movb
add
incb
inc
dec
jne
sub
movb
movl
sub
mov
push
rolb
sub
xor
mov
rorl
xor
mov
roll
mov
xor
mov
and
add
popfw
jmp
ljmp
scas
xchg
sub
add
jmp
cwtl
icebp
push
inc
sub
xchg
popa
xchg
call
nopl
push
and
push
mov
add
add
sub
mov
call
push
popl
xor
push
add
mov
sub
mov
add
add
jmp
je
adc
loopne
add
add
add
add
add
sub
mov
jno
arpl
xor
jns
inc
inc
xchg
shl
mov
test
mov
verw
cld
cld
xchg
mov
add
and
roll
or
roll
movl
add
jmp
pushfw
rorl
sub
xor
rorl
rorb
xor
rorl
xor
mov
xor
add
sub
movl
movb
sub
xor
rorb
xor
rorb
mov
roll
xor
mov
call
mov
cli
xchg
pop
or
jno
jg
xor
pop
rorl
clc
cli
add
add
lds
mov
push
cltd
pushf
xchg
mov
sub
push
and
call
test
iret
adc
mov
cld
jmp
mov
pop
add
and
pushf
movsl
jp
mov
jmp
inc
pop
xor
shlb
int3
adc
div
fs
xchg
ror
into
out
cld
test
jmp
or
add
cmp
jle
jmp
sub
mov
sbb
xlat
les
cs
pop
gs
dec
loope
hlt
sbb
fidivrs
js
mov
sbb
addb
add
add
mov
and
in
cld
decl
incb
inc
dec
jne
sub
jg
mov
inc
rolb
push
xor
incl
jg
filds
add
push
inc
dec
jne
fadds
push
push
push
inc
data16
push
adc
stos
push
dec
lcall
inc
pop
or
adc
mov
insl
scas
mov
push
push
out
int3
add
inc
rolb
jl
add
mov
pop
or
mov
in
add
add
xchg
sub
add
add
add
jmp
dec
dec
outsl
jl
pop
mov
subw
sbb
add
xchg
incb
add
inc
insb
daa
lcall
mov
add
add
add
add
xchg
mov
rorb
inc
dec
jne
shll
adc
add
add
pop
addb
cmpsl
xchg
clc
incl
loopne
jmp
jmp
add
add
cmp
rorl
or
movb
rorl
arpl
adc
shll
add
add
pop
add
add
add
add
or
add
popfw
push
mov
or
add
rorb
inc
dec
jne
sub
notb
cltd
roll
loopne
add
add
pop
inc
and
mov
decb
inc
dec
jne
sub
push
and
roll
rolb
rolb
or
mov
add
rolb
inc
dec
jne
sub
nopl
rolb
int3
notl
or
add
add
or
add
cwtl
fiadds
pop
and
sub
add
add
xchg
notl
js
push
pop
xorb
inc
dec
jne
sub
subb
inc
or
add
add
jne
sub
movb
movl
and
rorb
or
rorl
movl
rorl
add
sub
mov
popfw
jmp
sub
push
stc
roll
jmp
sub
imul
xchg
add
add
movb
movb
roll
and
rolb
movb
rolb
or
mov
sub
mov
and
add
add
call
push
popl
xor
push
xchg
mov
add
sub
mov
rorl
sub
xor
mov
mov
xor
mov
rolb
xor
mov
mov
sub
push
push
roll
roll
xchg
mov
sub
and
add
add
xchg
mov
add
add
call
rorb
movl
and
rolb
roll
or
mov
mov
sub
xor
rorl
rolb
movl
xor
movl
xor
mov
mov
lea
cld
rorb
mov
add
add
xchg
mov
add
push
push
mov
mov
mov
mov
mov
mov
mov
pop
xchg
push
roll
rolb
sub
xor
movb
xor
roll
rolb
xor
mov
sub
xchg
mov
verw
cld
and
mov
roll
or
rorb
add
and
roll
or
rorl
add
push
pushfw
push
and
mov
sub
call
dec
and
push
cmp
aaa
cmp
rorl
sub
xor
rorl
xor
mov
mov
xor
mov
push
add
xchg
mov
incb
inc
dec
jne
sub
addl
jge
lahf
repnz
add
mov
add
outsb
pop
xchg
add
add
in
push
and
movl
or
rorl
movl
rorl
add
xorb
inc
dec
jne
sub
movb
movl
mov
add
push
movl
roll
sub
xor
mov
roll
rorb
xor
rolb
rorl
movl
xor
mov
or
add
popfw
jmp
clc
in
pop
test
test
and
pushfw
call
push
popl
xor
call
push
popl
or
call
push
mov
or
jmp
cmp
rorb
rolb
or
rorb
rorb
add
and
add
push
push
and
roll
or
movl
add
or
add
subb
inc
dec
jne
sub
bndstx
rorb
mov
xchg
add
xchg
or
inc
and
sub
xor
rorb
xor
rolb
mov
rorl
xor
mov
addb
inc
dec
jne
sub
xorw
das
popf
out
add
cld
sbb
out
add
add
add
add
add
add
add
add
negb
inc
dec
jne
sub
addw
mov
add
dec
sbb
xchg
cmp
add
cltd
subl
add
xchg
mov
addb
inc
dec
jne
sub
movb
movl
mov
add
add
mov
and
add
popfw
jmp
push
rolb
xchg
mov
sub
push
rorl
sub
xor
movl
movl
xor
rorb
xor
mov
sub
sub
mov
add
jmp
xlat
les
jae
sub
xchg
mov
push
mov
add
add
sub
mov
sub
sub
add
nopl
push
jmp
sbb
fidivrs
and
lea
sub
sub
mov
mov
rorl
roll
push
add
push
mov
xor
add
add
mov
and
add
sub
xchg
mov
push
pop
sub
pop
push
xchg
sub
sub
jmp
inc
sar
lahf
in
mov
mov
lea
xchg
xchg
lea
xchg
jmp
or
add
ret
add
sub
call
push
popl
or
push
add
xchg
mov
sub
mov
add
movl
movl
rorb
sub
xor
rorl
rorb
xor
rolb
rorl
roll
xor
mov
mov
add
add
xchg
mov
sub
rorl
movb
rorl
push
xor
mov
add
pop
add
bndstx
roll
roll
call
rorl
rorl
mov
mov
add
movb
rorl
rorl
xchg
mov
add
sub
jmp
cmpb
or
loope
mov
mov
mov
mov
mov
pop
nop
push
jmp
sub
pushfw
mov
sub
xchg
mov
sub
call
inc
leave
test
stc
cli
cli
movb
movl
sub
xor
roll
rorb
xor
rorl
xor
mov
push
sub
mov
decb
inc
dec
jne
sub
addb
lods
addl
xchg
add
xchg
or
decl
incl
add
inc
dec
jne
sub
push
and
roll
roll
or
mov
rorl
add
incb
inc
dec
jne
sub
push
xchg
mov
add
negb
inc
dec
jne
sub
movb
movl
sub
mov
push
mov
and
add
add
add
popfw
jmp
inc
outsb
adc
mov
pushfw
mov
sub
call
push
popl
xor
call
push
sub
add
ss
inc
inc
and
mov
or
mov
rolb
add
push
add
mov
rolb
inc
dec
jne
sub
xorl
mov
call
add
pop
add
add
subb
inc
dec
jne
sub
rolb
addw
jmp
add
add
ret
sahf
add
add
sahf
inc
fdivrs
add
add
add
rolb
inc
dec
jne
sub
movb
movl
push
rorb
sub
xor
movl
xor
rolb
movb
rolb
xor
mov
or
add
mov
add
add
popfw
jmp
push
dec
out
jmp
add
push
mov
xor
roll
xor
rorl
roll
xor
mov
add
sub
and
rolb
or
rorl
movl
add
call
mov
mov
and
rolb
movb
mov
or
push
push
mov
xor
add
add
add
add
rorl
rorl
rolb
xchg
mov
sub
roll
rolb
rorb
jmp
cmp
xchg
pop
add
and
ror
push
or
push
and
mov
mov
ror
not
xor
not
lea
verw
push
pop
push
pop
test
jmp
mov
xor
neg
push
pop
mov
cld
pop
movb
xor
roll
rolb
xor
movb
xor
mov
add
add
pushfw
push
xor
call
push
popl
xor
call
adc
sub
call
xor
je
fbstp
rol
rolb
xor
rorb
rorl
roll
xor
rorb
xor
mov
add
push
and
roll
or
rorb
add
rorb
inc
dec
jne
sub
push
pop
xorb
inc
dec
jne
sub
movb
movl
mov
xor
add
and
mov
roll
roll
or
roll
mov
rorb
add
popfw
jmp
cs
xchg
and
inc
dec
and
testb
and
not
inc
and
roll
push
xor
xchg
mov
sub
call
sbb
pop
pop
inc
lea
rorb
xor
roll
xor
rorl
xor
mov
add
rolw
add
inc
add
add
ja
orl
push
adcl
xor
pop
add
add
out
sub
pusha
add
add
xchg
data16
add
xchg
incl
add
pop
rorl
mov
jl
add
add
xchg
addb
add
jbe
add
cmpsb
mov
out
push
roll
sub
xor
rorl
xor
rorl
rorb
roll
xor
mov
notb
inc
dec
jne
sub
roll
sbb
add
movsb
add
add
add
add
add
decb
inc
dec
jne
sub
push
and
movb
mov
rorl
or
rorl
add
rorb
inc
dec
jne
sub
push
mov
rorb
xchg
mov
sub
addb
inc
dec
jne
sub
movb
movl
movb
rorb
xchg
mov
sub
mov
and
add
popfw
jmp
dec
cltd
arpl
add
bndstx
jmp
jno
xlat
les
xor
pushfw
call
rorl
movl
and
movb
rorl
or
push
add
call
cmp
adc
jae
add
add
mov
rorw
pop
push
mov
add
add
negb
inc
dec
jne
sub
movb
movl
and
roll
movb
rorl
or
mov
add
add
xchg
mov
popfw
jmp
shl
pushfw
call
push
popl
and
push
call
or
pop
loopne
out
incb
jmp
push
pop
pusha
pusha
movb
add
mov
xchg
push
pop
addb
inc
dec
jne
sub
notw
xchg
in
mov
add
rorb
inc
dec
jne
sub
rorb
xor
mov
les
mov
incl
add
inc
dec
jne
sub
movb
movl
push
add
xchg
mov
or
add
push
rorb
sub
xor
movb
rorb
rorl
xor
rorb
xor
mov
xor
add
popfw
jmp
cmp
mov
aaa
inc
xchg
xchg
std
repnz
sub
add
add
xor
xchg
jmp
push
xchg
test
xor
lea
sub
roll
jmp
sbb
cli
stos
or
rolb
movb
nopl
rorl
mov
call
push
popl
add
push
and
mov
rorb
or
movl
movb
add
add
rorb
xchg
mov
sub
push
push
add
xchg
mov
sub
sub
mov
sub
sub
xchg
mov
mov
sub
lea
xor
push
pop
mov
nop
lea
mov
mov
inc
nop
cld
push
sub
mov
add
add
add
xchg
mov
ror
pushfw
rolb
movl
rorl
sub
xor
mov
rolb
xor
rolb
xor
and
rorb
movl
movb
or
rorl
roll
rorb
add
sub
call
movb
mov
call
inc
clc
movsb
push
popf
adc
sub
cld
std
std
pop
rorb
loopne
push
add
add
int3
test
and
mov
pushf
movsb
add
add
sub
incb
inc
dec
jne
sub
push
roll
rolb
mov
push
add
xchg
mov
xor
add
addb
inc
dec
jne
sub
subl
jae
sub
add
add
pop
push
jnp
dec
and
add
and
mov
rorb
xchg
mov
sub
xorb
inc
dec
jne
sub
push
sub
mov
addb
inc
dec
jne
sub
movb
movl
roll
sub
xor
rorl
rorl
movb
xor
rorb
roll
rorl
xor
mov
mov
add
popfw
jmp
and
insb
ficoml
add
add
add
add
and
add
add
push
popl
xor
call
xor
imul
cmp
rclb
xor
sub
and
add
pushfw
push
and
call
movb
rolb
mov
call
stc
inc
add
xchg
mov
addw
orb
sub
add
popf
sbb
add
fldcw
pop
aas
or
push
clc
jmp
shll
aaa
movsb
or
push
das
cmp
sbb
inc
out
aam
jb
inc
jns
pop
insb
xor
xchg
pop
add
and
mov
jmp
jp
mov
inc
pop
xor
shlb
mull
xchg
jmp
ror
into
out
cld
test
or
add
addl
jle
sub
mov
in
sub
sbb
xlat
les
cs
pop
jmp
gs
dec
loope
hlt
sbb
jmp
fidivrs
js
mov
repz
lea
nop
mov
lret
test
cmpsw
push
std
repnz
sar
lahf
in
mov
mov
test
dec
rolb
sub
xor
rorb
xor
movb
rorl
xor
mov
decb
inc
dec
jne
sub
add
add
inc
add
add
rcll
add
push
icebp
pop
addr16
add
add
mov
add
neg
adc
add
add
lret
mov
add
add
add
adc
sub
inc
test
call
jmp
jmp
cmp
rolb
mov
cmp
rorl
lds
incb
mov
and
and
jmp
jg
push
add
fldl
roll
xor
rorb
xor
rorl
rorl
roll
xor
mov
add
subb
inc
dec
jne
sub
pushfw
call
push
popl
add
call
push
popl
add
call
outsb
stos
adc
pop
fmuls
fildl
pop
rcr
inc
and
dec
sub
xor
rorb
rorb
xor
rorl
xor
mov
push
add
mov
decb
inc
dec
jne
xor
add
add
add
in
xchg
fstpl
add
dec
mov
cs
mov
add
push
in
or
repnz
in
add
inc
cs
or
mov
scas
push
fucom
mov
ret
add
add
test
incl
xchg
mov
ss
movsb
or
push
das
cmp
sbb
inc
out
aam
jb
inc
jns
pop
insb
xor
pop
mov
pop
add
and
outsb
setl
inc
pop
jmp
xor
shlb
int3
adc
div
fs
xchg
ror
jmp
into
out
cld
test
or
add
addl
jle
sub
mov
sbb
xchg
add
add
dec
xor
add
cltd
rorl
mov
add
cltd
jle
dec
add
add
mov
sub
sub
push
mov
mov
mov
mov
mov
mov
mov
pop
push
jmp
jmp
loope
hlt
sbb
fidivrs
add
add
hlt
aad
or
rorb
movl
movb
xor
roll
mov
xor
mov
add
rolb
inc
dec
jne
sub
xorw
mov
faddl
add
cltd
xorl
jmp
add
xchg
sub
dec
and
sub
xor
rolb
rorb
xor
mov
rolb
mov
xor
mov
rorb
inc
dec
jne
sub
movb
movl
mov
add
add
pop
popfw
pushfw
call
mov
roll
mov
sub
xchg
and
roll
mov
or
rorl
add
sub
call
test
movsb
pushf
mov
mov
push
and
roll
or
movb
add
subb
inc
dec
jne
sub
add
xor
iret
mov
iret
lea
cmpsl
stos
stos
stos
fcompl
cmpsl
stos
stos
stos
jno
iret
pusha
popf
ficomps
cmpsl
stos
stos
stos
imul
pop
out
fcompl
cmpsl
stos
stos
stos
xor
dec
cmpsl
stos
stos
stos
imul
in
stc
mov
stos
sbb
outsb
clc
mov
xor
xor
add
adcb
xchg
add
add
dec
leave
loope
ds
push
pushf
jbe,pn
jbe
in
jbe
jbe
in
jbe
jbe
jle
xor
jbe
or
mov
jbe
mov
inc
enter
jbe
inc
push
divl
mov
xchg
jbe
jbe
xor
jns
xchg
push
jbe
jbe
pop
jns
jbe
jmp
jbe
jbe
sub
mov
sub
setbe
clc
rcll
sbbb
js
frstor
jg
xchg
stos
fwait
cmp
jbe
in
adc
dec
outsl
jl
pop
mov
es
rorb
push
stos
inc
add
add
mov
outsb
jo
add
add
add
notb
inc
dec
jne
jle
mov
cmp
add
add
cmp
add
add
pushl
jl
sti
movsl
cltd
bound
inc
stc
jg
adc
mov
push
sar
ljmp
jl
add
add
add
jg
dec
mov
add
add
jmp
cmp
add
push
cmp
add
sar
ljmp
mov
mov
loope
xchg
mov
sub
add
mov
popfw
jmp
roll
pushf
roll
rolb
sub
xor
mov
rorl
movl
xor
rorl
rolb
rorl
xor
mov
push
or
call
leave
jl
adc
or
pop
xor
inc
test
ljmp
roll
xchg
mov
sub
addl
mov
mov
in
adc
add
mov
add
imul
test
sbbb
add
xchg
cld
mov
notb
inc
dec
jne
sub
push
and
roll
roll
rorb
or
roll
rolb
add
rorb
inc
dec
jne
sub
movb
movl
rorb
push
add
xchg
mov
xor
add
roll
rolb
sub
xor
mov
rolb
xor
mov
roll
xor
mov
popfw
jmp
jno
pop
popa
dec
xchg
pop
call
push
popl
add
sub
xchg
mov
cmp
push
pop
mov
mov
cld
mov
roll
movb
mov
add
mov
add
add
sub
xchg
mov
sub
call
push
popl
add
cmova
test
cmp
dec
push
pop
dec
cld
push
push
add
xchg
mov
and
add
xor
add
sub
mov
ror
pushfw
xchg
mov
sub
call
roll
rorl
mov
call
and
cmp
mov
sbb
hlt
in
mov
or
add
push
rorl
push
push
sub
mov
or
add
and
add
decb
inc
dec
jne
sub
push
mov
add
add
incb
inc
dec
jne
sub
rorw
out
and
outsb
incl
add
xchg
sahf
add
add
add
cltd
or
jle
mov
add
out
pop
mov
js
dec
add
or
cltd
rorl
or
aam
dec
and
rorl
xor
mov
roll
rorl
xor
movb
xor
mov
add
rolb
inc
dec
jne
sub
push
rolb
rolb
xchg
mov
sub
xorb
inc
dec
jne
sub
movb
movl
push
rorl
roll
rorb
xchg
mov
sub
and
add
rorb
movb
rorl
xchg
mov
sub
popfw
jmp
orl
clc
fdivp
sbb
sub
movl
sub
xor
rorl
xor
roll
xor
mov
xchg
mov
sub
call
hlt
arpl
inc
push
adc
cmpsl
mov
pushf
jns
aas
inc
test
jmp
mov
and
inc
xor
roll
xor
rorl
rorl
xor
mov
add
addl
lock
and
add
jle
mov
fwait
inc
popf
sahf
scas
push
sub
pushl
cmp
roll
rorb
movl
xor
rorl
xor
mov
add
incb
inc
dec
jne
sub
addl
in
push
inc
rolb
add
xorb
and
fmulp
dec
icebp
mov
rorl
rorl
xor
mov
rorb
movl
xor
mov
xor
mov
add
rorb
inc
dec
jne
sub
subb
adc
movsb
add
add
add
rorb
inc
dec
jne
sub
rorb
int3
roll
and
sbb
xchg
imul
add
mov
add
rorb
inc
dec
jne
sub
movb
movl
mov
add
rorl
movb
xchg
mov
sub
popfw
jmp
pop
push
xorb
add
add
add
push
and
push
pop
mov
arpl
bts
verw
cmovnp
rcr
cmp
xchg
not
clc
mov
not
mov
mov
lea
cmp
mov
push
pop
mov
cld
mov
mov
sub
xor
movl
rorl
xor
rorb
rolb
rorb
xor
mov
mov
add
sub
push
or
mov
movb
movl
sub
xor
rorl
rorb
roll
xor
roll
xor
mov
mov
mov
arpl
jne
not
lea
cmp
shrd
rcl
test
cld
mov
xor
add
push
sub
mov
and
add
xor
jmp
out
cmp
xor
inc
and
adcl
add
pushf
movsb
add
add
popl
push
mov
rorb
sub
xor
roll
rorl
mov
xor
rorb
rorb
xor
mov
add
movl
roll
sub
xor
rorb
roll
xor
rolb
mov
movl
xor
mov
sub
mov
push
xchg
mov
add
sub
sub
mov
add
sub
sub
xchg
xor
xchg
push
jmp
hlt
sbb
pop
inc
add
ror
call
push
popl
or
add
mov
jbe
neg
je
mov
xor
xor
stc
mov
mov
cmovl
push
pop
arpl
cmp
cld
add
mov
push
roll
roll
xchg
mov
sub
or
add
ror
sub
sub
xchg
xor
rorl
mov
call
mov
rorb
rorb
and
rorl
roll
or
call
push
popl
xor
xor
cmovae
inc
shr
neg
jmp
not
arpl
push
pop
arpl
cmovp
lea
lea
cld
mov
xor
add
mov
xor
add
ror
jmp
mov
shll
push
jmp
inc
sar
lahf
in
mov
mov
ljmp
mov
add
add
dec
and
imul
add
add
jmp
or
mov
or
xchg
jne
neg
jmp
cmp
test
push
pop
btr
verw
sbb
cmp
neg
mov
xchg
rcr
lea
or
xadd
push
pop
xor
arpl
dec
dec
cld
add
xchg
mov
roll
mov
rorb
mov
xor
add
ror
pushfw
call
push
popl
and
add
mov
call
stos
xchg
add
loope
int3
rorb
ror
jmp
push
push
add
xchg
mov
xor
add
and
add
roll
es
dec
add
add
insl
push
add
add
add
sahf
stos
int3
imul
add
jne
sub
xorl
sbb
fsubl
in
add
call
scas
ret
cltd
leave
sahf
or
in
cld
decl
ljmp
mov
roll
movb
sub
xor
rorb
mov
xor
movl
xor
mov
decb
inc
dec
jne
sub
add
add
add
dec
test
mov
mov
in
cmp
lods
jbe
jl
repnz
pop
inc
cs
mov
scas
push
fucom
mov
dec
jne
adc
loopne
pop
aas
or
push
clc
jmp
shll
aaa
movsb
or
or
das
cmp
sbb
cmc
sub
daa
aam
jb
inc
jns
pop
insb
xor
xchg
pop
add
and
pushf
xchg
notb
cltd
rorl
ss
add
add
shlb
xchg
arpl
ss
shlb
int3
adc
div
fs
xchg
ror
into
out
cld
test
or
add
addl
jle
fildll
push
xlat
les
lret
hlt
sbb
xor
fidivrs
js
mov
and
inc
push
nop
mov
lret
test
cmpsw
push
std
repnz
sar
jmp
lahf
jmp
in
mov
mov
test
xor
lock
stos
or
push
and
fstps
fwait
cmp
jbe
sub
jmp
adc
dec
outsl
jl
pop
mov
es
mov
cmpb
jnp
icebp
push
inc
sub
scas
dec
fsub
push
rorl
movl
rorb
sub
xor
rorl
roll
xor
rolb
xor
mov
notb
inc
dec
jne
jl
lcall
push
cmp
add
add
jl
sti
js
fildl
add
add
pop
add
add
cmp
dec
or
imul
add
add
mov
data16
fldt
add
add
imul
add
add
jae
dec
add
add
add
add
add
add
movsb
cld
jmp
addl
int
fstps
and
mov
les
addb
add
inc
dec
jne
sub
movb
movl
add
mov
pop
popfw
jmp
or
or
push
jmp
inc
sub
lea
lea
add
add
lea
xor
xor
add
call
push
popl
xor
mov
sub
and
rorl
mov
rolb
or
mov
add
xor
add
add
sub
sub
bndldx
push
jmp
add
and
outsb
setl
jmp
inc
jmp
pop
xor
shlb
int3
adc
mov
int
xchg
ror
into
out
cld
pop
xchg
dec
jne
sub
add
add
xchg
xchg
xchg
xor
nopl
add
sub
pop
lea
sub
add
lea
nopl
sub
add
push
mov
mov
mov
mov
mov
pop
push
jmp
sbb
mov
js
mov
and
inc
push
jmp
nop
mov
lret
test
cmpsw
push
std
bnd
inc
sar
lahf
in
mov
mov
push
xchg
test
xor
imul
and
xchg
sub
sub
push
mov
mov
mov
mov
mov
mov
mov
pop
pop
xchg
xchg
nopl
sub
add
pop
push
mov
mov
mov
mov
mov
pop
nopl
sub
sub
push
jmp
add
es
adc
add
cmpb
jnp
icebp
push
inc
jmp
sub
scas
dec
fsub
pop
sub
dec
push
jmp
je
adc
loopne
pop
aas
or
push
clc
shll
jmp
aaa
movsb
or
adc
push
pop
push
mov
mov
mov
pop
ret
