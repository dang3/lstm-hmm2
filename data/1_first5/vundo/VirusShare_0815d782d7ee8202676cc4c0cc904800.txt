or
xor
or
sub
mov
test
nop
nop
nop
nop
nop
nop
nop
nop
nop
lea
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
xor
xchg
inc
push
pop
call
xchg
jmp
nop
nop
push
xchg
dec
and
ror
mov
ror
mov
sub
addr16
mov
mov
andl
addr16
push
nop
xor
xchg
jmp
mov
addr16
jmp
and
mov
sub
mov
pushl
or
pop
push
addr16
push
mov
jmp
push
mov
jmp
lock
mov
mov
movzbl
nop
nop
nop
nop
jmp
dec
inc
mov
mov
cld
add
addr16
add
push
pop
add
xchg
test
nop
nop
nop
nop
nop
mov
nop
nop
nop
nop
jle
add
or
mov
add
mov
jmp
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
xchg
call
mov
mov
add
xor
sub
or
pop
jmp
xchg
nop
nop
nop
nop
nop
push
addr16
pushl
xchg
call
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
je
lea
nop
nop
nop
nop
nop
push
xchg
push
cld
push
push
pop
push
xchg
push
nop
call
cld
jmp
je
call
nop
test
nop
nop
nop
nop
jmp
nop
nop
nop
push
push
pop
add
mov
sub
mov
push
or
xor
rol
xor
or
push
dec
or
push
sub
add
rol
pop
rol
dec
test
jne
pop
pop
call
jmp
nop
push
xchg
or
shr
or
xor
xor
mov
sub
mov
dec
mov
jmp
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jne
jmp
mov
mov
lea
nop
nop
nop
nop
nop
call
mov
test
nop
nop
nop
nop
nop
nop
nop
nop
je
call
mov
test
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
pushl
nop
nop
nop
nop
nop
nop
nop
nop
jmp
and
and
mov
jmp
nop
nop
nop
nop
pushl
nop
nop
nop
nop
nop
nop
nop
nop
shr
and
rol
and
pop
jmp
xor
mov
push
cld
call
xchg
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
pushl
nop
nop
nop
nop
nop
nop
or
pop
mov
xchg
jmp
push
nop
nop
nop
nop
nop
nop
nop
jmp
inc
xchg
jmp
push
xchg
in
nop
nop
nop
nop
nop
push
mov
cmpl
nop
jmp
pushl
mov
mov
shl
pop
jmp
and
mov
mov
xchg
lea
nop
nop
nop
nop
nop
nop
nop
inc
cld
push
nop
mov
mov
jmp
mov
mov
mov
xchg
jmp
nop
nop
nop
nop
nop
push
mov
jmp
mov
mov
andl
xchg
jmp
nop
nop
nop
nop
nop
nop
push
mov
push
push
pop
push
push
pop
pushl
mov
call
xchg
mov
call
cld
or
add
add
mov
and
mov
jmp
lea
nop
nop
nop
nop
nop
nop
call
xchg
test
nop
nop
nop
nop
nop
jne
xor
and
and
add
mov
or
sub
shr
sub
shr
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
or
shl
add
and
pop
jmp
nop
push
push
pop
or
ror
and
mov
jmp
push
mov
push
mov
push
mov
push
mov
test
nop
nop
nop
nop
nop
jmp
xor
xchg
mov
xchg
mov
mov
mov
mov
lea
nop
nop
nop
nop
nop
jmp
fwait
cld
daa
mov
xchg
andl
push
pop
push
xchg
add
push
pop
xor
or
and
or
mov
ror
rol
or
mov
mov
push
xchg
jmp
mov
xchg
mov
push
pop
mov
nop
mov
rol
shr
mov
or
mov
test
nop
nop
nop
nop
nop
nop
nop
nop
jne
xor
mov
jmp
jmp
push
mov
push
push
pop
movl
mov
pushl
xor
rol
sub
ror
add
push
xor
inc
mov
or
and
push
shr
ror
inc
xor
pop
shr
mov
sub
dec
test
jne
pop
pop
call
cmp
cld
jne
xor
xchg
cmpl
mov
jmp
mov
mov
mov
xchg
mov
xchg
sub
shr
mov
mov
mov
mov
test
nop
nop
nop
nop
nop
nop
jne
xor
mov
jmp
push
push
pop
call
xchg
shl
shr
or
sub
pop
pushl
xchg
push
push
pop
pushl
nop
push
push
pop
call
push
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
cld
rol
add
xor
mov
test
nop
nop
nop
nop
nop
nop
nop
nop
nop
jne
xor
push
pop
jmp
push
push
pop
call
mov
movl
xchg
jmp
jne
pushl
nop
nop
nop
nop
nop
nop
nop
nop
and
and
or
pop
mov
mov
mov
xchg
mov
addr16
or
rol
or
or
xor
mov
test
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
nop
nop
nop
nop
jmp
lea
nop
nop
nop
nop
nop
nop
nop
nop
push
xchg
push
mov
pushl
addr16
pushl
addr16
call
mov
leave
nop
nop
nop
nop
nop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
xchg
push
xchg
add
push
pop
push
xchg
call
nop
jmp
push
xchg
jmp
jmp
jmp
nop
rep
nop
nop
nop
nop
nop
shr
inc
or
rol
mov
shl
sub
inc
and
add
add
lea
nop
nop
nop
nop
jmp
outsl
mov
add
add
cld
pop
and
ror
pop
and
add
shr
inc
or
pop
ror
and
and
pop
jmp
or
xchg
inc
xchg
jmp
nop
add
add
add
xchg
rol
add
and
dec
inc
mov
call
mov
cmpl
cld
je
jmp
call
push
pop
cmpb
xchg
je
cmpb
mov
je
pushl
xor
sub
mov
pop
jmp
lds
setne
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
leave
nop
nop
nop
nop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
movl
nop
nop
nop
nop
nop
nop
nop
nop
xor
nop
nop
nop
nop
nop
leave
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
sub
sub
mov
pusha
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
je
push
nop
xor
xchg
inc
ror
mov
pop
lea
nop
nop
nop
nop
nop
nop
nop
nop
jmp
shl
or
pop
call
mov
push
mov
shr
and
shr
mov
mov
mov
pop
jmp
jnp
inc
mov
mov
call
push
pop
or
and
add
add
xor
xor
shr
mov
add
xchg
jmp
mov
shl
xor
shl
mov
add
xor
xchg
rorl
nop
nop
nop
nop
nop
nop
nop
add
nop
dec
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jne
mov
rol
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
shr
rol
mov
mov
sub
xchg
shr
nop
nop
nop
nop
nop
jmp
movzwl
nop
nop
nop
nop
nop
nop
nop
nop
push
push
pop
sub
or
and
pop
cmp
mov
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
lea
nop
nop
nop
nop
nop
nop
jmp
inc
rol
and
shr
mov
push
mov
call
xchg
add
xchg
push
popl
movb
mov
movl
push
pop
jmp
movl
cld
add
ror
and
dec
dec
mov
or
or
shl
mov
shr
nop
nop
nop
nop
add
mov
and
addr16
mov
xchg
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
call
cld
dec
cld
lea
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jne
test
nop
nop
nop
nop
jmp
add
nop
mov
mov
test
nop
nop
nop
nop
nop
nop
nop
nop
nop
je
mov
cld
shr
mov
movsbl
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
sti
mov
incl
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
xchg
pusha
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
call
push
pop
popa
nop
nop
nop
nop
nop
nop
nop
jmp
addr16
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
je
sub
sub
rol
mov
sub
push
pop
mov
push
pop
mov
push
pop
jmp
rol
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
xor
nop
incl
mov
jmp
test
nop
nop
nop
nop
lea
nop
nop
nop
nop
nop
jle
jmp
js
or
nop
nop
nop
nop
nop
nop
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
jbe
lea
nop
nop
nop
nop
nop
nop
nop
nop
jmp
push
mov
or
inc
and
pop
add
add
shr
mov
mov
cld
jmp
ret
dec
push
sub
mov
rol
shr
sub
mov
movzwl
nop
nop
nop
nop
nop
nop
inc
sub
shr
mov
sub
mov
and
xchg
cmp
mov
jne
and
xor
and
add
add
and
xchg
add
xchg
jmp
xchg
cmp
flds
cmp
enter
add
push
pop
mov
xchg
jmp
adc
mov
mov
xchg
test
nop
nop
nop
nop
nop
nop
nop
nop
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
xor
xchg
add
xchg
inc
xchg
inc
cld
dec
nop
nop
nop
nop
nop
nop
jne
jmp
shr
mov
add
add
mov
add
shl
or
inc
mov
rep
nop
nop
nop
nop
nop
nop
nop
inc
and
sub
sub
mov
add
nop
jmp
movb
xchg
incl
xchg
jmp
fldz
adc
test
std
incl
pop
mov
cmp
mov
je
incl
xchg
jmp
into
out
jmp
and
mov
and
rol
mov
movzbl
nop
nop
nop
nop
nop
nop
nop
nop
incl
push
pop
jmp
xor
mov
mov
mov
cmp
mov
jl
xor
xchg
jmp
or
mov
add
ror
rol
mov
jmp
add
xchg
cmpl
xchg
jne
sub
or
sub
pop
and
xor
ror
shr
or
mov
jmp
cld
mov
mov
push
nop
nop
nop
nop
nop
nop
nop
incl
mov
add
mov
cmp
mov
jl
jmp
jno
xchg
leave
mov
mov
xchg
add
cld
shr
ror
pop
push
popl
or
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
ror
dec
mov
add
or
rol
and
xor
and
add
jmp
popa
imul
mov
inc
nop
nop
nop
nop
nop
nop
nop
nop
mov
addr16
add
mov
and
pop
dec
mov
dec
and
pop
ror
pop
leave
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
dec
sub
and
add
andl
mov
add
mov
add
addr16
mov
addr16
mov
or
xor
xor
mov
add
xchg
jmp
inc
sub
dec
mov
xor
mov
and
xchg
nop
nop
nop
nop
nop
inc
xchg
inc
push
pop
shr
nop
nop
nop
nop
nop
nop
nop
nop
nop
je
test
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
je
mov
mov
xor
mov
or
rol
add
or
mov
mov
sub
xchg
jmp
cltd
nop
nop
nop
nop
nop
and
cld
add
cld
sar
nop
nop
nop
nop
nop
nop
nop
nop
nop
shr
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
test
nop
nop
nop
nop
lea
nop
nop
nop
nop
nop
nop
nop
nop
mov
nop
nop
nop
nop
nop
nop
nop
nop
jle
nop
nop
nop
nop
nop
mov
xchg
test
nop
nop
nop
nop
nop
nop
jle
and
add
and
inc
and
mov
jmp
mov
xchg
incl
mov
dec
mov
mov
nop
nop
nop
nop
nop
nop
nop
nop
jne
jmp
mov
xchg
mov
push
pop
jmp
jmp
lods
cmp
sbb
mov
incl
nop
nop
nop
nop
nop
nop
jne
nop
nop
nop
nop
nop
cmp
mov
jmp
roll
push
and
mov
sub
addr16
decl
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jne
shl
inc
mov
nop
nop
nop
nop
nop
mov
mov
sub
push
pop
decl
nop
nop
nop
nop
nop
nop
nop
jne
jmp
xchg
or
addl
add
nop
nop
nop
nop
nop
call
cld
test
nop
nop
nop
nop
je
shl
ror
and
add
mov
sub
push
pop
jmp
je
pusha
test
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
cwtl
push
call
rol
and
mov
mov
mov
incl
mov
dec
xchg
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
popa
outsl
add
nop
nop
jmp
jb
add
test
mov
call
push
add
add
rorb
or
shl
add
mov
shr
mov
movzbl
nop
nop
nop
nop
nop
shl
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
dec
xlat
xchg
jle
mov
mov
inc
mov
mov
add
xchg
add
nop
jmp
mov
mov
incl
cld
lea
nop
nop
nop
nop
sub
mov
call
addr16
cmp
xchg
jmp
aaa
icebp
push
dec
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
mov
int
addb
add
inc
addr16
cmp
push
pop
jb
inc
push
pop
cmp
xchg
jae
inc
xchg
inc
xchg
jmp
xor
jne
test
nop
nop
nop
nop
nop
mov
nop
nop
nop
nop
nop
nop
nop
nop
jle
jmp
mov
test
nop
nop
nop
nop
nop
je
mov
or
mov
xor
mov
mov
jmp
std
push
lock
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
ror
shr
dec
mov
xor
mov
add
mov
dec
nop
nop
nop
nop
jne
push
xchg
pushl
mov
call
xchg
jmp
arpl
sub
xchg
mov
cld
incl
mov
dec
mov
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jne
mov
xchg
jmp
outsb
ljmp
call
mov
test
nop
nop
nop
nop
jmp
jg
sub
notb
inc
xchg
jmp
and
mov
shl
and
mov
mov
mov
push
pop
incl
mov
jmp
adc
jmp
add
mov
sub
mov
sub
shl
mov
and
sub
or
xor
sub
mov
jmp
lcall
xchg
mov
mov
xor
xchg
cmpl
xchg
je
add
mov
add
and
or
dec
pop
jmp
push
es
call
mov
or
add
shr
shr
add
mov
mov
addr16
jmp
orl
mov
mov
or
mov
and
mov
ror
inc
mov
ror
xor
rol
xor
mov
add
jmp
xlat
pop
cmp
ret
mov
sub
add
pop
leave
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
rep
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
pushl
mov
nop
nop
nop
nop
nop
call
mov
pushl
cld
call
mov
add
mov
nop
nop
nop
nop
nop
test
nop
nop
nop
nop
nop
nop
je
sub
dec
and
add
or
sub
sub
xor
mov
add
push
pop
sub
xchg
jmp
dec
and
dec
rol
inc
mov
sub
push
pop
nop
nop
nop
nop
nop
shr
nop
nop
nop
nop
nop
nop
nop
nop
test
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
lea
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
nop
nop
nop
nop
jle
mov
xchg
nop
nop
nop
nop
nop
ror
add
add
mov
nop
nop
nop
nop
nop
movzwl
nop
nop
nop
nop
nop
nop
nop
nop
ror
shl
add
shl
or
mov
and
xchg
cmp
addr16
jne
and
xchg
add
push
pop
add
xchg
add
xchg
nop
nop
nop
nop
nop
pushl
rol
xor
dec
pop
addl
xchg
decl
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jne
add
xchg
cmpl
mov
jne
pushl
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
xor
xor
xor
xor
pop
mov
mov
mov
nop
mov
xchg
mov
mov
push
addr16
call
cld
and
shr
xor
or
pop
push
xchg
nop
nop
nop
nop
nop
mov
nop
call
xchg
mov
xchg
nop
nop
nop
nop
nop
test
nop
nop
nop
nop
nop
nop
nop
pop
nop
nop
nop
nop
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
je
sub
mov
mov
lea
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
and
sub
and
mov
add
mov
push
xchg
call
addr16
cmp
push
pop
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
je
and
or
mov
test
nop
nop
nop
nop
jne
sub
xor
sub
and
or
mov
sub
inc
or
and
add
nop
nop
nop
nop
nop
or
mov
add
mov
add
mov
jmp
jns
movzwl
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
add
rol
mov
rol
mov
add
mov
add
nop
push
mov
pushl
xchg
call
xchg
mov
xchg
add
xchg
add
xchg
nop
nop
nop
nop
nop
add
or
mov
test
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jne
add
addr16
cmpl
mov
nop
nop
nop
nop
nop
jne
pushl
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
and
mov
add
pop
mov
addr16
sub
mov
mov
add
add
and
and
xor
and
add
mov
cld
cmp
mov
jne
nop
nop
nop
nop
nop
shr
and
add
add
xchg
rol
pop
nop
nop
nop
nop
nop
mov
xchg
xor
and
add
add
xchg
or
pop
mov
mov
sub
pop
or
shr
add
mov
and
sub
shr
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
cld
and
xor
or
mov
pop
add
xor
cmp
or
xor
ljmp
leave
cld
stos
aam
mov
sbb
ljmp
or
lods
mov
mov
je
cwtl
rclb
call
std
outsl
adc
andb
and
add
mov
adc
mul
and
jle
test
lods
mov
mov
mov
lret
movsl
dec
jmp
jo
dec
data16
bound
test
clc
stos
jp
and
nop
or
in
test
pop
std
sub
jmp
rcrb
cmp
aad
add
int3
clc
ret
xchg
inc
js
add
in
pop
inc
movsl
cli
sbb
mov
fistps
pop
mov
mov
and
fimuls
mov
mov
mov
xchg
ret
pop
int3
mov
outsb
add
or
push
cmp
hlt
mov
loopne
lret
xchg
adc
and
movsb
addl
jb
mov
mov
cltd
pop
stos
push
andb
stc
jbe
aaa
mov
dec
hlt
inc
pusha
pop
adc
stc
pop
add
enter
out
fsubrs
std
fstpt
sahf
push
cmp
js
sbb
cs
mov
outsb
aad
sbb
jecxz
pop
push
push
dec
in
lods
or
enter
sbb
mov
xor
sbbb
fs
lcall
sbb
dec
mov
pop
and
push
test
aad
fs
int3
jg
shll
lock
xor
adc
ljmp
sbb
loop
cmp
fs
pop
push
jne
and
push
and
pop
lods
add
and
cmp
lods
ret
cmp
scas
jge
cmp
inc
and
mov
into
xchg
popf
rcl
inc
jmp
in
jb
enter
sbb
xor
jbe
xchg
out
test
push
jg
insb
ret
fdivrp
xchg
and
cmpsb
inc
jle
push
js
cwtl
mov
mov
movsb
mov
fsubrs
lock
addr16
jp
adc
adc
push
into
or
jmp
or
inc
into
xchg
xchg
dec
push
mov
mov
sub
stos
sub
daa
or
jmp
pop
add
pop
popa
sarb
push
in
int
add
sti
lock
xchg
pop
icebp
out
outsb
loop
xchg
sub
mov
adcb
stos
repnz
cli
inc
jl
add
sub
lods
push
mov
rcll
pop
mov
decb
pop
sbb
ja
lret
fldenv
lock
aas
xchg
or
dec
mov
mov
pushl
repnz
in
fistps
push
cmp
jecxz
xchg
movsl
sbb
and
pop
movsl
lcall
ret
pop
test
cmp
inc
adc
jb
fnstenv
scas
lahf
jae
into
sub
ss
cld
insl
in
iret
push
test
inc
cmp
shlb
push
iret
lods
popa
cmp
mov
mov
xorl
ffreep
lds
push
stc
jno
hlt
sub
add
dec
mov
int3
mov
fcmovnb
sahf
inc
jp
in
enter
rolb
pop
loopne
cmp
test
out
mov
cmp
adc
movsl
xor
negb
and
jne
lea
clc
add
or
fnstenv
sahf
jnp
xor
out
push
xor
xchg
mov
out
arpl
xor
and
rclb
arpl
mov
scas
dec
or
push
dec
ret
push
pop
pop
out
ficompl
pop
mov
es
push
out
popa
pop
aas
and
lods
sub
xchg
mov
xor
jmp
pop
roll
arpl
jbe
aas
imul
outsb
aas
cmpsb
pushf
mov
mov
or
shlb
test
cwtl
imul
sbbl
fisttpll
adc
adc
jmp
outsb
call
pop
mov
pop
js
dec
sub
testl
mov
sbb
mov
adc
dec
and
icebp
out
out
out
lret
sbb
ja
fcomps
mov
lds
mov
imul
lret
push
sbb
push
cmpsb
add
jno
sub
test
mov
fnstenv
aam
jecxz
add
loope
mov
mov
movsb
arpl
dec
xchg
push
aas
inc
inc
aad
and
mov
add
add
stc
test
push
mov
xor
pop
mov
mov
xchg
shl
cmp
jmp
push
push
addr16
mov
test
adc
pop
cmc
stos
mov
insb
imull
jl
js
or
js
sbb
lret
or
pop
sbb
xchg
cwtl
mov
imul
enter
dec
or
addl
cmp
loop
sbb
repz
test
pusha
and
outsl
test
jno
fmulp
fcmovne
aaa
test
pop
stc
sbb
mov
fiadds
sub
sbb
cltd
lcall
rcrl
stos
jmp
mov
push
or
sbb
xchg
adc
push
enter
scas
pop
and
jle
test
sbb
fstpl
pop
jbe,pt
or
mov
ret
iret
out
or
xchg
lods
jl
or
pop
add
outsl
jp
cmp
cmp
jae
loope
fwait
adc
movsb
jb,pn
fisttpll
rorl
sub
push
out
xor
shl
scas
push
leave
pop
add
pop
dec
into
jmp
mov
push
push
and
lret
add
mov
movsl
lret
cmpsb
fcoml
icebp
addr16
mulb
inc
jecxz
insb
cs
mov
mov
into
inc
xchg
lret
pop
push
inc
enter
jle
mov
enter
arpl
fnstsw
shlb
data16
cmp
pop
icebp
test
xchg
pop
add
fwait
out
repnz
push
pop
jecxz
xor
cmp
pop
dec
mov
xchg
xchg
aaa
out
pushl
and
pop
adc
cmc
inc
add
adc
nop
mov
mov
ja
jle,pn
outsl
arpl
sub
cmpsl
xchg
aam
scas
mov
fldenv
ja
mov
addb
and
in
mov
enter
and
push
out
pushf
iret
mov
mov
xchg
xchg
jle
cmpsl
fs
cmp
mov
cmp
inc
cmp
push
movsl
jno
or
dec
fnsave
mov
out
jnp
adcl
mov
jo
clc
fiaddl
cmpsl
push
sbb
sub
cmpsl
shl
enter
mov
dec
mov
pushf
jb
xchg
jge
std
adc
jmp
outsl
mov
jl
dec
rcr
jno
xchg
inc
imul
or
into
aam
push
sahf
xchg
in
sub
cmp
jmp
lods
mov
fimull
inc
push
insl
or
mov
add
cmp
fistps
xor
hlt
ret
ds
leave
mov
inc
or
push
sub
or
jo
dec
and
cmp
xchg
adc
cmc
pop
movsl
cmp
mov
adc
rolb
dec
jb
lcall
sti
loope
fdivl
mov
inc
enter
push
fprem1
out
out
cmp
mov
testl
and
outsl
push
addr16
sub
cmp
das
sbb
out
fistpll
pop
repz
push
pop
out
sub
dec
dec
inc
mov
sub
mov
fcmovne
jmp
cmp
mov
dec
or
push
push
inc
int3
dec
popf
scas
gs
loope
inc
pop
stc
mov
mov
in
pop
fxch
mov
fxch
ret
cmp
pop
jp
jp
sahf
adc
mov
and
in
pop
cli
jo
inc
jnp
popf
bound
aaa
cmp
sarb
popf
add
daa
add
aam
xchg
or
xchg
add
divl
mov
ds
cmp
jae
or
aas
xchg
xchg
cltd
pop
and
xor
in
fucomi
mov
push
rcrl
xor
in
pop
leave
test
subb
pop
pop
mov
or
mov
and
call
lcall
mov
xor
inc
inc
inc
rolb
fidivs
es
sbb
and
or
int3
jmp
mov
gs
push
jne
xchg
or
dec
cmp
mov
add
mov
adc
jp
ret
lods
arpl
mov
ds
xor
fldcw
push
test
flds
movsl
inc
push
xchg
xor
fsin
fnstsw
loop
ss
sub
pop
mov
sub
dec
aas
dec
js
shlb
xchg
jo
pop
mov
inc
mov
mov
sub
pop
aas
test
cvttps2pi
push
xchg
add
push
movsb
add
in
push
iret
les
jb
pop
test
xchg
adc
lret
push
lds
pop
add
daa
xchg
enter
xchg
pop
movsl
mov
push
pop
mov
imul
jl,pn
arpl
mov
cmp
fisubs
sub
testb
jl
jl
lret
jmp
cmpsl
dec
jmp
in
test
lods
cltd
mov
sbb
inc
jb
mov
frstor
aad
loop
pop
and
sbb
push
jae
xchg
cs
rolb
js
lods
xchg
je
mov
ss
iret
loope
orl
dec
rcrb
das
shlb
test
mov
xor
mov
cmp
dec
sbb
divb
jne
xor
xor
push
jne
les
das
sub
cs
daa
aaa
dec
push
dec
adc
test
lcall
filds
js
pop
out
jmp
scas
dec
jnp
cmpsb
pusha
cmp
outsb
hlt
out
shlb
cmp
push
stos
cmp
xor
or
insl
push
loopne
loope
push
xor
mov
es
sbb
push
stc
pop
bound
jle
outsb
ss
mov
incl
stos
mov
adc
out
xor
xchg
sahf
jmp
mov
test
dec
add
add
cwtl
jl
pop
or
out
cli
nop
lock
out
call
int
mov
sbb
fsubs
imul
gs
data16
mov
loopne
in
out
loop
lods
stos
loop
insb
jecxz
cld
or
adc
xor
outsb
cli
popa
arpl
pop
in
adc
ds
push
sub
or
mov
inc
xor
fldcw
and
mov
in
repz
xchg
cmp
or
imulb
in
jge
loop
scas
add
xor
cltd
push
fldcw
dec
lahf
or
iret
lea
jnp
mov
mov
pusha
fidivrs
jmp
mov
add
ficoms
int3
int
jg
sub
testb
rcll
test
imul
jmp
mov
stos
bound
movq
arpl
mov
stos
xchg
daa
mov
mov
test
add
pop
fsts
dec
mov
cmp
sar
sub
push
pop
adc
cmc
add
mov
loopne
adc
add
dec
jno
inc
push
fimuls
bound
mov
mov
add
nop
push
pop
cltd
sub
dec
in
sbb
mov
and
fdiv
dec
popa
jg
adc
out
iret
mov
xor
cmp
fs
cltd
push
inc
push
adc
mov
cwtl
jg
inc
sub
or
or
mov
idivl
mov
and
or
xchg
mov
adc
hlt
fdivrl
decl
jg
ds
std
movsb
scas
mov
aad
ffree
test
cwtl
sbb
test
test
frstor
pop
test
mov
fwait
push
mov
bound
ret
dec
inc
loopne
push
dec
or
inc
xchg
pop
xchg
dec
ja
aam
sub
pop
sub
and
mov
mov
fbstp
icebp
shl
movl
or
mov
stos
int
es
iret
mov
sbb
cs
push
mov
popa
add
repz
sub
or
adc
fldcw
punpcklbw
mov
cmpsb
imul
enter
ss
push
mov
add
lahf
pop
stos
and
fiaddl
dec
xor
lods
cltd
ja
xchg
jne
repnz
sahf
and
fistpl
pop
mov
adc
sbb
cld
xor
jo
insb
push
sbb
mov
cwtl
aaa
bound
mov
fimull
outsb
sbb
adc
add
hlt
add
insl
add
movsl
mov
jns
xor
lea
dec
mov
rorl
in
repz
popf
cmp
out
lock
xor
sub
sbb
mov
cmp
arpl
fcoml
mov
push
fists
cmp
dec
add
dec
fs
std
lcall
cs
jl
jl
and
mov
jne
and
rolb
dec
out
mov
out
and
inc
jmp
and
fadd
mov
add
xchg
icebp
xlat
dec
sti
lods
adc
test
int
xor
xor
in
fiadds
sbb
cmp
inc
fiaddl
clc
insb
pop
mov
xlat
addr16
inc
out
xchg
inc
pusha
popf
pop
cmp
xor
mov
push
out
mov
into
lret
and
jecxz
cltd
cmp
ja
mov
test
std
aas
cmp
jno
adc
lret
pop
cmpsb
or
mov
test
or
mov
pop
into
ficompl
dec
jmp
lahf
test
pop
mov
pop
ss
push
mov
arpl
sub
pop
jbe
loop
pop
movsb
jg
sahf
xchg
aad
cmp
shlb
cs
ljmp
pushf
cmp
fs
mov
data16
pop
pop
imul
jb
in
aaa
inc
mov
adcl
loop
ss
into
add
push
in
mov
sbb
mov
jbe
add
mov
int3
arpl
cmp
gs
shlb
xchg
inc
iret
sub
inc
add
aas
xchg
daa
lret
and
stos
adc
aam
icebp
ss
lahf
xchg
or
sbb
cmp
adc
cld
daa
cmp
add
arpl
xor
pop
adc
hlt
add
movsb
fneni(8087
sbb
orb
push
fsub
fisubrl
out
cli
push
loopne
adc
shll
movsl
test
fisttpl
or
xor
pushf
mov
sbb
rcrl
scas
mov
push
popa
lret
or
movsb
or
divl
adc
sbb
and
xchg
sbb
pop
mov
lods
out
mov
push
push
js
dec
xlat
repz
adc
sub
pop
mov
xchg
scas
push
inc
adc
pop
outsl
in
repnz
or
xchg
cvtps2pi
call
adc
inc
mov
mov
pusha
sub
jb
frstor
cmpsb
sub
insl
dec
dec
push
pop
lret
cmp
scas
xor
shlb
mov
mull
pop
sub
int
inc
les
pop
je
pop
jae
cmp
mov
loop
pop
push
jbe
test
inc
js
or
daa
xchg
dec
mov
iret
loope
nop
into
inc
inc
das
loop
cs
fdivp
test
xchg
not
adc
ss
inc
lds
xor
mov
hlt
xlat
flds
adc
xchg
filds
or
fidivrs
or
insl
cmp
sbb
aad
cmp
mov
imul
cmp
push
xchg
mov
gs
sti
jg
mov
push
xchg
add
jle
loope
cwtl
mov
dec
mov
lea
popa
into
jge
xor
adc
sbb
mov
cmp
xlat
jnp
cld
jge
inc
cwtl
cltd
sbb
mov
frstor
and
clc
xchg
or
rol
gs
dec
stos
fdivr
pop
mov
out
cmpsl
sbb
jae
xor
adc
xchg
movsl
ja
adc
or
adcl
dec
pop
and
cmc
es
and
sahf
movsl
in
pushf
sbb
sti
or
mov
leave
shlb
mov
popa
xor
fs
adc
loope
aaa
test
in
jb
adc
int
jbe
push
jmp
popa
push
push
int
orb
cmc
or
imul
sub
cmp
push
inc
fisttps
add
cmp
ret
sti
int3
int
out
fldenv
jle
push
dec
xchg
jmp
fdivrl
or
mov
xchg
mov
aad
push
and
adc
jg
aas
arpl
pop
adc
clc
cmp
aad
xor
fstpt
jnp
pop
push
xlat
xor
mov
xchg
sub
fldl
xor
loopne
adc
faddl
xchg
pop
fwait
adcl
lods
pop
mov
imul
popa
sub
jns
repz
sub
repz
adc
clc
and
xchg
in
mov
dec
lret
mov
dec
shll
repnz
mov
pop
hlt
mov
lea
pusha
add
sbb
test
mov
in
jl
sbb
dec
sahf
mov
sub
rorl
je
inc
mov
xor
mov
inc
and
fidivrl
sub
pop
xlat
aas
xchg
jns
arpl
cmp
loopne
imulb
pusha
jb
scas
sub
in
std
insb
outsl
pushf
mov
jl,pn
test
popa
pop
adc
sub
leave
arpl
nop
loop
hlt
imul
testl
sub
adc
notb
and
int3
pop
sub
xchg
dec
jns
rcll
and
mov
lahf
sbb
les
cmp
in
js
or
add
ss
lahf
repnz
inc
push
movsl
and
or
call
scas
jg
jmp
gs
das
dec
or
pop
pusha
inc
adcl
lahf
fs
mov
mov
cmp
cmp
loope
push
insl
jmp
inc
popf
cltd
xchg
sub
negb
xor
aas
cmp
xor
xor
ret
xor
shr
mov
sbb
test
clc
and
cmp
push
aad
subb
lahf
ds
data16
sub
pop
mov
add
cwtl
mov
xorb
mov
mov
inc
bound
daa
subl
test
or
call
inc
adc
or
mov
or
ret
cmpb
inc
lock
jnp
lds
arpl
les
mov
ja
xor
mov
push
jno
inc
push
fsubrs
out
js
add
fwait
in
dec
and
ret
inc
push
sub
lea
and
xor
rol
jge
add
pop
cvtdq2ps
mov
test
sub
xchg
loope
mov
repz
mov
push
call
or
in
sbb
