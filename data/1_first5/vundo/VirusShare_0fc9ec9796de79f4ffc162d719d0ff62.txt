jb
add
dec
add
outsb
add
dec
add
add
insb
add
add
je
add
add
jb
popa
add
add
outsb
add
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
popa
add
add
outsb
add
add
je
imul
push
add
je
insb
add
add
dec
add
je
push
add
popa
add
imul
add
add
add
jne
je
je
outsl
add
inc
add
add
jb
outsb
add
je
add
popa
add
add
add
outsb
add
outsl
add
imul
outsl
add
add
add
dec
add
data16
push
add
js
je
add
add
inc
add
je
je
outsl
add
dec
add
add
je
add
inc
add
je
je
outsl
add
inc
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
dec
add
insb
add
add
je
add
dec
add
popa
add
je
imul
push
add
je
insb
add
push
add
js
je
add
inc
add
je
je
outsl
add
push
add
js
je
add
add
inc
add
popa
add
push
add
js
je
add
add
inc
add
je
je
outsl
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
inc
add
arpl
add
add
add
imul
add
je
push
add
js
je
add
dec
add
insb
add
add
je
add
inc
add
jo
push
add
jb
imul
add
popa
add
add
add
add
outsb
add
loopne
cld
add
push
add
sbb
movsb
add
add
push
or
add
add
push
add
jge
gs
add
and
add
add
popl
push
sub
mov
add
add
add
or
add
mov
inc
add
mov
add
add
add
add
add
add
add
add
add
sub
add
add
add
add
ja
sub
add
add
gs
push
or
add
dec
add
inc
add
loopne
pushf
add
sub
add
roll
add
cmp
lea
sub
add
test
add
roll
sub
add
add
gs
push
mov
add
add
inc
add
loopne
ret
add
add
mov
add
adc
add
push
add
pop
add
pop
add
in
sub
add
add
add
add
add
or
add
enter
jne
gs
add
add
add
add
add
add
add
add
out
push
add
inc
add
roll
add
roll
xor
add
push
add
add
sub
add
add
add
push
mov
mov
add
inc
add
add
popa
add
dec
add
add
add
add
add
add
add
add
sub
add
add
add
push
in
ja
sub
add
add
add
xchg
add
add
add
add
push
add
add
xchg
add
add
add
add
push
add
add
add
and
sbb
pop
add
jbe
add
add
out
add
xchg
add
pop
add
add
add
add
add
adc
mov
add
add
add
cmp
imul
jbe
add
pop
add
incl
add
add
add
add
add
add
add
pop
add
jbe
lahf
add
roll
flds
sub
add
add
roll
jbe
add
add
incb
adc
add
add
jbe
add
add
add
popa
add
add
cmp
mov
add
add
add
add
loopne
sub
add
add
add
add
add
add
add
add
ja
sub
add
iret
add
cs
add
add
sub
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
xchg
dec
add
add
test
add
jb
flds
ja
add
stos
add
add
add
add
add
inc
add
pop
add
add
sub
add
add
mov
popa
add
add
popa
add
add
jbe
add
add
add
pushf
add
add
add
add
gs
add
add
add
add
iret
add
add
add
iret
add
dec
add
add
add
sub
add
inc
add
add
add
fsubrs
jl
ja
inc
pop
mov
jge
push
out
lea
sub
notb
out
stos
push
pop
xchg
pop
xor
jne
and
cltd
mov
rol
in
or
pop
fisubs
inc
dec
push
inc
sub
mov
iret
mov
clc
fldl
mov
pop
iret
inc
sub
aaa
and
and
rorl
xchg
rorl
xchg
mov
shll
add
stc
das
jnp
loope
and
out
stc
mov
pop
xorb
mov
mov
mov
jns
xchg
mov
dec
cmpsl
test
iret
xchg
fucomip
imul
fcomps
sub
lret
or
mov
ss
sub
shl
clc
fdivl
adc
lock
xor
pop
push
and
mov
test
or
xchg
sub
inc
pop
lahf
lock
enter
inc
dec
lods
es
cmc
cltd
pop
bound
dec
jle
mov
mov
dec
and
push
pop
stos
ficompl
repnz
fadds
fcmovnbe
pop
fcoml
out
fnsave
or
das
inc
aaa
aas
ret
aas
xchg
gs
jmp
xorb
inc
jmp
and
push
jns
inc
in
jns
aam
das
pop
cld
rcrl
xor
ret
adc
cwtl
clc
ret
xor
jae
jge
cmp
cmpsl
test
adc
jg
pop
push
cwtl
inc
lahf
shlb
inc
sub
jno
adc
call
mov
repnz
pop
xor
pop
xchg
cmp
es
or
mov
and
int
add
dec
shrb
sub
jg
jb
mov
lahf
push
sub
pushf
imull
add
sub
inc
xchg
inc
adc
shll
sbb
mov
mov
and
notb
je
lea
scas
stc
iret
inc
inc
mov
outsb
push
fnsave
xor
jns
add
inc
xchg
sbb
push
cmp
mov
inc
mov
idivb
cmc
xchg
ss
loop
mov
mov
and
sbb
jnp
xchg
jmp
fcompp
pop
sahf
sub
jnp
insb
or
out
jb
xchg
sub
idivb
pop
xchg
in
and
dec
repnz
mov
pop
ret
add
mov
repnz
xchg
sbb
dec
mov
movsb
cmp
adcb
nopl
inc
push
mov
js
inc
mov
pusha
dec
movsw
repz
xchg
push
mov
das
pcmpeqb
hlt
cmpsb
sbbb
shll
add
add
add
add
add
add
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
push
mov
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
push
call
mov
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
adc
and
add
outsb
pop
xchg
adc
popf
shr
sar
fucom
fstl
sub
and
jae
arpl
subl
popf
rorl
jecxz
or
cmp
imul
mov
fcomi
shrl
mov
jp
insb
dec
xor
js
xlat
inc
xchg
mov
movsb
pop
adc
sti
sub
rcrb
xchg
sub
lahf
nop
jns
inc
lock
xlat
push
mov
pop
mov
jne
mov
cmp
ficoml
xchg
mov
mov
rcll
aas
shl
jecxz
adc
pop
dec
lods
insb
inc
jge
inc
bound
xchg
sbb
jecxz
inc
in
mov
mov
out
xchg
ds
pop
xchg
push
inc
test
jb
popf
sub
repz
je
fcoml
add
aam
lods
push
mov
xchg
cld
nop
lods
repz
and
sub
and
jae
jp
mov
mov
std
jmp
sub
push
pop
and
and
sub
faddp
in
rcrl
mov
pop
inc
push
jle
cs
cmp
xor
enter
ljmp
test
outsl
outsb
pop
push
inc
jge
dec
arpl
lods
cmpl
in
ret
std
repz
fstl
sub
and
jae
arpl
lods
cmpl
in
ret
std
repz
fstl
sub
push
fidivrl
cwtl
inc
rclb
mov
rcll
sub
mov
mov
add
orl
mov
xlat
sti
shr
lret
call
mov
scas
fwait
arpl
cmp
mov
dec
and
lods
ljmp
mov
cwtl
add
jb
xor
into
mov
in
dec
outsb
ja
clc
addr16
lret
dec
jg
icebp
and
pusha
enter
and
and
xchg
insb
add
and
jge
add
dec
xchg
cld
pushf
das
jnp
mov
shlb
mov
loopne
and
cmp
arpl
dec
mov
repnz
xor
subl
insb
jge
repz
xor
jb
stc
push
cmp
mov
xchg
lods
and
dec
jns
lahf
popf
in
cmc
cwtl
push
popa
and
inc
push
push
xchg
pop
or
jnp
daa
or
scas
mov
ja
mov
ja
hlt
xchg
sti
mov
push
es
enter
daa
jb
or
outsb
daa
daa
addb
pop
add
and
mov
or
testb
aam
loop
je
les
cmpsb
out
sub
inc
adc
and
mov
lret
fcoml
int
bound
jno
fldcw
mov
jb
leave
rclb
ja
js
xchg
in
dec
cmp
ss
int
fbld
pop
pop
mov
loope
cltd
cmp
sbb
in
pop
jl
jmp
pop
push
push
mov
mov
add
pop
dec
cmpsb
out
sbb
lcall
jg
mov
and
cmpsb
faddl
push
dec
xor
fdivl
shlb
mov
fs
ret
stos
adc
neg
arpl
xlat
mov
xor
rclb
or
jmp
movsl
movsb
mov
add
mov
push
pop
fidivl
out
popf
or
pushf
push
dec
lock
notl
add
mov
call
mov
nop
cmpsb
inc
push
addr16
icebp
movsb
sti
movsl
mov
cmp
rcrb
lahf
pop
cmp
lahf
xor
call
mov
add
mov
or
out
ret
pop
xor
pop
mov
in
mov
sbb
jp
jo
jp
into
cmp
xchg
sti
adc
inc
pop
push
iret
in
push
mov
loop
test
inc
roll
pop
cmp
jl
inc
inc
test
data16
mov
jb
inc
jp
dec
aaa
xchg
add
fildll
inc
idivl
or
inc
or
daa
or
int3
imul
mov
pop
loop
sub
cmp
mull
jo
mov
pop
ja
mov
or
sarb
js
dec
cmp
mov
pop
lea
outsl
stc
daa
das
data16
test
pusha
jb
outsl
pop
test
aaa
js
pop
pop
mov
loop
stc
sbb
dec
jp
sub
negl
cmpl
mov
mov
sarl
sbb
jns
push
hlt
pop
leave
aas
enter
mov
pusha
xchg
cwtl
or
dec
insb
mov
pushf
mov
dec
outsb
mov
sbb
pop
clc
pusha
shr
stc
aad
mov
mov
js
sbbl
and
mov
loope
aaa
das
cmp
dec
adc
push
flds
out
cmp
movsb
cmp
out
push
pop
std
insl
out
sub
xor
add
loopne
inc
and
pop
sub
adc
mov
cmp
xchg
test
add
inc
lret
ficoml
popf
fcoms
cli
sahf
sbb
mov
loopne
fnstsw
lret
lahf
lock
xor
adc
lahf
xor
or
cwtl
or
je
fs
enter
ss
cmp
test
jb
loope
lock
lahf
mov
mov
cs
sub
mov
lcall
sub
cmc
scas
lods
dec
sahf
ret
int3
pop
xlat
in
popa
inc
lahf
push
rolb
arpl
stos
lods
jno
aaa
inc
scas
lcall
xorl
xor
cs
mov
inc
jge
mov
out
mov
lret
insb
or
pop
in
and
mulb
insl
repnz
cmp
leave
lret
xor
lahf
fidivrl
and
xchg
push
adc
push
mov
call
mov
add
fsts
pop
cmp
push
orl
iret
imul
fiaddl
inc
cwtl
clc
xor
repnz
int
fcmovbe
pop
push
jne
jle
sub
popa
arpl
test
xlat
test
push
fistpl
or
ss
cmc
insb
and
repz
push
jg,pt
outsl
daa
and
sti
or
mov
mov
outsb
dec
clc
cmp
int
shl
movsb
fs
add
pop
push
or
insb
inc
jp
mov
cli
leave
jno
mov
movsl
adc
lds
sbb
pop
mov
out
sti
test
push
xor
inc
sbb
sub
mov
adc
push
pop
ret
or
add
call
xor
stos
sbb
xor
mov
adc
mov
ret
imul
sub
std
nop
or
or
mov
inc
cmc
flds
sbb
enter
inc
into
insb
mov
fsubs
in
scas
mov
fwait
pushf
dec
xchg
mov
sbb
lahf
imul
imul
inc
push
loop
pop
aad
mov
data16
mov
mov
push
aaa
repnz
into
adc
xchg
call
xor
xchg
push
call
mov
into
scas
imul
and
push
ja
mov
jp
mov
xor
and
testl
pop
xor
or
sahf
aam
add
sub
mov
cmp
icebp
clc
out
mov
lret
mov
adc
xor
jnp
inc
pop
add
sub
pop
scas
ja
in
add
test
out
lods
ds
jp
jbe
inc
or
push
test
push
sub
cltd
pop
lret
xor
scas
sbb
test
int
dec
xor
mov
cli
xchg
ja
lods
jno
lret
gs
sbb
jle
push
sub
aaa
arpl
jbe
xchg
aas
jp
imul
jge
gs
call
aam
ret
mov
and
adc
sbb
inc
nop
jmp
mov
enter
out
add
ja
xor
push
lods
add
outsl
hlt
or
cmp
roll
cld
mov
insl
mov
daa
aad
negb
cmp
xor
xlat
pushf
popa
into
and
push
mov
xor
pop
int3
pop
dec
addr16
cmp
inc
dec
xor
cmc
fistpll
push
nop
pop
popa
es
fists
daa
adc
adc
jp
add
cli
hlt
fisttps
sbb
jp
xchg
xor
es
je
subl
dec
repnz
pop
scas
push
dec
inc
loope
addl
faddl
and
mov
and
push
mov
adc
andl
fs
ds
adc
test
dec
stc
inc
stos
mov
pusha
dec
mov
shrb
push
stc
aad
bound
mov
sbb
mov
ret
es
sub
gs
xchg
pop
pop
and
mov
aas
cs
and
scas
shll
push
pop
or
add
dec
jnp
cwtl
js
adc
sub
aam
fcomps
fadd
sbb
add
std
mov
xor
and
out
pop
fwait
mov
outsl
dec
out
adc
ret
dec
out
loop
gs
cmp
fstp
mov
dec
push
lret
data16
sub
or
andl
pop
popf
std
ret
iret
enter
sbb
mov
es
leave
sbbb
xlat
jne
das
call
rorl
xchg
jns
inc
adc
push
rcrl
jmp
aam
loope
in
add
sarl
shlb
in
cli
or
enter
fs
fs
cmpsl
repz
push
cs
enter
mov
leave
imul
jae
lock
stos
sbb
adc
push
push
sub
bound
add
push
lcall
pop
cmpsb
fsubrp
lods
sbb
inc
sub
cs
sbbl
outsl
jo
lods
cmp
mov
cmc
in
jbe
inc
js
enter
cs
ret
inc
ds
cwtl
push
xchg
js
fdiv
divb
rorb
rorb
ret
cwtl
xchg
xor
in
shll
and
and
imulb
pop
pop
or
arpl
xor
imull
jle
cltd
aaa
daa
adc
subb
and
pop
adc
cmpsl
dec
sti
in
mov
test
shll
loope
adc
int
pop
sbb
out
cltd
adc
push
mov
frstor
or
mov
test
int
inc
jne
mov
sarb
jle
push
popa
adc
das
xor
inc
mov
or
leave
or
enter
mov
xchg
ja
out
data16
outsl
cmp
jbe
out
lods
pop
je
sub
or
popf
mov
pop
js
fidivrs
xchg
cmc
fcomps
sbbb
out
push
xchg
out
negb
jo
cmpb
nop
stc
mov
in
sbbb
dec
add
mov
xor
mov
int
sub
jns
xchg
das
lahf
dec
js
pop
cs
orl
mov
scas
push
cmpsl
xchg
jne
jg
mulb
jmp
aas
push
cwtl
popf
ja
mov
and
adc
enterw
mov
aaa
shrl
add
sub
in
push
test
jns
adcb
scas
add
xchg
dec
xor
scas
orl
sbb
mov
movsl
push
mov
xchg
cmp
pop
sub
or
jge
cltd
int3
inc
cmp
imul
mov
xchg
pop
add
xlat
lods
jmp
ja
mov
inc
sahf
sahf
sbb
inc
fs
push
mov
inc
icebp
mov
or
sbb
push
into
clc
jmp
cs
scas
lret
or
dec
or
mov
sti
lret
lcall
adc
mov
push
icebp
xchg
jmp
pop
lahf
dec
and
lods
les
cmpsl
push
es
push
adc
push
dec
hlt
ja
adc
clc
mov
and
sbb
dec
push
out
testl
sbbb
in
aad
enter
cmp
push
jno
aam
sbb
cs
mov
mov
in
lret
cmpsl
dec
ror
mov
cmc
xchg
out
cmp
sbb
int3
jp
add
faddl
or
sarl
sarl
fisttps
xor
lret
ret
ficompl
xchg
aas
xor
inc
jl
mov
ret
adc
nop
mov
nop
lcall
add
or
testb
stos
scas
cmpsl
add
es
jb
repz
es
sub
cld
insb
ffreep
pop
es
sub
pop
mov
int3
inc
sbb
mov
sub
mov
je
and
mov
xorl
sti
cmp
xorl
add
ret
gs
aaa
cld
jmp
sub
out
jecxz
push
pop
or
inc
into
dec
cmpsb
sbb
movsb
scas
movsb
jo
sub
sbb
inc
mov
adc
cmp
xlat
adc
or
sub
data16
call
sbb
repz
pop
inc
mov
inc
xchg
stos
xchg
inc
xor
add
xor
adc
ss
pop
imul
sbb
fucomip
sahf
lahf
je
adc
mov
ficoms
push
enter
dec
dec
pushf
mov
sub
or
pause
adc
jne
dec
in
cmpsb
int3
out
fdivrs
or
fs
mov
or
int3
cs
and
mov
outsl
lahf
mov
mov
xchg
adc
and
sub
sub
arpl
add
je
aaa
add
lds
iret
movsl
xor
out
roll
inc
dec
int
mov
ss
xor
jbe
fldenv
mov
pop
pop
fiaddl
ret
inc
rorl
push
lret
aas
loop
and
add
test
push
sub
ret
stos
aas
mov
mov
sub
divl
insl
call
test
test
jp
cmpsb
imul
push
pop
push
or
rcll
xor
dec
pushf
ret
mov
xor
aad
xchg
fxch
dec
test
mov
cs
or
call
lea
xchg
gs
fldpi
insb
incl
stc
xchg
mov
data16
add
jge
cwtl
jne
jb
mov
inc
aaa
sub
sahf
adc
add
cld
pop
fmulp
jg
frstor
jo
cli
jo
sti
xchg
cmp
shl
cs
xchg
sub
pop
loope
cmpsb
aam
enter
push
jecxz
cmp
popf
outsl
insl
jnp
outsb
inc
push
std
sahf
pushl
sbb
sahf
jp
cmp
push
mov
ret
xchg
inc
cmp
xlat
jne
ja
mov
rcr
stc
notl
adc
xor
fs
outsb
xchg
cld
mov
stc
lea
dec
icebp
jge
mov
div
xchg
adc
mov
aad
push
leave
push
or
pop
fsubrs
mov
les
mov
mov
mov
dec
fs
push
mov
push
mov
push
push
dec
arpl
imul
mov
mov
sub
mov
fbstp
rcl
sub
cld
mov
enter
xlat
lahf
ret
mov
ljmp
fidivrl
push
or
jl
mov
mov
mov
enter
aas
addb
fs
add
mov
adc
mov
add
sub
mov
cmp
sbb
or
mov
bound
dec
fcmovu
mov
cmpl
stos
adc
cli
mov
push
mov
test
pop
subl
gs
lds
jecxz
cld
and
loop
mov
xchg
mov
jmp
iret
mov
cli
bound
das
or
dec
or
push
cmp
and
pop
pop
mov
sub
addr16
cwtl
daa
mov
seta
adc
mov
ja
push
ror
int3
xor
clc
imul
ror
add
push
add
scas
lcall
xor
sub
movsl
push
xchg
out
xchg
xchg
icebp
enter
add
and
fdivrl
cmp
mov
cmpsl
push
jno
mov
in
xchg
cmp
jae
jp
fsubrp
stos
stos
test
mov
loopne
les
or
shll
out
mov
push
cmc
mov
scas
iret
jo
inc
lock
and
xchg
movl
das
cld
dec
scas
xlat
and
sbb
addr16
or
fiadds
mov
shrl
and
cmpsl
fldenv
daa
pop
ret
push
sbb
cld
push
pop
lods
add
add
bound
pop
inc
mov
js
out
and
dec
and
sub
xchg
sub
push
or
or
aam
mov
outsb
insl
push
ror
ret
cmp
test
orl
fucomi
push
bound
jns
leave
idivl
cmp
inc
std
mov
xchg
ss
in
xchg
dec
lret
fisttpl
repz
jge
in
dec
and
clc
mov
xchg
or
adc
jp
bound
addr16
jno
ja
or
imul
rorb
lds
dec
or
add
outsb
fstpl
int3
lea
scas
aad
cltd
cmp
repnz
xchg
dec
fs
aaa
pushf
pop
sarl
insb
cmp
adcb
xor
cmpsl
lcall
testb
dec
in
fwait
mov
inc
sbb
jo
mov
in
mov
mov
ret
rcrl
or
sarl
sbb
lret
or
nop
je
adc
push
sub
mov
movsb
or
lods
hlt
movsb
sbb
popa
xlat
and
out
mov
xor
xchg
push
adc
popa
clc
out
add
ret
mov
arpl
pop
add
cmp
cmpsl
mov
cmp
lods
stos
jg
mov
imul
rorb
test
lock
or
push
xor
mov
pop
pop
and
dec
out
iret
lret
fmuls
loope
jbe
xor
jge
inc
pop
mov
dec
inc
mull
sbbb
mov
enter
notb
shlb
inc
sub
cltd
dec
cmp
push
cli
nop
adc
sbb
and
inc
and
rcrl
bound
test
ljmp
ret
push
pop
push
jmp
imul
and
pop
pop
cmp
stc
jbe
ljmp
cmp
pop
ret
fsubl
xor
cmp
enter
shlb
rcrl
std
sahf
push
shlb
inc
out
fmuls
addr16
sub
rcll
bound
pusha
outsb
xor
aad
imul
in
adc
mov
xor
xchg
popa
adc
lret
rolb
mov
push
aaa
xor
fimuls
jbe
in
shrb
roll
into
into
dec
ja
out
loope
je
inc
roll
inc
xor
lods
in
mov
add
push
fimull
inc
mov
lret
lret
pop
sti
mov
aaa
mov
mov
mov
pop
adc
stos
pop
imul
call
jns
sahf
sub
cmp
push
fsts
mov
sbb
fisubrl
into
adc
inc
sbb
dec
jno
roll
out
jl
push
jne
adc
imul
into
subl
cld
add
cmpsb
mov
sbb
ss
add
dec
push
cmp
xor
dec
pop
pop
call
mov
cmp
xchg
pop
dec
sbb
scas
adc
fisubl
bound
out
add
adc
cmp
aad
subl
xchg
sbb
cltd
cld
scas
lods
sub
lahf
xchg
dec
pop
mov
or
add
mov
cli
in
rcrb
dec
cld
mov
movsl
push
or
test
sub
lcall
xchg
stos
mov
lcall
fsts
and
gs
sub
sbb
cmp
subl
mov
push
pop
xor
sbb
push
scas
call
je
adc
out
in
mov
adcb
push
idiv
loop
sahf
lcall
incb
roll
fistpll
add
out
outsl
jmp
out
mov
pop
pop
xchg
test
mov
inc
sub
test
pop
mov
push
enter
sahf
jmp
pop
pop
adc
lret
sub
pop
or
in
aas
cli
out
jecxz
pop
add
mov
adc
ret
mov
jmp
and
repnz
loope
adc
stc
sub
fisubrs
or
popa
test
repnz
aaa
push
clc
or
rcrl
imul
ss
push
xchg
jp
inc
mov
adc
mov
dec
sub
es
sbb
lods
jb
push
inc
xor
inc
jne
pusha
std
fimull
jl
mov
out
ljmp
sub
jg
add
mov
jno,pn
xorl
mov
sub
mov
add
stos
and
add
pop
xchg
and
in
and
mov
test
pop
test
add
cli
rorl
lret
lea
jecxz
mov
mov
inc
fsts
or
lahf
cltd
mov
jne
out
or
and
out
mov
dec
cwtl
adc
jp
push
push
icebp
insb
dec
sub
and
cmp
push
stc
mov
xor
push
mov
in
cmp
rcl
push
movsb
in
add
mov
cmpsl
cwtl
cmc
mov
sub
aam
xor
jle
in
lcall
in
or
fistps
or
fstpt
or
mov
dec
aas
sub
xchg
and
adcl
std
fidivs
lods
dec
mov
jge
into
in
outsb
test
mov
adc
jmp
mov
inc
cmp
jno
aaa
test
cwtl
fdiv
jg
inc
mov
loope
add
dec
rclb
jp
inc
incb
imul
outsl
xchg
mov
fs
fs
pop
xor
test
jg
faddl
inc
or
sbb
add
dec
inc
mov
enter
scas
movsb
or
inc
fdivrl
out
and
setnp
dec
les
jns
sbb
xor
dec
popl
xor
or
jecxz
add
ds
popa
mov
in
imul
bound
cmp
push
insl
inc
jge
dec
arpl
lods
cmpl
in
ret
std
repz
fstl
sub
and
jae
arpl
lods
cmpl
in
ret
std
repz
fstl
sub
and
jae
arpl
lods
cmpl
in
ret
int
fstl
sub
and
repz
jecxz
insb
lods
jl
sbb
dec
add
sbb
or
sbb
sub
cmp
inc
sbb
fstps
push
lcall
and
mov
or
sbb
sub
cmp
dec
movsb
pop
movsb
push
push
mov
ss
std
sbb
sub
cmp
dec
mov
js
mov
fdivrs
stos
inc
stos
jbe
jnp
test
test
mov
pcmpeqw
mov
mov
mov
in
out
xlat
int
test
pop
inc
xchg
jnp
imul
mov
inc
stos
lahf
inc
fsubrs
hlt
test
lahf
inc
divl
sbb
mov
leave
ss
cmp
lea
clc
push
or
aas
xchg
movsb
cmpsl
movsb
xor
js
js
adc
fstps
sti
jae
pop
popa
popf
or
fs
xchg
mov
cld
mov
xor
cwtl
es
and
push
clc
xchg
xor
loopne
adc
pop
arpl
rcll
int3
test
iret
or
push
pop
mov
mov
das
push
cli
adc
repz
sub
cmp
dec
movsb
pop
mov
test
mov
test
mov
sub
push
clc
adc
outsb
mov
aaa
aad
call
std
je
inc
std
xor
cltd
lea
js
lea
mov
mov
sub
adc
adc
and
xor
arpl
hlt
outsb
mov
pop
mov
test
mov
test
mov
xor
add
adc
in
hlt
sub
cmp
dec
movsb
pop
mov
test
mov
test
mov
xor
add
adc
in
out
inc
inc
cwtl
das
pop
pop
jbe
int
mov
arpl
sahf
insl
inc
mov
add
and
pop
sbb
nop
push
out
fisubrl
cmp
and
fucomip
addr16
js
call
xchg
pop
mull
push
clc
sub
jmp
push
mul
jl
inc
mov
jge
mov
sahf
scas
mov
in
test
ret
mov
xchg
clc
stos
push
add
rcrb
cwtd
incl
jmp
mov
push
hlt
fdiv
imul
xchg
lahf
fwait
inc
cmp
xchg
in
mov
sub
jp
add
pop
jmp
ljmp
fwait
xor
jno
fwait
push
dec
xchg
dec
xlat
mov
jnp
push
sbb
aad
ja
out
add
jecxz
dec
add
test
cwtl
lret
xchg
and
push
aaa
mov
fildl
ficoms
push
cmpsb
sbb
xchg
xchg
push
dec
lods
push
jne
dec
fisubl
outsb
pop
xor
ret
add
inc
sbb
pop
adc
test
ret
popa
lea
lock
roll
sub
mov
mov
mov
mov
test
xchg
mov
mov
subb
repnz
jge
int
outsb
ss
clc
ja
test
movsl
or
push
fstl
and
push
icebp
or
jmp
lret
xchg
sub
inc
adc
xor
cmp
je
lods
das
pop
adc
cmp
push
dec
mov
sbb
push
ret
fidivrs
mov
dec
push
xor
pop
in
outsb
mov
mov
inc
adc
jns
jp
femms
movsb
mov
out
sti
xchg
and
or
mov
sti
loope
cmp
rolb
ja
jno
pop
mov
pop
dec
daa
pop
fists
xlat
ss
inc
movsl
adc
mov
cmc
fcoml
pop
pop
dec
mov
clc
int
xor
xchg
pop
daa
orl
push
rorb
adc
pop
xchg
cmp
jge
jecxz
adc
mov
adc
adc
dec
sti
leave
mov
sahf
movsl
sub
xchg
add
push
xchg
in
int
cmpsl
mov
adcb
xchg
fidivs
rclb
test
jns
mov
dec
xor
pop
push
cli
popf
fwait
ror
out
in
jno
ds
cmp
mov
sbb
and
mov
dec
aad
into
mov
inc
mov
cltd
inc
shl
pop
add
mov
dec
test
out
fs
mov
arpl
mov
jo
inc
mov
aaa
aaa
mov
mov
cmp
sub
mov
sahf
cli
and
dec
mov
sti
scas
and
lds
decb
mov
repz
std
rorb
mov
dec
into
xchg
mov
xor
push
into
fidivrs
sub
lds
aas
mov
lcall
cmp
and
xchg
cmp
out
popf
enter
insb
push
imull
sub
jns
push
inc
inc
xchg
scas
dec
sub
add
push
test
and
outsb
or
xchg
cmp
dec
inc
cmp
loope
addr16
dec
int3
bound
adc
add
pushf
call
or
ret
cmc
xor
in
pop
xchg
cmp
pop
jmp
scas
pop
fisttpll
int
mov
sti
sar
cmp
pop
in
lods
imul
jnp
repnz
inc
sbb
adc
mov
in
mov
dec
scas
push
ja
in
cld
ret
xor
call
ret
or
or
ss
sub
xlat
sub
xorl
dec
orl
stos
pop
push
jnp
dec
mov
ss
mov
ds
dec
rdmsr
aam
add
mov
dec
mov
sbb
fdivrl
test
jl
sbb
aad
or
js
daa
mov
daa
add
inc
or
push
and
in
stos
shrl
push
fwait
outsl
aas
add
mov
fmuls
mov
bsr
cli
sub
push
adc
push
mov
xor
xchg
shlb
mov
loopne
cmc
adc
push
xchg
fwait
movsl
cs
sahf
cmpb
scas
ss
xor
fs
push
and
add
sti
xchg
cmp
fildl
mov
rcll
ljmp
sahf
movsl
xchg
mov
xchg
fisttpl
adc
jmp
ret
orb
fnsave
pop
pushf
testl
jecxz
js
mov
or
jnp
xchg
leave
mov
sbb
ds
add
shll
lret
orl
xchg
pop
sub
push
leave
inc
lods
addl
arpl
dec
stos
jae
fstpl
decl
fdivrl
movsb
adc
aam
call
int
xchg
lret
loop
push
xchg
push
push
les
sub
inc
push
ffreep
push
mov
fists
cmc
pop
adc
mov
lcall
sbb
xchg
pop
jg
push
ja
mov
pop
stos
pop
leave
or
sub
dec
and
inc
mov
movsb
sbb
mov
jae
mov
inc
and
sub
daa
test
jge
push
into
mov
movb
xor
push
je
inc
push
dec
rcrl
jnp
inc
sbb
lock
cmp
xchg
jae
or
or
loop
adc
lret
adc
fstpt
push
sub
fdiv
jg
jne
or
inc
cltd
idivl
mov
imul
fidivl
xchg
add
xchg
mov
jno
orb
ds
cmp
sbb
mov
mov
mov
pop
daa
push
rorb
call
add
imul
loop
pop
lock
loope
es
fwait
dec
adc
mov
insl
sar
adc
jae
decl
mov
fwait
cli
jns
icebp
mov
pop
cltd
mov
dec
pop
fwait
in
je
inc
aam
xor
mov
bound
jae
sub
push
ja
cld
outsb
pop
sbb
push
mov
xchg
shlb
mulb
js
insb
fdivrs
mov
push
fwait
popf
in
add
sbb
dec
mov
or
fldcw
dec
push
mov
inc
mov
es
push
pushf
sub
inc
int
mov
inc
int3
xor
pop
sar
fiadds
mov
jb
test
xor
adc
sub
jae
inc
pusha
mov
xchg
and
imul
stos
lret
mov
test
pusha
arpl
dec
pop
or
out
sub
xchg
dec
fstps
sub
aaa
in
ljmp
adc
mov
dec
cli
pop
xor
icebp
or
js
push
add
or
jae
cmc
pusha
out
mov
jae
out
push
push
inc
mov
or
gs
js
cmp
cmpsl
pop
push
cmp
cwtl
cmp
hlt
sahf
popa
cmp
ja
es
enter
jmp
dec
ret
or
pop
loope
and
lds
iret
leave
insl
adc
lock
loope
adc
xchg
sti
clc
cmp
push
xor
out
aas
aaa
xchg
pusha
rcll
test
into
pop
pop
bound
cli
andl
jmp
sub
cmpsb
je
mov
movsl
out
fdivrl
jle
mov
daa
jb
jge
in
call
push
fwait
mov
hlt
scas
cld
arpl
inc
dec
pusha
mov
push
mov
loope
fiaddl
pop
out
fsubrs
sbb
pop
sbb
jne
pushf
mov
stc
lock
test
xor
pop
sbb
pop
iret
inc
mov
pop
loopne
movsl
int3
outsb
scas
jns
dec
push
pop
hlt
outsl
mov
mov
push
movq
mov
aad
mov
jge
out
mov
pop
cmp
pop
ds
popf
mov
mov
pop
adc
out
pusha
cmp
or
sub
arpl
repnz
mov
push
dec
pop
push
xchg
push
cltd
test
sahf
sub
icebp
mov
mov
mov
popa
rcll
mov
cs
sbbb
icebp
jle
out
cmp
loop
pop
or
je
adc
cmc
xchg
adc
add
lahf
add
rcrb
adc
movsl
pop
or
sti
adc
cmpsb
out
jnp
pushf
sbb
cmc
pop
or
cmpsb
stos
cmp
or
test
repz
pop
scas
add
imul
ret
or
sub
cmp
test
cmp
xor
test
xor
xor
aad
fsubrl
in
cmp
push
xchg
cmp
mov
les
lock
fdivs
rol
push
mov
or
std
decb
jl
iret
divb
push
fisubs
shl
std
aam
sbb
insb
dec
insl
aas
popf
idivl
int3
cli
leave
pop
clc
stos
mov
jno
loop
out
push
pop
cmp
ret
mov
shrb
pop
push
sbb
in
stc
pop
inc
int3
out
adc
fcomi
mov
fidivs
and
nop
cmp
imul
push
repz
fidivrs
push
pop
adc
popl
sub
loop
leave
pop
push
mov
jge
or
and
in
sub
push
arpl
dec
jb
push
push
dec
push
inc
xchg
mov
inc
jb
xchg
scas
je
stc
pop
add
jno
rcl
out
inc
xor
loop
icebp
jns
or
imul
xor
adc
movsl
stc
icebp
dec
jmp
in
jg
add
repz
cmp
daa
cmp
pop
xchg
adc
fstp
lcall
mov
add
jle
or
rol
fcomps
fnsave
pop
insb
push
loope
add
mov
mov
loop
sar
fcmovnb
xchg
loope
jge
sbb
fimull
jb
movsl
decb
leave
cmpsb
iret
push
inc
lcall
cwtl
push
andl
pop
arpl
out
imul
fwait
pop
fcoms
icebp
mov
xchg
jg
or
mov
jns
push
mov
add
outsb
add
outsb
in
cmpsb
dec
push
mov
ret
jp
mov
mov
sbb
shlb
dec
out
or
and
sbb
jecxz
fisttpll
aaa
rclb
les
xor
jle
adc
and
jnp
in
push
test
sub
leave
pop
mov
es
and
hlt
sarl
ss
xchg
dec
adc
data16
faddl
das
xor
mov
mov
xchg
push
sub
mov
data16
or
mov
cmpsl
test
mov
jg
add
int3
ss
bound
outsl
fisttpl
cltd
dec
mov
shll
shrb
xor
add
cltd
fldenv
add
cmpsb
sbb
loop
leave
addr16
idivb
pop
lods
test
imul
xor
cmp
mov
push
lret
je
inc
xchg
push
mov
sbb
fmul
add
xchg
in
inc
add
daa
insb
jmp
out
pusha
ret
cwtl
xor
cld
mov
or
das
cmpb
jae
push
cmpb
adc
orb
enter
lods
push
lds
cmpsl
inc
push
dec
in
js
mov
cmc
xchg
cmp
call
push
xchg
repnz
and
mov
push
sti
mov
xor
shl
clc
imul
popf
test
ja
popa
cmp
mov
out
xchg
mov
add
outsl
imul
inc
stos
mov
loopne
pop
cld
xchg
hlt
xchg
and
pop
push
push
jns
push
outsb
fbld
mov
mov
out
sbb
xor
test
cmpsb
add
insl
out
xchg
push
or
pop
outsb
cltd
cmp
mov
push
or
imul
insl
in
push
mov
sub
gs
sub
repz
mov
jecxz
mov
imulb
test
adc
movsb
sahf
nop
xchg
lea
mov
fisubs
dec
add
ljmp
outsb
ja
push
cmpl
scas
sbb
test
jb
xchg
push
sub
jnp
fdiv
push
jnp
fdivrl
shll
aaa
ja
mov
stc
mov
xchg
ja
icebp
inc
xchg
jmp
ss
pop
in
rcll
push
movsl
sub
pushf
andl
jbe
cmp
dec
xor
ja
test
push
add
into
arpl
fistpl
call
ficompl
ja
inc
rcl
mov
dec
and
push
pusha
and
cmp
xor
push
mov
mov
ja
les
aas
dec
shrb
mov
cmp
adc
ja
dec
int3
cmp
movsb
les
and
fdivl
mov
inc
add
cmpsb
jbe
cmp
mov
inc
jne
dec
xchg
adc
pop
lret
jle
lods
sbb
and
stos
xchg
xor
je
outsb
xchg
or
hlt
ja
pop
enter
xorb
cli
ret
int
pop
cli
push
jge
mov
int
cmp
clc
in
pop
push
dec
or
cwtl
daa
inc
out
adc
icebp
and
pop
sub
inc
repz
pop
and
jg
jmp
movsl
dec
sub
xor
jae
mov
push
aam
fs
scas
imul
mov
clc
stos
sbb
stos
enter
sub
mov
cmp
fistps
mov
jb
sahf
mov
mov
mov
lods
enter
repz
inc
shll
xorl
jnp
jno
adc
iret
sbb
in
lods
mov
frstor
rol
je
shr
xchg
gs
sbb
push
cmp
add
sbb
pop
cs
add
je
cmp
aas
out
xchg
loopne
sti
pushf
js
jp
xchg
and
mov
push
mov
push
dec
frstor
sahf
xchg
xchg
pusha
dec
and
and
push
push
popa
shll
xchg
js
pushf
mov
jo
mov
sub
adc
pop
imul
jbe
push
push
mov
test
add
scas
cld
adc
push
pop
and
jmp
push
cmpsl
aam
popf
fidivrs
and
push
add
cmp
pop
mov
inc
inc
cs
stos
sti
popa
push
mov
imul
aaa
jle
inc
stos
lcall
out
int3
push
dec
adc
pop
or
mov
mov
ja
cmp
adc
adc
push
inc
push
pop
push
sbbb
repz
rolb
iret
mov
jo
rolb
sbb
test
or
das
add
add
or
mov
cmpb
ret
or
mov
mov
decb
clc
pushf
pop
dec
aam
pushf
fptan
inc
jle
and
add
stos
rep
xchg
sar
push
mov
push
push
push
ja
or
push
cld
and
and
rorl
and
adc
in
sbb
lods
daa
idiv
cmp
pop
inc
jbe
cli
and
outsl
cmpl
test
cmp
mov
xlat
or
jl
call
ret
das
ja,pt
inc
sbb
in
push
int3
mov
inc
ret
aas
test
aam
lods
mov
fwait
arpl
rorl
jne
push
mov
inc
rclb
dec
clc
sti
sahf
xor
cld
push
out
test
gs
mov
mov
push
mov
dec
lds
divps
fbstp
stc
test
movups
not
mov
push
das
lret
pop
jecxz
xorl
js
daa
shl
and
ficompl
add
mov
pop
fsubrl
insb
cmpsb
fldl
mov
jecxz
jecxz
xor
mov
rcr
fnstenv
xchg
sbb
xor
in
popf
in
leave
shll
lret
pop
and
jge
pop
push
imulb
and
into
mov
push
lds
pop
jge
out
xor
pop
lods
imul
mov
pop
int
or
pushf
popa
sbb
fdivr
inc
xchg
loop
ds
push
adc
inc
popa
mov
or
nop
add
push
and
mov
mov
std
lock
sbb
insl
sahf
jp
adc
addr16
cmp
xchg
or
adc
les
in
aam
xor
nop
lcall
or
sbbb
shrb
pushf
loop
cmp
dec
js
push
popf
inc
adc
xor
push
inc
add
jl
addr16
inc
inc
cmp
in
or
incb
or
ficomps
sub
mov
push
sub
xor
mov
cli
xlat
jns
std
push
cmp
sarb
xor
neg
cmpsb
sbb
inc
lea
outsb
jmp
aas
xor
dec
mov
adc
aam
lods
mov
add
and
test
rorb
pop
pushf
loopne
sbb
xor
es
mov
repz
outsl
xchg
int
dec
mov
sub
sbb
pop
push
and
sbbl
test
cmp
push
lock
jge
stc
fnstsw
insb
cmp
xor
popa
lods
ret
mov
cli
or
pop
out
shlb
and
cmp
inc
fimuls
mov
scas
inc
cltd
and
divl
subb
xor
and
call
pop
bound
ss
jb
jo
pop
lret
push
fwait
and
sub
dec
jnp
jp
fwait
xlat
ror
shrl
adc
sbb
nop
movsb
jg
push
lods
adc
jne
inc
add
sahf
scas
xchg
imul
sahf
rcll
mov
mov
fldenv
loopne
sub
shll
add
xchg
or
xchg
iret
add
loope
dec
mov
add
ret
mov
idivb
fwait
setne
mov
push
sub
lret
xchg
jbe
lock
adc
lock
out
cmp
cltd
in
mov
ss
test
out
out
outsl
xchg
sub
lret
fisttpl
add
out
push
jmp
dec
xchg
clc
pushf
inc
mov
inc
jl
push
inc
out
cmp
clc
pusha
xchg
loop
add
jbe
xor
add
repnz
lock
lcall
shrb
insb
fisubl
gs
inc
incb
pop
mov
dec
push
in
cmc
sbb
xchg
outsl
jnp
mov
and
ds
cmp
in
rcll
sub
jl
cs
loop
in
sub
cld
mov
cli
or
pandn
mov
lds
xchg
cwtl
mov
cmp
mov
mov
mov
insl
shll
pop
int3
mov
loope
scas
iret
test
push
cmp
or
sbb
mov
ja
sub
xchg
enter
adc
adc
mov
add
sar
nop
repnz
xor
jle
dec
orl
stos
mov
push
mov
sbbb
popa
mov
sub
jecxz
xchg
gs
andb
popa
push
sub
jmp
push
into
mov
and
out
or
mov
mov
mov
xchg
gs
mov
cmp
push
adcb
aam
xor
outsl
adc
fs
mov
push
push
sbbb
push
lea
adc
jb
push
jae
push
cld
repz
dec
aas
mov
sub
push
mov
subl
dec
js
and
lahf
daa
dec
fs
fcoml
aas
push
test
and
inc
push
sbb
movsb
ret
xor
inc
xchg
push
pop
stc
repnz
cmp
xchg
cmp
pop
fbstp
pop
dec
pop
mov
fs
mov
mov
pusha
push
insl
mov
xchg
int
dec
mov
repnz
push
and
jae
ret
xchg
xchg
iret
rcrl
adc
loop
and
daa
cli
data16
sub
push
loopne
inc
cmp
dec
neg
outsl
popf
mov
enter
inc
jno
fwait
push
mov
scas
jmp
in
daa
cmp
and
enter
test
mov
insb
pop
rcll
les
or
jp
xor
in
inc
lret
jmp
ds
ret
scas
pop
scas
or
mov
fdivr
dec
sahf
add
lahf
addr16
fnstenv
in
pop
ja
in
push
push
cmp
mov
lods
orl
inc
ds
or
lret
icebp
push
lea
xor
es
mov
inc
sti
xchg
xor
xor
daa
int3
adc
imul
loopne
jo
or
mov
push
sti
or
add
xor
addr16
pushf
jge
dec
out
xor
jmp
in
test
push
add
test
xor
loop
fmuls
sub
leave
or
push
clc
cmp
xchg
dec
fistps
mov
lahf
jge
icebp
adc
sub
pop
les
aam
movsb
pop
mov
test
mov
test
mov
xor
add
adc
in
hlt
sub
cmp
dec
movsb
pop
mov
test
mov
test
mov
xor
add
adc
in
hlt
sub
cmp
dec
movsb
pop
mov
test
mov
test
mov
xor
add
adc
loopne
lock
cmp
dec
movsb
pop
mov
test
push
ja
fiadds
inc
mov
dec
adc
imul
sub
mov
andl
andl
andl
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
mov
lea
push
movl
movb
movl
movb
movl
movb
movb
movl
call
leave
ret
dec
test
stc
jmp
int
pop
cmp
js
imul
push
sub
fdecstp
leave
out
jmp
cmpsb
mov
jbe
data16
inc
sbb
cmp
sub
fdecstp
leave
out
jmp
cmpsb
mov
jbe
inc
sbb
daa
jp
pusha
jno
js
jne
test
scas
mov
mov
mov
fcoms
cmp
adc
popf
mov
outsb
mov
xchg
xor
mov
and
and
ss
xor
rcll
test
idivb
xor
rcrl
sbb
das
setbe
cmpsl
and
es
mov
ret
add
cmpsl
pop
cld
test
cltd
js
andl
and
ss
xchg
dec
jno
subl
xor
imul
push
clc
and
imul
xchg
inc
outsb
inc
sahf
outsl
ret
cmpsb
addr16
xor
insl
or
push
sub
xchg
leave
out
jmp
cmpsb
mov
jbe
data16
imul
push
sub
repnz
fcmovbe
in
iret
ror
shlb
psubq
xor
inc
push
outsl
pop
dec
xchg
mov
ljmp
and
add
jp
imul
scas
lcall
cmpsb
mov
jbe
data16
imul
push
sub
fdecstp
leave
out
jmp
cmpsb
mov
jbe
data16
imul
push
sub
fdecstp
int3
mov
add
ret
pop
lods
inc
mov
sub
test
inc
enter
fstps
xor
fwait
bnd
adc
cs
adc
sbbl
fimull
adc
in
insb
xchg
xchg
sub
mov
aad
cmp
into
clc
sti
out
imul
pop
ss
jns
cs
push
pop
xor
mov
cmp
push
test
push
pop
insb
and
js
and
mov
jne
or
pop
sahf
mov
push
adc
andb
out
mov
sub
pop
int
mov
pop
push
mov
mov
dec
add
push
fs
pop
lods
scas
movl
xor
pop
in
imul
sti
test
fistpll
repz
xchg
movsb
das
div
add
sub
xchg
or
shrl
icebp
add
cmp
or
or
mov
push
dec
xchg
mov
cli
gs
and
dec
ret
adc
in
xchg
lea
adc
sbb
jp
mov
cltd
mov
cs
aaa
mov
sbb
xchg
loopne
xchg
xchg
adc
cwtl
clc
ficoml
mov
jl
adc
test
sub
dec
test
mov
cmpl
addr16
jb
sbb
pop
dec
xchg
add
addr16
into
mov
fidivs
push
xchg
fsubrs
ret
sbb
fs
jbe
mov
aad
xor
aas
dec
cmp
sub
cld
stos
in
add
or
rcl
and
lret
xchg
fwait
cmc
mov
out
ficompl
inc
lcall
std
jbe
mov
or
fs
dec
adc
jne
sub
jecxz
das
gs
fbld
test
cmp
outsl
jae
xor
and
lret
lods
pop
movsl
dec
cmpsl
cmp
inc
addl
shlb
xchg
test
das
fcmovnb
push
push
mov
shlb
mov
and
faddl
or
add
jns
orl
and
adc
and
jl
mov
dec
lds
inc
cmpsl
sbb
addr16
hlt
in
rcrl
clc
imul
jl
jbe
icebp
fstpl
inc
loopne
add
xor
sub
test
outsl
int
pop
push
fwait
and
push
hlt
mov
xor
icebp
or
iret
loopne
add
jmp
add
popf
out
push
fstpl
jnp
int3
add
xor
jno
les
mov
ficomps
or
mov
loopne
cmovge
mov
mov
or
jo
cmpsb
push
mov
lret
mov
push
sub
pop
mov
add
cmp
push
cmc
sahf
test
and
push
jae
jmp
mov
jae
cmp
pop
test
and
lock
lods
dec
add
mov
adc
inc
aam
pusha
pop
pop
fsubrl
mov
or
jno
dec
cmp
or
pop
adc
push
and
or
cmp
insl
mov
xchg
sub
mov
aad
push
aas
mov
gs
or
sub
adc
inc
outsb
dec
sub
adc
pop
sti
lods
dec
addb
add
fldcw
mov
lock
pop
dec
mov
jnp
sbb
cmp
jmp
add
jae
lcall
test
mov
popf
stc
jnp
jnp
imul
sub
or
cmpsb
add
dec
pop
xchg
mov
fs
int
fisttps
in
sti
ds
push
movsl
or
enter
add
int3
adc
lret
push
xchg
repnz
or
add
scas
sbb
sbb
lret
dec
movb
loopw
call
mov
or
push
movsb
mov
dec
fcompl
into
add
or
add
push
mov
aaa
jbe
push
inc
lods
add
add
mov
mov
pop
xchg
insb
xchg
lret
add
in
int
mov
fcom
ficoms
fcoms
mov
test
xor
fs
mov
cld
lret
and
pop
xchg
add
or
add
adc
fucomip
or
outsl
scas
mov
sbb
out
or
outsb
push
push
fcmovne
es
rorb
cwtl
or
cmp
int
ja
addr16
jp
enter
loop
jmp
rol
out
dec
pop
xor
loopne,pn
or
mov
cmp
rcrb
dec
or
fimull
popa
pop
in
pop
js
xchg
dec
cltd
adc
jp
test
mov
shll
scas
aam
sbb
call
lods
sub
sbb
mov
mov
sbb
mov
dec
jno
leave
adc
ljmp
jbe
fildl
pushf
cmp
aad
js
lcall
jb
in
pop
pop
xchg
mov
cmp
push
inc
icebp
std
push
jo
nop
sub
inc
dec
pop
xor
xchg
dec
les
push
shrb
xor
xlat
lods
xlat
aad
push
dec
jecxz,pt
mov
jp
pop
cmp
stc
test
and
call
mov
mov
jp
dec
xchg
jecxz
cltd
imul
sbb
xchg
sahf
adc
push
push
push
xchg
and
mov
ret
out
lret
pop
pop
cmp
js
dec
or
xor
xorl
push
test
ret
or
stos
mov
cmp
int3
pop
out
inc
add
fwait
pop
jbe
mov
jae
sbb
outsl
daa
in
jo
dec
shr
sti
adc
fimull
sahf
pop
ljmp
mov
sti
int
scas
push
lcall
dec
in
stos
adc
inc
cs
cld
in
push
jg
cmp
cmp
or
cmpsb
or
jo
cmp
mov
ficoml
int
lock
movsb
xchg
ss
fdivr
test
mov
mov
addr16
cs
pop
imul
mov
out
test
pop
enter
pusha
jo
jge
push
push
inc
sub
inc
jo
hlt
dec
shll
dec
add
mov
out
out
xlat
xchg
xchg
mov
xchg
or
xor
push
mov
push
ss
icebp
ret
or
sub
pop
test
fisttpll
lds
in
stos
xchg
add
or
xchg
pop
dec
andb
xor
mov
jno
cmc
icebp
xlat
cmp
add
jmp
lods
into
mov
lret
sti
dec
sahf
jno
and
add
loope
repz
subl
mov
push
pop
shl
insb
movsl
adc
xchg
cmc
aam
notl
pop
pandn
jmp
cmp
and
in
inc
mov
js
xlat
leave
mulb
js
mov
iret
xchg
pop
mov
fisubrl
cmp
inc
pop
push
sbb
pop
shl
or
fimuls
popa
decb
inc
push
push
jnp
mov
xchg
push
push
dec
in
data16
or
cmpsb
xorl
daa
mov
int
push
add
adcb
push
pop
sbbb
cmpsb
xchg
push
imul
in
lea
mov
das
test
dec
adc
rolb
faddl
lea
imul
mov
or
dec
mov
adc
jle
test
in
and
sbb
mov
push
add
push
adc
int3
stos
or
sbb
jmp
add
dec
xchg
mov
dec
push
in
daa
sub
add
fildl
add
dec
outsl
daa
xor
stos
roll
lahf
push
mov
jns
mov
xchg
repz
movsl
ret
je
jb
insb
leave
repnz
adc
jmp
or
out
les
in
aad
test
mov
test
sbb
loopne
loope
xchg
inc
or
insb
push
call
andb
pop
sahf
stos
mov
dec
mov
loopne
push
dec
fdivrl
dec
out
push
cmpsb
sti
push
dec
dec
and
out
imul
out
sub
inc
ljmp
push
add
push
enter
int
pop
sub
mov
mov
adc
sub
imul
cs
adc
out
sbb
je
adc
jmp
aas
jno
test
in
adc
mov
mov
sbb
xor
xor
les
or
xor
xor
icebp
sub
and
outsl
std
rcr
jp
int
hlt
nop
inc
pop
pop
jbe
mov
loopne
sbb
std
testb
mov
sub
inc
push
fdivs
loope
into
or
or
test
nop
and
xchg
inc
ss
addb
xchg
mov
in
fiaddl
and
dec
push
cmp
or
xor
loopne
add
jbe
std
xor
jne
add
movsl
sbb
xor
xchg
ljmp
xor
int3
mov
mov
lods
jbe
cmp
int
jo
xchg
jmp
mov
inc
lret
loop
xchg
lods
cmp
rcrb
mov
repnz
push
js
sub
cltd
cmp
fldt
enter
shlb
lret
imul
or
std
pop
dec
call
out
mov
push
fildl
add
add
and
icebp
xchg
call
jb
fdivrl
pop
fcmove
adc
lock
inc
lret
in
int
lods
add
int
sbb
lret
xorb
xor
ss
mov
int3
sbb
and
mov
or
mov
lahf
adc
cwtl
scas
xlat
cmc
or
les
dec
stos
mov
icebp
mov
shrl
inc
adc
mov
ljmp
shlb
jp
ds
jbe
js
sub
mov
xchg
jle
ss
xor
jb
pop
aaa
pop
int3
add
je
jg
lea
sbb
mov
cmc
pop
xor
sbb
repnz
xorb
xor
mov
mov
sub
xchg
popa
in
push
inc
insl
sub
pop
js
leave
outsb
call
adc
out
pop
adc
call
and
jns
repz
cmp
out
jmp
in
sti
ror
outsb
js
leave
push
es
in
iret
xor
sub
inc
jmp
cld
push
cmp
adc
push
nop
aam
aad
xchg
scas
shll
insb
cmp
lret
out
sbb
push
push
mov
cs
jb
or
addr16
stc
cld
adc
lods
iret
xchg
mov
mov
shlb
lock
mov
ss
push
test
pop
mov
jnp
pop
mov
adc
mov
push
ret
inc
mov
mov
jb
cltd
or
adc
lods
push
ds
jno
push
movsl
std
adc
aaa
or
jnp
mov
jecxz
test
aas
jl
jmp
jmp
aad
xchg
inc
push
out
outsl
xchg
roll
jmp
sti
sahf
inc
push
aas
adc
clc
xchg
xor
sub
adc
and
loopne
and
pusha
shll
lods
enter
sub
shlb
cmp
inc
mov
sub
push
cmp
mov
push
rclb
dec
jnp
mov
rcrb
ss
add
mov
adc
pusha
arpl
shl
push
mov
jmp
lahf
adcl
rorb
push
add
cld
pop
pop
ret
aam
jns
xchg
jg
insb
arpl
sbb
dec
cmpsl
pop
sub
outsl
mov
in
fwait
lock
dec
ss
adc
pop
aaa
out
lock
mov
fwait
push
xor
sub
dec
mov
rcr
and
lcall
ret
xchg
ss
sub
sub
in
xchg
cmp
mov
pop
mov
std
adc
loopne
pusha
jae
push
notb
xor
outsb
shrl
pop
cs
hlt
lret
lcall
inc
popa
jns
sbb
mov
pop
mov
aaa
mov
xchg
mov
push
sti
adc
outsb
sbb
int3
and
mov
sbb
scas
jp
adc
mov
fisttpll
faddl
adc
stc
xchg
inc
test
or
push
insb
xchg
dec
pop
mov
loopne
adc
cmp
loopne
testl
lcall
mov
rcll
pop
test
popf
cmp
cmp
push
xchg
ficompl
call
in
push
ss
iret
ljmp
push
ret
xchg
or
lods
mov
ret
pop
or
and
fldenv
pop
jecxz
add
ljmp
stos
dec
dec
aam
and
or
daa
sub
fwait
mov
inc
movsb
add
cmovno
mov
movsl
mov
add
jge
fiaddl
mov
cmp
pop
lods
imul
and
mov
pop
repnz
aas
pushf
jo
orb
arpl
lock
xchg
js
mov
xor
jns
add
addl
inc
ficompl
stos
mov
test
lcall
fucomi
push
or
les
sbb
imul
fcomi
pop
lods
jle
push
dec
and
jb
push
iret
jo
lahf
mov
sbb
xor
ss
adc
popf
xchg
sti
add
fisubs
jp
sbb
aas
dec
mov
aad
push
mov
and
push
aaa
inc
mov
mov
mov
xchg
add
mov
daa
imul
dec
fs
adc
xor
push
dec
in
jo
aam
repnz
ja
imulb
mov
lods
outsl
jp,pt
and
mov
mov
cmpl
decl
ss
hlt
mov
sti
jbe
psllw
jbe
or
cmp
jbe
cmp
sub
roll
sbb
mov
dec
dec
shl
dec
ljmp
xchg
fwait
mov
cmpsb
std
aam
adc
test
add
mov
mov
loop
in
xor
daa
or
add
pop
cmp
sbbl
in
shrl
pop
aaa
dec
sahf
mov
in
imul
push
adc
into
dec
les
sub
fs
add
test
jo
or
sti
push
iret
in
fldcw
jmp
stc
xlat
or
mov
jb
jp
cs
aam
fadds
push
addr16
rcll
push
cld
repz
xchg
ret
mov
jbe
adc
mov
ret
pop
enter
pushf
lahf
cwtl
pop
std
ds
ret
dec
jmp
fwait
pusha
scas
clc
leave
dec
ja
test
icebp
fisttps
stos
shrb
out
xor
and
inc
sub
sahf
lea
add
push
je
add
mov
in
mov
lcall
xor
lcall
adc
mov
mov
xor
mov
lock
pop
adc
cli
pop
in
mov
jmp
notl
sub
xchg
enter
fdivrs
xchg
jae
cmpsl
xchg
lret
lea
pushf
cmp
hlt
mov
or
mov
mov
or
cltd
ret
sub
add
cltd
push
jp
fwait
lods
repnz
pop
stos
aas
or
sub
push
idivl
and
adc
cltd
push
enter
sub
in
mov
lock
loopne
movl
pusha
mov
jb
mov
mov
xchg
dec
mov
fistpll
cltd
call
fadds
cli
jae
push
fdivl
arpl
cmp
push
adc
or
lea
and
adc
xchg
sti
popa
lods
scas
and
pop
jg
jns
aad
dec
in
cmp
or
sub
lahf
adc
dec
in
in
out
lahf
xchg
jbe
jmp
mov
iret
and
push
mov
jns
ss
loop
icebp
stos
lods
jnp
pushf
xor
hlt
sahf
inc
icebp
sbb
jmp
gs
jmp
or
shrb
std
jne
push
mov
jnp
mov
and
int3
or
fistps
cmpsl
imul
push
push
add
gs
cmp
and
lret
sub
gs
mov
dec
lcall
loope
das
inc
mov
adc
filds
js
into
leave
sbb
sbb
sub
xor
mov
pop
icebp
loop
pop
xor
xor
cmp
inc
gs
fiadds
push
add
insl
mov
scas
ljmp
dec
insb
icebp
repnz
push
cmp
mov
or
or
stc
lods
xchg
cltd
inc
sub
adc
popa
popf
mov
jbe
jmp
repz
mov
divl
fistpl
sahf
mov
and
cmpsb
mov
adc
and
mov
call
popf
inc
add
cmc
int
jbe
jo
adc
pop
pushf
movsl
js
testb
jl
sahf
jmp
xchg
loop
or
pop
mov
test
push
or
cmp
jnp
mov
insl
pop
mov
and
aad
adc
aad
push
mov
shrd
int
pop
int3
jmp
cmp
pop
negl
jmp
lahf
enter
dec
jno
repnz
inc
dec
imul
jg
adc
xchg
movsb
int
jnp
icebp
pop
mov
mov
mov
jb
pusha
inc
cmp
mov
pop
cli
and
lcall
sub
mov
int3
jmp
sbb
pop
nop
lock
cmpsb
pop
cmp
jb
test
sub
mov
xor
lock
das
into
cli
dec
bound
das
shl
mov
fnstsw
dec
cld
sub
sbb
push
mov
xor
and
mov
xchg
cmpsl
fimuls
std
sbbb
push
mov
inc
shrb
test
push
push
loope
test
sbb
push
mov
fnsave
adc
gs
jge
test
lret
sub
sbb
xor
xchg
in
cmpsb
in
pop
xchg
adc
insl
hlt
aaa
idiv
pop
push
pop
and
fwait
xor
in
and
sub
scas
add
ficomps
das
dec
sbb
dec
popf
jge
xchg
mov
lret
pop
xchg
cmp
pop
xchg
gs
mov
xchg
pop
sahf
mov
mov
push
call
je
fists
rcll
xchg
movsl
mov
sbb
out
int3
lahf
mov
ljmp
push
or
je
test
pop
push
or
out
sub
ss
add
sub
fwait
sbbb
add
aad
adc
or
sub
or
adc
xor
xor
lahf
sbb
push
add
adc
cmc
sbb
mov
or
dec
jl
mov
jecxz
stos
xor
repnz
inc
sti
jno
xchg
dec
xchg
push
out
sub
lret
sbbb
ds
mov
arpl
sbb
push
les
sbb
jecxz
sub
push
inc
mov
sbb
sbb
lea
jae
inc
btc
sbb
mov
pop
cmp
xor
inc
test
mov
scas
mov
nop
jle
sub
lret
push
push
jmp
out
push
repnz
sub
dec
xchg
mov
inc
xchg
divb
aaa
out
outsl
push
repz
je
repz
popf
xchg
jecxz
stos
mov
arpl
inc
fcoms
lahf
add
dec
mov
mov
mov
in
pop
popa
test
cli
out
xor
ss
adc
dec
inc
popf
fistpl
inc
dec
xchg
push
jg
pop
mov
and
fs
jbe,pt
push
fisubrs
lods
xlat
ljmp
fsubrp
out
lahf
push
lret
push
mov
rclb
fistpl
sub
xchg
fldl
repz
xchg
sbb
in
jecxz
out
adc
popf
xlat
movsl
clc
xchg
and
testb
das
fcompl
pop
sbb
pop
shr
mov
fmuls
andl
ja
pop
xchg
mulb
push
mov
inc
ret
adc
popf
pop
mov
xor
cld
mov
or
mov
add
cltd
mov
fwait
lahf
imul
jmp
hlt
pop
movsb
jb
xchg
sahf
rol
jl
dec
cli
jmp
int
mov
jecxz
sub
cwtd
sti
cmpsl
call
xchg
out
add
adc
arpl
pop
or
push
cmp
or
sti
js
mov
shlb
push
jae
cmp
lret
pop
mov
sub
fs
insb
jl
out
xchg
xchg
pushl
ljmp
add
mov
enter
leave
mov
mov
ret
jno
sbb
nop
xchg
loop
push
outsl
cmp
scas
jmp
cmpsb
mov
jbe
data16
imul
push
sub
fdecstp
leave
out
jmp
cmpsb
mov
jbe
data16
imul
push
sub
fdecstp
leave
out
jmp
cmpsb
mov
jbe
data16
imul
push
sub
fdiv
enter
jmp
cmpsb
mov
jbe
int3
rcll
xor
sbb
jmp
iret
cmpsb
mov
fbld
cli
xor
data16
outsl
xchg
dec
cmpsb
aas
das
les
testb
call
out
push
fbstp
iret
es
jbe
adc
outsl
cmpsb
sub
das
pop
mov
out
test
push
fistps
scas
jp
cwtl
jle
dec
outsl
in
jmp
dec
scas
push
andb
push
out
push
jmp
int
push
mov
xchg
je
out
sub
dec
xchg
mov
mov
sub
xchg
push
sub
mov
lret
xlat
cmp
pop
pop
add
sub
or
add
popa
in
jg
add
sub
ss
idivb
es
sahf
mov
out
jg
jg
rolb
inc
cmp
push
or
out
mov
mull
sahf
jle
outsw
lds
cmpsb
mov
sub
sbb
xlat
mov
inc
adc
pusha
ss
das
xchg
add
mov
pop
mulb
mov
mov
sub
push
scas
inc
lahf
lods
out
adc
pop
cmpsb
dec
out
aas
cli
das
ds
testb
mov
jne
or
and
sub
pop
into
add
shrb
cmp
and
pop
mov
pop
xchg
push
popf
inc
push
stos
add
cmp
jne
sbb
rcrb
rorl
rcrl
mov
jge
mov
into
inc
mov
jbe
data16
outsl
xchg
dec
cmpsb
aas
das
pop
testb
call
out
push
fbstp
iret
es
jbe
data16
outsl
xchg
dec
cmpsb
aas
das
pop
testb
call
dec
shll
or
push
push
ljmp
and
cs
in
and
or
pop
and
or
popf
inc
cmp
mov
inc
imul
jmp
cmpsl
push
pop
mov
out
inc
sub
insl
outsb
shrl
adc
pop
in
pusha
cwtl
test
sub
jnp
mov
out
nop
movsl
mov
pusha
sbb
mov
or
dec
stos
das
ficompl
xchg
in
das
fs
add
xchg
ds
stc
rol
dec
in
jecxz
and
loopne
and
sub
and
adcb
lock
lahf
mov
push
sbbb
mov
jp
pop
movsb
cmp
mov
adc
in
stos
jge
push
push
flds
stos
push
add
pushf
inc
stc
jo
fisubrl
bound
out
xor
sahf
out
out
pop
mov
pop
sub
push
popf
repnz
mov
jo
addr16
jnp
mov
call
xor
in
push
mov
pop
cs
mov
gs
icebp
adc
cmp
bound
mov
into
push
adc
mov
popf
andl
jge
sarl
xor
jp
in
aad
mov
ljmp
jne
pop
mov
or
xchg
or
pop
gs
icebp
in
cmpsb
fimull
xchg
xor
jl
inc
insb
icebp
insl
pop
insb
dec
push
daa
sub
loope
adc
cmpsb
sbb
mov
scas
cmp
nop
pop
push
dec
popa
sbb
adc
inc
jl
push
sub
aad
int
inc
pop
insl
aas
inc
push
mov
mov
mov
jg
insl
iret
xor
push
pop
inc
sub
jae
or
fsubrl
pop
aad
push
es
sbb
ljmp
push
push
mov
and
xor
pop
fstl
adc
jne
mov
jo
loopne
cmp
mov
sub
adc
stos
xchg
mov
aas
xchg
sub
pop
ja
xchg
roll
dec
xlat
mov
or
sub
cs
loopne
sahf
stos
mov
hlt
jp
lods
int3
fwait
hlt
xchg
add
sbb
sub
dec
imul
mov
out
mov
imul
dec
stos
add
jmp
stc
scas
cmp
inc
dec
arpl
add
push
test
pop
cmp
xor
loope
iret
cmpsl
pop
jp
mov
pusha
outsb
xor
and
jmp
sarl
ljmp
jbe
and
test
lock
mov
pop
xlat
mov
mov
js
cltd
fldenv
xchg
mov
filds
push
fwait
and
inc
lea
fistpll
daa
roll
mov
ja
pushf
inc
pop
inc
push
out
pop
jg
or
orl
xor
les
and
add
mov
lcall
movsb
pop
leave
fcoms
cli
loope
shll
cmpsb
fldl
push
clc
mov
xor
add
xchg
mov
aad
movsb
fs
rorl
popf
in
adc
mov
test
cld
cmp
fstl
gs
sbb
adc
out
or
fs
jb
pop
pop
push
inc
push
add
call
push
pop
repnz
inc
sub
cmp
adc
in
or
clc
sbb
sbb
pop
es
xchg
lds
inc
add
xlat
je
push
mov
add
dec
xchg
cmp
xor
pop
xchg
insl
or
push
cmp
jbe
call
xchg
xchg
xor
mov
push
int
sahf
lahf
jo
popf
int3
mov
xchg
pushf
fbstp
std
xor
add
xchg
inc
or
ret
ret
shlb
ljmp
sahf
rolb
lea
jecxz
mov
cvtpi2ps
cmpsl
jo
pop
rcr
sbb
mov
or
outsb
loopne
or
sbb
out
mov
or
js
mov
test
adc
test
call
int3
insl
cmp
notl
ret
push
in
jp
scas
or
test
mov
in
inc
subb
sti
xchg
push
adc
mov
sub
xchg
lods
mov
adcl
push
or
loopne
ljmp
mov
add
mov
push
xchg
pop
or
shl
add
je
lcall
mov
cmp
hlt
loope
xor
cmp
insl
cmp
xor
js
xchg
inc
xlat
les
orb
xchg
push
scas
lret
movsl
subb
adc
xchg
xor
ljmp
mov
and
push
stc
into
mov
outsb
mov
std
mov
stos
or
lcall
in
stos
and
cmp
cwtl
push
out
in
sub
mov
aam
repz
mov
clc
fs
jnp
lret
nop
and
push
mov
test
mov
jbe
pop
mov
insb
nop
aas
loope
or
sbb
fistpll
dec
insb
push
or
add
xor
and
push
out
xchg
int3
push
sbb
outsb
sbb
mov
add
ja
andl
and
mov
pop
cmp
fs
push
lods
mov
out
jno
add
sti
cmp
fadd
and
xor
xchg
mov
push
mov
sahf
lock
rorb
sbb
in
xor
mov
adc
add
popa
inc
push
call
push
push
movsl
sub
adc
and
sti
idivl
jnp
lods
fists
push
bound
push
mov
xchg
jge
cmpsb
xor
mov
into
sbb
sub
cld
push
jno
movb
cwtl
gs
insl
out
rcl
int3
scas
shll
leave
dec
or
shrl
and
aad
cld
sbb
out
jle
dec
sahf
test
loopne
loope
fldl2t
inc
ljmp
mov
mov
sar
cld
movsl
gs
sub
data16
adc
mov
aaa
sub
mov
jno
xchg
data16
adc
test
xor
sahf
and
dec
inc
gs
mov
loope
pop
and
cmc
sti
adc
mov
inc
mov
out
xchg
fists
sarl
movsb
call
outsb
imul
pop
dec
xchg
pusha
daa
mov
stos
call
sahf
add
xchg
push
and
sbb
dec
fmull
cmp
inc
enter
fldcw
adcb
sbb
push
xor
psllw
add
movsl
out
inc
lods
ljmp
jp
add
adc
lret
and
and
dec
sti
loop
mov
cmp
push
mov
inc
xlat
mov
sub
mov
sti
outsl
pop
xchg
mov
sbbl
bound
aam
ret
mov
mov
pop
pop
jge
sbb
jbe
and
stos
push
fs
mov
sbb
mov
rcl
mov
frstor
sbb
or
mov
jb
dec
dec
gs
inc
jne
sbb
jl
je
clc
aad
pop
or
leave
push
dec
mov
fistps
leave
xor
sbb
jecxz
stos
arpl
mov
lret
repz
push
icebp
or
ret
fs
aad
dec
pop
fadd
jns
iret
cs
xchg
cmp
data16
push
jge
mov
mov
inc
cmp
shll
cwtl
mov
movsl
xor
loop
sbb
loop
mov
rcl
mov
inc
cltd
add
mov
out
out
ja
xchg
arpl
add
sbbb
cmp
inc
sti
jle
mov
stc
dec
cmc
add
or
aas
and
mov
mov
pop
sbb
jbe
gs
or
dec
xlat
adc
bound
aas
test
out
or
push
fadd
push
leave
pop
shl
repz
fs
inc
daa
loope
mov
call
push
push
gs
andb
inc
cs
jb
sub
fsubl
sahf
lret
cmp
lods
mov
aad
xorl
imul
xor
xchg
push
out
loopne
out
jge
ret
inc
and
mov
sbb
std
in
fs
es
cmp
or
or
dec
sbb
jge
cld
jno
or
sub
mull
je
or
cmp
dec
sub
leave
movsb
jge
dec
mov
push
push
mov
dec
or
imul
in
jl
cmpl
mov
test
xor
mov
insb
pop
pop
cltd
or
cltd
pop
das
std
lret
push
movsb
cltd
and
or
pusha
inc
dec
lods
pop
dec
test
test
in
push
out
out
rol
sub
clc
mov
pop
out
gs
xchg
out
hlt
int3
lahf
push
repnz
out
mov
dec
lock
push
insl
and
add
add
xchg
inc
or
push
pop
hlt
push
adc
decb
or
int
push
add
jns
nop
mov
shll
mov
imul
xchg
add
aaa
add
mov
or
xchg
ret
cmc
pop
leave
inc
scas
dec
sahf
mov
push
mov
hlt
push
std
bound
inc
mov
pop
dec
lcall
gs
loopne
int
dec
inc
and
add
add
ljmp
dec
jns
inc
in
push
xor
mov
cmp
mov
sbb
push
outsl
cld
pusha
scas
xchg
push
mov
aam
mov
enterw
or
dec
stos
pushf
loope
push
pop
or
jb
ss
jae
push
mov
adc
or
aas
sbb
lret
cld
dec
push
fbld
cmp
imul
cmc
adc
and
mov
outsl
sar
daa
sbb
icebp
push
and
xlat
ss
xchg
mov
cltd
jae
mov
cld
push
and
aam
inc
inc
test
in
inc
sub
adc
div
inc
mov
adc
out
int3
sbb
jnp
fldcw
scas
bnd
inc
inc
inc
push
icebp
add
pusha
mov
sbb
push
in
into
xchg
pop
push
or
and
jbe
stos
and
or
pop
add
leave
movsb
or
sub
jo
in
out
lcall
lret
inc
stos
mov
sbb
cvtdq2ps
sarl
cmp
mov
test
inc
ror
mov
and
lods
gs
enter
push
inc
cmp
xor
or
mov
int3
mov
notb
daa
and
lahf
test
adcb
push
jbe
das
pop
sahf
outsl
andl
test
push
push
jp
xor
and
pop
and
xchg
icebp
jno
mov
mov
xor
cltd
aaa
or
mov
and
mov
jle
sbb
sub
pop
out
test
stos
ret
dec
pop
xor
nop
jb
popa
shl
and
mov
addb
es
pop
jo
imulb
leave
sub
mov
xchg
out
sti
push
inc
addr16
repz
push
rcrl
pushf
adc
dec
mov
mov
push
xchg
leave
imul
mov
cmpsb
pop
inc
sub
test
addb
repz
mulb
dec
les
push
and
push
or
fldt
inc
add
outsb
into
push
hlt
or
out
cmpsl
out
fists
cs
cmpsb
add
sub
pop
jne
pop
xchg
dec
cmpsb
das
rolb
xchg
add
sbb
clc
add
mov
ret
cmp
aam
pop
int
loop
add
inc
cwtl
mov
jl
enter
scas
cltd
jne
int3
fldl
dec
mov
test
mov
push
mov
jge
push
mov
sar
mov
cmp
scas
mov
sti
adc
leave
std
adc
or
xchg
jae
or
jo
cmp
lds
and
xor
cld
dec
cmp
add
nop
lret
fsubr
mov
mov
into
fwait
add
fisubrl
rclb
xchg
push
or
jae
pop
mov
aaa
insl
data16
fwait
jp
sbb
gs
xor
adc
aas
rcrb
rcrl
xchg
cmp
jl
sbb
hlt
sbb
sbb
scas
cmpsb
dec
xchg
pop
enter
pop
add
inc
lret
mov
adc
pop
mov
fcomi
adc
or
push
icebp
fistpll
fstps
loop
cld
aam
and
mov
mov
inc
jo
xchg
push
ss
inc
xor
out
xchg
fcoms
xor
aas
popa
bound
sti
sbb
aas
push
or
jge
int
ja
loopne
insb
sti
movsb
mov
test
lods
jns
test
inc
orb
add
movsl
andb
divb
mov
pop
cmp
mov
or
leave
sub
inc
pop
jbe
cltd
movsb
idivb
rol
insb
push
xchg
mov
addr16
addr16
repz
lds
loope
or
xor
cmpsl
stos
int
js
mov
idivl
gs
pop
setno
push
sarb
add
fcomps
inc
and
lahf
aam
jae
adc
cmp
pcmpgtd
sub
fisubs
add
pop
addr16
in
xlat
xor
dec
xor
mov
sbb
adc
jp
test
fstpt
shl
xor
dec
fldln2
fisttpl
in
dec
addb
and
xor
xchg
dec
je,pn
popf
mov
xor
stos
out
pusha
xchg
cmpsb
cld
push
shlb
test
dec
jns
insb
pusha
js
xchg
sub
fnsave
dec
cltd
call
push
mov
fbld
jne
and
pop
imul
adc
mov
jl
cmpsl
and
out
xor
adc
cltd
push
ret
mov
rolb
nop
lret
mov
or
and
lahf
xchg
sbb
mov
mov
nop
fisttpl
add
add
jp
rcrb
push
ja
stos
lcall
icebp
in
test
xorl
jb
mov
xor
int
dec
es
pop
stos
popf
cmc
mov
push
or
dec
jb
frstor
pop
fstl
mov
pop
dec
jae
js
and
popa
fwait
cmp
jns
and
lea
loopne
lods
gs
sub
shll
mov
cld
testb
or
and
shl
pop
mov
or
fisttps
sub
sti
push
jecxz
mov
cld
sub
lock
push
add
inc
jge
mov
test
mov
nop
push
sbb
sti
pop
pusha
xor
test
iret
push
mov
mov
aad
mov
mov
lea
sub
ret
popa
mov
insl
sbb
dec
scas
scas
add
les
cmp
adc
gs
jne
sti
cwtl
or
ljmp
lock
push
mov
mov
jno
imul
mov
inc
div
lahf
dec
lcall
pop
and
or
fwait
int
inc
mov
lret
cli
mov
lea
fmuls
lcall
xor
shlb
ja
adc
and
cmp
mov
aaa
and
sub
adc
adc
mov
sbb
rolb
mov
outsb
mov
ret
loopne
xor
ficomps
push
lock
in
das
xchg
jb
push
sub
loopne
adc
stc
adc
add
insl
jae
adc
mov
mov
push
and
push
movl
leave
jns
pushw
and
stos
mov
push
push
mov
push
add
addl
dec
fsubrs
push
aad
jbe
xchg
fstpt
aaa
mov
ficoms
aam
dec
and
and
mov
jge
in
std
movsb
and
test
cli
cli
pop
shr
in
dec
call
push
mov
mov
fidivl
daa
dec
jle
dec
inc
push
std
stc
add
sbb
popf
lea
fptan
jo
sahf
pop
inc
imul
subb
dec
inc
xor
push
into
xchg
jo
pop
repnz
shr
ja
movsl
push
stc
cld
pop
das
je
lods
loopne
lods
int3
jmp
test
rcr
dec
out
and
fxch
mov
sub
aad
enter
or
sahf
bound
gs
pushf
cmp
bound
div
faddp
inc
leave
cmc
test
or
adc
aam
out
adc
scas
and
pusha
lods
cmpsb
mov
loope
addl
shrb
call
insb
adc
cmp
scas
xor
push
pop
das
addr16
inc
test
adc
mov
xor
pop
pop
add
jle
inc
mov
xchg
jno
fisttps
pop
or
mov
pop
cli
inc
test
aaa
cmp
inc
insb
dec
mov
cmp
pop
mov
ds
xor
cmpl
jp
insb
inc
cmp
xchg
ja
and
lahf
mov
scas
bound
jp
lods
push
stc
loope
dec
jl
add
movsb
push
cld
pop
xor
idivl
and
movsl
cmc
arpl
and
stc
and
pop
adc
dec
out
insl
add
xor
jne
mov
sahf
jne
outsl
leave
xor
stos
and
stos
xor
mov
dec
shl
test
pop
and
jmp
mov
jb
push
stos
ljmp
scas
pop
mov
fnstenv
ds
pushf
mov
stos
imul
idivb
dec
sub
cmpsb
faddl
xor
mov
pcmpgtb
cld
lret
aad
mov
and
in
fistpl
ss
inc
lods
mov
mov
bound
add
push
jl
fcoml
jmp
and
push
adc
adcl
xchg
sarl
jle
jns
push
mov
inc
in
mov
mov
cmc
test
shlb
push
and
jg
and
ret
fsts
add
shlb
stos
mov
add
inc
inc
loop
pop
push
cmp
cmp
jns
out
pushf
fmuls
push
out
mov
lock
inc
cld
ds
jnp
mov
xchg
mov
inc
adc
inc
cmp
lock
cmp
in
adc
nop
sub
push
jg
cmp
aam
pop
inc
push
pop
jg
jbe
dec
test
insb
into
add
ss
or
mov
xchg
jp
subl
mov
movd
push
xchg
dec
mov
xor
pop
sarb
incb
xchg
lods
fcmovnbe
add
sub
hlt
xchg
xchg
xor
cmp
repnz
or
and
push
inc
icebp
ja
incb
mov
lahf
sbb
jno
and
sahf
push
lcall
mov
inc
stos
or
pop
jno
inc
stc
loopne
into
push
sbb
and
jge
stos
jnp
sti
pop
sub
fldenv
sahf
pop
add
inc
sti
out
sub
les
enter
dec
test
lahf
fnstsw
insl
fnstenv
and
xchg
data16
pop
mov
inc
clts
push
inc
call
psubq
cmp
ror
jae
lcall
xchg
pop
jl
imul
jnp
sbb
repz
inc
outsb
fstl
xchg
sbb
xor
pop
out
jo
or
gs
cmc
sub
in
jo
ja
cltd
xchg
and
stc
mov
add
xor
xlat
in
mov
pop
mov
shll
mov
xor
pop
adc
mov
sub
imul
rorl
inc
dec
xchg
and
outsb
test
mov
fdivrl
pop
cmp
mov
imul
pop
pushf
dec
or
ja
adc
ds
or
mov
push
in
push
pop
lea
mov
jne
fs
jge
sahf
xor
orb
sbb
mov
outsb
xorl
addr16
and
fdivrs
sahf
xchg
jo
mov
fdivl
mov
add
inc
loopne
pop
xchg
mov
iret
mov
lods
fwait
push
shrl
sub
inc
adc
je
xor
stos
lods
push
ret
scas
adc
stos
push
fisubrl
mov
sti
cwtl
loope
filds
daa
xor
stos
and
imul
ja
movsl
loopne
sub
daa
pop
jns
pop
push
iret
push
jae
and
aam
jmp
jp
out
icebp
call
jne
in
mov
out
enter
arpl
push
jg
pop
lret
jmp
mov
ds
sahf
adc
xchg
sub
fnstenv
add
push
add
js
sub
pushf
adc
pop
xor
addr16
les
arpl
xchg
hlt
xor
push
cltd
shlb
ret
inc
cmp
dec
gs
lea
rclb
fwait
insl
mov
insb
mov
call
inc
pusha
out
cmp
mov
js
fnstsw
sub
loopne
loope
test
in
movsl
aad
sbb
jecxz
cmp
clc
dec
lcall
add
fimull
inc
ds
push
inc
pop
loope
mov
add
das
mov
cmp
das
imul
pop
iret
es
jbe
data16
outsl
xchg
dec
cmpsb
aas
das
pop
testb
call
out
push
fbstp
iret
es
jbe
data16
outsl
xchg
dec
cmpsb
aas
das
pop
testb
call
out
dec
fisttps
es
jbe
data16
outsl
xchg
dec
cmpsb
aas
das
pop
call
out
push
fbstp
iret
daa
mov
testb
cmc
mov
rorl
cmpsl
cmp
or
sbb
in
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
shrb
fwait
ret
xorl
sub
sbb
pop
insl
dec
jge
test
mov
sti
in
lret
std
fistpl
sbb
sbb
cmp
or
push
stos
sbb
fucomp
xchg
sti
ror
fisttpl
outsl
pop
sbb
add
cmp
pop
int3
stos
mov
lret
cwtl
sbb
adc
fistpll
mov
xor
pop
mov
xchg
lods
sbb
sub
cltd
cmp
xor
popf
push
jns
mov
loopne
rorb
xchg
enter
in
sbb
or
repz
inc
data16
sub
loop
ror
ret
out
push
mov
enter
rolb
fwait
int3
ljmp
sbb
dec
push
cmp
add
js
adc
dec
pusha
inc
push
push
jge
xor
pop
out
test
xlat
dec
insb
shl
fstpt
mov
or
sbb
sahf
and
cmp
pop
in
sub
cmp
mov
mov
mov
fwait
int
cltd
sti
in
lret
inc
sub
sbb
dec
sbb
inc
jmp
jmp
xchg
mov
dec
jge
pop
pop
and
xor
sbb
sbb
mov
movsb
mov
mov
xor
push
je
or
adc
cs
jmp
scas
call
mov
in
lret
std
fisttpl
or
jnp
dec
jge
lea
mov
sti
in
lret
std
fisttpl
or
jnp
dec
jge
lea
loop
andl
in
sarl
ja
inc
adcb
xor
test
lret
inc
dec
add
gs
mov
inc
mov
inc
mov
sub
mov
andl
pop
mov
cmpsl
xchg
out
mov
mov
scas
and
aas
xchg
js
jb
mov
imul
push
xorl
mov
neg
gs
les
cmpsb
js
in
xchg
inc
pop
js
cwtl
xchg
adc
hlt
repnz
push
inc
sbb
mov
hlt
aaa
mov
sbbb
mov
out
cmpb
into
popf
sub
adc
loop
int3
mov
fiaddl
ret
stos
or
cmpsl
imul
jns
add
aaa
pop
js
jbe
or
push
pop
jl
daa
cmp
dec
or
mov
mov
aas
push
add
mov
ljmp
ret
inc
inc
or
gs
pop
mov
daa
push
les
dec
pop
pushf
xchg
pop
cmp
les
sub
dec
stos
cwtl
xor
lods
std
rorb
sbb
cmc
cmp
push
add
push
mov
in
ss
push
dec
mov
push
jbe
enter
adcb
mov
jecxz
mov
setle
scas
or
lea
clc
mov
or
sub
jae,pt
mov
adc
stos
sbb
out
push
inc
jo
adc
rcl
jb
aas
mov
sbb
movsl
pop
push
movsl
mov
mov
pop
loope
mov
inc
fistps
sub
dec
dec
pop
jns
push
mov
mov
sub
lods
cmp
jmp
out
mov
repz
mov
les
pop
rolb
testb
mov
jl
outsb
or
pop
jo
in
pop
ret
fcomp
mov
movsl
push
pop
or
cmc
push
pop
xlat
mov
xor
and
fldt
cmp
adc
push
and
dec
fdivs
sahf
movsb
cmp
inc
ds
pop
fsubrs
sahf
lock
imul
leave
shrb
jp
mov
pop
sbb
fs
mov
jb
in
mov
out
addb
and
test
cmp
icebp
lock
inc
mov
movsb
push
push
sbb
std
popf
repz
dec
mov
add
ds
ret
bound
jmp
or
inc
in
jg
shll
cmpb
ret
shll
loope
and
fists
insb
xchg
xchg
xchg
mov
movsl
fisttpl
pop
mov
arpl
jae
int3
and
movsl
shll
test
into
mov
or
inc
and
repnz
call
xchg
stos
push
jb
push
fimull
mov
cltd
xor
cli
test
and
xorb
inc
mov
bound
jb
push
sbbb
rcr
repz
cmp
mov
out
sub
aas
jmp
pop
leave
adc
jp
repnz
cmp
add
orb
jl
jmp
add
lds
inc
je
clc
push
fcompl
pop
sbb
pushf
mov
add
jge
mov
cmpsb
sbb
and
sar
push
and
cli
jl
push
cmp
and
inc
lahf
xlat
push
and
lds
mov
xchg
insb
lret
xor
ss
sahf
cmc
testb
adc
lret
xchg
fincstp
xor
fldl
mov
dec
adc
mov
inc
fsubs
sbb
js
cmpsl
outsb
xchg
and
mulb
gs
mov
push
test
idiv
mov
mov
mov
adc
dec
or
xor
scas
cwtl
xchg
movsb
jae
outsb
mov
push
int3
add
push
pop
icebp
and
cmp
std
pushf
mov
aaa
xlat
dec
mov
cli
ds
add
xchg
add
dec
jno
inc
sub
push
push
xchg
push
adc
mov
insl
adc
lds
out
adc
dec
mov
dec
xor
dec
add
mov
aad
inc
loopne
ljmp
and
cmp
push
push
mov
inc
ret
je
js
xor
shlb
iret
hlt
outsl
add
sahf
stos
fwait
mull
dec
ret
pop
add
xchg
lret
mov
cmpsl
mov
sbb
sub
push
cmpl
mov
or
aaa
xor
das
cmp
movsb
cmpsb
cli
es
and
add
loope
sti
sbb
push
into
bound
xor
xchg
loopne
add
inc
outsl
les
popf
aaa
icebp
inc
xor
and
mov
arpl
dec
test
xchg
dec
call
into
int
mov
cltd
cltd
mov
ss
push
xor
push
inc
or
mov
ss
repnz
scas
inc
push
sbb
add
xchg
mov
pop
xchg
popf
leave
stos
stos
jno
jp
out
fimuls
xchg
xchg
rcl
or
or
adc
imul
outsl
mov
addr16
xchg
inc
pop
nop
dec
dec
movsb
sub
sbb
inc
inc
hlt
insl
inc
lcall
ss
out
jno
push
mov
pusha
lock
adc
lock
sub
test
xor
mov
mov
movsb
andl
and
adc
mov
cmp
sbb
dec
sbb
in
inc
cmp
mov
mov
fcomps
leave
aam
movsl
scas
inc
mov
ret
pop
cmp
pop
test
movsl
push
xchg
movsl
push
pop
mov
mov
fst
and
xchg
sub
je
cmpsl
dec
xor
mov
pop
scas
pop
adc
dec
fwait
orb
push
iret
jg
xor
dec
in
inc
out
ret
push
push
jmp
call
aaa
pop
fnstenv
jbe
mov
xchg
add
addr16
inc
or
adc
lds
jne
or
popf
pop
fs
mov
mov
fs
sbb
jmp
ret
rcll
sbb
loope
jge
xchg
xor
jno
adc
mov
mov
jne
push
rcr
adc
and
test
cmp
cmpsb
insb
pop
push
jns
repz
jbe
jmp
icebp
std
repnz
loop
js
sbb
mov
jl
mov
test
in
popa
mov
vpandn
sub
and
psubusb
sbb
fwait
push
cld
loope
outsl
repz
mov
jo
jbe
push
mov
xchg
ss
inc
xor
popa
not
in
inc
jne
das
ficoml
fildll
push
mov
or
lods
in
icebp
sbb
push
xor
ficomps
push
mov
repnz
mov
ja
hlt
xchg
mov
repz
xor
popa
inc
mov
int
out
dec
movsb
lock
adc
xchg
notl
rolb
or
jo
jmp
pusha
dec
aaa
out
pusha
and
xchg
mov
cltd
add
dec
xchg
jp
fdivs
jle
mov
jl
pop
jl
sbb
outsl
in
push
popf
rcll
inc
mov
push
or
jecxz
les
fdivrs
outsl
jp
add
js
subl
add
test
icebp
inc
jge
scas
xlat
jg
fmuls
and
iret
repnz
pop
xor
leave
je
imul
or
cld
mov
push
push
repz
fcmovbe
cs
sub
lea
test
adc
jb
push
daa
cmp
outsb
mov
pop
mov
gs
cmp
xor
cmpsl
rorb
aam
add
out
push
shll
in
test
stc
pop
mov
jno
dec
jb
aas
push
xchg
jbe
pop
push
or
stc
push
mov
pop
xchg
pop
fists
arpl
test
mov
int
cwtl
adc
lds
out
scas
pop
clc
cltd
xchg
mov
cmp
ja
sarb
popa
push
add
mov
and
and
xor
mov
push
data16
adc
fisubl
loopne
repnz
inc
call
test
cli
aad
aaa
or
adc
test
adc
cmp
lock
cli
push
repnz
mov
popa
pop
lds
pusha
in
loop
cmpb
aam
adc
cmp
inc
jl
out
xchg
mov
jle
jl
aas
fldcw
lods
stos
fmul
lods
lea
jl
pop
jmp
add
out
mov
push
dec
nop
or
add
scas
adc
mov
out
inc
test
jbe
sbb
adc
jp
lcall
mov
inc
mov
mov
ja
pop
adc
sarb
jge
std
imul
add
jge
push
or
and
dec
mov
sbbl
or
iret
adc
test
and
mov
mov
cmpsl
call
cmpsl
lcall
imul
inc
push
cmpsb
call
dec
and
sbb
fdiv
xor
mov
sbb
iret
and
cwtl
xchg
inc
dec
popf
sbb
cwtl
mov
xor
dec
mul
in
sahf
lods
mov
cmp
iret
hlt
jno
xor
xchg
insb
dec
out
enter
sub
movsb
dec
clc
lock
mov
push
xorb
mov
xchg
jmp
cmpsl
shll
pop
jne
adc
adc
mov
push
dec
and
xchg
or
das
xchg
lods
push
inc
loop
jb
sarb
adc
decb
adc
cmpsl
xor
repnz
xchg
xlat
cmp
push
sti
pop
xor
popf
and
cmp
int
sbb
dec
cmpsb
mov
in
shr
test
pop
sub
adc
jns
addl
lods
add
add
jecxz
mov
sahf
push
mov
mov
push
lods
jmp
jl
imul
js
and
adc
or
aaa
adc
push
sub
fists
cmp
test
mov
aad
rcrl
pop
sub
pop
adc
imul
push
loop
shrl
mov
mov
xor
adc
addr16
and
cmp
sub
mov
xlat
test
inc
rol
pop
fs
add
jnp
mov
ds
or
scas
repz
ljmp
push
jbe
push
or
cmp
cmpsb
push
repz
push
cmpsb
stc
mov
test
xor
addb
stc
jo
xchg
pop
mov
subl
pop
shrb
fldt
lret
inc
dec
sbb
sub
icebp
shrb
pop
or
movsb
decb
pop
dec
cmpsb
lcall
rorl
mov
cltd
fdivr
daa
call
cmc
push
mov
mov
aas
dec
push
jns
mov
pop
fnstcw
adc
ss
out
imul
jg
inc
cmp
iret
repnz
jbe
xchg
and
jmp
cwtl
or
daa
or
add
pop
daa
clc
pop
or
inc
jbe
stc
cmp
sbb
addr16
in
mov
dec
fwait
arpl
adc
xorb
rolb
jae
and
xchg
add
mov
pop
push
stos
add
mov
xor
mov
outsb
bound
jmp
xchg
or
andl
test
inc
cmp
push
xchg
fcmove
mov
outsl
inc
push
push
data16
cs
out
int3
out
test
insl
adc
mov
mov
jno
xchg
mov
ds
jo
ja
aad
stc
nop
into
outsb
test
xchg
pop
add
pop
sahf
idivl
xor
sarb
pop
jge
dec
pop
xor
or
in
and
leave
sbb
jp
sub
sbb
cmp
gs
ss
inc
cmp
outsb
push
push
pop
pushf
aad
xchg
inc
pop
clc
xchg
lock
popa
mov
popa
cmp
rolb
jmp
outsl
push
jge
das
dec
mov
loope
cmpsb
xlat
or
sbb
jae
orb
xchg
das
data16
and
jns
jmp
push
arpl
out
loopne
pop
push
mov
ljmp
stos
jle
loopew
in
push
pop
cltd
mov
pop
lret
mov
mov
mov
popf
into
aam
lahf
in
mov
pop
add
stc
dec
pop
call
out
push
mov
pop
inc
iret
push
fists
into
cmp
xchg
outsl
adc
lret
fsubp
or
sbb
aad
sbb
sbb
lock
shrb
cmovl
or
fwait
scas
out
mov
or
ficoms
xchg
and
cltd
fcompp
outsl
stc
loopne
fwait
pop
sbb
clc
mov
lds
popf
lcall
lahf
fs
testl
and
push
je
test
fwait
jbe
mov
dec
pop
mov
jmp
sbb
mov
aam
jnp
mov
jg
stos
in
inc
or
jl
sub
pop
xchg
xchg
popf
sbb
mov
dec
inc
pop
mov
xorl
cs
sbb
xor
mov
push
int3
push
or
icebp
xchg
inc
sahf
cmp
divl
ret
push
sub
lret
test
cmp
ljmp
sbb
adc
std
pushf
pop
data16
loop
scas
mov
fucomp
popf
push
in
adc
nop
sub
xchg
out
hlt
loopne
out
adc
mov
fwait
es
loop
mov
inc
ljmp
jnp
fisttpl
xchg
and
fwait
aas
nop
stc
inc
addr16
es
jbe
clc
sti
mov
aam
mov
mov
sub
mov
sbb
xchg
js
aaa
lret
cmp
leave
hlt
inc
repnz
and
pop
jbe
adc
push
jae
mov
stos
xchg
jg
cmp
clc
aas
loopne
jae
in
mov
fidivs
in
xchg
or
loop
pusha
stos
sbb
lcall
or
ja
insb
cmpsl
push
sbb
dec
test
jmp
mov
dec
ds
or
mov
fcmove
in
pop
mov
pop
lods
ret
outsl
mov
or
push
push
cmpsb
add
aas
repnz
aam
popa
pop
pushf
decb
pop
fs
movsl
out
cltd
jp
fs
lock
push
movsb
push
pxor
call
jnp
xchg
aad
pop
pop
pop
or
add
ja
sbb
dec
aam
cld
sub
cs
das
inc
jnp
jns
xchg
and
inc
jb
es
pop
dec
pop
lret
push
into
scas
dec
clc
stc
inc
mov
push
cmpsl
cltd
scas
add
and
jno
push
shrb
dec
push
and
es
push
xor
je
stos
and
pop
shrb
test
xor
add
mov
stos
insb
cltd
iret
imul
add
add
lds
das
aaa
fbstp
sub
sbb
out
loopne
inc
pop
test
xchg
mov
outsb
mov
bound
aad
push
and
add
ss
jns
pusha
fistpll
movl
out
mov
xchg
jno
ljmp
mov
dec
outsl
or
mov
in
sti
stos
sub
or
lret
xchg
dec
inc
jmp
imul
xor
fsubrs
jg
pusha
cmp
stos
sub
add
daa
inc
insb
mov
and
pop
jmp
movsl
sti
add
cmpsb
xor
sub
xchg
inc
push
adc
sbb
hlt
adc
aam
aad
jp
nop
in
cmp
mov
push
pop
mov
pop
dec
mov
je
and
jnp
cmp
fstps
mov
xor
in
push
in
aad
outsl
pop
sub
dec
imul
js
scas
shrl
scas
cmc
push
das
sti
daa
leave
ljmp
fs
js
cwtl
dec
mov
jecxz
pop
push
mov
jecxz
or
xchg
cmp
iret
xlat
outsb
mov
iret
stos
sbb
cwtl
cmpsb
push
shll
sbb
mov
push
mov
sbb
push
sbb
mov
gs
lds
pop
cli
pop
loop
hlt
sub
lods
mov
movsb
inc
mov
in
mov
lds
or
mov
dec
out
iret
xchg
add
and
push
sbb
test
in
cmp
jg
cmpsl
dec
dec
push
insl
push
fs
xchg
std
cmp
push
mov
orb
sub
sub
inc
in
adcl
xchg
dec
lds
push
cwtl
push
ss
insl
xchg
xor
and
inc
dec
lea
cld
push
nop
adcl
cmc
int
xor
pop
inc
sub
rclb
mov
xchg
outsb
fwait
jge
pop
push
icebp
out
inc
xchg
pop
lea
jne
insb
lea
or
int3
jae
out
fbstp
mov
dec
lret
sbb
js
test
mov
rcrl
push
xchg
xchg
jnp
lret
push
pop
jl
aad
out
roll
rorb
rcll
pushf
std
sub
or
mov
or
test
test
mov
outsl
mov
sub
jns
push
out
xorb
lea
xchg
pop
test
sub
sbb
data16
cmc
mov
add
xchg
jno
adcb
cmp
mov
scas
scas
xchg
inc
sbb
jnp
insb
xchg
mov
mov
test
movsb
aam
and
push
sbb
xchg
sub
xor
sub
aam
addr16
cltd
aaa
mov
lcall
dec
cmp
mov
out
cmp
idiv
and
sub
movl
jecxz
xor
jbe
mov
mov
fwait
stos
pop
and
push
pop
mov
cli
rclb
cmpsb
xchg
nop
in
dec
lret
movsb
je
and
xchg
ret
sub
xor
gs
pop
xorl
xor
test
loopne
xchg
stos
xor
jne
add
or
mov
jl
call
mov
sbb
fisttpl
stos
dec
aaa
xchg
jmp
jo
pop
push
pop
lret
adc
loopne
push
and
or
lods
pusha
xchg
dec
sahf
es
lods
mov
sarb
out
jmp
xor
cmp
ja
pop
out
lods
clc
popa
enter
ss
sbb
mov
inc
testl
cmp
cmp
cld
mov
lds
mov
js
lret
cltd
loopne
add
fwait
xor
enter
loope
mov
jl
jl
pop
ret
in
push
mov
nop
int3
lock
fiaddl
mov
pop
pop
icebp
pop
ds
mov
pop
pushl
xor
shl
xor
mov
mov
mov
jo
mov
scas
push
adcb
jbe
pop
popa
lods
jecxz
lds
out
popa
adc
ficoms
sbb
sbb
push
xor
xor
in
inc
pop
iret
inc
sub
mov
xor
xor
and
mov
jo
js
ljmp
in
imul
jb
loop
jnp
cmc
xchg
stc
lret
fsubrs
out
pop
jle
xchg
outsl
jl
jg
out
add
pop
in
or
mov
imul
dec
cmpsl
pop
xchg
adc
in
mov
adc
fstl
jno
fisubrl
adc
pop
mov
xchg
out
lods
dec
sbb
stos
int
add
out
pusha
es
cmpsl
ficomps
push
repz
test
xlat
rolb
daa
addl
jae
sub
sub
sub
aad
lahf
fiaddl
test
add
mov
lcall
ret
int3
dec
add
push
xorl
lahf
pop
xor
popa
push
ljmp
in
xor
stc
mov
xor
movsb
and
addr16
pop
cmpsl
xchg
pop
and
mov
mov
and
movsl
jae
lock
fdiv
sub
stos
stos
lahf
sbb
cmp
gs
aaa
fistpl
pop
or
xor
push
jno
fidivs
fistpll
sbb
jo
scas
lret
jl
aam
stos
cs
scas
cmp
mov
pop
or
jbe
imul
fldcw
mov
aas
in
mov
clc
xor
xor
and
sub
adc
lret
filds
flds
or
imul
pop
xor
test
sahf
int
xchg
xor
psadbw
nop
pop
outsb
std
pop
aam
daa
ja
popf
jecxz
bsf
add
add
adc
aam
ja
aad
and
roll
mov
scas
add
or
lahf
pop
adc
jnp
fwait
cmpb
jb
mov
icebp
dec
push
or
xchg
adc
test
js
stc
xchg
inc
lods
fdivrl
adc
jo
clc
xor
push
into
dec
mov
xadd
mov
pop
les
repnz
mov
mov
int
in
lret
std
fisttpl
or
jnp
dec
jge
lea
mov
sti
in
lret
std
fisttpl
or
jnp
dec
jge
lea
mov
jnp
lret
cld
fisttpl
stos
sbb
sbb
inc
jnp
dec
dec
pop
xchg
stos
mov
and
jmp
sti
in
lret
jge
or
or
test
mov
sub
cmpl
mov
je
cmp
je
push
lea
push
push
movb
call
call
mov
xor
xor
call
mov
xor
call
mov
mov
lea
push
call
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
pop
pop
test
jne
mov
not
mov
movb
or
mov
leave
ret
add
xor
or
js
andb
mov
data16
loop
repnz
add
xor
jb
andb
mov
data16
inc
repnz
add
xor
jb
sbbb
push
jbe
push
ret
adc
cmpsb
jbe
and
pop
jp
and
aaa
imul
pop
arpl
push
jae
xchg
scas
mov
negb
jle
int
mov
lret
jg
pop
push
pop
push
dec
pop
cmp
inc
jg
push
mov
pusha
and
mov
jge
shrl
out
enter
xchg
scas
inc
xchg
adc
gs
out
das
jb
unpckhps
and
jmp
popa
mov
repnz
ret
imul
push
or
cmp
subb
aaa
daa
cli
iret
and
mov
repz
jmp
in
dec
loope
mov
cmc
out
or
bound
pop
add
andb
adc
inc
out
mulb
jb
andb
mov
data16
inc
repnz
gs
rcrb
mov
mov
mov
negl
push
rorb
add
ja
inc
xchg
inc
adcl
sbb
ret
pop
mov
or
notb
ret
pop
loop
mov
jb
andb
mov
data16
inc
repnz
add
xor
jb
andb
mov
data16
inc
repnz
add
sbb
cmp
in
jecxz
pop
sbb
xor
sbbl
scas
fiaddl
jns
test
out
gs
mov
dec
xchg
and
jnp
lret
add
push
in
xchg
pop
pop
push
out
popa
mov
push
lods
mov
clc
test
jecxz
in
cmp
adc
mov
fnstenv
mov
mov
sub
mov
xchg
mov
xor
nop
rolb
insb
ljmp
shrl
add
pop
and
lods
xor
loop
jbe
loop
adc
sbb
push
or
cmp
push
shlb
test
pop
push
test
jmp
jb
stos
xor
das
cmp
fwait
iret
nop
lcall
or
cld
lock
push
add
mov
sub
imul
fdivrs
movl
and
ss
fldenv
mov
adc
jnp
out
mov
or
test
mov
aam
enter
out
mov
inc
ret
sbb
cmova
es
push
lds
push
movsl
es
roll
sbb
pop
mov
in
outsb
clc
pshufw
rclb
mov
push
or
push
mov
jbe
into
call
popf
pop
add
sub
mov
jo
dec
adc
jb
mov
js
aam
div
fildl
fdivrp
stos
jns
inc
repnz
pushf
xor
je
cltd
mov
movsl
cli
sub
js
push
out
out
mov
ljmp
adc
movsb
xchg
xor
push
out
jmp
lcall
lods
pop
aad
pop
inc
lods
in
leave
rcrl
pop
adcl
and
repnz
fwait
jae
inc
jns
sub
sbb
jp
jbe
fbld
mov
mov
addb
je
and
xorl
lds
shlb
dec
mov
pop
jne
lret
lret
fwait
xor
jmp
mov
stos
adc
sahf
out
pop
aam
jno
lcall
mov
push
adc
and
inc
imul
adc
iret
mov
jo
xor
sub
xchg
mov
push
jecxz
dec
xor
sbb
fnstsw
xor
push
mov
and
int
lret
in
lods
jae
xchg
mov
xor
adc
insl
jmp
clc
inc
leave
xor
push
out
lret
xchg
mov
and
mov
mov
pop
in
aaa
adc
xchg
mov
pushf
imul
cmp
call
ficompl
add
xchg
jmp
or
cmp
fldenv
adc
xchg
leave
mov
xchg
vmwrite
xor
scas
call
fcmovb
mov
scas
mov
dec
add
popf
sub
lock
ljmp
cmp
loope
hlt
ret
mov
mov
mov
mov
ds
outsl
jle
cmp
cmp
cmp
dec
inc
in
nop
xchg
imul
jecxz
lods
mov
adc
xchg
add
loopne
dec
call
shrb
mov
xchg
jnp
fs
ftst
push
jbe
imul
cltd
inc
ror
inc
xlat
ficoml
push
push
fistpll
aas
mov
mov
mov
sub
nop
decl
out
cs
xor
cmp
xor
inc
js
stos
cmp
xchg
out
xchg
aaa
push
fwait
mov
repnz
inc
mov
xchg
dec
dec
and
mov
add
jne
xchg
dec
xchg
xlat
sahf
sar
insl
call
inc
sbb
pop
out
pop
movsb
ja
roll
int3
daa
test
retw
imul
mov
js
sub
inc
mov
inc
mov
sub
or
pop
add
mov
sahf
add
fimuls
sbb
into
dec
inc
xor
dec
mov
mov
dec
icebp
dec
and
sarb
mov
jle
clc
movsb
dec
mov
cli
pop
repnz
inc
mov
push
jle
into
mov
mov
lods
jae
jnp
stos
sbb
cmpsl
mov
popf
fsub
jmp
divl
test
dec
stos
addl
ficomps
sbb
cmp
pop
adc
mov
scas
and
lods
mov
mov
push
mov
xor
into
sub
push
fisubrs
lods
or
cmpsl
sbb
out
lret
dec
mov
incb
out
mov
push
jno
sbb
fdivrp
in
or
inc
shr
xchg
in
xor
sub
xor
jecxz
mov
or
dec
dec
out
push
ja
in
adc
mov
mov
inc
fistl
fdivrl
dec
rcll
or
pop
cmp
popa
fmull
dec
mov
adc
inc
push
jns
loope
pop
aaa
fwait
xchg
in
shr
pop
jp
ja
test
js
lea
js
mov
out
ret
jg
pushf
push
popa
cmpsb
cmp
add
imul
je
adc
sub
addl
das
pushf
xor
je
adc
xchg
jecxz
inc
mov
pop
scas
fmuls
jb
sbb
pop
or
cmp
jge
js
jb
outsl
in
mov
int
dec
les
out
imull
out
pop
xchg
and
pop
cmpl
and
pop
and
mov
xchg
ds
sub
cmpsl
jo
shl
cmpsb
push
mov
pop
pop
push
jg
sbb
inc
lds
idivb
add
loopne
mov
enter
fstps
mov
int
int3
mov
dec
aaa
inc
or
xchg
add
lods
popa
jle
leave
pop
in
movsl
test
int
icebp
sub
loop
adc
dec
sub
jbe
pop
pop
push
or
hlt
out
or
xor
push
inc
popa
mov
sbb
adc
and
jns
pop
cwtl
xchg
mov
stos
jnp
cmp
repz
sahf
mov
std
pop
in
jae
lret
inc
adc
lcall
fdivr
adc
cmp
gs
mov
lahf
popf
jge
out
jno
mov
pushl
sbb
outsl
ss
xchg
push
mov
movsl
jne
loopne
mov
cmp
pushf
fs
rorb
arpl
xchg
imul
clc
nop
leave
loope
lcall
xor
dec
sbb
cltd
pushf
xchg
cwtl
mov
je
repz
cmpsb
outsl
jb
inc
or
xchg
inc
ja
and
or
dec
push
mov
aam
sbb
mov
decb
mov
pop
popw
xchg
adc
lcall
xor
ds
ljmp
lds
arpl
ds
ljmp
sub
nop
mov
lret
xor
es
decb
pop
jnp
pop
repnz
cmp
pushf
sbb
add
loope
adc
ret
add
jecxz
mov
out
sub
xchg
xchg
or
jns
pop
push
leave
int
mov
in
pushf
pop
cmpsl
rorl
aaa
loop
daa
mov
fidivl
xchg
je
into
add
jecxz
int
mov
pop
adc
lahf
jnp
mov
xlat
lcall
out
in
xor
gs
data16
sbb
imul
xlat
mov
and
mov
dec
and
sbb
and
cmp
ret
push
adc
rcr
lahf
dec
outsl
es
pop
mov
mov
push
lds
arpl
and
shll
sbb
mov
sbb
dec
cltd
xchg
add
cmp
fadd
mov
pop
inc
lods
sahf
or
sbb
jp
sbbl
pop
push
sub
cmp
in
jecxz
jmp
ss
shr
cwtl
addr16
mov
pushf
pop
fisttps
insl
push
pop
sbb
sub
test
shlb
scas
rcr
xchg
test
test
sbb
pop
lcall
mov
dec
mov
push
add
dec
cmc
cmp
pop
mov
fsubl
dec
jg
gs
push
dec
pop
jp
inc
fcmovb
pop
test
pop
test
out
in
aad
pop
cltd
dec
popa
adc
test
jp
out
push
jmp
movsl
sarl
inc
js
pop
bound
dec
xchg
insb
mov
sbb
xor
add
mov
push
jmp
int3
ret
mov
cmp
dec
push
mov
dec
dec
xor
imul
push
inc
dec
dec
jp
mov
sahf
aam
nop
out
and
add
pop
stos
add
fstps
sbb
adc
mov
pop
and
call
pop
popf
mov
cmp
add
and
cwtl
pop
loope
cltd
das
shrb
dec
shr
jl
out
out
es
cli
pop
dec
xchg
lret
lock
push
fisttpl
out
cmp
test
pop
cmp
add
xchg
pushf
rolb
shl
loopne
fldcw
xor
cmp
pop
mov
xor
out
cmp
jl
mov
inc
adc
add
arpl
and
xchg
mov
mov
adc
int3
cmp
stos
push
enter
add
xchg
ds
add
cld
push
mov
notl
shrl
lcall
inc
mov
dec
cmpsb
mov
dec
std
adc
lea
int3
idivl
cmpsb
loope
xchg
add
cmpsl
push
xor
sbb
pop
orl
int
add
adc
and
mov
sti
or
repnz
cli
cld
and
data16
loope
arpl
mov
adc
cmp
js
rcrl
sbb
xchg
push
jne
xchg
mov
test
inc
xchg
cmp
inc
mov
add
push
loopne
sub
xor
rcl
lret
jnp
hlt
or
imul
push
insl
pop
mov
in
push
rcll
int3
push
sbbb
dec
leave
popl
dec
sbb
in
imul
fwait
add
xchg
mov
lds
xchg
push
movsb
cmp
rol
inc
cmpsb
stos
sub
loop
movsl
shrb
or
xor
aaa
fcompl
xor
xor
cmp
testb
jo
sub
inc
dec
push
rcrb
jl
sbb
add
xor
push
inc
int3
or
add
fsubl
and
in
xor
mov
and
test
cmpsb
mov
lcall
sub
jnp
cmpsl
xlat
jbe
inc
mov
fs
push
sbb
pop
in
ret
inc
cld
sbb
scas
outsb
sbb
sbb
pop
jns
sub
testb
and
imul
add
inc
xchg
mov
mov
mov
ljmp
push
jnp
test
and
add
mov
lock
rclb
rorb
insl
flds
xor
adc
orb
pop
stos
sub
lds
sbb
inc
cmp
out
cld
outsl
jae
push
andl
dec
dec
shlb
xor
outsb
rol
gs
pop
sub
cltd
test
mov
scas
mov
push
cmpsb
mov
loopne
ds
jae
orb
sbb
aam
xor
inc
mov
ror
add
ret
jle
mov
lret
adc
stos
arpl
cmc
test
cld
push
jp
or
jge
xchg
or
pop
mov
inc
jge
shl
test
push
xchg
jecxz
rcr
lock
rorl
push
subl
leave
mov
sbb
sbb
insl
jne
jno
fnstcw
inc
pop
aaa
fucomi
or
cmpsl
into
cmpsl
dec
bound
sub
mov
xchg
and
das
dec
jb
outsl
scas
ljmp
xor
sahf
sbb
fbld
test
dec
mov
fwait
adc
scas
or
push
and
adcb
mov
push
shr
pop
imul
mov
and
mov
hlt
sub
mov
hlt
inc
loopne
fdivl
xchg
mov
mov
push
rorb
pop
or
data16
sbb
sub
mov
sub
sbb
clc
cmpsb
sub
xchg
push
out
xchg
movsb
add
arpl
filds
xor
cmpl
xor
push
xor
xchg
pop
jne
and
pop
push
loopne
adc
xchg
ja
aas
hlt
inc
sub
out
pop
divl
daa
add
add
loop
pop
dec
mov
dec
dec
cmc
inc
mov
inc
cmp
add
adcb
mov
nop
inc
mov
ljmp
sbb
inc
addr16
mov
sub
xchg
test
or
push
shlb
leave
xchg
push
adc
scas
adc
dec
push
pop
mov
icebp
movsb
sub
scas
and
shll
cmc
test
ds
or
inc
pushf
adc
add
xor
xlat
mov
jnp
inc
stc
cld
and
jns
push
je
push
aad
das
data16
ret
cmp
xchg
pushf
outsl
push
ja
pop
pop
daa
jae
int3
jbe
push
test
sub
stos
mov
or
and
and
xlat
mov
adc
cmp
xchg
stos
negb
mov
addb
icebp
shl
sbb
push
pop
rcrb
xor
movsb
sub
inc
jge
dec
mov
sub
testb
sbb
or
imul
inc
insl
mov
in
movlps
scas
lret
mov
mul
sub
sbb
add
cmp
imul
pop
mov
and
jo
cltd
call
out
dec
and
insb
xchg
cmp
das
mov
lahf
hlt
push
inc
cmp
enter
arpl
iret
push
testl
popa
mov
push
sub
out
movsl
xorb
inc
pop
sub
call
jo
jmp
inc
mov
testl
mov
stos
push
cmp
lds
push
mov
xor
outsb
inc
mov
or
mov
ljmp
mov
ljmp
insb
cmp
dec
cwtl
pop
xchg
sub
xchg
adc
adc
xchg
xor
push
mov
sub
out
mov
dec
inc
mov
imul
pop
fcomps
lods
sub
jmp
xchg
mov
fisubrs
aam
adc
jmp
cli
jle
or
leave
jg
push
mov
lret
xlat
movsl
push
fdivrl
rorb
pop
and
shl
jbe
out
jne
fisubs
lret
mov
adc
xor
scas
iret
xchg
xlat
cmp
adc
add
test
jp
fs
js
mov
xchg
fists
inc
ja
mov
mov
mov
out
adc
xor
adc
testl
lods
adc
sahf
inc
repz
pop
xchg
aam
cmp
rcll
shll
and
clc
xchg
bound
adc
push
loop,pn
and
sbb
xchg
icebp
mov
push
lods
stc
imul
xor
adc
movsl
lods
sbbl
inc
mov
and
inc
inc
and
popf
jae
loop
push
into
ss
test
mov
inc
mov
insl
inc
push
sbb
mov
test
inc
js
cmp
test
iret
out
sbb
lahf
and
fwait
movsl
daa
mov
js
incb
and
sbb
ror
or
and
aaa
js
incb
popa
jl
and
cmc
sbb
call
mov
test
sbb
and
sub
jns
mov
add
inc
adc
cs
ret
xchg
add
xchg
pusha
sub
insl
and
or
adc
rclb
sbb
and
push
sahf
adc
divl
test
adc
pop
jno
stos
fists
in
shrb
fisttps
jnp
mov
sbb
fmul
adc
jns
pop
push
out
lret
loope
sub
shlb
sub
and
ret
loopne
lock
mov
push
sbb
jnp
inc
adc
and
jnp
rolb
pusha
inc
sub
jl
sar
add
test
lret
inc
clc
mov
pushl
mov
jno
addb
inc
jns
std
mov
jne
subb
dec
or
stc
lahf
fisubs
xchg
jge
dec
mov
adc
bound
mov
and
sbb
inc
out
jge
scas
mov
lahf
int3
lret
mov
inc
xchg
aaa
nop
xchg
fsubrs
test
push
mov
dec
test
imulb
pop
loope
nop
inc
stos
fisubrl
pop
jp
lods
dec
fcoml
xchg
addl
xlat
in
push
loope
out
rcl
jge
xor
mov
daa
ss
arpl
cwtl
bound
cmp
inc
cmpsb
mov
ljmp
outsl
frstor
lock
pop
mov
or
pop
add
hlt
rcrb
mov
cld
loop
jns
out
int
xchg
repz
outsb
fwait
mov
insl
ret
insl
scas
out
scas
sub
adc
or
inc
ja
sbb
or
pop
dec
imul
push
jae
and
or
mov
mov
dec
test
out
aas
mov
sahf
add
sbb
dec
movsb
sub
dec
ljmp
jbe
pop
dec
stc
popa
jno
adc
pop
outsl
pushaw
mov
in
inc
push
mov
cld
js
fcomip
inc
sbb
pushf
mov
cmpsb
mov
testl
std
pop
xor
push
inc
jb
jb
icebp
xor
dec
and
mov
jmp
add
adc
mov
lcall
daa
sub
fildl
xchg
arpl
bound
lock
cli
push
cmp
mov
jp
cs
xor
sub
int3
cmpsl
mov
psllq
mov
into
and
push
rcl
lock
mov
mov
add
xchg
mov
xor
add
in
pop
lret
lret
dec
or
xor
adc
push
in
leave
shl
stos
lahf
pop
and
mov
and
and
sarb
push
jne
or
shrl
mov
pop
cmp
jge
adc
nop
xchg
xor
pop
cmp
xor
mov
xor
sbb
sbb
pop
clc
dec
sub
fwait
lahf
loope
and
xchg
and
stos
sbb
sbb
jnp
je
leave
repz
jmp
jns
sub
mov
lea
lock
data16
ret
xor
mov
sub
mov
push
std
xchg
push
lret
mov
mov
popf
jo
out
fidivs
hlt
cmp
dec
jmp
lahf
and
leave
jbe
cmpsl
mov
daa
dec
mov
roll
and
cmp
lods
xor
aad
out
loopne
add
xor
adc
lret
sub
repnz
leave
add
xchg
ljmp
jbe
popa
dec
mov
jl
or
out
fmulp
sbb
mov
fistl
pusha
je
cmp
mov
flds
adc
jmp
dec
div
add
dec
pop
xchg
or
xor
xchg
xor
xor
jbe
jg
out
xlat
jo
aad
call
xchg
aam
popf
push
lcall
fwait
sub
cmp
inc
fisttpl
and
movsl
jecxz
push
aaa
lcall
xor
mov
mov
push
loop
ljmp
setns
push
and
pop
mov
mov
insl
adc
lahf
lods
pop
insb
lcall
aas
mov
in
lds
arpl
mov
nop
jo
ret
cmp
mov
xchg
cs
or
ret
scas
push
sbb
mov
push
cltd
aam
in
xchg
push
sahf
push
inc
ljmp
push
push
int
mov
and
popa
pop
clc
mov
cltd
fbld
mov
int
pop
jmp
clc
jecxz
popa
cli
pavgw
mov
xchg
cmp
jo
mov
sub
mov
scas
cmp
pop
stos
sbb
cwtl
cmpb
pop
jg
push
xor
outsl
inc
sub
push
pushf
or
mov
lods
js
icebp
lock
cmpb
pop
jo
aam
sbb
xor
mov
arpl
push
sub
add
pop
fsubl
pop
js
inc
and
pop
in
ret
mov
popl
dec
in
and
ds
inc
and
push
mov
push
popa
cmp
mov
movsl
mov
jp
adc
inc
lret
and
or
push
insb
ret
mov
cmp
jno
jmp
pusha
dec
lea
bound
sub
sbb
push
add
call
lock
orb
call
pop
cmpsb
fcomi
jno
push
int
or
lcall
leave
in
out
icebp
enter
mov
hlt
sub
sbb
mov
xchg
xchg
inc
out
mulb
jb
andb
mov
data16
inc
repnz
add
xor
jb
andb
mov
data16
inc
repnz
add
xor
repnz
andb
aaa
mov
shlb
inc
repnz
add
xor
bound
sub
push
mov
mov
mov
test
in
inc
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
jmp
lea
push
pushl
call
lea
push
pushl
call
jmp
call
push
mov
call
xor
leave
ret
pop
stos
adc
and
xor
inc
xor
pop
and
aam
enter
out
xchg
aam
in
in
pusha
push
adc
dec
je
fs
adc
add
xor
and
xchg
in
not
push
in
hlt
movsb
mov
insb
in
jge
or
je
loopne
mov
int3
adc
ljmp
pop
sub
inc
sti
push
fnstsw
pop
cmpsl
dec
sti
lock
loopne
lock
call
cld
mov
push
aam
jmp
push
loopne
and
dec
in
adc
jmp
push
sub
add
inc
inc
enter
add
dec
mov
aam
xchg
test
enter
jl
shll
xor
les
test
cmp
aam
in
hlt
into
sti
insb
sbb
mov
jmp
movsb
mov
in
cld
aam
sbb
clc
pop
sti
pop
mov
cs
test
sub
movl
push
and
xor
mov
sub
push
in
test
mov
shrb
inc
push
jne
sub
push
pop
je
test
rorl
lea
inc
push
add
popa
sub
push
and
lods
movsl
movsb
or
mov
fdivs
and
adc
js
add
xor
and
aam
les
aam
in
hlt
movsb
add
adc
and
xor
inc
adc
add
xor
and
aam
les
aam
in
hlt
movsb
add
mov
out
hlt
ja
sub
mov
cmp
movl
push
fidivrl
jp
or
test
adcl
inc
nop
adc
push
mov
mov
andl
jns
addr16
pop
pushf
push
pop
sbb
hlt
out
pusha
inc
push
or
int3
cmpsl
cmp
insb
xchg
jge
sti
and
dec
pop
nop
jg
jb
and
inc
stos
loope
fimuls
stos
stc
maskmovq
arpl
jb
cltd
adc
lods
push
lret
add
insl
andl
sbb
cmp
enter
sub
ss
xchg
cld
lret
rclb
jo
repz
mov
scas
test
cmp
dec
mov
fwait
sahf
jmp
jbe
and
pop
lock
test
or
adc
mov
jo
imul
and
shlb
cmpsl
stc
pusha
push
roll
jbe
cmp
dec
or
shll
lret
adc
ds
pop
inc
push
jge
mov
mov
and
mov
push
mov
xchg
enter
mov
push
sub
add
push
cmp
lds
seta
mov
inc
and
leave
pop
sub
outsl
mov
loop
mov
xchg
je
fcmovnbe
jle
hlt
mov
fdivp
adc
sub
pop
or
mov
lds
mov
stos
inc
int3
cmp
mov
sbbl
lcall
adc
lret
push
dec
xchg
clc
inc
sbb
sahf
shl
je
pop
aam
leave
mov
test
inc
mov
adc
jecxz
push
or
xor
add
push
dec
pop
xrelease
out
cld
out
cmpb
jne
aaa
ja
aam
lret
xlat
insl
xchg
and
fdivrs
adc
xchg
bound
call
xor
adc
dec
jge
pop
jb
sub
aaa
sbb
popa
cmpsb
scas
sbb
mov
shr
js
ds
or
jl
iret
rorl
xor
dec
mov
call
fnstcw
mov
test
repz
push
or
scas
mov
loope
mov
lea
and
jne
ret
xor
test
pop
lea
mov
mov
divb
test
and
fstpt
or
dec
mov
nop
je
dec
adc
test
pusha
ret
hlt
test
inc
mov
lret
push
sbb
sbb
sti
mov
enter
fcmovbe
fistpl
leave
xchg
adc
push
fmulp
dec
jg
adc
aam
inc
mov
nop
dec
loop
lret
push
xchg
and
or
xlat
add
mov
cltd
lea
mov
outsb
repz
mov
and
ljmp
popa
loope
test
inc
sbb
lcall
stc
sub
int
mov
mov
aas
movsl
cs
outsb
sub
pop
or
mov
and
adc
jl
sub
in
and
push
jns
mov
out
push
aad
fwait
xchg
lcall
es
sbb
addb
inc
pop
inc
fiadds
stos
push
in
addb
dec
mov
in
cmpsb
sbb
xor
movsl
jmp
xchg
pop
and
mov
jbe
fnstcw
sub
dec
sbb
inc
testb
scas
sbb
dec
lret
or
and
jecxz
rorl
or
stc
les
lahf
lahf
daa
mov
ds
nop
jl
mov
sbb
imul
cmp
sub
or
cwtl
push
dec
adc
push
adc
mov
and
mov
bnd
or
das
idivb
jl
movsl
bound
cmp
daa
push
jae
imul
dec
xchg
rolb
fnsave
adc
rclb
mov
pop
loope
mov
push
jae
jns
xor
popf
orl
adc
mov
and
mov
jo
mov
jae
sbb
popf
out
in
sub
ss
das
mov
add
ljmp
pop
lods
adcb
int
adc
in
mov
js
fimull
and
mov
push
negl
pop
popa
ret
xor
add
stos
loopne
loope
stos
jge
push
mov
mov
xor
dec
jns
and
jle
jo
sti
jmp
lret
negl
xchg
adc
fs
lods
xchg
sbb
or
faddl
add
je
ret
icebp
push
in
jno
xor
jecxz
imul
adc
cmp
scas
cmp
push
pop
addr16
mov
adc
outsl
push
into
xchg
and
push
gs
repz
push
fs
out
hlt
xor
das
jb
xor
pop
push
stos
jbe
push
jno
fnstcw
in
out
mov
add
cmp
pushf
cmp
hlt
push
leave
add
mov
cli
fisubrs
cld
rcrl
cmp
mov
lret
lock
add
test
xchg
int3
dec
movsl
sbb
int
rorl
ljmp
jnp
shrl
jnp
cld
sarl
ret
iret
add
out
jae
cs
jae
test
fsqrt
lcall
rcr
jecxz
or
dec
or
cmp
or
imul
dec
insb
sbb
cs
shl
pusha
mov
bound
aam
cld
icebp
add
je
lods
bound
out
jno
push
push
fs
aad
stc
mov
aaa
scas
inc
and
pushf
ja
test
popa
push
ret
sbb
mov
dec
inc
sti
and
adc
sub
and
add
fcomi
addr16
and
andl
and
pop
sub
sub
or
into
sub
jecxz
dec
pop
out
cmp
sahf
rcrb
or
rcl
mov
imul
pushf
movsl
pop
test
stc
sub
add
loop
mov
popf
or
dec
mov
adc
nop
inc
inc
inc
lahf
jecxz
cli
xlat
lret
nop
mov
or
int
rorl
daa
xor
dec
rol
mov
cltd
jo
cmp
out
and
mov
popf
cmc
pop
sub
xor
inc
xchg
and
lea
xor
mov
dec
enter
out
mov
out
mov
nop
je
xor
fwait
jmp
inc
xor
mov
das
jge
mov
jbe
mov
mov
add
add
mov
inc
push
pop
popa
je
insb
add
gs
sbb
xlat
sub
stc
add
add
imul
ret
pop
jnp
loop
jle
and
aad
mul
insl
add
movsl
push
xor
into
dec
pushf
fsubl
test
push
adc
mov
mov
cwtl
pusha
and
adc
push
dec
rcrl
les
and
std
mov
in
in
adc
jnp
out
popf
popa
loopne
xchg
jmp
sub
pushf
add
push
mov
lcall
test
loop
sbb
outsl
sbb
pop
imul
out
insl
std
sub
adc
in
mov
xchg
subl
fistpll
cwtl
pop
repnz
inc
or
outsb
iret
inc
xor
in
insl
adc
stc
inc
mulb
mov
dec
or
cmc
dec
clc
sti
jae
jmp
xor
stc
dec
inc
mov
mov
mov
movsb
dec
xor
or
xor
pop
lahf
sbb
push
dec
pop
mov
pop
fisubrs
cs
into
bound
xor
xchg
jae
loop
push
cmpsb
dec
ret
bound
out
push
cld
hlt
jle
dec
mov
mov
fstps
sub
imul
leave
repnz
pop
push
ja
out
mov
cmpl
addl
das
repz
out
pop
sbb
outsl
adc
lea
ret
shl
icebp
ret
sbb
hlt
ds
rcrl
sub
or
popf
test
das
mov
inc
popa
jbe
mov
fmuls
xlat
ret
push
test
dec
das
stos
pop
andl
add
cmpsb
push
js
mov
mov
cmp
mov
leave
pusha
daa
adc
mov
iret
add
mov
ror
mov
dec
in
bound
jmp
je
clc
adc
push
shlb
inc
int
or
pop
fs
loope
call
mov
xchg
shlb
sub
and
mov
xlat
add
pop
jecxz
leave
inc
adc
into
or
in
xchg
clc
mov
or
mov
pop
pop
pop
or
inc
sbb
fwait
push
mov
add
andl
pop
je
out
into
clc
inc
mov
les
push
xchg
outsb
adc
in
push
jmp
bound
lret
inc
mov
xor
push
or
inc
roll
outsb
add
gs
pop
popf
in
sub
repz
jne
push
das
out
cmpsb
cmp
xchg
jp
sbb
sti
ljmp
imul
leave
xor
push
and
loop
jnp
sub
inc
jne
ret
xchg
cltd
xchg
mov
cmp
cmpb
and
push
and
and
push
mov
gs
pop
rorb
enter
imul
ret
aaa
or
inc
pop
ret
jns
push
je
outsb
sub
mov
fsubs
insl
aam
push
fcom
cmpsl
cltd
mov
inc
dec
aad
push
xchg
inc
jns
inc
mov
jge
iret
lods
call
sarb
mov
pusha
sub
call
and
or
aam
fists
sti
nop
fwait
xor
xor
call
test
and
faddl
sub
stos
jnp
cli
enter
inc
idiv
test
movsb
pop
pop
jg
in
dec
shlb
cmp
int
popa
cmpsl
jb
pop
repnz
inc
popl
in
nop
xor
inc
out
les
in
push
jb
mov
loop
xor
or
cld
xor
inc
aaa
test
cltd
inc
jns
das
adc
cmp
enter
or
cmp
cmp
cmp
adc
pop
mov
inc
and
in
mov
fdivr
rcll
add
mov
adc
mov
mov
cwtl
jae
mov
sub
and
adc
nop
jo
push
je
dec
test
inc
mov
mov
cmc
jae
js
mov
mov
arpl
dec
cli
dec
xor
sub
iret
or
popf
loope
in
aad
mov
orb
mov
adc
lea
push
shr
scas
mov
push
mov
inc
test
shrb
mov
cld
inc
fisttpll
pop
ljmp
cmp
add
mov
lahf
inc
cmp
stos
or
add
mov
mov
stos
xor
stc
mov
sub
xchg
mov
adc
sub
push
fdivrs
ja
xlat
inc
sarb
or
lahf
pop
in
jp
je
pop
lods
shlb
out
cwtl
nop
in
jne
jle
lods
andb
xchg
sahf
mov
movsl
xlat
dec
loop
pop
mov
sbb
xlat
ds
inc
lcall
aam
nop
pop
pop
in
push
xchg
jp
add
pop
sub
ret
daa
in
add
add
shrl
into
xchg
jge
int
push
sbb
daa
mov
dec
dec
pop
cld
lea
mov
rorl
fs
andl
xchg
fdivrp
mov
dec
test
imul
lret
jmp
mov
add
or
sub
cmc
andb
cld
fiaddl
pushf
xchg
xor
lret
lret
and
test
adc
jo
hlt
push
jno
inc
sub
and
push
repnz
test
bound
push
add
out
push
mov
adc
pop
test
fisubrl
ret
jl
jbe
cmpsb
fildll
shll
push
xchg
push
ficompl
gs
aam
loopne
pusha
pop
push
out
pop
jg
xchg
lcall
fwait
jle
int
sbb
mov
dec
popa
push
add
jl
out
hlt
or
ss
jnp
lock
lods
pop
scas
pop
dec
mov
mov
cs
mov
sbb
mov
loop
insb
add
and
inc
stc
gs
sbb
dec
mov
int3
jae
repz
pop
lods
xchg
popa
fcmovb
mov
jl
or
pushf
sbb
jmp
loop
push
adc
ja
fbld
and
lock
loope
mov
push
cli
sbb
sbb
cld
imulb
add
and
xchg
mov
mov
cmc
out
adc
dec
sbb
lock
push
aaa
and
dec
mov
fistpll
mov
test
jge
xchg
add
aas
in
cmp
arpl
or
incl
in
mov
mov
lods
mov
mov
xor
fsubrl
adc
adc
jge
mov
addl
jo
mov
in
js
xchg
ljmp
add
pop
popa
ret
pop
mov
cmc
je
pop
vpmacswd
mov
mov
outsl
jp
int
sub
out
xchg
out
popf
pop
mov
rolb
mov
aad
js
out
cld
in
cmp
std
push
or
rolb
arpl
fisttpl
fs
push
sub
pusha
xor
stos
sbb
push
dec
loopne
push
sbb
jmp
fiaddl
shrl
shll
jecxz
jle
push
adc
test
or
nop
jb
jo
imul
insl
or
fcmovnbe
sbb
mov
shrb
imul
ss
jmp
push
adc
adc
sar
loopne
clc
push
dec
or
mov
dec
loopne
jle
dec
mov
outsl
dec
push
pop
xchg
rclb
mov
and
movsb
or
aam
popf
jecxz
fmul
cmpsb
arpl
ss
jnp
xchg
dec
xorl
inc
std
inc
xchg
rcrb
leave
cli
xor
and
stc
mov
cmp
cmp
cmp
push
push
mov
movsb
ss
xchg
adc
lret
sbbl
les
mov
in
ret
loop
cmpsb
lcall
adc
cmp
add
test
push
or
aaa
cwtl
std
fisttpl
pop
pop
in
test
aaa
cltd
adc
cmp
mov
push
mov
fildll
mov
sub
fdivs
jno
cmpl
stc
stos
lret
sub
in
inc
aad
mov
push
jl
pop
mov
dec
scas
scas
mov
outsl
push
push
jb
adc
cmp
std
sub
in
js
mov
pop
xchg
jnp
arpl
xor
es
cmp
data16
pop
test
leave
cli
jne
sub
dec
int3
nop
mov
ljmp
nop
repz
sti
out
inc
or
cltd
inc
add
je
test
jno
bnd
mov
repz
add
adcl
add
fdivrs
xor
mov
mov
into
fadd
or
ret
in
in
xchg
fistps
dec
pop
les
or
out
and
lret
scas
inc
adc
int3
pop
lea
cmpsl
xchg
sti
std
mov
orb
adc
adc
popa
pop
repz
test
addr16
pop
mov
jge
push
jne
inc
ja
lahf
jg
xchg
jnp
fsts
xlat
mov
adc
inc
xchg
arpl
jno
pop
jl
stos
into
test
aad
lea
mov
add
sub
jle
adc
jge
ffree
or
dec
shll
not
mov
mov
fcmove
and
or
mov
xor
or
outsl
aam
lahf
jp
push
push
xchg
sbb
jecxz
jbe
sbb
jp
loope
adc
adc
dec
jle
xor
jbe
aaa
push
xor
pop
shll
push
leave
sbb
and
adc
dec
xchg
xorl
pop
and
subb
fwait
shrl
orb
movsl
lds
lods
sub
dec
inc
cmp
inc
jb
fcomps
mov
lret
insl
std
fdivs
stos
xor
mov
in
or
inc
jb
jns
inc
fcmovne
dec
fimuls
mov
add
jno
test
test
jo
leave
jnp
sub
sbb
sbbb
scas
xchg
and
fcomps
fs
aaa
add
xor
adc
stos
ds
mov
sub
call
jo
xor
pop
sbb
movmskps
lods
sbb
dec
xchg
pop
movaps
dec
inc
lahf
push
fisubrs
jne
mov
repnz
daa
push
ror
popf
xor
or
shlb
aam
ret
pushf
scas
loopne
xchg
sbb
int3
mov
xchg
mov
dec
jg
jne
fs
dec
inc
push
ret
ss
mov
add
cld
jno
jbe
lahf
adc
pop
mov
or
sub
jo
lock
pop
pop
sub
sbbb
mov
mov
push
mov
cmp
sbb
mov
test
pop
fidivrl
mov
push
dec
xchg
cmp
cs
sub
ret
inc
js
jmp
pop
loopne
out
sub
lods
fbstp
fmuls
jmp
in
mov
stc
fadd
js
sbb
mov
mov
jecxz
stos
mov
aad
je
cmpsl
jb
daa
inc
or
jno
jne
lret
in
pop
jne
cmp
and
fldenv
faddp
pop
lahf
inc
lret
push
fsubrl
pop
dec
xor
je
mov
leave
add
cmp
das
and
xor
or
test
iret
add
test
inc
cmp
adc
ret
push
sbb
lods
int3
pop
jecxz
cld
adc
sarb
and
adc
jl
imul
outsl
and
inc
gs
dec
aaa
pop
jae
dec
cmp
cwtl
icebp
shr
dec
jb
fnstsw
test
ret
shlb
push
out
setae
sbb
out
jns
mov
pop
or
pop
sbb
cmovnp
fwait
stc
mov
dec
xchg
loopne
or
std
jnp
sub
or
shrl
pop
imul
insb
orl
inc
sbbl
dec
ret
lret
mov
xchg
mov
call
mov
fsubs
fstpl
loopne
add
mov
out
inc
test
inc
push
addl
or
mov
jmp
leave
jne
push
push
mov
push
iret
dec
or
jg
inc
aam
inc
repnz
mov
dec
sub
jmp
mov
push
test
dec
or
dec
jge
dec
add
repz
mov
mov
push
popa
xlat
hlt
mov
dec
test
aam
idivb
xlat
xchg
fxch
and
aam
mov
mov
testl
data16
stc
adc
sbb
test
rcrl
fildll
sub
xor
fsubl
xor
mov
lock
out
add
or
mov
push
xchg
mov
movsb
mov
mov
les
ret
push
push
outsl
jg
xchg
pop
and
xchg
mov
push
push
and
movl
nop
pop
test
out
inc
mov
mov
inc
loop
or
data16
popa
fcmovu
xchg
lret
and
push
mov
incb
inc
out
clc
jp
mov
jns
push
fsin
inc
frstor
cmp
jns
push
cmp
in
sti
lods
sbb
xchg
loope
test
in
icebp
lea
and
add
and
mov
or
and
pcmpgtb
in
jae
or
call
jo
fidivrs
push
in
call
push
inc
xor
sbbb
pop
pop
sub
popa
fs
jns
push
xor
iret
cld
inc
xchg
xchg
push
aaa
cmp
dec
fwait
push
jmp
jns
cmp
sbb
xchg
push
ds
insl
sub
shll
rclb
ss
mov
testb
mov
js
test
push
xchg
sbb
adc
cmp
dec
adc
push
sbb
loope
jo
xchg
mov
aad
xchg
jnp
xchg
xchg
push
xlat
pop
stos
inc
push
aas
add
movsb
xchg
aas
aad
mov
sub
pop
in
xlat
mov
in
ljmp
adc
roll
sahf
call
sti
test
test
sbb
movups
arpl
dec
in
pop
pop
mov
pop
outsl
leave
pop
mov
ret
subb
mov
cmp
aad
jns
push
sahf
push
pop
nopl
mov
leave
shll
push
lcall
cmp
xor
ja
mov
mov
iret
in
jo
or
sub
push
stc
add
jae
ljmp
or
fcoms
lea
inc
arpl
push
add
xor
and
aam
les
aam
in
hlt
movsb
add
adc
and
xor
inc
adc
add
xor
and
aam
les
aam
in
hlt
movsb
add
and
inc
je
fs
push
add
xor
and
aam
les
in
xchg
les
push
dec
inc
jle
adc
inc
adc
add
xor
and
aam
outsb
push
hlt
mov
mov
pop
jnp
dec
or
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
mov
jb
bound
adc
push
and
jno
inc
ret
and
adc
icebp
jb
bound
xor
ret
xchg
loop
mov
adc
fld1
leave
adc
and
adc
jp
sub
sarl
js
xchg
push
icebp
add
sbb
push
cmp
push
dec
int
or
jmp
roll
popf
popw
dec
mov
pop
or
data16
cmp
mov
adc
xchg
ret
arpl
mov
adc
scas
sbb
popa
je
stos
data16
xor
inc
and
bound
xchg
scas
push
push
sbb
inc
or
bound
inc
dec
clc
fiadds
test
mov
icebp
and
xchg
repz
push
adc
mov
xor
add
pop
mov
pop
cmp
popa
inc
mov
xchg
mov
cli
and
loope
adc
and
icebp
mov
stos
add
shrb
pop
lock
fidivrs
scas
sub
or
movsb
push
mov
lds
cld
gs
push
aas
orl
je
loope
icebp
add
add
push
aad
fists
pop
aam
arpl
and
inc
fldl
jno
adc
mov
ret
mov
fstps
add
shlb
inc
repnz
loop
xchg
xor
loope
icebp
inc
shll
mov
xor
ret
push
loop
xchg
xor
loope
xor
ud1
jle
dec
push
xor
imul
inc
popa
insb
testl
jo
jl
ret
and
in
push
pop
popa
xor
pop
or
sbb
mov
leave
pop
jno
das
mov
sub
push
daa
fwait
push
xorl
nop
movsl
xchg
jge
call
mov
pop
mov
xchg
mov
xchg
xchg
clc
cmp
mov
xor
lahf
inc
pop
sbb
push
cmp
ds
jge
pop
lcall
dec
pop
pop
inc
aad
push
and
shrl
mov
cmpsb
data16
mov
inc
add
jbe
ja
cmpsb
mov
pop
push
mov
xor
sbb
cli
test
std
arpl
xchg
aas
ss
lcall
inc
dec
jp
stos
in
rol
xchg
xor
push
mov
or
pop
xchg
mov
adc
out
es
fstpt
dec
popf
jl
jmp
cmp
in
sbb
jae
mov
xchg
adc
test
inc
sahf
xor
jae
or
ja
into
mov
insl
popf
inc
add
adc
xchg
cs
stc
clc
cmp
or
pop
ljmp
cld
push
std
inc
testb
int
test
mov
in
dec
sub
addr16
inc
adc
inc
cmp
adc
push
repz
mov
pop
push
loop
call
pop
adcb
adc
xor
pop
add
filds
int3
aam
test
and
mov
xchg
cltd
sub
das
mov
push
adc
mov
sub
jl
push
sahf
jnp
adc
jecxz
adc
sbb
mov
lea
sbb
jnp
sub
out
sbb
mov
pop
lahf
add
enter
mov
clc
xor
sbb
leave
cltd
mov
or
mov
loope
xchg
stos
xchg
inc
inc
jo
mov
ja
stc
int3
adc
push
out
adc
push
mov
xchg
sbb
xchg
andl
hlt
mov
adc
rcll
leave
push
xchg
or
fs
inc
and
push
fcompl
mov
push
pusha
out
aad
cltd
and
mov
das
sbb
sti
imul
test
mov
repz
lock
add
aam
stos
das
jns
xchg
clc
pop
daa
push
mov
je
cmp
jno
stos
xor
loopne
das
mov
jno
filds
adc
add
xchg
fiaddl
sub
xchg
sbb
xor
negl
mov
rorb
inc
in
sub
dec
insl
mov
and
jbe
dec
lret
pop
je
fwait
sbb
cmpsb
and
mov
push
pop
insb
jo
sarb
sbb
jle
cmpsb
xchg
lock
xor
outsl
fsubp
add
je
mov
repz
cmp
bound
data16
push
mov
pushf
xor
bound
mov
xchg
mov
jb
jae
or
lahf
repnz
jo
and
cmp
out
mov
mov
mov
lock
aad
loop
xchg
stos
enter
fwait
scas
int3
xor
add
dec
mov
adc
mov
imul
sbb
mov
jg
sub
mov
sbb
push
int3
mov
cmp
ret
repz
ss
xor
fisubrl
add
stos
mov
push
fdivs
lcall
dec
mov
out
jmp
js
mov
mov
jg
mov
in
test
stos
pop
jmp
lahf
lods
imul
leave
dec
in
bound
movsl
ss
pop
movsb
nop
mov
test
cmpsl
pop
sub
pop
das
pop
adc
je
push
mov
repz
mov
and
cltd
int
sbb
rolb
xchg
sahf
push
popf
jo
adc
pop
test
xor
inc
movsl
loopne
movsl
adc
inc
xor
push
lods
jb
mov
inc
adc
les
stos
lds
inc
sarl
lods
jb
out
mov
xor
pop
jecxz
xor
dec
hlt
aam
aas
addl
popa
rcll
mov
and
adc
mov
or
jecxz
stc
fcoms
adc
pop
rcrl
es
ficoms
rclb
pop
std
xchg
mov
add
mov
sub
cmpsl
mov
push
stos
add
jns
push
push
les
adc
sbb
pop
jae
rcl
adc
mov
and
mov
lds
divl
sbb
nop
push
cmp
xor
out
sub
and
mov
jb
sbb
fstps
or
cmpsl
movsb
pop
jns
pop
add
fadds
jg
lods
cltd
imul
pop
jmp
jmp
fwait
mov
mov
gs
jbe
les
shrl
mov
pop
mov
add
and
pop
ja
xchg
jp
dec
mov
xor
push
cmp
inc
out
jnp
pop
xchg
les
and
xlat
inc
pop
dec
pushf
cmp
mov
push
pop
cs
xchg
push
icebp
sbb
jnp
jno
xlat
jnp
sub
mov
loopne
imul
inc
pop
xchg
orb
fxch
mov
ss
mov
mov
movsl
hlt
repz
sahf
ss
lahf
rorb
pushf
xlat
mov
ret
mov
xorb
sarb
loopne
push
clc
inc
xchg
push
push
adc
or
mov
fisttpll
sub
or
negb
arpl
jmp
jb
adc
push
cli
push
popa
lods
dec
les
jl
jg
out
jmp
xor
or
or
lods
inc
icebp
push
xchg
hlt
in
pusha
inc
out
jno
or
xchg
movsb
std
in
outsb
mov
daa
pop
je
sbb
hlt
cmp
sbb
dec
scas
cmp
decl
clc
cmp
out
sahf
xchg
sub
loop
and
jb
push
shrb
stos
in
adc
loop
out
or
imul
jno
cmp
sbb
cmp
adc
idiv
shll
repz
popa
fcomip
repz
dec
push
out
fsubrs
fnstsw
sahf
or
test
or
xor
adc
pop
and
jno
sar
fs
mov
xchg
imul
dec
push
lock
dec
mov
sub
lods
movsb
mov
mov
aaa
adc
cs
ss
inc
mov
cmp
repz
mov
add
dec
push
add
dec
and
pusha
jns
mov
imul
and
movsb
and
adc
in
and
push
in
adc
adc
jae
iret
lds
and
sbb
push
cmp
dec
es
push
mov
sub
push
shrl
je
cli
loop
add
fwait
out
mov
int
outsb
rorl
rcl
dec
mov
inc
mov
xchg
pop
inc
shr
shrb
addr16
les
xor
pop
sub
sub
push
scas
js
push
mov
push
scas
test
jnp
adc
pop
addl
cmpsl
inc
push
dec
movsl
pop
mov
push
inc
cmp
out
pop
push
into
jecxz
jns
cmp
cmpsl
inc
inc
cld
ror
ljmp
lahf
adc
inc
pop
pushl
arpl
lahf
mov
data16
xor
nop
fstpt
inc
sbb
sti
mov
movsl
pop
sub
stc
scas
shll
add
xchg
sub
or
mov
cmpsl
adc
popf
pusha
dec
add
aam
mov
es
in
cmpsb
pop
pop
pop
pushf
leave
imul
stc
sti
and
pop
and
lods
into
shrl
gs
sbb
into
sbb
and
jne
loop
mov
mov
sbb
pusha
add
dec
es
sub
lret
cwtl
cmp
sbb
adc
push
imul
cs
jl
cs
nop
or
jp
dec
dec
rol
roll
push
clc
pop
dec
sub
sbb
lret
fidivs
and
out
clc
icebp
data16
or
xchg
mov
std
jno
scas
inc
add
mov
mov
cmp
xchg
clc
push
and
daa
fwait
dec
mov
dec
leave
fistpll
outsb
das
leave
inc
dec
sbb
push
rcrl
or
in
xor
and
scas
mov
adc
in
mov
fsubr
clc
into
movsl
sbb
xchg
sahf
shrl
xlat
and
pusha
sub
and
inc
pop
push
mov
fwait
xchg
jp
mov
inc
mov
pop
aam
movsl
cmp
mov
arpl
flds
push
sbb
sub
aaa
jl
in
adc
test
and
lods
cmpsb
dec
inc
mov
fiadds
pop
stos
nop
sub
in
std
sub
and
jge
aas
sahf
je
jno
std
sbb
mov
sbb
mov
inc
add
mov
xor
test
das
inc
pop
pop
in
icebp
fxch
sub
jne
or
xor
dec
or
xchg
add
jmp
mov
lret
arpl
and
or
mov
shr
jne
cld
jne
data16
sti
std
cmpsb
ret
ds
add
inc
cmp
mov
sbb
into
xchg
out
or
jle
js
daa
rorb
stc
and
or
je
mov
stos
dec
fstpl
ds
insl
hlt
fadds
xor
push
mov
mov
inc
and
xchg
cltd
pop
or
shlb
cmp
dec
sbb
cwtl
pop
xor
dec
daa
fwait
xchg
add
inc
lods
pusha
ud1
addr16
mov
push
add
les
xor
push
out
xchg
dec
adc
loopne
xor
fwait
jle
fbld
mov
xor
cltd
inc
das
ljmp
rclb
loope
mov
adc
data16
roll
jl
pusha
aad
aad
js
push
ret
mov
jne
jp
xor
out
mov
mov
mov
and
stc
out
xchg
popf
mov
out
pop
lds
mov
mov
lods
mov
int3
lcall
add
or
cmp
ja
divb
insb
shrb
mov
fbld
jle
imul
xor
inc
inc
subb
mov
cmp
dec
testb
cwtl
mov
in
sub
xchg
fildll
add
xchg
xchg
pop
adcl
adc
movsl
sbb
test
xor
cmp
inc
xchg
in
or
sahf
inc
mov
loopne
stos
outsl
xor
push
add
mov
xchg
push
add
inc
lea
out
add
or
mov
xchg
repnz
adc
mov
cli
push
or
add
test
push
cltd
sub
int3
pop
xor
push
rep
sti
jns
nop
lods
xor
jb
loopne
mov
in
xor
mov
addr16
mov
dec
les
in
xchg
shrl
ds
add
adc
inc
xchg
in
dec
test
lcall
mov
xorl
imul
lds
data16
pop
mov
cmpsl
shrb
mov
or
xchg
or
movsb
mov
dec
cs
push
loop
shrl
stos
dec
movb
sbb
aad
dec
add
cld
or
andb
and
adc
xorb
sbb
ss
or
and
aaa
imul
shl
push
xor
movsb
sbb
movsl
add
pop
jl
or
fmull
and
or
pavgw
jp
pop
add
sbb
jae
insl
call
mov
and
jp
mov
mov
xchg
test
into
jo
movsl
push
mov
xchg
jmp
mov
push
nop
dec
insl
mov
lds
jmp
pushf
pop
sbb
cmp
pop
std
and
notb
push
lods
pop
jmp
hlt
inc
mov
clc
out
sub
push
inc
push
insb
sub
out
jo
mov
aam
ret
sarl
mov
add
pop
movsl
jae
fldcw
fnstenv
aaa
xchg
cmp
adc
aad
arpl
insl
fadd
sbb
push
mov
and
jle
cs
cmpsb
cmp
push
daa
push
add
je
out
jl
and
xor
add
test
xor
push
popa
fwait
mov
and
adc
mov
inc
out
mov
pop
insb
sub
bound
movsl
xlat
idiv
cmp
xchg
lcall
es
sub
jnp
fnstsw
dec
pop
loopne
jae
scas
addb
in
inc
add
sub
jno
jo
shrb
push
jle
cmc
push
lcall
adcl
cs
pop
add
and
in
pop
push
cmp
std
dec
jnp
xchg
test
pushf
std
dec
cltd
push
leave
mov
jbe
lret
imul
test
stc
outsl
je
jp
jo
inc
jg
sbb
shl
aaa
jne
pop
movb
data16
mov
jae
xor
not
data16
mov
dec
mov
addl
and
jl
push
ds
pop
loope
or
dec
pusha
lods
call
imul
adc
and
and
test
and
adc
push
lock
cld
adc
pushf
scas
mov
jp
pop
jl
push
xchg
lcall
mov
pop
fs
cmpsb
outsl
mov
xor
sbb
cli
nop
push
out
call
lret
movsl
rcr
int
je
mov
test
les
std
dec
es
stos
in
cmp
jb
rorb
pop
neg
inc
and
fcomp
push
call
mov
ficompl
nop
daa
or
xorl
sub
shrb
dec
dec
jg
mov
cld
xchg
sbb
jbe
mov
add
out
fs
test
inc
mov
daa
xchg
cmpb
jbe
dec
hlt
cmpsl
xchg
mov
mov
jo
int
cmc
loope
push
out
adc
subb
repz
cld
shrl
add
loop
bound
pusha
imul
test
bound
cmp
push
and
jle
cmc
sub
dec
fisubrl
jle
and
inc
adc
mov
cmp
and
xchg
cmp
xchg
push
push
push
fcomip
pop
cmc
dec
test
or
lahf
jecxz
movb
sub
push
js
adcb
mov
cmp
jge
xbegin
insb
lret
sar
inc
cmp
adc
repz
and
inc
add
push
xor
xorl
insb
jp
insl
or
jno
lret
push
sbb
pop
inc
pop
add
push
in
and
xchg
mov
popa
daa
outsl
repz
adc
push
fwait
mov
scas
fcomip
dec
adc
daa
cs
xor
adc
mov
call
sbb
lret
aad
ret
mov
jo
mov
mov
lret
lahf
adc
add
into
xchg
icebp
cmp
jecxz
dec
add
sbb
adc
push
das
ljmp
addr16
cmp
aad
enter
mov
in
jnp
std
lea
mov
repnz
sbb
out
sbb
or
mov
fwait
sbb
mov
sbb
hlt
pop
push
js
jo
filds
cmp
int3
xor
inc
mov
out
aaa
and
xorb
jmp
push
std
je
add
lods
sbb
orl
pushf
rorl
jp
xchg
rep
fnstsw
das
and
out
xchg
in
cmp
or
ljmp
popf
popf
push
rolb
jno
sbb
pop
imulb
jg
push
jns
dec
test
outsb
sub
shrb
pushf
js
jno
ret
add
jnp
fldlg2
push
mov
fsubl
das
xor
mov
outsl
lret
sub
mov
movb
movsb
loop
popf
xchg
ja
add
inc
call
notl
das
sbb
movsb
add
push
pop
xor
stc
lods
mov
xchg
mov
stc
jl
and
or
ret
sub
add
inc
xchg
push
add
xlat
xor
hlt
insl
fs
pushf
lods
cmp
jno
cmp
xchg
sbb
loope
sarl
xchg
leave
or
cmp
stc
jbe
add
push
lret
mov
cmpsl
in
shrb
jb
xor
pop
inc
add
jnp
mov
arpl
dec
bound
js
jg
test
lret
add
mov
mov
cld
in
mov
adc
shlb
sarb
test
pop
xor
jo
or
mov
test
shl
adc
dec
push
sti
push
aaa
int
cmp
out
push
bound
inc
loop
repz
testb
dec
dec
lret
test
out
imul
arpl
push
sub
lods
dec
rcrl
pushf
nop
xchg
jbe
ss
lds
sbb
pop
push
lahf
lock
inc
inc
dec
je
push
cmp
mov
fs
cmp
roll
mov
aam
sub
arpl
fcmovbe
fnstcw
mov
sub
nop
push
sbb
push
shrb
add
push
inc
adc
int
cld
fldcw
cmpsl
pop
push
mov
daa
inc
movsl
ret
fcomps
xlat
xor
shlb
repnz
jno
mov
push
aaa
push
and
pop
jl
fnstenv
push
sarl
inc
xchg
repz
or
mov
mov
fcompp
mov
push
sbb
xchg
cltd
jno
inc
pop
mov
mov
int3
ljmp
jns
sub
sbb
in
xchg
insb
addl
or
mov
mov
inc
cltd
je
mov
lret
lods
sbb
cld
stos
xor
mov
or
lret
sbb
push
lock
sub
fwait
pop
je
lods
ret
repz
ret
mov
mov
mov
mov
test
fs
mov
cmpsl
movsl
jmp
gs
sbb
lahf
mov
jecxz
mov
in
sbb
addl
mov
iret
repnz
jg
mov
aaa
stc
inc
jmp
lahf
ja
push
ret
les
fstps
outsb
dec
rclb
pop
sub
xlat
and
mov
pop
sahf
add
jno
or
xchg
negl
dec
xchg
xor
outsl
ljmp
cli
push
xor
aas
lcall
mov
adcb
test
sbb
ror
fildll
insl
jl
mov
push
mov
jl
fnsave
repnz
push
mov
and
loop
lcall
push
clc
pop
jg
dec
ljmp
fistl
mov
and
popf
push
scas
outsl
xor
xchg
dec
fwait
mov
mov
insl
cld
sub
shlb
push
inc
call
and
inc
insb
mov
in
out
mov
jne
jbe
daa
daa
mov
lock
mov
in
outsb
lahf
fiadds
ss
push
push
test
adc
mov
call
into
jne
or
insb
mov
inc
mov
out
andb
or
push
fidivs
jbe
sahf
inc
sub
inc
cli
negl
fistps
xorb
mov
xor
movsb
cmp
pushf
and
add
lea
sub
and
and
rcrl
mov
stos
leave
mov
lret
adc
pop
leave
repnz
test
mov
cmp
xorb
dec
movsb
fmuls
lret
fucomp
lods
inc
jbe
fisttpll
mov
inc
jle
test
lret
cwtl
cmp
mov
mov
fbld
cmp
mov
jb
adc
adc
iret
inc
sbb
push
ja
cmp
xchg
shll
ret
mov
push
leave
cmp
pop
fbstp
mov
sahf
push
ror
cli
lea
test
lahf
sbb
mov
xor
std
xor
jmp
mov
ss
fldt
or
cmp
rol
test
jnp
shrl
pop
gs
out
les
xchg
jno
mov
mov
fcmovnb
test
inc
push
cmc
es
lahf
lods
inc
bound
or
dec
inc
inc
nop
adc
out
sub
and
mov
shlb
push
ljmp
adc
pop
das
jg
scas
test
mov
sub
pop
or
adc
mull
enter
add
mov
add
pushf
bound
fistps
aaa
pusha
xchg
add
pop
jbe
shrl
lahf
push
daa
lret
jno
jne
mov
lock
cmp
dec
and
inc
push
lcall
push
inc
pop
ljmp
cltd
jmp
sqrtps
sbb
jno
add
lea
pop
fcomps
fisubl
bound
xor
ret
push
loop
xchg
xor
loope
icebp
inc
shll
mov
xor
ret
push
loop
xchg
xor
loope
icebp
dec
shrl
mov
ss
and
jno
inc
repnz
jmp
xchg
xor
inc
aad
lds
mov
mov
loop
sub
push
xchg
push
ljmp
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
hlt
add
mov
add
mov
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
das
cmc
add
sbb
add
adc
add
or
add
add
add
cld
hlt
add
hlt
hlt
add
in
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
cmc
add
push
cmc
add
pop
cmc
add
jo
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
call
testb
xor
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
test
add
mov
add
xchg
testb
pushf
testb
movsb
testb
lods
testb
mov
add
testb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
loopne
add
call
testb
or
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
shl
add
testl
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
clc
add
jl
add
je
add
insb
clc
add
fs
add
pop
clc
add
push
clc
add
dec
clc
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
test
add
mov
add
mov
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
dec
stc
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
in
add
in
stc
add
hlt
stc
add
cld
stc
add
add
add
or
add
adc
add
daa
cli
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
inc
cli
add
dec
cli
add
pop
cli
add
insb
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
