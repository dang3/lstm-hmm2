add
push
pushl
mov
call
movl
mov
pop
pop
ret
int3
int3
int3
int3
int3
ret
int3
int3
int3
int3
int3
xor
inc
ret
int3
int3
int3
int3
int3
xor
inc
ret
int3
int3
int3
int3
int3
xor
ret
int3
int3
int3
int3
int3
mov
push
mov
push
mov
mov
call
pushl
mov
call
push
push
pushl
call
xor
inc
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
push
xor
xor
test
jle
push
lea
push
mov
cmp
je
inc
add
cmp
jl
pop
pop
cmp
jl
xor
jmp
test
jle
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
call
inc
xor
test
mov
jle
lea
mov
inc
add
cmp
jl
pop
ret
int3
int3
int3
int3
int3
xor
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
test
pushl
pushl
jne
push
pushl
call
jmp
dec
push
call
pop
ret
int3
int3
int3
int3
int3
call
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
pushl
mov
pushl
mov
push
call
mov
mov
movzwl
movl
mov
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
push
push
mov
mov
push
call
mov
push
push
push
pushl
call
mov
push
call
mov
push
mov
call
neg
sbb
inc
push
push
push
call
in
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
call
pushl
call
jmp
mov
push
push
call
mov
call
mov
jmp
push
lea
push
push
pushl
call
xor
mov
push
push
push
push
pushl
call
pushl
mov
pushl
pushl
push
push
call
push
pushl
pushl
push
call
lea
push
call
pop
push
lea
push
push
push
push
call
push
lea
push
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
pop
jmp
call
push
mov
call
xor
leave
ret
mov
mov
push
mov
mov
push
mov
mov
mov
mov
mov
mov
add
add
mov
push
mov
pushl
add
mov
mov
mov
call
mov
call
mov
mov
mov
movzbl
movzbl
sub
je
addl
xor
mov
push
push
push
push
push
push
push
push
push
pushl
pushl
push
call
push
push
mov
call
pushl
call
push
pop
pop
pop
ret
push
mov
push
xor
push
push
movl
movl
movl
mov
movl
mov
mov
call
mov
mov
mov
push
push
movl
movl
mov
movl
call
push
push
mov
call
push
mov
call
pop
pop
ret
push
mov
sub
push
pushl
call
mov
movl
andb
mov
andb
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
pushl
movl
movl
movl
pushl
movl
call
add
test
jne
push
pop
jmp
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
push
lea
push
push
call
add
leave
ret
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
add
push
pushl
call
mov
mov
movzbl
mov
movzbl
sub
test
je
mov
add
mov
push
push
push
pushl
call
mov
sub
mov
add
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
movl
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
push
pushl
call
mov
pushl
pushl
pushl
push
push
call
add
pushl
call
cmpl
jb
mov
leave
ret
add
add
add
add
and
dec
add
add
add
pop
add
add
add
adc
iret
add
add
add
stos
add
add
and
add
inc
outsl
add
add
add
test
add
cmp
cmp
add
fbld
arpl
jle
imul
push
je
sbb
dec
outsb
add
push
out
aaa
add
inc
imul
inc
inc
cld
jnp
add
add
in
mov
jmp
pop
test
inc
lea
and
cld
adc
add
add
jne
push
hlt
leave
push
inc
cmp
cmpsb
xor
adc
or
enter
fadd
rcll
in
in
mov
sti
add
add
add
xor
add
add
add
adc
push
test
and
inc
mov
mov
add
inc
add
push
add
clc
adc
ljmp
popf
mov
incl
cmp
xor
adc
add
dec
add
test
push
lock
or
add
add
jge
movb
adc
or
xor
add
push
jb
je
js
outsl
fisubrs
je
add
inc
push
imul
gs
dec
inc
gs
stc
popa
popa
and
cmc
in
insb
addr16
push
add
addr16
outsl
dec
imul
inc
popa
push
push
arpl
add
add
push
add
add
add
add
add
add
add
add
lret
dec
pop
add
add
test
adc
imul
xor
bound
mov
jmp
jne
jbe
movl
ds
stos
stc
mov
mov
jecxz
sbb
in
pop
fstpt
fldt
cmpsb
stos
sti
adc
mov
cwtl
sub
mov
add
icebp
or
adc
mov
rcll
ss
fsubr
js
cmp
andb
and
mov
out
pusha
ret
push
je
scas
cmp
loope
pop
inc
xor
test
mov
je
mov
bnd
add
xchg
cmpsl
cltd
push
pop
jae
orb
int3
adc
std
scas
orl
sbb
jne
push
jmp
mov
nop
test
loopne
rcll
fldl
xorl
std
cmp
out
fidivs
sub
mov
or
insl
mov
test
lds
data16
inc
inc
pop
les
test
lcall
pop
popa
dec
int3
dec
xor
or
fs
jle
dec
mov
sub
scas
aaa
insl
mov
cmp
jo
sti
mov
pop
sub
inc
das
hlt
mov
dec
and
push
add
push
mov
pusha
adc
push
cli
fsubrs
ficompl
push
stos
cmc
inc
paddw
clc
insl
or
cmp
mov
lret
adc
adc
fldl
or
ret
in
push
adc
ss
in
aam
sub
rorb
out
xchg
dec
andl
popa
lds
pop
ja
aad
sar
jae
in
jl
fsubl
scas
mov
out
sbb
push
mov
xor
shlb
sub
int
in
sub
pushf
sbb
cmp
in
fsubrs
or
cmc
inc
add
push
inc
adc
or
add
in
scas
fcomip
and
cmc
lahf
cmp
mov
jp
mov
not
mov
cmp
mov
or
dec
lret
jmp
sub
cmp
lcall
xor
cmpsl
mov
mov
jo
xchg
cmp
arpl
mov
scas
stos
sub
jbe
test
popf
push
pop
imul
in
ret
into
int
rcrl
loope
shll
aaa
jle
dec
imul
dec
sub
int
dec
or
xlat
adc
add
int3
es
push
xchg
sbb
lods
fwait
ret
xchg
mov
adc
aas
push
cmp
out
xor
pop
and
cld
enter
and
jecxz
cs
xlat
fs
mov
dec
negl
inc
lret
dec
xor
dec
es
ja
cmp
sub
in
cmp
cli
xchg
inc
frstor
pop
cmpsl
inc
popa
inc
fs
push
fsubrl
fcoml
or
flds
es
cltd
lret
je
fs
stos
filds
stc
and
call
loopne
add
and
outsl
dec
add
and
cmpsl
stos
and
inc
out
or
pusha
sbb
push
pop
sarb
pop
scas
sbb
dec
and
aaa
xchg
pushl
aaa
mov
out
cmp
subb
andb
jbe
andl
andl
sbb
adc
jnp
pop
mov
cmpsl
nop
sbb
mov
mov
rclb
lahf
add
fistl
jmp
mov
pop
jae
push
leave
mov
roll
fdivs
jg
rcrb
cmc
gs
mov
ret
mov
ret
cmpsb
or
sbb
mov
adc
outsb
shll
xchg
xchg
jmp
lock
mov
std
inc
cmpsb
xchg
mov
push
mov
sti
rclb
jo
js
ss
lods
push
enter
xorl
cmp
or
xor
xchg
hlt
adc
cmp
inc
test
std
and
jmp
je
xor
inc
adc
mov
add
out
push
and
add
inc
arpl
arpl
xor
sbb
fldcw
bound
inc
daa
pop
add
sti
and
add
ret
cmp
sbb
loopne
sbb
inc
lret
or
sub
pop
scas
mov
sbb
mov
pop
rol
mov
sbb
mov
pushf
outsl
push
adc
dec
arpl
je
xlat
cli
lret
xchg
lock
mov
jb
popa
je
mov
les
jmp
xlat
mov
or
outsl
mov
idivb
and
imul
fldt
test
push
notb
adc
or
daa
sbb
xchg
xchg
pop
xchg
imul
scas
ljmp
fisubrl
mov
mov
cli
lret
cwtl
pop
pusha
pop
hlt
popf
iret
stc
or
sbb
xchg
mov
out
dec
sbb
push
stos
or
cmp
xchg
fadd
in
rcl
pop
int
fldcw
in
in
lret
push
dec
cmp
sbb
xor
sbb
pop
clc
fsubs
add
mov
adc
cmc
mov
iret
mov
out
inc
jne
test
sbb
and
xor
xor
mov
clc
in
cmp
lods
mov
fcmovnu
push
xchg
aas
arpl
testl
mov
and
xorl
push
pop
inc
xchg
popa
test
cmp
inc
push
mov
push
and
cmp
mov
rorl
and
mov
jp
xor
mov
sti
mov
js
mov
out
dec
xchg
dec
mov
cld
imul
cwtl
pop
xchg
stos
jnp
add
mov
push
xor
push
out
xor
cmp
lods
mov
inc
hlt
and
lret
loope
add
mov
add
jno
shrl
movb
jmp
imul
or
mov
add
test
jo
out
jnp
xor
enter
mov
xchg
jae
jne,pn
fisubs
mov
jmp
jbe
and
call
jno
pop
sub
xchg
leave
mov
std
or
push
ret
mov
call
inc
adc
aam
mov
cld
xchg
xchg
in
mov
pop
out
in
sarb
sub
les
int
fcoml
mov
cmp
add
movsb
scas
fsubs
or
add
sbb
mov
adc
pop
sti
das
test
dec
jp
in
pop
xor
jne
nop
xchg
imul
roll
jb
cmpsl
movsl
iret
out
lret
dec
inc
sub
cmp
out
push
sbb
mov
mov
or
movsb
popa
push
cmp
cmp
mov
mov
jnp
jge
jb
dec
add
scas
test
xchg
sub
cmp
sub
xor
shl
push
sbb
dec
movsl
sub
add
push
orl
fcmovb
dec
movsl
pop
sub
sub
out
sub
mov
add
stos
in
out
pop
ret
add
pop
push
sub
jbe
mov
sub
pop
mov
cmp
jg
xor
xchg
cltd
hlt
dec
xchg
mov
push
sub
xor
dec
ret
inc
lret
mov
adc
push
lds
gs
and
cmp
sub
jb
sti
inc
sbb
adc
movsb
dec
call
dec
jne
adc
push
adc
sbb
jecxz
insl
mov
ja
ljmp
icebp
or
pop
xchg
mov
cwtl
pushf
mov
fs
in
daa
cs
mov
jl
fmul
sahf
pop
orb
out
andl
or
sub
inc
cmp
cltd
cmp
aas
and
and
pusha
pop
adc
int
sbb
pop
imul
rcl
clc
lods
mov
popf
adc
adc
mov
pusha
sbb
xchg
dec
sahf
cs
dec
push
mov
scas
lods
inc
xlat
ret
insb
jmp
in
xor
out
lahf
loop
fcmovne
movsl
xor
movsb
pushf
inc
test
pop
and
imul
cmp
and
dec
dec
sahf
adc
xchg
dec
imul
mov
inc
add
imul
aas
lcall
pop
or
cmp
adc
sub
pop
jns
jno
mov
jno
outsl
rcl
jmp
ret
sub
aas
sbb
jp
cmp
mov
jnp
jle
mov
dec
mov
insl
xchg
pop
ficompl
push
sbb
sbb
cld
js
jbe
sbb
mov
dec
out
pop
pusha
inc
sahf
sub
test
clc
mov
mov
lock
les
dec
inc
pusha
stos
xchg
hlt
mov
xchg
dec
push
icebp
jle
pop
mov
cwtl
call
rclb
sub
xchg
mov
and
dec
leave
push
add
fs
fisubrs
push
in
int3
sbb
hlt
push
out
sub
mov
dec
pop
addr16
inc
inc
andl
rorb
cmc
mov
dec
popa
pop
fstps
push
mov
xchg
pop
jae
aam
popf
je
mov
lds
mov
sub
mov
adc
int
in
out
mov
loopne
cwtl
stc
fimuls
xor
out
movsl
movsl
pop
ss
in
cmc
or
stc
push
pop
in
in
loope
pop
test
mov
sbb
sub
sbb
rorb
push
test
cmp
pushf
or
inc
out
mov
jne
push
add
rorb
into
test
in
mov
inc
js
pop
stos
rol
lea
push
mov
ror
xchg
dec
dec
jno
mov
push
mov
mov
xchg
mov
cmp
shrb
push
mov
xor
jo
mov
lahf
ret
loopne
and
push
addr16
xor
xor
push
fs
or
fcom
scas
fimull
repz
int3
repz
push
hlt
arpl
out
sbb
shl
pop
pop
mov
stos
jecxz
xchg
daa
jmp
sti
outsl
decb
push
inc
adc
dec
push
mov
cmp
sub
imul
mov
xor
aad
xchg
fidivs
pop
or
pop
cmpsb
test
stos
leave
fisttps
sbb
pop
add
mov
jns
cli
nop
mov
loope
push
and
leave
sti
aad
mov
mov
mov
mov
popa
push
xchg
xchg
cld
xchg
test
imul
lret
hlt
mov
out
mov
rcll
mov
inc
insl
cmp
pop
stc
stos
fsts
push
ja
out
xchg
jae
jae,pn
mov
lret
pop
dec
sbb
pop
and
in
inc
mov
dec
in
ss
adc
iret
pop
xchg
inc
imul
test
mov
push
mov
dec
fadds
popf
jne
loopne
sbbb
mov
jnp
out
punpckhwd
push
jae
sub
in
mov
pop
lea
outsb
into
fwait
aad
dec
shrb
adc
cmp
cmp
mov
repnz
fsubrl
test
adc
imul
or
sub
mov
push
push
pop
mov
outsl
call
lock
shr
gs
jp
loope
add
jl
push
adc
js
fsubrl
xchg
test
shlb
insb
ror
sub
jno
push
mov
out
mov
xchg
data16
hlt
aas
call
and
shlb
call
int3
mov
cmp
sub
jp
mov
divb
lret
mov
lods
out
out
sub
pop
xlat
push
sbb
xchg
mov
add
or
daa
enter
sbb
imul
ffree
adc
and
xchg
loop
cli
xchg
cmp
test
jbe
add
and
inc
sahf
add
adc
or
mov
xchg
into
push
fdiv
dec
add
pop
lods
dec
aaa
shrl
inc
cmp
or
fsubr
mov
mov
fwait
popf
cld
int3
mov
in
xchg
dec
popf
mov
jg
hlt
push
mov
jno
insl
iret
and
mov
jo
cmp
add
jp
adc
mov
jge
sub
lret
or
mov
in
cld
xchg
in
xor
add
stos
addr16
inc
aas
hlt
xor
sbb
xchg
ljmp
lods
lods
sbb
jp
cmp
pop
dec
cs
pop
lret
comiss
push
pop
push
lret
xchg
inc
gs
or
add
fs
loop
outsl
std
xchg
add
push
out
lahf
xor
imulb
sbb
dec
inc
or
mov
and
adc
xor
imul
lods
mov
add
lods
sbb
fisttpl
sbb
gs
imul
or
pop
or
pop
inc
in
and
sbb
cmp
bound
bound
ds
dec
and
mov
sbb
clc
cmp
jo
mov
std
fidivl
in
xor
inc
pushl
jl
test
ret
lret
jno
cltd
out
jo
or
xor
and
das
jns
add
sarb
out
push
xchg
pop
pop
push
aas
jmp
jle
jo
int3
std
hlt
mov
xchg
es
cmc
repz
sub
push
rorb
adcl
roll
dec
ss
bound
sbb
or
mov
inc
test
xor
rcll
jnp
inc
sbb
in
dec
test
push
test
lahf
cmpsl
sahf
mov
loop
out
cmc
outsb
mov
jno
lahf
jecxz
pushl
out
jmp
adc
loope
in
jmp
dec
sub
adc
mov
mov
lcall
push
int3
and
mov
pop
loop
cmp
push
sub
int
jno
cmp
lahf
add
insl
push
pop
xchg
mov
je
xor
jmp
in
mov
xchg
jl
in
je
dec
shrb
or
push
in
rcrb
jno
fnstenv
inc
test
push
insb
jmp
mov
lret
dec
dec
mov
out
popf
stc
cmpsb
or
arpl
sub
mov
imul
mov
dec
jecxz
lds
fsubl
out
aaa
sarb
cmp
push
jae
sbbl
arpl
out
data16
add
push
cmpsb
dec
cmc
lods
mov
or
punpckhwd
fmulp
mov
lcall
dec
imul
lds
out
idiv
dec
lahf
sub
cmc
inc
jg
rcll
sub
divb
imul
jno
std
inc
aaa
shl
jp
dec
fistl
leave
or
lret
mov
sub
test
mov
push
mov
stos
mov
inc
cwtl
dec
xor
xchg
xchg
jecxz
pop
dec
sub
into
popa
adc
sbb
jo
ss
inc
fcoms
int3
negb
sbb
int3
movsl
xorb
les
lret
jae
mov
aas
fcompl
add
std
ret
sbb
fadd
shrl
sub
pop
push
sbb
add
xor
notb
and
xchg
or
std
pop
push
icebp
je
sbb
stc
imul
ja
adc
pop
xor
cmp
mov
push
pop
in
lret
jbe
push
lahf
movsb
sub
call
ret
or
mov
aad
aaa
sbb
ret
cmc
xor
xor
and
in
ljmp
cmc
mov
cmpsb
cmc
mov
push
cmp
nop
iret
shl
int3
mov
sbb
movsl
adc
lret
mov
xchg
in
movsl
pop
mov
hlt
mov
arpl
mov
jnp
cld
lock
push
inc
ljmp
ss
repnz
lret
imul
lock
pop
pop
loopne
mov
into
and
cs
loope
fiaddl
test
lret
xchg
call
mov
mov
cmpsl
sub
roll
jne
mov
std
jne
dec
cli
mov
xor
add
xchg
push
mov
jae
add
inc
aas
sbb
push
subb
mov
fstpt
add
clc
fstpl
js
mov
cmp
pop
out
out
repnz
icebp
push
mov
mov
mov
aas
loope
into
cmp
inc
push
sbb
inc
fsubrs
cmpsl
pop
shll
mov
add
push
dec
or
jecxz
shrl
sbb
es
iret
ret
push
dec
scas
xlat
push
daa
leave
jl
jg
into
and
xlat
xchg
popa
in
std
lret
popf
pop
fstpt
mov
push
jecxz
push
lods
jmp
out
das
add
jle
lret
addb
xor
imull
sub
pop
push
mov
pop
push
dec
adc
push
cmpl
jle
xor
psubusw
out
into
sahf
sbb
scas
mov
outsb
lock
stc
mov
lret
and
adc
icebp
jno
in
mov
cwtl
add
or
rcrb
movb
test
out
push
cwtl
in
out
imul
xlat
mov
xlat
jmp
mov
int3
mov
xor
inc
sahf
fldenv
push
pop
outsb
and
enter
xor
pop
mulb
cltd
add
xchg
addl
pop
xlat
xchg
mov
addl
movsl
adc
xor
jae
cwtl
jae
ret
sbb
bound
lret
fists
stos
pop
fstps
jae
xor
mov
push
cltd
or
lds
popa
addr16
pop
adc
mov
ss
clc
push
dec
call
mov
enter
fldl
lods
imul
cmp
push
pop
sub
sti
cmc
push
pop
push
fs
test
mov
test
push
jmp
or
int
adc
push
jp
sub
dec
mov
in
mov
push
fdivrs
mov
pop
idiv
or
xor
and
cmpsl
sti
scas
or
inc
inc
jne
add
aam
test
fldt
fldcw
or
mov
pop
das
mov
rclb
dec
push
jmp
push
inc
shlb
push
pop
push
sahf
int3
outsb
or
int3
insb
add
add
add
add
add
add
sbb
add
add
add
add
jmp
add
add
add
add
add
add
add
add
add
add
add
xor
nop
add
test
add
add
fadds
add
dec
add
add
adc
add
mov
adc
pop
add
and
add
adc
add
ljmp
ja
mov
dec
int3
int3
int3
int3
int3
int3
int3
int3
pop
lcall
pop
and
and
sub
add
adc
add
add
add
add
pop
pop
add
xor
mov
add
add
add
add
lret
stos
add
mov
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
jecxz
cmp
ljmp
imul
dec
je
mov
cmc
cld
fnstenv
sahf
add
mov
add
push
je
cld
mov
cld
cvtdq2ps
adc
mov
lock
mov
and
call
or
push
in
add
xchg
pop
ret
push
add
adc
add
rclb
test
adc
stos
inc
add
push
adc
add
shr
add
xor
push
incl
mov
push
cmp
loope
pushl
and
cld
cld
push
adc
or
add
stos
repnz
loopne
add
dec
add
jmp
cmp
repz
adc
adc
adc
inc
add
rolb
pop
add
pop
sbb
add
add
sbb
xor
sbb
sbb
sbb
sbb
sbb
add
sbb
add
fadds
fs
insl
outsb
add
je
add
and
push
add
add
add
add
insb
fs
insb
add
popa
inc
je
test
sbb
add
inc
xor
popa
add
jbe
add
add
mov
add
add
add
add
add
add
add
add
sbb
add
add
cmc
and
das
cmp
mov
xchg
or
gs
and
pop
xchg
sub
cmp
mov
clc
leave
lret
xchg
repz
mov
mov
aaa
push
mov
sub
pop
int
jl
mov
and
adc
sahf
les
or
pop
filds
sub
or
mov
adc
pop
movsl
movsl
mov
jl
adc
sub
shl
mov
and
mov
mov
fistpl
add
cmp
stos
incb
in
xchg
sub
xchg
loope
sbb
lahf
insl
xor
mov
pop
jnp
push
in
out
fimuls
add
dec
ja
push
dec
or
dec
pop
pop
dec
ss
shll
mov
sub
xor
je
jecxz
stos
ja
and
ret
push
jb
rcr
std
popl
mov
xchg
sbb
jg
aam
cmp
movsb
or
and
xchg
sub
test
stos
pop
fwait
mov
and
jle
xchg
push
jo
loop
mov
pop
outsl
lds
scas
inc
push
and
sub
insl
movsb
lcall
popf
sub
daa
inc
mov
mov
gs
xchg
jne
jle
push
fstps
ja
call
pop
inc
push
femms
cwtl
xchg
lods
fadds
mov
mov
clc
cmp
cmpsl
les
jle
pop
jle
sbb
and
in
les
mov
lds
ljmp
call
cmpsb
mov
rcrb
cltd
cli
ret
mov
pop
add
cltd
or
fimull
cwtl
fstps
test
push
push
mov
jb
aam
ror
pop
mov
sub
xor
mov
scas
push
rclb
pminub
pop
inc
ja
adcb
popf
push
inc
pop
cs
cmp
cmc
push
xchg
call
insl
je
pusha
pop
jno
mov
test
and
divl
call
and
jmp
rorb
push
and
adc
call
cmc
lods
jne
je
xchg
pushf
pop
sub
add
pop
push
pop
cmp
cs
arpl
int3
or
mov
sbb
dec
test
inc
cmc
and
imul
cmp
xor
adc
sbb
daa
mov
sub
and
lret
daa
pop
add
jnp
inc
sbb
subb
testb
pop
insl
in
or
sub
adc
cmp
mov
jb
push
mov
mov
or
in
sub
cs
jp
movsb
mov
lods
dec
cwtl
dec
lcall
xor
decl
enter
pop
cs
fcomip
jle
daa
incl
cmp
pop
ret
aad
jp
push
pop
in
rcrb
add
lods
inc
mov
mov
lea
push
ffreep
popa
movsl
adc
xor
scas
lahf
jp
push
lahf
jno
aaa
jnp
jecxz
adc
stos
pop
cmpsb
scas
mov
adc
fs
add
mov
jno
mov
lock
mov
test
stos
sti
push
lcall
jns
lock
pop
add
movsl
popf
sahf
sub
cmp
sub
in
sub
xchg
xchg
mov
test
xchg
popf
rdmsr
call
fbld
nop
inc
imul
jo
push
in
mov
inc
outsl
scas
pop
push
ret
sub
inc
add
xchg
cltd
jl
dec
lahf
add
call
pshufw
mov
mov
test
push
cmc
rcr
out
fidivrl
xor
xlat
addb
movhlps
outsl
adc
adc
or
cwtl
mov
push
rolb
fidivs
jmp
push
shll
lcall
pop
inc
pusha
cmp
fisubrl
or
push
orl
xorl
pop
sub
push
repz
in
adc
add
gs
ljmp
aaa
push
aad
fistpll
mov
pop
repnz
loop
pusha
pop
movsb
adc
inc
mov
rep
or
notb
or
ljmp
ds
sub
lret
jp
test
popf
or
ror
lods
lods
aam
rol
add
adc
imul
mov
push
push
and
pop
sbb
and
daa
jno
rclb
or
loop
pop
mov
sub
jmp
sub
aad
shl
int3
popa
mov
test
and
out
into
xchg
in
fldcw
lods
lcall
jb
pop
aas
inc
cmp
pop
add
cmpb
ret
push
mov
jp
ficoml
xor
jmp
int
shlb
in
sahf
pop
iret
in
movsl
fwait
xchg
and
xor
fdivrl
sarb
orb
decl
and
inc
mov
mov
outsl
ja
aam
xchg
jo
mov
or
pop
xchg
jp
sbb
dec
adc
idivl
fcoms
adc
sbb
sbb
movsl
popa
mov
int3
repz
ss
imul
adc
lea
icebp
adc
std
push
mov
fiaddl
lds
add
adc
nop
test
adc
sub
push
xchg
cmp
pop
jne
sbb
jmp
or
mov
out
xor
stos
or
pushf
sbb
sahf
push
stc
imul
gs
push
jb
hlt
mov
imul
out
add
xchg
fs
shrb
aad
adc
jle
pop
xlat
rcl
sbb
bound
push
insb
dec
inc
push
clc
outsl
in
insl
mov
pop
inc
adc
push
xor
loope
mov
rcl
mov
gs
lods
rcr
icebp
and
test
mov
xchg
jnp
inc
jp
scas
fsubl
or
jae
addl
rorb
ja
inc
in
sub
sbb
pop
ficompl
jbe
outsb
xor
cmpsb
inc
xchg
daa
xor
xor
dec
hlt
xor
sti
sbb
sbb
adc
in
fs
dec
or
sbb
insb
push
pop
in
push
jne
fmuls
outsl
mov
and
es
xor
or
mov
xchg
sbb
pop
lahf
mov
xor
loop
mov
xchg
inc
and
push
ret
rorl
fistpll
lcall
jle
pop
push
call
into
inc
aad
add
rcll
sti
cli
frstor
loopne
xchg
mov
mov
imul
adc
fnop
lea
sbb
ficomps
repnz
pop
mov
mov
pop
mov
mov
imul
imul
pop
imul
cmpsl
fdivs
sub
inc
bound
mov
pop
mov
jae
test
mov
mov
cmpsl
adc
repnz
mov
sbb
jno
xchg
aad
in
ret
xor
inc
das
pop
mov
xchg
out
loopne
int3
dec
inc
add
inc
int
data16
cmp
imul
inc
mov
lds
push
in
mov
dec
movsl
aad
xchg
adc
inc
insb
sbb
add
cmpsl
and
pop
inc
push
fldcw
mov
xchg
xchg
outsb
push
pop
mov
imul
cmp
sbb
adc
jae
xlat
insl
mov
inc
xchg
xchg
jmp
repnz
jb
pushf
das
adc
std
add
jmp
outsb
xchg
cmpsl
inc
cwtl
mov
jnp
les
push
rol
lods
xor
xchg
jns
sbb
inc
shll
fwait
or
pop
dec
in
insl
sbb
sub
jp
mov
dec
sbb
ret
xor
pop
hlt
aam
movsl
mov
fists
pop
xor
pop
pop
cmp
xor
test
adc
test
jp
sub
arpl
out
lret
imul
and
mov
xchg
add
xchg
pop
inc
out
stos
fwait
push
pop
push
aad
mov
inc
rcr
pop
sub
push
sub
rorb
and
or
ds
mov
fimull
adc
add
and
inc
fwait
roll
sbb
lock
xchg
mov
jle
out
mov
aaa
and
rolb
dec
shll
mov
mov
and
xchg
lret
insl
arpl
xchg
mov
call
pop
xchg
pop
adc
mov
out
nop
pop
xchg
dec
pop
jae
adc
fbld
inc
cmc
jmp
push
call
in
cmp
arpl
pop
jno
insl
or
nop
lock
decb
cmp
cmp
mov
mov
ss
xchg
arpl
push
cmp
movhps
mov
int3
clc
inc
sbb
fs
mov
outsl
pop
fmulp
jmp
aaa
pop
call
arpl
out
inc
mov
leave
mov
add
loop
xlat
push
dec
in
or
xor
sti
imul
ds
mov
mov
in
jns
outsb
shl
push
and
scas
lea
sub
jg
vmwrite
pop
xlat
popf
xchg
pop
jmp
or
addr16
lret
fwait
ret
pusha
sub
pop
add
sub
mov
inc
stc
and
mov
xchg
andb
sub
imul
aam
lods
in
push
or
in
in
loop
imul
scas
lock
outsb
ds
popf
pop
out
jl
mov
hlt
pusha
int
je
mov
sub
mov
pop
stos
mov
cmp
out
fwait
jo
test
test
mov
das
mov
inc
mov
fisubrl
pop
or
out
push
jecxz
dec
sub
cmp
and
pop
sbb
mov
jg
cmp
adc
cmpsl
xchg
or
xchg
jmp
inc
into
sbb
and
adc
out
sbb
sub
lret
ljmp
ret
push
mov
popa
idivb
outsl
and
sbb
shrb
fisubrs
fsubrs
jmp
xor
ret
mov
and
sub
sbb
pop
pop
lods
cmpsl
aas
sbb
inc
push
scas
insl
mov
in
mov
cmp
mov
cmpsl
and
mov
or
mov
inc
push
xor
gs
je
ja
cmpsl
pushf
loop
adc
jl
addb
pop
xor
in
inc
cmpsl
adc
sarb
mov
mov
push
jb
sub
je
add
das
jg
push
pop
fistpl
out
shrl
xchg
or
lahf
adc
les
pop
mov
inc
sbb
and
pusha
mov
test
shll
or
pop
jl
mov
fs
aam
es
sub
jle
mov
ficoms
push
in
jnp
dec
insl
dec
adc
addr16
lret
popf
push
xchg
mov
filds
lea
mov
dec
nopl
ds
adc
out
test
adc
mov
lret
push
repz
fwait
lods
inc
push
shr
sbb
jo
lahf
fmul
inc
push
inc
dec
sbb
mov
popa
aam
inc
scas
fs
dec
jmp
or
adc
xor
gs
sarb
out
xor
into
iret
adc
nop
fdivs
sbb
int
pop
shrl
into
pop
add
rcll
outsb
xor
pop
push
les
and
push
or
pop
push
movsb
fdivrs
mov
push
mov
push
xchg
fdivl
adc
mov
pop
fmull
pop
popf
scas
test
adc
xchg
cmp
imul
push
mov
mov
nopl
shr
xchg
movsb
xchg
jae
movsb
pusha
mov
dec
push
xchg
loop
rol
pop
push
lcall
push
and
adc
notl
xchg
pop
int
jp
xchg
jnp
push
lock
mov
sbb
push
arpl
in
and
sub
ss
loopne
cmp
or
leave
repz
jmp
imul
loopne
je
andl
push
mov
aam
xorl
and
adc
enter
inc
fisubrl
mov
in
fwait
xchg
sti
and
loope
pop
cmp
dec
loope
and
cs
xchg
dec
out
sbb
imul
mov
popf
js
push
idiv
xchg
ljmp
imul
rorb
addr16
into
inc
inc
lock
dec
dec
sbb
push
adc
mov
pop
je
iret
mov
dec
cmp
ja
push
push
cmp
adc
mov
inc
mov
and
scas
sarl
std
scas
sub
pop
pusha
push
addb
sub
jecxz
mov
aas
push
inc
push
std
inc
push
shlb
or
cmpb
ja
pop
mov
test
aam
xchg
pop
mov
xchg
out
xchg
xchg
sbb
pop
std
daa
int3
mov
sti
cltd
and
lret
sub
rcrl
dec
loop
and
pop
push
mov
roll
adc
xor
inc
pop
or
push
popf
dec
and
fs
sbb
ds
repnz
scas
sbb
into
movsb
adc
jae
jo
adc
out
sub
mov
out
mov
sbb
insb
xchg
in
imul
cmpsl
lcall
clc
jl
cld
xchg
sub
in
out
imul
mov
cmpsl
lock
popf
aaa
lea
fnstsw
in
jge
test
cld
mov
or
xor
testl
inc
cmpsb
cltd
xchg
cmp
jae
shll
lock
mov
cmp
mov
push
xlat
outsb
jmp
mov
aam
scas
xchg
dec
or
sub
std
jnp
test
dec
jbe,pt
insl
push
and
ja
sub
fstpl
addr16
lock
push
pusha
sub
incb
inc
mov
mov
sub
xchg
gs
sub
push
lahf
or
in
aam
scas
cmp
insb
jne
cmp
stos
sub
ja
lahf
stos
mov
pusha
jae
fildll
push
mov
sbb
enter
jo
and
daa
mov
mov
popl
sti
dec
cli
sbb
inc
cmp
xchg
push
sub
xchg
push
sub
pop
test
push
fs
jne
inc
neg
lds
repnz
call
mov
dec
or
lods
imul
mov
stos
jbe
xchg
iret
sbb
lods
mov
enter
sub
sti
dec
or
jmp
and
cli
push
jae
push
mov
xor
shll
pop
pop
into
not
lods
popf
jnp
inc
icebp
lods
or
fldenv
mov
mov
shll
outsb
xchg
inc
mov
cmp
pop
or
pop
sub
shlb
or
mov
dec
frstor
hlt
leave
int
adc
pop
shrl
pop
mov
ret
mov
push
lods
add
rolb
adc
mov
movsl
xor
out
push
mov
repz
rcrl
mov
mov
pop
jne
outsb
or
xor
pop
pop
and
addr16
ret
xor
jb
xor
and
xlat
cmp
addr16
push
adc
pusha
jge
sub
mov
mov
cmp
lods
jb
andb
aad
stos
adc
dec
inc
ljmp
sub
jno
testb
jge
stc
test
mov
mov
scas
xchg
out
test
xchg
xchg
cmc
imul
jnp
pop
pop
data16
push
push
mov
and
pop
lret
cmp
cmp
xor
inc
lcall
xchg
test
push
dec
mov
imulb
popf
int
or
adc
mov
aam
push
addb
cmp
outsl
nop
mov
inc
ret
xchg
inc
and
jno
add
inc
in
push
sbb
xchg
sub
inc
mov
pop
loop
ret
stos
xchg
dec
out
movsb
imul
mov
push
jmp
inc
fs
arpl
out
add
mov
add
sti
dec
or
imul
adc
cltd
pusha
adc
addr16
shlb
mov
movsb
mov
and
addl
fldcw
dec
bound
mov
adc
rcl
shl
jmp
or
sub
xchg
scas
xchg
dec
jmp
xchg
aam
ret
frstor
cmc
or
arpl
cmpsl
add
ret
adc
push
push
mov
xchg
fs
call
cli
sbb
shll
call
jle
mov
fwait
jmp
lock
pop
and
imul
and
jne
and
and
pop
inc
cwtl
cmc
jae
dec
mov
outsl
jb
add
fildll
pushf
dec
stc
and
fstpt
dec
mov
loope
cmp
lea
xor
fistl
mov
lcall
jl
insl
mov
add
lea
outsb
inc
in
pop
pop
lret
sub
jne
pop
arpl
lret
mov
and
mov
rclb
sub
xlat
test
sbb
in
aam
push
fsubrs
rcrb
cld
test
or
ss
loop
pop
cmpsl
fsubs
in
mov
add
jno
fbstp
xor
inc
adc
test
sub
dec
dec
dec
push
orb
inc
mov
mov
aad
jecxz
jg
cltd
mov
cltd
ljmp
cmpsl
sub
in
and
rcr
arpl
inc
mov
sub
or
adcb
ja
dec
sbb
imul
sub
xor
dec
out
sub
test
jmp
pop
mov
jl
les
stc
xor
inc
and
shll
cmc
ret
add
aas
dec
clc
pusha
scas
pop
les
dec
out
jmp
cmp
inc
pushl
fldl
inc
xorb
add
mov
mov
xor
jmp
fs
mov
mov
push
and
xor
pop
xchg
cmp
scas
xchg
stos
pop
aaa
mov
fs
push
sub
jp
jo
jbe
mov
xorl
lea
inc
clc
mov
mov
add
jbe
cmp
fwait
clc
mov
mov
cltd
mov
in
inc
cmc
imul
jmp
and
cli
out
inc
imul
cmp
mov
adc
out
or
faddl
add
add
add
add
insb
sbb
add
add
mov
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
xor
lcall
add
stos
stos
add
ja
mov
dec
int3
int3
int3
int3
int3
int3
int3
int3
add
add
add
mov
mov
outsl
outsl
jb
or
add
add
add
add
add
add
add
add
add
rolb
add
add
adc
add
push
push
add
add
add
add
sbb
sbb
sbb
sbb
sbb
sbb
sbb
repnz
test
add
js
add
pop
jb
add
add
add
push
push
movl
add
sahf
jmp
test
movl
ret
incl
sub
xchg
roll
int3
lea
adc
add
push
ljmp
inc
insb
add
shr
std
lcall
add
scas
rolb
add
leave
sbb
add
sbb
fildl
insb
xor
push
decl
loopne
decl
mov
adc
add
push
add
lock
add
call
call
data16
stc
pushl
repz
loopne
jne
add
push
add
push
movl
add
add
add
add
add
add
jno
add
add
add
sbb
sbb
add
outsl
gs
imul
dec
add
gs
je
cmp
popa
gs
add
outsl
add
outsl
add
insb
dec
add
mov
jne
popa
inc
outsl
add
imul
push
out
insb
push
insb
push
add
add
adc
add
add
add
add
mov
add
add
add
addl
add
add
icebp
das
dec
mov
int3
xlat
sbb
xor
mov
jo
mov
outsb
fwait
sahf
and
sbb
xor
cmc
xor
push
out
hlt
orb
fcmovbe
add
addb
xchg
inc
sub
and
cli
cmc
cmpsb
or
cmp
or
cmp
sub
jg
dec
aaa
testl
jle
jmp
filds
push
xchg
or
pop
mov
int
xor
cmpsb
test
arpl
push
push
ret
add
mov
and
daa
int3
clc
leave
pop
movsl
jmp
test
call
sbb
xor
mov
push
test
or
pop
add
sahf
loopne
stos
cmp
sub
cmp
or
orb
pop
cmpsb
sub
or
mov
fs
loope
outsb
ret
jb
sbb
movsb
popf
scas
dec
pop
leave
jecxz
test
imulb
fcmovb
mov
test
xlat
in
inc
mov
pusha
and
fbstp
pop
xor
scas
xor
jae
jbe
sbb
je
cmp
pmullw
and
push
mov
dec
push
add
in
add
mov
mov
jo
rcrb
or
mov
push
stos
mov
or
fwait
push
and
outsl
loop
stc
out
sbb
imul
ljmp
jecxz
mov
pop
push
in
dec
loope
loop
test
jmp
mov
pop
mov
or
pop
leave
test
gs
or
lret
cmp
sub
js
adc
inc
popa
sub
testb
or
xor
ja
pop
addl
es
xor
shrl
pop
mov
icebp
mov
in
lcall
jno
rcrl
cltd
and
push
popa
xor
cmp
mov
lods
iret
push
and
cli
push
sub
loope
lahf
sbb
pop
jle
ljmp
sarl
xchg
ss
pop
xchg
insl
fwait
imul
cmp
or
mov
add
mov
jmp
mov
lahf
out
sub
fwait
push
jae
in
xchg
adc
add
add
mov
pushf
xchg
fnstsw
out
jg
imul
cli
ret
into
lcall
fwait
or
test
nop
lods
and
pop
sbb
cmpsb
cwtl
cmp
mov
mov
ret
mov
mov
shll
jge
out
pop
pop
xor
std
popf
sti
and
mov
das
xchg
adcb
sub
mov
fisttpl
inc
jno
sahf
dec
shrb
fdivs
daa
pop
fdivs
rorl
cmp
dec
adc
into
pop
mov
xchg
imul
or
ljmp
or
mov
push
test
inc
cmp
sub
mov
jb
sbb
or
shrb
mov
lcall
sarb
pop
xchg
or
leave
mov
or
add
pusha
push
inc
jmp
mov
or
push
ret
push
add
and
push
ret
xorb
cmpsb
subb
mov
xor
mov
xchg
inc
repz
popf
nop
or
stos
bound
dec
das
mov
mov
mov
jecxz
ss
add
test
fsubp
loope
jmp
fmulp
cmpsb
pop
xchg
mov
adc
repz
mov
jmp
jge
iret
jl
out
insb
test
sub
outsl
shll
in
xor
dec
lods
push
shrl
jbe
sarb
cs
jno
rcrb
mov
pop
incb
pop
bound
pop
push
imul
pop
lret
sub
bswap
sti
push
rorl
inc
push
and
mov
mov
add
sub
imul
cmp
add
pop
mov
int
mov
inc
repnz
lahf
stos
inc
nop
cwtl
subl
ret
icebp
push
inc
push
addr16
je
jns
or
pop
jne
push
jge
or
adcl
stos
and
bndldx
sub
dec
inc
cmp
sbb
mov
xchg
mov
pop
add
add
imul
rclb
add
cmpsb
cmp
add
mov
and
aam
ret
jmp
sub
scas
add
xchg
cmc
cmp
dec
mov
inc
daa
ds
fld
mov
add
and
jb
jae
jns
or
or
mov
stos
jl
stos
pop
out
push
push
push
mov
dec
cmp
add
kaddw
jns
cmp
mov
jbe
jae
mov
dec
or
xchg
std
xor
add
add
insl
inc
sub
pop
pop
and
dec
dec
mov
mov
jbe
in
ja
pusha
lret
inc
stos
cld
or
cmpsb
call
icebp
shlb
add
lock
into
popf
loope
cltd
mov
sbb
inc
aaa
aam
imul
pop
adc
xor
inc
popf
divl
push
cmp
dec
repz
push
js
and
popa
dec
out
jae
fwait
add
dec
cmp
idivb
xchg
aam
mov
nopl
jbe
mov
mov
lcall
addb
cmp
sbb
xor
lret
dec
mov
movsb
mov
out
mov
test
fsts
mov
cmpsl
imul
cmp
xchg
lret
jge
fcomip
jle
adc
jae
push
scas
test
mov
imul
mov
xchg
or
inc
xor
push
shlb
lea
and
or
mov
adc
sbb
repz
mov
insl
data16
ljmp
push
rep
fidivs
xchg
das
es
imul
xchg
fnsave
pushf
aaa
push
xchg
or
hlt
xor
cmp
cld
mov
jno
roll
aad
dec
xor
mov
aad
and
xor
sbb
mov
xor
movsb
jl
addr16
cmpsl
and
movsl
push
mov
out
or
mov
push
push
dec
lds
mov
dec
bnd
mov
sbb
inc
fildl
popf
jecxz
push
je
out
aam
ret
fists
mov
in
pop
xor
out
jg
shl
cwtl
or
bound
out
pop
fcmovu
sbb
enter
push
cmp
jg
cmp
cmp
lcall
in
pop
xchg
sub
arpl
lret
add
push
in
mov
jl
mov
sub
sti
jo
jns
movsl
shrl
test
je
mov
pop
fcmove
cwtl
add
cmp
stos
inc
dec
gs
cltd
rcrb
jo
mov
loope
pop
lods
mov
dec
out
stc
lret
sahf
lods
dec
pop
sbb
lahf
mov
pusha
dec
movsb
lret
cmp
bound
ja
mulb
jmp
push
jne
std
sbb
and
dec
xchg
xchg
leave
push
stos
and
sub
inc
imul
push
scas
stos
shrl
aam
pushf
pop
and
mov
cmc
xor
jmp
and
xchg
add
cmp
pushf
icebp
lcall
adc
sbb
movsl
mov
popa
fmuls
jle
xor
cmp
mov
clc
daa
cmp
adc
je
ds
jge
stos
sub
in
test
xchg
xchg
fildl
cwtl
cs
jle
mov
out
add
rolb
sbb
shlb
loopne
fxch
ss
loope
mov
or
inc
insl
mov
stc
xchg
sarl
fwait
adc
or
push
imul
ja
or
lods
xchg
pop
rcrb
in
dec
fadd
jns
mov
mov
aad
aad
pop
push
adc
sbb
and
ror
lret
mov
jl
sbb
push
test
add
addb
stos
add
in
jae
xchg
aaa
fucomp
jne
sub
arpl
gs
int
test
sbb
shlb
jnp
out
lds
cs
test
xchg
jmp
movsb
arpl
loopne
xor
inc
aam
jge
rcl
push
std
and
cld
addr16
mov
pop
test
mov
outsl
jnp
sub
push
inc
sbb
adc
idivb
in
dec
sub
sti
mov
push
or
pushf
inc
jae
call
sub
xor
lahf
and
mov
lds
jno
lret
and
ds
pop
sub
jb
add
leave
push
push
push
jbe
adc
insb
mov
sub
cmp
into
ficoml
mov
jle
hlt
xchg
jmp
xor
cmp
dec
jg
lea
mov
jmp
bound
jno
cmp
xchg
mov
aas
aas
xchg
adc
cmpsl
dec
jb
hlt
xor
mov
cmp
xor
mov
xchg
in
scas
push
mov
dec
sbb
aad
sbb
aad
loopne
inc
cwtl
sbbb
sbb
cmpsb
inc
lret
adcl
cmp
test
popf
pop
mov
jmp
stos
shrb
mov
sti
mov
adc
mov
inc
hlt
test
idivb
pop
push
push
out
loop
jns
cmpsl
lcall
and
repnz
and
fsub
sub
sub
adc
adc
sbb
adc
dec
dec
into
test
out
ja
stos
push
rclb
sti
out
loopne
lret
sbb
in
cmp
decl
jns
out
fnstsw
sbb
dec
jg
sarb
insb
xchg
pop
shrl
dec
fadds
and
dec
inc
sbb
push
jg
out
imul
dec
jo
lret
and
xchg
xor
iret
inc
dec
xchg
loope
aam
xchg
sbb
testl
aad
add
loop
cmp
je
in
mov
mov
push
jmp
dec
jae
jge
mov
xor
pop
push
push
inc
mov
xlat
out
test
addb
jle
push
inc
fimuls
adc
mov
repnz
add
cmc
test
dec
or
das
jno
mov
push
push
movsb
adc
es
andl
xchg
adc
sub
pop
sbb
xor
dec
dec
outsl
xchg
les
mov
sub
inc
sub
sbb
movl
lods
pop
arpl
repz
je
test
fidivs
stos
push
xchg
sub
aam
mov
or
shlb
mov
dec
mov
adc
inc
pop
test
fstp
xchg
dec
mov
sub
mov
data16
or
mulb
jae
fstps
and
data16
or
mov
mov
inc
ja
cltd
xchg
pop
cli
sub
sbb
inc
mov
dec
push
xor
imul
pop
dec
and
call
jmp
ret
jp
pop
outsb
sti
std
mov
das
std
pop
shlb
adc
inc
imul
and
inc
out
out
or
mov
inc
jae
lods
dec
pop
clc
daa
jcxz
and
mov
mov
mov
daa
pop
decb
mov
pop
fcom
pop
sbbl
imul
push
pop
ljmp
xchg
sub
mov
fiadds
sbb
pop
jmp
fcompl
imul
mov
push
jl
cmp
gs
es
ds
jge
mov
xor
scas
loope
inc
pop
dec
dec
dec
pushf
xchg
dec
andl
stos
pusha
lea
mov
int
je
mov
cltd
xor
insl
pop
sub
or
nop
cmp
in
fwait
repnz
add
cmpl
jnp
pop
mov
inc
lahf
sub
insb
lret
and
sub
xlat
out
js
icebp
std
xor
scas
ss
mov
jge
xchg
test
clc
and
dec
dec
fisttpl
lock
sbb
jnp
cmp
mov
sub
mov
xor
jp
mov
sti
outsl
mov
nop
lret
incb
pop
ljmp
xchg
rcll
out
mov
test
xchg
cmp
mov
sbb
jl
sbb
push
sbb
outsb
stc
add
sbb
jno
orb
in
test
int
daa
fildll
cwtl
push
or
movsb
in
mov
add
pop
mov
sub
cmpsl
sbb
int
inc
or
add
loop
mov
sarb
push
aaa
pop
add
pop
sbb
mov
jmp
sub
les
xor
ja
pop
jl
or
jnp
sub
es
xor
test
dec
lcall
cmp
sbb
pop
dec
mov
pop
and
push
stos
inc
jns
adc
mov
pop
mov
ss
jp
fidivs
bnd
xor
test
das
push
je
pop
shll
mov
pop
xchg
mov
jbe
leave
xor
xor
std
mov
inc
lods
push
xor
psllw
cmp
test
xchg
xchg
je
jo
loope
and
aam
push
shrl
cmc
or
pop
outsb
shll
xchg
bound
dec
lcall
or
out
mov
adc
mov
cld
movaps
movsl
cmp
xchg
push
mov
dec
inc
and
push
push
ja
push
or
mov
mov
ret
pop
mov
icebp
imul
hlt
add
push
xchg
rclb
mov
inc
xchg
and
lahf
jnp
mov
scas
hlt
mov
inc
push
sub
test
mov
xchg
push
or
mov
cmp
xchg
jecxz
push
and
repnz
bound
push
divb
sbb
add
cltd
adc
js
pop
add
scas
hlt
adc
loop
mov
dec
sub
sbbb
and
or
adc
in
imul
fsub
cmp
cmc
sbb
stc
insl
xchg
or
push
mov
cmp
sub
and
push
lahf
push
pop
loop
jnp
das
fimuls
or
xchg
xchg
outsl
test
dec
in
jecxz
adc
jo
sti
in
dec
adc
les
dec
mov
mov
std
shlb
cmp
sbb
dec
fcmovnbe
xchg
jne
xor
fisttpl
push
adc
test
pop
clc
aam
cmpsl
cmc
mov
push
inc
pop
aas
aam
mov
int3
mov
jp
xchg
mov
push
push
adc
xchg
jmp
and
mov
iret
inc
xchg
sbb
fldl
imul
jb
mov
pop
xchg
and
adc
mov
call
sub
fldenv
jbe
sarb
shlb
sub
mov
push
inc
add
aas
arpl
loopne
and
mov
sbb
pop
sti
les
inc
sub
or
subl
adc
nop
je
das
xor
cld
aad
or
pop
adc
mov
or
aaa
mov
stos
lods
inc
mov
out
adc
sub
jl
dec
enter
pop
push
dec
inc
scas
out
push
inc
repnz
add
rol
data16
mov
arpl
xor
mov
fucomip
pop
rclb
out
xchg
inc
fwait
pop
jle
jp
jmp
lcall
inc
ja
add
mov
cs
sbb
xchg
sub
and
imul
cwtl
les
add
and
movl
mov
iret
xchg
pop
bsr
mov
mov
inc
gs
adc
mov
popl
and
pusha
cmpsl
xor
push
dec
xor
dec
cld
mov
ret
add
ror
mov
in
pop
mov
xor
inc
enter
push
add
bound
cwtl
dec
pop
and
inc
inc
mov
sub
movsl
out
jnp
adc
test
fstpt
stos
or
and
test
fimuls
xchg
sub
cmp
inc
loop
gs
push
push
dec
pop
clc
inc
ret
stc
push
or
pop
cmp
pop
push
pop
movsb
mov
mov
fildll
mov
xor
push
dec
ja
xor
and
shll
jg
scas
push
jle
xor
ja
mov
push
mov
mov
xchg
clc
inc
test
fldl
inc
lahf
stos
pop
mov
inc
test
mov
adc
stc
cltd
lds
out
mov
popf
imul
insl
adc
push
and
mov
rcr
ret
fs
aam
stc
fistl
or
jle
loope
jg
imul
cmp
call
sub
push
pop
push
push
ret
fnsave
xor
pop
repz
dec
scas
jo
inc
mov
cmp
orb
add
arpl
mov
sub
cs
mov
adc
add
fnsave
mov
dec
lcall
mov
in
rcr
cli
ljmp
fs
and
ja
addr16
lahf
aas
into
pop
adc
adc
xor
mov
pop
and
in
push
mov
jg
shlb
jbe
and
push
or
js
mov
ret
fucomp
addl
jo
jno
in
pusha
out
stos
pop
mov
loopne
and
xor
jnp
xchg
fiaddl
dec
loope
pop
sbb
daa
jp
adc
in
fdivrs
mov
inc
int3
mov
sbb
enter
mov
mov
mov
mov
cmp
test
test
cli
popf
bound
inc
test
hlt
xchg
sbb
adc
mov
mov
mov
mov
jne
mov
mov
mov
out
push
jbe
mov
popa
nop
stos
xor
fstpl
pop
fstpl
addr16
cmpsb
pop
lock
insb
les
rclb
imul
pop
inc
sbb
cmpsb
rol
incb
dec
cmp
add
xchg
loope
scas
movsl
sbb
pop
cmp
and
mov
adc
xchg
push
adc
pop
rdmsr
or
mov
nop
pop
test
out
in
xchg
xchg
jo
or
and
xchg
test
jp
popf
fdivrs
test
mov
add
test
aas
or
adcl
imul
dec
mov
mov
shl
pop
pop
inc
adc
add
add
roll
add
add
repnz
xor
add
add
add
add
add
add
mov
add
adc
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
rolb
add
add
lret
stos
add
ja
mov
dec
int3
int3
int3
int3
int3
int3
int3
int3
add
add
fsubl
jb
outsb
and
and
les
sub
add
add
add
add
add
add
xor
add
add
add
add
add
shrb
add
add
movb
add
movb
add
add
roll
and
insb
popa
add
push
outsl
add
outsb
fs
inc
and
gs
jnp
shll
js
shr
fadds
push
incl
pop
je
call
std
std
leave
test
call
adc
lea
push
jne
mov
je
mov
pop
pop
add
push
adc
pop
sar
repz
aam
add
add
add
push
add
test
and
ljmp
jmp
lea
loopne
loopne
lcall
add
add
cld
call
loopne
lock
push
adc
std
pushl
dec
repnz
push
push
lock
call
leave
push
push
subb
add
add
adc
add
add
add
add
add
cmp
out
add
add
inc
add
cli
imul
add
inc
gs
movsl
js
add
outsl
arpl
gs
gs
gs
insb
add
xor
add
add
data16
gs
gs
loopne
insb
insb
insb
dec
dec
add
add
add
add
add
icebp
add
inc
add
add
add
popa
add
add
add
add
xchg
add
out
mov
scas
cmp
int3
sub
fcmovu
pushf
pop
sti
mov
mov
das
xor
gs
stos
jle
out
lret
push
stc
jns
cmp
cmc
adc
push
fsts
js
pop
cmp
shll
dec
pop
xchg
mov
xor
xor
and
mov
sub
push
mov
sarl
outsb
sahf
or
je
data16
sub
adc
ficoms
scas
fdivp
mov
lret
shll
dec
ffreep
in
mov
sahf
negb
fcomp
add
in
lcall
repz
or
lods
test
shll
mov
es
ficoml
fcomp
mov
rclb
lret
loope
jbe
imul
aas
push
mov
jae
cld
daa
add
and
xor
lea
les
out
fwait
data16
mov
fsubrp
cmc
add
sbb
int
cmp
sub
lcall
xchg
lods
push
hlt
add
cmp
mov
and
inc
adc
cmp
pop
or
push
ljmp
jl
rcrl
cltd
mov
xchg
test
ljmp
jl
lahf
addr16
jbe
cmp
je
xor
lahf
rolb
cmp
sub
bound
push
lock
in
adc
mov
fstpt
outsl
setnp
movsl
roll
outsl
adc
cmp
cmp
pusha
test
pop
test
or
cmp
sarb
int3
fidivrl
test
cmp
push
pop
mov
pop
out
rorl
ljmp
xor
popa
leave
add
scas
xor
pusha
mov
push
mov
adc
leave
lret
xor
aad
out
clc
pop
hlt
mov
out
shrb
nop
add
aam
inc
and
dec
pushf
or
push
and
adc
cmc
call
cmpsb
into
xchg
adc
shrl
sub
js
outsb
aam
fldl
insl
and
sub
fstpt
int3
cmpsb
inc
das
sub
mov
out
hlt
pushf
addr16
out
sti
jbe
cmp
clc
rolb
push
mov
enter
pop
es
xor
and
outsb
sahf
xchg
mov
jno
cmp
xchg
sub
popf
inc
cmp
jge
xor
push
icebp
adc
outsl
outsb
aad
or
dec
jbe
jecxz
imul
popf
cmp
push
ret
lret
ljmp
ljmp
pop
andb
fbstp
cs
and
in
subl
or
hlt
cld
sub
push
mov
lcall
xchg
mov
cwtl
jge
and
jl
pop
adc
jns
xor
test
shrb
xchg
andb
sub
and
push
adc
les
nop
add
mov
arpl
loopne
in
xchg
xchg
lret
jecxz
sub
mov
jno
roll
sub
enter
imul
fisttps
adc
add
xchg
addl
add
jo
mov
jg
pop
std
push
inc
jle
dec
aaa
and
mov
or
iret
test
ja
int
mov
mov
ret
sbb
mov
cmp
daa
cmp
test
xor
inc
xchg
aas
in
in
iret
rcr
or
imul
aad
test
mov
mov
xchg
fwait
ss
in
cs
sub
in
outsl
call
iret
in
lock
mov
call
movsl
sbb
mov
imul
push
imul
mov
or
subb
xchg
sti
leave
scas
aas
leave
and
dec
adc
inc
aam
lock
mov
out
push
or
test
aaa
pop
jb
pop
jp
dec
lahf
mov
cmp
xchg
aas
cmp
out
push
xchg
xor
sub
sqrtps
popa
out
cmp
out
notl
push
sahf
shrb
or
xchg
pop
hlt
mov
jbe
mov
pop
jbe
in
mov
mov
jbe
sub
push
xor
call
inc
mov
int
push
loopne
mov
shll
aam
in
bnd
imull
shr
ret
out
mov
sti
inc
daa
and
sbb
jae
pushf
enter
push
out
inc
cmp
fwait
dec
cwtl
mov
stos
jae
push
inc
or
cmp
add
fistps
bound
inc
pop
and
imull
mov
bound
cli
test
sarl
iret
mov
cld
jge
add
xchg
aaa
addr16
nop
ljmp
push
bound
test
cmpsl
mov
sti
mov
clc
data16
rcl
dec
sub
loopne
push
xchg
fst
lcall
frstor
dec
scas
dec
roll
push
cmp
std
and
popf
mulb
jge
or
cmp
dec
fildl
inc
xlat
repz
test
dec
daa
out
pop
ja
mov
adc
jae
out
sbbl
gs
pop
ror
movsb
jbe
mov
jle
cli
ret
pushf
ret
sbb
fs
ljmp
pop
jo
dec
sub
xor
out
hlt
rorb
xchg
dec
fists
push
cwtl
mov
and
hlt
es
lds
pop
ret
fdivrl
push
jmp
and
jle
xor
idivb
cltd
mov
fistpl
fidivrs
pushf
pop
xlat
cs
stos
es
enter
push
mov
fld
xor
adc
sbb
jge
fwait
or
dec
into
mov
fldl
xor
push
mov
sar
sub
and
arpl
xchg
mov
xor
cmc
fdivl
mov
inc
in
inc
stos
cmp
sbb
repz
jmp
xor
mov
inc
sahf
pop
cld
call
dec
or
in
or
add
mov
cmp
dec
pop
pop
test
jae
lea
sbb
js
and
sub
sub
popf
cmpsl
in
cli
and
mov
inc
adcl
stc
rep
hlt
xchg
pop
loope
jb
push
test
popa
add
cmpsl
push
fldenv
adc
add
push
and
popa
xchg
and
int
or
das
push
xchg
ja
dec
sub
push
inc
xchg
fadds
scas
scas
inc
dec
repz
mov
mov
arpl
test
rol
test
fdivl
sbb
aas
add
icebp
int
icebp
pop
xchg
sub
mov
push
jp
outsb
and
xchg
mov
hlt
cmc
pop
push
jo
jmp
and
insl
int
out
shll
pop
xlat
out
or
test
mov
mov
mov
mov
movsl
mul
mov
mov
mov
and
jle
push
sub
xchg
lahf
push
movsb
cmp
add
inc
out
mov
mov
mov
icebp
fdivrl
or
movsl
aam
cli
movsl
mov
lods
sbb
and
in
pop
sub
mov
jg
cwtl
inc
xchg
or
nop
adc
pop
or
jbe
lds
das
or
and
sbb
scas
ja
mov
das
push
cmp
rcll
ret
loope
insb
sbb
mov
dec
mov
cltd
adc
loope
imul
sbb
js
mov
pop
xor
dec
rorl
ds
pop
or
mov
fwait
pop
lcall
push
xchg
or
cmp
mov
xor
mov
ret
push
testl
mov
xchg
bound
and
mov
hlt
push
lcall
push
cltd
lret
dec
jmp
cmpsb
adc
add
pop
push
mov
or
mov
add
pop
sub
inc
int3
pop
cld
lock
cmp
cmp
data16
add
or
fisttpl
int
xchg
push
mov
jmp
pop
xchg
in
iret
sbb
cmpsb
andl
mov
mov
jl
idivl
cli
insb
inc
and
test
xchg
fwait
sbb
mov
pop
aas
pushf
inc
mov
leave
sbb
mov
mov
push
arpl
nop
sbb
xlat
inc
cmp
outsb
pop
cmc
es
shll
and
inc
xchg
inc
icebp
ret
and
mov
repnz
outsl
add
mov
aaa
adc
lods
arpl
mov
je
aam
mov
and
call
int
insl
mov
xor
shlb
lea
call
stos
xchg
xor
inc
js
in
add
iret
les
cwtl
fstl
pop
mov
std
add
and
out
adc
mov
lcall
mov
ror
lahf
fdivrl
clc
lahf
cmp
jmp
mov
test
dec
insl
sbb
insb
idivl
test
jns
xchg
or
popl
lods
in
dec
addr16
xor
lea
or
pop
adc
add
popf
mov
popa
ret
mov
pop
mov
icebp
or
fs
popa
pop
xlat
jae
sub
inc
xor
int3
add
cmp
stc
mov
adc
and
lahf
mov
lds
pop
inc
mov
mov
sub
mov
jge
xchg
jo
fstpt
inc
rcrl
jne,pn
ss
stos
and
cmp
xlat
and
imul
daa
push
inc
sbb
fiaddl
test
adc
iret
cmp
xor
and
mov
iret
stc
jp
out
hlt
lcall
pop
lret
nop
add
sbb
stc
cmpsb
imull
adcl
add
insb
mov
push
mov
adc
ss
int
call
mov
js
jg
mov
cmp
in
adc
jb
lret
loopne
pop
in
inc
out
leave
nop
std
insl
nop
push
sub
fidivs
xchg
pusha
call
lea
jae
inc
scas
fdiv
cli
jmp
cmpb
sahf
pop
pop
in
in
and
mov
stc
clc
jns
dec
stos
dec
xor
pop
dec
add
add
xchg
popf
incl
push
in
and
push
add
mov
mov
pop
mov
arpl
add
iret
outsl
adc
jno
aad
xor
adc
fcoms
dec
loopne
out
dec
cmp
aaa
mov
and
jns
xchg
lods
fbld
xlat
shlb
or
xlat
out
xor
insb
xor
out
jle
adc
xor
push
add
stos
jg
lods
sbb
pop
std
adc
sub
mov
das
ljmp
dec
push
or
fs
sbb
mov
jno
rcl
jnp
arpl
sbb
rcrl
repz
cli
jecxz
push
xchg
fcomps
jg
bswap
scas
repnz
or
and
int
cmpsb
adc
mul
sub
fsub
ds
cmp
adc
iret
mov
xchg
mov
ficomps
and
iret
ja
cmc
mov
adc
fsubl
sbb
sub
dec
xchg
int
xchg
push
out
mov
or
into
xchg
xor
lcall
mov
shll
arpl
adc
xor
xchg
movsl
xchg
push
dec
sbbb
mov
sarb
lahf
and
add
push
push
cmp
fildl
mov
in
repnz
pop
rolb
inc
imul
lods
lahf
mov
jle
in
cs
icebp
lahf
adc
gs
fwait
insl
loop
lahf
test
push
add
push
ret
inc
xchg
jmp
out
pop
adc
idiv
mov
ret
pop
pusha
fs
mov
cmp
jbe
mov
pop
inc
inc
out
lahf
cli
and
mov
sti
xor
sbb
add
jne
jl
push
pop
or
call
popa
test
xchg
aaa
ds
sub
pop
in
and
cmp
int
push
and
dec
dec
rolb
inc
aas
jnp
jae
cmp
inc
lret
mov
mov
jne,pn
pop
jle
popa
lock
adc
mov
dec
out
or
jne
xchg
xchg
pop
fistl
xchg
in
mov
push
test
mov
scas
xchg
adc
pause
int
mov
or
scas
pop
push
test
cmp
bound
xor
lret
cmpsl
lret
jne
sbb
or
hlt
imul
fsubl
and
mov
lods
xlat
adc
es
pop
andb
out
in
pop
iret
addl
call
sbb
pop
test
pop
pop
sbbl
fistl
cwtl
lods
cmp
insb
pop
or
imul
jbe
cmp
mov
cwtl
movsb
cmp
ret
jecxz
xor
mov
and
rclb
push
xor
dec
xor
xor
lret
mov
sbbl
pop
jle
push
mov
jge
xchg
in
movswl
test
pop
jnp
sbb
ljmp
xchg
add
or
fidivs
mov
jl
orl
imul
pop
inc
xlat
cmp
ret
push
and
jae
ljmp
or
adc
dec
mov
nop
xor
mov
mov
inc
pop
sarb
pop
fists
xor
xchg
dec
mov
in
popf
int
pop
insl
sarl
sti
fidivs
out
adc
sbb
inc
push
dec
adcl
mov
mov
and
outsl
cwtl
std
imul
icebp
jno
xor
inc
add
nop
push
add
xor
gs
sub
gs
scas
insl
cmpsb
cmp
aam
lods
clc
dec
cmp
sub
jg
in
lds
and
arpl
pop
roll
push
ljmp
dec
repz
fdivr
and
inc
sbb
and
xchg
js
ror
push
adcl
inc
mov
daa
jl
add
stos
xchg
insl
and
jbe
pop
fwait
into
cltd
sbb
loop
in
or
stos
test
mov
jnp
dec
mov
in
aas
pusha
jmp
repz
jmp
movb
scas
adc
xlat
xchg
xchg
jo
pop
jnp
cwtl
jecxz
xchg
jle
push
dec
lods
inc
dec
rolb
icebp
call
insb
xor
lea
int
xchg
mov
pushf
mov
pop
stos
xor
pop
pop
push
dec
lahf
inc
in
lods
jg
push
and
repnz
mov
mov
xchg
ret
push
sub
push
push
shrb
leave
les
lds
mov
mov
jb
mov
pusha
fsubl
and
xchg
cmp
les
stos
and
jmp
stos
in
push
jl
fwait
mov
add
push
ja
ret
fiadds
fs
push
mov
hlt
jbe
xchg
jle
fwait
sahf
sub
in
inc
cs
xor
pop
or
mov
inc
popa
add
sub
das
mov
mov
jle
xchg
fnsave
xor
mov
loop
pop
or
in
stos
cs
sbb
stos
and
sbb
pushf
sahf
addr16
push
pop
sbb
inc
outsl
mov
xchg
and
xor
adc
xchg
dec
ds
or
enter
cli
add
sar
je
insl
orb
mov
iret
mov
imul
push
mov
adc
cmpsb
leave
loopne
mov
pop
xlat
mov
mov
mov
inc
sar
movsl
mov
pop
sub
jne
das
pop
cmp
shrl
lret
lock
pop
jmp
jo
stos
add
or
in
jp
test
pusha
retw
mov
cmp
adc
imul
xchg
insb
mov
adc
nop
mov
cs
into
lcall
mov
cwtl
in
loop
pop
adc
sub
or
xchg
add
fdivr
sti
mov
data16
dec
je
xorb
sub
leave
mov
into
cmp
mov
fildll
jp
mov
inc
test
insb
mov
sbb
pop
inc
pop
repz
adcb
loopne
sbbl
repnz
mov
xor
cltd
out
call
mov
xchg
shlb
and
pop
aam
mov
repnz
clc
popf
ret
inc
jmp
loop
repnz
stos
test
pop
sub
movsb
shll
out
sub
aam
mov
fiadds
jae
es
ret
xor
mov
inc
inc
dec
out
xlat
test
enter
lret
filds
bound
dec
cmp
add
adc
pop
jo
arpl
mov
cmp
stos
add
adc
popa
mov
out
and
sbb
dec
lret
aas
jg
and
inc
xchg
or
ss
push
call
sbb
adcb
xchg
call
int
jge
or
push
mov
push
and
cmp
ss
stc
sub
scas
push
clc
add
int3
sbb
test
mov
iret
sti
push
fsubl
push
out
dec
scas
jmp
sbb
cld
loop
out
push
nop
notb
sub
bound
inc
mov
inc
lock
cmpsl
fs
orl
adc
xchg
jnp
mov
pusha
inc
outsl
adc
stos
mov
loope
and
ljmp
xor
mov
loopne
cs
das
test
dec
cmp
inc
insb
sahf
out
push
inc
test
cmp
stos
xor
test
add
mov
lahf
jge
sbb
jae
push
roll
adc
xor
addr16
push
xchg
dec
shl
mov
fstl
xchg
aaa
adc
jb
mov
fstps
into
xchg
outsl
mov
leave
les
xchg
push
jb
lods
mov
inc
popf
daa
shll
mov
mov
repz
cwtl
and
mov
and
mov
inc
cli
push
je
out
roll
fisttpl
mov
xorb
xchg
lcall
xchg
jp
push
clc
mov
bound
sbb
pusha
daa
mov
imul
es
fidivrs
inc
push
repz
sti
pop
stos
sub
jbe
int3
or
jbe
shrb
xchg
fldcw
cmp
jle
popf
jae
movsb
sub
arpl
push
rcrl
jp
cld
rorb
lahf
loop
or
std
rolb
sbb
test
xor
out
cmp
test
in
mov
lret
dec
mov
sub
pushf
test
call
push
inc
ficomps
or
outsl
cmpsb
mov
popf
imul
xchg
mov
pop
call
mov
ljmp
into
ret
mov
mov
add
add
add
add
roll
add
add
add
add
add
add
add
add
icebp
add
inc
add
push
sbbb
add
add
imul
addb
aaa
add
add
or
or
in
in
inc
add
add
add
add
addb
add
add
jo
jo
sarl
int3
int3
int3
int3
int3
int3
int3
int3
int3
nop
add
add
add
stos
mov
push
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
lret
add
add
lcall
add
add
add
jnp
add
add
jmp
add
add
imul
add
jp
mov
and
sti
add
jecxz
sbb
pop
lldt
pop
xchg
fcoms
mov
push
or
incl
clc
inc
decl
mov
lea
std
sar
repnz
cld
test
popa
insb
add
mov
add
push
push
add
sarb
inc
add
incl
add
add
adc
add
loopne
add
xor
call
push
adc
or
popf
cld
imul
or
add
add
pop
jne
push
cld
stos
xor
push
push
clc
test
jae
add
add
lret
movb
aas
lea
je
lret
adc
add
add
add
jp
add
add
add
add
inc
je
inc
shrl
inc
inc
outsl
mov
gs
insb
mov
outsl
outsb
outsb
je
dec
jns
stc
je
pop
inc
dec
dec
je
dec
push
gs
jmp
inc
insl
insb
ret
insb
dec
outsl
jae
push
jne
outsb
jbe
je,pn
je
je
insb
add
add
add
fiaddl
add
add
dec
sub
add
add
add
add
add
shll
lahf
gs
aad
xor
adc
loopne
jg
inc
adc
into
sub
sub
daa
rorl
xchg
in
sti
xchg
rcrl
pop
lahf
adc
pop
stc
jmp
push
outsl
aaa
mov
xor
jb
push
testl
stos
idivl
mov
push
xchg
test
hlt
insb
mov
adc
sbb
sbb
add
jg
pop
test
lret
fistl
rcll
xchg
outsl
jns
xchg
shrb
cmpl
movsb
adcb
mov
adc
fcomi
int3
sbb
mov
pop
lahf
sti
push
cmp
cmpsl
and
das
rcll
mov
sbb
inc
int
out
mull
xchg
push
rcr
out
movsl
inc
cwtl
cltd
xchg
or
pusha
xchg
xor
xor
repz
xchg
nop
dec
gs
bound
rol
in
sbb
popf
cli
dec
mov
mov
bound
testl
cmp
rcrb
je
jnp
movsb
shl
add
nop
inc
adc
repnz
jle
pop
data16
adc
in
popa
loopne
jns
cs
pop
imul
es
retw
lret
jg
jns
pop
adc
enter
add
popa
sub
add
or
sti
jp
loopne
pusha
icebp
jno
lret
sbbb
push
aas
push
jg
pop
xchg
pop
push
ds
test
sub
dec
and
mov
mov
jnp
lods
xchg
test
adc
jecxz
push
lock
scas
movsb
pop
mov
mov
orl
scas
adc
lods
push
dec
sub
pushl
insl
xor
push
out
mov
repz
int3
and
das
mov
filds
in
mov
enter
fs
and
dec
rclb
into
mov
adc
popl
incl
or
movsb
sub
cwtl
test
out
cmp
ljmp
negb
int
testb
cmpsb
mov
sub
std
outsl
mov
xchg
subb
lahf
and
push
cltd
cmp
push
mov
mov
cmp
mov
and
pop
fidivl
std
adc
fsubr
loopne
push
push
pop
out
lret
ret
cmp
stos
adc
pop
dec
adc
insb
sub
push
pusha
push
mov
inc
ljmp
mov
dec
or
xchg
inc
mov
lods
into
xor
mov
xchg
es
cld
add
cs
cwtl
pop
negl
push
push
sub
sub
dec
je
ror
xchg
daa
xor
adc
xchg
out
mov
in
jp
push
push
mov
fbstp
pop
int3
mov
paddusb
je
int
sbb
cltd
adc
dec
fildl
jecxz
mov
out
sub
and
jmp
add
mov
nop
dec
cwtl
lock
add
dec
enter
mov
cmpb
insb
pop
xor
bound
test
sti
scas
sub
sub
xchg
ss
xchg
lock
mov
jne
test
das
les
call
pop
leave
fsubl
lock
sub
cmp
sbb
cmpsl
or
les
lcall
aas
hlt
aaa
xchg
fnstcw
jmp
push
xchg
push
cmp
pop
xor
mov
scas
out
jno
fldcw
dec
js,pn
ret
pop
dec
cld
pop
xor
out
xchg
jge
dec
sub
push
sub
xor
sub
outsl
cmpl
cmp
and
aas
cltd
call
push
xlat
out
loop
es
jb
adc
jp
cs
daa
fbld
jge
jb
mov
sahf
insl
je
sub
prefetch
or
sbb
clc
dec
or
pop
xchg
pop
xchg
dec
insb
cmp
and
outsb
lea
or
jno
lods
aad
es
repnz
sub
adc
cmp
cmc
popf
xor
insl
mov
or
cmp
sbb
jmp
repz
pop
arpl
lret
pop
xchg
cmp
int3
cmc
cmp
pusha
andb
dec
dec
adc
cmp
sahf
push
push
dec
mov
cmp
lret
loop
test
cwtl
pop
pop
push
xor
dec
mov
cltd
inc
cmp
shrl
push
cs
adc
inc
jl
xchg
rcrl
push
pop
aaa
sbb
int3
dec
popf
mov
dec
sub
or
in
jno
inc
or
sub
jnp
pop
bound
fs
dec
enter
xor
out
movsb
mov
int3
test
or
bound
cmp
int3
mov
outsb
out
mov
aas
adc
mov
push
push
xchg
dec
jns
aam
fsub
lea
or
shrl
pop
push
jae
inc
ja
divb
mov
dec
adc
test
ja
scas
mov
mov
or
or
jb
cld
mov
xchg
xor
fdivs
xchg
loope
adc
push
add
xor
add
sti
loope
fst
movsl
push
cmpl
push
pop
mov
bound
imull
in
sbb
mov
sub
mov
sub
scas
cmp
mov
adc
ja
inc
and
and
inc
or
pop
push
or
jl
ret
jns
lcall
idivb
stos
pop
cltd
xor
pop
or
inc
xchg
test
and
mov
sub
mov
jbe
lods
and
mov
sub
js
mov
lahf
call
ror
jo
lcall
stos
sbb
push
jbe
push
sub
shll
ds
mov
mov
dec
sub
in
and
scas
sub
push
jge
or
cli
shrb
push
mov
test
ja
lret
arpl
jl
rcrb
push
mov
test
adcl
popa
dec
inc
mov
jbe
test
pop
insb
test
std
mov
mov
or
mov
lock
jmp
mov
or
lret
sti
xlat
inc
cs
fwait
das
xchg
in
jecxz
or
std
mov
sub
in
or
add
fdivs
fistps
adc
neg
inc
fdivs
stc
scas
jns
sub
cltd
push
push
cmp
dec
mov
xchg
mov
fs
std
cmp
aam
or
push
in
pop
cmp
and
ficoml
mov
negl
fstl
shrb
leave
cmp
xor
mul
out
loope
adc
out
and
pop
shlb
xor
xchg
mov
fcoms
inc
dec
push
cmpsl
addl
push
dec
sub
push
jmp
stc
jge
in
mov
stos
mov
jo
icebp
in
popa
dec
cld
pushf
pop
mov
jbe
scas
inc
aaa
inc
gs
sbb
cld
das
dec
dec
stc
push
push
mov
push
mov
scas
aas
inc
in
adc
shlb
lahf
jbe
add
outsl
pop
pop
shrl
adc
clc
test
shlb
int
hlt
xchg
mov
popf
movsb
clc
and
mov
call
rclb
jb
insb
adc
and
out
and
in
and
ljmp
add
cmc
mov
pop
cmp
jl
into
push
clc
sbb
mov
out
inc
das
jns
into
adc
xchg
push
sbb
xchg
cmc
int3
inc
add
loopne
push
adc
sbb
loop
jecxz
sub
negb
xor
outsl
xchg
add
data16
outsl
mov
inc
xchg
push
fcoml
adc
mov
movsb
jbe
jp
inc
scas
fs
imul
xchg
xor
data16
lret
fdivs
or
insb
xor
add
xlat
jae
adc
dec
dec
xlat
adc
inc
sbb
xor
mov
pop
pop
xor
pushf
jnp
pop
pop
pop
cmpsl
jecxz
dec
daa
mov
or
sbb
pop
xor
stc
cmc
lahf
xchg
aas
cmpsb
lods
xlat
insl
cld
xchg
lret
xor
adc
inc
and
movsl
out
stos
xlat
test
push
xchg
dec
lods
xlat
xchg
mov
and
push
lds
mov
add
cs
inc
jge
bound
ret
scas
rcrb
in
mov
cmp
pop
pop
or
mov
scas
data16
pop
sti
mov
insb
incb
xchg
aaa
mov
je
add
jne
shll
mov
push
outsb
xor
cmp
xchg
notl
and
rorb
adc
xor
aaa
dec
clc
aam
cmp
jge
pop
ss
stos
pusha
cmp
mov
jns
xor
movsl
addb
mov
call
sti
insl
mov
in
adc
lea
mov
sbb
in
fwait
adc
cmpsl
stos
mov
imul
dec
out
jl
pop
je
popf
jae
cwtl
and
mov
dec
push
cwtd
insb
aam
sbb
inc
xor
repnz
js
adc
ror
dec
outsb
leave
test
adc
cs
daa
dec
shrb
loop
xchg
ret
insb
xchg
aad
jle
cmpsl
mov
cld
xchg
fdivrl
decb
adc
pop
dec
or
int
inc
jb
dec
sub
into
outsb
mov
inc
lods
lret
jp
lret
xchg
xor
dec
jecxz
dec
mov
jecxz
cmp
adc
aaa
out
repz
into
out
push
or
sub
inc
into
sbb
mov
ret
insl
enter
popa
mov
fdivl
mov
ja
lret
subl
lods
or
sarl
jl
popf
cmp
cli
js
cltd
mov
test
jmp
pop
jns
repnz
int
xchg
sahf
ss
mov
push
cmp
cli
fadds
jecxz
xor
cmp
gs
test
test
mov
jge
dec
jl
jecxz
jmp
ret
test
inc
jns
pop
adc
mov
jle
sbb
push
call
adc
nop
sahf
push
mov
movsl
addr16
mov
mov
push
fld
jns
bnd
or
push
int3
std
sarl
ljmp
mov
and
mov
outsb
mov
inc
fisttpll
jle
ds
adc
test
gs
fisubrs
jmp
ljmp
scas
mov
daa
jns
filds
pop
push
ja
insb
pop
into
push
cmc
fnstsw
jnp
daa
add
adc
jae
inc
or
clc
and
gs
add
ja
repz
sub
scas
test
xor
ds
lea
and
sub
push
into
divl
insl
das
pop
test
inc
ss
lcall
std
cltd
pushf
cltd
xlat
call
imul
clc
mov
lret
mov
and
mov
cmp
pop
fstpl
inc
inc
subl
pop
ja
movsb
push
inc
bound
jo
cmpsb
push
cmp
mov
pop
push
mov
test
out
push
cs
popa
addr16
xchg
cli
out
mov
jns
lret
add
enter
mov
pop
adc
fstl
loopne
push
or
out
pop
je
ss
xor
mov
fldenv
test
push
mov
adc
shlb
sbb
add
push
or
ja
mov
add
leave
loope
dec
jecxz
sub
lret
test
emms
xor
inc
sti
test
dec
repz
mov
mov
inc
inc
mov
jmp
adc
pop
sub
aaa
xabort
sbb
dec
push
mov
dec
sbb
jecxz,pt
add
xchg
stos
in
rol
sbb
mov
pop
add
push
xchg
jne
mov
lret
cltd
inc
pop
push
pop
cmp
xor
popf
push
sar
push
fmuls
cli
and
loope
test
jge
push
mov
or
gs
mov
xor
xor
sbb
mov
ret
andl
dec
sub
add
enter
jle
cwtl
xor
outsb
cmp
movsl
movl
repz
mov
in
test
mov
xchg
push
jmp
adc
lret
outsb
ds
or
pop
inc
jno
inc
adc
pop
push
mov
sbb
lods
push
push
cmc
lds
add
inc
mov
xlat
aad
inc
add
nop
adc
test
popf
inc
jg
pop
pop
daa
inc
push
inc
or
ja
push
pop
ss
mov
fwait
xor
add
icebp
enter
push
negl
test
lss
adc
lods
dec
mov
negb
dec
cmp
or
push
dec
int3
cwtl
mov
sub
xchg
adc
test
xor
lds
cmp
mov
negb
and
or
repnz
mov
adc
scas
push
inc
fcoml
fwait
dec
jecxz
add
orb
scas
mov
pusha
ljmp
cld
leave
incb
or
push
cmc
sub
popf
cmp
call
push
mov
rclb
roll
cltd
dec
cltd
add
adc
dec
int
xchg
cmp
out
int3
test
jge
sub
pop
fisubs
imul
jl
pop
xchg
cs
mov
cwtl
push
xor
and
ljmp
je
int
inc
pop
and
jno
sahf
insl
inc
mov
mov
repz
lods
jne
jmp
xor
dec
inc
cmp
andb
fs
cmp
sbb
xchg
rorl
xchg
aas
cbtw
mov
idiv
fld
xchg
sub
add
pop
stos
push
pop
clc
or
or
into
in
xor
movsb
stos
push
push
hlt
fisttpl
jge
sub
es
in
ret
mov
nop
and
xor
jns
and
je
add
mov
bound
mov
inc
cmpsl
mov
call
repz
cmp
jg
inc
pop
out
loope
adc
xchg
das
jl
dec
xlat
icebp
xor
push
mov
nop
add
jo
pcmpgtd
out
shl
xchg
adc
fmuls
popa
inc
std
push
rcl
lock
mov
sbb
dec
rolb
push
cmp
pop
dec
stos
mov
int
insl
dec
sbb
subb
or
loopne
repnz
sub
push
aad
pop
popa
push
out
rclb
and
pop
les
pop
push
cmp
orl
pop
sbb
mov
scas
scas
out
es
bound
sbb
js
or
pop
icebp
popf
or
pmaddwd
addb
pop
xor
outsb
mov
cmpsb
sub
enter
lea
push
mov
rcrl
jbe
push
pop
mov
push
ret
outsl
fwait
mov
cmpsl
out
cmp
xor
nop
push
or
add
jg
pop
pop
or
xor
sbb
mov
mov
testb
lock
xorb
js
aaa
inc
icebp
stc
das
adc
inc
shrb
jne
pop
cltd
test
cwtl
adc
lods
sti
fwait
push
sbb
push
test
std
or
xchg
pushl
fisttpll
mov
pop
mov
out
xchg
jl
mov
add
sub
push
lea
mov
mov
mov
jg
sub
lea
ja
cltd
mov
mov
push
sbb
lahf
inc
stos
lahf
pusha
mov
and
cmpsl
sbb
lret
push
push
inc
xor
loopne
fidivrl
sub
test
cmc
js
cmpl
es
aaa
mov
jecxz
jo
insl
loopne
jecxz,pt
lea
leave
xchg
jmp
rcrb
out
fcmovbe
inc
xchg
nop
inc
or
mov
sti
mov
in
stos
insl
mov
fstl
push
dec
sub
gs
imulb
rcrl
shll
fidivs
push
test
into
pushf
pop
sahf
mov
push
ret
dec
dec
into
andl
sbb
sub
add
jns
rorw
pop
push
sti
pop
lea
mov
icebp
cmp
push
int
sub
stos
xchg
pop
data16
and
mov
jecxz
jle
inc
adc
mov
loopne
and
jecxz
jns
jns
cmp
mov
sub
mov
incb
jae
push
stc
xchg
jp
cmc
ds
std
pop
xor
es
mov
jb
inc
movsl
and
bound
ss
rclb
arpl
mov
leave
fists
popf
xor
mov
pop
and
inc
push
sub
in
stos
push
in
mov
ds
fdivr
adc
dec
into
cld
ret
pop
popa
mov
mov
scas
push
test
and
aaa
push
scas
rcr
or
jbe
sub
mov
jl
fiadds
cmpsb
movsb
mov
xor
cmp
jno
lcall
fdivr
outsl
pushf
jno
sub
dec
inc
dec
loope
mov
ret
mov
jbe
push
lods
inc
inc
inc
cmp
add
inc
pop
aad
inc
loop
shl
xchg
push
jg
mov
push
fmuls
data16
xor
loopne
add
mov
out
jnp
fsts
out
or
aaa
mov
add
jg
inc
add
mov
inc
ljmp
mov
mov
push
adc
add
js
out
std
adc
sub
mov
loopne
mov
sbb
xor
aad
popa
xchg
fs
in
insl
popa
movsb
sub
loope
icebp
sbb
mov
xchg
xor
lahf
sub
fnstenv
ljmp
pop
push
and
adc
mov
push
mov
and
movsb
push
int3
dec
enter
cmpsb
xorb
dec
lret
fistpll
cmp
or
pushf
clc
inc
mov
arpl
movsb
pop
scas
les
mov
fidivl
xor
pop
stos
add
not
cld
dec
push
loope
mov
mov
jmp
loope
push
xchg
outsb
xor
fsubrp
repz
and
jno
xor
lods
mov
in
out
mov
cs
xchg
dec
inc
divb
mov
in
mov
stos
test
fistpll
adc
cmp
lods
mov
out
push
mov
call
pop
lods
xlat
sub
push
mov
lea
mov
leave
pop
bound
xchg
adc
inc
and
popf
in
xor
dec
xchg
and
mov
and
mov
je
cli
lcall
push
inc
pusha
cmpsb
mov
push
mov
mov
in
test
lcall
in
add
mov
add
add
add
add
jmp
add
add
fwait
add
add
sub
add
add
add
add
fiaddl
add
add
add
add
add
mov
dec
add
add
add
add
add
add
sub
add
add
add
add
add
add
add
add
fildl
addb
push
add
add
ja
mov
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
cmpl
push
mov
je
cmp
je
call
call
mov
mov
push
mov
call
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
not
mov
pop
mov
or
mov
leave
ret
add
add
mov
dec
jo
gs
add
dec
add
add
sub
add
add
add
add
fiaddl
add
add
add
push
add
je
add
add
add
add
add
add
cli
add
add
add
and
cs
push
outsb
add
dec
jae
dec
jae
jb
inc
and
add
fsub
fidivl
leave
push
js
push
adc
lea
ss
pop
lea
or
testb
je
pushl
add
push
clc
add
push
pop
or
cmpb
testl
pop
push
cli
adc
sarb
sub
add
push
incb
call
mov
incb
push
add
je
push
push
cmp
add
and
cld
dec
adc
mov
push
add
loopne
adc
lea
loopne
clc
xchg
ror
or
push
clc
clc
inc
adc
add
push
add
add
add
mov
add
add
add
add
dec
inc
add
inc
add
mov
dec
imul
add
arpl
je
inc
and
jns
dec
add
cmpsl
push
gs
insb
dec
cli
imul
jns
and
outsb
push
add
push
imul
add
add
add
add
sbb
add
add
add
add
mov
add
add
add
add
add
add
cmp
add
add
add
add
add
add
movsl
push
fidivl
push
mov
mov
mov
and
or
jp
push
adc
enter
dec
in
out
inc
cmp
aas
int3
rcrl
mov
add
faddl
or
or
mov
mov
loop
and
jge
insl
push
fmuls
insl
cmpl
jg
icebp
int
dec
dec
xor
cmpsb
xor
push
mov
iret
aaa
test
pop
cwtl
sub
lahf
jne
aam
push
xor
pop
mov
sub
mov
mov
sub
int
gs
xchg
pusha
or
inc
mov
cld
mov
mov
in
push
out
and
jge
inc
adc
pop
mov
sub
das
sbb
out
cmpsb
roll
inc
xorl
sub
mov
aad
clc
or
test
xlat
pushw
outsl
sbb
pop
jge
stc
mov
push
adc
push
mov
aam
gs
adc
fsubs
pmullw
in
xorb
andb
pop
mov
sub
ficoms
xchg
jae
xchg
aaa
sahf
rclb
aad
add
and
inc
mov
mov
fsubp
pop
and
cmc
push
inc
pop
repnz
aam
pop
mov
sahf
lret
inc
fidivl
cmp
adc
jnp
dec
fisttps
pusha
inc
enter
lods
pop
sbb
and
sbb
cs
push
daa
sbb
mov
das
sbb
stos
dec
xor
cmc
cwtl
push
push
ss
sbb
dec
sbb
sbb
ficompl
jecxz
lcall
cmc
orl
popf
outsl
sub
aas
push
dec
jl
dec
sbb
in
adc
movsl
cwtl
shlb
xor
or
sub
std
xchg
hlt
xlat
and
xchg
clc
repnz
cmp
inc
int
xor
aas
lea
data16
sbb
push
dec
repnz
pop
shl
add
rcrl
in
aaa
ret
push
stos
lcall
xorl
bound
and
int3
dec
cltd
jg
mov
inc
push
or
push
sahf
jg
jo
mov
push
aam
push
fdivrl
pop
mov
mov
enter
xchg
jmp
ja
pop
and
test
inc
ds
dec
mov
orl
lock
xchg
inc
fistl
ljmp
or
js
push
pop
mov
dec
popf
push
mov
inc
lret
outsl
notl
push
dec
ds
xchg
insb
out
insb
sub
lods
getsec
cli
popl
push
cmpsb
nop
add
dec
mov
jb
cmp
vminpd
dec
pop
pop
pop
or
and
xor
pop
mov
pop
test
addr16
and
mov
mov
std
outsb
pop
sub
and
insb
aas
test
cmp
mov
sub
fldt
xchg
dec
xor
inc
das
aad
xor
inc
pop
fldt
pop
push
xorl
sbb
add
lods
sub
pop
ret
pop
aas
mov
pop
std
loopne
cmp
mov
out
pushf
jbe
pop
loopne
mov
leave
cmp
mov
mov
cmp
push
push
in
pop
scas
andb
addr16
cmp
add
xchg
mov
xor
clc
pop
jno
int
popa
mov
iret
pop
rclb
cli
cmpsl
cs
loop
mov
aaa
jle
mov
clc
sub
add
scas
xchg
shlb
mov
dec
xchg
cmc
or
pop
cwtl
cld
mov
cmp
xor
imul
lret
test
or
stos
mov
sub
fmull
jns
inc
mov
or
add
ret
mov
inc
sbb
mov
cmp
inc
int
jl
clc
add
and
mov
insl
dec
jb
notl
xor
push
fwait
loopne
add
dec
mov
xor
das
jg
loopne
dec
inc
es
jae
in
mov
pop
mov
pop
xor
pushf
and
mov
out
jg
bound
shlb
pop
imul
out
mov
and
idivl
inc
pop
mov
aam
leave
pop
dec
sub
mov
sub
cmp
jecxz
movsl
loopne
insl
scas
xor
and
rclb
jle
jns
adc
sarb
mov
xor
loopne
mov
mov
cmpsb
mov
pop
push
cmpsb
pop
or
pop
pop
or
add
push
sub
call
or
xchg
out
test
mov
cmp
mov
je
jecxz
dec
insl
loopne
ss
push
xorb
loopne
dec
std
jmp
pop
aam
cmp
mov
dec
enter
loop
xchg
adc
push
mov
adc
insb
add
js
sbb
bound
adc
lret
xchg
and
xor
sbb
add
in
sbb
bound
sbb
mov
dec
add
mul
cmpb
in
ss
lcall
ret
sti
pop
jg
fwait
lods
jecxz
push
ss
or
nop
sti
mov
popa
lock
sbb
insl
push
jb
inc
sbb
cmpsl
pop
lahf
xchg
pop
jge
adc
loopne
and
sub
push
adc
insl
in
ds
mov
sbb
js
imul
push
cltd
stos
mov
cmp
xchg
and
imul
add
inc
std
xchg
cld
loopne
into
dec
jb
hlt
add
loope
leave
fidivs
outsb
jge
xchg
rcrb
negb
xchg
iret
inc
push
inc
lcall
sarb
data16
popf
dec
adc
pop
lret
rcrb
adc
gs
pop
lock
sbb
addb
call
shll
sbb
fwait
mov
hlt
dec
out
popa
movsb
xchg
xor
xor
mov
and
push
or
je
jbe
fs
sub
fwait
mov
sbb
shl
xor
mov
mov
imul
add
and
add
mov
shlb
into
adc
int3
jo
adc
stc
shl
in
fcoms
xchg
sub
dec
bound
push
push
add
shll
mov
xchg
pop
in
mov
pop
adc
sbb
sub
les
or
mov
int3
xor
xor
or
pop
out
inc
dec
call
cmp
nop
push
add
div
xchg
lea
or
or
xor
mov
mov
adc
shlb
daa
enter
add
dec
push
jno
xor
jp
mov
xchg
add
rorb
mov
imul
mov
sub
mov
mov
jb
sbb
adc
outsl
orb
cld
lods
test
push
mov
bound
jnp
xor
repnz
add
push
or
mov
cld
shrl
std
js
addr16
jns
decl
movsb
stos
dec
roll
cmp
movsl
push
mov
cmpsb
in
loopne
mov
mov
inc
push
jne
in
int3
lods
dec
pop
sub
cmp
add
pop
or
xchg
cmpsb
ret
jmp
loopne
ret
sub
mov
call
stos
fdivr
in
js
adc
pop
out
xchg
xor
pop
adc
pop
xor
sbb
hlt
pop
pop
dec
shrl
mov
cld
fldcw
mull
xor
xchg
ret
or
pop
in
pop
push
and
mov
mov
cmp
sbb
icebp
mov
mov
les
jb
int3
addb
pushf
mov
pop
movsl
in
xor
pop
loop
loopne,pn
mov
pop
lret
shll
push
jl
cltd
jb
pop
push
xor
cmp
and
div
mov
sbb
or
dec
mov
mov
sbb
adc
xchg
xchg
ljmp
xchg
nop
insb
jbe
jmp
xor
aaa
xchg
cmpsl
mov
lods
sub
pop
adc
xchg
cmc
add
data16
xchg
jge
add
out
fidivrl
std
mov
into
sub
out
push
dec
push
xor
pop
mov
gs
mov
popf
jno
aaa
jne
dec
negb
sti
jp
hlt
jmp
push
mov
adc
pop
mov
repz
and
mov
xchg
jns
outsb
xchg
push
mov
xchg
popf
jecxz
cmp
ret
call
repz
stos
inc
cmp
aad
inc
fiaddl
mov
stos
mov
ds
ja
jmp
mov
cmp
push
or
sub
push
fmul
sub
js
jbe
mov
xor
psadbw
mov
and
lods
jp
jne
sahf
push
push
mov
sub
push
icebp
or
mov
lds
call
mov
repz
rol
lahf
xchg
cltd
sarb
pop
sub
aad
je
mov
jne
add
and
xor
jmp
push
and
push
mov
and
pop
outsl
push
jle
sbb
fildl
push
mov
sbb
les
aaa
test
add
jnp
pushf
scas
inc
add
add
pusha
mov
fmull
sbb
cld
sahf
push
pop
and
in
fmull
inc
xor
xor
push
in
nop
repnz
mov
test
xor
xor
lret
jmp
jp
push
sub
popf
bound
fneni(8087
out
sbb
xchg
cli
lea
push
hlt
push
mov
leave
xor
sbbb
xor
mov
inc
jo
add
xor
dec
dec
stos
sub
test
jge
jle
mov
imul
scas
lock
mov
pop
mov
sub
push
push
mov
fildl
pop
xchg
pop
daa
sub
lds
inc
test
xor
inc
sbb
vpaddsw
iret
mov
inc
push
xchg
test
cs
out
lret
rol
jno
cmp
xor
stos
aam
popf
rcll
ds
sbb
and
enter
push
xsave
mov
adc
insb
insb
daa
adc
xlat
mov
enter
das
int
push
mov
push
repz
push
imul
or
fidivrs
sub
jg
enter
mov
push
xchg
inc
outsb
out
ds
loope
sbb
mov
imul
lret
push
cmp
mov
ds
mov
adc
jb
cmp
xor
test
mov
test
push
movsl
popa
insb
push
movsl
adcb
inc
add
lcall
jbe
or
in
fcomp
inc
cmp
dec
int
daa
imul
aas
jp
mov
fidivrs
addr16
mov
idivb
jmp
add
xchg
xorl
js
aaa
dec
mov
dec
jmp
mov
test
xchg
and
in
popa
and
aam
fdivrp
nop
mov
mov
or
jl
add
aad
or
xchg
jmp
xchg
xchg
mov
push
sbb
or
inc
adc
mov
pop
scas
stc
dec
dec
push
or
and
les
xor
dec
xchg
iret
mov
aas
pop
and
clc
es
mov
sbb
xor
stc
out
subl
cli
cmp
icebp
insb
xchg
clc
data16
aas
pop
push
pop
mov
pop
leave
pop
out
clc
push
mov
cmp
or
insb
mov
pop
fsubs
sub
sub
pop
js
lock
insl
sbb
mov
out
pop
cmp
in
lea
sub
sbbl
mov
stos
inc
not
arpl
adc
or
andl
fldt
stos
mov
mov
cmp
hlt
cld
test
lods
loope
repnz
jle
mov
add
add
rcll
inc
inc
sub
aaa
lcall
mov
xchg
dec
pop
xchg
jne
mov
mov
popa
enter
push
out
pop
pop
iret
pusha
fistl
and
mov
ljmp
std
mov
inc
fcomps
add
jbe
jno
nop
dec
cmp
cmp
xor
pushf
mov
je
pop
sbb
add
rorb
xor
mov
aas
push
pop
and
dec
sarb
mov
dec
mov
arpl
outsl
push
das
jo
pop
rcll
and
sub
cmp
mov
out
add
add
sub
mov
jo
out
jbe
mov
fs
int3
and
js
pop
cmpsl
pop
cmp
lcall
nop
loop
test
pop
cltd
loopne
adc
data16
mov
lret
lret
jns
icebp
mov
inc
and
mov
xchg
add
stos
jg
sub
mov
jo
gs
jns
js
ss
inc
sahf
push
imul
inc
cmp
inc
mov
sbb
sbb
in
negb
popf
ljmp
adc
cmp
fadd
dec
scas
cld
dec
jecxz
incb
mov
outsb
loop
loop
push
and
cs
sbb
sti
sbb
scas
test
aas
push
or
mov
pop
push
add
ret
dec
leave
xchg
ret
lea
jnp
xor
fldt
out
or
std
ds
jae
lahf
mov
fdivrl
sbb
push
popf
outsl
lret
fidivs
lds
push
shll
loopne
adc
and
adc
rcrl
jl
mov
mov
xchg
das
xchg
out
sub
movsb
imul
dec
insb
enter
leave
adc
or
js
scas
das
into
inc
adc
mov
sub
iret
dec
lcall
and
pop
adcb
xchg
xor
lcall
iret
popa
dec
cmp
push
pop
out
jo
add
shll
or
gs
inc
mov
nop
mov
hlt
mov
pop
fldl2t
orl
lcall
test
icebp
dec
bound
dec
roll
sbb
mov
sub
adc
mov
fwait
ljmp
cmpsb
lock
in
or
hlt
icebp
in
push
xchg
dec
movsb
push
inc
scas
loope
xor
sub
pop
test
jmp
sub
gs
and
pop
aaa
fsubrs
xchg
sub
xchg
sarb
pusha
call
jbe
repz
inc
shlb
jle
imul
test
pop
ljmp
out
loope
and
clc
movsl
cmc
cmp
xchg
daa
in
xchg
jp
pop
hlt
mov
ja
push
pop
xchg
aam
or
jle
loop
dec
push
insb
fwait
sti
lret
mov
ds
inc
xchg
lock
sbbl
fisttpl
loop
mov
ficompl
hlt
cltd
xor
cmp
mov
stos
imul
imul
push
cmpsb
in
jns
add
test
clc
pop
adc
stc
or
cmpsb
or
loopne
sbb
aas
insl
add
mov
xchg
imul
data16
jae
pop
push
je
popa
mov
sbb
jge
mov
push
lds
adc
fwait
or
mov
sbb
stc
jmp
int
iret
xor
nop
loopne
fdiv
lds
sub
jg
std
push
xlat
hlt
pop
stc
popf
adcl
lahf
push
push
adc
add
mov
xchg
out
pop
xlat
arpl
test
lret
rcrb
jb
xchg
out
dec
cmpsl
jle
jge
test
xchg
out
cmpsb
das
jecxz
out
hlt
inc
jno
fs
or
jo
aas
cmpl
dec
cwtl
jno
xor
fists
loope
adc
into
outsb
inc
mov
dec
adc
adc
icebp
xchg
test
mov
out
stc
fs
movsl
pop
dec
cmp
out
mov
in
sahf
add
test
jmp
pop
add
push
mov
mov
rcll
mov
cmp
call
jle
es
test
mov
in
fwait
push
cs
movsl
pop
push
jl,pt
xor
scas
mov
sub
push
and
icebp
fbstp
repz
fwait
push
mov
or
push
fidivrl
xor
inc
mov
cmc
sbb
or
mov
mov
test
jb
ret
in
mov
jae
cmp
add
lods
out
mov
nop
mov
inc
adcl
testb
mov
sahf
movsb
test
es
or
les
add
cli
xor
scas
fcom
in
negb
and
pop
mov
inc
dec
add
addr16
pop
and
leave
repnz
fistpll
xor
sbb
sub
sub
push
paddsb
and
sbb
dec
adc
mov
ds
adcl
ds
pusha
outsl
mov
pusha
stc
push
popf
ja
and
inc
mov
mov
dec
shrb
ss
add
shrl
cwtl
mov
mov
dec
cmp
lods
jmp
push
xlat
push
bnd
sub
sbb
push
movsl
ret
in
mov
dec
pop
and
loope
mov
repnz
xchg
je
xlat
push
in
repnz
in
xor
into
imul
in
xchg
sti
mov
mov
insl
adc
mov
int3
adc
mov
cli
push
jo
jmp
mov
push
adc
in
sbb
push
jp
xchg
iret
cli
insb
fs
pop
sub
dec
data16
push
idivl
sub
cltd
sbb
in
jnp
shl
mov
shlb
xor
and
fsubrp
nop
iret
jmp
sbb
adc
dec
pusha
icebp
xor
sub
or
pop
fcomi
add
and
xor
dec
addr16
lea
adcb
repz
sbb
ljmp
in
les
mov
mov
pop
mov
pop
test
cmc
pop
hlt
xchg
jo
rcl
mov
inc
sbb
dec
popa
mov
pushf
sub
addr16
xchg
push
or
and
insb
inc
lods
aaa
mov
and
mov
push
in
xchg
add
adc
rcll
push
xor
imul
mov
mov
xor
in
dec
das
test
pop
lcall
cltd
mov
fildl
xchg
xor
loopne
add
add
add
cli
jb
add
add
add
add
add
add
add
add
sbb
add
add
add
add
mov
add
add
add
add
add
add
cmp
add
add
add
add
stos
mov
stos
add
ja
mov
dec
int3
int3
int3
int3
int3
int3
int3
int3
add
add
add
add
or
and
or
or
inc
add
add
add
add
add
add
and
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
and
jo
outsb
repnz
jae
inc
imul
push
imul
add
cld
or
dec
lea
inc
in
loopne
adc
push
lea
adc
cld
mov
call
push
mov
push
push
dec
push
dec
ror
lret
ret
mov
push
test
orl
adc
push
or
loopne
cld
jmp
jge
push
adc
sar
jne
add
test
test
std
or
cld
rorl
adc
push
push
bound
ljmp
lock
clc
push
cmp
mov
inc
pusha
inc
add
jne
jmp
adc
movl
add
mov
add
add
inc
add
inc
inc
inc
xchg
gs
outsl
je
test
gs
push
inc
jo
push
inc
inc
gs
gs
je
arpl
arpl
dec
cmc
inc
push
inc
jb,pn
addr16
add
gs
imul
push
inc
gs
xor
add
add
rolb
add
add
inc
add
add
jo
add
add
add
popf
scas
jg
shl
xor
mov
cmp
mov
inc
arpl
cmp
mov
mov
xchg
add
cld
shll
sbb
pop
imulb
imul
call
lret
pop
mov
pop
rcrb
ss
push
push
int3
js
mov
loopne
sahf
pop
insb
out
fwait
sub
or
mov
testb
outsl
daa
inc
sti
outsl
xchg
lock
or
jg
fsubr
cmp
in
mov
xchg
dec
pusha
mov
xor
fimull
aas
mov
pop
xor
sarw
call
lock
fwait
mov
mov
cmp
es
jns
fimull
rcrl
xlat
adc
sub
sub
push
or
xchg
enter
mov
arpl
xlat
repnz
pop
fdivp
sahf
push
pop
jmp
fs
lcall
je
xlat
repnz
xlat
mov
push
mov
pop
lods
imul
out
out
adc
xor
pushf
mov
and
cmp
in
sbb
call
sub
lods
aam
cli
xchg
dec
addr16
xchg
repz
icebp
cmp
mov
and
sub
imul
dec
loopne
shrl
sub
adc
ret
jp
lcall
cmp
mov
dec
incb
fiadds
mov
jne
cmp
cmp
outsl
or
dec
inc
cmpsb
xor
push
mov
mov
dec
mov
mov
xchg
inc
mov
mov
aad
loop
and
in
push
mov
add
mov
jp
jge
mov
xor
adc
es
psubw
arpl
cwtl
pop
testb
mov
mov
xchg
clc
jecxz
and
or
pusha
mov
dec
or
ss
popf
paddusb
and
clc
mov
dec
popa
sbb
shlb
adc
stos
sub
testb
je
mov
mov
jns
fbstp
push
mov
xchg
pusha
inc
stos
adc
xor
push
pop
dec
arpl
stos
or
int3
test
cwtl
or
mov
test
mov
in
mov
mov
roll
subl
stos
addr16
lds
cmpsl
ffree
aas
mov
pop
push
add
dec
or
clc
insb
pop
and
inc
mov
or
jb
cwtl
xor
xchg
enter
test
add
popa
gs
cmp
lock
xchg
mov
pop
pop
popa
push
wbinvd
adc
mov
sbb
js
in
int3
fwait
or
jns
daa
sbb
cmp
insl
leave
jl
cmp
xchg
xchg
jmp
lods
cwtl
jae
pushf
push
dec
jl
cmp
inc
in
es
inc
mov
jle
mov
mov
sub
bound
mov
add
cmp
shl
xchg
daa
push
xor
xor
or
mov
jbe
ja
popa
out
fisttps
fs
xor
sub
aam
scas
sbb
repz
xchg
lods
jecxz
mov
add
cwtl
xchg
push
addr16
iret
in
xor
out
push
fmull
push
mov
sub
mov
bnd
daa
xchg
inc
dec
add
sbb
test
out
int3
sub
ret
rorb
fldcw
into
movsb
pop
mov
outsl
stc
pushf
xchg
sbb
out
pop
xchg
movsb
test
in
push
push
push
call
movsb
adc
and
inc
cmpsb
and
enter
je
xchg
mov
xor
int
jmp
das
xchg
pcmpeqd
fsubrl
push
xchg
pusha
pushf
push
movsb
xorl
mov
jle
pushf
pop
stc
fistpl
inc
mov
push
jl
inc
inc
cld
push
movsb
sub
out
and
aaa
xor
sbb
dec
lcall
fmulp
push
into
push
xor
outsl
dec
cmpsb
addr16
incl
pusha
inc
fs
pop
jl
stc
adc
addr16
test
nop
dec
or
or
das
pop
lock
aaa
out
jb
add
cmp
mov
adc
stc
add
out
xchg
outsb
dec
pushf
ljmp
mul
mov
fwait
aaa
cli
mov
jbe
sub
add
mov
sub
xor
fsubl
and
in
in
cs
ret
cmp
rcrl
lea
out
dec
jle
jne
rol
sub
arpl
jl
flds
fs
fwait
sub
mov
test
jbe
movsb
mov
sbb
in
cld
popf
paddq
jmp
mov
jecxz
push
icebp
sbb
test
and
push
jmp
dec
dec
xchg
xor
lret
mov
lret
inc
push
push
das
lcall
and
cs
lret
xchg
mov
pop
sub
in
dec
test
cmc
mov
mov
in
bound
sbb
pop
mov
mov
push
mov
add
cltd
mov
pop
mov
push
mov
mov
inc
lahf
dec
test
jbe
scas
pop
mov
and
scas
ss
xor
repnz
arpl
loopne
arpl
aad
test
fimull
in
dec
jo
pop
jp
sub
pop
lea
loope
int3
adc
adc
and
dec
cmp
inc
add
arpl
mov
xchg
mov
xor
mov
xchg
mov
into
adc
cmp
xchg
lahf
aas
sbb
sub
jge
lahf
enter
in
fildll
push
mov
test
or
ror
mov
sbb
xchg
fldenv
cs
mov
cmp
jo
hlt
loope
ret
xor
testl
sub
js
test
inc
mov
popa
lret
and
dec
and
xchg
insl
pop
jmp
jp
fstps
push
mov
test
movsl
xchg
and
cli
ds
pop
xchg
cwtl
and
and
add
lret
mov
pop
cltd
lret
xchg
out
sbb
testb
sar
mov
sbb
in
push
enter
jle
push
fidivrl
push
cwtl
test
or
hlt
adcb
das
sub
pushf
sti
adc
push
xor
jne
fbstp
and
pop
jmp
xor
loop
enter
cmp
and
mov
hlt
fdiv
cmp
mov
lds
sbb
pop
shl
xchg
mov
dec
xchg
bound
dec
pop
insl
dec
jae
jb
mov
pop
ficoms
cmp
mov
mov
pusha
dec
and
cmp
fnstsw
mov
repz
mov
push
inc
cs
mov
mov
in
data16
ret
mov
out
and
cs
in
fisubrs
movsb
inc
sub
add
jns
sbb
fstp
cmp
or
test
fdivr
leave
and
test
mov
out
les
jle
mov
xor
pop
xor
cmp
mov
scas
idivb
add
subb
in
mov
xchg
bound
sub
dec
lock
arpl
mov
and
pusha
add
shrb
and
cltd
testb
mov
mov
imul
xor
push
mov
jge
stc
ds
fiadds
mov
fcoms
xchg
mov
imul
xor
scas
dec
sahf
cmc
and
outsl
arpl
and
inc
cmp
ret
jbe
sbb
cmp
pop
mov
js
cltd
cmp
insl
inc
xor
adc
fnsave
pusha
dec
mov
in
ja
out
push
sarb
in
xchg
or
fwait
pop
pop
movsl
xchg
cmpb
adcl
sbb
mov
push
mov
popf
rorl
sub
pushf
fnstsw
cmpsb
je
dec
cmp
adc
mov
dec
push
jmp
pushf
pop
push
dec
mov
jbe
inc
fildl
stos
sbb
push
mov
and
lret
inc
adc
hlt
pop
push
add
sub
in
insb
cmp
mov
int3
push
push
pop
sbb
call
stos
aaa
cmp
cmpsl
sbb
rcl
rcrl
cltd
mov
inc
push
cmp
xchg
push
sub
sub
fistps
bound
shrl
adc
stc
adc
rorb
inc
rcrl
aam
push
pop
xchg
divl
out
fdivl
ror
cld
scas
lret
iret
ret
pop
or
jno
or
fildll
xor
pop
push
jecxz
dec
lods
in
jl
mov
xlat
mov
push
fnstcw
push
mov
xor
test
push
cli
pop
leave
ljmp
insl
adc
out
inc
fistpll
or
dec
loope
adc
aad
sbb
push
jmp
and
xchg
pop
int
xchg
xchg
iret
fsubs
fldl
repnz
and
dec
and
add
loope
int
das
rolb
jecxz
movsl
mov
mov
pop
imul
loope
mov
xor
and
scas
xor
lret
nop
nop
mov
shll
jle
retw
xchg
fstpt
fs
outsb
mov
jl
inc
fildll
sub
lods
movsl
loope
insb
dec
jns
sub
iret
jns
fistps
mov
pop
jnp
push
mov
and
and
cmc
push
stos
cmpsb
flds
dec
xor
fstps
repnz
cmp
mov
adc
mov
rclb
out
into
cmp
iret
movsb
jecxz
ja
xor
mov
jecxz
lock
loop
cmp
cmp
out
xchg
and
pop
inc
cmpsb
std
push
test
and
jb
sahf
and
xlat
test
inc
pop
loop
cmc
jg
arpl
jmp
sbb
push
mov
lods
adc
mov
ss
in
ret
cmp
and
sysret
push
xor
out
xor
mov
fwait
mov
in
int
rorb
inc
mov
stc
ret
mov
cmp
imul
stos
xorl
adc
pop
sbb
or
insb
inc
add
pop
mov
lds
pushf
push
cmp
into
sbb
rcrl
push
fistpll
fisubrl
push
insl
mov
push
mov
xchg
out
mov
add
push
mov
fnsave
mov
push
or
mov
xchg
xchg
jo
incl
lcall
jns
mov
cmc
leave
push
daa
dec
cli
stc
aad
bound
mov
cltd
loope
or
popa
hlt
sub
mov
bound
lds
or
push
adc
mov
pop
lret
fisubs
or
fistpll
loop
fincstp
and
ss
insb
sub
ds
inc
sbb
push
js
shr
push
ds
lret
pop
mov
jns
or
pop
inc
xlat
test
pushf
imul
xor
jbe
jo
jo
jns
mov
daa
in
data16
arpl
or
jno
pusha
cwtl
pop
ljmp
xor
dec
fcmovnbe
addr16
jecxz
repz
jns
pop
lret
imul
adc
sbb
pop
in
xchg
fs
xor
loope
sub
xchg
dec
lods
out
mov
sub
and
jae
pop
or
or
aam
test
mov
gs
icebp
xchg
sbb
xchg
inc
mov
loopne
push
pop
push
and
lcall
or
jle
aad
int
pop
push
jo
dec
jmp
std
xchg
pop
fs
cli
xchg
stos
push
mov
lcall
jg
or
cli
pop
sub
xor
cmp
in
lret
ljmp
das
ret
fadd
pop
mov
lods
fwait
lcall
daa
test
push
push
addb
push
mov
fnstsw
sbb
and
lret
sbb
loope
outsl
and
and
mov
ljmp
sti
jns
add
inc
test
out
shl
fstpt
das
setne
and
jae
sbb
les
dec
ficoms
fists
dec
mov
inc
pop
inc
jp
jecxz
sub
arpl
ret
mov
je
test
dec
xor
dec
mov
add
jne
cmova
adc
add
out
pusha
adc
sar
inc
gs
lret
sti
int3
mov
adc
push
push
pop
scas
inc
rcl
jge
push
in
push
cmp
test
mov
mov
or
pop
lea
dec
push
repz
aas
orb
mov
cmpsl
inc
outsl
loop
and
mov
outsb
or
sub
mov
cmp
mov
mov
mov
pop
lcall
mov
add
popa
xchg
mov
pusha
sub
sbb
pop
rorb
xor
rcr
rdtsc
adc
cmp
test
negl
push
ljmp
repz
je
test
adc
cwtl
popf
fistps
or
mov
inc
cli
and
dec
dec
stos
sbb
and
pop
insb
xchg
cmp
movsl
push
xchg
or
fstl
call
stos
cmp
daa
daa
test
sbb
add
out
lock
jne
pop
into
sub
enter
sbb
cmp
mov
cmp
cmp
ljmp
shll
in
loope
jae
out
mov
add
std
and
ret
cltd
mov
mov
cmp
add
call
cltd
leave
push
sbb
and
xchg
mov
je
ljmp
push
orb
mov
push
imul
sub
je
xorl
adc
add
mov
sarl
sub
mov
sub
das
xor
jnp
pop
push
out
lods
gs
hlt
das
js
push
and
mov
pop
sbb
jnp
jnp
pop
inc
fcoml
adc
fstpt
loope
and
ss
or
xchg
or
test
out
test
add
fwait
xor
sub
pop
sub
jae
cmc
addb
xchg
add
in
push
outsb
push
mov
dec
sahf
fdivl
mov
mov
andb
mov
push
div
jge
push
add
adc
aas
clc
add
mov
cmp
mov
shll
lcall
mov
es
xor
xlat
mov
imul
loopne
mov
xor
dec
jecxz
push
mov
cmpsb
inc
mov
cmpsl
lds
xlat
rcrl
mov
pusha
push
mov
addb
imull
das
xchg
xor
daa
sbb
cmp
out
cmp
and
dec
cmp
shlb
sub
and
outsl
pop
arpl
or
call
cmpsb
cld
stos
out
loope
fs
in
push
iret
pop
int
decb
ret
xor
xchg
iret
add
and
data16
out
mov
test
aaa
adc
pop
mov
and
mov
sbbl
mov
sar
or
das
popf
cmp
sub
mull
ljmp
dec
push
and
push
fs
mov
into
mov
mov
pop
pop
out
cmp
scas
xor
push
add
sbb
pop
add
fstl
imul
aam
stos
addr16
mov
cmc
push
fcoml
iret
pusha
ror
inc
test
xor
stos
lods
mov
sbb
mov
cmpl
rcrb
loop
notl
mov
out
leave
xor
jo
roll
sub
lods
push
dec
popa
movsb
lea
jle
cmp
cmp
movsl
fdivs
add
jne
push
loope
outsl
pushf
mov
dec
push
cmp
out
rorl
scas
mov
ret
and
andl
sub
jmp
push
xor
sbb
cltd
mov
icebp
nop
out
pop
adc
push
push
lcall
stos
aas
test
lretw
arpl
repz
pop
sub
movsb
scas
or
jbe
lcall
rcrl
iret
test
push
cmp
aas
mov
std
mov
cmp
dec
mov
mov
test
cli
ja
repz
add
ret
cmpsl
inc
jl
mov
push
enter
movsl
sbb
mov
lcall
cs
out
sub
daa
mov
fiaddl
das
adc
fldlg2
xor
xchg
divb
imul
cs
movsl
adc
or
and
pop
jle
lret
hlt
adc
cmp
sbb
inc
push
mov
inc
jmp
xor
mov
ja
xor
stos
add
movsb
inc
xlat
adc
add
or
sub
sub
loopne
std
stos
repz
stos
vpackuswb
out
outsl
mov
mull
pushf
xor
es
mov
mov
dec
mov
and
cmp
sub
xchg
out
cmc
sub
std
add
xchg
mov
xlat
push
data16
inc
clc
jo
sbb
and
aam
shlb
pushw
sub
lret
or
loop
mov
dec
and
add
sbb
or
cmp
cmpsl
sub
push
jg
in
push
mov
pop
jnp
sbb
inc
xor
inc
mov
add
push
jns
movsb
pop
data16
je
cs
shrl
or
jl
dec
and
adc
cltd
add
out
pop
testb
fcomps
adc
cmp
push
sbb
ja
int3
jns
mov
pop
add
fstpl
lcall
mov
inc
fmulp
fbld
cld
and
sub
rcrl
mov
push
in
pop
or
loopne
pop
push
aas
inc
inc
xor
nop
divl
repnz
sbb
fwait
inc
ret
or
xchg
mov
call
out
mov
pop
jge
jmp
adc
jp
sarb
dec
pop
jg
jne
fdivl
dec
sbb
cwtl
or
pop
fsubrs
and
pop
jbe
roll
out
xchg
inc
inc
fisttpll
cmp
add
or
adc
pop
daa
test
mov
ret
test
gs
ret
fisubl
push
rcll
int
jmp
and
rol
out
test
std
es
or
rol
mov
push
jo
test
add
push
or
movsl
pop
mov
sbbl
shl
or
ficoml
inc
or
sahf
into
lcall
popl
out
fistps
es
lods
fcomi
sub
jae
test
imul
shll
add
add
add
add
mov
add
add
add
add
add
rolb
add
add
add
add
inc
add
add
jo
add
add
add
add
add
add
add
add
rolb
add
add
addb
sar
pop
stos
stos
add
daa
ja
mov
clc
clc
dec
int3
int3
int3
int3
int3
int3
int3
int3
dec
add
add
mov
insl
add
add
add
adc
mov
add
add
xchg
or
add
add
add
jb
add
add
add
sbbb
sbb
sbb
sbb
sub
clc
sbb
add
lock
jne
dec
pop
je
jb
outsl
inc
dec
and
push
ja
mov
inc
roll
out
xor
add
add
lock
inc
mov
xor
add
cmp
mov
jae
repz
test
test
std
call
incl
lock
clc
push
pushf
adc
xor
sub
adc
pop
inc
add
add
push
jmp
pop
testb
jge
push
push
add
call
add
arpl
push
adc
decl
adc
test
lods
inc
je
rolb
sar
ljmp
add
adc
jne
test
add
arpl
lea
stc
push
clc
push
add
mov
add
inc
add
push
xor
add
add
insb
add
add
adc
add
sbb
sbb
sbb
push
sbb
mov
jbe
inc
outsb
outsb
add
adc
popa
outsl
inc
add
popa
imul
insb
imulb
mov
jae
outsl
imul
jae
cmp
gs
add
add
inc
je
add
add
xor
add
add
mov
es
add
add
add
les
test
pop
add
movsb
icebp
xor
mov
xchg
gs
jne
testl
cmp
and
lods
cmp
and
jecxz
out
mov
sbb
xchg
xor
mov
std
scas
ror
xor
leave
push
add
fisttpl
mul
test
in
mov
lcall
push
fs
insl
aad
cs
jns
gs
cmpsl
fadds
xchg
mov
and
je
push
xchg
pop
mov
bound
popf
jo
adc
sbb
jno
in
les
pop
jo
clc
add
push
ljmp
sar
add
adc
gs
loopne
in
test
dec
stc
aad
sbb
int3
rclb
sti
push
add
dec
mov
jg
sahf
dec
subb
adc
cmp
pop
out
jge
les
mov
inc
les
xor
lea
xor
jne
xchg
mov
mov
aam
rorb
add
test
and
gs
xor
loopne
xor
rolb
in
mov
dec
inc
in
xor
nop
call
iret
push
imul
cmp
out
arpl
xor
jle
negl
ljmp
popa
std
mov
pop
repnz
in
mov
fcomps
out
test
movsl
push
jbe
sub
jl
arpl
or
fdivl
jecxz
fiaddl
and
jae
sub
cmp
aaa
push
notl
ja
push
inc
icebp
jge
xor
rorb
cmp
mov
inc
cmp
cltd
sarl
daa
jmp
std
sbb
outsb
jne
mov
add
sbb
dec
ljmp
xor
lock
pop
repz
fbstp
or
xchg
and
jb
pop
ret
xchg
adc
outsb
jbe
pop
jmp
mov
mov
cltd
sub
ljmp
imul
mov
push
pop
push
call
add
es
jnp
loope
cmc
push
out
sub
cmp
or
or
pop
int3
jp
jnp
inc
xchg
jae
xchg
dec
aad
cmp
ss
fsubrl
shll
rorl
stos
lret
rcrb
mov
xchg
sbb
vcmpsd
mov
push
arpl
test
lcall
jns
enter
addr16
loop
rorb
jle
mul
addr16
pop
push
popf
dec
pop
jecxz
push
cltd
daa
pop
sbb
mov
fiadds
push
mov
inc
imul
js
pop
repnz
sub
push
push
iret
jns
dec
sub
stc
and
call
daa
mov
addr16
jns
movsb
fsubrl
cmp
xchg
pop
inc
jmp
loopne
xor
into
cmp
in
push
dec
icebp
mov
mov
adc
mov
push
or
inc
jp
dec
pop
repz
push
lods
out
push
stos
pop
or
fstpt
rolb
mulb
hlt
mov
adc
int3
xchg
or
dec
pop
jl
pop
push
test
mov
inc
add
push
push
push
mov
and
xchg
xchg
mov
fdivl
aam
fistps
stc
pop
clc
in
bnd
pop
pusha
cwtl
adc
lds
xchg
aam
cmp
stos
xchg
xchg
int
popf
xlat
and
ds
push
ja
out
inc
fcomps
int3
popf
jo,pt
test
dec
lock
or
jge
pushf
int
sets
and
or
xchg
mov
aaa
jle
nop
cmpb
jnp
test
ss
in
fldt
ljmp
int
mov
pusha
addr16
mov
mov
jge
in
ficompl
or
xlat
cmc
sub
rcrb
in
jbe
mov
jmp
bnd
or
jae
lret
in
push
incb
jle
hlt
lret
add
lds
add
mov
fnstenv
pop
cwtl
jns
cmp
jnp
lea
cmc
enter
lahf
jmp
clc
fnsave
adc
scas
jl
xchg
int
inc
leave
lret
xchg
mov
sub
loope
or
pop
sub
and
aas
aas
subl
test
dec
out
xchg
loop
mov
dec
inc
rcrb
jno
cvtpi2ps
movsl
pop
int3
lods
imul
pop
add
xor
sub
into
rcll
push
cmpsb
mov
push
cmp
jno
xor
mov
sahf
adc
enter
pop
jae
out
fdivrp
adc
dec
mov
xor
xor
cmc
and
pop
or
dec
out
mov
xor
xor
ret
sahf
jp
int3
xchg
push
mov
pop
jae
fsubl
ret
aam
jl
sbb
fsubrs
shl
push
out
or
sbb
lods
jne
inc
shlb
subb
sbb
sub
or
mov
push
xchg
lds
jne
mov
pop
jmp
mov
push
bound
sti
and
sbbb
and
sbb
jp
add
sbb
xchg
jl
pop
jle
pop
lods
cltd
pop
push
nop
and
add
mov
int
mov
and
dec
xchg
les
adc
popf
xor
sub
js
mov
push
inc
jns
inc
nop
inc
fs
orb
and
and
xlat
dec
xor
fisubl
pop
adcb
push
ret
dec
fdivrs
pop
xor
mov
das
xor
addr16
mov
pop
add
or
xlat
fadd
inc
nop
xchg
push
jb
in
idivb
mov
shlb
stos
insl
hlt
test
push
sbb
mov
mov
pop
into
jp
push
fcmovb
ss
pop
push
mov
sarw
les
or
negb
lret
sub
or
and
jle
push
movsb
sahf
cmp
sarb
cmp
scas
xlat
jno
and
jns
or
lods
pop
mov
mov
test
mov
inc
push
inc
stc
enter
jp
cmpsl
push
mov
cmp
movsl
mov
hlt
aas
jbe
aas
jg
insb
pop
xchg
or
mov
scas
and
movsb
pop
cmp
mov
cld
in
inc
sub
mov
add
mov
sbb
stc
cmp
pop
sbb
sbbl
std
movsl
fdivp
mov
frstor
imulb
and
je
mov
movsl
mov
shll
or
fisubs
and
orb
popf
insl
mov
loop
dec
jns
xchg
int3
stc
mov
pop
ret
mov
fcmovne
xor
pusha
mov
or
shl
hlt
xor
mov
arpl
into
pushf
shl
add
lock
leave
repnz
push
icebp
cmp
fistpll
mov
imulb
or
sbbb
fs
jecxz
sub
out
adc
push
cmc
call
test
xor
arpl
shll
leave
fmuls
std
test
dec
frstor
ds
call
aad
ljmp
adc
in
add
aas
ljmp
cmp
je
cmpsl
xchg
lock
imul
jmp
mov
pop
mov
xchg
cmc
adc
push
mov
mov
fsts
out
sahf
dec
mov
sti
jno
lcall
lods
fimuls
add
push
dec
ret
in
iret
jg
or
pushf
inc
xor
sahf
push
fwait
cmpsb
aas
out
loop
sbb
outsb
or
fs
vmread
decb
cmp
adc
mov
mov
popa
ret
pusha
sbb
xor
sarl
scas
aaa
mov
adc
inc
push
xchg
lret
pop
sbb
inc
sub
xor
and
filds
ss
inc
cli
int3
cltd
ds
ds
adc
mov
jge
repz
inc
add
cmp
xchg
or
mov
mov
or
je
jmp
pop
sbb
jo
and
ret
xchg
das
andl
mov
clc
pop
sti
fstpl
ss
into
out
inc
dec
fsubrp
mov
lods
adc
in
ljmp
xchg
and
mov
pop
cltd
dec
mov
cld
fdivs
aas
popa
sub
xor
xchg
imul
shlb
jge
inc
dec
xlat
scas
gs
xchg
loope
clc
and
xor
stos
sbb
sahf
lret
pop
std
xor
fistpll
out
insl
adcl
mov
xor
mov
jmp
stos
shll
dec
outsb
call
xchg
or
or
add
lcall
fucom
in
inc
pop
out
scas
das
aad
xchg
mov
gs
lock
lock
gs
bnd
xchg
pusha
call
movsb
cmp
je
push
mov
pop
inc
mov
pop
fwait
test
or
and
lds
divb
adc
mov
jecxz
xorb
xrstor
test
jbe
nop
sub
addr16
cmpsb
fsubrs
push
ficomps
insb
ret
aaa
mov
adcl
jle
inc
mov
cs
pop
repz
mov
loop
cmp
and
lock
cmpsl
and
mov
clc
dec
daa
mov
bound
adc
lock
sbb
xor
out
in
lahf
mov
mov
orb
out
pmulhuw
xchg
icebp
stc
shlb
lret
ror
cmpsb
out
das
std
das
dec
pop
pop
popa
dec
je
jo
push
aas
into
fisubrl
adc
pop
test
cmpsb
mov
loope
adc
js
mov
and
mov
subb
adc
push
fcomps
cmpsb
cmpsl
mov
fyl2x
adc
inc
je
ljmp
push
push
enter
pop
in
fmull
adc
push
sbb
xchg
push
int3
or
xchg
dec
cli
xchg
jns
frstpm(287
dec
xchg
ret
andl
fbstp
xor
popa
sar
jae
test
or
aad
rcl
or
xchg
fs
in
enter
dec
pop
push
adc
addl
cs
pop
sarb
xor
mov
add
outsb
out
inc
push
sbb
in
or
sbb
inc
or
mov
jb
jb
jne
sub
jno
bound
sbb
add
lds
cs
cmpsl
sbb
mov
sub
jbe
adc
imul
add
mov
imul
popa
and
mov
aad
cmc
lods
vunpckhps
out
cli
stos
dec
or
xlat
std
test
adcl
dec
les
mov
sbb
sbb
orb
jne
or
pop
test
sub
push
adc
xchg
cmpb
push
addr16
sub
lret
dec
out
test
pushf
xor
jp
stos
inc
xchg
or
das
dec
push
add
pop
xor
stos
dec
stos
aad
cs
lods
fwait
lods
mov
dec
shlb
repnz
test
daa
fs
cltd
out
js
scas
int3
mov
pop
jle
push
daa
lods
sub
mov
call
inc
cwtl
adc
mov
add
adc
fisttpl
add
or
imul
inc
cmpsl
jb
inc
add
ret
push
fprem
testb
lcall
rcrb
andb
mov
or
test
inc
add
push
pop
scas
xor
rcrb
sub
in
push
mov
and
or
add
iret
add
enter
jne
or
mov
in
jp
das
clc
mov
nop
xchg
out
hlt
mov
and
sub
pop
dec
out
out
rcr
push
mov
xor
mov
fdivrp
lcall
add
and
add
sub
mov
or
test
lret
les
adc
push
mov
fistpll
mov
xchg
adc
fstpt
mov
push
dec
popf
icebp
lahf
add
xchg
pop
subb
inc
pop
xor
andl
xchg
and
pop
xor
ss
adc
daa
lds
je
daa
in
fwait
add
lret
mov
cltd
sbb
mov
test
in
jp
es
push
push
push
lret
sub
or
mov
xchg
cmp
and
or
loopne
pop
cmpsb
loop
mov
scas
rsqrtps
cmp
push
stc
sarl
dec
fwait
imul
js
ljmp
mov
nop
loopne
imul
andb
cs
push
les
sub
sub
dec
xchg
nop
pop
add
cmova
leave
adc
rcr
leave
cwtl
popw
rcl
es
add
cmp
fildll
or
out
mov
adc
push
jns
orl
cli
in
pop
sbb
xchg
mov
lods
mov
in
rorl
stos
cmpsb
mov
pop
fwait
lea
loopne
mov
mov
jno
cmp
inc
dec
xchg
mov
cmpsb
out
push
mov
sub
dec
cmp
push
js
shrl
daa
sahf
or
leave
cli
loopne
xchg
lcall
inc
outsb
mov
lret
popf
fs
xchg
lcall
and
sub
dec
cmp
push
xchg
enter
adc
movsl
ss
icebp
ljmp
fbld
sbb
jle
jbe
cmc
cmpsl
ds
incb
aad
out
inc
aam
outsl
push
sbb
add
or
ljmp
lods
pusha
aad
repnz
add
loop
xor
fistpl
pop
ja
xor
mov
sbb
popa
or
jb
in
mov
push
cmp
or
das
je
dec
negl
dec
icebp
push
inc
cmp
adc
jecxz
out
xchg
int3
aaa
mov
gs
ljmp
nop
cltd
arpl
repnz
loopne
jnp
fdivrs
test
push
push
or
inc
mov
cmp
jg
pop
push
lret
push
leave
sub
roll
jg
and
xor
pusha
iret
jae
add
inc
cmp
in
mov
sarb
clc
mov
inc
cmp
imul
dec
jp
repz
inc
inc
repnz
mov
mov
or
mov
cmpb
dec
mov
jne
push
and
mov
bound
sub
cmp
daa
add
fwait
inc
mov
int3
pop
and
cltd
iret
inc
scas
imul
push
loope
jle
repz
and
adc
js
push
mov
jecxz
hlt
jl
subl
scas
pop
and
mov
mov
bound
cltd
iret
add
mov
mov
adc
dec
shl
cs
xchg
inc
lock
jnp
sub
out
mov
lahf
mull
dec
adc
loop
icebp
outsb
lret
pop
inc
inc
leavew
fsub
test
aad
aas
aas
mov
repz
mov
jns
adc
imul
push
lock
aam
push
adc
cmp
stos
gs
pop
mov
mov
aas
icebp
pop
xchg
cmp
xor
out
xor
stos
dec
inc
pusha
addw
push
cmp
mov
mov
xchg
packuswb
push
add
lahf
fsubs
mov
or
lret
inc
sbb
pop
rorl
shrb
outsl
xchg
mov
insb
lods
das
xor
das
ja
mov
add
rolb
push
adc
pop
jmp
rclb
adcl
popf
add
sarl
mov
cmpsb
sbb
loopne
dec
cmpsb
mov
xchg
mov
jmp
aaa
stos
dec
in
in
xor
rcrl
repz
pop
stos
mov
ffree
fnsave
comiss
push
ljmp
iret
mov
mov
stos
push
movsb
sarb
sub
sbb
jg
sub
and
inc
iret
mov
mov
jb
das
jb
pop
rcrl
xchg
jns
push
add
cmp
dec
or
mov
push
test
pusha
jns
arpl
loop
inc
pop
dec
aad
or
in
push
pop
inc
imul
leave
mov
cmc
in
mov
fcompl
pusha
mov
mov
movsl
xor
insl
out
rcll
in
or
incl
pop
int3
sub
pop
mov
fcmovnu
jnp
adc
jl
push
js
xor
jg
out
stc
xchg
sbb
mov
push
int
fimuls
cmp
mov
jne
mov
loopne
fwait
daa
jp
push
jns
add
cmp
sub
adc
add
xchg
inc
xor
add
shrb
dec
mov
imul
fidivrs
test
fstps
cmp
in
out
rcrl
push
cmp
sahf
idivb
sub
int3
jnp
enter
frstor
pushf
adc
rclb
daa
cmp
and
insl
pusha
push
dec
push
pop
arpl
jbe
enter
loope
add
mov
sti
testl
stc
inc
mov
inc
mov
dec
filds
mov
in
xchg
inc
or
or
xchg
stc
es
inc
mov
cld
mov
push
mov
mov
stos
dec
shll
jno
mov
fidivs
lods
jnp
xlat
xchg
cmp
repnz
out
fdivs
cltd
dec
popl
cltd
je
cmpsl
sub
nop
xchg
cmp
push
mov
in
sub
jo
fistpll
fdivrl
jo
xor
imul
mov
faddp
adc
mov
fwait
add
add
insl
sbb
imul
cmp
and
xor
pop
dec
cli
inc
gs
repz
mov
mov
lock
inc
pop
aaa
ret
sbb
rcl
outsb
sbb
cs
xor
dec
pushf
icebp
bound
shl
ret
jno
xchg
mov
outsb
or
inc
inc
jne
int3
xchg
stc
push
shll
fidivrl
nop
or
xor
jl
mov
cmpsl
mov
icebp
sbb
loope,pn
dec
rclb
inc
add
add
lea
sarb
shlb
mov
jno
popa
xchg
lods
sub
sub
mov
push
aas
insb
aam
jge
inc
lret
rolb
nop
add
add
rolw
add
add
arpl
add
add
add
add
adc
add
mov
add
add
add
add
add
or
add
add
aas
xchg
add
xor
add
add
add
add
add
add
add
stos
stos
add
ja
mov
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
lock
add
add
inc
aam
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
mov
aam
add
add
xchg
aam
add
add
jl
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
fcom
add
loopne
add
in
aam
add
aad
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
js
add
cwtl
aad
add
aad
add
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
adc
add
sbb
add
and
add
sub
add
xor
add
cmp
add
inc
add
push
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
jo
add
js
add
mov
add
pushf
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
mov
add
add
add
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
jg
add
insb
fadds
add
add
add
add
add
add
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cwtl
fadds
add
fadds
add
fadds
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
cmp
add
pop
flds
add
inc
add
rorl
jmp
or
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
aam
add
add
in
add
in
flds
add
flds
add
flds
add
add
pop
fiaddl
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
xor
add
cmp
add
dec
fiaddl
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
