jb
add
dec
add
outsb
add
dec
add
add
insb
add
add
je
add
add
jb
popa
add
add
outsb
add
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
popa
add
add
outsb
add
add
je
imul
push
add
je
insb
add
add
dec
add
je
push
add
popa
add
imul
add
add
add
jne
je
je
outsl
add
inc
add
add
jb
outsb
add
je
add
popa
add
add
add
outsb
add
outsl
add
imul
outsl
add
add
add
dec
add
data16
push
add
js
je
add
add
inc
add
je
je
outsl
add
dec
add
add
je
add
inc
add
je
je
outsl
add
inc
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
dec
add
insb
add
add
je
add
dec
add
popa
add
je
imul
push
add
je
insb
add
push
add
js
je
add
inc
add
je
je
outsl
add
push
add
js
je
add
add
inc
add
popa
add
push
add
js
je
add
add
inc
add
je
je
outsl
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
inc
add
arpl
add
add
add
imul
add
je
push
add
js
je
add
dec
add
insb
add
add
je
add
inc
add
jo
push
add
jb
imul
add
popa
add
add
add
add
outsb
add
and
pop
daa
loopne
bound
mov
flds
or
add
add
push
push
or
add
add
add
add
add
add
add
faddl
or
add
add
cmp
jmp
add
add
add
add
add
add
add
out
xchg
add
add
add
add
add
add
add
add
add
add
add
lret
add
add
add
add
add
test
cmp
jl
lea
push
add
add
add
add
sbb
push
add
add
add
add
cmp
add
add
add
add
jo
push
add
add
fiaddl
and
pop
add
lea
push
add
add
add
add
sbb
push
add
add
mov
and
push
add
inc
add
add
or
and
push
add
add
add
add
or
leave
add
add
add
add
and
dec
add
add
add
inc
add
add
add
add
add
add
repz
xor
push
add
push
add
loop
mov
add
add
add
add
add
add
add
add
add
add
add
fiadds
mov
clc
add
inc
add
add
insb
add
add
and
add
add
add
add
jo
mov
add
add
add
add
add
add
add
add
add
add
add
push
add
or
add
add
add
add
insb
add
add
add
jno
inc
add
add
add
add
add
add
in
add
push
add
add
add
push
or
add
xor
push
add
or
stos
add
add
in
mov
add
mov
pop
add
add
mov
int
sub
push
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
lret
add
add
and
add
add
lret
add
add
add
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
sbb
mov
add
lahf
add
add
add
lret
add
add
add
add
add
add
insb
add
add
add
lret
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
lret
add
add
add
lret
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
leave
add
pop
add
add
add
cmp
add
filds
add
insb
add
add
add
add
add
jbe
iret
cmp
add
pop
ret
and
xor
sbb
push
ror
jmp
inc
adc
adc
in
jo
out
and
fnstsw
mov
or
test
cli
sub
add
pop
cli
lock
outsl
loop
int
pmovmskb
mov
insl
adc
jg
sub
mov
cmp
arpl
jo
xchg
cmpsl
xchg
fcompp
push
inc
test
out
cmp
jecxz
or
in
es
jg
int3
cwtl
or
fxch
repz
sub
sub
cmp
sbb
sub
decb
mov
xlat
enter
mov
mov
pop
sarl
add
cmp
bound
xchg
fmuls
cmp
dec
dec
lcall
aas
pushf
movsl
mov
or
inc
mov
sbb
out
inc
dec
cld
inc
xchg
and
add
xorb
rorb
xchg
add
aad
lods
xchg
mov
scas
notb
xchg
int3
in
insl
roll
jae
andb
sarb
push
imul
mov
push
je
cmpsb
jo
fwait
fs
jo
shrl
mov
inc
test
mov
aas
xor
cmp
pop
aam
sbb
das
add
out
jno
test
out
icebp
pop
sbb
pop
ret
into
xor
lahf
mov
dec
insb
inc
push
mov
cmc
adc
aam
loopne
jne
mov
inc
push
sub
inc
cmp
stos
addr16
mov
sbb
aaa
icebp
pop
inc
aam
shrb
cmp
jle
cmp
je
cs
les
pushl
das
cmpsb
inc
jg
imul
pop
imul
add
push
lret
fcmovnu
push
dec
in
gs
pushl
mov
int3
dec
mov
insl
jno
gs
gs
inc
stos
orl
cmc
mov
xchg
and
or
xchg
pop
mov
adc
pop
bswap
jl
jo
lahf
inc
cmp
fbstp
lret
pop
rcll
jo
fnstsw
xchg
add
test
adc
pop
stos
scas
fidivrl
dec
ret
push
outsl
pop
xor
insb
cltd
mov
push
pop
cltd
rsqrtps
adcl
lods
iret
ror
mov
inc
in
or
jmp
js
push
mov
pushf
out
movsb
mov
rorl
ljmp
push
sub
lret
test
sub
mov
rcl
cs
cmp
rorl
movl
std
pop
push
mov
push
std
cld
sahf
adc
xchg
add
add
add
add
add
rolb
add
add
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
push
mov
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
push
call
mov
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
insl
mov
add
adc
outsb
sbb
xor
cmp
inc
xorb
in
lock
shlb
sub
xor
add
adc
pusha
xchg
jo
inc
mov
cmpsb
lock
mov
scas
jbe
data16
xchg
push
shlb
mov
xchg
out
xchg
cmp
mov
adc
data16
mov
mov
cltd
inc
cltd
addr16
push
xor
mov
and
jecxz
shll
in
andb
nop
cltd
sbb
adc
aam
and
dec
mov
arpl
inc
pop
ja
mov
aam
add
push
xor
push
mov
pop
pop
jge
xor
scas
gs
dec
inc
jge
inc
out
xchg
popl
mov
jecxz
nop
mov
insl
jl
stc
aad
das
stos
movsl
ss
pushl
sbb
mov
loopne
jg
xchg
cmpsb
adc
lock
nop
leave
movsl
stos
movsl
inc
xor
call
mov
inc
pop
and
andl
roll
xor
add
jl
pusha
xchg
xor
inc
mov
cmpsb
push
push
and
jbe
data16
push
shlb
dec
push
mov
jle
push
cli
add
test
icebp
xor
push
icebp
and
xor
addr16
mov
xchg
or
adc
sub
and
in
cld
or
push
xchg
jbe
lahf
add
and
mov
cmpsb
mov
jbe
data16
lock
shlb
es
xor
add
adc
pusha
xchg
jo
inc
mov
cmpsb
mov
jbe
data16
lock
shlb
es
hlt
mov
mov
dec
push
insb
add
sub
ss
imul
and
xchg
hlt
test
and
cmpsb
pop
jno
and
mov
mov
int
insl
mov
lds
pop
out
cmp
jb
xor
outsb
out
rcrb
cld
mov
add
and
lret
stos
sbb
xor
out
fdivs
scas
adc
pusha
or
dec
mov
xchg
cmpsb
sub
in
lds
aaa
xchg
mov
cmp
mov
mov
scas
dec
fisubs
cmp
sub
sar
enter
rcrb
in
adc
cmp
lock
pop
aam
test
inc
lds
push
xchg
popa
test
jle
jbe
test
outsl
shll
xlat
jge
outsb
subb
dec
fcmovbe
mov
movsl
and
fwait
repz
bound
in
dec
lret
mov
xchg
xchg
sub
dec
adc
adc
xchg
jge
jnp
int3
xchg
xor
jbe
out
sbb
mov
inc
adc
fwait
or
nop
cld
jl
add
sbb
and
inc
mov
pop
or
test
enter
movsl
fcom
cli
lds
js
lret
dec
xchg
aam
mov
lret
add
or
pop
sub
or
in
scas
int
mov
cmp
sub
xchg
sub
push
rcll
dec
mov
push
idiv
cs
aaa
mov
jns
fsubl
inc
mov
icebp
cld
daa
inc
jge
or
pop
jb
pop
push
mov
mov
xchg
insb
call
mov
and
xchg
mov
add
leave
jmp
fwait
ret
jne
ret
cld
xlat
jp
jl
and
add
inc
push
adc
movsb
add
or
mov
pop
ret
mov
or
scas
xchg
pusha
sub
dec
cmp
scas
in
cmp
bound
shrb
jo
lcall
or
xor
jb
aaa
push
bound
sub
push
repz
mov
popa
pop
jbe
sub
popl
mov
lods
xchg
and
xchg
push
mov
in
inc
aas
and
out
mov
in
mov
push
inc
push
pop
lods
inc
out
adc
jle
dec
mov
mov
mov
scas
outsl
jmp
pop
xchg
in
adc
jmp
out
adc
es
push
push
cmp
or
addb
or
mov
stos
ficoml
pop
mov
sbb
inc
movsl
push
jle
mov
sbb
sbb
mov
repz
test
stos
js
xorb
daa
scas
xchg
sbb
pop
mov
pop
xchg
inc
jae
xlat
in
mov
test
in
ds
adc
fsub
xchg
rclb
jnp
inc
stos
jge
sbb
xchg
push
loopne
sbb
adc
mov
and
loop
xchg
inc
cmpsb
in
adc
jge
or
push
rolb
mov
or
cmp
xchg
pusha
fdivr
push
mov
cmp
mov
out
add
mov
jg
xchg
out
push
mov
pop
xor
fbstp
and
dec
hlt
jns
stc
xchg
add
sbb
cli
add
ret
in
lret
cmpsb
fnstenv
inc
in
mov
loopne
or
fpatan
cmp
xchg
adc
push
dec
out
push
jmp
psrlq
clc
mov
inc
and
sub
pop
inc
in
lods
mov
mov
int
or
repz
mov
jne
mov
lret
push
mov
xchg
push
push
outsb
cmp
xor
movsl
fidivl
cmp
aam
or
cmpsb
mov
xchg
frstor
mov
mov
loopne
test
shl
jmp
jno
push
popf
mov
sbb
lahf
fs
sbb
push
ret
push
jbe
xchg
cld
xor
movsl
push
sub
call
or
xchg
shlb
arpl
inc
test
push
shrl
jo
mulb
mov
iret
fadd
stc
rclb
ss
std
push
sub
mov
xchg
mov
jl
or
push
inc
movsl
push
lock
push
mov
adc
push
add
mov
pop
xchg
push
jmp
adc
jo
and
nop
dec
mov
jo
adc
pop
mov
mov
leave
pop
in
xchg
push
push
push
xchg
mov
dec
fldt
xchg
mov
js
in
mov
inc
js
lea
lea
pop
cmp
mov
int
inc
dec
mov
inc
and
rcll
gs
repz
lahf
ljmp
mov
cli
inc
push
lahf
sbb
jmp
das
pop
bound
pushf
adc
shlb
xchg
out
jmp
mov
lds
and
arpl
into
ret
or
lods
inc
mov
jns
popa
movsl
clc
dec
sbb
movsl
or
adc
addl
inc
dec
cmpsb
insl
add
daa
ljmp
mov
popa
adc
cmpl
in
sub
pusha
jno
loope
dec
cli
dec
mov
je
fstpt
mov
and
cmc
les
rcl
mulb
mulb
hlt
cmc
push
out
gs
and
sub
out
dec
add
jnp
mov
outsb
pop
ja
xor
sub
adc
sarb
hlt
negl
push
bound
push
cs
cltd
loop
test
jmp
mov
mov
jg
push
mov
lods
lea
dec
xchg
lret
test
repz
dec
jmp
movl
mov
dec
popa
lea
mov
xchg
aaa
sub
lods
jae
aad
cwtl
stos
scas
push
in
scas
sub
dec
outsl
int3
push
pop
es
cmp
shlb
popa
in
test
addr16
lret
fistps
les
ja
sti
sbb
cmpsl
cmp
rorl
or
sbb
or
add
pop
push
push
cmc
and
mov
cmpsl
sub
add
in
into
lahf
aam
mov
or
inc
sbb
out
stos
cmpsb
fsub
in
loopne
ja
and
pop
push
cmp
push
lahf
add
jne
inc
mov
ds
jnp
mov
ds
std
cmp
je
and
mov
mov
xchg
mov
fnstenv
out
imul
mov
mov
mov
cli
sbb
fs
mov
or
push
incb
imul
loope
dec
jle
jp
loop
jge
pop
and
dec
bound
xchg
adc
push
popf
pop
icebp
daa
pop
cmp
fs
mov
rorl
imul
mov
stos
jno
addb
cmp
out
mov
gs
mov
outsb
and
popf
jno
imul
cmp
outsb
rcl
fldenv
lea
add
sbb
xchg
and
es
jp
jbe
repz
inc
add
js
pop
push
mov
cmp
scas
push
enter
or
push
mov
jp
pop
push
jle
or
sbb
sti
xor
cmpsl
adc
pop
push
fst
das
nop
pushf
add
jmp
cmpsl
ja
push
clc
cmc
loope
test
xchg
fmul
pushf
sbb
or
das
xchg
icebp
das
test
and
lds
ljmp
lret
shrl
lret
loop
mov
cmp
mov
lods
scas
inc
loope
testb
mov
sub
jl
loop
stos
add
xor
pusha
in
lds
fsts
fidivrs
add
fwait
insl
jecxz
dec
enter
pop
loope
push
cld
xor
adc
and
inc
in
dec
enter
jp
into
clc
ret
arpl
stc
fwait
add
inc
stc
shrb
movd
lock
jl
test
js
cmp
cmp
or
mov
lret
xor
sbb
push
lret
sbb
mov
das
aad
sbb
push
pop
jae
je
cwtl
dec
aam
cltd
cwtl
lods
jg
jecxz
aaa
ret
int
inc
push
pushf
lret
fsubl
and
adc
mov
xchg
mov
arpl
sub
cli
sub
xor
fiadds
dec
inc
mov
or
lea
cmpl
push
outsl
add
in
ret
adc
stc
and
cwtl
aaa
sbb
hlt
in
jno
xchg
xchg
scas
xor
js
lods
push
push
shrl
imul
pop
rorb
cmp
loop
ret
jns
pop
xor
inc
js
loop
and
push
repnz
stc
and
popf
sti
pop
or
shll
cmp
xchg
ljmp
cmp
gs
xlat
inc
cs
roll
sti
inc
adc
sbb
sbb
ss
in
push
pop
adc
lods
xchg
jnp
ljmp
dec
rol
scas
sbb
ret
repnz
outsb
int3
mov
jno
mov
jne
push
std
loope
dec
bound
je
inc
outsb
mov
loope
mov
or
lock
rcrl
jbe
mov
dec
clc
jl
gs
popf
ljmp
xchg
pusha
bound
sub
cmp
add
cs
hlt
sub
jbe
lcall
std
sbb
loope
imul
add
fidivl
sbb
inc
dec
fsubs
pushf
xchg
sub
and
push
lret
mov
push
jg
aam
dec
mov
fwait
dec
adc
mov
test
mov
imul
testl
mov
call
xchg
leave
inc
push
lcall
or
inc
outsb
pop
jg
icebp
xlat
cmp
in
inc
cmpsb
and
fwait
into
out
and
mov
add
pusha
pop
sarl
pop
scas
outsb
stos
pop
outsl
mov
and
popf
cmp
out
sub
lcall
mov
jbe
xchg
and
jmp
jge
lret
out
pusha
in
jne
xchg
rolb
cwtl
push
and
pop
les
clc
mov
adc
or
leave
lods
test
inc
push
jge
inc
or
xor
fisubl
repz
lods
stc
leave
loop
pop
negl
std
pop
std
and
gs
xchg
ja
repz
dec
andb
jl
leave
std
cmp
pop
dec
ret
pop
loop
adc
and
add
pop
iret
shl
push
push
sbb
jl
cs
sub
sbb
sarl
adc
outsb
xor
mov
int
iret
mov
repnz
or
rcll
mov
mov
lcall
dec
xchg
into
adc
outsb
add
jne
mov
and
jge
sarb
stos
xor
mov
in
dec
int
movsl
and
pop
pop
insl
xor
push
inc
popf
or
inc
or
test
in
xor
jp
ljmp
roll
jns
mov
inc
dec
sub
outsl
sbb
outsl
incb
xchg
imull
sbb
inc
aam
mov
push
movsl
cmp
or
out
and
or
cli
cmp
jle
inc
sbb
jp
clc
xchg
mov
jp
push
and
cltd
imul
jp
loope
and
add
lods
xchg
cmp
emms
int3
jmp
aam
lahf
leave
lods
xor
cld
push
das
clc
repnz
jp
lock
sub
sbb
es
out
testl
insl
int3
rolb
in
dec
stos
jo
mov
add
dec
popf
fidivrs
pop
fiaddl
int
lods
aad
mov
fmulp
movsw
xchg
fsts
add
xor
aad
cli
lret
mov
out
shl
mov
jnp
or
cmc
jge
mov
js
rcll
cmp
out
enter
jg
mov
xor
scas
jb
sahf
jns
xor
aam
cwtl
out
xor
push
cld
scas
pop
mov
mov
xchg
pop
movsl
mov
incb
rorb
aam
enter
filds
pop
dec
sub
xchg
or
inc
test
mov
and
das
jnp
aas
nop
cwtl
xor
adc
in
or
jo
mov
xor
popf
sbb
lret
lea
jp
pop
jecxz
jno
rcl
xor
loopne
lret
dec
imul
jecxz
inc
decb
mov
divl
dec
sub
std
sub
imul
push
pop
xchg
cmp
ret
sbb
movsb
xchg
stos
adc
ss
aam
pop
enter
add
or
xchg
pop
mov
rcrl
xchg
pop
imul
in
clc
adc
push
cmpb
rorb
adc
outsl
xchg
push
cld
xor
dec
sub
and
out
cwtl
xor
std
out
push
add
jl
fmul
cli
dec
scas
arpl
xchg
mov
cmpsl
xor
sti
add
fmull
mov
stos
out
and
pop
ret
jl
mov
xchg
dec
mov
dec
sub
push
rcrl
cld
dec
push
clc
iret
push
lds
xlat
mov
add
cli
lds
into
stc
dec
roll
and
jg
cmp
cld
push
bound
or
adc
push
push
into
call
xchg
dec
test
lret
aam
arpl
push
clc
xlat
push
xlat
xchg
add
jnp
in
push
roll
and
test
out
ret
int
fsubl
add
sbb
jb
sbb
or
lds
movsl
lret
call
jge
sbb
daa
mov
ja
in
or
xor
inc
push
inc
lods
aaa
pusha
fdivs
mov
mov
pop
add
adc
push
mov
sti
cwtl
orb
repz
push
sub
test
fwait
and
inc
pop
mov
inc
push
jns
jbe
and
nop
imul
lret
loop
call
push
mov
xchg
dec
mov
adc
pop
bound
xchg
jns
mov
sbb
aas
and
adc
loope
mov
aaa
xorb
or
xchg
adc
cmc
lea
cmp
cmp
test
in
shrl
movl
xchg
adc
es
cld
into
in
in
pop
into
cmpsl
test
dec
jns
ljmp
inc
ljmp
cld
bound
xor
jb
inc
dec
push
fcmove
jp
xchg
adc
hlt
fmul
sarl
scas
lret
movsb
or
sub
pop
inc
pusha
jnp
dec
sub
dec
gs
test
push
sub
xor
sti
jbe
cmpsl
mov
inc
push
daa
scas
js
cmpsb
mov
cld
stos
in
es
sbb
sahf
scas
cmpsl
mov
popl
push
pop
outsb
or
xchg
dec
push
jge
cltd
add
xchg
pop
shlb
pop
pop
dec
xorl
push
xchg
test
xchg
add
jae
cltd
pop
imulb
popa
jno
adc
test
push
movsb
cld
out
adc
push
fbstp
dec
jb
jp
sbb
mov
and
movsb
movhps
arpl
jp
ljmp
or
add
push
cld
mov
sbb
pop
jg
adcb
test
add
sbb
out
iret
pop
dec
xchg
imul
pusha
cwtl
jbe
jno
test
arpl
lock
sbb
adc
stc
aaa
out
inc
xor
cld
imul
add
add
xchg
sbb
add
lds
or
mov
fcompl
icebp
adc
scas
aaa
popf
xor
xor
leave
inc
movsl
jp
push
mov
movsl
xchg
pop
mov
std
fnstsw
les
mov
push
mul
xchg
and
popl
jl
inc
add
xor
bound
jns
or
in
mov
fdivl
int
pop
sbb
push
lret
ja
jb
mov
xchg
xor
jp
dec
xor
xchg
add
xor
addr16
ljmp
negb
pop
es
mulb
and
fdivrp
or
bound
stc
inc
addr16
jmp
sbb
ret
into
je
push
push
cmpsl
pop
clc
xchg
sub
std
push
jecxz
sub
dec
cld
pop
pop
iret
add
call
insb
sti
and
add
rolb
loopne
repz
in
leave
movl
aad
lret
mov
push
pusha
push
xchg
lds
rcr
pop
push
cmp
mov
test
or
jge
sahf
sti
add
icebp
mov
stos
scas
lock
jae
scas
cld
test
and
xor
ja
pushf
sbb
movsl
pop
aad
lods
adc
test
cmp
jb
leave
fwait
mov
outsl
xchg
mov
dec
push
add
inc
and
sub
mov
mov
cli
inc
cmp
stos
adc
cli
idivb
orl
in
ljmp
imul
mov
insl
outsb
lcall
xchg
aam
dec
push
inc
out
xor
add
push
scas
jnp
gs
mov
jecxz
xchg
test
sbb
pop
adc
dec
jb
cmpsl
bound
lods
outsl
loope
push
dec
sahf
adc
sub
loopne
call
lds
cmpsb
sub
push
xchg
les
in
push
sub
pop
sub
dec
into
popa
xchg
ja
test
sti
mov
jo
push
loopne
in
sbb
subl
jle
shll
add
xor
rcr
push
out
xchg
mov
and
cmp
pop
inc
movsl
enter
push
repnz
cltd
es
sub
jno
xchg
xchg
into
stos
orl
incb
push
sbb
ret
in
pop
in
arpl
adc
lock
sbb
fucom
add
addl
test
xchg
out
mov
mov
call
jo
jge
mov
clc
or
add
inc
or
and
sub
int
out
shll
jae
shlb
outsb
xor
xchg
xor
cli
and
xchg
pop
inc
and
or
cltd
cmp
jb
jnp
push
and
sub
outsl
loop
adc
out
jbe
fildll
aaa
dec
dec
fdivrs
jp
sahf
push
or
mov
xchg
or
mov
add
dec
jo
cs
fs
jae
test
out
or
bound
loopew
js
pop
dec
rorl
inc
fdivr
aas
jno
push
shlb
shlb
in
push
adc
shrb
clc
push
add
aad
xor
in
pop
stc
lahf
adc
or
imul
lds
pop
and
call
repnz
setno
aaa
inc
rorl
test
mov
cmpsb
push
mov
stc
mov
mov
xchg
js
pushf
add
ljmp
xchg
clc
adcl
inc
sub
inc
inc
mov
xchg
fidivs
add
mov
mov
pop
xor
sysexit
decb
jno
enter
sahf
jnp
repz
ret
adc
xchg
hlt
out
sti
in
loopne
mov
add
popa
iret
test
mov
mov
les
or
dec
xchg
sbb
mov
in
sbb
cs
in
adc
push
pop
out
aam
mov
lcall
mov
inc
push
pop
mov
out
sub
out
into
das
mov
push
bound
pop
cld
ret
stos
out
pusha
hlt
jno
xchg
movsb
cmp
stc
push
mov
out
adc
pop
leave
shrl
cmp
pop
sbb
out
mov
push
sarl
sti
jno
sub
lea
xor
aaa
sub
hlt
and
sbb
adc
out
or
sub
push
insb
push
dec
add
movsb
sbb
cltd
arpl
outsl
and
in
cwtl
dec
push
ret
add
shlb
call
sarl
push
jp
jb
mov
mov
mov
cs
xor
adc
xor
stc
lods
jge
inc
push
push
cmpsb
xchg
hlt
or
in
cld
sbb
adc
or
popf
lds
mov
in
jno
call
dec
dec
cmp
xlat
jbe
mov
jge
dec
iret
rcr
scas
or
int3
lods
mov
push
fildl
into
hlt
movsl
inc
dec
add
popf
pop
adc
cmc
lret
ret
inc
push
adc
sahf
adc
dec
dec
sbb
mov
call
mov
sti
xchg
mov
xchg
pop
leave
lods
movsl
sub
push
pop
jecxz
sbb
dec
pushf
sbb
sbb
adc
sbb
in
or
loope
mov
loopne
push
scas
in
mov
ret
or
sub
inc
outsb
pop
fcomps
out
scas
adc
xchg
in
cmp
dec
jmp
int3
sub
loop
xchg
bound
or
imul
mov
mov
cmpsl
cltd
fwait
dec
adc
mov
pop
repnz
out
xchg
arpl
inc
inc
mov
out
das
adc
xchg
and
push
push
xchg
jo
inc
mov
cmpsb
mov
jbe
data16
lock
shlb
es
xor
add
adc
pusha
xchg
jo
inc
mov
cmpsb
mov
jbe
data16
lock
shlb
es
xor
jbe
out
xchg
je
inc
mov
cmpsb
movsb
mov
mov
data16
jmp
es
sbb
mov
cmp
pusha
xchg
pusha
xchg
shlb
sub
adc
leave
das
fstps
dec
xchg
jle
outsb
mov
xchg
jle
pop
mov
repz
into
adc
and
xor
arpl
xchg
jle
outsb
mov
ret
push
sarl
jecxz
repz
into
adc
inc
mov
arpl
xchg
jle
outsb
mov
ret
push
sarl
jecxz
repz
shlb
adc
aaa
lock
shlb
dec
out
sbb
pop
add
aad
sbb
adc
and
mov
call
repnz
cmp
sti
sub
imul
sbbl
cmpsb
xchg
lds
push
out
inc
xchg
pop
pop
inc
in
jb
ret
movsb
in
add
test
ds
pop
pusha
fistpl
xchg
or
push
ret
rorb
mov
jae
enter
out
mov
push
cmp
jne
dec
movsl
ret
add
movsl
into
inc
xor
out
fbld
adc
mov
imul
mov
out
iret
rol
sub
add
daa
stos
xor
jbe
jae
orl
mov
push
sarl
jecxz
repz
into
adc
and
xor
arpl
inc
sbb
or
jb
inc
xchg
pop
xchg
lahf
outsl
lret
dec
sbbb
out
cli
loope
push
pop
ret
mov
std
mov
repz
jne
pop
sti
sub
cmp
push
scas
sbb
pop
xlat
outsl
push
scas
push
sarl
jecxz
repz
into
adc
and
xor
arpl
xchg
jle
outsb
mov
ret
push
sarl
jecxz
repz
into
adc
and
xor
arpl
xchg
push
dec
les
lock
cmp
cmp
push
jle
in
daa
int3
cmp
mov
lcall
lret
inc
test
inc
and
mov
sbb
jns
jbe
popf
xor
mov
insl
ds
dec
or
cs
les
push
ja
mov
xor
icebp
xchg
sarb
fs
loop
adc
test
jbe
mov
aad
shrl
push
leave
push
xchg
jne
or
js
int
xchg
mov
sub
xchg
jns
cmpsb
js
in
outsb
push
jno
sbb
leave
test
insb
shll
dec
pop
decl
leave
sub
popa
pushf
dec
mov
cmp
enter
cmp
cmp
add
outsb
xor
sbb
pop
pop
repnz
and
repnz
pop
push
lock
in
mov
mov
test
pop
insl
lock
aam
mov
push
sub
sub
popf
adc
inc
ja
jno
rcrb
add
lahf
mov
pop
sub
sub
jge
push
dec
xchg
out
mov
jp
daa
adcb
scas
aas
lret
add
in
stc
daa
lahf
sub
or
xchg
cmpsl
and
pop
jo
mov
movsl
and
push
pop
sub
cld
cmpsb
adc
xor
cltd
and
rcll
leave
insb
incl
ret
lahf
call
out
xchg
in
mov
pop
lds
and
clc
add
pushf
stos
mov
push
push
mov
aas
xlat
add
mov
testb
rorb
or
test
jo
jnp
push
daa
dec
bound
xchg
jae
jecxz
les
add
sub
nop
mov
and
out
cld
cmp
inc
jle
nop
mov
test
cmp
jmp
mov
stos
sub
sbb
lods
xchg
mov
xor
mov
int
insl
ds
mov
cmp
loopne
out
popa
mov
lret
jg
jmp
mov
nop
jns
pop
lahf
mov
inc
inc
jo
pop
xor
aad
cmpb
mov
ja
bound
cwtl
jmp
xchg
inc
cmp
dec
jnp
aaa
inc
mov
popa
shr
sbb
cmc
or
add
adc
into
push
les
push
xor
loope
ds
std
and
dec
outsl
mov
std
lret
xor
loopne
mov
and
jl
xor
or
std
add
aad
push
mov
out
fcoml
mov
or
jmp
in
jmp
xor
ret
mov
xlat
jp
jl
mov
xor
sub
lods
xchg
mov
and
int
adc
das
rclb
pop
orb
cs
call
mov
loopne
clc
fisubrs
fimull
leave
int3
or
pop
sbb
mov
dec
leave
sbb
mov
clc
pushf
add
adc
add
ss
inc
fsub
nop
into
rolb
cmp
pop
and
jb
and
stos
push
push
add
pop
inc
jnp
int3
xor
fsubl
dec
bnd
orl
lods
ret
push
daa
jmp
inc
je
lods
add
int3
ja
jge
cmpb
gs
out
jl
inc
insb
popa
lods
xlat
ja
inc
ds
imul
out
adc
sbb
fstpl
fs
fcomp
xchg
pop
mov
insb
orl
mov
je
push
adc
fstpt
jmp
pop
cli
std
sub
mov
stos
insb
test
test
mov
pop
stos
lret
movsb
out
int
nop
scas
mov
test
pop
cli
or
dec
inc
sub
hlt
sbb
mov
lock
sbb
and
les
mov
repnz
mov
sarb
pop
rorb
add
cld
add
sbb
pop
sub
xor
dec
inc
jecxz
nop
clc
mov
loope
mov
adc
sbb
pop
dec
mov
fnsave
adc
sti
das
pusha
push
shl
clc
clc
xchg
fsub
loope
stc
in
gs
test
adc
pop
rorl
and
cmp
ret
into
or
push
sub
xor
mov
xor
cli
test
nop
inc
cmp
add
loope
repnz
push
inc
imul
movsl
insl
out
adc
jb
xor
xchg
pop
idiv
jp
inc
jns
test
and
dec
sti
pop
xchg
cmpsb
and
mov
rorb
xchg
jmp
pop
cmp
andb
and
xchg
fcompl
shrb
jmp
cmpsb
xor
mov
or
stc
iret
mov
dec
jb
xor
fwait
fs
push
int3
pop
cmpsb
insl
shrb
inc
loopne
scas
mov
mov
subb
pop
adc
xor
cmp
addb
cmp
jge
mov
and
sub
pushf
xchg
add
inc
mov
mov
cli
push
dec
subl
aad
enter
call
shrb
ljmp
or
push
sarb
test
pop
fcoml
pop
arpl
jb
cmp
jge
sub
jg
in
xchg
fmulp
jmp
xchg
cmp
orl
mov
mov
mov
leave
addb
addr16
iret
pop
dec
and
pop
ret
imul
pop
push
js
add
out
out
fistpll
aas
cltd
scas
cltd
insl
mov
jg
lahf
add
dec
lahf
pop
dec
in
and
in
icebp
push
sub
cmp
xor
into
xor
rorb
lods
out
stos
mov
loopne
cmp
dec
xchg
add
loopne
push
jae
push
and
dec
cmpsb
outsb
and
fs
add
or
xchg
cli
outsl
jg
mov
mov
mov
sub
mov
mov
sub
mov
add
divl
arpl
sub
in
and
jns
pop
sbb
sub
jp
cld
andb
mov
out
xor
or
mov
faddl
push
icebp
mov
mov
out
lea
mov
ror
jmp
mov
push
imul
add
cmp
stc
pushf
fwait
xorl
sbb
pop
dec
loop
mov
cmp
xor
popa
call
clc
loope
cmpsb
in
xchg
cltd
inc
btr
push
rcrb
lds
ror
fnstcw
aas
cmp
loop
loope
outsb
adc
pop
mov
jbe
lods
mov
adc
fimuls
dec
pop
ret
aaa
xchg
push
xorb
sti
aaa
add
clc
inc
push
cmc
je
sub
addr16
pop
arpl
addr16
or
mov
dec
push
adc
sbb
jecxz
imul
pop
imul
cmc
mov
dec
cli
mov
add
dec
jnp
adc
je
fimull
push
sarb
add
shr
mov
adc
jne
cmp
inc
xlat
je
dec
jnp
add
mov
rorb
dec
fsubl
mul
fstpt
xchg
dec
xorl
add
enter
push
aad
pop
int3
sub
jno
sbb
mov
rcll
orb
jmp
fcomps
imul
xchg
ljmp
or
cmp
sub
int
dec
push
out
pop
mov
sbb
pop
fnstcw
dec
pop
mov
clc
lds
data16
ret
xchg
fimuls
fldenv
cmp
outsl
int
cltd
pop
stos
dec
rcrb
add
pop
negb
ljmp
pusha
pop
adc
xchg
jg
push
test
adc
in
lahf
sbb
cmp
jg
nop
lods
adc
aam
lds
mov
inc
add
and
inc
dec
jecxz
mov
iret
inc
add
lods
sbb
sbb
jp
pushf
shr
fwait
pusha
mov
cmp
cmp
bnd
daa
arpl
mov
popa
mov
dec
stos
sahf
aam
test
xor
xchg
jb
cltd
cs
jge
lds
push
insl
xchg
xor
iret
jl
cmp
cmp
cmp
fildll
mov
imul
pop
loop
shrl
adc
xor
xor
fwait
test
das
push
mov
cld
mov
test
insb
lret
push
sub
popa
inc
scas
cs
nop
mov
test
inc
cmpsl
mov
sub
push
mov
aas
mov
outsl
jmp
adc
and
popa
mov
pop
or
fwait
pop
mov
decb
fadd
sub
jo
add
cmp
inc
cmpsl
cltd
xchg
in
clc
mov
jo
add
fs
lds
int
and
mov
cmp
cmp
rorb
aad
iret
cltd
push
decl
mulb
or
sub
mov
cs
adc
rcrb
rcl
push
pop
lock
cmpsb
sbbb
test
aas
or
pop
inc
jecxz
iret
js
mov
call
fldt
scas
xchg
ret
lcall
mov
xor
sbb
xchg
xchg
jg
ror
push
pop
outsl
dec
sub
cltd
lea
fbstp
in
cmpsb
pop
fst
jg
aas
stos
adc
std
add
test
adc
sbb
and
inc
out
push
sbb
fnsave
and
scas
pop
jg
cli
pop
sahf
and
data16
dec
and
nop
pop
aad
lret
stos
out
mov
test
mov
add
loope
das
movsb
icebp
push
xchg
pop
pop
adc
sub
inc
mov
adc
push
dec
pop
inc
cmp
push
mov
xor
mov
movsl
inc
push
aad
in
cmp
push
and
hlt
jecxz
fcomi
or
sub
sbbb
cmp
jb
imul
cmp
and
fdivl
xor
cmp
lock
lea
popa
test
dec
mov
outsb
inc
cmp
mov
and
shlb
mov
mov
fcmovnu
int3
push
pop
push
repz
fistps
push
sbb
out
test
iret
jp
jne
stc
test
jge
fwait
cwtl
jnp
scas
cltd
dec
push
cmp
test
cwtl
or
adc
inc
out
push
mov
xlat
sarl
mov
cmpsl
cmpl
mov
insl
jge
sbb
mov
pop
leave
jbe
outsl
aam
inc
aas
sbb
outsl
lahf
jnp
leave
lea
xor
mov
add
mov
outsl
mov
repnz
bound
out
test
insb
push
pushf
xor
or
jp
xchg
dec
lea
mov
jp
cmpb
add
sbb
adc
ds
jl
mov
inc
inc
fcoms
xlat
loopne
popf
or
out
fisubs
push
incl
or
pop
or
xchg
or
mov
lret
xacquire
jg
stos
inc
sbb
add
mov
pop
mov
and
mov
insl
pop
data16
imul
das
pop
dec
mov
cld
fists
imul
repz
xor
and
or
push
movsl
or
xor
mov
push
inc
mov
cwtl
aas
or
jmp
sub
fldlg2
jno
lock
mov
mov
add
xor
adc
sti
lcall
or
or
add
outsl
rcrl
dec
fwait
dec
push
sbb
mov
adc
xor
pop
cmp
stos
lcall
bound
clc
scas
cmpsb
stos
lods
mov
lods
push
testb
popf
into
or
sbb
sahf
mov
mov
dec
jecxz
mov
and
je
mov
pop
insl
subl
and
mov
dec
aas
xor
push
push
adc
test
and
jecxz
ret
mov
cmp
pop
push
adcb
adc
push
pop
roll
je
jb
sub
pop
inc
je
xor
adc
fldenv
adc
je
pop
cmpsl
int3
mov
cmp
hlt
imul
rcrl
mov
jo
mov
push
mov
pop
mov
lock
int3
adc
mov
mov
mov
jo
pop
sbb
lcall
xorl
or
loope
mov
mov
test
push
aas
filds
out
cmc
dec
jne
das
lea
push
roll
mov
fsubrp
inc
adc
push
lods
orl
ja
inc
or
repz
cld
andb
mov
cs
push
ficomps
adcb
xchg
dec
jnp,pt
in
insl
mov
pop
mov
sbb
hlt
outsl
divb
xor
pop
cmp
sub
movd
iret
shll
daa
or
push
movl
cltd
add
pop
mov
movsb
sbb
push
xchg
test
mov
in
push
xchg
aam
adc
push
pop
inc
call
mov
push
shr
lods
add
pop
sub
mov
sub
push
sbb
in
out
hlt
pop
and
ret
in
insl
aad
cmpsb
or
sub
lret
nop
das
and
outsb
xchg
insl
fs
lahf
xor
push
je
lret
pop
arpl
cld
jmp
sub
xor
sbb
sbb
mov
jmp
inc
jbe
stc
lcall
xlat
jmp
dec
xchg
mov
xchg
cmp
arpl
fildl
into
cmpsb
mov
xchg
cltd
dec
mov
xchg
xor
xchg
mov
sbb
dec
mov
mov
daa
cmp
cmp
pop
jmp
icebp
pop
lea
int3
dec
rclb
imul
mov
and
repz
mov
jns
xor
imul
jp
add
pop
gs
cmp
push
iret
mov
xor
jo
into
jae
jne
fimuls
outsb
cmpsl
sub
dec
call
aas
adc
cwtl
shl
mov
stos
out
pop
jbe
mov
cwtl
cmp
aas
cwtl
icebp
aaa
xorl
xchg
mov
mov
sti
fnstcw
xor
mov
idivl
lret
out
jmp
fisttpl
and
fiaddl
stc
cwtl
sub
xor
jmp
mov
cmpsb
xchg
ds
xchg
jo
mov
in
fsubr
xor
fildl
leave
nop
jp
mov
cmpsb
jo
cmp
in
pop
inc
movsb
mov
in
into
cld
test
das
adc
enter
fwait
push
in
mov
and
les
xchg
nop
pop
jae
add
xchg
or
mov
call
push
cmp
scas
mov
cmp
cmpsb
xchg
shll
push
mov
xchg
rol
ljmp
pusha
jns
lods
pop
arpl
subl
test
fimuls
cmp
dec
sbb
std
cmp
data16
cmp
sub
jnp
mov
mov
mov
bound
subb
dec
sahf
stos
pop
data16
cmp
inc
out
mov
inc
fdivrl
mov
lahf
imul
push
scas
fs
test
push
das
dec
and
daa
jmp
cwtl
lock
cmpsb
ds
mov
shr
xor
dec
sbb
das
aam
mov
sahf
cs
jg
out
fadds
push
sub
xor
cld
ret
mov
cmpl
insl
pop
push
lock
dec
adc
or
pop
jle
stos
jno
in
bound
xchg
mov
insb
xchg
inc
sbb
lcall
jl
pushf
es
dec
mov
add
mov
nop
mov
xor
cmc
sub
loopne
inc
pop
and
aas
jnp
int3
into
xor
ret
fldt
ss
pop
add
in
adc
rcll
pop
cmp
jne
lret
sbb
or
mov
mov
and
cmp
and
nop
aad
push
push
ja
lods
mov
inc
xor
jecxz
cmp
andb
xchg
aas
adc
lahf
push
lret
data16
lods
insb
cwtl
cmp
cltd
fistpl
cld
dec
dec
out
cld
add
ret
add
insl
dec
pop
lds
lea
cmp
test
xor
sbb
cmp
mov
mov
cmc
xlat
leave
xor
jb
push
adc
std
mov
cmp
inc
gs
pop
rcrb
push
jb
inc
sbb
fldcw
cmp
flds
stc
adc
test
pop
cld
mov
push
dec
mov
or
mov
cmp
jb
cmpsl
lcall
scas
cmpsb
xor
jp
fcomp
jb
in
push
adc
pop
ja
push
mov
add
sahf
sti
inc
lock
into
xlat
loopne
push
enter
fisttpl
adcb
jp
call
and
repnz
inc
mov
inc
gs
dec
add
cmp
dec
repz
sbb
addr16
xchg
int3
mov
xchg
pop
movsl
or
jecxz
mov
pop
jne
add
enter
cmpsb
std
push
jmp
outsb
inc
loop
pop
push
iret
add
inc
push
loop,pn
pop
sbb
jnp
mov
xchg
ja
inc
sbb
pop
jp
out
pop
xchg
push
push
push
loope
lods
cmpsb
xor
adc
inc
nop
dec
lret
sti
fbld
out
push
inc
mulb
xor
aaa
int3
cmpsb
sbb
or
cltd
mov
inc
aad
and
aaa
jmp
mov
mov
call
xchg
pop
aad
iret
mov
sbb
inc
lods
sarb
xlat
rol
jp
insb
addr16
test
sub
inc
ret
xchg
cmp
jne
lahf
test
imul
fsubl
push
xchg
insb
addr16
loopne
pop
add
lods
pop
fsubrs
cmp
mov
and
sub
push
imul
jle
or
mov
pusha
push
add
fsubrl
mov
lret
fbstp
lea
add
push
dec
pop
push
test
adc
pop
mov
mov
inc
jb
sub
cltd
xor
sbb
pop
dec
ss
jb
sub
jl
push
pop
adc
popf
lea
test
mov
cld
mov
in
addl
ficoml
movntps
cltd
jne
add
adc
in
rcrl
mov
cmpsl
and
sbb
scas
cmp
sahf
jmp
jecxz
mov
sub
dec
cmp
data16
and
xor
in
sub
cmp
fdivl
mov
cltd
inc
loopne
push
pushf
dec
pop
fnstcw
lea
push
jnp
mov
mov
lds
mov
and
cwtl
pop
mov
cmp
fistps
insb
xor
test
into
sub
lods
cmp
dec
and
mov
or
outsb
xlat
fistl
push
inc
push
sbb
sub
mov
or
adc
clc
int
ja
and
pavgb
dec
repz
mov
imul
pop
adc
jae
stos
call
sti
pop
push
xor
insb
pop
add
call
out
adc
jecxz
adc
mov
sub
fidivs
loop
mov
jle
mov
xchg
sub
xchg
or
fwait
inc
sub
xchg
pop
jae
jnp
and
cmp
jne
mov
adc
xor
scas
xchg
jg
jb
fwait
pushf
mov
bound
and
dec
mov
mov
addr16
movsl
cmp
test
and
push
mov
ret
adc
push
ljmp
mov
cli
mov
out
iret
cwtl
or
ljmp
orl
mov
sbb
lods
loop
jne
cli
mov
pop
or
mov
cwtl
jecxz
iret
addr16
icebp
mov
mov
or
sub
add
shll
fimuls
negl
incl
mov
mov
test
int
test
aas
xor
loop
inc
push
in
mov
mov
dec
dec
push
lahf
mov
jb
cld
xchg
fcomi
fwait
notl
pop
add
icebp
sub
lock
xor
inc
enter
cmp
insl
cli
outsl
lret
mov
jecxz
jle
movsb
xor
mov
xor
adc
sub
lcall
movsb
pop
leave
xchg
into
push
shld
mov
in
and
xchg
jge
xchg
push
pop
loope
out
out
and
push
ss
adc
pop
cs
sub
mov
mov
cmp
ljmp
mov
cmp
ja
test
xor
insl
outsb
dec
mov
das
aad
inc
inc
enter
push
addb
mov
and
and
sahf
les
notl
movsl
cld
enter
push
inc
insb
scas
dec
adc
out
mov
cmp
cli
bound
bound
mov
lods
jne
rclb
and
dec
pusha
jo
mov
arpl
mov
xor
jno
and
cltd
in
or
rcll
sbb
pop
int3
enter
inc
js
lahf
sbb
xchg
clc
pop
aad
pop
cmp
cmp
mov
stos
ds
or
cmp
mov
adc
adc
mov
repnz
sbb
dec
popf
shr
rorl
sub
shlb
mov
cmpsl
out
out
pop
pop
cwtl
add
loop
cmpsb
adc
mov
jnp
inc
out
adc
jno
in
outsb
mov
ret
push
sarl
jecxz
repz
into
adc
and
xor
arpl
xchg
jle
outsb
mov
ret
push
sarl
jecxz
repz
into
adc
and
xor
arpl
xchg
jle
outsb
mov
ret
push
sarl
loop
repz
into
adc
and
xor
arpl
xchg
jle
outsb
mov
ret
push
push
arpl
or
cld
into
mov
jmp
pushf
push
mov
in
sub
mov
andl
andl
andl
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
mov
lea
push
movl
movb
movl
movb
movl
movb
movb
movl
call
leave
ret
and
adc
arpl
jge
out
inc
push
sbb
dec
repz
ret
push
jp
mov
lcall
jae
inc
ljmp
loop
xchg
cmp
push
jp
mov
lcall
adc
pop
ljmp
jmp
negb
push
orl
add
jp
addr16
in
subb
push
inc
cmpsb
psllq
loope
and
xor
aas
dec
lret
into
loop
lock
jle
in
aas
outsl
pop
sbb
scas
xchg
ret
push
sub
mov
jbe
add
pop
dec
sbb
cmc
pop
mov
xchg
jae
push
pop
mov
or
out
ret
pop
mov
pushf
imul
mov
scas
insl
ficompl
rep
ret
jnp
ds
mov
lahf
inc
sti
push
enter
xor
push
adc
cmpsb
sbb
pop
cmp
test
ldmxcsr
add
lcall
sbb
das
outsb
dec
mov
outsl
js
gs
or
inc
ljmp
cmc
sub
pop
icebp
push
adc
inc
imul
lods
push
scas
mov
dec
testb
popf
aas
stos
adc
pushl
jb
or
push
sahf
les
arpl
and
pop
stos
cmp
adc
fadds
xor
jae
inc
ljmp
subl
cmp
dec
repz
ret
push
jp
mov
lcall
jae
inc
ljmp
subl
cmp
dec
repz
ret
push
jp
mov
js
mov
rol
insb
loopne
cmp
loopne
enter
sub
std
lahf
adcl
rcrl
mov
adcl
xchg
shr
push
jl
in
sbb
jp
jmp
cmp
dec
adcb
or
adc
mov
xchg
imul
movsl
imul
rol
call
sti
stos
rcl
inc
xor
fs
push
sub
pop
sbb
je
jecxz
or
cli
dec
sbb
popf
movsl
int
push
cs
lock
or
pop
sbb
imul
push
push
push
cmpsl
rcpps
xor
fldenv
dec
das
das
mov
or
fincstp
push
add
dec
ret
add
sbb
rcll
mov
test
jns
aas
mov
mov
js
sub
push
mov
int
imul
lret
lret
add
jge
scas
fwait
sbb
jns
lock
test
sbb
stos
add
pop
and
idivb
cmpb
sub
inc
cmpsl
ficoms
sub
push
daa
xor
in
lcall
repz
cs
cmpsl
and
push
jge
daa
inc
adc
add
mov
lock
test
lods
bnd
add
mov
clc
in
mov
and
lods
fcmovnbe
aas
pop
test
mov
lea
insb
fstp
pop
inc
loope
test
inc
and
popa
popf
gs
mov
lods
fsincos
in
int3
enter
enter
jns
popl
jbe
push
inc
push
inc
jge
sbb
movsb
out
jle
inc
loope
jae
ja
sub
stc
sarb
xlat
and
loope
pushl
xchg
push
mov
push
repnz
xchg
jnp
push
mov
xor
dec
int
xor
sub
xlat
inc
ja
push
outsl
push
adc
imul
scas
mov
movsb
jle
aas
data16
adc
push
inc
js
jae
int3
mov
not
cmp
sbb
pop
fidivrl
or
fiadds
pop
mov
aaa
imul
mov
mov
xchg
dec
or
and
mov
rorb
rcrl
or
loop
pop
push
fdivrl
jno
mov
pop
cmp
icebp
push
jp
bound
lret
insl
pop
xor
jg
add
shrl
add
jno
xor
sarb
popa
sahf
push
dec
sub
or
push
cld
cmp
mov
sub
or
pop
daa
out
fcmovnu
push
pop
pop
rcl
inc
sub
add
mov
add
push
out
mov
lock
cmpsl
loopne
and
pusha
lret
push
pop
faddp
push
inc
ss
xchg
sbb
pop
mov
push
add
ret
icebp
inc
or
xorb
hlt
out
test
xchg
outsl
stos
sbb
and
sub
mov
std
jp
adc
mov
adc
mov
cmp
sub
aad
movsl
add
aaa
adc
lret
mov
cmp
pop
arpl
roll
push
push
out
shrb
test
push
pop
push
cli
xor
and
jne
mov
mov
lret
jmp
insb
lcall
mov
xor
sub
xchg
cmp
sub
sbb
add
push
incl
sbb
orb
call
clc
sar
cmp
push
ret
cmc
loope
jbe
cmpsb
data16
mov
loope
hlt
movsb
aaa
push
push
sbb
pop
in
sub
repz
or
mov
aaa
add
mulb
sbb
push
inc
mov
js
movsl
jb
jae
mov
cld
xor
cmc
aaa
pop
push
cmp
xor
pop
shl
scas
popf
mov
jmp
insb
shl
mov
pushf
xchg
and
and
xchg
adc
adc
inc
test
cmp
adc
loop
fs
loopne
lahf
out
in
scas
movsb
pop
pop
sub
push
mov
dec
and
f2xm1
pop
lds
add
jnp
pushf
popa
je
icebp
and
cmp
repz
xchg
push
add
add
jns
insb
lret
jecxz
push
shlb
xchg
into
jmp
das
sbb
cmp
xor
xor
cs
sub
cli
into
shll
xor
sarl
push
andl
inc
shrb
mov
fs
lahf
pushf
nop
repz
out
push
mov
mov
bound
jp
addr16
je
xchg
das
shlb
je
or
lea
mov
into
add
sub
sti
popf
ret
cmp
ffree
mov
add
pop
sub
or
mov
test
jg
dec
lret
test
cs
and
mov
cmp
pop
jp
rcl
ficompl
xchg
popa
push
lods
inc
fwait
gs
std
aaa
orl
lock
int
lcall
pop
adc
mov
sbb
push
ret
pop
sarb
push
enter
adc
int
add
xchg
mov
aaa
xchg
mov
mov
sbb
xor
mov
movl
and
or
jns
mov
fistpll
cmp
mov
outsl
iret
bound
fwait
or
jbe
insb
or
or
fsubrl
xchg
stos
into
jg
sbb
movsb
jbe
in
rorb
jae
dec
in
mov
cmc
lea
loope
dec
paddusw
lea
mov
mov
inc
int
jg
or
pop
in
movsb
lods
and
out
push
pop
in
ljmp
sahf
cwtl
jae
test
or
xor
mov
adc
add
dec
ljmp
pop
jg
jne
clc
mov
imul
mov
dec
or
sbb
lcall
jnp
lcall
ss
cld
cli
loopne
aas
push
leave
dec
mov
roll
xchg
jbe
xor
testb
dec
nop
add
mov
cmovnp
mov
cs
mov
jge
icebp
push
push
mov
push
add
mov
nop
clc
adc
mov
push
fnstcw
mov
imul
scas
adc
pop
insl
in
cli
jbe
in
pop
add
adc
push
fdivs
xchg
dec
mov
aad
cwtl
mov
enter
test
cmp
pop
fmull
incb
push
jae
inc
lds
mov
xchg
xor
gs
hlt
and
mov
fwait
mov
sahf
xor
and
aaa
dec
scas
dec
mov
out
jecxz
sbb
dec
or
scas
mov
fs
pop
cmp
jns
sbb
fs
inc
cmp
inc
mov
lret
sahf
xchg
xor
sbb
push
lret
mov
cmp
test
sbb
movsl
arpl
popw
push
mov
mov
mov
cmp
sub
int
fisubrs
pop
dec
mov
inc
sub
adc
lods
sahf
int
lods
ja
jp
in
or
mov
rorb
fists
and
add
popf
std
cmp
and
insb
sbb
mov
movsl
adc
out
cmp
sub
fdivrs
lahf
and
je
shl
mov
sub
mov
jp
loope
clc
pop
mov
and
stos
call
stc
add
shl
mov
arpl
sahf
mov
hlt
sub
shlb
xor
jae
pop
or
dec
loopne
fwait
push
push
cmpsl
and
fistpl
cmp
out
shrb
es
jl
add
dec
mov
ret
out
in
ljmp
aaa
hlt
out
add
cmp
scas
dec
mov
push
adc
in
mov
sbb
jo
sbb
aas
pop
lret
outsl
std
dec
call
fbstp
jno
xor
cmp
push
out
inc
sbb
adc
cmp
cmp
in
dec
mov
cld
int
sbb
aad
les
stos
add
negb
xor
pop
xchg
jecxz
fnstcw
imul
lret
jg
enter
daa
aad
fisubrl
lds
add
and
push
push
icebp
fdivrl
sub
out
arpl
out
sbb
cmp
pushf
mov
in
adc
or
icebp
repz
pop
jl
jae
jnp
mov
loopne
inc
dec
mov
insl
std
or
mov
pushw
add
mov
fsubs
popf
add
loopne
repnz
xchg
xchg
xchg
nop
adc
adc
btc
std
ret
scas
shlb
mov
cmp
lea
xchg
push
aad
mov
sub
bound
push
sti
ds
pop
ljmp
je
dec
idivl
aad
pop
mov
xchg
cmp
aaa
mov
jge
xchg
xchg
push
mov
mov
ret
mov
loop
popf
cli
cwtl
dec
in
dec
cmpsl
or
push
jne
shr
lahf
jmp
ret
jl
xchg
jmp
jbe
jnp
loopne
popf
adc
aaa
stos
mov
call
loope
push
adc
mov
jg
mov
jnp
ss
jo
mov
jae
add
jb
jnp
shrb
dec
imul
loopne
xor
and
into
mov
test
lret
in
stos
jmp
cmp
sarb
cmp
jle
xor
lcall
cmc
adc
fst
out
lods
and
inc
cwtl
cmp
pop
test
mov
out
test
push
lret
inc
mov
cmpsb
scas
sti
imul
mov
dec
xchg
cli
xchg
bound
add
int
dec
xchg
adc
pop
push
je
mov
sub
fistps
push
sub
xchg
fstpt
jge
push
fnsave
adc
mov
inc
adc
outsb
out
aas
sbb
movsl
outsl
xchg
test
mov
ljmp
pcmpgtd
mov
xor
popf
jbe
fimuls
lea
xchg
cltd
adc
or
sbb
pop
and
negl
mov
clc
movsb
in
data16
in
inc
push
movsb
xor
je
adc
sti
pushf
lret
scas
xor
or
xlat
enter
cmp
ss
lods
fwait
dec
xchg
ss
mov
pop
jmp
imul
jle
aas
int
int3
ror
xor
dec
mov
dec
sti
iret
pop
dec
ss
nop
inc
test
pop
ss
cli
adc
mov
pusha
dec
push
pop
pop
and
mov
sahf
and
or
fwait
lods
add
xor
in
mov
ret
jp
pop
scas
repnz
jmp
xor
sub
jecxz
imul
mov
out
enter
sub
dec
sbbb
into
xchg
les
jae
adc
popa
jl
adc
sub
push
jo
and
adc
adc
xlat
jg
arpl
jo
shrb
notl
mov
cli
cmpsl
cmp
repz
xor
sar
mov
test
push
not
pop
insb
aaa
sub
test
push
aam
ret
sti
adc
fiadds
or
mov
inc
xchg
ljmp
sbb
bound
ret
xchg
mov
lea
stos
fstp
pop
add
scas
ljmp
sbb
cmpb
mov
mov
mov
leave
insb
es
idivb
nop
pop
xchg
mov
fcomps
aad
cmp
cld
jle
sub
lcall
mov
xchg
adc
dec
daa
push
cmp
mov
pop
push
aad
lret
mov
cld
add
jg
and
push
cmp
fdivs
or
inc
xorb
cmp
neg
sbb
cmpsb
push
inc
mov
sub
add
jne
jmp
insl
cwtl
jo
cmp
frstor
int3
or
xchg
jg
stc
xchg
xorb
nop
or
gs
mov
pop
add
and
ss
pop
or
sub
test
push
mov
mov
sub
hlt
xchg
pusha
xor
sbb
mov
popa
push
dec
xchg
push
ds
xor
sub
sti
ficoml
mov
cmc
in
mov
inc
lret
mov
enter
push
and
mov
rcr
adc
sub
fdivr
test
ds
mov
pop
jp
test
mov
pop
or
jp
or
hlt
and
popf
xchg
js
arpl
cmpsl
cli
arpl
add
fstp
lds
hlt
movsl
push
sbb
push
popf
adc
pop
sub
lret
and
out
mov
jg
movsl
in
hlt
xchg
sbb
and
cs
stc
pop
cmp
xchg
mov
ret
test
lods
jg
sahf
jo
mov
cmp
sub
xchg
dec
pop
std
cmp
sub
mov
and
jp
or
mov
fisubrs
mov
fistpl
sbb
sub
jne
xor
cli
dec
sarl
pop
sarb
or
lds
mov
call
xchg
xchg
cmc
push
arpl
or
pushf
fnstsw
fprem1
sub
dec
mov
test
pop
daa
js
push
ljmp
out
mov
cmp
fldenv
lcall
or
lcall
sbb
pushf
inc
sarl
xor
addr16
subb
enter
pushf
mov
xchg
cmc
push
or
mov
leave
pop
mov
and
mov
push
push
pop
mov
mov
cmp
subl
xor
call
stos
xchg
xchg
xor
mov
nop
int3
push
cmp
push
aad
subl
cs
int
sbb
cmpsb
ret
and
loop
jnp
mov
ds
bound
stos
jne
sahf
lock
jno
shrb
and
jns
cmp
xchg
fidivrs
insl
push
stc
cmp
sbb
stos
scas
pop
xchg
mov
or
ss
jl
pop
mov
mov
lea
cmc
fistpll
arpl
int3
and
xchg
push
ljmp
loop
aaa
push
xchg
push
mov
pop
ret
push
pop
push
or
mov
sti
or
sub
das
push
in
xlat
icebp
inc
mov
cmpsb
fldt
lret
jg
cmp
inc
lds
lods
jno
rcrl
fists
dec
inc
stos
dec
adc
cmpb
lcall
ljmp
jb
loopne
xchg
mov
popa
xchg
sbb
pop
mov
pop
pop
jb
and
add
roll
xchg
outsb
xor
stos
lods
jb
xchg
clc
push
outsb
in
lock
add
cli
mov
xchg
xor
arpl
dec
stos
loope
xchg
testl
and
jg
shl
sub
and
mov
mov
cmp
and
in
or
bnd
scas
std
andb
out
push
jmp
mov
xor
fisubrl
add
mov
scas
add
in
cmp
mov
mov
icebp
xchg
das
push
notl
fdivl
sbb
or
mov
lcall
fisubrs
fucomi
sub
fwait
imul
test
loop
inc
add
push
shl
xchg
pop
jle
xchg
sub
xor
scas
cmp
push
retw
ret
aaa
push
in
lret
lods
jge
hlt
mov
inc
fsubs
cmp
rclb
rcr
mov
movsb
and
xlat
jmp
cmp
fcomp
or
xor
mov
cmpsl
repnz
iret
cmp
jecxz
in
pop
pop
aad
cmp
adc
pop
add
dec
loop
jno
xchg
dec
dec
xor
repz
cmp
inc
stos
cld
mov
dec
rorl
add
iret
xchg
push
inc
lods
test
adc
rclb
sub
cmpsb
shl
mov
pop
push
pop
xor
ret
adc
movsb
jmp
test
sahf
je
fisttpll
repz
xor
push
jae
adc
ss
out
popa
mov
imul
into
adc
insl
popa
mov
pop
out
cmp
mov
gs
js
mov
xor
mov
and
les
or
loop
aas
xchg
or
fisubs
lods
mov
pop
out
mov
cltd
add
ja
loope
add
sub
push
jb
call
neg
xchg
cs
in
push
or
xchg
inc
push
repz
test
ljmp
dec
add
mov
mov
jg
cli
ds
jmp
dec
push
cmpsb
popf
pop
rorb
sbb
lods
gs
out
test
lret
sti
sbbl
daa
aaa
pop
push
out
iret
mov
or
lock
popa
mov
int3
pop
adc
testl
arpl
in
packsswb
xchg
fildl
jge
mov
call
xchg
or
lock
xor
cmpb
inc
xor
inc
test
jmp
and
out
sub
in
cmp
addl
inc
and
inc
cli
aaa
sbb
or
in
jg
imul
add
and
jo
inc
sub
mov
jp
cli
loope
xor
mov
sbb
mov
in
out
test
add
jecxz
cli
outsb
rcrl
pop
test
in
xchg
mov
add
xor
inc
pop
jne
inc
test
push
mov
cmpb
in
shlb
push
les
call
jo
push
sub
imul
idivl
icebp
hlt
mov
sbb
pop
sub
push
jecxz
cs
insl
daa
xlat
xchg
mov
scas
mov
xor
sti
xor
inc
sub
orl
in
or
movsb
cltd
scas
cmpsl
push
in
std
lods
pop
jne
dec
enter
div
xchg
xor
mov
test
inc
pop
mov
dec
jl
mov
xorb
into
add
mov
cbtw
mov
iret
sbb
das
test
pop
js
lret
jne
add
push
lods
dec
xchg
xchg
call
test
pop
addr16
movsb
test
shl
mov
push
outsb
mov
mov
dec
add
iret
sti
mov
pop
ja
hlt
mov
ljmp
push
and
jp
xor
pop
addb
nop
ss
faddl
sbb
aam
mov
cmc
inc
xchg
sub
cmc
xor
insl
cmpsl
add
mov
into
fcomi
jne
pusha
mov
mov
sar
sti
jle
bound
mov
or
jmp
jne
test
mov
popf
xchg
or
mull
xchg
and
ss
xchg
pop
pop
setbe
movsl
inc
sub
jno
rcl
xor
out
and
jge
sbb
scas
ret
inc
pop
or
adc
inc
jo
cld
leave
push
hlt
mov
jge
movl
pop
xchg
xlat
cmpsb
std
sub
loopne
or
pop
std
mov
cld
dec
mov
stos
fisubs
data16
inc
dec
je
pop
sub
and
outsl
nop
sahf
sahf
cmp
inc
adc
lea
mov
xor
sub
ret
adc
rolb
xchg
adc
lcall
cmp
dec
popf
inc
pop
sub
in
loop
or
inc
je
lahf
loop
push
cmp
mov
push
mov
adc
dec
mov
add
in
cmc
cmp
fidivrs
stc
rcll
lods
sbb
sbb
xchg
adc
cmp
or
in
sbb
aaa
sub
js
test
ds
arpl
add
mov
pop
sbb
or
out
sbb
in
or
lret
dec
imul
jb
mov
dec
mov
iret
xchg
mov
addr16
test
inc
cli
test
mov
shlb
idivb
xlat
and
ja
push
sub
and
clc
sbb
adc
sahf
push
outsl
ret
mov
jmp
cmp
push
sub
clc
cld
mov
push
cltd
lahf
shrb
jge
sbb
ret
jo
or
outsl
data16
push
repz
xor
in
xacquire
fimuls
aad
and
xor
add
adc
in
inc
popf
adcb
test
mov
fstps
xlat
and
insl
icebp
fstp
push
or
cs
insl
push
fnsave
mov
enter
fidivl
movsl
lods
cmp
popf
mov
popa
pop
and
jl
lret
je
addr16
rorl
adc
das
ret
scas
pop
data16
aaa
xchg
cmc
adc
push
mov
popf
rcr
xchg
pop
or
cli
lock
leave
cmp
out
out
inc
mov
dec
imul
clc
fcompl
mov
xchg
shr
jno
in
sbb
mov
icebp
mov
mov
mov
andl
mov
adcl
fnstsw
or
mov
pushf
push
jecxz
pop
sub
adc
ss
pop
fadd
aam
push
xchg
movsb
insl
cld
and
in
adcb
insb
sbb
addb
sbb
ficompl
in
mov
insb
sub
mov
adc
aad
pop
jns
and
lods
mov
lret
mov
out
sub
and
inc
dec
dec
xchg
lods
in
mov
jmp
out
sub
inc
mov
outsb
shrb
push
xchg
mov
adc
inc
ljmp
subl
cmp
dec
repz
ret
push
jp
mov
lcall
jae
inc
ljmp
subl
cmp
dec
repz
ret
push
jp
mov
lcall
jae
inc
ljmp
jae
xchg
cmp
dec
jecxz
ret
push
jp
mov
pop
stos
xor
inc
ljmp
sub
xchg
dec
xchg
ret
cmp
sub
in
cmc
dec
lds
adc
cwtl
sub
fdivl
inc
in
push
out
and
lods
adc
dec
lds
movsl
sbb
or
cmp
sub
fidivs
inc
fcompl
and
mov
in
dec
frstor
mov
and
ss
push
negb
mov
loop
ljmp
lds
mov
aad
mov
mov
clc
or
mov
inc
and
add
or
xchg
mov
add
pop
and
in
stos
in
jne
and
loope
mov
xchg
or
xor
dec
push
shlb
mov
mov
mov
or
dec
or
icebp
pop
pop
cmp
int3
jp
xchg
shr
mov
sbb
adc
iret
xor
mov
js
dec
xorl
enter
gs
mov
inc
mov
xor
push
or
jl
cmpsl
pop
es
jbe
popf
mov
cmp
add
stc
add
pop
in
pop
lds
mov
movsl
or
and
insl
aam
in
cmc
cmp
mov
nop
dec
mov
dec
shll
push
xchg
inc
gs
mov
test
push
fbstp
js
mov
dec
stos
or
imul
pop
movb
adc
and
shlb
sbbb
sbb
jo
or
cmp
sub
fdivl
inc
cld
push
in
and
mov
cmc
dec
lds
movsl
sbb
or
cmp
sub
fdivl
inc
cld
push
in
and
mov
fcmove
jp
cmpsb
jg
and
push
push
je
dec
in
faddl
jl
xor
mov
lods
push
jle
jmp
popf
xor
clc
rol
push
cli
xchg
cmp
jle
sbb
mov
mov
and
jecxz
arpl
pop
jnp
or
imul
outsb
into
xchg
addr16
pop
pop
mov
movsl
and
popa
and
mov
lods
add
pop
testb
pop
pop
rorb
insl
push
hlt
mov
test
cltd
rcrl
jo
out
popl
imul
test
pop
cs
sbb
aad
icebp
add
jne
mulb
test
cltd
mov
das
ret
test
or
xchg
popa
add
pop
sbb
jl
mov
adc
insl
lahf
mov
inc
je
xchg
sarb
mov
xchg
fwait
jecxz
fcompl
push
in
mov
aad
lea
hlt
cltd
ja
insl
icebp
push
into
adc
cli
ljmp
push
push
add
addl
test
dec
bound
cmp
popl
push
lock
pop
fists
inc
sbb
add
inc
rorb
ljmp
in
cmp
mov
push
mov
sbb
das
xchg
push
orl
add
lods
mov
pop
pop
inc
mov
je
in
mov
mov
mov
fsubl
xor
inc
lahf
fdivrp
jb
stos
xchg
mov
jl
orl
and
push
cmp
add
dec
mov
jno
ds
outsl
add
iret
mov
mov
lret
jno
out
jb
out
xor
adc
lcall
in
scas
data16
pop
cmp
notl
mov
stc
sbb
enter
mov
mov
call
aad
vcvtss2si
mov
inc
mov
ror
adc
lret
fcompl
cld
stc
xchg
push
lods
repz
adc
aam
das
movsb
test
lahf
lods
xchg
mov
fs
pop
add
dec
orb
mov
fwait
mov
daa
mov
jb
popf
jecxz
pop
call
sti
push
arpl
mov
mov
inc
jbe
fwait
ds
and
push
lock
hlt
push
test
popf
sub
push
jbe
sub
pop
mov
aaa
xor
adc
insl
movsb
jbe
push
repz
mov
cld
xchg
xchg
inc
xchg
fcom
dec
fdivl
push
punpcklbw
out
faddl
pushf
push
mov
movb
das
dec
enter
aaa
fstp
mov
jmp
imul
aam
loopne
insb
lahf
cmpsb
imul
jge
or
outsb
arpl
inc
push
popl
fldl
int3
dec
jae
mov
or
je
das
stos
lds
add
lds
testb
push
fs
push
and
inc
jl
push
int
and
movsb
xchg
dec
pop
xor
and
fwait
ret
sbb
jo
push
out
enter
pop
sbb
or
mov
mov
test
int
hlt
in
mov
mov
cmp
push
aas
scas
aam
imul
mov
pop
or
cwtl
lock
mov
mov
out
fwait
int3
mulb
movsb
lahf
nop
and
bound
or
mov
inc
outsb
mov
jns
xor
dec
cmc
adc
dec
dec
cmpsl
cmc
push
cmp
xchg
sbb
and
xor
aad
fcoms
fwait
and
sub
repz
stos
mov
sub
push
aad
outsl
inc
das
inc
sbb
aas
iret
adc
lret
rclb
test
push
mov
aad
sbb
test
loopne
test
lret
sbb
mov
push
mov
in
dec
jo
sbb
lahf
jge
mov
sub
or
in
cld
cwtl
adc
fcompl
mov
xchg
cmp
or
les
pop
loope
sub
imul
cmc
jns
idiv
jmp
test
fsub
call
cmpsb
aaa
cmpsb
mov
jp
test
and
dec
pop
cld
jae
lret
imul
mov
insb
mov
fisubrl
popf
xor
and
mov
mov
mov
push
leave
out
fs
shrl
jge
aas
jo
add
xchg
or
adc
insl
dec
mov
and
push
inc
ret
lock
push
add
fistpl
jmp
xchg
xchg
adc
lahf
dec
or
mov
daa
or
les
mov
xchg
inc
jge
sti
mov
mov
movsb
call
inc
cmp
xchg
outsb
loopne
inc
add
gs
mov
cmp
dec
addr16
les
int3
std
cmp
imul
ret
imul
bound
cmp
leave
mov
negl
jne
stos
sub
js
mov
xchg
sub
push
cmp
mov
inc
repnz
rclb
xlat
fldt
test
xor
call
insl
jge
movnti
push
sub
ljmp
int
pop
adc
mov
mov
fdivrl
gs
mov
sub
pop
dec
and
in
push
push
xchg
in
pop
sub
add
addb
jns
jnp
sbb
adc
sub
andl
pop
in
sub
ret
sub
and
jp
int3
mov
sub
lock
pop
out
rcll
push
arpl
les
shrb
adc
mov
dec
fsub
pop
insl
or
mov
popf
lods
lret
push
rcrb
rcll
dec
stos
sub
xor
pop
sti
stos
add
xor
pop
iret
cmp
rclb
dec
mov
ficompl
add
jge
fidivs
nop
or
into
dec
lahf
outsl
cli
movsb
jmp
or
sbb
sub
imul
popf
mov
mov
pop
mov
or
jns
dec
stc
jge
cltd
insb
and
stc
or
pop
pop
lods
and
pop
add
mov
ret
push
out
mov
rolb
lods
dec
popl
scas
movsb
mov
jbe
pop
or
mov
ss
lods
sub
shlb
dec
mov
jns
inc
test
call
pop
mov
dec
cmp
and
xchg
mov
push
inc
and
enter
lahf
mov
xchg
stos
jb
jnp
sbb
scas
push
jb
stos
push
sub
divb
dec
sbb
or
ss
or
and
out
inc
lea
or
jle
dec
add
fnstenv
pop
cld
jae
dec
arpl
pop
xchg
stos
bound
aad
xchg
push
mov
jge
sbbl
mov
push
sbbl
mov
popf
aam
scas
test
fnstenv
mov
cwtl
xlat
add
fdivl
ss
call
xor
pop
sbb
hlt
sbb
add
stos
cs
jae
int3
adc
inc
adc
fidivrl
mov
push
fisubl
cmp
sbb
xlat
lea
mov
idivl
icebp
jl
daa
inc
aam
or
cltd
jae
movsl
ja
int
call
outsb
xor
loope
leave
xchg
pop
and
sbb
or
xor
push
cmp
rorb
xchg
push
jge
inc
loopne
pop
jb
xchg
out
mov
inc
mov
xor
les
push
dec
cmp
and
fs
adc
cmp
jo
cltd
mov
outsw
rcll
nop
xor
inc
mov
pop
push
mov
pop
mov
add
in
xor
jbe
fs
mov
and
mov
mov
sub
adc
popa
inc
cs
imul
xchg
or
stos
lret
or
pop
sti
sahf
lds
cmp
push
scas
sub
xor
push
arpl
out
arpl
jge
or
inc
adcb
test
lods
add
jl
mov
and
gs
iret
mov
pop
pop
bnd
clc
popa
test
push
cmp
loopne
or
cmc
lcall
jno
or
adc
stc
push
jl
call
clc
and
fistps
push
fs
in
xor
mov
cmp
out
sti
mov
dec
jns
sub
fbld
push
sbb
dec
pushf
sbbb
insl
inc
inc
xor
xchg
or
shlb
loop
push
jne
or
test
lea
jmp
shr
jno
popf
jae
push
cmp
stos
jns
add
pop
adc
xor
daa
mov
cmp
push
sbb
lods
xor
fcmovbe
in
aad
cmp
push
pop
dec
mov
repnz
cmp
add
and
sub
push
mov
adcb
add
dec
rcll
out
lods
and
mov
lods
rolb
or
fwait
xor
imul
and
push
lea
push
jl
jb
fstpt
push
jmp
inc
loopne
jb
rolb
push
xchg
dec
arpl
or
pushf
mov
into
scas
idivb
adc
dec
repnz
pop
movsb
cmpsb
cmpsl
clc
out
mov
insb
push
pusha
xor
inc
adc
adc
inc
sbb
sub
mov
xchg
js
or
dec
scas
cmpsl
or
xchg
push
xchg
pop
test
inc
fdivs
mov
pushf
lds
mov
lock
out
dec
lods
ret
movsl
jbe
pop
sbb
adc
ds
inc
bound
int3
test
jno
scas
jnp
sbb
jnp
aas
fcompl
jp
sub
inc
jbe
lods
fsubrs
inc
adc
pushf
std
jge
lret
lret
mov
jae
addr16
pop
and
adc
scas
dec
scas
aam
bound
push
and
imul
mov
hlt
sti
cld
fdivrl
push
dec
in
sub
fildl
scas
pop
jae
xor
data16
fsubs
xor
xor
jl
mov
and
loope
xchg
jle
sbb
test
sbb
inc
mov
shrl
sbb
je,pt
and
sub
pop
sub
shlb
mov
or
push
mov
and
out
dec
stos
rcl
inc
in
add
and
scas
scas
xchg
shl
pop
or
insl
sar
and
rcr
pop
or
xchg
add
aad
pop
sbb
ds
mov
test
ret
ffreep
lods
sbb
test
jg
or
push
mov
in
shl
test
add
xchg
shlb
xor
pushf
jno
adc
xchg
leave
xor
das
call
pop
scas
push
inc
adc
ljmp
push
pop
in
add
fnsave
jns
pop
push
mov
xor
mov
cmpsl
and
pop
cwtl
mov
or
adc
jns
pop
clc
mov
ja
adc
mov
inc
push
icebp
icebp
adc
scas
cmp
xchg
mov
fsts
insl
in
jne
cmp
sbb
push
adc
arpl
lret
add
mov
adc
mov
negb
xor
incb
xchg
test
mov
inc
xor
push
jb
dec
inc
sbb
sub
fwait
out
incb
rorb
inc
mov
in
lea
je
inc
pop
out
or
lds
out
xor
push
add
repnz
shll
push
and
out
outsb
xchg
xor
sbb
jg
or
xor
iret
mov
out
shrl
test
pop
mov
sub
icebp
push
bound
push
out
shrl
inc
mov
nop
add
clc
cwtl
iret
dec
lods
ljmp
jle
lods
jo
test
mov
dec
xor
mov
jmp
push
fisttps
bnd
mov
fdivs
lahf
adc
pop
lods
inc
add
add
mov
mov
dec
mulb
jecxz
pop
inc
push
mov
js
pop
jl
add
push
cmp
sub
add
jl
mov
sbb
ret
cmp
and
aam
movsl
leave
mov
xchg
iret
mov
je
les
int3
sbb
dec
mov
test
je
int
rolb
lods
mov
adcb
jno
lcall
pop
mov
sub
call
into
scas
mov
into
pavgb
add
cltd
sub
mov
insb
jmp
inc
cmp
rcll
jl
mov
testl
test
aam
popf
je
add
adc
hlt
jae
and
adc
fidivl
lahf
mov
inc
adc
ja
in
push
push
pusha
imulb
push
fildll
pop
sub
outsl
imul
loop
outsb
addr16
sbbl
cld
dec
movl
mov
jnp
jl
or
fldcw
xchg
dec
rorl
enter
scas
ficoml
addb
xor
xchg
mov
loope
ret
sbb
mov
mov
adc
aam
lret
iret
mov
mov
and
push
adc
loop
xchg
ret
xor
les
inc
inc
sarl
stc
jge
shlb
adc
sarl
fisubs
mov
int
testl
dec
cmc
hlt
leave
inc
aas
mov
and
and
inc
data16
xor
mov
sbb
mov
push
jns
push
aad
fdivrp
mov
cmp
pusha
inc
inc
nop
pusha
scas
pop
fptan
hlt
mov
roll
fsts
shll
dec
sti
cmp
pop
jo
sbb
mov
rcll
pop
cld
inc
jne
xchg
sub
push
bnd
iret
fcompl
or
sarb
push
and
bound
cmp
xchg
iret
adc
aam
out
adc
jecxz
rcrb
neg
dec
in
sub
mov
and
inc
or
push
mov
or
lock
cmp
inc
sub
and
loop
xorb
mov
gs
loop
add
add
dec
add
dec
out
mov
jae
xchg
mov
roll
pop
sbb
les
push
inc
orl
mov
mov
adc
inc
nop
mov
test
arpl
xor
sarb
mov
jp
insl
out
test
ret
test
das
gs
fwait
pop
lahf
sub
xchg
shl
or
fstpt
movsl
inc
or
adc
fistl
dec
je
fisttpll
ss
test
inc
xchg
into
or
xor
ret
fstpl
and
lds
orb
sbb
lcall
xchg
pop
jo
test
jl
or
xlat
pop
mov
dec
jne
into
outsl
lock
xor
gs
call
xchg
mov
pop
jae
test
push
js
jecxz
into
mov
jmp
cmp
push
lahf
dec
dec
mov
dec
jmp
jae
push
lahf
pop
or
scas
inc
ja
ja
scas
lret
add
mov
fwait
out
into
jle
inc
imul
mov
loope
call
sub
mov
mov
mov
out
stos
cmpsb
imul
mov
call
rcrb
xlat
insb
in
stos
into
cmp
sbb
cmp
lea
cmpsl
jns
push
jbe
jg
out
xor
pop
loop
push
scas
push
push
dec
mov
out
dec
dec
test
cltd
repz
jl
mov
push
out
inc
cwtl
ret
push
pop
lods
pop
repnz
data16
or
shrb
loope
mov
mov
es
add
repz
cwtl
stos
movl
enter
mov
aaa
pusha
mov
or
faddl
lods
pop
jg
daa
ret
cli
les
test
je
std
inc
sbb
mov
lods
cmp
or
fisubl
push
mov
inc
mov
mov
mov
inc
scas
lcall
sub
add
lods
mov
jb
vlddqu
sti
lea
xlat
test
int
and
lcall
divl
incb
mulb
mov
inc
push
push
test
or
sub
cli
dec
xor
int3
imul
cmpsl
mov
cwtl
and
out
jo
lcall
mov
or
rol
mov
pop
push
test
aas
xor
lret
mov
cmp
and
pop
inc
shrl
imul
dec
mov
fsubs
daa
out
sub
sti
dec
in
cli
push
dec
mov
adc
imul
cmpsb
int3
jl
sahf
adc
adc
pmullw
orb
or
jecxz
addr16
ret
jb
cmc
lcall
filds
mov
je,pt
mov
jo
bound
mov
orl
jae
lcall
aad
fisttpll
ds
pusha
sbb
lcall
das
mov
mov
xchg
jb
jp
mov
add
mov
inc
fidivrs
pushf
dec
adc
dec
adc
mov
je
sub
xchg
push
mov
mov
pop
rcrl
ss
push
repnz
scas
sbb
iret
pop
aaa
and
lea
movsl
push
in
lret
adc
push
cwtl
ss
and
push
rcrl
or
in
out
inc
sub
fisubl
xor
popa
repz
int3
sbbb
addr16
pushf
int
cmp
movl
iret
fcmovnbe
jmp
in
jno
inc
mov
jle
cmp
mov
mov
mov
xchg
jle
out
xchg
mov
jns
ja
ret
and
in
sub
stos
test
and
test
lcall
inc
decb
scas
xchg
and
mov
shlb
inc
mov
rcrl
cmpsb
ret
xor
mul
out
js
jbe
lods
in
fidivs
and
loope
dec
ljmp
dec
cmp
mov
push
imul
dec
into
mov
xchg
cmpsb
loopne
xchg
sbb
dec
xchg
mov
xor
mov
push
into
jecxz
xchg
and
pop
cltd
rolb
movsb
mov
and
clc
or
push
xchg
mov
xchg
push
inc
lahf
ja
mov
mov
imul
mov
pushf
in
xor
mov
lods
push
das
cmp
mov
into
es
cli
xchg
xchg
cmp
pusha
pop
movl
sbb
and
addl
push
add
sbb
aad
xchg
dec
ds
sub
jae
add
lock
call
pop
sbb
subb
mov
mov
push
xchg
jno
imul
xchg
cmc
ja
fnsave
outsb
int3
and
pop
sub
pop
loop
rcr
pop
pop
jnp
imul
pop
pop
mov
add
sub
mov
push
shll
adc
dec
sub
lods
jb
mov
test
lock
adc
xor
adc
jne
clc
fstpt
lahf
jno
push
cwtl
or
adc
cmpsb
inc
rclb
lret
addl
sub
ffree
out
mov
and
mov
push
shl
int
add
push
cmpb
imul
ficompl
mov
cmpsb
movsb
sbb
inc
cmp
mov
add
jns
mov
push
aad
mov
ret
dec
cmp
inc
dec
xchg
sbb
daa
cwtl
jo
jae
vmwrite
mov
mov
jecxz
ret
inc
lods
out
pop
pop
fs
pop
xlat
mov
arpl
sbb
ds
in
add
mov
adc
sbb
inc
cmp
sub
mov
push
cmp
and
loop
mov
cmpsl
pop
scas
sahf
iret
mov
jmp
xchg
mov
loope
js
leave
movl
inc
ror
and
aaa
push
loopne
dec
fnstcw
push
or
push
rcll
fdivl
jmp
mov
clc
inc
outsl
sub
icebp
icebp
xchg
adc
jge
rcl
mov
sub
orb
pop
xchg
test
sar
std
adc
scas
add
mov
jp
loopne
adc
in
jmp
dec
jno
sub
lahf
and
sub
aam
jbe
lret
xchg
push
jmp
inc
cmp
mov
loop
lret
cmp
and
movsb
ret
nop
adc
insl
rclb
loopne
in
mov
fldcw
jle
sahf
mov
fildl
or
inc
popf
mov
dec
sub
adc
pop
push
iret
mov
mov
lds
adc
leave
jl
sbb
stos
popa
jecxz
push
clc
adc
sub
and
add
js
adc
idivl
mov
mov
shrl
cmp
addr16
mov
jne
aas
aad
out
push
test
pushf
inc
xchg
push
or
test
mov
dec
iret
xchg
aad
movsl
sbb
or
cmp
sub
fdivl
inc
cld
push
in
and
mov
cmc
dec
lds
movsl
sbb
or
cmp
sub
fdivl
inc
cld
push
in
and
mov
cmc
dec
lds
movsl
sbb
or
cmp
sub
fdivl
inc
cld
push
in
and
mov
testl
mov
add
fmull
fwait
push
adc
jae
inc
ljmp
sbb
pop
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
jne
gs
xor
movsb
cmp
inc
and
notb
movsb
mov
movsl
xchg
hlt
test
jne
gs
xor
and
push
and
adc
xchg
in
aad
lds
mov
in
xchg
push
pushf
inc
es
lcall
movsl
jmp
xlat
mov
lods
sub
add
push
inc
sub
cmp
iret
push
into
fbstp
in
sub
dec
jge
ret
lahf
lcall
push
and
es
mov
aam
fdivrl
mov
aad
pop
ret
cmc
aam
mov
or
pusha
pop
idivl
pop
out
dec
sbb
add
cmp
mov
les
xor
hlt
jne
inc
adc
and
pushf
pop
push
fisubrl
popl
aam
cmpl
cmp
push
mov
add
in
shlb
mov
jmp
in
xchg
pop
jae
movsb
in
and
sbb
popf
mov
push
adc
cwtl
mov
mov
mov
push
hlt
xchg
adc
hlt
push
mov
cs
scas
add
inc
aad
clc
movsl
cmp
hlt
test
adc
or
dec
sub
addl
cmpsb
rolb
lock
test
push
adc
push
add
push
cmp
push
sbb
xchg
adc
rol
ret
inc
test
mov
xchg
out
adc
inc
adc
jo
and
fs
xchg
in
aad
lds
hlt
test
jne
gs
xor
and
push
and
fs
xchg
in
aad
lds
hlt
test
jne
add
enter
in
and
or
aam
xchg
punpckhwd
cli
cmp
fcom
in
sub
inc
mov
jno
jecxz
sbb
and
and
scas
std
shrb
jp
mov
mov
push
leave
sbb
stos
mov
adc
add
sub
arpl
jno
idiv
es
sahf
icebp
dec
mov
movsb
out
sbb
xlat
icebp
sub
mov
fidivrs
hlt
loop
push
inc
in
in
cmc
add
fidivrs
xchg
dec
or
je
xorl
mov
mov
sahf
cmp
fs
push
push
push
out
jns
sub
jle
in
jnp
sbb
xchg
mov
push
add
fcomi
pop
sbb
lret
sti
cs
xchg
shl
pop
fildll
or
ret
mov
cmpsl
pop
pop
mov
es
fists
je
loopne
psubb
push
jo
ljmp
rcrl
ret
aad
cld
jle
aam
mov
addb
xchg
mov
fwait
jge
push
rcr
jnp
repz
sub
jl
out
mov
jg
ret
jecxz
push
xchg
stos
aad
jmp
sub
repnz
cmpsb
sub
mov
fs
and
imul
mov
sbb
dec
mov
mov
in
pushl
into
mov
or
pop
imul
aaa
xchg
bound
xchg
imul
test
mov
and
xor
sub
lret
test
imull
cmp
arpl
rcl
pop
cmc
mov
jno
sbb
jo
push
fidivs
lock
add
clc
and
test
adc
pop
lahf
mov
lret
clc
imul
cld
jecxz
mov
or
xchg
sub
mov
or
xor
push
dec
loopne
imul
cmp
pop
int3
enter
hlt
pop
pop
addb
add
xor
addr16
clc
push
shrb
xchg
jo
jecxz
sti
xlat
sahf
shll
fsubl
inc
jb
pop
les
lds
jmp
or
mov
xchg
cmp
test
ret
dec
or
mov
cli
and
mov
hlt
lret
ficomps
xor
mov
call
xchg
lret
pop
loope
aad
push
push
and
mov
push
movsb
mov
or
pop
jb
insl
xorb
mov
mov
pop
int
cmp
in
pop
mov
xchg
insl
push
xor
jl
dec
jne
push
sbb
cmc
popf
lahf
dec
pop
arpl
fadd
and
out
jecxz
adc
cld
idivb
jle
mov
nop
arpl
inc
or
pop
push
popa
dec
sub
add
nop
test
sbb
cs
outsl
mov
inc
pop
xchg
jmp
jg
and
inc
push
mov
fcmovnb
inc
push
mov
nop
mov
out
sahf
adc
xor
rorb
add
push
inc
cltd
inc
into
cli
or
ljmp
pop
cmp
andb
stc
mov
lret
out
rclb
popf
add
sti
pushf
mov
jl
sbb
les
jmp
cmp
xor
pushf
mov
adc
jecxz
xor
lret
jmp
mov
leave
sbbb
add
push
std
pop
sub
adc
dec
repz
sar
sbb
mov
pop
pop
in
push
popa
std
in
jecxz
outsb
fistpll
cwtl
adc
push
cmp
jae
mov
sbb
and
movsb
adc
push
jo
repnz
and
sub
repz
sbb
push
dec
das
sbb
das
cld
and
pop
dec
jne
out
push
rorl
imul
paddw
mov
dec
popa
stos
cltd
mov
das
fs
mov
push
popf
imul
scas
fnstcw
push
scas
lods
inc
jp
iret
dec
loopne
push
mov
or
mov
movsb
aam
cmpsb
cmpb
dec
bound
in
imul
jle
push
mov
xchg
pop
cli
outsb
rcl
xchg
clc
mov
push
add
sub
add
les
or
dec
repnz
pop
std
popf
cmp
or
imul
mov
psadbw
mov
xor
adc
movsl
pop
ficompl
sar
test
mov
jo
adc
lds
rorl
pop
push
jmp
fcompl
outsb
addb
adc
test
leave
daa
aaa
inc
test
dec
sub
xchg
adc
sbb
mov
lods
jp
mov
test
cltd
cmc
cmpsb
cmp
cli
icebp
push
imul
lcall
out
sub
int3
loop
outsl
xchg
stos
add
idivb
mov
mov
outsb
nop
arpl
scas
sbb
iret
test
mov
inc
pop
push
ss
push
shll
dec
lds
mov
mov
pop
mov
inc
xor
enter
inc
xor
fcompl
xor
out
fiaddl
adc
dec
adc
xlat
cmc
sub
pop
pop
in
into
jne
scas
lahf
push
leave
les
lods
and
jns
test
movsb
sbb
mov
leave
sahf
rcrb
sub
xlat
sti
das
lods
or
mov
and
or
push
dec
scas
idivl
test
and
xor
daa
popf
stos
popf
pop
sahf
ljmp
push
wbinvd
jp
cmp
std
das
in
mov
adc
lds
mov
lds
int
std
or
notl
mov
mov
or
aam
std
inc
popf
dec
jae
ja
inc
imul
hlt
mov
imul
insb
xchg
insl
popf
sub
mov
sub
or
mov
mov
cwtl
movsb
add
mov
mov
loope
insl
out
cmc
rclb
push
sbb
in
ljmp
push
fisubrs
mov
dec
push
iret
or
sub
mov
js
ret
icebp
aaa
inc
mov
mov
in
jmp
dec
aam
rorl
jg
add
lods
mov
push
add
xchg
negl
mov
scas
push
fs
mov
or
mov
movsl
xchg
popa
arpl
cmp
lahf
das
std
xchg
mov
and
pop
xor
lds
pop
xor
stos
sahf
filds
cmp
lret
mov
pop
add
push
popa
and
push
and
daa
xchg
cmp
ds
cld
inc
jmp
scas
data16
scas
lret
adc
repnz
jl
pop
inc
jb
pop
loop
inc
aaa
aad
xchg
rorl
mov
inc
jae,pn
xchg
xor
das
movsb
adc
push
fucomp
popa
or
push
cmp
daa
sahf
call
lods
adc
or
enter
imul
sub
mov
repnz
jecxz
or
icebp
xlat
out
lods
pushf
sub
adc
sar
out
add
and
stos
mov
test
mov
add
dec
sbb
inc
lahf
stos
scas
xor
dec
popf
or
xor
add
inc
ficomps
jo
jae
and
test
add
int3
les
push
xchg
outsb
dec
daa
or
mov
mov
push
aam
sahf
cmpsl
push
jecxz
iret
leave
cli
inc
mov
int
ret
push
pop
vunpckhpd
pushf
add
bound
sbb
mov
mov
jo
dec
jnp
fwait
add
adc
movsl
xor
lds
inc
lock
mov
pop
mov
pop
push
movsl
test
lds
sti
lahf
pusha
or
addl
sub
lret
clc
add
push
das
cltd
xchg
jp
sbb
jge
loope
or
mulb
mov
scas
sbb
sbb
dec
fcompl
cmp
push
arpl
cmpsb
inc
pop
jg
cmpsb
jne
sub
mov
scas
push
dec
fdiv
add
mov
scas
sbbl
jae
mov
pop
mov
push
repnz
mov
sbb
int3
push
out
clc
aam
enterw
jg
aas
push
fwait
ss
sbb
rorb
les
jg
movsb
and
pop
fisttpll
lret
lods
mov
pop
xor
je
cmp
cmpl
sarl
les
sbb
les
and
mov
mov
push
inc
in
or
and
popa
sbb
lds
jle
xchg
shl
adc
nop
call
cmp
jg
push
mov
and
movsl
add
cmpsb
subb
arpl
inc
gs
out
push
xor
jmp
sub
jns
lods
mov
or
int3
sbb
sbb
enter
ds
lds
and
dec
jmp
ja
test
jb
arpl
negl
test
xor
data16
clc
repz
and
mull
or
int
loopne
or
dec
inc
scas
push
push
push
push
pop
dec
iret
lock
shlb
push
hlt
xlat
scas
or
sub
stos
loopne
mov
jbe
lret
and
dec
outsb
or
arpl
dec
adc
sbb
lea
or
pop
mov
pop
add
mov
pop
adc
pop
xchg
iret
dec
lock
push
sbb
repnz
mov
sbb
mov
ret
lret
mov
pop
mov
aas
clc
movl
jecxz
sbb
push
aam
ret
imul
adc
scas
stos
jb
mov
pop
popa
pop
xor
push
push
jb
fistpll
data16
lods
les
mov
pop
or
inc
xor
out
adc
into
add
push
out
fiaddl
adc
les
xchg
push
int
enter
push
sub
dec
cwtl
bound
leave
sub
movsl
testb
cltd
or
inc
push
mov
mov
js
fs
mov
sbb
push
jge
dec
xchg
addr16
leave
add
or
cli
pop
insl
ja
pop
cmpsl
cltd
sub
mov
rclb
in
ljmp
pop
inc
ret
push
pop
jo
cmp
sub
js
sarb
movsl
or
cmpsb
inc
mov
push
jmp
mov
movb
dec
cltd
xchg
jg
lret
xor
mov
dec
or
mov
and
pop
push
cwtl
fimull
jmp
inc
xor
mov
ss
inc
data16
inc
mov
add
or
js
xor
xchg
ja
jmp
fcoms
rolb
in
ret
pop
xchg
push
in
insb
mov
sbb
into
lock
xor
xchg
subb
adc
cmp
mov
int3
xor
pop
cmp
adc
sbb
pop
lahf
sahf
adc
mov
dec
testl
dec
loop
push
and
popf
lahf
xchg
jmp
sar
fnstenv
sub
fcomi
lcall
aaa
adc
jp
mov
fninit
imul
es
dec
cmp
lret
push
in
add
fisubl
and
leave
sbb
les
push
jl
fdivrp
add
test
daa
or
mov
popf
lds
hlt
data16
shll
in
movsl
or
mov
call
dec
fnstsw
adc
ret
les
mov
and
sub
lock
xor
dec
or
sbb
ret
xchg
inc
or
xchg
repnz
mov
push
mov
loope
cmpb
push
fildll
ja
test
imul
jae,pt
lret
lret
add
fwait
sub
mov
push
and
fistl
shlb
mov
jbe
loop
and
or
add
popa
sbb
and
xchg
test
mov
dec
dec
mov
movsb
out
mov
add
push
pusha
daa
push
fdivrl
mov
jge
cmp
and
sbb
out
int3
fwait
rcrb
cmp
add
add
mov
loopne
shrl
or
push
aas
or
inc
out
stc
test
sub
decb
add
fcos
notb
inc
imul
dec
pushf
addr16
push
ret
dec
sahf
or
ds
in
rorb
xchg
sbb
fisubrl
lcall
xchg
imul
repnz
xor
in
sti
in
adc
adc
repnz
cmpsb
pop
cmp
xchg
sbb
mov
or
stc
adc
scas
xchg
push
out
mov
mov
xchg
out
and
outsl
xor
adc
push
ret
out
sahf
rol
mov
dec
and
xor
sbb
cmpsb
lret
jg
ret
mov
mov
adc
xor
and
loopne
lret
pop
jns
shrl
fwait
mov
pop
jno,pt
cmp
cmp
dec
sub
sub
mov
inc
out
push
xchg
jb
insb
xor
lahf
loop
addr16
jge
andb
imul
dec
lcall
cmpsl
imull
leave
mov
rolb
pusha
xchg
lahf
aam
ljmp
mov
icebp
lods
arpl
xor
in
push
mov
push
enter
js
repz
subb
scas
xor
adc
cs
and
repz
daa
mov
xchg
push
test
push
repnz
dec
scas
pop
aas
test
mov
cmp
xor
and
sahf
inc
pop
outsl
daa
xlat
les
mov
pop
call
loope
dec
mov
in
in
sbb
inc
rolb
xlat
sbb
shrl
adc
dec
add
cs
adc
xchg
add
repnz
aam
pop
adc
cmp
mov
test
and
push
fs
lock
imul
out
inc
pop
pusha
lcall
std
shl
mov
ret
sbb
pop
mov
icebp
test
fmuls
push
mov
into
lcall
dec
cmp
cmp
inc
dec
pusha
push
cmpsb
xchg
mov
mov
sub
sti
xchg
pop
push
shl
pop
imul
xchg
fs
sar
sar
nop
xor
push
pop
bound
inc
in
addr16
xor
lret
add
mov
fcomps
mov
push
add
mov
jge
push
iret
ja
or
sub
imul
jb
insb
int
pop
jmp
sbb
icebp
adc
repz
mov
cld
pop
inc
jns
xchg
ljmp
mov
out
push
cwtl
popa
or
add
sub
cmp
outsb
fildl
xor
xchg
mov
dec
jo
clc
mov
pop
pop
test
xchg
cld
sbb
cmp
xor
in
ss
jne
xchg
jno
pushl
sub
test
jle
jp
add
sahf
in
repz
mov
loopne
mov
aas
test
inc
call
sahf
dec
push
jo
inc
out
or
mov
int3
loope
push
inc
imul
lea
inc
or
mov
push
jl
jge
les
xchg
xlat
dec
loope
jmp
test
push
or
or
pop
mov
int3
cmpsl
xlat
subl
sbb
or
rcl
push
mov
dec
sub
and
pop
sub
aad
fsts
ljmp
stc
and
xor
jle
push
bound
inc
mov
add
rclb
ret
add
mov
leave
xor
and
roll
cmp
jp
test
pushf
push
jmp
add
scas
cmp
fcomps
pop
or
sahf
int3
sbb
mov
sti
mov
and
push
xchg
jg
sub
pop
jmp
cmpsb
sbb
insb
rclb
popf
push
add
cmp
pop
mov
cmp
das
and
aad
je
outsl
cmovo
loopne
mov
mov
dec
pop
cld
xchg
jbe
add
out
ret
leave
rorb
xchg
mov
xor
jne
enter
aas
xchg
out
mov
pop
mov
mov
movsl
mov
insl
push
dec
scas
xchg
jns
in
pop
sbb
imul
mov
mov
gs
jp
scas
je
sbb
in
mov
or
or
pop
sbb
stos
and
pop
in
sub
push
pop
enter
adc
cmpsl
cmp
test
adc
push
fnstenv
mov
jns
fs
hlt
mulb
mov
jge
cmc
lods
lcall
inc
mov
popf
fidivl
adc
repnz
cld
lret
mov
int3
xchg
fcoms
in
loope
lods
jg
in
push
popa
shll
imul
repnz
and
aam
jb
popf
lcall
jmp
insl
fsts
push
add
cmpsb
int3
decb
xorl
jnp
out
lods
iret
jl
jmp
xor
pop
inc
xchg
mov
inc
sub
repz
and
je
mov
out
test
je
push
hlt
into
xchg
mov
lds
bound
jb
xor
dec
imul
xor
sbb
divl
lcall
jp
or
xlat
fisubrs
or
lods
out
dec
add
lods
dec
jae
rcrl
cmp
data16
js
jb
mov
cmp
push
clc
outsb
or
imul
ljmp
cmp
imul
fucomp
inc
ja
mov
mov
xchg
pop
push
dec
and
shlb
fwait
mov
dec
arpl
jno
push
xor
insl
gs
lret
pop
in
test
and
pop
jbe
pop
inc
adc
push
pop
out
sti
shr
add
cmp
jns
fsts
mov
cli
mov
jmp
es
pop
into
imul
lods
push
mov
jnp
dec
push
jecxz
jne
movsb
out
add
pushf
mov
cs
mov
mov
aaa
sbb
gs
iret
cmp
negb
arpl
mov
mov
lahf
dec
repnz
fdivr
sbb
jnp
mov
jecxz
and
int
sbb
hlt
push
clc
in
stos
sub
sbb
sbb
mov
mov
sub
out
xchg
js
cmp
add
mov
lcall
cmc
and
push
ss
lret
dec
stos
mov
lea
push
std
loope
push
cmp
aaa
repnz
dec
movsl
pop
jg
sbb
in
sub
cmp
mov
testb
in
xchg
mov
xchg
test
sahf
ret
ljmp
addr16
mov
jl
adc
pop
adc
and
imul
mov
sbb
adc
sub
xchg
les
pop
push
xchg
sub
mov
lods
push
add
push
jmp
xor
jno
xchg
outsb
enter
cmc
cmpsl
std
hlt
pushf
jmp
inc
push
aaa
or
rcrb
mov
lds
or
cltd
sbb
push
das
fsubs
jbe
mov
cltd
rcrl
mov
inc
mov
out
and
cmp
adc
pop
aam
push
ljmp
in
jne
lods
cmp
dec
sbb
jne
dec
xlat
dec
inc
std
cli
fistl
or
dec
repz
pop
sub
inc
add
dec
and
push
lret
addr16
xchg
jp
out
xchg
gs
or
sub
add
imul
and
jne
fnsave
pop
push
icebp
fildll
sub
xlat
ljmp
push
les
jle
aas
mov
inc
dec
data16
jne
lock
ret
movsl
out
movsb
in
stc
leave
jno
and
iret
das
sti
xchg
das
cmc
lcall
aaa
sbb
add
mov
fidivl
xor
lret
jbe
adc
mov
push
mov
mov
jae
adc
pop
ds
jno
sub
test
push
stos
cld
push
add
dec
add
mull
mov
push
add
lret
es
sub
inc
jle
int3
lods
shlb
dec
or
xchg
inc
inc
stc
fistps
mov
mov
je
fs
mov
cld
mov
call
ljmp
ret
ret
jnp
out
cmpsb
sub
dec
insb
lret
pop
into
push
scas
cmp
lea
or
or
jl
jb
scas
iret
addr16
jb
out
into
add
scas
adc
jl
xchg
lret
mov
loopne
mov
and
insb
daa
add
fs
cmc
jle
shlb
jg
and
inc
adcl
fcomps
lcall
into
sbb
sub
sti
mov
pop
lcall
jmp
addr16
push
push
adc
lret
aaa
adc
mov
aad
sbb
insl
mov
pop
add
mov
aam
xor
scas
loope
popf
pop
leave
sbb
inc
jecxz
mov
inc
mov
adc
es
stos
mov
jbe
push
inc
and
push
and
fs
xchg
in
aad
lds
hlt
test
jne
gs
xor
and
push
and
fs
xchg
in
aad
lds
hlt
test
jne
gs
push
dec
inc
and
push
and
adc
dec
in
aad
les
aam
in
adc
add
xor
and
xchg
hlt
test
sbb
jg
vcmpsd
or
push
mov
sub
cmpl
mov
je
cmp
je
push
lea
push
push
movb
call
call
mov
xor
xor
call
mov
xor
call
mov
mov
lea
push
call
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
pop
pop
test
jne
mov
not
mov
movb
or
mov
leave
ret
gs
jne
inc
cmp
call
pop
pop
dec
in
hlt
add
fbstp
ljmp
push
sub
jp
inc
in
cmc
mov
mov
stos
gs
mov
test
xchg
ljmp
push
pop
and
jo
pop
in
test
movsl
mov
lods
lock
mov
pop
adc
imul
mov
stc
in
stos
test
cmp
clc
adc
loope
lock
aam
xchg
mov
sbb
aad
dec
xor
xchg
sbb
jbe
inc
sub
pop
iret
mov
shlb
cmpsl
xor
arpl
fisubrl
mov
in
mov
push
cmc
sub
ss
xchg
sub
das
ds
sub
dec
and
mov
jo
cmp
stos
pop
iret
cmc
inc
push
add
xchg
mull
imul
fldl
test
divb
xchg
addr16
in
cmc
xchg
cli
out
mov
mov
add
shl
cmp
test
dec
push
sub
jp
clc
in
cmc
and
mov
mov
test
xchg
fsubs
add
push
cmp
and
movhps
lds
lods
leave
movsb
popf
mov
out
roll
and
inc
and
adc
cmp
inc
call
fcmovne
jmp
imul
imul
adc
mov
mov
mov
test
xchg
ljmp
push
sub
jp
push
lcall
movsl
fidivl
ljmp
jp
fstpt
cmp
mov
push
loope
xlat
in
push
mov
outsb
shl
into
clc
jp
jno
add
push
xchg
in
jb
push
or
mov
adc
test
cmp
sub
or
call
dec
dec
mov
shll
adc
inc
pop
sbb
cmc
dec
and
adc
jne
cmp
clc
icebp
mov
jg
cld
xchg
in
mov
in
fistpl
sbb
sbb
ret
or
mov
xchg
or
shl
jmp
xor
cmp
lods
movsb
pop
lock
jle
dec
pop
repz
sbbb
push
push
cmpsl
aas
jno
push
sbb
rolb
xchg
jp
ss
movsb
push
testl
lods
push
enter
repz
mov
or
shl
out
movsb
in
fs
imul
inc
cltd
cs
outsl
and
pusha
mov
mov
xor
test
daa
aaa
push
dec
mov
sbb
bound
push
jmp
out
mov
stos
rcrb
out
testl
adc
mov
adc
pop
cmp
jl
sar
inc
rcll
subb
push
out
dec
test
sar
xorl
push
je
loope
movsb
shll
cmp
add
mov
pop
sub
out
jb
dec
dec
dec
sar
shl
jnp
ss
dec
decl
cli
and
dec
rcrl
mov
scas
mov
mov
bnd
ds
jo
jo
mov
lcall
mov
popf
pop
fstps
leave
in
push
gs
imul
adc
popa
dec
and
sub
mov
imul
sbb
jae
lods
lcall
add
jb
pop
sti
sbb
les
cwtl
out
out
or
or
rolb
xchg
cmp
push
call
orl
jnp
fdivs
imul
push
lahf
fiadds
int
cld
cmpsl
cltd
gs
insl
pop
das
jecxz
sbb
out
xchg
imul
push
out
mov
fimull
push
dec
and
jmp
push
pop
int3
mov
test
rcrb
stc
fcompl
push
sbb
sub
pop
or
into
int
push
cmp
mov
dec
arpl
push
loope
jnp
lock
lds
sarl
jns
mov
and
dec
nopl
lods
js
hlt
outsb
ja
in
cwtl
shrl
push
push
sub
roll
xor
mov
daa
imul
xor
std
movb
lods
jp
xor
xorl
out
add
xchg
push
sarb
loopne
push
iret
xchg
loope
or
jmp
shll
ret
insb
in
cmp
subb
out
es
enter
pop
adc
push
cmp
icebp
addr16
mov
movsl
in
mov
dec
loopne
lds
popf
nop
cmp
pop
xchg
ja
stos
in
and
ret
je
dec
outsl
out
cltd
pop
or
adc
xchg
inc
xchg
hlt
add
in
mov
fisttpll
mul
pop
sbb
jns
std
gs
cmp
jmp
mov
dec
test
xor
sbbb
mov
cmp
adc
and
add
pop
jmp
ret
xor
xor
mov
fnstenv
and
jl
idivb
das
inc
sub
cmp
orb
dec
cmpsl
adc
push
movsl
adc
ret
mov
add
int3
pop
mov
adc
mov
add
sti
lods
pop
stos
fnsave
mov
or
in
sarb
lods
ret
in
sbb
lahf
movsl
jge
scas
imulb
inc
jecxz
lods
jle
pop
ds
out
add
adc
jo
clc
dec
in
inc
cmp
mov
movsl
or
jo
xor
mov
scas
adc
mov
rolb
mov
mov
dec
pop
mov
ret
mov
mov
inc
mov
es
loopne
xor
pop
fstpl
data16
cld
rorb
sbb
or
jl
pusha
xorb
push
dec
or
inc
test
or
lret
lods
rcrb
xchg
jge
inc
imul
push
push
rol
pop
out
ret
add
scas
mov
outsb
sbbl
add
ret
cld
sahf
xlat
clc
inc
ljmp
mov
stos
jl
adc
into
mov
mov
fwait
adc
fsubl
inc
xor
xor
lock
inc
jbe
add
outsb
aam
fiaddl
ss
and
fistpl
arpl
in
mov
mov
cwtl
ret
cwtl
jg
rcr
inc
fcos
scas
repz
sub
or
adc
ss
sbb
xor
inc
insl
jp
data16
push
data16
mov
add
sahf
popf
mov
and
and
push
cmp
lcall
smsw
rcl
mov
push
test
clc
push
mov
repnz
ljmp
cli
push
or
or
xor
sbb
dec
sbb
xchg
lcall
lea
lcall
sbb
push
inc
pop
or
cmp
cltd
or
lock
loopne
jg
testl
mov
lahf
jno
inc
rol
int3
pop
into
mov
jge
adc
sub
or
gs
mov
movsl
pop
mov
xchg
clc
repnz
movsb
in
loopne
aam
cmpsl
inc
cmp
push
mov
fldenv
inc
mov
daa
imul
push
sbb
or
jmp
add
je
stos
and
sarl
in
scas
test
and
rclb
cmp
mov
add
lods
mov
xchg
cmp
dec
outsl
inc
leave
sbb
dec
xchg
pop
or
arpl
pop
lods
stos
ret
jge
lahf
popf
mov
push
sbb
cwtl
sahf
pop
imul
fcoml
es
enter
mov
outsl
bound
jno
cs
mov
cli
sub
push
std
aas
push
sbb
nop
sti
pop
jp
sbb
js
stos
mov
sarb
inc
cmp
mov
jbe
dec
nop
stc
mov
cmc
xor
lock
push
xor
loopne
sbb
sbb
daa
xchg
sbb
icebp
stos
and
icebp
mov
dec
add
cld
ret
loope
dec
xchg
jne
push
ljmp
lods
sbb
mov
insb
xor
fs
add
lret
shlb
fimull
sbb
xchg
and
add
xor
mov
xor
cmp
mov
mov
push
adc
xor
scas
mov
jecxz
dec
or
inc
push
sar
mov
xchg
mov
mov
sub
int3
jo
push
std
xchg
xchg
movsb
or
es
js
xor
inc
pushf
and
clc
push
in
fmull
lods
push
and
jne
mov
aad
xchg
sub
seta
rol
or
andb
push
icebp
imul
pusha
push
cmpsb
daa
leave
hlt
sub
cmpsb
xchg
in
into
and
sub
nop
mov
adc
repnz
ret
ret
mov
aas
nop
jge
je
adc
sub
lods
rclb
dec
into
repz
test
mov
xchg
pop
sahf
popf
imul
xor
mov
loope
out
out
movsl
clc
rolb
ffree
push
sbb
sbb
mov
loopne
cmp
push
int3
cwtl
pushf
in
mov
xchg
sub
popa
aam
cltd
xor
xchg
pavgb
xor
int
cli
mov
fcompl
mov
int3
scas
shlb
aas
mov
iret
jns
xor
scas
cmc
dec
insb
fsubs
iret
xchg
sbb
pop
cmp
sahf
das
mulb
push
mov
andb
sbb
loope
stc
push
movsb
idivl
xor
push
rcrb
lahf
mov
imul
add
mov
mov
adc
adc
icebp
mov
xor
xchg
jbe,pt
push
test
fcomip
ret
mov
cmp
mov
mov
jecxz
cltd
scas
xchg
mov
imul
imul
dec
outsb
mov
jmp
inc
jnp
lea
popa
into
mov
mov
jmp
lods
dec
in
sub
mov
ret
test
call
out
sbb
es
add
adc
and
das
cld
cmp
scas
int
out
mov
pop
cmpsl
rorb
jmp
pop
sub
mov
rcrl
add
aam
xor
mov
inc
cld
ljmp
push
jne
xor
pushf
dec
out
dec
imul
xor
ljmp
push
rolb
adc
and
scas
ljmp
jl
jmp
mov
sub
ficompl
loopne
jg
int
inc
cmp
xchg
and
popf
test
cmpl
xchg
out
aad
daa
jl
push
push
jg
push
mull
push
dec
imul
mov
push
push
xor
enter
aas
das
or
cltd
lret
sub
cmp
fidivs
lods
mov
mov
add
gs
add
jnp
ret
dec
pop
les
dec
add
lea
jns
sbb
decl
mov
cli
in
orb
aaa
sbb
inc
mov
fwait
icebp
cmp
xchg
mov
cmp
xor
in
je
xchg
push
pop
inc
in
inc
push
jl
pop
add
lahf
inc
mov
cltd
cmp
sub
pop
jecxz
sbb
subb
mov
xor
daa
or
or
jle
or
decl
aad
aas
subb
lea
inc
sub
enter
mov
mov
cwtl
mov
aam
and
sbb
enter
popf
hlt
outsl
mov
lcall
gs
mov
cmpsb
mov
call
shrb
lcall
pop
in
setge
jmp
push
shrb
testl
test
jo
jmp
or
stos
push
mov
lock
mov
or
jae
in
sbb
xchg
jecxz
inc
cmpsl
inc
add
jp
inc
cmp
int
and
pop
jl
out
mov
mov
pop
inc
and
add
and
sbb
push
jecxz
das
into
add
mov
sarb
stc
mov
notl
mov
mov
sub
add
divb
cmp
fists
in
xchg
mov
sahf
sub
xor
ret
push
movsl
scas
stos
cli
testl
out
outsb
inc
pop
sub
cmpl
fstps
icebp
sahf
pop
jns
jl
jae
mov
es
or
cmpb
je
xchg
push
adc
pop
lods
add
popf
cwtl
neg
pop
inc
mov
int3
js
jp
mov
stos
add
insl
lret
lods
xor
xlat
lcall
and
and
mov
add
mov
cmpsb
inc
xchg
push
iret
out
push
popf
mov
dec
cwtl
pop
and
xchg
imul
cwtl
insl
pop
pop
out
test
nopl
mov
xchg
sahf
mov
mov
sub
sbb
fmuls
dec
lds
and
ss
leave
pusha
inc
jbe
adc
pop
aaa
sahf
in
aam
int3
jae
ds
in
stos
movsl
stos
xor
dec
adc
mov
or
repnz
jmp
cld
std
cli
pop
and
shlb
sbb
sahf
push
movsb
cmc
aas
scas
pop
mov
cmc
jl
sbb
mov
dec
mov
repnz
in
xor
mov
mov
inc
xchg
dec
decb
lds
subl
pusha
inc
movsb
pop
xor
sbb
repz
cmp
fisubs
adc
data16
daa
jge
sub
sbbl
inc
push
aas
scas
mov
xchg
add
pop
adc
push
jg
push
lret
f2xm1
int
sarb
cmpsl
mov
mov
and
xor
pop
es
xchg
pop
aas
adc
leave
pop
jns
cmc
pop
int3
lea
shll
ljmp
cmp
test
cmp
dec
test
js
jbe
test
and
pop
repz
dec
inc
xchg
mov
aad
mov
push
xor
mov
stc
push
xchg
aas
cmc
stos
jge
mov
inc
push
jp
lret
js
mov
push
jle
and
and
add
jae
stos
lahf
add
pushf
xor
into
pop
mov
rclb
mov
pop
mov
pop
gs
fwait
cmp
xchg
inc
out
in
xchg
mov
push
pop
scas
mov
testl
xchg
andl
or
jno
ficoml
es
jmp
test
sub
nop
mov
mov
fwait
adc
sti
loopne
cmp
push
fwait
imulb
jae
jnp
sbb
repnz
dec
mov
loope
mov
in
jl
xchg
pop
dec
cmc
dec
nop
and
ficoms
dec
pushf
inc
pop
mov
test
and
push
mov
adc
sbb
add
ret
movsb
jp
fidivl
pusha
cmpsb
cwtl
fildl
adc
sar
leave
fs
ret
jp
push
add
or
mov
cs
xlat
shlb
xor
cmpsl
and
or
lret
cmpsb
push
mov
out
sub
xchg
jb
inc
xor
cmp
mov
negl
insb
out
push
xchg
ret
adc
loopne
jecxz
or
cmpsl
stos
shlb
cli
mov
inc
push
lock
gs
mov
sbb
jp
xor
mov
push
mov
sbb
movsb
call
movq
jp
fistl
sub
inc
cmpsb
movsl
sbb
fidivrs
sub
ja
addr16
popf
movsl
mov
popa
or
sub
mov
mov
xor
dec
nop
adc
and
std
sbb
jmp
or
testl
mov
dec
fldl
cwtl
cmp
jp
push
xchg
jp
repnz
lret
roll
mov
andb
push
std
adc
icebp
add
mov
cmc
mov
mov
inc
inc
enter
fidivrs
call
sahf
xlat
dec
jo
jns
int3
sarl
push
sbb
jae
xchg
and
push
decb
ret
shr
jae
shlb
aad
cmp
sbb
vhsubpd
pop
xchg
leave
mov
out
sub
mov
rcll
stos
push
jp
pushf
fbstp
xor
fisubrl
cs
data16
imul
in
test
mov
dec
pop
sbb
mov
mov
out
bnd
mull
inc
ja
imul
scas
dec
nop
jl
xchg
inc
lret
mov
jbe
adc
das
iret
fmull
mov
xor
cmp
sub
scas
out
pop
rcrb
bound
js
push
pusha
cmpsb
loop
scas
lahf
dec
dec
adc
inc
pop
stos
fstps
sarb
and
pop
jb
int
repz
sbb
xchg
or
imul
mov
sub
jo
sbb
les
pop
cmp
lds
vmovhps
jae
fcompl
mov
push
imul
xchg
repz
enter
xlat
enter
sbb
mov
dec
in
cmc
and
xchg
sub
out
lds
push
cmp
dec
mov
add
ret
daa
dec
pop
aad
xor
cmp
xor
or
and
jnp
fwait
iret
jle
ljmp
sahf
mov
or
mov
stos
lods
pop
ja
adc
shlb
and
rcl
cld
mov
add
add
ds
and
or
lret
pusha
ficomps
shrb
xchg
sub
mov
mov
xchg
sbb
jnp
or
fstp
imul
jo
and
icebp
inc
loopne
lcall
test
xor
rcrb
cwtl
mov
icebp
inc
in
sbb
lea
jb
sbb
jecxz
adc
iret
cmp
inc
test
mov
push
or
scas
dec
jns
sbb
or
dec
jecxz
xchg
cs
xor
xchg
push
rorl
xor
addps
lcall
add
mov
push
xor
out
dec
adc
mov
mov
loope
mov
inc
lret
stos
xor
fs
loope
mov
lods
mov
loope
into
imul
shrb
mov
shll
stc
pop
stos
mov
push
bound
mov
jnp
add
addr16
out
or
in
dec
repz
scas
sub
rorb
scas
xlat
push
popa
pop
sbb
fstl
adc
sub
fcoms
dec
fistpl
shll
in
sbb
pop
mov
adc
in
test
lcall
mov
add
aaa
xchg
pop
cmp
idivl
jp
mov
or
sbb
sbb
jmp
imul
dec
mov
push
inc
mov
cmp
add
mov
xchg
and
jb
fwait
jo
insl
or
lret
test
mov
jg
dec
mov
cmpsl
pushf
mul
xchg
fwait
sbb
mov
push
dec
sub
xlat
les
add
pop
or
fcomps
sub
adc
sbb
outsb
aas
lea
push
or
cltd
cmp
and
mov
dec
push
pop
mov
jno
push
dec
movsl
std
ss
es
cmpsl
cmp
test
jl
es
xor
mov
jmp
and
sub
pop
mov
xor
loope
in
rorl
imul
je
fnsave
hlt
pop
jmp
loope
imul
in
add
mov
inc
push
jp
push
jbe
pop
jo
repz
insb
xor
mov
jae
adc
inc
mov
cmp
adc
loopne
or
call
lcall
cmp
push
out
mov
int
inc
mov
imul
add
xchg
enter
out
popa
mov
mov
punpckldq
mov
push
test
mov
pop
imul
cmpsb
inc
pop
pop
scas
mov
sub
pop
and
fs
pop
daa
push
jle
int
or
add
addr16
xchg
xchg
jl
push
mov
jnp
mov
ret
jle
or
push
dec
add
xchg
lods
push
mov
in
jmp
fisubrl
ss
mov
mov
fwait
pop
lcall
js
js
rcrb
das
outsb
and
pop
in
ljmp
movsb
aam
mov
lret
mov
sub
clc
rcll
jmp
sub
add
ss
sahf
orl
scas
inc
mov
lods
stos
clc
adc
pop
cmpsb
jg
cmp
test
or
fistpl
popa
jbe
inc
mov
cld
push
daa
jle
sub
dec
xchg
scas
mov
or
add
inc
xor
push
inc
ret
test
lcall
sub
inc
cmp
sub
sahf
cmp
jbe
mov
sarb
shlb
shr
mov
adc
and
inc
lods
pop
or
bound
test
popa
jle
add
test
cmp
and
xor
xor
imul
sub
loope
fwait
or
dec
inc
lret
je
xor
push
pushf
test
icebp
mov
mov
cmp
mov
jg
push
call
cmp
push
push
sbb
hlt
jns
stos
sbbl
and
stos
lea
xchg
xor
cmp
loop
push
inc
dec
jmp
xlat
push
inc
push
sub
cld
inc
inc
dec
mov
mov
test
test
lods
pop
add
adc
dec
fwait
xchg
jle
int
push
mov
dec
imul
jl
cld
insl
dec
mov
mov
pop
mov
lds
fidivrs
and
int3
fwait
push
dec
lcall
call
lahf
frstor
sbb
lea
inc
stos
mov
gs
inc
fwait
push
pop
fnstenv
test
mov
shrb
inc
push
in
sub
or
pop
aad
sbb
mov
cmp
inc
sbb
inc
js
xchg
mov
cmc
les
pop
lcall
and
inc
aas
push
sub
jp
push
lcall
movsl
fidivl
ljmp
push
sub
jp
push
lcall
movsl
fidivl
ljmp
push
movsl
pop
xor
push
fwait
cmc
mov
mov
mov
test
xchg
push
gs
jne
inc
ficoms
and
cli
adc
and
aad
aad
lds
push
mov
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
jmp
lea
push
pushl
call
lea
push
pushl
call
jmp
call
push
mov
call
xor
leave
ret
or
mov
mov
mov
mov
cmp
dec
pop
ds
cs
push
lcall
iret
fidivrl
ljmp
pop
sub
pop
dec
das
jp
push
lcall
iret
fidivrl
ljmp
cmp
cmp
jae
jp
js
mov
lahf
testb
add
xchg
xor
mov
pop
sub
incl
dec
mov
inc
fldt
lahf
add
arpl
mov
jb
xchg
pop
pop
out
mov
mov
lret
or
repnz
popa
jno
lahf
dec
sbb
outsb
insb
pop
aad
in
mov
stc
xchg
das
ret
pop
jb
cli
lcall
scas
sbb
int3
nop
cmp
sbb
push
pusha
packuswb
jne
jmp
xor
inc
cli
into
ljmp
mov
and
pushl
out
bound
das
cmp
add
adc
fsubrl
sub
jg
pop
imul
decl
iret
fidivrl
ljmp
pop
sub
aas
dec
das
jp
push
out
dec
xchg
sahf
in
cltd
clc
scas
fstpt
jbe
or
aas
cs
push
push
lds
loop
mov
enter
sbb
inc
cmp
adc
mov
in
mov
mov
cli
lahf
ljmp
pop
sub
aas
dec
das
jp
push
lcall
iret
fidivrl
ljmp
pop
sub
aas
dec
das
jp
push
lcall
or
mov
mov
sarb
dec
adc
lcall
clc
ret
add
xchg
sbb
xchg
jge
add
stc
stos
and
inc
insb
mov
lret
scas
xchg
push
wrmsr
jbe
dec
std
fstl
push
cli
sbb
mov
push
lods
pop
xor
call
jl
jnp
aam
push
ds
aad
outsb
xchg
sub
rcr
inc
sti
inc
scas
xor
xor
out
push
ss
inc
std
stc
orb
push
loopne
popa
push
insb
cwtl
xor
push
cmpsl
mov
sub
cmp
xchg
pop
subl
pusha
lahf
cmp
inc
add
mov
fwait
outsl
out
iret
fdivs
sub
jmp
xchg
or
sub
fdivl
push
daa
push
int
lret
mov
jp
adcb
in
mov
pop
mov
lock
jmp
icebp
lds
inc
lds
js
mov
push
sti
cmpsl
push
mov
mov
mov
mov
ja
inc
jb,pn
pop
dec
push
add
jp
mov
and
pop
fsubs
out
aad
dec
imull
loope
pusha
jp
jge
inc
mov
mov
xchg
cmp
enter
cmp
xchg
lret
in
int3
cmpb
loopne
call
mov
adc
cmp
pushf
lea
or
fcoml
lcall
mov
cltd
nop
xlat
pusha
lahf
push
pop
mov
push
jne
inc
stc
cmp
adc
jge
insb
mov
hlt
mov
push
push
aad
adc
jnp
push
repz
and
arpl
push
imul
jae
pusha
adcb
sub
cmp
cmp
xchg
and
dec
cmc
sbb
movsb
jne
sub
push
xchg
or
jmp
adc
scas
xor
lahf
sub
jbe
sbb
inc
or
ret
fs
stos
mov
xchg
add
lahf
daa
jb
pop
or
mov
cmp
mov
mov
sub
inc
sbb
stc
jle
mov
sbb
sbb
and
cmp
mov
add
loope
pop
ds
xor
sub
inc
inc
testl
bound
push
mov
inc
out
pop
cmp
mov
adc
mov
and
stc
inc
mov
jns
mov
xchg
jg
push
fdivp
out
ret
xorb
lahf
repnz
sbbl
xchg
clc
pop
or
pop
shlb
adc
pop
imul
icebp
and
int3
ffree
push
sub
xchg
aas
mov
lcall
lret
sbb
sub
js
mov
sub
push
add
mov
repnz
xchg
jmp
in
lret
lret
inc
sbbl
sbb
cmpb
scas
loope
das
cmpsb
repnz
mov
pop
mov
dec
add
js
dec
mov
rorb
and
movsl
push
inc
mov
shlb
out
xchg
mov
xor
push
call
jg
sub
mov
jbe
fiaddl
repz
mov
and
pop
pop
inc
std
out
ss
movsb
push
dec
adc
jmp
movsb
push
inc
insl
inc
add
xor
dec
and
bound
or
xchg
nop
aad
or
fldenv
les
dec
test
pop
lods
fchs
imul
mov
lret
mov
lock
lds
repnz
loop
pop
stos
das
sub
fisubl
decl
inc
jae,pn
insl
lcall
fsub
cltd
add
lahf
aas
add
push
xchg
xchg
dec
pop
pusha
clc
ret
sbb
push
sub
loopne
xchg
insl
xor
or
pop
loope
mov
leave
shll
mov
test
xlat
adc
lds
push
and
dec
inc
xlat
es
aam
aad
adc
mov
adc
js
ficoml
sbb
mov
sub
push
ja
jecxz
add
sub
inc
cmpsb
add
sbb
sub
insb
pop
ds
shrd
xchg
ss
push
push
xchg
pop
outsl
dec
cmp
mov
popf
sub
inc
sub
mov
cs
adcl
or
rcll
pop
shl
sbb
cmpsl
xchg
dec
jno
sub
mov
mov
js
movsl
adc
daa
jl
adc
push
outsb
cli
inc
aam
mov
lcall
or
sbb
cmp
xchg
mov
xchg
cmp
adc
pusha
pop
lahf
pop
mov
mov
fisubrl
add
push
pushf
test
cmp
and
sbb
jno
and
das
and
mov
pop
or
fsubl
sti
test
xchg
mov
pushf
aam
dec
pop
dec
add
push
aas
sbbl
inc
icebp
sbbb
add
pop
dec
popa
outsl
sbb
sbb
mov
aaa
mov
idivl
stos
clc
lock
cmp
popf
xor
cmp
repz
std
cmp
adcl
inc
or
std
data16
push
fwait
xchg
xchg
loope
dec
adc
or
push
jle
jno
int
xlat
mov
pop
test
adcl
cld
aaa
ljmp
xchg
ljmp
adc
dec
dec
jno
ss
jle
dec
cli
in
sahf
fisubrl
mov
out
aam
mov
cmp
jae
shll
cld
jae
adcb
dec
aad
push
mov
push
xchg
sbb
dec
inc
ds
popf
les
pop
xchg
insl
sarb
mov
iret
les
hlt
pop
or
rolb
push
repnz
cltd
mov
sbb
test
and
jne
and
mov
das
sub
or
mov
fcoml
pop
pop
fildl
std
mov
sub
stc
in
pop
gs
cmp
lahf
inc
jne
loopne
or
dec
inc
cld
lea
jnp
push
es
inc
in
je
dec
aad
mov
pop
jg
mov
mov
sbb
push
hlt
push
jecxz
cmpsl
sub
rorl
jg
push
data16
push
and
pop
scas
popf
mov
mov
pop
les
fdivrs
movsb
cltd
aaa
dec
div
not
and
aam
dec
jo
iret
aaa
negl
xchg
int3
mov
xor
stc
pop
add
arpl
jo
iret
bnd
push
inc
std
icebp
jne
cmp
pop
js
pop
xchg
mov
leave
xchg
mov
sbb
dec
repz
fists
jne
in
push
flds
lock
pushf
je
sbb
xor
push
dec
push
mov
jmp
jne
pop
loope
ret
pop
icebp
out
in
adc
ljmp
sub
dec
and
push
lock
imul
push
push
addl
repnz
fxch
pop
lret
pop
div
adc
mov
loopne
mov
shll
add
inc
mov
shrl
scas
inc
xor
xchg
dec
and
mov
jmp
adc
mov
aad
ficoml
cmp
and
dec
sub
les
lret
out
sub
nop
lock
mov
adc
or
mov
pop
lret
test
fcmovbe
je
fcmove
sub
mov
push
pop
int3
lret
insl
in
mov
out
sahf
jge
repz
mov
push
jb
or
popf
sub
cltd
shll
and
out
andl
ds
repnz
adc
sbb
inc
mov
decb
and
test
mov
not
mov
mov
lcall
adc
sub
lds
adc
cmpsl
orl
cld
pushf
pop
in
int
mov
cmp
sub
sub
cmc
in
out
sub
mov
imul
and
jmp
pop
or
pusha
in
leave
insb
xor
lcall
fwait
xchg
dec
sub
push
or
inc
negb
shlb
pop
xchg
jne
sub
xor
insl
mov
pop
cs
daa
icebp
hlt
or
adc
rcrl
rclb
and
shl
stos
adcb
sbb
mov
adc
aas
and
jne
sahf
add
add
test
sbb
imul
cmpsb
fisttpll
adc
mov
imul
aas
lcall
cwtl
out
push
int
jne
mov
xchg
mov
cli
imul
jne
mov
shrb
je
stos
jp
lcall
fs
leave
adc
insl
lahf
testb
add
jnp
shrb
shrb
rsqrtps
jmp
and
mov
mov
xchg
dec
cmovb
lret
in
mov
mov
cli
sbb
fldcw
hlt
push
ja
andl
call
push
sbb
mov
or
lock
xchg
rclb
and
and
push
scas
fcmovbe
xchg
sbb
mov
ss
lods
xor
movsb
les
mov
popa
xchg
lock
movsb
push
into
enter
and
and
sbbb
xchg
ds
fs
hlt
adc
sub
sbb
cmp
mov
loopne
aad
push
lds
inc
testb
sahf
jmp
out
jno
pop
clc
xchg
push
aas
inc
pushf
mov
fimull
cmc
or
or
in
xor
lods
jg
in
push
addb
imulb
add
std
mov
cmc
dec
push
sbb
popa
lods
push
aas
call
ror
cmp
adc
fadd
sub
test
jmp
and
call
cmpsb
sbb
cmp
iret
out
dec
std
cmp
lahf
loope
jb
in
cmp
add
hlt
lcall
imul
mov
outsl
dec
jo
loope
ret
jmp
adc
inc
mov
cmpsb
xor
or
scas
push
push
lret
rcrb
mov
fs
int
and
push
and
sub
lahf
xchg
and
call
lods
call
lret
mov
faddp
mov
xor
xlat
sub
xchg
mov
je
push
out
into
jo
cltd
xchg
cltd
mov
sahf
mov
push
lods
aad
jo
negl
and
pop
clc
mov
adc
push
lea
pop
idiv
aad
xchg
std
daa
adc
inc
dec
sbb
fsts
xchg
sahf
iret
xor
inc
and
daa
and
xchg
in
arpl
add
neg
push
stc
xchg
sub
and
imulb
fwait
call
leave
divb
push
outsb
jo
sahf
adc
shlb
pop
jne
ds
pop
rcrb
mov
out
push
jne
mov
call
pop
shlb
ret
pop
das
dec
mov
mov
dec
pop
int3
dec
push
push
cs
push
push
outsl
push
mov
insl
cmp
fnstsw
xchg
mov
add
pop
jbe
bnd
rcrb
inc
cmpb
sahf
cmp
repnz
andb
push
inc
mov
pop
jle
ret
cmpb
mov
leave
hlt
mov
pop
mov
inc
rcrl
add
test
jns
bound
inc
xchg
mov
into
fld
jle
jmp
fdivrs
daa
adc
add
mov
lea
pop
xor
cmp
adc
out
in
shll
or
sti
subl
jmp
dec
mov
xorb
pop
inc
orb
sub
push
divl
mov
inc
pop
dec
mov
shll
ljmp
subl
in
fs
lds
sahf
scas
inc
jmp
add
cmp
mov
dec
cltd
test
in
call
sbbb
popf
fcmove
sub
lret
call
imulb
jb
xor
pusha
push
popa
call
pushf
test
iret
mov
js
shll
insb
xor
test
outsl
add
imul
push
stos
shlb
sub
outsl
mov
cmc
aaa
sbb
iret
jb
sub
mov
pop
xor
jnp
gs
es
and
cmp
inc
into
cmpsl
jnp
ret
and
inc
aaa
push
sbb
out
stos
stos
nop
adc
ss
pop
ret
and
sbbl
ficomps
addb
std
pop
push
push
mov
sbb
bound
insb
sbb
mov
push
push
sub
sti
pop
adc
dec
nop
xor
add
out
add
enter
jno
addr16
mov
lds
stos
in
add
sub
inc
xchg
mov
sbb
icebp
jnp
sub
cmp
in
push
loopne
and
mov
push
xor
xchg
pop
loopne
cmp
sbb
adc
popa
xchg
or
pop
jecxz
sti
in
fists
decl
dec
imulb
arpl
inc
mov
repnz
cmp
movsb
or
jb
xchg
fisttpl
add
mov
out
add
adc
fs
xlat
inc
pop
push
pop
and
pop
mov
and
mov
sbb
les
mov
cmp
adc
out
push
ja
popf
cmpsb
pop
in
test
fnstenv
stos
out
pop
in
dec
fstp
in
fsubrp
xchg
sbb
or
push
add
dec
stos
sbb
mov
and
push
inc
jp
jmp
push
dec
test
in
fs
inc
jmp
out
push
xchg
scas
and
sub
cmp
xchg
lock
jle
dec
cmp
je
repnz
xchg
adc
mov
in
in
jecxz
push
ds
push
repz
dec
mov
scas
mov
push
stos
mov
or
out
or
push
and
adc
jbe
nop
or
in
cmc
xchg
xchg
fmull
movb
cld
ljmp
cmp
push
mov
or
clc
pmuludq
jle
sbb
push
sub
gs
xchg
jae
dec
inc
dec
add
sub
mov
fwait
push
or
popf
cmp
mov
into
mov
pusha
ljmp
popf
es
mov
cmp
add
daa
stc
pop
jl
or
addl
sbbb
outsb
mov
shll
pop
mov
mov
sbb
sbb
loopne
dec
lret
pop
cmp
mov
imul
insl
ds
adc
mov
in
aad
rorl
orl
adcl
pop
icebp
out
aas
jbe
mov
cltd
imul
cltd
dec
xor
pushf
mov
imul
sbb
scas
xchg
fnstcw
lock
imul
or
cmpb
push
test
dec
push
mov
rclb
sbb
int
stos
dec
xchg
cmpsb
cmp
xchg
and
cmp
push
negl
xor
mov
push
push
into
movsl
sub
std
xor
dec
fs
into
daa
cmc
jge
dec
std
fimuls
and
and
xchg
loope
rolb
data16
insb
cli
icebp
mov
adc
adc
dec
jns
out
pop
ret
add
sub
inc
rcl
scas
test
lahf
pop
lock
inc
bound
mov
in
adc
mov
pop
outsb
cltd
call
ss
div
fimull
lret
decb
xchg
sbbl
lods
insl
cmp
mov
movsl
test
les
sahf
int
push
mov
shlb
cwtl
arpl
inc
mov
imul
in
rorb
pop
movsl
push
pcmpgtb
je
lods
das
add
cs
mov
adc
jg
push
mov
jae
mov
sub
lcall
mov
adc
mov
jp
jg
dec
cmp
mov
ret
fs
pop
mov
test
rclb
out
or
and
cmpsb
mov
mov
sbb
in
inc
xchg
mulb
jecxz
dec
cmp
ja
xchg
fs
add
cmp
out
jo
pop
sarb
fsubrl
fcoml
sub
mov
sub
cltd
inc
inc
out
loop
push
mov
sub
jl
outsb
xor
cli
popa
popa
dec
mov
test
icebp
mov
dec
inc
cmp
fcoml
lcall
xor
mov
mov
push
jb
xor
cmp
not
xchg
ret
add
imul
lret
push
adc
sub
xchg
outsb
roll
pop
pop
mov
xchg
ret
mov
hlt
sbb
pop
stc
std
out
sbb
cmc
jnp
push
inc
pop
jl
ret
int
aam
pusha
into
pop
shrl
movsl
xchg
jne
bound
jne
out
push
inc
mov
and
dec
call
pop
adc
out
mov
bound
aaa
dec
cmc
fxch
mov
push
iret
ret
dec
dec
pop
test
cmp
rcl
cmovl
sbb
lock
neg
cwtl
sbb
or
sub
bound
add
xchg
nop
xchg
pop
arpl
cmpsl
leave
int3
mov
outsb
pop
mov
cmp
lahf
sub
pop
adc
sub
ss
rolb
sbb
jno
rcrb
pop
mov
jnp
jle
out
xchg
repnz
mov
jge
scas
dec
out
add
sub
lds
inc
arpl
scas
sub
ror
inc
arpl
repnz
test
push
push
bound
pop
hlt
jmp
and
les
rorl
into
das
jecxz
mov
imul
movsl
movsb
cmpsl
and
jecxz
add
std
xor
ret
in
addr16
hlt
adc
jl
cs
call
clc
mov
mov
int
or
pop
xchg
ret
jo
mov
cmp
lret
jbe
mov
cmpsb
rclb
sub
sbb
fisubrl
cltd
sub
filds
mov
push
cltd
push
push
lcall
push
mov
aas
xchg
sub
or
inc
xor
inc
sbbl
push
outsb
outsl
push
addr16
cmp
test
cmc
adc
lods
sub
mov
jmp
call
fstps
test
add
cmpsl
adc
ret
in
inc
xchg
pop
aas
push
xor
loop
jbe
insb
dec
add
rcrl
mov
mov
fiaddl
cld
and
jl
dec
sbb
jp
jbe
cmpsb
sbb
imul
dec
outsb
mov
dec
xchg
sub
push
push
outsb
jl
xchg
out
dec
mov
fidivrl
mov
data16
ja
cwtl
test
adc
xor
lcall
mov
xlat
adc
cltd
sbb
fwait
xchg
pop
mov
jnp
subl
into
scas
cmp
pusha
stc
mov
xchg
sar
jp
insb
daa
mov
movsb
mov
mov
inc
push
xchg
and
pop
jmp
mov
and
shr
push
adc
scas
std
mov
loopne
gs
fst
mov
outsl
lea
mov
jns
lea
cmpsl
pop
sub
ret
ja
clc
mov
xor
add
pop
lahf
int
lock
dec
leave
int3
sbb
out
in
mov
pop
fwait
sbb
sbb
out
mov
fstps
pop
jns
aaa
enter
xchg
adc
das
loopne
xor
icebp
flds
jb
mov
or
mov
arpl
int3
xor
push
push
mov
je
fwait
leave
pop
orb
jmp
arpl
movsb
pop
lahf
ret
test
mov
cmp
mov
lock
or
sar
lods
incb
adc
jp
jno
cld
or
inc
stos
add
hlt
out
loopne
xchg
rclb
sbbb
push
cmp
or
out
out
dec
cli
mov
inc
cmp
mov
fs
xor
add
mov
psubb
xor
pop
cmc
dec
aam
inc
sbb
movsl
adc
xor
xchg
add
xchg
and
popa
and
in
scas
pop
pusha
in
sub
add
add
sub
xchg
sbb
leave
std
jmp
xor
mov
outsb
dec
dec
sbb
xor
jecxz
sbb
mov
dec
js
es
xchg
daa
fisttpll
mov
xor
nop
in
cmp
into
push
aaa
mov
jle
dec
rorb
dec
cmp
cld
and
adc
frndint
sahf
fyl2xp1
push
dec
repnz
fidivrl
insl
mov
and
ds
fwait
imul
mov
addr16
subl
out
dec
cmp
cmp
data16
push
add
cmp
test
adc
lods
inc
jbe
mov
jle
je
rcr
pop
push
rcrb
mov
fs
adc
inc
sub
int
aas
jo
std
mov
icebp
inc
push
xor
cmc
push
mov
push
ja
sub
fs
in
xchg
mov
push
cs
add
sbb
jg
in
mov
inc
inc
cmpsl
in
pusha
jnp
arpl
leave
lods
or
lock
push
hlt
sub
inc
fildll
scas
cli
lahf
ljmp
pop
sub
aas
dec
das
jp
push
lcall
iret
fidivrl
ljmp
pop
sub
aas
dec
das
jp
push
lcall
iret
fidivrl
ljmp
pop
sub
aas
dec
das
jp
imul
decl
iret
fidivrl
ljmp
pop
sub
sub
loopne
lock
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
or
pusha
orb
jae
adc
shlb
push
rclb
jb
in
mov
mov
mov
adc
add
xor
and
xchg
adc
add
push
mov
mov
or
sbb
sub
aaa
fcom
xor
add
int
ret
and
sub
cmp
push
in
cmp
and
xor
sub
cmp
or
in
jl
mov
mov
sub
jo
xlat
cmp
shrb
fmull
inc
in
std
sub
xlat
cmp
mov
inc
leave
cmp
add
and
cmp
mov
xlat
push
addr16
sub
pop
nop
insl
jmp
xor
cmpsb
and
shrb
adc
lods
dec
push
mov
mov
testb
xchg
and
xor
in
loopne
cmp
jb
add
mov
inc
aas
push
or
rorl
xchg
das
pop
aas
dec
paddsw
std
push
pop
nop
adcb
inc
nop
movsl
inc
mov
mov
add
sbb
xor
cmp
leave
xor
cmp
or
sbb
dec
mov
rclb
lock
xorl
dec
cmpsl
movsb
pop
shlb
push
mov
pop
in
aad
lds
push
fildl
adc
repnz
lods
pop
cmpsb
lock
inc
mov
xchg
add
add
shlb
mov
push
shlb
ret
shlb
adc
add
push
mov
mov
adc
add
xor
and
shlb
shlb
adc
add
push
mov
mov
adc
xchg
maskmovq
notl
pop
ds
out
leave
scas
xor
xor
stos
hlt
mov
push
ja
sub
popl
int3
mov
inc
daa
mov
cmp
inc
sbb
pop
add
xchg
and
lahf
mull
icebp
in
mov
ljmp
pop
enter
test
jmp
les
adc
push
push
mov
shl
loop
lds
lcall
iret
cltd
dec
xchg
popf
movsb
movsb
pop
adc
popa
mov
in
jno
jae
mov
jns
mov
inc
dec
jmp
in
pop
xor
shrl
add
jmp
imul
stos
pop
sbb
jnp
adc
pop
push
out
mov
add
xchg
cltd
xchg
loopne
mov
add
ss
or
popa
dec
sahf
jo
push
jb
pop
int3
xorb
cmpb
mov
rcll
gs
adc
je
stos
out
mov
stc
inc
hlt
dec
lods
push
int3
jmp
mov
mov
jge
push
push
mov
lock
jge
push
xor
push
push
test
sub
stc
cmp
aas
fimull
js
addl
mov
imul
repnz
fstl
fwait
cli
stc
lock
jbe
adc
mov
cld
movsb
xchg
ror
lods
mov
sbb
push
arpl
inc
add
push
iret
mov
data16
mov
add
inc
sahf
loop
mov
inc
bound
xlat
sbb
sub
daa
jg
mov
and
shr
xchg
orl
push
rclb
push
and
xchg
jbe
xchg
inc
xor
imul
stc
shl
fistpll
inc
push
mov
pusha
adc
jno
dec
loopne
outsb
aad
mov
add
sti
rol
testb
jecxz
add
push
mov
cmpsb
into
test
mov
rcrb
lret
shl
imul
ss
mov
and
inc
sub
test
sbb
dec
sbb
push
push
test
cld
loope
push
jmp
mov
bound
sub
sahf
sbb
fildl
mov
repnz
xchg
outsl
xchg
out
mov
push
sbb
jecxz
cld
hlt
sti
mov
add
fucom
pop
sub
dec
mov
push
mov
sbb
push
test
xor
adc
stos
mov
xchg
bound
ljmp
loope
mov
imul
mov
fstpl
jbe
xor
inc
cmp
dec
std
gs
hlt
lods
rclb
mov
nop
adc
orb
dec
push
cs
faddl
fucomi
hlt
pushl
jo
mov
mov
out
cli
xchg
in
mov
popf
cmpb
xchg
jl
add
bound
adc
lea
xchg
movsl
insl
inc
stos
negl
adc
popa
xor
dec
out
mov
jns
bsr
inc
cmc
cmpl
in
push
adc
mov
fs
push
jne
lock
push
xchg
shlb
push
sbb
mov
push
mov
adc
inc
cmovle
sub
push
and
pop
mov
or
into
leave
js
mov
or
iret
cld
dec
nop
jnp
loope
mov
fs
cmc
xor
add
cmp
fwait
sbb
cmp
ds
sbb
ja
addr16
ljmp
lret
inc
out
xor
push
and
fisttpll
adcl
inc
ficoml
mov
xchg
mov
dec
sub
sti
rclb
inc
pop
out
ljmp
test
sbb
dec
or
jnp
jbe
lahf
push
dec
rorl
add
adc
sbb
or
mov
sbb
or
out
leave
mov
and
push
adcl
xor
xchg
fmul
std
in
sbb
subb
and
mov
jle
mov
dec
jle
add
pusha
push
js
and
inc
test
xchg
hlt
pushf
cmc
dec
cmp
scas
sub
mov
adc
ds
and
mov
pop
bound
sbb
dec
in
cltd
mov
xchg
xchg
aad
add
scas
lcall
jbe
sbb
sbb
mov
push
scas
sti
loopne
pop
js
clc
add
sbb
aad
inc
test
jne
and
inc
mov
sbb
sbb
mov
and
jmp
sub
pop
xor
popf
aas
loop
mov
pushf
xor
cmp
push
pushf
xor
popf
jnp
cmp
ljmp
push
loope
ret
js
xchg
inc
aam
and
adc
xor
mov
sbb
mov
cmpsb
xchg
cmpsl
loop
push
mov
inc
mov
push
push
sar
xchg
lcall
mov
bound
dec
push
push
add
push
adc
push
mov
or
sbb
les
iret
pop
fs
lea
mov
cmp
jle
pop
les
sbb
ja
adc
adc
and
ficoms
adc
lods
xchg
mov
cld
xor
or
shl
cmp
int
insb
jno
xor
sarl
pop
mov
fldcw
imul
push
int
pop
sub
and
pushf
fcoms
imul
adc
xorb
imul
addr16
mov
in
mov
aas
lea
cmp
push
push
dec
or
sub
mov
mov
gs
xor
test
xchg
hlt
mov
cmp
sbb
mov
add
stos
push
mov
cs
aam
push
loope
enter
cmp
mov
insb
mov
jecxz
cmpsl
sbb
decb
sbb
adc
repnz
in
mov
mov
icebp
mov
lret
sub
insb
orb
lret
pop
in
fiadds
xor
push
mov
shlb
nop
adc
les
les
pop
scas
jno
data16
push
negb
or
adc
mov
jae
inc
pop
divb
jp
mov
lods
imul
adc
jp
mov
mov
xchg
in
xor
pop
xchg
pop
inc
push
aad
or
xor
cmp
mov
mov
mov
test
dec
leave
add
ret
in
adc
repnz
call
mov
cmp
push
jp
outsl
sub
cwtl
jae
sbb
loop
lds
in
cwtl
movsb
mov
lods
les
in
lods
jg
jmp
mov
and
pop
fsubrs
pop
or
mov
and
pop
dec
in
je
mov
push
mov
test
cmp
addr16
xor
dec
jl
dec
adc
sub
cs
ret
icebp
mov
dec
mov
xor
fistpl
cmp
push
cmp
in
mov
cltd
stos
mov
mov
xchg
iret
addl
xor
sub
push
les
dec
loop
mov
lret
fwait
jmp
adc
sbb
dec
hlt
xchg
cmp
mov
lret
mov
pop
mov
loopne
lret
jns
movsl
xor
jmp
adc
je
popf
sbb
or
mov
ja,pn
lret
xchg
mov
sti
aad
xlat
in
nop
mov
push
cmc
adc
cmpsl
lret
mov
repz
sbb
enter
xchg
mov
jle
sub
loop
cmp
loope
stc
push
negl
or
movsb
jne
push
ja
push
or
xor
xor
or
test
sbbl
dec
push
mov
fistpl
in
stos
xchg
xor
mov
ret
jo
sub
pop
add
jmp
sub
sub
mov
lret
mov
test
push
fnstcw
cmp
jne
in
or
and
xchg
mov
push
cltd
fcoms
icebp
cltd
add
cmp
aam
cmpsb
sub
pop
loopne
pushf
inc
push
xchg
or
mov
jno
mov
jmp
inc
or
sub
mov
popf
scas
pop
in
mov
cli
cltd
fadds
dec
enter
nop
mov
out
popa
pop
fwait
push
imul
int3
mov
cmp
in
pop
sub
xchg
jae
mov
push
push
dec
pop
je
mov
xchg
jae
out
lock
adc
mov
sbb
clc
mov
cmp
xlat
xchg
lds
jg
loope
mov
es
sbbb
shrl
adc
sbb
inc
xor
gs
das
pop
mov
subl
inc
rolb
sub
hlt
mov
mov
jno
adc
call
xor
into
repz
inc
and
mov
enter
adc
adc
mov
pop
outsb
loopne
and
sti
outsb
movsl
xchg
cmpsb
dec
xor
test
daa
pop
outsb
xchg
inc
jb
out
fldl
int3
std
dec
das
cs
or
loopne
add
xor
loop
subb
mov
dec
in
jbe
xchg
mov
pop
push
and
or
xorb
jbe
call
pop
cmp
mov
xor
push
shlb
cs
addr16
jmp
call
push
xchg
shl
mov
scas
xor
leave
mov
mov
or
mul
cmp
jnp
fwait
shl
pop
out
fsubrl
xchg
sbb
iret
jb
dec
iret
dec
rclb
push
cltd
or
out
dec
pop
imul
push
mov
xor
lea
pop
pushf
cwtl
das
cmpb
mov
cmp
mov
lods
sbb
inc
orl
daa
xor
or
pop
ds
mov
mov
pop
dec
pop
mov
lock
aad
and
xor
mov
dec
pusha
cmc
mov
insl
cld
rcll
cs
adc
lods
fs
xchg
cmp
or
popf
mov
sub
cmpsl
jg
xor
xor
jae
pop
inc
push
repnz
mov
fwait
dec
xor
daa
stos
pop
stos
cmpsb
inc
movsl
sub
mov
xchg
mov
inc
hlt
mov
or
pop
push
inc
sub
pop
add
nop
in
das
lods
outsl
add
insl
bnd
out
ss
in
xor
adc
lret
or
cltd
add
push
movsb
in
sahf
dec
dec
dec
xorl
adc
rclb
mov
into
fstl
stos
mov
mov
sub
xlat
pop
into
pop
jecxz
mull
test
jle
dec
out
roll
sbb
push
lods
fsubrl
mov
push
ja
dec
adc
dec
pusha
pop
jmp
or
repz
loop
inc
add
jl
int3
and
loope
mov
add
popf
aaa
pop
pop
add
xor
xor
mov
in
pop
cmp
jg
fwait
aad
adcb
xor
xchg
pop
and
pop
or
xor
mov
add
out
mov
icebp
jg
push
jnp
aam
fsubrs
cld
push
push
jp
push
mov
inc
inc
pop
insl
push
sub
push
sbb
and
lods
or
mov
xor
or
lahf
jge,pt
xchg
and
xchg
in
mov
fwait
push
jmp
cs
or
pop
sti
dec
cli
and
ja
xchg
fdivrl
push
and
jae
inc
bound
and
ss
cmp
xor
lods
push
mov
mov
fldenv
je
and
add
add
and
xchg
mov
mov
div
test
and
push
mov
xchg
imul
xchg
mov
xchg
and
ret
adcl
xor
xlat
mov
sbb
inc
in
mov
xorb
nop
sti
test
inc
lods
out
out
stc
xchg
mov
loop
fidivl
or
and
inc
ss
jl
in
pop
pushf
dec
pop
dec
test
andb
sbb
lret
ret
mov
jmp
add
sub
cmp
pop
lcall
out
pop
jnp
mov
inc
iret
adc
sbb
je
cwtl
stc
testl
shll
or
push
xor
push
mov
outsb
or
ljmp
push
lahf
mov
inc
lahf
cmp
rclb
sbb
cwtl
sub
sub
test
pop
fisubl
imul
jnp
arpl
ss
aam
add
xchg
inc
mov
mov
js
jg
popa
leave
cmp
mov
sbb
jo
ficomps
xchg
insb
fsubl
rorl
stc
outsb
ss
jae
ret
fcmovb
inc
imul
testb
addb
mov
dec
scas
insl
mov
loopne
xchg
cmp
jecxz
push
decl
inc
adc
cli
fabs
mov
mov
in
adc
push
jle
push
scas
mov
sub
lfs
dec
lods
nopl
adc
pop
sti
jecxz
xor
out
or
je
mov
xor
mov
jg
sbb
cmp
xor
repz
inc
adc
or
mov
dec
mov
and
pusha
loopne
hlt
pop
sbb
jns
mov
xchg
mov
fsts
clc
ja
test
cmp
mov
pop
lock
mov
das
pop
cmp
bound
pop
aaa
dec
inc
add
cltd
lret
cs
sbb
mov
push
inc
aas
out
outsb
mov
fucomi
lahf
jae
adc
add
cld
lret
jmp
xor
mov
pop
out
test
pop
mov
frstor
cs
push
dec
ja
and
bound
mov
push
js
fwait
lret
adc
jne
add
jmp
pop
lods
fs
sbb
mov
aam
cmp
push
xlat
mov
push
clc
ret
inc
out
or
sub
mov
or
cmc
movsb
and
mov
lcall
popf
xor
pop
dec
xchg
mov
les
out
sub
mov
ret
mov
fs
inc
jg
or
shll
dec
mov
xchg
je
stos
in
mov
mov
jecxz
iret
cs
insl
jb
ss
insb
nop
xlat
push
loop
ret
lret
lret
lock
sub
sub
outsb
sbb
imul
mov
cmp
sbb
notl
addr16
sarb
pop
lahf
add
cltd
ljmp
jp
jle
mov
mov
and
sbb
add
bound
in
fimull
sbb
in
test
jb
add
xchg
jecxz
inc
xor
inc
test
std
add
test
pop
imul
cltd
leave
rcrl
push
fs
pop
xor
loopne
andl
and
add
or
iret
popw
add
sbb
dec
popa
xchg
sahf
addr16
jp
hlt
hlt
int
dec
push
add
jecxz
dec
test
aaa
clc
mov
adc
jmp
out
inc
mov
popf
sar
inc
xchg
in
incl
cld
lret
test
js
jmp
sbb
jp
jae
lret
mov
mov
scas
hlt
adc
dec
and
sti
pop
push
jmp
adc
inc
pop
mov
mov
stc
loop
mov
adc
iret
call
cmp
test
jg
jo
jl
xchg
lret
add
xor
mov
imulb
js
roll
sub
test
add
aad
sub
sbb
push
xchg
sub
jo
pushf
jnp
adc
jp
test
f2xm1
addr16
fs
and
inc
xchg
and
ja
or
jle
mov
xor
jne
adc
les
ljmp
lcall
jno
or
test
lods
mov
mov
push
push
imul
pop
aaa
sub
xlat
ss
dec
subb
popf
sbbb
xchg
call
mov
mov
lahf
shrl
sub
ss
popf
add
mov
pop
mov
stos
cld
jne
stc
xchg
pop
aad
test
in
mov
push
std
push
cwtl
sahf
aaa
sbb
cmp
and
mov
xchg
scas
xorb
adc
loope
loopne
push
inc
push
movsb
stos
das
xchg
repnz
add
adc
rcrb
stos
xchg
pop
test
xor
xor
push
and
lcall
adc
xorl
or
mov
jg
xlat
mov
xchg
leave
cmpsl
fldcw
shrb
mov
scas
cmp
je
stos
sbb
ret
daa
jb
into
jne
mov
or
mov
sub
xchg
or
outsl
pop
sub
and
add
and
aas
repnz
popf
mov
push
lea
ss
add
dec
push
repnz
adc
add
shll
or
sub
pop
mov
sbb
call
imul
es
fists
rolb
push
pusha
in
sub
or
sbb
into
ljmp
add
jno
xchg
mov
movsl
or
das
add
fldcw
test
enter
loopne
nop
xchg
adc
xlat
push
sbb
cmp
cmp
and
pop
sbb
aad
int
jno
add
dec
aam
fsubr
fldt
std
popl
shlb
fwait
dec
cmp
jp
mov
mov
mov
pop
add
ret
lret
pop
fs
lds
inc
inc
mov
or
addr16
jo
cmp
popf
push
mov
pop
std
daa
pop
jp
inc
aas
dec
std
test
mov
xlat
xor
jo
lds
jge
dec
repz
movsb
jb
push
rolb
ret
mov
in
mov
adcl
stos
pop
xchg
mov
xor
xchg
test
je
adc
int
inc
dec
pop
mov
int
inc
inc
mov
negl
test
sbb
pop
mov
add
outsb
mov
inc
sbb
bnd
and
cmp
sbb
xor
mov
adc
push
xchg
jns
xchg
xor
shrl
loop
mov
movsb
cmpsl
and
faddl
mov
icebp
out
dec
lret
mov
filds
dec
lret
jne
pop
or
scas
fs
sahf
mov
or
iret
pop
mov
mov
aam
mov
sbb
jnp
sub
test
int
ljmp
jp
dec
or
xor
lea
cld
sbb
movsb
cli
movsl
inc
pop
inc
push
adc
jne
add
xor
pop
cli
negb
fldenv
mov
insl
and
data16
pop
adc
cmp
and
sbb
jle
sub
mov
mov
inc
out
popl
mov
pop
jo
dec
insb
mov
fidivrs
into
outsl
scas
das
ds
pop
push
push
pop
movsb
jmp
lret
aam
inc
jl
add
adc
out
imul
lods
mov
das
sub
jb
lcall
pushf
dec
xor
sbb
mov
sbb
mov
xor
fistpl
push
or
sbb
insb
and
ja
in
scas
xlat
mov
mov
jno
das
inc
stos
mov
pop
outsb
mov
sti
dec
pop
sbb
iret
jecxz
imul
pop
mov
insb
out
loope
lds
sbb
cmc
sub
ret
inc
mov
cmp
js
jo
sub
out
repz
fstpl
scas
add
adc
dec
inc
rcrb
in
scas
xlat
cmp
je
scas
in
sbb
mov
movsb
ds
insb
test
loop
mov
mov
out
in
and
jecxz
sbb
into
jb
sbb
add
test
out
sub
imul
imul
not
jnp
shlb
cmp
sbb
dec
test
mov
dec
and
das
jge
and
lods
adc
loopne
ja
mov
or
push
cmp
push
mov
idivb
adc
jg
test
in
cmpsl
adc
pushl
jns
add
push
lret
inc
jbe
jmp
mov
ficoms
sbb
jnp
sbb
xor
mov
daa
aad
or
xchg
jle
sub
add
mov
mov
daa
lds
sahf
sarl
into
or
mov
push
stos
push
and
data16
adc
testb
adc
mov
inc
daa
sarb
testl
mov
inc
into
push
mov
mov
sub
and
jg
xchg
insl
mov
pop
loopne
sub
jecxz
aad
pop
pop
sbb
insb
mov
jo
ljmp
bound
aam
lods
int
push
mov
int
push
mov
in
fbld
call
fwait
mov
rorl
faddp
ret
dec
sub
push
push
out
xchg
jns
add
lahf
mov
adc
nop
mov
outsl
xchg
loope
mov
sbb
push
pop
call
stos
or
ja
push
mov
popf
inc
shlb
dec
jo
iret
or
push
aas
mov
pop
ljmp
mov
sbb
mov
adcb
add
xor
and
shlb
shlb
adc
add
push
mov
mov
adc
add
xor
and
shlb
shlb
adc
add
push
mov
mov
adc
add
xor
and
shlb
shlb
adc
push
nop
jb
bound
mov
cmpsb
inc
xchg
pusha
adcb
add
mov
mov
mov
loopne
out
or
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
hlt
add
mov
add
mov
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
das
cmc
add
sbb
add
adc
add
or
add
add
add
cld
hlt
add
hlt
hlt
add
in
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
cmc
add
push
cmc
add
pop
cmc
add
jo
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
call
testb
xor
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
test
add
mov
add
xchg
testb
pushf
testb
movsb
testb
lods
testb
mov
add
testb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
loopne
add
call
testb
or
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
shl
add
testl
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
clc
add
jl
add
je
add
insb
clc
add
fs
add
pop
clc
add
push
clc
add
dec
clc
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
test
add
mov
add
mov
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
dec
stc
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
in
add
in
stc
add
hlt
stc
add
cld
stc
add
add
add
or
add
adc
add
daa
cli
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
inc
cli
add
dec
cli
add
pop
cli
add
insb
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
