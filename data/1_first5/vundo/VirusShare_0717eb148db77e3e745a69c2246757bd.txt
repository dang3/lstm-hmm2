xchg
inc
add
pop
adc
outsb
pop
lock
pop
lock
or
add
or
xchg
punpcklbw
pop
add
add
push
add
add
add
or
add
add
lock
nop
add
add
add
or
rolb
or
add
add
add
nop
add
add
add
and
mov
or
mov
or
mov
add
add
add
add
pushf
push
mov
dec
pop
jo
mov
rolb
addb
add
add
xor
dec
add
add
add
cltd
or
push
add
addb
add
add
or
inc
push
inc
add
or
xor
xor
add
decb
push
add
add
add
or
rolb
or
add
add
add
or
add
inc
add
or
adc
sbb
mov
int3
push
mov
add
add
add
or
add
add
add
or
add
jo
test
push
add
add
add
adc
cltd
or
add
or
add
mov
add
add
add
mov
clts
mov
and
rolb
incb
mov
popa
add
add
adc
add
add
mulb
add
xor
add
push
add
addr16
add
lods
or
add
add
add
seto
dec
or
add
add
add
or
addb
add
add
or
and
nop
add
adc
mov
add
nop
add
add
cld
xadd
cs
jo
or
jo
dec
or
add
push
jo
filds
loopne
jo
pusha
add
inc
add
in
movl
andl
push
popl
xor
push
popl
call
sbbb
andb
test
jne
andw
orw
ret
subl
push
andb
push
push
popl
mov
push
popl
sbbb
pusha
andl
call
push
popl
push
popl
mov
push
popl
addl
push
movl
subl
addl
subb
addb
addl
subb
xorb
push
push
popl
call
movl
cmpb
jne
push
popl
push
popl
call
push
popl
push
sbbl
addl
orw
push
popl
addl
push
popl
addw
push
push
popl
call
movl
cmpl
jne
addl
movl
call
push
popl
ret
subb
jmp
push
popl
xor
addl
push
popl
mov
push
popl
push
popl
shl
push
popl
subw
mov
sbbl
shl
sbbw
push
popl
mov
push
popl
cmp
jne
orb
call
orb
popa
subl
push
popl
call
sbbb
push
andl
addl
push
popl
push
popl
addl
subb
movb
push
sbbl
push
popl
call
movb
push
popl
push
push
mov
lea
mov
sub
mov
xor
xchg
sbbl
mov
subw
sbbw
shl
push
popl
xorb
push
xorl
push
popl
xor
push
popl
movw
push
sbbw
call
push
popl
push
popl
push
orl
orw
mov
sbbl
push
popl
push
push
popl
jmp
push
popl
pop
sbbl
sbbl
mov
xorw
push
addl
push
xorl
push
popl
push
movl
push
popl
mov
subl
mov
push
popl
rep
sbbw
movb
pop
subb
orl
pop
push
add
sub
add
sub
mov
mov
shr
add
mov
xor
xchg
push
add
sub
mov
xor
xchg
push
popl
orl
xor
movw
jmp
andw
sub
orl
xorl
mov
push
popl
push
popl
sub
andl
sub
xorl
mov
push
popl
sub
push
popl
or
jne
andb
push
popl
add
movl
jmp
andl
mov
push
popl
shr
orl
push
popl
shl
sbbl
push
popl
mov
push
popl
jmp
push
popl
sbbl
sub
subb
xorl
mov
subl
orw
cmp
jne
addb
push
popl
mov
addb
push
popl
add
push
popl
subw
cmpw
jne
subb
ret
andl
addb
push
push
popl
orl
xor
sbbw
pushl
push
popl
pop
push
popl
orw
lea
orl
or
push
popl
movw
mov
subl
andw
mov
subb
push
popl
lods
sbbl
sbbl
mov
addw
pop
andb
xorb
ret
push
popl
push
popl
push
push
popl
mov
push
popl
add
movw
push
push
popl
push
popl
push
andw
push
xorb
push
push
popl
subl
push
addl
push
popl
mov
orw
push
popl
mov
orl
add
xorl
pushl
orl
andb
mov
orb
push
popl
add
orb
add
orl
push
popl
mov
push
popl
xorw
add
push
popl
andl
xor
andw
lea
subw
mov
sbbb
add
push
popl
push
popl
mov
movb
sbbw
xor
addl
rol
push
popl
push
popl
xor
push
popl
inc
andw
xorw
cmpb
jne
subl
addl
cmp
je
push
popl
inc
addl
cmp
jb
xorb
push
popl
mov
xorl
andw
add
subw
movw
movzwl
push
popl
push
popl
mov
andl
add
orb
mov
sbbw
push
popl
add
xorb
pop
push
popl
cmp
jbe
push
popl
orl
cmp
jae
push
popl
pushl
subl
addb
pushl
push
popl
push
addl
addl
xorw
orl
addl
xorb
orb
pushl
push
popl
call
andw
push
popl
call
addl
pop
push
popl
sbbl
pop
addl
addl
pop
push
popl
orl
pop
xorw
push
popl
pop
push
popl
movl
leave
orl
push
popl
ret
push
popl
push
popl
call
sbb
push
dec
out
mov
ret
jle
inc
xchg
mov
xorl
pop
xchg
adcb
das
xorb
lods
fsubrl
gs
mov
adc
cmp
pop
push
hlt
iret
adc
lcall
pop
outsl
pop
gs
mov
repnz
push
ss
mov
cld
cmp
add
sbb
out
cmpsl
xchg
sti
add
cs
push
je
cmpsb
fnstcw
mov
push
fucomip
adc
daa
mov
outsb
rcl
jl
or
cmp
mov
repz
xchg
push
adc
repnz
add
scas
pop
pusha
hlt
jbe
aam
fwait
jp
cwtl
insl
int3
ds
fcompl
dec
rcrb
mov
es
xchg
aas
cltd
sub
stc
pop
out
call
jnp
push
or
mov
add
or
cmpsl
jg
sbb
xchg
add
jg
popa
jge
jno
xlat
xchg
imul
add
mov
sti
fdivr
inc
lcall
cmp
sub
adc
int
or
pop
int
sub
mov
dec
daa
sbb
movsb
and
mov
gs
push
sbb
inc
mov
loope
sub
or
and
sahf
mov
sbb
imul
les
test
and
push
data16
or
dec
pop
pop
daa
mov
outsb
sub
out
subl
aam
adc
and
rcrl
mov
add
pop
test
jae
mov
loop
ret
imul
gs
aaa
add
dec
pop
and
xor
nop
shlb
pusha
sub
enter
adc
testl
and
and
mov
lods
or
pop
mov
pusha
xor
cs
cld
loopne
sarl
loop
push
mov
into
cmp
ds
fbstp
in
fstl
sbb
lods
pop
pop
fildl
sbb
dec
inc
repnz
je
dec
pop
or
cs
stc
pop
out
call
push
pusha
in
bnd
push
fucomip
les
cmpsb
cmc
sbb
push
addr16
shlb
rep
jmp
and
mov
call
clc
xor
les
mov
stc
fsubrp
cmp
sti
adc
in
incb
jmp
test
fidivrl
mov
inc
jne
pop
xor
pop
stos
addb
jl
sub
repz
mov
scas
or
or
pop
shlb
scas
stos
test
mov
and
clc
xchg
pop
mov
xlat
lahf
imul
pop
pop
pop
rclb
imul
mov
and
inc
fwait
jb
adc
test
data16
adc
mov
dec
in
push
mov
mov
mov
xorb
jmp
or
ljmp
je
lods
or
int
sub
add
hlt
stos
sbb
sub
xchg
and
cmpsl
mov
aaa
inc
push
pop
and
shrl
stc
adc
cmp
int3
xchg
dec
pop
adcb
insl
sti
cmp
cmpsb
arpl
sub
sbb
jns
jle
aam
inc
imulb
loopne
loopne
call
dec
pusha
in
push
fsubl
fsubrp
les
cmp
insl
adc
lret
loopne
mov
inc
lret
mov
cld
or
or
pusha
hlt
cmpsb
sahf
dec
loope
mov
ljmp
popf
out
test
pop
cmp
aas
jb
out
adc
cwtl
sti
adc
shrl
push
cmc
cmc
mov
push
mov
out
xchg
lret
pushf
loope
mov
lods
iret
fxch
adcb
jl
push
lahf
push
insl
fldt
repnz
and
or
or
jp
push
cmpsb
pop
mov
test
fsubrp
mov
add
dec
popf
adc
decb
lahf
bound
cmpsb
inc
and
fidivs
adc
fucomip
les
sbb
insl
and
add
and
into
scas
sub
pop
add
sbb
andps
jne
sti
adc
mov
lock
mov
jge
es
push
cmp
loope
dec
xor
scas
int
stc
xor
dec
jl
pop
sub
lret
hlt
cmpsl
scas
add
bound
subb
add
fsubrp
sub
cmpsl
int
dec
or
add
aad
neg
pop
add
int3
jge
push
in
mov
mov
jns
xchg
cmp
int
stc
imul
movl
les
mov
data16
jp
mov
push
cs
sahf
sbb
movsb
int
sub
cmp
ljmp
scas
aaa
addl
add
and
cmp
lods
and
inc
push
aam
inc
xchg
jnp
inc
bound
mov
cmp
aas
mov
push
lods
subl
dec
data16
fsubrs
clc
fnclex
fucomip
les
cmc
clc
dec
outsl
imul
out
push
sbb
push
mov
outsl
lret
sub
dec
movsb
xchg
pop
adc
mov
cmp
bound
arpl
jl
mov
or
fwait
xchg
push
ja
fs
gs
mov
aad
xchg
call
jecxz
xchg
out
mov
fucomip
les
lret
hlt
movsl
test
int
cmpxchg
shlb
cmp
test
jle
scas
xlat
inc
add
mov
call
xor
stos
cmpsb
mov
out
les
or
test
sbb
mov
inc
into
stos
mov
test
dec
pusha
rol
or
adc
out
ds
in
jge
test
pop
mov
fmuls
rcl
mov
into
call
aaa
cmp
sbb
sub
push
je
jl
pop
stos
xor
fidivrl
enter
xchg
jle
ljmp
in
mov
dec
fs
leave
rcrb
add
mov
jecxz
xor
cmc
cmc
mov
jle
leave
or
loopne
ljmp
fisttpl
mov
and
int3
incl
mov
test
cmpsb
cmp
dec
mov
mov
jmp
jnp
inc
arpl
cmp
mov
cmp
jae
in
pop
push
idivl
cmp
cmp
cmp
mov
ror
or
jecxz
loopne
in
xor
mov
dec
mov
mov
cmp
or
jp
push
std
rclb
js
cmpl
insl
sti
or
cmpsl
fs
ljmp
inc
ror
or
aad
rcrl
or
rorb
lea
ret
in
incl
sbb
inc
push
in
adc
fwait
cmp
mov
adc
cmp
inc
push
jge
aas
es
fsubp
shl
mov
in
les
loope
cmc
pop
mov
iret
and
loope
rol
dec
push
js
int
pop
int3
jmp
out
pop
sbb
insl
pop
add
xlat
int3
idivl
add
mov
ds
sti
xchg
xchg
or
inc
xor
lret
cli
mov
mov
xorb
cmp
mov
xorl
loope
xor
and
ror
or
cmp
cmpsb
xchg
insl
or
leave
outsl
mov
pop
das
bound
call
notl
cli
push
or
xchg
lcall
insl
gs
sub
repnz
or
adc
or
inc
jmp
bound
xor
test
pop
cmpsl
ficompl
je
orl
in
sub
push
push
stc
add
movsb
and
cmp
in
adc
je
out
adc
ljmp
fsts
push
or
orb
pop
dec
xor
js
negb
mov
mov
mov
std
cmp
inc
inc
ds
sbb
mov
ror
jbe
loope
pop
or
movsl
or
mov
rol
or
scas
adc
mov
gs
insl
std
lods
fists
or
inc
inc
out
movsb
int
stc
push
fldcw
sar
div
sbb
sbb
mov
clc
scas
and
fs
out
sbb
fnstcw
xor
cmc
push
mov
push
data16
adc
rcll
cmp
mov
test
cmp
insb
cmpsb
or
repz
fwait
xor
and
jbe
inc
je
insb
xlat
test
dec
jo
sub
jecxz
rolb
ss
sbb
cmp
inc
aaa
or
pop
cld
cmp
aad
insl
icebp
insl
sub
gs
dec
xchg
adc
movsb
and
cmc
fnstcw
ficomps
fucom
out
or
bound
sbb
movsb
dec
xchg
hlt
push
cli
push
scas
xor
addr16
jg
neg
jbe
sti
mov
push
movsb
ds
dec
pop
jns
pop
repz
cmp
or
in
psubd
xlat
fimull
jl
test
gs
sub
xor
test
dec
xchg
divb
sbb
ficomps
repz
sbb
leave
add
in
xchg
inc
mov
cwtl
jae
xor
sbb
nop
in
sbb
cs
hlt
fcompl
or
push
rorl
leave
arpl
lds
cld
fbld
xchg
add
xor
inc
push
cltd
mov
stc
fsubrp
pop
pop
pop
loopne
lret
ror
inc
add
sub
scas
movsl
jmp
xchg
pop
and
sahf
lods
adc
lods
xor
cmpb
inc
scas
movhps
xchg
orb
xchg
fnsave
inc
or
out
call
dec
adc
push
mov
divl
mov
add
jns
mov
jmp
mov
hlt
stos
pop
int
cld
lret
jb
pop
lods
push
add
jle
fisubs
push
dec
xor
movsl
cmp
call
inc
subl
and
pop
lds
sub
dec
outsb
stos
or
stc
insl
sub
push
push
xchg
xchg
mov
xorl
ret
aaa
aad
inc
in
and
shlb
mov
push
rolb
insl
ret
or
out
shll
pop
mov
mov
insl
inc
or
push
adc
pop
mov
cmp
add
and
inc
insl
adc
loope
lret
addr16
imul
sti
or
mov
or
or
mov
xor
xchg
in
rcr
push
sahf
icebp
inc
jle
hlt
inc
or
es
or
out
and
lret
mov
cmp
push
jmp
adc
mov
mov
mov
xchg
dec
fstpt
xor
xchg
push
hlt
add
movsb
leave
adc
sbb
jge
and
push
mov
movsl
dec
jne
cmc
cmc
mov
push
add
daa
adc
scas
nop
jno
fldl
and
ljmp
add
int
dec
cmp
push
sarb
or
enter
push
jge
repnz
or
int3
arpl
xlat
int3
pusha
pop
push
fwait
cli
fiadds
enter
fsts
test
sbb
sub
icebp
loope
xor
out
movsb
inc
xchg
in
insb
ljmp
pusha
dec
icebp
daa
lds
divl
sub
push
in
imul
jl
jecxz,pn
pop
in
sub
fbstp
out
xor
in
pop
test
daa
fwait
test
gs
call
mov
mov
xchg
lock
movsb
pop
adc
sti
push
hlt
test
or
cmpsl
mov
push
pop
hlt
and
jl
jmp
cli
cli
add
lcall
inc
repnz
fsub
jo
dec
mov
xchg
movsb
sbb
pop
insb
push
movsb
sub
mov
cmp
aam
cmp
dec
je
orl
and
iret
push
cmp
insb
mov
loop
ljmp
lret
hlt
test
lock
aam
movsb
cmp
mov
push
xor
test
outsb
push
and
mov
fwait
dec
pushf
in
je
jns
mov
inc
jnp
inc
insb
leave
sti
scas
rcrl
or
mov
jl
sub
nop
insb
stos
cmc
lcall
std
sub
dec
xor
pushf
cmc
cmc
mov
arpl
mov
clc
sub
sub
cs
mov
leave
sub
movsb
int
adc
aad
cmp
push
dec
cld
leave
icebp
ss
and
adc
inc
inc
pop
aam
add
fdiv
rcr
add
je
or
lea
sub
insl
adc
ja
fs
shlb
cmp
enter
sbb
cmpsl
xchg
xchg
dec
imul
sub
and
ljmp
ljmp
mov
add
aam
loope
push
iret
scas
sbb
mull
cmp
jl
jne
pusha
mov
adcl
add
mov
out
div
dec
dec
pusha
push
mov
push
push
sbb
cmp
ror
roll
int
das
bound
cmp
xor
iret
in
int
add
xor
subb
cmp
out
repz
insl
adc
movsl
aas
push
jae
shll
bound
pushf
insl
lret
mov
divb
push
xchg
mov
sbb
mov
leave
inc
pop
icebp
aaa
jmp
stc
pop
mov
or
imul
lods
cmpsb
inc
fists
push
data16
xor
mov
pop
imul
sub
jle
dec
lahf
fcomps
or
add
jmp
sti
scas
int
and
sub
scas
sub
push
jge
push
sbb
cmp
popa
push
js
lds
mov
sub
arpl
mov
std
fsubrp
adc
in
test
ja
cmp
sub
insl
fdivr
pop
xor
and
mov
mov
xchg
fbld
push
inc
fwait
insl
les
mov
mov
leave
icebp
xchg
fs
insb
test
loope,pn
cmpb
lods
jo
int
test
int3
insl
and
data16
fs
cmpsb
jae
arpl
adc
aas
fs
push
sbb
push
lea
mov
in
inc
xchg
insl
ret
adcl
lea
mov
pusha
cmpsl
push
mov
int
ss
fucomip
les
inc
jno
mov
iret
test
mov
int
push
push
inc
or
movsl
or
icebp
jns
mov
pop
pop
push
lea
dec
mov
inc
adc
insl
push
jg
push
repnz
out
push
adc
mov
jg
lret
sti
adc
lret
xor
xor
sti
adc
cmp
int3
sti
push
inc
insb
addr16
sbb
stc
fiadds
push
je
rclb
out
les
movsb
sub
cmp
jns
jge
in
scas
adc
xlat
dec
out
dec
push
pop
mov
out
add
das
push
stos
dec
das
mov
cmc
cmc
mov
cli
jle
ljmp
mov
lahf
or
or
scas
or
bound
js
int3
sbb
stc
fiadds
pop
pop
xchg
push
lret
mov
xchg
hlt
fsubs
dec
movsl
loope
push
cmp
pop
int
mull
sbb
stos
cmp
push
jnp
test
inc
pop
pop
inc
sbb
pushf
adc
xor
nop
fnstsw
inc
addr16
add
mov
or
mov
js
pop
test
lods
and
xchg
sbb
xor
mov
int
stc
xor
ret
outsl
insl
fldt
pop
mov
lds
sub
jp
push
fists
add
add
call
sub
pusha
cmc
repz
outsb
pop
or
ret
stos
mov
push
pop
ds
mov
in
outsl
int3
fwait
repnz
leave
or
fmuls
mov
cmp
inc
popa
hlt
lock
je
inc
jo
pop
cmp
mov
loope
lock
mov
rcrl
out
fucom
xor
les
stc
push
addr16
push
mov
in
mov
pop
cld
adc
mov
insl
adc
inc
aaa
push
idiv
jecxz
out
sbb
scas
mov
pop
lods
pop
loopne,pn
out
aad
inc
dec
xchg
sub
jge
dec
pop
add
fsts
hlt
inc
fidivl
jle
mov
mov
loopnew
call
push
adc
cmp
imul
scas
dec
and
jb
and
aad
xchg
mov
mov
push
dec
sti
fwait
in
repnz
insl
vshufpd
sbb
add
xchg
mov
push
into
inc
sbb
mulb
sub
ds
and
mov
enter
add
add
sbb
ds
pop
pusha
and
ljmp
cld
hlt
cli
test
pop
or
jp
pop
ds
mov
lods
or
jecxz
repnz
out
pop
stos
nop
ljmp
xor
xor
sub
dec
lea
dec
cmp
adc
jle
mov
in
fstps
ret
ds
push
hlt
and
adc
insl
push
xor
mov
mov
cmpsl
ss
add
icebp
fldt
cwtl
jb
sbb
xchg
cld
loopne
dec
push
pop
int3
lods
and
push
les
pop
add
fucomip
les
sbb
insl
es
es
push
push
cmpsb
ds
xor
daa
ss
inc
pop
repnz
pop
sbb
jbe
loop
xchg
cmpsl
imul
cmp
cmpsb
iret
push
lds
pop
shlb
dec
mov
jae
lret
ror
mov
testl
jbe
mov
fmuls
jecxz
fists
shl
mov
adc
daa
insl
std
dec
mov
mov
insl
add
jge
adc
fs
push
pusha
xlat
lea
aas
xlat
ds
in
movsb
inc
into
in
xchg
dec
fcmovb
cld
in
pusha
sbb
cmp
iret
jae
enter
mov
daa
hlt
mov
int3
or
push
inc
data16
mov
daa
sbb
add
ficompl
or
pop
aam
iret
sbb
test
fs
fistps
mov
ror
or
in
addr16
loop
in
push
int3
es
pop
hlt
bound
and
fcoms
pushf
es
stc
fsubrp
dec
push
mov
sbb
jecxz
mov
in
pop
stc
rolb
and
repnz
xor
ficoms
pushf
pop
push
mov
in
dec
scas
cmpxchg
inc
iret
stos
mov
and
outsl
movsl
fidivl
jle
test
mov
loopne
call
cmc
push
test
pop
lret
mov
negl
mov
push
and
aam
repz
xor
ret
push
push
out
out
stos
repz
xchg
adc
pop
dec
inc
cwtl
insl
or
fsubp
mov
arpl
pop
scas
les
nop
sub
in
les
mov
stc
fsubrp
cmp
repnz
je
cs
mov
xchg
pop
add
lds
cmpb
data16
iret
lea
outsl
mov
add
out
adc
imul
inc
or
mov
fisubs
push
cmp
and
or
idivl
icebp
mov
and
lcall
fcmovb
div
scas
hlt
addps
jmp
pop
add
out
int
out
out
pop
lret
xchg
mov
pop
stos
mov
filds
testl
xor
dec
insl
fldt
push
lret
lds
daa
fdivr
adc
push
imul
inc
push
ficompl
inc
cmp
push
mov
sub
into
pop
div
ret
insl
stos
movsb
ss
aas
nop
jb
lret
sbb
arpl
sbb
and
push
fisubrl
frstor
pop
mov
ror
or
lret
repz
mov
pop
lret
dec
repnz
clc
adc
cld
or
adc
pusha
jmp
push
fsubrp
les
subl
push
jecxz
cli
dec
ret
cmpsl
mov
lock
mov
add
ficompl
pop
insl
es
aas
mov
adc
xor
jbe
and
cmpsb
fildl
adc
jnp
inc
arpl
nop
cmp
in
or
adc
or
pop
cli
mov
mov
aaa
add
movsl
jns
jmp
into
mov
cmp
and
xor
pusha
mov
popf
mov
bnd
or
iret
shl
negl
xchg
fcoms
mov
in
push
mov
or
jbe
orl
mov
frstor
push
dec
nop
and
loopne
pop
adc
lret
fisubrs
add
or
add
inc
std
dec
fisubrs
mov
pop
pop
orb
jl
push
popa
jo
jae
jmp
rorb
push
pop
cs
outsb
mov
insl
lret
xlat
lock
int
stc
aam
gs
in
ret
shrb
int
ret
ljmp
int3
jo
fldl
mov
fldt
int
xor
adc
es
push
out
pop
pop
es
lret
ror
pop
jns
mov
shll
or
int
push
das
outsb
movsb
or
dec
insl
and
ja
cmp
jae
std
cld
push
pop
push
loop
dec
scas
scas
and
lea
mov
inc
xchg
sub
rcl
sbb
xor
xchg
jg
outsb
lcall
decl
les
sti
dec
imul
xchg
mov
cmc
pop
sbb
push
pop
and
or
cld
aad
push
xor
jecxz
int3
or
mov
adc
adc
test
int
xor
bound
or
ljmp
pop
mov
sbb
leave
cmc
dec
test
subl
incl
pusha
sti
mov
pop
mov
aaa
add
mov
jb
scas
into
mov
xchg
in
les
sti
and
cmpsl
std
mov
pop
push
pusha
mov
xorl
adc
mov
into
imull
stos
push
ficompl
jmp
mov
push
aad
mov
mov
aas
mov
repnz
clc
mov
out
inc
xor
cmp
fcomps
jae
xor
adc
and
repnz
adc
shlb
mov
insl
push
cmp
cmp
out
lret
test
xor
dec
pushf
adc
ljmp
les
das
fmuls
mov
mov
sbb
loopne
call
dec
pushf
popf
aam
addl
push
dec
sahf
addr16
push
call
hlt
por
pop
sbb
xlat
dec
pushf
insl
push
fisubl
add
xor
aaa
push
loopne
call
adc
ljmp
aad
ror
roll
sar
sbb
movsl
add
adc
popf
rorb
mov
jle
daa
inc
fldenv
les
pop
icebp
xor
jg
jle
jge
fldt
or
enter
and
sbb
mov
lret
movsl
pop
ror
cs
cld
inc
loopne
movsl
add
pop
and
ljmp
mov
add
gs
mov
in
enter
sub
outsb
add
inc
push
cmc
sti
movsl
dec
jbe
fidivrl
lret
mov
rclb
je
mov
mov
lahf
inc
ret
jle
mov
or
mov
cmp
pop
dec
hlt
int
sbb
movsl
out
xlat
ret
divl
andb
mov
adc
insl
jne
jecxz
inc
inc
jae
mov
loope
in
push
pop
mov
push
js
lret
add
xchg
sub
stc
pop
jmp
jb
and
jp
adcb
dec
mov
stc
fsubrp
push
hlt
mov
insl
std
or
fs
insl
jmp
int
push
mov
or
pop
xor
ljmp
in
inc
scas
or
mov
lds
and
dec
lods
push
shll
pop
lret
pushf
insb
popf
mov
adc
sti
ljmp
stc
push
out
pop
testl
sarl
mov
sahf
sbb
mov
xlat
ret
push
mov
add
rorl
test
ficomps
cmp
add
dec
add
into
or
push
mov
dec
or
or
les
sbb
insl
and
in
loopne
cli
jo
sub
idiv
sbb
cld
movaps
repnz
add
jle
inc
mov
js
sbb
push
push
xlat
fs
sub
subb
repnz
jmp
loope
xor
fisttps
les
push
pusha
loope
movsl
sbb
test
stos
mov
fwait
out
cmp
sbb
sub
ror
stos
add
or
sbb
pop
lods
int3
or
and
mov
jne
notb
lret
dec
insb
mov
cmp
and
mov
outsb
lret
test
fsubrp
jmp
add
imul
aad
pop
stc
and
std
push
fmuls
das
push
fiaddl
xor
jae
pop
insl
loopne
call
add
int
outsb
cmc
es
test
pop
aad
imull
pop
or
mov
jo
fldcw
pop
hlt
ret
push
dec
clc
test
lods
jge
or
imul
movsl
bound
mov
or
cmp
fcmove
push
or
sub
outsb
mull
push
rcrb
lahf
testl
xchg
xlat
xchg
and
adc
negl
or
ja
out
and
nop
mov
js
repz
cli
imul
pop
sarl
shll
pop
lods
dec
sub
sbb
mov
jle
fdivrs
cmp
leave
cmc
testb
out
js
fistpl
test
inc
add
movsl
add
jmp
push
je
out
imul
inc
hlt
lods
pop
rclb
and
inc
push
ret
notb
and
ds
mov
test
loop
sub
daa
fldenv
pusha
jbe
iret
js
dec
mov
dec
in
ret
push
sbb
and
pushf
leave
inc
cli
gs
or
into
mov
loope
fucomip
adc
enter
push
push
aad
cs
mov
pop
add
xchg
xchg
mov
aas
add
mov
ljmp
ror
or
cmp
xor
out
dec
add
repz
dec
pop
xchg
lods
ret
lock
or
pop
cmc
xchg
data16
icebp
jp
iret
inc
lea
inc
sbb
push
shll
pop
lret
mov
jecxz
pusha
sti
ljmp
push
mov
cmc
pop
sbb
mov
mov
fistl
pop
shll
insl
int
xlat
enter
cmc
popf
xchg
dec
rcrb
mov
mov
lcall
jmp
mov
and
mov
mov
push
sub
testb
inc
rcrb
into
lods
mov
js
inc
pop
sbb
sti
incb
in
imulb
pusha
pop
cmpl
scas
xor
test
mov
rcrl
leave
sbb
push
loope
fdivs
aaa
push
jbe
orl
test
sub
xchg
subl
fadds
int3
push
jmp
shll
iret
out
lahf
repz
or
jno
fidivl
cmp
or
xor
and
push
add
push
push
int
mov
sub
in
lds
scas
fidivrl
push
or
out
shr
inc
movsb
int
jp
adc
sub
cld
repz
insl
sti
lcall
lods
cmp
cmpsl
mov
outsl
jbe
movsb
int
dec
or
cmp
repnz
xor
mov
incb
dec
cwtl
jns
mov
ss
sbb
test
push
mov
pop
or
orl
pop
int
cmp
fwait
jne
cmc
cmc
mov
outsl
jo
jecxz
enter
add
add
pop
jo
dec
xchg
mov
int
jge
mov
neg
sbb
cld
push
sbb
mov
or
popf
sbb
stos
inc
push
ja
movsl
add
mov
and
jbe
addl
pop
inc
movsb
int
lret
rcrb
idivl
sarb
nop
sub
pusha
jne
mov
gs
and
bound
jp
inc
push
in
in
xorb
rorl
cmc
and
call
or
and
inc
cld
call
push
aad
notl
or
mov
hlt
sub
jg
dec
inc
in
jb
pop
sbb
clc
mov
mov
popf
jo
test
sbb
ds
cmp
sub
or
nop
insl
sbb
add
fadds
lds
shrl
fnstcw
adc
imul
out
in
in
icebp
pop
mov
push
pop
lds
inc
jg
pop
jle
lods
bound
mov
or
adc
dec
das
mov
cmc
cmc
mov
mov
enter
test
mov
ljmp
sub
xlat
addr16
sarb
shrb
cmc
mov
jecxz
and
dec
cli
fsubrp
les
mov
test
in
daa
pop
push
insb
pushf
cmc
lods
dec
push
scas
and
gs
pop
cmp
es
add
cmc
xor
xor
icebp
pop
or
jg
stc
add
dec
xchg
cld
fdivrs
inc
pop
cltd
push
les
movsb
mov
pop
clc
test
out
out
dec
lods
push
inc
add
icebp
xchg
lods
or
sub
lret
sbb
and
sarl
stos
ss
xchg
lds
ret
lret
hlt
movsl
roll
jp
fisubrl
ret
arpl
xchg
pop
aad
outsb
insl
push
movsb
int
jp
test
mov
fsubrp
mov
imul
bound
xor
mov
mov
enter
loop
or
les
movsb
rcrb
adc
jle
mov
sbb
test
gs
add
jb
inc
cmp
jno
jecxz
mov
jnp
inc
pusha
sbbl
sbb
mov
jl
sbb
popf
jne
or
mov
in
mov
insb
roll
inc
loope
ljmp
and
hlt
mov
insl
add
add
into
xchg
int
push
xor
cmp
xor
push
dec
pusha
shrb
andl
dec
xchg
cmc
dec
jge
out
stos
icebp
lods
int
stc
cld
arpl
in
mov
mov
or
bound
or
int3
sbb
sbb
mov
mov
push
mov
dec
in
enter
test
sbb
xchg
ja
ljmp
ret
fcoms
ret
hlt
xchg
pop
lret
cmc
inc
cmp
out
nop
push
cwtl
cmp
pop
imul
mov
fsubrp
xchg
fs
imulb
cmc
aad
in
iret
loopne
push
arpl
mov
lds
mov
dec
std
repnz
lret
fidivl
hlt
rcrb
stc
scas
mov
jo
xor
ffreep
pop
lds
mov
es
cwtl
outsb
ds
ret
stos
rorl
aad
les
movsb
dec
xchg
jle
jmp
or
dec
jp
aaa
test
test
enter
sub
and
mov
insl
es
mov
lahf
insb
cmpsl
or
enter
mov
push
mov
push
fdivl
mov
add
bound
mov
or
push
push
dec
adc
cmp
ja
enter
in
ss
repz
scas
cli
sbb
or
mov
jg
test
in
and
adc
fs
les
movsb
and
int
push
test
mov
int3
lods
incb
cmp
jecxz
lcall
pop
and
outsb
in
mov
popl
mov
push
sub
jge
lods
mov
ljmp
test
mov
cmp
sar
pop
push
mov
loope
and
cmpl
icebp
push
xorl
or
fs
jmp
cld
repz
arpl
dec
fmul
pop
push
xchg
mov
push
sarb
sbb
mov
mov
dec
push
cmp
push
add
not
repnz
sub
shlb
pop
rcl
push
sbb
jbe
in
add
xchg
test
test
fstpt
pop
les
push
aad
out
aam
dec
inc
das
mov
sbb
shl
push
ds
or
mov
loop
ljmp
mov
daa
insl
cld
out
xchg
stos
mov
sub
int
push
cmp
pop
les
arpl
push
out
aam
dec
jge
push
inc
sub
shl
push
ds
sbb
pop
mov
test
icebp
dec
inc
push
add
cmc
or
icebp
fists
mov
adc
fistps
hlt
leave
mov
mov
nop
dec
fwait
mov
lods
sahf
inc
inc
cmpxchg
test
pop
xchg
orb
cmp
xchg
daa
test
xorb
nop
inc
shrl
test
hlt
stc
jo
dec
insb
xor
fnstcw
int
stc
xchg
push
lret
repz
je
pop
sahf
push
dec
std
leave
lock
clc
sub
cs
adc
int
stc
in
inc
ficoml
jl
lret
lret
hlt
lods
xlat
or
dec
pop
push
lret
sub
xor
and
jp
and
cmc
popa
mov
stc
fsubrp
dec
lcall
scas
sbb
mov
pop
mov
push
dec
add
in
pop
jle
mov
loope
in
les
cli
dec
andb
scas
icebp
lods
int
stc
mov
gs
in
dec
scas
adc
repnz
rclb
rorl
xchg
mov
out
push
cltd
aam
loope
and
aad
out
cmp
add
sbb
call
movsb
clc
cs
push
hlt
stos
int3
mov
pop
daa
nop
test
loope
cmp
xchg
paddd
cmp
std
leave
and
mov
insb
fistl
xchg
negl
jbe
sub
jns
jns
mov
data16
insl
pusha
popa
outsl
pop
add
and
xor
cmp
or
xor
add
mov
fdivrs
ljmp
push
push
icebp
cmpsl
int
stc
sbb
shrb
arpl
movsl
mov
in
push
add
imul
je
and
int
adc
inc
insl
push
ds
adc
les
and
pop
inc
mov
and
les
ret
repz
clc
es
insl
and
push
or
sub
mov
pop
sbb
rclb
mov
repz
fwait
jb
adc
sti
push
push
shlb
xlat
negl
lea
mov
sub
pushf
int
jge
lcall
pop
bound
ror
push
add
ss
mov
cmp
scas
js
fidivrs
adc
outsl
pop
push
repnz
out
flds
pop
pop
inc
cmpsb
pop
or
dec
sbb
rorl
ficomps
lret
add
lock
shlb
dec
lea
lret
cmpsl
jnp
push
movsb
int
in
push
scas
sbb
mov
jg
push
insl
jg
sub
pop
mov
and
add
xchg
jl
push
cwtl
pusha
mov
subl
push
add
mov
sar
mov
cmp
outsl
hlt
mov
fwait
pop
and
insl
jge
in
scas
adc
jnp
add
scas
jmp
into
fmuls
add
inc
jle
int
inc
decl
add
into
loopne
call
sbb
and
xor
pop
int
divl
stos
js
adc
cmp
add
stc
mov
and
jecxz
call
mov
es
pop
jae
sub
mov
jl
or
jne
dec
fistpl
mov
js
sti
and
outsb
mov
fidivrs
inc
jmp
push
aas
scas
sub
dec
inc
mov
push
in
mov
inc
ds
in
fists
rclb
sti
loope
ss
mov
inc
xchg
insl
lret
mov
pop
mov
ds
cmp
fsubs
inc
xchg
clc
push
sti
ret
jle
and
mov
sbb
inc
jmp
xchg
sar
sbb
and
inc
mov
scas
mov
pop
pop
lds
ja
add
xchg
jne
dec
movsl
jmp
aam
stc
dec
addr16
fsubrp
les
mov
andb
gs
gs
xor
out
add
aam
cmp
inc
out
dec
pop
pop
xchg
dec
and
bound
in
icebp
jnp
inc
sbb
ficomps
repz
sbb
dec
lahf
sahf
nop
mov
pop
sub
mov
or
adc
insl
adc
xchg
add
insb
push
fs
adc
lods
cwtl
push
push
xchg
ljmp
addr16
mov
les
and
mov
add
cmc
and
xchg
xchg
cli
cli
push
pop
fs
and
push
mov
int
push
push
cs
out
in
add
and
icebp
pop
bound
jp
xchg
push
dec
enter
pslld
movsb
and
xor
cmc
sub
pusha
or
cmpsl
sbb
pushf
dec
ds
notb
push
push
jno
loopne
xchg
mov
sbb
sarb
dec
jle
ljmp
mov
jle
int3
testl
jnp
push
loop
ljmp
out
scas
pop
add
inc
shrb
shlb
or
fiaddl
pop
stc
mov
add
lods
mov
mov
iret
scas
sbb
mov
xlat
dec
pusha
jecxz
push
into
pop
push
fucomip
les
cltd
into
in
inc
scas
or
bound
lret
insl
decl
or
or
pop
fimuls
aaa
hlt
mov
insl
cld
test
mov
ret
jmp
aaa
orb
int
jne
cmc
cmc
mov
mov
mov
in
shrb
push
adc
fstpl
shll
pop
lret
mov
mov
sbb
cmp
and
xchg
dec
and
xchg
clc
or
in
stos
jle
ror
bound
inc
inc
out
movsb
inc
dec
in
mov
gs
sbb
sub
pusha
xchg
add
scas
int3
dec
lds
and
pop
jnp
inc
push
in
and
dec
xchg
shrb
jl
ret
push
ds
inc
jge
outsb
arpl
or
les
int
clc
mov
int
in
lfs
cmp
movl
push
ret
jmp
int3
testl
mov
sbb
xlat
mov
cmp
out
pop
push
jbe
mov
sarb
cs
popf
pop
pop
enter
stos
pop
sub
lea
push
dec
ret
jle
int3
testl
in
dec
loop
ljmp
xlat
jp
hlt
mov
mov
leave
jl
repnz
or
and
jne
lods
aam
imul
cmp
enter
xchg
pop
jmp
push
ds
lcall
adc
insl
sbb
and
or
lcall
sti
rorb
test
in
sbb
mov
or
stos
ds
daa
incb
add
ret
les
dec
cmp
jno
lock
int
stc
mov
mov
mov
jmp
or
pusha
and
pop
lods
adc
mov
mov
sahf
test
or
jge
icebp
scas
or
inc
dec
push
mov
aad
mov
lret
insb
mov
or
lcall
inc
mov
movsl
loopne
jne
cmc
cmc
mov
pop
mov
sub
daa
test
inc
inc
pop
inc
enter
repnz
movsb
nop
out
sbb
scas
sbb
mov
int3
movsl
daa
xchg
xchg
loopne
ret
out
add
fcoms
call
push
fucomip
frstpm(287
bsf
mov
insl
sti
das
outsb
mov
rcrb
and
or
popl
iret
inc
lcall
popf
outsb
dec
dec
stc
scas
push
jl
ljmp
fs
jae
pop
mov
jg
and
jbe,pn
orl
stos
mov
xor
cmc
cmc
mov
test
sub
ljmp
ljmp
xlat
dec
pushf
or
fidivrl
jle
lods
or
push
push
mov
add
and
scas
cmp
ljmp
mov
shlb
divl
jae
xor
xor
jecxz
lret
lret
adc
cld
out
sbb
cld
push
xchg
jg
insb
popa
jp
inc
and
push
mov
dec
pushf
out
or
jns
jle
int3
sub
xchg
imull
loopne
call
dec
xor
cwtl
leave
jne
cmc
cmc
mov
sub
lock
sub
imul
les
aam
xor
fnstsw
or
shrb
in
in
enter
arpl
repz
adc
cmp
and
xchg
loopne
or
cwtl
lea
lea
inc
pushf
outsl
dec
inc
js
add
insb
lret
or
shl
aad
shlb
xlat
jl
and
mov
mov
mov
les
and
adc
mov
push
mov
adc
xor
xchg
nop
and
jp
pop
fucomp
fidivl
push
or
lret
hlt
lods
add
push
in
sahf
sub
lret
cmp
adc
lds
pop
das
inc
mov
test
and
cmc
cmc
mov
aam
stos
dec
in
lock
sub
ljmp
mov
int
dec
lret
hlt
stos
mov
add
mov
sti
inc
ljmp
pop
sti
dec
push
sub
xlat
jp
cmc
stos
pmuludq
pop
arpl
mov
into
pusha
xchg
push
inc
std
leave
repz
cmp
push
int
cld
ret
out
add
mov
js
icebp
jp
in
les
pop
lret
lret
hlt
test
mov
daa
outsb
test
fmulp
sbb
outsl
push
inc
sti
sbb
cmp
dec
adc
in
les
fmul
add
or
dec
std
leave
in
and
cmp
std
imul
in
inc
scas
push
insb
scas
stos
bound
outsb
test
roll
lods
adc
es
xor
push
insl
fldt
loopne
icebp
lds
daa
fdivrl
int
div
lret
mov
push
fidivrl
and
push
ss
push
xor
in
mov
loopne
inc
cmp
dec
sub
repz
or
mov
je
loop
stos
inc
rcrb
sti
and
loope
ljmp
out
stc
cmp
mov
dec
in
dec
popa
pop
fidivrl
fwait
jb
pop
cmp
sbb
jb
pop
scas
ljmp
ds
in
in
mov
add
imul
and
lahf
xchg
pop
inc
mov
mov
sub
pusha
sub
inc
fidivs
in
mov
or
in
in
shrl
inc
inc
in
cmpl
fs
push
ds
ljmp
shrl
ret
jge
call
lods
popf
and
mov
adc
fstpt
and
dec
lods
adc
mov
aad
push
aaa
enter
sbb
repnz
cpuid
add
mov
cld
pop
outsb
push
xor
mov
call
jno
nop
sbb
sub
leave
and
push
insl
incb
mov
push
inc
mov
or
inc
lock
int
stc
push
hlt
scas
xor
orl
daa
dec
pushf
pop
adc
incl
adc
sub
ja
xchg
mov
xor
fdivrs
sub
dec
xor
enter
inc
lods
mov
xchg
jmp
ljmp
mov
aaa
add
fadds
pushl
mov
fists
or
or
stos
or
repnz
test
outsl
dec
lret
mov
test
cwtl
cltd
sbb
cmp
ss
mov
pop
sub
test
jae
pop
stos
or
frstor
dec
negb
mov
push
shrb
pusha
in
decl
ljmp
lret
hlt
test
pop
bound
test
aam
dec
mov
mov
ret
les
xchg
testl
mov
shl
rcrl
mov
jb
adc
insl
push
push
jp
icebp
inc
insl
lock
inc
mov
notl
jae
pop
lods
inc
dec
mov
adc
mov
and
int3
in
push
xor
inc
add
out
les
movsb
xor
cmp
cli
add
inc
bound
or
push
scas
or
scas
rcrb
addr16
fsubrp
les
mov
lret
inc
in
cld
mov
xor
outsb
pop
sbb
pop
fdivp
mov
or
nop
push
sahf
sti
fcoml
arpl
or
shl
xor
mov
pop
data16
dec
sbb
dec
jp
push
adc
cmp
cmp
cmp
cmpsb
mov
sbb
push
incb
sub
int
stc
pop
out
call
push
pusha
in
push
dec
mov
les
pop
aad
iret
imul
add
icebp
jb
xchg
and
and
sbb
inc
out
in
insb
mov
mov
loope
mov
push
pop
xchg
mov
xlat
jp
inc
imul
inc
xchg
insl
sbb
pop
push
ud2
ficomps
clc
icebp
movsl
stc
xor
das
sti
and
imulb
dec
hlt
add
into
inc
push
adc
cmp
icebp
fdivrp
addl
push
mov
inc
negl
xor
jb
loope
arpl
mov
fs
xchg
mov
fistl
fwait
loope
add
dec
dec
mov
lahf
adc
mov
cmp
nop
fwait
divb
xchg
push
lret
or
lahf
out
scas
ret
add
ret
jmp
xor
cmc
mov
or
loopne
in
shrb
aas
cmc
cmc
sbb
push
jb
mov
je
sub
push
jbe
add
loopne
aaa
ljmp
cmp
jle
cmpsl
cmp
adc
andl
add
push
fwait
nop
cmp
or
mov
int
stc
xor
jle
mov
cmpsl
xor
loopne
mov
mov
pop
mov
pop
pop
hlt
rorb
or
fwait
hlt
rcrl
les
mov
test
and
orl
inc
and
lods
les
movsb
or
les
daa
xchg
test
out
or
push
fucomip
les
mov
mov
icebp
mov
insl
add
and
pmaxub
and
addr16
cmp
cli
dec
and
pop
pop
pop
push
xor
mov
pop
add
ret
pop
movsl
jmp
mov
stc
fsubrp
jle
movsb
int
dec
lret
les
mov
notl
inc
iret
sbb
sbb
in
out
call
adc
inc
insb
xchg
cmp
repnz
dec
sbb
cmp
push
iret
ds
mov
lds
movsb
push
jp
out
outsl
push
or
add
xchg
mov
sbb
lock
call
stc
fsubrp
lods
js
int
dec
pusha
out
jb
mov
les
fsubrl
cmp
leave
test
bound
std
loopne
pop
lods
and
arpl
jecxz
pop
sub
stc
fiadds
out
movsb
inc
ftst
add
lahf
imul
fcomi
popa
mov
jg
pop
and
mov
adc
push
adc
cmp
imul
mov
outsl
mov
inc
jle
cltd
sub
or
es
int3
mov
in
xlat
test
repz
pop
js
xor
pop
sbb
notl
mov
int3
cmpl
sub
add
ss
lcall
in
js
or
or
sub
sub
pusha
data16
rcrl
hlt
cmp
push
push
cs
std
rorb
sub
fwait
and
mov
fsubrl
mov
cmp
popf
das
sub
nop
pop
aad
sub
icebp
repnz
stc
xor
lahf
imul
lds
inc
enter
xlat
icebp
rorl
xor
lds
or
fldenv
aad
stc
add
pop
inc
push
dec
dec
out
xchg
into
sbb
and
movsb
int
out
ja
sub
push
cmp
mov
inc
out
pusha
fdivrl
add
test
add
sti
sahf
jo
fldt
scas
or
sub
clc
push
repz
pop
mov
jnp
in
lret
insl
insb
mov
sti
cli
push
pop
fs
xchg
xchg
stos
adc
jne
cmc
cmc
mov
adc
ss
in
add
xor
subl
lods
mov
out
movsb
lds
sub
push
xor
lahf
jle
mov
cltd
jb
test
stos
pop
pop
and
dec
mov
adc
mov
dec
adc
ret
test
adc
or
push
sti
out
push
dec
je
push
cltd
ljmp
xchg
je
xchg
rcll
lret
mov
mov
add
loop
sbb
stc
push
add
ret
adc
scas
sbb
mov
loopne
adc
add
sahf
pop
int
push
push
adc
mov
stos
int
stc
pop
adc
clc
ret
push
lret
jb
push
inc
dec
out
pop
andl
fnstsw
inc
test
pusha
int
or
dec
push
push
inc
popa
cmp
sbb
sbb
pop
movsb
dec
mov
outsb
mov
xor
fnstenv
sti
fstpt
adc
pop
sbbb
out
xchg
push
jp
dec
lcall
mov
rcrb
orb
int3
les
mov
not
sbb
cld
adc
cmp
jns
aaa
push
sub
jecxz
leave
sub
lret
sbb
jb
pop
scas
cmc
xchg
mov
cmpsl
xchg
lcall
daa
sbb
fucomi
mov
pop
and
ljmp
repz
inc
lods
cmpsb
inc
xchg
sub
pusha
adc
cmp
insl
sbb
in
sahf
mov
dec
ss
scas
mov
sbb
in
scas
aam
cmp
fdivrs
out
in
jle
cmp
testb
add
mov
iret
xchg
sbb
movsb
and
push
testl
dec
sti
pop
hlt
cmpsb
and
scas
or
fmulp
pop
mov
fmuls
jmp
push
fsubrp
les
jecxz
in
pop
inc
xor
add
mov
aas
jg
out
test
repnz
rcl
mov
fidivrs
leave
loop
xlat
bound
outsb
xchg
aam
cld
sbb
movsb
mov
dec
xor
jg
add
xchg
cmpsl
leave
lds
sub
dec
hlt
loope
movsb
aaa
orb
or
fwait
ljmp
cmc
jecxz
dec
cld
test
adc
insl
adc
sbb
inc
insl
daa
cmp
sti
or
lock
and
xchg
decl
sbb
and
xor
pop
xlat
ret
notl
lret
mov
js
dec
fiadds
lods
popf
test
in
mov
nop
push
and
fimuls
push
fistpl
mov
mov
lods
mov
and
push
fucomip
dec
add
and
jl
jge
scas
flds
inc
adcl
aam
mov
jle
shlb
mov
sub
mov
xorb
call
xor
mov
fldl
std
out
mov
hlt
pop
stos
inc
mov
loope
out
fsubrl
jg
cwtl
aad
cld
push
daa
rol
repnz
and
movsl
xchg
mov
aad
imull
pop
or
jnp
pop
mov
ror
jmp
test
into
sbb
add
add
pop
stos
push
pop
sbb
lcall
mov
jp
add
add
xlat
jmp
or
test
xchg
jne
cmc
cmc
mov
jnp
aaa
jmp
sub
mov
rol
or
scas
or
cmp
mov
rcr
jmp
mov
cli
fsubrp
push
lods
and
cmp
sbb
stos
mov
es
bound
xor
adc
inc
fcomps
data16
push
lahf
sbb
push
jmp
scas
nop
rolb
or
inc
mov
inc
jmp
or
ret
pop
and
call
adcb
mov
loop
in
dec
mov
daa
xchg
xchg
out
adc
rcl
fst
and
sub
mov
roll
adcl
push
cmovs
repz
cmpsb
ror
movsl
bound
xchg
stos
dec
xor
cmc
cmc
mov
lahf
fwait
adc
in
loopne
ljmp
les
ljmp
fucomip
fcoml
scas
push
lcall
or
mov
ret
jmp
or
cmc
out
insb
enter
shrb
lahf
pusha
cltd
hlt
into
jb
dec
lcall
sub
pusha
jmp
es
lahf
xor
out
rorl
rol
aas
ret
jb
xchg
cmp
iret
inc
xchg
insl
enter
or
or
and
fs
inc
inc
lret
cmp
pusha
int3
pop
and
mov
andb
cmc
rorb
mov
into
daa
mov
dec
add
out
lods
sahf
loopne
and
xor
cmpsb
dec
pusha
ljmp
fsubrp
fidivrl
xchg
push
lret
lock
push
inc
cld
leave
in
incl
movsb
scas
fisttpl
sub
pop
bound
or
pop
ror
lea
enter
adc
cmp
pusha
arpl
or
pop
ror
addr16
adc
or
loopne
xchg
xchg
test
inc
jne
cmc
cmc
mov
insb
insl
filds
sub
push
ds
inc
add
das
push
xchg
icebp
les
movsb
inc
daa
cltd
pop
fsubs
aam
mov
xchg
or
xchg
xchg
jecxz
fwait
xor
addr16
cmp
aas
push
rclb
ffreep
dec
dec
xchg
pop
or
or
icebp
loopne
test
enter
jle
cmp
test
sbb
mov
sbb
std
leave
repz
mov
cmp
ljmp
inc
in
movsb
int
stc
push
mov
xlat
lcall
lahf
jle
dec
popf
cli
pushf
adc
ljmp
pop
ficoms
cwtl
imul
test
and
mov
inc
and
insl
imul
dec
mov
pop
imul
scas
xor
jp
scas
fs
jle
dec
lahf
sbb
cmp
sbb
int
imul
inc
ss
movsl
sub
mul
pop
cmp
dec
xor
js
stos
je
orl
sbb
mov
ficoms
ret
mov
popa
jp
ljmp
test
sub
mov
sub
cmc
mov
push
out
push
in
clc
sub
sub
sbb
ljmp
jge
js
test
and
mov
hlt
mov
add
mov
dec
call
dec
add
dec
jl
data16
lock
int
stc
push
inc
and
sbb
fmulp
cli
and
test
ds
outsb
mov
iret
call
clc
test
lds
loope
mov
cmc
sbb
cld
push
inc
out
jns
mov
pop
repnz
xor
jecxz
push
sbb
push
inc
xchg
insl
leave
or
mov
xor
subl
inc
dec
cmp
and
shr
or
xchg
push
mov
cmp
jbe
add
clc
inc
sub
ror
push
fucomip
cs
xlat
orl
mov
mov
or
mov
xor
dec
loope
and
sarl
mov
cmpsl
mov
and
xchg
or
out
movsb
inc
icebp
in
ljmp
jnp
mov
mov
ja
pop
dec
fcom
add
mov
mov
pop
lods
orb
sbb
loop
out
cmp
fisubs
lea
aad
cmpsw
cmpsl
mov
xor
es
scas
loope
ljmp
push
ficoml
jecxz
in
repnz
or
popa
scas
int3
repz
xchg
dec
ljmp
ficoml
mov
es
aaa
add
mov
iret
xchg
sbb
mov
cmp
adc
mov
ror
or
scas
sbb
mov
pop
mov
jmp
inc
inc
repnz
bound
in
pop
pop
scas
int3
lret
ror
dec
add
dec
push
sub
cmp
lret
sarb
cmp
test
adc
leave
ds
or
arpl
push
and
dec
mov
add
rorb
inc
xchg
insl
enter
ljmp
sub
ds
push
push
aam
hlt
test
add
xlat
outsb
loop
dec
iret
xchg
xlat
enter
jmp
int3
popl
fadd
leave
cmp
outsl
dec
gs
int
out
inc
je
inc
in
mov
enter
js
mov
mov
leave
rclb
out
pop
cmpsb
mov
je
and
orl
push
and
cmpsb
inc
sbb
or
push
notl
test
testl
or
icebp
fists
lods
or
fisubs
repz
lock
cmp
push
jmp
xor
jmp
push
xchg
hlt
pusha
pop
sarl
hlt
dec
cmp
es
mov
adc
mov
xchg
roll
fmuls
hlt
sub
jp
jle
aad
inc
iret
imul
call
jle
out
or
movsb
fistl
rol
or
mov
bound
popf
cld
adc
xchg
ss
mov
mov
pop
pop
shrl
add
cmp
mov
arpl
jl
movsl
jne
sub
sub
imul
les
sarb
cmp
jg
fwait
push
loopne
loopne
lahf
pusha
lods
cmpl
dec
hlt
mov
pop
pushf
orb
or
sti
clc
xchg
lcall
cmp
out
stc
loop
push
fucomip
repz
cld
add
repz
scas
or
bound
xchg
int3
imul
pusha
rol
or
jb
std
loopne
enter
sbb
adc
inc
imul
dec
ret
jns
and
sbb
test
push
sbb
rolb
fstpl
loopne
pop
dec
je
mov
in
inc
mov
sar
incb
je
repz
push
push
and
push
cli
adc
add
fstpt
lahf
jb
icebp
sub
int
cmpsl
addr16
std
mov
rorl
push
mov
clc
cmp
inc
aad
and
imul
sbb
push
cld
scas
into
aaa
add
mov
iret
sahf
sbb
sti
sbb
les
sbb
jle
movsb
repnz
push
sub
jecxz
pop
fidivrl
jle
jnp
add
jb
pop
pop
cmp
lods
pop
ret
inc
bound
push
dec
in
mov
jne
pop
mov
dec
rolb
xchg
add
xlat
jl
jmp
pop
repz
cmp
mov
int
pushf
call
inc
mov
lds
mov
xchg
pop
rolb
push
arpl
loopne
fdivrl
sub
arpl
flds
cmp
sarb
dec
data16
cltd
inc
in
cmp
es
les
movsb
shrb
lret
hlt
test
aam
lret
test
ljmp
fiadds
pop
sbb
insl
sbb
aad
testl
lret
pop
adc
hlt
bound
xor
mov
fdivrs
mov
xchg
jg
imul
mov
into
dec
mov
stos
stc
fsubrp
inc
leave
lods
pop
add
jmp
aas
cmpsl
mov
cmp
xchg
mov
loopne
in
add
pop
bound
sbb
sbb
fldenv
fisubs
hlt
sbb
push
mull
or
inc
pop
je
cs
jae
push
call
in
rorl
rcpps
cmp
int
jle
lret
orl
test
fucomp
cmp
xor
loopne
jne
cmc
cmc
mov
xchg
mov
sub
sub
out
movsb
int
stc
push
mov
insl
mov
push
jnp
out
add
daa
push
loopne
pop
hlt
sub
in
sahf
test
ds
fucomip
inc
arpl
rorb
sbb
std
or
push
leave
bound
cmp
negb
cmp
pop
mov
fs
pusha
aad
aas
icebp
mov
or
sbb
jp
push
sbb
icebp
dec
movb
push
lahf
js
fldt
lds
lds
sub
andb
rcrb
not
lret
xchg
clc
cld
sub
adc
icebp
cmp
ds
stc
lcall
mov
addr16
fdiv
fidivs
pop
enter
loop
divl
xor
outsb
lods
adc
ljmp
mov
lods
adc
aas
std
in
sbbl
jge
lock
or
int3
bound
inc
inc
out
movsb
inc
jmp
or
xchg
sub
pusha
push
mov
int3
xor
pop
int3
pop
add
loope
loopne
xchg
sbb
pop
pop
cmp
add
es
ds
jb
push
fcmovbe
pop
loopne
test
fmull
stc
and
dec
cmp
fldenv
es
inc
sub
pop
das
mov
cmp
mov
ljmp
pop
test
loopne
lret
pusha
scas
xchg
int
call
push
aam
cltd
jns
fnstenv
jle
rcl
repz
xchg
popa
icebp
loopne
call
dec
int3
les
mov
pop
adc
test
aam
ror
sub
lock
mov
loopne
push
pop
sti
loopne
mov
mov
lea
add
cmp
cli
dec
mov
xor
cmp
xor
test
pop
iret
or
int3
pop
and
add
adc
xlat
and
dec
in
inc
scas
or
bound
mov
in
lcall
add
xchg
cmp
pop
or
into
fidivs
or
lret
push
std
and
dec
mov
scas
and
and
pushf
inc
repz
jb
sbb
push
xor
insl
int
imul
cld
out
pop
dec
dec
xorb
jecxz
dec
adc
pop
pop
pop
lret
pop
ror
popf
add
movsl
shll
pusha
and
lret
movsb
int
loopne
cs
add
es
push
pop
enter
aad
lods
xlat
add
insl
push
add
lret
pushf
add
mov
cmp
push
imul
pop
mov
outsb
jno
cmp
mov
loopne
ret
jmp
imul
jp
mov
pop
push
mov
stc
fsubrp
into
outsl
repz
adc
rcrl
lret
fmull
jo
ret
lock
add
dec
into
cmp
insb
movsb
or
jmp
pop
xor
add
stos
cmp
call
and
hlt
cmp
std
pushf
push
fwait
sti
loope
cmp
adc
std
cmp
sub
xor
sub
je
jno
pop
orl
jns
mov
lock
in
loopne
ljmp
xchg
scas
out
sub
lods
pop
add
adc
imul
jnp
hlt
mov
insl
mov
in
daa
nop
test
in
mov
fdivrl
je
pop
cmc
xchg
icebp
mov
aaa
add
ror
mov
sbb
mov
cmp
jne
adc
nop
xlat
dec
pushf
add
mov
add
call
add
jg,pt
xchg
lahf
gs
fldt
dec
cli
add
enter
mov
movsb
or
dec
jg
shrb
lock
int
stc
adc
mov
mov
mov
add
shl
mov
add
ret
lock
add
int
stc
push
mov
push
dec
pop
add
in
inc
outsl
ss
mov
outsb
cld
js
mov
pusha
pop
aas
add
add
test
mov
adc
ret
pop
rcrb
jae
sbb
ljmp
add
lret
jno
mov
loop
gs
loop
sbb
mov
clc
js
dec
push
jge
mov
push
jmp
push
mov
leave
insb
xchg
xor
out
inc
inc
pop
sbb
jp
dec
call
dec
cmpl
ds
rcr
daa
push
xlat
or
add
fwait
loopne
shr
ret
or
mov
or
push
gs
push
cmp
mov
push
dec
fwait
cmp
sbb
jmp
inc
push
cmp
aas
adc
test
mov
push
mov
cmp
push
xor
fs
imul
movsl
dec
xchg
not
lret
pop
cwtl
and
and
cmp
mov
adc
insl
pop
push
sbb
mov
out
sahf
scas
ljmp
mov
sub
add
sbb
adcb
shll
jmp
aad
ret
mov
sbb
add
mov
in
dec
dec
scas
daa
pop
mov
cmp
adc
mov
or
inc
pop
mov
lret
add
push
mov
xchg
jne
dec
cmc
cli
dec
jnp
sbb
icebp
test
cmp
in
sbb
mov
xor
imul
scas
or
int
pop
xlat
fcomps
mov
nop
mov
aaa
add
faddl
scas
sbb
lods
sbb
inc
gs
cmp
sbb
mov
cmp
cltd
inc
add
into
pushf
scas
lret
jmp
cs
fmuls
scas
mov
push
jle
fst
inc
out
cmp
jne
loopne
call
icebp
fistpll
cmp
ror
or
cli
repz
adc
in
jno
bound
add
add
fmuls
out
sahf
hlt
push
push
fucomip
les
int
data16
mov
hlt
mov
insl
sti
dec
outsb
test
push
pop
xchg
xor
mov
sbb
and
add
leave
or
andl
scas
rep
or
mov
out
adc
sbb
jge
mov
mov
mov
loope
popf
push
out
xor
or
xchg
test
and
mov
inc
ss
mov
push
xchg
je
pusha
adcb
out
pop
test
test
gs
lret
das
fwait
cmp
sub
into
les
movsb
int
inc
lret
sub
lahf
hlt
rorl
adc
sub
xlat
or
lds
pop
inc
orb
cmp
push
push
imul
dec
insb
xor
rolb
xor
dec
nop
pop
iret
in
push
mov
repnz
movl
jp
fiaddl
mov
and
test
js
into
stos
mov
dec
or
outsb
add
movsb
int
das
ret
mov
sbb
ljmp
mov
aaa
add
lds
mov
cmp
int
jg
cli
dec
lret
movsl
int
dec
pusha
rol
or
aaa
inc
cltd
and
lods
xchg
rcl
testl
fidivl
notb
insl
sbb
in
int3
dec
out
xchg
cltd
push
jns
jmp
mov
push
test
push
int
cmp
sar
mov
dec
out
sbb
inc
mul
decb
subl
rcrl
aad
movsb
mov
inc
leave
lcall
stos
loope
mov
orl
mov
dec
das
mov
cmc
cmc
mov
add
cmp
and
ret
xchg
fdivrs
ret
or
scas
sub
mov
dec
aad
testl
outsl
dec
push
fadds
xchg
mov
std
push
aad
dec
enter
push
fadds
adc
scas
jae
xor
push
push
das
push
xchg
jmp
mov
stc
fsubrp
mov
sbb
fdivr
aad
bound
lods
lret
rep
in
in
and
or
outsb
add
movsb
int
dec
pushf
mov
jle
movsb
jno
into
lret
xchg
loopne
call
jmp
hlt
sbb
pushf
jl
fldt
std
add
xchg
movsl
mov
stc
fsubrp
mov
movsb
pop
add
out
imul
fiadds
mov
lret
hlt
test
cmp
cmp
adc
sub
or
aam
adc
cmp
stc
fsubrp
loopne
insb
sbb
ds
lret
aam
fmuls
jge
scas
inc
shrb
add
and
stc
dec
jl
or
icebp
test
inc
inc
hlt
mov
sbb
jbe
and
rep
fmul
aam
cmp
pop
mov
xchg
scas
pminsw
cmc
cli
dec
jl
dec
mov
cmp
sbb
lcall
idivb
leave
icebp
adc
aad
pop
and
insb
shl
adc
loop
ljmp
pop
mov
loop
in
jecxz
rcrl
jge
repz
or
and
mov
cmc
cmc
mov
mov
mov
and
add
movsb
int
jp
jmp
or
aad
jmp
pusha
mov
dec
scas
insl
and
imul
xchg
sbb
sbb
lods
adc
mov
add
bound
sub
mov
or
icebp
mov
fsts
sbb
std
leave
sarl
loopne
call
push
pusha
jmp
push
fsubrp
lret
faddl
insl
or
lret
js
sbb
outsb
mov
rorb
and
mov
and
loope
shld
add
sub
xor
or
ljmp
add
push
fisubs
xchg
pop
lret
movsb
mov
scas
or
int
clc
dec
dec
and
add
pusha
jae
out
test
add
jne
mov
jmp
sub
test
inc
push
rcrl
pushf
xor
je
sbb
lods
lds
shrb
lods
sub
or
or
dec
push
mov
ljmp
or
mov
mov
xor
add
jecxz
fld
dec
jne
pop
pusha
xchg
lret
sti
frstor
cltd
out
pop
mov
aam
aad
test
ds
jne
jg
mov
fsubrp
lods
stos
pushf
int
push
pusha
in
mov
pop
push
fucomip
les
push
loope
cmp
in
repz
insl
cld
inc
iret
lods
mov
pusha
add
cmp
dec
cmp
insl
mov
cli
fsubrp
pop
pop
pop
inc
cmpsb
lret
ror
jo
lds
adc
jmp
adc
mov
jp
fidivs
sbb
inc
xchg
fidivrs
adc
mov
out
loope
lds
inc
sub
or
cmp
iret
cmp
ret
push
rcll
test
sub
pop
movsb
inc
ja
mov
fistl
cld
push
mov
adc
sbb
mov
enter
lret
or
repz
jnp
inc
imul
imul
jg
jae
pop
lods
in
pop
pop
push
and
test
mov
push
stc
push
fdivr
and
add
clc
push
stos
scas
cs
push
add
ret
jle
dec
lcall
out
xlat
fdivr
ss
sbb
gs
add
push
pop
jae
pop
stos
aas
adc
cmp
ds
cli
int3
cmp
movsb
and
clc
and
cmp
ds
adc
dec
es
xlat
addr16
rcrb
rep
testl
jl
out
lods
outsl
movsb
int
dec
int
jge
mov
xchg
aam
mov
push
mov
sub
adc
xor
xor
out
insl
test
push
in
jmp
test
sbb
add
fdivrl
lds
mov
outsl
dec
lcall
arpl
adc
nop
fisubl
jle
test
inc
loop
mov
popa
std
pop
iret
in
sbb
jle
mov
incl
xor
movb
or
scas
mov
sub
lahf
std
sbb
pop
and
jae
imul
xchg
orl
jge
mov
mov
lret
les
movsb
int
stos
lret
mov
in
fs
cmp
pop
xchg
cmpb
dec
jg,pt
sti
mov
pop
in
cmp
imul
clc
pop
scas
stc
xlat
xchg
and
inc
xor
je
sbb
jle
xchg
pop
sbb
test
test
daa
mov
outsb
cltd
repnz
mov
std
xlat
test
xchg
xor
mov
in
pop
ljmp
stos
ss
sbb
sbb
jb
pop
stos
das
rcll
orl
pop
xchg
icebp
mov
mov
fstp
ljmp
xchg
mov
sbb
mov
out
add
push
out
cmpsb
mov
fcomps
movl
outsb
ja
xchg
jmp
jmp
xchg
jnp
jmp
or
and
stc
cmp
fisubrl
aam
stc
fisubs
xchg
push
lret
dec
ficoms
dec
icebp
iret
imul
aas
fmulp
pop
mov
stc
inc
or
inc
or
les
sti
dec
jp
push
xchg
push
icebp
lods
int
stc
xor
jmp
icebp
dec
scas
or
push
dec
add
repnz
jno
mov
push
push
mov
mov
jnp
sub
arpl
and
loop
lcall
mov
data16
filds
idivl
fnstcw
adc
or
lods
rcll
out
mov
mov
shrl
add
aam
cltd
ret
mov
mov
sbb
dec
jns
call
or
lds
movsb
pop
iret
jmp
mov
notl
stos
aam
jecxz
ljmp
sbb
pop
or
mov
fs
jb
pop
mov
gs
mov
push
das
mov
mov
jbe
loope
pop
fistl
pop
pop
call
ror
bound
int
data16
in
movsl
jmp
aad
aad
imull
pop
mov
lret
add
inc
adc
mov
adc
insl
adc
pop
jp
sub
sbb
or
loop
push
dec
lods
jge
je
orl
or
stc
dec
jp
in
out
icebp
lods
int
stc
jae
lds
testb
addb
xchg
daa
push
lret
daa
xchg
mov
in
adc
fistpll
dec
and
dec
jge
mov
int
stc
mov
cmp
in
dec
scas
or
dec
add
in
mov
inc
out
outsl
or
outsl
out
mov
cmpb
adc
dec
test
mov
mov
push
test
int3
jmp
xlat
pop
clc
pop
mov
les
das
adc
xor
cmc
cmc
mov
popa
mov
jmp
sub
daa
or
pop
ljmp
adc
mov
stc
fsubrp
aas
sbb
dec
scas
adc
bound
and
sub
mov
xor
lahf
jo
fldt
push
ja
lds
sub
jl
out
pop
sub
js
fidivrs
rcrl
mov
jnp
mov
pusha
outsl
cmpl
add
into
mov
call
negl
mov
jae
pop
lods
fsubrl
gs
add
push
xchg
sub
dec
xor
cmc
mov
cmpsb
mov
or
shrb
cmp
ljmp
scas
aaa
pusha
out
mov
insl
inc
pop
je
xorl
jns
shrl
stos
xor
in
push
sub
hlt
sub
push
xchg
out
xchg
ret
jnp
mov
pop
xorl
fisttpll
jmp
push
fucomip
les
cwtd
fisubrl
fisubl
fldl
mov
add
sbbl
lret
lods
int
dec
xor
cmc
cmc
mov
fucom
sbb
in
fsubrs
daa
mov
inc
jbe
cmp
add
testb
stc
fisubrs
shrl
insl
push
aaa
enter
bound
lock
mov
arpl
mov
ret
jmp
xor
cwtl
notl
or
inc
scas
push
add
xchg
shr
addr16
push
cltd
das
ds
dec
adc
cmp
imul
mov
push
outsl
and
jmp
bnd
cmp
mov
mov
inc
imul
clc
int3
test
xchg
jo
mov
push
fs
push
lods
scas
xor
test
jns
call
jp
neg
sub
ss
test
add
mov
push
inc
cmp
sbb
int3
xchg
mov
push
icebp
xchg
jg
imul
xchg
push
cltd
das
push
mov
sti
sahf
imul
popf
hlt
lahf
sbb
inc
enter
mov
js
lret
ror
jae
mov
movsl
jmp
mov
xlat
int3
testl
add
jle
inc
mov
sbb
lcall
mov
stc
outsl
js
cli
sti
fisubl
mov
cmpsl
dec
shrl
xchg
mov
dec
sbb
shlb
xchg
jle
xor
cmc
cmc
mov
sbb
xor
in
fsubrs
daa
aam
xor
aaa
movsl
jne
cmc
cmc
mov
dec
leave
fsub
jmp
sub
sub
dec
xor
inc
insl
fldt
pop
inc
fadd
sbb
daa
fcoml
dec
int3
xchg
outsl
and
xchg
loopne
lret
inc
insb
fwait
lock
jp
cli
sbb
and
sub
fs
add
pop
rolb
stc
fidivrs
scas
sbb
mov
inc
iret
movsl
mov
mov
shl
push
call
imul
sahf
jp
dec
loope
dec
mov
test
sarb
aad
inc
add
lock
movsb
sbbl
lret
hlt
cmpsl
frstor
repz
ffreep
jmp
xor
in
shl
in
les
loopne
test
test
insl
mov
shr
inc
ds
xor
jle
mov
nop
icebp
repz
mov
xchg
sub
xor
ds
negl
dec
push
sbb
scas
inc
ljmp
shll
dec
bound
je
orl
sbb
out
sbb
and
push
fcoms
test
or
mull
pop
jmp
push
adc
sbb
jmp
leave
or
xlat
addr16
rcr
push
jecxz
inc
shlb
mov
loope
pop
and
cmp
mov
mov
fsubrp
adc
cltd
jmp
enter
sarb
stos
dec
rcr
inc
jmp
std
ss
or
add
mov
ds
out
lea
adc
and
cmp
enter
mov
mov
mov
stc
ret
fnstenv
insb
ret
pop
and
or
jmp
fsubs
aam
nop
sub
popf
inc
daa
mov
lea
bound
loopne,pn
gs
xchg
add
sahf
pop
and
mov
fdivr
lahf
cmp
add
hlt
les
movsb
mov
loope
in
mov
mov
in
jl
pushl
sbb
mov
ljmp
mov
aaa
add
cmpsb
jl
pop
dec
iret
mov
leave
mov
and
fsubrp
ret
jle
and
clc
sub
aas
sbb
fdivrl
cmp
xchg
xchg
loope
mov
mov
subl
icebp
sub
pop
or
cmp
pop
in
add
popf
out
in
sub
pusha
or
mov
int3
in
jno
test
lahf
fs
cmpsb
mov
loope
fdivrs
jg
adc
mov
or
int3
add
out
call
clc
push
repz
pop
pop
push
repz
ror
dec
add
movsl
jmp
das
add
ds
or
or
scas
sbb
mov
xchg
shl
mov
mov
pop
xchg
loopne
xor
or
les
or
pusha
xlat
xchg
notl
push
out
pop
std
imul
cli
ss
mov
sbb
mov
arpl
test
push
mov
daa
lock
mov
int3
or
