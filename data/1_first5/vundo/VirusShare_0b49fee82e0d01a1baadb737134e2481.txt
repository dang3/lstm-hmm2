jl
add
fcoms
add
imul
add
lds
add
jl
add
add
add
aaa
lcall
js
add
bound
add
add
pop
lcall
jno
add
sbb
add
sub
add
add
add
add
add
outsb
add
xchg
add
das
add
jl
add
lret
cltd
add
jl
add
jl
add
jl
add
cs
gs
jne
je
add
add
add
js
add
bound
add
add
push
sub
add
add
sbb
pushf
add
jl
add
jl
add
jl
add
inc
outsl
add
jl
add
xchg
lahf
add
xchg
add
lahf
add
jl
add
adc
add
mov
sub
add
outsl
add
je
jb
outsl
add
add
popa
add
add
add
add
imul
add
jo
add
inc
add
jb
jae
outsl
add
inc
add
add
imul
add
je
add
add
add
add
and
dec
add
ja
and
push
add
insl
add
outsb
add
add
add
outsl
add
popa
add
add
add
push
add
add
popa
add
jae
and
push
add
jb
imul
inc
add
imul
add
add
nop
hlt
inc
adc
adc
fisubrs
pop
out
rclb
cwtl
mov
pusha
add
push
mov
call
pop
pop
ret
add
add
add
xor
and
and
les
lahf
add
sbb
add
add
dec
add
hlt
add
mov
add
add
push
add
fldt
add
mov
jnp,pn
add
add
stos
cmpsb
add
add
add
or
inc
add
cmp
jae
jb,pn
push
arpl
dec
inc
add
push
jb
inc
psubq
mov
sti
shr
fisubrl
inc
dec
jmp
sbb
or
incl
mov
pop
ret
cmc
push
inc
adc
sub
cld
xchg
test
call
decb
push
adc
pop
test
stc
mov
out
das
add
push
adc
movsl
push
lret
xrelease
gs
movl
xorl
movsb
push
je
cmp
lea
add
push
cmp
push
xor
push
add
adc
mov
jns
loopne
adc
jmp
jne
sar
or
repz
mov
push
push
push
clc
jb
push
push
xor
mov
and
add
add
add
add
sbb
clc
add
dec
sbb
movb
outsl
gs
gs
xchg
lcall
movsl
insb
xlat
gs
adc
nop
push
imul
push
insb
push
lret
imul
jne
testb
dec
push
aam
gs
jae
ja
loopne
insb
add
dec
sti
add
add
sub
add
les
add
add
add
mov
add
add
push
add
fildl
add
mov
add
add
add
stos
add
out
fisubl
incb
out
mov
movsl
pop
sub
adc
cmpsb
aam
jle
or
negb
addr16
sti
orl
cmp
lds
mov
sub
scas
cmpsb
inc
inc
fucomip
mov
adc
add
pop
and
jmp
xchg
das
dec
out
xor
mov
ja
shl
push
xchg
pop
mov
out
adc
jbe
hlt
call
fisubrs
jmp
sahf
inc
push
shl
jmp
xchg
es
add
nop
das
mov
mov
filds
nop
adc
clc
mov
fldt
dec
cmp
inc
add
fwait
mov
xor
mov
repz
xchg
xchg
or
xchg
roll
cs
xchg
int
add
inc
aas
sbb
fidivrs
xor
inc
adc
daa
test
roll
lods
std
add
lock
stos
adc
push
add
cltd
loop
inc
arpl
lods
idivb
jmp
icebp
ja
dec
or
adc
add
inc
setle
cmp
mov
inc
and
out
and
mov
les
in
pop
mov
es
push
bound
or
inc
jg
sti
or
cmpsl
pop
aaa
inc
outsl
and
fidivrl
cmpsl
sbb
mov
scas
jecxz
cli
and
repnz
xchg
and
mov
push
pop
shl
dec
jmp
inc
jge
jg
ret
adc
dec
bound
or
xor
cmp
loope
ret
out
js
sbb
pop
out
sub
jmp
push
pop
mov
lock
test
int3
and
inc
cmp
loopne
inc
xor
adc
mov
dec
ljmp
and
faddp
mov
mov
and
xchg
add
test
cwtl
iret
gs
int
scas
ss
jne
fisttpll
xchg
repz
test
pop
mov
dec
push
lcall
and
sbb
or
out
push
repz
dec
mov
xchg
mov
test
rorb
stc
nop
sbbb
shlb
test
and
jmp
push
inc
fidivrs
fildll
das
ds
push
shrl
lds
cli
xor
mov
or
dec
add
out
popa
or
pushf
arpl
jge
imul
cmp
xor
mov
sub
or
test
jae
or
cmpsl
fimull
pop
mov
jmp
lods
fadd
xor
mov
or
cmp
sbb
cs
mov
pop
lds
sbb
add
mov
pop
jmp
out
push
sahf
fcompl
or
add
bound
rcrl
or
loopew
push
movsb
push
rol
sahf
jo
sub
xlat
cmp
out
inc
xchg
arpl
jmp
add
and
push
into
outsl
cmp
xor
adc
or
popa
inc
test
sahf
add
fidivl
lahf
mov
ljmp
ret
orl
xorb
dec
add
iret
aaa
scas
xor
lds
daa
lock
or
jmp
mov
insl
pop
pushf
shlb
imul
sub
fsubrs
adc
movl
xor
lods
pushf
cmpl
sahf
push
mov
cmp
mov
mov
jo
and
in
repz
xchg
js
jle
cmpb
nop
in
mov
or
push
add
loopne
xchg
lcall
add
mov
sbb
or
shlb
out
scas
adc
sahf
mov
inc
ss
xor
lods
pop
jp
push
idivl
adc
gs
movsb
fisubrs
mov
mov
ret
ret
jge
adc
jb
lods
fs
out
inc
pop
inc
jge
fmulp
jb
push
ror
mov
adc
out
cmp
cmp
xchg
mov
iret
popf
pop
aas
jbe
push
rclb
xchg
das
lock
lods
fs
outsb
movntps
xor
adc
inc
or
cltd
scas
and
leave
jbe
addb
xor
adc
dec
inc
aam
leave
jp
inc
scas
xchg
mov
push
ret
jge
lods
cmpsb
negb
inc
dec
jns
mov
or
push
xor
test
and
jle
pop
and
lea
scas
inc
push
and
in
repz
sbb
addb
out
mov
scas
jecxz
jge
fldenv
cmc
dec
into
fstpt
lret
pop
popf
sti
decl
stos
scas
hlt
xchg
fmuls
adc
outsl
push
test
add
pop
out
jp
in
loopne
xchg
mov
inc
std
in
mov
mov
ret
push
loopne
and
xchg
jne
pop
lods
in
loope
add
scas
cwtl
adc
add
jp
jno
in
lea
ss
leave
jb
mov
repz
xchg
add
sub
sar
mov
and
lret
sti
xchg
popf
stos
js
ljmp
sahf
mov
insb
imul
jmp
dec
or
scas
ljmp
inc
xchg
lods
int3
pop
mov
daa
into
mov
enter
cmp
or
or
or
mov
pop
dec
stc
mov
lcall
xchg
lock
sub
popl
ds
cmp
cmp
or
inc
and
sti
pop
pop
loopne
push
and
jb
sbb
add
mov
jns
dec
xchg
pop
lcall
sahf
ds
jg
mov
aam
dec
dec
add
popf
sbb
cmp
push
cmc
xchg
cwtl
testb
mov
std
and
mov
pop
lahf
mov
ljmp
nop
jp
mov
push
inc
jg
push
dec
insb
jmp
fidivl
ja
jnp
out
test
mov
inc
cmp
stos
cmc
mov
loop
arpl
and
inc
lret
in
add
dec
mov
repz
mov
mov
rorl
dec
lock
sub
jo
dec
push
fisttps
insb
jo
cld
xchg
mov
leave
loopne
lret
pop
xchg
adc
inc
cli
fs
lret
cmp
sar
add
stos
or
ljmp
adc
cmc
cmp
lea
cmp
mulb
mov
call
pop
inc
xchg
mov
mov
xchg
jl
jb
addb
loop
insb
mov
and
dec
jne
lods
sbb
cwtl
mov
dec
mov
in
out
aaa
and
mov
in
insb
std
or
jae
lds
jge
dec
das
xlat
arpl
xchg
add
sysret
jl
aaa
pusha
lock
cmp
and
roll
mov
xor
pop
xchg
xor
mov
push
mov
xor
ja
mov
stc
push
or
jp
jno
sbb
sub
repnz
mov
sub
sbb
push
xor
shrb
xor
es
jmp
ret
nopl
inc
add
jbe
push
mov
adc
dec
in
movsb
stc
xor
pop
ljmp
in
shlb
mov
hlt
jmp
push
aam
xor
jge
xor
fcmovnb
popf
mov
loopne
mov
stc
xchg
mov
stc
and
xor
cmp
sti
add
mov
inc
lock
jle
lret
leave
adc
gs
xchg
shrl
xor
in
fs
push
mov
ds
xor
inc
dec
inc
inc
xor
inc
inc
scas
jle
jecxz
inc
push
jmp
add
sbb
inc
xor
out
cmp
mov
sub
in
into
sbb
adc
imul
test
xor
pop
ja
and
je
xchg
pop
sbb
je
outsb
inc
into
aas
andl
sbb
lcall
call
add
lret
pop
jno
insl
push
or
xchg
outsb
push
addr16
mov
add
sbb
mov
testl
fcompl
push
mov
test
les
xchg
out
jmp
movsl
or
pop
in
mov
pop
push
das
mov
adc
sbb
insl
jbe
mov
icebp
loop
xlat
mov
std
push
sbb
divb
ror
jno
popa
out
jg
mov
adc
imul
fisubrl
sub
cmp
dec
addb
cmp
mov
and
sbb
into
jno
fwait
add
sub
inc
mov
sub
sub
sub
mov
out
pusha
sahf
aad
xor
and
pop
movsl
sbb
cmpsb
movsb
cmp
mov
ret
rorl
repz
rorl
std
add
and
cmp
pop
inc
gs
mov
dec
inc
sbb
mov
jae
dec
loop
data16
jle
loopne
sub
fmull
xchg
xchg
out
je
out
pusha
rcl
inc
sub
ret
push
push
cli
sbb
das
mov
fldcw
pop
into
mov
sub
int3
xor
push
and
push
pop
call
add
sub
jo
jb
push
dec
fld
or
push
out
pushw
and
sti
mov
stos
rcr
inc
daa
insl
das
and
stos
ror
mov
test
fwait
inc
add
adc
mov
add
mov
push
mov
dec
add
shll
loope
mov
fs
rcr
leave
das
pop
insl
ss
jbe
enter
or
mov
shrl
js
lret
test
push
movsb
xchg
jne
mov
movsb
shrb
fld
or
sahf
mov
xchg
push
sbb
mov
mov
repz
and
lcall
dec
shl
in
addr16
mov
icebp
in
movsl
xchg
out
test
mov
es
mov
je
loopne
jg
sti
mov
adc
jae
int
jge
sub
sbb
cltd
mov
xchg
aas
xor
loopne,pn
and
jbe
mov
pop
outsl
ficompl
sti
xchg
arpl
outsl
popa
jecxz
test
add
pushf
imul
push
push
popa
push
rcrb
cmpsl
shr
popf
sub
adcb
inc
mov
cmp
imul
adc
pop
xorps
lret
mov
pop
inc
js
fbstp
jle
or
es
and
les
cwtl
bound
lods
xchg
inc
arpl
mov
mov
sti
bound
add
and
ficompl
loope
fisubrl
or
cmp
shrl
jae
enter
daa
fcmovnu
int
ds
jae
scas
mov
push
pop
push
stos
cmp
adc
inc
mov
loopne
cltd
gs
repnz
mov
mov
ss
cli
pop
push
repz
movsl
outsb
es
push
rorb
sub
pop
adcb
mov
sbb
jg
aaa
adc
cmp
loop
stc
addb
subl
mov
xorl
test
jns
sbb
mov
leave
jp
dec
daa
lcall
lret
stos
cwtl
movb
or
push
add
stos
stc
aad
xlat
inc
mov
sbbb
sahf
xchg
and
popf
fidivrs
test
jp
jns
mov
jbe
mov
popf
out
sbb
rclb
rcrl
dec
cli
cmc
jno
pop
rolb
or
jg
push
cmpsl
push
or
xor
xlat
mov
loopne
call
and
push
sbb
test
fucomip
add
out
xor
in
sbb
cs
inc
fnstcw
pop
hlt
ret
push
into
mov
mov
lahf
xchg
popa
add
std
stc
imul
xor
cmp
add
cmpsb
cmp
mov
data16
in
xchg
call
cs
jg
repz
adc
movsb
push
mov
icebp
ret
jb
push
inc
cmpsl
repnz
or
cmp
dec
jmp
jno
jns
mov
jo
lea
jnp
daa
fs
jne
mov
dec
pop
adc
jo
aad
fbld
fiadds
xchg
and
loope
xlat
out
sbb
jno
cmc
push
lods
mov
sbb
int3
test
fistpl
pop
cli
cs
jb
dec
mov
shl
pop
hlt
sub
divb
cs
std
jne
cmp
mov
in
movsb
rolb
adc
in
jnp
stos
adc
mov
inc
enter
mov
ds
fwait
icebp
stos
inc
add
loop
fcoms
decl
pop
push
pop
mov
jp
je
repz
cmp
es
xchg
add
lock
in
cwtl
mov
mov
and
xlat
les
add
dec
in
outsl
xchg
push
xor
sbb
stos
push
lods
xchg
cltd
jo
pop
outsl
lea
adc
xor
ss
jecxz
aad
push
mov
xchg
and
jmp
cmp
mov
ds
sub
std
ds
adc
loopne
std
mov
sbb
dec
cmpsb
mov
imul
sub
sbb
push
scas
adc
jmp
mov
mov
sti
outsl
repnz
pop
sub
cmp
orb
and
and
push
mov
out
inc
inc
cmp
jns
fcoms
xchg
pop
mov
mov
mov
jo
cmpsl
jno
dec
push
outsb
rcl
xor
xchg
mov
dec
or
das
xor
or
mov
outsb
ret
stos
jae
xchg
shlb
int3
add
adcb
icebp
add
clc
cli
fnsave
sbb
inc
dec
cmp
inc
and
insb
mov
xor
cld
movb
adc
jne
fs
cmp
je
xchg
adc
enter
push
mov
adc
and
fcmovu
int3
sub
sub
loopne
mov
sub
xchg
mov
fwait
clc
dec
ljmp
dec
or
out
test
ss
xor
fmul
xor
lea
inc
push
loopne
loope
addr16
xchg
add
add
push
mov
lret
pop
xchg
sub
fwait
xchg
and
and
adc
loop
push
mov
lret
or
lahf
daa
jns
cmp
out
scas
sbb
popa
mov
inc
push
push
repnz
mov
and
aaa
fcoml
inc
mov
push
gs
sbb
jg
pop
and
pop
adc
mull
pop
adc
inc
outsb
test
enter
enter
neg
lcall
imul
xchg
dec
jns
fidivs
outsb
jno
and
arpl
loope
or
mov
mov
testl
inc
out
ljmp
mov
movsl
iret
arpl
pop
mov
addr16
jmp
pop
les
ficoms
dec
adc
pop
push
fsubp
adc
jecxz
ljmp
sbb
push
fs
nop
jnp
jbe
enter
xchg
ja
mov
dec
xchg
int3
fs
pop
mov
fidivrs
jg
movsl
push
push
inc
pop
jbe
loop
nop
mov
add
mov
daa
jb
and
mov
jae
add
in
xchg
sbb
jnp
pop
std
rol
sbb
adc
dec
adc
insb
and
pop
aad
scas
or
mov
lret
fstp
mov
fldenv
adc
mov
subl
inc
and
call
arpl
dec
pop
cmpsb
push
outsb
icebp
dec
ret
cs
push
into
or
das
add
jl
xchg
cli
inc
jmp
dec
scas
jno
and
xor
mov
ja
xchg
sahf
scas
jge
inc
inc
mov
jle
mov
adcl
pushf
add
jne
push
lea
jns
iret
ret
les
fcmovbe
enter
lcall
jo
xchg
lret
pop
fwait
adc
andl
and
cmp
icebp
addr16
jne
fldcw
mov
push
lds
xor
rcll
mov
and
xchg
mov
ret
xor
lcall
and
popa
sub
outsb
clc
daa
fildll
jns
fistl
add
push
daa
call
stc
jnp
add
xor
inc
and
movsb
int3
divl
fimull
lret
aaa
dec
outsb
fdiv
xor
adc
aaa
pop
loope
mov
lret
inc
push
ficoml
sub
nop
dec
in
xor
shll
xchg
cmpsb
imul
outsl
xchg
das
xor
jne
and
mov
dec
jae
testb
and
mov
test
pop
es
movsb
stos
test
and
jle
jns
adc
enter
push
mov
scas
adc
pop
inc
dec
stos
fldcw
push
sub
leave
stc
fwait
sub
mov
inc
movsb
dec
xor
or
loope
sbb
cltd
cmpsb
inc
mov
enter
hlt
std
idivl
cmp
jp
int
cli
das
icebp
or
and
push
popa
popf
add
gs
sahf
leave
cltd
push
aam
mov
jae
shll
cmc
std
xchg
fisubl
xchg
push
xchg
adc
add
push
adc
jbe
add
xorb
sbb
fxam
push
pop
cmp
jge
mov
gs
push
adc
rorl
in
lea
ja
pop
push
testb
xchg
jle
pop
scas
cmpsb
adc
jb
rorl
pushl
arpl
icebp
push
xor
in
leave
xor
jne
adc
add
adc
pop
bound
mov
mov
inc
mov
mov
inc
dec
aam
xor
xor
jp
in
out
xchg
je
pop
cmc
mov
scas
stos
adc
or
jp
or
jb,pt
adc
out
adc
loope
hlt
leave
push
mov
addr16
int
les
push
push
xchg
test
fisubrs
jecxz
ret
imul
and
adc
js
leave
mov
jge
shl
mov
xor
mov
scas
mov
outsl
imul
mov
fistpl
lock
das
sbb
sub
push
jge
xchg
arpl
push
cmp
cli
sub
cmp
xor
and
inc
lods
and
xor
dec
mov
ret
add
cmc
in
and
adc
mov
push
xchg
cld
sub
mov
jp
or
je
xchg
add
fs
mov
sahf
lahf
inc
in
sbb
sbb
mov
mov
pop
fists
xchg
rclb
cs
jecxz
arpl
loope
loope
out
out
inc
arpl
jnp
daa
cmp
shll
or
adc
mov
je
icebp
insl
imul
jl
in
test
mov
call
dec
aaa
ror
gs
inc
push
sbb
cmc
cmp
fistpll
nop
icebp
loope
xor
push
xchg
jmp
imul
shrb
jle
out
leave
fildl
call
out
leave
push
inc
xchg
mov
and
or
xlat
lods
ret
or
mov
xor
cmp
out
xlat
call
sub
inc
std
test
inc
xchg
repnz
pusha
mov
inc
xchg
jne
mov
scas
or
arpl
dec
fwait
das
xchg
inc
aaa
lcall
fcomip
xchg
cltd
mov
repnz
mov
jne
dec
cmpsb
adc
xor
jecxz
in
push
adc
mov
leave
enter
sbb
negl
in
sbb
cltd
fsubrs
sbb
aaa
mov
push
and
pushl
xchg
adc
mov
out
shl
dec
and
add
add
push
add
fildl
add
mov
add
add
add
stos
add
adc
add
add
add
je
add
add
movsb
add
imul
aam
add
add
add
mov
add
add
sti
imul
add
sub
add
add
add
dec
or
adc
in
in
rolb
jmp
add
fcmovnb
add
stos
mov
js
js
pushf
js
int3
int3
int3
int3
int3
push
mov
sub
lea
push
push
push
pushl
call
cmpl
je
mov
cmp
je
call
movl
call
cmpl
jne
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
mov
push
push
push
push
push
pushl
call
pushl
call
call
pushl
call
jmp
lea
push
pushl
call
lea
push
pushl
call
xor
leave
ret
push
mov
sub
push
push
push
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
inc
inc
push
pushl
call
mov
mov
movzbl
mov
movzbl
sub
test
je
mov
add
mov
push
push
push
pushl
call
mov
sub
mov
add
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
movl
mov
sub
test
je
call
jmp
call
call
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
mov
mov
mov
inc
mov
mov
mov
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
push
pushl
call
mov
pushl
pushl
pushl
push
push
call
add
pushl
call
cmpl
jb
call
mov
pop
pop
pop
leave
ret
dec
add
add
push
insl
add
add
add
and
jb
add
or
adcb
add
add
inc
add
add
loop
push
add
pusha
sbb
add
add
rolb
inc
add
dec
add
xor
add
fisubs
add
test
nop
fs
add
pop
outsl
ja
adc
inc
add
pop
testb
mov
xchg
and
add
andnps
mov
call
aad
cmp
incl
push
data16
jmp
test
cmp
push
lea
pop
adc
add
and
jno
xchg
cmp
inc
std
std
outsl
inc
std
lods
rorl
inc
adc
push
add
add
incl
pop
push
insb
adc
fucom
lea
jmp
decl
incl
adcl
cld
push
push
int
add
repz
push
pushl
pop
xchg
add
jmp
leave
lea
lea
stc
loopne
jne
nop
add
add
xlat
aad
movl
add
mov
insb
add
add
add
adcb
pusha
add
add
imul
outsb
imul
inc
je
enter
popa
sub
je
inc
inc
xchg
add
inc
imul
add
js
in
popa
insb
outsl
and
and
ret
gs
add
push
add
add
adc
and
jb
add
add
adcb
add
add
inc
add
add
loop
add
add
xor
inc
rolb
add
add
mov
ja
int3
popa
ljmp
loopne
jne
push
cmpw
movsb
push
mov
inc
add
clc
jb
inc
ja
lcall
popf
add
xor
ret
cmp
push
push
ret
jb
sbb
addb
pop
pop
adc
sub
cmp
js
test
mov
and
dec
push
lds
ljmp
or
xor
xchg
stc
out
fld
adc
aas
dec
sub
jne
xchg
sub
outsb
push
lods
mov
ljmp
or
cmp
frstor
inc
xor
xchg
add
inc
out
add
cwtl
pop
xchg
fisttpll
sbb
xor
jp
mov
cmp
jg
popf
mov
or
mov
push
pop
fsubrs
mov
dec
int3
sbb
aas
or
ja
push
ss
push
sbb
inc
add
push
in
pop
ljmp
test
sbb
lahf
ds
call
dec
push
inc
lea
stos
adc
jbe
mov
adc
push
xchg
and
sbb
mov
mov
jp
fstpt
cmp
push
pop
mov
dec
leave
ret
jnp
cmp
mov
in
cs
push
xchg
mov
adc
idivl
fldcw
and
sub
orb
jecxz
lods
add
daa
mov
sbb
mov
add
ljmp
jb
xchg
mov
mov
add
ljmp
js
jnp
xlat
in
mov
cmc
sbb
ret
dec
mov
bound
ficompl
cmpsl
repz
test
mov
pusha
push
xchg
sbb
movsb
pop
insb
pop
fistps
mov
jl
fists
out
fisubs
mov
mov
add
lahf
add
imul
shll
dec
sbb
or
in
sarl
dec
xor
jno
popl
mov
pushf
mov
xor
or
push
cmpsl
push
out
shrb
rorl
cmp
sti
push
xor
pushf
out
fcomip
xchg
je
aas
sbb
faddl
mov
and
mov
sub
movb
test
jmp
sub
mov
jge
es
in
jbe
jae
or
jo
push
push
loopne
push
push
movsl
ja
leave
sarl
xchg
cmp
movsl
clc
out
dec
inc
pop
pop
dec
rol
adc
pusha
dec
pop
in
add
inc
mov
in
xor
fimull
add
cmpl
pop
dec
mov
sbb
flds
shl
leave
in
fstps
add
push
jp
loopne
push
decl
push
mov
insb
push
fldl
xor
int
jecxz
shrl
leave
inc
adc
out
add
aam
fistps
mov
fcmovnu
add
gs
sub
inc
imul
mov
out
in
pusha
mov
mov
in
cli
sub
cmc
shlb
sbb
xchg
out
and
and
push
xchg
repz
mov
inc
popf
aas
pop
outsb
xchg
rorb
mov
aas
xchg
mov
jp
std
daa
jne
and
xor
sbb
clc
jmp
ret
jl
lea
jl
into
sbbl
jmp
fsubp
sarb
bound
fsubs
stos
fcomps
pop
cmp
cwtl
lret
jbe
or
cmp
cmp
inc
xlat
xchg
cltd
pop
fsts
inc
aam
or
fimull
xor
jne
sub
test
dec
sahf
dec
and
or
lahf
dec
mov
les
nop
mov
cmp
lock
inc
push
pop
out
cwtl
jnp
jl
sbb
xor
mov
mov
imul
pop
shrb
mov
leave
cmp
or
or
jecxz
jmp
or
aaa
hlt
add
clc
jecxz
jo
jne
aaa
aam
into
pusha
decb
lea
dec
fs
dec
fs
pop
dec
xor
in
push
loope
mov
pop
pop
jle
push
dec
movb
cmp
arpl
or
data16
mov
imul
jno
out
es
jno
bound
out
and
lds
sub
rorl
and
add
in
lahf
push
dec
test
and
int
xchg
mov
in
addb
icebp
jle
outsl
cvttps2pi
aas
and
fcompl
push
and
repnz
outsl
pop
add
add
cwtl
xchg
pop
and
lods
pusha
dec
push
mov
repnz
xchg
mov
jb
add
int3
cmp
enter
out
jb
push
xchg
pushf
add
jecxz
mov
icebp
shlb
add
or
and
filds
shll
cwtl
inc
cs
mov
xor
mov
pop
mov
mov
jb
sub
aam
add
fxch
neg
insb
in
pop
outsb
jb
xchg
mov
fsub
shrl
push
mov
inc
sub
fnsave
das
sub
adc
outsl
xchg
scas
jecxz
sti
inc
add
xlat
push
stc
adc
stc
ret
pop
pop
das
int3
mov
sbb
jnp
pop
pop
or
xchg
mov
and
sbb
dec
push
shl
mull
push
and
aas
adc
mov
int
push
stos
pop
popl
lea
adc
outsb
cmpsl
pop
jbe
sub
negb
xor
cmp
insl
repz
inc
or
ds
cmpsl
mov
mov
dec
xchg
xor
mov
data16
adc
fisttpll
cmp
inc
jl
sub
push
insl
arpl
jmp
and
ja
and
fildll
push
sub
xor
cmpsb
repz
sarl
mov
dec
mov
mov
sub
cltd
or
test
xor
fisubl
stos
sbb
popa
test
fidivrs
iret
mov
push
push
outsb
mov
fldcw
xorl
scas
sbb
ds
lods
fstpl
inc
xorb
aaa
lcall
popa
cs
dec
add
outsb
and
stos
cmp
into
stos
ljmp
fcoml
jmp
sbb
roll
mov
clc
and
call
out
add
or
fidivrl
xor
data16
popa
sub
mov
mov
adc
xor
cmpsb
cli
jmp
mov
in
imul
rcr
decl
add
mov
stos
stos
popl
aad
sub
rcrl
sub
xor
push
fnstenv
push
xor
mov
in
cli
mov
call
leave
fldl
sub
test
imul
sub
fnstcw
xor
jno
xchg
scas
push
add
jnp
out
shrl
scas
aas
mov
cltd
xchg
ds
bound
ret
xchg
push
lret
outsb
mov
push
jg
out
jb
push
adc
lret
sub
mov
addr16
xor
mov
fsubrp
push
mov
xor
and
loop
mov
movsb
rorl
mov
pusha
jge
scas
pop
cli
into
mov
sarb
dec
and
mov
adc
dec
dec
pop
dec
jnp
push
mov
cmpl
cmp
pop
pop
lahf
mov
aam
sbb
loope
aas
inc
mov
xchg
je
push
sub
push
movl
xorl
in
push
xlat
sahf
scas
cli
stos
adc
and
and
push
xlat
cld
lret
fisubrl
mov
ret
aam
ficoms
and
xor
movsl
push
popf
dec
int3
or
jg
int3
outsb
pop
in
mov
test
push
push
cmpsl
jecxz
shrl
or
sti
fcmovnu
mov
fimuls
cmpsb
or
hlt
push
lds
pop
sbb
mov
in
iret
sub
sbb
push
repnz
rcll
ret
bound
popa
pop
ljmp
mov
das
xchg
outsb
jp
push
dec
cvtdq2ps
sbb
loopne
jp
stos
inc
in
sub
lret
mov
iret
mov
sbb
add
hlt
bound
sbb
sub
inc
add
inc
insb
popf
test
fldcw
dec
addr16
aam
mov
or
loopne
lods
dec
ret
or
sbb
fstl
je
insb
mov
mov
dec
dec
cmp
inc
sti
jnp
or
aas
pop
mov
scas
cltd
mov
lods
inc
jbe
or
or
insb
sbb
mov
testl
push
lock
scas
add
in
or
in
shl
jg
push
adc
fcmove
lea
cmp
std
sti
bound
sub
dec
lret
mov
jno
xchg
sub
gs
mov
sub
and
mov
sbbb
or
xor
adc
cli
mov
mov
mov
sub
sub
adc
adc
xor
fucom
push
aaa
mov
or
jle
push
xor
mov
movsl
jnp
adc
mov
subl
jmp
fucomi
les
std
pop
fidivl
mov
movsl
adc
sub
call
cmp
outsl
popa
into
rcrb
sbb
pop
test
test
std
cmpsb
mov
stos
lahf
insb
mov
add
bswap
adc
pop
cmp
lret
aas
pusha
cmp
push
and
roll
fildl
in
push
sub
js
push
aas
lahf
adc
inc
mov
or
cli
popa
loop
adc
inc
rolb
push
scas
icebp
lret
mov
jge
mov
loope
loop
shrb
and
ficompl
xchg
les
xlat
shll
mov
add
sahf
mov
sub
je
cli
pop
aam
bound
add
popf
pop
pop
pop
xchg
mov
dec
pop
jp
push
popa
mov
cmp
test
lods
lcall
imul
shll
dec
jle
push
adc
or
shlb
cmp
cmpsl
call
push
or
dec
pop
mov
or
xor
imul
into
cwtl
add
xor
data16
lcall
inc
aad
xor
setg
jne
sub
mov
and
push
sbb
push
data16
and
pusha
and
jne
repz
mov
clc
xchg
cld
mov
xorl
inc
adc
dec
dec
loop
inc
and
in
call
hlt
inc
push
popa
lock
int3
bound
lea
rcll
cmp
out
jl
shll
scas
andl
mov
stmxcsr
push
stos
adc
sbb
sti
mov
jnp
add
cmp
pop
mov
gs
jp
cld
inc
idivb
ds
daa
and
dec
adc
imul
cmp
or
mov
push
pop
test
in
cmp
push
leave
xchg
and
test
jecxz
scas
lods
inc
mov
push
fwait
sub
lret
test
xlat
dec
stos
aad
pmuludq
adc
mov
dec
iret
add
add
mov
test
adc
sbb
in
into
movsl
and
ss
jp
mov
int
faddl
xor
gs
hlt
inc
sbb
pushf
jnp
push
mov
xor
es
cli
xchg
daa
xor
dec
mov
out
in
sbb
dec
xchg
push
mov
sub
xchg
and
push
ljmp
stos
inc
dec
dec
dec
aas
push
pusha
in
repnz
push
sbb
sti
xor
and
imul
fidivrl
mov
sbb
mov
dec
mov
sbb
ljmp
loopne
dec
dec
adc
jb
faddl
jne
push
cmc
jle
js
jl
push
cli
mov
sbb
icebp
xor
out
cld
cli
test
inc
testw
arpl
push
sbb
sbb
call
add
add
mov
push
xlat
pushf
xor
fdivrl
jnp
cmp
outsl
mov
cs
sbb
fadds
shl
xor
mov
int3
cmp
cmp
ja
shl
cmc
adc
es
mov
pop
rcr
fbstp
les
call
sbb
cmpsl
stc
outsl
scas
js
add
xor
pop
and
shrl
adc
sbb
push
dec
cmc
ret
in
loope
jl
pushf
into
int
cmc
ret
pop
mov
orl
in
sub
cmp
cmp
imul
icebp
rcrl
inc
cld
jnp
fwait
arpl
xchg
dec
ss
push
insl
and
pop
popf
mov
jp
sub
pusha
lret
or
push
push
xorl
add
xchg
xchg
pop
lea
push
ret
dec
lcall
aas
fs
and
jg
xchg
daa
and
push
ljmp
push
sbb
dec
repz
cld
subb
mov
pop
cmp
inc
pop
and
inc
in
push
sbb
push
adc
popf
mov
and
bnd
mov
push
pop
sbb
mov
mov
das
mov
and
adc
dec
jae
adc
icebp
cmc
mov
jecxz
out
nop
lret
subb
mov
in
or
jmp
push
push
pop
test
sub
enter
jbe
add
sahf
imul
sbb
imul
test
incb
cmp
sbb
bound
fst
sub
push
pop
mov
cld
out
inc
lds
fwait
pop
lods
mov
pop
cmp
lcall
int
mov
sbb
inc
xor
outsl
pop
es
ds
aam
and
ficompl
cltd
jnp
lahf
push
mov
orb
stc
adc
out
lods
jns
xchg
xchg
insl
push
movsl
aad
and
loop
movsl
data16
xchg
in
add
push
mov
mov
ficoml
mov
mov
mov
sbb
lods
dec
sub
cmp
xchg
sbb
jb
inc
mov
and
int
div
lcall
and
mov
cmp
cwtl
inc
sarl
clc
sahf
jp
xchg
lcall
xor
ja
hlt
sarl
push
in
hlt
mov
mov
mov
pushf
xchg
mov
popf
arpl
mov
push
sbb
dec
fsts
cmp
hlt
lds
adc
orb
and
add
sub
neg
rclb
inc
jle
sbb
or
pop
scas
jbe
rcrl
cmp
jp
mov
or
fisubl
outsb
jbe
jne
add
inc
sub
loop
ficomps
ret
in
and
flds
jg
xchg
imul
cmp
adc
notb
and
ret
fdivs
int3
cmp
jmp
int
or
sub
and
stc
push
cwtl
hlt
mov
pusha
ficomps
sarb
dec
and
or
mov
mov
shlb
shlb
lock
inc
fs
stos
test
popa
and
add
mov
pop
sti
aam
out
jge
fsubl
xlat
ret
cmp
jb
into
stos
icebp
mov
push
aaa
pop
jmp
call
cmc
sub
stos
rcl
sub
arpl
es
aaa
sub
sbb
mov
or
dec
sarl
inc
in
sbb
movsb
jnp
fwait
mov
inc
int3
cmp
out
not
fwait
jo
pop
jecxz
inc
push
lds
out
cs
add
aas
dec
sub
cwtl
enter
fiaddl
arpl
xor
fidivs
jb
mov
loop
adc
fldenv
rcrl
js
in
ret
in
enter
mov
jne
imul
mov
test
cmpsl
fsubrs
test
sub
jp
mov
lods
pop
adc
jp
xchg
mov
test
scas
pusha
loope
in
xchg
loop
add
xor
pusha
lods
xor
sub
push
mov
into
lret
insl
pop
ss
add
loop
lds
jne
pop
mov
shl
pop
mov
aam
pushf
push
mov
xchg
lret
loope
fiaddl
rol
icebp
add
jbe
jno
movsl
push
ljmp
inc
fiaddl
mov
addb
push
inc
push
imul
sub
xchg
jns
xor
adc
inc
in
xorb
mov
inc
pop
dec
aaa
fcompl
add
mov
sahf
mov
out
xchg
jg
cmp
jb
imul
add
lcall
cmp
ds
adc
mov
mov
sbb
mov
lret
jb
imul
xor
dec
xor
sub
cltd
dec
pop
xchg
xlat
cmp
cltd
mov
aad
popf
mov
inc
lods
xchg
ss
sub
icebp
lods
out
in
adc
mov
pop
push
xor
sub
mov
in
mov
cmp
xchg
insb
sbb
inc
mov
pushf
sbb
icebp
bound
mov
loope
sub
add
xchg
mov
add
jbe
inc
jmp
sbb
cmp
push
fwait
stos
shl
fnstsw
sbb
cmp
fimuls
pop
mov
repz
lcall
sbb
pop
lahf
daa
xchg
into
rorb
sbb
insb
push
add
in
inc
popf
lds
je
push
insl
out
pop
and
mov
addr16
data16
add
sbb
cs
testb
jecxz
inc
sbb
shlb
sub
jl
cwtl
jp
fbld
mov
hlt
in
inc
in
mov
xorb
out
add
pusha
out
pusha
cmpsb
adc
ljmp
lcall
jle
xor
push
loope
mov
mov
lods
xchg
bound
lock
loopne
inc
push
push
stos
mov
cltd
jbe
ficoml
lds
addb
adcb
mov
mov
mov
std
mov
movsb
push
adc
mov
mov
xor
mov
jb
lea
mov
jbe
pop
out
stos
pop
dec
adc
inc
pop
cmp
push
scas
inc
pop
jp
adc
clc
into
xchg
or
shlb
and
adc
adc
push
int
jmp
adc
sbb
pop
ja
sarl
fsubrl
sbb
mov
movb
mov
dec
stc
outsl
mov
fistps
in
lret
sbb
pop
fsubs
adc
iret
and
mov
sarb
cwtl
mov
int3
testb
cmp
fs
xchg
call
das
jge
scas
test
es
mov
jmp
mov
outsb
das
lock
movsb
arpl
push
or
popa
pop
pop
nop
mov
jmp
xchg
adc
xor
cmc
lcall
or
cli
push
add
cli
dec
lret
fucomip
mov
jne
sbbl
cmp
cmp
cli
loope
test
imul
xor
fldcw
xchg
stos
inc
aaa
sub
int3
xlat
outsb
jg
mov
jb
xor
sti
int
lock
les
outsb
gs
je
pusha
lods
repnz
jl
jae
or
test
je
negl
or
popa
mov
lahf
testb
mov
push
push
into
jmp
adc
sbb
rolb
add
add
jo
add
add
mov
inc
rolb
add
add
add
add
pusha
add
add
add
push
rolb
add
lock
add
add
rolb
add
add
add
add
add
mov
add
add
xor
sbb
scas
adc
inc
adc
add
bound
add
stos
cwtl
mov
lret
dec
int3
int3
int3
int3
int3
add
hlt
push
add
add
movsb
jg
outsb
and
outsb
dec
add
or
scas
add
add
xor
add
adc
sbbb
add
add
add
test
add
add
and
add
rolb
adc
mov
fcomps
push
sbb
push
push
sbb
sbb
jge
cmp
xor
push
test
add
mov
mov
sahf
mov
mov
mov
xor
add
add
or
inc
orb
decb
hlt
lea
test
cld
add
pop
pop
push
add
jmp
incl
mov
push
fs
push
cmc
dec
or
xor
add
adc
adc
int3
add
fcoml
push
in
in
xor
add
lcall
xchg
add
inc
pop
call
xor
mov
push
es
into
cld
and
add
testl
clc
add
adc
setge
lds
dec
cmp
cmp
adc
adc
push
jne
add
adc
mov
sbb
js
add
xor
sbb
sbb
fnstenv
add
lea
add
das
outsl
push
outsb
outsb
lock
insl
add
mulb
outsl
push
mov
push
imul
add
jae
jl
fs
insb
add
push
popa
add
jns
outsl
outsl
insl
xchg
inc
gs
inc
cwtl
imul
jne
xor
add
add
inc
mov
xor
add
add
in
add
add
aam
add
add
test
add
add
add
add
add
add
adc
add
cmpsb
xchg
pop
rclb
cmp
xchg
jg
ss
or
lcall
add
sbbl
aad
ret
jbe
in
mov
mov
out
push
pop
jae
loopne
into
xchg
shr
rorb
pop
out
lret
sbb
gs
cmp
fbld
call
clc
lock
and
sub
mov
lcall
mov
cwtl
imul
and
aam
repz
les
sub
lcall
sbbb
sbb
popa
adc
xor
out
mov
lods
inc
add
sbb
test
and
xor
cmp
pop
ja
call
pop
ret
sbb
mov
test
movb
aam
jno
stc
enter
pop
cli
sub
fildl
test
fs
mov
shlb
jg
pop
je
mov
push
pop
cmp
imul
rclb
add
lret
mov
jae
pop
pop
ds
add
mov
mov
test
mov
out
cltd
movsl
ja
cmpsb
sub
out
out
adc
lea
push
xor
roll
sub
xchg
mov
cmc
inc
aad
mov
fadds
fdivr
aaa
inc
data16
jmp
roll
popf
movsl
and
add
push
aam
sub
pop
in
push
stos
repz
xor
mov
inc
push
mov
pop
push
jae
out
add
inc
mov
jne
jp
data16
jmp
mov
mov
adcl
xchg
push
inc
or
add
xchg
clc
dec
out
mov
sub
mov
hlt
jo
xlat
sbbl
inc
enter
icebp
insb
andl
repz
pop
popa
in
jne
push
add
jbe
xor
rorb
cmp
mov
jae
or
mov
add
pop
int
dec
pop
sbb
scas
fldt
jmp
and
shll
imul
jecxz
bound
call
xchg
into
cmpsl
out
sub
xor
filds
lret
mov
cmc
cmp
inc
fmuls
mov
inc
pop
movsl
cmpsl
hlt
mov
dec
hlt
mov
sahf
cwtl
sub
dec
mov
jae
popf
push
repnz
and
sub
add
pop
xor
jo
inc
mov
lds
aam
stos
or
ret
in
inc
stos
xor
in
imul
insl
popf
xor
clc
imul
out
loop
inc
jo
fwait
lret
loopne
je
xchg
lret
adc
insb
jae
xchg
clc
out
ret
bound
in
mov
outsb
jg
les
rclb
cmpsb
mov
pop
in
mov
int
xchg
gs
mov
in
mov
pusha
lret
pop
pop
sub
add
add
cmp
or
pop
in
xchg
sbb
adc
lods
test
xchg
mov
mov
fcoml
xchg
push
repz
adc
lods
movsb
cmp
xor
outsl
xlat
jo
in
ss
mov
mov
in
popa
add
les
out
dec
cwtl
or
cmp
adcl
push
loope
cs
dec
movsb
scas
push
add
arpl
mov
sub
sub
test
cmpsb
mov
testb
cmp
andl
fsubl
ja
mov
dec
stc
sarb
ds
cmpsl
imul
fwait
jmp
mov
dec
pushf
add
jmp
mov
xchg
mov
cmpsl
mov
push
and
popf
mov
fcmovnb
mov
test
inc
fldcw
jne
addl
add
pop
mov
mov
outsb
popf
cltd
sbb
in
push
cmp
jecxz
push
scas
mov
cmp
adc
sub
xchg
mov
jbe
imul
fwait
and
xchg
inc
fcmovbe
out
jmp
lret
in
nop
insl
cmpsb
rolb
cmp
xchg
imul
jle
push
push
mov
ficomps
in
sarl
sti
ja
pop
xchg
inc
adc
cmpl
push
add
mov
jne
pushf
fcoml
dec
rclb
iret
imul
sbb
sbb
adc
adc
or
loop
nop
mov
sti
stos
sarb
xlat
jmp
icebp
clc
xor
dec
cmp
sbb
hlt
xor
mov
adc
jb
jne
pop
stos
inc
outsb
mov
sti
popa
inc
dec
lock
jecxz
into
push
dec
mov
aaa
xlat
inc
std
sub
and
mov
int
cwtl
jle
sub
dec
lahf
outsb
jne
lods
sbb
adc
insb
repnz
xor
adc
loop
mov
push
imul
cmp
cwtl
jns
xchg
mov
dec
mov
jle
cmpsl
dec
pop
movsl
sub
pushf
cmc
mov
mov
pusha
jae
mov
fmul
sbb
fnsave
or
xchg
cmc
int
rolb
inc
loope
and
repz
inc
neg
lods
jo
jle
imul
adc
fisubl
rcll
adc
push
pop
std
lcall
lods
pop
mov
jno
ficoml
cmp
subl
push
scas
sub
and
scas
fdivrs
lods
pop
stc
push
imul
mov
lock
je
ds
stc
negb
shll
lcall
dec
in
dec
cmc
xor
mov
push
inc
aaa
pop
sbb
push
subb
test
xor
stos
mov
stc
pop
sarl
sub
cmp
in
or
scas
adc
dec
bound
daa
insb
aam
cmpsb
punpcklbw
lcall
inc
inc
insl
rcll
xor
add
cmp
sar
mov
jecxz
sbb
clc
xchg
insb
popa
add
out
outsl
movsb
cmp
arpl
out
in
shll
bound
push
mov
andl
push
js
stc
int
xchg
jae
and
mov
adc
insb
jne
xchg
mov
jl
mov
stos
dec
or
push
add
and
jle
mov
dec
jg
push
mov
test
adc
je
fldt
add
jne
and
mov
push
xchg
push
xchg
pop
and
inc
xchg
lret
and
stc
pop
pusha
mov
imull
pop
jp
test
mov
int3
xchg
call
insb
leave
xor
inc
pop
cltd
andl
jge
outsb
dec
mov
fiadds
inc
lods
jbe
push
out
push
outsb
shrl
adc
movsl
and
mov
pop
inc
mov
in
rcrl
inc
bound
das
ss
ret
adc
rcr
jge
decl
scas
leave
add
xchg
push
fadds
xor
scas
das
test
pop
ror
inc
les
cltd
jb
fs
outsb
mov
cwtl
lods
and
pop
jne
mov
xchg
pop
xorb
roll
fs
jae
xor
mov
mov
add
sahf
sbb
sbb
mov
js
stc
jl
ficoml
cltd
movsb
pop
dec
jmp
sub
das
sarl
ret
mov
sahf
xchg
fwait
repz
jecxz
scas
sbb
pop
in
sub
cmp
popf
ljmp
loop
jecxz
fnstenvs
inc
push
mov
cmp
and
mov
xlat
icebp
jle
mov
dec
dec
and
dec
sbb
pop
imul
jecxz
nop
lcall
sbb
push
fstpt
dec
cs
dec
xchg
lds
iret
xchg
ds
orl
push
xchg
rcll
dec
js
jmp
mov
fidivs
fs
es
in
fnsave
mov
test
rcl
pusha
inc
stos
pushf
scas
lret
lea
pop
ljmp
push
and
out
pop
les
lods
push
cmp
jl
and
call
cmp
outsb
xor
push
hlt
push
inc
dec
pop
sub
loope
ss
ljmp
mov
repnz
mov
daa
sub
pop
dec
dec
pushf
jo
scas
fcomp
js
fisubl
and
sbb
mov
stos
xor
inc
xor
mov
jl
sbb
in
insl
mov
test
enter
jnp
and
and
dec
jp
hlt
rcr
fcmovb
ljmp
inc
xor
mov
pop
mov
pop
add
push
scas
hlt
lods
xor
adc
push
in
into
sti
shrd
mov
leave
sbb
or
cmp
jmp
in
lea
lahf
ds
add
hlt
fimull
je
dec
loop
adc
fbstp
in
mov
xor
adc
or
cs
dec
add
jnp
outsb
jno
push
in
and
movsb
inc
int
xor
inc
sub
mov
es
ret
jecxz
iret
js
stc
sahf
mov
decb
dec
or
xor
cmp
into
jb
imulb
sti
push
and
out
cmp
mov
leave
and
or
andl
sti
push
xchg
sub
mov
cmp
test
lret
out
cmp
cmp
shl
ret
lret
insl
push
mov
repz
mov
lidtl
pop
mov
dec
push
inc
xchg
cmpsl
or
push
mov
data16
or
inc
data16
fcoml
cli
loope
fsubl
fwait
sbb
iret
add
outsb
cmp
xchg
ret
mov
push
sahf
or
sub
inc
dec
aaa
sti
inc
xchg
ljmp
mov
rcrb
pop
cmpb
es
inc
mov
mov
jns
shl
jle
outsb
cwtl
dec
push
mov
js
jno
cmp
jo
dec
movsl
mov
cmpsl
mov
ds
sbb
xchg
shl
cmp
xchg
xor
pop
push
xchg
repz
jnp
jns
cwtl
call
mov
aad
mov
push
mov
gs
xchg
jae
lods
sub
mov
and
jb
pop
nop
int
sti
adc
push
pop
loopne
and
out
imul
imul
xchg
stos
fsubrs
into
call
es
popa
add
loop
movsl
adc
filds
adc
inc
iret
hlt
ds
call
out
lds
jecxz
test
test
inc
outsl
test
pop
and
ror
pop
inc
clc
dec
jmp
inc
leave
lds
mov
adc
xor
call
ret
sbbb
mov
adc
enter
movsb
adc
mov
aas
jge
push
push
repnz
out
push
test
jge
call
mov
mov
into
xchg
push
or
sahf
jnp
mov
incl
movaps
rcr
int
push
rcrb
hlt
jmp
cmpb
mov
mov
push
mov
adc
jne
push
in
adc
jl
and
cmc
dec
addr16
push
daa
call
icebp
and
pop
fbld
jo
pop
enter
sub
mov
add
jae
xlat
aad
arpl
mov
lea
fisubrs
addr16
xchg
pop
and
push
ret
mov
pusha
inc
inc
fisubl
cmp
inc
adc
sti
push
sbb
cs
aas
cmpsb
lock
sbb
push
sbb
or
mov
test
xchg
imul
inc
ffree
jmp
ret
push
sbb
mov
mov
sbb
lods
cltd
xchg
clc
clc
inc
fsub
or
adc
loopne
cltd
inc
or
fs
imul
scas
sar
push
dec
dec
and
aas
xor
sbb
push
insl
xchg
xor
out
mov
dec
shlb
je,pn
cmpsl
jge
push
jg
sbb
imul
rolb
fists
adc
sub
roll
aam
mov
pcmpeqw
push
cmc
call
imul
jg
or
mov
imul
fists
push
inc
xor
add
gs
mov
xchg
arpl
fcmovu
jg
in
jno
xchg
sbb
adc
je
ss
cmp
inc
mov
adc
mov
rcrb
mov
jle
xor
sti
jmp
sub
stc
sarb
outsb
out
or
jns
and
outsl
mov
xor
push
fisubrs
arpl
cmpsl
xchg
jbe
jg
stos
and
bound
mov
sub
mov
lahf
jl
roll
adc
outsl
shlb
rolb
aaa
pop
popa
sbb
jnp
mov
lock
push
insl
pop
lret
mov
lods
clc
xchg
pop
popa
add
adc
outsb
or
sahf
stos
inc
rolb
lret
and
mov
jb
loope
inc
dec
adc
xchg
lea
cmpsb
push
int
cmp
repnz
jns
mov
sti
mov
sub
mov
sbb
stos
movsl
inc
mov
nop
fwait
xchg
adc
addr16
push
jne
push
cli
xor
lock
push
cmp
xor
adc
addl
mov
outsl
xchg
ljmp
cmp
and
cld
jge
stos
addr16
lcall
mov
adc
pop
pop
add
shr
mov
daa
push
jbe
cli
sbb
sub
lock
bound
int
mov
mov
mov
ss
and
inc
cld
scas
pop
fdecstp
cmp
mov
out
mov
lods
mov
mov
dec
mov
sbb
aam
lock
push
cmp
popf
loop
aas
jns
add
inc
fucomi
data16
dec
xor
sahf
mov
mov
pusha
dec
pop
es
out
sub
xor
into
xlat
lahf
add
and
and
jbe
ja
ror
pop
loop
les
dec
repz
lds
sbb
cmpsl
fdivs
pop
movb
dec
jns
andb
repnz
adcl
enter
hlt
iret
jecxz
jp
js
inc
jle
jle
xor
jne
add
repnz
aas
xor
loop
lret
aad
mov
scas
jb
mov
fidivrs
cmp
imul
inc
inc
pop
imul
cmc
movsl
ds
and
lcall
shrl
mov
and
jae
mov
pop
in
jl
out
cmp
daa
push
stos
cmp
sarl
mov
ret
inc
les
in
loopne
dec
mov
mulb
pop
into
or
xlat
dec
mov
aad
xor
ds
dec
aad
add
jns
mov
ret
jg
shr
mov
ret
fisttpll
filds
roll
jo
enter
cmp
sahf
push
push
mov
andl
loopne
fwait
cmp
mov
aam
pop
iret
inc
cld
jge
sti
mov
clc
mov
mov
jno
push
loope
push
mov
pop
adc
jle
lods
out
sbb
in
mov
pop
xchg
add
sahf
xchg
lds
sbb
mov
nop
aas
sub
sub
jge
mov
rcr
inc
rcrb
dec
and
fiaddl
inc
in
jge
sub
pop
pop
or
jnp
sti
test
mov
mov
cmp
in
pop
repz
mov
pop
fs
sub
fbstp
pushf
ja
arpl
imul
stos
neg
loope
add
idivl
aad
lock
in
adc
pop
lds
outsb
cli
dec
test
ljmp
dec
sbbl
sbb
popf
and
ret
test
fs
aam
push
push
lahf
in
shl
add
rcr
das
push
dec
mov
and
pop
call
jl
cs
add
jnp
and
clc
xchg
mov
cli
stos
xchg
in
sub
or
or
decb
sub
or
push
inc
xchg
and
sbb
orl
pop
push
or
fdivs
jo
testl
cbtw
adc
adc
add
add
mov
sbb
jp
mov
mov
rorl
int
mov
pop
insl
outsl
mov
lahf
dec
and
ljmp
sbb
sti
jmp
sbb
enter
lock
mov
pop
xor
dec
das
fbld
jb
test
push
iret
push
mov
sahf
mov
in
pop
add
sbb
pusha
or
mov
push
mov
out
gs
and
test
mov
pop
sub
lret
mov
cmpsb
mov
adc
jbe
sbb
aad
loope
or
out
pop
icebp
jno
test
mov
jle
cmpsb
sahf
sbb
shrl
gs
xchg
jp
xchg
push
jecxz
adc
iret
lods
icebp
jecxz
push
dec
adc
inc
xchg
paddusw
pop
add
mov
xchg
ret
mov
clc
ret
cltd
ror
iret
das
lds
adc
ss
pop
ret
jecxz
pop
cmp
pop
lds
stos
stc
mov
cmpsl
adc
gs
add
mov
leave
fwait
aad
mov
gs
into
in
shr
push
inc
out
ljmp
arpl
jbe
sbb
pop
data16
mov
call
out
leave
mov
loope
cwtl
inc
inc
cmp
mov
out
or
jp
sbb
pushf
mov
ja
mov
or
flds
aas
cmpsl
push
sbb
scas
pop
stos
and
push
push
loopne
aas
cmpsb
cmp
push
in
ljmp
jae
inc
pusha
arpl
xchg
mov
mov
aas
std
imulb
xchg
inc
fisubl
cmpsl
aad
pop
pop
pop
jl
and
mov
in
addl
adc
sbb
fwait
lahf
cmpb
pop
data16
push
rcl
xor
imulb
and
add
jl
out
jmp
sahf
pop
push
cs
mov
call
xchg
mov
pop
mov
mov
push
gs
or
aam
mov
jmp
and
sub
mov
mov
hlt
int3
or
push
sahf
jp
xchg
scas
hlt
leave
and
inc
ja
jnp
ret
ret
nop
inc
in
sub
test
dec
mov
cmp
inc
jecxz
pop
mov
imul
and
jecxz
fwait
repz
or
dec
out
mov
mov
push
nop
xlat
ljmp
mov
pop
stos
mov
lret
adc
push
fisttpl
mov
push
out
cmp
mov
xor
adc
xchg
or
sti
pop
push
fcmovb
add
jg
pop
aas
fdivs
test
sbb
cmpl
add
fldz
push
jb,pt
or
popa
pop
insb
lds
ret
mov
lods
adc
jecxz
in
in
mov
repz
push
sub
dec
daa
and
push
pop
les
imul
add
xlat
and
dec
mov
lahf
cmp
fiaddl
jno
or
xchg
pop
adc
mov
add
xor
gs
sti
fimull
or
jo
dec
mov
mov
jae
xor
sbb
push
push
lock
add
pop
push
jmp
add
add
test
add
add
add
add
add
add
adc
add
add
les
add
add
mov
add
add
fs
add
add
push
scas
add
add
add
add
add
les
pusha
add
add
add
add
push
outsb
add
add
mov
add
add
and
add
call
add
hlt
add
adc
test
add
add
ja
push
mov
jmp
int3
int3
int3
int3
int3
int3
add
push
fldl
add
add
outsb
je
add
add
add
ficomps
adc
add
int
add
add
std
add
add
outsb
lods
add
add
add
push
cmp
cs
add
add
pop
popf
add
add
mov
and
adc
inc
outsl
pop
fwait
dec
outsb
ja
dec
jp
add
xchg
mov
or
xchg
daa
rorl
fwait
push
inc
int
adc
jo
adc
lea
adc
mov
xor
jae
push
adc
shrb
jne
mov
push
mov
pop
ret
mov
add
push
jle
push
jge
mov
push
enter
push
imul
call
push
call
sahf
std
xorl
icebp
or
shl
mov
out
in
cld
inc
add
dec
dec
test
jge
popf
pop
call
push
push
call
in
push
mov
ret
push
lea
lock
jne
adcb
push
stos
sub
push
fldl
add
add
add
add
jle
add
add
scas
insl
add
add
ficomps
dec
int
jns
inc
push
mov
or
add
sti
inc
add
jo
jns
inc
arpl
pop
gs
gs
dec
movsl
insb
arpl
inc
sbb
js
push
cs
push
jb
addr16
xchg
orb
gs
push
mov
insb
js
mov
jle
add
add
scas
insl
add
add
ficomps
push
int
add
add
std
add
add
outsb
lods
add
add
sahf
pop
add
add
into
or
cmp
mov
das
cmc
sti
xor
cs
loopne
leave
int
mov
or
daa
mov
push
xchg
mov
mov
pop
jmp
outsb
xchg
fadd
cmp
lea
data16
idivb
and
mov
scas
in
sub
xlat
out
mov
mov
add
xchg
lret
clc
push
or
mov
mov
sub
loop
ds
mov
testl
outsb
inc
cld
cmp
pop
mov
mov
iret
stos
clc
pop
fadd
in
push
cmp
mov
aad
je
sub
fs
mov
ret
cmp
pop
fwait
mov
je
push
dec
jle
sbb
in
push
inc
nop
adc
mov
or
ljmp
adc
sub
or
clc
mov
repz
in
sub
ljmp
add
mov
in
jg
sbb
dec
sbb
and
bound
in
rolb
pusha
rol
pop
shr
arpl
mov
mov
or
push
mov
gs
adc
xor
push
xor
mov
jmp
int3
mov
outsl
xchg
fsubrp
xchg
pop
sbb
ljmp
pop
jmp
mov
hlt
inc
push
movsl
push
iret
cmp
push
pushf
add
jno
shrb
repnz
adc
jmp
in
pop
punpckhdq
ds
mov
outsb
bound
sbb
ret
je
inc
mov
call
fnstcw
aaa
pop
loop
xchg
insl
or
cli
fstl
stc
pop
cmp
push
aad
sub
sub
negb
in
cmp
js
jecxz
cmp
test
pop
outsl
loope
and
xchg
sub
cmp
adc
imull
lret
fwait
pop
loope
rcrb
adc
loop
mov
mov
adc
arpl
and
loope
das
jo
sub
mov
or
cld
jne
push
repz
sti
loopne
pop
or
out
ss
test
stos
addr16
jo
push
addr16
mov
pop
mov
cmp
lock
cmp
clc
cmp
mov
lods
sbb
jmp
out
outsl
cltd
and
sarl
pop
sti
in
loop
mov
inc
adc
inc
int
jnp
inc
fcompl
and
mov
jne
int3
in
std
fwait
dec
add
into
xchg
iret
pop
shl
adc
mov
in
adc
jb
xlat
mov
sti
push
pop
mov
fildll
or
sahf
mov
push
adc
cmp
not
gs
in
lds
aam
push
int3
fdivrl
das
push
ljmp
test
push
mov
mov
cmp
push
push
gs
sbb
bound
cmpb
imul
mov
add
jg
pop
xchg
in
jmp
mov
push
cld
mov
sub
and
sti
mov
sti
ljmp
fcomps
jl
out
loop
int3
jns
mov
or
stos
cmp
test
push
bound
adc
aad
push
push
adc
inc
andb
cmp
jns
sbb
push
pop
push
daa
push
rcl
cld
icebp
ss
jns
sub
pushf
dec
pop
ds
add
mov
movsb
int3
cmp
aaa
xchg
fisttps
cmc
call
fsubp
loopne
adc
cli
outsb
jmp
cmp
sub
cmpsb
or
inc
and
shll
outsl
call
push
hlt
ficompl
icebp
cmpsl
enter
and
ret
jge
mov
shll
loopne
ret
fstps
jp
push
sub
pushf
or
test
enter
jae
dec
test
mov
ljmp
clc
sbb
orl
mov
les
out
in
add
jecxz
jle
dec
push
aam
add
ja
xchg
pop
cli
or
outsl
inc
mov
add
sub
pop
mov
jl
fldt
into
fisttps
mov
fmuls
sub
rolb
push
and
or
inc
adc
xchg
imul
adc
ss
shrb
xchg
ja
xor
jle
push
lods
shl
push
aad
add
and
dec
dec
stos
out
mov
shrl
scas
jmp
clc
stos
sub
in
push
push
cmp
dec
aam
cmp
adc
mov
dec
mov
fidivrs
pop
loope
ss
fldl
pop
hlt
int
push
adc
pop
mov
fwait
mov
imul
xorb
sahf
frstor
sub
movsb
xchg
sub
add
movsb
rcll
insb
popa
mulb
es
mov
cmp
out
fmuls
jp
imul
inc
leave
scas
sbb
adc
pop
lods
pop
nop
cmp
push
fldcw
js
mov
adc
fwait
pop
push
pop
mov
mov
lahf
or
test
testl
stos
xchg
xchg
sub
cwtl
mov
fimuls
dec
scas
mov
jnp
sub
xchg
pusha
arpl
insb
push
mov
inc
lea
cmp
or
mov
adc
jmp
enter
inc
sbb
or
hlt
jne
hlt
fiaddl
mov
push
cmp
sbb
test
lods
in
popa
cmp
aas
out
dec
je
int3
faddp
xor
das
sbb
rorl
int3
sub
sub
xchg
repnz
stc
ja
mov
and
or
test
push
dec
pusha
inc
jl
inc
enter
shlb
jnp
loop
jnp
dec
bound
dec
rcl
or
add
fistl
cmp
sarl
mov
mov
movb
xchg
push
pop
push
push
fstl
clc
je
cli
repz
addl
fidivl
cmp
push
xchg
jecxz
cmp
ficoml
lret
cmp
xchg
jmp
cs
pop
add
mov
mov
shrl
enter
pushf
arpl
rcll
push
aaa
adc
aaa
lret
outsb
xor
cltd
inc
and
jnp
push
pmulhw
adc
mov
cwtl
test
fmul
cmp
adc
jmp
je
bound
popf
stos
jae
mov
dec
dec
popa
and
cli
dec
push
xchg
or
pushf
in
outsb
push
xchg
adc
mov
mov
inc
xor
pop
nop
add
stos
push
or
xchg
mov
enter
mov
ja
mov
in
lret
push
mov
mov
pusha
out
dec
sub
repnz
pop
xchg
fs
xchg
aam
shll
sbb
lahf
data16
popf
aas
xchg
jo
insl
dec
icebp
push
insb
cmc
aaa
sub
movsb
movsb
stos
push
js,pn
fcomps
jl
adc
pop
movsl
cmp
jno
mov
fisttps
dec
out
and
mov
in
mov
dec
pusha
cmpsl
pop
bound
fdivl
mov
in
cmc
jo
das
lds
sub
push
mov
cli
sbb
stc
jns
push
cmp
or
aad
push
lret
mov
jo
iret
jp
in
sub
dec
mov
mov
xor
pop
push
shr
inc
sbbb
clc
icebp
mov
sbb
movsl
and
mov
dec
cmp
xor
dec
icebp
rclb
and
and
mov
cs
lods
pop
stos
sub
mov
iret
jbe
imul
pop
testl
addr16
xor
es
or
adc
iret
xchg
lock
xorb
imul
test
sahf
mov
into
test
xchg
aam
in
xor
mov
pushf
shrb
mov
sbb
bound
sub
xor
nop
ret
cmp
jl
jg
in
add
sarb
push
xchg
or
xor
hlt
jnp
sbb
dec
mov
and
std
insl
mov
je
out
lods
cld
ja
jge
ljmp
push
orl
daa
std
push
inc
mov
stos
outsl
push
mov
and
xor
outsb
cmp
iret
nop
xchg
arpl
pop
pop
gs
outsl
stos
jne
adc
in
and
xchg
add
or
icebp
shll
outsb
scas
cmp
add
xor
fcom
mov
sbb
gs
mov
and
dec
stos
inc
pop
xor
jl
popa
push
dec
sbb
test
jno
push
rcr
sub
idivl
mov
popf
scas
mov
aad
pushf
cld
xchg
pushf
dec
int3
mov
scas
into
movsb
jl
insl
push
add
push
sub
int3
xor
dec
dec
arpl
adc
bound
loope
and
or
pop
stos
addb
subb
sbb
fcmovb
jo
pop
adc
mov
dec
sbb
out
stos
loopne
loope
repnz
lds
adc
or
mov
insl
mov
cmp
js
testb
push
sbb
jl
in
jmp
jge
pushf
dec
xorl
dec
sahf
dec
insw
std
and
and
loop
add
je
enter
xor
mov
mov
jl
ss
into
xor
xor
mov
lret
push
outsl
jge
xchg
fs
dec
push
pushl
xchg
add
fcmovbe
imul
fisubrl
in
cmp
xor
mov
bound
sbb
xchg
das
mov
gs
push
xchg
in
in
xor
push
adc
stc
ja
lahf
repnz
inc
pand
test
mov
loope
mov
inc
out
es
inc
xchg
mov
stos
testb
or
dec
cmp
movsl
mov
jg
in
ficoms
js
aas
pop
lahf
mov
push
inc
pop
fwait
ljmp
stos
push
jle
sub
out
add
cmpsb
mov
and
push
xor
mov
jo
push
inc
cs
and
or
jle
cmc
dec
cmp
aad
xor
xor
adc
adc
std
inc
and
adc
mov
jno
mov
cli
incb
ljmp
in
push
fwait
mov
sahf
out
dec
or
mov
dec
in
jl
bound
dec
pop
loop
daa
imul
movsl
not
int3
mov
popa
jns
negb
fsubrp
sti
sub
sarb
mov
pop
idivl
cmp
arpl
out
fstps
mov
shrl
jnp
stc
dec
push
inc
sbb
inc
mov
cmpsb
and
lods
fwait
push
lods
jmp
sbb
mov
setnp
cmp
arpl
sti
jae
mov
xor
push
hlt
scas
inc
fdivs
jae
sub
xchg
xchg
pop
scas
xchg
cmp
ret
add
lock
mov
jno
push
into
jge
xchg
mov
imul
mov
jbe
cld
int
out
out
fsubrl
fnsave
xor
and
xchg
add
sti
scas
into
jg
enter
mov
scas
mov
dec
jae
shl
push
mov
lods
cld
and
inc
fxch
inc
rorb
incl
or
xchg
push
mov
movsl
jo
pusha
push
jb
sbb
imul
cli
jle
push
jno
add
cmp
loope
xchg
or
lea
push
ficomps
dec
leave
mov
xchg
iret
pop
int
ret
sub
xchg
in
insl
mov
or
jge
stos
inc
adc
out
dec
push
jp
mov
dec
lret
adc
inc
sub
mov
xchg
adc
cmpsl
icebp
mov
rolb
test
fldt
data16
jb
ffree
cmp
pop
repz
mov
sbb
in
adc
jmp
jns
test
cmp
xchg
push
xchg
popa
xchg
add
pause
movsl
test
inc
mov
or
stc
pop
scas
adc
test
inc
mov
jno
loopne
jne
imul
and
shll
call
scas
jl
or
loop
push
inc
lahf
ss
pop
and
jnp
xchg
adc
mov
bound
pushf
dec
scas
adc
das
gs
out
jmp
jae
add
add
test
and
jecxz
pop
adc
dec
fcomps
and
jo
push
js
test
shll
or
scas
jbe
or
aad
cmpsl
mov
cmp
jb
xchg
jp
pop
repnz
jno
or
xchg
pusha
add
idivl
aaa
or
in
mov
out
ds
repz
dec
push
data16
call
cmpsb
mov
cmp
mov
mov
and
movsl
sti
scas
push
fiadds
popa
push
test
sahf
lods
insb
add
test
daa
mov
xor
sbb
xor
lahf
mov
mov
push
xor
push
rcrb
jmp
pop
and
out
in
mov
repnz
jae
xchg
das
mov
push
aad
stc
sbb
test
movsl
push
or
xor
dec
fbld
pusha
xchg
fmull
loop
jg
loope
gs
mov
inc
pop
lcall
mov
adc
daa
repz
cwtl
std
stos
pop
adc
cmp
cmc
push
push
imul
mov
mov
fsub
jb
pop
add
push
mov
cmp
shll
xor
sbb
push
sub
pop
outsb
lsl
jo
pop
adc
icebp
mov
sahf
aad
xor
aam
jecxz
sub
lcall
movsl
lea
stc
dec
cmpsb
pop
inc
outsl
daa
rol
ja
mov
jnp
push
movsb
leave
cmp
fimuls
shlb
mov
push
push
cltd
mov
clc
and
daa
bnd
pusha
jb
dec
gs
cli
sub
popf
or
adc
inc
jne
daa
xor
push
mov
and
ja
xchg
aas
mov
push
mov
call
xor
mov
fisubrl
shl
dec
unpckhps
test
adc
out
jns
jl
mov
in
dec
loop
rolb
rclb
mov
and
outsl
jmp
sub
daa
jge
cmp
mov
sub
ds
adc
ret
popa
adc
pop
insl
popa
lock
push
jb
push
movsb
jno
lret
out
bound
rorl
adc
call
mov
push
loopne
insl
dec
shll
inc
scas
mov
cmp
jnp
inc
popl
jbe
cmp
adc
and
imul
aaa
scas
fdivp
mov
out
ss
push
adc
jp
gs
sarb
cli
sbb
lds
jb
lods
aaa
outsb
and
dec
test
sbb
sbb
andl
pop
imul
hlt
rorl
pop
andl
xchg
push
sub
mov
lret
ss
mov
xor
addr16
mov
addr16
push
push
jp
daa
cwtl
decl
dec
imul
addr16
out
jmp
push
inc
test
sbb
aaa
in
lds
stos
leave
jge
addb
jae
hlt
nop
cmp
and
adc
push
cltd
aas
fcmovbe
js
cltd
mov
in
mov
aam
loope
jecxz
imul
sti
push
sbb
cmp
ret
add
add
mov
inc
push
out
cmp
xchg
fdivp
adc
inc
popf
ret
outsb
daa
call
or
mov
iret
pop
rcll
rorl
add
or
push
cmpsb
pop
in
int3
lcall
and
mov
mov
add
and
lods
dec
adc
addl
dec
mov
mov
and
pop
inc
add
sbb
adc
imul
hlt
fcmove
icebp
sbb
aad
push
rcrl
mov
xchg
push
mov
enter
sub
and
scas
popa
mov
or
jns
out
pop
or
xchg
adc
sub
fwait
xor
mov
das
arpl
mov
xor
movl
xor
imul
xchg
je
cmpsl
sub
andl
xor
xchg
xor
cld
mov
xor
push
and
bound
or
xorb
pop
xor
xchg
jl
and
xchg
sbb
inc
pop
xchg
adc
sbb
and
andl
into
lcall
mov
hlt
scas
fcompl
lods
mul
mov
mov
lahf
pop
arpl
pop
lock
sub
fisubrl
add
cmp
imul
cmp
test
insl
cld
xor
fs
push
cli
dec
fisubrl
push
pop
xchg
and
push
cmc
jmp
jl
and
jno
inc
push
cmp
aas
pop
push
outsb
xchg
neg
cmc
pusha
inc
xor
test
inc
dec
cmpsb
mov
xlat
insl
lods
lds
cmp
out
mov
mov
lods
dec
aad
lds
aas
inc
mov
pushl
rclb
in
mov
fnsave
pop
in
sbb
test
mov
xchg
add
push
sbb
out
lds
sub
rol
daa
push
movsl
rorb
inc
mov
movsb
mov
out
outsb
test
cmp
push
add
mov
lods
jmp
mov
outsb
mov
and
aaa
mov
imul
dec
in
and
pusha
outsl
icebp
in
std
xchg
ret
in
jp
rolb
data16
and
jl
es
lcall
insb
adcl
das
sti
add
aad
sbb
xor
std
mov
pop
imul
rorl
sbb
xchg
inc
test
pop
clc
sub
mov
ljmp
xchg
dec
dec
mov
xor
in
push
mov
lahf
sbb
xlat
fstps
adc
popf
fnstsw
ficoml
ds
sbb
mov
pushf
movsb
inc
dec
fdivr
cmp
pop
sub
ret
sub
stos
jbe
mov
mov
sub
jp
imul
js
out
movsb
xor
pushf
mov
shlb
cli
testl
jg
clc
and
fs
shl
cmp
mov
into
fisttps
bound
pop
add
lret
xor
cmp
push
xchg
mov
push
jle
cmp
ja
std
push
in
xchg
mull
add
cmpsb
cmp
inc
xor
cmp
jle
sub
add
clc
test
pop
aad
popa
cmp
leave
shrb
pop
js
addr16
xor
xor
out
mov
push
in
cmp
mov
scas
sbb
xchg
cmc
aaa
aaa
fs
mov
xchg
add
pusha
lock
and
out
push
std
inc
test
in
dec
cmpsb
lods
ds
xchg
sub
leave
testb
arpl
xchg
or
mov
inc
lcall
and
scas
dec
adc
sbb
dec
xlat
ror
ja
cmpsl
lds
add
xlat
push
lahf
sahf
icebp
or
call
insl
pop
push
les
cmp
pushf
xchg
nop
add
xlat
movsb
xchg
ljmp
rorl
dec
mov
add
jnp
scas
cmp
lods
sbb
add
push
push
adc
cmpsl
inc
xchg
out
jae
add
arpl
cmc
xchg
mov
cmc
ja
lret
push
cmpb
cmp
add
push
and
or
sub
push
insl
gs
cld
add
add
std
add
add
outsb
lods
add
add
sahf
pop
add
add
into
or
cmp
cs
add
add
pop
popf
add
add
mov
add
add
add
sub
sahf
fldl
lea
add
add
mov
scas
insl
add
add
ficomps
push
int
add
add
std
add
add
outsb
lods
add
add
sahf
imull
test
jo
mov
int3
int3
int3
int3
int3
int3
push
mov
sub
push
mov
mov
movzbl
movzbl
sub
je
call
incl
lea
push
call
jmp
cmpl
je
cmpl
je
push
call
mov
xor
call
mov
mov
mov
push
mov
call
push
mov
call
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
pop
test
jne
mov
not
mov
or
mov
call
lea
push
call
mov
pop
leave
ret
push
mov
mov
mov
mov
push
add
mov
mov
add
mov
mov
mov
mov
call
mov
mov
mov
add
push
pushl
call
mov
mov
movzbl
movzbl
push
sub
pop
je
addl
push
push
call
pop
pop
push
push
push
push
mov
push
push
push
push
push
pushl
pushl
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
ret
add
add
add
xor
mov
outsl
enter
add
inc
xchg
add
adc
push
roll
adc
add
and
add
add
add
xchg
or
add
push
mov
daa
loope
add
sbb
or
sbb
sbb
pop
sbb
sbb
lea
sbb
and
jns
jne
jp
je
jb
push
dec
outsl
jo
mov
addr16
enter
jecxz
out
xchg
pop
inc
leave
clc
add
addl
mov
repz
xchg
jp
ljmp
cld
add
adc
lock
clc
ljmp
imul
inc
lcall
mov
push
add
gs
push
incl
nop
sub
inc
add
dec
sub
mov
je
test
dec
ds
test
test
je
jne
jne
or
in
cmp
inc
mov
push
push
adc
inc
clc
decl
mov
movsl
repz
jns
ljmp
paddusb
push
incl
and
add
add
pop
sbb
add
xor
pop
add
movsl
popa
add
sbb
jne
sbb
sbb
pop
fstps
sbb
sbb
icebp
add
xchg
inc
gs
jae
aaa
popa
dec
insb
add
subl
add
daa
xchg
outsl
insl
insb
outsl
pushf
jo
outsl
jae
stos
sub
loope
xor
add
inc
mov
jno
add
mov
inc
dec
xor
movsl
popa
add
add
jne
add
add
inc
roll
add
adc
add
and
add
add
add
add
add
add
and
add
adc
mov
xor
jp
sub
push
xchg
sub
shrb
cmp
loope
jb
in
and
sbb
mov
loopne
push
nop
add
popa
adc
scas
insb
sub
mov
ficomps
mov
jne
mov
pop
std
fsubrs
test
orb
jo
stos
lods
or
xor
lret
xor
lcall
hlt
pop
fwait
adc
test
pop
xor
push
xchg
in
jge
cmp
dec
arpl
rcrb
mov
jp
cmpxchg
mov
aas
xchg
cmp
test
adcl
neg
push
lods
pop
add
jo
div
cmp
fists
pushf
jle
movsl
ss
fwait
out
adc
or
loop
fxch
mov
push
push
pop
inc
pop
jne
fwait
rol
mov
stos
sbbb
repnz
pop
dec
push
or
roll
mov
add
jmp
inc
cmp
xchg
xor
push
xchg
gs
pop
push
dec
psubusb
add
sub
push
jo
add
xchg
sbb
dec
or
js
push
xchg
mov
adc
and
hlt
dec
jg
cmpsb
imul
mov
push
mov
loopne
pop
mov
adc
test
adc
pop
add
and
lea
add
aad
fisttpll
push
jecxz
dec
inc
jl
fidivrl
xor
filds
mov
adc
sub
mov
sahf
fistl
in
adc
jl
in
sbb
daa
ljmp
icebp
rcrl
jnp
add
xor
into
xchg
jle
cmp
adc
sub
mov
cmpsl
xchg
enter
mov
xchg
in
mov
insb
jmp
xor
or
push
mov
js
add
inc
adc
add
ret
mov
ljmp
add
and
adc
fwait
pop
cmp
repnz
and
inc
rcr
in
clc
in
xor
mov
loope
int3
addr16
cmp
sub
in
sub
push
sub
push
push
std
repnz
popf
add
or
push
es
jns
rolb
xchg
jmp
mov
pop
fs
sbb
or
ja
add
jno
cmp
out
xchg
or
scas
push
pop
loop
aam
loop
dec
mov
mov
mov
mov
lea
int3
lea
dec
and
adc
ds
jns
xchg
das
popa
push
js
outsb
jns
or
stc
movsb
roll
cmpsb
pop
xchg
xchg
cltd
cmpsb
dec
shrb
xchg
lds
mov
ja
dec
aam
add
cmp
cmc
and
das
adc
imul
lret
mov
das
push
mov
dec
shll
loope
inc
mov
out
cld
shrb
dec
sub
sub
xor
cs
cltd
xor
jp
in
std
cmp
dec
les
ds
inc
cmp
mov
add
pop
mov
jl
out
sbb
mov
ljmp
cmp
add
ret
adc
lods
pop
loop
jg
cmp
fmull
dec
mov
pop
mov
mov
sti
push
push
pop
xor
xchg
mov
dec
cmpsb
stos
add
fcmovnu
fnstsw
jmp
sbb
jae
movsb
add
pop
add
stos
cmp
and
sarl
mov
xchg
roll
imul
pop
pop
aaa
mov
jmp
and
push
mov
out
and
jno
mov
mov
and
xchg
and
outsl
lea
movsb
in
mov
pop
imul
push
sub
adc
enter
jl
sbb
iret
push
xchg
sub
aas
mov
cmp
jb
pop
xchg
cltd
dec
inc
hlt
testl
clc
push
mov
mov
dec
rolb
stc
or
cmp
xchg
cmp
clc
push
lods
xchg
push
cmp
xlat
ficoml
fadd
mov
mov
cwtl
xchg
and
pushf
jmp
call
jnp
cmpsl
xorb
or
arpl
cmp
mov
jbe
mov
mov
ja
mov
sbbl
fistpll
cmp
je
pop
daa
mov
mov
push
and
lret
adc
loopne
out
lods
mov
sub
neg
in
aam
or
int
mov
xchg
pop
adc
mov
sub
mov
pop
adc
jg
mov
mov
shlb
mov
ds
mov
data16
filds
push
mov
addb
repz
mov
xchg
out
nop
pop
or
push
and
clc
adc
and
push
notl
push
pop
and
or
popa
loope
jg
cmpsl
pop
adc
in
sub
xchg
xchg
es
pusha
imul
add
ja
pop
xchg
jmp
outsl
mov
imul
rcrb
cmpsb
lret
add
xchg
cs
insl
repz
xor
jo
mov
xchg
or
ljmp
jecxz
xor
jbe
sti
hlt
cli
adc
fists
sarl
jg
mov
mov
inc
mov
mov
adc
shrb
inc
mov
inc
int
nop
pushf
mov
lahf
cwtl
lea
mov
or
rcr
repz
aad
ljmp
in
shrl
leave
in
mov
dec
jne
adc
cmpsl
pop
lea
lds
sbb
leave
xor
jge
mov
sbb
jno
and
sbb
in
xor
lret
inc
mov
mov
subb
sbb
std
xor
add
mov
stos
pop
stos
sub
les
cli
dec
orb
sbbb
shlb
sbb
sbb
and
pop
dec
nop
xlat
shrb
movl
inc
imul
pushf
imull
les
sub
das
pushl
lret
imul
push
gs
shlb
test
push
es
sub
mov
jle
pop
push
add
lret
cmpsb
xlat
scas
stos
insb
out
leave
mov
dec
sti
and
js
aas
cmp
cld
movsb
testb
jne
push
outsl
push
mov
or
inc
inc
fwait
insl
inc
loop
mov
jns
std
pushf
iret
gs
xchg
test
in
push
sub
inc
pop
popf
int3
mov
js
push
or
addr16
into
sbb
lds
je
inc
test
scas
test
scas
popf
fdivrs
sarl
push
sub
mov
repz
rcll
mov
iret
std
dec
add
fistpl
lcall
add
movsb
in
mov
aad
sbb
sbb
sub
lahf
fs
inc
inc
cli
es
iret
mov
xchg
lods
mov
mov
jecxz
xchg
stc
pushf
lret
cs
mov
orps
sahf
notb
fldenv
xor
dec
pop
stc
lods
in
sbb
mov
mov
dec
hlt
out
dec
sbb
or
pop
pop
push
inc
inc
sbb
push
arpl
xchg
mov
push
sub
pop
out
xor
mov
jo
arpl
les
and
loop
mov
mov
sbb
adc
push
cmp
adc
lret
lret
adc
lds
inc
push
adc
pop
mov
in
push
inc
aaa
aaa
ds
js
jle
or
xchg
push
adc
and
and
pop
mov
push
lahf
push
add
jb
inc
les
fildl
jne
xchg
xchg
ret
xorb
cmp
cli
xchg
jo
mov
das
les
xchg
inc
sub
bound
and
in
inc
mov
add
icebp
popf
lods
vlddqu
inc
fisubs
mov
gs
jp
movsl
fsubrl
fcmovu
in
clc
js
rorb
mov
xor
lods
and
add
add
lahf
cmpsl
and
sarb
mov
ja
add
mov
add
mov
sbb
insl
inc
mov
mov
js
fistpl
icebp
jo
jmp
pop
mov
inc
cmp
int3
or
push
sbb
mov
mov
jno
or
loopne
and
arpl
xchg
pop
into
dec
jmp
mov
dec
addb
xchg
jle
sbb
mov
cltd
in
adc
cmpl
push
jmp
bound
nop
nop
inc
cmpsl
xor
shll
mov
mov
dec
mov
aad
jle
lock
add
mov
sar
add
test
fcoml
test
ret
cmp
mov
sub
and
out
aaa
insb
ss
ljmp
test
push
lock
adc
mov
popa
clc
sbb
push
inc
adc
jecxz
rep
dec
stc
sbb
pop
jb
bound
pop
std
lods
cmp
pop
dec
and
in
mov
jae
movsl
mov
mov
dec
ds
test
sub
fldl
jae
fstps
mov
sti
pop
jno
and
out
ss
insl
xchg
ret
mov
in
sahf
mov
sbb
jl
and
mov
cli
inc
aas
les
xchg
std
xchg
sbb
xchg
fxch
fs
js
xchg
pushf
or
cmp
jne
fcompl
shrl
and
xchg
mov
push
mov
popf
add
sbb
sti
mov
insl
mov
fwait
push
mov
jp
stos
int
stos
repz
movb
xchg
inc
inc
fldenv
cmpsb
jmp
sub
lahf
pushf
testl
es
orl
add
mov
sarb
jmp
push
ret
pop
push
icebp
dec
mov
ret
scas
sub
sbb
into
xchg
imul
in
adc
dec
cmp
adc
lret
pop
jnp
lahf
movsb
push
inc
or
xchg
push
aam
add
mov
jne
orb
xchg
xchg
xor
aaa
call
cmp
sbb
enter
out
hlt
push
add
inc
xchg
negl
shrb
xchg
loope
jo
enter
xor
jg
fcmovnb
ficomps
pop
mov
sub
loopne
sbbb
dec
jno
dec
outsl
push
mov
jbe
push
shll
out
pushf
lods
nop
xchg
jnp
loop
sti
and
and
adc
jae
into
and
inc
movsb
icebp
in
fadds
aad
xchg
pusha
out
mov
add
leave
test
xor
cmpsb
pop
adc
roll
jmp
mov
and
cmp
mov
adc
lods
and
push
pop
stos
jl
pop
es
call
inc
cmp
ja
sub
pop
inc
push
ret
fcoms
mov
xchg
dec
std
jecxz
mov
popa
mov
fsts
fildll
and
sub
cmp
and
inc
push
je
pop
enter
pusha
add
or
fidivs
addb
scas
adc
dec
daa
mov
push
push
out
fsubl
lods
les
sbb
pop
lret
pop
pusha
sub
and
push
nop
pop
sbb
in
mov
add
daa
negb
aam
jge
ja
mov
push
adcb
sub
jb
mov
sbb
xchg
movsb
push
aaa
insb
nop
jge
cld
adc
fdivr
pop
lcall
repnz
js
inc
xchg
add
jle
xchg
test
sub
scas
mov
in
fdivl
xor
fdivs
mov
pop
cwtl
or
pop
iret
jmp
cmc
inc
adc
mov
frstor
push
push
mov
xor
xlat
ret
inc
pop
adc
icebp
repnz
ds
int3
es
repz
push
test
xchg
push
mov
pusha
jmp
inc
add
xor
mov
cld
notl
adc
xor
inc
std
cmp
scas
icebp
mov
je
xchg
inc
call
rcrb
mov
mov
mov
jo
movsb
dec
mov
fs
imul
bound
fidivs
stc
cld
xchg
mov
sti
mov
cmp
jno
mov
and
ret
xchg
in
cmp
scas
pop
ss
jle
jb
sbb
cltd
test
push
and
and
mov
int
push
iret
les
inc
push
adc
xchg
jp
jae
lea
and
pop
sti
shlb
loope
out
dec
jb
add
aad
in
sbb
adc
lret
add
mov
or
push
push
inc
xorb
sbb
dec
push
xchg
xchg
cmp
repnz
fdivrp
lods
outsb
sub
xchg
lds
and
scas
in
jb
jle
push
nop
add
push
movsl
cmpsl
sub
and
push
prefetch
sbb
rorl
push
push
xor
adc
jae
lods
std
xchg
mov
sti
insl
fisttpll
inc
lds
cmc
in
lea
push
out
stos
jle
out
sbb
mov
aaa
pop
inc
test
mov
push
jns
lret
sti
ljmp
in
test
add
data16
ror
stc
fsub
pusha
test
cmc
orb
add
lods
loop
popf
ljmp
jo
outsl
inc
addr16
inc
shll
adc
jno
cld
pop
mov
enter
loop
push
mov
mov
je
mov
mov
adc
dec
pushf
subl
push
addr16
or
xor
push
and
fmull
push
das
dec
cmp
push
or
push
scas
into
adc
insl
mov
xchg
outsl
xchg
stc
sbb
std
dec
sbb
movsb
popa
imul
pop
push
fldcw
pop
xchg
ds
inc
dec
scas
dec
or
jb
fnsave
add
fidivrs
sbb
enter
test
lahf
movsl
jle
push
lock
adc
mov
fildll
ret
lods
les
jecxz
xchg
jle
adc
pop
xchg
test
adc
ficoml
cmpsb
loop
dec
aad
repnz
das
rcrb
lret
clc
sbb
pop
xchg
fnstcw
ror
jle
cmc
insl
mov
cmp
add
adc
rcr
dec
jo
repz
cmc
sti
enter
sbb
cmp
mov
rcll
mov
push
pop
into
pop
sti
cmp
icebp
jno
mov
aas
and
cmp
lcall
add
xchg
mov
mov
shr
jg
mov
in
pop
and
mov
cmp
xor
ffree
sbbb
xchg
loope
xchg
lock
mov
cld
xchg
int
stos
repnz
and
mov
push
aas
mov
ret
ficoms
leave
mov
adc
fsubrs
pop
stc
es
and
pushf
mov
cmp
cmp
das
sub
aam
inc
in
mov
jae
mov
mov
push
push
mov
aas
push
sub
sbb
bound
xchg
and
lahf
std
fimuls
adc
dec
out
mov
sbb
cmovs
xchg
xor
xchg
gs
mov
out
dec
ret
jae
fxch
jg
std
mov
pop
xchg
push
lcall
pop
sub
xchg
pop
js
add
or
or
inc
sti
flds
pop
dec
aam
mov
int3
mov
fisttps
sbb
inc
sbb
lds
jecxz
icebp
push
pop
outsb
jne
mov
mov
mov
gs
push
xor
mov
jb
popa
enter
and
xchg
push
imul
cmp
xor
pop
pop
ficoms
bound
pushf
int3
mov
or
mov
lock
push
xlat
push
inc
imul
push
insl
xchg
pushf
pop
and
ljmp
adc
fs
js
mov
daa
xchg
or
mov
cmp
jle
adc
push
xchg
mov
stc
popa
and
push
pop
mov
mov
pushf
mov
in
jnp
adc
dec
ljmp
sbb
xchg
sub
pop
sbb
loopne
push
lahf
addr16
jp
nop
ss
leave
arpl
mov
ja
out
and
imul
call
getsec
shll
popf
jnp
mov
add
push
mov
jecxz
in
xor
iret
and
rorl
rcll
cmp
shll
add
dec
js
lahf
incb
sti
dec
pop
hlt
mov
mov
inc
popa
and
dec
scas
cmp
dec
xor
mov
mov
push
mov
mov
arpl
cmp
testl
jge
loope
jb
fldt
lods
jbe
repz
xchg
lea
and
ret
arpl
stos
add
jle
daa
jne
leave
mov
push
sub
test
fisubl
frstor
adc
xlat
sub
and
push
mov
mov
xor
or
enter
or
rcl
mov
or
xor
pop
sbb
or
aaa
sbb
popa
mov
icebp
testl
or
repnz
fidivl
cli
out
bswap
ret
dec
fs
jae
cmp
test
fisttpll
mov
fidivl
fcomps
mulb
sbbl
lcall
mov
les
sub
dec
movsb
movsb
inc
roll
xor
cs
ret
xchg
xor
ds
jecxz
les
outsb
mov
pushl
or
les
in
test
iret
xchg
call
insb
pop
and
lods
pusha
jmp
pop
push
mov
sarb
call
push
or
test
pop
xor
push
cs
and
int
outsl
mov
inc
cmp
inc
cld
push
imul
fwait
mov
stos
inc
shrl
lret
xchg
rcrb
push
out
mov
ja
mov
insb
add
data16
push
dec
mov
jmp
push
push
sahf
inc
mov
flds
pop
es
dec
dec
mov
mov
nop
loopne
pop
call
cmp
cs
mov
lock
sahf
or
cmpsl
mov
negb
or
or
or
out
sub
dec
inc
inc
or
fisubrl
imul
aad
shr
adc
inc
imul
mov
cmpsl
mov
add
into
sti
incl
mov
xor
mov
jecxz
inc
cmp
in
mov
xlat
adc
fcmovnbe
mov
push
add
les
pop
aaa
je
aaa
dec
mov
cmp
pop
testb
shlb
lahf
fs
insl
dec
mov
jbe
outsb
hlt
mov
xchg
pop
inc
inc
or
pop
in
mov
mov
cmp
jmp
mov
shll
call
repnz
mov
sub
mov
mov
sbb
cmp
cmpsl
mov
push
call
push
stos
xor
pop
dec
adc
pop
mov
jns
std
jecxz
nop
pushf
lods
arpl
int
pop
xchg
mov
mov
lret
aad
jecxz
cmp
clc
shll
icebp
xchg
add
fsubrs
je
sbb
pop
fs
mov
xchg
jmp
sti
stos
aas
and
cmp
pop
or
add
inc
fsubs
pop
push
mov
add
sti
push
iret
fnsave
je
loopne
push
inc
inc
jecxz
pop
test
dec
mov
test
sub
add
add
add
add
add
add
and
add
adc
add
add
inc
add
add
xchg
jno
add
add
add
add
xor
add
add
xor
add
add
add
add
add
inc
roll
add
adc
add
add
loope
add
add
mov
add
add
stos
stos
push
mov
ja
mov
jg
jg
int3
int3
int3
int3
int3
add
add
rcl
orb
xlat
les
or
add
add
add
add
add
lock
add
add
add
and
add
add
and
loopne
add
add
add
jnp
sbb
fists
jo
gs
bound
inc
je
add
shlb
cs
mov
test
sub
cld
mov
in
mov
hlt
lcall
mov
cld
inc
js
mov
cmp
xor
push
add
pop
hlt
push
push
cltd
jmp
push
sarb
dec
xor
mov
lea
add
shlb
add
pop
mov
pop
sti
add
nop
mov
mov
clc
std
mov
adc
std
test
and
or
test
push
or
int
mov
push
push
mov
call
add
fdivl
das
ljmp
inc
mov
inc
add
sbb
xor
inc
add
add
push
add
add
mov
add
add
add
push
or
add
xchg
in
inc
inc
vmovdqa
imul
xor
inc
imul
mov
inc
arpl
loopne
outsl
dec
xor
sti
inc
insb
jb
pop
xor
add
gs
imul
inc
xchg
mov
add
add
pusha
jne
add
add
add
add
add
lock
add
add
add
add
add
add
xor
loopne
popa
xlat
popf
mov
add
sahf
arpl
ja
in
aad
mov
xchg
arpl
pusha
push
jecxz
sub
insb
aad
inc
push
scas
mov
inc
fldt
or
or
mov
in
mov
push
test
mov
loope
in
in
mov
out
push
aaa
xchg
inc
insb
xlat
subl
mov
divb
hlt
and
fs
adc
xchg
sbb
in
inc
mov
mov
adc
and
cmpsl
pop
pop
xor
scas
scas
mov
iret
xchg
lret
mov
lret
or
and
adc
shlb
icebp
mov
rorb
cmpl
test
int
sbb
jae
or
dec
adc
xor
aam
outsl
bound
xchg
subb
mov
xor
jecxz
loope
in
je
vpcmpeqw
nop
mov
xlat
cld
pop
cltd
xchg
or
dec
cmp
and
sbb
sbb
mov
lods
out
or
insb
clc
xchg
pop
push
mov
movsb
jo
out
push
insb
push
fcmovnbe
mov
xchg
inc
xchg
lea
aad
adc
mov
mov
ficompl
xor
push
push
and
mov
cld
in
fucomp
jae
fs
cmp
stos
xor
push
cmc
xor
add
lret
out
mov
jnp
int3
inc
ljmp
jbe
data16
stos
xor
sarl
cmc
and
push
popa
mov
mov
and
push
push
adc
mov
mov
pop
pushf
in
lods
or
lret
cmp
sub
add
push
push
rcrl
cwtl
push
fldcw
dec
push
lods
aas
mov
stos
push
out
xor
rcrb
clc
les
ljmp
fisttpl
mov
outsl
dec
int3
push
add
stos
inc
sub
or
outsb
insb
fs
dec
dec
xor
addr16
orl
sbb
and
lds
mov
fwait
push
shll
movsb
shll
test
or
imul
xchg
add
jne
test
mov
daa
ljmp
js
enter
pop
aad
cmpsb
jno
xchg
inc
xor
add
fucomip
nop
movsl
mov
jle
nop
scas
jno
xor
test
shlb
mov
std
and
idivb
mov
and
pop
dec
jns
pop
out
inc
sub
test
dec
mov
add
imul
sub
jge
lret
ror
les
add
xchg
stos
add
mov
mov
imul
fucomip
subb
cmp
add
frstor
cs
jns
sub
test
push
sti
inc
fdivrs
cmp
xor
cmp
push
pop
mov
sbb
scas
jg
sub
push
jle
outsw
push
xchg
xor
adc
push
adc
or
xchg
add
add
jmp
inc
push
int3
test
lods
adc
in
roll
fstpl
push
mov
cli
pop
sahf
or
cmpsl
xchg
and
imul
mov
push
pop
outsb
es
divl
popf
push
mov
or
shlb
dec
shlb
lods
or
es
xchg
add
dec
push
mov
jecxz
xor
das
or
decb
addps
push
cwtl
fisubs
xor
jmp
mov
push
add
xchg
dec
je
cmc
loope
test
push
test
les
lds
mov
test
push
rcl
arpl
aad
idivl
mov
push
in
cmp
fadd
sbb
mov
dec
cld
push
mov
mov
pop
sbb
adc
xor
xor
fildl
or
in
cmp
mov
xor
mov
mov
les
sub
mov
test
jl
flds
dec
xchg
insb
dec
rcll
sbb
inc
xor
lds
ficoml
sbb
sarl
dec
pop
shrl
in
into
push
popf
bound
out
and
pop
add
add
out
mov
imul
cmp
lds
inc
imul
test
daa
pop
loop
jnp
dec
imul
jmp
mov
cmpsb
mov
cli
push
out
mov
jnp
or
sub
adc
xor
jo
jne
sbb
push
cmp
push
test
pop
push
add
lret
mov
leave
loope
mov
shl
sbb
cmp
dec
shlb
dec
int
mov
inc
push
xor
adc
or
nop
xchg
repz
adc
xor
push
faddl
and
and
loopne
jecxz
mull
testl
push
shl
lret
xlat
dec
add
cmp
leave
and
xor
into
outsb
imul
push
loopne
xchg
xchg
outsl
lea
dec
addr16
rcrb
adc
inc
popf
sub
clc
rcr
push
cmc
sbb
decb
fcom
mov
in
add
push
mov
add
ja
xchg
les
arpl
xchg
mov
pop
and
shr
pop
std
sbb
shll
cmc
push
xchg
aaa
dec
fistl
repnz
mov
mov
rcl
jp
mov
inc
sahf
shlb
adc
xor
dec
push
lock
ret
push
popf
push
sub
lods
dec
dec
adc
icebp
xchg
int3
dec
addr16
sub
or
inc
out
inc
cli
out
xchg
ss
sub
dec
xor
popf
lret
mov
xor
out
scas
adc
andb
pop
mov
inc
push
xchg
mov
mov
outsb
int3
xlat
std
mov
lahf
aad
cmp
pop
pop
sti
jg
or
sbb
in
jp
dec
int3
insl
stos
xchg
adc
jmp
lret
and
push
addr16
pop
sahf
outsl
push
stos
push
jmp
push
jae
sub
stc
pushf
inc
jecxz
fpatan
cmpsb
xor
inc
sbb
movsb
lds
jmp
adc
mov
inc
xor
xchg
mov
mov
jecxz
pop
stos
push
cmpsb
and
cmp
adc
inc
xor
mov
add
push
xchg
sti
lea
sbb
jbe
mov
aad
aas
mov
lcall
jnp
repz
pop
xchg
imul
jns
push
addr16
sub
ret
aad
ds
cmpsl
xor
jb
js
pop
sbb
insb
repz
lods
push
adc
ljmp
inc
xor
loopne
es
fstps
test
ret
cli
js
push
lods
outsb
pop
sub
cmp
jecxz
rorl
movsb
push
xchg
jno
xor
and
add
call
pop
push
push
inc
mov
jmp
dec
or
out
sarb
cltd
lret
add
xchg
subl
inc
push
mov
jae
popf
pop
das
pop
add
ds
sbb
mov
sub
sbb
mov
mov
icebp
insb
fs
das
push
xchg
mov
std
mov
iret
ss
aad
add
or
cltd
pop
fcmovb
jbe
ja
idivb
fwait
inc
cwtl
or
jne
pushf
insb
cwtl
adc
mov
ljmp
fsub
or
xor
icebp
iret
clc
jmp
and
dec
ret
sbb
add
add
lods
iret
inc
sub
jae
mov
popa
arpl
mov
lahf
sbb
jp
xor
mov
mov
jo
shlb
scas
mov
mov
hlt
cli
jge
addr16
add
aas
mov
push
lods
sbb
or
and
enter
adc
out
pusha
xchg
xlat
test
jo
inc
lcall
xor
xor
popa
jnp
dec
adc
sti
mov
xchg
mov
cmp
adc
xchg
lret
adc
sub
lea
push
fisttpll
or
ds
dec
sbb
or
stos
daa
push
addr16
and
test
repz
dec
jae
xchg
sbb
gs
lods
and
int3
push
add
andb
addb
push
xchg
pop
push
cmp
ja
add
inc
xor
pop
dec
shl
int3
int
cmp
jne
call
sbb
cmpsb
stos
pop
fstl
jnp
push
push
mov
ja
lret
and
outsl
sbb
push
jbe
shll
mov
sub
fwait
add
adc
les
push
jno
out
mov
iret
adc
outsb
mov
jmp
jl
sar
mov
js
mov
fldcw
fadd
inc
cwtl
push
mov
cmpsl
bnd
cltd
sbb
icebp
cmp
fisubl
aad
mov
xchg
jae
adc
in
loop
fucomp
rcl
and
adc
cs
popa
cmp
xchg
ret
test
rcr
adc
cmp
inc
and
scas
es
cwtl
andps
sbb
les
gs
xor
mov
lcall
jecxz
cmc
inc
cmp
clc
or
pop
sbb
leave
mov
addb
xchg
lock
rorb
shrl
xchg
xchg
mov
aad
dec
mov
movsl
cmp
mov
loope
mov
mov
push
cmp
sbb
mov
pop
scas
loope
jmp
add
sbb
nop
and
mov
xor
or
xor
pop
sub
gs
adc
push
jmp
popa
jno
and
ss
jle
xor
aad
push
push
jbe
add
mov
imul
aaa
push
idiv
jo
adc
ret
dec
les
orb
adc
sub
fisubs
or
fsubs
jg
cmp
push
lock
jnp
add
add
mov
into
jmp
call
mov
shlb
addr16
mov
push
fidivrl
or
fisttps
mov
xchg
inc
loop
inc
adc
clc
addr16
push
xchg
fsubl
mov
pop
lock
adc
ret
pop
mov
mov
loopne
or
push
cmp
or
hlt
push
mov
or
es
xchg
mov
rol
sbb
stos
ror
cmp
divb
jno
jp
sbb
mov
jnp
xor
outsb
dec
jne
std
int3
jp
cmc
mov
in
pop
cmp
into
outsl
bound
xchg
gs
xor
mov
mov
leave
cmp
leave
mov
add
mov
mov
cmp
dec
ret
scas
sub
aas
xlat
xchg
ja
loope
sub
mov
ljmp
mov
push
or
mov
loopne
arpl
insb
jmp
fwait
xlat
shrl
in
shrl
or
test
jmp
outsl
dec
or
xor
mov
adcl
sub
jne
in
push
sub
popa
jmp
xchg
or
fcomps
or
and
out
inc
icebp
call
adc
pop
cmpsl
jo
jmp
sub
pop
sub
sarb
outsb
sbb
sbb
xorb
jmp
mov
fimull
es
push
rcrl
mov
cmpsl
jecxz
dec
mov
lret
cmp
shrb
insb
test
mov
jae
arpl
repz
into
xor
mov
enter
and
iret
jl
movsl
sub
mov
fwait
mov
push
std
xchg
loop
mov
scas
repz
sbb
daa
mov
addr16
adc
fsubrl
add
rcll
xchg
lret
ss
cmpsb
mov
dec
je
sub
mov
sbb
sub
jbe
shlb
pop
stc
pop
add
imul
mov
adc
dec
fwait
scas
js
xor
icebp
push
addr16
push
xor
xchg
pop
fidivl
jo
mov
pop
int
jns
xor
test
push
add
rol
fisubrl
filds
mov
mov
imul
rcr
push
faddl
popa
jo
movsb
mov
mov
aas
lods
and
jne
mull
xchg
repz
shll
rorb
xchg
mov
outsl
adc
loope
loope
insl
xchg
push
lret
jbe
mov
jecxz
mov
mov
inc
idivb
xchg
imul
push
sbb
push
lods
fildll
lds
in
sub
outsl
push
push
mov
mov
adc
jecxz
jp
mov
mov
and
fsubrl
insl
cmpsb
jp
and
xchg
cld
mov
inc
pop
shlb
in
aad
ds
sub
dec
pop
cmpsl
into
rcr
inc
out
hlt
jg
sub
rorb
xchg
movsb
mov
xchg
xor
popa
data16
je
or
jbe
bound
test
or
or
cmp
push
or
inc
fistps
call
pop
lock
cmp
or
mov
mov
in
mov
fstpt
push
testl
leave
and
and
xor
pop
sti
imul
aam
je
rcl
shlb
neg
sarb
lods
nop
sub
mov
mov
ret
sub
int3
cmp
clc
or
lock
and
push
in
cli
mov
or
outsl
mov
fwait
mov
mov
mov
loope
insb
dec
sub
mov
jl
clc
addr16
sub
fsubr
add
add
insb
cmp
adc
stos
sbb
mov
cmp
test
ljmp
adc
jecxz
adc
sbb
sbb
test
fldl2t
add
insl
add
aam
and
lods
lods
lods
cmpxchg
add
fsubrs
cmp
mov
addr16
mov
das
mov
cmpsb
mov
push
ret
jp
fiadds
mov
dec
pop
add
mov
call
sbbl
or
shrl
test
or
pop
mov
movsl
mov
push
push
xchg
mov
sbb
inc
sub
push
lds
mov
ds
pop
dec
dec
nop
dec
xor
mov
jecxz
sbb
cmp
gs
ja
and
aam
ret
mov
insl
sarb
scas
mov
pop
xchg
pop
stos
mov
mov
in
or
fldl
neg
push
mov
scas
and
inc
add
loopne
pop
mov
add
jmp
adc
mov
cmp
fdivrl
jbe
mov
in
scas
dec
push
and
sub
mov
pop
stos
repnz
fisubs
popa
mov
push
cwtl
xor
mov
dec
ret
cs
add
mov
push
pop
or
jecxz
mov
lods
xchg
xor
fistpl
mov
pop
rdmsr
pop
sbb
and
jns
push
imul
sbb
and
clc
shlb
add
sbb
sbb
dec
jecxz
mov
or
adc
ret
mov
repnz
pop
dec
fidivs
sbb
ss
jbe
dec
or
or
sti
adc
cld
popa
pop
push
gs
push
cli
out
cmc
pop
jbe
adc
imul
push
jns
mov
nop
sub
jp
jmp
mov
mov
mov
shrb
mov
lcall
push
push
mov
dec
adc
aam
aad
xor
sub
shlb
and
push
pop
push
test
sti
sbb
xchg
adc
das
and
xchg
outsb
in
sub
mov
cmovns
cmp
add
or
sub
jle
push
cmpsb
xchg
fnstenv
out
xor
ja
or
icebp
dec
adc
out
pushf
mov
out
pop
es
mov
pop
xchg
mov
xchg
inc
or
xor
mov
inc
scas
in
cmp
mov
ret
sbb
push
push
fimuls
test
clc
pop
xlat
fnsave
call
mov
push
lcall
or
mov
mov
insb
std
movsl
sub
lret
int3
movsb
sub
inc
outsl
imulb
push
idivl
mov
faddp
out
mov
jae
adc
adc
add
inc
jbe
cli
pop
das
pop
adc
and
pop
hlt
inc
dec
xchg
lcall
insl
mov
in
xchg
stc
xchg
fcoms
stc
mov
adc
leave
push
push
scas
jle
filds
inc
jne
inc
dec
dec
push
adc
mov
nop
push
rcl
sub
add
ret
test
xchg
and
std
pop
test
movsl
push
or
fcompl
or
loop
loop
test
pushf
add
out
ljmp
sbb
jbe
pop
out
stos
fdivrs
xor
insl
pushf
cwtl
inc
xor
mov
xor
cmpb
or
dec
scas
popl
jbe
js
xchg
out
jno
mov
mov
xor
dec
xor
je
iret
pop
test
mov
jo
movsb
dec
and
pop
subl
pop
test
pop
xor
lods
add
xlat
loop
int
mov
arpl
movsb
lods
shr
bound
es
push
lcall
xor
mov
js
ss
arpl
and
jle
hlt
cmp
and
mov
cmp
ja
mov
cmc
pop
pop
int
movsl
divb
stc
or
add
jb
popa
insl
loop
ja
xchg
cmp
repz
xchg
pop
std
mov
test
cltd
mov
lods
xor
jg
mov
pop
xor
test
lods
inc
push
jne
out
outsb
mov
xor
xlat
adc
inc
and
leave
sbb
stos
repnz
jge
xor
sub
mov
fiadds
or
addl
sub
mov
mov
roll
jg
dec
mov
push
mov
mov
in
xor
cmp
or
and
insl
mov
adc
shrb
invd
stos
mov
cs
mov
mov
subl
xchg
push
in
rorb
ret
pushf
xchg
dec
lcall
push
lea
and
outsl
stos
mov
mov
lcall
mov
outsl
jle
jbe
rcll
jne
js
xchg
jo
push
popa
ds
loop
ss
sbb
adc
subb
in
mov
popf
jo
xchg
in
and
mov
pop
cmp
sahf
xor
or
dec
aam
out
scas
fistl
push
sub
fldenv
cmp
outsl
mov
fcoml
mov
mov
and
mov
iret
movsb
add
sbb
sti
jmp
test
es
jg
mov
jbe
mov
es
rolb
imul
jns
dec
dec
in
fisttpl
or
pop
pop
ret
cmp
out
or
add
adc
decl
push
dec
add
std
adc
mov
leave
xchg
pop
push
insl
lcall
pop
mov
pop
add
scas
pop
mov
dec
outsl
fldenv
dec
xchg
ret
addr16
sub
pop
lahf
movsl
cli
or
push
pop
lock
int
jo
push
adc
sbb
mov
add
add
add
add
xor
loopne
add
add
rol
add
add
adcb
add
add
and
adc
shrb
or
popa
lods
add
add
push
inc
add
add
add
lock
add
add
adcb
ljmp
ja
mov
dec
int3
int3
int3
int3
int3
out
sub
add
add
mov
sbb
add
mov
mov
add
add
add
add
das
jnp
add
add
stos
add
popa
add
fwait
add
add
lahf
lret
add
add
outsl
cmp
add
add
imul
add
cvtdq2ps
add
add
lahf
and
add
sub
je
fs
testl
sbb
out
lldt
mov
xchg
fcoms
add
push
or
incl
clc
and
push
jmp
add
std
sar
xchg
lret
clc
cld
test
popa
insb
cmp
mov
rclb
mov
sarb
inc
add
add
adc
mov
sub
pop
mov
test
std
popf
cld
or
adc
test
incl
push
xchg
out
jne
push
cld
iret
test
enter
lret
clc
test
mov
test
mov
leave
fdivrp
call
adc
ljmp
add
sub
add
add
add
add
pop
dec
add
add
out
mov
mov
add
shll
dec
dec
inc
inc
outsl
dec
cmp
gs
mov
outsl
outsb
stos
cmc
je
dec
jns
dec
je
pop
inc
sub
je
dec
push
pop
push
fs
pop
push
inc
insl
insb
cmpsl
frstor
dec
outsl
fcoml
jnp
je
je
outsl
inc
insb
add
pop
dec
add
add
out
mov
mov
add
add
add
add
das
jnp
add
add
stos
add
add
iret
fwait
add
add
lahf
lret
add
add
push
repnz
rorl
lret
in
loopne
mov
pop
sbb
popa
dec
add
jae
push
xor
or
movb
arpl
lock
inc
and
or
jmp
cs
xor
aam
ret
sub
addr16
aad
imul
push
xor
into
adc
mov
pop
jge
adcb
lret
loope
inc
xchg
mov
adc
xchg
xchg
insb
mov
loopne
inc
jmp
push
movsl
push
rclb
int3
int
inc
xchg
inc
adc
iret
xorb
dec
icebp
mov
dec
cmp
add
int3
jge
jne
adc
push
mov
insl
fwait
and
cmp
aaa
movsb
frstor
lcall
cmp
and
dec
gs
pop
pop
inc
cmpsb
std
xchg
fnstenv
mov
imul
jecxz
imul
or
push
clc
sbb
movsl
sbb
or
inc
call
mov
inc
push
xchg
add
popf
shll
mov
xchg
jecxz
cwtl
xlat
insl
scas
mov
xor
sarl
lods
add
sub
mov
loopne
fld
jmp
fidivs
and
daa
fs
insb
loopne
inc
int
int
fs
and
fidivrs
jg
push
inc
mov
loop
pop
and
mov
mov
cmp
pop
popa
in
push
push
push
pop
sub
pushf
sar
sahf
fwait
sbbb
call
mov
inc
push
cmp
inc
popa
jno
push
int3
ret
pusha
pop
ret
push
dec
xor
stc
lods
sbb
scas
in
dec
add
bound
fnstcw
shll
mov
lods
loopne
inc
sub
loope
xchg
arpl
inc
add
xor
out
in
testl
and
pop
jmp
adc
std
mov
inc
mov
jns
int
dec
pop
imul
pop
mov
mov
jns
daa
jae
sub
fsubs
inc
outsl
sbb
int
jg
std
pop
repnz
pop
push
bound
lds
inc
pop
cmp
push
outsb
or
fildl
sbb
or
and
and
aad
lea
xor
sti
leave
push
cmp
mov
scas
pop
das
pop
hlt
lods
xchg
jnp
dec
notl
cmp
aas
jl
sub
push
mov
pop
pushf
shlb
adcl
leave
sbb
aas
mov
dec
les
cltd
push
insb
xor
ds
push
jp
push
xchg
push
mov
pcmpgtd
push
imul
insl
inc
cld
addr16
mov
int
push
add
xchg
sub
inc
push
xchg
repz
movsl
leave
test
mov
scas
cwtl
std
or
mov
push
test
jp
add
sub
shll
lea
jb
or
pop
inc
sub
add
std
ss
mov
repnz
mov
in
repnz
mov
jbe
jmp
jae
scas
add
lahf
mov
mov
pusha
push
sub
jns
enter
mov
in
sbbl
je
jnp
mov
outsl
imul
or
addb
imul
add
js
fsubp
and
lods
inc
cld
mov
push
cmp
jecxz
jp
dec
out
xor
in
les
outsl
xchg
cmpsb
pop
popf
and
nop
int3
aaa
lods
pop
pop
inc
jnp
and
push
xchg
out
push
xlat
shlb
movsl
loope
pop
cmpb
xchg
mov
scas
mov
pop
nop
fs
ficomps
test
clc
mov
mov
aam
call
div
iret
sbb
fcmovnu
in
sub
jle,pn
jg
sti
inc
mov
lret
inc
gs
stos
daa
popa
cld
cmc
repz
insb
or
in
ret
rclb
cmp
xor
and
add
movsl
pop
out
arpl
or
mov
push
sbb
adc
dec
mov
mov
lret
xlat
mov
movsl
push
fsub
or
in
in
cmp
stc
add
stos
push
push
pop
jmp
add
jo
rcrl
cmpsb
enter
mov
xchg
into
xor
sub
xchg
rolb
call
in
cltd
pop
mov
adc
dec
mov
popa
dec
fwait
lcall
push
dec
je
mov
inc
aas
out
fstpt
xchg
mov
loope
adc
call
dec
out
add
pop
stos
roll
scas
push
sbb
ret
or
inc
adcl
sub
movl
xlat
lahf
mov
ljmp
mov
add
into
push
fadds
mov
ret
idivb
cltd
pop
adcb
lods
inc
push
mov
mov
jl
lds
xchg
mov
je
inc
std
pop
lret
mov
push
mov
sbb
gs
inc
and
xchg
jl
rcll
mov
dec
push
lret
bound
daa
ror
lods
add
enter
cld
jb
dec
enter
mov
cmp
jo
cltd
call
cmp
sub
cmp
enter
scas
jecxz
xchg
fists
gs
pop
cld
mov
ds
mov
mov
cmp
rolb
cmpl
daa
in
lods
repnz
sbbb
and
movsb
push
jne
add
shrb
rol
popf
push
test
out
dec
mov
inc
pop
add
cmp
sbb
rolb
bound
test
dec
int3
sbb
shr
fmull
xchg
jge
and
push
mov
push
adc
cmpsb
fwait
lock
pop
xchg
test
inc
mov
loop
dec
mov
loopne
in
hlt
sbb
imul
or
aaa
leave
cmpsb
call
xchg
ss
gs
mov
jns
xor
mov
lret
call
sub
sarl
push
lahf
lahf
hlt
jl
les
or
pop
into
sbb
cmp
icebp
sub
push
lea
jbe
dec
in
cmpsl
mov
outsl
cmp
mov
and
pop
lcall
fcomp
push
and
jge
sub
mov
ljmp
adc
adc
test
ss
pop
jecxz
cmp
call
cld
xchg
push
aam
mov
fadd
add
call
aam
xor
xchg
movsl
rorl
in
mov
orb
inc
inc
push
and
or
adc
push
and
aas
std
les
sub
xchg
jnp
push
into
out
push
jbe
mov
loopne
out
push
add
adc
dec
imul
sbb
ljmp
pop
ret
iret
in
gs
pop
loopne
and
daa
adc
loopne
xor
xchg
jle
mov
mov
or
or
jo
cltd
adcb
dec
js
and
std
xchg
in
mov
mov
push
pop
sub
or
lods
dec
inc
lds
push
push
mov
pusha
or
adc
repz
mov
arpl
imulb
mulb
xor
in
push
inc
add
push
cwtl
sti
inc
xchg
xor
daa
and
test
or
sbb
xor
movsb
mov
out
push
dec
daa
mov
adc
xor
lods
lods
movsb
or
test
push
mov
cmp
outsl
xchg
dec
pop
mov
sub
data16
sbb
into
sbb
inc
das
mov
jge
mov
fs
out
lret
mov
dec
lret
movsb
adc
out
mov
push
and
jg
mov
nop
repz
out
add
xchg
lods
mov
arpl
mov
leave
aam
sub
stos
pop
jg
mov
data16
in
loope
es
frstor
lahf
and
or
fcmovnbe
fcompl
and
jns
stos
jg
pop
in
pop
fnstenv
xchg
sbb
les
imul
xor
and
test
dec
lcall
inc
push
mov
rcrb
ss
mov
loope
ja
add
pop
push
add
add
pop
sub
in
ror
dec
dec
gs
push
in
dec
cli
stos
push
adc
xchg
incl
orb
push
ljmp
mov
push
outsl
and
xchg
adc
aaa
out
sub
scas
sub
push
jbe
push
inc
inc
mov
out
pop
xchg
orl
dec
sbb
in
xchg
lea
data16
add
and
dec
xchg
icebp
iret
divl
cld
mov
insl
adc
pop
push
ficompl
xchg
xchg
fcompl
or
push
lcall
js
pop
mov
rcll
outsb
sbb
out
or
aaa
rcrb
rcll
stos
xor
xchg
jae
sub
aaa
mov
loop
icebp
push
dec
cmp
shl
xor
std
div
pop
in
sti
and
jno
mov
mov
cmp
xor
dec
mov
add
mov
stc
adc
xchg
pop
jnp
jnp
push
je
cmpsb
in
loop
inc
mov
pop
mov
sbb
js
mov
ja
movsb
jno
aam
jle
sahf
cmp
in
cwtl
inc
out
dec
add
cmp
inc
stos
imul
cli
js
mov
push
xor
dec
movsl
inc
repz
sub
jge
xchg
pop
dec
imul
push
scas
mov
sbb
xor
and
pop
dec
insb
test
sbb
popa
ljmp
cli
fists
xor
xorl
add
xchg
and
jns
fidivrl
loope
xor
cs
cmp
fisubrl
dec
mov
jb
adc
lods
movsb
mov
fucomp
stos
addr16
icebp
mov
cltd
push
shr
mov
pop
inc
push
cld
daa
cmp
jle
dec
fisttpll
xchg
push
dec
fcompl
mov
xor
ss
lret
sbb
mov
lret
std
test
fwait
xchg
xchg
sub
inc
in
mov
pop
filds
repz
inc
out
sub
movsb
loop
and
jnp
int3
stos
mov
addl
testl
das
sbb
and
into
jbe
or
rorl
repnz
sti
mov
addr16
push
jle
and
ja
movsb
sarl
cs
mov
cmpb
xor
pop
je
push
cmp
bound
jle
pop
push
dec
push
test
add
addr16
dec
and
xor
adc
mov
jno
pop
add
xchg
push
jne
rol
insl
popa
xchg
fistps
mov
dec
fwait
lcall
je
addr16
and
mov
pop
scas
xchg
inc
cmp
hlt
adc
popa
outsl
mov
daa
xor
mov
add
inc
sub
sub
cmc
inc
aad
cmpsl
bound
mov
arpl
dec
aam
dec
pop
stos
aas
mov
test
cltd
das
push
lret
xchg
outsb
mov
pop
jo
mov
fwait
mov
arpl
cmp
daa
push
push
adc
imul
lods
outsl
lcall
and
or
fstpt
aam
pop
in
fsubs
sbb
repz
mov
test
add
lahf
fbstp
dec
pop
push
ljmp
xchg
sbb
lahf
lret
inc
mov
mov
cs
adc
cmp
pop
movsb
sbb
jns
mov
pushf
test
mov
jnp
movl
mov
push
and
cmp
in
js
inc
and
lcall
xchg
rep
js
adc
mov
cmp
adc
cmc
xor
adc
jb
pop
fcompl
ret
pop
mov
jp
fisttpl
lret
mov
add
js
and
sbb
in
pop
leave
scas
mov
ss
test
push
adc
pop
jg
lods
mov
inc
pop
jns,pt
mov
int3
gs
pop
outsl
pusha
and
subb
std
dec
fwait
idiv
pop
fldl
cmp
insb
mov
xor
enter
mov
decl
cmp
add
pop
loopne
bound
rclb
dec
dec
testb
cmpsl
scas
in
pop
inc
daa
movsl
fstp
xchg
insl
cmp
mov
and
sbb
xchg
clc
inc
movsb
cs
cmp
cltd
mov
aas
hlt
mov
pop
push
pop
loop
xchg
cmp
jne
in
sti
dec
pop
xor
sbb
repz
add
push
xlat
mov
xlat
mov
push
sbb
mov
or
jns
insl
sub
lock
lret
push
sub
xchg
and
mov
adc
pop
xchg
popf
xorl
pop
add
enter
sar
dec
xlat
scas
dec
mov
push
iret
mov
cmp
mov
sub
or
dec
push
jno
xlat
push
mov
insb
sti
inc
mov
jp
dec
adcb
sub
out
mov
sbb
inc
scas
aam
and
add
add
lock
rcr
fdivrs
cmp
loop
lds
jge
fwait
jge
mov
jmp
subb
ss
data16
outsb
push
test
push
lock
js
cmp
les
dec
loope
aaa
push
scas
lret
in
add
ja
int3
in
bound
fnsave
std
cld
movsb
or
push
pop
add
inc
dec
inc
jp
and
out
push
and
mov
les
popf
rcrl
pop
sub
ret
outsl
iret
push
into
jl
lret
and
popf
mov
push
pop
cmp
outsb
cmpsl
mov
in
cltd
adc
movsl
dec
es
test
sbbb
lods
orl
sub
lods
repnz
dec
or
and
fwait
sub
pop
dec
jnp
cld
fmull
lock
jecxz
out
nop
mov
cmp
dec
or
cld
data16
fisttps
out
es
dec
adc
mov
fsubr
decb
idivb
in
push
mov
fwait
dec
nop
aam
fidivrl
and
pop
inc
jb
je
loopne
popf
into
das
data16
mov
sbb
lcall
sub
in
js
mov
push
jle
jae
sbb
sub
mov
dec
fcompl
shld
jnp
xchg
lcall
std
scas
mov
xor
out
add
and
clc
sub
fbld
adc
push
push
aaa
push
scas
sbb
ss
add
gs
xchg
addr16
arpl
xor
adc
ret
sbb
out
sbb
sub
dec
out
push
cmc
jae
cmp
add
ret
inc
or
and
cmp
adc
lock
mov
jmp
add
out
jns
pop
jnp
xor
xor
adc
jmp
xchg
int3
mov
mov
mov
inc
rcrb
push
pop
mov
loope
sarl
xor
mov
int
jmp
inc
loope
sbb
mov
xor
jb
and
jnp
adc
lahf
adc
dec
lds
mov
ljmp
lcall
mov
loope
lret
js
xor
sarb
or
inc
xchg
mov
or
push
lock
xchg
jnp
adc
pop
int
pusha
jge
aas
and
dec
mov
push
lea
mov
int
imull
es
cmp
out
cmp
daa
std
daa
push
in
aaa
or
sahf
and
sub
cmpsl
in
mov
mov
out
popf
test
xchg
inc
xchg
lds
leave
cli
lock
jbe
cmp
jne
scas
dec
jl
cli
ja
imul
imul
or
incb
xor
fstpl
aam
cli
pop
or
ret
jo
jmp
xor
adc
cli
cmpsl
mov
add
pop
pop
lods
jo
stos
add
inc
adc
data16
xchg
push
fndisi(8087
mov
rol
mov
nop
dec
mov
jb
cmp
loopne
mov
add
fcmovb
enter
test
fmull
mov
adc
mov
nop
push
or
into
adc
rorl
mov
test
mov
mov
mov
xor
ja
inc
test
test
sbb
push
fstps
mov
cmp
sbb
jbe
les
in
pop
lods
lret
mov
fidivl
and
call
movsl
fs
mov
pusha
jns
ja
std
xor
lret
mov
jne
fsubrl
mov
jge
pop
in
or
fnstenv
dec
cli
push
cmp
jno
sahf
les
jle
lahf
pop
adc
aaa
cmc
ret
mov
xor
cltd
push
negb
neg
mov
sbb
lret
cmp
push
idivl
sarl
adc
push
push
test
cmp
aad
xchg
mov
es
jno
push
loop
pusha
int3
jle
sbb
or
jns
xchg
mov
sbb
sub
sbbb
packsswb
fsub
xor
rcrl
test
int
or
std
jno
mov
arpl
xor
fsubrl
lea
dec
mov
lods
fsub
test
call
dec
lret
fistpl
lret
sub
aad
jecxz
jb
mov
inc
js
mov
ja
cmp
and
mov
pop
dec
push
or
ss
push
pop
push
push
ss
sahf
dec
clc
hlt
inc
les
lcall
push
cmpb
jo
scas
or
sub
cltd
adc
mov
aad
insb
data16
ljmp
inc
adc
call
fcoms
ljmp
or
add
adc
dec
pop
fldz
dec
out
aaa
out
das
mov
test
push
lock
and
movsl
lods
jmp
xor
jecxz
jne
dec
ret
inc
into
mov
xchg
mov
daa
jg
ret
xchg
fcmovu
sub
add
jle
push
fwait
inc
mov
mov
mov
int3
pop
jbe
mov
and
pop
aam
inc
stos
pop
inc
in
mov
jge
mov
jecxz
sub
rcrb
lock
jbe
push
out
xor
adc
cmpsl
movsb
mov
daa
cmpsl
or
cli
fnstcw
xchg
push
mov
pop
jg
pushf
mov
inc
fiaddl
add
sub
add
scas
stc
fldt
cmp
adc
arpl
add
mov
ret
rolb
je
add
add
test
aas
xchg
shrl
pop
jne
xchg
mov
in
push
or
int
sbb
lcall
mov
add
cmp
push
xchg
nop
andl
mov
push
xchg
add
and
test
cmp
call
jp
clc
and
adc
dec
data16
ret
and
sub
es
cmpsl
adc
cli
adc
xor
sub
mov
mov
call
ljmp
xchg
jnp
inc
lret
sbbl
add
mov
rclb
add
mov
and
add
xor
adc
movswl
adc
inc
xor
sub
fcompl
jbe
inc
xchg
pop
sub
pop
insb
stos
dec
in
dec
mov
popa
cmp
xchg
push
popl
pop
sbb
push
sub
pop
jne
movsl
adc
sbb
adc
loop
fldt
xor
jbe
add
add
das
jnp
add
add
stos
add
add
iret
fwait
add
add
lahf
lret
add
add
outsl
cmp
add
add
imul
add
cvtdq2ps
add
add
mov
add
add
add
add
add
dec
sbb
add
add
dec
add
add
out
mov
mov
add
add
add
add
sti
add
add
ja
mov
pusha
xor
dec
int3
int3
int3
int3
int3
pop
loopne
add
add
sarb
mov
add
add
add
and
add
add
cmc
add
add
rcl
add
add
or
add
push
and
add
adc
sbb
sbb
fiaddl
sbb
sbb
pop
nop
bound
or
insb
xor
popa
das
push
dec
addr16
imul
push
cld
add
sti
jecxz
add
je
into
adc
mov
dec
loop
lea
movl
leave
or
adc
call
push
leave
in
add
std
mov
push
dec
test
adcb
sbb
pusha
push
decl
call
mov
loopne
mov
call
ljmp
inc
test
and
inc
or
adc
je
push
pop
nop
cmpsb
lea
sarb
push
and
lahf
lea
add
add
lea
ljmp
adc
enter
aad
adc
push
mov
adc
add
adc
add
pop
shlb
orb
pop
add
add
and
add
add
jns
add
inc
shlb
addb
je
jb
jb
outsb
and
inc
fs
dec
add
xchg
cmpsl
add
je
fmull
inc
hlt
pusha
dec
add
adc
gs
jae
jb
add
movsb
rorb
add
add
add
add
add
and
add
add
adc
add
add
rcl
add
add
add
add
add
push
and
add
add
adc
add
ret
cwtl
fwait
in
push
jae
cmp
adc
mov
dec
ret
xchg
fisubrs
add
sbb
jo
add
pop
mov
xchg
aad
pop
stos
loopne
sbb
lds
fsts
shlb
mov
mov
lds
mov
ret
push
jne
cmpsb
test
out
loope
add
xor
mov
das
mov
dec
mov
mov
inc
lahf
sub
divl
subb
adc
pop
mov
xchg
mov
jbe
shrb
clc
test
fbstp
adc
das
sub
jg
mov
mov
in
and
je
bound
pop
add
jecxz
idiv
sar
test
lcall
rcl
lahf
gs
lcall
sub
inc
cs
sbb
jecxz
pop
and
sar
cltd
cmp
mov
out
test
nop
adc
mov
mov
inc
ja
pop
ds
loope
cmp
sub
dec
xchg
jge
adc
sub
pop
lods
ss
inc
in
cmpsl
movsl
inc
test
hlt
sbb
sub
outsl
mov
dec
insl
popf
movsl
jge
mov
pop
xchg
push
sbb
cmp
xor
out
int
xchg
or
lcall
jecxz
pop
rcll
sbb
jns
xor
and
addr16
inc
aaa
mov
xor
in
out
lea
nop
adc
jne
into
mov
or
add
std
mov
mov
push
pusha
dec
sub
mov
push
aaa
and
mov
js
scas
pop
pop
sub
jne
cmp
xlat
enter
outsl
data16
adc
and
orl
in
and
scas
lcall
xor
jg
mov
add
sbb
enter
ffreep
sbb
jle
loopne
jbe
dec
leave
add
or
leave
push
hlt
out
adc
mov
jecxz
push
adc
jnp
and
lret
add
inc
mov
mov
fidivl
dec
cld
mov
xchg
xchg
rorb
lds
cltd
faddl
ret
push
lea
or
loope
pusha
cmp
dec
inc
shll
or
std
test
inc
mov
sub
and
fnstcw
jge
xor
fwait
leave
sub
lahf
adcb
adcb
aas
mov
popa
stc
xor
push
push
push
sbb
pop
or
int
fs
cmpsb
xor
jl
lds
repnz
ret
jp
jb
hlt
leave
stos
test
dec
mov
nop
mov
cmpsl
das
cmp
dec
pop
sbb
orb
jo
mov
cwtl
std
mov
inc
xor
pop
loopne
arpl
adc
adcb
mov
iret
mov
and
jns
push
cld
test
lods
imul
or
inc
mov
rcrl
dec
test
or
jo
in
mov
pop
jg
jnp,pt
icebp
inc
mov
push
add
testb
aas
std
je
cld
aaa
mov
ja
sbb
mov
sbb
pop
adc
xchg
mov
sbb
inc
mov
lea
sbb
repz
fcom
test
mov
hlt
inc
or
out
jmp
jae
shlb
div
nop
sub
pop
jnp
sub
xchg
and
ljmp
lahf
aaa
inc
jmp
int
insb
pop
ja
in
cmpsb
adc
adc
push
push
in
test
addr16
push
pushf
mov
mov
repz
sbb
aas
js
adc
mov
inc
mov
scas
adc
pop
lcall
inc
ja
outsb
insb
cmp
dec
xor
cld
sbb
lods
pop
and
lods
popf
cmp
cmp
sub
mov
push
fmuls
lret
pop
pusha
inc
mov
mov
cld
mov
into
dec
push
or
push
push
pop
fs
ss
cli
int
mov
in
xchg
pop
and
out
jae
and
mov
rorb
stc
inc
and
sub
testl
nop
mov
lods
pop
jp
jbe
push
push
leave
mov
sub
notb
push
add
rorb
nop
jp
sbb
ret
popa
add
js
ret
rcl
pop
mov
enter
call
or
sti
pop
daa
dec
jmp
call
mov
in
jne
loope
push
es
fsts
and
es
fistl
push
mov
jns
jp
add
sub
jne
mov
xchg
pop
pop
cmp
adc
test
shlb
ret
jno
xchg
sbb
pavgw
cmp
adcb
out
out
aad
push
mov
icebp
clc
jb
jge
and
xchg
stos
aad
psrlw
jg
jp
pop
lods
div
fiadds
mov
loop
mov
leave
cmp
push
out
sub
jbe
push
pushl
arpl
sti
and
adc
dec
cmovo
test
decl
dec
inc
pop
add
repnz
shl
or
fsubrp
in
es
pop
stos
movsb
inc
ja
cmpsl
test
lods
lock
std
leave
das
jno
into
mov
push
lods
nop
jnp
lds
xor
or
jb
mov
icebp
scas
pop
and
and
gs
insl
mov
pop
inc
test
outsb
or
in
xchg
lea
or
cwtl
adc
xchg
and
fs
fisttpll
fs
mov
pop
push
hlt
cmp
sub
mov
fs
mov
scas
push
add
les
fcmovnb
repz
icebp
pop
and
jno
cmpsl
pop
notl
lret
das
cmp
bound
hlt
jmp
adc
pop
add
aam
scas
mov
pop
pop
jae
dec
dec
sub
dec
xchg
or
stos
xchg
mov
sub
pop
xchg
cmp
add
aad
lods
test
dec
sbb
inc
pop
xchg
cvtps2pd
repz
fdivs
lcall
xchg
mov
into
pop
test
jbe
mov
dec
adcb
xor
stc
add
lock
in
clc
push
les
popf
int
out
in
or
push
in
dec
mov
push
sub
pop
pop
inc
pusha
out
lods
movsl
jmp
shlb
add
or
inc
insb
lahf
ficomps
fwait
xchg
pop
pop
mov
mov
bound
clc
fcompl
jmp
xlat
sub
cmp
and
mov
mov
and
mov
enter
mov
inc
imul
mov
adc
fcmovnu
xchg
mov
or
repz
push
aam
dec
inc
in
xor
sub
into
mov
fdivrl
jle,pn
out
mov
scas
sub
jge
push
in
enter
outsb
pop
stc
ret
lret
jl
add
add
push
push
jecxz
jmp
out
pop
subl
std
imul
mov
outsb
add
add
adc
jns
dec
imull
mov
fsubl
jbe
lds
jmp
cs
icebp
xor
bound
out
jnp
sub
pop
pop
fbstp
or
fucomi
jo
pop
fwait
rcl
xor
call
inc
popf
cmp
jecxz
lods
sbb
xchg
cwtl
ret
std
dec
bound
gs
and
movsl
mov
mov
fdivrl
or
sahf
inc
mov
std
or
and
or
inc
and
dec
decb
fdivl
jge
scas
pushf
out
push
in
push
and
add
loopne
dec
addl
sbb
cmc
dec
mov
ja
pop
sub
mov
adc
push
fsubrl
pop
sbb
stc
or
xchg
push
sub
dec
mov
jnp
and
imul
fcompl
ja
adc
push
jmp
or
mov
sub
mov
adc
int3
sbb
xor
repz
mov
dec
cmp
pop
fcmovnu
sbb
xchg
nop
sahf
cmpsl
push
movlps
in
icebp
outsb
test
xchg
jae
ss
repz
pop
or
sahf
les
or
scas
pushf
cs
xor
daa
lea
cs
hlt
daa
push
data16
fwait
jmp
pusha
sbb
push
hlt
gs
mov
and
scas
rcrl
ret
pusha
pop
sub
mov
push
loopne
and
scas
or
push
sub
mov
inc
or
arpl
dec
mov
xor
mov
push
flds
stos
inc
sub
cmp
jb
ret
fld
or
outsl
in
mov
or
mov
pop
jb
cmp
and
icebp
rcrb
out
push
out
sub
inc
repz
dec
inc
mov
pop
jo
shll
xor
xchg
cmpsb
lds
xor
ja
pop
shr
test
push
jge
push
jns
pop
lret
testl
pushf
pop
repz
std
mov
gs
out
icebp
mov
daa
pop
adc
jns
and
xor
into
mov
ret
or
aam
mov
and
les
aaa
dec
test
cmc
mov
mov
mov
xor
sbb
lods
stc
into
test
dec
mov
ret
loope
and
sbb
pushf
jo
not
lods
jb
daa
push
mov
inc
push
test
pusha
subl
and
insb
xchg
std
aaa
sbb
mov
push
sub
mov
popa
and
sti
popa
xor
adc
sub
cmp
sbb
add
pop
outsb
jbe
and
mov
sbb
movsl
sbb
dec
cmp
fdivp
push
fistps
shrl
add
jnp
lea
mov
stos
lret
add
cmp
mov
out
jae
inc
and
pop
sub
adc
std
cmp
xor
mov
jnp
mov
jnp
cs
gs
fcomps
xor
pop
mov
or
mov
sahf
push
sbb
aam
shlb
and
lds
push
or
xchg
lret
leave
scas
aas
mov
cs
adc
mov
push
stos
outsb
dec
lods
dec
mov
ret
lcall
out
add
lret
adc
fs
insb
add
adc
push
stc
and
aas
inc
add
out
mov
jmp
sub
sbb
rcr
cli
pop
inc
mov
cs
hlt
ss
lahf
loopne
push
lcall
dec
imul
jo
pop
lds
push
jns
addr16
cmp
mov
mov
and
addr16
dec
jne
lock
xor
mov
out
jne
in
xchg
dec
push
sub
push
sbb
adc
in
cmp
inc
fisubl
dec
out
call
jl
xchg
add
sub
jge
lahf
mov
sar
mov
mov
cmp
cmp
insl
andb
lret
mov
fwait
cli
cmp
out
ja
scas
pop
and
and
fcoms
sbb
jo
xchg
aaa
add
test
shl
jne
dec
das
loop
outsl
lcall
subl
rclb
mov
sub
inc
fwait
daa
mov
dec
jbe
pop
inc
lock
push
out
xlat
popl
outsl
mov
jmp
inc
jp
insb
mov
mov
jge
cmp
push
cmp
pop
adc
add
and
jge
mov
imul
sti
mov
cmp
cmp
lods
psllq
push
add
mov
cmp
addb
inc
lcall
aas
mov
cltd
dec
dec
sub
mov
mov
cli
mov
fistpl
xchg
fnsave
out
pop
lret
or
mov
jp
mov
adc
pop
jae
notb
loop
rcrl
fistpl
cmp
and
fnsave
mov
mov
xchg
insb
loopne
xor
mov
mov
or
jmp
or
mov
add
jns
daa
popa
xor
out
xor
mov
xlat
lods
fpatan
jne
pop
mov
xchg
ror
sbb
loop
std
xor
lds
jl
and
mov
fbld
jno
xor
adc
int3
int
hlt
enter
ret
cmp
sub
lds
sbb
sub
adc
mov
adcb
iret
std
cmpb
cmpl
jle
sbb
clc
or
arpl
notb
push
loop
stos
leave
push
out
negb
insb
in
sbb
lods
push
das
jge
jno
cltd
sarb
adc
jb
and
xchg
sahf
loope
mov
insb
jg
movl
sbb
pusha
cmp
cltd
sub
enter
push
dec
aas
sub
xchg
mov
shrb
mov
inc
sbb
in
aaa
mov
cmpsl
mov
mov
xor
xor
cwtl
or
std
icebp
fst
scas
mov
mov
sbb
bound
pop
repnz
xor
add
push
push
test
adc
dec
push
inc
mov
sub
sbb
jbe
pop
aad
xchg
add
mov
add
xchg
pop
pop
lret
ja
fists
movl
shll
xor
aad
outsl
xor
dec
fs
mov
sahf
je
test
sbb
push
ljmp
shll
jbe
stos
pop
mov
sti
push
add
inc
pop
sbbb
lods
inc
dec
repnz
aaa
cs
sbb
cli
mov
out
std
js
push
call
xchg
mov
sub
sub
push
outsb
lcall
fldcw
dec
movsl
and
sub
mov
pusha
and
out
ja
and
fcomip
aas
pushf
pop
jo
push
xor
jnp
mov
es
add
pop
loop
inc
jno
lret
ret
rcrl
loop
fdivs
aad
loopne
dec
mov
sub
and
addr16
mov
mov
call
mov
dec
mov
test
jnp
aaa
dec
sbb
in
pop
jge
xchg
in
push
jnp
loope
xchg
mov
shll
addr16
dec
jb
lcall
es
dec
movsb
fsts
xchg
fidivrl
negl
or
leave
movsb
insb
fisttps
adc
fs
test
sysexit
in
repnz
mov
sbb
push
aas
push
lcall
outsl
cmpsb
jbe
push
scas
cmp
leave
push
cmpsb
arpl
xchg
les
int3
push
dec
shrb
sbb
cwtl
hlt
cmp
and
btr
nop
lods
cmp
mov
mov
cmp
or
or
pop
lret
jnp
loop
sbb
lock
pop
nop
mov
dec
mov
mov
xor
push
icebp
lret
mov
mov
pop
ret
cmp
jae
in
cld
mov
cmpsl
lret
or
loop
xlat
mov
cmp
lock
push
cmp
lret
pop
xchg
icebp
dec
dec
jo
mov
mov
cltd
jecxz
loop
mov
inc
fsubrl
adc
fs
adc
out
arpl
lret
jge
lds
neg
xor
mov
fisubl
mov
fucomp
ret
push
std
pop
popa
jecxz
aas
mov
pop
notb
push
sahf
bound
cmp
mov
test
jae
cmp
insb
out
ds
inc
inc
repz
mov
imul
xchg
push
cmp
push
in
sub
push
mov
jl
or
addr16
daa
insb
mov
xchg
push
out
cltd
rclb
mov
pop
adc
add
ja
add
xchg
pop
sbb
xchg
out
push
adc
mov
imul
addr16
fistps
rol
pop
fucomip
add
add
lret
out
jns
cld
sbb
mov
insl
adc
sbb
mov
dec
cli
xor
lds
cmp
sub
mov
adc
lods
sti
and
test
clc
add
mov
mov
orb
add
jg
fstpt
jecxz
clc
es
icebp
sti
and
daa
leave
shrl
jl
mov
mov
sti
nop
pop
pop
orl
dec
imul
inc
and
jge
and
adc
cltd
jno
mov
jmp
pop
adc
loope
movsb
popf
repnz
xor
xchg
cs
shll
outsl
jmp
sub
notb
jb
push
idiv
sarl
loopne
xlat
or
mov
mov
mov
movsl
adc
xor
mov
enter
mov
and
sti
cmp
jns
stc
mov
lret
and
push
mov
scas
lret
lcall
test
add
stos
xchg
cmpsb
pushf
mov
mov
test
xlat
test
mov
test
js
addr16
lock
ret
xchg
pop
push
out
cltd
notl
div
stos
pushf
loope
xchg
lock
sbb
dec
add
ljmp
jbe
adc
adc
movsl
sbb
inc
clc
sub
xor
decb
mov
out
lcallw
call
xchg
jns
arpl
cwtl
xlat
stos
mov
pop
iret
sti
sub
jne
mov
and
mov
cmp
xor
jmp
xchg
imul
pusha
xor
dec
jnp
or
inc
fnstcw
jge
icebp
out
pusha
popa
sbb
push
div
out
nop
xchg
sub
pusha
in
dec
int
pop
jo
inc
pop
fs
cs
jecxz
ret
clc
test
pop
out
xor
ret
pop
sub
jg
imul
sub
fcompl
pushf
inc
ds
xchg
mov
outsl
mov
ret
and
sub
imul
mov
mov
sti
xchg
mov
out
ret
lret
movsb
out
cli
dec
arpl
sarb
divps
loopne
xor
dec
test
sub
std
ljmp
iret
add
aas
shrb
in
sub
inc
loope
pop
add
and
adc
and
ds
popf
jecxz
jp
xchg
stos
mov
mov
in
sub
xchg
mov
sahf
xor
xchg
xor
add
push
push
push
xor
das
push
scas
mov
and
rclb
inc
stc
or
cmc
xor
dec
inc
push
clc
call
inc
fisttpll
sahf
push
jmp
aam
jmp
pop
inc
stc
lret
sbb
pop
mov
movsb
xlat
pop
into
dec
in
cs
jp
cmp
adc
mov
pop
mov
aas
adcl
push
test
sbb
adc
divb
xlat
push
mov
int3
in
dec
pop
adc
mov
scas
test
xchg
push
sub
push
lcall
push
jb
xchg
pop
cmp
inc
ja
shlb
jo
lods
lret
pop
adc
daa
mov
lds
jbe
lock
js
jmp
movsl
mov
adc
popa
xchg
cmp
sbb
xchg
ffree
push
repnz
into
push
push
jge
repnz
inc
inc
push
leave
xlat
stos
add
stos
xor
push
mov
shll
mov
insl
pushf
loop
or
stos
xchg
jle
fdiv
cmp
addl
movsl
mov
lods
cmp
imul
cmpsl
cmc
clc
add
loope
fisubs
pop
cmc
test
in
aaa
add
add
add
mov
add
add
pusha
jb
add
add
add
add
add
add
add
lock
add
mov
add
add
add
add
xor
add
add
loopne
add
add
shlb
adcb
inc
add
add
and
add
add
adc
add
ss
add
add
jmp
stos
stos
add
daa
push
mov
dec
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
movl
movl
movl
mov
movl
mov
mov
call
mov
mov
mov
push
push
movl
movl
mov
movl
call
push
push
mov
call
push
mov
call
pop
pop
ret
push
mov
sub
push
pushl
call
mov
pushl
xor
movl
pushl
mov
mov
mov
movl
movl
movl
movl
movl
movl
movl
call
add
test
jne
push
pop
jmp
push
push
push
pushl
call
mov
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
push
lea
push
push
call
add
push
call
mov
leave
ret
jae
jb
jo
add
adc
add
xor
call
push
push
push
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
rolb
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
rolb
add
add
lods
rolb
add
add
xchg
rolb
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
rolb
add
rolb
add
roll
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
rcl
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
rolb
add
add
add
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
adc
add
rolb
add
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
roll
add
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
das
aam
add
add
adc
add
or
add
add
add
cld
roll
add
roll
add
roll
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
aam
add
add
pop
aam
add
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
call
aad
add
aad
add
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
test
add
mov
add
xchg
aad
add
add
lods
aad
add
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
loopne
add
call
aad
add
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
