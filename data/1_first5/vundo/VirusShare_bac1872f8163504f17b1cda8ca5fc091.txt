scas
std
pushl
push
call
test
mov
jne
and
add
hlt
mov
pop
leave
ret
push
movl
adc
std
decl
sub
add
imul
mov
and
ret
push
mov
cmpb
je
flds
div
decl
push
fstps
call
mov
or
sbbb
lea
mov
lods
mov
pop
je
or
pop
lea
push
adc
rcl
loopne
out
jnp
movl
das
cmp
or
cmp
decb
jle
sbb
adc
or
orb
xor
jmp
sti
jmp
int
mov
sbb
adc
pushl
decl
push
or
jge
xor
mov
jmp
cmp
and
movl
adc
mov
mov
sub
psadbw
leave
and
mov
enter
enter
and
les
ret
lock
add
push
push
push
fcoml
push
adc
add
fistpll
in
leave
cmp
jge
push
add
push
inc
cwtl
push
add
push
mov
mov
mov
cmp
jae
mov
je
mov
rorb
je
cmp
adc
int
or
test
and
add
incl
inc
jmp
outsb
dec
lock
xlat
ret
cmp
cwtl
push
cmpsb
pop
sti
outsl
in
push
add
sub
mov
add
mov
inc
push
xor
xchg
dec
fmul
dec
pushf
ror
lcall
adc
pop
adc
cmpsl
loope
fbstp
mov
mov
push
push
sbbb
jmp
mov
orl
fcompl
inc
fimull
adc
cmp
test
je
push
xor
jbe
subw
jne
or
or
add
lea
inc
js
pop
icebp
pop
cltd
pop
pop
je
jl
and
push
lds
jmp
mov
mov
mov
inc
out
mov
jmp
mov
push
negl
ret
adc
pop
mov
push
lcall
enter
je
xor
mov
push
mov
push
or
or
or
cmp
gs
add
int3
andl
fadd
pop
add
pop
xor
push
outsb
outsl
movl
inc
sub
pop
mov
xor
rorl
push
mov
xorb
lock
mov
inc
xor
jmp
add
sub
or
dec
and
fdivp
inc
xchg
pushf
jmp
or
ss
jmp
pushf
pusha
mov
adc
lock
pop
scas
lcall
testb
pop
xchg
adc
aaa
mov
mov
roll
sub
sti
rep
mov
and
rep
and
flds
sti
jo
lea
cld
data16
stos
push
cmp
sbb
mov
es
addl
push
push
andl
outsb
dec
dec
shlb
fcompl
or
mov
lcall
push
ss
dec
and
mov
xchg
adc
sub
dec
es
jnp
shl
jo
xor
sbb
shlb
out
pushf
xor
pusha
and
out
ss
xchg
jl
inc
add
jbe
sub
inc
call
rorl
mov
or
inc
dec
hlt
addl
add
cmpl
mov
rcrb
or
push
cmp
mov
cwtl
mov
pop
jne
sub
cmpsl
pop
add
or
inc
lods
data16
jecxz
jo
clc
push
pop
mov
jle
inc
push
mov
sub
push
divl
mov
pop
mov
enter
andl
or
sti
push
cld
jg
fmuls
out
clc
cmp
in
lea
push
dec
subb
movsb
xor
cwtl
ret
push
add
cmp
or
push
mov
sbb
push
push
push
push
lock
cli
pushf
data16
mov
and
jp
sub
adc
sbb
lret
sbb
push
pop
notl
and
xor
add
push
mov
adc
in
pop
xor
lods
push
inc
repnz
imul
push
out
push
pop
add
lret
push
mov
add
mov
leave
mov
or
jp
fwait
push
push
push
or
xor
fildl
adc
cmp
jne
call
lods
adc
call
xchg
push
adc
je
or
rcrl
dec
and
out
mov
sbb
mov
xchg
mov
push
lcall
or
test
inc
rcpps
dec
sbb
sub
in
or
pushl
leave
jmp
ljmp
jl
pop
push
test
xchg
rdtsc
push
outsb
movzbl
shr
adc
sbb
pop
js
pop
jl
in
pop
pop
ret
cmpsl
xor
and
xorl
sahf
aam
pop
adc
mov
int
shr
cmp
inc
or
push
hlt
imul
inc
dec
cmp
add
add
mov
andl
test
sub
push
sub
lahf
dec
dec
mov
rolb
add
call
adc
bound
or
rcrl
cmp
jge
rep
mov
les
push
mov
adc
push
fildl
jl
pop
add
out
fcmovbe
push
sbb
flds
mov
mov
fsubl
xchg
rcr
in
call
clc
in
adc
in
nop
aaa
lock
hlt
dec
sahf
add
clc
push
or
adc
add
mov
pop
and
jge
fisubs
and
or
mov
loop
imul
sbb
add
ds
popf
inc
jmp
in
cld
testb
repnz
test
mov
in
ret
ss
mov
xlat
dec
shrb
jmp
jl
jo
inc
cmp
jb
out
aas
repz
aas
outsb
hlt
pop
test
jl
sbb
mov
add
pop
test
les
adc
fsub
adc
and
scas
fistps
cmpl
xlat
ror
push
mov
pop
pop
pop
lahf
hlt
or
in
scas
loope
pop
dec
clc
cmp
test
mov
clc
xor
test
repnz
dec
mov
cmpl
and
push
out
mov
je
mov
jle
sbbb
pop
xor
mov
subl
and
adc
not
stos
movsb
pinsrw
cmpsb
jmp
insl
jg
xor
adc
adc
xor
btc
mov
ror
popa
push
cld
inc
ja
int3
pop
adc
push
mov
dec
jge
add
sbbl
lock
cmp
mov
mov
mov
and
sub
fists
pop
and
push
and
pushl
sub
add
jne
push
or
pop
pmulhuw
inc
orl
aas
inc
je
push
mov
cmp
je
test
sub
jmp
push
push
or
push
fisubl
xor
pop
dec
pop
scas
push
pop
outsl
loopne
mov
sbb
cmp
jne
adc
jbe
mov
xlat
not
push
cmpsl
scas
sbb
or
mov
add
imul
xor
clc
cli
pop
cmpsb
jo
jle
movsb
cmp
jne
dec
sub
jmp
lea
xor
cwtl
mulb
fsub
push
push
aas
xor
lock
push
cmp
in
mov
sbb
sub
jl
mov
arpl
cmp
cmpsb
stos
pop
push
adc
popa
pop
movsl
xchg
add
jl
int
fsub
push
loope
ret
je
test
xor
dec
jo
std
pop
loop
sbb
pushl
xor
mov
adc
push
adc
adc
rorb
cmpsb
into
mov
movsb
xor
push
sub
mov
bound
and
cmp
es
fbstp
pop
jmp
cmpl
mov
mov
push
loope
adc
ds
aas
push
mov
cld
hlt
inc
mov
lock
icebp
bound
mov
or
andl
bound
cmc
sub
movzwl
dec
or
sbb
push
or
inc
or
jbe
cli
or
ljmp
or
stc
jb
mov
add
cmp
jb
add
add
cmp
jb
daa
fidivs
popf
pop
mov
lock
test
push
testb
fimuls
jbe
inc
xor
testb
decl
cmp
mov
pop
mov
mov
lock
sbb
out
and
xor
mov
and
jl
cmc
inc
fs
jno
push
push
imul
xor
jb
div
cld
cmp
cli
data16
outsl
daa
iret
inc
outsb
cli
mov
cmp
jb
push
cmpsl
ret
pop
pop
push
add
inc
mov
mov
orl
inc
adc
jle
lea
mov
sub
lea
mov
adc
js
fistl
lret
lea
cmp
mov
repnz
sahf
les
inc
sbb
jo
imul
movl
outsl
pop
mov
mov
sbb
mov
mov
push
int
scas
test
and
sub
inc
add
or
movsb
pop
je
sbb
stc
cwtl
jl
inc
bound
pushf
loopne
ja
cltd
mov
pop
mov
shll
mov
or
xorb
push
dec
aad
or
mov
sahf
sub
push
orb
inc
or
ret
sub
test
lret
andl
fsubrl
xchg
cmp
call
xor
hlt
ljmp
pop
add
or
cmp
sti
add
stos
dec
or
loopne
jl
lock
pop
inc
mov
ficoms
iret
out
or
je
add
sub
pop
je
or
je
cmp
call
cmp
jne
lea
rcll
aaa
cmp
mov
pop
out
xlat
mov
andb
pop
aaa
xor
pop
sarb
lock
flds
les
jb
push
mov
jbe
mov
clc
xor
andb
sub
leave
rep
stos
test
push
sbb
int
xchg
sbb
and
decl
cmp
push
sub
push
adc
loopne
les
pop
sti
fstp
flds
push
adc
inc
jne
mov
xlat
insb
and
addb
dec
dec
mov
push
mov
inc
arpl
push
mov
jl
pop
pop
xchg
cld
movsb
mov
stos
add
jns
pop
repz
addr16
jmp
cmp
fstpt
dec
add
fcmovnb
call
and
push
ss
mov
sub
jg
jge
mov
sub
sbb
mov
push
fcoms
add
cmp
mov
gs
addr16
dec
ret
push
mov
lcall
int
dec
and
or
aam
cmp
or
xor
push
or
xor
mov
add
rcrb
sarb
int3
movsb
mov
testb
jno
mov
jge
cmp
test
push
lret
cmpsb
shll
jge
mov
aas
fcomi
inc
cli
test
xchg
je
cmp
ljmp
mov
xor
ss
and
and
int3
out
mov
push
jae
icebp
in
or
out
cmpsl
xchg
leave
mov
in
jecxz
and
sbb
sbb
cld
repnz
rorl
adc
imul
mov
push
jmp
mov
pop
jmp
push
jae
dec
jo
inc
inc
push
pop
fs
fisubrs
out
push
jmp
adcl
or
jae
dec
nop
sbb
mov
pop
push
ret
and
incb
sbb
or
fsubrs
or
fdiv
jmp
cmp
cmp
add
fildll
fidivl
ret
ds
lock
das
enter
aaa
push
movsb
fcoml
pop
repnz
jo
or
enter
xor
pop
or
enter
fcompl
mov
out
cld
pop
xchg
cwtl
shll
mov
add
xor
push
ja
das
or
ss
add
pop
jg
cmp
add
dec
and
and
inc
add
or
add
push
sub
mov
test
les
lahf
nop
mov
and
lcall
push
sub
addr16
mov
and
push
and
and
clc
mov
sub
enter
push
push
bnd
push
cmp
loopne
clc
jle
jl
mov
lea
inc
jecxz
jbe
mov
mov
push
out
or
call
jge
cmp
cmp
ja
cmp
jge
lea
cmp
jge
out
sbb
mov
add
inc
or
xor
out
xchg
pushf
xlat
jne
arpl
inc
mov
mov
ss
inc
jl
or
fmulp
ja
inc
mov
stos
les
adc
cmp
rorb
mov
out
ja
lock
xor
mov
mov
xchg
sbb
pop
sbb
sub
push
cld
xor
sti
or
loopne
mov
adc
mov
scas
sbb
push
inc
scas
clc
pop
ljmp
mov
mov
adcb
sub
mov
inc
cmp
sar
adc
mov
mov
xor
pop
enter
daa
imul
sub
sub
sbb
lea
pop
xchg
adc
ret
rolb
sub
xor
push
xor
pop
in
cmp
lods
sub
fwait
mov
sbb
inc
push
cmpl
jne
loopne
cmp
jno
repz
xor
dec
fdivl
bound
jge
rolb
cmp
jb
xor
push
lcall
lcall
insb
dec
push
jmp
cmp
mov
push
jge
push
add
hlt
lret
jl
test
es
cmc
jg
notb
lea
jmp
xor
or
fs
xchg
cmp
jbe
cmp
sub
add
add
inc
jbe
dec
or
push
add
add
push
jo
pop
mov
testb
incl
test
cmp
fsubrp
mov
dec
aaa
inc
pop
xlat
inc
mov
sbbb
sub
mov
loop
lock
add
sbb
pop
or
dec
fidivrl
mov
or
dec
adc
lea
es
mov
sub
push
cmp
arpl
popf
xchg
mov
sbb
imul
push
and
ja
jne
push
test
pop
mov
lods
adc
aas
mov
loopne
ror
add
popf
movsl
ret
jo
subb
jne
movl
push
in
add
mov
fcomps
test
int
ds
add
pop
add
les
loope
pop
cwtl
jne
lock
sbb
sarb
shlb
cmp
lret
adc
icebp
mov
imul
add
mov
mov
divl
jo
mov
pop
cmp
mov
je
push
jno
cmp
pop
clc
imul
and
sbb
or
pusha
sbb
mov
push
or
mov
sbb
ds
mov
movsl
or
clc
jae
mov
aam
ds
inc
test
aaa
mov
imul
cmp
popa
mov
rcrb
or
js
shrb
cmp
cmpw
add
pushf
sbb
test
jne
bound
dec
add
test
out
jp
jp
mov
push
sete
adc
add
mov
hlt
push
and
inc
jl
lock
pop
fistl
aas
xchg
ja
test
mov
inc
lea
pusha
je
clc
mov
ss
or
scas
mov
push
mov
push
lea
sub
add
mov
lea
mov
push
and
add
hlt
xor
mov
mov
jg
xor
sbb
subl
fstpl
fcomps
and
mov
scas
sbb
mov
mov
adc
xor
and
addr16
divb
sub
and
or
cmp
outsb
xorb
fldl
push
rcrb
insl
cltd
mov
xchg
mov
adc
xor
mov
mov
jnp
add
adc
jno
dec
popf
jge
jle
sbb
xor
and
sbb
negl
es
cmp
pop
aaa
insb
lret
mov
sub
js
jnp
aas
test
cmpsl
adc
xchg
js
mov
dec
cmp
jge
repnz
divb
mov
xor
push
pop
rcrl
mov
pop
int3
sub
jo
shlb
pop
test
mov
rcrb
xor
and
mov
add
lds
mov
or
or
or
or
fisttpll
loope
xchg
das
pop
xor
push
and
inc
xchg
xlat
dec
loope
out
repnz
and
push
sbb
xchg
add
mov
popa
push
pop
sbb
data16
addr16
dec
xchg
sbb
test
pop
lcall
xchg
fisubrl
bound
jmp
js
call
dec
leave
adc
inc
push
in
xchg
cmp
jns
mov
enter
loope
imul
or
xchg
rorb
mul
sahf
mov
in
das
mov
sahf
sbb
pusha
sbb
aaa
push
pop
add
loop
sbb
sbb
sbb
mov
ret
push
and
mov
pop
mov
or
and
sub
mov
dec
mov
sbb
in
push
and
lock
sbb
xor
dec
push
and
js
jo
xchg
loope
cli
mov
push
sub
repnz
sub
test
loopne
sbbb
test
or
push
push
add
add
clc
clc
sbb
scas
adc
sarl
mov
inc
movl
mov
mov
sub
add
jge
add
outsl
clc
testl
sub
sahf
cli
in
sbb
jecxz
fisttpll
sti
lea
push
push
ror
mov
mov
call
in
or
test
mov
cmp
jne
pop
jmp
jne
add
adc
js
incl
jl
movsb
sbb
inc
out
inc
add
sarb
shrl
fbstp
adc
xor
add
aam
fsubrp
fstpl
add
jmp
addr16
and
pop
negl
leave
leave
shll
cld
clc
cld
je
jle
ret
popf
add
jne
push
pop
outsl
xchg
add
jne
jge
sbb
push
push
xor
les
mov
popa
filds
jmp
push
movsl
dec
fsubrl
and
dec
testb
cld
pop
mov
cmp
es
jne
cmp
je
icebp
mov
pop
push
clc
cmp
sbb
cmc
addb
mov
or
add
mov
mov
jne
push
fdivr
or
cld
je
push
pop
fidivrs
xchg
mov
sub
bound
clc
jge
sub
push
cld
mov
push
in
les
data16
inc
inc
inc
inc
decl
jne
les
inc
andb
les
je
xor
push
inc
cld
and
and
push
outsb
ja
sbb
jle
shl
xchg
rep
fbstp
mov
or
dec
andb
incl
jecxz
movntps
sbb
or
inc
add
cmp
jg
divb
rolb
repnz
cmpl
inc
inc
dec
push
js
ret
loopne
xor
test
mov
mov
mov
cltd
jg
push
aam
inc
push
cmpsl
inc
in
test
popf
cwtl
inc
cmp
lods
shrb
add
hlt
or
dec
add
cmp
mov
sbb
fmull
aaa
cmpl
fcomp
cmp
mov
pop
js
push
in
inc
and
paddsw
jle
mov
mov
test
dec
lahf
imul
jp
call
adc
mov
sub
inc
jl
test
mov
bound
movl
icebp
mov
movb
push
movsbl
jl
filds
and
ljmp
mov
mov
dec
rolb
lods
call
push
rcrb
or
data16
outsl
dec
jmp
les
movsb
sub
cmp
fiadds
push
nop
mov
sbb
jnp
test
mov
or
mov
mov
sbb
sub
hlt
dec
add
add
jnp
xlat
rorb
inc
mov
inc
inc
mov
push
mov
mov
movsl
aas
test
and
mov
inc
insb
cmc
mov
jb
push
fcoms
jae
clc
fistpll
imulb
mov
and
fadd
add
lea
push
imul
and
sbb
fidivl
insb
mov
jbe
enter
mov
mov
mov
fdivrs
mov
push
add
inc
bound
mov
fdivl
lret
dec
mov
pusha
lcall
jo
pop
loope
sub
cmp
mov
jg
aad
mov
mov
sub
cmpsb
inc
push
push
xor
or
jg
in
push
clc
add
xchg
mov
dec
addl
cmp
or
scas
ds
mov
push
and
rcl
aad
mov
mov
pop
or
push
mov
mov
jne
icebp
adc
xor
mov
xor
xor
push
pop
xchg
popf
sbbb
decb
std
aam
inc
andl
mov
adc
adc
cmp
int
cmpsb
push
sbb
fnsave
sub
sbb
or
pop
add
sub
push
enter
je
push
dec
and
pop
dec
xor
add
mov
repnz
in
test
js
pop
mov
or
test
in
aam
mov
mov
add
cmp
jne
xorb
adc
fiaddl
ret
pop
orb
inc
push
push
je
pop
inc
mov
xchg
pop
mov
sub
in
je
jl
push
push
pusha
mov
push
push
mov
inc
sti
add
sbb
stos
dec
insb
ljmp
loopne
mov
js
inc
je
fdivrs
stos
insl
sbb
xor
ljmp
pusha
or
pop
loopne
jae
andnps
xor
and
lcall
sbb
add
sub
xor
faddl
sti
dec
pop
cmp
mov
mov
push
outsb
xor
idiv
jl,pn
ror
push
xor
ds
call
xchg
sub
sarb
lock
sub
imul
add
jne
xlat
push
mov
push
pop
add
push
repnz
jecxz
icebp
mov
sub
cmp
dec
push
movl
or
adc
or
add
lock
pop
call
sub
je
pop
mov
mov
out
scas
sub
add
dec
pop
sarl
adc
push
out
inc
or
adc
sbb
sub
das
dec
je
dec
mov
mov
and
or
mov
mov
adc
dec
sahf
pop
call
cld
cmc
jg
data16
cli
jbe
push
push
pop
mov
mov
and
shr
lock
pop
sahf
sbb
inc
cmp
mov
jb
pop
pop
insb
xchg
xchg
stc
jb
jle
test
orb
rcl
push
inc
pusha
test
fisttpl
repz
neg
sbb
lea
and
cmpsb
ret
xlat
ret
inc
sbbl
loopne
jl
mov
dec
xchg
sbb
sbb
aad
push
test
sbb
push
shlb
push
adc
aaa
les
adc
mov
cmp
cmp
sarb
xchg
cld
or
adc
ret
ja
pop
jns
aas
dec
mov
or
push
stos
pop
sbb
mov
add
insb
mov
mov
sub
je
add
xchg
loopne
jp
mov
xor
adc
shlb
aad
mov
pushf
push
mov
cmpb
lock
or
push
cmp
or
xchg
or
lock
adc
cld
pop
add
adc
jmp
fists
iret
rorl
pushl
test
sarb
lret
cmp
je
cmp
mov
pop
aam
add
xor
fsubl
subl
inc
or
jmp
jl
in
out
sahf
in
mov
mov
ret
or
push
pusha
je
insl
mov
add
ds
jne
dec
inc
push
loope
lods
scas
loopne
cmp
loop
jecxz
loop
ret
pop
and
push
adc
adc
or
out
pop
mov
cmp
adc
mov
pop
sbb
push
rolb
cmp
ja
jg
je
mov
or
and
push
sbb
bound
push
mov
pop
xchg
rolb
mov
test
add
adc
insb
in
xchg
fidivrl
leave
mov
cld
fisubl
cmpsb
popf
xor
in
jp
fisubrs
rcrb
xchg
pop
clc
sub
jo
jecxz
adc
or
cmp
sbb
inc
mov
gs
push
pushl
and
mov
pop
adc
xor
fs
insb
pushf
xor
mov
push
stos
push
push
dec
popa
pop
mov
and
rep
lock
cmpsl
xor
gs
add
loopne
xchg
dec
push
and
mov
jge
push
je
fsts
pusha
jg
addl
movswl
sub
push
push
and
dec
jbe
ds
push
fstpl
aaa
mov
js
jbe
mov
dec
sbb
aas
out
adc
cmp
jp
xor
and
testl
dec
in
stos
add
stos
test
lods
movsl
cmp
adc
push
hlt
aas
sbb
pop
adc
cmpsb
and
cmp
cmp
mov
andl
pop
jl
call
sbb
sbb
orb
cmpsb
mov
sbb
mov
clc
out
icebp
mov
push
jne
inc
sub
mov
mov
push
push
repnz
pop
lods
je
push
pop
or
inc
push
in
adc
dec
insl
adc
jl
sbb
je
push
dec
rcrl
dec
push
push
and
cli
lcall
or
push
pop
cmpsb
dec
push
add
out
add
add
sub
stos
mov
add
call
add
add
or
outsl
filds
jb
test
je
push
sub
jmp
mov
adc
push
test
jno
inc
adc
fisubs
inc
mov
mov
icebp
cmp
jne
jle
adc
push
incl
jl
aam
push
mov
mov
adc
scas
sub
sub
sbb
xchg
outsl
mov
push
fiaddl
pusha
sub
cmp
add
inc
testb
push
sbb
sbb
push
or
lods
je
pop
push
push
arpl
imul
push
mov
mov
xor
cmp
sbb
shl
add
inc
loopne
jge
xor
jne
push
inc
mov
sbb
mov
xorb
sub
xor
cmpb
push
jecxz
addr16
ss
cmp
jne
xchg
lock
fsubrs
fucomi
pop
push
cwtl
adc
lcall
sub
cmp
jg
inc
push
push
aam
out
and
add
add
mov
and
xchg
cmp
cmp
jmp
subb
or
add
arpl
jl
cld
xor
mov
inc
and
inc
out
lcall
loopew
inc
lock
push
sub
fsubr
leave
in
mov
jo
xchg
ret
aam
mov
or
lods
mov
cmp
add
pop
jne
fnstsw
dec
mov
push
fisttps
andb
mov
leave
xor
jmp
push
mov
adc
mov
orl
cmp
adc
dec
gs
mov
add
jae
adc
cmp
jae
cs
xchg
std
mov
push
xlat
push
aad
adc
adcb
pop
enter
sub
add
cmp
jne
mov
and
jne
push
or
jl
pop
ret
mov
add
sti
jo
sarb
mov
mov
adc
dec
mov
inc
add
loop
dec
nop
pop
pop
push
xchg
jns
fisttps
push
or
pop
repnz
loope
loop
cmpsb
std
fiadds
adc
mov
or
inc
cmp
roll
adc
stos
in
es
je
sbb
add
rol
fmuls
or
dec
adc
nop
push
push
jg
movsb
movsb
subl
cmp
rorl
cli
push
jne
mov
xlat
call
jmp
mov
idivb
jne
push
dec
xor
int3
xor
inc
loop
pusha
insl
mov
les
add
shrl
jae
cmp
or
loop
or
cmp
jb
mov
imull
out
mov
je
andb
mov
call
les
clc
jmp
mov
sahf
mov
and
cld
clc
mov
ret
xchg
mov
das
jl
addl
outsb
je
cmp
adc
outsl
cmp
dec
aaa
ds
rol
loop
daa
pop
push
xor
push
test
inc
sub
aas
subb
adc
pop
sbb
push
arpl
xorb
cmp
jle
push
lea
lcall
loop
sbb
push
cwtl
icebp
mov
je
cmp
je
inc
pop
jne
xchg
or
ret
push
pop
jne
mov
leave
cmp
xor
sub
xor
sbb
pop
ja
rcrl
jle
mov
js
xor
push
lcall
sub
ret
push
icebp
inc
cmp
insb
and
jle
push
push
cmp
inc
push
mov
xor
ret
popa
scas
and
xchg
cmp
push
push
fstps
and
loope
hlt
and
loope
clc
add
inc
pusha
outsl
jle
popa
cwtl
ret
mov
sbb
jb
mov
add
jo
inc
cmp
jns
xchg
sub
movsl
sbb
hlt
fstps
movsb
fcoms
clc
pop
pop
sbb
addr16
les
jo
rclb
push
mov
jle
out
fs
jmp
jns
pop
shr
movl
aas
sub
addr16
dec
aaa
dec
mov
push
dec
stos
dec
inc
or
and
mov
mov
jo
adc
add
or
push
push
dec
nop
fwait
clc
push
fcoms
mov
outsb
jnp
or
sub
int3
mov
cmp
popf
mov
xchg
aaa
shlb
jl
cmp
jae
cmpb
lea
hlt
negb
jne
inc
add
pop
cmpl
aaa
jnp
sbb
adc
inc
test
jne
je
popf
sub
inc
or
jne
xor
jg
adc
dec
or
leave
and
movsb
mov
or
std
sbb
sarb
xor
inc
mov
test
int3
dec
enter
cmp
dec
jl
mov
push
push
outsb
push
adc
pop
rolb
xlat
call
jne
cmp
je
push
loopne
mov
adc
je
jne
ljmp
ds
pop
adc
rorb
sbb
cmpl
call
loope
rcl
jne
enter
xor
xor
rorl
ret
test
movsl
push
out
addr16
shrb
push
mov
xor
sub
push
xlat
in
fwait
and
pusha
xchg
jl
rorb
jecxz
pop
jbe
call
push
and
je
mov
dec
sbb
je
xchg
or
mov
xor
sub
aaa
cmpsb
cld
add
setl
and
adc
ret
dec
lock
fsub
mov
lea
pop
push
fs
xchg
fcmovb
inc
jmp
rorb
scas
aam
add
push
outsl
divb
rcrl
fisubrs
sar
xchg
cmp
or
shl
sbbl
push
popf
add
dec
jl
loop
xor
mov
sbb
sbb
call
push
cwtl
xchg
push
outsb
push
or
or
or
sbb
cmp
outsl
ss
push
mov
cmp
inc
push
loope
subl
les
roll
jne
sub
mov
jns
shl
sub
sub
adc
mov
sub
mov
fsubrp
inc
sub
push
sbb
or
mov
or
xor
inc
mov
xor
or
mov
mov
mov
jge
out
inc
data16
mov
xor
mov
inc
xor
aas
cmp
shr
js
clc
or
pop
mov
cmp
or
out
cmpb
dec
sub
adc
xchg
int
inc
mov
inc
push
les
out
clc
xchg
adcl
push
ret
je
mov
mov
mov
icebp
dec
loopne
add
ret
js
lock
into
xchg
adc
adc
jmp
cmp
and
ds
shll
dec
shrl
aam
shlb
shl
pop
inc
xor
fdivp
repz
mov
adc
or
add
cmp
test
ds
dec
daa
cmpb
cmp
xchg
leave
add
rcrl
pop
js
push
or
std
movsl
adc
or
and
inc
in
push
call
mov
mov
mov
xorl
les
mov
sbb
enter
push
decl
inc
inc
and
mov
push
xchg
mov
test
popf
add
movsb
js
subb
jo
ret
jo
out
push
loopne
ja
jb
adc
dec
inc
add
fsubrs
dec
shrb
ja
or
pop
inc
les
add
adc
cmp
sahf
cmpsb
imul
add
mov
out
push
adc
mov
inc
jp
xchg
jg
mov
dec
shrb
dec
adc
daa
inc
jb
mov
lea
adc
or
fwait
adc
or
daa
nop
fists
jle
sti
je
inc
add
cmp
mov
adc
push
ret
das
xor
xor
jge
add
jo
pop
adc
adc
mov
jnp
andl
rcrb
dec
cmp
jbe
pop
aaa
or
and
jge
orl
imul
ss
sub
push
test
add
inc
mov
dec
mov
mov
test
je
add
mov
lea
jecxz
pop
xchg
adc
popf
aam
cmp
and
sub
fsubl
mov
lret
movzwl
push
push
repnz
shr
pop
inc
and
incb
mov
pop
sub
iret
rorb
inc
hlt
pushf
add
inc
imul
popa
out
sbb
or
pop
test
cmc
push
mov
sub
mov
sbb
push
xor
push
mov
cmpsl
or
fistpll
cmp
jne
push
jmp
add
sbb
out
jne
inc
adc
loopne
es
xor
xor
in
push
push
add
pop
lcall
sub
cmp
je
ljmp
mov
data16
adc
shrb
jo
jbe
adc
rorb
inc
insl
pop
ret
nop
or
or
in
lea
add
add
adc
and
jecxz
dec
pop
pushf
or
and
shl
cmp
push
js
pop
pop
mov
inc
es
test
xchg
cld
mov
je
dec
jl
lock
js
jmp
test
jbe
mov
inc
push
cs
mov
mov
pop
pop
out
and
mov
add
pop
jb
cmp
fidivs
loope
sbb
movb
adc
mov
push
and
jne
and
push
imul
iret
sub
push
add
pop
les
add
ret
mov
xor
repnz
mov
movb
movlps
sbb
adc
inc
mov
sbb
les
add
push
adc
adc
sbb
adc
adc
adc
sbb
lret
sbb
fwait
popf
pop
dec
adc
sbb
xchg
jmp
xor
mov
into
mov
pop
inc
jo
cmp
stos
xor
mov
pop
and
adc
xchg
je
add
pop
adc
xchg
xor
sbb
push
mov
inc
sbb
pusha
dec
dec
scas
add
popa
les
cmp
xorl
jb
setno
xor
adc
jbe
pushf
mov
mov
stos
inc
jo
js
and
jno
dec
cmp
jb
or
mov
push
jb
jnp
mov
xchg
aam
adc
shrl
xor
repz
adc
jmp
aaa
jl
adc
mov
mov
mov
and
in
mov
and
icebp
mov
xor
daa
ret
xchg
cmpsb
dec
sbb
add
and
mov
enter
pop
popa
xchg
or
lods
or
daa
xor
fs
or
or
jp
pop
clc
push
adc
cmp
mull
or
iret
push
sbb
fnstcw
add
sub
cld
adc
pop
je
stos
cmp
sbb
adc
ljmp
and
ds
jecxz
adc
xor
cmp
gs
xor
pop
andl
or
roll
ret
push
mov
out
sbb
mov
inc
mov
ds
mov
pop
jno
cmp
jb
daa
ret
out
fnstenv
jae
mov
sbb
or
aad
loope
rolb
and
mov
clc
mov
call
mov
dec
lea
dec
jp
pop
jne
dec
fwait
jae
sbb
incb
daa
sub
dec
sub
add
notb
mov
outsb
add
movsl
add
push
sub
sbb
adc
pop
and
dec
mov
push
push
dec
es
js
test
test
and
stc
mov
adc
add
and
mov
idivb
lea
lahf
or
out
add
and
jmp
je
out
or
mov
sti
scas
incb
bound
in
outsl
sbb
dec
dec
js
in
fnstcw
mov
pop
jg
pop
dec
inc
hlt
mov
jb
lea
add
or
jl
mov
mov
sub
sbb
xorl
aaa
push
push
and
sub
arpl
mov
js
dec
adc
sub
xor
imul
lea
add
cmp
inc
int
testb
push
pop
sub
pop
in
add
bound
cmp
pop
inc
sti
rclb
push
inc
push
dec
push
jb
cs
pusha
es
je
nop
push
adc
push
xchg
mov
jmp
jmp
out
mov
fcmovb
push
jo
scas
es
push
mov
cmp
je
pop
cmp
cmp
into
lods
jnp
mov
pop
xchg
sahf
enter
sub
fs
add
lea
out
cmp
lea
push
push
cmp
sbb
cmpsl
mov
subl
xor
sbb
and
addb
in
mov
xchg
push
pushf
push
cmp
or
mov
adc
pop
ja
mov
push
jg
and
movsl
or
dec
lea
aam
inc
aaa
cmp
sub
or
sbb
dec
cld
pusha
xor
inc
in
enter
mov
xchg
addr16
push
rcr
mov
js
sub
xor
nop
sti
pusha
jmp
xor
sub
movsl
inc
sbb
rcrl
xor
inc
dec
sar
pop
or
add
andb
or
push
pop
repnz
shlb
dec
and
xor
clc
push
jecxz
jp
jne
push
pop
mov
or
loopne
xor
popa
push
cs
int3
pushl
jae
push
sub
ds
pop
sbb
rcr
push
xchg
cmpl
cmp
xor
xor
mov
lea
dec
sub
movl
dec
or
dec
cmpsb
jae
or
or
sbb
add
stc
mulb
inc
sbb
push
and
jbe
jnp
mov
dec
adc
adc
xor
add
shll
insb
inc
shlb
ret
testl
sbb
push
xor
mov
xor
push
mov
adc
rclb
pop
xchg
jmp
fcmovnbe
clc
add
inc
add
sbb
and
pop
insl
adc
xor
dec
movsl
bound
xor
push
dec
popa
mov
shlb
mov
inc
in
push
fnstsw
push
fstpt
and
call
out
je
xor
pushl
sbb
test
shr
push
fs
pop
xor
cmp
push
mov
or
imul
inc
cld
testl
sbb
andb
inc
clc
or
mov
ret
cmp
and
sub
shlb
or
mov
fsubr
mov
and
mov
or
jo
sarb
jmp
sub
cld
inc
popa
imul
fdivp
xchg
and
call
mov
lcall
ds
sub
mov
outsb
test
repnz
repnz
mov
pop
push
fadds
mov
mov
ss
fisubrl
clc
imulb
adc
or
jo
subb
arpl
jmp
mov
and
inc
lock
fisubs
arpl
fsts
mov
js
jae
mov
pop
loope
adc
mov
ja
inc
in
pop
push
xor
pop
loop
outsl
inc
lahf
sub
inc
cld
adc
and
mov
xchg
and
mov
icebp
movsb
cmp
inc
sub
add
ss
xchg
jmp
cmc
imul
add
lds
and
push
cmp
jne
in
mov
sbb
shrl
lahf
push
dec
loopne
adc
mov
loop
fists
push
push
sub
sub
call
jae
inc
fsts
dec
sbb
pop
inc
lock
cld
mov
cwtl
cmpsb
push
xchg
or
adc
stos
push
push
push
sahf
in
sbb
lcall
pop
or
repnz
mov
in
ret
imul
clc
push
fdivs
pusha
or
test
adc
push
imul
imul
add
push
adc
add
add
mov
dec
repnz
addl
sarl
int
xchg
and
sbb
and
sub
sbb
stc
push
loopne
push
pop
or
adc
inc
enter
daa
das
hlt
out
daa
pusha
sbb
sub
inc
inc
lcall
clc
popa
repz
xchg
movsb
add
xchg
insl
mov
push
mov
loope
repz
jo
in
into
lds
and
and
mov
and
adc
xchg
or
mov
aaa
sbb
mov
push
sub
push
xor
repz
inc
fisubrl
jae
fisttpl
push
sbb
inc
inc
insb
inc
repz
dec
jnp
js
movb
sbb
sbb
dec
int
jmp
inc
jecxz
inc
adc
arpl
lea
repnz
mov
push
and
xchg
push
mov
cld
mov
dec
mov
xor
idiv
and
or
cld
xorb
sub
mov
add
dec
jmp
iret
sub
cld
ret
sbb
daa
movl
mov
fwait
jo
pushf
push
push
cmp
add
loopne
pop
jne
push
pop
xor
adc
xchg
cmp
cmpb
les
or
xchg
clc
fbstp
mov
xchg
stc
pop
adc
cs
aam
loopne
xchg
sahf
shll
adc
das
loop
or
loope
mov
mov
pusha
cld
xchg
lret
jbe
negl
adc
add
scas
push
sub
cmp
cmp
adc
lret
jl
imul
xor
mov
dec
lea
sub
xchg
xchg
cmp
and
push
add
fs
pop
and
push
mov
cld
adc
shll
mov
mov
sbb
xor
stos
ds
int3
push
lea
mov
pop
xor
xchg
jge
lea
add
inc
andl
sub
jle
divl
add
pcmpeqd
adc
mov
mov
movsb
out
sub
mov
and
mov
jp
cli
mov
pop
imul
xorb
pcmpgtw
cmp
pop
pop
jne
movsbl
mov
and
xchg
adc
test
lcall
or
pop
movl
adc
outsl
movsb
cmpl
rcl
dec
mov
and
add
lret
mov
cmc
ljmp
ljmp
cmp
fsts
je
inc
push
push
ret
push
xchg
repz
push
into
out
mov
je
ficoms
mov
cmpsl
sbb
push
cmp
je
scas
push
lods
pop
je
sbb
or
sub
push
xor
mov
push
call
mov
in
cmp
test
out
cmp
jno
cwtl
cmp
scas
daa
cmp
orl
adc
mov
bnd
add
mov
aam
or
pop
insl
mov
mov
fstl
push
test
mov
nop
push
push
and
and
dec
scas
and
mov
int
mov
pop
mov
cld
fdivrs
lods
in
xchg
lret
in
jg
pop
cmc
mov
inc
and
cs
adc
rorb
sahf
repnz
mov
out
pushl
add
je
sub
leave
clc
xlat
cli
push
scas
or
enter
adc
cli
shll
stos
add
mov
or
add
and
jp
lret
push
inc
lock
pop
add
mov
imulb
and
push
or
lcall
pop
mov
inc
test
cmc
sub
push
xchg
insb
stos
rol
xchg
xchg
inc
rcll
pushf
ret
mov
movsl
xor
add
sub
add
popa
sti
mov
jmp
mov
cmp
or
jmp
xor
fdivs
jmp
aam
inc
mov
pop
test
push
and
jno
sub
pop
push
cmpps
inc
inc
add
fcompl
int3
mov
or
test
pop
dec
bound
push
pop
sbb
jbe
xchg
xor
push
push
rcll
or
add
dec
shll
and
sub
aam
or
out
adc
inc
imul
pusha
jb
in
in
jle
jle
orl
decb
push
sarb
imul
mov
or
das
dec
daa
push
lea
push
push
outsb
mov
mov
and
and
inc
cmp
lods
lods
push
lock
jmp
je
mov
sbb
adc
cmp
loope
mov
movl
pop
jp
jns
add
dec
push
mov
adc
into
das
push
mov
push
jp
pop
test
loopne
jle
test
neg
mov
cwtl
pushl
call
pushl
push
push
add
push
mov
pop
pop
je
orl
pop
daa
add
jo
adc
xor
cmp
cmp
dec
or
adc
and
mov
push
lods
lret
xchg
sbb
mov
push
loopne
push
adc
outsb
mov
xor
jl
adc
dec
sub
js
adc
add
mov
dec
adc
cmpsl
xor
andb
or
stos
mov
adc
add
sar
xor
adc
add
aam
or
addb
clc
cld
push
xchg
jmp
or
les
test
imul
sbb
rcrb
test
cmpsb
adc
cwtl
mov
shrb
cld
cmp
lea
mov
test
add
cmpl
out
mov
jo
add
mov
push
push
jb
fldcw
mov
fdivl
in
xchg
in
cmp
jbe
push
xchg
hlt
add
cmpsl
inc
dec
push
sbb
aam
je
and
cmp
mov
cmp
clc
cmp
xchg
cmp
sti
pop
add
jg
test
mov
mov
jg
aas
push
call
push
nop
ficoms
sbb
push
inc
add
fiaddl
addr16
sub
jg
and
gs
test
push
aaa
adc
push
ret
pop
fadds
pop
pop
adc
cs
lea
mov
icebp
pop
pop
sub
cmp
or
fcomps
fcmovnbe
ret
jmp
push
ljmp
testb
cwtl
sahf
mov
cmpsb
test
dec
adc
mov
jnp
test
lods
inc
jp
stc
pop
pop
repz
hlt
mov
mov
loope
nop
scas
sub
rcll
in
sub
jle
jl
test
repnz
pushf
dec
mov
lea
push
sti
shlb
adc
loopne
test
aas
push
fmul
notb
ret
cmpsb
inc
adc
test
lea
add
cmp
fldt
adc
pop
xchg
lds
add
adc
push
int3
cmp
not
clc
iret
in
push
push
ret
push
add
add
jmp
mov
inc
movsb
shlb
pop
lods
mov
leave
loopne
aaa
repz
adc
inc
hlt
jne
mov
pop
sti
mov
xchg
pop
hlt
pushf
or
xchg
mov
cmp
dec
pushf
adc
cmp
mov
pop
shlb
leave
cld
cmp
popf
loopne
clc
jnp
inc
push
xorl
cmp
imul
fidivs
mov
repnz
push
insl
lock
adc
aaa
aas
je
sbb
hlt
lods
or
icebp
jo
cmp
movsb
sub
mov
push
into
mov
fs
xlat
push
sbb
sbb
inc
loope
xlat
and
clc
hlt
push
cmc
sbb
leave
aaa
mov
clc
xor
mov
jb
jl
xchg
lods
nop
dec
insl
sbb
mov
or
fstpt
push
add
fdivrl
notl
cmpsl
out
xlat
or
add
lcall
in
push
test
jp
scas
adc
std
test
sarl
es
cld
mov
jg
lcall
sub
push
std
scas
jo
and
inc
and
call
loopne
ds
and
dec
jno
pushf
inc
or
xchg
push
inc
mov
xchg
and
aad
dec
push
cmp
push
pop
mov
mov
out
gs
dec
push
aas
inc
fildl
mov
imul
nop
int
adc
push
int
adc
dec
sbb
xchg
lea
mov
dec
mov
fs
je
cs
sub
insl
fldcw
shll
ss
insb
push
cmp
dec
mov
lcall
dec
mov
lcall
push
and
je
movsb
inc
movl
adcl
je
pop
sahf
aaa
sti
and
xor
fnstcw
pop
or
ds
sub
pop
push
fs
push
addl
pop
loope
push
fsubrs
xor
insb
push
insl
xchg
dec
out
data16
and
mov
dec
enter
mov
sbb
bnd
push
push
hlt
inc
and
aaa
and
push
xor
outsb
mov
js
xor
stos
sbb
std
aaa
mov
pusha
or
cmpw
jb
movsb
xor
shrb
fwait
adc
and
mov
cmp
jg
add
push
lods
inc
icebp
and
outsl
mov
push
addl
out
xor
mov
sub
pushf
add
mov
lock
nop
pop
add
add
mov
in
xchg
je
mov
pop
xor
push
lods
cmp
rorb
ljmp
cli
push
push
or
push
outsb
cmp
lock
adc
insl
pop
push
add
add
fs
das
orl
stos
nop
sbb
pusha
pop
dec
aaa
mov
pop
leave
stos
dec
sub
add
test
popf
pop
sbb
or
push
jns
mov
dec
into
cli
cmp
push
je
or
mov
bound
adc
cwtl
lods
pop
dec
cmp
std
jmp
cmp
push
je
outsb
ljmp
loopne
fwait
movsl
movsl
test
daa
movsl
push
inc
cmp
jne
pop
test
sbb
mov
jge
xlat
xor
xchg
popa
inc
sbb
add
push
add
dec
inc
les
inc
mov
and
dec
cmp
nop
lahf
cwtl
into
mov
pop
push
add
lods
sbb
cld
or
add
adc
or
pop
push
push
dec
sub
imul
push
mov
pop
movsb
sub
jl
or
jg
shr
roll
ret
dec
jp
adc
enter
movsl
mov
lahf
aad
push
add
pop
sub
xor
sbb
adc
out
sbb
jno
test
dec
ds
push
lods
jmp
inc
jp
ljmp
test
dec
addr16
jmp
xchg
sub
cmp
sub
mov
mov
pop
push
dec
push
jbe
add
fdivrl
dec
les
jnp
cmp
cmp
mov
js
push
nop
nop
dec
inc
xor
add
outsb
add
sub
adc
rol
push
sar
sub
inc
or
push
ja
test
sbb
and
push
push
out
mov
cli
sub
xor
xlat
pop
mov
mov
add
imul
sti
pop
sub
mov
dec
cmpsl
xor
repz
adc
xor
mov
adc
push
or
push
test
mov
gs
mulb
sbb
xchg
scas
xor
xchg
les
fsts
and
sbb
and
push
and
and
push
push
mov
mov
mov
sub
jg
mov
add
lea
mov
shr
mov
jge
jge
fcoms
shr
xor
lret
mov
xor
and
jns
dec
adc
adc
out
in
adc
addr16
push
push
adc
sahf
pop
push
sbb
pop
dec
sti
sbb
sbb
sbb
sbb
sbb
jns
jns
sbb
sbb
sbb
cld
dec
sahf
sbb
pop
sub
add
cmc
fildll
shl
and
or
inc
cmp
pop
push
pop
jl
sbb
xlat
hlt
jp
mov
sbb
adc
les
loopne
push
ds
bound
js
xor
sti
enter
rorl
jo
lock
jle
scas
test
enter
inc
xchg
push
lea
adc
test
pop
ret
cmp
pop
mov
jne
lret
push
add
or
rol
test
into
mov
add
inc
imul
push
jmp
xor
fdivs
pop
push
sbb
pop
pop
mov
xor
out
dec
xor
pop
enter
xor
out
pusha
inc
mov
pop
nop
fisubrl
sbb
and
fsubs
mov
jne
fsubl
hlt
push
in
mov
pop
jge
addb
test
daa
je
add
into
into
je
cld
pop
test
pusha
adcl
jl
dec
xchg
or
sub
int3
xchg
xor
imul
mov
dec
rcl
int3
rcrb
idivb
push
push
das
insb
inc
push
xor
out
aam
jmp
adc
fiadds
push
add
sbb
push
push
or
xlat
test
push
adc
fisubs
jae
lahf
dec
jne
and
sti
adcb
je
ret
ret
aaa
inc
arpl
adc
call
cmp
mov
add
push
add
fcoms
sub
mov
xchg
sub
add
sahf
pop
cmp
icebp
inc
add
fdivl
les
cmp
je
cmp
adc
test
daa
push
pop
push
sub
xchg
pop
in
and
ficoms
xchg
and
daa
lods
mov
mov
rclb
pop
or
pop
xchg
adc
add
sub
mov
mov
push
imul
add
jmp
and
fisttpll
daa
out
sub
xor
cs
cmp
dec
ret
dec
cmp
jo
out
jns
or
dec
movl
push
and
sbbl
add
mov
fcoml
or
testb
xor
cmp
pop
lds
ja
test
jge
addb
jg
out
push
or
push
lcall
ss
push
jno
or
add
inc
add
sbbb
mov
adc
je
push
imul
or
mov
sti
add
cmp
inc
inc
jmp
push
dec
stos
push
xor
popf
sbb
sbb
idiv
test
pop
imul
mov
add
repz
lods
or
mov
mov
rorl
lahf
xchg
inc
in
or
out
mov
outsl
push
data16
jbe
inc
rorb
and
push
dec
loopne
aam
push
pushl
ss
push
dec
cmpsl
push
mov
xor
sub
or
pop
add
or
pop
jmp
fs
es
xor
inc
add
insb
cmp
ja
imul
xor
adc
or
inc
pusha
inc
out
sbbb
sub
mov
cmp
push
or
xor
or
and
test
jl
mov
jne
dec
rol
pop
jl
cli
lods
mov
adcl
xor
shr
inc
test
leave
push
pop
mov
or
xor
sub
mov
mov
fwait
pushl
insb
jge
aaa
imul
lods
dec
popa
outsl
je
jge
pusha
pop
mov
dec
jmp
push
and
lret
cmc
xchg
lods
mov
push
or
ret
nop
adc
add
xchg
mov
sahf
push
add
cmp
cmp
jge
push
and
call
jp
testb
sub
sub
or
or
add
add
hlt
push
lods
leave
sub
std
mov
sti
je
push
sbb
jae
jmp
mov
dec
push
dec
or
cmpb
sbb
adcl
jnp
das
iret
push
adc
les
andb
cmp
mov
cmp
scas
xorl
push
ds
aaa
es
movb
pop
sahf
aad
or
adc
ret
cltd
xchg
cs
sarl
leave
inc
mov
rorl
dec
push
push
pop
js
or
mov
adc
hlt
addr16
cmc
xchg
mov
or
ja
sbb
or
dec
mov
mov
mov
add
pop
cmpsl
push
test
inc
cltd
pusha
or
adc
call
jbe
vshufpd
mov
cs
mov
dec
jne
add
pop
stos
lods
lret
out
jbe
out
cltd
mov
cmp
jae
ficomps
or
enter
push
sub
add
push
push
push
add
mov
lock
pop
test
adc
add
cmp
and
pop
or
pop
push
in
cld
add
push
js
adc
data16
negb
fmuls
test
push
and
into
imul
mov
mov
adc
pop
push
pop
les
jmp
mov
inc
cli
and
ret
and
loopne
shrb
jl
sub
cmp
mov
je
rclb
pop
and
adc
inc
sub
out
jecxz
das
lods
and
call
adc
mov
andl
cld
cmp
in
inc
loopne
fdivs
or
sbb
lods
cld
cmpl
in
lea
loopne
or
push
push
pop
aas
push
push
pusha
mov
add
adc
aas
mov
js
mov
lret
js
pop
cli
mov
add
add
cs
sbb
movsb
lcall
dec
jno
xchg
out
out
push
push
and
pusha
sub
dec
inc
mov
push
and
add
mov
orb
inc
loope
jns
pop
adc
pop
jp
loopne
test
sbb
or
mov
test
subb
or
jp
jb
adc
adc
jnp
push
push
add
push
add
lock
sbb
daa
push
jo
push
pop
imul
enter
xchg
insl
std
pop
insl
sub
jmp
xchg
inc
out
dec
popa
and
xchg
gs
shrl
add
or
adc
mov
in
adc
adc
sbb
dec
shll
and
and
shll
sub
dec
shll
cmp
push
shll
inc
inc
inc
add
lods
ss
mov
cmp
dec
mov
add
or
repz
pop
add
mov
mov
xchg
push
testl
sbb
xor
push
xchg
lock
cmp
pusha
add
cmpsb
fstpl
dec
cs
dec
cmp
fs
loop
sbb
aas
fs
test
push
and
je
cmpsb
cmp
mov
int3
push
xchg
cmpsb
adc
inc
bound
push
jl
add
insb
dec
test
xchg
mov
adc
add
xchg
pop
mov
clc
cmpsb
mov
push
add
shlb
sbb
repnz
in
jo
pop
adcb
and
jmp
cmp
sub
test
in
loopne
mov
mov
pop
pop
push
sub
sub
imul
ret
sarl
mov
cmp
pop
loopne
inc
sbb
pusha
shrb
adc
orb
fimuls
decl
mov
or
push
inc
clc
push
aas
xor
cmp
lock
stos
enter
jecxz
xor
inc
pop
mov
push
ret
cmp
pop
or
adc
rclb
stc
push
and
aaa
add
ret
pushf
mov
mov
lea
test
inc
insb
sbb
cmp
inc
std
mov
xchg
je
inc
clc
mov
inc
mov
cli
mov
mov
adc
mov
daa
dec
mov
dec
loopne
adc
fisttpll
jae
push
testb
pop
push
loopne
popa
lcall
mov
or
push
push
ret
nop
sub
jg
daa
lock
cmp
push
push
std
stos
inc
mov
test
push
jle
mov
mov
sbb
fnstcw
xchg
bound
cwtl
xorb
std
enter
stc
or
adc
mov
sub
jmp
andl
stos
test
mov
sbb
and
or
testb
cmpsl
mov
dec
inc
add
insl
inc
sub
or
and
cltd
lock
adc
xlat
pop
push
mov
es
adc
xor
mov
add
inc
enter
push
aam
add
push
or
cmp
jl
jne
xchg
sti
mov
andl
sbb
movb
sbb
jmp
test
jne
cmp
fwait
dec
inc
xor
jo
mov
xor
iret
add
scas
cwtl
push
mov
sub
jns
sub
cmp
add
and
loop
jp
add
test
fcomip
inc
insl
stc
lods
shrl
clc
mov
jmp
inc
loopne
je
jge
test
push
or
dec
mov
stos
mov
mov
mov
dec
call
jle
cwtl
and
sbbl
jo
xchg
push
out
aam
mov
adc
ret
xorb
sbb
test
js
mov
fcom
jbe
shll
dec
dec
add
push
or
cmp
add
add
inc
fwait
dec
fidivrl
repnz
jmp
imul
out
xor
mov
inc
enter
mov
xor
divl
pop
jle
cmp
arpl
mov
jge
mov
jp
clc
and
lret
sbb
mov
out
data16
lea
pop
inc
and
jl
out
fstps
jne
and
das
shrl
fsubs
les
fiaddl
test
cmpsb
and
lea
xchg
lcall
xor
dec
push
mov
int3
and
sbb
ret
mov
adc
xlat
pop
icebp
or
dec
into
stc
add
inc
or
dec
mov
stc
add
shlb
jo
fnsave
sti
and
xchg
inc
or
sahf
aas
orb
push
fcoml
inc
sbb
and
test
shll
pop
xchg
mov
cmp
pop
sub
xchg
aaa
push
push
add
adc
imul
imul
lret
insb
xor
ja
sbb
sbb
loopne
rolb
add
pop
mov
and
or
or
or
jae
inc
sbb
sbb
sbb
enter
sbb
sbb
or
sbb
sbb
sbb
dec
fiadds
iret
xor
fs
and
jne
enter
and
call
mov
and
rorb
fidivrs
ljmp
test
push
and
loopne
dec
and
pop
add
fiaddl
add
cmp
dec
and
mov
lret
cmp
or
punpcklbw
push
cwtl
out
mov
adc
imul
jno
in
mov
push
popf
dec
aaa
push
mov
cmp
lret
in
aad
inc
cmp
xor
lock
daa
aad
jne
dec
push
and
insb
cmp
cmp
lock
add
mov
je
jge
adc
int
cmp
push
stos
pusha
andl
pop
mov
int
or
jge
sbb
jb
mov
pop
lret
and
xor
lea
cmp
cmpl
shlb
jmp
cmpl
scas
dec
shrb
dec
ret
and
adc
outsl
sub
cmpsb
push
sbb
test
sbb
add
and
jg
stos
cmpsl
ds
mov
rclb
dec
cmpsl
lahf
insb
pop
inc
sbb
push
mov
les
sub
xor
mov
cmp
hlt
ss
notl
mov
bound
xor
cmp
mov
mov
aaa
and
pop
mov
daa
insl
and
dec
cmp
mov
insb
adc
mov
int
cmpsl
pop
test
dec
call
adc
inc
xlat
jl
add
mov
and
mov
scas
jge
push
inc
enter
adc
mov
in
sbbl
fadd
sbb
ficompl
pop
rol
xchg
pop
lahf
add
sbb
adc
mov
loopne
dec
dec
xor
push
cmp
push
js
fildl
jmp
cmp
xor
xchg
mov
movsb
push
lea
adc
or
mov
loopne
pop
jl
std
or
mov
clc
je
push
sub
popa
cmp
sbb
add
or
imul
xor
add
inc
cmp
cmp
jmp
push
fdivs
popf
mov
adc
fdivl
push
sub
or
xchg
xor
adc
cmpb
adc
dec
ds
lcall
bound
aas
xchg
nop
push
and
add
pop
add
push
jecxz
cli
fcmovu
inc
je
sbb
dec
arpl
sbb
jmp
push
adc
idivl
sub
out
dec
js
pop
sbb
ja
in
ljmp
jecxz
xchg
lcall
iret
fimuls
call
push
mov
orl
shll
movl
mov
lea
call
dec
add
add
cmp
jb
pop
test
cmpsb
cmp
dec
pop
pop
push
clc
add
std
jne
pop
adc
test
add
xor
pop
cli
mov
and
add
clc
push
out
int3
adc
mov
fs
mov
pusha
add
andl
xchg
or
inc
fs
push
xor
cmp
push
push
lret
mov
fmull
jp
push
lret
mov
out
out
mov
xchg
fcoms
sahf
mov
xchg
xchg
adc
sahf
dec
sti
stos
pop
clc
adc
add
mov
rorb
mov
adc
jmp
push
sub
jbe
dec
xorl
and
xchg
iret
pop
rclb
pop
stc
add
lret
push
inc
fwait
int3
pop
ret
fiadds
adc
push
aaa
inc
mov
adc
aaa
sahf
or
shlb
lret
push
dec
ljmp
push
sbb
or
data16
dec
ss
xchg
xchg
inc
xor
clc
add
and
push
cwtl
fcmovnbe
mov
xor
loopne
sub
pop
cld
inc
sbb
sbb
dec
cmp
loope
push
xlat
mov
lea
push
add
dec
bound
mov
mov
mov
imul
jmp
ret
mov
xchg
pop
push
js
cmpsb
pop
outsl
and
push
cld
faddl
inc
cmp
or
adc
inc
jmp
call
fdivrp
and
xor
lock
jg
ret
mov
pop
dec
daa
sbb
mov
addb
pop
xchg
and
jnp
push
pop
xor
xchg
and
xor
mov
cmc
pop
jo
add
jge
mov
push
pusha
inc
aad
fildll
or
das
xchg
mov
pusha
lea
sub
das
and
pop
xor
mov
and
jge
rep
stos
je
inc
xor
adc
shl
ret
dec
sbb
shll
rcr
mov
push
push
sbb
pop
shrb
inc
cld
pushf
int3
xchg
or
inc
cwtl
inc
in
add
pop
pushf
pushf
ss
or
pop
call
mov
or
pop
test
je
or
shl
mov
lret
push
lcall
sub
inc
test
adc
add
push
aas
jl
sub
in
cmp
out
adc
or
test
add
and
sbb
decl
xor
cmp
push
push
andl
in
ljmp
out
sub
test
out
push
and
je
pusha
das
cmp
lods
push
aam
sti
inc
mov
lret
mov
mov
cmp
mov
je
cmp
testl
adc
je
clc
lea
sub
xchg
lcall
iret
outsl
outsl
pop
add
loope
subb
sub
shl
or
inc
cmp
sub
rorl
add
dec
rcrl
sub
or
scas
rcll
adc
leave
sbb
loope
add
rep
nop
fmull
mov
adc
ficoms
dec
ja
mov
inc
sbb
or
push
rolb
adc
dec
movsb
sub
fsub
adc
cwtl
clc
scas
adc
ja
sbbl
add
pop
cs
dec
movsb
pop
rcrb
lea
dec
add
push
add
imul
arpl
push
or
dec
aam
cwtl
jp
fs
call
or
lcall
lods
movsl
aam
mov
jns
jns
enter
add
iret
js
decb
rclb
jl
arpl
sbbb
mov
and
test
les
rorl
icebp
es
mov
push
cmp
movb
or
add
cmp
lahf
mov
xchg
js
sub
cmp
mov
ret
and
push
pop
add
pop
dec
mov
adc
dec
fs
bound
jmp
pop
loope
adcb
inc
add
test
mov
mov
adc
andb
jge
mov
lods
push
test
ds
fcompl
loopne
ud0
mov
icebp
ss
add
aam
add
fdivs
add
xchg
pop
or
mov
pop
add
stos
xchg
push
xchg
sbb
imul
inc
sbb
inc
adc
or
shr
daa
jge
in
and
out
rcll
mov
adc
cmpsb
mov
lock
mov
lds
cwtl
or
scas
mov
jl
or
push
xor
or
add
out
xchg
nop
xchg
add
rolb
rclb
pop
xor
ja
int3
cmp
ret
enter
pop
popl
insl
or
inc
lret
jmp
int3
fcoms
leave
testl
les
orl
cmp
nop
addr16
jle
pop
cmpsb
and
and
add
lea
push
cmp
clc
jns
in
inc
sub
jne
lea
add
xchg
inc
movsb
xor
cmp
testl
pop
jbe
fldenv
aam
cmp
mov
mov
rolb
jns
and
and
in
shl
cmp
push
and
ror
daa
outsb
mov
les
dec
repnz
mov
lock
and
xor
jl
pop
shrb
mov
mov
adc
push
jns
cmp
insl
adc
push
clc
adc
aaa
outsb
cmp
cmp
mov
xchg
lea
in
cmp
inc
cmp
test
jl
push
and
in
dec
das
add
adc
pushf
and
jne
xchg
int
xchg
cmpsl
add
add
rcl
movsb
ret
mov
fcomps
cmpl
es
adc
cs
add
push
and
sub
push
inc
xor
pop
inc
xor
dec
pop
adc
push
mov
sub
mov
dec
pop
and
or
and
lret
lcall
enter
lea
sbb
or
jl
jo
push
push
lea
call
pop
ss
or
xor
dec
push
and
cwtl
sbb
push
sbb
ja
dec
dec
insb
adc
pop
or
or
or
mov
jmp
mov
out
rcrl
adc
test
or
push
xor
sub
push
dec
pop
xor
es
mov
adc
pop
cmp
jne
jle
mov
aad
je
mov
lods
mov
mov
fadd
jl
push
push
push
or
sbb
and
or
cmp
or
orb
sbb
xchg
mov
sbb
inc
mov
sti
es
adc
ret
popl
das
mov
sbb
and
add
push
adc
add
mov
sahf
mov
je
add
or
fimull
into
xorb
imul
mov
js
pop
add
ret
das
push
rorb
pushf
enter
sbb
loope
add
adc
clc
mov
mov
push
sbb
pop
sbb
xor
jmp
mov
lock
rcrb
test
push
or
pop
dec
push
shlb
js
xchg
xchg
mov
pushf
iret
xchg
pushf
testb
aam
pushf
push
xor
out
inc
adc
test
dec
in
or
pop
pop
sbb
fwait
dec
pop
pop
push
cwtl
cmp
inc
fimull
movb
adc
sbb
sahf
in
pop
dec
pop
dec
add
mov
loope
out
adc
or
stos
jb
scas
add
add
movsl
lret
test
and
inc
and
mov
cmp
imul
scas
xchg
test
mov
rclb
mov
mov
push
out
jle
decl
jb
mov
das
sub
cmp
push
sbb
adc
push
cmp
sbb
fistpl
cmc
mov
int
dec
and
in
arpl
push
or
or
mov
call
cmp
test
insl
ds
lods
mov
sti
add
test
mov
push
std
stos
pushf
mov
int3
notb
mov
and
pop
xor
ja
std
cmp
pop
insb
or
rcll
lret
rclb
rorl
mov
sub
mov
or
jne
mov
je
mov
xlat
out
aad
jge
addl
cmp
in
sub
xchg
test
xchg
xchg
dec
scas
pop
test
cmp
mov
xchg
cmp
cmp
mov
adc
sarl
rcl
adc
cmc
push
and
mov
daa
stos
add
or
pop
sahf
xor
int3
push
fdivs
adc
push
fnstsw
lock
add
cmp
jae
cmp
jne
aam
pop
push
lea
cmp
lcall
push
mov
pop
stos
outsb
jb
push
xor
jne
mov
inc
push
lcall
mov
out
jmp
cmpb
or
mov
scas
and
and
jae
inc
loopne
loopne
jmp
out
mov
mov
push
jp
pushl
ret
je
cmp
je
inc
shrl
jmp
call
ja
scas
fildl
loopne
pop
xor
pop
adcl
je
push
push
jae
enter
call
push
imul
js
pop
push
dec
sbb
cld
pop
fcompl
std
outsb
jne
pop
decl
inc
ret
sub
mov
pop
pop
add
loopne
clc
push
icebp
pop
ret
fbld
push
mov
push
scas
sub
or
push
add
cmp
lcall
dec
push
sub
lods
mov
cld
mov
andl
inc
divb
dec
dec
xchg
imul
lds
cld
hlt
dec
mov
cmp
and
fs
inc
push
push
andl
imul
sub
out
aaa
add
decb
cmp
inc
mov
inc
cmp
sub
je
shl
andb
add
divl
mov
mov
mov
inc
inc
pop
aad
mov
sbb
cmp
cmp
inc
cmp
add
sbb
sti
pop
xor
mov
inc
lret
or
adc
jne
jl
fwait
int3
jne
dec
jbe
data16
sbb
cmp
mov
dec
add
adc
jns
incl
pop
inc
inc
popa
sub
inc
pop
jne
mov
inc
jmp
and
sub
ja
sbb
dec
cmpb
js
mov
cmp
or
cmp
mov
mov
shr
mov
dec
pop
lock
or
push
inc
adc
push
pop
inc
bound
repz
xchg
cmpl
adc
aas
je
je
push
sbb
push
aas
aaa
psubb
mov
add
gs
add
insl
popa
mov
mov
adc
nop
frstor
mov
push
stos
add
and
xor
mov
or
xorb
mov
fldcw
sub
or
sbb
flds
jg
ret
cwtl
clc
cmp
lods
push
inc
inc
push
popa
jp
jne
or
xor
clc
sbb
add
push
cmpsb
out
rcll
call
adc
nop
fidivs
push
adcb
movsl
push
notl
ss
dec
mov
ret
jmp
push
jo
mov
jne
adc
je
scas
std
cmpsb
cmp
mov
je
inc
cmp
sti
or
sub
inc
aam
xchg
or
push
mov
sub
jp
ret
mov
dec
jge
in
inc
mov
adc
xor
jmp
scas
pop
cmp
pusha
cmp
jns
push
cmp
jae
fiaddl
and
insb
movb
mov
test
ret
xchg
push
icebp
rcll
inc
ljmp
addb
or
mov
xchg
lea
jl
in
cmp
test
pop
add
cmp
pop
lea
inc
jae
andb
mov
lahf
lea
stc
in
xchg
jl
jmp
mov
adc
fadds
add
and
mov
or
cli
sub
xchg
add
push
iret
sar
and
pop
inc
xchg
roll
ljmp
dec
add
inc
add
cmp
jl
mov
aas
cmp
decl
test
mov
push
adc
dec
stos
out
and
faddp
cmc
mov
push
fidivl
mov
mov
int
and
orb
mov
adc
jne
or
add
sbb
inc
or
jno
arpl
cmpsl
insb
pushf
out
loop
daa
mov
mov
pop
and
dec
pop
hlt
dec
cmp
jg
jbe
add
mov
mov
mov
mov
xlat
xchg
test
mov
sbb
test
mov
sub
sahf
or
es
or
lods
sbb
adc
or
movsb
jl
outsb
and
jmp
pushf
in
mov
jne
pop
lea
je
mov
cmp
idivb
cmp
jg
fadds
inc
cmp
jne
xorl
jbe
push
jl
or
faddl
xor
dec
fs
jbe
sub
into
push
sahf
and
dec
test
stos
jbe
dec
mov
push
sbb
jecxz
data16
enter
cmp
adc
push
or
xchg
out
popa
push
sbb
aad
sbb
shlb
xor
cmp
sub
push
pop
mov
pop
cld
sbb
cmp
and
sbb
mov
arpl
mov
pusha
cli
adc
dec
pop
sbb
clc
inc
pop
leave
xchg
mov
pop
scas
xor
mov
ret
mov
sub
test
push
add
push
xor
mov
call
sub
dec
adc
or
leave
jg
sub
mov
or
cmp
push
sbb
xchg
shl
cmp
inc
int3
dec
fnstcw
add
and
xor
adc
push
icebp
sub
adc
cld
sub
mov
aad
and
sub
mov
lret
sub
in
pop
xor
clc
sbb
add
insb
xor
push
ret
dec
stos
pusha
lcall
sbb
insb
and
fdivrl
push
cmpsb
sub
and
nop
dec
inc
mov
shlb
lea
test
adc
adc
push
xor
push
jecxz
jns
mov
pushf
mov
addb
idivb
mov
dec
data16
xor
fwait
sbb
test
or
add
push
inc
addr16
mov
adc
mov
xor
in
jb
inc
cmp
or
or
push
clc
and
add
xchg
xchg
inc
pop
mov
outsl
add
je
add
pushf
push
out
jnp
pop
inc
out
jb
imul
mov
andb
adc
jge
mov
ja
out
sbb
movsb
movsl
sahf
xor
push
mov
stos
lea
outsl
psllw
test
je
mov
xchg
add
cmp
ja
fninit
pop
int3
push
cld
mov
inc
es
jo
jmp
add
ret
aaa
loop
orl
movl
pop
clc
sti
push
cmp
pushf
mov
jbe
push
push
movsl
movsl
pop
mov
ja
jmp
cmpb
dec
je
inc
dec
jo
inc
or
aad
rclb
jae
test
popf
hlt
push
xchg
loop
or
ss
rorb
xlat
push
jecxz
loop
cli
ret
push
pop
and
adc
xchg
push
xchg
jmp
cltd
fdivr
sub
cld
mov
mov
movsb
les
scas
and
pusha
call
je
sahf
mov
sbb
adc
push
cmp
sbb
stos
imul
sbb
cmpsl
adc
jno
add
xorl
mov
pusha
mov
hlt
mov
movb
and
aaa
test
inc
push
shlb
sbb
xor
push
inc
fadds
push
sub
arpl
mov
push
aam
inc
ljmp
rcrb
ret
xor
cmc
mov
lods
adc
cltd
inc
lret
mov
std
cmp
push
imul
dec
cld
push
imul
add
in
test
je
cmc
in
mov
add
jmp
xor
je
jb
cmp
mov
mov
and
js
mov
es
dec
inc
jb
or
xchg
enter
mov
outsb
fisttps
popa
jb
or
push
popf
cmp
pop
imul
and
loopne
xchg
mov
mov
adc
movb
push
clc
aam
mov
adc
sub
je
push
pop
mov
scas
cmp
testl
mov
mov
mov
mov
jmp
ret
loope
lea
push
mov
mov
push
movsb
and
sahf
in
loop
cli
push
test
inc
in
sbb
adc
mov
add
xor
xor
sti
or
add
push
xorl
mov
in
sbb
dec
or
cltd
jle
rolb
jmp
divb
inc
jae
jmp
std
jmp
cld
pusha
idivb
lds
pop
inc
lds
jmp
mov
mov
jl
adc
xlat
loope
xor
cmp
test
rcll
pmullw
jo
mov
into
mov
adc
inc
and
sub
or
sub
scas
cmp
add
ja
or
pushf
push
mov
sub
adc
loop
or
lods
add
dec
xor
cmp
jnp
cmp
push
mov
jg
mov
mov
out
jae
lods
lock
xor
inc
pop
sub
leave
pop
scas
push
lods
mov
data16
sbb
pop
add
pop
sub
stos
push
in
loopne
add
cmp
lock
sbb
mov
adc
sub
ret
xchg
inc
push
imul
sarb
jp
inc
push
popf
add
mov
roll
cmp
jbe
cmp
jb
adc
sbb
and
sti
add
sub
sub
movsl
jmp
cmp
jmp
add
test
fwait
cmp
mov
int3
jbe
repz
lock
mov
mov
outsb
mov
or
xlat
xor
add
int3
lcall
dec
add
add
xchg
inc
inc
inc
inc
jg
out
or
pop
push
push
push
dec
jns
out
cmp
sub
inc
mov
mov
cmp
in
call
iret
repz
hlt
hlt
clc
clc
outsl
shll
xor
sahf
ja
or
jmp
push
pushf
mov
jne
loopne
inc
fildl
repz
xor
push
inc
sbb
dec
outsb
mov
into
jl
cld
jmp
std
cld
out
adc
neg
fimuls
sarb
fnsave
sub
dec
push
jo
fisubs
fiaddl
je
add
dec
lods
mov
inc
fsubrs
mov
dec
mov
out
add
nop
dec
dec
ret
adc
pop
add
aaa
xor
es
mov
cmp
repz
in
hlt
iret
repz
sbb
sbb
cmp
repz
adc
adc
cmp
repz
or
out
sbb
aas
and
sub
cmp
das
push
add
andl
adc
in
adc
cmpl
addb
js
test
xlat
mov
lea
sub
mov
jle
je
cld
pop
outsl
pop
loop
leave
jnp
mov
sti
sub
push
pop
mov
rolb
lods
push
std
jne
orl
add
and
movsl
pusha
add
jl
cs
scas
xor
jg
pusha
insl
mov
je
adc
stc
mov
dec
js
or
outsl
mov
pop
pop
mov
mov
push
jne
cs
jne
pop
add
test
inc
sbb
jl
adc
lock
movzbl
jle
or
repnz
add
or
xlat
punpckhbw
movsbl
push
xor
out
in
adc
or
mov
and
lcall
sahf
jmp
aaa
or
andb
mov
hlt
jb
sbb
mov
lret
add
or
scas
sbb
icebp
mov
sub
fcomps
mov
mov
negb
leave
sub
dec
sbb
pop
movsl
aas
mov
sub
idivb
sbb
jne
and
js
mov
je
lods
ja
mov
sub
inc
clc
jbe
testb
add
nop
shlb
or
cs
in
js
adc
loope
add
mov
mov
paddd
pop
mov
and
sub
push
mov
mov
mov
jne
cld
inc
add
ret
sbb
sbb
or
mov
mov
stos
or
ret
or
loope
cmp
je
test
je
and
push
mov
lock
adc
mov
mov
mov
lock
icebp
jmp
iret
xor
sub
xor
and
insb
jo
mov
rcr
or
and
inc
cld
cmp
je
orl
cmp
je
outsb
out
sahf
out
lcall
xchg
inc
ficomps
outsb
or
cld
pop
incb
or
push
mov
into
inc
adc
mov
jle
xor
mov
inc
cmp
movsl
or
adc
in
std
ja
add
lock
lea
mov
fsubrs
and
mov
loopne
mov
bound
mov
jl
push
cmpsb
shll
fucomip
mov
push
mov
faddl
sbb
insb
inc
js
pop
jecxz
mov
notl
inc
mov
pop
dec
lret
mov
mov
cmpsb
push
push
shll
ja
scas
dec
dec
not
pop
sbb
inc
mov
daa
push
push
mov
inc
dec
rcrb
dec
jle
les
push
add
or
test
data16
or
push
mov
jp
or
cwtl
negl
or
mov
ja
and
sub
cmp
push
aaa
adc
jmp
dec
mov
or
inc
mov
push
cld
sub
shr
iret
imul
pusha
mov
dec
mov
nop
ss
adc
lea
mov
hlt
mov
or
adc
pop
icebp
sbb
sar
ret
add
pop
jecxz
imul
push
mov
dec
mov
shll
add
shll
pop
mov
sub
ja
jnp
and
jmp
lea
inc
cmp
inc
inc
push
push
xchg
push
pop
inc
mov
testl
pop
add
pop
add
mov
adc
add
sar
pop
fsub
push
cltd
hlt
mov
scas
and
sti
add
in
mov
dec
pop
cmp
jbe
mov
mov
roll
jno
and
cmp
je
stos
das
fwait
fwait
xorb
inc
cmp
mov
aas
clc
out
not
and
add
shl
aam
dec
loopne
cmp
lahf
sub
rcr
sarb
lods
push
or
jne
jp
sbb
call
mov
pop
roll
es
bound
outsb
or
loope
sub
sbb
pusha
mov
xor
paddd
mov
jae
cmpb
push
mov
ljmp
sbb
sub
loopne
lock
adc
dec
stos
push
mov
ljmp
sub
out
cmp
hlt
ret
jecxz
xor
testl
sbb
jle
es
add
movsb
subb
mov
sbb
push
push
call
aas
gs
push
outsl
mov
jae
adc
push
incb
adc
inc
cmp
jle
lods
and
and
divb
jo
mov
adc
xor
jge
shr
mov
in
rcrb
mov
push
enter
sbb
bound
cmc
leave
dec
or
les
jbe
insl
mov
adc
movsl
mov
xor
lret
add
sbb
int
jbe
cmpsb
mov
pusha
lret
cmp
pop
jge
pop
lahf
fidivrs
sar
cmp
jge
or
push
sbb
cmp
mov
mov
and
not
call
adc
mov
push
add
jae
inc
mov
and
decb
mov
jne
add
cmp
xor
push
jne
mov
cmp
dec
adc
add
pop
dec
jae
cmpl
ja
or
outsb
jmp
es
ljmp
or
xor
cmp
mov
mov
push
cmp
pop
test
dec
add
cli
or
loop
in
cld
pop
mov
inc
adc
xor
aaa
mov
ret
adc
dec
inc
or
es
push
push
xchg
ss
ja
jno
mov
xlat
je
imul
pop
cs
sar
fldt
jne
int
and
pop
test
jl
shl
inc
jmp
js
sbb
stc
xchg
sub
push
lods
decb
sar
dec
cmp
jle
mov
fwait
cmpsb
aas
and
mov
dec
popa
add
cmpsb
mov
or
add
rcr
das
js
ret
out
and
mov
decb
push
xorb
in
and
jmp
dec
loopne
lock
push
sub
or
push
insb
xor
mov
xchg
or
add
add
lret
sub
testl
mov
ror
jl
jle
inc
mov
add
push
inc
or
cmp
push
aas
dec
push
decb
jge
subb
incb
mov
les
or
adc
push
or
das
push
or
mov
jnp
arpl
add
leave
je
mov
pop
icebp
andb
and
add
mov
add
jae
hlt
in
lea
jne,pt
cmp
add
aad
inc
or
xor
inc
add
add
popf
xor
shll
mov
popf
jp
sub
and
xor
pop
je
fsubrl
cmp
les
cmp
mov
xor
data16
aad
addl
data16
je
xor
or
add
adc
xchg
out
or
dec
inc
mov
lds
clc
cmp
rorb
mov
adc
inc
xchg
test
sahf
pop
sahf
loopne
ret
outsb
imul
sbbb
add
mov
push
dec
cmp
sub
out
jns
push
adc
and
notb
xchg
lea
ja
lea
cld
jge
stos
dec
in
mov
psubsb
inc
cld
lock
test
je
adc
sub
sub
icebp
pop
lock
ljmp
testl
mov
dec
or
orl
sahf
inc
test
jl
mov
push
test
hlt
mov
ds
inc
jne
or
mov
and
cmpsl
push
lds
test
add
mov
test
sbb
or
std
ss
cmpsl
mov
repz
push
aad
fmul
dec
rclb
xor
push
dec
cmp
scas
cmp
and
cmp
jne
loop
ja
int
fsubs
mov
shrl
adc
mov
mov
lea
dec
lock
cwtl
and
fidivrl
sbb
arpl
push
push
in
mov
adc
popf
ret
sbb
cld
and
dec
inc
mov
xor
pusha
add
sub
pop
sub
push
int3
mov
clc
jae
orb
incb
movl
add
fdivrl
sbb
outsb
jl
cmp
push
je
jbe
sbb
stos
popa
lock
sbb
mov
cmp
mov
adc
push
pop
adc
pop
push
mov
add
jne
or
sub
or
jle
pop
test
jb
jne
clc
xchg
sbb
aas
jb
inc
daa
cmp
ret
lods
add
push
or
orl
or
lock
loope
add
xor
jbe
fdivr
in
or
mov
test
or
adc
sbb
add
mov
jle
cmp
pop
loopne
inc
mov
pop
out
psubd
mov
loopne
cmp
inc
add
pop
dec
idiv
imul
inc
adc
or
push
push
dec
test
jmp
test
jne
or
mov
lea
sarb
bnd
xor
daa
lret
enter
sub
sbb
ret
ss
xchg
xor
ret
sti
xlat
js
push
lods
in
sub
sar
sub
lock
imul
out
mov
add
andb
cmp
and
adc
hlt
lret
jne
mov
js
mov
aaa
cmp
push
jp
lahf
add
sarb
movsb
mov
and
sub
sub
fidivrl
add
add
cmp
cmp
or
add
adc
pop
popa
rcrl
and
add
jne
jb
ret
add
inc
cmp
lea
sti
ja
movsb
mov
mov
cmp
jl
cltd
mov
push
adc
iret
flds
jge
jb
mov
cmp
adc
sbb
pop
adc
push
rcll
lods
dec
sbb
or
dec
cmp
push
ljmp
pop
mov
jns
fs
sub
mov
out
add
cld
adc
sbbl
jecxz,pt
sbb
add
push
sub
and
inc
and
push
ret
mov
push
ljmp
vpsrlq
push
cld
mov
jo
adc
inc
cmp
add
pop
xchg
roll
mov
add
or
adc
idivb
jmp
sbb
lret
add
test
cmp
dec
js
pop
or
add
mov
xchg
popf
cmp
inc
je
xor
pop
xor
jmp
jmp
rcll
fsubr
xor
sbb
xor
jge
cmc
xlat
sbb
jno
adc
lea
mov
std
mov
ret
add
mov
dec
jae
add
sub
push
inc
sbb
inc
nop
and
loop
scas
add
cmpb
sbbl
inc
mov
test
jne
jbe
add
lds
mov
jne
jmp
mov
test
sub
mov
int3
jmp
sub
cmp
sbbb
rol
jmp
movsb
add
jno
mov
jae
hlt
push
data16
insb
jae
notl
inc
mov
inc
inc
lea
or
sub
test
sti
mov
adc
adc
inc
sarl
xor
jmp
cmpsb
add
jmp
pop
andb
push
ret
mov
dec
fldl
adc
mov
and
pusha
xor
inc
fs
push
ss
stos
inc
push
add
push
inc
outsl
or
push
popf
mov
push
je
push
or
mov
bt
sub
mov
push
lahf
jb
loop
call
ret
mov
fmuls
jb
and
hlt
daa
loope
sahf
fwait
std
jmp
lcall
fs
fldcw
dec
adc
test
pop
cli
sbb
jne
jmp
cmp
push
mov
pop
inc
dec
je
test
aas
jne
pop
add
out
mov
xor
das
rorb
sub
je
out
xor
adc
mov
je
push
xorb
push
shrl
mov
scas
xchg
dec
xor
leave
push
push
add
sub
js
cmp
or
jb
sbb
lret
push
add
shr
mov
stos
or
or
add
inc
gs
cltd
jg
lcall
adc
mov
cmp
add
add
pop
push
push
inc
add
loopne
sbb
int3
jmp
inc
loopne
loopne
outsl
loope
mull
add
xor
cmp
jle
jp
outsb
adc
add
adc
cmp
sbb
insl
gs
add
fcmovbe
xor
or
mov
sbb
xchg
je
push
lock
add
or
outsb
add
nop
and
test
pop
sahf
bsf
js
cs
mov
aaa
sti
int3
loope
and
popw
fwait
outsl
mov
inc
scas
jmp
dec
lock
lock
jp
xor
testb
lock
add
inc
jl
lock
stos
jg
sub
nop
movsb
push
pop
pop
rolb
leave
and
andb
movsb
data16
mov
cli
fbstp
enter
shll
andb
fadds
jmp
sbb
and
adc
je
stos
jl
stos
jno
pop
pminsw
jecxz
sub
test
push
lea
jne
aaa
sub
mov
repz
sub
ret
in
popf
add
inc
sbb
lds
ds
in
pop
adc
or
pop
dec
lea
setl
xchg
push
fmul
inc
lods
sub
icebp
add
and
and
fld
jno
add
or
addr16
and
xchg
pop
push
sbb
mov
sbb
push
xchg
sbb
loopne
arpl
loope
sbb
stc
test
push
insb
fmull
cmp
out
pop
jmp
pop
mulb
inc
adc
and
stos
movsb
icebp
icebp
or
clc
or
icebp
int3
popa
sbb
inc
jmp
sub
xor
call
es
xor
jp
jge
cmp
cltd
sbb
mov
popa
jl
and
add
fldt
mov
inc
and
sti
dec
jge
insl
and
add
repnz
pusha
adc
daa
sub
or
mov
ja
ja
dec
add
mov
xor
pop
pop
or
or
or
push
pushf
subb
dec
clc
push
jnp
or
test
mov
cwtl
jle
or
push
insb
ret
loop
or
pop
or
dec
mov
lea
ds
mov
ror
enter
stc
sbb
push
mov
sbb
sbb
xchg
es
inc
cld
or
adc
sub
fadds
out
or
inc
or
add
add
sub
nop
push
cwtl
fidivl
fucomip
cs
shlb
push
adc
scas
xchg
adc
cwtl
ficompl
and
or
push
je
cmp
rep
fs
push
dec
fidivrl
sub
sbb
adc
aaa
lock
loope
push
mov
inc
pop
adc
out
in
xchg
inc
cmp
pop
nop
dec
push
push
mov
fsubrl
nop
pop
xor
mov
sarl
in
push
hlt
cld
add
or
mov
fdivrl
clc
mov
or
pop
insb
fdivl
jg
mov
dec
cmp
add
cli
fisubrs
sub
sub
sub
out
xchg
ljmp
add
or
adc
lcall
adc
lea
je
js
test
clc
test
xor
add
aaa
lods
push
adc
bound
jle
int3
inc
mov
adc
dec
add
mov
inc
jne
incb
les
xor
call
push
inc
mov
outsl
lldt
shl
incl
movsb
push
push
add
call
decl
repz
outsl
mov
xor
dec
rolb
add
addl
hlt
or
add
mov
push
gs
call
fldt
sub
add
or
mov
mov
cld
roll
inc
add
add
movsb
push
or
int3
shlb
lcall
xor
adc
out
dec
pushl
cmp
mov
mov
adc
sub
sbb
inc
add
insl
add
idivb
push
mov
or
std
addl
mov
cli
orb
popa
add
imul
fidivl
adc
cmp
cmp
cmp
push
push
out
xchg
push
pop
sbb
inc
add
std
mov
cmp
jl
loopne
adc
add
je
add
lmsw
push
js
arpl
cs
inc
cmp
xlat
add
mov
xchg
add
mov
and
push
xchg
ds
mov
mov
popa
aaa
inc
lods
cs
ror
insb
add
aaa
mov
dec
inc
xor
and
std
or
adc
mov
sub
js
les
and
sbb
add
icebp
rcrb
clc
jne
ret
pop
fidivs
nop
mov
js
mov
add
xor
fsubrp
cmpsb
in
sbb
jmp
mov
gs
in
pop
outsl
or
xchg
jnp
inc
adc
add
clc
lock
pop
sbb
add
aas
add
mov
sub
push
push
add
fimuls
aam
cmpsl
cmp
das
sbb
pop
jg
testb
shlb
or
loopne
mov
inc
or
add
lods
jne
mov
pop
bound
lret
add
jl
xchg
push
mov
inc
inc
xchg
push
loope
outsl
xor
je
add
mov
lock
fcomi
mov
push
push
dec
add
xchg
add
call
clc
mov
test
and
push
lea
int3
movsb
lods
call
filds
sbb
cld
pusha
and
mov
pop
inc
mulb
cmovae
cmp
mov
pop
jmp
pop
incl
addl
push
adc
into
mov
mov
sub
mov
add
mov
rorl
jo
xor
add
xor
push
dec
push
mov
cmp
cs
sub
mov
fwait
mov
cs
push
and
inc
orl
add
mov
sahf
or
and
and
sbb
sub
xchg
or
jg
cmp
dec
sbb
push
jbe
push
and
or
pop
mov
sbb
psubb
test
popa
sub
gs
insb
mov
outsb
xchg
call
add
jo
mov
add
dec
push
call
fs
cmp
dec
pavgb
mov
add
add
int3
je
inc
pop
icebp
call
mov
in
mov
jle
cmp
and
xchg
mov
inc
std
dec
mov
cmp
mov
ljmp
push
mov
add
data16
imul
lea
cld
push
cmp
test
mov
adc
test
rol
add
or
push
roll
sarb
mov
leave
cli
push
outsb
add
push
push
mov
call
jge
and
in
fs
push
sbb
mov
push
push
lock
call
sar
pop
loop
je
lahf
ds
add
mov
test
sub
mov
mov
xor
push
mov
inc
pop
iret
add
lea
inc
add
or
sbb
mov
lods
pop
lods
jle
mov
int3
or
push
cld
and
inc
jmp
fisubrl
mov
pop
sahf
pop
or
mov
lret
dec
or
data16
xchg
mov
pop
cld
xor
add
rcr
add
je
and
push
je
add
js,pt
cmp
cmp
testl
mov
inc
decl
or
fisubrl
outsb
xlat
mov
hlt
inc
xor
or
mov
subb
ficoms
or
cmpl
notb
mov
push
push
add
test
addl
mov
push
add
mov
jle
add
clc
sbb
add
cld
push
sub
sub
jl
arpl
xor
clc
scas
cmpsb
add
mov
xor
inc
or
inc
add
ret
dec
shr
or
dec
sbb
ljmp
and
rcr
cli
mov
mov
sbb
xorb
outsb
adc
push
cld
xchg
pop
push
push
hlt
popa
rolb
push
xchg
lcall
jbe
and
std
add
push
imul
je
out
mov
mov
int3
pop
cmp
adc
pop
mov
push
pop
pop
clc
fsubr
or
ret
fidivrs
dec
in
mov
leave
call
shlb
push
mov
adc
std
mov
mov
mov
adc
fidivrl
add
xor
add
mov
ret
cmp
shlb
mov
inc
mov
mov
sub
adc
loope
arpl
or
or
mov
push
or
xor
inc
add
lcall
roll
mulb
test
add
icebp
push
loope
push
pop
call
mov
push
sbb
push
sbb
dec
push
lock
mov
test
mov
jno
test
xchg
adc
call
or
cli
in
jmp
unpckhps
push
mov
sbb
out
jb
xchg
jecxz
inc
push
nop
stos
sub
pop
pushl
pushf
xchg
clc
push
push
rol
add
pop
xorb
rolb
call
jge
outsl
outsl
fmul
cmp
add
sbb
and
movb
push
adc
and
int3
shll
int3
xor
mov
push
rorb
add
sub
or
dec
mov
push
cmc
sarb
jmp
adc
jo
jmp
movsl
cmp
cmp
xchg
stc
jmp
sti
mov
and
dec
or
inc
pop
nop
push
lret
xchg
movsl
pop
xor
xor
pop
adc
push
imulb
cmp
clc
dec
ret
enter
testb
adc
andb
add
push
clc
pop
jg
add
add
decl
mov
add
cmp
loope
popf
mov
cs
pop
popa
mov
je
out
sub
push
push
out
xchg
xor
mov
dec
mov
dec
test
jnp
mov
jmp
rcrl
sbb
mov
mov
jne
mov
push
push
cmpsb
jo
rol
or
push
out
gs
sub
sti
push
jge
pushl
rolb
xor
push
lods
popf
ja
outsb
or
pusha
add
add
insb
push
rorb
imul
arpl
sbb
or
xor
cmp
sbb
jecxz
cld
mov
inc
stos
shlb
xchg
call
cld
fists
xor
mov
add
pop
mov
add
jg
cmc
es
mov
outsb
or
pop
cli
mov
mov
add
sub
push
mov
ret
mov
mov
xchg
incb
cli
inc
pop
mov
orl
xor
pop
sub
lods
xor
push
psubb
ret
inc
dec
push
or
sbb
cmp
xor
je
xchg
add
inc
xor
xor
and
inc
aam
add
fs
fdivr
adc
xchg
outsl
inc
inc
inc
push
lods
leave
outsl
pop
adc
push
xorl
sub
shl
clc
aam
shrb
ds
jmp
or
mov
out
jge
inc
cld
inc
mov
in
adc
jbe
dec
call
mov
or
mov
lret
jge
mov
stc
outsl
fwait
call
and
movsl
mov
in
call
jmp
jmp
out
lock
aas
fcomps
jmp
and
loopne
ret
hlt
les
lcall
movsl
mov
and
push
daa
rcr
pop
lock
mov
push
rcrb
pop
ret
popf
sub
mov
xor
inc
sub
test
push
jo
aad
pushf
pop
test
pop
cmp
add
mov
mov
sub
xor
sbb
cmp
stos
add
test
cld
push
je
pop
jne
push
sbb
std
daa
fisubs
outsl
fwait
xor
incl
cmp
mov
sbb
adc
int
repnz
add
dec
fs
cmp
int3
inc
sub
clc
add
loopne
pop
out
jo
pop
mov
fiadds
push
aas
sbb
pop
xchg
or
out
lea
lods
shll
mov
into
mov
push
loope
sub
or
js
jbe
sub
leave
push
mov
mov
add
ret
dec
add
nop
insl
cmp
arpl
ja
add
and
test
push
dec
xor
push
push
xor
les
inc
mov
out
push
ss
in
mov
mov
xor
test
shll
in
push
pop
icebp
fistpl
or
decl
cmp
nop
push
cltd
add
cmp
add
or
mov
mov
push
mov
adc
sbb
hlt
es
rcr
in
xchg
stos
popa
aas
ret
leave
add
std
push
and
add
insb
addr16
into
in
or
cmp
dec
xor
cwtl
cmp
aaa
pop
xor
sbb
add
int3
dec
out
cmpsb
adc
push
inc
int
adc
ljmp
jle
inc
pushl
lock
lea
pop
add
push
pop
out
gs
mov
mov
js
xchg
aam
loope
psubsb
add
loopne
mov
loope
sub
je
inc
lea
jo
inc
and
rcr
inc
push
cmpb
lcall
push
pusha
sarl
xlat
jne
mov
movl
lock
push
cs
xchg
aas
sub
inc
addr16
lret
in
add
dec
jmp
sbb
addb
std
jle
adc
push
popa
movd
in
mov
and
into
cmp
adc
test
xor
lock
xor
xor
or
idiv
and
or
sub
add
outsl
faddp
das
jp
add
cmpsl
test
push
push
inc
jmp
adcl
add
shl
loop
outsl
test
orl
jo
leave
mov
or
cmpsb
shrb
xchg
in
cmpsb
mov
add
jmp
insb
dec
push
add
push
and
ret
inc
cmp
jae
mov
fmuls
in
call
or
stos
fimull
mov
and
inc
pop
xchg
mov
pop
sbb
lock
out
jo
mov
inc
inc
and
out
cmp
and
gs
int
and
mov
lods
mov
inc
sbb
ss
testb
jnp
cld
push
push
push
enter
adc
and
clc
and
xor
pop
cltd
lods
xor
inc
mov
push
add
add
adc
or
push
outsl
xchg
lea
leave
xchg
lock
jg
jmp
add
jne
pop
mov
mov
decl
decb
adc
mov
orl
loop
adc
mov
bound
das
lods
fs
mov
sbb
sub
sbb
jge
call
mov
push
call
pop
lods
and
clc
jmp
mov
imul
call
in
testb
or
out
mov
je
mov
rolb
mov
clc
add
and
out
orb
mov
sub
test
in
lea
pop
or
pop
add
popa
dec
push
sub
jl
je
hlt
rcrb
pop
jne
shrb
test
mov
scas
fs
aaa
repnz
and
sub
and
movsl
mov
daa
adc
mov
add
mov
iret
mov
xchg
out
adc
cmpsb
cmp
cmpsl
cmp
pop
movq
lock
xchg
loope
clc
or
inc
test
data16
add
add
xor
mov
dec
fimull
fdivs
add
mov
arpl
decb
add
int3
pop
sub
cmp
pop
xor
clc
aaa
mov
shlb
push
dec
sbbb
cli
fldcw
jnp
push
lods
sub
inc
in
cmp
call
call
pop
call
or
add
test
imul
mov
mov
pop
xor
add
mov
test
aad
mov
aam
inc
mulb
mov
xor
mov
push
add
mov
insb
flds
jbe
push
push
je
cld
lock
lods
adc
shr
aaa
decl
aam
mov
test
add
stc
jmp
sbb
jne
xor
cmp
mov
xchg
jno
ret
call
or
mov
js
pop
mov
inc
je
jle
add
and
int
clc
mov
cli
pop
push
cmp
push
inc
cmp
push
pop
pcmpeqd
je
in
mov
bound
adcb
sub
ss
or
mov
mov
cli
jne
or
enter
push
add
mov
enter
xor
push
jp
add
cmp
fiaddl
mov
orl
cmc
testl
or
out
rorb
fwait
std
inc
adc
cmp
les
push
int3
test
jmp
fistps
mov
xor
sti
incl
mov
xchg
mov
lea
cmpsb
incl
pop
and
out
mov
xor
rcll
push
roll
xor
mov
xchg
jns
jg
sbb
adc
jne,pn
adc
or
cli
adc
add
mov
add
ljmp
pop
adc
in
or
dec
push
movsb
inc
adc
adc
lock
mov
je
int3
mov
add
mov
test
in
incl
sbb
push
sbbl
add
psubusb
push
pop
daa
test
push
mov
call
mov
xor
outsl
push
push
and
and
outsb
ret
decb
push
clc
int3
jmp
jge
add
lock
or
loopne
cmp
orb
inc
or
add
lcall
or
push
int3
xchg
cmp
sbb
pop
and
rolb
cld
sbb
mov
pushf
mov
or
push
push
jg
push
js
call
subl
sbb
mov
movsb
push
pop
or
lahf
call
or
xchg
xchg
dec
pop
add
call
inc
cs
add
scas
or
mov
in
cmpsb
pop
sti
adc
lret
add
iretw
push
rorb
out
sub
shlb
ret
mov
or
call
dec
insl
mov
and
mov
nop
xor
add
orl
std
call
aam
mov
jo
movsl
mov
dec
decb
daa
or
pop
adc
sub
fmuls
push
and
test
dec
dec
test
adc
pop
insb
xchg
nop
pop
ss
mov
pop
pop
cli
outsl
pop
je
jne
jmp
inc
or
enter
lahf
cld
inc
lods
xchg
lock
adc
fimull
lea
push
mov
push
sbb
aam
inc
sub
xor
loop
pop
push
lea
pushl
pop
sti
pop
subb
loop
inc
cmp
adc
sti
or
xchg
idiv
dec
ss
mov
icebp
or
fsubrs
jmp
mov
stos
leave
mov
mov
lea
mov
inc
or
mov
call
push
mov
cmp
outsl
add
dec
jge
jmp
mov
or
data16
push
ror
push
std
pop
dec
rorl
jle
adc
sub
shr
addr16
pop
out
inc
pushl
lock
jge
adc
and
sarl
je
cli
mov
sbb
sbb
add
cmp
cli
mov
icebp
jmp
lea
inc
xor
in
cli
mov
stc
sbb
pop
ljmp
add
mov
pop
mov
mov
xchg
sbb
addr16
cmp
fs
fucomip
mov
or
decl
lret
mov
pop
arpl
aas
insb
xchg
sbb
insb
mov
leave
xlat
cmpb
mov
jbe
dec
sbb
push
push
xchg
xor
sbb
mov
mov
dec
lret
sub
jb
aam
push
sub
or
sbb
pop
inc
pop
enter
in
ud0
or
and
cmp
and
jmp
xor
dec
or
and
fdivrp
mov
and
rclb
lock
incb
add
jmp
pop
xchg
mov
mov
push
cmp
notb
call
mov
lret
xchg
test
jle
data16
adc
stc
and
fcomps
js
sub
rolb
cs
cmp
jl
xor
cmp
push
and
decb
or
mov
mov
cs
push
push
pop
insb
sbb
sbbl
mov
jmp
cld
lods
mov
gs
addb
xchg
push
cmp
subl
mov
mov
or
test
sbb
sahf
jbe
insb
fisttps
add
sahf
xor
fs
clc
fisubrs
pop
cld
push
lcall
mov
xchg
cmp
mov
lock
adc
adc
lock
mov
dec
ret
call
or
add
mov
and
xchg
adc
cmp
pusha
in
xor
add
mov
icebp
add
shlb
cmc
xor
or
push
push
dec
push
sub
add
std
das
rorb
xchg
rol
loopne
adc
dec
loope
or
inc
call
inc
lahf
push
cs
fdivs
cmp
jg
lods
jge
xor
jmp
mov
add
cld
loopne
rorl
add
cmc
xor
push
addr16
lea
cmp
push
decb
cmp
mov
mov
cld
push
sub
js
cld
mov
lahf
cli
fldt
lcall
lret
test
push
data16
and
cmp
and
push
mov
test
std
inc
add
adc
xchg
push
cli
push
mov
xor
add
and
outsb
or
rcll
test
push
sbb
int3
addb
popa
int3
scas
shr
outsl
std
xor
jae
sbb
sbb
jne
push
xchg
push
jne
sbb
xor
mov
cwtl
xchg
test
loope
cmp
mov
ljmp
fdecstp
scas
data16
xor
mov
cltd
sbb
testl
aam
cmp
or
or
lret
cmp
aad
or
mov
sbb
xor
push
add
lods
dec
inc
insl
xor
jo
push
rolb
xchg
in
jge
push
add
jmp
loopne
or
pop
jle
stos
int3
pop
stos
cs
pop
inc
mov
mov
aam
aaa
sbb
fcompl
mov
push
cmp
mulb
xchg
cmp
fistl
mov
xor
imul
cmp
push
mov
mov
push
dec
pop
imul
add
repnz
stos
jge
pop
ds
add
xor
jl
daa
jne
xor
or
add
push
ljmp
jmp
push
insb
lret
test
add
pop
add
cs
inc
add
test
xor
and
or
daa
jo
xor
sub
mov
sub
push
inc
lods
in
loope
adc
cmp
add
or
pusha
or
insl
mov
ret
andb
xchg
mov
or
inc
fnstcw
fs
sub
adc
dec
mov
cmp
sbb
lret
mov
add
cld
clc
and
adc
pop
pop
in
jae
sti
sbb
xor
mov
insb
stos
lret
or
sbb
mov
adc
pop
adc
push
add
call
adc
mov
clc
leave
imul
mov
dec
mov
and
push
push
push
push
push
les
dec
les
inc
add
cmp
hlt
gs
xchg
mov
pop
dec
xchg
rcll
jo
sbb
test
add
jnp
add
out
and
xchg
in
in
push
insl
imul
cmp
jns
ret
loop
push
xor
push
pop
lahf
sahf
inc
ljmp
add
mov
ljmp
jmp
mov
inc
sahf
push
inc
add
mov
jnp
mov
dec
mov
jb
jo
push
push
inc
or
incl
bound
pushf
test
adc
mov
shll
call
ret
test
jbe
mov
clc
loope
fcomps
jmp
je
into
cmp
les
push
dec
add
pop
or
xor
mov
es
dec
cld
or
popf
pop
cld
adc
or
decl
in
insl
out
adc
mov
es
pushf
sub
cmp
sbb
sub
enter
add
xchg
add
dec
mov
cli
push
push
icebp
pop
lock
add
fcomps
outsl
test
ret
jbe
or
roll
and
jo
cmp
mov
jl
xor
jae
push
ret
lock
out
insb
outsb
js
insb
insb
push
push
in
sar
cli
fisttpl
fmull
clc
cs
sar
data16
push
jecxz
push
stos
mov
push
outsb
pop
test
insb
xor
in
xchg
mov
and
fstpt
out
xchg
mov
imul
inc
cmp
fdivs
add
push
mov
cs
mov
rorl
xchg
xor
inc
cld
inc
jns
cmp
scas
dec
push
pmaxub
scas
fwait
push
and
mov
lcall
jo
sub
add
shl
shlb
pop
jne
addl
dec
cs
pop
and
cli
ficompl
sbb
out
mov
add
movups
push
lea
loope
icebp
bswap
inc
lret
int3
fwait
lea
inc
jb
js
shrb
dec
test
xor
and
mov
stos
jl
pop
add
pop
mov
mov
jbe
dec
repz
imul
push
push
push
inc
or
push
pop
or
std
cmp
jo
imul
pusha
and
je
fidivl
addr16
cs
inc
sti
inc
mov
call
add
mov
push
fadd
cs
aam
push
mov
sbb
out
sub
add
adc
je
orl
paddb
push
push
out
cmp
inc
lds
cmp
add
dec
push
je
push
mov
jno
mov
pusha
dec
jmp
incl
jne
addr16
shr
inc
imul
je
or
push
das
mov
dec
les
pop
add
dec
xor
mov
lds
hlt
dec
ljmp
bound
jae
mov
inc
add
xchg
inc
leave
push
fcomps
mov
negb
orl
or
xor
mov
test
int3
dec
and
fcoms
cld
dec
in
xor
mov
out
jmp
imul
sbb
cmp
clc
ja
add
mov
mov
add
test
add
les
adc
mov
lcall
ret
in
ret
js
or
enter
push
shrd
or
mov
ds
orl
lods
cmp
xor
inc
outsb
add
dec
add
test
add
mov
add
jo
or
xor
mov
cmp
nop
nop
mov
add
xor
jle
addr16
pusha
cmp
std
inc
mov
icebp
jne
push
mov
decl
add
inc
test
add
or
pop
imul
push
xor
call
mov
out
inc
dec
pop
dec
inc
xor
data16
pop
fdivrs
inc
ret
lcall
jbe
call
dec
sbb
inc
sbb
in
test
mov
vcvtps2pd
inc
xchg
lock
mov
sahf
dec
mov
xchg
lcall
cmp
pop
jb
pop
add
imul
mov
sub
loop
push
fimuls
inc
mov
push
int3
imul
pop
loopne
mov
shlb
orb
das
jp
mov
outsl
jae
inc
push
sbb
out
lea
mov
sub
lret
cli
ljmp
in
or
test
or
inc
popa
leave
int3
cmp
and
or
out
js
dec
dec
stos
mov
ja
sbb
push
sbb
jge
rolb
dec
or
add
add
push
ror
push
mov
ljmp
add
nop
jge
xchg
mov
jle
divl
lock
and
dec
inc
movsb
add
arpl
or
lock
rol
je
les
mov
imul
inc
cli
sub
jp
pop
jge
stos
test
inc
pop
mov
inc
mov
push
dec
in
pop
pusha
xchg
mov
and
shll
add
cli
cld
andb
push
movb
inc
inc
inc
or
inc
adc
aam
popl
aam
outsl
in
and
xor
mov
or
push
or
xchg
cld
loopne
jb
mov
adc
test
and
fiaddl
rclb
cmp
imul
pop
pop
xor
mov
dec
xor
aam
cmp
cmp
mov
rorl
das
add
shlb
in
jmp
and
or
pop
dec
add
call
inc
mov
inc
test
inc
les
adc
inc
clc
out
add
pop
xchg
mov
sahf
inc
sbb
lea
dec
pusha
lds
incl
in
xchg
cmpl
loopne
push
sub
push
mov
ret
push
mov
scas
push
pop
test
ret
lcall
lret
pop
je
pop
push
adc
gs
add
or
addl
dec
pop
addb
pop
fdiv
lock
adc
jge
fstpl
sbb
cmp
and
fisttps
pop
adc
std
fs
scas
add
loopne
and
mov
inc
adc
fstpt
cmp
push
or
mov
inc
scas
mov
clc
xorl
inc
rol
imul
or
fildl
lods
mov
and
shrd
mov
lcall
orl
sbb
pop
mov
int3
sbb
mov
mov
add
xor
sub
pop
je
adc
push
outsb
push
xor
scas
hlt
mov
rclb
and
sahf
pop
cld
push
ret
in
sarb
mov
rol
in
pop
fidivrl
lcall
or
insb
push
in
inc
ss
mov
mov
mov
mov
or
repnz
negb
adc
test
mov
xor
aam
int3
xor
loopne
xor
mov
mov
les
loop
into
test
sub
pop
add
push
mov
int3
js
je
mov
cmp
adc
inc
int
jmp
adc
js
sahf
paddb
rolb
std
and
push
les
xor
in
jmp
adc
push
call
std
sbb
and
subb
test
mov
enter
sbb
or
inc
dec
pop
jne
add
clc
mov
add
bound
ret
lcall
push
jg
sbbl
leave
add
data16
and
popa
test
sub
aam
inc
mov
pop
fucomip
or
adc
cmp
cs
rolb
lret
push
outsb
pop
pop
fs
in
add
fadds
in
testb
and
divl
push
sbb
dec
push
sbb
in
or
ret
or
inc
jle
aaa
pop
stos
jge
popa
btr
and
or
test
push
lret
jmp
fcomps
or
call
test
ret
cs
iret
loopne
push
add
pop
pop
sahf
test
ljmp
ret
mov
push
and
push
shll
ljmp
gs
int
clc
mov
out
dec
ss
call
push
add
dec
mov
push
les
ret
xchg
mov
mov
adc
adcl
sub
lcall
notl
int
xor
repnz
xor
negb
mov
pop
test
xor
xchg
sbb
inc
scas
test
sub
mov
cmp
test
popa
mov
adc
stos
xchg
push
loopne
inc
clc
out
repnz
aad
sbb
push
cltd
add
xor
and
mov
mov
andb
imul
xor
mov
stc
pusha
hlt
fmul
out
js
add
std
push
xor
jl,pn
int3
inc
add
or
in
fwait
shrb
mov
jo
je
enter
std
test
in
add
pop
or
push
cmp
mov
mov
sbb
or
sbbb
lahf
into
dec
mov
add
in
jbe
mov
hlt
xchg
sbb
cmp
cld
mov
inc
lods
xor
test
xchg
fldenv
adc
hlt
sub
outsl
lret
movsb
and
test
fcmovnu
fs
dec
popa
inc
or
xor
adc
mov
in
sub
stos
add
outsl
push
xor
jg
push
inc
imulb
xchg
test
clc
mov
loopne
lock
mov
je
pop
in
xchg
daa
add
mov
call
cmpl
inc
adc
fcmove
mov
lahf
push
sub
and
add
jo
and
and
sub
mov
cmp
lock
mov
insb
stos
mov
or
ja
and
push
adc
pop
int3
adc
hlt
jb
call
rolb
push
ljmp
push
addb
int3
loopne
loopne
lods
addb
aam
outsb
inc
jecxz
out
xchg
or
jne
stc
decb
xor
lea
notb
pop
or
lods
cs
ficomps
mov
adc
inc
inc
dec
sub
call
mov
adc
call
cmp
cld
or
or
jge
ret
lock
sbb
pop
inc
push
cli
push
and
lret
add
in
test
jg
inc
shl
sub
cmp
int3
add
cmp
mov
or
mov
or
les
lds
cmpb
mov
fsubrl
add
dec
ret
outsb
cmp
xor
add
mov
sub
add
dec
popa
shrb
add
push
push
adc
adcb
fnstcw
add
mov
mov
orl
jb
out
add
or
fcom
popf
inc
fistpl
mov
or
adc
adc
in
aaa
clc
in
lock
sub
outsb
adc
sub
inc
js,pt
rcrb
jge
in
mov
fsubs
rorb
mov
imul
sbb
add
call
sbb
daa
ljmp
out
push
sub
cmp
cmp
cmp
mov
pop
out
and
adc
jb
jno
je
pusha
xchg
bound
icebp
dec
loope
pop
cmp
push
test
ret
mov
xor
data16
incl
sub
push
aam
lea
xchg
jg
sbb
mov
jno
popa
xor
add
ljmp
xor
jecxz
xor
les
test
cld
inc
jl
xlat
lret
sahf
xor
insl
aaa
or
enter
mov
gs
inc
xchg
fists
push
test
cwtl
dec
push
incl
mov
rorb
mov
push
or
or
in
mov
jge
outsl
pushf
mov
xorl
je
pushf
mov
pop
stc
add
push
jp
sbbb
aaa
jle
add
jmp
sar
or
xchg
inc
mov
popl
cmpsb
aam
mov
mov
jne
or
and
push
mov
and
push
sbb
in
jge
mov
es
outsl
dec
insl
mov
xor
adc
jle
loop
loop
push
je
mov
mov
or
and
fisubrs
lahf
in
or
test
mov
orb
cmpsb
jmp
std
incl
mov
push
add
pop
xor
ljmp
ja
pusha
jl
sbb
add
data16
lods
xchg
adc
dec
add
push
xor
pop
in
mov
test
loopne
sbb
outsl
push
test
cli
push
call
insl
add
add
rorl
clc
outsl
pop
or
cmp
or
cli
mov
mov
or
ljmp
mov
into
pop
push
aam
push
push
add
xor
push
add
push
or
mov
fs
pop
add
lods
jmp
or
jne
fistl
mov
sbb
scas
cwtl
andl
inc
mov
mov
dec
jg
outsl
test
sbb
popa
cmpsb
dec
mov
mov
cld
pop
push
aam
xorl
add
sahf
adc
imul
pushf
ljmp
cmp
sub
add
fcoml
inc
add
xchg
sbb
sahf
mov
push
dec
orb
or
mov
les
jb
xchg
adc
sub
sbb
cmp
ret
adc
add
loop
outsb
mov
push
adc
test
inc
je
sbb
movsb
pop
data16
sti
sbb
sbb
dec
or
push
repnz
add
adc
push
jmp
push
or
imul
mov
mov
xor
data16
lock
mov
or
adc
xchg
add
sbb
mov
and
jmp
std
push
dec
movb
pop
hlt
mov
sub
mov
shll
stos
stos
mov
popa
pop
pushf
lock
call
add
inc
push
outsb
cld
pop
call
outsl
mov
push
rcr
int3
jge
cmp
push
call
and
jne
add
pop
push
cwtl
mov
cmp
mov
push
lock
pop
test
adc
mov
insb
pop
cmp
xchg
adc
jl
aad
add
js
pop
ja
stos
test
cmpsb
aaa
pop
add
fiadds
add
aaa
mov
stos
les
mov
scas
aaa
add
cmp
push
dec
les
mov
jp
add
int
sahf
iret
mov
xor
add
mov
adc
add
mov
jno
dec
shrb
ds
sbb
pop
ret
in
push
shll
push
adc
cmp
jge
jne
incl
repnz
fs
pop
push
loop
std
mov
ss
cmp
shl
fmuls
cwtl
add
cmp
mov
data16
dec
adc
int3
inc
adc
lcall
jo
push
lock
mov
jle
add
loopne
jge
data16
and
jne
cli
inc
or
loope
subb
imul
xor
lock
gs
jp
or
incb
cmp
mov
popa
push
push
adc
mov
lcall
call
ljmp
inc
cld
mov
jp
cmp
pushf
testb
mov
adc
jmp
sbb
pop
dec
test
adc
xorps
cmp
insb
sbb
lods
cmp
sarb
popl
mov
test
test
or
decl
cmc
mov
xchg
inc
jne
adc
pop
xor
mov
jne
pop
out
mov
mov
lods
push
jbe
jo
mov
add
clc
add
or
push
cld
je
insb
jp
mov
minps
ret
push
repnz
xchg
inc
add
ss
imulb
add
mov
jge
inc
xchg
aad
push
push
mov
push
cmp
inc
insl
sub
roll
cmp
lock
cmc
jno
rorb
fwait
adc
mov
pusha
xchg
sbb
ret
xor
ss
loop
out
mov
adc
les
adc
cmp
jge
xchg
xor
or
push
adc
ljmp
faddl
push
cmpl
aaa
adcb
pop
push
inc
dec
call
push
jle
cmp
pop
outsl
add
mov
mov
push
shlb
pop
aad
sahf
jge
mov
cmpsb
or
mov
inc
cmp
dec
push
rcrb
fsubrl
jg
inc
dec
je
xchg
lea
cmpsl
call
clc
decl
sbb
mov
out
and
xchg
jmp
test
mov
mov
add
sbb
inc
lea
cmc
sti
and
or
insb
dec
add
push
mov
and
inc
clc
mov
jge
jnp
or
inc
in
in
or
jmp
addb
push
frstor
add
lcall
es
js
test
sub
mov
jae
mov
lret
test
adc
mov
sbb
jg
jmp
in
enter
cs
jle
pop
pushf
jge
mov
fwait
sbb
adc
insb
sarb
push
adc
gs
movl
add
icebp
push
test
scas
jmp
ret
push
adc
mov
negb
mov
xor
mov
ret
gs
pushf
jb
leave
int
sub
mov
int3
call
fstl
shrb
or
push
or
clc
or
jle
pop
enter
mov
cmp
aaa
lods
dec
push
mov
or
jne
stc
jae
loope
push
outsb
jle
pop
shlb
and
or
imul
mov
sub
dec
push
incl
sbb
sbbl
push
fadds
jmp
dec
push
aam
sub
lds
fwait
jmp
test
mov
or
fwait
adc
leave
push
xlat
push
mov
shrl
or
loopne
push
setl
jle
incl
pushf
ret
add
fildl
rorb
in
ret
dec
or
mov
jl
fwait
adc
nop
adc
jp
mov
add
insl
adc
mov
adcl
and
out
mov
dec
cmc
adc
rol
jp
je
or
adc
jb
das
clc
mov
dec
mov
dec
out
inc
adc
pop
je
cli
mov
xchg
lock
loopne
fdivl
insb
cmp
std
pushl
ret
nop
add
mov
movsb
or
inc
lar
dec
lods
add
nop
cs
cld
push
add
std
and
inc
push
ds
cmp
fbld
rcrb
fs
inc
and
adc
les
and
jle
adc
adc
xchg
push
mov
mov
outsb
mov
inc
jmp
je
add
or
jo
dec
mov
std
sub
push
loope
movsb
pop
push
mov
jmp
pop
add
call
lea
and
inc
lret
add
inc
pop
push
std
sbb
pop
adc
stos
mov
adc
jae
outsb
in
gs
cmp
add
jb
adc
or
xor
push
mov
leave
add
fisttps
bound
jb
cmp
test
pop
inc
add
dec
cld
stc
adc
lock
faddl
push
lock
mov
negl
push
jno
lcall
loope
xchg
in
dec
add
je
fyl2x
dec
mov
add
repz
mov
imul
clc
xchg
mov
jo
xor
nop
loopne
pop
xor
pop
push
loope
jb
mov
ds
mov
mov
mov
sbb
dec
call
jle
cli
dec
mov
xor
or
mov
xor
jbe
sbb
adc
ljmp
int3
or
sbb
add
push
xor
outsl
dec
push
or
decl
jne
aad
sbb
or
gs
imul
inc
loope
or
mov
pushl
inc
test
adc
or
sub
xor
and
add
loopne
int
subb
sti
jb
xor
jb
test
mov
cmpb
add
add
xchg
clc
sti
cmp
push
enter
mov
mov
add
pop
xor
pop
jl
sub
aam
lods
fs
shll
fcoml
lret
out
adc
lcall
inc
ret
int
ljmp
cmp
mov
xchg
sub
cmp
push
out
push
in
push
or
xor
sbb
lods
je
pop
rorb
cmp
and
sbb
mov
ret
sub
pop
sbb
mov
add
insb
cmp
movl
inc
jnp
xor
fwait
clc
pushl
test
fwait
add
jp
insl
add
mov
int3
fbld
pop
stos
cmp
ret
jl
add
sub
xabort
mov
test
adc
or
push
adc
dec
sbb
mov
outsb
mov
fs
adc
ret
push
push
mov
cmp
loop
int3
mov
adc
les
jmp
hlt
xorb
imul
pop
bound
pop
inc
add
add
int3
jnp
popa
inc
xor
subl
les
lods
shrb
sub
sbb
cmpsb
add
adc
and
aaa
push
push
icebp
xchg
and
stos
out
adc
inc
movsb
pushl
xchg
je
sbb
and
and
dec
fidivl
mov
imul
add
inc
movb
sub
xor
dec
mov
pop
jle
scas
cmovs
push
je
mov
sbb
jno
fwait
es
daa
cmp
dec
cmpsb
pop
pop
push
scas
std
aam
mov
das
imul
add
test
outsl
nop
ds
push
out
loope
and
mov
add
pop
movb
mov
test
pop
inc
push
mov
mov
mov
nop
push
nop
sbb
sbb
push
jg
xor
push
mov
and
loop
lds
push
pop
decb
add
cmpl
call
fnstenv
mov
push
test
push
inc
xor
shl
ss
mov
dec
enter
dec
jp
loop
push
cmp
std
mov
incl
or
scas
push
pop
in
jbe
and
popa
popa
mov
push
pop
imul
xchg
pop
clc
scas
dec
push
cmp
xorb
push
lea
add
pusha
push
loopne
pop
std
jns
fmuls
pop
adc
mov
jmp
mov
ret
adc
jmp
outsb
add
hlt
pop
incb
call
inc
cmp
int3
mov
sub
or
mov
push
add
xor
add
outsb
push
scas
push
push
aad
bound
push
cmp
sub
inc
push
pop
push
inc
fdivp
fwait
scas
clc
movsl
jbe
std
dec
repnz
fisubs
pop
fwait
popf
scas
dec
cwtl
mov
into
xor
push
test
xor
fs
rclb
mov
pop
or
mov
je
mov
ret
aaa
and
data16
test
xor
dec
or
ss
add
outsl
pcmpeqb
loopne
pop
pop
mov
test
mov
hlt
cld
imul
or
push
push
push
dec
mov
jecxz
jp
mov
nop
in
enter
cmp
aad
cwtl
dec
scas
push
nop
fnstcw
push
decl
push
xor
pop
jmp
mov
test
adc
adc
and
sub
mov
test
pop
int
in
test
lahf
jo
call
mov
fsubrs
jp
push
pop
jnp
cli
mov
cs
mov
inc
push
je
jb,pn
loopne
mov
cmpsb
movl
add
in
push
dec
mov
and
ja
orb
incb
xchg
cs
pop
sub
movl
icebp
jmp
shrb
lods
loopne
loope
ret
add
orb
into
add
mov
lods
add
lods
add
xorl
leave
add
xor
push
push
sbb
pop
ja
es
outsb
decl
push
add
cmp
ret
push
dec
ja
fisubrs
loop
add
rorb
shlb
lret
sbb
cld
push
nop
loop
je
sub
loopne
mov
push
sbb
loop
push
pop
pushl
mov
jg
inc
and
stos
jnp
add
inc
add
dec
bound
push
pop
scas
mov
outsb
pusha
dec
mov
or
les
inc
outsl
rolb
and
push
lock
cwtl
mov
xor
add
add
inc
aam
daa
add
dec
daa
mov
cmp
inc
mov
ljmp
je
mov
lods
imul
add
sbb
std
lds
mov
push
mov
add
hlt
lods
cmp
popa
add
addb
pop
push
add
xor
inc
test
sarb
stos
or
add
ret
aas
add
test
stos
dec
cmp
dec
aaa
aad
mov
ljmp
call
push
adcl
push
sbb
add
jl
lds
imul
xor
ret
push
aam
pop
and
cmpsb
js
iret
or
mov
test
ljmpw
xchg
mov
in
out
xor
es
sbb
test
enter
inc
shl
aas
mov
lahf
shlb
and
out
pop
jnp
cmp
ss
inc
loopne
jae
outsb
rorb
inc
std
outsl
pop
cmpsb
jl
fdivs
push
incl
dec
aad
pop
push
xor
and
cmp
bnd
pop
int3
and
nop
jg
mov
pop
mov
push
mov
dec
je
jmp
cmp
jb
movsb
sub
xor
test
imul
clc
push
jo
sar
int3
lcall
mov
nop
mov
adc
add
xor
ja
cmp
and
daa
jmp
mov
inc
dec
lods
dec
gs
mov
mov
push
stc
inc
push
xor
mov
pop
add
ret
adc
lods
in
push
testb
out
adc
mov
ss
cmpsb
mov
cli
push
cld
inc
mov
pop
adc
xor
add
pop
mov
fdiv
lock
sub
cld
test
or
incb
xor
inc
outsb
mov
xor
clc
mov
mov
mov
imul
shll
and
jo
push
cmp
inc
data16
or
adcb
jne
clc
mov
clc
mov
push
lea
xchg
mov
test
pop
fisttps
sub
xchg
push
pushl
aam
mov
fbstp
decl
adc
aam
and
push
push
push
sbb
xor
xchg
cmp
rcll
test
lock
dec
call
je
mov
dec
inc
addb
ljmp
mov
jmp
gs
mov
jno
pop
cld
fisubs
arpl
push
and
repz
add
shll
cltd
sahf
je
cmp
adc
cmp
inc
in
pop
fxch
xor
aam
cli
sub
rclb
stc
test
gs
ficompl
adc
rorl
mov
lcall
add
pop
sbb
in
adc
adc
pop
decb
lea
and
daa
mov
aaa
rcl
loop
int3
test
sbb
or
divb
jb
adc
sbb
push
push
icebp
push
inc
jge
incl
aam
and
subb
push
ja
addb
bound
or
mov
jo
outsb
enter
mov
sub
je
sbbl
jne
jecxz
mov
test
mov
dec
std
mov
and
xorl
push
clc
pop
in
xchg
xchg
inc
adc
clc
data16
xchg
stos
ja
int3
or
sub
pusha
lea
jmp
mov
jbe
hlt
push
jae
dec
cmp
push
popl
mov
imul
loopne
dec
out
mov
dec
jecxz
mov
cs
cld
incl
push
divb
inc
inc
add
ss
and
push
push
test
adc
pop
inc
mov
and
adc
icebp
sbb
jmp
add
loopne
inc
std
push
ja
lret
sbb
mov
sbb
rolb
addb
loopne
xor
mov
push
outsl
push
and
aad
sub
decb
in
aad
hlt
adc
mov
dec
sub
add
dec
mov
push
in
ret
cmp
int3
push
adc
add
rolb
inc
xor
jbe
inc
sbbl
cmovle
sbb
aad
sbb
nop
daa
cmp
jne
icebp
aas
fsubs
lret
aaa
mov
xor
std
mov
movsb
mov
push
inc
js
cmpsl
push
out
data16
ret
sbb
pop
jge
add
int3
inc
push
cmp
mov
sbbb
ret
and
xchg
add
cmpb
xchg
scas
xchg
sub
mov
ljmp
push
jo
cmp
loopne
or
notb
imul
into
insb
or
sbbb
mov
mov
pop
mov
adc
in
int3
rolb
xchg
adc
loopne
ja
push
je
xor
inc
jb
nop
fs
xor
fisubrs
mov
xor
fildl
jle
cmp
mov
push
and
inc
ja
adc
or
or
lods
test
or
enter
clc
mov
push
push
test
inc
mov
mov
movsb
insb
sbb
js
call
stos
pop
mov
push
cmp
cmp
pop
test
jne
sub
les
or
orb
push
call
icebp
mov
ret
cmp
jb
jb
sti
sbb
inc
pop
and
sbb
mov
jg
mov
add
jmp
popa
or
add
call
ss
sarl
jne
pusha
loop
jo
cmp
or
bound
or
push
in
nop
sbb
mov
orw
pop
lret
xchg
fcomps
cmp
sub
adc
push
fidivrl
sub
xor
inc
lock
popa
mov
stos
xchg
or
cli
fdivl
mov
shr
cmovb
call
adc
cli
or
insb
sub
fs
sbb
or
push
dec
into
call
shrb
mov
insl
adc
pop
clc
cmp
sbb
inc
rcrb
ds
stc
aad
mov
rolb
jmp
std
inc
and
push
orps
cltd
jp
add
cli
add
mov
push
imul
ja
loopne
push
mov
add
rcrb
mov
add
test
push
sti
int3
push
mov
mov
push
xor
xor
cwtl
sahf
sbb
mov
dec
rcr
dec
push
addr16
jmp
mov
mov
testl
je
and
cmp
push
push
adc
ds
adc
mov
mov
cmp
jo
mov
inc
mov
rcr
sub
call
into
add
leave
pusha
pop
aad
popa
insl
divb
mov
inc
adcl
cmpsb
fcoml
inc
adc
jl
jbe
mov
shll
push
pushf
psubusb
pop
jo
or
mov
inc
cld
call
push
push
nop
outsb
adc
sub
cli
stos
jb
mov
dec
pop
bound
inc
outsl
or
adc
push
jle
mov
stos
mov
jl
cld
int3
mov
loope
jb
cmp
adc
lea
mov
js
or
mov
xor
add
xor
psubd
roll
sbb
cmp
mov
push
jg
int3
or
test
ljmp
test
or
push
pop
pushl
adc
push
sti
jmp
ljmp
jbe
push
gs
jnp
icebp
loope
stos
push
add
pop
fs
push
cld
cltd
push
mov
out
push
rclb
push
call
inc
das
mov
adc
ret
pop
push
mov
jo
push
cmc
test
jb
hlt
xor
jg
mov
adc
adc
neg
jne
mov
sbbb
xchg
inc
xor
or
add
outsb
pop
add
jae
dec
push
sbb
loop
lea
push
push
jg
aas
jp
adc
sbb
dec
mov
sti
sbb
mov
sbb
pop
adc
les
jmp
in
add
sbb
fwait
subb
add
pop
mov
sbb
and
rclb
lock
cmpsb
add
lock
adc
cmp
and
push
mov
movsl
push
mov
add
rol
mov
cmp
cld
pop
ds
push
stos
lahf
and
xchg
mov
adc
cwtl
in
fadds
lds
jb
mov
addl
int3
testb
sahf
mov
dec
std
scas
imul
lcall
xor
out
inc
aad
mov
xchg
sbb
aas
lock
movsb
cmp
add
lret
mov
je
lcall
ss
sahf
cmp
jmp
idiv
lcall
fsubrs
outsb
push
cmp
push
inc
shll
pop
lcall
push
fsubrs
fadds
loop
cmp
mov
mov
jle
std
aad
movsb
add
pop
inc
pop
inc
and
in
jl,pt
out
sub
add
movsb
lea
mov
mov
or
dec
mov
sub
jl
push
test
shll
inc
push
pop
jo
push
test
adc
insb
adcb
fisubrs
fidivs
jne
in
stos
xor
add
ss
inc
xor
add
adc
cmp
pop
loopne
push
dec
fmulp
jp
mov
das
dec
adc
push
cmp
orb
dec
fwait
mov
cmpsb
enter
sarb
cmp
jb
int3
inc
std
sub
xchg
pusha
push
test
pop
sub
pop
cmp
adc
lock
xor
fs
inc
push
jae
test
lea
call
sbb
test
ja
xor
rcrl
mov
popa
test
add
inc
test
xor
pop
fsubp
arpl
daa
and
lods
paddusb
push
or
sbb
jnp
jo
shl
add
xor
repnz
sub
negb
lea
push
and
rorb
adc
rcrl
das
test
dec
fs
cmc
in
or
adc
cmp
mov
aam
xor
ss
add
in
call
mov
pop
sbb
or
out
clc
stos
jne
xor
sub
testl
cld
lahf
adcl
and
insb
addb
stos
dec
cmp
fldcw
negl
std
cld
pusha
push
cmp
push
and
add
add
test
incl
mov
push
iret
inc
adc
out
pop
push
clc
add
xchg
out
push
mov
je
dec
lcall
mov
mov
inc
jmp
xchg
push
adc
add
cmpb
je
add
imulb
ret
or
roll
int3
int3
push
rclb
or
xor
mov
pop
inc
sar
mov
rorb
dec
adc
mov
mov
aaa
insl
adcb
mov
mov
or
inc
mov
xor
in
jae
adc
mov
aam
jl
mov
pushl
call
add
push
in
add
retw
inc
or
push
ja
mov
in
adc
pop
inc
inc
xorps
xor
add
mov
out
shrd
sbb
mov
sub
shr
jno
ror
jmp
rclb
lahf
mov
outsb
out
push
pop
pop
dec
les
sbb
mov
aas
sbb
sub
int3
out
mov
and
aaa
adc
rclb
mov
jg
add
pop
inc
push
inc
movsl
jo
jge
orl
or
pop
mov
jg
ret
rorb
inc
ljmp
push
lea
jne
inc
rol
mov
mov
mov
jl
mov
push
das
test
fidivl
dec
inc
inc
test
loop
insb
lods
mov
push
fcoml
ret
xor
test
in
jns
push
add
icebp
fcmovu
jbe
or
insb
add
push
sbb
cmp
push
mov
out
icebp
cmp
adc
data16
pusha
subl
xchg
test
lea
rcrb
add
test
ljmp
subb
xor
decl
and
div
add
es
pop
in
xor
pusha
xchg
out
movsl
or
inc
add
lock
push
mov
out
push
inc
out
mov
fucomip
mov
sbb
ret
rorl
out
das
ret
test
add
scas
push
jl
push
or
subl
out
or
dec
and
sbb
out
call
call
int
testl
nop
xor
shll
add
cld
jle
shl
inc
mov
jmp
subl
or
rcl
add
add
jge
adc
pop
sub
pop
push
mov
test
mov
mov
leave
loop
fs
nop
inc
push
dec
enter
stos
inc
adc
ret
fdivp
cld
sub
aad
fisubl
ret
lcall
push
lock
divb
mov
test
inc
pop
mov
mov
clc
hlt
inc
scas
pop
out
and
bound
out
mov
sahf
adc
and
mov
add
add
notl
dec
pop
bound
add
dec
std
xor
mov
xchg
dec
adc
push
test
fwait
lock
jmp
xchg
mov
and
shrl
mov
push
mov
dec
mov
lds
sbb
jne
stos
jle
ret
pop
or
push
pop
sbb
dec
fs
scas
loope
in
sti
dec
push
xchg
or
sbb
jmp
gs
outsb
push
fcomps
pop
jne
lock
dec
cld
xor
or
shlb
jg
jge
icebp
inc
cmp
out
lods
push
imulb
sbb
in
jl
int3
pop
mov
jae
cmp
pop
pop
jne
cmp
mov
decl
ss
pop
xor
or
ja
pop
enter
aaa
dec
fs
or
sbb
shrb
rcl
push
loopne
dec
ffreep
arpl
pop
add
dec
ret
and
inc
ret
push
mov
fcompl
and
clc
pop
imul
rorl
adc
call
add
cmp
nop
push
dec
aad
rclb
int3
mov
dec
mov
mov
out
mov
push
add
ss
pop
addb
data16
jmp
ljmp
mov
push
dec
add
js
call
lock
fadds
hlt
and
leave
adc
push
dec
in
adc
pop
or
ret
roll
shll
add
xchg
add
mov
int3
sub
shrl
popa
inc
shrb
call
fcmove
cmp
pop
je
mov
xor
jg
or
js
enter
in
mov
push
lcall
dec
pop
jne
sub
aam
call
andb
dec
push
adc
cmp
loopne
xchg
ljmp
pop
add
sub
sbb
pop
lcall
inc
and
imul
sub
jne
jmp
pusha
shl
mov
mov
addb
movsl
cli
sbbl
xor
dec
rcrb
push
sub
xchg
test
and
mov
movsl
mov
push
jle
cs
es
aaa
pop
ja
in
cld
push
add
inc
mov
pop
cli
sbb
cli
call
inc
test
jmp
or
or
mov
lcall
push
lock
sbb
mov
push
mov
test
movsl
pop
ljmp
add
push
push
fistpll
and
cld
sub
adc
jmp
je
nop
pop
sbb
and
push
ret
sbb
push
mov
sbbb
gs
mov
pop
aam
cld
mov
negl
add
add
fbld
movsb
add
jne
or
push
jo
pop
push
daa
push
faddl
push
xchg
gs
sar
ds
mov
sub
clc
cmc
jle
mov
jl
push
call
add
sub
in
pushf
mov
push
or
mov
or
sub
pop
les
test
sub
xor
push
enter
jo
adc
dec
les
inc
addb
std
add
dec
cmp
inc
test
sbb
pop
mov
mov
or
inc
or
inc
int3
inc
adc
mov
fidivrl
cmp
notb
mov
out
add
or
and
sbb
cmp
push
pop
repz
add
mov
add
mov
bound
adc
divl
xor
outsb
jmp
cmp
mov
push
adc
add
negb
ficoml
push
push
int3
subb
mov
push
mov
imul
jg
out
or
sbb
push
push
loopne
pop
pop
sbb
lret
gs
inc
adcl
hlt
decb
pusha
shr
mov
les
and
test
negb
loopne
in
sub
shrb
sub
jmp
sbb
test
xchg
mov
mov
bnd
push
push
shll
ds
push
in
clc
test
pop
je
cmp
sub
insb
jl
sahf
insb
js
push
xchg
jo
pop
ds
mov
and
jns
sahf
mov
pusha
and
stos
movsb
xchg
arpl
cmp
jecxz
cmp
dec
dec
add
ret
mov
cmp
ficoml
cmc
push
add
aaa
dec
push
mov
xchg
mov
xor
or
ret
int3
imul
inc
fcomps
fwait
mov
push
into
pop
call
je
mov
test
hlt
add
cwtl
bound
push
jbe
jmp
loopne
mov
gs
repnz
cmp
push
add
test
adc
ja
adc
inc
add
test
call
js
and
jp
push
sub
mov
pop
lock
pop
fdivs
mov
std
sbb
loopne
mov
mov
ret
ret
push
add
cld
pop
call
push
and
std
add
in
mov
lock
adc
test
adc
out
ljmp
add
adc
jmp
orl
cmp
mov
add
ds
add
add
mov
mov
mov
cmp
lret
and
clc
jmp
cmp
jb
cs
addl
and
jo
jle
pop
cmovge
xchg
push
sub
les
in
inc
pop
or
ret
jp
lcall
dec
sub
test
int3
insb
and
jp
shlb
sub
xchg
adc
add
push
sbb
inc
lods
test
filds
mov
cmpl
pop
cmovo
outsl
stos
and
hlt
add
add
aaa
add
mov
xor
dec
loop
sti
or
mov
in
das
es
jo
sub
inc
mov
push
add
sahf
push
sbb
xor
dec
fdivrp
cmpsb
div
and
mov
pop
push
add
sub
sbb
mov
jo
js
loop
jno
mov
rcll
inc
loop
cwtl
mov
sahf
int3
lods
mov
pop
inc
jae
sub
inc
or
ss
xchg
test
repnz
xchg
int3
into
rorl
jne
insl
outsb
xor
dec
jne
cs
push
ret
jg
or
jmp
repnz
xchg
or
mov
sbb
dec
cmp
sbb
fiaddl
rol
mov
push
pop
sub
mov
mov
mov
bswap
lcall
inc
xor
addb
add
std
sarb
shrl
pushf
sub
add
mov
xchg
lds
add
mov
adc
add
cmp
pop
mov
rcrl
ficoml
push
test
rorb
xor
sbb
outsb
push
scas
stos
mov
add
sbb
inc
cmp
xor
test
pop
and
ljmp
mov
xchg
cmp
or
add
sbb
cmc
xchg
mov
and
push
push
sub
lcall
mov
aam
cmp
sbb
insb
dec
dec
or
jns
fimuls
lods
xchg
sbb
fchs
add
sbb
jmp
xlat
push
addb
mov
and
adc
stc
sahf
jl
mov
cmp
inc
add
in
lock
test
and
hlt
test
jge
fdivrl
je
jg
inc
dec
xor
ret
outsl
jp
mov
imul
mov
insl
subb
mov
loopne
jg
mov
add
jno
rclb
cld
bound
jmp
ret
and
nop
outsb
cmp
add
rolb
pop
fbld
ljmp
mov
out
lds
or
or
mov
decb
jl
cli
add
xor
and
lock
lcall
scas
out
test
leave
insl
xchg
jp
adc
cwtl
jge
aad
add
adc
lock
insl
decb
push
popf
fwait
movl
jp
insl
mov
inc
ret
into
or
add
push
inc
jbe
mov
std
mov
mov
in
pop
inc
jge
push
insb
push
jne
cmp
push
insb
jl
mov
aaa
shrl
jne
cltd
and
fs
inc
rorl
mov
lock
pop
and
dec
sbb
push
jl
xor
push
inc
xchg
add
cs
pushl
pop
and
outsl
cmp
push
push
and
test
cmp
push
mov
es
inc
clc
and
mov
mov
scas
pushl
cld
in
clc
cmp
xor
dec
adc
call
sub
imul
add
pop
sbb
push
je
xor
or
dec
inc
int3
push
arpl
xchg
and
outsb
push
jo
inc
enter
push
add
add
das
imul
cmpsb
or
cli
daa
adc
or
call
lock
sub
add
push
pop
data16
jp
rolb
orb
push
pop
cmc
pop
out
mov
lock
xchg
test
xor
je
mov
xor
push
aam
jbe
cmp
push
ljmp
or
sub
jl
push
lret
lret
mov
push
pop
jecxz
push
mov
sahf
pushf
adc
insb
enter
movsb
leave
aaa
jo
in
stos
and
pop
xor
adc
fwait
add
jmp
or
mov
rolb
rcll
cmp
and
lock
das
or
jmp
pop
mov
repnz
mov
imul
push
sarb
arpl
outsb
sbb
dec
insl
ja
pop
call
clc
inc
inc
mov
jmp
rolb
mov
xor
jl
sbb
add
mov
fwait
push
negb
xchg
into
cld
xor
jg
mov
inc
dec
sub
mov
jg
scas
push
rclb
rorb
add
dec
orl
or
mov
ja
push
sbb
insb
ret
sub
mov
pushl
dec
stos
negl
xchg
add
rolb
pcmpeqb
adc
es
shrl
fwait
jo
mov
test
insb
lcall
gs
aad
mov
dec
movsb
gs
aaa
xchg
add
cmpsb
dec
push
add
xchg
jae
mov
jo
pop
roll
mov
jmp
pop
sbb
pushf
in
or
cmp
pop
sar
movups
mov
inc
fiaddl
fdivrl
mov
imul
hlt
cmpb
mov
cmp
in
sbb
inc
into
je
push
fs
bound
jbe
in
jmp
xchg
inc
pop
ljmp
ljmp
fwait
lock
aaa
add
js
call
test
cltd
add
loopne
or
js
clc
fucomip
mov
mov
and
ds
aam
loopne
repz
sub
movsl
mulb
adc
sarl
dec
xor
loopne
dec
gs
cmp
lods
mov
pop
pop
mov
or
fisttps
addl
inc
dec
add
jmp
aam
jae
mov
sbb
mov
outsb
call
cs
mov
sbb
movb
inc
loope
movsb
clc
cld
outsl
test
std
in
mov
cmp
fisttpl
fbld
ss
andb
les
add
test
push
xlat
call
leave
call
and
lret
imul
jmp
xor
fisubl
xor
call
jl
aas
psadbw
sarb
xor
and
or
sbb
call
mov
pop
call
xchg
sbb
std
xchg
inc
fsubrs
nop
inc
xorb
mov
int
stc
call
dec
lock
push
pushf
mov
cli
ja
and
pop
inc
mov
gs
push
pop
ljmp
das
cld
mov
adc
mov
xchg
cmp
leave
adc
ds
push
test
or
inc
loopne
test
mov
hlt
jmp
adc
jnp
data16
ret
cmpsb
and
mov
xlat
loope
xorl
or
add
mov
mov
ja
adc
sub
outsb
dec
hlt
jg
pop
mov
je
and
aam
push
clc
lock
call
mov
leave
pop
clc
xor
push
cmp
mov
xchg
orb
outsl
adc
add
sahf
incb
out
movsb
xchg
add
mov
push
pop
inc
xchg
clc
add
sahf
fs
pushf
cs
or
inc
int3
xor
les
out
fwait
int
das
push
mov
addr16
pusha
fadds
cmp
adc
insl
xchg
ds
mov
scas
add
hlt
aaa
cmp
inc
fisttpll
xlat
rolb
push
push
and
icebp
xchg
mov
push
inc
push
ret
jp
sar
push
mov
testl
ss
and
cli
xorl
add
int3
jg
mov
sub
gs
ljmp
mov
aas
sub
pusha
inc
test
fadds
clc
dec
sub
test
add
lret
ja
adc
out
jl
mov
fdivr
mov
mov
and
dec
mov
cmpsb
inc
jp
mov
aas
stos
insb
pop
clc
mov
repnz
pop
pop
lea
dec
sbb
int3
add
pop
or
push
enter
jg
add
xorl
jae
test
mov
je
lea
outsb
jecxz
ret
call
add
nop
adc
push
mov
ret
jg
outsb
fdivrl
dec
mov
xor
inc
sbbl
push
dec
and
push
xor
pop
adc
dec
fcoml
mov
lcall
sub
sub
call
sti
hlt
adc
dec
or
push
cmp
lods
test
inc
xchg
mov
test
test
add
pop
mov
push
call
mov
outsb
jg
mov
fistl
imul
cli
or
sub
push
addl
lds
or
pop
mov
inc
enter
dec
popa
adc
lret
and
incb
xor
nop
xadd
lock
rorb
cmp
add
or
mov
fcoml
pop
inc
push
push
je
mov
dec
js
cmp
add
jp
cmp
xchg
or
icebp
orb
push
xchg
sbb
into
sub
je
fisubs
repnz
test
ljmp
inc
or
call
push
int3
sub
cld
cmp
xchg
mov
outsl
pop
fmuls
push
mov
mov
fbld
jmp
shll
push
add
jae
or
add
lea
or
push
add
adc
mov
sub
lea
adc
mov
xor
gs
sbb
mov
push
or
add
addb
add
rol
fsubs
ret
ds
pop
mov
adc
cmp
xchg
rcr
adc
and
mov
sti
ja
sbb
fcoml
and
fbld
in
decl
mov
mov
test
push
lea
aad
push
sti
lods
jne
or
add
jno
adc
pop
adc
addb
mov
shl
sahf
or
pusha
lds
adc
push
cltd
mov
addb
movb
cli
xchg
jae
rorl
xor
sbb
adc
jb
pushl
cmp
pop
sub
pop
push
sub
rcrb
xor
out
lock
cmp
int3
inc
mov
jp
xorl
orb
ret
mov
mov
inc
mov
xor
mov
lea
inc
pop
shlb
aas
pushl
sbb
test
fidivl
inc
jecxz
es
pop
lock
ds
shll
mov
mov
imul
cmp
movsb
add
push
jg
ljmp
je
in
ret
loop
test
hlt
push
stos
gs
and
push
mov
sbb
jmp
mov
sbb
push
push
mov
subb
icebp
mov
loop
test
mov
and
and
jge
cld
add
pushl
cwtl
xchg
push
mov
mov
loopne
mov
in
mov
std
jmp
pop
and
scas
xor
in
lds
push
mov
in
std
mov
inc
mov
cmp
sbb
mov
add
pusha
xchg
enter
adc
sbb
xor
xor
add
or
push
add
or
nop
xacquire
inc
pop
add
push
xor
lock
add
mov
idivl
cmp
jne
adc
js
adc
cltd
pushf
add
subl
out
inc
incl
sahf
push
xor
test
mov
add
inc
inc
outsl
call
cmp
pop
mov
or
and
push
cld
push
stc
xor
xor
and
test
adcb
arpl
icebp
add
test
adc
out
sbb
xor
jo
les
call
adc
int3
test
aam
xchg
ljmp
jge
insb
cmp
inc
xchg
or
sahf
int3
fisttpll
rolb
fisttpll
xor
cmc
or
dec
movsl
mov
aad
push
je
testb
pushl
cmp
repnz
push
inc
int3
dec
push
lea
jne
sarl
les
sub
push
mov
or
fs
inc
lods
aam
adc
push
incb
cld
add
in
mov
sub
push
outsb
push
ljmp
stos
push
fsubrl
sbb
adc
fsubrl
mov
je
push
je
dec
inc
leave
dec
xchg
push
loope
pop
mov
push
fs
inc
pop
lock
and
mov
ljmp
and
jmp
and
and
fsubr
push
inc
test
icebp
hlt
std
push
fadds
dec
adc
lea
adc
dec
pop
pop
dec
adc
rclb
mov
push
fisttpll
adc
mov
movsl
pop
gs
outsb
add
ret
mov
stos
jg
out
inc
push
push
loopne
xor
and
xchg
fstps
lods
sbb
add
or
gs
movsb
cld
push
insb
mov
pop
lock
fisubl
je
call
mov
xbegin
xchg
adc
push
add
push
xchg
or
aam
cld
mov
outsb
jmp
std
int3
ficomps
ffreep
enter
loop
je
call
nop
or
orl
cmp
jne
mov
fadds
pop
and
push
add
jmp
xor
cmp
push
sub
insl
call
sbb
cmp
cld
add
xchg
jp
cmp
dec
scas
mov
pushf
je
pop
loop
adc
data16
mov
push
int3
push
adc
lods
and
mov
rorb
add
addb
and
into
shlb
xor
in
push
inc
es
pop
cmpsb
rorb
rorl
mov
sbb
jne
pop
fmul
fiaddl
idiv
in
pop
adc
and
xorl
fs
mov
cmp
test
inc
ja
lea
lea
and
lahf
push
add
fsts
jl
in
or
mov
xchg
jb
push
ljmp
sahf
fcompl
adc
decl
pop
or
add
push
fcomi
lds
shrb
ja,pn
les
xor
lcall
mov
subb
fmull
xor
adc
push
add
inc
sbb
cmpsb
push
sub
xchg
dec
clc
or
adc
pusha
enter
ret
pop
push
ds
std
pushf
call
fwait
add
push
into
aaa
inc
in
test
mov
enter
push
push
insb
mov
out
clc
arpl
cmp
pop
inc
cmc
test
xor
mov
xor
mov
pop
test
cmp
push
bound
in
clc
int3
cli
cld
mov
in
jmp
aam
add
int
push
xor
pop
xor
push
jg
sbbl
push
sbb
stos
sbb
adc
add
mov
int
int3
add
stos
dec
nop
rolb
adc
cld
rcll
aam
mov
mov
call
add
subl
test
mov
rorb
jge
decl
jmp
hlt
or
repnz
xchg
jle
loopne
rcll
xchg
add
inc
add
jo
mov
cmp
push
hlt
es
ljmp
into
mov
imul
rol
sub
je
in
or
repz
dec
pop
add
adc
mov
mov
lds
enter
das
xor
inc
dec
loop
mov
mov
push
dec
enter
mov
push
push
sub
lret
inc
rcl
pop
jl
gs
daa
loope
loope
xor
fld1
xor
adc
shlb
loopne
adc
js
lds
push
test
add
jl
dec
fistpl
js
add
pop
scas
mov
mov
bound
mov
xor
fcom
push
inc
sbb
incb
push
sbb
loope
imul
je
or
call
sbb
push
jne
or
push
sub
push
jg
dec
xor
lock
lock
inc
cld
mov
sbb
repz
mov
lock
push
sub
pop
rolb
sbbl
clc
in
dec
push
sub
and
out
repz
js
js
repnz
cld
xorb
hlt
das
js
shlb
xor
or
xchg
inc
inc
pop
insb
lret
fsubs
mov
and
mov
test
aam
aam
mov
fs
out
hlt
aas
cmp
xor
incb
mov
shlb
mov
push
sub
enter
and
sahf
daa
je
push
cmp
lret
jb
aaa
aam
sysret
mov
xor
mov
adc
inc
je
mov
sbbb
add
mov
cmpsb
push
cmp
dec
rclb
xchg
ficoml
pop
mov
jb
sub
inc
out
addl
mov
xor
fs
mov
cmp
sbb
aaa
adc
dec
int3
and
push
add
jbe
or
popa
fcoms
xor
jmp
jmp
dec
mov
sbb
add
fnclex
dec
movsb
pop
mov
enter
movsl
xor
aad
cmpl
cld
mov
dec
cmp
adc
pop
jg
cmp
xchg
lea
add
data16
aad
mov
pop
xor
mov
je
xor
sbb
jmp
push
call
ret
fists
cld
pop
mov
pushf
jne
mov
adc
mulb
data16
je
xor
lahf
mov
add
xchg
add
loop
jecxz
js
dec
ljmp
jne
rcll
dec
movsb
test
and
outsb
ljmp
pop
jge
mov
or
jecxz
adc
fs
ljmp
and
ret
mov
push
add
dec
push
xor
cmp
xor
xchg
and
inc
outsl
push
addb
pop
or
inc
in
imul
inc
movsb
ljmp
and
mov
std
int3
xorb
add
cmp
mov
push
cmpsb
mov
or
sub
sub
outsb
cmp
bswap
mov
or
mov
jo
cmp
js
lods
add
jp
int3
jae
test
mov
push
sbb
das
gs
add
and
push
pop
int3
cs
add
hlt
mov
adc
mov
filds
addr16
or
stos
cld
push
pop
jmp
nop
push
cmp
out
call
and
sbbl
sti
sub
dec
inc
mov
inc
inc
add
lahf
std
push
xchg
cld
imul
pop
bound
sub
add
mov
sbb
cmp
push
hlt
ss
mov
pop
adc
push
mov
push
mov
or
std
adc
leave
xor
shll
call
arpl
lret
and
data16
adc
mov
push
push
pop
jg
cld
inc
jnp
incl
inc
jmp
push
cmp
inc
jmp
sbb
in
add
jge
cltd
adcl
mov
mov
insl
loope
xchg
fadd
loopne
mov
clc
mov
clc
pusha
add
fxsave
adc
mov
jne
add
cmpsb
cmp
cmpsb
in
test
ja
or
mov
mov
xchg
dec
xor
jl
ss
adc
aad
fsubl
rol
daa
mov
pop
sbb
cmpsb
loopne
push
xor
mov
adc
ret
or
out
ja
or
shll
int3
cmp
aas
cltd
cmc
jmp
jmp
outsb
dec
pop
add
jae
in
stos
lods
mov
stos
popf
and
jo
mov
mov
mov
pop
clc
test
hlt
inc
dec
pop
cmp
cmp
stos
mov
xchg
pop
inc
add
inc
dec
inc
push
insb
jp
inc
mov
or
add
hlt
lods
es
jbe
cmpsb
mov
sub
cmp
repnz
pop
negl
inc
dec
inc
in
ret
push
cmp
cmp
xor
pop
in
sbb
push
adc
sahf
add
fiadds
adc
add
jb
ljmp
int3
fs
cld
leave
in
push
xchg
xchg
or
and
mov
cmc
pop
test
rcr
lea
add
inc
pop
enter
sarl
test
call
add
mov
inc
xor
std
or
je
and
add
cmp
push
enter
inc
ret
cmp
inc
push
call
cmp
rorb
xorb
pop
mov
push
sar
mov
mov
mov
js
pop
push
mov
rclb
adc
orb
adc
std
jmp
lea
es
hlt
jp
push
jne
pushf
dec
negb
xor
pushf
sbb
jmp
mov
push
or
jo
or
pop
pop
and
pusha
xchg
xchg
and
pop
invd
popf
or
push
lret
insb
xor
push
xor
adc
nop
lock
jmp
divb
cli
adcl
es
lcall
mov
pop
mov
popa
shr
mov
inc
cs
cmp
fld
mov
hlt
loop
xor
or
sbb
cld
test
add
cmpsb
loopne
rcrl
mov
clc
mov
lods
psrad
add
les
adc
xchg
or
cmpb
push
leave
orl
mov
pop
outsb
adc
push
arpl
and
fs
lds
test
or
add
outsb
ret
int3
cmp
xchg
adc
mov
arpl
repz
aaa
std
or
push
sbb
mov
outsb
add
jb
aad
push
test
and
or
add
mov
mov
adc
cmp
or
fdivrl
rcrb
cli
sub
cmp
je
aaa
mov
push
mov
xor
cmp
mov
mov
xorl
push
mov
or
lret
enter
jge
rcr
and
lock
fs
inc
jmp
push
inc
cld
mov
pop
pop
add
rcll
out
add
call
adcl
in
test
jecxz
data16
fadds
add
mov
gs
xorl
cmp
pop
jb
sub
popa
mov
push
jo
in
mov
hlt
test
adc
adc
jle
and
incl
jle
outsb
outsl
subl
mov
adc
std
dec
fs
mov
jle
pop
xor
call
mov
cmpsl
movsb
xchg
popl
loop
lea
in
cli
pop
jbe
hlt
pop
dec
cmpsb
shlb
pop
inc
cld
cmp
data16
dec
jne
clc
sbbl
mov
or
and
movsb
cmp
xlat
rolb
outsb
leave
mov
mov
std
dec
loope
fdivrs
jb
add
push
lds
xchg
mov
dec
pop
sbbb
push
std
pop
stos
into
dec
xor
xor
in
jmp
mov
push
je
addb
insb
xchg
dec
adc
cli
js
call
sub
in
push
das
clc
and
push
sbb
mov
xor
popa
push
and
xchg
movsl
iret
inc
cs
xor
mov
mov
dec
ret
push
roll
mov
or
cmp
xor
outsl
sbb
fs
mov
add
xor
testl
xor
pop
fadd
mov
ds
gs
add
jne
outsl
push
mov
cmp
loopne
xor
inc
imul
xor
in
je
jo
call
or
fsubr
xchg
fs
push
mov
add
mov
loopne
inc
mov
inc
push
add
xor
pop
loopne
or
cwtl
and
jbe
ret
push
xchg
in
or
cmp
int3
push
leave
and
ss
hlt
lods
mov
and
push
xor
jo
mov
test
add
pop
push
scas
cld
les
push
push
jg
push
popa
lock
js
xchg
inc
cmp
xchg
jecxz
loope
push
jp
loop
fldl
mov
mov
jo
add
jmp
push
fadds
mov
cwtl
mov
dec
xlat
push
mov
pop
faddl
clc
xchg
pop
aad
gs
inc
js
xchg
ljmp
xor
adcb
jnp
mov
sub
jmp
add
inc
in
outsl
int3
insl
je
push
jb
clc
inc
add
sbb
test
insl
add
add
out
pop
jne
mov
xor
jmp
mov
add
add
cmp
fs
shl
int3
decl
push
je
lock
jb
and
fidivs
dec
rcrl
mov
lea
jp
or
mov
movb
cmp
push
push
or
pop
lock
sahf
ljmp
fisttpl
into
mov
cli
fs
les
inc
ret
cmp
loope
call
inc
add
adc
and
cld
mov
xchg
cmp
push
test
pop
push
aam
mov
rolb
outsb
push
lods
xchg
and
and
push
ss
pop
mov
and
fidivl
add
ss
in
je
sub
leave
and
int3
loop
cmp
fcom
mov
xor
pop
ret
or
jmp
xor
mov
pushf
test
mov
js
mov
push
out
lock
fs
pop
sbb
je
mov
jle
arpl
insl
jo
test
add
dec
dec
push
mov
pop
sub
cmp
jl
pop
subb
popf
mov
push
ret
mov
rcrl
decb
push
xor
sub
imul
sbb
cmp
xor
aaa
fcompl
adc
in
push
adcb
sub
int3
cmc
push
add
pop
xor
adc
pop
js
dec
mov
cmpsl
and
add
in
fidivl
fdivrs
adc
xor
jbe
test
inc
fs
cmp
ret
xorb
je
dec
out
jo
stos
adc
jae
filds
test
rclb
pop
daa
mov
or
xor
xor
insb
mov
fildll
adc
adc
mov
mov
adc
in
fwait
add
push
xor
push
pop
inc
lock
sti
mov
or
mov
or
push
test
mov
and
pop
scas
mov
test
push
rcrb
out
push
loopne
adc
mov
xor
aaa
mov
cli
xchg
xchg
fimuls
jbe
ja
gs
or
sub
out
call
in
aaa
push
pop
call
bound
cld
test
sbb
cmpl
mov
imull
push
pop
adcl
ja
lock
aam
xchg
pop
push
add
mov
push
mov
outsb
mov
inc
shr
and
mov
add
pop
adc
mov
inc
inc
hlt
push
rcll
jns
and
fwait
scas
dec
push
pop
fsubrs
cld
mov
mov
jmp
push
fldt
pop
lods
mov
enter
lock
shrb
stos
cmpb
or
data16
pop
jmp
cmp
mov
lds
nop
addl
addl
shrl
push
cmp
inc
dec
inc
fisubrl
ret
dec
add
xchg
lea
dec
adc
mov
or
mov
fs
divb
push
ret
push
sar
movsb
xor
push
add
cli
push
pop
pop
incb
sahf
mov
cli
jg
jb
outsl
and
mov
aas
cwtl
or
filds
cld
and
push
pop
testb
pop
aad
cli
idivl
push
xchg
inc
in
data16
sbb
pushf
adc
adc
ja
lods
inc
mov
jb
or
sbb
cmp
in
iret
inc
dec
jne
cmp
lea
testl
mov
into
and
push
ljmp
cmp
xchg
pusha
sbb
dec
ds
jg
mov
add
lcall
xor
int3
roll
cmpsl
adc
and
adc
cwtl
test
jb
shrb
push
dec
xchg
into
mov
or
xsavec
push
cmp
cmp
jno
sbb
lret
add
adc
add
dec
ret
push
insb
push
dec
outsb
jg
cmpsb
call
mov
jge
fadds
fcomps
fs
sbb
jecxz
adc
inc
push
push
ret
cmp
pop
mov
cmp
outsb
xor
cmp
cwtl
cmp
out
push
mov
mov
push
sub
jbe
dec
mov
lcall
jmp
xor
mov
push
loop
sar
xor
add
mov
sub
adc
aas
push
insb
jmp
or
add
sub
jl
push
dec
sbb
dec
test
test
int3
enter
std
pop
mov
aad
dec
or
out
imul
fistpl
sbb
add
xlat
and
or
stc
jmp
dec
xchg
rclb
imul
in
pop
adc
movsb
rol
aaa
or
push
fsub
cmp
enter
popa
ret
push
adc
and
jmp
leave
outsl
je
fiadds
push
adc
jge
lock
nop
adc
pop
push
jbe
push
add
add
lock
scas
scas
add
je
pushf
inc
dec
mov
mov
test
popa
pop
or
hlt
inc
aam
inc
xor
inc
outsb
push
pop
cs
sahf
xchg
test
subl
imul
xchg
les
and
pop
dec
xor
dec
push
push
push
ja
push
add
test
je
ja
pop
cwtl
push
mov
mov
jmp
sbbl
pop
sbb
push
fmull
inc
pop
add
jmp
sbb
push
sbb
add
or
add
push
fmull
cmp
inc
xchg
push
gs
call
aas
sbb
inc
adc
or
cmp
or
mov
xchg
fs
mov
sub
lock
roll
stos
and
js
nop
or
add
rol
inc
mov
inc
inc
mov
lret
lea
mov
lret
push
adc
jnp
mov
call
inc
jb
mov
jmp
pop
sti
mov
inc
loope
or
out
add
sbb
adcl
inc
jmp
ret
fwait
sbb
sub
outsb
shl
lea
jb
outsb
xor
cli
ret
mov
inc
lock
push
or
or
sub
jmp
das
loopne
add
push
cli
xchg
mov
push
cmp
pop
cmp
sub
call
lock
in
mov
mov
mov
xor
adc
mov
loopne
cld
mov
add
leave
dec
push
orps
fsubl
fs
cli
out
mov
pusha
addl
xor
jmp
inc
xchg
pop
adc
mov
mov
je
int3
int3
mov
mov
fnclex
int3
mov
adcb
js
mov
push
jge
ret
pop
cld
cmp
sbb
add
andl
stos
mov
add
inc
mov
adc
lock
idivb
je,pt
ljmp
push
and
mov
inc
push
je
data16
pop
mov
cmp
insb
sbb
add
sub
call
fistpl
in
jle
cmpsl
cmp
int
fdivrl
test
sbb
in
sbb
call
add
sarb
pop
enter
pop
test
int3
mov
sbb
rcrl
notb
dec
pop
les
push
and
into
fdivl
pop
cwtl
lock
mov
push
cmp
xchg
adc
cwtl
call
xor
in
outsb
push
or
add
mov
stos
mov
cmp
fwait
sbb
add
mov
inc
test
mov
pop
cli
inc
add
adc
shrl
adc
mov
mov
ds
dec
inc
mov
sbb
or
ds
lock
shl
lea
adc
push
mov
cmp
mov
scas
pop
ret
pop
add
add
je
xor
and
fwait
sar
push
int3
aam
inc
clc
sti
lods
pushf
fwait
std
or
or
push
lret
dec
pop
repnz
mull
fiadds
xor
cmp
or
pop
outsb
insl
pop
addl
jmp
test
mov
pop
xchg
inc
rcl
sub
or
cs
sbb
push
stos
inc
fmuls
mov
lds
mov
inc
jp
xchg
dec
movsl
sbb
xor
and
les
icebp
xor
dec
repnz
add
jne
and
xor
pop
dec
mov
incl
mov
std
aas
mov
sub
mov
sub
sti
xor
xchg
pop
mov
lea
je
xor
adc
add
hlt
cmp
cmp
dec
ljmp
aaa
ret
cmp
sarl
ficoms
sub
out
adc
mov
fdivrs
and
outsb
jmp
das
mov
fisttpl
icebp
xor
and
sbb
pusha
test
rcll
lea
or
or
inc
dec
mov
mov
int3
inc
pop
cmp
push
dec
add
push
push
stos
lods
das
daa
or
jge
cmp
add
cmc
popf
pop
add
pop
cmpsb
ret
mov
daa
hlt
cmpsb
or
test
das
mov
inc
xor
inc
push
push
pusha
jg
or
pop
jle
push
popf
sbb
mov
loope
adc
xor
add
mov
ss
jge
and
int3
shrb
loope
fadd
xchg
call
or
scas
out
shr
test
rcrb
push
sub
pop
test
dec
jge
sbb
cmp
mov
insl
push
add
lcall
pop
mov
adc
push
xor
pop
xor
je
push
adc
int
not
inc
addb
cmpsb
popf
add
pop
mov
jg
add
add
cld
or
sbb
adcb
sbb
or
clc
mov
mov
in
sahf
mov
or
setp
bound
scas
add
add
test
call
adc
insb
push
out
testb
popa
orl
call
or
push
cmp
in
jmp
push
arpl
push
jmp
test
in
movsb
mov
push
js
xlat
out
addb
test
jp
xchg
test
add
test
leave
jo
dec
cmp
add
ljmp
decl
loopne
outsb
ljmp
add
outsl
cmc
les
cmp
lcall
outsl
mov
cld
mov
mov
inc
loopne
sbb
inc
pop
adc
xor
test
fcomps
jmp
jmp
push
add
xchg
shll
xor
sbb
or
stos
mov
dec
ret
std
cld
sbb
adc
pop
pop
add
add
mov
es
add
loopne
movsb
lods
sahf
inc
call
add
lock
dec
adc
inc
and
sbb
cwtl
inc
fidivrl
jmp
xor
push
xchg
pop
xor
jbe
add
pop
mov
mov
data16
mov
les
add
addb
loope
ret
pslld
aaa
std
add
or
mov
sbb
mov
mov
aaa
jg
insb
insb
mov
cmp
jo
jle
xor
add
stos
mov
ljmp
jb
cld
jb
int3
shrl
das
sub
xchg
xchg
stos
jp
push
clc
addb
loopne
or
jmp
xchg
add
das
xchg
imul
mov
fidivrs
je
pusha
mov
iret
cmp
or
es
out
aaa
fmull
fadds
jl
jmp
sub
shrb
mov
sbb
mov
add
mov
pop
jne
push
cmp
adc
idivb
add
popa
pop
dec
jge
and
inc
mov
add
push
add
dec
push
lcall
data16
outsl
inc
jmp
jo
xchg
test
aam
push
insb
loopne
xchg
insb
inc
cmp
insl
and
mov
cmp
xchg
fs
add
out
sub
add
adcb
mov
xabort
decl
popa
lds
lret
in
xchg
jo
mov
jmp
push
cmp
sbb
adc
inc
push
je
pop
daa
or
xchg
push
mov
sbb
mov
inc
dec
lods
aaa
push
add
stc
das
fcomps
notb
mov
aaa
mov
mov
pusha
shlb
adc
sbb
sbb
dec
dec
add
ret
loop
or
pop
repnz
cmc
pop
or
test
outsl
outsl
pop
out
add
cli
add
inc
mov
adc
and
sub
push
fs
aam
xchg
dec
cli
lret
rclb
jl
mov
pusha
je
xchg
sub
movb
add
fnstsw
and
jne
jmp
add
je
movsb
ljmp
outsb
cmp
fdivrp
lret
dec
dec
clc
mov
and
cmpsl
call
and
and
mov
jmp
fdivrs
ret
sub
pusha
loopne
mov
sarb
imul
and
cmc
pop
pop
aas
mov
call
movsb
adc
and
sbb
loop
mov
push
adc
movsb
pop
mov
inc
notb
rcrl
add
and
shll
addl
sbb
add
cli
dec
push
mov
inc
hlt
lds
notb
rcrb
test
int3
xor
call
cmp
iret
jbe
xor
mov
jmp
push
inc
push
adc
test
pop
fcoml
and
add
lock
adc
adc
ret
mov
pop
test
xor
jg
push
dec
lea
add
jnp
aam
fcoms
ficoms
and
test
jmp
jecxz
sub
loope
movsb
dec
repnz
cmp
xor
or
cmp
mov
sub
pop
mov
je
and
test
call
mov
sahf
in
adc
pop
pushl
dec
inc
mov
dec
jo
push
mov
inc
cmp
or
gs
push
in
lcall
incl
inc
imul
add
add
and
ret
inc
les
rcll
mov
andb
lods
push
add
loop
mov
clc
lahf
and
stc
jp
push
outsl
enter
outsl
neg
sub
call
push
aam
mov
dec
push
orb
es
mov
add
xchg
int3
and
inc
jge
inc
jae
loopne
aam
sbb
sbb
cmpl
add
inc
fcompl
std
dec
pop
gs
daa
cmp
jno
pop
stos
and
mov
ss
jle
push
pop
iret
add
mov
push
sub
xchg
in
xor
push
adc
jp
mov
sahf
pop
ret
scas
pop
cli
mov
std
xor
cmpb
stos
pushf
imul
push
std
fldl
call
add
add
mov
fdivrl
mov
lret
jmp
xorb
fimull
fdivs
and
sub
dec
fadd
sbb
loop
push
insb
and
xchg
fiaddl
mov
outsb
xchg
mov
xchg
lods
or
jns
push
cld
inc
out
lods
imul
push
fldenv
mov
mov
pop
push
clc
adc
sub
data16
lea
and
jne
and
pop
dec
cmc
in
jne
pop
insl
jne
loope
incb
ret
pusha
test
leave
int3
cmpsl
shlb
mov
clc
and
jmp
mov
dec
idivb
mov
rorb
outsb
cmp
lock
bound
and
shll
sub
pop
fs
aam
xor
fisttps
mov
fcoms
jne
add
sti
lods
fnstenv
jg
pop
jb
inc
mov
aaa
jae
sahf
scas
sar
jo
lea
loop
popa
adcl
int3
clc
pop
test
daa
cld
adc
push
jo
test
add
jg
mov
pushf
loope
ret
idivb
in
push
aam
sub
push
dec
sbb
xchg
xchg
mov
pusha
lods
xor
add
push
push
pushf
stc
pop
push
add
ret
leave
dec
and
iret
cltd
xorb
adc
fcompl
clc
fidivrs
cmp
cmc
adc
jns
andb
mov
mov
add
movsb
jecxz
cld
pop
lock
cmpsl
jp
rcrl
notb
inc
cmp
test
dec
pop
mov
ret
ss
xor
les
add
jp
int3
sub
mov
mov
mov
mov
sbb
test
cld
lret
loopne
sbb
lock
ret
add
pop
fists
mov
cmp
scas
jb
add
mov
and
test
xchg
xchg
ret
inc
int3
imul
ret
stos
push
jb
pop
jbe
div
jb
repnz
cmpsb
or
fmuls
inc
mov
add
shrl
rol
nop
icebp
test
cld
and
mov
push
out
push
std
loopne
ret
or
int3
fldt
cmp
lea
mov
rcrl
mov
inc
popa
adc
and
pop
dec
xor
pusha
push
test
sbb
fs
pop
clc
mov
jle
sub
mov
pop
shll
or
enter
cltd
xchg
and
je
lea
push
jg
pop
inc
mov
xor
test
jge
xor
xorl
or
inc
xor
mov
add
fildll
mov
nop
test
test
push
fiaddl
xorb
sub
xor
adc
icebp
inc
jl
popf
adc
lret
rclb
jb
inc
xchg
jmp
sub
mov
jg
pusha
add
sbb
lret
in
mov
imul
lea
jae
dec
scas
mov
pushf
and
imul
add
adc
add
aam
inc
add
ljmp
ljmp
scas
negl
gs
aas
adc
inc
xlat
in
data16
mov
dec
rol
pop
fisubrl
movl
push
enter
ja
and
imull
pop
lock
es
lea
xchg
movsb
test
mov
xor
nop
lcall
in
mov
imul
das
test
aad
ret
hlt
mov
int3
mov
sbb
or
or
push
push
jecxz
mov
cmc
mov
testb
subl
lods
out
mov
mov
and
rcll
sbb
or
fs
adc
leave
mov
cmp
sahf
add
nop
push
imul
mov
test
add
sahf
divb
mov
mov
and
pop
jge
mov
mov
pusha
or
sti
incl
decb
adcl
mov
mov
shlb
test
icebp
sbb
out
int3
in
add
mov
and
cmp
xchg
adc
and
add
rdtsc
push
add
sub
cld
jmp
add
inc
jmp
jb
jl
pop
xchg
aaa
popa
lock
mov
mov
rolb
xchg
icebp
jle
and
out
push
xchg
popa
xchg
jbe
addr16
or
and
cli
sbb
push
adc
mov
call
std
outsl
aam
jmp
adc
jmp
add
push
fsubrl
sub
pusha
jle
je
fsub
cmp
xchg
xorb
in
push
mov
mov
cld
fs
sbb
nop
cmp
pop
inc
push
inc
inc
rolb
orb
sbb
inc
rorb
adc
pusha
mov
cmp
repnz
mov
scas
fidivrs
jne
jp
push
cmc
cltd
jl
or
push
dec
arpl
sub
push
push
js
add
push
push
shr
shll
movsb
xchg
push
jmp
mov
mov
inc
mov
cmp
divb
into
xor
sarl
jo
mov
or
sbb
mov
jecxz
das
mov
mov
push
adc
std
test
add
fs
add
leave
addl
clc
sbbl
push
sbb
mov
fildl
push
mov
rcrl
leave
push
lods
inc
mov
insl
mov
adc
mov
inc
inc
mov
enter
mov
mov
pop
daa
aad
xchg
adc
mov
mov
mov
pop
jmp
cmpsb
sbbl
mov
add
xchg
adc
push
in
xchg
adcb
sbb
xchg
bound
loop
jle
mov
sti
cmp
inc
cmp
fmull
dec
inc
mov
or
test
and
testb
push
jge
cli
and
pop
push
in
and
and
test
fs
das
cmp
xor
mov
int3
mov
mov
outsb
push
mov
pop
call
outsb
dec
test
das
addr16
inc
mov
notl
pop
jl
xchg
stc
int3
pushf
std
ret
rorb
jmp
mov
push
jo
aas
fbstp
cmpsb
cmp
icebp
xchg
sbb
push
repz
ljmp
jo
push
unpcklps
fisttpl
cs
mov
or
sti
add
stos
jo
or
sub
mov
addl
int3
je
or
cmp
sbb
or
dec
sub
and
cmp
pop
lock
ficoml
cld
lret
jnp
dec
and
dec
movsb
fsubrl
mulb
mov
or
lods
shl
movsl
or
jne
mov
fcomip
xor
testl
into
cs
cs
pop
pop
or
shll
es
aas
push
fdivr
add
mov
jle
push
xor
sub
hlt
jbe
add
mov
and
imul
sarl
or
jp
sbb
mov
inc
fidivl
les
dec
xor
sarl
mov
test
enter
sarb
inc
sbb
sub
cli
out
and
push
add
sub
sub
dec
inc
sarl
lock
loopne
add
test
outsl
jl
cld
cmp
dec
ljmp
add
add
fwait
or
sub
stos
or
lock
push
sarb
add
push
in
bound
sbb
into
push
add
sbb
push
pushf
push
dec
cmp
mov
and
or
push
movsb
aas
call
loopne
sbb
jmp
nop
xchg
xor
sbb
mov
cmp
pop
sub
push
mov
pop
sub
jg
stos
mov
add
xor
add
jmp
iret
lock
xor
aad
rolb
jo
cli
inc
pop
arpl
sar
sbb
cmp
push
cmp
xorb
sahf
pop
push
cld
loope
or
mov
cmp
ret
sbb
mov
shll
push
rclb
outsb
jb
ret
adc
jg
xor
call
or
popa
lods
jle
push
pop
mov
incl
and
mov
pop
jns
test
scas
fidivl
js
lock
incb
sub
push
and
int3
add
dec
mov
ds
xor
adc
sbb
or
or
or
mov
mov
sub
incl
or
idivl
daa
pop
les
call
inc
imul
ds
jo
nop
pop
xorb
lret
pushf
xor
rorb
mov
add
push
add
leave
dec
test
cli
shlb
test
sbb
test
and
es
push
mov
push
ljmp
adc
inc
lods
xchg
incl
mov
scas
sbb
cmp
in
mov
cld
test
pop
pop
adcb
add
loopne
nop
push
dec
mov
sub
add
push
push
jo
cmp
or
sbb
xor
subl
hlt
xchg
xchg
push
fidivl
into
jb
adc
fwait
lea
and
mov
imul
clc
and
mov
loopne
shlb
dec
das
add
gs
push
cmp
fnstsw
hlt
or
fs
mov
dec
jbe
cmp
cmp
push
or
add
shlb
inc
add
cwtl
dec
mov
lea
aas
js
cmp
lea
inc
das
push
jl
inc
push
and
push
lahf
sbb
cmp
js
mov
jb
loopne
out
in
addb
in
and
jo
mov
push
jns
sbb
ss
mov
mov
nop
pop
push
inc
push
addr16
gs
xor
mov
movsb
dec
mov
and
cli
lea
rclb
or
mov
incb
stos
cmp
add
iret
outsb
push
test
in
mov
outsb
xor
jge
inc
insl
testb
jne
fs
pusha
scas
shrb
leave
adc
push
cld
into
mov
popf
add
jne
in
xor
das
inc
dec
je
push
or
jle
lahf
int3
mov
roll
xchg
fdiv
jl
cs
mov
clc
outsl
bound
test
outsb
mov
mov
js
outsl
jl
and
add
aas
lods
lea
fstpt
or
outsl
ljmp
mov
push
mov
xlat
loopne
mov
ret
pop
mov
aaa
in
dec
cli
pop
push
movl
push
dec
subb
ret
mov
xchg
inc
and
repz
push
push
lret
stos
lods
or
sbb
in
push
mov
sbb
mov
and
stos
push
push
lods
test
push
scas
dec
jmp
loop
mov
arpl
fwait
test
jne
and
and
sub
bound
pop
clc
push
lcall
mov
test
mov
push
add
out
or
enter
mov
movsb
decl
mov
dec
dec
dec
xchg
add
insb
insl
inc
rolb
and
or
rolb
enter
push
test
ret
add
dec
clc
push
xor
ret
in
add
incb
ljmp
cld
insb
test
sub
pop
gs
mov
fst
lods
inc
dec
ficomps
mov
add
cmc
sub
or
scas
jle
pop
mov
aam
lods
je
mov
adc
sub
jl
dec
mov
adc
es
clc
jmp
add
aam
mov
enter
mov
add
jbe
mov
push
pop
mov
xchg
out
les
movsb
or
xchg
gs
int
cmpsl
push
xor
or
les
lods
jle
mov
dec
cmpsb
insb
addr16
imul
stos
cmp
or
rclb
pop
adcl
inc
push
add
cmc
jbe
inc
stc
mov
mov
aas
push
lcall
lods
mov
xor
add
cld
inc
mov
test
add
mov
test
mov
ret
mov
decb
jo
adc
mov
lea
add
mov
pop
mov
imul
push
cmc
in
push
cmp
cwtl
std
clc
in
add
jb
hlt
push
test
push
sbb
and
sbb
ret
xor
test
mov
add
jo
jb
inc
add
movsb
jle
shrl
mov
fidivl
lock
std
lock
int3
and
push
pop
cmpsl
cli
adc
pushf
js
sub
add
pop
cli
pop
std
pop
inc
xor
inc
add
test
js
mov
dec
push
in
mov
pop
fs
jne
pop
add
js
outsb
cmp
mov
ljmp
cmp
sbb
dec
adc
jnp
xchg
lea
sbb
dec
mov
adc
xor
dec
rcrb
mov
sbbl
andl
sbb
pop
jne
in
push
sub
or
fiadds
or
fmull
xor
mov
inc
out
clc
inc
xor
xchg
rcl
lahf
subl
adc
leave
stos
pop
lds
ljmp
jmp
andb
xchg
pop
subb
icebp
test
pop
and
fstpl
mov
jbe
xor
mov
shl
xor
pop
dec
xor
sbb
test
pop
cmp
ds
loopne
int3
dec
xor
movl
call
or
or
pop
in
or
aas
call
ficompl
loopne
cmp
mov
mov
pop
test
inc
in
mov
bswap
add
pop
stos
xchg
clc
fildl
fmull
cld
ret
je
scas
mov
pop
mov
sbb
or
jmp
mov
push
mov
cld
std
inc
mov
push
xor
shlb
pop
dec
imul
jb
sub
adc
jo
mov
clc
sbb
add
and
push
jne
inc
jo
ljmp
test
push
ljmp
or
mov
cld
pop
push
lcall
or
in
scas
lret
incl
and
test
pop
enter
inc
dec
push
test
jle
mov
pusha
mov
movsl
incl
pop
dec
cmp
mov
data16
ss
enter
je
sbb
in
cwtl
popa
mov
jle
jo
outsb
dec
outsl
fsubrs
cli
mov
xchg
enter
jecxz
mov
mov
push
pushf
jno
cmp
jl
movsb
push
outsb
mov
addr16
inc
adc
lods
sub
incl
push
cmp
ss
mov
cmc
outsb
lock
addb
or
sahf
jecxz
mov
sbb
xchg
jo
dec
push
les
sbb
pop
sub
pop
pusha
push
sub
out
sbb
loopne
testb
in
add
jge
stc
popl
out
cli
inc
or
sbb
push
xor
fldl
cmp
mov
ja
or
stc
jne
je
in
mov
push
push
lods
lret
sub
jg
sbb
mov
clc
jbe
jne
lods
clc
inc
loopne
sbb
push
addr16
insl
add
and
cmp
jmp
enter
or
jb
je
popa
inc
bound
xor
hlt
add
mov
add
push
sar
shlb
and
nop
add
lock
scas
rsm
or
mov
inc
addr16
jns
cmp
jns
fdivl
adc
mov
je
je
and
mov
cmp
dec
and
xor
imul
outsl
jo
mov
xchg
rorl
call
push
adc
lea
pop
inc
rclb
loopne
add
add
push
xor
mov
lret
adc
shrb
push
insl
pop
sbb
inc
xor
fwait
and
adc
and
pop
dec
and
sbbl
dec
cwtl
test
std
pop
lock
les
sahf
pop
inc
sahf
ret
pushl
inc
clc
bound
or
xor
jle
ja
dec
std
jnp
ror
inc
outsl
add
orb
jne
xor
jg
mov
jb
mov
push
mov
mov
loop
cmp
pop
or
and
ret
bound
sub
push
inc
iret
pusha
or
sbb
pop
add
sarb
pop
jmp
mov
fbstp
xor
and
daa
mov
ljmp
pop
inc
and
pop
test
shlb
sub
mov
jmp
lret
pop
ret
jmp
data16
jmp
mov
int
loopne
dec
jno
test
xorb
hlt
test
add
pop
jp
loopne
push
inc
adc
sub
aam
mov
pop
call
jb
ret
out
int
and
imul
sub
subl
xchg
dec
mov
inc
stos
rolb
push
inc
and
add
or
push
mov
and
pop
fdivs
je
fdivl
add
idivb
bound
push
cmp
outsb
repnz
or
and
movsl
or
xor
mov
leave
sbbl
mov
sub
jnp
pop
and
add
loope
fidivrl
xchg
cmp
lret
push
xchg
cmp
xchg
lcall
ret
mov
sbb
or
mov
js
fwait
push
in
cs
xor
in
or
cwtl
decb
cmpsb
push
out
rolb
mov
int3
mov
dec
pop
test
add
andl
dec
dec
insb
mov
clc
pop
mov
arpl
adc
xchg
cmpsb
cmp
xchg
movsb
add
push
dec
or
mov
adc
mov
pop
lods
rcrb
cmp
les
pop
add
dec
lahf
push
mov
mov
test
cmp
movsl
and
cmc
cmpsb
xor
sub
mov
add
mov
add
xor
push
mov
out
inc
mov
cmpb
cs
shlb
iret
lock
dec
sub
loop
loope
jo
insl
xor
fcoms
jb
out
call
notb
testw
arpl
adc
lock
jge
inc
mov
cmp
inc
mov
add
insb
ds
cmp
mov
pusha
mov
mov
cli
mov
push
movsl
js
jo
sub
adc
adc
cmp
sti
inc
call
xor
adc
mov
add
imul
mov
mov
jle
cld
mov
jmp
cmp
push
push
push
test
aam
mov
dec
pop
call
and
cli
rcrb
mov
sub
or
pop
stc
push
pushf
jne
pushf
cld
leave
push
sarb
mov
aam
dec
popf
js
in
popa
inc
sahf
sbb
jg
outsb
sbbb
test
pop
mov
mov
add
mov
mov
inc
scas
rorb
cmp
out
inc
hlt
add
mov
push
cld
and
rorb
movsb
add
addr16
popa
icebp
loopne
lock
sub
outsb
out
hlt
mov
adc
or
jmp
mov
pop
pop
sub
clc
mov
test
popf
in
test
pop
jne
add
add
or
or
iret
adc
inc
jo
leave
fiadds
data16
sbb
xchg
xchg
pop
sbb
stos
jb
sbb
jne
mov
jmp
dec
sub
rolb
fs
lock
stos
pop
mov
int3
xor
pop
fiaddl
jnp
addr16
rcll
out
loopne
add
add
adc
inc
adc
mov
push
divl
jl
sar
ret
inc
ret
mov
and
mov
lahf
sub
lock
sbb
xchg
enter
sbb
or
adcb
inc
fstpt
adc
arpl
push
mov
adc
nop
push
lods
call
ret
or
aad
loope
clc
flds
scas
aas
or
xchg
int3
push
jmp
jo
aam
sbbb
cmpsl
mov
stc
dec
xor
sub
addl
add
add
add
push
adc
jmp
cmpsl
lock
mov
sbb
inc
gs
push
inc
enter
mov
adc
sub
lods
pop
fidivl
inc
push
andl
push
cmc
loopne
mov
push
call
mov
popf
add
pop
addl
dec
push
inc
push
jl
push
popa
lock
and
mov
call
mov
cld
xadd
out
aam
inc
mov
adc
push
or
cs
jbe
loope
fisubrs
outsl
pshufw
push
jo
push
cmp
shlb
out
je
add
mov
insb
and
cli
sar
lea
add
xor
xor
cmp
jb
outsl
mov
xor
orl
in
outsl
ja
mov
cmpsb
push
inc
mov
cmpsb
add
add
push
js
pop
adc
and
mov
addb
push
mov
inc
mov
rcr
lea
push
adcb
ss
mov
mov
sub
fcom
shlb
pop
xor
shrb
add
cwtl
or
or
movsb
jl
add
loopne
pushf
shr
xor
lcall
sahf
push
pop
and
push
push
push
inc
add
into
adc
xchg
sarb
add
stc
in
repz
or
adc
xchg
in
call
pop
ret
inc
add
cmp
fisttpll
fs
xor
pop
inc
and
mov
push
xor
and
out
call
add
mov
mov
icebp
sbb
ret
adc
mov
les
xor
xchg
incb
mov
sbb
sbb
jg
rcrb
or
int
pop
inc
jne
cmp
or
push
nop
sbb
cmp
add
jle
mov
and
cld
pop
dec
add
loop
mov
loope
dec
std
jbe
mov
jb
add
pop
mov
mov
inc
scas
sbb
mov
cmp
push
aad
add
mov
call
dec
dec
hlt
add
cmp
lret
js
and
add
jmp
xchg
clc
test
clc
mov
ljmp
dec
int3
mov
add
cltd
shll
jg
loopne
inc
jmp
stos
data16
fs
mov
add
lea
push
cmp
cmc
xor
push
rclb
xor
fiadds
in
adc
ljmp
ret
loopne
push
xchg
adcb
inc
mov
pop
dec
shrb
xor
icebp
ffree
adc
mov
xchg
cli
or
out
sarl
ret
xor
mov
call
jo
jo
mov
movsb
clc
jge
push
ds
and
js
fisubl
loop
inc
stos
incl
call
nop
test
js
add
pushf
aaa
cld
adc
push
ja
or
sbb
xor
arpl
add
gs
pop
rcrb
xchg
mov
mulb
xor
movsb
scas
test
adc
pop
incb
adc
in
sarl
pop
movsl
lea
adc
stos
add
push
pusha
std
cmp
cli
fdivl
fisttps
mov
xchg
push
call
or
fidivrs
xor
jecxz
pushf
in
cmpsb
rorl
in
jb
ror
out
mov
subb
shl
test
imul
and
sbb
adc
push
jne
add
xchg
add
loop
mov
lahf
add
call
jbe
mov
ret
cmp
rcrb
pop
subb
rorl
test
push
mov
lock
sub
lds
call
jne
sbb
fdivrs
push
fistpll
enter
add
jb
loopne
jg
or
xor
lcall
push
les
jb
call
int3
pop
sub
cld
loop
add
sbb
clc
push
cmp
int3
cmp
adc
fnstsw
sbbb
dec
in
pop
fistl
mov
lahf
pshufw
jno
inc
enter
add
cmpl
popf
int3
sbb
push
inc
cld
inc
mov
pop
test
jne
mov
mov
cmpsl
in
push
fadds
je
push
pusha
and
jmp
andl
jg
pop
test
mov
push
mov
dec
push
push
ds
or
aaa
insb
inc
add
jl
out
repnz
lfs
adc
ret
in
notb
sbb
push
adc
rolb
mov
mov
inc
inc
jbe
jns
add
pop
mull
pop
mov
adc
mov
mov
add
sub
pushf
add
cmp
popf
rcrb
out
aam
push
bound
sub
nop
pop
scas
xchg
lret
push
adc
mov
icebp
sbb
bound
jb
add
fimuls
jb
dec
cli
add
notl
mov
scas
addb
jl
stos
sub
jmp
and
xchg
or
shl
push
outsb
ss
je
mov
sub
xor
outsl
inc
clc
loopne
mov
xor
cmp
leave
push
pushf
sbb
mov
dec
sbb
call
or
aam
fdivr
add
aaa
xor
push
push
xorl
mulb
inc
xchg
test
mov
mov
sub
jle
dec
adc
cmp
mov
mov
ds
cli
dec
mov
sbb
aaa
idiv
pop
in
push
cmp
adc
test
and
jle
and
stc
mov
adc
out
adc
fucomip
mov
shll
dec
inc
xor
add
mov
and
dec
loope
ds
and
and
ds
fwait
nop
jl
add
fcomi
clc
clc
pop
sbb
hlt
and
daa
outsb
adc
add
push
jmp
stos
decl
mov
cs
loope
arpl
sahf
lock
in
pop
inc
xor
adc
iret
js
pop
fnstenv
aad
mov
leave
sub
inc
mov
lret
rol
jg
mov
sbb
pop
aad
test
pop
cmp
push
popa
mov
ret
xchg
ret
scas
ret
mov
push
hlt
mov
mov
mov
lock
outsb
aam
cli
lock
cmp
test
add
test
push
and
cmp
dec
pop
rolb
push
outsb
xchg
inc
loop
cs
imul
inc
nop
xchg
mov
cli
push
fwait
mov
add
xchg
mov
mov
and
ljmp
rcll
mov
mov
mov
pop
out
cmp
mov
sar
in
or
jge
loop
les
push
xor
or
pop
hlt
adc
out
or
mov
lods
and
setns
push
cmc
add
aas
xor
dec
add
dec
push
dec
shrl
jmp
test
xchg
jb
mov
sub
or
mov
test
push
ret
push
add
clc
adc
xor
enter
cli
out
pop
or
popa
pop
je
call
xor
rclb
mov
adc
dec
mov
stos
mov
aas
mov
fcmovbe
pop
and
lret
gs
mov
clc
or
cli
in
mov
push
scas
test
fmuls
pushf
push
jmp
pop
je
dec
or
and
jo
xor
outsb
push
lcall
and
pushf
ds
gs
cli
xlat
fisttpll
push
add
pop
lcall
loopne
add
lods
adc
sbb
mov
outsb
ret
fdivrl
call
mov
jge
xor
inc
int3
xor
push
loopne
mov
dec
mov
cld
or
xchg
lods
mov
mov
push
icebp
xor
add
push
sbb
popf
pop
add
mov
or
push
inc
int3
js
mov
add
out
inc
pop
filds
sbb
mov
jl
lea
test
dec
andb
fildll
add
int3
cld
push
xor
push
and
les
cmp
push
mov
jae
dec
xor
add
xor
in
fstl
or
push
in
divb
fiaddl
test
push
add
and
aas
pop
add
cld
inc
push
sar
movb
rol
push
mov
mov
stos
add
inc
lcall
mov
or
add
clc
pusha
mov
pop
test
fnstenv
clc
in
subl
dec
dec
cmp
in
pop
xor
outsb
aam
jl
add
cli
mov
mov
incl
pop
std
pushf
sahf
or
daa
int3
cmp
mov
aam
and
dec
inc
jge
sub
push
xor
dec
sub
inc
lock
les
sbb
test
xchg
mov
add
add
pop
test
aas
add
leave
mov
stos
inc
stos
lea
lret
cld
inc
decl
mov
mov
push
cmp
inc
shl
enter
js
inc
scas
add
scas
out
loopne,pt
adc
outsw
jb
or
iret
shrb
push
lods
inc
inc
and
mov
mov
ljmp
adcl
lea
cmc
fnstenv
dec
and
rcrl
std
jg
push
push
push
nop
adc
sub
outsb
test
scas
mov
dec
mov
rol
adc
imul
adcb
jge
lea
cmpsb
cmc
hlt
ja
push
xor
sub
decl
icebp
aam
fcom
in
inc
call
ss
out
pop
adc
mov
add
add
lcall
pmaddwd
test
add
mov
vmread
xchg
jbe
in
popa
inc
jb
stc
mov
into
loopne
mov
jle
xchg
mov
ljmp
enter
jne
mov
push
repnz
outsb
sub
sarb
out
cmp
and
mov
or
inc
repz
adc
aam
or
jb
jecxz
push
add
in
fwait
hlt
sarb
cmp
mov
add
bound
mov
mov
movsl
push
cmp
nop
call
rol
mov
jle
xor
push
lock
imulb
adc
pusha
sbb
xchg
test
cmpb
js
cmc
jg
push
xor
add
rol
push
adc
sarl
mov
mov
out
idivb
add
aam
and
mov
rclb
xor
outsb
jg
orb
xor
jmp
loopne
imul
xchg
popa
jl
xor
hlt
sub
dec
pusha
ljmp
pop
test
lods
push
in
fmull
loop
stos
add
ljmp
adc
xchg
mov
or
adc
fwait
mov
mov
push
inc
cmp
dec
subb
popl
jecxz
and
inc
push
or
in
inc
fmull
mov
loopne
test
fldl
xlat
out
int
or
jne
jne
pop
call
mov
cld
add
lahf
js
rcrb
push
add
inc
int3
inc
das
xchg
add
push
dec
pusha
cld
or
fcoms
push
dec
mov
mov
call
jge
loopne
adc
rolb
cmc
div
insb
adc
or
push
xor
jnp
bound
stos
mov
inc
cmpsb
sub
dec
aam
cld
shl
push
xorl
shrl
mov
call
push
rorb
in
dec
pop
inc
mov
adc
cmc
cld
adc
ret
movb
sahf
jmp
call
fidivs
inc
sub
bound
fs
mul
mov
mov
mov
int3
push
pusha
sub
movsb
cmp
or
dec
sbb
das
mov
mov
or
loope
or
ss
push
xchg
enter
pop
int3
adc
in
fcoms
inc
push
mulb
int3
orl
je
popf
ret
push
stc
imul
mov
leave
rorb
mov
sbb
js
mov
jmp
loope
es
rol
lea
test
sub
leave
push
addb
decb
push
cmp
or
add
fildll
mov
push
scas
dec
or
insb
jle
data16
test
mov
push
adc
push
or
push
inc
jge
pushl
rorb
push
mov
ret
xor
or
sbb
adc
jmp
mov
rorb
filds
mov
inc
cmp
andl
scas
and
jo
pop
sbb
out
mov
fadds
push
call
cmp
adc
lcall
clc
xchg
outsl
cmp
test
jl
jns
dec
sbb
ficompl
incl
loop
and
mov
xor
imul
sbb
lock
mov
les
mov
test
sbb
in
push
inc
mov
or
insl
pop
movsl
gs
dec
or
orl
cmp
push
cmp
sub
add
mov
cli
and
cmp
sbbb
or
sahf
lea
mov
test
inc
clc
add
dec
inc
jg
shlb
test
int3
or
push
add
xchg
mov
adc
ret
adc
lidtl
cs
shlb
push
mov
incl
call
pusha
shrb
and
ljmp
inc
outsl
mov
cld
sbb
mov
mov
inc
adc
lea
loope
clc
add
xchg
enter
inc
push
mov
loopne
add
test
in
fs
push
sub
sti
inc
punpcklwd
sti
push
cmpsb
add
rcrb
fwait
jp
mov
mov
cmp
lock
arpl
cmpsb
add
rolb
xor
push
adc
sub
or
call
icebp
ljmp
inc
add
sbb
add
int3
pop
push
xor
push
or
push
hlt
dec
test
add
dec
sub
ds
imul
cs
sti
mov
pusha
jnp
xchg
fs
je
adc
cmp
push
hlt
xchg
xor
repz
push
push
cld
jg
popa
mov
push
je
inc
stos
vpunpcklwd
dec
js
cmpsb
jle
xor
dec
test
fcmovb
pop
push
std
sub
loope
pop
ss
push
xchg
push
adc
call
je
mov
inc
ljmp
fistps
add
xor
test
invd
inc
aad
inc
ret
test
mov
outsl
mov
add
cld
push
in
push
mov
xor
pop
adc
test
ss
or
adc
inc
xor
leave
mov
lock
fildl
test
cmp
inc
sub
test
mov
dec
add
mov
push
orl
add
or
pop
loope
clc
aam
mov
jl
rcr
or
sub
push
pop
sub
out
daa
jne
loop
mov
adcl
add
xchg
and
push
aam
imul
je
into
mov
into
shlb
jne
shrb
incl
push
dec
xor
les
rorb
adcl
xchg
shll
push
arpl
mov
inc
xor
dec
adc
and
adc
call
push
inc
data16
mov
loop
xor
push
push
jb
cmpsb
cli
inc
fisubrl
jne
data16
insb
call
adc
incl
or
push
faddl
scas
jp
fsubs
mov
adc
push
pop
push
or
sub
addl
mov
pop
outsl
lock
mov
pop
or
andl
shl
subb
jp
lea
lea
ficoms
or
pop
add
xor
push
inc
push
lock
je
mov
shll
cli
cmpb
popa
inc
add
pop
je
fs
pop
sahf
es
adc
call
bound
dec
mov
repz
jmp
movsb
sub
mov
aam
je
insl
addr16
enter
add
mov
xchg
call
adc
pop
cmp
popf
fists
cmpl
scas
test
outsl
cmpsb
test
or
or
sahf
pop
sub
inc
rol
subps
data16
inc
or
or
pop
mov
adc
xor
insl
mov
lfs
push
fisubrl
add
xor
in
or
jbe
int3
mov
outsb
ds
rcl
dec
push
xor
sub
test
lock
jg
bound
iret
mov
ret
adcb
aas
cwtl
ret
test
aaa
je
pushl
or
dec
divl
push
sar
ret
add
mov
dec
mov
add
in
mov
scas
fisubl
fidivl
rclb
push
mov
or
aas
clc
push
push
gs
cld
ljmp
dec
jb
fwait
sub
loope
sub
roll
je
add
aaa
ds
stos
sbb
call
fsubrp
sbb
fisubl
or
cli
sbb
mov
mov
mov
add
and
adc
add
bound
test
push
lods
cld
loopne
pop
inc
or
dec
mov
repz
mov
push
add
fwait
push
aam
pusha
mov
push
cld
incl
push
or
and
andl
mov
sbb
add
in
ret
adc
sub
or
fadd
and
fbld
push
adcl
fucom
xchg
lret
mov
mov
js
cmp
mov
outsl
mov
daa
add
pop
ret
xor
inc
cmp
enter
outsb
sbb
push
push
inc
lret
movsb
or
test
mov
mov
jns
mov
xor
lock
lea
addr16
aaa
lcall
add
ror
jmp
pop
or
or
outsb
mov
adc
call
mov
je
jbe
xchg
push
dec
xchg
aam
push
xor
dec
insb
test
dec
mov
push
cld
fcoms
call
mov
call
sub
inc
inc
mov
mov
mov
xchg
adc
insl
mov
inc
dec
out
cmp
jg
or
dec
lock
repnz
fcos
mov
cwtl
pop
mov
mov
push
out
mov
add
push
adc
mov
add
test
jmp
mov
mov
push
xchg
inc
jo
and
lock
ret
lock
mov
in
outsb
or
lods
mov
push
rcll
movb
xor
jb
inc
dec
dec
popa
insb
inc
add
insl
stos
add
add
pop
mov
nop
mov
jae
or
ficoms
les
push
adc
jp
loopne
lahf
es
call
xchg
jne
sub
and
pop
push
xor
mov
rolb
test
test
push
fs
pop
ljmp
mov
pop
sub
mov
mov
push
into
out
cli
inc
lods
mov
test
add
inc
pop
jne
in
ja
hlt
call
add
lret
loop
mov
dec
xor
dec
mov
je
das
out
sar
mov
xchg
cmpl
push
mov
insb
and
adc
movb
pop
hlt
pop
xor
cmp
cwtl
xor
pusha
divb
jmp
jo
pushf
dec
ds
and
nop
pop
js
or
sbb
dec
push
push
mov
mov
cmp
xchg
cvttps2pi
shl
push
fcomi
adc
in
dec
inc
sbb
push
add
das
or
push
inc
jle
icebp
pop
ret
xor
xor
mov
or
add
mov
clc
dec
imul
in
scas
repz
push
call
jns
adcb
push
adc
mov
loopne
int3
hlt
sbbb
add
push
cmpsb
sbbb
nop
call
cwtl
loopne
pop
jmp
loope
push
cmp
subb
ficomps
xor
add
sbbb
xchg
jne
es
dec
sub
fcoml
push
les
jle
mov
icebp
int3
loopne
test
clc
sti
and
adc
ret
gs
nop
mov
pop
add
ljmp
sub
dec
dec
sub
sbb
push
dec
sbb
test
add
push
pop
outsb
jmp
xchg
sbb
aad
or
inc
cmp
or
jmp
adc
jb
cmp
push
scas
xchg
cmc
out
shrb
lock
movd
jbe
xor
xor
dec
push
push
mov
adc
jg
push
out
in
test
dec
xor
jge
call
out
lea
cmp
mov
sub
lods
pop
test
pop
inc
pop
dec
jl
lea
mov
or
inc
lcall
cs
cmp
xor
test
loope
sbb
and
add
xchg
outsb
xor
jne
pop
xor
cmpsb
jp
pop
push
outsl
push
popf
inc
dec
aam
jne
leave
int3
dec
add
insb
lds
in
aaa
cld
call
add
and
mov
pop
cmpb
cmp
loope
xchg
xor
shr
test
hlt
jbe
int3
xor
push
sbb
outsb
mov
add
dec
pop
pop
inc
xor
inc
cmp
pop
add
push
pop
sub
lcall
insb
mov
mov
mov
addr16
ret
clc
mov
add
mov
outsl
dec
andl
dec
ret
or
fmuls
aam
adc
cli
enter
mov
aas
cmp
lods
mov
sbb
test
stc
add
pop
sub
xchg
mov
xchg
lods
cmp
call
dec
fdivs
movsb
test
cld
jmp
xor
dec
and
lcall
fildll
movsb
xchg
jmp
sbb
xlat
lods
pop
inc
adc
out
fcomps
xchg
clc
xchg
shl
js
leave
pushl
add
mov
ljmp
pop
addr16
jb
dec
inc
int
call
mov
shl
jg
xor
mov
xchg
jnp
add
add
push
xor
sbb
cmp
and
inc
add
test
fs
inc
add
and
and
pop
sub
dec
loope
push
dec
outsl
inc
imul
cmp
and
into
aam
ss
rclb
inc
clc
mov
aam
aaa
or
inc
xor
adc
mov
orb
cmpb
xchg
cmp
jg
or
popa
xchg
mov
xor
aad
sub
xchg
adc
icebp
pusha
push
test
adc
imul
mov
jecxz
dec
mov
push
dec
fbld
xchg
pop
imul
sub
mov
rcrb
add
mov
mov
enter
add
ret
push
sbb
add
and
lock
je
mov
clc
adc
and
nop
cmp
mov
shll
mov
adc
add
repz
jge
mov
call
cmp
decb
addb
mov
xchg
pusha
xor
call
fcomps
test
movsl
mov
push
jb
mov
jg
mov
ficompl
or
pop
cmp
xchg
jb
adc
ret
mov
jecxz
pop
pop
xor
cltd
into
jle
fs
int3
and
adc
push
les
jno
call
call
shrb
jae
sbb
mov
rclb
je
in
dec
push
sbb
test
or
inc
lahf
insb
test
inc
mov
cld
popa
lret
icebp
jb
or
xchg
dec
je
leave
mov
outsl
inc
loop
push
pushl
sti
decl
test
cmpl
sub
adc
in
in
in
nop
shr
add
adc
xor
mov
jmp
mov
cmp
inc
fsubl
add
push
sbbb
bound
je
fldenv
mov
arpl
add
cmp
push
in
rolb
or
loop
mov
inc
mov
ja
pop
push
pop
incl
outsb
add
dec
cmpb
sub
or
cmp
test
push
mov
fldl
out
lea
jmp
and
sbbl
mov
sahf
ret
addb
adc
out
lcall
push
leave
rol
mov
adc
add
lods
call
adc
cmp
inc
sbb
clc
lea
mov
icebp
test
mov
pop
sbb
or
in
dec
xor
out
mov
or
sub
dec
imul
pop
sbb
test
inc
and
gs
pop
insb
push
sti
mov
or
push
pushl
inc
data16
dec
and
sub
or
fisttpll
test
inc
inc
pop
incb
sbb
fwait
push
scas
pop
nop
loope
inc
xchg
dec
jp
dec
xchg
les
mov
stos
out
aaa
cmp
or
add
stos
xor
mov
push
push
stos
mov
pop
insb
enter
dec
icebp
je
in
xchg
jle
adc
mov
push
mov
mov
testb
sbb
mov
sahf
add
test
test
or
dec
inc
cmp
or
and
fcom
lcall
jno
xor
push
je
jmp
pushf
cmc
gs
leave
aaa
mov
adc
lret
bound
ds
cmovge
test
stos
hlt
je
es
pop
jp
loopne
data16
cmp
dec
fsubr
ds
shlb
loope
imul
clc
fst
inc
mov
jbe
shll
aas
inc
add
mov
sub
xchg
test
add
xor
xchg
add
add
lret
dec
data16
clc
pop
mov
enter
jecxz
mov
and
gs
xchg
test
jmp
lcall
add
js
pop
and
jg
mov
adc
outsb
movsl
stc
shl
sarl
int3
in
roll
jmp
mov
int3
aas
jecxz
in
push
and
ret
jne
lcall
pop
mov
ror
push
aas
je
testb
emms
test
pop
jo
add
pop
mov
sbb
je
dec
sbb
adc
mov
add
fmuls
repnz
mov
pop
push
in
cmp
test
push
rcr
pushf
data16
rclb
xor
add
pop
mov
or
insb
inc
aad
test
aaa
inc
rcll
adc
inc
pop
push
sub
aad
mov
jns
mov
stos
test
dec
xchg
mov
push
cwtl
jbe
lea
out
arpl
add
cmp
and
add
imul
pop
xor
adc
push
outsl
pusha
jl
fimull
mov
mov
in
jmp
out
mov
ss
or
leave
rcll
test
fsubrs
icebp
inc
inc
imul
pop
fsubrs
mov
xor
pop
mov
push
mov
shr
shl
call
lods
mov
pop
jb
or
sub
adc
shlb
push
rcrb
push
dec
mov
inc
xchg
aam
add
add
je
xchg
arpl
jbe
sub
xor
xor
aaa
pop
jno
loopne
and
push
dec
outsl
pop
js
sbb
inc
nop
mov
mov
insl
cmp
push
ret
clc
scas
lock
loopne
xor
and
mov
fbld
inc
in
loop
mov
inc
test
xchg
cmp
xchg
cmpsb
or
inc
add
mov
mov
inc
fadd
ror
lds
sbb
mov
shl
push
fcoms
stc
mov
adc
mov
js
mov
xor
sub
mov
mov
fwait
shlb
inc
xchg
sub
popf
ficoml
mov
inc
add
std
pop
adc
dec
mov
imul
push
fsubrl
imul
adc
and
and
ljmp
jl
jp
adc
or
inc
ret
inc
mov
jmp
add
sbb
and
fs
sub
loope
aaa
add
push
dec
lea
adc
push
stos
fisubl
cltd
dec
pushf
stc
adc
shlb
adc
lret
imul
xor
add
jbe,pn
mov
or
sbb
jbe
push
inc
mov
ss
adc
cmp
and
sub
pop
dec
ret
xchg
mov
push
fsubrs
pop
fisttpl
add
add
inc
decl
mov
mov
rorb
push
adc
testb
outsb
add
jne
xor
mov
dec
in
mov
jecxz
cld
ja
xchg
ds
orl
int3
mov
bound
inc
shlb
and
or
js
add
inc
shrb
rcrb
cli
fimull
call
mov
cmp
mul
xchg
cli
iret
rorl
aas
ds
loopne
mov
rorb
lcall
push
scas
enter
pop
mov
mov
push
in
mov
adc
dec
mov
pusha
push
mov
adc
pop
pushf
push
incb
jae
mov
inc
pusha
mov
inc
syscall
int3
cli
lcall
mov
adc
call
mov
shll
pop
addl
mov
mov
in
mov
lods
push
or
xchg
jge
nop
mov
xchg
je
fcomps
cmp
mov
mov
mov
cmp
adc
cmpsl
or
pop
mov
sbb
mull
mov
ljmp
rcrl
mov
mov
push
nop
sub
push
adc
xor
inc
jbe
rcrl
xchg
stos
test
ficompl
sbb
cmp
sar
push
xabort
je
cwtl
jno
je
pop
inc
les
decl
inc
mov
int3
movsbl
pusha
push
dec
iret
sub
les
rcr
adc
sub
mov
add
cwtl
pop
mov
nop
dec
add
jge
aaa
cmp
inc
push
cmp
or
movsb
cli
cmp
mov
insl
mov
ret
in
inc
add
cs
mov
jne
add
aaa
mov
sarl
sub
in
mov
push
std
push
fldl
xchg
sbb
cmpsb
pop
inc
jecxz
jle
int3
data16
sbb
lds
sbb
add
pop
js
adc
or
cmp
mov
repnz
pop
nop
adcb
push
call
sub
sahf
push
pusha
inc
rcrl
lcall
out
dec
fcomi
mov
ret
test
dec
pop
sbb
xlat
inc
test
int3
mov
mov
mov
test
inc
dec
icebp
pop
pusha
or
sbb
sti
cmpsl
stc
cwtl
add
mov
loope
push
fcmovu
push
mov
xor
mov
loop
loopne
push
imul
cld
call
adc
rolb
ret
jg
push
fwait
ja
arpl
pop
loop
mov
shl
shll
pop
mov
mov
sub
lea
ret
std
xlat
outsl
and
cmp
stos
ds
mov
add
fildll
jmp
notb
adc
mov
push
loopne
lcall
mov
std
fildl
mov
ucomiss
mov
adc
jo
mov
mov
push
in
nop
int3
adc
and
mov
data16
sbb
sub
insb
push
push
gs
mov
push
movsl
pop
adc
ljmp
push
sub
adcl
adc
lods
mov
pop
inc
cli
xor
cmp
dec
inc
movsl
adc
pcmpgtd
adc
daa
ret
addl
sti
xchg
loopne
jg
add
xchg
pop
arpl
fucomip
fs
std
fistpl
push
push
in
adcb
or
pop
or
sarb
fcomip
sub
clc
es
xor
dec
add
push
push
sub
mov
push
cmp
ret
dec
lods
mov
std
lea
and
xor
les
add
inc
rol
lds
and
repnz
xor
jecxz
add
dec
mov
mov
mov
cli
fiaddl
lods
cwtl
dec
xchg
and
loopne
xor
dec
inc
bound
push
adc
lea
std
cmp
shrb
icebp
push
or
mov
add
pop
in
and
xchg
enter
add
sub
out
or
jp
test
in
loope
test
mov
push
xchg
mov
std
jae
test
xor
loope
jmp
sub
mov
rclb
movsb
fmuls
mulb
jne
pop
clc
fcmovb
mov
push
scas
decl
cmp
push
adc
jmp
jo
test
leave
cmp
loopne
in
mov
pusha
dec
cmp
xor
ds
in
mov
outsl
and
jb
mov
add
mov
inc
shlb
clc
ja
and
sti
movsb
adc
idivl
or
in
js
add
cmpsl
dec
lcall
jge
pop
mov
xor
call
sub
sbb
cwtl
adc
fidivrs
stos
xorl
mov
push
testb
xchg
sar
push
adc
shrb
mov
push
inc
inc
jle
addl
js
add
and
mov
mov
mov
andl
add
or
fimull
sub
int3
or
or
adc
sbb
cmp
mov
hlt
dec
ret
sub
cmp
je
aas
pop
dec
jp
jl
jge
cmp
mov
pop
mov
mov
clc
ljmp
fadd
xor
mov
push
and
cld
fistl
push
adc
add
push
xor
idiv
mov
addl
pop
decl
push
out
popa
pop
aaa
fdivr
ret
push
inc
add
inc
cmp
push
and
push
jne
push
xor
loopne
push
mov
mov
and
sbb
xchg
pop
insb
mov
cld
xchg
or
inc
sub
mov
inc
sub
cld
test
mov
and
push
je
dec
sarb
fcmovnb
rclb
lret
lcall
call
mov
aam
fdivrs
ljmp
in
push
push
adc
std
hlt
add
cld
cmp
inc
or
push
std
and
adc
stos
and
test
test
fiaddl
dec
cmp
shl
test
jecxz
inc
and
mov
and
add
jo
rolb
shlb
addb
loop
inc
pop
push
pusha
xchg
pop
pushf
and
mov
loope
add
xor
jge
rcll
pop
outsl
xor
je
inc
jmp
aaa
mov
jge
pop
push
fcoms
xor
in
add
add
cmp
jl
push
pop
mov
fwait
outsl
mov
add
sbb
subl
pop
sahf
rcll
insb
int3
xchg
add
clc
cs
inc
mov
cli
adc
dec
fistl
mov
inc
orl
and
cmp
add
or
jecxz
or
push
aaa
or
dec
jno
fsub
cmp
bound
dec
aam
icebp
sahf
add
and
stos
mov
add
add
adc
pop
or
jb
scas
cmc
or
push
mov
cmp
adc
insb
add
xchg
inc
int3
add
lea
push
cmp
xor
je
ss
and
and
aam
mov
inc
cmp
mov
lods
testl
mov
xchg
pop
xchg
pop
clc
lret
add
sbb
add
adc
mov
push
or
jbe
push
sub
mov
or
into
je
sar
ret
pop
and
mov
aam
cli
mov
cmp
bound
or
in
and
enter
add
mov
mov
mov
add
sub
rcrl
fdiv
scas
xor
xor
mov
or
push
mov
fisubrs
popf
shlb
push
or
adc
aaa
jne
and
pushf
pop
push
loopne
mov
jb
dec
test
mov
popa
data16
cmpsb
jno
push
jne
jne
ds
lret
andb
aaa
in
call
push
sub
sub
cmp
xchg
add
push
sarb
aam
inc
push
fisubrs
enter
or
cld
push
jns
fisubl
or
test
sub
xchg
or
imul
push
add
adc
xchg
adc
push
shl
adc
rol
setbe
pop
and
push
lods
ret
cmp
aas
dec
sub
je
add
pop
and
gs
dec
andb
pcmpgtw
les
mov
xlat
sahf
movsl
xchg
lock
push
sbb
push
ret
cli
hlt
add
mov
add
cmp
lds
in
call
add
mov
scas
fisubs
int3
add
iret
je
inc
adc
jo
sahf
aas
push
add
push
or
xchg
gs
pop
call
call
xchg
call
push
sub
adc
add
xchg
mov
shlb
jl
fstpl
lock
pushf
sbb
dec
adc
test
imul
sbb
mov
pop
dec
push
hlt
dec
sbb
cld
mov
int3
jle
mov
add
insl
jnp
and
add
mov
loope
dec
cld
fwait
mov
movl
lds
adc
cmpsl
sahf
dec
jb
mov
inc
fmull
std
push
push
pop
push
jmp
inc
ljmp
inc
xchg
sub
jge
jo
test
loopne
shl
mov
dec
stos
pop
addb
sbb
adc
in
bound
js
call
mov
inc
or
aaa
std
mov
sahf
mov
push
adc
push
mov
jno
add
hlt
push
mov
add
out
pop
fcoml
rclb
fisubrl
fbstp
jae
pop
in
test
mov
pop
mov
pusha
jl
xor
dec
and
sbb
adc
in
adc
xchg
inc
int3
jl
dec
mov
inc
insl
xchg
je
pusha
xor
ficompl
clc
outsb
push
call
adc
and
mov
mov
add
lret
inc
movl
jbe
std
shll
adc
je
mov
ficoms
cmp
or
xor
add
mov
push
add
jae
scas
cli
pop
jo
xor
push
je
in
pop
mov
jbe
mov
sarl
cs
xchg
mov
pop
jbe
repnz
cmc
ljmp
mov
pop
push
add
mov
scas
subl
add
mov
add
rorb
pop
push
out
xor
mov
and
mov
push
insb
mov
test
pop
sti
jmp
push
mov
in
ret
mov
jno
rol
dec
hlt
std
mov
outsb
push
xchg
orl
imul
shll
pop
xor
inc
adc
mov
outsl
mov
cmc
add
xchg
sub
mov
orb
add
push
dec
sarb
cmpsb
mov
cs
or
enter
pop
mov
stos
and
rol
test
ret
test
test
jne
int3
mov
sbb
add
les
add
test
inc
cmp
sub
shll
mov
add
jecxz
js
cmp
aad
pop
add
push
or
dec
mov
add
adc
sbb
adc
clc
sub
or
mov
test
push
ret
adc
hlt
mov
lcall
addr16
or
xchg
xchg
push
cmp
push
mov
je
call
dec
sbb
cmp
cmp
mov
movb
outsb
sub
mov
call
out
inc
xor
jl
cld
mov
shlb
add
dec
int3
sub
pop
add
fwait
jne
mov
loope
call
aad
pusha
dec
or
inc
lret
loop
or
sub
mov
add
xchg
and
dec
cmp
ljmp
lret
pop
push
mov
pop
xchg
hlt
loop
adc
mov
pushw
push
leave
and
daa
add
clc
addl
sbb
jl
or
mov
cli
add
cmovno
inc
mov
mov
inc
test
fcoml
nop
xor
dec
shl
mov
ljmp
stos
adc
add
push
gs
test
es
mov
pop
fsubl
pushl
inc
adc
cmp
add
mov
fwait
mov
pop
inc
je
xchg
xchg
shrl
add
sub
adc
rorl
sete
mov
test
jmp
xchg
and
cmpsb
inc
fsub
les
loopne
mov
mov
incl
test
add
sbb
jbe
clc
or
xor
idiv
sti
add
scas
mov
inc
je
xor
int3
or
pop
mov
clc
pop
inc
andb
sahf
xor
sbb
fwait
aam
rorl
add
mov
mov
test
es
cli
push
shll
jne
push
lahf
push
mov
xor
inc
adc
fimuls
add
mov
fidivrl
xorb
xor
lods
les
xchg
out
pop
inc
call
lcall
xchg
clc
lods
cld
data16
mov
inc
ja
push
mov
repnz
fwait
mov
xor
cld
clc
out
inc
shlb
fimuls
push
xchg
sub
push
je
cltd
and
stos
xor
jo
push
push
rclb
add
xor
and
adc
cmp
loopne
xchg
sbb
loopne
jns
loop,pn
xchg
mov
add
std
cs
adc
push
mov
jmp
add
daa
and
sbb
jecxz
inc
aas
out
incl
jne
xor
insb
js
outsb
mov
sub
cmp
xor
mov
cld
dec
dec
fcoms
push
push
jecxz
mov
adc
sbb
cli
cs
add
mov
pop
pop
jmp
pop
fcoml
pop
jmp
sbb
pop
xchg
pop
test
test
mov
xchg
test
es
nop
mov
pop
mov
ret
xorl
cld
test
loopne
cs
mov
add
jnp
std
in
jg
mov
xchg
sarb
test
mov
stos
push
xor
outsb
rcr
jo
push
test
incl
mov
ss
dec
or
xor
mov
xchg
aaa
jnp
push
sub
pusha
dec
lret
popf
xchg
ret
aas
ret
sbb
test
js
test
fistps
sub
in
test
cld
loop
rcrb
dec
or
incl
sbb
inc
jbe
rolb
insb
in
cmovo
jb
clc
inc
js
nop
push
and
or
add
das
add
push
aad
fcompl
mov
scas
xor
push
pop
jle
dec
sub
roll
aam
add
xchg
inc
cmp
inc
xor
push
addb
sahf
adc
scas
fisubrs
gs
mov
stos
push
rol
sub
xor
jo
add
ljmp
pop
fiadds
adc
mov
and
mov
xchg
jne
mov
stos
ss
sbb
ljmp
jno
cld
sarb
sbb
clc
lret
ljmp
mov
stos
pushl
jbe
xchg
cmpsb
icebp
jb
call
mov
pop
adc
jb
in
clc
pop
push
in
pusha
shr
adc
ret
hlt
sub
lea
sub
inc
testb
mov
lods
int3
inc
rcl
push
repnz
xchg
xor
lods
mov
xor
inc
push
ret
outsb
add
push
sub
outsb
nop
lods
dec
movsl
mov
push
dec
fdivl
cmp
movsb
cld
and
ficoms
fcoms
add
xchg
loop
mov
sub
cld
pop
jl
mov
ss
push
je
add
jle
test
push
insl
xor
scas
out
jne
inc
add
mov
gs
adc
pusha
and
push
lods
inc
cmp
dec
adc
scas
cld
push
cmp
mov
mov
lods
sub
xor
ret
and
aaa
shl
movsb
xor
leave
movsl
push
hlt
cmpsb
lock
add
lods
mov
insb
mov
paddb
popa
insl
in
or
adc
jge
test
adc
lods
incl
mov
jne
mov
test
sbb
mov
inc
subl
mov
push
mov
cmp
cmp
cs
testl
ja
js
mov
jmp
inc
dec
fisubrs
test
add
dec
cmp
xor
dec
mov
stc
inc
pop
ljmp
into
pop
je
and
mov
imul
call
xor
mov
push
stc
lret
lock
pop
out
add
aad
sbb
nop
cmp
push
mov
add
dec
inc
mov
fcoms
inc
push
xor
inc
std
push
inc
or
xor
push
mulb
pop
icebp
sub
mov
mov
addl
ret
inc
inc
mov
in
fsubs
outsl
sbb
fs
lock
and
inc
jb
scas
inc
ss
or
int3
dec
mov
mov
ret
inc
fwait
push
gs
sahf
aas
jbe
jecxz
mov
aaa
adc
insb
push
nop
jg
int3
ss
cmpsb
push
mov
or
jne
inc
sub
cmp
shl
fwait
orb
xchg
sbb
loopne
mov
xor
mov
incb
xchg
mov
xchg
loopne
subl
push
adc
movsbl
popa
mov
nop
sub
push
cmp
dec
jg
mov
cmp
push
jg
push
xor
cmp
add
ljmp
mov
cmc
imul
sbb
loope
mov
push
and
push
scas
dec
xchg
mov
addr16
pop
rclb
out
inc
mov
test
sub
fmull
mov
stos
int
ja
addr16
movsl
xor
push
shlb
lcall
dec
fdivrl
mov
jne
in
push
add
push
add
dec
xchg
movsb
fcmovnb
daa
scas
testl
test
fsubr
jg
call
inc
shll
mov
sub
dec
notb
inc
xor
mov
into
cmpsb
outsl
dec
adc
pop
shl
cmp
or
mov
or
add
ret
outsb
ss
sbb
out
lcall
add
and
inc
sbb
mov
push
fcomps
das
jle
adc
lock
xchg
xor
mov
xor
mov
or
inc
push
fimuls
mov
cmpsb
add
pop
mov
decb
mov
bound
fisttps
xor
push
incl
jp
and
test
sbb
mov
push
pushl
notb
clc
adc
sub
sub
jb
std
inc
or
mov
std
js
xor
mov
push
pop
inc
incl
fs
mov
cwtl
mov
xor
shll
stos
call
jmp
ds
mov
fwait
cmc
lcall
es
push
push
mov
push
adcb
adc
mov
cli
add
add
mov
je
shl
jle
inc
aam
imul
pop
push
xchg
or
jbe
cmp
scas
pop
imul
adc
addr16
push
adc
mov
adc
movsb
aaa
in
sahf
adc
xrelease
or
jg
add
cmp
test
icebp
mov
scas
flds
jnp
jbe
pop
jp
lcall
add
mov
and
stos
es
fs
push
sarl
adc
call
rolb
pop
sbb
fistpll
std
sti
push
push
cs
jo
fs
add
cmpsl
enter
mov
or
jmp
mov
adcb
cld
mov
adc
out
outsl
sub
inc
cmp
push
js
jg
scas
test
adc
pop
lock
cmp
mov
pusha
dec
loopne
shlb
mov
xchg
lock
or
xor
cmp
cli
add
mov
sbb
enter
call
mov
mov
arpl
inc
fs
push
mov
cmp
mov
pop
sub
rorb
mov
lock
mov
ds
adc
or
jp
je
shll
inc
mov
adcl
loopne
inc
movsl
adc
jl
cmp
lock
sbb
es
lds
test
jbe
loopne
call
jb
or
cmpsb
data16
hlt
add
and
sbb
push
and
ss
dec
sbb
fs
push
aaa
mov
cld
in
fadds
push
add
inc
adc
stos
or
addb
js
lea
cs
lea
mov
jne
push
mov
dec
imul
fs
or
lea
je
inc
incl
lock
lret
sti
cld
add
jno
or
inc
roll
mov
xor
jle
dec
and
push
push
jl
add
dec
add
inc
ljmp
sub
cmpsb
cmp
icebp
sbbl
push
push
fcomip
jg
test
inc
xor
or
inc
ret
popf
mov
sub
mov
mov
popa
push
stos
add
testb
movb
push
adc
adc
add
add
and
je
push
mov
push
sti
xor
inc
jae
mov
or
mov
jle
cmpsl
and
xor
jb
fwait
push
inc
dec
jl
add
ret
xchg
mov
and
and
dec
lret
clc
neg
push
xor
cli
int3
sbb
call
loope
cmove
inc
xchg
dec
call
ret
cmpsb
mov
mov
and
push
movsb
lret
cmp
add
mov
scas
inc
xor
aad
push
pushf
mov
std
and
add
or
dec
in
add
xor
inc
aas
clc
lock
enter
push
movsl
push
push
jae
mov
jg
lar
mov
add
aam
and
ss
add
xchg
adc
push
push
loope
dec
and
or
sbb
ljmp
leave
dec
dec
loop
in
mov
lcall
popa
lods
xchg
mov
insb
enter
or
stc
mov
movsl
cmp
bound
pushf
lahf
sub
cmp
jnp
inc
cltd
sub
xor
push
stos
sbb
mov
cmp
pop
or
or
mov
ficoml
or
outsb
les
jo
enter
push
mov
cmp
pop
jge
das
pusha
cmpsb
fidivrs
mov
cmpsl
outsb
jge
pop
incl
adc
push
push
mov
pusha
add
je
cld
fiadds
lcall
lods
imul
loopne
mov
mov
xchg
out
jle
dec
idiv
ljmp
in
enter
loopne
mov
shrl
ret
adc
jo
dec
push
pop
xlat
test
lock
je
je
mov
or
andl
pop
adc
in
and
cli
and
ljmp
mov
cld
cwtl
cmc
out
into
ds
icebp
or
cmc
ret
mov
loopne
scas
testl
inc
mov
push
sub
add
cld
cli
jge
xchg
jne
mov
lods
scas
jo
pop
push
mov
mov
movsl
pop
scas
add
dec
mov
push
mov
jne
push
arpl
mov
ljmp
stos
jae
decb
jbe
cmc
pop
ret
adc
mov
inc
dec
jbe
fisubl
mov
cmc
add
shlb
mov
mov
add
push
cltd
outsb
mov
xor
int3
and
cld
sbb
sub
repz
test
scas
mov
pop
push
repnz
pop
test
ljmp
xchg
in
push
hlt
push
or
jo
mov
mov
xor
sbb
add
jge
mov
clc
xorl
cwtl
ret
lea
pusha
inc
and
jle
lock
and
inc
inc
add
jl
xchg
jns
ljmp
xchg
cmp
frstor
rcrb
xchg
jno
pop
ljmp
orl
inc
inc
sahf
inc
fsqrt
jp
scas
repz
in
jo
jp
movsb
pop
aas
pop
push
outsl
clc
mov
mov
lea
pop
jmp
pop
adc
cmp
or
add
mov
negl
add
adc
xor
pop
add
adc
mov
mov
xor
jle
loop
or
mov
xchg
in
mov
mov
outsb
lcall
mov
mov
lret
test
jmp
add
call
push
testb
dec
push
ja
rcrl
mov
decl
mov
inc
add
pop
inc
loopne
lock
add
add
xchg
push
cmp
inc
mov
fcoml
xor
jle
and
adc
cld
inc
inc
cmp
lods
clc
dec
adc
cwtl
lods
incl
gs
or
mov
adc
and
dec
imul
mov
xchg
pop
push
les
mov
xchg
inc
fs
outsl
adc
outsb
push
jne
aad
add
push
addr16
je
lock
dec
push
xor
push
mov
mov
test
insb
xor
pop
or
mov
and
push
and
push
jb
jo
cmp
cli
xor
xchg
orl
mov
push
and
insl
lea
hlt
and
stos
push
data16
jecxz
shlb
xor
pop
mulb
pop
hlt
aam
jge
rolb
mov
nop
push
int3
lea
cltd
ljmp
outsb
push
loope
jg
bound
imulb
jmp
sub
enter
in
rorb
push
mov
pop
orb
sbb
enter
push
add
push
fcompl
dec
or
loop
dec
sbb
loope
mov
scas
imul
adc
inc
test
cmp
adc
jb
mov
ffreep
lock
shlb
gs
mov
pusha
or
pop
and
mov
ds
roll
in
or
mov
xchg
fcomps
outsl
adc
xorb
clc
jge
ja
mov
dec
push
enter
jecxz
push
lahf
cs
inc
push
sbb
add
mov
jge
rcrb
add
pop
or
je
std
call
mov
je
xor
test
or
jmp
mov
xor
jae
jmp
mov
sahf
inc
fsubs
push
pop
mov
orl
int
das
mov
test
sahf
sub
imul
inc
daa
mov
mov
push
cs
and
insb
sbb
ret
and
jmp
shr
dec
lock
sbb
sar
mov
push
nop
std
sub
jns
jg
and
push
adc
ret
mov
or
sar
cmpl
in
outsl
js
add
cmp
xchg
or
cmp
pop
xchg
mov
out
pushl
subl
fwait
push
xchg
sub
aam
push
clc
cli
das
clc
jnp
das
add
fadds
mov
push
lea
lcall
lock
jecxz
ds
js
inc
adc
pop
test
cmpsb
ds
shrl
hlt
outsl
jne
loopne
pop
xor
rcrl
js
and
push
insb
xor
out
or
and
and
xadd
mov
test
call
sub
xchg
pop
int3
std
cmpsb
jle
js
or
fildl
dec
mov
jl
push
sbb
dec
xor
mov
ds
adc
sub
adc
push
or
push
pop
sub
sahf
sub
call
jo
jb
mov
das
mov
cwtl
sub
or
lock
sub
rcl
ja
mov
and
arpl
fists
jl
pushf
sub
scas
or
xchg
or
dec
pop
addb
inc
mov
adc
lea
mov
aaa
lock
lods
stos
repnz
push
dec
push
pop
cmp
jg
loopne
push
shll
shlb
jo
out
adc
clc
call
xchg
sub
dec
test
cmp
push
ljmp
push
mov
test
inc
xorl
and
adc
cmp
cld
dec
imul
mov
dec
cld
aaa
mov
push
and
push
xor
pop
arpl
insb
push
andl
loop
xor
push
push
cwtl
aam
sti
pusha
test
sub
pushf
adc
mov
sub
cld
addr16
jb
rcrb
inc
fsubp
rorb
and
test
lods
xchg
or
xchg
sbb
pop
inc
mov
push
loope
mov
incl
mov
push
xchg
mov
incl
jmp
dec
inc
mov
pushl
xor
xchg
movsl
or
push
pushf
gs
movsb
fwait
pop
mov
add
jecxz
fldenv
jmp
cmp
les
daa
sub
test
lods
inc
adc
pop
mov
pop
push
mov
fisubrl
loope
decb
rcrb
or
xor
rolb
lods
test
bound
fiadds
cmovs
and
push
sbb
and
jmp
inc
cld
sbb
inc
cmpsb
aas
lods
inc
loop
add
jp
fwait
sub
xchg
mov
pop
sub
add
jmp
inc
push
push
std
flds
sti
mulb
andb
nop
jo
push
loop
inc
push
fdivrs
xor
mov
test
cmp
or
mov
stos
ds
xor
rolb
xchg
sub
mov
sbbl
xor
lods
and
hlt
sbb
and
test
insb
lcall
enter
scas
cmp
int3
add
and
shlb
and
jbe
hlt
mov
sbb
adc
push
sub
mov
ret
incb
int3
sbb
push
insb
inc
bound
incl
add
jl
jmp
xchg
lcall
fsubrs
sahf
adc
pop
pop
add
cmp
adc
aad
dec
dec
and
je
jmp
xor
dec
adc
add
lock
mov
in
ficoml
adc
pop
insb
repz
ja
jp
inc
mov
call
mov
cmp
cmp
lock
adc
push
jp
ljmp
push
add
inc
add
mov
add
pop
xor
ljmp
pop
dec
out
mov
cld
dec
outsb
and
add
pushl
pop
enter
jl
dec
lods
xchg
add
test
insb
xchg
adc
adc
rclb
or
mov
aaa
or
in
shrl
sub
jo
inc
fadds
je
fstpt
data16
pushl
cwtl
mov
pop
fcmovbe
push
sbb
mov
cmpsb
inc
mov
pop
into
mov
sbb
push
test
mov
aas
ret
enter
jae
imulb
sub
data16
mov
repnz
add
fwait
inc
fsubs
add
das
fdivr
leave
pop
aas
movsl
add
mov
cmp
and
adc
lret
bound
pop
cltd
call
outsb
lret
or
fmuls
mov
enter
aad
icebp
out
or
pop
rcrb
call
pop
and
das
pusha
add
int
lcall
xor
lret
lds
bound
jne
push
or
mov
pusha
mov
or
inc
jl
push
push
mov
call
jg
and
sub
imul
cmp
add
arpl
dec
or
stos
or
jo
mov
and
xor
jb
fs
push
call
test
xchg
loopne
inc
add
jmp
cmp
xchg
movsl
test
lods
xor
aam
and
cmp
pop
dec
mov
cld
int3
gs
adc
rorb
sub
jmp
scas
sbb
sbb
mov
add
add
or
fldl
pop
test
jge
xchg
test
mov
sub
push
sti
outsb
sarl
popf
icebp
add
sub
sub
movsb
push
cld
xor
stos
xchg
int3
andb
out
std
dec
enter
fs
rorb
push
fstps
je
imulb
testb
mov
fisttpll
loop
push
ss
sbb
sbb
inc
xchg
subb
insb
fwait
jp
push
or
in
cli
call
icebp
sub
lret
inc
sti
dec
add
adc
cmp
mov
clc
mov
adc
jns
push
jmp
inc
xor
jo
lea
or
les
scas
mov
inc
ret
fisubl
int3
mov
mov
mov
or
add
ja
jmp
pusha
out
dec
dec
mov
das
lods
sub
outsb
jl
loop
andl
cs
test
mov
jbe
cltd
shl
jo
decb
out
cmpsl
fistpl
mov
rcl
decl
adc
daa
sub
mov
dec
pop
xor
inc
movsl
cmp
add
testl
push
lret
or
cmp
lods
and
mov
adc
out
fwait
xchg
jmp
sbb
inc
in
mov
ret
mov
xchg
loopne
subb
outsb
rclb
mov
cmpsb
cld
int
jge
xchg
add
xor
add
shlb
cmp
int
mov
mov
inc
cmp
pop
loopne
xor
pushl
and
stos
movsl
xlat
xchg
mov
mov
or
or
pop
push
data16
or
pusha
out
mov
movb
lret
ss
push
ljmp
lret
adc
pop
movsl
push
xchg
jp
test
and
cwtl
push
aaa
push
lcall
js
adcl
xchg
push
jno
xor
adc
inc
fld1
leave
mov
and
imul
pop
fwait
dec
aam
insb
add
gs
jle
aas
sbb
cld
ss
and
or
mov
mov
in
loopne
iret
xorb
shlb
jl
add
and
test
mov
call
pushf
xchg
mov
je
shlb
add
sub
rclb
stc
jne
rcll
and
fadds
ret
jp
xor
sub
sub
push
cwtl
or
pop
push
mov
int3
rcrb
pop
cld
cmp
call
iret
movsl
aam
roll
or
mov
jle
clc
int3
sbb
sub
setp
pop
shr
insb
repz
inc
icebp
lcall
sbb
outsl
test
push
dec
mov
add
inc
shlb
jl
jo
call
push
xchg
jl
push
mov
ljmp
dec
rcrb
cmp
pop
push
cmpsb
or
enter
pushf
neg
dec
leave
push
mov
mov
pusha
daa
icebp
jg
mov
decl
add
mov
das
mov
mov
cli
or
and
fsin
cmp
or
pop
sbb
jb
jge
popf
dec
fs
repnz
pop
push
loope
bound
push
mul
push
push
inc
inc
pop
xor
mov
sub
mov
rcr
test
mov
xlat
jo
lock
dec
mov
cld
or
lods
pop
les
testl
adc
pusha
or
xchg
jne
adc
or
add
arpl
sub
data16
std
or
inc
mov
push
sub
pushf
push
call
aas
test
rcl
add
and
mov
sbb
inc
cmp
add
gs
pop
aas
add
pushf
push
in
pop
pop
adc
test
xor
ror
fadds
inc
pop
adc
movd
popa
mov
fdivl
outsb
pop
sbb
sbb
dec
gs
pop
inc
push
lods
jo
cmpsl
add
aas
jl
lret
shrl
loope
cs
pop
add
call
adc
lret
mov
push
sbb
mov
push
in
movsb
loopne
clc
fbld
or
mov
popf
test
arpl
push
jno
push
out
mov
shrl
ljmp
xchg
jl
orb
jge
and
clc
mov
cld
cmp
cs
inc
outsl
mov
je
int3
cmp
loope
add
jbe
in
inc
sub
daa
mov
or
add
shrb
or
or
into
mov
cmp
aad
jmp
xchg
mov
mov
mov
enter
sub
dec
mov
pop
int
add
rcrl
aam
add
xor
or
es
test
lods
inc
repnz
ss
adc
jge
sub
and
lock
sbb
xor
jne
jne
icebp
add
sbb
jp
mov
in
lock
mov
push
lea
les
mov
mov
jge
cwtl
test
and
jo
mov
sub
hlt
ror
fwait
sub
adc
call
add
popf
or
dec
or
aad
jge
cld
and
jae
and
jge
add
ss
cmpsb
inc
push
push
cltd
js
sbb
push
push
or
mov
sbb
dec
aas
mov
js
in
add
cmp
lock
movl
and
pop
mov
pop
gs
add
mov
dec
pop
push
test
dec
mov
int3
dec
int3
cmp
orl
add
dec
mov
fists
fildll
mov
leave
add
sar
add
dec
add
sub
fistps
test
xorb
mov
jmp
int3
add
dec
notb
xchg
fdivl
cmp
sarb
jge
mov
lock
add
decl
clc
arpl
adc
or
ret
sti
dec
mov
sbb
outsb
rol
arpl
add
mov
psrad
pusha
bound
mov
pop
xchg
pop
or
insb
pop
add
mov
insb
arpl
in
push
repz
fldl2e
sub
push
push
test
shrb
push
xchg
add
xchg
clc
dec
push
xchg
mov
stos
push
je
sub
jmp
add
mov
movsb
incb
add
sub
lock
lock
lea
mov
sub
cmpsb
push
aas
add
dec
or
out
add
enter
mov
cmp
pop
enter
mov
and
push
mov
dec
mov
xchg
pop
and
lret
jecxz
dec
xor
decl
test
int3
subb
int3
xchg
jle
notb
mov
sbb
lcall
mov
jp
test
scas
dec
pop
mov
jle
sarb
xchg
adc
fs
add
sub
push
test
popa
pop
pop
xor
fdivrl
xchg
sbb
mov
mov
insl
insl
icebp
cmp
and
clc
bound
cmp
pop
mov
sub
push
std
cmp
js
scas
ret
push
jbe
aaa
add
sbb
movsb
sub
rolb
add
loop
dec
xor
mov
add
cld
mov
or
jl
movsb
adc
xor
test
outsb
les
popf
lods
dec
mov
fildll
movsl
dec
lea
out
jle
or
mov
imul
mov
mov
jne
push
cmp
cld
dec
aas
popf
fidivrl
mov
jne
loope
push
cli
or
mov
rdtsc
lods
outsl
rcrb
jbe
adc
add
andb
adc
loope
mov
push
and
add
movsb
lock
in
cmpsb
aam
orb
mov
add
jo
or
and
insb
lods
mov
push
lock
fistpl
inc
fisubrl
cld
pop
daa
mov
lods
pushaw
aas
push
pop
data16
dec
adc
aam
pop
insb
sub
sbb
inc
test
mov
mov
or
adc
cmpl
mov
sbb
clc
pusha
sbbb
outsb
test
pop
xchg
mov
inc
add
scas
xor
aas
les
iret
decl
inc
cmp
data16
shl
aad
or
cs
adc
push
or
test
sbb
add
scas
cld
and
adc
push
dec
popa
into
loope
push
inc
inc
xor
int
jmp
mov
inc
mov
dec
inc
fisttpl
data16
xlat
cmp
sbb
testl
xchg
jp
fildl
cmpsl
mov
std
push
mov
aas
lods
ja
stos
cs
push
mov
add
lret
insb
sarl
adc
call
sbb
imul
nop
dec
or
adc
enter
inc
xlat
shll
xor
inc
je
xor
test
cmpb
mov
push
in
fidivl
xor
mov
adc
xchg
jp
ljmp
xchg
sbb
xchg
push
cli
sub
dec
cmp
les
ret
aad
ret
shrb
xor
push
cmp
mov
cld
aas
jne
cmp
inc
push
push
enter
or
cli
pop
dec
cmp
jmp
je
push
xor
xchg
xor
mov
push
sub
adc
and
test
or
enter
sahf
cmp
scas
or
or
incb
inc
mov
ret
popa
lods
adc
inc
rclb
roll
cmpl
mov
ret
push
outsb
xchg
xor
out
jl
jbe
sbb
nop
xchg
xchg
mov
xchg
jle
sbb
out
test
outsl
shll
aas
add
popa
arpl
xor
shll
fwait
sahf
sub
sub
and
call
pop
pop
jmp
stos
inc
loop
xor
psubw
add
cmp
stos
fidivs
pause
lea
and
mov
or
adc
arpl
inc
and
aad
shl
jl
inc
cmp
push
dec
xor
inc
cmp
mov
orl
inc
clc
popa
mov
fwait
add
adc
dec
rcrb
lock
mov
cli
mov
aam
pop
dec
sti
mov
inc
jnp
and
out
sarb
cmp
cmp
cmp
pusha
pop
mov
mov
cmpl
icebp
mov
sbb
add
loopne
out
fimull
jl
incb
popf
push
jge
push
sbb
xchg
roll
adc
mov
je
cli
push
lret
loop
pop
xor
rcrl
mov
cltd
aad
movsb
mov
push
das
ror
leave
adc
sub
pop
test
push
ret
ret
pop
insb
pop
sahf
fistpll
lock
outsl
cld
incl
add
ljmp
jb,pn
mov
mov
and
std
mov
aaa
push
push
cmp
pop
je
clc
out
xor
sub
leave
push
outsb
mov
js
mov
outsl
or
add
rorl
test
mov
and
test
int3
adc
stos
xchg
test
or
aam
push
loop
adc
mov
subb
dec
std
inc
pop
loop
in
les
loopne
jg
mov
call
inc
inc
push
sbb
mov
orb
cli
add
std
xor
jo
push
mov
push
xor
add
loopne
dec
jo
jl
push
fwait
xchg
ljmp
cmp
mov
cmp
filds
dec
paddd
addr16
dec
loopne
pop
lock
out
int3
lea
xchg
adc
xchg
push
stos
sub
cmpsb
mov
stos
icebp
insl
mov
add
les
stos
out
pop
enter
addb
xchg
push
pop
pop
and
mov
push
jne
shlb
fnstcw
mov
mov
fiaddl
clc
mov
sub
jne
push
loop
ljmp
mov
shlb
add
pushf
rorb
les
xchg
inc
jo
xor
mov
xor
gs
jg
push
icebp
loopne
or
jmp
andb
leave
add
test
shrb
dec
pop
jbe
fs
mov
push
jg
fcoml
or
jmp
lcall
inc
cld
add
subb
cltd
jmp
add
xor
mov
lds
leave
inc
inc
in
jo
xor
jle
ret
je
and
lea
mov
ret
adc
fisttpl
sub
in
imul
adc
dec
clc
pop
add
pop
add
adc
push
or
rcll
xchg
and
xor
adc
add
sub
sahf
ficoml
push
mov
xchg
test
je
std
inc
dec
lods
and
movsl
ja
push
push
mov
test
fs
push
js
push
inc
push
cmp
orl
scas
test
add
fs
xchg
adc
mov
add
ljmp
cmpsb
aam
inc
insb
movsb
pop
jb
loope
mov
mov
add
mov
and
into
adc
fimull
adc
xchg
ss
mov
loope
xchg
adc
out
aaa
inc
jmp
add
in
mov
and
mov
add
jg
xchg
push
mov
mov
cwtl
je
jmp
mov
mov
ss
or
sub
add
loop
les
sub
rclb
fucomi
sub
lret
jns
push
call
adc
pop
pop
ja
mov
inc
les
adc
ds
jo
inc
clc
sub
push
pop
push
movb
cmp
pop
jg
cmp
or
mov
lock
shl
test
and
mov
aas
movsb
push
add
andl
in
xor
push
loopne
orl
ljmp
test
mov
mov
cmp
push
ret
jno
scas
push
jmp
sub
pop
data16
cmp
mov
repnz
mov
push
cmp
inc
xchg
dec
pop
movsb
mov
push
dec
shlb
js
dec
pop
inc
repnz
push
jle
stos
push
inc
fadds
shlb
ror
or
nop
pop
xchg
cmp
or
decb
add
dec
jmp
mov
adc
je
xor
and
pop
sub
pop
out
test
orl
jle
bound
pop
leave
sub
inc
cmp
out
or
fistps
xor
pop
push
pop
pop
cmpsb
adc
xor
fs
xchg
hlt
sarl
pushf
repnz
ja
add
xor
mov
mov
test
sbb
sbb
mov
dec
jo
ret
in
mov
lret
rorb
cmp
pop
inc
inc
sbb
pop
or
out
ljmp
mov
shlb
and
inc
add
lods
cmpb
push
test
xchg
xchg
push
jl
add
les
lret
lods
andl
xor
inc
roll
push
xor
push
test
je
jo
test
insb
inc
pop
pop
lods
dec
fidivl
jl
cmp
or
push
cmp
hlt
je
xor
pinsrw
test
push
rolb
pop
inc
mov
ljmp
inc
push
rol
lock
add
test
sub
or
mov
icebp
cmp
cmp
adcb
sub
fs
shlb
lea
js
adc
push
inc
lds
cmp
add
push
cmp
popa
xchg
xor
xchg
out
repnz
daa
dec
cmpsl
add
sub
icebp
add
push
mov
cld
cld
test
mov
dec
imul
mov
scas
andl
add
stos
mov
cmp
lods
adc
sbb
jae
pop
insb
cs
pop
es
mov
ds
and
and
or
mov
lea
push
cwtl
dec
test
mov
dec
sbb
add
cwtl
orl
vorps
or
mov
cmp
inc
testb
dec
stos
scas
push
cmpsl
test
mov
cmp
and
push
int
fstpt
xor
test
pop
mov
sti
pop
mov
test
inc
push
and
loopne
inc
inc
test
inc
loopne
push
jl
or
dec
pop
lds
out
addr16
push
lea
or
imul
push
aam
pop
mov
mull
and
push
jle
sub
mov
xchg
mov
mov
call
cmc
or
in
push
and
mov
inc
sub
push
or
cmp
mov
add
mov
jne
insl
ret
xor
pop
ss
or
lock
adc
push
dec
rcrb
add
std
pop
ss
test
fsubrl
icebp
out
es
push
gs
arpl
js
sbb
sar
xor
mov
push
push
xchg
add
mov
and
jmp
daa
test
roll
jne
int3
ret
pop
fmull
loope
cwtl
repz
imul
faddl
mov
push
push
mov
mov
push
repnz
jmp
cmp
mov
pmullw
xchg
inc
adc
adc
notl
mov
add
xor
xor
or
push
jl
and
inc
pop
xchg
out
or
sub
or
add
fcoml
push
fs
jns
into
movsb
mov
ljmp
inc
jbe
push
adc
fs
enter
sbb
push
fst
and
or
bound
stos
add
pop
push
mov
sub
in
in
fs
adc
cmp
int3
aaa
mov
mov
test
fcoml
fwait
and
divb
test
repnz
mov
dec
fcoml
mov
icebp
or
cmp
xor
ljmp
arpl
dec
push
pushl
or
adc
lea
or
or
insl
lea
mov
xchg
fsts
mov
mov
ljmp
cmp
clc
jp
in
fistpl
iret
xor
mov
jne
mov
cmp
pop
addl
pop
ds
inc
and
fidivs
mov
cli
xor
movsb
test
andl
movsb
lds
sti
push
dec
in
push
pop
call
call
bound
fiaddl
lock
cmp
jno
pop
adc
sbb
aad
outsb
sbb
outsl
or
mov
adc
push
jle
xor
and
xor
xchg
sahf
insl
mov
mov
mov
mov
cmp
and
mov
push
xor
push
inc
or
pop
inc
mov
js
inc
xchg
adc
clc
xor
cmpsb
mov
xor
out
pusha
lods
jp
add
js
sbb
jmp
adc
cld
xchg
cld
inc
movd
lea
push
js
pop
mov
dec
add
call
call
fsubrl
sbb
lock
add
xchg
push
sub
fsubs
shlb
push
test
mov
ljmp
fimuls
fmuls
arpl
jne
push
and
mov
mov
test
sbb
ret
in
mov
mov
and
or
orb
outsb
push
or
ret
sbb
loopne
dec
scas
mov
or
mov
and
mov
in
jg
push
or
and
jmp
popa
adc
cli
cld
add
add
out
cmp
sub
mov
pop
dec
out
cs
notb
iret
mov
cli
push
fcomps
in
pop
lea
inc
stos
sarb
bound
push
pusha
and
add
mov
or
push
test
and
scas
add
loop
imul
xor
mov
inc
mov
call
pop
jge
mov
lcall
adc
push
lock
cwtl
mov
test
in
push
cli
pop
test
mov
pusha
ss
mov
jb
or
push
call
push
lock
push
out
add
test
push
lods
and
xchg
push
test
adc
and
movsb
add
xchg
inc
add
xor
in
push
add
std
addb
sbb
add
call
shl
xchg
pop
cmp
add
jnp
cmp
rcr
dec
push
fdivrs
mov
outsl
int
push
jmp
mov
xor
inc
and
mov
mov
pop
notb
pop
into
inc
fisubs
lea
hlt
add
add
and
push
add
sub
js
loope
sar
fstp
gs
std
xor
push
ret
push
add
movsl
movsb
aas
inc
dec
add
push
jmp
mov
and
sub
pop
mov
add
sub
pusha
test
es
inc
test
roll
sub
fidivrl
or
cli
sbb
push
hlt
dec
cmp
shlb
sti
jne
cmc
in
or
push
inc
inc
pop
fstl
xor
push
add
lret
pop
mov
push
addr16
popf
arpl
or
fs
xchg
lods
pop
mov
repz
cmp
test
js
in
jecxz
dec
xorl
xchg
movsb
stos
lock
cmp
fdiv
mov
js
mov
xchg
push
cld
loop
sbb
xlat
or
sub
ret
or
add
add
outsb
sub
mov
lods
inc
icebp
lods
push
adc
mov
call
pop
aam
or
sub
arpl
sbb
add
push
cmp
jo
push
sbb
sbb
addr16
push
pop
insb
adc
or
and
clc
xlat
adc
sbb
pinsrw
arpl
cli
mov
push
or
ss
jmp
and
adcl
pop
cli
pop
or
call
test
shrb
or
enter
inc
push
or
call
insb
mov
cmc
dec
cmpsb
sbb
or
mov
add
pop
pop
sbb
mov
ret
cld
lahf
cs
mov
ret
sub
mov
cmp
or
push
cmpsb
xor
pop
push
test
mov
push
movsl
pop
imul
dec
xor
mov
push
test
xlat
cs
add
dec
and
add
incl
sbb
jmp
mov
jae
mov
shlb
add
cmp
cltd
sbb
inc
ljmp
push
or
xchg
ljmp
xchg
push
pop
ret
pop
inc
idivb
lcall
pop
in
jle
adcl
dec
inc
pushf
mov
and
daa
cmc
cmpsl
xchg
push
sub
call
cmpsb
jmp
xor
ja
pop
jnp
pop
test
adc
mov
sub
call
mov
pop
call
mov
leave
addr16
push
mov
pop
jle
adc
ret
add
mov
enter
and
adc
push
push
xor
int3
ret
pop
pop
inc
in
or
and
mov
into
popa
push
pop
and
or
cmp
mov
pop
sbb
and
or
mov
add
fisttpl
or
fs
jne
popa
loopne
dec
stc
outsb
mov
inc
mov
hlt
xor
negb
dec
pusha
rolb
xlat
daa
xor
mov
inc
dec
xor
mov
outsb
jge
mov
mov
lods
pop
jge
dec
orb
sarl
call
jae
rorl
or
test
jo
test
push
sub
xchg
sub
test
test
xor
stos
notb
mov
mov
and
rol
cltd
inc
and
outsb
bnd
inc
clc
inc
push
ss
dec
push
pop
push
psubd
adc
into
add
es
movl
scas
or
xor
or
sbb
or
adc
js
xor
add
test
pop
push
cld
sti
and
loopne
decb
cld
mov
or
out
out
sbb
mov
push
test
fldenv
sub
cmp
and
dec
es
add
dec
cmp
cmp
xor
lock
pop
lcall
bswap
aad
fcompl
pop
pusha
pop
leave
or
push
xchg
test
mov
xor
adc
nop
inc
inc
cmp
cld
dec
mov
mov
xchg
push
xchg
shll
dec
test
xor
xorl
insl
aam
xor
cmpl
cmp
or
or
push
testb
mov
cmp
add
push
sub
push
call
les
les
adc
xorb
repz
ds
inc
mov
stos
jle
push
fisttps
aas
inc
jne
jmp
and
xchg
call
fs
rorb
fimull
incl
testb
xchg
dec
xchg
push
adc
mov
add
cmpb
subps
cld
ss
popf
inc
addr16
jno
sbb
sarb
xor
clc
movsb
cs
push
pop
insb
outsb
mov
stos
shll
loop
loope
stos
sbb
push
mov
enter
pop
mov
push
xchg
loopne
rcll
loopne
cs
pop
dec
push
fwait
enter
test
jb
sub
mov
mov
jmp
shl
lods
lahf
test
ja
and
rcrl
push
punpcklbw
xor
add
mov
in
inc
mov
xor
pusha
sub
mov
stos
insb
push
xchg
cmp
lret
call
ret
iret
shlb
je
add
mov
jne
add
js
imulb
mov
call
clc
inc
sub
adc
add
mov
add
mov
fstpt
test
decb
add
in
or
scas
rcr
inc
pusha
aad
mov
add
mov
pop
add
adc
cmp
pop
out
jp
push
mov
les
aaa
and
aam
add
and
pop
pop
enter
xor
fidivrl
jg
mov
clc
movsb
shrb
cmp
ds
jmp
add
inc
push
test
push
adc
dec
arpl
sbb
push
mov
mov
test
jge
push
lcall
test
int3
pop
push
adcl
cmp
dec
xchg
dec
fdivl
push
js
pop
cmp
cmpsb
pop
dec
inc
push
mov
add
inc
and
mov
imul
stos
movsb
mov
fs
les
mov
jo
inc
addb
xchg
in
outsb
push
aam
addr16
loopne
iret
push
mov
int3
adc
fs
nop
shlb
cmc
mov
das
xchg
inc
add
xchg
push
in
push
fs
mov
aaa
inc
add
loop
mov
rorb
inc
cmc
add
jo
dec
lods
fs
icebp
shlb
mov
push
lret
popa
icebp
leave
add
call
aad
push
adc
mov
push
inc
add
adc
sub
loopne
mov
lods
cmp
push
xor
push
mov
push
add
and
sbb
ret
push
mov
mov
xchg
sub
pushl
push
arpl
mov
xor
popa
out
fmulp
add
jg
mov
test
adc
dec
out
cld
nop
cmp
lea
cs
add
popa
or
aaa
push
adc
jmp
jne
dec
mov
shlb
stos
inc
or
ret
dec
out
lock
lcall
enter
xor
bound
mov
jne
js
adc
int3
add
or
inc
scas
pop
adc
into
dec
lret
aas
dec
ljmp
mov
and
scas
pop
and
xor
fdivrs
daa
cmc
or
xor
fs
sub
clc
push
nop
adc
add
stos
mov
sbb
adc
test
not
mov
push
xor
out
cmc
insb
jne
adc
rorl
jge
mov
call
aaa
jnp
aas
mov
jne
mov
push
cmp
out
inc
add
and
xchg
xorl
dec
sbbl
xor
lock
cmp
sbb
push
jb
push
sbb
in
fistps
pusha
push
add
xchg
mov
fwait
cli
nop
push
jb
shll
popf
test
mov
popa
fcomps
pop
xor
xor
xor
sbb
fs
cmpsl
das
popa
add
js
lret
inc
inc
push
inc
mov
add
push
and
jmp
adc
shrb
je
dec
or
push
pushf
subb
cmp
divb
sbb
add
rcrb
push
mov
sbb
adc
test
sbb
arpl
push
sub
loopne
add
sub
jge
add
pushf
jne
clc
push
fdivrl
sub
mov
push
and
mov
push
pushf
jb
add
add
add
and
xchg
std
push
xchg
push
rorb
sti
mov
inc
pop
xchg
filds
sub
into
in
cmp
ja
push
bound
push
movntq
data16
cld
push
stos
add
xchg
fadd
pop
dec
loopne
ss
cmp
cmpsl
dec
add
xor
mov
ss
rorb
and
adc
pusha
xchg
push
lret
popf
inc
sbb
divb
std
insl
mov
push
jmp
inc
or
dec
stos
outsb
mov
or
inc
jle
dec
jb
icebp
arpl
test
data16
push
mov
mov
es
pop
insb
cld
jnp
push
xchg
jg
xor
pop
repnz
mov
popa
xchg
push
sarb
sbb
subl
add
dec
ljmp
and
test
movsb
add
and
sti
push
xor
add
mov
push
cmp
bound
and
pusha
jnp
add
cmp
adc
add
mov
insl
in
rclb
leave
pop
jb
mov
mov
fidivrl
inc
lret
xchg
or
ficompl
lds
fimull
jbe
push
hlt
pop
das
and
inc
sarb
imul
sahf
or
les
je
inc
aas
push
popa
inc
mov
fucomi
incl
test
dec
and
xor
clc
loopne
mov
xor
nop
ljmp
push
mov
dec
mov
test
shlb
outsl
and
sub
dec
xor
or
mov
jp
mov
insb
lods
push
cmp
mov
add
out
mov
adcl
add
cld
cli
xchg
je
push
xor
mov
fmull
sbb
insl
sbb
in
nop
fsubrl
push
add
xorb
lock
dec
cmp
imul
dec
mov
mov
out
xor
gs
mov
lods
es
push
jne
negb
mov
cmp
outsl
loopne
sahf
je
pop
pop
cmp
cmovge
cmp
jp
insl
inc
test
es
fildl
add
or
or
aam
cli
sbbb
ljmp
push
push
mov
aas
xor
jl
cmp
in
mov
xchg
enter
and
and
fidivs
push
in
jecxz
ret
or
jb
jg
mov
xor
mov
je
movsb
and
pop
call
int3
jmp
popa
inc
std
push
fcmovbe
fmul
inc
mov
sbb
ja
loopne
test
bound
xor
ss
mull
add
and
xchg
orb
or
sbb
aam
cmp
movl
pop
and
push
dec
movsl
je
jbe
jo
push
push
pushf
js
add
pop
clc
mov
cli
pop
pop
pop
mov
dec
loopne
pop
inc
adc
add
add
xchg
push
in
cmpb
sbb
gs
loopne
call
adcb
cmp
mov
inc
cmpl
mov
sub
test
jbe
or
ja
dec
les
push
sbb
or
pop
add
jp
aam
hlt
inc
jge
jo
in
adc
mov
ja
mov
jle
cmp
fsts
lock
push
sbb
cmpsb
lret
cmp
test
xchg
out
aam
pop
mov
adc
or
inc
scas
push
xor
mov
inc
dec
cmp
add
stos
push
pop
jbe
int
add
push
pop
mov
push
test
imul
int3
push
int3
movl
add
push
add
sub
test
in
scas
mov
lods
loop
inc
loop
inc
stos
cld
pop
fisubrs
dec
cld
cld
jb
mov
sahf
cmp
sub
mov
inc
pmullw
sbb
cmp
flds
rolb
js
ljmp
cmp
imulb
inc
sbb
adc
ds
xchg
icebp
roll
cmp
inc
dec
loopne
xchg
inc
push
ljmp
subl
incl
push
pusha
adc
pop
xchg
mov
or
fadds
jl
push
sub
cmpsb
nop
pop
les
mov
lds
push
add
cmp
outsb
jo
mov
push
inc
mov
pop
clc
pushl
loop
or
jbe
pop
dec
in
out
push
push
ss
adc
fs
cmp
push
hlt
add
mov
push
repnz
loopne
add
jbe
dec
lock
popf
sarb
or
adc
xor
decl
sarb
inc
or
mov
push
cmp
mov
insb
in
test
aas
xchg
cli
push
adc
cmp
in
mov
mov
in
mov
and
lahf
add
cld
movsl
shrb
fdivrs
and
cmc
inc
jg
adc
enter
adc
jae
xorl
jg
xorb
pop
mov
dec
mov
mov
mov
push
push
sub
push
and
adc
and
xchg
hlt
mov
push
add
xor
test
movsl
add
adc
subb
add
dec
lds
rclb
mov
cld
add
scas
jbe
push
inc
mov
rorl
xchg
loope
sub
mov
cltd
adc
shll
add
cmc
add
std
xor
test
mov
loopne
xor
and
mov
mov
and
add
fildl
push
fs
sarb
mov
add
aaa
adc
stos
fcoml
lcall
mov
mov
adc
loopne
lock
sti
repnz
in
xchg
jo
testb
adc
add
dec
loopne
push
and
iret
cli
aaa
adc
cmp
mov
jne
movsb
scas
inc
scas
mov
dec
loopne
lods
enter
mov
push
mov
das
inc
lods
push
sahf
adc
adc
fstl
fsub
aam
dec
jo
clc
ss
add
pop
push
push
inc
es
mov
push
sub
outsl
mov
ret
ret
mov
enter
push
nop
loop
mov
mov
cs
adc
push
add
sbb
pop
je
pushf
xor
aas
lea
push
out
push
js
int3
cltd
dec
arpl
ss
push
cmp
mov
push
jmpw
test
cmpsb
xor
dec
cli
jg
movsl
stc
enter
test
push
cmpsl
xor
cli
test
ret
imul
pushl
js
sub
bound
pop
pop
xor
icebp
loopne
push
lock
mov
ss
jno
mov
ret
es
dec
xor
stos
cmp
outsb
testl
cmovo
pop
cmp
dec
and
push
xor
std
sub
lcall
mov
adc
mov
xor
and
mov
and
enter
cmp
or
jae
bnd
popa
add
xor
outsl
xor
jae
lcall
pop
pop
test
cmp
push
add
add
scas
nop
xor
rorb
inc
mov
outsb
std
xchg
in
sbb
push
bound
sbb
pop
orl
icebp
shl
add
jecxz
or
dec
in
push
xor
adc
enter
cmp
cmp
call
ljmp
push
mov
cmp
jle
or
cs
push
and
sbb
adc
push
inc
push
mov
cmpb
or
mov
and
clc
int
mov
test
lods
addb
add
cmpb
adc
adc
add
push
shl
shl
shlb
push
or
inc
cli
les
xchg
adc
cld
stos
or
loopne
mov
hlt
dec
fsubrp
dec
addl
andb
sbb
mov
iret
fdivrs
bound
or
push
ret
ror
cmp
nop
jae
int3
push
adc
test
gs
xchg
ljmp
rcll
xchg
mov
pxor
inc
dec
adc
rclb
call
fiaddl
sbb
icebp
sbb
ficoml
addb
clc
inc
subb
hlt
jge
rcrb
pop
out
pop
jne
je
cmp
cs
mov
loopne
loop
mov
in
ja
or
in
mov
xor
mov
inc
and
adc
mov
into
cmp
and
punpcklbw
test
add
fiadds
data16
pop
lea
add
mov
push
and
add
fsubrs
leave
push
in
and
push
pop
gs
scas
mov
xchg
push
icebp
popl
nop
jno
jne
xchg
in
sbb
cmpsb
mov
jmp
out
cmp
jg
out
adc
outsb
inc
mov
adc
icebp
je
loopne
rcrl
enter
xchg
mov
or
cmp
mov
fisubrl
test
insl
jne
fistpll
pop
jmp
xchg
pop
add
cmp
push
push
test
or
hlt
push
dec
test
mov
sbbb
and
adc
fmull
adc
add
je
push
push
push
movsl
pmaxub
lcall
out
jg
les
aas
xor
inc
push
enter
sub
push
aam
xchg
mov
mov
adc
aam
mov
mov
dec
inc
mov
pop
clc
push
xor
or
push
je
adc
pop
add
jmp
push
sub
incl
jmp
sbb
shrb
nop
imulb
ret
xchg
add
mov
inc
aad
ret
out
xchg
lock
loopne
nop
cwtl
stc
je
and
push
fldl
sub
popa
loopne
add
sbb
jp
cld
fisubl
test
inc
dec
loopne
mov
lods
popf
push
sti
rcll
js
nop
lcall
pop
lcall
add
inc
je
pop
sub
sbb
jne
es
shlb
nop
xchg
add
mov
adc
cmp
icebp
into
push
movsb
mov
push
std
mov
loope
jg
mov
mov
ljmp
cmp
lcall
push
js
dec
loop
cwtl
xchg
pop
test
mov
aaa
arpl
push
or
ficoml
sbb
shlb
dec
mov
les
inc
sbb
mov
paddusw
mov
clc
pop
adc
add
call
lcall
je
pop
ret
pop
adc
gs
fdivl
inc
push
test
fadd
cmp
push
stos
mov
adc
mov
pop
cmpsb
rclb
push
jg
xor
jmp
xchg
ljmp
inc
jl
push
cmp
add
es
mov
jmp
subl
push
out
sbb
adc
incl
xor
cmp
sahf
or
out
mov
cs
xor
dec
insb
inc
mov
call
pusha
mov
inc
aas
fldt
test
mov
repnz
jmp
lret
xor
and
adc
call
sub
fmull
loop
inc
aam
in
cs
jo
incb
mov
in
roll
jbe
sub
jg
in
adc
sti
sbb
call
ds
pop
pop
scas
add
cli
mov
adc
rcrl
sbb
ljmp
adc
add
sub
aaa
adc
cli
mov
cld
int3
xor
clc
add
enter
adc
push
mov
popf
inc
dec
pop
or
test
sub
xchg
stos
outsb
jbe
add
and
dec
push
pop
or
or
or
push
mov
ret
cmp
push
popf
xchg
outsb
aam
add
addr16
incl
cs
inc
in
popf
adc
dec
add
add
in
scas
test
fildll
loopne
xor
ficomps
push
mov
fcomip
add
jmp
inc
push
mov
xchg
leave
mov
xchg
inc
cli
sub
jecxz
test
mov
mov
or
cmp
ret
in
decl
out
lock
push
mov
sub
lea
test
out
rol
or
enter
adc
xor
xchg
cli
sub
adc
mov
sbbl
cmp
int
pop
js
push
jmp
push
cmp
mov
add
out
inc
in
test
push
je
lahf
ret
hlt
mov
mov
jo
and
push
push
jo
jle
inc
xchg
sbb
mov
jbe
sti
int
pop
pop
push
mov
fimuls
mov
mov
push
sub
push
fdiv
mov
jmp
mov
ret
xor
xchg
push
psraw
mov
int3
or
add
enter
cs
fldt
test
push
xchg
jle
cmpsb
push
sarb
add
scas
sub
adc
inc
push
gs
push
into
xor
repz
stos
xchg
xor
cmp
imul
dec
jmp
add
xchg
lret
roll
adc
lret
or
jbe
or
inc
cmpsl
mov
shrl
orl
test
inc
cmpb
mov
mov
cld
xor
addr16
add
add
cmpl
mov
mov
divb
outsb
cmp
mov
mov
xchg
clc
inc
cmp
and
or
shrb
add
jb
inc
outsl
sbb
mov
std
ret
cmp
fists
int3
insl
and
pusha
mov
dec
mov
dec
ss
enter
roll
ljmp
push
in
nop
xchg
push
arpl
add
mov
fistps
scas
notb
int3
inc
fs
mov
and
xor
adc
xchg
loopne
shll
xor
orb
xchg
push
jmp
lea
les
stos
call
dec
ficoml
sbb
jge
pop
xor
and
inc
lea
mov
and
jge
bound
rcll
inc
int3
cli
dec
mov
inc
call
popf
push
push
sbb
mov
in
xchg
das
dec
les
inc
inc
iret
addl
scas
ficoms
adc
fs
mov
add
sbb
mov
add
sbb
cs
pop
mov
dec
sbb
mov
adc
dec
lret
shlb
outsb
incb
lock
sar
lock
ret
pop
inc
js
or
mov
pop
sub
sbb
shl
mov
sarl
jb
dec
mov
mov
jne
roll
add
mov
in
sub
push
add
adc
divl
xor
enter
jb
repz
aas
hlt
add
out
xor
push
or
outsl
repnz
adc
fiaddl
lcall
shl
push
push
xchg
js
push
in
push
push
adc
movsb
dec
fdivr
and
ljmp
orl
add
push
jmp
call
jnp
das
fs
inc
cmp
pop
sbb
push
jle
push
lock
addl
push
pop
rcl
pop
mov
add
std
sbbl
hlt
push
or
adc
loopne
and
test
int
push
mov
jmp
mov
adc
adc
addr16
fadds
test
rorl
outsl
push
hlt
flds
flds
pop
pop
push
jbe
adc
dec
cmpsl
lret
sub
adc
mov
add
jmp
icebp
adc
mov
je
mov
in
movups
or
addb
mov
jb
sahf
rcrb
fisubl
mov
pop
or
inc
int3
test
shr
inc
pusha
in
jmp
xor
mov
jno
pop
cmpl
lock
xor
sub
push
test
inc
je
push
add
jp
or
mov
pop
ljmp
shlb
push
add
je
es
pushl
add
scas
jmp
orl
mov
cld
adc
loopne
mov
mov
call
inc
push
add
adc
jmp
jmp
adc
and
ret
roll
jg
nop
push
lcall
inc
pop
movsb
add
xor
jmp
adc
cmpsb
inc
cwtl
mov
nop
fsubs
mov
inc
test
aaa
inc
pop
call
shrb
loopne
sbb
adc
std
xor
mov
mov
add
add
adc
inc
ds
je
push
fmuls
pop
cld
mov
xchg
ss
addl
int3
lods
inc
dec
loope
xor
xor
adc
sarb
insb
xor
push
pop
rolb
jo
inc
jb
sub
push
add
sbb
cmp
fisubl
aam
data16
cld
push
lea
jg
mov
fs
stc
xor
add
adc
hlt
push
add
mov
inc
lea
inc
sbb
test
or
xlat
lock
adc
int
add
nop
xchg
cli
insb
add
arpl
std
adc
mov
stos
push
add
mov
dec
sti
repz
dec
in
adc
std
cmp
push
stos
pop
jmp
pop
push
pop
shll
jge
jbe
add
pop
mov
mov
push
jge
in
push
adc
std
mov
stos
inc
xor
or
mov
mov
and
hlt
popa
jne
loopne
mov
test
add
fwait
mov
push
xor
into
pop
push
pusha
lock
ja
jg
les
push
push
push
loopne
inc
aaa
sbb
rcll
cs
sarl
push
or
xlat
dec
shlb
sub
enter
push
sbb
jne
push
add
cmp
pop
and
mov
xchg
add
sbb
dec
push
aam
stos
sub
test
jle
gs
or
push
push
push
adc
inc
lahf
sbb
rcrb
adc
or
enter
or
sbb
call
ss
mov
pop
jae
fld
mov
pushf
lea
push
mov
aas
add
mov
mov
mov
cmc
inc
je
test
test
testl
js
cs
fdivs
loop
test
insb
repz
divb
dec
and
dec
dec
je
mov
sub
mov
lock
adc
roll
sahf
inc
and
test
es
mov
int3
aaa
or
fmull
sbb
test
cli
mov
orb
jbe
gs
test
orl
loopne
dec
jns
in
jp
loop
test
sub
inc
test
mov
icebp
or
movl
int3
mov
cmp
mov
mov
test
mov
clc
cld
cmp
ja
mov
decb
rorb
push
xor
clc
and
clc
mov
dec
ficomps
outsb
pop
mov
aas
push
cmp
test
xchg
nop
inc
xchg
lds
mov
adc
add
push
adc
and
es
je
loop
imul
scas
add
inc
pop
sbb
scas
mov
cmp
clc
and
mov
fs
push
std
cmpsb
ss
add
outsb
cmp
pushl
mov
orl
add
add
sarb
idivl
cmp
frstpm(287
and
pop
test
in
mov
cmc
add
push
dec
mov
ss
scas
test
fidivrs
js
push
or
lcall
or
es
pop
mov
push
sub
pop
aas
popa
testb
add
lds
and
call
mov
pushf
xor
cmp
add
mov
lock
imul
cmp
or
or
jge
pop
and
and
call
aaa
aam
loope
push
loope
fstpt
xor
adc
js
xor
je
xor
aas
cltd
or
cld
andl
xor
loopne
cmp
and
push
push
jmp
jb
lock
mov
scas
and
sub
inc
add
adc
pop
jo
mov
call
xchg
icebp
outsl
add
dec
hlt
js
dec
lea
push
mov
out
icebp
mov
lock
or
push
cmp
rcrb
sbb
movb
push
cmp
sti
add
mov
imul
mov
fmull
add
data16
dec
leave
int3
rcr
jnp
mov
mov
xor
or
stc
sub
inc
stos
xchg
js
insb
andl
mov
pop
icebp
dec
sbb
xbegin
sbbb
mov
pop
cmp
or
clc
loope
cmpsb
cli
je
lret
or
add
pop
add
adc
in
std
in
mov
mov
fs
xlat
inc
cs
nop
and
fdivrp
mov
push
push
xor
push
add
mov
mov
dec
pop
sub
call
or
push
dec
cmp
jb
lret
ret
bound
mov
jge
mov
decb
faddl
jbe
inc
rcl
dec
push
add
add
arpl
gs
movl
adc
xor
call
jmp
nop
rclb
dec
pop
dec
inc
or
xchg
adc
inc
aam
jmp
sahf
cmpsl
adc
hlt
inc
mov
sub
ljmp
add
mov
decl
jl
inc
mov
icebp
jp
xchg
mov
les
push
adc
mov
orl
and
mov
pop
inc
push
cmpb
pop
dec
loope
ja
push
aam
mov
les
popa
pop
mov
xor
out
nop
aas
mov
push
mov
incl
inc
loop
push
add
xor
test
int
loope
out
ds
jmp
pop
cmp
pop
mov
add
jmp
jo
bound
inc
jmp
xor
dec
shl
out
leave
add
mov
and
outsl
sbb
nop
pop
loop
add
xor
loop
cmp
push
inc
adc
adc
notl
or
add
popa
dec
push
aad
and
dec
push
loopne
xor
lcall
rcll
add
aam
inc
int3
pop
xchg
pusha
push
and
push
mov
add
adc
pop
pop
icebp
xchg
mov
cmp
pushf
adc
dec
mulb
sub
dec
jbe
insb
add
aam
push
jmp
enter
pop
loop
hlt
lret
inc
js
xchg
push
or
into
push
mov
notb
inc
add
add
mov
pop
ret
adc
sbb
test
push
rorl
ret
mov
test
add
je
push
mov
jle
jmp
and
imul
dec
sub
adc
lods
jo
outsb
pop
adc
incb
pop
insb
pop
sbb
sub
lret
inc
arpl
mov
jmp
adc
aaa
test
mov
push
lock
sub
push
mov
lock
jne
dec
pusha
cmp
inc
push
push
adc
ds
jno
adc
movsb
nop
push
adc
inc
jo
adcl
jo
mov
or
int
hlt
movsb
xor
les
push
cmpsb
decb
daa
mov
jo
callw
stos
add
aaa
jbe
sbb
or
add
divl
xor
jp
out
insb
sbb
push
or
shrl
out
test
mov
adc
mov
sti
mov
ret
cld
leave
xlat
pop
adc
or
or
push
push
pop
imul
jl
cld
insb
dec
dec
call
pop
js
lea
adc
or
inc
lods
add
inc
stos
pop
pop
inc
clc
xchg
push
cwtl
mov
jmp
sbb
push
cld
loop
popa
pop
xor
mov
dec
inc
jl
sarb
mov
test
daa
mov
jne
mov
nop
or
push
fsubs
dec
test
data16
add
and
push
orb
lcall
popa
jmp
loop
shl
mov
xor
sbb
cmp
push
daa
sbb
pop
loopne
fisttpl
in
pushl
in
call
shrb
mov
add
jno
cld
stc
loop
jle
inc
push
int3
push
rolb
add
add
ret
add
pop
es
or
xor
cmp
adc
rolb
out
inc
sbb
or
imul
inc
push
clc
mov
loop
jp
or
mov
mov
lcall
jle
xor
or
je
and
adc
jmp
jp
mov
and
dec
xchg
test
cmp
dec
jp
rcll
push
adc
ror
push
adc
repz
mov
xchg
inc
adc
mov
mov
xor
lcall
sarl
or
cmp
ljmp
push
mov
jae
loop
inc
dec
je
adc
xorps
mov
mov
or
cmc
jg
xchg
mov
mov
loopne
add
and
lods
adc
inc
sar
push
sub
add
call
imul
xor
add
lcall
lret
fiaddl
roll
add
inc
aas
adc
lock
mov
enter
in
push
push
popf
push
lods
mov
decb
add
xor
inc
sarb
push
cmc
adc
add
pop
add
stc
xor
and
into
mov
xchg
push
mov
aam
loopne
rorl
call
mov
out
or
outsl
push
cld
cmp
pop
or
es
dec
inc
pop
adc
outsb
ss
int3
ljmp
icebp
pop
pop
icebp
add
push
fnstcw
xchg
ds
add
ljmp
outsb
je
dec
pop
loope
mov
repnz
xor
ret
xchg
lea
inc
and
pop
add
icebp
jg
jno
mull
pushl
test
adc
inc
cli
xchg
imul
push
aaa
or
adc
and
and
and
push
es
repz
mov
mov
into
daa
mov
and
inc
mov
imul
push
cmp
ljmp
out
and
stc
stos
test
test
adc
or
roll
test
je
adc
fisttpll
repnz
add
sbb
cmp
xlat
js
mov
inc
ljmp
lcall
aaa
xchg
or
and
lods
or
jmp
out
mov
push
rcl
jb
int
call
inc
or
and
inc
push
std
add
cli
or
sbb
clc
or
loop
add
pf2iw
dec
xadd
sbb
sbb
test
jo
mov
push
into
nop
rclb
outsb
gs
std
xor
push
mov
pushf
sub
inc
jmp
test
sbb
testb
loopne
sub
mov
and
or
fmull
jb
ljmp
aaa
std
lock
push
js
cld
js
pop
push
sarb
xchg
fidivrl
cmp
clc
ja
push
cmpsb
add
add
rorl
xchg
in
push
xor
mov
in
xlat
cli
add
roll
lods
test
cli
add
in
mov
cmp
add
dec
les
jecxz
imul
mov
or
jmp
mov
test
pop
push
mov
icebp
and
fldenv
lcall
mov
xor
xchg
rcrb
xor
inc
pop
sub
mov
mov
add
inc
pop
out
andl
push
jbe
push
cmp
test
mov
pop
push
test
ljmp
jnp
jne
inc
cld
xchg
jp
orl
dec
pusha
sbb
rorb
movb
jg
mov
mov
sub
jge
enter
ret
mov
test
dec
jg
rolb
paddb
outsl
insb
outsl
mov
js
pop
or
xor
ret
pushl
mulb
repz
inc
mov
ss
lock
lcall
lods
adcb
xor
fsubrp
cli
test
dec
pop
add
pop
inc
mov
rolb
mov
pusha
and
data16
or
jae
sbb
cmp
lock
aam
orb
and
xor
pop
into
addl
pop
ret
test
pop
into
cltd
ret
mov
mov
icebp
jnp
fs
adc
int3
test
push
add
add
std
sbb
add
inc
rorl
cli
mov
mov
or
in
jg
pop
rolb
test
jl
sbb
jb
les
cmc
lds
lock
mov
or
jmp
mov
jmp
cmp
rcrl
adc
jl
push
ja
ds
incb
ficoml
mov
mov
adc
lcall
je
cli
adc
ret
movsb
or
mov
adc
js
mov
leave
or
scas
andb
jno
cmp
ret
xlat
out
scas
stos
jmp
lret
int3
or
push
mov
or
jge
cmp
add
adc
inc
push
push
jp
ja
ss
cmp
pop
cld
hlt
mov
sbb
inc
adc
test
sbb
fwait
cld
fsubs
rol
fs
add
je
mov
add
mov
dec
mov
sbb
or
mov
int3
sbb
lcall
mov
nop
mov
pop
push
in
fwait
mov
and
mov
add
dec
inc
mov
imul
push
stos
decl
loopne
jge
lods
aam
inc
pop
test
fs
stos
in
out
push
ja
dec
adc
xchg
add
ret
insl
add
add
lret
stc
data16
mov
fisubrl
mov
lret
rolb
int
xchg
mov
dec
icebp
test
xor
pop
add
add
lahf
hlt
ljmp
lock
sbb
add
mov
pop
mov
pushf
out
jl
aam
or
lods
arpl
les
pop
ljmp
jb
xchg
inc
pushl
test
lock
ds
pop
hlt
loopne
fmuls
pop
in
mov
pop
cmp
xor
cmp
mov
outsb
mov
rcrb
pop
and
pop
xchg
mov
and
in
cld
xchg
adc
std
es
jne
mov
clc
sub
cmc
data16
icebp
movsb
inc
push
call
jno
jge
pop
mov
inc
and
lock
or
in
lods
adc
mov
jmp
mov
jp
out
jbe
jnp
xchg
jae
sbbl
paddd
pop
fisubs
hlt
or
or
and
cmp
mov
add
lea
xchg
push
add
loop
mov
nop
mov
leave
outsl
jbe
mov
mov
cmp
push
or
push
mov
das
jge
adc
adcl
lcall
shl
push
ds
adcl
mov
pop
ret
and
or
push
sub
or
outsb
insl
jnp
rol
mov
or
cmp
lret
xor
fistpl
out
rclb
push
inc
cmpl
adc
loopne
sbb
sub
add
fs
into
leave
push
adc
outsb
pop
out
cmp
cmp
adc
mov
dec
inc
test
fbstp
and
in
popf
test
ss
cmp
mov
sbb
test
xorl
rorl
pop
leave
mov
mov
scas
popf
cmpsl
sti
dec
mov
adc
data16
xor
mov
pop
xor
cmp
push
sub
adc
cmpsb
push
mov
shrb
nop
cmp
out
add
subl
mov
push
xlat
outsl
test
add
gs
cld
out
sub
pop
leave
inc
xor
cmp
push
mov
push
call
mov
pushl
jb
xchg
insb
xor
data16
cwtl
mov
push
mov
les
xor
mov
gs
cltd
out
shl
nopl
movsb
daa
cld
pop
mov
clc
in
mov
fiadds
mov
adc
mov
mov
cmp
loop
xor
mov
and
aas
push
sub
incl
nop
aad
call
or
mov
adc
repnz
jmp
jp
jo
mov
lock
test
and
in
mov
cmc
stos
in
push
mov
adc
insb
push
xchg
fsubs
test
inc
mov
test
in
ret
rclb
movb
out
pop
std
aaa
jne
adc
push
push
rclb
cli
pushf
push
dec
insl
sub
jecxz
mov
sub
jmp
push
push
sub
dec
adc
cmp
inc
or
xchg
loop
cmc
mov
dec
mov
jp
shll
insb
sbb
lock
dec
add
insl
ret
pop
jmp
mov
dec
enter
sub
jb
test
cli
mov
dec
clc
adc
pop
fmul
mov
inc
xorb
xchg
push
inc
mov
loopne
sub
sub
pusha
test
cwtl
mov
jp
sahf
mov
scas
in
cli
shr
nop
data16
inc
in
pop
dec
loope
cmpsb
adc
and
rclb
inc
rcl
sub
pushf
push
push
icebp
cmc
out
fdivs
add
mov
mov
les
or
int3
push
adc
pop
imul
fs
jle
mov
and
and
push
shl
jb
push
push
add
mov
xchg
les
add
push
sbb
shrb
jbe
push
jge
adc
scas
mov
mov
sbbb
fdivrs
pop
push
addb
lea
enter
and
dec
test
mov
jle
push
pop
add
adc
rcrl
inc
push
into
push
outsl
nop
jmp
push
pop
call
or
or
xchg
xchg
jb
cmp
cmpl
mov
out
and
in
rclb
pop
or
and
ret
adc
adc
gs
clc
ljmp
push
ret
ficompl
sbb
cmpsb
or
push
repnz
xchg
and
add
std
incb
outsl
sarb
decb
push
push
lock
sahf
rorl
push
incb
cld
or
sub
clc
pop
shrd
fnstsw
in
push
push
or
test
adc
push
movsb
pop
push
in
cmp
add
mov
push
sbb
sti
or
inc
mov
push
in
push
mov
dec
mov
pop
call
out
fldenv
sub
loopne
sub
int3
jp
dec
insb
push
into
int3
int3
push
jp
out
cmpb
dec
popf
rorb
mov
scas
or
dec
xchg
mov
and
in
je
mov
sahf
xchg
add
dec
and
int
ror
lds
fsubr
cmp
pushl
loop
cmpw
hlt
inc
fcmovnb
inc
insb
das
movb
fs
mov
pop
sub
add
int3
sub
int3
cs
xor
mov
lock
push
out
pop
cli
enter
aam
test
stos
xchg
cmp
inc
push
push
decb
mov
sub
mov
gs
push
dec
mov
or
dec
xor
xchg
adc
sahf
insb
clc
pop
inc
ljmp
push
and
mov
mov
rol
mov
and
mov
xchg
loop
int3
xchg
bound
out
add
jnp
and
enter
or
jle
adc
in
in
lods
push
cmp
out
xchg
int
mov
lcall
push
or
in
pop
mov
xor
scas
mov
loope
pusha
shlb
ret
in
es
pop
arpl
mov
ja
adc
adc
push
imul
or
hlt
push
sub
je
cmp
cmp
jmp
loop
and
push
int3
inc
movsb
push
in
add
rcll
cmp
dec
adc
mov
jmp
shrl
jge
loope
pop
sbb
pop
jne
push
push
mov
mov
mov
adc
loope
add
aam
adc
sarl
and
sub
mov
outsl
outsb
std
aas
xor
sbb
pop
pop
or
xor
popa
adc
aam
std
mov
xor
inc
dec
adc
icebp
call
push
out
gs
inc
stos
fs
cmpsb
mov
lret
js
lahf
pop
jbe
xor
psrlq
mov
gs
ret
aad
cld
movsl
pop
pop
adc
test
mov
testb
mov
movaps
mov
sub
mov
pop
push
push
jno
push
jbe
dec
or
push
and
pop
shrb
shrb
outsl
push
xchg
nop
add
mul
cmp
inc
les
xor
inc
repnz
stos
aam
add
add
cs
mov
test
mov
outsl
and
in
lcall
lea
call
pop
lea
ss
and
js
add
or
test
lods
ret
jl
add
lret
mov
mov
add
and
sidtl
in
xor
add
lea
out
fisttpl
out
decl
mov
hlt
dec
pop
inc
mov
mov
cmp
sbb
roll
add
fimuls
lea
or
rol
sbb
adc
jmp
scas
mov
mov
mov
rclb
rolb
and
scas
and
ss
jmp
ret
je
xor
mov
sbb
push
cvtps2pd
inc
scas
call
dec
js
push
jge
inc
std
call
pop
rclb
cmp
shll
mov
fdivs
add
mov
mov
add
les
mov
dec
loopne
jae
jl
adc
jmp
stos
sbb
xchg
and
ja
push
adc
xchg
add
std
xor
mov
add
push
or
out
mov
mov
push
outsl
ljmp
add
dec
sbb
or
mov
mov
jnp
xor
pop
or
pop
or
inc
xchg
and
push
mov
lock
push
add
and
pop
mov
xchg
dec
sbbb
ja
push
and
lods
inc
rcrl
push
mov
sub
rcrb
lods
rclb
pusha
daa
outsb
dec
sti
out
nop
xor
mov
int3
rorb
ret
call
push
push
loopne
dec
push
fisubl
lret
mov
sbb
sbb
cmp
mov
mov
xchg
xchg
push
sub
add
pusha
ja
loopne
cli
ljmp
and
and
jno
lcall
lock
push
pop
push
decb
jb
iret
sub
xor
loopne
es
imul
pop
sahf
fmul
clc
inc
xchg
loopne
pusha
mov
test
mov
add
add
inc
xchg
jmp
xor
or
sbb
cmpsl
mov
dec
leave
bnd
mov
push
repz
rorl
dec
movsl
andl
or
fs
add
cmpsl
shrb
sub
xchg
xchg
inc
xlat
cld
jmp
xor
push
andb
xchg
cmp
out
jp
movsl
pop
js
pop
cmp
mov
xor
sahf
jmp
push
repz
mov
ret
hlt
add
leave
mov
mov
aas
setge
shrl
push
add
ret
fildl
push
js
lock
insl
hlt
sbb
loop
fcompl
inc
out
mov
lret
dec
sub
sbb
adc
stos
or
lret
es
adc
mov
fxch
cmp
pop
push
cmp
jbe
add
test
add
cmp
push
or
cmp
ljmp
and
insb
enter
lcall
cmp
pop
mov
decb
and
inc
xor
into
jbe
add
pushf
jne
add
add
mov
dec
loopne
rorl
lcall
adc
insb
clc
inc
clc
paddd
mov
jg
inc
inc
push
jo
mov
cs
adc
adc
adc
adc
and
sbb
mov
loopne
outsl
mov
xchg
xor
divb
and
imul
jo
dec
cld
jge
inc
je
adc
cmp
cltd
or
dec
pop
sub
dec
stos
fdivrl
xor
push
lcall
lret
jle
xor
push
cwtl
repz
add
call
xor
push
es
mov
ja
cmp
push
jl
add
in
or
shlb
lods
and
inc
dec
add
into
in
xchg
mov
call
pop
xlat
mov
cmc
aas
add
cli
mov
mov
je
test
push
pop
sub
push
ret
jo
push
add
adc
push
jb
mov
or
dec
add
enter
inc
rcrl
sahf
pop
popa
ss
inc
test
loope
mov
adc
add
rol
dec
test
sbb
mov
inc
and
fstps
lods
xchg
add
xchg
xor
mov
ljmp
data16
mov
outsl
loopne
or
cmp
fsubrs
cmp
je
clc
fdivs
pushl
and
xor
movsb
sahf
or
popf
aam
daa
dec
xor
lock
cmp
push
shl
insl
cmp
cwtl
js
add
mov
js
gs
hlt
aam
xchg
aaa
cmc
cmp
inc
test
and
hlt
pop
or
lea
jp
outsb
pop
cmp
lods
stos
test
pop
and
push
mov
fisttpl
les
lds
jmp
orb
leave
add
lock
ja
cmp
stc
dec
push
aam
shlb
lods
andl
and
cmpsb
inc
rcrl
movsl
in
inc
xchg
pop
jns
aaa
clc
mov
cmp
aas
adc
das
adc
leave
cli
fcmove
push
xor
xor
test
cmove
fmuls
gs
mov
cmp
aam
lret
fdivr
mov
mov
jge
repz
in
hlt
pop
mov
xchg
adc
aam
into
movsb
pop
mov
mov
rcrb
stc
jbe
nop
sahf
cmp
adc
out
dec
test
gs
enter
into
mov
loopne
aam
jne
and
ds
pop
inc
in
test
cld
push
inc
orb
mov
or
jle
or
jae
sub
add
mov
jno
cmp
fsubrl
sub
aam
mov
sbb
add
cmpsb
scas
clc
or
cmp
push
and
movsb
hlt
dec
adc
dec
jg
mov
inc
sub
adc
cmpsl
cwtl
mov
roll
aam
or
je
cmp
xor
xchg
pushf
mov
and
out
inc
xchg
inc
sub
or
fistl
cmp
sar
inc
dec
pop
pushw
mov
push
rcr
std
xor
mov
jp
inc
mov
out
jo
inc
xor
push
mov
repnz
push
xchg
jo
es
sub
mov
negb
into
cs
push
mov
mov
cmp
mov
or
cld
inc
aas
sbb
dec
enter
leave
pop
cmpsl
pop
sbb
inc
imul
jne
ja
je
test
push
andb
inc
xchg
xor
mov
mov
aaa
dec
inc
or
push
aaa
or
lock
mov
into
sahf
cld
xchg
outsb
pusha
pop
mov
clc
stos
int
repnz
sbb
test
lea
mov
cmp
jge
ljmp
push
pop
push
mov
push
fidivrl
dec
xor
jno
loope
sub
ss
or
dec
mov
push
sarb
test
fisubs
repz
test
push
mov
or
andb
mov
pop
mov
add
js
enter
lock
ds
mov
xor
push
jge
xor
and
or
fdivrs
cmpb
dec
lea
and
orb
test
mov
pop
and
imul
mov
je
aaa
xor
pushf
bound
stos
dec
arpl
push
add
aam
xor
jno
pop
jle
rorb
adc
test
cld
lea
push
nop
outsb
sbb
icebp
and
int3
push
ret
add
in
sarb
mov
mov
xchg
icebp
or
cmp
lea
mov
xchg
pushf
mov
push
mov
repnz
xor
push
sbb
add
dec
mov
aas
pop
mov
cmp
fistpll
or
xor
xor
testl
push
add
aaa
xor
jbe
sub
adc
push
lods
jp
mov
pusha
pop
inc
jbe
loopne
add
and
pop
aam
rcrb
add
imulb
xchg
pop
and
add
mov
mov
aaa
sbb
mov
lods
out
lret
lret
dec
inc
ljmp
loopne
adc
pop
in
push
outsb
cld
sbb
call
push
cmp
faddl
aas
or
clc
inc
sarb
shlb
and
and
cltd
ja
adc
pop
int3
adc
push
sbb
mov
jne
outsb
or
aam
jmp
mov
mov
outsb
mov
mov
push
push
cmp
es
push
imul
adc
fmull
cld
adc
pusha
test
out
add
add
fldlg2
push
add
les
mov
mov
and
jne
sar
filds
push
pusha
xchg
jmp
xor
pop
loopne
ret
xor
out
insb
pop
dec
xchg
or
jecxz
pop
or
fmull
call
sub
adc
mov
adc
fisttpl
aam
sti
mov
xor
sub
push
push
and
xor
xor
inc
xchg
pusha
xor
push
dec
cld
mov
adc
add
jb
jle
lock
std
mov
fistpll
cmpsb
xchg
xor
stos
inc
loop
mov
push
push
mov
lcall
and
push
call
iret
inc
jle
ljmp
dec
or
push
aam
fwait
sbb
int3
jl
inc
int3
add
idivb
mov
loope
cmpsb
add
mov
xchg
stos
test
ss
cmp
out
and
push
dec
xchg
dec
push
sti
mov
andl
int
pop
adc
jbe
dec
cwtl
loop
inc
add
rorb
lcall
js
clc
pop
add
fldl
sub
int3
push
cld
rorb
inc
notl
xchg
dec
mov
or
sub
test
aam
aam
mov
mov
mov
rorl
pop
shr
xor
ret
loopne
ja
add
xlat
aam
ja
popa
cld
insb
adc
nop
inc
loopne
aad
lods
mov
jo,pn
je
ljmp
mov
cmp
mov
loope
inc
mov
add
push
cmp
pushf
test
jg
and
add
roll
nop
shr
ss
gs
fdivr
push
imul
push
dec
cmc
push
sbb
cmpsb
repnz
es
js
hlt
mov
pop
xor
adc
xchg
or
cmp
outsb
pop
rorb
adc
push
inc
aad
icebp
loopne
mov
ljmp
rcrl
or
sbbl
pop
rorb
jp
xchg
sbb
pop
data16
popa
mov
outsb
adc
outsl
push
lock
in
mov
int
icebp
outsl
cmp
repnz
les
sub
iret
mov
adc
xchg
mov
sub
mov
push
jae
fdivs
fbld
add
push
pop
movb
test
adc
inc
dec
inc
adc
lods
ret
xor
stos
or
scas
xor
mov
push
and
sbb
adc
jae
jmp
push
adc
in
inc
into
repnz
sti
test
int
pop
cli
bound
adc
nop
call
les
fsubrs
sbb
sub
xor
adc
jl
jbe
inc
and
sub
out
fdivr
mov
lock
mov
cmp
inc
mov
add
push
and
mov
repnz
das
lea
mov
jmp
inc
in
cli
push
div
das
sub
nop
rolb
jb
push
sbb
push
outsl
adc
or
mov
or
pushl
movsl
jno
cs
or
mov
inc
mov
xor
movsb
scas
add
fldt
push
data16
adc
in
dec
popf
sbb
dec
clc
loopne
sub
mov
mov
out
cld
mov
fsubs
sub
push
cld
shlb
repnz
stos
lcall
call
fcom
inc
fdivrl
addl
pop
xlat
cmc
push
push
xor
jne
movsb
xchg
mov
and
pop
inc
shlb
cmp
push
mov
add
dec
sbb
ds
sbb
sbb
sub
add
test
pop
pop
movsl
ret
das
jl
push
xchg
pop
mov
dec
loopne
rcrb
sarb
lahf
push
add
test
fisttpll
std
rcrb
mov
sbb
or
mulb
add
incb
pop
adc
jle
cmpsb
cmc
mov
cmp
and
or
add
arpl
stos
adc
jbe
enter
jb
pusha
rorl
pop
xorb
or
lahf
ds
pop
rol
rol
shlb
cli
add
sub
adc
add
lret
push
adc
call
ljmp
outsl
xlat
adc
adc
pop
sbb
xor
addb
in
stos
push
pop
and
gs
adc
push
ror
iret
ror
mov
adc
sub
test
fiadds
push
jae
mov
mov
jmp
inc
cmp
add
adc
add
and
mov
ja
inc
inc
sub
lea
or
mov
in
sub
and
push
cs
add
push
adc
push
mov
jne
jmp
data16
bound
cmc
jecxz
fstpt
lock
add
dec
or
mov
in
sbb
sbb
xlat
test
mov
ds
lock
ss
push
pop
sbb
push
scas
int3
ret
push
test
xlat
xchg
call
jl
and
pushf
mov
cld
xor
lock
jb
stc
pop
cmp
and
pushf
pop
adc
outsb
xor
andb
adc
nop
xchg
xor
cli
lods
in
cs
sti
cmpb
lock
outsl
push
push
cli
mov
loop
xchg
push
data16
xchg
pop
je
and
dec
cli
test
mov
jl
pushl
sub
shlb
ret
inc
jmp
movsb
stc
lea
adc
movsb
push
cmp
xor
insb
lea
push
mov
mov
les
into
mov
push
cmp
test
mov
das
push
insl
imul
push
sub
push
xor
jmp
push
aad
mov
adc
loope
call
lods
pusha
add
in
stos
inc
mov
call
outsb
mov
push
and
mov
sahf
sub
adc
es
in
in
fmuls
cmp
or
clc
push
pop
in
add
push
ret
lods
sbb
xor
xor
cs
test
fidivrl
pusha
test
int3
cmp
mov
push
int3
cli
insl
jl
movb
xor
add
push
pop
movsb
fsubrl
mov
xchg
je
mov
push
mov
jne
sbb
xor
pop
scas
insl
push
mov
or
rorl
je
pop
mov
cmpsb
sub
mov
ret
sbb
faddl
in
mov
lea
pop
push
data16
scas
mov
and
test
aad
push
pop
push
sarb
jo
je
shlb
inc
pop
arpl
jle
sbb
sbb
mov
xchg
mov
jae
add
push
ret
mov
pop
or
clc
mov
push
pop
incb
ja
sar
nop
and
in
and
cld
addl
push
lcall
loop
test
sbb
bound
add
data16
sahf
inc
or
mov
aaa
clc
push
xor
bound
dec
inc
and
mov
test
or
inc
repnz
outsb
loopne
add
rcl
adc
jmp
adc
and
inc
pop
outsb
jbe
mov
inc
insb
es
cld
popa
loop
pop
jmp
inc
cmp
movb
mov
movsb
pop
adc
mov
push
fists
mov
jo
imul
xor
cld
add
push
ja
add
mov
fs
fimuls
cmp
sti
mov
rcrb
jg
loopne
or
stc
cli
push
mov
add
cld
decb
mov
and
push
dec
add
or
into
das
jl
aad
cmp
lret
and
fadd
jge
pop
push
aam
sub
push
rol
add
or
insl
dec
rorb
push
push
dec
test
loop
add
xor
mov
push
shrb
sub
pop
jae
lea
ds
mov
dec
pop
add
cmp
mov
pusha
cmp
pop
repnz
inc
push
cld
cld
cmpsb
mov
lods
sbb
insb
or
push
int3
aam
ret
je
push
gs
cmp
mov
mov
sarb
stc
mov
fsqrt
adc
push
mov
add
incb
push
test
jo
pushf
notb
push
jge
test
addr16
fs
popa
loopne
les
cld
std
ljmp
imul
mov
rol
lret
aas
shrb
or
test
add
sbb
jle
rorb
jmp
jbe
adc
es
inc
ja
ljmp
lock
mov
add
aaa
lock
sub
add
push
arpl
addb
sbb
or
ljmp
testb
inc
jp
and
push
out
xchg
icebp
shl
mov
sub
xchg
sub
test
out
add
pusha
fs
jo
es
cmp
sbb
push
or
stos
loop
ja
testb
adc
xlat
or
mov
mov
je
sbb
cmp
cmp
in
pop
push
push
inc
iret
je
mov
std
xchg
mov
adc
dec
pop
arpl
inc
int
push
movb
aaa
aas
mov
test
outsl
push
call
xchg
or
sar
xchg
movsb
daa
xchg
add
mov
jge
loopne
fmuls
push
ret
sbb
fs
arpl
xchg
add
je
lock
add
rcl
push
push
ljmp
lods
imul
mov
mov
insl
sbb
push
adc
push
adc
std
out
and
mov
cmp
or
jge
inc
mov
jbe
pop
push
or
push
mov
inc
jo
xor
mov
add
icebp
int3
int3
xchg
push
push
in
mov
mov
or
dec
jns
test
xor
sbb
ret
dec
ficoms
inc
fisttps
int3
cmpsb
mov
sar
divb
jb
pop
add
mulb
testb
cmc
loopne
or
loop
pop
add
push
mov
in
cli
wbinvd
lea
test
add
incl
xchg
inc
sub
mov
inc
out
dec
dec
xor
sbb
or
cld
or
push
sub
fnstcw
mov
or
push
ret
outsb
cmc
pop
fadd
rorb
repz
push
mov
fidivl
test
or
hlt
roll
pop
jb
or
addr16
mov
push
dec
push
push
fs
mov
push
inc
imul
test
pop
mov
enter
mov
scas
pop
insb
jns
or
cmp
mov
loop
sti
mov
dec
shrb
push
mov
mov
loopne
push
jecxz
dec
test
scas
mov
aam
push
xor
mov
mov
sub
cmp
add
and
dec
repnz
data16
pop
es
mov
or
push
sub
cmp
js
xchg
mulb
movsl
outsl
enter
dec
mov
call
es
nop
fcmovnbe
push
std
and
lock
cwtl
sbbb
ljmp
or
add
add
sbb
xor
cmp
adc
aad
push
pop
mov
into
push
push
bnd
js
aaa
loop
and
inc
out
sub
fiadds
cld
adc
or
jl
ret
mov
test
and
adc
out
lcall
mov
push
shrl
add
mov
je
adc
in
nop
pop
ret
test
aam
fs
into
add
lock
nop
adc
inc
xchg
mov
sub
cmp
mov
sbb
mov
mov
push
add
cmpb
mov
inc
sub
loop
pop
xor
add
inc
mulps
cli
sbb
sub
outsb
aaa
cmp
cmp
pop
ja
jo
dec
test
sub
push
inc
clc
popf
sbb
dec
mov
clc
mov
mov
test
or
fucomp
lea
test
insl
mov
jnp
mov
rorb
add
or
inc
js
adc
sarl
add
cmpsb
adc
imul
incl
outsb
test
sub
dec
push
lock
mov
in
xor
clc
arpl
jg
push
mov
sbb
sub
or
inc
jge
adc
and
stc
lcall
adc
jae
jmp
leave
mov
push
or
xchg
jle
and
xor
les
mov
xchg
push
mov
adcb
or
xor
inc
fsts
sub
add
inc
cmp
or
shl
mov
or
xlat
pop
in
loopne
jne
xchg
inc
lock
pop
mov
testb
fidivrs
fs
rol
push
push
adc
mov
mov
movl
sti
mov
out
inc
lret
pop
add
inc
test
jl
add
lock
mov
mov
fadd
add
mov
jne
in
pusha
imul
add
inc
enter
out
xor
sbb
loope
xor
push
mov
pop
call
outsb
stos
fidivrs
mov
push
cld
mov
ret
xor
lret
xor
mov
push
adc
je
mov
outsl
rolb
push
aaa
mov
dec
adc
je
cmpxchg
adc
push
mov
adc
adcb
insl
lods
pop
adc
into
mov
mov
cmc
lret
mov
aam
cmp
xor
shll
add
movl
push
out
clc
jp
mov
and
into
clc
pop
adc
sbb
lock
gs
mov
sub
imul
mov
add
mov
add
adc
enter
aad
sub
int3
subb
fwait
test
xor
jne
daa
jo
into
add
xor
pop
sarb
adc
addb
loopne
mov
mov
ret
mov
mov
repnz
clc
sbb
addb
mov
add
fnsave
or
fcomi
jne
mov
sbb
xor
sbb
insb
push
std
or
cmpsb
out
inc
jp
dec
add
jo
aaa
sarb
aas
dec
dec
fidivs
and
lea
jno
add
mov
decl
incb
incb
sub
jg
fucomip
call
adc
int3
push
aas
fisubs
and
xlat
and
sub
cmp
test
jg
inc
scas
ljmp
out
dec
pushf
cmc
mov
scas
outsb
data16
sub
jg
loop
les
add
cld
fisubs
xchg
cli
push
data16
xchg
mov
xor
inc
fistps
inc
xchg
mov
cld
mov
adc
ret
call
std
dec
sbb
sbb
cs
out
adc
loope
adc
mov
or
pop
sub
push
jno
xor
jo
add
and
ret
add
jmp
decb
jmp
jmp
jecxz
xor
lds
lea
loope
sub
aam
test
push
or
inc
xchg
inc
and
loopne
inc
xchg
pavgw
stos
add
lods
sbb
incb
incl
mov
xchg
or
add
in
and
xor
mov
mov
sbb
clc
pop
andb
pop
ret
mov
mov
push
leave
mov
mov
fidivrl
xchg
and
jae
loopne
inc
loopne
enter
mov
or
mov
adc
movsb
jb
loopnew
xchg
xchg
nop
adc
push
dec
loop
or
std
decb
shlb
cld
movl
scas
in
lcall
mov
and
push
mov
adc
rorb
cmp
jp
push
jbe
sub
jle
rol
mov
mov
cmp
inc
adc
clc
xchg
push
xorl
fdivr
xor
incl
lods
adc
inc
jmp
aam
push
test
mov
rolb
out
je
inc
mov
pusha
mov
mov
jmp
cmp
enter
outsb
add
subb
lret
mov
test
fadds
in
popa
add
mov
fdivrs
push
cmpb
and
mov
push
ret
call
or
and
incb
inc
xchg
fcom
ljmp
cs
sbb
or
data16
sbb
stos
adc
sbb
sarb
icebp
add
andl
add
les
lock
push
mov
sti
xchg
lea
decl
data16
sarb
sbbl
add
and
or
mov
sub
ja
lcall
mov
lea
rorb
mov
outsl
insl
push
mov
add
dec
jb
sbbb
lea
hlt
stc
orl
out
movsb
inc
hlt
sub
adc
fsqrt
cs
inc
pop
lock
decb
add
add
cmp
cltd
cwtl
xchg
std
mov
add
call
push
push
js
das
or
jb
inc
lcall
mov
icebp
sbb
pusha
and
add
mov
ja
int
jmp
mov
jmp
enter
xor
mov
pop
mov
cli
dec
mov
loopne
adc
xorl
cli
mov
fstpl
inc
push
lea
cmpsb
mov
je
dec
pop
lock
inc
int3
mov
lds
imul
outsb
cmp
scas
jle
xorl
insb
inc
aam
bound
call
push
and
lock
rcl
xchg
js
rclb
loop
push
std
rolb
add
fistps
pushf
add
call
outsl
or
fs
pusha
pop
ljmp
push
mov
movq
fucomi
pop
es
fmull
lahf
jb
mov
push
adc
int3
clc
mov
or
lret
jbe
data16
add
push
les
int3
fs
or
loope
das
add
xor
sub
sbb
pop
push
xor
pop
gs
ret
cmp
loopne
mul
sbb
sahf
inc
outsb
push
add
decb
push
xor
rclb
xor
or
mov
sbb
inc
fs
push
enter
mov
je
pop
jl
sbb
mov
iret
rorb
jbe
jbe
pop
fmull
fdivl
xchg
mov
pop
push
icebp
cmp
mov
pushf
mov
or
loopne
loopne
leave
or
inc
das
mov
push
andb
push
ss
and
bound
sbb
mov
and
in
call
and
int3
mov
stos
adcb
cmp
ret
ret
adc
loopne
xlat
ss
pop
ljmp
mov
cmp
cmp
mov
sub
repz
push
pop
imul
lea
fisttpll
jl
pop
rcrl
rorb
inc
aad
dec
cmpsb
jns
stos
out
xchg
rorl
orl
dec
adcb
stos
insl
mov
push
push
lea
mov
hlt
cmp
cwtl
movsb
push
dec
movsl
out
cmp
jg
jbe
jp
das
fdivs
and
jo
imul
sbb
aam
daa
mov
mov
into
decl
cmp
lods
dec
popf
add
push
gs
data16
mov
jle
mov
es
mov
adc
aam
jbe
mov
mov
sarb
insb
push
mov
jle
jbe
int3
mov
push
dec
hlt
mov
cmp
xor
mov
jbe
fs
insb
push
pop
sbb
mov
cli
mov
fbld
lea
dec
add
xchg
mov
pop
sbb
jle
addr16
cmp
or
lods
adc
add
mov
pop
jne
das
cs
push
aam
add
cmp
push
push
fistpl
add
push
mov
sub
stc
cmp
push
mov
imul
gs
leave
inc
add
out
movsl
sub
fcom
inc
and
mov
adcl
hlt
cmc
mov
cld
sarl
test
pop
mov
mov
int3
fadds
dec
mov
dec
push
or
mov
jb
movsb
inc
push
sbb
lea
inc
push
jl
mov
gs
rolb
add
jbe
dec
xor
add
inc
in
das
jo
mov
add
cmp
push
std
mov
mov
aam
subb
stos
push
aad
fs
adc
popf
xorl
sbb
jle
add
and
dec
mov
pushl
mov
jmp
sbb
aas
sbbl
fcoms
lock
in
bound
jae
jge
outsb
push
or
ret
loope
dec
push
pop
mov
mov
or
or
add
int3
jne
add
sbb
cli
xor
mov
call
xor
push
jb
shlb
sub
mov
and
xor
pushl
call
cmp
sbb
roll
mov
jge
std
inc
and
pusha
repz
jmp
ds
int
sahf
out
push
pop
pop
jo
push
pop
call
subb
or
xchg
shlb
out
test
rorl
add
or
je
mov
adc
mov
hlt
or
imul
enter
mov
in
aaa
pop
sub
insb
mov
ret
jge
cmp
push
pop
lahf
mov
lcall
dec
xor
push
push
or
push
je
push
sahf
adc
je
lock
inc
xchg
xchg
mov
call
adc
loopne
mov
addb
js
jl
mov
mov
bts
jmp
sbb
lods
or
in
push
mov
lods
push
jecxz
mov
rorb
mov
sub
leave
cmp
aad
test
mov
dec
mov
fsubs
mov
lcall
aam
adc
test
rolb
add
push
cmp
and
jge
rorl
dec
push
jb
dec
add
enter
test
mov
daa
inc
mov
outsb
cmp
mov
std
test
in
aas
lock
pop
cmp
xor
push
adc
fs
stc
mov
out
js
daa
lea
js
sub
adc
ljmp
jne
push
add
xchg
xchg
scas
adc
xchg
lock
clc
cmp
loopne
rolb
mov
add
push
leave
sar
loope
mov
testb
mov
arpl
std
mov
push
jb
es
cmpsl
scas
shlb
adc
push
xor
xchg
int3
orl
and
push
loop
cld
rcrb
xchg
xchg
or
repz
lea
addl
and
iret
arpl
lods
add
stos
aas
clc
push
jl
fs
push
fs
cli
adc
lret
daa
mov
das
rcll
ret
adc
jae
mov
clc
fs
push
push
repz
push
aam
mov
push
sbb
inc
xorl
adc
scas
loopne
loope
adc
mov
mov
add
dec
pusha
mov
push
call
push
cmp
mov
cli
fldl
adc
jbe
gs
add
test
std
ret
shlb
push
dec
mov
xor
inc
or
fwait
leave
jne
cmp
xchg
lcall
fs
and
hlt
or
out
pop
fsubrs
call
test
decl
adc
ret
rclb
inc
lea
pand
sti
pop
aam
sti
data16
call
dec
sbb
ds
or
pop
inc
loopne
rorb
test
xor
call
push
ffreep
sbb
test
xor
not
cmp
sub
adcl
sarb
push
data16
inc
ficoms
and
inc
xor
push
std
insb
sub
cmpsb
and
loop
fs
or
fisubl
clc
cmp
dec
pop
ja
or
cmp
orl
fwait
inc
dec
pop
rcrl
inc
loopne
and
movsb
cmp
and
inc
or
add
fdivr
inc
jecxz
and
push
mov
push
or
test
push
push
add
loopne
push
test
mov
insl
jnp
add
jb
add
cs
inc
outsl
fstpt
rol
cmpl
loopne
clc
sbb
orb
imul
es
cmpsl
mov
shl
or
sub
test
push
cmp
sub
shll
cmp
loop
clc
inc
adc
mov
ret
add
sbb
xorl
xor
ret
pop
pop
jge
sbb
hlt
int3
jge
inc
or
data16
popa
aam
jge
mov
mov
in
adc
lea
mov
adc
jne
sub
cld
cmp
outsb
push
sub
cmc
aaa
xchg
notb
xchg
clc
dec
cmpsb
jmp
mov
adc
jne
pop
stc
icebp
jmp
hlt
xchg
ljmp
lods
pop
sarb
add
test
orl
xor
mov
mov
push
rorb
test
pop
mov
fsubs
cmc
lcall
repz
mov
adc
push
fdiv
ljmp
inc
hlt
xor
icebp
mov
outsl
jae
test
add
hlt
mov
daa
notb
jb
rcll
push
cmpsb
sbb
lods
sbb
lock
sbb
add
and
sub
mov
data16
jo
adc
inc
imulb
xchg
shlb
aaa
repnz
sbb
push
xor
inc
push
lcall
mov
int3
clc
pop
pop
pop
jl
push
and
push
fists
les
and
aas
pop
pop
push
js
push
cli
filds
incl
mov
inc
rolb
push
add
xchg
inc
sub
jecxz
call
aaa
aam
in
mov
call
dec
mov
or
ljmp
sub
aad
xor
lods
or
sarb
push
and
xor
imul
movsb
push
pop
idiv
lahf
cwtl
ret
imulb
xor
adc
mov
stos
in
mov
mov
mov
dec
je
lods
fidivs
jmp
push
inc
leave
pop
or
in
mov
and
mov
mov
addr16
add
addl
je
popf
hlt
mov
lods
pmuludq
push
insb
xchg
lock
sti
loopne
xor
cmp
outsl
popf
lods
xor
int
cwtl
adc
or
sub
lock
or
inc
insb
inc
jo
lods
and
push
pusha
push
sbb
or
les
mov
adc
data16
xor
ljmp
les
js
imul
icebp
or
sti
aaa
sub
add
shrb
add
mov
in
or
test
ret
push
aam
xchg
push
aam
in
sub
xor
rolb
mov
xor
ljmp
nop
jne
jmp
adc
les
sarl
daa
jbe
mov
pop
lcall
outsl
xchg
fdivrp
std
daa
jne
ficoml
and
aad
mov
scas
mulb
in
xor
je
les
lods
imul
jno
push
sbb
fisttpl
data16
mov
jge
jno
adc
fadds
negl
inc
mov
push
shl
or
fs
ja
or
xchg
sarl
jno
incl
pop
test
insl
fstpt
orb
push
jge
pusha
cli
je
xor
jg
inc
std
cmp
into
jae
call
mov
jge
mov
shlb
rcr
cs
out
or
pop
sub
sbb
pop
mov
mov
mov
ds
jl
gs
in
jne
push
adc
arpl
jae
popf
add
jo
inc
mov
pop
test
push
jge
push
adc
scas
xor
add
mov
popa
mov
add
push
rclb
add
or
test
mov
ficoms
and
pop
or
inc
mov
mov
or
inc
push
mov
lea
dec
push
ficoms
mov
push
std
sbb
nop
out
loop
or
add
scas
inc
mov
bound
scas
and
pusha
push
mov
xchg
je
dec
jno
and
push
je
repnz
imul
cs
outsb
scas
lock
pop
les
data16
add
xchg
mov
pop
lds
or
dec
jb
out
lock
cmp
clc
inc
add
cwtl
rcr
das
cld
mov
outsl
lcall
adc
ret
cmpl
push
enter
xor
test
pop
out
jae
push
add
test
in
adc
in
into
sub
mov
sbb
repnz
cmp
testb
loop
push
pop
cmp
push
xor
incl
lea
pusha
rolb
sarb
mov
add
add
in
push
cmp
js
int3
xor
mov
add
mov
xor
xchg
rcll
sbb
push
push
daa
mov
hlt
enter
gs
je
int3
sub
sbb
int
pop
dec
adc
push
xchg
int3
jmp
addb
cmp
adc
call
pusha
shlb
aam
xor
and
xchg
cli
or
xchg
sbbb
mov
and
call
cmp
int3
cmpb
jno
mov
push
xchg
add
pop
ds
clc
xor
push
push
call
sub
fcoms
je
in
outsl
mov
clc
and
mov
lcall
adc
nop
sbb
inc
test
jmp
add
std
fsubp
test
sbb
add
adc
mov
push
mov
data16
movsl
lock
rolb
fadds
mov
and
mov
gs
jae
add
sub
inc
iret
test
adc
xor
push
jg
lea
aas
cmpps
pop
sub
popa
mov
scas
loopne
pop
sub
jp
jmp
add
xor
push
xor
mov
push
jne
jne
adc
loopne
cmp
cmp
pop
add
mov
imul
fdivs
pop
mov
ds
nop
add
stc
clc
mov
or
pop
mov
inc
movsb
adc
fcomps
push
pop
add
cli
add
add
movsb
dec
pusha
dec
addr16
int3
decb
clc
outsl
adc
mov
inc
sub
loope
cli
xchg
out
int3
sbb
cwtl
fdivl
pop
cli
cld
pop
mov
insb
call
or
mov
ss
cmp
or
mov
icebp
mov
push
xchg
clc
ljmp
xchg
pusha
dec
gs
rol
push
sbb
sbbl
pusha
xchg
and
sbb
add
inc
mov
test
call
adc
xor
push
inc
jnp
pop
mov
arpl
and
testb
push
js
dec
mov
out
xor
enter
xchg
movsb
add
mov
loope
call
mov
mov
dec
add
push
enter
ret
mov
mov
jge
fidivl
lea
mov
pop
int3
ror
or
pop
adc
icebp
insb
pop
test
xchg
push
aas
arpl
add
cmp
outsb
or
lea
jp
fimull
xor
fdivr
mov
mov
add
adc
push
nop
negl
xor
sbbb
dec
mov
je
pop
in
adc
shrl
inc
push
jmp
pop
test
inc
pushf
mov
shll
lcall
test
jb
and
mov
ret
push
xor
cmp
mov
and
and
add
int3
sar
cmp
mov
cld
cmp
adc
lock
scas
sti
call
lods
fs
dec
mov
mov
sbb
pop
or
rcrb
pop
lcall
pop
movl
push
pop
fs
pop
into
xchg
jo
jbe
pop
test
cmp
das
mov
mov
scas
pusha
ret
cmp
push
mov
mov
add
shll
mov
adc
push
add
call
mov
push
cli
sahf
mov
mov
fcomps
and
inc
bound
es
mov
xor
shl
mov
in
or
addr16
jb
pop
es
jp
cmpb
dec
rcl
sub
incb
or
cmp
pop
inc
les
test
jae
sub
pop
nop
cmp
int3
pop
push
add
test
and
movl
aad
loop
push
xorl
inc
sti
fldl
lcall
push
repz
roll
dec
mov
push
es
aam
cmp
mov
sbb
adc
mov
rclb
inc
mov
adc
pop
lea
js
mov
test
cmc
pop
mov
jo
and
push
or
xchg
mov
jae
jg
add
cs
es
outsb
std
add
adcb
push
lock
je
xor
jne
je
js
in
push
fdivrl
push
lods
or
and
push
sbb
gs
cli
loope
test
cwtl
mov
lret
in
cmp
fistl
push
rol
aad
std
mov
xchg
sar
lret
rol
jne
pop
push
lods
icebp
sbb
ret
dec
je
enter
mov
mov
mov
int3
test
or
testb
adc
les
push
int3
adc
fiadds
pop
dec
loop
add
je
pop
out
pop
icebp
pop
arpl
xor
icebp
jnp
sbb
les
mov
push
repnz
mov
sub
sbb
test
stos
test
ds
ljmp
jo
jb
push
inc
or
nopl
stos
std
push
pop
loope
pusha
cltd
fnsave
int3
dec
subl
push
pop
pop
shlb
fsubrl
add
xchg
push
push
dec
push
dec
call
shl
pushf
xor
rcl
aam
ss
push
sbb
sbb
in
add
sub
and
dec
lods
sets
lcall
cld
les
or
pop
push
ror
int3
lods
adc
push
inc
inc
enter
jmp
dec
or
add
adcb
mov
es
push
hlt
add
pmuludq
shll
dec
fsubrs
mov
outsb
add
inc
pop
push
call
outsb
push
daa
jmp
mov
cs
push
adc
fdivr
sub
sti
mov
sbb
addb
cmp
pusha
loop
decb
psubusw
adc
mov
cmc
sbb
or
call
pop
pop
or
and
ret
cs
sarb
pushl
mov
pop
out
stos
sbb
imul
adc
inc
std
std
mov
dec
cmp
call
scas
and
inc
aaa
pushl
insb
mov
add
call
mov
add
idiv
popa
flds
mov
outsb
in
dec
inc
xor
rclb
mov
xor
add
push
pop
mov
addr16
sbbb
fldt
sbb
data16
int3
testb
pop
mov
pop
popa
cmp
sti
inc
pop
fcoml
mov
imul
sbb
jle
dec
cmpsb
ss
or
insb
cld
pop
push
mov
jns
xchg
mov
xchg
inc
insl
push
std
add
lcall
and
lods
rclb
int3
in
add
adc
clc
xor
out
jg
jmp
fmull
xchg
test
cmp
cmpb
mov
orb
dec
hlt
loopne
ret
push
pop
fs
add
pop
mov
mov
mov
and
inc
cli
orl
mov
adc
inc
mov
push
pop
loopne
adc
dec
push
sar
jmp
pop
add
fs
aam
mov
mov
js
lcall
test
imul
lret
or
loop
in
sbb
js
jb
jae
mov
xor
shrw
xor
adc
leave
enter
push
fadd
fdiv
lret
add
int3
or
hlt
es
lret
or
mov
cmp
cli
stos
mov
scas
push
push
sbb
or
pop
lahf
outsb
jo
rolb
pop
or
push
inc
in
addr16
cli
adc
mov
adc
es
and
jp
in
ljmp
sbb
or
call
push
outsl
mov
mov
std
rorb
cmp
pusha
arpl
out
hlt
add
add
cmp
incl
fs
pop
outsl
jle
inc
xchg
add
nop
and
pop
pop
xor
imul
jne
mov
sbb
add
adc
mov
test
add
push
or
add
dec
mov
dec
les
cld
push
push
shl
ljmp
outsb
mov
inc
add
xchg
hlt
lea
je
pop
je
decl
or
and
les
pop
xchg
cmp
inc
xor
andl
or
pop
aam
pop
nop
mov
je
jne
iret
mov
mov
mov
add
ret
test
mov
pusha
bound
jb
in
inc
adc
pop
out
divb
lea
inc
std
fs
mov
jno
cld
pop
or
push
add
call
push
jmp
add
aaa
js
push
cmp
dec
daa
push
inc
or
and
ret
or
jl
jne
dec
push
jo
lcall
jmp
test
data16
and
popa
add
sbb
icebp
cmc
nop
out
orw
push
ljmp
pop
bound
cltd
jl
sbb
int3
rol
loopne
icebp
int3
daa
mov
aad
pop
push
sbb
idiv
jbe
cmp
or
mov
xor
arpl
push
shrb
jbe
and
pop
sbb
push
scas
movsl
mov
ds
data16
test
mov
mov
addb
clc
xor
push
jbe
loope
jne
jbe
jmp
inc
stos
mov
cmpsb
das
pusha
ret
in
push
incl
jp
repz
push
and
inc
lods
mov
or
cli
mov
push
mov
ficoms
rclb
cmp
mov
scas
outsb
inc
or
loopne
rcrl
paddw
sbb
inc
dec
xor
lods
jbe
icebp
add
imul
cmp
loope
or
mov
jle
mov
add
xchg
mov
pop
xchg
sbb
outsb
push
icebp
addr16
rcrl
mov
in
cmc
pop
inc
hlt
cli
add
adcl
in
xchg
sbb
dec
aad
aam
xlat
add
loopne
jl
mov
push
std
pop
sub
scas
bound
lea
push
ret
xchg
xchg
cmp
and
or
daa
test
shlb
ds
test
add
test
cmpsl
ret
shr
dec
mov
mov
pusha
push
call
push
add
aam
inc
mov
ret
fldenv
pop
and
je
repnz
fs
sub
push
sbb
data16
insl
pop
jge
imul
jle
fldl
out
sbb
add
cmp
xor
mov
les
or
fistpl
mov
sbb
push
in
repz
cmp
insb
lret
inc
push
add
adc
pop
mov
pop
sub
push
and
adc
cmp
js
push
sti
adc
shll
ljmp
movsb
xor
cld
call
mov
cwtl
push
jo
hlt
add
mov
mov
jne
test
lock
sbb
sub
mov
aaa
insb
test
neg
xor
sub
lret
jg
mov
add
fimuls
add
sbb
std
divl
sub
xorb
data16
inc
jle
mov
push
fwait
gs
push
adc
dec
out
add
add
jl
pause
es
arpl
ret
jno
mov
xor
sub
mov
pop
roll
fildll
push
pusha
jns
lcall
or
je
xor
adc
jb
inc
pop
rcl
push
push
sub
fidivrs
hlt
and
lock
mov
and
loopne
js
jp
pop
lock
xor
test
push
jmp
push
sub
jp
adc
pushw
add
inc
inc
es
add
xchg
dec
dec
push
test
cmp
xor
sub
out
fadd
clc
push
ja
xor
cmc
adc
adc
cmc
lret
cli
jnp
add
out
cli
inc
push
or
sbb
dec
data16
sbb
xor
cmpsb
mov
inc
add
dec
add
dec
pop
dec
mov
jl
shl
jne
mov
aas
jl
pop
push
jle
add
pop
scas
lret
adc
vinsertf32x4
cmp
scas
push
adcb
ret
xchg
xchg
loopne
xor
or
shrb
fadd
rol
or
jo
stc
out
shlb
or
pop
mov
mov
sbbl
xor
fadds
sbb
cmp
loopne
mov
mov
xor
out
ret
or
jb
dec
pop
cmpb
fcomps
gs
nop
mov
mov
cs
xor
fstl
test
and
ss
jge
mov
mov
ljmp
test
loop
xchg
or
push
push
pusha
pop
and
sub
pop
jge
andb
dec
or
push
loop
pop
add
cmp
pop
in
sbb
add
or
clc
add
and
pushf
pop
mov
lods
mov
mov
incl
cld
cmp
mov
bound
cmp
xchg
add
cmc
push
push
xor
int3
push
add
push
mov
push
adc
test
subl
int3
jecxz
jp
or
icebp
add
icebp
fcoms
or
adc
mov
push
cmp
lds
loop
lea
popa
cmpsb
push
mov
je
fsubl
and
je
fdivp
loope
test
pop
in
dec
mov
add
ljmp
cmp
ret
adc
inc
insb
aas
jmp
add
push
fs
jmp
push
loope
adc
rorl
outsl
es
cmp
mov
sub
adc
or
push
jo
les
or
and
push
clc
shl
outsl
ljmp
or
mov
sbb
adc
or
pop
jge
dec
nop
mov
xchg
or
xlat
pop
outsl
mov
push
xor
push
ret
adc
and
sub
sar
pop
pop
stos
mov
sub
mov
aaa
out
pop
fs
and
inc
push
jnp
fnstenv
cwtl
pop
call
mov
movsb
bound
clc
push
inc
mov
mov
or
cs
add
add
dec
outsw
push
fdivr
or
cld
cmp
jno
push
cld
in
jb
js
cmp
or
add
push
mov
dec
ret
jle
lahf
aam
js
enter
out
cmp
test
pop
ficoml
xor
in
jmp
test
nop
cmp
xor
std
and
nop
ss
in
shlb
xchg
dec
xor
test
mov
mov
loop
ret
push
in
imul
out
shr
loop
sub
jne
jle
shr
or
mov
int
int3
xor
sbb
or
sub
add
or
movsl
rorb
aaa
cmp
and
xchg
fs
std
hlt
or
mov
ret
mov
inc
in
outsb
mov
dec
xor
iret
shlb
dec
aaa
shrb
mov
inc
int3
sahf
movsb
sbb
add
fwait
pushl
inc
push
and
xor
ret
sub
dec
call
mov
mov
jg
ss
or
incb
ror
in
scas
mov
inc
add
push
insb
nop
les
repz
xchg
and
int3
call
sti
push
dec
pop
pusha
inc
mov
js
sub
es
add
mov
test
in
ds
int
adc
push
imul
test
pop
mov
loope
pop
shrl
movsb
sbb
test
cmp
xor
enter
and
push
jne
mov
mov
roll
stos
data16
sgdtl
mov
sbb
addl
push
test
inc
add
jl
push
aam
add
or
aad
stos
and
je
rcrb
push
push
jg
orl
dec
add
js
sub
push
outsl
lock
inc
std
call
xor
dec
add
fmull
imul
js
push
scas
add
mov
lds
xchg
pusha
sbbl
adc
mov
les
std
adc
outsb
nop
xchg
dec
shlb
xchg
je
cmp
push
push
shlb
lock
or
push
lcall
addb
push
cmp
int3
add
je
add
cmp
lret
jle
sbb
mov
imul
das
xchg
mov
dec
adc
sub
lock
pop
mov
dec
inc
aad
xor
sub
jle
adc
rclb
je
cli
test
jne
xchg
lret
mov
mov
repnz
adc
jb
jle
push
fs
sbb
push
mov
or
stos
adc
add
cld
ja
xchg
addb
ljmp
sar
adc
mov
in
pop
xor
loop
out
ds
imul
mov
mov
aas
rorl
daa
mov
pop
mov
outsb
mov
and
cli
adc
lret
ljmp
or
inc
in
mov
sub
xchg
data16
or
cmpsl
incl
test
rol
xchg
push
push
adc
mov
inc
jae
jmp
test
and
repnz
adc
insl
mov
inc
arpl
and
les
xor
aam
pop
jb
jmp
outsl
push
mov
xchg
lea
adc
mov
clc
and
mov
test
ud0
mov
lock
xor
add
in
xchg
inc
clc
xchg
mov
inc
in
ds
ljmp
aam
adc
hlt
scas
jl
xor
inc
or
and
ljmp
or
push
stos
jne
jne
xchg
jne
les
popa
jg
adc
test
test
aas
ret
dec
pop
mov
nop
or
sbb
mov
pusha
movb
sub
adc
add
mov
cwtl
dec
das
cld
push
xor
pusha
push
mov
inc
testb
add
call
and
int3
mov
stos
push
mov
mov
or
dec
test
jae
or
inc
jl
xchg
loop
addb
frndint
cs
sub
divb
xchg
adc
shrb
ljmp
cmpsb
cmpsl
jl
lea
hlt
inc
cmpsl
aam
into
add
mov
inc
orl
test
outsb
xor
lds
mov
add
ljmp
pushf
jne
pop
insl
stos
xchg
mov
mov
out
imul
loopne
popa
je
or
mov
push
lret
rorl
xchg
mov
adc
cmp
inc
loopne
nop
mov
shrb
fdivl
inc
mov
mov
add
jecxz
add
mov
ja
adc
dec
jmp
cld
sub
aaa
fsubrs
xchg
xor
sub
daa
or
mov
sbb
inc
imul
push
mov
add
dec
xor
test
cmp
cmp
sub
mov
mov
push
adc
in
loope
lods
clc
or
js
outsb
clc
test
addb
je
push
in
nop
in
int3
cmpsb
leave
pop
inc
pop
lcall
int3
xor
hlt
rol
fdivs
mov
aam
aaa
mov
push
push
mov
dec
xchg
les
lcall
mov
lea
lahf
dec
push
cwtl
and
xchg
jbe
adc
xchg
mov
loopne
inc
inc
hlt
dec
ret
push
xchg
cmc
pop
addl
test
les
inc
push
adc
movsb
adc
jecxz
push
insb
ficoml
add
or
mov
mov
in
inc
insb
lods
clc
stos
mov
das
mov
adc
dec
or
jmp
inc
rcrl
cmp
push
jmp
add
bound
mov
sub
mov
add
mov
push
pusha
dec
sti
ror
nop
fcomip
bound
dec
inc
cmp
sbb
xorl
push
dec
adc
loope
mov
inc
loopne
jbe
push
xor
adc
mov
clc
fs
pinsrw
dec
push
popa
lcall
lret
fidivl
add
insl
aam
cmc
cwtl
inc
insl
inc
pop
inc
std
add
add
int3
int3
ret
jl
jecxz
mov
push
mov
jo,pt
pop
cld
mov
and
in
pop
mov
add
nop
and
test
dec
outsb
std
testb
into
jmp
push
ljmp
movb
sub
mov
cmp
dec
inc
ret
lea
inc
lahf
fidivrs
add
imul
mov
pop
out
pusha
out
cmp
pop
lea
or
and
mov
cs
mov
jmp
rclb
fs
lea
pop
sub
in
xchg
js
or
popf
test
ret
push
mov
sub
int3
dec
xor
push
sarb
lahf
push
sbb
loop
pop
sub
push
and
sub
mov
lock
mov
addb
lock
sbb
clc
std
or
xor
jb
rolb
push
dec
scas
mov
mov
cmpl
je
pop
js
clc
inc
mov
pushl
cmc
add
call
xor
push
mov
jl
outsl
jns
mov
fisttpll
int3
in
je
ret
sbb
add
call
icebp
jb
xlat
jne
adcb
and
je
sbb
inc
xchg
xorb
rorl
in
add
gs
notl
or
testb
dec
shl
shll
add
cmp
or
les
mov
lods
outsb
adc
dec
and
adc
mov
call
sub
ss
pop
or
mov
mov
and
jne
pop
mov
dec
push
insb
push
xor
punpcklwd
xorps
das
faddp
aas
in
fildl
dec
out
fadds
pop
cmp
fmulp
jle
leave
mov
inc
clc
scas
out
hlt
lcall
rcl
sub
or
sub
inc
in
jle
sbb
and
sbb
add
enter
outsb
mov
cs
fnstenv
mov
sub
push
push
pusha
loopne
sub
inc
cld
xchg
and
out
cmpl
js
add
loopne
ret
pop
push
push
std
cmp
push
push
ret
or
loop
dec
sbb
int3
data16
xchg
mov
push
add
add
push
clc
pop
push
mov
add
push
loopew
icebp
subb
loop
lcall
fwait
leave
push
push
imulb
push
nop
imul
fiadds
mov
es
cmp
pop
fisubs
inc
clc
jmp
fsubp
gs
xor
pushl
cmp
rolb
pop
popf
movsb
pop
ljmp
movsb
cmp
orb
xchg
jnp
jb
pop
pop
mov
in
ficomps
pop
pop
jp
movsb
faddp
ds
je
stc
dec
mov
outsl
outsl
cwtl
dec
mov
mov
sbb
mov
push
gs
testb
xchg
in
shrl
jo
bnd
jne
add
popa
add
and
mov
jl
int3
pop
enter
orb
sbb
and
shll
icebp
xchg
mov
jmp
push
lea
inc
inc
adc
sub
mov
or
sar
jbe
int3
cld
add
cmpsb
push
idiv
mov
pop
dec
pushl
data16
ja
adc
add
and
jmp
lods
lea
bound
mov
rcrb
popf
add
mov
mov
mov
test
in
xchg
push
xlat
je
add
mov
jne
sub
icebp
mov
mov
fwait
dec
dec
inc
push
cli
push
add
int3
add
mov
mov
push
jle
call
mov
sub
pop
dec
push
std
push
mov
and
cmp
fdiv
ret
sbb
jnp
jmp
add
lock
adc
push
sbb
gs
inc
aaa
cltd
jp
adc
loopne
nop
jp
ljmp
cmpsl
data16
rorl
incl
int3
or
cld
addl
inc
mov
into
xor
or
fs
aaa
ss
stos
and
adc
addr16
sahf
xor
push
and
faddl
out
ret
cmp
xchg
inc
call
pop
inc
clc
sub
popf
or
movb
inc
xchg
inc
jae
mov
mov
mov
dec
clc
loop
or
xor
sub
adcb
fsubrl
ret
mov
jo
sub
pop
adcl
mov
push
pusha
cmp
pusha
cmpl
xchg
cld
dec
adcl
mov
test
andb
fiadds
fisttpl
mov
jne
push
mov
mov
js
mov
push
add
addb
testb
clc
stos
pusha
mov
inc
lock
clc
add
shlb
add
int
adc
add
pop
test
test
push
xor
std
or
mov
jnp
pusha
cmp
insl
leave
jmp
mov
decl
and
push
lock
cmp
xchg
aaa
mov
and
cmp
outsb
jne
cmp
push
add
lds
push
jo
pop
ds
push
xor
fildll
xor
int3
jmp
mov
shl
rorb
inc
ljmp
cs
xor
ds
push
lods
adc
adc
sarb
add
add
mov
pop
in
lock
std
imul
sub
aam
enter
hlt
jb
adc
and
mov
mov
fisubrs
add
sub
add
test
mov
push
cld
je
ret
xor
push
clc
out
addb
mov
dec
or
cwtl
add
stos
aad
bound
jb
in
js
inc
in
push
lock
aam
xchg
les
mov
pop
shlb
stc
fsubs
mov
fadd
add
mov
sbb
ret
bound
mov
call
push
rolb
scas
add
call
add
arpl
out
mov
lcall
mov
adcb
fs
inc
or
daa
lret
sub
dec
into
pop
ss
mov
jne,pt
xor
js
adc
dec
cmpxchg
notl
push
push
cmp
and
pusha
out
fdivrp
movsl
or
mov
incb
shll
loope
jge
popa
xor
subb
mov
rol
dec
or
cs
inc
inc
sub
int3
decb
fldl
xor
shlb
test
insb
add
sub
pop
push
imul
mov
push
cltd
rcl
bnd
add
push
sbb
fldl
or
xor
call
cmp
add
or
pop
jmp
test
lds
shrl
add
shl
mov
sub
sbb
stc
cmp
sbb
shrb
mov
pop
jmp
or
ljmp
pop
clc
xor
scas
scas
xchg
xor
sub
sub
ss
mov
fistpl
lea
outsl
or
jnp
mov
js
fs
sti
mov
xor
xchg
fimull
ds
hlt
aad
add
pop
or
mov
xchg
fidivrs
pop
sbb
dec
and
pop
sub
inc
mov
mov
cli
int3
cs
cmpb
lcallw
js
icebp
pop
pop
xchg
int3
orb
popa
roll
add
cmp
cmp
int
mov
cli
cmp
push
sahf
sub
pushw
xor
and
jl
cmp
sahf
or
pop
sahf
inc
adc
push
add
ss
xchg
pop
add
or
loopne
xchg
push
clc
cld
int3
push
test
leave
mov
pop
mov
out
in
call
cmp
fcoms
pushl
mov
push
jp
sub
shr
cmc
sbb
cmp
xchg
pop
sar
outsl
je
lock
les
test
jmp
ljmp
lret
add
adc
sti
push
pop
sub
icebp
mov
mov
pop
je
mov
testl
loope
add
lret
mov
push
push
push
mov
lcall
int3
pop
pop
inc
clc
cmp
add
add
mov
and
mov
pop
sbb
rolb
stos
mov
dec
add
and
call
mov
push
out
outsl
add
jp
add
add
xchg
in
push
or
jle
inc
enter
jecxz
sub
je
mov
enter
add
ljmp
rol
push
push
imul
add
subb
or
cmpsb
out
cmp
add
pushf
enter
add
and
lret
cmp
mov
hlt
movsb
fadds
clc
testb
xor
fcoms
jbe
sarb
nop
push
push
pop
push
sti
xor
pop
sub
loope
add
and
and
mov
jl
cmp
or
vmwrite
mov
mov
inc
pop
cmpsb
flds
pop
ret
jo
out
mov
fmull
adc
or
xor
test
dec
xchg
push
js
dec
or
xchg
push
push
pop
mov
jl
sti
sbb
sar
std
cli
std
outsb
add
les
push
xor
lock
push
cmp
nop
and
inc
insb
stos
test
add
and
pop
pusha
pop
add
mov
cs
ret
sarb
mov
jmp
add
mov
scas
mov
push
push
push
test
les
movsb
pushf
mov
dec
add
cmp
insl
jge
js
int3
insb
out
dec
lea
xor
mov
adc
or
push
out
add
push
add
repz
inc
loop
pop
imul
jge
or
xor
cli
dec
rolb
rcll
push
imul
insb
ret
arpl
mov
or
data16
hlt
aas
mov
push
push
inc
call
push
push
pushf
xchg
into
xchg
loop
insl
sub
sub
lods
cmpxchg
je
add
inc
jae
push
add
inc
in
mov
or
cmp
mov
or
ss
jne
in
fmul
sbb
mov
data16
or
mov
pop
adc
sbb
decl
outsb
push
movsb
jns
in
js
lock
cmp
call
push
mov
nop
pop
pop
cli
add
pusha
je
dec
ret
push
jo
jb
mov
test
ret
lret
jle
pop
cli
lock
mov
repnz
into
fimuls
xorl
loopne
lods
fcmovb
test
test
dec
add
jbe
mov
call
pushf
fistpl
mov
shlb
daa
popa
and
and
mov
xchg
push
xlat
insl
mov
jle
sbb
jns
xchg
jmp
divb
inc
and
push
mov
cmp
fcompl
decb
sti
mov
mov
push
mov
cwtl
pop
int3
or
mov
pop
jo
cmp
push
xchg
cmpsb
int3
push
int3
adc
xlat
insb
sub
cmp
adc
shr
fiadds
nop
gs
push
or
push
xchg
xchg
mov
lods
and
or
ficoms
push
mov
aam
shlb
js
dec
ds
mov
or
mov
loop
nop
test
decl
push
add
fisttpl
sbb
cmp
jo
and
add
push
inc
call
add
nop
push
xchg
test
push
or
adc
outsb
mov
inc
out
insl
shll
sub
mov
mov
pop
dec
cld
gs
push
std
inc
jne
cld
dec
stc
loopne
pushl
bound
ret
add
jns,pt
jl
daa
mov
int3
filds
dec
mov
stos
pop
cmp
mov
fdivrl
cs
clc
inc
dec
cs
xorl
or
mov
cld
mov
imul
out
mov
rcrl
and
push
mov
add
pop
cs
shrl
adc
mov
js
xchg
cmp
or
lret
icebp
pop
mov
inc
cmp
std
cs
lea
bound
pop
sahf
enter
cwtl
jle
lret
sbbl
adc
enter
fs
mov
es
mov
je
inc
push
xor
xchg
lods
sub
or
mov
scas
mov
push
xchg
push
test
aad
jbe
pop
mov
gs
pop
std
dec
adc
test
cmp
cmp
push
add
jo
jmp
fildl
int3
push
pop
add
add
fidivl
jge
jnp
sub
mov
popf
rolb
in
ljmp
mov
inc
add
ret
loopne
mov
stos
mov
inc
dec
leave
shl
stos
data16
pop
cwtl
test
popa
insb
adc
sbb
shrl
pop
ret
push
pop
orl
sarl
cmpsb
push
xor
xor
and
ror
bound
lods
stos
inc
push
cli
push
insb
sar
push
push
pusha
mov
xchg
push
sub
xor
add
add
testb
jmp
ds
mov
mov
add
adc
mov
jl
ljmp
and
mov
test
mov
cmc
pusha
cld
fnstenv
lods
imul
pop
mov
dec
mov
and
mov
mov
ds
jmp
sub
pushf
aaa
or
test
mov
pusha
jb
pop
and
pop
hlt
pusha
jl
adc
jbe
push
mov
cld
rcl
or
outsb
and
loop
test
imul
xor
lea
test
je
sbb
inc
add
mov
lea
adc
arpl
nop
pusha
and
int3
inc
roll
and
mov
scas
xor
loopne
lea
cmp
ds
scas
xor
inc
rcll
bnd
inc
clc
aam
add
mov
push
and
call
add
stos
addb
cli
sub
rorb
jle
mov
xchg
cmp
pop
sbb
sbb
and
call
push
dec
sti
cmc
jp
cmpsl
lcall
in
inc
clc
add
push
sbb
js
int
xchg
sbb
pop
ljmp
enter
out
xchg
jbe
outsb
out
cmc
adc
push
lock
mov
call
adc
mov
sub
scas
sub
xchg
dec
lods
js
jo
cmpsb
iret
clc
lea
test
push
push
xor
xchg
mov
das
xchg
outsb
jle
int3
movsl
je
sbb
xor
in
cmpsl
shll
arpl
ljmp
push
decb
push
and
pop
push
ret
jmp
add
subb
add
aas
inc
cmp
mulb
jmp
push
mov
test
in
mov
int3
lcall
std
fimuls
mov
add
das
xor
mov
add
xor
pop
xchg
cmp
mov
les
cmpsb
push
pop
inc
pop
jne
mov
out
sar
sub
fwait
adc
daa
mov
lea
fisttps
out
mov
mov
and
or
cmp
add
pusha
aam
push
int3
rcrb
test
xlat
lock
nop
mov
mov
loop
std
dec
dec
push
ljmp
cwtl
mov
mov
in
mov
push
cmp
xor
mov
push
sbb
push
and
scas
xor
inc
mov
cld
add
int3
add
scas
stos
and
je
dec
push
xor
and
repnz
xchg
lock
lock
jle
bound
mov
adc
cmpsl
and
addb
mov
sbb
or
pop
xchg
jl
mov
push
sbb
inc
add
cmp
test
xor
insb
jp
loopne
movsb
mov
inc
inc
add
js
add
jp
ja
cld
outsb
or
fisttps
push
jne
in
pop
cld
xor
cld
fsub
push
push
or
ret
adc
add
lcall
push
pop
pop
out
xor
cmp
pop
pop
pop
orl
add
pop
addr16
xor
je
stos
imul
pop
mov
dec
jb
decl
mov
adc
or
shrl
dec
adc
lds
mov
ret
inc
in
cmp
mov
mov
sbb
push
pop
xor
outsb
icebp
or
imul
shlb
add
imul
push
leave
xor
and
push
clc
js
cmp
jbe
pop
sar
test
fwait
fs
mov
adc
mov
push
add
cld
cmpsb
fs
scas
cmp
mov
xorb
xchg
shlb
jp
mov
pop
xor
rcrb
xchg
and
cwtl
mov
push
movsl
push
iret
loopne
xlat
jnp
es
sub
insb
jmp
pop
sarb
mov
cli
add
dec
sub
inc
je
mov
ret
jge
jmp
pop
inc
xor
lock
shlb
or
rcr
inc
pop
loopne
or
clc
fbld
rcr
jge
sbb
add
pop
pop
add
adc
out
or
xor
mov
in
rcrb
inc
lods
sub
mov
insb
add
clc
dec
out
andb
aad
xchg
push
les
push
and
aam
fbld
sbb
push
adc
js
nop
push
sbb
clc
stos
add
loope
xor
dec
pop
pop
xchg
movsb
mov
cmpsb
add
add
lock
adc
fisubl
mov
mov
pop
push
stos
push
add
pushf
inc
and
adc
mov
aaa
push
pusha
xchg
or
mov
fistl
jo,pn
add
das
sar
add
inc
and
jb
dec
lcall
pop
hlt
push
shr
pop
pop
std
int3
and
fs
nop
pop
dec
cmp
daa
jmp
jmp
loopne
push
addr16
pop
ja
ret
jns
push
jp
pop
cli
add
and
popa
lock
dec
ret
imul
and
and
popa
mov
cltd
out
fsubrp
push
xor
decl
out
pop
sbb
fs
fiaddl
dec
outsb
shl
les
and
xchg
adcb
leave
loope
xchg
div
xchg
xchg
mov
cmpsl
hlt
lcall
add
add
les
fcomip
add
xor
jns
push
mov
addb
std
test
aam
cld
aam
push
cmpsl
fs
ret
rorb
or
cmpsb
sub
testl
or
shll
xchg
push
test
scas
add
sub
test
jecxz
pop
inc
push
pop
jmp
outsl
sub
iret
subb
xchg
and
cli
inc
mov
fcomp
xchg
sbbl
cmpsb
add
adc
call
dec
pushf
push
push
dec
adc
mov
lock
adc
pop
pop
sbb
ljmp
jge
mov
push
pop
push
sbb
dec
popf
jnp,pn
sub
in
or
loop
popa
sti
cmp
mov
imul
pop
mov
add
mov
ret
jge
sub
add
movsl
push
xor
orb
jmp
fsubs
scas
and
lcall
je
push
add
insl
rclb
int3
sahf
mov
add
outsl
fwait
pop
cli
stos
in
and
pop
xchg
dec
adcb
rorb
cmp
ret
cli
pop
pop
push
add
je
push
cwtl
in
sbb
and
lock
mov
cwtl
adc
mov
dec
jp
mov
inc
sbb
jne
sbb
icebp
jo
dec
dec
and
mov
insl
or
add
fwait
cmp
inc
int3
mov
fcomip
aam
call
test
push
gs
cmpb
ret
imul
sub
push
add
call
and
push
mov
mov
call
mov
mov
test
sub
je
mov
sbbb
pop
xor
mov
push
add
inc
inc
pop
add
add
xchg
sarb
or
jae
add
pop
dec
pop
mov
dec
lcall
adc
cld
pushf
pop
and
ret
lock
gs
jmp
shlb
data16
and
test
aad
stos
sub
js
push
inc
xchg
lea
leave
js
rorl
aaa
sub
rolb
shll
jne
lods
xchg
mov
inc
dec
dec
hlt
movsb
rorb
pop
mov
sbb
mov
stos
scas
inc
push
dec
pop
mov
adc
imul
adcl
push
mulb
mov
aam
adc
cmpsb
rcrl
xor
add
mov
mov
or
cli
adc
mov
sbb
mov
inc
or
mov
sarb
pop
loopne
repnz
rol
dec
push
ds
cmc
cwtl
nop
sub
pop
cmpb
and
mov
xor
push
and
push
test
mov
adc
and
inc
mov
mov
fmuls
insb
fwait
data16
clc
and
icebp
out
inc
rclb
aas
int3
test
push
bswap
sbb
js
loopew
xchg
xchg
lea
aaa
push
inc
mov
movsb
fs
mov
jge
cld
orb
push
pop
push
cmp
adc
cmp
shrb
sub
fcompl
je
ret
dec
sbb
call
test
ror
push
pusha
jns
rcll
jge
push
call
ds
mov
inc
ret
stos
repnz
sub
enter
xor
sbb
dec
ja
cmpb
call
fcoms
repnz
enter
inc
or
scas
sbb
push
mov
push
lea
lods
mov
or
lock
es
insb
lret
dec
inc
je
push
fs
dec
scas
mov
lea
adc
shl
in
pushf
xchg
jp
test
xchg
data16
and
xchg
xchg
sbb
sub
inc
push
mov
sbb
call
pop
push
add
mov
sti
icebp
sub
jne
pop
gs
enter
push
pop
in
jo
dec
push
movswl
and
out
mov
je
loopne
inc
jge
ret
push
pushf
popa
insb
dec
mov
cmp
rcrb
mov
hlt
ljmp
add
cli
jnp
in
repnz
xchg
scas
xor
pop
lock
pop
inc
xchg
inc
out
je
inc
nop
jno
ds
jmp
jne
and
leave
mov
or
adc
pop
adc
jg
and
popf
sub
out
and
jecxz
loope
loopne
fs
data16
xor
lods
and
cmp
mov
push
or
push
rorb
mov
add
ds
pop
push
stos
dec
add
pop
mov
imul
stos
push
dec
lcall
adc
xchg
in
fimuls
les
pushf
movsl
xchg
lock
add
pop
icebp
adc
mov
mov
push
lock
inc
sub
je
inc
jl
xchg
and
pop
and
movsb
xor
je
mov
mov
sub
incl
out
ds
and
xor
mov
xor
int
es
push
test
cwtl
in
inc
add
out
je
add
add
push
inc
mov
and
push
xor
jnp
add
lods
bound
sbb
lock
icebp
std
ja
push
aam
pop
lock
jae
inc
cmp
xchg
in
mov
test
jnp
filds
dec
repnz
push
and
adc
xchg
out
ret
xor
jmp
pop
inc
pop
pop
nop
jge
sbb
vmovshdup
cld
sahf
decb
ficoml
or
ljmp
les
call
xchg
or
adc
fs
mov
add
xchg
in
mov
inc
add
sbb
mov
nop
fdivrs
jecxz
ds
xor
jmp
mov
and
xor
sub
or
test
cmpb
jmp
add
out
ficoms
add
mov
and
sbb
lods
in
and
imul
ret
lcall
xor
mov
movsl
sbb
pop
shr
or
mov
and
mov
pop
dec
fildl
stos
lods
or
rolb
call
add
repnz
aad
lock
scas
fs
sub
adc
mov
xor
xchg
push
dec
push
nop
mov
jbe
inc
ljmp
mov
push
shrb
mov
mov
enter
mov
sbb
xor
stos
outsl
rolb
cmpb
lea
les
cld
push
ljmp
sbb
jp
cmp
ret
lock
test
lret
add
or
clc
cmovle
scas
xchg
push
pop
mov
stos
in
jne
test
xor
or
ja
pop
add
or
mov
lods
aaa
ljmp
adc
lret
jmp
push
aam
es
fisubs
cli
incb
mov
or
loopne
sbb
dec
mov
jmp
mov
xor
jbe
jb
outsl
push
sbb
cmp
inc
adc
dec
std
clc
jmp
mov
inc
por
cs
mov
movsbl
imul
and
xchg
out
cmpsl
inc
ljmp
mov
adc
push
add
mov
sub
mov
xor
cmp
pop
jne
scas
mov
fs
mov
and
fcoms
jb
sbb
pop
or
out
xor
xor
mov
add
insl
fimuls
stos
adc
lods
push
rol
ret
mov
and
mov
adc
inc
inc
fbld
adc
loop
adc
ficoml
jmp
call
add
mov
xorb
pop
roll
jo
mov
jo
add
mov
adc
inc
ss
icebp
jg
jo
mov
sahf
je
jmp
mov
sub
xor
inc
aam
rol
xchg
pop
mov
mov
stos
int3
push
aam
lods
scas
push
insb
js
dec
insb
mov
or
fstpt
jne
out
loope
loop
data16
dec
cmp
mov
push
addb
mov
mov
aas
fcomip
mov
dec
mov
cli
cltd
fdivs
mov
mov
imul
popa
add
loopne
and
mov
xorl
loopne
mov
stos
cmpb
dec
lods
test
pop
pop
popa
lock
mov
xchg
cli
cli
mov
jo
push
adc
enter
push
mov
pop
sbbl
icebp
dec
add
xor
ror
add
std
bound
movsb
or
cmp
popf
add
pusha
aam
cld
aam
stos
lock
add
inc
shr
je
mov
repnz
xor
mov
arpl
inc
add
xchg
xchg
mov
into
dec
mov
in
mov
movswl
push
adc
in
sub
inc
xor
cmp
sub
sbb
cld
push
push
je
pop
icebp
movsb
out
je
js
lcall
nop
sti
lock
mov
jmp
mov
sub
scas
sbb
dec
xlat
data16
popf
movb
icebp
movsb
add
sub
lea
outsl
jmp
test
lret
or
lret
orl
and
lcall
enter
jne
test
mov
jle
or
popa
and
inc
add
gs
ret
jmp
or
rorl
jmp
xchg
into
test
cmp
fiadds
sub
jb
cmp
stos
add
loop
mov
mov
cmpsb
jns
enter
orb
push
cmp
data16
jge
or
and
mov
loope
pop
enter
fadds
push
add
jbe
mov
mov
sbb
xor
jecxz
jne
hlt
shrb
jb
xor
jg
hlt
shrl
adc
pop
decl
xchg
pop
xchg
cmp
jo
xor
add
mov
xor
je
cmp
loope
mov
clc
adc
js
mov
add
les
pop
mov
push
popa
and
int3
push
outsb
push
mov
sub
mov
inc
push
ret
xor
sub
test
cs
int3
and
pushf
cmp
jno
je
xor
lods
ret
rorb
push
cltd
cmpl
test
mov
sahf
add
xlat
std
inc
sbb
mov
out
jne
je
sbb
test
mov
add
aaa
mov
or
adc
or
inc
sbb
add
dec
cmp
sbb
lock
adc
add
add
add
mov
sbb
pop
lock
push
rcrb
push
sbb
sub
inc
insl
xor
std
xchg
and
fadds
xlat
pop
loop
ds
fdivp
add
call
mov
dec
movsb
push
xor
inc
pop
add
and
jecxz
cmc
cmp
xchg
mov
push
jne
xlat
outsb
add
mov
pop
xchg
cs
dec
mov
popa
xchg
jmp
lods
or
call
out
push
and
sub
jne
mov
addb
shrl
aaa
mov
sub
mov
inc
fsubr
cmc
jg
jp
sahf
imul
cli
pop
inc
adc
pop
fstpt
in
je
xor
xchg
dec
or
cli
mov
jbe
rorb
lock
push
aam
or
jmp
std
es
mov
test
adc
fsubrp
js
data16
test
jnp
loopne
add
push
imul
sub
mov
addb
push
mov
mov
outsl
pop
inc
das
pop
push
enter
in
push
insl
fnstsw
or
ss
dec
call
cmp
orb
inc
gs
pop
mov
dec
mov
outsb
mov
xchg
sbb
cmpb
xchg
xor
mov
lock
repnz
xor
push
inc
jg
sbb
pop
mov
out
add
repnz
push
push
jbe
fs
icebp
es
cmp
hlt
xchg
cmp
mov
inc
cmp
les
fbstp
je
fcmovnb
and
fistl
inc
mov
pop
xor
jg
or
sub
push
adc
les
xor
shll
dec
mov
add
daa
and
pop
add
fdivs
xorb
push
mov
je
sbb
andl
xchg
movsb
incl
psllw
dec
aaa
inc
ljmp
jae
ljmp
inc
clc
push
push
pop
addl
movsb
cmp
cli
ss
popa
mov
test
add
sbb
and
xor
ret
shlb
xchg
mov
jbe
movsl
hlt
push
mov
lea
xor
outsl
xchg
test
lahf
and
mov
test
arpl
mov
push
push
cld
icebp
mov
xchg
mov
ja
jg
mov
lods
aaa
lods
mov
ficompl
add
push
scas
leave
adc
or
cmp
loop
std
sbb
mov
in
add
cltd
or
or
and
insl
imul
insb
call
sub
sbb
mov
inc
jb
das
cmp
sbb
mov
add
loope
nop
push
mov
inc
dec
sbb
in
mov
mov
inc
pushf
idiv
ljmp
hlt
stos
mov
lea
cli
aas
xor
mov
ret
pop
or
jno
sbb
xchg
pop
ds
stc
adc
mov
push
cmpsl
mov
rorl
test
out
add
xchg
and
and
dec
pop
mov
push
or
or
adc
ja
mov
dec
jl
mov
loopne
les
inc
and
cli
push
and
pushf
push
pop
and
inc
push
fmull
or
mov
addb
add
jbe
add
push
cwtl
dec
test
cli
xchg
jle
shlb
add
aam
push
cmp
xchg
pop
es
add
cmpsb
push
mov
dec
sub
push
dec
jl
vaddss
or
shr
xor
sbb
stc
fs
into
mov
es
ficompl
cld
call
mov
and
mov
xor
leave
enter
leave
pushf
jb
xchg
call
ljmp
std
mov
aad
or
jmp
out
jmp
mov
pop
push
mov
cmpsl
mov
mov
add
fwait
repnz
jnp
xor
lcall
pop
adc
mov
ficoml
nop
mov
pop
call
outsl
adc
rolb
dec
lcall
dec
dec
mov
loop
pop
mov
pushf
outsb
cmp
push
jbe
xchg
cmc
in
into
into
rcll
dec
push
mov
xor
in
incb
push
int3
mov
call
cmp
movsb
js
and
add
push
aaa
add
mov
out
std
es
dec
xchg
sbb
fistl
xor
jge
xor
cmpsb
subb
dec
xchg
fcoml
add
add
mov
and
je
shlb
inc
js
stos
add
in
xchg
pop
arpl
hlt
add
mov
mov
loopne
ret
cmpsb
push
shlb
inc
fsubrs
or
int
pop
sbb
push
jo
test
xchg
dec
cli
rorb
inc
jl
adc
sbb
cmp
push
push
stos
enter
jo
lock
out
mov
add
int3
test
adc
ret
mov
jne
lcall
pop
dec
dec
mov
push
aam
aas
and
pop
push
sbb
xchg
shrb
mov
adc
shld
loopne
adc
jg
popa
push
sub
adc
pusha
cmp
xchg
jp
or
pop
cld
and
ret
add
pop
fiaddl
in
stc
jo
mov
adc
add
inc
adc
sub
insb
or
and
jl
adc
mov
loope
adcb
cmp
or
std
ds
cmp
dec
mov
test
xchg
and
xor
mov
mov
ret
mov
dec
lret
fidivl
lods
push
adc
ret
int3
xor
cs
add
sbb
push
adc
stc
add
ret
push
push
loopne
xchg
loop
xchg
data16
inc
dec
adc
push
andl
dec
scas
cmpsl
push
jo
movsb
add
or
daa
ss
mov
dec
ja
js
pop
jno
jmp
sbb
adcl
ud0
jbe
test
test
dec
call
jmp
lea
mov
je
xor
lea
insb
aas
mov
add
mov
lods
and
push
inc
jl
mov
add
call
insl
nop
add
aas
or
mov
push
add
mov
lods
pop
xchg
movsb
pop
mov
ret
xor
ret
pop
clc
add
mov
sbb
lods
test
xor
adc
sbb
xor
hlt
dec
add
shrb
cmc
inc
jge
jp
mov
sbb
cli
cs
xor
pop
xor
mov
mov
mov
inc
shlb
int3
adc
push
mov
dec
mov
and
pop
sub
in
ja
outsl
jl
push
aam
xchg
jl
inc
mov
sub
imul
nop
insb
movb
add
sbb
jbe
inc
dec
jmp
gs
add
push
cs
xchg
jge
pusha
dec
mov
push
add
and
mov
push
mov
mov
mov
push
das
loopne
cmp
pop
mov
fldcw
mov
mov
cmp
jo
loop
int
rclb
pusha
cmp
ljmp
pop
add
mov
lcall
cmp
shll
sar
xor
popa
sti
ljmp
lcall
or
lds
lret
sub
pop
mov
add
add
ds
adc
cmp
or
inc
ss
xor
xchg
fiadds
pushf
js
cmp
dec
mov
gs
js
int3
pop
push
fstps
push
insb
out
inc
sub
std
adcl
pop
push
scas
mov
pop
insb
hlt
jge
icebp
jg
rcrb
outsb
imulb
test
call
sahf
int3
iret
inc
mov
add
shl
aam
jmp
fistpll
mov
int3
pushf
mov
mov
jo
sti
out
leave
sbb
lret
add
rorl
cmp
nop
shrb
push
and
fsubl
sbb
scas
push
xor
xor
mov
fisttpll
std
iret
loopne
push
mov
cs
test
test
add
fs
test
sub
shlb
push
mov
mov
repnz
cld
push
lea
add
push
xor
add
mov
lea
dec
mov
hlt
or
jmp
add
push
xchg
fiadds
sbb
xchg
jo
call
mov
les
mov
push
cltd
popa
loopne
setbe
and
pop
loopne
stos
data16
dec
xlat
nop
push
add
push
push
or
sahf
fucomi
pop
in
call
sbb
mov
cmp
jo
jl
les
add
jne
mov
push
xchg
subb
push
das
mov
loope
mov
inc
call
mov
mulb
push
jne
adc
jne
jg
dec
ret
nop
movl
jnp
shll
decl
pushf
loope
cli
mov
inc
ss
lret
test
xchg
repnz
sbb
outsb
dec
jp
rolb
sbb
sarb
popa
inc
loope
cmp
push
jbe
test
fwait
mov
inc
or
and
jno
dec
addb
and
add
shrb
scas
push
sbb
stos
push
push
lds
adc
int3
xchg
lea
push
mov
mov
ss
sbbl
scas
adc
mov
inc
ficompl
mov
hlt
movsb
pop
or
push
imul
or
add
shll
push
test
mov
jmp
sbb
mov
movsl
and
repnz
mov
int3
pop
jg
pop
imul
loopne
push
gs
mov
mov
or
jne
ljmp
cli
sbb
xor
dec
pop
push
cmp
xlat
rcrb
cld
jb
jnp
mov
lock
loope
or
inc
mov
clc
nop
fistl
je
and
call
or
and
out
sar
shlb
popa
or
xor
arpl
sub
xor
fs
xor
pop
sub
or
loopne
lea
add
xchg
mov
cmp
call
add
lods
pusha
shll
jno
gs
sbb
je
pop
mov
adc
mov
adc
insb
cli
std
or
stos
jo
cld
fldl
push
inc
dec
sbbl
adc
adc
shlb
callw
dec
sub
xchg
cli
cmp
lods
mov
ret
and
pop
movsl
fwait
xchg
dec
push
lcall
nop
xor
js
jp
mov
pop
push
or
lock
pop
add
jge
push
hlt
mov
or
mov
adc
in
insb
jge
incl
adc
cmp
icebp
jl
enter
sub
popa
xor
push
cwtl
mov
out
sbb
push
ljmp
push
insb
orl
push
outsl
dec
les
sbb
inc
mov
mov
dec
dec
mov
data16
or
ret
jle
pop
and
push
push
mov
dec
and
les
add
adc
xchg
icebp
dec
xchg
push
xor
add
cmc
mov
shrb
adc
pushf
inc
sub
xchg
jno
lret
lcall
aam
lods
xchg
subb
add
clc
and
sbb
icebp
test
jl
mov
sbb
rcr
sub
aam
xor
xchg
clc
cmp
push
fsub
stc
adc
aaa
test
pusha
xor
js
cmp
subb
pushf
stc
cli
out
adc
jp
mov
stos
jb
sub
pop
test
mov
cs
ss
lret
lock
pop
inc
mov
sbbb
das
test
jmp
call
into
pop
fisttpl
sub
mov
lods
stos
and
bound
lgs
repz
jo
dec
cld
bound
mov
cmp
sbb
jmp
lds
stc
outsb
test
fidivrs
in
incl
xchg
push
aam
jb
pushl
leave
test
inc
aam
push
in
sbb
mov
mov
loop
popa
mov
jo
jg
push
insb
int
mov
cmp
addl
jmp
stc
rdpmc
movsl
cmpb
loopne
cmp
das
fldl
enter
cld
and
xchg
aaa
les
ja
call
dec
test
mov
pop
movsb
call
lea
inc
and
push
mov
mov
cmp
insl
or
add
and
ret
int3
int
add
fdivrl
in
or
push
pushf
out
aad
ljmp
ljmp
orl
and
adc
adc
or
jge
hlt
or
add
cmpb
push
jge
and
dec
dec
repnz
cld
scas
mov
add
dec
es
mov
adc
sarb
sub
add
fistl
stos
sbb
leave
decb
pop
adc
push
add
cmp
lea
popa
mov
and
jle
jmp
cmp
inc
arpl
fwait
mov
mov
stos
dec
push
je
cmp
lea
or
and
mov
mov
stc
imul
xchg
call
fs
mov
mov
sbb
push
int
das
push
dec
pop
in
int3
or
dec
xor
incl
int3
xor
inc
cmp
pop
pop
cli
cmp
outsb
enter
push
inc
std
jmp
pop
ret
jmp
ljmp
out
add
repnz
pop
dec
mov
fidivs
or
shlb
popa
or
jbe
or
push
ret
jns
js
push
jp
jne
mov
ret
jnp
mov
dec
fs
rcll
pop
push
cmp
adc
jo
fldl
test
inc
adc
push
and
mov
xchg
and
out
xor
jmp
je
inc
or
push
xor
outsl
or
nop
pushf
cmp
cmp
mov
mov
data16
or
dec
mov
outsl
or
test
cs
jae
in
push
sub
hlt
push
adc
lods
adc
insb
test
jl
je
gs
ss
add
test
adc
add
insl
mov
sbb
fisubrs
sub
incb
lods
adc
imul
in
lock
sbb
xor
insb
xor
sarb
std
incl
incl
mov
pushf
hlt
sbb
test
add
pop
and
enter
outsl
movsl
and
call
push
add
xor
loopne
pop
jo
inc
sbb
ret
in
enter
adc
jp
lcall
add
sub
xor
cld
aad
test
sbb
pop
add
mov
dec
nop
mov
xchg
mov
xlat
loopne
cmpb
aad
xchg
inc
rorl
mov
pusha
lds
shlb
mov
ds
sbb
xor
xchg
adc
inc
insl
mov
sbb
loopne
xor
sbb
movsb
hlt
jbe
sti
dec
mov
push
mov
adc
scas
scas
sbbb
jne
push
push
lds
inc
icebp
xchg
cmpsb
hlt
les
lods
jg
hlt
sub
into
push
popf
sub
fwait
or
push
rorb
shrb
sbbb
or
or
add
mov
fldenv
or
int3
push
sub
pop
mov
pop
clc
jmp
aas
cwtl
std
fisttps
xchg
jl
jmp
in
movsb
pop
add
inc
inc
sbb
stc
pop
pop
pushf
sbb
movsb
and
cwtl
push
inc
outsl
or
mov
out
mov
xor
mov
mov
adc
inc
lods
dec
add
mov
or
add
adc
mov
and
push
pop
add
loop
js
adc
jl
adc
inc
fcompl
call
and
lock
dec
adcb
jmp
outsl
sub
inc
dec
and
adc
mov
sti
push
and
stc
sub
mov
fwait
cld
decl
mov
jmp
dec
test
lock
outsl
add
inc
pop
xor
sub
cld
sub
push
jmp
mov
and
ss
pop
adc
add
pop
xchg
mov
add
out
and
fdivrp
mov
adc
cwtl
pop
gs
pop
or
lods
pop
dec
jmp
pop
cmp
and
shlb
pushf
lcall
cmc
push
push
rcrb
mov
std
stos
mov
mov
push
mov
mov
adc
jge
mov
push
out
sbb
ss
mov
int3
and
ret
decb
push
iret
adc
mov
movsl
test
xchg
push
sbb
jmp
pop
cmp
push
inc
std
mov
nop
mov
mov
push
mov
push
and
inc
test
mov
mov
jne
xor
dec
add
or
das
or
jecxz
push
jne
mov
out
cwtl
aam
jmp
mov
cmp
push
or
jo
test
shl
je
cwtl
stos
mov
mov
mov
push
popa
int3
xor
pop
cmpb
lret
in
xor
or
mov
add
sbb
push
xor
rclb
rorl
mov
dec
adc
test
jmp
out
push
lea
sarl
pop
and
aas
repz
fs
aad
std
mov
pushf
nop
test
mov
mov
out
push
pop
jp
and
or
jb
cli
inc
jl
jl
mov
mov
andb
push
push
fdivl
inc
outsb
sbb
mov
adcl
add
ss
pusha
pop
pop
aas
je
mov
jne
aaa
xchg
add
sbb
mov
mov
popa
push
jge
dec
adc
jo
je,pt
adc
fldt
pushf
andl
mov
insl
xchg
inc
mov
fcoml
push
inc
shl
mov
std
jb
jne
filds
fcoml
inc
ds
mov
jo
xor
push
orb
ljmp
je
cld
loopne
mov
cwtl
call
or
or
aaa
repnz
xchg
popf
push
test
test
sub
dec
inc
lds
mov
addr16
daa
stos
push
sbb
push
jg
sbb
ds
sub
mov
push
in
xor
push
and
mov
ret
adc
bound
sub
push
sbb
jne
rorb
add
xor
mov
push
in
popf
mov
jge
cmpsl
rorl
gs
mov
dec
mov
xorb
xchg
sub
add
movl
pop
cmp
add
loope
sub
les
rcr
loope
rclb
cli
jmp
push
jg
add
push
mov
clc
cmp
leave
mov
aas
mov
inc
imul
push
ds
nopl
inc
lea
adc
push
xchg
cmp
sbb
mov
mov
jmp
add
test
jo
pop
ss
fs
inc
push
pushf
sbb
call
add
lea
cmp
mov
les
or
mov
lods
jo
in
mov
add
das
push
mov
jne
jp
inc
sbb
cli
lahf
shr
add
sbb
add
mov
rcrb
ret
addr16
enter
mov
add
or
cwtl
or
aaa
dec
dec
push
push
mov
lock
sarb
pop
es
mov
sbb
lods
insl
lods
ja
push
or
xor
push
inc
push
clc
push
mov
dec
mov
mov
xorb
int
cwtl
and
imulb
mov
icebp
lahf
mov
cld
mov
push
mov
mulb
cld
loop
ret
jmp
or
andl
hlt
xor
jl
jmp
rorb
lods
and
push
sub
fcoml
fdivl
outsb
dec
adc
push
mov
inc
shrb
xchg
mov
jo
jne
lock
into
sti
push
cmp
or
push
mov
inc
cmp
mov
dec
xchg
scas
mov
fadds
pop
mov
mov
movsb
lock
add
pop
push
pop
add
fs
ror
push
mov
aas
mov
pop
cmp
and
inc
cmpsb
add
sbb
mov
xor
and
xor
adcb
int3
mov
dec
test
insl
push
hlt
jo
push
xor
jbe
xor
mov
adc
mov
test
pop
dec
pop
cli
add
dec
incb
scas
jp
ficompl
call
lods
jmp
dec
fisubrl
je
adc
dec
cmpsb
mov
pop
push
adc
push
push
add
outsl
stos
loop
jo
daa
mov
ret
or
dec
or
aad
inc
add
lds
push
imul
push
popa
jmp
sbb
shlb
sbb
add
mov
or
lods
jbe
push
rorl
and
add
notl
add
xchg
std
aam
dec
fcmovbe
push
or
or
ljmp
add
inc
mov
ret
stc
andl
icebp
pop
dec
dec
push
inc
lock
or
subl
cwtl
jne
push
adc
sbb
and
sbb
or
pop
nop
sbb
adcb
shl
xor
mov
inc
jmp
outsl
cmp
fs
pop
ljmp
loopne
cmp
push
inc
xor
lock
dec
and
test
aam
jl
mov
sahf
push
xor
sbb
cmc
call
outsb
fdivrs
dec
or
inc
mov
das
sub
or
repz
loopne
shll
add
loop
cmp
inc
fists
jge
inc
jge
out
stc
add
insb
sub
ljmp
inc
outsb
xor
cmpsb
jmpw
dec
pop
xor
ss
int3
jmp
xor
push
jmp
fdivl
or
cmp
add
pop
add
jo
add
jnp
leave
push
enter
pushf
cld
andl
iret
jg
add
jg
jg
inc
xchg
outsl
add
mov
fadds
add
dec
lock
pop
adc
sub
push
in
lcall
in
mov
pop
lcall
mov
stos
fisubs
call
jne
adc
jle
mov
pusha
rclb
cmp
add
xchg
and
jge
clc
inc
mov
ss
fs
loop
jo
and
push
subl
pop
xchg
inc
cmp
lea
lret
push
mov
jo
mov
dec
add
mov
pushf
rcl
push
mov
inc
subb
shlb
add
mov
lcall
xor
inc
adc
add
fisttpl
imull
xor
pop
jl
test
jp
and
add
inc
lods
pop
jecxz
sub
add
rolb
clc
scas
or
mov
push
sub
mov
mov
jmp
mov
fs
test
jmp
loop
and
testb
movsb
pop
in
addr16
fbstp
int3
mov
add
mov
call
xchg
ret
cmp
add
push
dec
push
inc
xchg
inc
adc
iret
mov
hlt
test
fisttps
icebp
test
std
loope
test
loope
pop
mov
mov
mov
add
in
in
outsl
mov
push
push
jg
outsb
adc
sbb
pop
movsb
push
jo
popa
test
mov
aaa
add
sub
cmpsb
dec
xlat
aad
bound
rolb
movsb
js
std
push
jb
je
mov
call
add
push
xchg
sub
shl
or
incb
pop
ss
add
mov
sub
xchg
loopne
cmp
push
adc
mov
rolb
or
imul
inc
aad
add
icebp
sti
xchg
push
jge
roll
les
pusha
gs
enter
pop
push
sti
jge
or
cmc
push
sbb
fst
stos
sub
push
ffree
int
mov
ljmp
test
out
call
cmp
aas
arpl
gs
add
adc
sbb
loopne
sbb
fs
ss
xor
cmc
add
or
out
je
es
jno
jl
pop
cli
and
pushf
loope
dec
shlb
outsb
les
adc
adc
hlt
jg
or
sbb
adc
sahf
or
out
push
iret
push
cld
pop
gs
mov
rorb
cmpsl
or
inc
and
add
xchg
into
xchg
call
xor
prefetchnta
xor
xor
sub
dec
adc
mov
jp
decb
aam
push
insb
pop
mov
dec
call
std
mov
or
xchg
mov
loop
mov
adc
repnz
sbb
ja
int3
mov
movsb
test
jmp
loop
mov
into
aaa
and
mov
mov
jb
pushf
je
mov
mov
lods
add
ss
pop
mov
rcr
xchg
or
pop
js
push
icebp
lock
test
adc
fs
inc
adc
aam
xor
icebp
insl
mov
mov
add
jp
loopne
ret
shll
xchg
test
inc
cld
xchg
jb
sub
push
sub
jge
xor
push
lods
and
xchg
mov
sbb
mov
inc
shlb
mov
pop
loop
xchg
incb
add
or
cld
add
pop
adcb
fimull
arpl
or
cwtl
ret
ljmp
sub
pop
cld
ret
es
push
cli
xchg
mov
rorl
cli
cmp
add
data16
jmp
xchg
pop
inc
dec
push
cwtl
int3
loopne
pop
push
cli
mov
aad
push
push
mov
cmpb
push
pop
sbb
incl
imul
sub
mov
cli
add
push
lods
nop
ss
mov
push
lock
test
fidivl
push
mov
mull
add
je
adc
stos
sbbb
and
bswap
or
sbb
and
outsl
scas
sub
les
nop
push
es
push
lret
inc
andl
call
lods
sub
push
push
jns
add
out
and
loopne
cli
adc
sub
movsb
in
sbb
add
lahf
pushl
jle
scas
inc
in
mov
add
sar
push
inc
rol
sbb
in
ret
cmp
pop
or
dec
repz
repz
push
xor
inc
mov
and
rorl
xchg
out
push
pop
and
nop
negl
cld
ds
xchg
jno
repnz
scas
aam
subb
cld
jg
out
stos
mov
loope
xor
lea
movsb
roll
mov
or
jp
and
test
icebp
call
and
test
mov
test
lcall
pop
mov
dec
sub
fdiv
xchg
pop
adc
mov
dec
mov
scas
dec
or
incb
lods
addl
add
add
mov
dec
sbb
cwtl
jmp
jmp
mov
push
cli
add
outsb
mov
add
insb
inc
sub
xor
in
fimuls
jne
dec
xchg
bound
std
decl
xor
cmp
and
add
cld
pop
push
and
or
xorl
clc
add
xor
fsubrs
je
mov
pop
popf
jno,pn
divb
fistpl
pop
fwait
enter
shrl
pop
fadds
je
je
pop
xor
les
xor
xchg
push
jle
in
jge
insb
or
jae
inc
pusha
fbld
xchg
mov
rcrl
mov
aas
ljmp
and
ret
rorb
fildl
ret
pop
test
shlb
bound
jp
cs
test
dec
out
int3
add
push
lret
mov
add
jmp
hlt
dec
inc
mov
loopne
cmp
mov
orb
mov
and
push
shrb
testb
gs
lret
mov
xchg
cld
out
in
mov
incl
icebp
cmp
cmp
pop
mov
je
lock
js
repz
pop
inc
cld
scas
cli
sub
mov
add
sbb
ret
adc
mov
jb
cli
jecxz
push
pusha
mov
push
pusha
mov
inc
sub
push
mov
jne
push
and
scas
mov
fmuls
inc
or
add
cli
arpl
mov
mov
aam
dec
cmp
loopne
dec
fsubrs
scas
pop
mov
push
jp
ficoml
xlat
adc
and
pop
ret
sub
or
pop
out
push
into
scas
adc
push
sarb
push
stos
mov
aam
xchg
repnz
lcall
sbb
call
add
out
data16
mov
lock
xchg
mov
das
lcall
je
fmull
ffreep
enter
ss
loopne
pop
add
push
adc
icebp
push
imull
push
lret
mov
pop
pop
fadds
pop
cmp
jg
lods
mov
movlps
pop
lcall
ret
orl
dec
mov
inc
jecxz
rcrb
mov
shll
sub
hlt
jo
push
stos
sub
out
lea
fimuls
mov
sbbl
or
or
and
add
mov
cli
xor
mov
mov
push
pop
cmpsl
or
jne
mov
sub
inc
mov
stc
lea
jmp
mov
adc
or
add
push
dec
in
pop
sub
outsb
push
xor
mov
rcrb
icebp
ret
sub
dec
call
and
lcallw
add
xchg
or
fidivl
lea
aas
ds
std
push
insl
push
shr
jle
mov
adc
movsb
nop
xor
or
mov
cmp
ljmp
dec
pop
nop
dec
push
pop
xchg
orb
push
nop
rcr
aas
pop
mov
sbb
ljmp
data16
out
jns
push
mov
push
sbb
sbb
fiaddl
inc
xchg
imulb
push
fnstcw
dec
jne
push
insb
push
int
shrb
and
add
cmp
and
sbb
pop
mov
movl
add
sbb
mov
in
jg
or
sti
repz
xor
push
std
mov
jle
add
mov
out
subl
test
push
xchg
bound
enter
data16
int3
sbbl
fcmovnb
shll
push
mov
push
add
sub
push
push
aam
dec
or
dec
jmp
lea
js
adc
sub
dec
add
rclb
filds
mov
adc
orl
iret
das
and
maxps
mov
sub
xchg
pop
adc
lret
jg
push
filds
xor
in
mov
adc
clc
movsl
clc
mov
jne
xchg
shr
inc
push
hlt
or
adc
dec
adc
push
lret
incl
mov
scas
pop
stc
mov
fs
minps
pusha
cmp
fs
xchg
je
dec
mov
add
lret
mov
sbb
xor
rorb
jl
dec
inc
cmp
inc
sbb
test
and
fiadds
dec
lds
and
bound
adc
add
adc
xchg
adc
xchg
add
ljmp
cmc
xchg
push
or
xor
test
jae
fistl
push
cmp
popf
movsb
js
test
jbe
loop
repz
jg
shlb
test
dec
sub
add
ds
pop
lods
pop
hlt
xor
push
sub
in
rorl
pusha
add
sub
out
fisubl
pushf
sahf
testb
push
sahf
and
adcb
dec
add
push
out
out
jbe
sti
dec
sbb
mov
add
add
gs
push
mov
mov
inc
test
or
pushf
push
push
adc
bound
cmp
decl
rolb
hlt
sub
int3
xchg
mov
call
jmp
mov
jo
enter
inc
or
aam
mov
cmp
inc
out
aam
add
pop
dec
fbld
shlb
cmpl
mov
sbbl
lods
sarb
mov
scas
lock
xorl
ret
pop
or
rcr
aas
push
out
jg
jl
xor
sub
dec
pusha
rolb
inc
adc
and
bound
je
pop
push
mov
mov
pusha
popf
push
pushl
std
test
push
dec
add
xor
cmp
ret
xor
fldcw
lcall
mov
and
outsb
ret
leave
sub
and
adc
sub
ret
add
sbbb
sti
xor
nop
cmp
lahf
orb
adc
jne
mov
push
dec
dec
mov
mov
xor
test
fs
lock
xor
add
cwtl
lods
fwait
or
test
sti
add
xor
mov
je
pop
js
cmpsb
fisubs
add
jbe
adc
add
or
xor
in
xchg
rcr
pop
loope
mov
ds
inc
dec
add
test
add
fldenv
add
sti
sar
sub
add
adc
sub
outsl
mov
sbb
or
out
mov
data16
lock
rcll
push
lcall
or
incl
pop
mov
incl
xor
pop
xor
inc
xor
dec
mov
lahf
adc
or
dec
fdivs
add
inc
and
iret
add
call
call
cld
inc
inc
cld
inc
mov
mov
mov
cmc
stos
pop
les
fnstsw
mov
std
popa
pop
lret
and
push
pop
inc
and
jge
cli
std
sbb
xor
pop
xchg
mov
mov
mov
jmp
push
je
ljmp
pop
cwtl
loop
mov
rcll
add
outsb
jmp
dec
jg
ljmp
and
dec
add
rcl
dec
mov
inc
lcall
sub
xchg
mov
ds
lock
bound
xchg
icebp
jg
movntps
shr
pushl
sbb
add
cld
shlb
cwtl
les
nop
cmp
rcrl
enter
xlat
xchg
lret
imul
xlat
inc
loopne
pusha
mov
push
inc
add
mov
or
dec
in
repnz
rolb
dec
inc
cli
scas
mov
push
adc
fs
push
hlt
push
push
xchg
out
mov
dec
push
or
int3
loop,pt
out
cli
or
pop
in
xchg
push
or
loop
stos
fisttpl
jo
push
ljmp
ds
ret
xchg
sub
lahf
adc
ljmp
sub
xor
addb
mov
push
adc
test
imul
or
jo
and
mov
or
hlt
sarb
push
cmp
xchg
push
sarb
jg
rcrl
inc
outsl
inc
cmpsb
xchg
and
movsb
lret
sub
sbb
mov
cmp
jbe
divb
inc
adc
add
push
std
or
scas
xchg
dec
mov
add
or
mov
pop
inc
mulb
popa
ljmp
or
xchg
push
xor
sbb
mov
or
jle
in
jne
shlb
imull
clc
icebp
xor
ret
pop
dec
loop
jmp
xor
clc
cwtl
mov
icebp
jmp
ds
sarb
pop
les
subb
popa
dec
sarb
movl
clc
sahf
fsubl
insl
jp
push
or
mov
test
adc
sbb
and
in
clc
dec
pop
and
mov
ds
shlb
and
cmpsb
mov
add
or
bound
lcall
sar
cmpsb
or
push
add
rorb
add
and
push
fbld
add
push
push
imul
xor
push
adc
inc
mov
rcrb
cmp
lret
fmull
pop
outsl
jg
inc
pop
in
fcmovne
push
pushl
mov
test
mov
test
clc
inc
add
inc
outsb
fsubl
add
je
cld
dec
push
insl
icebp
sub
mov
pop
mov
add
fistps
fs
movl
shrl
mov
push
sub
lods
fwait
adc
ror
sahf
cld
pop
dec
cld
inc
and
cld
lods
jns
insb
jmp
in
jno
xchg
xchg
lods
enter
xchg
xor
lret
or
lea
test
mov
lods
mov
push
add
jne
ret
push
jmp
inc
pop
push
mov
test
ss
insb
adc
cmc
aaa
sbb
mov
idiv
pop
jae
add
outsb
jnp
jmp
mov
je
mov
ljmp
add
int
ljmp
sbb
xchg
xor
sbb
lock
inc
ficomps
dec
xor
or
lret
inc
xor
aaa
mov
inc
sbb
dec
dec
xchg
pushf
cld
jmp
sub
sub
lea
ja
add
xchg
xor
jmp
aaa
and
push
dec
ds
fmull
or
push
mov
inc
cmpsb
mov
adc
aaa
inc
orb
mov
insb
ss
or
clc
push
sub
or
outsb
cli
cmp
pop
sbb
xlat
sub
mov
inc
repz
in
push
xchg
mov
sub
mov
bound
xchg
adc
std
push
jmp
jne
add
dec
xor
cli
mov
clc
pop
cmp
inc
lock
dec
xchg
dec
mov
mov
mov
jp
jp
in
inc
roll
es
mov
mov
mov
insb
into
lock
hlt
and
loopne
dec
lcall
and
fcoms
outsl
es
shll
dec
das
xor
xor
push
or
or
fcoml
lret
mov
pop
sbb
loope
mov
pop
mov
mov
mov
lock
pop
push
add
xor
mov
push
sub
lods
in
xchg
mov
cmpsb
push
mov
dec
push
call
inc
roll
or
mov
popf
sub
adc
adc
pop
insl
mov
sbb
call
xor
aam
add
mov
adc
mov
subl
mov
mov
enter
cs
adc
aaa
rolb
test
incb
xchg
mov
mov
push
push
js
xchg
mov
sar
cmp
mov
pop
sub
mov
inc
lods
xlat
in
push
pushf
inc
add
sahf
mov
dec
push
hlt
cmp
mov
cwtl
hlt
hlt
mov
outsb
rorb
icebp
movsl
sbb
xor
sub
add
push
inc
lahf
out
and
push
sar
pop
mov
hlt
add
push
or
and
cmpsb
outsb
test
mov
mov
mov
jae
loop
cmpsb
sbb
add
rolb
fcomp
call
ja
mov
inc
push
test
add
popa
cld
mov
mov
add
pop
cmc
das
mov
loopne
clc
jae
aaa
or
mov
mov
call
dec
pop
aaa
push
loopne
and
loopne
cs
sub
leave
lcall
push
incl
inc
add
clc
data16
arpl
les
inc
ds
inc
cmp
mov
mov
jle
xor
push
push
and
ret
push
sbbl
js
xor
cmp
cmp
push
adc
jns
adc
lock
neg
cs
ja
jmp
out
data16
loope
lock
push
sub
idivl
fldcw
fsubrs
rolb
fidivrs
add
in
aam
fdivrs
dec
pop
or
icebp
andb
dec
push
push
call
inc
push
push
movsl
pop
ss
pushf
addr16
and
mov
inc
add
imul
xor
add
pop
mov
pop
ret
jle
orb
mov
pop
jmp
mov
mov
data16
sarb
and
sti
add
test
fwait
test
xchg
mov
rolb
hlt
out
sub
lret
xchg
movsb
sbbb
sti
mov
sub
mov
andl
shll
ss
pop
mov
sbb
dec
loope
jg
out
call
ficoms
loop
push
pop
shl
lods
cmp
cmp
mov
mov
xorb
add
int3
std
negb
push
loope
sub
aaa
mov
xchg
add
fadds
out
mov
pop
in
shl
mov
movsl
ss
jb
int3
or
add
sbb
ljmp
aad
sub
jl
enter
or
xchg
fcoms
jae
cwtl
adc
or
push
pop
popa
js
inc
ljmp
and
sub
push
out
sub
ret
divb
adc
jae
je
and
add
inc
decl
adc
adc
inc
push
xor
mov
push
movl
mov
xor
inc
cmp
xchg
or
test
push
mov
inc
add
stos
outsb
cli
mov
push
rolb
test
adc
in
dec
mov
push
aam
dec
push
inc
pop
aam
sbb
sbb
fadds
mov
jge
cs
push
and
pop
mov
lea
pop
cld
adc
mov
adc
mov
in
mov
imul
or
mov
xchg
pop
mov
mov
and
leave
pop
and
rorb
adcb
sub
mov
xchg
push
std
fwait
fists
push
out
push
inc
rol
xchg
ret
add
std
test
pop
out
xchg
mov
notb
push
xor
ljmp
outsb
jae
and
or
ss
testb
call
mov
adc
add
inc
pop
cmpb
inc
xchg
mov
shlb
ss
lods
into
xchg
js
or
mov
shll
pop
stos
insl
add
add
inc
out
pop
test
js
xchg
and
mov
scas
pusha
movsb
mov
popa
or
push
test
xorb
mov
jle
lea
xchg
je
sti
les
iret
gs
neg
cmc
and
idivb
fisubl
and
inc
fldenv
roll
adc
and
roll
xchg
jecxz
aaa
inc
sbb
lock
je
fs
out
sbb
pop
incl
pushf
add
push
push
inc
cmp
xchg
fnstsw
sbb
pop
sub
jbe
sub
add
rcll
lret
ljmp
cli
adc
js
dec
out
adc
mov
or
shl
xchg
stc
xchg
movsb
ret
je
dec
adc
cmp
push
loope
sbbb
or
push
jb
bound
test
mov
je
xor
xchg
push
and
pop
negl
and
mov
aam
ffreep
ror
ret
sbb
pusha
mov
jge
test
cmp
mov
dec
lock
in
mov
sbb
or
mov
stc
jle
popa
jo
movsb
cld
call
mov
ficoms
xchg
push
pop
test
ret
outsb
je
ss
fdivrl
push
in
inc
jo
cmpsb
xor
rolb
fnstenv
sbb
or
add
dec
mov
xorl
push
push
mov
cwtl
mov
test
mov
sbb
mov
mov
xor
lods
xchg
add
inc
push
cmp
sbb
andb
int3
mov
sub
mov
adc
ror
mov
test
lds
cld
push
shlb
std
dec
iret
xchg
and
add
and
push
add
repnz
lds
fcompl
jg
xchg
mov
jle
or
jne
push
cmp
cs
call
mov
add
mov
add
jo
inc
imulb
mov
sub
mov
scas
call
push
mov
lea
idivb
mov
data16
sub
leave
dec
xlat
fs
cmp
aas
mov
xor
rolb
std
push
jle
jle
cmp
xchg
lcall
push
cmp
in
roll
adc
cmp
cmc
or
pop
out
clc
je
dec
clc
outsl
sub
sbb
jge
rorl
icebp
int
cmpsb
nop
cmpl
dec
dec
adc
pop
movd
or
xor
jo
push
sbb
pop
xchg
stos
mov
outsl
push
or
cmpsb
loopne
push
push
sbb
pop
push
std
aad
clc
push
pop
and
arpl
ss
scas
pop
out
dec
xlat
rorb
inc
inc
add
xor
mov
call
adc
push
lock
push
jb
xor
nop
fmull
ret
push
shrb
xchg
je
add
call
lcall
push
push
inc
mov
add
mov
lods
xor
sbb
insl
fdivr
push
mov
mov
mov
push
adc
pop
xor
sbb
jbe
hlt
mov
push
sbb
mov
dec
push
or
xchg
or
push
mov
add
adcb
sbb
inc
mov
outsl
enter
or
outsl
add
push
adc
mov
sbb
in
jmp
xchg
sub
ja
imul
cld
jne
jl
add
xchg
mov
push
jg
mov
je
sub
pop
and
pop
add
xor
xchg
inc
lods
xchg
xor
add
xor
jp
add
jge
mov
xor
xor
dec
test
add
arpl
rcrb
push
jecxz
mov
xchg
adc
lea
xor
inc
ret
test
xchg
sub
fcmove
ljmp
sbb
pop
aam
addb
mov
dec
cltd
push
cli
xor
push
in
std
sub
cs
rcrb
jl
adc
pusha
and
loopne
or
lea
clc
xchg
inc
mov
ret
movsl
dec
insb
and
andl
lret
cmp
adc
loope
dec
dec
loopew
push
ret
push
dec
mov
or
adc
sbb
loop
xchg
push
shll
in
sub
insl
outsb
sarl
jo
fisttpl
push
mov
shrb
daa
cwtl
pop
js
mulb
in
jo
or
in
adc
cmp
out
and
fcompl
je
jl
jmp
inc
cli
or
bound
test
filds
sbb
addr16
mov
mov
or
xchg
std
sub
mov
shlb
or
sub
mov
faddl
sub
push
je
clc
js
mov
movsb
stc
or
adc
clc
fnstenv
testb
je
mov
and
or
lods
push
insb
cmpsb
test
adc
les
add
std
call
stc
pusha
aam
mov
jns
jg
push
cmp
xor
cld
insb
mov
jge
js
decb
ret
mov
insb
pop
or
movsl
insb
jne
andb
add
sub
jne
stos
rolb
pop
icebp
or
pop
push
insb
and
sbbl
adc
lods
dec
mov
push
adc
mov
lock
jg
shl
icebp
jecxz
cmpsl
sbb
ret
pop
sbb
push
adcl
in
jle
lret
test
cwtl
js
add
ljmp
push
xchg
dec
hlt
add
push
mov
xchg
cmp
outsb
jecxz
pop
cs
nopl
add
add
jne
adc
or
mov
sarb
dec
push
stc
sbb
xchg
scas
pop
inc
mov
add
mov
test
lds
dec
jp
lea
nop
aaa
or
movsl
out
mov
add
das
or
or
fiadds
sbb
add
mov
or
std
dec
adc
push
cmp
cld
push
inc
fisttpl
pop
sbb
add
dec
mov
cltd
inc
js
mov
sbbl
xor
sub
push
or
cmp
push
sbb
outsl
cmp
and
mov
mov
mov
adc
and
call
pop
shrd
cmp
push
add
cli
pop
mov
sbb
cld
mov
data16
sbb
add
adc
sbb
leave
jne
rclb
dec
in
mov
pop
lock
lods
mov
push
movntps
in
xor
loopne
mov
push
mov
decl
push
test
rolb
imul
push
and
inc
stos
push
inc
clc
cli
je
hlt
aad
xor
ret
sahf
ljmp
sti
jg
lock
lea
iret
test
mov
add
mov
add
sarb
clc
fbld
gs
mov
sarl
xchg
push
fsubrs
dec
adc
pop
cmc
cmp
or
lock
cs
inc
xor
add
pop
mov
xor
testb
fs
and
mov
add
push
mov
ljmp
pop
data16
jo
or
es
loopne
dec
test
in
ds
adc
jg
inc
sub
add
mov
or
dec
jo
idiv
pop
mov
sbb
add
add
mov
ja
add
mov
aaa
rorb
jp
lock
jge
je
inc
push
outsb
mov
and
es
mov
dec
mov
jae
inc
les
filds
jbe
call
test
push
adc
and
push
je
divb
pop
sub
sete
sub
dec
loopne
ret
sbb
rol
addr16
mov
mov
arpl
rep
jmp
and
sub
push
sbb
cmc
sbb
jbe
jmp
jno
int3
pop
add
mov
inc
adc
push
lcall
lahf
rorb
testb
lods
loope
cs
jnp
sbb
shl
scas
xor
rclb
add
mul
and
leave
push
pop
scas
clc
clc
call
fistpl
sbb
call
jmp
movsb
or
gs
ss
popa
pusha
and
sbb
fstps
shr
pop
jl
or
sub
cmovb
mov
xchg
pop
pop
mov
cmpl
adc
xor
dec
in
pushf
sub
movsl
les
lods
add
inc
cld
pushf
ret
push
lret
in
pop
inc
mov
or
out
gs
xor
and
or
movb
mov
ret
aad
or
cld
sub
xorb
cmp
push
pop
dec
mov
push
xor
push
movsb
mov
dec
pop
addb
jbe
sbb
lea
cmp
pop
cwtl
and
cld
gs
add
add
lret
jno
ja
sub
fcoms
mov
mov
aas
dec
or
shl
adc
pop
xchg
jns
addr16
cmp
jmp
pop
sbb
dec
movsl
dec
jns
cmp
mov
pop
xor
mov
sbb
jbe
adc
out
lock
add
dec
mov
into
xor
fisubl
jp
outsb
sbb
je
mov
adc
mov
add
call
jg,pn
aam
push
imul
pop
test
lahf
push
add
stos
insb
or
pop
aas
adc
test
jp
mov
add
inc
cmp
xor
push
push
sarb
call
cmpsb
push
imul
mov
call
push
and
mov
add
push
outsl
sub
je
sbbb
and
mov
gs
test
fbstp
inc
or
mulb
push
push
pushf
cmp
and
stos
push
add
imul
je
jnp
js
inc
sbb
aas
je
add
insl
enter
push
cmp
je
jo
adc
shrb
add
movsl
xchg
cmpb
cmp
sbb
adcb
xor
ljmpw
jmp
and
shlb
dec
and
mov
pushf
dec
sub
in
call
outsb
and
aaa
push
orl
add
or
add
mov
add
xor
sub
add
int3
xor
push
pop
sub
push
cld
cmp
adc
inc
cmpsl
jmp
xchg
arpl
lea
or
je
outsb
cmp
insl
inc
leave
inc
adc
jnp
dec
add
cld
mov
dec
add
loope
xchg
call
cmp
and
pop
iret
xor
dec
add
cmpsb
push
sub
std
jns
insl
stc
inc
cmp
clc
push
fs
out
adc
cld
pop
fstpt
xor
mov
outsl
dec
test
popa
pop
xor
and
sbbl
ljmp
and
jne
add
and
out
out
stos
mov
movsb
lcall
repz
inc
xchg
rorb
adc
mov
rorl
and
sahf
gs
and
jmp
loop
pop
aam
hlt
or
sub
push
ret
xorl
fbld
movsb
mov
jp
rolb
scas
mov
and
push
cmp
xchg
call
inc
cli
xor
inc
or
jo
int
shlb
andb
clc
psrld
sarb
add
aam
sbb
and
les
jecxz
lock
bound
adc
fmull
pop
daa
jne
inc
xlat
xor
xor
jl
les
lea
dec
xchg
call
incl
out
addl
insb
jno
mov
and
mov
mov
push
sub
repnz
cmovo
lock
sbb
aas
sub
and
loope
mov
mov
and
je
arpl
decb
xchg
xor
das
enter
test
or
push
add
stos
jl
mov
jmp
xchg
flds
loopne
out
iret
mov
and
pop
and
data16
shrb
push
pop
fldt
outsb
push
test
pop
inc
arpl
push
mov
sub
jle
out
cmp
pusha
mov
std
jb
lcall
or
add
sbb
aam
imul
inc
shl
cmc
xor
enter
lea
ret
add
mov
sbb
mov
enter
inc
mov
test
jo
clc
mov
fidivs
icebp
cmp
jl
lds
push
movsl
and
push
jecxz
push
pusha
dec
outsl
sbb
fcmovbe
divb
fisttpl
ja
adc
popl
adc
xor
ret
and
push
xchg
add
cmp
push
cwtl
cmp
and
ret
add
add
ret
mov
filds
xor
addl
dec
pop
outsl
pop
mov
inc
cmp
cmovae
push
dec
push
adc
je
mov
int3
or
aaa
sti
and
fmull
negl
sub
loopne
pop
into
ds
pop
decl
shlb
sub
sarb
jne
test
pop
push
nopl
mov
push
insl
fists
sbb
ret
loopne
insb
in
jge
ss
mov
std
xchg
push
jle
or
jecxz
aam
icebp
sbb
and
push
aad
adc
insl
in
out
push
addr16
xor
roll
push
arpl
lock
movsb
pop
mov
out
loope
test
repnz
ljmp
scas
add
xor
out
pop
std
sbb
lock
movsb
or
ret
or
sub
or
outsb
adc
push
sub
pop
sbb
cs
xor
test
aam
push
cmp
adc
dec
clc
lods
sbb
pop
fwait
push
push
inc
jmp
xchg
adc
add
cmp
dec
jge
or
rolb
fmul
push
add
jb
adc
or
pop
add
mov
sbb
fistpll
inc
inc
push
adc
cmp
decl
sahf
mov
pushf
sarl
aam
fiaddl
sahf
xor
xor
add
icebp
aaa
and
in
and
jmp
and
jg
mov
sbb
inc
jecxz
adcl
push
cmp
xchg
mov
or
mov
pusha
or
mov
ficoms
xlat
sub
xlat
push
aad
mov
sahf
in
mov
inc
adc
push
rolb
mov
addb
xor
insb
or
roll
movsl
pop
or
ficoms
add
mov
mov
fmuls
aam
mov
add
inc
jne
inc
mov
shlb
bound
jo
jns
xorb
cmc
outsl
sub
mov
negb
jnp
inc
daa
sbb
clc
or
test
or
insb
data16
mov
push
add
test
jbe
sub
aam
addb
pop
inc
push
mov
pop
dec
cmp
decb
pop
push
xor
push
push
xlat
sar
add
pop
mov
mov
in
jge
xor
loopne
and
test
or
js,pn
imul
xlat
pop
push
or
mov
inc
cmp
inc
and
into
mov
xchg
insl
xchg
push
leave
in
mov
push
ret
xchg
push
jge
and
fmuls
xor
push
mov
lea
addl
add
xor
and
mul
jmp
dec
stos
or
je
ret
push
xchg
mov
bound
mov
inc
pop
je
mov
pusha
roll
sahf
enter
cmp
aad
push
add
add
lods
pop
and
push
mov
sbb
add
mov
cwtl
js
push
sbb
dec
rclb
jle
jbe
push
add
or
incl
xchg
sub
data16
shrb
cmp
aas
or
loopne
push
jl
clc
xor
fmuls
insl
mov
fs
push
sbb
or
es
adc
and
sahf
pop
mov
lret
test
test
or
mov
fs
mov
push
sarb
xor
dec
lods
nop
enter
pop
jge
add
sbb
or
icebp
loop
add
decl
add
or
pop
in
jbe
pop
add
jb
mov
jl
dec
test
push
sub
lea
ds
or
push
icebp
sbb
jmp
negb
pushl
jae
mov
sbb
bound
nop
mov
xor
dec
mov
imul
xor
mov
cmp
add
leave
test
dec
xor
incb
or
aaa
int3
adc
mov
pushl
push
sbb
imulb
sti
sbb
push
daa
cmp
pop
in
aad
adc
fdivrs
and
add
gs
or
cmp
dec
aaa
jo
pop
sqrtps
inc
cmp
mov
xchg
add
mov
or
mov
jo
add
clc
aam
leave
push
sub
scas
lret
push
rolb
dec
jp
fcomip
cmp
cmc
adc
mov
pop
mov
jp
sbb
add
and
add
and
sbb
call
inc
mov
mov
pop
push
jmp
jp
xchg
call
popf
jp
mov
fdivs
mov
mov
mov
or
repz
je
cli
stos
mov
sub
lret
ja
cmp
add
xor
mov
sbb
movsb
inc
xor
sahf
mov
lea
mov
xchg
cmpb
xor
mov
lahf
add
xor
dec
mov
dec
xor
clc
lock
in
enter
add
jbe
pop
mov
mov
repnz
push
sarl
jbe
or
cli
iret
push
mov
xor
inc
es
xor
aam
test
fxch
cmpsb
push
mov
push
jo
sbb
or
mov
fs
or
scas
inc
aam
sti
or
rol
data16
push
inc
pop
adc
stc
jp
add
jbe
adc
add
jmp
in
sarb
mov
adcl
push
mov
movsb
mov
mov
mov
lds
fst
adc
mov
call
push
adc
xchg
ss
nop
xchg
mov
and
out
arpl
adc
sahf
test
mov
mov
sub
lods
dec
cmpb
shl
pop
sbb
jecxz
pop
and
icebp
mov
add
xchg
jo
aas
mov
xchg
mov
adc
int3
cmpsb
push
pop
cwtl
in
add
fldt
clc
call
stos
fisubs
mov
pop
cs
sarb
jge
and
out
xor
sub
and
sarb
mov
sub
in
xor
xchg
addr16
adc
mov
mov
jbe
xor
xor
dec
inc
das
orl
rorb
add
mov
jne
stos
xor
loopne
fs
add
into
test
xchg
mov
jl
xchg
push
xchg
cld
fisttpll
mov
cmp
lea
mov
sub
js
mov
and
jl
push
mov
jl
incb
pop
add
mov
cmc
std
fs
je
mov
push
fcomps
adc
pop
mov
cmp
or
int
pop
sbbb
stc
mov
pop
and
sbb
out
dec
jmp
dec
push
sub
pusha
or
push
fcoms
loopne
xor
ds
xor
cmc
loopne
adc
data16
push
incb
mov
out
and
push
sub
cs
mov
mov
push
dec
add
loop
sub
decb
jle
pushw
enter
mov
aad
stos
ljmpw
outsl
ret
add
sub
pop
jne
data16
arpl
adc
mov
cmc
call
flds
les
sahf
lea
mov
jae
jle
rcll
pusha
je
jp
andl
out
mov
mov
divb
inc
mov
sub
push
roll
sbb
cmp
ss
fadds
jno
jb
orb
insl
xor
shlb
sub
xchg
jae
in
out
nop
jle
or
decb
or
fldl
pop
mov
add
test
or
inc
mov
xchg
test
loopne
push
hlt
or
mov
fimuls
push
jp
cli
cmpl
enter
add
loop
fcoms
js
es
nop
hlt
int3
dec
incl
test
pop
int
jmp
int3
push
inc
mov
add
les
loop
lods
repz
mov
inc
push
pop
das
ret
dec
inc
data16
test
sub
add
std
mov
rorb
lock
add
movsb
push
push
xor
jl
add
das
and
mov
and
sub
jns,pt
jle
inc
hlt
and
add
imul
inc
test
lret
inc
xor
sbb
jmp
lea
rcll
aad
and
leave
movsb
bound
sbb
neg
cmp
movsb
loopne
or
adc
adc
test
stc
or
addl
sti
xor
ret
les
std
in
push
xchg
loope
jl
into
test
pop
and
test
adc
rclb
cli
pop
mov
mov
pop
cld
add
pusha
fdivp
pusha
lock
pop
add
addl
idivb
mov
hlt
or
mov
adc
sbb
dec
pushf
mov
xchg
imul
push
cmp
out
cmpsb
out
inc
jbe
stos
inc
or
decb
add
and
and
pop
mov
mov
rolb
push
inc
sbb
out
inc
pop
jbe
pop
xor
gs
cmp
push
jmp
test
push
jns
inc
aas
mov
push
pop
imul
test
push
and
clc
scas
scas
pop
adc
cwtl
ret
jle
incl
jbe
cmc
cltd
jmp
pop
jl
inc
leave
mov
js
enter
push
pushl
push
dec
add
cmp
js
or
andb
sbb
push
jb
fsubl
je
aas
push
adc
add
pusha
daa
lods
mov
inc
pop
jmp
push
loopne
inc
mov
out
inc
adc
pop
push
xor
scas
and
inc
jo
int3
xor
add
in
cmp
inc
fidivrl
push
inc
scas
popa
push
lea
sbb
loop
and
shrl
jae
and
mov
sbb
lahf
dec
mov
adc
xchg
xor
xchg
inc
aas
add
mov
sub
push
or
clc
ror
pop
push
add
mov
cli
jp
incb
inc
mov
dec
aam
rorb
mov
adc
push
add
add
jmp
mov
mov
jge
mov
mov
adcb
lock
or
in
sbb
cs
or
and
sbb
or
je
movsl
add
add
stos
test
sbb
data16
inc
xor
les
inc
push
xor
mov
int3
call
hlt
sbb
dec
mov
mov
sub
or
sub
mov
mov
call
outsb
inc
test
in
out
push
fdivr
or
xor
popa
and
jp
daa
mov
out
or
loopne
mov
push
js
lea
mov
int
stc
nop
leave
cmp
sahf
adc
or
addr16
mov
cmpsl
xor
aam
test
xor
and
cld
int
std
ss
aas
pop
push
cmp
add
pop
and
mov
jmp
repz
fcomps
shrb
jge
call
sub
int3
pop
mov
mov
or
loop
scas
xor
push
pop
or
or
and
cwtl
add
dec
sbb
inc
call
or
mov
or
sbb
mov
jg
jmp
data16
mov
pop
hlt
add
nop
and
mov
leavew
outsb
test
lahf
cs
out
or
add
in
xor
aam
ss
int3
ret
cmp
in
je
lsl
push
std
add
or
popf
pshufw
scas
loopne
push
clc
mov
int3
mov
sbb
jb
test
and
leave
shll
or
add
push
mov
push
and
xchg
mov
push
sysret
insl
call
dec
mov
push
ficoms
clc
jg
adc
fs
push
divl
push
sbb
rolb
mov
dec
push
xor
xchg
clc
insb
push
scas
clc
lahf
scas
sbb
mov
xor
lea
ss
insl
adc
cmp
pop
xchg
push
popf
adc
mov
add
jge
test
div
mov
push
push
shlb
mov
rol
jmp
fsubp
rcl
jmp
lea
lea
mov
inc
xor
repnz
pop
lea
std
dec
mov
insb
pop
mov
sbb
inc
add
seta
adc
or
mov
add
in
jmp
xchg
jb
fcoms
cli
add
jl
loop
jb
bound
inc
mov
test
aad
daa
sbb
push
repz
or
js
loope
mov
cmp
movl
leave
dec
cld
xchg
cmp
stc
mov
push
or
add
cmp
addl
cmpb
roll
int3
xor
mov
cld
in
popa
mov
adc
add
hlt
stos
outsl
clc
shld
adc
lods
lea
push
pop
add
in
cld
adc
xchg
movsb
or
cmpl
push
sti
bound
push
mov
add
push
aas
out
dec
add
insb
push
mov
nop
sbb
sti
pop
and
inc
pushl
adc
and
sub
mov
and
inc
gs
fidivl
xlat
sbb
or
xorl
push
outsb
cmpsl
cmp
adc
inc
rcll
pushf
mov
dec
push
push
ficomps
lock
aas
adc
push
mov
divl
aaa
and
or
sbb
add
sahf
push
xchg
mov
shlb
adc
lds
or
subb
add
icebp
inc
cmp
sub
and
push
lods
xchg
lods
sti
jnp
add
push
cmc
xor
adc
mov
push
or
scas
dec
push
ja
in
or
test
push
mov
es
sbb
sub
mov
fs
sub
loope
popa
test
xchg
push
mov
adc
add
adc
and
mov
rclb
test
xchg
ret
hlt
jo
imul
loop
fadd
in
pop
jle
sub
int3
lea
shlb
pushf
int3
mov
movsb
or
cmp
ret
mov
push
inc
add
mov
repz
xor
clc
notb
sbb
add
inc
and
les
je
dec
sbb
in
ret
inc
dec
mov
and
push
popa
std
add
mov
jno
adc
lret
add
xchg
or
mov
inc
jae
fs
adc
mov
ja
sbb
push
or
xor
jmp
mov
and
loope
movb
fwait
int3
out
insb
dec
mov
dec
add
je
aas
xor
clc
adc
adc
aas
xor
loopne
ljmp
mov
mov
add
fists
sub
loop
cmpl
sbb
loop
cmp
or
cmpsb
adc
pushf
testl
testb
test
call
xor
gs
xor
or
sti
pop
or
fs
cmp
push
adc
ljmp
test
pcmpgtw
dec
add
jg
xchg
lds
mov
ljmp
xor
xor
adc
mov
xor
mov
sub
inc
jne
call
outsb
inc
and
xor
fidivrs
fstpl
pusha
sub
push
fiaddl
mov
or
and
xchg
push
mov
pop
or
pmaxub
push
inc
jp
fnstcw
insl
jl
xor
clc
in
loopne
fisttpl
add
inc
ret
push
xor
and
mov
and
jp
pop
test
je
jb
daa
inc
pop
fcomip
repnz
pop
push
gs
push
pop
push
pop
inc
imul
in
je
and
or
adc
lods
mov
or
push
sub
dec
cld
in
aaa
cmpl
mul
fistl
jbe
cmp
mov
push
popf
out
bound
inc
xchg
pop
sub
in
xchg
push
cld
insl
loope
jge
inc
xchg
mov
push
or
dec
popa
lods
xor
mov
shrd
mov
lea
add
mov
pop
or
add
shlb
pop
mov
push
mov
ljmp
jecxz
cmp
gs
je
sbb
or
jp
add
pop
sbb
or
movsl
push
mov
and
xor
xor
jmp
cmp
sub
stos
mov
loop
jae
jne
aam
mov
mov
jae
and
imul
lds
pop
xchg
adcb
jl
cmpsl
adc
outsl
lock
cmp
push
dec
inc
je
mov
or
ds
mov
sbb
cmpsb
push
and
jb
add
xchg
mov
inc
inc
pushf
jb
mov
push
jne
shlb
call
mov
std
add
xor
pop
ret
loopne
or
movsl
cmp
sbb
jo
pop
jo
pop
mov
lock
je
test
rolb
dec
jge
jl
idiv
int
jbe
jp
push
stos
fmuls
jle
out
and
jns
or
hlt
mov
xchg
pushf
enter
mov
xchg
gs
nop
adc
xchg
pop
dec
pop
dec
test
add
adcl
sbb
mov
sub
inc
popa
add
adc
js
xor
bound
loopne
add
test
pop
add
pop
xchg
clc
cmpsl
push
ret
test
sbb
cmpb
int3
add
ret
ret
data16
leave
and
cmpb
fs
aad
clc
mul
push
mov
sbb
lock
mov
fwait
pop
push
or
jne
push
cmp
call
jge
add
enter
pop
aad
cmp
mov
lret
ljmp
sub
ljmp
out
loopne
cmpsl
aam
stos
out
test
movsb
push
inc
mov
sti
push
xor
clc
inc
repnz
adc
mov
testb
cld
int
mov
enter
call
cmp
test
jbe
and
lea
cmpsl
sub
sar
fwait
xchg
mov
and
or
xchg
aad
sub
test
dec
or
push
insl
add
push
pop
cmc
ljmp
cwtl
or
es
push
mov
push
fadds
jmp
test
cmp
loopne
jle
imul
inc
int3
add
ljmp
shl
pop
aam
sahf
adc
and
inc
call
push
sbb
sbb
mov
or
lock
hlt
insb
pop
jg
sub
outsb
cmp
or
pusha
pop
push
xor
cmp
lock
fisttpl
push
scas
pushf
ret
jne
xor
pop
pop
scas
inc
sbb
outsl
cmc
fbstp
test
pop
test
fwait
cmp
jmp
add
je
sbb
mov
aas
stos
std
mov
cs
fmuls
pop
mov
jmp
mov
enter
jmp
pop
add
add
sub
shll
aam
loope
pop
add
push
shrl
inc
adc
mov
rolb
push
ss
or
sbb
mov
push
pushf
pusha
mov
lea
or
inc
cmp
icebp
movsl
sub
cmp
dec
inc
cmp
adc
mov
sub
xor
or
outsl
push
pop
cs
test
call
sbb
ret
inc
adc
pop
mov
add
rcrl
lock
mov
push
fs
gs
rolb
mov
add
js
aam
outsb
xor
xor
std
test
ror
subl
fs
sarl
and
add
mov
mov
adc
or
push
les
mov
add
outsl
jne
andps
in
mov
push
inc
inc
add
push
fsubrs
jl
inc
rorl
call
stos
inc
adc
cmp
inc
or
sbb
aaa
pusha
sarb
add
int3
inc
cmp
inc
jo
aaa
pop
adc
add
adc
adc
enter
adc
in
or
shll
test
decb
dec
orb
adc
ret
xor
xor
or
sub
mov
inc
mov
pop
push
and
cmp
mov
out
je
ret
push
mov
test
push
dec
pop
push
test
mov
xchg
or
inc
pop
lea
ljmp
mov
pop
orl
enter
mov
pop
xor
test
shlb
cmpsb
mov
xor
push
clc
adc
pop
bound
iret
and
orb
pop
das
outsl
xor
int3
push
or
icebp
cmp
mov
jno
mov
add
daa
fadds
mov
add
pmulhuw
or
and
mov
mov
mov
inc
or
cs
jmp
hlt
mov
sub
cmp
inc
jmp
cmp
inc
xor
pusha
adc
in
add
push
adc
loope
add
fwait
enter
xor
inc
pop
jmp
hlt
or
or
mov
rorl
jb
push
cmp
loopne
push
jmp
lods
or
daa
pop
add
dec
add
lock
push
dec
int3
lret
out
xchg
dec
or
jne
inc
add
cmp
mov
rol
mov
add
jbe
inc
cmp
sbbl
stos
mov
adc
mov
dec
inc
loopne
pop
mov
ficoml
ret
add
sbb
jb
lock
jle
je
xor
sahf
pop
push
ret
mov
mov
call
stos
pushf
cmp
dec
pusha
sbb
ss
push
push
cmpb
leave
cmp
and
cmpsb
push
adc
adc
push
outsl
imul
pop
dec
enter
or
jge
rol
push
adc
scas
mov
pop
add
inc
adc
adc
push
mov
repz
mov
pop
mov
and
xlat
mov
jg
ds
mov
in
and
int3
sub
cli
outsl
push
cltd
test
cld
mov
nop
push
mov
cmp
mov
rcrl
icebp
dec
cmp
les
xor
mov
test
mov
mov
mov
leave
pop
add
call
mov
test
call
adc
pop
fcoms
cmpsb
icebp
loopne
mov
add
paddd
lcall
test
sbb
das
ljmp
mov
mov
sub
sbb
and
stos
inc
sub
xchg
mov
add
aas
push
aam
xor
xor
mov
fisttpl
data16
pop
inc
push
mov
mov
popa
inc
je
and
sbb
add
pop
inc
inc
xor
xchg
and
sub
out
xor
pop
out
cmp
sbb
and
ret
xor
repz
lret
pop
out
test
ljmp
or
adc
mov
and
mov
call
mov
ljmp
inc
ja
popa
cmp
jle
inc
jmp
dec
dec
or
jo
adc
or
and
stos
hlt
xchg
outsb
loope
je
push
pop
push
les
adc
movl
pop
fs
sub
aaa
mov
mov
pop
or
pop
push
ret
rclb
push
repnz
add
call
adc
push
loop
jmp
cmp
cmc
rorl
add
rcll
push
cmp
mov
lea
inc
aam
loope
fsubl
dec
repz
adc
jmp
adc
scas
cld
or
outsl
jge
nop
outsl
xchg
mov
ss
js
cmpsb
rolb
push
shrb
lock
orb
inc
subl
cmovbe
pop
icebp
pop
and
mov
mov
inc
and
mov
sbb
dec
movsb
cmp
push
cmp
jbe
jg
call
mov
inc
hlt
push
enter
pop
loop
aaa
adc
outsl
sub
lock
ret
rcrl
mov
js
add
adc
mov
inc
call
pop
sbb
pop
enter
inc
clc
cld
sub
mov
push
movsb
push
jbe
xor
mov
dec
sbb
fsubs
mov
dec
aam
fs
call
shr
xchg
es
jp
pop
sti
jge
inc
cmp
js
test
idiv
or
stos
gs
pushf
das
push
cmp
test
mov
in
faddl
adcl
xchg
or
adc
and
daa
jno
ret
cwtl
mov
pop
dec
mov
cmp
mov
decl
movsl
popa
mov
clc
add
enter
dec
push
aas
add
sti
or
fs
xor
or
dec
xchg
daa
mov
addb
inc
add
push
pop
pop
test
add
aam
xor
jae
adc
rorb
add
fs
inc
add
adc
mov
push
adc
lea
movsb
call
jle
das
adc
movl
jl
mov
aas
js
mov
lock
test
pushf
cld
sub
test
clc
popl
andb
scas
mov
and
rcrl
cmpl
stos
mov
push
sbb
jo
jo
into
subb
add
sbb
adc
lret
xchg
inc
cmp
mov
addr16
jnp
adc
ret
das
lea
scas
jo
mov
hlt
je
aas
pop
dec
push
cmpsb
mov
mov
fiaddl
mov
adc
aas
xorb
int3
pop
mov
jnp
fsubr
push
push
and
push
lock
jl
andb
insl
test
or
add
pop
test
mov
and
mov
mov
or
dec
addb
stos
mov
xor
in
xchg
add
mov
clc
fcompl
push
pusha
push
test
cmp
mov
ret
push
inc
mov
neg
enter
ja
icebp
aam
and
and
push
or
xor
nop
xorb
mov
cwtl
cmpb
test
jge
push
mov
das
test
ljmp
lcall
mull
js
mov
adc
pop
mov
xchg
filds
mov
ret
xchg
cmpsl
ljmp
lock
cmpsb
repz
fcomps
inc
inc
mov
pushf
xchg
std
xchg
cmpsl
push
fs
jo
movsb
lcall
jg
jmp
inc
inc
ljmp
test
add
mov
cld
out
and
je
fmuls
call
or
jle
or
xchg
sub
mov
in
sub
nop
lock
scas
cmp
cmpb
inc
loope
in
cltd
mov
imul
cld
in
adc
ja
loopne
add
mov
adc
std
popf
ficoms
jb
addr16
mov
test
sbb
in
test
mov
std
sbb
data16
add
dec
inc
je
dec
shrb
fs
xor
outsl
test
fnstsw
add
or
ljmp
aam
mov
lcall
and
push
rorl
push
lret
inc
gs
adc
or
mov
add
push
stc
push
xchg
lcall
or
adc
add
or
jmp
sub
cmp
clc
push
ljmp
cmpsb
repz
cmc
dec
add
jo
sahf
xchg
call
mov
lods
mov
inc
cld
adcl
jle
lods
orl
inc
xchg
lds
and
insb
add
mov
jg
jo
adc
adc
add
arpl
movsl
pushf
push
lea
pop
sub
fwait
adc
sbb
jge
push
or
stc
outsl
daa
mov
and
push
or
outsl
xor
lret
xor
cmp
test
or
call
xchg
loop
jns
xor
adc
pusha
push
ret
adc
push
push
gs
idiv
mov
adc
dec
dec
fucomp
mov
or
mov
mov
cld
fs
jecxz
sbb
add
push
and
pop
push
call
loope
icebp
xor
or
test
inc
clc
insl
aam
mov
decb
cmc
fldt
pop
scas
or
loope
data16
pop
subb
es
inc
roll
mov
fisttpll
push
dec
mov
fisttpll
inc
incb
subl
fwait
cmp
insl
js
call
lods
jne
push
adc
mov
mov
repz
scas
jns
call
loope
fdivrl
xchg
push
xchg
cmpsb
movsb
mov
mov
negb
jne
call
cs
mov
sub
mov
pop
push
jp
adc
dec
lock
rolb
outsb
pushl
push
push
fmul
add
hlt
pop
nop
mov
add
fstpt
jb
cmp
push
test
push
cld
mov
sub
icebp
call
pop
int
inc
inc
and
adc
mov
dec
inc
inc
adc
inc
push
pushf
mov
mov
add
rorb
push
cmp
mov
xor
push
xor
test
or
aas
xchg
callw
adc
or
or
pop
test
imul
pusha
ret
and
mov
pop
sub
add
sar
pop
adc
pop
xchg
in
inc
sub
sub
adc
sub
fs
je
leave
mov
lods
lahf
gs
sahf
dec
cmp
jg
adc
jl
push
xchg
push
popa
mov
cmp
mov
xchg
xchg
hlt
sub
cld
mov
cmpb
push
jne
movsb
ja
or
incb
adcb
test
ret
cmc
push
or
jne
jb
mov
incb
mov
je
loopne
repnz
push
lods
cld
lahf
sub
dec
data16
jmp
mov
jns
xor
cwtl
cmp
adc
sub
out
jb
inc
mov
add
or
push
ret
call
mov
lret
jbe
and
ss
fsubl
bound
inc
dec
push
mov
jbe
mov
outsb
xchg
fcmovnb
test
adc
stc
in
call
call
add
addl
add
pop
stos
pop
sub
fmull
mov
xor
mov
dec
in
gs
les
clc
scas
mov
add
sbb
roll
jne
out
push
mov
call
sbb
pop
pop
int3
jns
mov
rcl
lcall
in
clc
push
ret
add
pop
adc
add
pop
movl
jo
jbe
testb
jo
sahf
adc
aas
ret
add
push
inc
dec
enter
jnp
sub
sub
jmp
outsb
jbe
dec
loope
int3
pop
xchg
mov
pop
xchg
outsb
cmpsl
dec
mov
jo
pop
add
decb
sub
cmp
push
adc
inc
testb
mov
call
pop
fisttps
mov
xchg
mov
jge
sbb
clc
xor
pop
movl
sbb
mov
add
push
pop
out
gs
pushaw
hlt
fcmove
push
inc
addl
push
adc
add
mov
sub
aam
add
insb
sbbl
mov
pop
nop
rorl
lock
faddl
rcrb
mov
in
cmp
popl
fldl
loop
ljmp
icebp
push
clc
mov
pop
pusha
mov
in
fs
mov
adc
cli
and
enter
rolb
jp
mov
dec
push
dec
incb
xor
rclb
adc
jbe
cwtl
loope
sbb
fcoml
lahf
mov
es
adc
add
int3
add
add
add
lret
aam
push
jmp
push
mov
negb
jno
daa
mov
mov
inc
test
call
out
add
dec
enter
jne
xor
inc
xor
sbb
idivb
dec
fs
ds
stos
jo
cmc
xor
sub
jg
mov
call
push
push
mov
mov
push
sar
lahf
or
mov
push
xor
xor
out
mov
and
jo
jge
inc
pop
push
xchg
inc
mov
je
mov
pop
roll
in
sbb
jmp
aad
gs
add
and
pop
and
sbb
jl
ds
gs
jge
mov
push
inc
iret
xlat
pop
and
add
adc
push
test
mov
mov
es
call
or
decb
mov
or
inc
and
rorb
adc
push
add
lock
jae
sbb
mov
insb
cld
decl
mov
cmc
fisubrl
mov
js
das
enter
cmp
mov
leave
jne
data16
mov
lea
das
inc
mov
rcrb
test
sbbb
sub
jo
xor
scas
mov
pop
aam
aam
xchg
dec
xchg
decl
add
xchg
pop
cmp
je
add
mov
into
andb
push
inc
xchg
xor
fcompl
mov
insl
je
retw
cmp
insb
test
insb
aam
mov
push
or
call
aam
popf
mov
adc
and
pop
shlb
sub
xchg
in
inc
pop
insb
jecxz
cmpsl
or
and
jge
pop
sbb
idiv
sbb
cwtl
xchg
push
adc
fs
cmpsl
sbb
push
sbb
daa
nop
adc
sbb
mov
and
in
sub
pushf
pop
clc
xor
push
cli
insb
scas
ret
cld
add
rorl
mov
fsts
pusha
leave
xchg
pop
jecxz
inc
mov
mov
mov
pop
lsl
insl
cli
mov
lcall
fmull
cld
outsl
data16
ret
imul
scas
insl
pop
add
loope
mov
mov
add
shr
push
je
push
leave
push
mov
dec
inc
pop
jmp
ret
cwtl
je
or
insb
dec
jge
call
sar
shrb
mov
add
fsubp
ss
jp
add
rorl
xor
outsl
sbb
loope
movsb
rol
xchg
xor
int3
push
faddl
xchg
mov
pop
sub
mov
subb
xchg
jp
addl
jne
xlat
data16
or
add
mov
push
cmpl
push
adc
mov
fwait
push
aam
lods
andb
add
xor
mov
push
negb
outsl
jbe
aas
loopne
negb
mov
mov
push
jl
fs
cli
je
aam
cmp
test
scas
inc
std
cmpsl
pop
hlt
sub
jle
mov
mov
lods
pop
sub
mov
mov
jmp
push
cld
int3
add
shlb
dec
cmc
call
xlat
insb
aaa
jecxz
les
adc
sbb
push
or
movsl
mov
and
leave
js
mov
popf
push
jle
adc
or
in
ja
fwait
aam
adc
loopne
mov
mov
xchg
xor
inc
mov
adc
cmp
adc
pop
sbbl
or
mov
mov
rclb
inc
adc
jl
inc
aas
inc
dec
jo
mov
inc
cli
push
or
pop
add
jo
insl
adc
inc
xor
add
imul
push
out
or
mov
movsb
xadd
movsl
lods
call
add
jmp
ret
sbb
in
int
push
and
push
mov
add
test
mov
xchg
or
lods
test
cmp
mov
push
clc
pusha
add
aad
decb
inc
test
mov
xor
dec
mov
fistl
dec
aas
movsl
fs
adc
jb
jb
pop
gs
lods
stc
and
pop
pushl
int
ja
sub
xchg
jne
addl
int3
pop
xor
scas
xorb
jne
adc
jge
and
pop
sbb
inc
jge
sub
lock
loope
mov
imul
or
pushl
pop
sbb
movl
sbbb
inc
mov
xchg
les
roll
push
and
outsl
adc
pop
push
push
sub
lock
mov
or
push
aad
inc
add
push
sbb
mov
push
mov
mov
push
jne
mov
cli
jne
inc
cmp
out
sbb
roll
mov
mov
clc
fdivrs
or
fbld
cwtl
adc
lea
add
cwtl
stos
int3
dec
and
nop
xlat
call
es
xor
inc
push
jecxz
adc
add
xor
dec
fistl
icebp
jg
fwait
xchg
push
sub
mov
dec
push
inc
lds
xor
and
mov
inc
scas
add
inc
xlat
jmp
mov
dec
ja
push
and
sub
jge
adc
mov
cmp
add
in
movsb
mov
xor
jl
into
dec
sbb
mov
inc
mov
add
adc
inc
lods
add
xor
jge
ret
adc
and
push
xchg
test
push
push
xor
mov
sbb
sbb
pop
loope
subw
outsb
jmp
jle
push
jle
sbb
shlb
add
inc
adcl
cmc
pushf
leave
add
xor
fnstsw
sar
dec
outsl
cmpsb
hlt
scas
les
add
dec
mov
sbb
or
das
adc
inc
sub
cmp
mov
or
add
cmp
enter
adc
mov
popa
adc
ret
out
or
lock
lea
push
add
pop
jmp
in
je
push
sbbl
sub
inc
out
gs
dec
enter
leave
cmp
je
in
or
inc
and
stc
push
jbe
sti
add
jae
push
mov
clc
fildll
sbb
xor
mov
lock
cld
outsb
lds
aaa
es
cld
into
test
sahf
int3
rcrb
les
out
icebp
bound
xchg
rclb
push
test
std
dec
push
ret
inc
fucomi
pop
pop
xor
or
xchg
push
es
add
add
sar
push
bound
cmpsb
xor
adc
mov
ss
adc
dec
xchg
mov
mov
and
je
xor
xor
jl
enter
and
pop
inc
je
cli
int
push
nop
xor
mov
mov
mov
sbb
sahf
lods
ss
clc
xlat
pushl
adcl
mov
cmp
jne
adc
into
mov
roll
cs
push
jmp
push
nop
fcompl
bswap
subl
ljmp
pop
pusha
aam
ret
test
inc
clc
adc
imulb
outsb
sub
ret
in
idiv
daa
ljmp
xlat
mov
pusha
loope
sub
stos
mov
addb
xchg
rorl
sbb
inc
lea
adc
mov
lock
popf
movsl
addb
daa
add
sbb
cmc
outsb
rep
aas
mov
sub
mov
fdivl
insb
mov
fildl
pop
mov
cmp
cmpb
xchg
push
test
push
addb
fiaddl
loop
push
add
xor
loopne
loop
in
mov
or
dec
out
cmp
dec
scas
stos
popf
rolb
xor
int3
jp
pop
es
lea
inc
cld
idivb
fisubs
jo
je
fcmovbe
or
or
data16
cmpsl
sbb
xchg
lret
ljmp
pop
add
add
sbb
mov
push
inc
or
mov
je
push
es
popa
ror
cmp
loop
xor
xor
jno
mov
dec
movsb
mov
xor
scas
movsb
dec
je
adc
pop
or
push
pop
inc
inc
pop
mov
inc
divl
xor
or
push
adc
add
pusha
xor
jo
mov
sbb
fldenv
and
ret
test
cmp
mov
add
adc
clc
iret
xchg
lock
dec
mov
and
sub
xchg
mov
dec
xor
jecxz
mov
dec
xchg
pop
test
aam
shlb
mov
mov
and
shlb
fbstp
test
adc
movl
popa
es
mov
aad
dec
test
add
sub
call
mov
or
jle
pop
out
sbb
xchg
insb
shr
add
adc
add
mov
adc
cmp
sarl
sbb
inc
inc
inc
inc
mov
xor
add
cld
ds
dec
test
inc
mov
jmp
xchg
daa
add
jae
push
inc
pop
sub
dec
sbb
rcrb
push
adc
xchg
cmp
add
mov
insl
add
aad
mov
inc
mov
mov
or
or
mov
stos
jg
xor
inc
mov
or
inc
ss
stos
je
clc
and
cmp
add
nop
mov
mov
xchg
rcrb
jne
dec
and
pop
int
test
sahf
ret
and
adc
les
ret
xchg
mov
pushf
outsb
nop
in
mov
pop
add
and
decl
mov
push
or
sbb
cmpsb
pop
jmp
xchg
setbe
pop
test
insb
or
aaa
pop
add
mov
push
sahf
sub
mov
fsubrs
xor
inc
xchg
clc
jmp
loopne
inc
mov
fimuls
and
xor
pop
jg
sti
mov
mov
inc
xor
das
je
sub
aas
push
and
scas
aam
lock
out
lods
pop
adc
mov
out
fsubl
into
mov
rolb
sub
add
and
jl
inc
mov
mov
sbb
push
into
loop
xor
les
sub
jmp
je
in
clc
lcall
mov
xchg
mov
and
sbb
and
xchg
decb
inc
pslld
fs
hlt
mov
adc
data16
cmp
movsb
push
mov
adc
andl
decl
cld
ret
and
inc
jmp
test
pop
fmul
xchg
pop
lahf
xor
add
stc
aas
rolb
add
movsb
pop
inc
add
int
cmp
cmp
mov
dec
sub
movsb
xor
int3
mov
sti
xchg
in
add
inc
or
fwait
decl
mov
arpl
xor
mov
out
or
sbb
lock
xchg
or
add
out
or
fildll
outsb
insb
jb
adc
inc
ljmp
cmp
dec
jge
pushf
or
inc
ret
test
lods
dec
lods
or
mov
ret
push
sbb
scas
mov
jmp
push
add
inc
data16
or
cli
js
lods
movntps
xor
sbb
adc
out
pop
add
decb
sub
adc
test
mov
hlt
clc
mov
push
pop
or
lret
and
call
push
addr16
or
test
ja
ss
lret
cmpsb
and
xor
or
mov
mov
push
push
inc
and
xor
adc
mov
pop
add
and
lock
mov
aaa
inc
sub
pushl
out
addb
jmp
xor
sahf
or
rcrb
cmpsl
adcl
lea
jg
movb
and
cmp
jne
inc
pushf
jmp
xchg
shlb
outsl
rolb
out
push
or
push
addr16
mov
push
test
icebp
push
test
sub
insb
push
fs
nop
fdivs
xchg
ret
and
pop
sub
push
adc
push
sbb
test
adc
je
pop
mov
mov
enter
inc
cli
jge
sar
sbb
push
rcll
mov
push
push
jbe
add
mov
lret
aam
jp
lcall
mov
mov
lock
push
mov
lea
ret
pusha
mov
mov
out
test
sub
mov
jecxz
scas
and
data16
fldenv
popa
adc
inc
rorl
sub
add
adc
mov
fcoms
add
int
in
sub
lcall
dec
jle
mov
dec
mov
and
pushl
mov
movsl
fs
scas
or
ja
orl
xchg
loopne
add
mov
dec
loope
lock
cli
shr
dec
add
js
add
test
push
mov
sbb
std
int
jb
call
pushf
sbb
mov
addb
sbb
jno
pushf
push
jne
lcall
call
dec
xor
add
cmpb
add
mov
push
test
adc
js
inc
std
inc
xchg
fdivr
insb
cmp
lret
inc
ljmp
cmpl
cld
xchg
add
cmpb
rolb
mov
push
cmp
cwtl
dec
inc
enter
add
aam
adc
or
cld
mov
shll
inc
test
xor
mov
jg
cmp
and
ret
add
fistps
cmp
call
jg
and
add
or
inc
ja
call
cmp
pusha
test
push
dec
fcoml
pop
std
je
jmp
test
shlb
test
sar
call
divb
lret
xor
push
or
xorl
aaa
mov
leave
add
test
jg
das
push
popl
lcall
push
jo
ret
clc
lds
inc
jne
jmp
cmp
xor
mov
or
outsl
ljmp
mov
mov
je
imul
jmp
inc
and
loop
or
push
enter
mov
mov
push
mov
leave
loopne
or
pushf
lea
sbb
enter
sub
test
cmp
inc
cmp
enter
mov
jmp
nop
mov
xchg
jo
or
in
push
enter
sub
je
mov
cmc
or
jnp
mov
rclb
call
hlt
add
por
insl
pop
ljmp
add
insb
dec
in
je
pop
aam
pop
icebp
sub
test
pop
sbb
push
push
mov
or
leave
dec
aas
fdivrl
push
in
xor
adc
jp
enter
fimuls
inc
stos
mov
mov
test
jb
mov
push
incb
xor
enter
or
fcom
add
pop
xlat
add
pop
mov
mov
inc
add
out
stos
push
outsb
dec
je
add
dec
mov
sahf
mov
push
rorb
adcb
lock
pop
dec
mov
inc
jl
xchg
xor
scas
lock
sub
inc
cmp
pushf
test
sub
nop
or
pop
dec
push
cmpsb
or
or
fmul
fs
jb
add
or
and
pop
sub
xor
scas
imul
das
mov
or
pushl
frstor
testl
add
js
mov
ret
pop
inc
inc
push
inc
add
sub
push
nop
loope
add
mov
subb
lock
mov
and
xlat
add
dec
pusha
mov
adc
into
and
mov
and
das
pop
mov
leave
mov
dec
add
int3
inc
xadd
les
dec
aaa
cmpsb
iret
leave
rcrb
jl
pop
lahf
jne
adc
add
lret
scas
hlt
jns
jbe
in
adc
mov
sbb
and
lret
lahf
rorl
or
inc
xchg
pop
mov
and
subb
jg
jmp
inc
xchg
aam
mov
call
and
in
into
je
add
sbb
pop
push
insb
sub
lods
scas
ret
popa
cmpb
es
clc
lods
mov
xor
setb
popa
call
push
adc
xchg
add
and
sbbb
imul
lea
mov
rcrl
mov
jbe
push
add
add
outsb
sbb
and
gs
orb
push
mov
ljmp
loopne
inc
pop
inc
mov
and
adc
dec
push
add
add
std
and
sbb
pop
call
pop
mov
inc
in
mov
mov
fisttpll
pushf
sub
stos
cld
adc
mov
movsb
pop
pop
adc
xor
mov
ret
bound
test
mov
test
mov
sbb
xchg
push
pop
sub
psrld
inc
sbb
xor
xchg
aas
cmp
shll
fdivs
pop
orb
sub
inc
mov
sbb
xlat
mov
xchg
ret
add
adc
mov
js
xor
sub
cmp
out
push
jle
into
mov
fsubs
xor
call
adc
cmp
adc
or
xchg
outsb
cmpb
pop
out
fcmovnb
mov
fldl
cwtl
push
cmp
xchg
mov
sbbb
fwait
jle
add
or
les
imul
negl
jne
out
insb
push
jle
lods
shrb
inc
jbe
push
ss
ret
sub
mov
dec
je
lods
js
movsb
mov
mov
jge
mov
add
cmp
dec
dec
inc
inc
stos
mov
mov
incl
popa
xor
fs
pop
pop
sbb
lret
pop
mov
mov
fwait
adc
sahf
push
or
jle,pt
cltd
push
inc
pop
pop
test
out
jp
xor
test
addl
cmpsl
icebp
aaa
jne
add
mov
pop
pop
ds
clc
jns
mov
sbbb
movsl
add
ss
jmp
flds
aas
xchg
sub
push
lret
mov
lcall
mov
inc
mov
out
xor
movl
lods
xchg
sub
popa
inc
push
push
xchg
xchg
mov
jae
call
add
jg
push
fcmovnb
jo
mov
incl
adc
jb
out
inc
and
push
pop
push
jmp
adc
inc
ljmp
add
dec
pop
and
dec
mulb
jmp
pusha
mov
lock
adc
js
rorl
setbe
ds
std
xor
adc
aaa
mov
aaa
add
nop
push
jae
or
nop
lea
lock
loope
mov
pop
mov
mov
xor
ficompl
lock
pop
jo
mov
fsubr
clc
lods
jl
pop
pop
cld
xlat
and
push
je
outsb
in
je
dec
data16
jnp
push
insb
cs
adc
push
add
push
add
aad
cmp
ljmpw
test
aam
test
daa
push
ljmp
push
in
roll
push
outsl
or
clc
push
push
bound
adc
mov
in
sub
lcall
jmp
testb
into
add
adc
cli
push
mov
aaa
push
iret
jne
push
aam
mov
mov
ds
shrb
out
mov
rcl
mov
cltd
or
or
mov
mov
add
andb
add
icebp
aam
sbb
jmp
jle
xor
testl
dec
xor
pop
call
addb
nop
mov
leave
mov
xchg
push
in
mov
adc
push
loop
mov
push
mov
dec
lahf
and
and
les
dec
lret
mov
push
add
and
pop
pop
or
jbe
push
cmp
test
test
rolb
push
lods
inc
inc
mov
mov
dec
inc
ret
push
mov
fwait
test
test
dec
je
mov
cld
add
je
popa
xor
and
jne
mov
addw
xor
cli
ds
scas
dec
or
xor
sar
push
xchg
and
mov
mov
dec
movl
cmp
js
outsl
lahf
lea
bound
pushf
and
call
sbb
xchg
xchg
ret
mov
insb
dec
mov
lods
shlb
or
lret
sub
xchg
inc
stos
filds
mov
in
xor
sbb
mov
int3
mov
sub
out
push
imul
xchg
cmc
push
adc
es
push
or
push
jae
test
cmp
push
inc
call
aas
negl
cmp
push
pop
jl
lcall
add
in
xor
call
addb
and
mov
popa
int
data16
ljmp
and
cmp
xor
test
cld
pop
nop
in
mov
pusha
push
ret
mov
test
mov
aad
push
sbb
add
es
jo
adc
inc
std
cmp
or
outsb
pusha
dec
fimuls
nop
cmp
add
fs
and
cmp
push
cmovno
rolb
adc
in
incb
mov
xchg
jo
or
push
dec
add
lahf
add
jb
mov
rorl
into
in
mov
add
ja
or
push
add
test
sahf
add
imul
in
or
or
enter
ror
mov
and
mov
push
mov
mov
mov
cli
inc
push
sarl
add
push
pop
es
lret
jl
and
fs
ja
adc
lcall
push
andl
ret
push
mov
loopne
xchg
enter
movsl
xchg
leave
sub
mov
loop
rorb
sbb
sub
mov
inc
ljmp
pop
pop
mov
xchg
notb
inc
sub
rolb
loopne
mov
jbe
mov
or
xchg
pop
mov
inc
mov
bound
mov
repz
pusha
inc
adc
fisubl
bound
adc
cli
adc
dec
out
imul
mov
dec
stos
ss
stos
hlt
int3
push
repnz
test
int
mov
mov
aam
push
xor
repz
imul
mov
insl
cmp
inc
jmp
test
loopne
andl
rcrb
xchg
jbe
add
cmp
push
inc
call
mov
sbb
sub
fistpll
aas
dec
pop
pop
jnp
clc
dec
aaa
les
pop
stos
or
push
inc
stos
add
xorb
fwait
out
add
or
cmp
mov
cmp
or
adc
jno
in
push
hlt
push
adc
jge
outsb
add
dec
cmp
adc
fwait
jle
jno
mov
xor
cmp
shr
jle
ret
fs
ds
pop
xor
aaa
or
add
add
adc
clc
mull
leave
mov
cmp
popa
mov
mov
inc
adc
shrb
push
or
pop
cld
in
or
je
inc
shll
push
in
push
inc
xor
shl
xchg
sub
add
lods
rcll
lcall
adc
push
mov
push
add
adc
cltd
jae
and
mov
aaa
pop
adc
test
xchg
add
movsl
addb
int3
sbb
adcl
rcrb
addr16
data16
lahf
xchg
adc
push
push
sbb
scas
popf
test
test
js
adc
xchg
pop
jmp
rcr
mov
xchg
xor
lcall
jle
mov
out
inc
lock
adc
ud0
outsl
sbb
or
inc
aam
mov
or
shrb
call
push
sbbb
pusha
mov
cld
add
aad
push
mov
jmp
xlat
popa
sbb
sub
dec
or
data16
jbe
pop
std
gs
shll
pop
mov
push
jae
xchg
sub
mov
pusha
int3
add
test
fs
lea
ljmp
scas
cmpsb
rcl
pop
shrb
mov
jns
mov
mov
and
push
dec
test
and
or
ffree
ret
xchg
jo
or
jge
or
jb
push
shlb
adc
nop
jg
jne
add
push
and
and
lea
sbb
addr16
adc
test
lcall
incl
mov
popf
dec
and
mov
aad
cwtl
aad
add
je
stc
loop
inc
outsb
call
or
mov
rolb
btr
lock
icebp
add
jmp
adc
dec
dec
sub
test
push
pop
test
std
mov
stc
sbb
mov
xchg
lret
fwait
push
xchg
mov
mov
jle
test
fs
pop
in
scas
jg
xchg
add
sahf
ljmp
jle
mov
out
clc
aaa
fsts
pop
push
mov
cld
sub
adc
mov
sbb
stos
data16
cmp
gs
call
dec
adc
sarl
pusha
mov
gs
adc
orl
xor
pop
mov
xor
es
inc
jb
and
xchg
pop
add
sbb
in
shrb
jne
je
adc
sub
pop
icebp
in
pop
push
push
xor
shr
inc
mov
add
rolb
cmp
ret
mov
popa
daa
dec
pushf
cld
addb
insb
lret
lods
enter
cld
repnz
add
xchg
test
je
aad
sbb
cs
inc
mov
push
je
icebp
mov
xor
mov
fdivrl
add
cmpsb
mov
jne
or
xor
mov
sub
sub
push
fsubl
push
adc
pop
mov
orb
add
test
or
pop
pop
int3
lock
push
std
movsl
inc
and
jl
pusha
and
xchg
les
push
test
leave
inc
lea
subb
jae
rclb
rorb
push
fdivrl
incb
sub
rol
insb
jne
inc
pusha
push
ret
sub
mov
mov
scas
fwait
orb
xor
iret
and
mov
scas
js
data16
jp
jb
out
je
jnp
mov
add
leave
jae
or
pop
or
cmp
loopne,pn
push
xor
mov
xor
jo
mov
inc
sub
inc
js
test
shlb
xor
mov
in
or
adc
in
orl
fs
bnd
inc
loopne
cmovns
add
jg
add
test
mov
icebp
sbbb
mov
aad
mov
int
mov
and
jg
ja
jb
push
inc
inc
xchg
mov
xor
adc
fsubrp
xor
and
aaa
lock
sbb
add
push
jno
push
xor
insb
cld
dec
adc
or
movsb
fwait
lahf
add
sahf
inc
dec
push
out
movsb
push
xlat
testl
mov
jmp
pop
mov
add
xchg
in
pop
add
jl
and
loopne
push
pushf
push
fs
mov
inc
xchg
mov
call
jge
sbb
add
fs
sbb
outsb
sbb
add
in
dec
push
shlb
call
sbb
mov
in
dec
wrmsr
push
add
inc
outsl
xor
push
lcall
and
inc
sub
cmp
cld
push
dec
and
sbb
sbb
and
enter
dec
cmp
add
xor
adc
icebp
push
pop
inc
pop
loopne
inc
dec
mov
adc
dec
add
xlat
sbb
sub
sahf
lods
add
add
add
or
dec
and
inc
inc
xchg
rcrb
jbe
dec
mov
fdivrl
push
jo
adc
inc
test
push
xor
cmc
js
addl
orb
lea
cmp
pusha
rorb
dec
fdivrs
notb
cmp
mov
fldl
pop
lods
movsb
sub
push
xor
fisttpl
stc
popf
add
inc
jmp
pop
mov
fisubrs
xchg
int3
add
cmpb
mov
cli
mov
push
push
negl
add
push
adc
add
into
sbb
insb
subl
cld
rorb
adcl
loop
lds
incb
clc
aam
push
incl
and
and
cmp
or
loopne
push
movsb
outsb
inc
push
pop
hlt
test
arpl
test
test
fs
incb
fadd
aaa
call
push
sti
push
push
lock
mov
inc
imul
and
sbb
lods
sbbb
push
movsb
lcall
push
add
sub
mov
lods
add
adc
xor
testb
hlt
push
lret
lock
xor
or
adc
xor
stos
test
sub
es
pop
outsb
jbe
jp
jecxz
sbbb
orl
or
scas
rol
lret
test
cmp
cmpsb
sub
push
pop
and
cld
fstpt
and
or
decl
push
inc
mov
and
sub
add
ret
ds
adc
pop
xor
cli
test
in
loopne
add
and
mov
xchg
push
cli
rcl
and
adc
add
xchg
mov
adc
mov
or
jg
stos
je
xchg
xor
mov
mov
push
int3
shll
loope
cmp
pop
lock
int3
and
xchg
and
pop
push
mov
pop
es
fs
out
inc
cmp
repnz
sbb
or
addb
sbb
or
into
test
inc
or
call
dec
fisttpl
cmp
jl
lods
shlb
nop
cmp
es
cmp
mov
jle
add
fs
mov
sbb
insl
cmp
inc
and
mov
dec
incl
mov
add
outsb
outsb
xor
mov
sbb
dec
adc
push
jmp
mov
in
movsl
fdivrl
inc
adc
cld
push
xchg
sbb
cmc
cld
leave
pusha
insb
xorl
in
sub
mov
das
faddp
rclb
rdmsr
add
ja
xchg
test
fcmove
jg
add
dec
push
jle
jae
cmp
sbb
lock
hlt
sub
and
sbb
and
push
mov
jge
pop
mov
in
add
ljmpw
push
or
lcall
int3
clts
movl
inc
dec
sbb
add
loopne
cwtl
movsb
adc
cld
clc
fdivr
ljmp
insb
dec
sahf
add
jb
cmpsb
and
pop
ret
mov
inc
xor
jp
decl
push
inc
int3
sbb
mov
rorl
cwtl
std
outsb
fst
pop
mov
ds
fcmovb
adc
mov
jae
lds
fiaddl
push
jp
pop
add
punpcklwd
rcl
dec
ficoms
in
mov
cmp
and
jmp
push
cmpsb
or
aaa
sub
cmpl
mov
jbe
ss
jae
incl
mov
aam
jmp
aas
add
cmp
mov
and
stos
fcoms
icebp
add
jo
loop
sbb
push
in
push
push
mov
clc
add
inc
xor
fiadds
mov
out
cwtl
clc
gs
adc
std
mov
movsb
jo
pop
in
jo
in
push
mov
adc
jbe
lock
sti
jne
in
jne
dec
popa
jl
cmp
ss
lock
add
sub
outsl
adc
inc
jne
jmp
mov
jecxz
xor
sbb
mov
loopne
adc
push
push
rorb
test
loopne
or
sub
loopne
pop
cmove
xchg
cmp
sub
add
push
dec
cli
mov
sbb
fldt
pushf
push
or
pop
cld
inc
in
int3
add
push
mov
pop
cmpsb
add
orl
mov
add
in
adc
fisttps
inc
je
callw
outsl
and
mov
sbb
jne
adc
scas
dec
mov
jl
mov
mov
into
add
rcrb
jl
dec
mov
sub
mov
inc
push
fwait
sub
into
push
or
and
push
data16
dec
push
cmp
cmp
push
sarb
cmp
fsub
push
aad
xchg
roll
sbb
push
push
movsl
add
jb
sahf
jp
mov
add
jno
add
cmp
push
insb
test
jmp
cs
push
sub
or
mov
andb
adc
lock
fcoms
jl
dec
je
cli
cmp
test
or
xchg
adc
sub
inc
dec
les
mov
gs
push
pop
inc
lea
mov
loopne
ds
push
push
jne
adc
sbb
adc
jnp
add
rorl
push
mov
pop
push
jle
aam
mov
ljmp
push
out
push
lea
lods
mov
sbb
in
pop
dec
xchg
add
int3
inc
dec
jl
inc
push
fldl
mov
ret
notb
aam
xchg
cltd
sub
mov
ret
call
push
orl
push
sarb
dec
mov
std
adc
or
fs
enter
pop
adc
jae
popa
mov
mov
sbb
xor
and
into
clc
adc
add
int
inc
cmc
fidivs
dec
or
mov
in
adc
dec
add
call
xor
gs
cli
sbb
leave
repz
out
hlt
dec
push
mov
mov
lret
int3
xor
lock
sbb
cmp
data16
xchg
inc
adc
cli
xorl
inc
mov
push
add
aaa
lods
mov
dec
icebp
fimuls
sbb
or
shll
sbbl
js
mov
repnz
pop
adc
in
rcl
in
mov
ud0
inc
es
nop
test
xchg
mov
movb
inc
nop
or
les
jae
add
or
arpl
push
mov
mov
ret
and
push
ret
lds
nop
push
or
fdivrs
sub
add
andb
insb
test
add
sub
cs
and
les
mov
dec
inc
fistl
outsl
dec
in
and
divb
pop
out
push
leave
and
call
test
or
pusha
cmpsl
cmp
lods
mov
mov
lock
mov
dec
push
adc
or
push
nop
pop
or
mov
and
test
jge
cltd
push
pop
sub
sti
daa
gs
or
push
jp
sub
ret
mov
adc
sarl
inc
adc
js
pop
fdivs
jmp
or
out
xor
adc
mov
sub
or
xchg
inc
sub
and
stos
push
push
sub
test
or
aas
mov
call
loopne
pop
sub
fsubp
lret
pop
cmc
and
pop
jp
jo
loop,pt
dec
ja
and
xor
sub
shrb
cmp
mov
orb
adc
ret
loopne
xchg
loope
addb
jcxz
fs
nop
cld
clc
xor
inc
jmp
jmp
mov
fistpll
std
loope
cld
call
testl
xor
lods
push
fstpl
mov
xchg
inc
loopne
data16
and
pop
sub
stos
mov
in
ss
pop
push
add
fstps
std
test
jle
mov
push
ret
out
mov
jle
cmp
jne
mov
in
and
mov
mov
fs
ljmp
mov
orb
xlat
pmulhuw
rcr
movsb
je
mov
mov
mov
je,pn
in
push
dec
xorb
mov
xor
loopne
rolb
frstor
add
mov
xor
js
or
or
arpl
mov
adc
jo
xlat
int3
jg
popa
adc
xor
push
lret
int
add
js
ss
jne
lea
sbb
cwtl
push
stc
mov
cmp
stos
call
lcall
pop
sahf
mov
lock
fisubrs
lock
in
pop
inc
dec
data16
mov
mov
xor
jnp
xchg
loope
cld
test
mov
inc
leave
add
mov
loop
insl
pop
push
lea
icebp
inc
xchg
jmp
push
adc
add
aaa
es
sub
imul
movsb
in
lret
jle
nop
int
inc
jg
js
aam
cmpsb
imul
mov
nop
out
imul
adc
mov
sub
inc
adc
inc
mov
add
lea
and
mov
jle
notb
loope
insb
push
xchg
ss
adc
rorb
aas
sahf
sub
add
ljmp
jmp
push
sbb
xchg
faddl
sbb
pop
insb
push
xchg
ret
rcll
adc
cld
cmpl
ss
pop
fwait
add
punpckhbw
notl
call
insb
push
rolb
mov
sarb
aam
add
xor
clc
add
add
insl
mov
lds
pop
xchg
push
adc
jl
cmp
adc
mov
cmp
jmp
enter
out
mov
nop
les
push
ret
mov
cmpb
js
sub
cs
sbb
movsl
xchg
adc
add
sub
fnstcw
shl
sub
mov
out
inc
cli
loopne
sub
jle
mov
es
data16
pusha
cmpsl
vdivps
xor
xchg
mov
inc
jl
and
jbe
push
cmp
sub
clc
adc
addr16
ss
mov
out
rclb
xor
pop
mov
dec
or
test
sbb
add
inc
shlb
jne
push
jmp
xchg
pop
or
dec
adc
insl
test
je
andps
jl
adc
xchg
rorb
pop
sub
lcall
sub
mov
push
xlat
or
loop
jle
lods
xchg
std
push
test
or
cwtl
xor
mov
push
add
shll
inc
cmp
rolb
inc
pop
jle
add
stos
mov
inc
in
pop
movb
lahf
sahf
pop
outsl
mov
pop
fcom
mov
sub
inc
sti
pop
incl
mov
cmpsb
jle
call
sub
cmp
and
sub
sub
out
scas
pusha
imul
dec
jmp
cmp
incl
cwtl
inc
bound
mov
jno
scas
adc
xor
jnp
rorb
cmp
mov
icebp
hlt
inc
clc
das
add
mov
mov
mov
mull
insb
scas
xchg
loopne
mov
push
call
fcoms
adc
scas
sbb
aam
jno
push
imul
jnp
cli
pop
call
jne
lock
jl
mov
xchg
cmp
mov
pop
in
push
jbe
sub
inc
adc
add
mov
aas
add
dec
mov
std
adc
test
shr
and
aam
or
mov
push
test
xor
inc
jecxz
into
inc
add
test
nop
ds
call
add
cmp
jmp
inc
mov
and
inc
ret
mov
test
mov
jl
mov
icebp
movsb
push
jne
ss
mov
shrb
call
int3
repnz
lock
dec
scas
cwtl
mov
lcall
outsb
ljmp
push
fsubs
ss
cltd
pop
mov
loop
xchg
xor
popa
js
cmp
cwtl
in
dec
mov
scas
add
rorb
or
jle
jmp
jmp
xorl
inc
inc
in
adc
cld
or
inc
decl
mov
aad
push
xchg
js
in
loop
add
jg
lods
mov
imul
xor
cmp
push
aas
pushf
enter
push
lea
push
data16
pop
inc
or
jmp
sbb
push
int3
stos
cs
orb
div
mov
shlb
sbb
inc
mov
dec
inc
pop
push
mov
je,pt
sbb
fisubrl
fldl
sub
mov
sub
adc
jae
xchg
pop
imul
push
and
incl
sbb
les
mov
int3
rorb
mov
pop
adc
lock
xor
das
jmp
icebp
mov
jo
scas
pop
int3
call
call
mov
repnz
test
rorb
ret
sahf
test
bound
adc
push
adc
fidivrl
les
push
int3
adc
shll
and
gs
popf
icebp
es
jle
add
jae
pop
mov
pop
add
cmp
xor
push
mov
xor
shlb
pcmpgtb
and
xchg
xchg
add
pop
out
add
ss
dec
loopne
or
sub
movsb
mov
incb
rolb
cltd
lods
push
xor
mov
dec
lock
mov
push
in
notb
ret
jg
cltd
loopne
leave
stc
add
andb
fldt
out
aam
test
test
ds
cmp
jnp
nop
jle
int3
enter
dec
sub
out
pop
mov
js
mov
rcll
lcall
cmpsb
and
push
mov
push
call
or
or
inc
pop
sub
mov
stc
add
xchg
rclb
pop
xor
mov
dec
int3
mov
fsubs
loop
cmpsl
xor
and
sub
jo
lods
mov
inc
pop
xor
cmp
cmp
dec
test
loopne
test
cmc
pop
xchg
andl
into
mov
mov
push
popa
fbld
push
pop
outsb
cmp
and
ljmp
xchg
flds
jbe
addr16
mov
sti
clc
roll
std
mov
mov
and
das
dec
in
imul
pop
mov
or
push
dec
adcb
inc
sbbl
fs
imul
rol
add
push
push
ret
les
jecxz
stc
and
dec
xor
pop
lods
outsb
lea
mov
cli
mov
mov
mov
pop
into
inc
mov
fldl
sub
fs
lea
ja
loope
add
mov
cmp
jmp
push
adc
sbb
add
jne
lock
adc
test
push
and
jbe
jg
push
mov
xchg
pop
mov
ret
loop
jp
mov
clc
sub
icebp
mov
int3
ljmp
or
adc
mov
pop
mov
stos
or
imul
jp
lcall
sbb
push
jo
ds
jle
adc
push
and
call
xchg
call
dec
rolb
sub
stos
data16
mov
cli
rolb
add
faddl
jne
pop
out
xchg
dec
aad
adc
dec
orb
rcll
cld
cmp
repnz
pop
mov
dec
shrb
ss
arpl
test
stos
xchg
jl
or
jb
mov
push
repnz
add
push
sbb
cmp
testb
mov
mov
lds
mov
insl
cld
mov
adc
iret
mov
xchg
je
inc
sub
pop
inc
stos
add
dec
pushf
fistpl
stos
add
add
inc
add
mov
push
pop
xchg
stos
outsl
or
pop
shrb
jle
call
inc
mov
xchg
stc
xchg
ljmp
jne
dec
inc
mov
nop
push
add
rcr
push
clc
inc
and
in
stos
push
mov
enter
sub
mov
mov
xchg
add
fs
cmp
xor
rolb
inc
out
dec
adc
add
mov
adc
repnz
push
shrb
cld
xchg
inc
aam
mov
aam
fwait
dec
xlat
cmpsb
jmp
dec
push
or
enter
xchg
lret
cmp
inc
bound
ds
sbb
loope
into
out
pop
mov
xor
add
out
pop
adc
or
mov
test
subb
xchg
out
pop
addb
push
xchg
inc
pop
stos
jle
lret
mov
adc
xor
call
mov
test
cmp
cmp
sub
xor
js
ja
loop
adc
cmpsb
xor
insb
sbb
cs
push
jo
add
mov
fisubrs
inc
mov
inc
jg
movsb
sbb
push
outsl
mov
dec
fsubl
add
outsl
xchg
aad
dec
rolb
sub
dec
xor
std
call
pusha
sbb
push
jmp
inc
cmp
and
mov
push
and
jle
xchg
add
fsubrl
test
stos
inc
sub
insb
data16
dec
pop
xchg
ds
mov
cwtl
or
mov
sarl
aam
adc
add
push
hlt
outsb
jp
mov
add
lahf
and
add
jae
je
cmc
stos
cwtl
push
xchg
call
imul
loope
lea
ret
out
in
or
cmp
enter
xor
and
xor
popf
xchg
pop
mov
mov
mov
std
push
jne
insb
mov
insl
outsl
dec
adc
mov
fdivrp
dec
dec
ss
loopne
nop
sbb
loop
and
cld
ret
cmp
cmp
add
mov
push
cwtl
jb
aas
cmp
jns
subb
push
imul
addb
jecxz
stos
mov
js
push
lods
data16
enter
test
add
adcb
adc
mov
cltd
mov
sahf
and
cmp
cmp
mov
inc
popa
mov
sarl
in
push
out
dec
cmp
cwtl
or
mov
bswap
add
lret
je
hlt
add
or
decl
or
cwtl
shll
decl
sub
push
cwtl
jmp
push
jne
dec
cmp
aas
les
insb
int3
adcl
mov
in
or
aam
fwait
jo
mov
je
pop
dec
mov
testb
push
jo
pop
loopne
pushf
aam
hlt
or
aam
nop
mov
inc
dec
push
jb
add
jae
pop
cmpsl
ficomps
add
inc
mov
call
fcmovb
or
xchg
xchg
test
fdivl
push
decb
mov
mov
push
jl
or
sahf
stc
mov
push
jg
add
ror
test
test
cmp
call
lods
jmp
dec
sbb
mov
sbb
add
out
int3
icebp
jmp
inc
test
in
pop
sahf
push
push
aam
clc
cmp
stos
lcall
and
mov
in
test
cmp
fisttps
dec
push
cmp
repnz
add
dec
fisttps
sbb
sbb
pushf
test
int3
cmp
incb
adc
dec
call
cmp
mov
sub
loopne
and
in
pop
mov
aad
pop
mov
xor
int3
in
jo
push
push
jl
mov
mov
gs
pop
add
dec
mov
adc
rorl
xor
add
add
enter
or
orl
fimull
dec
jp
jo
or
pop
test
sub
ss
pop
inc
lea
pusha
cmc
mov
push
outsl
adc
lods
jge
jle
pop
lcall
test
std
and
cli
or
push
int3
jnp
push
xor
push
dec
es
fsubrl
push
loop
mov
push
mov
lret
cmp
push
mov
push
jl
add
mov
movb
or
add
dec
mov
scas
fistpl
xor
aaa
add
adc
add
rcl
or
in
movhps
testb
cld
sub
mov
enter
sbb
inc
movsl
mov
adc
xchg
jbe
add
mov
adc
xor
insb
push
mov
sbb
push
inc
push
fiadds
sub
sbbb
xchg
insb
int3
pop
inc
aam
ss
adc
or
int3
mov
dec
fildll
mov
jmp
mov
fimuls
push
ja
call
ret
pop
clc
push
and
lcall
outsl
jb
jae
xchg
xchg
sub
sub
adc
shlb
xchg
cwtl
clc
xor
call
test
pop
je
imul
xchg
shrd
in
jo
push
xchg
ret
lods
mov
loope
push
xchg
add
sar
subl
sub
rorb
gs
cmp
or
pop
dec
cmc
push
xchg
shlb
push
ss
rorl
push
fs
cmp
rcl
lock
mov
pop
test
jp
mov
push
mov
fcoms
aas
aad
or
add
dec
hlt
clc
sub
rorb
mov
pop
mov
mov
push
out
ret
jb
orl
pop
pop
clc
push
sbb
add
inc
mov
scas
fdivs
push
arpl
mov
inc
jns
xor
and
and
mov
or
cmc
ret
sbb
ds
cmp
out
push
cmpsb
stos
or
cmp
fimull
je
push
aaa
sbb
ret
cmpsb
fiaddl
add
loopne
mov
aaa
mov
push
pop
sbb
push
push
dec
mov
or
bound
xchg
mov
pop
subl
ror
cli
scas
mov
and
push
incl
sbb
xchg
add
decl
test
outsb
push
or
pop
cmp
push
push
push
ljmp
je
test
bts
bound
add
sub
icebp
jg
xor
add
shr
push
inc
addps
sbb
movsb
jo
or
add
int3
inc
in
and
add
cltd
jmp
jb
push
jb
scas
mov
into
fdivp
mov
add
mov
movsb
dec
cmpsb
mov
nop
dec
inc
jae
add
aas
test
mov
andb
inc
add
fiadds
pop
and
sbb
shrb
add
in
fs
push
sbb
push
test
dec
adc
sbb
mov
shlb
leave
cmp
stos
push
lock
mov
pop
fstl
sub
divb
dec
pushf
into
loope
mov
push
fwait
push
fbld
gs
cmp
fsubrs
test
cmp
xor
outsl
push
pushl
stos
adc
mov
add
cmp
pop
mov
cmp
insl
test
lods
cli
jmp
repnz
aad
rolb
push
mov
in
adc
ds
call
test
pushf
repz
push
nop
ss
push
ret
add
lea
and
mov
or
cmp
cmpsb
cwtl
push
insl
adc
sbb
repnz
inc
jnp
push
fdivrl
inc
loopne
and
xchg
into
mov
mov
cmp
xor
or
inc
push
cmp
addr16
xchg
fsubrl
or
call
add
pop
xor
aas
mov
xor
outsl
ss
push
sub
pop
and
mov
sbbb
xor
cwtl
fisubrl
test
flds
fs
add
outsb
inc
cld
pop
or
sbb
adc
jecxz
addl
adc
and
movsb
addr16
mov
adc
pop
int3
add
push
push
pushf
xor
jecxz
testl
sub
ss
mov
inc
sbb
cli
loop
aam
xchg
push
jmp
dec
data16
aas
into
mov
mov
jne
pop
mov
mov
jb
cmp
add
dec
rcll
shlb
jmp
inc
dec
fwait
sbb
pop
loopne
dec
subl
aaa
xchg
mov
sbb
pop
xor
lea
cld
fs
sbb
loopne
mov
lock
jae
cs
add
ret
xor
adc
rcl
sub
sub
pop
adcb
push
and
push
cmp
aam
stos
adc
inc
clc
add
mov
jle
sub
hlt
sub
or
rol
or
inc
outsb
cmpsb
jmp
mov
pop
je
or
cmp
incl
je
popf
mov
lods
sub
rolb
insl
int3
jle
inc
lock
movsb
mov
test
psubusb
pusha
ret
cmp
jb
adc
aas
loope
pusha
je
adc
push
and
mul
cmp
les
xor
xchg
adc
jmp
sbb
sbb
inc
push
lock
pop
loopne
into
test
adc
sub
pop
add
pop
xchg
test
addr16
pop
test
adc
incl
test
in
shll
sbb
loopne
aad
cmp
push
and
loop
cld
loope
cmc
mov
mov
adc
jno
hlt
leave
loop
roll
pop
xchg
add
std
sbb
sbb
sub
cmc
leave
mov
lock
push
push
rorl
negl
xchg
adc
mov
jp
sub
in
xchg
dec
push
adc
pop
push
or
dec
jl
and
ja
enter
mov
mov
mov
mov
or
fsubl
inc
jmp
jle
dec
mov
lock
pusha
popa
mov
xchg
adc
cmp
inc
lret
xor
sub
jbe,pt
je
rorl
pop
jge
les
scas
jge
fs
pusha
sub
sahf
bound
ljmp
stos
pop
mov
inc
xor
lock
dec
jl
xor
dec
stos
and
mov
test
imul
adc
loop
icebp
pushw
add
fwait
sbb
push
jns
jmp
sarl
ret
adc
cmp
cs
jg
mov
sub
pushl
imul
push
and
push
mov
add
enter
adc
jb
jl
pop
jl
test
adcl
xchg
dec
add
sub
repz
dec
incb
mov
push
inc
dec
fsubrp
or
outsb
aad
fisubrl
adc
sbb
dec
enter
mov
adc
cld
shlb
cs
inc
jo
sarb
lds
je
gs
or
push
sbb
add
loop
ds
or
in
pop
xchg
dec
or
lea
xchg
cmc
and
push
jb
mov
xchg
push
jbe
leave
jge
mov
sub
mov
insb
int
mov
mov
add
movsb
fiadds
cld
cmpsb
call
std
dec
int3
cmp
arpl
ds
inc
leave
or
loopne
jp
ds
pushf
jb
or
dec
data16
dec
mov
out
aas
adc
cli
shlb
gs
pushf
rcrb
push
xchg
fcompl
mov
shl
js
das
adc
dec
mov
sub
lea
pusha
mov
out
movsb
or
push
mov
dec
subl
test
rcl
xor
push
bound
pusha
in
push
mov
dec
pop
lahf
sub
orb
lods
pinsrw
ja
je
out
cmp
mov
negb
js
inc
add
push
ret
jne
rolb
add
jle
xor
xor
call
add
enter
or
push
adcl
add
xchg
jl
stc
or
inc
arpl
cs
fdivrl
cwtl
movb
sbb
and
or
js
js
jge
gs
sbb
leave
dec
push
out
mov
fs
mov
out
addl
lea
adc
push
pushl
or
or
sub
ret
or
add
pop
enter
pop
add
test
mov
mov
cli
push
lea
mov
outsl
das
pop
mov
pop
je
push
bound
add
call
xor
jmp
and
pushf
fs
mov
adc
std
nop
dec
dec
xor
or
subb
mov
outsl
call
lcall
es
std
arpl
mov
push
lock
jmp
xchg
jne
cwtl
dec
pop
insb
les
outsl
test
scas
xchg
ret
adc
push
movsl
int3
jne
add
rcl
mov
in
dec
dec
mov
sub
mov
push
push
loop
mov
cmpsb
jg
notl
mov
mov
orl
clc
and
shrb
inc
inc
fsts
mov
or
xor
dec
fldl
cmp
add
mov
std
shrl
loope
fldt
or
inc
mov
mov
filds
jl
clc
fcoml
adc
fwait
sbb
inc
bswap
bound
dec
jo
loope
clc
sbb
xlat
pop
pop
adc
xchg
add
cmp
jge
push
mov
add
test
inc
push
test
rolb
inc
cs
or
cmp
xor
or
cli
roll
sar
fimuls
adc
incb
inc
lea
aad
jns
sub
lret
or
andl
popa
enter
cmp
push
insb
js
repz
push
fsubr
cwtl
push
mov
and
test
sub
adc
pop
lods
sbb
push
lds
incl
jmp
movl
repz
cs
cmp
loope
xor
add
insb
push
aam
mov
mov
push
adc
add
int3
int3
inc
pop
in
int
push
sarl
push
enter
jbe
push
outsb
sbb
sub
inc
mov
push
fs
data16
push
inc
sbb
and
ss
aam
sbb
cmp
ret
leave
loop
push
mov
jne
xor
and
lea
shrl
dec
mov
dec
movsb
das
sub
and
add
and
mov
xor
hlt
and
rcll
pushf
add
int3
mov
dec
sub
addb
sbb
int3
ds
mov
xchg
adc
shl
push
insl
sub
aas
pusha
and
xchg
jmp
hlt
hlt
das
add
les
decb
in
imul
call
cwtl
lods
add
repz
sbb
hlt
inc
jbe
mov
pop
mov
imul
add
nop
or
inc
add
test
push
test
les
or
out
lcall
notl
fiaddl
loop
roll
in
rcl
adc
adc
add
ret
cli
nop
lods
dec
dec
pop
cmpb
popl
loopne
or
test
test
aas
sbb
insb
cmpsl
pop
fcoms
xchg
mov
enter
movsl
mov
out
jmp
jmp
cld
gs
idiv
jl
cli
mov
push
push
and
add
dec
and
and
adcb
or
and
cmpsl
loope
gs
dec
inc
push
cmp
sub
ret
andl
add
lret
inc
rolb
or
sub
cld
jmpw
roll
jge
pop
ljmp
leave
or
nop
out
xor
sti
push
sarb
adcb
insb
sub
jge
sub
pop
rcrl
enter
out
jle
lock
fsts
paddd
in
mov
jl
adc
jbe
add
jo
in
mov
je
pop
lock
call
stos
bound
aas
jbe
mov
sbb
jp
push
test
sti
shlb
mov
xchg
mov
sub
mov
add
add
inc
push
repnz
cli
lods
loope
xchg
ret
test
sub
sbb
pop
adc
and
pop
push
xor
shr
pushf
mov
out
cmpsb
les
loop
aam
push
ret
mov
loopne
jmp
insl
mov
in
cltd
push
mov
aad
mov
insb
inc
mov
xor
pop
cmpb
jne
push
or
and
add
adc
clc
xchg
idiv
jmp
notb
popf
cwtl
test
pop
push
mov
mov
push
add
pop
mov
mov
and
push
call
sub
push
cmp
imul
cmp
dec
mov
andps
shl
xor
dec
mov
push
xchg
mov
inc
pop
pop
xchg
pop
lods
jb
sbb
jne
xchg
fcomp
mov
xchg
divb
mov
cmc
mov
jnp
jbe
push
or
movb
push
loope
pusha
test
add
jbe
push
sub
dec
std
je
icebp
ret
clc
jl
mov
cmp
rolb
xchg
bound
jp
jae
sbb
pop
adc
add
cmpl
nop
ljmp
pop
int
xor
mov
mov
push
adc
push
mov
push
je
mov
xlat
mov
push
jmp
shlb
rorb
cmp
outsl
sar
mov
imul
or
jo
mov
push
or
subb
push
mov
nop
fstpl
in
and
sarb
xor
shrb
lea
clc
add
sub
outsb
mov
inc
lds
cmp
shrb
rclb
xor
xchg
xor
fs
xor
lcall
sbbl
mov
jecxz
cs
js
mov
mov
int3
cmp
test
cmp
cmp
mov
rol
adc
cmp
sarl
add
push
pop
data16
add
inc
adc
fisttps
push
jle
xor
add
xor
into
orb
fiaddl
adc
or
test
push
andb
gs
les
lods
add
sbb
xchg
insl
popl
cld
mov
inc
jne
or
mov
cmpsb
xor
add
repnz
jp
mov
sub
lods
in
lea
pop
push
iret
nop
fiadds
pop
ds
iret
cmp
push
or
rcl
pop
test
jbe
fsub
mov
jmp
lcall
inc
fs
xchg
ss
inc
popf
ss
wrmsr
inc
xor
int
mov
sarl
addl
lcall
loopne
xchg
cmp
mov
hlt
dec
pop
mov
test
inc
cld
sub
jmp
mov
je
adc
add
jl
fcmovnbe
add
xor
xor
adc
jno
mov
mov
xor
cs
mov
rcrl
fwait
xchg
je
test
cld
pop
xor
sbb
test
push
lods
fcoms
aam
jge
fldt
clc
inc
adc
mov
pop
and
mov
js
ror
mov
loop
loop
mov
cmpsb
push
mov
and
xchg
lret
arpl
sahf
aaa
mov
mov
je
outsb
fisubl
and
mov
push
sbb
adc
cmp
test
clc
mov
clc
ret
and
mov
adc
push
pop
fcompl
les
xor
mov
arpl
or
pop
or
and
in
mov
xchg
shrb
push
sar
inc
jl
inc
mov
and
or
cmp
sbb
and
stos
test
mov
inc
out
mov
pop
xorb
mov
std
add
inc
mov
jmp
jb
in
jno
xor
jbe
dec
mov
je
sub
mov
sbb
aas
sbb
mov
adc
add
les
add
push
pop
mov
dec
sbb
shrl
loop
out
std
or
test
lret
aaa
add
es
push
sbb
inc
inc
addb
add
gs
icebp
into
setge
and
stos
jp
jns
push
mov
mov
add
sbb
push
add
pop
xchg
jb
lcall
rolb
out
les
jmp
call
push
imul
call
mov
push
pusha
xor
popf
push
add
mov
or
shlb
adc
jp
jg
push
adc
orl
rol
pop
ljmp
cmp
sahf
xlat
mov
mov
pop
inc
pushl
pop
push
push
inc
enter
pusha
hlt
mov
push
ror
lcall
in
jg
iret
pushf
cmp
enter
pop
or
push
repnz
xchg
jge
mov
out
cmp
push
adc
cmpsl
cmc
inc
test
or
arpl
outsb
cmp
out
and
xchg
mov
and
mov
enter
shll
mov
ljmp
ss
sbb
push
mov
sbb
out
xor
gs
icebp
fistps
and
push
mov
jb
add
cmpsb
pop
cmp
push
mov
and
aaa
mov
push
divps
push
push
pop
or
jb
insb
mov
push
fwait
adc
xchg
lock
int3
sar
andb
outsl
jp
sbb
sub
xor
ds
mov
sub
xorb
test
scas
adc
push
and
cs
xor
sub
rcl
push
push
call
imul
xor
clc
push
or
and
ret
bound
insb
xor
aam
cmp
push
jge
lock
pop
xchg
mov
ljmp
inc
jmp
addr16
lock
push
dec
lea
mov
cmp
pop
bound
pop
mov
mov
jne
mov
push
ret
pop
lods
stos
inc
xchg
add
mov
adc
shlb
adc
xor
jecxz
ret
stc
call
inc
xchg
cli
xchg
push
int3
and
and
je
push
into
mov
jb
scas
test
scas
nop
jno
mov
cs
jmp
fcos
fidivrl
push
arpl
xor
push
push
aam
sub
push
mov
cmp
outsb
pop
adc
fwait
test
push
hlt
inc
add
pusha
add
inc
cmpsb
add
lret
fimull
adcb
push
xor
dec
fadds
inc
fisubrs
ss
mov
pop
mov
adc
mov
ret
mov
push
mov
and
or
clc
dec
mov
mov
aaa
xor
ja
sbb
mov
insb
lea
filds
push
jns
sarb
adc
loopne
push
test
in
cmp
inc
sub
shlb
insl
jmp
cld
pop
outsl
mov
mov
and
outsl
xor
adc
pushf
clc
sbb
add
adcb
ds
lock
test
loopne
cmp
fistpl
adc
add
dec
ljmp
rorb
mov
test
ss
call
rclb
push
inc
dec
lods
insb
scas
fisttpl
clc
rorl
fimull
adc
out
clc
sub
int3
mov
sub
lret
leave
stos
data16
rcrl
jns
xchg
push
adc
add
divb
cld
testb
inc
sbb
out
nop
push
xor
insb
mov
jecxz
shlb
cmpl
sbb
hlt
andnps
stos
push
or
add
xor
and
inc
or
inc
or
ds
xchg
jbe
mov
cmp
mov
xor
test
jnp
pop
jo
push
testb
divl
or
dec
fsubs
jne
shll
insl
jg,pt
adc
mov
xor
je
add
push
sbb
lods
je
jp
pop
lret
fwait
jg
push
cmp
xor
add
pushf
ljmp
stc
mov
sbbb
add
loope
nop
es
test
addr16
push
enter
xchg
rolb
enter
fstpl
adc
xor
mov
les
out
inc
les
sub
adc
pushf
push
mov
xchg
arpl
cmp
shrl
les
cmp
rep
adc
les
xchg
sub
mov
stos
push
mov
jbe
std
arpl
mov
aas
mov
mov
addl
fdivr
or
into
repz
rclb
insb
je
sub
xor
xor
xor
xchg
sub
scas
inc
adc
push
sub
inc
add
repnz
add
jle
mov
test
cld
xlat
out
and
cld
sub
sub
or
mov
xor
mov
jnp
or
cmp
jg
mov
push
gs
jecxz
xor
xchg
dec
jge
mov
cld
and
pop
jo
into
or
aad
ret
mov
add
add
test
mov
inc
js
lret
push
mov
push
in
mov
andb
jg
dec
hlt
testb
test
punpckhwd
sbb
cwtl
inc
and
mov
add
or
mov
inc
cld
loope
sub
add
adc
adc
add
xchg
nop
pop
pop
fwait
imul
add
test
mov
jo
gs
adc
test
add
add
shrb
rorb
mov
sub
push
cmp
les
in
lds
mov
cmpsb
sbb
pusha
clc
add
into
inc
shll
outsb
add
ds
ljmp
mov
mov
test
loopne
add
push
xchg
rcrl
mov
push
mov
nop
or
pop
sub
mov
loope
lock
push
data16
loopne
mov
mov
les
imul
cmpsl
and
negl
mov
pop
jne
mov
imul
adc
mov
fcoml
sub
adc
mov
addb
imul
pop
fcomps
inc
inc
push
push
pop
push
shl
and
nop
ret
sbb
jne
adc
jmp
jne
add
rcr
pusha
ud1
loopne
dec
movsl
lock
mov
inc
push
push
adc
inc
pop
add
enter
movsl
jo
jne
je
adc
imul
push
xchg
es
pop
cli
pop
xor
mov
xor
sub
dec
push
xor
jo
mov
dec
je
sarl
add
jne
sub
je
dec
popf
or
fsts
cld
pop
ret
jp
sbb
aam
push
testb
je
jmp
sub
and
dec
push
inc
or
loopne
hlt
aaa
mov
test
gs
pop
popa
test
rorb
insb
inc
mov
enter
push
xchg
sbb
xor
movsb
or
adc
push
adc
test
movsl
adc
pop
cmp
in
cmp
cmp
push
pop
ret
clc
scas
scas
and
sbb
sbb
sbb
outsl
pop
pusha
add
pop
in
out
or
jecxz
ljmp
call
sbb
inc
test
loopne
xchg
rcrb
fsubrp
add
rol
xchg
add
mov
mov
or
test
cmp
mov
decl
dec
mov
push
xor
mov
and
and
loope
shlb
or
outsl
push
and
xchg
sbb
sbb
lock
and
ss
mov
test
jle
decl
jmp
add
test
repz
inc
and
jbe
add
aam
test
jbe
pusha
aam
sbb
ss
das
dec
dec
and
pushf
inc
xor
and
cld
sbb
mov
mov
dec
push
push
adc
mov
mov
jnp
sub
sub
iret
add
fidivrs
dec
mov
cmp
xchg
out
add
xchg
cmp
cmp
aam
adc
in
add
scas
adc
mov
add
lahf
mov
add
ss
jp
dec
jb
or
adc
push
mov
rol
les
xchg
je
and
xor
mov
add
mov
sub
inc
mov
mov
inc
add
adc
sub
cmp
lcall
inc
bound
jne
in
or
ja
mov
jne
es
in
jae
xchg
push
clc
shrl
ret
mov
or
enter
sub
sbb
into
hlt
adc
aas
xchg
sub
ret
mov
sbb
add
and
and
aam
sub
push
add
mov
stos
les
xor
icebp
repnz
mov
push
call
add
sbb
cmp
ds
ret
stos
xor
sti
ja
lock
or
push
fadds
xchg
rorb
bound
and
sarb
push
xchg
pop
mov
mov
cmp
aaa
cmp
push
inc
sbb
in
test
inc
add
loope
movsb
scas
shlb
in
fdivr
jb
aam
push
and
pop
dec
cmpsb
mov
xchg
push
test
mov
adcb
push
nop
or
and
outsb
cmpsb
xchg
aas
or
xor
xchg
gs
aas
aam
das
scas
push
jmp
je
pop
add
and
or
add
and
xorb
push
sub
call
mov
xchg
lret
mov
dec
mov
cmpsb
inc
ds
decl
dec
fs
mov
les
ret
adc
faddl
xchg
xchg
stc
callw
add
xor
mov
sub
pop
add
rorl
jo
cmp
dec
shr
rclb
pop
rol
inc
push
dec
jbe
sub
addb
push
pushf
pop
addb
dec
insl
add
lock
jecxz
or
xchg
mov
mov
push
ds
cs
adc
and
xchg
cmp
stc
addr16
lds
xchg
rol
cmp
mov
and
cmp
cld
lock
mov
adc
add
mov
dec
xor
mov
cld
fs
jbe
xor
lret
cld
mov
mov
out
add
inc
mov
icebp
xchg
and
mov
fstl
outsb
push
push
inc
cli
adc
int3
ljmp
jmp
leave
or
jno
mov
cmp
xchg
xor
addr16
testb
shr
sub
sub
pop
inc
test
jne
push
shl
aam
xchg
dec
jo
jne
push
xor
and
mov
mov
add
scas
scas
dec
sbb
int
and
dec
mov
imul
ljmp
in
nop
lret
pop
imul
fstpt
pop
pop
and
xor
cmp
mov
cmp
into
scas
and
push
mov
or
fcoms
xchg
cld
and
xchg
enter
mov
in
cld
push
cmp
cmp
push
es
rolb
mov
add
mov
push
clc
out
into
fcoml
mov
inc
add
mov
dec
andb
push
jne,pt
adcb
add
and
sbb
in
xchg
sub
popa
aam
jmp
mov
ljmp
fidivs
es
icebp
mov
outsb
jecxz
shrl
add
addr16
cs
pop
dec
je
add
sub
ret
mov
and
push
fdivr
add
sub
jle
mov
mov
mov
mov
and
xor
xor
cmc
pop
stos
mov
mov
inc
lcall
mov
pushf
out
jo
pop
out
xchg
leave
xor
mov
int3
lsl
adc
mov
test
inc
outsb
pushf
mov
pop
and
cmp
icebp
testb
and
in
outsl
adc
adc
mov
repz
push
xchg
cmpsb
ds
mov
call
adc
adc
mov
rol
mov
push
scas
inc
notl
mov
dec
mov
push
call
cwtl
rcrb
rol
xor
jge
out
int3
loop
xchg
xor
push
jb
into
into
adc
inc
push
daa
cmpsb
in
sbb
mov
mov
push
and
bound
inc
hlt
cmc
cmp
cmp
mov
jmp
mov
mov
mov
pop
and
lods
xchg
in
dec
and
dec
push
loop
push
mov
and
movsl
cmp
test
inc
dec
fildl
mov
and
cmp
push
nop
add
sub
add
lea
lock
push
add
sbb
mov
adc
cld
add
outsl
stos
cmc
push
call
sarb
jl
inc
mov
add
or
push
iret
jb
adc
out
lods
sub
push
out
jl
jp
cmc
or
xor
add
mov
xor
out
dec
adc
and
loope
mov
push
rcrb
inc
pusha
inc
enter
pop
cmpsl
in
call
xchg
jbe
add
aaa
lret
push
cmp
cli
sarb
adc
mov
shll
mov
ljmp
cmp
mov
loop
subl
mov
and
and
sub
dec
jmp
jnp
jmp
push
test
or
imul
cmp
jmp
sub
push
decl
cmp
sarl
loopne
into
mov
jae
sub
jle
xor
xchg
call
cmpl
inc
push
pushf
and
xor
je
or
stc
or
loope
mov
jmp
pusha
push
js
fadd
inc
xlat
fbld
cwtl
and
lret
sti
pop
and
pop
jle
mov
adc
sti
sarb
addl
in
inc
andl
and
pop
adc
leave
pusha
dec
mov
push
arpl
add
fadds
mov
inc
add
mov
das
xor
adc
adcb
mov
in
xchg
lea
test
clc
mov
and
jge
and
sub
bound
mov
hlt
dec
mov
int3
add
inc
push
sub
mov
inc
decl
sub
xchg
sub
std
lahf
mov
sub
fidivrl
outsb
inc
cld
in
adc
xor
int3
cmp
lret
lret
sbb
sbb
dec
ficompl
mov
repnz
push
mov
jbe
jne
pop
rolb
jge
push
jbe
orl
das
movl
imul
xchg
adc
dec
and
push
adc
or
push
mov
pushf
das
xchg
inc
aas
adc
push
jb
pop
mov
cmc
inc
sub
mov
inc
inc
mov
add
hlt
or
lcall
sub
enter
leave
loopne
jmp
sub
decb
outsl
movsl
cli
dec
mov
push
push
test
fdivrs
mov
insb
loop
inc
xchg
push
out
rcrb
int3
fadd
cmp
add
mov
addl
or
push
inc
push
insb
push
inc
clc
dec
test
pushf
aad
jnp
pushf
nop
enter
mov
test
or
inc
push
lock
mov
mov
mov
or
aam
xchg
int3
mov
lods
imul
sarb
inc
push
xor
adc
ljmp
dec
fmull
enter
dec
jp
dec
jne
das
xchg
add
add
mov
or
cmp
adc
pop
jle
or
sub
cmp
dec
outsb
scas
add
xchg
push
test
add
sub
pop
pop
push
mov
or
xor
jne
lock
int3
cmp
inc
movl
ljmp
push
add
dec
lret
data16
pop
sub
mov
xchg
nop
push
push
pop
mov
addl
stos
xorb
lea
xor
popf
xchg
jmp
out
adc
mov
xor
cmp
test
cmp
add
sub
inc
and
jmp
mov
test
rcrb
pop
fsubrl
cs
push
ret
cld
dec
xor
add
fcomip
rcrl
lock
into
jne
mov
mov
mov
mov
stos
data16
inc
test
jo
sbb
test
cld
std
bound
icebp
ljmp
ret
lea
push
cmpsb
fstpt
fsubrl
pop
jle
xor
call
fdecstp
arpl
mov
sub
stc
pusha
pop
xor
dec
and
lock
mov
aam
cmp
mov
push
leave
roll
fcompl
push
pop
push
movsb
cmpsb
add
add
lcall
pushf
sbb
daa
jle
xor
push
sti
xchg
and
jmp
push
cld
jl
pop
sbb
shlb
jmp
add
rorb
cmpb
push
mov
loop
test
xor
mov
sbb
jne
cmp
sbb
cmpb
pop
lret
daa
add
adc
leave
inc
icebp
cmp
fwait
movsb
rclb
mov
stos
sbb
nop
or
mov
pop
les
push
push
xor
stos
sub
pop
or
adc
fisubrl
or
std
stos
mov
sti
push
jmp
es
add
or
adc
leave
pop
int3
xor
mov
iret
add
pop
or
mov
push
mov
pop
push
in
and
lock
and
cmp
lock
add
push
orb
ret
lret
iret
mov
xlat
mov
shl
test
cwtl
popa
jl
xor
mov
call
shl
push
cs
xor
adc
adc
add
xor
mov
sub
test
loopne
adc
rclb
lods
faddl
pop
adc
adc
mov
xor
std
enter
ds
pop
scas
cld
dec
push
inc
push
std
cmovbe
hlt
inc
mov
mov
inc
outsb
lods
ds
mov
jb
mov
add
orb
add
inc
xor
arpl
mov
jl
or
loope
jbe
mov
shlb
dec
mov
and
outsb
mov
jae
add
mov
add
mov
add
pop
dec
mov
jmp
fadd
mov
cwtl
sub
shll
shr
pop
inc
popf
xchg
test
es
push
data16
jb
dec
mov
cmp
add
adc
sbb
cld
xchg
shll
cmp
leave
push
pop
push
mov
lock
adc
push
xor
int3
inc
add
jno
in
lcall
test
stos
lea
lret
jbe
fsubrl
mov
cld
je
orb
adc
mov
rorb
push
mov
repnz
mov
push
addl
mov
jae
lcall
and
mov
mov
or
loopne
cwtl
ficoml
in
mov
addb
scas
and
xchg
adc
lea
nop
out
xor
incl
popa
inc
jb
mov
movsl
aad
mov
mov
loope
int3
pop
push
es
cmc
ss
inc
ss
decb
lcall
les
adc
popa
or
adc
cmp
and
add
sahf
push
mov
adc
std
jg
je
testl
sub
cmp
addl
sti
mov
ror
adc
std
dec
mov
pop
xor
add
inc
in
jmp
xchg
scas
inc
decb
je
roll
add
jnp
or
shll
push
xchg
cmp
out
push
lea
xor
divb
xchg
movb
mov
or
lcall
imul
je
mov
mov
pop
push
outsb
pusha
es
lret
jmp
or
andb
lods
fdiv
cs
arpl
dec
mov
out
cmp
pop
push
add
sub
int3
inc
jo
loope
rorb
cmc
xchg
daa
andb
xor
int3
repz
dec
push
mov
int3
push
cld
lds
mov
les
and
pop
inc
lcall
push
add
loopne
pop
mov
or
repnz
mov
ss
mov
dec
push
cli
dec
cs
jl
test
add
jmp
call
push
xchg
xorb
dec
lock
ss
add
sbb
test
out
out
stos
insb
push
cmp
icebp
test
in
enter
xchg
jl
mov
fdivr
xchg
jle
push
adc
adc
das
mov
and
sub
aas
pop
or
inc
sahf
je
ret
xor
inc
sbb
cli
cld
add
nop
es
outsl
aaa
xchg
and
or
ud0
ret
sub
xor
in
pop
xchg
mov
pop
sar
les
pop
adc
xor
sub
or
jl
mov
cmpsl
pop
pop
fidivs
and
lock
outsl
add
pop
insb
xor
add
enter
add
inc
stos
aaa
popa
adc
mov
ror
add
mov
xor
sub
imul
add
loopne
add
aas
pop
insl
mov
adc
mov
inc
push
dec
clc
mov
arpl
xor
enter
call
ret
call
cmp
int
cli
fsub
pminsw
pusha
dec
and
push
inc
les
shl
adc
cmp
lcall
fmuls
loope
xor
dec
hlt
pusha
dec
and
add
push
aas
push
adc
inc
xor
cmc
mov
sbb
or
cmp
add
int3
lods
ljmp
jne
or
cmp
xor
loope
mov
mov
lock
stos
andb
jmp
add
adc
dec
fs
ficoms
and
lods
adc
jle
pop
jge
loopne
hlt
pop
or
decl
inc
movsl
cmc
jb
dec
sbb
push
dec
xchg
ret
mov
lds
int3
call
push
push
or
mov
and
sbb
hlt
jbe
outsl
add
rcrb
divb
and
jmp
or
adc
int3
leave
fcmovu
jge
jmp
cmp
outsl
lock
dec
aaa
mov
movsl
adc
fs
rorl
sbb
in
fisubrl
in
sub
ret
nop
pop
adc
mov
jg
pop
jb
out
arpl
or
mov
dec
test
sti
push
arpl
jle
dec
pop
call
jmp
lret
fimull
icebp
bound
cld
mov
sub
ret
gs
pop
icebp
icebp
inc
repz
cwtl
push
hlt
and
or
stos
jge
out
idivb
stos
push
stos
adc
cmc
ljmp
or
and
leave
push
inc
mov
inc
mov
push
xchg
xor
xchg
push
out
mov
cmp
imul
mov
std
repnz
loope
pushf
mov
mov
int
push
mov
repnz
incl
pop
fs
rcrl
imul
insl
cld
xchg
int3
push
shl
xchg
or
mov
jbe
add
cmp
cli
add
add
pop
xchg
jle
pop
sarb
cmp
pusha
inc
shrb
xor
and
movsl
sub
jo
dec
mov
inc
movsb
in
push
je
scas
call
in
add
pushf
and
hlt
or
push
add
or
pop
push
push
xchg
test
faddl
jne
decl
je
js
addl
incl
or
jl
mov
test
scas
sub
inc
or
dec
sub
fmull
pop
mov
adc
dec
sub
sub
punpckhdq
hlt
call
aad
add
std
lea
mov
push
adc
cmp
inc
in
mov
jnp
fs
sahf
adc
dec
inc
mov
sub
dec
add
adc
push
lret
test
dec
add
lods
in
int3
mov
cmp
xor
aas
mov
xor
shrl
xchg
add
sarb
lea
insb
cmpsb
xchg
aaa
hlt
fwait
add
sti
cmp
std
outsl
mov
call
std
fisubs
cvttps2pi
cld
xchg
and
and
or
push
fcomps
out
jb
jge
add
imul
nop
pop
dec
push
mov
adc
and
shlb
addb
xchg
push
lea
xchg
inc
mov
jo
push
push
fistpl
into
push
call
push
test
repnz
or
insb
cmp
or
push
cmp
cwtl
jecxz
xor
ss
mov
insb
mov
lret
test
add
xor
sub
pop
sub
test
sub
adc
add
mov
into
and
mov
xor
sar
inc
or
push
cmp
push
add
ds
adcl
pop
adc
push
ret
cmp
unpckhps
lods
int
add
and
mov
dec
cltd
je
call
mov
and
pop
gs
push
adc
clc
mov
adc
mov
inc
roll
and
shlb
and
test
mov
mov
ss
jmp
outsb
or
sub
sub
aaa
or
jp
push
mov
mov
ret
cmpsl
lcall
cld
xlat
test
fistps
dec
adc
addr16
or
pop
mov
roll
ret
sub
jle
xor
xor
mulb
lea
xchg
mov
or
sub
jb
movsl
lock
lock
pop
mov
push
or
fdivl
jmp
mov
mov
and
adc
leave
xor
push
cmp
mov
inc
mov
inc
rcrb
stos
out
dec
lea
fmull
add
xor
out
fcoms
dec
mov
jns
add
or
pusha
adc
popa
test
mov
mov
inc
mov
cli
dec
int3
sub
jmp
loopne
or
cwtl
add
clc
mov
sarl
lock
push
icebp
mov
inc
shll
pusha
pop
dec
test
mulb
mov
sub
push
call
jne
adc
lcall
rolb
push
adc
jmp
add
jmp
mov
sub
mov
dec
jp
jb
mov
mov
inc
insl
shll
inc
mov
hlt
scas
xor
clc
gs
push
clc
std
pop
clc
lods
adc
push
cmp
jne
add
cwtl
xchg
aad
adc
sbb
shlb
outsl
inc
xor
xor
add
jbe
in
xchg
in
cmpl
pop
int3
add
jp
cmp
add
xor
and
ljmp
inc
dec
mulb
cld
lock
adc
popf
stos
add
xchg
jmp
test
sti
adc
movsl
insb
sbb
out
cmp
add
int3
inc
mov
hlt
sbb
add
popw
sub
add
sub
jno
test
lock
add
adc
jae
inc
sahf
pop
xchg
xchg
pop
subb
lea
cmc
inc
add
jne
or
mov
int3
mov
push
mov
out
adc
push
movsl
rclb
cli
and
lahf
dec
aam
js
in
clc
jno
xor
or
sub
ljmp
cmp
outsb
mov
fdivr
ja
mov
in
mov
dec
es
imul
adc
sbb
inc
pop
mov
and
sub
mov
std
xor
push
add
push
negl
call
jle
sbb
ja
dec
push
dec
cmp
cmp
notb
sarb
cmp
sub
addr16
mov
test
rcl
jae
or
mov
lcall
icebp
rcl
dec
cmc
scas
xchg
popa
and
inc
mov
mov
pop
push
dec
mov
inc
data16
cmp
je
inc
xorl
in
mov
adc
inc
lret
and
or
inc
mov
dec
push
stos
add
cs
scas
loopne
jg
add
test
and
mov
or
dec
movsl
shr
add
leave
add
sub
add
xchg
jecxz,pt
insb
lds
add
int3
mov
nop
mov
js
hlt
mov
sbb
popa
xor
cmp
data16
adc
xor
push
jmp
imul
mov
push
repnz
cmp
mov
add
xor
lock
mov
jae
lahf
lea
push
in
xchg
rolb
add
dec
stos
aad
sub
push
sbb
or
push
mov
in
or
sarb
adcb
rorb
test
rolb
jge
dec
les
sbbb
repnz
sub
xchg
test
lock
or
or
fs
xor
dec
cld
pop
loopne
call
mov
push
inc
les
xchg
nop
outsb
or
pop
enter
mov
fstpl
rorb
mov
loop
bound
xchg
repnz
pop
cmc
pop
pushf
xorb
add
mov
loopne
loopne
call
loop
dec
mov
fcomp
call
decb
pop
sub
int3
add
push
mov
push
insl
mov
push
push
mov
sbbb
fmul
lock
push
push
sbb
rcl
adc
pusha
inc
in
rorl
bound
into
mov
inc
jecxz
adc
adc
stc
pop
int3
addb
and
push
dec
mov
arpl
mov
pop
xchg
xor
sbb
inc
outsb
call
cli
xchg
sbb
adc
and
sub
mov
addb
adc
ret
adc
insb
push
push
and
and
push
or
pushl
adc
cmp
mov
cmp
imul
mov
adcl
es
addl
pop
add
decb
sahf
test
fsubr
and
mov
out
and
xchg
mov
sub
jbe
mov
push
dec
add
cmpsb
jb
in
dec
dec
pop
fadds
pop
scas
sub
cmp
fistpll
pop
les
fsubl
aaa
test
sbb
ds
fisubl
icebp
add
and
jno
mov
or
adc
les
add
sub
cmp
mov
mov
dec
or
cmovne
mov
sub
out
bound
mov
pop
orb
js
outsl
ret
data16
rcr
dec
add
ret
insb
rclb
test
xchg
mov
add
cs
aam
xor
clc
fs
sar
mov
stos
inc
mov
inc
sar
in
push
das
or
inc
sub
mov
cmc
inc
cwtl
cld
shrb
jmp
cli
ficomps
sbb
push
fcoms
cmpsl
in
jmpw
add
mov
add
xorb
inc
ficoms
nop
mov
cmp
sub
xor
sub
mov
push
ss
cli
cmc
jmp
jp
push
in
xchg
sub
dec
dec
sbb
jo
in
jbe
outsl
and
lret
cmp
sbb
ret
add
sbb
jmp
add
adc
sbb
bt
fsub
fistl
pop
pushl
add
and
and
cld
mov
fs
rclb
sbbl
and
test
in
js
lea
dec
ficoml
out
test
jae
les
mov
jg
cld
andb
pavgw
mov
roll
mov
cmp
loope
and
call
pop
add
hlt
or
mov
mov
out
jne
in
inc
add
mov
addl
sti
mov
mov
sbb
sub
loop
adc
popa
adc
xor
fisttps
adc
inc
jae
jae
popa
pop
add
loope
ret
mov
xlat
mov
lock
je
mov
aam
decl
inc
pop
pop
xchg
add
shlb
dec
clc
andl
xchg
sbb
dec
enter
subb
nop
adc
call
adc
pop
adc
out
fcompl
int3
inc
test
lock
adc
cli
mov
sub
xor
mov
and
inc
xor
inc
into
mov
add
jne
test
cmp
pop
test
pop
inc
shrb
out
mov
jb
icebp
leave
movsl
jl
xor
adc
cmpsb
loopne
cmp
mov
icebp
mov
loopne
cmp
les
inc
sub
sub
test
je
movb
decl
bound
test
jbe
add
xor
in
jle
sub
leave
cmpsl
loopne
insb
mov
call
or
iret
rcrl
in
mov
outsl
into
jbe
lock
jmp
jl
outsb
sbb
or
sbb
in
push
or
rcl
rolb
push
lea
jo
incl
jae
cmpnltps
push
rcrb
xchg
or
int3
push
loope
mov
mov
rcrl
loope
cli
enter
dec
push
movb
ficompl
aaa
cmc
mov
dec
orb
mov
inc
cmp
cwtl
jb
jl
outsl
orb
mov
mov
adc
inc
adc
inc
aaa
mov
mov
sub
mov
in
fldt
inc
xchg
push
xchg
les
lret
mov
in
idivl
mov
add
dec
lcall
or
push
dec
fcomip
leave
in
ja
int3
mov
xchg
fcoms
lock
jle
adc
jge
leave
mov
cmpsb
pop
lea
jmp
push
pusha
xor
cmp
scas
scas
ret
xor
mov
gs
inc
sub
fbstp
mov
int
fs
pop
pop
data16
or
lcall
and
and
notb
dec
sub
push
aad
insl
popa
leave
testb
push
js
shl
in
mov
xor
shrb
jl
mov
int3
in
stos
dec
mov
testb
xchg
sub
cmp
jp
mov
or
ds
lds
lods
in
cmp
mov
mov
mov
mov
test
jge
add
add
negl
push
push
lcall
mov
bound
lock
decl
rolb
add
add
sbb
lea
int3
dec
ljmp
jp
call
mov
xchg
cmc
insb
jl
loop
js
dec
push
idivb
xchg
pop
mov
pop
mov
andl
sbb
and
pop
inc
pusha
bound
hlt
sub
mov
jo
lcall
cmp
xchg
sub
movsb
and
push
hlt
mov
outsb
inc
lods
push
cmp
int
mov
mov
clc
outsb
inc
nop
jmp
lods
enter
aam
dec
or
adcl
sbb
das
mov
push
std
cmp
test
inc
dec
jne
mov
mov
or
add
push
lock
mov
flds
mov
lds
loope
insb
inc
popa
insl
lods
pop
mov
hlt
jecxz
enter
orl
cmpsl
pop
movsl
inc
push
sbb
mov
jge
call
out
add
rol
je
sbb
inc
add
push
push
or
adc
xchg
cld
mov
or
sub
lcall
jae
or
add
test
mov
jmp
call
pop
mov
adc
jb
add
pop
add
mov
rorl
ss
mov
cmp
lret
andl
sub
push
fwait
movb
outsb
hlt
mov
outsb
int3
mov
xor
imul
dec
cmp
call
sbb
mov
es
mov
jbe
gs
pop
or
inc
in
rolb
jne
sub
adc
shr
and
aam
add
cmp
add
add
mov
dec
sbb
pop
ret
sub
inc
or
loop
loop
jbe,pt
pop
add
xor
mov
adc
and
repnz
sub
outsb
inc
adc
nop
mov
or
lret
push
ret
and
pop
stos
sbb
cmpl
pop
adc
lock
pop
fbld
push
dec
pop
stos
mov
outsl
adcl
pop
in
push
cmc
aam
jne
mov
scas
push
inc
movlps
dec
cmp
or
aas
xchg
mov
insb
in
enter
insb
fld
or
push
loopne
pop
sbb
loop
leave
add
lahf
and
lea
loopne
movsb
shr
js
lock
lret
cmpsb
inc
shr
fwait
shlb
sar
push
stos
xchg
nop
jg
mov
dec
rorb
xchg
clc
cmp
xorl
fisubs
push
inc
cld
andl
gs
mov
sub
mov
mov
lret
push
pusha
ret
add
ljmp
cli
jne
push
add
cmp
testb
sbb
mov
movsb
jnp
decl
addr16
or
mov
sub
lock
roll
test
pusha
mov
outsb
sbb
hlt
stos
outsl
or
xor
add
test
pop
mov
jne
dec
ss
and
dec
std
push
aas
push
jl
int3
jecxz
pop
lods
or
push
or
lock
xor
ss
sbbb
xorl
les
jne
mov
add
sub
je
cwtl
sub
xlat
mov
aam
xor
dec
or
mov
mov
add
sub
mov
xor
out
bound
jb
push
cmpsb
out
push
or
fisttps
dec
adc
xchg
dec
in
xor
mov
out
add
sub
mov
lea
pop
shlb
mov
adc
mov
leave
shlb
adc
xchg
test
sbb
sarb
xor
rcl
inc
push
mov
dec
push
or
lods
iret
push
les
jne
add
fcoms
add
cmp
outsl
and
shrl
ja
xor
mov
test
and
adc
les
sbb
call
dec
sahf
or
cs
adc
call
test
pop
shrb
mov
xchg
adc
std
add
movsb
cli
scas
xchg
outsb
addr16
push
and
add
and
aaa
pushf
je
inc
cmp
movsl
add
les
xchg
les
adcb
push
repnz
xchg
xchg
cmc
je
mov
sbb
add
push
and
and
out
fadds
rolb
lcall
fldcw
cmp
lcall
in
push
movsl
imul
sarl
subl
cwtl
jne
adc
and
dec
adc
jmp
mov
mov
ret
sbb
std
idiv
mov
in
push
incb
int3
js
sub
sti
push
popf
arpl
rcl
sub
call
jl
inc
add
mov
push
push
push
lock
pop
pop
mov
cwtl
add
rcl
outsl
popa
inc
test
aas
mov
lcall
mov
mov
or
adc
int3
andb
mov
lea
ret
and
mov
iret
sub
xor
les
mov
insb
insb
add
xchg
dec
pop
pushl
and
inc
sahf
inc
pop
inc
jne
cmc
push
mov
insb
and
push
ss
shlb
push
outsb
jmp
add
ret
jo
nop
push
inc
add
xchg
push
dec
negb
cmp
test
pop
adcb
cmp
mov
xchg
push
and
adcb
bnd
js
cmp
xchg
mov
mov
push
jle
inc
jo
dec
call
outsb
push
xor
inc
xor
dec
mov
mov
add
jp
fidivrs
pop
sub
lcall
jnp
pushfw
jmp
mov
insb
jp
les
hlt
mov
clc
rcrb
cmp
sub
sbb
dec
pop
sub
or
jo
cld
sbb
vmwrite
fmul
mov
test
add
fadd
repnz
loopne
clc
jle
mov
add
movsbl
mov
or
test
jo
loop
loopne
xchg
mov
push
sar
shr
push
rorb
mov
int
subb
loopne
clc
push
std
sbb
mov
cmc
push
add
int3
loopne
push
js
fildl
jns
mov
ds
stos
add
insl
or
mov
dec
add
mov
sub
jge
es
jmp
test
cmpsl
je
loope,pn
outsl
pop
sub
insb
inc
sub
movsb
insb
int3
mov
pop
fs
jge
pop
mov
es
cmpsl
add
cmp
xor
xchg
loopne
pop
xor
sbb
shll
pusha
push
add
push
sub
sub
data16
fs
jge
adc
lods
mov
in
jbe
mov
add
sub
rclb
dec
mov
pop
inc
roll
inc
loop
jp
clc
mov
add
dec
inc
outsb
mov
lock
sbb
inc
loope
and
cltd
add
adc
xchg
jp
lea
fisttpl
sub
inc
ret
in
outsb
mov
push
shlb
ret
cs
divb
testb
cmp
rcll
xchg
add
mov
add
sub
incb
loop
mov
lea
rolb
push
in
push
sub
push
or
inc
rcrl
cmp
mov
xchg
xorb
loop
xor
pop
mov
imulb
xor
add
or
int3
xor
cwtl
test
cmp
addl
xor
into
rclb
sar
movsb
fdivs
push
xor
mov
dec
data16
sbb
loopne
mov
out
orb
jge
or
test
adc
pop
mov
dec
imul
add
fst
jbe
xchg
fs
push
xchg
stos
mov
int
mov
hlt
push
cli
ret
adc
lods
xor
inc
mov
clc
add
scas
pop
adc
pop
rolb
or
xor
enter
push
cmp
scas
dec
adc
pop
jl
fs
mov
loopne
cmc
adc
enter
test
add
test
cld
dec
or
mov
or
ret
push
pop
xchg
movsl
or
inc
in
jle
sub
test
shlb
xchg
mov
add
loop
incb
movsb
das
cli
stos
negl
out
dec
push
adc
shl
cmc
lock
pushf
add
daa
dec
fmul
clc
and
outsb
stos
int3
leave
pushf
and
clc
or
jge
xor
mov
fldl2e
mov
jae
cmpl
jnp
jmp
jmp
lock
rorb
pop
mov
xchg
je
inc
incb
dec
dec
push
mov
enter
fs
lods
dec
jecxz
lock
int3
stos
mov
lods
adc
aaa
mov
dec
test
inc
out
jne
enter
adc
jl
inc
sbb
add
sbb
lcall
je
aas
ret
or
xor
ret
es
sar
add
push
xor
sbb
call
cmpb
mov
xor
das
adc
data16
cmp
out
add
push
adc
pop
cmpsb
push
mov
inc
mov
dec
add
shr
jne
mov
add
cmp
test
push
in
lahf
sbb
std
mov
mov
ret
sbb
inc
loop
xchg
mov
push
add
push
mov
mov
push
and
addr16
loopne
sub
adc
mov
push
push
mov
pop
adc
sbb
ret
xor
pop
ljmp
jo
xchg
add
mov
dec
addb
pop
std
scas
add
icebp
cmpl
filds
push
or
inc
mov
add
test
add
inc
sbb
or
cmp
mov
es
push
jmp
push
imul
clc
in
fildll
or
push
jge
rcr
add
clc
ficoml
mov
push
fdivl
dec
cld
ss
rcrb
lcall
cs
cmp
xor
xchg
imul
decl
and
or
mov
sbbl
imul
sbb
inc
jp
mov
xor
aas
cmp
loopne
mov
add
push
jbe
add
sbb
xor
lock
inc
jmp
xchg
jmp
pop
push
adc
insl
cmpsb
add
xor
and
out
inc
add
pusha
adc
sub
loop
or
push
ret
roll
inc
sbb
inc
and
leave
jge
sub
adc
pop
call
pop
insb
call
cld
lea
adc
sbb
mov
mov
aas
sub
call
and
call
add
cmp
adc
cmp
into
jp
sahf
cmp
scas
pop
aam
imul
xor
mov
mov
or
clc
call
adc
int3
pop
mov
mov
pop
sbb
cli
scas
das
mov
push
push
stc
fsubrl
add
or
cmp
mov
sbb
or
pop
data16
pop
mov
cld
iret
inc
cld
dec
mov
push
test
hlt
test
mov
xor
idiv
enter
inc
loopne
cs
fs
shrb
int3
sub
addl
loopne
rcl
or
fcoml
ja
lret
and
or
jl
mov
inc
hlt
dec
inc
adc
cld
test
push
call
out
mov
push
imul
mov
lds
int3
inc
rcrb
jb
ret
ss
and
inc
fs
ret
or
popa
je
mov
aaa
arpl
xchg
movl
sub
shll
sub
push
lods
jg
pop
inc
push
push
sbb
inc
push
ret
xor
daa
les
popa
js
ret
cmp
movsb
addl
jmp
cmc
inc
inc
jne
push
and
sub
or
cld
imul
dec
lea
in
push
adc
push
pushf
sub
mov
xchg
cmp
jg
es
movsb
inc
pushf
int
rclb
mov
or
das
sti
push
xchg
insl
sbb
imul
inc
jne
mov
inc
mov
sbb
clc
adc
xor
lods
scas
mov
mov
fnstenv
das
dec
std
aaa
clc
dec
mov
fisttpl
les
or
sub
or
outsb
add
xchg
add
push
jo
movsb
xor
jmp
js
sbb
pop
out
and
dec
ret
cli
jle
fwait
lret
repnz
popf
clc
lea
add
jp
in
addl
pop
popa
bound
xor
outsb
sub
adc
push
adcl
inc
add
mov
out
or
pop
adc
add
pusha
push
xchg
call
stos
add
mov
cli
mov
out
or
sub
pop
cs
sbb
and
xchg
mov
add
jmp
xor
popf
pshufw
jae
in
adc
aad
adc
cs
and
clc
data16
pop
sbbl
arpl
mov
test
fsubrs
jle
mov
popl
cld
lds
js
sub
call
dec
jbe
fdivrs
clc
leave
incb
pop
je
jl
imul
push
jae
jbe
ja
or
cld
call
in
int3
enter
or
mov
pusha
roll
mov
in
les
addl
adc
loop
mov
push
js
fs
test
and
call
data16
jp
push
inc
loop
lock
cmp
mov
fcmovbe
ss
lcall
mov
inc
push
jecxz
add
pop
pop
icebp
movsb
mov
sarb
sub
cmp
pop
hlt
pop
or
dec
add
call
inc
xchg
or
dec
push
fstps
negb
fwait
push
leave
or
icebp
clc
dec
std
pop
test
roll
je
push
cmp
mov
jmp
pop
jmp
xor
mov
cli
nop
add
leave
lock
movsb
lods
mov
iret
add
ds
xchg
mov
ss
in
sbbl
adc
mov
lea
xor
sub
inc
mov
push
shl
dec
adc
pop
imul
jbe
aad
es
cmp
xchg
jmp
repnz
jb
ret
nop
shlb
roll
pop
push
pop
add
xabort
decl
addl
das
out
push
add
les
in
inc
shlb
jns
xchg
add
push
lcall
and
push
sti
cmp
mov
push
sub
xchg
test
rcrb
sub
xchg
je
mov
or
push
or
std
adc
jb
loop
adc
sbbl
fildl
mov
mov
add
jg
cmp
inc
push
xorb
add
and
rclb
je
push
jae
imul
mov
add
dec
mov
pop
js
dec
push
lcall
pushl
lods
xchg
xchg
jne
mov
mov
psubsw
pop
je
and
inc
iret
add
mov
call
in
mov
call
out
mov
push
adc
push
test
or
ret
and
mov
add
ljmp
fwait
test
mov
inc
xchg
or
xchg
mov
inc
gs
push
adc
adc
nop
inc
je
orb
and
ds
mov
jle
shl
lock
fldenv
sbb
sub
popf
jg
mov
mov
sbb
cld
add
rcrb
and
jmp
fidivl
cmp
fs
push
loopne
loopne
xchg
mov
cmp
adc
add
data16
mov
out
or
testl
add
fadds
call
mov
rcl
sbb
jmp
push
outsb
inc
mov
push
nop
idivb
and
add
mov
rclb
jo
js
rclb
sub
jbe
int
rcr
inc
push
inc
ficoml
add
dec
inc
push
leave
cli
test
or
je
test
jp
cmp
icebp
jo
stos
and
hlt
int3
mov
xor
fdivs
mov
xchg
or
mov
and
push
test
inc
lcall
sbb
cmp
inc
pcmpeqb
adc
loopne
gs
push
add
in
dec
cwtl
jne
dec
inc
adc
dec
test
inc
nop
out
les
jo
and
lock
fmul
movsb
es
push
inc
stos
repnz
push
add
roll
mov
ror
mov
cmp
ret
xor
or
mov
mov
imul
and
adc
jb
cmc
loopne
fdivrl
addr16
mov
lea
push
adc
lcall
gs
enter
icebp
mov
movsw
xor
js
fisubrs
and
inc
ret
cli
je
es
adc
mov
mov
mov
or
jbe
divb
cli
dec
fmul
pusha
insb
ja
pop
test
xor
test
das
gs
test
pop
sub
cmp
rolb
jl
cmp
cmpl
cmp
inc
xor
push
xchg
bound
mov
adc
les
mov
mov
bnd
push
xchg
lock
out
test
mov
int3
je
push
cmp
or
subb
inc
enter
mov
movb
ret
jge
pop
cld
je
dec
sbb
mov
inc
add
xor
ljmp
jp
mov
lods
and
adc
or
mov
or
rolb
hlt
fiadds
inc
pop
mov
fdivrl
and
add
mov
xchg
das
sbb
dec
xor
je
insl
mov
xor
je
shll
xchg
xor
dec
enter
int
aam
xor
or
jmp
inc
push
mulb
mov
mov
pop
inc
add
xor
gs
or
sbb
mov
clc
clc
mov
mov
rcll
pop
and
inc
push
xor
inc
xorl
scas
pop
xchg
fidivl
dec
pop
mov
jmp
push
popa
push
and
imull
sbb
xor
aad
sahf
test
inc
test
bound
add
dec
push
jb
push
es
andl
add
out
pop
addb
adc
push
in
gs
or
outsl
mov
inc
sub
or
cmp
loope
xorl
lods
repz
jmp
adc
dec
xor
ljmp
mov
rcll
xor
inc
mov
jmp
jmp
jmp
decl
mov
int
popa
js
adc
cs
int3
push
aam
stos
and
mov
addr16
and
pop
add
push
xchg
fiaddl
mov
shlb
pushf
rcrl
jmp
add
add
nop
or
ret
inc
fwait
jle
outsb
dec
adcb
adc
mov
outsb
mov
inc
cld
jp
or
mov
fcmovbe
cld
cwtl
pop
outsl
inc
mov
add
test
jmp
movsl
xlat
cmp
cld
hlt
add
clc
sbbl
lcall
out
push
sar
aas
and
js
adc
or
inc
lcall
das
inc
sbb
stos
lret
stos
add
pop
stos
xor
push
rolb
cmp
inc
fisubrl
jbe
mov
jmp
lock
mov
mov
push
and
push
mov
xchg
jle
lcall
or
mov
test
mov
push
pusha
mov
jmp
ror
xor
pop
sbb
mov
roll
or
xchg
dec
dec
ret
adcl
push
mov
das
js
mov
xlat
adc
inc
fcoml
sbb
and
xchg
fcomi
cwtl
or
ljmp
mov
jne
aam
imul
js
mov
jmp
out
pop
test
insb
pop
lahf
push
push
push
movsb
dec
aad
sbb
pop
aaa
jge
sbb
inc
or
outsb
add
add
cwtl
pushf
gs
scas
mov
je
cltd
fs
sbb
sahf
jl
js
adc
hlt
jno
push
xor
xor
js
lods
cmp
jb
nop
std
call
ss
fwait
and
iret
in
adc
mov
popf
add
hlt
inc
sbb
jnp
js
and
xchg
inc
scas
pop
push
addr16
inc
inc
sbb
sahf
add
rorb
aas
fimull
arpl
icebp
dec
adc
jecxz
sbb
xchg
push
mov
inc
mulb
incl
pop
add
mov
sar
sti
and
lods
jae
fs
pop
clc
insl
adc
hlt
mov
cltd
xor
xor
push
loopne
lods
mov
adc
data16
jp
int
ljmp
sbbl
dec
fisubrl
dec
movsl
jae
fisubrs
sahf
and
ds
ret
pop
sub
shlb
push
inc
and
inc
lock
xorl
insl
xor
sbb
add
sbb
mov
mov
pop
enter
cmp
insb
sub
and
mov
cmp
test
or
je
pop
and
adc
adcb
cmp
ret
outsb
push
cmp
fs
mov
mov
cli
stc
daa
mov
lds
push
or
push
add
push
fwait
or
decb
data16
inc
popa
mov
ljmp
dec
int3
sbb
push
popa
ja
aaa
xor
mov
inc
movb
add
lea
sub
cmp
mov
mov
and
mov
fwait
mov
mov
mov
push
xchg
inc
mov
popa
and
rolb
add
fcoms
nop
in
in
xchg
adc
rol
xchg
outsb
lea
xor
mov
mull
inc
je,pt
xor
sbb
adcl
push
and
test
mov
hlt
cmpl
sbb
pusha
movl
mov
or
add
cld
outsb
loope
push
js
repnz
inc
sub
mov
jle
lret
jae
sub
mov
cwtl
adc
out
xor
inc
add
daa
popa
test
add
adc
mov
cmc
inc
mov
es
insl
adc
add
or
mov
sahf
xor
data16
test
xchg
xchg
push
xchg
or
or
sar
rcrl
add
inc
and
mov
add
shrb
push
mov
pop
dec
mov
fimuls
clc
push
sbb
aaa
dec
or
add
ret
cmpsl
mov
push
cmpsb
ja
adc
bound
mov
outsl
add
mov
das
movsl
xor
push
mov
sub
add
sar
lea
pusha
imul
fistpll
in
pop
or
push
lods
dec
insb
dec
cmp
sbb
call
and
inc
and
mov
cmp
push
cwtl
dec
pop
cmc
clc
test
lret
mov
xor
push
mov
jle
outsl
adc
imul
pop
inc
loope
loopne
rclb
mov
pop
mov
mov
push
pusha
cmp
cld
lret
das
or
pop
mov
cmp
mov
inc
pop
dec
or
inc
inc
push
sbb
insl
push
pop
dec
addb
push
dec
lds
lods
rcrb
push
in
adc
bound
aaa
adc
inc
push
mov
cmpsl
pop
call
xor
cld
ss
out
or
xor
shll
push
mov
fcoms
and
push
mov
dec
jecxz
push
fcmovnb
push
je
aas
jl
leave
outsl
scas
dec
loop
je
ret
int3
push
in
rolb
orb
jg
or
mov
push
pop
out
pop
hlt
and
in
clc
incl
jl
mov
dec
inc
int3
leave
ret
sti
aas
sub
js
mov
outsb
nop
sbb
movsb
mov
push
jne
subb
adc
loopne
dec
adc
aaa
cmp
pop
cmp
mov
rorl
sahf
inc
cwtl
xchg
lock
cmp
push
and
push
add
sbb
jne
xchg
fdecstp
int
cs
mov
inc
sub
sbb
nop
jge
inc
test
negb
push
add
dec
pop
lods
mov
and
shl
or
call
ss
add
fildl
int3
ljmp
jge
push
dec
mov
adc
push
enter
cmovns
adc
add
cwtl
push
pop
cmp
fwait
test
and
arpl
aas
lods
inc
sbb
add
out
push
push
hlt
icebp
jae
fbstp
shlb
pop
dec
adc
arpl
hlt
dec
jo
std
lea
push
ret
mov
add
mov
cld
jp
or
sbb
test
cmp
ret
xorb
cmp
add
sbb
pusha
mov
ja
out
scas
jne
mov
xor
sbb
ret
xchg
xchg
inc
je
imul
mov
popa
mov
sbb
in
push
call
sti
div
add
jo
lds
test
pop
add
jnp
cmp
cmp
or
pop
inc
ss
inc
fdivs
xchg
and
je
add
cmp
es
fwait
dec
jo
jae
pop
push
jbe
inc
ficoml
pop
outsb
shlb
in
lret
stos
add
sbb
je
popa
mov
imul
cld
lahf
movsb
jle
mov
cmp
sbb
das
inc
mov
movsb
mov
add
inc
js
rsqrtps
push
inc
xor
in
test
out
push
ljmp
nop
aam
lock
dec
mov
xor
mov
push
sti
pop
or
adc
pop
test
inc
dec
add
sbb
mov
inc
xchg
xor
lcall
xor
and
jmp
mov
ljmp
mov
fs
mov
push
or
adc
push
add
ds
pop
je
popa
test
mov
adc
fiaddl
enter
or
inc
jp
inc
push
jnp
cmp
pop
xor
jp
sub
mov
test
pop
dec
rclb
je
ljmp
or
cmp
incl
mov
xor
clc
jl
xchg
rol
pop
je
shrb
rcll
xor
xorb
or
mov
dec
pushf
sub
int
or
mov
add
jl
xchg
int3
fwait
adc
inc
test
das
push
jne
push
lods
shlb
leave
sbb
mov
add
push
cmp
mov
push
test
test
adc
inc
leave
int
out
mov
shll
add
add
lock
in
ljmp
repz
add
clc
call
pushf
xor
xchg
dec
inc
shlb
sbb
xor
les
mov
lret
or
xchg
cmc
add
mov
mov
iret
and
in
push
mov
add
sahf
mov
jne
xlat
inc
mov
and
out
adc
adc
pop
lock
or
inc
movsl
xchg
jle
lea
sub
xor
pop
std
fildl
jbe
cwtl
clc
test
dec
clc
inc
out
lcall
or
sub
int3
xchg
push
adc
inc
and
lcall
pusha
xchg
subb
push
rcrb
outsb
aas
or
xchg
int
push
cmc
xchg
imul
mov
mov
sub
and
and
and
pop
adc
cmp
das
cmpb
clc
mov
aaa
or
and
jbe
repnz
icebp
add
mov
pop
push
fdivr
push
jb
call
mov
cmpsb
and
clc
and
scas
add
mov
add
lea
cli
inc
inc
adcl
mov
sbb
jmp
add
sub
sub
dec
fisubrs
pop
ret
push
jbe
pop
clc
xchg
fistpl
adc
addl
daa
or
jbe
cs
pusha
std
int3
jp
fsubl
or
jle
add
push
xor
add
fdivl
mov
cli
pushf
je
dec
in
test
call
push
andb
and
mov
insb
insb
add
push
push
in
lods
in
imul
cmp
pushl
inc
or
mov
jge
inc
dec
je
inc
call
dec
mul
lret
push
mov
js
push
movsbl
sub
mov
push
pushf
mov
mov
gs
jbe
in
xchg
fdivr
push
xor
xchg
xor
mov
cli
clc
cmpsl
add
rorl
cmpsb
push
mov
add
jl
std
scas
pop
loopne
xchg
push
cmpsb
mov
orb
or
repnz
fxtract
mov
cmp
sub
pop
mov
dec
lock
mov
decl
fistps
jo
sarl
imul
and
pop
dec
and
rcr
int3
in
push
gs
shll
rcl
pop
lock
push
jne
rolb
adc
push
mov
mov
and
jl
push
add
inc
cmp
lcall
xchg
pop
xchg
loop
add
orl
dec
pop
enterw
filds
loopne
cwtl
stos
js
stos
adc
hlt
xchg
mov
inc
xchg
mov
iret
loopne
mov
push
in
int3
sub
subb
xchg
shlb
inc
mov
push
jnp
gs
adc
subb
push
adc
movb
in
or
rcll
mov
push
pop
sub
in
add
jl
mov
inc
mov
lods
gs
ljmp
mov
push
insb
mov
mov
adc
jbe
fldt
inc
add
clc
add
fucomip
mov
shll
adc
das
sbb
decb
loope
clc
or
scas
pushl
cld
and
or
call
mov
inc
and
lcall
sahf
mov
pop
fsubl
inc
mov
loopne
inc
mov
jmp
or
lcall
lea
aaa
sbb
mov
addr16
outsb
mov
test
and
jne
xchg
adcl
clc
and
jnp
push
dec
inc
shrb
mov
and
cmpsb
and
shl
js
cmp
mov
pop
movsb
sub
or
rcrl
jo
mov
mov
hlt
push
cwtl
fcom
sub
inc
and
sub
inc
imul
jp
stos
push
mov
clc
insl
xor
mov
data16
pop
call
cs
test
ret
mov
sub
inc
cli
out
iret
push
pcmpeqw
add
test
push
or
ud0
clc
mov
jb
push
add
scas
dec
je
fs
inc
orl
movsb
or
sahf
jmp
xor
sub
roll
mov
push
pop
mov
outsb
mov
mov
jno
dec
sarb
std
mov
movsb
xor
or
pushf
scas
jl
clc
addb
push
leave
cmc
adc
sbb
sbb
stos
mov
adc
cs
es
push
lret
sub
in
ret
aad
add
add
sbb
sbb
das
clc
dec
or
cli
or
lods
add
stos
lcall
testb
inc
add
insb
enter
int3
inc
mov
push
dec
sahf
sub
mov
negb
dec
je
loopne
sub
sbb
les
mov
cli
scas
mov
call
jo
mulps
inc
mov
dec
mov
nop
mov
pop
and
lods
iret
in
adc
lock
fistl
test
xchg
cmovno
jecxz
pop
fmul
fsubrs
add
hlt
mov
and
movsb
ficompl
cmp
in
mov
fisubl
repnz
mov
mov
adc
pop
in
cwtl
in
xlat
dec
push
pusha
sbb
push
add
js
sbbb
mov
pop
xchg
jmp
mov
push
jne
add
lcall
add
add
add
push
xor
cmpsl
adc
test
push
push
xor
shll
add
shlb
cmp
or
push
test
or
pop
clc
sub
and
add
int3
mov
push
and
push
sbb
pushf
scas
out
and
add
add
push
pop
jno
lods
mov
loopne
xor
sub
pop
adc
test
and
hlt
mov
or
jmp
mov
adc
jle
imul
sub
aaa
adc
repz
inc
mov
bound
cmc
fs
and
push
cs
loopne
loopne
and
xor
test
push
jno
test
xor
icebp
je
adc
call
sbb
rorb
and
rcl
inc
test
pop
or
push
call
popa
stos
push
adc
sub
jle
push
inc
aam
scas
push
daa
in
add
leave
inc
push
out
lds
mov
sub
aaa
push
popf
sub
xchg
sbb
cmp
out
or
and
xor
das
push
cwtl
jne
fwait
or
sar
cld
push
cmp
in
add
dec
lock
icebp
add
mov
pop
mov
insb
jb
pop
push
pop
shr
inc
adc
in
push
repz
mov
adc
push
neg
cltd
rcrb
nop
loope
push
aas
stos
mov
test
cmp
push
xor
inc
loope
jmp
mov
test
loope
sarl
mov
push
lods
andb
sub
jb
cmpsb
mov
pusha
adc
sub
pop
inc
jmp
cmpsb
movsb
push
call
sti
and
andl
add
test
pop
cli
jl
aad
xor
sub
rcll
mov
add
add
lea
add
out
push
insl
rcll
inc
daa
sub
je
cwtl
fdivs
js
idiv
add
xchg
add
outsl
jb
add
xor
pusha
cmp
sbb
decb
pop
decb
and
push
dec
roll
xchg
enter
dec
mov
and
test
jle
stc
fcoms
fsubr
fdivs
push
insb
dec
pop
add
push
and
sbb
pusha
je
rcrb
or
xchg
int
sub
pop
pop
push
and
push
inc
pop
hlt
ret
jg
call
jmp
std
xor
and
mov
pop
fcoml
dec
pop
push
xchg
sub
xor
cli
aas
add
or
mov
mov
fdivs
adc
add
mov
push
fidivs
mov
sbb
sub
mov
shl
sbb
ret
adc
shrl
ljmp
pushf
push
enter
and
add
fadds
js
push
in
jecxz
mov
inc
js
or
mov
add
or
loopne
adc
inc
out
jno
jmp
push
sub
int3
cwtl
xchg
adc
add
jp
lcall
fwait
add
lea
add
xlat
lea
xchg
cmc
std
pop
jo
repnz
hlt
add
cli
std
rcrl
sbb
push
loopne
or
jecxz
test
in
and
lods
pop
inc
std
or
js
cmpsl
or
push
push
ds
ljmp
inc
mov
das
movsl
jg
loope
adcl
es
lds
mov
mov
imul
pushf
sub
cmpsl
stos
sub
adc
and
fs
fistps
int3
adc
mov
mov
icebp
mov
mov
mov
ja
sti
push
fdivs
xor
es
hlt
movsl
leave
inc
pusha
inc
shrb
clc
mov
cmpsl
and
pop
mov
sarl
pushl
lea
mov
dec
lds
out
gs
inc
std
fstl
jo
mov
mov
inc
dec
shrb
sbbb
hlt
ljmp
inc
xchg
dec
jg
and
scas
movsb
jmp
sahf
fcomps
mov
icebp
or
scas
test
push
jo
jmp
mov
fwait
dec
mov
dec
pop
push
fdivp
scas
adc
fadd
rolb
jle
rcrl
jp
pop
int
cmp
shlb
std
pop
cmpb
or
lret
scas
jp
or
cwtl
es
jl
sub
call
sub
inc
mov
sbb
ds
xor
pop
cmp
stos
xchg
mov
jp
mov
adc
cmp
insl
xor
mov
popa
jae
mov
add
jge
shrb
add
movsb
sbb
or
popl
adcl
cmp
or
mov
push
fwait
inc
inc
rclb
and
je
hlt
cld
xor
cld
add
mov
push
int3
sub
pop
orl
xchg
nop
jb
or
cmp
rcl
pop
add
inc
add
push
data16
rol
and
pop
mov
sbb
addb
and
pusha
mov
cld
repnz
inc
int3
test
mov
bnd
jne
inc
loope
gs
push
and
pusha
mov
mov
movsb
shlb
loop
sbb
js
das
loope
jbe
bound
cld
popa
jmp
js
jmp
test
push
push
push
ja
push
xor
push
pop
stos
push
mov
cmpb
sub
dec
aas
pusha
loope
enter
pop
lret
dec
stos
sub
aam
clc
mov
sbb
xor
push
inc
xor
add
pop
cmpsl
addl
inc
jbe
icebp
ja
adc
sub
mov
dec
inc
mov
push
pop
inc
decl
mov
out
cmpb
mov
lock
push
mov
adc
sub
je
inc
push
pop
incl
dec
and
mov
xchg
cmp
rclb
adcl
outsw
or
test
shll
mov
std
loope
inc
out
and
xor
add
jle
add
dec
push
cltd
leave
clc
test
push
and
pop
pop
lock
mov
sbb
or
jecxz
mov
test
lock
out
sub
rorl
inc
cmp
mov
adc
or
jnp
adc
cli
sarb
rolb
outsl
jbe
xor
jne
xchg
rol
repz
in
test
or
jnp
mov
sbb
add
xchg
lods
add
or
das
test
xchg
dec
push
dec
mov
jmp
xchg
push
inc
andl
ljmp
inc
push
repz
shrb
mov
shll
jmp
sub
lea
push
dec
in
incl
test
mov
jle
cld
aas
ljmp
decl
jle
je
call
cwtl
xchg
mov
mov
incb
and
inc
xorl
adc
mov
push
gs
ja
sbb
push
add
push
push
test
lods
hlt
add
hlt
pop
or
pop
outsb
push
add
push
ss
pop
movb
pop
xor
mov
js
dec
and
jo
mov
pop
outsb
cmp
hlt
pop
test
test
mov
roll
scas
subb
pop
lea
pusha
fbstp
loopne
inc
popa
ret
add
adc
rolb
test
je
ljmp
mov
mov
pop
fs
mov
adc
dec
sarb
aas
lcall
cld
inc
push
push
xchg
cmpl
xchg
lock
push
stos
or
or
pop
pop
sarb
pop
popa
pop
cmp
mov
rclb
or
pusha
testb
sbb
cmp
sub
mov
push
shll
cmp
int3
adc
sub
fistpl
rolb
jg
pusha
shlb
add
cmp
and
shl
and
pop
adc
pushl
ljmp
cli
sbb
ds
mov
ret
xchg
xor
fildll
sahf
xor
sahf
rol
pop
push
cs
jbe
dec
lock
push
fmull
mov
rclb
inc
rclb
cmp
aam
jb
mov
aaa
mov
sbb
and
adc
add
inc
mov
sub
dec
dec
mov
cmpsb
arpl
xor
dec
movsl
cmpb
jge
mov
push
shlb
dec
test
pop
in
enter
dec
jnp
xor
icebp
dec
mov
test
xlat
call
mov
xor
mov
mov
les
nop
mov
decl
int3
jp
jge
rolb
insl
cmp
xor
mov
push
mov
pusha
ljmp
lods
or
sti
pop
xor
add
pushf
lcall
test
adc
lea
cld
inc
adc
mov
mov
clc
pop
sub
loope
jp
inc
add
push
fwait
sbb
std
int3
push
mov
divb
cli
or
xchg
add
push
fimull
mov
ljmp
je
lock
adc
hlt
mov
mov
and
add
sbb
cs
imul
xchg
xchg
xor
sub
xchg
adc
add
insb
inc
and
jnp
xchg
jmp
jg
xor
jmp
cmp
inc
aam
jo
sbb
in
mov
ret
or
mov
mov
fldcw
mov
and
mov
push
bound
mov
mov
add
mov
dec
int3
cs
add
fildl
insb
or
ljmp
inc
testb
and
aaa
dec
pop
je
add
test
pop
gs
test
pop
repnz
sti
inc
push
push
jge
out
inc
rorl
mov
mov
adc
aam
mulw
sbb
inc
xor
aaa
dec
lret
cmp
xchg
sbb
ss
stos
cmpsl
aas
bound
add
xor
mov
mov
add
push
jbe
std
fstpt
pop
push
and
lcall
xor
rcll
sbb
inc
scas
push
mov
popf
sbb
cmp
roll
mov
fcoms
lret
pop
ret
sbb
sbb
jge
dec
in
inc
test
mov
inc
pop
cld
je
rclb
pop
pusha
push
lock
mov
push
popa
jle
inc
stos
das
call
mov
je
ret
adc
sub
loope
call
dec
dec
shrb
mul
mov
and
icebp
pushl
pusha
cld
frstor
xor
shll
add
inc
sub
push
pop
bound
mov
shlb
mov
adc
or
loopne
in
roll
clc
mov
xlat
fadd
sbb
cmp
pop
mov
push
cmp
jbe
out
and
fildl
lcall
jl
or
sbb
sub
pop
bound
adc
and
or
push
and
jo
test
and
sahf
mov
or
mov
mov
push
std
mov
mov
out
mov
push
inc
mov
imul
shrb
bound
adc
adc
fcompl
mov
xorb
xor
ficoml
popa
mov
rclb
sbb
push
inc
loope
mov
mov
test
insb
lods
sbb
sbb
pop
pop
mov
or
in
and
aaa
fsubrs
test
jne
xorl
repnz
or
jmp
sti
es
sub
inc
mulb
mov
mov
cmp
push
push
inc
shrl
add
jmp
hlt
movsb
jge
jo
mov
mov
sub
jb,pn
paddd
cs
mov
adc
xor
test
or
leave
ljmp
scas
xor
push
push
xchg
ljmp
mov
pop
xor
jle
sbb
imul
mov
addb
movsl
mov
inc
fs
cld
mov
enter
test
add
icebp
xchg
push
jp
repz
mov
mov
lds
adc
loopne
mulps
je
test
ss
sbb
mov
pop
nop
xchg
mov
sahf
rol
in
adc
cli
cld
push
push
cli
and
clc
gs
aas
dec
pusha
lods
call
adc
push
jbe
js
xor
or
pusha
mov
sub
xor
mov
mov
sub
dec
pop
mov
sub
in
clc
inc
sbb
fwait
ss
jne
movsl
adc
adc
pop
outsb
push
ljmp
mov
call
rolb
sbb
dec
adc
add
inc
sbb
mov
roll
push
rcrb
inc
add
push
loope
xor
mov
pusha
cmpsl
pushl
push
and
inc
pop
sub
pop
incb
or
push
stos
cmp
call
lcall
inc
imul
and
movsb
xchg
lcall
xor
lcall
push
push
add
je
call
fisubs
test
mov
jg
nop
out
bound
lea
jl
inc
fstps
jle
adc
pop
test
js
nop
jb
mov
hlt
mov
rorb
add
data16
dec
inc
fs
mov
ret
es
cli
mov
jge
mov
data16
inc
fs
xchg
xchg
imulb
inc
jbe
push
imul
dec
sub
mov
loop
pop
in
lock
add
fiadds
pop
sbb
in
and
lds
and
cmp
push
lret
dec
in
pop
dec
scas
addl
insb
pop
inc
lock
and
outsb
shlb
ds
daa
scas
js
xchg
or
scas
cmp
ljmp
sub
lea
push
ficoml
mov
sbb
lret
insl
jmp
aas
cwtl
stos
movsl
aaa
xor
xchg
or
test
sarl
outsb
jg
push
ljmp
cld
add
mov
or
aad
ds
fsubl
fcoms
inc
nop
cmp
adcl
or
push
mov
sti
sbb
adc
mov
inc
dec
push
int3
inc
cmp
aaa
cmp
adc
push
rclb
aad
mov
roll
mov
mul
push
mov
xor
pop
int3
adc
xor
add
bound
inc
push
and
outsb
shrb
sbb
mov
mov
cli
dec
rorl
push
outsb
add
and
xchg
mov
adc
cli
cmp
insl
pop
insb
push
xchg
add
inc
jo
stos
xor
lret
jg
aad
mov
cmp
jl
enter
pop
xchg
cmc
inc
push
dec
push
ret
fadds
fbld
loope
add
je
add
mov
dec
sbb
xchg
push
aaa
adc
mov
lcall
jp
or
sbb
es
stc
push
cwtl
push
test
pop
xchg
xchg
cmpsb
jmp
add
add
aas
lret
repz
mov
repnz
adc
xor
push
mov
add
fdivl
inc
pushl
in
add
pushf
mov
pop
lods
push
push
jno
stc
int3
mov
mov
sarl
test
mov
je
xor
mov
push
mov
jne
jl
push
and
in
xor
lods
push
xor
les
in
stos
sbb
jmp
mov
insl
pop
adc
pusha
sbb
pop
cmpsb
popa
cld
jp
dec
aaa
daa
xor
ficomps
shl
mov
jno
mov
mov
aad
dec
test
sti
mov
add
mov
mov
or
mov
jp
jb
int
iret
orb
fs
mov
nop
out
movsb
mov
sbb
test
add
aas
decb
daa
mov
dec
mov
sub
sbb
or
pushl
or
cmp
inc
adcl
je
into
mov
or
test
xchg
sbb
xor
cs
push
inc
scas
mov
imul
and
int3
mov
jl
inc
out
add
push
jne
jno
mov
movsb
outsl
fildll
mov
xchg
pop
dec
cmpsb
push
add
adc
cmp
sub
adc
leave
mov
push
rolb
adc
fwait
lock
inc
repz
aam
mov
popf
mov
arpl
fiaddl
adc
ss
inc
mov
fsubl
jl
add
or
jae
dec
pop
or
push
xor
jae
dec
mov
int3
mov
int
outsb
mov
ret
enter
push
mov
mov
push
dec
pop
andl
mov
icebp
sbb
dec
sub
sbb
cs
icebp
orl
ljmp
ja
jbe
push
mov
adc
mov
cmc
test
stc
and
sti
mov
push
and
sbb
push
sub
mov
push
ljmp
decl
xchg
xor
je
dec
lret
inc
cmp
adc
push
aad
mov
pop
dec
inc
dec
inc
fsubl
mov
sbb
and
mov
test
mov
mov
jle
pop
les
add
lea
cmp
inc
fwait
and
insl
jb
mov
stos
or
fstpl
xchg
push
push
jnp
push
fmull
inc
rolb
cmc
lret
add
xor
mov
outsb
push
adc
push
mov
decl
enter
lods
mov
shl
xor
cmp
lock
jmp
pop
jbe
jno
adc
cltd
aas
es
jl
faddl
push
inc
call
cmp
adc
sub
cmpsb
sahf
sub
jb
fisttpll
lds
fcmovu
imul
push
push
xor
out
jp
les
sub
or
loopne
je
icebp
les
push
je
jecxz
mov
pop
push
icebp
xchg
dec
sar
in
mov
push
sbb
rclb
push
les
fidivrl
sti
ljmp
adc
loop
mov
adc
add
imul
call
adc
cmp
pop
add
lea
sbb
cmp
mov
sbb
add
or
sbb
mov
in
jge
aaa
test
and
xor
sub
aaa
js
les
mov
fs
cmc
cmp
call
call
icebp
pop
out
cmpsl
incb
inc
jl
sarb
mov
push
push
mov
sbb
push
or
jnp
test
sub
xor
scas
xor
sub
das
shl
xchg
add
std
jbe
push
add
sub
mov
sbb
std
fsubrl
mov
push
leave
xchg
inc
fnstenv
and
lea
mov
dec
inc
insl
subb
push
xchg
mov
push
pushl
repz
fisubl
or
cmp
push
pop
sbb
cwtl
or
push
les
sub
mov
orps
push
repnz
push
icebp
inc
jp
ljmp
in
xchg
fs
int
outsb
mov
push
cmp
addr16
add
call
push
shl
pop
jmp
xchg
call
nop
and
push
inc
mov
ret
andb
mov
push
cs
lds
stos
push
push
subl
rcl
pop
push
test
dec
mov
adcl
pushf
and
mov
dec
jl
jo
test
int3
cli
and
adc
dec
imul
aam
cmp
popa
sbb
inc
or
js
les
fsubr
mov
pop
or
or
scas
push
inc
adcb
test
jo
add
sahf
rolb
jg
popa
sbb
mov
add
add
enter
mov
incl
aam
pop
xchg
add
mov
mov
test
mov
cltd
inc
js
pop
ret
insl
sub
push
jo
fisttpl
clc
testb
jb
cmc
in
out
insl
sbb
sub
pop
js
js
jle
aam
inc
cli
pusha
jl
mov
fsubrs
xor
aam
jno
pop
jne
mov
das
jl
repnz
mov
cltd
out
mov
mov
add
and
rclb
mov
call
pop
sahf
pop
push
fnstenv
mov
popa
pop
cld
xor
aas
mov
out
bound
cwtl
adc
arpl
adc
mov
dec
bound
fs
push
xchg
and
mov
push
push
mov
cmp
add
mov
ret
mov
xchg
cmp
mov
adc
xorl
icebp
out
pop
ret
inc
std
les
inc
xor
lahf
lret
push
and
push
dec
pop
int3
sbb
shrb
nop
mov
sub
lock
insb
mov
mov
cmp
dec
sahf
fmuls
pop
cld
in
sbb
push
fisubrl
cwtl
adc
xchg
mov
mov
mov
or
dec
bound
mov
xorb
mov
hlt
xchg
mov
adc
and
mov
and
pop
cs
or
mov
bound
clc
push
adc
lds
pushf
test
ss
mov
fisubrs
jge
fildl
cs
popa
call
or
pop
cmp
cmp
add
add
inc
sub
ret
push
adc
mov
add
add
ds
mov
mov
add
negl
cld
push
adc
adc
mov
sbb
push
adc
adc
add
pop
mov
pop
call
fiaddl
mov
push
andl
add
and
pop
pop
add
pop
inc
scas
xchg
adc
or
and
das
mov
inc
and
pusha
mov
shrl
mov
inc
orl
aam
adc
or
adc
test
push
sahf
jp
iret
jmp
shrb
xchg
mov
or
push
ret
test
fcoml
xor
inc
call
movsl
inc
ret
jg
js
inc
lods
xchg
loopne
shr
and
xor
mov
or
test
sbb
or
in
into
std
daa
mov
les
lretw
add
inc
ret
adc
inc
cs
std
dec
and
cld
outsl
sti
xchg
outsb
ror
dec
test
je
loopne
sbb
inc
mov
pop
and
or
xchg
and
enter
mov
mov
jp
adc
test
mov
mov
jge
pop
pusha
test
nop
rclb
pop
je
mov
jb
daa
inc
mov
inc
cmp
mov
and
lret
into
rcr
and
adc
addl
add
mov
outsl
sub
pushf
or
and
mov
mov
fsubr
divb
dec
xor
jle
rcrl
in
pop
cmpsl
cmp
shr
movb
pop
lea
fs
aaa
cmpsb
mov
xchg
sti
lock
popf
inc
or
push
mov
in
sub
push
jmp
fcmovbe
int
mov
push
pop
adc
shll
adc
or
xchg
in
outsb
jp
xchg
or
popa
inc
mov
adc
mov
sbb
or
push
inc
les
mov
xchg
push
lcall
loop
jg
pusha
xchg
cmp
mov
enter
add
sbb
push
out
mov
xor
add
adc
sahf
je
aad
mov
shl
mov
sbb
add
add
and
inc
add
mov
or
inc
mov
movsl
outsb
mov
dec
in
xor
push
inc
push
pop
icebp
and
push
add
rcl
push
mov
ljmp
push
rcrb
je
cmp
idivb
mov
xchg
pop
mov
cmp
xor
jl
cld
movsb
pop
add
sub
cmp
dec
mov
pop
hlt
fs
mov
dec
mov
pushl
arpl
aas
xor
dec
add
jae
add
pop
clc
mov
push
mov
bound
add
jns
or
sti
ret
sub
add
jge
addb
int
cld
jecxz
mov
mov
and
rcr
push
pushl
and
ret
mov
nop
or
jbe
loopne
in
pop
mov
and
leave
or
inc
inc
es
push
or
and
pop
or
xchg
mov
in
jne
icebp
mov
mov
cmp
into
in
add
adc
pusha
xchg
or
xchg
jmp
mov
add
call
es
adc
inc
xor
push
push
icebp
sbb
add
aaa
jo
add
add
aaa
jecxz
hlt
jb
movl
push
ljmp
sahf
push
add
adc
push
add
nop
mov
pusha
sti
nop
sbb
mov
call
scas
mov
mov
out
and
outsl
enter
sahf
movsb
mov
je
cmpsb
push
push
jo
fdiv
push
data16
lret
hlt
or
pop
add
mov
ljmp
dec
outsl
sbb
sbb
aas
insb
mov
popa
js
dec
mov
aam
pop
dec
in
xchg
std
addl
xchg
imul
mov
jne
imul
add
or
inc
movsl
std
inc
clc
rorb
cmp
adc
add
xchg
push
add
inc
mov
xor
outsb
sbb
shlb
incb
adc
shrb
cli
inc
push
mov
andb
icebp
adc
jmp
push
rorb
push
imul
xchg
mov
cmp
pop
lock
xchg
add
clc
imul
stc
push
mov
push
push
cmp
call
jl
out
mov
mov
push
gs
pop
add
lcall
rcr
mov
iret
mov
clc
cld
repz
shll
cld
inc
cli
adc
mov
je
mov
daa
out
or
pushl
stos
pop
cmc
adc
insb
mov
inc
add
mov
enter
push
mov
out
flds
inc
dec
test
test
mov
push
or
shlb
adc
ret
adc
lea
inc
cli
ja
loopne
cmp
jl
push
xchg
les
dec
jmp
test
test
push
mov
cld
mov
mov
add
push
adc
dec
loop
push
cmp
scas
inc
fisubrl
cmp
push
shrb
mov
push
lods
jg
in
pusha
xor
ret
leave
mov
mov
lea
push
mulb
xor
pushf
adc
mov
int3
sub
push
ret
jb
inc
call
lea
pop
add
inc
push
out
test
cwtl
clts
aam
push
out
je
incl
mov
xor
scas
sbb
sub
je
pop
in
pushl
sub
in
xchg
xor
shlb
sub
mov
in
or
pop
orl
sbb
adc
lods
add
pop
divl
lock
out
or
adc
divb
add
cmp
and
imul
adc
add
inc
and
imul
and
push
add
sbb
ficomps
out
jmp
jno
add
adc
enter
jne
je
push
mov
cltd
cmp
stos
mov
loope
lock
arpl
and
push
mov
inc
aas
dec
xor
sbb
cmp
dec
mov
inc
dec
gs
jb
or
test
test
or
pusha
mov
xor
push
int3
in
and
adc
outsl
in
insb
inc
pmaxsw
sub
pop
cli
push
lcall
dec
sub
push
shl
and
xchg
loop
insb
stos
es
sub
cli
mov
push
dec
adc
adc
inc
fsubs
mov
sar
call
not
add
je
push
push
inc
xchg
nop
loop
mov
mov
test
mov
jo
add
mov
mov
mov
xor
mov
test
es
or
sub
pop
push
mov
fimull
sub
push
xchg
rorb
in
adc
outsl
adc
jg
or
xchg
jp
xchg
clc
add
push
ret
mov
push
add
mov
loop
pop
mov
aad
je
xor
xor
push
push
ljmp
dec
cmp
xor
arpl
orl
xor
jl
test
xor
adc
inc
adc
sub
push
push
cmp
mov
in
add
ret
ret
xor
pushl
sar
vaddsubps
shrb
or
pop
inc
fdivs
add
and
pop
xor
add
shll
xor
fimuls
fsubrp
jb
aaa
cld
mov
stos
aad
std
xor
pop
decb
clc
and
xchg
ret
lea
loopne
mov
push
push
call
xchg
clc
push
ds
daa
aaa
push
outsl
xlat
test
loopne
loopne
subl
push
push
adc
jbe
push
mov
insl
clc
icebp
in
inc
adc
mov
cmp
add
adc
call
lods
dec
add
enter
pusha
dec
jl
and
add
inc
test
ret
jmp
lea
movsl
push
add
bnd
jo
aas
push
pop
fimuls
or
ficompl
mov
adc
inc
shl
cmp
test
sbbl
xchg
mov
icebp
and
ljmp
jl
adc
icebp
xor
jo
aaa
dec
push
inc
lock
jle
jmp
inc
aaa
and
ret
mov
fs
decl
insb
jbe
es
aaa
mov
or
dec
rorb
push
fiadds
aad
ss
mov
fmull
xor
les
nop
rcr
mov
sbb
add
cld
adcb
push
rorb
cld
rorl
fwait
mov
sbb
shll
mov
clc
das
and
mov
loop
mov
mov
scas
and
mov
pushf
loop
cli
aaa
hlt
cmp
bound
add
push
push
push
pop
jne
inc
mov
cli
sar
jne
fistpll
mov
cmc
cmp
loop
pop
shrl
push
adc
inc
bound
cld
mov
mov
test
mov
push
fcomps
shll
incb
lret
addl
fcompl
add
pop
leave
hlt
nop
dec
adc
push
sbb
sub
mov
test
or
xchg
or
dec
pop
push
pop
lret
icebp
scas
sub
je
std
xor
pop
xor
jl
sti
popa
sbb
cwtl
xchg
fcoml
test
wbinvd
xchg
sub
int3
lea
cwtl
push
stc
js
cmp
cmp
cld
popa
add
cmpsb
decl
jns
xor
clc
mov
push
add
inc
test
mov
je
insb
stc
add
jmp
sbb
in
cmc
adc
cltd
xor
inc
clc
es
xorl
negl
sarb
out
adc
push
ljmp
or
rorl
pop
mov
adc
stos
push
pushf
jne
push
es
inc
cmp
lock
test
mov
push
popf
test
lods
in
inc
ss
ret
jle
push
cli
or
or
sbb
pop
jg
fcoms
mov
add
mov
inc
shlb
mov
out
mov
les
mov
push
out
ror
sahf
insb
mov
sar
enter
in
adc
mov
imul
shlb
sbb
fiadds
xor
adc
hlt
cmp
pop
lods
dec
pop
or
inc
loopne
es
into
pop
lahf
pop
fildll
mov
add
bound
enter
pop
inc
xchg
pop
inc
cli
sub
sub
sahf
xchg
push
mov
test
or
inc
dec
cltd
les
push
nop
clc
inc
enter
xlat
mov
push
shll
stos
fistpl
mov
pop
pop
js
fcmovu
and
jne
fcomi
int3
mov
out
pop
dec
cmp
cmp
test
push
xor
push
icebp
or
scas
xor
mov
out
xchg
cwtl
cmp
xchg
sbb
jne
jmp
mov
ja
mov
dec
push
cmp
push
xchg
loop
decb
xor
hlt
ret
jbe
xor
mov
or
adc
or
adcb
inc
add
shlb
movb
mov
sar
mov
cmp
je
pop
adc
pushl
mov
push
gs
cwtl
adc
adcl
cmpb
push
test
mov
or
outsb
addps
xchg
loop
cld
add
xchg
pop
cld
jl
mov
add
mov
aam
fistl
test
testl
bswap
or
mov
lea
adc
int3
xchg
pop
lea
loope
ret
xor
stos
decb
pop
ss
push
lea
jo
call
or
mov
or
mul
ficomps
inc
test
test
insl
add
jp
jmp
scas
push
pop
cs
fcomi
sbb
lea
sbb
out
inc
lea
mov
loop
jmp
shll
sti
mov
loop
mov
and
popa
dec
or
jmp
push
inc
and
dec
insl
mov
or
mov
jne
repz
into
adc
les
xor
out
addb
mov
lock
movsl
test
lahf
inc
ret
mov
or
mov
jmp
mov
mov
in
lea
bound
xchg
mov
loop
or
inc
test
aaa
sbb
mov
decb
jmp
push
mov
mov
aaa
xchg
add
sbb
or
inc
je
mov
add
jmp
std
mov
lods
xchg
and
leave
in
jg
lods
add
out
faddl
loopne
mov
sub
sahf
test
sbb
movlhps
or
dec
dec
xor
in
pop
arpl
mov
adc
adc
aam
mov
push
jmp
add
pop
add
cvtdq2ps
jp
jecxz
outsl
cmp
mov
xchg
rcl
mov
mov
adc
and
shr
lock
lcall
mov
jmp
jmp
ss
cltd
rorl
sbb
fidivs
pop
push
scas
rorl
mov
jo
add
lock
fwait
leave
fs
cbtw
mov
jp
int3
or
xchg
sbbl
mov
push
dec
push
lock
jnp
xorl
inc
xchg
add
dec
jnp
movsb
mov
testb
out
call
push
std
inc
mov
bswap
lea
adc
les
jb
cmp
or
sbb
hlt
mov
mov
in
sub
push
pop
pop
adc
enter
jge
cmp
int3
xlat
add
inc
outsl
ljmp
mov
add
mov
inc
call
dec
adc
ja
push
lock
stos
cwtl
mov
scas
mov
sub
pop
loope
adc
inc
inc
mov
mov
push
je
in
mov
imul
mov
in
push
mov
fsubl
xor
mov
andb
sbb
xchg
jbe
shl
aad
and
int3
imul
jle
add
sbb
push
add
cmp
aas
decb
loopne
push
push
jmp
mov
in
and
xor
push
xchg
push
divb
cmpl
jge
pop
ret
loopne
sub
bound
adc
jo
inc
add
loope
in
cmp
in
lcall
push
fnstenv
ret
pop
and
lcall
enter
pusha
shrb
dec
fadds
xor
dec
or
or
xchg
icebp
mov
fs
add
sub
jbe
cli
out
ljmp
mov
aaa
inc
stos
data16
bound
inc
punpcklwd
push
add
cmp
scas
add
xchg
lea
mov
lods
lret
mov
push
gs
aaa
shrb
sarb
mov
lods
mov
add
mov
imul
pushf
inc
mov
mov
xchg
dec
push
pop
fsubrs
adc
jbe
mov
cs
jmp
inc
fcoms
cld
or
add
call
fistps
call
sbb
cmp
jle
cli
imul
adc
pop
add
jg
inc
push
clc
xor
das
cwtl
mov
cmpsl
push
ret
inc
cs
sub
push
pop
cltd
add
and
lea
adc
inc
out
pushl
inc
mov
push
out
push
xchg
shlb
adc
lods
dec
push
lcall
mov
pop
imul
sbb
sbb
mov
ret
cmp
sub
jge
or
cli
cmp
outsb
add
pop
or
pop
mov
jle
mov
mov
inc
dec
ret
mov
loopne
inc
pop
xor
call
xchg
mov
mov
add
lods
or
mov
ss
lea
push
incl
add
inc
mov
call
xchg
fnstenv
push
or
call
sub
jo
or
test
mov
lea
fmul
or
xor
roll
jnp
mov
xchg
out
cld
dec
popf
xorb
mov
push
test
inc
pop
pop
mov
xchg
adc
dec
mov
cmpsb
andl
mov
mov
xor
cmpsl
ja
clc
jo
idivb
cwtl
call
pop
jb
jae
mov
adc
sti
inc
out
imul
lods
mov
mov
jo
or
movl
and
js
push
mov
add
cmp
sti
jmp
idivl
cmpb
jle
sub
lods
jg
test
xor
jge
call
clc
daa
inc
jns
pshufw
lds
add
sbb
insl
xchg
inc
adc
mov
test
push
and
cmp
call
push
ljmp
stos
sbb
pop
add
add
stos
call
xor
mov
jae
adc
es
stos
shlb
push
or
call
push
es
inc
mov
xor
pop
scas
cmpsb
stos
sub
lock
movsb
aas
mov
sub
in
xchg
mov
cmp
pop
push
adc
mov
shll
and
insb
dec
outsl
add
loopne
xchg
push
ss
sub
jmp
call
gs
pushl
cmp
push
enter
mov
mov
call
mov
clc
pop
ret
fs
push
or
pop
jmp
add
ret
rcr
ds
sub
insb
test
or
movb
and
dec
dec
fnsave
or
shrb
xchg
jo
fs
cmp
call
inc
add
lcall
dec
ret
and
popa
and
sbb
mov
xor
js
jg
hlt
inc
mov
cmpl
pop
call
shrb
inc
in
lods
insb
pop
pushf
and
mov
push
aas
incl
movsb
cld
outsb
rcll
xchg
in
mov
test
scas
push
mov
pop
cmp
lock
jbe
adc
popa
inc
mov
sbb
insl
push
hlt
test
or
mov
pop
xchg
data16
mov
inc
fdivrp
into
push
or
je
jecxz
adc
push
and
mov
hlt
inc
pop
inc
pop
mov
add
fiaddl
cmp
jmp
sub
lods
sub
mov
pop
push
pusha
mov
movsl
pop
mov
popl
push
psllq
jl
lcall
es
inc
sub
pop
inc
xchg
stos
movb
mov
xor
jmp
mov
sub
add
pop
pop
jmp
and
adc
jbe
add
mov
test
in
call
lea
mov
or
push
pusha
popa
mov
inc
xchg
negb
psubq
mov
lock
sub
and
mov
outsl
mov
push
push
ret
inc
sub
push
pop
mov
dec
jmp
cmp
out
adc
dec
dec
dec
cmp
inc
pop
std
mov
mov
sar
push
add
inc
inc
das
xchg
clc
inc
mov
xchg
adc
fadd
dec
inc
addb
es
xor
jecxz
lods
pop
and
push
je
inc
inc
and
stc
xlat
xchg
idivl
xor
inc
inc
adc
pop
cmp
pop
push
sti
xor
insl
cmp
adc
call
push
mulb
cli
int
pop
lret
aam
add
out
orps
mov
outsl
sbbb
xchg
adc
aaa
push
push
lret
clc
icebp
cltd
add
push
adc
sbb
push
sahf
xor
cmp
orb
jmp
add
mov
mov
test
jl
test
adc
pop
hlt
popf
sub
fisttpll
mov
ljmp
xchg
jp
jne
jg
stos
cmp
mov
mov
fs
aas
adc
cmp
xor
fsub
jb
pop
cld
pop
movsb
add
adc
dec
or
cmp
add
in
dec
sub
std
rolb
loope
xchg
and
mov
adc
xchg
and
jne
bound
xor
in
test
sub
adc
add
or
or
or
sbb
inc
loopne
sub
cmc
mov
or
add
xchg
fs
sub
aam
imul
mov
lcall
into
int3
test
shlb
dec
ljmp
fisubrl
sub
pop
dec
mov
clc
push
loopne
or
or
gs
nop
addb
notb
jle
cmp
ret
andl
je
clc
fcmovb
inc
iret
add
lret
mov
icebp
mov
sub
paddb
push
leave
jle
lock
push
ret
sbb
push
mov
add
adc
fcmovnbe
mov
stos
pusha
mov
imul
pop
inc
incl
mov
adc
fists
cmpsb
add
add
xor
mov
stos
cmc
in
test
call
xor
repz
mov
inc
lea
inc
and
outsl
sbb
push
xchg
or
imul
mov
inc
push
mov
and
mov
roll
jns
sti
pop
add
outsl
testl
cld
push
sub
rcr
push
inc
add
xor
xor
push
shlb
rol
nop
or
adc
dec
and
mov
std
lea
mov
ret
data16
into
sbb
sbb
push
mov
mov
les
xor
mov
and
mov
xor
push
push
aas
scas
adc
push
dec
out
mov
inc
int3
in
ret
mov
outsl
subl
je
int3
insb
movsl
or
icebp
shlb
xchg
push
nop
xchg
add
js
mov
add
push
cmovp
jmp
and
rcll
mov
loope
dec
mov
push
jmp
in
add
imul
inc
nop
inc
or
std
lods
lcall
test
adc
add
cmp
dec
push
mov
xorl
mov
movsb
out
cli
call
pop
lea
inc
lods
rol
dec
add
push
xchg
sbb
add
xor
dec
push
mov
aaa
xor
mov
jbe
fs
or
sub
test
enter
shlb
js
push
popa
pop
mov
pop
test
test
or
mov
inc
adc
incb
ret
fmul
xchg
std
inc
push
lds
mov
or
jb
rol
push
aaa
sbb
jbe
jbe
sbb
add
fs
shrl
push
mov
dec
sub
mov
jne
call
shlb
push
sub
loopne
mov
push
mov
pcmpeqb
pop
mov
ficomps
mov
add
cld
adc
ss
cmp
pop
inc
dec
adc
mov
ss
sub
cmpsl
pusha
xor
pop
mov
mov
cmp
adc
mov
or
ficoml
loop
es
add
add
adc
test
test
rcl
gs
and
les
mov
lea
mov
scas
pop
outsl
adc
nop
inc
dec
push
sar
xadd
lods
or
sub
push
outsb
mov
popa
mov
je
nop
fs
add
ret
sbb
pop
push
fdivrs
mov
cmp
cld
mov
push
popf
imulb
lea
je
jne
or
inc
call
sbb
outsb
movsl
add
loope
orb
loopne
mov
aaa
es
adc
std
fisubs
and
lds
cmp
incl
or
popa
inc
push
and
adc
incl
mov
adc
dec
push
inc
outsl
leave
and
and
mov
fmuls
mov
pop
dec
mov
inc
add
lahf
inc
rol
mov
jne
enter
cld
loopne
cli
adc
fcoml
mov
xchg
lock
int3
fadd
push
dec
inc
jp
or
rclb
mov
int3
call
test
inc
sub
int3
mov
pop
lea
or
push
orl
test
cmp
cmpb
fnsave
inc
inc
or
mov
mov
test
adcb
mov
xor
lret
movsb
and
mov
xchg
icebp
jp
adc
cld
sbb
mov
sbb
or
call
lea
iret
sub
loopne
push
loop
arpl
pop
add
dec
jmp
adc
shll
mov
and
mov
mov
add
imul
lcall
push
cmc
xor
lock
loope
mov
int3
or
lock
shlb
sar
push
jb
stos
sbb
and
mov
inc
mov
sarb
mov
fmuls
rcl
mov
mov
mov
cmc
adc
aas
out
cwtl
push
and
jg
into
or
ds
mov
outsb
inc
adc
sahf
int3
inc
cli
push
mov
push
dec
int3
inc
fiaddl
mov
roll
aam
cmc
pop
out
pop
xchg
lods
das
add
jge
and
jg
mov
shlb
mov
add
cwtl
ja
les
ret
pusha
mov
pop
add
jae
jbe
xchg
cltd
lret
mov
das
ss
cmp
push
int3
mov
stos
pop
inc
cwtl
cmp
and
adc
dec
adc
insb
fidivl
mov
fimull
mov
mov
fstpt
jge
add
sbb
jne
add
lea
clc
jp
jae
neg
shll
mov
sub
mov
addl
cmp
and
into
clc
test
ljmp
push
adc
outsb
in
roll
sbb
mov
or
hlt
jl
ljmp
mov
testl
loopne
hlt
and
adc
test
lock
dec
jmp
js
or
loop
add
in
xchg
sbb
mov
in
add
jnp
sbb
ja
and
aad
clc
popa
sar
mov
outsb
sbb
inc
scas
inc
push
and
dec
push
mov
xor
inc
sbbb
dec
adcl
dec
pop
es
jne
jno
mov
les
inc
pop
mov
pop
enter
out
mov
add
add
pop
lea
mov
mov
fsubrs
inc
aaa
mov
enter
inc
jo
push
js
jl
xor
pop
jno
mov
adc
add
push
dec
iret
lock
insb
mov
xchg
sti
call
sub
popa
xor
and
pop
les
mov
jbe
xchg
add
pop
dec
or
mov
clc
sbb
pop
sahf
mov
addr16
mov
mov
stos
imul
fdivrl
call
repz
es
hlt
mov
call
fists
adc
mov
testl
data16
jbe
push
in
mov
pop
mov
and
add
pop
or
int3
adc
je
xor
sub
pusha
movsl
xlat
cwtl
shrb
out
xor
fs
adc
mov
mov
xor
jbe
and
jle
pop
xor
pop
fs
push
roll
icebp
adc
nop
pop
mov
mov
xchg
cmpps
sti
adc
int3
xor
xchg
hlt
push
inc
jb
or
cmp
sar
pop
push
clc
je
inc
ret
rorb
and
cmp
and
cld
mov
in
or
rol
sti
pop
xchg
in
loopne
je
jo
mov
add
cld
mov
fsubs
or
inc
mov
aad
rolb
sbb
cmp
sbb
inc
ds
mov
es
add
dec
and
test
mov
inc
lods
xor
decb
add
push
int3
or
inc
clc
sub
mov
push
ljmp
add
mov
push
and
out
pushf
mov
mov
dec
add
adc
orl
mov
repz
jmp
sbb
inc
xor
adc
inc
push
ret
scas
inc
jecxz
push
int3
mov
rol
push
push
jo,pn
clc
and
jb
jg
imul
inc
or
and
lock
incl
jae
jo
mov
xor
cmpb
mov
push
or
or
mov
dec
and
sbb
decb
into
xchg
pop
xor
push
jecxz
xor
mov
cmp
add
push
mov
pop
add
mov
inc
mov
mov
and
jmp
sahf
xchg
adc
dec
cmp
push
sbb
push
push
cmp
xlat
leave
rcrb
mov
lcall
rorb
fiadds
cld
movsl
mov
xor
inc
dec
pop
push
mov
or
xchg
add
sbb
dec
cld
inc
sub
dec
mov
pop
aam
stos
arpl
and
stos
push
adc
adc
lea
xor
sbb
ret
xchg
push
faddl
je
rcrb
jecxz
sbb
xor
add
cmpsb
push
nop
popa
dec
mov
lods
aaa
cmp
shl
add
in
xchg
or
outsl
sbb
jne
jmp
inc
add
arpl
mov
bound
and
rcrb
and
fcoms
test
inc
aaa
xor
ljmp
test
push
cmpxchg
hlt
int3
ret
sub
test
fiadds
nop
incb
iret
sti
mov
test
dec
push
or
or
lret
outsl
sbb
xor
test
xorb
mov
es
or
std
ret
or
rolb
inc
adc
je
jae
jge
xor
push
add
push
or
adc
fwait
and
in
push
sti
or
call
hlt
mov
sbb
test
and
xor
mov
cwtl
shrb
popa
mov
movsb
add
adc
es
stos
push
push
add
adc
movb
cltd
es
sbb
ret
call
push
cli
lea
jne
mov
loop
ret
mov
xchg
xchg
and
and
clc
sub
add
ds
pop
ss
and
popf
cmp
jle
add
call
xchg
mov
cld
subl
lock
lret
sub
push
pop
xchg
into
sub
fsub
xchg
dec
adc
adc
ss
push
lods
xor
add
mov
call
dec
dec
into
pop
mov
mov
sbb
add
fcmovb
jne
adc
pop
pop
outsb
mov
push
into
push
xchg
inc
mov
mov
movsb
mov
je
addb
rorl
andl
mov
cwtl
popa
jo
push
jle
inc
push
lcall
lock
jge
gs
cmp
push
adc
sar
sets
incb
mov
pop
std
xorl
and
inc
stc
les
unpcklps
outsb
enter
jbe
mov
mov
sub
adc
aaa
jb
aam
imul
adc
jbe
push
rol
mov
xor
xor
xchg
push
pop
mov
inc
xchg
jmp
cli
loope
fs
mov
jmp
enter
jp
shl
or
or
mov
lcall
xchg
add
pop
mov
call
push
call
push
cmp
cld
fs
aaa
adc
adc
mov
call
or
jecxz
jne
adcb
adcb
inc
pop
mov
inc
in
adc
hlt
and
sti
inc
mov
xchg
adc
adc
push
or
xor
mov
data16
in
dec
aas
call
gs
lret
shlb
dec
cwtl
add
push
scas
push
adc
jle
or
jo
into
cmp
mov
dec
ficompl
inc
incb
vpavgb
cld
cmp
adc
xchg
sbb
jmp
adc
adc
inc
and
mov
lock
lcall
push
jp
and
push
mov
sub
cltd
xor
lods
sbb
nopl
or
add
mov
sub
dec
mov
stos
adc
jl
mov
jle
mov
mov
xor
jnp
inc
ss
call
dec
cltd
lea
xchg
mov
lock
adcb
adc
push
cmp
imul
mov
and
push
iret
push
jecxz
ljmp
push
sbb
push
mov
mov
sti
aaa
es
jne
mov
push
stc
adc
add
xchg
mov
les
mov
pop
dec
xchg
or
movsl
je
inc
jmp
jns
in
cld
mov
dec
hlt
add
dec
mov
popf
clc
or
ss
push
in
mov
add
in
fwait
cmpsb
add
push
mov
add
loopne
xor
adc
out
push
mov
rorb
push
dec
or
movb
jl
push
lret
cli
push
xor
adc
push
fdivr
sub
xor
and
lea
xchg
sub
ds
mov
mov
push
je
inc
mov
leave
cmp
roll
lcall
sub
js
mov
ss
or
sbb
sti
mov
std
inc
mov
mov
mov
ret
ljmp
fnstsw
les
mul
sbb
sub
or
ret
lock
dec
adcl
nop
inc
cli
clc
test
xchg
inc
or
cld
mov
push
add
push
adc
into
cmovne
call
xor
xor
ljmp
adc
pop
and
adc
call
icebp
fdiv
or
call
push
nop
outsb
scas
xor
mov
jl
aas
or
loope
pop
lock
jg
mov
std
push
insb
pop
ret
inc
mov
add
test
adc
cld
mov
sbb
mov
mov
cli
cld
mov
cld
test
cmp
mov
leave
fsub
cmp
sub
mov
sbb
push
and
out
adc
jno
xchg
icebp
out
adc
push
push
call
adc
out
lret
xor
push
outsb
push
push
out
insb
jp
cmp
push
jne
lret
jb
xor
mov
or
xchg
mov
mov
int
loope
enter
shlb
inc
ja
xchg
add
cmpsb
data16
cmpsb
cmpsb
lods
mov
jl
cmpsb
negb
and
in
pop
xchg
push
mov
cmp
add
inc
lods
es
addb
icebp
call
and
rclb
popf
push
mov
adcw
or
adc
call
or
cld
push
fdiv
fadds
sti
data16
movsb
popf
jmp
inc
mov
add
mov
lock
lock
mov
and
aam
adc
inc
rorl
and
ds
std
ljmp
or
push
mov
mov
cmp
xor
lods
cli
mov
mov
and
popa
dec
outsb
ret
test
mov
movd
jle
in
inc
inc
cwtl
ljmp
loope
dec
outsb
adc
shrl
xchg
lock
loop
int3
movsb
cmc
test
ret
inc
out
cmpb
xor
mov
cwtl
mov
jb
push
cmp
andb
aad
or
xor
popa
lcall
pop
and
adc
mov
inc
jb
or
push
lock
das
add
fs
pop
mov
pop
cmc
dec
jle
mul
push
jbe
xchg
es
sbb
sub
mov
dec
pop
jbe
push
pop
sbb
addr16
mov
push
mov
call
jb
add
xor
out
and
jg
in
push
mov
roll
mov
pushf
sub
out
add
mov
sub
add
ds
mov
jmp
sbb
cmp
fsts
inc
add
add
and
js
or
into
loopne
test
jmp
mov
dec
shrb
adc
xchg
xchg
push
sbb
mov
push
mov
xchg
sbbl
shll
lcall
test
sbbb
pushf
test
pop
loope
pushf
je
rorl
adc
lahf
clc
add
push
jmp
pusha
mov
push
xor
pusha
jl,pt
sbb
sub
pop
popf
inc
pop
push
pop
movsl
adc
add
sbb
mov
cmp
ret
call
scas
les
clc
jge
or
int3
mov
loopne
or
or
out
mov
loopne
jae
jmp
mov
mov
cld
mov
les
push
sbb
aas
push
je
add
or
cs
push
or
xor
nop
jg
sbb
mov
fdivr
cltd
mov
pop
dec
pop
push
push
into
add
popf
inc
daa
scas
adc
xor
shlb
push
es
add
cmp
jge
push
push
out
or
stc
jge
push
add
outsb
add
clc
sbb
ja
movsb
lcall
mov
fildll
jmp
outsl
jne
add
shll
lret
test
fidivrl
fmull
xchg
or
std
lcall
jl
idivb
jbe
pop
mov
mov
decl
push
outsb
nop
adc
cld
out
cmpb
push
jmp
mov
inc
jecxz
push
int3
cmp
mov
imul
sarl
leave
icebp
sub
cmpsb
cmp
lock
test
inc
and
mov
mov
mov
mov
clc
jg
xchg
imul
mov
mov
xchg
mov
mov
mov
jmp
lods
test
ret
dec
test
xchg
inc
inc
sbb
add
mov
pop
sub
push
clc
stos
or
cmp
xor
in
mov
sbb
out
lock
call
mov
aad
sahf
add
imul
es
aam
cmc
inc
cmp
jne
push
and
daa
lds
cmpsb
loope
jne
adc
and
leave
add
dec
sbb
and
dec
pop
icebp
inc
test
or
xor
inc
stos
pop
insb
test
mov
cmp
in
xor
inc
js
les
into
adc
add
repnz
add
psubsb
mov
or
push
push
pusha
or
cmpsl
loope
and
xchg
push
fdivrs
sub
jle
aaa
sbbb
add
std
inc
lahf
add
add
pop
adc
cmp
and
ret
stos
adc
outsl
xor
shlb
in
data16
lea
repz
cmp
imulb
adc
jmp
mov
mov
dec
jne
and
push
jo,pt
aad
mov
test
test
fldenv
aam
push
pop
out
jne
stc
popf
xchg
clc
movsb
xor
xchg
cmp
xor
mov
and
inc
ret
ret
cmp
mov
and
dec
test
push
cmp
adc
clc
ss
pop
or
addb
rcrb
call
sub
adc
push
push
test
add
and
mov
shll
popf
test
cld
cld
xchg
push
or
arpl
or
dec
push
out
jns
push
hlt
inc
inc
hlt
fdivr
jge
pop
push
mov
jmp
or
fsubs
xchg
int3
lea
dec
inc
shl
inc
icebp
ljmp
push
cmp
xorb
adc
stos
test
inc
movsl
icebp
out
mov
ja
pcmpeqb
cmc
add
adc
dec
dec
pop
push
movsl
sub
push
cwtl
pop
adc
sbbb
decb
js
scas
mov
ja
arpl
xchg
int3
ret
sub
adc
add
xchg
add
out
xor
outsb
adc
adc
adc
add
sbb
test
in
dec
mov
inc
loopne
movsb
or
outsb
mov
orps
pop
pop
das
inc
popf
cmp
rolb
and
sbb
inc
loop
hlt
je
sbb
push
cld
es
dec
rol
addb
jno
mov
xchg
cmpb
mov
lret
push
cld
ljmp
adc
inc
xor
mov
and
sub
inc
les
cmp
and
push
add
inc
or
inc
mov
popf
clc
inc
lret
push
nop
xor
je
addr16
sti
mov
and
adc
inc
mov
ret
inc
adc
add
std
les
sub
xchg
outsl
ret
mov
cmp
int3
test
sbb
out
xchg
add
mov
push
call
sbbb
or
or
jmp
das
jl
and
mov
fdivs
sub
lret
xor
dec
push
push
rcrl
dec
mov
mov
inc
dec
xor
dec
adc
rorl
mov
imul
xchg
cld
imull
add
sub
add
fdivrs
add
loop
mov
and
xor
xor
mov
ljmp
mov
mov
ret
cmp
add
lock
sbbl
pop
mov
icebp
jle
adc
pushf
pop
into
pop
decb
cmp
dec
xchg
adc
fildll
sbb
test
add
fsubrp
push
aaa
sbb
call
cmpsl
jmp
add
push
mov
pushf
imul
sahf
mov
push
popa
ret
push
fs
es
pop
xor
scas
pop
test
or
and
push
push
lahf
cmpsb
jle
xorl
icebp
sub
mov
mov
jne,pt
ss
mov
inc
ja
imul
int3
adc
inc
loopne
test
outsb
data16
mov
pop
inc
aaa
mov
mov
rorb
int
in
jmp
stc
rorb
mov
cmc
dec
shlb
push
xor
cmp
add
incb
pop
mov
insl
cmpsl
ds
cmp
enter
add
test
adc
les
inc
aad
loop
rcl
push
stos
rclb
nop
or
sbbb
call
xor
cmpsb
mov
adc
mov
cmp
and
lret
in
adc
in
dec
outsl
adc
push
pop
cwtl
andb
add
jle
into
test
lock
inc
lock
inc
mov
xor
add
fbld
xor
mov
call
test
mov
clc
add
or
fildll
inc
pushf
fiaddl
adc
adc
cli
dec
enter
jo
icebp
frstor
rolb
aaa
mov
enter
inc
cmpsb
mov
shrb
add
xor
stc
push
mov
decl
aad
cmpsb
and
cmp
mov
inc
adc
inc
ret
or
lcall
adc
mov
mov
mov
push
nop
sbb
mov
and
xchg
pop
or
pop
outsb
lea
sbb
cmpsl
movsb
popa
mov
mov
and
push
sarl
and
jne
xchg
adc
icebp
ja
ret
cmp
pop
loopne
pop
sub
sbb
mov
les
dec
stos
mov
mov
or
fnstenv
inc
inc
cli
add
inc
inc
repnz
ret
inc
pop
es
loopne
gs
inc
je
test
insb
sbb
push
push
add
call
decb
push
insl
xchg
mov
add
daa
jp
mov
lcall
insb
outsb
andps
mov
ret
jle
subl
or
jbe
mov
mov
push
xor
push
cmp
xor
out
or
or
add
mov
xchg
push
sub
mov
sub
imul
daa
xchg
mov
jno
bswap
fsubs
push
cmp
inc
ss
add
shlb
sub
add
add
repnz
push
pop
xor
test
aam
rcrb
add
ret
shrb
cmp
xchg
jge
sbbl
in
adc
fdivl
rcl
jae
cmp
inc
insb
pop
mov
mov
lock
lret
mov
lea
hlt
or
call
inc
jle
ret
mov
addr16
adc
adcb
sub
call
shr
xor
or
les
inc
in
sbb
leave
clc
cmp
or
adc
push
jne
mov
jns
mov
cmp
xor
xchg
cli
push
mov
pushf
pushf
data16
dec
inc
sbb
pop
add
mov
call
icebp
sbb
ljmp
sbb
fcompl
lahf
push
fs
aad
lea
or
inc
int3
je
ret
in
movsl
push
or
fcoml
loopne
je
cmp
subl
and
enter
popa
scas
mov
push
sti
mov
or
orl
and
cmpsl
jb
or
jae
add
or
cmp
fisubl
out
adc
cli
imul
xor
scas
addl
fisubrl
mov
xchg
fisttpl
fdivl
inc
cmp
out
xchg
outsb
cld
fisttps
addb
mov
push
arpl
sbb
cmp
mov
je
shlb
mov
in
inc
mov
rcll
cwtl
decl
mov
mov
dec
mov
xor
add
sub
or
jg
call
mov
lock
stc
leave
ds
sbb
rorl
ret
outsb
mov
decb
bound
add
jl
jl
mov
sbb
dec
cmp
pop
add
push
xchg
sbb
or
fs
jecxz
fwait
push
sub
push
fimull
shll
arpl
push
call
loope
int3
rolb
push
aam
rcrb
sahf
mov
adc
push
out
mov
and
movsb
dec
add
aas
in
mov
add
xchg
sbb
mov
push
faddl
mov
add
sub
je
call
dec
or
mov
sub
mov
popf
and
mov
lods
cld
call
pusha
fsubs
add
repz
mov
int3
push
mov
mov
cld
enter
xchg
dec
add
loopne
lcall
and
adc
push
ljmp
and
arpl
mov
add
sbb
test
add
fnsave
or
pop
test
and
in
mov
test
mov
and
rcll
cmp
pop
inc
push
dec
call
push
add
push
mov
in
xchg
and
mov
xor
cli
mov
addb
dec
xchg
push
imul
inc
or
mov
pop
ret
inc
cmp
outsb
mov
xor
sbb
add
inc
jns
jp
mov
roll
mov
repz
imul
cmp
in
push
faddp
push
test
inc
ret
jb
incl
mov
pop
jp
xor
sbb
clc
dec
fsubl
dec
in
lock
icebp
or
lods
cmpsb
test
mov
lods
mov
xor
sarb
pop
xchg
fildl
mov
sahf
aad
pop
lcall
mov
xor
imul
sub
test
push
jl
clc
and
cwtl
mov
sbb
popf
xchg
in
mov
cwtl
data16
sub
xor
and
cmpsb
push
push
fadds
outsb
or
push
push
fdivrl
and
push
int3
add
nop
push
fwait
stc
push
xchg
inc
vcvtpd2psx
adc
and
xchg
icebp
add
push
dec
xchg
in
jle
pop
cmovb
jo,pt
add
adc
inc
popa
inc
push
lea
push
jmp
mov
mov
ljmp
cltd
xchg
xor
loope
xor
jp
sub
imul
push
test
out
pop
or
out
mov
mov
push
xor
mov
mov
in
lea
xchg
pop
jp
push
push
rorb
mov
mov
xor
add
pusha
mov
js
out
cmp
jo
xchg
int3
in
in
rolb
pop
nop
inc
data16
xchg
call
mov
cli
adc
lds
jl
mov
xchg
add
les
push
popf
pop
inc
adc
adc
into
ret
test
or
dec
cmp
jge
addb
shll
outsb
or
icebp
sbb
mov
add
inc
cld
js
stos
push
push
push
jmp
mov
dec
decb
stos
add
xor
loop
mov
lcall
and
ljmp
ficoms
or
pusha
mov
mov
out
sti
lods
pop
inc
imul
inc
jnp
push
ss
inc
pop
fsubrs
stos
loopne
or
mov
sbb
cmp
mov
filds
in
add
cmp
inc
insl
mov
cli
mov
xchg
xor
jb
mov
mov
mov
test
ret
inc
orl
mov
sahf
shll
mov
lret
mov
das
or
push
nop
mov
inc
fcomps
mov
xor
dec
addb
adcb
sahf
test
and
mov
push
pop
lods
fadd
xchg
sub
fcomp
xchg
shlb
adc
sarb
mov
cld
std
pop
or
hlt
pop
jp
je
test
xchg
pop
call
push
sbb
lods
adc
repz
sbb
icebp
or
push
sbb
xchg
test
call
push
sbb
pop
inc
xchg
push
xor
xor
sub
adc
call
xchg
mov
lock
rolb
incb
mov
jno
push
outsb
sti
movb
push
or
mov
hlt
mov
loop
cmp
and
out
push
pusha
lea
sub
or
movsl
jl
cmp
insb
and
pop
andl
mov
aaa
adc
push
xchg
mov
dec
bnd
pop
testb
add
test
push
es
clc
stos
mov
clc
mov
adc
fisubl
add
inc
scas
fs
push
shll
cltd
mov
mov
inc
fidivl
std
aas
data16
add
lock
mov
in
adcl
jmp
mov
mov
or
out
push
das
mov
je
test
js
xchg
xor
js
pusha
test
mov
add
push
xchg
mov
adc
mov
pop
sub
jne
aam
aad
rcrb
pushf
rorb
add
cmp
mov
inc
jp
ss
adc
adc
jo
xor
pop
mov
dec
fisttpll
push
fsubl
gs
pop
cmp
bound
xlat
fisubrl
fcoml
hlt
push
jle
hlt
mov
inc
push
mov
fldt
inc
adc
xlat
incl
fsubp
mov
call
std
daa
jbe
mov
imul
je
jb
xor
jp
adc
push
inc
dec
dec
loopne
mov
push
in
cmpsb
sub
sub
in
xchg
test
pushf
rcrb
lods
aam
sbbb
mov
loop
daa
pop
test
push
push
push
repz
ds
fcmovnb
jmp
adc
es
sbb
inc
push
arpl
xchg
pushw
sub
pop
mov
push
movsb
mov
das
rcll
fdivl
cmc
mov
decb
pop
xlat
sub
outsl
xchg
adc
xchg
andb
adc
xchg
sub
fiaddl
fstpl
and
cmp
mov
push
test
cmp
mov
sub
mov
ret
imul
mov
jp
clc
jmp
mov
pushl
or
push
mov
cvtdq2ps
push
mov
std
mov
add
xchg
fcoml
xor
jo
xor
adc
je
fcomp
sbb
call
or
xor
mov
push
sbb
repz
add
jle
mov
int3
aad
mov
mulb
bound
or
incl
movsb
push
test
andl
push
adc
add
pop
fmull
aas
in
or
or
jp
cmpsl
ds
dec
cmp
and
mov
adc
lret
pop
mov
leave
ds
and
mov
je
out
adc
lcall
movsl
sbb
jo
push
movsb
cmpsb
pop
cmp
xor
and
loopne
es
roll
test
hlt
test
sbb
pop
das
or
push
inc
mov
pushl
jg
cmc
push
int3
jg
ljmp
inc
mov
mov
dec
sub
popa
push
adcb
mov
pop
imul
xor
lock
cld
adc
call
fstpt
inc
je
xchg
cmp
push
jmp
xchg
lret
xchg
xchg
jb
cwtl
ret
or
add
push
sbb
mov
and
jbe
ss
dec
adc
es
test
out
xchg
mov
inc
mov
push
inc
out
add
xchg
and
xchg
push
aam
call
dec
mov
xor
pop
icebp
das
aam
test
aaa
data16
pop
rol
xchg
ljmp
xchg
sbb
subl
push
xor
cmp
pop
mov
test
push
inc
xchg
adc
sbb
dec
xchg
jle
test
mov
call
adc
fld
pop
enter
int3
jl
xchg
adc
inc
jl
xor
pop
int3
lock
mov
mov
push
int3
stc
sahf
add
pop
cmp
cld
mov
clc
and
mov
fdivp
scas
push
adc
add
rclb
icebp
push
fisubrs
jae
or
insb
testl
add
fwait
in
inc
and
cmp
add
push
mov
ret
ss
adc
je
cltd
cmp
mov
push
lock
in
adc
dec
push
pop
stc
std
dec
push
lcall
or
cli
stos
inc
cmp
dec
push
sarb
inc
push
push
ds
fcoml
push
movsl
cmpsb
clc
and
fcoml
call
push
js
scas
lahf
jle
jecxz
mov
cmpsb
fldenv
or
xor
inc
loope
add
fucomip
fisttps
ror
rcrl
add
aaa
pop
lahf
insl
mov
std
mov
jp
and
cmp
dec
jmp
inc
push
or
clc
in
inc
add
mov
mov
push
pop
sub
leave
push
mov
scas
lods
pusha
ss
jp
les
inc
popa
push
jge
test
mov
add
jmp
scas
notb
and
lods
shlb
jns,pn
notb
test
stos
pop
add
int3
shlb
aaa
xor
lock
jl
call
mov
sbb
mov
adc
je
shl
and
push
or
sbbl
scas
insb
dec
pusha
mov
shlb
mov
xor
shl
add
inc
or
test
jbe
fistpl
add
pop
mov
pop
jne
adc
pop
data16
pop
lds
sbb
sarb
pop
add
dec
pusha
cmpsb
sub
pop
push
add
pop
cmp
xchg
das
ja
dec
mov
push
cld
loopne
xchg
mov
insl
sbb
mov
sub
add
cli
or
fldt
or
test
nop
push
enter
add
cmp
cld
inc
call
add
or
xor
roll
loop
jg
loop
or
data16
je
push
daa
xchg
nop
adc
call
lock
incb
roll
mov
add
test
mov
xchg
add
movsb
push
aam
or
add
or
inc
dec
add
cld
mov
outsl
sub
psubq
gs
call
inc
mov
pop
fs
xadd
jnp
clc
gs
pop
push
sbb
in
pop
sub
or
aas
add
data16
mov
lss
enter
push
rcr
ror
push
pushf
rclb
mov
adc
stos
mov
adc
add
test
mov
pop
cmp
inc
mov
mov
lock
aas
into
insl
jecxz
push
inc
pop
in
lock
ljmp
push
mov
push
jl
and
lock
decb
xor
jmp
mov
test
xor
std
xlat
mov
rol
aaa
xor
dec
adc
pusha
push
int3
gs
dec
andb
lea
rol
xchg
fmuls
mov
mov
sub
pop
adc
lock
push
gs
lea
shlb
pop
cmp
mov
sbb
std
pop
dec
mov
adc
xor
mov
mov
scas
add
cmp
shlb
in
mov
inc
sar
sub
cmpsb
fs
and
push
mov
add
and
push
pop
and
cmp
add
dec
rolb
pop
sub
loop
mov
in
jb
xor
out
push
push
or
push
cwtl
ret
push
sbb
adc
mov
lea
inc
jecxz
data16
rcrb
adc
jo
jnp
or
mov
pop
imul
out
pop
adc
cs
fisttpl
add
movsl
and
push
mov
xchg
ds
fidivrl
pop
inc
pop
call
out
mov
shlb
cld
loopne
add
jb
jbe
test
or
mov
outsb
test
mov
xor
fwait
sub
mov
add
or
sbb
into
add
adc
dec
add
in
inc
add
mov
xchg
inc
push
roll
add
bound
push
shll
mov
mov
imul
cmp
mov
jbe
in
lcall
sbb
es
adc
movb
cmp
inc
rcr
pop
aas
pop
adc
cmp
adc
mov
data16
ljmp
add
roll
push
out
js
insb
jmp
movsb
int3
or
hlt
push
add
pop
scas
and
cmc
mov
xor
mov
mov
jg
or
add
fisttpll
inc
or
je
dec
js
lea
mov
mov
std
test
push
cmp
inc
adc
inc
in
aas
push
inc
sub
mov
pop
and
adc
xchg
pushf
mov
mov
pop
pop
orl
call
push
fcmovu
push
mov
mov
xor
and
add
push
sub
das
loope
sub
jne,pn
jmp
jbe
rcll
jb
jnp
cmp
dec
es
inc
and
inc
cmpsb
mov
push
xor
in
adc
mov
xchg
add
hlt
add
push
adc
xor
pop
out
and
mov
or
jne
leave
push
dec
xlat
scas
inc
add
shrl
test
sbb
jecxz
or
je
call
pop
icebp
testl
nop
push
in
in
jmp
add
dec
add
inc
std
ret
inc
rolb
jne
neg
xchg
aam
cmp
xor
jmp
and
add
mov
add
pop
movsw
lock
xchg
stos
push
clc
xchg
push
add
push
aam
pop
call
jae
fldenv
sub
add
fadds
mov
push
inc
inc
mov
daa
add
mov
mov
mov
inc
cmp
jl
call
xchg
sub
ss
lock
incl
mov
cld
and
shl
jp
sar
lcall
mov
mov
sti
stos
leave
enter
inc
adc
push
js
cld
je
ret
incl
inc
mov
mov
call
aaa
sub
cmp
sub
jne
add
dec
test
push
inc
push
mov
push
adc
je
outsb
repz
mov
cmp
lea
push
cmp
cmp
and
push
decb
mov
sub
movsl
sbb
bswap
sub
ljmp
popf
mov
pop
shlb
aaa
jp
bound
incb
jo
insb
outsb
inc
push
cmc
mov
dec
or
nop
int3
cmp
call
mulb
cld
dec
lods
dec
and
adc
inc
je
mov
rol
inc
mov
stc
add
or
mov
inc
inc
call
out
mov
inc
ret
addl
adc
push
cmc
das
add
fs
ss
ret
mov
mov
fs
mov
mov
mov
inc
insb
sbb
sub
or
fcom
pop
jne
data16
push
es
mov
push
nop
hlt
fs
push
jecxz
cwtl
or
mov
jmp
pop
rcrb
call
lock
xchg
call
cmpsb
loop
jmp
mov
add
repnz
sub
outsb
clc
cmp
cli
xchg
sahf
cmp
andps
lcall
or
adc
mov
mov
gs
pop
mov
mov
inc
pop
push
xor
push
add
xchg
cmp
cli
scas
loopne
mov
fs
in
faddl
add
adc
push
sbb
or
mov
adc
mov
inc
add
add
decl
jb
hlt
add
add
mov
adc
jl,pn
in
test
ljmp
je
lods
icebp
pop
in
adc
add
adc
push
and
rolb
sbb
fstl
lret
pop
fsubs
sbb
adc
jge
and
inc
sub
dec
iret
sbb
fadds
and
test
jge
pop
and
sub
lcall
stc
hlt
add
mov
dec
xchg
add
sbb
pop
jmp
push
aaa
mov
pop
movsb
sub
in
das
test
inc
add
cmc
lds
leave
xor
pushf
je
ret
and
xchg
mov
pop
cwtl
cwtl
loope
inc
dec
ret
adc
xor
push
int3
inc
jae
stc
incl
adc
ret
jbe
mov
jbe
adc
adc
and
test
mov
jl
test
or
pop
mov
call
in
ds
std
mov
stos
or
inc
mov
push
push
shrl
adc
xor
cmpsb
dec
je
lahf
and
mov
jb
leave
cli
xchg
filds
insb
inc
inc
sbb
push
daa
jp
xchg
ret
jmp
mov
ret
lock
xorb
jge
mov
mov
lods
mov
cmp
dec
pop
xor
adc
les
dec
sub
and
cmp
test
mov
incl
inc
cvttps2pi
mov
ds
ret
rolb
and
push
ljmp
decb
popa
sub
sub
mov
lahf
rorl
mov
add
fnstenv
mov
int
sub
pop
sub
fadd
js
imulb
jmp
or
lock
lret
inc
outsl
cld
lock
sbb
push
and
popa
xchg
mov
jne
adc
adc
movsl
mov
add
stc
shll
inc
or
mov
out
sahf
ss
shlb
add
sbb
test
jbe
ja
pop
fwait
pop
inc
mov
shll
push
into
leave
cwtl
in
mov
je
inc
outsb
xchg
sti
dec
rclb
cmp
ret
icebp
add
in
lods
adc
insb
sub
and
es
and
mov
mov
xor
mov
and
stos
fcomps
insb
add
je
pop
mov
and
or
addb
push
mov
mov
clc
jp
movsb
push
or
cmp
xchg
loop
inc
pop
adc
je
aas
or
jmp
pop
pop
sar
nop
fidivrs
ror
cmp
push
sbb
sub
lock
insl
loope
cmp
rorl
dec
lock
popl
gs
push
daa
hlt
orl
fs
pusha
add
ret
sbb
aam
jmp
jae
aas
shlb
cld
fs
mov
ret
dec
data16
xor
adc
sub
ret
xor
orb
hlt
test
pop
ss
jge
call
cwtl
and
sub
xchg
clc
inc
cmp
add
ss
in
xor
inc
dec
push
mov
mov
push
push
in
rolb
cmp
jo
cld
xchg
and
jl
or
shlb
pop
test
filds
in
imul
and
push
push
jp
cmp
or
dec
push
test
sub
je
mov
ss
lcall
xchg
and
ja
push
into
push
mov
mov
inc
adc
mov
jg
cmpb
sbb
jns
in
in
adc
js
xlat
and
movl
push
xchg
mov
sbb
addr16
inc
cmp
in
sbbb
dec
mov
scas
mov
mov
adc
loope
imul
inc
pusha
loope
adc
stc
stc
sahf
fimuls
inc
adc
stos
fdivp
lret
aad
lock
mov
inc
dec
lods
test
push
and
outsl
mov
inc
clc
decl
loopne
inc
arpl
orl
add
imulb
adc
push
out
sbb
das
jne
inc
fbld
incl
sub
loopne
test
std
cmp
dec
mov
gs
out
arpl
mov
dec
inc
aas
push
ret
mov
add
aam
je
shlb
push
xchg
hlt
std
push
inc
stos
mov
push
fcoms
orb
inc
orb
and
sub
lcall
and
dec
inc
insb
cmpsb
cmpsl
fdivrp
fisttps
ret
add
mov
pop
ljmp
jbe
test
mov
test
sbb
inc
mov
cld
pop
push
xor
test
add
lods
pop
cli
pusha
lea
inc
pop
out
out
loope
mov
lods
inc
dec
adc
idiv
lea
subb
mulb
rorb
cmpsb
gs
push
adc
fidivrl
sub
icebp
add
mov
pop
dec
and
ds
xor
and
jmp
scas
add
jmp
adc
inc
repnz
pop
int3
ret
mov
or
dec
xorb
je
stc
or
es
add
enter
popf
adc
imul
call
hlt
cmc
pop
push
aad
incl
jbe
in
add
fadds
cmp
mov
je
mov
mulb
and
add
into
aaa
mov
rorb
mov
and
pop
mov
jnp
dec
and
bound
insl
lahf
fwait
int3
mov
aam
imul
out
subl
dec
push
lods
lret
test
sbb
imul
push
incl
insb
xor
dec
pushf
leave
icebp
and
push
jnp
xor
or
and
adc
mov
adc
or
mov
ja
divl
stc
lock
mov
inc
adc
push
push
into
cmp
pop
push
push
stos
mov
or
lea
cwtl
hlt
orb
lea
mov
and
fsubl
push
dec
dec
dec
lea
pop
and
mov
mov
imul
mov
or
clc
leave
rcll
mov
jo
lock
mov
inc
out
jge
fldcw
and
popa
js
std
dec
inc
lock
testb
mov
xor
mov
mov
xchg
stos
inc
je
fcomi
andb
push
loopne
les
lods
lods
mov
push
add
inc
pop
out
add
fldenv
jg
lods
adc
jne
and
enter
test
and
cld
dec
and
sub
push
jg
movsl
ret
pushf
jb
mov
cmp
adc
adcl
add
rorb
rorl
sub
mov
add
jbe
repnz
push
or
cltd
mov
enter
cld
jnp
cmp
dec
sti
int3
shlb
pusha
outsl
aad
hlt
cld
nop
or
pop
enter
jne
jne
sbb
and
aaa
test
lret
int3
push
aam
and
pop
call
push
jg
call
mov
mov
and
mov
push
dec
or
pop
and
enter
adc
je
xor
test
push
pop
cld
pop
shl
mov
add
mov
inc
push
mov
add
cwtl
popa
mov
or
push
sbb
repz
push
test
push
mov
adc
loop
mov
lock
pop
imul
lock
sub
loop
and
nop
or
add
pop
xor
inc
mov
es
je
xor
leavew
idiv
jg
add
mov
js
jne
das
inc
push
adc
fidivrl
call
stos
adc
add
ret
cmp
push
sub
mov
add
bnd
inc
mov
sbb
jbe
int3
les
fnstcw
and
outsb
xorl
jo
fcoms
sub
sub
push
adc
in
push
xor
and
mov
lods
lock
push
lock
shlb
insl
stos
std
cmc
mov
sbb
arpl
mov
scas
pop
sub
ret
fdivr
pop
fs
imul
lods
ffreep
aaa
push
test
xchg
ss
lock
loopne
mov
or
push
mov
and
pop
les
push
test
popf
mov
aaa
pop
fcoms
les
adcl
jae
cli
pop
lcall
pop
cmp
stos
mov
addr16
xchg
fmuls
daa
adc
dec
mov
out
test
filds
mov
xor
loopne
ret
pushf
ret
add
andl
ja
addb
test
jae
push
jl
dec
fcomps
or
daa
cmp
inc
movl
pop
sbb
in
push
ds
dec
inc
pop
popf
stc
push
xchg
clc
adc
lret
cli
mov
inc
push
xor
rolb
aas
call
shr
adc
and
outsb
jbe
clc
es
and
inc
push
mov
xchg
rclb
sub
fists
pushf
cld
mov
std
pop
and
mov
outsb
cli
push
insb
js
fs
call
pop
addb
call
or
xor
cmpsb
sbb
mov
dec
and
in
pop
mov
scas
out
push
lods
pop
xchg
add
inc
add
fwait
adc
jg
aaa
mov
in
call
jl
xorl
push
loopne
jmp
div
mov
xchg
xor
loop
add
cld
ljmp
in
test
les
aam
loop
adc
jmp
cld
nop
xor
jne
daa
faddl
adc
std
sub
and
das
xorb
inc
imul
mov
xchg
pushf
loopne
outsl
outsl
clc
insl
sub
lea
add
lahf
push
mov
int3
mov
xchg
adcb
cmp
out
xor
push
xchg
push
insb
daa
adc
xchg
pop
jle
test
inc
inc
pushl
lock
cld
insb
or
mov
outsb
mov
add
addb
scas
lea
xor
icebp
mov
fadds
leave
aas
sub
inc
jb
loope
andl
mov
fdivs
je
cmp
mov
xchg
cli
sbb
mov
and
mov
sbb
inc
or
or
or
dec
mov
xchg
lock
roll
xor
inc
push
push
rcrl
test
fcoms
dec
testb
jecxz
adc
sbb
popf
sbb
xor
cmpsb
mov
jne
mov
adc
push
sub
nop
adc
sub
jle
sbb
inc
mov
sub
mov
mov
dec
cld
in
loop
xor
mov
push
mov
adc
shll
dec
out
mov
scas
jle
fisubrl
xchg
add
ret
ficompl
add
adc
add
lahf
aam
pop
pop
test
cmp
add
or
add
out
mov
add
icebp
or
call
call
and
sub
fiadds
mov
add
dec
pop
or
jns
add
add
push
mov
neg
cs
or
mov
fidivrl
mov
fs
xor
sbb
push
subb
call
or
or
js
sub
inc
das
aam
rclb
mov
add
dec
sbb
pop
cwtl
int3
ror
push
addl
std
bound
xor
adc
shll
les
push
xor
out
std
ret
out
xchg
rcrb
je
cmp
inc
vpunpcklqdq
add
adc
call
jmp
adc
cmc
pushl
push
std
out
subb
xchg
dec
pop
jl
mov
nop
xor
je
mov
jle
adc
pop
push
xor
lahf
mov
in
jno
out
push
sub
add
adc
test
push
dec
adc
or
pop
cmp
jp
inc
mov
mov
lea
xor
push
mov
cmc
enter
ret
push
add
jle
in
cltd
add
add
lods
push
xchg
mov
incb
or
cwtl
mov
xchg
xor
xor
cld
add
mov
test
movsb
sub
shll
add
in
xchg
xchg
jmp
and
std
ljmp
or
stos
scas
jne
lret
add
ljmp
xorb
inc
xor
or
shrb
lds
leave
test
inc
push
mov
xor
scas
ljmp
or
sbb
adc
movsb
push
pop
jmp
js
mov
notb
lea
jns
call
test
test
mov
push
pop
ret
daa
movsl
sub
mov
clc
mov
scas
aaa
pop
pcmpeqw
mov
pop
pop
lds
inc
inc
add
ljmp
xor
and
adc
bound
add
imul
fisubs
push
dec
in
xchg
jmp
and
leave
cmp
call
push
rcrb
dec
clc
fcoms
ficoms
int3
dec
and
int3
gs
aas
jmp
add
push
ljmp
push
jl
rolb
fisttps
lahf
cld
movl
push
enter
outsb
bound
cmp
mov
les
imul
xor
add
and
cmp
cmp
jg
dec
std
jmp
pusha
pop
push
scas
shrb
shlb
clc
int3
mov
fimuls
scas
push
cs
mov
scas
add
cmp
shr
xor
push
add
cmpsb
push
hlt
jb
jecxz
add
mov
clc
dec
add
test
sbb
mov
pop
sub
lods
cmpsb
clc
push
imul
popa
inc
rolb
shlb
xchg
mov
jo,pn
ret
inc
sbb
push
jp
push
mov
int3
clc
dec
dec
dec
sarb
lods
add
clc
and
fadds
pop
les
pop
xchg
cmp
and
pop
es
ljmp
insb
jne
or
lea
inc
leave
xchg
test
mov
inc
xchg
std
test
xchg
add
in
inc
call
mov
lea
test
shl
xor
stc
xchg
adc
jecxz
rolb
mov
add
fidivl
icebp
ljmp
push
xchg
pop
push
push
add
mov
inc
je
andl
in
add
ljmp
or
or
mov
adc
test
push
cli
push
lcall
add
in
call
cld
add
in
mov
push
je
mov
ds
inc
clc
adcb
stos
data16
inc
inc
inc
sbb
enter
jg
mov
or
push
sub
jno
mov
lret
jb
or
mov
mov
cmp
mov
xchg
ret
ljmp
aas
push
dec
jae
repz
xchg
add
call
sub
leave
mov
pop
aad
add
cs
fsts
les
je
and
jne
mov
pusha
sbb
in
or
ss
jns
add
fcmovu
mov
fs
mov
out
clc
adc
rclb
cmp
sbb
add
pop
call
roll
mov
das
mov
inc
pop
xor
into
enter
or
sbb
xor
mov
int
mov
pusha
pop
in
push
mov
loope
cmp
in
sub
idivb
pusha
nop
ret
inc
in
call
mov
and
dec
mov
xlat
xchg
test
or
mov
mov
sbb
jecxz
push
add
mov
push
pop
push
mov
mov
inc
or
cmp
fldt
mov
pop
mov
imul
ret
jecxz
push
mov
inc
je
les
repz
js
sub
adc
add
inc
jl
add
fdivrp
imul
inc
ja
loopne
cld
negl
add
xor
adc
pop
mov
mov
jo
or
cmp
pop
xchg
fdivs
clc
jg
in
subb
jge
imulb
or
pop
hlt
add
ljmp
dec
dec
xchg
in
inc
leave
cld
sbb
movsl
or
sub
in
jp
test
das
cli
push
leave
push
jne
inc
jge
pop
inc
es
cmp
sar
pop
fimuls
shl
mov
cld
xchg
outsl
out
inc
arpl
out
shrb
lret
inc
adc
add
loop
int3
pop
ret
fwait
stos
movsb
pop
xor
pop
and
mov
fsubr
lea
cmp
and
push
in
mov
cmp
pop
mov
mov
fistpll
jb
call
sub
test
xchg
loopne
movsl
pop
repz
adc
cld
sub
xor
popa
adc
andl
movq
xor
gs
adc
add
and
adc
jo
add
jle
inc
add
push
fs
jg
sti
push
mov
cmp
push
in
mov
or
rclb
fwait
add
loop
push
or
adc
jl
jbe
aad
dec
pop
push
and
cmp
mov
and
push
cmp
loope
xchg
roll
push
aam
cmp
xchg
push
or
loop
adc
add
inc
shl
or
lcall
mov
xor
or
ret
loop
push
das
and
inc
mov
mov
dec
sahf
sar
addl
in
push
cwtl
or
mov
dec
mov
mov
nop
ljmp
pop
sbbb
pop
insl
and
add
outsl
cmpb
adc
cmp
cmp
xchg
cltd
mov
dec
adc
sub
pop
mov
movsl
ret
je
fsub
sahf
xor
and
mov
push
xor
and
push
add
mov
aaa
jmp
call
mov
lock
arpl
ljmp
mov
andb
hlt
mov
shr
sub
mov
mov
cmpb
addb
nop
pushl
in
mov
lcall
xchg
loope
dec
xor
add
push
sbb
out
lea
inc
inc
xor
ret
jge
push
fdivrs
add
movsl
pop
adc
js
push
sahf
pop
xchg
mov
stos
movsb
cmpsb
inc
js
add
sarb
shrb
std
or
ret
lea
inc
and
mov
jo
lcall
or
adc
mov
cmpb
rorl
bound
cwtl
gs
clc
ja
fbld
jg
sahf
cmpl
dec
popa
push
inc
pop
push
in
mov
inc
sub
js
js
jne
and
sahf
pusha
xor
jmp
or
ret
sub
std
add
addb
push
and
dec
dec
push
mov
lret
inc
stc
mov
mov
pop
bound
jb
push
xorl
stc
insl
sti
xchg
add
sub
bound
push
lret
xchg
in
sbb
popl
mov
out
aam
jbe
sbb
lcall
popa
jl
push
inc
int3
pop
aas
test
push
sar
sbb
add
lock
les
push
or
add
rol
sti
sbb
mov
or
aaa
xor
aas
test
mov
ret
sbb
shl
dec
sarb
inc
jne
outsb
test
pop
enter
sbb
fisttpl
cs
rcrb
test
mov
push
xchg
fisubrs
rolb
inc
adc
sbb
and
dec
adc
mov
or
mov
dec
movsb
cmpsl
sub
fcoml
push
js
call
mov
xor
lcall
pushf
ss
inc
adc
pop
add
outsl
add
add
push
xor
push
xor
inc
add
xchg
test
xor
xor
icebp
std
sbb
push
das
mov
pminsw
xor
push
js
pop
cmp
adc
add
or
mov
jp
icebp
pop
jmp
inc
mov
mov
xchg
std
mov
add
inc
or
adc
mov
mov
adc
and
mov
lock
push
xor
out
mov
xor
sub
xchg
xchg
inc
pop
push
push
fwait
sbb
test
mov
add
or
push
pop
aam
push
mov
jl
outsl
and
and
push
test
mov
cmp
pop
ss
pop
das
add
or
cmp
pop
xchg
inc
cwtl
in
aaa
mov
xorl
outsb
mov
pop
sbb
sub
loop
cmp
pop
dec
inc
in
out
outsb
pusha
out
movsb
push
test
mov
jge
lret
add
subb
insl
xor
loopne
mov
fiaddl
out
mov
std
dec
xchg
inc
push
mov
mov
xchg
sub
je
xor
or
dec
je
inc
and
and
dec
cld
jecxz
outsl
clc
or
lods
xor
adc
ret
adc
mov
rorb
jbe
les
rolb
loop
or
ret
scas
divb
cmp
orb
repnz
push
cld
les
add
into
xor
xchg
or
xchg
loopne
nop
in
insb
or
nop
ret
jl
adc
adc
or
adc
jne
sub
and
jp
or
out
sbb
push
dec
dec
push
cmp
aad
sbb
jp
nop
lea
icebp
pop
and
sbb
inc
adc
mov
mov
outsl
push
inc
adc
cmc
dec
cmp
outsb
mov
les
movsl
mov
clc
cmp
loope
cmp
test
out
ret
dec
lock
pop
andl
xor
ljmp
in
pop
adc
cltd
cmp
sti
mov
cmp
add
inc
xchg
jo
jle
push
push
add
out
shll
cltd
lock
rcrb
les
jae
jl
mov
aas
mov
inc
push
jno
jbe
out
push
or
por
movsl
fcomip
xor
ljmp
pop
sbb
pop
imul
aas
loope,pn
or
fidivs
mov
movsb
jg
test
lock
adc
nop
test
incb
jecxz
scas
sub
sbb
and
dec
or
clc
xor
ds
sbb
pop
mov
push
xorl
cmpsb
jne
loop
mov
pusha
aad
mov
loope
lods
es
ss
and
movsb
mov
hlt
cmp
ljmp
popf
sahf
call
xchg
mov
and
gs
or
dec
test
mov
push
repnz
pop
pop
mov
push
xor
fs
add
cld
cld
test
in
add
add
rcr
jne
cmp
sub
inc
inc
jecxz
xchg
js
xchg
enter
popa
inc
pop
call
movsb
movsl
cmp
js
pop
inc
adc
cld
push
fucom
pop
notb
lea
push
cmp
js
lret
add
ja
not
leave
jp
sbb
push
icebp
int3
and
pop
and
loopne
cs
push
pushl
test
enter
sub
clc
and
in
inc
pusha
mov
cld
loope
stos
add
mov
adc
les
mov
add
sbb
aaa
les
repz
push
mulb
push
mov
mov
push
outsl
push
push
outsl
adc
pop
push
int3
and
inc
sub
notb
mov
sbb
hlt
aaa
add
cmp
adc
lock
shr
mov
or
hlt
arpl
mov
or
mov
jae
and
call
or
push
iret
lods
lds
inc
lods
inc
gs
inc
test
jne
xacquire
fisttpll
cmp
add
imul
add
sub
inc
jb
inc
dec
add
shlb
mov
add
addb
rol
jmp
jbe
shlb
ret
out
mov
sbb
mov
daa
bswap
xchg
adc
push
pop
or
jmp
mov
push
adc
cld
cmp
ret
stc
out
cld
push
sub
icebp
in
inc
xor
mov
in
push
shrb
and
sbbl
shlb
ja
push
rolb
cmpsb
cltd
loope
cmp
lock
xchg
xchg
add
push
aam
add
test
jmp
lock
pop
pop
je
mov
cld
mov
add
pushf
addl
add
outsb
cmp
sub
hlt
jg
fists
nop
ficoms
and
or
push
out
dec
cmp
cwtl
adc
mov
pusha
pop
rol
cs
test
lcall
add
loopne
add
dec
test
mov
inc
movsb
cld
ljmp
jl
ljmp
mov
mov
fsubs
jl
push
push
fisubs
gs
push
adc
or
xor
pop
dec
loopne
in
gs
pushf
xchg
inc
push
xor
movsb
stos
push
push
fadds
negb
mov
data16
mov
insb
sar
jp
sbb
test
add
jne
sub
mov
sbb
mov
add
lock
les
in
into
mov
pop
cld
push
rol
lcall
xor
loope
loope
call
inc
popa
mov
in
in
adc
xchg
aaa
jo
pushl
jmp
out
sub
sbb
fdivl
std
xchg
push
xor
push
jo
sub
aam
out
insb
or
loopne
mov
xor
std
sbb
clc
lea
loope
in
js
sarb
loopne
std
aam
adc
test
push
std
bound
adcb
shr
out
roll
int3
add
and
data16
jne
mov
sti
lods
aaa
daa
cmc
pop
mov
fwait
jge
push
lock
outsl
gs
call
rclb
push
rorl
mov
cwtl
imul
adc
xchg
jg
ret
xchg
insb
mov
inc
inc
in
or
hlt
leave
divl
jo
out
aam
add
xor
outsb
push
jmp
inc
add
push
enter
stos
es
ss
add
loop
jecxz
lods
lcall
lret
or
cwtl
mov
shlb
mov
jo
inc
xor
into
jge
fimull
inc
stos
loopne
sub
mov
dec
ret
cmpsb
add
sub
jmp
push
in
and
jge
enter
or
pop
pop
xor
adc
in
retw
add
add
add
sub
inc
add
adc
outsb
or
dec
mov
mov
loopne
inc
xor
push
pop
mov
inc
test
inc
xor
jo
mov
inc
pop
test
mov
lcall
mov
jo
call
push
pop
sbb
ret
test
or
mov
out
cmp
mov
mov
sub
jbe
or
jge
mov
stos
jns
addl
sub
cmpsl
pop
cld
adc
nop
push
push
push
mov
mov
lahf
push
adc
es
clc
loop
and
xchg
ret
fisubs
lcall
fwait
cli
add
insb
in
les
addr16
je
cmp
push
push
outsb
fs
adc
inc
in
cmpsb
xlat
sbb
xor
jae
xorl
inc
rcrl
pop
movl
pop
int3
shll
cmp
jecxz
dec
test
add
adc
shll
int3
testb
adc
insl
pop
adc
pop
int3
int3
cmp
jmp
or
ficomps
add
hlt
lret
mov
sbb
mov
pop
icebp
and
cmp
popl
pop
and
ds
xorl
sar
inc
pop
xchg
sub
cld
and
add
adc
je
sub
push
repnz
push
cmp
test
cmp
nop
add
xchg
push
data16
arpl
mov
insb
or
or
aas
pop
inc
inc
jne
xor
addb
push
movl
pushf
and
or
fbld
or
es
loopne
and
inc
cmp
stos
test
push
in
xchg
push
or
mov
jo
push
adc
and
mov
inc
inc
fadds
mov
mov
cld
jmp
fstp
pop
mov
fadd
shlb
fsubrs
in
adc
sbb
and
fcoml
jbe
push
fwait
lock
leave
cmpsb
or
mov
and
adcb
test
xchg
arpl
mov
inc
cmp
sbb
jo
mov
shl
sub
aaa
subl
cmp
dec
add
push
jmp
in
into
mov
sub
or
popa
pop
orl
dec
sahf
std
cmpl
push
jle
bound
xor
test
add
aaa
lock
xor
clc
jne
mov
es
lods
mov
mov
ljmp
mov
add
mov
lret
enter
xchg
roll
mull
insl
call
test
and
xchg
shr
cmc
mov
jo
jecxz
fwait
and
ret
push
push
xor
test
pop
movl
cs
cmp
mov
mov
mov
and
adc
out
sarb
lock
dec
sysret
adc
inc
mov
pop
dec
mov
add
xorb
add
pop
sbbb
mov
adc
or
cmp
outsb
dec
sbb
clc
outsl
loopne
rorl
js
add
push
cld
outsl
jns
inc
in
es
and
mov
jle
mov
mov
sbb
pop
js
outsl
cmpsb
loopne
push
push
xor
leave
lods
cli
in
loope
jmp
or
xchg
divl
les
cmp
jo
push
xor
test
in
sbb
popf
xchg
sub
fiadds
fmuls
pop
xorb
imul
rclb
aam
mov
xor
je
pop
push
popl
rorb
pop
ficomps
out
mov
lahf
add
imul
movb
mov
sub
stos
test
or
in
addr16
jp
xchg
and
ss
and
inc
jae
sub
les
in
cld
loopne
xor
sbb
call
adc
stos
incl
mov
test
movsb
mov
stc
cs
rolb
sub
outsb
mov
mov
cmp
xchg
mov
shll
movsb
push
jmp
mov
add
ss
mov
xchg
mov
mov
fildl
bnd
push
mov
rclb
push
add
xor
shll
cmc
call
sbbl
loopne
rcl
filds
push
clc
sub
out
clc
outsl
push
xchg
add
sub
fisubrl
inc
ss
sub
mov
cwtl
or
and
cmp
jle
push
cmp
loopne
not
test
xor
mov
stos
cmpsb
loope
andb
xor
dec
les
jne
jb
loopne
inc
xorb
inc
mov
cwtl
sbb
inc
enter
mov
mov
or
adc
mov
or
push
push
pop
mov
bound
or
std
sbb
mov
aas
lret
pop
add
pop
lret
fidivrl
xorl
mov
mov
insb
mov
pop
cli
stos
mov
fimuls
add
loopne
faddl
es
call
push
mov
adc
incb
sbb
add
push
adc
mov
and
adc
pop
pusha
cld
inc
pop
in
pop
add
xchg
mov
mov
xchg
cmp
in
lea
mov
xchg
out
nop
scas
nop
aad
test
mov
fs
push
fidivrl
mov
fs
hlt
loopne
inc
es
and
sbb
inc
pop
pushf
mov
fsubl
cmc
mov
mov
ficompl
mov
sbb
loopne
insb
ss
cmp
je
add
jge
sbb
inc
sbb
bound
cltd
and
xor
or
adc
test
lret
xor
sub
push
sarb
dec
cmp
and
fdivs
adc
lock
outsb
lret
jmp
pop
popf
ret
inc
mov
addr16
mov
insl
push
je,pn
fsubl
imul
inc
xchg
sub
in
or
div
data16
or
and
test
push
sbb
icebp
or
fs
mov
aad
sbb
mov
rcr
push
add
pop
js
push
test
insb
xchg
pop
push
fistps
test
pop
push
jmp
outsb
push
fcoms
test
incb
mov
mov
dec
add
lea
mov
rcl
and
hlt
sahf
clc
push
mov
sub
test
or
push
test
int
cli
adc
sarb
xchg
push
jp
mov
xchg
adc
loopne
pop
popf
adc
hlt
push
mov
push
loop
mov
ds
cmp
mov
aam
xor
rclb
loop
fwait
cmp
xor
adcl
into
insb
pop
inc
stc
pushf
fbld
and
mov
mov
lret
add
jmp
push
mov
rclb
jl
ss
jmp
fmuls
inc
mov
add
xchg
xchg
or
mull
jbe
sub
mov
mov
decl
cmp
lods
pop
adc
es
adc
lea
pusha
or
addr16
mov
xchg
sarb
adc
insb
mov
dec
daa
push
mov
mov
outsl
inc
idivb
sbb
inc
inc
clc
xor
jne
inc
mov
out
movsb
test
les
sub
mov
std
lea
clc
leave
push
test
adc
jg
je
xor
cmp
push
std
mov
insb
test
push
mov
pop
or
mov
adcl
inc
push
add
inc
dec
pop
dec
adc
lea
sbb
sub
sar
jmp
les
sub
pop
nop
dec
addb
je
paddd
mov
mov
aam
xor
adc
xchg
inc
inc
inc
xor
aaa
mov
jne
and
xchg
fwait
ret
loope
sahf
mov
ds
adc
jbe
in
aam
rorl
add
loopne
test
cmc
mov
xor
insl
out
dec
or
mov
icebp
add
and
test
mov
fidivs
jmp
xor
jae
push
dec
rol
lods
or
pop
clc
test
add
arpl
mov
inc
outsl
xchg
xor
pop
addb
test
out
rcr
push
jno
mov
inc
ja
add
ss
ds
jl
loop
sbb
shlb
pop
les
mov
dec
cwtl
push
cwtl
sbb
adc
or
imul
shl
inc
lea
inc
imul
loopne
andl
rorb
push
sti
aas
mov
inc
outsb
pop
sbb
stos
lock
xchg
xor
popa
test
test
xchg
sub
jle
movsb
dec
mov
dec
outsl
aad
dec
and
add
jp
cmp
add
mov
imul
ffree
or
pushf
push
mov
mov
das
out
int3
mov
sub
xchg
add
dec
sbb
xor
pusha
jg
mov
testb
inc
movsl
mov
leave
or
les
fisttpll
and
shlb
jp
cld
pop
mov
shll
mov
or
adc
call
inc
and
ss
int
sub
and
cmc
sbb
sbbb
jg
jp
and
add
jmp
xor
mov
adc
pop
inc
test
outsb
lea
cmp
rorb
push
loope
int3
sar
cli
sub
xchg
leave
xor
in
add
mov
fimuls
cld
dec
dec
push
xor
cmp
bound
addb
mov
sbb
mov
cld
jg
jmp
sbb
call
cmp
jle
mov
fs
mov
jnp
movsb
orl
adc
add
stos
jmp
ljmp
or
xchg
mov
jp
lods
jp
xor
jo
pop
inc
aam
ficompl
cltd
out
clc
adc
psubusb
xchg
clc
xchg
jge
jp
shlb
ljmp
push
cmpsb
push
pusha
dec
jg
jmp
mov
loopne
loopne
cs
sub
repnz
cmp
sub
and
scas
scas
push
mov
add
add
and
cmpsb
ror
call
repnz
and
lds
iret
pusha
inc
fdivp
sub
orb
mov
addr16
pop
sbb
add
mov
cmp
pop
push
and
loop
js
dec
push
les
cwtl
sub
push
mov
insw
xor
or
clc
add
cmp
cmpsl
jo
cwtl
lret
sbb
adc
or
test
lods
push
mov
cmpsb
data16
lcall
movsb
inc
xor
decl
ret
xchg
mov
pop
ret
adcb
or
xor
xor
xor
movsl
mov
mov
rcrb
fimull
cwtl
sub
sub
movsb
sub
decb
inc
inc
mov
pop
sbb
mov
add
mov
dec
adc
xchg
aas
xor
test
lcall
and
add
or
mov
push
ds
inc
dec
sub
nop
mov
xor
push
orb
xor
inc
cmp
sbb
cmp
lock
jbe
mov
loope
mov
insl
fdivr
mov
mov
push
cmp
cmpsl
adc
xchg
mov
mov
nop
stc
or
xor
push
mov
pop
loop
scas
rcll
or
lods
push
das
dec
in
add
mov
xor
sti
shll
gs
add
add
mov
jle
cmc
and
xchg
inc
adc
loop
xor
mov
pop
push
sub
jmp
xchg
mov
cmp
mov
rorl
dec
fcompl
outsl
jecxz
sub
es
adc
bound
std
xchg
add
cmpsl
incl
jo
lret
scas
insb
clc
stos
cmp
lcall
aam
lods
sbb
add
dec
adcb
das
mov
mov
inc
addb
xchg
mov
popf
into
hlt
aaa
sub
adc
mov
add
scas
outsb
decb
pop
xchg
xchg
test
cmp
bound
dec
imul
sub
std
adc
add
fildl
shll
clc
faddl
add
lea
sbb
sub
inc
int
xchg
loopne
cmp
je
cmpsl
pusha
les
fildl
jae
mov
adcb
dec
sbb
xor
jle
je
sub
das
shlb
inc
push
mov
jns
pop
clc
mov
mov
xchg
movsl
mov
insl
jge
cli
mov
adcl
jbe
mov
por
popa
add
pop
leave
add
sbb
rdpmc
mov
mov
pop
fwait
sub
fmuls
fcmovbe
inc
loopne
jae
xchg
push
or
add
sub
push
mov
insb
xchg
jo
icebp
xchg
nop
cmc
mov
fiaddl
push
jne
push
jne
movsb
sti
mov
pusha
sbb
push
inc
jbe
test
aam
scas
mov
int
lcall
xchg
push
mov
aam
sahf
or
mov
je
push
lea
jae
cmp
repnz
mov
pop
in
fstp
fldt
pop
inc
testb
dec
shrb
rclb
inc
lock
in
adc
cmp
cmp
add
mov
adc
xchg
and
or
leave
add
fisttpll
cmp
add
adc
add
mov
sbb
loop
call
pop
in
add
in
mov
fs
sub
cmp
and
sbb
gs
cld
in
push
add
addr16
lea
mov
lcall
sbb
test
add
or
add
jne
jl
in
mov
inc
mov
mov
lods
jne
push
jb
aas
mov
mov
imul
mov
decl
int3
jbe
test
push
or
testb
or
in
stos
xor
scas
pop
outsl
push
test
jl
dec
mov
xor
psubusb
mov
xchg
adc
dec
or
push
push
je
cmp
mov
cmp
inc
xor
test
mov
inc
mov
push
lret
ss
push
push
ret
mov
movb
pop
lea
in
xor
add
xor
jecxz
pminsw
mov
out
adc
mov
inc
nop
fimull
and
adc
outsb
push
sub
loopne
ja
jb
dec
inc
aas
mov
pop
mov
sub
addb
subl
rol
int3
mov
cmp
add
stos
test
stos
cmp
mov
push
movsl
test
outsl
dec
repnz
movsb
pop
push
push
add
faddp
xor
mov
mov
lcall
fmull
xchg
xchg
or
mov
les
aaa
inc
lods
and
mov
imul
xor
cli
je
cmpsb
cmpl
repz
cli
cmc
icebp
sbb
les
pop
jecxz
insb
or
adc
cltd
or
aam
push
cmp
push
mov
add
insl
sub
jne
and
pushf
mov
nop
mov
loopne
and
push
mov
in
fldt
ud2
sub
nop
ret
ret
push
xchg
dec
mov
orb
in
mov
mov
ret
es
mov
xchg
inc
sbb
jb
or
mov
adc
or
int
stos
add
inc
pop
jo
or
leave
xchg
jo
jmp
sbb
loop
adc
mov
incl
shrb
icebp
adc
cld
pop
decb
loopne
hlt
test
aas
xchg
call
addl
cld
inc
mov
inc
push
cld
mov
xchg
mov
push
int3
in
insl
test
pop
aaa
je
mov
dec
push
hlt
pop
xchg
pop
jecxz
aas
mov
cld
adc
inc
push
pop
jmp
stos
add
lcall
decb
lea
sbbl
cmp
cwtl
insb
testb
pushl
imul
loop
sub
inc
idiv
add
call
movsb
cld
xchg
adc
push
jp
jno
clc
leave
cmp
jae
and
and
push
push
loopne
rclb
or
mov
add
dec
jo
shrb
rolb
push
cs
mov
inc
and
push
push
inc
add
bound
rorl
cmp
sub
hlt
inc
lcall
sbb
fmuls
call
addb
sub
cmovne
mov
adc
dec
add
xor
cmc
lock
xchg
mov
lret
outsb
cmpsb
aas
xor
jb
mov
popa
outsb
fimull
ret
push
pop
addb
mov
push
mov
jmp
push
mov
call
inc
jno
mov
cmp
add
pop
loope
sub
cmp
scas
or
lods
mov
adc
cmpsb
push
in
mov
aam
call
xchg
push
jo
fisubrs
loopne
adc
and
jle
mov
aam
pop
les
pop
fisubrl
xchg
int3
lock
test
repnz
test
or
loopne
and
sahf
cmp
mov
fwait
icebp
sarb
and
add
aam
popa
sub
out
std
ret
lea
addr16
sub
insl
xorps
out
int
rcrb
push
push
pop
rorb
mov
sbb
bound
fdivr
cwtl
fistps
ljmp
rcll
push
outsl
add
xor
jl
stc
jb
sub
push
sub
push
adc
xor
xor
mov
dec
cld
jb
mov
mov
cmc
fildll
arpl
fbstp
add
sub
push
or
add
inc
loopne
push
pop
cwtl
std
popf
add
pop
adc
loopne
mov
dec
push
mov
mov
mov
clc
cmp
mov
or
push
call
jl
jne
sbb
into
mov
inc
out
insb
daa
ds
js
cld
mov
mov
movw
adc
add
orb
add
jmp
adc
add
fsubr
sbb
imulb
in
jp
mov
pushf
js
sbb
outsl
adc
pushf
inc
int3
leave
sbb
imul
cmpsl
fbstp
xchg
push
sbb
inc
mov
call
jg
je
fcmovu
push
push
push
ret
std
leave
imul
or
pushf
test
cld
pop
shrl
mov
xor
add
lods
pusha
mov
sub
mov
mov
and
or
hlt
or
sbb
in
mov
or
lcall
cltd
mov
fs
jne
outsl
rorl
paddd
add
stos
push
push
and
push
and
xchg
test
adc
mov
repnz
mov
pop
test
pop
inc
cld
imulb
add
test
inc
jle
testb
mov
xorl
data16
inc
xchg
imul
cmp
pop
clc
das
mov
inc
jge
xor
xchg
xor
mov
inc
in
loope
sar
call
in
adc
mov
aam
mov
and
add
push
lods
xor
sbb
cmp
cmc
sub
mov
lock
push
xor
stc
and
es
cli
or
cmp
push
mov
or
push
je
or
sti
out
es
cmpsb
push
cld
nop
or
inc
lret
xor
add
jg
push
test
outsl
push
sub
stos
sbb
fucomp
add
sbb
add
or
fwait
mov
pop
sbb
xor
pop
testb
sub
sub
and
adc
enter
push
dec
mov
xor
sub
lcall
or
mov
or
inc
or
push
out
pushf
jo
push
xchg
mull
shlb
and
pop
les
xchg
es
int3
mov
lock
add
bound
inc
fcomi
fisttps
mov
push
ret
jae
xor
pop
ret
mov
and
sbb
movsb
repz
roll
cmpsl
mov
mov
loop
pop
cmp
inc
jno
push
or
les
int3
or
movsl
jle
mov
and
mov
push
les
or
es
fcmovnb
push
jae
call
pop
je
gs
adc
dec
add
sbb
xchg
mov
mov
mov
nop
or
test
movsl
lea
mov
lret
loopne
bound
pop
add
push
aaa
adc
dec
fcomp
jo
push
roll
rcrb
rolb
out
out
cwtl
xor
fbld
push
and
scas
sub
xchg
shl
mov
mov
les
adc
adc
cmp
jge
cld
aam
or
mov
aaa
loop
add
mov
sti
add
cwtl
dec
mov
push
pop
push
test
das
mov
inc
test
into
std
push
inc
add
loope
je
lock
add
insl
adc
push
pop
jecxz
clc
cmp
leave
add
adc
clc
mov
test
pop
ja
addr16
stc
or
imul
sbb
outsl
jle
jmp
adc
push
add
push
sub
push
pop
fs
xlat
mov
push
aas
or
push
lcall
xor
or
pop
popf
inc
pop
clc
or
lcall
push
lods
outsb
or
adc
dec
bound
sbb
js
dec
mov
mov
aam
xor
cmp
das
in
push
push
and
leave
fs
insl
scas
pop
xchg
cli
negl
in
inc
inc
or
dec
cmp
inc
bound
cli
xchg
stos
adc
mov
icebp
or
les
lea
pop
or
adc
out
dec
sbb
push
aas
cmp
add
push
testb
inc
sbb
jb
in
in
fcomip
mov
pop
fcmovbe
pusha
mov
out
clc
rorb
inc
pop
out
xchg
push
push
cmp
in
and
mov
adc
pushl
dec
inc
data16
std
or
push
mov
sub
enter
pop
call
mov
add
or
pop
lcall
sbb
rorb
sbb
into
nop
shll
std
push
jns
test
pushf
add
add
dec
testb
sub
mov
ret
loope
xor
adc
jp
sbbb
xchg
data16
insb
jbe
popa
sbb
or
mov
xor
xchg
push
ret
jmp
mov
mov
mov
outsb
adcl
int3
sub
sub
insb
mov
cmp
insb
cmpl
fdivrp
xor
shl
fisubs
adc
into
pop
inc
cmp
adc
inc
sahf
imul
xor
pop
mov
xor
push
push
push
mov
add
fadd
xor
or
jbe
jmp
sub
fidivrl
mov
scas
adc
or
add
or
cmp
test
je
std
add
jge
sbb
and
aaa
add
jmp
pusha
cld
les
xor
xor
pop
mov
mov
rolb
and
cwtl
push
push
roll
test
xor
divb
mov
or
imul
xchg
fmull
cmp
cmp
push
ja
xor
mov
rolb
jmp
jmp
dec
cmp
rolb
inc
call
add
jle
loope
jbe
mov
xchg
xchg
lret
push
xor
push
pop
movsl
xchg
or
pop
adc
bound
cld
push
sbb
ss
dec
iret
ljmp
lock
sarl
inc
addl
cmp
push
in
fstpt
xchg
mov
clc
xchg
scas
inc
lea
or
call
cmp
popa
fldenv
outsl
xor
jl
add
cld
call
adc
test
dec
inc
insl
repz
mov
pop
mov
loop
js
incl
fdivs
jecxz
or
stos
stos
add
dec
call
aam
lds
sti
test
bound
pop
movsb
hlt
sub
lcall
aas
mov
inc
cmp
push
jne
mov
adc
jge
xor
mov
decb
mulb
enter
int3
loopne
add
mov
adc
dec
sarb
dec
push
or
cmpl
push
arpl
mov
inc
test
pop
jae,pt
cld
jecxz
aaa
decl
outsb
and
jmp
push
fadd
add
shlb
sbb
aam
mov
xchg
inc
cli
sbb
push
shll
dec
mov
shl
sub
insl
call
mov
jg
or
push
dec
lcall
jge
inc
dec
cld
ret
push
adc
je
inc
add
ja
sub
push
jb
gs
in
lods
add
gs
testl
aam
or
xor
idiv
ret
aam
leave
adcb
add
pushf
or
ljmp
xorb
nop
les
pop
pop
add
or
stc
sbb
test
movzbl
pushf
mov
loopne
push
ret
cmp
je
push
mov
mov
jno
or
orb
or
jo
push
pop
fiaddl
pop
cs
enter
mov
jmp
jb
push
pop
dec
mov
mov
jb
adc
sbb
and
aam
push
push
jae
sbbb
cli
push
inc
les
das
mov
outsb
pusha
and
mov
out
popa
pop
and
mov
jbe
jo
ss
aaa
pop
xor
aaa
push
test
incl
pop
push
mov
mov
mov
mov
jb,pn
push
mov
or
lea
lcall
and
adc
mov
xor
fs
insl
add
pop
or
rcrb
inc
fists
lock
rcll
sub
dec
sub
jbe
mov
xor
outsb
jg
mov
icebp
inc
pop
xorb
jo
add
mov
push
or
push
add
testb
xchg
jg
and
adc
mov
incl
mov
mov
add
xchg
mov
push
test
mov
gs
ds
test
aas
or
cmp
and
and
clc
xchg
xor
or
mov
jge
sub
xor
aas
adc
popf
adc
push
loope
in
push
ss
data16
stos
jne
andl
cmp
dec
pop
jl
scas
lods
push
inc
xchg
cld
sub
gs
cs
in
mov
jb
xchg
jb
js
jmp
add
sbb
inc
jge
jmp
mov
push
or
sbb
push
mov
mov
mov
lcall
inc
in
outsl
addl
imul
int3
pop
loop
mov
xor
jge
cmp
add
xor
push
in
and
fsubl
adc
add
shl
shll
lcall
enter
mov
mov
mov
int3
ret
and
subb
rolb
add
adc
fcomps
lcall
push
add
cli
sub
jbe
or
adc
mov
xchg
ret
mov
call
mov
mov
rol
mov
cs
mov
mov
mov
add
sahf
push
push
jle
lds
cli
mov
add
gs
push
inc
decl
push
jnp
mov
cwtl
mov
add
push
lret
shr
dec
sub
adc
aas
xchg
outsb
xorb
insb
push
mov
mov
in
mov
adc
mov
push
rol
dec
cmp
out
movsb
pop
cld
ss
ljmp
and
sub
add
push
and
incl
fisttps
les
adc
mov
dec
jmp
pusha
mov
cmp
pop
dec
adc
rorl
pop
adc
and
je
push
push
push
clc
iret
shll
jecxz
jo
nop
adc
pop
xchg
add
test
push
push
mov
or
jle
inc
les
lods
sbb
call
mov
data16
gs
inc
mov
mov
int3
rolb
adc
movl
jo
inc
in
cmpsl
movsb
mov
or
lret
mov
mov
adc
scas
fmuls
addl
jo
test
mov
mov
push
fs
xor
mov
test
xchg
jb
insl
mov
adc
xor
and
inc
push
xchg
clc
add
push
xor
pushf
or
popf
jbe
sbb
jmp
js
mov
cmpsb
pop
xor
test
sbb
jp
add
adc
lahf
mov
xchg
test
mov
pop
sub
jg
push
mov
cmp
mov
aad
cltd
and
ret
out
pop
out
ret
aam
dec
fs
sti
dec
dec
movsb
mov
mov
shrl
pusha
push
jecxz
sbb
mov
push
nop
js
cli
imul
jecxz
loop
xchg
mov
push
in
sub
xlat
inc
mov
cld
stos
pop
mov
lret
int3
ss
rol
push
dec
pop
testb
call
add
xlat
loope
pop
filds
loopne
or
adc
xchg
mov
or
push
rcll
sbb
ljmp
repnz
dec
mov
add
or
add
lea
xor
jb
jne
loopne
xor
mov
jmp
insl
pusha
lret
int3
gs
call
aam
sbb
push
js
outsb
mov
add
stos
hlt
cld
int3
sbb
jle
mov
adc
pop
inc
iret
lcall
lcall
mov
or
test
fsubrp
or
test
sbb
out
push
cmpl
test
shrb
mov
ja
mov
insb
je
pusha
pushf
add
adc
sbb
fiadds
push
inc
test
call
icebp
pop
push
jp
call
mov
sbb
ret
fldt
leave
clc
inc
adc
loopne
mov
lea
push
shrb
testl
test
je
ret
rclb
push
cmp
fdiv
add
jbe
popf
and
jge
cld
jmp
lock
mov
mov
aam
and
sub
aam
ret
nop
out
je
or
xchg
mov
fcomps
lock
jnp
and
or
ss
fnstcw
rorl
add
ss
inc
sbb
and
jg
mov
inc
sub
sbb
fstpt
dec
lea
clc
mov
mov
push
data16
mov
testb
mov
jne
jp
test
pushf
pop
push
inc
push
mov
xchg
pop
popf
pusha
icebp
jmp
mov
cld
add
pop
cmp
jg
jb
push
push
ret
outsb
nop
or
fcompp
mov
or
lret
inc
pop
adc
aaa
mov
mov
cmp
ss
pop
in
shrl
mov
mov
shrb
pop
fcmovnb
call
inc
pop
fsubs
inc
test
js
xor
adc
pushf
xchg
pop
sub
push
pusha
or
movsb
aad
xchg
lcall
cmpl
mov
pushf
into
rcll
ljmp
push
inc
push
addb
mov
out
cs
jmp
enter
mov
ret
inc
xchg
or
mov
inc
in
addb
add
pushf
mov
mov
inc
test
xorl
cmpsl
mov
push
out
aas
and
jmp
cli
data16
mov
push
jb
mov
sti
inc
ss
mov
lods
xchg
jo
std
mov
push
pop
sub
ret
fs
leave
jp
cld
lret
out
lret
xor
dec
shll
pusha
clc
pop
xor
jbe
pop
ret
xchg
push
les
mov
mov
addl
pop
movsl
in
subb
jge
cmp
jge
adc
and
or
rorb
mov
push
outsb
mov
lea
inc
sarl
mov
bound
les
dec
cwtl
aaa
ss
mov
pusha
fiaddl
inc
sbb
jg
mov
rcrb
fs
adcb
scas
cmp
sbb
aam
push
call
sub
outsl
das
sub
or
aam
add
mov
dec
nop
or
ljmp
shl
dec
popa
stos
pop
lds
inc
mov
pop
adcl
cmp
pop
dec
jg
fistl
outsb
movsl
push
aam
and
out
xchg
call
mov
loop
sub
mov
xchg
inc
inc
out
cld
push
add
es
adc
adcb
les
push
or
pop
xor
fdivp
cwtl
sub
dec
push
ret
push
pop
lea
clc
dec
and
call
xor
mov
inc
jb
push
push
loop
data16
fnstsw
add
inc
sub
pusha
inc
clc
sar
mov
outsl
push
jecxz
jge
and
push
int3
and
adc
fildl
mov
inc
fadd
je
js
push
in
icebp
imul
rolb
push
or
mov
dec
fwait
lea
setbe
hlt
inc
test
das
xor
and
call
dec
ficoms
sbb
fs
clc
pop
shl
push
push
mov
push
leave
mov
xor
aaa
mov
mov
call
cld
push
push
cld
arpl
dec
xor
decb
push
aad
data16
pop
or
push
test
popa
jne
loopne
cmp
lods
sbb
lock
mov
addl
mov
sbb
out
mov
pusha
stos
mov
mov
adc
movsb
rorb
cmp
orb
and
ror
incl
hlt
pop
ss
dec
data16
inc
pop
pop
cld
test
test
out
xchg
xor
xor
movsl
jne
cmp
pop
push
xchg
jl
nop
jcxz
insl
sub
push
enter
mov
add
dec
xchg
push
fsubrp
push
andb
xchg
loop
rolb
push
call
adc
adc
sbb
stc
mov
inc
adc
hlt
xchg
hlt
jne
shll
pop
das
mov
jl
inc
add
repnz
fldl
lods
std
testl
loope
std
in
ljmp
inc
inc
xor
adc
fisubs
adc
adc
ret
jb
mov
lret
dec
pusha
and
xor
addr16
adc
jne
and
sub
cmp
inc
movsl
mov
insl
mov
inc
mov
pop
fdivl
in
jo
mov
mov
push
imul
adc
int3
scas
mov
add
pop
pushl
pop
inc
cwtl
mov
dec
xor
jle
jnp
dec
push
rolb
inc
and
in
or
sarb
inc
cmp
cmpsl
in
dec
inc
or
push
inc
subb
sub
cmpsl
inc
lock
pushf
test
dec
insb
inc
mov
ljmp
fsubrl
and
loop
pop
in
pusha
mov
or
in
jp
mov
mov
jbe
sbb
int3
mov
ret
pop
adc
pop
dec
inc
mov
loope
int3
bound
std
loop
hlt
test
push
rolb
push
std
in
test
notb
std
ret
cmp
jo
mov
pop
cmp
push
ret
ljmp
es
mov
mov
js
ret
cwtl
in
roll
mov
lock
fildll
faddl
insb
shrb
xchg
or
add
mov
ret
add
mov
int3
sbb
adc
sbb
sbbb
cmp
or
call
mov
inc
inc
push
or
push
push
hlt
in
or
dec
or
sub
dec
gs
pop
ja
add
pop
outsb
add
and
inc
pushl
mov
and
push
inc
mov
test
pop
fs
mov
dec
movsb
sti
outsb
pop
out
mov
push
imul
jg
bound
xchg
xchg
std
pop
add
pop
xor
sahf
xor
lock
imul
xor
sub
call
out
fwait
lods
dec
adc
stc
loopne
dec
sbb
test
jmp
mov
mov
sbb
mov
add
jp
pop
sub
in
mov
int3
sub
cmp
push
mov
xor
mov
aaa
arpl
mov
xchg
int3
xchg
mov
push
xor
cmpsl
sub
ljmp
push
mov
mov
mov
or
and
push
outsl
or
imul
or
inc
ljmp
xor
shlb
faddl
jp
dec
dec
arpl
xor
inc
pop
hlt
cmp
stos
xchg
sarl
or
out
xor
movmskps
adc
fadds
and
cli
mov
daa
inc
dec
or
push
jb
outsl
mov
mov
pop
sub
add
sbb
sub
clc
mov
adc
orl
out
jp
add
test
pop
enter
jmp
add
inc
orb
ret
rorl
out
push
dec
and
je
mov
mov
repnz
jl
cmp
aas
mov
pop
sbb
add
jp
lret
xchg
call
lea
int3
addl
xor
jmp
ljmp
sub
push
push
push
cmp
pop
or
in
jl
aam
xchg
jge
call
das
jb
xchg
mov
je
pop
push
fadd
add
into
add
mov
push
pop
push
mov
loopne
dec
and
mov
aam
sbb
cmpsb
jg
and
imul
mov
call
jecxz
ds
push
fiadds
test
inc
test
imul
adc
mov
jmp
pusha
sarb
adc
jns
xchg
gs
adc
or
data16
and
clc
adc
inc
mov
adc
add
or
ret
inc
cmp
mov
adc
xchg
mov
loopne
call
cmp
les
test
leave
popa
mov
sbbl
cld
inc
push
and
dec
orb
fs
mov
cmp
mov
js
xor
mov
ret
mov
push
mov
push
pop
mov
and
call
or
insl
inc
jp
mov
jne
inc
cwtl
pushl
or
lcall
adc
mov
clc
xor
call
push
sub
mov
xor
and
mov
xchg
inc
daa
movsl
and
inc
ja
js
ret
add
mov
decl
inc
imul
arpl
mov
mov
ror
bound
pop
push
ds
fildll
mov
add
mov
sbb
ljmp
inc
push
jge
xchg
pop
inc
sbb
lret
lcall
cs
sub
cmove
mov
ret
ficoml
xchg
mov
jae
add
jne
pop
mov
xchg
and
xor
test
mov
adcl
push
jb
push
popa
or
loop
mov
sti
in
call
into
and
int3
xor
call
cmpl
add
and
add
fistpl
push
inc
out
call
xor
push
pop
enter
mov
sub
adcl
mov
fidivl
fs
add
in
push
les
dec
xor
and
clc
std
mov
inc
enter
mov
pop
dec
pop
mov
dec
sbb
cmp
or
ljmp
jmp
mov
xor
add
push
add
push
jb
rorb
out
add
fsubrl
dec
addl
mov
mov
shrb
imulb
test
dec
or
inc
or
and
fcmovbe
xchg
jg
fildll
or
pop
and
pushf
inc
gs
loopne
push
jmp
jbe
jmp
mov
stos
xor
and
xchg
incb
add
jo
fsub
pushl
push
cmp
add
adc
sub
xor
pop
inc
addb
jl
in
jne
push
or
inc
addr16
push
or
adc
fcoms
loopne
and
xor
push
shr
adc
sub
aam
int
cld
jecxz
sbb
pop
sahf
sarb
test
lret
test
cmp
hlt
stos
inc
mov
scas
push
out
mov
jl
nop
push
mov
cld
mov
testl
or
mov
push
fidivrs
hlt
addr16
mov
and
jo
or
mov
lcall
pop
jb
sbb
and
test
loop
and
lret
adc
xchg
clc
pushf
sub
and
arpl
sar
mov
mov
rcll
daa
sarb
push
int3
sub
sti
sub
in
push
mov
ret
rorl
sbb
mov
inc
je,pn
inc
out
inc
add
stos
xchg
mov
in
iret
mov
jne
adc
push
into
mov
stc
cmp
add
bound
or
shr
call
mov
push
mov
rclb
insb
test
xor
icebp
push
or
les
imul
xlat
fdivrs
lock
push
push
cmc
nop
dec
dec
or
sub
push
push
jge
inc
jg
inc
jmp
sbb
std
cmc
cs
dec
adc
out
or
pop
inc
pop
cs
orb
adcl
adc
mulb
xchg
jmp
mov
jecxz
rol
sbb
stc
gs
je
xchg
fisubrl
pop
add
lret
ja
stos
adc
add
cvtps2pd
inc
xor
cmp
sub
add
adcb
push
mov
jle
push
jo
ss
inc
sarl
dec
mov
mov
sbb
lods
inc
loop
xchg
test
ficompl
pop
inc
sbb
ret
mov
and
cld
xor
enter
add
stos
mov
pop
fdivp
sti
jmp
inc
xor
fisubrl
cmp
sbb
mov
outsb
push
jecxz
or
and
dec
clc
rclb
jb
jp
dec
mov
jmp
data16
addr16
call
jnp
dec
lods
inc
dec
push
inc
fs
add
cs
jg
sub
inc
in
fsub
sbb
or
fistl
cmp
push
inc
or
mov
int3
or
push
or
add
mov
pop
cmpb
imul
test
shrb
mov
adc
or
push
lea
test
mov
or
js
add
loopne
mov
in
mov
sbb
inc
pop
mov
or
lea
pop
mov
fldcw
mov
push
jmp
cmp
sbbb
in
shr
mov
push
stc
mov
sbb
fstpl
or
adc
inc
lock
dec
loope
test
cli
leave
mov
sub
mov
test
cmp
ret
adc
mov
add
xchg
cli
orb
add
icebp
cmp
dec
jl
pop
xchg
and
popf
and
mov
pop
jmp
test
push
jo
pushf
push
aam
push
pusha
inc
ljmp
test
inc
add
pop
or
push
push
enter
lea
mov
add
push
ds
jge
xor
mov
mov
sbb
lds
dec
stos
lret
andb
jl
push
sub
mov
inc
adc
fs
adc
mov
jecxz
fiadds
sbb
shrl
sbb
jmp
in
jnp
lods
orl
pop
les
and
pop
repnz
jmp
incl
test
adc
je
adc
jbe
sub
push
fsubs
or
cmc
pushf
add
adc
push
or
cmpl
movb
and
adc
sbb
mov
insl
inc
mov
mov
add
jae
fimuls
in
subb
sarl
push
lock
adc
jae
lea
mov
pop
addl
xorb
xchg
dec
jmp
jp
in
push
pusha
pusha
cmp
push
push
clc
enter
es
mov
in
loopne
xor
and
jno
adc
and
mov
pop
jo
inc
mov
sbb
rolb
cmp
sub
sbb
or
ret
out
mov
pop
adc
push
movb
push
bound
aaa
notb
jne
inc
lds
push
test
stos
adc
sub
mov
fs
add
les
cmp
adc
inc
cli
aaa
pop
rclb
push
add
push
dec
nop
lea
cmp
cmc
sbb
popf
cmp
xchg
lods
xor
rcr
and
push
xchg
aaa
push
jb
xlat
inc
sbb
push
push
mov
inc
push
clc
xchg
and
push
xchg
lods
lcall
pop
inc
jl
fs
cmpsb
and
lds
add
sti
sbbl
push
xor
jmp
or
sbb
nop
rclb
mov
mov
and
cmp
push
orl
pop
test
jle
mov
dec
or
hlt
lea
loopne,pn
lahf
jo
pop
out
pop
and
xchg
adc
rclb
sub
cmp
in
jnp
pop
call
rcrl
sub
inc
mov
or
adc
adc
cs
push
inc
lock
rolb
xor
mov
inc
push
shl
out
xor
enter
push
test
mov
or
ficoml
out
mov
cmpb
sub
xchg
ljmp
jle
repz
or
leave
repnz
mov
mov
jge
push
jmp
lret
xchg
inc
pushf
fisubrl
mov
mov
mov
mov
push
pop
push
push
incl
inc
add
cmp
adc
dec
std
das
insb
add
sub
mov
inc
fcmovnu
pop
sar
lahf
inc
test
add
push
hlt
rcl
fildll
mov
outsb
mov
leave
add
and
mov
je
ret
mov
nop
cmp
adc
xor
mov
rcrb
cmp
lods
adc
xchg
sbb
fiadds
mov
dec
cld
pop
stos
cmp
add
fdivl
adc
adc
mov
adc
sbb
mov
aas
sbb
nop
push
mov
or
mov
int3
push
cmp
push
lock
popl
xor
mov
xor
push
mov
adc
test
mov
dec
decb
dec
lods
pop
jbe
mov
in
xor
cmpl
mov
aaa
lahf
xchg
js
mov
test
mov
xacquire
xor
push
add
push
push
test
adc
cli
aas
nop
jp
pop
call
rolb
test
xchg
push
and
out
movsl
sbb
adc
adc
inc
int3
sbb
mov
rol
icebp
add
les
add
add
lods
and
sub
aad
xchg
inc
insb
lcall
xor
pop
xchg
mov
push
test
sbb
push
lock
inc
pop
inc
call
nop
mov
clc
mov
push
mov
inc
ja
arpl
cmp
push
in
jo
incl
dec
mov
aaa
fsts
lea
mov
mov
mov
jge
push
leave
mov
fcoms
xor
xor
hlt
cmpsl
add
cwtl
push
in
add
mov
inc
xlat
or
mov
jo
andl
pusha
sbb
fdivr
mov
xchg
mov
mov
ret
inc
jge
call
lret
push
mov
insb
dec
adc
mov
sub
mov
xchg
sub
es
decl
jle
inc
xor
popf
sub
test
test
mov
xchg
mov
orps
sti
dec
push
mov
cmpsl
stos
testb
test
xor
inc
das
sbbb
pop
jle
addr16
inc
sbb
stos
adc
fisttpll
adc
std
push
mov
je
xrelease
jmp
mov
lea
add
sub
cmp
inc
mov
fmulp
pop
add
sar
fs
iret
dec
addr16
pop
outsb
cmp
in
pusha
imul
or
adc
leave
rolb
mov
in
stos
mov
jb
sub
in
test
inc
xor
orb
add
in
sbb
dec
rclb
ret
and
mov
call
push
cmc
fnstsw
jbe
inc
cwtl
cli
pop
rcrb
mov
les
cmpsl
xorb
loop
push
popa
push
inc
pop
cld
xchg
xor
push
sbb
mov
shrb
out
aas
imull
loopne
jbe
test
dec
lock
or
inc
pop
js
xor
sbb
push
cmp
shr
popa
test
adc
rclb
jle
jle
ret
inc
fimull
dec
sub
inc
rcll
test
pop
adc
in
mov
xor
dec
dec
jne
jae
jne
mov
lea
sbb
push
jp
mov
add
fsubs
xor
dec
mov
add
mov
jo
push
movsl
sub
movsb
scas
sbb
ljmp
inc
scas
loop
lds
mov
fildl
add
mov
shll
cwtl
push
or
add
add
or
aad
test
lock
hlt
mov
fisttpll
pop
ret
roll
jg
push
lods
and
adc
sbb
add
mov
test
jns
add
call
imul
ss
stos
cli
and
add
ljmp
jecxz
ret
mov
add
adc
and
jg
xor
in
ficompl
pop
ret
push
pop
addb
sahf
mov
push
mov
inc
pop
lcall
and
add
pop
dec
in
mov
or
movsb
push
cmp
mov
mov
or
fidivs
xchg
dec
insl
movsl
outsl
jmp
mov
sbb
mov
add
gs
lock
inc
mov
pop
je
cmp
xchg
clc
inc
loop
cmp
pop
aaa
add
mov
orb
icebp
aas
lret
xor
dec
push
out
push
xchg
rcr
xchg
pop
add
mov
in
shll
pop
sarb
mov
loopne
ret
pop
push
das
jmp
inc
or
lret
inc
jne
cmpsb
jb
filds
mov
ret
shlb
int3
addr16
sub
lods
js
scas
adc
into
rcr
cld
push
ljmp
sub
sahf
xchg
jo
cmp
inc
xchg
xchg
sti
or
mov
and
cmp
mov
movb
test
clc
popa
dec
inc
orl
add
add
cmp
lds
mov
adc
ljmp
decb
ds
add
pcmpgtw
or
cmpsl
in
fs
out
add
popf
add
mov
dec
inc
mov
or
adc
inc
aad
sub
rclb
push
divl
jl
jg
push
push
cld
pusha
roll
mov
scas
xchg
mov
or
sub
jp
inc
ss
inc
pminub
out
stos
stos
fdivrp
mov
mov
in
cmpsl
jmp
xchg
push
subb
and
mov
popa
or
cmpsb
add
add
sarb
sbb
adcb
mov
mov
sbb
sbb
jecxz
incb
mov
pop
lea
inc
shrb
mov
cmpl
lcall
sub
mov
xchg
in
jb
xor
lds
or
mov
mov
mov
inc
int3
add
out
clc
stos
sub
push
call
in
fs
inc
or
ljmp
cwtl
push
push
popa
mov
push
pop
adc
dec
inc
loop
mov
jmp
adc
and
sbb
mov
shrb
inc
add
addb
movsb
sbb
fs
es
push
fsubr
clc
pop
add
push
in
mov
gs
data16
pop
test
jno
mov
fisubs
lock
pop
dec
adc
mov
clc
in
pop
enter
pop
imul
push
leave
cli
xchg
dec
jne
mov
enter
adc
aad
mov
cwtl
add
add
lods
je
and
daa
adc
daa
adc
je
pop
mov
xchg
rcr
dec
aam
ror
add
push
mov
sub
int3
es
mov
ret
add
mov
fsubl
insb
mov
inc
test
decl
sbb
std
rcrb
add
sbb
call
sbb
xchg
ret
lods
pop
or
rorl
xor
scas
movsb
pusha
add
lock
dec
inc
mov
mov
or
jbe
orl
inc
sub
mov
jg
aad
insb
gs
sbb
xor
jl
push
lods
dec
ret
div
add
into
gs
mov
xor
mov
mov
enter
je
push
sti
and
and
jge
je
lock
bound
insl
cmpsl
push
cmp
jp
outsb
out
mov
insl
pop
add
fildl
add
lds
movsl
fs
mov
int
pop
clc
or
add
or
shlb
xchg
dec
cld
es
xorl
orb
cli
xchg
sub
pushl
icebp
push
push
and
or
jae
loopne
inc
int3
sub
cmp
dec
pusha
mov
dec
mov
in
or
xor
ficoms
popf
fdivr
pop
and
mov
lock
push
pop
shll
jl
in
xchg
xchg
call
std
push
push
push
enter
cli
inc
cmp
repnz
or
in
mov
mov
pop
mov
pop
mov
pop
loop
fcoml
insb
shrb
jmp
push
adc
paddq
adc
and
add
inc
les
dec
adc
or
or
cmp
data16
cmpsb
push
imul
mov
es
mov
sbb
ljmp
and
sar
rorb
fbld
loopne
test
cli
imul
int3
pop
sbb
jge
mov
jbe
mov
jmp
mov
gs
mov
mov
fsub
dec
sub
mov
jg
xor
push
insb
mov
lock
test
mov
jae
cmp
mov
dec
andb
pusha
lea
incl
cmp
dec
gs
gs
sbb
ljmp
cmpsl
hlt
sbb
or
in
cmpb
jmp
sbb
lods
jne
inc
lods
rorl
cs
int3
xchg
into
in
push
loopne
jb
adc
xchg
test
push
inc
out
loopne
mov
mov
mov
cmp
sbb
shlb
inc
mov
loope
sbb
dec
sub
rolb
sbb
fistps
add
and
mov
enter
and
repnz
sti
mov
decb
xchg
or
push
test
rorb
sbb
sub
les
xor
mov
int
jle
sub
push
outsl
imulb
adc
mov
add
push
cld
adc
incl
loopne
xchg
xor
mov
out
insl
lcall
insb
add
and
push
or
out
pop
mov
icebp
ret
loopne
inc
cld
iret
or
cld
push
sbb
jmp
cmpsb
lods
cli
fmul
jle,pn
push
inc
cmp
mov
add
les
cli
pop
xorb
shlb
stos
mov
mov
hlt
pushf
pop
cmc
cmp
push
push
and
xor
lods
das
adc
mov
insb
push
pop
mov
adc
adc
cmp
loop
popa
and
cld
fwait
dec
fisttps
outsl
mov
mov
or
or
cmpb
lret
testl
std
pop
xor
inc
mov
xlat
push
inc
jmp
clc
fs
testb
mov
jbe
notb
mov
outsl
test
mov
xor
pop
mov
fistpl
pop
mov
aaa
outsb
xchg
push
movsl
or
fldl
pushl
xor
xchg
test
push
inc
xor
fsubl
add
in
js
cltd
mov
les
jge
maxps
sub
or
inc
je
pop
cmc
out
ret
xor
xchg
in
pop
mov
aaa
mov
popa
in
icebp
mov
flds
inc
jmp
clc
or
add
pop
subb
aam
icebp
leave
xchg
loopne
adc
mov
outsl
movsb
inc
pop
xor
pop
mov
gs
outsb
hlt
cmp
sar
lods
xchg
add
addl
inc
rorl
sbb
mov
lock
adc
mov
movsb
push
jb
mov
pusha
insb
mov
ficoml
rolb
add
loop
add
cld
push
jge
xor
xchg
adc
outsb
loopne
orb
dec
lods
add
sahf
inc
mov
hlt
or
test
aaa
cmp
jne
clc
mov
popa
fdivrs
push
clc
test
fimull
jp
inc
call
xlat
push
sti
sar
ret
push
mov
aaa
fdivs
rol
push
test
ljmp
lods
test
pop
cli
sbb
gs
cmp
outsl
ret
sti
pop
je
icebp
jmp
mov
and
cmp
mov
xchg
add
mov
add
jp
add
mov
adc
clc
rorl
loopne
in
dec
sbb
call
into
test
push
pop
aam
sub
pop
call
in
je
in
xchg
xchg
notb
pop
inc
popa
lock
jmp
jle
adc
push
sub
jle
loopne
add
add
int3
and
call
and
adc
sbb
push
mov
test
test
sbbb
sub
ret
mov
insb
jb
sub
call
jbe
outsl
or
jb
push
nopl
cld
pusha
push
loope
scas
inc
lds
aaa
mov
ss
sbb
dec
shll
negb
int3
pop
push
negb
scas
xchg
push
xor
gs
aaa
test
jae
xor
or
add
mov
lea
sub
out
shll
nop
push
addl
sti
dec
popa
mov
movsb
push
scas
jo
mov
jle
add
mov
cmpsb
in
or
mov
cmp
lods
js
popa
loop
hlt
cmp
jb
inc
push
inc
sbb
std
xchg
push
push
push
or
into
jge
lret
xchg
mov
xchg
sbb
mov
clc
imul
call
or
jmp
int3
sub
xorps
sub
inc
ror
add
xchg
lret
or
test
push
ss
call
bound
loope
or
add
xor
int3
mov
scas
dec
inc
mov
bound
pop
push
outsb
pusha
loopne
mov
mov
and
sar
push
dec
call
xchg
pop
or
adc
stos
test
or
ficompl
cmp
test
ret
lcall
jbe
enter
xor
xor
ret
mov
dec
test
orl
das
mov
sbb
xor
ret
mov
lret
add
std
inc
sbb
pop
pop
add
cmp
and
push
insb
lea
dec
mov
jo
and
adc
inc
stos
rorl
mov
mov
sub
inc
sahf
lea
aam
adc
pop
fdivs
mov
cld
mov
fcoms
ret
imul
adcl
orb
xchg
dec
jp
xchg
pusha
clc
pop
or
mov
pushf
cwtl
test
stos
lods
jecxz
enter
lea
push
stos
outsb
test
pop
xor
filds
pushf
xchg
push
and
jns
xor
jne
jge
dec
data16
xchg
out
ret
jne
dec
test
or
pushf
pop
cmpsl
xor
mov
and
add
shlb
into
xchg
mov
sbb
loopne
push
shll
rcrb
fs
sub
enter
cmp
or
push
mov
add
dec
and
inc
ret
insl
add
mov
hlt
fmuls
add
mov
mov
inc
and
lret
inc
sbbl
lcall
sbb
xor
les
xchg
ret
pop
int3
je
jb
mov
in
out
dec
xor
js
mov
push
cmp
mov
lret
add
mov
fsubl
aas
or
inc
imul
cmp
movsl
shlb
fidivrs
mov
sub
vpaddd
add
js
jle
jb
pop
cmp
pop
ljmp
js
lods
out
jno
shrl
add
cmp
mov
aaa
inc
jle
xchg
sub
cltd
push
inc
inc
popf
add
data16
orb
sbb
ret
xchg
std
push
arpl
add
divb
mov
pmulhw
push
mov
icebp
jl
addl
adc
test
sbb
xchg
xchg
inc
aad
jo
je
push
push
sub
jmp
xor
add
push
iret
loop
push
test
add
adc
and
cmp
inc
mov
aam
out
mov
and
ss
sub
lock
or
add
stos
add
sub
insl
dec
shrb
mov
and
pop
sub
mov
inc
cmp
push
rorl
fs
xchg
mov
and
cmp
jo
pop
or
add
jb
pop
add
icebp
and
jg
hlt
xlat
popf
bound
jg
sub
mov
cmp
rclb
je
push
and
dec
lea
jb
mov
jo
and
cmpsb
je
gs
push
incb
mov
fadds
pop
addb
fdivs
fimuls
fwait
ret
inc
sub
out
enter
push
mov
xor
sub
pop
push
int3
repz
mov
dec
inc
stc
faddl
mov
add
stos
in
and
jo
rorb
jge
ret
rclb
addb
call
movl
in
mov
xor
and
jno
pop
mov
mov
lret
or
and
add
jp
jge
jns
add
test
sub
into
sub
fimuls
es
scas
mov
mov
rclb
pop
std
ror
push
fidivs
adc
xor
xor
shlb
push
pop
test
popa
mov
fmul
pop
cs
mov
mov
jl
jne
add
lret
pushl
les
jle
cli
mov
and
jbe
mov
insb
xchg
add
add
mov
add
ljmp
call
decl
into
pop
jmp
popa
cmp
push
add
push
xchg
xchg
testb
repnz
arpl
jl
enter
jp
in
cmp
or
sbb
cs
mov
movsb
push
xor
and
sub
push
loop
cmp
or
fdiv
negb
add
std
pusha
mov
sahf
mov
dec
mov
mov
jae
xchg
sarb
mov
lret
sub
sbb
mov
xor
adcb
scas
cmp
sub
lods
mov
mov
ljmp
sub
lock
xlat
incb
sahf
nop
adc
adc
push
mov
ja
or
push
push
mov
data16
cli
jle
test
sbb
inc
out
pop
push
shlb
add
push
enter
sub
mov
push
je
in
mov
fisttps
mov
jae
jbe
add
je
testl
or
lods
pusha
or
ja
mov
jg
test
insb
pop
cwtl
sbb
mov
and
add
push
ds
or
cmpsb
stc
pushf
cmp
sbb
cmp
int3
sbb
mov
cs
adc
mov
push
lods
filds
mov
rolb
pop
popa
js
ficoml
js
incb
adc
add
xor
imul
shl
xchg
pushl
insl
js
test
ja
lea
loop
call
je
mov
mov
orb
fwait
inc
cld
cmp
dec
mov
cmp
es
push
ret
out
les
or
jl
sbb
loopne
ret
das
scas
mov
sahf
stos
mov
pop
adc
fistl
filds
faddl
lds
adc
push
cld
inc
push
mov
dec
or
insb
ret
adc
or
lods
sbb
and
test
call
dec
adc
pop
fs
adc
scas
lods
and
idiv
cs
sti
push
gs
cld
jne
or
js
jmp
lcall
push
jb
or
add
xchg
je
call
inc
lcall
add
xor
push
pop
mov
rclb
or
fs
push
leave
ret
mov
inc
mov
and
jne
int3
add
and
out
inc
add
sub
push
ret
push
adc
or
cld
cli
cwtl
ljmp
or
mov
jbe
sbb
xchg
loope
sbb
cmpsl
les
jl
mov
divps
and
push
mov
jg
leave
lea
mov
cld
ror
mov
aas
mov
pushf
mov
push
push
pop
enter
mov
repz
add
pop
popa
mov
movl
addb
cmp
add
icebp
and
mov
in
ret
mov
shlb
pop
fimuls
lretw
in
add
cli
dec
sbb
lcall
mov
shr
mov
and
call
xchg
and
xchg
xor
inc
data16
xchg
insb
outsb
pop
les
cmp
add
out
int3
and
xor
mov
xor
mov
sbb
dec
xor
shlb
lahf
add
test
inc
and
xor
cmpl
jle
lcall
push
stos
rcl
pusha
scas
xchg
pop
aam
lea
arpl
and
out
xchg
cmc
lods
mov
test
out
sub
inc
rolb
lods
pusha
les
lret
xchg
xor
ret
pop
ret
leave
jb
push
mov
mov
sbb
inc
mov
xchg
dec
ret
or
add
roll
scas
cld
lods
shlb
dec
mov
mov
mov
enter
push
test
push
push
je
gs
les
add
daa
inc
xchg
jp
ret
shrb
rorb
inc
filds
out
inc
mov
xor
cmc
cld
cmp
cmpsb
pop
rolb
shlb
push
mov
mov
jl
outsb
test
push
inc
xchg
loop
test
insb
scas
xchg
sub
lea
adc
cmp
and
call
inc
jo
cmp
cmp
pushf
cmp
or
cmp
mov
or
inc
imul
lock
cs
ljmp
arpl
lea
aad
insb
mov
add
rcrl
mov
dec
shl
js
js
push
cmp
or
ds
xchg
xor
mov
icebp
adc
jg
push
xchg
clc
outsb
loop
gs
in
orl
add
orl
push
in
dec
insl
fs
adc
js
xchg
mov
test
mov
test
and
mov
push
inc
sbb
dec
push
cltd
mov
outsl
cld
xchg
sbb
dec
test
and
and
fldt
adc
insl
and
jecxz
add
mov
xorl
imul
stc
mov
leave
inc
int
mov
js
sti
mov
fisubl
aam
or
mov
push
adc
ret
adc
xchg
mov
in
loope
push
mov
pop
sbb
shlb
jg
pop
test
rep
mov
pop
or
or
mov
rol
xchg
and
cmp
faddl
push
jns
loopne
inc
adcb
push
pop
add
xor
or
or
add
mov
cli
push
sbb
or
pop
inc
and
or
xor
scas
jmp
add
hlt
mov
lea
push
lods
ja
sbb
ret
mov
push
pop
pushf
push
fwait
jp
xor
hlt
adc
adc
shl
mov
xchg
aam
dec
ret
pop
xchg
mov
push
jae
mov
addb
clc
push
loopne
call
or
int
sbb
and
pop
jo
mov
cmp
mov
lea
js
cmp
adc
fmull
inc
mov
mov
add
sub
xor
adc
fmuls
bound
add
mov
inc
call
mov
ljmp
ret
or
push
pop
add
rolb
jp
stos
arpl
jle
test
add
inc
je
push
inc
fstpt
and
in
not
jp
test
orl
dec
data16
cmp
dec
dec
mov
ficomps
cmp
pop
xchg
jmp
insb
sbb
scas
cs
or
cmp
inc
gs
fs
add
mov
pop
mov
push
js
in
dec
pop
mov
fistl
je
pop
pop
mov
sbb
fs
daa
add
imul
mov
inc
adc
std
pop
test
loopne
icebp
cmp
icebp
cld
negb
add
js
mov
dec
jle
jae
xchg
pop
ret
test
add
jnp
adc
pop
jg
scas
mov
mov
enter
add
xchg
jmp
rorl
outsb
js
mov
sub
mov
iret
enter
test
cmp
mov
mov
pop
lock
adc
vmwrite
jo
mov
nop
js
sbb
int3
ret
inc
loope
mov
in
mov
xchg
sub
cmp
and
push
cmp
mov
jge
xchg
movsb
dec
push
mov
mov
sub
mov
call
push
push
lea
mov
loope
jb
add
mov
arpl
or
add
inc
cmp
lock
aad
adc
lea
sub
test
or
jmp
fistpl
dec
pop
das
clc
add
fmulp
sahf
inc
or
and
push
ret
in
push
push
and
loopne
adc
dec
sbb
jb
and
pushl
mov
fwait
jbe
mov
add
hlt
daa
lea
and
mov
lock
xchg
ljmp
push
push
dec
push
xlat
je
mov
xor
leave
add
jbe
lcall
fildll
add
jl
cmpsl
in
xor
pushl
enter
insb
inc
int3
imul
pop
les
jbe
rcl
add
sub
aaa
adc
push
shlb
mov
rorb
xchg
push
fmuls
sub
js
cmp
push
adc
incl
mov
add
je
jl
leave
mov
push
jno
mov
call
inc
pop
add
cmp
add
push
mov
loopne
shl
inc
popf
sahf
orl
test
sbb
mov
lds
ljmp
mov
mov
test
xchg
sub
adc
add
jge
test
test
fmuls
lea
sbb
pop
outsb
jge
je
popa
pop
lock
pop
into
or
or
sbb
inc
push
mov
push
mov
popa
adc
lea
sub
mov
cmpb
inc
pop
mov
xchg
or
sbb
dec
aam
mov
jae
test
pop
std
mov
daa
in
repz
mov
inc
push
jmp
xor
cmp
inc
movsl
mov
iret
inc
stc
call
mov
mov
xchg
add
sbb
sub
nop
adc
xor
jle
xchg
cmc
xchg
ljmp
mov
fcmovnb
out
pushf
inc
xor
mov
push
push
adc
adc
add
enter
sarl
in
cmp
cld
data16
test
fldl2t
jae
rorb
sbb
xlat
mov
dec
mov
clc
xor
or
arpl
into
dec
rolb
rolb
ret
insb
mov
inc
lods
push
cmc
cmp
inc
xchg
push
cmp
outsl
movsb
scas
data16
or
mov
data16
xchg
pop
xchg
pushf
lea
pusha
std
aam
fsubs
mov
imul
decl
inc
mov
adc
cld
or
mov
int3
mov
xchg
imul
push
mov
fdivs
sub
insb
clc
lods
test
ret
arpl
sbb
daa
inc
cld
xor
sti
std
xor
shlb
push
addl
ss
cmp
cmp
dec
testb
stos
test
loopne
stos
jge
mov
cmp
and
sub
mov
jae
movsb
mulb
xchg
fisubs
cmp
adc
inc
inc
mov
insl
jne
bound
and
or
cmp
dec
pop
rorb
inc
adc
mov
push
les
add
sbb
or
pop
lods
jp
push
cmp
shll
add
push
adc
jb
hlt
imul
dec
into
nop
aam
jecxz
dec
pop
pusha
push
cmp
pop
add
int3
cmp
fsubrl
inc
fdivs
push
arpl
decb
dec
lock
sti
in
dec
enter
sbb
xor
jl
mov
cwtl
pop
outsb
cld
jp
adc
fsts
dec
inc
icebp
pushf
sti
sub
outsl
cmp
movsl
imulb
dec
icebp
xor
jo
sub
lea
or
sbbl
jb
jmp
nop
mov
fisttpl
repnz
rol
inc
sbb
xor
rdmsr
jmp
loopne
gs
cmpb
add
rcrb
shlb
add
scas
outsl
xor
and
leave
add
add
es
mov
add
lcall
add
movsl
sub
call
push
inc
push
pop
rol
mov
popa
inc
shlb
ret
push
popa
fmuls
jp
and
inc
fcomip
pop
loopne
test
or
jg
test
inc
push
add
hlt
les
mov
fisubl
incb
mov
rorb
adc
in
add
idiv
add
jns
push
xor
repz
cmc
lods
ja
ret
cltd
incb
addl
jge
push
push
movb
lea
dec
inc
call
sub
hlt
aam
sub
sbb
xor
or
push
mov
cmp
cmp
movsb
gs
or
mov
call
in
add
inc
call
fs
rolb
xor
loopne
inc
inc
loopne
xor
and
cmpsb
add
cmp
xchg
push
pusha
insb
icebp
jns
mov
jge,pn
jl
lea
sbb
mov
jle
adc
shll
hlt
movsb
dec
lock
mov
cld
loop
mov
jne
push
sub
stc
lock
rorb
push
and
add
pop
or
cmp
jb
cmp
push
add
cmc
ds
mov
ret
push
pushf
lods
int
test
and
mov
mov
add
add
data16
or
in
jmp
or
push
add
xor
stos
into
mov
out
hlt
xor
jmp
pushf
xchg
adc
push
test
pusha
movsb
pop
cmpsb
adc
scas
pop
mov
xorl
es
add
mov
jl
sub
je
gs
mov
cwtl
inc
push
ss
loopne
sarl
push
fldl
call
pop
xor
divl
xor
mov
ret
mov
mov
or
std
test
push
pop
jmp
dec
cmp
mov
sahf
inc
push
pop
mov
adc
xchg
ljmp
sbb
subl
jo
add
cs
rol
push
pop
andl
jbe
js
repnz
push
mov
mov
call
into
or
adc
adc
sbb
jg
repnz
jns
jne
rcll
adc
mov
mov
sub
dec
push
sub
mov
xchg
call
call
inc
insb
jmp
pop
inc
rorl
outsl
fimull
adc
sbb
add
cld
andl
and
lea
push
daa
jbe
daa
hlt
cmp
jl
lcall
dec
rorl
mov
js
add
popf
inc
jae
jg
fimuls
ret
cld
pop
inc
fimull
pusha
inc
icebp
inc
std
popa
fmull
dec
adc
repnz
mov
add
ret
inc
ss
cmp
inc
inc
or
xor
es
sahf
int3
lods
daa
add
push
lret
repnz
cld
cmp
add
movsb
loop
push
repnz
xchg
mov
ret
dec
inc
call
mov
mov
lret
dec
movsb
in
add
or
adc
or
inc
insb
mov
clc
xor
fmuls
cmpsl
push
push
loope
sub
notb
outsl
popf
test
jl
faddp
push
push
inc
rorb
int3
pop
and
add
adc
stos
and
dec
loopne
loopne
outsb
cmp
mov
xor
pusha
inc
xchg
mov
adc
pop
sbb
mov
gs
aaa
and
sbb
pop
xchg
incl
rcrl
lret
test
js
mov
addb
imul
push
mov
jo
ret
aaa
push
adc
and
jnp
jae
icebp
or
jb
je
sbb
inc
xchg
cmpsl
imul
lea
cwtl
add
or
loop
lcall
pusha
dec
adc
add
mov
or
stos
mov
lret
dec
or
cs
adc
inc
insb
sub
pop
ret
ss
push
or
sub
sub
ds
aaa
xlat
lret
jne
out
cli
cmp
adc
jl
mov
adc
dec
lret
push
add
jmp
add
cwtl
mov
pop
shlb
in
cmpsb
lea
icebp
int3
add
xchg
add
mov
imul
dec
push
cmp
dec
sbb
mov
dec
ljmp
or
aam
loope
pop
add
add
xchg
fmuls
arpl
sub
sbb
inc
inc
jl
mov
and
imul
cwtl
mov
cwtl
shrb
fildl
xor
inc
insl
jo
inc
enter
or
push
jl
mov
ret
add
shrb
push
add
cmp
jne
mov
sbb
push
or
or
inc
aas
xor
out
cmp
mov
jg
mov
test
add
nop
inc
in
or
jge
rclb
sub
pushf
cs
cmp
add
pop
ret
mov
jg
sbb
sbb
jne
mov
call
dec
ret
sbb
addr16
test
movsb
loope
les
jmp
sbb
xlat
pop
push
gs
sub
loopne
jge
sub
add
mov
adc
cmp
lcall
mov
or
mov
aaa
pop
aas
add
in
into
dec
cmp
sub
mov
xchg
fs
repnz
int
inc
orl
push
jp
sarb
repnz
les
pop
scas
dec
or
cmp
push
xchg
adc
mov
jns
js
js
adc
add
sbb
mov
mov
and
clc
std
mov
mov
inc
rclb
push
je
jne
rclb
mov
test
or
or
pop
scas
pushf
inc
sub
jle
cmp
dec
and
rolb
cmp
xchg
lds
jmp
xchg
scas
xor
dec
sarb
or
sbb
and
dec
mov
in
add
or
or
cmpsb
cmp
outsl
mov
mov
push
or
stos
aam
lods
inc
mov
out
std
mov
pop
mov
fdivrs
jge
call
mov
xchg
adc
add
sbb
dec
add
mov
inc
inc
scas
xor
mov
loope
add
lock
in
sub
aaa
cwtl
les
leave
dec
scas
ret
fwait
add
sub
or
insb
fadds
in
lock
lcall
subl
cld
add
or
call
xchg
push
clc
jl
xor
ret
add
add
xorb
mov
sahf
cmp
call
inc
and
inc
clc
je
rcr
mov
adc
inc
inc
or
out
add
jl
or
subl
add
xor
pop
add
inc
faddl
ljmp
push
js
or
sahf
push
and
xor
add
inc
cmpb
arpl
jge
addr16
dec
or
mov
pop
push
adc
adc
adc
sbb
out
sarb
mov
xor
push
ja
call
lahf
cmpsb
inc
lahf
push
add
sub
jle
das
rorb
loop
adc
lock
add
pop
incl
and
sub
call
and
xchg
push
je
jp
insl
aas
adc
mov
add
scas
jp
xchg
pushl
lock
add
rcl
mov
inc
dec
in
jmp
cmc
add
inc
xorb
mov
fiadds
adc
and
sbb
lods
dec
xchg
xchg
cwtl
jns
xchg
int3
xchg
lods
cld
adc
xchg
mov
in
out
rorl
test
gs
push
lret
pop
push
xchg
cwtl
fdiv
mov
xchg
pop
push
push
movb
push
jbe
pop
imulb
jo
cmp
int3
add
mov
jle
jmp
enter
add
test
lea
hlt
jbe
int3
pop
pop
xchg
lar
rcl
gs
pop
mov
adc
fmull
jb
je
imul
sbb
lret
adc
lcall
sbb
mov
add
stos
pop
dec
inc
sub
inc
inc
hlt
in
jg
test
jg
or
test
jmp
and
ret
fldenv
aam
lock
pop
mov
stc
mov
in
add
incl
jne
outsl
push
mov
add
dec
push
inc
sub
adc
sbb
or
or
or
xchg
push
fdivp
mov
inc
jmp
or
pop
add
stos
outsl
leave
fdivrs
push
cmp
mov
lock
ret
in
add
lock
mov
xor
push
fsubl
push
mov
fisubs
int3
pushf
les
xchg
js
push
lock
xchg
cmp
and
jmp
add
loop
gs
call
sbb
rcl
mov
inc
jne
xchg
test
fsubs
shlb
add
and
push
jne
mov
mov
popa
inc
or
push
lock
insb
lock
pop
addb
test
stos
dec
pushw
pop
cmpb
mov
push
shl
cmc
sbb
xchg
repnz
adc
call
fsubl
inc
mov
xor
rorb
mov
addl
popa
shlb
xchg
add
mov
pop
call
adc
xchg
pusha
mov
xchg
inc
jbe
xchg
add
xchg
outsb
and
lods
lods
cwtl
fildl
jb
push
shrb
xchg
pushl
aaa
addb
aad
rclb
adc
ljmp
nop
adc
mov
mov
cmp
sub
adc
fists
jle
jg
or
cmp
test
xchg
inc
into
mov
mov
push
and
dec
shlb
xor
adc
lock
dec
pop
loopne
nop
hlt
cmp
adc
push
add
and
movl
std
mov
cmpsl
xchg
push
ljmp
addb
add
insb
dec
push
sbb
push
outsb
and
push
add
nop
jle
sbb
add
aam
pop
test
inc
jle
rolb
dec
lock
adcb
mov
cmp
insl
test
xchg
and
mov
arpl
add
loopne
inc
push
xchg
hlt
jg
out
xchg
cld
mov
mov
addl
mov
movsl
iret
lods
adc
push
cmp
add
out
mov
mov
dec
aad
push
jb
push
sahf
inc
mov
out
adc
out
or
or
mov
data16
incb
adc
mov
hlt
cmp
loope
and
mov
xchg
incb
jae
enter
push
mov
ja
cli
mov
jp
js
fs
call
inc
loopne
or
movsb
inc
fdivrp
sahf
mov
inc
je
int3
sqrtps
aam
call
enter
cmp
dec
push
std
das
mov
rcll
mov
popf
and
mov
loopne
add
test
mov
inc
loope
push
jb,pt
jb
add
sarb
mov
data16
les
push
pop
ja
push
push
scas
adc
jae
cmp
in
call
orl
rorb
cmp
mov
je
int3
je
les
dec
fisubrl
xchg
mov
ret
dec
int3
fsts
inc
incl
loopne
cmpsb
insb
insb
inc
inc
shlb
mov
xor
pop
dec
fs
lods
pop
cmp
adc
push
mov
leave
cmp
and
mov
push
push
mov
jne
outsl
cld
stos
movsl
dec
or
push
mov
inc
test
add
add
sbb
lcall
add
jae
mov
pop
xchg
xor
rorl
push
jne
pop
mov
cltd
inc
mov
add
ja
sbb
outsb
addb
cmp
jmp
and
add
pop
sbbl
mov
add
out
xor
das
out
push
addl
lods
sbb
call
decb
jmp
mov
leave
ret
inc
or
dec
int3
decl
mov
add
adc
ljmp
test
inc
push
test
jmp
add
xor
ret
dec
pop
mov
test
mov
dec
push
fmull
cmc
dec
andb
cld
mov
mov
and
loop
cmp
jo
adc
gs
pop
push
aam
and
add
dec
push
xor
dec
mov
clc
scas
fiaddl
add
pop
jne
jbe
aad
out
rorb
push
fdivrl
xchg
sahf
push
test
ss
xlat
pop
in
add
jp
pop
int3
or
fists
inc
imul
sbb
testb
loope
and
mov
out
sbb
loope
roll
and
call
mov
inc
pop
cli
lock
jle
cld
adc
rclb
mov
sbb
inc
fs
lods
add
adcb
pop
dec
out
or
decl
add
mov
iret
movb
mov
lcall
dec
sarb
daa
jnp
inc
sub
or
add
inc
push
inc
sub
insb
fidivs
push
xchg
inc
mov
repnz
dec
mov
adc
fcmovu
lea
pop
dec
paddsb
arpl
gs
cmpsl
clc
subb
loopne
push
sbb
je
pop
insb
lods
rol
push
clc
pop
add
sub
pop
or
clc
out
inc
int3
jl
shr
aaa
or
sahf
test
lea
shlb
adc
jmp
sub
mov
mov
dec
pop
es
pusha
ret
and
dec
inc
mov
add
shrb
mov
or
inc
cld
or
add
adc
jmp
jl
pusha
xorl
dec
or
pop
adc
aaa
mov
lods
dec
pop
mov
adc
pop
or
add
js
mov
movsb
push
or
jg
jb
inc
inc
mov
jb
xor
adc
imul
mov
gs
adc
jmp
insb
shll
cmp
add
xor
ss
outsl
jb
push
add
testb
inc
and
mov
adc
push
ret
push
test
add
adc
or
aaa
push
push
lods
sbbb
sub
push
xchg
mov
fdivrl
das
add
leave
aas
mov
mov
mov
loop
xor
or
aam
inc
sub
adc
mov
xor
jb
add
adc
cld
add
call
sbb
jecxz
cwtl
dec
push
sub
mov
add
out
shl
test
insb
inc
pop
jecxz
fistl
push
jne
and
mov
inc
shrl
sar
push
mov
fsubs
ss
gs
adc
outsl
lods
xor
add
enter
or
decl
and
dec
inc
int3
enter
cmp
in
and
sbb
into
add
pushl
imul
mov
add
clc
xor
aam
notb
inc
add
mov
stos
mov
cmp
jecxz
mov
jmp
cmp
xor
std
cmp
idivl
call
data16
inc
pop
and
mov
jb
xchg
orb
imul
sbb
popa
inc
mov
pop
jne
pop
int3
shll
stc
mov
rorb
ljmp
and
ljmp
icebp
or
xchg
pop
jmp
mov
mov
loop
loop
pusha
inc
call
push
inc
mov
sahf
enter
push
js
incl
fsubrs
negb
jbe
insb
pop
shll
push
andl
jmp
je
or
je
inc
push
call
test
rcl
jg
inc
dec
mov
dec
inc
mov
enter
fbld
add
push
jmp
rcll
dec
idiv
call
push
mov
pop
fs
mov
jo
push
cmp
add
xchg
je
xor
cmp
push
or
ficoml
and
jbe
add
pop
dec
xor
push
outsb
push
mov
imul
mov
pushf
jle
pop
pop
cmp
cmp
xchg
popa
outsb
mov
mov
es
test
pop
int
cltd
xchg
pop
jmp
cld
sbb
les
test
mov
add
add
xchg
pop
push
or
cmp
jbe
lret
mov
pushf
add
test
loopne
shll
sbb
insl
add
clc
adc
add
push
or
sbb
xchg
add
push
xor
andl
push
data16
and
insl
sbb
mov
mov
call
or
mov
sbb
mov
sbb
shr
add
add
rcrb
add
push
fadds
pop
sub
adcb
cli
inc
test
test
pop
in
mov
mov
gs
inc
hlt
rolb
cli
lods
clc
add
jmp
ret
int3
and
dec
orl
mov
inc
aad
ja
sub
aam
test
sbb
test
cmpsl
pop
test
clc
call
ss
popa
mov
ljmp
and
jecxz
fcomps
add
add
fs
scas
add
fbld
js
or
inc
pop
loope
push
idivl
cmp
mov
dec
sbb
and
mov
mov
dec
dec
mov
pop
mov
stc
data16
jnp
adc
push
ror
filds
push
lret
inc
int3
and
test
imul
cmpb
pop
push
aam
ds
xchg
notb
and
adc
mov
movsl
push
mov
mov
incl
pop
mov
int3
adc
pusha
mov
pop
xor
filds
call
adc
mov
adc
or
inc
clc
xor
loope
sarl
lcall
ret
les
add
mov
clc
lahf
pushf
mov
push
into
andl
xchg
add
outsb
jbe
mov
dec
das
pusha
int
dec
add
pusha
and
sti
pop
int3
inc
je
in
pminub
aas
mov
or
fsubl
incl
fadd
push
push
and
cs
and
std
jl
jp
inc
shll
ss
les
js
push
add
add
mov
sbb
push
sub
mov
mov
dec
sarb
arpl
add
mov
ja
addl
and
sub
in
and
mov
ret
mov
mov
or
jb
push
adc
and
add
or
dec
jne
cmpsb
push
inc
jmp
sti
mov
les
cmp
cld
push
jl
cmp
dec
pop
xchg
sbb
in
ret
mov
jne
mov
sbb
mov
jb
push
or
outsb
or
push
enter
push
dec
or
or
jmp
sbb
wrmsr
mov
pop
push
movsl
test
jle
shr
xor
sub
sub
mov
es
inc
xor
lret
adcb
xchg
mov
cld
or
ljmp
test
aam
sub
jp
sbb
fwait
pop
add
imul
stos
jbe
sub
ds
decb
outsb
je
bound
add
addl
xor
subl
in
pusha
add
lret
clc
mov
push
push
mov
orl
aas
add
xor
cvtps2pd
mov
insl
loope
sub
enter
adcb
pop
pop
mov
push
aam
jnp
dec
pop
cmpb
call
or
add
pop
cltd
dec
pop
push
pop
shlb
int3
scas
stos
and
inc
inc
imul
aam
mov
out
loopne
pop
cmp
cwtl
pop
dec
arpl
mov
and
add
je
push
add
scas
outsl
xchg
push
pop
adc
mov
cmp
stos
out
pusha
push
mov
bound
jae
lods
inc
and
das
test
jb
and
push
repz
inc
aas
or
and
enter
mov
mov
push
jp
add
mov
sbb
cld
out
and
imull
fsubrs
test
xchg
popa
test
push
das
inc
lds
pushf
mov
mov
adc
sub
push
sub
jb
push
inc
inc
sub
aaa
mulps
loope
test
mov
cmp
mov
adcl
push
mov
call
jg
or
or
adc
test
out
mov
cmp
mov
or
or
or
inc
or
push
js
jo
mov
sub
es
fdivr
xchg
cwtl
rol
clc
xchg
pop
loopne
mov
sbb
pusha
out
sarl
hlt
mov
jb
add
cmp
es
add
add
arpl
jmp
add
dec
rcrb
call
or
xor
mov
sahf
xor
bound
nop
push
loop
xor
cmp
pop
nopl
scas
lret
rorb
cmp
shr
xor
aas
add
bound
out
xchg
mov
lock
hlt
mov
inc
test
add
fwait
ja
sub
mov
dec
add
add
and
sti
push
sub
rolb
pop
fs
imul
mov
rolb
mov
orl
enter
sub
lds
push
add
add
ljmp
add
fdivs
mov
inc
movl
sahf
inc
cmp
mov
outsb
push
fmuls
test
aam
or
sbb
loop
imul
insb
filds
cmc
test
dec
cld
and
pop
pop
mov
add
add
sbb
push
push
mov
cmpsb
in
loop
and
mov
icebp
testb
adc
js
jnp
sti
cltd
add
cmpl
pop
dec
push
push
pop
out
jnp
decl
ljmp
pop
lret
adc
dec
loopne
xor
mov
inc
stos
test
push
incl
inc
inc
outsb
ss
xchg
mov
lcall
mov
in
in
jl
mov
outsb
cmp
jno
push
pop
adc
xor
or
mov
andb
insl
and
or
add
mov
fcmovnu
lret
inc
mov
or
jb
iret
test
outsl
int
xor
or
repnz
pop
xor
shrb
loopne
ds
in
xchg
jle
pop
add
pusha
push
data16
fstl
lea
mov
cmp
test
mov
push
les
and
adc
dec
mov
xlat
add
in
lds
je
jne
outsb
testl
or
or
test
pop
stc
stc
inc
arpl
je
xchg
call
xchg
nop
out
mov
inc
gs
xchg
mov
cmpl
or
decl
call
mov
pusha
xchg
movsl
data16
pop
outsb
jmp
dec
or
inc
stos
loop
or
xchg
sub
jg
xor
mov
xchg
js
je
add
dec
pop
subb
jmp
rorb
jmp
sub
sub
cwtl
mov
imul
dec
mov
sbb
lea
enter
or
pushf
js
sub
in
gs
les
add
push
nopl
add
decl
fmul
cmp
call
xor
xor
push
xchg
lret
pop
cmc
cmc
lret
mov
popf
pop
sarl
add
jg
mov
or
adc
adc
cmp
cld
js
adcb
push
adc
push
test
fsubr
fsubl
je
mov
dec
add
cld
adc
mov
jl
inc
mov
cmp
mov
call
push
mov
or
outsl
movsb
fld
aaa
mov
cs
mov
adc
jo
pop
insl
lods
arpl
enter
or
or
jmp
jp
inc
sarb
outsb
sahf
pop
addb
ljmp
mov
xor
sbb
cli
adc
sub
jge
std
outsb
mov
sbb
in
lcall
mov
outsb
icebp
cwtl
jle
shrl
pop
aad
jb
data16
cs
lcall
dec
rcrb
or
dec
lret
insl
hlt
dec
xor
mov
xchg
jp
les
shlb
adcb
pop
and
lods
or
cmp
test
std
pop
lea
ja
add
mov
xchg
cmp
inc
push
mov
adc
sbb
adc
addr16
jp
cld
add
sub
adc
mov
loopne
adc
cwtl
divb
fwait
clc
mov
in
push
ds
loopne
fistl
test
cld
hlt
fsubs
jmp
ss
les
and
scas
cmp
add
sbb
adc
insl
or
mov
mov
lcall
adc
ds
sbbb
inc
cmp
mov
push
sbb
leave
and
scas
stos
jo
or
sbb
push
pop
ret
inc
lods
out
lea
dec
sub
adc
sbb
aam
adc
rclb
in
loope
mov
jno
je
filds
dec
lea
hlt
adc
insl
sbb
loop
lea
push
out
mov
call
or
xchg
pop
ret
sbb
aam
inc
push
dec
addl
sbb
ret
mov
aam
jb
mov
scas
cld
out
or
test
enter
xor
pop
pcmpeqw
gs
mov
pusha
add
ret
nop
shll
mov
scas
lfs
addr16
or
pop
lods
shl
shlb
gs
pop
or
jl
sbbb
es
fdivrs
nop
notrack
or
push
and
scas
inc
mov
inc
push
add
out
dec
cmp
shrb
fiaddl
jbe
paddw
loop
call
pop
adc
js
and
cld
cmp
add
mov
pop
sbb
inc
outsl
insb
push
xchg
push
repz
repz
or
sahf
movsb
filds
dec
ret
mov
gs
inc
pop
and
sbb
xchg
and
lea
mov
add
xor
inc
push
fstpt
add
lock
rcl
jle
rep
sbb
lea
xor
pop
loopne
fildl
fistps
into
inc
inc
pusha
out
push
dec
inc
jb
cmpb
add
lock
mov
int
pop
ss
outsl
xchg
pop
je
mov
fnsetpm(287
aam
shlb
popf
or
mov
or
mov
inc
outsb
loope
xchg
popa
push
outsl
in
imul
lods
push
add
ss
test
push
rcll
xor
gs
xchg
sub
mov
mov
call
adc
shrb
sbb
push
xor
or
cmpsb
xor
insl
push
fidivs
inc
orl
fstpt
mov
sbb
mov
xchg
adc
jne
clc
inc
sbb
les
inc
jae
push
mov
and
jp
inc
fsubr
sti
dec
cmp
clc
or
add
and
sub
push
pop
or
ret
adc
add
mov
jo
jmp
jne
nop
add
ret
sbb
or
into
insb
js
dec
and
push
sub
mov
xchg
rcr
inc
xor
je
pop
gs
inc
cmp
cmp
push
and
mov
ret
push
add
sub
dec
pop
popa
adc
push
and
outsb
sub
pop
mov
test
push
sub
test
pop
incl
mov
pusha
incl
popa
jbe
fdivl
add
cmp
jae
adc
mov
data16
mov
pop
lcall
jl
add
add
daa
add
lcall
add
sub
jmp
lea
stc
lea
popa
mov
pop
enter
outsl
call
pop
add
fstps
shl
push
dec
xchg
notb
inc
mov
add
addb
jne
loopne
aaa
leave
jp
cli
jne
in
sbb
push
js
xchg
xor
shlb
jnp
mov
pop
or
push
movsl
push
in
sbb
outsl
push
cld
jns
xor
xchg
pop
add
and
aaa
push
mov
movsl
int3
roll
in
and
mov
and
push
or
test
mov
jb
adc
clc
in
dec
out
inc
outsl
mov
mov
mov
jo
or
mov
or
mov
mov
cwtl
js
push
mov
push
sbb
or
andb
sbb
insl
mov
or
mov
adc
loopne
and
dec
mov
inc
or
xchg
sub
mov
nop
inc
fmuls
xor
xor
sarb
xor
adc
loope
mov
push
cmp
pushw
xchg
jo
add
inc
scas
push
movsb
jle
ret
mov
inc
xor
in
cmp
jp
scas
jg
mov
push
ds
dec
xchg
cmovl
out
or
xor
hlt
jl
add
in
rcrb
push
inc
mov
and
dec
mov
xchg
push
outsb
and
icebp
jbe
shlb
xchg
mov
dec
jno
fmull
cli
jp
jno
cmp
test
scas
movsb
es
inc
cmp
and
xchg
cmpsb
push
ret
xchg
adc
lock
fs
jecxz
sub
insb
rcrb
lea
decl
and
mov
daa
pop
imul
repnz
add
adc
orb
sbb
enter
add
sub
inc
push
popa
out
mov
lods
ret
cmp
adc
cwtl
lea
cmp
jne
mov
pop
call
je
or
xchg
mov
cwtl
jb
jecxz
push
lret
and
inc
roll
inc
xorb
and
dec
sahf
xchg
and
outsb
or
sarl
cld
mov
nop
dec
jp
stc
cmpsl
movsl
ja
push
rorb
adcl
mov
lcall
insb
sub
and
cwtl
aam
je
std
add
sub
lock
add
sar
test
push
add
aas
loope
add
jne
hlt
negb
add
loopne
mov
paddd
jge
add
push
push
xchg
int3
mov
popa
test
cld
ljmp
in
mov
inc
mov
sub
fs
and
add
ret
sbb
mov
inc
loop
push
xor
jb
push
add
es
lock
mov
jp
rol
fdivrp
inc
popa
int
lods
dec
dec
clc
push
popa
cld
je
je
data16
cs
call
out
push
mov
sub
movsb
push
jbe
dec
je
cmp
movl
push
jp
into
mov
nop
push
sub
inc
pushf
mov
push
push
or
add
add
inc
push
mov
mov
callw
mov
mov
xchg
xor
add
in
xchg
call
push
inc
jle
loop
sub
clc
push
mov
leave
xchg
scas
sub
sbb
push
push
leave
xor
dec
mov
aam
mov
pop
mov
ret
filds
push
push
and
test
std
scas
push
mov
movsl
pushf
lea
out
nop
gs
and
add
inc
dec
or
rcll
lcall
lea
cmp
lock
aad
add
lcall
adc
jg
mov
dec
and
cli
inc
xor
mov
ret
jne
xchg
in
and
out
push
or
mov
jb
fisttpl
mov
sub
ficoms
or
addr16
mov
add
in
insb
pop
cs
je
or
sbb
mov
lea
cmp
inc
cmp
cmp
test
add
lds
jo
xchg
sub
ljmp
imull
push
pop
subb
scas
mov
cmp
lea
shll
cmp
push
lea
mov
mov
inc
ficomps
cmpsl
sub
cltd
mov
add
xchg
pop
hlt
in
icebp
test
xchg
mov
divl
shlb
stos
or
mov
jmp
and
push
arpl
add
push
std
lret
ret
dec
ljmp
push
out
jbe
fisubl
push
inc
or
xor
mov
insb
pusha
push
xlat
sti
imul
rorl
test
pop
inc
inc
push
sub
scas
aas
cli
add
in
push
negl
push
mov
je
mov
sub
mov
mov
mov
dec
push
jns
dec
or
lcall
pop
dec
push
inc
mov
push
push
cld
in
pop
into
rolb
and
push
xchg
loopne
mov
dec
fldenv
fsubr
mov
mov
leave
cmp
sub
mov
loopne
and
push
push
xchg
sub
clc
add
push
adc
adc
adc
lea
mov
mov
ljmp
and
adc
mov
ljmp
clc
cmc
inc
out
popa
pop
push
mov
lea
mov
popl
negl
js
mov
nop
sbbb
cmpb
jmp
add
xor
sbb
enter
js
dec
or
ret
or
punpckhdq
add
inc
lock
xor
ret
jnp
shlb
mov
sub
pop
les
jle
idivb
add
jg
ds
mov
nop
mov
ret
mov
lret
cmpsb
sub
inc
push
bound
popa
push
pop
and
inc
push
test
cmp
jb
adc
in
mov
mov
fcom
cmpsl
mov
xor
lods
or
sbb
mov
adc
xchg
call
push
adc
les
push
xor
push
shl
add
jno
and
adc
mov
nop
in
add
and
testb
cmpsb
orl
push
xor
and
punpckhdq
lret
push
adc
cmp
push
mov
inc
test
icebp
push
or
js
and
xor
xchg
pop
fsubrl
lods
push
pop
adc
push
sahf
aad
orl
std
jae
data16
mov
add
mov
mov
insb
xchg
jo
icebp
adc
adc
cmp
mov
lret
inc
xchg
lret
mov
pusha
cs
test
ljmp
mov
movsb
pop
cld
adc
or
inc
jp
call
dec
outsl
pop
xor
stos
jno
js
mov
subb
fdivr
aaa
add
movsl
sahf
mov
outsb
ljmp
add
add
push
adcl
jg
andb
lods
inc
test
insb
pop
mov
or
adc
push
or
orb
fcmovbe
imulb
popa
adc
inc
lea
pop
roll
out
lock
sub
repnz
jmp
mov
or
leave
int3
xor
push
call
out
xchg
mov
shlb
ds
loopne
clc
mov
add
push
push
cmp
adc
mov
lock
ljmp
inc
cmp
adc
bound
lods
jp
subl
inc
cmp
push
xchg
push
sub
xchg
dec
and
fidivrl
inc
sub
dec
arpl
add
loopne
cmp
jo
mov
test
jne
inc
testl
xlat
leave
rorb
dec
data16
xor
dec
jl
mov
pushf
add
adc
xchg
sub
lea
int3
adc
in
push
ret
dec
movsb
icebp
je
cmc
mov
mov
lock
xchg
loope
sub
cld
adc
dec
xor
adc
dec
add
bound
adc
push
imul
lcall
dec
or
es
daa
sbb
push
cld
jne
nop
cld
cmp
xchg
les
jo
lret
push
fcmovu
clc
or
add
in
xlat
push
mov
mov
inc
inc
inc
divl
add
xchg
push
popa
mov
and
mov
pop
sub
cld
or
pop
insb
lods
cld
sbb
in
and
xor
inc
adc
cmpsl
int
dec
xor
add
and
dec
lods
mov
js
movsl
jbe
pusha
sbb
imul
incb
shll
movb
cmp
lret
cmp
mov
mov
fs
sahf
mov
in
pop
add
inc
adc
adc
fwait
ret
outsb
or
ret
outsl
mov
dec
mov
mov
pushf
cld
xor
add
hlt
xchg
sahf
rorb
pop
gs
lock
pop
das
sub
fdiv
add
mov
ja
xrelease
xor
mov
adc
xchg
push
popa
push
mov
or
hlt
xchg
dec
aaa
test
loope
jbe
cld
popf
xchg
fsubs
addl
andl
and
push
lock
and
gs
orl
push
mov
in
fdivrs
sahf
inc
or
pop
loop
sbb
es
popf
and
je
lock
sub
dec
push
dec
lods
push
gs
lea
sbb
push
mov
lock
xor
mov
or
push
lock
loopne
incl
pushf
ds
cmpsb
pusha
repnz
lds
push
add
and
push
push
ds
push
xor
loopne
xor
ror
je
dec
cld
mov
out
lds
mov
pop
gs
inc
inc
and
mov
mov
shlb
ds
dec
add
cld
sbb
or
cmp
clc
test
xchg
mov
fldlg2
rcrb
rclb
repnz
or
imul
mov
hlt
or
loopne
cmp
popa
xor
decb
adc
out
jmp
and
es
xchg
pop
icebp
or
mov
test
inc
lcall
jg
mov
aam
clc
add
and
stos
popa
shrb
dec
addr16
mov
xchg
outsl
adc
decb
lods
push
lcall
lea
popf
dec
nop
les
push
mov
daa
pop
cmc
push
call
daa
jne
inc
and
nop
push
mov
mov
add
add
jle
pop
jge
push
divb
push
and
aad
mov
aam
push
stos
cmp
icebp
stos
mov
cmp
aaa
xchg
jnp
xchg
jge
push
idivb
pop
stos
push
or
in
mov
sbb
scas
es
jo
movsb
or
pop
jg
mov
and
xchg
fiadds
nop
les
pop
or
outsb
push
cmp
clc
subb
cltd
jne
dec
lret
movsl
lock
in
popa
jmp
mov
xchg
jne
pop
inc
inc
push
inc
cmovs
cwtl
out
push
and
sub
pusha
mov
cwtl
or
andb
call
mov
clc
ljmp
mov
mov
add
hlt
test
cmpsl
popa
mov
or
add
leave
or
mov
mov
jbe
jne
insl
jnp
enter
sbb
jb
out
dec
mov
cmp
fs
and
or
jns,pt
add
lahf
xchg
rclb
mov
or
mov
xor
rcll
cli
cmpsb
add
lea
push
call
xor
test
or
pop
mov
fadds
pop
outsb
lods
test
loopne
fmul
push
fimull
cmp
cs
jge
iret
inc
or
data16
test
push
std
inc
shlb
jb
lea
mov
xor
call
decl
mov
rol
sbb
mov
out
xor
test
pop
scas
shrb
xchg
xchg
push
out
enter
dec
sub
out
cmpxchg
xchg
lock
incb
ficoms
mov
nop
call
or
pop
jne
shlb
push
shll
stc
outsl
test
cmp
popa
sub
decl
or
jb
ret
jae
fistps
shll
adc
aaa
loop
adc
mov
outsb
inc
hlt
sub
imul
inc
int3
shl
add
call
pop
sbb
repnz
movsb
dec
and
nop
inc
xor
sub
nop
fdivrs
adc
decb
cmp
xor
add
adc
rcl
movsl
in
mov
pop
ljmp
push
push
xchg
lea
xorb
out
je
mov
test
sub
ljmp
push
jae
je
adc
push
or
xchg
adc
and
call
add
push
outsl
mov
pop
mov
xchg
adc
inc
mov
out
sti
inc
clc
shrl
mov
jp
shlb
pusha
jbe
push
rcrb
mov
pop
je
mov
test
daa
mov
aam
loopne
ret
push
lcall
repnz
add
cli
loopne
loopne
fldt
mov
sub
pushl
xchg
insl
cli
mov
lea
xor
jne
mov
sbb
add
pop
xrelease
movsb
jp
xor
add
call
inc
jecxz
orb
jb
test
cmp
inc
push
add
mov
push
js
call
stos
sub
cmp
sbb
fisubrs
mov
push
dec
mov
inc
data16
mov
je
loopne
xchg
lcall
dec
mov
aaa
je
xchg
and
jp
inc
mov
push
jno
jecxz
dec
rolb
in
mov
call
pop
inc
sbb
rorb
popa
inc
push
push
rcll
pushf
jno
aad
xchg
adc
jl
and
xor
mov
and
lock
push
enter
pusha
pop
push
cmp
ret
dec
jmp
fs
dec
xor
add
mov
add
stc
inc
push
loopne
or
adc
or
xlat
cmp
add
adc
jb
call
mov
je
sbb
call
lods
push
add
sbb
mov
sbb
cld
or
loopne
adc
pop
je
jo
in
mov
cmpb
sbb
js
inc
mov
or
push
jnp
cld
adc
add
aam
lahf
add
fstpl
loope
js
inc
lret
lcall
jg
lea
dec
inc
adc
xchg
shlb
mov
pop
mov
rol
cld
pop
add
pop
xchg
test
aad
xchg
sub
pop
push
stc
cli
dec
or
ret
inc
int3
or
xor
dec
enter
addb
jbe
lea
out
xor
cld
mov
ret
cmp
leave
js
push
inc
mov
add
push
push
adc
xchg
test
les
jl
sbb
addb
mov
outsb
gs
jle
mov
fdiv
aad
and
mov
lock
pusha
rcll
cmp
shrb
fs
mov
in
mov
lock
mov
les
sbb
fs
fdivl
icebp
xchg
pushl
add
aas
or
push
nop
cli
push
mov
inc
or
ror
jl
imul
pop
pusha
push
jg
push
mov
jl
xor
mov
inc
xor
sets
aaa
adc
xchg
add
mov
xlat
or
lcall
ss
pop
adc
aas
scas
pop
lock
adc
xor
xor
call
mov
stc
into
dec
xor
repnz
mov
or
call
fstl
imul
cs
mov
push
test
or
jge
pop
stos
andb
cli
shl
cmp
adc
rolb
sub
cwtl
in
inc
icebp
push
loop
mulps
test
lea
or
adc
pusha
subl
orl
mov
lock
mov
push
cli
cmpsb
mov
jne
push
jg
insb
cmp
in
mov
mov
sub
mov
push
or
dec
pop
push
inc
and
push
sub
xchg
stc
jb
adc
lret
push
repz
loop
cld
test
lcall
add
lret
pop
ljmp
dec
jecxz
or
jge
jo
bound
fwait
hlt
lret
mov
mov
insb
dec
add
xchg
dec
xor
into
add
les
imul
loop
call
dec
sbb
sbb
mov
and
mov
hlt
das
sub
add
loope
push
xchg
mov
dec
fs
mov
lea
test
rolb
push
jl
inc
loop
sub
ret
pop
inc
and
inc
sbb
jmp
lret
and
bsf
cmp
decb
out
sbb
cli
aas
mov
push
mov
test
xchg
loopne
test
pop
shlb
jl
mov
dec
mov
jns
sar
and
sbb
mov
pop
mov
hlt
lods
mov
add
add
repnz
out
dec
jg
or
fcmove
pop
add
push
push
movl
sbb
push
push
adc
pusha
icebp
or
mov
pop
inc
fnstenv
xor
js
bsf
pop
in
inc
dec
sub
jg
aad
es
push
sbb
add
jl
rcll
push
cmpsb
dec
inc
cmpl
cmpsb
sbb
cwtl
xchg
or
add
jnp
xor
push
pop
jne
xor
orb
jb
addl
and
push
add
mov
dec
xchg
or
dec
ret
pop
mov
mov
push
out
cmpsb
push
std
jns
xor
arpl
incb
andb
out
push
jae
pop
mov
je
test
addl
dec
sub
cmp
add
je
hlt
mov
and
push
push
aam
lods
jl
add
mov
inc
data16
pop
scas
cld
inc
xlat
es
xor
ds
dec
out
inc
jg
lods
and
inc
mov
push
cs
mov
inc
pop
xchg
inc
pop
test
sub
loopne
cmpsb
pop
cmc
fwait
mov
je
icebp
push
push
out
pop
js
push
xor
and
fnstsw
sbb
loopne
arpl
adc
sbb
lcall
pusha
add
jno
cmc
lods
or
flds
sub
xor
and
cld
roll
in
inc
inc
js
xor
ss
inc
xorl
lea
xor
ret
mul
iret
in
push
dec
mov
cli
fs
pushl
sbb
adcb
cld
add
dec
pop
int3
add
jl
push
fidivl
adc
aam
add
loop
orl
shll
push
scas
and
pop
fisubs
pop
pushf
andb
call
mov
xor
cmp
push
ljmp
icebp
and
inc
jmp
repnz
pop
pushf
and
push
leave
outsl
mov
rclb
jns
lea
pop
adc
sbb
add
and
push
cmc
mov
jmp
les
mov
or
pop
fs
mov
test
loop
shlb
dec
dec
sarb
mov
cld
stc
push
pop
dec
pop
outsl
test
pusha
jecxz
and
jno
mov
test
loop
gs
push
ljmp
xchg
xor
and
popa
and
inc
or
mov
push
inc
and
jl
mov
fstpl
dec
pop
in
and
inc
add
sahf
and
and
ret
inc
jle
or
adc
iret
add
cmpsb
jbe
mov
shll
push
push
adc
push
xlat
sub
adc
add
adc
xchg
and
inc
movsb
lock
add
pop
push
fmuls
cmpl
sub
push
icebp
lods
gs
adc
hlt
mov
in
call
inc
dec
in
inc
gs
test
push
add
add
jp
dec
inc
add
mov
or
and
fs
je
cmp
xchg
inc
lea
insb
std
sub
add
bound
jmp
mov
outsb
out
push
dec
or
pop
fadds
pop
inc
push
adcb
or
adc
mov
test
js
inc
hlt
fdivrp
push
xchg
pop
lcall
mov
inc
jo
mov
ss
rolb
add
jo
push
fcompl
out
add
pop
cmc
xchg
adc
pop
insl
push
push
lea
sbb
leave
int3
add
hlt
rcll
sbb
cmpsb
incl
cmp
sti
lods
sbb
dec
pop
je
fdivl
rcl
push
pop
rcll
ljmp
rclb
call
aam
std
pusha
jae
clc
jg
aad
inc
and
adc
inc
mov
lret
fsubrl
inc
les
jo
mul
orl
jl
sub
je
push
add
test
cmc
data16
cli
xor
adc
scas
dec
jl
cltd
add
push
push
addb
push
out
pop
std
scas
adc
stos
cld
in
fdiv
push
push
rol
add
and
dec
mov
std
cmpsl
mov
insb
fdivs
jl
lret
and
inc
loopne
sub
mov
lcall
jne
inc
loopne
mov
mov
xor
je
mov
adc
dec
in
add
aaa
lods
push
mov
int
xchg
decl
ret
cmc
or
xor
in
dec
push
shrl
push
fwait
inc
adc
outsb
adc
test
jp
loope
push
out
sub
push
dec
call
sub
cs
mov
push
pushw
add
aam
inc
arpl
lret
dec
jecxz
rclb
xchg
jge
xor
and
add
ljmp
rolb
adc
roll
stos
popa
cmp
js
push
es
outsb
push
push
sbb
call
stos
out
push
fdivrp
into
and
gs
movl
movsb
setp
sar
or
scas
adc
xchg
in
and
adc
lahf
push
xchg
leave
mov
push
inc
clc
push
mov
inc
jl
or
mov
rclb
sbb
lea
push
inc
or
xchg
test
sub
cmp
mov
lcall
mov
add
sbb
ja
out
int
pusha
lods
stc
icebp
loope
cmpsl
dec
fwait
es
test
xchg
mov
push
and
pusha
ret
cmp
test
add
aad
ret
mov
leave
mov
cmp
pop
xchg
lods
ss
push
mov
pop
outsb
les
sub
mul
push
mov
clc
add
movsl
test
dec
popa
push
sbb
icebp
add
xchg
imul
dec
test
adc
scas
jbe
xorl
lcall
lock
mov
cli
popf
push
xchg
jge
clc
sub
jmp
aam
ja
push
fadd
out
xor
inc
test
sbb
mov
inc
mov
or
test
jmp
push
adc
xchg
sbb
or
and
in
dec
ret
cld
add
sub
cmc
mov
cmp
cmp
dec
mov
adc
sbb
leave
sub
xchg
push
mov
add
dec
cld
insb
aaa
jl
aam
call
pop
outsl
add
xor
add
pop
lock
ss
xchg
add
lgs
inc
inc
mov
mov
inc
pop
pusha
pop
dec
xor
ret
es
sti
cs
outsb
jl
jne
jmp
adc
sub
push
dec
inc
xchg
shrl
xor
add
inc
dec
xorb
test
push
adcl
mov
or
adc
jmp
in
int3
ret
sub
jmp
pop
adcb
sub
add
or
mov
cld
mov
push
loopne
into
movsb
test
aam
adc
inc
or
ret
adc
add
sarl
and
out
xor
inc
insl
adc
imul
inc
jge
or
popa
add
dec
es
inc
lods
stos
adc
jmp
mov
loop
xor
aaa
loope
cmp
xor
adc
and
mov
push
push
adc
pop
xchg
je
mov
add
out
insb
mov
int3
dec
insb
add
add
hlt
sbb
jo
push
das
xor
jno
into
lea
add
jge
or
mov
scas
xor
call
clc
shlb
inc
inc
hlt
bound
jle
rcl
adc
imulb
jl
test
add
je
cmp
xor
add
dec
addb
jmp
jle
mov
hlt
xor
xchg
xchg
adc
test
jo
xchg
pop
jbe
pusha
out
stos
cld
std
xchg
inc
stos
jmp
inc
or
mov
push
sub
adcb
fisubl
pop
jge
pop
test
inc
xchg
push
clc
data16
jb
lcall
cmc
test
and
or
bound
insb
clc
dec
in
mov
dec
es
aaa
jecxz
push
add
pop
popl
arpl
cwtl
fs
jle
mov
clc
popa
rcll
push
movsb
sub
insl
dec
insb
dec
mov
pushl
inc
mov
mov
jg
dec
mov
dec
stos
mov
push
mov
pop
insb
outsl
xchg
sbb
cmp
dec
mov
sti
push
mov
xchg
xchg
jmp
jle
test
repnz
push
ljmp
mov
and
incb
mov
cmp
pop
xor
aam
add
repz
mov
std
aaa
push
call
loopne
sbb
loope
shlb
cld
call
inc
mov
mov
jbe
adc
pop
dec
adc
or
jp
cmp
enter
rorb
adc
es
adc
add
in
test
inc
fisubs
mov
bound
and
and
es
add
shrl
xor
repnz
mov
ret
aad
cld
dec
lea
popf
adcb
ds
dec
in
pushf
lea
mov
subl
mov
pop
xchg
push
divb
mov
mov
inc
mov
out
push
inc
push
imul
rorl
sub
and
pop
cs
push
out
pop
pop
mov
push
mov
inc
pusha
jmp
or
sub
pop
lods
loopne
inc
lahf
mov
rcll
lods
sub
rcl
call
ror
inc
mov
loop
or
mov
int3
xor
add
adc
cli
mov
gs
hlt
loop
push
in
lods
lret
or
and
mov
ret
inc
inc
imul
test
push
test
push
cmp
cmp
imul
add
mov
js
gs
cld
inc
in
mov
push
push
adc
clc
hlt
lret
mov
sub
push
jl
cmc
xchg
aaa
cltd
add
aas
sub
add
aam
mov
push
lea
adc
hlt
test
mov
ret
pop
add
mov
out
mov
push
lret
and
ds
das
loopne
cmp
mov
mov
or
and
rolb
sbb
mov
ljmp
jge
pop
mov
push
adc
lea
gs
test
fcom
push
pushf
fcmovne
aad
int3
sbb
or
and
lret
jo
arpl
scas
callw
xchg
insl
imul
out
sub
std
and
movsl
add
or
sarb
mov
adc
jne
fwait
popf
clc
idiv
jge
adc
mov
dec
xor
ret
lea
push
mov
push
aaa
mov
jo
les
xor
push
jmp
pop
dec
icebp
adc
xchg
hlt
leave
pop
mov
into
ret
mov
or
in
pop
bound
mov
lock
pop
dec
add
or
add
jle
cmp
pusha
inc
pop
fimuls
jge
mov
outsl
push
cld
jnp
inc
stc
movsl
mov
clc
adc
rolb
xor
cmpsb
inc
add
and
push
or
adc
push
pushl
arpl
inc
fidivrs
mov
or
cmp
shl
mov
push
sar
clc
out
sub
pop
xchg
test
adc
enter
decl
test
xchg
add
jnp
scas
sbb
inc
pop
xchg
pop
ljmp
loop
add
sbb
bound
cmp
outsb
inc
add
mov
ja
cvtps2pd
dec
pusha
mov
stos
mov
mov
and
add
dec
in
inc
scas
enter
sbb
enter
inc
mov
jbe
loopne
outsb
data16
in
rclb
and
inc
xchg
dec
call
jne
lret
and
call
xor
dec
xchg
js
xor
jb
enter
lds
sbb
add
in
xor
mov
push
dec
fdivrs
daa
bound
mov
or
int
cli
cmp
xor
adc
add
push
fisubl
push
xchg
adc
cli
jmp
xor
or
and
xchg
mov
mov
gs
loopne
xor
pushf
test
add
fisttps
mov
sub
rol
dec
pop
fs
sbb
loopne
add
std
mov
addr16
dec
sbb
inc
es
lcall
ljmp
adc
sbb
sbb
insb
int
cmpsl
adc
bound
mov
jp
xor
push
sbb
and
ja
sub
rcrb
push
rcrb
push
mov
inc
xor
pop
stos
ret
adc
jg
shrl
add
xchg
xor
loope
fs
fldpi
nop
and
fisubs
jbe
inc
mov
rolb
mov
fimuls
sbb
push
out
sub
rol
arpl
jbe
sahf
xchg
addb
adc
cmpsb
aas
rcll
add
sub
pop
test
es
js
mov
clc
and
jmp
psrlw
andb
push
les
push
lret
push
rclb
mov
dec
jmp
movsl
sub
lret
mov
and
gs
in
pop
daa
mov
jne
push
adc
mov
xchg
inc
outsb
mov
mov
inc
xchg
pop
es
jl
adc
movsb
pop
in
ret
mov
xor
mov
add
movsb
mov
mov
or
pop
insl
ljmp
ror
adc
subb
dec
sbb
add
mov
ss
ss
or
add
sbb
ja
adc
inc
in
xchg
mov
pop
lret
int3
mov
loope
mov
mov
cld
mov
add
ja
es
mov
mov
insb
cmpsb
decb
divb
jp
dec
xchg
loope
outsl
jge
pop
lock
adc
js
stc
je
test
dec
or
inc
or
adc
rorb
pop
lret
lcall
inc
inc
xor
loopne
gs
cltd
add
lret
inc
je
add
adc
add
adc
test
inc
jge
sub
lret
js
ret
iret
test
shlb
in
or
sbb
loope
mov
and
call
fsubs
sbb
outsb
xchg
sbb
scas
xorl
pop
or
pop
cwtl
pusha
mov
mov
jbe
rorb
push
push
addr16
into
ret
adcl
sub
decb
mov
jecxz
sbb
insl
cld
mov
and
xor
daa
divb
iret
add
jne
rclb
sbbb
mov
mov
int3
pop
cli
push
rorb
and
aas
xchg
inc
ljmp
adc
lods
xchg
rcl
push
push
push
pop
cld
in
or
or
xchg
push
mov
popl
clc
inc
jl
test
push
dec
cld
test
xor
aaa
pop
push
mov
add
shrl
dec
and
enter
add
cli
mov
mov
aam
lock
jbe
inc
mov
ljmp
cmp
mov
ss
fcompl
jo
xorl
imul
and
aam
inc
inc
pop
lret
mov
sbb
hlt
ja
xor
push
lea
pushf
pop
rorb
data16
cmp
push
insl
lea
cli
gs
loope
sbb
cmpsb
sub
stos
addl
mov
pop
outsl
push
jo
xchg
ds
cld
jo
les
xchg
inc
subb
dec
mov
shl
dec
cmp
push
fucomi
jmp
cld
add
jnp
nop
push
in
les
mov
in
or
stc
mov
or
jmp
movb
ret
add
lods
fimull
dec
push
cmp
jbe
js
js
dec
inc
push
add
pop
lods
ret
mov
push
inc
xchg
nop
bnd
fiaddl
sahf
and
mov
mov
adc
mov
fisttpl
cmp
xor
int
adc
xorl
cmp
imul
daa
idivb
xorb
in
mov
push
pop
add
push
mov
push
and
cld
hlt
or
mov
js
push
test
rol
push
sti
xchg
les
add
mov
data16
adc
xchg
loop
cmp
dec
inc
in
mov
adc
leave
xchg
hlt
negb
push
xchg
push
mov
orb
pop
push
test
dec
push
inc
dec
dec
push
jne
pop
xchg
mov
push
inc
lret
add
enter
test
fs
inc
jg
icebp
mov
fdivs
mov
aas
xor
out
mov
sbb
cmpsb
cmp
cmp
icebp
dec
pop
mov
inc
sub
es
add
cli
mov
and
jne
in
add
xlat
movl
aam
inc
jl
xchg
push
pushf
mov
in
xchg
mov
ret
add
out
mov
shrl
xor
jl
inc
adc
fcoml
adc
add
loope
loop
or
outsb
js
lcall
pop
mov
out
clc
scas
and
push
js
bswap
fisubs
push
push
aam
jg
mov
mov
adc
fisubl
sbb
orl
add
add
stos
mov
jle
push
inc
push
test
cmp
popf
fisubs
insb
in
hlt
movsl
in
les
lea
ljmp
and
jns
xchg
loopne
adc
pop
mov
addr16
cmp
sahf
and
into
and
into
adc
fstl
lret
jo
loop
sub
jae
push
mov
jbe
pop
sub
cmp
in
lock
mov
or
add
dec
sbb
inc
adc
or
leave
xchg
jae
mov
push
and
adc
cmp
pushf
ljmp
and
or
or
decb
aaa
xchg
mov
add
incb
or
and
std
mov
adc
ljmp
jl
cwtl
test
or
mov
inc
lock
xor
mov
sarl
xchg
int3
sarl
dec
out
iret
mov
enter
mov
outsb
inc
sbb
fsubrl
inc
adc
and
mov
dec
loopne
dec
mov
gs
cld
repz
movl
mov
ficoml
mov
dec
nop
lods
pop
ljmp
xlat
pop
mov
ljmp
adc
hlt
and
incb
test
outsb
add
push
test
add
incl
fs
mulb
fs
push
mov
xchg
add
sbb
adc
push
jmp
stos
orl
cmp
daa
incl
cli
xchg
sbb
jo
mov
jmp
call
mov
ret
push
sahf
notb
hlt
push
xor
pushl
inc
sbb
sub
pusha
outsb
mov
inc
in
adc
mov
push
out
jno
or
inc
lods
xor
add
pop
in
pop
inc
add
test
and
sbb
mov
or
cmp
adc
lock
shrl
mov
xchg
add
sbb
push
push
and
and
add
cmpsb
das
lods
sbb
hlt
dec
rclb
push
dec
ret
push
test
loop
push
xorl
jbe
mov
cwtl
sub
outsl
cli
add
mov
js
out
push
add
jne
lock
in
test
xchg
mov
and
loopne
or
xor
test
popa
ljmp
loope
dec
testl
sub
pop
fcoml
jle
add
mov
mov
or
loope
inc
add
lock
mov
jno
add
es
push
cmp
add
xlat
les
movsl
and
xchg
aam
jnp
ss
add
gs
push
xor
ds
sub
arpl
mov
aaa
add
mov
add
mov
sahf
inc
cs
pop
mov
out
js
fsubrl
xor
dec
es
pop
add
adc
jb
je
adc
pop
push
fdivr
ljmp
inc
mov
adc
icebp
in
push
xchg
add
pop
std
add
aaa
cld
call
adc
dec
call
add
scas
jb
sub
jno
jl
pop
cmp
add
enter
or
rclb
lret
std
pop
xor
in
aas
call
and
push
repnz
test
shll
loopne
cmp
cmp
jge
dec
mov
push
les
jecxz
xchg
movsb
adcl
and
jne
outsl
add
fs
cmc
pop
loopne
jl
pop
mov
js
jne
imul
int3
xorl
ljmp
push
xor
jb
and
js
loop
outsb
dec
mov
dec
pop
pop
sub
jp
pop
xchg
outsl
mov
xor
aaa
les
call
out
sbb
mov
and
or
jge
stos
mov
add
aaa
mov
sbb
xor
push
mov
sbb
lret
clc
mov
inc
and
sarb
aaa
stos
cld
ret
fmuls
dec
or
movsl
pop
je
or
lods
push
je
call
faddl
insl
lds
les
daa
dec
call
jmp
pusha
loopne
and
push
and
imulb
ret
sub
stos
aam
mov
ljmp
xor
dec
sub
cmp
add
jmp
cltd
fmulp
xor
jle
outsb
xchg
inc
xchg
mov
push
add
mov
lods
mov
sbb
push
pop
mov
inc
call
lods
sub
jbe
xadd
push
aaa
pop
cli
xchg
jne
mov
inc
gs
add
in
mov
xchg
sub
dec
fst
stos
lods
leave
movsb
inc
jg
dec
sbb
test
repnz
xor
sbb
jne
or
xor
or
pop
cld
pop
xor
adcb
popa
pop
push
add
dec
mov
sbb
jecxz
aam
call
inc
add
add
ficoms
or
les
push
call
xchg
mov
orb
pop
std
daa
jle
adc
stos
mov
ljmp
push
or
pop
pop
rorl
sbb
cwtl
adc
cmc
andl
mov
push
xor
sbbb
test
loop
test
cs
xor
nop
mov
das
push
outsb
mov
adc
xchg
ss
sub
inc
sub
mov
sbb
jmp
pop
lret
pusha
loop,pt
cmp
in
ja
push
xchg
xchg
int3
mov
movsb
add
push
imul
enter
in
jmp
movsl
ja
and
mov
test
pusha
ret
sahf
addr16
inc
ret
and
jmp
adc
xor
push
jle
mov
int3
xorb
stc
or
xchg
and
mov
inc
add
inc
je
icebp
or
mov
mov
cltd
rcrb
adc
leave
mov
repnz
outsl
dec
dec
and
pushf
test
cmpsl
lcall
imul
cli
cmp
lea
jb,pn
cmp
jp
adc
push
inc
in
jne
icebp
loop
sbb
mov
aaa
inc
mov
nop
or
push
inc
xor
aaa
xchg
cs
xor
jne
jp
pop
mov
ret
adc
loope
jge
lcall
mov
test
add
add
xchg
lds
push
push
mov
fdivl
arpl
outsl
ss
adc
pop
cmp
js
test
adc
sbb
xchg
leave
shrb
in
out
loopne
mov
out
inc
cli
pop
pop
push
adc
int3
and
add
dec
xchg
mov
jo
fsub
fs
decl
jg
pushl
fldl
sbb
mov
mov
add
push
dec
lods
inc
pop
mov
pop
out
mov
push
and
aad
add
lock
movsb
bnd
mov
cmpl
ja
sarb
cli
aam
mov
fistl
enter
ljmp
test
out
jns
scas
cmp
xor
test
pop
shrl
rolb
lods
daa
pop
push
fbld
xor
out
es
pop
nop
push
xor
dec
pop
cmp
les
shll
into
jp
mov
inc
dec
mov
popa
push
dec
popa
les
push
imulb
xchg
sub
mov
dec
call
and
jl
sbb
pop
adc
add
xor
dec
lret
and
decl
pop
cmc
adc
or
fadds
daa
jecxz
pop
mov
lret
pop
sub
lcall
sub
call
push
inc
ljmp
jo
cli
imul
push
mov
inc
je
sbb
ret
inc
dec
jo
sub
push
mov
in
add
pop
xchg
jbe
adc
loop
into
add
call
jg
sub
iret
in
adc
fidivrl
push
call
js
mov
cmp
adc
mov
xchg
pop
sti
mov
mov
jp
icebp
inc
pop
sarb
dec
add
call
popa
je
add
or
cmp
arpl
fisttpl
ret
jl
jne
pop
adc
subl
xchg
sub
sub
jb
inc
clc
sbb
sub
adc
jbe
ret
mov
outsb
mov
out
test
mov
repz
push
dec
imul
sbb
sub
pop
dec
inc
xchg
leave
mov
xlat
stos
add
addl
mov
inc
mov
mov
test
pop
push
sbb
daa
jne
push
pop
je
xchg
or
pop
les
lock
in
cwtl
hlt
rcr
call
cmp
sub
jecxz
lret
jne
mov
xorl
cmp
mov
jle
push
sub
dec
int3
fcoml
fcoms
mov
ret
inc
shr
pushf
xorps
dec
adc
or
pop
subb
pop
cmpl
push
add
push
cmovge
fsubrl
stos
or
pushf
cmpsb
repz
lds
jl
insl
xor
mov
adc
cltd
sbb
and
dec
jge
inc
imul
call
aaa
add
lahf
cwtl
lock
jge
out
fs
mov
in
decl
pop
or
mov
ds
incl
sub
enter
fwait
jne
clc
test
cmp
pop
test
push
int3
add
adc
data16
repnz
lds
push
cld
push
stos
add
mov
mov
std
rorb
xor
mov
mov
cmp
mov
xchg
inc
pop
fs
into
shrl
rolb
dec
mov
xchg
adc
gs
test
out
xor
push
movsb
sti
mov
les
xchg
mov
inc
into
mov
lea
adc
mov
das
jecxz
dec
clc
mov
cwtl
mov
sub
push
add
push
sub
push
xchg
inc
mov
mov
xchg
testb
ss
test
cmpsb
xor
in
adc
call
fcoml
imul
dec
mov
add
sbbl
orl
subl
adc
out
dec
hlt
psrad
dec
ret
mov
or
mov
jp
mov
je
in
test
add
mov
clc
pushl
cltd
push
mov
scas
ljmp
clc
add
add
push
sbb
mov
add
sub
loop
xor
or
les
mov
and
sub
inc
sti
pop
or
xor
push
jne
sub
aam
push
add
adc
pop
xor
aad
dec
std
add
sbb
push
dec
loop
cmpsb
cmc
movsb
in
sub
test
inc
rcrb
or
outsb
mov
jbe
loopne
add
adc
cmp
or
pop
in
int3
push
cmp
stos
pop
and
js
inc
add
mov
lock
hlt
data16
loopne
fldcw
lock
in
pop
xchg
out
jmp
jge
push
lret
rcrl
and
test
lea
adc
mov
xchg
pop
fdivrs
clc
ja
cli
sbb
ret
std
stc
or
or
pop
dec
mov
stos
cmp
loopne
aad
cld
dec
call
test
xor
sub
jp
int3
cld
lret
enter
aaa
jle
repz
lods
lret
or
idiv
cmpsl
xor
pop
dec
shlb
adc
ret
popf
add
xor
push
fcoms
lcall
xchg
xor
push
cmp
cmp
les
stos
jo
inc
push
dec
jmp
int3
mov
xchg
or
xchg
sbb
lods
xorb
int3
pushf
mov
in
add
or
mov
adc
mov
fsubs
cwtl
cmp
inc
or
aad
lods
stos
dec
or
hlt
movsl
clc
loop
ds
rep
or
mov
loopne
call
push
sahf
movsl
je
outsl
aam
popa
sub
mov
adc
inc
mov
movsb
inc
pop
gs
and
sbb
inc
hlt
jae
imul
push
int3
movb
mov
and
adc
jb
adc
in
adc
dec
sub
test
add
push
test
movsl
fisubrl
push
and
cmp
inc
in
jae
aad
mov
lcall
je
test
lea
mov
inc
in
loop
inc
mov
out
xor
pop
xchg
insl
pushf
loopne
loope
rcrl
jecxz
fbstp
clc
pop
and
or
add
outsl
mov
dec
mov
xor
pop
or
pusha
cmpsb
loopne
xorb
mov
cmp
lret
sub
les
xchg
inc
cmp
adc
inc
cmp
nop
adc
addb
lret
jno
repz
data16
mov
shr
xchg
pop
jb
inc
mov
add
test
push
dec
pop
lock
in
jns
add
fistl
or
sarb
dec
mov
jp
ret
add
ljmp
test
je
popl
add
sbb
call
pop
movups
dec
mov
loopne
push
or
or
jb
and
push
scas
loope
loopne
push
es
add
jge
ja
ret
xchg
mov
xchg
orb
cmp
xor
mov
pop
js
imul
add
pop
mov
je
out
lock
inc
mov
xor
pop
jg
mov
int3
jbe
insb
clc
or
cs
jne
sbb
hlt
add
cmp
aam
lods
lods
std
mov
insl
mov
ss
dec
movsb
jecxz
adc
daa
outsl
pop
mov
mov
push
fdivr
push
push
or
movsb
push
mov
adc
pop
jbe
inc
out
cmp
push
cmp
pop
cmp
ret
sahf
insl
shrl
inc
popf
xchg
mov
int3
cmp
outsl
push
aas
or
lret
or
imul
out
insl
inc
pusha
push
nop
jp
loopne
test
ficomps
js
xchg
fcomps
and
jmp
movsl
push
dec
mov
mov
adc
xchg
std
push
dec
cmc
inc
mov
es
pop
mov
punpcklbw
sbb
push
bound
xor
adc
mov
xchg
int3
lea
and
adc
lods
insb
mov
push
and
in
inc
lret
jo
aam
cmp
mov
add
ficoms
xor
push
jle
sarb
dec
jl
inc
mov
daa
stc
leave
push
clc
stos
cmc
add
mov
mov
mov
js
inc
iret
jp
pop
frstor
mov
adc
cmp
inc
fwait
in
push
add
mov
cmpsb
xor
movsl
mov
das
add
andb
cmp
and
clc
add
dec
cmc
and
les
jmp
aad
inc
adc
inc
add
xor
xorl
in
and
bound
out
or
push
aam
or
decl
jp
mov
pop
jne
cmp
adc
lock
orb
push
and
lods
mov
shll
nop
push
stos
xchg
icebp
fwait
sar
sub
loope
jne
bound
pop
push
and
push
mov
fs
lock
icebp
sbb
repnz
pop
or
cmp
movsb
jg
push
mulb
sbb
call
addb
stc
pop
sarl
sbb
fcom
inc
push
pusha
ljmp
or
xchg
repz
stos
ss
sub
pop
inc
testl
add
mov
cmp
pop
stos
call
notl
data16
cmp
fs
clc
nop
mov
push
adc
xchg
adc
clc
outsl
add
push
add
movsb
mov
xchg
lock
call
out
xchg
or
mov
push
fisubl
clc
and
outsb
push
adc
dec
gs
adc
pop
jle
mov
test
aas
cli
arpl
jnp
loop
daa
lods
pushl
jmp
loopne
push
ja
push
mov
dec
add
clc
std
dec
xor
mov
mov
data16
adc
movl
add
aam
ficoml
and
sbb
lcall
mov
in
movsb
dec
jne
cmc
push
dec
test
adc
ja
add
and
scas
xchg
cmp
and
mov
push
ja
xorl
xchg
test
gs
cmpsl
add
or
ret
jg
enter
dec
gs
xor
cld
icebp
cmp
loopne
xor
lds
bound
push
jg
mov
pushf
je
push
pmaxsw
or
inc
lods
popa
dec
call
fcomi
addr16
or
aas
mov
cmpsb
movsb
adc
add
xchg
call
push
fs
jl
dec
and
and
faddl
loopne
mov
mov
or
sbb
aad
sti
mov
push
daa
aam
xchg
in
dec
or
pop
hlt
data16
loope
mov
or
inc
adc
aam
jl
enter
push
lock
sub
pop
pop
das
xorb
mov
mov
mov
xor
fmull
add
in
sbbl
or
movsb
adc
enter
mov
mov
rolb
adc
mov
outsl
jbe
test
sahf
sbb
cmp
call
test
inc
fcoml
mov
cmpsl
mov
jmp
ret
lcall
icebp
or
loopne
and
push
add
push
inc
jnp
dec
jecxz
shrb
add
fistps
mov
mov
cmp
pop
mov
lock
cltd
mov
mov
lock
or
inc
fists
inc
sub
xor
loop
out
push
pop
popf
call
pop
rorb
fsubrp
clc
lea
sub
ficomps
pop
mov
les
sbbl
jne
data16
or
add
cltd
test
and
icebp
shll
pop
fiaddl
das
mov
xchg
or
test
mov
fs
arpl
and
inc
lret
inc
nop
clc
xor
dec
pop
lret
movsl
and
cmpsb
mov
adc
jge
or
push
test
loopne
cs
push
shrb
jmp
sub
sub
mov
add
pusha
and
fsubrs
xor
xchg
pop
add
sbb
lret
push
mull
cmp
fs
mov
mov
cltd
inc
push
lret
jb
mov
rdmsr
add
test
mov
add
test
clc
orb
jge
mov
jmp
sbb
add
ret
loopne
test
add
pusha
push
insl
xor
sbbl
cmpl
je
pop
add
sbb
xor
aaa
add
stos
cld
add
pop
mov
mov
test
sub
popf
inc
jge
cmp
mov
fdivl
cmpsb
push
rorb
jns
push
mov
fiadds
or
in
fldt
jae
mov
xor
mov
sbbb
mov
and
add
adc
add
ret
pop
sbb
xchg
push
sub
daa
incb
dec
push
xor
jae
mov
push
mov
and
jmp
imul
ds
mov
jbe
or
cwtl
pop
dec
sbb
jmp
inc
pop
sbb
decb
int3
sub
rcll
push
sti
inc
lods
jmp
mov
inc
dec
and
ficoml
adcb
pop
fbld
mov
adcb
js
push
xchg
scas
dec
adcb
mov
pushf
push
dec
mov
and
jmp
push
sub
xchg
sbb
or
xchg
add
sbb
nopl
icebp
push
call
verr
fldt
pop
icebp
inc
lea
test
push
or
cmpsb
popa
or
or
hlt
js
xor
rorb
and
lods
jne
and
out
ficompl
je
outsb
adc
pop
add
popf
in
inc
dec
dec
es
and
jge,pt
xchg
jno
mov
mov
leave
dec
js
fcomip
mov
jmp
fidivs
pusha
loope
mov
movb
xchg
arpl
mov
ret
mov
lods
push
add
gs
jbe
test
ljmp
or
mov
gs
call
pop
prefetch
insb
rcrl
aad
clc
adc
aam
or
xchg
mov
mov
jl
cli
push
ljmp
xor
xor
sti
outsb
jae
hlt
xor
or
cmp
hlt
xchg
mov
mov
imul
mov
fwait
cwtl
push
and
jle
fcompl
out
pop
ds
adc
mov
push
dec
outsl
loopne
mov
test
hlt
addb
enter
insb
add
inc
movsb
pop
loopne
in
test
push
aas
pop
add
or
push
push
cmpsb
and
mov
push
adc
lcall
adc
mov
in
inc
aas
in
lock
cmp
shlb
push
icebp
inc
xor
mov
icebp
xchg
into
add
or
mov
or
or
cmp
mov
cs
vhsubps
inc
pop
push
cmp
or
push
es
mov
sub
outsl
dec
shrb
sarb
jmp
enter
pusha
movaps
or
mulb
and
mov
je
and
sbb
push
test
push
test
cld
or
lds
add
adc
mov
mov
adc
outsb
and
loop
adc
in
jge
sbb
js
push
mov
or
push
lea
pop
shrl
test
xchg
inc
push
pop
gs
jge
jbe
inc
fstpt
or
mov
inc
add
loop
sbb
pop
lea
clc
in
add
or
adc
movsb
cmc
mov
clc
add
lods
push
enter
imul
stc
push
xor
push
cmc
push
inc
sub
or
lods
fdivs
pushf
stos
or
mov
mov
sbb
ja
adc
jae
and
loope
les
jp
pop
mov
orl
cmp
adc
enter
pop
stos
mov
jne
rcl
sub
sar
fisubrl
push
test
add
xchg
fsubrs
add
sar
mulb
pop
inc
test
jp
add
out
adc
inc
lea
mov
outsb
je
xchg
lret
fisubs
leave
pop
movsb
imul
js
push
mov
inc
stos
xor
decl
test
push
xor
xchg
mov
loop
repnz
pop
xlat
inc
or
or
mov
or
fstpl
mov
loopne
mov
out
test
fisubs
in
ljmp
push
xchg
inc
cmpsl
sub
pop
xorb
xchg
jnp
dec
jl
mov
neg
pushl
scas
clc
sbb
jge
js
pop
shlb
dec
push
jmp
add
xor
push
push
and
aad
push
nop
mov
inc
add
and
xchg
or
add
dec
cmp
push
xor
sbb
outsl
mov
rcll
xchg
aad
inc
adc
sar
lock
loope
push
push
cmc
sbb
jae
pop
mov
add
mov
orb
cmp
test
call
sbb
adc
jmp
pop
aam
out
xchg
dec
cld
jp
mov
pop
pushw
cld
inc
sar
pop
fmuls
push
mov
and
loop
aam
sbb
aad
add
rorb
outsb
adc
and
enter
cwtl
jg
movb
les
addr16
outsb
nop
mov
sti
add
imulb
xchg
scas
cli
dec
jo
add
cmp
cmp
jne
add
inc
pop
sub
pop
lock
push
lds
insb
into
push
mov
loop
adc
out
adc
in
jae
cltd
scas
xor
inc
jl
ret
push
xchg
xor
inc
or
add
xchg
shlb
ss
xor
push
push
pop
xchg
pop
bound
sub
in
fimull
or
mov
add
sahf
scas
push
jl
cmpsb
dec
cmpsb
or
lret
and
mov
subb
out
mov
je
add
dec
inc
push
sub
or
xchg
ss
adc
test
data16
je
jbe
fidivs
scas
mov
je
in
nop
mov
ret
mov
les
insl
jp
cmp
jg
insb
int3
decb
dec
shrb
cmp
jp
inc
repnz
sarb
ret
dec
or
mov
rcrl
sub
mov
adc
push
lds
sti
xor
lret
sub
cmp
adc
pop
lock
js
jmp
push
dec
aam
nop
sbb
add
or
inc
push
adc
loopne
lods
pop
cmp
sar
push
in
scas
cmp
ret
or
call
stc
movsb
lock
loope
xor
cmc
clc
jge
fmuls
mov
push
mov
rorb
push
push
cmpsb
or
push
pop
push
bound
and
rolb
cmp
mov
cmp
mov
orb
dec
ljmp
pop
push
push
dec
jge
movsl
leave
mov
outsl
or
mov
sbb
pop
add
sbb
pop
push
mov
cld
mov
daa
sub
jl
adc
es
jle
call
xor
lea
cmc
shl
nopl
sbb
std
aaa
mov
push
inc
add
push
roll
ss
push
xchg
sbb
pop
and
add
and
xchg
pop
pop
leave
les
pop
les
subl
shr
popa
push
stos
or
and
jg
inc
stos
push
lods
dec
sbb
mov
cs
mov
repnz
test
or
incl
in
mov
bound
inc
cmp
push
into
lea
mov
add
add
cli
aaa
sbb
mov
rcr
ret
jmp
sub
jb
je
or
ljmp
fst
xchg
push
pop
arpl
sub
popa
push
inc
or
cmp
inc
test
dec
or
and
iret
xchg
mov
push
bound
or
push
test
cld
rorb
fbld
dec
cmp
jno
out
sbb
mov
adc
xchg
imulb
inc
ret
xchg
test
xchg
std
pop
jmp
xchg
aam
scas
xor
push
sti
in
ret
test
ljmp
cmpsb
fbstp
in
daa
pop
cld
int
sub
adc
leave
pop
pop
mov
dec
mov
sbb
lret
xor
pop
pop
push
inc
add
xorl
fisubl
in
and
mov
or
fistl
mov
mov
xor
lea
adc
and
arpl
push
clc
stc
add
and
jo
clc
adc
pusha
bound
adc
mov
or
mov
xchg
incb
ss
pop
mov
cmp
fisubrl
js
loope
and
loop
inc
and
andl
inc
jbe
add
xchg
clc
push
push
sub
jae
test
pop
repnz
push
pop
add
mov
mov
xor
mov
orb
cmpsb
cld
mov
icebp
sarl
dec
popf
enter
or
sub
loop
mov
mov
fildl
call
loopne
lock
pusha
pop
je
pop
xorl
loope
sbb
aaa
push
pop
test
sbb
int3
jle
das
lret
adc
or
push
hlt
dec
xor
push
pop
inc
push
mov
xchg
add
lcall
push
jne
inc
das
shr
ret
pop
push
or
decl
add
int3
push
stc
xor
cmpb
dec
lods
push
push
push
or
loop
mov
pop
mov
arpl
inc
inc
inc
adc
adc
addr16
cs
mov
inc
les
xor
out
test
addr16
push
out
mov
sbb
or
dec
ss
mov
push
bound
mov
shll
in
push
pop
stos
jle
incb
sbb
subl
add
clc
push
add
jg
xchg
mov
rorb
popl
mov
test
stos
add
ss
jg
sub
sbb
add
push
mov
mov
mov
mov
add
add
jle
jmp
les
stos
fsubs
sub
mov
inc
push
fs
jmp
lock
fcomps
in
fcomps
das
loope
or
pop
adc
mov
mov
pusha
inc
sbb
or
mov
in
dec
test
xor
xchg
add
ret
push
pop
incb
mov
push
sbb
mov
cmp
clc
pushf
cld
fs
dec
mov
test
push
add
test
test
adc
mov
test
and
dec
add
lds
dec
push
es
bound
aad
xchg
mov
call
and
icebp
jg
fs
mov
lods
pop
dec
xchg
mov
dec
add
insb
ds
cmp
lock
in
mov
dec
xor
or
and
fcmove
push
pop
cmp
pop
loop
dec
add
cmpsb
sub
ja
jmp
push
subl
cmpsb
mov
or
mov
push
cmp
jp
adcb
or
std
int
inc
js
mov
je
rorl
pop
push
sahf
jbe
push
sub
out
dec
mov
push
pop
push
mov
add
les
jl
andb
inc
mov
orb
push
fsubl
es
test
movsl
add
std
in
movb
mov
adc
lret
cmp
add
stos
sbb
dec
or
lahf
rolb
aas
pop
xchg
jge
xor
dec
push
shlb
insb
jl
ljmp
and
fcmovb
mov
in
gs
adc
mov
fmuls
dec
aam
push
fcmovnb
loopne
inc
sub
sub
or
pop
adc
dec
ret
test
pop
lock
pop
sub
sahf
mov
add
mov
pop
and
lcall
push
into
inc
or
adc
movsb
add
mov
mov
xchg
stos
pushf
mov
cs
ret
movsb
and
shll
fisubs
in
cmp
test
das
adc
inc
shr
je
inc
xor
or
mov
into
add
adc
adc
sar
cmpsb
push
push
xor
xor
cmpsb
popf
orb
ss
xor
inc
inc
std
filds
mov
std
pop
mov
adc
push
mov
pop
out
ja
scas
scas
dec
jo
les
jge
mov
rorl
lret
aas
sub
push
and
icebp
xor
int3
lock
pop
int3
mov
inc
adc
dec
data16
or
push
mov
dec
std
in
lea
mov
adc
fdivs
int3
jno
adc
pop
jo
xor
push
and
push
pushl
or
or
sub
add
dec
cld
mov
inc
inc
add
out
lock
push
and
test
mov
jg
adcl
cs
mov
inc
xor
add
xchg
fisubl
push
mov
test
ljmp
xchg
pop
ret
inc
cmp
adc
lret
mov
or
jp
in
adc
pop
ja
sbbb
cli
insl
push
push
mov
sub
outsb
jmp
test
or
cs
int
cmp
push
stos
cli
mov
cmp
pop
mov
xchg
xchg
inc
add
das
mov
lret
rcr
push
jae
adc
popa
add
cli
mov
fs
loopne
cmp
push
xchg
sar
scas
xor
rorb
mov
fstpt
lea
and
sbb
call
xchg
loopne
add
adc
cmp
in
lret
stos
dec
fidivrs
push
pushf
sbb
sub
fsub
cltd
ror
or
cmp
xchg
xchg
cwtl
ret
lods
dec
test
or
test
scas
lea
sbb
frstor
data16
les
sbb
cmp
bound
cld
jo
pop
push
dec
decb
testb
xlat
sub
sub
inc
adc
fldcw
push
es
pop
lcall
cld
xor
loope
lret
and
jo
dec
add
push
xor
call
push
ss
out
out
adc
call
inc
rclb
xchg
sub
jo
adc
repnz
inc
push
stos
mov
push
out
mov
scas
and
enter
or
lock
xor
sub
sarb
sbbb
in
andl
fadds
or
ficoms
and
push
outsl
push
or
mov
mov
mov
lret
insb
in
inc
mov
div
or
dec
xor
add
lods
out
mov
push
xchg
cmp
rcrb
add
in
inc
cmp
add
lea
cmp
decb
in
lods
mov
hlt
inc
mov
sbb
mov
sbb
les
inc
std
mov
sbb
dec
test
push
outsb
sub
inc
jge
incb
call
cld
mov
in
xor
mov
rcll
dec
pusha
cld
cld
mov
xchg
pop
or
call
adc
mov
jl
mov
loopne
or
arpl
push
adc
in
adc
jg
push
push
inc
mov
lcall
fnsave
push
add
lea
loope
je
or
jbe
aas
mov
add
add
je
dec
adc
or
sbb
xor
inc
enter
das
repnz
add
outsb
in
inc
outsl
fiadds
mov
or
lock
pop
cwtl
ret
pop
insb
inc
ret
mov
outsb
lock
rcll
cmp
sub
mov
mov
testb
jbe
rorb
sub
push
and
push
mov
mov
loop
cs
jo
jo
jmp
scas
jp
mov
arpl
scas
movb
lods
je
mov
pop
lods
add
notb
call
adc
cs
rcr
mov
repz
mov
inc
lock
je
outsb
cmp
fadds
shr
adc
xchg
inc
call
add
pop
dec
aaa
repnz
push
adc
sbb
stos
xchg
fs
xorb
or
cmpb
jmp
or
test
add
nop
outsb
mov
add
repnz
add
pushf
shufps
xor
sbb
cmp
xlat
fdivrl
add
xchg
adc
pushf
clc
rcrl
leave
and
cs
pop
fidivl
jle
and
jg
sbb
popl
loopne
lock
testb
inc
and
icebp
outsl
adc
shrb
dec
call
cmove
shll
and
add
mov
push
test
inc
hlt
int3
outsl
dec
dec
cmp
mov
inc
fs
push
push
inc
push
jb
push
mov
xor
sbb
push
push
dec
jns
or
and
cld
mov
movsl
or
lret
mov
push
es
pop
adc
mov
call
and
sbb
inc
inc
pop
dec
insb
push
mov
clc
test
jne
and
and
aam
xlat
insl
scas
ss
or
loope
cli
or
inc
push
inc
inc
cmp
cmpsb
push
dec
lcall
push
aam
in
ffree
or
and
push
inc
cld
jne
jecxz
shrb
roll
fadd
cmp
sbb
ss
push
loopne
push
call
lret
clc
scas
cli
jbe
bound
cli
pop
addb
and
stc
xchg
enter
sbb
add
lcall
push
ljmp
into
mov
movsb
cmp
xor
shr
ret
leavew
addr16
sub
jl
mov
aam
lret
daa
rcr
mov
cmp
call
lds
fdivs
push
xchg
lods
sub
das
cmp
andb
cmp
adc
push
stos
add
bound
or
test
pushf
sbb
sub
rsm
cmp
and
cmp
hlt
pop
or
shll
xchg
or
orb
push
jmp
call
clc
pop
hlt
dec
dec
fs
add
test
mov
push
or
inc
push
mov
push
sbb
orb
or
stos
mov
int
or
dec
scas
rorl
inc
mov
add
mov
xorl
xchg
enter
xchg
mov
xchg
cmp
inc
shlb
mov
mov
scas
pop
test
xchg
pop
repnz
sbb
adc
aad
sbb
iret
add
push
test
mov
les
jmp
and
push
call
xchg
jmp
mov
or
inc
mov
xchg
fimuls
dec
add
insb
jmp
and
push
mov
sbb
rorb
movsl
pop
jle
cmp
pop
dec
arpl
rorb
mov
fs
mov
mov
and
and
es
mov
sti
push
leave
aam
fildl
movsb
push
mov
outsb
jo
incb
cmp
outsb
lcall
icebp
lock
hlt
mov
inc
xor
jne
sbb
fimuls
loopne
fs
jo
cmp
and
out
inc
dec
jo
and
adc
add
jbe
aam
fcomps
stc
popf
testb
push
xchg
and
ja
jl
add
push
fcom
mov
dec
aad
je
dec
lods
add
push
push
mov
inc
push
pushf
mov
in
insb
das
add
test
and
jge
inc
outsl
jg
xor
ret
lea
mov
inc
cmpl
pop
add
mov
mov
lock
push
push
xchg
push
sub
xchg
loopne
leave
cli
cli
xchg
lock
call
sub
cmpb
inc
clc
inc
or
cmp
sbbl
dec
inc
pushf
les
ds
xor
add
xchg
cmc
cmp
ds
xor
cwtl
js
push
sbb
push
adc
xorb
ror
out
out
aas
add
test
test
adc
jle
cli
lea
and
jno
cmp
lea
inc
jbe
mov
loop
out
xchg
dec
fstpl
add
mov
test
jge
or
test
mov
loopne
loop
enter
sub
mov
pop
test
adc
pusha
cmp
and
pop
cmp
push
pop
repnz
fwait
inc
sbb
cmp
jmp
and
cmp
xchg
add
mov
and
add
enter
movsl
testb
stos
cmp
pop
fcomps
lea
je
inc
push
cld
and
adc
push
ljmp
sbb
in
mov
mov
xchg
test
and
sbb
std
pop
xor
roll
bound
ret
cmp
and
and
xchg
push
cltd
mov
ret
push
mov
xor
aas
pop
popa
xchg
popl
push
push
sub
cmp
mov
inc
inc
xchg
fsub
cmp
dec
stos
es
adc
jp
pop
outsb
add
cwtl
mov
dec
jp
cwtl
push
hlt
dec
insl
xchg
lock
jbe
or
outsl
jg
dec
sub
jmp
dec
add
call
mov
outsb
push
xchg
or
mov
push
outsb
jmp
js
lods
dec
and
stos
sub
cmp
fsubs
and
jge
jle
xorl
hlt
in
sub
push
hlt
xchg
mov
scas
jp
js
popa
push
dec
shl
frstor
dec
adc
ret
or
and
jg
inc
inc
clc
or
shrl
or
mov
addr16
shrb
adc
mov
scas
mov
cmp
cmpb
ret
outsb
mov
test
push
test
jb
dec
mov
fdivr
imul
les
mov
inc
xor
lea
mov
in
stos
pop
add
subb
jae
xor
insl
sub
xor
int3
add
inc
mov
pop
popf
sbb
prefetch
or
push
and
push
add
xchg
add
and
cli
mov
mov
pusha
add
dec
push
push
dec
jbe
pop
or
push
out
repnz
test
hlt
roll
push
cld
fsubrp
xor
inc
xchg
cs
cmp
and
stos
push
mov
in
rcl
fldcw
mov
fisubrl
lret
xor
mov
mov
hlt
push
xor
push
jp
mov
push
jne
and
push
lcall
js
cmpsb
pop
sub
add
cltd
call
ljmp
ret
lret
add
les
mov
jecxz
jmp
aas
or
cmp
mov
call
mov
shr
or
cwtl
add
out
cmpps
in
js
jne
sbb
add
lret
ja
jno
call
mov
mov
jo
jg
jo
testl
testb
xchg
fidivl
gs
cmp
into
xchg
ret
or
mov
inc
sbb
or
or
clc
add
cmp
mov
mov
adc
jb
push
pop
int3
outsb
jnp
stc
pusha
push
jmp
push
or
pop
add
xor
in
sub
xor
add
fs
and
outsb
jb
mov
inc
sub
pop
cli
dec
data16
push
lods
gs
push
add
xor
or
popa
mov
jg
loopne
stos
nop
in
adc
mov
mov
mov
loopne
cs
xchg
lods
or
movsl
pop
test
dec
inc
add
add
or
add
idiv
scas
enter
push
daa
or
or
jl
stos
inc
push
subb
push
pop
je
out
dec
fiadds
mov
add
adc
fdivrl
dec
xchg
inc
cs
sbbl
xchg
std
add
jnp
push
mov
gs
icebp
out
push
xor
cmp
mov
xor
and
and
dec
bound
mov
lods
out
push
inc
sub
adc
xchg
ret
or
fcmovbe
in
into
stc
outsl
and
or
xor
push
cld
adc
pop
push
fwait
sub
shlb
sbb
loopne
lret
test
mov
inc
jb
inc
xor
and
xchg
inc
jbe
loope
adc
mov
push
mov
xor
sub
adc
adc
mov
mov
cld
repnz
add
push
pop
xlat
orb
fadd
cmp
jg
mov
xor
jle
je
inc
or
adc
sbb
clc
dec
mov
pop
dec
fiaddl
xor
cmp
and
mov
lods
cld
push
clc
loope
xor
jmp
andl
dec
aaa
fsqrt
mov
imul
dec
push
mov
fmuls
add
push
add
mov
in
orb
pop
mov
cmp
or
mov
test
push
ret
and
insb
push
push
push
cmc
push
and
call
lock
sub
adc
sbb
add
mov
cli
add
push
pop
add
pop
push
insl
mov
jb
or
mov
sbb
int3
in
loopne
out
inc
push
inc
xchg
mov
mov
add
out
jo
ds
and
mov
inc
rcll
add
setnp
lock
push
push
xchg
cmp
pop
or
inc
push
ret
sub
shr
jmp
movl
mov
stos
nop
cmp
lods
pop
in
cmp
outsl
push
je
lea
inc
sub
sbb
add
loopne
mov
add
sub
push
rolb
cmp
adc
fstl
pusha
mov
push
cs
cmp
insb
dec
bound
movb
jmp
sbb
hlt
lods
cltd
mov
xor
and
inc
daa
loopne
mov
pop
or
ret
pop
inc
and
xchg
push
xor
popa
push
pop
mov
cmpsb
sub
lods
cmpsb
dec
faddl
jb
rcrl
push
sub
dec
lds
cmp
in
int3
outsb
sub
mov
popa
push
xor
fidivrl
add
sbb
mov
fsin
add
addr16
xor
sbb
mov
sbbl
rorl
pop
aad
xchg
daa
adc
or
out
xor
dec
ret
jbe
xchg
ret
jle
or
js
cld
add
fsubr
aad
push
pop
adc
and
cmpxchg
cmpsl
cmp
xchg
add
cld
adc
unpcklps
pop
cmp
mov
dec
sub
mov
xchg
outsb
rolb
ret
repnz
inc
push
xchg
movsb
popa
push
jge
and
out
leave
adc
mov
dec
push
pop
mov
or
push
mov
es
lcall
divb
subb
pop
mov
adc
pop
enter
dec
ss
inc
jne
nop
sbb
adcb
add
movsl
pop
add
xor
ret
mov
xor
jns
test
cwtl
ss
loop
mov
jae
movsl
test
adc
bound
in
int3
fs
fsubrl
call
cmpsb
mov
les
lock
ret
lea
xchg
movsb
mov
sbbl
lods
dec
mov
add
cmpl
xor
xorb
inc
loope
bound
sbb
pushf
out
and
mov
int3
lock
adcb
push
push
mov
push
decb
leave
outsb
mov
add
repnz
xchg
outsb
mov
push
xchg
adc
pop
add
cmp
xor
push
neg
addr16
xchg
imul
ljmp
mov
pusha
sub
jl
add
pop
add
into
or
sub
fcomps
cmpb
mov
cmp
sbb
lret
jl
jne
test
pop
sbb
lea
clc
dec
or
addl
test
loop
pop
dec
pop
enter
dec
call
push
and
in
dec
cmpb
mov
mov
pop
sbb
add
ljmp
jo
push
xor
leave
lret
lret
stc
pop
test
enter
ljmp
dec
cli
xorl
rcl
xchg
adc
cmp
mov
cli
pop
mov
mov
jmp
add
testb
imul
hlt
push
je
jp
js
mov
cmp
les
fadds
cmp
pop
dec
mov
pop
cmpsb
push
addb
adc
lcall
adc
lret
sbb
lahf
jge
mov
or
js
cmp
insl
mov
scas
shlb
add
jmp
sub
or
mov
ficoms
loopne
les
jge
mov
and
pop
jmp
mov
mov
sarb
sub
mov
adc
fisubrs
in
push
bound
dec
or
cli
sbb
and
mov
sti
jmp
jb
pop
or
mov
data16
cmp
add
mov
mov
mov
adcb
cmp
insl
xchg
mov
sub
sbb
push
enter
mov
and
push
sub
or
cld
out
loopne
shrb
js
and
sbb
inc
mov
sub
mov
insb
pop
decb
stc
in
stos
fcoml
dec
xor
mov
mov
cld
adc
adc
push
aas
mov
in
jle
sub
xchg
inc
loopne
shl
mov
mov
sub
xor
mov
jbe
inc
sub
insb
jnp
push
jne
add
jae
sub
adc
mov
int3
jae
nop
ret
outsb
mov
add
into
pushf
cs
adc
cmovge
loop
lahf
push
sub
dec
jb
insb
ds
rcll
adc
jne
mov
into
mov
lea
xchg
sub
cwtl
adc
mov
xchg
dec
pop
pop
pop
test
lea
dec
outsb
adc
sub
cmp
scas
add
mov
call
add
sub
aaa
imul
push
and
adc
cwtl
mov
inc
aam
outsb
jo
std
pop
ret
cmp
faddl
jecxz
sbb
dec
xor
add
clc
sbb
cld
inc
test
fstl
arpl
jne
jns
aas
or
lret
or
cmp
bound
aam
mov
adc
cld
in
movsb
movl
movsb
cmp
jp
das
popa
les
dec
test
sub
push
inc
stc
push
mov
mov
dec
mov
cli
sbb
xor
add
lock
dec
sbbl
or
decl
sub
xchg
mov
xchg
adcb
jo
cli
jno
les
pop
adcb
cmp
std
dec
or
aas
or
inc
ja
cmp
inc
or
push
xor
inc
dec
pop
inc
mov
stos
outsb
sub
cwtl
dec
lock
pop
mov
push
scas
divl
xchg
movb
jp
mov
dec
push
add
ss
add
mov
push
es
mov
adc
inc
bound
pop
or
aaa
add
cmp
push
push
xlat
dec
sub
push
sub
icebp
pop
int
jbe
push
inc
sub
dec
adc
pop
outsb
pusha
cmp
push
addl
repnz
mov
bound
fcmovnu
mov
push
xor
in
pop
and
shlb
cmp
les
inc
dec
jl
loopne
repz
orl
push
push
and
call
cld
xchg
mov
imul
cs
aam
es
or
jle
or
movsl
testb
adc
ss
fbstp
sbb
sub
sahf
clc
mov
push
or
xor
push
hlt
inc
daa
hlt
loope
sbb
adc
btc
aam
clc
pop
jmp
rcl
aam
push
push
jg
mov
loopne
fs
xor
fadd
out
cld
xor
decl
mov
xchg
xor
fnsave
add
inc
jecxz
sub
pop
filds
mov
mov
push
daa
and
sbb
and
push
mov
dec
or
push
sarb
xchg
cmp
pushf
mov
adc
add
mov
mov
rcrb
or
loope
pop
xchg
sub
mov
xchg
cmp
cli
fwait
adc
jmp
loop
movsl
dec
xor
cmp
and
fmull
sti
out
pop
sbb
test
jmp
mov
sub
enter
lods
inc
xchg
mov
mov
fisubl
nop
int3
in
in
adc
fsubs
loopne
add
adc
je
add
bound
or
adc
mov
fs
jge
or
cwtl
movsl
idivb
xor
in
mov
cli
lret
push
cmp
scas
sub
sub
outsb
mov
aaa
mov
jo
imul
add
push
push
or
fiadds
roll
aam
incl
jbe
inc
inc
mov
dec
jl
pop
push
shll
add
inc
pusha
push
es
and
testb
sub
enter
mov
add
and
xchg
pop
aam
out
loope
fs
loope
cmp
xlat
mov
sub
je
jo
stos
pmuludq
adc
mov
scas
xor
and
or
mov
xor
mov
inc
adc
pop
popf
push
roll
xchg
sahf
inc
add
pop
mov
push
es
pop
test
pop
mov
mov
imul
fisubs
jge
lret
cmp
jmp
popa
call
incl
push
pop
icebp
das
shrb
ret
shll
cmpsb
jge
pusha
mov
and
push
js
loope
or
imul
mov
or
mov
jle
add
insb
mov
pop
popa
scas
js
inc
mov
pop
inc
push
sbb
pop
push
cmp
xchg
inc
inc
adc
mov
mov
pop
push
loop
cmp
popf
inc
mov
jl
das
pop
pop
out
das
lods
fbstp
add
iret
addl
or
push
mov
jno
mov
nop
sbb
pop
or
xchg
leave
add
xor
sbbb
push
ljmp
call
cld
in
call
lea
xor
clc
insl
inc
sub
mov
shrl
in
inc
dec
inc
adc
jae
sahf
mov
add
out
pop
mov
add
mov
std
jb
add
pushf
mov
or
inc
inc
mov
xor
nop
rorb
insb
or
xor
je
mov
add
shufps
cmp
aas
test
inc
int3
inc
cmp
aas
inc
daa
inc
push
addb
sub
add
xor
push
lcall
dec
or
push
or
sahf
mov
push
jle
mov
inc
xchg
sar
mov
cmp
das
add
shrb
call
adc
xchg
cmpb
mov
mov
add
js
cmpsb
inc
mov
movsb
sub
data16
cmp
add
clc
dec
fsubrl
jge
lock
mov
mov
or
add
add
std
add
add
fldenv
sbb
clc
mov
inc
add
incb
out
push
cmp
ret
adc
add
ljmp
in
jb
jmp
enter
dec
outsb
jl
les
jo
push
adc
sti
jae
or
pop
mov
dec
xor
inc
hlt
push
inc
in
je
mov
cmp
add
push
into
pop
jne
icebp
incb
xor
jnp
xchg
xor
mov
xor
pop
dec
or
std
pusha
outsb
aaa
pop
dec
adc
push
inc
loope
ss
cld
inc
mov
ret
push
dec
or
mov
loopne
push
mov
ljmp
insb
mov
sub
out
nop
dec
push
jmp
je
xchg
loope
pop
push
mov
or
jmp
jnp
stos
cmp
add
or
mov
std
mov
pusha
add
rcl
jo
stos
cwtl
adc
lret
mov
pop
pop
bound
xchg
pusha
adc
and
add
andb
or
mov
dec
cli
cmpsb
sbb
mov
xor
addr16
fs
es
xchg
lock
shrb
and
xchg
enter
popa
mov
nop
cs
aaa
pop
into
loope
cmp
rolb
das
add
and
insl
inc
or
cld
popl
cmpsl
jne
gs
dec
or
popa
xor
lods
arpl
jge
push
shr
loopne
addb
xor
dec
loopne
cmp
ljmp
loope
dec
cs
or
pusha
xorb
insb
jecxz
push
xor
pop
inc
sahf
nop
jbe
int3
or
mov
jbe
add
shll
or
test
jl
add
call
adc
cmp
sbb
insl
and
mulb
fsubl
dec
fldl
sbb
mov
sub
jle
inc
shl
pusha
jbe
sti
lahf
xchg
xor
gs
push
and
or
dec
adc
incb
sti
inc
pop
inc
mov
mov
add
and
jmp
and
adc
dec
insb
aad
hlt
rclb
adc
fsubr
mov
mov
fiaddl
push
clc
mov
wbinvd
scas
and
and
xchg
or
sub
outsb
fildll
mov
jle
mov
jg
cld
ss
pop
cmp
adc
sub
sub
add
nop
add
inc
jne
mov
add
shlb
outsl
xchg
push
jle
fdivs
mov
in
jb
sbb
inc
shlb
jbe
xor
push
popf
inc
das
sbb
shll
xor
dec
cmp
js
xor
aas
push
jmp
xorb
jne
sbb
mov
je
sbb
decl
repnz
add
cmp
out
jbe
or
adc
jmp
mov
bound
jbe
xchg
mov
or
xchg
mov
lea
sbb
mov
scas
pop
call
fdivrl
adc
cs
mov
push
fmull
fs
sahf
xor
adc
dec
inc
cltd
mov
icebp
out
fcom
xor
orl
in
sti
ret
movsl
jmp
cmp
xor
dec
add
inc
int3
fs
call
decl
adc
mov
pop
push
mov
test
lock
xchg
test
sbb
jp
mov
mov
dec
mov
lea
cld
sbb
sahf
fwait
aam
loopne
mov
test
xorl
fldcw
dec
mov
sahf
add
decb
add
inc
add
aaa
push
dec
les
mov
rcll
lahf
inc
imul
cmc
xchg
or
jg
cs
in
add
popa
inc
repz
test
lock
sarb
lret
jb
add
aam
push
push
sub
jbe
cmpsb
or
ds
push
mov
test
or
aam
ljmp
out
adc
inc
es
rcrl
adc
jle
ds
decl
push
mov
jl
ss
cmp
push
ret
jp
xor
xchg
das
add
mov
in
or
movl
cmp
fbld
jg
jnp
js
add
shrl
xor
daa
jle
inc
ljmp
push
dec
push
lods
lods
ljmp
push
adc
sub
stos
int3
cmp
inc
and
inc
push
aam
sarl
and
fisttps
fs
mov
jns
xchg
cmp
adc
pop
sub
xor
fadds
and
adc
cld
or
testb
adc
or
stos
adc
dec
push
adc
in
mov
add
cmp
push
jp
mov
and
ds
jne
sbb
test
fmuls
pop
lret
pop
ss
jle
and
add
inc
add
clc
or
mov
pop
jae
or
dec
inc
push
cmp
lahf
push
test
inc
jns
jmp
int3
sub
pushl
xor
add
lods
cmp
inc
push
cltd
sbb
cli
add
and
call
lock
outsl
lcall
inc
mov
mov
pop
inc
mov
bound
mov
pop
push
fisubs
int3
ja
shlb
dec
lods
dec
dec
jmp
push
add
mov
cld
adc
icebp
leave
add
shl
movsb
inc
rolb
cmp
scas
jecxz
jg
cmp
pushf
popf
orb
pop
push
dec
sbb
mov
sahf
cmp
or
lock
aaa
jno
sub
arpl
jmp
bound
popf
adc
nop
int3
or
jp
arpl
je
jmp
cmp
adc
sub
xchg
push
inc
cmovb
loope
pop
sbb
xor
scas
jl
dec
mov
push
jmp
std
jmp
xor
mov
cli
dec
push
dec
inc
je
add
sub
sub
sbb
sub
fldt
jle
ret
add
jb
andl
loop
adc
xchg
dec
push
push
mov
and
or
xchg
call
dec
inc
or
jp
jp
mov
push
ss
into
push
cmpsb
lock
jmp
mov
add
cmp
shrl
pop
scas
cmc
mov
sbb
inc
or
shlb
ret
clc
sahf
daa
gs
fsubrs
cmp
adc
jg
lea
jne
or
push
push
aad
pop
ret
cmp
outsb
add
jg
inc
pop
movsl
stos
cmp
mov
lock
loopne
call
pushf
sbb
sbb
lret
push
or
pop
outsb
add
fldcw
sub
pop
loop
and
aam
xchg
mov
in
insb
mov
dec
out
xor
or
movsl
inc
push
inc
inc
and
sahf
sbb
ret
push
clc
subb
pop
pop
bound
clc
das
stc
addb
and
arpl
sbb
movsb
inc
push
outsl
scas
test
out
cmpsb
mov
sarb
ret
je
or
dec
shrb
jne
int3
push
popf
mov
hlt
xor
inc
cmp
cmp
mov
arpl
push
fstpl
dec
push
dec
mov
xchg
addl
mov
cmp
mov
js
les
xor
mov
dec
add
je
adc
fst
push
addb
inc
pop
in
adc
bound
pop
subl
test
or
sahf
cs
mov
test
rolb
jno
and
arpl
loopne
adc
add
add
sar
jge
data16
xchg
pushl
sub
jle
rol
add
xchg
dec
mov
shrb
inc
bound
add
daa
lret
cmp
add
pop
ret
adc
js
pop
sub
out
sbb
fimuls
mov
add
cmp
cli
dec
repnz
ret
orl
jmp
mov
and
mov
cli
and
clc
rol
dec
fs
rcll
mov
mov
movsl
shrb
call
dec
or
pop
and
push
test
jg
ljmp
push
fs
and
ja
inc
xchg
jo
arpl
or
sub
dec
cli
ljmp
pop
cld
push
sub
shll
inc
icebp
xorl
cwtl
mov
es
pop
and
push
sbb
xor
adc
adc
mov
pop
pusha
fs
sbb
jne
or
or
mull
mov
in
mov
mov
jp
mov
loopne
das
inc
jo
mov
mov
add
mov
ljmp
adc
mov
xlat
add
in
int3
xchg
mov
andb
xchg
loop
ljmp
xchg
pop
mov
add
mov
inc
mov
bnd
shll
sub
ss
inc
sbb
dec
sbb
jle
mov
jne
hlt
lahf
add
out
out
jge
xor
rolb
jmp
jb
stos
rorb
pop
pop
mov
sub
aaa
adcl
lret
cmp
push
mov
mov
jecxz
jbe
subb
xchg
jp
stos
inc
pop
inc
jp
push
pop
int3
mov
testl
adc
inc
adc
aaa
pop
lret
inc
loopne
and
or
adc
cmp
pop
pusha
or
add
and
andl
mov
cmpsb
shr
mulb
inc
clc
push
or
pop
mov
stos
sub
dec
inc
push
cmp
jbe
es
cmp
or
repnz
int3
sti
test
push
dec
aaa
aaa
cwtl
xlat
mov
inc
mov
or
cld
divl
jo
xor
outsb
cmp
stos
icebp
push
psubsb
xchg
dec
sbb
add
stos
cwtl
rcr
je
rclb
cmp
scas
nop
or
sbb
js
push
insb
push
popa
add
pop
jbe
pusha
dec
lods
sub
adc
test
test
clc
and
mov
in
int
enter
pop
fwait
aaa
aam
rolb
mov
add
je
mov
mov
sbb
adc
jp
adc
scas
out
inc
data16
xor
push
andl
or
andb
lock
or
xor
inc
jle
pusha
rcr
mov
push
xor
fs
mov
fmull
jne
push
push
xchg
sbb
loope
lcall
xchg
mov
push
inc
push
push
lret
push
pop
add
in
test
loopne,pt
adc
loope
lea
xor
pusha
cld
mov
mov
mov
js
enter
andb
pop
lcall
or
daa
je
inc
xchg
inc
pushf
cli
add
dec
add
ss
xchg
jo
cmpsb
add
and
fs
inc
addr16
test
imul
std
imul
push
js
pop
cmp
test
fisubl
fimuls
popf
inc
mov
hlt
push
mov
int3
add
stos
xchg
gs
icebp
dec
add
mov
push
mov
mov
andl
push
pusha
imul
xor
test
push
mov
sub
ss
ja
and
test
in
dec
inc
js
loop
hlt
pusha
push
pushf
xor
mov
sbb
or
or
sahf
fidivl
push
aam
inc
mov
enter
fmul
orb
xchg
and
xchg
ds
cli
push
cmp
push
jo
jmp
xchg
xor
pop
or
dec
inc
call
sub
test
cmp
sub
imul
sub
adc
or
or
mov
cwtl
adc
inc
loopne
stos
adc
outsl
cmp
movsl
test
pop
enter
jmp
jb
fldl
dec
mov
movsb
andb
clc
sbb
sub
outsl
push
mov
and
and
dec
inc
push
xor
call
pop
int3
cld
mov
or
or
shrb
ljmp
and
adcl
sbb
loop
stc
add
pop
adc
cwtl
cmp
jl
sub
jmp
clc
sub
clc
inc
insl
mov
xchg
add
pop
outsl
sbb
mov
mov
jg
clc
loopne
ret
adc
ror
and
jg
call
out
mov
push
testb
sub
pop
lcall
inc
and
pop
popf
icebp
mov
std
call
nop
pop
in
mov
fs
xchg
shll
pushf
iret
loop
add
push
add
add
mov
lahf
sub
addl
inc
imul
push
inc
shlb
push
sub
jl
and
xlat
push
jg
xchg
movl
stos
scas
fimull
jmp
or
and
ljmp
add
adc
xor
sbb
ret
or
or
xchg
lret
pusha
dec
les
xor
sbbl
adc
jge,pn
or
scas
loop
cmpl
scas
add
push
cmp
fwait
imul
xor
jne
xor
and
push
mov
std
loop
dec
sbb
ja
fs
ljmp
jb
add
outsl
or
cmpsb
sbb
pop
sub
lods
ljmp
fsubrs
test
xchg
into
imul
cli
xor
jmp
sbb
add
and
jo
jmp
xchg
inc
js
push
push
mov
mov
fdivr
push
out
mov
cmp
int3
dec
push
inc
inc
imul
pop
add
outsl
fisubrs
mov
and
mov
hlt
outsl
ja
adc
mov
insl
push
dec
incl
imul
out
mov
xchg
add
add
andb
aas
add
cmp
push
xor
dec
jo
ljmp
or
dec
test
adc
cld
adc
add
push
jae
ret
adc
aaa
cmp
mov
inc
out
clc
and
cmovnp
mov
add
sbb
movsl
mov
xchg
incb
jmp
mov
push
mov
decl
or
aaa
inc
inc
popf
sahf
mov
dec
mov
out
mov
mov
mov
sub
adc
int3
add
inc
loopne
aaa
fs
fsubs
push
int3
test
js
push
adc
outsb
cmovp
xor
jne
xor
movsb
lock
jo
sbb
dec
xchg
insl
xor
pop
dec
orl
adc
cmp
push
xorl
rcrb
xor
inc
rcll
xor
push
pop
jecxz
push
sarb
push
add
in
mov
cmpsb
jle
and
cmpsb
call
xlat
and
add
je
imul
and
jmp
jl
push
insb
add
test
ljmp
insb
clc
inc
fimull
add
rorb
lock
push
add
pop
jb
fs
rcll
pusha
push
rorb
fildll
repnz
dec
jb
pop
mov
mov
andl
call
sub
push
ss
mov
in
mov
sub
es
stos
push
aad
adc
in
mov
movsb
decl
adc
push
jmp
lea
std
dec
sar
inc
add
sbbb
xor
xchg
scas
pop
pop
outsl
cmp
insl
movb
mov
push
fs
or
insb
call
adcl
mov
clc
pop
call
adc
or
aam
fs
out
jne
mov
fidivs
arpl
sbb
rcrb
add
push
push
push
mov
xchg
xor
jnp
ljmp
xor
lock
loop
xchg
hlt
jmp
xor
add
mov
inc
xor
add
out
or
cmp
sub
hlt
pop
mov
add
push
add
adc
rcrb
pop
xor
lcall
xor
push
or
add
mov
pop
add
fiaddl
jge
sbb
pop
and
cmp
ret
adc
mov
sar
pop
add
cmp
pop
call
lock
aas
loope
fidivrs
xchg
inc
add
ss
outsb
dec
cld
mov
jo
mov
or
adc
cwtl
hlt
jl
insb
sahf
xlat
dec
lret
hlt
add
es
ss
pop
adc
cmpb
jno
popa
mov
mov
test
in
orb
or
adc
xchg
push
cmp
enter
or
movsb
cmp
jnp
cltd
sbb
xchg
add
adc
cwtl
in
cmc
xchg
push
imul
mov
ret
mov
cs
hlt
in
or
inc
cs
sbb
push
mov
push
inc
fmul
imul
insb
cld
jo
dec
movb
dec
or
incl
mov
ljmp
xor
je
ljmp
push
outsl
sub
cli
mov
sbb
call
loopne
or
in
and
loope
push
into
fimuls
and
test
test
loopne
inc
add
mov
sarb
insb
mov
sub
add
bsr
addb
pop
inc
adcl
cmc
and
xor
cld
sar
xchg
add
adc
push
push
stos
js
mov
pusha
subl
aas
movsl
pop
loop
xchg
popf
aaa
cmpsb
cmp
jmp
xchg
inc
jmp
test
push
je
dec
inc
pop
adc
mov
xchg
inc
call
jge
shlb
jge
fadd
mov
push
sub
xor
fldt
and
sbb
mov
adcb
pop
push
dec
jmp
ds
gs
or
jbe
les
dec
push
shlb
lds
and
adc
lret
adc
add
call
jbe
inc
cmp
inc
ret
mov
mov
inc
or
orb
aam
out
cld
in
mov
pop
fstl
cwtl
je
or
sub
ss
inc
mov
pushf
inc
loop
iret
int
sahf
movsb
inc
pop
mov
test
popf
add
sbb
cmp
pop
inc
pop
test
cs
dec
rolb
movb
cld
movsb
jle
test
movsl
mov
mov
adc
lds
push
dec
and
jne
push
rcrb
xor
mov
push
and
nop
cmp
jbe
lods
jbe
sbb
jno
ret
cli
rol
mov
fidivs
jbe
stos
push
push
inc
clc
and
out
jmp
repnz
mov
jg
add
inc
and
and
cmpsl
enter
cmc
or
and
jecxz
inc
or
stos
mov
dec
mov
js
or
in
inc
fsubrs
lods
mov
inc
mov
or
jp
dec
dec
cld
popf
push
inc
ljmp
cli
push
pop
call
adc
outsb
mulps
addr16
enter
dec
mov
xchg
jmp
aam
inc
fmull
pop
adc
xor
fisttpll
pop
pusha
or
clc
call
jge
enter
inc
mov
outsb
jge
fsts
test
jecxz
jmp
js
sahf
mov
add
dec
jne
mov
mov
incl
fcoms
js
call
gs
nop
and
xor
pusha
add
mov
popa
cmp
call
mov
mov
cmp
push
lcall
rcll
inc
xchg
or
add
xor
inc
xor
xor
cli
mov
mov
xor
scas
dec
mov
ljmp
test
adc
data16
xchg
aad
mov
push
sar
jle
xor
jge
pop
push
in
jns
or
test
pop
or
cs
adc
test
imul
adc
and
das
xor
jae
cmc
jle
jl
add
clc
mov
push
sbb
pop
aam
andl
mov
ljmp
add
xor
cmc
aas
sub
push
mov
xorb
sub
push
aas
mov
cli
or
adc
mov
dec
pushf
sub
lcall
pop
adc
scas
lods
add
int
in
dec
or
cmc
ret
sbb
mov
add
or
jae
mov
pop
xchg
sahf
stc
xlat
and
int3
xbeginw
fdivrs
lea
add
sbb
loopne
mov
adc
or
or
repnz
and
lods
out
ret
adcb
mov
cmp
mov
loopne
or
inc
xor
loope
pop
ret
adc
imul
stos
xor
movsb
outsl
mov
xchg
mov
pop
ljmp
cmp
lret
pusha
pop
dec
adc
pop
pop
sub
xor
jmp
add
inc
out
xchg
icebp
shrb
daa
incb
in
sbb
mov
incl
or
jge
jnp
pop
insl
add
lea
jmp
push
arpl
inc
call
in
cli
push
push
push
gs
lock
popl
push
lods
mov
int3
add
mov
or
aaa
pushf
hlt
dec
stc
inc
adc
jecxz
adc
sub
jne
mov
cli
hlt
push
inc
cmp
imul
mov
lret
rorb
adc
shll
scas
push
mov
mov
data16
js
testb
xor
mov
push
sbb
add
jns
jg
adc
daa
call
jp
fstp
sub
mov
mov
cld
jns
cmp
andb
jp
pop
mov
mov
cmc
cmp
mov
adc
and
add
pop
add
pop
insb
hlt
adc
stos
or
mov
jmp
jg
xchg
test
pop
jbe
pop
adc
aaa
ljmp
cmp
add
mov
inc
push
ja
jg
ret
out
mov
mov
add
pop
xchg
adc
xor
adc
add
xor
insb
test
js
or
xor
push
lea
jo
test
mov
lock
fiaddl
test
cvtdq2ps
or
and
rcr
orl
shll
outsb
pushf
push
enter
ror
cmp
adc
or
dec
int3
inc
add
jbe
add
mov
cmpsb
pop
lcall
out
pop
and
mov
adc
pop
fcomps
or
fildl
outsb
jp
push
lret
ret
xchg
into
outsl
cmp
cld
inc
cli
popf
sahf
rol
cmpsb
aad
inc
in
push
push
push
xchg
int3
sbb
sbb
jno
mov
mov
cmp
push
adc
pop
scas
cs
out
push
jo
push
push
mov
imul
mov
aam
sub
mov
add
xchg
add
adc
sbb
jo
shrl
les
add
adc
push
je
lcall
test
mov
mulb
call
push
mov
cmp
or
mov
repnz
ret
xchg
or
fdivrl
cltd
adc
stos
and
or
xor
mov
ret
cmp
add
mov
mov
push
adc
add
xor
or
jecxz
test
adc
sub
add
pop
cld
lret
mov
les
push
push
jne
jbe
loop
ja
icebp
push
imul
mov
inc
adc
jl
sbb
mov
rorb
or
fldt
dec
test
dec
cmp
cmp
xlat
inc
pop
push
js
or
xor
gs
and
mov
xor
mov
lcall
ss
cld
sub
in
mov
aaa
push
iret
cli
imul
js
inc
je
push
jp
xchg
lock
shll
push
push
jae
ret
outsb
cmp
jb
bound
jbe
sub
mov
mov
loop
inc
mov
mov
and
lods
mov
push
pop
clc
sbb
add
cmpsb
es
rcl
sbb
add
mov
fildll
or
js
out
inc
add
aaa
xchg
mov
cmpsl
push
adc
scas
xchg
sub
push
cmp
ljmp
out
push
jmp
sub
outsb
adc
pop
imul
popa
jbe
add
ds
or
pop
mov
js
ret
dec
mov
push
cld
push
mov
jp
mov
xor
roll
xor
cmp
divb
movsb
xchg
in
pushf
fadds
add
repz
dec
movb
stos
and
cmp
scas
in
stos
or
out
fwait
push
inc
xor
test
push
dec
std
pop
and
fwait
add
ds
add
mov
mov
nop
in
jnp,pt
mov
push
push
cmp
and
test
dec
nop
mov
into
push
inc
sub
dec
imulb
pop
inc
ljmp
gs
mov
fbstp
add
push
orb
adc
mov
pop
sub
mov
sbb
xchg
inc
mov
push
push
inc
push
mov
incb
inc
lea
loope
icebp
push
push
js
cwtl
in
mov
sub
adc
cmp
and
aaa
adc
mov
push
adc
lock
dec
jl
dec
adc
loopne
push
xchg
jp
jb
push
xor
nop
clc
rol
fnstsw
dec
mov
aam
rorl
sub
sbb
sub
adc
popa
cld
adc
les
mov
in
push
mov
les
mov
adc
fs
jo
adc
in
bound
int3
popf
pop
xchg
lret
add
repnz
shll
pop
xchg
push
xlat
add
stos
ljmp
in
lock
add
fwait
xor
push
or
mov
sahf
andb
aam
adc
cmpb
cld
test
and
cwtl
cmp
popa
js
mov
test
imul
xor
or
rcrl
lods
jp
bound
aad
mov
xlat
xorl
cmp
stos
xorb
xor
push
cmp
dec
lahf
jle
push
pop
icebp
rclb
cmp
in
and
fisttpl
or
pop
in
inc
push
aad
scas
mov
fdivrl
sbb
clc
cs
pop
add
aam
scas
push
adc
insb
out
add
cld
loopne
rcll
xor
mov
movsl
add
cmp
inc
mov
mov
jl
fdivr
xor
push
jne
adc
outsb
pop
xchg
outsb
pop
rorb
shlb
push
dec
mov
pop
shll
pop
dec
jbe
jb
mov
mov
jg
rcr
bound
mov
repz
push
pop
mov
cmp
ret
fildl
pushf
in
enter
stos
and
push
mov
ds
cmp
mov
dec
fwait
es
fildll
ljmp
pop
pop
dec
dec
cltd
adc
dec
push
or
xchg
lcall
mov
adc
xchg
loop
push
or
sub
pop
push
pop
add
adc
or
jl
insb
push
ret
or
push
xorb
insb
cmp
sbb
add
xchg
ror
cmp
mov
shlb
pop
push
push
mov
inc
push
mov
or
xor
cmp
lods
jne
xor
mov
ret
mov
jbe
inc
pop
mov
pop
push
push
and
pop
and
mov
jmp
cld
sub
push
sub
jle
fcomps
call
jp
xor
jns
mov
fwait
push
pop
leave
fsubs
add
cmp
adc
sub
movsb
je
adcl
repz
adc
stos
xor
ss
xor
add
and
sub
jnp
inc
push
lea
notl
dec
int3
jg
sbb
inc
or
add
icebp
stos
add
call
add
test
enter
xchg
cmp
aad
mov
loop
add
or
ret
mov
fisttpl
cld
push
mov
nop
mov
subb
lods
lcall
lods
or
pusha
mov
mov
push
or
pusha
mov
cmp
sub
inc
pop
insb
pop
sub
jb
or
sub
dec
hlt
pop
repz
orb
mov
add
xor
pop
je
outsb
mov
or
lahf
enter
repz
xor
pop
jbe
adc
into
ljmp
and
loop
inc
mov
notb
or
imul
and
mov
mov
add
ffreep
or
or
test
jge
sub
jnp
and
icebp
mov
popf
out
xchg
dec
mov
neg
push
les
outsb
and
cmp
or
frstor
in
clc
sub
sbb
jl
into
ficoml
lea
loopne
mov
push
call
sbb
jb
add
mov
loop
and
add
push
scas
loope
fstpt
push
loop
xchg
mov
push
in
pop
pop
orl
jbe
faddp
gs
push
add
push
cld
adc
push
mov
out
movsb
mov
pop
orb
nop
xor
bound
mov
add
lods
popa
decl
mov
mov
pop
inc
and
add
hlt
hlt
mov
lock
test
mov
adc
pop
test
add
xchg
mov
inc
lea
data16
movsl
cwtl
mov
sbb
movsb
repnz
lock
sub
addr16
or
inc
nop
leave
adc
xor
jne
std
mov
js
pusha
je
mov
movb
out
add
sbb
popf
mov
scas
js
pop
cmp
or
mov
and
and
imul
xor
pop
pop
mov
test
jmp
mov
jb
pop
subb
test
gs
je
mov
dec
mov
fidivs
mov
push
or
rolb
and
in
add
dec
ret
stos
inc
outsb
add
inc
js
sbb
xchg
xchg
cmpsb
inc
jb
mov
in
cmp
jmp
xor
icebp
add
repz
xchg
icebp
push
ds
push
adc
jge
sbb
call
add
leave
inc
imul
lock
lock
xchg
icebp
or
push
inc
or
mov
xorb
adc
sub
xchg
pop
rolb
roll
xadd
call
leave
push
sub
or
push
mov
ljmp
lcall
inc
adcb
gs
or
int3
dec
cltd
jae
add
pop
jo
or
inc
or
mov
bound
int3
cld
fisubs
mov
add
stos
sbb
rcl
xor
outsb
and
xchg
cmp
clc
mov
out
mov
sub
clc
inc
add
xor
sbb
mov
jae
add
mov
out
pavgb
inc
subb
pop
push
std
mov
cmp
add
pop
dec
mov
pop
push
sub
lret
cmp
or
jle
pop
sbbb
in
fstpt
rclb
dec
sarl
push
jp
outsl
imul
gs
subl
mov
jo
loope
push
faddl
js
popf
je
pop
push
sbb
int3
loopne
push
in
ljmp
pop
ret
jae
mov
addl
in
mov
clc
add
cvttps2pi
outsl
jne
pop
cmpsl
and
sti
xor
mov
shlb
sub
push
ret
addb
xor
push
jne
popa
roll
loope
mov
inc
daa
add
mov
sub
sub
dec
pop
ljmp
push
push
mov
pusha
loop
dec
push
jo
lock
mov
dec
lcall
sub
mov
push
cmovs
outsb
and
mov
mov
loopne
xchg
cmp
add
cmp
ss
add
jl
pusha
decl
clc
ljmp
or
les
xorb
jo
add
mov
xchg
push
and
outsb
int3
hlt
cmpsb
sbb
cmpsb
push
or
jo
mov
cmp
mov
mov
adc
call
mov
test
pop
addr16
ja
push
xchg
test
jb
add
call
inc
sub
pop
and
jno
adcl
and
pop
sub
or
sub
ret
pop
test
push
inc
sub
mov
movsl
adc
push
in
gs
lret
pop
out
enter
test
dec
push
in
dec
jp
outsl
adc
adc
clc
dec
or
push
movsb
mov
jmp
mov
pop
jne
imul
gs
jle
cmpsl
pop
dec
sbb
pop
es
aas
imul
adc
test
test
and
loopne
sbb
mov
dec
mov
les
mov
icebp
add
pop
movb
pop
sub
adc
scas
loope
and
or
add
add
dec
imul
add
aam
pop
cmp
or
leave
jg
fistl
add
adc
mov
clc
push
ss
decl
jge
sbb
loopne
jmp
lds
lock
mov
imul
ficoml
push
ljmp
outsl
cmp
mov
rolb
and
mov
xor
pop
mov
push
cli
or
xor
in
mov
adc
cld
mov
pop
aam
push
inc
mov
jmp
adc
dec
mov
aas
cmp
add
sub
hlt
setne
lock
mov
cmp
or
into
cli
shl
cmp
in
out
ja
addb
push
outsb
movsl
mov
inc
mov
add
int
cmpsb
add
jl
cwtl
decl
push
icebp
mov
dec
mov
dec
icebp
mov
ror
inc
mov
mov
lock
mov
inc
mov
scas
pop
mov
mov
or
addl
pop
test
jge
pop
jne
push
pop
mov
orb
sub
pop
xor
mov
jge
pavgb
cmpl
sbb
adc
ss
or
sub
xchg
test
lea
lret
xor
jo
sbb
push
pop
cmc
dec
mov
test
sub
jae
jb
cmpb
hlt
aas
sub
mov
sti
adc
add
enter
cli
pop
and
mov
jmp
push
pop
jb
dec
add
mov
add
mov
cmp
jne
cmpsb
cmp
mov
scas
mov
lea
mov
sbb
test
outsb
into
pop
pop
subb
mov
jbe
cwtl
pop
xor
adc
imul
call
jecxz
mov
or
pop
inc
add
idivl
sbb
sub
add
outsb
inc
outsl
jb
nop
fmuls
int3
rorl
jl
mov
push
adc
push
outsl
adc
sbbb
mov
xor
dec
imul
add
or
rcrb
adc
dec
test
push
rorb
jo
inc
pushf
mov
cs
mov
mov
mov
xorps
xor
mov
insl
push
ss
cld
aaa
and
lahf
add
lods
push
gs
add
adc
and
inc
lock
test
push
ljmp
or
sbb
dec
add
jl
rorb
rorb
jae
fistl
das
mov
jg
push
roll
xor
jge
call
add
add
add
sbb
cmpsb
aam
adc
push
inc
dec
add
lea
or
popf
les
int
jmp
adc
lods
sub
lods
insl
xlat
add
outsb
bound
popf
lahf
jmp
adc
xchg
sar
push
mov
adc
fsts
enter
in
in
ffreep
or
bound
push
adc
push
outsb
int
vandnps
inc
loope
sbb
inc
arpl
pop
mov
repnz
add
rolb
rorb
cmp
jb
adc
dec
push
push
mov
cld
add
incl
inc
or
cmp
sbb
push
or
push
orl
xor
jne
push
lock
xorb
xor
test
imul
sbb
notl
loopne
test
loopne
imul
mov
lsl
add
xor
mov
and
jae
jl
sub
outsb
or
xor
jecxz
jo
enter
push
adc
outsl
scas
add
mov
fdivrs
loopne
add
movsb
fwait
add
sbb
pop
das
je
imul
dec
add
pop
mov
fisubs
js
or
inc
stos
std
push
or
or
push
mov
pop
pop
sar
add
ja
mov
sbb
mov
aas
cli
sbb
and
sbb
mov
divl
in
jl
mov
jb
outsb
or
rcrl
push
nop
fs
xchg
mov
cmp
ljmp
subb
sbb
inc
shr
xchg
lcall
hlt
inc
push
adc
pop
push
cwtl
push
enter
fidivrl
adc
cmp
lds
fiadds
and
push
sbb
loopne
inc
stos
dec
xchg
cli
insb
mov
jae
inc
sarl
ds
inc
push
sbb
imul
jno
push
decl
mov
ret
nop
test
inc
sub
dec
loope
mov
fbstp
push
stos
xchg
cmp
pshufw
ficoml
scas
lock
inc
sti
mov
jmp
jbe
mov
xchg
inc
loope
xor
cmpl
push
jp
mov
jmp
pop
cmp
push
pop
insb
xor
clc
andl
adc
js
cmp
outsl
aaa
push
xor
mov
xchg
add
inc
mov
bound
mov
mov
movsb
insl
push
push
test
ljmp
dec
test
data16
hlt
loopne
add
lds
out
sub
push
cmp
or
aam
adc
imul
ss
pop
testb
into
and
inc
test
fs
mov
pop
mov
loop
sbb
adcl
cmp
add
or
sub
lcall
add
pop
inc
call
mov
pop
push
ret
cs
xchg
push
cmp
add
jl
pop
mov
clc
adcb
sbb
cmpsl
pop
daa
cmpb
and
sub
bound
xor
jl
mov
out
in
xchg
mov
push
inc
xor
hlt
inc
ret
or
add
xchg
pop
jo
xor
int
fisubs
test
divb
js
inc
sbb
push
hlt
push
adc
shlb
pushl
xor
jb
xor
mov
ljmp
inc
pop
arpl
pop
inc
ja
scas
lods
les
ret
mov
test
push
mov
stos
fdivrp
jge
cli
jbe
xor
jb
xchg
je
xor
and
dec
jb
mov
mov
jg
insl
ret
loopne
xor
add
imul
push
xchg
mov
loope
mov
jle
fcmovu
mov
test
adc
cwtl
cmp
decl
std
sub
add
adc
pop
dec
sub
push
sti
ret
add
hlt
mov
shrb
push
lods
push
adc
pop
cltd
aam
push
in
and
pushf
xchg
outsb
adc
sti
and
add
jne
aaa
pop
add
inc
stos
dec
call
xor
cmp
out
lcall
js
lock
rcrb
cld
adc
add
pop
subl
xchg
loope
mov
mov
push
std
dec
ficoml
lret
and
xchg
xorl
cs
adc
push
xchg
jle
test
jmp
std
insl
fdivr
push
call
add
lods
xchg
inc
insb
push
arpl
pop
jg
rcll
test
movl
mov
mov
test
xchg
pushf
or
testb
push
xchg
or
jp
jae
ficoms
addl
in
xchg
call
sbb
pop
pop
mov
pop
and
arpl
ret
inc
inc
fisubrl
add
xchg
rcll
and
rcl
fcomip
xor
and
xor
lods
loope
cltd
mov
mov
jne
mov
inc
and
mov
mov
lahf
ficoml
sbb
rolb
and
mov
lock
cld
add
xor
mov
rol
pop
inc
sbb
std
xor
aam
cmp
ja
adc
push
push
push
inc
out
add
dec
sbb
add
js
roll
add
lret
add
push
jae
outsl
sbb
pop
fisubrs
push
inc
inc
add
incb
push
dec
sub
jge
int3
call
or
fs
mov
lret
and
sub
pop
lods
inc
loope
cmp
shl
sub
pop
addr16
outsl
add
lret
pop
adc
mov
jne
add
mov
shlb
rcrb
adc
jle
inc
push
sti
xchg
cmp
mov
outsl
nop
mov
addb
mov
mov
mov
xor
dec
rsm
or
filds
sub
sti
in
dec
insb
mov
imul
push
js
pop
add
adc
xor
pop
mov
faddl
popa
sbb
inc
xor
clc
jle
scas
pop
sub
xchg
and
push
es
cmp
xchg
xchg
rcl
lcall
inc
mov
shrl
sahf
mov
pushf
push
jo
and
xor
inc
mov
lods
jne
pop
in
cmc
int
cmp
xorb
clc
das
fdivrp
popf
push
gs
cmp
test
mov
mov
and
adc
mov
ficoms
pop
mov
cmpsb
or
pop
out
push
jo
outsb
jmp
lock
cli
push
fwait
insl
mov
outsl
ret
adc
jle
push
adc
lods
daa
ljmp
dec
dec
gs
jo
jle
sbb
hlt
ret
adc
ficoml
leave
les
lock
mov
dec
rclb
dec
jo
hlt
adc
mov
mov
inc
xchg
lock
adc
push
lret
lods
subl
lcall
lock
hlt
or
mov
call
add
addb
xorl
add
ljmp
xor
das
andb
inc
sub
aas
push
in
test
pop
pushf
sub
mov
push
pusha
inc
nop
and
dec
pop
dec
adc
int3
fsubrs
adc
inc
cld
cs
xor
and
cmpsl
inc
cld
inc
js
test
int3
dec
cwtl
or
mov
push
ja
or
cmpl
ljmp
orb
in
jmp
fdivr
add
clc
loope
xlat
test
push
adc
adc
pop
pushf
mov
push
cs
mov
mov
inc
arpl
stos
xor
dec
inc
pop
adc
xchg
dec
push
data16
jo
test
shll
nop
push
movzbl
sbb
mov
addb
test
sahf
jbe
inc
jo
and
and
imul
xchg
and
adc
push
shll
popf
rol
mov
adc
dec
pop
test
or
or
pusha
inc
jne
fwait
and
pusha
data16
pop
pop
decl
pop
push
fs
push
imul
xchg
out
sub
icebp
push
mov
dec
mov
dec
ljmp
and
sar
cmp
or
cli
push
bound
rclb
pop
inc
movsl
push
dec
mov
push
adc
fnstenv
mov
mov
mov
andl
lea
sub
dec
dec
lahf
in
mov
add
push
mov
lea
les
mov
test
scas
insl
fiaddl
outsl
sub
int3
fcoms
mov
sub
decl
xor
lea
outsl
mov
inc
push
push
insb
ret
xchg
lret
dec
notl
fucomi
aaa
xchg
and
or
mov
xor
in
lea
push
pop
mov
cmc
cmp
mov
gs
mov
or
movsb
sbb
out
repnz
std
arpl
call
jne
adc
add
push
jne
cmp
cmp
push
movsb
popf
nop
push
jmp
lahf
push
mov
gs
sbb
adcl
xor
fsubs
xlat
adc
inc
or
pop
jg
addl
into
fmuls
les
or
inc
adc
ds
sti
or
inc
mov
inc
mov
push
add
movsb
pop
xchg
lock
mov
das
add
into
ja
loope
and
bound
fs
andl
ds
mov
roll
mov
sarb
stos
ret
shlb
inc
je
sbb
add
sbb
loopne
sub
je
push
jne
call
adc
pop
inc
cmp
jo
movsb
mov
rorl
jo
int3
push
push
shll
jb
mov
je
sahf
pop
dec
mov
jl
pop
and
adc
cmp
stos
xor
adcl
dec
mov
mov
adc
push
xor
decl
cmpsb
push
filds
cwtl
xchg
pusha
rcll
push
adc
jb
inc
push
adc
lods
aam
pop
test
ret
inc
popf
into
jae
pop
sub
cmp
adc
test
jb
clc
add
pop
push
jg
push
fwait
sbb
and
sub
mov
inc
stos
push
fdivrl
call
popa
std
push
push
mov
sahf
and
push
inc
add
mov
sub
jmp
pop
and
add
dec
jno
or
clc
gs
sbb
push
faddl
in
in
cld
lret
outsl
pop
jle
and
inc
inc
sbb
sti
call
fdivl
xor
dec
outsl
cld
test
jmp
push
call
call
out
sub
jno
xchg
jae
sbb
adc
and
inc
outsb
incl
add
sbbb
push
dec
call
faddl
and
les
mov
and
jnp
and
adc
mov
xor
or
inc
scas
sti
ss
push
inc
nop
push
je
aaa
orb
rcrb
and
push
mov
movsl
cmp
and
adcl
outsb
adc
test
bnd
mov
adc
popa
scas
pop
test
dec
lods
mov
lahf
out
add
mov
gs
xor
mov
add
dec
movsb
jg
popf
mov
jp
call
aad
and
lcall
andb
push
adc
mov
mov
xchg
andb
or
loope
dec
pop
cld
adc
adc
sub
cmp
adc
scas
mov
and
scas
or
push
xchg
sbb
pushf
or
adc
shlb
nop
or
clc
jmp
mov
jp
test
or
and
inc
sbb
mov
inc
lea
int3
mov
pop
push
inc
or
xchg
enter
idivb
imul
shll
mov
mov
jne
jo
pop
inc
adc
data16
test
insb
gs
fwait
sar
or
addb
lret
mov
stos
dec
inc
inc
jmp
sub
adc
addr16
dec
jne
inc
and
inc
dec
dec
mov
jo
inc
pop
scas
mov
xchg
add
inc
sti
insb
and
je
inc
inc
jge
loope
cmc
push
int3
xor
dec
sbb
imul
jbe
incl
iret
add
dec
arpl
int3
fidivl
mov
pop
jne
push
loope
adc
test
rclb
rcrb
ja
hlt
mov
and
jo
and
ljmp
cmc
gs
mov
repnz
cmp
and
mov
fcomip
push
je
orb
nop
lea
imul
lock
adc
cmp
adc
or
in
adc
les
mov
js,pn
scas
data16
cmp
sub
cmp
xchg
pop
sbb
xchg
mov
or
ss
lcall
andl
or
leave
cmp
sbb
sahf
or
movsb
mov
mov
pusha
mov
push
clc
je
imul
dec
lret
add
lods
pop
push
inc
inc
dec
add
mov
or
pop
in
cwtl
dec
test
jge
insl
xor
in
cmp
add
sbb
faddl
iret
xor
imul
pop
rcl
mov
mov
aam
inc
in
aam
xorl
push
adc
push
sbb
pop
push
movsb
clc
pop
push
xchg
sbbl
cmp
movsb
inc
lea
sarb
in
ljmp
aad
adc
pushl
ret
xor
push
sbb
andb
cmpb
xlat
pop
pop
sbb
sub
jb
push
mov
test
or
dec
push
mov
rcrb
daa
leave
lcall
addl
das
mov
jecxz
leave
inc
js
sub
mov
hlt
xorl
pop
and
inc
xchg
fstpl
add
data16
sbb
cs
sbb
mov
mov
jmp
cmp
add
pop
pop
adc
push
adc
xchg
scas
xchg
aam
lret
and
idiv
jne
adc
ja
arpl
sbb
in
bound
movl
mov
adc
mov
mov
fisubrl
lds
pop
xchg
test
cmp
and
sbb
sbbl
mov
jl
push
cmp
adc
adc
sbb
fcoml
dec
xchg
add
pop
test
lea
movl
test
stos
test
shlb
aaa
orb
pushf
lret
push
cmp
rclb
mov
ret
loop
flds
mov
sahf
mov
jl
push
test
mov
push
cltd
push
hlt
adc
jmp
jbe
mov
pop
mov
mov
test
jl
lcall
add
push
mov
sub
xor
mov
pop
ds
ret
lcall
lock
mov
cli
outsl
xor
sarb
inc
leave
test
jne
movsl
mov
xchg
adc
pop
repz
inc
cmp
call
invd
data16
inc
inc
popa
add
push
add
jne
xor
adcl
call
and
push
pop
cmp
push
inc
mov
cmp
inc
dec
sub
mov
inc
dec
add
dec
pusha
jecxz
in
jae
and
jne
or
mov
mov
fldl
jmp
push
movsb
mov
outsl
adc
test
jle
stos
mov
xchg
gs
adc
out
nop
test
xor
add
popa
lcall
cli
push
xor
jmp
into
jnp
xchg
sbb
nop
mov
test
jb
mov
cmp
mov
xchg
ret
dec
push
es
adc
int3
mov
add
inc
mov
add
adc
sub
push
xchg
sub
test
xor
aas
push
jo
adc
push
push
lods
mov
cli
rol
push
ret
mov
push
push
rorb
add
pop
mov
scas
pop
les
cwtl
test
lret
jmp
dec
inc
adc
push
jg
mov
notb
rol
call
shlb
subb
adc
xor
pop
or
xchg
cli
test
mov
jae
popw
int
clc
or
or
dec
pushf
or
rolb
push
roll
push
push
cli
jne
je,pt
inc
mov
out
or
rclb
rolb
test
inc
xchg
sbb
in
sub
in
cmc
pop
fisttpl
rorl
or
lcall
sub
and
mov
mov
dec
rolb
or
es
pop
or
pop
mov
push
cmp
push
frstpm(287
call
nop
add
mov
mov
push
pushf
dec
push
ljmp
cli
cmpb
roll
cmpsb
pop
sbb
dec
loopne
mov
shlb
test
filds
stos
jp
movsb
cmp
cwtl
mov
aad
and
aaa
fldz
push
xor
inc
mov
jae
push
cmp
imul
adc
pop
jb
adc
pop
sarb
add
mov
push
push
adc
cwtl
jl
lcall
sbb
movsb
lock
adc
scas
adc
and
fcomps
out
cmp
jo
int3
inc
je
mov
loopne
sbb
lods
cwtl
mov
xchg
ja
test
cmp
or
pop
mov
ds
pusha
shlb
popf
shl
stos
fs
sarb
and
sub
xor
cs
jb
add
mov
push
pop
sbb
inc
xor
inc
xchg
sub
fldl2e
cmpsb
scas
mov
in
push
or
aad
fdivp
in
mov
push
or
dec
mov
push
test
ss
xchg
mov
jp
out
or
test
push
test
pop
out
adc
push
jo
lds
mov
push
adc
aam
movsl
mov
mov
or
rcl
mov
jns
push
movsb
nop
sub
dec
pop
aaa
push
addb
xor
ss
mov
test
push
fmuls
mov
pop
cli
xor
xlat
gs
add
inc
mov
pushf
jne
ds
xchg
sbb
inc
sub
loop
scas
push
test
xor
xchg
ret
cmp
lods
add
aam
xor
lret
cmpsb
decb
dec
negb
aas
or
mov
sbb
mov
cs
push
add
popa
pop
mov
mov
and
mov
sbb
or
jb
lods
xor
inc
shl
pop
cmp
ret
inc
sbb
or
dec
into
stos
sub
cmc
or
pop
repz
push
in
pop
test
sbb
mov
and
fadds
inc
imul
push
push
int3
push
dec
inc
fs
or
imul
and
xchg
mov
mov
push
and
insl
lods
lea
jb
adc
pop
sbb
pop
dec
fmul
xchg
aaa
int3
xor
inc
inc
dec
mov
mov
testl
push
imul
and
add
dec
aam
in
idiv
cmp
cld
inc
mov
xor
insb
addl
and
icebp
imul
add
roll
mov
push
pushl
and
xchg
ret
add
cmp
push
jg
pop
cmp
arpl
insb
imul
add
add
ljmp
mov
mov
and
push
dec
xor
sbb
dec
js
mov
in
push
add
add
mov
jae
inc
scas
pop
out
stos
mov
ret
nop
rolb
mov
loope
xor
jmp
jnp
or
pop
out
repz
jnp
mov
mov
jl
xor
cmp
mov
or
cld
adc
inc
out
pop
add
imul
sub
loop
jl
jecxz
into
or
jbe
jbe
push
fsubl
sbb
jmp
incb
mov
sub
fisubs
leave
dec
loope
mov
mov
xor
add
dec
push
xor
cs
in
fdivrl
add
ds
je
inc
add
test
clc
push
fidivs
cmc
shll
std
pop
and
cmp
mov
cmp
add
or
ret
jns
pusha
ss
pop
fildl
mov
mov
mov
ret
adc
incb
int
dec
fisttps
fildll
clc
je
js
cmp
jl
jp,pn
notb
mov
push
mov
inc
pushf
add
ja
cli
mov
ret
loopne
adc
clc
xchg
cmp
mov
push
sbb
clc
adc
sbb
xor
clc
sbb
subl
out
cwtl
insb
repnz
push
bound
or
cmpsb
rorb
call
shll
pop
in
test
loopne
in
push
dec
in
vmread
or
stos
mov
add
dec
dec
fs
rcll
fdivl
dec
push
and
mov
or
iret
incb
and
pushl
pushf
decl
ss
inc
sbb
js
std
sub
fisttpl
jb
out
ret
inc
idivl
xchg
lock
lods
cmp
mov
cmp
inc
cmp
push
xchg
stos
push
mov
fsubr
movsb
fldl
cmp
or
xor
adc
jae
dec
and
jbe
call
cmp
inc
adc
aad
mov
push
mov
cwtl
sub
sbbl
jo
or
sbb
rorb
xchg
push
ret
clc
loope,pn
push
scas
mov
insb
pusha
inc
mov
push
dec
adc
mov
pop
add
or
mov
test
xor
adc
adc
xor
push
mov
dec
aas
cld
leave
inc
test
and
mov
or
cltd
rolb
adc
or
clc
sub
adc
or
lds
movsl
mov
insb
outsb
adc
mov
add
sahf
jne
fs
inc
popa
rcl
mov
push
gs
ficoml
ret
daa
inc
dec
mov
sub
test
xor
pusha
xchg
dec
xchg
add
shl
dec
and
mov
sarb
je
pop
push
adc
mov
inc
push
ret
sbb
jle
mov
mov
sub
push
xor
cmp
mov
mov
inc
pop
sub
loopne
test
xlat
mov
pusha
cli
and
add
mov
lock
sbb
inc
jnp
mov
call
adc
aad
dec
or
popa
add
sarb
push
xor
iret
xor
cmp
int
sbb
pop
mov
adc
push
pop
cwtl
test
mov
adc
pusha
add
wbinvd
inc
add
out
mov
xor
push
adc
loop
shll
out
inc
test
xchg
sub
cli
xchg
and
pop
mov
push
mov
push
xchg
mov
mov
lea
fcoml
test
cmp
or
mov
add
xchg
popa
mov
mov
insb
sbb
push
fwait
clc
test
cmovg
shll
xchg
push
mov
mov
les
push
rclb
in
mov
leave
mov
push
cwtl
mov
cmp
xor
push
aas
mov
fbstp
or
adcl
mov
cld
jge
cli
test
test
jmp
cmp
rcl
inc
jnp
xor
xchg
scas
and
fdivr
mov
sub
ret
insb
jne
nop
add
ljmp
lods
or
enter
repnz
mov
pop
inc
pop
lock
xor
cli
mov
jmp
cs
adc
adc
pop
inc
pop
lods
inc
mov
mov
orb
jmp
cmp
bswap
sbb
mov
enter
xchg
or
add
addr16
dec
lea
push
sbbb
adc
les
repz
sbb
call
push
in
push
incl
jno
pop
cmp
pop
sub
or
je
lcall
test
jp
mov
adc
cmp
or
adc
mov
test
insb
adc
cmp
mov
mov
insl
dec
cmp
add
mov
adc
push
inc
mov
ss
push
lods
cmpsb
lock
mov
cmp
jbe
mov
add
dec
pop
mov
lock
ljmpw
insl
jb
mov
popa
loop
gs
pop
sbb
mov
ret
push
outsb
dec
loopne
cli
nop
addb
stc
int3
rcr
test
xor
popa
mov
or
std
dec
clc
rclb
dec
push
cli
push
je
and
fmull
mov
or
dec
sbb
dec
call
popa
inc
add
pop
fldl
sbb
in
cmpsb
cmpsb
jae
addl
adc
mov
cmp
aam
cmp
sarb
sbb
sub
mov
adc
inc
cli
outsl
jo
cmpsb
jnp
test
clc
out
test
and
subl
adc
cmp
gs
mov
cmp
pop
movsb
addl
dec
or
xor
loop
imul
pop
faddl
push
xor
lock
jp
aam
push
mov
pop
testb
and
cmp
gs
add
sub
push
cmpsl
cmp
cmp
in
mov
or
pop
aam
in
push
test
push
mov
cld
jne
add
and
cmpl
push
je
pop
out
add
movsb
rorb
xor
push
sub
push
adc
mov
insb
or
mov
pop
sbb
inc
lea
jmp
add
push
mov
adc
add
or
insb
or
popa
xor
mov
pop
les
jae
adc
ret
xchg
xchg
hlt
aam
rcr
push
xor
adc
idiv
sahf
jb
pop
addr16
cmp
paddsb
xlat
test
lock
call
or
dec
inc
aam
int
std
dec
data16
pop
add
cmc
pop
and
mov
mov
ficoms
inc
mov
xor
xor
add
dec
js
ret
js
inc
cmp
mov
outsb
push
outsb
dec
push
and
pop
fldcw
adc
mov
test
rcl
inc
lea
push
pop
inc
jo
lods
xor
dec
or
decl
dec
sub
push
xor
xchg
mov
add
inc
sub
aas
stos
rclb
add
mov
inc
decl
dec
pop
push
movsb
push
ljmp
inc
mov
dec
mov
fsubrs
decb
push
and
mov
adc
pop
or
mov
cli
bound
adc
mov
sbb
cmp
shr
addb
pushf
aam
loopne
mov
add
test
call
sbb
ret
or
add
mov
das
insb
loope
push
adc
adc
push
mov
jl
inc
cmpl
ss
push
push
xor
jge
movsb
nop
sbb
or
mov
jb
mov
aaa
xor
sub
mov
push
adc
mov
scas
add
jbe
sar
jo
jge
imul
jb
aaa
pop
and
loop
test
lret
ss
mov
inc
or
clc
push
pop
adc
orb
push
aas
int3
daa
pushl
xchg
pop
inc
ret
pushf
cmp
adc
sbb
sbb
fiadds
sbb
cmp
mov
or
rcrb
adcw
xchg
clc
mov
xchg
jne
dec
dec
call
inc
dec
add
addr16
jnp
data16
dec
pop
pusha
jns
sti
out
js
and
stos
test
ljmp
stos
movsl
dec
cli
sbb
fdivl
iret
int3
push
fsubrs
inc
test
cwtl
nop
pop
fs
adc
cmp
mov
jo
jo
or
mov
dec
mov
push
bound
inc
push
in
push
cmp
dec
clc
inc
cltd
cmpb
cmc
adc
pushf
mov
and
sbb
mov
or
clc
icebp
mov
in
mov
add
es
or
xor
sbb
xor
push
shrb
mov
cmp
inc
imul
adc
jmp
inc
shlb
mov
leave
jp
stos
lods
adc
nop
jno
loope
xchg
inc
jbe
or
imul
js
je
call
lcall
and
add
test
dec
mov
es
outsb
not
out
jne
cmp
add
cmp
into
sub
out
loop
aam
jo
lock
sbb
fisttps
rolb
add
je
adc
test
jb
int3
test
xchg
je
add
push
xchg
pop
outsb
loope
in
adc
mov
pop
add
dec
mov
or
mov
in
notb
push
or
and
sub
mov
adc
inc
clc
pop
push
mov
icebp
mov
cmpsb
mov
add
inc
bound
xchg
cs
xor
andb
or
push
and
das
push
mov
mov
andb
divb
mov
push
adc
hlt
mov
aaa
lods
mov
push
dec
cmp
sub
aad
mov
pushf
xorl
jg
push
adc
dec
push
or
ja
lods
orb
push
pop
mov
mov
insl
inc
push
sbb
push
jle
sub
cli
xor
ret
xor
je
movsb
pusha
jg
add
sti
push
gs
mov
call
sbb
in
mov
clc
aas
jbe
cwtl
cmpl
data16
adc
mov
inc
rorb
scas
sbb
push
xchg
pcmpeqd
cmp
adc
cmp
mov
cltd
mov
aas
loopne
and
mov
fwait
adc
add
pop
xor
inc
push
adc
pop
add
sbbb
pushl
test
xor
pop
dec
jl
jno
pop
daa
mov
cltd
inc
sub
xchg
stc
je
in
outsb
rcrl
pop
and
sbb
fadds
loope
shrl
ljmp
xchg
jge
sub
cwtl
jne
ds
jp,pn
or
xor
add
sbb
cmp
in
xorl
adc
add
dec
push
jbe
mov
push
or
xchg
mov
lock
xor
inc
ret
pop
cwtl
or
mov
add
mov
dec
icebp
push
xorb
inc
mov
push
mov
jg
and
cmp
repnz
rolb
xchg
and
test
mov
sbb
js
xor
je
adc
daa
lods
add
pop
cmp
adc
xor
mov
loope
mov
push
dec
negb
loope
test
push
in
stos
icebp
outsl
adc
inc
stos
and
cmp
mov
leave
cld
aad
fisttps
jle
and
je
push
es
loopne
scas
lods
inc
je
mov
xor
mov
testl
adc
cmp
jnp
adc
pop
gs
inc
daa
scas
popf
and
cld
add
les
fstpl
add
shr
orl
fs
push
decl
push
mov
pop
les
push
cmp
xchg
pop
mov
fldl
mov
xor
fidivs
add
sub
jg
lock
fmuls
add
xchg
arpl
xor
push
push
out
xchg
mov
add
push
call
cmp
inc
push
lcall
mov
insb
jmp
jb
jae
jns
les
push
pop
stos
or
cmp
or
rolb
mov
push
int3
mov
shrl
or
mov
cld
xor
dec
popf
mov
xor
pusha
jge
stos
dec
daa
insb
xor
jle
pop
xor
js
jns
es
cmc
int3
mov
cmp
inc
or
jae
addb
sub
ss
xor
repz
mov
push
add
daa
inc
sub
mov
ret
add
je
pop
inc
rorl
inc
jle
subb
cmp
add
mov
and
pushl
std
push
repnz
mov
add
xor
cmpsb
mov
mov
loopne
inc
and
pause
fistps
and
pushf
mov
mov
call
push
add
cwtl
out
xchg
push
xor
xor
decl
push
jo
das
loopne
mov
int3
sbb
add
inc
dec
test
dec
mov
lcall
imul
lahf
or
inc
sbb
insl
xchg
gs
incb
mov
subl
rclb
add
sub
sub
loopne
out
sbbb
comiss
adc
dec
jge
stos
mov
adc
in
popf
or
es
dec
sbb
mov
adcb
test
adc
inc
loope
mov
inc
xor
arpl
mov
mov
push
fiadds
add
adc
mov
rol
jp
outsl
pop
or
mov
pop
add
xchg
fdivr
lods
push
adc
addr16
or
gs
mov
rol
xor
sbbb
push
and
loope
jbe
mov
clc
das
imul
push
jbe
xchg
sbbb
push
or
les
mov
lods
dec
cld
movsb
and
dec
faddl
xor
or
call
std
mov
insl
xchg
dec
sahf
pop
stc
call
jne
pop
shll
add
dec
push
pop
scas
jmp
lret
inc
inc
mov
mov
jo
pop
or
mov
incl
stos
aas
inc
pop
push
addr16
js
jno
lods
adc
adc
mov
cmp
cmp
push
rcrl
loop
cmc
push
sub
sbb
int
push
xchg
adc
cmp
add
dec
ret
pop
icebp
sub
in
into
stos
pop
pop
enter
rclb
inc
dec
mov
xor
pop
xor
mov
push
dec
nop
mov
rorb
mov
call
mov
inc
arpl
mov
push
into
or
inc
and
sarb
mov
loopne
push
inc
or
push
adc
mov
ds
mov
push
sbb
dec
cmpsb
popf
mov
jbe
std
gs
test
sub
gs
or
dec
cmp
dec
jp
push
push
inc
or
ret
ljmp
push
xlat
psubusw
out
int3
outsb
cli
mov
pushf
sbb
xlat
mov
dec
pop
pop
pop
ret
push
cmpsb
xchg
pusha
or
jp
pop
xor
nop
loope
xor
add
call
push
testl
leave
imul
lods
push
loop
test
mov
cli
xchg
sbb
and
cmp
movsl
fs
mov
test
lock
test
je
pop
movsb
and
mov
push
cli
push
popa
sar
sub
rolb
and
lcall
mov
add
fmuls
cs
adc
adc
adc
and
inc
add
in
mov
pop
jae
arpl
sbbb
adc
ja
or
das
lret
or
adc
or
add
cmpsl
xor
incl
or
jne
rclb
mov
ss
pop
sub
rorb
test
test
cmpsb
or
xor
push
fs
frstor
nop
mov
and
xor
jp
push
push
push
addr16
and
or
cmp
loop
mov
outsl
xor
sub
xor
mov
je
cmpb
xchg
or
mov
xor
neg
and
push
notb
ljmp
push
jle
mov
or
not
wbinvd
mov
lcall
cmp
dec
loop
addl
jne
push
sbb
js
insl
stc
ja
stos
add
sbb
xor
scas
push
adc
fs
jp
mov
mov
xchg
rorb
decb
nop
cltd
andb
test
xor
lret
or
lret
sarb
pop
je
lods
xchg
push
in
jecxz
lret
and
insb
sbb
push
lds
adc
adc
push
jo
clc
and
or
jg
lds
rolb
and
jle
or
mov
mov
fs
hlt
sub
incl
repnz
inc
sti
dec
sbb
cld
xor
adc
scas
adc
adc
dec
clc
fists
retw
and
inc
jo
mov
inc
hlt
je
xchg
inc
xlat
sbb
push
mov
dec
mov
push
push
addr16
xor
xchg
push
xchg
jg
adc
adc
mov
add
xchg
adc
dec
inc
out
adc
outsl
dec
jg
jns
cmp
add
sar
ret
hlt
je
pop
fdivl
sub
lock
or
cmovle
adc
daa
push
adcl
jg
loopne
sarb
add
pop
push
iret
add
mov
mov
or
xchg
leave
test
popl
cltd
inc
and
aam
xor
jl
fbld
sub
xor
adc
lock
mov
les
mov
sbb
xor
mov
lods
xor
xchg
mov
lods
es
sbb
ss
inc
fdivrs
push
es
adc
dec
jl
jmp
xor
pop
pop
inc
shrl
add
dec
testb
xor
fs
add
push
mov
xchg
fsubrp
push
adc
and
mov
xacquire
test
enter
test
jno
add
test
lods
aaa
push
data16
les
fcompl
mov
cmp
add
aam
cmp
pop
movl
adc
mov
mov
xor
clc
nop
cmpsb
les
fimull
and
fs
mov
repz
xor
inc
push
push
cs
add
lods
icebp
push
add
cmp
ret
add
mov
cmpsb
pop
dec
movsb
orl
pop
fbstp
int
int3
jge
gs
imul
adc
les
sub
hlt
xbegin
dec
ja
mov
adc
mov
mov
jae
pop
in
lds
mov
roll
push
add
sbb
inc
pop
in
inc
sbb
add
fldt
sub
psrad
dec
insl
or
dec
or
mov
enter
add
rcrl
push
sub
jb
xchg
leave
push
push
or
or
incl
sbb
lock
jl
data16
adcb
sub
jge
push
les
mov
lods
imul
sbb
ret
loopne
cmpl
cmp
fsts
loop
std
sub
daa
lock
and
loop
jg
push
cmp
fs
add
cs
imul
aam
jecxz
xchg
cmp
sbb
add
shlb
mov
and
int3
adc
mov
jo
xor
xchg
gs
adc
sbb
ret
loope
xor
pusha
inc
add
push
daa
fs
inc
aaa
sub
inc
xchg
test
notb
mov
sbb
dec
cmp
mov
into
outsb
sub
jo
adc
or
shlb
xorb
into
lods
cmpb
imul
insb
xor
push
xor
stos
or
pop
add
into
orl
mov
push
call
cmp
lret
and
dec
lock
in
andl
popa
mov
fs
loop
push
add
mov
pop
jne
insb
testl
mov
push
outsl
jo
sahf
or
test
cli
inc
call
icebp
sub
and
lods
test
orb
mov
jecxz
cmp
rorw
mov
or
sarl
stc
mov
cwtl
adc
sub
dec
pushf
xor
push
movb
fidivl
jecxz
add
cli
js
sub
and
cmpsb
push
inc
mov
push
push
push
cmp
pop
mov
sbb
xorb
or
dec
lock
pushf
pop
data16
mov
dec
sbb
mov
dec
push
cmpsl
testb
divl
adc
dec
and
and
adc
jl
stos
dec
pop
push
enter
ja
incl
inc
shrb
mov
fadd
test
or
mov
mov
mov
and
movsl
fs
nop
sub
jg
push
dec
js
xor
inc
dec
or
add
push
clc
mov
inc
ret
mov
andl
lcall
push
push
add
sti
push
lock
add
orb
and
adc
test
sbb
inc
test
cmc
sbb
mov
outsb
fldt
or
sbb
add
fs
or
pusha
ret
mov
sbb
ror
push
popa
push
movsb
fs
scas
xchg
mov
lret
jnp
dec
nop
lcall
mov
xlat
js
dec
or
sub
pop
xchg
aam
xchg
jae
sbbl
pop
or
add
or
xor
nop
sarb
ret
sbb
insb
cmp
ret
ficoms
and
in
test
call
mov
mov
insb
scas
setge
ss
inc
std
mov
push
add
shll
and
cwtl
sarb
fs
jbe
aaa
call
inc
sub
push
rclb
movsb
aaa
out
push
or
bound
jl
pusha
rcl
xor
movsb
iret
pop
clc
fmuls
fidivs
adc
mov
adc
xor
adcb
movsb
inc
mov
lock
adc
adc
xor
push
sbb
jg
popf
inc
cmp
push
test
stos
add
popl
adc
xchg
loop
sbbl
push
fiaddl
test
jbe
aas
dec
call
push
cmp
test
add
pop
mov
jmp
mov
push
leave
add
add
sbb
xchg
andb
les
or
mov
je
mov
cmpb
adc
pushf
dec
inc
daa
dec
xorb
clc
add
sub
out
adc
outsb
clc
mov
mov
mov
cmp
jne
pusha
inc
ljmp
or
ja
andb
aas
enter
xor
jl
inc
loopne
or
cmpsl
call
daa
dec
test
push
sub
add
int3
and
push
cmpsl
push
or
or
sub
inc
xchg
adc
adc
and
push
mov
inc
push
push
dec
push
or
or
in
cld
xchg
pushf
mov
call
int
and
push
or
adc
rolb
dec
mov
jb
mov
jg
mov
inc
stc
inc
jb
dec
das
lea
add
xor
pop
cmp
dec
ffree
inc
cld
add
xor
fimull
scas
hlt
pop
cld
stos
outsb
cs
or
mov
dec
adc
push
or
addb
inc
je
jbe
mov
add
das
sbb
mov
sub
xchg
mov
lods
and
lods
mov
mov
mov
insb
dec
and
jo
cmp
sub
or
idiv
mov
cwtl
cmp
pop
rorb
and
mov
ret
add
hlt
sub
jg
sub
add
inc
in
push
ja
cmp
jg
dec
sbb
jle
and
aam
jp
adc
add
lcall
push
bnd
lock
push
jecxz
mov
lock
or
jmp
dec
pushf
adc
fstpt
js
sbb
or
jmp
cmp
je
test
mov
pop
out
adc
sub
add
adc
leave
jne
sbb
or
in
mov
xor
push
test
xor
mov
pop
and
mov
sbb
mov
mov
pop
dec
and
mov
outsb
movb
outsl
mov
lcall
insb
jns
mov
pop
adc
inc
add
enter
std
decb
incl
add
cmp
or
andb
inc
pushl
pop
add
inc
mov
push
mov
js
or
movnti
mov
addl
add
pop
sar
rcll
shlb
andb
mov
cmpsb
cmpl
cmp
xorl
and
cmp
push
cmpsl
xor
gs
loop
je
mov
fdivp
test
fisubrs
sub
imull
fwait
in
xchg
xor
clc
push
jnp
mov
xor
insb
mov
sbb
les
insb
leave
xchg
sub
dec
rol
jge
pusha
ret
xchg
and
mov
subl
sbb
sbb
in
outsl
add
fwait
sbb
inc
inc
sub
sub
mov
jg
push
sbb
mov
es
cmpsb
add
test
add
insb
or
mov
hlt
fs
inc
insb
cmp
xchg
rorb
imul
xchg
gs
gs
testb
icebp
call
push
mov
movsl
mov
je
mov
mov
add
movsl
push
lcall
jb
jb
ja
out
adc
arpl
adc
push
xor
add
push
fdiv
pop
js
rol
add
rclb
in
add
push
add
fs
pop
shl
xlat
mov
mov
add
sbbb
mov
aam
jne
aam
test
pusha
lock
pop
pop
dec
es
jnp
sub
ss
xor
ljmp
fmull
les
mov
shlb
push
adc
in
inc
push
insb
push
dec
mov
sub
icebp
mov
fs
mov
int3
mov
push
andl
mov
lcall
pop
cmp
jecxz
andb
fdiv
add
test
movsb
dec
or
aas
adc
sbb
add
data16
add
adc
mov
int3
inc
inc
mov
push
and
arpl
dec
call
pop
mov
enter
sar
dec
or
test
sbb
jo
outsb
fstpt
jle
xchg
sbb
mov
xchg
mov
out
cli
or
or
les
and
loopne
pop
add
inc
nop
adc
inc
cmp
sbb
and
pusha
sarl
mov
and
ficompl
cld
add
fimuls
mov
add
dec
fstl
aam
ljmp
movsl
lret
xchg
cli
adc
mov
push
repz
push
ficoms
repnz
jmp
je
repnz
sub
fcoms
test
andl
push
fidivrl
mov
adc
add
pop
lea
mov
push
inc
mov
add
adc
fisttpl
ret
and
cld
adc
movsl
jp
push
pop
lea
add
xchg
adc
cmc
insl
sbb
pop
lcall
js
mov
test
and
xchg
mov
mov
sahf
mov
cmp
jmp
inc
mov
push
aam
or
jbe
fcoms
aaa
mov
fidivrs
add
push
xchg
push
les
jg
mov
bound
mov
lds
ss
adc
insl
mov
fsubs
aas
mov
adc
jp
inc
js
or
test
cli
leave
adcl
sti
add
and
push
stos
inc
dec
inc
mov
movsb
pushl
lock
or
call
xor
jge
rcrl
pop
inc
xor
or
sete
mov
add
mov
push
je
cmp
add
and
push
imul
loope
add
mov
call
cmp
pop
jle
inc
cmp
cld
or
outsl
inc
test
mov
adc
mov
in
ja
cmp
insl
shl
and
int3
call
jecxz
bound
add
push
pop
adcb
mov
mov
leave
dec
loope
fistps
inc
int3
mov
mov
lcall
fsubl
sbb
fmuls
je
je
pop
adc
mov
sbb
xor
movsl
sub
dec
ja
push
cmp
movsb
hlt
aaa
mov
arpl
shrb
push
out
call
punpcklwd
call
stos
imul
jb
adc
jnp
loopne
xchg
jb
inc
int
inc
ljmp
pop
adc
push
clc
mov
push
mov
ret
push
mov
dec
loope
sbb
push
adc
sub
pop
mov
sub
and
addb
js
push
xchg
fiaddl
push
dec
lods
or
lock
push
mov
je
inc
shlb
inc
es
lret
push
mov
adc
dec
pop
ret
jo
xchg
cmc
jg
jp
inc
cld
lods
rolb
lahf
add
les
js
testb
xchg
std
pop
incl
sub
test
mov
mov
mov
pop
insl
push
shlb
aam
jo,pt
mov
cld
outsb
int3
xor
mov
lret
pop
and
mov
dec
dec
call
insb
test
ret
stos
and
sbb
add
jae
sti
push
push
jge
stos
sbb
add
outsl
int3
add
sbb
add
and
aaa
sub
or
hlt
adc
dec
jne
mov
adc
xchg
dec
or
cmp
loopne
mov
xor
jae
jbe
jb
lock
int3
ret
xor
jbe
sbb
imul
loopne
cmpsb
test
lea
mov
mul
ret
add
mov
ret
push
push
xorb
int3
jae
shlb
mov
cmpb
add
inc
or
test
sar
xor
push
mov
add
jno
jle
sbb
ds
scas
scas
sbb
cmp
xchg
push
pusha
test
inc
in
pop
pop
and
movd
fidivs
incl
inc
pop
cmpsb
inc
adc
xchg
inc
adc
pop
out
ret
jae
lds
or
clc
adc
add
ret
insb
pusha
idivb
mov
lcall
add
pop
push
and
mov
adc
popa
shlb
in
repnz
jmp
pop
dec
mov
cmc
call
push
dec
adc
mov
push
pusha
gs
loop
adc
xchg
pop
mov
mov
sbbb
insb
loopne
dec
add
mov
js
outsl
lcall
jae
fcom
dec
les
push
ljmp
jo
jp
mov
outsb
dec
push
push
aad
push
push
or
jp
outsb
push
pop
std
and
mov
out
js
scas
jp
loop
icebp
jb
xchg
mov
push
scas
pop
aaa
push
addl
jg
add
nop
inc
into
pop
pop
dec
jle
shlb
mov
xor
mov
arpl
push
jmp
mov
jp
push
xor
mov
add
push
psubusw
nop
pop
dec
sarb
and
adc
shlb
out
ds
xchg
pop
inc
push
mov
aam
sbb
imul
pop
aam
xor
or
inc
fnstsw
inc
insb
add
adc
push
hlt
mov
std
orl
sbb
sub
add
mov
js
cwtl
push
icebp
pushf
inc
in
decl
faddl
mov
cmp
xchg
jle
xchg
hlt
jl
or
je
add
inc
jg
mov
push
pop
pop
add
inc
cmp
and
dec
mov
mov
mov
repnz
push
inc
mov
push
mov
fimull
push
rorb
mov
jecxz
and
mov
scas
push
test
loopne
arpl
cmpsb
ljmp
popf
mov
push
int3
std
or
push
loopne
adc
push
mov
pop
mov
mov
ss
sbb
push
sbb
pop
and
pop
int
das
cmp
loopne
pop
mov
out
mov
mov
inc
add
mov
add
push
mov
fs
ljmp
cld
nop
je
and
bsr
out
out
std
push
arpl
fsubr
inc
mov
movsb
jbe
sbbb
push
icebp
lcall
mov
add
mov
test
addr16
les
ss
enter
mov
push
sbb
loop
sbb
jmp
test
adc
test
int
push
mov
int
add
adc
jge
loop
pushl
jno
and
loopne
outsb
fisubs
test
repz
fwait
jbe
add
inc
xor
repz
add
or
xchg
dec
push
icebp
push
add
dec
loopne
and
add
stos
add
int
js
adc
pop
mov
add
push
in
repnz
cs
xor
xor
lock
cli
sbb
pop
mov
je
inc
decl
rcrl
mov
push
hlt
add
xchg
sahf
je
add
pop
enter
mov
outsb
call
cli
adc
inc
mov
mov
ja
lods
leave
push
mov
test
aad
mov
stos
pushf
ja
add
aas
or
push
xchg
outsb
adc
xchg
push
and
or
popl
add
cmp
icebp
mov
je
xchg
cmc
or
lock
leave
adc
insl
test
sub
mov
rolb
sub
adc
div
mov
arpl
sub
sub
mov
jp
dec
jne
popa
rol
dec
pop
dec
inc
sbb
inc
xlat
scas
and
popa
fadd
or
inc
or
mov
std
sub
mov
push
jbe
incb
cs
les
decl
pop
pop
pop
mov
add
xor
dec
push
adc
inc
cmp
mov
cmpl
pop
cmp
into
sbb
testb
add
sarb
mov
mov
icebp
daa
or
adc
in
call
add
sbb
sahf
jo,pn
jo
jg
jns
inc
leave
lds
mov
adc
mov
xchg
push
push
xor
xlat
out
aaa
shrb
test
or
pusha
loope
fcoms
push
jne
jmp
dec
arpl
push
test
mov
incl
mov
call
mov
adc
fs
icebp
aad
or
jo
fsub
push
lcall
jp
mov
nop
mov
mov
mov
lcall
out
sbbb
add
dec
leave
lods
and
imul
pop
and
scas
pop
popa
inc
loop
inc
xor
dec
ret
lock
and
xor
add
inc
inc
loopne
sbb
rorl
sub
adc
fadds
push
push
push
pop
addb
adc
push
shr
loop
push
orb
mov
mov
jo
mov
orb
repz
add
clc
aam
dec
dec
cwtl
sub
inc
rcr
xchg
shlb
cwtl
xchg
cli
bound
je
test
mov
and
mov
popa
mov
mov
pushf
dec
aaa
mov
jmp
pop
aam
stos
pop
add
rcrb
jo
add
xlat
outsb
cmc
mov
cwtl
cmp
mov
or
icebp
pop
sbb
and
adc
cmc
xor
negl
pop
movsb
pop
inc
and
shlb
xchg
cmp
xor
add
jo
dec
mov
mov
decb
xchg
pushf
mov
pop
xchg
cmc
jbe
adc
test
or
les
jno
inc
add
mov
jmp
push
cld
push
add
adc
push
cmp
add
jmp
js
rorb
ret
rcr
pop
or
scas
xor
xor
mov
push
les
dec
dec
int
mov
push
mov
dec
stos
sahf
sub
sbb
icebp
xchg
aas
sbb
sbbb
filds
pop
pop
stc
xor
sbb
out
xor
sub
inc
loopne
dec
cmc
mov
test
incl
lods
adc
call
jb
insb
sbb
adc
popa
xchg
or
xchg
sbb
or
add
jecxz
ja
inc
loop
loop
jge
scas
lods
xor
inc
pop
or
cmp
push
jle
pop
call
leave
repnz
es
in
sbb
jne
je
andb
ljmp
lret
and
cmp
and
mov
sahf
mov
js
loopne
fistpll
and
sub
and
push
out
data16
jp
test
cmp
sar
mov
inc
and
jge
or
inc
int
gs
decb
jmp
sbb
je
jns
les
notl
jl
inc
orb
call
xchg
xchg
jne
sub
add
call
ds
call
pusha
push
adc
xchg
les
aad
or
cs
fwait
inc
mov
xchg
dec
mov
add
inc
mov
mov
xor
lods
adc
sbb
imul
and
or
loop
xchg
pusha
xor
or
jp
or
je
into
int3
cmp
loopne
mov
xchg
jne
sbb
test
sub
pop
pop
dec
xor
aas
add
call
mov
fwait
test
pop
push
mov
sahf
gs
test
lods
push
pop
pusha
pop
sub
mov
leave
xchg
stc
sbbb
or
cld
jbe
ret
imul
call
and
cmp
sub
cmp
add
sub
daa
dec
insb
ja
enter
clc
cltd
out
cmp
jmp
cmc
and
pop
movsb
push
mov
and
sbb
dec
aas
clc
cmc
cmp
test
sbb
data16
les
xor
sub
lret
add
cmp
jmp
jo
mov
mov
xchg
nop
or
inc
mov
lods
add
and
cs
pusha
xor
lods
xchg
push
or
mov
or
sub
sub
mov
and
adc
pop
int
loopne
mov
jae
int3
shll
insb
mov
data16
dec
mov
add
jno
enter
mov
sbbb
mov
xor
icebp
lock
lcall
nop
arpl
add
push
out
dec
or
bound
cmovl
push
sahf
aam
sbb
mov
rorl
xchg
cmp
pop
push
je
lea
clc
ficoms
mov
jno
out
js
inc
jmp
push
pusha
nop
call
nop
jbe
adc
cli
lods
inc
movsb
fdivr
sub
lret
incl
imul
and
jb
mov
lcall
dec
fsubrl
lahf
test
mov
sub
fwait
sub
mov
fsubs
cmp
lock
popf
xor
push
mov
add
aam
push
add
movsl
mov
jmp
pusha
mov
push
pop
push
out
pop
and
movsb
rorb
sub
inc
dec
adc
mov
mov
push
mov
push
mov
mov
rclb
adcb
fmul
mov
jnp
sarb
adc
mov
pop
loop
sub
xchg
push
mov
inc
add
or
pop
or
jge
push
and
mov
xor
out
push
lcall
andl
add
icebp
mov
push
int3
pop
xor
ret
or
ja
loopne
pop
sub
idiv
jno
decl
xchg
cmp
test
xor
dec
repnz
add
inc
gs
rcrb
add
push
mov
sbb
inc
add
adc
mov
mov
daa
adc
or
orl
adc
add
sbb
out
das
jns
xor
cmc
pop
lods
je
jo
cmp
jl
push
push
sbb
ss
xor
mov
sbb
cmp
dec
rorb
pop
jmp
push
cmp
xchg
outsl
mov
jg
aad
add
xor
cmp
push
mov
xchg
dec
inc
adc
lods
ja
sub
loope
xor
xor
push
ljmp
inc
js
pusha
lcall
daa
ss
test
fildl
cmp
jmp
in
cli
pop
push
pop
or
ljmp
add
or
adc
mov
mulb
sbb
or
adc
mov
add
nop
jp
mov
ret
sbb
filds
add
loopne
les
enter
pop
xor
je
mov
push
or
inc
test
dec
push
xchg
push
orb
pop
pusha
cmp
adc
or
cmp
lea
add
cli
inc
xor
repnz
mov
xchg
jp
mov
imul
add
jle
subl
je
sahf
inc
cmp
pop
rcl
testl
pop
mov
mov
scas
adc
and
mov
pop
adc
shll
sub
adc
and
nop
mov
test
test
add
mov
scas
xchg
xchg
stos
out
mov
mov
shr
ret
push
adc
inc
mov
fcoms
xor
lcall
push
mov
inc
jecxz
mov
inc
add
push
ss
js
gs
aam
pushf
das
sub
lds
out
jl
clc
pop
lea
cli
dec
inc
sub
or
addr16
jle
mov
sbb
mov
stos
loop
cmp
dec
mov
xchg
inc
sahf
test
add
aas
inc
out
sub
push
scas
mov
mov
mov
das
inc
mov
jo
add
jecxz
popf
adc
mov
or
clc
std
mov
popa
add
push
adc
fdivrs
imul
mov
faddl
stc
mov
lret
xchg
lea
outsl
push
pushf
xchg
adc
insb
sbb
cmp
jnp
and
je
sbb
hlt
adc
push
adc
mov
push
or
push
stc
push
pushf
push
lea
jp
incb
jl
inc
jnp
pop
lock
int3
lea
jge
sub
lcall
in
cmp
hlt
push
inc
mov
push
adc
loopne
andb
cmp
fcomps
push
mov
push
push
in
lods
mov
cmp
add
and
int3
mov
nop
dec
lcall
sub
sti
sbb
mov
jl,pn
or
dec
or
call
lock
cmp
int
mov
cld
fxch
mov
sbb
sub
call
jb
fnsave
and
pop
add
arpl
adc
pop
mov
inc
ljmp
jg
mov
add
ds
adc
or
ja
push
out
or
jne
cmpsb
or
cltd
test
xor
popa
scas
mov
mov
subb
dec
add
push
pop
mov
push
pop
adc
jno
psrlw
insb
and
cwtl
stos
dec
out
mov
push
mov
fsts
pop
fisttpl
lock
dec
inc
int3
ss
cmp
xchg
loopne
mov
xchg
std
mov
mov
pop
fs
inc
xor
imul
xchg
inc
push
cmpps
insb
leave
or
inc
cmp
and
xor
andl
lock
insb
jb
insb
and
jp
xchg
psubusb
and
jge
inc
mov
sbb
add
aaa
and
and
arpl
jb
add
xlat
xchg
jb
or
push
subb
mov
mov
adc
gs
cmp
dec
xor
cmp
jo
mov
test
setbe
lock
loopne,pn
push
push
call
xor
mov
aas
nop
mov
test
icebp
fs
fisttpll
mov
inc
in
adc
ret
xor
sbbb
sub
stos
push
push
xor
out
shlb
and
add
repnz
sbbl
scas
or
xlat
adc
stc
push
ljmp
les
mov
rol
insb
cmp
dec
jo
mov
inc
pop
add
adc
lret
aaa
andl
rorb
test
or
cmp
jp
bnd
or
pushf
xchg
xchg
push
lds
dec
mov
outsb
mov
mov
jp
dec
sbb
mov
test
dec
adc
add
adc
inc
orb
outsb
push
lock
pop
inc
xchg
pop
xor
xor
cmpsb
int3
test
push
les
pop
add
mov
dec
shrb
pop
jnp
or
popf
cli
or
or
gs
cmp
lock
xor
bound
cld
dec
jg,pt
aad
enter
jne
subl
std
je
pop
or
pop
mov
cmp
push
mov
leave
aam
add
jmp
sbbb
cmp
sub
xor
push
mov
shrl
xchg
iret
lret
push
add
ss
int3
or
test
add
ret
std
scas
pop
roll
ret
mov
cli
insl
jb
cli
push
mov
loop
rclb
shl
push
popa
mov
ljmp
dec
enter
int3
xor
xor
enter
adc
sub
ja
mov
sub
pop
sbbb
nop
shlb
xor
pop
into
loop
sbb
mov
addl
add
cmp
dec
fsubrl
cmpb
fildll
sub
push
les
daa
inc
xor
push
test
xor
dec
cmp
adc
mov
dec
add
aaa
xchg
mov
cmp
jb
push
xchg
fildll
sub
jg
add
mov
mov
cld
fimuls
arpl
outsb
mov
dec
fisubs
ficompl
lahf
pop
bnd
push
pusha
lret
xchg
lahf
lea
clc
inc
stos
add
pop
subb
add
lret
mov
outsl
ret
xchg
pop
dec
mov
fst
mov
or
nop
jbe
push
loopne
repnz
sbb
xchg
sub
outsb
aaa
ret
test
xchg
cmp
pop
sub
pushl
and
jge
loop
inc
mov
sbb
cmpsb
push
test
gs
add
add
call
adc
push
jp
xchg
insb
in
sub
sbb
jnp
inc
pop
or
jmp
sbb
js
fcomip
pushl
mov
fstl
test
adc
fs
or
test
mov
dec
out
les
add
ficomps
mov
xchg
or
cld
push
adc
call
aas
scas
outsb
daa
jb
sbb
mov
imul
int
or
fnstsw
mov
adc
clc
imul
sbb
fadds
mov
pop
mov
inc
pop
or
insl
xchg
shll
jns
add
aam
push
mov
cmp
insb
test
jbe
in
xorb
cmp
lea
add
jecxz
dec
sahf
sahf
test
bound
cmp
or
mov
and
test
or
inc
pop
lcall
xchg
sbb
in
sub
jle
xor
les
pop
jne
xor
cmp
ret
mov
pop
add
and
push
pushf
out
ret
lods
fisttps
mov
movsb
pop
inc
cmp
in
les
mov
adc
adc
bnd
aaa
sub
xor
add
stos
enter
jmp
aaa
and
sbb
iret
xor
repnz
xchg
in
and
fsubs
aaa
test
lea
clc
jae
into
jl
push
lea
out
mov
ss
pop
inc
pop
cmc
ret
push
aaa
lret
mov
das
push
cwtl
jp
mov
dec
hlt
and
dec
mov
jbe
lock
adc
insb
fwait
std
ds
leave
fsubl
push
xchg
push
and
aaa
inc
adc
dec
shlb
sar
xchg
mov
inc
ret
inc
add
insb
ret
in
jp
add
outsb
dec
dec
movsb
mov
mov
xor
inc
mov
sub
icebp
adc
mov
jnp
cmp
test
push
inc
mov
mov
mov
data16
mov
sbb
insb
adc
ficoml
xchg
sahf
cmp
sarl
nop
movb
mov
mov
les
pop
rcrl
mov
push
pusha
add
adc
xchg
inc
scas
sahf
adc
jg
push
ds
arpl
mov
inc
xorl
je
push
int
mov
lret
enter
popa
pop
inc
inc
mov
seto
scas
or
leave
shl
cld
or
dec
in
imul
movl
iret
ss
int3
jnp
stos
jb
movsl
xchg
sbbb
push
lock
call
clc
rclb
std
and
push
rcl
jb
jg
les
test
outsb
xlat
dec
or
outsl
add
inc
adc
sub
lods
test
add
cs
sub
arpl
sbb
pop
push
adc
adc
subb
push
andb
add
fs
mov
and
sbb
add
sub
jg
push
add
clc
push
in
xor
sub
lock
fnstsw
test
cmc
inc
ljmp
nop
dec
push
mov
jle
ss
adc
xor
xorl
sti
push
out
in
gs
or
adc
push
orl
add
sbb
add
push
fstps
adcl
dec
adc
and
adc
inc
sub
scas
fdivrs
inc
les
mov
scas
dec
shll
imul
imul
orl
ss
inc
test
call
dec
inc
lock
push
push
mov
aam
ja
push
or
adc
push
xor
popf
loop
ss
ljmp
and
mov
add
jle
inc
mov
mov
lea
rolb
ret
add
ret
cli
aas
dec
adc
aaa
xor
pop
jp
daa
mov
gs
ss
mov
lret
push
jbe
bound
out
aam
cld
jg
cltd
mov
adcb
mov
loop
mov
popf
ljmp
push
and
aaa
add
mov
dec
or
roll
or
lods
shlb
cli
ja
rcl
dec
inc
push
inc
mov
jbe
cmp
fsubr
es
je
inc
std
pop
pusha
test
or
call
mov
jge
inc
in
mov
cli
push
in
fiaddl
dec
subb
idivb
mov
add
lahf
decb
adc
sub
adc
enter
sub
adc
test
push
or
push
adc
ficoms
ss
clc
call
ds
dec
push
dec
sbb
xchg
sub
xchg
stc
mov
add
mov
std
jno
test
mov
push
xchg
incb
push
dec
mov
or
inc
pop
cli
sub
enter
dec
int
push
shll
fwait
sub
add
fcmovnb
hlt
lahf
inc
repnz
mov
addb
jle
and
cmpsb
hlt
or
insl
inc
jbe
pop
lock
fnsave
sub
cmp
in
and
push
int
sbb
rolb
lret
push
xchg
sbb
push
xor
sbb
jo
ret
sub
mov
adc
jae
enter
out
js
pop
incl
push
orl
and
lea
inc
incl
js
cltd
pop
test
mov
or
dec
mov
or
mov
popl
add
cmp
cmc
xor
in
xchg
and
adc
bound
fs
dec
addb
xor
adc
call
pop
sbb
dec
push
adc
pusha
test
ret
sbb
mov
add
mov
out
mov
cmp
ja
loopne
call
lock
aam
or
cld
cmpsb
pop
adc
shlb
out
and
int
mov
push
push
push
test
push
sub
imul
scas
lcall
std
lock
cwtl
pop
loop
leave
cmp
mov
rol
sbb
jae
pop
in
or
xor
lock
repz
mov
dec
mov
adc
lods
mov
outsl
call
inc
mov
xor
add
filds
or
repz
insl
push
add
mov
sbb
add
pop
incb
mov
insb
mov
loop
mov
sub
rolb
cmpb
mov
imul
add
dec
dec
pop
loope
add
jmp
push
inc
les
lea
movsl
and
mov
inc
push
je
push
pop
lea
push
push
mov
rorb
jecxz
lods
push
pop
test
out
mov
xchg
les
lcall
push
call
mov
aaa
andl
push
or
lcall
clc
jmp
cld
aas
ljmp
mov
out
lods
xchg
popa
mov
mov
stc
mov
inc
fisttpll
fucomi
shlb
mov
or
or
mov
cmc
mov
insb
cmp
test
or
dec
and
inc
into
pusha
lret
push
aam
jl
jae
paddb
fistpll
mov
xchg
nop
les
or
inc
and
add
in
faddp
es
in
inc
fsubs
add
gs
pop
iret
inc
fdivrs
in
sub
sub
xor
fimuls
or
je
or
xorb
scas
xchg
push
in
nop
and
lret
mov
inc
cmp
dec
out
adcl
mov
lcall
mov
fs
add
call
jne
das
hlt
int3
push
cs
clc
or
mov
or
nop
push
xor
mov
into
add
push
movsb
mov
stos
add
cmp
adc
jb
dec
jb
dec
mov
jno
xchg
outsb
and
mov
mov
push
cmp
repnz
or
xchg
xor
aad
add
adc
push
addr16
cmp
push
or
xor
mov
sub
loop
push
adc
mov
outsb
pop
mov
pushf
push
les
jne
sub
pop
push
fdivr
xor
shlb
ss
sbb
lock
loopne
les
pop
dec
lea
xchg
shrb
push
fs
add
cmp
fmuls
jl
je
pusha
roll
jl
mov
xor
or
sbb
push
add
dec
shr
ja
jp
jns
jns
call
inc
and
lea
pop
add
push
and
push
adcb
push
xchg
adc
push
xor
pushf
add
pushl
xor
ljmp
dec
adc
pop
cmp
and
stos
jo
lock
push
add
xor
sbb
fs
sbb
and
push
fcomip
mov
loope
adc
push
cmp
or
pand
push
hlt
or
cld
sarl
clc
lods
add
push
rclb
cmp
pusha
pop
mov
xor
pop
mov
les
jmp
sar
inc
push
loopne
fcompl
push
adc
adc
jmp
sahf
test
je
or
ljmp
loope
fists
outsb
add
jno
hlt
add
insl
insb
andb
sub
hlt
jne
leave
push
es
sub
mov
into
adc
adc
cmp
mulb
ret
jl
inc
call
dec
lock
ljmp
jg
or
dec
gs
shrb
add
or
push
pop
xor
add
pop
xchg
stos
mov
pop
mov
push
mov
pop
mov
adc
inc
cmp
cld
xchg
scas
mov
decb
jbe
xchg
lock
pop
xor
pop
pop
into
pusha
lock
mov
xor
ret
movsl
fmull
loop
jge
dec
jle
daa
dec
or
das
inc
sbb
or
inc
push
cmp
lea
ds
mov
out
xor
inc
test
mov
cmpsb
sbb
pop
pop
cmp
mulb
and
loop
and
xchg
inc
add
jne
lods
data16
movsb
std
or
sub
lret
xor
mov
push
rcll
stos
out
or
mov
fildll
jecxz
gs
sbb
mov
jg
inc
data16
mov
fadds
jecxz
mov
mov
shll
xor
loopne
add
mov
lahf
js
xchg
shrb
test
mov
cmp
int3
repnz
lock
and
test
jne
je
cmp
lret
and
call
in
push
std
add
ljmp
dec
and
hlt
push
push
out
mov
loop
ret
push
mov
pop
insl
imul
pop
fdivs
hlt
orl
call
aas
bound
pop
jbe
pop
cmc
or
lock
out
pop
out
out
ficoms
lock
jle
mov
adc
call
popa
decl
sarl
ds
jne
mov
mov
jmp
push
pusha
ljmp
fcomi
icebp
pushf
js
scas
xchg
push
outsb
mov
icebp
cld
or
xor
push
add
mov
add
or
sub
pushf
js
clc
pop
insl
cld
decl
push
inc
cmpsb
dec
stc
cmp
inc
mov
inc
add
es
and
adc
movsb
lods
lcall
loope
dec
add
push
ljmp
mov
call
es
cld
push
or
and
andb
jg
mov
mov
int3
and
inc
sub
int3
loope
add
rorb
test
pop
and
add
push
xor
xchg
dec
out
es
popa
scas
in
inc
mov
pushf
add
testb
rcll
mov
add
or
adc
and
int3
stos
mov
xchg
xchg
mov
mov
mov
add
cmp
test
add
mov
or
inc
cmp
adc
mov
lods
xor
push
fwait
pop
mov
push
nop
or
jp
data16
sarb
xor
lea
inc
inc
lea
les
and
push
xor
shrl
cld
mov
pop
lock
or
ja
sbb
pop
mov
and
inc
xchg
sbb
or
add
adc
sub
mov
call
jbe
push
nop
cmp
mov
test
add
repnz
fsubrl
jbe
push
cli
push
dec
and
cmp
dec
dec
loope
lods
cmp
lea
jb
add
or
shlb
adc
jp
xchg
sbb
nop
psubsb
push
bound
xorl
movsb
movsb
int
ss
lret
or
inc
fistpll
sbb
xlat
jl
xor
xchg
rclb
push
or
movsb
fcomps
es
push
cmp
sahf
push
inc
mov
imul
jmp
pop
hlt
pop
jmp
dec
ficompl
data16
cmp
roll
and
lcall
clc
cltd
mov
xor
es
stos
sub
jge
fdivrl
mov
loopne
push
in
loopne
add
js
or
outsl
adc
repz
mov
inc
jbe
and
pop
xchg
xchg
test
or
lock
mov
mov
mov
aaa
mov
je
mov
mov
jp
out
pop
incb
lahf
les
test
mov
adc
or
sub
cmpsb
xchg
inc
mov
imul
push
ret
icebp
cmc
test
popa
imul
fadd
sub
ficompl
and
movl
mov
rcrl
in
dec
pushl
add
jne
push
add
xchg
adc
mov
mov
movsb
jg
add
mov
mov
lock
rolb
outsl
lret
jecxz
int3
and
dec
mov
sbb
cli
imull
xchg
push
mov
and
xchg
inc
test
pop
outsl
ficoml
subl
ss
mov
cmp
add
cmp
int
call
adc
or
lods
add
fists
fiaddl
lea
lock
lods
subb
in
je
fprem
mov
sub
or
mov
sti
xor
sub
leave
loop
push
arpl
cmp
sbbb
mov
mov
sub
cmpsb
jp
add
add
jne
or
push
nop
cltd
rclb
aad
icebp
movl
rclb
fs
xor
rcll
test
mov
push
add
daa
dec
jp
xchg
adc
lock
push
pop
stos
xor
rorl
lods
mov
jae
imull
pop
inc
mov
mov
andb
mov
shr
push
cld
outsl
xor
sbb
mov
xor
outsb
mov
inc
dec
ret
std
push
dec
mov
push
jle
dec
mov
jb
test
lods
or
add
and
xor
mov
cmpsb
adcl
test
jg
sbb
push
incl
data16
and
in
jnp
push
or
mov
cmpb
adc
test
mov
push
aam
adc
sub
adc
mov
lock
pop
adc
subl
ds
adc
or
mov
jge
xchg
jg
or
or
lock
push
xor
pop
cld
fucomi
xchg
pop
je
inc
loopne
pop
gs
jl
rorb
jo
push
cld
das
inc
clc
sbb
orl
loop
andb
xor
loopne
sbb
mov
xor
scas
fisttpll
fistl
mov
nop
push
inc
sub
enter
xor
daa
jbe
clc
loopne
mov
jo
pop
dec
shlb
rclb
add
inc
int
pushf
and
adc
daa
dec
mov
xchg
adc
mov
outsb
xor
mov
repz
jle
add
shrb
aaa
data16
add
dec
push
push
enter
insb
loop
or
cmp
or
adc
or
test
push
cs
sbb
lock
adc
mov
je
xor
inc
push
lea
movsb
incb
push
adc
inc
adc
sbb
cmp
xor
fsubrp
orb
mov
xchg
mov
lock
adc
and
cmc
addb
add
xor
push
jae
loopne,pn
sti
shlb
popf
push
jbe
and
and
pop
popa
adc
scas
or
int3
jb
orb
mov
cmpsb
mov
adc
into
stc
inc
mov
jl
xchg
cmp
inc
xchg
pop
pop
push
or
xor
jp
dec
fstpt
jmp
ret
decl
pop
js
lsl
inc
jmp
mov
in
adc
cmp
push
lcall
xchg
in
shlb
loope
lods
inc
rolb
fsubs
aas
or
lret
shlb
push
inc
leave
inc
dec
lret
mov
mov
xchg
inc
adc
push
mov
add
lock
jo
cmpsb
loop
pop
xorl
andl
push
and
push
inc
jl
add
shlb
push
xchg
or
adc
push
mov
outsb
pushf
movq
push
in
sbbb
pop
xchg
pop
int
ret
cmpl
and
scas
inc
adc
insb
les
or
push
les
dec
mov
xchg
mov
xchg
je
les
cld
mov
scas
mov
sub
mov
add
enter
shrb
xor
movsb
dec
pop
inc
loop
orb
and
jae
add
test
and
and
pop
add
in
inc
inc
mov
lock
stc
scas
and
mov
adc
fistps
add
inc
add
xor
cmpsb
fs
add
clc
xor
xor
jbe
sbb
inc
jle
clc
sub
push
pop
mov
mov
or
jo
sbb
test
arpl
fdivrp
push
jo
xor
clc
push
lea
mov
mov
and
dec
xor
adc
pop
and
cld
js
add
dec
icebp
adc
outsl
xchg
outsb
mov
lock
loope
xor
adc
cmp
mov
cmp
enter
jmp
ljmp
ret
test
mov
bound
push
mov
sbb
mov
nop
es
add
pop
xor
sbb
dec
movsb
xchg
inc
call
mov
mov
inc
scas
clc
subl
push
ret
xor
dec
loope
mov
dec
and
lea
push
and
int
xchg
inc
add
sbb
inc
lock
dec
adc
paddw
xchg
in
or
shld
stc
dec
ljmp
push
xchg
nop
dec
rcrb
imul
js,pt
call
push
out
pop
aam
jmp
test
inc
call
sub
jg
and
rol
push
pop
cmp
fldcw
mov
sarl
inc
data16
jp
sub
inc
cwtl
adc
pusha
imul
cwtl
test
shlb
push
push
in
add
mov
shlb
mov
add
test
in
xchg
add
dec
sbb
inc
pop
cmc
dec
jl,pn
jae
dec
std
out
loop
adc
mov
addl
mov
adc
and
add
out
cwtl
dec
je
aam
pop
or
add
and
insl
out
xchg
adc
je
mov
add
dec
xchg
inc
stc
fisubl
and
inc
imul
call
jo
les
test
sbb
fsubs
in
and
sbb
mov
mov
or
cwtl
mov
inc
imul
clc
loop
adc
or
nop
hlt
xor
test
jo
xor
sbb
sub
mov
sub
xor
les
aad
loope
mov
cltd
rol
jle
je
add
sbb
loope
or
add
enter
jp
pop
sub
dec
adc
xchg
jns
sub
cmp
mov
pop
movsl
jle
push
and
inc
gs
jle
out
jbe
mov
jo
and
clc
dec
pop
das
jle
add
lahf
dec
data16
fnstenv
mov
cmp
jmp
fcoms
fistps
aaa
mov
sub
mov
cmp
push
lods
or
cmpb
rcr
das
and
and
mov
cs
rolb
pop
insl
jo
add
mov
or
test
jle
gs
lcall
stos
cmp
fidivrs
adc
dec
flds
pusha
adc
xchg
push
dec
icebp
int
mov
test
test
subb
xor
jnp
icebp
add
cmp
insl
cmp
loopne
je
dec
scas
and
das
ds
push
and
repnz
es
ds
dec
out
rol
nop
add
mov
dec
call
xor
imul
mov
enter
shl
or
out
inc
loopne
test
test
ljmp
out
xor
mov
push
inc
lds
and
andb
mov
fiaddl
xchg
xor
movsb
inc
sqrtps
xchg
sbb
adc
inc
cwtl
insb
nop
adc
pop
int3
loop
add
cmp
rolb
pop
push
xor
lcall
outsl
xor
add
sahf
push
aam
and
add
ds
rcrb
adc
cmpsb
aaa
push
inc
dec
int3
mov
dec
add
lock
mov
sub
xchg
and
pusha
leave
scas
ljmp
mov
test
or
xor
movsl
lea
xor
inc
loopne
xor
mov
cli
xchg
mov
xor
rclb
inc
ljmp
call
data16
sarb
sub
adcb
fimull
mov
stc
sub
cld
pop
lea
or
cmp
jl
mov
shl
ja
xchg
push
mov
push
and
aas
add
in
inc
pop
call
scas
inc
mov
and
inc
sub
stos
les
cmpb
add
push
fadds
adc
push
outsb
mov
jge
mov
add
or
push
inc
sbb
add
and
push
push
or
cmpsb
dec
imul
add
jo
into
inc
ret
dec
mov
and
inc
js
and
sbb
xor
sbb
mov
or
push
cli
das
js
std
push
gs
int3
enter
xor
incl
xchg
fiadds
and
mov
faddl
sbb
int
push
add
shlb
ss
mov
hlt
ljmp
sarb
inc
push
push
clc
add
or
sbb
adc
cmp
lock
sbb
push
arpl
jo
and
out
scas
sbb
insb
adc
data16
and
dec
fistpl
aaa
movsb
sti
aaa
in
pop
pop
push
clc
popa
mov
push
or
fs
or
jmp
xchg
add
inc
or
movntq
cli
pushl
jne
daa
mov
addl
xorb
mov
aad
mov
les
cs
xchg
fcmovne
dec
out
cmp
cmp
pop
mov
cmc
cmp
into
popa
jo
or
pusha
mov
sub
adcb
inc
ljmp
je
jae
inc
mov
jmp
xchg
xor
pusha
rclb
cld
sbb
ret
scas
jae
ficoml
jle
ret
inc
adc
lret
jp
jg
add
repz
pusha
aad
push
ror
and
mov
mov
jmp
loopne
testb
mov
dec
jne
jne
shlb
les
lock
jnp
les
cltd
push
imul
add
push
nop
mov
mov
repnz
adc
or
repnz
add
and
push
jle
ljmp
inc
dec
int3
imulb
cmpb
stos
jo
lock
mov
pop
pop
add
jp
loope
pop
imul
mov
std
pop
and
call
sub
loope
int3
cmp
lock
mov
or
aaa
pop
cmp
ficoml
fsubrl
les
sub
cmp
lcall
out
mov
xor
and
jp
outsb
ja
lcall
xor
fistl
push
int3
aam
jl,pt
adc
push
cmp
mov
cld
icebp
pusha
adc
mov
out
inc
inc
in
adc
sbb
mov
pop
add
xor
jnp
ss
stos
sub
mov
je
insb
adcl
call
cli
dec
cmp
pop
out
or
xor
test
cld
shlb
dec
fadd
cli
mov
push
lds
cmpsb
sbb
sbb
sbb
imul
rorl
push
cwtl
dec
loop
and
push
xor
and
lods
lods
push
xlat
leave
add
jl
push
scas
or
les
ds
push
mov
jae
add
jg
pop
push
adc
addr16
add
push
test
mov
or
shlb
adc
les
mov
inc
ljmp
add
pop
les
scas
aam
cmp
repnz
dec
mov
push
xlat
push
inc
sarb
xchg
jl
cmc
jle
sti
int3
repnz
xchg
fwait
sub
mov
adc
add
jg
ret
mov
inc
push
sarb
cld
test
movsb
adc
adc
fidivs
push
test
test
sub
fistps
ficoms
pusha
cmpsl
push
outsb
fs
pop
adc
push
es
xor
adc
cmp
xor
and
push
cmp
xor
fldcw
sbb
sahf
mov
fimuls
push
lret
and
sub
lock
or
xor
ficoms
pop
pop
push
cmove
xorl
shrl
loope
jge
inc
lcall
pop
fs
cmp
lea
inc
call
gs
ficoms
test
lcall
dec
add
or
inc
call
sbb
mov
jo
andl
or
xchg
xchg
out
adc
push
lret
push
sub
loopne
add
adc
iret
jo
pop
ljmp
sbb
adcb
dec
rcpps
or
jno
mov
mov
ret
fcom
xchg
cmp
lcall
mov
pushl
test
pop
mov
mov
xorb
adc
jbe
mov
inc
lock
stos
test
add
lcall
mov
push
cltd
or
mov
add
std
and
in
cmp
aas
jle
xor
cld
xor
dec
add
adc
dec
clc
mov
int3
aam
adc
negl
cmp
fcmovu
shr
jae
loopne
and
sbb
mov
mov
mov
inc
sub
fmuls
repz
cmp
jl
outsl
and
lock
imulb
xchg
xchg
mov
and
aam
sarb
mov
movsl
test
or
repnz
cld
cmp
cmp
lret
pushf
je
xchg
nop
sbb
aas
sbb
rol
mov
test
faddl
mov
sbb
sbb
incl
mov
es
inc
xchg
mov
adc
or
push
push
inc
push
pop
adc
adc
mov
scas
fs
gs
addl
lods
adc
mov
test
ds
ret
clc
not
jo
mov
sbb
out
repnz
movaps
adc
ffreep
test
push
cmc
lea
jg
addb
popf
testb
arpl
or
sar
gs
mov
shrb
ljmp
push
mov
pop
push
pop
addl
sbb
cmp
inc
adc
rorb
pop
fs
popa
std
inc
mov
xlat
xlat
and
mov
jp
mov
adc
pop
test
dec
es
mov
inc
mov
and
or
sbbl
out
aam
push
mov
cmpsl
push
enter
mov
pop
aad
or
fcompl
cmp
ret
mov
call
fdivs
or
icebp
cs
leave
jb
pop
or
pusha
mov
xor
mov
aam
mov
jo
push
shlb
pop
in
ret
popf
loop
cmp
push
fnstcw
ljmp
loope
mov
add
or
mov
adc
xor
push
sti
add
sbb
js
bound
movsl
inc
fsubrs
and
dec
adc
or
push
lock
ss
fs
jbe
push
mov
or
xchg
mov
xchg
lods
xor
movsl
adc
add
cmp
gs
inc
mov
sbb
les
mov
push
push
hlt
sub
loopne
inc
mov
push
data16
jne
pop
and
cmp
add
cmp
sarb
jmp
lret
insb
mov
jecxz
sti
movl
add
pop
enter
lock
push
push
inc
adc
cmpl
notb
vorps
dec
xchg
das
xchg
sub
xchg
inc
xchg
jmp
or
add
cld
or
mov
lea
cmp
clc
and
sets
cmc
xchg
call
dec
mov
add
or
sub
xchg
sbb
lea
mov
popa
inc
arpl
pop
repnz
xchg
aam
lcall
gs
xor
aam
adc
and
cmp
adc
orb
loop
lahf
mov
fsts
gs
test
cmp
cmpsl
les
jnp
add
call
or
stc
insb
jl
stos
inc
insb
lea
insb
jmp
and
push
push
lock
sbb
jl
loop
dec
outsl
mov
mov
push
dec
rcll
ds
inc
or
outsl
mov
inc
push
adc
mov
hlt
aas
sub
scas
push
shrb
popf
sbbb
push
hlt
fs
sub
fidivs
push
mov
mov
call
jne
sarb
call
or
clc
pushf
into
jl
add
jmp
add
rcr
push
and
lcall
cmp
mov
ss
push
adc
mov
aad
pop
mov
add
rolb
mov
jg
jmp
or
dec
jbe
fidivrl
pop
ret
xchg
fisubl
negb
lods
mov
xchg
pop
push
cmp
sbb
cs
sbb
add
nop
int3
pushf
insb
jmp
fidivrs
xchg
add
and
add
xor
faddl
mov
pop
popa
clc
mov
mov
or
mov
outsl
push
lods
sbb
popf
incl
jg
or
push
inc
hlt
mov
in
jp
mov
xchg
aam
add
or
test
leave
adc
in
gs
sbbb
push
scas
fidivs
sahf
enter
mov
les
pop
stos
push
cwtl
ficoms
push
pmullw
mov
mov
call
sbb
mov
sbbb
ss
push
movsb
pop
movsl
idiv
cld
roll
mov
call
js
cld
push
and
or
stos
orb
fwait
and
pop
in
ljmp
push
ljmp
lret
pop
pusha
mov
add
out
push
mov
loop
mov
iret
mov
add
jb
xorb
insl
insl
sub
push
pop
cli
xor
leave
inc
stos
dec
fst
out
pop
cmp
add
sub
jbe
insl
jecxz
shlb
push
nop
sub
lea
hlt
xor
mov
adc
xor
jp
adc
fildl
dec
cmpb
mov
test
mov
xor
add
sbb
testl
aam
js
xor
push
shll
je
xor
lods
mov
rclb
push
mov
dec
rolb
pop
mov
test
clc
sbb
int3
fdivrs
mov
mov
loopne
and
mov
mov
push
popf
and
mov
lret
adc
shlb
push
jp
and
jp
push
push
fcoms
in
mov
popf
sbb
aad
sbb
movsb
fsubs
or
mov
inc
mov
les
aaa
data16
popf
aam
cmp
mov
xor
outsb
push
rolb
mov
je
cs
cmpsb
adc
pop
test
cli
enter
bound
mov
adc
cmc
icebp
or
sub
daa
inc
pop
mov
and
push
imul
sahf
dec
sub
aas
push
inc
push
aam
imull
adcb
xchg
nop
and
icebp
cmpsb
inc
scas
cmpsb
icebp
cmpsb
cld
repnz
rolb
sbb
dec
pop
mov
and
stos
dec
cld
sub
mov
insl
clc
cmp
sbbl
sahf
insb
and
inc
ffree
jbe
imul
test
jp
inc
loop
mov
es
cmp
pusha
mov
dec
jg
enter
xchg
mov
add
movsl
sub
jmp
je
gs
cmp
clc
dec
aas
leave
push
test
jmp
das
stc
je
sbb
add
mov
gs
mov
or
or
push
dec
fmull
sbb
jle
or
lret
loop
or
outsb
jne
fidivrs
adc
sbb
mov
inc
cld
cmp
pop
rorb
sbb
out
test
out
add
test
cmpb
int3
inc
sbb
and
clc
xchg
je
ret
push
outsb
mov
pop
mov
cmp
je
lcall
cmp
push
push
pop
mov
out
cmp
lea
cwtl
mov
pop
cli
mov
add
dec
popf
and
gs
popf
ss
mov
pop
push
cmp
repnz
or
sbb
roll
cli
mov
loopne
loope
insb
test
aaa
sar
cmp
mov
dec
call
mov
movl
out
pop
orb
shll
addl
scas
pushl
xchg
inc
or
lock
fmuls
stos
scas
and
or
bound
cmpsb
adc
jne
sub
mov
xchg
js
sub
into
shrb
mov
push
cltd
mov
cmp
xchg
mov
push
adc
outsl
mov
xchg
sbb
aas
fldt
add
pop
and
and
stos
jo
pushl
add
mov
push
iret
mov
dec
inc
jg
push
cli
rcrl
ss
xor
loopne
hlt
out
out
mov
inc
mov
cmp
jg
jbe
gs
adc
xor
enter
adc
rol
je
pop
fidivrl
movsb
push
cld
and
js
jmp
adc
adcl
mov
xchg
jmp
ret
or
xor
push
lret
addb
push
push
rol
add
jmp
cwtl
sar
add
retw
fdivrs
and
mov
jns
add
ja
mov
ss
push
inc
mov
adc
sub
jmp
add
jno
adc
push
xor
push
cmp
call
orps
xchg
fs
jbe
mov
inc
pop
leave
jae
and
sub
decb
imul
sub
es
int
xchg
std
gs
sbbb
scas
or
insb
sbb
and
ds
and
insl
nop
test
sti
cltd
inc
add
mov
movsb
cld
test
or
xchg
sbb
or
ds
in
in
push
rcll
inc
rclb
pop
fisubl
cld
or
cmp
mov
sbb
push
inc
scas
rorl
mov
jae
xor
jp
lods
aaa
mov
lret
aaa
cwtl
or
js
jl
js
cmp
cmp
xchg
add
add
fwait
dec
mov
or
lds
and
adc
push
fstps
cmp
cmp
test
aam
inc
add
dec
add
lods
sub
cmp
or
in
adc
xor
pusha
mov
push
cmpsl
add
cmp
in
adc
js
push
fnstsw
call
cs
rolb
fdivrs
push
mov
aam
xchg
xchg
mov
nop
mov
pop
lods
add
mov
popa
xchg
pop
xor
fsubrs
call
and
out
shrb
inc
je
cmp
adc
ja
inc
hlt
xchg
push
mov
or
inc
lods
mov
add
dec
and
mov
pusha
cld
fwait
push
js
popa
test
mov
cmp
or
adc
sahf
fnsave
fstp
pop
lods
adc
add
xor
das
pop
push
cmp
cld
push
xlat
ret
fs
add
pop
add
in
shll
push
jo
jmp
push
and
jo
push
jle
into
sbb
inc
mov
mov
push
push
shrb
mov
loopne
mov
fs
outsb
das
pop
lcall
ret
gs
stc
push
adc
or
clc
fstps
jecxz
sbbb
add
fmuls
push
pop
sbb
mov
dec
mov
and
lea
repnz
add
mov
add
fs
orl
push
add
cmp
jb
adc
aam
push
mov
in
decb
loop
subb
adc
mov
lret
loopne
aaa
or
loope
push
bound
enter
jle
call
pop
enter
fcom
orb
popf
cmp
inc
mull
and
xchg
cld
sbb
stc
enter
insl
test
popa
xchg
sbb
into
inc
cmp
sub
cs
or
js
cmp
cmp
jl
test
jo
and
cmpsb
aas
push
clc
jb
mov
ret
pop
inc
scas
pop
inc
sbb
push
cmp
test
popf
push
jecxz
inc
or
and
add
ljmp
shrl
popf
ret
mov
ja
inc
push
cmpsb
icebp
lret
push
push
mov
add
dec
in
xchg
or
and
ljmp
insb
and
push
mov
and
add
pop
push
mov
mov
adc
movb
fsts
mov
jle
or
out
push
pop
fwait
dec
mov
add
inc
sbb
inc
js
inc
inc
mov
insb
ja
jle
lds
dec
ret
mov
pop
push
test
adcl
xor
push
jmp
clc
push
insb
mov
add
pxor
jnp
adc
fwait
orl
les
shlb
adc
jle
xchg
loopne
xlat
ficoml
sbb
adc
mov
ds
or
push
std
std
jbe
maskmovq
cmpsl
popa
in
sti
jl
icebp
inc
call
lret
mov
rorb
aad
add
rcll
cmpl
sbb
xchg
and
popa
jne
add
push
inc
aaa
push
inc
ljmp
or
cmpsb
sbb
jge
push
mov
mov
jmp
mov
xor
mov
push
out
mov
sub
cmp
std
or
push
fnsetpm(287
adc
clc
loop
add
data16
xchg
nop
into
inc
dec
stos
jmp
fstp
mov
jp
push
mov
inc
or
hlt
and
cmp
dec
sarb
push
add
adc
add
test
loop
jl
outsl
cmp
fs
mov
pop
mov
mov
inc
cld
push
or
or
clc
push
xor
clc
cs
pop
stos
xchg
push
xor
push
xor
pop
ror
addl
or
cmpsl
push
cmpsb
mov
dec
aaa
sbb
pop
lods
dec
sbb
clc
adc
idivb
dec
shlb
add
movsb
subb
push
fiadds
hlt
test
cmp
dec
push
sbb
les
jo
sub
dec
jl
lds
lock
and
mov
rorb
xchg
or
inc
lahf
mov
incb
pusha
nop
mov
and
mov
decl
or
movb
pusha
movaps
flds
inc
icebp
dec
call
insl
inc
cmp
sub
pop
nop
ret
test
xor
add
aas
pushf
lods
adc
bound
ds
in
push
xor
sbb
in
popl
jle
mov
mov
cltd
sbb
add
lock
add
leave
in
mov
push
rorb
add
cs
xchg
leave
ret
xor
shrb
les
mov
test
lods
xorb
push
push
orl
lea
and
jg
inc
mov
mov
mov
sbb
fdivp
int
jnp
sub
out
pushf
in
cmp
lock
mov
call
xor
push
test
xor
pop
or
add
test
rcl
data16
adc
push
push
jb
and
or
or
push
xchg
push
roll
sbb
or
push
sub
cs
and
mov
xchg
prefetch
or
or
or
mov
dec
sbb
out
add
dec
lret
xor
and
dec
loope
jo
cmp
jbe
or
insl
dec
int3
dec
sarl
add
test
fidivrl
sbb
jmp
ljmp
and
ret
fisttps
push
cmp
cli
pop
and
push
clc
mov
adc
stos
adc
aaa
sbb
mov
adc
sbb
pop
or
dec
call
push
pop
or
clc
ds
pop
xor
call
out
push
cmp
xor
pusha
push
in
pop
inc
adc
or
incl
jne
in
mov
loop
enter
mov
add
mov
fs
jne
mov
add
in
push
and
lcall
lods
std
or
cld
cmp
adc
subl
data16
pop
adc
adc
xor
dec
lds
push
pop
xchg
mov
pop
inc
cmpsl
dec
jne
call
lock
call
sbb
stos
rolb
decl
xor
xchg
rcll
inc
cwtl
mov
jl
and
dec
leave
les
adc
jno
or
mov
lea
test
inc
insb
ret
imulb
or
gs
push
adc
and
xor
add
movsb
push
push
jecxz
sub
sbb
fadds
sbb
cwtl
std
push
out
add
insl
xor
add
jo
decb
pop
dec
jae
xlat
incl
cld
into
push
out
faddl
dec
jo
jo
pop
cmp
jo
dec
sbb
sub
rol
inc
insl
inc
pop
push
ss
mov
mov
add
sub
dec
mov
pop
xchg
xor
ror
out
inc
jne
outsl
lret
cs
pop
test
outsb
inc
add
xor
fcmovnu
lahf
dec
test
repnz
ret
or
sub
lret
pop
sbb
shl
xor
jmp
lods
cmp
gs
cmp
hlt
popf
nop
mov
mov
push
shlb
pushf
ja
sub
into
xor
les
or
pop
push
test
call
popa
aam
mov
push
adc
cmp
jmp
loop
roll
bound
xor
imul
dec
dec
and
orl
pushf
dec
lods
ret
mov
jl
adc
xchg
les
lods
jnp
lea
pop
cmp
leave
inc
in
adc
adc
inc
and
add
mov
pop
ret
pop
cmp
inc
sbb
out
aas
mov
mov
rolb
cld
add
out
lret
pushf
push
aad
leave
jb
push
mov
jbe
push
push
inc
adc
clc
outsb
push
imul
fsubl
cmp
das
cli
jb
sbbb
inc
ret
lea
jg
dec
or
imul
mov
loop
imul
cwtl
arpl
or
ret
mov
rcr
fs
inc
int3
and
icebp
xchg
fs
call
adc
inc
clc
xchg
xchg
pop
push
sub
add
mov
pop
xchg
orb
shlb
sub
mov
push
xchg
ret
sahf
jp
imul
addl
inc
aaa
mov
inc
sub
cli
mov
push
add
inc
jmp
add
clc
sub
arpl
or
adc
faddl
lods
sub
repnz
cld
aad
inc
add
push
pop
nop
cmc
adc
mov
push
in
imul
xor
test
outsb
cmovb
mov
mov
adc
out
xchg
dec
jb
test
push
insl
loopne
xor
rcrb
jge
test
ret
dec
fmuls
adc
add
or
push
fdivr
ljmp
add
std
stc
test
into
aaa
rorb
inc
xchg
lods
aas
or
test
fadds
mov
push
mov
out
rcrb
mov
enter
gs
inc
test
repnz
jne
jl
icebp
or
lods
inc
pop
mov
dec
mov
pop
push
enter
cmp
jl
push
mov
cs
inc
jecxz
add
lods
or
push
push
leave
jg
das
cltd
fbstp
xorl
ss
push
bound
call
inc
test
push
sub
xor
or
adc
pop
inc
into
add
push
jg
inc
sbb
xor
inc
xchg
add
sub
xchg
mov
push
hlt
ljmp
je
sbb
pop
jecxz
mov
cmp
jne
inc
and
cmp
mov
lods
sub
cmp
icebp
xor
inc
mov
call
push
cmp
shlb
jg
fs
push
lcall
xchg
add
adc
jae
sub
mov
aaa
sti
xor
jmp
mov
or
nop
push
mov
fs
test
mov
push
dec
in
movsb
jbe
dec
in
mov
fadds
xor
dec
aas
addb
int
les
pop
bound
push
shlb
aad
mov
push
out
ret
or
pop
pop
mov
add
jo
sub
mov
sub
and
int3
push
daa
and
popf
adc
push
in
push
repz
jns
std
dec
add
pop
fdivrl
lds
add
and
sarb
push
popa
ret
mov
sbb
les
lcall
sbb
mov
div
jecxz
inc
adc
push
fsubs
push
dec
and
testb
jecxz
or
push
add
mov
mov
dec
mov
sbb
pop
mov
push
dec
xor
xchg
lea
fsubl
jp
push
mov
outsb
aam
lock
dec
psadbw
rclb
mov
outsb
insb
inc
pop
add
rol
cli
data16
xor
cmpb
lock
xchg
push
cmp
rclb
jbe
mov
xchg
jae
mov
mov
roll
jg
rorb
inc
or
arpl
sub
jge
in
fdivrp
mov
jo
xchg
in
in
ret
repnz
push
out
or
insl
out
push
dec
out
mov
sub
outsl
xchg
add
test
add
mov
adc
daa
loopne
mov
inc
add
adc
sti
mov
fdivl
sub
inc
add
std
cmpsb
or
ret
push
out
push
add
lea
mov
ficoml
stos
ret
rcr
fcmovu
insl
std
lock
pop
mov
xchg
cmp
jo
mov
stos
sub
mov
fs
pop
mov
movsb
jno
into
jb
outsl
adc
imul
xchg
sub
push
negl
test
popa
push
fsubl
inc
les
popa
rolb
pop
hlt
sbb
call
or
fiaddl
outsl
rcrb
sub
dec
decl
jns
add
mov
or
rol
xchg
imul
dec
and
fbld
test
and
xchg
mov
push
insb
cmp
fstps
and
shl
iret
mov
movsl
and
jg
inc
std
test
je
hlt
cmpsb
xor
xchg
xchg
call
or
adc
dec
xchg
addr16
cmp
loopne
int3
popl
rolb
shll
hlt
movsl
push
xchg
shrb
popa
je
aam
notl
scas
fcomps
pushf
jmp
mov
movlps
sub
out
mov
mov
pop
mov
or
jge
lods
insl
adc
or
out
cmp
cmp
dec
insb
mov
into
ret
xor
shlb
add
fadds
pusha
adc
testb
inc
or
push
les
out
adc
scas
dec
mov
xor
ja
push
lea
push
fs
les
and
call
mov
dec
data16
push
add
mov
outsb
dec
outsl
mov
pop
inc
dec
add
outsb
mov
push
fwait
jl
mov
scas
sarb
gs
mov
jg
int3
push
xchg
cwtl
and
pop
or
xor
sub
mov
mov
mov
hlt
sbb
jle
push
xor
notb
scas
dec
test
push
mov
jne
xchg
add
adc
fdivs
mov
stc
xchg
cmp
push
inc
rorb
pop
je
cli
lock
xchg
jbe
sub
dec
xchg
fs
or
leave
push
std
jp
add
enter
lea
sahf
out
xchg
pop
aad
rorb
jle
push
outsb
push
and
or
fs
inc
mov
aaa
nop
mov
imul
inc
pop
dec
cmc
pop
push
dec
sahf
sub
mov
push
pop
popa
add
dec
pop
nop
dec
push
xchg
scas
add
inc
faddl
push
cmp
mov
outsl
sub
fmuls
test
and
aam
pand
add
pop
add
cmp
shr
mov
int3
adc
mov
add
addr16
sub
and
jns
mov
sbb
add
push
dec
test
test
sbb
enter
xor
cli
test
and
mov
sub
lock
ret
jbe
push
inc
and
call
insl
inc
loopne
and
test
xchg
imul
je,pn
shlb
inc
and
xor
push
imul
xor
es
add
leave
inc
inc
mov
insb
push
in
into
pushf
cmp
xchg
int3
xor
mov
addr16
sub
icebp
sbb
cmp
or
push
xlat
jne
jecxz
ss
mov
cmp
inc
inc
pushf
in
insb
mov
repz
in
sub
clc
mov
dec
push
xchg
rclb
mov
mov
and
mov
push
and
enter
rorb
pushf
jmp
add
mov
dec
mov
and
inc
pop
sbb
inc
sahf
adc
jae
mov
fsub
mov
mov
jle
add
pusha
loop
mov
inc
imul
mov
inc
jecxz
mov
shrl
je
icebp
ffree
push
int3
ret
int
stc
les
out
movb
push
cld
ja
xor
pop
or
adc
mov
imul
in
cmp
sti
xchg
add
cli
ljmp
push
fbld
dec
ret
stos
pop
in
xor
cmp
sbb
rclb
fistps
aas
lcall
and
pop
repnz
adc
mov
adc
int3
imul
into
loopne
sub
push
mov
sbb
loope
adc
loope
cmpsl
push
mov
cmp
inc
mov
sub
add
jno
dec
nop
inc
dec
push
push
add
test
imul
xor
inc
dec
lock
pop
movsl
pop
or
nop
adc
js
mov
sub
mov
cmp
sbb
push
les
insb
pop
push
loop
xchg
add
jmp
in
arpl
cmp
les
addl
sbb
fadds
jg
inc
or
scas
mov
cmc
pop
inc
push
mov
mov
mov
jle
push
mov
inc
pop
notb
inc
sub
mov
test
icebp
xchg
movl
fsubr
lods
mov
insb
shll
cld
fiaddl
and
xor
cmp
lea
sbb
mov
inc
sbb
mov
add
fistpl
xor
pop
test
aas
pmaxub
rorb
adc
imul
push
and
out
or
sbb
orl
ret
lock
mov
loopne
enter
ss
xchg
in
test
hlt
sub
add
adc
push
or
or
xchg
push
je
lock
mov
sbb
and
fadd
push
push
or
stos
lret
lea
fnstsw
add
mov
add
add
inc
mov
pop
push
enter
inc
clc
data16
lea
pop
and
mov
add
add
cli
or
pop
shll
dec
sub
mov
jmp
sbb
mov
decl
fsts
pop
aas
adc
mov
shl
clc
fstl
jae
je
sub
inc
jge
cmp
mov
jo
fisubl
or
mov
lds
inc
add
add
jo
dec
mulb
add
pop
iret
addb
push
xor
popf
push
sti
xchg
movsb
jge
test
push
cmp
dec
aaa
xchg
insl
sbbl
popa
shll
rolb
lea
and
out
loopne
adc
lock
jecxz
inc
sbb
push
add
std
stos
rolb
outsb
outsl
aam
inc
test
mov
push
sbb
and
mov
test
xor
mov
dec
sbb
pop
push
and
les
push
mov
js,pt
adc
add
mov
movsb
loopne
incl
test
data16
arpl
add
dec
in
add
mov
pop
imul
mov
call
popa
sbb
sub
out
mov
shrl
dec
fadds
test
pop
int3
test
and
gs
sub
mov
rclb
mov
push
incb
test
pop
cmc
jecxz
in
pop
decb
sahf
mov
add
mov
push
sub
mov
fs
sbb
imul
test
stc
or
lret
adc
lods
jnp
nop
fadd
jb
cmpsb
adc
and
push
adc
ret
dec
adc
and
fs
loopne
shl
rorl
fwait
push
sbb
adc
lcall
add
push
mov
int3
loopne
imul
pop
mov
mov
cmp
mov
xor
or
test
mov
pop
icebp
mov
or
xor
push
lea
mov
push
jmp
cmp
dec
adc
imul
test
cmp
xor
js
in
call
and
add
pop
mov
daa
dec
cli
mov
fsincos
cmp
int3
jl
jle
popa
test
push
rclb
jmp
inc
aas
adc
push
lea
fwait
push
or
lock
mov
mov
pop
cwtl
daa
and
pusha
xchg
push
inc
jecxz
int3
aad
push
aad
scas
jp
pop
pop
test
rol
push
bound
and
and
push
xor
add
test
push
inc
inc
mov
hlt
adc
lds
add
push
int3
insb
xor
es
icebp
jg
clc
or
call
test
and
jmp
pop
dec
enter
jmp
rcr
data16
rolb
dec
mov
pop
sti
xor
mov
imul
push
push
push
sbb
lods
lods
xor
pushl
xchg
cld
jmp
pop
ljmp
loopne
inc
pop
mov
pushf
mov
or
push
mov
pusha
mov
inc
lods
rolb
mov
adc
aam
push
movsb
or
cmp
push
and
push
jg
insb
sbb
sbbl
fildll
cmc
add
adc
push
jae
mov
psubq
sarb
push
int3
add
add
roll
pcmpeqb
and
inc
lea
and
sub
rclb
sbb
mov
xchg
int
pushf
scas
jbe
mov
adc
inc
loope
pop
cwtl
sbb
daa
xchg
shll
sbb
test
mov
lods
scas
push
sbb
icebp
bound
sub
outsb
adc
xor
leave
scas
mov
mov
lret
mov
lea
in
jne
fwait
ret
sbb
sbb
adc
pop
shll
stc
add
and
movsb
fcoms
sub
add
add
fld
ds
nop
fwait
gs
ret
jg
push
mov
ret
lock
shl
movsb
sbb
add
sbb
pusha
lret
std
ja
and
imul
ljmp
xorl
and
out
js
loop
jle
push
idivb
cmp
sub
adc
sti
xchg
lock
cmp
pop
or
popa
insb
insb
popa
jl
adc
sbb
fsubp
xchg
xchg
popa
pop
ss
cmp
sub
add
xorl
cmp
mov
cmp
rclb
outsb
push
jb
loope
aam
lahf
mov
dec
push
inc
push
push
pop
stos
or
fldt
push
je
ljmp
stc
push
lea
mov
adc
leave
cmpsb
popf
mov
out
xchg
movsb
mov
aad
cmp
jb
in
fs
clc
sbbb
roll
loop
jne
sub
rclb
aas
out
adc
xor
push
and
ljmp
pop
dec
push
adc
call
popa
pop
pop
jg
movsb
mov
jo
pop
adc
adc
dec
rcrb
xor
or
push
aaa
inc
clc
outsb
loope
adc
mov
cmpl
fcoms
lods
call
mov
addb
push
inc
push
add
shlb
mov
mov
inc
mov
or
lea
push
push
dec
loop
out
lea
push
or
inc
sbb
and
and
ror
in
sub
aad
push
out
cmp
out
mov
push
loopne
mov
mov
sub
shll
sub
stos
add
rcrb
push
pop
inc
rorl
xor
les
jl
xchg
mov
enter
lock
shlb
pop
push
jl
les
mulb
dec
aaa
xchg
pop
xchg
imul
pop
pushl
sbb
dec
shr
loop
sub
lret
jno
sub
std
outsl
ljmp
aam
movsb
adc
xor
jbe
lods
xor
mov
sbb
mov
sbb
addb
inc
test
andb
adc
leave
js
shlb
incl
jo
xorl
data16
cmp
jp
or
and
frstor
test
sarl
dec
sahf
pop
or
loopne
stos
sub
add
push
adc
call
icebp
call
push
pushf
add
adc
cmp
in
cli
jle
adc
mov
xor
push
ret
gs
sbb
add
add
in
lcall
pop
inc
dec
dec
inc
inc
dec
pop
dec
inc
inc
push
pop
push
inc
dec
inc
inc
push
add
cs
push
push
inc
push
push
jp
jb
outsb
je
insl
gs
jb
jb
mov
add
push
and
inc
dec
mov
xchg
sub
inc
and
push
xor
cmp
sub
insb
lock
outsb
imul
outsl
dec
aaa
imul
push
outsb
outsl
je
or
push
arpl
negb
outsl
ja
jno
or
outsb
outsl
ss
stc
or
fs
jo
push
jbe
jb
jne
data16
inc
and
insb
push
mov
adc
gs
das
mov
or
xor
mov
out
mov
gs
jae
push
fs
push
xchg
outsb
mov
cwtl
xor
mov
scas
inc
aaa
and
mov
sub
push
outsl
arpl
pop
mov
das
imul
pop
add
inc
jb
add
sbb
popa
insl
inc
xchg
insl
insb
pop
jbe
adc
xor
lahf
and
sbb
pusha
pop
push
cmp
mov
jne
jae
push
xor
sbb
addr16
or
popa
jo
dec
decl
rcl
mov
push
imul
push
inc
xchg
jle
imul
pop
sub
sbb
test
mov
add
rolb
cmp
imul
outsb
ds
cmp
inc
add
gs
pop
jne
daa
pop
push
sub
jg
dec
push
gs
popa
addr16
outsl
js
jne
mov
xor
fs
add
fldlg2
scas
jns
aad
push
pop
adc
push
rcr
sbb
xlat
lcall
adcb
jecxz
adc
inc
push
adc
mov
rcll
xchg
dec
clc
add
mov
push
cmp
and
jae
xchg
sbb
pushf
sahf
daa
cld
jge
mov
loope
push
aas
cmc
inc
pusha
in
enter
mov
lods
jns
push
push
filds
arpl
repnz
add
xlat
stos
jbe
or
cli
pop
inc
lock
aam
mov
ljmp
mov
xchg
es
test
jno
xor
ret
sbb
and
daa
mov
decl
outsb
pop
mov
sub
das
test
add
and
mov
push
mov
cmp
pop
iret
shr
stos
sti
inc
dec
es
add
cmp
and
lcall
xchg
popf
cmp
mov
jg
int
adc
pop
xchg
inc
pop
les
sbb
orl
inc
out
mov
decl
fneni(8087
xor
or
and
ret
bound
enter
aad
test
gs
ljmp
cs
mov
call
mov
mov
dec
add
push
popa
xor
lcall
adc
mov
push
sub
mov
inc
push
mov
mov
movsl
clc
jl
test
ja
cltd
idivb
push
repnz
fisubrs
mov
mov
lds
xor
add
into
addr16
out
sbb
stos
stos
out
jbe
lcall
sbbb
jge
xchg
call
adc
inc
leave
sti
lock
ljmp
aam
pop
mov
scas
ljmp
movsb
mul
jb
xchg
fwait
rol
jne
pushl
std
sbb
xchg
xchg
scas
dec
es
ss
jle
aas
inc
cmc
div
mov
push
movsl
movsl
hlt
shl
in
stc
icebp
icebp
or
jno
xchg
ljmp
xor
push
sub
add
xchg
mov
gs
ret
ret
pop
xor
sbb
pushl
xchg
xchg
mov
das
lcall
and
adc
sbb
loop
int
jmp
idiv
decl
daa
imul
jne
adc
or
sbb
sub
je
sbb
cs
lcall
sub
mov
pop
out
pop
mov
push
divb
cmp
popa
jge
mov
push
sub
std
ljmp
jnp
jecxz
ds
das
das
jno
test
mov
shr
in
sub
and
pusha
jecxz
cld
pop
jns
mov
mov
pop
in
aam
push
lret
lret
inc
addr16
cmp
dec
dec
ficomps
pop
pop
call
mov
out
out
sub
stos
in
sti
sti
push
xchg
lds
xor
push
adc
inc
iret
jmp
add
push
jg
jg
mov
cmp
inc
and
test
jecxz
push
push
repz
mov
inc
rolb
xchg
lods
and
cmp
cmc
cmc
add
mov
mov
scas
fcmovu
jne
and
ljmp
and
adc
xor
sbb
repz
mov
int
dec
sbb
adc
adc
pushl
mov
xchg
xchg
mov
cs
pop
cmp
cmpsl
cmpsl
repnz
jle
incl
enter
mov
sbb
sub
jae
xchg
shlb
sbb
dec
movsb
mov
call
mov
and
push
sub
jle
nop
nop
stos
ljmp
add
out
out
sub
mov
cmp
jns
pop
pop
loop
or
ljmp
cli
sbb
shl
xor
push
je
cmp
or
push
xchg
dec
dec
fisttpl
incl
or
and
mov
ret
mov
lods
lods
out
les
cmpsb
cmp
pop
lock
aaa
bnd
mov
out
mov
enter
aaa
pop
fisubrl
mov
mov
mov
aad
pushf
dec
dec
rorb
test
ljmp
lods
push
push
cli
repz
hlt
pop
iret
ljmp
hlt
jp
cmp
scas
jmp
cld
sbb
mov
dec
and
and
jb
sbb
and
cmpsb
cmpsb
icebp
jae
mov
xchg
mov
lret
call
fnstsw
pushl
pop
pop
and
mov
mov
loopne
jo
jl
ds
jno
mov
pushl
stos
nop
dec
dec
fadds
add
add
mov
adc
mov
scas
push
jmp
imul
rcrl
sbb
fabs
loope
jmp
mov
clc
clc
adc
cwtl
cwtl
mov
adc
xor
imul
ljmp
xor
mov
push
push
and
jmp
into
dec
stos
lcall
pop
add
sub
jp
mov
jmp
mov
gs
out
test
shrb
mov
sub
lcall
sub
adc
mov
test
push
cld
insl
mov
push
cmp
add
repz
mov
push
add
cmp
out
inc
repz
repz
inc
xchg
iret
leave
or
addr16
ljmp
xchg
pop
ret
iret
repz
push
inc
iret
repz
add
hlt
xor
cmp
repz
jae
aas
or
cmp
repz
gs
sub
lgs
ss
cmp
es
iret
repz
je
sub
iret
out
sti
testb
cmp
repz
jno,pt
cmc
repz
repz
iret
repz
enter
iret
repz
aam
dec
imul
iret
repz
push
repz
push
xchg
iret
adc
cmpl
mov
iret
repz
mov
iret
dec
add
shll
iret
repz
sbb
insl
dec
repz
repz
das
loope
iret
repz
int3
cmp
addb
repz
out
xchg
mov
cwtl
sarl
jle
repz
stos
or
sarl
iret
repz
loop
jbe
repz
repz
dec
push
fisttpl
iret
repz
insb
in
outsb
out
cmpsb
cmp
repz
movsb
aaa
mov
repz
repz
pop
mov
fs
repz
shl
mov
pop
and
scas
mov
sbb
repz
xrelease
and
iret
repz
push
and
cmp
repz
faddl
iret
repz
les
cmp
add
mov
iret
repz
pop
daa
mov
repz
repz
mov
cmp
repz
js
repz
repz
adcb
xor
repz
mov
cmp
repz
cld
cmp
cmp
repz
jnp
imul
cmp
outsl
lds
add
cmp
repz
xlat
stos
jbe
repz
repz
cli
pop
iret
repz
inc
lock
aam
scas
cmp
repz
movsb
jb
mov
cmp
repz
xchg
es
iret
repz
test
cmp
repz
fdivs
adc
repz
and
sbb
add
loop
iret
repz
daa
mov
or
cmp
repz
outsb
iret
repz
pop
mov
cmp
repz
jecxz
test
cmp
repz
in
and
iret
repz
mov
push
mov
cmp
dec
pop
iret
shl
cmp
repz
stos
sti
inc
dec
iret
repz
xor
cmp
repz
cmp
test
repz
repz
iret
repz
cmp
mov
iret
repz
push
ror
repz
repz
in
pop
xchg
iret
repz
inc
pop
les
repz
pop
sbb
repz
repz
cmp
nop
mov
mov
cmp
pop
or
loopne
cmp
repz
or
iret
repz
and
ret
bound
repz
xchg
in
out
cmp
repz
aad
repz
dec
test
cmp
repz
jp
or
js
cs
iret
repz
mov
call
iret
repz
mov
cmp
repz
dec
add
repz
testb
xor
repz
rcrl
repz
cwtl
adc
iret
repz
mov
iret
repz
push
sub
mov
cmp
repz
iret
repz
inc
push
cmp
repz
push
mov
iret
repz
jnp
imul
cmp
outsl
lds
add
cmp
repz
xlat
stos
jbe
repz
repz
cli
pop
iret
repz
inc
lock
aam
scas
cmp
repz
movsb
jb
mov
cmp
repz
xchg
es
iret
repz
test
cmp
repz
fdivs
adc
repz
and
sbb
add
loop
iret
repz
daa
mov
or
cmp
repz
outsb
iret
repz
pop
mov
cmp
repz
jecxz
test
cmp
repz
in
and
iret
repz
mov
push
mov
cmp
dec
pop
iret
shl
cmp
repz
stos
sti
inc
dec
iret
repz
xor
cmp
repz
cmp
test
repz
repz
iret
repz
cmp
mov
iret
repz
push
ror
repz
repz
in
pop
xchg
iret
repz
inc
pop
les
repz
pop
sbb
repz
repz
cmp
nop
mov
mov
cmp
pop
or
loopne
cmp
repz
or
iret
repz
and
ret
bound
repz
xchg
in
out
cmp
repz
aad
repz
dec
test
cmp
repz
jp
or
js
cs
iret
repz
mov
call
iret
repz
mov
cmp
repz
dec
add
repz
testb
xor
repz
rcrl
repz
cwtl
adc
iret
repz
mov
iret
repz
push
sub
mov
cmp
repz
iret
repz
inc
push
aas
iret
repz
push
mov
call
inc
gs
sbb
movsb
ret
cmp
pop
xchg
cmp
inc
icebp
lods
cli
pop
stos
dec
jecxz
xchg
and
cli
ja
call
jbe
testb
dec
and
lds
lret
xlat
es
xorb
mov
dec
and
ljmp
ret
das
jne
orl
imul
stc
movb
pop
out
xchg
pushf
xchg
mov
push
pop
fcmovbe
mov
and
dec
loopne
sub
dec
inc
jne
mov
mov
cltd
pop
imul
jno
mov
mov
data16
cmp
sbb
adcb
jg
mov
ja
mov
andl
xchg
jo
push
sbb
clc
mov
jae
and
add
jecxz
push
push
ljmp
pop
das
mov
add
aaa
or
and
push
in
push
incl
sub
pop
repnz
imul
int
add
bound
les
decb
mov
mov
xor
in
cmp
out
stos
pop
jno
push
mov
cmc
adc
and
fldl
cmp
dec
out
inc
xchg
push
lea
add
or
outsl
pusha
inc
sbb
jmp
hlt
incl
int3
fstps
call
out
call
cmp
out
inc
psubsw
test
leave
out
xchg
in
dec
push
adc
insb
pop
jb
std
push
sti
jne
aad
ss
ljmp
fldenv
cmpsb
and
ss
addr16
push
out
mov
xchg
rcrb
lcall
lds
fsubl
mov
sbb
sbb
loop
mov
in
and
inc
adc
fcomip
sbb
sbb
mov
lods
sub
push
test
test
out
cltd
fnstsw
testl
cmc
mov
pop
sti
jle
mov
jbe
and
fdivr
mov
lcall
lret
test
adc
adc
test
jge
mov
xor
sub
dec
fdivl
push
in
ja
jecxz
sub
ljmp
mov
cli
inc
jmp
mov
ljmp
cmp
push
jge
fsubs
xor
fnstcw
rol
mov
mov
cmpsb
cmc
cmp
movsl
jp
sub
mov
es
lods
mov
in
js
or
push
jle
testb
ret
mov
pop
add
cmc
lahf
pop
cmpb
aad
test
enter
cmp
sbb
call
cmp
or
sbb
in
lcall
out
outsb
jmp
jmp
jle
mov
call
ss
ljmp
xor
scas
sub
and
movsl
xchg
xor
dec
mov
cmpsb
loopne
shlb
icebp
add
decl
in
jg
push
push
pop
xchg
imulb
jbe
lea
mov
int3
stos
dec
push
in
add
sahf
shll
jecxz
push
sbb
sub
mov
popf
pop
ljmp
xchg
or
mov
sbb
pop
xchg
fcmovnbe
push
jmp
inc
adc
mov
adc
jmp
cmp
into
test
out
mov
leave
xor
jp
mov
pushf
rcr
pop
push
bnd
sbb
jns
aaa
mov
ljmp
outsl
adc
inc
fildl
mov
and
sub
mov
ret
inc
movsb
jb
loop
or
cmp
or
add
or
cmpsb
pushl
pushf
fs
rcll
xor
sarb
repz
add
xchg
lret
icebp
cmp
repz
xchg
push
notb
and
iret
repz
dec
addr16
loope
adc
repz
out
jmp
cmp
repz
repz
push
imul
pop
cmp
repz
mov
andb
iret
repz
loopne
sbb
iret
repz
pop
sbb
iret
repz
sub
add
movsl
repnz
pop
iret
repz
sub
cmp
repz
mov
iret
repz
stos
push
push
iret
repz
stc
cmp
cmp
repz
jmp
int3
repz
repz
mov
fcmovne
repz
inc
jmp
cmp
repz
dec
sti
push
push
repz
repz
fs
cmp
repz
mov
rcrb
repz
push
or
inc
repz
repz
iret
repz
test
lahf
mov
lds
fsubrl
cmp
repz
adc
iret
repz
jge
adc
repz
repz
shrb
repz
repz
sbb
out
iret
repz
mov
cmp
repz
movsb
in
fwait
repz
repz
call
cmp
mov
cmpsl
cmp
repz
jnp
hlt
add
cmp
repz
jle
out
repz
fxch
aam
scas
xor
repz
shlb
mov
cmp
repz
iret
repz
lea
sbb
repz
jg
pop
jae
cmp
repz
push
xor
iret
repz
mov
mov
xor
in
cmp
aas
jns
cmp
repz
iret
repz
cmpl
cmp
repz
inc
jno
pushf
repz
pause
popa
jo
inc
iret
repz
cmpsl
movsb
pop
imul
repz
add
insl
jbe
cmp
repz
xlat
lret
inc
mov
pop
sbb
shlb
iret
repz
stc
pop
pushf
jp
cmp
repz
andl
enter
iret
mov
jno
lods
cmp
repz
cmp
xor
cmp
repz
scas
mov
iret
push
add
repz
stos
sub
jnp
cmp
repz
repz
sbb
repnz
mov
push
push
loope
cmp
repz
out
lahf
adc
repz
mov
add
iret
repz
adc
cmp
repz
inc
mov
iret
repz
or
push
add
cmp
jb
cmp
repz
repz
cmpsb
push
cs
repz
addr16
xchg
lds
cmp
repz
sbb
iret
repz
or
repz
sbb
frstor
cmc
cmp
repz
jle
cld
repz
repz
faddl
cmp
and
xor
repz
jecxz
mov
repz
sub
iret
repz
dec
shll
iret
repz
mov
cmp
repz
adc
cmp
adcb
iret
repz
mov
cmp
repz
cmp
fwait
or
cmp
repz
mov
repz
repz
repz
mov
add
mov
repz
push
ljmp
inc
sbb
repz
popa
or
cmp
leave
cmp
repz
mov
jae
repz
repz
int
outsl
fcmovne
repz
repz
ret
and
dec
xchg
add
repz
iret
hlt
inc
pop
daa
stos
popf
cmp
repz
jecxz
jbe
repz
repz
sub
iret
mov
ljmp
cmp
rorl
iret
repz
mov
repz
ret
mov
repz
into
fistps
push
repz
repz
imul
dec
inc
fidivrs
dec
cmp
repz
push
jmp
iret
repz
sub
cmp
iret
jns
imul
cmp
cmpsb
cs
cmp
repz
cmp
and
ds
les
repz
push
cwtl
mov
repz
mov
enter
iret
jl
test
subb
iret
repz
pop
push
test
sub
iret
repz
or
fwait
rcr
iret
repz
adc
iret
repz
mov
iret
icebp
jne
jg
jb
iret
repz
sti
inc
and
repz
repz
arpl
iret
dec
mov
cmp
repz
shll
repz
iret
repz
dec
cmp
aam
jp
iret
repz
lods
cmp
repz
repz
fdivrs
ret
iret
repz
pop
rcl
and
repz
cmp
pop
lcall
mov
iret
out
lahf
mov
aas
cmp
repz
mov
cmp
repz
add
int
iret
repz
dec
out
stos
xchg
shrl
iret
repz
gs
mov
or
adc
iret
repz
xlat
mov
cmp
repz
inc
shl
adc
cmp
repz
idiv
cmp
iret
scas
push
cmp
repz
or
cmp
repz
lret
xor
call
push
xor
movsl
cmp
repz
sti
jl
cmp
xor
inc
inc
fsubrp
dec
push
jnp
xor
dec
xchg
or
ret
dec
or
mov
mov
pop
mov
jmp
xchg
push
aam
pop
int3
pop
gs
insb
jo
push
std
in
mov
push
cmpsl
lea
test
mov
pop
add
shrb
add
scas
mov
ljmp
xchg
adc
addr16
xchg
repnz
into
lock
jae
lods
je
out
xor
call
ljmp
icebp
sbb
sub
mov
bound
stos
sbb
dec
sarb
lcall
sbb
outsl
cli
hlt
pop
mov
adc
sub
pusha
out
sbb
pushl
jp
xchg
leave
pushf
out
mov
sub
mov
jmp
cmp
push
cltd
popa
pop
sub
mov
ja
es
adc
push
and
pop
popf
je
es
mov
mov
mov
push
das
mov
pop
mov
setge
cs
popf
hlt
shlb
scas
into
sub
jbe
xor
inc
and
mov
pop
inc
inc
and
inc
or
out
cmp
jbe
hlt
rorb
sahf
push
es
sub
dec
sbb
inc
lea
jbe
ficomps
xchg
mov
push
dec
xchg
into
rclb
cmp
dec
mov
dec
sub
out
scas
inc
inc
lods
xor
mov
ss
popf
xor
push
outsb
sahf
mov
push
dec
not
dec
inc
mov
dec
hlt
mov
sahf
inc
or
fisubrs
jne
dec
outsb
fimuls
je
push
inc
mov
fwait
jg
mov
ds
mov
xchg
push
push
inc
or
pop
fidivrs
jbe
mov
dec
inc
imulb
aam
inc
or
sub
arpl
into
pop
lods
je
dec
out
push
data16
pop
sub
dec
popf
mov
outsb
push
das
cmc
push
jle
dec
cmp
outsb
ds
cmpsb
fdivp
aam
dec
jle
push
aam
arpl
dec
sbb
sub
ss
mov
xchg
push
xor
jbe
pop
dec
popf
testb
jne
push
cs
cmp
inc
sub
dec
scas
xor
inc
dec
dec
cmp
dec
sbb
dec
mov
xchg
push
jle
jne
push
inc
cs
out
push
imul
sbb
lods
cmc
aam
scas
pop
push
cmp
push
es
pop
dec
xchg
out
pop
lea
mov
mov
dec
sub
push
scas
cmp
push
push
cmc
aam
inc
testb
push
arpl
dec
cmp
inc
sbb
push
out
sbb
jle,pn
push
arpl
jle
cmp
add
cmpsb
jbe
lods
mov
sahf
jbe
xor
pop
rclb
pop
inc
push
repz
pop
inc
add
or
sbb
sub
cmp
pop
push
cmp
repz
inc
je
imul
xchg
mov
repz
cmc
iret
shl
cmp
repz
insl
iretw
repz
push
pop
inc
dec
and
cmp
repz
ds
sbb
cmp
repz
rcr
iret
repz
out
icebp
cli
xchg
cwtl
cmp
repz
mov
iret
repz
iret
repz
fcmovbe
int3
scas
movsl
cmp
repz
mov
mov
inc
dec
push
pop
iret
repz
push
jl
push
adc
or
xor
and
cmp
repz
lea
cmp
mov
fidivrs
repz
enter
repz
repz
sub
iret
repz
adc
pop
or
outsb
cmp
repz
js
inc
pop
repz
repz
idiv
loope
iret
repz
fcmovnbe
int
scas
movsb
cmp
repz
mov
mov
sahf
inc
dec
push
pop
iret
repz
imul
pop
adc
iret
repz
add
cmp
mov
cmp
mov
fistpll
repz
leave
clc
repz
repz
repz
aaa
sub
iret
repz
adc
push
or
repz
jns
inc
pop
repz
repz
add
pop
sbb
repz
sub
push
cmp
repz
inc
jne
arpl
cmp
repz
iret
repz
popf
xchg
mov
repz
hlt
repz
repz
insb
addr16
repz
push
pop
inc
dec
and
cmp
repz
aas
push
add
repz
rcr
iret
repz
out
lock
xchg
cltd
cmp
repz
mov
iret
repz
iret
repz
xor
and
cmp
repz
jg
push
inc
repz
repz
rcr
lret
repz
in
repz
cmp
scas
mov
repz
mov
repz
popl
cmp
repz
out
std
repz
repz
iret
repz
pop
push
inc
dec
add
cmp
repz
adc
cmp
and
ja
iret
repz
pop
push
inc
dec
add
cmp
adc
cmp
repz
repz
repz
mov
iret
repz
ret
sti
repz
repz
fcmovne
ror
cmp
loop
clc
cmc
mov
cmp
test
cmp
repz
push
or
iret
repz
xor
sub
repz
jns
push
inc
repz
repz
fcmovbe
ror
repz
out
jecxz
stc
mov
cmp
repz
movsl
xchg
repz
or
adc
xor
bound
iret
repz
jne
pop
dec
repz
repz
popa
insb
jnp
iret
repz
push
pop
dec
inc
or
iret
repz
push
cmp
iret
repz
repz
test
cmp
repz
into
in
loopne
repz
repz
mov
lods
mov
orl
iret
repz
enter
repz
repz
addr16
jo
repz
push
pop
dec
inc
lar
repz
sbb
ss
cmp
repz
add
sbb
repz
cmp
cmp
repz
jae
pop
dec
repz
repz
lret
iret
repz
call
mov
scas
mov
cmp
repz
add
adc
iret
repz
and
ss
dec
inc
cmp
repz
push
insb
gs
cmp
repz
cltd
orb
mov
cmp
repz
ret
cld
cmc
out
repz
repz
xor
and
repz
pop
push
or
iret
repz
push
cmp
repz
stos
mov
cmp
popl
cmp
repz
clc
into
aad
cmp
repz
fs
iret
repz
push
pop
inc
dec
ds
cmp
repz
and
cmp
repz
out
hlt
std
iret
repz
ret
fldcw
cmp
mov
sbbl
dec
inc
pop
push
iret
repz
imul
iret
repz
push
and
xor
cmp
repz
aam
iret
repz
stc
lock
xchg
pushf
cmp
repz
mov
iret
rep
in
in
test
rcr
movsb
lods
cmp
repz
mov
cmp
repz
jl
outsb
addr16
repz
pop
push
dec
inc
xor
cmp
repz
das
adc
add
cmp
repz
faddp
int3
iret
repz
repz
loope
lahf
xchg
cmp
repz
test
iret
repz
iret
repz
arpl
js
push
cmp
repz
adc
and
repz
repz
repz
mov
fstpt
repz
leave
idiv
in
cmp
repz
or
sbb
iret
repz
cs
cmp
inc
dec
cmp
repz
pop
outsw
je
cmp
repz
test
mov
test
iret
repz
repnz
fcomip
cmp
repz
xor
and
iret
repz
adc
jo
iret
repz
bound
dec
jnp
xor
repz
add
adc
inc
cmpb
cmp
ss
fsubrs
dec
lcall
iret
arpl
xchg
xor
repz
jge
out
lds
repz
mov
icebp
add
cltd
push
add
sub
in
inc
mov
testb
cvtpi2ps
pop
pop
pop
jp
int
dec
mov
in
stos
jg
cs
adc
sti
adc
add
inc
add
je
pushf
cmp
or
sbb
xchg
pushf
cmp
mov
nop
xchg
xchg
xchg
cmp
shll
cld
bound
sbb
inc
jns
cmpsl
mov
rorb
out
sahf
out
jo
inc
adc
sarl
adc
std
sbb
cmp
sbb
and
out
sbb
cld
js
jns
jns
out
jp
cld
les
mov
add
jno
pusha
orb
and
fisttps
mov
lds
jle
test
shll
leave
in
add
mov
mov
mov
sbb
in
call
dec
and
adc
push
ficompl
mov
pop
fisubrl
xor
fcomp
loopne
in
mov
xor
adc
pop
sub
lock
push
test
das
popa
adc
ss
test
push
dec
inc
pop
jb
rcl
pop
add
and
inc
repnz
dec
add
test
sbbl
add
addb
ret
push
and
shll
push
xor
push
push
ret
add
add
test
inc
add
test
mov
add
and
add
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addb
add
js
inc
insb
outsl
bound
inc
sbb
in
jb
gs
push
imul
outsl
dec
out
dec
xchg
inc
jns
sub
jb
outsb
push
adc
je
jbe
mov
xor
inc
pop
popa
sbb
push
popa
rcr
mov
imul
addr16
dec
bound
arpl
sub
jbe
pop
push
mov
gs
into
js
in
dec
outsl
lods
gs
imul
jo
imul
push
push
xchg
imul
sti
push
push
pusha
insb
mov
inc
sahf
fcmovnu
loopne
ds
out
sub
jbe
dec
outsl
pop
sti
mov
push
cmpsb
outsb
fs
gs
jne
arpl
cmp
sbb
outsl
popw
sub
adcb
int3
loope
flds
testl
arpl
imul
xor
sub
push
mov
gs
xchg
or
push
ds
loopne
js
jns
jnp
dec
popa
jo
push
push
lods
jge
sbb
dec
sbb
insb
push
outsl
jae
sbb
sbb
pusha
fcomi
inc
dec
inc
push
adc
or
outsw
movsl
enter
jb
gs
xorb
push
xor
push
xchg
jb
shlb
or
jp
and
jne
clc
pop
jno
in
in
enter
popa
xchg
push
inc
jbe
gs
sub
sbb
popf
pop
lea
sub
jae
pusha
adc
dec
push
cmc
or
jecxz
rcl
imul
gs
sarl
cmp
dec
popa
outsb
jo
rcll
cwtl
shr
push
sbb
inc
xchg
bound
sahf
std
pop
jne
push
push
imul
xchg
jns
in
dec
ret
ds
adc
ret
loope
pushf
xchg
outsb
js
clc
notl
jge
inc
aaa
inc
fs
bound
lahf
sbb
jmp
inc
je
dec
jae
inc
inc
push
dec
push
and
push
or
pop
push
sbb
outsl
jns
mov
inc
nop
pop
mov
in
push
fsubrs
xor
cwtl
imul
adc
mov
or
das
sub
je
and
pop
ss
mov
fcoms
and
inc
imul
fwait
inc
xor
add
mov
scas
out
insl
negb
jo
js
mov
outsl
push
sbb
jne
dec
gs
sbb
xor
clc
or
insb
or
bound
fstps
add
jp
sbb
fdivrl
inc
imul
pop
inc
fnsave
arpl
sbb
ja
jnp
mov
inc
xlat
xor
cmpsl
mov
insl
push
sbb
push
fmull
sub
icebp
sbb
and
lret
mov
movsl
inc
popa
sbb
push
scas
pop
out
ljmp
popa
adc
insb
clc
pusha
xlat
mov
insb
adc
imul
add
jb
xchg
insl
arpl
lods
cmp
jae
cmpsl
mov
lea
into
fdiv
mov
shrb
popa
jae
xchg
insl
push
in
test
and
mov
xchg
inc
rorl
mov
jo
lods
xor
jo
mov
push
out
xor
inc
mov
into
push
fdivrs
add
mov
ja
cld
xor
popa
sub
shlb
inc
and
push
jae
aad
push
cmp
je
jne
insb
addr16
mov
adc
jne
je
pop
gs
inc
xor
jne
or
inc
rep
ss
je
cmp
inc
inc
and
jb
rorl
dec
push
and
sbb
shr
mov
jecxz
push
push
lcall
add
idivb
cmp
loopne
sidtl
add
dec
cmpsb
sbb
daa
push
test
int
add
add
shlb
rorb
inc
pop
cmp
lret
or
add
in
mov
loopne
and
pop
jl
push
je,pn
push
out
int3
and
ror
add
jb,pn
add
hlt
sub
sub
rorb
add
dec
ds
lahf
adc
jb
incb
mov
arpl
add
cld
sahf
pop
lock
aaa
xchg
push
aaa
mov
or
xchg
and
xchg
add
add
add
add
call
or
pop
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
