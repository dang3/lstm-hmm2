xor
or
ss
or
mov
add
les
add
mov
add
in
add
leave
cld
add
andb
addw
xorb
xorw
pop
push
popl
xor
jmp
push
xor
mov
mov
mov
lods
mov
jmp
and
out
stc
jge
flds
dec
fs
test
dec
xchg
mov
dec
rorb
fwait
mov
std
jg
xor
jbe
ds
ja
pop
ret
push
mov
add
push
push
push
push
popl
jle
push
mov
addw
sbbw
sbbl
movw
pop
push
mov
mov
add
pushl
mov
and
add
add
mov
add
xor
lea
mov
pushl
popl
add
mov
xor
push
popl
rol
xor
inc
push
popl
cmpb
jne
cmp
je
inc
cmp
jb
mov
add
movzwl
jmp
pop
cmc
icebp
inc
lods
fwait
inc
lea
rolb
jnp
push
cwtl
adc
icebp
push
jle
cli
lahf
push
push
xor
clc
inc
mov
jg
test
js
repz
loop
shl
push
sub
add
mov
add
pop
cmp
jbe
jmp
scas
mov
out
hlt
sub
faddl
jae
rcrb
and
enter
popa
xchg
fistpll
xchg
or
rorl
dec
add
add
jne
pushl
push
shl
inc
mov
sub
xchg
addl
pushl
call
call
andl
jbe
push
mov
xorb
pop
pop
pop
pop
pop
leave
ret
call
test
jne
push
popl
ret
push
push
mov
call
push
add
add
mov
mov
rol
lea
mov
add
xchg
addl
push
call
push
popl
jne
call
daa
dec
inc
mov
jle
sarb
pop
jb
nop
into
ret
orl
jns
stc
mov
pop
cltd
lret
fs
aam
inc
xor
lea
pop
lret
mov
and
lea
adc
lret
and
je
mov
xchg
jmp
cltd
mov
invd
xchg
inc
pushf
xor
jne
fidivs
xlat
sub
andb
pop
and
mov
sti
add
push
push
mov
sub
xchg
mov
pusha
call
mov
push
add
mov
add
xchg
addl
push
call
cmpl
jne
push
popl
jmp
jmp
popa
pusha
call
mov
push
dec
sub
dec
mov
add
xchg
addl
push
call
push
popl
jb
push
mov
addl
pop
mov
mov
xor
xor
push
xor
mov
popl
mov
jae
push
mov
sbbw
pop
rol
inc
dec
jne
cmp
je
cmp
jne
popa
shl
movw
jns
push
mov
xorb
orb
andl
subw
pop
push
xor
push
call
int3
jmp
jmp
sbb
push
add
fildll
xlat
test
cmp
xchg
je
lods
lods
fnstsw
imul
jae
and
xor
and
fs
das
add
add
fistl
xchg
pop
fxch
add
je
cmp
iret
lods
dec
das
push
inc
loope
repnz
lret
ds
hlt
testl
popa
shl
pushl
popl
jle
push
mov
andl
pop
push
xor
push
call
xorl
jne
call
push
decb
add
clc
mov
push
mov
inc
cmpl
nop
mov
pop
or
insl
push
xor
adcb
cmp
mov
xor
add
inc
rclb
subb
imul
repnz
push
mov
push
jmp
pop
mov
push
pushl
popl
jb
call
jp,pt
ja
and
mov
inc
rorl
sahf
jnp
daa
int3
fcoms
out
loopne
call
xchg
fsubs
test
out
mov
sarl
lock
stos
push
imul
outsl
je
sbb
sub
fidivs
cmp
stos
jne
sub
fs
cmp
adc
mov
mov
rep
pop
pop
push
not
sub
mov
sub
xchg
push
xor
jmp
jmp
and
pop
and
les
pop
push
mov
xchg
lcall
fwait
pop
rolb
add
sub
mov
add
push
popl
jno
call
ja
ja
in
shlb
add
clc
adc
cmp
pop
push
xor
dec
jl
and
inc
loopne
sub
add
shld
and
push
sbb
es
xchg
adc
inc
xchg
das
push
filds
mov
and
xchg
loop
pop
add
lahf
lods
daa
mov
or
adc
rorb
test
incl
mov
shr
shl
mov
jmp
sub
mov
cmp
jne
mov
xorw
add
cmpw
jne
ret
call
jge
ljmp
adc
xchg
mov
cmp
enter
out
or
mov
fbld
subb
cmpsb
pop
pop
jae
call
push
xor
dec
ljmp
lret
xor
movsb
xor
mov
jbe
mov
xchg
loopne
add
clc
in
aam
xor
fidivrl
int3
jmp
mov
cmp
mov
imul
cld
dec
xlat
cld
imul
cs
cmpsl
fstp
dec
sbb
cld
sti
scas
cs
cli
int3
xor
imul
test
adc
jmp
mov
stc
adc
cmpsl
inc
dec
andl
rcll
fcmovb
jo
push
fidivs
ss
mov
lds
sub
imul
sub
mov
jle
push
insb
aad
mov
shl
sbb
inc
add
xchg
dec
dec
mov
or
xlat
filds
mov
loope
cmpl
jmp
dec
fcmovnb
ss
or
jmp
rcl
fdivrs
fs
hlt
cmp
inc
int
cmp
insl
add
push
mov
sbb
inc
ficomps
jl
ror
cld
adc
and
and
pop
pop
cmc
xchg
and
add
xchg
dec
imul
mov
add
sbb
ret
cmc
js
mov
pop
xchg
out
or
mov
mov
in
mov
je
dec
lods
sub
cmpsb
jnp
xchg
subl
dec
mov
push
xor
cmpsl
pushf
mov
jmp
inc
jmp
jmp
mov
stos
push
and
inc
jo
scas
les
fsubr
mov
and
pop
push
dec
fs
cs
or
mov
jge
mov
mov
xor
fldenv
jmp
outsl
hlt
xchg
outsb
imulb
pop
test
insl
mov
outsl
stos
jl
pushl
out
and
fcoms
pop
push
adc
fwait
jno
stc
sbb
mov
pusha
mov
insl
lock
dec
inc
push
and
test
dec
ljmp
dec
ss
sub
aam
scas
int3
inc
popf
add
and
loope
popa
pop
jo
js
std
pop
iret
sbb
rcrl
in
or
sub
dec
and
je
jge
jg
xor
sub
scas
movsl
pop
mov
push
cmpsb
out
or
out
adc
fimuls
in
mov
and
pop
xchg
mov
or
cwtl
xor
xchg
xchg
sbb
push
mov
or
mov
cwtl
jmp
outsb
xor
std
mov
push
xchg
bound
sbb
pop
dec
push
mov
mov
jl
jmp
rolb
push
dec
push
stos
std
sar
mov
and
xchg
dec
dec
mov
dec
cmc
int3
in
clc
lcall
xchg
cwtl
rorb
push
jp
mov
in
test
lcall
cmpsb
cld
cmc
and
sbb
push
or
xchg
add
xor
mov
popf
ja
pop
jne
xchg
aad
sub
jl
repnz
cltd
loop
lods
call
clc
or
imul
out
add
add
mov
mov
out
dec
mov
and
movsb
mov
pop
or
aas
push
shll
ja
sub
add
dec
movsb
repz
in
not
sub
jp
scas
lods
xor
out
pop
data16
cmp
lret
fsubrl
cmp
add
adc
sub
movsl
push
jns
inc
jecxz
in
mov
mov
test
mov
push
push
dec
lea
mov
inc
mov
outsl
loope
mov
outsb
mov
adc
imul
mov
cmp
sub
cmp
in
cmp
mov
sbb
mov
lock
testb
lret
lahf
lods
add
xchg
loopne
cmp
in
in
dec
cs
in
cmc
fwait
scas
push
add
push
shrb
xchg
cld
fiaddl
fwait
popf
in
or
rcrl
mov
iret
mov
sub
lock
mov
sbb
jns
xchg
sbb
inc
in
jae
lods
dec
aas
in
iret
dec
dec
out
or
gs
xchg
dec
insb
cmpsl
mov
clc
setge
mov
dec
mov
sub
addb
pop
insl
or
mov
dec
push
jge
jo
enter
or
and
mov
xor
lea
mov
sbb
into
rorb
jno
ja
imul
pushf
shlb
lds
mov
adcl
mov
push
mov
xchg
int
sub
fnsave
popa
add
jecxz
mov
scas
ret
mov
inc
stos
movsb
stos
test
or
test
jecxz
jg
pop
icebp
clc
push
xor
in
imull
loope
dec
mov
cs
xor
mov
xchg
lcall
pop
xchg
hlt
or
outsl
lds
dec
ljmp
sbb
aaa
sbb
fs
jl
or
push
dec
jns
and
lds
enter
rolb
addr16
inc
in
cmp
aam
jge
faddl
in
mov
xlat
xor
sbb
inc
add
les
or
xchg
xor
cmc
daa
cld
lods
fldl
ds
sub
repnz
int3
fstpl
stc
sub
mov
pop
fs
sbb
jle
pushf
adc
xchg
pop
outsb
dec
mov
dec
ljmp
sbb
pop
cmp
xor
fs
aad
xchg
mov
dec
fcmovnu
mov
mov
add
push
mov
cli
ret
into
and
in
shr
mov
iret
test
test
gs
dec
sub
shll
out
mov
jmp
clc
movsb
stos
imul
or
leave
sbb
les
fildll
repnz
in
je
jl
mov
lahf
cmp
mov
cmp
lds
imul
add
fidivl
leave
fdiv
xchg
movsl
mov
ret
ja
cltd
in
add
mov
daa
sbb
sbb
or
out
and
push
repz
mov
or
movsl
cwtl
dec
mov
sbb
lods
or
sub
loope
divl
int
cltd
in
inc
je
jl
cmpsl
sbb
push
repz
popa
push
icebp
pop
xchg
pop
jp
add
and
mov
mov
mov
lret
leave
dec
lock
xor
lods
mov
lret
pusha
dec
iret
sahf
inc
icebp
push
das
cmpsb
loop
daa
adc
aad
pop
cmp
sbb
fsubrl
sbb
movsb
aam
movsb
test
rsqrtps
movsl
jne
jg
shrl
push
jae
mov
pop
inc
push
js
test
and
cmc
cmp
sarb
les
xlat
ja
repz
mov
in
shll
out
push
mov
mov
test
fiaddl
dec
loope
insl
std
imul
pop
das
fwait
in
shll
jmp
rcrb
pop
cmp
fimuls
xor
mov
xchg
pop
and
adc
lock
sahf
lret
nop
lcall
fildl
lahf
int
or
mov
or
jmp
pop
shl
jecxz
loopne
into
xchg
dec
ljmp
ds
fldcw
lds
adc
inc
sbbl
mov
hlt
adc
sub
xchg
adc
mov
mov
ret
cli
and
xor
ljmp
pop
insb
pop
dec
iret
int3
push
out
push
rol
sti
cmp
movsb
ja
mov
dec
es
ja
mov
dec
push
dec
mov
push
movsb
or
mov
add
out
mov
or
mov
leave
cltd
adc
jbe
mov
jo
mov
mov
mov
xchg
cmp
dec
shlb
jl
rol
outsl
addr16
lahf
add
pop
in
xor
xchg
jnp
pop
fdivr
lea
aam
adc
dec
jns
notl
xchg
jbe
and
insb
nop
nop
gs
xchg
dec
xor
xchg
inc
pop
fs
pop
mov
jmp
sahf
movsb
mov
push
xchg
pop
into
lahf
lret
or
adc
mov
hlt
out
push
xchg
push
xor
jg
add
in
outsl
cmp
notl
stc
loope
rclb
int
nop
mov
in
orl
sar
jno
mov
into
inc
stos
fs
sbb
mov
inc
mov
movsl
sahf
and
pop
fadds
leave
stos
sti
jge
ret
std
pusha
cmpsb
arpl
pop
xchg
xchg
es
jl
sub
loopne
fldl
push
sub
xchg
in
xchg
push
sub
add
xchg
lcall
xchg
xor
dec
push
test
or
push
add
pop
cmp
mov
xchg
or
data16
idiv
xchg
xor
jg
cmc
ret
mov
jne
cmpsb
mov
in
dec
mov
int3
sub
sbb
sbb
mov
fcomi
sub
iret
out
cmp
cmp
mov
roll
push
mov
test
mov
xor
push
shll
inc
jae
scas
pop
add
adc
xchg
mov
mov
xchg
dec
push
repnz
scas
cmp
addl
test
lea
dec
rep
hlt
lret
mov
scas
bound
mov
dec
push
mov
mov
cmpsl
mov
cmp
test
out
aad
je
jl
jmp
div
sbb
and
jg
sub
imul
push
aam
adcb
cmp
iret
jge
cs
xchg
jmp
xchg
dec
mov
ds
mov
stos
imul
mov
push
cmp
int
xor
push
hlt
enter
call
push
mov
out
mov
and
pop
mov
lods
push
dec
call
test
sub
mov
test
in
jnp
xchg
fsubp
cmp
mov
test
fisubrl
adc
ljmp
mov
and
xor
cltd
in
int
ret
ja
add
test
push
add
mov
fwait
cmc
rcl
mov
xor
fmul
rcrl
dec
aad
xor
mov
jl
cmc
pop
xor
fs
push
mov
out
or
mov
dec
loop
das
je
jae
popf
iret
push
movsl
scas
sbb
ret
shll
add
or
orb
arpl
aad
mov
icebp
imul
loop
in
rcrb
push
aam
subl
pop
fnstcw
icebp
dec
jle
add
sbb
sbb
ret
sar
std
fsub
pop
cli
gs
lds
jns
aad
fs
add
push
mov
out
in
push
bound
push
pop
lret
iret
loop
and
stos
pop
fnstcw
mov
xchg
mov
imul
cmc
int3
inc
imul
sbb
mov
mov
push
popf
cmp
xchg
cmp
add
mov
leave
jge
and
adc
push
cmp
xchg
ja
pop
jo
sbb
loopne
lahf
lahf
pop
sub
test
sub
and
daa
das
xor
mov
inc
mov
jl
cltd
mov
nop
out
imul
mov
jns
dec
out
arpl
clc
iret
mov
cmp
pop
pop
or
and
add
imul
fwait
xchg
loope
dec
adc
inc
pop
pushf
mov
push
mov
push
push
dec
subb
call
push
fprem1
adc
lret
mov
scas
inc
dec
cmp
int
mov
addr16
les
lea
mov
push
and
dec
in
fbld
mov
mov
xor
jae
xor
lcall
cmp
push
data16
lods
negl
inc
mov
fwait
cmp
pop
out
or
xchg
dec
push
in
in
add
jae
xchg
dec
inc
sub
sbb
int3
sbb
pop
out
hlt
notl
or
insb
lcall
push
push
jmp
mov
das
ja
inc
push
popa
adc
pop
stos
in
out
dec
shll
sub
lcallw
mov
inc
xor
ds
aas
scas
in
mov
cmc
dec
pop
arpl
aas
lods
mov
dec
dec
xchg
data16
dec
nop
xor
mov
dec
ljmp
leave
ss
rolb
jns
repnz
repz
sbb
jno
in
into
in
mov
dec
ljmp
mov
mov
shll
add
add
mov
call
mov
ljmp
mov
into
popa
iret
ss
daa
sub
mov
pop
jmp
pop
jno
inc
hlt
xchg
dec
shrl
xchg
xchg
add
mov
loope
inc
xor
mov
loop
inc
stos
fs
xchg
add
xchg
pop
outsb
test
ljmp
xchg
fldt
jge
out
test
ljmp
pusha
sahf
mov
push
sbb
jbe
subl
xor
jb
stc
std
fs
cs
sub
mov
test
adc
mov
imul
fimull
add
sub
hlt
cmpsl
in
push
xchg
dec
shrl
sub
lods
out
cmp
cmp
dec
jno
add
add
mov
add
xchg
repz
mov
jne,pn
ror
cmp
jno
add
sbb
add
scas
cli
jb
fcoml
sub
jge
jae
rorb
int3
or
leave
pop
pushf
pop
or
fisubrl
cmc
push
popf
add
mov
dec
inc
sbb
cli
jg
imul
les
fidivrs
jmp
mov
test
jl
dec
ljmp
nop
loop
rorb
jbe
shrl
test
stc
nop
ds
cmp
nop
movsb
sbb
push
jmp
aas
fimull
mov
dec
dec
repnz
iret
stos
into
pop
aad
push
shlb
scas
jl
mov
mul
and
cmc
xchg
stos
out
xlat
pop
stc
arpl
or
push
loope
divl
in
jbe
xchg
out
in
add
cli
popf
jnp
popa
push
vmovsd
jp
in
push
xchg
dec
aad
cmp
sar
mov
movsl
ss
insb
mov
test
mov
mov
add
enter
jp
icebp
jae
mov
ret
stc
dec
sub
addb
sub
push
add
sub
inc
jae
xchg
jg
cmp
nop
or
aaa
les
aad
mov
fmulp
sub
inc
push
mov
lods
aaa
pop
nop
loop
call
repz
sbb
mov
insl
movsl
stos
sbb
sbb
or
adc
in
movsl
imul
cmpsl
fiaddl
xlat
repz
das
sbb
xchg
mov
insl
add
rolb
mov
add
or
ret
add
add
and
shrb
cltd
adc
std
fsub
jnp
cmp
in
adc
pusha
lahf
into
sti
xor
push
test
cmc
das
xchg
out
inc
mov
lea
jl
sbb
xchg
pop
mov
mov
jg
xor
les
xchg
xor
in
and
sti
cmp
ljmp
sub
scas
inc
adc
inc
ljmp
ja
ss
pop
aad
jle
in
cmp
xchg
jae
test
cmp
data16
xlat
pop
xor
scas
das
xorl
adc
mov
lahf
test
xor
xchg
mov
rclb
inc
les
je
sbb
dec
int
repnz
or
sub
pop
push
cli
scas
mov
xchg
outsb
add
icebp
jecxz
xchg
pop
fsubr
out
pop
or
out
ror
ret
rclb
scas
adc
mov
insb
out
jbe
mov
or
out
dec
or
pop
mov
shr
pop
mov
mov
dec
sub
inc
outsl
or
cmp
call
xor
mov
out
sti
lock
test
aad
stos
cmp
mov
xor
cmpsb
cmp
inc
push
mov
sub
jg
test
testl
enter
xor
loope
cltd
cmp
dec
gs
mov
pop
sahf
andb
or
out
pop
pop
aas
inc
jbe
subb
jg
jge
ljmp
sub
push
popf
sbb
ljmp
pop
sbb
mov
out
sbb
into
testb
mov
add
mov
movsb
into
enter
pop
or
int3
call
jle
subl
dec
lea
hlt
jbe
pop
mov
dec
ljmp
pop
cwtl
imul
hlt
xchg
mov
xlat
xchg
pop
loope
cmp
push
in
mov
subb
jge
jns
push
loop
cmp
shrl
out
mov
xchg
repz
cmp
movsb
mov
pop
pop
shrb
out
jbe
fnsave
out
dec
cs
in
add
add
ret
xchg
lcall
add
aad
xchg
or
jle
mov
dec
dec
fisttpl
mov
push
ja
xchg
jno
stos
in
loope
ja
push
mov
mov
nop
mov
xor
push
fwait
cld
mov
adc
mov
mov
insb
ljmp
ficoms
push
addb
sub
ret
adc
xchg
dec
ljmp
scas
push
cmp
ja
fnstsw
sub
jmp
test
aam
lods
test
dec
cmp
xchg
pop
loopne
mov
xor
js
xor
incb
mov
insb
ljmp
stc
sbb
into
lods
fisubs
jae
pop
mov
push
aam
xchg
stc
xchg
dec
ljmp
or
psubb
jg
jbe
xor
push
aam
scas
dec
fnstsw
push
in
xchg
ret
push
mov
mov
mov
ficompl
mov
daa
mov
orl
aaa
sbb
mov
pop
inc
inc
fstps
fsubp
fldcw
pop
cmp
mov
xor
ret
inc
jbe
cs
adc
mov
ja
cmp
in
mov
repnz
into
shrb
push
dec
push
jbe
outsb
push
mov
mov
mov
std
inc
cmpsb
jbe
add
insb
pop
loopne
and
imul
outsb
push
push
pop
lods
jge
insb
idivl
stos
test
jns
mov
mov
jne
mov
into
push
mov
popa
shlb
dec
inc
and
adc
std
divb
data16
adc
outsl
mov
mov
xchg
cmp
jnp
addr16
xor
cmpsl
cs
inc
push
xchg
cmpl
xchg
add
xchg
push
mov
lea
subl
add
sbb
mov
pop
push
aad
inc
push
xorl
loop
cmpsb
jl
dec
movsb
xor
out
mov
loope
pop
sub
xor
imul
cmp
mov
xor
int3
xchg
jb
mov
or
inc
repz
pop
add
dec
mov
push
xlat
xchg
dec
rol
mov
popa
repnz
sahf
xchg
subb
pop
loopne
ss
into
and
pop
ds
or
dec
push
jp
imul
rolb
enter
adc
dec
ljmp
dec
sbb
inc
fwait
xchg
cvtps2pd
pop
shll
jg
in
dec
cmp
cmp
pop
in
xchg
dec
push
sub
das
xchg
dec
inc
push
jbe
in
in
xchg
xchg
roll
mov
sbb
sahf
jne
fcompl
or
xchg
jbe
jne
lahf
sbb
xchg
dec
orb
ret
sbb
sahf
pop
jle
lahf
cs
dec
push
push
mov
in
out
cwtl
in
out
mov
push
mov
pop
test
jecxz
out
movsb
cmpsb
sar
jge
ljmp
es
mov
add
dec
sub
stos
xor
or
clc
fucomi
notl
mov
pop
or
imul
adc
push
add
rcrb
jp
cmpsb
das
pop
lret
jmp
xchg
dec
ljmp
cmpsl
xchg
cmc
cltd
push
and
int3
fistpl
mov
and
imul
ljmpw
mov
out
mov
cmc
orl
sub
jae
xor
mov
pop
mov
and
xchg
cmpsb
inc
cwtl
sub
mov
inc
xor
rol
stc
push
pop
xor
pop
pop
push
lret
pop
cli
fdivrs
mov
lods
mov
sub
test
cwtl
xor
jnp
stos
aaa
outsb
stos
rcrl
jl
sbb
movsb
mov
push
roll
cmp
aam
insb
and
fisttpl
loop
jp
inc
out
outsl
push
ret
inc
mov
das
out
xchg
sub
xchg
pop
ja
or
xor
add
cmpsl
out
repnz
pusha
jg
sbbl
mov
dec
or
cmpsl
fisubs
pop
jge
popf
lods
adc
add
pushl
jg
mov
int
andl
mov
pushf
inc
xchg
mov
lret
icebp
pop
jae
out
fadds
add
iret
mov
fnstcw
mov
adc
add
mov
jg
jnp
mov
divl
sbb
mov
jbe
test
bnd
sub
rclb
mov
mov
iret
pandn
fimull
imul
cs
loop
push
gs
popa
loope
mov
jae
jae
xlat
loop
movsb
xor
fnstcw
lods
pop
notl
pop
mov
add
out
test
add
mov
or
fdivrl
mov
cli
adcb
lods
shlb
cwtl
pop
leave
add
ret
stos
sbb
lahf
jne
mov
dec
jecxz
es
xchg
dec
ljmp
dec
sbb
lods
mov
adc
jecxz
dec
orl
out
xor
pop
je
fsts
aaa
pop
cmp
xor
add
pusha
or
fstl
fucomip
pop
mov
mov
pop
jmp
fidivrs
lret
imul
or
idivb
push
das
or
xchg
cli
dec
fsin
fbld
call
xchg
int3
repnz
xor
das
xlat
push
inc
cmp
jl
xor
jmp
jno
pop
into
adc
lds
add
mov
push
clc
pop
out
shrl
push
adc
insb
rclb
inc
fiaddl
rcr
mov
sahf
popa
hlt
and
and
fimull
xor
mov
pop
cmpsb
dec
daa
into
inc
pop
cmp
fisttpl
int
lret
mov
in
aad
pop
jmp
loop
test
icebp
cmp
testb
fstl
jae
stos
cli
lahf
popf
xor
cwtl
out
fldenv
pop
jp
mov
test
xor
or
mov
test
cmpsl
pop
or
out
rol
test
scas
pop
loop
pop
add
mov
out
mov
jge
xchg
dec
insl
add
pop
mov
jg
imul
fnstenv
mov
mov
sbb
xchg
xor
enter
mov
ret
ja
pop
lret
push
inc
fcmovb
pop
mov
aas
mov
mov
inc
inc
frstor
add
in
or
lret
out
scas
fwait
xchg
add
in
dec
cmpsb
mov
xor
mov
fisttpl
inc
ja
rorb
fistps
xchg
xor
pop
dec
pusha
xchg
mov
adc
mov
test
movsl
hlt
clc
sub
inc
aaa
je
pop
fiaddl
loope
or
cmp
cwtl
mov
repz
insb
fisttpll
mov
pop
out
pop
pop
inc
mov
lret
stos
jnp
add
sbb
push
leave
pop
cltd
int3
stos
push
std
mov
mov
mov
jb
ds
or
test
loop
jbe
loope
nop
mov
popa
or
add
int
cmc
test
pop
pusha
imul
adc
inc
cmp
xchg
jb
pop
add
jns
jg
xchg
aam
jge
int3
adc
jge
cmp
sbb
push
rol
mov
insl
ja
lods
icebp
shrl
push
loope
dec
xchg
xor
lcall
mov
repnz
shl
mov
loop
out
jbe
push
sbb
push
daa
pusha
dec
punpckldq
in
xchg
dec
ljmp
dec
movsb
push
push
xor
xchg
bound
popf
jo
daa
add
mov
pop
das
ret
cli
sahf
arpl
cld
fdivrl
test
mov
mov
shr
push
mov
pop
xchg
mov
jecxz
xor
fidivrl
or
jle
call
dec
aas
pop
nop
loop
out
das
inc
jno
push
cli
aam
pop
mov
mov
je
sbb
loope
call
loope
ret
cmp
mov
mov
orb
cli
xlat
sbb
insb
aas
or
jg
es
add
adc
mov
dec
repnz
movsl
cmp
rol
out
sub
jl
mov
hlt
xchg
pop
loopne
imul
mov
les
adc
cmp
stos
imul
add
orb
and
cwtl
aad
aam
pop
sti
hlt
sub
pusha
bound
cs
sbb
push
sbbb
aad
lret
dec
test
xchg
mov
aad
fwait
cs
xchg
jg
shr
loop
outsl
insl
mov
stc
mov
fsubrp
mov
je
xchg
xchg
jmp
daa
loop
mov
mov
adc
ret
in
adc
mov
jo
dec
stos
dec
sbb
mov
add
mov
stos
pop
ljmp
jne
mov
mov
test
mov
add
push
ficoms
xor
adc
lret
sbb
xchg
das
mov
mov
xbegin
mov
mov
sub
and
and
xchg
test
xlat
lahf
sbb
pop
lds
aam
std
lea
pop
dec
dec
push
mov
jno
jae
adc
xlat
mov
clc
dec
mov
addl
mov
mov
xor
mov
add
jge
sbb
pop
cmpsb
pop
sti
sahf
mov
sub
sub
mov
aas
hlt
inc
and
adc
cmpl
rcr
clc
jmp
mov
aad
xchg
mov
mov
sbb
insb
outsb
dec
pop
mov
mov
cltd
and
xchg
stos
arpl
in
or
fmuls
and
nop
bnd
jl
pop
mov
mov
out
jmp
jb
jg
shl
fidivrs
xchg
sub
mov
jg
jle
repz
fdivl
subl
add
xchg
das
xchg
sub
sbb
mov
inc
mov
das
jl
int
icebp
push
push
fwait
incl
outsl
lock
mov
jb
mov
add
mov
inc
outsl
sahf
outsl
rorb
inc
lea
imul
movsl
dec
cmp
dec
je
jl
inc
fsubrp
in
pop
loopne
fnstcw
cwtl
cld
cmp
push
mov
dec
jl
in
push
test
mov
xchg
sarl
ljmp
xchg
inc
jmp
xchg
dec
ljmp
dec
and
cli
shrb
imul
sbb
jle
and
stc
cmc
inc
shl
pop
scas
ss
cmp
stc
jmp
in
fldt
pop
movntq
adc
aaa
jb
jg
jmp
ror
jns
lcall
out
scas
clc
cmp
jae
or
adc
jne
dec
inc
aam
push
std
push
sahf
push
pop
inc
icebp
sbb
ljmp
rclb
pop
aas
sub
mov
xchg
dec
push
in
sti
push
stos
push
cwtl
outsb
loop
cmpsb
jl
mov
cmc
cmp
pop
mov
fdivrl
ret
mulb
cmp
cli
inc
ljmp
out
xchg
push
ds
rorl
jecxz
das
jo
or
pusha
ljmp
ja
sbb
mov
dec
xor
jg
ljmp
cmp
js
xchg
pop
mov
add
mov
outsb
mov
pop
loope
mov
into
sub
neg
lret
stos
xor
rolb
pop
test
icebp
cmp
imul
clc
or
jns
adc
cwtl
daa
pop
xchg
pop
push
add
sub
cmpsl
mov
shrl
out
mov
pop
sub
mov
sahf
ljmp
dec
mov
jmp
rcrl
subb
or
xorl
fidivrl
ljmp
cmp
mov
push
test
mov
out
push
js
arpl
fimuls
mov
cmp
adc
jae
out
sub
and
inc
sti
cltd
sub
add
xchg
xor
sti
mov
add
jo
cmp
icebp
cmc
outsb
rcrl
jp
xchg
rcl
push
in
out
dec
ljmp
jb
push
inc
rcll
filds
xchg
lcall
xor
loop
adc
mov
idivb
jbe
cld
loope
and
add
pop
inc
std
cltd
sub
or
xchg
dec
ljmp
add
ret
pop
jp
sahf
pushf
cwtl
inc
push
sbbb
sbb
jge
ljmp
iret
hlt
mov
dec
ljmp
inc
in
cltd
sub
in
mov
dec
ljmp
jnp
mov
dec
jne
push
mov
loop
mov
pop
xchg
dec
movsb
mov
dec
ja
addr16
sbb
sub
jge
jne
dec
or
add
mov
add
mov
in
dec
add
mov
mov
xor
pop
jecxz
lret
daa
sbb
cwtl
xor
bound
pop
insl
movsb
icebp
adc
testl
push
mov
sarl
clc
cmpsb
jbe
int3
test
fidivl
xchg
mov
pusha
jb
dec
in
out
jmp
out
ljmp
fidivrs
mov
mov
mov
xchg
lret
daa
mov
cwtl
adc
mov
mov
push
fwait
leave
adc
icebp
mov
mov
aaa
dec
or
inc
push
stc
addr16
push
stos
loop
cmp
lss
jge
movl
mov
loope
clc
dec
shll
dec
cwtl
jle
ret
lcall
test
dec
inc
push
push
out
and
xchg
mov
addr16
dec
xchg
outsl
in
cmp
adc
jns
mov
fcompl
lds
or
ljmp
dec
pop
adc
xor
mov
mov
cmp
in
adc
fneni(8087
aas
mov
je
mov
jae
jno
iret
pop
je
mov
inc
sub
xlat
leave
and
xor
stc
movsl
sub
addr16
jb
inc
aam
push
test
sub
int3
cvtps2pd
jbe
lock
mov
lcall
cwtl
jo
shlb
mov
mov
inc
pop
in
cmpb
jecxz
push
push
addr16
add
xchg
mov
mov
es
inc
hlt
push
fwait
mov
push
test
and
das
stos
loope
fnstenv
cmp
ds
jae
xchg
pop
inc
lods
xchg
cmp
lcall
int
pop
subl
gs
sbb
addr16
sbb
test
pop
inc
test
cli
bound
mov
xor
jne
sbb
movsl
iret
push
xor
add
mov
xchg
lea
jg
ds
add
fisubs
fsubl
pushf
stos
fldenv
mov
jecxz
es
inc
add
shrb
mov
and
mov
xlat
in
sbb
pop
test
ljmp
dec
pusha
mov
push
fcoml
jl
out
xchg
dec
ljmp
lahf
mov
insl
lods
push
test
mov
scas
jge
cld
icebp
insb
jmp
test
fimull
xor
xchg
imul
xor
iret
psrlw
cltd
sub
pop
mov
dec
scas
mov
enter
jl
lahf
jge
cmp
popf
sub
ljmp
pop
ljmp
dec
or
rolb
arpl
imul
sub
adcb
jmp
or
adc
push
clc
js
mov
into
repnz
orl
ret
adc
ret
jbe
es
sub
iret
lahf
out
and
xor
mov
pop
cmp
jge
cmp
daa
xchg
jo
shl
pop
mov
pop
es
inc
push
lods
add
repnz
xchg
cmpb
subl
dec
cli
mov
aaa
out
pop
cmpsl
mov
sbb
movsl
adc
fisubrs
mov
nop
daa
lahf
call
sahf
pushf
dec
inc
sub
pop
iret
stc
cmp
shrb
jnp
pop
pop
dec
inc
je
jl
sub
push
jbe
das
aad
push
stc
and
icebp
fadds
mov
add
and
pop
in
movsl
jge
leave
mov
xor
pop
cmp
adc
pop
sahf
insl
mov
push
imul
mov
cli
dec
lds
jne
in
insl
loopne
sbbb
adc
pop
fstl
shrl
mov
daa
test
push
icebp
pop
or
out
sub
mov
mov
dec
adc
gs
xchg
dec
loop
push
mov
and
loope
cmp
lods
mov
movl
aad
movsb
cld
cli
and
or
fisubrl
into
mov
pushf
aad
xchg
mov
je
mov
adc
fisubl
pusha
inc
mov
test
xor
mov
nop
mov
ljmp
push
jne
mov
dec
rcr
add
sub
std
mov
adcb
frstor
sub
out
imul
aas
push
shrl
pop
aaa
les
je
dec
dec
mov
in
jnp
in
pop
mov
sub
xchg
dec
inc
or
pop
or
roll
movsb
int
test
bound
insb
jge
jmp
push
test
sahf
or
fidivrs
stc
push
cmpsb
out
popf
jp
or
jl
jne
push
movsl
ficoms
loope
mov
test
jae
jl
mov
imull
jmp
js
xlat
sub
pop
mov
dec
aad
jne
cmp
aaa
out
nop
or
in
mov
mov
clc
mov
movl
mov
dec
popa
jb
add
dec
cmpsb
xchg
mov
outsb
push
int3
les
cmp
cmp
pop
sub
or
pop
aam
cmpsb
imul
push
xor
fnsave
mov
cld
add
adc
dec
mov
xchg
leave
les
and
loopne
rcrb
aad
test
cmp
jle
and
ret
adc
mov
push
jns
adc
xchg
dec
daa
sub
xchg
insl
cmp
mov
and
fisubl
lds
mov
lock
iret
mov
jae
sub
push
jp
rcrb
leave
into
cmp
lock
inc
imul
push
addr16
fwait
cwtl
inc
fcmovnu
jg
inc
out
xchg
lahf
jne
cli
shr
add
and
inc
push
adc
dec
xor
shrb
add
pop
inc
push
imul
lret
sbb
popf
jbe
test
out
imul
je,pt
jl
pop
add
xchg
xchg
push
das
mov
jne
mov
jg
add
fidivl
test
fwait
push
pop
mov
sub
jns
cmp
adc
adc
ljmp
ret
cmp
xchg
jg
mov
int
xor
mov
movsl
jae
or
lcall
add
dec
push
negl
les
test
xchg
xor
inc
cmp
cmp
sub
or
repnz
add
int
in
xchg
adc
xlat
inc
adc
push
out
lea
lret
push
jne
mov
arpl
mov
sarl
fimull
nop
pop
test
lea
add
insl
stos
mov
or
inc
adcl
adc
push
inc
shr
aad
pop
jmp
pop
mov
mov
xchg
dec
je
fdivrl
std
test
pop
mov
lea
xor
stc
test
mov
adc
pushf
bound
inc
pop
add
and
mov
ljmp
dec
mov
add
mov
fstpl
data16
cmp
dec
mov
fidivl
sti
fisttps
hlt
pushf
imul
aam
inc
xchg
xchg
fisubl
push
arpl
fildll
imul
and
daa
push
push
dec
mov
mov
push
lahf
fsubr
int3
cmp
and
lret
loopne
in
rol
mov
jbe
pop
adc
shl
in
or
push
repz
inc
push
push
jp
mov
mov
stos
lahf
cmp
leave
xchg
push
arpl
cmp
cmp
jae
or
aad
fwait
mov
shll
fcmovne
dec
lods
negb
icebp
insb
adc
push
adcl
or
negl
and
in
gs
mov
shrb
out
dec
jo
push
pushf
xor
mov
cmp
and
mov
mov
cmp
stos
mov
mov
dec
iret
push
sbb
adc
jns
inc
fnstsw
je
scas
in
out
and
mov
sbb
rcrb
jae
or
popf
es
mov
mov
push
test
divb
insl
bound
aas
push
sub
imul
movsb
mov
scas
jl
jmp
dec
ljmp
out
jns
aaa
inc
jne
iret
sbb
ret
and
pop
mov
pop
repz
daa
mov
faddl
xchg
aad
jne
mov
mov
in
popf
pop
clc
lods
fiaddl
gs
xchg
lods
ficoml
push
xchg
mov
jb
loopne
and
ffree
fimull
jae
sbb
mov
cli
inc
mov
mov
pushf
shr
push
in
or
xchg
dec
rcrl
loop
pop
sbb
pop
std
xchg
ss
adc
jg
sub
sbb
inc
outsl
call
sti
xlat
ss
xor
rcrl
dec
jae
stos
aas
pop
mov
fisubs
push
in
pop
vandps
sub
pop
popf
mov
inc
add
push
mov
cli
mov
xchg
dec
ljmp
dec
ljmp
dec
ljmp
mov
lds
mov
pushf
xchg
shl
mov
add
mov
faddp
mov
mov
ficompl
pop
shrl
stc
mov
or
ret
ret
in
fwait
daa
jle
xlat
ljmp
jne
dec
push
aaa
icebp
mov
in
ret
cld
call
mov
xchg
movsb
mov
lcall
mov
fisttpll
fidivs
or
pop
cmp
clc
push
pop
jo,pn
mov
push
pop
bound
or
pop
sbbb
stos
gs
xchg
dec
mov
inc
dec
sub
mov
out
xchg
pop
les
jae
or
and
and
nop
imul
jmp
mov
insb
aad
or
pop
test
loopne
jb
add
es
bound
mov
sub
cmp
add
mov
pop
pushf
lret
adc
ljmp
adc
dec
nop
xor
mov
cmp
icebp
mov
mov
or
xlat
push
mov
int3
add
call
cs
xlat
mov
mov
inc
and
sti
dec
jns
in
shl
pop
out
jge
shll
sub
xchg
and
push
push
xchg
mov
push
aas
pop
stos
pop
lcall
cli
add
sbb
push
ljmp
stos
jo
inc
xchg
test
sbb
ficomps
ja
xchg
and
push
popf
sahf
sbb
add
add
jl
ret
or
and
xor
lret
xchg
mov
dec
ljmp
dec
ljmp
jbe
sti
cmp
inc
call
pop
jmp
jae
pop
push
nop
out
jmp
mov
scas
dec
fs
jge
or
ret
out
mov
pop
outsl
jns
jl
shlb
out
mov
or
lods
or
xchg
iret
cmp
sub
popa
fnstcw
jo
mov
xor
xchg
dec
jne
xchg
test
pusha
xchg
xor
sbb
and
cltd
xchg
dec
dec
je
dec
jno
sub
mov
mov
jmp
mov
dec
ljmp
jne
adc
insb
cmpsb
out
data16
push
pop
stos
cld
call
aam
test
popf
adc
push
push
mov
jmp
or
repz
mov
fcomps
retw
jle
mov
in
jb
cmp
push
push
jle
push
xor
mov
mov
cs
dec
jnp
lods
mov
jmp
aas
rclb
jmp
adc
xchg
sahf
mov
stos
ss
xchg
scas
sub
cmpsl
sub
repnz
xchg
nop
je
jl
loopne
fcomps
cmp
ljmp
pop
das
xchg
lock
mov
jl
or
dec
loopne
dec
mov
xor
outsb
cli
or
jne
cmp
mov
dec
lods
lcall
lds
cmc
pushf
repnz
call
sbb
lcall
stos
lcall
aaa
jnp
dec
lea
xor
mov
jmp
push
xor
xchg
daa
cld
pop
mov
lea
xchg
adc
xchg
fcmovnb
mov
inc
sub
call
ljmp
mov
dec
mov
flds
repnz
repnz
push
sbb
lods
testl
xchg
and
jno
push
adc
sbb
pushf
aaa
fsubrs
mov
xchg
dec
mov
jge
cmp
sbb
enter
js
jo
and
jg
rorb
inc
cwtl
push
test
popa
pop
stos
stc
jmp
gs
mov
cli
inc
lcall
outsl
fisubl
dec
ljmp
bound
adc
int
adc
or
inc
pusha
pushl
push
jo
jle
cli
stos
enter
in
inc
insl
mov
cli
and
sarl
xchg
dec
ljmp
pusha
and
leave
lcall
and
lods
cmp
pop
mov
pop
mov
pop
imul
xchg
bound
lods
sub
xchg
sbb
sbb
jb
loope
mov
push
xor
mov
arpl
cli
cmp
or
add
sbb
dec
ret
in
mov
dec
lods
rcrb
iret
inc
and
test
xor
test
shrb
xchg
aad
jnp
leave
or
cmp
mov
imul
cld
jg
out
sub
f2xm1
test
stos
xchg
stc
jl
jge
in
mov
je
mov
jae
and
in
inc
ljmp
push
xchg
lods
jp
cmp
sti
push
mov
stc
jmp
mov
xorb
mov
mov
cmpsb
jb
addr16
hlt
sub
cmp
jae
pop
xchg
cmc
mov
ficoml
jmp
fimuls
insl
xor
mov
sub
aaa
sub
dec
inc
imul
arpl
ss
mov
jecxz
adc
mov
sbb
mov
xchg
ljmp
dec
sub
jge
xchg
pop
insb
mov
dec
imul
dec
ljmp
xor
test
push
sbb
pop
loopne
insb
jle
andb
lahf
cmp
fwait
or
xchg
push
sbb
in
cmpsb
push
sti
sub
add
pop
lods
loopne
jno
sub
data16
lahf
arpl
cmpsl
jge
dec
inc
lahf
shlb
in
cmp
mov
sub
ss
cmpsl
inc
jbe
shlb
sub
daa
mov
std
xor
test
in
push
add
sub
and
add
lret
mov
fbstp
out
movsl
mov
jne
jbe
ja
cwtl
mov
mov
mov
int3
jnp
push
cli
cmp
sub
mov
ja
dec
cli
lcall
mov
pop
enter
addr16
lock
packssdw
jae
fdivl
ret
sbb
outsl
fmull
jmp
popf
stos
jecxz
jg
aam
repz
xor
std
dec
mov
lock
adc
pop
stos
xor
mov
ja
push
jle
sbb
aas
aad
adc
dec
bound
push
push
or
or
push
shll
dec
je
stos
scas
negl
pop
inc
ret
ja
or
inc
arpl
cmp
nop
push
and
in
adc
mov
mov
push
inc
lods
fwait
pop
dec
push
inc
pusha
ds
and
lods
and
push
nop
xchg
or
push
dec
aad
div
cmp
xchg
sub
xchg
inc
add
lahf
aad
arpl
lea
mov
rorl
sbb
call
ss
imul
arpl
mov
pop
insl
cmp
fadds
sub
test
cmp
aas
or
inc
jns
mov
gs
ljmp
push
pop
shr
rolb
ss
sub
sbb
sub
nop
aad
std
mov
sbbb
dec
sub
movsb
push
jl
outsl
mov
fs
pushf
and
aaa
mov
leave
out
jl,pt
push
and
in
and
jge
ljmp
andl
loope
test
mov
sbb
leave
jp
jmp
nop
sub
fwait
popa
push
add
pusha
xor
or
daa
mov
dec
stc
mov
jg
xlat
pop
pop
mov
xchg
loopne
in
fsubrl
mov
ljmp
in
inc
pusha
int3
aam
inc
add
lcall
repz
gs
xchg
dec
mov
xchg
loop
dec
jno
stos
lods
push
pop
pop
pop
inc
pushf
jb
mov
xchg
or
fildl
pop
stos
xlat
test
inc
int
sub
or
mov
or
lret
inc
cmc
xor
fwait
push
and
cwtl
outsb
leave
pushf
push
sti
push
sbb
scas
test
out
inc
push
insb
popf
stc
push
les
push
jecxz
in
icebp
cmc
mov
subl
lods
out
mov
dec
int3
xor
jp
ja
cmp
arpl
xchg
dec
lret
mov
pop
or
inc
jno
testb
mov
cmc
dec
mov
add
fsubs
movsb
inc
dec
pop
dec
les
call
or
lahf
or
fdivl
dec
test
mov
push
push
mov
sub
pop
mov
mov
xchg
adc
inc
inc
int3
fs
int3
pop
sbb
jae
rclb
aaa
outsb
dec
lahf
iret
push
shll
push
push
data16
push
cli
adcb
rorl
mov
jg
jecxz
and
or
push
fsubr
mov
leave
pop
pmaxsw
ror
lods
sub
insl
adc
push
stc
mov
or
ret
je
jl
in
xorb
push
jp
inc
sub
adc
int3
cld
pop
nop
inc
cwtl
jmp
sbb
bound
mov
add
and
cs
add
test
mov
pop
and
dec
add
xlat
mov
jne
ret
gs
xchg
dec
fs
xchg
push
sub
repnz
int3
and
add
pop
push
aas
inc
pop
pop
shll
jp
movsb
xor
mov
in
xor
aaa
rorl
xchg
into
push
stc
outsl
xchg
addr16
int
icebp
push
scas
stos
mov
shll
and
mov
jecxz
clc
js
xchg
push
or
jne
loopne
xor
xchg
decl
mov
decl
or
cld
ret
pushf
xor
push
jg
jns
push
shlb
push
into
dec
stc
packssdw
jge
ljmp
push
mov
ja
dec
and
and
clc
outsl
sti
xor
sbb
jl
sbb
mov
add
xchg
cmp
cmc
sarl
loopne
pop
push
or
mov
push
out
dec
and
cmpsb
sbb
out
in
pop
pop
jbe
jno
cld
out
aam
add
arpl
and
out
inc
cmp
mov
mov
es
sub
into
mov
dec
mov
push
aaa
lods
pop
mov
shrl
imull
fnstenv
nop
push
cmp
cld
xor
fucom
fldt
aad
scas
add
cmpsl
adc
mov
rcl
xor
and
hlt
ss
xchg
mov
adc
xor
inc
xchg
and
add
xchg
xor
mov
cmp
in
ret
push
add
and
icebp
rorb
mov
out
pop
and
push
sbb
adc
dec
ljmp
test
add
lcall
cmp
pushf
xor
xorb
fs
clc
xchg
lea
xchg
push
test
mov
push
inc
push
sarl
loopne
unpcklps
mov
je
fsts
aad
dec
mov
xchg
or
sahf
les
adc
aaa
or
inc
fists
mov
jnp
popf
int3
lds
fcmovbe
sub
push
mov
xchg
cmp
inc
dec
sbb
ja
xchg
xor
cmp
shr
and
add
std
inc
ficoms
add
