sbb
add
inc
add
clc
mov
push
ljmp
movsl
jnp
pusha
cld
fsub
leave
lret
inc
pop
js
ja
imul
push
push
shrl
je
aas
dec
gs
jge
ret
aas
jno
out
ds
mov
pop
sti
addr16
call
mov
push
jge
testl
cmp
dec
test
into
mov
test
movsl
pop
pop
xchg
lretw
es
sbb
add
out
or
jo
into
fcoml
adcl
mov
lea
ss
adc
das
out
dec
add
add
lea
pop
lahf
mov
dec
popa
sbb
loop
cmp
pop
and
add
out
popf
dec
fiadds
xchg
cmp
outsl
cmp
fcompl
push
add
call
outsb
jg
adc
add
sbb
imul
mov
dec
push
stc
les
nop
repnz
push
dec
xlat
scas
imul
loop
cwtl
adc
fstl
jp
dec
pop
jg
xor
rcr
cli
mov
push
mov
and
push
cmp
jecxz
inc
out
push
xchg
push
push
jnp
push
xchg
lods
xchg
push
es
fcmovb
movsb
jecxz
mov
mov
mov
cmpsb
scas
nop
test
test
add
inc
add
mov
dec
dec
loop
loopne
call
fldcw
push
mov
adc
pop
shl
mov
mov
jecxz
pop
push
cltd
outsl
data16
lret
add
negl
icebp
outsl
out
cld
loope
jg
cmp
mov
or
xchg
add
lock
fpatan
aad
psubd
hlt
or
and
fs
jl
popf
insl
fnstsw
dec
jmp
mov
inc
test
jl
mov
xchg
inc
add
cmpsl
ja
lods
mov
pop
jge
out
lret
mov
sbb
pop
mov
clc
pop
jle
xchg
arpl
fbstp
das
xlat
arpl
in
or
cs
outsl
sub
out
push
sarl
and
out
aam
imul
shrl
gs
mov
cs
fdivrs
inc
imul
sti
mov
xlat
insb
scas
sbbl
sbb
ss
push
stos
adc
push
cmp
lahf
mov
mov
jae
imul
mov
data16
mov
jl
mov
addr16
dec
mov
das
fstpt
xor
push
xchg
sbb
mov
push
sarb
inc
sbb
adc
repz
daa
xor
push
mov
repz
int3
lds
mov
xchg
mov
shrb
sbb
jno
jb
xchg
lcall
mov
pop
fisubrl
loope
es
and
xchg
pop
cmp
sar
ss
pop
jo
in
iret
mov
out
out
nop
arpl
mov
adc
push
loope
add
pop
mov
test
les
outsl
xor
dec
sbb
mov
inc
add
cs
sub
pushfw
jecxz
xor
or
inc
sbb
ret
mov
inc
adc
xchg
pop
es
mov
leave
lret
sahf
loopne
pop
les
out
xchg
fwait
sub
bound
xchg
cmpsb
add
ret
sti
xor
stos
scas
ror
or
jl
and
lret
cmpsb
mov
inc
fcmove
dec
ret
pop
cwtl
dec
jl
arpl
popf
fmuls
dec
mov
loopne
jae
mov
mov
scas
jae
dec
in
in
ljmp
pop
inc
pop
pop
neg
pop
ss
es
hlt
sub
xor
sub
inc
pop
cmc
cmp
add
xor
lea
mov
jo
mov
popa
into
mov
mov
xor
mov
jno
repnz
cmp
push
sub
inc
jo
fsubr
in
jl
xchg
rcr
out
cmpb
xchg
mov
pop
push
enter
out
mov
lock
pop
hlt
outsl
shl
andb
jnp
jo
jnp
and
dec
enter
xchg
mov
dec
rclb
or
and
lea
jge
bound
rcr
sbb
mov
cmpsb
lahf
push
jmp
and
pushf
fcom
sbb
out
mov
icebp
inc
sbb
idiv
ficompl
xabort
pop
in
xchg
dec
sbbl
pop
and
dec
mov
push
mov
adc
lret
aam
imul
outsb
in
scas
cmpsl
adc
mov
out
cmpsb
inc
or
addb
xchg
inc
repnz
hlt
fbstp
scas
push
and
sti
in
push
cld
sub
push
sub
and
ss
cltd
stos
add
fwait
mov
mov
mov
push
inc
test
into
add
xchg
xor
mov
pop
loop
push
mov
ss
push
jae
jns
adc
lock
test
adc
pop
imul
mov
insl
jp
hlt
scas
int3
movsb
jmp
mov
in
in
or
inc
lock
mov
sub
arpl
fiadds
mov
daa
pop
add
call
push
pop
mov
sbb
mov
or
dec
addr16
or
shrw
jno
and
adc
arpl
aam
mov
lock
xor
daa
adc
stc
push
push
shlb
cmp
jmp
mov
repnz
gs
mov
ljmp
incl
add
hlt
cmpps
xchg
xor
jmp
rcrb
inc
cmp
scas
push
xlat
xlat
inc
leave
push
insb
cmpsb
and
pushf
push
popa
sbb
and
mov
jle
fwait
push
loope
jecxz
sbb
xor
leave
inc
lds
ficoms
mov
dec
lods
mov
imul
push
outsb
shll
icebp
add
push
lret
ds
push
jle
hlt
lret
dec
xlat
imul
rcll
test
das
movsl
add
sub
in
sbb
jecxz
sub
xchg
popa
int3
out
out
xchg
lret
cmpsl
sbb
sbbl
xor
xorl
pop
jmp
movb
gs
push
mov
loop
cmp
popf
or
out
xchg
lcall
mov
push
mov
out
xchg
popa
cmp
stc
scas
jne
jge
out
loopne
aad
stos
push
sbb
test
xlat
or
outsl
pop
pop
nop
mov
mov
into
icebp
roll
cmpsl
rorl
push
xchg
pop
aam
mov
cmp
xor
insb
enter
popl
sbb
sbb
stc
roll
in
popf
inc
adc
mov
pop
jns
add
push
xor
jb
icebp
das
pop
mov
mov
jl
call
jnp
sbb
shr
push
pop
loope
lea
roll
dec
inc
jne
inc
mov
mov
mov
sti
les
xchg
hlt
add
fbstp
xor
aaa
in
and
sub
xchg
inc
ljmp
sbb
lods
ljmp
mov
fidivrl
jb
mov
iret
dec
insl
cmpsb
loop
aad
jp
nop
adc
cmpsl
subb
dec
jb
inc
lahf
popf
jmp
movb
sbb
das
inc
and
xlat
fdivrs
pop
mov
sub
cmc
test
aad
or
inc
jnp
xchg
fists
xchg
out
mov
rcrb
icebp
mov
mov
aaa
and
lcall
sub
jno
and
pop
or
xchg
gs
pop
rcrl
xchg
push
lea
decb
cli
dec
and
inc
movsl
outsl
fs
fnstsw
sbb
lret
es
xchg
sub
pusha
fnsave
dec
cmc
rcrl
outsb
rclb
iret
adc
leave
pop
add
movsl
dec
pop
movsl
mov
std
fistpl
test
lods
sub
negl
ss
imul
mul
sbb
sbb
sbb
test
leave
inc
push
sbb
fcompl
adc
and
mov
sbb
dec
scas
inc
in
fsts
push
les
js
jmp
mov
scas
push
cli
shll
aaa
xchg
int3
int3
ljmp
lret
mov
negl
lods
out
xchg
loop
out
push
pop
and
les
mov
out
ret
repz
fiadds
mov
int
dec
sbb
popa
addr16
sahf
or
cmpsb
lock
es
mov
das
fsubl
xor
mov
sahf
pop
ljmp
jge
lods
push
jb
fs
pop
xor
pop
scas
loope
mov
outsb
aas
cltd
shr
imul
push
lds
sbb
lret
fcmovne
sub
lods
cmp
sbb
mov
lret
and
push
dec
dec
push
enter
and
cmpsb
adc
popa
or
fs
out
mov
pushf
insl
lret
pop
ret
push
insl
insl
test
in
jp
cmp
cli
roll
pop
pop
fsubl
lahf
dec
ja
push
popa
mov
outsl
pop
roll
and
cmc
and
fidivs
mov
lcall
ljmp
pop
inc
sbb
orl
sub
cli
scas
lret
xchg
cmc
mov
movd
xor
shll
inc
cmpsb
daa
outsb
push
pushf
scas
mov
inc
xlat
dec
mov
int3
mov
jmp
dec
and
xchg
outsb
jb
xchg
cmpsb
or
adc
out
jl
xchg
pop
inc
bound
arpl
push
ja
dec
lcall
jbe
sub
xlat
imul
xlat
add
jl
and
xor
insl
push
sahf
pop
dec
cld
cltd
int3
mov
mov
jnp
dec
jbe
gs
sub
popa
mov
ds
cmp
enter
jl
loope
pop
not
jl
xchg
notb
pushf
mov
and
loope
inc
movsl
mov
rorl
jl
sub
bound
js
add
mov
xor
pop
sbb
xor
aaa
mov
push
sub
movsl
inc
mov
iret
or
sbb
jae
popf
sbb
mov
nop
jecxz
in
aas
mov
mov
sbbb
cmp
mov
xor
mov
adc
lods
inc
jp
mov
dec
jne
push
pop
mov
outsl
xor
jg
inc
mov
cli
std
test
dec
jae
jecxz
jle
cli
jmp
ljmp
jno
inc
lahf
insb
stc
in
cli
jp
ds
test
xor
cmpsb
and
mov
incl
sbb
sub
dec
sti
enter
lea
xor
cmp
jle
test
testl
jg
fwait
add
inc
jle
or
jae
nop
inc
push
jge
mov
xor
in
jle
push
mov
pop
xor
pop
int
test
jns
inc
cmp
mov
xchg
push
jmp
lock
jecxz
or
sbb
and
mov
das
repnz
out
inc
adc
cmp
sahf
je
enter
mov
and
mov
jae
xchg
sbb
je
jl
popa
lret
iret
aas
int
adc
jae
mov
xchg
push
jnp
outsl
push
inc
pop
pushf
negl
data16
jb
inc
loope
xor
add
stc
repz
xchg
inc
test
inc
ljmp
mov
inc
mov
inc
or
jmp
stc
and
pop
imul
jecxz
pop
call
push
stc
xchg
mov
push
sub
iret
in
push
push
jns
shl
xchg
add
push
in
idivb
rclb
jne
daa
mov
inc
pushf
pop
and
push
inc
xor
stc
push
mov
je
das
mov
mov
pop
punpckldq
inc
dec
mov
dec
mov
scas
dec
jne
cld
mov
cmp
inc
mov
outsl
jno
fdivs
mov
arpl
cmp
and
je
mov
aas
add
cmp
aaa
pop
and
arpl
shll
push
adc
ret
jne
pusha
adc
push
out
mov
iret
dec
dec
xchg
sbb
jne
sarl
inc
lea
mov
sbb
imul
fmulp
out
std
shrl
inc
jne
mov
fidivrs
xorb
data16
adc
add
dec
sub
arpl
xchg
sub
test
add
mov
add
sbbb
and
pop
cmp
in
dec
add
jbe
push
stos
shrl
mov
add
or
xchg
scas
cmc
lock
xchg
mov
loope
or
les
fdivrs
ret
inc
sahf
xchg
push
ds
hlt
fisttpll
sub
sub
test
mov
adc
outsb
out
pusha
loopne
pop
sbb
push
and
add
mov
dec
insb
ret
dec
inc
xor
pushf
pop
scas
xchg
dec
out
sbb
dec
push
hlt
cltd
lcall
push
mov
lods
jmp
cmpsb
call
popa
arpl
jmp
add
scas
data16
cld
fsubrl
inc
cmpsl
aam
cmpsb
jle
jle
jb
mov
shrb
cwtl
adc
clc
xlat
xor
cmpsl
pop
ret
add
into
adc
xlat
lds
push
xchg
and
mov
cmp
js
mov
jnp
xchg
rcrb
or
in
lcall
in
jge
mov
push
addb
mov
or
cltd
cmp
pop
cmpsb
in
cmp
push
in
sbb
sub
sbb
xchg
inc
scas
dec
les
mov
xchg
sbb
aam
mov
data16
fwait
adc
jp
daa
into
mov
ret
iret
rsm
in
push
lahf
cwtl
hlt
dec
pop
mov
cmpsb
fwait
cmp
call
je
sahf
sub
notb
jnp
jge
adc
push
mov
sbb
shrb
xchg
lea
cmpsl
movsb
adc
dec
mov
loopne
dec
inc
fs
mov
and
fucom
ret
neg
fdivs
lahf
jmp
outsl
add
inc
xchg
sbb
cmovne
jl
push
mov
fnsave
jbe
out
stos
add
aad
dec
les
cld
xchg
xchg
dec
or
push
jnp
sub
inc
fwait
imul
int
scas
sahf
mov
push
cli
and
es
mov
call
scas
pop
pop
xchg
or
cmpsl
into
sbbl
icebp
pop
cmp
add
pop
and
mov
mov
in
aaa
mov
btr
das
xchg
mov
pushl
shll
daa
xor
into
shrl
in
push
push
xor
cmpsb
push
rcrl
mov
aam
aaa
ss
xchg
ljmp
or
add
popf
mov
je
insb
fwait
ljmp
mov
ficoml
or
push
dec
sti
mov
fadds
mov
adc
mov
push
icebp
xchg
or
incl
pop
mov
jae
adc
cmova
inc
mov
push
scas
rcll
inc
mov
fmuls
int3
pop
push
mov
ret
jb
dec
ret
into
lret
aam
nop
nop
outsb
inc
push
add
adc
xchg
pop
movsb
xchg
jg
jecxz
ret
sbb
lcall
je
outsb
mov
outsb
dec
cmp
test
dec
sbb
icebp
aam
jp
pop
xchg
aas
aad
sbb
inc
popf
mov
jmp
ficompl
divb
mov
add
sbb
ret
dec
cmpsb
xor
add
lahf
fstpt
add
not
push
jne
sbb
dec
jecxz
dec
mov
je
and
popa
mov
mov
xor
in
push
mov
or
mov
push
fcoms
scas
call
push
jecxz
call
out
test
sub
les
pusha
inc
mov
popf
add
push
mov
jecxz
mov
ret
bound
sub
and
sbb
fwait
push
xor
mov
dec
and
movsl
sbb
xchg
gs
dec
fnstsw
dec
dec
dec
mov
fcompl
inc
adc
shlb
mov
repz
mov
sar
scas
cmc
push
cwtl
mov
icebp
pop
cmc
mov
ror
jp
xchg
mov
fdivrs
add
sbb
add
pushf
cmc
loop
addb
jmp
or
xor
cmp
jecxz
add
mov
shrb
sti
lret
das
xlat
lods
int
filds
adc
stos
fcmovu
pop
cmp
sub
xor
rep
pop
jne
mov
imul
cs
ja
xor
dec
divb
xchg
jmp
xor
add
mov
in
sub
and
sbb
cmp
push
stc
cmp
jne
sbb
lock
adc
xchg
push
jl
inc
mov
addr16
mov
and
mov
xor
xor
call
cmp
xor
adc
jnp
adc
cmpsb
jb
xlat
mov
jge
inc
sub
push
aaa
das
xchg
lds
inc
inc
adc
dec
loopne
and
sub
xor
fcmovb
sub
push
leave
loope
xor
movsb
sarb
cld
test
adc
aaa
and
movsb
ret
pop
pop
jb
test
lcall
loopew
adc
frstor
rolb
clc
lahf
aas
fnstcw
sub
mov
mov
lcall
out
mov
and
pop
sub
push
roll
mov
push
sbb
aam
pop
dec
or
adc
stc
xchg
cmc
adc
mov
and
aas
xor
and
and
mov
ja
test
cmp
out
or
add
pop
add
popa
mov
aad
xchg
xlat
sbb
imul
daa
adcl
jp
fcomi
push
repz
mov
mov
out
mov
add
xchg
pusha
push
mov
cld
je
repz
cmp
sub
call
or
loope
jo
push
add
pop
or
jle
fdivp
jge
mov
sub
sub
pushf
jno
ds
jle
add
xor
ljmp
or
loopne
pop
and
cmp
xchg
push
fidivl
dec
adcb
jmp
std
out
sub
into
addr16
outsb
mov
mov
sahf
mov
jb
xor
mov
lahf
lods
scas
jno
pusha
loope
add
sub
sti
and
add
push
in
call
mov
pop
adc
inc
pop
loopne
incl
mov
outsb
or
and
scas
pop
cmp
mov
cmp
jo
mov
sub
iret
pop
shlb
mov
outsb
and
loope
mov
mov
daa
xor
push
pop
add
xor
mov
rcrl
or
xchg
sub
repnz
pushf
cmc
adc
jg
mov
stos
add
mov
sub
or
stc
roll
sub
mov
or
in
push
movsb
xor
mov
shrb
inc
shlb
pop
pop
add
xchg
dec
pop
mov
mov
subl
sub
stos
sub
jno
loopne
jnp
lcall
push
push
or
mov
cmp
inc
inc
mov
fmull
push
mov
mov
ljmp
jle
stos
cld
inc
jmp
std
lea
push
inc
test
xor
in
mov
mov
mov
inc
cltd
and
xchg
loopne
adc
inc
xor
ret
cmp
ret
dec
out
js
xchg
mov
outsb
js
xchg
clc
aad
pop
orb
xor
loope
jns
popa
sti
pop
pextrw
xor
pop
xor
enter
ret
fcmovb
inc
in
and
scas
scas
cmp
int
cmp
hlt
test
cmpsl
jnp
inc
imul
sbb
aad
sub
rorb
arpl
in
mov
sbb
mov
leave
lock
push
in
inc
movsb
jl
pop
lret
add
ret
sarl
xor
lods
pop
xchg
lret
mov
mov
or
iret
jp
xchg
adc
sub
cmp
daa
inc
fs
icebp
and
or
stos
mov
mov
and
mov
jb
cmp
dec
movsb
pop
push
imul
xor
jg
mov
repnz
in
mov
xchg
aaa
fwait
push
cmp
xlat
cltd
fs
ja
dec
xchg
lods
adc
mov
in
insl
bswap
sub
mov
add
loop
or
add
popl
mov
outsl
push
les
rcl
mov
es
xchg
mov
sub
cltd
mov
loope
inc
inc
stos
and
and
ret
fadds
sbb
test
arpl
xchg
movsb
sahf
or
rorl
pop
pop
fistps
sbb
or
or
subl
addr16
jb
out
cwtl
pop
jae
pop
add
push
push
pop
flds
pop
int3
sti
ror
dec
or
insb
jecxz
push
jle
outsb
inc
ret
add
fnstsw
pop
cli
arpl
cltd
lret
movsb
in
lret
pusha
jecxz
xor
popa
gs
mov
push
roll
and
aad
test
and
push
in
fsubr
cli
test
stos
fs
mov
adc
cmp
xchg
xor
add
cmp
pop
addr16
repnz
push
mov
cmc
std
push
cmp
xchg
fstpl
test
sarl
jnp
fstpl
dec
jecxz
cmp
push
inc
icebp
repz
and
sahf
jno
inc
leave
mov
lret
mov
lcall
test
inc
add
imul
jle
pushf
icebp
scas
adc
shrb
add
jge
fnsave
jle
xchg
mov
out
stos
sub
fistpll
adc
mov
lods
mov
cld
fcoml
sub
and
mov
jae
js
mov
rolb
xor
sbb
or
movsl
sahf
scas
fildl
fiadds
jge
pavgb
cmp
pop
ret
push
mov
jbe
mov
fst
adc
jae
add
loopne
fcmovne
inc
pop
jmp
fdiv
aad
jb
and
push
out
fcmovnu
enter
rcll
insl
imul
ljmp
and
iret
pop
push
mov
or
data16
or
testb
xlat
push
jnp
add
add
xchg
faddp
loopne
les
xor
std
mov
gs
popf
xchg
dec
sub
cld
ljmp
dec
ljmp
inc
xlat
idivl
negw
jp
dec
mov
add
loope
enter
mov
popf
sti
aam
repnz
xlat
inc
inc
leave
fstpl
imul
mov
scas
lds
in
mov
push
es
loope
xor
sbb
leave
inc
mov
das
lret
push
js
mov
arpl
cltd
hlt
or
push
leave
mov
das
xchg
mov
repz
cwtl
pop
dec
inc
pop
pop
xor
lret
mov
fwait
xlat
inc
movsb
mov
and
sub
imul
adc
xchg
fnstsw
mov
fs
sub
inc
test
ss
inc
outsb
clc
mov
push
mov
icebp
bound
popf
or
mov
jo
sbb
inc
cmpsl
mov
mov
movsl
js
aaa
xor
arpl
and
aaa
xchg
ficomps
xor
cmp
cmp
popf
jecxz
dec
arpl
push
dec
xchg
lcall
loope
into
and
mov
jno
sbb
sbbl
leave
movsb
nop
pusha
or
push
jge
int3
ss
and
adc
jns
add
cmp
xor
inc
sti
pop
sub
cmp
sbb
sbb
jne
sbb
daa
cwtl
clc
or
push
sub
cmpsl
scas
sbb
out
divl
scas
in
loope
mov
dec
daa
mov
rolb
nop
dec
and
jno
imul
sbb
mov
stos
mov
scas
je
or
and
and
push
pushf
fstl
scas
out
cmp
iret
dec
cli
into
js
xlat
icebp
scas
jne
mov
rol
pop
nop
aas
stos
sub
test
cmp
ret
jo
push
pop
adc
mov
out
xlat
lds
lods
divl
xchg
popf
jg
ja
jge
mov
in
leave
mov
push
add
sbb
adc
cmpsb
inc
dec
popa
sbb
imull
scas
addr16
aaa
pop
sub
es
cmp
jmp
rclb
jo
mov
xchg
mov
mov
in
and
pusha
cmp
js
call
les
sub
or
pop
es
sub
cld
icebp
mov
mov
clc
cwtl
das
xchg
test
sbb
cmp
cmp
dec
scas
add
dec
scas
enter
aas
push
sbb
mov
add
test
mov
jle
fimull
icebp
insl
sbb
fwait
mov
lds
sti
dec
xchg
in
scas
inc
sar
mov
mov
xchg
mov
pop
xchg
jbe
jb
out
add
push
cmp
ret
pop
in
test
lcall
mov
test
jo
lret
scas
sub
mov
insb
sbb
mov
sbb
enter
mov
push
pop
arpl
cmp
ret
or
mov
clc
pushf
xchg
jo
mov
fs
aad
pop
sarl
das
pusha
mov
sbb
pop
mov
ja
loopne
dec
adcb
xchg
pop
aad
sub
add
or
xchg
and
sub
mov
jg
add
sbb
dec
int
out
sub
sub
insb
in
adc
call
pop
xchg
mov
cld
inc
aas
push
cmp
add
push
or
xchg
shrl
adc
fcomps
ljmp
mov
mov
sub
push
rol
adc
push
iret
shl
jno
add
leave
add
lret
rcpps
mov
add
shll
dec
shl
add
cmc
jle
xor
xchg
jmp
movsl
mov
xchg
add
xchg
cmp
or
int3
sub
lcall
jl
shlb
cs
push
or
and
jp
lahf
xchg
cmp
inc
push
sti
xchg
add
jns
sti
movsb
jecxz
inc
mov
mov
or
test
or
xor
jnp
cmp
jmp
dec
jmp
cmp
in
aad
pusha
mov
movsl
lcall
sti
push
add
sub
cli
lahf
xor
clc
into
test
mov
lock
push
lret
js
aad
data16
adc
sub
inc
aaa
lods
jne
das
enter
addb
xorl
jb
mov
pop
aaa
mov
mov
xchg
loopne
or
insl
stos
pop
ljmp
jl
xlat
imul
mov
addb
jb
jns
std
mov
test
subl
nop
inc
lds
sub
jne
nop
or
movsl
lcall
sub
frstor
add
mov
jmp
inc
pop
xlat
sbb
sbb
leave
loope
into
mull
out
pop
movsl
test
jb
testl
lea
outsb
arpl
mov
popl
cmp
inc
mov
rorb
jne
addb
arpl
push
ja
cmp
cmc
fildll
or
cwtl
lret
pop
lret
call
xor
out
lods
aas
mov
cmp
jl
mov
mov
jbe
outsl
or
roll
and
cld
inc
outsb
repnz
mov
cld
xchg
subl
dec
stos
cld
cmpsb
pop
icebp
jge
es
shll
fidivrs
jne
sbb
sub
mov
dec
cmp
shl
xlat
es
aaa
sbb
arpl
xchg
adc
xchg
push
jge
dec
insb
mov
imul
inc
or
lret
dec
or
nop
call
mov
ja
in
xchg
pop
icebp
mov
adc
push
in
pusha
notb
and
lahf
cmp
lahf
fnop
sahf
mov
push
add
insl
xlat
jecxz
add
dec
xchg
aad
and
psubq
sub
xor
rolb
mov
inc
bound
testb
xor
and
jb
sub
and
in
adc
inc
add
sub
pop
jo
pop
dec
pop
fmuls
sub
and
pop
call
and
sub
and
pop
ss
pusha
in
outsl
add
push
ds
sub
test
mov
in
mov
or
hlt
out
ret
pop
pop
outsl
in
ja
repnz
aam
cmpsl
sub
insl
xor
add
add
jnp
jp
sub
in
rorl
cmp
xchg
adc
ljmp
mov
cli
dec
xor
add
les
inc
inc
clc
inc
dec
sub
mov
cmpsb
div
nop
inc
sub
pushf
repz
pop
mov
or
mov
out
push
adc
jl
mov
mov
or
nop
cld
xchg
loope
lock
jecxz
cmp
rclb
sub
push
mov
fsubrs
and
xchg
add
int3
dec
add
insl
jno
push
xor
das
lock
test
cmp
add
scas
inc
sub
mov
xchg
push
arpl
in
test
jg
xchg
stos
iret
jmp
ss
pop
mov
inc
jp
push
xor
pop
mull
sbb
add
adc
inc
or
and
dec
ds
cmp
and
mov
mov
jnp
test
rclb
mov
je
pop
popa
cmp
leave
mov
xchg
test
pop
stos
push
ret
cmc
xchg
mov
add
js
xor
orb
mov
call
and
pop
xchg
pop
test
or
jnp
fs
iret
arpl
adc
jge
mov
jl
or
xchg
sub
lahf
out
and
xchg
xor
jmp
cltd
stos
mov
mov
movsl
xor
in
push
cmpsb
jno
jmp
sub
sbb
lock
dec
fnsave
jmp
sti
shll
rcr
fcoms
out
cld
pop
testl
jbe
and
outsl
mov
ss
sbb
ret
cli
mov
fisttps
sub
pop
leave
icebp
int3
push
or
out
fildl
cli
mulb
movsb
dec
cvtps2pd
mov
xor
outsl
mov
or
cmpsb
add
mov
mov
pusha
dec
lods
lock
cmc
xor
mov
mov
mov
int3
jle
pop
ss
es
dec
and
mov
fisttpll
ret
lods
jbe
add
mov
testb
clts
pop
movsb
cmp
xor
mov
xchg
nop
decb
test
addb
add
sub
inc
dec
mov
aad
jne
mov
dec
movsl
push
mov
pushf
cwtl
xchg
xchg
dec
xchg
icebp
adc
mov
mov
adc
inc
movsl
xchg
cli
cmc
repz
test
xchg
inc
add
push
rcrb
dec
cmp
imul
sbb
nop
aaa
pop
pushf
aam
or
shrb
jp
cmp
dec
mov
popa
xchg
lea
shll
inc
mov
ret
inc
add
ja
insb
adcb
mov
fmull
out
pop
lods
icebp
les
jnp
lds
in
and
lret
clc
stos
mov
sahf
fildll
sbb
in
mov
cmp
fistpll
shlb
data16
mov
sbb
xchg
pop
jp
pushf
in
ja
decb
adc
cmp
sahf
movsb
insl
out
mov
jbe
arpl
aam
pop
repz
sbb
xor
data16
stos
inc
pop
mov
xorl
sub
scas
testb
stc
mov
jl
jp
repz
pop
jnp
cwtl
push
outsb
fimuls
push
stos
les
add
loope
inc
or
pusha
cmp
mov
sub
faddl
mov
xchg
subb
pop
pop
push
ret
sbb
adc
incb
adc
out
mulb
ret
push
ficoml
int
out
add
or
sahf
scas
gs
sub
in
push
inc
mov
shr
push
movsl
jmp
icebp
mov
ss
dec
xor
inc
adc
pop
lahf
test
jmp
cmpl
outsl
cmpsl
dec
push
sub
mov
addr16
mov
lods
cmp
jb
je
jge
pop
mulb
xor
push
imul
jns
fs
sub
cmp
fcoms
mov
and
xchg
imul
adc
mov
fdivrs
xor
dec
push
sbb
lcall
add
sbb
pop
arpl
shrb
adc
adc
int3
xor
mov
xchg
push
push
lret
addl
push
cmp
cmp
cltd
mov
mov
mov
xchg
inc
push
movsb
loopne
cwtl
leave
pop
mov
sub
xchg
mov
xchg
inc
ljmp
dec
cmp
arpl
add
cmp
sahf
imul
mov
add
xchg
lods
pushl
aaa
mov
fucomp
and
sub
repnz
and
dec
out
mov
xor
jne
cmpsl
rcrl
dec
add
stos
mov
mov
movsb
sbb
mov
dec
xchg
iretw
inc
or
push
jns
push
mov
loopne
inc
test
addr16
cmp
xor
std
aad
jg
mov
jns
cmc
push
pop
bound
aas
mov
pop
push
push
sahf
jmp
ds
sub
call
xor
sbb
stos
sbb
je
bound
xchg
lds
out
cli
add
cmc
pop
arpl
pop
mov
jns
out
pushf
jge
addr16
push
je
xchg
imul
cmp
xchg
mov
and
lock
fsubs
push
xor
sbb
in
mov
pusha
in
rolb
adc
xchg
xor
push
mov
lcall
sti
clc
ljmp
das
test
adc
addr16
add
sub
xorb
and
loope
pop
lea
xchg
les
xor
cmp
loop
add
inc
in
push
out
lret
in
jg
aam
push
xchg
sbb
fbld
stos
cwtl
inc
sub
jmp
aad
into
xlat
inc
jo
mov
daa
cmp
jb
add
pop
stos
rcrb
movsl
push
sti
add
divb
jecxz
idivl
mov
aad
xchg
xchg
mov
out
or
mov
stc
popa
lods
and
fwait
aas
movsb
or
dec
imul
and
popa
addr16
mov
loope
nop
stos
in
jnp
cmp
gs
in
jge
es
adc
fcmovnb
jle
xor
fwait
and
push
jg
push
inc
adc
cmpsb
adc
insl
in
jge
and
cmpsl
sarl
sub
mov
mov
mov
rolb
xchg
mov
cs
pop
or
pop
int3
cmc
push
test
mov
add
mov
mov
in
adc
ficomps
adc
and
push
pusha
test
movsl
xor
pop
jmp
pop
pop
out
adc
ret
lods
mov
mov
shl
out
stc
loopne
sbb
push
iret
icebp
orl
sahf
cmp
xor
dec
imul
and
lds
xchg
inc
jbe
xchg
inc
pushf
cmp
repnz
clc
mov
jge
das
ja
or
xor
pop
xor
cmp
adcb
mov
or
outsb
or
inc
lods
lret
xchg
push
inc
add
cwtl
cld
cwtl
dec
out
js
fwait
push
cmp
iret
mov
std
add
sbb
fbstp
xor
lds
dec
loopne
scas
adc
sbb
daa
movsl
aas
inc
jae
xor
pop
xchg
cmp
call
jg
cld
lock
jp
sbb
pop
dec
mov
pop
inc
mov
xlat
and
les
dec
mov
scas
nop
sub
inc
inc
outsl
out
xchg
scas
mov
cmpsl
xor
aaa
cmp
stos
pop
test
test
cmp
notl
arpl
fbstp
inc
cmp
push
jmp
pusha
push
mov
bound
stos
aad
daa
sbb
jmp
mov
sbb
ret
sub
inc
xchg
out
ljmp
push
ret
mov
das
jl
sub
movsl
dec
push
jns
pop
mov
mov
int3
inc
pop
repnz
pop
xor
mov
mov
pop
cwtl
fs
or
push
leave
enter
or
push
adcb
stos
mov
cmp
fisubrl
jae
mov
sarl
cmp
mov
repnz
xor
push
push
call
add
cmpsb
das
stos
loop
lods
pushf
stc
stc
sub
xchg
sub
xchg
cmp
stos
jno
imul
test
mov
push
lds
imul
xor
pop
sahf
sub
test
mov
pop
jno
ljmp
aaa
sub
mov
sbb
repnz
jo
loopne
mov
faddl
lahf
shll
rcl
cmpsb
or
pcmpeqw
insl
jbe
mov
xor
sbb
jge
gs
fbstp
jle
insl
shrl
mov
repnz
outsl
push
loope
push
mov
cmc
inc
pop
push
jg
out
mov
add
popa
add
ret
out
pop
push
cmp
add
iret
loope
mov
aam
and
pop
sarb
fsubrs
jnp
cld
stc
or
inc
rcll
cmp
mov
scas
adc
xchg
lea
cmpsb
movups
mov
nop
xchg
add
ljmp
dec
dec
std
sti
xlat
lcall
fistpll
xchg
mov
xchg
sub
ret
rorl
je
mov
and
sti
mov
inc
or
add
jmp
int
test
sub
enter
loope
idiv
inc
inc
outsl
ljmp
pushf
movsl
sbb
enter
pop
add
enter
stc
leave
into
mov
mov
inc
and
push
repnz
loop
push
xchg
sbb
mov
adc
aas
int
mov
ret
xor
sbb
sbb
enter
mov
push
xor
mov
add
lret
sub
xchg
mov
stos
test
sub
mov
fucomp
mov
jno
sub
mov
push
outsb
rorl
sub
pop
dec
es
sbb
push
add
repnz
cmpl
push
dec
dec
cs
mov
push
jae
adc
sub
mov
dec
mov
mov
mov
mov
xor
xor
addb
lret
sub
inc
mov
inc
dec
xor
or
fiaddl
insl
in
in
xchg
bound
push
cmp
jmp
mov
push
shl
notb
out
inc
inc
in
dec
pop
movsl
sbb
pop
nop
mov
xchg
mov
mov
cmp
push
pushf
imul
clc
cwtl
push
idivl
test
sub
adc
mov
fiadds
imul
aas
mov
jecxz
sbb
ret
cmp
addr16
cmp
push
hlt
insl
xor
idivl
mov
jp
in
test
popa
jl
jb
mov
or
gs
gs
jbe
xlat
mov
inc
xor
jae
add
movsl
push
mov
repz
inc
xor
and
pop
add
dec
ret
mov
movsb
sahf
movsb
cld
int
outsl
lods
test
ss
stos
lret
lcall
cmpsb
movsl
jno
push
in
mov
into
xchg
add
lret
test
jno
pusha
adc
decb
inc
in
add
inc
scas
add
pop
scas
stos
sbbb
jne
ss
mov
test
cli
push
xor
icebp
cs
mov
push
cmp
pop
rorl
cmpsb
jnp
add
in
prefetcht2
and
sub
outsl
jo
inc
adc
or
lods
inc
jp
mov
xor
aaa
and
cmpsb
rcll
fnstcw
pop
lret
leave
hlt
pop
pop
mov
pop
fwait
push
aas
pop
dec
jecxz
xor
les
xchg
pop
add
shlb
jg
rcrb
lahf
jg
lea
pop
aaa
fs
fbstp
ja,pt
stos
pop
mov
cmp
push
or
cmp
xorl
ret
les
jle
add
addr16
cmp
fucomip
les
out
add
cmp
sti
push
and
dec
add
out
nop
jle
aad
fnstsw
testb
shll
out
push
es
mov
adc
push
and
push
repnz
mov
mov
je
rclb
pop
fisubrs
sub
mov
je
mov
mov
and
xchg
jne
add
gs
mov
out
push
pop
test
icebp
scas
loopne
mov
int
adc
add
jns
jge
test
loope
into
imul
push
sti
das
fisttpl
sub
ret
gs
jp
pop
aam
cmc
les
mov
lods
jo
add
push
xchg
pop
das
push
ljmp
fmul
jecxz
scas
pop
sbb
insb
mov
xor
sbb
into
fldt
or
xchg
lds
xchg
push
dec
pop
sbb
rcrb
addr16
fs
mov
aas
into
push
sub
jp
in
jl
push
dec
lret
mov
sbb
sbb
lret
add
mov
int3
subl
inc
push
adc
test
repz
addr16
aam
mov
fildll
cmp
out
ret
insl
and
imul
out
imul
dec
inc
jb
push
and
fiaddl
cli
fmul
dec
cs
xchg
xor
pop
and
jnp
loopne
fld
icebp
lods
stos
jae
pop
xor
and
xchg
cmpsb
or
ret
in
jl
jnp
push
jbe
mov
cmpsl
test
add
popf
cmp
aam
push
test
jnp
out
test
inc
fs
add
and
jecxz
pushl
gs
push
jle
or
lcall
out
jo
sub
mov
fs
or
rcrb
mov
sbb
stos
aas
xor
push
or
inc
lea
sub
and
cmp
aas
lea
xchg
adc
shl
xchg
sbbb
pusha
push
cwtl
int
popa
jne
pop
je
in
out
or
cmp
or
jecxz
aad
and
das
aad
mov
mov
pop
pushf
xchg
xor
cmp
mov
pop
or
shll
push
outsl
lods
fwait
adc
xor
inc
sbb
aaa
ret
mov
xor
sti
sub
cmp
insb
fldl
mov
push
jb
push
dec
or
clc
and
ja
jge
jbe
or
mov
dec
insb
cmp
andw
ss
mov
add
xor
cmp
or
jmp
enter
add
test
and
pop
lret
jp
push
cli
xchg
pop
xchg
or
xchg
test
sbb
adc
push
outsb
mov
dec
lcall
xchg
lret
lret
inc
into
out
sbb
pextrw
ja
jg
sbb
iret
push
es
pop
adc
mov
sbb
stos
pushf
sbb
cli
push
sub
sub
orb
adc
jnp
or
push
bound
aas
movsb
pop
sub
pop
in
add
in
mov
rorb
or
inc
mov
lea
into
cmpsb
fwait
js
xchg
and
jmp
xchg
sub
sbb
jnp
ja
dec
lea
mov
and
mov
jl
sbb
loop
xor
mov
mov
xchg
icebp
push
ljmp
sbb
xor
loopne
cmp
icebp
imul
sbb
cwtl
pop
leave
push
lds
out
and
inc
adc
or
nop
sbb
out
std
fsubrs
mov
pop
jae
mov
xlat
mov
inc
gs
mov
sbb
dec
cmpsb
pop
xlat
mov
adc
xor
jle
sub
ljmp
adc
inc
push
push
mov
in
shrl
mov
pop
and
imul
mov
decb
dec
stos
inc
sbb
ja
ss
or
xor
test
movsb
hlt
sar
mov
add
pushf
xor
xor
or
or
sub
cld
out
mov
jmp
shl
sti
jae
das
ficoms
and
push
pop
ret
hlt
push
xchg
test
jne
dec
jg
cli
mov
sub
jns
cmp
adc
xlat
add
fbld
lret
push
enter
popa
test
out
aam
inc
mov
imul
int
fcmovnu
mov
mov
mov
loope
sub
rcll
fbstp
mov
inc
stos
and
xchg
cli
les
push
bound
test
arpl
lcall
lret
inc
sub
cmp
jle
fistl
aaa
add
xchg
or
push
aad
insb
mov
imul
xor
cmp
lret
loope
adc
shlb
rcrl
inc
decl
dec
mov
sbb
test
cmpsb
and
iret
pop
dec
repnz
rcl
ss
sbb
out
rclb
cwtl
sbb
sub
pop
enter
cmp
shlb
dec
dec
orb
fisubrs
lods
pop
mov
xchg
fistpll
repnz
inc
pop
icebp
jbe
adc
sbb
inc
sahf
lahf
cs
repz
test
jnp
pop
or
imulb
in
mov
les
fists
or
popf
scas
push
jno
in
sti
int3
popl
nop
orb
loope
pop
out
stc
imull
push
dec
jno
sbb
xchg
fdivrs
xgetbv
cs
ret
pop
scas
jge
iret
lods
shl
pop
add
shr
sti
nop
pop
push
jle
mov
adc
push
lcall
inc
lea
cmpsl
es
mov
mov
xlat
outsb
cmpb
mov
xchg
js
push
stc
and
push
neg
mov
adc
push
jno
les
iret
push
push
xchg
jg
aad
loop
popa
jne
fisttpll
sti
mov
push
dec
std
and
cmp
xor
mov
out
cmpsb
loopne
adc
test
push
sub
faddp
adc
rolb
add
push
xor
add
jl
addr16
and
cmp
jbe
xor
lahf
icebp
sbb
xor
jg
rclb
sub
pop
dec
fstps
mov
ret
mov
push
ret
inc
xchg
or
mov
xor
mov
jle
lods
xchg
out
fstps
cmc
or
sbb
dec
scas
inc
pop
cmp
dec
mov
mov
pop
mov
mov
dec
pushf
hlt
inc
movsb
and
xchg
subb
and
stos
imul
mov
jle
jo
test
nop
pop
test
sti
mov
cmp
andl
ret
test
mov
xchg
je,pt
out
lea
mov
out
jb
mov
dec
adc
xchg
cmpsb
add
push
mov
xchg
mov
and
jb
pop
push
xor
cmp
cltd
xchg
dec
adc
and
xor
jge
into
lock
in
imull
shrl
hlt
imul
das
xchg
std
pop
lret
xchg
xor
inc
lcall
push
leave
loope
std
adc
test
shrl
fimull
add
pop
repnz
out
lret
jnp
pop
cld
adc
push
mov
xchg
xor
lea
rclb
leave
aam
push
dec
mov
push
or
push
popf
data16
add
pop
adc
xor
addr16
sbb
mov
ljmp
push
roll
les
jns
ja
das
insl
stos
pop
insl
dec
int
add
test
jge
sbb
xchg
push
fsts
push
cmpb
jp
jmp
icebp
aaa
cmpsl
fidivs
clc
iret
sbb
or
dec
fimull
das
pop
jge
inc
mov
and
or
std
mov
cmp
push
xchg
aam
js
inc
or
and
nop
add
mov
fcmovne
jecxz
jl
leave
sti
jecxz
sub
push
pop
out
repnz
and
pushf
adc
mov
xchg
push
push
shlb
inc
dec
repnz
adc
lea
rol
jle
int
mov
rclb
jp
scas
pushf
call
test
jl
roll
cs
jl
fisttpl
mov
outsb
mov
out
mov
scas
aas
scas
mov
ds
xor
pop
movsl
push
or
test
ret
push
jmp
ret
mov
cmp
lahf
mov
subps
cmpsl
cmp
outsl
mov
test
loop
repz
fnstenv
xchg
xchg
lods
shll
push
push
mov
sbb
or
push
push
in
fwait
add
push
push
xchg
jae
insl
sub
inc
addr16
leave
rcr
int3
push
or
lret
lea
pop
hlt
addr16
jp
jne
sbb
scas
les
sub
iret
jmp
in
pop
enter
xor
fsub
jmp
cs
add
pop
xchg
xchg
fst
dec
mov
outsl
xlat
push
out
pusha
jo
xchg
cmpsl
xlat
and
xor
add
iret
repz
jno
std
popl
mov
test
pop
mov
push
dec
sahf
mov
jg
and
ret
pop
and
aam
and
xor
pop
rcrl
cmc
mov
lock
dec
ret
ret
sub
cs
shlb
inc
lods
sbb
movsl
in
orb
imul
inc
sbb
std
inc
aam
stos
jmp
hlt
loope
pop
fsubrl
or
xor
repz
mov
in
mov
inc
lcall
add
add
lret
push
aas
outsl
mov
aam
cs
xchg
and
push
mov
test
out
rcrb
inc
imul
or
add
sub
ret
out
cmp
fistl
sti
cmpsl
dec
mov
aas
xor
mov
xchg
test
sub
incl
add
scas
xchg
pop
cmp
add
add
cmpsl
addl
xor
jmp
add
negl
fs
cmpsl
sbb
or
inc
push
std
clc
or
add
fistl
jge
mov
mov
enter
fisttpll
xor
fcompl
pushf
jp
push
mov
mov
pop
insl
cmp
xchg
push
xor
push
jg
stc
push
pop
xor
push
or
test
loop
into
jge
mov
mov
jnp
loope
push
inc
sti
in
shll
inc
push
cmpsb
loope
jo
rcl
jg
lret
mov
loopew
jp
pop
xchg
sub
movsb
fnstcw
imul
xchg
fisubs
out
mov
scas
out
or
lods
iret
add
roll
int3
int
cmp
test
jge
movsl
cmp
std
hlt
xchg
mov
into
xchg
adc
repnz
ss
pusha
clc
shrl
call
jmp
ret
insl
xor
cmpsl
out
mov
and
jns
test
dec
xlat
test
and
or
jg
leave
push
pushf
sub
dec
and
fldt
lods
sbb
inc
enter
ljmp
push
dec
xor
cmp
mov
xchg
jecxz
sbbb
inc
insl
test
sbb
sti
inc
jmp
enter
aad
sub
aad
mov
adc
cmp
fdivrl
mov
mov
aaa
fwait
xor
mov
mov
daa
sbb
sub
cmc
cld
loop
pushf
mov
pop
enter
mov
in
cs
pop
push
add
pop
xlat
outsb
pop
cmp
jae
outsl
mov
mov
aaa
je
xchg
lahf
mov
jge
push
pop
nop
fiadds
incl
add
dec
inc
jmp
sbb
cmp
mov
pop
adc
mov
insb
hlt
cmp
pop
xchg
inc
add
push
pop
jl
ret
sbb
push
divb
and
mov
nop
sbb
mov
cmpsl
jne
inc
and
jno
dec
jbe
jae
mov
punpckhdq
and
mov
push
sub
push
enter
cmp
and
scas
xchg
fbld
pop
jo
inc
or
push
stos
jle
js
enter
xor
or
pop
call
pop
and
xchg
ss
pop
fidivrl
push
pop
push
mov
xchg
sub
jge
mov
mov
adc
cmpsl
movsl
imull
das
cwtl
inc
mov
sub
push
mov
fwait
add
cltd
jbe
mov
xor
in
enter
lods
call
ror
push
and
imul
movsb
movsl
call
imul
xor
mov
fmull
lahf
loopne
ret
fsubl
sub
or
aas
and
adc
dec
clc
jb
cmp
xor
xor
ret
ret
push
enter
test
bound
xlat
lahf
pop
jmp
mov
xor
je
pop
out
add
push
js
jmp
emms
data16
jecxz
cmpsl
daa
mov
lea
add
mov
xchg
popf
and
jb
test
sbb
notl
jle
shr
gs
inc
jb
jne
jg
aad
lock
sti
outsl
lret
add
mov
mov
test
loop
pop
jle
mov
mov
mov
or
pop
jbe
add
push
pop
iret
fistpll
jnp
xorl
dec
xlat
jne
loopne
mov
sub
jnp
lret
ljmp
inc
aam
dec
or
and
inc
fadd
cmc
pop
imul
mov
mov
je
pop
sbb
pushf
or
fwait
outsl
push
lret
jno
jmp
inc
shrl
subb
mov
fdivp
jbe
cltd
int
lock
aaa
adc
clc
in
pop
xchg
jmp
pop
or
xor
rcrl
jmp
sbbb
into
cmp
xchg
inc
pop
js
mov
iret
ljmp
dec
stc
clc
jl
push
dec
jno
cmpsb
cltd
dec
lret
nop
push
jge
inc
cmp
cmp
push
aad
adcl
mov
jno
fimuls
xor
nop
pop
pop
jl
pop
dec
shll
jns
mov
sub
mov
lea
imul
das
mov
or
std
loope
jg
lock
or
dec
and
mov
ljmp
std
or
add
add
jae
and
lcall
repz
mov
les
bound
push
cltd
faddl
test
xchg
inc
xchg
popa
jp
mov
dec
test
leave
ret
mov
ss
cmpsl
in
scas
dec
sbb
inc
dec
sbb
ja
jbe
ja
add
adc
cmp
rorb
sub
rcrl
inc
ljmp
cmp
loop
cwtl
insb
outsb
popf
movsl
ficoms
pushf
pop
adc
clc
dec
call
lods
mov
icebp
inc
daa
xchg
dec
dec
or
mov
jl
pop
fldenv
add
sub
dec
mov
pop
cmp
outsl
mov
movsb
add
dec
mov
or
cmp
xchg
pop
pushf
fstpt
adc
pop
aaa
mov
cmpsl
and
int3
sub
call
lock
mov
jg
jp
jg
cmp
outsb
imul
ss
rorl
jnp
in
cmpb
std
push
int
xchg
pushf
adc
mov
mov
dec
aam
jns
aaa
arpl
push
jo
xchg
ds
out
push
xlat
pushf
mov
test
test
push
or
mov
and
push
int
pop
lods
fst
jnp
filds
lods
add
std
sbb
adc
dec
xchg
mov
dec
insl
mov
and
sahf
cs
cli
mov
divb
ljmp
jge
push
adc
push
loop
sub
out
lea
jno
sbb
daa
mov
inc
jns
push
out
cld
es
dec
sbb
cmpsb
stos
adc
aad
mov
cmp
insl
mov
sub
mov
mov
lahf
fsubs
mov
push
ror
mull
xchg
inc
clc
rclb
adcb
hlt
mov
cmpsb
dec
loope
or
pop
or
lahf
sbb
fstenv
sbb
jle
cmp
mov
pop
and
out
lods
daa
mov
cs
inc
xorl
push
sub
add
inc
cmp
dec
xor
repnz
addr16
adc
or
cmp
leave
enter
ljmp
cs
sbb
adc
das
fnsave
jecxz
idivb
orb
cmp
push
imul
icebp
lret
xor
das
lods
out
aaa
mov
cmp
cmp
inc
and
std
push
mov
in
dec
lret
insl
and
mov
pop
or
arpl
jmp
and
sub
mov
das
cmp
xchg
stc
pushf
xchg
jle
or
pop
xchg
rep
mov
fsubs
mov
fs
stos
inc
rep
push
fstl
inc
fnstcw
ja
aaa
out
aam
mov
test
ja
pop
push
mov
adc
cmpsb
loope
call
fwait
mov
inc
ds
test
mov
pop
push
imul
pop
inc
rclb
mov
loop
ss
dec
sbb
or
pop
leave
xchg
ja
push
test
dec
dec
sbb
stc
sub
pop
out
loope
xor
lret
pop
jno
pop
xchg
jne
and
scas
ret
adc
jmp
mov
add
mov
push
aaa
and
lcall
popa
adc
dec
push
dec
icebp
aam
sub
int
push
lret
pop
pop
fs
sub
sahf
outsb
loop
icebp
push
xabort
dec
cmp
decb
in
dec
and
xor
cmp
lods
push
add
inc
mov
in
into
sub
push
aas
sti
lret
and
xor
or
jmp
pop
icebp
adc
loope
add
inc
mov
jge
sbb
or
and
movsb
fildl
icebp
mov
push
jbe
insl
adc
push
xchg
and
pop
cli
pop
push
sbb
push
sub
dec
sbb
aad
cmp
das
pushaw
insl
xchg
push
mov
lods
mov
ret
inc
leave
fnstenv
test
pop
hlt
jae
xchg
pop
cmpsb
pop
imul
shl
leave
sarl
cs
jl
sbb
aas
or
out
add
test
test
inc
mov
mov
shll
iret
sub
push
fisubrs
js
push
pop
in
std
jae
ds
dec
scas
arpl
ja
jle
pop
or
jbe
stos
and
jo
ret
mov
aam
xchg
es
lret
and
inc
shlb
jl
and
gs
in
into
add
rcrb
xchg
ja
mov
mov
pop
lea
xchg
inc
mov
imull
in
pop
pop
dec
out
inc
push
insl
mov
xchg
int3
test
call
or
cli
movsl
xchg
mov
les
adc
xor
stc
fsts
xor
mov
aam
ds
xchg
push
adc
dec
mov
cwtl
cmpsb
mov
inc
aam
dec
sbb
test
stos
sbb
and
and
cltd
xor
mov
arpl
ljmp
mov
adcb
push
out
and
ja
xor
data16
adc
loop
test
and
mov
inc
adc
data16
insl
imul
stos
xchg
pop
lcall
sub
test
loopne
and
insb
out
cs
fdivl
xor
jp
ljmp
cli
mov
js
cmp
mov
push
pop
or
pop
pop
sub
sbb
cmc
push
std
shlb
add
test
in
pop
add
ret
addb
or
and
lds
inc
das
mov
add
addr16
ret
out
stos
xor
das
mov
pop
pop
mov
scas
add
pop
jge
mov
jl
xchg
shl
inc
inc
inc
dec
les
add
sub
adc
out
std
cltd
mov
fnstenv
in
lret
repz
cmp
call
jge,pn
push
mov
pushl
scas
inc
mov
in
cmp
adc
cmp
add
pop
add
stc
dec
jb
pusha
dec
mov
mov
mov
mov
mov
mov
mov
and
sbb
add
mov
cmp
imul
out
mov
pop
add
push
cmp
pop
hlt
out
xchg
adc
pop
mov
push
push
push
cmp
jge
xor
imulb
mov
insl
fincstp
add
icebp
mov
fildl
pop
adc
add
sub
ljmp
lcall
mul
inc
or
sti
lods
popa
mov
push
fs
sbb
and
jecxz
dec
push
fnstsw
shlb
out
loope
xlat
xchg
lret
aam
mov
pop
sub
sbb
push
pusha
testl
aam
ret
les
mov
loop
cwtl
fmuls
out
insb
push
fisubs
jne
xlat
push
mov
rcr
jmp
sub
or
sbb
cmp
mov
inc
sub
and
outsl
or
test
mov
jl
out
aam
adc
aaa
stc
int
jg
jnp
imulb
movsb
inc
or
xor
add
or
cmpb
pop
mov
add
sub
lods
test
and
sbb
movsb
sbb
xchg
enter
outsb
push
mov
jmp
push
mov
inc
inc
jb
xchg
and
dec
rol
jb
aas
and
fstl
mov
inc
xor
inc
jecxz
mov
mov
aam
movsb
xchg
dec
in
cwtl
in
test
repnz
or
jmp
into
jno
push
cltd
push
out
fisttps
pop
hlt
ret
divl
mov
fwait
push
cmc
fsubrs
lret
sbb
lods
pop
cld
lea
dec
jle
test
mov
mov
add
jnp
dec
pop
jge
lahf
cmc
xchg
je
xor
xlat
out
filds
jp
lcall
hlt
cmpsb
mov
jp
inc
push
mov
ss
and
push
push
and
push
popl
jl
call
lods
or
scas
ljmp
lret
movsl
pop
rcll
movsb
jb
mov
dec
insb
inc
mov
stos
jecxz
arpl
pop
xor
mov
or
out
mov
mov
dec
pop
ret
sbb
mov
test
loope
subl
adc
xchg
mov
out
mov
in
daa
shrl
dec
adc
pop
push
jge
out
adc
jmp
shll
hlt
inc
loop
int
mov
andb
mov
xor
jle
cmpsl
push
add
push
xor
scas
sahf
jg
popl
adcb
xchg
in
sub
addr16
cli
cli
loop
push
jo
xchg
mov
jle
into
xchg
shlb
popa
mov
push
cmpsl
cmpsl
shlb
aaa
adc
pop
mov
xchg
das
lea
fs
fbld
dec
leave
jno
adc
sbb
adc
lock
adc
pop
add
dec
dec
or
mov
dec
addr16
fildll
cwtl
gs
js
outsb
mov
adcl
lods
mov
and
js
leave
mov
sbb
inc
fwait
xchg
fstl
mov
sbb
in
dec
jmp
movsl
push
jno
stos
xchg
xorl
sub
sub
jno
pushf
fidivrs
cmpsl
sub
iret
xchg
add
jo
gs
popf
xor
mov
pop
jl
pop
scas
sub
and
enter
and
mov
xlat
orl
loopne
mov
inc
pop
mov
cmp
xchg
mov
js
aas
inc
ficoml
mov
sub
sub
inc
roll
cli
aaa
and
xor
bound
movsb
lods
hlt
dec
mov
pop
jp
push
xchg
cmovns
inc
fmulp
sub
mov
adc
cmp
rorb
sub
out
fwait
push
pop
inc
and
adc
pop
dec
add
test
mov
stos
ss
cmp
fadd
push
bound
xchg
shrb
je
cltd
leave
in
pusha
mov
adc
mov
popf
xorl
lret
pushf
pushl
in
xor
dec
inc
lea
and
lock
or
cmc
xor
loope
cmp
pop
test
mov
mov
mov
cmp
scas
call
push
push
xor
dec
mov
xor
cmp
sub
dec
adc
std
push
mov
jne
in
or
push
dec
mov
add
sub
insl
sbb
push
dec
mov
jne
mov
sti
push
add
mov
or
add
repnz
sahf
in
mov
movsb
or
mov
dec
int
push
xchg
fstp
jne
sub
cmpsl
lds
mov
jecxz
mov
stos
loope
mov
addb
in
icebp
ja
icebp
lods
inc
call
xchg
cs
nop
pop
jmp
lret
dec
stos
pop
repnz
cltd
mov
test
sub
pop
orl
or
int3
les
add
and
fcmove
mov
loope
mov
add
cmpsl
mov
sub
sbb
popa
filds
int
mov
mov
aas
jnp
sarb
sub
jle
lods
inc
push
shl
jge
aad
stos
sub
mov
push
xor
aad
jecxz
getsec
leave
imul
and
pop
rorl
cmp
and
mov
decl
ss
cmp
cmp
jle
sub
inc
sub
cmp
mov
leave
sub
jb
outsl
mov
sbb
push
push
aam
int
popf
je
xchg
sbb
das
orb
ss
adc
dec
cwtl
inc
call
test
fsubl
ljmp
xor
movsb
adc
pop
mov
mov
rclb
dec
lcall
out
add
pop
jne,pn
push
int
mov
addb
mov
mov
push
imull
mov
les
out
dec
fldcw
call
fldl2t
mov
pop
and
shll
mov
pop
or
mov
jg
data16
jns
lret
aam
inc
outsb
mov
sbb
cmpsl
jo
dec
lcall
pushf
sub
ljmp
jnp
push
xor
loope
icebp
cmp
and
ret
xchg
mov
sbb
scas
daa
sbb
out
mov
out
test
sub
les
mov
aam
cmpl
aad
xor
dec
cmpsb
sub
pushf
adc
push
out
cld
lods
nop
shrl
xchg
jle
ds
mov
adc
or
unpcklps
pushf
dec
mov
ss
mov
and
popa
outsl
inc
neg
ret
mov
inc
adc
nop
loopne
sub
inc
incl
xlat
dec
int3
stos
int
jg
jmp
or
inc
mov
je
jo
push
popf
daa
xor
pop
cmpsb
ret
cmp
jg
xor
and
and
cs
loopne
jle
scas
sbb
cmpsb
xor
cld
or
imul
mov
push
pop
rcrb
lret
addl
jecxz
rcrb
mov
test
adc
icebp
arpl
xchg
test
popa
das
fistpll
add
mov
lcall
in
xchg
push
mov
lcall
adc
es
adc
jle
sbb
add
sub
mov
xlat
and
sub
lock
imul
std
sbb
push
rcrb
inc
mov
mov
lds
inc
dec
adc
lcall
add
and
pop
jl
ret
push
ja
sbb
mov
mov
leave
je
pop
outsb
lods
jo
cwtl
sub
inc
jl
pusha
and
or
add
inc
pop
stos
aam
fsubrs
mov
pop
xor
cltd
lahf
cld
mov
lcall
in
sbb
push
lods
jns
sub
je
cmpsb
mov
xor
or
clc
cmp
pusha
mov
cld
sbb
int3
mov
push
jp
std
repz
xchg
xorb
ret
in
pusha
mov
push
push
popa
cmp
mov
mov
repz
vmovq
gs
pop
inc
out
test
dec
xor
jbe
ss
jl
jp
aam
outsb
mov
stc
testl
mov
loopne
jae
fcmovu
std
jb
insl
and
js
push
les
repz
fwait
mov
lock
or
pop
mov
xor
push
pop
addl
xor
hlt
inc
inc
sub
loop
push
mov
sub
jno
outsl
add
or
test
scas
dec
or
mov
sbb
icebp
aam
insb
movsl
mov
fs
xor
pop
pop
insl
shr
pop
pushf
mov
imul
lret
rol
cmp
rcll
cmp
les
dec
dec
mov
lcall
adc
cmp
adc
les
jne
arpl
aaa
add
xchg
jg
into
int
and
jnp
push
cmp
addr16
lahf
xchg
aas
sub
sbb
test
jge
fsubl
aas
add
fs
ud1
aad
add
mov
dec
add
ret
addl
pop
pop
mov
adc
or
xor
push
in
cld
adc
in
xor
pusha
inc
or
addb
int3
jbe
dec
inc
add
in
and
pushl
sbbb
out
mov
push
rclb
fs
clc
clc
jecxz
jecxz
push
pop
mov
jno
inc
pop
gs
js
cwtl
insl
and
inc
pop
fs
xchg
test
mov
mov
imul
push
pop
and
leave
push
mov
test
pop
cld
pop
int3
push
and
mov
ss
jp
fxch
sbb
or
pop
xor
inc
pop
in
jmp
ds
push
mov
mov
ret
mov
xchg
testl
nop
add
iret
stc
add
lock
xchg
sbb
cmpsl
outsb
into
mov
mov
cmp
sbb
das
int3
xlat
aas
push
sbb
int
and
ds
push
es
nop
aam
lahf
jns
push
enter
mov
xchg
insb
mov
es
sub
sbb
mov
push
adc
inc
popa
das
adc
xchg
lods
cmpsb
xchg
jl
add
cmp
pop
xor
lahf
gs
jns
das
mov
je,pt
sub
push
aad
mov
dec
xlat
jns
es
xor
xchg
faddl
popa
add
mov
adc
js
out
cmp
sahf
int
sub
popa
movsb
jo
leave
out
ljmp
mov
in
out
xchg
add
scas
inc
ror
adc
sbb
and
add
mov
pop
imul
adc
in
enter
ds
test
or
inc
inc
push
lahf
mov
jle
in
inc
push
adc
dec
mov
dec
dec
inc
cmp
popa
jno
xchg
cltd
jae
xchg
mov
jle
in
push
mov
adc
pop
mov
adc
roll
movsb
arpl
pushf
fbld
mov
adc
push
sub
mov
mov
movsb
inc
leave
push
repz
pop
int3
xchg
push
and
repnz
test
sbb
mov
xchg
fdivs
imul
inc
mov
xchg
aad
push
cmp
out
daa
test
cmp
sub
les
sub
shl
in
jp
mov
push
fisttps
push
adc
iret
mov
pop
int
cmp
push
mov
cmp
cmpsb
repz
pop
add
repz
jo
pusha
cmp
cmpsl
je
es
inc
xor
dec
iret
lods
adc
lods
push
pop
insl
ficoml
out
cltd
xchg
lock
lea
iret
sub
std
pop
xor
test
pop
out
js
jecxz
test
in
daa
sbb
divb
shll
xorb
mov
out
repnz
or
loopne
lock
aaa
das
insb
in
gs
arpl
dec
push
imul
sbb
mov
jo
lret
subl
xchg
and
jecxz
imul
fsub
cmp
adc
adc
test
lods
outsl
mov
pop
sub
imull
scas
lock
popa
jae
lea
or
pop
xchg
or
mov
fs
pop
or
mov
shlb
mov
lea
dec
add
aam
and
not
cwtl
cwtl
cltd
enter
mov
sbb
outsl
psubd
jnp
lcall
repz
mov
inc
ss
repnz
insb
dec
lods
ret
sahf
dec
mov
aad
imul
xchg
pop
iret
add
or
xorb
imul
or
sbb
inc
enter
push
dec
hlt
xchg
out
and
sbb
jecxz
fs
mulb
xchg
movsb
stc
mov
and
out
lret
jns
jle
out
scas
shlb
cmpsb
imul
insl
push
insb
ljmp
mov
lret
jge
out
andb
xor
add
push
xor
mov
inc
lods
jo
jge
arpl
xchg
int
addl
loopne
stc
cmp
xor
jne
mov
sub
jae
es
pop
mov
push
jnp
lret
mov
push
dec
lods
dec
ljmp
dec
arpl
xchg
inc
lret
xor
sti
lea
push
and
dec
faddp
ret
inc
sub
sti
fldl
scas
dec
inc
jne
dec
cmc
pop
repz
leave
ja
imul
fs
hlt
cmp
sub
test
and
sbb
push
pop
xchg
cwtl
mov
scas
out
roll
cs
sub
repz
push
mov
lret
movsb
or
or
daa
cmp
sub
in
jle
mov
xor
mov
aaa
mov
xchg
and
ret
mov
push
adc
cmp
std
into
mov
pushf
stos
pop
cmp
imul
test
nop
sub
ds
imul
sbb
xchg
mov
push
push
dec
imul
or
test
and
add
inc
sbb
mov
mov
in
and
xchg
sub
xchg
mov
subl
mov
xchg
cmp
ljmp
in
jl
icebp
rclb
repnz
mov
scas
inc
iret
jno
jno
sbb
inc
adc
call
and
cmpb
lock
notl
hlt
imul
sbb
lods
push
push
cwtl
loope
shll
push
inc
ret
popf
sub
stos
out
bound
adc
dec
sub
push
dec
xor
divl
or
cmp
aam
cmp
xchg
xchg
inc
sub
pop
rorb
adc
mov
call
inc
ss
xchg
ss
dec
iret
mov
cmp
nop
jo
mov
mov
jo
sbb
xchg
mov
enter
shll
push
mov
rcl
es
mov
pusha
push
movsb
je
cmp
cld
xor
jno
pop
add
push
and
bound
pop
cmp
loop
add
jne
int
jns
dec
jle
fs
scas
iret
jae
sbb
loope
mov
sub
dec
jge
and
scas
or
mov
jae
pop
adc
out
mov
aas
jl
call
mov
sub
ficompl
lds
mov
mov
in
scas
xchg
push
xchg
imul
and
jnp
ss
jbe
push
push
push
xlat
mov
js
dec
out
push
negl
aam
fs
lret
outsb
lret
jae
and
jbe
shll
lock
dec
push
pop
stos
and
bound
and
xchg
pushf
jno
adc
repnz
push
call
cli
xchg
xchg
cs
push
shlb
push
mov
jmp
and
pop
and
int
cmp
mov
push
or
stos
lds
mov
ficoms
andw
scas
aas
jg
push
out
xchg
cmp
bound
xor
cmp
data16
jnp
xchg
cmp
jp
mov
aas
push
sti
pop
mov
cld
pop
jnp
jmp
mov
cwtl
pop
dec
pop
sub
imul
movsl
mov
xchg
mov
dec
mov
sbb
jmp
imul
test
aaa
rorl
ret
int
jae
and
add
shrl
adc
pop
pop
pop
xlat
repz
cwtl
dec
mov
add
negl
out
mov
inc
cltd
jns
cwtl
push
cs
fildl
cmp
in
mov
adc
xchg
bound
test
pop
stos
daa
sub
lret
mov
inc
mov
dec
dec
sbb
inc
shrb
xor
shlb
ret
lock
sub
aaa
and
inc
jmp
inc
korb
pop
sub
mov
jmp
or
dec
scas
push
shrb
adc
lods
dec
cmp
and
out
lea
in
dec
cli
cli
ret
pop
lea
pop
sbb
xor
rolb
pop
int
imul
add
mov
xchg
mov
sub
cmpb
jle
and
lcall
fisttpll
data16
pusha
inc
mov
jp
ret
inc
or
movsl
pop
and
or
popf
push
out
cmpsb
dec
add
lcall
cmc
aas
dec
or
sarl
insl
adc
clc
mov
xchg
pop
xor
sbb
sub
es
add
mov
movsb
out
and
and
popa
bound
inc
cmp
adc
loope
push
into
cmp
vpextrw
lds
leave
test
jmp
out
out
sbb
jne
push
push
les
sbb
loop
loop
push
inc
xchg
insb
bound
incl
call
jecxz
or
shrb
movsl
mov
mov
mov
inc
and
ljmp
and
cltd
sub
arpl
or
xchg
rcll
mov
adc
add
fnstsw
or
fdivrl
cmc
mov
call
jo
bound
out
sub
cmpsl
popa
mov
inc
xor
xchg
pushl
data16
loop
mov
jmp
inc
ja
lods
mov
stos
mov
adc
mov
mov
cmp
jae
sbb
repz
and
push
jecxz
insb
sbb
inc
pop
push
sahf
test
nop
mov
bound
sbb
and
mov
orb
insb
rcl
addr16
adc
lret
fmuls
sbb
fidivl
bndstx
sarl
popa
mov
adc
jl
test
sub
insl
or
nop
jp
or
pop
push
sub
aad
sti
xchg
into
lock
dec
rorb
jmp
jle
in
adc
ret
in
loop
push
pop
push
ljmp
ljmp
or
aas
mov
inc
push
xchg
add
sbb
sub
popl
es
add
or
mov
cmpsl
dec
int3
push
add
push
outsb
pop
arpl
aam
leave
pop
rcr
es
icebp
pusha
pushf
cmp
mov
in
hlt
test
cmc
and
adc
popf
test
les
mov
adc
xor
xchg
idiv
fbld
sub
sar
adc
int3
negl
mov
jge
daa
test
and
daa
push
repnz
and
add
xchg
pop
xor
in
in
and
mov
sbb
faddl
jl
xchg
lret
inc
xchg
lcall
in
jb
sbb
xchg
popf
xchg
jno
mov
shlb
in
daa
xchg
cmp
adc
add
test
loopne
adc
xor
cltd
add
adc
mov
sbb
sbb
mov
ret
mov
addr16
ljmp
mov
lods
fmuls
cmpsb
xchg
sbb
rclb
mov
inc
mov
loop
rorb
cmc
or
repz
xchg
adc
pushf
pop
mov
imulb
lea
stos
and
int
ss
sub
out
lret
push
imul
push
scas
inc
pop
adc
shlb
test
inc
xor
cmp
inc
jmp
idiv
mov
jmp
jbe
jl
popl
cld
mov
and
mov
loop
insl
inc
mov
pop
pop
sbb
into
js
sub
insb
sbb
sarl
sti
rcll
or
loope
addr16
mov
cmp
pop
lea
inc
xor
mov
xor
clc
pop
test
test
jo
cmpsb
rolb
jb
ljmp
inc
inc
mov
cli
loopne
enter
push
xchg
xchg
out
lds
mov
fsubrp
or
mov
adc
pop
or
cmc
cmpsb
mov
rolb
lods
fisubl
jge
dec
xchg
repnz
stc
mov
dec
sbb
and
rorl
test
cltd
int3
cs
xchg
pop
lea
mov
lahf
ljmp
popa
or
clc
cmp
pop
xor
mov
in
test
push
adc
in
test
mov
add
xchg
inc
and
jl
pop
lret
adc
pop
mov
mov
add
fwait
sub
xchg
mov
mov
push
mov
add
add
fstpl
mov
xchg
adc
andb
xor
pop
stos
arpl
test
cs
dec
ss
arpl
cwtl
xor
cmpsl
dec
adc
addl
enter
push
cli
shll
pop
add
push
push
mov
cmp
push
ds
push
fcomp
cmpsb
push
aaa
lcall
movsb
dec
mov
das
pop
mov
inc
xchg
and
and
fdivs
mov
insl
sahf
xor
jl
mov
icebp
shrb
xor
in
push
fsubl
mov
ret
jl
fnstcw
xor
aad
inc
inc
push
xor
aaa
adc
out
push
jo
pop
add
mov
es
ret
call
jge
les
daa
lock
leave
jnp
fdivl
jbe
stos
sub
test
xor
pop
lods
pop
xchg
add
int
dec
xchg
or
or
pop
ds
movsl
shrl
mov
sti
gs
inc
mull
ret
adc
pop
mov
sub
cmp
lock
mov
mov
add
sub
in
xchg
push
mov
dec
dec
xchg
pusha
testb
sahf
lock
repz
xchg
test
push
gs
jne
fst
jl
out
mov
icebp
jecxz
mov
cwtl
sbbl
data16
or
stc
cltd
xchg
cmp
aam
ds
clc
or
pop
test
pop
mov
cmp
push
pop
lcall
out
pop
jne
lock
sbb
sarl
bound
test
popf
ficomps
jo
repnz
cmc
jns
jp
and
sub
ds
xchg
lret
arpl
ret
adc
mov
push
repz
mov
push
data16
and
and
push
xor
call
or
sub
push
push
push
xchg
je
test
sub
add
inc
lea
fdiv
rcr
fisubrl
and
incb
adc
bound
scas
fsubrp
les
test
jl
outsl
bound
ret
add
mov
mov
jmp
out
sub
mov
fstl
pusha
mov
lds
mov
aas
xor
cmpsl
leave
subb
sub
sub
add
push
in
mov
mov
cmp
jae
dec
int
pop
lss
ljmp
sar
arpl
xchg
sahf
pushf
mov
mov
adc
add
mov
dec
loop
sub
add
push
jmp
inc
push
leave
and
mov
xlat
mov
lock
js
sahf
nop
pop
pop
lcall
xchg
ja
add
fstpl
sbb
mov
jecxz
push
cmc
ss
std
xchg
inc
test
insb
pop
or
dec
push
fcmovnb
adc
icebp
jnp
ja
push
dec
xor
mov
mov
lods
aaa
pusha
mov
jbe
lahf
in
daa
push
adc
clc
mov
mov
inc
push
loope
add
push
push
mov
or
cmpsl
sbb
add
insl
lahf
inc
loopne
cmp
stos
xchg
sub
or
daa
jecxz
mov
mov
and
subb
stos
and
push
xchg
adc
loope
out
mov
enter
mov
les
xlat
jecxz,pt
push
or
movsl
and
int
and
xor
into
push
mov
cmpsl
cmp
xchg
mov
std
js
clc
in
testl
in
pop
push
loopne
into
push
decb
arpl
bound
mov
fidivl
in
mov
jne
stos
fiadds
pop
std
xor
jo
in
bound
fisubrl
gs
sbb
aam
fs
loop
dec
sub
bound
cmpsb
sahf
or
cmovge
or
xchg
fcomps
orb
jecxz
xchg
iret
test
popa
xorl
lea
out
in
aam
and
sbb
pop
and
jbe
test
push
push
cmp
or
movsl
sbb
mov
flds
mov
lods
mov
imul
shrl
dec
int3
ljmp
cmc
jno
add
data16
decl
aas
movsb
mov
cmp
fsub
jns
mov
movsb
jle
ss
xchg
mov
movsl
sub
sbb
xor
push
and
lods
sti
mov
push
jns
xchg
lret
roll
int3
mov
imul
adcl
mov
in
out
mov
fisubrl
call
inc
stos
aam
jecxz
rcll
dec
dec
imul
inc
imul
out
daa
jecxz
mov
sti
lods
mov
fs
adc
bound
rcr
cwtl
movsb
data16
pop
incb
insl
cmpsl
and
xchg
sub
out
insl
add
lret
add
xchg
mov
mov
fbstp
sub
push
jno
pop
incb
lcall
sub
into
or
pusha
out
in
or
repnz
and
adcb
and
mov
aas
or
mov
xlat
sbb
ret
sbb
ds
add
cs
outsb
inc
push
or
mov
mov
lret
push
jp
cltd
add
cmp
adc
pop
and
popf
add
clc
inc
dec
xor
sub
jle
lods
out
mov
ret
mov
sti
inc
push
dec
stos
push
mov
mov
cmp
fnstsw
fwait
int
lret
mov
cmp
insb
push
int
bound
ret
aam
dec
jne
das
dec
movl
repz
jecxz
repz
sub
xchg
jp
xchg
and
jb
gs
les
sahf
arpl
and
jo
fsubrl
into
test
movsl
cwtl
push
or
sbb
xchg
push
sbb
fidivrs
outsl
out
mov
arpl
sbb
ret
aad
pushf
pushf
and
mov
cltd
scas
sub
push
push
xor
aad
and
dec
mov
xor
sbb
stc
dec
inc
xorl
sub
xlat
pushf
addl
ja
xlat
cmpsb
or
subb
jle
pop
adc
push
or
cmp
pop
xlat
jnp
add
out
sbb
insb
jp
sub
cwtl
xor
mov
adcl
or
out
pop
dec
xchg
dec
loope
sub
jbe
sbb
int
daa
mov
or
movsl
mov
pop
cmp
aaa
inc
and
xchg
insl
and
sbb
push
inc
add
cmpsl
or
and
pushfw
lds
inc
int
cwtl
xchg
fwait
xor
xor
inc
dec
jb
add
lock
stos
mov
push
jmp
or
dec
dec
jns
or
inc
add
mov
or
mov
cltd
cmp
jge
push
pusha
adc
inc
sahf
in
cli
test
mov
loopne
xor
imul
mov
xor
cmp
xchg
pop
mov
jns
mov
push
test
cltd
iret
loope
stos
sub
les
pop
mov
cmp
mov
lds
dec
xor
ja
sbb
push
clc
les
insb
jle
loop
mov
dec
in
mov
push
loope
adcl
jbe
xchg
loop
xor
jnp
cmp
push
adc
xor
push
adc
push
sarl
mov
xchg
data16
pop
sbb
jbe
scas
dec
push
jno
pop
imul
test
and
adc
xorb
jb
call
repnz
aaa
fs
cmp
movsb
xchg
subb
aam
lds
fs
jb
fstpt
mov
mov
mov
test
cli
jnp
xor
cmp
sub
test
push
lods
pop
repz
pop
mov
jne
sbb
or
pop
pusha
dec
push
cmp
jmp
sbb
xchg
std
or
ret
clc
inc
lock
int
js
lock
fdivl
loop
xchg
xchg
int3
xor
lea
inc
test
lcall
jle
loopne
dec
lds
sub
mov
cmp
xchg
sub
push
mov
adcb
jnp
or
cmp
shll
xor
fmul
sub
clc
or
xchg
jno
fwait
gs
push
xchg
and
cmp
jge
dec
rcr
mov
imul
mov
xor
cwtl
mov
into
mov
xchg
and
gs
in
out
pop
rcr
push
ret
sbb
popf
jo
dec
xor
aas
or
jl
test
js
mov
cmc
push
xor
cmpsl
push
inc
lret
test
clc
ljmp
mov
aam
mov
push
addr16
add
xchg
xchg
movsl
out
xchg
jge
jo
lds
pushf
adc
jmp
or
cli
daa
and
frstor
mov
stc
fdivrl
adc
adc
jnp
mov
cmp
inc
leave
dec
out
jmp
add
call
xchg
loopne
xor
jb
mov
and
push
insb
jae
jo
inc
lret
or
lock
xchg
xchg
mov
rcl
jge
mov
pop
adc
roll
arpl
push
sti
cmp
icebp
lea
popf
xor
or
stos
out
aaa
cmpsb
push
push
mov
imul
imul
ja
dec
or
mov
xchg
xor
jg
jecxz
sub
out
lret
xchg
cmp
repz
push
inc
outsb
add
aas
xchg
or
out
jmp
jp
pushf
add
or
imul
sbb
jbe
test
jmp
icebp
out
test
or
stc
and
jne
pop
jae
test
rcrb
rorb
sbb
roll
scas
jbe
lret
test
push
fwait
aad
sbb
jns
imull
cmp
jmp
daa
pop
pop
lods
inc
inc
std
into
call
lods
push
dec
xchg
pop
jl
addr16
inc
pushf
adc
mov
mov
insl
addb
ss
repnz
or
jne
je
inc
mov
test
jmp
push
or
sub
out
mov
sbb
and
mov
ror
seto
mov
sahf
mov
pusha
addr16
dec
fsubr
pop
pop
movsl
fwait
cmp
xchg
cmpsb
xlat
adc
sbb
inc
pusha
add
jmp
mov
sub
lahf
iret
lods
or
ficompl
xchg
and
das
add
jb
jge
mov
sbb
or
pop
lods
push
mov
fsubr
mov
adc
cltd
ds
mov
daa
pop
out
aas
or
jge
stc
mov
imul
lcall
test
xchg
leave
fisubrl
out
sahf
fucomi
mov
mov
insb
xorb
xor
cmpsb
out
xor
shlb
and
jae
or
cli
gs
pop
fnstcw
adc
add
insl
daa
mov
mov
popf
push
pushf
popf
dec
add
fisttps
jecxz
adc
aas
movsb
jle
cmpsl
cmp
and
push
pop
out
xor
push
mov
mov
inc
test
pop
mov
jo
add
das
pop
dec
nop
pop
mov
call
push
mov
icebp
fcmovb
aam
jae
mov
mov
inc
es
mov
mov
mov
pop
out
jecxz
pop
mov
lods
mov
pushf
xor
movsl
shl
sub
cltd
mov
mov
sub
test
inc
or
pop
rcrb
mov
shl
inc
scas
xor
inc
pushf
int
adc
xchg
push
nop
add
movsl
adc
cld
pop
push
ret
xchg
xacquire
test
adc
pusha
dec
lods
xchg
pop
iret
pusha
lods
ja
adc
lahf
push
iret
push
jno
sbb
outsl
mov
add
cmp
jg
inc
sub
fldcw
mov
push
shlb
inc
add
xor
push
jnp
or
mov
mov
mov
and
fwait
subl
test
mov
mov
daa
lods
sbb
jle
mov
push
mov
addr16
mov
aas
int3
flds
mov
xchg
jnp
call
inc
inc
sti
pop
out
push
fbstp
mov
nop
adc
mov
dec
xchg
mov
push
sbb
sub
mov
outsb
jbe
sti
popf
fdivrl
cli
fistpll
stc
xchg
into
int3
mov
addr16
jo
aaa
xlat
sbb
and
mov
and
xchg
in
jecxz
xor
add
xor
jge
adc
daa
jg
rolb
mov
xchg
pusha
mov
mov
push
fistpll
xchg
arpl
popa
ja
imul
dec
sub
insl
sub
pusha
mov
cmp
popf
add
mov
popa
dec
or
push
movsb
jb
add
and
or
mov
test
sub
sbb
mov
je
push
aaa
push
test
test
dec
mov
lea
cmp
sub
jmp
sti
inc
int3
imul
mov
or
ret
shlb
mov
test
loop
push
pop
xor
mov
jnp
adc
into
push
addl
mov
push
lahf
cmp
push
aas
xchg
push
cs
enter
dec
subl
jnp
repz
sbb
mov
sbb
leave
add
mov
xor
stos
test
mov
cltd
lret
daa
xchg
inc
jb
jno
stos
jp
jle
scas
pusha
mov
pop
adc
iret
sti
addl
int
aam
mov
std
ljmp
xor
xor
sti
or
dec
adc
hlt
mov
fbstp
dec
loop
das
sti
cmpsl
push
dec
mov
cmp
arpl
mov
mov
in
out
stc
push
mov
inc
pop
das
stos
sbb
scas
sub
shrb
add
and
push
loopne
imul
inc
jle
rolb
ds
imul
jne
pop
ffree
sbb
xchg
ficoml
jp
cwtl
mov
add
mov
or
dec
pop
pop
jp
lcall
inc
mulps
sar
or
popl
inc
mov
jb
mov
lods
jle
lods
cmp
push
daa
dec
pop
lahf
mov
xor
ss
insl
insb
jecxz
pusha
scas
push
and
mov
jp
dec
fists
mov
adc
outsb
fmuls
loope
bound
imull
mov
decb
push
adc
int
xchg
inc
jle
pop
push
mov
sub
fldenv
test
jmp
pop
andl
sarb
pop
lea
ja
mov
mov
or
or
rcl
rcll
cmpsb
sub
test
mov
cwtl
outsl
shl
stos
mov
add
push
jo
pop
inc
iret
gs
stc
lds
adc
shll
add
test
shl
repnz
jne
push
cmpsl
jae
clc
sbb
and
cs
pop
sub
ret
cmp
rolb
int
shlb
mov
out
data16
insl
or
lret
aam
xchg
and
bnd
mov
or
and
rclb
out
insl
adc
lods
lds
lahf
icebp
mov
hlt
xchg
es
cltd
sbb
mov
popf
dec
or
cmpsb
es
sarl
or
movl
stc
push
adc
clc
popl
push
mov
jbe
mov
xchg
sub
cmp
lods
sbb
cwtl
fsubs
mov
loopne
stos
shll
push
jbe
out
and
fldlg2
das
sbb
pop
mov
jae
scas
pop
fxtract
mov
inc
scas
jge
shll
stc
fcomp
jge
test
lods
jbe
rcrb
push
iret
test
jo
pop
sbb
stc
dec
sbb
andb
pop
rorl
mov
jl
and
movsb
repnz
rclb
arpl
loopne
dec
mov
xchg
clc
enter
shlb
push
bound
cmc
call
pop
and
daa
cs
mov
fildl
icebp
int3
cltd
xor
push
inc
xlat
bnd
mov
cmpsl
sbbb
sub
mov
js
xchg
int
cmpsb
mov
push
pop
mov
push
mov
ret
aad
orl
or
mov
mov
int
test
int3
adc
std
lahf
xchg
inc
xor
add
dec
mov
shrl
add
gs
sub
rclb
jo
fs
sbb
xor
divl
cltd
into
int3
cli
stc
cmc
in
pop
mov
decl
adc
push
pop
xchg
dec
mov
sahf
pusha
xor
shll
mov
bound
pop
fnsave
ret
sub
jg
jo
dec
pop
sub
push
cmc
and
xchg
fimuls
cmc
testl
push
push
push
mov
xor
push
mov
ljmp
in
pop
mov
fisubrl
test
loopne
rcrb
imul
xchg
jecxz
jle
data16
pushf
jmp
adc
cld
mov
out
lret
mov
cmp
sbb
and
xlat
out
mov
mov
call
jae
das
jecxz
inc
ret
daa
xchg
repz
pop
incb
mov
add
ss
xchg
jl
mov
loope
mov
pop
dec
mov
or
js
xor
inc
mov
fstpt
mov
sbb
aam
jno
outsb
push
add
stos
jnp
fdivrs
push
sbb
pop
inc
jl
and
daa
repnz
pushf
out
mov
scas
inc
in
adc
repnz
popa
xchg
xchg
daa
sub
aaa
push
js
jl
jnp
lock
ja
mov
fcompl
or
and
jle
xchg
jno
mov
push
dec
and
fidivrs
mov
pop
push
rolb
jo
push
jg
insl
inc
into
inc
lahf
enter
rcrb
mov
stos
test
mov
bound
call
mov
mov
es
insl
lods
mov
cmp
or
sub
mov
add
fistl
jno
sub
add
add
lahf
xlat
test
out
loope
mov
js
or
insl
mov
or
cli
leave
cmp
mov
dec
dec
push
daa
movsb
scas
xchg
xchg
popf
dec
mov
sahf
movsl
stc
jnp
repz
push
cwtl
xor
mov
sub
or
fnstsw
movl
call
and
fstps
mov
push
mov
out
fprem
add
xchg
and
dec
jb
scas
cmc
sbb
roll
arpl
shll
sbb
int3
or
je
mov
lret
jmp
fcmovb
icebp
pop
sarl
mov
mov
shlb
es
sub
add
mov
push
add
xchg
insb
push
iret
adc
pop
pop
lock
imulb
xchg
shlb
das
push
mov
adc
jmp
or
xchg
push
addr16
and
icebp
lret
jns
pop
lcall
cmp
jne
xchg
adc
push
rclb
repnz
inc
sub
scas
out
pop
mov
lock
mov
push
movsb
and
inc
xchg
jne
out
stos
add
pop
fiadds
pop
xchg
fists
imul
stc
lret
ljmp
sbb
in
xchg
stos
bound
hlt
xchg
into
jns
fimull
and
dec
xchg
xor
lds
bound
and
addr16
and
fdivrs
loopne
cmp
js
adc
push
sbb
aad
cmp
outsb
mov
pop
xchg
mov
cmc
ret
les
sbb
sbb
imul
pusha
das
fstp
push
xchg
lcall
and
sti
push
jbe
into
pop
push
dec
cwtl
mov
repz
add
movsl
cmpsb
dec
cmp
subb
add
out
or
adc
fcomp
mov
pop
lret
ja
jg
mov
lcall
xchg
ret
add
cli
test
test
dec
subb
imul
mov
mov
les
stos
out
clc
cmp
jbe
enter
jmp
add
clc
popa
dec
leave
inc
mov
movsl
lret
sub
jge
and
pop
incb
lds
loopne
addr16
pusha
and
fidivs
jecxz
ret
pusha
int
mov
testb
pop
ja
jo
pop
pop
sahf
mov
or
jecxz
sbb
cmc
xchg
cmp
imul
sbb
sub
sbb
fsubrs
std
in
add
mov
notb
inc
push
adc
and
and
daa
loope
mov
daa
or
sub
sub
xchg
sbb
mov
sbb
icebp
je
and
push
nop
and
jecxz
inc
das
lock
cltd
jmp
sbb
aaa
mov
pusha
cmp
and
cmp
mov
outsl
test
sbbb
in
inc
or
cmc
cmp
imul
leave
mov
or
xchg
xchg
inc
inc
xchg
popa
mov
jmp
cmp
dec
xlat
sub
and
sbb
scas
mov
pop
add
imul
cmpsl
jmp
xor
mov
jb
pop
pop
cmc
fxch
outsb
cmp
idivw
lcall
fwait
cmp
loop
lds
or
bnd
inc
xor
mov
out
cs
add
flds
lahf
or
and
jmp
out
jg
sub
adc
in
sbb
mov
pop
enter
xor
xchg
jo
shll
call
jae
xor
call
inc
and
fldt
sbb
std
mov
ljmp
mov
dec
push
xor
dec
nop
jl
fistl
lret
cltd
out
mov
loope
mov
pop
xchg
adc
pop
sub
push
dec
pop
mov
cmp
mov
sbb
insl
xchg
mov
pop
outsb
ficoms
and
ss
mov
out
test
push
sbb
cmp
in
mov
push
cmp
jns
ss
sahf
mov
sbb
xor
movsl
mov
pop
cld
fdiv
cmpsl
lods
xlat
jle
cmpsl
mov
cmp
ficomps
or
dec
dec
data16
sti
mov
xchg
push
test
cmp
xchg
jp
lret
and
fcmovnb
daa
add
adc
roll
cwtl
leave
xchg
pop
sahf
insl
pop
dec
stc
inc
xchg
or
shlb
fs
dec
xor
enter
das
pop
inc
jge
sub
int
push
dec
bswap
mov
aas
test
fists
enter
pop
repnz
pop
add
mov
sub
std
icebp
cmpl
cmpsb
dec
pop
repnz
dec
add
sub
call
pop
or
add
cltd
pop
cs
sahf
outsl
and
mov
xchg
pop
mov
stos
into
out
sti
jg
push
sahf
cli
add
add
xor
xchg
xchg
xchg
mov
jnp
cs
mov
pop
cld
into
jno
add
in
sbb
xlat
and
outsl
mov
out
push
ss
stos
sarl
arpl
fsub
into
jbe,pn
push
faddl
push
sub
hlt
or
iret
cmp
xlat
into
lret
adc
data16
push
jne
inc
js
pop
mov
push
outsb
test
mov
mov
loopne
out
inc
sub
rcrb
mov
test
out
bound
cmp
gs
mov
mov
add
jl
inc
push
mov
pop
push
shll
inc
movsb
dec
xchg
rcl
inc
pop
gs
sbb
loopne
mov
xlat
fidivrs
adc
xchg
xchg
sub
je
aam
mov
in
mov
dec
cmp
repnz
out
lcall
lret
daa
cmc
mov
repz
jge
jecxz
inc
xor
lea
pop
fs
mov
hlt
add
test
outsb
imul
idivb
inc
pushf
lods
adc
popa
adc
pop
test
sbb
add
jecxz
loop
sub
lcall
dec
aad
fldl
das
mov
fisttps
ds
xor
lods
lcall
dec
lcall
jno
call
sub
push
out
in
mov
xchg
or
jns
mov
stc
ja
incb
sbb
cli
adc
pop
and
cmp
imul
gs
mov
or
test
sub
jge
push
lcall
push
mov
stos
xor
mov
add
ficompl
test
lods
loop
mov
lods
cwtl
jg
mov
shl
inc
pop
movsl
nop
xlat
sbb
pop
lcall
ss
lock
mov
call
dec
jge
iret
in
icebp
popf
lea
mov
dec
loop
pushf
lcall
call
mov
sbb
adcl
enter
hlt
pop
xor
loope
sahf
dec
test
jmp
xchg
shll
incb
cmpsl
mov
insb
xchg
sub
add
rorl
in
test
loope
mov
cmp
int3
sub
mov
add
notb
fnstcw
fnstsw
outsb
push
fs
out
jns
dec
lock
aam
and
stos
xchg
add
cmpsl
lods
aam
jne
mov
ror
out
pusha
push
dec
xor
ret
fbstp
ja
out
or
cmp
in
mov
shll
add
outsw
lahf
jg
lods
pop
xchg
inc
or
loop
mov
rcr
add
jmp
inc
inc
dec
testl
mov
dec
xchg
scas
cli
aad
sbb
pushf
xchg
push
xor
cmp
adc
scas
and
in
and
lods
and
sub
aas
lock
lea
gs
mov
and
inc
adc
cwtl
nop
push
aad
pop
jl
mov
cmp
icebp
xchg
pop
cld
mov
cmc
pop
out
inc
lcall
or
mov
cmp
sub
icebp
jmp
push
and
cwtl
mov
in
jecxz
pop
jmp
cmpsb
fsts
push
xchg
daa
in
fdiv
or
add
mov
xor
sub
dec
iret
or
jecxz
pop
push
les
test
mov
mov
clc
lds
or
data16
mov
adc
pop
pushw
es
shlb
popa
in
adc
and
or
push
push
xlat
dec
mov
pop
out
inc
and
mov
push
add
xchg
lret
xor
dec
add
bound
jae
ss
inc
lds
push
lock
cmp
mov
jmp
inc
inc
push
mov
ja
lret
jmp
adcl
test
xor
in
mov
pusha
and
sar
scas
cmp
dec
clc
pop
lcall
adc
cmp
ljmp
aam
push
aam
dec
jo
jle
call
loopne
cs
push
dec
jne
gs
mov
stos
xor
mov
xor
and
sub
ret
pushf
mov
and
mov
mov
xchg
push
sbb
lock
sbb
mov
mov
incl
jg
mov
pop
mov
popf
and
in
fcompl
cmp
fwait
adc
cld
mov
sbb
xchg
jb
ljmp
das
xchg
jecxz
movb
daa
inc
loop
add
shll
mov
and
pop
iret
and
lds
xchg
sub
or
sbb
inc
xor
rol
pushf
mov
lahf
pop
orl
mov
aas
add
repz
fidivrl
push
pop
fmuls
repnz
aam
cmp
cmp
jmp
sbb
ds
xchg
mov
jne
adc
ds
inc
popf
test
mov
nop
ljmp
movlps
ljmp
or
scas
stos
push
ds
aad
mov
clc
shl
mov
pushf
pop
dec
cld
xchg
fsubr
scas
xchg
lahf
pop
cmc
loop,pt
jns
xchg
mov
stos
xor
or
push
ljmp
adc
add
lods
push
std
push
mov
movsw
and
or
adc
cmc
in
es
jecxz
sti
daa
sub
stos
mov
push
pop
stc
xchg
and
jmp
add
mov
inc
imul
cmp
pop
cmp
xchg
mov
or
dec
mov
jne
ja
sbb
fidivrl
mov
cmp
dec
mov
dec
add
pop
outsb
sub
push
scas
or
out
jg
out
cmp
mov
add
fs
scas
cs
sti
push
push
movb
jae
int3
jbe
cltd
arpl
xchg
cwtl
pop
out
aas
xlat
or
lea
xor
lods
inc
insb
pop
jb
insb
push
lea
mov
cmp
inc
movsb
sub
sti
xchg
or
loop
testb
inc
sar
setnp
movntq
fwait
cld
sub
fprem
fdivs
dec
pop
jb
ds
mov
out
cwtl
dec
sbb
imul
mov
push
mov
shll
outsl
gs
add
imul
mov
push
shl
sbb
mov
pop
mov
dec
lds
imul
jmp
cltd
xchg
jp
xor
stos
scas
cli
arpl
out
xor
in
push
and
dec
inc
scas
sbbl
in
std
dec
push
dec
nop
bound
js
lods
xlat
lods
xchg
mov
shll
or
sub
addr16
test
mov
cmpb
mov
jmp
inc
ja
push
adc
in
out
testb
jmp
cltd
pop
ja
mov
iret
jle
out
cwtl
inc
jl
mov
pop
pop
mov
pop
imul
cli
fldl2e
add
ret
mov
sbb
xchg
hlt
xchg
and
dec
push
jne
fstpl
jno
dec
iret
adc
adc
test
jnp
sub
bound
sbb
lret
jno
xchg
pop
fisttpl
popf
xor
mov
ret
inc
daa
lea
dec
ret
push
outsb
jle
cmp
xchg
or
out
jmp
aam
call
jle
outsb
movsb
push
jp
fdivrs
aad
sub
xchg
xor
inc
stc
movsb
jmp
cmpsb
xchg
jb
mov
ret
add
push
xchg
push
mov
xlat
aad
jno
mov
stos
jp
loop
or
mov
scas
jae
xor
sbb
dec
xchg
hlt
sti
into
insb
into
and
lock
cmp
or
pop
lea
pop
lahf
sti
cmc
dec
sub
jmp
mov
popf
cli
jo
sbb
adc
add
pop
mov
or
push
in
xchg
lds
add
adc
inc
add
ds
inc
inc
sub
outsl
ret
testl
je
lds
sahf
fs
add
shlb
sbb
push
mov
fwait
mov
lods
aaa
movsl
pop
frstor
xchg
lcall
xchg
mov
pop
notb
mov
sbb
ret
loope
shlb
sbb
icebp
or
jo
mov
rcll
stc
push
lahf
xchg
arpl
lret
out
stos
imul
push
push
addr16
sbb
xchg
fnstsw
jmp
jecxz
popa
aam
mov
loop
pop
and
shr
das
add
cmp
addr16
inc
xchg
cwtl
loopne
xchg
mov
test
mov
test
mov
lea
pushf
adc
sbb
addb
in
mov
lock
sti
jl
in
mov
adc
mov
mov
sar
cmp
bound
ljmp
loopne
fldcw
insl
push
movsb
cltd
lret
jo
cmp
call
clc
and
mov
xor
or
mov
and
mov
sahf
pop
fs
inc
jo
ljmp
test
outsb
jo
xor
pop
mov
sub
mov
lcall
add
push
ljmp
or
pop
orb
dec
cmp
ret
lcall
push
test
ljmp
cmp
xchg
lods
push
jecxz
xchg
xlat
mov
mov
or
adc
push
cmp
ss
adc
or
add
pop
in
jb
pop
lods
rolb
pop
rolb
cmc
ss
sbb
add
imul
adc
hlt
jge,pt
push
inc
mov
test
sti
outsl
xchg
aam
js
jbe
cmp
mov
pop
add
adc
jecxz
jg
xor
add
mov
popf
dec
popl
mov
cld
jmp
mov
repz
push
jge
push
leave
pop
xor
pop
xor
sti
mov
push
xchg
or
sub
sti
xor
mov
dec
repnz
xchg
cld
xchg
jmp
add
push
stc
mov
sti
fwait
and
sbb
mov
push
and
mov
cmp
jo
pop
inc
popfw
xchg
out
out
add
xchg
test
ja
sbb
into
cmp
test
test
adc
bound
xor
jg
pop
loop
xlat
call
mov
fdecstp
outsb
sbb
mov
pop
dec
les
fwait
jno
cmpsb
adc
sub
out
rorb
fcoms
push
and
inc
mov
xor
or
cmp
aaa
int
push
jo
lea
and
push
cltd
jg
inc
arpl
imul
or
pop
jg
inc
movsb
stos
push
xchg
mov
push
gs
xchg
je
testl
fwait
xlat
daa
js
negl
mov
mov
lock
stos
fsubrp
mov
cmpsl
jecxz
inc
scas
setbe
sub
lcall
es
mov
ljmp
pop
pop
xchg
adc
lods
xchg
out
ja
jge
orl
xor
lea
movsl
inc
sahf
xor
mov
add
xchg
adcl
stc
pop
mov
adc
lret
js
and
and
data16
mov
sbbb
mov
pop
mov
pop
pop
js
and
loope
dec
lea
dec
ret
addb
and
add
xchg
push
push
test
pop
sub
add
xor
loopne
cmpsb
outsl
adc
insl
fdivrl
mov
xchg
mov
movsl
mov
test
jnp
mov
jne
xchg
mov
sbb
mov
arpl
mov
xchg
fisubrs
pop
adc
push
or
fiadds
fistps
adc
cmp
sub
loop
sub
add
adc
stos
mov
inc
push
pop
cmc
repz
push
xor
mov
pop
cs
adc
xchg
mov
stos
or
dec
inc
pushf
pop
lret
dec
xor
mov
cs
mov
adc
mov
scas
add
out
pop
clc
mov
repnz
push
sub
sub
std
or
cld
pop
push
cs
jg
scas
inc
int
ss
stos
mov
aas
lcall
pop
and
add
push
mov
mov
test
fs
or
jl
push
popf
leave
mov
in
sbb
aad
and
adc
add
push
lea
sub
fwait
mov
adc
mov
sbb
ss
notl
addr16
dec
fwait
sarb
das
pop
frstor
inc
mov
or
into
out
mov
xchg
push
mov
ret
je
ret
scas
ds
leave
push
ss
push
push
gs
push
roll
cmp
xchg
fidivrl
jae
out
fwait
lret
sahf
push
lret
popa
lods
add
pushf
out
push
mov
stos
jle
in
div
cmp
xor
mov
cwtl
sti
les
data16
aad
sahf
stos
push
scas
fisttps
daa
push
inc
fwait
js
and
iret
faddl
fiadds
mov
mov
out
aas
aam
jle
mov
dec
ret
add
xor
aaa
data16
xor
stos
and
test
mov
out
repz
nop
lea
jmp
data16
sbb
shrl
gs
cmp
je
sub
jmp
inc
lods
mov
sub
add
ja
push
roll
jo
jmp
scas
inc
bound
inc
pop
je
das
xchg
jl
xlat
jnp
push
rcrl
stos
dec
inc
cs
outsb
xor
and
test
lret
pop
add
lret
inc
adc
data16
pop
cmp
mov
mov
pop
push
xor
ja
fs
insb
jno
leave
xchg
int
hlt
inc
repz
ret
adc
call
lods
jg
in
sarb
fsubrl
sbb
mov
test
adc
fs
mov
das
outsb
out
sub
xchg
movsb
in
dec
ret
sarb
xchg
inc
inc
mov
push
jbe
into
int
ja
inc
jnp
in
mov
imul
sbb
or
or
pop
jmp
fsubr
movsb
inc
lret
and
xchg
push
flds
mov
aas
notl
add
inc
mov
out
dec
push
xor
jne
pop
in
push
jae
push
pop
in
and
xchg
aad
mov
pop
pop
or
dec
lock
lods
outsl
inc
jp
loopne
push
xor
mov
iret
out
ret
jl
imul
gs
pusha
xchg
leave
test
or
orl
mov
mov
stos
push
add
adcl
bound
lods
lods
test
push
inc
and
loop
add
xor
inc
call
sbb
inc
js
std
jp
lock
lret
fwait
arpl
mov
faddp
cltd
lcall
add
adc
iret
adc
and
int
xchg
decl
ret
push
fs
fnstcw
nop
push
arpl
fstpt
test
dec
inc
test
xchg
and
xchg
ret
xchg
pop
lock
mov
jo
stos
jo
mull
or
fdivs
xor
mov
mov
in
stc
outsb
clc
repnz
jmp
dec
xor
repz
pop
push
pop
and
lods
fwait
xchg
fcomps
popf
cmp
mov
test
mov
sbb
jbe
sbb
fnsave
mov
pop
jmp
popf
xchg
shll
sbb
in
por
lods
es
pop
dec
int3
out
jmp
adc
mov
mov
adc
jnp
xchg
inc
mov
mov
decb
pop
ret
adc
cmp
mov
pop
cwtl
add
addr16
mov
pop
xor
fwait
loopne
pop
movl
push
mov
jns
or
sahf
inc
jo
fsts
outsl
mov
sbb
loop
cltd
out
cmp
ds
pop
dec
add
pop
push
movsb
imul
in
and
mov
loopne
rorl
decb
ret
cwtl
fisubs
fcoms
mov
mov
sbb
mulb
mov
pop
dec
fdivrs
mov
mov
mov
outsl
mov
cmp
mov
nop
cmpsb
aam
push
jge
jl
cmpsl
aam
adc
push
or
or
lods
sub
mov
mov
fidivrs
inc
aas
dec
add
out
add
enter
insb
pop
jecxz
push
cmp
mov
fstl
aaa
fcmove
sbb
adc
jge
arpl
xchg
pop
add
dec
mov
xchg
insl
add
jecxz
insl
fimull
call
mov
cwtl
aas
ljmp
cltd
jno
mov
mov
inc
pusha
and
mov
jae
mov
movsb
mov
cltd
into
popf
aad
sub
mov
dec
sbb
inc
jb
outsb
and
or
xor
shlb
lea
mov
push
jle
sub
jb
xor
add
pop
int
hlt
daa
test
dec
sbb
aas
xor
jo
add
mov
jge
jge
add
je
push
push
fists
xchg
nop
inc
xlat
jmp
and
fcomp
xor
movsb
repz
test
std
fcomps
outsb
in
mov
fdivr
cmpb
popa
cmp
mov
mov
xchg
ret
jge
push
sbb
aaa
popf
sub
not
and
cmpl
pop
mov
test
lock
hlt
outsb
imul
pusha
mov
mov
shl
cmpsb
cmpsl
mov
mov
xor
cmp
lahf
fisttpl
sbb
fcomps
jno
popf
push
stc
scas
gs
sbb
push
sbb
shll
fistpll
fildl
push
icebp
jns
or
stos
push
icebp
addr16
loop
jle
stc
ror
shlb
bnd
in
lds
js
lahf
idivl
pop
jp
mov
mov
xor
adc
cmpsl
repnz
mov
xor
mov
cmp
xchg
adc
mov
test
ljmp
call
stc
jnp
cli
ds
dec
mov
lods
cwtl
add
in
rcll
jmp
xchg
cmpsl
cmp
cmpsb
cmp
data16
push
outsb
in
lcall
fstl
push
dec
or
fbld
js
or
pop
push
adc
stos
sub
adc
push
cmpsl
lds
sbb
pop
jae
fdivs
pop
jmp
mov
cmc
cmp
xor
sarb
lret
fstl
nop
ljmp
mov
adc
push
in
cltd
gs
pop
cld
sub
push
add
add
jp
jp
adc
add
or
push
pop
out
push
sub
loope
and
xlat
outsl
popa
les
arpl
or
lea
out
arpl
enter
loop
pop
jae
lret
cmp
mov
inc
push
leave
out
sub
icebp
add
push
and
js
and
or
nop
lahf
aaa
aam
icebp
inc
and
out
dec
enter
push
addr16
dec
enter
add
cmp
sub
ret
jp
fs
sti
mov
aad
xchg
xor
movsb
in
sbb
and
das
lock
sub
mov
and
loopne
cwtl
sbb
and
lahf
push
popf
pop
mov
out
push
shll
adc
mov
outsb
pop
jo
push
sub
push
out
xor
leave
sub
out
jecxz
sbb
jnp
and
and
cmp
jp
and
xchg
in
sub
sub
pop
add
dec
lret
sub
jp
xor
test
shl
das
std
or
shl
xchg
jo
mov
xchg
out
cmpb
aaa
and
je
add
pavgb
sbb
stc
xchg
mov
xor
mov
iret
dec
mov
ja
ret
ret
out
in
dec
sub
or
test
popf
pop
jp
call
or
fmull
sbb
and
gs
inc
lahf
lahf
je
idivb
imul
in
push
inc
mov
jle
and
aad
loope
jg
dec
jne
mov
popf
xor
mov
into
jp
inc
push
loope
xchg
dec
sub
data16
mov
pop
cmp
cmp
sub
push
push
into
insb
and
pop
pop
clc
ja
and
andb
jae
pop
gs
pop
push
mov
inc
dec
cmp
xchg
sbb
mulps
or
dec
incb
repnz
pop
rcll
fimull
mov
shll
sub
imul
dec
add
leave
cmp
lock
andl
ja
pop
dec
xor
cmp
loope
mov
add
ljmp
rcl
out
push
mov
inc
jno
leave
add
cmp
call
aam
add
stos
dec
outsl
or
bound
and
jae
mov
xchg
sbb
aas
stos
or
lea
xchg
int3
shll
cs
in
cli
push
pop
in
ds
in
movb
movsl
into
cmc
lock
mov
lea
dec
and
icebp
loopne
mov
imull
sbb
lea
out
or
out
xchg
cmp
test
std
push
cmpsl
sub
icebp
ja
mov
imul
cmc
outsb
mov
outsl
cmp
xor
mov
adc
movsw
jno
or
sbbb
dec
int3
je
and
pusha
sbb
imul
sbb
or
fdivp
inc
ljmpw
xor
fldt
sti
rol
jge
xor
stos
test
fidivs
push
mov
frstors
in
gs
ret
cmc
mulb
xchg
or
xor
mov
test
stc
cs
xor
pop
adc
pop
or
fmull
aad
cmc
inc
mov
mov
jl
icebp
jo
test
jmp
cmp
loope
add
add
fdivl
push
xor
xor
imul
xchg
dec
mov
hlt
add
mov
ret
xchg
mov
cmpsb
mov
mov
dec
sub
mov
inc
pop
cmpsb
adc
popf
push
adc
rcr
pop
mov
leave
test
mov
xchg
sbb
xchg
xchg
pop
sub
data16
fs
sub
push
imul
in
push
testb
fistpl
jmp
fwait
and
cmpsb
cli
xor
js
rorl
and
rcrl
jnp
fsubrl
ret
pop
fisttps
cmpb
fs
push
mov
add
push
je
inc
xor
mov
lods
movsb
andb
pop
outsb
enter
mov
rolb
inc
cmp
jne
xor
dec
loope
add
sub
mov
adc
sub
mov
jo
sub
rol
stos
adc
arpl
in
loopne
xorb
cmp
andl
fsubrs
fistps
popf
inc
fs
sbb
sub
push
ret
mov
xchg
rcll
aam
hlt
icebp
push
loopne
mov
push
sbb
xchg
add
into
dec
push
jo
sti
les
mov
cmpb
mov
cmp
xor
arpl
sub
sub
push
fdivrs
add
push
pop
scas
enter
pop
adc
mov
insb
mov
outsl
fadds
or
cmp
lea
and
fsubrs
lds
inc
and
loop
sti
jne
cmp
add
mov
pop
nop
sub
int3
lods
pop
push
js
dec
xchg
jnp
pop
or
sbb
inc
pop
pop
ror
into
xchg
fidivl
loopne,pt
sbb
stos
sahf
jno
pop
push
cmp
mov
leave
push
xchg
cmpsb
shlw
jns
leave
sti
push
inc
sbb
add
and
add
pop
lcall
dec
cmp
xor
xchg
js
outsb
idivl
lods
loop
xchg
xor
xchg
lods
jne
xor
dec
mov
or
adcl
fidivs
add
xor
mov
jno
or
adc
and
nop
xchg
add
icebp
jg
cltd
notb
add
popf
push
cmp
out
mov
push
pop
push
or
scas
shll
ljmp
popf
mov
adc
flds
in
cltd
fsubrl
aas
movsb
adc
mov
push
mov
mov
test
ret
sbb
jmp
cs
lret
lods
inc
mov
incl
les
sarb
jge
fldenv
scas
pop
push
fld
pop
push
mov
out
xchg
adc
sub
pop
push
ret
jns
sarl
xor
or
xchg
push
push
sub
dec
pop
sub
or
fwait
inc
loop
rcr
and
shlb
mov
outsl
int
ds
ret
cmp
jbe
mov
je
aaa
cmp
int
lahf
push
pop
dec
cmp
jbe
cld
dec
gs
push
ja
loop
push
sub
outsl
test
dec
jp
inc
cltd
mov
pop
stos
or
das
or
pop
cmp
inc
push
sub
xor
lcall
pop
rcrl
sbb
fldenv
dec
div
push
add
push
fstpl
sarb
mov
push
and
adc
js
jne
xchg
mov
int
inc
fldenv
popf
sbb
mov
and
fwait
xor
and
push
pop
lods
and
inc
mov
xchg
and
cmc
pusha
sub
xor
sahf
jo
and
mov
xchg
or
sahf
in
shr
and
add
daa
dec
push
shlb
add
out
cmpsl
add
push
jne
sub
jb
bnd
gs
pop
js
inc
cltd
daa
jne
daa
stos
and
in
sub
pop
adc
push
nop
mov
jl
idivl
push
test
in
loope
ljmp
adc
adc
push
push
push
push
xor
and
cmp
int
sbb
inc
sbb
and
stos
jp
jns
das
mov
leave
mov
push
mov
jp
aas
in
mov
xchg
jmp
faddl
sub
inc
mov
cmp
lea
mov
jle
fwait
dec
addl
jecxz
fidivs
cmpsb
xchg
lods
shlb
or
lcall
mov
xchg
or
movsl
xchg
popa
xchg
popf
and
frstor
lcall
mov
add
mov
pop
fidivrs
test
lds
mov
jns
and
mov
notl
jbe
add
pop
push
inc
adc
gs
jmp
jp
push
push
mov
les
push
das
testl
test
push
fimull
and
xchg
sbbl
mov
pop
rorl
cltd
cs
pop
mov
shlb
mov
mov
pop
in
adc
cmp
jle
fxch
pushf
sub
xor
inc
lret
lods
das
pop
fimull
jno
pop
jae
lahf
or
mov
dec
lds
out
mov
jmp
cmp
add
sub
sbb
shll
add
or
sbb
int3
mov
push
stos
rolb
xchg
fs
into
aam
lock
xchg
nop
pop
mov
pusha
mov
outsb
mov
pop
xchg
imul
jo
adc
lahf
and
pop
das
test
lds
pop
jg
out
xor
mov
ljmp
out
or
jbe
std
movsb
cltd
jae
sbb
adc
cltd
cmp
cmp
stos
sahf
fidivrl
push
inc
js
or
stos
adcl
lock
pushf
and
in
jns
cmp
fiadds
mov
mov
mov
testb
dec
adc
xchg
xor
sti
xor
or
or
mov
mov
adc
outsb
inc
sbb
movsb
xorb
xchg
add
aaa
pop
xor
push
jno
xor
dec
sub
and
les
fsubp
jg
pop
push
xor
jne
lock
stc
pushf
mov
fcom
insb
pop
lret
iret
jl
mov
rclb
add
cld
lret
jbe
xchg
cmpsb
fstps
repnz
and
lret
ret
stos
push
leave
adc
shll
inc
in
test
shrb
fldl
jp
adc
pop
pop
add
repz
xchg
lods
xchg
clc
pop
jae
xchg
cli
push
adc
popf
sbb
pop
rcll
cs
xlat
adc
imul
fcom
or
not
das
xchg
pop
xchg
and
mov
out
sub
or
pop
mov
mov
mov
in
pop
or
sbb
push
inc
sbb
push
lods
mov
sti
rol
cmpsl
xchg
mov
and
test
mov
adc
or
arpl
sub
repnz
sub
cmp
rorb
jo
sub
ret
sub
sub
ds
and
cmpsb
push
cmp
cs
sbb
push
fimuls
imul
fcompl
pop
out
inc
mov
xor
mov
stc
nop
and
shr
add
sub
mov
jmp
loope
xchg
mov
mov
dec
jle
or
imul
push
sbb
mov
mov
pop
sub
inc
mov
add
and
mov
stc
xlat
push
jg
adcl
adc
daa
pop
cmc
xchg
mov
pop
outsl
les
sbb
movsl
xlat
fcmovbe
icebp
sbb
jle
jg
out
mov
cli
loopne
lds
mov
mov
add
push
lock
ret
fwait
sub
adcl
sbbl
xchg
sahf
ljmp
pop
cmp
in
mov
inc
call
xchg
lds
jnp
xor
sub
lret
and
lret
and
movsb
push
stos
add
cwtl
and
int
lahf
shl
es
sbb
sbb
sub
addl
dec
xchg
mov
pushf
cmc
and
xchg
push
dec
mov
xlat
lods
mov
adc
mov
jnp
lret
xchg
jbe
in
and
adc
stc
push
mov
xchg
cmpsb
pop
repnz
lods
cltd
inc
fildll
rorb
sahf
xchg
and
xchg
fsubl
mov
jbe
sbb
adc
jmp
movsb
sbb
ja
mov
push
add
in
popf
and
jmp
push
inc
addb
pop
and
ds
call
lea
mov
push
and
gs
scas
test
loope
repnz
adc
jne
movsl
cwtl
ds
jns
fidivrl
fcompl
and
dec
repnz
xor
enter
dec
push
xlat
jae
mov
cmp
lds
movsb
and
jb
xor
bound
dec
push
cltd
inc
aaa
add
adc
pop
xchg
jmp
les
in
mov
setns
popa
and
popf
xchg
xchg
cwtl
gs
pop
rclb
cbtw
or
xor
or
pushf
int3
stc
in
fisubrl
cwtl
das
xor
cltd
sub
jecxz
loopne
andb
aaa
cltd
out
push
pop
cmc
mov
cmp
add
lcall
icebp
add
jl
into
cmp
and
in
push
loope
fwait
mov
mov
test
sbb
xor
mov
or
out
jnp
shlb
jp
hlt
lfs
insl
sbb
xor
cwtl
mov
js
insb
std
pop
jmp
inc
mov
xorl
test
pushf
xor
enter
lret
pop
test
jne
cld
cmpsl
fisttpll
dec
add
aam
idivl
data16
mov
and
cmp
or
dec
and
stos
jne
cmc
xchg
xchg
jg
sub
cmpsl
ljmp
xor
push
cltd
mov
sbbb
mov
push
adc
and
call
mov
fcompl
push
adc
or
imul
cmp
aaa
cmc
rcll
add
rep
pop
mov
mov
mov
leave
xlat
or
leave
add
mov
adc
inc
mov
push
arpl
pop
fidivl
dec
push
adc
adc
mov
out
cli
mov
sub
mov
add
xchg
dec
cmp
sub
cmp
stc
add
dec
mov
cmp
frstor
or
xor
loopne
fistpll
push
pop
test
sub
mov
mul
loop
pop
sbb
pop
mov
imul
aam
lock
shrl
mov
out
in
es
and
daa
mov
add
push
aam
jno
mov
sub
mov
sbb
insl
cmp
push
in
insb
pop
lods
mov
ss
mov
sub
push
mov
loopne
jg
loopne
mov
sub
in
xlat
and
test
or
mov
in
out
inc
mov
fadds
xchg
inc
xchg
mov
pop
sbb
cltd
mov
imul
cwtl
cmp
leave
push
mov
arpl
push
sub
push
cmpsl
loope
sbb
sbb
mov
dec
out
push
jno
push
mov
mov
aas
and
test
dec
imul
inc
sub
mov
call
out
mov
scas
arpl
dec
push
addr16
xchg
inc
aas
cmp
call
jne
div
cmc
xor
jle
dec
js
mov
dec
lock
xchg
cmpsl
ja
aad
daa
add
or
pop
in
negb
push
outsl
int3
out
adcl
scas
outsb
mov
mov
sub
or
push
jl
cmp
hlt
jne
pusha
and
ret
rclb
sti
mov
jmp
push
push
pushf
imul
sti
aas
xor
mov
push
pop
cwtl
fildl
push
stos
pop
iret
mov
imul
psubd
pop
flds
popf
mov
xchg
adc
faddl
push
jle
pop
and
adc
jb
cld
adc
test
das
fsubr
int3
ss
pop
dec
repnz
xor
fwait
and
inc
fimuls
dec
popa
jno
and
arpl
mov
das
jle
inc
dec
cld
popa
test
aam
lret
movsb
jle
ret
mov
rol
ret
inc
xchg
int
cld
mov
jb
xchg
pop
lcall
subl
dec
test
dec
pop
push
pushf
fcmovnu
shll
das
call
add
mov
js
mov
dec
scas
sbb
cmp
mov
andb
mov
jmp
lock
add
mov
int
xor
add
mov
rolb
sahf
xor
pop
loop
cld
dec
or
or
mov
cltd
xchg
inc
imull
jnp
xchg
movsb
sbb
and
inc
xlat
outsb
jae
lret
and
out
movsb
lret
shr
lock
aaa
pop
pop
or
adc
loopne
cmp
es
add
test
dec
sub
pop
aad
xchg
mov
or
pop
ret
adc
cmp
and
aas
or
nop
sub
fdivr
ds
cmp
cmp
mov
lret
divb
or
subb
imul
and
or
call
ja
shlb
jl
stc
fistps
fstpl
mov
rorl
inc
pop
adc
dec
std
lock
pusha
aam
cltd
mov
into
int3
adc
xend
aam
imul
scas
cwtl
mov
stc
push
mov
jo
or
shrb
aaa
inc
add
cmc
mov
cmp
loope
add
jnp
stc
jp
pusha
push
xchg
arpl
mov
pop
or
or
adc
push
lock
sub
or
xlat
out
xchg
lods
sti
ljmp
in
inc
sub
lcall
fwait
or
pop
xchg
rcll
int3
mov
jmp
rcrb
ret
into
gs
xchg
jb
int3
add
cwtl
adc
das
adc
xor
jp
call
or
arpl
or
xchg
aaa
mov
jb
mov
inc
push
mov
cmp
cmpsb
sahf
adc
movsb
stos
lcall
sub
clc
aaa
xchg
push
testb
inc
in
mov
mov
jg
lahf
sbb
cmp
add
insl
mov
dec
jnp
xor
outsl
insl
nop
clc
lcall
aaa
mov
das
jg
and
sar
das
sbb
jne
xchg
xchg
jno
divl
xchg
adc
mov
jl
lock
test
and
jmp
xor
mov
add
dec
lods
xchg
shlb
nopl
mov
loop
jg
inc
or
frstor
sbbl
in
mov
lods
xchg
loop
aaa
addr16
cmpsb
ficomps
mov
inc
je
insb
pop
mov
xor
or
xchg
lds
and
clc
cmp
ss
or
scas
sbb
xchg
add
fmull
jne
push
mov
pop
pop
dec
out
mov
insb
dec
cltd
dec
data16
icebp
mov
gs
cmp
and
mov
in
out
mov
loop
ret
repz
lea
mov
hlt
mov
ds
iret
mov
jle
cli
push
das
or
bound
std
add
fcoml
push
sti
rclb
jecxz
outsl
add
jae
pop
addr16
jp
jl
cmp
int
popf
fldenv
dec
loope
mov
pop
cltd
outsl
ret
jecxz
lods
addr16
mov
adc
jle
push
insl
add
roll
mov
mov
inc
pop
and
mov
fs
mov
sub
xorl
rorl
mov
cmp
mov
pop
mov
imul
jle
repz
xor
enter
inc
jbe
lds
fisttps
aam
jmp
mov
fdivs
ficomps
jle
xorl
dec
outsl
add
inc
xchg
je
call
mov
inc
or
cli
or
dec
push
mov
fs
push
push
cwtl
pop
jae
dec
fisubrs
aam
pop
out
ror
push
or
push
xor
pop
mov
testl
sbbl
push
push
cmp
or
mov
jne
lahf
nop
test
mov
dec
dec
mov
fists
int3
fadds
dec
arpl
sub
std
daa
adc
ret
sub
out
stos
cmp
or
lods
orl
mov
xor
stc
adc
adc
xchg
inc
inc
pop
notl
roll
shlb
xchg
lock
jle
testb
in
out
mov
push
data16
dec
pop
and
adc
jbe
push
mov
push
dec
xchg
out
cmpl
mov
mov
scas
add
cmp
xchg
movsb
outsl
ds
and
pop
push
enter
or
jle
and
pop
clc
pop
jecxz
leave
inc
rorl
dec
es
sbb
cld
iret
lret
sbbb
sbbb
pop
sub
lcall
pop
jle
xchg
loope
sbb
or
inc
mov
in
xor
jp
js
js
repnz
stos
aas
lock
sbb
sbb
pop
icebp
inc
sub
mov
cmp
jp
insl
cmp
xchg
aam
xchg
or
mov
andl
das
push
jmp
and
not
ss
sar
mov
jl
mov
sub
bound
inc
dec
aas
pop
pushf
call
test
dec
test
mov
adc
adc
mov
das
repz
imul
add
enter
cmpsl
out
xchg
sti
cmp
sub
mov
scas
fimuls
pop
loop
lods
inc
jmp
mov
aas
shll
daa
sbb
sub
test
fdivl
dec
mov
pushf
push
lcall
andl
mov
and
xchg
cmp
sahf
mov
in
sbb
dec
icebp
adc
jge
jae
cwtl
rcrb
ret
hlt
pop
aam
mov
or
sti
adc
cmpsb
in
shlb
das
inc
mov
pushf
sqrtps
xchg
lcall
pop
imul
stos
push
cmp
aam
cmpl
dec
mov
sub
cmp
mov
inc
lock
push
jmp
mov
int
data16
lret
mov
fists
mov
cltd
and
xchg
adc
jbe
cmp
dec
in
testb
xor
mov
les
iret
jb
xor
roll
jne
sub
aaa
insb
and
mov
imul
xchg
cld
cmp
adc
mov
mov
std
imul
add
testb
jp
jns
mov
or
xlat
sub
scas
gs
les
mov
je
cmp
call
jg
inc
stos
mov
or
push
pop
jnp
adc
sbb
imulb
mov
fwait
pop
popf
push
jno
inc
test
out
add
mov
mov
out
xlat
xchg
jg
add
out
and
aam
mov
adc
hlt
sub
mov
sti
inc
sub
push
dec
rorb
stos
lock
call
jne
inc
shlb
jb
mov
jmp
jne
and
mov
das
incl
adc
fwait
mov
test
faddl
pop
int
ret
cmpsl
jge
inc
and
pop
aaa
xor
dec
test
imul
inc
xor
xor
sub
popf
incl
add
rclb
mov
and
jle
popf
enter
or
jno
xor
addr16
sub
fsubl
cmp
sbb
add
stc
aas
out
int
pop
fdivp
mov
xchg
jle
ret
ror
fistl
adcb
popf
notl
cmpsl
adc
xor
es
fldt
lock
sub
out
pop
enter
xchg
mov
sub
test
outsb
fildl
pushf
popa
inc
sbb
psrld
sub
imul
sbbb
jle
ss
sub
stc
mov
sub
xchg
imul
imul
jo
add
inc
lods
cld
ljmp
pushf
or
pop
in
push
pop
add
ljmp
call
popf
xlat
cmpsl
ljmp
sbb
insb
sbb
les
push
insl
mov
mov
add
in
sub
lahf
lds
repnz
jl
mov
bound
pop
sarb
pusha
jecxz
mov
push
adc
inc
adc
inc
cli
daa
pop
je
andl
mov
inc
xchg
fs
stc
lahf
mov
push
inc
mov
xor
outsb
loopne
and
in
mov
ja
in
cmc
sub
mov
jno
insl
shlb
cmp
mov
dec
je
imul
pop
arpl
cmp
leave
or
ljmp
nop
mov
pop
jno
inc
cs
sbb
mov
and
movsb
or
fsubrl
mov
push
ds
cwtl
pushf
aaa
mov
lods
inc
in
jno
mov
add
das
and
xchg
xchg
in
insb
jg
push
jbe
jle
cltd
jnp
dec
dec
imul
in
aam
jcxz
in
inc
sahf
cld
mov
jne
xchg
mov
pop
cmp
pop
call
cs
jecxz
cmp
in
adc
xchg
cld
and
and
cmpsb
xchg
mov
fimull
dec
xor
clc
mov
add
psubb
loope
mov
int
test
into
aad
sbb
in
pop
inc
std
and
fadds
pop
out
cmp
cmp
add
adc
iret
dec
out
push
pop
cmp
push
adc
mov
mov
jge
cmp
pop
int
leave
repnz
lods
sarl
or
mov
mov
mov
call
jge
test
xor
lods
repz
inc
adc
push
push
scas
add
mov
inc
dec
add
adc
test
xchg
xor
sbb
xor
mov
xor
stos
mov
mov
add
vpaddb
lods
mov
adc
inc
xchg
add
xor
iret
imul
and
cmc
addr16
push
push
pusha
imul
xchg
popa
fldcw
cs
or
and
inc
fcmove
popf
cmp
sbb
mov
lods
pop
popf
push
mov
enter
inc
or
test
mov
and
push
or
imul
into
pop
dec
lret
cld
iret
cltd
inc
push
test
mov
inc
pop
mov
sub
xor
push
sub
das
jno
push
sahf
jbe
daa
mov
es
xchg
add
mov
jns
inc
imulb
or
cmpl
add
nop
sub
mulb
addr16
scas
mov
mov
es
in
cmpl
sub
rcrb
pushaw
push
lret
dec
push
or
repz
inc
imul
inc
js
sub
and
xor
dec
sbb
sub
int3
jecxz
ret
pop
sub
ds
cwtl
sbb
cmp
pop
pop
or
cmp
mov
outsl
movsl
xchg
loopne
lcall
imul
movsb
cmp
popa
test
das
lods
stc
ss
data16
into
cmc
aas
mov
cmp
mov
mov
push
sahf
andl
jae
stc
xor
aaa
arpl
sub
clc
mov
pop
jb
pushf
loopne
ss
mov
int3
mov
addr16
icebp
mov
push
mov
sahf
pop
loopne
cmp
iret
mov
mov
aam
jae
fisubrl
into
rcrb
dec
xlat
sub
test
cmp
pop
mov
dec
pop
imulb
inc
mov
ret
or
jmp
and
sub
xor
dec
ret
lcall
sub
cmp
cs
int
loope
xchg
add
mov
lret
mov
mov
popa
fsubl
aam
add
adc
mov
pop
adc
stos
lret
out
stos
jmp
cwtl
add
inc
out
sahf
roll
inc
dec
cmp
pop
rcll
addr16
lock
leave
dec
and
ret
mov
cli
push
loopne
insb
iret
lock
aam
mov
mov
lods
lock
xchg
mov
push
push
pop
jns
and
sub
rclb
mov
lock
jo
push
ds
adc
pop
cmp
or
repnz
stc
stos
xchg
xor
es
mov
jecxz
or
mov
dec
inc
pushf
call
cli
adc
mov
mov
ret
bound
in
jnp
sbb
lcall
imul
sub
pusha
pop
and
dec
leave
hlt
daa
data16
adc
dec
mov
inc
in
test
dec
inc
mov
outsl
jo
test
dec
test
push
jbe
mov
add
hlt
icebp
mov
or
xor
sti
add
jb
popf
sbb
dec
mov
movsl
pop
dec
adc
lods
mov
cli
out
aaa
adc
lret
aad
or
aas
mov
fidivrs
xchg
fimuls
pop
aaa
idivl
xchg
fsubr
push
cwtl
xor
pop
inc
cwtl
lock
adc
lret
push
ss
mov
mov
bound
bound
push
in
sbb
js
std
outsb
popf
test
movsb
ja
in
imul
mov
sbb
hlt
outsb
mov
xchg
imul
xlat
dec
imul
pusha
sbb
pop
loop
notb
imull
ret
out
notb
out
ds
and
sahf
sub
out
push
or
ljmp
data16
xor
xchg
push
add
inc
jl
push
das
sti
repnz
push
jns
es
scas
xchg
jns
cmp
fsqrt
fistpl
dec
ss
int
aas
add
clc
or
mov
cmpsl
lods
mov
jp
movsb
in
sbb
cmc
cmp
hlt
loope
xor
fistps
mov
lea
fsubl
es
adc
xor
adc
test
xor
movb
movsl
xor
bound
push
cmp
mov
test
stos
cmc
mov
inc
fisubl
clc
xor
inc
pop
lret
lret
mov
pop
loope
loopne
movsl
xor
ljmp
jne
fistl
fwait
sub
outsl
pop
mov
inc
pop
insl
sarl
jp
add
pop
add
lret
and
stos
lahf
xchg
pop
dec
dec
or
cs
xchg
sub
push
inc
lahf
push
adc
sub
mov
stc
jmp
inc
pop
fs
xor
lods
or
mov
sbb
aad
and
jge
adc
pop
js
ret
mov
adc
call
divb
sbb
clc
dec
mov
xchg
sub
and
cmp
jle
rclb
pop
xchg
jecxz
repz
cmp
fisttpl
dec
and
mov
push
xor
dec
shll
or
mov
mov
mov
andb
cwtl
mov
les
leave
sbb
lock
xor
sbb
scas
xor
aad
lcall
sbb
cmpsb
js
jle
add
cmc
push
add
sbb
pushf
push
popa
lret
int
push
push
into
lea
jg
aad
sub
flds
xchg
pop
push
pop
je
and
scas
mov
cltd
ljmp
mov
std
cmp
mov
or
in
mov
and
push
mov
jmp
loope
mov
push
xchg
cmc
inc
xor
aam
adc
in
mov
imul
xchg
scas
push
push
daa
push
mov
jo
dec
out
sbb
jmp
fimull
and
aas
mov
xchg
aam
ja
and
sbb
push
dec
mov
jp
mov
scas
mov
or
icebp
loope
adc
std
cmp
arpl
cmpsl
xor
mov
scas
pop
mov
fists
mov
mov
popa
ffree
test
sbb
adc
lea
push
dec
fistl
xor
out
mov
xchg
or
mov
mov
pop
inc
ds
jl
pushf
fdivrs
jp
fcomps
ljmp
push
jecxz
adc
fcompl
out
mov
dec
push
xchg
push
mov
cmpsb
cli
mov
movsb
xor
daa
pop
push
popf
jle
mov
lods
or
mov
repz
nop
ret
in
pop
add
popf
hlt
loopne
adc
stos
pop
loope
push
xchg
push
xchg
loopne
inc
push
cmp
pop
int
out
dec
mov
mov
mov
jb
jl
and
sbb
jns
scas
and
xor
dec
sub
sarl
imul
outsl
cmp
ss
jno
or
mov
adc
mov
jo
ret
fsub
out
jns
arpl
aas
lods
cmp
xchg
arpl
dec
js
adcl
int3
jnp
jo
lcall
test
lds
sub
inc
es
lret
adc
add
js
inc
gs
xchg
fisubrs
mov
mov
pop
out
mov
xchg
sbb
ss
mov
dec
cmp
jp
iret
jnp
ljmp
pop
push
sub
cli
sahf
push
jb
jmp
xchg
rolb
nop
cmp
cltd
lret
pop
ss
dec
std
sbb
movsl
mov
fiaddl
lret
pop
cmpsb
mull
fldenv
jns
jns
dec
push
pop
test
mov
pop
fstl
mov
bound
adcl
std
dec
stc
dec
jge
xor
andl
les
js,pt
or
stos
lock
sub
jno
data16
sbb
xchg
and
bnd
sub
add
aad
add
test
adc
pop
repz
out
inc
inc
std
dec
mov
subl
add
iret
sbb
adc
adc
movsl
and
mov
sub
jmp
jnp
xchg
jne
sarl
pop
call
xchg
pop
jge
adc
mov
add
mov
mov
push
add
xchg
fimull
mov
xor
roll
xor
push
push
fisttps
lods
test
pop
mov
xchg
adcb
jo
cmp
daa
lret
aad
add
negb
push
aas
decl
jecxz
and
lea
xchg
scas
repnz
rorl
pop
mov
cltd
mov
sub
cmp
in
repnz
jne
mov
sbb
lahf
hlt
test
mov
cs
outsb
xchg
or
cmpsb
out
or
mov
mov
and
jp
loop
or
sbb
mov
sub
add
and
mov
popa
clc
jl
mov
xchg
negl
and
dec
pop
cmp
aad
cmovb
and
mov
sti
js
enter
push
mov
scas
icebp
mov
insw
xor
pop
lret
sub
push
mov
mov
int3
pop
out
sub
jae
in
dec
sahf
jge
add
pop
xor
jns
mov
xlat
addr16
mov
mov
imul
add
or
sbb
ja
mov
pop
adc
pop
add
popf
jmp
lret
inc
pop
mov
outsl
ja
push
orb
lods
cmp
jbe
test
stos
mov
mov
push
and
mov
pop
out
fisubrs
test
sub
adc
and
sbb
sub
aas
cmp
push
int3
add
dec
jnp
fs
mov
fsubr
popf
addr16
or
sti
mov
clc
pop
mov
dec
mov
cmp
mov
sub
mov
leave
sbb
clc
out
adc
xchg
shll
sub
subl
sbb
std
jb
add
lret
pop
roll
daa
loope
in
jae
xor
ja
mov
or
lock
and
aad
and
and
mov
outsl
ficompl
add
cmp
adc
xlat
mov
out
in
add
xchg
dec
ror
aaa
stc
or
fsubrl
int3
loope
adc
je
test
leave
sbb
cmp
dec
popf
fsts
and
cmp
popf
std
mov
fldt
push
add
mov
test
pop
mov
adc
sbb
repz
ret
add
addr16
xchg
mov
lret
cmp
ljmp
push
outsl
jae
mov
jb
push
dec
sbb
push
jno
cli
loop
dec
popf
push
mov
in
lret
je
fiaddl
mov
das
clc
fsubr
push
jg
mov
in
mov
mov
xor
dec
je
sbb
fstpl
push
jmp
hlt
in
lahf
call
mov
scas
sbb
sbb
mov
push
or
push
xor
sbb
dec
aaa
outsl
sub
push
inc
sub
xchg
mov
cmp
xor
mov
div
rorl
lcall
add
fs
mov
cwtl
push
push
lods
sub
ljmp
clc
push
jge
sub
add
mov
aaa
leave
or
clc
push
or
mov
das
outsl
pop
je
aas
or
stos
cwtl
pop
xchg
mov
mov
and
sbb
mov
ret
and
out
arpl
xchg
js
jp
lret
jbe
nop
bound
or
xchg
stc
adc
push
push
adc
pop
inc
mov
scas
inc
inc
mov
icebp
leave
dec
cmc
mov
mov
outsb
cmp
imul
dec
lret
pusha
addr16
popf
mov
mov
aaa
shrl
ja
idivl
mov
xor
loope
pushf
jge
xor
push
or
insb
push
ret
jns
or
mov
pop
je
cmp
jmp
pop
aas
pusha
mov
pop
fistps
aad
stc
fcomps
out
mov
mov
je
pop
mov
and
cmp
cmp
dec
push
ja
in
rcrb
push
push
rorl
mov
hlt
xor
jge
add
aad
adc
lock
push
pop
push
mov
andb
dec
fdivp
and
inc
fdivrs
mov
xchg
or
sbb
pop
pop
xlat
sarb
jmp
jecxz
fwait
lret
jl
mov
xor
ljmp
lock
scas
hlt
mov
sbb
popa
fs
in
scas
adc
or
jge
xchg
bnd
mov
dec
pop
sbb
jl
and
movb
test
and
mov
or
push
leave
leave
cmp
into
stos
xor
stc
add
sti
aad
nop
call
cltd
ljmp
mov
dec
pusha
hlt
mov
out
sub
loop
ss
cmp
test
xor
xchg
arpl
dec
jo
sub
dec
xor
or
cmp
push
mov
jae
add
pop
imul
popf
inc
je
cs
adcl
push
xchg
iret
xor
das
push
mov
jl
sub
mov
mov
insl
out
ja
pop
aad
sub
pop
xchg
mov
lock
cmp
ljmp
in
dec
stos
clc
std
je
shrb
xchg
mov
pop
cwtl
mov
clc
test
push
jecxz
adc
cld
xlat
pop
and
mov
mov
stc
aad
mov
mov
xchg
test
cltd
inc
or
xor
mov
sub
xor
mov
pop
inc
shrb
outsb
mov
jecxz
movsb
unpckhps
addr16
fs
sub
cmpsl
das
mov
inc
xlat
mov
jl
add
pop
add
pop
sub
js
cmp
jo
xor
cmp
subl
mov
jne
insl
add
and
dec
push
cmp
lods
lods
or
xlat
sti
mov
fs
inc
lods
xchg
adc
pop
movsb
xor
popa
dec
ret
jl
enter
andl
mov
sbb
add
and
and
mov
imul
jp
scas
sbb
cltd
push
xlat
lods
sbb
daa
mov
adc
ljmp
sbb
mov
add
out
ss
jge
push
jno
ljmp
ficoms
aas
popf
inc
lret
pusha
sub
mov
mov
lods
lock
ja
adc
adc
dec
pop
mov
push
stos
jmp
shlb
lret
jae
rcr
sbb
lret
inc
adc
fsub
xlat
add
lock
aam
ljmp
int3
jae
sub
jae
jo
jmp
ret
cmp
lret
test
dec
mov
dec
xlat
mov
mov
pop
sub
add
sar
in
out
bound
push
in
jns
sarl
sbb
mov
std
pop
dec
pop
rcr
lods
rcrb
sub
sbb
data16
pop
sbb
pop
out
push
adc
jge
xlat
stos
aas
sub
in
roll
adc
cmpl
mov
aas
mov
mov
test
and
pop
jnp
in
pushw
mov
daa
int3
pop
dec
lea
sarb
scas
fistpll
mov
and
mov
pop
mov
mov
mov
fsubs
xchg
mov
pop
popa
in
jne
loope
inc
test
std
inc
mov
pop
lret
jg
push
scas
lahf
jl
push
jns
cmpsw
or
js
pop
lock
rcr
fnop
xchg
jge
call
sahf
mov
add
sbb
xchg
int3
sub
inc
cmp
movsb
adc
sbb
sub
dec
jnp
xchg
in
mov
shrl
jge
test
dec
and
jns
mov
test
dec
popa
cmp
add
cmpsl
sub
xchg
pop
push
outsl
cmpb
push
cmpb
mov
lds
jb
orb
shll
lods
stos
add
popa
mov
sbb
fsubs
cmp
test
add
insl
jecxz
mov
and
mov
imul
sti
push
call
sub
jo
sub
jmp
pop
loope
jns
or
dec
testb
xchg
sub
jno
arpl
inc
xor
or
jno
test
inc
out
mov
sbb
push
int3
mov
std
es
aaa
loop
adcl
arpl
jp
jns
lea
outsl
enter
adc
repz
mov
cld
test
pushf
repnz
push
lock
iret
js
fwait
sub
les
data16
insl
int
add
mov
rcr
loop
sbb
xchg
out
cmp
pop
fdiv
popf
mov
or
push
or
fs
lock
addr16
mov
movsb
adc
pop
ret
inc
sub
cmp
mov
test
mov
xchg
ss
or
jl
test
shll
lds
daa
mov
lea
ja
xor
popa
orl
jmp
into
sub
shl
mov
sti
cwtl
leave
jae
mov
add
imul
mov
mov
loope
mov
shl
fs
sub
mov
add
dec
pop
mov
icebp
pushf
stos
xlat
fs
aad
cmpsb
dec
pusha
sub
out
xor
lods
aam
lods
mov
pop
fistps
pop
xor
popa
mov
cmpsl
add
cmp
push
pop
mov
insl
loop
rcll
mov
scas
sahf
adc
sub
mov
mov
xchg
cmc
stos
adc
push
push
xor
jno
icebp
scas
dec
xchg
int
and
lds
dec
mov
das
dec
lcall
dec
loop
mov
push
mov
mov
or
ja
mov
push
mov
aam
cs
sbb
loope
cmp
cmpb
int3
sub
jno
cli
push
lcall
mov
imul
rcr
mov
js
jnp
push
insl
out
pop
dec
out
push
lds
divl
in
les
pop
push
push
jecxz
mov
addr16
movsb
fdivl
cmpsl
movsb
rcll
sub
cmp
stos
add
out
jl
xchg
in
je
xchg
mov
sti
or
jle
add
mov
je
xor
repnz
in
jno
mov
mov
xor
stc
ljmp
adc
pop
inc
sbb
icebp
pop
dec
mov
call
out
stc
lahf
cmpsb
pop
pop
fcompl
enter
or
pop
repz
rcrl
mov
cltd
test
shr
inc
inc
lods
gs
push
ja
push
gs
aam
mov
addr16
fistl
cwtl
aaa
lcall
aam
mov
fmull
push
sub
inc
xchg
imul
xchg
sub
mov
cmpsl
cmpl
push
bound
jno
and
stos
jae
cwtl
daa
out
arpl
pop
jp
das
sub
test
imul
std
cmp
lcall
pop
int3
jo
xor
push
add
test
inc
push
inc
stc
scas
fisubrs
pop
add
adc
mov
jnp
and
fistpll
push
mov
dec
mov
loopne
fs
mov
je
sbb
lret
repz
xchg
xchg
fists
dec
das
scas
faddp
imul
iret
jp
sub
insl
fwait
push
int3
cltd
push
orl
mov
imul
inc
popf
std
fbstp
add
jb
pop
xor
frstor
roll
pop
sbb
dec
xchg
mov
ret
xchg
loopne
popf
adc
ret
ds
xor
mov
cmpb
xchg
push
pushf
add
in
or
inc
scas
or
addr16
jns
test
xchg
add
lock
arpl
xor
push
xor
repnz
int3
jmp
mov
lcall
out
inc
aas
iret
loopne
and
rcrb
lods
fidivrl
cmpsb
mov
and
out
popf
stos
add
jne
or
inc
imul
mov
push
adc
and
lcall
call
sarl
jmp
cs
popf
mov
mov
mov
push
lahf
adc
cmp
mov
push
push
repz
cmp
mov
gs
adc
addr16
test
ja
rcrl
les
xor
imul
gs
gs
sub
sub
out
inc
shlb
mov
daa
ss
movhps
lret
out
dec
leave
jmp
cwtl
mov
sub
mov
out
leave
insb
test
add
mov
jl
iret
test
divl
cmpsb
in
sub
gs
insl
fnsave
mov
xchg
inc
mov
call
movsl
aad
sub
inc
leave
cltd
pop
sub
scas
xorl
testb
lods
sbb
jg
mov
mov
decb
dec
mov
dec
popa
lret
xor
pop
xor
and
or
cmpsb
inc
cmp
iret
pop
aad
call
mov
push
push
mov
push
push
push
nop
insb
repnz
arpl
mov
mov
dec
popf
xor
mov
push
inc
jno
ret
jp
or
cmp
mov
fidivrs
in
cld
stc
push
cmp
push
flds
pop
mov
sub
cltd
jge
lea
lret
aaa
aas
out
mov
sub
popa
outsl
jg
mov
cmp
cmp
pop
xchg
pop
scas
cmp
outsl
in
enter
sbb
fidivl
fldln2
mov
jl
adcb
inc
xchg
xchg
push
ret
dec
adc
dec
mov
jl
pop
mov
loopne
pop
push
daa
adc
push
addr16
shr
mov
cmp
add
cld
cmp
test
add
add
iret
jb
cwtl
sub
ja
movsb
or
cltd
cwtl
repz
lock
pop
cmc
iret
aad
xchg
pop
xlat
cltd
dec
jecxz
mov
jns
cmp
ljmp
push
aas
das
fs
sbb
sub
lds
pop
jp
pop
insb
vpmaxsw
addb
mov
xor
mov
pop
push
mov
leave
mov
loop
cmp
fildll
xchg
rcll
dec
dec
mov
sub
adc
lods
mov
push
in
js
dec
pop
jnp
rcl
xor
sbb
and
pop
imul
aad
dec
and
mov
pop
fsts
stc
sbb
inc
je
movsb
imul
pop
sbb
pop
push
lcall
loopne
in
out
mov
js
dec
cmpsb
mov
mov
xchg
xchg
scas
aam
into
push
adc
test
lock
insb
sahf
mov
xor
mov
cwtl
jb
int3
xchg
adc
push
sbb
xor
pop
jmp
xor
or
push
adc
sbb
xor
cli
clc
roll
lea
sbb
pop
adc
cmpsl
ret
call
push
insb
inc
das
fldenv
arpl
inc
add
ljmp
hlt
outsl
int3
adc
and
add
sbb
xchg
movsb
popf
dec
scas
insl
test
cmp
mov
dec
movsb
popf
mov
mov
jno
jae
and
jl
repz
mov
in
dec
add
cmpb
push
rolb
mov
cld
pop
jp
xor
sbb
fnstsw
addr16
cltd
rcrb
sub
pop
mov
xor
add
mov
or
mov
fsubr
jp
into
call
rolb
push
jle
jne
and
notb
pop
mov
movsl
loopne
xchg
repz
or
sub
aas
xchg
inc
mov
mov
cmp
xor
cmpsb
sbb
push
fisubrl
shlb
test
jmp
jae
xor
pop
xlat
mov
push
mov
or
add
mov
setge
sahf
loop
inc
and
xchg
pushf
loopne
mov
jmp
sub
and
out
add
call
cmp
stc
dec
mov
aas
aaa
shll
cld
cli
movsl
mov
xchg
shl
mov
adc
adc
adc
roll
adc
dec
mov
pop
outsb
out
pusha
loop
outsb
lea
sbb
cmp
das
fidivrl
pop
inc
lock
mov
pushf
mov
dec
mov
mov
std
push
sub
mov
subb
xor
jo
test
push
les
pop
xchg
scas
fcmovne
mov
shr
ljmp
data16
cmp
mov
lcall
and
pop
inc
test
pop
into
push
loopne
jge
mov
adc
stos
mov
aas
rcl
int3
into
add
pushf
cltd
adc
stc
sub
test
shr
pop
cmp
mov
pop
pop
xor
pushl
ja
fsubrl
and
mov
cmp
mov
fwait
mov
out
sub
das
xor
add
nop
in
insl
cmc
push
push
dec
xchg
or
adc
xchg
stos
mov
sbb
cmpsl
dec
aaa
loope
mov
or
add
mov
dec
ret
jb
sbb
xor
pusha
outsb
mov
add
add
dec
dec
mov
scas
jo
mov
psraw
push
out
int3
aad
cmpsl
add
mov
jle
int3
pop
xchg
or
mov
out
adc
dec
xchg
xlat
mov
daa
xor
jg
gs
aas
lea
shll
cmpsb
mov
or
add
fcom
mov
aaa
iret
jmp
cwtl
xor
shlb
xchg
and
fs
jp
jg
div
cwtl
out
dec
inc
sub
fstpt
lods
cmp
into
adc
loope
clc
cmp
pusha
test
insl
test
das
add
jns
jle
mov
adc
ja
mov
mov
push
xchg
dec
ja
mov
xchg
mov
cmpsl
sbb
push
outsl
push
inc
fs
lods
stos
or
push
dec
cltd
bound
inc
add
jnp
enter
adc
push
mov
ljmp
adc
xlat
adc
pushf
lahf
repnz
add
add
adc
jae
sti
fs
jno
pop
cli
adc
jno
inc
pushf
add
pop
sbbb
jecxz
es
lahf
jno
push
sbb
fbstp
xor
clc
mov
lea
sub
addr16
scas
or
mov
fnsave
sahf
or
add
out
arpl
insb
mov
or
outsl
daa
push
fdivl
stos
xor
in
and
inc
jge
icebp
push
fsubrl
sbb
push
jnp
fcomp
dec
sti
xor
and
lcall
cmp
out
ljmp
mov
push
lcall
aad
dec
loopne
mov
icebp
imul
mov
dec
mov
mov
lret
or
fs
and
nop
push
out
fsubr
inc
jle
sbb
adc
dec
adc
or
sbb
sbb
ss
cmp
xor
out
ljmp
pushf
mov
lock
add
adc
test
mov
and
inc
xor
stos
nop
xchg
sbb
pop
scas
jge
adc
jmp
loop
jmp
rcl
cmp
out
sbb
xor
sbb
scas
into
xchg
lret
js
or
cmc
fldl
inc
lds
cld
jge
inc
imul
sbb
push
xchg
adc
add
loope
imul
dec
repnz
ret
or
out
push
xchg
xchg
packsswb
int
adc
xor
jp
xorb
aam
cmp
insb
fiaddl
stos
xchg
add
push
lcall
popf
imul
test
hlt
pop
mov
enter
pop
stc
push
fsub
inc
ja
fists
mov
pop
dec
mov
lcall
loope
mov
push
aas
mov
mov
rol
mov
or
cmc
fwait
popa
sti
mov
lods
adc
add
mov
xchg
clc
insl
xchg
adc
and
lret
fistps
dec
ret
mov
std
mov
in
dec
dec
push
into
push
inc
push
ret
arpl
pop
mov
in
pop
es
jbe
mov
xchg
push
outsl
ficomps
inc
xchg
mov
ffreep
cmpsb
adc
jne
jle
lret
dec
cmc
dec
inc
dec
out
popf
add
sbb
pusha
push
shr
ja
inc
mov
int
cli
sbb
xchg
pop
aam
cmp
add
xor
jo
adc
popa
xchg
in
sahf
lea
mov
push
pop
icebp
dec
popa
mov
int3
or
xor
int3
inc
sub
jecxz
sbb
jg
flds
adc
imull
xchg
into
mov
imull
cmpsl
adc
icebp
bound
sub
mov
adc
int3
mov
dec
mov
cmp
les
stos
push
js
and
enter
cltd
dec
sbbb
loopne
fs
outsl
dec
adc
pop
sbbl
out
cmp
xchg
pushfw
mov
jge
cmp
mov
ds
lods
movsl
cwtl
int3
scas
jmp
outsl
call
mov
loop
sub
lret
pop
out
add
in
lret
pusha
loope
sbb
add
fucomi
mov
xchg
add
lods
push
sub
movsb
mov
int
shll
xchg
mov
pop
cmp
pop
xor
and
lock
out
push
push
gs
xchg
xchg
add
pop
sahf
jb
ret
mov
js
nop
std
sbb
imul
mov
mov
and
sbb
ljmp
cwtl
lods
or
push
aam
ss
out
cli
cmp
push
jle
adc
ja
int3
mov
xchg
push
sbb
adc
ficomps
push
scas
jae
test
or
mov
inc
sahf
sbb
mov
shll
rorb
and
jecxz
scas
pop
xchg
leave
mov
mov
pop
sub
fsubrl
mov
stos
in
fsubrs
stos
mov
out
ret
inc
dec
je
out
xchg
scas
xchg
adc
inc
inc
xchg
push
loopne
pop
adc
outsl
push
and
mov
inc
xor
xchg
or
mov
popf
push
mov
int3
popa
popa
pop
jecxz
pop
daa
sarl
imul
ja
cld
xchg
or
mov
cwtl
ja
sbb
les
mov
mov
leave
loop
push
movsl
enter
clc
je
in
jne
pop
mov
sahf
and
pusha
movsb
or
leave
stc
mov
and
push
adc
ret
stc
mov
das
jnp
push
test
ljmp
fsubrl
ss
std
inc
gs
add
sbb
sbb
mov
xchg
or
cmp
cmp
cmp
adc
pop
add
data16
test
lret
in
bound
nop
add
arpl
jbe
cmp
cwtl
insb
sub
lods
push
frstor
push
add
xchg
test
mov
insl
inc
mov
repz
jecxz
cmpb
pushf
enter
out
imul
jb
inc
jb
xor
mov
push
or
rorb
sbb
repz
or
push
push
push
std
mov
push
into
inc
pop
sbb
loopne
mov
pop
mov
fisubrl
inc
daa
aam
dec
xchg
sub
nop
pop
cltd
jb
pop
out
xor
scas
sbb
lds
xor
insb
imul
cmpl
dec
loop
stc
mov
test
test
jge
mov
push
incl
pusha
sub
push
xchg
pop
out
pop
lret
fcmovb
cmp
sub
push
dec
cmp
cmp
loope
xor
pop
jmp
jb
inc
scas
and
dec
jns
xor
jne
js
int3
cmpsl
lock
adc
fimuls
shrl
out
jb
adc
shl
mov
xor
add
dec
out
and
add
sbb
xchg
sub
cmp
repz
sahf
loop
sbb
mov
scas
stos
les
je
pop
jg
mov
mov
sarl
cs
mov
ljmp
popf
iret
push
pop
pop
mov
jp
sti
cmpl
sbb
popa
lcall
ficoms
test
cmpsb
add
das
addr16
adc
sbb
cmc
dec
and
push
sub
or
aaa
inc
jmp
es
fnsave
hlt
jg
mov
test
rcll
add
lods
dec
sub
in
es
test
sbb
orb
and
fimull
cmp
ljmp
xor
fstps
movsl
cmp
div
jae
mov
xchg
lea
insb
mov
inc
cwtl
es
bound
fmul
mov
xchg
in
and
push
imul
xor
add
ljmp
dec
aaa
pop
repz
mov
pop
rcrb
lea
inc
mov
popf
lret
pop
ljmp
sub
repnz
and
jg
sub
lret
imul
pop
ror
pop
repnz
repnz
pop
lret
sub
cs
cmp
jbe
sbb
jp
insl
xor
daa
les
lods
enter
and
sbb
icebp
out
sahf
or
rol
shl
aaa
hlt
pop
push
and
sbb
fisubs
or
adc
mov
lcall
daa
in
in
out
nop
aam
mov
or
mov
jmp
pop
cmpb
dec
xlat
notb
pop
cli
cltd
mov
add
push
pushf
addb
sub
stos
aam
jp
xor
inc
pop
roll
ja
cmp
mov
jge
jbe
je
xor
pop
sarb
std
fimull
xor
or
scas
shl
out
or
fwait
fs
jno
addr16
mov
into
xor
mov
add
pop
ljmp
add
sbb
push
add
jmp
leave
sarb
loope
jp
sub
cltd
cli
mov
imul
pushf
ss
nop
mov
inc
ret
gs
inc
stos
daa
in
mov
pop
repz
pop
ja
daa
inc
fs
push
sbb
cld
cmp
cli
xchg
pop
and
mov
movsl
fsubs
inc
and
and
leave
pushf
fdivrl
insl
jle
icebp
or
push
and
jle
loop
adc
lahf
inc
daa
loope
out
mov
push
out
stc
pusha
jle
jmp
pop
push
cli
or
rcrl
jns
arpl
sarb
jg
cmp
int
mov
pop
and
lcall
mov
jg
repz
loop
sbb
xchg
sahf
test
and
pop
sti
mov
popa
mov
push
jge
adc
test
push
sbb
testb
das
fbld
lea
add
cltd
push
movsl
fucomi
js
and
and
inc
pop
sarb
push
test
inc
mov
push
adc
movsl
mov
xchg
jle
cmc
fwait
int3
mov
inc
cli
fs
test
mov
or
push
insb
lea
and
cmpsl
sbb
and
mov
negl
pop
and
push
push
sub
ljmp
pop
xchg
xchg
push
test
es
push
sub
add
or
fsts
clc
mov
rcll
nop
rcl
mov
or
out
xor
push
add
cli
pop
push
outsb
mov
xchg
das
adc
fcompl
and
lock
mov
dec
xor
xor
lret
mov
fidivs
test
pop
imul
sub
or
shr
xchg
insb
push
out
lcall
pop
inc
hlt
mov
out
hlt
sub
mov
test
push
cmpsl
and
outsl
or
dec
push
mov
ret
dec
call
jns
jg
jg
fisttps
in
out
dec
fidivrl
jbe
push
in
add
push
xlat
lahf
rclb
aaa
loope
fidivl
js
mov
jp
sub
mov
jns
add
xchg
sbb
test
cmp
pop
adc
and
loope
pushf
mov
pop
mov
aas
sti
inc
mov
or
cmp
push
scas
mov
inc
xchg
cli
in
cmp
xor
xor
pusha
dec
clc
adc
es
test
xor
dec
add
cmp
fwait
add
cmc
mov
xlat
adc
inc
lds
je
scas
in
dec
das
lret
lea
loop
cmp
into
insb
add
push
jge
pop
push
push
jb
test
loope
xor
dec
ficomps
xor
int3
mov
mov
dec
loopne
mov
test
xor
xchg
in
ds
xor
movlps
add
imul
pop
scas
and
sub
mov
xor
and
and
mov
daa
mov
stc
jae
adc
hlt
sub
push
movsl
jecxz
outsb
out
adc
mov
cltd
xor
fcmove
mov
int3
into
mov
ret
push
mov
jp
cvtpi2ps
or
xchg
adc
ror
pop
add
sbb
and
push
fwait
cmp
mov
push
jg
ret
jmp
xchg
ss
xchg
mov
shrb
aad
fisubl
fwait
or
repz
and
pop
sub
iret
inc
popa
mov
std
xor
je
call
imul
push
mov
divl
jle
gs
push
push
or
mov
or
movsl
or
adc
gs
arpl
or
and
mov
sbb
movsb
sub
sbb
insl
mov
jno
xor
and
sub
insl
dec
xor
jns
dec
int
mov
mov
dec
js
in
ja
pusha
mov
jnp
icebp
insl
insl
out
jns
xorb
scas
enter
loop
loope
mov
dec
faddl
lret
out
cli
roll
outsl
add
cmp
je
and
mov
push
fwait
and
adc
xchg
cwtl
mov
stos
movsbl
das
push
pop
pop
jl
fs
icebp
jge
push
mov
jmp
loope
and
loopne
mov
fistps
mov
rcll
lea
insb
mov
inc
lea
cmpsl
je
jmp
sub
scas
dec
and
add
shrl
imul
movsl
dec
loop
fwait
pop
lcall
js
push
sbb
mov
add
push
jae
ljmp
push
adc
jae,pt
pop
shr
jne
adc
push
dec
imul
jns
cli
sbb
pop
repnz
push
into
sub
xchg
out
push
cmpl
mov
jne
out
dec
dec
test
fwait
popf
out
cld
mov
xchg
push
mov
std
xchg
sahf
jge
mov
sbb
cmp
fmuls
das
movsb
mov
movsl
cmp
cli
rorl
loopne
inc
and
aaa
pop
xor
cmpsl
xor
mov
js
loope
sahf
xlat
mov
std
adc
xor
dec
cmp
ss
cwtl
xor
test
and
adcl
stos
mov
lret
mov
loop
sahf
and
dec
cld
adc
push
insl
hlt
mov
ja
jmp
adc
inc
movsl
pop
ja
pop
adc
push
shlb
xor
cmpb
push
cld
xchg
fcmovnbe
lret
arpl
pop
adc
and
mov
scas
in
dec
jo
scas
orl
jl
jl
mov
pusha
mov
into
or
sbb
inc
call
xor
xor
rolb
fldt
sub
and
es
cwtl
mov
iret
dec
insl
into
sarl
ds
jne
pop
les
mov
pop
es
inc
sbb
xor
out
daa
sub
mov
negl
xchg
jbe
dec
sahf
icebp
loope
or
fisttps
adc
sub
ret
mov
or
cmpsb
loope
out
test
int
pop
es
fwait
je
cltd
scas
mull
negl
fildll
xchg
popa
loop
and
out
inc
push
jp
push
fsubrl
test
cli
inc
mov
das
inc
jge
shr
scas
xchg
fists
flds
inc
push
pop
data16
in
and
mov
mov
push
dec
xor
dec
pop
movsl
inc
mov
lock
add
lcall
loop
enter
push
push
sub
stos
sbb
add
cmpsl
icebp
xor
filds
cmpsl
fs
pop
mov
movd
or
addr16
orl
mov
stos
ljmp
dec
mov
add
call
push
lds
test
mov
dec
add
cmpsl
xchg
jnp
mov
lret
inc
add
mov
or
xchg
pop
inc
jo
push
fldl
pushf
mov
pop
pop
adc
rcl
pusha
cltd
mov
add
push
xlat
fwait
out
cmp
mov
mov
mov
mov
add
sbb
popa
mov
je
adc
mov
clc
outsb
add
pop
mov
sahf
mov
xchg
enter
daa
cltd
jae
inc
in
test
aad
pop
pop
jmp
arpl
add
mov
clc
jbe
xor
inc
push
adc
sub
sbb
repz
out
sbb
test
cmpsl
ret
imul
push
rol
ficoms
jae
popa
cmpsl
push
dec
jle
and
test
cmp
cwtl
mov
mov
jne
pop
out
icebp
jno
lods
call
mov
dec
add
jns
mov
cmpsb
ret
push
sbb
mov
mov
lock
xor
mov
out
fistpl
adc
test
icebp
sub
les
lret
ja
aad
xor
jns
sbb
and
sbb
lods
adc
outsl
push
std
dec
insl
push
sbb
in
daa
lds
inc
mov
ds
push
cli
fs
test
js
in
lock
mov
out
les
cmpsb
and
loop
test
mov
shr
daa
pop
add
test
cmovbe
scas
aaa
mov
push
push
inc
jnp
pushf
rcrb
out
pop
sahf
sbb
push
and
sbb
aaa
outsb
xor
xor
enter
out
xchg
pop
test
mov
xchg
xlat
sahf
lock
push
test
push
push
xor
cwtl
insl
testb
mov
js
int3
hlt
data16
xchg
mov
pop
rorb
mov
sahf
in
leave
fnsave
adcb
inc
xlat
sbb
repz
movsb
push
sub
test
jmp
lods
mov
iret
mov
addb
push
repz
xchg
push
xchg
pop
and
dec
mov
rorl
sub
cltd
ja
faddl
jb
and
xor
mov
add
lret
fdivrs
stos
xor
std
jmp
pop
fdivrl
dec
stos
fwait
loope
lea
fld
adc
ret
xor
mov
xor
daa
dec
jo
push
sub
mov
sbb
lods
pushf
arpl
das
iret
stos
and
xchg
test
je
ret
int
adc
cmp
sub
out
pop
std
mov
cld
sarl
and
cmp
pop
inc
mov
leave
cltd
jmp
cli
repz
mov
sbb
les
pop
mov
daa
pop
cmp
sti
sbb
add
fdivrl
ds
test
push
cmp
mov
movsl
test
sub
mov
cmp
and
insl
sarl
scas
mov
lahf
pushf
push
test
mov
push
fldenv
or
add
mov
mov
push
inc
cltd
cmpsl
outsb
dec
mov
jge
cmpl
les
stos
pop
movsl
dec
repz
mov
pop
cmp
jmp
sub
xchg
stc
mov
and
mov
outsl
sarl
jg
ljmp
into
scas
sbbl
jle
pop
xchg
ljmp
sti
ret
cld
loopne
repz
repz
mov
jb
int
ljmp
pop
pop
xor
pop
addr16
xor
jb
mov
into
adcb
repz
out
lret
scas
and
std
pop
jne
arpl
xchg
scas
fidivs
aas
dec
mov
loope
sti
mov
pop
inc
dec
or
inc
sub
pop
roll
gs
mov
subl
aam
cmpl
xchg
shll
je
int3
arpl
push
and
dec
push
mov
jns
imul
inc
cs
lahf
push
pop
add
jge
popf
cmp
mov
push
push
imul
mov
in
jbe
gs
xor
fisubrl
fldcw
sub
pop
shrb
pop
or
xor
dec
add
das
enter
ja
aas
ljmp
dec
cmp
mov
pushl
push
scas
and
mov
and
cmpsb
in
cmp
mov
aad
insb
int3
mov
ret
sbb
fucomip
jp
movsb
lods
or
mov
xchg
mov
or
sti
pop
xchg
push
loopne
mov
xlat
push
jns
dec
test
mov
ljmp
movsb
mov
push
sub
pop
or
mov
arpl
and
les
cmp
enter
jne
lock
inc
sub
inc
xor
xchg
cli
xchg
jle
aam
and
mov
dec
push
enter
jl
xorb
fbld
jl
and
cmp
shrb
or
xor
fiaddl
subb
shrb
cmp
cs
pusha
dec
jns
sub
mov
adcb
cmp
jne
lds
xor
fadds
mov
sar
xor
adc
sub
mov
add
and
popf
adc
int3
mov
cwtl
adc
mov
push
out
repz
out
xor
imul
pop
mov
cmp
or
movsl
and
and
mov
test
in
rorl
lock
cmp
rcrb
sbb
add
ss
dec
add
mov
fdivrs
sub
in
mov
bswap
cmp
sbb
jae
sbb
cs
pop
push
sarb
fsubp
mov
dec
movnti
nop
fstps
enter
cmpsl
dec
lcall
inc
sub
mov
or
movsl
push
mov
mov
es
cs
dec
imul
mov
and
aas
popf
inc
inc
sbbl
sahf
and
fildll
mov
pop
int3
movsl
xchg
pop
test
and
adc
sub
jmp
and
enter
and
das
movsl
cmpsb
lods
lds
pop
sbb
test
push
bound
je
mov
mov
jmp
xchg
push
jmp
mov
popa
add
or
adc
add
lods
mov
adc
dec
adc
in
adc
mov
xchg
sarb
sbb
and
int
int
push
add
cmp
add
mov
xor
cmp
push
mov
mov
push
bound
cmp
mov
call
mov
or
mov
xor
sbb
imul
movsl
push
jle
dec
and
fucom
adc
and
lock
sbb
aaa
lea
das
ret
nop
pop
lods
stos
pop
dec
xchg
xor
arpl
fdivr
imul
or
aad
push
dec
sub
cld
pushf
stc
stos
dec
add
fmull
add
push
cs
add
pop
xchg
lods
insl
mov
loop
add
mov
jno
jge
push
mov
loope
adc
cmc
mov
push
cld
icebp
mov
mov
jb
icebp
push
cmp
pop
data16
sbbl
cli
push
xor
jns
lods
enter
icebp
int
cmc
mov
subl
inc
sub
jae
fadds
or
dec
lret
les
pop
and
sub
in
mov
rclb
xorb
push
rcll
sub
movsl
pop
sub
mov
inc
adc
lcall
cs
loop
data16
loopne
mov
xchg
jno
test
mov
in
loopne
fisubrs
pop
and
jns
stos
ljmp
pop
test
stc
insl
in
push
movsb
push
inc
jno
ffree
test
aam
jns
pop
fsubl
in
fcompl
les
inc
cmpsb
and
mov
pop
pushaw
ret
jge
lds
fdiv
inc
jbe
lods
dec
xchg
fucomip
jnp
ret
mov
inc
idivl
lcall
dec
dec
cmpsl
mov
or
andl
and
jnp
je
pop
mov
jle
notl
dec
sub
xchg
lock
adc
and
xchg
hlt
jo
sahf
pop
pop
sub
add
lock
out
loope
push
add
in
lahf
jmp
fdivs
xlat
xchg
push
cmp
gs
mov
add
xchg
in
inc
jp
scas
ja
dec
mov
xor
pop
adc
ja
sbb
pop
jl
fdivl
jnp
mov
fimuls
insb
fldcw
xchg
mov
test
fistl
mov
mov
movsb
adc
jb
add
cmpsl
push
xchg
xor
movsl
mov
fld
ss
stos
arpl
sahf
ljmp
outsl
jg
jo
jle
xchg
scas
out
ja
inc
pop
pop
daa
roll
inc
push
lret
clc
mov
or
xchg
xchg
xchg
cmp
and
cmp
lds
push
iret
divb
mov
fs
ljmp
fistl
add
push
hlt
cmpsb
mov
cmpsl
xor
lds
mov
sbb
fdivrs
jp
sbb
mov
sub
movl
test
inc
imul
xorl
movb
int3
stos
test
adc
repnz
jne
mov
add
aad
xchg
hlt
inc
pop
rolb
ss
jmp
enter
popa
inc
mov
idivl
mov
fs
repnz
jae
xchg
add
mov
mov
cmp
push
cs
lock
pop
fwait
gs
push
mov
push
lret
shlb
sti
push
popa
adc
fnstenv
scas
pop
scas
adc
push
dec
imul
leave
es
rorb
xlat
sbb
roll
dec
das
jle
call
stc
push
leave
mov
xchg
call
subl
pmulhw
mov
mov
xchg
adc
push
jns
jae
inc
lret
sbb
and
xor
add
mov
bound
inc
mov
into
add
xchg
iret
pop
es
adc
jns
and
js
rorl
sub
add
xor
outsb
leave
dec
cmp
ljmp
add
add
xor
xchg
icebp
jecxz
cld
mov
jo
enter
jbe
jmp
stos
addr16
cltd
js
add
sbb
gs
int
rcll
mov
cmp
imul
and
arpl
repz
pop
mov
mov
ds
mov
rcl
call
aam
jmp
mov
cltd
add
pop
or
or
xor
push
in
jae
in
sub
push
in
bnd
pushf
cmp
mov
and
lahf
iret
mov
lahf
in
and
int
add
mov
fmull
cmp
pop
movsl
leave
jecxz
mov
std
push
mov
mov
pushf
test
cld
andb
icebp
fwait
pop
xor
lods
mov
xor
inc
shrl
cld
jmp
xor
and
int
sbb
iret
popf
fdivs
mov
repnz
xchg
lahf
nop
je
xchg
mov
sub
test
incb
ret
imul
push
cmp
test
pop
cld
cmpsl
pop
mov
clc
testl
cmpsl
xor
stc
sbb
popf
rolb
mov
xor
cmp
mov
mov
les
aaa
dec
jno
cmp
pop
popa
shrb
and
jbe
in
ljmp
push
xor
xchg
sub
sarl
adc
mov
scas
adc
xchg
mov
rcll
outsb
jp
cmp
mov
or
sar
sub
rcrb
push
mov
or
popf
push
repnz
cmp
addl
testl
fcoms
xlat
push
popa
sbb
movsl
push
mov
nop
outsb
arpl
push
jl
aas
inc
add
movsb
loopne
sub
into
nop
xorb
jb
push
pusha
dec
dec
in
mov
cmp
push
mov
inc
aas
xchg
adc
iret
mov
jbe
sbb
inc
popa
lcall
push
mov
cld
nop
cwtd
pushf
sub
push
xchg
mov
rcrl
sarl
imul
sub
outsl
lea
xor
movsl
mov
gs
and
out
mov
and
xchg
jl
push
sub
mov
aam
dec
xor
cmp
repz
mov
pop
cmp
jnp
rcrl
mov
pop
mov
add
addr16
jg
imul
fcmovb
push
or
xchg
adc
jo
mov
pop
mov
ss
outsb
cltd
stc
test
popf
clc
inc
add
xchg
outsb
in
addr16
fisttps
call
push
sub
pop
mov
out
add
pop
jb
repnz
lahf
mov
add
jmp
fidivl
lock
rdmsr
pop
rclb
xor
dec
dec
repz
loop
iret
jmp
scas
in
jecxz
jle
popa
stc
or
stos
stc
cmp
xchg
dec
or
mov
dec
std
cli
cmpsl
or
mov
sbb
ret
sbb
negb
sti
inc
inc
insb
cld
cmc
test
imul
lock
shrb
adc
bound
test
lods
mov
iret
mov
mov
cmp
push
iret
test
mov
push
pop
enter
adc
ret
sub
jecxz
xchg
xchg
lock
push
outsb
out
mov
jae
stos
test
stos
mov
xor
stc
mov
push
push
mov
fmul
xor
mov
xchg
fdivl
les
cmpsl
addr16
call
cmp
push
mov
pop
dec
cmpsl
ret
into
dec
mov
fnstenv
pop
in
xlat
mov
pop
or
repnz
insl
out
adc
out
xlat
rcll
insb
xchg
lds
insl
push
popf
sbb
lds
push
lret
mov
jecxz
dec
fidivs
adc
pop
loopne
push
add
mov
inc
into
sbb
orb
push
mov
pop
scas
cmpsl
in
repz
fsubrl
mov
flds
hlt
add
lcall
or
and
test
add
out
fnstsw
jl
jg
js
lds
lock
cmc
movsl
pop
push
cmc
jnp
out
lret
fwait
mov
cltd
or
sarl
dec
sub
movlps
stc
or
xor
pusha
dec
push
leave
lock
adcl
lods
enter
add
daa
dec
lahf
add
in
xchg
out
subb
adc
pop
add
lret
out
out
mov
xorb
out
inc
imul
cmp
test
rcl
mov
mov
push
push
cmp
fbstp
pop
adc
adc
adc
jne
sbb
in
popf
xchg
jl
imul
outsl
and
pushf
mov
pop
in
fimuls
jecxz
mov
gs
pop
jns
fmul
push
subl
pop
or
and
lds
or
mov
and
xor
aas
xor
xor
fwait
int3
jg
cmpsl
std
mov
mov
mov
mov
cltd
jle
fs
in
and
aaa
aaa
js
mov
mov
xlat
subl
das
push
rcrl
ffree
nop
inc
mov
sbb
fiadds
jns
cmpb
sahf
repnz
je
push
outsb
shrd
vunpckhps
xor
jb
ret
in
fiaddl
ljmp
inc
pop
add
mov
push
lahf
es
pop
adc
push
jne
mov
in
les
jmp
cmp
cs
test
jnp
jne
adc
lock
loop
lds
xchg
xlat
ss
mov
mov
addr16
lret
inc
sbb
sub
adc
xor
repz
sub
add
adc
inc
int
add
cwtl
insb
ds
add
sub
xchg
push
xchg
js
add
inc
aam
inc
mull
dec
cmc
imul
mov
int
ret
mov
inc
imul
xorl
and
mov
mov
xor
ljmp
pop
aas
mov
cmp
adc
xchg
xchg
xor
jg
pushf
ljmp
cmpsb
push
pop
test
clc
or
jbe
or
iret
xor
scas
ds
divb
loop
jne
xor
cs
add
jo
push
adc
je
mov
mov
jge
xchg
lcall
popf
loop
sahf
pop
xchg
pop
loope
lods
cli
or
in
jecxz
aaa
jge
add
jp
int
test
and
pop
clc
dec
mov
ret
out
cmc
ret
into
in
jl
xchg
xor
data16
repnz
lcall
jp
mov
mov
add
insl
les
mov
dec
lret
push
sbb
push
repnz
jnp
jbe
pop
pop
shrb
dec
xchg
lcall
xlat
xchg
gs
insl
jl
mov
xchg
loope
jb
insb
sub
addl
push
xchg
adc
xor
and
test
lock
push
mov
jb
sarl
and
jo
into
mov
push
dec
or
aas
pushf
pusha
cmp
into
or
inc
pop
int3
add
pop
enter
push
data16
mov
loope
and
pop
test
or
push
adcl
fadds
testl
xchg
xor
jge
cmc
leave
cld
ss
ret
test
mov
movsl
push
and
xlat
mov
push
das
push
mov
mov
stc
mov
xor
daa
shlb
fcoms
push
out
cli
les
loope
sub
and
mov
inc
scas
add
mov
gs
test
pop
lret
push
push
repnz
jns
test
ss
jge
loope
lea
mov
push
mov
xchg
les
xor
loope
mov
pop
push
addr16
mov
sbb
cmp
ss
jb
mov
imul
push
mov
or
out
ja
lret
pop
sti
stc
mov
aaa
out
and
sub
out
dec
pushf
cltd
xor
cmc
daa
sub
and
sti
jno
aam
mov
sub
fildll
push
out
jo
and
scas
mov
stos
iret
push
add
fimull
dec
sub
aam
dec
jnp
shrb
push
push
push
push
xorb
insb
push
sub
dec
movsl
ja
and
into
mov
inc
clc
leave
mov
in
fidivl
mov
cmp
fdivs
lahf
mov
cld
scas
pushf
adc
push
andl
pop
mov
dec
adc
fistl
xchg
lcall
xchg
int3
cmp
jo
and
mov
cld
pop
test
mov
fnstcw
out
fadd
inc
repz
or
out
dec
fwait
les
mov
out
scas
pop
inc
lods
sub
sub
fdivrl
xor
mov
mov
es
jb
lea
cmpsl
push
mov
jb
loope
pusha
or
lret
add
and
subl
dec
adc
dec
ja
adc
scas
xor
lods
push
dec
adc
call
movsl
inc
xchg
jne
pop
in
mov
adc
in
sti
push
mov
xor
jecxz
rol
sbb
movsb
aas
shl
out
lds
sbb
pop
xor
xchg
xor
jne
sti
or
adc
and
dec
jno
jp
call
pop
popa
pushl
loop
rcrb
push
mov
mov
mov
pop
into
cmp
push
rcll
mov
push
dec
mov
inc
adc
insb
push
mov
xchg
fcoms
and
inc
cmpsb
xor
jne
inc
xchg
mov
lock
mov
mov
add
adc
xchg
daa
data16
sti
rclb
andl
scas
popa
out
inc
add
cmp
andb
add
cli
and
dec
ret
fisubrs
dec
mov
sbb
inc
rolb
and
pop
dec
dec
fldenv
das
dec
and
enter
push
push
in
add
push
inc
mov
out
push
call
adc
inc
cmp
sub
add
test
push
pop
mov
in
xchg
pop
dec
mov
rcll
fsubrs
adc
test
imul
leave
xchg
or
xchg
mov
mov
or
and
inc
flds
mov
loopne
mov
sbb
mov
repz
pop
xor
push
jp
mov
hlt
add
sub
pop
popl
xchg
mov
call
and
ja
add
pushf
xor
pop
and
sbb
jmp
popf
loopne
mov
sbb
xchg
fidivrs
jbe
and
shlb
in
or
sub
loop
into
add
stos
scas
dec
push
cmpsb
dec
adc
xchg
and
aaa
adc
and
cmp
push
dec
icebp
pop
push
mov
or
ret
mov
insb
mov
pop
ret
lds
and
adc
jo
jmp
dec
xchg
fists
ja
mov
or
arpl
or
mov
pop
repnz
lea
add
cld
call
scas
add
fisttpl
cltd
out
popf
add
cmpl
sbb
fbld
shrl
and
ret
adc
xchg
jno
jnp
pop
xlat
sbb
xlat
arpl
fdivs
or
aas
rcll
mov
sub
dec
mov
in
cmc
push
or
popf
mov
jb
ret
add
mov
fwait
sbb
stos
pop
fmull
sti
std
dec
xchg
sbbb
xlat
lea
mov
jp
adc
in
push
jge
outsl
add
mov
inc
lcall
orb
mov
repz
xchg
aad
add
dec
into
ss
stos
fimull
cld
dec
shll
mov
or
xor
jno
jge
xor
sbb
xchg
xchg
xchg
shl
rcrl
inc
mov
pop
fimull
clc
cld
mov
adc
data16
add
jmp
nop
outsb
fucom
dec
clc
jl
cmp
rorl
outsl
push
fdiv
push
lret
mov
push
xor
xor
mov
jle
jne
hlt
jb
xor
rcr
out
in
sbb
pop
jb
xrelease
jbe
jp
lret
pop
add
jmp
xor
sbb
lcall
repnz
xor
jns
cmp
sbb
sbb
jg
out
inc
ds
pop
xchg
neg
and
test
or
aas
fwait
mov
jne
xor
leave
mov
or
bound
fcoms
pushf
stos
jmp
test
aaa
cmpsl
call
lret
loope
ret
in
lret
lahf
dec
hlt
leave
test
push
dec
mov
popf
bound
loopne
push
lea
dec
lcall
xchg
adc
xchg
xchg
repz
cwtl
loope
lea
hlt
mov
lret
out
lds
sbb
adc
out
jo
pop
cli
addb
pop
aaa
and
adc
mov
ljmp
pop
pop
imul
and
pop
jnp
popf
mov
or
inc
mov
mov
cmpb
mov
pop
inc
adcb
xchg
imul
out
and
mov
mov
insb
repz
push
adc
mov
dec
jne
jbe
xchg
ljmp
fwait
or
sub
inc
adc
daa
xchg
and
aad
imul
test
mov
orb
or
pop
dec
loop
xchg
in
ds
movsl
fildl
or
xor
and
mov
in
movb
add
sbb
negl
and
enter
movsl
dec
aad
jno
cltd
sti
and
lods
loop
xor
jl
les
dec
add
out
sbb
mov
xchg
std
mov
fidivl
popf
idivb
jnp
repz
pop
test
inc
dec
add
sahf
loop
mov
xchg
sbb
jp
nop
fbstp
sbb
imul
out
into
pop
or
sarl
mov
mov
rorl
lock
inc
fs
jae
das
inc
mov
xor
cmp
push
cmpsb
mov
cli
jo
jmp
jecxz
xor
int3
mov
cli
mov
push
movb
lcall
sti
fdivr
xor
inc
xlat
and
xor
mov
jecxz
imul
outsb
repz
or
outsb
add
out
mov
sbb
adc
push
in
ret
imul
stc
int3
xchg
paddw
xchg
aas
pop
cmpsb
sbb
or
cwtl
stc
mov
test
scas
or
daa
and
cmp
mov
cs
ss
cmp
int3
add
dec
push
subl
mov
les
cmp
inc
andb
call
nop
outsl
pop
push
int3
pop
xchg
and
push
push
fwait
cmp
sbbl
adc
jae
mov
in
dec
mov
xchg
popf
jmp
pop
icebp
mov
sub
push
sti
jmp
imul
inc
jmp
jmp
ljmp
out
rcrb
jge
push
adc
dec
mov
addb
inc
and
fisttpll
iret
add
cmp
and
imul
test
mov
mov
mov
daa
ret
and
fisttpl
pop
add
cwtl
int3
mov
push
idivb
xchg
out
jge
arpl
add
clc
mov
dec
mov
inc
lcall
or
jns
es
push
dec
repnz
dec
je
mov
rorl
jne
xor
push
mov
lea
ljmp
pop
mov
mov
xchg
shll
mov
rcrb
mov
repz
enter
add
dec
inc
int3
add
test
clc
iret
mov
imul
jge
sarb
lret
into
lret
xchg
sub
les
dec
or
push
jp
sbb
cmp
mov
or
pop
pop
nop
pop
xchg
inc
adc
xlat
enter
push
stos
repz
in
lahf
fisubl
add
lods
inc
jg
mov
outsl
clc
ja
push
cmp
test
and
stos
pusha
sub
adc
clc
in
sub
mov
fs
sbb
jo
jbe
and
stos
pop
inc
pop
and
or
mov
test
add
pop
imul
pop
je
lods
cmp
pop
ss
addr16
mov
xorl
push
xchg
jns
xchg
dec
cmp
je
fwait
mov
mov
das
enter
scas
test
adc
xchg
loopne
cmp
inc
xor
jmp
pop
jnp
or
imul
dec
scas
fs
adc
jmp
stos
std
sbb
ljmp
fcmovnu
in
or
fwait
mov
and
pushf
inc
push
cmp
sbb
inc
shrl
push
sub
sbb
pop
jbe
in
repnz
xor
sahf
push
xchg
mov
pop
jecxz
dec
inc
mov
pop
cli
inc
dec
es
jbe
adc
scas
les
dec
jb
push
shrl
stos
loop
mov
mov
mov
fldl
push
lahf
xchg
xor
or
cmp
sbb
cltd
imul
or
mov
loop
adc
cmc
clc
adc
push
mov
cli
xor
ds
shll
stos
cs
das
repnz
scas
sub
mov
adc
pop
jbe
mov
and
and
aaa
out
psubusw
lock
lret
dec
stc
out
adc
shr
xor
mov
hlt
pop
daa
inc
jno
hlt
jecxz
jne
cltd
mov
xor
fldcw
mov
addr16
out
and
mov
jmp
jns
rcr
repnz
fsubrs
jge
mov
jg
movsb
repnz
lods
mov
mov
nop
outsl
enter
scas
xchg
outsl
testl
sub
outsl
inc
cmp
sbb
mov
test
loop
popa
sbbl
loope
je
cli
mov
std
adc
or
les
add
repz
lahf
pop
lahf
js
notb
fstl
and
shrb
or
nop
sub
mov
popa
imul
cmpl
repz
stos
xlat
out
cmp
mov
ja
hlt
iret
cmpsb
cmp
xchg
mov
adc
cltd
jg
adc
dec
std
inc
inc
and
xor
xchg
xchg
xchg
repz
icebp
fdiv
mov
imul
js
jnp
adc
stos
pop
fbstp
sbb
in
push
rorb
dec
add
dec
clc
imul
flds
cld
ds
cmpsl
fbstp
jecxz
mov
jne
and
push
and
inc
out
push
xlat
pop
pop
pop
jecxz
xor
push
pop
lcall
dec
jle
repnz
or
xor
mov
pop
fisttps
int3
or
pop
out
push
fcomi
push
lock
push
mov
in
inc
rclb
out
push
push
jl
orl
lret
aaa
xor
or
scas
mov
movsl
cmpsl
inc
xor
push
adc
aam
pusha
adc
add
cmp
cmp
comiss
push
fwait
hlt
mov
push
push
lods
cmpsl
xchg
mov
dec
loope
pop
mov
addr16
dec
sahf
mov
pusha
inc
mov
bswap
push
faddp
mov
jne
and
inc
mov
cltd
arpl
cmc
mov
or
into
sub
aam
sub
in
das
xchg
xchg
out
pop
repz
jo
iret
push
pop
dec
mov
add
inc
pop
and
adc
enter
inc
cmp
scas
mov
mov
aam
repnz
cmp
xchg
andb
jmp
mov
mov
xchg
ret
insl
push
mov
push
cmp
popa
dec
mov
xchg
xchg
iret
mov
nop
test
rol
jg
jb
sbb
pusha
jno
adc
jns
scas
inc
jno
cmp
aas
mov
aad
fs
cmc
int
sbb
and
cmp
js
lds
stos
dec
xlat
iret
sub
decb
shrl
pop
push
xor
jmp
sbb
mov
in
jl
sbb
xor
lahf
lea
sub
rcrl
pop
stos
mov
dec
mov
test
aam
je
je
lahf
fsubrp
bound
sub
add
fxch
mov
inc
lea
ss
dec
pop
mov
dec
add
addr16
ret
xor
ss
or
fisttpll
xor
sub
jb
cltd
dec
dec
int3
xor
or
push
bnd
inc
xchg
sbb
enter
add
inc
mov
icebp
cltd
mov
cmp
push
or
test
mov
imul
cmc
fnsave
fcom
mov
cs
xchg
mov
mov
addr16
addl
jp
mov
out
cltd
mov
dec
fisttpll
nop
or
ret
mov
or
scas
cmp
stos
ss
push
aaa
jmp
insl
int
fidivrl
inc
and
addr16
lods
xorb
cmp
xor
xchg
sub
ret
adcb
aaa
dec
xchg
in
ret
sti
incb
ljmp
ret
hlt
add
mov
add
shlb
jnp
push
iret
daa
jmp
push
jae
aas
popa
inc
xchg
mov
lods
std
lcall
fimull
iret
add
or
xorb
or
or
test
mov
ret
loop
cmpsl
mov
pop
cmp
cld
filds
mov
dec
shrl
cmpsl
push
mov
or
jbe
push
jno
xchg
loope
test
fs
xor
adc
out
lret
cmp
aas
xlat
mov
mov
pop
cmp
jnp
ljmp
cwtl
mov
sub
sub
je
cmp
pop
movsb
or
pop
mov
sbb
jle
pop
inc
jl
cmpsl
in
cld
leave
loopne
sbb
xchg
cwtl
fcoms
pusha
test
dec
push
mov
xlat
js
mov
insb
jle
sub
sbb
popa
call
int
out
push
xor
xor
je
aam
aam
pop
mov
out
add
inc
mov
dec
cli
mov
aas
int
and
das
inc
or
adc
ret
xchg
arpl
mov
jg
call
jge
dec
sub
pop
mov
pop
out
xchg
sbb
sbb
repz
mov
xchg
and
pushf
inc
out
xor
dec
dec
sub
pop
sbb
xchg
adc
cmc
jl
dec
xchg
sub
popa
pop
fildl
shl
xor
cwtl
roll
out
and
arpl
pop
xor
or
js
ficomps
ja
jmp
in
pop
sbb
sub
pop
xor
test
dec
shrb
mov
ficoms
xchg
adc
push
decl
adc
fstpt
xchg
pop
jne
iret
push
sti
into
pop
push
xchg
xchg
push
mov
scas
pop
fidivl
bound
pop
roll
in
gs
loope
add
ja
inc
dec
dec
addb
jns
cmp
rorl
adc
out
adc
xor
xor
and
inc
mov
hlt
jmp
or
dec
pop
nop
frstor
fidivs
test
ss
push
sub
push
sti
fs
xor
cmc
inc
test
aad
addr16
xlat
stc
mov
pop
rcll
xchg
lock
jb
or
movsl
les
dec
mov
mov
mov
mov
addr16
icebp
xlat
jo
dec
loop
mov
inc
incl
daa
ret
divb
cmp
mov
jl
ret
in
sarb
xlat
add
cmp
orb
sbb
dec
xor
or
jl
jg
jne
arpl
pop
pop
and
ror
hlt
shll
into
cmp
xlat
je
cmpsb
push
cmp
fidivl
xchg
add
mov
cmp
inc
xchg
lcall
lcall
in
stc
pop
xchg
inc
push
fwait
sahf
and
loop
mov
insl
cmp
mov
out
loopne
xchg
cmp
repnz
xchg
scas
fsubrl
or
mov
addr16
pop
shlb
clc
push
pmulhuw
xor
pop
fwait
mov
lods
push
pushf
mov
cmpsl
fldenv
pop
arpl
int
xchg
jno
int
les
jle
fadds
xlat
xchg
add
push
mov
cmp
aas
sbb
mov
out
out
xor
sub
cmp
jno
shrl
sahf
push
mov
cs
lds
adc
lahf
cmc
scas
lahf
adc
sbb
fcoms
mov
ret
loope
xor
sub
add
loopne
or
sahf
mov
or
shll
cmc
pop
mov
aas
add
sub
pop
insl
sti
sub
cld
dec
insl
movsl
in
cmp
inc
popf
push
or
shr
jne
mov
aam
shl
test
daa
testb
inc
or
jne
push
mov
sbb
inc
subb
test
mov
xchg
iret
mov
pop
pop
js
jns
mov
adc
cli
mov
shrl
inc
push
in
mov
xchg
out
or
jge
ficoml
mov
jmp
js
cmp
jbe
movl
cmp
popf
mov
jns
xor
lea
imul
fnstsw
aam
push
xchg
pop
out
movsb
lcall
cltd
inc
sub
push
out
sub
mov
adc
mov
add
jbe
mov
mov
sub
pop
xchg
pop
aaa
fdivr
dec
loopne
ret
movsb
lret
addl
mov
movsb
pop
inc
loopne
jecxz
jo
enter
fildl
subb
add
cmp
mov
sub
dec
lods
call
repz
pop
rorb
decl
push
cmp
das
xor
aam
xor
in
test
jecxz
xchg
test
or
jbe
dec
sbb
outsl
out
fbstp
push
ret
aas
lds
daa
xorb
xchg
sub
in
cmp
sub
pop
bound
mov
sub
ss
jo
sahf
push
push
pusha
aas
pop
repnz
xchg
add
inc
cmpl
cmp
outsb
and
cmp
cmp
sub
lahf
clc
mov
insl
mov
inc
cmp
jns
lods
sti
inc
icebp
popa
xchg
imul
adc
inc
cmp
inc
mov
addr16
mov
push
jb
cmpsl
cmpl
lea
fisubrl
xor
shrb
xchg
call
jo
in
addb
iret
xlat
xchg
inc
aas
add
iret
or
mov
push
push
and
mov
negl
xchg
hlt
jmp
or
inc
and
es
mov
imul
test
push
fsts
mov
xchg
cmp
cmp
test
cli
roll
mov
push
or
jg
imul
fwait
lret
jecxz
cmp
add
inc
jns
loope
data16
rcl
adc
sti
in
mov
xor
push
arpl
ficoms
loop
mov
sub
mov
shll
push
test
pop
jo
fsubs
cmp
stos
in
stos
sub
loopne
push
or
fmulp
or
mov
addb
pop
cld
fisttps
inc
and
mov
xchg
inc
pop
es
popf
adc
push
push
pusha
pushf
and
rorl
das
cmp
sbb
mov
lods
pop
dec
aaa
in
push
ret
iret
imul
stc
pop
popf
jne
sub
mov
mov
in
sub
push
fcomp
and
xor
dec
leave
pop
fcmovnbe
or
mov
mov
outsl
fldcw
fnstsw
popa
cmc
andl
hlt
push
xlat
pop
sti
mov
push
ret
stc
ror
arpl
lock
mov
lahf
adc
sbb
iret
and
dec
jmp
add
pop
loop
ja
test
sub
fldcw
adcl
and
mov
cmp
sti
inc
clc
sub
ljmp
jbe
dec
dec
into
cli
mov
inc
pop
mov
push
mov
das
ds
aas
adc
pop
push
cmp
cmp
imul
into
inc
std
into
inc
movsl
fwait
js
dec
in
stos
and
les
shll
pop
cli
and
insb
rorl
push
mov
repz
push
stc
and
xchg
fcmovu
adc
jno
sbb
aas
enter
add
stos
ret
out
aas
das
aas
fcomps
adc
scas
mov
jle
scas
imul
fldl
or
xchg
pop
aaa
sbb
repz
mov
xlat
sbb
lea
jge
inc
test
and
push
in
jg
xchg
addr16
jmp
dec
fsubl
jo
inc
nop
and
in
mov
mov
or
jge
clc
pop
out
mov
into
pop
loope
int3
sub
shrb
imul
xchg
outsb
cmp
loop
push
fiaddl
bound
inc
xchg
xor
xor
or
dec
cmp
test
lcall
mov
arpl
and
mov
lock
pop
dec
jmp
dec
out
int3
test
lea
dec
das
push
inc
in
mov
add
fs
hlt
xchg
sub
lret
mov
pop
fstps
jae
pop
pop
mov
push
cmpb
push
pop
popf
or
bound
pop
out
dec
xor
insb
fstl
cmpsl
and
inc
jge
fs
roll
pop
adc
dec
mov
out
add
inc
das
sub
lret
inc
icebp
stc
or
mov
xchg
or
filds
arpl
das
call
lcall
and
lock
int
mov
and
pop
push
sub
loop
jno
cmpl
loopne
shrb
sub
daa
xor
mov
pop
push
cs
or
pushf
shlb
shlb
push
in
je
and
andnps
movsb
sub
test
push
jo
push
push
xor
mov
add
rolb
in
cmp
leave
stc
cli
inc
jae
call
mov
sub
mov
lea
push
lahf
int
fadds
ret
add
dec
loopne
jnp
out
ret
cwtl
adc
push
mov
inc
fnsave
xchg
int
fwait
lcall
dec
aad
sbb
xchg
jle
and
push
nopl
aad
call
mov
jns
sbb
and
test
xlat
and
xchg
sbb
dec
push
imul
mov
fcomip
ljmp
aad
jb
repnz
mov
cmp
loope
adc
in
stos
les
add
mov
push
insb
in
dec
insl
sub
jns
fs
xlat
in
mov
in
data16
mov
stos
cmc
dec
xchg
jl
add
jle
imul
mov
call
movsb
sbb
cmp
cld
stc
bound
xchg
and
cltd
sbb
jnp
popf
mov
rcrl
or
xchg
stos
mov
sub
dec
mov
pop
sbb
movsb
sbb
aas
jne
aas
mov
adc
je
out
or
inc
rcrl
js
sub
cwtl
aas
xchg
push
push
sub
lods
rol
scas
and
cmpsb
in
lret
sbb
jnp
pop
xlat
outsl
sub
sub
shr
sahf
movsl
test
das
mov
cmp
dec
fisubs
lods
shl
xchg
or
xchg
sbb
pop
ljmp
xchg
inc
jns
ffree
mov
jae
ds
pop
or
sbb
popa
sub
ljmp
repnz
inc
popa
je
jg
pop
sbb
xchg
mov
jne
and
clc
push
mov
mov
inc
das
adc
cmc
aad
hlt
or
aam
xor
pop
sub
jecxz
cmp
dec
insl
jns
flds
aaa
cltd
bound
call
mov
jg
out
fcoml
pop
in
ret
inc
push
inc
mov
add
popf
int
push
std
addr16
lret
lods
fadds
mov
hlt
sbb
ja
inc
sbb
sbb
sub
repnz
insb
sbb
les
lahf
lods
outsb
and
add
jle
jg
mov
in
or
jle
fbld
neg
fildl
jbe
fwait
cld
or
addr16
adc
movl
movsl
shll
lcall
inc
cmp
pop
je
fisubrl
outsl
jg
or
jge
push
add
scas
lods
int3
in
mov
in
stos
mov
bound
pushf
movsl
mov
jl
xor
fcmovne
out
fimuls
dec
movsl
cmp
out
stc
imul
xchg
adc
adc
cwtl
inc
xchg
mov
push
loop
lods
sub
filds
aam
dec
add
cmp
dec
push
pop
sbb
repz
push
pop
push
popa
lods
dec
or
pop
addr16
pop
or
xchg
aam
cs
push
cli
rcrb
sub
mov
and
push
dec
cmpsl
nop
or
fs
dec
inc
add
sub
add
mov
ret
sub
sbb
icebp
xchg
sub
jne
push
out
and
sub
addb
mov
pushf
sbb
xor
mov
gs
rorb
lods
sti
nop
mov
xchg
fisubs
push
testl
rcrl
les
pop
mov
dec
loop
dec
jmp
nop
ljmp
push
test
call
cmp
leave
out
sets
outsl
xor
sub
mov
nop
sbb
loopne
adc
pop
in
sub
loopne
stos
in
aam
call
pop
movsl
xchg
pop
mov
sbb
loopne
pushf
out
sub
std
movsb
das
push
neg
mov
cmp
push
jne
jmp
outsb
jnp
out
push
pop
repz
pop
shrb
and
rolb
mov
fidivl
mov
cmp
stc
mov
or
add
in
je
mov
ljmp
cmpsb
cli
fnstenv
mov
jg
push
imul
jmp
pop
add
mov
mov
cmp
mov
jno
jg
push
jo
cmpb
pop
push
into
int
aaa
cld
mov
jb
add
and
insl
movsl
lret
jnp
and
pop
push
pop
mov
sub
dec
imul
mov
js
leave
scas
adc
sar
jl
mov
sbb
in
adc
jp
mov
jmp
push
xchg
xor
mov
xor
inc
dec
cmp
adc
mov
out
iret
ret
jae
pop
cmc
or
dec
jl
roll
jmp
popa
fistl
cli
mov
scas
mov
lods
xor
outsb
add
or
std
lahf
push
jecxz
outsl
mov
push
xchg
xor
add
add
jecxz
push
in
jno
enter
sbb
mov
mov
or
lock
fnstenv
aas
mov
lds
jnp
dec
inc
push
sbb
fld
xchg
push
nop
pop
push
sti
vpsubsw
sbb
xchg
dec
cmp
insl
rcrl
out
xlat
shl
adc
sub
pusha
jmp
mov
aas
and
je
fcoms
mov
mov
mov
addr16
cmpsb
testb
pop
fs
imul
outsb
data16
lods
jne
push
push
jle
sbb
fnstenv
jg
int
mov
movsb
loope
xchg
push
ret
mov
inc
mov
out
jl
mov
cmp
iret
xor
cmpsl
dec
movl
sbb
fdiv
push
lods
dec
aas
dec
xchg
hlt
add
dec
in
or
out
ret
and
loope
add
loope
or
sbb
dec
movl
repz
out
dec
mov
mov
add
cmc
mov
mov
fwait
jg
repz
inc
lcall
pop
popf
jmp
pop
cmpsl
adc
or
nop
fwait
out
lret
lret
jno
push
mov
xor
jle
pop
cmpsb
sbb
cltd
aaa
push
xchg
jmp
or
push
pop
sbb
sarb
add
lret
jns
test
jno
bound
sub
shrl
call
pmaxub
repz
faddl
in
mov
dec
xor
jl
cli
lods
xor
aam
movsb
mov
cmp
aad
stos
les
push
mov
pop
push
call
aaa
lea
inc
mov
leave
inc
add
addr16
lcall
sarl
pop
imul
and
jnp
jge
outsb
jmp
dec
push
pop
int
add
mov
jecxz
dec
mov
jge
push
jmp
sbbl
mov
xchg
mov
cmpsb
orb
and
daa
jl
dec
pop
idivl
pop
scas
into
sub
dec
jecxz
xchg
adc
into
dec
repz
in
repz
popa
xlat
les
fs
jo
push
mov
int3
sub
cmp
cmpsb
cmpsb
mov
mov
js
addb
nop
dec
enter
sub
pop
mov
or
nop
hlt
mov
and
stc
cmp
clc
gs
adc
lock
fs
sbb
push
pusha
inc
movswl
imul
mov
xchg
imul
lods
test
daa
lods
rcrl
aad
gs
test
out
pop
mov
dec
popf
xor
jge
repnz
sub
clc
int
mov
sbb
sbb
pusha
pop
cli
pop
imul
shlb
sub
mov
sbbl
bound
xor
cmp
xor
repnz
js
adc
mov
iret
mov
push
test
out
add
inc
scas
in
jecxz
or
mov
push
mov
imul
movsl
iret
push
sub
xlat
add
xlat
jmp
mov
jbe
scas
addb
lods
pop
cmp
mov
sbb
clc
pop
lock
inc
outsl
inc
out
stos
ss
addr16
adc
popa
outsl
aas
das
add
mov
pop
stos
test
adc
out
sub
and
cmp
ror
jle
dec
or
jo
bound
mov
out
push
mov
out
pop
test
add
inc
data16
imul
scas
and
ljmp
mov
test
mov
cmpsb
and
dec
mov
cmp
dec
mov
iret
inc
mov
aad
test
lret
mov
scas
dec
add
jnp
insb
ficomps
nop
push
iret
xchg
in
lret
mov
and
das
sbb
ficoms
mov
push
xchg
gs
pop
xchg
and
add
rcrl
fwait
mov
scas
jb
ds
aaa
mov
push
cmc
shl
jle
fcmovnbe
pop
std
mov
sbb
out
inc
popa
pushf
and
out
dec
mov
and
pop
daa
cmp
das
and
ret
fcomp
out
fdivp
insb
pushf
mov
or
aaa
cmpsl
stos
adc
mov
pop
inc
cli
movl
sbb
mov
jb
inc
jg
in
cs
mov
pop
add
test
outsl
jl
xchg
in
movsl
ds
dec
es
push
mov
jnp
or
mov
push
lea
imul
rorb
pop
in
sbb
pop
stc
es
inc
mov
pop
jle
mov
xchg
adc
mov
pop
data16
xor
jl
push
lods
or
jns
xchg
pop
mov
lods
shlb
inc
and
add
pop
cmp
scas
or
mov
aas
push
and
imul
jge
lods
dec
int3
xor
xor
xchg
push
dec
sti
xor
mov
rclb
or
daa
dec
mov
into
adc
outsb
mov
cmpsl
jl
dec
sub
ror
mov
push
mov
jo
cmp
or
xchg
int
gs
sub
and
jno
int
mov
call
shrb
inc
jno
bound
repz
icebp
push
in
pushf
jl
pop
inc
xchg
jp
test
out
pop
pop
test
popf
bound
add
mov
add
cwtl
jb
adc
ds
xchg
push
xorb
js
pushf
pop
adc
sahf
aam
lods
cld
in
push
push
and
inc
jns
into
roll
adc
mov
push
inc
mov
cmpsb
and
xchg
cmp
call
xchg
inc
sbb
or
mov
push
inc
mov
aas
cmpsb
or
push
in
dec
lahf
fidivrs
icebp
sahf
cltd
adc
mov
and
insb
andl
xchg
lds
xchg
into
loop
in
push
insb
sub
pushf
xor
adc
addr16
pusha
xor
xor
arpl
add
jnp
das
lea
stos
or
xor
popf
addr16
enter
flds
bound
test
mov
rclb
and
fucomp
scas
push
xor
cmp
xchg
loope
push
insb
inc
mov
push
push
mov
push
inc
mov
jno
rorl
xor
xor
cmp
rcl
stos
lods
sub
sub
sarb
ss
das
cmp
imul
inc
push
sbb
cmp
mov
shll
loop
add
dec
jmp
push
sub
cmc
gs
jge
dec
adc
inc
pushf
out
mov
sbb
mov
push
add
ljmp
movsl
negw
add
add
push
movsl
test
sbb
test
imul
jne
call
dec
dec
daa
push
fcmovnbe
mov
out
add
pop
rclb
pop
mov
shl
xchg
xor
cld
add
xchg
mov
std
push
dec
sbb
std
outsb
sub
daa
mov
es
sub
scas
pop
es
adc
fmull
negl
mov
xlat
mov
push
mov
bound
pop
cwtl
movsb
ror
adc
leave
xor
adc
loope
cwtl
add
loop
mov
rcll
stc
fistpll
notb
or
mulb
dec
sub
fcompl
add
sub
inc
inc
pusha
xor
and
divl
dec
sbb
subb
aam
xor
push
or
jle
adc
iret
xchg
and
or
pop
mov
pop
sub
adc
stos
icebp
dec
or
orb
push
sub
sarb
das
daa
add
pop
and
or
xchg
es
adc
push
push
or
andb
push
out
and
mov
aad
mov
je
jl
pop
in
sbb
sub
mov
push
fimull
repnz
fsubr
cmpsl
or
icebp
fbstp
movsl
dec
loop
xchg
push
ds
inc
mov
and
lods
xchg
xor
xchg
mov
pop
sub
lcall
jmp
insb
pop
dec
cli
pushf
mov
testb
dec
std
popf
sarb
cmpsl
lods
add
jg
mov
jp
sbb
mov
and
repnz
or
js
or
stos
mulb
and
aad
jl
xor
mov
add
add
icebp
fwait
dec
or
clc
and
stos
loope
aad
call
sti
sarl
notl
adc
imul
test
ljmp
dec
dec
pop
sbb
xchg
mov
push
cmc
cmp
filds
out
and
sbbb
test
push
addl
fucomi
sub
or
ss
pop
mov
xchg
sbbl
rcrb
outsb
or
sub
or
imul
push
jnp
jp
and
cwtl
xchg
dec
sbb
outsl
xchg
loop
xchg
fucomi
sub
xchg
lcall
daa
cmp
clc
push
ljmp
mov
mov
push
jnp
daa
fwait
out
inc
xor
mov
in
aad
push
jp
sbb
xchg
or
sbb
jecxz
lcall
adc
mov
mov
xchg
jo
movsl
hlt
divb
sbb
fwait
mov
mov
add
mov
pop
adcb
outsb
popa
out
sbb
xchg
cmp
mov
adc
lods
xchg
jecxz
sub
mov
or
stos
das
mov
inc
out
out
lods
sub
in
jl
mov
hlt
ficomps
shlb
jecxz
xor
int3
add
adc
jb
daa
stc
sarl
imul
enter
scas
jmp
mov
lea
out
adc
inc
imul
in
push
add
xchg
sub
leave
mov
dec
or
dec
sub
fidivl
cmp
pop
loope
xor
mov
leave
notb
mov
mov
lcall
idivb
add
popf
subb
mov
loope
or
sub
das
sub
nop
arpl
mov
add
in
mov
sub
cmpsb
cmp
leave
adc
cmp
xor
fnstsw
adc
push
in
xor
out
inc
aam
mov
mov
add
test
je
lret
sub
mov
xchg
pop
daa
repz
inc
lds
sub
dec
xchg
test
sub
insl
push
dec
mov
shl
push
push
mov
mov
jmp
mov
jmp
dec
mov
inc
push
dec
or
dec
insl
clc
mov
mov
jnp
mov
xor
ds
movb
mov
cmp
jl
clc
mov
jle
cli
jbe
sub
cmp
adc
andl
fnstenv
pushf
stos
cmc
lcall
cmpsb
lcall
mov
add
into
enter
test
jae
rcrl
inc
xor
out
sbb
dec
fnstsw
cs
jo
and
sbb
cmp
adc
cmp
push
mov
lahf
sub
sti
or
mov
lea
jp
addr16
popf
hlt
dec
out
add
add
push
inc
mov
push
stos
fs
sub
mov
add
push
ds
jecxz
mov
pop
into
mov
xor
arpl
jae
mov
gs
shlb
loop
fs
clc
xorb
dec
pop
and
xchg
and
pop
movsl
inc
jecxz
insl
jo
je
dec
test
push
jnp
das
addr16
push
movsb
testl
aaa
or
subb
iret
in
ss
subb
and
loopne
pop
in
adc
mov
data16
push
sub
dec
dec
push
into
aam
xchg
xchg
lods
shl
jno
das
arpl
sar
sub
jo,pn
mov
and
arpl
inc
mov
jno
clc
jle
inc
pushf
vmulps
call
sub
xor
arpl
mov
cmp
std
cmp
ja
fstl
bnd
out
ret
add
icebp
test
dec
std
dec
aaa
mov
xchg
xor
nop
mov
and
add
mov
scas
fisttps
xchg
mov
push
stos
lods
cmp
sub
and
dec
cmc
dec
in
adc
jb
es
outsb
leavew
and
mov
pop
sbb
clc
mov
ja
sbb
sbb
mov
add
mov
cmp
test
aad
sub
xchg
xlat
outsb
gs
mov
or
push
mov
mov
je
mov
mov
dec
in
xchg
sbb
pop
cli
jl
sub
fwait
stos
cmpsb
clc
mov
xor
popf
push
dec
xor
cmp
and
out
cltd
mov
add
cmp
or
add
jbe
push
push
mov
les
cli
mov
sti
rcrb
mov
push
sbb
stos
add
cmovae
pushl
lahf
mov
cs
cld
jne
clc
mov
repnz
sti
mov
push
inc
mov
outsl
dec
jnp
pop
dec
popf
dec
mov
clc
mov
or
sub
aad
lea
imull
mov
cltd
insb
mulb
pop
jo
rclb
pop
mulb
add
mov
mov
mov
and
dec
into
cmpsb
pop
cmp
and
aad
pushf
inc
sbb
push
sub
call
fstps
mov
adc
clc
jmp
xor
rcrb
jl
lahf
jb
out
xchg
pop
movsb
push
push
rcr
pop
notl
fistpll
sub
popa
sar
dec
or
loope
sbbb
bound
rcrl
xchg
in
fldl
mov
int
adc
mov
fists
les
or
pushf
test
cwtl
jns
xchg
pop
push
jnp
xor
jmp
loope
pop
cmp
jecxz
xor
sbb
ficompl
cwtl
adc
imul
jmp
dec
cs
mov
pop
scas
push
daa
popw
loope
cmp
inc
mov
rorl
lret
lahf
scas
hlt
or
push
out
aaa
cmpsl
mov
dec
stos
sub
sbb
pop
jb
data16
dec
mov
pop
fsubr
dec
in
sub
and
xor
out
out
jno
aas
jle
int
dec
jo
mov
popf
pop
inc
mov
xchg
xor
sti
sbb
push
inc
inc
bnd
lods
hlt
enter
addb
sbb
fidivs
mov
jmp
adc
and
sub
fnsave
cwtl
cmp
loop
xor
mov
loop
dec
aam
rclb
iret
adc
cmpsl
iret
xchg
cmp
in
jno
pusha
mov
mov
sub
mov
xor
mov
je
bound
push
pop
mov
jmp
or
test
loopne
fstl
fcoms
pop
push
push
adc
daa
insb
jle
test
imul
aam
and
sti
iret
cli
mov
jl
mov
mov
mov
sbb
add
shrb
xchg
jae
out
in
mov
add
inc
imul
mov
out
test
bound
jmp
test
lret
clc
stc
adc
or
adc
popf
jb
shl
sbb
cltd
mov
movsl
das
push
cli
push
mov
add
mov
sbb
adc
ds
dec
adc
push
xor
xchg
nop
jmp
call
es
fstpl
sub
xchg
inc
xlat
aas
movsl
test
xchg
pop
sub
sar
cmp
stc
pop
jno
iret
enter
inc
jae
dec
mov
leave
cmc
xor
xchg
pop
jmp
mov
repnz
xchg
js
sbb
mov
pushl
lock
imul
sbb
flds
imul
mov
stos
xor
jmp
leave
sbb
add
daa
xchg
call
mov
mov
test
pop
shrb
sti
add
cmp
test
xchg
rcr
xor
xchg
cli
loop
test
jg
jecxz
jbe
mov
ljmp
jge
xchg
pop
jne
xor
add
dec
aad
adc
xchg
xchg
fwait
adc
out
out
pop
jmp
cmpsb
xchg
insl
sahf
neg
push
les
cld
je
jmp
fsubs
cmp
test
data16
mov
mov
jge
fsts
inc
jg
jecxz
sti
cltd
popa
jno
dec
es
pop
sub
add
imul
scas
jns
and
test
xchg
push
add
xor
sub
xchg
mov
jnp
dec
repz
mov
data16
out
fs
sub
incl
jmp
sbb
push
test
mov
das
mov
push
pop
xchg
and
push
push
ret
or
les
inc
inc
aam
jno
push
mov
inc
push
add
mov
dec
and
mov
dec
arpl
test
sbb
out
add
pop
mov
dec
mov
pop
mov
mov
dec
cmp
out
add
add
sar
xor
jmp
inc
mov
push
lock
stos
fwait
js
xchg
push
mov
out
sbb
mov
loop
cwtl
dec
and
lock
addl
andl
pop
inc
scas
sbb
jg
popa
cmc
iret
stc
and
add
pop
ds
cmp
adc
imul
sbb
in
jmp
jns
add
adcb
push
aam
ffree
iret
clc
sbb
sbb
inc
aas
mov
xor
cli
rorl
movsb
mov
pushf
sahf
push
dec
lcall
inc
sbb
movl
stos
in
xchg
insb
flds
fwait
adc
ja
xchg
rclb
push
pushf
das
lret
mov
sub
xor
mov
pop
out
push
ror
inc
and
dec
cmp
and
push
sti
mov
int
mov
jae
add
inc
mov
int
sub
and
lret
fnstenv
rcl
ja
inc
movsl
in
push
inc
inc
and
mov
in
xchg
sub
sahf
adc
sbb
pop
adc
cmp
jno
push
test
cli
lock
mov
movl
jae
mov
aas
dec
fsts
in
andb
dec
mov
pop
int
repnz
pop
cmp
cmp
popa
inc
adc
push
test
bound
dec
repnz
jbe
inc
add
pop
xchg
lcall
imul
fisubrl
mov
int
dec
ret
mov
mov
cmp
and
lahf
mov
popf
popa
jo
cmc
adc
add
sub
sbb
add
out
or
jmp
push
outsl
push
mov
sbb
stos
hlt
hlt
pusha
lods
sub
jge
mov
es
pop
or
int
rol
ss
sar
push
jno
mov
dec
ret
les
push
jbe
scas
scas
shlb
mov
and
push
ds
dec
xor
test
xchg
jb
out
arpl
outsl
lock
or
xchg
movsb
lea
scas
jl
int
notl
cltd
lret
roll
xchg
or
data16
cmp
or
xchg
int3
frstor
sub
jl
ljmp
stos
fdivrs
inc
movsl
xchg
add
xchg
pop
fisubrl
push
push
repz
test
push
mov
movsb
movsb
dec
add
ds
std
in
out
xor
push
cwtl
dec
fstps
cwtl
pop
clc
fidivs
push
lcall
sbb
testb
les
test
pushf
adc
cmp
stos
sbb
cmp
xlat
cmp
jo
push
loop
pop
and
sbb
xchg
push
sahf
push
les
cmp
ds
cli
sub
fiaddl
aam
cmpb
inc
pop
in
mov
and
ret
scas
cmpsl
jno
test
leave
fxch
pop
mov
lret
add
mov
mov
addr16
ret
adc
cltd
aas
pop
jp
adc
inc
int
movsl
add
rcrl
and
aas
out
imul
mov
sbb
xor
aam
leave
and
jbe
xchg
scas
xor
leave
xchg
je
xor
push
dec
and
xchg
xchg
loope
add
in
aad
xchg
sar
and
lcall
cltd
mov
add
mov
jbe
fnstenv
lret
lret
cmp
dec
or
mov
shlb
mov
das
jge
scas
iret
shlb
mov
pop
ds
andl
and
add
xchg
jle
insb
adc
mov
jl
mov
out
mov
movsb
xchg
adc
pop
and
mov
mov
fistps
int
mov
sub
mov
xchg
xchg
imul
push
loopne
mov
mov
mov
xorb
pop
mov
mov
inc
dec
orl
inc
ds
in
jecxz
loopne
push
mov
jbe
inc
pop
leave
inc
push
add
mov
sbb
iret
inc
mov
xor
into
clc
lock
stos
enter
mov
ret
imul
xchg
pop
mov
add
insb
xor
les
mov
cmp
jne
jle
lret
mov
dec
repz
lock
imul
pop
add
repnz
jns
cmp
ss
jns
popa
lock
out
and
adc
jg
icebp
cmp
test
xchg
inc
push
dec
sub
add
jae
into
stos
hlt
and
jle
cmpb
ja
sub
out
adc
rcrb
mov
mov
add
xor
cli
dec
sub
mov
fs
gs
sbb
dec
divl
mov
mov
sub
xorb
pop
cmp
pop
xchg
sub
sarl
std
mov
and
xor
rcll
pop
push
sarl
rcll
jle
in
mov
pop
sarb
add
jo
sub
sarb
jns
cs
popa
dec
sarl
cmc
lods
xlat
fsubs
pop
and
sbb
pop
sub
stos
call
cmc
aas
jo
cmp
in
jno
bound
lods
repz
dec
add
enter
insl
in
sbb
sarb
cld
mov
mov
inc
fisttpl
inc
in
test
adc
popa
orb
test
loop
or
jo
jg
fwait
push
and
jg
cwtl
mov
sub
xchg
fstpt
adc
mov
lahf
pop
cld
jne
dec
sti
call
and
lds
ret
pcmpgtd
enter
test
cmpsb
icebp
das
mov
jb
mov
and
adc
mov
nop
push
pop
lock
xlat
jns
push
dec
adc
out
dec
mov
flds
sbb
std
in
push
hlt
jo
dec
add
adc
jg
daa
sub
mov
and
inc
jge
stos
pop
in
add
cwtl
inc
repnz
aas
stos
in
push
dec
cmpsb
pop
and
cs
cmpsb
jbe
std
in
pop
lea
push
sbbl
icebp
sub
xchg
and
ds
mov
aaa
and
jecxz
adc
subb
sub
fstp
mov
xchg
cmp
dec
mov
inc
dec
pop
cmc
mov
in
dec
imul
add
fs
gs
decl
aad
fwait
lods
xchg
pop
mov
call
mov
push
rclb
mov
and
cmpsl
adc
lret
mov
sub
dec
or
adc
pop
popa
out
mov
push
push
rcrb
inc
inc
dec
adc
or
mov
ffree
movsl
jmp
aas
add
adcb
adc
mov
pop
cld
subl
pop
xlat
mov
lret
mov
sub
in
stc
add
in
shrb
aas
pop
jns
ds
xchg
icebp
iret
cmp
mov
sbb
int3
mov
adc
pop
cli
push
sub
adc
repz
sub
mov
leave
stc
jne
or
dec
stos
out
sahf
pop
sarl
pop
inc
mov
loope
inc
insl
inc
and
fnstcw
dec
pop
dec
mov
jns
insl
outsl
daa
adc
jl
fsub
pop
fnsave
fwait
mov
jge
shl
in
or
add
or
mov
aad
inc
psrld
jmp
xchg
out
scas
jbe
fsts
clc
jae
adc
lea
push
jae
imul
cs
pop
xor
xchg
dec
pop
mov
imul
mov
fcoms
push
adc
aad
mov
jbe
testl
loope
push
adc
mov
loopne
imul
mov
sub
push
xchg
cmp
mov
mov
ja
pop
push
movsl
xor
and
aad
je
jo
sbb
mov
popa
jmp
push
pop
ss
ljmp
or
and
sahf
lock
out
mov
out
scas
test
fs
inc
mov
aas
loop
sub
mov
mov
aas
shrl
add
stc
inc
jbe
pop
and
inc
inc
mov
and
and
sbb
sbb
jns
sub
cmp
or
jbe
addr16
jnp
jb
mov
pop
fsubrs
xchg
fdivrp
xchg
iret
adcl
xor
pop
stos
pop
add
fcmovnu
out
sbb
les
outsb
mov
xchg
push
adc
out
xor
mov
outsl
ss
push
xchg
or
ret
cmp
add
jbe
notb
adcb
xor
leave
inc
test
jmp
and
dec
les
sub
gs
jmp
loope
dec
dec
pusha
mov
mov
insl
shr
stos
cmp
jae
inc
popf
dec
or
adc
mov
push
jmp
adc
sbb
stos
mov
or
mov
jae
int
xor
xchg
push
icebp
mov
and
repnz
lret
jns
mov
loopne
das
mov
arpl
add
cmpsb
jecxz
aad
cmp
or
jp
sarl
inc
add
mov
loop
imul
addl
push
hlt
sbb
push
or
rcll
and
sbb
inc
rcrl
nop
mov
cmp
cmp
sti
jns
addr16
hlt
out
lock
jge
dec
in
mov
jge
pushf
data16
outsl
inc
cmp
andps
mov
mov
jbe
adc
and
aaa
inc
loop
and
mov
add
push
lret
int3
or
add
and
inc
pop
outsb
out
jecxz
inc
les
mov
mov
sti
mov
push
test
mov
add
xor
mov
push
or
sub
adc
out
stos
jnp
out
xor
or
mov
and
inc
shlb
cmp
xor
ds
shlb
xchg
xchg
nop
xchg
leave
pop
icebp
mov
mov
mov
sbb
jne
xchg
shll
ret
push
repnz
je
into
repnz
inc
pusha
pop
cld
cmp
pop
mov
sub
inc
jno
inc
loope
add
inc
push
shlb
xor
jp
pop
sub
pop
dec
pop
call
jecxz
cltd
cmp
shrb
in
pop
jmp
mov
fwait
scas
xor
js
dec
pushf
mov
leave
sub
shrb
xlat
dec
cmpsb
xor
js
cs
sub
mov
lea
sub
enter
ds
push
aad
cmp
and
hlt
push
loope
mov
pop
ror
fisubs
xchg
repnz
rcrl
and
pop
dec
iret
test
pushl
incl
sub
push
push
out
rcrb
xlat
repz
push
jb
xchg
loopne
push
out
pop
pop
sub
sti
push
cmp
pop
push
cwtl
pushf
insb
arpl
sarb
sub
mov
jg
stc
xchg
push
pop
inc
in
repz
iret
fcoml
jmp
jge
add
xor
fcoml
test
in
xchg
inc
enter
dec
adc
mov
mov
push
or
mov
std
je
jnp
leave
and
ja
lods
cmp
mov
sbb
mov
rcl
mov
movsl
xor
lcall
dec
jl
or
nop
sbb
fsubrp
pop
testl
sahf
into
roll
cltd
aad
fdivr
mov
pop
jp
repz
jle
scas
push
in
mov
pop
pop
imul
mov
and
pop
mov
popa
test
dec
pop
push
adc
popf
dec
js
mov
sbb
pop
add
cmc
mov
dec
pop
pop
mov
and
push
shlb
mov
fisubs
rcrb
test
mov
mov
fsubrs
dec
cmp
loop
dec
cmp
out
cmp
stos
orl
and
fst
pop
out
mov
popf
push
add
dec
push
or
pop
mov
repnz
call
jb
and
xor
faddl
sti
push
or
lret
mov
push
jne
aaa
jns
bndldx
sub
std
loope
orb
push
rol
sbb
test
rcll
xor
mov
dec
aas
sub
repz
adc
rcrl
in
std
fcoml
out
push
sbb
clc
adc
xlat
xor
fwait
inc
cmp
adc
mov
pop
cwtl
js
dec
cli
xchg
xor
dec
add
test
push
adc
sbb
daa
js
pop
xor
dec
leave
test
sub
dec
lods
pop
lock
cmp
pop
push
jp
outsb
lcall
fsts
or
push
add
cmp
mov
inc
or
add
fmull
addr16
mov
les
cmp
lock
adc
pop
mov
cmpsl
jb
fnsave
or
and
shr
arpl
out
test
jecxz
cmp
sbb
cwtl
dec
inc
scas
and
pop
imul
cmp
sbb
fistpll
pushf
jp
xor
jne
addr16
mov
dec
xorl
mov
xor
push
das
xor
mulps
jo
adc
mov
pop
sbb
add
shl
push
push
mov
test
mov
fs
push
rorl
rcrl
ja
movsb
xlat
lahf
xchg
rorl
xchg
rcl
cmp
cmc
xor
xor
orl
mov
movsl
or
jle
xchg
fmull
aam
mov
gs
std
in
push
cmpsb
xchg
out
xchg
cmpsb
jbe
sbb
in
xchg
stc
or
enter
popf
jbe
xor
xchg
push
push
push
mov
or
pop
sub
or
xor
sbb
mov
repz
sub
dec
lock
add
or
dec
or
cltd
jmp
notl
imul
fxch
fcoms
or
jo
and
mov
push
rcll
das
fucomp
popa
mov
rcll
cmpsb
pop
fwait
ss
mov
mov
mov
inc
jae
cmc
rol
nop
stos
jecxz
jo
dec
push
outsl
je
jle
jle
leave
jecxz
stos
mov
mov
cmp
ja
cs
roll
pop
sahf
inc
inc
inc
iret
or
and
popa
popf
gs
pop
jb
xchg
bound
outsb
dec
orb
scas
xchg
loopne
mov
imul
jns
pop
fwait
mov
mov
popl
shlb
test
adc
ficoml
and
inc
mov
inc
mov
xchg
mov
cwtl
fcmovne
stos
push
negl
mov
loope
adc
jl
pushf
mov
pusha
inc
add
add
hlt
or
imul
and
sub
cltd
mov
fsubp
cmp
in
sbb
rcrl
mov
pop
jg
div
movsb
sub
shl
mov
leave
fldl
cmp
pop
adc
sbbl
jle
mov
jbe
jbe
and
call
adc
arpl
hlt
jge
int3
sbb
inc
jmp
iret
lock
inc
and
jp
inc
jb
jp
mov
mov
and
xor
or
jbe
xchg
sbb
xlat
dec
into
add
scas
or
lds
sub
jae
adc
aas
pop
cltd
xchg
adc
jo
mov
mov
push
dec
ljmp
dec
mov
test
adc
in
cmc
adc
push
xchg
push
xor
outsl
mov
cmp
pop
xchg
jecxz
xchg
fidivrl
cmp
pop
sub
and
push
jmp
jb
test
leave
icebp
sub
inc
or
ret
cmp
shrl
jo
lea
shll
fs
ficomps
dec
jnp
jle
sbbb
jo
pop
xor
not
sub
fwait
mov
ss
clc
scas
or
in
add
sbb
cli
xchg
jecxz
nop
push
aas
aad
popf
jns
xor
adc
jg
mov
or
mov
mov
xchg
jmp
inc
ja
rcll
call
xor
insb
sbbl
test
add
out
jmp
mov
or
xchg
int
popa
data16
repnz
jo
fidivrs
cltd
idivl
xor
dec
imul
pop
push
adc
and
add
cmc
sub
sti
sbb
xchg
jbe
loop
iret
jge
jb
loopne
xlat
xchg
shlb
mov
mov
cmpsl
cld
dec
xor
mov
int3
bswap
orl
dec
out
arpl
popf
scas
lret
push
push
xor
mov
sbb
mov
cmp
push
pusha
dec
rcl
mov
push
cmc
lock
mov
in
insb
aaa
or
stos
sarl
fs
push
push
xor
arpl
push
dec
pop
fwait
stos
imulb
setge
sbb
fcomps
and
out
cmpsl
fmull
jae
idivb
push
int
pop
pop
out
and
push
loop
jmp
dec
xchg
jo
shlb
out
mov
dec
push
adc
jne
aam
syscall
das
testb
fsubs
aad
and
ds
in
stos
push
mov
xor
sub
and
cltd
out
pop
rorb
aad
inc
outsl
addr16
adc
mov
fimull
std
test
xchg
sub
stos
mov
xor
es
mov
push
mov
fsubrs
dec
outsb
sbb
out
pop
mov
push
sub
xchg
sub
outsb
mov
jbe
mov
push
xorb
pop
sub
cwtl
int3
sub
xchg
rcrl
imul
mov
jl
loop
mov
es
daa
pop
mov
cmp
cmovno
bound
gs
hlt
int3
cltd
cmp
dec
inc
adc
push
jns
jb
dec
popa
mov
lods
out
adc
or
in
sub
and
shlb
mov
lea
push
popa
sub
jns
movsb
sbb
adc
sub
sbb
push
pop
and
add
pop
jle
mov
fstpl
jns
mov
mov
sub
pusha
mov
inc
cld
data16
push
std
mov
out
lahf
sub
pop
fldt
in
sub
add
out
cmovbe
jmp
lret
out
mov
fisttpll
mov
frstor
mov
pusha
bound
xor
push
repnz
push
frstor
and
and
jno
inc
mov
sbb
jecxz
mov
ret
xchg
jae
lea
in
pop
inc
cmpl
movsb
pop
and
mov
dec
mov
stc
roll
aad
imul
sti
sub
imul
data16
xor
xchg
add
insl
push
test
cmp
and
aad
fstpt
cmp
sub
add
test
sub
in
fistpll
push
pop
popa
inc
and
mov
adc
jnp
rol
xor
outsl
push
sarl
lock
or
pop
pop
mov
popa
fidivl
mov
inc
jns
sbb
mov
popa
aaa
mov
fisttpl
gs
fadd
push
je
movsb
jge
lds
xchg
neg
adc
adc
inc
jno
ljmp
or
sub
jnp
data16
mov
rol
sub
insb
jo
sarb
insb
fwait
and
fstpt
mov
mov
push
ja
add
cmpsb
sbb
and
nop
pop
xlat
sub
and
dec
add
add
jle
aad
mov
gs
sbb
push
mov
or
shlb
sahf
inc
jnp
sub
mov
loop
add
or
repz
jb
jns
in
lahf
fildl
frstor
xchg
fstpl
jecxz
outsb
mov
dec
aam
rorb
repz
data16
and
imul
jmp
loopne
ret
repz
js
das
clc
pop
insl
movsl
sti
pusha
rolb
inc
loope
incl
mov
in
pop
in
in
mov
mov
jno
addr16
add
mov
sbb
aas
es
jnp
icebp
hlt
xchg
cmp
das
aaa
or
cs
mov
ljmp
addr16
ret
stos
data16
jecxz
lret
aad
xchg
pop
filds
mov
sub
pop
add
sub
dec
ss
xor
mov
push
jg
push
push
mov
out
dec
cmp
mov
rcll
scas
xchg
lcall
add
pusha
sahf
xlat
pop
mov
inc
dec
movsl
xor
dec
stc
push
iret
js
mov
bound
xor
xlat
push
mov
mov
andb
shlb
push
lea
out
push
add
adc
pop
fiadds
inc
scas
cltd
pop
push
cs
mov
dec
fimuls
call
test
xor
out
movsb
fsubl
pushf
aad
fldt
cmp
insb
icebp
std
mov
sub
inc
add
insb
into
inc
nop
into
xchg
pop
mov
xor
mov
sub
or
mov
lods
mov
jecxz
or
xor
jne
fwait
and
add
shlb
dec
ss
pop
std
dec
outsb
jl
lock
jp
jae
cmp
aas
inc
insb
rorl
push
add
loop
pop
mov
cwtl
pop
leave
addr16
cmc
and
sti
test
insb
add
lahf
loope
ficoms
jns
or
mov
add
sbb
jne
adc
aaa
sub
mov
rol
or
sub
dec
sub
rorl
mov
cmp
xchg
sbb
push
dec
adc
mov
jo
dec
inc
mov
or
sti
xor
repz
scas
je
aad
cs
mov
ret
xchg
cltd
sub
jmp
movsl
pusha
pop
mov
movsb
mov
jnp
popa
das
mov
es
adc
imul
cmp
push
je
test
mov
jo
jne,pt
adc
jmp
inc
inc
std
mov
repz
push
and
fcoml
test
mov
pop
out
mov
jb
cmpb
shrl
stos
jne
push
xchg
or
xor
stos
push
jg
xor
jb
mov
and
mov
push
mov
xor
shrb
orb
push
and
rcrl
pop
xor
movsl
sub
andl
or
cmp
and
or
fisubs
jp
mov
call
je
ret
jbe
imul
les
mov
jl
mov
mov
push
sbb
mov
and
std
scas
mov
or
adc
mov
lea
xchg
fcompl
cwtl
jl
call
sub
into
mov
mov
rclb
sahf
test
movsl
sub
aam
add
xor
sub
xor
bnd
mov
pop
push
pop
jb
sti
push
mov
add
jnp
aas
xchg
jge
xchg
insl
lret
pop
xlat
jmp
dec
mov
push
ret
jmp
rcrl
out
xor
loope
sub
pusha
dec
inc
xor
push
cld
and
sub
rorb
js
jne
and
jns
decb
push
loop
std
loope
fdivp
add
popf
or
or
and
sub
inc
mov
xchg
arpl
scas
rorl
dec
cmpsl
out
in
xor
adc
xlat
push
stc
movsb
test
cvtdq2ps
jge
adc
mov
pop
and
lods
stc
dec
aam
sbb
scas
dec
pop
pop
xchg
mov
add
xchg
stos
out
stos
xchg
xchg
test
into
bound
xchg
movsb
jge
lods
cli
pop
imul
daa
popf
ds
lret
sbbl
push
fidivl
mov
sub
sbb
dec
cmp
xor
pop
xchg
add
sub
jle
mov
int3
push
loop
cmp
fldcw
outsl
fisttps
adc
jb
lcall
adc
adc
pop
nop
cmp
sarl
adc
jo
data16
fcompl
mov
xchg
outsl
xchg
outsb
mov
fists
mov
ljmp
es
out
ljmp
les
lea
test
pusha
mov
adc
sub
adc
jns,pt
scas
pop
mov
cmpl
ror
sub
js
ret
sub
jae
loope
imul
aam
jp
jb
cmp
mov
out
sbbl
sti
cwtl
sbb
int3
out
cmp
pop
mov
jbe
aad
cmpsb
dec
xchg
in
and
int
push
inc
xchg
sbb
push
push
fiaddl
mov
cwtl
stos
addr16
jae
jno
and
sahf
pop
and
mov
dec
dec
mov
mov
pop
cs
pop
inc
mov
mov
rcl
and
adc
push
inc
and
jns
inc
pop
cmp
fs
sar
cmp
std
mov
cmp
inc
jno
inc
test
jp
or
xor
xchg
add
pop
test
aam
add
cld
sub
adc
ret
dec
inc
decl
xchg
xor
outsb
in
sub
inc
nop
xchg
jmp
fisttps
popf
aaa
push
xlat
or
inc
lret
jecxz
pop
add
mov
in
jae
mov
xchg
push
outsb
add
jle
in
mov
dec
xchg
jl
pop
jae
sub
mov
jle
aad
orb
push
push
lods
sbb
cmp
lahf
cmc
push
bound
cmpsb
shrl
loope
sbb
fildl
cmp
daa
xchg
out
jmp
pop
movsb
dec
nop
into
psubd
ret
shl
or
xchg
pop
adc
jb
jg
xor
cltd
fcoml
mov
push
or
outsl
outsl
jnp
sub
negl
int
insl
sbbb
pop
into
push
jg
jle
mull
mov
scas
jl
xchg
and
loope
push
in
cmp
loopne
or
adc
sbb
stc
stc
js
mov
ret
xor
jo
jge
cmp
jne
cmp
out
popa
int3
rcrb
inc
insb
out
jecxz
sub
push
bound
fbstp
jecxz
bound
jle
andb
jb
lock
pushf
dec
nop
inc
jnp
test
cld
js
cmp
and
sub
fs
mov
mov
xor
jns
js
dec
or
ret
fdivr
mov
adc
les
pop
push
push
cltd
mov
in
in
inc
cmp
xchg
pushf
xor
xchg
enter
mov
out
loope
sbb
mov
push
add
imul
test
jb
jbe
sub
ret
jg
inc
imul
sbb
mov
pushl
jge
mov
sbbb
stos
out
sbb
pop
adc
or
cmpsb
mov
pop
mov
push
sti
std
lcall
rcll
repz
push
and
mov
and
in
sbb
sub
shrb
lods
inc
popf
mov
cltd
ret
pop
jbe
dec
dec
sbb
es
xor
cmp
loopne
xchg
jbe
add
xchg
xchg
lcall
xor
push
push
jecxz
pop
mov
push
or
outsl
xor
popa
fistpl
repnz
nop
sti
xor
dec
das
loop
jno
push
scas
sbb
sti
add
leave
call
push
dec
fmuls
movsl
int3
in
fldt
cmp
and
push
and
js
std
pop
inc
adc
insb
dec
lods
mov
fbstp
cld
sub
sbb
mov
popa
mov
shlb
incb
sbb
sarb
add
or
ja
addb
push
jl
push
stos
pop
xchg
out
insb
ret
adcl
mov
ror
rolb
pop
loopne
push
orb
push
mov
cmp
inc
jge
lods
test
lock
inc
sbb
xor
aas
outsl
icebp
mov
xor
push
inc
std
and
and
mov
jmp
daa
sub
mov
add
dec
inc
cmp
cmc
mov
daa
pop
fsts
mov
inc
stc
xchg
adc
insl
adc
scas
cmp
adcl
adc
stc
xchg
cmp
not
mov
mov
loop
cmp
lea
addr16
adcl
add
lret
sub
insb
mov
ror
or
pusha
outsb
mov
cmp
mov
fstl
lcall
cmp
jle
cs
into
add
js
loope
mov
add
push
or
pop
push
pop
stos
inc
pop
dec
imul
inc
dec
stc
and
pop
push
js
dec
cs
in
jbe
out
mov
xor
cmpsl
mov
cmpb
lods
dec
into
add
xorl
xor
xchg
lods
dec
pop
pop
inc
aaa
sub
push
add
pop
cmpsb
cwtl
fcmovu
inc
sub
push
jbe
adc
jb
popf
ljmp
in
test
sub
push
int3
daa
or
imul
rcll
cmp
aad
fsts
mov
pop
sti
and
popf
xchg
pop
je
xchg
pop
pop
and
push
pop
insb
aam
std
push
fcomip
cmp
test
pop
imul
xor
fmul
add
xchg
push
shr
loop
test
fnstsw
daa
loopne
pop
dec
sti
push
mov
mov
mov
mov
lods
mov
jp
mov
or
pop
mov
sbb
add
xchg
pop
inc
mov
lea
leave
xchg
xchg
mov
dec
fmulp
lds
mov
nop
pop
ss
pop
adc
pop
sti
sub
das
in
dec
bnd
cld
or
xlat
fidivrl
xor
xor
imull
add
add
mov
pop
mov
in
pop
enter
in
xor
rcrl
mov
inc
dec
pop
add
jno
test
mov
pushf
dec
push
pop
push
add
cmp
lcall
xchg
adc
cmp
ljmp
in
sbb
pop
inc
lock
js
insl
push
lods
push
iret
push
mov
stc
inc
dec
adc
jecxz
xchg
mov
jg
lds
push
push
outsl
scas
adc
push
cmpsb
divl
xlat
xchg
mov
lods
fcoms
fiaddl
dec
cmp
jge
bound
stos
cli
pop
es
or
jge
rorl
test
cmp
fs
nop
push
or
sub
jp
jp
xchg
bound
pop
in
or
push
scas
mov
or
cmp
xchg
lock
scas
push
mov
inc
push
and
scas
dec
fcompl
inc
xchg
mov
jo
push
sbbl
inc
dec
std
mov
or
lret
inc
cmpsl
fdivrs
and
cmpsl
xchg
popa
xor
lods
xchg
xor
push
sarb
add
jp
inc
jg
sbb
pop
rolb
mov
rol
cmpsb
loop
imul
cmp
mov
inc
pop
sahf
lahf
jmp
repz
xor
cltd
repnz
sub
inc
imul
dec
xor
aaa
mov
flds
pushf
pop
lods
lahf
in
mov
mov
jne
jecxz
add
xchg
jbe
into
std
xor
mov
ficoml
mov
ret
jecxz
stos
repnz
fldcw
pop
adc
xchg
mov
sub
divps
add
lea
inc
pop
mov
inc
cltd
fmul
adc
jb
cli
cmpsb
test
mov
push
inc
cwtl
icebp
aam
mov
dec
fwait
inc
pop
inc
imul
adc
cmpsb
xor
out
sub
mov
mov
test
movl
mov
shlb
in
jecxz
or
mov
jb
jg
pop
imull
lods
lret
enter
lea
es
jmp
inc
shrb
aad
pop
clc
repz
les
daa
cmp
push
in
jo
repz
test
xchg
push
dec
icebp
xchg
jle
negl
sbb
sub
sub
loop
mov
dec
mov
dec
sbb
shlb
repnz
inc
fistl
fs
sub
movsl
repnz
ljmp
pop
push
decl
loop
or
icebp
aaa
sub
lret
sbb
call
push
add
jmp
insb
imul
pop
mov
test
icebp
mov
jecxz
rorl
sti
inc
test
xor
movsl
lods
pop
testl
fcoms
sub
mov
push
cmp
sub
adc
sub
jb
dec
ret
mov
jae
daa
repz
imul
ret
mov
in
cs
mov
clc
mov
insb
xchg
cmpsl
pop
lock
jne
jg
mov
sbb
jo
or
adc
dec
lret
pop
xchg
mov
jp
push
in
xchg
daa
sub
mov
sbb
fmull
xlat
pop
xchg
test
je
cmp
ret
orl
repz
out
mov
test
loop
sub
pop
lcall
pop
test
xchg
jmp
add
pop
cld
int
out
mov
sub
loope
sbb
adc
xor
cmc
loopne
loop
in
int3
imul
xchg
repz
ljmp
xchg
js
jae
mov
cmpsl
pop
popa
scas
std
das
mov
cmpsl
das
mov
pop
cli
xor
jge
jge
mov
jns
ss
jecxz
or
in
add
aam
xor
test
jne
imull
xchg
or
mov
jno
rorb
imul
mov
mov
or
mov
pop
ret
adc
push
stos
shlb
fs
jl
int3
mov
mov
jl
lahf
icebp
adc
mov
neg
xlat
rcl
adc
cwtl
roll
loop
fists
out
call
movsl
xchg
mov
jmp
inc
divl
sbb
xchg
jecxz
insl
cmp
loopne
shll
mov
lahf
pop
lods
movsl
aam
mov
cmp
je
mov
lcall
lea
ljmp
ljmp
and
dec
sub
mov
jg
mov
mov
sbbl
out
ror
orb
repz
or
and
sub
pusha
sub
dec
add
cmpl
and
pop
push
shlb
jmp
cltd
or
int
popa
imul
add
paddusb
es
dec
sub
mov
mov
popa
and
dec
enter
sub
xor
pop
shl
adc
xchg
in
mov
add
mov
aam
shll
das
mov
call
dec
popf
xchg
or
aas
dec
inc
mov
and
jns
daa
mov
movsb
cltd
out
sbb
pop
jp
scas
cmp
stos
push
add
in
test
pop
mov
inc
jmp
out
mov
jne
dec
mov
imul
add
push
lds
int
shr
loopne
mov
xor
loop
mov
int3
pop
ss
xchg
pop
fstl
inc
call
or
les
adc
inc
js
int
hlt
pop
inc
inc
mov
pop
cmp
add
jo
cmp
cmp
sub
mov
mov
out
push
push
pop
adcl
in
jl
or
repz
xchg
jnp
jecxz
inc
add
out
ret
xor
sbb
in
cmp
jne
add
aad
mov
lods
inc
xorb
iret
call
insl
xchg
aad
std
mov
enter
jb,pt
call
lret
leave
xchg
cs
rorb
insl
fsubr
dec
movsl
pop
popa
cltd
push
mov
jp
jnp
adc
hlt
sti
cmp
jmp
js
push
in
rorl
mov
xlat
cli
rcl
jb
arpl
sbb
mov
xor
dec
push
mov
adc
out
and
scas
cmp
outsb
mov
dec
repnz
int3
add
mov
mov
sar
inc
push
and
xchg
das
jb
stos
mov
fwait
cwtl
cmp
and
jbe
dec
mov
or
add
ljmp
nop
ret
lret
mov
dec
cmp
pop
ja
popa
adc
mov
pop
or
or
mov
jns
and
mov
loope
jge
xor
sub
mov
dec
setp
adc
in
test
jmp
adc
imul
dec
and
xor
fwait
lahf
mov
mov
push
adc
enter
test
loop
imul
push
xchg
insl
push
addl
data16
stos
push
loop
jg
sub
xchg
int
jg
pop
in
mov
shlb
ds
inc
test
sub
ja
cmp
pop
xchg
inc
in
out
ljmp
lahf
cmpsl
inc
subb
mov
push
xlat
xchg
popa
loope
fisubs
nop
out
cmp
inc
daa
sub
cs
sub
icebp
xchg
push
in
or
sbb
dec
jg
ret
and
rclb
movsl
mov
out
or
lock
aad
sbb
les
jge
mov
adc
pop
sbb
fdivr
sarb
cmp
jnp
rorl
test
inc
cmp
rorl
icebp
cmc
pop
ret
out
dec
push
dec
sbb
fs
mov
adc
push
das
lahf
mov
in
arpl
jno
dec
xchg
dec
iret
test
and
stos
fwait
lea
push
int3
pop
add
jb
and
cmp
insl
jbe
icebp
add
clc
sbb
sbb
sbb
xchg
mov
outsl
in
mov
mov
adc
pusha
std
pop
xor
or
shr
sub
jl
popf
xlat
ficomps
mov
adc
xor
ret
in
xchg
push
mov
push
xchg
add
subb
cmpsb
imul
mov
leave
lret
hlt
jge
sti
icebp
xchg
mov
sub
cld
popa
and
jae
pop
xchg
dec
mov
mov
icebp
adc
sub
sbb
fldt
xor
add
outsl
cmp
in
xchg
xor
inc
or
aam
push
pushf
adcl
mov
stos
push
cmp
scas
xor
imul
push
sub
pop
sti
sbb
lock
add
lretw
gs
es
imul
mov
lcall
mov
int3
xchg
dec
aaa
mov
or
jle
enter
movsl
sbbl
add
cwtl
addl
shll
add
gs
repz
xor
in
xchg
cld
mov
mov
cmpsb
mov
fimuls
push
gs
bound
inc
pushf
rcll
adc
jae
dec
mov
jbe
ja
mov
lea
dec
or
jb
pop
xchg
stos
cmpsl
jecxz
sbb
dec
dec
and
and
dec
cmp
ret
add
inc
mov
addr16
popf
cmp
pusha
rclb
arpl
push
call
lahf
mov
pop
testb
pop
mov
push
fstps
popl
mov
adc
push
push
fs
fistl
sub
add
into
jge
cmp
cli
dec
xor
cs
pop
repz
fcoms
ret
out
mov
push
jnp
mov
arpl
pop
and
mov
push
xchg
mov
lret
in
je
out
jo
sub
das
xchg
mov
mov
in
into
out
dec
pop
sub
or
call
push
sahf
jle
fucom
xor
adc
test
fdivs
inc
fwait
mov
sarl
roll
or
cmp
imul
xchg
ret
xlat
out
lea
icebp
sarb
inc
sub
mov
leave
clc
jle
mov
jle
call
aam
mov
decl
rcll
jecxz
pop
test
or
fnstcw
xchg
std
xchg
ret
mov
out
jbe
jo
jo
call
pop
fsts
outsl
jo
js
jg
int3
push
push
ja
push
jnp
dec
stos
repnz
mov
cmp
das
xor
lock
jo
or
in
jge
pop
imull
repz
dec
adc
sbb
xchg
sub
mov
inc
cmp
dec
xchg
or
inc
mov
mov
pop
les
roll
push
mov
cmp
push
movsl
jnp
addr16
cli
shll
sub
and
fnstsw
insl
fnstcw
in
int3
sar
mov
gs
xchg
cmp
cmpsl
das
dec
or
xlat
push
test
ss
sarl
lcall
mov
in
loop
mov
mov
loope
pop
sub
jecxz
push
dec
add
mov
jns
dec
mov
or
mov
adc
adc
stos
or
adc
in
pop
fisubrs
js
mov
cltd
or
ficomps
repz
in
dec
aam
ds
fwait
insb
inc
jmp
icebp
add
sub
outsb
outsb
ficoml
and
dec
mov
divl
add
ror
or
jae
fsub
outsb
sub
mov
xchg
aaa
das
pop
fidivl
jne
sahf
cmpb
xlat
test
mov
testl
gs
out
stc
push
iret
and
pusha
xor
loop
ds
stos
out
adc
in
adc
stc
int
push
movsb
xchg
mov
xor
push
test
pop
aad
mov
popf
call
pushf
mov
add
jo
int3
ret
ss
subb
add
jo
sbb
inc
scas
lcall
jno
pop
daa
xchg
es
scas
lcall
stos
mov
or
ja
pop
std
out
mov
sbb
cwtl
dec
lds
mov
leave
xlat
pop
stos
sbb
and
aas
mov
jbe
sbb
nop
aam
jbe
lods
shll
dec
dec
test
adc
xor
mov
jge
js
push
push
jb
in
out
imul
pop
xlat
mov
pop
int3
dec
scas
negb
inc
icebp
mov
push
cmp
insl
mov
xchg
xchg
daa
in
lods
mov
dec
mov
inc
fbld
mov
xchg
jle
push
leave
clc
jmp
and
repz
mov
mov
cltd
mov
pop
loope
dec
cmc
cmpsl
jbe
outsl
or
fdivr
cmp
inc
or
lcall
rcl
test
outsl
xor
dec
sbb
test
cld
mov
mov
jnp
andb
ror
pop
cmpl
test
cmc
sahf
adc
cmc
or
cwtl
les
xlat
rorb
into
push
pop
xchg
inc
pop
nop
xchg
movsb
mull
push
cld
mov
cmp
jno
xchg
cmp
dec
sbb
sbb
jmp
add
xchg
insb
test
xchg
cwtl
or
dec
fadds
pop
pop
imul
addb
mov
repnz
into
inc
xor
cwtl
in
cld
cmpsb
or
mov
and
sub
sbb
jg
push
xor
aas
out
scas
cmpsb
xchg
aad
xchg
xor
ret
fs
add
je
cmp
adc
aam
push
push
push
push
lret
cmc
rcrb
mov
add
rolb
test
add
mov
out
push
int3
inc
packuswb
pop
dec
adc
xor
mov
aaa
push
out
subl
ret
ja
arpl
ret
daa
jae
shrd
mov
xor
or
popf
pushf
push
push
mov
mov
mov
imul
std
xchg
ret
dec
aaa
lea
cmp
sbb
jmp
xor
ret
test
cld
in
sbb
jns
pushf
mov
push
je
cmpsb
cld
idivl
adc
lret
mov
jmp
cmpsl
sbb
lds
shl
dec
cwtl
test
fimuls
xor
mov
jl
mov
lret
out
or
push
rol
daa
jne
movsl
add
cmp
iret
sbb
in
and
sti
adc
shlb
cmp
incb
jne
xor
mov
aam
nop
inc
out
popa
loopne
mov
pop
mov
xor
fldt
pusha
or
filds
incb
ret
or
aam
outsb
sub
mov
test
ret
lret
insb
jle
adc
jo
pmullw
cld
int3
xlat
out
ja
cltd
js
subl
or
andb
insl
adc
push
pop
sbb
mov
xchg
pop
and
lds
test
int3
cs
lods
inc
lock
cltd
dec
mov
sub
dec
mov
or
addr16
sub
sbb
dec
cmc
insb
push
mov
addl
xor
pop
or
out
xchg
dec
fistps
or
jo
inc
mov
popf
jb
shlb
jg
xchg
test
icebp
push
lret
test
stos
push
adc
and
adc
inc
ja
adc
out
ja
cltd
or
test
xor
inc
sbb
inc
xchg
and
jecxz
push
mov
out
dec
mov
movsl
insb
xchg
jmp
jbe
jns
outsb
adc
push
sub
mov
sbb
ret
sbb
cmp
dec
pop
mov
fs
dec
xor
popa
cmp
std
fucomp
scas
pop
out
insb
push
inc
push
jnp
mov
mov
shlb
mov
and
les
cmp
sbb
mov
ja
pop
sub
jb
scas
xor
or
mov
test
adc
mov
cmp
inc
fidivrs
addr16
sub
dec
inc
dec
push
iret
cwtl
or
mov
cmpsl
aas
sub
mov
adc
dec
mov
je
pop
repnz
sub
notl
ss
add
lods
mov
sub
push
insb
dec
iret
mov
sbb
mov
and
insl
aam
push
dec
xchg
int
pop
mov
jo
mov
test
mov
ds
mov
popa
sbbl
std
and
jns
add
add
enter
jecxz
ja
cmp
xor
stos
or
stos
clc
lcall
add
jmp
fsts
loope
and
cmp
outsb
xchg
xchg
mov
mov
push
hlt
cltd
xchg
push
xor
or
jbe
mov
repnz
andb
mov
sbb
dec
int3
sti
call
sub
jne
cmp
ljmp
test
add
ljmp
inc
and
adcb
add
sbb
jmp
lock
jmp
push
pop
sub
dec
ret
inc
rclb
cli
sub
pop
lcall
pop
iret
xchg
push
sub
xor
or
mov
xchg
cmpsb
mov
xlat
inc
ds
lret
mov
push
mov
repnz
sbb
pop
push
adc
add
push
in
push
rcll
and
adc
cmpl
push
mov
das
cld
loope
xlat
adc
in
ja
cltd
mov
add
nop
in
cmpsb
jne
loope
andb
lahf
pop
cmp
mov
and
pop
cmpsb
pop
fwait
mov
shrb
and
movsl
lods
push
sete
out
xor
popf
and
xchg
in
cli
inc
aas
lock
lret
adc
sub
lods
ret
sub
mov
mov
rcr
mov
in
into
icebp
enter
cld
clc
mov
inc
xor
in
xor
aad
or
mov
leave
push
out
pop
cld
jb
inc
lods
daa
loop
cmp
jb
pop
or
cmc
push
pusha
cmp
adc
shll
jnp
pop
cmp
sar
sub
fwait
pop
lcall
idivb
mov
mov
mov
shlb
cld
mov
pop
ds
addr16
adc
cmp
fcompl
les
xor
xlat
push
add
xor
enter
xor
test
dec
outsl
mov
push
push
lahf
sbb
mov
cwtl
pop
mov
pop
jg
imul
lods
jae
js
out
sub
xchg
push
nop
lds
or
cmp
cmp
insb
mov
push
mov
jnp
and
divl
in
cmpl
adc
test
pop
jp
mov
cmp
dec
mov
pop
outsl
xchg
pushf
ljmp
pop
sbb
sti
pusha
or
sub
xchg
sbb
stc
in
adc
add
pop
jl
outsb
icebp
faddp
cmp
dec
jp
fildl
repz
and
imul
and
mov
mov
sub
imul
jns
sbb
daa
mov
xchg
mov
pop
ret
outsb
pusha
or
sbb
in
aam
adc
adc
not
sbb
mov
pop
lret
sbb
outsl
pop
fstps
pop
vpcmpgtb
sahf
bound
sar
jnp
psrlq
lock
mov
push
int3
cs
imul
popf
mov
xchg
fsubrs
or
or
sub
lahf
in
adcb
mov
or
xlat
cmp
out
sub
and
xor
cwtl
inc
push
jp,pn
xor
xchg
out
fdivl
adc
xor
inc
push
dec
test
xor
insl
mov
push
in
cmp
imul
ja
dec
sbb
mov
test
mov
pop
cmpsb
jge
into
or
pop
jmp
test
push
mov
mov
pop
out
out
cmc
lods
mov
imul
cmp
push
test
or
mov
xchg
adc
mov
push
popf
jmp
cwtl
pop
mov
inc
loope
pop
mov
push
mov
mov
imul
pop
jbe
cld
stos
jb
push
xor
inc
cmc
fidivrl
cmpb
xchg
dec
movsl
jo
ret
xchg
lods
ja
repz
mov
sbb
repz
in
push
lods
or
fstl
cltd
stos
jbe
cltd
or
fsubl
add
mov
mov
sub
pop
add
das
lds
popa
movsb
pop
inc
mov
cmpsb
loope
ljmp
mov
mov
ss
lea
push
jae
push
and
rcrb
jb
bound
ret
xchg
xor
imul
cmp
rcll
cmc
jb
ret
cli
loope
test
xor
push
scas
imull
dec
idivb
cmp
stos
pop
jo
cwtl
cmp
inc
push
and
sbb
or
sbb
aad
xor
lcall
aas
xor
repz
sbb
pop
jle
cmp
fstpl
dec
je
jo
fnstenv
push
int
push
popf
setge
mov
and
into
push
das
outsb
es
dec
loope
out
test
or
sti
adc
jmp
jne
mov
mov
dec
fistpl
sub
ds
lock
repnz
aaa
pusha
push
adc
mov
inc
jne
test
add
jl
push
iret
idivb
cmpsb
jns
lods
lcall
sbb
hlt
shll
add
xchg
cli
jne
int
into
movsl
daa
push
insb
insl
jmp
jge
inc
jno
or
popa
push
rol
ret
fildll
dec
adc
xchg
push
sbb
inc
pop
cmp
xor
push
mov
orl
test
repz
pop
cld
test
push
add
sti
ljmp
mov
push
xchg
sub
repnz
jecxz
int
dec
test
movsb
stc
rorb
in
and
imul
fadds
dec
cmp
dec
loopne
pop
add
je
jbe
outsl
xlat
cmp
pop
push
addr16
jge
ret
pop
in
dec
xchg
call
cld
sbb
add
add
inc
fdivp
ret
mov
mov
loope
test
ljmp
cmpsl
mov
push
popf
pop
jmp
xor
sub
out
add
xor
pop
mov
sbb
inc
adc
jg
std
add
mov
je
cld
or
push
sbb
scas
add
ja
scas
gs
lock
test
fcoms
out
dec
mov
loope
fwait
mov
sub
or
lds
jb
notb
jo
and
and
pop
or
adc
sub
pop
jg
push
jae
xchg
nop
push
xchg
int
mov
fistpll
mov
adc
lods
xchg
sub
push
sub
ffreep
sub
pop
jns
lods
dec
mov
push
out
shr
push
xchg
dec
sub
jb
dec
imul
pop
ret
fisubl
inc
mov
lcall
scas
into
or
ror
push
jno
mov
hlt
jmp
je
jg
push
sti
and
adc
data16
dec
bswap
pop
out
lds
vmread
or
or
cmp
sahf
movl
pop
add
sub
sahf
aaa
lcall
enter
push
mov
cmp
out
pop
into
dec
out
in
mov
fnstcw
ficompl
inc
jle
adc
in
bextr
mov
add
xchg
std
add
orb
and
ljmp
es
cmp
mov
jns
dec
das
mov
ficoms
js
xchg
jae
movb
push
mov
mov
lods
lods
mov
sbb
bound
outsb
aam
push
adc
in
neg
dec
add
sbb
cli
mov
movsl
movsl
loopne
or
and
lcall
mov
xor
sub
movsl
fildl
sti
jbe
pop
mov
scas
inc
xor
mov
aas
sub
movsl
jo
std
sarl
xlat
jb
mov
mov
adc
out
mov
imul
stos
mov
mov
cmp
xchg
data16
jbe
xchg
shll
idivb
push
in
mov
int
pmulhw
cmp
mov
repnz
notl
fistpl
xor
inc
or
shrl
mov
sbb
icebp
cmpsb
imull
imul
push
cli
mov
push
in
ljmp
dec
out
push
lea
mov
out
je,pn
hlt
add
jbe
pusha
inc
ja
pop
inc
stos
xchg
outsl
sbb
pop
cmpsb
jp
outsl
sub
sub
rcrl
sub
xchg
lret
xor
add
pmaddwd
sbb
out
fs
mov
mov
cmpsl
sub
push
dec
jle
or
dec
mov
mull
sti
es
pushf
xchg
daa
adc
or
cwtl
loopne
rolb
pop
insl
lock
test
inc
ss
cmpsl
push
dec
push
cwtl
dec
stos
out
insl
outsl
icebp
sub
add
mov
inc
add
lods
mov
jae
pusha
sbb
icebp
mov
inc
cmp
push
mov
dec
push
and
dec
or
sub
sub
add
add
cmpsl
mov
dec
xor
inc
xchg
cltd
or
outsb
push
xchg
outsb
or
test
repz
ret
inc
inc
nop
into
inc
push
sub
setno
ss
push
arpl
stos
xor
mov
dec
add
jb
sbb
in
or
dec
xor
xchg
sbb
mov
sub
mov
cmc
test
lods
repnz
rorb
and
xor
or
cmpb
mov
fidivrl
mov
sub
push
test
dec
adcb
adc
jns
mov
es
popf
pop
mov
orb
push
mov
cmp
push
mov
scas
lret
std
cwtl
dec
out
sbb
sbb
jl
mov
push
daa
jp
xchg
sbb
push
mov
insl
add
inc
xchg
loope
lods
movsl
xor
ficomps
iret
push
cmc
xchg
pop
daa
in
into
mov
mov
sub
sbb
xor
cmpsl
sbb
adcl
adc
es
test
jle
sub
dec
dec
push
or
pop
or
pop
mov
push
cmp
dec
mov
sahf
into
pop
and
inc
into
mov
stc
inc
lea
mov
cmp
imul
dec
ret
add
inc
cwtl
pop
mov
ds
mov
pop
in
cli
ret
adcl
add
aas
imul
lret
xlat
jl
shrl
dec
sarb
andl
fidivrl
outsb
mov
inc
push
outsl
push
push
mov
inc
orb
out
push
jmp
out
clc
xchg
bound
sbb
inc
jge
scas
mov
insl
imul
fistps
lods
imul
outsb
inc
lods
dec
jb
mov
pop
xor
test
hlt
aad
lahf
add
add
jnp
dec
fmuls
dec
adc
orl
ret
push
lahf
stos
rorl
ret
cmp
mov
adc
pop
loop
xor
inc
repnz
cli
repz
or
mov
std
addb
cltd
xchg
bound
test
lret
xchg
ja
stos
inc
repnz
call
jne
mov
mov
adc
out
ja
adc
ljmp
shlb
inc
popa
outsb
arpl
icebp
jnp
add
fadd
pop
nop
xor
mov
jno
xchg
jnp
mov
mov
add
out
test
pop
xchg
in
lahf
inc
js
push
pop
mov
add
pop
dec
mov
dec
ljmp
fildll
lahf
jge
xchg
clc
in
fcoml
xlat
aam
je
add
jno
jge
xchg
in
mov
bound
arpl
mov
mov
bound
push
dec
mov
xchg
xchg
push
mov
jp
xchg
lret
mov
push
mov
mov
cmc
out
ret
mov
dec
stos
mov
adc
sub
mov
mov
sub
jno
push
inc
mov
mov
mov
fstl
and
xor
xor
jg
mov
icebp
jecxz
jnp
fdivrs
jp
rorb
pop
add
mov
xchg
jae
ljmp
cmpsb
mov
jp
sahf
xchg
mov
icebp
pop
shl
stos
push
sub
push
mov
and
sbbl
or
jmp
jne
aad
xlat
pushf
test
test
test
dec
inc
fsub
pop
sbb
jo
out
mov
insb
or
mov
cmp
inc
ror
pop
test
fdivr
push
xlat
or
aas
ljmp
aaa
movsl
inc
dec
js
jmp
jmp
xchg
mov
fiaddl
inc
pop
xor
push
rcrb
sub
aaa
inc
mov
and
mov
adc
xor
dec
test
call
shll
mov
cs
sbb
loop
sbbb
inc
xchg
jle
pop
insl
add
xchg
xor
negb
inc
jno
lret
stos
adc
sub
rolb
mov
dec
push
jae
imul
int3
icebp
pusha
add
ret
inc
enter
imul
sti
imul
test
out
mov
pop
xchg
lret
sahf
pop
mulb
xchg
push
jnp
ficompl
rcl
out
mov
es
sub
mov
ret
xor
hlt
sub
data16
rorb
call
fstpt
mov
into
mov
bound
xchg
xor
jae
mov
bound
inc
push
lea
jl
shl
mov
icebp
loope
jno
inc
lock
jb
adc
in
push
cmp
mov
jecxz
add
xor
inc
pop
jl
mull
xchg
lea
rcrl
incl
sub
add
js
sbb
ljmp
and
mov
push
addl
pop
push
jmp
cmp
cmp
pop
out
pop
pushf
int3
or
jno
mov
xchg
and
xor
cmp
shll
xor
inc
pusha
dec
mov
inc
cmp
xor
inc
repnz
sarb
cwtl
mov
movsl
rclb
push
fs
jnp
ja
jb
shl
cmpsb
and
outsl
lret
and
and
daa
js
outsl
and
jns
cmpsb
sub
repnz
push
es
sub
test
push
popa
adc
sti
hlt
pushf
jno
mov
mov
push
pop
std
fisubl
aas
and
stc
pop
xchg
adc
xchg
sbb
addr16
pop
out
dec
or
out
inc
push
dec
sub
cmp
int3
mov
test
sbbb
push
jl
push
mov
mov
rcrl
or
popf
push
add
test
hlt
dec
inc
and
mov
adcl
mov
dec
jp
repz
xor
stos
out
jbe
jle
nop
shlb
ljmp
xor
in
jg
lret
incb
jnp
xor
pop
mov
sub
dec
testl
ret
movsl
jns
jne
xchg
aaa
mov
sbb
aam
jbe
pop
sbb
fninit
aaa
xchg
call
mov
push
mov
rolb
mov
and
and
mov
enter
dec
mov
out
rcll
movsl
mov
cmp
movsl
nop
test
lods
mov
leave
test
cltd
mov
fiadds
mov
dec
fadds
add
test
inc
mov
and
cld
dec
and
popa
icebp
lea
test
ja
scas
in
ljmp
adc
adc
lods
push
fnstenv
fbstp
cmp
es
in
cmp
cmp
sbb
mov
push
sahf
mov
into
std
sub
jno
into
jl
jo
cmp
dec
pop
inc
adc
mov
movsl
mov
mov
in
mov
dec
and
cmp
scas
leave
movsb
add
out
xor
xlat
js
add
xchg
mov
pop
ljmp
das
pop
mov
pop
mov
es
mov
ret
add
test
or
push
adc
xchg
and
dec
imul
jae
or
out
mov
fwait
jp
jns
repz
jge
outsl
imul
aaa
push
xor
mov
out
fwait
or
and
xchg
inc
xchg
xor
dec
hlt
test
xchg
inc
fwait
pop
cli
mov
popf
xchg
jg
movsb
xor
mov
mov
repnz
cmp
movsl
xchg
outsl
mov
ret
push
mov
stos
sub
shll
cmpsb
add
xchg
fstpt
pop
int
xor
jb
nop
lea
inc
mov
and
repz
or
cmp
inc
pop
out
das
nop
fistl
call
notb
addr16
es
sbb
nop
imulb
ljmp
push
loopne
out
jnp
lcall
insb
jae
push
shll
mov
jmp
dec
mov
mov
rep
and
sbb
push
imul
fimull
xchg
movsb
test
cmp
push
xlat
out
sbb
cltd
nop
popa
xor
rcrl
je
mov
je
mov
ffreep
insb
out
popf
imul
mov
cmp
in
fdivp
mov
sub
ret
subl
adc
jnp
mov
je
inc
add
mov
mov
inc
inc
sbb
xor
mov
movsb
mov
test
add
cmpsl
dec
push
jecxz
dec
and
sbb
cmp
stos
lods
cmp
loope
stos
daa
fnsave
inc
arpl
ja
mov
lods
and
xor
fstps
test
xor
in
cmpsb
cld
xchg
mov
sub
push
clc
jno
adc
ret
es
repnz
and
jno
inc
push
jecxz
andl
adc
popa
adc
xchg
mov
dec
cs
loopne
pop
jecxz
jo
xor
jge
insl
jbe
test
inc
dec
pop
pop
in
subb
fimuls
mov
fistps
or
rcr
std
cmp
lods
dec
ret
outsl
mov
repnz
repz
std
mov
adc
dec
imul
cwtl
dec
enterw
mov
popf
test
lea
adc
mov
xor
into
pop
scas
call
push
push
ficomps
aas
mov
and
pop
and
sbb
hlt
dec
xlat
xchg
adc
mov
out
out
adc
test
xlat
divb
stc
jl
mov
stc
sbb
addb
fcoml
test
add
xor
stos
xchg
js
pop
cmc
je
and
pop
sbb
inc
testb
inc
cmp
xchg
adc
inc
enter
cltd
icebp
xchg
cmp
mov
in
in
dec
js
pop
rorl
loope
push
into
push
push
cmc
ja
push
btr
scas
mov
add
test
jge
movsl
push
shl
xlat
add
sbb
enter
repz
lods
jp
mov
jg
outsl
scas
cltd
pop
xor
jmp
fistpl
sbb
mov
mov
jb
mov
jmp
adc
loop
subb
add
inc
pop
cmpl
mov
lahf
cmovnp
rcrb
in
mov
scas
lea
vpmadcswd
mov
cmp
es
mov
jp
orl
jnp
pop
push
pusha
pop
iret
push
or
inc
dec
pop
pop
sub
repnz
inc
sbb
push
xchg
sbb
jl
mov
jmp
sbbl
mov
xchg
xchg
ret
das
sti
and
movsb
dec
cmp
addl
mov
fucomi
and
in
and
adc
pop
es
int
mov
cmp
mov
stos
shlb
gs
dec
dec
in
mov
cld
jg
faddl
fs
push
fidivl
or
mov
testl
mov
shlb
push
pop
rclb
cltd
or
jl
lret
jle
repnz
mov
or
jle
inc
jecxz
push
xor
mov
arpl
arpl
cmp
sub
jnp
dec
xchg
mov
es
push
jg
sub
outsb
push
int
mov
inc
sarl
test
imul
daa
cli
and
inc
loop
jg
jb
insb
shlb
lahf
xchg
mov
bound
inc
xchg
cmp
fisttps
sarl
push
lock
sub
mov
pop
jmp
divb
arpl
imul
inc
pop
es
mov
fmull
shlb
shlb
adc
clc
mov
out
dec
into
add
rep
adc
mov
mov
sbb
idiv
clc
sbb
out
notb
pop
xchg
pop
mov
mov
mov
popf
lcall
xor
mov
stc
pop
sub
add
fisttps
add
sbb
jp
pop
xchg
sub
push
lcall
mov
scas
lret
pop
inc
sbb
rcrl
stos
jecxz
adc
imul
mov
sbb
fbld
std
ss
or
cs
movsb
ret
dec
xchg
push
jnp
cmpsl
lret
jbe
mov
int3
pop
data16
les
mov
lods
fidivrs
imul
stos
and
mov
mov
mov
cwtl
add
jns
jno
movsb
ja
jo
pop
xlat
out
lret
xor
rcrb
jl
inc
jo
add
fs
adc
add
mov
mov
lret
lods
mov
push
jmp
add
stos
inc
xor
xchg
ja
ficoms
mov
cmc
sti
mov
fmuls
mov
out
pop
sbb
rclb
loope
xor
mov
insb
ss
and
subb
jmp
inc
repnz
lret
cmp
cwtl
repz
sub
loop
sbb
pop
or
icebp
mov
jl
stos
dec
shrl
add
ds
mov
pushf
cmp
sti
adc
xchg
xchg
xlat
cmp
xchg
xor
sbb
jge
pop
mov
bound
bound
dec
lahf
jge
enter
rcr
out
je
mov
dec
lock
dec
lds
xchg
xchg
lock
pusha
scas
xor
int3
push
ret
mov
enter
popa
xor
fmulp
xchg
aas
mov
outsl
inc
pop
and
mov
xchg
fs
sahf
sub
js
insl
jno
or
jb
push
in
jno
pop
fadd
sub
fnsave
in
xor
inc
out
in
test
shr
sbb
push
ljmp
mov
adc
or
dec
xor
decl
xor
jmp
push
shrb
or
or
mov
sbb
xchg
dec
mov
xor
stos
adc
jg
mov
and
test
orl
jne
sbb
call
adc
in
push
xchg
cmpsb
pusha
test
cmpsb
lret
mov
stos
mov
jae
jl
ds
mov
shll
cmp
sar
and
push
rorl
adc
sbb
movsb
repnz
outsl
adc
dec
jnp
rol
add
ror
lret
jmp
sub
or
stos
cwtl
hlt
adc
out
outsl
mov
icebp
or
mov
or
out
dec
test
cwtl
loop
out
jbe
mov
mov
jecxz
sub
inc
lret
in
mov
dec
push
mov
es
lret
ja
dec
cmp
jle
mov
mov
arpl
xor
stos
enter
shlb
push
adc
dec
iret
and
push
addb
push
adc
push
sbb
push
cmpsl
rorl
daa
and
call
push
push
adc
ret
and
mov
jae
sbb
sub
in
inc
pop
and
lret
fwait
int
mov
inc
test
into
in
adc
lahf
sub
jo
roll
iret
dec
jecxz
gs
xchg
pop
lahf
pop
stc
and
xchg
sub
sbb
out
mov
sub
or
in
adc
rol
into
and
cmpsl
mov
xchg
sub
pop
mov
iret
mov
pop
xor
inc
xchg
out
loopne
repnz
inc
push
ret
sub
push
insb
cmp
mov
xchg
jmp
dec
test
aad
pop
inc
test
mov
mov
mov
or
into
pop
xlat
daa
mov
rcll
lds
lcall
add
leave
inc
xchg
pop
and
add
fwait
add
negb
outsl
addb
jg
sub
mov
insl
adc
je
dec
cmp
dec
xchg
scas
ljmp
lret
jb
scas
lods
jo
js
and
push
or
fists
out
scas
push
pop
testb
cmp
pop
add
xor
push
mov
sahf
xchg
into
jmp
pop
cmpsl
jns
ss
ret
insb
jl
inc
xchg
mov
leave
xchg
mov
clc
xchg
and
scas
lock
adc
rclb
jg
ret
add
mov
pop
mov
xchg
or
jns
pop
mov
fidivrs
xor
and
stos
enter
inc
iret
mov
int
bound
les
aam
cwtl
mov
or
fwait
or
mov
cmp
nop
mov
aaa
cs
cpuid
popa
cmp
out
loopne
push
xchg
rcr
xor
je
int
jg
mov
lods
sbb
test
jle
mov
outsb
xor
xor
mov
add
in
leave
decl
or
int3
dec
dec
pop
xor
pop
gs
xchg
or
mov
cmp
int
and
dec
pop
inc
jg
shr
or
int
cmp
inc
jmp
loope
xchg
fcoms
aas
xor
idivl
jb
pop
dec
rolb
add
ret
mov
mov
cld
negl
pusha
mov
cmc
cmpsl
xor
jecxz
inc
cmp
repnz
xor
mov
loope
in
mov
popa
in
push
pop
shl
xchg
jne
and
pop
add
pop
jmp
jb
ljmp
cmp
sbb
fsts
leave
cmp
test
daa
lret
sti
cmpsl
outsb
cld
aas
mov
or
xlat
insl
cwtl
test
pop
cmovge
xchg
jo
aaa
in
stos
filds
and
data16
jne
jp
test
je
mov
jmp
ds
cltd
movsb
xchg
sbb
in
ja
sbb
adc
and
xor
pop
rorb
add
add
xchg
test
enter
push
lcall
mov
ficoml
push
cmp
sub
sub
fisubl
repz
xchg
jae
xor
add
cwtl
out
dec
pop
scas
cmc
jbe
out
out
pop
mov
cmpsl
xor
cs
fimuls
ret
jge
shlb
inc
jge
pop
xchg
iret
cmp
mov
leave
mov
xor
mov
sbb
iret
or
push
pop
addb
sub
int
scas
mov
or
je
pop
inc
jle
in
mov
hlt
in
imul
add
clc
gs
sub
into
aaa
or
test
hlt
call
shll
adc
repnz
leave
and
std
xchg
out
adc
shll
nop
dec
xchg
icebp
lea
mov
push
inc
hlt
pop
lahf
cmp
dec
jns
popf
sbb
jae
mov
mov
test
test
clc
fsubrl
fwait
xchg
dec
stc
cli
inc
ljmp
mov
push
lods
pop
jmp
mov
fs
mov
sbb
test
mov
mov
shlb
sub
dec
push
mov
fsubrl
adc
xor
negb
daa
lds
and
sahf
jl
mov
ss
out
inc
mov
ja
dec
addr16
cmp
repnz
es
dec
lods
inc
loope
mov
aas
arpl
xchg
and
sti
mov
cmp
jne
test
push
loope
or
jg
jmp
jmp
jae
adc
dec
pop
cmpsl
and
repz
pop
std
rsm
jno
icebp
into
or
in
add
sub
push
cmp
shrb
adc
ljmp
mov
push
fucomip
pushf
hlt
into
cmp
adc
sub
or
je
jl
push
test
or
ss
mov
or
jmp
in
lea
cmp
insl
xlat
sar
loope
push
cmp
mov
push
pop
ret
add
mov
aaa
jle
sbb
mov
inc
std
mov
call
or
jecxz
enter
xorb
fildl
imul
sub
int3
jbe
je
outsl
flds
rcl
push
fsub
cmpsb
dec
fisttps
cwtl
js
jne
aas
out
lea
push
fs
movsb
insl
fwait
jb
inc
bound
add
hlt
pop
add
xor
mov
dec
xor
lret
clc
push
lods
dec
jo
fcoml
push
pop
mov
das
fstps
es
test
popf
loop
sbb
dec
stos
loop
push
xchg
iret
cmp
add
adc
adc
jecxz
and
xchg
adcb
test
notb
icebp
outsl
les
scas
mov
jl
xchg
in
scas
daa
popf
rcrb
outsl
push
jno
adc
push
cmp
cmp
fistpll
negb
push
cmp
mov
push
and
in
pop
add
cwtl
lret
inc
jecxz
rol
inc
lret
sbbb
out
mov
fwait
fwait
jb,pt
fs
aaa
pop
rorl
adc
pop
das
cmp
add
lret
jp
into
dec
push
mov
xchg
pop
mov
cltd
jecxz
add
int3
lahf
shlb
xor
xor
xor
xchg
mov
fmull
outsl
mov
mov
xor
mov
push
push
push
cltd
add
cmp
call
lea
into
cmp
push
pushf
mov
adcl
mov
jb
aam
lret
fdivrl
jp
push
dec
insl
outsb
pushf
imul
imul
pop
jp
insb
fwait
shlb
fldl
sbb
mov
loopne
scas
fdivr
sbb
cmp
call
loopne
orl
dec
and
imul
and
mov
je
sbb
jne
lcall
mov
int3
xchg
sub
mov
fstps
or
cmp
scas
or
adc
push
test
xchg
fistpll
mov
add
negb
inc
mov
push
lock
icebp
cmp
call
nop
lods
xchg
ret
lods
jne
clc
xchg
inc
mov
inc
imul
dec
mov
shll
stos
ret
mov
jg
xchg
push
lcall
sarb
fstl
rcl
ds
data16
xor
shrl
xchg
xor
pop
gs
and
mov
sbb
fadds
loopne
cmp
sti
mov
inc
test
mov
jbe
and
psrlq
pop
aad
pushf
xchg
ror
mov
mov
adc
sahf
inc
dec
xchg
push
sbbb
rolb
notl
sbb
loope
leave
out
push
nop
or
xchg
mov
pop
pop
mov
or
aaa
and
and
pop
push
mov
icebp
jp
insb
int3
xchg
dec
sahf
mov
fstp
ret
pop
mul
hlt
jb
lds
adc
scas
mov
sub
and
inc
xchg
jmp
hlt
mov
outsb
loope
pop
mov
ret
and
rcr
xlat
ret
sub
mov
jle
aam
and
outsl
mov
fwait
adc
sub
aam
jb
dec
inc
test
fsubrl
in
les
in
nop
pusha
movsb
mov
pop
sub
mov
sbbb
in
enter
or
sbb
insl
and
je
xor
aad
and
mov
seta
mov
mov
xchg
leave
pushf
mov
scas
mov
xchg
aaa
and
lcall
es
fmuls
sub
in
iret
dec
aaa
inc
fwait
lock
fdivl
sbb
aam
ljmp
jb
adc
cmp
movsl
xor
cmpsl
add
fimull
dec
adc
jl
add
leave
mov
xchg
dec
je
xchg
fucomp
pop
std
outsl
pusha
loopne
dec
stc
fidivs
mov
scas
stc
xchg
jo
mov
out
adc
pop
mov
pop
daa
decb
pop
xchg
test
sub
arpl
dec
jo
fldcw
fists
mov
adc
pop
stos
inc
xchg
jb
mov
imul
push
dec
pop
lock
push
xchg
add
out
jb
jmp
sbb
iret
sub
pop
xchg
and
mov
jp
jg
add
xor
lahf
dec
or
or
ficoml
and
cmpsl
imull
inc
or
shlb
mov
fisubs
push
sbb
fisttpl
call
fcmovnbe
mov
mov
iret
or
loopne
test
call
sbbl
roll
clc
pop
test
lahf
and
or
fmull
jno
test
xor
xchg
or
or
jno
sub
mov
std
out
add
adc
lahf
icebp
cmp
jecxz
mov
gs
mov
mov
std
outsb
adc
and
pop
sub
add
and
jo
add
push
sbb
fisttpll
out
pop
mov
xor
lret
aaa
jp
pushf
pop
cs
xchg
or
cwtl
in
cli
dec
in
daa
push
sub
lahf
push
jg
jg
pop
inc
lock
mov
xchg
pop
add
adc
sub
rcrb
push
push
xor
aam
enter
movsb
xor
nop
mov
inc
bound
add
sub
cli
xchg
sahf
mov
fwait
xor
and
sbb
pushf
ja
cmp
xor
sub
popa
mov
mov
stos
or
dec
xchg
ficompl
sahf
pop
jmp
ja
dec
mov
lret
clc
jb
xchg
cmp
pushfw
xchg
and
std
fcmove
xlat
push
inc
roll
pop
mov
push
mov
cltd
fnstcw
ret
mov
outsb
push
dec
adc
aad
outsb
es
daa
pop
into
and
push
int
cltd
or
mov
or
lods
in
or
sub
add
nop
pop
mov
and
mov
pop
dec
pop
sarl
mov
cltd
sub
nop
test
jecxz
scas
lods
mov
loopne
roll
js
popa
sbb
sub
cld
sahf
dec
lea
shlb
clc
dec
add
xchg
testl
inc
test
js
jno
mov
jb
cli
mov
ret
inc
out
lret
jne
outsl
imul
loopne
push
loopne
inc
aaa
cmc
mov
xor
xchg
xchg
testl
cmp
mov
scas
dec
out
ss
xchg
subl
imul
pop
jno
dec
je
cmpsb
mov
mov
xor
mov
fldpi
addl
insb
stos
xor
or
jle
cmp
pop
sub
xchg
out
sarb
push
dec
mov
add
xor
repnz
mov
pop
inc
mov
pop
lods
pop
adc
cs
xor
fadds
daa
pushl
pop
jl
xor
mov
mov
sbb
pop
lret
cld
xchg
push
or
imul
int
andb
in
sub
mov
int
aam
push
mov
add
out
out
fcmovb
inc
mov
insb
jg
xchg
inc
popl
lahf
push
mov
scas
lcall
lret
push
movl
imul
push
js,pt
vsqrtss
fsubrs
nop
inc
scas
les
dec
mov
add
mov
mov
push
fcoml
mov
loop
xchg
add
shl
dec
scas
xor
sbb
add
pop
loope
mov
cwtl
data16
add
mov
push
cmp
fldt
inc
push
xchg
xchg
sbb
ljmp
cmp
jns
jnp
icebp
loop
cld
jge
js
jmp
pop
add
or
dec
push
push
movsl
inc
push
arpl
imul
stos
mov
popa
inc
pop
fnstsw
push
mov
pop
mov
cli
and
mov
xor
jp
sub
mov
mov
out
mov
sub
lea
sub
nop
daa
shrl
pop
add
jo
xchg
in
pop
stc
or
repz
shrb
ds
jo
rorl
and
aad
sbb
sub
pop
cmp
push
mov
xor
cmpsb
shl
negb
jno
inc
jmp
push
ret
ret
mov
push
inc
lds
mov
mov
out
ret
mov
rcrb
lret
sbb
xchg
push
lds
cmp
iret
insb
lret
xor
loope
pop
cmpsl
data16
add
xchg
dec
outsb
jne
sub
outsb
jbe
bnd
aaa
je
or
mov
je
test
mov
popa
mov
movsl
out
rclb
sarb
popf
testb
inc
add
ja
mov
mov
scas
jbe
xchg
or
mov
lea
mov
shll
or
adc
testl
mov
mov
in
and
mov
cmp
sbb
movsl
cmp
test
push
int
fcomip
lods
lock
in
shll
loope
cld
in
roll
repz
fucom
jl
lods
pushl
in
cmp
and
mov
in
fiadds
enter
loope
loope
sbb
dec
repnz
add
push
insl
jg
decl
jg
es
pop
roll
arpl
add
sbb
test
xchg
pop
and
xchg
jg
addr16
hlt
cmp
cmpsl
adc
jp
dec
dec
popf
fcmove
adcb
dec
leave
ret
jmp
xchg
mov
scas
popf
inc
lea
jecxz
int
or
insl
jb
push
pop
xor
test
out
jp
adc
cmc
mov
dec
add
sahf
in
loope
les
insl
inc
and
mov
jl
scas
ror
mov
ret
jbe
outsl
sub
and
jp
ret
mov
dec
push
mov
jmp
insb
daa
add
inc
mov
addl
in
imull
dec
inc
xchg
mov
jg
mov
mov
cmpsb
xor
add
dec
jge
jp
inc
inc
sbb
sbb
addb
push
mov
mov
push
dec
and
pop
loope
cmp
cmp
jne
xchg
stos
xor
xor
out
mov
pop
or
pop
xlat
ficompl
dec
repnz
loop
mov
xor
inc
mov
push
aad
cld
pop
or
cmp
push
aad
jnp
mov
add
jmp
das
lret
clc
jno
shll
bnd
xchg
adc
pop
sbbb
nop
adc
cmc
pop
sub
arpl
in
push
xchg
movsl
adc
cmp
pop
cli
or
push
mov
lret
adc
and
fsubrp
lods
xor
in
push
mov
cmpsl
add
cltd
jne
cmp
pushf
xchg
jo
mov
scas
in
daa
rcrl
ficompl
jg
add
mov
push
xchg
mov
inc
xor
dec
cwtl
inc
mov
mov
test
shrb
pop
xchg
fwait
mov
lcall
ucomiss
mov
dec
push
mov
inc
mov
jne
xchg
jnp
pushf
sbb
push
aaa
xor
or
sub
pop
clc
and
lret
daa
fwait
lret
push
mov
fs
in
push
lea
gs
and
pop
lea
test
cld
rcl
fsts
and
movsl
sub
idiv
sbb
insl
iret
jl
adc
push
mov
push
push
mov
push
lcall
inc
jnp
cmp
push
jmp
jbe
sahf
imul
loop
ljmp
pop
dec
jo
shll
xchg
mov
scas
enter
sbb
mov
xchg
add
andb
push
je
neg
cmpsl
adc
adc
in
mov
movsb
jno
jns
jns
push
cs
fisubl
dec
mov
js
test
aas
hlt
mov
sti
call
cmp
mov
push
lods
lcall
mov
lods
jmp
mov
imulb
pop
call
sub
das
push
mov
sbb
sub
sub
jb
push
jbe
xchg
lea
test
ret
sti
push
cmp
fidivrs
mov
lret
lock
movsl
sbb
imul
outsb
pop
xchg
pop
pop
add
jmp
lds
ret
cmp
jl
push
dec
fisttps
inc
xchg
cmp
aad
sub
in
movb
mov
mov
jb
push
and
inc
int
fsubs
test
inc
dec
cmp
cmp
es
cmpsl
and
dec
xor
sub
movsb
out
lods
pop
push
jmp
test
test
xchg
adc
test
dec
jae
inc
sub
mov
lds
lcall
lds
sti
mov
bound
out
inc
out
mov
loope
jns
inc
nop
bound
stos
xchg
les
imul
das
add
or
mov
push
cmp
xor
xchg
pop
sub
in
inc
in
mov
pop
push
rolb
dec
stos
cld
jle
dec
ss
inc
cmp
nop
sub
mov
adc
call
mov
hlt
xor
or
xor
imul
fsub
leave
fisttpl
xchg
sahf
test
dec
fldt
pushf
cmpsb
inc
pop
addr16
std
mov
cmpsl
dec
or
pcmpgtw
in
jns
push
add
mov
inc
addr16
fyl2xp1
inc
mov
jge
rclb
mov
xor
dec
mov
xchg
xchg
mov
mov
mov
ret
rorl
jge
fldcw
lret
jg
cmp
scas
push
popa
lock
inc
aad
pushf
scas
xchg
fnstenv
jbe
mov
mov
lahf
sbb
pop
inc
mov
push
fisubrs
je
pop
pop
notl
mov
scas
daa
pop
mov
mov
shl
sbb
out
fldl
adc
sahf
jnp
inc
xorl
push
jl
fs
fsubp
sub
jne
mov
shl
inc
cld
add
or
mov
faddl
xchg
push
mov
inc
inc
xor
mov
xor
adc
mov
xor
mov
xor
std
dec
pop
mov
ltr
cmp
cwtl
adc
ret
mov
xor
mov
aas
dec
mov
jl
pop
aad
or
push
dec
push
lock
cmp
mov
mov
xlat
lods
and
sub
xchg
ror
gs
pop
xorl
xor
xchg
dec
leave
add
insl
xor
and
idivb
ds
call
pop
jg
adc
pop
adc
lcall
lcall
mov
int3
test
mov
cmp
jb
sub
cltd
dec
add
repz
sbb
ret
adc
out
push
ret
arpl
push
pop
pusha
out
and
dec
fcmove
int3
gs
push
dec
and
cmp
xchg
cmpl
stc
mov
mov
sub
in
cmp
enter
rcrl
stc
inc
push
jmp
xor
es
sti
lock
int
mov
inc
jg
imul
or
dec
push
or
add
in
bound
test
leave
and
sti
lahf
fdivr
add
aas
out
ss
mov
sbb
cmpsl
inc
adc
lea
add
bnd
sub
and
xor
mov
pop
sbb
out
inc
sub
and
jo
rcll
lcall
add
xor
cmp
andl
push
rclb
aad
ja
repnz
rcrl
adc
add
sbb
fwait
push
cli
call
and
adc
mov
out
lods
lock
out
and
add
and
jno
enter
push
push
jmp
mov
and
sbb
xor
lahf
loop
mov
cld
fwait
cltd
test
mov
rcr
pop
xor
xchg
insl
popf
push
shl
shrl
loopne
popf
jecxz
jg
cmpsb
lds
xchg
sub
xchg
inc
push
cwtl
mov
jge
pop
outsb
into
aaa
loope
daa
mov
push
pop
or
dec
inc
insl
into
stos
mov
arpl
xor
mulb
mov
pusha
mov
clc
xor
out
int
and
xchg
inc
gs
mov
inc
dec
stos
pushf
inc
stc
bound
es
fdivl
repnz
xor
outsl
arpl
popf
dec
pop
push
shll
lea
pop
scas
push
lea
js
jmp
pop
mov
adc
inc
adc
pusha
xchg
movsl
sub
shrl
inc
ror
pop
mov
enter
xchg
adc
lock
jne
xlat
stc
xchg
bound
outsl
mov
nop
mov
xchg
aas
cmovo
in
insb
ja
mov
inc
negb
cwtl
mov
lods
mov
and
movsl
movsb
and
fwait
inc
fs
repnz
sahf
sbb
cwtl
cmp
pop
loop
sub
xchg
and
push
mov
inc
or
loope
lods
test
ljmp
xor
icebp
or
inc
ret
rcll
jno
xor
sar
mov
pushl
enter
aas
add
and
add
hlt
insb
call
mov
dec
scas
scas
sub
scas
repnz
pop
or
mov
es
pop
notl
sbb
movsl
movsb
inc
lret
out
push
fcmovu
lock
dec
xor
jnp
ficoml
enter
jae
popf
jg
lret
xor
sbb
sbb
sbbb
scas
sub
dec
lahf
pop
rcll
lods
aam
insb
rcr
sub
push
js
xor
shll
xorl
cmc
rorb
jnp
sahf
inc
mov
xor
popa
imull
mov
add
or
dec
jns
gs
mov
stos
mov
sahf
xchg
inc
cmpsl
xchg
push
insl
loopne
mov
add
test
sbb
sbb
xchg
mov
pop
or
cmp
idiv
dec
sbb
push
in
jecxz
sbb
popa
andl
push
xchg
push
ret
cmp
arpl
bnd
lea
loop
fadd
mov
mov
jo
jnp
sbb
mov
dec
movsl
jae
xor
test
jmp
into
sti
decb
testb
sahf
gs
push
rcrb
mov
push
enter
cmp
ss
mov
ljmp
lods
xor
cs
aam
adc
jge
push
jg
data16
hlt
inc
add
jecxz
jmp
dec
dec
push
sbb
ret
dec
mov
ds
add
push
nop
enter
int3
stos
and
push
dec
aas
cli
pushf
xor
mov
hlt
pushf
push
push
pop
ja
sub
push
jp
daa
mov
mov
adc
in
fiadds
test
mov
or
sub
sti
fildl
and
sbb
mov
lahf
fs
in
out
xor
out
add
jns
dec
sub
jo
xchg
sub
daa
add
fldenv
test
xor
enter
push
xchg
jp
inc
push
sbb
push
push
out
xlat
je
or
imul
xchg
xchg
pop
xchg
dec
jecxz
in
fistps
sub
sub
ret
mov
jns
adc
sarl
sbb
jecxz
pop
scas
and
lcall
mov
inc
in
cltd
test
fbld
mov
inc
xor
in
scas
clc
pusha
mov
loope
leave
lahf
stos
sub
subl
xchg
push
jno
ja
or
mov
add
cwtl
mov
mov
mov
inc
popf
xchg
xchg
je
and
push
dec
adcl
mov
jbe
jmp
mov
sub
ret
adcb
mov
mov
cmp
jbe
fstpt
dec
rcll
mov
push
xlat
stos
mov
sub
sbb
cmp
pop
movsl
lods
daa
sub
mov
adc
jbe
subb
out
cltd
push
dec
push
fdivs
jmp
daa
ja
out
pop
subl
mov
test
inc
leave
jno
jl
movsb
lds
lods
jnp
sbb
leave
daa
or
xor
jge
sbb
es
jl
xorb
inc
mov
lods
jnp
cmp
add
in
adc
stos
cmpsl
xchg
loop
add
in
ja
es
and
or
imul
jne
xor
fcmovnbe
dec
mov
cwtl
dec
out
inc
insl
jnp
inc
ds
jns
addr16
push
sub
inc
and
push
jno
mov
inc
jp
cmovl
and
les
es
adc
outsl
clc
jecxz
icebp
lock
dec
push
xchg
and
xor
mov
pop
setne
hlt
pop
mov
leave
insb
gs
repnz
iret
aas
repz
in
clc
and
inc
imul
jne
push
cwtl
ffreep
dec
pop
sub
cmp
inc
jg
sbbb
xchg
daa
ja
stos
test
decl
mov
xor
cli
aaa
lods
loop
mov
out
adc
hlt
clc
adc
les
pop
mov
pop
fstpt
sbb
imull
sbb
daa
sub
mov
mov
mov
or
fstl
lds
inc
mov
or
aam
inc
pop
mov
xor
es
repz
mov
adc
mov
out
jg
mov
mov
xor
jl
mov
xchg
mov
add
fldl
fisubl
jle
and
repz
add
leave
pop
movsb
jo
fdivrs
aad
pop
push
mov
inc
or
cmp
mov
sbb
rorb
inc
push
lret
dec
jno
mov
sbb
xchg
movsl
outsb
mov
jge
out
push
mov
cmpsl
inc
enter
pop
xor
pop
ret
push
xchg
pop
cld
inc
mov
addr16
mov
das
pop
mov
push
push
cmc
rcll
mov
lock
lods
push
push
xchg
insl
adc
lods
add
or
nop
or
xor
lds
mov
pop
out
add
sub
mov
and
fs
cltd
sbb
scas
aas
lret
mov
mov
xor
movsl
dec
mov
push
pop
mov
std
sub
test
les
dec
wbinvd
aaa
shll
fstpl
dec
mov
ja
sub
fsubrl
icebp
or
pop
data16
stos
stc
aaa
mov
mov
adc
cs
imul
mov
push
cwtl
cmp
mov
inc
dec
mov
push
inc
mov
cmp
cmp
fidivrs
inc
cmp
js
xchg
sbb
mov
into
jp
int
jne
and
and
movsl
fdivr
addr16
clc
pop
and
es
imul
test
iret
and
and
ja
xor
sbb
sbb
xor
jo
adc
popa
outsl
pop
out
mov
xchg
gs
jne
movl
mov
pop
mov
mov
dec
jnp
cmpsb
orl
enter
mov
into
cs
and
icebp
sub
jle
jne
test
cmpsb
lret
jno
addr16
inc
loope
jp
daa
mov
xchg
ret
add
jno
cmpsb
ror
adc
push
jb
rorb
pushf
sub
mov
sub
push
mov
fidivrs
ficompl
popa
loopne
stc
inc
cmc
jo
pop
push
inc
cmp
popa
dec
mov
out
mov
pop
icebp
pop
adc
mov
outsb
mov
inc
push
sbb
or
xor
mov
mov
jbe
ss
sbb
repnz
or
movsb
push
mov
sahf
adc
pop
nop
pop
movsb
inc
cld
addr16
cmp
mov
addr16
mov
jmp
sub
pop
add
sub
in
mov
push
fldt
in
pusha
xchg
mov
in
mov
stc
loop
xlat
xor
fcoml
cmp
test
into
xchg
xor
cmpsl
cmovne
outsl
out
dec
ss
inc
in
pusha
outsl
mov
sub
push
je
sar
and
push
xchg
pop
aam
in
lods
push
mov
pop
dec
pushl
inc
ss
shlb
or
push
inc
cmpsl
jecxz
inc
std
flds
mov
xor
mov
sub
mov
lods
popa
arpl
dec
mov
in
loop
cli
hlt
addb
pop
push
jb
mov
xchg
mov
cltd
inc
inc
les
sub
mov
repnz
push
stc
xor
cmpsl
cs
in
pop
orb
das
push
or
cltd
mov
loopne
jb
cmp
xchg
jns
dec
loopne
pop
push
or
orb
sbb
pop
push
mov
pop
fistps
bts
xor
lahf
movntps
sbb
mov
mov
mov
je
jl
cmpl
push
scas
out
add
mov
andl
mov
lahf
mov
and
add
scas
cmp
or
mov
mov
lea
out
or
and
lods
inc
nop
imul
in
xchg
mov
test
sbb
mov
mov
test
dec
pop
bndstx
btr
lods
arpl
add
push
mov
loopne
pop
lcall
lds
cmp
sbb
jno
into
iret
sub
push
push
pushl
aad
out
sbb
clc
push
sbb
repz
adc
daa
sarb
mov
add
push
repnz
test
lea
mov
and
pop
pusha
ss
jmp
adc
and
pusha
gs
jmp
inc
lret
imul
or
add
daa
push
lret
arpl
fsubl
loope
jb
mov
test
push
sbb
lods
xor
sub
stc
add
fs
repnz
cmp
aas
cmpsb
xor
movsl
sar
xchg
add
hlt
sbb
cwtl
test
sbb
ret
repz
ret
jno
loopne
cwtl
xchg
jg
cmc
mov
mov
rcrb
xor
or
mov
inc
ret
xchg
jo
ljmp
add
sbb
jmp
push
jae
hlt
mov
outsl
test
jle
add
loopne
loop
nop
int3
jmp
fcmovnbe
bound
lock
scas
cmc
xchg
daa
movsl
mov
inc
xchg
sub
jmp
xchg
mov
call
and
dec
int3
mov
cmp
or
and
test
in
rolb
add
adc
insb
mov
pusha
mov
mov
xor
scas
imul
sbbl
add
xchg
jnp
sbb
add
cltd
cmp
mov
inc
pop
cwtl
pop
ds
or
dec
fildll
add
jl
cmc
enter
aaa
sub
mov
or
jmp
daa
mov
mov
mov
jmp
add
repz
inc
cmpsb
jnp
mov
bound
les
cld
dec
imul
out
test
cmp
fs
aam
bound
mov
pop
jae
sub
test
sbb
xor
sti
jo
inc
stos
sub
push
movsl
into
xor
jp
sbb
lret
fisttps
lret
pushf
xchg
jp
mov
and
dec
sub
pusha
in
sbb
xor
cmp
iret
pop
cli
jecxz
push
inc
stc
push
dec
push
push
or
jb
lods
arpl
ret
push
stos
inc
or
stc
xor
xor
sbb
cmp
push
outsl
iret
cs
pop
adc
xchg
xchg
in
daa
mov
movsl
fisubrl
cwtl
add
daa
mov
sti
xchg
insb
lahf
push
fcmovu
add
movsb
sub
aas
dec
push
add
arpl
or
fwait
pop
pop
dec
push
ret
into
ljmp
sub
push
or
add
daa
scas
and
femms
or
shll
add
xor
mov
pop
push
aam
push
pop
inc
ss
leave
je
xchg
ss
cmc
leave
ret
lret
imul
mov
mov
repz
push
inc
dec
fldenv
test
or
jnp
fidivs
push
adc
scas
pop
in
inc
aad
cld
mov
adc
or
mov
lods
mov
test
test
mov
adc
or
insl
sbb
int
inc
mov
push
cwtl
mov
and
mov
loopne
adc
push
pusha
loopne
lea
icebp
or
xchg
push
popa
insb
lahf
pusha
lret
loopne
shlb
push
imul
or
xchg
inc
jae
cltd
popf
push
mov
leave
nop
popf
push
js
loope
and
in
jg
or
xor
mov
cmp
xlat
push
test
in
add
adc
sahf
mov
lret
pop
movsb
aam
sbb
inc
and
int
imul
adc
push
cmp
push
icebp
jmp
mul
jg
lret
dec
mov
adc
sbbb
adc
ja
xchg
jp
mov
pop
fldl
enter
add
popf
loop
xchg
mov
cld
repz
outsb
fidivrs
pop
idiv
ljmp
cs
or
ret
ljmp
push
mov
jg
ja
test
iret
mov
xor
sbb
jb
inc
sub
bound
adc
or
xor
mov
mov
hlt
mov
mov
les
mov
fwait
sbb
fwait
jae
inc
stos
sub
movsb
cmp
or
rorb
jge
std
push
pop
add
mov
js
adc
or
scas
dec
fisttps
xchg
xchg
in
sub
dec
mov
neg
jae
loop
mov
adc
int
cmp
inc
mov
adc
fdivr
pop
push
in
clc
insb
sbb
dec
jns,pt
and
or
scas
test
xor
lock
dec
cmpsb
out
or
sub
mov
loope
mov
mov
mov
or
adc
cltd
addr16
inc
pop
xor
push
mov
fwait
aaa
adc
mov
jl
mov
pop
and
push
fisubrs
and
cmpsb
idivb
in
sub
sub
ss
ret
loopne
add
sbb
movsb
addb
mov
xchg
std
inc
dec
and
lcall
jbe
push
bnd
jne
adc
sub
data16
arpl
out
in
pop
or
push
push
es
adc
fidivl
fisubl
sbb
aas
mov
pushf
jae
sbb
jp
sti
adc
bound
test
int3
into
aas
and
jae
into
rcrb
push
dec
cmp
or
mov
ret
loope
mov
leave
arpl
scas
shrl
sub
sbb
aaa
add
dec
sbb
inc
adcl
inc
inc
xchg
cmp
push
mov
pop
in
xlat
jnp
or
ret
rolb
sahf
scas
add
out
shrb
mov
jns
lock
mov
dec
push
mov
xchg
cli
cmc
in
sbb
sfence
sbb
repnz
mov
loop
jmp
adc
mov
aad
jo
mov
repz
fdivl
push
xchg
addr16
popa
ffreep
outsb
mov
dec
movsb
lret
hlt
mov
xor
ljmp
hlt
mov
enter
mov
cld
mov
stc
call
push
pop
xchg
repnz
fsubrs
ret
jne
sub
adc
cs
addb
aas
cmc
lret
loop
inc
sub
jge
jo
xchg
cmp
rolb
mov
jmp
test
shll
xchg
aaa
mov
in
out
jae
jg
addl
cmp
pop
sbb
into
in
lds
pusha
jmp
mov
pop
lret
push
mov
stos
jmp
fcomip
mov
outsb
test
fistps
inc
dec
cmp
into
cmp
add
adc
clc
xor
xchg
lret
bound
data16
cwtl
mov
imull
xchg
fistpl
popa
mov
shl
sub
idivl
pop
pusha
leave
adcb
jae
inc
stc
and
or
lret
cwtl
outsb
testb
es
dec
inc
inc
add
movswl
dec
fiadds
mov
mov
sbb
enter
imul
pop
outsl
enter
mov
jns
rolb
movsl
cmp
icebp
dec
pop
mov
test
sbb
sbb
es
inc
sbb
movsb
fsubl
fsubl
adc
push
in
pop
lret
es
mov
add
fmull
aad
jbe
push
push
icebp
bound
inc
or
repz
repnz
mov
in
in
call
dec
jmp
push
mov
mov
pop
rcr
mov
ret
sbb
inc
insl
pop
inc
aam
insb
call
jb
adc
dec
bound
fisubrl
repz
mov
or
jge
mov
movsl
push
adc
cli
arpl
dec
add
cmpsb
test
stos
xchg
inc
sbb
in
popf
rcrb
push
rcr
loopne
jne
jecxz
cli
loopne
xor
lret
mov
mov
or
push
into
jg
scas
gs
stc
dec
sbb
scas
sub
ret
xchg
enter
xor
pushf
or
sbb
shll
icebp
leave
movsb
sub
push
inc
insl
imul
pop
mov
xorl
jmp
enter
int
popf
mov
rcl
sbbb
lret
adc
stos
mov
loope
ret
push
pop
dec
mov
or
mov
dec
cmp
cmp
pop
loopne
test
lds
mov
aam
popa
ss
inc
xor
push
lds
jp
pop
jp
push
out
jnp
mov
mov
mov
adc
lret
and
rorb
push
rcll
je
push
in
cwtl
dec
int
lods
dec
sarb
and
adc
sbb
mov
hlt
pop
cld
mov
adc
insl
sub
ja
add
rorb
jg
push
leave
add
lret
test
mov
cmpsb
sub
mov
jl
fisttpl
fwait
pusha
es
ret
xor
inc
sbb
out
stc
mov
or
fldenv
sub
fsubl
cltd
aad
push
pop
push
rcr
add
aaa
hlt
subb
mov
jae
inc
mov
jo
call
xchg
inc
or
fmul
adc
jmp
movsl
push
aaa
arpl
lcall
filds
adcb
popf
std
push
xor
nop
cmpsb
inc
xchg
fs
test
dec
fadds
xchg
rcrb
das
jl
mov
jne
mov
fisubl
xchg
inc
mov
jg
add
and
inc
dec
shrl
dec
push
and
cli
test
sbb
sub
out
dec
mov
imul
addr16
nop
xchg
dec
mov
popf
jb
test
or
push
jb
dec
xlat
orl
popl
lcall
nop
fisubrl
xor
add
push
xchg
inc
cmpsb
dec
pop
mov
out
enter
xchg
jle
or
sbb
or
jno
add
dec
jecxz
jl
aam
push
iret
cwtl
roll
and
loop
aas
js
sahf
cld
ret
mov
imul
roll
cmp
mov
or
mov
addl
add
cli
and
push
mov
scas
lcall
mov
bound
aaa
mov
pop
mov
iret
lods
add
call
adc
jne
cmp
xor
andb
iret
nop
xor
adc
ret
mov
push
xchg
sbb
movsb
psubd
or
jle
xor
dec
ret
int3
dec
out
outsb
fcmovbe
mov
xchg
jae
mov
mov
jns
and
arpl
hlt
mov
idivb
scas
jmp
lcall
inc
or
xchg
inc
outsb
mov
adcl
lods
ret
imul
xchg
cmpsb
stos
adc
adcl
mov
mov
pop
scas
rcrb
jns
dec
sub
in
jnp
add
pop
sub
pop
or
insl
jbe
orl
mov
loop
cmp
mov
test
xor
test
sbb
and
lcall
mov
or
jbe
and
sbbb
imulb
xchg
add
pop
leave
sbb
add
add
jge
outsb
dec
lock
dec
notb
out
jp
xlat
jae
inc
cmpl
js
shrb
jg
and
pop
dec
aas
aad
pop
shll
xor
ja
cmc
jge
andb
dec
outsl
out
jne
dec
sbb
mov
sahf
jne
mov
pushf
jecxz
loope
scas
repnz
push
cmp
xchg
stc
mov
ljmp
int3
mov
xor
push
rclb
jecxz
inc
dec
insl
xchg
shrl
dec
fimull
out
and
cltd
dec
hlt
fildl
or
push
xchg
adc
jb
lret
or
add
shll
aad
and
pop
or
in
push
push
loop
je
jmp
pop
or
mov
aad
outsl
jge
pop
jnp
and
dec
enter
popf
lods
ja
dec
ret
mov
push
std
aas
mov
mov
jbe
adc
sub
shrb
push
lret
test
mov
cmp
decb
mov
mov
pop
push
clc
popf
add
push
orl
dec
inc
testl
aaa
cwtl
test
fisttpl
repnz
dec
mov
call
das
aaa
push
push
xor
movsb
inc
xchg
mov
mov
je
movsb
int
test
push
fistpl
cmp
pusha
fnstenv
inc
lret
inc
mov
cwtl
push
imul
push
sub
sub
mov
addl
or
fdivs
popa
mov
mov
call
aaa
cmc
lock
inc
inc
xor
jle
mov
imulb
stos
cmp
xor
mov
mov
push
jo
es
ds
ret
jnp
and
inc
daa
dec
fidivrs
xchg
outsl
jecxz
je
shll
adc
jge
inc
push
repnz
sbb
int
and
nop
fists
and
and
push
add
lahf
fcmovnu
mov
and
add
mov
add
add
add
add
jne
pusha
mov
lea
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
popa
xor
ret
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
