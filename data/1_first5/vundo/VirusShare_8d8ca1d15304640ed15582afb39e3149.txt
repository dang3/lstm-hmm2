push
mov
push
push
push
lea
push
push
push
push
call
mov
out
add
cmp
mov
push
arpl
cmpsl
cltd
mov
scas
lods
cmpsl
fmuls
sub
pop
push
js
jo
das
jle
scas
cmp
fisubrs
les
roll
lcall
pop
push
push
push
push
push
lea
push
call
aas
xlat
je
into
jne
jbe
std
subl
push
es
in
jle
push
xor
xorb
mov
cmp
ficomps
mov
leave
lock
les
ret
aaa
lds
inc
out
add
enter
sahf
hlt
movsl
push
and
call
push
push
push
call
push
out
add
pop
orb
sahf
jns
cmp
addr16
nop
jle
insb
test
add
fs
bound
adc
cmpl
inc
leave
push
clc
lods
jl
dec
scas
pop
lods
push
sub
js
sub
pop
push
push
push
push
push
push
call
pop
mov
mov
pop
outsb
faddl
test
bound
insb
pop
push
fcom
call
push
in
nop
popa
xor
xor
xor
sub
pop
push
push
push
lea
push
push
call
and
adc
sbb
stos
arpl
test
xor
mov
or
sub
pop
push
push
push
lea
push
lea
push
lea
push
push
call
lahf
mov
mov
inc
cmpsb
lock
and
push
hlt
jne
in
into
or
push
mov
cmp
test
mul
loop
imull
push
cmpl
sbb
rolb
dec
jo
jb
int
pop
xor
fisubrl
sti
push
test
fisttps
sub
pop
call
mov
push
push
push
lea
push
push
call
int
fs
adc
iret
jg
gs
jo
and
movsl
jns
icebp
dec
pop
sub
add
test
lock
or
ret
pop
xchg
and
repnz
in
in
pop
mov
push
lea
push
push
lea
push
push
push
call
loope
insb
inc
jbe
push
sub
lahf
rol
aad
jecxz
movsb
shlb
bound
xor
scas
adc
mov
and
cmp
inc
ret
jecxz
push
test
test
negl
pop
jnp
pusha
out
sub
pop
add
push
push
push
push
push
call
out
pop
and
pop
lcall
mov
adc
loop
jle
shlb
mov
xor
imul
ss
stos
cmpsl
push
aaa
lods
sub
pop
add
push
push
lea
push
call
pop
cli
bound
pop
enter
sub
mov
popf
xor
pusha
aad
arpl
pop
fstps
mov
mov
pop
or
add
repz
mov
aad
push
popa
ret
or
outsb
mov
lahf
mov
or
cmpsl
inc
movsb
add
mov
hlt
pop
mov
xor
push
push
lea
push
sub
inc
ror
mov
shl
not
sub
sub
inc
pop
inc
pop
push
inc
sub
shl
pop
push
push
push
call
inc
mov
xor
mov
pushf
push
mov
mov
xchg
stos
mov
ljmp
scas
das
decb
mov
jl
arpl
lds
xor
cwtl
pop
push
in
cltd
outsb
and
mov
cs
sub
pop
call
push
push
push
push
call
mov
je
stos
xchg
xlat
fwait
xor
xlat
mov
push
scas
mov
jg
add
sbb
sub
pushf
pop
cltd
mov
cmp
in
rcr
push
push
roll
pop
mov
push
lea
push
push
push
lea
push
lea
push
call
push
gs
mov
xor
pop
inc
jmp
in
xchg
test
push
add
cli
stos
jl
xor
sub
cli
les
aad
lock
fstpt
aam
mov
xor
mov
nop
inc
push
mov
fwait
dec
shrb
in
call
mov
add
push
sub
pop
mov
push
push
lea
push
push
lea
push
push
call
or
popf
and
call
test
lret
movsb
outsl
pop
scas
inc
call
xor
arpl
scas
xchg
pop
mov
jle
shll
xor
cli
pop
ljmp
lcall
ljmp
inc
add
add
call
push
push
call
das
lods
mov
xor
adc
imul
xor
mov
mov
inc
inc
iret
and
cltd
mov
das
mov
and
lcall
daa
fiaddl
out
push
rorl
data16
imul
pop
daa
outsl
stc
sarl
inc
sti
pop
sub
pop
pop
pop
push
push
push
call
add
out
es
es
or
dec
fisubrs
or
das
mov
call
jge
pusha
jo
jp
cmp
adc
inc
and
adc
dec
cmp
ja
ss
or
lcall
push
push
call
loope
pop
cld
xor
add
hlt
mov
filds
lcall
cmp
dec
in
push
ret
movsb
fabs
xor
lods
imul
imul
or
mov
and
and
insl
rorb
je
insb
sub
pop
pop
push
lea
push
call
sbb
scas
lret
jmp
test
mov
cmc
add
loopne
andb
cmp
and
into
cltd
scas
js
sub
pop
pop
push
add
add
lea
rol
pop
xor
push
push
push
push
push
push
call
push
stos
mov
xchg
dec
jns
and
or
imul
inc
orl
dec
mov
insb
pop
dec
inc
hlt
ficoms
dec
jl
jge
xchg
add
dec
pushf
mov
int3
fmuls
cmpsb
movsb
cmp
adc
and
in
call
inc
ret
push
push
push
push
call
inc
sub
xchg
mov
mov
cmpsl
push
dec
mov
jns
mov
dec
or
pop
leave
xchg
mov
rep
pushf
enter
int
in
ljmp
fs
mov
adc
scas
test
ret
sub
pop
mov
push
xor
pop
cmp
jne
mov
push
lea
push
push
push
lea
push
call
inc
rclb
fcomps
addr16
rcll
cmpsb
call
sbb
fstpl
pushf
push
cmc
push
jp
cs
jmp
pop
test
mov
xor
daa
cmp
push
dec
call
lock
xchg
mov
mov
pop
mov
adc
repz
sahf
icebp
lret
adc
push
sub
pop
add
push
xor
dec
add
pop
testw
jne
push
push
lea
sub
rol
push
xor
mov
add
dec
shl
sub
sub
inc
pop
rol
lea
add
pop
push
ror
pop
push
call
push
add
pop
push
push
push
push
push
push
lea
push
push
call
pop
loop
adc
mov
adc
push
cmpsl
mov
data16
iret
je
mov
popw
cs
aaa
adc
jo
dec
lret
and
mov
icebp
or
movsb
mov
and
cmp
xchg
mov
mov
sub
sbb
sub
pop
push
push
push
lea
push
call
fiadds
adc
push
jnp
mov
mov
outsl
sbb
or
subl
xor
call
addr16
insl
mov
sub
fisttpl
add
leave
addl
pop
push
push
dec
rol
sub
lea
pop
call
push
ror
inc
pop
mov
push
push
xor
rol
push
sub
mov
shl
dec
sub
dec
sub
pop
inc
pop
push
push
lea
push
push
call
lret
cmp
xchg
mov
jp
add
in
movsb
fcoml
inc
daa
in
push
aaa
inc
pop
js
mov
ss
push
sub
sahf
jnp
lds
daa
push
mov
pop
mov
xchg
leave
subl
mov
dec
loope
or
jmp
jno
xor
sub
pop
push
push
push
lea
push
lea
push
push
call
fildll
aas
sub
push
or
xlat
aam
adc
fstpt
mov
or
cld
sbb
imul
lods
push
xor
in
add
pop
rolb
add
and
add
push
push
add
xor
add
push
inc
mov
sub
xor
pop
not
inc
sub
pop
push
push
push
call
fcmove
mov
jnp
sub
cmp
es
or
and
nop
fwait
lods
jbe
mov
or
or
fldl
jne
out
lods
test
cld
sub
pop
push
push
push
push
push
push
call
mov
nop
pop
loopne
in
pop
out
aaa
inc
cltd
xchg
jo
imull
mov
adc
xchg
mov
insb
mov
subb
inc
testb
xchg
icebp
hlt
adc
or
push
adc
inc
push
ss
js
gs
jo
ss
or
addr16
fisubrs
je
push
inc
or
or
in
pop
call
push
push
shr
dec
rol
push
lea
mov
dec
sub
sub
inc
pop
shr
pop
push
rol
pop
push
push
push
push
push
push
call
xlat
mov
sub
inc
dec
jb
adcl
push
sbb
add
repz
lret
fists
push
lea
aad
repnz
cmc
jmp
mov
fstl
popf
mov
or
cmp
movsb
loop
xchg
cli
int3
push
insl
sub
pop
call
push
push
push
call
inc
arpl
outsb
sti
loop
cmp
ljmp
xacquire
aam
xchg
adc
pop
addb
xchg
faddl
mov
inc
sub
pop
push
push
push
inc
inc
shr
push
rol
sub
add
mov
add
add
inc
sub
lea
sub
shl
pop
lea
lea
pop
push
push
call
cmpl
shrb
xlat
push
cmp
pop
add
mov
mov
mov
sbbl
cmpsl
push
pop
push
loopne
js
pop
imul
inc
cmp
pop
arpl
jb
cmpl
and
add
repnz
pop
popa
xchg
add
out
test
sub
pop
call
push
rol
not
pop
pop
push
push
push
call
cmp
popf
push
js
call
push
jmp
test
xchg
aam
mov
arpl
jno
into
les
invd
lock
add
in
outsl
xchg
leave
add
dec
in
fcmovbe
mov
ja
or
mov
pop
jecxz
pushf
shrl
in
clc
lcall
rclb
mov
fs
dec
sub
lea
push
sub
xor
sub
mov
rol
xor
sub
sub
rol
lea
inc
pop
lea
dec
pop
push
push
inc
ror
rol
push
not
shr
ror
mov
sub
sub
add
xor
dec
add
pop
lea
inc
pop
push
not
pop
call
pop
push
push
xor
sub
push
ror
shr
dec
shr
mov
xor
sub
sub
pop
sub
add
pop
push
pop
push
call
push
push
push
call
loope
dec
mov
and
xlat
mov
xchg
arpl
jbe
aaa
daa
cld
or
movswl
lds
out
xchg
ror
push
ret
hlt
sub
pop
push
call
push
inc
pop
pop
push
dec
pop
pop
push
shl
pop
pop
pop
push
push
push
lea
push
lea
push
lea
push
call
mov
push
xchg
push
xchg
and
loop
push
sbb
add
lret
sub
dec
xchg
pop
insb
sarb
ret
lcall
aam
lock
test
sbb
push
test
xor
xchg
shrl
jne
int
and
dec
stos
or
push
push
call
inc
add
int
xchg
sti
cli
jb
mov
std
addl
sub
push
mov
popf
imul
cmp
fcmovnb
jns
sbb
out
ss
sub
and
test
fnstenv
mov
and
dec
out
in
lcall
dec
shlb
adc
nop
mov
pop
xor
push
lea
push
lea
push
lea
push
push
call
es
jae
xchg
outsb
les
sub
stos
lcall
mov
adc
loope
stos
sbb
in
inc
dec
inc
and
aam
push
in
dec
sbb
push
add
pusha
leave
call
cli
xor
loope
and
lods
sub
pop
ret
cmpl
jne
push
ror
sub
pop
jmp
push
push
lea
add
lea
ror
push
rol
not
sub
mov
rol
inc
sub
xor
not
xor
pop
add
dec
pop
push
not
pop
push
push
not
pop
call
push
lea
push
call
mov
xchg
mov
outsb
int3
das
and
cmp
call
in
inc
or
lds
cmp
and
xor
addl
fwait
xor
lahf
jb
fisttpll
stc
mov
arpl
popf
sub
push
xor
cmpsb
push
movsl
jno
pop
inc
cwtl
push
aas
add
sub
pop
push
push
not
pop
call
push
push
lea
push
call
xchg
ret
imul
shlb
push
inc
sub
repnz
ss
sar
clc
popf
and
dec
mov
sbb
add
add
add
push
sub
ror
pop
add
push
add
not
xor
pop
pop
push
push
lea
push
push
lea
push
push
call
jle
hlt
push
add
lret
dec
aas
jns
cmp
push
push
mov
shr
lcall
stos
inc
fwait
clc
mov
lock
in
jecxz
cmp
shll
pop
xchg
xchg
push
call
sub
pop
pop
push
push
push
push
push
call
shrl
cmp
movsl
lahf
test
stos
jmp
inc
and
mov
mov
mov
jnp,pt
lods
sub
pop
pop
push
rol
inc
pop
xor
ret
push
lea
rol
lea
ror
pop
pop
push
push
push
lea
not
push
dec
lea
mov
dec
sub
xor
sub
sub
not
lea
pop
sub
add
pop
push
add
add
add
pop
push
call
push
push
lea
push
push
push
call
mov
fbstp
mov
sbb
inc
std
dec
and
mov
sarb
mov
push
sub
jmp
inc
pop
sub
push
lret
fs
inc
and
movsb
lds
inc
cmc
shl
cld
mov
cmp
cmp
or
cmp
sub
pop
or
je
push
lea
add
sub
pop
call
push
push
ror
ror
inc
push
shr
sub
mov
shr
shr
sub
not
shl
not
pop
xor
pop
push
lea
push
push
lea
push
push
call
addr16
adc
cmpl
xchg
inc
stos
sub
sub
inc
outsb
cmpsl
test
mov
test
add
shr
scas
or
pop
push
push
push
push
lea
push
call
push
mov
adc
arpl
cltd
add
xchg
test
movl
subb
mov
loope
cmp
sahf
insl
fisubrl
shll
and
lds
xchg
sbb
dec
lahf
ficomps
lea
iret
fnstcw
inc
mov
call
push
xor
shl
rol
pop
inc
cmpw
jne
push
push
call
jecxz
leave
mov
xchg
cmp
das
mov
or
push
nop
pop
insl
into
jo
adc
je
and
pusha
add
mov
adc
pop
mov
in
cli
ret
cld
insl
int
test
push
inc
cwtl
mov
lcall
enter
dec
inc
pop
inc
push
add
not
add
pop
cmpb
jne
push
not
xor
pop
mov
push
push
push
call
pushf
call
pop
dec
bound
scas
cmpsb
js
popa
repz
add
jne
jl
icebp
nop
in
je
les
jle
add
pop
mov
ds
dec
sub
test
cmp
mov
xchg
mov
ret
pushf
jae
add
xor
sti
int
out
ja
sarb
aaa
jns
cmp
aaa
cmp
mov
pop
sub
push
lea
xor
pop
cmp
jae
push
push
push
lea
push
lea
push
call
and
mov
push
repnz
jle
inc
loop
mov
cmp
push
xor
xor
popa
inc
ret
sbb
repz
stos
mov
in
lock
lcall
rolb
add
xor
push
push
lea
push
push
call
sahf
lea
dec
dec
scas
test
lods
xor
shrl
xlat
fbstp
add
pop
insl
lcall
mov
out
fisttps
mov
mov
mov
mov
push
in
pop
xchg
int
sub
xchg
rcrl
loop
test
test
mov
jp
and
sti
add
test
add
push
push
push
push
call
pop
pop
adc
ds
or
adc
cmpsl
cld
ss
ror
ret
inc
xor
fiaddl
or
outsb
jns
cmp
mov
sahf
push
push
pushf
add
pop
mov
push
push
add
sub
shl
push
inc
sub
mov
ror
add
rol
sub
add
add
pop
sub
pop
push
push
push
call
pushf
rclb
mov
mov
cmp
pop
loope
xchg
stc
data16
test
rorb
mov
pop
sub
mov
inc
icebp
dec
inc
push
js
inc
pop
sub
pop
push
call
push
lea
push
push
push
call
sub
cmpsl
fsubrp
adc
pop
push
repz
out
stos
xchg
cmp
aam
pushf
in
add
lret
inc
movsl
cmp
sahf
sbb
sbb
cmp
push
insl
fwait
jns
jecxz
add
scas
adc
insb
dec
jnp
dec
push
call
test
mov
dec
pop
dec
dec
cmpl
out
push
mov
pop
xor
push
dec
add
pop
sub
push
push
push
call
mov
and
sbb
xchg
fisubrs
jge
imul
in
pop
fildll
in
clc
cmpsl
orb
mov
jnp
icebp
add
sub
lahf
mov
lahf
xchg
push
xor
outsl
mov
sarb
clc
and
sub
pop
push
push
push
push
push
push
lea
push
lea
push
call
cwtl
sub
or
imul
iret
loopne
mov
mov
mov
repz
xlat
ja
mov
dec
rorl
and
fiaddl
lcall
xor
push
push
call
cmp
pushf
adc
test
mull
outsb
push
mov
or
xor
es
sub
pop
popa
mov
add
mov
pop
test
filds
inc
push
mov
ljmp
xchg
pop
dec
out
insb
dec
adc
sbb
lahf
shlb
pop
repz
sbb
rcl
loopne
ds
sub
pop
jmp
push
add
add
pop
or
je
push
push
push
call
pop
mov
push
xchg
daa
cmpsl
mov
sahf
frstor
mov
xchg
and
popa
or
push
xchg
loop
shll
in
hlt
pop
xor
push
push
lea
push
lea
push
push
push
call
mov
imul
adc
xchg
icebp
or
and
outsl
sub
lret
loopne
mov
inc
mov
lret
lods
xchg
cld
fidivrs
jecxz
mov
pop
add
mov
push
sub
pop
pop
push
push
sub
shr
shr
push
mov
ror
sub
sub
add
sub
pop
sub
rol
pop
push
push
push
call
pusha
sbb
mov
cs
test
or
or
test
repnz
in
hlt
lcall
push
pop
call
push
inc
sub
pop
mov
push
pop
push
push
push
dec
push
sub
mov
add
ror
dec
rol
sub
xor
pop
shr
add
pop
push
push
lea
shl
rol
push
ror
add
add
lea
mov
sub
lea
sub
sub
pop
pop
push
push
shr
shl
xor
push
shr
lea
mov
sub
shl
sub
sub
dec
inc
pop
sub
sub
inc
pop
push
push
call
sti
sub
xchg
inc
out
arpl
add
test
push
push
xor
mov
cmp
inc
mov
loope
scas
aaa
sbb
outsl
pop
mov
mov
pusha
add
mov
sub
pop
push
push
push
lea
push
push
push
push
lea
push
call
ds
jl
cltd
mov
and
imul
test
dec
nop
push
xchg
jo
dec
jecxz
or
cmp
or
xor
hlt
adc
adc
stos
push
or
ljmp
and
in
call
call
push
lea
shr
shl
pop
or
je
push
push
lea
push
push
call
add
cmc
push
adc
xchg
vmulps
repnz
aas
push
sti
aad
mov
cmp
jle
mov
sub
or
loop
scas
insb
sbb
mov
test
add
adc
lcall
push
rol
pop
call
push
ror
pop
add
pushl
push
push
call
in
cwtl
shlb
mov
inc
fnstenv
ss
jge
in
sbb
adc
mov
and
imul
stc
push
pop
xchg
imul
pop
pop
push
dec
inc
sub
pop
mov
push
add
pop
mov
push
push
push
push
lea
push
lea
push
call
and
mov
mov
repz
xchg
lock
repnz
xchg
ss
lds
and
roll
clc
mov
stc
sbb
pmulhw
imul
cmpsl
mov
test
cmc
ljmp
push
or
outsb
movsl
push
xor
push
add
mov
shr
add
sub
inc
lea
lea
inc
pop
add
dec
shr
pop
push
add
pop
push
push
xor
shl
sub
pop
call
cmpl
jne
push
push
push
push
push
push
call
out
or
fwait
mov
insb
lar
ja,pn
aad
popf
daa
leave
fdivrl
loopne
jle
es
aad
and
jnp
lds
lea
outsb
sbb
cmpsl
test
mov
jne
aas
cld
jmp
and
nop
inc
pop
pushf
ljmp
sub
pop
add
push
push
ror
push
ror
ror
mov
dec
sub
inc
pop
not
sub
shl
xor
pop
push
lea
push
lea
push
lea
push
call
sub
inc
xor
add
sub
inc
sub
dec
int
jp
jne
xor
popf
and
mov
test
movsb
mov
jp
std
ret
mov
sbb
jp
cmp
mov
jl
inc
add
cli
fs
sub
pop
push
push
add
shr
dec
pop
call
push
ror
pop
push
push
push
sub
lea
push
shr
sub
ror
mov
sub
dec
add
add
sub
xor
ror
shr
pop
dec
sub
ror
pop
push
dec
add
add
pop
push
push
push
push
lea
push
call
inc
adc
jp
add
sub
out
rcll
jo
mov
xchg
js
jmp
into
push
mov
xchg
fdiv
mov
lcall
add
not
pop
call
push
push
push
push
push
call
cli
adc
push
std
jle
int
scas
mov
jae
sub
cmc
pop
inc
shr
ret
xchg
daa
push
lods
sbb
xchg
sub
out
inc
cld
cmp
mov
movsl
mov
cmp
lods
mov
pop
mov
pop
or
sar
mov
push
inc
inc
sti
add
clc
push
inc
lea
add
pop
push
push
push
call
jo
xchg
xchg
in
mov
and
jecxz
adc
pop
and
jae
in
inc
outsl
jbe
push
es
cmp
notl
ja
and
dec
inc
lock
in
clc
pop
push
mov
push
push
call
cld
sbb
lods
mov
mov
fwait
sti
gs
mov
mov
add
xor
popf
fnstcw
jp
ret
clc
adc
xor
sbb
js
mov
push
mov
push
sbb
sub
pop
add
push
dec
xor
sub
pop
add
push
push
call
jmp
lret
sti
sahf
jmp
xchg
push
int
jl
mov
mov
mov
jb
cmp
add
lea
call
dec
and
std
stos
lea
adc
push
sbb
ljmp
mov
cwtl
sahf
dec
rorl
loopne
movsl
jns
mov
sub
pop
mov
xor
push
shl
pop
add
mov
xor
push
push
push
push
push
push
call
jae
mov
or
js
adc
daa
push
mov
xchg
sub
mov
in
into
xchg
push
loopne
mov
iret
adc
push
pop
push
fsts
out
je
in
stos
sub
mov
mov
icebp
and
rol
mov
lcall
movsb
push
pop
pop
push
lea
push
push
push
push
push
call
pop
gs
push
push
jl
jecxz
xchg
add
aas
pop
sub
push
out
enter
js
adcl
movb
push
push
lea
push
push
call
jnp
test
cmp
jne
xchg
dec
sbb
repz
shll
insl
test
jns
add
out
fs
lods
hlt
out
outsl
int3
lods
imul
push
int
sbb
mov
jl
imul
mov
push
jns
mov
in
out
nop
jp
inc
adc
lcall
pop
and
push
push
push
lea
push
call
xchg
in
repnz
out
or
pop
add
loopne
lret
aaa
jecxz
ss
cmpsl
add
mov
popf
add
repnz
ret
scas
outsl
mov
in
lock
add
mov
xor
push
ror
not
sub
pop
mov
push
push
lea
push
push
call
hlt
xchg
push
daa
cmp
dec
or
cmp
pop
cld
dec
jo
mov
inc
scas
out
out
push
mov
pop
inc
fwait
mov
pop
jg
js
push
sbb
fbld
popa
xchg
add
iret
fs
and
inc
or
xor
outsl
roll
lcall
adc
push
push
push
call
and
xchg
call
mov
enter
gs
pop
sub
clc
pop
xchg
das
fsubrl
in
hlt
lcall
les
xor
shr
pop
mov
push
push
push
push
push
push
push
call
rcrl
sti
loope
sbb
addl
cmpsl
cmc
push
xchg
push
mov
push
add
sbb
test
adc
nop
ljmp
ja
dec
scas
sbb
mov
or
pop
fisubs
in
call
push
push
push
push
push
call
fcomps
ficoml
fdivl
test
or
sbb
mov
daa
lds
mov
cltd
femms
jge
ljmp
push
jb
mov
pop
jge
push
jl
adc
lcall
les
shl
pop
add
add
push
lea
push
push
push
lea
push
call
sbb
decb
rorb
jp
mov
mov
loope
xchg
inc
xor
cmp
or
inc
and
jg
ds
pop
xchg
pop
push
mov
pop
jmp
in
in
pop
mov
push
push
add
sub
push
xor
not
mov
inc
dec
sub
shl
dec
pop
ror
not
pop
push
add
pop
push
push
sub
xor
not
pop
call
push
ror
ror
add
pop
push
push
push
sub
push
add
shl
shr
mov
add
ror
sub
rol
sub
add
pop
not
xor
pop
push
lea
push
lea
push
push
call
in
fdivp
xor
pop
add
xor
add
pop
and
add
lods
and
jp
pop
sbb
cmpsl
out
leave
mov
sar
rorb
jge
or
jl
stos
loope
loop
fnstcw
xor
enter
addr16
or
in
lock
lcall
push
push
lea
push
call
das
out
cmp
mov
xor
sub
jg
sbb
test
add
mov
add
iret
mov
jns
sti
into
popf
std
inc
sbb
push
jb
push
cli
xchg
lret
inc
sub
fdivs
addr16
movsl
mov
fnstsw
mov
lcall
lcall
rorb
add
rcrb
push
rol
add
add
pop
push
push
shr
dec
pop
mov
add
push
push
push
call
mov
cltd
or
sahf
sub
mov
dec
mov
jno
adc
stos
push
test
les
icebp
inc
je
adc
sub
pop
add
mov
xor
push
ror
pop
add
push
push
push
call
inc
incb
loope
xchg
fcomps
outsl
mov
int3
stc
push
or
cmp
lahf
or
pop
add
push
fwait
mov
mov
mov
inc
jge
mov
in
hlt
lcall
dec
sbb
cwtl
push
add
mov
sub
add
mov
jle
imul
lods
dec
adc
cmp
loop
pop
shl
out
pop
sub
jmp
xchg
lods
lret
dec
jmp
lcall
or
push
push
push
call
ja
lods
mov
icebp
cmpsl
mov
jb
sub
xor
lock
repz
mov
mov
sub
pop
add
push
add
pop
rep
mov
xor
push
pop
or
je
push
dec
pop
mov
xor
push
lea
push
call
mov
fildl
insl
dec
add
ja
fimull
pop
sbb
xlat
add
sbb
icebp
int
mov
cmp
push
hlt
sub
pop
mov
push
push
push
call
add
xorb
or
push
in
gs
in
stos
push
push
push
fcompl
lods
push
xchg
adc
push
push
push
call
xor
outsb
mov
mov
adc
popa
cli
fnstsw
dec
fstps
nop
pop
mov
test
cmp
jno
js
gs
pop
clc
or
pop
and
repnz
les
in
hlt
pop
add
push
lea
pop
add
push
push
push
push
call
hlt
add
ret
sarl
mov
or
enter
addr16
enter
data16
push
jecxz
jle
fwait
dec
je
insl
xchg
jp
jmp
dec
sub
pop
add
push
push
push
push
call
rcrb
sbb
arpl
xor
out
push
rdtsc
addr16
aam
xchg
sub
cmpsb
add
dec
stc
add
flds
lcall
movsb
push
add
not
dec
pop
mov
xor
push
xor
pop
or
je
push
push
lea
push
push
call
and
insb
adc
out
push
test
add
push
adc
ss
out
xlat
cli
imull
rorb
push
inc
cmp
mov
jne
push
xchg
mov
test
jecxz
xor
int3
stc
dec
inc
sub
pop
mov
push
push
call
xor
push
int3
imul
mull
fisttpl
dec
imul
dec
aad
out
xchg
scas
movsl
adc
push
pop
scas
fwait
and
dec
daa
cmp
mov
roll
jne
adc
in
clc
pop
add
rep
push
shl
add
sub
pop
pop
push
push
add
push
add
mov
sub
not
sub
lea
pop
inc
ror
pop
push
shl
inc
pop
pop
mov
push
lea
add
shr
pop
jmp
push
add
shr
pop
push
push
lea
push
push
lea
push
push
push
call
fsubs
shrb
xchg
loope
add
dec
jbe
mov
jmp
and
xor
push
rorl
sahf
pop
fdivs
std
scas
nop
jg
je
push
pop
pop
into
sbb
mov
fwait
pop
cmc
ljmp
call
lea
push
push
push
push
push
call
scas
sbb
popf
mov
dec
mov
push
pop
lea
cmp
mov
stos
mov
xchg
stc
xor
sub
mov
in
call
add
push
push
lea
lea
pop
push
push
push
xor
shr
pop
push
push
push
push
call
idiv
sti
fsubl
add
mov
add
jp
fcompl
cli
daa
sub
in
stc
inc
mov
sbb
stos
or
test
sbb
sub
test
popa
mov
dec
jns
and
out
pop
add
bound
sub
pop
push
push
dec
lea
pop
mov
push
lea
push
push
push
call
and
sbb
or
loope
xor
fsubs
shll
outsb
icebp
mov
sbb
lods
lods
push
js
or
and
sub
inc
push
pop
mov
push
cltd
dec
aad
xor
and
outsb
cld
or
xor
repnz
enter
sti
push
sub
pop
mov
push
lea
push
push
push
push
push
call
test
cmp
mov
fidivs
stc
mov
mov
mov
movsb
inc
je
add
ret
shll
xor
sahf
dec
or
cmp
push
shrl
xor
push
iret
int3
mov
cmp
jbe
pop
xchg
jno
ja
les
fimull
add
ret
pop
sub
aad
ljmp
or
push
call
shll
mov
lock
jb
out
push
xchg
cwtl
or
push
sub
int
pop
xchg
loopne
xlat
pop
popf
jecxz
inc
lods
fnsave
pop
and
cli
pop
sets
test
pop
and
pop
or
dec
cltd
cwtl
divb
mov
pop
imul
sub
roll
dec
dec
pop
cmp
or
xor
and
arpl
lcall
jge
push
not
pop
xor
push
lea
push
call
xchg
xchg
mov
push
dec
pusha
imul
imul
cmp
cmpsl
adcb
fistps
insb
fldln2
aaa
sub
mov
in
clc
pop
mov
xor
push
push
push
call
jl
es
inc
pushf
xlat
mov
sub
inc
mov
mov
add
loopne
push
add
pusha
popa
mov
inc
repnz
add
outsl
addr16
push
mov
mov
ret
xchg
es
hlt
lcall
rolb
push
push
call
mov
clc
xlat
mov
std
pop
xor
stos
cli
jecxz
mov
jle
rorw
cld
dec
stc
loop
xchg
xor
pop
or
inc
jns
aaa
jge
pusha
iret
loop
and
mov
adc
bound
lcall
add
inc
cmpb
jne
push
push
push
call
int3
push
jbe
add
pop
lret
gs
popf
push
lock
jo
dec
xchg
in
ret
push
stos
pop
sub
pop
cmp
je
push
rol
add
pop
add
push
push
lea
push
call
sbb
mov
test
pop
jns
jno
das
xchg
lret
push
mov
jb
aam
ja
push
insl
adc
or
xchg
and
inc
into
movsb
bound
sub
out
test
fmuls
loope
mov
add
in
hlt
lcall
jnp
add
test
std
call
cmpsl
fadds
or
cmp
arpl
add
fisubl
or
mov
sbb
repz
xchg
cmp
lret
pop
ffreep
and
cld
stos
arpl
ret
push
inc
aad
dec
addb
lcall
std
adc
mov
cmp
pushf
cmp
jns
inc
aam
ret
mov
sbb
pop
mov
mov
cli
fstps
xor
push
add
pop
pop
pop
push
lea
push
push
push
call
pop
movsl
stc
std
subl
bnd
into
les
push
mov
int3
dec
notl
push
cmpsl
pop
nop
mov
push
lahf
jo
lods
jg
out
or
push
dec
movsl
push
out
mov
inc
jle
jnp
sbb
or
notb
jbe
in
lock
pop
push
shl
dec
not
pop
pop
push
push
push
push
lea
push
push
call
or
cmp
sub
ja
inc
dec
aas
and
adc
daa
lret
cs
mov
dec
push
pop
aaa
pop
shrb
sub
or
pop
adc
push
les
or
aas
jg
sbb
ljmp
sub
pop
pop
push
lea
push
push
call
ja
sbb
fisubl
or
out
adc
add
pop
adc
mov
lcall
push
nop
dec
push
rclb
adc
mov
mov
repnz
filds
cmp
popf
jne
xchg
popf
aas
xchg
adc
push
lods
sub
mov
fcoms
fs
jne
in
hlt
lcall
push
lea
push
push
lea
push
lea
push
lea
push
call
and
movsl
xor
xchg
mov
sbb
xchg
std
push
ss
adc
sub
fs
push
popa
adc
js
mov
sub
xlat
lds
mov
cmpsb
jnp
daa
lods
test
incb
sub
adc
sub
pop
ret
mov
push
lea
push
push
lea
push
push
call
push
inc
fbstp
jp
mov
and
adc
jg
jl
jns
mov
stos
inc
cmp
or
nop
js
icebp
insb
insl
dec
or
roll
data16
inc
outsl
xchg
xlat
fsts
gs
lret
adc
in
in
pop
add
mov
push
dec
not
shr
pop
push
push
push
lea
push
call
pop
fists
out
adc
pop
mov
gs
into
push
dec
fs
sahf
adc
push
stos
push
fs
outsl
push
and
aad
xchg
jecxz
inc
loope
in
hlt
lcall
xchg
add
push
push
push
push
call
das
sbb
testl
xor
inc
sub
xor
jle
pop
jmp
mov
or
mov
sbb
ret
rolb
adc
add
push
test
mov
and
inc
mov
pop
xor
push
add
ror
pop
pop
pop
push
push
push
push
lea
push
push
call
mov
mov
sahf
imull
mov
sbb
push
rcrb
rorl
xchg
dec
xchg
enter
push
jae
fwait
push
inc
push
pop
adc
and
adc
test
push
fidivs
aad
or
test
insb
in
ss
mov
mov
repz
das
lds
adcb
sub
pop
pop
pop
push
push
lea
push
push
push
lea
push
call
repnz
repz
scas
outsb
iret
dec
inc
stos
ret
popa
push
and
lret
mov
jmp
ret
cli
lcall
cmp
or
mov
cmp
cmp
mov
popa
movsl
mov
sub
pop
pop
leave
push
lea
push
call
cmp
adc
imul
dec
sbb
loop
inc
data16
mov
test
pusha
pop
sub
xor
ljmp
adc
shlb
xor
in
clc
pop
ret
push
push
push
call
inc
mov
pop
out
and
push
mov
enter
sbb
fistps
iret
dec
test
xor
imul
add
sub
imul
sarb
inc
mov
xchg
ret
jp
inc
push
add
int3
stc
cs
fdiv
movsb
push
mov
sub
mov
in
push
xor
pop
cmpl
jne
mov
push
push
push
push
push
call
loopne
hlt
scas
push
scas
cmp
outsl
test
icebp
mov
and
rorb
push
sbb
jne
and
adc
inc
repnz
sbb
pop
dec
xchg
push
mov
sbb
mov
sarl
stos
movb
add
add
lret
add
ficompl
add
call
hlt
call
add
fistl
jb
push
shrl
test
dec
jg
rol
add
and
cmp
jmp
pop
xchg
adc
xlat
loop
mov
adc
cmp
es
jp
lock
test
ds
and
rorl
in
clc
pop
pushl
push
add
shl
pop
pop
push
push
lea
push
push
push
lea
push
call
sbb
mov
mov
std
xor
lret
fistpll
jg
pop
jle
hlt
shrb
adcb
cmp
into
xchg
out
sbb
sub
sbb
lret
or
sub
imul
into
pop
dec
stos
push
imul
movsl
fwait
mov
sub
pop
sub
jmp
push
shr
add
pop
sub
push
xor
lea
not
pop
pushl
pop
push
dec
sub
pop
sub
cmp
jne
push
shl
ror
pop
mov
push
push
push
call
es
sbbb
dec
cmp
mov
ja
rcl
stos
or
pop
call
in
pop
aaa
or
cmp
dec
cmp
jae
push
adc
pop
inc
out
in
xchg
jp
pusha
jle
scas
mov
lcall
cli
and
xor
push
xchg
fidivrl
lcall
dec
cmp
mov
push
lea
push
push
call
test
jns
add
push
cmp
or
or
mov
sub
adc
or
mov
dec
sub
pop
sub
push
dec
pop
cmp
jne
push
shr
shl
ror
pop
leave
push
push
push
push
push
push
call
or
iret
and
fidivrl
and
popa
std
or
movsb
push
outsb
mov
mov
js
jb
subl
cmp
das
stos
mov
pop
or
nopl
leave
or
add
arpl
sbb
xor
push
add
fwait
sub
pop
ret
push
ror
inc
pop
push
mov
push
pop
add
push
push
xor
pop
push
push
lea
push
call
popf
mov
lods
hlt
inc
inc
into
xchg
jmp
mov
mov
hlt
mov
jg
sub
inc
pop
ljmp
pushf
pop
adc
xchg
nopl
sbb
cmpsb
or
stos
leave
and
add
leave
andl
pop
out
lret
jne
xor
inc
jns
sbb
xor
lods
sub
pop
push
push
push
push
call
inc
push
sub
mov
push
cld
loopne
push
jb,pt
std
push
hlt
xchg
mov
cli
stos
sar
pushf
adc
testl
push
not
pop
mov
push
lea
pop
push
pop
push
push
push
lea
push
push
call
jae
dec
jg
fisubs
test
fiaddl
sub
sbb
sbb
or
cs
in
inc
mov
enter
outsb
mov
psubb
aas
mov
pop
mov
push
bound
mov
adc
xor
lret
mov
mov
or
lcall
push
cmp
push
lea
push
push
call
inc
enter
test
xorw
and
jno
add
in
sbb
sbb
mov
xor
mov
lods
add
sub
sar
sbb
fimull
insl
loop
xor
movsl
nop
jb
arpl
ret
xor
repnz
and
dec
cmp
fisttpll
addr16
push
sub
pop
add
push
add
pop
mov
push
inc
pop
add
push
dec
pop
pushl
popl
push
inc
shl
pop
mov
push
push
lea
push
lea
push
push
call
xchg
loope
inc
jbe
mov
xchg
push
int3
les
cs
imul
lods
data16
mov
les
lret
sbb
jo
in
in
lcall
stc
push
push
lea
push
call
mov
push
sub
addr16
mov
repnz
adc
sti
and
xchg
dec
fcomps
jno
enter
sbb
or
repz
pop
loopne
push
outsl
xlat
mov
sbb
and
notb
repz
lea
push
push
lea
push
push
lea
push
push
call
xchg
movsl
cmpsb
mov
or
push
jmp
outsb
push
je
hlt
mov
jb
das
mov
push
push
in
call
rcll
out
lea
pop
xor
rol
push
push
push
push
push
call
out
sub
aas
lds
testb
in
shlb
pop
shlb
sbb
in
add
ficoms
mov
jmp
loop
movsb
adc
call
insb
in
outsl
mov
dec
sbb
cltd
jbe
pop
jae
adc
sbb
push
jns
cli
movsb
or
in
pop
nop
push
shr
pop
nop
push
lea
push
call
cmp
mov
popf
jb
mov
mov
stos
jbe
fisttpl
cmc
mov
std
leave
or
scas
icebp
mov
lret
insb
inc
test
jne
or
push
lcall
add
rol
rcll
nop
push
push
call
rcrb
aas
jcxz
ja
clc
bound
bound
jo
arpl
enter
je
mov
xchg
add
sbb
loope
out
adc
pushf
jnp
stos
inc
adc
mov
and
popf
lock
pop
mov
popa
in
mov
jo
cltd
jmp
out
mov
in
xor
sub
pop
nop
inc
push
ror
rol
pop
nop
push
push
lea
push
call
sub
xchg
int3
xor
inc
mov
fsubrl
dec
cs
dec
cmpsl
loop
dec
sub
movsb
insl
jnp
movsb
xchg
and
les
fdivp
lea
push
ljmp
in
hlt
pop
nop
cmpb
jne
push
inc
not
pop
nop
push
push
lea
push
push
push
call
stos
data16
adc
sub
jb
sub
test
fisubl
int3
idiv
ret
mov
lock
pop
aad
mov
mov
lcall
cs
nop
pop
in
mov
hlt
cmp
jno
adc
pop
mov
es
aaa
sbb
in
dec
mov
rcll
into
pop
sub
pop
nop
cmp
je
push
push
call
add
in
jnp
sbbl
lahf
push
cmp
pop
ret
cwtl
mov
daa
jl
ja
cmp
xchg
inc
inc
add
aaa
lds
js
ficompl
popa
sub
and
sub
std
xchg
out
das
and
aaa
mov
push
bound
mov
nop
pop
aad
mov
test
dec
loop
push
cmp
in
clc
lcall
push
push
push
call
fldcw
stc
sti
xor
inc
sbbb
les
in
aaa
adc
stc
insb
test
repz
jbe
jbe
or
js
sbb
lds
rorb
push
pop
push
mov
in
hlt
pop
nop
push
sub
add
shl
not
pop
inc
push
push
push
call
dec
add
pop
in
sub
pop
jbe
leave
sbb
int3
push
cmp
sub
cmc
hlt
pop
ljmp
jnp
cmp
ss
lods
jbe
scas
js
loope
pop
lret
pusha
repz
dec
push
hlt
dec
xchg
fdivr
xchg
fisttps
ja
gs
xlat
lock
sub
pop
nop
nop
push
not
pop
cmp
jb
push
rol
shr
lea
pop
xor
push
not
pop
jmp
push
push
push
call
push
mov
movsl
stos
mov
arpl
push
icebp
mov
inc
jecxz
mov
xchg
hlt
adc
sti
add
test
jge
push
lret
movsb
mov
add
stc
inc
or
cld
mov
cmp
bound
sbb
sub
inc
mov
jecxz
dec
stc
or
cli
sub
pop
mov
add
push
sub
pop
movzwl
mov
push
push
call
push
mulb
pusha
mov
clc
dec
mov
mov
xchg
in
out
or
xchg
ret
xor
jge
mov
xchg
sbb
dec
in
outsl
jmp
jmp
inc
sub
cmp
push
sub
xor
std
out
sub
pop
add
push
inc
pop
mov
push
push
lea
push
lea
push
push
push
call
sti
adc
mov
mov
movsb
scas
inc
cltd
pop
movsl
pop
pop
jno
pop
or
fisttpl
outsl
ljmp
int
in
sub
push
pop
lahf
cwtl
lods
insb
test
inc
nop
xchg
ds
in
ja
sub
pop
add
push
lea
shr
inc
pop
pop
push
push
push
lea
push
push
call
jns
js
lods
and
jecxz
or
mov
mov
dec
pop
mov
lods
call
lods
out
pop
jp
out
ljmp
push
dec
xchg
dec
adc
fcmovnbe
mov
sub
and
cs
fs
les
pop
in
loop
sub
imull
mov
mov
push
add
lea
ror
pop
pop
push
push
push
push
push
call
ror
popa
movsb
lods
out
xor
dec
lcall
pushf
sbb
test
xlat
dec
xchg
mov
mov
es
sbb
mov
in
daa
fidivrs
sub
pop
pop
push
sub
shr
pop
leave
push
lea
shl
pop
ret
or
push
add
ret
or
add
mov
mov
push
add
mov
push
add
cwtl
push
add
fsts
aad
lods
cs
mov
jle
ss
xor
xchg
or
sbb
ss
inc
cmp
adc
pop
jo
lret
mov
and
adc
mov
lea
loopne
and
and
gs
ja
mov
scas
dec
imul
rorb
inc
fcom
mov
mov
jmp
fisubl
sub
add
jno
faddl
lcall
xor
call
cmc
xor
inc
jecxz
push
lret
das
orb
mov
stos
ret
ljmp
sub
cmp
sub
jecxz
in
lret
mov
pop
sub
mov
cld
je
mov
mov
loope
sbb
xchg
js
xor
aad
stos
pop
cmp
mov
inc
ja
pop
lret
jne
add
clc
movsl
fnstsw
loope
subb
lret
in
jle
call
adc
jecxz
in
shrl
mov
push
out
stos
dec
mov
push
das
clc
inc
fnstenv
inc
jmp
mov
jae
dec
repnz
mov
mov
push
out
jo
xor
pop
sub
cmpb
add
test
add
or
fsubs
mov
mov
mov
out
mov
lcall
cmp
hlt
jno
lret
fstps
and
and
xor
lea
mov
or
mov
or
mov
jl
arpl
mov
sbb
push
mov
test
lock
add
jg
jno
mov
adc
cmp
dec
mov
stos
negl
fldt
imul
addb
sub
pop
push
lcall
jge
pop
repz
xchg
fsub
addr16
jae
call
in
icebp
fs
xchg
jecxz
mov
jmp
dec
pushf
mov
mov
or
cmp
and
ffreep
and
xchg
lods
out
dec
in
mov
inc
xchg
shrb
out
add
movsl
mov
int3
in
ret
xor
les
add
push
and
mov
movsb
dec
es
rcrb
dec
cmpb
ss
roll
pop
rclb
push
loopne
fwait
jmp
loope
inc
add
xlat
mov
xor
pop
jp
fwait
dec
inc
jmp
or
xchg
mov
popa
decb
paddb
dec
mov
mov
sahf
lods
out
sti
xor
sub
and
mov
out
jae
mov
mov
aas
dec
inc
adc
std
mov
movb
adc
sub
jecxz
arpl
bound
fstpl
push
inc
mov
aas
push
popa
movsl
fsub
mov
xor
popa
adc
stc
cmp
add
or
xlat
jle
inc
add
pop
mov
xchg
cmp
xchg
hlt
addl
cwtl
pmaxsw
cmc
mov
xor
jno
aas
cmp
and
jmp
sbb
call
sbb
data16
insb
fdivrl
cmp
pop
outsb
sbb
jns
xlat
push
outsl
mov
fsub
ret
lcall
push
mov
mov
jp
or
xchg
mov
push
dec
cmp
mov
in
dec
fisttps
insb
in
loop
ret
aas
pop
xor
xchg
sub
insl
push
jo
xchg
xchg
inc
xor
push
in
inc
xor
scas
cmp
cli
arpl
mov
jl
add
cli
adc
adc
out
icebp
cmp
mov
cmp
movsl
mov
push
icebp
es
out
or
xchg
ja
jmp
inc
inc
std
scas
lds
mov
push
in
dec
lods
jnp
mov
add
push
and
pop
sub
inc
mov
jl
xchg
sub
push
sbb
jno
xchg
insl
mov
das
mov
fdivl
xchg
adc
push
roll
adc
add
std
arpl
out
or
les
or
adc
adc
loopne
adc
mov
test
mov
aas
cmp
jnp
lea
push
jg
ret
in
sbb
je
insl
aas
ljmp
push
std
fwait
xlat
add
sahf
cmpsb
lret
int
pop
adc
jle
sti
das
add
jnp
jecxz
orb
mov
daa
add
mov
sbb
inc
mov
adc
fists
sbb
xlat
repz
in
jp
mov
add
rcrb
sbb
repz
xlat
mov
pop
std
loop
mov
mov
push
jle
push
add
xchg
dec
inc
jno
add
push
stos
adc
outsl
test
mov
cmpsb
pop
adc
cmp
loopne
cs
mov
or
cltd
addr16
jecxz
les
push
jle
jo
les
imul
sbb
adcb
sbb
sbb
mov
adc
pop
jg
stc
loopne
pushf
cs
jp
pop
cltd
lds
cltd
xchg
dec
ror
xchg
or
mov
xchg
add
imul
mov
mov
clc
mov
jg
lahf
jl
lock
pop
cmc
mov
mov
pop
cmc
je
cmpsb
subl
nop
outsl
stc
jl
enter
push
cmp
aad
leave
fcmovb
pop
and
fs
out
jno
data16
not
mov
popa
mov
dec
fstps
mov
ret
fstps
das
mov
fmulp
and
movsl
add
retw
imul
test
test
popa
lea
or
stos
cwtl
cmp
mov
mov
add
loop
loope
into
push
adcl
pop
sbb
mov
xchg
sbb
shrl
adc
push
dec
inc
pusha
rcrb
xchg
or
aas
fdivrs
fmul
outsb
lds
push
push
push
mov
data16
and
pusha
out
pop
enter
or
fdivr
pop
fstps
sub
das
push
lcall
fidivs
aaa
push
loopne
mov
mov
xor
lock
test
mov
or
jne
jecxz
shl
or
fst
mov
pop
fdivrs
cli
and
in
mov
ficompl
das
dec
call
mov
xchg
mov
loop
nop
sub
roll
jge
mov
stos
and
test
mov
je
ror
movsl
fimull
popf
sub
scas
push
pop
arpl
fimuls
mov
jo
popa
fwait
pop
push
shlb
adc
out
inc
pop
sbb
xor
adc
out
xchg
sub
jnp
lcall
jae
int3
rcrb
dec
sti
aas
xchg
sbbb
sub
shl
test
jns
insl
mov
imul
ljmp
lods
push
cmpsl
leave
lods
jle
jp
int3
sbb
push
aaa
subb
out
in
loop
push
mov
mov
ja
cli
dec
mov
call
lock
out
pop
inc
popf
hlt
call
sbb
sub
pop
jmp
push
or
pusha
push
popf
mov
aas
adc
push
push
lods
mov
dec
push
into
mov
jl
mov
cld
push
xchg
sbb
sbb
loopne
in
inc
and
mov
or
sub
mov
aam
mov
pop
out
sub
add
outsl
aam
and
imul
pushf
dec
dec
test
adc
jo
cwtl
push
xor
fdivrs
dec
setp
push
and
mov
hlt
cmp
mov
adc
stos
dec
sub
imull
bnd
repz
cli
out
lea
pushf
imul
lods
mov
stc
push
imul
cmp
imul
push
pop
mov
mov
xchg
sub
jp
gs
aas
lock
inc
loop
pop
mov
test
dec
subl
mov
hlt
push
lcall
lods
fs
jno
cmpsb
and
mov
dec
and
lret
pushf
sub
cld
cmc
arpl
mov
out
mov
je
dec
or
jl
cmp
xchg
push
mov
cmp
scas
sarl
imul
test
es
lods
lods
sahf
push
outsl
inc
cmp
mov
dec
hlt
loope
push
idiv
cmp
mov
xlat
in
jns
sub
cmpsb
or
lea
insb
mov
shrb
mov
cmovbe
xor
jo
sub
test
mov
mov
jnp
loop
adcl
push
mov
insl
xor
xchg
repz
inc
mov
jne
leave
xchg
xor
divb
push
ss
and
push
das
divl
call
push
mov
jg
pop
add
dec
jae
mov
andb
pop
pop
fwait
hlt
or
and
aad
pop
sbb
pop
call
popf
pop
lods
push
push
in
pusha
popa
lret
mov
pop
mov
mov
pop
adc
inc
xor
out
test
pop
pop
repz
and
mov
push
add
cmc
add
mov
mov
or
pmulhuw
imul
stc
mov
mov
dec
test
cld
mov
inc
pusha
into
es
xchg
lods
cmp
cwtl
mov
lods
mov
or
adcb
fs
hlt
jg
inc
and
test
cwtl
scas
iret
xchg
mov
lds
pop
dec
ficoml
mov
add
inc
jo
xlat
push
fmuls
hlt
loop
int
add
mov
insl
and
sub
push
ret
stos
mov
pop
dec
test
pop
mov
lahf
cmp
mov
push
mov
mov
shl
xor
jmp
sub
cmpsb
negl
rolb
mov
jmp
or
mov
jo
sbb
sbb
fisubs
ret
test
hlt
in
fdiv
imulb
iret
shll
dec
out
sub
xor
inc
pop
xlat
lret
inc
fidivrs
es
aam
popf
fimull
sbbl
xor
sub
inc
push
fwait
into
inc
mov
decl
pop
cmpsb
mov
sub
push
aam
mov
adc
dec
dec
inc
xchg
push
push
lcall
flds
jnp
pushf
push
push
sub
hlt
xor
imul
add
dec
xchg
xor
rcrl
mov
or
push
xchg
orl
fldl2t
aam
aad
and
or
inc
lret
mov
mov
jg
scas
pusha
cli
fdivp
ja
and
fs
int
test
push
or
aam
fdivrp
xchg
test
jle
mov
cs
push
jbe
das
dec
xchg
test
insl
gs
sbb
iret
test
scas
mov
jne
jo
sar
scas
les
mov
adc
cld
cmpsl
pop
lds
addr16
fs
jns
adc
sbb
cmp
test
cld
lock
nop
mov
call
aas
aaa
icebp
and
in
adc
mov
and
jecxz
pop
je
in
clc
rcr
mov
pushf
sub
mov
adcb
inc
xchg
jle
mov
fnstsw
add
cmc
mov
enter
addl
mov
or
cmp
orb
dec
push
mov
sahf
mov
or
sarb
sbb
ret
in
mov
push
push
mov
rcr
jecxz
dec
push
ljmp
sbb
out
jecxz
popa
sahf
shrl
test
cmp
lea
cmp
xchg
push
iret
cmpsl
pop
test
pop
lds
inc
add
inc
sub
jge
shr
pop
push
sub
cmp
in
cmpsl
cmp
inc
sub
lahf
out
je
out
xchg
jbe
in
cwtl
test
jg
mov
mov
jp
push
stos
and
loope
leave
neg
cmp
xchg
pop
or
and
mov
emms
outsl
test
cmpsb
jb
add
ret
ljmp
ret
std
sbb
cmc
pop
ret
xor
dec
mov
add
cltd
shll
out
mov
xchg
mov
xor
add
pop
test
adc
out
aaa
pop
sbb
mov
or
icebp
out
in
adc
imul
inc
xchg
cli
push
popa
mov
loope
fsubs
nop
sbb
orl
jle
scas
gs
inc
ret
out
push
pop
jecxz
pop
pop
out
push
out
in
fdiv
xor
jbe
push
sbb
maxps
ljmp
adc
scas
test
aaa
jg
out
in
ret
loop
mov
add
loopne,pn
push
sub
imul
mov
and
shlb
sbb
mov
adc
lock
imul
inc
xorb
or
das
int
mov
notl
mov
out
sub
out
cli
aad
pop
rorb
add
dec
dec
mov
pop
inc
mov
or
sbb
mov
std
mov
bound
xor
fnstenv
lret
sub
shl
jmp
xlat
clc
fs
lcall
sarb
sbb
push
es
fwait
movl
xor
sub
enter
rclb
pop
pop
xchg
movsl
lcall
shlb
xchg
shrb
or
xor
ss
aam
cmp
movsl
xor
hlt
lcall
ss
fsubrp
fsub
fucom
mov
xchg
sarb
out
mov
cli
mov
pop
mov
gs
adc
in
int3
adc
mov
sub
cmp
ja
lahf
dec
fwait
or
les
dec
mov
lock
sbb
xchg
xorb
inc
fwait
jp
outsb
add
je
js
shll
lea
das
test
decb
aas
pop
pop
cmpsl
aad
shrb
or
aad
add
stos
mov
int
and
test
or
pop
dec
mov
aad
fucomi
repnz
mov
int3
stos
jp
mov
xchg
mov
jmp
adc
insl
out
or
in
popf
sbb
sbb
lret
into
jne
subb
mull
jge
push
fwait
mov
popw
inc
lods
scas
into
sub
pop
out
xchg
nop
add
add
jae
es
pop
push
mov
mov
dec
test
sbb
in
mov
addl
xchg
iret
mov
testb
movups
hlt
imul
roll
mov
xchg
out
sub
addr16
jecxz
rcll
push
jae
jne
pop
in
outsb
adc
aas
mov
push
test
inc
repnz
ja
lret
pop
adc
les
dec
pop
jb
aas
clc
push
nop
sbb
test
insb
sbb
inc
inc
mov
loopne
mov
lods
outsb
dec
xchg
mov
cmpsb
add
fxch
insl
insl
xchg
addr16
sbb
and
pop
test
daa
push
insl
xor
and
adc
sbb
loopne
ret
xor
push
adc
jae
adc
inc
pop
nop
in
dec
mov
sub
ljmp
jmp
sbb
addr16
lea
loop
into
repnz
cmpsb
shll
push
imul
adc
inc
sbb
sub
iret
dec
adc
loopne
jbe
or
roll
jb
dec
dec
add
int3
jmp
mov
or
loop
into
push
xor
mov
or
fimull
dec
add
stos
stos
xor
leave
lret
or
pop
sti
jae
aam
adc
test
sbb
es
out
addr16
jge
ljmp
pop
arpl
std
inc
mov
jno
xchg
or
mov
xchg
icebp
filds
stc
arpl
or
add
mov
loope
add
movsl
inc
gs
popa
repnz
test
mov
mov
sbb
je
bound
pop
pop
pop
inc
fnstsw
popa
ret
mov
in
sbb
xor
xor
inc
les
inc
sub
jg
mov
dec
stos
sahf
or
lea
leave
imul
sub
jo
and
xor
packsswb
icebp
sarb
fldl
sbb
add
jno
mov
xor
lcall
stc
jmp
dec
not
push
subl
loopne
repnz
inc
addr16
mov
addr16
iret
and
nop
repz
xor
jmp
sti
and
ficomps
xor
add
test
hlt
fistl
jmp
dec
push
cmp
outsb
or
or
ret
add
in
dec
in
aad
jnp
into
clc
pop
cmpl
ss
sbb
jbe
in
sbb
add
xor
dec
in
jmp
daa
pop
jbe
mov
mov
jno
sarl
shrl
inc
mov
in
xchg
add
cmp
fildll
daa
push
xor
ficompl
inc
fs
pushf
lods
mov
add
fildll
mov
xchg
popa
fs
and
adc
xlat
cmpsl
cli
jmp
dec
aaa
xor
cwtl
or
aam
inc
insb
pop
neg
repnz
popf
add
movsl
arpl
fiaddl
mov
idivb
add
and
cmp
dec
pop
fidivl
pop
stos
jae
pop
out
test
sub
inc
cmp
mov
shl
pusha
outsl
mov
shll
clc
pop
xor
stos
scas
orb
jbe
xor
mov
mov
shr
sti
nop
add
xchg
sub
leave
in
pop
ss
les
dec
fdivs
mov
push
xor
adc
mov
push
int3
dec
add
xor
andl
fcomps
iret
push
and
jb
ss
or
dec
adc
or
js
cmp
test
add
sbbb
popa
xor
fidivrs
insb
aaa
ja
pop
xchg
inc
test
lds
mov
push
jmpw
cmc
mov
push
xor
test
push
sbb
and
int
mov
jbe,pn
sbb
repnz
cmp
xor
daa
clc
jg
frstor
mov
jp
xor
imul
mov
inc
je
arpl
mov
stos
jg
test
dec
sarl
cmp
mov
mov
xor
xchg
es
pop
inc
mov
pop
push
jo
mov
fdivr
testl
jmp
jo
data16
xchg
sub
mov
popf
jmp
imul
cld
and
cs
dec
cmp
sub
pop
or
fwait
ljmp
faddp
in
mov
xor
int3
mov
in
push
out
or
mov
pop
sub
pop
imul
add
dec
adc
movsb
sub
and
jecxz
inc
lret
shr
cs
dec
imul
cld
fwait
in
push
scas
pop
cwtl
and
pop
fs
jbe
into
rsqrtps
iret
stos
pusha
lods
iret
xchg
mov
into
mov
mov
lret
push
add
lcall
mov
in
mov
popf
outsb
dec
cmp
cmp
dec
gs
xor
sbb
mov
insl
aaa
lds
push
out
loopne
jmp
mov
jo
jbe
and
and
leave
add
cmp
xlat
xchg
test
outsb
dec
popa
out
fimuls
mov
xor
mov
add
daa
iret
mov
xchg
imul
jg
dec
test
shll
mov
fmuls
leave
ss
clc
mov
lahf
outsl
sbb
ljmp
cmp
cmp
sub
jecxz
cmovs
adc
dec
or
cmp
mov
jl
bound
mov
jb
cltd
js
pop
adc
mov
test
adc
push
push
hlt
cmp
xchg
dec
out
ret
rcl
addl
and
sub
pushf
fld
test
and
xlat
aam
fadd
cld
inc
xchg
xor
ljmp
pop
ljmp
jl
mov
popa
lock
mov
jle
pop
mov
mov
adc
adc
les
sbbl
mov
lcall
lods
add
xlat
mov
dec
jle
cwtl
lret
imul
subb
adc
fildll
cmp
mov
fistl
adc
add
and
adc
fldenv
in
test
movsl
inc
rcr
mov
sbb
aad
pop
fwait
jne
lret
dec
fs
pushf
ja
ret
xor
sbb
mov
mov
imul
fsubp
xchg
mov
pop
and
ret
or
in
sbb
insb
pop
jge
sub
cs
pop
push
sbb
call
nop
dec
in
lods
pop
cmp
insb
lods
mov
pop
ja
in
out
pushf
loop
add
cli
mov
push
jge
ds
mov
inc
push
xor
fcmovne
sbb
inc
pop
sbb
imul
push
fchs
pop
add
out
push
into
xchg
shrb
call
dec
add
roll
xlat
mov
lods
xor
adc
mov
in
fisttps
aad
inc
ljmp
add
pop
popa
or
out
push
cld
fisubs
cli
sub
pop
or
xchg
sbb
fwait
andl
outsl
das
je
and
and
mov
cld
fmull
icebp
sbb
cmpsl
mov
dec
mov
mov
cmpsl
outsb
jle
sbb
out
pushf
das
pop
inc
fisttpll
cs
out
repz
rcrb
mov
fsubl
aaa
dec
adc
mov
je
adc
dec
xchg
cmp
out
dec
dec
les
aam
cwtl
test
cmpsl
sub
xchg
and
gs
sbb
cld
mov
jno
pusha
rcll
pushf
orl
sub
jbe
insl
test
cmp
xor
mov
shl
dec
mov
je
push
and
roll
sbbb
jae
cmp
popa
je
mov
imul
adc
fldenv
push
inc
aad
outsb
xchg
les
shrb
aas
and
adc
frstor
scas
cmp
dec
or
sbb
jb
jae
outsb
mov
nop
ret
enter
adc
es
sub
pop
iret
orb
daa
sbb
xabort
aas
fcmovbe
add
mov
andl
push
lds
scas
mov
inc
push
repnz
outsl
insl
test
push
shll
shll
xor
and
call
daa
inc
mov
fistpl
lea
xor
jecxz
and
stc
mov
stc
out
pop
jp
push
jno
add
pop
int3
mov
dec
xor
mov
push
lret
stc
imul
lea
pop
fdivrl
stc
add
shll
leave
pop
arpl
psubsb
or
pop
out
add
mov
lds
adcb
fisubrs
xor
cmc
jbe
frstor
pop
add
int3
shrb
lds
sub
push
inc
or
sbb
out
add
mov
fldt
mov
and
add
mov
adc
xchg
movsl
push
ficomps
xchg
cmpsb
out
shlb
mov
mov
ja
mov
into
rclb
and
cli
out
jg
mov
lret
mov
push
mov
sbb
js
fs
clc
test
cli
pop
pop
dec
cmp
push
and
xor
pop
xchg
out
cmp
mov
in
dec
fdivr
and
lahf
aaa
je
xchg
and
fiadds
xor
addr16
dec
enter
inc
push
lret
dec
ljmp
xchg
enter
xchg
xchg
pusha
cmp
jmp
push
inc
pop
das
mov
lcall
xor
dec
adc
cmp
int3
dec
repz
rolb
push
jecxz
outsb
push
js
xlat
inc
dec
mov
lret
in
or
punpcklbw
cmp
mov
out
adc
pusha
sub
mov
in
sub
insb
pushl
sbb
sbb
push
adc
das
inc
fdivl
add
jns
js
shl
mov
pop
mov
test
lret
pop
out
iret
mov
or
sbb
shr
dec
call
enter
pop
dec
bound
ret
stos
test
jmp
sub
or
stos
mov
mov
push
aaa
divps
fcmovne
pop
jecxz
mov
clc
jae
fs
adc
push
mov
xor
loop
nop
lahf
sti
je
aas
mov
mov
roll
mov
leave
cmp
or
jmp
jns
pop
jmp
leave
jb
pop
jge
adc
pop
adc
jno
js
xchg
pop
out
cmp
out
nop
jne
cltd
pop
inc
cmpsl
out
push
enter
mov
push
iret
icebp
push
inc
sbb
call
lea
mov
push
icebp
outsl
dec
sub
mov
pop
cs
lea
stc
dec
in
imul
aam
mov
mov
shrb
aam
mov
gs
popa
mov
jae
xor
xor
shrb
fdisi(8087
cmp
daa
sub
cmp
xor
test
shl
jb
jb
cmp
cmp
mov
sub
lea
lret
sub
mov
xor
jmp
lcall
jmp
xchg
or
enter
repnz
mov
add
adc
scas
push
push
xor
cmc
or
jb
jle
mov
jge
stc
fs
in
xor
pop
inc
jbe
test
push
arpl
mov
push
mov
mov
arpl
sbb
daa
mov
in
mov
inc
stos
and
push
adc
outsb
add
adc
cltd
repnz
xor
mov
jns
mov
pop
lods
xchg
fnstcw
mov
shrl
push
cltd
and
insb
notl
or
and
push
and
sbb
lods
pushf
cli
inc
mov
cld
sub
push
sub
pop
sub
mov
das
nop
andl
js
sub
jo
cmp
cmpsl
push
out
mov
xor
fsubrl
xchg
pusha
add
inc
mov
fstps
int3
adc
hlt
xchg
jae
js
je
es
lods
ss
imul
iret
ds
addr16
lret
orl
xorl
and
add
lea
push
int3
fcmovb
and
call
and
xchg
push
in
cmp
dec
push
scas
pop
push
int3
divb
aas
jle
push
sub
scas
sbb
cli
aad
ljmp
jnp,pn
sbb
sarb
add
jbe
mov
in
clc
es
stos
je
dec
mov
popa
fildll
pop
xchg
sbb
out
pop
cmp
jge
cmp
out
iret
cs
mov
mov
loope
mov
cmp
and
notl
jb
lea
popf
enter
dec
inc
test
lods
jne
roll
lock
test
mov
ds
mulb
leave
stos
cmc
jge
in
out
fidivrs
mov
inc
pop
mov
sub
sub
mov
push
sbbl
mov
sub
das
ficomps
xchg
xchg
aas
xor
out
jns
sbb
and
repnz
and
cmc
out
and
and
mov
es
xchg
out
jno
aam
bound
pop
sbb
std
push
repz
dec
dec
pusha
mov
mov
shlb
jge
orl
lea
xor
push
enter
faddl
jnp
andb
and
pop
clc
sub
xchg
in
dec
sbb
mov
ja
push
cmp
stos
test
lret
xchg
test
xor
xchg
push
sbb
mov
icebp
cmc
mov
shl
test
mov
or
mov
or
or
xchg
sbb
loop
outsl
daa
or
addr16
sub
fwait
cld
mov
cmpsb
xor
fwait
xor
fwait
lds
movsl
out
icebp
hlt
sbb
push
js
jbe
cmc
push
adc
or
daa
out
cltd
xchg
lcall
sub
dec
std
pushf
loopne
jne
push
dec
mov
jl
adc
popf
xchg
js
sbb
testb
mov
sub
nop
xor
fists
popf
aam
cld
int
xor
sarb
pop
icebp
dec
das
sbb
in
cmp
fcomi
push
std
xchg
mov
pop
test
cmp
gs
shl
pop
fs
pop
add
gs
xor
lods
inc
cmc
in
outsl
push
push
inc
and
in
push
dec
dec
xor
cmp
push
and
imul
xchg
imul
into
out
addl
mov
cmp
xor
loope
and
sbb
sub
testb
adc
jnp
push
je
repnz
cmp
and
fidivl
sub
jno
dec
pusha
sub
pop
inc
shlb
xlat
sbb
mov
aaa
cld
lods
divl
xor
lds
lods
data16
sbb
repnz
sub
xor
fwait
shlb
add
ljmpw
imul
mov
ret
sub
sahf
js
or
popf
inc
lret
sarb
loope
cmpsb
imul
push
mov
jno
int3
into
push
ljmp
xor
adc
mulb
or
xchg
pop
hlt
or
cmpb
mov
or
sbb
lea
shll
out
insl
dec
inc
xor
push
xchg
cpuid
pop
in
mov
adc
sbb
fdivrs
fwait
jns
inc
and
aaa
pusha
aam
in
or
popf
push
ss
jge
add
pop
mov
and
xchg
and
fwait
xor
mov
int3
sbb
ja
ds
mov
sbb
xor
push
das
call
add
jle
enter
xchg
aaa
xchg
clc
aaa
mov
ds
jnp
lret
les
and
lahf
add
stc
jmp
dec
in
aaa
test
add
dec
inc
aad
adc
cmp
jns
jo
outsl
fimuls
mov
pop
std
fdivp
cmp
dec
push
adc
cltd
adc
adc
and
push
add
loopne
gs
cmpsb
fld1
inc
cs
addr16
cmpsb
xor
cmpl
jle,pt
jg
pop
clc
es
jns
jbe
bound
and
test
mov
shlb
xor
iret
loopne
aam
lret
xchg
aaa
mov
std
cwtl
xchg
mov
push
xor
xor
push
fwait
xor
add
and
lea
popf
xchg
cmp
ret
js
and
cmp
inc
add
and
cmpsb
mov
es
test
mov
push
xor
cmp
inc
movsl
aad
add
sbb
cmpsl
iret
dec
in
je
repnz
mov
sub
jb
icebp
push
das
movsb
popa
cld
sbb
push
sahf
sbb
stos
push
jg
or
hlt
rcll
es
cmc
dec
or
lcall
cmpsb
pop
sbb
js
push
inc
lret
sbb
xchg
lock
repz
xor
addr16
aaa
daa
test
out
cmpsl
jmp
sub
sbb
sub
mov
fcoml
insb
pop
adc
and
xchg
data16
in
xchg
les
nop
jg
jecxz
sbb
aam
neg
inc
stos
out
std
mov
inc
pop
call
nop
rcr
or
aad
idivl
and
push
push
and
clc
in
push
test
mov
dec
decl
sbb
adc
pop
jp
icebp
and
cmp
bnd
jge
inc
mov
rorl
inc
repz
sub
in
dec
cld
les
jmp
jae
cmp
sbb
push
mov
popf
mov
adc
lcall
dec
repnz
push
out
sbb
jae
imul
aaa
inc
sub
push
lahf
mov
fstp
out
push
xor
or
je
iret
xchg
xchg
or
es
lret
add
adc
inc
aas
jnp
js
cmpsb
cmp
inc
mov
shl
add
push
push
lods
stc
and
adc
lcall
imul
cli
sub
mov
cwtl
bound
mov
lcall
imul
dec
or
inc
and
ljmp
jl
std
addb
lcall
sbb
dec
scas
add
mov
add
inc
imul
js
xchg
shll
mov
xor
rolb
cmp
adc
jge
xchg
push
cmp
inc
mov
xchg
popf
arpl
push
lret
idivl
adc
test
xchg
stos
push
mov
rol
out
daa
fidivrs
cmpsb
jmp
pop
mov
lahf
or
les
adc
gs
lds
xchg
add
addr16
pop
cmc
repz
adc
test
mov
sti
mov
jl
cmpsb
jae
mov
inc
mov
xchg
repz
jb
lods
push
sbb
scas
or
cmpsl
arpl
mov
jle
fwait
add
bound
cmp
fsubrl
sub
inc
mov
outsl
jp
fiadds
pop
inc
dec
xor
push
incl
fcoms
sbb
movsb
cmp
rclb
mov
or
push
mov
imul
in
roll
cmp
out
movsl
out
fnstenv
popa
dec
add
pop
rcrb
xchg
mov
jnp
sub
out
into
scas
mov
inc
imull
test
cmpsb
push
sbb
fsubl
sarb
cmp
pop
push
dec
jne
cli
mov
pop
xor
pop
arpl
test
or
and
out
jmp
dec
sub
inc
lods
sub
js
sub
aaa
les
inc
aaa
nop
lcall
bnd
aad
jns
bound
cmp
pop
aaa
inc
stc
add
ret
push
mov
subb
cmpb
sahf
cmpsl
shr
out
loope
push
mov
and
fwait
stos
orl
nop
movsl
mov
out
stc
jg
aad
mov
inc
aam
clc
sub
mov
stc
flds
jo
aad
pop
push
push
inc
mov
jp
dec
push
je
mov
shl
cld
fcomi
lods
inc
stos
pop
mov
dec
loope
arpl
inc
adc
andl
outsl
lods
sahf
idiv
fsubrl
adc
cmpsl
jb
pop
iret
xor
data16
cmp
mov
test
fadd
xchg
orb
inc
pop
fwait
xor
pop
xor
push
call
insl
xchg
xchg
sub
mov
dec
andb
mov
mov
mov
xor
mov
pop
nop
pop
jno
not
push
ret
out
cmp
jg
and
sbbl
sbb
out
out
adc
sub
or
pop
pop
out
push
mov
fiaddl
adc
inc
inc
adc
xor
iret
and
push
mov
xchg
cmp
ljmp
jp
jnp
sub
ret
aad
mov
test
test
mov
test
adc
adc
divb
inc
cmpsb
mov
fiadds
inc
pushf
ljmp
out
dec
js
push
imul
sub
pop
xor
insl
ljmp
cli
push
stc
imulb
cmpb
cltd
pop
jge
lock
ret
paddd
mov
pushf
lock
push
push
sub
into
or
inc
fldenv
xor
dec
dec
jno
jmp
cs
mov
cmp
inc
pop
subb
sbb
push
pop
add
mov
jecxz
incl
ljmp
mov
movsb
mov
and
insl
fcoms
xor
or
mov
jmp
mov
fstpl
into
test
cmc
sbb
movsl
loope
jne
pop
jae
stos
in
lds
push
jo
inc
xor
push
lods
or
iret
jge
aam
arpl
fs
daa
inc
stos
ss
cs
mov
mov
mov
mov
mov
lods
jecxz
sbb
arpl
sub
fldenv
xlat
aam
mov
mov
mov
insb
and
adc
xor
sbb
cmp
ret
pop
push
push
fnstcw
sub
xor
xchg
notl
fcoml
add
mov
scas
nop
sbb
sub
and
int
xor
rcrb
xor
adcb
lea
mov
push
sub
cmpl
mov
insb
ds
orb
daa
mov
inc
fcmovne
and
mov
sub
lret
stc
test
adc
jmp
dec
push
mov
pop
in
dec
icebp
mov
loop
adc
scas
mov
cltd
leave
out
adc
pusha
ret
pop
adc
xor
loope
jo
sahf
mov
outsb
mov
push
sti
stos
cmp
mov
add
test
adc
faddl
sub
nop
push
ja
movsb
mov
xor
scas
ds
aad
cmp
jle
cld
dec
ja
mov
call
sbb
inc
clc
repz
arpl
outsb
cmp
icebp
lds
cld
and
das
ss
arpl
aaa
and
adc
mov
pushf
pop
mov
add
mov
into
xchg
addb
in
fwait
outsb
into
ja
stos
xchg
lods
inc
loope
push
push
loopne
notb
fisubrs
mov
sbb
and
popf
jo
sbb
cltd
js
enter
xor
mov
out
push
fstl
push
or
cli
mov
mov
pop
in
sbb
addr16
aas
jne
sub
dec
movsb
je
xor
aas
xchg
hlt
dec
in
xchg
dec
lods
push
sub
cwtl
xlat
add
ret
lea
push
lcall
mov
hlt
jmp
fsubrl
mov
les
sbb
addr16
enter
repnz
sub
xchg
adc
cmpsl
fstpt
pushf
jno
icebp
mov
out
int3
loopne
movsl
mov
mov
pop
jae
std
fstl
in
cs
bound
mov
sbb
pop
leave
lods
mov
jge
push
fdivs
cmpsl
mov
mov
cmc
pop
sbb
sbb
sbb
into
push
dec
sub
out
js
mov
clc
lcall
subl
sub
push
aam
xchg
inc
cmp
clc
mov
and
jmp
lea
js
cmp
mov
mov
or
popf
je
pusha
cmpsl
aas
scas
and
test
jecxz
gs
mov
repnz
sar
sbb
mov
sub
push
sub
or
sarb
inc
outsl
sub
adc
cmpsb
loop
mov
cs
ja
enter
sbb
call
test
sbb
stc
testl
push
lcall
pop
hlt
jge
bound
pop
adc
jbe
inc
xor
pop
lret
or
es
fldt
aaa
jns
mov
insl
iret
movlhps
and
fwait
push
daa
ja
dec
les
jae
jne
xchg
mov
xor
repz
arpl
xor
cmp
push
jmp
insb
mov
lret
nop
cmp
pop
mov
push
leave
sti
pop
sbb
inc
cmpb
jns
aad
xlat
cld
icebp
xchg
das
andl
jnp
fsts
lods
stos
mov
cmp
adc
xchg
scas
sti
dec
push
les
sub
adc
fs
pop
aaa
out
xor
inc
enter
test
clc
pop
sarb
out
repnz
mov
add
push
xor
add
xor
push
out
adc
mov
mov
movsb
jb
mov
pusha
cwtl
jg
pop
sub
fldcw
shl
daa
cmp
add
add
push
push
jbe
pop
cwtl
xchg
lret
ficoms
sub
inc
pop
jno
inc
jle
dec
daa
or
lret
push
xchg
out
mov
cmpb
cld
gs
dec
int
fsubrl
imul
pop
test
outsl
mov
lds
sub
mov
imul
scas
fbstp
sub
push
popa
xchg
push
shll
aad
push
and
test
daa
ret
mov
inc
ror
jo
repz
push
iret
mov
xchg
or
pop
jmp
mov
in
fxch
mov
ret
aaa
stos
sti
push
stc
inc
cmp
jae
test
xlat
mov
es
and
jnp
inc
pushf
aad
xor
cwtl
in
xchg
jg
fstpl
jbe
mov
push
test
in
nop
inc
ret
addr16
out
or
xor
jnp
xchg
pusha
loop
repnz
stos
out
aad
cld
mov
clc
mov
dec
repnz
inc
hlt
lret
aas
inc
mov
xchg
bound
in
and
fs
movsb
mov
and
fdivs
arpl
push
leave
adc
fs
jecxz
dec
jg
xchg
push
dec
fwait
adc
and
cmp
pop
outsb
and
mov
jecxz
dec
addr16
pop
dec
xchg
into
rorl
imulb
adc
sarl
jle
mov
out
test
inc
fs
sar
into
cwtl
push
std
push
shlb
adc
mov
lds
xor
cli
dec
sub
loope
jno
sarb
fnstsw
scas
jmp
cmpsb
sub
les
in
push
int3
sub
loope
fnstenv
and
push
dec
mov
out
jo
loop
cmpb
dec
gs
jle
dec
sub
push
icebp
sar
jmp
xchg
movsb
add
sub
fistl
mov
jnp
lcall
pop
stos
ret
mov
or
and
fldenv
loopne
and
iret
fadd
jns
loope
sbb
xchg
movsb
jp
out
xor
imul
jg
movsb
mov
outsb
clc
scas
and
movsl
inc
push
imul
aam
in
inc
push
out
inc
pop
int3
add
push
in
leave
and
stos
xor
aad
xchg
insl
sub
xor
cld
push
xchg
sahf
mov
ret
and
negb
fcmovne
in
mov
dec
jge
sbb
testb
les
cmc
adc
mov
mov
daa
popf
cmp
jns
sub
jne
pop
repz
dec
js
mov
xor
xor
jecxz
push
dec
cmpsl
aad
int
lods
cmp
sbb
sub
imul
adc
test
xchg
in
xchg
jnp
outsl
xchg
mov
out
pusha
dec
jns
mov
lcall
xor
dec
sbb
push
fst
cs
pop
xlat
mov
jle
addr16
add
add
jb
or
lcall
jns
or
cld
in
hlt
jbe
shrl
sarl
push
aad
incl
movsb
aam
daa
test
aaa
push
mov
lahf
pop
mov
adc
jo
push
push
mov
mov
hlt
push
int
sbb
lds
hlt
mov
dec
ds
in
mov
fiadds
cmp
cmp
rclb
into
inc
sbb
xchg
sbb
push
std
bound
bound
jle
push
inc
jo
je
mov
lods
pop
aam
fmull
idivl
sub
scas
adc
cmp
addr16
fwait
mov
pop
cmp
aam
pusha
rolb
daa
ljmp
cmp
mov
cs
in
dec
and
cmp
push
test
insb
jno
stc
sub
rcr
or
popa
adcl
pop
nop
loop
data16
ror
dec
roll
xchg
xor
adc
xor
cwtl
push
stos
int3
or
test
add
add
rcl
test
pop
addr16
mov
insl
mov
dec
jmp
shl
ljmp
dec
pushf
cwtl
cld
xor
shll
out
rcll
popa
mov
and
cli
cld
cmpsl
sti
pop
sbb
push
pop
pop
outsb
in
test
xchg
xchg
inc
repnz
ret
cmpsb
push
enter
dec
cmp
imul
and
fdivl
mov
add
divb
cmc
xlat
mov
pushw
dec
fimuls
xor
aas
loope
sbb
incb
cmpsl
cltd
mov
pop
mov
mov
mov
xchg
mov
cwtl
ds
mov
push
test
dec
cld
push
outsb
sbbl
subl
sub
dec
mov
pop
ss
lret
sbb
cmp
js
jb
cs
into
aam
dec
into
shlb
outsl
xor
aad
loope
pop
test
mov
add
push
sub
ljmp
cmpsb
lods
or
scas
jo
movsb
imul
inc
xor
idivl
lock
imul
jae
push
shrl
or
nop
out
fisubl
sub
push
xchg
dec
push
out
ffreep
fsubl
lcall
or
mov
nop
jmp
push
mov
xor
gs
push
pop
insb
add
mov
inc
adc
sbb
out
cltd
aaa
in
lods
push
roll
dec
lock
cld
fsts
int
sub
test
out
out
xor
popa
and
scas
and
mov
mov
push
lds
cmp
push
ljmp
pop
xor
sbb
mov
cs
mov
imul
mov
cmp
sub
push
andl
jb
pop
cmp
outsl
adc
rcll
loopne
xor
add
cmpsl
adc
ds
inc
xchg
xor
ja
aam
and
insl
vmwrite
mov
mov
fadd
in
xor
add
testb
xchg
mov
mov
mov
inc
in
dec
add
jb
adc
jl
dec
cwtl
xchg
out
pop
inc
jle
and
or
movb
and
scas
sub
xor
arpl
rorl
add
jmp
add
out
je
sub
sbb
ljmp
and
lods
sub
pushf
dec
xchg
fsubs
jmp
in
std
int3
rorw
sub
xchg
push
daa
mov
imul
adc
outsb
popa
insl
sbb
cmp
and
xor
mov
addb
movsl
mov
xchg
sbbb
lahf
inc
shlb
sbb
dec
shlb
movsl
rcr
dec
stc
xor
nop
insl
cmpsb
jo
into
pop
sub
adc
shlb
jmp
lea
mov
inc
mov
outsb
push
popa
mov
and
out
lret
xchg
pop
inc
and
inc
or
test
mov
lock
in
xor
arpl
mov
dec
stos
or
xor
ja
push
pusha
xchg
scas
fadds
jecxz
pop
addl
lret
mov
pause
test
jl
and
inc
inc
cmp
cmpsb
pop
aam
pop
sub
in
in
pop
lea
sti
sarl
fiaddl
popa
cmp
jns
lods
mov
xor
xchg
mov
cmp
mov
aas
mov
cld
fmul
ds
or
sub
sbb
dec
shlb
sbb
pop
cmpsb
test
jno
mov
pop
cs
mov
xchg
test
mov
push
in
fs
enter
mov
jle
push
aaa
sub
push
pop
push
xchg
xchg
outsl
lea
aam
add
cmp
xchg
or
jl
shrl
xchg
mov
pop
je
stos
or
mov
mov
pop
ljmp
cmp
mov
test
repz
fnstenv
loope
cmp
jge
sub
sub
inc
xor
xchg
jmp
lock
xor
je
push
add
push
cwtl
bound
mov
dec
lods
or
dec
lcall
and
nop
or
push
test
lret
mov
sub
inc
fimull
push
loopne
mov
lock
dec
aaa
pushf
jge
inc
dec
jecxz
das
scas
nop
fcmovbe
and
mov
mov
hlt
inc
add
ficomps
fcoml
xchg
jns
js
test
mov
ror
lods
dec
das
dec
aad
pop
fcomps
out
cmp
xor
aam
sub
add
xchg
sub
pop
mov
add
jg
jge
mov
es
sbb
pop
xchg
roll
xor
xchg
mov
and
mov
and
sbb
jae
das
sub
stc
mov
lock
out
nop
ret
add
pop
mov
cmpsl
pop
adc
xchg
add
mov
out
fcomp
aaa
fldcw
movsb
jecxz
orl
in
out
repz
mov
cmp
push
loope
cli
or
adc
xchg
sbb
in
cs
pop
jg
je
xchg
jge
jbe
fs
js
lds
cld
dec
fldl
xor
sahf
aaa
push
xor
mov
mov
jnp
lahf
or
pop
fwait
rclb
jae
lock
pusha
ja
push
cld
stc
or
scas
lcall
jb
scas
cltd
or
adc
movsl
out
fsts
xchg
ljmp
frstor
rorl
fstp
enter
psllq
data16
and
ret
ds
cs
or
adc
xorb
cwtl
sub
push
fs
fs
loopne
jge
jle
mov
popf
hlt
lcall
aas
mov
or
cmc
add
call
jnp
and
std
jns
sarl
inc
mov
push
testl
mov
pop
sub
jno
push
inc
lock
cwtl
xor
cmp
das
int3
in
pop
sub
pop
ret
ret
enter
rcrb
iret
mov
psllq
rclb
lcall
jno
negb
jmp
cltd
adc
dec
inc
jnp
call
loop
jae
sti
xor
adc
test
add
roll
xchg
mov
cmpsb
std
cmp
xor
mov
cmpsb
xchg
les
xchg
lret
outsb
lods
inc
jmp
xor
jmp
jecxz
sub
mov
je
pop
or
xlat
dec
dec
hlt
xor
dec
fildl
xor
cmpsl
roll
add
rolb
hlt
mul
add
dec
rorb
xchg
xchg
shl
popa
xchg
bound
push
cld
mov
test
jb
leave
xor
lds
gs
js
das
cmpsb
pusha
mov
cmp
sbb
je
addr16
pusha
and
movsb
push
ljmp
popa
cmp
out
fsubrs
loopne
sbb
mov
arpl
fwait
nop
dec
clc
dec
xchg
daa
scas
mov
jns
test
mov
pushf
scas
dec
sub
or
sahf
cs
add
aas
sbb
mov
cmpb
movsb
movl
jmp
xor
sbb
loop
pop
sbb
sahf
out
push
or
xlat
or
jl
in
repz
pop
sarl
mov
push
dec
jecxz
popf
cmp
add
push
add
aam
mov
shll
mov
stc
and
scas
icebp
cli
hlt
pextrw
pop
test
xor
and
movsl
adc
je
in
add
mov
cmpsl
push
loope
jp
shll
fbld
and
mov
js
je
lcall
scas
or
les
stc
lea
psrad
mov
outsl
leave
int
in
adc
data16
inc
mov
and
xchg
aad
and
insb
xchg
cwtl
lcall
int
adc
pop
cmp
divb
shrb
ficompl
xchg
xchg
push
into
lods
out
push
idivl
popa
inc
push
rorl
cmpsb
xor
test
inc
sbbl
sub
mov
testl
sahf
fcmovnb
sti
pushw
gs
pop
lock
das
inc
fimuls
jne
sbb
aaa
cmpsl
imul
stos
pop
xlat
insl
jae
pushl
push
fs
pop
cmc
out
enter
aam
in
or
imul
push
loope
cli
mov
sti
pop
popa
fdivs
ret
out
jecxz
insl
sub
xchg
sub
mov
enter
arpl
push
cltd
xlat
lret
fstps
lcall
lahf
leave
cmp
push
outsb
enter
adc
mov
std
ja
ret
inc
call
enter
add
mov
jno
inc
lods
mov
mov
jno
pop
mov
pop
mov
xor
pop
hlt
jmp
inc
pop
nop
mov
rorb
inc
popf
aas
and
mov
cmp
aad
xor
sub
cwtl
adc
xchg
or
scas
jmp
int
or
je
fsubrl
ja
jno
sbb
mov
fimull
mov
mov
inc
fistps
cmp
xlat
arpl
lods
nop
mov
stos
bound
in
out
sbb
lods
jne
push
mov
dec
or
xchg
insb
xchg
add
push
xor
data16
and
fsqrt
adc
pop
stos
adc
cmp
arpl
or
jbe
or
andl
aam
insl
sub
mov
repnz
aas
or
andl
and
aaa
or
push
lcall
sbb
fsqrt
pop
push
out
ret
sti
je
jecxz
xchg
xchg
jo
repnz
sbb
xchg
or
repnz
loope
xchg
mov
lods
pop
push
dec
test
xchg
jb
nop
fsts
cmp
data16
movsb
sar
mov
sbbb
mov
push
cld
dec
stc
loope
inc
aad
mov
xchg
push
adc
notl
das
push
divb
sbb
les
mov
pop
les
inc
push
test
test
adc
lds
repz
or
jmp
cli
stos
imul
insl
mov
ja
jle
cmp
sbb
inc
ss
sarl
cmp
mov
sahf
mov
cmc
jo
lods
pop
gs
sbb
lcall
loopne
ss
inc
cmp
sbb
adc
fwait
xor
sbb
jo
cmp
call
xlat
inc
inc
mov
cmpsl
pop
sbb
inc
mov
dec
mov
roll
mov
mov
movsl
repz
ret
aas
repz
push
les
sub
stos
sub
mov
mov
gs
pop
je
sub
xchg
sbb
adc
fwait
gs
xor
xor
mov
mov
sbb
dec
mov
lcall
jno
daa
outsb
cmp
mov
mov
cmpsb
movsb
mov
rcrl
push
sar
popa
sbb
adc
cmc
cmp
pushf
or
inc
testl
outsb
push
cld
cli
out
andb
in
push
sbb
es
lods
fisubrs
inc
sahf
mov
xchg
inc
hlt
jge
xchg
rorl
cld
sub
jb
cmp
pop
addr16
shll
cmp
xchg
cli
scas
dec
lahf
mov
aaa
cmp
jp
pop
push
lds
out
jmp
pop
stos
xchg
dec
sti
dec
push
daa
jo
or
insb
ret
repz
ds
stc
ja
ds
gs
rorl
lahf
cld
lret
mov
pop
dec
test
in
push
xchg
pop
push
jnp
xchg
adc
repnz
sub
mov
loope
pop
sub
sarl
js
lods
cmpsb
inc
idivl
cmp
adc
clc
or
fimuls
dec
lret
mov
cld
jmp
jecxz
loop
xor
arpl
cmovle
lods
outsb
scas
mov
push
ja
push
mov
ljmp
inc
testb
in
rol
call
aaa
outsb
fistps
in
pop
xchg
xchg
jp
xchg
jmp
mov
lcall
or
add
scas
and
inc
push
inc
sahf
pop
dec
ret
or
mov
jb
push
frstor
cwtl
cld
push
out
xchg
ret
lret
mov
inc
dec
pop
jns
fists
push
movsl
xchg
add
and
xchg
or
push
les
xchg
icebp
pop
sub
sbb
sbb
mov
mov
pop
orb
testl
std
int
xchg
sbb
sub
data16
rol
xchg
aam
push
movb
xchg
xor
and
cmp
pop
loop
ja
in
and
sub
mov
push
xchg
je
jns
inc
ret
xor
jle
les
scas
lods
inc
or
insb
fsub
and
mov
out
add
sahf
cs
jl
push
dec
sub
ljmp
imul
sub
mov
pop
dec
jne
test
scas
cmp
add
mov
dec
dec
mov
xor
cmc
divl
int3
fbld
popl
pop
in
push
enter
mov
lret
in
pop
adc
xchg
clc
lods
sub
xor
leave
fcmovb
cmpsl
add
das
sub
insl
push
mov
pushf
in
and
fcompl
aaa
mov
imul
add
mov
rolb
inc
pop
adc
stc
les
aad
test
cmpsb
not
push
sahf
fistpl
int3
sbb
jmp
lea
push
add
mov
cli
mov
lahf
inc
les
sarl
adc
jmp
arpl
add
pusha
and
mov
rcrl
or
add
mov
loopne
mov
add
cmpsl
aas
xchg
cmp
shrb
cs
cmp
ret
dec
add
cld
mov
in
cmp
lds
ja
or
dec
xor
xchg
or
cmp
ja
inc
jge
addr16
ljmp
pop
and
push
xchg
cmp
push
sub
xchg
das
xchg
fucomp
outsl
stos
jae
pop
ds
test
mov
adcl
lea
and
aam
data16
mov
cmp
jle
