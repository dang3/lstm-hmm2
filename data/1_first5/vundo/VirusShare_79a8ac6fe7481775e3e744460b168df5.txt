lods
js
sahf
lods
sub
testl
push
negl
pusha
sub
adc
arpl
jb
hlt
adc
push
adc
adc
cwtl
arpl
adc
scas
jns
nop
arpl
adc
mov
inc
push
shl
daa
gs
add
mov
mov
push
adc
mov
pop
fs
outsb
xor
and
cld
sbb
mov
mov
dec
add
jae
adcl
in
push
fld
dec
xchg
pushw
adc
push
inc
jns
lods
mov
dec
scas
or
nop
xchg
out
sub
inc
loop
push
xchg
xor
imul
in
imul
insb
xchg
dec
dec
mov
inc
stos
jge
in
mov
fwait
lods
inc
das
push
scas
jns
scas
inc
es
sbb
loop
add
mov
nop
adc
test
test
push
adc
pop
in
and
sbb
and
subb
std
pop
adc
lret
sub
testb
pop
cld
filds
adc
loope
xor
arpl
adc
add
xchg
in
mov
in
loopne
pop
adc
andb
lods
add
xchg
pushf
xlat
pop
adc
mov
fcomps
push
adc
sbb
pop
adc
loopne
pop
adc
add
iret
or
xchg
fmulp
mov
js
test
adc
or
adc
pop
inc
loope
jno
or
cmp
jge
arpl
adc
xor
out
or
mov
xor
mov
mov
or
mov
push
add
jl
out
outsl
or
call
ss
mov
xchg
in
xor
adc
mov
imul
and
cmpsb
adc
xor
gs
lods
cmc
mov
or
adc
adc
adc
cwtl
sub
add
push
fadd
lods
push
mov
mov
addr16
adc
nop
bound
out
repnz
shll
xor
shl
lret
jle
dec
push
lret
ret
int3
cwtl
dec
push
mov
pusha
cmpsb
sub
add
lret
push
mov
adc
iret
mov
lods
jbe
xchg
mov
or
jae
fsubrl
int
rcll
inc
inc
clc
mov
sarb
pop
out
xor
or
pusha
push
adc
sbb
push
pop
mov
or
lods
xchg
push
pop
ljmp
jae
iret
inc
cmp
les
lock
addr16
xchg
jp
shlb
or
fs
push
adc
cld
stos
subl
cmp
push
sbb
dec
dec
repz
jl
push
sarb
or
rorb
cmp
or
es
xchg
fcomps
pusha
push
adc
lahf
xor
jg
stc
insl
pusha
mov
stos
out
adc
adc
add
iret
push
xorb
pusha
push
adc
sti
xorb
push
mov
cmpsl
pushf
sbb
sbb
jbe
cmp
pop
mov
xor
iret
lea
or
test
cltd
aad
fwait
mov
pusha
push
adc
sub
bsf
xchg
stc
les
and
sti
xlat
cli
aad
sub
movsb
repnz
cmpsb
jp
mov
mov
cmc
std
mov
out
push
sub
push
adc
dec
cmp
mov
xor
scas
jl
push
jge
xchg
cmpsl
ss
insb
cltd
jnp
dec
lcall
push
adc
and
jmp
scas
pop
mov
dec
fwait
ss
jno
xchg
push
pushf
cmp
xor
push
jl
sub
push
adc
cld
gs
xchg
adc
push
dec
subb
adc
xor
xlat
sbb
lods
sbb
add
mov
imul
pop
ja
repz
cs
stc
mov
and
daa
dec
sahf
std
sub
sbb
arpl
cmc
ss
and
insl
adc
pop
out
nop
movsl
adc
out
mov
and
icebp
call
push
push
lcall
outsl
pop
lret
push
dec
cltd
xor
cli
bnd
inc
out
push
jne
lods
imul
mov
pop
mov
mov
adc
or
fsub
loop
idivl
dec
inc
movsb
out
lods
dec
lods
or
loop
push
andl
push
fwait
cmp
mov
int3
xchg
cli
insb
cmc
and
js
push
adc
adc
jle
mov
fidivs
sub
mov
inc
roll
adc
popa
mov
push
add
aad
cmp
pop
sahf
ret
pop
daa
stos
in
fcompl
lahf
xchg
lods
xchg
pop
cli
shr
sahf
js
pusha
push
adc
add
std
push
xor
inc
mov
or
sub
and
inc
int
and
mov
xchg
int3
cmpsl
and
rcr
mov
sbb
cmp
lcall
popa
xchg
adc
push
adc
push
inc
fcomps
repnz
jno
fidivrl
dec
pop
jmp
add
shll
cmp
stos
int
mov
test
stc
dec
cmp
dec
outsl
gs
jl
mov
test
fwait
mov
and
adc
sbb
test
lock
loop
and
pusha
push
adc
inc
jge
cltd
mov
jb
mov
cmp
rcll
test
push
imul
sub
add
mov
pusha
push
adc
adc
pop
stos
sub
rcrb
fwait
adcb
pop
xchg
lods
sub
add
icebp
cld
cmp
mov
sti
jl
lods
out
xchg
mov
or
leave
test
jnp
aaa
xchg
pusha
push
adc
out
lret
add
sub
sub
cmpsl
call
push
ljmp
add
jnp
in
dec
or
adc
lock
stos
cmp
xchg
mov
adc
adc
push
or
cmpsb
cmp
pop
push
push
cmp
dec
mov
sub
pusha
push
adc
or
jbe
int3
fsub
pop
mov
jo
push
pop
push
sub
idivl
inc
lea
push
adc
mov
negb
push
fisubrl
cmp
mov
dec
adc
jge
repz
mov
pop
push
je
xlat
jmp
adc
jg
dec
lahf
sbb
out
lahf
lock
out
fnstsw
cmp
adc
push
sub
push
aas
jle
jb
push
ja
jge
cmpsb
xchg
push
adc
ss
sbb
leave
xchg
stos
or
outsl
push
mov
pop
adc
mov
push
adc
mov
jl
scas
pop
ss
add
pusha
cli
push
int3
push
shrb
push
adc
jg,pt
xor
mov
jb
jg
addr16
je
ja
test
push
js
lahf
mull
push
jmp
adc
sub
inc
test
cmp
push
adc
dec
adc
xchg
mov
repz
iret
lahf
push
sbb
std
mov
xchg
imul
fsubl
arpl
adc
loopne
adc
adc
mov
push
addr16
adc
push
pop
inc
adc
cwtl
enter
into
leave
shrl
mov
and
int3
dec
pusha
leave
int3
jns
push
cli
xchg
stc
repz
mov
mov
fcmovnbe
inc
ss
mov
xchg
and
jns
add
dec
push
aaa
popa
cmp
xchg
shl
sub
mov
dec
cmp
push
js
lcall
cld
loopne
inc
rorl
call
xchg
xchg
leave
lea
mov
cmpsl
movsb
lret
xlat
jno
pop
ret
sbb
dec
push
repz
jle
in
pop
in
jl
idivb
cltd
lods
dec
fnstenv
leave
sbb
jl
mov
jae
adc
sub
xor
enter
jnp
into
negb
out
addr16
dec
jae
or
jmp
xchg
fisubrs
sub
fimuls
jne
push
mov
les
ljmp
jg
ret
pop
sub
push
jno
inc
cmp
mov
lcall
sbb
adc
push
pop
mov
jmp
lret
or
sahf
xor
ljmp
sub
cmp
je
insl
stos
in
movsb
pop
popa
mov
jnp
fxch
popf
jns
pop
daa
fldenv
lcall
lds
test
pop
ss
jecxz
out
lret
cmp
xorb
int
lret
stos
xchg
jbe
dec
push
mov
push
std
sub
pop
scas
mov
scas
mov
fistpl
xchg
cmc
test
push
or
jl
push
adc
enter
in
inc
ja
ret
lock
sbb
dec
es
lret
inc
lcallw
sub
cwtl
sbb
pop
shlb
lds
repz
push
ret
test
mul
mov
call
mov
mov
jge
xor
adcl
mov
out
daa
push
nop
sti
sub
stc
pop
subl
mov
ss
lea
and
pop
adc
mov
loope
movsl
iret
aad
sarb
test
std
fcompp
push
inc
addr16
dec
out
jl
pop
cmp
sub
mov
push
adc
mov
iret
sbb
adc
push
mov
jb
pop
sbb
dec
push
filds
xor
mov
add
fstpl
cmpsb
sarb
push
cs
push
mov
or
push
adc
xor
aam
test
fs
sbb
mov
and
cmp
dec
mov
outsl
ffreep
or
aaa
sbb
int3
movsb
mull
lds
sub
in
leave
pusha
addb
mov
or
cmpsb
mov
aas
lret
jnp
mov
mov
xchg
lods
cwtl
mov
push
fs
icebp
mov
adc
ljmp
dec
add
fnstsw
add
out
cli
push
ss
enter
adcl
outsl
jp
jmp
lahf
pop
jge,pt
and
ret
xlat
scas
sbb
jl
cld
fdivs
pop
pusha
dec
jb
mov
arpl
sahf
jge
pop
mov
addr16
popa
ss
and
xor
or
xchg
and
sbb
psllw
xchg
jle
pop
popa
mov
xchg
mov
mov
add
sbb
adc
dec
fwait
stc
sub
ja
cmp
add
sub
arpl
fnstcw
mov
lock
dec
fwait
ss
jmp
sub
pavgw
mov
movsl
lods
sub
mov
sbb
mov
leave
ret
fdivrs
mov
daa
xchg
dec
data16
gs
mov
out
push
stos
pop
mov
mov
scas
outsb
and
jmp
movsl
mov
aam
je
orb
lahf
repz
lcall
mov
aaa
dec
cmp
lods
and
or
xor
jecxz
outsb
or
fs
lods
mov
ss
dec
adc
jle
pop
les
aad
cmp
mov
iret
insl
arpl
or
cmp
ljmp
lcall
cmpsb
ss
push
lret
cmc
mov
xor
push
mov
stos
ss
push
cmp
fucomi
mov
or
in
sbb
mov
bound
idiv
rcr
inc
fnop
loopne
adc
loope
ret
adc
jb
and
jnp
repnz
xacquire
xchg
push
dec
pop
adc
shrb
fmull
and
inc
aas
hlt
daa
dec
push
dec
fcmovnu
dec
sbb
call
pop
fucomi
cmp
push
adc
jns
test
pop
cwtl
clc
insl
mov
mov
cmp
scas
or
std
push
xor
fmull
std
lods
js
leave
dec
das
popf
cli
rcr
in
push
xor
adcl
in
push
jns
cmp
pop
sub
push
bound
xor
xor
mov
mov
xchg
lods
testb
pop
push
push
xor
sub
and
dec
iret
lcall
mov
daa
cltd
mov
push
jecxz
cmp
lahf
xlat
jb
ljmp
aam
push
inc
mov
add
xor
jo
cs
mov
cmp
pushf
pusha
sub
in
mov
nop
pusha
push
adc
cmp
xchg
popf
mov
jg
lock
adcl
ss
cwtl
pusha
push
adc
mov
inc
rolb
call
ljmp
adcb
dec
sbb
add
adc
cmpsb
scas
je
jge
cmpsl
test
or
xchg
adc
ss
xor
daa
fucomp
sbb
cmpsl
dec
movsb
lea
or
jl
pop
out
test
sbb
cmp
mov
test
loope
and
adc
mov
fstl
mov
push
xchg
and
lcall
add
sar
das
pop
jl
add
int
notb
fildl
out
lret
rcrl
divb
xor
aam
out
lds
or
addr16
movsb
shlb
adc
sbb
add
pushf
xor
dec
jl
mov
and
outsl
int3
hlt
test
pop
ret
icebp
clc
cmp
iret
addb
sub
sbbb
shlb
mov
fsubrs
cmc
loopne
stos
and
sub
or
cmc
pop
out
test
mov
lods
pusha
push
adc
clc
scas
or
fnstsw
jno
dec
fwait
dec
push
push
push
pop
pop
jle
call
sub
push
adc
inc
xor
scas
sub
pop
push
or
xchg
cmpsl
movsb
push
push
adc
repz
enter
cmpsl
arpl
mov
cld
push
cwtl
inc
out
ljmp
aaa
ja
addl
and
and
mov
xor
dec
adc
sbb
movsb
stc
or
jb
or
mov
inc
dec
sub
jns
loop
dec
addr16
lret
addl
ljmp
data16
pop
loop
push
sub
adc
cmp
xchg
aas
sub
jo
imul
incl
mov
xor
inc
mov
or
movsb
popa
roll
jns
lcall
push
je
xchg
shrb
xchg
inc
fcmove
divb
ja
cmp
mov
push
push
jle
loopne
aas
mov
insb
mov
xor
mov
mov
xchg
add
cmp
jb
adc
sub
into
enter
or
test
addr16
pop
mov
mov
ds
int3
out
mov
push
adc
iret
jp
jne
push
mov
call
adc
inc
aad
hlt
jb
add
adc
push
leave
jg
push
adc
pop
pusha
xchg
xor
les
mov
sbb
pop
sub
sub
or
ret
pusha
sbb
imul
jns
out
call
repnz
xor
or
cs
sub
adc
cmp
add
fucomp
jbe
enter
jns
cmp
pop
push
mov
je
mov
iret
push
mov
outsb
mov
push
xchg
inc
inc
ss
aam
mov
ja
int3
icebp
push
cmpsb
out
ror
aad
fnstenv
pop
xor
adc
cmp
insb
add
mov
mov
dec
into
push
popa
xchg
mov
xchg
dec
mov
in
xor
push
test
mov
add
into
push
enter
pop
nop
fcmovnu
jle
or
dec
push
cmp
and
scas
jle
cmp
or
sub
aas
outsl
gs
cmp
mov
movsb
pop
xor
out
dec
and
cmp
mov
push
faddp
imul
sub
outsl
in
pusha
cmp
add
leave
out
imulb
mov
ja
add
mov
ds
cmc
imul
mov
scas
scas
dec
inc
les
inc
rcrb
sbb
push
dec
dec
pop
insl
jb
mov
mov
ret
gs
adc
sub
inc
scas
inc
xchg
test
dec
daa
loope
jecxz
xlat
and
es
or
xor
jle
push
lea
cmp
mov
push
dec
out
scas
jmp
xor
fisubrs
sub
repz
fcomp
lods
push
push
call
mov
mov
arpl
lcall
in
ds
pop
leave
push
hlt
out
or
mov
mov
cli
je
into
and
insb
pop
and
mov
imul
xor
test
fs
out
in
clc
push
and
xchg
sahf
add
ret
xchg
hlt
mov
cmpl
jecxz
arpl
les
test
inc
aam
in
xchg
pop
ret
shl
rcrl
fsubrs
jo
lret
dec
ret
xchg
test
cmpsl
mov
mov
jnp
cmp
inc
add
pusha
dec
popa
jo
cmp
inc
mov
mov
xor
adc
adc
dec
pusha
dec
outsb
icebp
stc
repz
leave
outsb
xchg
enter
xor
mov
ss
rclb
add
jnp
sub
roll
cld
outsb
addps
cs
fwait
enter
push
aaa
adc
pusha
outsb
lock
sbb
inc
and
inc
test
loope
fwait
ss
push
pop
push
mov
outsb
push
addb
cltd
dec
mov
xor
dec
test
gs
xchg
ss
scas
rcrb
addl
pusha
rcll
mov
push
arpl
loopne
mov
insb
fdivrs
scas
mov
sub
or
inc
sbb
mov
mov
sub
inc
into
and
es
fwait
mov
rolb
pusha
pop
loopne
add
and
jge
push
ja
inc
test
inc
push
jecxz
pusha
rolb
jbe
cmp
or
jl
in
mov
xor
lret
cmp
add
movsb
cld
or
jb
mov
stc
les
mov
and
pop
and
push
inc
fwait
ss
je
mov
and
or
icebp
add
and
sbb
push
shlb
add
daa
pop
ret
es
adc
mov
add
cmp
and
out
pop
xor
push
insl
nop
xor
ret
xorb
push
data16
sub
call
cs
mov
jp
ljmp
dec
cltd
cmp
sub
scas
xchg
add
shrl
xlat
imul
inc
sbb
ja
rcl
fwait
sbb
xchg
or
popf
adc
mov
jne
lret
loop
cwtl
sbb
add
push
bnd
dec
add
adc
push
popa
int3
lcall
mov
push
loopne
and
bound
jmp
mov
shll
inc
test
xchg
push
insb
mov
mov
cmc
lods
or
mov
aam
mov
stos
lahf
ds
mov
adc
enter
ror
push
sbb
adc
push
es
add
cmpb
repnz
sbb
adc
push
fmulp
push
pop
insb
xchg
jbe
xchg
outsb
cmp
pop
in
nop
mov
adc
sbbl
adc
jge
add
test
dec
es
stos
pop
lret
xor
fcmovbe
push
aas
pop
sub
arpl
adc
sub
ror
cmp
daa
mov
lds
add
lods
mov
xchg
leave
mov
shlb
adc
mov
cmp
ljmp
jb
stos
aam
pusha
mov
push
adc
xor
arpl
add
inc
sub
and
mov
cld
xor
jmp
xchg
adc
mov
xchg
test
cmp
pop
push
xchg
pop
pop
adc
adc
movsb
cmp
fs
daa
xchg
pop
sub
cmp
lock
mov
push
dec
fsubrs
imul
xlat
inc
add
sbb
in
pushf
sbb
push
lea
stos
mov
sub
mov
mov
fwait
imull
jl
les
dec
or
lret
scas
push
stos
adc
jns
and
dec
sbb
add
cmp
rolb
in
lret
jg
and
fistps
mov
inc
xor
mov
iret
clc
mov
test
and
leave
rcrl
test
inc
aam
cmpsb
arpl
xor
jbe
imul
aad
mov
sahf
sub
call
sbb
and
adc
and
in
mov
adc
pop
mov
xchg
cltd
inc
lahf
cmp
adc
cmpsb
arpl
jae
fdivrs
test
cmp
ss
fidivl
idivl
add
xor
sahf
or
adc
xor
andl
mov
es
in
push
jecxz
mov
mov
jl
or
inc
add
inc
xor
test
dec
fwait
inc
xchg
out
cmpsl
or
jne
imul
pusha
mov
cwtl
inc
jb
inc
outsb
xlat
and
add
es
or
jg
je
adc
pusha
xor
dec
imul
fnsave
clc
cmp
push
mov
es
xor
push
dec
mov
push
xchg
daa
adc
sti
xorb
dec
test
addr16
push
xchg
ss
sbb
ljmp
xor
and
out
in
mov
test
cs
fwait
xchg
add
jle
lock
jle
pop
adc
cmp
xor
insb
outsb
xchg
ss
jo
sub
mov
push
mov
xorb
sub
mov
outsb
adc
push
adc
sbb
adc
rolb
stc
addr16
pop
fdivl
into
ja
jnp
cli
leave
jns
imul
test
aam
insl
adcl
cmc
and
dec
push
shll
jg
push
ss
into
sub
pop
and
push
std
cmp
lods
inc
cmpb
inc
popf
xor
std
je
sbb
sbb
imul
and
inc
xchg
pop
pop
inc
sbb
add
rcrb
push
xchg
or
popf
adc
nop
xchg
loop
jns
adc
inc
dec
or
push
repnz
sub
adc
pop
adc
inc
push
fucomi
or
xchg
push
jmp
inc
or
or
push
cmpsl
in
insb
arpl
gs
and
and
jns
mov
mov
pushf
mov
or
mov
push
icebp
popf
insb
std
cmp
ret
sbb
fcmovnb
pushf
xchg
xchg
mov
xor
movsb
sbb
dec
xor
mov
sub
outsl
and
dec
push
and
or
push
jno
fisubrs
idivb
cmp
add
out
cld
mov
sbb
add
test
femms
jo
sub
pop
sub
enter
pop
inc
and
sub
rorl
test
lret
popa
jg
fcmovb
sub
into
cli
sbb
sub
leave
hlt
lahf
out
hlt
dec
push
adc
mov
jae
mov
mov
out
test
int3
sbb
shrl
int
and
aaa
fs
jnp
and
imul
loop
iret
inc
rolb
xchg
cmp
xchg
adc
xor
iret
icebp
adc
negb
sahf
test
adc
and
and
xchg
sahf
popf
cmp
aas
or
fisubrs
pop
push
dec
pop
addr16
push
insb
mov
fstpl
pop
inc
insb
sub
lock
fimuls
sbb
sbb
push
cmp
sub
push
loop
add
mov
fdivrs
jmp
xchg
sbb
ja
mov
mov
fs
add
in
mov
mov
mov
je
pop
push
stc
xchg
cmpsl
fildll
mov
cmp
inc
xchg
dec
in
andl
movl
filds
outsl
pop
fwait
fwait
andl
popa
test
jnp
int3
enter
pop
and
imul
mov
imulb
ret
pop
sub
ret
add
loopne
subl
add
xchg
aam
hlt
ret
cmp
inc
icebp
ret
insb
inc
dec
leave
addb
lea
adc
and
cmp
sahf
cmc
cmp
xlat
xor
pop
cwtl
sar
add
and
lock
push
mov
es
sbb
mov
or
jp
push
gs
push
adc
and
add
inc
fdivs
push
or
xor
cs
sbb
adc
xor
daa
and
test
and
es
adc
sbb
pop
cli
js
adc
rorl
out
add
pop
sub
dec
test
adc
ss
fdivr
xor
addl
into
shrl
push
adc
test
mov
and
adc
insb
aas
ja
xchg
add
arpl
mov
xchg
fistl
or
lods
mov
mov
xlat
mov
inc
adc
addb
or
xor
and
icebp
push
les
jo
aas
cmp
lock
sbb
inc
popf
adc
push
mov
es
pop
dec
jnp
mov
dec
jne
je
sbb
pusha
add
or
push
aaa
stc
sbb
push
mov
mov
in
push
aas
clc
ds
fadd
ret
inc
aaa
mul
dec
cwtl
cmp
ja
sbb
inc
and
inc
test
aaa
insl
ja
adc
mov
add
ret
lock
sub
shlb
or
xor
xor
cltd
push
or
or
insl
pop
repnz
call
cmp
lock
out
stos
or
add
add
sub
add
pop
and
adc
and
adc
add
push
sub
adc
add
xor
add
xchg
and
adc
add
inc
sub
adc
out
es
test
popf
sbb
lea
cmp
arpl
xchg
dec
adc
add
pop
test
sbb
adc
std
pop
ds
loopne
inc
lcall
fcompl
xchg
push
in
or
fs
mov
add
mov
clc
daa
adc
lods
outsb
inc
lahf
daa
cmp
inc
cmpb
mov
pushf
jl
pusha
push
adc
lcall
cwtl
enter
ja
js
add
test
pusha
push
adc
xchg
dec
adc
xchg
lea
gs
outsb
les
mov
mov
rclb
sub
push
adc
mov
push
adc
divl
adc
dec
mov
dec
ljmp
es
enter
scas
jne
push
jecxz
addr16
mov
sbb
lahf
ret
popf
mov
sub
cmpb
fcomps
inc
js
pop
mov
fwait
pop
pop
sub
inc
fnsave
sub
out
xlat
bound
sub
aam
ss
mov
sub
and
push
divb
das
or
xor
jns
aaa
pop
jge
imul
mov
dec
mov
jnp
push
nop
aad
mov
loopne
out
sbb
pop
pop
adc
push
mov
or
inc
lods
idivl
fsubr
or
ficompl
jmp
lea
jbe
fcomp
mov
mov
ret
push
xchg
ret
ja
addb
jle
dec
fnop
test
in
arpl
icebp
rorb
orl
or
mov
insl
and
and
fildll
dec
push
fadd
hlt
add
mov
into
pop
pop
push
mov
in
or
jmp
mov
or
js
pop
adc
fnstenv
clc
cli
mov
adc
pop
xchg
push
jle
sub
scas
popa
stos
jl
push
push
out
fldenv
and
add
push
adc
cwtl
xor
mov
adc
and
mov
push
aam
pop
cmp
xchg
pusha
inc
shll
lret
jb
jmp
xor
cmp
stos
push
mov
cmp
in
xchg
fmuls
xchg
mov
lock
out
rcrl
jns
mov
out
movsb
addr16
gs
xor
pop
popa
mov
jmp
rorl
sti
xchg
push
adc
fstpt
xchg
mov
lds
push
stc
repz
lock
xlat
not
jnp
xor
ftst
out
cmp
push
sti
aam
push
adc
mov
enter
in
es
inc
pop
jns
xchg
addl
xchg
xlat
ljmp
out
filds
inc
test
outsl
mov
pusha
sarl
pusha
shrb
adc
inc
jne
mov
push
xor
sub
ja
fcmovb
ja,pn
sti
sbb
ja
xchg
add
insl
mov
pop
pop
std
jnp
pop
repnz
adc
adc
fwait
rorb
je
out
xor
divb
scas
das
mov
mov
insb
int3
dec
daa
push
das
or
aas
idivl
jne
fdivrs
aam
pop
repz
push
imul
inc
imul
pop
cmp
mov
fidivl
ss
movsb
or
fidivs
fdivl
div
scas
or
add
leave
fldenv
sbb
aas
push
push
mov
pop
fsubrs
insb
int
mov
ljmp
mov
ja
imul
stos
rcrl
sbb
adc
inc
out
push
pop
pop
xchg
or
push
push
push
addb
xor
cmp
cltd
adc
mov
add
sub
cltd
pop
cmp
test
fwait
rolb
sahf
shlb
jmp
adc
fs
sahf
popa
dec
ss
scas
adc
mov
pop
adc
enter
sub
mov
adc
fadds
in
ficomps
push
sti
aad
fcompl
rcrl
push
adc
imul
pop
adc
jae
mov
test
cmp
cltd
xor
jp
xchg
lea
push
adc
mov
roll
pop
addr16
hlt
pop
enter
lock
pusha
push
adc
adc
repz
xor
fwait
and
pop
sbb
fnsave
std
in
scas
mov
cmc
imul
and
ds
arpl
adc
adc
test
jecxz
daa
inc
das
ja
pushw
adc
jg
adc
adc
aam
push
adc
enter
fisttpl
adc
out
pop
ret
iret
sub
pop
mov
cmp
inc
pop
fldcw
jl
cli
shrl
adc
mov
adc
xlat
fisttpll
jmp
movsl
in
adc
push
cwtl
ret
aam
xor
mov
mov
cmpsl
stos
mov
test
test
in
daa
fidivrs
leave
sub
pusha
push
adc
add
push
adc
xchg
or
sarb
lods
jbe
lahf
mov
fwait
ss
mov
repz
xchg
pop
pop
or
pop
adc
inc
mov
in
clc
cmpsl
loop
arpl
call
hlt
and
xor
cmp
sbb
hlt
int3
fmuls
pop
cmp
jp
mov
mov
pop
adc
cmp
lods
sbb
divl
dec
xchg
mov
enter
jb
fs
fidivrs
enter
out
adc
adc
stc
rep
ret
pop
adc
cmpsb
shll
pop
mov
es
imul
lahf
pop
incl
sbb
jge
notl
mov
fistl
or
mov
rorb
or
pusha
sub
or
mov
out
jp
scas
pop
mov
pop
adc
ret
mov
shl
adc
mov
repz
nop
pusha
push
adc
xor
rcr
mov
leave
in
pop
ja
mov
xchg
jmp
lock
insl
sbb
inc
jb
jg
addr16
sbb
adc
adc
push
sbb
pusha
mov
aaa
cltd
adc
sub
dec
push
dec
fwait
repnz
push
pop
adc
adc
push
sbb
and
jge
ja
xchg
mov
addb
mov
arpl
adc
jb
jne
sbb
xor
xor
or
ss
clc
or
inc
sub
cltd
roll
inc
into
or
lcall
push
xor
add
push
mov
es
imul
dec
lahf
mov
sbb
or
inc
sbb
addl
aad
loopne
sub
out
test
sub
push
movsb
cld
idivl
or
xor
out
push
ds
adc
push
fs
mov
lods
mov
pop
lcall
inc
add
addb
data16
xor
or
push
mov
push
adc
or
fmuls
sub
insb
dec
jge
test
mov
and
test
arpl
pop
adc
icebp
sti
cmp
or
xchg
mov
sbb
aaa
add
xchg
mov
push
pop
pop
xchg
cli
loopne
xor
mov
sbb
mov
or
decl
fs
or
fwait
repz
mov
fldl
cli
cltd
sbb
pop
inc
inc
inc
cmp
daa
adc
jb
lret
push
loop
test
test
jp
xchg
movsl
xor
or
cmc
arpl
jmp
test
inc
divb
pop
xchg
mov
mov
fs
rol
push
repz
cld
scas
mov
inc
fxam
jmp
sub
jg
add
cmpsl
jb
pop
push
xor
int3
data16
cmp
mov
xchg
jne
inc
enter
arpl
roll
jecxz
jo
pop
ret
sub
mov
or
in
add
std
arpl
pop
out
jmp
cwtl
or
test
shlb
pop
xorl
adc
sbb
lock
leave
jo
xor
test
xor
sub
lods
inc
push
mov
adc
shll
mov
inc
and
jge
loope
sub
cmc
fldl
cmp
fxtract
pushf
mov
out
sub
cmc
jg
xchg
mov
in
xor
cmpsl
sbb
repnz
mov
into
sub
dec
lods
test
lcall
nop
cmp
fcomp
shl
add
lea
sub
lret
push
ret
mov
push
adc
stos
mov
mov
pusha
push
adc
icebp
repnz
jns
mov
push
adc
adc
inc
and
fcmovne
enter
mov
or
imul
pop
call
xchg
out
mov
xchg
mov
mov
in
out
imul
mov
pop
lods
xchg
es
cmp
das
jg
adc
jmp
lcall
mov
lret
test
scas
or
add
je
aaa
add
or
mov
in
push
jbe
pop
xor
aaa
inc
loop
aam
mov
out
add
lock
sbb
and
and
cmp
sub
dec
inc
scas
xor
out
pop
xlat
aam
imul
out
jae
movsb
iret
adc
js
fnstenv
les
xchg
daa
int3
shrl
inc
sub
mov
jo
mov
ret
lods
or
dec
cmp
cs
ficomps
or
pop
repnz
jge
mov
cs
pusha
sub
arpl
adc
pusha
or
adc
mov
sbb
mov
fdivrs
jg
jge
push
mov
mov
adc
scas
sbb
adc
xor
mov
nop
mov
add
or
mov
or
jle
leave
xor
sub
adc
in
cmp
aas
jle
xor
jecxz
adc
fcomi
insl
mov
cmpsl
mov
std
mov
fnstenv
sti
cmp
cmc
insb
iret
shrl
mov
xlat
sub
xor
sub
repz
sbb
adc
shll
and
lods
sub
sahf
sbb
ljmp
and
push
inc
jb
sub
das
xlat
enter
and
daa
push
adc
divl
fcmovnb
jge
jecxz
test
push
mov
pusha
pop
cmp
adc
cld
mov
punpcklwd
call
data16
mov
popf
fsubs
mov
sbb
call
hlt
push
pushw
mov
push
icebp
xchg
jge
ljmp
icebp
dec
sbb
adc
mov
sti
jo
shl
aam
cwtl
xchg
out
lahf
adc
sub
js
sbb
imul
fs
jle
dec
in
xor
bound
into
push
repnz
jne
pop
or
aas
sub
out
jo
cmp
adc
ret
mov
pop
sbb
dec
add
repz
leave
push
sub
rcrl
in
xor
jns
cmp
mov
sbb
push
pop
dec
pop
stos
pop
dec
jo
sbb
nop
pushl
adc
ret
xchg
and
les
pop
xchg
out
sbb
mov
push
cwtl
imul
fists
cli
inc
cwtl
enter
ja
dec
add
in
rorl
cltd
mov
cmpsb
or
ret
adc
mov
cmpsl
mov
push
lods
adcb
lgs
repnz
pop
push
repz
sbb
fcomps
or
lds
push
or
mov
dec
scas
outsl
mov
nop
xor
cs
out
xor
sbb
in
cs
push
aaa
jge
jecxz
pop
push
dec
ds
lds
cs
inc
sub
nop
push
adc
imul
cmc
jle
int
arpl
jge
jecxz
sahf
stc
jns
sub
sub
pop
jl
mov
sub
or
in
fstps
push
adc
stc
mov
adc
cwtl
imul
lds
je
push
fadds
jl
cwtl
enter
mov
add
fnstenv
and
xchg
loope
mov
out
loope
xor
or
adc
int3
mov
cmp
aad
clc
mov
call
daa
hlt
xchg
jmp
dec
mov
mov
dec
push
pop
xor
inc
pop
lods
ret
sub
jb
je
dec
pop
out
push
pop
push
call
movsl
push
movsb
mov
mov
add
xchg
subps
sbb
dec
sub
jp
jne
les
dec
test
xchg
iret
aas
cmpsl
pop
sbb
push
je
shl
ds
adc
je
ja
pop
cmp
push
cmp
cmp
pop
mov
xchg
cvttps2dq
andb
cmpsb
sub
call
jb
cltd
ret
ja
rol
das
lods
test
adc
mov
pusha
push
adc
cltd
and
adc
cwtl
arpl
adc
jno
xor
push
push
and
pop
decl
in
sub
and
nop
pushw
adc
iret
lahf
shrl
push
adc
add
out
mov
test
push
adc
cmp
push
adc
mov
mov
jae
scas
pop
sbb
mov
xor
rolb
pusha
shr
imul
and
aad
xchg
sub
nopl
insb
fmuls
stos
mov
iret
push
std
sub
insl
xor
call
mov
cwtl
mov
add
cwtl
adc
jno
out
rorb
mov
nop
imul
loop
cmp
dec
cmc
cmp
mov
aaa
fistpll
je
lods
pushf
fiaddl
xchg
xchg
xchg
dec
les
lret
lahf
idivl
push
jns
in
loopnew
jg
and
and
ljmp
push
jg
pushf
out
mov
je
push
push
sub
adc
movsl
mov
mov
or
push
adc
cmpsl
xchg
out
mov
aam
push
adc
js
es
into
sbb
test
pusha
push
adc
cmp
vprotq
cmp
mov
popf
mov
scas
jg
mov
inc
out
into
popa
sbb
xchg
cmpsb
inc
and
out
stos
lds
call
xchg
mov
stos
shl
jge
subb
pop
idivb
cwtl
or
adc
sahf
lock
fbstp
inc
sarb
lea
mov
add
xor
arpl
xchg
aam
mov
mov
sbb
inc
push
sub
inc
and
push
jne
mov
loope
pushf
rolb
ss
jle
and
mov
fidivrs
adc
inc
adc
aas
jno
or
pop
imul
stos
jns
cli
aad
mov
movsb
inc
and
jbe
cmp
enter
loope
or
movsl
outsl
cmp
dec
cmpsb
div
cmp
jb
int
dec
loope
mov
push
mov
cmp
iret
pop
mov
pop
aas
jnp
push
adc
loop
adc
cmp
adc
push
mov
mov
mov
jecxz
ret
and
int3
inc
cmp
pop
stos
hlt
or
adc
mov
add
or
imul
push
into
gs
call
ljmp
push
ja
adc
insb
ret
sbb
inc
shlb
xchg
idivl
sahf
frstor
sub
and
fimuls
nop
aas
leave
sub
into
or
push
dec
lods
sbb
jg
and
shlb
pop
out
jg
cmp
xchg
enter
inc
aaa
xchg
into
inc
mov
inc
cmp
inc
sub
std
cmp
ret
or
cmp
push
adc
cs
mov
mov
mov
daa
je
lods
nop
pushw
adc
dec
je
call
pop
pusha
push
adc
inc
cltd
popf
and
lods
inc
loope
xchg
mov
fsubs
adc
inc
mov
ja
cmp
aas
out
je
sbbl
sbb
cld
icebp
ret
mov
push
adc
lods
aam
clc
and
jg
pop
inc
pusha
mov
inc
dec
cmp
aam
mov
mov
cltd
pop
negb
pop
mov
mov
mov
mov
rcl
push
adc
and
or
seta
dec
addb
push
sub
addb
mov
and
add
pop
fwait
ss
inc
lcall
dec
sub
addb
lcall
jmp
ljmp
mov
inc
push
xor
mov
adc
cmc
adc
inc
in
pusha
push
adc
xor
mov
loope
js
mov
push
jp
jl
or
pusha
outsb
orb
and
cmp
outsl
push
cmp
imul
fabs
jmp
pusha
outsl
adc
je
pop
lahf
pusha
mov
or
and
sub
sub
mov
fimull
pop
adc
adc
jnp
roll
popf
je
stos
pop
in
movsl
mov
mov
test
jb
out
adc
aam
push
adc
jns
xor
ljmp
stos
lret
addl
shlb
adc
cmp
jp
daa
scas
pop
mov
pop
fwait
ss
fdivr
mov
addl
pusha
mov
or
and
sub
sub
insb
cmpsb
ss
stos
or
outsl
push
cwtl
imul
daa
mov
sub
jmp
mov
pusha
push
adc
push
push
inc
int3
insb
add
or
adc
adc
andb
daa
fisubl
imulb
push
adc
pusha
flds
adc
mov
or
mov
inc
in
xor
push
inc
cwtl
xor
adc
leave
sbb
outsl
into
pop
gs
inc
adcl
mov
cmp
lds
inc
push
add
ret
jp
fildl
sub
iret
mov
invd
mov
rolb
jb
dec
xchg
or
popf
adc
popa
shrl
adc
pop
imul
mov
xchg
or
dec
lds
sub
loopne
push
adc
stc
pop
dec
int
ja
out
add
loop
dec
inc
popa
and
movsb
je
ljmp
das
mov
mov
xor
push
pop
pop
fiadds
clc
lods
adc
int
xchg
subb
stc
ret
mov
push
mov
mov
cmp
pop
mov
dec
sub
jge
push
jo
jbe
inc
xchg
jns
add
pop
nop
push
hlt
sbb
pop
inc
mov
popa
js
test
dec
popa
ret
das
fsubl
adc
jbe
pop
ret
js
adcb
adc
bnd
mov
lock
xlat
push
xchg
push
loopne
dec
dec
test
das
ljmp
daa
mov
push
push
cltd
cmc
add
and
popa
xchg
call
pusha
push
adc
jnp
and
imul
ljmp
sarb
in
pusha
push
adc
add
cmpsl
idivl
jle
leave
pusha
shll
aad
mov
xchg
or
mov
sub
pop
xor
loope
push
cmp
cli
sarb
enter
mov
call
scas
xchg
xchg
ret
pop
jmp
test
push
testl
jns
push
sub
mov
lret
dec
pop
cli
mov
push
lcall
cli
cmp
lods
imul
and
lock
xchg
xchg
jmp
mov
or
push
gs
mull
pop
sbb
xor
or
pop
jno
xchg
imul
lea
das
cmp
fsubrs
cld
lret
dec
push
scas
push
out
sub
sbb
pop
lahf
mov
cmpb
sub
jle
addr16
dec
enter
push
js
es
call
sbb
push
sub
imul
lahf
mov
fadd
push
clc
mov
repnz
and
shlb
pop
mov
out
jp
sub
ljmp
jno
ret
stos
bound
sbb
movb
into
stos
cmp
test
xchg
outsl
mov
jge,pn
push
imull
insl
nop
fwait
aas
sti
cmp
xchg
xchg
test
jecxz
sub
cmpsl
pop
mov
mov
sarl
fwait
aas
daa
ja
jecxz
into
push
outsl
jns
xor
cwtl
mov
cmpsb
fldt
mov
inc
daa
sbb
cmp
mov
sbb
adc
mov
xlat
scas
pop
xor
repnz
sub
js
scas
idivl
pop
je
leave
in
and
test
clc
pusha
push
adc
adc
movsb
enter
xchg
cmpsl
cmp
pop
adc
push
adc
shl
fdiv
pusha
push
adc
lret
idivl
dec
sti
notl
mov
xlat
enter
and
push
adc
repz
imul
mov
sbb
mov
pusha
push
adc
lock
push
adc
jp
stos
mov
dec
gs
pop
test
or
push
dec
lods
aas
push
clc
ret
and
ret
lods
jg
pop
push
mov
fildl
adc
cli
clc
pusha
push
adc
aam
push
or
mov
mov
pop
adc
push
adc
decb
ja
pusha
push
adc
lcall
sti
rcl
mov
jnp
mov
imul
mov
push
scas
pop
ret
fbstp
cwtl
lcall
mov
push
adc
lock
push
adc
xor
mov
mov
sub
sub
decl
cltd
or
add
fbstp
cltd
add
fcmovne
scas
adc
and
adc
sub
jo
cmp
repnz
lods
pop
sahf
out
ss
sbb
jg
add
fidivrl
test
jmp
stos
jne
imul
movsb
aad
and
out
mov
stc
mov
pop
stos
scas
fwait
mov
lret
mov
dec
mov
sbb
push
js
data16
lret
mov
xchg
movsl
fs
dec
lret
imul
xchg
adc
jno
imul
ja
rolb
mov
ds
cmpsl
mov
mov
mov
push
adc
icebp
pop
or
push
mov
mov
cmpb
sub
stc
dec
repz
mov
aam
out
push
lds
scas
negb
pop
emms
xchg
icebp
sub
xlat
repnz
fidivrs
push
mov
adc
inc
out
xlat
fs
and
dec
clc
cltd
bound
out
pop
or
test
push
cmp
notl
mov
movsb
cmc
adc
mov
mov
or
pushl
loope,pn
sbb
jmp
or
dec
aad
stos
xor
scas
sbb
inc
dec
add
jae
les
push
enter
rorb
aam
mov
mov
jge
fisttpll
xchg
cmp
cltd
jl
mov
cmp
or
cwtl
subb
ficomps
adc
sbb
add
pop
jae
call
rcl
add
cmpsb
pop
into
popf
loopne
daa
movsb
mov
and
add
inc
xor
sub
inc
dec
cmp
push
in
jne
hlt
xor
and
js
fs
jb
cmp
ja
pop
hlt
mov
jns
xchg
ror
dec
stc
std
insb
sarb
dec
fistpl
dec
repnz
lods
and
repz
push
out
push
out
pop
lods
or
or
gs
adc
adc
lahf
dec
jge
scas
imull
mov
jl
flds
pop
xor
repnz
cmp
int
jbe
ljmp
inc
sahf
mov
repz
fnstcw
jmp
jecxz
mov
mov
lret
pop
imul
das
int
pushl
hlt
insl
adc
and
ss
movsl
fnstsw
and
mov
repz
sbb
je
ds
jmp
data16
mov
push
inc
push
jle
jno
fildll
stos
or
push
sti
popa
and
cltd
repnz
cwtl
xchg
fstps
pop
push
das
cmc
mov
fimuls
hlt
jmp
gs
inc
xor
testl
rorl
movsb
popf
mov
ja
lret
mov
ljmp
push
xor
jge
fisttpll
sahf
fs
inc
fnsave
sub
scas
mov
fistl
sbb
mov
mov
mov
clc
ret
xchg
ljmp
xor
out
in
mov
pop
fidivrl
and
fnstsw
mov
ljmp
aam
inc
popa
cmpsb
cmpsb
ffreep
aas
negl
sbb
dec
jnp
mov
fistps
jge
ficoml
arpl
sub
lock
and
jne
mov
mov
fprem1
add
aaa
mov
fldcw
loope
jge
ljmp
insl
popf
add
std
mov
dec
fists
jge
ljmp
repz
xor
pusha
mov
call
lret
movsb
into
mulb
lcall
xor
rcl
repnz
rorb
fsub
xor
dec
xchg
hlt
xchg
dec
inc
mov
cmp
fnstcw
ret
xor
loop
push
jo
call
and
push
push
pop
test
mov
loopne
pushf
lods
pop
adc
in
js
rorb
mov
and
loopnew
xor
cmp
push
jo
loop
lcall
shrl
or
add
lods
mov
push
push
pop
inc
mov
pushf
das
imul
iret
sbb
push
int3
inc
mov
mov
xor
sbb
and
pop
dec
sbb
adc
jb
dec
pop
sarb
cmpsl
sub
add
adc
or
lcall
push
jae
fs
insl
and
std
and
pop
inc
lods
jmp
xchg
push
inc
xor
dec
repz
hlt
inc
jge
sti
out
ja
sub
mov
cmp
ficompl
outsl
mov
adc
pop
call
jo
xchg
jp
mov
cmp
cmp
xor
fnstcw
cmpsb
adc
add
ficoms
subb
bound
xor
push
mov
push
cmp
inc
lret
xchg
push
pop
cld
imul
inc
sbb
icebp
or
or
sbb
out
insb
pop
inc
jl
loop
cmp
lods
lret
and
pop
aam
mov
movsl
jnp
mov
pop
cld
popa
addb
and
imul
or
lret
nop
adc
jp
mov
jmp
test
pop
out
mov
mov
icebp
push
cmp
jnp
or
fsubrs
stc
aad
cs
adc
mov
mov
hlt
xlat
pop
adc
mov
jnp
cmc
sub
sbb
out
fs
insb
lahf
xor
popa
movsb
mov
and
lods
std
repz
push
adc
and
sub
inc
jge
jl
js
dec
jae
sub
pusha
lcall
xor
cmp
and
out
jb
mov
inc
jecxz
jg
mov
iret
insl
ss
cmpsl
lahf
bnd
mov
outsl
orb
mov
scas
mov
test
adc
insb
add
dec
leave
mov
adc
inc
jecxz
imul
in
popf
lds
stos
pop
in
xor
ljmp
std
sbb
inc
fidivrs
divb
mov
xlat
sub
cltd
jg
cwtl
enter
insb
push
imul
jae
out
mov
add
pop
popa
mov
jnp
in
das
testb
push
dec
leave
xlat
mov
inc
pop
pusha
mov
xor
jp
adc
mov
shrb
mov
insb
add
jge
negl
cltd
sahf
jge
mov
cmp
fldpi
out
bswap
in
lahf
mov
ja
mull
stc
cmp
bsf
adc
loope
mov
sub
lods
xorb
add
js
daa
mov
stos
stc
mov
lahf
sar
mov
mov
in
sub
bswap
in
lahf
push
adc
mov
idivb
and
jno
xchg
mov
test
push
lds
mov
inc
mov
xchg
lods
in
sub
ficoms
mov
in
ret
jnp
iret
pop
cmp
mov
js
enter
mov
pop
scas
mov
add
xor
pop
je
jmp
daa
xchg
adc
fwait
and
in
cs
repnz
pop
addr16
xor
xor
xchg
lcall
jnp
push
jge
sahf
aaa
push
in
mov
sub
cmp
fiadds
inc
popf
test
rcl
sti
ss
xor
inc
adc
outsl
pop
xchg
ret
or
les
mull
xchg
inc
rcrb
nop
push
adc
mov
mov
mov
mov
lret
and
adc
daa
jecxz
gs
fnsave
movsl
fisubrs
mov
sub
pop
popa
test
mov
inc
dec
dec
xor
adc
in
cli
jb
pop
or
xchg
loopne
or
jecxz
test
ret
jo
cs
inc
or
mov
xchg
out
imul
xchg
mov
dec
enter
rcr
aam
mov
cmpsb
mov
mov
mov
mov
and
clc
rcl
or
data16
or
dec
js
sbb
jne
adc
add
or
pop
pop
inc
cmp
inc
aad
jbe
ret
faddp
xchg
push
adc
je
mov
mov
xchg
push
aam
cmp
or
ds
test
mov
fcoml
dec
movsl
jge
jl
divl
adc
mov
les
adc
pop
sbb
imul
fistl
cli
push
pushf
lea
jns
pushf
mov
jg
push
ljmp
insb
push
and
mov
loope
imul
dec
mov
add
and
ja
inc
mov
jne
xor
lds
fnstenv
lahf
clc
xchg
xchg
inc
out
inc
stos
or
and
jnp
out
pop
int3
ds
sahf
pop
aas
mov
inc
mov
mov
pop
aaa
test
icebp
insl
adc
mov
sub
adc
lret
sarb
adc
je
mov
mov
push
test
inc
pop
pop
adc
cmp
jle
test
dec
stos
jle
mov
push
mov
sub
jp
and
in
mov
add
xor
out
iret
lret
stos
je
and
or
orb
lds
cmp
test
sbb
rcrb
push
cli
mov
pop
and
js
aad
js
jmp
dec
adc
jns
or
pop
sarb
arpl
cmp
add
xchg
mov
addl
jmp
add
adc
lods
inc
jo
push
adc
ret
lret
push
ss
pop
invd
adc
mov
invd
adc
push
pop
adc
mov
xor
iret
adc
jo
push
adc
push
out
pop
cmpsl
aad
pop
invd
adc
sub
sbb
pop
invd
adc
ljmp
enter
cmpsb
int
push
jmp
sti
jp
lock
cmp
das
les
xchg
inc
leave
cmp
mov
lods
mov
ud1
pusha
and
outsl
mov
jp
and
mov
repz
push
clc
jno
shrl
mov
lds
jl
outsb
mov
dec
push
js
call
cmp
cwtl
aam
in
mov
in
mov
cld
repnz
fsubs
aaa
cmp
fs
and
sbb
mul
or
movsb
into
jmp
fs
xor
pop
xchg
clc
dec
jl
push
testl
mov
out
jbe
push
mov
scas
jmp
dec
outsb
lahf
jmp
sub
mov
lcall
cmc
jl
iret
shlb
mov
js
fs
lahf
adc
mov
mov
ret
xor
xchg
adc
fsubrl
and
pop
fldt
add
jno
je
jge
sbb
loopne
das
push
out
fldcw
xlat
ret
sbb
repnz
in
test
aas
iret
push
les
mov
xor
aam
adc
add
push
add
cmp
lret
fisubl
xor
xor
aas
test
jae
and
ret
aaa
jno
xchg
fmul
pop
ljmp
push
sbb
fs
xchg
je
inc
aam
lods
xor
pop
sti
sub
sar
stos
push
orb
in
adc
and
jns
stos
dec
xor
xchg
leave
mov
out
or
sti
mov
aas
adc
mov
dec
push
mov
cltd
movsl
mov
lahf
popa
inc
or
test
std
pop
jmp
nop
inc
dec
jne
or
inc
mov
shlb
ljmp
adc
cld
aad
cmp
shlb
xchg
mov
movsl
loop
mov
ret
jge
in
pop
out
shl
enter
mov
xchg
jl,pn
mov
mov
jno
cmp
or
or
sar
push
push
call
in
mov
imul
push
hlt
jl
and
sub
imul
rolb
out
mov
icebp
push
xchg
push
insl
inc
je
andl
pop
mov
test
mov
loop
push
adc
in
sti
sahf
mov
mov
pop
outsl
jle
addl
cmp
insb
push
adc
or
push
xor
imul
outsb
nop
pop
adc
push
icebp
jae
sahf
jnp
andb
sub
call
dec
adc
in
stos
jnp
stc
andb
sub
xchg
ljmp
jmp
sahf
bound
fstpt
push
in
stos
pop
jl
xor
and
and
lods
pop
cmp
push
push
pusha
sub
scas
shrb
push
lret
lahf
mov
mov
sub
mov
test
shll
dec
sbb
jbe
test
ds
xor
lahf
repz
gs
pop
cli
cwtl
ret
in
mov
sub
cltd
push
jecxz
pop
cmp
rolb
cmp
aad
and
and
xchg
in
lahf
push
adc
jmp
fidivl
sub
iret
gs
gs
mov
jbe
xchg
push
sub
jnp
clc
cmp
out
adc
idivb
and
enter
adc
int3
pop
xor
ds
push
adc
jae
fnstcw
push
mov
pop
out
and
std
repz
repz
and
lahf
or
xchg
jnp
es
lret
mov
xor
xchg
icebp
mov
div
out
fnstsw
scas
push
outsl
imul
flds
fwait
cmp
mul
xchg
adc
and
repz
mov
test
clc
imul
push
loope
dec
fwait
push
xchg
adc
push
adc
aas
scas
js
movsl
lahf
stc
cmp
clc
out
fnstsw
mov
mov
push
enter
pusha
sarb
adc
mov
mov
mov
cwtl
mov
popf
mov
icebp
jns
call
jae
cmc
pop
inc
gs
in
fdivrs
mov
imul
ds
aam
in
lret
cs
mov
add
divb
dec
push
sub
inc
or
hlt
das
stos
cmp
shll
push
cmp
decb
xor
rcll
nop
sti
stc
mov
out
ja
inc
and
push
dec
movsl
out
lret
bound
add
mov
scas
lods
ja
add
xchg
das
cmc
mov
mov
int
outsl
aam
in
xchg
fsubl
ret
or
jmp
daa
lret
leave
push
jo
jb
and
outsb
dec
mov
mov
cmp
std
clc
sbb
inc
lds
xchg
sbb
xchg
and
pop
rcl
jmp
and
add
inc
lods
or
notb
fs
pop
out
push
sbb
pop
jg
nop
add
out
mov
mov
iret
mov
jo
cmp
jno
pop
sbb
les
in
sub
nop
lods
cmp
pop
xor
adc
fbld
inc
mov
push
fisubl
jae
pop
nop
test
daa
xchg
cmc
sbb
outsb
dec
jecxz
cs
or
sub
cmp
lea
aas
jp
ljmp
jnp
push
call
repz
pop
cmovle
cmp
pop
pushf
shll
add
sbb
cmpsb
in
jecxz
inc
cmp
sbb
in
sub
or
movsb
sbb
add
ljmp
dec
jmp
iret
shr
clc
lret
sub
imul
loope
adc
bound
jmp
mov
lcall
jg
inc
test
xchg
sahf
aas
in
ss
mov
sub
sbb
mov
sub
mov
add
jmp
cmp
das
dec
xor
mov
or
xchg
inc
fsts
xchg
jbe
ret
dec
fbstp
cs
imul
inc
mov
lahf
fs
lret
lods
leave
adc
inc
adc
adc
insl
dec
mov
xchg
jae
pop
push
ss
push
adc
sbb
arpl
mov
stos
xchg
pop
lret
mov
out
mov
xchg
pop
test
jg
testb
pop
test
movsl
fwait
xchg
aam
scas
mov
clc
jae,pt
data16
mov
jle
clc
jle
arpl
adc
std
and
sbb
hlt
mov
push
adc
jne
rcrb
or
es
mov
sti
pop
invd
adc
xor
xlat
cs
xor
pop
pop
ljmp
xchg
rolb
les
sti
ficomps
cmpsb
rclb
jo
push
adc
je
imul
fs
add
dec
xor
shrl
in
or
stos
and
ss
movl
or
adc
dec
aas
inc
into
push
jl
add
pop
jp
popa
jae
lods
cmc
out
mov
dec
ja
lock
movsl
mov
iret
fsubrl
push
mov
jp
pmaxub
aaa
mov
mov
mov
jmp
add
int3
sbb
pop
push
mov
inc
enter
adc
and
call
pop
invd
adc
pusha
ficompl
adc
aad
imul
and
pop
cmpsb
mov
xchg
out
push
ljmp
lock
fdivrs
mov
fists
dec
jo
in
sbb
fs
cltd
fwait
jne
repnz
mov
dec
lods
call
inc
rcrb
imul
jae
test
ljmp
hlt
adc
jl
hlt
sti
ja
in
xchg
mov
jae
add
mov
sbb
adc
jmp
and
sbb
or
int3
cs
adc
jbe
clc
push
movsb
pop
hlt
shlb
js
sbb
xchg
jmp
imul
or
mov
mov
jle
sub
cmpsl
sbbl
gs
jnp
iret
lcall
cmp
mov
mov
mov
xchg
outsb
mov
sub
inc
mov
fisttpll
shll
sti
push
movsb
xchg
fsubrl
test
mov
nop
jb
das
adc
jle
pushf
pop
stc
mov
test
stc
hlt
orl
mov
adc
lret
sbb
xchg
arpl
cmp
orb
and
das
pop
fiadds
mov
cli
out
push
es
enter
or
sub
xor
inc
test
bound
push
sbb
repz
punpckhdq
xor
and
xchg
mov
sbb
fdivs
lcall
mov
inc
lods
aaa
or
loop
xor
jno
lock
push
jge
jne
sbb
mov
sbb
adc
test
or
mov
pop
pusha
daa
mov
sarl
jne
adc
pusha
push
dec
and
xchg
subb
shlb
out
push
jle
lret
sbb
sub
shrl
and
pop
and
cmpsl
and
fs
and
les
in
popa
jnp
out
pop
mov
add
fxch
mov
fisttpll
mov
push
fmuls
pop
or
ds
popf
mov
xchg
push
frstor
popa
mov
jb
loope
jg
xchg
push
fsubs
mov
scas
cmp
mov
sbb
call
lahf
jmp
dec
test
or
mov
push
outsl
pop
out
add
aaa
pop
push
or
jns
mov
xchg
pop
dec
or
cli
in
mov
loopne
jecxz
push
cmp
sbb
dec
jp
lcall
cvttps2pi
dec
pop
push
int3
addr16
iret
lret
lods
jnp
jg
push
or
leave
xchg
neg
mov
sti
or
push
mov
pop
jne
pop
fs
repnz
cmp
ja
push
mov
aam
js
pop
adc
dec
stc
jge
jb
dec
fwait
testl
daa
cmp
sbb
mov
pop
jmp
loop
push
cltd
pop
call
enter
pop
cmp
adc
or
mov
or
push
xor
pusha
lcall
fnstcw
pushf
dec
insb
push
push
sbb
or
jb
or
adc
stos
pop
mov
das
push
pop
enter
insb
push
adc
cmpsl
imul
jp
xchg
push
sbb
adc
in
push
jno
pop
shrb
ror
adc
mov
adc
lret
lahf
mov
nop
push
popf
popa
jge
pop
ss
in
cmp
aas
jle
cmp
or
mov
xchg
fistl
es
inc
xchg
pusha
push
xchg
ja
sti
mov
cmp
sahf
ret
clc
aad
ja
xchg
leave
imul
lods
dec
iret
shrb
jno
mov
jo
out
xor
mov
mov
iret
xor
adcl
push
adc
shlb
and
mov
dec
push
leave
stc
les
daa
or
daa
loop
push
adc
fisttps
es
mov
arpl
add
lcall
mov
and
pusha
insb
push
adc
lea
and
mov
add
mov
hlt
sbb
jne
jbe
cltd
pop
js
xchg
data16
mov
lret
mov
shr
dec
outsl
dec
insb
add
leave
fldl
push
orb
fwait
nop
jb
fstpt
in
shlb
cmp
inc
lea
mov
cs
imul
jg
data16
inc
pop
aas
mov
stc
sbb
popa
mov
insl
xor
lahf
divl
loopne
loope
adc
inc
out
insl
fmuls
clc
pop
mov
dec
xchg
in
repnz
lea
int
or
popf
jno
xor
cmpsl
inc
xchg
xor
inc
idivl
pop
sbb
sbb
fdivrl
cmp
xor
sbb
loop
adc
lock
inc
jae
lock
mov
test
xchg
and
cld
mov
sti
mov
mov
fs
xchg
or
out
sbb
jmp
sbb
xchg
push
out
pop
xor
into
sub
jo
mov
ret
scas
in
mov
pop
test
test
aad
rcll
push
out
pop
sbb
add
movsb
mov
jb
adc
out
push
adc
imul
negl
push
adc
xchg
clc
call
mov
hlt
rcrl
insb
push
adc
mov
and
fisttpll
flds
lea
shlb
insb
ss
sub
xchg
out
das
dec
sub
fwait
cli
mov
xor
je
mov
in
js
cmpsb
js
aam
into
loopne
stos
cwtl
ss
push
adc
scas
pushf
fs
dec
int3
mov
test
pop
sti
cld
sbb
cmpsl
jg
adc
mov
cwtl
or
aaa
imul
pop
adc
jg
popa
in
mov
lds
xchg
insl
lock
stos
cmp
cli
mov
ret
push
jecxz
push
xor
inc
shrb
sbb
dec
mov
dec
paddw
mov
cmp
stos
adc
push
mov
jb
mov
mov
popa
sub
jno
and
fnstsw
pop
mov
xor
pushf
imul
insb
jnp
sahf
xchg
push
or
mov
or
push
pop
in
jg
and
aaa
add
int3
js
aam
out
cmc
and
cmp
call
sbb
lahf
mov
cmp
pushf
insl
sarb
and
cmc
lds
mov
pop
and
aad
orl
add
push
into
push
push
jle
stos
fstpl
inc
aad
mov
xor
lods
adc
lret
lahf
mov
shll
mov
inc
lock
xchg
jno
jmp
jbe
or
cmp
stos
or
aas
xlat
mov
fnsave
adc
int
stc
mov
or
je
and
pop
cmp
out
enter
imul
daa
mov
mov
aas
jae
inc
test
sub
daa
dec
lahf
aas
mov
lods
js
pushf
adc
jne
mov
nop
ret
and
into
jle
push
jb
fs
shlb
fs
add
in
mov
outsb
mov
test
xorl
jae
sub
mov
mov
daa
cmp
mov
call
lahf
imul
inc
mov
add
cld
stos
mov
xchg
xchg
int3
dec
sbb
jp
xchg
idivl
sbb
push
cld
jno
lcall
push
cld
jo
pop
je
ja
ret
clc
stc
jo
ret
enter
les
and
pusha
adc
add
cmp
pusha
mov
clc
jno
and
jg
fdivs
jne
and
outsb
mov
jo
ljmp
fcoms
inc
pop
call
lret
das
cltd
mov
icebp
fadds
pushf
or
adc
push
inc
in
enter
add
sub
mov
insb
mov
pusha
cmc
mov
je
sub
xchg
fnstcw
add
enter
xchg
cli
mov
loopne
sbb
adc
and
loopne
sub
cmpsl
dec
or
arpl
lret
hlt
daa
cmc
popf
ljmp
xlat
ss
sub
lahf
movsb
cli
addl
push
push
fstpt
xchg
or
cmp
clc
mov
nop
mov
inc
mov
mov
xor
aaa
jle
out
out
xor
pop
aaa
hlt
scas
push
out
adcl
sbb
popf
mov
inc
fistps
sbb
adc
sarb
sar
in
lret
dec
xchg
jmp
inc
jns
dec
fstpt
lret
jbe
mov
stc
cmpsl
adc
or
dec
and
into
int3
pop
jne
pop
shrb
rcrb
xchg
lret
pop
jge
push
fstl
fcmovb
mov
roll
bound
in
pop
sahf
leave
sub
icebp
lcall
cmc
inc
popa
add
mov
test
sahf
pop
cmp
mov
fidivl
rcrl
jmp
jp
sarb
out
and
mov
push
or
mov
and
pop
gs
leave
out
aad
mov
cmp
mov
adc
push
test
mov
push
mov
dec
mov
stos
pop
ja
mov
es
outsb
xor
sub
xlat
imul
cmc
push
fsubrs
int
out
mov
xor
pop
add
into
movsb
inc
dec
pop
sahf
movb
inc
leave
fsubrs
daa
mulb
add
popa
mov
in
fimull
es
hlt
imul
fs
xchg
sbbl
lahf
push
inc
inc
bound
es
jno
jno
adc
jbe
xor
cltd
and
dec
push
cmpsb
rorb
pop
cs
or
lret
and
out
mov
roll
add
movsl
rclb
sbb
lcall
and
lret
adc
push
cmp
pop
cld
jg
movsb
sahf
adc
inc
call
cmc
inc
add
add
rcrb
xchg
jl
push
cli
jno
adc
movsl
nop
ret
adc
mov
or
pop
je
stos
daa
je
idivb
cmp
aam
aad
jae
in
pop
jp
cltd
jnp
lods
pusha
rol
arpl
adc
dec
jne
or
xor
push
js
movsb
dec
mov
jnp
mov
jb
add
daa
jo
addb
sub
sub
jnp
in
fldl2t
lods
or
lods
mov
push
xchg
xor
orb
push
das
push
mov
sbb
movsl
lds
loop
aas
std
cmp
pusha
rol
sbb
inc
shrl
imul
daa
cmp
push
mov
mov
jmp
data16
fwait
ss
jl
mov
ja
pop
lret
pusha
sbb
out
fnstsw
aad
sub
xchg
mov
aas
or
push
xchg
inc
shlb
xchg
hlt
adc
cmp
jecxz
loope
push
and
adc
fwait
int3
inc
cmc
aas
cmc
xor
jbe
xor
mov
mov
add
xchg
cmpsl
adc
cmp
xchg
es
addl
mov
test
pop
adc
gs
popa
push
adc
aam
dec
mov
in
fidivrs
pop
xor
jae
into
mov
repz
push
loope
cwtl
stc
cltd
repnz
cli
ljmp
out
and
scas
iret
xchg
and
adc
int
jns
lods
outsl
mov
dec
stos
dec
mov
mov
and
ret
daa
lods
out
xchg
or
cmp
movsb
mov
rolb
jle
inc
sbb
jne
fldl
movsl
loope
xchg
pop
or
out
mov
mov
mov
sti
out
cltd
add
mov
pusha
push
inc
idivl
push
sbb
sbb
lret
test
js
push
sub
push
andl
into
rcl
xchg
lods
jb
cmp
push
adc
aam
out
dec
xlat
push
pop
mov
mov
xor
xchg
pop
data16
cmp
mov
out
mov
sub
sahf
inc
rolb
test
adc
jecxz
add
cs
daa
adc
push
jno
sbb
dec
xor
or
lock
jecxz
sub
or
dec
xchg
in
xchg
mov
fwait
jp
xlat
es
sbb
aam
fiadds
and
add
xor
stos
dec
add
inc
xchg
cmp
jecxz
pop
inc
andl
sub
cmp
push
nop
mov
lret
rcrl
adc
xor
mov
fbld
shlb
in
dec
push
inc
cmp
mov
sarb
out
mov
push
dec
sbb
adc
nop
add
mov
sti
inc
sbb
and
cltd
fwait
adc
loopne
xchg
dec
test
stos
sarb
test
add
pop
pushf
ficomps
iret
jge
add
divl
lods
jmp
mov
sub
dec
sub
sub
dec
pop
in
test
adc
and
mov
popa
or
cli
xchg
jp
push
xchg
lods
mov
add
pusha
mov
pop
loop
and
or
inc
push
mov
ficoms
sub
sbb
ret
inc
sbb
pop
jae
ljmp
ljmp
daa
paddq
lods
jle
loop
imul
pop
mov
es
sub
push
stos
test
fwait
jb
cltd
sub
cs
jb
xor
into
popa
sbb
adc
out
test
jb
out
inc
outsb
imul
inc
mov
lret
divb
aad
mov
mov
push
js
jo
rclb
mov
imul
fnstenv
dec
int3
imul
lret
lahf
mov
fldl
rclb
sbb
sbb
xchg
popf
ss
push
adc
cld
insb
mov
mov
or
test
sar
lods
mov
xlat
fwait
aas
xchg
pushl
jecxz
cld
jne
dec
jae
push
adc
dec
add
mov
push
adc
adc
push
sbb
pusha
dec
insl
js
adc
shlb
inc
jbe
test
addr16
mov
mov
push
jle
clc
jle
sbb
cwtl
add
gs
dec
scas
xlat
mov
imul
fnstcw
jno
sbb
adc
xor
repz
arpl
stos
pop
ss
enter
lods
outsl
daa
not
enter
xchg
daa
mov
addb
aad
popf
jl
stos
pop
xorl
sti
loope
out
les
aas
jno
add
add
push
and
add
mov
jnp
cmp
or
pop
adc
push
sahf
jbe
sar
mulb
jmp
pop
adc
sbb
cmpsb
pop
mov
sbb
adc
adc
fidivrl
lcall
addr16
vprotw
in
sub
mov
pop
scas
mov
cwtl
flds
inc
orb
sbb
movsl
enter
or
mov
xchg
pop
addr16
js
jns
int
pop
ss
aam
mov
adc
adcl
jle
push
out
xchg
xor
or
shrl
int
cld
lods
or
sbb
adc
fidivl
imul
sbb
xchg
push
in
stc
aad
xchg
push
mov
loop
adc
ret
and
sbb
dec
pop
icebp
xchg
enter
sbb
add
inc
fisubrs
and
ja
bound
push
add
insl
leave
jb
lods
add
popa
inc
or
mov
movsb
push
push
fstpl
andb
xor
jmp
push
jmp
cmp
loopne
xchg
dec
adc
or
dec
loop
adc
jbe
xchg
jbe
cmp
or
mov
scas
or
cwtl
outsl
out
stos
stos
jge
cld
jne
js
fiadds
inc
pusha
lock
mov
cli
pop
pushf
fsubs
leave
xchg
out
adc
sub
xorl
xor
sbb
cmpsl
cmp
xchg
sbb
xchg
xchg
lea
and
pushf
sahf
pushf
nop
cmp
insl
cmp
cld
psrld
jle
mov
pop
arpl
dec
add
jge
loope
xor
int
test
cmpsl
popa
sub
sbb
mov
or
lods
in
stos
das
cmp
xchg
adc
pop
xchg
add
cmp
xchg
into
and
adc
cwtl
sbb
sti
test
loope
lret
loopne
bound
test
add
fwait
adc
dec
inc
les
popa
push
xor
xchg
mov
and
or
inc
adc
inc
jg
adc
stos
fildll
int
fstl
adc
rcrl
adc
test
pop
lret
dec
pushf
pushl
xor
inc
lahf
jns
fcmovnu
rcrl
inc
fnstcw
cmp
aaa
cs
aas
push
jnp
imul
lods
mov
sbb
mov
mov
xor
out
xchg
test
shlb
sbb
movsb
add
fldt
jnp
or
hlt
sub
push
sub
mov
mov
stos
fisttpl
dec
movsl
add
lret
mov
repz
fnstsw
mov
jae
movsl
fnsave
and
test
rol
imul
jns
sahf
cmp
fucom
fwait
mov
bound
xor
addl
sbb
push
aad
in
add
daa
dec
lahf
aas
and
ja
sbb
adc
dec
jp
jne
cmp
sbb
dec
jno
shl
testl
or
sbbb
sub
in
push
testl
adc
mov
mov
adc
not
lock
jge
xor
ss
lods
inc
adc
jp
mov
insb
xchg
and
inc
pusha
sahf
xchg
call
mov
cltd
ret
dec
rorb
je
out
lahf
adc
mov
sbb
leave
push
xor
xchg
int3
insb
adc
xchg
ja
js
lret
pushf
div
mov
mov
test
push
cmp
push
lods
cmp
movsl
ja
jns
lret
or
cmc
and
mov
jmp
mov
daa
sub
fistpll
scas
outsl
or
pop
div
hlt
in
fidivrs
pop
call
mov
cmp
mov
xbegin
clc
push
cmc
push
insl
push
xor
mov
mov
sbb
jo
nop
add
inc
push
ds
mov
cmp
adc
mov
jno
icebp
mov
dec
jecxz
dec
ret
aam
mov
fwait
sbb
push
test
push
adc
fstps
test
adc
mov
sub
insb
sbb
or
pop
popa
fs
repz
pusha
loopne
push
mov
int
add
aam
mov
leave
cmp
test
push
cmpsb
sub
mov
mov
jp
cmp
dec
les
xor
sbb
lea
mov
js
subb
faddl
xor
add
mov
inc
pop
out
les
int3
cli
stos
or
jno
push
scas
dec
cmp
xor
adc
fnsave
dec
mov
js
push
pop
or
push
mov
push
mov
call
push
inc
xor
xchg
or
popa
out
xlat
xchg
sub
mov
or
mov
fs
test
and
jge
dec
outsb
pop
js
addl
popf
xchg
fisttpl
je
xchg
sahf
sti
dec
jmp
sub
xor
pop
dec
sub
icebp
jmp
imull
rcr
jae
aaa
loopne
js
push
repz
mov
popf
mov
cmp
mov
ljmp
or
movsl
repnz
js
int3
cmp
mov
popf
push
sbb
div
xchg
pop
mov
xchg
adc
xor
adc
lahf
jno
std
xchg
sub
pop
push
cmp
jb
movb
push
out
mov
aas
and
or
mov
jno
xor
add
lret
mov
or
cmc
pop
mov
ljmp
fstl
out
sbb
ret
and
ror
hlt
mov
xchg
and
mov
shld
out
icebp
insl
dec
push
dec
aas
xchg
scas
rcrb
push
adc
add
jg
jb
outsl
pop
daa
adcb
push
push
mov
enter
sbb
xchg
int3
enter
mov
ret
xchg
sub
push
inc
in
jae
lret
and
dec
or
lcall
daa
dec
mov
sbb
insb
push
adc
cmp
aas
sbb
mov
pop
adc
pop
ja
clc
stc
js
aas
enter
cli
enter
pusha
cs
inc
data16
addr16
pop
sbbl
addb
mov
jns
jl
sub
mov
mov
push
mov
jno
sub
stc
movsl
insb
mov
shrb
mov
mov
hlt
repnz
cmpb
inc
fisubrs
int3
cli
ret
jle
xor
imul
out
ss
aad
pushf
call
sahf
daa
dec
lahf
aas
mov
inc
inc
sbb
pop
repz
pop
push
or
mov
sub
and
adc
lahf
push
sbb
push
adc
jecxz
addb
mov
aas
jle
mov
je
xor
aas
jle
je
sbb
pusha
clc
cmp
testl
pop
loop
ss
fs
xchg
daa
xchg
jle
mov
xor
scas
jne
xlat
pop
sbb
in
dec
cmp
dec
mov
mov
loop
push
adc
in
jle
jne
andl
fisttps
sub
xchg
out
clc
repnz
ror
mov
adc
mov
pop
mov
in
cmp
inc
jbe
fdivr
cli
setb
je
frndint
hlt
adc
test
cmp
or
push
adc
sbb
lcall
sub
jecxz
jge
adc
popf
test
mov
pop
sub
cmpsb
jne
jb
xor
hlt
lods
ret
mov
push
ljmp
sti
mov
add
cmpsl
or
inc
cmp
cmpsb
test
push
adc
sub
rorb
out
mov
test
lea
push
stos
push
push
mov
mov
imul
mov
cmp
sbb
mov
cmp
xchg
rorl
add
mov
mov
repz
clc
daa
adc
cmc
lret
insb
inc
sub
clc
out
sbbb
jno
in
jae
gs
pushl
mov
das
sbb
ret
movsl
and
leave
sbb
das
mov
decl
scas
xchg
jmp
arpl
add
jae
leave
dec
enter
testl
aaa
mov
adcb
sub
adc
mov
sbb
aas
stos
js
into
mov
int
cld
xchg
pop
mov
jne
lods
lods
and
jbe
push
adc
std
jg
xchg
jnp
sub
push
scas
fstpt
xchg
xchg
xchg
mov
mov
push
adc
xchg
imul
adc
test
jne
cmp
aad
and
lock
push
adc
or
ss
push
test
jmp
adc
imul
leave
sub
popf
sbb
adc
sbb
in
imul
fsubs
dec
xchg
inc
test
xor
je
inc
mov
inc
insl
jbe
xor
push
adc
xor
fisubrs
jmp
daa
stos
mov
sub
xchg
cltd
test
imul
fadds
cmp
push
adc
out
mov
shrl
lahf
je
ret
scas
mov
mov
popa
push
dec
pusha
cmpsl
push
imul
pop
dec
sbb
push
test
pop
adc
sub
mov
scas
xor
or
popf
jo
pop
out
sbb
clc
hlt
jbe,pn
ror
fsubs
xchg
mov
idiv
aaa
incl
jne
inc
mov
xor
mov
arpl
mov
lea
mov
dec
std
addb
sub
int
lret
pushf
jns
inc
mov
xchg
and
jnp
movsl
stos
sub
filds
jnp
and
jg
ss
movsb
mov
xchg
xchg
pop
imul
mov
sahf
dec
ds
out
push
pushl
sbb
addl
ljmp
jns
xchg
sbb
imul
aaa
int3
cli
ret
jle
scas
js
enter
jle
xor
or
out
fwait
inc
fwait
adc
fbld
jg
mov
sub
xchg
adc
adc
jbe
scas
fnstsw
int
leave
xchg
mov
ret
stc
js
cmp
insl
movsb
test
jmp
scas
add
sbb
adc
loopne
dec
lahf
xchg
int3
stc
repz
cmp
mov
test
pop
adc
mov
js
int3
pop
adc
sbb
es
insl
dec
and
sub
jo
xchg
iret
mov
adc
shlb
and
sbb
cmc
inc
cs
hlt
push
cmpsb
jae
adc
imul
jle
es
xor
push
stos
andb
xchg
lret
mov
addb
clc
arpl
adc
sub
dec
and
pop
repz
lods
push
inc
push
and
inc
filds
mov
adc
mov
cld
cli
lock
mov
arpl
adc
pop
mov
cs
adc
mov
mov
cmc
insb
dec
add
test
mov
adc
stc
or
lock
std
nop
out
pop
adc
sti
cmc
ljmp
push
lcall
mov
and
inc
adc
adc
jge
inc
or
inc
xchg
or
pop
das
adc
fs
popf
sar
ja
jns
pop
xor
jo
subb
mov
sbb
cwtl
sbb
pop
adc
mov
inc
mov
push
ja
cwtl
add
ret
mov
pusha
andb
push
adc
sub
lcall
cmp
std
es
out
cmpsb
ficomps
lcall
mov
in
out
mov
jo
xor
fsubrp
mov
jge
repnz
pushf
jl
pusha
push
adc
aam
mov
inc
pusha
push
adc
int3
pop
adc
xor
rolb
sbb
sbb
inc
ret
mov
mov
sbb
test
cmp
xor
fwait
cli
cltd
cmpsl
pop
jmp
push
xchg
lock
adc
pop
or
inc
ret
inc
mov
mov
adc
adc
adc
daa
hlt
mov
mov
xor
and
mov
jno
sti
jnp
pop
nop
enter
cmp
cmpl
incl
or
shl
insb
push
adc
fsubrl
rcll
test
arpl
adc
sub
fcomi
inc
mov
sbb
in
mov
sbb
adc
ffree
mov
dec
mov
ljmp
sbb
sbb
xor
push
adc
outsb
fisubrl
or
or
push
adc
push
out
je
push
or
adc
dec
push
adc
pop
loopne
mov
adc
movsb
mov
adc
jecxz
nop
mov
adc
mov
outsl
pop
jbe
sub
or
sbb
movb
rolb
test
pop
out
jae
nop
ret
xor
pop
pop
in
icebp
insl
or
aam
add
push
adc
xchg
pusha
fists
xchg
nop
add
and
popa
push
adc
aam
sbb
je
shrl
repz
fisubs
test
inc
insb
xchg
mov
cmp
cmc
or
adc
in
pop
fcmovb
pusha
push
adc
outsb
lock
push
and
add
push
inc
clc
xor
pop
jb
mov
dec
daa
int3
insb
push
adc
adc
mov
call
sub
loope
lcall
mov
idivb
jbe
test
pop
adc
mov
fstpt
dec
pusha
sub
ret
jge
jb
fdivrl
xchg
inc
test
ss
ja
subb
pop
cmp
xor
sti
clc
arpl
adc
out
jb
or
mov
jmp
pusha
outsl
adc
scas
or
hlt
arpl
adc
mov
insb
push
cmp
imul
fnstcw
loope
imul
push
adc
addb
fnstsw
pop
in
movsl
popa
pop
add
sbb
test
push
mov
jge
or
in
push
adc
push
sbb
aaa
mov
ja
stc
jbe
xchg
jmp
lock
and
inc
and
inc
test
sbb
iret
or
jle
cmp
or
scas
add
adc
es
loope
pop
fdivs
adc
xor
subl
adc
mov
daa
loopne
inc
fcomip
cmpsb
test
addb
lds
in
cld
pusha
push
adc
push
inc
arpl
loopne
push
adc
rclb
addb
loopne
push
adc
out
ds
and
pop
ficoms
and
pop
mov
adc
adc
nop
lods
sub
xor
mov
jmp
shll
lods
dec
jbe
loopne
inc
jge
arpl
adc
mov
pop
outsb
ds
push
pop
outsl
imul
xchg
mov
bound
loop
push
xchg
sub
push
sbb
push
adc
xor
cmp
outsl
jmp
fcoms
daa
lret
adc
adc
cmpsl
dec
notl
pop
adc
lea
outsl
jne
rcrl
push
adc
call
adc
mov
cmp
leave
lds
and
push
adc
xlat
cmp
inc
pusha
push
adc
cmpsb
jns
movsl
lods
xchg
xorb
test
int3
insl
pop
sub
movsl
mov
sbb
add
shl
sahf
sbb
cmp
xchg
jmp
dec
inc
inc
test
pushf
mov
or
fbld
mov
cld
jecxz
dec
xchg
lcall
popf
inc
cmp
push
or
sbb
outsl
push
pop
les
cmc
and
loopne
mov
jl,pn
or
push
adc
dec
mov
push
adc
push
mov
popf
scas
push
dec
js
pop
inc
stc
inc
pop
mov
jo
mov
aas
mulb
mov
pop
arpl
jge
mov
xchg
shrb
mov
push
or
inc
sub
and
pop
adc
neg
cmc
loop
and
mov
push
adc
push
xor
and
mov
leave
and
add
or
mov
adc
dec
hlt
jg
jecxz
xchg
sub
lea
adc
fisubrs
add
fdivl
lret
add
ja
insl
inc
out
fbstp
mov
or
notl
jge
xchg
fxch
ret
lcall
loopne
ficompl
fwait
dec
xchg
ss
pop
sbb
dec
sti
pop
mov
pop
xchg
push
or
sarl
ja
scas
or
sub
shrb
cmpsb
icebp
pop
idivb
sub
jl
dec
in
sti
push
and
or
jge
jae
mov
xchg
mov
out
sarb
push
lcall
adc
aaa
xor
sbb
idivl
sub
inc
test
mov
jecxz
rolb
dec
outsb
xchg
xchg
cmc
out
fnsave
cmp
pop
scas
insl
outsl
cmp
push
out
mov
and
mov
insl
mov
rolb
jg
mov
xor
sbb
scas
jg
pop
negl
gs
leave
jbe
xchg
ja
test
mov
mov
sbb
cmp
mov
and
lret
out
lret
mov
fidivs
sub
pop
fidivrl
cmp
cmpsl
lock
pop
mov
mov
in
mov
fstpt
xor
cld
imul
push
mulb
les
call
xor
sbb
mov
cmc
rcl
rcrl
jl
in
adc
pop
push
adc
data16
jmp
ficompl
or
fsubrl
aad
test
cmp
leave
sbb
seto
fcmove
sahf
jge,pt
mov
test
ljmp
bound
xchg
insb
push
push
adc
adc
add
xor
dec
adc
adc
bnd
xor
cmpsb
in
mov
pop
lods
push
pushl
and
or
jle
stc
pop
fisubrs
xlat
loop
fcomi
hlt
mov
ljmp
jne
sbb
pop
cmpsl
test
or
cmc
cli
outsl
mov
cmp
jnp
fdivrl
xor
stos
xchg
popf
mov
imul
pushl
aad
push
xchg
lods
repnz
cwtl
jp
adcb
insb
inc
outsb
jge
cs
dec
ja
fwait
lods
fwait
add
mov
mov
stos
pop
roll
jae
punpcklbw
pop
adc
add
inc
mov
in
iret
aad
pushf
insl
mov
mov
mov
fs
movsb
adc
outsl
pop
and
xchg
cli
jb
bswap
movb
int3
cwtl
clc
lods
lahf
push
mul
in
push
xchg
scas
stos
cmc
ret
out
xor
xor
cld
outsl
lods
shr
fs
outsb
fstps
popa
jl
mov
fmuls
vmread
add
lods
lods
nop
std
push
sar
adc
adc
idivb
sub
aam
pushf
scas
enter
daa
jns
xchg
sub
cwtl
push
pop
adcb
outsl
fists
push
adc
or
push
inc
in
loope
add
xchg
lock
and
dec
inc
addr16
mov
pusha
and
sarb
xor
lret
mov
sbb
mov
insb
push
adc
stos
dec
ss
call
addr16
mov
test
jae
in
pop
jecxz
push
cmpl
lcall
pop
cmp
cmp
insb
repz
and
mov
inc
loopne
sub
pushf
mov
test
mov
cmp
test
push
lds
test
lods
add
adc
popf
ss
sbb
out
rcll
mov
ss
ja
leave
add
movsb
repnz
mov
dec
lock
loopne
test
xor
and
jp
push
inc
aad
xor
add
xchg
sbb
imul
mov
lcall
stc
fs
movsl
mov
hlt
add
push
adc
lret
fs
fcomi
fdivr
rolb
cmpl
jecxz
in
mov
lea
jnp
imul
xor
push
cmpsl
enter
dec
mov
mov
icebp
es
push
cs
inc
jmp
xchg
repnz
pop
mov
pop
adc
mov
mul
pop
xlat
xchg
sub
inc
test
iret
loopne
clc
mov
jae
pop
push
xor
and
adc
nop
scas
xor
xor
and
sti
in
imulb
jbe
fisttpll
xlat
loopne
adcl
adc
cmp
mulps
cli
cs
add
loope
inc
inc
jnp
loope
xor
mov
scas
pop
lahf
aas
or
insl
push
adc
xor
sbb
adc
bound
mov
inc
fisttps
and
loop
adc
adc
sbb
cli
or
mov
insl
push
adc
or
adc
ja
lret
in
push
outsl
xchg
das
mov
insb
push
mov
jp
lods
xchg
repz
ljmp
cmp
xor
mov
cltd
les
mov
sbb
out
test
mov
xchg
xchg
fnstenv
or
lods
mov
sti
ds
mov
aad
pop
out
sbb
pop
sahf
dec
jp
clc
fsubs
pushl
out
sti
mov
stc
out
or
pop
mov
mov
cld
cmp
out
sahf
aas
std
add
iret
fdivrl
cmp
jbe
fsubs
mov
push
cwtl
jb
and
lcall
inc
test
cmp
mov
push
iret
push
mov
xor
pop
and
push
adc
stc
mov
xchg
unpckhps
xor
stos
mov
sbbb
pop
int
jp
pop
cmpl
shrl
stc
jecxz
push
push
mov
loopne
mov
push
lock
insb
repnz
loopne
jle
mov
adc
imul
mov
enter
hlt
repnz
mov
jo
pushf
cmp
xchg
jae
rcrb
aas
sbb
ss
scas
or
sbb
jg
lret
sub
pop
jno
stos
cmp
ds
cmp
adc
inc
and
push
jno
and
sbb
xchg
or
daa
or
xor
cmp
inc
ret
iret
addr16
mov
in
cmp
ret
addr16
jg
lahf
nop
xor
es
fbld
data16
dec
xchg
cmp
pusha
mov
adc
gs
outsb
lods
inc
pop
pop
sub
sub
adc
test
repnz
and
pop
cltd
dec
or
rolb
and
js
cmp
js
sarl
push
ret
mov
fs
rcl
push
idivl
adc
or
cmc
js
pop
ja
mov
jecxz
jno
mov
mov
std
add
in
les
xor
out
pop
jns
imul
mov
add
push
lds
xlat
inc
adcb
bound
repz
pushf
stc
mov
push
nop
cmc
dec
mov
add
in
pop
jecxz
sbbl
mov
scas
xor
roll
cmpsb
stos
mov
push
imul
out
cmp
in
lock
shr
push
cmp
mov
adcb
shll
sbb
imul
mov
pop
insl
sbb
add
lock
mov
into
aaa
adc
adc
out
inc
or
rcrl
xchg
cld
jno
test
add
shlb
out
adc
aaa
in
rcl
pop
mov
mov
cli
sbbb
shll
and
gs
enter
ds
cmpsl
in
leave
cmp
sbb
add
out
mov
cmp
cwtl
cmp
out
scas
xchg
add
pop
cmp
pop
stos
push
xor
insb
pop
xor
cmp
mov
xor
icebp
mov
push
lock
mov
test
sarl
adc
sbb
sbb
bound
jp
jg
jnp
cli
test
aaa
cmp
sahf
mov
test
insl
sbb
mov
cmp
mov
pusha
dec
pop
jb
dec
push
inc
lcallw
push
loopne
dec
fwait
inc
xchg
ljmp
inc
ficompl
rcl
inc
lcallw
or
xchg
xchg
enter
ret
mov
lcall
fidivs
or
clc
xor
pop
jb
mov
push
movsb
xor
rorl
jp
push
in
and
cmp
adc
cmp
or
fistpll
std
cmp
jbe
inc
rcrb
rcl
inc
lcallw
or
xchg
xchg
inc
aas
int3
cli
adc
mov
insl
push
adc
push
adc
sbb
dec
inc
fiadds
jno
pop
setb
cmp
into
hlt
out
pusha
mov
jge
stc
dec
adc
pusha
dec
dec
scas
scas
movsl
mov
ljmp
xor
mov
lds
pop
jbe
repnz
add
mov
pop
mov
mov
adc
adc
add
and
xorb
in
mov
lods
or
mov
push
jno
inc
inc
fsts
ret
inc
cmp
mov
xchg
sbb
adc
mov
scas
je
in
xor
adc
xor
push
stos
xor
add
data16
fwait
into
xchg
xor
jo
and
xchg
lcall
imul
jecxz
xchg
jge
bound
sub
xchg
out
push
js
and
or
in
leave
mov
sbb
or
xchg
outsb
mov
xlat
mov
dec
adc
dec
xor
xchg
jno
add
loop
in
insb
sti
xorl
cmpsb
adc
push
adc
scas
pop
push
mov
cmp
sbb
stos
call
std
testb
outsb
ret
divl
or
dec
dec
dec
xor
test
push
mov
into
loopne
jno
jo
insb
scas
test
fists
cs
repz
jne
mov
add
mov
cmp
dec
push
xchg
jno
and
jle
xchg
adc
call
aam
iret
mov
push
lahf
imul
in
call
dec
xlat
fwait
loop
cmp
or
stos
and
clc
movsb
fimuls
pop
cmpsl
cmp
lods
sub
and
or
xchg
or
push
mov
pop
popf
dec
push
xchg
cwtl
ret
sbb
inc
nop
int
dec
es
aad
jae
ljmp
mov
fldenv
insl
push
adc
insl
push
adc
fs
por
mov
in
push
jb
add
insb
adc
adc
sbb
js
sub
insl
push
adc
daa
enter
test
sbbl
xchg
cs
cmp
fstl
xchg
popf
xchg
fistl
push
xchg
dec
je
andl
loope
ret
xor
xor
shlb
scas
jns
ret
pop
test
sbb
sbb
mov
imul
or
popa
aas
mov
or
xchg
in
push
aaa
fldt
add
lcall
adc
dec
in
jb
negb
push
cmp
adc
xor
cmp
jnp
subb
jp
add
aaa
enter
pop
cmp
nop
popa
div
lret
jp
int
mov
cmp
mov
dec
dec
xor
add
in
stos
sbb
and
cmp
jecxz
jl
or
adc
sub
jp
and
das
iret
and
mov
lea
push
adc
xchg
mov
sti
je
leave
jmp
scas
inc
push
out
sub
sub
sbb
ja
lret
add
jo
xor
and
mov
mov
popa
mov
leave
sbb
cmpsl
ret
inc
jl
inc
or
xor
gs
jo
sub
inc
xchg
mov
inc
sbb
jle
stc
js
push
ja
addb
divb
and
out
add
stos
and
and
outsl
xor
push
bound
push
dec
pop
out
repnz
add
adc
int
lods
xchg
adc
jp
stos
or
push
arpl
jle
sarl
inc
add
or
cmpsb
jmp
iret
mov
jne
decl
add
roll
jge
sub
push
in
test
ss
movsb
mov
mov
iret
pushf
idivb
pusha
mov
xchg
je
es
fwait
mov
cmp
cmp
cmp
push
mov
xlat
jecxz
pop
xor
out
mov
xor
cs
rolb
jo
push
push
push
cli
imul
fdivrs
and
sbb
adc
or
notl
cmp
mov
sub
mulb
loope
and
pushl
jl
icebp
inc
aam
sub
ret
adc
out
cli
push
por
ds
dec
popa
daa
add
data16
ljmp
cld
mov
das
mov
inc
in
dec
mov
fsts
dec
rol
enter
jnp
loop
test
mov
mov
es
pop
popf
insb
xor
sarl
jmp
inc
test
cmp
int3
lea
cld
dec
xor
inc
xchg
jno
mov
arpl
pop
add
ror
lahf
sbb
dec
test
pusha
xor
jb
or
bound
push
scas
lods
lret
push
inc
mov
repz
clc
das
adc
xor
dec
jmp
ja
mov
dec
pop
outsl
dec
add
insb
pop
sbb
dec
out
ljmp
mov
mov
movl
mov
pop
mov
or
nop
pushf
loope
cmpsl
cmp
adc
xor
pop
dec
imul
inc
xchg
movsl
addr16
nop
sub
push
mov
mov
dec
insl
xor
repnz
jne
or
xor
aad
cmc
jp
xchg
stc
out
js
sub
pop
mov
fldcw
outsl
xchg
test
jne
dec
mov
jg
lock
es
jl
sbb
jo
mov
loop
test
aad
mov
test
fnclex
outsl
test
imul
jg
scas
fs
mov
gs
dec
lods
imul
int3
mov
es
fistps
xchg
in
fstl
push
push
xchg
sbb
jo
js
or
sub
dec
out
dec
imul
test
or
fs
std
shll
push
or
jle
dec
mov
icebp
lret
mov
les
nop
push
cwtl
or
std
push
mov
ret
hlt
mov
inc
lcall
xor
xor
iret
inc
mov
inc
sbb
sti
repz
and
jae
cmc
fwait
mov
faddl
int3
les
jb
xchg
xchg
cmp
adc
cld
cmc
movsl
loop
in
adc
mov
xor
jg
and
lahf
mov
je
jns
sbb
inc
jbe
js
or
cmc
imul
ss
int
mov
mov
and
jne
mov
shld
adcb
daa
fdivrl
push
ds
imul
fnstcw
cmpsl
sbb
mov
rolb
enter
or
add
pop
mov
shrl
iret
stc
push
jle,pt
and
cmp
jl
jb,pn
loop
mov
out
xlat
and
ss
adc
ret
iret
in
cmp
push
outsl
sub
mov
inc
or
mov
and
ja
sbb
add
aas
mov
sar
mov
div
in
cmpb
lds
repz
inc
jp
push
pusha
jns
fs
fnstsw
add
jae
lret
test
shlb
sub
jg
hlt
mov
and
aas
cwtl
and
xor
into
mov
xlat
xor
push
int
sub
mov
mov
mov
push
les
int3
inc
adc
outsb
jne
jo
lret
movsb
loopne
nop
mov
cmp
push
dec
pop
xchg
push
mov
jle
dec
lahf
rorb
jo
out
xor
ss
fistpll
movsl
push
jae
test
push
and
mov
xchg
aas
les
push
push
adc
insb
shrb
mov
sbb
adc
jge
sbb
cwtl
cmc
xor
mov
or
lret
xchg
add
dec
push
ss
push
xor
add
cmp
inc
sbbb
dec
popf
int3
push
sbb
cmc
jmp
inc
fcmove
or
adc
push
orb
push
ja
cli
insb
int3
jno
fistl
fisttpll
or
sub
sub
sub
paddq
out
mov
push
cmp
cmp
sub
or
push
push
lods
lock
mov
fcoml
stos
or
in
push
dec
fdivl
dec
cld
lret
xchg
pop
bound
std
push
divb
pop
inc
sub
mov
add
mov
adc
adc
and
sub
icebp
dec
lock
mov
jmp
push
jl
arpl
cwtl
jmp
sbb
insl
jne
or
mov
testl
inc
mov
bound
push
and
mov
dec
popf
std
aad
mov
in
mov
lahf
enter
inc
fldt
or
fistpl
add
adc
fwait
xchg
add
notb
push
shlb
in
sbb
xchg
pop
cmp
pop
xor
test
les
or
inc
add
shrl
mov
stc
aad
pop
hlt
lods
lock
mov
call
loop
adc
inc
sub
xchg
push
push
or
arpl
xor
jns
mov
sub
jmp
sbb
xchg
cmpb
test
sub
daa
mov
adc
inc
or
es
imul
push
hlt
js
cmpl
gs
dec
mov
stos
imul
dec
mov
xchg
add
rolb
push
ficomps
pop
mov
dec
cmpsl
out
cmp
das
xchg
lds
inc
add
jnp
push
pop
gs
xlat
test
shrb
push
push
adc
push
popl
cld
jmp
pop
adc
fimull
fcomip
fwait
jno
push
cmp
pop
inc
sub
jnp
ds
sub
xlat
fiadds
fadd
test
adc
mov
sub
in
pop
cmp
or
cmp
loopew
mov
adc
je
ja
pop
cmp
shrl
xchg
pop
in
rcr
loopne
repnz
js
cli
adc
int
push
push
adc
jb
fnstenv
mov
xchg
daa
dec
sarb
cwtl
lods
in
mov
xchg
adc
push
push
out
repnz
fwait
inc
push
mov
rclb
sub
xchg
push
aas
jno
mov
out
divb
and
cltd
lds
add
push
lret
lahf
mov
prefetchwt1
and
sbb
push
and
xor
adc
shr
xchg
js
or
testb
push
daa
test
sub
cmp
in
fnstcw
sbb
sbb
jge
mov
iret
sahf
xor
adc
out
fldl
sub
push
adc
data16
fdivs
test
outsb
jb
mov
lea
jb
sub
imul
cs
gs
mov
inc
mov
pop
das
adc
fsubs
xchg
jo
push
pop
jp
jb
fdivrl
mov
mov
outsb
push
adc
adc
dec
fwait
lcall
push
pop
jp
std
adc
cmp
into
imulb
repz
mov
jne
push
outsb
push
adc
jbe
push
movsl
add
mov
shll
adc
in
xor
dec
out
mov
arpl
cmp
jno
movl
adc
inc
mov
xor
aad
sbb
jno
pop
jecxz
push
ss
jo
push
push
loope
add
testb
dec
popf
std
push
fmulp
imul
sbb
insb
int
xor
aas
les
and
cmc
adc
sub
leave
clc
das
inc
sti
adc
push
adc
add
mov
adc
and
adc
aas
aas
jge
mov
inc
jo
push
adc
mov
cmp
mov
arpl
adc
ljmp
push
roll
push
adc
pusha
fs
pop
lea
or
ja
sub
mov
out
mov
or
pop
and
adc
dec
add
pop
adc
cmp
adc
sti
dec
adc
push
adc
icebp
or
and
bound
bound
gs
je
cld
loop
adc
out
inc
sub
sub
xorb
sub
mov
pop
sub
push
cmpsb
pop
cmp
xchg
adc
clc
insl
push
adc
jecxz
inc
xchg
lcall
popa
js
adcl
in
pusha
jp
pop
negl
mov
inc
pusha
push
adc
adc
rcrl
or
xchg
je
dec
enter
push
adc
push
shrl
xor
cmc
add
push
push
shrl
sarb
cmp
push
jo
test
mov
lock
push
adc
add
mov
cmp
mov
add
mov
mov
aam
push
adc
mov
cltd
fimull
cltd
pop
and
push
push
je
mov
and
adc
push
jle
test
mov
cmp
outsb
xor
push
shlb
popf
fdivp
es
gs
dec
fistpl
cmp
xor
mov
ja
push
ja
mov
movsl
ja
cmp
add
aam
jb
jp
mov
pop
cmpsl
sub
jmp
cs
or
pop
cmp
inc
mov
mov
dec
jnp
insl
push
adc
xchg
sti
hlt
ret
dec
test
adc
insl
push
adc
stos
aaa
cs
stos
mov
mov
rcll
out
dec
and
sbb
adc
push
adc
sub
mov
cwtl
insl
push
adc
bound
aad
mov
mov
mov
pop
xor
jae
nop
insl
push
adc
push
adc
xor
fsubs
push
imul
test
ds
cmp
sub
push
push
js
fnstenv
mov
rol
addl
lahf
mov
and
notb
mov
adc
insl
push
adc
mov
sbb
sbb
lock
adc
inc
and
inc
test
adc
stos
mov
jl
sbb
sti
testl
push
outsl
sub
adc
test
pushf
dec
rolb
pusha
outsb
lock
push
sbb
adc
sub
push
aaa
loopne
insb
fcomps
negl
adc
and
cmpb
daa
inc
mov
xlat
scas
pop
push
pusha
inc
adc
aaa
movsb
mov
push
adc
daa
cmove
xorb
and
mov
pop
and
fimull
adc
shr
xchg
xchg
sub
sbb
rolb
cmp
inc
test
outsl
fs
sahf
ss
inc
inc
adc
addb
fwait
adc
push
adc
mov
push
cltd
outsl
mov
and
adc
insb
fsubs
jge
jmp
cli
jnp
xor
mov
xchg
adc
es
jge
ss
testl
push
mov
insl
push
adc
sub
or
lds
fwait
or
push
cmpsl
xor
sbb
and
dec
jge
mov
imul
cmp
pop
test
push
adc
sbb
movl
push
adc
mov
jns
jmp
pop
cmp
andl
mov
or
xchg
sub
mov
mov
addb
sub
cmp
mov
insl
push
adc
mov
add
addl
push
adc
jle
jb
fidivrl
fcoms
jns
mov
push
inc
sub
push
and
in
mov
rorl
adc
in
push
orb
or
mov
ss
xchg
sbb
sub
sahf
pop
std
ret
mov
movsb
es
adc
insl
mov
adcb
lock
mov
test
sbb
sbb
fnsave
hlt
mov
adc
fcompl
ljmp
push
adc
std
pmulhw
mov
or
out
aam
or
mov
mov
xchg
adc
incl
mov
lcall
in
and
xchg
inc
dec
cmp
push
adc
lds
add
or
mov
mov
and
xchg
push
jnp
pop
aaa
cmp
mov
outsl
pop
add
dec
or
insb
add
je
cli
sahf
aas
cwtl
jg
lods
ljmp
adc
loopne
adc
pop
movsl
sarb
adcb
lret
cmp
adc
enter
arpl
adc
enter
mov
testb
inc
call
aad
mov
aad
int3
mov
scas
sub
iret
decb
mov
popf
fisubs
and
dec
mov
js
imulb
jl
loop
cmpsb
cld
cmp
insl
jl
push
adc
push
out
je
push
adc
xchg
cmp
insb
outsb
push
adc
lret
dec
out
movsl
push
loopne
pop
adc
adc
scas
loopne
pop
adc
mov
cmp
add
xchg
popa
adcb
out
into
testb
add
das
js
test
not
inc
add
sbb
xchg
test
push
pusha
pop
sahf
out
out
int
mov
push
adc
push
adc
mov
push
mov
push
outsb
push
adc
or
sbb
stos
lock
mov
push
adc
xlat
sub
mov
mov
mov
sub
jnp
popf
pusha
rol
insl
push
adc
sarl
inc
sbb
xor
es
pusha
fwait
ss
mov
pop
adc
mov
sbb
sbb
outsb
push
adc
cmp
aas
push
popl
push
in
or
adc
jae
in
cmp
mov
pop
jle
jbe
push
and
mov
jnp
mov
leave
xchg
daa
and
xchg
repnz
daa
rolb
pusha
push
adc
xlat
jno
test
daa
fnstenv
fs
sbb
pusha
shrl
push
adc
popf
cmc
gs
pop
ds
mov
push
divb
les
adc
mov
sub
imul
jnp
or
xor
ret
cs
mul
iret
mov
sub
jmp
inc
push
add
jno
adc
push
adc
lods
jo
sbb
or
addb
fdivl
cmp
aas
out
inc
test
sub
scas
inc
lahf
aas
jle
jae
or
js
js
test
mov
sub
push
inc
es
sahf
mov
stc
jg
mov
xchg
mov
lock
cmc
popa
add
pop
arpl
xor
addr16
sbb
and
pushf
mov
cmc
fisubrl
loopne
add
cmp
int
sbb
shll
cmp
aaa
cli
xor
jecxz
gs
rorl
add
sbb
push
push
push
pusha
shll
sbb
sub
cli
in
int3
loop
mov
andb
xchg
in
mov
sti
pop
sbb
inc
pop
and
stos
in
sarl
cmc
xchg
lret
sbb
lret
cwtl
sbb
mov
rcr
cmp
rcrb
adc
mov
push
sub
inc
cmp
add
adc
jl
xchg
and
jle
mov
push
push
adc
sbb
add
divl
loopne
orb
subl
insl
push
daa
adc
cwtl
outsb
push
adc
sbb
or
adc
xchg
add
xor
sub
xchg
mov
pushf
add
lcall
mov
adc
sbb
pop
jno
shrb
inc
mov
sub
incb
push
adc
ss
mov
clc
mov
inc
xlat
xor
inc
loope
xchg
jecxz
flds
sub
jbe
rolb
mov
sbb
adc
jnp
sahf
sub
int
icebp
add
mov
ss
and
cmp
mov
sbb
test
mov
fidivs
repz
add
adc
movsb
jmp
cmpsl
mov
xchg
mov
push
xchg
adc
insb
stos
daa
mov
je
cltd
mov
shll
bound
and
jle
aaa
sub
mov
mov
inc
mov
pushf
push
test
xorb
jns
stos
ljmp
ljmp
sub
jl
repz
xlat
fcoms
out
sbb
into
subb
sub
fldcw
and
jp
je
incl
xchg
icebp
pop
jnp
dec
lock
mov
sbb
nop
aam
fwait
stos
inc
andb
add
mov
loopne
lret
inc
ja
sbb
jmp
imul
jecxz
jno
xor
xchg
inc
adc
mov
sub
icebp
std
sbb
iret
ds
xor
js
movsl
sahf
rorl
out
push
arpl
adc
call
addr16
xchg
push
pop
xor
scas
js
daa
add
mov
aad
pop
out
scas
mov
aaa
xchg
fdivrs
mov
repnz
pop
adc
xor
iret
fldt
mov
cmp
sub
jae
push
adc
sub
pop
mov
imul
sub
push
mov
mov
sub
jno
xor
sbb
mull
outsb
and
out
mov
adc
stos
or
outsl
mov
push
adc
mov
jns
sbb
mov
mov
lods
xor
aam
ja
sti
addr16
ds
jl
ss
scas
fistl
scas
xor
mov
jge
mov
insb
subb
dec
mov
iret
jo
scas
stos
mov
inc
call
and
aaa
clc
shr
rcrl
inc
cmp
sub
insb
sahf
sti
pop
test
push
repnz
dec
jmp
dec
jmp
imul
jb
pop
inc
xlat
cmp
fwait
cmpsb
cmp
scas
xlat
fistpl
lods
sbb
inc
inc
int3
dec
adc
cmc
mov
sahf
dec
mov
out
loope
stos
shlb
scas
rol
popa
inc
int
push
inc
cmp
jno
loopne
lahf
mov
cld
jge
push
bnd
pushf
movsb
cmc
jo
scas
fidivrs
sub
sbb
movsl
gs
cli
jl
int
ss
rol
leave
ja
rolb
xor
popa
xchg
mov
xchg
xor
fdivs
mov
out
mov
loopne
shrl
scas
mov
xor
out
push
mov
outsb
popl
testb
xor
mov
stos
xchg
repz
test
mov
aam
roll
out
cld
dec
push
lods
xchg
in
testl
repnz
lods
jns
inc
xchg
push
shr
rcll
rorl
adc
and
xorb
mov
jo
mov
jbe
and
cmpsl
adc
in
in
lock
jg
popa
outsl
outsl
inc
sbb
aam
mov
xor
das
loope
adc
cli
add
insl
add
not
jo
aam
mov
pop
add
mov
iret
inc
in
lahf
gs
cmp
jbe
xchg
add
or
ficomps
rolb
sbb
ja
adc
pop
jle
pusha
push
mov
inc
in
push
bound
out
insl
gs
dec
mov
out
or
sub
mov
inc
cmc
into
movsl
xor
sub
daa
lret
push
xlat
mov
inc
mov
jbe
jb
fadds
pushf
test
popa
ja
mov
test
mov
imul
pop
push
decl
push
adc
outsb
aaa
es
push
cvtps2pi
lret
iret
mov
mov
sahf
bound
inc
mov
adc
cmp
sti
insl
and
popf
test
pop
ljmp
into
cmpl
pop
fidivrs
je
icebp
out
imul
mov
fst
push
mov
jnp
repz
push
cmpsb
lcall
push
dec
mov
mov
push
daa
add
inc
add
imul
in
jl
push
add
lahf
cmpsl
mov
repnz
lods
dec
adc
push
xlat
inc
mov
jae
adc
fwait
cwtl
jo
cmp
adc
sub
push
xchg
jmp
sbb
cmpsl
push
orl
pop
pop
in
push
mov
sub
lods
push
mov
clc
xor
jle
or
out
jo
jg
mov
push
xchg
test
andb
insb
or
or
inc
sub
idivl
push
js
inc
addr16
cs
or
out
mov
je
in
les
loopne
pusha
mov
hlt
adc
insb
mov
mov
sub
add
mov
xchg
inc
aad
lret
imul
iret
addl
stos
mov
pop
ds
fs
cmc
das
dec
sbb
jb
cmpsl
xor
mov
adc
inc
mov
pushf
mov
mov
xor
iret
int3
push
int
lret
scas
pop
mov
movl
xlat
pushf
add
or
stc
adc
xchg
repz
in
popf
add
lds
fnstenv
cmp
cmpsl
cmp
out
push
push
adc
lea
sti
call
mov
xor
xlat
mov
das
cmc
or
fcmovbe
hlt
mov
fdivrs
adc
lret
lock
pop
inc
sbb
cmc
and
ja
into
lahf
divb
mov
push
mov
push
cmp
dec
rolb
pushf
stc
inc
and
insl
or
push
ret
es
add
movsl
pop
cli
icebp
ds
push
xlat
fs
or
fistpll
movsl
movsl
aam
xchg
cld
dec
daa
dec
out
adc
sub
cmpsl
cld
or
ret
jae
cbtw
mov
push
aaa
and
iret
or
fmuls
push
xchg
add
jbe
fstl
push
jb
test
inc
xchg
inc
orb
lcall
in
xchg
sub
jge
mov
pop
js
push
jg
lods
mov
jno
sarl
test
mov
in
and
xchg
pop
add
jns
pusha
or
fidivrs
xor
lods
jle
add
addps
xchg
les
aaa
mov
adc
out
daa
xchg
cmp
adc
arpl
pop
subl
ret
cmpsb
pusha
or
frstor
inc
add
les
lret
mov
js
add
jne
xor
cmp
push
in
cwtl
scas
jle
xor
dec
nop
sub
xchg
mov
inc
int3
movsb
test
add
dec
cmp
in
mov
sub
sub
inc
and
push
movsb
cs
lret
inc
add
jmp
cwtl
lods
sub
jae
lret
es
jne
sbb
sahf
in
mov
adc
mov
pop
bound
cmpsb
jbe
test
mov
and
out
dec
cli
lock
ret
stc
daa
rcrb
lods
or
sub
push
cltd
fcom
pop
mov
jb
sti
xchg
xchg
mov
insb
imul
pop
in
daa
jge
add
cmp
mov
sbb
jge
xor
xchg
jb
add
mov
push
push
push
out
hlt
add
or
mov
dec
icebp
pop
push
cmp
xchg
sub
mov
push
je
mov
jb
std
or
lret
shrl
stc
mov
push
cmp
iret
mov
shll
pop
xchg
paddw
lods
popa
pop
out
cmp
arpl
pop
sbb
adc
xchg
lret
lea
mov
sub
fsubs
and
lahf
mull
or
mov
sbbl
fbld
lods
dec
adc
xchg
sbb
leave
xchg
and
imul
or
xchg
dec
mov
push
push
out
sub
fistpl
maxps
jecxz
cs
scas
jge
mov
dec
pop
aam
data16
jae
mov
cltd
sbb
subl
cmp
xor
jb
aad
pushf
fidivl
je
xor
lahf
ds
dec
test
fnstsw
mov
push
add
xchg
push
cmp
adc
jge
sarb
dec
add
push
sahf
lret
jno
pop
ljmp
gs
lods
leave
inc
aas
jle
cli
xor
xlat
addr16
cmpsb
addr16
jmp
xor
ss
mov
clc
bnd
pop
iret
lret
xor
in
in
mov
mulb
push
leave
xchg
fs
pop
add
mov
js
pop
lahf
jge,pt
inc
dec
fnstsw
outsb
xlat
jp
cltd
pop
pop
cmp
daa
mov
mov
out
pop
sub
outsb
jne
xlat
inc
push
loop
not
pushf
imul
mov
mov
fs
repz
shll
test
fnstsw
mov
xlat
scas
pop
je
repnz
mov
cmp
lahf
sbb
mov
xchg
cwtl
int3
rorl
or
cmp
and
dec
xor
scas
fnsave
jo
out
nop
adc
pop
imull
out
stc
or
cmpb
cmp
jecxz
cmpsl
sti
les
fwait
mov
js
out
xor
loope
xlat
lret
jae
das
in
xor
out
pusha
sar
not
cmp
testl
mov
pop
fldenv
add
pop
test
add
cld
cwtl
negl
mov
mov
out
cmp
bound
jno
testl
xor
mov
and
mov
das
add
adc
cmc
mov
pop
xor
int
jp
push
cmpl
in
out
repz
jge
enter
clc
mov
movsb
movsl
out
pop
into
cmp
loope
push
adc
cmp
lahf
sarb
cmc
mov
or
lea
outsl
gs
fwait
pusha
pusha
push
adc
scas
sti
aad
dec
insb
in
into
lahf
xchg
rcrb
xchg
std
mov
enter
cli
xor
scas
cmc
inc
movsb
mov
pop
call
cmp
stos
push
mov
testb
ficoms
adcb
and
into
or
cwtl
adc
xor
test
push
push
sub
int3
das
movsl
inc
push
cmc
leave
icebp
ret
aad
dec
leave
fldenv
mov
sahf
test
mov
push
adc
neg
in
push
aam
or
push
out
pusha
jp
xor
sub
dec
lods
mov
dec
cmp
push
pusha
in
xchg
mov
arpl
adc
imul
add
out
dec
pusha
jmp
adc
push
adc
cmpsl
repz
or
out
cltd
notl
pop
xor
mov
adc
aaa
loopne
cmpb
pusha
inc
mov
pusha
push
adc
outsb
aam
xor
and
adc
mov
outsb
aad
jmp
adc
adc
aam
add
push
test
out
clc
push
movsb
ffree
cmp
jmp
push
adc
mov
test
call
mov
or
dec
xchg
dec
mov
or
outsl
pop
pop
je
pusha
pusha
push
adc
jge
aaa
adc
jnp
ret
call
push
repz
xchg
inc
int3
xor
pop
out
inc
xor
fsqrt
insb
fwait
sbb
or
push
adc
in
push
lcall
ja
xor
arpl
dec
push
movsl
mov
lock
aam
jae
jns
jl
push
shll
incl
dec
push
scas
das
sahf
popf
dec
cmp
ret
mov
fistpl
pop
ss
cmc
inc
and
and
in
xchg
clc
int
out
dec
mov
jl
and
add
mov
cmpsl
add
test
push
pusha
push
adc
pushf
shrl
jle
mov
lea
adc
push
adc
add
out
ror
dec
adc
jg
jmp
mov
sbb
pop
jge
mov
popa
push
adc
xor
loope
fnstcw
pushl
movsl
cltd
outsb
subb
in
push
iret
cltd
sub
jnp
addr16
inc
cmp
aas
jle
mov
shrb
lods
jl
xor
and
sbbl
inc
dec
fwait
repnz
xchg
mov
negb
xchg
sub
adc
xor
jecxz
mov
popa
pushf
mov
mov
pusha
and
leave
mov
jo
ljmp
jp
sub
xor
cwtl
ss
fdivrs
fwait
xlat
mov
test
out
test
sub
outsl
push
pop
push
adc
mov
mov
dec
jg
dec
lahf
aas
mov
jnp
lods
les
lret
add
jo
fbstp
sbb
mov
mov
shlb
mov
inc
pop
add
or
daa
dec
imul
dec
lahf
push
jg
je
pusha
shrl
dec
adc
push
ja
jl
adc
xor
rolb
xchg
mov
out
push
inc
mov
test
adc
div
xchg
es
jbe
fildl
add
mov
pop
or
pop
loope
js
or
sbb
and
pop
jns
scas
push
loope
sub
addr16
adc
shll
imul
adc
divb
iret
sbb
cli
js
mov
out
mov
ja
add
jns
aam
popf
push
int3
mov
xlat
lcall
or
out
push
ds
addb
sbb
mov
cmp
mov
mov
or
dec
lds
pop
jmp
stc
pop
dec
iret
push
and
sub
clc
imul
scas
pop
xchg
cmpsl
imul
jle
sbb
fsubr
daa
xor
fisttpl
dec
loope
add
fbstp
into
pushf
xchg
sub
xchg
incl
clc
insb
mov
mov
lret
icebp
pop
jne
insl
cmp
adc
and
mov
dec
lcall
daa
adc
inc
pop
in
adc
outsb
push
adc
test
xlat
bound
lods
enter
lds
bnd
jp
test
xor
mov
push
dec
ret
pop
in
gs
xorb
imul
mov
sti
mov
lds
std
lods
mov
dec
pop
ret
xor
add
sbb
mov
jmp
leave
jge
cmp
inc
xchg
pop
xor
ret
mov
sub
popa
aad
xchg
stc
scas
jge
test
cld
arpl
adc
pop
sub
insb
pusha
jns
nop
push
cmpb
push
cli
into
jecxz
les
gs
push
push
xchg
rcl
pop
and
cltd
push
popa
es
imul
daa
sub
sub
dec
out
scas
pop
call
popf
fdivp
clc
aas
add
dec
je
lods
rep
xor
cmc
xchg
int
pushf
mov
mov
hlt
lret
std
xor
ret
sbb
sbbl
js
cs
sbb
outsl
mov
je
adc
push
in
sbb
shll
popl
pop
aam
jae
inc
push
mov
call
jecxz
in
inc
mov
filds
std
lea
push
das
push
ror
sar
cltd
lock
pop
sbb
cmc
das
cld
insb
sbb
sbb
mov
shlb
ret
out
or
xchg
fs
shlb
fistpll
push
adc
pop
xor
and
hlt
out
lahf
push
adc
push
adc
loope
stos
sbb
mov
fwait
inc
push
sbb
mov
and
roll
mov
pop
fldl
xor
loope
mov
ret
addl
pusha
sarl
jne
insl
scas
pop
mov
mov
shr
mov
xor
adc
mov
mov
inc
fdivp
cmpsl
nop
addl
cmp
fstps
push
shll
xor
adc
pop
push
inc
fmulp
fs
cmp
lods
jp
in
adc
lea
cmp
aas
jae
inc
test
pop
loope
arpl
xchg
test
sbb
mov
mov
aad
stc
sbb
or
push
inc
mov
shrb
mov
packuswb
roll
jo
xchg
stos
mov
clc
ss
xchg
daa
push
int3
push
sbb
push
jnp
adc
pop
xlat
push
mov
fnsave
mov
xlat
add
lods
incb
or
push
sub
es
fwait
dec
scas
outsl
ljmp
mov
push
add
mov
add
adc
pop
push
jne
fldenv
insl
das
jo
mov
xor
cmp
add
xchg
shlb
rorb
and
int3
mov
ret
add
jns
pop
sbb
test
push
fldt
das
jo
jge
mov
push
mov
mov
orb
adc
push
or
cmp
sbb
stos
dec
jg
sub
mov
mov
les
adc
je
imul
cmp
fcomps
dec
das
jne
jge
ja
and
cmc
stc
aaa
cmp
mov
dec
pop
call
add
je
adc
lods
xchg
jae
test
nop
lods
mov
xchg
scas
or
or
int3
fdiv
int3
fs
fldenv
or
and
clc
dec
and
arpl
or
add
addr16
addr16
out
jb
xor
pop
cmp
insb
scas
push
ja
insl
push
icebp
jno
test
push
and
xor
xchg
mov
ret
fldenv
pop
fistps
lea
sahf
ss
mov
mov
imul
popa
xchg
rorb
in
cmpsl
sbb
imul
andb
jmp
xchg
pushf
dec
mov
mov
fcmovnb
loopne
pop
movsb
fimuls
bound
nop
shll
cld
rcl
xor
lcall
call
jmp
xlat
nopl
xor
clc
mov
jns
pop
je
ja
xor
jg
xchg
sti
aas
inc
data16
sub
mov
ss
cmpsb
mov
jp
in
fimull
push
pop
outsb
std
push
push
cmp
inc
int3
sub
dec
jle
movsb
cmp
imul
movsb
testb
add
loop,pn
int3
cmpsl
jmp
cmpsl
stos
mov
insl
fs
rcrb
fmuls
mov
jns
pushf
xchg
insb
inc
dec
pop
mov
add
adc
sti
int
outsl
pushf
sub
popa
andl
mov
sbb
pop
cmpsb
loop
js
sub
add
into
or
rol
adc
ljmp
sbb
push
popf
sbb
test
lea
lock
mov
sbb
pcmpgtw
lods
mov
dec
pop
setns
cmp
cs
mov
flds
shrl
sbb
es
inc
mov
push
adc
mov
push
das
pop
shll
adc
inc
xchg
adc
ss
inc
ret
cmpsb
inc
orb
add
repnz
sub
out
mov
lods
leave
sub
iret
lahf
outsb
lock
xorb
cmp
mov
in
jmp
lahf
cmp
scas
or
pusha
sub
fs
adc
push
sahf
cmpl
leave
stos
jp
nop
mov
mov
adc
adc
add
call
cmp
ss
arpl
pop
jno
dec
cmove
inc
xor
and
dec
pop
jg
fnstenv
mov
stc
lods
mov
xchg
jo
fnstsw
mov
test
dec
push
int3
pop
adc
jecxz
cmpsl
addr16
out
lahf
clc
cmp
cmc
sub
scas
aad
mov
inc
pop
loope
inc
ficomps
pop
adc
cltd
pusha
dec
shll
lea
push
aas
jno
mov
loope
mov
mov
adc
sbb
xor
mov
or
test
fndisi(8087
xchg
fs
sbb
movsb
hlt
or
push
xchg
aad
addb
call
fs
cmp
imul
inc
lret
xchg
daa
cmpsl
test
cld
mov
testl
add
ds
push
mov
jae
and
pop
adc
jae
cmp
or
adc
push
mov
call
out
push
in
cwtl
push
popa
mov
ret
sub
or
adc
and
push
push
cmpsl
into
arpl
call
ljmp
imul
ret
nop
jmp
mov
fs
sbb
cmpb
mov
pop
popa
ljmp
aas
decb
int3
pop
adc
out
inc
das
outsl
push
int3
pop
adc
loop,pt
add
add
daa
daa
add
or
adc
inc
sbbl
jg
add
sbbl
and
jmp
xchg
dec
mov
outsl
jne
sbb
mov
cmpsb
insl
push
pop
cmp
sub
imul
mov
push
cmp
jns
adc
call
sahf
or
xchg
sahf
xchg
mov
add
jno
ffree
imul
ja
roll
mov
push
dec
inc
or
jmp
mov
xchg
daa
jecxz
call
push
cmp
out
jge
pop
inc
dec
push
test
insl
adc
adc
xchg
insl
fcmovu
or
push
pop
int3
mov
adc
fcmovb
lock
push
int3
pop
adc
subb
pop
adc
shrb
or
adc
mov
adc
xchg
push
sub
adc
mov
int3
push
adc
push
xor
filds
lea
sbb
jp
dec
xchg
out
call
in
or
sub
mov
mov
or
xchg
and
and
test
scas
in
es
and
adc
ret
xchg
popf
outsb
dec
loop
adc
add
adc
lahf
test
popf
stos
lods
sub
aam
pop
mov
mov
or
and
lea
ror
pop
dec
lcall
in
mov
jge
push
in
loop
rol
adcl
mov
out
mov
repnz
es
inc
andb
add
fwait
dec
test
add
pushf
fidivs
dec
lret
pop
xchg
popa
ja
divb
in
inc
data16
jnp
jne
shlb
cld
cld
push
lods
xor
or
or
adc
push
notl
lock
adc
cmc
inc
xor
sub
jle
mov
jbe
sub
xchg
dec
lcall
icebp
jp
adc
jne
mov
push
testl
push
repz
and
addr16
jp
and
mov
repz
fnstenv
cmp
aaa
xor
add
xor
jno,pt
cli
repnz
jbe
jge
imull
out
je
push
pop
pop
mov
dec
adc
inc
sub
mov
and
mov
fstl
ja
push
aad
jae
xchg
mov
iret
out
jg
lock
pop
inc
sub
addl
sti
pop
enter
pop
repz
sbb
iret
stc
ds
sbb
mov
std
mov
mov
and
lret
ds
mull
sbb
mov
int
xor
sti
das
testb
fwait
sbb
iret
out
jle
in
js
pop
inc
sub
or
mov
xchg
subl
fnstcw
lcall
cmc
mov
nop
mov
ss
jecxz
or
mov
ror
cmp
movsl
addb
push
hlt
and
sti
aad
mov
stos
lea
bswap
ds
cmp
sbb
fldcw
ja
jecxz
or
adc
push
repz
cmpl
inc
sbb
and
adc
loope
cld
jle
fsubl
adc
jl
fidivl
inc
pushf
outsl
sub
sbb
std
jp
push
dec
push
iret
fists
mov
mov
popf
inc
mov
mov
lock
test
scas
jge
out
sub
in
call
xor
mov
push
pusha
jns
fwait
imul
hlt
dec
rorl
jmp
jle
hlt
hlt
cmpsb
andb
lods
mov
or
test
out
cld
push
loope
mov
add
aaa
push
jle
add
add
ljmp
nop
fs
mov
stos
pop
dec
outsl
push
pop
insb
fidivl
ljmp
adc
jns
pop
loopne
js
ds
dec
mov
dec
and
adc
jecxz
lods
add
and
insl
jge
sarb
adc
inc
xchg
imul
fdivs
jge
sub
sub
push
sbb
sub
fsubp
mov
out
fwait
cmp
dec
dec
test
outsb
pop
jne
in
clc
outsl
pop
sbb
bound
or
mov
cmp
adc
pop
pusha
jp
mov
in
dec
into
lcall
dec
mov
out
xchg
pop
pusha
pop
pop
jae
stc
test
in
mov
dec
add
adc
cmp
xchg
ficoms
in
add
jecxz
mov
adc
out
sbb
pop
adc
pop
adc
mov
insl
pop
imul
jge
push
adc
push
sarb
loope
mov
xor
xchg
loopne
dec
xchg
lahf
adc
sub
lret
out
mov
push
int3
pop
adc
fildl
mov
aam
int3
pop
adc
faddl
arpl
dec
out
jle
insb
jl
add
adc
jmp
mov
dec
addl
nop
pop
jae
sub
push
adc
lods
inc
dec
dec
gs
sbb
sahf
arpl
mov
sub
rcrb
mov
add
adc
int3
or
mov
mov
fsub
es
pop
adc
mov
lret
cmp
out
fwait
push
cmpl
cltd
cmp
jnp
enter
in
cltd
ljmp
subb
cmpsl
sbb
mov
and
repnz
arpl
jnp
fiaddl
adc
stc
stos
mov
test
xchg
mov
stos
inc
test
mov
push
adc
sti
subb
sbb
sbb
jge
imull
inc
jp
or
pop
mov
jne
push
pushf
daa
dec
lahf
xlat
arpl
or
xor
inc
lods
add
sub
es
xor
cmpsl
in
push
adc
sbb
add
mov
addb
fnstsw
rolb
mov
insb
fdivs
adc
mov
adc
xorl
es
loope
push
mov
mov
jl
ds
xor
enter
and
adc
rorl
les
adc
orl
adc
and
or
adc
push
addr16
pop
cmp
pusha
shrb
cs
sbb
ja
xchg
add
insl
sbb
pop
xor
add
es
xor
xchg
push
adc
dec
pop
jnp
lcall
orb
adc
das
popl
or
les
adc
sub
push
jle
stos
imul
imulb
stc
or
inc
arpl
jmp
std
add
xchg
popf
enter
popa
push
adc
push
out
or
dec
lcall
push
int3
pop
adc
movsb
mov
test
pop
adc
mov
xor
mulb
mov
cltd
mov
sti
adc
bound
popf
or
mov
out
cmp
inc
xorb
out
dec
aad
mov
imul
cmp
daa
add
push
adc
aaa
fsubl
sti
aad
in
mov
mov
movsb
cmp
sub
dec
push
mov
push
jb
or
push
adc
fildll
xchg
ja
int
push
jge
mov
negl
sbb
in
dec
pop
mov
test
lock
dec
enter
jle
stc
pop
sbb
hlt
arpl
adc
loop
pop
jmp
std
push
sbb
pushf
pop
cmp
cmp
mov
stos
lahf
push
inc
jl
test
add
adc
call
adc
shlb
arpl
pusha
push
adc
jle
cmpb
xchg
mov
inc
push
jmp
out
lret
adc
adc
fnstsw
ret
pop
dec
hlt
dec
jno
cmpsb
add
shr
adc
outsl
cmp
pop
scas
sti
push
dec
and
cmp
fildll
loop
and
adc
cli
or
and
lret
adc
mov
movl
add
mov
pop
lods
dec
mov
call
dec
push
adc
arpl
mov
jne
dec
test
pop
sub
mov
pusha
push
adc
int3
pop
adc
test
pop
adc
test
stos
sub
popf
inc
cmp
sub
loop
push
xor
fsub
stos
push
rcl
jle
mov
mov
or
pop
adc
mov
arpl
adc
xor
push
shl
clc
xor
cmpsl
mov
pop
inc
mov
sbb
xor
cmp
dec
jp
mov
bound
adc
pop
dec
lods
xchg
test
pop
adc
lret
imul
adc
gs
pop
test
arpl
mov
inc
mov
sub
sbb
out
insb
mov
adc
fsubrl
call
hlt
enter
push
adc
test
and
jecxz
fnsetpm(287
lea
pop
cmp
aam
pusha
sbb
mov
lods
sbb
push
xchg
pop
outsl
push
adc
add
push
jne
mov
push
jl
aad
hlt
xchg
cmpsb
pop
sbb
cmpsl
inc
lcall
push
adc
mov
pop
mov
aas
loope
push
mov
ror
sub
xor
xlat
inc
ret
sub
inc
xor
jp
es
xor
fdivp
cmpsl
lods
xchg
addl
adc
jae
mov
or
adc
adc
rolb
sbb
jno
push
or
mov
scas
push
push
je
fwait
mov
mov
sub
push
dec
xor
lock
push
cmp
mov
pop
outsl
push
adc
or
fdiv
enter
scas
dec
cmp
push
adc
add
outsb
or
mov
mov
xor
loopne
sbb
insb
fdivrs
mov
repz
sbb
pusha
rcll
cmp
aas
xor
inc
test
pop
fdivs
adc
sbb
rolb
push
fmuls
or
adcl
mov
insb
fsubs
jp
jmp
add
add
lcall
add
test
test
adc
push
ja
roll
push
movsl
push
dec
xor
pop
outsl
push
adc
adc
int
es
pop
aam
mov
adc
inc
adc
push
adc
inc
mov
je
pop
adc
repnz
je
pop
adc
cwtl
pop
push
adc
arpl
xchg
dec
jno
and
mov
in
xor
mov
ljmp
addb
push
adc
mov
sub
or
int3
test
addr16
push
adc
pop
sbb
mov
adc
bound
adc
pop
adc
mov
xchg
lods
pop
outsl
push
adc
push
sub
popa
pop
push
outsl
push
adc
dec
scas
dec
mov
mov
stc
cmp
add
sbb
push
adc
mov
jno
inc
sbb
mov
sbb
sbb
inc
imul
sbb
outsl
xor
and
mov
inc
les
push
sub
pop
mov
aad
lods
mov
push
fildl
jb
outsl
push
adc
test
adc
mulb
icebp
jb
add
mov
or
stos
add
add
nop
stc
mov
sub
push
xchg
imul
aam
mov
outsb
sti
enter
fmuls
lea
xor
push
adc
popa
xor
jecxz
push
dec
mov
in
sbb
mov
mov
andb
data16
fst
out
push
jle
jno
andb
orb
xor
int3
mov
sbb
sti
jmp
outsl
push
adc
push
add
shlb
shlb
mov
adc
pop
adc
icebp
loopne
subb
mulb
xchg
daa
iret
inc
dec
mov
sarb
test
in
jmp
add
pop
and
mov
sbb
adc
scas
cmpsb
jge
mov
mov
adc
jl
mov
adc
xlat
push
pop
mov
mov
pop
outsl
push
adc
fisttpll
add
int3
pop
adc
call
insb
push
adc
mov
test
inc
mov
adc
mov
lahf
nop
add
imul
sbb
sbb
sub
xor
andl
adc
fisubrl
cmpsl
cmpsl
je
aas
push
int3
pop
adc
insb
push
adc
mov
fwait
out
mov
clc
inc
pop
outsl
push
adc
mov
movsb
mov
adc
nop
mov
adc
nop
mov
adc
test
push
adc
sahf
xchg
mov
scas
out
daa
int
ficoms
daa
cs
ret
or
push
cld
fstl
push
adc
das
sahf
push
repz
lret
mov
adc
fstl
cmp
cmp
arpl
push
mov
adc
sub
rclb
rolb
mov
xlat
mov
sti
pop
adc
xlat
add
or
shr
or
adc
push
adc
mov
pop
fs
xchg
jo
stos
cld
or
add
adc
cmc
out
fnstsw
pop
mov
adc
mov
insb
adc
adc
cltd
xor
mov
imul
test
call
mov
lods
aas
mov
ja
lahf
clc
mull
mulb
mov
fwait
ss
daa
inc
outsl
push
adc
sahf
leave
mov
pop
ret
sub
inc
outsl
push
adc
jle
iret
xlat
push
pop
push
or
xchg
iret
stos
pop
or
test
and
inc
and
ss
jle
adc
movzwl
roll
mov
push
jecxz
inc
test
or
cld
pusha
push
adc
test
in
xor
sub
lods
idivb
or
fisttpl
pop
cltd
add
dec
ss
sahf
aas
fstl
adc
mov
push
adc
cmp
leave
popf
mov
xchg
jo
in
iret
push
jge
jmp
sub
sti
mov
adc
add
adc
cli
gs
cltd
cmp
cld
mov
rclb
cmp
dec
push
movsb
std
xor
push
adc
iret
xlat
lods
mov
xor
sbb
cmp
outsl
push
adc
aam
lret
mov
fbstp
adc
or
cli
xor
or
adc
jne
prefetch
or
aas
sub
test
arpl
ljmp
xchg
or
cmp
insl
mov
or
inc
leave
cld
pusha
push
adc
sub
or
add
adc
xor
and
ss
enter
xchg
arpl
lds
adcb
sub
push
adc
dec
nop
mov
loopne
pop
jno
mov
test
ds
xlat
dec
lret
or
xor
mov
lods
push
jp
cltd
xchg
mov
fs
loope
outsl
push
adc
mov
repnz
sbb
pop
cmp
scas
push
inc
jp
sbb
inc
fucomi
cs
je
pusha
fsubr
mov
test
fldcw
sub
aas
mov
mov
xchg
jne
push
fldt
addr16
mov
inc
out
cmc
test
inc
mov
cmp
add
xchg
mov
outsl
fstpt
dec
loope
aam
lods
test
inc
cld
iret
jl
sub
ljmp
stos
or
xchg
sti
out
jno
or
ds
adc
or
cld
pusha
push
adc
adc
test
add
sub
push
or
jge
insb
inc
add
adc
mov
jecxz
movsl
scas
add
or
dec
xorb
sbb
je
jbe
xor
push
cmp
xchg
jmp
dec
bound
mov
imul
pop
mov
into
je
or
ret
pusha
push
lret
cmp
pop
scas
lods
iret
ret
push
or
bnd
mov
pushf
xchg
es
adc
inc
mov
mov
sahf
icebp
jae
add
rolb
push
ret
fcmove
mov
call
lods
hlt
sub
mov
aaa
mov
cs
nop
pop
lock
shl
dec
stc
movsl
daa
fwait
add
dec
xchg
jns
mov
dec
and
mov
je
or
push
add
xchg
sub
sbb
add
jmp
jns
jle
aas
and
pusha
pop
daa
popl
sbb
or
stos
inc
scas
mov
hlt
jb
es
lcall
stos
mov
lock
push
mov
push
cmp
ja
sti
int3
adc
jno
cmpsl
ljmp
daa
mov
aad
je
or
adc
cli
sub
xchg
mov
jb
lret
mov
stos
xor
bnd
es
fwait
nop
push
lcall
xlat
sbb
pusha
int
stos
jp
jne
adc
sub
je
or
push
aas
loopne
insb
fmuls
aas
hlt
shl
repz
or
nop
jle
outsb
pop
jle
inc
divb
or
cltd
jnp
xchg
pusha
shl
test
sbb
iret
mov
lret
adc
push
nop
xor
push
aad
pop
daa
adc
cmc
pop
je
divb
sub
rcrb
call
push
dec
cld
pusha
push
adc
enter
sahf
pusha
rolb
cld
arpl
sahf
jge,pt
mov
idiv
fldcw
das
stos
addr16
daa
adc
mov
dec
enter
std
repz
xor
and
out
fnsave
xor
shlb
push
jns
scas
divb
cli
cmpsb
xchg
push
adc
lahf
inc
test
xchg
jecxz
and
and
dec
outsl
jo
or
movsb
test
push
adc
roll
or
out
dec
lret
mov
or
push
adc
inc
mov
mov
xchg
fistpll
out
inc
inc
fidivs
or
adc
mov
or
push
adc
xor
pop
pop
sub
jecxz
push
aam
sbb
add
adc
lods
add
adc
scas
dec
stc
adc
cltd
repnz
jns
outsb
add
pop
push
repnz
and
inc
adc
xorl
aas
cmp
xor
sbb
push
mov
pop
inc
and
and
roll
scas
or
or
and
popa
push
adc
mov
cmp
pop
rep
sbb
adc
or
lahf
inc
xchg
cld
xlat
push
incb
fdivrl
add
adc
lods
test
sbb
adc
add
scas
fimuls
hlt
outsb
push
adc
cmp
mov
test
rclb
xchg
xor
dec
sub
aaa
outsl
ret
xlat
negb
outsl
insl
popa
or
fwait
xchg
pop
ss
enter
rorl
test
mov
lock
push
adc
xchg
aam
hlt
pop
pop
and
xchg
xor
sub
jge
addl
das
mov
into
xchg
in
outsb
push
adc
daa
test
mov
pop
push
and
xor
sbb
and
pop
cmpsl
fsts
or
test
test
xor
cld
pusha
push
adc
movsb
xchg
dec
jecxz,pn
int
popa
in
test
icebp
pop
add
pop
jo
push
xchg
mov
inc
mov
int
dec
jl
insb
stos
mov
in
mov
inc
loope
pop
out
scas
jmp
xlat
push
cmp
fs
mov
in
jbe
push
fcoms
or
in
cmp
pop
outsl
push
adc
cmp
outsb
int
mov
out
mov
nop
call
stos
sahf
cmc
push
pop
xchg
jp
out
cmp
push
fdivl
and
fs
and
fildl
sub
adc
rcr
mov
in
clc
jns
orl
or
sbb
pop
jae
jp
lods
shrd
push
sbbb
mov
mov
mov
call
leave
rcll
adc
or
inc
mov
mov
je
sbb
andb
jo
in
push
adc
lcall
jl
xor
lock
aas
and
adc
pop
popf
test
or
inc
push
inc
sahf
pusha
rolb
lahf
insl
pop
clc
pop
mov
inc
mov
mov
adc
mov
dec
ds
int3
pop
adc
negl
jnp
repnz
pop
adc
xchg
pop
mov
jb
fnstenv
mov
xor
stc
cld
bound
jb
or
mov
test
mov
adc
mov
clc
sti
nop
sub
lret
lahf
jge,pt
loop
arpl
adc
popl
testl
push
popa
add
xor
push
cmp
xchg
sub
lods
lock
es
fwait
mov
rolb
pusha
shrl
movsb
adc
push
mov
mov
int3
pop
adc
mov
int3
pop
adc
das
cmp
lods
pushf
mov
mov
dec
je
std
cmp
or
test
in
xor
sub
test
dec
fwait
mov
push
adc
daa
je
jp
pop
imul
orb
mov
jb
cmpsl
sahf
pusha
rol
cld
repnz
sub
or
icebp
popw
push
mov
or
pop
stos
mov
shrl
cli
xchg
in
adc
mov
push
adc
aam
cld
and
and
and
pop
sub
jb
jno
ss
jge
and
and
addb
dec
popf
xor
mov
ss
cmp
mov
cs
ss
fbstp
add
sub
subb
inc
adc
jle
jge
das
sub
or
pop
xchg
leave
or
pop
mov
scas
jge
aas
mov
adc
push
repnz
sahf
sub
xchg
mov
cli
jmp
icebp
loope
jge
or
cmpsl
jae
outsl
push
adc
pop
pop
xchg
cwtl
and
movb
add
stc
push
mov
push
adc
adc
lds
mulw
sbb
sub
cltd
cli
and
add
adcb
out
imul
mov
mov
movsl
jnp
lock
sub
sbb
sub
mov
cmp
push
inc
shlb
push
popa
jg
add
sti
cmovp
ret
andl
adc
cmp
jecxz
out
cmp
cmp
mov
push
xchg
jbe
sub
xlat
clc
fcmovb
jnp
sub
subl
fld
cltd
dec
adc
stos
lea
or
push
mov
cmp
pushf
inc
call
pop
push
mov
das
inc
std
sub
and
sbb
sahf
push
outsl
push
adc
xor
fwait
sub
cmpsl
test
test
out
rorb
cmpsl
mov
or
sti
add
or
int
call
aas
or
fimuls
jle
ret
fcoms
sbb
and
inc
fstpl
iret
mov
push
dec
add
mov
mul
mov
inc
stos
in
cmp
sub
scas
push
cmp
push
loop
pop
mov
test
daa
pop
or
cmp
adc
push
xor
pushl
hlt
ror
inc
lds
push
int3
lret
outsb
xlat
aas
or
adc
data16
cmpsl
loop
lahf
push
aaa
cli
or
mull
jg
sbb
inc
jecxz
mov
mov
popa
jb
mov
sbb
fsts
mov
adc
adc
cmp
test
mov
lods
sbb
push
mov
xor
jmp
jbe
test
sub
mov
push
cmpl
push
addb
push
imul
add
or
pop
adc
add
xor
push
jl
jp
and
add
sub
mov
xchg
pusha
push
adc
ja
sub
add
mov
dec
imul
pop
dec
fwait
ja
push
adc
sbb
adc
mov
loop
jg
mov
loope
dec
pop
divb
jne
sbb
iret
push
addb
and
cmc
cmp
push
mov
aaa
add
xchg
daa
ret
xchg
push
mov
jge
aaa
mov
ds
xlat
scas
sarl
mull
adc
loop
jl
divb
add
lahf
ja
and
imull
mov
jbe
jle
inc
jg
ss
sbb
jmp
mov
enter
and
clc
addr16
push
mov
push
arpl
fwait
aas
cmc
jns
and
xor
cmc
sub
adc
gs
scas
or
and
das
fwait
ss
push
outsl
push
adc
mov
sbb
push
popa
rolb
stc
cmpsl
add
and
push
adc
imul
sqrtps
adcl
das
pop
popa
sub
pusha
cwtl
xor
aam
add
push
cld
mov
pop
adc
insl
mov
cs
test
pop
adc
pop
adc
stos
xchg
test
sbb
pop
or
adc
gs
sbb
jge
pop
mov
xchg
xchg
ja
aam
int3
lcall
pop
in
jg
cmp
mov
aam
or
inc
adc
or
mov
or
cmp
dec
or
jbe
outsl
adc
pop
mov
fsubrl
rcr
xor
jno
push
repz
pop
inc
jle
jp
outsl
dec
outsb
ja
aaa
gs
cmp
dec
cli
mov
cltd
mov
adc
cwtl
gs
push
cmp
cld
or
add
adc
fnsave
ja
orl
sbb
je
and
jg
lret
movsb
aam
mov
inc
adc
cmc
mov
sub
repnz
and
nop
push
lods
adc
dec
andb
outsl
push
adc
push
outsl
gs
neg
pop
sub
dec
fdiv
push
pop
pusha
xor
or
pop
adc
or
cld
or
cld
pusha
push
adc
out
mov
ja
or
push
mov
jmp
vandnps
fidivs
push
cmc
dec
cwtl
shrd
jge
ds
fcomi
out
mov
movsl
sbb
arpl
inc
or
mov
sub
fcmovne
movsl
shl
sbb
lret
mov
inc
lea
push
push
pop
out
cmp
push
dec
fwait
mov
imul
fmuls
sbb
mov
adc
ficoms
ljmp
fists
adc
mov
mov
mov
adc
sbb
call
push
popa
push
and
scas
dec
or
or
pop
jl
out
popa
inc
cwtl
xchg
fs
mov
sahf
pop
or
push
cmp
inc
and
xchg
add
in
push
inc
jle
adc
call
idivl
jns
fs
adc
inc
and
hlt
mov
cmp
cs
outsl
and
mov
testb
or
push
inc
ret
sub
cwtl
mov
mov
mov
xlat
fbstp
jle
insb
pop
xor
lahf
jbe
loopne
add
jge
sbb
adc
lea
mov
scas
fnstsw
iret
jno
arpl
sbb
and
lock
adc
fcompp
mov
mov
or
cwtl
ret
scas
lret
addl
lahf
mov
jg
adc
xor
arpl
push
mov
lds
cmpsl
lea
outsl
push
adc
inc
inc
mov
daa
popl
jnp
or
fsubs
pop
outsl
push
adc
daa
jne
addb
push
imul
jnp
adc
ss
stos
lret
addl
ja
call
push
pusha
xchg
adc
mov
test
daa
je
idivw
and
xor
aaa
pop
icebp
scas
addr16
into
movsb
adc
and
push
int3
pop
adc
es
xchg
test
and
stc
clc
adc
mov
jmp
and
leave
stos
or
push
aaa
in
sbb
in
push
adc
ss
shrl
xor
imul
xchg
iret
mov
shrb
test
roll
jne
bound
popl
or
pop
dec
gs
push
rorl
repz
and
xor
ror
daa
adc
ss
data16
push
mov
fdivs
shl
out
addb
mov
sbb
addl
ss
js
pop
pop
pusha
cwtl
xor
ret
subb
movl
cmpsl
inc
idivb
push
dec
popf
dec
push
xor
test
ja,pn
sub
or
int
lahf
push
outsl
push
adc
stos
cmovnp
sub
mov
inc
fcmovnb
push
outsl
push
adc
and
hlt
or
mov
or
int
aam
addr16
xor
repnz
dec
nop
push
popa
mov
sbb
repz
aad
scas
cmp
sar
xchg
nop
fwait
xchg
mov
adc
pop
push
xor
jmp
aaa
add
sub
jb
inc
aad
fbstp
iret
shrb
adc
push
cmc
xor
fsubrp
jg
add
add
cmp
lock
stc
ret
mov
insb
jbe
popf
jle
testb
es
ret
sti
stos
or
jno
cmp
lahf
push
mov
add
jmp
dec
enter
and
test
pop
sbb
dec
sub
rclb
outsb
aam
sbb
mov
mov
cmpb
adc
das
fnstenv
insb
out
mov
js
roll
bound
push
inc
loope
pop
or
mov
xchg
xchg
xchg
pusha
adc
cli
mov
outsl
push
adc
mov
mov
ljmp
mov
inc
mov
loope
pop
ss
or
adc
shrb
clc
jl
cmp
popa
mov
filds
adc
jno
ja
scas
xor
fs
pop
cmp
insb
stos
xor
mov
dec
mov
pop
call
jnp
sbb
pop
adc
cmp
jg
push
fdivr
loopne
imul
adc
arpl
addr16
iret
mov
dec
mov
ss
mov
inc
lret
cmc
mov
scas
adc
fdivrs
sub
jl
mov
js
push
sbb
stos
pop
or
push
cli
mov
in
mov
inc
out
add
fs
outsb
ffree
lods
lock
clc
inc
sub
inc
jl
movhps
pop
xor
loop
xor
call
mov
enter
add
dec
add
mov
mov
cmp
adc
jge
push
mov
push
outsl
push
adc
push
orb
insl
or
mov
outsl
push
adc
adc
lods
jp
dec
xor
mov
dec
lahf
orw
xor
mov
lea
cmp
add
inc
test
or
dec
adc
lods
adc
lret
lahf
addr16
or
cmp
sub
insb
test
add
enter
mov
mov
jp
mov
roll
mov
push
rorl
push
aaa
sbb
insb
fdivs
mov
add
xchg
ja
bound
sub
mov
pop
jecxz
stos
or
add
in
sbb
xchg
push
int3
pop
adc
sti
je
fcoml
adc
bound
pop
adc
sub
sahf
push
int3
pop
adc
xor
mov
enter
adc
leave
stos
or
fdivs
out
push
int3
pop
adc
filds
int3
pop
adc
jnp
in
push
dec
pop
mov
lret
loope
out
cmp
xor
mov
mov
movsl
xchg
pop
or
daa
sub
stos
pusha
roll
clc
adc
inc
mov
push
inc
insb
fadd
adc
addb
xor
cmpl
rcl
or
jnp
mov
xchg
into
push
out
addb
in
arpl
and
mov
loop
das
frstor
dec
lds
loopne
pop
adc
in
pop
adc
or
ja
push
adc
push
por
in
or
adc
test
enter
out
in
enter
jg
lods
dec
pushf
mov
shr
enter
push
in
enter
jg
pop
jns
sbb
xchg
lock
and
into
shrb
call
sbb
cmp
xchg
aaa
mov
adc
lea
push
int3
pop
adc
adc
pop
adc
test
lods
subb
ja
pop
jno
mov
cltd
push
int3
pop
adc
push
jae
cmp
adc
jp
cli
sub
cmp
ja
es
or
jmp
insl
or
adc
adc
pop
arpl
sbb
add
xor
push
cmp
push
cs
pop
sbb
sub
insl
lret
mov
dec
mov
adc
iret
je
or
jo
push
imulb
pop
pop
or
lods
jo
or
cmp
adc
cmp
into
pusha
mov
or
cld
pusha
push
adc
sti
es
sub
or
add
adc
outsl
push
dec
mov
or
xchg
sahf
mov
or
cld
pusha
push
adc
or
jns,pt
popa
push
adc
les
jb
imul
adc
and
jns
in
lods
or
add
adc
outsb
sahf
dec
rcll
adc
dec
push
stos
mov
mov
adc
mov
and
aam
or
cld
pusha
push
adc
in
or
adc
cmp
dec
cvtps2pi
sahf
dec
mov
int3
pop
adc
sar
jmp
adc
leave
mov
xor
andb
and
sahf
mov
sarb
aaa
mulb
xchg
adc
lods
nop
xchg
and
cli
shrl
cmc
and
push
mull
xchg
xor
lock
into
push
jmp
ljmp
push
adc
mov
std
aas
out
dec
orl
out
clc
rclb
imul
push
sti
mov
jmp
lea
ret
scas
cld
sbb
sti
mov
inc
inc
xchg
mov
cmp
jbe
fidivs
sub
sub
push
push
stos
add
adc
fiadds
adc
adc
arpl
xchg
ja
pop
xor
or
add
out
pusha
push
adc
add
adc
sub
imul
cmp
test
sub
pusha
push
adc
idivb
xor
test
rcr
stos
or
mov
and
jo
mov
pusha
push
adc
adc
jae
imul
testb
dec
fwait
stc
das
ret
scas
add
mov
clc
mov
jne
xlat
push
adc
mov
leave
insb
xor
arpl
adc
decb
mov
push
imul
jns
mov
adc
lahf
aas
jne
jnp
xor
push
aas
mov
fwait
xchg
ret
xor
negb
divb
std
jle
fwait
dec
roll
shr
adc
es
jno
pusha
push
adc
shr
adc
sub
enter
adc
xor
cmpsl
inc
pusha
push
adc
pop
aas
jle
stos
cltd
in
push
pop
addb
shll
clc
fildl
push
mov
fabs
push
enter
pusha
rolb
int3
push
jl
jp
and
add
pushf
in
push
pushl
pusha
mov
or
xchg
pop
popa
rcrb
sti
out
fdivrl
mov
inc
repz
xchg
add
or
aam
lcall
pop
sahf
jbe
mov
cli
and
push
adc
pop
dec
pushf
mov
mov
jbe
rcrl
iret
out
and
les
popa
push
adc
stos
mov
cmp
loopne
popa
push
adc
xor
mov
dec
add
cld
or
mov
mov
mov
test
popa
mov
insl
xchg
cmp
mov
adc
mov
jp
cwtl
xchg
aas
mov
aaa
rcrl
push
adc
jno
rcrl
pusha
insl
xchg
dec
inc
mov
std
rcrl
mov
mov
dec
sbb
test
and
addr16
jns
mov
hlt
push
and
data16
hlt
pop
xchg
jae
mov
rol
jne
add
pop
mov
lret
punpckhwd
xchg
movsl
addb
cs
sbb
cmp
adc
test
movaps
mov
cltd
and
lods
fcoms
inc
das
sbb
int3
add
pushf
push
inc
clc
sahf
or
pop
push
jge
mov
enter
mov
pop
adc
int
insl
pop
sbb
test
scas
movsb
inc
or
xor
or
cmp
sub
jb
push
ljmp
inc
imul
mov
sbb
sbb
aaa
jge
cmp
movsl
pop
xchg
int3
test
sub
pop
xchg
lea
and
imul
jge
or
das
adcb
mov
mov
adc
rorl
mov
in
ss
int
mov
fucomp
pop
and
xchg
shlb
push
and
scas
mov
mov
icebp
sbb
iret
add
push
push
shlb
arpl
lahf
ret
sbb
lds
scas
lahf
sub
cmp
jb
mov
repnz
pushf
aaa
stc
test
cmp
stos
sahf
cmc
test
sbb
jle
movl
lret
je
shll
sbb
and
push
push
popf
out
lcall
ljmp
xor
rcl
or
in
pop
pop
push
push
iret
scas
or
adc
pop
pop
cmp
cmp
cmp
outsl
adc
insl
inc
repz
sti
jnp
push
popl
inc
mov
in
rclb
test
mov
notl
dec
nop
imul
daa
cmpsl
add
scas
fstpl
stc
aad
pop
imul
aas
lret
sbb
sub
push
mov
mov
test
push
adc
pusha
outsl
jp
cmp
out
adc
idivb
jge
pop
fimull
mov
push
cmc
pop
jmp
ss
mov
cmp
jl
pop
lcall
je
sti
push
mov
leave
xchg
daa
movsb
xchg
mov
lock
lahf
cmp
nop
mov
out
or
adc
fstl
shll
divl
or
stc
mov
adc
lretw
mov
insl
dec
mov
repnz
lds
pop
clc
jp
out
cmp
fidivs
cmp
mov
and
xchg
mov
pop
push
outsl
jb
fdiv
insb
xchg
out
out
incb
xchg
mov
testb
inc
leave
shlb
jb
ja
xchg
dec
out
jge
hlt
insl
in
add
push
inc
push
push
js
add
cmp
fsts
rorl
jo
sbb
insb
xor
or
jge
rorb
popa
pop
test
push
adc
sub
shll
imul
add
ljmp
ss
cmp
sub
int
dec
jae
dec
imul
test
cmp
mov
or
das
cltd
mov
or
pushf
sbb
iret
ret
or
je
or
movl
pop
xor
or
sahf
mov
mov
into
pusha
or
std
sti
mov
mov
cmp
test
or
mul
xchg
jecxz
mov
push
in
mov
out
cmp
jmp
mov
mov
mov
adc
je
cs
push
mov
les
lock
out
insb
rorl
mov
mov
pusha
sbb
test
out
or
add
push
adc
xchg
pop
jne
rcrb
scas
andl
ds
fisttps
leave
std
bound
mov
lahf
xchg
sub
dec
popa
movl
andb
shl
cmpsb
sub
jo
jmp
add
into
insl
push
mov
push
mov
int
xchg
por
add
dec
lahf
sbb
test
inc
into
fdivrs
add
out
sbb
sbbl
pop
ret
jp
mov
fildl
adc
pop
adc
mov
loopne
sub
repnz
mov
mov
cwtl
not
cmp
jae
pusha
out
or
push
sbb
es
pop
push
push
and
std
sub
inc
and
cmp
jecxz
outsl
imul
xchg
popa
jnp
pop
push
dec
push
mov
mov
cs
mov
ret
cmpl
push
call
aam
repnz
jmp
add
inc
or
out
jl
mov
test
mov
daa
jge
pusha
sub
inc
pop
subl
jle
fwait
mov
shrl
push
sbb
mov
jecxz
mov
mov
push
lds
das
cli
call
popa
rorl
loop
inc
dec
pop
cld
out
or
lods
je
pusha
scas
aam
les
sbb
nop
mov
add
mov
sub
add
mov
setp
xchg
add
adc
mov
sub
push
adc
cmc
adc
xor
pop
adc
push
mov
jnp
stc
hlt
cs
or
add
icebp
ret
das
xchg
cltd
ljmp
movsb
push
or
lcall
mov
xchg
xchg
ja
cmp
movsb
sbb
jb
or
icebp
fsubl
adc
sbb
scas
jl
mov
adc
xlat
stc
aad
lock
xchg
dec
xor
lahf
aas
jle
cmp
push
adc
out
xlat
and
inc
and
adc
fwait
lods
mov
imul
xchg
xchg
push
adc
repnz
xchg
leave
lods
mov
loope
push
xor
sub
std
or
sub
push
jmp
data16
mov
inc
imul
push
stos
jecxz
out
push
jge
mov
insl
dec
mov
xor
xor
mov
jno
movzbl
aaa
xchg
rcl
inc
addl
pop
hlt
fnsave
xchg
mov
sti
bound
ljmp
xor
iret
sub
mov
int
and
pop
dec
js
icebp
mov
inc
jo
mov
js
jmp
and
cltd
jae
sbb
fistpl
jb
jb
fs
std
gs
mov
push
adc
fcomps
xchg
mov
mov
adc
clc
cmp
adc
cmpsl
popf
ss
shr
push
mov
inc
jecxz
lods
mov
hlt
js
jg
sahf
aas
jl
cmc
data16
das
mov
loop
xchg
out
fistpll
xchg
bnd
loopne
int
or
jge
push
je
aad
or
sbb
dec
pop
sub
push
jge
dec
fstpt
in
jns
cwtl
fstpt
dec
mov
cli
bound
mov
ljmp
mov
aaa
cmp
push
imul
into
cli
cmp
out
jge
insb
repnz
mov
push
mov
notb
scas
adc
addb
ljmp
add
test
movsl
popf
cmp
aad
mov
pushf
jp
xor
jp
fists
jle
jg
sub
adc
mov
or
lea
and
mov
push
add
fisubrl
push
ds
out
adc
std
push
sub
les
inc
ljmp
dec
out
or
fwait
repz
jmp
fisttps
movsb
rclb
sbb
daa
stos
fisubrl
push
es
cmpsb
fistps
into
jle
flds
scas
jnp
bound
std
xchg
jns
dec
add
jns
aaa
test
andb
lret
dec
data16
stos
pushf
add
fwait
mov
lods
pop
flds
loopne
dec
stc
int3
movsl
fcmovu
push
pop
mul
inc
push
ss
push
cltd
fwait
pop
xor
xchg
shlb
mov
cs
and
adc
xor
test
and
sub
in
stc
adc
pusha
cld
sbbl
xor
mov
mov
or
push
sbbl
in
xchg
push
sbb
cmp
fld
jae
jnp
std
cmp
test
or
fcoms
bound
push
adc
lret
ljmp
sbb
test
lret
dec
pop
popa
mov
adc
pushf
scas
add
cmc
popa
or
jno
cmpb
iret
fwait
mov
xchg
jne
inc
les
scas
pop
xchg
insb
or
jnp
push
mov
imul
pop
sbb
dec
push
out
adc
aaa
dec
mov
cmp
mov
hlt
xchg
lcall
ja
aas
fsubl
xchg
xor
hlt
mov
lods
addb
pop
cmp
inc
dec
xchg
cld
cmc
sub
std
loopne
scas
pusha
pushf
sti
jbe
pop
inc
out
inc
mov
or
js
lret
movsb
outsl
jns
sub
sti
jno
fldenv
mov
cmp
nop
scas
push
xchg
mov
jne
mull
or
push
pop
mov
mov
dec
lahf
dec
insb
lods
adc
xchg
out
jl
out
jge
fisubl
pop
ss
aam
sub
push
mov
scas
js
inc
cltd
or
ret
addr16
mov
push
mov
fsubs
mov
push
xchg
daa
dec
ljmp
xor
aad
jo
aad
iret
js
shll
mov
mov
mov
aas
jle
mov
outsb
leave
sar
jo
fisttpl
pop
mov
repnz
and
stc
repz
fmulp
flds
or
test
pusha
fsts
push
repnz
icebp
add
adc
arpl
lahf
ds
jle
cmpl
cmp
mov
leave
dec
adc
insb
push
inc
ja
sbb
push
jo
fists
sub
mov
fbld
test
ds
xchg
daa
fldcw
cmc
mov
pop
dec
jg
das
imul
pop
pusha
lcall
adc
sbb
adcl
jns
pop
sti
jg
lret
or
cmc
sub
fdivrl
jb
lods
mov
dec
sbb
ret
and
shrl
insl
xor
and
sub
lods
or
repz
dec
push
inc
popa
jb
mov
mov
inc
fistpll
jbe
mov
mov
or
sbb
mov
jmp
cmp
jno
je
dec
fmulp
and
pop
dec
faddl
lock
lods
inc
addl
jl
cli
or
or
jg
lods
bound
pop
jnp
pop
mov
aas
mov
aaa
mov
popa
or
inc
lds
sub
imull
push
mov
push
or
imul
scas
test
add
fldcw
shl
push
adc
ja
or
and
push
adc
mov
pop
push
mov
ss
pop
fs
adc
dec
popa
movl
push
jo
test
gs
cli
inc
cmp
xchg
inc
inc
push
mov
adc
cmp
fs
adc
les
sahf
cwtl
jmp
sub
or
and
sbb
sbb
mov
adc
mov
daa
shlb
cmc
lret
pop
enter
adc
cmp
cmp
push
cmp
fs
adc
orb
hlt
jne
fs
adc
mov
fldl
jp
xchg
ss
addl
orl
je
ds
repnz
addl
mov
inc
rcrb
push
adc
cmp
cli
lods
movsl
fdivs
adc
push
sbb
mov
sub
in
addr16
pop
sub
jecxz
bound
movsb
adc
cmp
repz
imul
or
xor
sbb
stc
adc
xor
popa
movb
add
xchg
out
push
xchg
dec
mov
pop
mov
addb
inc
out
push
fldenv
push
cmpsb
add
dec
xlat
mov
out
jecxz
xchg
je
push
add
incb
xchg
and
lcall
mov
popa
les
mov
test
push
dec
push
sti
mov
ret
push
lock
jmp
icebp
lods
jecxz
fsubrs
gs
jne
shrl
inc
sbb
outsl
push
clc
pusha
inc
sub
out
rcl
cmp
addr16
arpl
xor
push
shl
loopne
aas
mov
orl
pop
test
mov
stc
and
mov
add
shlb
lret
push
inc
push
in
or
adc
scas
pop
mov
cmp
xlat
mov
addl
sub
pushf
in
push
cld
pop
and
jle
clc
jle
out
ja
sbb
test
shlb
stos
mov
sbb
xor
jo
pusha
clc
js
stc
repz
loope
sub
out
push
xlat
sti
imul
pop
mov
mov
aam
mov
inc
leave
and
test
addr16
test
mov
lods
fdivs
cmp
adc
arpl
push
mov
sahf
ficomps
ja
adc
push
shlb
mov
sub
mov
xor
rolb
rcll
xchg
mov
out
push
pop
sub
loop
xchg
push
lahf
mov
cmc
fsub
iret
into
push
sub
and
popf
xchg
dec
adc
dec
push
leave
stc
les
inc
cltd
pop
or
sbb
out
fdivrl
aam
sub
sbb
ja
sub
inc
fsubrl
inc
mov
mov
mov
jo
or
popa
inc
out
aas
hlt
mov
adc
mov
loopne
imul
mov
in
cmp
dec
jg
cmp
in
xchg
xor
mov
imul
cmp
pusha
inc
pop
movsb
ljmp
cltd
repz
push
pop
mov
xchg
jns
mov
xchg
dec
in
gs
jb
and
lods
sub
and
pop
mov
mov
into
inc
xor
adc
mov
fsubrl
adc
repz
mov
pop
movsl
shlb
dec
cwtl
pop
popf
or
les
pushl
or
adc
rclb
fistpll
in
lds
je
jbe
lods
ret
adc
or
ljmp
inc
mov
inc
stos
in
dec
mov
add
mov
push
mov
lock
mov
or
mov
movsb
sub
inc
inc
and
hlt
push
jbe
clc
jns
ror
sub
sub
popf
dec
mov
adc
sti
mov
aad
cmp
adc
push
shll
inc
sbb
out
sub
dec
add
popl
mov
inc
out
push
sbb
cmp
int3
in
push
sarb
push
mov
add
lods
push
ret
ret
out
add
sub
test
add
mov
cmpsb
dec
sbb
mov
es
xchg
lcall
mov
outsl
fwait
pop
andl
jo
dec
cmpsb
loope
inc
mov
aad
imul
jbe
dec
mov
cmp
es
in
fwait
sbb
pop
add
pop
mov
nop
mov
mov
iret
or
stos
cmp
nop
xchg
loop
mov
mov
xor
mov
jle
lock
xor
inc
rcrb
push
enter
ja
push
movsl
inc
in
xchg
cmpsb
cld
pop
push
fdivr
insb
xchg
inc
mov
in
str
fidivl
sub
inc
arpl
lret
loopne
xor
mov
movl
dec
and
mov
das
lahf
popf
pop
rclb
loop
aas
mov
mov
aas
and
repnz
outsb
mov
adc
xchg
cmp
lcall
repz
dec
test
test
push
test
xchg
cmp
push
mov
imull
addl
daa
mov
out
fdivs
xor
cmp
sar
jg
cltd
int
pushf
sahf
xchg
mov
add
adcb
out
fnstsw
and
pop
pop
jmp
sub
xor
cmp
adcb
pop
jae
rcrb
sbb
xorl
test
xor
mov
xor
jecxz
adc
arpl
leave
aas
and
loope
les
jo
fucomip
cmp
sti
jl
sarl
pop
clc
outsl
cmc
aas
mov
mov
and
sti
jb
test
out
fwait
mov
subl
mov
loope
jo
fdivs
jb
jmp
fisubrl
push
aam
mov
pop
jmp
in
mov
add
fstpl
cmp
out
int3
push
cmp
fdivrp
popa
mov
jg
outsl
sbb
aaa
cmp
adc
push
fwait
rorl
hlt
sub
iret
gs
jnp
sub
loope
pop
jnp
cs
shl
mov
jge,pn
jl
mov
sbb
xchg
sahf
sarb
and
sbb
movsb
jp
jns
es
js
jge
shlb
xor
std
jmp
xchg
jecxz
fstpt
and
adc
mov
js
mov
repz
mov
jmp
aam
fstpt
cmc
out
push
divl
aad
es
insb
divb
jbe
sbb
add
aam
fsubr
shrl
adc
out
inc
jmp
cmp
je
inc
imul
repz
cmp
lcall
pop
sub
xchg
mov
in
andb
cmpsl
loop
add
int3
loope
aam
mov
negb
and
sub
push
sbb
add
data16
dec
dec
loopne
hlt
inc
stc
popa
inc
jg
pop
movsl
shlb
cmp
pop
lret
sbb
hlt
cmpsl
les
jle
mov
and
out
mov
loop
popf
out
cmp
push
sti
add
repz
sub
hlt
dec
push
cltd
xchg
mov
outsb
jmp
dec
repz
loopne
ja
push
aad
lods
insl
das
lds
stos
push
mov
mov
loope
or
jno
cmp
repnz
icebp
push
pop
inc
jl
fdiv
jge
lahf
pop
pop
loop
sub
mov
ret
sub
adc
pop
aaa
cmc
pop
add
sub
dec
mov
pavgw
int3
mov
rcrb
out
mov
mov
cmp
aaa
lods
lods
mov
sarl
sti
mov
add
push
cs
inc
adc
in
push
mov
mov
daa
inc
mov
sbb
ljmp
pop
mov
mov
sub
mov
sbbl
in
ds
ss
jae
sub
mov
inc
rcr
nop
mov
fs
push
push
or
jg
push
cmc
push
xchg
adc
mov
xor
std
add
jmp
jle
mov
push
gs
scas
xchg
out
lods
stos
dec
add
or
inc
lds
pop
mov
xor
xor
jl
mov
rorb
popa
ror
inc
adc
int
mov
jmp
loopne
adc
jmp
repz
mov
cwtl
leave
movl
xchg
cmp
adc
lret
fldt
adc
xor
out
lret
loopne
pushf
test
insl
mov
mov
push
mul
pop
scas
xor
cmpsl
xchg
aad
test
scas
sub
dec
lods
es
outsl
inc
clc
movsl
inc
sarb
insb
mov
insb
enter
cmp
mov
aam
pop
clc
imul
mov
mov
stos
and
sti
jb
xchg
idivl
cmp
inc
mov
push
repnz
pop
jbe
ss
les
arpl
les
cmpsb
xor
and
adc
mov
xor
das
les
jle
lret
iret
mov
jle
sub
push
aad
jae
mov
lods
or
mov
inc
fldcw
idivb
lods
lret
sbb
hlt
inc
inc
aam
fstps
repz
mov
insb
mov
adc
xor
jmp
cli
xor
xchg
in
xchg
loope
arpl
idivl
pusha
shl
add
pop
mov
and
test
xor
std
repz
enter
jl
mov
add
aas
sub
jne
and
ja
shll
xchg
inc
lea
inc
fadds
sub
decl
inc
test
loop
xchg
loope
arpl
sbb
divb
lods
mov
mov
push
hlt
sbb
adc
dec
lahf
aas
idivl
repnz
adc
out
push
cmp
add
mov
gs
pop
cmp
mov
cmp
jae
push
ret
int3
fsubs
sbb
dec
cwtl
dec
push
jge
call
push
in
addr16
jge
jno
mov
sarl
sub
mov
mov
mov
cmc
scas
mov
jl
mov
ret
mov
rcl
lods
dec
hlt
lahf
sbb
cmp
or
pop
adc
out
and
xchg
dec
scas
insb
repnz
mov
data16
jle
jns
add
fisttpll
into
test
add
adc
addb
cmp
adc
xor
std
jbe
jmp
imul
or
mov
outsl
lahf
mov
lret
fwait
sbb
popa
mov
push
rcll
in
ja
lods
jmp
xchg
std
sti
jo
cmp
fldt
lcall
addl
mov
gs
decl
sub
iret
jne
mov
pop
add
fbstp
loop
in
fidivl
mov
inc
mov
cld
std
outsb
stos
add
and
adc
and
push
cmpsl
pmullw
aas
sub
cltd
pop
mov
pop
add
push
popf
mov
aam
ja
xor
sarb
adc
and
pop
ss
outsb
dec
jle
les
mov
fnsave
mov
xchg
sahf
outsb
lcall
mov
cmp
movsb
test
adc
test
mov
xchg
adc
jg
xchg
adc
idivl
push
adc
dec
inc
jge
scas
push
cmp
mov
ss
int
sub
dec
pop
insl
push
jmp
insb
cld
mov
or
test
pop
adc
in
add
push
adc
imul
sub
push
xchg
insl
fdivrs
lea
in
scas
in
mov
stos
sub
subl
mov
sahf
dec
vorps
or
notb
out
ret
lds
sub
jl
or
dec
fistpll
fs
mov
lcall
lret
sbb
push
add
mov
das
jg
sbb
push
int
adc
inc
xchg
jne
ret
mov
fists
push
sbb
inc
mov
mov
pop
mov
sub
mov
cmp
in
jb
and
sub
in
xchg
test
out
pop
mov
pop
sbb
xor
fwait
ja
push
add
gs
leave
repnz
push
cmc
sbb
aad
les
mov
popa
dec
lahf
jge,pt
jo
fnstsw
pop
mov
in
cmpsb
int
lahf
push
and
adc
shlb
sarb
mov
in
push
jecxz
mov
adcl
adc
ljmp
push
adc
mov
ss
fadd
sub
add
sbb
xor
aad
xor
xchg
sub
leave
daa
jne
movsb
mov
adc
adc
pop
adc
aaa
clc
lahf
sub
in
test
es
fwait
cltd
insb
xor
adc
jle
ret
jecxz
orb
and
out
sub
and
or
dec
fwait
ss
sbb
push
mov
pusha
mov
add
adc
cld
ss
push
adc
and
mov
add
jne
sbb
pusha
dec
pop
js
shlb
mov
adc
lods
dec
fwait
ss
imull
iret
lahf
mov
jmp
pop
scas
push
mov
dec
arpl
adc
out
shlb
add
pop
inc
sahf
xor
push
cld
or
inc
mov
test
loopne
test
pop
adc
cmp
xor
pop
or
adc
adc
dec
pop
or
ret
orb
cmp
js
pop
and
and
shll
or
adc
movb
xchg
adc
cmp
cmpsl
stos
lods
add
add
xchg
cmc
cs
pop
add
mov
ret
dec
popf
adc
pop
fildll
mov
pusha
mov
fcoms
hlt
mov
xchg
and
fdivs
andb
cmp
or
pushf
adc
cmp
mov
dec
jb
inc
dec
repz
ret
scas
sbb
inc
adc
cmpsl
inc
ljmp
jnp
ljmp
jno
inc
sti
mov
mov
mov
push
mov
insl
jecxz
bound
aam
stos
lret
divb
fmuls
adc
lahf
stos
inc
push
lahf
test
jle
fwait
push
stos
into
mov
push
adc
cmc
pushf
push
cltd
fbld
psubsw
hlt
push
jp
addl
cmpsb
adc
test
mov
mov
push
mov
push
xor
in
hlt
xor
pusha
mov
jecxz
bound
adc
aam
mov
adc
shlb
mov
sub
ds
repnz
mov
lods
mov
inc
rclb
sbb
movsl
mov
ret
fsubrs
sub
xchg
fwait
lds
notl
loope
popa
mov
sbb
in
test
andb
movsb
mov
pop
add
sub
xchg
cltd
xchg
dec
loope
insb
xchg
popf
ds
je
mov
negb
stc
pop
push
dec
scas
mov
mov
negl
sub
into
sub
rolb
cmp
jb
or
mov
push
jns
adc
push
call
jmp
in
add
mov
cmpsb
adc
int3
jg
push
sbb
bnd
and
mov
mov
idivb
dec
pop
push
arpl
aaa
adc
leave
push
inc
push
mov
call
jecxz
cmp
pop
mov
push
out
cmp
pusha
dec
push
shlb
enter
dec
sub
enter
cltd
lcall
sub
xor
mov
dec
xor
cld
divb
out
push
mov
mov
rcrl
jb
rclb
hlt
mov
jge
jle
sbb
and
test
aaa
xor
and
imul
mov
fdivs
scas
mov
lock
push
scas
rorb
inc
test
xlat
fcoml
mov
adc
sbb
adc
pop
adc
mov
pop
adc
adc
push
mov
mov
fwait
add
into
lods
jb
jnp
arpl
mov
push
jmp
test
adc
xor
inc
inc
mov
aam
ja
sbbl
pusha
imul
push
das
inc
test
fisttpl
movsb
sbb
push
mov
in
cmp
mov
mov
imul
pop
xchg
xor
jl
jp
pop
ljmp
xchg
nop
mov
xchg
stos
add
sti
mov
or
or
ret
js
and
adc
stc
imul
pop
lahf
mov
inc
jbe,pt
xor
xchg
clc
imul
scas
mov
pop
popf
jnp
popa
push
fwait
ss
jbe
sub
add
mov
push
adc
push
idivl
ret
lds
jl
fdivs
pop
or
icebp
mov
mov
push
mov
daa
dec
mov
mov
add
out
xor
push
nop
addl
cmp
mov
xchg
sub
sbb
mov
adc
cmp
adc
pop
enter
inc
pop
mov
je
pop
adc
adc
mov
cs
push
mov
add
mov
or
pop
adc
sbb
cltd
or
xor
mov
fstps
add
dec
inc
icebp
dec
arpl
adc
adc
out
adc
inc
imul
frstor
and
jge
int3
pop
adc
stos
sub
add
dec
inc
stc
jns
lcall
loopne
pop
out
mov
pop
into
ret
mov
dec
fsubrp
addb
ljmp
add
adc
and
xor
gs
cs
mov
dec
sub
testb
push
mov
mov
push
out
jbe
mov
pusha
add
pop
in
sub
int3
nop
cmp
adc
push
repz
xchg
push
das
outsb
mov
les
cmpsl
lods
jae
call
ja
popa
loop
je
out
idivl
shll
pusha
cmp
mov
mov
push
xchg
into
or
das
mov
or
sbb
test
mov
mov
dec
push
test
xchg
icebp
data16
pop
arpl
add
inc
hlt
cli
je
push
adc
dec
fcomps
lahf
subl
test
inc
outsl
push
xor
mov
dec
pop
outsb
lods
xchg
fbstp
or
jge
les
arpl
lea
lods
inc
mov
cmp
jbe
ret
sbb
dec
ljmp
call
add
push
pop
mov
xchg
push
jae
pop
imul
and
push
pusha
or
xlat
cmp
jecxz
sbb
push
xor
fwait
mov
jns
inc
mov
sub
sbb
leave
mov
imul
call
hlt
enter
push
pop
mov
vmread
int
push
and
fs
int3
fdivrs
add
inc
enter
lds
adc
div
mov
lea
cmp
mov
add
arpl
cmpsb
sarl
jg
mov
loopne
daa
xor
insb
mov
fstl
mov
cltd
stos
xlat
repz
mov
push
int3
data16
test
inc
push
stos
or
lea
xor
fnstenv
dec
push
jns
jne
call
shlb
notl
and
adc
jb
mov
loope
sahf
sbb
negl
adc
fwait
ds
sahf
or
push
dec
sub
mov
jae
pop
negl
ljmp
xor
orb
pop
and
ss
sbb
dec
lahf
aas
jle
xor
repz
pusha
dec
xchg
adc
fnstcw
pop
push
xchg
in
call
and
adc
imul
int3
push
mov
jne
xlat
inc
fdivrs
dec
fs
arpl
ljmp
or
ret
loope
test
and
push
out
lods
mov
xor
rolb
pop
pusha
sbb
out
fnstsw
dec
mov
aaa
js
xchg
jle
lahf
push
jle
sub
iret
push
push
ss
and
test
rorl
mov
mov
out
and
hlt
add
inc
imull
xchg
sub
jo
pusha
and
adc
imul
iret
imul
or
or
les
dec
int3
hlt
ret
cmpb
inc
fsub
sub
pop
xor
pop
adc
roll
xor
rclb
adc
in
ret
sbb
jl
repnz
sub
inc
inc
xchg
cmp
dec
sbb
stc
mov
rorl
mov
gs
sub
mov
mov
fbstp
xchg
mov
sbbb
pop
mov
lcall
in
inc
dec
sub
ret
adc
lods
xchg
aad
or
sbb
mov
or
xchg
ja
jle
out
jnp
sbb
push
js
mov
and
sbb
sti
mov
push
adc
pop
jns
addr16
pop
sbb
sub
mov
lds
cmp
xchg
mov
and
cmp
or
and
and
push
dec
inc
loope
repnz
xchg
data16
stc
sbb
pop
jb
inc
or
xor
sbb
mov
adc
mov
lea
cli
dec
es
push
xchg
aam
xor
fcmovb
subb
mov
std
xor
or
pop
mov
test
sbb
leave
daa
into
pop
pop
push
dec
js
pop
or
jb
orb
cmc
sbb
insb
andb
mov
loope
and
adc
and
test
in
ja
mov
mov
cs
and
out
add
movsb
adc
adc
pop
adc
cwtl
jns
loop
adc
rolb
aas
fdivrs
in
pop
xor
lods
sub
dec
mov
jno
and
shl
mov
test
outsb
iret
arpl
enter
and
jge
ret
fidivl
pop
insl
inc
jne
imul
aam
test
xor
add
lcall
movsl
xchg
or
sbb
push
aas
outsl
jbe
stc
push
cwtl
pop
jmp
pop
psubq
cmpb
negl
xchg
lods
cmp
sub
and
add
jp
jne
insl
mov
aam
in
jns
mov
sbb
or
mov
cli
stc
shll
pop
mov
sub
stos
aas
ret
push
fdiv
inc
dec
adc
ffree
rcll
cmp
mov
mov
jmp
in
fnstenv
fistpll
mov
iret
lahf
mov
decl
sahf
fnstenv
mov
inc
divb
jo
daa
dec
lahf
aas
jno
mov
jns
jo
ljmp
pop
mov
mov
adc
mov
cld
stc
repz
pop
jge,pn
jb
push
adc
ds
mov
dec
call
divl
mov
mov
sub
fadds
xor
fimuls
add
mov
push
cmpsl
sub
adc
push
ljmp
push
mov
mov
jl
fsubp
mov
sbb
push
stc
jge
scas
sbbb
jge
xor
mov
jbe
jae
loop
mov
incl
pusha
lcall
ffree
popa
inc
jmp
movsb
xchg
push
pusha
mov
jp
and
mov
repz
flds
and
fs
fstps
and
dec
aam
ja
js
dec
out
jge
add
xor
sbb
test
cltd
mov
push
dec
adc
xchg
out
jae
out
inc
dec
aam
jno
fs
mov
xchg
sti
scas
sub
cmpsb
in
jmp
inc
pop
ss
mov
insb
fs
rcr
push
in
mov
jl
push
cli
outsl
inc
fsubrs
xlat
xor
mov
adc
les
lods
aad
push
xor
hlt
rol
shll
lret
js
jno
sti
bound
jno
std
ds
push
call
loope
cmp
lahf
sub
pusha
xchg
rcl
mov
dec
movsl
push
or
outsl
in
stos
or
dec
jle
xchg
mov
jae
mov
adc
icebp
imul
loope
xchg
mov
jno
sbb
aad
dec
mov
jns
aaa
pushf
in
xor
aad
popf
enter
rorb
inc
or
pop
xchg
mov
fistpll
jnp
in
pop
mov
mov
pop
and
out
sti
mov
lahf
xor
jns
adc
sub
enter
lret
popa
adc
inc
pop
jmp
inc
mov
jl
in
out
dec
fstpt
es
mov
inc
push
sbb
push
fists
je
xor
aaa
outsl
jno
sub
lahf
repnz
xchg
aad
shlb
sbb
adc
test
jnp
lds
mov
mov
test
cmp
mov
cs
iret
and
jae
adc
pop
pop
jbe
mov
cmp
fdivl
repz
leave
fdivr
jae
xor
les
mov
rorl
and
rcl
and
and
ss
ljmp
mov
pop
inc
xchg
jge
fisttpll
pushf
adc
pop
daa
mov
lret
add
fidivs
or
mov
enter
sbb
fs
popf
mov
mov
pop
fimull
sbb
fwait
xor
mov
fstpl
dec
mov
sbb
xchg
push
inc
sub
lea
fnstsw
push
push
and
test
outsl
jle
jbe
sbb
lret
jge
lret
push
fcomps
cltd
push
inc
dec
scas
int3
sub
jmp
outsb
adc
negl
test
cmp
ret
pop
sahf
pusha
sub
adc
cmp
out
xor
sahf
xchg
addr16
mov
add
mov
outsl
sahf
add
hlt
in
movsl
inc
sub
iret
or
call
dec
lcall
xor
ret
push
adc
cwtl
js
jo
lahf
mov
push
out
incb
xchg
or
push
cmc
pusha
inc
jecxz
les
jg
mov
js
stos
or
loop
mov
cmpb
xor
and
test
sti
addr16
jge,pt
negl
and
sub
addr16
mov
shl
cmp
clc
jle
ret
iret
mov
adc
and
jecxz
ljmp
mov
out
push
ja
mov
xor
jno
mov
lea
add
push
fidivrl
scas
cwtl
rorb
cmp
mov
lcall
jns
test
xchg
jecxz
cli
aad
sub
inc
bound
jns
inc
iret
lahf
jge,pt
jl
sbb
mov
mov
mov
pop
fcmovne
loop
jle
std
js
and
mov
repz
jl
jne
xlat
fstpt
push
jge
test
jp
roll
adc
arpl
push
mov
cwtl
mov
sbb
rorb
je
jmp
adc
xchg
dec
push
adc
xor
xchg
cmpsl
cwtl
std
jg
pop
fidivrs
and
push
addr16
lahf
pusha
and
test
sub
jo
rclb
mov
dec
out
into
sbb
adc
lock
int3
pop
or
jno
in
jp
test
push
mov
mov
out
xorb
dec
pop
test
or
fstpl
mov
inc
mov
test
xor
in
adc
movsl
jle
iret
iret
int
imul
cmp
sbb
insb
inc
jbe
loope
mov
outsb
test
subl
cmpsb
dec
imulb
add
mov
xchg
lods
jmp
xor
cmp
push
pop
sub
lds
adc
lods
aaa
mov
mov
shll
in
jb
or
adc
mov
inc
jp
sub
adc
push
sub
shl
ss
add
jmp
das
mov
sti
js
or
daa
loop
sub
xchg
sbb
mov
mov
clc
cltd
mov
inc
out
xor
inc
xor
test
test
lds
gs
pop
xchg
mov
xchg
mov
sbb
inc
cld
or
dec
pop
pop
xchg
test
inc
mov
test
int3
jb
adc
sub
cmp
push
cmp
sub
bound
in
mov
jg
xor
cmp
loop
in
lods
ret
test
mov
lds
fwait
mov
and
jecxz
jl
mov
mov
and
xchg
xchg
jge,pn
fs
or
js
mov
cmp
imul
addr16
cmp
js
aas
test
sub
xlat
fstpl
and
push
dec
mov
dec
pushf
lods
xchg
cmpsl
testb
andb
inc
mov
dec
pop
xor
outsl
jle
mov
fsubs
ret
xchg
gs
dec
ret
mov
arpl
mov
int3
push
dec
inc
jbe
jne
icebp
fisubs
pop
outsl
jo
cmpsb
imul
int3
insb
xorl
cmp
sub
fildll
lcall
shl
test
out
lds
clc
shl
fwait
xchg
lock
mov
insl
pop
mov
jmp
insb
jnp
cmpsl
and
daa
pop
aam
ss
stos
fisttpll
mov
sub
lea
push
cmovg
mov
sub
mov
ficomps
or
mov
ret
outsl
movhps
adc
fucomip
xor
xor
mov
stos
aad
nop
rcl
xchg
mov
mov
jb
adc
sub
xor
mov
pop
cmpsl
adc
adc
push
aad
ja
mov
sbb
push
aaa
and
frstor
push
adc
or
test
aad
dec
sub
push
adc
clc
jo
sbb
ss
sub
in
pop
mov
in
xor
aad
dec
pop
popa
daa
cmp
gs
movsl
xchg
addr16
mov
and
int
test
xor
ss
lods
or
repz
fidivl
hlt
jge
out
fnstsw
rcrb
sub
leave
xchg
daa
sbb
popa
push
lahf
jge,pt
jg
inc
mov
adc
jnp
gs
leave
jnp
add
repz
repz
ja
xor
arpl
jne
xlat
imul
and
inc
les
and
iret
lahf
ds
sti
out
mov
cltd
add
adc
lods
mov
dec
sbb
jb
cmp
shl
adc
iret
jns
or
loopne
jb
aam
aaa
daa
hlt
addl
es
sub
sarb
mov
rcll
pop
cld
jp
push
enter
sbb
pop
aas
hlt
cmc
stos
enter
cmp
in
push
std
push
in
push
insb
or
xchg
mov
xchg
and
pop
jne
int3
xor
mov
std
and
adc
mov
lock
ret
imul
adc
insb
jne
jns
loop
mov
lcall
rorl
in
aas
dec
adc
inc
xchg
xor
test
stos
ljmp
mov
dec
adc
out
popa
push
shrb
jns
xor
mov
push
mov
sbb
and
sbb
and
mov
cltd
push
mov
push
or
push
out
cmp
dec
fstl
or
mov
cmpsl
add
sub
push
cmp
pop
and
adc
adc
and
insl
stos
in
and
add
rcll
xor
movsb
push
addl
mov
xchg
mov
insl
push
leave
leave
out
xchg
or
iret
pop
scas
inc
pop
and
push
adc
xchg
pop
dec
popf
add
nop
mov
inc
cwtl
outsl
lret
xchg
sub
pop
ret
push
sub
push
cmc
sub
and
push
and
dec
inc
outsl
push
sbb
pop
and
je
xchg
shll
setle
mov
pop
rolb
push
adc
mov
push
cmp
pop
imul
in
sti
mov
push
pop
mov
add
ja
cmp
bound
sbb
test
or
sti
pop
push
out
push
push
cmp
fwait
pushf
adc
push
jle
mov
arpl
pop
enter
sub
outsl
cmp
insb
das
inc
adc
cmp
pop
pop
insb
popa
lcall
jnp
or
and
adc
dec
dec
push
in
aad
outsl
pop
mov
sahf
inc
add
pop
push
mov
jno
fdivrs
mov
hlt
xchg
lret
call
mov
and
xor
lods
inc
push
cmp
outsl
mov
in
clc
movl
mov
popf
pop
mov
pop
in
test
and
cmp
fisttpl
mov
shl
test
inc
nop
popa
div
ret
xor
push
or
cmp
mov
and
mov
fsubrl
mov
es
inc
sub
notl
addl
xchg
lret
ja
jo
imull
mov
pop
in
scas
das
popa
outsb
and
adc
pop
xchg
cmp
adc
pop
adc
push
mov
or
adc
and
es
xchg
les
jge,pt
jp
or
pop
fsubrs
scas
es
out
in
or
adc
ljmp
mov
inc
dec
sub
cmpsb
push
xor
and
loope
ss
fcomps
adc
lods
je
xor
xchg
add
xchg
xor
fsts
shr
pop
adc
sub
shl
adc
jne
imull
push
gs
daa
and
and
cltd
mov
jle
adc
mov
jge
std
pop
mov
cwtl
fdivl
sahf
ret
out
mov
cmp
jo
in
or
adc
xchg
test
mov
xlat
pop
mov
sahf
mov
repz
sbbb
fptan
sti
in
fnstenv
adc
jne
stc
cmp
adc
pop
repz
adc
shlb
jge
pop
dec
adc
push
sarl
xchg
mov
adc
push
sbb
enter
repnz
test
mov
mov
ret
push
adc
pop
rcl
std
cli
lock
sarb
cltd
and
call
cmp
in
in
mov
ss
shl
loope
sbb
std
dec
add
pop
adc
aam
int3
pop
adc
lahf
fbstp
adc
nop
adc
push
push
mov
add
pushf
dec
xchg
ficoms
pop
adc
movsb
xchg
daa
insb
int3
lea
mov
sub
jmp
imul
out
cmc
aas
mov
aad
pop
cwtl
sbb
test
xor
sbb
mov
pop
cmc
xchg
and
pop
adc
mov
ja
push
push
push
aad
aad
ja
lea
and
sbb
cmpsl
aad
or
gs
rol
push
repz
mov
mov
mov
and
push
adc
je
push
inc
fsubl
adc
mov
es
daa
bound
repnz
mov
push
int3
pop
adc
mov
jbe
xor
fs
lds
cmpsb
insl
popa
inc
and
adc
jge
cmpb
lahf
push
push
movsb
notb
fistps
inc
mov
int3
pop
adc
adc
dec
shl
cwtl
cs
jge
push
cli
fmulp
ja
adc
loope
lds
adc
mov
pop
adc
and
lds
fstpt
mov
loopne
ret
notl
out
add
mov
pop
adc
xchg
pop
adc
mov
leave
dec
aaa
movsl
lods
hlt
mov
pop
adc
jae
mov
cli
daa
xchg
sti
aam
lret
clc
or
in
cli
mov
inc
push
fsubr
into
fimull
aas
test
or
fs
sub
loope
xchg
mulb
mov
inc
jne
int3
pop
adc
dec
out
dec
popf
mov
push
xor
push
dec
shll
add
lods
das
fdivrl
lods
dec
or
cmp
sub
ja
lock
lock
mov
pop
loope
xor
leave
pop
adc
clc
push
add
pop
adc
pop
adc
addb
inc
lret
or
xor
inc
loope
stos
pop
int3
jecxz
outsl
bound
xchg
nop
in
pop
adc
fimuls
adc
mov
xor
lods
jnp
fwait
mov
andb
dec
mov
add
mov
dec
addb
lret
lods
outsb
or
add
shrl
jnp
and
rorb
push
das
data16
add
lcall
xchg
loop
icebp
je
sbb
pusha
stc
cmp
icebp
out
fnstsw
mov
es
lea
push
add
or
cli
clc
or
cld
pusha
push
adc
xor
push
int3
pop
adc
push
dec
lahf
stc
cmp
hlt
sbb
aas
pushf
ds
aas
addr16
ret
sub
xchg
jnp
or
lods
xchg
loopne
out
out
mov
mov
adc
popa
outsb
xor
jno
xlat
jnp
add
inc
fwait
ss
jl
mov
pop
ljmp
sti
dec
mov
add
sub
inc
test
imul
daa
dec
lahf
dec
push
xchg
stc
or
dec
adc
mov
lcall
arpl
push
mov
int3
pop
adc
aas
or
xor
test
repz
test
pop
shrl
lods
leave
pop
adc
xchg
push
int3
pop
adc
pusha
push
adc
aas
mov
xchg
push
pop
leave
pusha
sbb
add
in
add
add
cmp
dec
pop
jnp
stc
jl
lea
jecxz
sub
inc
test
outsl
xchg
dec
fwait
dec
push
push
dec
adc
add
roll
mov
pop
mov
leave
pop
adc
bound
add
pop
adc
scas
lcall
leave
pop
adc
aas
sub
jp
movl
push
nop
in
pop
adc
ja
shlb
pusha
pop
pusha
aam
and
adc
add
aad
mov
add
sub
movlps
push
fcomi
orl
inc
popf
jno
enter
lahf
fwait
adc
sub
push
adc
movsl
dec
xchg
xor
dec
mov
adc
inc
xchg
mov
repz
xchg
imul
ljmp
push
adc
push
andb
or
aam
or
mov
stos
jns
int3
pop
adc
lea
mull
mov
adc
push
push
cmpsl
sbb
je
push
outsl
je
ss
popf
imul
inc
jo
push
push
int3
pop
adc
int3
pop
adc
int3
pop
adc
adc
adc
das
mov
call
mov
das
or
pop
adc
mov
mov
sub
cwtl
loop
int
data16
cmc
mov
xchg
call
fs
ret
cmp
adc
hlt
sbb
adc
or
aas
pop
nop
jnp
cmp
lcallw
pop
jno
scas
pop
call
mov
out
jb
cli
idiv
sub
hlt
jecxz
pop
lret
pop
cmp
cmp
add
or
out
lods
jl
mov
adc
mov
dec
sub
pop
adc
sahf
mov
sarb
pop
inc
mov
adc
xor
or
and
test
mov
imul
or
adc
or
addr16
out
fcomp
ljmp
or
roll
out
mov
cmpsl
mov
jmp
adc
loope
and
xchg
imull
test
sbb
or
lret
mov
sbb
int
jmp
out
ret
mov
int3
pop
adc
lcall
dec
jns
inc
fwait
push
int3
pop
adc
test
int
pop
in
sarl
les
xchg
insl
add
arpl
adc
push
mov
pop
cmp
or
andb
dec
xor
adc
les
movsb
arpl
adc
add
test
lods
repnz
arpl
adc
jns
push
int3
pop
adc
xlat
mov
bound
adc
fdivs
xchg
inc
addb
inc
push
xchg
sub
adc
or
mov
cmpsb
popa
pushf
cmp
in
pop
adc
xlat
mov
std
repz
and
adc
push
push
push
stos
cmpsl
adc
pop
mov
pop
and
lcall
xchg
in
clc
ljmp
dec
xor
loop
mov
out
cmpsl
cmp
addl
push
js
adc
and
insl
xchg
inc
test
pop
push
dec
fwait
ss
xor
test
out
xchg
stc
js
int3
pop
adc
push
ss
fsts
adc
xchg
cmpsl
xor
notb
pop
adc
mov
out
ss
scas
ret
push
in
mov
push
leave
insb
xchg
data16
xor
adc
push
adc
scas
adc
adc
push
divl
xchg
fwait
cmp
loopne
or
sub
popa
push
adc
dec
cmpsl
push
mov
xor
ss
lods
inc
adc
mov
pusha
scas
jmp
mov
or
mov
fdivs
xchg
loopne
pop
adc
and
pusha
sbb
jb
test
xchg
xor
mov
adc
push
cmp
rolb
adcb
jmp
fcomp
jo
pop
adc
push
movsl
mov
pcmpgtb
xor
push
int3
pop
adc
pop
mov
movsl
mov
pushf
popf
push
int3
pop
adc
das
lock
adc
cli
movsl
xchg
or
adc
xor
xor
add
mov
mov
out
repnz
imul
mov
adc
xchg
pusha
aam
push
pop
mov
pop
mov
fwait
popa
sub
scas
pop
push
repnz
pinsrw
jle
mov
mov
dec
lea
add
or
fidivl
daa
or
push
jno
inc
loop
mov
adc
dec
iret
sbb
push
int3
pop
adc
jmp
inc
xorb
int3
pop
adc
int3
pop
adc
fs
mov
fdivrl
cmp
dec
or
adc
popa
in
mov
into
and
jno
add
pop
adc
inc
mov
test
sub
shll
imul
fiaddl
gs
jecxz
jecxz
ret
cmp
adc
nop
cmp
out
jg
or
mov
inc
sahf
mov
in
les
mov
pop
mov
jle
adc
sahf
add
push
test
xchg
ss
mov
sbb
xor
and
repz
push
adc
mov
mov
mov
mov
shlb
adc
loopne
pop
adc
dec
cmp
lds
es
aas
sub
mov
loopne
pop
adc
push
in
inc
lret
scas
andl
xchg
mov
adc
or
lret
hlt
lods
jmp
adc
fcomp
mov
or
pop
push
fadd
mov
cli
sahf
dec
lcall
cmp
stos
imul
idiv
add
mov
cmp
stos
mov
push
jnp
ret
mov
sbb
add
in
les
xor
inc
xchg
fs
int3
pop
adc
daa
xchg
js
mov
mov
pop
adc
mov
adc
inc
fidivrs
mov
push
mov
jns
inc
jl
cmp
lret
movsl
decl
mov
fwait
xchg
enter
mov
adc
push
outsb
xchg
ret
fstpt
mov
mov
xchg
popf
jb
or
jns
add
dec
pop
push
mov
loopne
or
and
mov
pusha
push
adc
imull
mov
adc
adc
shll
sub
adc
pop
movsb
push
insb
fadd
sbb
add
mov
jge
notl
enter
adc
mov
mov
ret
jbe
cmc
stc
jecxz
adc
popa
enter
jecxz
lahf
cltd
xchg
push
test
adcb
adc
dec
jnp
mov
or
adc
js
test
jo
xchg
stos
mov
clc
ss
sbb
mov
push
lods
imul
mov
mov
pop
xor
outsl
push
adc
movsb
mov
lods
xchg
sbb
inc
xor
adc
test
push
adc
call
add
fs
dec
dec
xchg
cmc
mov
jmp
mov
adc
out
push
jnp
xchg
pusha
rclb
outsl
push
adc
cmc
stos
or
and
std
adc
push
fldl
repz
es
sbb
pop
push
dec
jnp
xchg
or
sbb
jns
jp
dec
inc
mov
xor
int3
cwtl
arpl
adc
add
roll
jne
adc
and
cltd
push
stos
das
data16
adc
jno
pop
pop
jb
adc
push
push
adc
loope
aaa
add
mov
adc
inc
mov
test
adc
jo
and
lcall
jp
dec
sub
xchg
adc
push
out
pop
popa
or
sub
fwait
xor
ret
dec
xor
add
jnp
mov
add
cs
les
rorb
push
sti
xchg
cmp
ret
loope
aaa
jb
cmpsb
bnd
lcall
pusha
xor
xchg
stos
add
repz
xchg
sub
cmc
lret
fsubl
sbb
push
int3
pop
adc
popa
les
mov
int
xchg
cmc
movsl
ds
push
int3
pop
adc
shlb
lods
add
pop
adc
int3
pop
adc
orl
push
pusha
push
adc
mov
xchg
addb
mov
lret
pop
jg
inc
jno
add
push
adc
adc
ret
bound
adc
pop
andl
pop
add
adc
push
lods
pop
mov
and
sbb
dec
sub
rolb
or
outsl
cltd
aad
insl
shll
xor
sbb
cmpsl
rorl
addr16
mov
xlat
sub
push
adc
sbb
insl
lods
cs
not
mov
fnstcw
jo
xchg
mov
in
lods
je
ljmp
out
ror
inc
imul
jne
mov
adcb
adc
xchg
stc
and
inc
outsb
add
dec
into
mov
fs
je
ljmp
jae
lretw
sub
pop
js
and
fimull
test
fs
out
xor
push
aad
test
xchg
pop
lds
mov
or
add
adc
mov
push
frstor
je
xchg
ret
jmp
out
push
xchg
xchg
pop
andl
xor
sbb
loopne
push
adc
xor
push
xor
push
in
lds
popa
xor
or
mov
xor
dec
or
lret
loop
sub
mov
lahf
test
adc
sbb
push
rorb
inc
int
inc
sub
pop
push
or
std
pop
mov
or
daa
jnp
ret
sub
aaa
imul
or
or
ficoml
sub
dec
pop
mov
pop
cmp
pop
adc
es
jbe
psraw
daa
mov
or
adc
xor
adc
out
fnstsw
lret
pop
xlat
scas
pop
mov
mov
inc
xchg
stos
fldcw
jle
stos
jb
pop
lahf
jge,pt
popf
out
and
push
add
or
addr16
xchg
push
sub
jns
repnz
aas
jge
and
pop
pop
jmp
fistpl
jo
loopne
and
jp
repz
repz
push
mov
aam
jnp,pt
or
aas
xor
ja
push
stos
jle
stc
fwait
and
push
adc
andb
clc
xor
idivb
lret
jnp
jle
rol
addb
cwtl
adc
xor
testb
test
leave
jnp
xchg
sti
cmp
rcrb
mov
imul
fstl
ljmp
js
jl
mov
sbb
mov
pop
or
inc
mov
inc
sarl
or
cld
pusha
push
adc
sti
dec
pop
clc
cmp
negl
sub
push
ds
outsb
in
lods
mov
pop
sbb
adc
adc
imul
push
negl
inc
js
mov
jmp
pdep
sahf
jno
ljmp
mov
jmp
bound
adc
jle
inc
pop
mov
pop
or
negl
mov
xorl
inc
std
xor
mov
lret
dec
pushf
aam
cltd
push
or
jge
jbe
pop
stos
mov
and
flds
push
repz
ret
sti
andb
sub
xchg
rcrl
bound
adc
dec
cwtl
mov
in
loopne
jae
lcall
arpl
push
mov
movsb
loop
pause
inc
or
mov
fldl
enter
js
push
andl
or
call
adc
cmpb
notl
cmpsl
fwait
jecxz
mov
mov
test
jmp
mov
adc
sub
lods
or
jo
and
xchg
in
sar
pop
adc
in
push
mov
into
or
push
adc
stos
mov
xor
lret
lods
in
sahf
cmp
push
pop
xor
xor
mov
inc
mov
add
jp
or
adc
aam
aad
jg
mov
jbe
mov
leave
cmp
sti
adc
ficoml
xchg
add
or
sbb
and
or
cld
pusha
push
adc
outsl
ret
and
movsb
outsb
or
mov
inc
push
adc
adc
adc
mov
in
sub
jge
pusha
addb
aas
cmc
jl
xchg
mov
pop
cmp
imul
ljmp
jg
xchg
mov
dec
in
sbb
pop
arpl
psubw
dec
push
push
inc
int
pop
add
daa
cmp
and
cld
pusha
push
adc
push
adc
stos
push
dec
andl
jnp
popf
mov
xor
mov
add
fs
mov
std
xchg
mov
or
cld
or
cld
pusha
push
adc
adc
adc
add
lret
lret
xchg
cmpsb
or
loope
adc
jbe
lahf
xor
inc
mov
cltd
sti
xor
adc
dec
adc
mov
scas
outsl
dec
push
mov
shl
xor
push
adc
jecxz
xchg
mov
addr16
shlb
and
jge
das
push
sub
jmp
in
push
jp
mov
mov
pop
test
mov
cld
loop
dec
pop
in
scas
sub
cmc
xchg
and
lea
insb
pop
int
cmp
push
adc
mov
mov
and
mov
insb
loopne
adc
cmp
pop
jae
ret
cmc
jecxz
mov
ret
push
adc
das
push
mov
hlt
sbb
push
sarb
jae
fistps
roll
clc
xlat
push
mov
adc
pop
add
sub
sub
das
xchg
mov
sub
and
push
adc
aad
bound
mov
ja
sti
bound
leave
imul
mov
mov
push
jne
arpl
mov
pop
outsb
divb
lods
and
mov
fld
pop
ss
fucomp
mov
ja
addr16
pop
pusha
cmc
cmp
xchg
fildl
int
sarb
bound
stc
jp
aas
pop
mov
fcoms
fnstsw
cmp
stos
dec
lahf
aas
jne
stc
rep
arpl
pop
in
popf
out
mov
addb
and
xor
dec
loope
out
xor
fidivl
popa
inc
lahf
jge,pt
fucomip
fnsave
je
in
movl
call
adc
jp
repnz
mov
jl
push
dec
fdivrl
sar
idivb
loope
jp
or
xchg
dec
adc
sbb
mov
cmp
outsb
xchg
inc
mov
fcomps
jo
adc
inc
lds
jle
cmp
icebp
mov
jle
in
imul
sub
xchg
dec
cltd
cmp
sarb
pop
jo
or
and
lods
cmp
or
push
xchg
cmp
mov
mov
xlat
andb
cmpsb
or
pop
stos
imul
mov
pop
adc
das
shll
lods
addb
xor
or
adc
jg
arpl
adc
cmp
loope
loope
xor
cmp
fistpl
sbb
test
ds
pop
js
fidivs
adc
call
cwtl
jge
and
or
pop
mov
adc
insl
je
in
in
adc
scas
fcoms
jbe
sub
mov
lods
cltd
xor
adcl
xor
bound
clc
stos
fs
bound
cmp
std
iret
test
adc
dec
inc
dec
adc
roll
insl
adc
or
add
lret
ss
clc
inc
movsb
addb
iret
mov
pop
mov
or
pusha
in
adc
push
adc
or
repz
cmp
ss
xor
gs
jmp
inc
pop
ljmp
repnz
cwtl
mov
in
dec
sub
test
mov
mov
pop
cs
xchg
mov
in
ss
pushf
addb
pop
cwtl
sbb
sub
aas
fwait
xchg
out
pop
adc
cwtl
pop
imul
scas
lds
ss
dec
dec
or
cmp
int
and
and
push
jle
push
fcoms
mov
int3
sti
cmp
mov
sbb
cmpsl
pop
dec
std
xor
and
sbb
cmc
xor
imul
add
xchg
ja
or
and
clc
sub
inc
mov
into
pop
out
les
cwtl
shll
shlb
push
adc
aaa
into
push
int
push
or
sarb
sub
push
sbb
xor
mov
and
pop
and
dec
or
sbb
xchg
scas
cmpsl
mov
add
xchg
mov
inc
mov
das
dec
or
ss
or
insl
ret
dec
or
addb
aad
mov
adc
out
dec
ja
mov
mov
push
mov
xor
nop
in
pop
adc
leave
adc
inc
adc
ja
jp
ja
roll
mov
adc
mov
popa
xchg
sub
adc
cmpsb
scas
cmp
jb
cpuid
and
xorb
stc
push
mov
sub
inc
test
push
jp
add
push
adc
aas
lock
adc
xor
and
or
adc
adc
fisttpl
adc
mov
inc
insl
fdivs
stc
repz
mov
push
adc
jne
mov
sub
inc
test
xchg
in
add
inc
mov
shl
xchg
or
or
inc
jo
aad
mov
daa
dec
fwait
cwtl
push
stos
iret
popa
rolb
pop
roll
mov
inc
stos
nop
jnp
addr16
xor
jmp
cmc
hlt
test
mov
lea
rcll
fsubl
adc
jno
iret
ret
iret
jle
cmp
jno
pop
sbb
pusha
mov
pop
cmpsl
arpl
mov
push
adc
les
bound
pop
or
addl
loop
repz
fdivrs
call
pop
cmp
pop
adc
mov
dec
adc
xor
inc
adc
adc
clc
or
and
addb
push
test
add
adc
push
jge
outsl
pop
dec
popf
xor
adc
push
aaa
push
int3
pop
adc
sarb
out
mov
inc
xchg
sub
mov
add
jns
xor
jg
les
mov
dec
push
subb
mov
and
sub
push
or
lea
aad
mov
xchg
fwait
cld
pusha
push
adc
push
int3
pop
adc
push
jl
xor
popf
imul
sbb
push
lret
cmp
xchg
movsl
add
adc
or
adc
call
or
add
pop
repz
bound
jmp
sub
pop
ljmp
fmul
stos
cli
pop
sbb
popa
dec
test
imul
xchg
inc
loopne
or
imulb
cwtl
xor
cltd
xor
arpl
mov
pop
inc
pop
jno
push
out
call
fldenv
rolb
in
sub
mov
outsl
lret
jnp
ljmp
jge
dec
xchg
sub
pusha
aam
adc
and
mov
jge
mov
aam
push
fimuls
adc
mov
out
shr
cmp
test
es
push
inc
andb
mov
das
mov
int3
add
sub
sahf
jnp
subb
mov
xchg
dec
inc
pop
lods
xor
call
mov
neg
out
aas
jbe
inc
aas
mov
test
mov
mov
clc
mov
push
or
pop
pop
lea
repnz
adc
mov
cmp
or
or
or
and
cmc
insb
pop
out
mov
pop
cmp
jge
fstpl
mov
add
arpl
sub
fsubrs
xorb
popa
decl
inc
dec
or
cmpsb
fpatan
je
dec
leave
in
jl
inc
sbb
arpl
test
loope
jge
xchg
add
and
add
xchg
pop
mov
in
pop
mov
enter
xchg
in
gs
dec
lcall
push
adc
psrlw
adc
addb
adc
add
dec
and
push
adc
mov
loopne
mov
mov
adc
inc
mov
in
pop
xor
les
jl
xorb
and
mov
mov
adc
ss
fmuls
xor
clc
and
inc
popf
fisttpl
scas
pop
inc
dec
loopne
or
fdivr
pusha
push
adc
inc
or
push
das
fsts
xlat
or
es
jge
fdivs
test
daa
orb
and
out
or
adc
mov
rolb
xlat
roll
mov
or
lods
mov
mov
mov
push
xadd
inc
mov
cld
or
cld
pusha
push
adc
mov
cmp
push
int3
pop
adc
xor
rcr
inc
ss
adc
adc
or
cld
pusha
push
adc
push
mov
cmp
or
mov
iret
shrb
push
jbe
xor
xchg
jle
adc
mov
or
sub
scas
dec
or
insb
push
adc
push
adc
or
pusha
inc
mov
adc
outsb
aad
sub
loop
mov
dec
nop
in
pop
adc
mov
push
xor
inc
test
aaa
jp
lods
popa
sar
out
sub
adc
inc
mov
seta
pop
cmpsb
gs
inc
int3
ret
sub
push
stc
jecxz
cltd
add
or
adc
push
int3
pop
adc
or
ljmp
mov
int3
pop
adc
int
sti
add
fstps
push
and
shll
jg
fidivrl
ret
les
inc
cld
or
add
adc
or
adc
hlt
shrb
jns
imul
iret
push
mov
cmp
fneni(8087
or
add
adc
ret
add
jmp
xor
xor
pushf
call
mov
lods
dec
jecxz
jne
adc
in
jns
shrb
cmp
imul
sub
sarb
xor
sahf
adc
lods
sbb
pushf
xchg
cs
inc
pop
cmc
mov
inc
and
addr16
xchg
mov
outsb
cli
add
pop
lds
cltd
inc
push
xchg
add
cmc
mov
in
push
movsl
cmpsl
cmp
ret
adc
adc
popa
mov
mov
add
js
jle
jge
scas
mov
cmp
cmpsb
mov
mov
mov
adc
addb
adc
shl
pinsrw
shll
fs
psubusw
lea
mov
push
cmp
lds
lahf
ljmp
imul
and
movsb
adc
mov
or
xchg
mov
cmpb
test
loopne
xor
jb
push
fcomp
in
or
adc
aas
fisubrs
ljmp
dec
out
scas
cmp
jae
insb
cmp
cld
or
cld
pusha
push
adc
cmc
fcomps
push
cld
pusha
push
adc
mov
pop
fs
int3
pop
adc
push
fidivl
jmp
adc
dec
xor
cmp
mov
adc
sub
dec
adcb
adc
rcr
cs
inc
jp
and
pusha
inc
sbb
xlat
movsl
scas
icebp
jae
pop
repz
not
popf
sbb
push
mov
jns
dec
mov
push
lock
push
insl
push
ret
xchg
ljmp
add
ss
aaa
es
aam
mov
lods
testb
push
adc
push
addb
jo,pt
add
gs
mov
mov
orl
inc
cmpsl
int
insl
sete
xchg
mov
sbb
pusha
mov
mov
pushf
mov
hlt
popf
aad
addl
dec
adc
sbb
mov
jecxz
jne
roll
lret
imul
pop
jmp
testb
mov
cmc
shlb
pop
add
into
jl
popa
data16
cmp
leave
pop
adc
pop
psraw
mov
repnz
leave
pop
adc
iret
jo
outsb
push
mov
pop
adc
jmp
outsb
add
roll
cmc
mov
pop
adc
jmp
insb
dec
or
pop
adc
xlat
out
daa
nop
roll
je
in
in
sub
repnz
and
arpl
dec
mov
repz
mov
into
andl
popf
ss
cld
lods
mov
dec
cmpsl
arpl
mov
cli
lods
sub
lahf
stos
faddp
data16
xchg
lods
pop
cmpsb
outsb
jb
cld
js
je
idivb
jl
pop
ret
push
mov
mov
mov
aaa
iret
sub
jb
jecxz
pushf
mov
test
movsl
jle
test
push
and
mov
into
adc
jg
fidivs
jne
mov
hlt
in
jmp
pop
or
push
dec
pop
cs
lret
cs
mov
ljmp
mov
sbb
rcl
xchg
fmuls
push
inc
xlat
sbb
aaa
mov
adc
rorl
lock
sub
jge
imul
lea
sbb
mov
shll
adc
cmc
inc
xchg
push
lret
ret
jnp
out
pop
ja
inc
sbb
push
test
jecxz
iret
nop
xor
ret
sub
jmp
cwtl
out
iret
sarb
scas
filds
cld
add
insl
clc
stos
push
nop
insb
stc
add
mov
into
add
adc
cmpsl
movsl
int3
insb
add
mov
add
mov
adc
mov
testl
and
adc
inc
add
and
inc
mov
jo
outsl
cli
add
mov
outsl
mov
inc
sbb
ret
jae
mov
jb
jbe
dec
pop
and
dec
enter
fs
inc
lds
test
fadds
mov
pop
jge
push
lret
stos
mov
popa
addr16
jns
xlat
jmp
push
adc
int3
mov
rorl
fwait
pop
xchg
es
xchg
cmpsb
pop
cmc
add
push
push
mov
ss
pop
arpl
and
adc
xor
push
sarb
addr16
sbb
adc
push
inc
out
int3
sub
sub
xchg
mov
sub
dec
addr16
testb
sbb
int
imul
cmp
cmpsb
fimull
inc
fdivrs
adcl
enter
sbb
pop
call
popf
ficomps
xor
aas
std
shrl
rcl
loop
in
inc
cmpsl
ss
ja
icebp
stc
mov
adc
mov
dec
xlat
add
fdivr
outsb
pop
xor
iret
int3
mov
xchg
int3
pop
adc
lret
mov
mov
or
push
cwtl
pop
cmpsb
sub
jbe
sahf
dec
icebp
fldcw
dec
xor
mov
cmp
clc
or
cli
popa
jecxz
int3
push
ret
mov
shrl
in
fadds
cmpb
cmp
int3
cld
test
adc
xor
int3
mov
pop
sbb
mov
add
xchg
cmpsb
inc
in
ret
xchg
cli
ds
in
mov
add
test
ljmp
test
add
in
loop
orl
testl
jge
sbb
sub
aas
jle
jb
or
jns
jle
test
xchg
out
xlat
pop
and
adc
push
addr16
adc
or
mov
stos
pop
ja
dec
add
insl
mov
ja
xor
inc
add
mov
pop
adc
mov
das
cmp
push
adc
int
jbe
sbb
and
adc
push
addr16
adc
or
jbe
lods
sti
mov
stc
pop
sbb
fcompl
out
sub
push
adc
push
andb
cld
je
aas
lahf
adc
adc
xlat
and
test
pop
adc
ds
mov
loop
adc
cltd
stc
lock
mov
mov
jmp
scas
xchg
jg
mulb
xchg
pusha
lahf
insb
push
imul
mov
repz
fsts
push
sub
jnp
xor
ftst
xor
add
cmp
or
cmc
ds
jno
fldl
xchg
xor
mov
or
mov
push
and
mov
clc
pop
fidivs
sbb
sbb
inc
sbb
arpl
or
addl
mov
sub
pop
test
nop
jne
pop
jns
jl
or
lcall
mov
xchg
sub
and
jb
sbb
ljmp
lcall
insb
adc
add
mov
pop
mov
xor
lock
sbb
xchg
cld
xor
out
scas
or
pop
pushw
cs
inc
les
cmp
cltd
jp
and
xor
les
std
xlat
les
mov
testl
imul
inc
cmpsl
lcall
ret
popa
or
mov
cmc
repnz
outsl
jno
mov
insb
and
in
sub
push
in
cs
sahf
xchg
pushl
push
adc
fwait
add
nop
jb
mov
xchg
lods
inc
rcll
aaa
cs
push
test
xchg
mov
cmp
outsl
gs
fisttps
ja
mov
sbb
sti
cs
xchg
ja
loopne
lret
cmpsl
lods
ret
mov
jnp
js
movsl
or
cmp
je
mov
mov
sub
adc
mov
shll
jae
inc
lods
mov
push
add
jbe
out
add
xor
pop
jmp
mov
add
dec
rol
iret
cltd
scas
insl
sub
test
mov
rcl
push
and
jg
cmpsl
pop
cli
addr16
mov
or
fs
cmp
or
outsb
dec
mov
movsb
notl
cwtl
xor
sub
repz
sbb
je
sub
stos
daa
add
pusha
dec
jae
adc
ret
test
and
dec
jle
jns
daa
ljmp
imul
ss
add
pushf
je
fcom
xchg
into
ret
std
xor
push
stos
sahf
mov
xchg
and
push
mov
jecxz
fimull
inc
dec
cmp
fcmovb
cltd
cld
pop
pop
xlat
aad
or
movsb
cli
cmpsb
in
push
jne
movb
inc
xorl
adc
jge
leave
sbb
mov
inc
add
lcall
mov
mov
adc
movsb
arpl
out
loopne
lds
lods
adc
fildll
ja
adc
or
or
dec
aad
icebp
mov
btc
out
push
idivl
mov
mov
xchg
int
xchg
aas
jle
stc
js
aas
jns
hlt
out
adc
push
jmp
xchg
and
adc
adc
mov
dec
jg
sbb
push
push
cmpsl
pop
sub
popf
xor
add
mov
addr16
cmpsb
out
leave
adc
lahf
mov
lock
or
fsubrs
or
inc
shlb
fldt
and
cmp
in
add
add
movsl
lahf
outsb
xchg
dec
fstl
and
xor
pop
loop
xor
scas
fsubrl
mov
pop
xor
int3
lods
cli
mull
push
sahf
pop
pop
shlb
cltd
dec
jno
pusha
push
adc
mov
push
xor
imul
xchg
out
pop
lahf
and
adc
insl
addr16
ret
enter
push
xchg
inc
outsb
imul
adc
add
pop
ljmp
lret
push
bound
jnp
mov
jns
jl
xor
sub
inc
lock
fsubrs
adc
add
xorb
push
jle
lcall
fnstenv
lea
add
or
adc
ds
push
inc
push
out
sub
fs
fiaddl
lock
cmp
mov
adc
cwtl
ss
cs
push
pop
lret
lcall
mov
xor
mov
push
inc
aam
and
aaa
mov
xor
pop
loopne
xor
fisttps
and
lods
lcall
sub
jb
aaa
mov
ret
xor
imul
xor
pusha
aam
push
cmovns
in
imul
or
outsb
adc
jne
aad
ss
es
and
adc
or
fnstsw
pop
or
xchg
mov
push
nop
das
jno
iret
jmp
cmpsl
outsb
xchg
jns
inc
and
jb
lds
out
out
subb
pop
leave
aad
shll
gs
es
jnp
push
cmp
lahf
xor
add
xor
mov
push
das
xchg
inc
gs
dec
stos
and
bound
pop
jl
mov
lock
mov
pop
xor
and
cmp
xor
inc
sub
sbb
xchg
ljmp
dec
aas
pop
pop
fwait
push
mov
inc
movsb
jno
into
movsl
mov
int3
decl
push
sub
sub
sub
add
or
call
mov
xchg
xor
mov
pushf
adc
mov
lods
cmp
adc
and
bnd
mov
outsb
sbb
sbb
jg
mov
or
xor
jl
loope
xchg
sti
push
or
popa
push
jmp
cmc
add
dec
in
inc
xor
xchg
cmp
andl
and
ss
data16
fsincos
lods
nop
add
hlt
cltd
enter
mov
jl
dec
fs
sub
iret
popf
push
scas
inc
and
xor
out
and
pop
aam
dec
imul
cs
xor
mov
fnstcw
rorb
and
adc
jns
push
popa
mov
jge
cli
or
aam
iret
cld
pop
mov
fsubs
ds
mov
adc
push
out
lret
xchg
pop
xlat
fbstp
mov
xor
dec
push
dec
aas
mov
pop
adc
mov
xchg
jns
jnp
andb
sub
inc
sub
xchg
mov
lcall
in
movsl
adc
movsb
or
inc
popf
out
mov
mov
scas
add
jnp
sub
sbb
mov
jp
cltd
push
lea
movsb
mov
loop
jo
movsl
insb
ja,pt
addl
stos
mov
pop
ds
cmpsl
jno
and
adc
jo
cli
repz
lahf
sarb
and
pop
mov
push
call
inc
lret
ljmp
dec
cli
ret
cmp
dec
ja
jmp
rclb
test
ss
xchg
daa
les
xchg
xor
repz
mov
jp
sarb
aad
xor
dec
test
add
jle
leave
nop
loopne
inc
xor
cs
repz
pop
out
xchg
inc
mov
cltd
mov
sub
std
push
jle,pt
ds
mov
adc
fdivrl
xor
js
addr16
sbb
leave
outsl
orl
xor
sub
ds
xor
push
jp
adc
or
shll
out
inc
add
push
sub
dec
out
subl
lock
inc
fnstcw
clc
cmp
jecxz
inc
pusha
inc
test
adc
and
sbb
outsb
ja
pop
mov
mov
xorl
sbb
mov
mov
rorb
adc
sbb
popa
rorb
push
mov
adc
in
push
std
insl
inc
push
or
mov
sub
mov
jae
gs
js
ss
mov
sbb
imul
mov
dec
mov
pop
mov
and
aas
xchg
roll
or
ljmp
xchg
repz
and
ds
aam
push
aas
cltd
cmpsb
imul
and
cmpsb
dec
ljmp
push
xor
inc
or
sub
dec
jb
dec
mov
lahf
mov
inc
ds
cmp
adc
push
je
jns
pushf
leave
jge
push
push
cmpsl
xchg
fsubs
fdivrs
pop
ret
and
adc
pop
dec
pop
sbb
xchg
xlat
rcrb
push
repz
mov
cld
lahf
inc
sti
sbb
cs
repnz
jg
out
push
adc
ljmp
sub
jbe
clc
sub
dec
mov
sbb
pop
fadd
xor
loope
cmp
nop
das
cmp
sbb
add
add
push
inc
jecxz
aas
scas
and
aad
mov
pop
adc
cmpl
push
fisttpl
push
out
push
shrl
push
aad
and
sub
movsb
rorl
or
push
addl
xchg
cmp
mov
adc
sbb
ss
inc
xchg
xchg
inc
mov
jb
shl
push
inc
repnz
mov
xor
shlb
sbb
enter
aam
daa
out
rol
jo
in
js
neg
push
cmp
or
lds
out
cld
ljmp
mov
sub
out
pop
test
pop
test
in
imul
fcmovnb
je
pop
insb
clc
loope
push
push
sub
jmp
scas
and
test
lret
mov
repz
xchg
ret
push
lds
dec
jge
fst
test
xchg
pop
mov
in
out
mov
divl
jo
adc
xchg
xor
andl
aaa
out
hlt
jns
out
lahf
js
nop
push
rcll
xchg
jnp
inc
push
rorb
into
pop
pop
jmp
cmp
and
popa
cwtl
imul
mov
sub
and
cmp
add
xor
push
nop
popa
jg
movl
imul
insl
repnz
xlat
out
jbe
jg
pushf
push
or
push
pop
pop
in
mov
int3
pop
inc
mov
fcmovbe
orb
scas
filds
inc
test
adc
cmp
or
cwtl
pusha
dec
insl
add
loop
cmp
lcall
add
daa
dec
lahf
aas
and
lcall
insb
inc
mov
ficoml
cmp
out
leave
insb
push
inc
adc
cs
or
xor
arpl
inc
mov
outsb
pop
push
lock
inc
push
popf
push
jle,pt
cmp
jb
mov
int
xor
mov
packuswb
dec
adc
xchg
fucomp
movsbl
nop
add
fmulp
jno
xchg
mov
repnz
mov
mov
fnstcw
sti
cmp
out
xor
ss
inc
mov
js
outsl
sbb
daa
int3
stc
aaa
jle
lahf
jmp
xchg
pop
xchg
and
adc
decb
out
sub
add
sbb
ja
mov
push
jo
lahf
rorl
jl
aad
adc
xlat
sbb
mov
pop
adc
xchg
mov
or
inc
ror
and
mov
xor
xlat
scas
pop
out
xor
fnstcw
sub
rclb
repnz
cltd
inc
cmp
ss
clc
mov
push
aas
mov
call
popa
roll
pushf
mov
and
mov
xchg
push
mov
mov
in
cmp
mov
or
jnp
or
scas
mov
and
xchg
aaa
icebp
cwtl
xor
setno
jne
mov
mov
pop
xor
dec
es
and
pop
sti
pusha
xchg
adc
js
inc
arpl
xchg
loop
xchg
subb
pop
or
dec
int3
bound
aaa
les
fldl
int3
pop
or
ret
ja
daa
outsl
pop
xor
mov
fdivrl
sbb
ds
xchg
or
cmc
rcrl
sbb
stos
push
pop
cmpl
outsl
jne
pop
inc
mov
pop
xor
mov
out
mov
and
iret
popa
xchg
icebp
pop
mov
adc
or
mov
cmp
addb
jmp
andb
dec
xor
mov
pop
mov
push
mov
lahf
adc
fs
fidivs
adc
xchg
clc
lods
mov
sbb
pop
or
adc
sbb
inc
repz
pop
adc
add
mov
test
adc
add
jmp
mov
test
jge
or
pop
adc
cmc
sub
adc
pop
adc
push
lods
not
jmp
pop
lods
mov
xchg
ds
cmpb
mov
or
nop
mov
pop
adc
cltd
stc
out
clc
jg
cli
mov
in
inc
movsl
in
sbb
arpl
pmaddwd
jo
mov
cmpsb
scas
or
or
inc
movsb
imul
nop
arpl
fcomi
outsl
scas
jb
fxch
mov
adc
stos
xchg
fwait
out
and
push
push
mov
repz
out
cmp
sbb
cltd
fdivrs
test
push
inc
pop
call
sbb
push
stos
mov
jl
inc
test
push
lret
stc
cwtl
dec
jbe
xor
in
pushf
ret
ret
cltd
xor
test
adc
shlb
andb
pop
pop
mov
adc
divl
xchg
call
js
fwait
push
inc
andb
jecxz
adc
pop
adc
out
je
sbb
dec
aam
lahf
sbb
pop
lea
or
fistl
sar
js
loop
imul
test
loop
out
add
adc
cmp
sub
sbb
lock
sbb
or
xlat
sub
fildll
hlt
push
ss
push
ja
addb
movsb
into
adc
adc
cmpsb
and
cmp
imul
fnstenv
mov
xlat
xchg
sub
repz
and
cmp
scas
fists
imul
fsts
sarb
jp
stos
je
mov
lods
pop
adc
mov
push
nop
adc
fnstcw
jmp
push
jp
jne
adc
lret
mov
push
jno
mov
outsl
loopne
jnp
cmp
iret
arpl
sub
add
jge
xor
push
call
push
jmp
lcall
adc
in
sbb
cmc
shrl
cmp
aaa
or
fisubl
adc
or
add
adc
mov
adc
jmp
mov
adc
push
xor
stos
adc
dec
xor
das
pop
les
add
pop
push
outsl
inc
mov
loopne
or
or
cld
pusha
push
adc
lock
aas
repz
or
xor
data16
gs
dec
sub
jnp
addr16
inc
aas
and
dec
lahf
idivb
push
adc
cwtl
out
clc
or
pop
lcall
jg
or
or
jno
sbb
mov
mov
jle
and
xor
jmp
sbb
lock
mov
jp
mov
pop
mov
jbe
iret
push
movsl
jno
scas
stc
cmc
cmpsb
add
sub
push
and
sub
aad
test
int3
jge
sbb
jnp
xorb
daa
fwait
xchg
sarb
jg
out
popa
push
adc
and
jne
push
xor
pusha
push
adc
movsb
xchg
xchg
xor
push
adc
sbb
jle
jno
cld
inc
outsl
js
inc
lret
and
ljmp
mov
roll
xor
iret
aam
inc
xor
xor
xor
mov
hlt
inc
push
insl
xlat
mov
cmp
jne
cli
cmc
ret
ljmp
sbb
dec
bound
jne
test
cmp
sbb
and
dec
lods
inc
lret
mov
fisttps
xchg
ja
dec
mov
fsubrs
adc
repz
leave
ret
cli
cli
movsl
add
out
push
jmp
lds
lea
out
dec
and
dec
test
pusha
push
adc
inc
icebp
movsl
jge
sub
outsb
mov
mov
test
das
arpl
mov
sbb
dec
icebp
int3
decl
es
neg
sub
int
adc
jne
xchg
test
jne
cmp
push
leave
scas
pop
sub
out
push
std
das
or
xor
outsb
fs
adc
adc
lea
sbb
xor
fsubrs
push
adc
jl
out
jle
imulb
sbb
mov
sub
adc
fs
sti
jne
push
cmp
push
adc
test
test
push
mov
push
mov
test
and
adc
pushf
mov
insb
addl
dec
add
inc
or
inc
inc
lahf
pushf
out
pop
filds
dec
mov
adc
aam
push
stc
sbb
adc
out
pop
xchg
or
push
add
stos
hlt
lea
jp
jne
std
jbe
sbb
divl
push
in
div
xor
pop
outsb
movsb
adcb
pop
adc
pop
or
inc
xchg
dec
stos
lock
imul
mov
loopne
push
mov
idivl
mov
adc
push
aad
mov
outsb
inc
bound
push
xlat
cmp
fwait
clc
cmp
mov
push
mov
dec
adc
sbb
cmpsl
push
cli
jg
je
jecxz
xchg
mov
pop
in
adc
and
mov
call
adc
jbe
jo
mov
sti
imul
fnsave
sti
xlat
pop
addr16
jge
leave
adc
pop
int3
mov
lock
cli
iret
leave
imul
shlb
lock
push
cmp
fwait
dec
neg
dec
adc
lods
je
dec
daa
fistps
addb
and
adc
add
jp
pop
dec
loop
adc
jb
dec
lahf
mov
lock
jbe
mov
jo
lods
cmpsl
mov
lock
pop
lret
out
les
je
mov
inc
jne
subl
stos
sub
call
cmp
stc
jo
jecxz
xchg
pop
arpl
jbe
test
iret
cmc
lods
scas
in
mov
cmp
js
inc
dec
aad
jo
fistpll
or
xor
jge
sub
sub
stos
jle
ljmp
lret
xchg
call
mov
aaa
cmp
insl
mov
scas
pop
xchg
aad
je
hlt
outsl
adc
cwtl
fidivl
xchg
into
sub
mov
les
and
mov
mov
repnz
clc
movsb
aad
add
mov
rcrl
dec
mov
incb
rcrb
jns
mov
pop
jge
mov
mov
ss
pop
push
pop
xchg
cmp
repz
aas
xor
fs
mov
mov
inc
movsb
jmp
adc
ss
cmp
fildl
xchg
loopne
pop
mov
sbb
pop
sub
hlt
sub
xchg
add
adc
mov
addb
add
aam
hlt
lods
enter
cwtl
dec
dec
add
mov
aas
sbb
fdivrl
push
js
ds
or
lock
daa
and
stos
sahf
push
sbb
imul
pusha
repz
repz
test
sub
fmuls
cmp
jae
fstpt
push
dec
mov
cmp
loop
jo
pmaxub
data16
mov
or
stos
loop
test
popa
insb
sbbl
fidivl
mov
sbb
imul
rcl
aaa
and
jg
in
scas
mov
das
jno
test
outsl
bound
or
mov
xchg
nop
pop
push
test
inc
mov
and
xor
fstl
negl
out
mov
lds
or
mov
sar
mov
pop
test
cmpsl
xchg
stc
das
dec
sbb
and
adc
fdivs
ljmp
xorl
inc
loope
test
jg
dec
pop
push
xchg
xorb
stos
shrb
cs
mov
cmpb
mov
fbstp
jno
lsl
xor
aaa
je
xchg
sub
xchg
inc
les
insl
xorb
mov
push
cmp
jmp
lods
rol
mov
xchg
in
mov
adc
in
addl
pop
call
dec
insb
mov
push
or
adc
in
icebp
ret
xorb
sbb
fld
and
rclb
jmp
mov
mov
push
adc
out
das
pminub
pop
jno
out
dec
xchg
mov
stc
mov
outsb
jo
out
and
in
or
cmovo
mov
or
push
jge
scas
pop
mov
cmp
lds
outsb
mov
js
hlt
fnstenv
jb
jbe
fnstsw
gs
push
out
cltd
mov
inc
in
push
sub
cmp
sti
popf
pushl
cmp
pop
fimull
adc
cmp
fstps
and
xor
dec
out
jge
subl
xchg
sbb
mov
push
and
jle
mov
faddl
aad
mov
hlt
pop
jmp
in
mov
addr16
js
push
cmc
orl
jl
aad
mov
cmpsb
in
lock
sbb
fidivl
div
cmpsb
lods
mov
scas
jl
mov
sbb
ss
xlat
rol
ja
aaa
cmp
or
jns
incl
mov
jnp
aad
les
sbb
jp
lods
jb
xcrypt-cfb
cmpsl
roll
gs
xor
jg
xchg
lds
cmc
roll
push
adc
mov
sti
mull
out
mov
mov
insb
sub
ss
les
or
cmp
and
stos
pushf
lahf
sub
inc
or
adc
in
cmp
and
cs
pushf
mov
xorl
push
or
adc
and
fwait
mov
les
jne
adc
lock
test
and
adc
mov
cmp
fs
mov
mov
jns
mov
mov
mov
add
lea
add
in
push
add
in
and
stos
mov
mov
pop
shrb
pop
hlt
cld
pop
ret
mov
sarl
bound
add
stc
mov
into
test
mov
push
adc
inc
mov
mov
mov
push
mov
mov
inc
xor
and
push
xor
push
jae
adc
adc
and
xchg
inc
pop
in
xchg
lea
add
mov
adc
add
add
pop
fsubrs
add
scas
jns
addr16
dec
mov
mov
js
push
ficompl
or
or
lret
in
add
fnstcw
scas
les
adc
push
cli
xchg
test
mov
add
mov
ljmp
adc
cmp
pop
xchg
xchg
sub
and
out
aaa
lcall
cmp
sti
mov
cli
enter
mov
cld
adc
inc
pop
sub
and
sbb
xor
test
jecxz
jb
and
sub
mov
mov
mov
xchg
sub
inc
cmpsl
lea
pusha
push
adc
ficomps
in
divb
sub
cmpsl
jnp
popa
ficomps
jge
mov
cld
push
fsubs
jle
mov
push
lock
aaa
cmp
sti
and
xchg
mov
xchg
pop
aaa
subl
lea
jmp
push
leave
mov
stc
jae
sbb
int
enter
sbb
inc
popa
push
adc
push
cmpsb
add
enter
rcl
aaa
enter
outsl
lahf
dec
jns
pxor
sahf
sbb
xor
int3
or
leave
pop
aas
movsl
in
stc
shrl
pop
test
jne
ss
lcall
je
bound
lret
cld
lahf
ficomps
nop
imul
cmpsb
daa
loopne
push
adc
ss
or
lret
xchg
dec
ja
stc
out
fidivrl
popf
aam
lods
pop
ss
xor
out
inc
adc
sub
in
in
push
adc
xor
and
jecxz
repnz
in
mov
sub
pusha
mov
repz
out
lahf
add
push
mov
fistpl
in
add
inc
sbb
jle
stc
or
dec
cmp
out
xor
jne
xlat
leave
aad
jae
sahf
mov
jbe
jle
stc
sub
and
xor
and
mov
pop
stc
leave
xchg
daa
int3
pop
aaa
adc
jp
out
cwtl
leave
sbb
out
pop
jle
add
mov
add
sbb
lods
push
add
adc
orb
rclb
fiaddl
or
fwait
mov
xlat
push
xor
repz
scas
ss
mov
adc
pop
je
and
mov
gs
stc
insb
mov
ss
jp
add
and
mov
mov
aaa
sbb
fnstenv
inc
mov
pusha
roll
sbb
push
popa
pop
out
flds
dec
lahf
push
dec
add
outsl
dec
add
add
orl
adc
dec
add
mov
dec
add
add
outsl
dec
add
sub
add
add
repnz
add
sub
add
testb
testb
outsl
dec
add
add
cmovl
adc
dec
add
add
add
outsl
repz
mov
jl
addr16
jne
addl
jb
imul
in
sbb
lock
jnp
mov
xor
jl
and
lahf
loopne
xor
out
cmc
shrb
lods
xchg
addl
scas
push
scas
or
mov
test
cwtl
call
sub
mov
adc
xchg
push
pop
sahf
dec
in
mov
push
lock
sbb
adc
and
insb
jle
or
mov
cmc
cmp
push
inc
jae
loopne
mov
add
aad
mov
sarb
imul
fs
jo
push
jmp
cmp
push
daa
inc
jbe
push
cmp
out
stos
outsl
sub
cld
xor
xadd
inc
push
mov
jecxz
dec
add
in
or
jns
cmpb
sbb
push
sahf
repnz
dec
xchg
fwait
push
stc
fbstp
icebp
adc
fists
shrb
push
dec
xlat
and
xchg
scas
rolb
hlt
out
sub
dec
fs
inc
jle
push
fbstp
add
outsl
mov
shlb
mov
adc
sbb
ret
stc
xor
negb
mov
xchg
mov
in
leave
data16
adc
scas
and
je
push
insl
push
out
or
rcrl
shlb
jne
push
loopne
nop
mov
adc
add
clc
loope
fstl
icebp
adc
int3
mov
sbb
sti
jg
sbb
xchg
ret
out
ss
insl
cmp
pop
call
jmp
or
mov
data16
or
push
ret
loopne,pt
inc
rcrb
pop
std
sbb
pusha
mov
adc
adc
jae
dec
jl
sbb
mull
adc
mov
push
outsb
leave
xor
mov
xor
into
and
xchg
push
and
inc
lcall
push
jg
pop
xor
stc
dec
mov
mov
lock
in
aam
ss
pop
pop
jb
xor
sbb
bound
loope
fmul
push
xchg
mov
ljmp
dec
addr16
push
cli
xor
outsl
cmp
out
fldenv
and
sbb
push
mov
scas
imul
cltd
add
xor
mov
push
dec
inc
mov
lods
insl
jge
mov
inc
xchg
push
inc
divl
jle
jns
in
pushfw
divb
adc
scas
pop
mov
mov
icebp
and
mov
movsl
xchg
mov
adc
inc
fidivrs
adc
xchg
adc
aaa
lods
mov
xlat
pop
pop
push
or
int
mov
adc
cld
in
mov
icebp
insb
xor
lret
add
mov
iret
lahf
jge,pt
xor
sbb
jge
lock
fwait
cwtl
fwait
movsb
imul
push
xor
and
jecxz
repnz
mov
mov
mov
mov
cwtl
mov
and
scas
shl
jae
add
mov
inc
xchg
stos
add
push
push
addl
testb
sbb
and
xor
mov
insb
jbe
adc
sti
or
mov
repz
sub
dec
mov
rcrl
inc
insb
fadd
rol
xchg
sbb
pop
popa
mov
out
mov
cwtl
mov
incl
cwtl
fisttps
xor
xchg
cmpsb
movsl
les
fxch
pushf
mov
lock
jecxz
jbe
shlb
adc
popf
push
addl
insb
mov
movsb
xor
stc
mov
cs
dec
xor
jmp
mov
repz
arpl
pop
dec
xchg
pop
mov
pop
js
or
daa
inc
sbb
jnp
out
jle
stos
daa
adc
mov
mul
dec
xlat
addr16
dec
mov
push
pop
dec
in
sub
clc
lods
pop
sbb
stc
loop
int
or
xchg
jno
dec
cwtl
out
or
lcall
iret
adc
movsl
lods
jb
adc
sbb
orl
addb
xchg
mov
shll
add
mov
jnp
sti
jns
insb
push
pop
addb
and
arpl
addr16
gs
or
popa
loopne
push
dec
adc
or
out
test
push
cmpb
jmp
inc
push
sarl
frstor
pop
push
mov
mov
fcoml
cmpsb
filds
popf
hlt
pop
add
jno
and
push
es
sbb
cmp
sub
test
or
inc
aam
frstor
mov
push
movsl
pop
mov
leave
mov
or
or
pop
pop
sub
jo
in
cmp
sahf
shl
xchg
iret
scas
test
cld
aaa
jmp
cs
cmp
pop
adc
pop
out
stos
inc
push
push
sar
cmp
fucomp
out
cs
ljmp
popa
cs
mov
mov
mov
sub
inc
aaa
test
mov
push
xor
jp
in
push
xor
je
cs
inc
in
or
dec
adc
jle
ja
xrelease
fidivs
cmp
test
ja
rol
mov
cmpsl
or
push
in
mov
mov
insl
adc
test
test
out
or
push
or
jmp
js
fadd
jo
sub
ds
push
inc
leave
and
inc
xor
icebp
stc
or
inc
roll
push
add
int
je
push
out
incl
mov
jmp
fistl
test
lods
fnsave
aam
mov
ljmp
arpl
jl
sarb
mov
call
shlb
cmp
rorb
push
pop
addl
mov
mov
out
jae
out
xlat
cld
or
lock
leave
xor
fcoml
or
push
test
inc
push
cwtl
add
adc
and
mov
mov
fldpi
out
aaa
out
adc
fs
daa
lea
out
sub
aad
dec
xor
repnz
adc
inc
subb
sti
jp
or
sub
sti
push
out
incb
add
out
fnstcw
xchg
dec
gs
mov
or
jb
sbb
or
aas
xor
out
cmpsb
fstl
jbe
or
iret
ja
mov
or
js
aad
pop
cmp
and
lret
mov
std
jp
lods
js
sahf
adc
jne
xchg
adc
aaa
xor
xchg
sbb
dec
fwait
inc
sub
pop
dec
js
icebp
mov
cmp
ds
filds
psrld
push
jl
mov
stc
jbe
xlat
jmp
jae
mov
inc
add
sub
dec
inc
push
cli
adc
mov
sti
outsb
xor
enter
into
xchg
aad
popa
mov
jge
mov
insb
fdivs
aaa
or
enter
cli
push
int
adc
push
shl
xor
lahf
aaa
insl
movsl
or
test
sub
mov
mov
or
js
mov
ret
cmp
cmp
lahf
adc
clc
fcomi
gs
mov
cmpsl
cmp
shr
push
jb
or
stos
cmp
mov
out
fcmove
outsl
add
push
jbe
mov
imul
mov
insb
mov
test
inc
addr16
loopne
aaa
fwait
std
scas
movsb
inc
inc
sub
mov
test
mov
repnz
rcrb
mov
out
inc
xchg
push
sbb
ja
jmp
fimull
jbe
push
rorb
cmpsb
fstps
mov
insb
pop
cli
sub
cmpsb
rclb
std
cld
and
pop
js
insb
je
or
dec
ficomps
arpl
pop
xchg
pop
ja
push
popa
lahf
inc
test
cmp
ja
push
je
or
mov
jmp
repz
jno
sti
repz
jge
scas
jbe
aaa
ja
orb
sahf
add
xchg
adc
repnz
cmpl
add
nop
subb
cmc
inc
adc
stos
mov
sub
mov
adc
jno
pop
aaa
cltd
dec
in
sub
fnsave
outsb
insl
adc
mov
mov
cmp
ret
xor
stos
lock
add
in
shll
loop
dec
in
rorl
stc
inc
es
ljmpw
xchg
sti
movsb
jo
mov
push
and
dec
ljmp
call
or
push
xchg
pop
xchg
int
mov
adc
fmuls
sbb
stc
xchg
dec
mov
or
jb
fstpt
hlt
push
into
outsl
cmp
xor
mov
inc
push
std
push
movsb
outsb
mov
and
in
mov
fst
push
mov
addr16
leave
mov
xor
xlat
mov
pusha
or
sub
add
lahf
push
stc
int
fwait
xchg
movsb
inc
dec
mov
aaa
jg
hlt
jns
in
rcrb
and
jnp
xchg
push
pop
jno
sbb
xor
out
mov
add
push
repnz
lahf
std
and
stc
cmp
dec
test
nop
outsl
xchg
pop
cmp
out
loopne
pop
insb
xchg
mov
mov
ja
or
xor
pop
mov
dec
push
movsb
fisubrs
add
mov
inc
sbb
jno
or
or
cld
jne
dec
add
push
adc
leave
adc
sub
inc
bound
ljmp
dec
cli
ret
xor
mov
cmp
aas
daa
push
inc
test
sub
inc
xchg
aas
jle
stc
cmp
es
adc
decb
ljmp
inc
out
cmpsl
les
addl
adc
stos
jp
rcll
sub
cli
inc
jge
sub
lods
mov
pop
div
stc
repz
push
cld
jns
mov
out
and
push
pop
sti
adc
cmp
aad
popa
push
adc
pop
jne
sarl
push
gs
sahf
jno
pop
pop
aad
clc
ss
frstor
cmpsl
xor
or
sbb
and
inc
ds
in
lods
mov
add
or
mov
mov
jns
pusha
cmp
mov
int
adc
insb
push
inc
pusha
dec
jbe
orl
sbb
push
adc
mov
mov
mov
sub
sti
xor
xchg
in
testl
pop
mov
and
push
adc
test
jb
jns
adc
ds
mov
sbb
daa
dec
out
test
xchg
jg,pt
cli
cmp
je
es
adc
fs
dec
repz
jmp
popa
mov
ds
add
push
jmp
push
loope
jmp
pop
dec
pop
ret
std
addl
inc
je
xchg
mov
cmp
sbb
imul
daa
mov
xor
xor
and
outsb
sub
xchg
jle
insb
mov
jmp
adc
lods
addr16
enter
flds
xor
add
fucomp
cmp
adcl
jno
cmpsl
xor
push
adc
mov
add
popw
inc
sub
aas
pop
jl
cmp
sub
push
test
hlt
xor
test
es
adc
mov
scas
ljmp
xchg
jge
inc
inc
mov
js
bound
adc
xor
inc
fcoms
cld
pusha
leave
fisttpl
xchg
sub
daa
or
inc
sbb
adc
pop
sub
jae
push
xchg
mov
ds
pop
mov
cwtl
jb
cmc
push
jb
sti
addr16
fmuls
cltd
push
insl
les
pop
jno
sarb
pop
lret
mov
sub
incb
push
ficoml
mov
lea
and
jmp
daa
inc
nop
xchg
lea
dec
icebp
push
cmp
adc
paddusb
jae
xor
test
pop
arpl
push
adc
inc
sub
pop
orb
mov
pop
arpl
nop
or
push
adc
mov
dec
fadds
nop
or
lods
sub
dec
mov
je
loop
adc
fdivl
dec
sbb
cmp
sub
shlb
lock
jmp
add
jg
cmp
fs
dec
ss
sbb
int
sbb
xchg
push
dec
cmp
inc
sub
push
into
jg
mov
add
xchg
push
in
adc
adcl
and
adc
xlat
movsl
test
mov
notb
jmp
fsubs
cwtl
add
test
push
aaa
cmp
mov
sub
movsb
push
arpl
push
or
sub
mov
rclb
dec
idiv
lods
popa
movsb
jge
outsb
ficoms
in
cmp
inc
xchg
mov
cmp
pop
mov
orb
sub
std
sbb
inc
out
mov
je
mov
hlt
mov
mov
push
repz
mov
sbb
es
jo
or
push
jg
jo
ljmp
aam
outsl
jle
int
das
fstl
pop
pop
sahf
xor
clc
repz
sub
xchg
leave
mov
pop
mov
or
das
iret
out
jle
call
push
xor
and
mov
mov
fld
sbb
cmpsl
mov
or
jb
out
dec
out
jl
lahf
gs
mov
xchg
ret
scas
sub
cmpsb
gs
pop
pop
jg
cld
adc
push
xor
cmp
jge
leave
xor
jnp
loop
push
repnz
lahf
push
addr16
sahf
xlat
inc
or
or
mov
inc
imul
popa
ljmp
jb
dec
fwait
inc
xchg
cmpsl
aaa
mov
or
jb
out
dec
out
jl
aad
aad
or
fiaddl
loop
push
dec
out
mov
mov
clc
ret
rcrb
addb
ljmp
enter
shll
xchg
lods
add
mov
push
imul
jo
fs
scas
std
mov
mov
fs
push
addr16
sahf
xlat
dec
or
mov
das
adc
popa
fwait
pop
aam
jb
sub
xchg
outsb
fbstp
hlt
mov
jnp
les
mov
jbe
aam
xchg
jl
cmc
push
push
es
adc
cli
lahf
cmp
adc
sar
stc
push
and
insb
lahf
jecxz
les
insb
mov
test
js
xor
out
cs
adc
dec
mov
sti
fdivrs
push
adc
enter
mov
mov
or
loopne
dec
negl
or
push
cmp
add
ffree
and
int
movsb
test
or
dec
lds
inc
xor
sbb
orb
arpl
dec
fstps
xlat
je
or
icebp
rcrl
clc
mov
adc
shll
inc
add
or
es
loope
mov
sbb
ret
pop
mov
mov
outsl
inc
dec
jmp
pop
jns
xor
mov
sbb
mov
mov
divb
xchg
add
jb
dec
xchg
jmp
dec
dec
or
fistpl
outsb
add
scas
push
xchg
xchg
add
stos
sti
lods
jge
inc
sbb
pop
cmp
jge
xorb
push
mov
dec
loopne
inc
pop
push
insl
and
pusha
shll
xchg
sub
testb
jmp
or
daa
outsb
pop
fisttpll
sahf
cld
fcmovne
pop
jo
pop
push
sub
lahf
xchg
rcll
jl
or
es
adc
sbb
aam
insb
push
adc
aaa
inc
pop
adc
test
js
xchg
test
pop
adc
push
jns
loop
adc
jl
addl
mov
xchg
movsl
fwait
mov
cwtl
rolb
fcoms
psadbw
sahf
dec
fwait
adc
push
test
sub
in
fsubl
push
mov
push
ds
pop
dec
aam
aaa
or
ljmp
fcmovnb
adc
lcall
add
mov
sbb
mov
jmp
xor
and
jle
je
cmp
inc
pusha
xchg
sub
mov
insl
aaa
pinsrw
jno
icebp
dec
jle
cmp
mov
dec
mov
xchg
sbbl
sub
test
pop
add
fdivrs
or
shrl
leave
inc
sbb
dec
adc
add
or
adc
sub
adc
loop
clc
jbe
or
xor
in
test
mov
mov
cli
into
hlt
mov
add
adcl
es
out
cmpl
mov
insb
mov
cmp
fs
mov
imul
mov
cmp
ja
pop
insb
mov
jecxz
mov
popf
add
pop
mov
nop
daa
push
into
mov
in
jp
sbb
int3
push
push
filds
enter
dec
adc
jnp
mov
sar
jmp
clc
inc
adc
gs
sahf
loope
popa
mov
lret
pop
je
repnz
cmp
jle
stc
sbb
js
divb
sub
jnp
in
cmpb
les
jb
outsb
leave
pusha
dec
jns
mov
adc
and
mov
mov
push
cmc
je
aad
fsubrs
idivl
push
js
jo
repnz
cld
imul
jge
std
fcomps
lahf
mov
aam
jle
out
or
lcall
ss
xchg
xor
shll
sbb
pusha
popa
idivb
and
pop
clc
aad
pop
cli
xlat
and
xchg
inc
aad
fnstenv
idivl
pop
aam
jnp
cmpsb
dec
lahf
jge
shll
adc
fcomps
add
mov
mov
ja
mov
mov
mov
inc
int
or
out
mov
pusha
lds
ja
mov
lcall
xor
fs
setge
sahf
shrb
imul
pop
fincstp
jae
call
pop
arpl
mov
push
in
fcomps
repz
es
mov
int3
nop
xor
fmull
or
sahf
sbb
sahf
dec
sub
iret
inc
push
in
int3
cmp
or
sarl
jmp
push
repz
ja
ss
stc
fstpt
xchg
or
aam
aam
nop
sti
arpl
pop
sbb
inc
dec
int3
mov
xchg
inc
mov
xor
sti
jge
ljmp
pop
movsb
jns
ds
jl
add
nop
mov
lahf
into
or
push
mov
loope
sub
pop
or
sub
sub
insl
xor
mov
and
xorb
push
push
mov
insl
push
mov
jb
in
mov
cld
cmp
jl
dec
push
cmc
mov
xchg
notl
dec
in
sub
fnstcw
sub
fists
push
bound
sbb
xchg
mov
lds
add
je
dec
sahf
leave
jge
decb
dec
jp
jbe
cmp
mov
pop
scas
sbb
mov
out
mull
xchg
ja
pushf
test
insl
fs
dec
mov
inc
in
aaa
dec
mov
pop
popa
insl
mov
outsb
sti
xlat
inc
mov
cmpsl
test
imul
cmpsb
push
aad
stos
repz
pop
sub
ficoms
mov
dec
cmpsl
sub
clc
movsb
push
repnz
mov
rorl
insb
xor
lahf
cmp
sub
aaa
or
pop
push
movsb
xchg
pushf
sub
popa
or
pop
fcmovne
or
addr16
push
rorb
mov
mov
mov
cmp
aam
ret
dec
cwtl
out
cltd
xor
pop
aad
fs
enter
adc
outsb
fyl2xp1
and
cli
nop
and
jl
ja
test
ljmp
out
aas
in
mov
push
or
aam
cmp
es
adc
lret
je
loope
add
pop
or
les
inc
push
push
sahf
adc
sbb
jge
cmp
rorb
jmp
rclb
test
ss
xchg
daa
les
in
clc
repz
xor
sarb
aad
xor
xor
leave
nop
loopne
inc
xor
sub
repz
pop
out
xchg
inc
or
and
sub
adc
jle,pt
ds
mov
adc
xor
jo
pop
js
test
pop
or
adc
cmc
mov
ljmp
out
sub
sub
mov
into
push
mov
add
addr16
mov
lods
mov
lods
mov
mov
sti
outsb
ja
sbb
push
sahf
jle,pt
jl
fnstcw
mov
shll
sub
cli
ss
fdivrs
fwait
xlat
ret
dec
cli
repz
sub
rcll
jae
mov
pop
mov
ljmp
fbstp
jecxz
or
test
popf
arpl
pop
mov
leave
sbb
adc
jbe
xor
sub
cmp
jle
int
push
lahf
pop
pusha
lahf
pop
js
mov
ret
je
xor
addl
pop
das
icebp
mov
mov
pop
push
pop
xchg
andl
outsb
and
add
hlt
int
xor
xchg
pop
daa
ret
and
push
push
or
adc
jge
rcl
idivb
xchg
stc
fwait
repnz
push
adc
jmp
and
mov
adc
lret
lods
mov
mov
sub
js
fldenv
mov
mov
bound
test
and
daa
cmpsb
jle
dec
popf
jbe
roll
popa
outsb
ret
lods
movsb
xchg
cmp
orl
insl
aad
pop
shr
aam
push
icebp
inc
div
add
inc
outsb
push
iret
lods
jb
pop
sbb
cwtl
je
mov
fisubrl
add
imul
dec
ret
push
js
fnstsw
test
jg
pop
punpckldq
xchg
ss
fstl
lea
out
dec
jns
xor
push
repz
arpl
insl
jecxz
and
and
imul
push
repnz
xor
idiv
addl
fisubs
shufps
sbb
scas
or
outsl
xor
adc
stos
es
adc
sbb
xchg
out
test
or
push
out
mov
dec
addr16
jo
dec
jecxz
rcl
orb
sbb
cmp
stc
push
pop
dec
test
shlb
pop
add
aaa
shlb
insb
fldenv
clc
mov
cmpsb
push
inc
cmp
jbe
jmp
or
mov
es
adc
mov
outsl
add
cwtl
cmp
cmp
stc
cmp
loopne,pn
sub
inc
fidivl
xchg
push
call
stc
cmp
lods
mov
movsb
mov
jle
fwait
mov
shrl
xor
test
mov
gs
pop
movb
jle
mov
out
rcl
jle
adc
ss
mov
repz
cmp
ja
mov
inc
mov
mov
into
or
cmp
cltd
jl
mov
cmp
lret
mov
in
cwtl
subb
mov
inc
xchg
inc
rcrb
jb
xchg
lahf
gs
stc
dec
pop
enter
push
adc
je
push
test
dec
ljmp
jno
fwait
dec
mov
ret
mov
or
mov
lods
sbb
repz
push
hlt
pop
jbe
fwait
test
cmp
js
jo
inc
in
and
shlb
jne
push
out
lock
ror
and
jne
xlat
hlt
xchg
jle
xlat
es
adc
outsb
cmc
mov
lahf
insl
sub
pop
push
rclb
or
fwait
mov
rolb
xchg
add
sbb
push
iret
cltd
add
and
push
pop
pop
in
fnstenv
mov
ljmp
clc
das
cmp
and
fisubrl
and
ret
arpl
or
push
xchg
xor
xor
dec
mov
imul
dec
jmp
add
stos
movsl
mov
loop
std
inc
outsb
out
fnstsw
sub
adc
test
pop
cmpl
out
sub
mov
adc
pop
adc
sbb
adc
pop
in
adc
adc
xchg
and
in
push
pop
mov
mov
xchg
fwait
int3
push
adc
jbe
inc
push
iret
lahf
ds
jl
ss
cmpsb
fistl
mov
daa
dec
lahf
mov
clc
mov
outsb
mov
jl
flds
xlat
in
sbb
int
cmp
mov
mull
jbe
mov
aam
xchg
std
mov
insl
jg
rcl
hlt
lods
jns
inc
fnstsw
inc
cmp
pop
xor
call
js
out
fcmovb
arpl
iret
inc
iret
aam
xchg
or
lods
cmc
popa
cltd
mov
sbbl
xor
jmp
sti
push
xchg
stos
mov
insb
jmp
xchg
mov
pop
lds
lds
adc
pop
stc
pusha
dec
xlat
das
enter
mov
roll
stos
ljmp
mov
mov
and
packuswb
or
cld
lods
xchg
inc
inc
out
mov
mov
out
rcl
cmpsl
jb
repnz
sub
aad
lahf
xchg
andb
popa
inc
fcoml
lea
jb
fistpl
inc
scas
cmc
inc
mov
mov
sub
push
js
ds
mov
es
adc
ljmp
xchg
sbb
lods
insb
sub
hlt
mov
lret
mov
mov
aad
movsl
in
fisttpll
sub
call
fwait
push
pop
lret
push
push
std
cmpsl
adc
mov
pop
push
adc
mov
push
pop
mov
sbb
push
pop
inc
sub
adc
mov
dec
es
lahf
add
mov
scas
mov
dec
outsl
ret
std
adc
test
into
in
sbb
dec
in
lods
mov
cmp
loop
daa
pop
mov
mov
ficoms
xchg
inc
mov
leave
or
mov
aaa
and
aaa
cmc
sahf
jno
cmp
sub
jns
sbb
insb
add
add
jno
cld
jo
or
dec
cmpsb
mov
and
ficompl
sbb
jmp
clc
cmp
adc
repz
pop
les
fadd
divl
inc
imul
mov
fimuls
scas
mov
aas
stos
mov
and
mov
xrelease
cmp
push
fstpl
enter
xchg
into
add
test
push
das
insl
dec
push
cmp
jmp
cmc
xchg
mull
add
or
cmp
xchg
test
xchg
aaa
out
sbb
rorb
adc
pop
mov
jge
fnsave
or
pop
mov
mov
subb
lock
mov
inc
rclb
xchg
adc
in
lea
push
out
rcll
and
mov
xor
test
pop
mov
push
jl
jne
and
ds
call
xchg
fistl
pop
cli
or
and
ss
popa
ffree
jmp
mov
lods
and
jo
push
push
sub
sub
cmp
in
orl
incb
fistl
pop
cli
or
and
ss
popa
aad
out
lea
and
cmc
repz
jae
sub
jl
pop
sarl
mov
enter
fstp
gs
cmpsl
imul
add
out
es
jge,pt
jl
fldlg2
sahf
fistl
lods
mov
inc
nop
mov
mov
je
inc
or
pusha
lahf
mov
mov
leave
lods
dec
movsb
jns
fstpt
fists
dec
insl
adc
mov
cmpsb
and
test
cli
lahf
aam
and
lahf
push
xor
cwtl
pop
cmp
test
push
mull
mov
or
push
pushl
and
cwtl
mov
mov
js
jnp
sti
fucomp
add
addl
mov
mov
icebp
sbb
cwtl
adc
stos
jl
xor
and
ss
gs
cmp
xchg
push
adc
daa
cmp
jns
stos
in
and
das
and
push
mov
mov
and
arpl
fwait
popa
es
sbb
int
or
mov
pop
pop
adc
mov
adc
outsl
push
bnd
movsb
mov
push
jnp
cltd
popa
movb
sbb
int3
or
push
in
cmp
cmpsl
rcll
inc
loop
inc
out
sti
out
imul
imul
lret
cli
inc
icebp
inc
lahf
adc
add
and
lds
mov
rcl
movsb
xchg
int3
dec
iret
aad
xor
sbb
pop
nop
mov
mov
jge
pop
xlat
mov
jb
nop
aam
dec
cli
in
adc
mov
dec
fcomip
icebp
mov
fdivl
jle
jg
xchg
lock
sub
sub
or
fwait
xor
xchg
stos
push
jnp
je
popa
dec
mov
orb
xchg
out
fmull
push
in
mov
mov
mov
jnp
xor
dec
xchg
ljmp
jns
dec
pushf
in
jno
fldt
sbbb
push
jbe
xchg
add
gs
jge
adc
fiadds
divb
pop
push
xchg
fidivrl
ret
push
sti
sahf
sub
push
pop
xchg
loop
and
push
adc
int
cmp
jae
repnz
adc
sahf
inc
les
add
push
sub
add
xor
adc
adc
jae
cmp
push
adc
or
ja
sub
jmp
adc
gs
mov
push
js
enter
cmp
not
sbb
lahf
or
imul
stos
ror
xchg
mov
enter
jo
fwait
popf
faddl
fmul
add
cwtl
or
cs
ss
mov
mov
push
mov
xchg
mov
rclb
stos
les
adc
inc
out
dec
fbld
lods
jne
dec
push
mov
add
xor
cmpsb
inc
stc
js
mov
pop
out
das
inc
dec
adcb
sar
iret
push
mov
dec
icebp
cld
sbb
lods
in
cmp
and
insb
out
sbb
enter
fwait
nop
fldl
cmc
and
sti
aas
mov
pop
pop
in
jns
inc
sub
sbb
mov
push
arpl
mov
and
xchg
mov
outsl
fidivl
push
in
push
scas
nop
xchg
cmpsl
mov
iret
lahf
jge,pt
xor
pop
xchg
inc
test
ss
mov
aaa
xchg
ja
or
dec
pop
sub
mov
test
ss
cmpsl
dec
enter
aaa
repz
pop
xlat
loope
or
gs
adc
push
js
mov
out
sbb
cmc
xor
pop
inc
loop
xchg
jns
adc
ljmp
test
lods
scas
out
xchg
or
jp
sbb
enter
pop
ljmp
xlat
cli
jae
mov
int
xchg
aas
jle
stc
test
or
sbb
lods
nop
mov
adc
mov
pushf
sbb
sbb
mov
adc
sbb
adc
testb
fadds
inc
mov
das
push
sub
fsubs
in
cmpsl
pop
flds
and
mov
repz
arpl
push
mov
sbb
sbb
mov
adc
popa
out
adc
testb
loopne
mov
sub
fsubs
in
cmpsl
int
addl
xchg
mov
repz
arpl
push
mov
sbb
cmpsl
inc
fiaddl
or
cmpsl
mov
andb
daa
mov
int3
out
lds
jmp
ret
cmp
mov
test
sar
jo
fs
fcmovnb
pushf
arpl
aas
out
stos
sub
popf
cmp
jbe
mov
movsb
movsl
cmpsl
into
jne
cltd
and
inc
shrb
ds
scas
lret
into
lock
scas
imul
xchg
cmp
push
lahf
pop
mov
arpl
out
aad
das
cmp
loop
jl
daa
push
adc
push
popa
out
movsb
xchg
push
or
add
fcomip
pop
sub
sub
flds
int
cmp
arpl
jle
mov
mov
popa
inc
or
or
push
pop
popf
adcl
jns
sbb
adc
pop
stc
cltd
sarb
push
es
mov
mov
imul
cmp
lret
popf
test
cltd
pop
outsl
jo
cmc
leave
inc
in
test
aad
mov
or
push
add
aam
fists
enter
cs
mov
test
inc
sbb
add
int
pop
int3
pop
cmp
mov
leave
jnp
pushf
fmuls
scas
cmp
sub
popa
js
adc
pop
int
mov
dec
and
js
xchg
dec
sub
lods
ss
jne
jp
jl,pn
sub
sub
jnp
popa
pop
into
mov
into
sub
cmp
pop
xchg
cmpl
call
lahf
xor
lods
dec
inc
das
inc
clc
pop
mov
pop
pop
mov
mov
push
pop
mov
lret
pusha
cwtl
shrb
shrl
mov
cltd
repnz
jp
or
sahf
or
ss
ss
jne
sbb
mov
jl
fiadds
jle
out
xor
jns
mov
adc
loope,pn
sbb
dec
fs
shrl
mov
ret
stc
gs
inc
movsb
js
jg
mov
sbb
daa
iret
scas
xor
push
addr16
and
pusha
shrb
push
add
mov
subl
xor
movsl
mov
ret
xor
adc
sbb
stc
adc
inc
andb
fistps
in
rcl
pop
mov
or
sbb
xlat
popf
jl
mov
inc
sbb
lret
popf
jge
leave
xor
jge
js
fdivl
mov
pop
xchg
clc
cmc
lock
insb
sbb
mov
cmpsb
cmp
int3
mov
sti
pop
and
inc
jge
rcrl
xor
pop
addb
mov
pop
cmp
imul
fnstenv
inc
cmp
mov
xchg
sub
mov
pop
push
aad
jg
pushf
fnstsw
mov
addr16
jno
pushl
and
mov
testb
ds
cwtl
fnstsw
push
and
add
stc
xchg
dec
pop
mov
jb
adc
xchg
inc
enter
aad
push
enter
iret
mov
adc
or
xor
idivb
xor
xor
or
outsl
fwait
sbb
pusha
dec
jb
mov
inc
addb
test
add
sub
push
out
test
mov
jp
cmpsb
lods
mov
inc
sub
push
adc
ds
cmpsb
dec
sarb
sbb
pop
mov
mov
insb
adc
jb
add
add
adc
cmp
lahf
mov
lock
insb
pop
nop
mov
push
je
stos
inc
scas
pop
add
mov
fstpl
sub
or
daa
mov
jl
hlt
sub
bound
add
xor
xlat
and
mov
cld
sarl
cmp
fildll
jne
aad
fs
pushw
pop
xchg
inc
xchg
lds
mov
and
mov
clc
jg
es
mov
movsb
data16
sbb
movsb
push
addb
xor
inc
aam
sub
ss
cmp
jae
and
ret
fidivrs
pop
cmp
insb
int
xor
imul
mov
in
jle
ror
aam
fwait
arpl
sub
and
test
inc
repz
iret
popf
shl
sbb
cs
mov
lods
or
fwait
and
shrl
and
pop
jl
enter
xchg
subl
jns
sub
lcall
insb
icebp
rol
icebp
out
add
data16
mov
pop
push
xor
repnz
jo
enter
adc
cmpsl
int3
cltd
cmp
mov
cmp
mov
jge
cmc
mov
dec
ds
sub
mov
fisubrl
dec
xor
adc
test
jl
inc
insb
lods
sub
jae
ret
sbb
xchg
lea
mov
aaa
pop
adc
mov
cmp
pushf
stos
jge
mov
fidivrl
lods
jp
jecxz
xor
lods
pop
fcmovnb
xchg
lret
xor
pop
push
shrl
mov
aas
lahf
xchg
rcll
jl
dec
and
push
fwait
cltd
fildl
in
jecxz
inc
fdivs
cmp
lds
lods
lret
jge
mov
cli
cmc
insb
push
pop
repz
gs
and
repnz
jo
mov
adc
pop
lock
cmp
dec
adc
sbb
jmp
inc
dec
mov
ficoms
stos
test
push
xor
iret
jmp
repnz
jp
je
insb
bound
fnstsw
test
dec
imul
es
ret
pop
mov
dec
outsl
or
or
push
adc
sub
mov
shr
xor
mov
shll
mov
pusha
test
fidivl
cmpsl
cmpsb
je
in
mov
adcl
push
xchg
or
dec
ja
lahf
push
pop
mov
mov
outsl
mov
pop
mov
or
outsl
enter
cmpsl
loope
dec
int
out
fdivrl
cmpsb
mov
jnp
les
icebp
and
stc
imul
push
les
cmpb
mov
idivl
cmp
out
mov
inc
sbb
fstpt
lock
mov
stos
data16
fwait
mov
mov
mov
sub
scas
or
xchg
cmpsl
mov
in
das
dec
ljmp
lret
cmc
aas
orb
adc
ljmp
cmp
int
lods
adc
enter
mov
mull
adc
sub
pop
mov
leave
shlb
enter
fdivrl
ljmp
mov
mov
test
sub
dec
cmp
dec
lahf
mov
clc
stos
or
adc
pop
sti
push
arpl
mov
push
out
xchg
inc
cltd
es
loopne
lret
stos
mov
in
jo
mull
cmp
addb
int
mov
test
mov
push
or
pop
jb
nop
out
fisubrl
cmc
mov
jae
lahf
insl
divb
jmp
shlb
pushf
stc
mov
divb
mov
jmp
movsl
lea
or
pop
push
leave
mov
gs
jg
lcall
push
ljmp
mov
jl
aad
or
xlat
cld
aad
pmaddwd
xchg
fdivrs
xchg
xlat
test
pop
or
outsl
test
jmp
test
imulb
lcall
cli
cmpsb
mov
gs
jae
in
pop
jns
in
out
mov
repz
lret
into
cli
sbb
je
or
xchg
lock
scas
cwtl
imul
push
fadd
inc
roll
movsb
aaa
repz
sbb
and
add
fcmovnbe
dec
dec
add
pop
cmpsb
mov
dec
jnp
xchg
pop
popa
mov
loop
jl
cmpsl
cmp
mov
mov
fidivs
lea
fs
stos
cli
out
repz
incb
push
shrb
popa
mov
mov
mov
dec
imull
mov
in
shrl
jns
outsb
and
push
cld
fnstenv
int3
aam
dec
out
imull
rcr
hlt
mov
push
sub
cmc
ss
pop
sbbl
in
mov
ss
sub
sbb
mov
and
xorb
fadd
push
nop
icebp
pop
sbb
mov
cmp
cld
xchg
xchg
push
and
and
loope
les
mov
or
inc
jl
lret
scas
mov
jbe
aad
mov
jno
cltd
ficoml
mov
call
xchg
or
test
mov
and
push
jno
bound
mov
jecxz
lods
jo,pt
push
cmp
test
mov
mov
push
pop
mov
and
imul
push
adc
sbb
fldt
pop
data16
adc
roll
mov
xchg
fstp
cmove
stos
insl
sub
ret
daa
imull
xor
cld
push
push
mov
sub
xchg
or
or
sbb
add
adc
test
ljmp
push
dec
jle
sbb
mov
pop
cmpsl
cmp
out
and
jp
xchg
inc
xchg
inc
mov
xor
cli
in
bswap
fmuls
mov
xchg
xchg
lret
cli
in
scas
aaa
cmp
hlt
jns
out
lret
push
dec
test
mov
inc
dec
int3
cmp
push
daa
push
adc
shrl
and
dec
mov
iret
cli
mov
inc
mov
adc
pushf
push
popa
sub
dec
sbb
mov
jns
aaa
int
add
xor
fisubl
mov
mov
icebp
inc
pop
dec
scas
divl
xor
in
or
push
mov
adc
xchg
ds
dec
xor
xlat
daa
cs
or
subb
mov
cld
out
scas
pop
mov
or
push
adc
jp
jmp
leave
imul
push
jg
aam
fstp
xchg
addr16
in
mov
mov
out
mov
or
jl
and
popa
adc
mov
cltd
rcrl
aaa
insb
fadd
ror
and
lods
addl
jge
divl
sub
mov
jb
out
fldpi
push
leave
stc
daa
cmpsl
popa
movsb
jge
xor
adc
cmp
sbb
mov
sahf
sbb
fcmovbe
repz
or
xor
pop
lea
fnstsw
sub
or
filds
xor
cmp
ja
nop
leave
pop
adc
and
pusha
xchg
leave
pop
adc
lock
es
fwait
loop
cmp
movsb
cmp
adc
testb
adc
icebp
out
cmp
inc
test
jecxz
xchg
arpl
xchg
pop
inc
cmpsb
mov
call
sti
jp
jmp
imul
jg
fs
push
adc
pushf
push
in
or
jg
mov
mov
push
int3
pop
adc
pop
dec
push
pushw
jbe
fsin
cli
jne
xchg
call
cltd
lret
int3
pop
adc
fimuls
xlat
push
int3
pop
adc
xor
cmp
pop
push
int3
pop
adc
jo
mov
test
test
add
lock
dec
cltd
mov
adc
pushf
mov
icebp
sti
loop
lret
cli
out
daa
mov
xchg
ret
pmullw
or
add
adc
dec
and
jmp
int3
pop
adc
jne
xchg
aas
movsb
hlt
inc
push
das
aaa
cmp
test
sbb
sbb
dec
test
lods
test
xor
pop
xchg
ret
mov
leave
cmp
js
fldt
std
and
sub
xchg
pop
sub
outsl
jp
add
ja
shll
ja
adc
ret
jmp
inc
push
cmpsb
xor
rol
or
inc
sbb
loopne
or
scas
mov
hlt
mov
mov
aaa
and
mov
subb
cmp
xchg
cmpsl
cwtl
mov
arpl
sub
popa
in
mov
fldl
in
daa
cltd
jge
adc
repz
or
lret
call
push
xchg
xchg
cld
or
cld
pusha
push
adc
inc
cmc
popf
rcrb
pop
push
sub
cli
pop
adc
fistpll
xchg
das
mov
sbb
mov
or
and
fdivrs
push
cmp
jmp
adc
or
inc
sub
jo
daa
xchg
sti
test
fnsave
adc
jmp
addb
dec
adc
test
dec
mov
and
movsb
dec
adc
or
fdivrp
push
jle
ret
xchg
popf
ds
arpl
bound
adc
sub
jmp
idivb
dec
push
jbe
push
fcoms
or
push
test
out
pop
mov
dec
or
push
call
inc
fsubl
adc
cs
adcb
mov
or
and
cld
pusha
push
adc
pop
inc
sbb
outsl
sub
repnz
push
fsubl
adc
fldt
insl
mov
jb
dec
xor
xlat
dec
idivl
push
push
int3
fsub
sub
mov
test
pop
test
ja
ss
neg
imulb
jns
jne
mov
mov
xchg
pop
mov
xchg
mov
xchg
mov
sub
arpl
cmpl
ja
adc
sahf
je
xlat
lods
sub
rcrb
loop
addl
inc
jge,pt
popf
out
lea
les
push
gs
insl
fsubs
fs
adc
mov
adc
lea
adc
sub
int3
pop
adc
inc
enter
cmc
shlb
push
push
mov
adc
sti
jp
lods
ljmp
mov
loope
insb
fdivs
jb
or
lods
sub
mov
and
dec
fwait
sbb
jns
stos
mov
adc
fstl
mov
frstor
xor
mov
es
into
adc
cld
test
xchg
jb
ds
inc
mov
xlat
mov
data16
inc
push
push
mov
sar
jmp
mov
adc
fstpl
lods
pop
in
jnp
es
fwait
seta
dec
into
xchg
pop
adc
cld
inc
rolb
mov
stc
aaa
pop
mov
adc
push
adc
inc
push
stc
jnp
movsl
out
fstl
mov
push
aad
adc
mov
adc
ret
push
xlat
in
popf
pop
or
mov
adc
sbb
or
fildl
pop
adc
popa
outsl
sbb
sbb
lock
inc
mov
adc
mov
mov
dec
cwtl
inc
cwtl
dec
adc
adc
cltd
cmp
sbb
fld
adc
or
mov
xchg
and
push
rorl
or
pusha
lret
sti
sbb
adc
subl
sbb
or
and
jno
xchg
or
int
mov
mov
test
subb
addr16
adcb
call
or
push
jno
xchg
jno
xchg
push
jg
test
pop
inc
cmp
leave
por
bound
test
or
adc
push
and
outsl
loopne
cmp
orb
inc
push
sahf
push
cmpsb
data16
addr16
or
add
adc
push
xchg
add
mov
adc
hlt
pop
fs
test
popf
xchg
mov
loopne
pop
adc
fs
shll
pop
rorl
mov
adc
or
fwait
test
mov
gs
mov
insl
shrl
psubq
mov
bound
adc
mov
adc
movsl
xor
dec
in
inc
or
outsl
roll
mov
mov
adc
fs
and
mov
push
mov
pop
sub
lcall
add
ds
mov
into
cmp
loopne
aam
inc
mov
or
add
inc
pop
pop
testw
mov
out
inc
sbb
out
out
jge
outsl
aas
inc
mov
push
adc
mov
arpl
jecxz
and
push
sbbl
push
jle
sbb
mov
aad
leave
pop
adc
push
inc
xor
cmpsl
stos
loop
out
fisttpll
or
test
mov
jnp
cmp
pop
pop
mov
jns
enter
push
adc
stos
or
or
mov
repnz
adc
mov
push
or
push
add
push
xor
push
or
aas
add
or
jmp
mov
mov
hlt
ret
cld
pusha
push
adc
mov
hlt
enter
or
repz
in
jo
or
and
aaa
sub
iret
sub
ss
filds
sbb
adc
sbb
and
dec
incb
push
or
add
or
fsubl
jmp
add
xor
xor
push
or
lahf
pop
jnp
stc
or
fsubl
adc
and
mov
inc
push
push
mov
sar
decb
sub
roll
pusha
push
adc
cld
or
mov
lahf
mov
or
jge,pt
mov
call
mov
push
jmp
cmc
rcrb
iret
sarb
in
cld
mov
and
inc
int
in
fnstenv
xor
cmp
jo
mov
jge
out
fnstsw
mov
ret
ljmp
popl
jge
mov
jge,pt
jp
aad
jb
push
push
pop
mov
test
ss
lods
pop
cmc
aas
adc
lret
sahf
iret
shrl
jl
push
jno
insl
pop
scas
pop
mov
cmp
lods
insb
fdivs
push
mov
adc
mov
inc
mov
xor
jae
movsb
test
or
jno
lahf
sbb
pusha
push
loopne
or
lea
ja
scas
paddsb
jae
es
fwait
inc
pop
scas
ljmp
push
das
popa
rcll
mov
mov
inc
and
dec
adc
cmpl
ds
jg
mov
daa
sub
push
test
adc
cmp
xchg
insl
fnstenv
leave
xor
mov
in
fisubrs
and
aam
or
adc
pushf
cli
xor
adc
push
adc
pop
adc
cmp
jmp
xor
xor
and
pop
lods
pop
nop
xor
sbb
outsl
push
fiaddl
cmp
mov
sub
sub
jbe
adc
popa
mov
imul
out
xor
jge
mov
rclb
or
push
sbb
popa
push
adc
mov
in
jmp
push
mov
cmp
dec
iret
lahf
jge
cmc
push
cmpsl
nop
push
jns
loope
in
add
std
and
jnp
cmp
ss
or
add
std
mov
leave
mov
adcl
mov
test
sti
pop
sub
xor
cmp
mov
mov
movsl
fisttpl
pop
insl
jbe
stos
pop
pop
testb
bound
sti
int
int3
jmp
and
data16
jbe
dec
pop
leave
jns
add
sahf
jecxz
mov
shlb
leave
pop
adc
xlat
bound
inc
dec
cmp
sarl
cmp
or
lret
movsb
push
fidivrl
or
test
in
xor
mov
push
cmp
bound
adc
mov
decl
sbb
lcall
std
and
xor
ss
sub
in
stc
mov
cmpsl
xchg
stc
mov
sub
mov
movsb
mov
lds
aad
mov
or
sti
dec
fdivs
push
inc
push
in
out
lods
sub
or
test
mov
add
adc
xor
push
dec
subl
fisubl
push
xlat
dec
fiadds
pushf
frstor
mov
lcall
out
in
popf
adc
cld
mov
xchg
adc
adc
mov
mov
push
repz
xor
pop
sub
jmp
sbb
rcr
or
cld
pusha
push
adc
push
inc
dec
inc
fcom
jmp
imul
or
imul
les
xchg
push
aam
nop
sbb
flds
mov
push
testl
mul
add
adc
xchg
aam
xorb
clc
jl
repz
ret
roll
mov
call
dec
mov
pushf
mov
jno
xchg
sbb
pusha
outsb
mov
mov
mov
loopne
in
orb
fwait
xchg
daa
lock
or
adc
iret
lahf
mov
adc
push
and
out
or
call
push
stos
pop
pusha
rolb
scas
xchg
inc
or
push
aas
and
push
fnstsw
int
mov
test
lahf
aas
jle
jmp
bound
jb
and
in
cmp
mov
xor
leave
xchg
daa
mov
sub
xor
je
or
xchg
aaa
jno
pop
stos
lahf
mulb
sbbl
jmp
adc
add
gs
out
mov
pushf
sahf
ds
loope
insb
fdivs
push
or
dec
mov
addb
roll
pop
and
test
mov
mov
mov
xlat
enter
and
jge,pt
or
xor
mov
setp
push
out
sbb
addl
lahf
divb
push
xlat
cld
pop
mov
dec
out
les
adc
clc
mov
mov
add
jl
pop
lret
test
aam
loopne
insl
fnstenv
cli
lock
iret
cmp
fnstsw
pop
lcall
push
xchg
and
les
and
int3
jle
and
add
je
or
pop
cmp
inc
orb
push
mov
inc
xchg
loopne
adc
xchg
ret
ss
lock
hlt
or
insl
push
ficoms
jnp
jno
imul
mov
push
icebp
cmp
or
and
or
pop
sbb
dec
ret
int3
add
push
jns
xchg
jno
fiadds
rcll
lock
hlt
or
hlt
or
scas
mov
pop
and
or
hlt
inc
pop
call
or
add
adc
in
jo
cmp
inc
jg
ret
fsubs
push
repnz
arpl
mov
daa
lret
mov
mov
and
loope
aad
movsl
or
push
cmp
mov
xchg
cmp
and
fwait
push
cmpsl
add
dec
in
push
hlt
iret
or
mov
scas
insb
popa
or
je
or
mov
jno
int
stos
cmpsb
outsb
push
pop
int3
mov
push
sub
cmp
in
mov
dec
in
mov
jmpw
push
iret
das
out
lret
daa
call
mov
sbb
loope
sub
and
jge
decb
and
add
cmpsl
jae
pop
push
ja
mov
xor
or
xchg
adc
pusha
push
adc
mov
test
dec
sub
pop
adc
je
popa
push
adc
jp
push
movl
jmp
es
mov
xorl
arpl
pop
adc
insb
jbe
ficomps
jne
push
mov
into
push
loope
inc
push
add
adc
and
or
std
pop
adc
mov
pushf
arpl
adc
pop
hlt
addl
xchg
jno
fldenv
jl
cmp
dec
xchg
xchg
es
roll
arpl
lret
push
icebp
jae
lods
leave
pop
adc
cld
pusha
push
adc
mov
inc
or
flds
ds
not
sahf
sbb
xor
xor
inc
and
loop
xlat
and
push
adc
dec
cli
cmpsl
or
or
mov
out
sarb
or
push
pop
or
icebp
cmp
stos
or
push
int3
pop
adc
ja
je
fnstsw
pop
ss
imul
daa
dec
cmc
rolb
pusha
sub
popa
push
adc
clc
xchg
inc
sub
leave
xchg
stos
lret
addl
pop
adc
inc
inc
lods
leave
pop
adc
cld
pusha
push
adc
mov
daa
cmp
pop
adc
std
sub
jne
xlat
or
dec
xor
push
pop
inc
adc
xchg
aam
or
lahf
cmc
aas
pop
sti
or
cmp
push
outsl
and
dec
fwait
ss
nop
roll
adc
adc
data16
sbb
insl
adc
in
fnstsw
sub
pop
adc
daa
dec
je
mov
iret
push
push
sti
jl
mov
pop
jmp
lods
or
inc
push
fdivl
push
adc
jno
lahf
sub
mov
xor
pop
adc
leave
ret
sub
jle
jns
jmp
ljmp
adc
mov
mov
fs
daa
dec
pusha
mov
add
or
xlat
sbb
xorb
and
add
and
in
lods
movsb
out
leave
pop
adc
adc
xchg
mov
fildl
adc
leave
pop
adc
adc
lahf
insl
xor
cld
in
nop
cli
jnp
int3
pop
adc
and
aam
push
jns
jns
fidivl
rcr
sub
adc
outsb
xchg
mov
pop
and
push
loope
and
testl
lret
leave
pop
adc
sub
outsl
xor
sti
xchg
neg
outsb
fcmovne
adc
push
adc
leave
pop
adc
sbb
xor
mov
jns
sbb
xchg
nop
mov
inc
movsb
fstpt
mov
push
add
aas
aam
jmp
pop
mov
adc
and
add
add
jmp
sub
xor
add
pop
sbb
in
jb
dec
inc
xlat
sbb
ja
cli
vpsubw
cld
repz
add
cmc
rolb
loopne
sahf
fwait
cwtl
sub
jmp
in
packuswb
jbe
dec
into
xor
mov
inc
repz
xchg
and
fisubrl
shl
in
lds
or
sub
jmp
add
pop
adc
pop
test
push
std
cmpsl
adc
mulb
mov
push
adc
cmp
aad
cmp
dec
and
fnstsw
pop
lds
adc
nop
in
pop
adc
dec
add
inc
sub
mov
lock
dec
mov
das
int
push
inc
sbb
lods
lds
add
pop
adc
pop
mov
imul
pop
ret
inc
pop
insl
jp
fisubl
xchg
sti
aam
jmp
ds
sub
xchg
lahf
xchg
imul
ss
add
pop
adc
mov
push
icebp
pop
dec
out
add
pushf
or
dec
cwtl
lret
add
cmp
aad
sahf
dec
stc
notl
pop
push
xor
lahf
pushf
ficomps
jne
loopne
mov
stos
das
mov
mov
pushf
aaa
fsubl
adc
ret
adc
rcll
sbb
mov
fsts
pop
adc
rol
inc
bound
bnd
push
and
add
int
cmp
push
cmp
rcll
pop
add
fsub
sbb
in
add
hlt
push
repnz
or
pop
fistps
icebp
mov
and
jg
aam
in
xchg
mov
out
pop
mulb
or
test
sti
or
cld
mov
push
pop
sar
push
int3
pop
adc
sbb
cmpsl
and
xor
sbb
or
or
mov
sti
div
mov
or
lock
sahf
lcall
or
int3
fs
rolb
mov
push
int3
pop
adc
in
fnstenv
or
int
xorl
roll
jne
xlat
and
cmc
test
adc
aaa
xor
insb
fdivrs
leave
stc
cmp
clc
or
clc
or
cld
pusha
push
adc
movsb
pop
enter
lea
sbb
jns
xor
jnp
mov
push
mov
and
and
xchg
outsl
subl
push
cmpsb
and
push
mov
add
mov
fwait
ss
bound
adc
clc
xlat
or
and
adc
push
out
popl
adc
cmp
test
jp
cli
adc
jns
add
cmp
popl
adc
pop
sub
inc
test
outsl
xchg
dec
fwait
dec
push
push
dec
adc
add
rolb
ja
xlat
scas
jnp
adc
push
or
add
adc
icebp
out
lahf
xor
mov
or
xlat
ficoml
jle
int3
pop
adc
xchg
daa
movsb
mov
cwtl
push
or
jl
not
mov
or
icebp
cmp
pop
out
xlat
mov
adc
pop
or
adc
arpl
mov
dec
cwtl
inc
fwait
insb
rcrl
test
mov
rcll
data16
leave
push
adc
sbb
lods
sbb
imul
loopew
xchg
mov
iret
orl
lret
mov
pop
arpl
js
fwait
push
mov
pop
xchg
sbb
inc
movsb
jmp
sbbb
test
fldlg2
pusha
sub
cmc
test
hlt
cmp
adc
call
ret
or
shrl
repz
ret
movsl
ds
push
int3
pop
adc
mov
lea
mov
jns
jne
adc
mov
sbb
lods
or
fiadds
adc
push
push
ret
call
adc
or
inc
lcall
xchg
cmpsl
out
sub
sub
xor
xlat
xchg
jns
adc
or
adc
adc
add
fsub
cwtl
outsl
lock
inc
hlt
or
sbb
pushf
xor
and
aaa
sub
hlt
mov
dec
mov
adc
es
push
and
adc
mov
mov
out
hlt
or
cmp
popf
and
fisttpl
mov
lods
std
das
cs
pop
cmp
and
jl
sub
cmpsb
sub
mov
popf
mov
into
clc
and
xor
xchg
push
je
out
es
sti
daa
fists
push
rolb
mov
sbb
sub
inc
scas
sbbb
pusha
dec
daa
notl
call
or
push
aad
add
sbb
test
fcoms
sbb
sbb
add
xchg
jno
mov
int
fadds
pop
cld
push
movsb
outsb
mov
or
in
cld
pusha
push
adc
xor
stos
inc
in
fwait
std
dec
arpl
xchg
or
push
int3
pop
adc
xchg
dec
shr
push
mov
fwait
sub
bound
hlt
jns
in
jo
out
push
aas
out
dec
test
cmc
sti
stos
jl
ret
call
mov
es
adc
mov
push
pop
lds
xchg
stc
sub
inc
cmp
aaa
sar
iret
or
addl
jbe
imul
or
mov
mov
test
pop
adc
jg
cmp
push
adc
sub
sbb
insb
xchg
repz
mov
adc
push
sbb
mov
cmp
sub
cmp
mov
fdivrs
xchg
in
xchg
sarl
aad
jg
fsubrl
mov
cmc
mov
ljmp
aaa
ss
cmp
jnp
in
jecxz
inc
sbbl
pop
inc
sub
xor
mov
stos
subl
sarl
sub
lahf
mov
ja
testl
std
gs
and
xchg
loop
test
fnsave
xchg
lods
or
mov
iret
adc
jns
xchg
push
jne
mov
push
mov
lea
cmp
cmp
mov
xorb
sbb
and
pop
jmp
sub
and
adc
pop
xor
cmp
jl
pop
ret
and
fsubrs
add
or
mov
mov
ds
js
mov
mov
jmp
scas
xchg
jg
notb
push
adc
xor
out
sarb
xor
sub
test
sbb
cmp
out
sahf
imul
mulb
inc
jnp
fs
pop
mov
lods
push
xor
mov
mov
sub
call
mov
aaa
jmp
nop
and
iret
cmp
jbe
xor
pop
inc
push
pop
mov
inc
push
mov
ja
fs
adc
cwtl
mov
cmpsl
jbe
sbb
sbb
stos
or
xor
into
jp
push
sti
mov
pop
popa
xor
lahf
xchg
sbb
mov
rcrb
xchg
or
iret
adc
int3
dec
and
popa
adc
cld
xchg
add
dec
sbb
add
add
mov
mov
jp
out
test
mov
leave
cmp
cwtl
pop
xor
push
or
lcall
mov
imul
in
sbb
sbb
fsubrp
inc
push
ret
sbb
adcb
mul
in
push
add
add
call
ja
roll
mov
push
movsl
fistps
outsl
cld
mov
add
mov
enter
push
ljmp
filds
rol
pop
xor
test
xchg
pop
sbb
and
xchg
jae
lahf
aad
outsb
mov
add
loope
aam
outsb
mov
in
sub
xor
mov
jge
ljmp
and
imull
sti
push
inc
loope
pop
mov
popf
sahf
cli
push
ret
lock
pushf
mov
inc
pop
sub
addl
xor
inc
xchg
pop
xor
jmp
rcrl
adc
xlat
sub
adc
stc
mov
or
xchg
jge
imul
pop
test
add
loopne
push
loopne
adc
addr16
cwtl
mov
fcmovnb
jle
and
inc
mul
jne
fstl
pop
inc
insb
xchg
out
movsb
outsl
pop
dec
jle
jns
push
lahf
hlt
push
fsubrs
push
dec
js
lcall
mov
sar
arpl
adc
js
cltd
call
xchg
out
fdivl
or
jge
xor
lcall
out
jp
arpl
dec
jno
sar
sbb
pop
das
jg
in
mov
or
hlt
and
popa
push
adc
and
ja
mov
test
cs
xchg
ret
inc
leave
cmpsl
sbb
movsb
leave
pop
adc
loop
mov
dec
xor
mov
jle
cmc
adc
mov
inc
pop
or
adc
lahf
add
adc
aaa
lock
and
in
lock
push
fwait
ss
fcomps
jb
lods
jb
pminub
addb
or
cld
pusha
push
adc
cltd
aad
jmp
ja
ret
lret
lahf
jge,pt
mov
fdivs
pop
jp
jp
fnstenv
mov
test
push
adc
jns
lahf
jge,pt
jb
sub
lahf
lcall
addl
push
adc
pop
lahf
jge,pt
pop
sub
inc
push
imul
idivb
ljmp
xor
sbb
xchg
icebp
xor
jl
adc
daa
dec
adc
ja
sbb
test
divb
pop
pop
imul
movsb
clc
dec
jl
mov
lret
out
and
or
xchg
mov
adc
inc
shrb
push
mov
push
adc
lahf
stc
sub
testl
test
jmp
inc
xlat
jp
pop
sbb
xor
adc
dec
xor
xor
stos
jae
jae
mov
arpl
adc
shll
sti
mov
orl
and
mov
movsb
xchg
dec
rorb
fnstenv
jbe
in
dec
outsb
jle
jge
rorl
or
xor
add
adc
loope
adc
ret
or
pop
les
je
mov
iret
scas
and
or
jmp
arpl
loop
out
sub
push
and
ret
mov
sahf
sub
mov
lock
scas
pop
dec
iret
repnz
adc
dec
out
fs
jb
pop
popf
pop
es
addb
cwtl
lea
push
adc
ds
rcll
adc
daa
adc
and
adc
lods
pop
movb
into
lock
push
xor
into
xchg
mov
add
and
outsl
aas
jnp
std
push
popf
loopne
or
dec
jb
mov
cmp
mov
ljmp
jno
mov
cli
mov
dec
mov
jne
rcll
decl
lret
shl
xor
scas
mov
cld
insl
jecxz
xor
es
iret
ret
fidivrl
jmp
jbe
sub
add
or
imulb
lret
push
andb
int3
out
lock
pushf
push
jo
xchg
pop
inc
icebp
jmp
adc
cmpl
jmp
xor
test
pop
mov
pusha
push
sub
lret
dec
or
adc
icebp
lcall
and
xor
mov
xor
cli
and
nop
stc
mov
sub
cmp
movsb
xchg
rcrb
aad
in
ss
jecxz
mov
push
push
loopne
sbb
es
dec
sub
ret
add
out
push
dec
negb
pop
push
push
xorl
sub
mov
arpl
push
fsubs
js
stos
les
fstl
iret
push
mov
test
outsl
pop
mov
or
mov
jae
jp
pop
xor
adc
sahf
fsubl
adc
pop
fcmovu
jle
mov
lahf
test
test
aam
jp
icebp
jnp
rolb
int
pop
imul
mov
add
sbb
test
insb
and
or
jb
jmp
sahf
jge
leave
cmp
pusha
push
adc
pop
adc
outsl
mov
xchg
push
cmp
addl
ret
jmp
adc
mov
or
dec
pop
enter
mov
sbb
sti
or
sti
jle
fadd
sarl
mov
fld
xorb
dec
pop
mov
sub
dec
test
mov
insb
xor
bound
adc
cmp
and
mull
mov
and
ljmp
stc
fwait
ss
jns
jmp
cmc
xor
jne
iret
lahf
ds
shl
out
xor
inc
pop
mov
es
xchg
loopne
adc
jle
repz
out
nop
mov
push
daa
mov
sub
and
add
es
xor
mov
mov
adc
sti
cld
mov
addr16
int3
or
es
push
shll
push
or
dec
daa
enter
sub
xchg
mov
jo
fnstenv
dec
push
bound
inc
aaa
adc
pusha
add
int3
mov
jle
scas
pop
xor
xor
es
mov
fdivs
icebp
mov
adc
or
or
sbb
mov
adc
mov
xor
sub
aas
mov
sub
aad
addb
in
mov
rolb
popa
outsb
cmc
pop
inc
sbb
inc
jmp
sub
push
push
mov
loopne
fnstenv
add
insl
repz
sub
jg
inc
repz
sub
cwtl
icebp
push
loop
pusha
sub
mov
enter
stc
rcrl
jp
adc
fstpl
jne
adc
push
fs
dec
jle
repnz
xchg
fwait
or
sbb
loop
jno
imul
push
scas
and
loopne
mov
popf
insb
int3
dec
outsb
je
inc
mov
loopne
insb
repnz
cmpsb
out
int3
fucomp
or
adc
rclb
and
in
inc
push
mov
shrb
inc
fsub
hlt
test
cld
or
add
adc
push
lahf
sti
xchg
mov
leave
cmp
dec
nop
mov
dec
mov
or
gs
rcrl
mov
out
inc
loopne
sahf
sbbb
movsb
call
addr16
pushf
xchg
lock
imulb
flds
daa
xor
ja
aas
push
cld
xchg
adc
mov
stos
cmp
leave
mov
std
data16
xchg
adc
popa
push
adc
insl
jmp
aas
sbb
cltd
sbb
leave
pop
adc
shlb
into
or
scas
xorl
mov
push
mov
adc
add
adc
stos
test
mov
es
xor
notl
dec
stc
scas
je
sbb
lods
push
aam
mov
dec
pop
imul
ljmp
mov
adc
jle
fs
test
stc
fs
stc
mov
lret
pop
outsb
dec
push
dec
add
out
adc
lods
sub
dec
cmpsb
and
into
cmp
stc
stos
mov
inc
testb
push
call
sub
xor
xchg
dec
je
std
mov
out
pusha
aad
mov
xor
mov
stos
lods
fadds
aaa
nop
call
stos
sahf
rolb
pop
cs
jge
xlat
enter
or
in
cli
fs
js
xor
daa
mov
mov
adc
add
dec
xor
or
mov
jge
xchg
push
adcb
int3
fmul
sbb
test
test
in
dec
loop
mov
lea
sti
jo
add
cmc
jae
dec
dec
ljmp
cmc
xchg
loopne
or
mov
pusha
push
adc
jb
stc
repz
imul
or
adc
inc
outsl
test
test
sbb
sbb
adc
sub
test
sub
in
or
adc
jge
or
mov
mov
pushf
fdivs
push
or
mov
roll
jne
subl
or
fdivr
pusha
push
adc
hlt
pop
clc
cmp
repnz
push
jp
jp
fnstenv
les
orl
fcmovb
jns
icebp
gs
mov
iret
pushf
in
xor
aaa
insb
je
shr
adc
adc
lock
add
and
pop
cli
test
addr16
inc
add
daa
dec
lahf
aas
cmc
mov
sbb
movsl
lods
daa
pop
mov
mov
sub
mov
cmpsb
dec
clc
jnp
aaa
je
lock
jns
or
or
inc
fistpll
fwait
mov
pop
cli
js
pop
inc
sub
xorl
jp
sbb
mov
fisttpll
cmp
mov
lahf
adc
xchg
jns
adc
xor
xchg
cmpsl
xlat
mov
mov
fcomps
inc
cmpsl
cmc
mov
xor
xor
mov
rclb
and
imul
jns
or
cmp
stos
mov
jnp
call
sub
ret
push
arpl
add
dec
jae
rcrb
and
clc
test
inc
pop
mov
mov
inc
enter
dec
je
lds
and
arpl
cli
or
mov
stos
and
sbb
popa
cs
xchg
repz
jge
mov
iret
das
xlat
rorb
xor
mov
or
out
add
aam
iret
test
sti
cmp
outsb
inc
push
mov
sbb
mov
push
cmpsl
nop
fadds
fstpl
mov
adc
out
jbe
jle
cmp
adc
dec
imul
fnstcw
xor
adc
ss
sbb
mov
je
and
fdivl
nop
mov
jb
push
repnz
mov
js
mov
and
xchg
mov
jo
sbb
or
mov
push
mov
sub
push
add
sbb
sbb
xchg
add
xlat
data16
aas
sbb
mov
sbb
mov
adc
xor
pop
sub
movsl
imul
and
outsb
cli
or
lahf
dec
nop
mov
ljmp
adc
loopne
xchg
mov
push
fimull
sahf
test
fbld
aam
pop
cld
jnp
jge
std
and
aas
rcrl
cwtl
mov
in
sub
aas
push
flds
pop
jmp
adc
or
cs
cmpsl
mov
or
push
and
inc
in
mov
push
aad
add
xchg
jecxz
sub
adc
test
test
popa
pop
outsb
and
movsl
push
sarb
cld
sbbl
mov
test
test
mov
in
push
int3
pop
adc
lds
pop
mov
pop
rorl
dec
fldenv
push
in
mov
or
iret
dec
or
repz
mov
jle
push
int3
pop
adc
sbb
in
and
pop
push
js
xchg
or
repz
aam
and
xchg
and
ljmp
adc
jne
divb
lods
fwait
outsl
sahf
jge
js
sbb
push
movsb
fnstenv
je
insb
xchg
outsl
ja
stos
mov
imul
adc
popa
fidivrs
mov
sbbl
cmp
xor
insl
test
fstl
and
sub
dec
test
loop
aad
popa
push
int3
pop
adc
jno
cld
adc
and
jge,pt
lods
mov
sbb
inc
lock
fwait
ss
dec
inc
push
out
fs
adc
mov
push
push
daa
dec
fwait
mov
outsl
xchg
jbe
lock
into
mov
mov
mov
inc
test
ss
sub
std
cmp
sbb
jbe
add
inc
pop
jmp
outsb
pop
push
sub
or
int3
mov
adc
pop
sbb
je
dec
and
push
mov
loop
inc
inc
test
ss
xchg
daa
mov
xor
jno
pop
sbb
ja
add
subb
mov
mov
int3
pop
adc
repz
inc
lahf
jge,pt
mov
aaa
cmp
xchg
lret
mov
out
stc
mov
daa
shlb
sti
iret
mov
jecxz
bound
mov
test
int3
pop
adc
repz
inc
lahf
jge,pt
mov
lahf
shll
push
jns
sub
dec
adc
sbb
ja
sbb
std
popa
outsl
xchg
adc
and
test
inc
inc
mov
dec
push
ss
sub
icebp
cmp
adc
mov
in
xor
lods
pop
mov
cmp
push
jl
mov
decl
sti
je
or
stos
clc
sub
clc
push
xor
inc
and
addr16
fs
xchg
xchg
or
mov
push
int3
pop
adc
cmp
loopne
mov
inc
adc
inc
xchg
mov
icebp
mov
stos
jmp
sub
scas
xor
dec
jmp
or
clc
lock
adc
dec
xor
in
mov
shrl
shl
data16
and
cltd
cmp
mov
call
xor
je
xchg
mov
inc
movsl
outsl
icebp
outsl
jne
outsb
ds
or
and
jbe
sarl
bound
cmp
xchg
or
xchg
daa
inc
mov
mov
or
ljmp
imul
jmp
cld
rcr
fcomps
cmp
fs
adc
cmp
sti
loop
mov
inc
pop
out
jge
cmp
std
dec
les
test
ret
dec
xchg
jbe
pop
jne
add
sbb
sub
shlb
inc
fstpt
in
pusha
shl
sbb
test
mov
repnz
pop
xchg
ret
pop
inc
push
dec
mov
movsb
mov
imul
adc
push
je
pop
xchg
push
int3
pop
adc
xor
push
dec
js
sahf
dec
jb
dec
sbb
lods
mov
lcall
and
mov
les
pop
adc
divb
push
lods
push
jg
sbb
test
jae
or
adc
fucomp
mov
test
cmpb
mov
fimull
in
sub
callw
adc
adc
dec
cmp
insb
stos
xor
test
jge
adc
insb
sub
cld
push
cmp
daa
pop
xchg
and
cmc
push
mov
adc
pushf
adc
sbb
mov
out
fldcw
sbb
fmuls
or
cld
outsb
dec
cmpsl
sahf
jo
pop
adc
or
mov
push
or
push
xor
and
or
inc
outsb
shr
add
cmpsl
ret
andb
xchg
xchg
jb
movsl
push
mov
mov
movsb
or
fneni(8087
ds
inc
shll
loop
mov
sbb
push
pushf
loop
imulb
push
adc
sbb
sysexit
mov
xor
insl
jbe
cld
mov
sbb
xor
mov
roll
mov
pusha
mov
jecxz
adc
das
mov
insb
fdivrs
test
pop
adc
stos
cmpsl
arpl
cltd
adc
pushl
xor
jmp
pusha
xlat
pop
cmpsl
push
or
mov
jp
roll
adc
ljmp
dec
fwait
and
lcall
or
lahf
leave
mov
testl
outsb
stos
push
mov
shll
cltd
iret
pusha
mov
out
movsl
sahf
mov
testl
dec
sub
xor
or
es
inc
mov
xor
out
lahf
lock
add
inc
and
inc
outsb
fsubl
adc
pushf
stos
leave
popf
aas
jle
adc
int3
lahf
xlat
push
stc
imul
push
jne
mov
callw
adc
mov
stc
repz
cld
or
add
adc
lods
pop
mov
mov
leave
push
stos
dec
pusha
rolb
pusha
dec
jne
jp
and
sub
test
adc
fcomps
iret
mov
hlt
push
or
daa
mov
call
cmp
test
mov
insb
fadd
sahf
push
jl
test
fmull
imul
mov
mov
loopne
or
test
add
adc
mov
push
sbb
xor
adc
call
mov
dec
cwtl
cwtl
push
popa
mov
ret
sub
and
pop
add
inc
jl
daa
test
out
cmpsb
rclb
dec
cltd
cmp
ja
add
jnp
dec
or
pop
repz
xor
mov
aaa
in
pop
popa
aam
sarb
lret
fwait
imul
pop
xchg
sbb
cmpsb
xchg
lock
outsb
jge
sbb
dec
stos
cwtl
dec
push
sahf
ja
daa
or
fdivs
scas
and
cltd
icebp
xchg
repnz
ja
xor
push
popa
xchg
outsl
ja
test
in
addb
nop
sbb
inc
call
rolb
and
cmpsb
mov
enter
cmp
in
mov
mov
mov
adc
xor
push
mov
cmp
sub
xchg
les
les
cltd
inc
fwait
loop
mov
dec
pop
jno
sbb
jo
adc
mov
outsl
andl
jbe
loope
sbb
mov
or
cld
pusha
push
adc
call
jle
addr16
fmuls
fidivl
cli
hlt
shll
and
lahf
addl
or
fs
mov
cmpsb
testb
out
fsubrp
nop
call
adc
or
cld
pusha
push
adc
sbb
rcrl
push
or
push
jb
push
rorb
pop
in
sub
jae
adcl
outsb
nop
mov
leave
pop
adc
mov
andl
adc
pop
adc
push
dec
mov
adc
dec
loope
jnp
mov
rcrl
mov
push
inc
in
push
xlat
loope
xchg
test
sub
push
lahf
out
push
fdivr
cmp
loope
nop
mov
adc
dec
dec
mov
inc
inc
push
gs
jge
jbe
jne
shlb
adc
or
enter
sahf
mov
add
pop
adc
jns
pop
xlat
out
or
jbe
int
push
int3
pop
adc
int
mov
adc
pop
push
test
rclb
adc
and
cli
jnp
cmp
and
test
push
int3
pop
adc
cmp
dec
fnstenv
cmp
pop
sub
xchg
call
jno
inc
das
fiadds
test
dec
adc
mov
adc
xor
testl
xor
in
push
divl
rolb
sbb
xchg
jmp
stos
or
pop
xor
and
pop
je
out
repz
sbb
xchg
add
and
loop
lock
movsl
add
loope
add
lret
mov
rorb
jecxz
lahf
ja
int
or
scas
dec
mov
fistl
jle
int3
pop
adc
xchg
daa
movsb
xchg
clc
clc
jo
repz
sarb
jge
pop
in
fnstsw
or
test
add
adc
xchg
es
lahf
xor
cld
out
repz
push
int3
pop
adc
filds
popl
or
les
push
int3
pop
adc
movsl
cltd
cmp
imul
fincstp
sub
xchg
je
or
push
adc
daa
je
addb
and
pop
pusha
or
adc
push
and
leave
xchg
daa
sbb
stc
repz
pusha
outsb
pop
add
cld
or
cld
pusha
push
adc
movsb
fidivl
ret
jno,pn
orl
sub
cli
test
int3
pop
adc
mov
push
adc
sub
jnp
roll
inc
mov
adc
sbb
daa
mov
dec
and
filds
adc
arpl
adc
int
mov
xchg
addr16
sub
pop
pushf
arpl
adc
mov
inc
icebp
call
das
push
out
std
pop
adc
fidivs
push
adc
out
or
cmp
clc
push
dec
bound
xlat
pop
adc
int3
sbb
arpl
adc
xlat
jge
xor
scas
dec
popf
adc
xchg
jl
lahf
pushf
arpl
adc
push
inc
jno
aaa
cmp
mov
sbbb
rclb
adc
push
mov
xchg
subl
adc
xor
aam
loop
or
aam
scas
lahf
jge
jl
hlt
gs
mov
xor
lret
mov
xchg
jo
cld
movsb
and
push
sti
ljmp
imul
sahf
out
mov
fnstcw
fsub
insl
jbe
mov
sub
push
mov
int
pop
out
sub
fisttps
add
and
mov
cmp
push
std
cmpsl
add
fbld
adc
mov
mov
dec
mov
pusha
jp
mov
mov
mov
dec
jb
in
idivb
mov
test
cli
push
push
push
je
pop
xchg
push
int3
pop
adc
xor
push
dec
js
lahf
dec
jb
gs
push
dec
mov
mov
cmpsb
dec
xor
ss
incb
imul
sub
loopne
cmpsl
xchg
lea
test
mov
inc
mov
cmp
rclb
imul
out
push
mov
test
cli
fnstsw
out
push
aam
xchg
out
fprem
cli
pop
adc
je
cmp
imul
inc
mulb
ja
dec
cmp
out
movsb
inc
inc
dec
jle
in
cs
out
push
fdivr
pop
in
push
rcll
mov
lahf
dec
mov
mov
lods
nop
inc
imul
cltd
lea
ja
mov
inc
jns
mov
je
fsubl
adc
jecxz
aad
ret
outsb
xchg
rcll
mov
add
adc
repz
mov
push
mov
sub
mov
insb
push
sbb
jmp
bound
adc
mov
loop
mov
rorb
fstpt
rolb
mov
mov
or
ret
sub
imul
pop
adc
mov
out
xchg
stc
sti
ja
out
fstl
cmp
xlat
xchg
add
cld
or
cld
pusha
push
adc
and
sub
inc
pusha
fsubl
adc
pop
jno
nop
daa
les
fists
mov
or
push
aaa
xchg
push
sub
rcrb
imul
push
aas
shlb
cmpsl
sub
add
lock
adc
push
jle
sub
jmp
jnp
es
fwait
and
mov
ds
stc
repz
pusha
or
add
adc
call
loopne
xchg
daa
dec
int3
mov
dec
ds
rcrb
and
pop
iret
mov
mov
daa
dec
lahf
xlat
jecxz
pop
or
ret
or
jl
push
das
adc
xor
inc
mov
push
bound
jge
xchg
mov
or
and
jecxz
push
mov
xor
stc
aaa
insb
stos
ret
addl
pusha
push
subb
adc
and
mov
or
pop
negl
popa
rclb
jle
jnp
mov
or
adc
push
jns
sub
clc
stos
cmpsb
popa
pop
inc
lcall
or
adc
mov
xchg
and
es
mov
fnstenv
ret
inc
addb
out
xor
adc
jns
push
xor
or
out
lods
or
cld
pusha
push
adc
or
adc
cld
jl
repz
mov
adcl
inc
lods
push
xor
xchg
jge
int3
pop
adc
fdivl
jno
icebp
and
fldt
mov
jns
cmp
pop
inc
push
jbe
jnp
call
icebp
adc
cmp
add
mov
adc
out
mov
xchg
jne
test
es
sub
aad
aaa
cmp
pop
and
insb
jno
sbb
ljmp
iret
lahf
push
cld
sbb
rcrl
loop
ss
in
xchg
adc
mov
rolb
sub
xchg
popf
xor
inc
std
add
jb
fsubr
daa
add
mov
adc
adc
sbb
dec
loopne
pop
adc
ljmp
lock
je
pop
adc
sub
push
mov
adc
push
mov
push
int3
pop
adc
mov
xchg
call
mov
sub
pop
adc
sub
xor
pusha
jp
shll
mov
adc
out
fnsave
jge
push
mov
pop
adc
fisttpll
and
adc
in
std
cmc
inc
mov
adc
adc
mov
xor
mov
xchg
fsubs
adc
adc
shrl
into
mov
cmpsb
cmp
adc
inc
xor
icebp
mov
pop
inc
pop
sbb
inc
sbb
adc
jo
movl
and
adc
lock
dec
and
and
add
lret
dec
inc
mov
int3
pop
adc
std
pop
int3
imul
shrb
mov
sbb
dec
or
dec
add
mov
mov
fildll
pushf
mov
repnz
or
adc
mov
mov
cltd
repnz
mov
push
mov
je
lods
lret
pusha
pop
mov
out
adc
sbb
or
or
add
adc
or
sbb
mov
adc
int
or
neg
shrl
pop
adc
mov
adc
clc
out
and
not
fisttps
mov
adc
rcll
sub
sbb
imul
mov
xor
pop
or
lahf
mul
mov
adc
jl
pop
shrb
test
adc
mov
leave
jnp
sbb
cmc
xor
pusha
dec
xor
loopne
pop
adc
popf
jne
push
mov
es
in
dec
jnp
mov
stc
cmp
call
roll
lcall
adc
mov
mov
clc
jo
repz
iret
jge,pt
dec
pop
and
jmp
jnp
insb
pop
mov
insb
scas
push
pusha
mov
adc
or
or
jo
inc
sbb
xor
out
mov
fwait
ss
movsb
ret
addl
jmp
addb
sub
in
divb
insb
push
lret
mov
outsl
xchg
or
sbb
cmp
out
push
fistl
push
fisttps
adc
and
jp
in
out
bound
adc
mov
lea
scas
aam
aad
imul
pop
negl
xchg
or
add
scas
repz
sub
xchg
add
lcall
adc
mov
dec
lahf
sub
cld
stc
jle
sbb
subb
adc
cld
xor
sub
pop
adc
lahf
aas
je
push
adc
popa
mov
sbb
and
jmp
inc
outsl
adc
adc
or
popa
ret
sbb
xchg
add
leave
addl
lcall
jecxz
adc
adc
pop
mov
loope
cltd
cmp
imulb
xchg
add
and
pop
jns
mov
sub
pusha
push
adc
sahf
xchg
xor
push
int3
pop
adc
mov
pop
mov
inc
xchg
mov
add
out
jb
cli
arpl
mov
movsb
loope
sbb
stc
cmp
push
push
pop
cmpsb
in
mov
cmpl
orl
shlb
push
clc
test
mov
sbb
aam
dec
aam
sbb
jbe
xor
pop
adc
pop
xor
mov
call
std
pop
mov
jge
repnz
mov
stos
cli
sub
xchg
mov
lret
push
xchg
mov
mov
adc
lds
sub
insl
dec
mov
dec
pop
int
mov
ja
test
mov
adc
es
aaa
outsl
jb
push
or
dec
sub
cmp
push
or
cli
dec
inc
dec
and
std
out
cmp
xor
int3
pop
adc
dec
dec
in
inc
and
mov
cmp
cli
out
dec
in
cmp
pop
adc
jge
roll
cld
jge
xchg
push
popa
push
adc
test
imulb
cmpsb
cmpsl
dec
popa
push
adc
leave
movsl
les
adc
or
clc
pop
adcl
fcomp
insb
in
mov
cmp
outsb
out
push
int3
pop
adc
jl
rol
in
push
jnp
and
pop
mov
adc
sub
gs
popf
out
push
add
push
int3
pop
adc
in
jp
in
mov
push
mov
scas
mov
adc
or
or
push
push
fsubrs
jo
mov
inc
push
inc
fs
adc
cmp
push
nop
and
sahf
cmc
mov
hlt
pop
adc
lods
mov
leave
jne
popa
es
mov
arpl
shll
pop
outsb
repz
cmp
push
fwait
add
adc
lret
stos
les
inc
icebp
ret
out
xor
inc
lock
pop
adc
xor
in
cmp
mov
cs
pop
nop
leave
pop
adc
xchg
sbb
mov
fwait
mov
cli
jecxz
or
jbe
pop
gs
cmpsb
adc
loopne
scas
xchg
sub
popa
ret
stos
cli
test
int3
pop
adc
cmpsb
in
fstps
push
xchg
dec
pop
lahf
aas
adc
push
xabort
or
sub
popa
push
adc
adc
mov
xchg
or
testb
or
test
roll
mov
cld
pusha
push
adc
clc
lods
mov
pop
adc
cld
stc
sbb
or
adc
clc
or
cld
pusha
push
adc
or
add
adc
or
xor
sub
xor
aaa
insb
lods
inc
je
or
mov
jecxz
adc
mov
inc
inc
push
or
cld
pusha
push
adc
push
inc
pop
cmp
pop
adc
lahf
ds
icebp
xor
mov
pop
mov
aas
loope
insl
fdivs
cmpsb
lock
sub
add
push
fnstcw
aas
cli
js
gs
lret
insb
lods
or
testl
mov
xor
sub
test
cmp
and
mov
jp
cli
jle
sbb
jge,pt
out
push
aaa
mov
inc
into
push
add
dec
xor
xchg
fs
adc
jns
or
xor
imul
lods
pop
in
or
pop
lcall
adc
adc
xor
lret
orb
and
push
aam
pop
push
mov
shlb
andl
decl
push
and
test
dec
mov
lock
jno
out
push
int3
pop
adc
jb
jae
jmp
xchg
test
idiv
imul
push
jo
or
xchg
xchg
push
int3
pop
adc
xchg
outsb
and
insb
push
sahf
mov
into
popf
adc
push
or
inc
jns
add
adc
inc
add
xchg
sub
pushf
insl
add
or
adc
jge
lods
or
stc
adc
jb
xchg
add
shlb
sahf
push
lret
or
sbb
daa
outsb
mov
pop
cmp
sub
movsb
jg
push
xor
or
adc
or
or
inc
inc
push
and
and
insl
je
or
adc
nop
dec
loop
dec
xor
pop
lea
aad
movsl
and
ret
cmpsb
movsb
jle
inc
inc
sbb
jne
mov
push
and
jbe
in
lock
je
or
adc
bound
test
ficoml
xor
sbb
sbb
lock
movsb
loope
hlt
or
dec
mov
adc
stos
dec
mov
adc
inc
aaa
add
hlt
lahf
fidivl
rcll
subb
cmp
les
push
or
sub
or
adc
adc
add
xorb
inc
cltd
push
or
cld
pusha
push
adc
aam
pop
insl
lea
inc
fstl
pop
adc
out
fs
push
iret
das
data16
pusha
jns
jge
jl
fisubl
and
push
test
push
xchg
sub
dec
out
lods
cmp
or
lea
shll
sbb
repnz
out
fstpl
push
inc
insb
add
stos
leave
sbb
xor
sbb
push
jle
rclb
out
notb
call
adc
ss
dec
jecxz
lcall
cli
cmp
ftst
push
and
out
mov
int
add
cli
lret
pop
ror
push
int3
pop
adc
push
aas
add
leave
or
mov
pop
adc
incb
lods
jnp
into
mov
xchg
mov
cmp
sub
divl
dec
call
mov
loope
jae
mov
mov
mov
jnp
sub
divl
ret
mov
in
pop
lahf
testl
cltd
lret
adc
mov
jg
adc
and
push
imul
fcomps
pusha
rolb
adc
outsl
pop
or
mov
es
mov
push
loopne
pop
adc
in
popa
shl
adc
andl
adc
sbb
adc
mov
mov
adc
out
cs
jo
pop
adc
filds
add
adc
add
loopne
adc
jle
pop
mov
xchg
mov
adc
xor
cmp
mov
movsb
add
cmp
pop
adc
shrl
and
and
aad
mov
adc
fwait
cwtl
imull
push
js
cmpsl
inc
mov
adc
and
scas
js
test
mov
or
adc
push
xor
stc
js
daa
jae
addb
mov
or
adc
mov
fnstcw
stos
and
pusha
mov
xchg
sbb
adc
shr
imul
fnsave
mov
inc
lock
fcomp
daa
aas
jle
stos
sbb
xor
mov
mov
out
push
int3
pop
adc
outsb
push
adc
jle
clc
repnz
ret
call
and
es
loope
add
mov
popf
sahf
je
or
xchg
add
mov
stos
mov
in
or
adc
cwtl
mov
ret
mov
cmp
shr
jae
cmp
ljmp
mov
or
or
add
adc
push
loopne
pop
adc
fs
out
nop
into
mov
pop
adc
or
call
stos
or
loop
mov
adc
fs
inc
mov
dec
sub
fsubs
jno
inc
cmc
adc
ljmp
pop
adc
inc
fs
and
dec
xor
and
xchg
mov
mov
setbe
aad
jmp
or
cmp
xchg
out
scas
mov
stos
in
in
clc
jg
xor
dec
or
jge
pop
ret
int3
pop
adc
out
jno
and
mov
aad
hlt
in
dec
jp
push
push
cmc
dec
rolb
mov
std
fbld
enter
xchg
adc
jmp
mov
rclb
push
cmp
sub
les
repnz
clc
dec
stos
jae
sti
push
jno
nop
or
and
lods
cltd
lret
test
push
xchg
mov
push
mov
push
rcl
sahf
stos
xchg
mov
aas
xchg
loopne
push
mov
pop
cmp
inc
fsubl
adc
in
push
mov
mov
daa
leave
les
jbe
pop
mov
cmp
int
or
loopne
out
call
adc
mov
pusha
rorl
mov
inc
adc
push
fmuls
push
mov
imul
fstl
int3
pop
adc
pusha
sbb
cmp
or
xor
popa
mov
add
movsl
mov
or
push
cmp
je
andl
out
inc
push
inc
fs
adc
mov
js
push
gs
cli
add
xchg
cmpsb
sti
cmp
cmp
hlt
pop
adc
cltd
inc
test
adc
adc
or
jmp
mov
mov
sti
repz
mov
or
repz
push
inc
ja
dec
out
sbb
cmp
int3
pop
adc
or
mov
jecxz
add
mov
jp
outsl
notb
cmc
or
or
inc
ret
repnz
andl
jecxz
fimull
xchg
test
lea
mov
in
adc
loop
add
adc
xor
mov
into
jns
rclb
pop
adc
iret
push
and
into
aas
jle
push
or
clc
or
add
adc
or
or
jnp
rorl
add
or
add
or
mov
addb
or
cld
pusha
push
adc
cmp
xchg
or
pop
and
jmp
lret
pop
adc
in
adc
popa
pushf
jb
fldt
sub
bound
adc
or
cmp
mov
mov
fcompl
out
insb
fadd
adc
xchg
add
enter
push
fmull
adc
mov
or
adc
xchg
out
fldpi
jmp
pusha
xlat
jle
clc
repz
xchg
ret
addb
aam
jne
mov
or
es
les
sbb
repz
or
xor
sub
mov
dec
mov
test
mov
push
pop
adc
lds
icebp
sti
imul
mov
xor
scas
gs
xchg
je
jae
repz
or
xor
hlt
pop
xor
and
add
mov
es
fwait
cltd
jnp
jge
sar
fcompl
icebp
rorb
adc
jge
push
icebp
inc
mov
test
mov
sahf
fnstenv
jmp
icebp
inc
pop
adc
in
cmp
inc
xchg
lcall
mov
addb
mov
loope
idivb
pop
and
and
mov
adc
push
mov
stc
jp
js
sub
jo
pop
adc
pop
jae
pop
sub
push
rcll
iret
pop
sbb
lret
add
or
or
sub
pop
jmp
subb
sub
lcall
add
js
gs
pop
mov
push
and
cld
test
push
jge
ds
cmpsl
xchg
fcoms
jge
out
movsb
dec
bound
adc
sbb
xchg
xlat
cmp
loope
push
sbb
cmp
popa
push
fsubrp
inc
hlt
adc
out
push
push
int3
pop
adc
sub
add
clc
inc
and
or
lcall
fsubl
adc
cmp
or
daa
daa
in
ljmp
jbe
or
in
mulb
jmp
aaa
outsl
jb
jmp
cmp
sub
add
jnp
dec
and
xchg
cld
or
cld
pusha
push
adc
in
and
repz
mov
sbb
in
sbb
mov
repz
push
adc
push
add
pop
stos
mov
pop
test
mov
add
mov
leave
mov
std
loop
push
pop
iret
imul
stc
das
xorb
cwtl
sub
out
pop
or
xlat
int
cmpl
lock
test
mov
clc
push
cli
inc
loope
movsl
mov
es
sbb
lret
stos
cld
filds
adc
divb
push
adc
outsl
iret
repz
cld
mov
mov
or
or
hlt
jns
test
fucomip
push
jp
mov
push
ret
out
xor
out
mov
pop
add
aam
add
push
push
adc
or
in
cltd
add
shll
jle
pop
addr16
xor
cmp
fs
int3
clc
rolb
mov
leave
cmp
pop
adc
out
pop
fwait
std
push
aam
sub
add
fistps
adc
inc
enter
aas
aad
cmp
xor
pusha
les
push
sbb
inc
ret
das
fwait
repnz
scas
sub
jle
test
lcall
dec
sarl
add
mov
addl
jge
mull
push
popf
testb
and
sbb
push
lods
ljmp
lods
test
outsl
sub
push
adc
push
jge
jnp
adc
pop
pusha
push
adc
adc
or
xor
lods
xchg
adc
test
mov
cwtl
arpl
adc
xor
adc
inc
jg
mov
pop
sarb
pop
lahf
ljmp
mov
lods
mov
push
adc
push
dec
rolb
adc
jnp
sbb
inc
cmp
lahf
push
xor
lahf
push
or
je
aas
outsl
and
xor
mov
sub
adc
sarb
xchg
dec
push
aad
or
adc
nop
nop
daa
and
test
adc
cmp
js
mov
cmp
xor
adc
inc
pop
mov
fcomip
addr16
js
invd
adc
addr16
invd
adc
mov
xlat
cs
inc
add
jmp
imul
fsubs
sbb
mov
sbb
mov
cmp
movsb
lret
push
call
mov
popf
pushf
jp
lods
clc
cmp
push
push
pop
adc
cmpsb
outsl
mov
push
or
add
jge
hlt
adc
and
pop
int
stc
je
push
popf
mov
cld
fldcw
enter
lods
mov
inc
repz
ret
sti
ret
lret
dec
ret
divl
shlb
and
inc
add
dec
sahf
cmpsb
adc
ljmp
pop
push
inc
pop
xchg
cmpsl
inc
pop
adc
jmp
sub
fbld
jmp
scas
mov
cld
dec
sub
scas
add
int3
pop
stos
sub
xchg
test
mov
adc
mov
loope
adc
jo
push
pop
add
fsubrl
jbe
sub
shll
xor
imul
adc
xor
repnz
mov
setle
insb
xchg
subb
hlt
mov
cmp
std
or
push
cmp
out
cmpsb
cmpsb
leave
cmp
add
jns
jo
andl
sub
adc
mov
adc
inc
jae
lea
and
sbb
xorl
loopne
sbb
push
adc
or
and
pop
cmp
adc
bound
sbb
and
cli
hlt
lret
jb
jecxz
hlt
sbb
sarb
fisttps
cmp
js
pop
mov
fisubs
sbb
aam
test
fcomps
xor
push
jno
cmp
mov
mov
movsb
cmpsl
es
cld
pop
inc
idivl
mov
sub
adc
fdivrl
adc
mov
sub
adc
xor
mov
push
and
push
sbb
loop
movsb
sbb
pushf
pushf
rclb
scas
xchg
xor
sub
stos
sahf
push
and
mov
out
mov
mov
mov
dec
ljmp
sbb
aas
and
fwait
std
popf
fidivl
jmp
lea
stos
cmp
pop
insb
add
mov
jmp
inc
mov
add
cmpsl
ffreep
jae
jns
sub
jmp
cmc
fdivrl
fs
or
sub
push
sbb
js
imul
jo
adc
subb
pushf
hlt
fsts
aas
ja
fadd
enter
outsb
sti
in
div
xor
sar
in
cmp
or
sti
out
aam
or
mov
ljmp
sbb
movsb
fdivs
into
sbb
pop
xchg
testb
js
repnz
adc
jne
je
fucomip
popf
or
jge
sub
sub
aas
jle
xor
jecxz
daa
cli
sub
adc
fcomip
jbe
push
inc
dec
out
sub
in
lods
arpl
leave
mov
sbb
scas
or
dec
lods
addl
cmp
sub
fsubrs
xchg
mov
cmp
daa
std
add
pusha
aad
jbe
adc
gs
pop
scas
pop
mov
negl
ret
jns
repz
movsb
lds
sarb
cli
jno
adc
les
mov
out
les
pop
jp
or
aaa
pusha
dec
jp
mov
fnstcw
xchg
ss
lods
fisttpll
lds
imul
jl
pop
or
aaa
pusha
dec
jp
mov
fnstcw
mov
sub
pop
cmpsl
out
iret
sbb
pushf
stc
hlt
mov
js
out
jae
add
push
push
jb
cmp
mov
fidivs
and
jo
xor
out
inc
xchg
mov
push
es
sti
jge
sub
mov
dec
fwait
jno
enter
cmc
mov
sarb
mov
push
sub
pusha
shll
mov
mov
inc
into
jnp
sbb
adc
adc
js
inc
jmp
and
fs
gs
pop
xchg
sub
adc
jg
cmp
pushf
repz
arpl
pop
mov
pop
hlt
hlt
mov
jbe
xor
clc
sbb
xchg
adc
push
mov
dec
xor
aas
das
cmp
and
div
jmp
pop
icebp
and
pop
mov
mov
fcomip
mov
pop
popa
aam
push
inc
fs
push
out
xchg
dec
jl
xchg
enter
adc
inc
movsb
loope
stc
or
and
push
adc
sub
add
add
push
popa
shll
arpl
imul
adcl
lods
jb
inc
stc
sbb
js
xor
dec
sbb
xchg
push
sub
gs
jae,pt
xor
mov
pop
sub
hlt
fisubrs
sbb
enter
adc
add
sbb
add
adc
sub
pusha
xchg
mov
sub
outsl
pusha
inc
xchg
jo
cmp
xchg
call
fs
sub
mov
inc
and
test
push
lcall
jbe
jbe
js
push
js
pop
dec
lods
xor
or
mov
xchg
cmp
pushf
repnz
cmp
pusha
insb
lods
arpl
mov
mov
push
mov
inc
gs
aad
mov
push
xor
ficoms
daa
fiadds
aam
sub
adc
adc
and
mov
cmpsl
mov
and
pop
adc
int3
pop
adc
adc
xchg
jmp
inc
jge
jmp
cmp
mov
insb
jbe
jo
push
testb
xchg
sub
lods
sub
or
ficoms
push
pop
je
xchg
pop
adc
ljmp
stos
cmp
push
mov
int3
pop
adc
xchg
push
mov
add
mov
stos
lret
sub
inc
push
fwait
pushf
and
sub
insb
or
jno
push
xor
push
sub
adc
imul
dec
mov
aas
sarb
sbb
pop
test
out
jl
push
lahf
nop
xchg
adc
insl
mov
xchg
leave
mov
sbb
xchg
enter
stc
arpl
dec
cmp
sub
ja
cmp
add
fwait
mov
mov
jg
aam
divb
repnz
cld
lret
shll
push
lret
lea
shlb
xchg
and
xorl
dec
pop
incb
clc
cmpsb
cvttps2pi
or
test
xchg
iret
shrb
push
adc
dec
fs
add
xor
xor
cltd
shl
mov
mulb
data16
and
cltd
out
shr
xchg
lret
jne
and
pop
ljmp
adc
cmp
cmp
xor
stc
rep
subb
mov
jne
adc
sub
adc
mov
mov
in
or
adc
cmp
cmp
mov
mov
adc
xlat
aad
pop
or
aas
movsb
int
jg
out
fnstsw
fimull
scas
call
ret
aad
xlat
in
lahf
in
enter
xor
jbe
mov
fadd
arpl
lahf
aam
iret
cmp
xor
or
adc
pop
loop
push
push
adc
cmp
or
adc
repz
arpl
stos
out
test
clc
cmpsb
pop
stc
mov
jecxz
adc
mov
sbb
pop
jp
decl
mov
call
fs
data16
or
adc
fistps
sub
or
adc
and
into
movsl
cld
or
xor
icebp
or
adc
std
xor
xor
and
mov
dec
adc
xor
xor
sarl
adc
inc
movsl
fnstenv
pop
sbb
or
adc
setl
or
adc
arpl
add
push
xchg
sub
adc
and
xchg
mov
lods
jl
sbb
add
outsb
lock
xor
minps
push
cwtl
inc
mov
pop
loopne
pop
ret
xor
call
mov
push
xchg
or
sti
mov
jle
cwtl
sbb
cmc
cmpsb
sub
push
movsb
cwtl
outsb
dec
ret
not
dec
fisubl
loopne
lahf
nop
add
mov
pop
mov
add
rcrl
popf
out
pop
inc
movsl
lret
sbb
cwtl
lret
insb
or
jae
cmc
fidivs
and
fdivrl
mov
call
inc
int
adc
mov
data16
inc
fsubrl
shll
call
mov
pop
mov
orl
pop
movsb
bound
in
and
test
push
mov
xor
pop
ret
jle
mov
insb
popa
or
daa
inc
or
push
pop
pop
lahf
test
dec
es
cmpsb
sub
adc
mov
lds
outsl
pop
aas
sub
mov
jl
test
in
lahf
loopne
or
adc
add
outsb
rclb
and
jle
and
out
xchg
stos
repz
testl
inc
call
loop
xchg
push
iret
enter
imul
sbb
es
sub
inc
mov
sbb
mov
fimull
and
loopne
fxch
sub
push
pop
mov
or
in
cmp
add
mov
ljmp
mov
movsb
sub
insl
out
in
js
push
scas
mov
push
or
xor
mov
push
inc
push
fwait
dec
insl
ret
popf
sub
insb
or
jno
les
in
adc
or
fwait
pushl
scas
xchg
adc
pop
test
addb
inc
sbb
sti
jecxz
dec
test
out
inc
aad
cmp
pop
inc
mov
push
test
rcl
mov
loop
mov
mov
sbbb
sahf
jge
pusha
jnp
sbb
push
out
pop
lods
aam
adc
dec
lahf
call
das
fsubs
adc
enter
int
xor
cs
mov
repz
int3
insl
lock
pusha
pop
popa
push
adc
test
les
adc
pop
adc
lods
push
out
popa
push
adc
mov
cmc
mov
popa
push
adc
scas
adc
mov
push
or
fs
mov
xchg
jecxz
div
cltd
pushf
nop
or
outsl
repz
push
adc
push
adc
pop
pop
mov
xchg
adc
jb
pop
iret
lahf
ds
in
adc
jnp
in
mov
insl
push
adc
pushf
push
roll
lahf
jge,pt
pop
outsl
lcall
mov
mov
fdivrl
jg
mov
std
add
mov
cld
cmpsb
daa
fldt
outsb
push
adc
sub
sar
add
outsb
lock
push
daa
and
pop
adc
jne
mov
push
adc
inc
shlb
xchg
inc
dec
out
fnsave
jle
scas
sahf
pop
leave
jle
xchg
rcrl
inc
shrb
iret
out
jle
std
js
and
mov
test
sahf
mov
jge
ffree
addr16
in
ror
cmc
mov
jmp
cmc
xor
xlat
subb
daa
popa
push
jns
xchg
sarb
sub
stos
aas
cmp
test
inc
dec
outsb
jae
or
arpl
pop
ds
out
scas
inc
out
fistpl
popa
mov
cmpsb
std
xchg
mov
inc
dec
std
test
push
push
lcall
push
xor
jmp
test
or
jl
jecxz
leave
mov
pop
mov
push
cmp
pop
lds
inc
out
sti
xchg
arpl
pop
int
in
stos
out
stos
in
lret
push
jmp
jns
mov
or
outsb
add
leave
das
fisubs
dec
push
scas
cwtl
in
dec
dec
mov
or
lret
dec
and
jge
in
andb
popa
or
adc
adc
and
jp
mov
push
xor
mov
and
sub
and
mov
daa
cmp
jecxz
dec
push
jo
insb
sub
ds
add
popa
adc
fadds
jnp
xor
xchg
adc
or
xlat
imul
push
mov
adc
jmp
sbb
shrb
adc
jne
xor
sub
lret
icebp
xchg
and
mov
test
add
cmp
and
sub
dec
daa
testb
jo
jno
push
mov
fisubrl
xlat
sbb
es
inc
std
and
mov
loope
xchg
shll
dec
push
mov
mov
jmp
cmp
pop
aam
xor
sub
sub
cmc
xchg
sbb
pop
je
jno
push
jno
and
adc
sub
jl
cmp
mov
xor
xor
lcall
mov
dec
mov
push
xchg
adc
add
movsl
scas
jb
lret
bound
push
leave
testl
inc
cltd
dec
les
enter
adc
adc
dec
sbb
cli
inc
sub
jnp
mov
ja
call
pop
adc
ret
or
push
adc
sbb
out
mov
pop
push
xchg
mov
sbb
mov
popf
loopne
icebp
push
sbb
sub
ret
and
xor
xchg
je
sbb
aam
mov
dec
scas
cmpsb
or
mov
push
sti
xchg
movb
jo
push
sub
jl
mov
std
sub
je
mov
jecxz
pop
aad
test
xchg
test
mov
sub
fstpt
and
nop
mov
addr16
jge,pt
negl
mov
jne
adc
jbe
push
jge
pop
xchg
jp
lret
adc
hlt
cli
int3
mov
es
inc
cmp
mov
inc
loop
cmp
insb
mov
test
pop
ljmp
mov
int3
sbb
je
cmc
mov
fwait
mov
adc
addr16
mov
lods
shll
pop
mov
mov
inc
subb
jno
adc
mov
jno
sbb
cmp
loope
jnp
in
fdivrs
dec
jbe
jle
stc
jae
outsl
lahf
jge,pt
clc
imul
gs
jbe
mov
inc
aad
ret
jle
stc
jae
iret
ljmp
cmp
jmp
scas
pop
push
xchg
clc
adc
cmp
rcrl
mov
stc
repz
sbb
int
iret
dec
xlat
scas
pop
mov
mov
dec
lahf
jno,pt
ja
out
adc
jne
dec
dec
fnstsw
aad
mov
fs
aas
aas
jle
clc
sbb
ret
idivl
ljmp
in
fdivs
push
xchg
mov
adc
jle
sbb
rolb
add
pop
mov
mov
dec
stos
and
mov
jg
test
cmp
sbb
rolb
data16
and
fbstp
leave
xor
inc
push
jmp
xchg
inc
push
jl
bound
jns
inc
aad
push
in
stc
mov
shll
sbb
or
in
loop
or
movsb
out
hlt
mov
testb
addr16
nop
adc
dec
enter
test
add
or
xor
sahf
push
andl
adc
mov
lods
xor
push
or
aam
scas
hlt
int3
data16
sbb
sarl
mov
arpl
adc
push
das
call
and
popa
iret
pop
jns
cmp
popa
negb
icebp
shrb
je
and
mov
xor
adc
cmp
sarb
sbb
sbb
jb
push
lcall
adc
je
lret
dec
enter
mov
sub
dec
sub
je
dec
inc
sub
sbbl
push
and
sahf
rcrb
into
fcmovbe
fisubrl
in
in
in
fmuls
mov
jl
mov
outsl
mov
test
xchg
mov
sti
hlt
add
fiadds
lahf
pushf
nop
ficomps
popf
les
or
cmc
js
and
enter
es
sbb
or
outsb
into
inc
lock
inc
sub
sub
lcall
call
or
jno
or
sbbb
add
jmp
xchg
leave
cltd
insb
hlt
sbb
cmp
fadds
jmp
or
mov
ret
lcall
cmp
inc
test
shlb
and
add
or
push
dec
push
xchg
sub
cwtl
notb
xor
xor
xchg
and
leave
push
outsl
pop
push
fcmovnb
dec
push
xor
mov
xlat
cs
in
xchg
cmp
mov
or
and
sbb
jbe
cld
inc
and
pop
lods
arpl
js
data16
adc
inc
ljmp
xchg
decb
push
test
stos
pushf
adc
and
xor
cli
pop
cmc
mov
loope
add
out
aaa
je
clc
sub
jp
pop
cmp
loopne
filds
pop
sti
imul
pop
dec
and
mov
shl
out
fnsave
add
xchg
add
pop
jge
xchg
daa
jbe
dec
jb
out
jmp
pop
popa
and
imul
pop
mov
push
out
cmp
or
aaa
pusha
dec
js
mov
ss
sbb
in
cmpsl
lahf
sbb
and
div
out
ja
or
jns
sbb
cltd
ja
ljmp
lea
pop
ret
sbb
xorb
fcoms
scas
xor
sub
and
imul
jmp
std
and
xchg
lret
jns
hlt
arpl
mov
sahf
daa
dec
out
lahf
jo
push
xlat
jecxz
pop
or
inc
pop
pusha
mov
sub
adc
repnz
adc
mov
bound
bnd
cltd
push
jnp
lods
cmp
jnp
cmp
outsb
sub
cmp
push
push
mov
jmp
jno
add
insl
mov
arpl
pushf
bound
xchg
daa
jl
or
lds
jb
sub
fnstsw
sahf
leave
jne
out
jae
rcl
dec
cmpb
and
in
push
lods
push
sahf
pop
enter
xor
out
lea
dec
adc
repnz
hlt
aam
fs
psubq
rcl
fcoms
cmp
imul
movsb
out
addb
xor
jae
mov
scas
mov
dec
das
push
cmpsl
xor
clc
pusha
fldt
dec
pop
jl
sti
push
leave
pusha
mov
mov
and
inc
cmp
and
je
sub
push
mov
lret
mul
lahf
add
dec
out
or
lcall
dec
inc
mov
cmpl
rorb
xchg
jno
inc
pop
lahf
xchg
fdivl
in
iret
lahf
xchg
add
xor
ja
mov
out
inc
jne
cmc
hlt
incb
mov
add
insb
xor
xor
add
cmp
js
mov
es
pusha
jo
add
mov
xchg
or
loop
popa
xor
or
lds
aam
sub
adc
or
insb
sarb
cwtl
cmp
cmc
pop
add
or
pushl
dec
sub
mov
pop
out
outsl
adc
sbb
in
xchg
imull
ljmp
jnp
mov
mov
cmp
xchg
outsl
and
jecxz
roll
bound
aaa
dec
ret
pop
leave
divb
insl
shrb
pop
and
hlt
jae
mov
aad
pop
jg
nop
fstp
or
pmulhw
add
and
cmp
mov
aam
ss
movsl
xchg
icebp
ds
pusha
push
clc
pop
lcall
aam
xor
sbb
pusha
xchg
inc
fidivrl
sbbb
mov
xor
ret
or
jo
xor
xlat
adc
pop
mov
or
or
loop
jl
cmp
xchg
xchg
push
scas
push
jns
popf
ficomps
cmpsb
or
rcrl
or
gs
cmc
mov
lock
mov
pop
mov
repnz
ret
xor
ja
fsubs
mov
pop
je
xchg
xchg
scas
lcall
fiaddl
or
push
cmp
inc
pop
dec
jnp
ficoms
daa
jg
popf
cwtl
push
cmp
dec
dec
test
popl
es
out
aas
insb
lahf
stc
and
mov
nopl
push
mov
out
pop
jl
insb
inc
cltd
mov
in
add
xchg
out
mov
fidivrs
inc
jecxz
fisttpll
jecxz
add
mov
rorl
jg
rolb
push
adc
movsb
xchg
mov
dec
push
sub
pop
dec
cmp
test
out
xchg
mov
dec
ja
in
into
jns
mov
sub
pop
idivl
adc
mov
and
mov
into
in
cmp
loope
or
imul
shll
decl
jle
ret
jo
and
in
push
ljmp
leave
cmp
jbe
adc
adc
lahf
dec
jns
aaa
sbb
pusha
shl
pop
fwait
mov
xor
idivb
aaa
insb
pusha
les
icebp
add
or
mov
mov
sub
sub
test
imul
lret
pop
adc
cmpsb
cli
jle
pop
pop
add
mov
lcall
ds
es
push
out
mov
mov
mov
pusha
dec
inc
jno
shlb
mov
addr16
push
lret
xchg
movsl
cmp
lret
jbe
mov
out
nop
bound
call
jg
nop
les
es
loope
cmc
sub
xor
test
or
jl
imul
push
jge
test
sbb
cmc
aas
adc
jne
xor
sahf
aas
xchg
lret
and
je
xlat
and
add
rcrl
lods
or
popa
and
pushf
cmp
ss
dec
jmp
gs
push
push
sub
adc
cld
xchg
and
jo
mov
mov
or
adc
shrl
js
testb
push
out
mov
jle
sti
inc
test
cmpsl
lods
outsl
xchg
mov
add
sub
pusha
aam
fmulp
lea
bnd
lcall
pop
in
push
fwait
lret
fwait
testb
xchg
jnp
jno
outsl
lods
ret
aam
pop
mov
fxch
xchg
call
cmp
or
fcmovbe
pop
jmp
movsb
inc
test
sbb
or
ss
fistpl
rolb
rcrb
push
mov
jmp
mov
sub
mov
add
loope
aad
jbe
xchg
cmp
imul
test
adc
push
adc
sub
mov
sarb
orl
and
es
sbb
les
lods
sub
xchg
imul
and
enter
dec
psubq
addr16
push
dec
aad
xor
mov
cmp
sarl
icebp
xchg
daa
inc
aad
add
js
cmp
int3
mov
sbb
push
inc
loope
sbb
fisttps
insb
dec
pop
add
fucom
and
inc
subl
int3
lea
xor
test
and
stc
mov
ja
mov
lock
add
js
mov
shrl
dec
mov
cmp
jg
push
aad
test
imul
pop
adc
xor
adc
leave
or
adc
dec
mov
andl
insb
bound
jae
test
dec
adc
pop
daa
jno
adcb
and
popf
fisubrs
mov
sub
cld
outsb
push
cmpsl
stos
ret
popa
push
repnz
js
imul
mulb
dec
push
lods
mov
jb
cmpsl
push
je
in
sub
stos
mov
pop
sbb
jbe
xchg
out
pop
in
aaa
xchg
lock
sbb
jge
cmp
sahf
addr16
sbb
addl
mov
mov
je
xchg
clc
aad
out
push
sub
adc
lret
outsb
sarb
outsb
mov
movsb
adc
lret
xlat
and
mov
cmp
pusha
mov
in
jp
sbb
iret
push
push
jns
pop
ljmp
dec
fwait
cltd
push
bound
test
ds
mov
adc
push
lcallw
addb
ja
shlb
xchg
imul
sbb
mov
fildl
xchg
jg
clc
mov
std
xor
ja
dec
jns
mov
cmp
nop
mov
scas
fbld
push
ss
xchg
mov
test
sub
xor
stc
rep
subb
js
in
fnsave
lret
xlat
pop
push
sub
adc
andl
sarb
inc
fcmove
mulb
pop
pop
mov
scas
aad
addr16
pop
jnp
and
shl
jmp
outsb
sub
cli
lea
xor
xchg
sbb
movsl
add
dec
fwait
ss
stos
or
repz
clc
cmp
and
mov
pop
loop
mov
xor
push
aaa
insb
stos
or
sbb
cmp
stc
cmp
into
jbe
fildll
mov
aam
dec
lahf
mov
insl
mov
jmp
mov
push
mov
imulb
lcall
jno
adc
hlt
in
fidivs
cmp
popl
jnp
sbb
push
adc
ror
cld
cmc
bound
pop
adc
and
fbstp
inc
iret
push
push
push
adc
fs
jle
add
int3
mov
push
roll
hlt
arpl
dec
adc
fninit
or
adc
xor
stos
daa
xchg
dec
fcoml
adc
lock
xchg
mov
or
sub
sbb
inc
mov
push
xorb
or
pop
sti
sub
cmpl
xchg
std
mov
push
test
sbb
xor
and
xchg
fistpll
and
ds
and
xchg
outsl
xchg
jo
cmp
scas
filds
arpl
push
sub
adc
test
mov
mov
push
fdivs
loope
mov
movsl
addr16
int
sahf
out
dec
push
lahf
sub
xorb
xchg
fld
xchg
mov
sahf
ds
pop
sbb
cmpsb
cmpsb
ficoml
into
or
addr16
push
in
xor
lret
ret
xchg
icebp
pop
jns
push
jnp
or
dec
lret
loop
test
add
or
arpl
stc
aam
subb
stos
xlat
pop
cwtl
fcomp
push
or
cmpl
mov
rcl
mov
cmp
bnd
mov
jge
clc
jp
sbb
je
sub
adc
jecxz
adc
jl
sahf
push
push
lods
mov
in
and
loopne
push
mov
cltd
push
dec
xor
mov
mov
scas
xchg
insb
jae
cmp
cwtl
sub
jnp
xchg
ficomps
jb
ficoms
icebp
popl
insb
jno
adc
data16
push
dec
negl
lds
dec
call
and
fistpl
cmp
jne
inc
or
mov
pop
loop
cs
push
cs
outsb
adc
popf
mov
das
jg
loopne
pushf
dec
subl
ds
sbb
clc
mov
hlt
fisubs
xor
cld
pop
xor
cmpsb
pop
fstpl
jecxz
popa
or
cmpsl
xlat
mov
cmc
push
sete
jl
mov
mov
pop
dec
repnz
sahf
leave
add
in
daa
aaa
aam
imul
sbb
psrad
cmpb
in
adc
pop
jp
ds
in
movsl
mov
mov
int3
jnp
inc
jp
mov
insb
add
mov
outsb
mov
sub
adc
int3
pusha
leave
out
les
mov
push
or
subb
cmp
or
pop
scas
rclb
shll
dec
mov
lret
adc
movsl
mov
arpl
scas
mov
inc
mov
push
idivl
mov
cmpsb
dec
loop
jge
int3
outsb
mov
and
push
in
adc
cmp
outsb
stos
popa
dec
ljmp
orb
orl
add
cmp
jl
mull
mov
pushl
fimull
xor
in
jecxz
xchg
xor
xor
movsb
lods
sar
mov
sbb
ror
dec
pop
jp
std
rorb
clc
jp
popa
cmp
inc
xlat
ficompl
cmp
pop
mov
adc
das
inc
adcl
aam
mov
sub
mov
inc
add
push
sahf
mov
push
push
sub
ljmp
aas
sub
xlat
inc
xchg
push
or
jl
cmp
jne
inc
and
mov
dec
mov
enter
sahf
dec
js
xor
sub
arpl
incb
notb
repz
popa
inc
cwtl
xor
inc
and
mov
ds
sbb
pop
ret
movsb
scas
shll
insl
sbb
dec
loop
nop
adc
mov
lock
in
ss
cld
imul
pop
frndint
jo
rolb
jne
outsb
jmp
xor
ds
dec
xlat
outsb
dec
nop
sbb
out
es
mov
popf
imul
and
mov
ja
mov
out
mov
mov
adc
sub
test
dec
inc
push
jge
pop
push
cmpsl
nop
rorb
mov
cmp
push
testb
lret
adc
adc
outsl
mov
repnz
shlb
in
inc
movsl
addr16
xor
ficoms
lods
adcl
cmp
cmp
mov
ja
decl
adc
sub
das
lret
inc
cmpsl
dec
mov
push
jb
test
xchg
std
xchg
clc
sub
jne
enter
push
popa
pop
lret
repz
dec
rclb
ljmp
mov
jbe
adc
enter
inc
or
mov
roll
bound
pop
push
imul
inc
loope
pop
popf
jmp
das
mov
jg
xchg
adc
call
out
pop
mov
jne
lds
push
arpl
xchg
ss
cmp
sahf
push
pop
pop
xchg
cmpsl
mov
out
or
lret
jl
aas
inc
in
jl
mov
jae
add
xlat
lea
mov
push
jecxz
pop
push
repz
mov
or
insb
and
dec
cmp
push
mov
mov
out
pop
addr16
or
rcll
popa
pop
scas
fwait
lock
sarb
adc
mov
and
dec
pop
add
or
lcall
adc
or
mov
jl
outsl
imul
jmp
pop
test
mov
xlat
adc
in
icebp
pop
fdivr
jae
xchg
jns
dec
stos
test
xchg
jecxz
mov
sbb
cmp
pop
ljmp
movsb
ss
rcrl
jae
daa
test
std
lds
sub
jne
mov
ds
jl
sbb
add
hlt
sbb
mov
add
lahf
sar
mov
insb
add
lea
gs
or
lods
rclb
or
jl
mov
cmpsl
mov
addl
push
lods
adc
adc
add
shl
mov
mov
mov
daa
cmp
lock
mov
push
jge
mulb
add
fildl
out
mov
inc
xchg
aas
jle
stc
js
aas
ja
push
clc
mull
push
add
sub
adc
pop
pop
sub
mov
mov
arpl
sti
je
fnsave
cmp
pop
ljmp
dec
out
outsl
daa
pop
adc
lods
je
jmp
adc
stos
mov
adc
and
or
loop
divl
jg
prefetcht0
lock
push
and
mov
ljmp
xchg
mov
insb
mov
mov
jo
into
adc
ret
test
lods
pop
ds
negb
sbb
inc
daa
xchg
jp
in
shlb
idivb
cmp
pop
out
ss
xchg
daa
ror
and
fsub
iret
push
cld
pop
sti
dec
push
sub
adc
sub
mov
adc
fcmove
cmc
add
sahf
mov
shlb
testb
outsb
mov
arpl
mov
icebp
stos
jge
js
push
imul
fs
sar
int3
movsl
pop
outsl
xchg
fs
in
jno
add
inc
aam
xchg
mov
ss
andl
push
pop
imul
jb
ja
ja
sub
pop
in
jp
pop
fwait
push
les
movsl
jge
sub
nop
mov
repnz
ljmp
inc
sti
mov
jmp
cmc
shrb
outsb
imul
or
fsubrl
push
enter
pop
cmpl
push
mov
cmc
movsl
dec
les
nop
rorb
subl
scas
std
inc
sub
lret
es
fbstp
xor
das
outsl
xor
mov
cmpsb
add
xor
data16
sub
add
test
out
repnz
les
mov
or
mov
cmp
and
mov
int3
lcall
xor
fstl
and
jnp
or
lea
sbb
pop
mov
into
mov
mov
inc
push
movsl
sub
sub
sub
cmp
stos
xchg
push
lock
ffreep
hlt
loope
xor
in
sarb
cmp
push
dec
dec
xchg
addr16
push
lock
pop
shrl
cmp
test
pop
adc
addr16
adc
dec
aam
jmp
or
test
pop
sub
pop
adc
pop
rcll
pop
pusha
push
adc
pop
sub
pop
adc
fsubs
imul
lea
daa
xchg
push
push
sbb
stc
andl
mov
push
cltd
xor
or
movsl
cld
shrl
push
adc
stos
mov
data16
adc
push
adc
cs
adc
adc
mov
scas
jo
push
inc
push
jecxz
imul
pop
in
dec
push
and
adc
jl
das
adc
pusha
push
adc
or
sub
xchg
adc
pop
mov
dec
push
mov
add
xchg
scas
pop
ja
arpl
mov
add
or
dec
add
lcall
adc
xor
dec
shl
divl
mov
outsl
sahf
sub
or
imulb
pusha
push
adc
inc
pusha
push
adc
fisubs
sub
dec
xchg
bound
mov
mov
data16
iret
in
imul
pop
jp
out
in
mov
lock
cltd
adc
push
pop
call
pusha
dec
pop
jecxz
pop
inc
inc
mov
stos
shll
mov
lea
movsl
mov
outsb
paddsb
out
push
je
adc
addr16
mov
insb
inc
pop
push
inc
cmc
orl
incl
xchg
sbb
dec
fwait
xchg
int
lea
mov
cmp
jl
roll
sbb
pop
nop
jnp
fadd
fnstcw
cmc
hlt
adc
faddl
jl
push
idivl
rorl
mov
loop
pop
jnp
lods
pusha
shl
cmc
enter
fsubl
jo
out
mov
and
sbb
aad
shlb
inc
hlt
mov
fimuls
cmp
cld
add
ss
leave
loop
je
mov
les
xor
adc
xor
lock
popf
fidivs
push
mov
xchg
mov
or
xor
iret
daa
cmp
fistps
sbb
pop
adc
lods
adc
dec
mov
mov
push
ss
cltd
std
inc
imulb
pop
insb
fwait
aaa
insl
daa
cmpsb
pop
push
jl
mov
insl
xchg
lock
clc
push
insb
sub
mov
lret
movsb
cmp
jle
scas
js
sub
lahf
jmp
aas
mov
loop
fnstsw
loop
mov
mov
and
std
je
jo
adc
popf
cli
outsl
push
xchg
and
push
loope
inc
mov
mov
and
inc
xor
or
xchg
cmp
or
dec
adc
cs
out
faddl
sub
push
jnp
inc
dec
or
pop
dec
xchg
jno
dec
bound
jg
add
or
inc
sbb
push
push
pmulhuw
pop
jbe
and
lea
xor
push
or
lret
sub
xor
es
or
jmp
ret
add
add
cmpsl
jns
xchg
or
frstor
je
popf
das
mov
mov
fcom
scas
mov
fwait
aam
movsl
mov
js
sub
sub
fldl2t
jno
pop
sbb
in
in
jns
and
mov
dec
rclb
popa
xor
jge
ds
aad
sub
and
dec
sub
and
scas
loope
adc
xlat
fcmovb
add
push
cmp
fcmovb
hlt
xor
or
int
jae
mov
jmp
jae
mov
xchg
and
and
enter
pop
push
scas
cmp
fnsave
rcrl
and
insb
push
rol
push
push
push
xchg
lret
dec
xchg
xor
inc
daa
stos
ljmp
cmpsl
mov
sahf
lock
loope
mov
jo
xchg
sub
out
daa
aas
or
out
adc
jle
les
leave
and
scas
sub
ret
jmp
jle
mov
push
scas
pop
add
adc
push
inc
in
cmp
mov
repnz
js
mov
int
outsl
ljmp
cmp
xlat
sub
and
ret
in
call
sbb
shll
es
leave
gs
and
push
lret
xor
out
out
clc
lahf
jle
push
push
jecxz
pop
rcrl
out
shll
lods
sub
insl
jnp
int
mov
adc
data16
fstl
xchg
adc
imulb
sub
and
test
xchg
jp
imul
fbstp
icebp
mov
jns
inc
out
xchg
pop
cli
repz
pop
dec
repz
or
adc
leave
fadds
stc
daa
cmpsl
test
lods
and
sub
adc
in
stc
mov
pop
mov
mov
sarb
cmc
leave
enter
enter
dec
ljmp
icebp
pop
adc
sahf
sbb
pusha
jmp
pop
adc
cmpl
mov
and
pop
adc
jae
fnstenv
daa
push
loopne
adc
imul
sub
jnp
adc
fcoms
mov
idiv
stc
repz
dec
push
dec
xchg
sbb
pop
adc
ljmp
fldl
adc
adc
or
movsl
lods
push
cld
stc
pop
adc
clc
mov
pop
out
pop
adc
stos
dec
lahf
aas
sub
das
cltd
aad
int3
repnz
adc
mov
adc
inc
xchg
daa
dec
enter
lret
fwait
pop
std
pop
adc
in
mov
add
adc
jo
dec
insb
push
shl
adc
mov
add
pop
adc
jmp
fwait
pop
stc
adc
adc
push
mov
out
adc
lret
mov
gs
push
ljmp
push
dec
nop
xor
pop
adc
jb
lods
pop
jmp
fxch
out
pop
adc
cmp
ljmp
cmp
pop
adc
xchg
rorl
inc
testl
dec
cltd
outsb
xchg
int
xlat
pop
adc
sbb
roll
adc
xlat
lds
and
out
mov
cmp
lcall
cmc
shrb
sbb
pop
adc
pop
mov
scas
out
xchg
mov
mov
pushf
clc
pop
adc
incb
mov
dec
pop
adc
mov
cmp
incl
adc
xchg
stc
pop
sbb
lret
call
pop
adc
adc
jno
mov
inc
fisubrs
adc
mov
or
pusha
in
adc
ja
cmpsl
daa
pop
lods
in
in
adc
push
or
sub
iret
push
in
jmp
dec
iret
ret
lea
pop
sub
mov
in
xchg
pop
lds
cltd
arpl
notb
lds
fsubp
je
jecxz
adc
bnd
jl
sub
pop
adc
xor
decl
addr16
pop
adc
imul
clc
cli
pop
adc
sbbl
lds
ss
in
pop
adc
dec
and
pop
adc
inc
cmp
in
xor
pop
adc
adc
arpl
inc
sahf
loopne
or
xchg
sahf
sbb
push
sub
or
pusha
sbb
mov
mov
push
filds
adc
into
dec
and
mov
rolb
adc
andb
mov
adc
inc
push
fadd
mov
popa
xor
scas
mov
int
fisubl
or
jecxz
add
daa
std
dec
push
test
std
xchg
add
mov
icebp
in
imull
movb
pop
out
cmp
ds
clc
add
xchg
inc
fidivrs
frstor
sub
or
lds
rcrl
popa
mov
pop
push
or
mov
jae
jns
inc
pusha
flds
adc
cmp
cltd
aam
repz
flds
adc
out
jae
scas
sub
dec
jbe
pop
flds
adc
cld
aaa
cs
pop
div
flds
adc
movsb
or
jo
lods
enter
daa
aad
std
jnp
xchg
mov
dec
faddl
adc
jbe
pop
sbb
pop
adc
shrl
adc
sub
cmp
adc
push
aas
jle
scas
or
pushf
imul
add
adc
adcb
adc
pop
adc
xchg
daa
dec
enter
xchg
xor
pop
adc
sti
imul
mov
mov
adc
sahf
insb
icebp
sbb
nop
push
or
fwait
arpl
lahf
sub
mov
adc
jb
jnp
mov
shr
adc
std
stc
repz
dec
insl
adc
shlb
inc
lods
movsl
test
aam
adc
lock
lahf
aas
sub
das
mov
adc
and
lds
loopne
pop
adc
dec
enter
pusha
jmp
std
pop
adc
cli
imul
mov
cmp
adc
fcomps
filds
adc
mov
andl
in
fnstenv
daa
shr
pop
adc
imul
imul
cmp
or
push
lret
out
pusha
call
sti
pop
adc
sub
cmp
rolb
adc
vpslld
cltd
popa
jmp
pop
adc
xlat
scas
pop
jmp
and
adc
lahf
jg,pt
add
cli
pop
adc
sub
or
pop
adc
pop
lret
nop
and
arpl
cs
mov
push
jp
icebp
mov
adc
pop
adc
xor
loopne
pop
adc
mov
test
mov
loop
mov
lods
pop
add
add
add
adc
jno
lock
add
aad
lods
loop
adc
mov
testl
push
xchg
xor
adc
mov
fucomp
fidivrs
ljmp
cli
imul
stos
jmp
pop
adc
out
clc
pop
sbb
outsb
pop
call
adc
sbb
mov
sub
cld
popf
or
pop
adc
xor
and
pop
adc
outsl
sbb
daa
dec
in
jb
je
or
or
repnz
pushf
mov
pop
adc
es
xchg
dec
call
mov
or
push
in
pop
adc
inc
dec
iret
ret
lea
pop
adc
daa
fldln2
xchg
add
adc
clc
pop
adc
aam
cmpsb
testb
inc
int
in
add
adc
mov
aam
enter
gs
pop
adc
jbe
lret
push
test
cmpsb
cmp
dec
and
pop
adc
hlt
popf
dec
mov
adc
or
mov
push
dec
js
das
cwtl
and
sti
pop
adc
sub
shrl
imul
rcl
jne
out
jae
cltd
push
sti
pop
adc
xor
shll
pop
loopne
fs
idivl
add
ljmp
leave
jge
mov
es
xlat
pop
adc
orl
or
adc
xchg
push
push
and
sub
pop
adc
adc
mov
add
stos
and
jp
push
out
adc
mov
out
outsl
push
sub
jmp
adc
adc
cmp
pop
adc
dec
out
ret
sbb
add
adc
movl
aam
adc
stos
add
cmpsl
mov
sbb
or
pop
adc
adcl
dec
jnp
sti
pop
adc
js
push
cmp
daa
xor
pop
adc
test
and
jns
mov
filds
adc
pop
mov
adc
pop
adc
sbb
jb
cmp
js
addr16
push
pop
adc
push
mov
pop
adc
cmpsb
push
mov
mov
loopne
pop
adc
mov
je
pop
adc
bswap
xchg
daa
sbb
sub
adc
push
jl
idivl
or
in
fnstenv
daa
dec
clc
pop
adc
imul
ds
mov
loope
enter
imull
sbb
int3
push
sub
pop
adc
clc
mov
fildl
adc
push
sbb
pop
adc
in
mov
pop
adc
fcomps
pop
adc
lods
or
mov
mov
into
jp
in
mov
lcall
mov
repz
pusha
call
pop
adc
ljmp
pop
adc
sahf
aas
jle
push
and
pop
adc
mov
add
pop
adc
sbb
xchg
daa
sbb
sub
adc
inc
jl
idivl
aam
pop
adc
mov
fnstenv
daa
xchg
pop
or
xchg
mov
iret
lahf
imul
rcrl
jnp
adc
loope
jmp
jg
clc
movsl
sbb
int
cmp
pop
adc
mov
rolb
adc
imul
js
in
fsubrp
mov
xchg
and
pop
adc
fistpl
pop
adc
stos
push
ds
clc
fldl
adc
cmp
mov
pushf
std
xor
pop
adc
jle
jmp
insb
in
lahf
je
pop
adc
fisubl
mov
sbb
or
inc
lds
cmp
mov
xchg
mov
adc
cmp
pop
adc
cmc
rorl
xor
aam
pop
adc
test
les
int3
out
adc
dec
fsubrp
addl
loopne
pop
adc
push
subb
loopne
sti
pop
adc
inc
cmp
sbb
push
out
pop
adc
imul
cli
pop
adc
mov
cmpsb
pop
push
ljmp
push
or
mov
adc
mov
mov
or
imul
adc
in
add
adc
and
or
adc
int3
dec
leave
xlat
pop
adc
xchg
dec
testl
xchg
push
or
sti
aad
int
pop
adc
pop
mov
pop
sbbb
call
adc
pop
add
sub
out
adc
dec
cmc
lock
sbb
and
cmp
mov
jno
movsl
jne
repz
fists
cmp
inc
dec
jb
lods
out
fmulp
pushf
sarb
data16
cmpsl
xorb
dec
inc
das
loope
jne
rorb
mov
cld
xor
dec
sarb
test
movsb
leave
mov
test
mov
imul
out
ss
in
cltd
fimull
jg
xchg
xchg
mov
fcmovb
jo
ja
je
nop
inc
stos
daa
xchg
lahf
add
sahf
addr16
cmc
push
jb
inc
xchg
dec
out
jo
dec
shll
lods
imul
daa
stos
mov
sub
xchg
iret
clc
jmp
cmp
ja
adc
mov
das
dec
inc
mov
sbb
sub
hlt
rorb
mov
adc
sti
push
cmp
roll
or
xor
mov
addb
xor
pop
fistpll
mov
fcoml
jne
jge
ret
xchg
cwtl
inc
mov
mov
lds
lahf
xchg
mov
lock
mov
dec
aam
ljmp
cmpsb
jae
lods
insb
inc
sarb
jmp
mov
xchg
bound
test
imul
ljmp
mov
pop
inc
lcall
mov
cmp
inc
mov
fwait
and
es
int
and
mov
ja
daa
xor
pusha
adc
fcomps
adc
call
xor
and
es
ret
fcomps
adc
and
mov
and
jne
and
adc
negl
popa
sar
call
dec
push
xchg
shr
fnstsw
pop
in
jae
push
dec
fwait
dec
push
loope
arpl
or
jb
packsswb
cmp
adc
fstpl
or
or
adc
push
ja
pop
add
js
call
mulb
outsb
daa
sub
sub
test
adc
stos
out
rolb
idivl
push
adc
mov
inc
jge
ret
mov
fwait
inc
sahf
call
std
je
and
pusha
shrl
bound
inc
mov
test
mov
insb
ja
cmc
aas
adc
je
imul
rcll
jne
and
adc
negl
popa
shrb
pusha
push
jge
pop
pop
mov
or
es
xor
push
daa
dec
lahf
push
push
sbb
dec
or
fsubl
std
pushf
and
mov
loopne
inc
fnstenv
and
sbb
ja
cmc
jge
cmp
inc
sti
mov
sub
cmpsb
inc
adc
inc
xor
sbb
js
push
data16
xchg
stos
cltd
push
and
pusha
adc
mov
xlat
pop
je
push
and
push
cmp
insb
hlt
xor
decb
sbb
xchg
push
pop
fbstp
sub
ss
arpl
cwtl
pop
in
adc
movsb
add
ja
popa
mov
loopne
jge
jb
and
sbb
cmp
les
mov
addr16
sub
imul
cmpsl
in
aam
mov
mov
dec
imul
std
imul
cmp
mov
out
mov
jge
insb
sbb
or
repnz
mov
cmp
das
ljmp
cld
fdiv
adc
push
ds
movsb
sub
xor
push
add
add
ja
fs
popa
dec
xchg
es
push
jo
lahf
lods
push
hlt
mov
cmc
mov
imul
add
sub
ja
sub
repnz
ret
imul
fcmovbe
fidivrs
and
cmp
push
divb
and
push
cmp
pop
or
mov
push
imul
pop
adc
pop
mov
adc
cmp
nop
mov
adc
adc
cli
insb
sbb
xor
or
adc
and
or
jns
fildl
lods
fsub
sub
adc
dec
jne
dec
lods
push
int3
inc
cmp
mov
mov
xor
fcmovu
test
inc
movsb
inc
clc
pop
dec
daa
aas
cltd
imul
add
pusha
mov
add
adc
xor
jnp
aad
mov
push
shll
in
nop
xor
out
mov
stos
negl
in
push
cmp
loop
mov
or
lods
mov
cmpsb
xchg
inc
js
hlt
xchg
mov
ja
sbb
xchg
in
das
mov
or
es
or
bound
cld
pusha
push
adc
dec
jecxz
xor
fucomip
repz
mov
sub
xor
dec
mov
sub
loop
lods
jmp
popa
int
je
lods
sbb
shrb
add
mov
pop
jb
sub
xchg
and
ss
out
jne
cld
lret
fists
xchg
int3
adc
add
push
in
popf
je
lods
pop
ss
or
adc
or
imul
jp
or
movsl
sub
lock
popa
xchg
sub
jb
cmp
xchg
adc
in
fnsave
cmp
mov
xlat
mov
imul
fnstcw
sub
enter
cmp
xor
push
adc
cmp
xor
push
xchg
dec
push
loopne
or
pusha
sub
popa
push
adc
cmp
dec
movsl
jb
xor
bound
jg
adc
enter
testl
or
push
popf
shr
enter
stc
push
sbb
jne
pop
insb
xorb
mov
and
mov
jmp
pusha
mov
xor
imull
jae
adc
repz
loope
jnp
in
leave
shlb
push
movsb
pushf
mov
mov
xchg
inc
fdivrl
sub
pop
dec
sarb
cli
push
pushf
call
push
and
fcmovbe
repz
lret
daa
pop
and
je
lds
mov
push
shrb
or
addr16
scas
push
pusha
dec
xchg
jno
shll
imul
test
and
mov
xorb
je
popf
ds
int3
pushf
cmp
fimull
inc
mov
iret
pop
cmp
mov
enter
in
jmp
aas
mov
push
outsl
pop
cmp
cwtl
cli
lods
mov
add
dec
adc
sub
adcb
mov
call
mov
xchg
aaa
sub
cwtl
push
loope
jae
inc
mov
idiv
add
repz
fsubl
loop
mov
jmp
add
dec
in
das
call
fildl
or
ljmp
outsl
dec
in
outsb
jge
xchg
aaa
pop
popf
push
cli
and
fs
jno
iret
ljmp
loopne
mov
int
sub
sbb
pop
lahf
inc
movsb
std
addr16
pop
jns
ret
or
inc
je
jne
mov
insb
mov
mov
mov
hlt
add
mov
in
rcrb
xchg
mov
out
jno
xor
adc
pop
adc
in
int
cmpsb
lods
and
hlt
sbb
xor
xchg
loope
xchg
jmp
xchg
shrb
add
pop
mov
dec
pop
lret
inc
movsl
pop
cld
scas
les
sub
outsb
push
sbb
xor
adc
or
sti
jl
aas
add
and
in
or
adc
decb
jecxz
sbb
mov
or
mov
adc
xchg
mov
incl
lock
mov
pushf
mov
xchg
fistpl
mov
ss
das
mov
xor
pop
adc
or
or
adc
inc
arpl
nop
hlt
iret
jne
cmpl
repnz
jp
pop
dec
daa
testl
sbb
ret
repz
or
mov
mov
out
in
pop
push
inc
lds
icebp
popa
out
dec
orb
je
or
movsb
repz
into
dec
cmp
fst
inc
sbb
or
add
mov
adc
lahf
jp
push
dec
mov
push
ret
inc
adc
inc
push
gs
mov
sub
adc
push
repnz
cmp
test
adc
pop
fs
stos
dec
cwtl
rcrl
add
jge
xor
lret
mov
mov
or
dec
pop
cmpsl
cltd
gs
fdiv
psllw
sub
sbb
nop
popa
mov
jb
loope
lods
jno
xchg
mov
or
mov
jnp
xchg
or
mov
in
pop
xor
mov
lods
xor
jge
mov
in
scas
pop
push
xor
xchg
scas
lret
addl
pusha
shl
mov
outsb
fwait
push
mov
es
fwait
lahf
ret
loope
arpl
xchg
xchg
jecxz
out
xor
add
ljmp
jmp
test
adc
ss
fmul
pop
cmp
dec
loop
insl
jo
outsb
scas
mov
jmp
test
adc
and
adc
add
or
dec
ret
roll
clc
outsb
push
mov
into
test
leave
adc
clc
jp
jmp
or
and
cmp
imul
xor
add
dec
jge
mov
roll
insb
call
test
adc
aaa
cmp
insb
fmuls
jp
jl
sbb
pusha
push
fidivrs
pop
xor
cmpsb
adc
dec
xor
aas
adc
jp
jecxz
sbb
add
mov
aam
fstl
daa
or
es
dec
pusha
mov
add
or
inc
inc
addb
fsts
sub
push
fldl
add
adc
mov
mov
dec
js
jge
sbb
popa
ror
or
and
and
mov
mov
dec
lcall
jl
nop
hlt
imul
mov
aam
lock
or
fidivs
mov
sub
add
push
sbb
jg
stos
sub
lock
popa
mov
jmp
and
data16
cs
sbb
mov
cs
cld
mov
xchg
cmp
adc
jecxz
jge
fcmovu
fwait
sbb
push
or
or
jbe
mov
push
adc
sub
mov
ret
cmpb
adc
into
pop
in
insl
add
jle
jb
adc
lods
pop
movb
into
test
rcll
push
pop
stc
loop
divl
push
xchg
jne
pop
sti
or
leave
mov
or
pop
lds
cli
cmc
xchg
dec
jmp
fucomip
sub
lret
mov
xchg
and
add
mov
lret
cmp
sahf
inc
sub
pop
dec
mov
dec
stos
inc
fsts
xor
bound
xor
fs
jecxz
dec
nop
mov
outsl
test
and
ret
or
or
mov
pusha
push
adc
imul
rcl
ficomps
daa
in
and
repz
xorl
dec
aas
xchg
arpl
fcmovne
push
lds
pop
mov
idivl
mov
adc
and
xchg
jle
aam
push
leave
cmp
push
bnd
mov
jge
dec
cmpsl
call
pop
sbb
or
adc
adc
add
pop
sub
loope
jnp
leave
daa
pop
add
jns
mov
in
or
adc
orl
or
popf
popf
ret
mov
stc
pop
mov
xor
xchg
cs
mov
out
cmp
and
movsb
iret
movsl
mov
out
rclb
pushf
push
or
push
mov
jp
stos
xor
lcall
inc
pop
cmp
mov
mov
mov
leave
xchg
inc
fimull
sbb
fildll
int
sti
dec
and
mov
lahf
out
push
in
clc
inc
mov
add
inc
icebp
or
pop
push
dec
into
call
inc
jb
lods
repnz
mov
jge
add
jb
dec
idivl
pop
call
lret
sbb
imulb
mov
add
add
xchg
mov
enter
in
mov
or
xor
pop
push
or
inc
fistpll
mov
and
ljmp
sub
cmpsl
mov
movsl
push
sub
cmp
hlt
push
fs
adc
rclb
stos
mov
mov
je
iret
mov
faddl
or
daa
lret
clc
addb
test
inc
and
aad
scas
pop
shll
dec
fwait
inc
fwait
lods
push
fwait
cmp
ja
sti
ret
leave
imul
pop
jnp
mov
ss
add
hlt
lcall
cmpl
mov
add
arpl
sub
inc
test
mov
add
adc
je
aaa
daa
dec
jnp
add
mov
xlat
scas
pop
mov
imul
js
idivb
inc
fiaddl
gs
sub
ret
mov
jp
lods
je
xor
sub
inc
sub
pop
loop
in
lock
jbe
ss
push
into
outsl
xchg
sarb
or
xchg
mov
push
cmpsb
gs
push
shl
enter
movsl
movsl
ss
jle
cmc
rolb
pusha
sub
popa
push
adc
sarl
or
push
dec
inc
fwait
stos
or
outsl
cmc
xor
pop
xchg
xor
xor
cmpsl
fadds
or
cld
pusha
push
adc
mov
mov
or
ds
icebp
or
adc
insb
test
add
ss
gs
inc
lahf
cmp
adc
cmpsb
mov
adc
xchg
push
pop
out
push
or
add
adc
or
adc
cld
lds
nop
adc
dec
fisubs
popf
cld
or
xchg
push
push
xlat
inc
js
jnp
mov
push
cmp
pusha
loopne
pop
mov
mov
cmpsl
jmp
sbb
adc
add
xor
and
or
adc
dec
add
icebp
or
adc
and
and
test
add
addb
xchg
aam
mov
andb
pop
sub
jno
mov
jae
scas
push
mov
lods
aad
movsb
mov
loop
xchg
aam
mov
lcall
xor
fs
or
adc
leave
adc
add
and
jo
or
fadd
push
ret
cmp
jecxz
mov
jo
loop
repz
or
dec
adcb
dec
cmp
inc
push
hlt
roll
ficoml
push
movsl
pop
hlt
xchg
leave
mov
jg
orb
fwait
add
outsb
jnp
push
sbb
out
push
int3
pop
adc
scas
mov
popa
add
in
or
adc
mov
sbb
or
xchg
mov
ss
pop
movsb
push
stc
add
and
adc
mov
adc
repnz
dec
mov
adc
mov
or
adc
aas
push
repnz
sbb
sbb
fnstenv
andl
or
adc
les
or
xchg
and
sub
icebp
or
adc
les
fcomps
xor
hlt
in
or
adc
loop
adc
dec
out
xchg
xlat
icebp
or
adc
popf
adc
or
cld
pusha
push
adc
pop
out
fisttpl
adc
cmp
arpl
xchg
sub
dec
dec
push
in
add
sarb
mov
and
cld
aam
or
rorb
xor
arpl
xor
mov
push
dec
dec
inc
or
mov
mov
leave
in
mov
in
imul
xor
inc
cmp
mov
pop
adc
outsb
mov
xchg
mov
mov
ret
movl
adc
or
ret
mov
cmp
cmp
pop
push
pop
mov
adc
push
adc
stos
dec
hlt
dec
inc
add
mov
adc
jae
adc
test
pop
adc
dec
mov
adc
ret
push
push
outsl
push
adc
cmpsl
arpl
mov
movl
xor
insb
jle
iret
xlat
mov
pop
or
xchg
iret
mov
jecxz
add
mov
xor
xor
insb
jle
adc
xchg
mov
or
sub
pop
ljmp
in
xor
or
mov
sbb
pusha
mov
inc
cmpsl
arpl
mov
inc
pop
faddl
xor
fdivp
mov
ret
jge
popa
mov
jl
mov
ljmp
cltd
xor
rcll
ja
js
pop
dec
jle
mov
and
popf
mov
js
addr16
or
adc
scas
cltd
in
daa
icebp
pushf
addl
pop
xor
pop
aas
add
mov
mov
dec
or
repz
sahf
mov
das
pop
sbbb
jecxz
jg
fnstenv
mov
cli
repz
pushf
sub
mov
push
ds
or
mov
xor
or
or
ret
popa
mov
jg
test
outsb
aas
scas
pop
mov
mov
setbe
ss
mov
fs
sub
cmp
lcall
or
push
movsl
xor
outsb
mov
repz
jl
scas
loopne
mov
shl
jne
mov
cmp
je
or
stc
pop
je
dec
xor
cmp
insb
out
je
or
stc
ss
int3
pusha
inc
pop
and
cmpsl
xor
mov
gs
mov
mov
das
outsl
in
or
adc
and
mov
mov
push
dec
xchg
dec
shlb
or
adc
out
dec
mov
adc
pop
sub
dec
mov
adc
icebp
rcll
in
or
adc
and
cwtl
out
add
or
adc
or
adc
inc
lock
adc
xchg
mov
mov
in
outsl
pop
loopne
push
add
mov
cmp
dec
stc
test
sub
cmp
ss
adc
dec
inc
into
in
or
adc
add
pop
lock
mov
adc
mov
sbb
mov
ret
sahf
std
divb
movsl
push
push
inc
push
ficompl
fildl
insl
dec
adc
shrl
fmull
lock
adc
push
adc
push
adc
push
adc
push
adc
fsubrs
cli
insl
jl
mov
sti
xor
or
pop
js
sub
loopne
repnz
mov
adc
hlt
adcl
insl
fs
xorl
mov
dec
adc
outsl
icebp
xor
ss
stos
sub
push
loopne
and
dec
xchg
push
sub
xchg
cltd
xchg
dec
mov
insb
mov
mov
add
loop
fisubl
nop
add
push
push
cmpb
adc
push
adc
test
add
jmp
call
lcall
mov
add
xchg
ja
inc
push
or
leave
or
ret
sub
push
cmp
int3
loop
mov
lret
dec
sahf
imul
mov
aam
cli
repz
int3
pop
adc
mov
or
adc
pcmpeqw
push
cmc
jl
aad
in
in
or
adc
push
add
push
push
sub
cwtl
je
lret
add
mov
push
or
adc
mov
mov
xchg
sub
pop
inc
mov
imul
inc
clc
xor
loope
icebp
or
adc
mov
adc
or
cs
mov
pop
adc
push
push
pop
xor
cmp
or
adc
mov
xchg
lret
leave
adc
sbb
addr16
int3
pop
adc
pop
js
mov
xchg
lods
enter
or
mov
or
bnd
xor
cmc
cmp
adc
int3
pop
outsb
divb
cmp
mov
orl
lods
sbb
dec
lahf
aas
jle
mov
cmovs
mov
jns
out
icebp
or
adc
xchg
lar
or
lods
mov
or
xor
clc
cmp
or
adc
daa
dec
out
test
mov
dec
jge
cltd
stos
mov
leave
mov
inc
jbe
xlat
sub
mov
lock
mov
xor
lods
inc
in
or
adc
rolb
jne
aas
jb
cmc
and
shrl
jno
leave
jns
loop
lods
scas
js
inc
leave
xor
mov
xlat
sti
dec
xor
xchg
scas
xor
mov
lret
or
and
ljmp
addr16
add
sub
lret
pop
iret
mov
in
or
adc
or
add
xchg
pop
icebp
or
adc
or
adc
or
movl
loop
in
mov
or
adc
jb
jno
in
or
or
adc
jp
pop
fnstcw
cmp
int
jnp
in
or
adc
in
pop
dec
ds
or
or
cmpsb
xchg
sarl
mov
in
or
adc
scas
inc
adc
aad
or
adc
xchg
mov
imul
in
or
adc
rol
mov
add
xor
in
or
adc
ja
bound
dec
in
or
adc
addr16
and
jl
dec
leave
mov
in
or
adc
stc
jl
and
ljmp
adc
insl
enter
insb
in
or
adc
jl
mov
push
int3
pop
adc
mov
rcl
repnz
sub
sub
push
cmpsb
imul
lahf
and
hlt
mov
jmp
test
xor
adc
pop
sbb
aad
push
dec
push
stos
divl
clc
lret
shll
lcall
fwait
nop
mov
adc
mov
adc
mov
cmp
and
mov
jge
aas
pop
loopne
pop
adc
movsb
mov
lods
and
aaa
lods
adc
imul
or
push
mov
sub
cmp
or
adc
fucom
out
xchg
mov
rolb
out
popa
and
add
pop
add
jecxz
stos
jmp
fidivl
push
sub
shl
das
int3
jb
cwtl
insl
repz
sbb
jns
ds
popf
dec
jnp
sub
adc
call
repz
adc
aam
or
jns
dec
je
or
sbb
or
ja
sar
mov
lcall
sbb
or
adc
pop
adc
movb
mov
adc
sahf
cld
pusha
push
adc
scas
mov
pop
adc
test
pop
adc
dec
cwtl
leave
push
dec
arpl
sahf
push
int
push
aam
or
mov
mov
or
pop
in
or
sub
mov
xchg
es
dec
mov
pop
cltd
jno
rclb
jo
mov
cmp
xchg
mov
jnp
outsb
xchg
stc
mov
std
stos
es
mov
lahf
ja
pushw
adc
xor
pop
pusha
push
adc
mov
es
cwtl
mov
rorb
push
out
arpl
adc
aas
sti
daa
push
out
incb
xchg
push
lcall
nop
pushw
adc
mov
in
sahf
jge,pt
loop
pusha
push
adc
push
outsl
mov
cmc
adc
adc
jbe
in
cwtl
arpl
adc
mov
cltd
mov
sub
cltd
ret
dec
nop
pushw
adc
mov
ds
pusha
push
adc
sahf
sub
cltd
and
adc
cwtl
arpl
adc
jno
xor
push
push
hlt
pop
fldt
mov
out
das
fcmovb
cmc
mov
lahf
shrl
push
adc
mov
push
or
jnp
mov
fcomps
arpl
adc
bound
stos
clc
or
adc
cmp
sbb
push
mov
xor
sbb
sub
push
adc
enter
adc
nop
pusha
push
adc
mov
jne
sahf
insb
push
inc
adc
lods
pusha
push
adc
sbb
pop
inc
mov
lcall
es
push
push
mov
lods
adc
rorl
fbld
push
adc
and
mov
cmp
or
xor
orl
mov
test
in
xchg
xor
jle
ss
jne
xchg
cmc
lock
rorl
sarb
dec
push
std
and
jg
add
ret
int
incl
mov
arpl
mov
cmp
int
sbb
insl
int3
lea
xchg
cli
add
leave
or
and
dec
cmp
test
mov
push
sarb
test
xor
frstor
stos
mov
jmp
and
aam
mov
shrb
mov
sub
mov
xchg
cmpsb
sub
sbb
xor
and
imul
jne
jnp
jl
pop
aam
fsts
sbb
repz
xchg
inc
lea
ja
ret
movl
sbb
in
stos
push
jle
rcll
mov
pushf
leave
cmpsb
sarl
mov
or
notb
xor
mov
call
lahf
test
sbb
lahf
ljmp
push
adc
js
js
or
xor
xor
pop
lahf
pusha
nop
test
push
cmp
arpl
sub
and
pop
add
inc
popa
push
adc
cmp
and
add
adc
rorl
sub
subl
mov
pusha
push
adc
add
or
adc
add
jns
jnp
dec
les
adc
mov
mov
rcrb
pusha
push
adc
cmp
mov
sbb
jl
push
or
mov
mov
add
int
cmp
je
cmc
cld
rcll
mov
cmp
movsb
std
hlt
enter
mov
push
dec
out
push
xor
pop
sub
sahf
stos
lea
add
pop
out
add
fisttps
lahf
testl
dec
or
xchg
and
stc
test
push
stos
sub
jns
cli
xchg
cld
std
loop
aas
insb
mov
ficoml
int
and
ljmp
push
adc
and
into
jns
sahf
inc
shlb
lods
sbbl
enter
shll
xchg
mov
mov
mov
mov
xchg
cltd
mov
clc
mov
adc
das
push
mov
pop
hlt
mov
adc
stc
js
dec
pop
cs
add
push
mov
pop
mov
dec
fwait
shlb
aas
jge
jb
out
dec
pop
xor
clc
push
mov
mov
push
aaa
cld
xor
fadds
or
test
ds
je
int
dec
out
xlat
scas
sahf
enter
leave
mov
test
xchg
mov
fwait
in
mov
adc
push
adc
jnp
ljmp
or
repz
or
mov
adc
xlat
and
cmp
aas
loope
imul
cmc
cli
repz
adc
ljmp
pop
or
push
aaa
hlt
xor
ja
je
stc
jle
push
roll
and
mov
dec
fwait
cltd
jnp
inc
pushf
aas
std
cmp
enter
outsb
lock
adc
inc
and
mov
sub
addb
lods
adc
clc
arpl
in
lods
pop
ds
cmpsl
mov
cmpsl
test
push
sti
cmpsb
hlt
push
dec
mov
outsb
dec
push
mov
iret
mov
dec
push
aaa
sbb
imul
bound
jns
adc
scas
xchg
jg
jp
cld
lcall
jg
pop
sarb
nop
adc
push
adc
jg
lods
pop
inc
int
out
fidivl
dec
pushf
ret
push
inc
imul
pop
and
sar
push
inc
enter
mov
fidivrl
push
adc
outsl
inc
xchg
xor
add
inc
mov
out
mov
popa
push
adc
adc
sub
insb
es
push
adc
mov
mov
repz
iret
mov
pop
ja
popa
push
adc
xchg
push
push
add
push
adc
lods
push
pop
lahf
xchg
mov
ficoms
mov
pushf
insl
into
lds
fsubs
adc
cld
into
xor
test
int
std
cmp
pusha
push
adc
jne
shlb
adc
in
les
adc
movsl
clc
pusha
push
adc
stos
xchg
bound
loope
stos
add
das
push
push
repnz
mov
xchg
xor
pop
adc
adc
cmp
push
pop
cmp
pop
adc
pop
adc
adc
inc
int3
pop
adc
push
mov
xchg
pop
mov
dec
int3
pop
adc
jno
dec
ror
adc
jo
testb
cmpsl
push
xchg
loopne
push
adc
ds
rorl
mov
adc
clc
or
adc
outsb
jno
fnstcw
cld
dec
and
outsl
mov
mov
adc
sub
enter
sub
or
fwait
sbb
addl
popa
push
adc
adc
and
xchg
imulb
mov
pusha
push
adc
int3
pop
adc
mov
push
fs
pop
adc
insb
popa
push
add
adc
sub
and
sub
adc
repz
and
or
js
push
adc
insb
pusha
pop
int3
pop
adc
or
imul
stos
call
mov
movsb
repz
jecxz
push
adc
adc
adc
loop
jl
popa
push
adc
iret
ret
jne
int3
push
outsl
push
cmp
fs
pop
adc
int3
pop
adc
push
xchg
fs
pop
adc
fimull
pop
int3
pop
adc
lock
push
xchg
dec
in
jb
or
push
das
jg
mov
cmp
adc
cwtl
inc
push
lods
push
mov
adc
pop
sbb
xor
adc
ljmp
push
test
push
out
sub
jmp
dec
xor
adc
test
or
adc
or
mov
les
ljmp
pop
adc
adc
adc
mov
lds
popf
or
stos
push
out
fs
adc
add
and
pop
adc
jno
mov
xchg
dec
mov
sbb
push
adc
shrl
push
adc
int3
stos
add
xor
sub
int3
pop
adc
xchg
arpl
adc
shll
adc
mov
je
push
adc
jmp
mov
loop
push
push
out
jbe
and
jmp
push
adc
dec
sub
or
sub
data16
gs
mov
adc
xor
test
aad
iret
pop
adc
mov
mov
push
decl
lock
aaa
lahf
pusha
sub
adc
pop
sbb
inc
outsb
sub
push
adc
pusha
rolb
lods
enter
adc
les
adc
sbb
mov
add
jno
pusha
sub
pop
lahf
jge,pt
repnz
sbb
pop
adc
pop
jbe
jno
sbb
adc
cmc
mov
lods
mov
div
out
fnstsw
pop
ss
shr
push
mov
inc
jecxz
lods
mov
hlt
js
iret
into
jmp
cmc
lods
repnz
mov
push
mov
pusha
inc
shll
movsl
xchg
mov
stc
shll
lock
out
push
mov
pop
mov
mov
clc
dec
sbb
mov
js
mov
sub
fcomps
add
sbb
inc
jmp
into
loop
mov
push
dec
shll
dec
scas
rclb
scas
mov
mov
push
jecxz
adc
dec
lds
jne
mov
stos
ljmp
decb
out
xchg
in
push
negl
push
mov
mov
dec
test
rclb
cmc
jae
dec
ss
or
or
rcll
cltd
or
cmc
in
cmp
dec
mov
xor
or
xchg
xchg
push
int3
pop
adc
rcll
jecxz
movsl
cmp
imul
or
in
push
repnz
popa
sbb
xchg
dec
out
mov
push
dec
xor
repz
or
repz
sbb
fnstcw
mov
xor
sub
fwait
push
ds
sti
mov
popf
push
int3
pop
adc
insl
mov
jge
xor
call
adc
das
imul
ffree
shrl
add
lock
push
mov
dec
nop
dec
push
int3
pop
adc
ljmp
test
pop
adc
movsl
dec
inc
fcoms
adc
mov
pop
adc
inc
adc
push
int3
pop
adc
aas
les
int3
pop
adc
dec
adc
sarb
push
int3
pop
adc
movl
cli
test
mov
imul
sbb
loope
dec
jmp
xchg
aad
js
push
adc
sbb
add
sub
fldt
sub
push
adc
orl
and
sbb
and
in
icebp
andl
ret
push
cmp
adc
mov
out
dec
lds
lret
dec
or
lods
shl
inc
add
lahf
jmp
adc
cmpsl
stos
sub
fcmovnb
popf
leave
out
jbe
je
mov
add
pushf
inc
cmp
jle
mov
xor
xchg
mov
fists
aaa
pop
xlat
enter
adc
ja
jg
out
sbb
and
adc
dec
movsb
jge
push
mov
jp
cs
add
cmp
mov
rcr
mov
pop
xor
add
cmc
or
ja
addb
sbb
mov
test
ss
mov
xor
xor
aas
jecxz
push
out
incb
push
inc
ss
pop
outsl
cmpsl
loop
mov
xchg
jl
stc
jo
xlat
repz
fnstenv
jb
aad
cltd
out
lock
arpl
adc
dec
pop
jg
cmpsl
idivl
sbb
push
cld
xor
iret
jns
shll
xor
sbb
test
mov
jmp
stos
test
fwait
sbb
out
mov
shlb
out
lcall
cld
or
jge
cmp
int3
sbb
je
repz
sbb
or
into
push
push
mov
aad
add
cltd
insb
hlt
lret
popa
lds
js
adc
arpl
scas
pop
mov
lret
adc
aaa
je
inc
orb
xchg
clc
jp
sub
sub
mov
mov
aam
jno
mov
mov
xlat
mov
jmp
stos
cltd
mov
mov
arpl
movsb
sahf
jmp
lds
shll
pusha
sahf
out
out
cmc
fsubs
adc
jp
in
idivb
adc
sahf
in
gs
or
push
mov
lret
or
je
lea
lret
add
jae
mov
icebp
mov
dec
test
or
dec
out
mov
stos
inc
dec
pop
lret
mov
cmp
imul
fnstcw
pop
ja
ss
lahf
and
imul
mov
into
stc
mov
popa
push
adc
or
mov
test
and
cwtl
cmp
cltd
pusha
xchg
cli
pop
dec
lcall
icebp
jmp
imul
lods
les
adc
ss
daa
loop
mov
insl
int3
push
arpl
mov
push
xchg
cmpsl
inc
lret
and
out
aas
jae
lret
fisttps
and
sub
scas
inc
mov
inc
jl
in
sub
pop
xchg
popa
push
adc
loope
fwait
js
push
stc
in
cmp
cmpsl
iret
pop
mov
and
jecxz
bound
or
dec
and
pusha
adc
push
jne
xor
data16
leave
cmp
call
sahf
std
aas
ss
push
repnz
out
jecxz
mov
stos
mov
sub
repnz
mov
ljmp
mov
and
push
sbb
adc
pop
nop
int
xchg
sbb
inc
cmp
mov
fldl
or
inc
mov
add
arpl
aam
xchg
in
mov
inc
sbbl
ljmp
mov
loope
jno
out
jle
sub
push
pusha
repz
or
or
add
leave
push
xchg
movsl
mov
dec
aaa
jle
xchg
inc
sbb
add
cs
hlt
std
in
lcall
lods
jae
jb
and
jae
or
aam
jo
lock
push
in
in
ss
sbb
adc
cmp
fdivs
enter
jg
cmpsl
xorl
push
fdivrl
movsl
xor
dec
xor
jns
insl
into
popf
jmp
jnp
inc
xchg
mov
ljmp
jns
aaa
pop
pop
push
and
xor
and
push
sahf
xchg
xor
mov
imul
lcall
sbb
sbb
jbe
cmp
jne
sub
mov
add
mov
xchg
sarb
mov
mov
fcmovb
xchg
fcomp
adc
aas
mov
ret
mov
and
push
adc
pushl
dec
repz
int3
mov
repz
loope
mov
das
scas
pop
mov
dec
fwait
sbb
nop
mov
fs
dec
ds
xor
pusha
pop
mov
rol
ja
lods
mov
sbb
dec
fdivrs
jge
xchg
imull
xchg
lock
xor
lods
xchg
adc
fsts
loope
leave
outsl
idivl
popf
idivb
pop
out
mov
jne
out
sbb
adc
lods
push
xchg
daa
andl
sarl
mov
pop
ljmp
dec
mov
fdivs
and
in
mov
aas
je
cmc
inc
xor
out
loop
sar
mov
cmp
xor
aas
mov
inc
std
sub
adc
out
pop
push
xor
idivb
aaa
insb
movsb
sub
repz
das
mov
test
pop
adc
sbb
cmp
push
adc
xor
xor
sub
adc
out
pop
push
xor
cli
mov
jo
into
ret
loope
daa
les
ds
add
stc
scas
push
shl
lret
pushf
dec
lcall
cmp
aaa
mov
adc
sub
test
lret
push
jae
pop
je
int3
aam
add
or
mov
in
loopne
push
loopne
icebp
pop
xor
hlt
arpl
aas
and
in
js
clc
jbe
dec
aam
dec
mov
pop
scas
xchg
jmp
xor
jae
sbb
pushl
xchg
out
ljmp
add
adc
xor
jle
mov
and
aad
out
and
cmpsl
lea
mov
mov
add
insb
mov
sbb
notl
cmpsl
nop
fistl
push
test
lret
mov
icebp
mov
jb
leave
aad
mov
and
pop
outsl
push
out
cld
mov
mov
repz
cmp
in
cmpsl
sub
jne
inc
shrb
fimuls
pop
or
enter
cmc
mov
test
into
inc
push
scas
outsl
lods
leave
addr16
push
test
pcmpeqb
inc
enter
outsl
xor
adc
ucomiss
adc
sbb
xlat
cmp
mov
push
pop
jne
outsb
push
adc
push
sti
orb
push
and
dec
mov
xchg
or
jne
scas
push
shll
and
adc
popf
repnz
adc
shrl
push
dec
icebp
pop
int
xlat
jp
lds
rcr
lret
xchg
lods
lock
dec
mov
ss
int
xorb
jns
movsb
aam
pop
or
ret
or
cltd
push
out
or
pop
and
not
jl
xor
xchg
negl
rcll
mov
sub
lods
inc
mov
add
mov
dec
mov
data16
push
pop
jne
mov
rcrl
nop
insl
insb
inc
add
inc
mov
mov
mov
or
cld
lock
ror
frstor
or
inc
pop
xchg
lock
pop
pop
mov
xor
adc
scas
std
pop
xor
pop
or
mov
inc
jne
rcr
cmpsl
mov
mov
stos
pop
mov
inc
xchg
sbb
xchg
cltd
and
dec
pop
sbb
xor
and
andb
xchg
xchg
jb
scas
inc
pop
je
adc
add
push
sub
push
out
in
mov
dec
adc
or
cmp
xchg
and
jnp
notb
xor
push
jmp
btsl
jo
out
ret
mov
pop
fadd
insl
inc
fldt
iret
out
jg
xchg
js
pop
inc
push
cli
cmp
mov
stos
ljmp
sub
shll
jae
iret
inc
xlat
push
divb
je
xchg
cmpsl
or
fsubrp
xor
xor
inc
push
cld
mov
and
mov
fstl
pop
sub
mov
jno
fldt
iret
out
jg
fstpt
dec
out
jl
in
sub
and
mov
repz
bnd
inc
sbb
addl
xchg
mov
lret
xor
mov
je
loope
iret
repnz
test
jo
push
sbb
pop
ljmp
in
xor
nop
ss
loope
mov
sub
iret
mov
or
aas
mov
mov
sub
cmp
lds
bound
aaa
cmc
mov
xchg
outsb
ret
jge
ds
mov
sbb
in
mov
jg
add
test
daa
call
sub
cmp
out
xlat
sub
mov
jne
aad
cmp
lds
enter
hlt
leave
push
inc
outsl
mov
jg
aam
xor
mov
xlat
outsb
daa
dec
adc
sbb
cmpsb
push
lds
sbb
fs
mov
das
pop
ljmp
jae
lret
mov
jne
mov
push
and
jns
sbbl
in
test
gs
divb
in
pushl
jno
jle
movsb
mov
daa
xor
and
xchg
out
dec
adc
icebp
add
xchg
ljmp
mov
int3
test
fisttps
xchg
push
xchg
in
mov
data16
mov
cli
inc
pop
andl
push
add
movsb
daa
mov
xchg
mov
pop
popa
loop
ds
rcr
xchg
adcb
push
sub
jb
call
cmp
jne
mov
cs
mov
dec
les
dec
mov
fnstenv
subl
mov
sub
int3
mov
push
xchg
jl
out
dec
loope
or
xor
fnstsw
fwait
xor
or
fldt
movlhps
sub
inc
and
inc
into
sahf
addr16
push
adc
fmuls
jbe
cld
out
fstl
sarb
cmpsl
push
inc
jge
aam
loop
stos
cmpsl
stos
loope
andb
cmpsl
stos
jmp
pop
jmp
repz
arpl
and
int
push
mov
sbb
pop
fsubs
add
dec
loop
xchg
leave
mul
mov
shll
negb
dec
aas
popa
mov
cmpsl
cmp
mov
xor
jmp
jbe
data16
fwait
leave
dec
cli
or
mov
ret
fxch
flds
and
in
xor
in
in
mov
push
fwait
sbb
adc
in
stc
sti
push
popf
ds
push
insb
mov
sub
ljmp
scas
cmp
sti
sbbb
inc
imul
cs
rcrb
sbb
mov
sbb
lsl
inc
loop
ljmp
xchg
jge
fsubp
sbb
mov
fcmovbe
push
xchg
adc
pop
and
outsl
adcb
or
stos
inc
enter
pop
jno
rcl
push
cmp
sbb
mov
mov
jnp
mov
aaa
mov
inc
les
xor
iret
push
jnp
mov
inc
pop
lods
add
hlt
ss
pop
xchg
jo
out
xchg
mov
into
dec
sbb
out
cmp
dec
outsb
or
cs
adc
mov
jg
je
std
inc
add
push
lret
idivb
aaa
insb
fdivrs
mov
das
daa
aad
addl
aad
popf
popa
out
push
mov
push
pushl
pusha
mov
or
out
stos
push
xor
imul
adc
pushf
push
sub
call
ret
pusha
dec
gs
fwait
or
pop
cld
js
mov
idivb
push
and
pop
mov
insb
loop
lods
ds
mov
lock
fsubs
pop
or
cmpsb
lock
jae
cmp
fs
or
sub
jno,pn
pushl
add
mov
js
jmp
and
in
sub
rcll
add
dec
jne
mov
scas
filds
mov
mov
inc
out
je
push
call
jmp
insl
pop
mov
mov
inc
push
cltd
leave
cmp
sbb
movsb
xor
iret
je
idiv
int3
test
leave
push
lcallw
push
mov
dec
fwait
inc
fidivs
les
insb
mov
mov
add
pop
test
sub
sbb
ja
mov
pop
jns
fisubs
fildl
aam
jb
xchg
icebp
mov
mov
outsl
adc
inc
push
aad
ud2
adc
jle
sti
sar
andb
outsl
fcmovnb
xchg
mov
divl
mov
icebp
icebp
mov
xchg
lods
shll
nop
outsb
lahf
push
out
mov
or
jae
js
aad
cli
adc
cmp
mov
adc
imul
pop
ja
fldcw
cld
cmc
push
xlat
push
fdivrl
and
and
jae
packssdw
repnz
sub
inc
adc
push
sbb
les
sub
flds
xor
xor
lret
fcoms
fs
ss
and
sbb
cmp
stc
mov
movsb
int3
pop
adc
pop
add
adc
push
out
pusha
xchg
sti
repz
test
xchg
and
arpl
mov
loop
fiadds
outsb
and
stc
add
data16
gs
int3
pop
adc
ss
push
movsb
int3
pop
adc
adc
xor
mov
cs
adc
mov
pop
sarb
jecxz
jns
aam
enter
pop
adc
sub
push
loop
and
pop
lds
and
in
jge
sub
movsb
cmc
scas
pusha
jno
aad
xor
les
fnstsw
adc
popa
push
adc
mov
jmp
pop
enter
mov
jmp
cld
pusha
push
adc
arpl
pusha
fcomi
xor
setge
sbb
push
sbb
mov
outsb
notb
jmp
mov
push
movsl
pop
and
mov
into
in
adc
pop
dec
inc
cmp
push
dec
fwait
imul
pushf
fisttpll
arpl
lea
data16
imulb
leave
xlat
popf
dec
jle
insb
fistpl
into
insb
and
add
sub
std
repnz
fisttpl
mov
fcoms
dec
fsts
das
aam
adc
dec
xchg
leave
cld
aaa
std
mov
mov
inc
inc
dec
and
push
jbe
mov
rcrl
dec
push
mov
push
inc
jle
popf
sbb
mov
sbb
push
adc
arpl
test
lods
fcmovb
scas
jg
roll
ret
add
icebp
dec
jl
in
dec
jg
mov
jge
fs
mov
adc
lods
mov
adc
pop
adc
mov
and
btc
mull
jle
jo
mov
pop
cmpsl
mov
sub
imul
xchg
pusha
dec
rclb
adc
jno
aaa
lcall
mov
xchg
hlt
in
orb
insb
xor
pusha
push
adc
movsb
inc
xchg
in
sbb
xchg
jmp
stos
or
jbe
xchg
jnp
out
adc
mov
insb
sub
je
fsubrl
xor
push
pop
test
pop
adc
and
adc
pop
sbb
sbb
jno
lret
pop
adc
movsl
movsl
cltd
mov
mov
leave
xchg
adc
xlat
jge
stc
add
inc
ret
mov
and
loopne
or
sub
mov
xlat
loope
or
movsl
sahf
mov
dec
pop
inc
rolb
pop
cmp
imul
fnstenv
add
jle
cmpsl
test
or
int
add
sub
cmp
fildll
ficoml
idivl
jle
stc
or
fs
push
adc
int3
pop
adc
adc
sti
pop
int3
pop
adc
pop
push
inc
sbb
jnp
jl
out
lahf
outsl
sub
pusha
push
adc
xchg
push
dec
sub
push
adc
add
mov
adc
or
shll
xchg
pop
test
push
les
popa
pop
bound
in
inc
or
adc
int3
pusha
push
adc
loopne,pn
inc
aad
vpinsrw
or
lock
adc
mov
push
pop
mov
cmp
xor
dec
dec
data16
arpl
adc
add
cmp
or
sbb
mov
sti
xchg
or
repz
arpl
adc
pop
ja
divl
adc
repz
in
loope
mov
adc
jecxz
aaa
adc
push
enter
test
push
aas
mov
sbb
stos
rorb
mov
or
notl
mov
or
jle
pusha
pusha
push
adc
jo
rcll
mov
sbb
scas
sbb
fwait
in
ds
ss
scas
addr16
cmp
jb
jne
jge
jl
inc
pop
mov
push
adc
adc
decl
lret
stc
jl
pop
or
push
jnp
pop
inc
mov
xlat
xchg
mov
push
adc
fildll
out
fs
fwait
xlat
push
jns
divb
and
loop
add
pop
fadds
jle
and
in
cmc
test
push
ret
dec
gs
fmuls
nop
push
mov
and
gs
and
and
jle
xchg
loop
pop
outsb
subb
leave
sub
pop
sbb
adc
push
aam
fldl
dec
notl
xchg
shrd
call
sbbl
shrl
xor
lea
mov
jnp
test
push
or
test
jl
push
xchg
inc
mov
jbe
popa
sub
pushf
popa
push
adc
icebp
sbb
push
in
adc
xchg
test
fmuls
sbb
jge
push
shl
and
jnp
fcmovnu
pop
cmp
imul
xchg
jle
xor
dec
les
xor
xor
into
or
out
das
cmp
push
adc
adc
popl
bound
repnz
add
xchg
xchg
mov
enter
cltd
mul
aam
arpl
mov
popa
add
dec
inc
xor
pushf
popa
push
adc
ret
mov
and
xchg
adc
insb
xchg
xchg
out
mov
imulb
sarb
movsb
add
sbb
mov
outsl
mov
es
mov
mov
lods
clc
and
jae
pop
mov
ss
pop
mov
mov
pop
cmc
rclb
js
daa
mov
adc
jne
inc
push
aaa
cld
ds
fnstenv
dec
lahf
popa
and
push
adc
cmp
sbb
mov
inc
bound
fcmove
testl
mov
or
push
aaa
cmp
pop
repnz
es
sbb
sbb
cmpsl
aas
pop
addb
mov
addl
test
push
shll
jmp
in
fstps
jmp
xchg
jle
stc
sbb
jge
out
fnstsw
pop
mov
ljmp
jb
cmp
xchg
outsl
out
adc
xor
das
sub
xor
adc
dec
in
push
pop
fnstenv
clc
repz
adc
addl
cwtl
inc
jl
mov
inc
adc
in
fnstenv
mov
rorb
push
out
pusha
push
adc
jp
adc
inc
arpl
or
insb
jbe
ss
lods
xorb
add
jo
xlat
dec
js
mov
ss
shrl
or
mov
mov
repz
or
xor
mov
adc
lds
inc
push
adc
ljmp
insb
fldenv
push
xorb
mov
adc
fwait
mov
add
or
xor
cmp
call
dec
aaa
push
test
jae
andl
adc
ficomps
cltd
cmp
js
imull
pop
sbb
push
adc
xor
ja
pop
loope
xchg
lods
jo
push
adc
lret
dec
push
insl
test
dec
mov
dec
in
cmp
pop
test
dec
data16
xor
addb
add
repz
loope
test
sub
push
xor
jle
je
inc
int
iret
xor
movsb
dec
ss
pusha
mov
adc
lcall
xor
push
adc
add
fdivrl
jmp
xchg
fdivrl
jo
cmp
mov
dec
mov
lret
push
pushf
int
adc
jmp
mov
mov
sub
int
mov
adc
inc
add
cmp
daa
dec
pop
out
adc
cmpsl
mov
scas
hlt
in
outsb
inc
popa
push
adc
test
adc
xchg
enter
or
pmulhw
mov
jge
jecxz
mov
loope
sub
in
push
insl
insl
test
push
jmp
xorb
aad
sbb
sbb
aaa
mov
pop
stos
mov
push
out
push
int3
pop
adc
xor
mov
adc
mov
and
lcall
sbb
icebp
or
lahf
test
mov
xchg
faddl
inc
sub
inc
movsb
sbb
push
mov
pop
sub
cmp
mov
test
inc
insb
inc
cmpsb
sub
stos
xchg
jno
str
ret
orb
orb
lcall
sti
adc
jno
fisubrs
stos
mov
lods
sbb
mov
xor
out
xchg
out
pop
adc
repnz
xor
jle
inc
push
je
jmp
inc
mov
int
lret
sbb
pop
xorl
lret
inc
or
pop
fcom
ljmp
push
adc
insl
add
nop
aas
popa
mov
jmp
iret
xor
pop
loope
xor
jl
and
sbb
push
push
adc
insl
lahf
push
bound
aad
pusha
xchg
cmpsb
mov
ljmp
js
cmp
mov
sti
imul
fnsave
cmp
aas
mov
mov
jno
sti
cs
adc
mov
fcmovne
push
mov
mov
clc
or
add
adc
dec
xchg
or
ja
jnp
and
dec
xchg
rol
or
scas
pop
mov
mov
stos
lahf
aas
jle
adc
or
mov
aad
mov
cmp
scas
pop
shll
mov
dec
lahf
aas
std
or
outsb
xchg
arpl
jbe
fidivl
and
push
xchg
adc
pop
in
leave
xchg
daa
mov
repz
sub
fcmovb
jl
filds
clc
cmpsb
xor
aad
xchg
lahf
push
daa
dec
xor
faddp
cmpsl
test
mov
jne
mov
and
mov
and
leave
jle
in
fnstenv
or
xlat
add
pop
or
xchg
jmp
jae
cmp
cmp
mov
addr16
popf
or
push
incl
xor
add
sbb
xor
lock
or
xchg
test
sub
add
cld
cmc
mov
sarb
ret
stos
add
aas
jg
sub
xor
push
mov
adc
sbb
or
xor
jb
adc
inc
and
ds
lods
inc
test
aad
pop
push
dec
fdivs
or
cld
pusha
push
adc
dec
sub
js
out
cmpl
adc
shll
sub
sarb
xor
clc
or
shll
adc
push
or
dec
repnz
or
lock
jle
aam
push
adc
mov
adc
ds
xchg
leave
adc
notl
jg
into
rcrl
sbbb
test
pushf
xchg
insl
les
and
popa
or
sbb
jno
inc
sbb
out
loopne
pop
adc
xor
insl
mov
pop
inc
push
insl
or
jns
cmp
lret
jle
sbb
mov
mov
adc
fwait
ret
or
or
es
jg
jmp
pop
fs
jge
or
stos
cmp
xchg
jle
decl
lret
cmpsb
push
dec
cmp
aad
sbb
dec
sub
push
loope
cld
cmp
add
and
orb
add
pop
in
sub
addb
pop
jmp
popa
outsl
cmc
add
jge
push
fcomip
xor
jp
push
ret
dec
enter
fistpl
xchg
enter
dec
xchg
cmpsb
sarl
shll
lcall
mov
sub
test
loopne
out
xchg
das
mov
inc
add
and
out
repnz
call
adc
subl
push
and
loopne
pop
adc
dec
cli
sub
bound
and
adc
jnp
icebp
or
lahf
test
mov
in
sub
repnz
push
or
inc
jl
movsb
cmp
mov
push
or
dec
jb
mov
inc
notb
or
sbb
push
or
xor
into
xchg
dec
jle
sbb
or
cld
pusha
push
adc
into
arpl
mov
iret
inc
sbb
or
pop
add
xlat
sub
push
adc
lock
pop
mull
xchg
mov
dec
addr16
add
shll
push
in
sahf
lcall
push
adc
sub
int3
pop
adc
pop
jge
rorb
add
jmp
pop
adc
stos
xor
pop
adc
xor
push
jmp
popa
push
adc
adc
xor
pop
adc
push
insb
mov
jns
pop
sbb
cmpsb
cmp
int3
pop
adc
imul
push
addr16
inc
dec
lahf
std
lods
jb
ret
fcoml
xor
sti
mov
fcoms
push
push
xchg
test
inc
fiadds
jne
arpl
or
inc
aaa
add
or
sbb
fsts
outsb
add
enter
mov
push
xor
xor
pop
adc
lods
pop
mov
dec
out
mov
sbb
cwtl
int3
pop
adc
pop
adc
jmp
int3
pop
adc
lods
pop
mov
push
adc
clc
jnp
int3
pop
adc
popf
jge,pt
loop
popa
push
adc
add
out
adc
in
leave
mov
fsubl
adc
xor
insl
and
push
dec
les
adc
nop
xchg
int
xchg
aas
jle
stc
js
and
fistpll
sarl
wbinvd
adc
loop
fsubl
adc
sbb
push
adc
sub
inc
test
mov
arpl
adc
decl
sub
push
xor
inc
das
push
adc
cs
jle
in
js
mov
enter
stc
repz
fcmove
dec
and
imul
mov
push
popa
rolb
pusha
push
adc
push
adc
jmp
test
mov
xchg
jg
adc
int3
add
popa
or
je
icebp
int3
cwtl
pusha
dec
test
bound
cltd
xor
push
adc
cltd
mov
dec
movhps
mov
push
aam
call
push
xor
ss
pop
cmc
jmp
jnp
jno
lods
outsl
push
jp
sbb
add
and
aad
add
adc
cmpsb
mov
push
rolb
or
cmp
inc
pusha
out
jbe
mov
adc
and
xor
stos
pop
xor
shll
cmp
pushf
push
jle
mov
mov
adc
and
rcll
adc
push
adc
xor
and
clc
hlt
mov
adc
sbb
and
addr16
add
cmp
dec
hlt
push
cmp
les
movsb
adc
push
popf
xchg
xchg
fwait
enter
test
mov
mov
mov
into
mov
adc
xchg
and
pop
jae
insl
dec
ret
fbld
negl
jmp
clc
pop
adc
rcll
stos
cmp
xchg
out
pop
adc
std
bswap
in
dec
into
and
jmp
nop
or
push
cli
inc
xchg
push
push
fiadds
adc
mov
mov
pop
adc
xor
hlt
add
and
and
adc
cli
cmpsl
dec
rorb
push
adc
fcmovb
pop
hlt
pushf
addb
xor
inc
adc
es
xchg
push
mov
xchg
lahf
sub
ror
out
sahf
clc
mov
mov
faddl
sub
lcall
mov
push
dec
mov
adc
pop
fadd
negl
imul
jb
jnp
das
push
adc
xor
mov
pop
out
stos
adc
mov
inc
dec
push
sub
and
or
bound
movsb
xchg
test
xor
ficoms
push
adc
pop
mov
lods
cs
xchg
push
out
mov
je
pop
mov
fistpll
push
movsb
popa
push
adc
mov
push
mov
or
push
adc
pop
adc
mov
andb
imul
inc
aad
popa
dec
rorl
or
scas
push
xor
sub
pop
outsl
jbe
jnp
sub
mov
adc
ja
add
cmp
cmp
sbb
mov
push
inc
in
or
adc
out
jle
stos
outsb
dec
add
addb
sbb
mov
xlat
scas
pop
leave
jb
and
mov
dec
lods
std
mov
or
dec
filds
adc
mov
ret
pop
ljmp
dec
fwait
dec
push
sub
pop
dec
insl
jno
aaa
mov
mov
ret
add
mov
add
mov
clc
jnp
int3
pop
adc
pushf
jge,pt
shlb
and
mov
stos
push
int3
pop
adc
fidivl
dec
lahf
mov
jnp
pusha
roll
fwait
and
jl
pop
inc
jnp
test
pop
fildl
mov
push
int3
pop
adc
mov
les
adc
ds
push
sub
jnp
cld
fidivl
out
rolb
std
pop
popf
ds
aas
sti
mov
xlat
mov
or
adc
adc
cltd
adc
mov
popf
push
or
mov
push
adc
sbb
inc
cmp
jle
mov
mov
outsb
jg
mov
mov
gs
adc
int3
push
jl
pushf
push
sbb
sbb
insl
add
clc
or
adc
les
adc
sub
sub
xchg
stos
lret
addl
outsb
cmp
adc
popa
push
adc
lods
jns
in
mov
fs
pop
adc
sbb
mov
cltd
push
int3
pop
adc
mov
xor
and
adc
sbb
int3
pop
adc
js
adc
inc
and
cmp
mov
out
cmpsl
mov
inc
cltd
dec
clc
or
adc
or
adc
adc
cld
jnp
pop
lods
lds
insl
pop
push
xchg
cmp
adc
scas
repnz
cmp
jns
clc
sbb
or
mov
popa
push
adc
nop
push
or
xchg
clc
mov
adc
in
aas
roll
adc
int3
pop
adc
adc
fucomip
imul
or
push
int3
pop
adc
xchg
mov
xlat
jb
and
sbb
outsl
mov
icebp
or
adc
fs
sarl
jae
leave
lds
in
stc
sbb
xor
mov
mov
rcrb
sbb
and
jno
pop
mov
inc
sub
ror
mov
adc
mov
pop
sub
pop
mov
pop
or
mov
inc
adc
or
push
adc
pop
or
pusha
push
adc
nop
jecxz
pop
arpl
adc
sbb
xchg
adc
push
adc
fimull
adc
add
cli
inc
dec
out
mov
adc
xchg
xchg
mov
mov
int3
pop
adc
ret
movsl
in
sub
lcall
jne
out
out
push
push
mov
sbb
pushf
inc
xlat
cmpsl
clc
sti
mov
sti
push
mov
inc
add
lret
adc
or
jle
mov
jnp
sarb
pop
and
push
add
pop
pushf
sub
leave
cmpsl
cmp
test
push
adc
int3
pop
adc
adc
adc
jb
dec
jg
and
cmp
adc
xor
nop
dec
cmpb
dec
movsb
inc
dec
pop
cli
cmpsl
mov
pop
adc
or
dec
cmc
rorl
and
jg
mov
push
repz
into
fwait
cmpsl
mov
in
arpl
or
push
adc
repnz
clc
or
adc
dec
xchg
xor
adc
out
pop
mov
adc
ljmp
mov
in
mov
sbb
push
sbb
adc
pop
mov
adc
push
pop
mov
adc
loopne
adc
push
adc
cli
andb
fidivrs
popa
push
adc
add
cmp
addl
push
fmuls
clc
pusha
push
adc
dec
adc
mov
adc
ss
pusha
push
adc
testb
or
lock
push
adc
lcall
dec
fwait
ss
push
ljmp
daa
faddp
addb
rcll
jmp
adc
adc
loop
pop
pop
fdivs
push
adc
add
mov
sub
cmp
adc
aas
and
iret
into
push
ret
je
jnp
cmc
aas
cs
cmp
enter
push
push
xor
pop
adc
mov
insb
sub
insb
cmp
pop
adc
lahf
add
mov
lret
pop
adc
ss
scas
fiaddl
sti
sbb
cmp
pop
adc
cmp
popa
adc
or
es
shrl
mov
mov
push
add
add
adc
cmp
pop
adc
push
test
mov
ficompl
clc
pop
adc
insb
subl
push
adc
jmp
pop
adc
push
adc
int3
insb
push
in
fdivp
out
adc
addl
lea
inc
int3
pop
adc
and
adc
cmp
aad
fdivs
xlat
pop
adc
idivl
scas
shlb
or
daa
loop
imul
mov
fldl
sbb
and
sarl
cmc
pop
adc
in
xchg
fs
nop
popa
push
adc
jb
in
ss
cltd
adc
add
mov
orl
and
pop
int3
pop
adc
push
nop
rcrb
add
and
xor
pop
pusha
int3
pop
adc
mov
cld
insl
outsl
sub
xor
jo
cmp
jno
inc
movsb
or
cmpsb
test
int3
pop
adc
xor
push
adc
aas
mov
frstor
pushf
insl
movb
ljmp
lods
or
xchg
mov
outsb
pop
sti
mov
popl
hlt
sbb
or
push
adc
mov
arpl
adc
out
faddl
mov
enter
cmp
fcmovnb
jge
or
jge
add
push
adc
fcmovnu
hlt
andb
jge
or
shr
pop
cltd
xor
sub
cmc
mov
addr16
sbb
cmp
pop
les
adc
mov
ja
cmpsb
or
nop
adc
dec
lds
mov
inc
fnstenv
daa
aam
xchg
pop
dec
and
xchg
add
call
adc
xlat
dec
xorb
fstpl
movsl
sahf
dec
in
ss
pop
adc
adc
fwait
test
aaa
push
fcoms
mov
add
mov
dec
cmc
mov
xchg
leave
jge
mov
call
pop
adc
push
sar
cmp
stos
push
int3
pop
adc
lret
dec
pop
cmpsb
notl
push
mov
clc
jns
aam
mov
or
adc
popa
push
adc
std
inc
fs
in
lods
sub
pop
adc
in
xchg
stos
daa
cmp
inc
testb
negb
push
int3
pop
adc
lcall
push
int3
pop
adc
addl
inc
sub
hlt
pop
mov
jns
sbb
ret
insl
cld
xor
mov
or
and
test
inc
jle
push
dec
inc
pusha
push
and
gs
and
incl
adc
les
stos
cmp
out
pusha
addb
adc
enter
jecxz
insl
inc
mov
lods
jnp
gs
push
orb
sub
addb
idiv
sti
push
mov
xchg
aaa
cmp
push
jg
add
jb
fs
pushf
jp
sub
and
rcrb
adc
sbb
xchg
dec
sahf
loop
dec
push
lret
clc
pop
adc
jae
cmp
xor
push
ss
addb
push
pushl
outsb
pop
add
jle
das
adcb
or
mov
pop
adc
xchg
aaa
dec
fwait
nop
stc
es
andb
aas
mov
jae
dec
cmp
cmpsb
sub
push
in
adc
mov
dec
lahf
aas
sub
push
dec
or
add
mov
or
arpl
adc
jb
cmp
pop
sti
lahf
out
popa
push
adc
lods
stos
faddl
leave
cld
stc
repz
fdiv
sub
sti
jne
mov
outsb
les
adc
push
dec
iret
sahf
aas
jle
mov
mov
sarb
mov
add
sbb
pusha
dec
jbe
jl
sbb
pusha
outsb
xchg
sahf
cs
fst
push
mov
test
mov
xchg
movsb
mov
jecxz
pop
out
rolb
clc
lahf
sub
xlat
js
gs
lret
insb
adc
fdivs
sbb
sbb
pushw
adc
aas
mov
dec
dec
fwait
sbb
jne
push
sbb
popa
clc
stc
push
or
and
lret
or
push
shll
insl
fld
sbb
pop
or
cmpl
mov
sub
cltd
sbb
subb
push
adc
and
fldl
cmpb
in
sub
shlb
jle
movntps
adc
mov
and
fbstp
add
sub
andb
inc
sbb
sbb
insl
outsl
push
sub
xor
jp
mov
mov
out
or
push
or
loopne
mov
and
pop
inc
xor
pop
pop
mov
cli
arpl
bound
add
jmp
mov
mov
inc
imul
or
movb
cltd
into
sub
push
adc
jo
mov
gs
jecxz
je,pt
repnz
fsub
popf
ret
mov
and
leave
jo
imull
sbb
shrb
cmp
xchg
cmp
xor
push
adc
lock
xor
shll
cs
jecxz
sarb
sarl
mov
adc
adc
mov
fdivrp
dec
or
sti
adc
pop
mov
stos
mov
frstor
paddq
pusha
pop
or
pusha
lock
repz
int
sub
fiadds
add
ret
mov
lret
pop
push
dec
jl
dec
sub
fistpl
jmp
xlat
mov
int
icebp
and
adc
adc
push
imulb
pop
xor
jle
test
fmull
inc
xchg
les
dec
lods
mov
sti
movsl
and
adc
pop
test
push
xchg
push
loop
dec
mov
in
pushf
inc
pop
mov
push
rcrb
aaa
sbb
jmp
or
add
cmp
inc
jmp
arpl
mov
rolb
rcr
jmp
inc
and
dec
add
lods
push
jae
adc
or
cmp
pusha
mov
fmull
cmpsb
xor
and
push
adc
negw
out
dec
pop
fdiv
sub
sub
lcall
imul
adc
push
jecxz
and
adc
sti
inc
push
nop
call
dec
inc
fisubs
movsb
mov
or
fsts
dec
adc
sti
sub
jecxz
mov
insb
or
insl
shll
mov
insb
mov
jbe
jp
adc
ljmp
mov
jmp
movsl
mov
mov
addr16
jg
jp
fidivrs
gs
mov
adc
testb
and
push
adc
or
sti
sub
adc
fcmovbe
inc
outsb
inc
pusha
push
adc
idivl
jg
stc
jle
pop
scas
jge,pt
or
mov
push
adc
xchg
lea
test
scas
dec
cmp
dec
lahf
jne,pt
hlt
mov
xlat
outsl
sarl
mov
in
pusha
push
adc
mov
xor
out
imul
fucomp
and
in
push
adc
pop
dec
je
xchg
daa
inc
sbb
jle
stc
mov
sub
jle
in
cld
mov
push
dec
shlb
adc
cltd
sbb
ja
scas
stc
jbe
xchg
jmp
arpl
test
push
nop
adc
inc
sbb
ret
cs
and
iret
cmpsb
jnp
mov
lock
out
pop
in
divb
sub
daa
je
data16
repz
out
lahf
mov
into
addr16
xor
lods
icebp
out
and
inc
jmp
aas
xchg
inc
lret
scas
push
xor
aaa
scas
stc
cmpsl
inc
xchg
sahf
enter
pop
dec
outsl
mov
dec
jne
ja
je
pop
dec
fwait
adc
pusha
xchg
sub
pop
jmp
adc
fistpl
pusha
push
adc
pusha
push
adc
jo
insb
mov
ss
xchg
stc
aad
in
mov
sbb
lods
or
imul
xchg
push
jbe
stos
sbb
and
fimull
lods
popa
push
adc
les
adc
cs
daa
cmp
repnz
jae
xchg
out
cmp
lock
jb
jns
out
inc
aam
or
mov
mov
adc
aad
arpl
cli
mov
popa
push
adc
inc
and
andb
xor
cmp
mov
sub
adc
cwtl
xor
sar
fldz
les
adc
jmp
dec
pop
es
je,pt
cmp
jmp
pop
and
les
push
jp
cmp
jo
nop
and
cmpsb
sbb
cmp
adc
out
imul
sub
lock
mov
adc
test
push
adc
aam
cmpb
dec
call
popa
push
adc
sub
testb
cmpb
jl
pusha
mov
xchg
sarb
test
call
sahf
mov
push
fcoms
outsl
vsubss
pusha
dec
jb
adc
push
dec
std
shlb
andb
and
int
ja
xor
xchg
icebp
ds
mov
lock
shlb
mov
loope
cmpsb
notl
xchg
push
and
pop
adc
adc
push
movzbl
insb
subl
ss
out
aad
cltd
sbb
movsl
cmp
imul
bound
les
sbb
sub
push
adc
imul
hlt
mov
ret
add
ret
cltd
test
nop
popa
push
adc
add
adc
imul
cmpsb
mov
add
inc
xor
ja
out
test
sbb
fcomps
jmp
pop
mov
or
int
inc
int
xchg
pushf
push
xlat
fs
push
adc
push
andb
push
push
pop
int3
pop
adc
ret
cmp
push
push
adc
sub
push
adc
pop
dec
xchg
das
mov
sarb
mov
add
imul
jae
lods
lock
xacquire
and
jl
inc
loopne
pop
sub
hlt
mov
out
and
mov
fnstenv
jae
aad
cwtl
xchg
fwait
mov
xlat
push
add
or
insl
mov
and
ss
out
insb
js
les
lock
movsl
sbb
pop
cmp
xchg
cltd
imul
movb
push
mov
shlb
icebp
repz
shrl
adc
xor
xchg
push
sarb
insb
inc
fdivp
fcmove
xchg
js
or
cmpsb
xchg
mov
cmpsb
add
add
pop
adc
dec
out
insb
push
pop
int3
push
jg
mov
bndstx
adcb
out
fnstsw
aad
mov
mov
adc
xchg
stos
lret
or
jnp
nop
mov
push
adc
lock
push
pop
dec
dec
fwait
dec
imul
jmp
or
mov
cmp
cmpsl
arpl
push
mov
push
neg
mov
mov
int3
jp
aaa
fists
rorl
adc
cmp
push
adc
lods
mov
int3
popa
push
adc
daa
sub
or
out
rcrl
jnp
or
fcoms
adc
mov
sahf
aas
divl
mov
addr16
xor
testb
fnstcw
js
push
adc
jns
clc
lock
pop
adc
int3
pop
adc
aad
pusha
push
adc
sbb
fildll
push
adc
dec
mov
or
mov
push
std
pusha
pusha
push
adc
pop
iret
mov
popf
inc
rol
jb
dec
outsb
xchg
call
fisubrl
int
loop
push
jb
fistpl
popa
push
adc
sub
test
mov
push
jecxz
test
popa
into
loope
insb
or
mov
pop
nop
sub
les
adc
push
mov
push
adc
mov
pop
xchg
jle
add
repz
int3
jmp
stos
xor
cmc
xchg
mov
inc
jge
sahf
push
push
or
adc
std
and
leave
imul
adc
popa
fwait
push
adc
pusha
push
adc
dec
xchg
inc
insb
add
stc
add
mov
dec
push
push
add
jnp
lods
sbb
popa
push
adc
or
adc
divb
dec
inc
fbld
lahf
push
les
mov
adc
lcall
pop
adc
fsubs
adc
pop
adc
xlat
jle
leave
xlat
hlt
mov
sub
push
jns
sub
ror
pop
adc
push
in
push
adc
cs
push
adc
int3
into
pop
adc
adc
pop
enter
or
xchg
loope
jle
lds
cld
jnp
ror
pop
adc
shlb
adc
push
pusha
jmp
cli
push
push
add
cmp
popa
nop
popa
push
adc
cmp
adc
cli
ja
into
pop
adc
mov
movsb
pop
ljmp
pop
adc
cmp
outsb
and
pop
adc
sar
jle
pushf
dec
sbb
mov
pop
add
aas
sub
xchg
xor
sub
or
mov
rolb
jns
inc
cmpsl
xchg
mov
daa
aad
adc
or
pop
int3
mov
cmp
inc
popa
push
adc
dec
or
pusha
popf
rol
in
xchg
dec
add
int
inc
pop
mov
popa
push
adc
add
adc
es
pop
adc
dec
jge
push
push
pop
pop
dec
mov
addr16
adc
mov
adc
adc
int3
stos
add
inc
loope
dec
ds
push
adc
jb
and
sbb
lret
push
adc
ret
shrl
rcrl
in
add
or
adc
loopne
andb
fs
lcall
jmp
push
adc
or
pop
adc
pushf
insb
icebp
je
mov
fsubr
xchg
xor
insl
and
mov
or
adc
mov
mov
orl
sbb
sti
aas
out
mov
mov
ret
pop
lods
push
out
arpl
adc
cli
movsb
mov
test
mov
adc
movsb
mov
aas
jle
in
sub
push
adc
xor
not
stc
pop
lret
out
pop
test
fistpl
outsb
repz
sbb
pusha
mov
fisttps
adc
lds
xlat
jp
out
xor
xor
xchg
or
adc
mov
adc
test
jns
mov
or
adc
push
add
mov
mov
dec
cmp
adc
dec
enter
inc
xor
dec
xchg
daa
sbb
shrb
push
adc
enter
dec
cmp
or
in
insb
sub
popa
push
adc
add
or
inc
aas
hlt
mov
mov
pusha
push
adc
into
pop
adc
insb
xlat
mov
insl
cltd
insb
lock
loop
sahf
aas
icebp
jle
das
fdivrl
dec
mov
aaa
inc
je
es
into
or
out
sbb
daa
xchg
pusha
push
lret
lods
push
add
pop
mov
gs
rcrl
mov
mov
mov
icebp
shll
in
xchg
or
loopne
jge
adc
adc
cmp
push
dec
or
cmp
cs
hlt
mov
pop
stc
loopne
mov
push
adc
enter
xor
shl
into
mov
push
inc
dec
or
jg
mov
sub
andb
cmp
and
pop
adc
mov
rclb
jb
jg
int3
mov
stos
imul
sbb
fnstcw
cli
clc
sbb
ret
push
testl
ret
icebp
cmp
loope
mov
inc
insl
add
or
or
sub
cmpsb
fistpll
dec
add
mov
add
fmuls
in
pop
test
cmp
dec
dec
inc
mov
imul
loope
imul
mov
lock
mov
scas
jbe
xor
xlat
sbb
ljmp
cmp
test
repnz
jbe
ss
pop
and
lods
dec
or
out
cmp
fsubl
mov
fs
adc
cld
fldcw
aad
test
xlat
inc
ret
adc
subl
mov
pop
daa
xchg
mov
xor
into
mov
aad
cmpsl
xor
rclb
arpl
adc
dec
mov
ret
jge
cmc
add
cs
ljmp
xchg
lods
or
icebp
inc
icebp
mov
mov
mov
mov
je
xor
lea
and
sbb
fs
pop
movsb
and
xchg
sti
cmp
rcrl
fld
pop
mov
repnz
and
pop
test
xchg
cld
test
mov
and
je
test
fstl
and
jnp
xor
or
iret
int3
mov
xor
ret
mov
and
dec
xchg
cwtl
sub
adc
les
inc
rclb
xchg
lret
dec
pushf
jae
or
inc
mov
imul
push
xchg
daa
jno
push
or
mov
push
in
idiv
jae,pt
jp
rclb
sbb
cwtl
cmp
stos
jbe
push
jle
insl
sbb
mov
test
dec
xor
xchg
mov
sbb
adc
jb
sub
es
mov
cmp
fisubrl
int3
stc
aaa
jle
cmp
or
or
sub
push
inc
push
incb
dec
fwait
ss
pop
push
cld
sub
xlat
jmp
adc
pop
mull
mov
jns
outsl
sbb
js
pop
xor
cmp
push
fs
roll
add
sub
shrl
push
adc
or
adc
or
mov
stos
pop
ja
jo
or
inc
jne
xchg
ja
xor
inc
add
mov
pop
pop
adc
mov
das
cmp
push
adc
sub
pop
add
scas
or
adc
and
sarb
inc
fcmove
sub
sub
push
mull
clc
xchg
stc
in
fnstenv
mov
inc
pop
in
jb
jmp
fcmovb
jl
repnz
sahf
in
pop
ljmp
xchg
je
nop
stos
cmp
jle
ja
addl
add
or
cltd
jnp
dec
popa
sar
in
mov
pop
adc
aad
sub
dec
clc
or
lods
hlt
out
mov
or
jbe
mov
jge
addr16
es
aaa
incl
sbb
hlt
shrl
out
jnp
or
pop
inc
pop
dec
test
sub
and
imull
or
push
arpl
outsl
sbb
sub
hlt
push
test
xor
jno
ret
xchg
xor
stos
shrl
cli
repnz
repz
lods
mov
test
sub
mov
sbb
popa
mov
cmpsl
inc
sbb
and
inc
sti
out
daa
pop
add
mov
lock
push
mov
ss
and
dec
cltd
sub
xor
out
daa
aam
sub
mov
outsl
mov
jmp
push
push
adc
mov
cli
xorl
inc
jne
outsb
xchg
pop
repnz
mov
jnp
push
add
push
out
cmp
xchg
mov
jg
ja
xor
cld
in
sub
rol
std
aas
push
pushf
xchg
cmpb
xor
pop
xchg
and
pop
adc
sbb
sub
push
cmc
cmp
push
adc
imull
inc
jns
scas
scas
iret
movsb
mov
adc
test
jb
sub
popa
repz
orl
dec
addr16
pop
daa
insl
inc
aam
pop
jno
add
leave
sbb
outsl
imul
pushf
push
dec
inc
mov
inc
jge
push
das
rcrl
cli
orb
jns
popf
lcall
and
mov
sbb
gs
adc
xor
mov
mov
xchg
icebp
ds
adc
push
or
movsl
xchg
xor
cmpsb
fsub
inc
lock
cmp
push
mov
push
lods
jo
cmp
ljmp
popa
jb
push
movb
sub
sahf
push
shll
pop
sub
adc
dec
mov
ret
cltd
mov
pusha
out
dec
xchg
movsl
cli
xor
daa
xor
loope
mov
inc
add
dec
jp
inc
cltd
dec
test
inc
dec
pop
cld
jmp
test
push
cmp
ds
lcall
or
repz
jbe
push
test
inc
mov
dec
dec
shlw
hlt
mov
lret
in
dec
or
popa
test
bound
shlb
stc
cmpsl
jmp
push
pop
call
adcb
aam
ss
js
test
and
test
mov
sub
fmuls
je
aam
mov
or
sbb
mov
ficompl
mov
pop
int3
out
mov
enter
inc
cmc
out
test
xor
aam
xlat
sti
ja
call
sbb
jbe
jle
stc
js
adc
jne
lds
jnp
jmp
ja
lahf
nop
cmp
fidivl
jge
test
nop
jge
jl
aad
mov
pop
loop
in
lock
adc
lret
mov
mov
orl
jne
mov
push
int3
jge
daa
inc
push
ss
fidivl
cmpsl
int
stc
cmp
dec
lods
jo
out
push
js
push
xchg
mov
scas
add
test
ss
sbb
js
cld
stc
jo
rcrl
int
jbe
adc
bound
add
lahf
daa
testl
cwtl
push
int
mov
int
and
and
ss
mov
pop
scas
sub
cmp
adc
push
xor
add
jb
push
bound
stos
scas
pop
mov
adc
leave
sub
mov
and
ret
add
cmp
push
scas
pop
jp
jecxz,pn
or
leave
xchg
lods
mov
movl
push
add
push
push
ja
nop
push
std
push
in
fnstenv
inc
adc
xchg
test
out
inc
cmp
jno
cs
and
fimuls
adc
cmp
fcomps
pusha
dec
enter
add
test
sbb
or
repz
pop
dec
cwtl
xor
insb
sub
mov
or
xor
ja
pop
mov
xor
xchg
sarb
xor
lret
mov
jnp
subb
mov
lock
xchg
ror
fnstsw
sti
mov
add
xchg
fwait
xchg
pop
adc
faddl
bound
xor
jge
int3
ss
cs
sub
scas
addl
push
sub
rorl
repz
sbbb
inc
fstps
push
jne
add
fmuls
adc
dec
rolb
adc
testl
lret
shll
mov
sbb
cmc
into
dec
dec
arpl
in
inc
incl
imul
lcall
add
inc
rorl
push
icebp
in
dec
xlat
mov
push
mov
mov
cmp
pop
sbb
out
xor
ret
adc
jge
pushf
mov
cmpsl
adc
leave
inc
enter
push
adc
in
dec
aam
mov
sbbl
push
jae
lret
loopne
aam
mov
fidivrl
dec
jns
sub
shl
inc
mov
jo
test
push
sbb
xor
push
lahf
xchg
rcll
jl
lcall
aaa
mov
rcll
mov
adc
rep
lret
psubusb
insl
push
stos
inc
lods
push
cmp
inc
pusha
jae
lods
sub
div
push
enter
arpl
cmp
pop
cltd
in
in
out
cltd
pop
mov
int3
repz
add
aaa
push
fadds
jmp
imul
je
mov
mov
rorl
mov
xchg
stc
iret
into
dec
jp
mov
lret
negb
xor
data16
jg
inc
leave
inc
imull
xor
adc
inc
mov
jge
in
daa
rcll
lea
adc
push
in
in
mov
jp
and
shr
sbb
out
adc
pop
adc
pop
mov
dec
loop
adc
and
and
sti
ss
aas
lds
icebp
mulb
xchg
pop
mov
loopne
scas
adcb
mov
je
xor
add
jbe
jae
pop
mov
outsl
fsubl
mov
jb
add
xchg
dec
lcall
mov
outsb
icebp
je
hlt
test
gs
mov
faddp
pop
negb
subl
and
inc
pop
sti
sbbl
stos
scas
daa
and
mov
leave
in
mov
cmp
js
adc
xchg
jl
push
clc
jge
scas
mov
mov
rcrl
inc
shlb
les
xchg
lret
adc
xchg
loope
xchg
cld
mov
pop
xor
repnz
das
rcrl
inc
adc
jbe
mov
mov
dec
mov
iret
jo
xchg
stos
mov
lock
int
movsb
pushf
mov
hlt
jb
jecxz
xlat
cmp
test
fs
lcall
sti
int3
fdivrs
dec
jbe
jle
stc
jae
out
sahf
xor
or
out
fnsave
jae
das
fidivl
ss
fs
sub
mov
lret
addb
aad
or
ss
xchg
stc
mov
rcrb
inc
pop
inc
pop
std
lea
add
negb
xchg
pop
ss
mov
jnp
mov
icebp
jns
out
pop
jbe
jo
push
sbb
push
ljmp
int3
fcomps
cmp
fsubs
xchg
or
pop
jge
xor
and
aaa
jl
xchg
stc
mov
fstpl
outsb
inc
push
inc
pop
cld
shrb
sbb
pop
stc
xor
pop
push
enter
sub
es
stos
pop
dec
xchg
mov
or
adc
sti
test
jmp
fldcw
fwait
jl
cmpsl
das
in
mov
mov
jle
popa
lea
scas
and
fisubrl
push
out
mov
xor
test
adc
stos
cli
push
popf
out
fcomps
mov
mov
and
jo
hlt
and
outsl
outsb
xchg
pop
mov
mov
mov
dec
fsub
pushf
insl
inc
mov
fistpll
lahf
lea
xor
dec
and
mov
outsb
outsb
ja
and
clc
mov
cli
mov
or
mov
push
rcrb
fbstp
mov
jae
jae
enter
cmp
and
inc
push
or
mov
loop
fdivrp
dec
ss
xchg
mov
add
mov
ja
pop
idivb
sub
outsb
es
mov
mov
xor
aam
fdivrs
aaa
imul
imul
inc
add
in
or
cmp
jge
cmp
cs
lods
cmpsb
es
push
pop
adc
adc
idivl
push
stos
mov
imul
iret
subb
inc
jl
sbb
in
mov
add
xor
adc
inc
outsl
push
dec
std
sti
lea
orb
pop
adc
out
sti
or
repnz
mov
sub
sbb
or
inc
mov
pusha
push
adc
data16
cld
stc
add
mov
mov
mov
aad
sahf
repnz
daa
pop
ret
push
fnsave
dec
inc
add
pushf
cmp
imul
push
adc
xchg
lods
int3
mov
push
adc
scas
mov
pop
push
loop
stos
mov
arpl
lcall
movsb
xlat
add
js
xchg
test
jg
fidivl
add
idiv
mov
ds
mov
fisubrl
or
jbe
push
je
sbb
mov
cwtl
inc
rcll
mov
jae
inc
clc
cmp
popa
push
adc
xlat
sbb
mov
aam
cli
hlt
lods
insb
xchg
cltd
cmp
push
adc
int3
fadds
enter
dec
aam
loop
leave
xor
icebp
testl
das
aaa
dec
xchg
fwait
push
movsl
loop
je
scas
xchg
mov
xlat
and
jb
mov
dec
aaa
loopne
add
xchg
imul
dec
pop
mov
dec
fwait
ss
fdivr
jae
addl
push
adc
cmp
push
mov
outsb
inc
test
mov
insb
fsubs
stos
fwait
mov
push
adc
jbe
adc
inc
popf
imul
push
mov
mov
push
adc
adc
add
sbb
cmp
adc
outsb
mov
insb
fcomps
ja
mov
ret
sbb
gs
jmp
cli
jno
aam
sahf
mov
loope
lret
dec
lahf
mov
pusha
push
adc
or
adc
push
xlat
or
movsb
and
int3
popa
shlb
or
xor
push
push
adc
adc
fistpl
or
ss
lret
xchg
daa
jb
pop
jle
idivb
lahf
ds
mov
pop
xor
push
adc
dec
imul
dec
lahf
insb
repz
or
xor
ror
movups
in
and
shlb
adc
ss
lret
xchg
daa
sbb
jb
adc
or
xor
mov
jl
gs
pop
scas
pop
xor
dec
addr16
loope
imul
iret
mov
dec
adc
xor
addr16
pop
cmpsl
inc
test
xor
movb
pop
sub
jge
adc
sub
mov
aad
cs
nop
and
arpl
jb
and
test
add
aaa
push
cmp
sub
mov
movsb
andl
cmp
nop
ret
xchg
loope
add
fbstp
add
sub
cmp
mov
in
subb
ds
shll
or
jb
mov
lea
lret
testb
jmp
mov
sub
lods
adc
push
adc
je
push
repz
xchg
inc
and
cmp
cmp
aam
adc
xchg
bound
or
inc
cmp
xchg
adc
in
ret
daa
pop
push
in
push
jg
rclb
pop
and
sub
clc
pop
mov
cltd
movb
repnz
aam
lods
mov
xchg
in
loop
ret
addr16
adc
xchg
xor
add
inc
jbe
or
lret
inc
mov
aaa
sub
lea
adc
aam
adc
jl
repnz
stos
sbb
insl
aam
mov
fisubrl
pop
popa
push
adc
dec
aas
xchg
in
or
adc
xchg
lds
sub
js
jb
add
ss
mov
call
adc
test
cmpsb
dec
xor
cmp
cmp
dec
inc
jecxz,pn
xlat
or
ljmp
pop
xchg
xchg
out
mov
fwait
jae
jno
xchg
lahf
mov
jnp
mov
addr16
mov
or
add
test
cltd
push
movsb
fsubs
adc
xchg
das
iret
ds
imul
mov
in
sub
inc
scas
fstps
loop
imul
je
ljmp
imul
jmp
pushf
scas
sub
iret
push
xor
inc
fimuls
call
test
loop
xchg
pusha
je
jnp
mov
adc
push
xor
shll
hlt
jns
inc
cmp
inc
sbb
aam
push
adc
loope
popf
sbb
mov
cmp
push
test
add
and
pop
adc
push
jae
cmp
shl
sub
jnp
jp
fs
adc
push
out
add
incl
xchg
sbb
inc
add
repnz
movsl
lds
call
out
mov
push
adc
mov
inc
add
pusha
insl
pop
cli
jp
or
push
or
insl
pop
add
outsb
fcomps
or
xor
fwait
push
or
stos
push
mov
and
aaa
mov
xlat
inc
sbb
insb
or
jbe
push
and
sub
movsl
stos
aas
sub
jnp
test
je
push
daa
mov
addb
push
aaa
xor
push
mov
popf
or
mov
jmp
pusha
xlat
xchg
add
mov
adc
adc
or
inc
outsb
das
push
mov
xor
pusha
push
adc
out
cmpsl
mov
arpl
inc
mov
pop
and
dec
pop
jg
fnstenv
mov
stc
lods
mov
sti
dec
mov
adc
cmp
call
xchg
iret
fldenv
xorl
cmp
pushf
out
push
mov
sub
pop
xor
fnstcw
cmc
mov
enter
pop
cmp
and
je
push
sub
ss
inc
repnz
cmp
mov
addb
cwtl
inc
and
dec
test
addr16
mov
lods
shlb
pop
xor
add
jl
sub
dec
aaa
mov
push
imulb
aam
repnz
jns
les
pop
or
mov
sbb
in
movsl
ficoms
adc
push
pop
jecxz
enter
icebp
mov
pop
out
xor
add
pop
test
movb
int
clc
cli
sti
loop
mov
sbb
mov
test
jecxz
adc
inc
sbb
and
lods
stos
or
or
pop
xchg
test
pop
mov
pusha
out
jbe
scas
jge
in
ss
fistpll
es
xor
adc
or
dec
mov
scas
sti
add
sar
xchg
sbb
aas
sbb
inc
jo
repz
and
stc
cmpsl
ss
ret
xchg
pop
jne
sar
in
pop
cmc
cmpsb
insl
xchg
fcompl
ret
sub
scas
pop
bound
imul
pop
mov
cmp
jge
add
je
cwtl
mov
push
adc
dec
outsb
jbe
les
adc
mov
inc
ds
mov
dec
mov
das
fs
pusha
push
adc
jo
xor
xchg
mov
outsl
int3
add
es
push
jp
xchg
enter
test
cmp
push
adc
imul
inc
jge
pop
lret
loop
xor
rcr
dec
inc
jecxz
xor
add
sbb
lahf
dec
in
or
sbb
adc
mov
pop
add
int3
mov
lahf
ljmp
addr16
adc
jmp
insb
cli
icebp
enter
pop
jl
jo
addr16
fadds
test
push
les
mov
add
sbb
es
mov
mov
push
adc
sub
pop
add
push
inc
inc
add
mov
ffree
dec
add
add
inc
enter
adc
push
in
mov
cs
cmp
lret
test
mov
les
incl
jg
push
stos
xchg
dec
es
lock
push
out
lahf
cmpsl
js
mov
adc
sub
cmp
push
adc
or
inc
add
xchg
out
mov
lahf
or
std
pushf
push
jae
and
xor
rcll
iret
lcall
sub
push
pop
adc
and
call
aam
popf
dec
cmp
dec
mov
rcll
inc
xor
mov
xor
inc
jb
fcomps
ss
stc
lods
addb
add
les
clc
ss
xchg
in
cmc
sti
or
loopne
jmp
jns,pn
outsl
inc
cwtl
out
lret
fsin
fidivrs
insb
mov
xchg
test
sbb
sbb
cmp
int
outsl
sahf
mov
clc
jb
jecxz
fistps
jge
mov
and
jno
sbb
push
test
pop
jmp
push
jmp
push
or
jb
mov
push
clc
adc
adc
jno
xchg
pop
ss
mov
fnstcw
orl
test
xor
scas
pop
mov
test
mov
xor
aas
mov
into
adc
jne
jle
and
fisubrl
cs
mov
shrb
mov
mov
lods
stos
js
ret
leave
mov
jo
ljmp
pop
ljmp
mov
ja
ja
cld
jne
arpl
fnstenv
jne
aam
push
mov
mov
fld
orb
dec
adc
divl
fnstcw
inc
ret
sub
in
pop
ljmp
divl
dec
fwait
inc
fisubrs
fidivs
inc
decl
dec
xorl
add
push
mov
pushf
mov
movsb
cwtl
mov
hlt
aas
mov
iret
shlb
lods
daa
pop
mov
push
xor
adc
xor
and
addl
mov
les
xor
xchg
test
adc
inc
rcrb
adc
mov
std
cli
lock
pop
test
xor
adc
js
ljmp
mov
scas
mov
lcall
add
test
cmpsl
scas
mov
sub
push
fs
shll
sbb
add
sbb
cmp
cmp
fcmovne
push
cmp
sub
nop
push
lds
or
packssdw
mov
insl
sbb
cs
inc
jp
shrl
cmp
jns
test
add
int
into
xchg
xor
mov
imul
jae
or
push
in
xor
rcrl
mov
popa
xor
dec
mov
jp
std
shl
adc
and
ss
cltd
sub
inc
ficompl
sub
das
and
out
sub
scas
icebp
pop
adcl
outsb
and
stc
add
sub
adc
add
bound
xchg
xchg
push
lods
adc
das
jne
sub
adc
jo
xchg
xchg
cmp
aaa
sbb
stos
pop
jp
fmull
ja
mov
pusha
xchg
pop
sub
lea
fidivrs
jne
rolb
push
xchg
arpl
add
ret
fs
clc
mov
adc
out
lods
sbb
push
adc
cmpsb
dec
int
jnp
mov
push
adc
fildl
add
mov
std
pop
xchg
sti
out
fcoml
outsb
fs
lret
mov
lods
rcrb
outsl
in
scas
nop
fisttpl
inc
mov
dec
mov
clc
inc
and
aas
or
xchg
cmp
mov
push
adc
stos
insl
loope
outsb
in
scas
cmp
and
orl
addr16
inc
mov
test
push
or
inc
dec
jp
or
dec
or
mov
mov
call
cmp
clc
cmp
adc
call
xor
xorb
and
shll
loopne
and
outsb
add
and
jp
int3
into
nop
dec
in
adc
icebp
push
pop
decl
mov
enter
leave
fstl
dec
mov
mov
lret
test
cs
and
loop
dec
sahf
idiv
adc
xchg
bound
inc
ja
mov
mov
push
sbb
jmp
imul
pop
movsb
sahf
xor
aaa
pusha
sub
xlat
mov
cld
fistpll
push
xchg
ret
pusha
dec
pop
negl
in
jno
jne
adc
lods
sbb
out
and
outsl
lods
je
sbb
pushw
adc
pop
hlt
scas
pop
mov
push
adc
fstpt
xlat
jge
mov
adc
push
adc
out
scas
cwtl
arpl
adc
jns
aas
das
mov
mov
outsl
jno,pn
movzbl
push
adc
decl
inc
outsb
pop
pusha
push
adc
mov
cmp
mov
adc
cwtl
arpl
adc
mov
xor
xor
sar
cli
stc
repz
sarb
mov
xlat
pushf
test
bnd
fbstp
sbb
mov
pop
adc
dec
int
mov
sarl
mov
cmpsl
or
push
adc
insb
push
jecxz
cld
out
push
jnp
add
or
adc
xchg
movsl
mov
aas
out
fnstenv
sbb
xlat
rclb
repz
popa
push
adc
push
push
mov
mov
mov
or
arpl
jge,pt
mov
push
adc
sahf
leave
jg
test
out
and
aaa
add
mov
mov
nop
push
adc
clc
pusha
push
adc
pop
xor
jg
iret
hlt
pusha
push
adc
nop
push
adc
nop
push
adc
jl
inc
dec
mov
mov
mov
les
lea
rcll
ret
bound
xor
outsl
adc
push
adc
mov
lock
cmpb
push
jbe
pushf
mov
lock
jne
adc
lock
lret
pop
ja
popa
push
adc
sub
and
stos
shlb
xchg
push
lahf
cmp
scas
hlt
imul
inc
sbb
sbb
lret
imul
cwtl
nop
pusha
push
adc
pop
cmp
push
scas
cmc
adc
in
inc
arpl
adc
jbe
mov
adc
js
in
fiadds
mov
jge
les
adc
cmp
cli
loope
mov
ja
iret
pop
cmp
push
xchg
add
xlat
jmp
popa
push
adc
cli
in
int
fmuls
clc
pusha
push
adc
daa
fsubs
or
or
adc
jo
push
adc
jno
sahf
pusha
nop
push
adc
cmp
scas
push
nop
push
adc
cmp
inc
nop
push
adc
mov
test
nop
push
adc
loop
cli
stos
mov
xor
pop
inc
cmc
popf
je
cmp
fsubrs
test
pop
iret
mov
rorb
push
imul
mov
scas
cmp
or
lcall
dec
test
xor
outsl
pushf
in
jnp
mov
lods
lock
push
lods
xor
or
clc
mov
dec
sub
int
in
outsb
inc
and
cmp
jmp
jns
call
test
fidivs
xorl
sahf
dec
out
or
out
add
inc
lea
adc
push
cmpsl
nop
pusha
push
adc
movsl
fs
test
push
adc
loop
pop
enter
js
lea
adc
flds
fistl
stos
xor
pop
mov
pop
sbb
js
movsb
lea
or
popa
push
adc
in
mov
xlat
mov
adc
pusha
push
adc
sbb
dec
push
mov
inc
repz
lods
jnp
out
cmp
movb
dec
les
adc
pop
in
fsubp
push
or
dec
pop
stc
mov
les
nop
pusha
push
adc
push
sarl
movsb
mov
sbb
in
shlb
imul
cwtl
pusha
sub
arpl
adc
lock
jns
sbb
push
arpl
adc
cmp
divb
shlb
scas
in
and
lods
pusha
push
adc
pushf
push
mov
ret
addl
lahf
ds
mov
mov
jnp
filds
andl
mov
xor
rclb
fnsave
lock
scas
pop
in
rep
addr16
lods
mov
fidivl
sti
repz
and
jle
idivl
mov
popa
push
adc
aaa
lcall
jne
ja
fimull
popa
push
adc
sub
stc
push
xor
jp
xor
xchg
movsb
mov
out
popa
push
adc
jle
out
fnstsw
cwtl
pusha
push
adc
pushf
cmp
out
mov
les
adc
outsl
pushf
jge,pt
mov
and
add
or
mov
mov
add
les
xchg
fdivr
repz
sarb
xorb
xor
or
xchg
daa
iret
movsb
aas
jno
sbb
out
int3
shrl
push
adc
lea
mov
enter
mov
fs
xchg
je
mov
pusha
push
adc
push
adc
test
jmp
push
pop
mov
push
adc
xlat
sub
pusha
push
adc
cmpsl
ret
or
pushf
lock
push
adc
push
adc
sbb
imul
xor
sub
in
pusha
push
adc
mov
cltd
fidivs
pop
dec
jge
and
mov
sbb
pop
adc
bound
pop
lods
dec
daa
add
adc
push
sbb
xchg
rolb
xchg
mov
push
adc
cmc
sbb
jle
cwtl
sbb
push
adc
dec
mov
lret
dec
vcvtsi2sdl
add
cmp
pop
fsubs
adc
and
loopne
sbb
mov
nop
fsubr
sub
in
push
adc
xchg
pop
fadd
aad
add
hlt
xor
jae
sbb
xchg
push
adc
mov
jge
std
aaa
cwtl
arpl
add
lea
mov
popa
push
adc
bnd
push
popa
in
push
adc
push
adc
mov
push
adc
push
loope
nop
push
adc
scas
call
mov
popa
sbb
js
push
arpl
adc
xchg
cltd
pop
scas
jbe
lret
lret
into
or
ja
cmc
xor
iret
mov
nop
sbb
cmp
mov
test
cmp
xchg
add
push
adc
movsl
ss
adc
addr16
jge
fisubl
cmpsb
dec
lods
les
adc
push
push
jecxz
pusha
push
adc
push
adc
lret
pusha
push
adc
dec
mov
xchg
ret
jns
in
xor
fcmovu
neg
int
sub
cmp
adc
adc
cwtl
test
daa
xlat
xchg
pusha
push
adc
jp
push
xchg
mov
stos
add
jns
mov
sarb
popa
fucom
sbb
cmpsl
in
cmp
stos
cmp
scas
fstpt
adc
sarl
inc
mov
pop
cli
push
xchg
mov
pushf
adc
adc
mov
popa
push
icebp
xchg
and
int
add
sarl
or
xchg
jecxz
add
ss
adc
xor
cmp
push
jge
rcl
lods
jg
xchg
leave
mov
inc
add
pop
cs
inc
jge
loop
popf
inc
leave
rorl
jno
push
out
ret
lret
xchg
test
xchg
sub
sbb
mov
loope
mov
popf
or
mov
pop
lahf
ja
out
divl
lcall
xor
cli
lret
xchg
in
adc
mov
idivl
jge
idivl
mov
pusha
push
adc
loope
insl
fdivs
xchg
shll
or
xlat
sub
mov
imul
fldenv
mov
push
jl
jo
xchg
xor
pop
clc
scas
addr16
into
mov
pushf
test
repnz
insb
daa
dec
fwait
push
push
scas
mov
shrb
adc
adc
addb
dec
inc
mov
sub
inc
test
gs
adc
aaa
roll
push
stos
roll
lds
iret
or
es
or
mov
mov
test
das
adc
inc
and
pop
and
inc
test
mov
pusha
push
adc
mov
fmull
sub
add
stos
sub
lods
pop
in
jl
xor
mov
out
add
mov
orb
and
xor
push
adc
jae
daa
dec
fwait
repnz
sub
pop
aam
iret
and
jp
popa
roll
mov
push
dec
sub
adc
pop
mov
mov
push
adc
jnp
pusha
rolb
mov
popa
push
adc
out
fs
mov
sar
ss
in
cmp
mov
por
icebp
out
fidivrl
loop
xchg
and
adc
xchg
push
xchg
fsubl
call
cmp
dec
and
movsb
mov
jo
out
ret
xchg
fs
mov
mov
add
pushf
lea
rcrl
nopl
int3
pusha
push
adc
sti
dec
es
pop
divl
cmp
mov
mov
xchg
push
push
ret
dec
int3
fldz
mov
mov
addb
add
mov
xlat
xor
or
icebp
pop
sbb
push
inc
popa
push
adc
int3
mov
popa
push
adc
std
test
mov
in
stos
sub
pusha
push
adc
into
push
repnz
add
jecxz
insl
je
cwtl
pusha
push
adc
lods
cli
push
or
popa
push
adc
scas
or
xchg
gs
inc
pop
mov
jg
pusha
push
adc
push
mov
dec
aaa
test
push
adc
xchg
xchg
popf
xchg
enter
or
push
jno
inc
or
push
adc
cld
mov
push
lods
in
push
in
cmp
jge
pop
fs
push
adc
pop
out
popf
shrb
push
in
jp
push
mov
mov
jl
sarl
xor
out
pop
push
xchg
adc
push
adc
gs
mov
pushf
out
mulb
shlb
cmp
push
adc
add
dec
jnp
pusha
push
adc
scas
xor
push
jge
cmp
pusha
jnp
pop
cmp
push
adc
and
sub
cwtl
pusha
push
adc
dec
aad
xchg
push
push
inc
sbb
je
popa
push
adc
mov
pop
and
or
test
inc
mov
inc
nop
xor
adc
ficompl
sbb
and
sbb
call
test
push
inc
cmp
out
mov
sub
push
adc
cwtl
ret
mov
adc
test
push
aas
out
pop
icebp
cmp
pop
das
xchg
fiadds
call
or
sbb
mov
out
repz
roll
sbb
cld
repnz
lcall
cmp
adc
dec
sub
sbb
and
mov
daa
adc
push
adc
xchg
stos
fidivrl
sti
jbe
or
sbb
mov
mov
fdivrs
and
out
mov
mov
leave
push
mov
scas
test
sar
adc
fiaddl
add
icebp
push
jg
lahf
aas
and
lret
cmp
pop
inc
and
and
cmc
jg
in
xchg
mov
or
clc
stc
repz
mov
jp
neg
mov
pop
adc
mov
leave
xchg
jno
fcmovb
dec
daa
je
or
pusha
shrl
pop
mov
adc
mov
insb
fcomps
popa
push
adc
jb,pt
cmpsl
addr16
push
mov
push
dec
or
adc
pop
xor
sbb
add
or
lahf
ja
fdivr
testl
test
mov
xchg
daa
sbb
mov
mov
ja
fdivr
imull
sahf
and
add
push
adc
es
mov
les
adc
xor
pusha
idivl
lods
push
std
and
push
insb
or
xlat
shl
and
push
dec
lahf
aas
mov
into
jle
idivl
xlat
scas
push
aad
imul
fnstenv
xchg
fcomps
popa
push
adc
mov
ds
fsubr
mov
pusha
popa
push
adc
lret
push
adc
loop
sahf
ds
add
mov
fidivrs
pusha
push
adc
lcall
add
movsl
mov
repz
clc
sbb
adc
ljmp
mov
xor
lods
jo
add
les
adc
repz
mov
test
cmp
jmp
pop
cmp
loopne
les
cmovno
mov
movsb
or
pop
push
mov
inc
sbb
sub
mov
int3
daa
xor
mov
or
push
cli
mov
inc
dec
popa
xchg
subl
in
cwtl
cmp
adc
push
stc
mov
sbbb
or
cmp
pop
cli
insb
inc
xor
jl
lods
add
adc
adc
mov
mov
push
in
and
and
xor
gs
fdivs
cmp
popa
mov
shrl
cmp
or
lea
adc
push
adc
std
xchg
and
lcall
push
adc
adc
cmp
dec
lea
adc
adc
testb
adc
adc
jecxz
lods
cli
cmp
inc
es
dec
clc
mov
mov
push
cmp
push
adc
mov
fmuls
jo
pop
lods
inc
clc
aas
shrb
nop
push
adc
dec
outsb
les
push
adc
xor
enter
adc
jg
das
inc
inc
nop
push
adc
mov
xor
cmp
shlb
mov
and
inc
mov
jecxz
cmpsl
insl
mov
fmul
sbbb
repz
bound
push
fadd
int3
pop
inc
arpl
popa
mov
cmp
pop
cli
and
cmp
add
jle
sub
call
pop
jns
ret
dec
and
mov
lds
jmp
add
push
sbb
mov
dec
push
popa
pusha
aam
jle
jl
add
mov
dec
push
pop
dec
ret
enter
mov
lea
adc
sbb
nop
pusha
push
adc
dec
sahf
inc
out
das
and
fists
cs
js
sbb
dec
lea
adc
dec
ljmp
mov
and
mov
inc
pop
jns
rorl
popa
push
adc
dec
sub
jmp
popa
push
adc
push
adc
shl
fdivrl
mov
movups
cwtl
addl
mov
out
lock
push
adc
pusha
pop
pop
pop
mov
in
mov
or
stc
repz
mov
jp
out
mov
pop
adc
jg
and
fnstenv
clc
repz
inc
shrl
push
adc
lock
adc
cmp
fsubl
push
adc
sbb
push
adc
lock
cwtl
or
dec
hlt
pusha
push
adc
xchg
push
adc
shrb
je
push
adc
lahf
push
mov
mov
fcompl
jg
push
out
pusha
push
adc
jo
adc
aam
mov
cmp
arpl
adc
push
pop
xchg
stc
or
jmp
shrl
add
ret
and
inc
lods
jae
lods
mov
je
dec
jge
repz
mov
out
fstpl
sarb
sub
fs
lds
cld
stc
sarb
sbb
imul
mov
popf
and
lods
pop
xor
shlb
sbb
mov
sbb
je
shl
or
push
adc
das
and
cltd
cmp
in
xor
rolb
andb
lret
pop
fdivrl
or
adc
in
xlat
mov
aaa
xchg
popa
push
adc
mov
shr
push
sub
jae
aam
mov
in
out
pop
jne
xor
sub
push
adc
push
and
nop
pusha
push
adc
jnp
cmc
sub
nop
jno
rcr
les
adc
adc
lahf
mov
add
les
adc
xchg
aaa
stc
loopne
out
adcb
not
mov
jno
mov
movsb
scas
pop
xchg
and
mov
test
or
adc
sti
das
mov
xchg
jmp
inc
mov
rcll
dec
lds
add
adc
xor
aad
mov
jnp
nop
push
adc
sub
jge
sbb
pusha
push
adc
mov
fldl
adc
and
nop
pusha
push
adc
or
pop
xor
in
int3
pushf
fldl
adc
xor
adc
mov
xchg
sub
and
pusha
popa
push
adc
dec
leave
dec
ret
outsb
mov
das
das
push
lret
nop
lcall
ficomps
jge
cs
cs
pusha
push
test
push
adc
jp
jbe
rorl
or
push
push
test
outsb
pusha
sbb
call
fldcw
cld
movsl
sbb
add
mov
cmp
mov
mov
out
adc
push
adc
pop
inc
cmp
mov
nop
push
push
loopne
and
mov
movsl
iret
leave
cmpl
add
dec
push
dec
and
adc
mov
inc
cmp
pop
jns
and
daa
div
add
inc
in
cmpl
dec
jge
dec
xchg
push
fcoms
mov
mov
push
sub
sub
cmpsl
push
cmpsl
sub
push
adc
shll
jnp
push
test
out
cmpsb
test
dec
pop
ja
outsb
and
dec
push
call
pop
out
sub
into
arpl
pop
mov
xlat
ja
addl
sbb
mov
insl
cld
xchg
push
adc
ret
aas
aaa
out
dec
push
aad
add
cltd
sbb
pop
mov
mov
xor
add
popa
push
adc
sahf
dec
mov
add
mov
test
dec
loop
pop
xorl
sbb
pop
fistpll
leave
jnp
jl
jae
pop
loopne
cmp
adc
ror
andb
fwait
push
adc
push
adc
adc
pop
sbb
repz
pusha
call
adc
std
mov
push
mov
call
aam
mov
cltd
insb
icebp
daa
lock
push
adc
lock
fdivrl
ss
xchg
push
adc
ret
inc
std
stc
repz
dec
push
or
push
adc
js
cmp
in
fnstenv
cmp
rcrl
fisubl
push
adc
fldl
adc
mov
cli
mov
rol
pop
adc
ret
cld
roll
pusha
sub
push
adc
iret
shrl
enter
push
adc
ret
test
addl
sbb
pop
out
cmc
loope
mov
sbb
mov
leave
rorb
push
adc
bound
or
adc
push
adc
push
cmp
mov
or
push
adc
sub
lahf
ds
icebp
iret
xchg
lods
pop
mov
dec
fwait
nop
lret
mov
cltd
leave
pushf
adc
cmpsl
adc
cmp
adc
xchg
adc
push
adc
pop
bound
jle,pn
jmp
outsb
subb
mov
lods
jnp
std
xchg
inc
dec
lock
push
adc
dec
mov
faddp
mov
xchg
push
adc
repnz
in
daa
fs
popa
call
adc
and
popf
inc
mov
pop
out
xor
xor
pop
jne
js
in
leave
jnp,pt
mov
in
push
imul
fdivl
std
xor
js
iret
fwait
xchg
xor
adc
dec
xchg
xchg
cmc
push
call
push
adc
cwtl
xchg
push
adc
fsubl
adc
outsb
lret
mov
push
sti
cmp
scas
sub
out
rorb
addr16
xchg
pop
adc
loope
inc
andl
icebp
and
push
adc
push
adc
inc
fisubl
rorl
push
adc
cmp
push
adc
in
jmp
lods
jns
cmpsb
insl
data16
add
mov
jg
adc
es
cmp
adc
lahf
jle
out
pusha
push
adc
xchg
pop
insl
and
lods
mov
int3
fxch
es
xlat
sarb
mov
rep
adc
nop
test
sbb
mov
mov
sti
dec
and
sub
adc
fs
inc
mov
and
gs
lcall
xor
loop
inc
xchg
enter
lock
pop
adc
arpl
adc
rcr
ret
lock
xchg
pusha
push
adc
dec
pop
jmp
pop
sbbb
xlat
adc
ja
xchg
or
mov
xchg
mov
push
adc
adc
mov
adc
xchg
push
adc
pop
cld
out
pop
adc
daa
pusha
loopne
sbb
pop
adc
ljmp
push
adc
adc
pop
adc
rcrb
push
adc
cmp
dec
sub
push
adc
push
daa
adc
jge
mov
dec
test
adc
push
adc
adc
or
adc
lods
xor
in
mov
mov
fs
push
adc
jb
push
jne
sahf
lods
mov
cmp
pop
andb
je
xorb
adc
pop
je
adc
push
stos
and
push
adc
xchg
sbb
movl
fs
push
xchg
js
pop
adc
cs
push
adc
maxps
loop
and
pop
adc
mov
repz
lods
repnz
popa
push
adc
and
jp
ljmp
adc
lods
mov
popa
push
adc
inc
ljmp
lcall
aaa
cmp
xchg
xor
adc
push
add
xor
sbb
pusha
sub
xor
or
xor
push
push
hlt
pop
mov
sarb
dec
push
adc
movsb
outsb
rolb
xor
adc
push
mov
xchg
push
adc
cltd
leave
pop
sahf
mov
daa
lret
daa
repz
out
lahf
mov
sbb
adc
add
ljmp
adc
inc
iret
scas
cmp
add
fwait
push
adc
ja
mov
mov
push
adc
push
mov
std
stc
repz
sbb
addb
lea
jnp
scas
fnstsw
mov
ss
ja
call
out
popa
push
adc
jle
adc
inc
and
inc
test
leave
push
mov
xchg
push
xchg
push
adc
or
out
pop
jle
add
dec
jl
dec
fwait
cmp
scas
rorb
addl
pusha
rcl
pop
arpl
lea
call
cmp
push
adc
loop
lcall
sbb
or
lahf
int3
stc
clc
ja
adc
jne
xlat
push
dec
call
pop
mov
insb
fadd
stos
les
adc
test
jno
or
adc
mov
in
xchg
fmuls
clc
pusha
push
adc
xchg
cs
hlt
pusha
push
adc
jl
add
pusha
push
adc
pop
sub
inc
orb
mov
mov
add
pusha
push
adc
imul
or
xor
sub
cld
lock
or
popa
aam
pushf
lea
notb
xchg
and
data16
popf
cs
hlt
popf
cmp
test
scas
js
cwtl
lea
push
adc
in
popa
fnsave
push
xchg
jno
cmp
andb
insb
jle
inc
pop
mov
pusha
pop
jmp
cmc
mov
cmp
mov
dec
mov
gs
or
mov
mov
out
mov
fwait
es
insb
mov
adc
clc
pusha
push
adc
mov
cli
lahf
adc
push
adc
lret
pusha
push
adc
lods
mov
sub
cltd
xor
push
adc
and
stos
xchg
je
in
xchg
push
or
enter
shl
add
xchg
pusha
push
adc
sub
add
and
std
mov
inc
ret
pop
pop
dec
sub
fcmovnb
lock
fs
dec
hlt
xor
push
fcmovnb
and
in
or
mov
pop
ds
fxch
sub
das
mov
int3
jo
xchg
lods
mov
sub
sbb
lahf
xor
push
pop
enter
sub
xor
mov
jge
mov
jl
xchg
sti
popa
and
dec
xchg
mov
or
mov
xchg
imul
xor
mov
or
int3
mov
or
aas
sub
or
cwtl
into
lcall
push
cmc
ja
stos
int
pusha
push
adc
sahf
pop
push
arpl
in
xor
sub
and
dec
jle
xor
xchg
stos
mov
cmp
out
pop
mov
or
inc
int3
xchg
imul
mov
mov
dec
add
sarl
bound
inc
xchg
push
mov
jle
push
cwtl
pusha
push
adc
adc
pop
xchg
das
xchg
in
adc
icebp
mov
jl
aam
inc
jns
jg
leave
hlt
inc
mov
mov
xor
nop
popa
sub
jo
mov
stos
les
adc
mov
lahf
das
sarl
cmc
and
fdivrl
les
adc
jg
add
lret
ret
int
bound
shl
xor
ss
mov
cmp
cmp
iret
lahf
imul
adc
jnp
mov
xchg
fcomps
popa
push
adc
fdivl
nop
mov
mov
mov
nop
pusha
push
adc
pusha
inc
arpl
aas
jle
scas
cmpsb
mov
mov
bound
adc
subl
mov
fdivr
popa
push
adc
mov
xchg
xchg
push
adc
pushf
pusha
push
adc
test
hlt
pusha
push
adc
push
push
imul
cmpsb
mov
mov
popa
push
adc
addl
popa
push
adc
xlat
add
aas
jle
adc
insb
mov
ja
fucomp
es
push
adc
sub
arpl
push
adc
push
adc
mov
sub
jnp
mov
fwait
int3
pop
adc
sti
cmp
hlt
sbb
xlat
insl
sbb
mov
and
out
xchg
mov
lret
jno
stos
cltd
out
lcall
pusha
push
adc
add
xchg
fcomps
inc
jbe
adc
andl
imul
xor
pop
hlt
cmp
mov
out
movsb
lock
fimuls
sub
pop
cmp
movsb
inc
shrl
pop
movsl
idiv
cmc
loope
pusha
sti
lock
jnp
pop
cltd
ror
jne
ficompl
push
iret
loopne
ror
repz
jbe
sbb
int3
stos
out
ret
jl
lcall
out
scas
sbb
nop
mov
ja
and
loop
notb
xchg
mov
mov
movsl
xchg
aad
or
cwtl
in
pop
test
pop
push
pushl
in
ret
test
rcr
data16
jge
iret
mov
push
outsl
add
cltd
cmp
cmp
test
sub
pop
jmp
inc
jne
xchg
js
adc
or
lods
push
inc
lahf
mov
sbb
push
rorl
insl
test
imul
ljmp
inc
inc
fs
sub
js
iret
mov
xchg
fildl
or
dec
sub
sub
pop
lahf
sbb
je
and
or
xchg
adc
cmp
lahf
cmp
movsb
xchg
pop
lret
lret
aaa
hlt
pop
push
mov
movsb
lods
lahf
fidivrs
pop
ret
aam
adc
mov
mov
int
xchg
push
mov
mul
imul
daa
pop
js
sti
call
notl
or
or
pusha
rcrl
insl
add
aam
pusha
cmp
sbb
adc
inc
and
cmc
das
add
xor
and
cwtl
enter
sbb
mov
mov
enter
pop
outsb
sub
pop
sbb
adcb
lds
fdivs
inc
negb
cs
daa
sub
loop
mov
xor
jecxz
push
xor
mov
and
add
or
mov
in
in
outsl
pop
inc
sarb
pop
aad
lahf
imull
movsb
fs
pop
fmull
fwait
sub
xchg
int
xchg
loop
aas
push
xchg
pop
adc
xchg
mov
pop
xchg
or
sti
ror
jmp
sub
lcall
adc
filds
out
xchg
jl
ss
out
scas
mov
out
fists
adc
or
arpl
adc
mul
das
fidivrs
dec
sbb
cmpsl
cmpsl
iret
pop
inc
jmp
pusha
push
adc
jg,pt
or
fnstcw
mov
clc
or
pop
jb
mov
jge
sbb
orps
cmp
jo
add
pop
inc
xorl
adc
dec
lahf
aas
cs
ja
xor
inc
or
push
mov
dec
nop
pusha
push
adc
jne
xchg
daa
dec
in
xor
addr16
arpl
mov
popa
pushf
ds
xchg
or
jle
stc
push
sarl
out
stos
cmpsb
and
jg
mov
lods
mov
dec
sbb
adcb
xchg
repnz
mov
mov
xchg
xor
ret
or
adc
sbb
push
and
or
push
adc
mov
cld
stc
rep
mov
xorb
jmp
lock
sub
scas
and
aas
jle
sbb
pusha
mov
addr16
fucomp
mov
pusha
push
adc
cltd
insb
xor
or
cmp
out
imul
jne
push
movsb
pushf
mov
pusha
int3
sahf
mov
adc
mov
imul
imul
cmpsb
mov
jno
popa
cmp
pop
orl
pop
pop
daa
movsl
cmp
jb
bound
adc
cld
divb
cmc
loope
adc
push
clc
dec
out
mov
mov
cmc
or
lret
or
add
sbb
cmp
jmp
or
idivb
dec
aad
push
mov
fwait
xchg
scas
adc
pop
xchg
or
out
stos
or
jne
pop
outsb
cmpsl
lcall
jno
inc
andl
call
fsts
mov
mov
pop
out
mov
in
sbb
stc
shrl
loop
call
orb
rcrb
mov
ret
cmp
cmp
in
imul
and
add
inc
pop
repnz
iret
dec
adc
jns
inc
and
mov
call
push
mov
xchg
movsb
in
and
adc
add
mov
das
or
sbb
cmpsl
sti
cwtl
push
hlt
mov
pusha
pop
js
jp
adc
sahf
out
mov
sbb
inc
mov
pop
push
pop
aad
add
push
fcoms
xchg
sub
mov
inc
imul
pusha
push
adc
sub
je
fdivl
cmp
sbb
sub
adc
fcoml
push
enter
mov
push
jp
jno
sbb
adc
mov
loopne
mov
and
popa
cli
push
ds
mov
xchg
mov
pop
inc
sub
dec
mov
xor
inc
mov
mov
int
bound
adc
lods
xor
test
loope
cmp
sbb
adc
addr16
dec
out
iret
aas
ljmp
push
push
arpl
cmpsl
bound
out
cmp
xlat
xchg
pusha
lret
mov
mov
jne
int3
sbb
sub
fcomps
outsl
aad
clc
mov
jno
div
loopne
adc
xor
hlt
lds
inc
mov
arpl
inc
shl
xchg
push
adc
loopne
adc
mov
push
adc
push
add
push
mov
mov
or
subb
mov
cmp
nop
in
aam
nop
into
or
rorl
fs
adc
lcall
ljmp
out
inc
or
pusha
push
adc
insb
pop
mov
dec
pop
cmpsl
iret
adc
jns
stc
repz
lods
inc
addb
test
or
sub
mov
adc
lret
xchg
lods
mov
jns
or
xor
ljmp
or
fisubs
ss
outsb
sbb
jg
jl
sbb
pusha
mov
stos
sub
jmp
add
push
pop
inc
xor
and
es
lahf
mov
mov
pusha
shl
cmpsl
fadds
repz
mov
lea
ss
lods
lret
addl
jbe
addb
push
testl
push
ljmp
roll
add
enter
push
add
loope
scas
je
xlat
call
pushf
push
xchg
dec
lods
or
xor
pusha
popa
push
adc
lods
mov
xchg
push
adc
cltd
insb
icebp
daa
xchg
jl
je
aas
jo
jge,pt
cmpsl
mov
push
mov
lods
cmp
mov
push
into
sar
mov
mov
int3
insl
cs
arpl
cld
mov
add
push
adc
push
push
mov
cvtps2pi
ret
add
cmpsb
and
sahf
xchg
add
push
std
popa
pushf
push
sahf
insb
xor
push
adc
jp
stos
or
cwtl
pusha
push
adc
sbb
inc
test
pusha
popf
imul
push
adc
sub
imul
push
cld
scas
mov
nop
add
dec
loop
in
pop
iret
outsl
lods
lods
cmpsb
insb
mov
push
scas
enter
pusha
push
adc
mov
mov
lret
int3
mov
xor
stos
mov
mov
add
mov
inc
xchg
dec
adc
insb
int3
lcall
pop
mov
loope
xor
dec
sub
or
and
jns
in
test
sub
lahf
pop
sub
sbb
pushf
fcomps
dec
push
add
add
push
adc
enter
std
mov
pop
dec
dec
in
aam
loop
jbe
mov
mov
cwtl
int3
rcl
xchg
jecxz
cmc
outsl
test
es
push
out
out
dec
dec
sub
push
adc
jno
and
cmc
sbb
mov
xor
add
lret
push
sbb
pop
push
lods
idivb
adc
insb
daa
xor
test
add
iret
scas
cmc
fdivr
xlat
loope
push
mov
enter
add
push
mov
xchg
xlat
incl
xchg
jmp
xor
pusha
jp
fidivl
add
push
stos
repz
mov
mov
invd
adc
mov
ds
mov
inc
jge
or
cli
mov
das
pop
xlat
into
cltd
lods
dec
push
sub
insb
int
jae
cltd
jo
in
bound
fwait
mov
inc
xchg
imul
lret
lea
call
icebp
cmc
sub
bound
mov
or
ss
sub
ds
pop
shrl
xor
or
xchg
movsl
data16
mov
int3
xchg
cwtl
lcall
insb
clc
add
out
dec
or
sbb
xor
xchg
cs
add
loopne
cmp
cwtl
lock
xor
aam
mov
sub
mov
jo
cmpsb
sarb
scas
push
cmpsl
lods
inc
jbe
mov
adc
dec
jl
push
dec
lds
loop
push
loopne
xchg
xchg
jns
adc
xchg
outsb
lea
sub
bound
popw
push
inc
dec
push
jbe
dec
lret
push
repz
push
insb
sub
xchg
xchg
jl
js
add
jg
aaa
jnp
xchg
in
inc
in
jne
call
rolb
mov
out
fists
pop
cmp
jae
inc
push
inc
test
imul
js
dec
lods
sub
pop
dec
push
cmpsl
dec
mulb
outsb
adc
jne
jle
aad
push
jmp
jne
shll
mov
xor
dec
pop
addr16
std
insl
sbb
adcb
fwait
leave
xor
out
int3
pop
das
sub
fidivrl
aad
not
xlat
imul
fcmovbe
loopne
adc
icebp
jp
adc
adc
jae
inc
not
xlat
fisttpl
push
loop
out
dec
adc
sbb
sbb
idivl
sbb
jge
cli
insl
mov
push
call
int3
jns
push
std
outsb
cld
push
xchg
ret
pusha
dec
pop
testl
or
or
push
push
push
lahf
aas
xchg
imul
mov
stos
clc
mov
jns
std
push
cli
insb
repnz
push
dec
push
cs
iret
sahf
mov
imul
fnstsw
fistpll
enter
lds
loop
cmp
adc
xor
xor
mov
outsb
mov
fcmove
leave
xchg
daa
cmpsl
movsl
pop
jl
lret
or
out
xchg
mov
xlat
lods
idivb
lret
sbb
mov
lahf
jle
clc
rep
pop
aas
aas
jl
xor
aam
insb
outsb
inc
xor
fcomps
outsb
dec
movsl
hlt
or
jae
imul
mov
mov
imul
push
arpl
out
add
mov
push
imul
test
lcall
add
or
sti
add
fstps
sbb
shll
xor
xorl
insb
hlt
je
xchg
push
adc
jns
popa
das
call
push
adc
cs
xchg
push
push
inc
lods
es
or
lret
adc
fsubs
fcomps
mulb
addr16
sahf
popa
data16
sbb
scas
xor
push
adc
fs
adc
mov
add
test
jb
dec
gs
hlt
and
push
xor
push
adc
push
adc
xor
cli
pop
mov
pushf
pushf
mov
adc
loopne
jno
sarb
arpl
jo
cs
cwtl
cmp
int
lret
mov
cmpsl
cmp
adc
cmp
adc
pushf
lcall
mov
or
cs
sub
pusha
add
push
sub
mov
pop
pop
sub
sub
push
or
push
stos
scas
cmp
jg
dec
lret
les
or
dec
xor
or
or
nop
insb
sub
enter
fdivrs
leave
shld
ficompl
aam
mov
jp
sub
and
icebp
das
fcompl
cmp
xchg
fwait
std
push
or
jmp
and
cmpsb
jecxz
add
sub
lock
lods
mov
or
sub
dec
out
lods
pop
xchg
les
popf
inc
pop
xorl
fmull
mov
fstps
ret
cmp
icebp
and
sbb
dec
je
dec
in
stos
jbe
mov
push
call
push
outsb
mov
inc
push
cmp
cwtl
fadds
mov
jne
test
fdiv
into
lods
data16
inc
insb
mov
inc
inc
hlt
lods
mov
sub
orb
icebp
jae
cwtl
jmp
subb
das
popf
jecxz
mov
mov
xchg
mov
jae
sub
iret
popf
pop
xor
add
xor
dec
stos
sti
ja
jge
xchg
sarb
mov
bound
pusha
push
adc
loop
pop
mov
or
mov
insb
push
xor
lock
adc
mov
jnp
fwait
push
xor
sub
jge
in
lods
fsubrl
pusha
push
adc
or
out
pusha
push
adc
mov
stc
mov
sub
adc
mov
jo
mov
lret
sahf
jge,pt
and
orl
dec
loop
lahf
adc
imul
push
adc
orl
mov
pop
adc
xchg
sub
lret
xchg
mov
jl
movsl
sysenter
add
fwait
iret
inc
add
mov
adc
push
adc
nop
rorl
mov
pop
mov
mov
mov
push
jl
stc
jae
ds
sub
push
adc
popa
mov
xchg
adc
mov
adc
pop
push
adc
outsb
sarb
and
xor
pushl
cmpb
push
ret
dec
dec
cmc
cmp
adc
clc
and
adc
movsl
adc
or
adc
scas
sbb
cmp
push
mov
adc
xor
int
daa
dec
enter
or
sbb
add
push
adc
push
adc
aam
xchg
pop
in
or
push
adc
cmp
mov
adc
je
sub
or
pop
aam
lret
xchg
int3
mov
dec
pop
xchg
sub
pop
pop
adc
ret
mov
loop
adc
mov
int
in
sbb
xchg
pop
mov
add
jg
jo
sti
inc
sarb
mov
jg
aad
push
sti
sub
loopne
mov
xchg
les
pusha
push
adc
mov
lock
or
ret
scas
aaa
xchg
mov
test
dec
add
popf
insl
mov
adc
popa
push
daa
adc
cmp
inc
inc
and
fistl
push
arpl
mov
lcall
pop
jno
fsubrp
mov
mov
push
adc
pop
add
lock
cmpsb
stc
jge
add
int
or
cmp
push
scas
iret
orb
cli
pop
or
scas
and
ret
mov
adc
cmp
lret
mov
adc
imul
inc
xchg
movsl
fs
scas
lahf
out
xchg
add
cwtl
cmc
mov
ljmp
add
fstpl
loop
xchg
test
push
jecxz
outsl
sub
in
aad
nop
push
mov
shrb
xchg
lea
xlat
dec
js
pop
xchg
lods
ss
into
cli
mov
xchg
cli
jno
pop
jae
jle
rolb
pop
mov
push
sbb
aam
jl
neg
pop
les
jae
icebp
dec
mov
lock
sub
push
lret
sub
lock
movsl
or
inc
leave
pushf
sub
dec
and
mov
leave
jp
insb
add
xchg
mov
bound
scas
pop
jecxz
cmp
out
shrb
cmp
sti
sub
notb
jl
clc
loope
sub
cld
sbb
mov
and
dec
add
inc
adc
sub
push
popa
or
and
das
or
outsl
dec
push
outsl
test
movl
add
int
sub
test
sahf
dec
aas
cs
push
xor
ffreep
jno
pop
les
aaa
in
repz
fld
and
cmpsl
hlt
test
cs
sub
bound
adc
and
out
fisubs
test
repnz
dec
std
cmp
cmc
test
xor
mov
scas
cwtl
cmc
cli
mov
hlt
inc
dec
mov
jns
outsl
adc
hlt
lods
mov
dec
jg
dec
lahf
aas
mov
mov
jmp
gs
imul
xlat
scas
roll
lahf
or
es
roll
or
sbb
loop
xor
or
jb
push
inc
jp
scas
pop
mov
pop
fwait
ss
dec
loope
push
xor
cmp
xchg
or
adc
push
mov
sub
jnp
push
jecxz
outsb
fs
xchg
lods
mov
sbb
out
push
add
and
call
mov
mov
adc
xchg
aaa
adc
cmp
sbb
pushl
pop
xlat
cwtl
leave
sbb
ja
divl
or
test
and
inc
clc
xor
push
aas
xorb
push
leave
outsl
cmc
aaa
adc
xor
rep
mov
aas
or
leave
cmp
pusha
cmp
ja
mull
jmp
divb
jge
xlat
scas
gs
add
stos
mov
dec
jmp
dec
mov
sbb
or
cmpsb
pusha
ss
testl
mov
aad
pop
rcrl
dec
jbe
jle
clc
or
adcl
xchg
fidivrs
pop
push
xor
rcrb
shl
lock
imul
mov
mov
pop
jmp
adc
mov
lret
dec
into
insl
sub
adc
mov
pop
js
pusha
pop
dec
movsl
inc
andb
xchg
mov
repnz
ret
xchg
sbb
pop
mov
and
push
lret
mov
aam
ret
sbb
ds
fwait
sbb
pop
fwait
cmp
jle
cli
push
cs
out
jno
cwtl
sbb
pop
lds
mov
sbb
call
mov
cld
addl
dec
pop
mov
xchg
nop
xchg
mov
and
lods
pop
nop
aad
lret
insl
stc
inc
xchg
push
xor
adc
xor
pop
lret
adc
sarb
insl
add
or
adc
scas
jb
std
xchg
jge
insl
mov
pop
adc
or
cmp
mov
dec
push
fiaddl
insb
cs
or
add
sbb
cmp
inc
push
test
push
cmp
pop
test
and
xor
jge
das
popa
ljmp
dec
mov
out
pusha
jp
push
inc
and
mov
jnp
js
mov
mov
pop
push
jl
loop
fld
hlt
cmpsb
repz
sbb
movsl
sbb
mov
xlat
mov
loopne
push
incl
lock
mov
inc
xchg
cmp
iret
ds
fbld
pop
pop
out
adc
es
mov
sub
rcrl
jmp
outsl
push
inc
ret
mov
lret
dec
xchg
cmp
adc
xchg
cmp
lcall
cmp
xchg
add
imul
inc
decb
pop
sub
xchg
movsb
adc
pop
in
test
stc
sbb
mov
out
inc
mov
lds
daa
xor
lahf
negb
mov
addr16
dec
push
sarl
pop
fs
push
adc
sbb
int3
cltd
lea
ja
loope
cmp
xchg
push
adc
xchg
arpl
push
xor
movsl
mov
test
pop
test
pop
adc
mov
add
or
xor
sti
std
lret
jle
faddl
adc
loopne
lods
jg
dec
es
pusha
push
adc
idiv
mov
add
or
fimuls
add
ret
daa
xchg
test
xchg
clc
les
bound
jle
xchg
cmpsb
insl
cmovl
jae
in
sbb
iret
jno
or
test
lock
push
mov
fldenv
popa
push
adc
pop
cld
or
adc
test
adc
add
adc
sahf
enter
add
or
push
and
or
adc
mov
mov
mov
pusha
push
adc
or
adc
lcall
les
adc
hlt
repz
lahf
mov
or
push
insb
mov
pop
mov
push
push
adc
rclb
pop
cmp
sti
push
sarb
stc
or
sarb
mov
mov
mov
fsubrs
repnz
iret
or
mov
sub
jnp
in
mov
cmpsb
insb
fadd
mov
popa
push
adc
les
adc
and
pop
adc
adc
adc
repz
mov
mov
scas
mov
and
dec
pusha
sub
aaa
lcall
shrb
out
test
inc
popa
push
adc
outsl
idivl
add
adc
repz
or
fsubrs
push
mov
or
adc
dec
dec
lahf
das
jle
sub
xor
aam
out
faddl
pusha
push
adc
xor
pop
lods
fs
cmc
or
adc
jne
int
cmp
fidivs
int3
sbb
in
adc
adc
jb
rcll
std
icebp
call
cmp
inc
sbbb
flds
sbb
jmp
pop
testb
push
xchg
pop
lret
ds
push
sub
arpl
mov
inc
ficompl
adc
mov
cmpsb
adc
repz
scas
mov
ficompl
mov
xchg
lret
movsb
rolb
into
icebp
nop
mov
or
mov
mov
push
mov
aaa
mov
dec
ret
xchg
mov
cmpsb
insb
mov
xlat
test
in
stos
dec
push
test
mov
or
in
and
test
imul
andb
fs
push
mov
popa
push
adc
das
sub
pcmpgtw
cs
int
ficoml
fisubrs
dec
std
cmpsl
jo
jns
lock
lods
push
jg
fsubrl
jno
and
pop
adc
cld
pusha
push
adc
push
xor
adc
sub
push
adc
fmuls
test
add
pop
adc
xor
pusha
push
adc
dec
and
pop
adc
push
test
adc
test
push
adc
shll
rcl
mov
sub
jg
gs
cltd
fidivrl
daa
mov
jo
sbb
cmpsb
add
insl
in
mov
loope
pusha
push
adc
cmc
mov
push
adc
rcrb
ljmp
mov
js
xchg
sub
ja
loope
in
fcmovnb
or
xchg
cmp
jle
xchg
or
inc
daa
bound
mov
inc
jge
popl
adc
add
xlat
dec
je
push
or
clc
int3
xchg
les
push
adc
pop
fisubl
pop
mov
ljmp
cmp
push
fdiv
int3
orl
inc
adc
push
adc
add
fs
aaa
inc
das
hlt
jns
push
sbb
mov
test
pop
lret
andb
fistpl
mov
cli
jbe
fs
sub
stos
jle
sahf
xchg
mov
scas
aad
in
adc
adc
ss
fidivs
dec
push
push
out
mov
sbb
xchg
add
aaa
mov
or
mov
cmp
in
sub
inc
add
ja
mov
xchg
push
adc
mov
xor
andl
mov
xor
jb
push
and
pushw
mov
jb
and
push
mov
mov
pushf
mov
and
gs
mov
and
leave
xchg
adc
je
iret
insb
sub
pusha
mov
push
or
push
pop
pusha
push
adc
and
fwait
ss
je
sahf
lods
cld
stc
repz
push
ret
addb
call
mov
filds
loope
test
or
jle
stc
sbb
xchg
push
adc
mov
or
jae
ss
mov
mov
sbb
lock
adc
inc
and
and
push
cwtl
push
insb
xchg
push
adc
notl
push
adc
pop
jnp
adc
outsl
ffree
xchg
out
leave
jmp
je
fidivl
fs
sbb
pusha
mov
inc
or
and
fiadds
ljmp
dec
and
xchg
daa
cmp
mov
and
jle
xor
sub
jp
and
mov
sub
call
mov
add
or
push
adc
cmp
push
int3
pop
sub
imul
pusha
xchg
addr16
xlat
aaa
movsb
xchg
insl
rcrl
or
cmp
xor
mov
mov
sti
jp
xchg
lds
ja
cmp
and
imul
popa
stos
mov
mov
sub
xor
lahf
fcmove
add
xlat
rcr
hlt
jg
imul
sub
dec
or
sub
out
out
add
mov
mov
cmpsb
insb
jecxz
push
std
ret
dec
jge
fnsave
adc
fimuls
xchg
lods
repnz
fdivl
lea
mov
fcompl
sbb
and
xchg
cmp
mov
mov
lcall
aam
clc
jl
push
adc
sbb
sbb
movsb
out
insb
mov
adc
adc
sub
add
loop
adc
mov
push
test
mov
cmp
arpl
fistl
mov
mov
push
xchg
inc
fildl
je
enter
shl
fisubs
adc
xchg
push
std
mov
push
cltd
in
and
cld
xchg
mov
call
pop
xchg
cmp
pop
mov
jmp
lock
jle
out
sub
insl
push
ss
mov
push
sbb
pop
jp
sbbb
dec
mov
xchg
push
mov
daa
push
pop
aaa
ds
xchg
xchg
test
sub
in
lods
mov
cmpsb
mov
das
or
jo
inc
test
daa
cmp
dec
movsb
xchg
js
push
inc
popa
in
xor
mov
and
loopne
f2xm1
mov
cwtl
les
lcall
push
push
ret
sbb
ret
cmpsb
mov
sub
cld
mov
mov
negl
int3
mov
stos
mov
pop
mov
push
and
daa
or
or
add
cmp
daa
in
fld
daa
outsl
ret
jl
stc
out
jne
xchg
rolb
sbb
out
das
mov
inc
insl
mov
and
pop
push
or
and
pop
imul
rcr
sti
addr16
insl
fwait
jbe
lods
jnp
xor
push
push
or
lea
mov
imul
jbe
pop
leave
shl
or
jno
out
dec
cmp
or
and
adc
mov
jmp
push
fimuls
std
and
mov
jns
shr
xchg
mov
add
pop
jle
sti
jl
push
int3
jno
lcall
fnstsw
mov
or
hlt
jns
xlat
into
ljmp
mov
pop
push
jnp
in
xor
test
insb
lods
dec
adc
ret
insb
subb
lret
mulb
in
mov
out
mov
fimull
adc
cmc
push
enter
sahf
mov
lock
inc
xor
xchg
iret
lcall
and
mov
ss
jmp
push
xchg
mov
lock
out
inc
xchg
mov
setae
mov
pushf
mov
movsl
mov
andl
jb
xchg
in
pusha
dec
jne
cmp
cmp
adc
cltd
aad
xchg
and
es
xor
jno
dec
lahf
mov
insb
xor
loopne
movsl
lods
sub
mov
xor
or
cmpsb
gs
xchg
movsb
repnz
aas
jle
call
adc
lods
jle
dec
mov
fldt
jnp
in
mov
gs
xchg
stos
or
outsl
dec
or
push
adc
nop
pusha
push
adc
and
xor
push
in
fnstenv
xor
repz
jecxz
icebp
hlt
dec
jmp
aad
mov
fnstcw
arpl
shrb
sahf
inc
stos
ja
arpl
mov
push
in
pop
jae
xchg
out
stos
add
or
jge
inc
int3
push
or
cmc
or
adc
adc
xor
add
xor
jnp
jb
jnp
jae
fsubrl
jns
ljmp
mov
pusha
push
adc
nop
pusha
push
adc
cmp
outsb
scas
sub
hlt
xor
jle
cmp
divl
daa
fwait
cmpsl
data16
cli
loope
inc
out
ja
stos
jge
je
xchg
push
outsb
cmp
jo
out
fs
add
or
mov
adc
dec
inc
sbb
add
cmc
and
jl
or
xor
fldenv
les
lea
nop
mov
sub
pop
xchg
out
mov
pop
andb
cmp
or
push
adc
inc
testl
faddp
inc
outsl
popl
bound
adc
je
sbb
sbb
push
adc
xlat
pop
adc
sub
add
out
xor
adc
add
les
adc
pop
aas
push
dec
lds
pop
adc
or
push
adc
xchg
lahf
scas
les
adc
adc
addr16
dec
out
pop
xchg
cmpsb
insb
mov
sbb
mov
mov
adc
ret
rcrl
bound
adc
pop
les
inc
cmp
repz
cmc
push
push
pop
and
sub
stos
or
adc
pusha
pusha
push
adc
jl
ss
adc
icebp
mov
xor
sbb
adc
loopne
or
push
loopne
sar
sub
popa
mov
xor
call
dec
sub
push
call
sub
pop
stos
dec
scas
test
inc
and
icebp
ja,pt
insb
repz
shrb
test
gs
mov
xchg
push
shlb
nop
in
cmp
fs
pop
mov
dec
pop
or
cmp
or
fdivs
adc
jno
dec
mov
push
inc
adc
ret
add
gs
cli
fs
daa
sarl
int
mov
mov
jae
lcall
pop
pop
mov
popf
pop
filds
mov
nop
subb
nop
and
push
jmp
jg
push
je
enter
cmp
adc
cwtl
fdivrl
sub
jb
aas
or
stc
push
mov
in
xor
scas
jge
out
outsb
pop
cmp
loopne
movsb
sub
mov
push
mov
xor
xor
divl
sbb
adc
mov
pop
mov
mov
fwait
aas
loop
push
adc
xchg
pop
jg
jbe
in
jne
jbe
mov
push
notl
shrb
dec
or
adc
mov
sbb
pop
adc
and
adc
dec
jno
fs
adc
push
insb
cwtl
jge,pt
and
push
adc
data16
inc
repnz
dec
fwait
and
mov
mov
cmp
xor
cmp
repz
out
jae
outsb
fistl
inc
lock
push
pop
je
insb
fcomps
int3
insb
sub
lahf
pusha
insb
jno
jp
and
push
mov
sbb
mov
cwtl
movsb
fnstenv
jb
jmp
pusha
shl
cmpsl
adc
pop
mov
mov
lret
and
add
dec
fs
adc
push
jnp
push
mov
in
dec
xor
and
out
pusha
shl
out
adc
inc
cld
jbe
push
mov
and
and
mov
push
add
xchg
ret
jle
and
jne
push
aad
inc
xor
mov
cmp
out
popa
rolb
jmp
mov
call
push
adc
cmp
das
ds
shrl
nop
shlb
jg
inc
mov
out
addr16
dec
mov
bound
add
mov
pop
mov
jae
loop
cltd
mov
cmc
or
fldenvs
lea
test
push
jns
or
in
or
sbb
pop
addr16
rcr
push
adc
packssdw
lods
test
mov
sbb
or
push
adc
popf
mov
in
mov
sbb
mov
ja
shll
mov
dec
mov
and
push
adc
mov
pusha
push
push
fcomip
fwait
sbb
cmp
push
rclb
cmpsb
out
jmp
aam
fpatan
mov
cld
data16
je
and
jmp
sti
mov
cmp
mov
pushf
mov
negl
int3
push
leave
cmp
mov
sbb
jp
add
jmp
mov
lock
popf
mov
mov
int
test
mov
or
mov
and
out
inc
xchg
mov
dec
mov
nop
mov
or
pop
lods
mov
into
loop
cwtl
les
imul
adc
mov
and
push
push
adc
pop
bound
cmp
lret
cmp
outsb
xchg
dec
inc
push
insb
and
xor
in
adc
sbbb
inc
pop
pop
jl
jns
xchg
push
sub
bound
adc
fstl
push
adc
test
cmpl
arpl
loopne
pop
mov
mov
xchg
outsb
cmp
lret
push
jno
cmp
inc
negb
mov
mov
popf
fdivp
ret
mov
out
dec
sahf
and
push
adc
push
into
aaa
cmp
mov
dec
ficomps
lcall
cli
dec
rcll
imul
dec
fnstenv
push
jo
popa
and
in
pop
and
fsubs
bound
adc
mov
dec
push
fisttps
push
mov
call
hlt
and
adc
sub
stc
or
bound
adc
les
cwtl
mov
call
int
out
div
inc
sbb
adc
cld
or
inc
add
nop
test
push
mov
int
mov
pop
xor
or
cmp
jbe
repz
adc
mov
inc
mov
mov
xchg
jo
push
adc
mov
idivl
adc
adc
loop
jmp
jbe
cmp
push
adc
lret
push
or
xlat
and
mov
mov
mov
dec
xchg
push
adc
adcb
jne
inc
jmp
insb
cwtl
clc
xchg
cwtl
fnstsw
je
xchg
adc
adc
jle
push
or
or
cmp
repz
out
jae
outsb
push
mov
fs
cwtl
ss
jo
cmc
cvttps2pi
adc
imul
sbb
ljmp
sbbl
add
outsb
subb
adc
and
in
test
xor
xor
adc
mov
xor
inc
mov
pop
movsl
inc
test
sub
mov
cmp
clc
jecxz
adc
xor
pop
push
movsl
inc
test
ss
jbe
sahf
push
addl
pusha
shrl
mov
sub
leave
aas
loope
push
xchg
popa
fwait
lock
pop
xor
jg
adc
inc
and
ret
fsubs
adc
dec
lcall
ljmp
push
xor
clc
push
insb
and
dec
cwtl
lcall
in
sbb
xchg
pop
and
sbb
dec
jne
inc
addb
adc
cwtl
int
push
add
inc
mov
xorb
and
fnstcw
int3
push
mov
aas
sti
insl
hlt
push
add
lock
loopne
or
and
out
add
aas
push
xchg
fwait
jae
test
xor
dec
or
inc
leave
adc
loope
mov
popa
add
push
pop
jmp
movsb
pop
mov
xchg
push
add
add
fadds
push
xor
les
sbb
jle
sub
cmp
aad
pop
js
ds
sbb
push
adc
dec
les
mov
sti
inc
add
or
test
bound
scas
jl
mov
sub
push
dec
add
mov
xor
pop
fs
popa
ss
add
xchg
push
adc
push
js
cmp
mov
mull
adc
add
clc
xchg
push
adc
cmp
xchg
push
adc
cmp
xchg
push
adc
inc
xchg
cmp
push
adc
addl
fcoml
mov
sbb
mov
lock
xor
aam
rcr
inc
pop
imul
movsb
mov
setge
push
pop
mov
xor
mov
push
int3
xchg
push
adc
or
in
stc
dec
loope
pop
adc
in
sub
dec
jle
mov
inc
lods
push
xchg
jmp
push
adc
paddusw
scas
and
cmp
lods
nop
popa
hlt
loope
mov
insb
sub
fwait
xor
mov
push
adc
mov
je
adc
adc
call
push
and
xchg
lcall
jbe
js
sub
je
jo
inc
mov
push
adc
rolb
adc
mov
mov
adc
jg
imul
lea
mul
jnp
jae
jg
mov
adc
insb
inc
mov
or
xchg
jl
push
adc
lahf
jmp
or
fcmovb
and
dec
int
ret
xor
inc
lds
scas
rolb
xorl
xchg
xchg
jnp
das
popf
aas
mov
inc
divl
push
adc
jnp
cmc
out
pop
push
adc
xlat
scas
call
mov
push
adc
scas
or
jecxz
or
mov
sarb
add
xlat
scas
loopne
jp
in
aas
loope
push
dec
and
pop
adc
fiadds
push
mov
push
dec
mov
aaa
mov
fcomps
adc
mov
lds
adc
adc
inc
sbb
dec
xor
sti
sbb
aas
sub
lea
adc
xor
pop
and
xor
inc
sbb
dec
fwait
push
adc
dec
ljmp
cmpsl
popf
jge,pt
pop
pushf
arpl
mov
cld
sarl
lret
add
es
mov
insb
sub
push
adc
sti
imull
insl
dec
sub
sub
mov
aaa
sarb
push
inc
cld
div
mov
int3
mov
adc
adc
ljmp
test
outsl
and
cmpsl
rolb
pusha
rcll
sub
pop
sub
dec
test
mov
pushf
daa
sbb
insb
repz
nopl
into
ror
add
and
adc
imul
push
fnstcw
mov
lahf
iret
push
pushf
lea
adc
or
sbb
push
aam
mov
loop
add
and
adc
cmp
push
adc
adc
jmp
add
rcrb
push
adc
add
adc
xchg
xor
push
pop
sub
xchg
push
mov
add
adc
lcall
lods
lea
adc
pop
add
push
hlt
gs
fnstenv
pusha
push
adc
js
aaa
mov
arpl
sbb
popw
fsubr
add
mov
jns
xor
sbb
in
rcr
inc
in
lea
adc
and
push
and
lods
inc
lods
out
fs
ret
dec
imul
push
adc
cli
adc
push
repnz
jbe
pusha
push
adc
daa
adc
dec
sbb
in
repz
lods
pop
xlat
rcll
mov
push
adc
pop
mov
dec
inc
sub
and
cmp
lret
adc
lods
dec
jno
test
pop
or
add
pop
sub
fs
and
adc
mov
jg
stos
popa
aam
lret
pusha
push
adc
mov
rcl
push
adc
repz
add
lea
adc
adc
pop
xchg
rorb
xchg
add
lea
adc
in
inc
inc
push
jnp
and
push
insl
lock
dec
hlt
xor
arpl
xchg
sti
test
mov
nop
fwait
add
push
adc
push
enter
mov
fimull
and
adc
push
adc
add
push
xor
xchg
adc
add
divb
push
adc
in
stc
ret
rorb
jg
std
push
lock
sub
inc
dec
sub
adc
jl
pusha
push
adc
aad
cli
loop
std
xor
mov
sahf
fucom
in
fwait
imul
mov
mov
stc
je
popa
jnp
mov
push
and
xor
outsl
lods
stos
ret
jle
lret
adc
pop
das
subb
call
pusha
push
adc
sub
repz
lods
xchg
inc
pusha
push
adc
add
xchg
cmp
enter
mov
lcall
mov
bt
bound
add
push
aaa
pusha
movl
mov
pop
mov
mul
cwtl
jle
dec
jecxz
lahf
sub
or
inc
mov
jns
outsl
sbb
ret
mov
shrb
mov
sbb
lock
push
adc
cmp
adc
and
jns
or
mov
scas
xchg
daa
ret
mov
push
fwait
cmp
push
adc
mov
sarl
movl
mov
insb
sub
push
adc
sti
imull
scas
adc
adc
jge
jae
pop
adc
loopne
sti
repz
call
mov
push
sub
lret
mov
test
pop
adc
roll
jne
push
inc
mov
mov
jecxz
je
incb
pop
sbb
pusha
adc
mov
arpl
mov
test
test
adc
incb
adc
adc
xchg
in
adc
in
popf
test
jae
daa
dec
fwait
lcall
jg
out
push
bswap
addb
pop
push
mov
decl
gs
fwait
sbb
add
and
adc
pop
jle
adc
call
cmp
mov
sbb
dec
sbb
daa
movsl
divl
iret
sahf
aas
das
test
fcomps
sub
out
sub
shlb
push
bndstx
mov
push
adc
mov
xlat
aad
pop
aaa
in
sbb
shlb
or
push
inc
adc
popl
push
popa
xchg
insb
fstl
and
push
and
push
push
aad
dec
or
cmp
cld
jb
sbb
dec
sub
add
sbb
int3
xor
nop
sbb
cwtl
or
xchg
adc
aas
mov
fildl
sahf
sbb
stc
mov
sub
pop
jbe
push
popa
inc
xchg
jno
xchg
and
mov
and
push
adc
inc
pop
push
cmpsl
nop
sbb
inc
and
or
sbb
cmp
notb
adc
in
nop
pusha
push
adc
adc
scas
xchg
mov
fxam
xor
jno
insb
fisubs
adc
lds
sbb
das
test
sub
lods
or
in
and
xor
ljmp
imul
ss
adc
sub
or
aaa
and
test
cs
dec
sub
add
push
ret
sub
xchg
xchg
mov
xor
fmulp
push
rol
lock
cli
xorb
rol
hlt
lahf
mov
mov
adc
mov
pusha
push
adc
jae
cli
mov
ljmp
mov
jge
ja
push
fmull
dec
push
jnp
sub
mov
xchg
icebp
ds
adc
push
or
movsl
xchg
xor
rorl
xor
xor
aad
out
jmp
mov
mov
dec
and
pop
outsb
mov
or
xor
pop
dec
mov
dec
fwait
and
sti
mov
aas
jmp
loope
sub
lret
mov
out
cmc
jle
jb
dec
in
iret
fstpt
adc
mov
aas
stos
mov
cld
push
decb
pop
and
sahf
out
pop
or
rclb
andb
sarb
mov
add
popf
and
es
xchg
lahf
popf
popf
iret
jmp
cld
mov
adc
pop
es
in
packssdw
cmp
push
subl
pcmpeqw
test
loop
dec
pop
adc
scas
jg
movsb
mov
out
sub
stc
lock
or
mov
pop
jg
repz
cmpsb
int
aas
pop
dec
outsl
inc
mov
out
stc
ss
test
pop
xchg
aad
lock
push
ljmp
fwait
push
pop
cmpsb
jp
mov
js
daa
rol
addb
fnstenv
jge
repnz
adc
dec
jmp
mov
mov
lahf
adc
xchg
mov
adc
xor
out
loop
enter
pushf
mov
lea
mov
or
mov
xchg
mov
or
mov
pusha
pusha
push
adc
push
in
lods
cwtl
xor
aas
jle
push
les
fiaddl
popa
push
adc
adc
fistpl
mov
js
dec
fwait
movsb
fcomps
pusha
push
adc
rolb
sbb
sub
jnp
xor
inc
aad
les
xlat
jmp
adc
xchg
mov
add
aas
arpl
mov
mov
scas
fwait
daa
push
shll
pop
xor
adc
cs
idivl
andb
dec
mov
fs
jnp
mov
rolb
pusha
sub
pusha
push
adc
mov
dec
sbb
adc
imul
mov
cld
stc
repz
ret
subb
jmp
inc
sbb
xchg
mov
jnp
ret
sub
lods
mov
add
dec
add
and
xchg
scas
xlat
pop
adc
imul
stos
mov
in
lods
pop
mov
dec
cwtl
xor
ret
sub
xchg
adc
lock
adc
cld
rcll
sbb
fnsave
adc
mov
lds
xchg
cmp
out
mov
loop
mov
adc
mov
and
pop
adc
loope
ss
mov
adc
inc
nop
pusha
push
adc
mov
test
add
movsb
int
call
cmp
adc
lods
push
movb
fcoml
outsl
ja
push
xchg
jne
ss
mov
inc
mov
fdivrs
popf
inc
sub
pop
cmpsl
call
lods
and
pop
adc
movsb
push
mov
popf
insb
popl
inc
pop
pop
adc
ljmp
sbb
call
sbb
push
adc
ror
lods
push
vpsrlq
add
or
cmpl
sarl
push
adc
dec
in
add
or
sub
sti
pop
sbb
push
xchg
adc
popa
push
adc
cmp
push
mov
mov
sahf
hlt
popl
adc
je
out
scas
lods
in
push
sbb
mov
jno
cmp
and
adc
mov
cmp
xor
or
mov
decl
and
mov
adc
fisttpl
fcmovnu
jb
cmc
lock
jae
in
repz
mov
push
adc
jne
mov
fwait
les
adc
outsl
stc
mov
push
mov
or
dec
jmp
adc
test
or
or
popa
push
adc
loopne
adc
mov
dec
stos
ret
cmp
jns
fwait
lock
jno
mov
test
push
or
push
adc
xchg
sbb
or
test
or
adc
adc
mov
push
xchg
sbb
mov
or
nop
popa
push
adc
sbb
or
pop
je
clc
pusha
push
adc
and
or
loop
pushf
test
or
aam
test
or
lret
dec
call
or
je
sub
and
inc
sbb
adc
std
in
loopne
inc
or
ljmp
inc
or
mov
push
or
add
popa
push
adc
and
mov
into
sbb
or
sbb
or
subl
ljmp
lcall
pop
mov
mov
nop
sbb
in
or
adc
aaa
xchg
inc
outsb
enter
mov
mov
or
enter
cmp
out
adc
xchg
jl
adc
xor
cltd
ja
cwtl
std
mov
adc
addl
xor
iret
into
push
fnstenv
jge
xchg
sbb
pop
add
jmp
icebp
out
stc
cmp
xchg
out
jecxz
mov
inc
mov
or
inc
fdivs
lods
js
inc
shlb
sub
push
push
mov
leave
aaa
lods
mov
cld
stc
repz
jb,pt
adc
push
addr16
cld
stos
mov
pushf
orl
mov
jo
lahf
idivb
ss
fnstenv
lods
sbb
outsb
mov
outsl
stos
cmp
sahf
cmp
decl
cld
push
xchg
popf
cmp
imul
call
int
call
pushf
xchg
push
lcall
xchg
cltd
cmp
imul
call
int
in
dec
cmp
xchg
cmp
decl
std
push
xchg
xchg
cmp
stc
add
jmp
int3
scas
loope
dec
cmp
cmp
xchg
ds
loop
loopne
jmp
scas
scas
mov
stc
push
arpl
push
enter
decb
mov
loop
jecxz
xor
push
inc
xchg
cmp
out
imul
or
xchg
mov
cs
xchg
icebp
es
xor
ret
call
shlb
sbb
cmp
sarb
cs
mov
or
push
loope
pusha
xchg
push
adc
int3
test
or
rol
imulb
mov
push
cli
mov
movsb
lret
jns
lcall
adc
je
push
jae
lds
mov
ficomps
adc
in
inc
sbb
sub
push
jp
push
out
mov
jl
lea
push
in
dec
mov
push
adc
xlat
mov
inc
mov
dec
and
pusha
xchg
push
adc
outsl
xlat
bound
mov
int3
xor
lods
jb
imul
pop
dec
jnp
ja
pusha
popf
push
adc
push
addr16
pusha
xchg
push
adc
pusha
mov
mov
pop
mov
cwtl
pusha
cltd
push
adc
mov
pop
mov
adc
std
jmp
js
pop
fsubl
push
adc
pusha
mov
dec
xchg
xchg
mov
mov
les
push
adc
xor
or
adc
or
xchg
push
adc
xlat
lds
pusha
mov
outsl
repz
cmp
mov
or
pusha
cltd
push
adc
aas
dec
inc
movsl
pusha
popf
push
adc
xchg
in
inc
aaa
mov
pusha
xchg
push
adc
pop
cli
in
pusha
mov
xchg
lods
dec
mov
es
sti
adc
push
adc
int
fidivrs
pusha
popf
push
adc
stc
inc
stos
mov
mov
xchg
push
adc
mov
cltd
dec
pusha
mov
inc
mov
jae
mov
popa
xchg
push
adc
mov
jge
cld
pusha
popf
push
adc
out
fidivs
push
pusha
xchg
push
adc
inc
mov
and
push
adc
arpl
cmp
dec
stos
les
fdivr
add
sbb
shl
cmp
repz
cltd
push
adc
dec
roll
pusha
popf
push
adc
and
dec
pop
dec
mov
pusha
mov
sbb
cmpsl
je
dec
mov
lret
mov
dec
popf
out
ss
xchg
push
adc
adcb
push
and
std
divb
add
in
popf
inc
psrld
push
testb
mov
aas
scas
js
inc
fldenv
divb
popa
shrb
fstps
jae
lods
xorl
jmp
icebp
out
fldenv
jl
sti
out
movsl
stos
je
ret
xchg
lods
lock
lock
in
int3
pop
xor
sub
xchg
leave
adc
jne
mov
and
mov
arpl
lods
cmp
adc
idiv
stc
repz
adc
sbb
sbb
push
dec
push
mov
loop
xor
push
cmp
cmc
out
lahf
mov
or
pop
filds
mov
mov
leave
xchg
scas
or
cmp
push
jnp
xor
adc
lods
aad
pop
iret
test
in
fcmove
cmc
mov
pushf
into
idivl
jp
inc
scas
pop
mov
negb
pushf
mov
jbe
leave
in
sbb
push
mov
es
xchg
popa
jne
dec
inc
mov
cltd
dec
dec
mov
jae
sti
in
aam
cmp
es
xchg
popa
jne
dec
bound
cwtl
dec
push
xorl
cmp
jmp
mov
sbb
lcall
icebp
in
cmpsl
cli
repz
and
repz
jmp
stos
fldlg2
xor
or
test
idivl
adc
repz
push
cwtl
fldenv
sbb
daa
aas
sbb
inc
out
xor
stc
insb
int
jl
or
dec
push
in
fs
xchg
jecxz
adc
jae
jne
repz
xor
jl
jle
lds
push
movsl
pop
mov
mov
cmp
or
es
mov
mov
movsl
cmpsb
je
test
shrb
xor
adc
cmc
xchg
popf
jmp
mov
scas
pushf
cltd
xchg
lock
xchg
cmp
sub
push
repz
cmp
inc
dec
xchg
adc
dec
jo
es
mov
fimull
jo
call
imull
and
pop
fistpl
pop
dec
popa
test
cmp
push
fiadds
sbb
dec
scas
add
insb
ret
mov
mov
ret
ret
fwait
cmp
adc
xlat
bound
mov
push
lret
aas
pop
ret
mov
mov
push
imul
cmp
adc
dec
xor
out
and
push
into
rclw
stos
and
xor
aas
pop
test
jo
jne
sbb
xlat
sti
jl
shl
out
jmp
mov
ljmp
sub
add
push
jg
inc
sub
add
aaa
adc
jns
movsb
in
aas
pop
and
out
popa
leave
aam
or
ss
mov
enter
push
ret
ss
dec
arpl
add
imul
leave
or
or
mov
mov
roll
cs
stos
cmc
mov
outsl
fildl
lea
fsubrs
icebp
inc
xor
scas
testl
add
pop
lds
adc
mov
ja
lahf
notl
inc
or
xchg
mov
js
repnz
int3
pop
hlt
mov
out
lods
inc
sbb
aas
insb
mov
mov
inc
mov
or
push
ret
mov
stc
mov
dec
leave
dec
jae
repnz
lods
movq
cld
push
cmp
es
cmp
outsl
mov
inc
lcall
imul
push
aaa
jp
punpcklbw
push
mov
mov
insb
outsb
repz
imul
pop
pop
xor
ja
mov
clc
cmp
roll
add
sub
dec
sbb
inc
sub
jnp
add
cmp
mov
ja
pop
clc
or
sub
fs
aad
fldcw
cli
jp
mull
inc
lds
ret
push
clc
mov
xchg
aas
or
jnp
mov
mov
js
fwait
movsb
icebp
add
jl
in
mov
sahf
mov
lock
lods
sbb
adc
scas
test
jge,pt
xor
push
cld
adc
sti
aad
xchg
jg
es
out
iret
stos
pop
pop
ljmp
movsl
popf
xchg
push
les
pop
inc
jno
inc
outsl
sar
jnp
pop
inc
loope
lahf
sbb
inc
cmc
out
lahf
mov
xchg
int3
sub
sub
ss
outsl
dec
out
add
xor
scas
sti
repz
pop
xor
test
call
cmp
mov
xor
fcomip
mov
cld
push
orl
xchg
xor
xlat
pop
jmp
lods
cli
dec
out
lahf
stos
inc
fwait
inc
cmc
mov
adc
inc
hlt
inc
rcrb
fcomi
mov
mov
fdivrs
movsl
mov
cwtl
jae
ret
adc
shll
lock
push
scas
pop
aas
xor
aad
out
push
jp
mov
sar
sbb
dec
gs
ja
jl
adc
xchg
pushfw
jmp
inc
push
and
jle
push
cmp
mov
sti
shrl
lods
mov
mov
mov
or
divl
inc
mov
js
icebp
not
mov
cmc
sbb
push
adc
add
xchg
jmp
mov
and
imul
test
adc
lret
stos
add
dec
push
roll
adc
pop
bound
mov
and
or
outsb
mov
jl
lds
test
sahf
sbb
cmc
push
loope
popl
hlt
sbb
shll
pop
scas
adc
fldenvs
fwait
cmp
lods
pop
push
pushf
repnz
cwtl
and
flds
mov
mov
inc
ret
sub
mov
mov
adc
rcr
inc
test
mov
movsl
in
mov
ret
mov
lods
ret
pop
movsb
mov
mov
mov
nop
pop
lcall
xlat
cmp
leave
sbbl
push
int
fstl
mov
in
cmpsl
mov
scas
cltd
imul
cmp
dec
data16
mov
fmul
pop
js
mov
jg
push
push
dec
jl
ds
mov
fldt
lock
add
mov
xor
jo
pop
or
dec
popf
jge
jg
xchg
lcall
push
cmp
mov
loop
mov
ret
pop
add
sahf
insb
and
and
es
js
fdivrs
fisubl
mov
lcall
dec
and
movsb
push
adc
cmp
xlat
sbb
cmc
sub
loope
push
popf
lock
cmpsl
dec
repz
inc
out
inc
test
add
out
sahf
cmc
push
ja
out
daa
repnz
jbe
loop
test
sub
test
out
inc
dec
xchg
mov
mov
imul
ret
jae
into
push
pop
jnp
cmp
or
int
jae
test
movq
cld
push
sbb
cld
mov
imul
outsl
sbb
xchg
xor
sbbb
push
push
mov
repnz
jg
or
adc
jae
ljmp
sbb
push
test
jo
lea
pop
mov
jp
shr
aad
inc
nop
addr16
in
lea
sbb
mov
mov
mov
aad
shlb
xchg
sti
adc
cmpsl
lret
push
es
push
mov
js
jo
lret
pop
and
outsb
sub
lock
fnstenv
inc
int
mov
lock
xor
jns
in
and
add
push
push
pop
enter
push
je
lock
mov
jns
ja
stos
fs
lcall
mov
fldl
cmp
hlt
add
aad
jb
das
jle
lock
mov
je
fidivs
pop
test
gs
xchg
lods
add
mov
cwtl
jb
jg
lahf
testb
fnstsw
aam
or
sub
cmp
lods
cmc
or
ret
mov
outsb
lret
enter
loope
fnsave
jecxz
shrl
pop
sub
xchg
sub
push
xor
jne
rolb
adc
arpl
in
xlat
scas
cmp
nop
rcr
mov
jle
push
inc
nop
mov
push
rolb
adc
pop
pop
push
roll
adc
fidivrl
sti
in
fwait
leave
sbb
iret
xor
jl
jge
lods
mov
sub
insb
jne
fsubl
push
fadd
fmuls
mov
cmpsl
call
sahf
xor
mov
cwtl
jle
ljmp
pop
pop
cmp
fistpll
jbe
test
jmp
jnp
mov
outsl
jno
mov
mov
movsl
sbb
mov
cmpsl
mov
and
fwait
into
sbb
test
stc
mov
arpl
loopne
test
dec
mov
adc
jp
les
push
dec
int
add
sbb
out
mov
sahf
adcb
cs
mov
daa
or
lcall
push
xlat
in
dec
aam
lock
push
mov
and
fidivrs
mov
ss
mov
es
cmp
test
push
repnz
adc
movsb
imul
push
insb
std
lds
cmpl
jo
pop
jb
mov
fsubl
jo
mov
aad
sub
inc
sub
nop
adc
ret
inc
sbb
or
push
sti
jp
mov
rolb
push
dec
repnz
sub
aad
xchg
pop
cmp
in
sbb
clc
sub
mov
mov
push
inc
out
add
pop
push
shrb
push
and
ret
pop
jl
dec
pusha
or
ljmp
and
sub
xchg
mov
enter
aaa
ss
cli
out
imul
mov
dec
js
push
pushf
imul
mov
push
sarb
push
in
popa
lock
sbb
fimuls
sub
push
cmp
push
leave
mov
pop
daa
loope
test
test
cmp
push
ret
out
arpl
rcrl
testb
jne
std
mov
inc
xor
mov
lock
call
inc
cmp
lret
sbb
sbb
ljmp
push
dec
enter
inc
adc
inc
pop
or
lea
inc
sub
or
pop
out
popf
hlt
or
jno
movb
pop
aaa
cmpsb
xor
push
push
and
jae
insb
aam
xacquire
mov
xchg
dec
mov
ja
stos
jno
in
into
cwtl
jmp
mov
aad
add
sbb
or
stos
xchg
in
add
mov
jmp
mov
and
jg
push
pop
inc
dec
pop
jne
jae
les
pop
cs
add
popf
mov
push
test
roll
jge
jb
add
hlt
mov
loope
ja
xchg
xchg
mov
mov
cmp
out
cmp
xor
adc
in
lahf
xor
scas
add
mov
pand
xchg
mov
inc
fdivl
enter
insb
andb
pop
je
shll
mov
cli
out
sbb
fisttpl
lret
push
mov
js
ret
sbb
jb
ljmp
sbb
cltd
jge
aad
xor
in
pushf
std
lods
pcmpgtb
aas
int
inc
mov
nop
call
dec
pop
es
lahf
or
mov
ror
aaa
fsubs
cmpsb
aaa
and
sub
mov
sbb
xor
mov
cld
push
subb
jmp
and
or
push
test
cli
mov
test
fs
jb
mov
mov
adc
mov
or
addr16
mov
pushf
jge
xor
cmpsb
sbb
jne
and
cmpsb
das
xchg
mov
aad
and
jb
adc
xchg
ja
fldcw
jl
out
fdivrl
lahf
xor
fwait
fs
inc
ja
mov
jnp
and
hlt
or
jg
add
je
mov
lret
gs
divb
faddp
ss
cwtl
xchg
arpl
repnz
cmp
xchg
push
add
adc
mov
sbb
add
and
adc
daa
xor
push
arpl
or
addr16
cmp
jecxz
mov
and
daa
sub
loope
cmp
add
sub
mov
bound
push
loope
les
mov
nop
enter
fisubs
cmp
lds
and
and
mov
jp
in
cltd
jne
cmp
in
mov
scas
lods
or
lahf
cmp
jns
xor
cmp
adc
outsl
jbe
push
scas
stc
pop
mov
addb
and
ds
movsl
nop
je
dec
ret
ja
into
dec
int
mov
xchg
loop
loop
je
or
mov
xorb
sti
divb
out
lock
adc
lcall
jae
sti
jns
cmp
pop
jle
out
add
loop
adc
cmpsl
cmp
daa
adc
push
in
movsl
fisttpll
jmpw
aad
shrb
cli
xchg
fiadds
jge
mov
iret
adc
cwtl
mov
in
pop
cmp
fwait
jae
push
lock
mov
mov
jns
push
sub
mov
cld
je
sub
jnp
cmpsb
adc
shrl
dec
sti
mov
xor
or
mov
and
leave
push
push
nop
lcall
push
sbb
ret
scas
flds
xchg
xchg
outsl
js
cmp
xchg
lea
xor
test
mov
push
arpl
mov
pop
mov
dec
push
mov
jno
ja
inc
andl
cmpsl
pop
add
adc
rol
jae
repnz
push
and
add
movsl
mov
adc
mov
sub
pop
jnp
popa
lock
test
test
clc
xabort
out
test
jae
cwtl
and
push
sbb
fidivrs
scas
mov
xor
cld
jne
rcrb
adc
push
and
inc
dec
outsb
divl
mov
movsb
or
add
lods
xor
push
ret
popf
outsb
xor
mov
imul
movsl
nop
rorl
out
in
mov
imul
jge
mov
xor
cmp
loope
jle
and
dec
cmp
mov
sub
outsl
sbb
popa
arpl
cmp
adc
lods
incb
fwait
int3
xor
mul
jge
outsb
cltd
jg
icebp
cmp
in
sbb
mov
outsb
ja
rcr
pop
in
and
mov
mov
mov
hlt
in
pop
jbe
dec
cmc
cmovg
pop
jne
xlat
or
mov
push
shlb
inc
add
pop
repnz
lods
dec
dec
or
lods
or
sbb
mov
insl
sbb
aad
ja
sbb
fwait
mov
cmp
outsb
xchg
mov
enter
push
hlt
pop
pusha
orl
inc
fldl
je
dec
jnp
xor
jmp
and
cltd
push
jae
fists
mov
jne
jle
jb
sti
hlt
outsb
xor
and
out
fldl
mov
insl
lock
inc
sbb
jle
stc
jo
ljmp
mov
add
testl
jno
push
inc
fdivrl
cmc
mov
ljmp
repz
push
mov
sahf
rcrl
call
jbe
add
aam
mov
sti
mov
fidivrl
dec
pop
jns
lock
cmc
push
test
mov
adc
add
adc
mov
adc
push
addr16
xor
or
je
hlt
dec
xchg
xor
jg,pn
mov
xorb
fldt
movsl
add
lock
test
std
insl
into
loop
data16
insb
jnp
mov
push
or
inc
sub
mov
and
movsb
dec
lret
mov
cmc
and
jl
or
or
push
test
sbb
xor
daa
call
push
rcr
pushf
lret
push
and
inc
xor
cs
push
adc
adc
mov
aas
stos
xlat
cld
dec
or
sub
and
shr
ljmp
enter
outsb
fs
sbb
add
ljmp
mov
cmp
mov
or
jle
push
repnz
sub
repnz
mov
sub
xchg
xor
aaa
aam
loop
mov
mov
dec
es
out
lcall
pusha
cli
lds
xlat
xchg
loop
mov
jl
outsb
sub
hlt
jo
ret
xchg
les
add
enter
sbb
sarb
sbb
push
pushf
enter
ret
lcall
mov
jle
aad
int3
insb
dec
pop
iret
lret
mov
cmc
ret
out
fdiv
icebp
mov
rcrl
dec
sub
mov
in
outsb
lcall
cmc
and
push
jmp
cs
lock
or
pushf
int
jle
loope
cs
sahf
xlat
ss
sbb
xchg
dec
and
push
sub
loop
cmp
push
inc
mov
mov
and
mov
or
outsl
sti
gs
fstpl
push
push
hlt
jecxz
dec
add
xor
movsl
dec
loop
and
sbb
sub
cwtl
or
mov
ja
push
jle
push
inc
pop
lcall
shlb
adc
cs
sti
insl
sub
cld
push
insl
ror
loop
cmp
and
add
loop
jp
insb
add
xor
sbb
imul
push
sub
xlat
imul
loopne
add
mov
xchg
adc
pop
cli
repz
xchg
dec
inc
cmp
loope
or
jnp
daa
cmc
cmp
mov
and
lret
outsl
push
add
dec
fwait
inc
das
int3
pop
xor
mov
ret
add
call
and
dec
mov
mov
outsl
scas
or
js
mov
mov
fwait
stos
ja
int
sub
adcl
jo
cmp
mov
mov
hlt
jo
repz
fcmove
aas
sti
cwtl
inc
je
das
xchg
test
mov
fnstcw
dec
pop
cmp
stc
repz
je
and
pop
mov
dec
imul
nop
divl
jmp
inc
mov
xor
neg
inc
inc
push
add
lods
dec
fwait
mov
rolb
mov
rcll
cmpsb
ds
cs
aaa
cmc
ret
mov
add
js,pn
adc
mov
nop
fsubrl
mov
fwait
addr16
xor
mov
mov
test
sub
fs
mov
or
jnp
movsl
pusha
shl
icebp
jp
fistl
mov
loop
decl
shlb
leave
xchg
loopne
xchg
aas
jle
push
mov
int3
ljmp
mov
pop
mov
add
lds
lahf
and
mov
jnp
in
inc
lcallw
pop
or
fidivl
mov
and
enter
pop
xchg
cmp
sub
dec
inc
adc
imul
xor
sub
fildll
das
iret
push
xor
idiv
loop
fwait
test
and
das
dec
ja
fs
lds
mov
lods
push
jne
push
cmp
mov
sub
add
dec
daa
popf
iret
xchg
and
xchg
xlat
cmp
ss
addl
decb
adc
push
lret
dec
lds
push
sbb
adc
cmc
sbb
mov
std
enter
pop
stos
mov
lds
cmp
pop
insl
pop
inc
mov
lods
add
fmull
popf
jno
ss
push
lods
ret
popa
insl
je
jge
cwtl
ror
fsubs
mov
jp
add
imul
xchg
fnstenv
jno
daa
pusha
pop
bound
mov
stos
xor
stos
inc
orb
pop
or
jp
repz
push
pushf
fiadds
ret
cwtl
mov
dec
pop
xchg
sub
pop
fimull
scas
sub
jge
mov
jb
pusha
mov
xchg
adc
fcomps
shlb
ficoms
mov
fistps
jne
mov
push
xchg
xor
mov
and
loope
adc
xchg
stc
movsb
and
aam
js
in
mov
sub
andl
ficompl
xor
test
stos
ds
and
sbb
xchg
shrl
jo
add
movsb
ret
mov
pop
pop
shlb
out
cs
inc
mov
mov
xrelease
cmp
cwtl
xchg
pop
bound
ds
pop
outsl
pop
sbb
mov
cltd
cmc
test
and
stos
rolb
or
mov
loope
arpl
pop
mov
outsl
fcoms
jmp
sahf
stos
aas
loopne
les
shrl
sbb
inc
rcl
fcom
dec
data16
pop
pop
jge
jae
sbb
cld
es
pop
xor
outsl
out
idivb
call
jp
sub
outsl
push
jl
cmp
mov
add
cmc
loop
jnp
pusha
or
jle
dec
mov
jns
mov
lahf
aad
cmp
test
push
adc
movsb
push
mov
mov
dec
fsubrl
dec
lahf
mov
add
inc
out
rol
divb
push
fisubs
scas
das
sub
mov
or
stos
outsb
out
xchg
sub
xchg
jb
enter
unpckhps
mov
dec
testb
leave
xlat
stc
xor
out
nop
lods
or
add
test
and
adc
sbb
xor
push
adc
fstp
cmp
add
in
inc
pop
in
fpatan
jp
mul
iret
adc
jb
addr16
clc
jge
lods
pop
mov
loop
push
xchg
and
aas
adc
je
lahf
cmc
ds
test
and
push
imul
jg
add
loopne
xchg
enter
popf
xchg
out
sbb
sbb
in
pop
iret
cwtl
leave
pushf
mov
ja
or
jns
shll
jl
push
pop
jbe
sub
cmpsb
ds
push
or
hlt
scas
adc
cmp
xor
aaa
int3
and
pushf
adc
ffree
out
nop
mov
mov
add
cmp
jl
and
loop
ss
or
call
mov
xchg
adc
jns
sub
cmpsl
and
lock
adc
iret
push
lahf
jg,pt
cmpsl
call
adc
outsb
mov
push
pop
mov
mov
mov
repz
pop
je
adc
inc
ds
xor
ljmp
or
dec
ss
rol
ja
adc
jmp
pushf
test
outsb
repnz
inc
push
xor
daa
mov
inc
xchg
xor
popf
sbb
fnstenv
jecxz
cmpsl
push
andb
inc
stos
out
repz
xchg
sub
inc
sysret
sbb
aad
lea
stos
jns
pop
in
pop
lods
lea
lods
cmp
call
push
xchg
imul
mov
mov
pusha
fstpl
or
add
cmp
cmp
mov
sbb
mov
in
inc
outsb
cmpsl
popa
inc
rcll
int3
mov
bound
insl
cs
icebp
in
mov
arpl
adc
ja
pop
push
xchg
push
dec
pop
cmpsl
jmp
dec
xor
enter
xchg
iret
das
mov
sub
daa
test
adc
cli
andl
sahf
jae
add
mov
adc
mov
mov
mov
and
sub
cmp
cmp
pusha
in
pop
mov
jbe
push
dec
push
fwait
push
sbb
sbb
push
cmp
or
fwait
sbb
mov
xchg
popa
jg
sbb
stos
pop
mov
stos
mov
push
arpl
cwtl
mov
mov
push
aam
cmp
xor
or
fbstp
sub
inc
outsb
stos
or
and
sbb
std
loope
adc
dec
and
push
mov
sbb
inc
mov
negl
mov
sub
adc
mov
mov
repnz
fcomp
push
or
xor
adcb
mov
jp
or
in
pop
std
ficoml
and
fldcw
stos
ljmp
pop
mov
sbb
mov
pop
loopne
mov
inc
jle
in
ds
in
mov
pop
push
pop
xor
aas
or
mov
push
dec
jae
mov
inc
scas
test
imull
jg
adc
push
mov
mov
std
std
icebp
sti
addr16
test
jle
leave
imul
pop
add
mov
arpl
adc
xor
out
into
subb
jbe
pop
lcall
mov
divb
jp
pop
lods
cmp
xor
cmc
pop
xor
test
mov
cmc
mov
je
incb
dec
out
xlat
scas
aad
cmp
xor
or
jbe
sub
cmp
out
jp
call
mov
iret
sbb
and
xchg
pushf
cmc
mov
js
dec
nop
mov
xor
pop
mov
sbb
rcrl
xor
xor
mov
orb
out
ficoml
jge
in
fnstenv
mov
pop
or
ds
in
iret
lahf
ds
iret
add
and
xor
movsl
sub
lret
int3
jg
idivl
lahf
jge,pt
mov
pop
jp
shr
push
sub
fnstcw
dec
adc
xchg
dec
repz
pop
insl
sbb
cmpsb
xchg
sub
fbstp
fistpll
repnz
add
call
pop
loope
mov
inc
or
out
fnstenv
clc
jno
xlat
dec
loop
jge
jae
fidivrs
push
or
mov
jae
add
mov
sbb
and
mov
sti
clc
pop
adc
stos
inc
xlat
sarb
pop
xchg
push
sbb
test
mov
pop
repz
loopne
in
xorb
mov
mulb
inc
push
mov
mov
in
push
push
dec
outsb
lods
push
pop
mov
and
fbstp
cltd
xor
and
popa
push
mov
stos
xorb
dec
push
arpl
loopne
call
and
inc
lods
sub
fidivrl
int
jl
jmp
add
aad
jl
xor
lds
das
inc
add
add
and
leave
iret
test
popa
dec
or
adc
push
jl
add
subb
cmpsb
jo
daa
adc
enter
lea
adc
push
xchg
test
sub
push
js
into
xor
ficoml
cld
sub
cmpsl
push
inc
cmpsb
sar
adc
dec
xchg
inc
ja
sub
inc
shlw
mov
aad
in
nop
in
mov
mov
adc
pop
popl
and
jl
dec
ret
push
repnz
jp
or
lea
lret
dec
jge
sub
aam
clc
ljmp
loop
push
mov
mov
ds
or
cmpsb
jmp
into
jecxz
add
js
in
dec
sbb
mov
data16
aad
lcall
jb
jmp
dec
sti
inc
rdpmc
xchg
cmpsl
shlb
dec
and
test
popa
cmp
dec
push
fmull
fildl
xchg
mov
mov
jge
stos
add
je
mov
mov
cmpsl
imull
xchg
andb
jo
jl
mov
into
data16
inc
mov
pop
mov
outsl
out
jns
or
loop
sub
sti
xchg
push
inc
push
xorl
pusha
dec
call
adc
xchg
pop
mov
popa
popa
in
dec
into
or
lea
mov
mov
in
dec
sbb
fbld
loop
jle
push
add
mov
jg
ljmp
icebp
shlb
mov
pop
adc
jo
cli
adc
xlat
cmpsl
mov
add
mov
mov
pop
decl
outsb
or
cmp
test
mov
inc
addl
xchg
repnz
pop
pop
aas
xchg
pop
adc
divl
jo
push
adc
pop
ret
stc
pusha
sbb
out
cmp
lock
lret
or
dec
xchg
orb
sar
sbb
ja
inc
movsl
cmpsl
xor
jne
sub
in
pusha
jnp
jb
push
pop
jge
push
inc
test
lods
test
push
adc
iret
jbe
mov
gs
pop
cld
test
repnz
push
negl
mov
clc
jo
xlat
inc
loope
pop
stc
push
jno
inc
mov
or
mov
fnstenv
dec
lahf
aas
xchg
lock
xor
adcb
mov
sbb
lock
push
lock
ffreep
popf
mov
add
jecxz
loope
jge
test
sahf
sub
movsl
push
shll
push
out
test
bound
adc
adc
jp
out
test
xchg
fadd
loop
cmc
mov
adc
popf
shrb
ljmp
xchg
shll
arpl
in
aam
mov
pushf
mov
incb
add
mov
or
xor
mov
jns
jne
ret
insb
mov
mov
iret
jb
push
scas
pop
mov
cmp
int
std
push
dec
mov
ror
dec
mov
test
lock
repnz
aam
sbb
jp
pop
pop
or
xchg
pop
push
adc
fadds
adc
add
xchg
fiaddl
adc
fiaddl
adc
fildl
adc
fildl
adc
add
rcr
add
add
add
sub
add
xor
fldl
adc
add
mov
add
pop
filds
adc
add
cmp
jecxz
adc
in
adc
in
adc
adc
out
adc
out
adc
add
pusha
out
adc
sahf
fcmovu
add
adc
gs
lods
xchg
cmp
and
and
aas
add
aam
stos
jbe
cld
addr16
jno
adc
pop
dec
and
and
jns
test
mov
sarb
sbb
inc
out
idivb
cmc
or
sub
adc
test
cli
cld
arpl
add
jo
add
inc
sbb
or
mov
faddl
sbbl
cmp
int
scas
movsb
enter
ss
sahf
and
mov
add
mov
xor
arpl
mov
push
je
cmpsl
lock
addb
cmc
mov
cmc
push
in
enter
sub
stos
loop
test
inc
sub
lret
push
pop
xor
in
jbe
cmpsb
hlt
lock
iret
lods
inc
mov
rclb
out
fsubs
adcb
jecxz
xchg
gs
shll
test
xchg
test
das
inc
sub
ss
adc
test
ljmp
pop
dec
push
inc
cmpsb
mov
jl
add
js
inc
stos
add
inc
out
sub
lock
push
adc
and
enter
out
andb
jmp
push
adc
mov
inc
leave
push
adc
add
mov
sbb
sbb
mov
movb
xor
std
sub
cltd
nop
mov
jmp
xor
sub
mov
mov
es
lahf
notl
cmc
test
push
mov
fwait
pop
loopne
push
lea
pop
in
jb
repnz
mov
sbb
push
fdivrp
xchg
inc
sbb
jae
adc
sub
xchg
enter
testl
shrl
es
sub
aaa
sbb
jecxz
add
sbbl
imull
std
xchg
cwtl
aad
fsubl
scas
mov
fidivrs
mov
pusha
lcall
or
sahf
dec
inc
push
inc
adc
filds
lock
js
inc
fbstp
cmp
sbb
sbb
je,pt
fwait
jno
xor
out
adc
shl
inc
out
push
idivl
pusha
stos
pop
xor
jb
pushf
push
imul
mov
mov
je
cmp
xorb
xor
push
inc
mov
shl
mov
push
in
test
lods
add
mov
jb
cmp
andb
cmp
cmp
aaa
dec
jecxz
dec
gs
les
aam
xlat
pop
xchg
je
cmc
mov
mov
clc
sub
pop
xchg
out
xlat
clc
sarl
imul
jle
mov
sub
mov
push
out
in
fisubrl
and
mov
dec
adc
ja
js
outsl
push
jnp
cmp
in
push
mov
pusha
fsubl
in
cmp
inc
or
pop
lds
cmpsl
out
int
jnp
adc
and
and
loop
xchg
fnstenv
shrl
jg
dec
out
mov
out
fstpl
clc
xchg
push
fnstcw
push
inc
ss
rolb
insl
orl
push
repz
stos
sbb
dec
inc
push
inc
adc
xor
jl
or
int3
les
xor
repz
xor
fdivs
lds
or
xlat
repz
pop
and
hlt
fidivs
test
mov
test
repnz
in
pop
outsb
ljmp
mov
and
imul
int3
push
xchg
imul
mov
push
movsb
bound
push
mov
nop
orl
pop
clc
lods
or
mov
shll
fmull
loope
push
jae
call
iret
lahf
xchg
dec
xchg
xor
sbb
inc
lock
push
inc
fwait
mov
dec
sub
aas
xchg
xchg
xchg
mov
dec
cmp
xor
mov
xchg
pushf
sub
push
mov
jl
mov
outsl
xor
mov
mov
out
hlt
dec
lds
cs
inc
push
shrl
push
fdivrl
and
inc
dec
insb
jge
pop
std
cmpsl
cwtl
jmp
pop
dec
enter
ja
insb
fsubrp
sbb
out
pop
push
jle
xchg
aas
pop
sahf
psrlw
sbb
mov
adc
jecxz
mov
jne
and
subb
xchg
or
push
add
add
daa
rclb
popf
cmpsb
popa
mov
pop
pop
hlt
inc
add
sbb
lea
andb
push
shl
mov
test
movsl
sbb
out
testb
test
lods
cs
mov
popa
mov
sbb
dec
in
imul
and
stos
or
xchg
adc
lret
mov
fisttps
insb
movsb
addb
ss
adc
sub
out
aam
xchg
movsb
mov
cmpsl
nop
imul
test
addr16
gs
push
out
aam
mov
or
xchg
add
jns
out
or
inc
ljmp
and
sub
mov
xchg
ljmp
push
inc
imul
push
mov
xchg
test
pop
insl
inc
mov
push
or
push
int
cmp
sub
fucomip
jmp
int3
stos
inc
imul
cmp
pop
pop
xchg
jge
push
scas
sbb
negb
repnz
ds
lret
mov
add
sbb
rorl
jg
cmp
jmp
jl
jo
lret
adc
xor
iret
lods
xchg
cld
and
je
popf
fisttpl
add
inc
shlb
sbb
adc
add
std
xlat
scas
cmp
hlt
adc
xor
or
repnz
jg
mov
aad
mov
xchg
jle
jge
mov
out
imul
leave
push
call
enter
shlb
mov
jl
fnstenv
lcall
cld
imul
jge
aaa
call
pop
outsb
aad
xchg
pop
shl
pop
adc
and
sbb
loop
lock
jne
xlat
mov
mov
ss
iret
mov
xor
das
sub
cld
mov
repz
pusha
mov
ss
notb
fst
push
fildl
and
cld
stc
sarb
mov
add
jmp
inc
pop
xchg
mov
cmp
std
lods
mov
xor
mov
ds
out
outsl
xchg
pop
fwait
lcall
xchg
jp
aaa
rorb
mov
pop
add
imul
fldl2t
loope
pushf
stos
sub
hlt
movsb
inc
ror
cmc
scas
push
fs
dec
jnp
fbld
sbb
xchg
inc
jmp
add
shll
dec
lods
cmp
iret
push
shll
call
les
shlb
pop
pushf
cmp
out
movsb
fidivrs
repnz
inc
sub
inc
pop
dec
enter
and
xlat
shrb
and
sub
jg
pop
aad
xor
jmp
sbb
iret
sub
mov
mov
enter
lock
mov
sub
enter
push
add
inc
jo
jge
add
insl
cmp
outsb
push
push
mov
sbb
push
cmp
in
fs
clc
rcr
ljmp
mov
imul
fcoml
or
mov
test
sub
pop
pop
sub
push
repz
shlb
inc
dec
dec
dec
jge
jbe
enter
loopne
push
jns
loop
loop
pop
arpl
inc
stos
mov
xor
insb
pop
cmp
adc
mov
inc
pop
in
stos
or
rcl
push
jns
push
sub
loopne
adc
pop
inc
pop
sbbb
notb
ds
loopne
adc
jmp
pop
leave
jp
and
ficoms
lahf
jecxz
cmp
divb
push
or
dec
and
mov
cmpsl
mov
addl
cmc
jecxz
dec
xchg
mov
sub
add
iret
scas
fs
jb
jo
or
cmpsl
mov
cld
cmp
xor
ret
cmp
sub
in
lahf
outsb
subl
pop
in
andl
stos
pop
cltd
ret
imul
sbb
repnz
xchg
in
add
lods
hlt
inc
decl
mov
xor
sub
sar
cmp
je
mov
inc
pop
call
movsl
sar
sbb
mov
popf
repz
mov
xchg
iret
repz
pushf
bound
mov
incb
add
pusha
pushf
jle
aad
push
sahf
dec
enter
cmp
push
sub
dec
jno
push
out
dec
or
jp
lea
outsl
inc
test
adc
sbb
sbb
push
jno
pop
push
xor
sub
jbe
sub
push
and
xchg
sbb
mov
cmc
xor
movsl
lret
pop
in
imul
movsb
orl
je
stc
decb
mov
aad
cli
loopne
fwait
enter
sub
xor
fadd
sbb
xor
mov
aas
stc
mov
dec
loope
fnsave
add
cmp
cmp
ret
dec
out
mov
sbb
daa
js
aas
pushf
icebp
cmp
cld
arpl
pop
mov
popa
addl
sub
rep
mov
mov
dec
loope
fnsave
imul
add
addr16
mov
dec
lahf
mov
repz
push
fstps
pop
int
mov
jle
nop
imul
xlat
sub
jle
adc
out
lahf
in
fwait
popf
pop
insl
lods
jne
push
outsb
pop
push
mov
shll
sub
xor
aas
loope
jb
inc
push
xlat
mov
mov
rorb
aam
xchg
daa
out
hlt
fs
in
iret
pop
and
cli
push
bnd
dec
push
dec
mov
cmp
sbb
add
cmc
sbb
sbb
dec
clc
cmpsl
fcompl
xor
inc
cli
fnstenv
pop
stc
mov
inc
repz
dec
fstps
repnz
pop
lret
mov
pop
jb
xor
pop
dec
insl
inc
sbb
mov
adc
jne
push
insl
lods
jne
pop
xlat
dec
aaa
jecxz
cli
fnstenv
jnp
mov
push
mulb
mov
jb
mov
stc
imul
adc
bndstx
dec
fistpl
icebp
inc
pop
enter
adc
jecxz
fiaddl
vaddsubpd
clc
inc
jg
leave
cltd
shll
movsb
adc
ret
pop
push
js
in
sbb
xchg
push
fs
cli
jp
cmp
test
repnz
cli
loopne
inc
arpl
fs
imul
sbb
mov
mov
cld
push
sbb
mov
inc
nop
fdivl
mov
rclb
popf
int3
inc
push
mov
ret
xchg
xlat
bound
push
or
mov
fcoml
dec
xor
pop
push
pop
sarl
pop
mov
sbb
mov
cmc
inc
ret
dec
xchg
mov
aad
lods
or
aam
sub
loope
jne
mov
add
pop
xchg
push
repnz
push
test
ljmp
les
inc
call
fsts
outsl
lds
ljmp
arpl
lock
jecxz
loope
inc
dec
cld
or
jnp
dec
pop
inc
int
aas
mov
popf
jb
jo
jbe
xchg
adc
shlb
aam
push
xor
adc
mov
inc
cmp
std
cli
scas
sub
lea
jge
in
nop
sub
pusha
xor
rcrb
loope
push
add
pop
jb
jno
outsb
inc
dec
jl
xchg
fs
iret
sar
lods
es
arpl
mov
cmc
sahf
jns
mov
je
loopne
mov
fbld
fs
lods
cmpl
sub
push
int3
push
cmp
sar
sub
and
test
call
add
aas
jbe
push
dec
jbe
jo
ficoms
loope
dec
fs
add
pop
xchg
adc
lret
xchg
aaa
fnstsw
pop
adc
adc
icebp
mov
and
cmp
sub
add
add
push
int
mov
cmp
pop
daa
inc
loope
inc
dec
push
or
scas
jecxz
aam
sub
das
jg
dec
stc
jno
lods
ljmp
adc
outsb
dec
cmp
repz
popa
jecxz
mov
xor
xchg
mov
call
jl
xchg
repnz
or
mov
daa
sub
clc
fwait
jle
mov
arpl
mov
pusha
insb
pop
fs
xchg
pop
int
mov
out
nop
mov
jl
dec
lods
jne
fcomps
push
cmp
push
iret
nop
inc
and
jno
icebp
iret
lahf
mov
dec
clc
pop
mov
xchg
xchg
ret
sub
pop
out
cmp
xchg
pop
ja
dec
in
iret
adc
imul
arpl
mov
movsb
int
cld
js
daa
dec
adc
jbe
in
insb
pop
sub
jge
or
mov
sbb
pop
cmp
scas
ljmp
sub
adc
in
xchg
cmp
addr16
add
pushf
xchg
fsts
push
adc
es
mov
pop
clc
pop
push
mov
add
and
in
jge
daa
dec
movsb
hlt
add
sub
fnsave
mov
mov
jl
movsb
fs
sbb
adc
rep
rorl
cmpsb
leave
xor
stos
jnp
lds
dec
lahf
sarb
dec
jecxz
add
mov
sbb
imul
push
iret
nop
and
cmc
push
lahf
pop
scas
sbb
jmp
and
inc
js
gs
push
jb
xchg
lods
add
out
or
push
adc
mov
push
sbbb
adc
xor
loope
fcomp
jne
mov
xor
and
inc
aam
sbb
fs
enter
test
out
fidivrl
jnp
outsl
fs
pop
je
je
std
imul
jnp
jns
lret
pop
test
pop
iret
sahf
test
inc
iret
ret
cmc
mov
jge
idiv
or
gs
adc
cli
jecxz
aaa
loopne
mov
inc
fdivl
movsl
push
rolb
adc
dec
gs
dec
push
roll
adc
and
ret
mov
mov
shrb
insl
rcll
ljmp
rcrb
js
push
push
jp
rcll
testl
xchg
or
test
push
mov
mov
or
imul
cmp
cwtl
imul
mov
popa
add
mov
mov
and
push
sarl
inc
stos
lcall
or
mov
mov
into
or
sarl
jmp
push
adc
and
sbb
roll
adc
fmul
mov
popf
cmp
inc
sbb
push
pop
push
mov
fwait
ret
mov
sysexit
cmpsb
fisttpl
outsb
out
xchg
sub
mov
clc
push
das
add
scas
arpl
call
sub
lods
rcrl
repz
push
mov
jecxz
add
popf
xchg
data16
jl
sub
mov
and
mov
scas
dec
pop
std
andb
fwait
adc
add
xor
jge
fistl
in
les
test
mov
xor
dec
and
pop
or
and
xchg
sarb
dec
popa
xor
push
push
fsubp
arpl
repz
imul
scas
xor
xlat
jmp
mov
add
mov
repz
cwtl
mov
in
dec
mov
roll
mov
outsl
adc
add
add
lahf
mull
xchg
mov
sbbl
jae
int
fstl
xchg
inc
out
mov
cmp
lahf
pop
das
jg
xchg
lods
prefetch
or
jns
dec
aaa
loop
lea
enter
dec
lahf
stc
aaa
imul
cs
outsl
xchg
lret
xlat
lcall
mov
test
imul
mov
filds
fidivrs
push
outsl
sbb
icebp
inc
outsl
stos
jae
dec
in
iret
adc
adc
and
test
mov
lret
insb
ja
sti
insb
lahf
mov
xor
sub
dec
push
pop
iret
mov
leave
adc
cld
mov
insl
sub
gs
push
out
adc
push
ffree
jae
sub
jb
xchg
das
dec
lahf
aas
or
jb
repz
iret
ss
out
adc
and
mov
lret
bnd
ret
das
sbb
push
xor
cmpb
mov
stos
jle
iret
dec
and
int
xchg
jmp
cmc
mov
js
push
arpl
call
stos
ret
and
mov
mov
xchg
push
jb
jae
xchg
fcomps
mov
xor
and
clc
sahf
or
push
sbbl
or
add
hlt
mov
mov
test
mov
add
popf
jmp
repz
stc
mov
hlt
inc
pop
pushf
fdivr
jecxz
outsl
aad
clc
pop
in
shlb
daa
inc
movl
fwait
test
rorb
sub
add
in
out
fnstcw
pushf
sbb
int3
jae
cmc
test
adc
pop
and
push
in
fidivl
jl
push
cltd
inc
adc
pop
sahf
ds
int3
mov
arpl
jbe
mov
popa
cmp
iret
and
and
adc
jl
inc
int
jnp
js
and
fldl
sbb
mov
and
mov
adc
inc
out
lret
repz
and
xorb
lds
jns
fs
fldl
push
mov
div
mov
out
movsl
aam
jge
jne
notb
mov
repz
lret
dec
lahf
inc
fsubs
and
xchg
sub
ds
lret
xchg
lcall
inc
push
ja
out
xor
outsl
shl
push
stc
scas
mov
ffreep
mov
dec
inc
repz
mov
inc
jl
es
cld
lret
jnp
cmp
stc
loope
pop
ljmp
xor
add
mov
xor
jbe
jno
fldl
aad
sub
call
push
test
add
or
xchg
icebp
and
rcrl
popf
jb
aas
add
rcrb
mov
push
add
dec
jecxz
ljmp
popa
stc
xor
or
repz
jl
dec
jmpw
fisttps
push
push
dec
cmp
lds
cmpsb
sub
sarb
ljmp
push
jnp
mov
jp
in
mov
adc
xchg
stc
cmpsb
push
pop
cmp
aam
mov
mov
inc
adc
mov
leave
mov
fimull
pop
jmp
lret
bound
mov
ficoms
shl
or
insb
ficoms
cld
pushf
dec
push
mov
adc
cmp
in
lods
stos
mov
push
rorl
andl
lret
push
adc
push
ja
xchg
add
adc
shl
or
das
call
orl
test
mov
clc
cltd
push
adc
lret
movsl
sbb
fs
loope
jb
jae
sub
dec
test
or
ficomps
sbb
lds
add
and
fstpt
cmp
fmuls
dec
lods
adc
dec
into
xchg
ss
lods
ss
sti
adc
inc
out
add
pushf
std
fdiv
jmp
js
cmp
push
cmpsb
push
mov
jbe
sarb
ret
movsl
push
push
mov
xchg
pop
imul
mov
sub
jmp
cld
cmpsl
in
and
adc
or
xor
mov
lea
push
sub
cmp
in
mov
data16
cmp
sub
xor
jmp
loope
fnsave
sti
dec
shrl
sbb
cmpsb
pushf
add
mov
sbb
inc
sarb
imulb
movsb
arpl
mov
shlb
int3
dec
adc
fdivrs
xchg
imul
imul
fldl
dec
mov
mov
leave
sbb
sbb
jl
add
cltd
adcl
aad
jl
addr16
clc
push
sub
fists
cmpl
imul
mov
in
frstor
aaa
gs
pop
lods
adc
xor
or
push
cmp
std
xlat
scas
mov
test
mov
xor
fists
divl
in
iret
neg
iret
push
adc
pop
imul
xchg
daa
dec
adc
push
cmp
fs
inc
xor
cmp
mov
loopne
insl
imul
push
int3
jo
or
mul
rorl
jo
pop
lret
popa
test
xlat
mov
movsl
gs
das
cs
ss
and
dec
pop
into
mull
sti
fidivrs
dec
mov
push
add
push
xchg
pop
pushf
cmp
ds
jl
jge
cmp
mov
in
shr
or
sti
in
fbstp
xchg
int
add
xchg
xor
jp
outsb
shll
mov
push
jp
dec
pop
ret
mov
lea
decb
mov
fstps
or
jmp
notb
es
rcrb
xchg
fmull
and
add
mov
sbb
xchg
and
cmpsl
pop
xchg
push
adc
ja
sbb
or
jo
nop
aad
aad
push
inc
cmp
sbb
aas
jae
sarb
out
fxam
loope
jb
dec
cs
adcb
imul
call
pop
mov
cld
data16
jo
ja
add
mov
je
mov
shrb
xchg
fbld
fsubr
xlat
andb
mov
fists
clc
pop
sarl
sub
sbb
jnp
add
xchg
xor
mov
sub
daa
aad
into
and
xchg
inc
aam
mov
lahf
adc
int3
in
lods
cmp
jle
out
in
dec
jp
dec
pushf
ljmp
je
jg
and
es
int3
push
sub
ss
lahf
divl
jnp
inc
xchg
jle
cmp
xor
sub
cmc
cmpsb
test
out
fdivrp
xor
push
fs
dec
and
out
jbe
sub
lret
sub
lock
sub
push
pop
xchg
jmp
xchg
imul
cmc
cmc
popa
sbb
and
cmpsl
je
jecxz
or
dec
test
adc
jb
jno
mov
lret
add
cmp
es
pop
adc
enter
mov
addb
push
mov
adc
jp
cs
adcl
adc
adc
jae
aam
push
subl
xchg
jg
mov
outsb
jae
push
in
add
dec
fisttps
lcall
and
insb
hlt
mov
cmp
cmp
fistpll
iret
jns
in
sbb
lret
xchg
sub
sub
jg
mov
xchg
movsb
lahf
xor
stos
mov
dec
mov
aam
pop
mov
repz
in
mov
push
popf
ss
shr
pop
jb
ficompl
ss
movl
inc
xchg
clc
jns
imull
mov
ficoms
out
es
cwtl
xchg
mov
cmp
js
ret
mov
pop
out
outsb
mov
inc
mov
xchg
fistps
jno
mov
out
push
or
into
cmp
sub
pusha
xchg
cmpsl
jne
adc
jne
inc
popf
or
jbe
sbb
or
lret
inc
fidivs
push
cmp
adc
ud1
and
fiaddl
inc
mov
adc
pusha
stos
adc
pop
mov
mov
mov
nop
mov
lds
pusha
push
adc
mov
xor
jge,pt
mov
push
mov
dec
mov
cmp
cltd
dec
inc
lahf
cmp
adc
cld
sbb
leave
rorl
lcall
jp
test
je
push
adc
dec
ja
jno
push
lods
mov
stos
repz
jbe
pop
insb
aad
ja
cs
std
nop
fimuls
xor
add
lret
cmc
repnz
fnstsw
xor
inc
xlat
add
jle
mov
jns
lret
cmp
mov
xor
aaa
sub
push
push
in
fbstp
push
aas
nop
int3
jge
imul
jae
leave
fidivl
je
pop
fcoml
dec
jle
shlb
sbb
nop
push
dec
adc
icebp
push
stc
lret
loop
call
jb
mov
loopne
rcr
xchg
clc
jl
bound
cmp
shl
repnz
ret
and
mov
enter
aam
cwtl
jmp
loopne
testl
jl
inc
out
les
jl
mov
fsub
arpl
inc
xchg
sarb
js
sti
add
gs
notb
adc
es
fcoml
testb
add
cmpsb
jmp
mov
fwait
xchg
mov
lcall
outsb
xchg
add
fadds
mov
mov
mov
ds
pushf
mov
js
cmp
jne
rcr
imulb
add
mov
inc
mov
pop
mov
sub
scas
es
testl
xchg
lcall
icebp
add
push
stos
leave
adc
xorl
ljmp
lock
insl
pop
mov
xchg
lahf
andl
mov
xchg
les
mov
add
sub
jmp
sbb
rolb
negb
sbb
push
adc
xchg
push
scas
pop
cld
xchg
jle
and
cmp
cwtl
pop
push
imul
jae
cmp
mov
fs
push
adc
cmp
sbb
outsb
pop
out
mov
addb
loope
fs
adc
mov
shrl
lret
insb
in
es
pop
cmpsb
xor
lds
lret
and
lds
dec
add
scas
jle
mov
daa
mov
test
xor
pop
shll
js
dec
mov
and
mov
jmp
in
jne
dec
inc
adc
ds
ss
lret
leave
test
sahf
sub
push
dec
or
adc
or
dec
push
pop
arpl
scas
lret
insb
mov
in
adc
mov
iret
orl
adc
pop
test
fimuls
xchg
movsb
mov
jg
mov
mov
aas
cmpsl
aaa
pop
mov
jg
jmp
test
das
add
dec
mov
imul
cmp
pop
add
lods
std
popf
shlb
add
xchg
sbb
jb
xchg
loope
outsl
jno
out
xlat
lea
loope
clc
pop
mov
dec
fwait
inc
ret
rol
cltd
mov
pop
call
shl
jl
and
jns
pop
mov
das
push
repz
ret
das
lret
push
mov
divb
aas
lcall
pop
push
imul
cmp
sbb
fwait
mov
out
or
out
lea
aad
pop
repnz
inc
adc
push
mov
or
adc
jno
mov
out
push
iret
pop
mov
mov
mov
or
jb
ret
lret
push
outsl
insl
jo
push
mov
mov
nop
out
cwtl
mov
or
rep
pop
cmp
jl
push
cld
jno
rcll
xorb
in
lahf
lods
xorl
and
insl
xor
pushf
pop
sub
pop
addr16
xchg
insb
inc
xchg
fcomps
xchg
mov
insb
or
cld
jns
ja
stc
mov
sub
inc
dec
out
add
mov
clc
scas
js
mov
out
lea
adc
push
fnstsw
mov
leave
lret
jmp
jb
ss
jl
push
or
inc
mov
sbb
lods
adc
xchg
in
jae
sbb
xchg
mov
scas
jge
and
clc
pop
mov
out
jns
fcomps
fmul
arpl
pop
lock
loopne
adc
sub
andl
iret
out
fildl
test
repz
or
or
mov
outsl
mov
xchg
adc
enter
sete
repnz
outsb
aaa
out
ljmp
dec
jbe
mov
stos
adc
arpl
inc
adc
mov
fstpl
cwtl
out
jno
rcll
js
int
pop
in
pushf
test
xchg
add
clc
pop
push
repz
sbb
mov
xor
mov
pop
xchg
int3
xor
mov
jae
sub
mov
xor
lods
aas
dec
lahf
xchg
repz
xor
sub
adc
jo
stos
out
and
cld
jg
sbb
push
lds
sub
jo
orl
cli
mov
repnz
mov
cld
sub
jg
push
bsf
jecxz
push
popf
xchg
lds
cmp
bound
test
xor
mulb
adc
jge
mov
sub
idivb
call
cld
pop
jp
xchg
cmp
and
jecxz
adc
fst
dec
daa
adcl
andl
inc
mov
sub
pushl
jp,pn
rcl
sbb
iret
enter
daa
push
push
stc
sub
icebp
cmpsl
cmpsl
cmpsl
repz
add
ds
jns
cmpsb
push
sub
cltd
jne
cmp
lods
add
nop
sub
dec
and
push
mov
cwtl
push
push
ds
lahf
and
mov
pop
push
sar
divb
pop
inc
stos
push
stos
and
jmp
jae
repnz
imul
sbb
inc
or
dec
imul
mov
lods
repz
mov
add
push
adc
mov
pop
mulb
xchg
xor
sahf
mov
pushf
aad
adc
popf
test
adc
push
adc
mov
lcall
aaa
cmpsb
dec
jmp
outsl
sub
pop
stos
cs
hlt
sbb
aad
adc
inc
es
sbb
adc
mov
cmp
pusha
push
adc
pusha
push
adc
push
decl
xor
clc
icebp
imul
invd
adc
out
mov
or
xor
jge
jmp
pusha
mov
push
lea
sub
ds
in
mov
mov
jp
mov
push
xlat
mov
fcomip
addr16
jno
mov
imul
pop
jb
mov
ja
jns
xchg
inc
sahf
std
pop
out
jecxz
mov
sub
mov
add
and
fcoms
push
adc
lahf
mov
push
mov
xchg
leave
jns
in
sbb
and
dec
aam
lahf
mov
outsb
iret
adc
jle
lcall
scas
push
icebp
mov
aad
movsl
pop
sar
shl
or
std
idiv
jl
sub
popf
sti
andl
cmpsl
mov
cmp
pop
inc
sahf
inc
jbe
adc
xor
pop
jo
out
jl
lock
scas
pop
mov
mov
or
dec
pop
add
cmp
icebp
addl
mov
pop
out
cmpsb
mov
mov
icebp
js
daa
jp
addb
mov
out
scas
faddp
push
mov
dec
adc
jns
pop
cmp
jb
mov
mov
dec
or
out
push
dec
lock
push
out
addr16
dec
adc
insb
push
pop
pusha
dec
jb
cli
push
inc
rolb
cmpl
push
adc
xor
jle
sbb
lods
jae
lret
sbb
xchg
push
inc
decl
push
lock
mov
es
mov
movsb
or
push
xorl
ljmp
and
dec
or
mov
lock
pop
ret
push
jbe
cmc
stos
or
js
subb
pop
pop
jno
fnsave
sub
xchg
mov
mov
adc
testl
or
adc
mov
mov
push
sbb
lret
jg
adc
test
fldt
cmp
jbe
pop
jmp
push
xchg
or
cmpsl
loope
outsb
ja
rcrb
push
push
bound
frstor
sub
push
test
hlt
xor
fwait
cmp
in
xor
jno
ljmp
mov
jae
push
adc
inc
loop
insl
imull
inc
int3
cmpsl
lahf
jge
adc
pop
fmuls
pop
pusha
push
insl
sbb
dec
jp
dec
xchg
stc
xchg
out
lret
cmp
push
and
mov
and
rorl
and
sbb
imul
loopne
in
cmp
pop
fnsave
dec
and
repz
flds
mov
in
and
aad
and
out
and
or
rolb
inc
movsl
adc
daa
xor
and
push
inc
jo
aaa
dec
push
mov
cmp
lret
sub
pop
jb
dec
jmp
cmpsb
sub
icebp
jo
call
mov
movsb
neg
xchg
adc
xorl
jnp
loope
xchg
in
in
mov
insb
hlt
call
or
cmp
mov
push
push
test
adc
popf
call
es
dec
movsb
jg
imul
iret
sbb
adc
shr
jae
mov
je
jp
pop
ja
or
gs
lcall
sbb
mov
add
mov
fimuls
pop
push
xor
pop
fcomp
xchg
lods
or
shlb
jmp
mov
or
clc
add
fsts
push
push
inc
in
or
arpl
mov
mov
test
jge
sbb
xchg
je
sub
jg
cltd
jo
sub
daa
xchg
stc
pop
ss
cmp
pop
mov
mov
xchg
clc
aad
lahf
data16
jp
out
xchg
cmpsb
fwait
xor
xor
xor
dec
mov
push
adc
enter
adc
lret
iret
in
fnsave
xor
or
push
xor
sub
movsb
lea
push
jbe
mov
jl
push
mov
cmpb
cmp
jle
out
mov
adc
cmp
cmp
aad
adc
das
jbe
mov
mov
adc
pusha
add
cwtl
inc
notb
lock
pop
lret
sbb
ljmp
mov
xchg
aad
enter
push
mov
lock
push
in
inc
jmp
je
dec
jl
sub
xlat
xchg
dec
je
aaa
adc
push
jmp
jp
stos
in
push
dec
ljmp
call
xor
hlt
inc
cmp
pop
mov
xchg
std
aam
mov
cmp
pop
push
xchg
mov
hlt
mov
aaa
sahf
dec
adc
mov
aad
and
shll
push
leave
push
loopne
imul
cmp
sar
andl
xor
ja
clc
ljmp
gs
pop
sbb
shl
jg
pop
in
fwait
dec
push
push
push
adc
jbe
sub
mov
sbb
mov
jp
data16
xchg
hlt
sbb
adc
idivl
and
shll
mov
popa
mov
pop
inc
push
lock
ja
dec
pop
jb
icebp
bound
lcall
into
ja
movb
stos
jae
ret
cmp
lret
inc
cmp
int
xchg
and
mov
out
arpl
or
test
xchg
es
dec
fs
jp
mov
mov
dec
gs
dec
mov
test
es
test
fmul
mov
cwtl
xchg
les
pop
dec
mov
pusha
movsl
or
add
dec
push
pop
pusha
sti
nop
out
jb
xchg
icebp
sbb
jnp
shlb
data16
cmp
jle
sub
xlat
mov
mov
add
jmp
fsubrp
hlt
scas
pop
pushf
out
addb
fiadds
pop
xchg
gs
mov
mov
cmc
and
fimull
ss
sub
outsb
xchg
add
jo
loop
aad
and
loop
sub
push
jbe
lcall
sbb
scas
testb
leave
or
notl
add
enter
je
fsubp
mov
sub
out
fiadds
and
roll
test
test
test
mov
pop
push
pop
pop
fldl
nop
mov
movsl
jle
add
add
mov
cwtl
sahf
leave
jge
cli
mov
pop
pop
mov
lret
sub
loopne
mov
std
js
test
in
jmp
lret
and
mov
or
imul
jo
pop
lods
repz
mov
jle
mov
mov
int
cmp
fadd
loope
loop
lods
dec
icebp
or
xchg
ficoms
das
ss
imul
mov
cmc
sbb
dec
fidivrs
push
mov
mov
cmp
pop
les
cld
adc
xor
jnp
int
dec
mov
sahf
subl
aam
or
mov
add
push
loope
lcall
lahf
and
aas
nop
test
xchg
push
addr16
fadds
rcl
rcrb
fs
aad
add
inc
outsl
negb
jo
sbb
ss
mov
mov
adc
sbb
jo
jnp
dec
je
scas
mov
jns
jcxz,pt
push
push
push
xchg
es
mov
xchg
cmpsl
movsl
and
cmpsb
insb
and
push
sarl
inc
in
test
outsl
and
movsb
stos
insb
sub
rcl
adc
pop
orb
sub
mov
inc
mov
daa
mov
pop
sbb
imul
ljmp
mov
call
xchg
int3
mov
lods
js
sahf
leave
mov
jbe
repnz
mov
aas
repz
test
fcmovnb
pusha
sti
push
int3
jnp
push
cmp
mov
and
push
fstpt
rcl
cmpsl
xchg
adc
test
xor
js
dec
pop
sub
rcrl
mov
add
in
pop
negl
pop
aam
test
adc
lock
sub
inc
mov
stos
mov
or
sbb
mov
fmul
sub
pusha
dec
jne
cmp
sub
sahf
leave
pop
int
stc
insb
repnz
push
push
pop
jp
std
jb
or
xor
decl
jg
imulb
pushf
dec
and
je
sub
sbb
cmp
popf
out
push
cld
jno
adc
popf
jmp
pop
add
inc
fwait
adc
lahf
mov
clc
jae
mov
adc
sbb
inc
testl
fstl
icebp
cmp
pop
inc
jbe
repz
xor
xchg
test
xor
icebp
scas
inc
cmc
rcr
pop
pop
cmp
adc
pop
adc
stos
in
stc
aad
inc
ss
and
mov
jle
jno
or
lret
mov
lea
xor
xor
dec
pop
jne
sbb
jb
loopne
aaa
adc
daa
fcoml
or
iret
mov
dec
sub
fwait
ds
scas
sub
outsb
push
adc
or
xchg
push
and
dec
dec
lcall
xchg
push
mov
adc
pop
adc
int
int
dec
loop
adc
mov
pop
nop
pop
repnz
out
mov
jecxz
ds
pop
push
jg
pop
or
je
ret
hlt
in
or
or
cli
movb
insb
push
mov
jecxz
outsb
std
xor
cmp
mov
jb
sub
fidivrs
xchg
bound
clc
and
mov
rclb
jnp
cmp
push
cmp
jbe
cwtl
lods
inc
xadd
sbb
pusha
fs
xchg
aas
xchg
in
or
ret
sbb
xor
and
mov
stc
scas
jle
call
jns
clc
sub
push
jmp
adc
out
sub
lcall
rep
aam
jno
mov
insl
ret
dec
and
or
cmp
pop
setge
jmp
jg
ja
sahf
mov
std
cmpsb
xorl
lea
in
cmp
cli
out
imul
sub
cld
pusha
je
es
add
push
test
jmp
int
out
xor
push
aad
dec
cmc
scas
mov
fwait
aad
shl
jmp
pusha
out
push
ret
mov
loope
xor
imull
ret
or
mov
ffree
sti
push
bound
lret
negl
les
pop
mov
pushf
stos
cmc
xchg
mov
or
fsubs
lods
ror
xchg
pop
idiv
lds
inc
fdivrs
mov
lea
xchg
adc
xchg
pop
push
stc
or
inc
aas
jle
pop
pop
pop
push
aad
addr16
enter
jecxz
or
inc
punpcklwd
outsl
fsubrp
ds
cmpsl
jbe
dec
and
outsb
or
sbb
pop
jbe
jno
call
ret
xchg
inc
in
inc
lahf
in
jp
js
jb
lods
push
aas
fbstp
jb
dec
sti
in
push
mov
testl
sub
stc
cwtl
std
imul
test
fwait
ss
pusha
pop
sahf
insb
xchg
cmp
out
adc
lea
out
jp
mov
fstps
repnz
push
ljmp
das
xchg
mov
or
jge,pt
xor
cmp
adc
pop
pop
and
mov
sbb
in
or
les
xor
cmp
inc
test
and
ja
rorb
sbb
jp
insl
ljmp
adc
ljmp
ljmp
inc
push
outsb
sub
mov
cmpsl
aad
lock
loop
adc
sbb
adc
jp
loope
mov
xchg
out
test
call
push
stos
pop
sbb
adc
jp
mov
xchg
int3
push
data16
add
sahf
mov
pop
ss
mov
pop
push
sbb
jp
stos
sti
addr16
ds
jl
sbb
gs
addr16
mov
mov
push
clc
adc
ja
push
mov
cmc
scas
pop
ss
gs
aad
fistpll
mov
mov
and
test
add
in
lods
add
out
lds
hlt
xor
aad
xor
cmp
xor
shlb
sbb
fidivrl
and
outsl
push
dec
pop
repz
and
hlt
loope
fistpll
cmc
jno
lret
mov
cmpsl
inc
divb
inc
fcom
fldcw
jns
mov
mov
mov
jb
shll
inc
mov
mov
xor
and
push
aaa
sti
mov
mov
outsb
test
add
scas
test
movsl
xor
adc
fldt
or
xchg
pop
mov
cmpl
insl
in
mov
faddp
mov
add
pop
pop
lahf
cmp
mov
stc
sbb
js
cmp
dec
sbb
test
lock
push
fld
aad
sbb
cmpsb
out
mov
dec
bound
andb
or
push
movsl
in
insl
adc
adc
inc
enter
daa
adc
cmp
mov
outsb
popf
das
cltd
ljmp
and
or
xorl
xchg
and
fwait
int
outsb
push
xchg
dec
aaa
pop
mov
cmc
xlat
es
ret
cmp
test
loopne
sbb
xchg
xchg
ds
jl
xorb
sub
js
bound
add
ficoml
push
jp
xchg
mov
push
push
call
inc
xchg
xor
icebp
test
int
std
rcr
inc
pop
adc
in
loopne
lret
cmp
fwait
push
hlt
sub
repnz
or
sub
nop
repnz
scas
mov
adc
xchg
add
scas
outsl
aas
dec
sbbl
xchg
mov
int3
repz
pop
loope
xlat
out
enter
dec
insb
stc
sub
pop
jecxz
push
xchg
ret
bound
sub
in
inc
ljmp
iret
jae
test
imul
call
scas
lahf
je
cmp
xchg
jae
imul
pop
sub
and
imul
mov
dec
sbbl
pop
out
mov
xchg
cld
jmp
push
aas
adc
ret
pop
lods
mov
movsl
xor
adc
dec
mov
pop
lret
mov
mov
das
jbe
jo
fdiv
sub
ds
lret
cs
xor
ret
and
fadds
bound
outsb
sbbb
cmp
mov
dec
cmpsl
movsl
xor
adc
push
jns
dec
repz
popf
rolb
mov
inc
mov
xchg
sbb
adc
adc
and
cmpsb
and
jecxz
jg
fnstenv
inc
lahf
xchg
addr16
jge
jl
aad
cmp
push
lret
aas
cwtl
rorl
lds
mov
shl
or
jge,pt
ds
adc
dec
jp
mov
int3
cli
ret
jle
xor
xchg
mov
cmp
mov
push
mov
jno
mov
nop
mov
stc
mov
xor
je
and
mov
and
fwait
inc
sub
xor
stc
repz
mov
xchg
notl
test
mov
test
ss
lods
or
xor
add
cli
and
gs
mov
cmp
dec
fwait
inc
das
int3
pop
sub
aas
lods
js
sahf
sbb
cmp
cmpsb
filds
cmc
xchg
addr16
mov
sbb
das
jg
movntq
mov
sti
idivl
jle
mov
adc
leave
lods
mov
stc
jb
dec
lahf
jge,pt
jl
aad
mov
jae
fnsave
int3
cli
ret
jle
cmp
into
sahf
outsb
divl
mov
mov
mov
outsl
hlt
mov
sbb
mov
jbe
pop
inc
or
sbb
jnp
sbb
je
xor
rcll
std
movsb
arpl
in
lock
mov
rcr
fdivl
aaa
sti
jmp
sbb
and
shll
pop
mov
inc
jecxz
xchg
loop
xchg
xor
jnp
mov
out
cmpsb
dec
out
sbb
icebp
mov
or
rcr
mov
xlat
movsl
add
lret
sar
xchg
shrb
je
push
mov
lds
loope
dec
lock
dec
pop
loopne
rol
pop
adc
lds
leave
mov
xlat
lods
filds
adc
out
xor
pop
or
pop
mov
dec
cmp
adc
mov
ss
pop
adc
loopne
js
add
mov
pushf
insb
mov
ret
dec
adc
pop
adc
dec
shl
mov
add
js
pop
adc
pop
sub
inc
mov
pop
adc
add
jno
mov
test
pop
adc
imull
repz
mov
pop
adc
adc
ljmp
jp
and
pop
out
cmp
jl
pop
adc
push
loop
adc
xor
add
clc
pop
adc
push
fcmovnb
mov
je
pop
adc
sbb
shrl
and
add
and
mov
lret
add
add
adc
cmpsb
dec
inc
das
jl
add
sub
pop
adc
mov
sbb
jne
mov
out
adc
fmull
push
sub
pop
adc
mov
adc
adc
pop
notl
xchg
repnz
mov
adc
sbb
mov
cltd
cmp
mov
xor
jbe
scas
movsb
jmp
adc
sbb
jle
rcll
lock
adc
push
clc
jmp
call
aaa
mov
inc
aad
cs
pop
adc
lcall
iret
int3
mov
jmp
mov
xor
adc
movsl
outsl
cmpsb
fildll
icebp
jmp
adc
inc
or
jae
nop
outsb
jmp
add
push
inc
sbb
mov
outsb
or
fwait
call
fmull
lods
dec
push
jge
and
pop
sbb
cmc
das
cld
insb
sbb
dec
roll
fsubrs
jl
mov
cmp
mov
rclb
paddw
lcall
cmp
out
loope
push
adc
int
mov
call
mov
xchg
inc
shrb
int3
out
outsb
mov
js
lret
je
cmp
mov
aas
jnp
inc
test
test
outsl
daa
and
adc
jge
mulb
push
pop
daa
inc
jns
xchg
addr16
inc
add
daa
dec
lahf
aas
cmc
mov
js
xchg
ja
mov
mull
pop
mov
push
adc
out
mov
sarb
add
mov
fdivs
xor
jge
mov
and
bound
clc
jo
xor
inc
mov
lds
ss
inc
mov
fidivl
jo
out
lahf
divb
popf
mov
scas
pop
je
repnz
popa
add
push
adc
push
insb
jle,pt
cld
xor
or
aas
sub
or
fidivrl
jbe
push
or
gs
neg
dec
adc
xchg
or
push
push
adc
adc
mov
mov
xor
ss
mov
cmp
arpl
iret
lahf
mov
adc
fdivrl
movsl
imul
movsb
fwait
insb
cmc
mov
mov
jno
jmp
mov
pop
in
sub
sbb
leave
xchg
mov
mov
sbb
ret
enter
data16
xchg
push
pop
mov
cmp
ljmp
mov
movsb
mov
push
sarb
jl
hlt
fcoml
mov
dec
loope
popf
inc
fsubrs
lret
nop
add
xchg
fnstcw
ljmp
lods
dec
inc
cmp
rorl
xor
loopne
cmp
xchg
sub
sahf
repz
xor
mov
push
mov
jbe
and
pushf
dec
in
pop
test
sbb
pop
rorl
sub
rcr
test
jnp
xchg
fbld
pop
sbb
sbb
leave
shrl
test
aas
add
push
adc
loopne
repz
repnz
sbb
ja
sar
adc
test
xlat
and
inc
add
je
stos
test
out
cmp
push
cld
push
or
inc
sub
mov
xchg
inc
sbb
in
add
push
xchg
push
mov
out
test
loope
add
jnp
fadd
into
outsl
cmpsl
jmp
and
inc
je
ficoms
or
mov
sub
fcom
push
adc
and
dec
cmp
xchg
test
jmp
cmp
aad
adc
aas
ficoms
inc
out
lods
mov
xlat
mov
mov
fistps
mov
je
pop
adc
mov
jmp
mov
sarb
sub
xlat
je
mov
sub
in
xor
lds
ja
ljmp
popa
notl
addr16
pop
xchg
add
mov
cs
aad
negl
pop
cld
movsb
shll
ficoml
pop
fnstenv
das
cld
dec
lock
fs
xor
sub
or
pop
aad
dec
fisubs
aaa
push
inc
xorl
bound
lods
mov
or
inc
dec
outsl
cs
jbe
int
clc
and
adc
jecxz
imulb
cwtl
movsb
xor
push
stos
loope
enter
push
pop
add
dec
jns
mov
or
adc
jp
mov
dec
sub
pop
xor
arpl
mov
jge
insb
leave
pop
je
mov
clc
sub
mov
xchg
shl
mov
subl
stos
inc
dec
sub
cmp
mov
mov
and
mov
mov
fnstsw
bound
test
mov
ja
xor
adc
in
sub
mov
mov
dec
scas
adc
mov
mov
mov
adc
fisubs
inc
pop
adc
and
mov
jge
pop
negl
ja
inc
add
cltd
sbb
and
and
std
lock
inc
aad
ret
or
jb
outsb
lcall
pop
inc
gs
aad
pop
xor
push
popa
pushf
pop
xor
pop
iret
inc
scas
ret
loope
add
mov
xor
push
nop
rcll
xor
dec
jnp
mov
jns
js
test
xor
jg
out
push
cmc
pusha
inc
xlat
ret
ja,pn
sbb
jmp
cs
scas
and
sub
push
inc
out
dec
fwait
dec
push
xor
mov
btc
test
aaa
cmp
aas
ja
test
sub
jl
push
xor
stc
repz
sbb
andl
cwtl
mov
mov
daa
sbb
mov
rclb
fs
out
sub
and
sub
mov
lret
sbb
push
inc
outsb
std
mov
mov
cmp
ror
outsb
arpl
repz
xchg
jmp
xchg
mov
icebp
lret
cmpsl
and
cmp
mov
fidivs
repz
xchg
fnstenv
mov
out
std
fstpt
mov
adc
in
mov
mov
mov
bound
pop
das
dec
popf
adc
scas
neg
popa
sbb
ss
popf
dec
sub
mov
and
fmulp
popf
sbb
out
mov
fdivl
jns
nop
adc
mov
icebp
push
rcrb
mov
push
addr16
xchg
imul
repnz
sar
sbb
popf
sbb
sub
sbb
cmp
push
adc
jecxz
test
fldl
fnstenv
sub
ss
aam
inc
test
add
add
push
adc
push
lock
clc
ss
sub
orb
es
stc
daa
mov
test
pop
adc
jb
sub
loopne
loop
adc
mov
das
mov
lahf
fildll
cmp
push
push
lahf
cmp
adc
lret
notl
jns
stos
je
mov
ret
movsb
stos
adc
inc
jle
ficoml
push
add
push
adc
mov
shll
push
popf
xchg
xor
testl
lcall
cmp
push
adc
jne
jne
jb
in
jp
push
clc
insl
sbb
xor
andb
push
adc
lcall
mov
fisttpll
sub
loop
mov
js
pop
cmp
push
sub
movsb
dec
adc
lds
mov
pop
xchg
cmp
adc
mov
lock
ds
push
mov
mov
jp
imul
daa
repz
mov
ret
scas
lcall
push
inc
int3
mov
in
out
push
jge
movb
adcl
scas
add
push
adc
mov
arpl
pusha
cmpsl
push
imul
pop
sti
push
test
test
pop
adc
sub
mov
sti
ss
mov
mov
jo
cli
lret
fistps
mov
cmp
adc
dec
icebp
jnp
test
sub
adc
imulb
into
daa
add
add
push
adc
and
rcrb
pop
jbe
sbb
mov
pop
pop
daa
idiv
add
adc
cwtl
or
push
adc
fidivl
mov
div
stc
repz
push
cld
jns
dec
cmp
push
adc
sub
clc
sbb
das
sbb
daa
loop
clc
fcoms
hlt
insl
pusha
push
leave
lahf
add
push
adc
ja
cmovbe
adc
cwtl
leave
push
bound
adc
xor
test
pop
adc
lds
loop
adc
xchg
xchg
enter
push
jle
ja
pop
addl
jge
mull
pop
mov
push
adc
out
xlat
lods
push
xchg
mov
hlt
scas
dec
lods
cmpsl
mov
push
or
sbb
leave
inc
addl
adc
mov
xor
movsb
sub
repz
das
arpl
pop
pop
adc
sbb
cmp
push
adc
lock
jle
cmp
adc
mov
jne
push
insl
pop
mov
adc
sarl
ja
sti
insb
lcall
ficoms
sub
push
adc
test
cmpsl
mov
movntq
out
jbe
pop
xor
movl
xchg
cmp
push
adc
sbb
cmc
mov
adc
scas
pop
mov
mov
cmp
push
adc
xchg
cld
cli
jae
mov
mov
xchg
popa
sahf
jle
push
mov
push
hlt
mov
je
cmp
pop
pop
adc
mov
ret
cmp
push
adc
pop
jmp
js
inc
jns
push
adc
jle
add
dec
int
jae
xchg
icebp
xor
push
cmp
decb
xor
shll
mov
mov
xchg
sbb
insb
or
mov
aas
push
stc
adc
sbb
clc
outsl
xchg
iret
dec
xchg
clc
inc
push
ret
mov
and
mov
jno
inc
sbb
jle
imulb
ficoml
push
fdivp
movsb
lcall
adc
and
fistpl
push
es
mov
mov
ds
arpl
repnz
mov
and
push
jno
popa
dec
lods
xchg
mov
pop
sbb
and
sub
sbb
cmp
or
jmp
mov
icebp
xor
mov
adc
rcll
jecxz
cmp
and
out
fs
aas
bound
ljmp
pop
pop
mov
pop
add
lcall
add
push
fadd
test
pop
adc
leave
jecxz
mov
sbb
sub
mov
sub
fildl
pop
rorb
enter
fdivrs
cs
cmp
push
out
sub
ss
enter
lock
sbb
ljmp
das
rorl
xor
xor
aad
out
jmp
mov
mov
dec
and
pop
outsb
mov
or
xchg
or
dec
dec
or
jbe
adc
dec
mov
shll
push
fimull
dec
insb
cmp
fs
outsl
repnz
mov
push
jo
push
adc
adc
cmp
inc
aad
dec
fisubrs
sbb
pop
mull
cli
outsb
mov
daa
in
leave
les
cld
test
icebp
adc
dec
inc
push
xchg
mov
push
adc
add
adc
jle
mov
xor
ret
lret
rorl
push
test
jae
mov
pop
adcb
push
mov
inc
push
loop
push
push
xchg
push
in
das
inc
cmpsl
insb
lret
aaa
xor
addr16
jge
pushf
xor
adc
mov
push
das
mov
jg
lret
iret
xchg
cli
out
sub
mov
lahf
ja
mov
arpl
push
mov
pushf
mov
dec
lahf
aas
mov
scas
movsb
insb
mov
xor
cld
jl
mov
cld
in
mov
cmpsb
popa
xchg
mov
leave
mov
adc
je
lahf
adc
adc
fsubl
inc
pop
adc
scas
sar
inc
cmpsb
popa
xchg
mov
js
jne
stos
insb
mov
mov
cmpsl
jl
mov
call
mov
je
or
sub
sti
or
adc
insl
xchg
or
push
mov
pop
je
repnz
cmp
cmp
cmpsl
scas
and
adc
sub
loop
iret
jge
ret
lods
inc
jge
leave
xor
mov
jle
mov
xchg
and
jnp
movsl
stos
sub
filds
jnp
and
ret
xchg
insb
movsb
mov
xchg
xchg
pop
imul
mov
sahf
inc
ds
out
push
pushl
dec
dec
sbb
bound
pusha
add
push
jmp
mov
lock
cmp
sbb
je
cmp
fdivl
jecxz
xchg
mov
jo
ljmp
nop
push
or
mov
jo
movsl
jae
ret
popa
cmc
loop
sub
daa
stc
aam
decl
cltd
rcrl
pop
into
sub
cmp
dec
popl
ret
push
ja
repz
cmpsb
xor
adc
int
idivb
cltd
imul
push
sbb
or
sahf
in
loop
mov
movb
lret
fwait
adc
shrb
sbb
lahf
insl
pop
sub
add
adc
addl
loopne
ds
int
loop
mov
xchg
call
cmc
shrb
xor
adc
std
pop
lds
inc
mov
dec
mov
fwait
popa
jo
cmp
imul
aam
xchg
sarl
in
push
fimuls
push
cmpsb
fwait
pop
or
fidivl
push
and
sbb
sbb
fiadds
int
push
ljmp
sarl
test
cli
or
and
pop
xor
cmc
sub
mov
mov
lcall
arpl
mov
fwait
pop
sub
xchg
inc
add
push
js
insl
pop
or
shrb
in
call
sbb
mov
inc
push
jno
ss
and
ljmp
jnp
lea
scas
jae
jmp
popa
dec
push
aaa
data16
xor
or
sbb
lcall
sahf
imul
and
fcompl
adc
std
adc
xor
loope
jp
lcall
pop
insl
out
pop
pop
stc
add
cmp
push
xor
ljmp
sub
cmp
pop
fstps
aad
test
pop
sbb
adc
dec
insb
std
or
bnd
shll
sub
gs
bnd
ret
dec
sbb
inc
pop
ds
notb
xor
mov
bound
adc
xor
rol
scas
xchg
das
mov
pop
add
nop
inc
push
std
or
sahf
js
mov
mov
pop
ror
and
pusha
cmpsl
in
cmp
in
loopne
add
repnz
ficoms
inc
pop
mov
cs
mov
push
scas
jnp
mov
xchg
repnz
aas
mov
push
adc
movsb
addb
sbb
push
fs
inc
scas
xor
mov
jmp
addr16
or
adc
mov
xchg
jbe
cltd
or
inc
add
fistpl
scas
aad
adc
icebp
xchg
jg
idivb
movsb
sub
sub
jle
ja
pusha
add
jp
into
scas
pop
mov
lret
loope
fistpll
xchg
jp
jecxz
iret
in
cli
cmc
out
push
lods
fldt
mov
jmp
int3
sbb
je
std
cmp
mov
jge
mov
push
cld
jns
pop
xchg
ffree
arpl
mov
mov
mov
jp
test
sbb
or
xor
pop
in
rol
popf
pop
inc
jb
iret
nop
push
bound
bound
adc
sub
enter
mov
sub
xlat
lock
loope
nop
add
xor
cli
and
testl
popf
int
and
insl
and
movsl
movsb
jp
sbbl
mov
repz
test
scas
aad
xchg
adc
and
push
ss
daa
mov
xor
aaa
adc
xor
call
xor
inc
lock
mov
push
leave
adc
push
iret
mov
adc
fcompl
xor
mov
adc
lods
fcmovnb
mov
loope
out
add
pusha
rclb
rep
add
or
mov
mov
in
cmp
push
add
push
test
push
test
xor
dec
cwtl
mov
dec
jno
xor
adc
fwait
jmp
cld
push
cmpsl
xor
cld
imul
jge
mov
add
adc
jne
mov
sbb
fcomi
lods
movsb
adc
cmp
andb
pop
cmp
aad
daa
fs
jmp
add
xchg
xor
insl
loope
iret
ds
mov
cmp
daa
loope
inc
xor
and
bound
and
jo
je
lret
cmp
in
cmpb
addr16
xchg
pop
fidivl
push
lahf
mov
xchg
mov
push
dec
pop
sbb
cld
ja
mov
outsb
cmp
mov
add
fisubl
mov
hlt
aad
adc
inc
addr16
les
stc
jmp
mov
in
mov
push
xorl
in
gs
pop
and
aad
adc
adc
mov
fwait
dec
push
adc
push
or
fistps
rcrl
mov
ret
imul
jg
sub
xor
sub
insb
lock
pusha
push
adc
scas
fsubrl
sarl
push
inc
pusha
push
adc
insb
lds
subb
sbb
repz
push
adc
shlb
pop
adc
aas
mulb
cmpsl
pop
imul
xor
loope
jb
xchg
pop
xchg
add
repnz
outsb
fs
and
fwait
or
inc
mov
ret
test
dec
mov
subl
cmp
push
bndstx
jo
push
or
lahf
mov
insb
std
or
iret
stos
shl
aad
adc
inc
mov
incl
shlb
iret
sti
clc
repz
inc
addr16
orl
mov
add
push
adc
loop
pop
sub
test
dec
lret
lahf
lods
lret
jmp
jns
in
leave
inc
jg
pop
arpl
js
jno
cwtl
ljmp
pop
push
dec
cmp
icebp
cmpsb
lret
imul
popf
andb
pop
xor
scas
xor
cmpsl
inc
xchg
and
out
xchg
aaa
sbb
push
sbb
vcvtsi2ss
dec
in
jne
push
push
push
iret
ror
adc
push
adc
bnd
ret
cmpsl
iret
pop
cmp
nop
jmp
arpl
mov
fdivrl
sar
mov
push
adc
push
into
insb
sub
pop
pusha
jmp
push
hlt
jge
insb
mov
inc
clc
push
in
scas
fucomp
mov
outsl
repz
sbb
mov
xor
aad
pop
jno
mulb
cmp
rcrl
dec
sbb
xchg
in
jb
aas
xchg
in
cmp
nop
mov
mov
push
bound
push
xor
jge
lods
or
dec
jge
mov
repnz
imull
jecxz
sahf
aam
add
mov
nop
rorb
jb
adc
ljmp
outsl
adc
pusha
push
adc
pushf
in
push
pushl
pusha
insb
adc
je
pop
daa
sub
addb
inc
push
insb
mov
scas
push
dec
rorb
stc
es
xchg
fs
sbb
pop
jle
mov
mov
fdivrp
out
scas
pop
mov
pop
push
sub
jle
scas
js
cld
inc
mov
repz
add
sub
sub
nop
std
mov
xorb
add
cltd
sbb
jl
xor
lds
cmp
fwait
cltd
sbb
sbb
data16
cmpsl
and
call
sub
shrl
push
test
out
fdivs
movsl
xchg
lret
push
dec
lods
in
jbe
stos
es
cmp
adc
js
jmp
sti
mov
ficoml
sarb
jns
je
cli
gs
cwtl
cmp
mov
adc
sub
mov
add
fbstp
adc
rclb
iret
push
cmp
inc
jge
sahf
push
sarl
xor
xor
popf
imul
xchg
push
jbe
icebp
xchg
out
ja
xor
bound
dec
dec
out
lret
xchg
data16
out
xchg
dec
dec
out
jne
pop
jae
outsb
in
js
xor
adc
aaa
mov
adc
cmp
adc
shrb
push
mov
jno
xchg
xchg
gs
lds
jne
pop
inc
sbb
in
mov
ds
pop
daa
loopne
ja
clc
inc
or
in
push
das
in
dec
pop
lahf
or
cmp
fnstenv
call
pop
sbb
xchg
push
inc
lods
stos
leave
sbb
inc
mov
sbb
fmulp
fwait
xor
and
xchg
sbb
jb
mov
jecxz
imul
xor
sahf
lods
add
adc
stos
xchg
jo
insb
cltd
pop
or
sarb
mov
pop
push
jbe
dec
cmp
adc
adc
notl
push
and
lea
xor
adc
mov
aad
jge
outsl
or
mov
jb
lret
and
daa
out
adc
fcoms
sbb
fistpl
call
mov
cmp
push
cmp
adc
in
dec
imul
push
rolb
loopne
or
xor
outsb
xor
adc
popf
xchg
loopne
pop
adc
dec
mov
js
aam
popf
test
add
and
mov
add
adc
shll
outsb
stos
push
jnp
and
xor
inc
das
pop
dec
mov
adc
aam
add
loopne
shr
push
xchg
add
dec
sub
or
xor
call
rcrb
or
jno
adc
je
jmp
lret
sub
pop
push
arpl
cmp
rclb
fs
inc
mov
sbb
out
out
jb
hlt
mov
jmp
sub
xchg
and
movlps
arpl
nop
popl
inc
mov
xchg
sub
outsl
leave
lock
les
push
loope
adc
jno
fwait
jmp
loop
jbe
cmpsl
jecxz
dec
or
mov
sahf
ljmp
push
lock
adc
push
push
adc
push
fldl
imul
stos
add
cs
add
push
lret
roll
mov
sub
inc
sub
mov
cmpsl
call
addl
cltd
out
adc
add
data16
rcll
cmp
pop
inc
aad
xchg
rcll
mov
das
pop
jmp
inc
mov
mov
mov
outsb
fsubs
lock
push
adc
daa
jne
addb
adc
sbb
xor
pop
inc
mov
jp
add
add
aaa
lock
push
mov
fdivs
ret
mov
push
mov
out
push
aaa
imul
push
dec
int3
dec
fwait
dec
jmp
adc
mov
mov
dec
mov
adc
outsb
popf
push
push
mov
pushf
jb
and
jbe
add
mov
or
and
cmp
pop
ljmp
dec
aaa
mov
xlat
daa
jmp
imul
xor
xlat
scas
pop
ss
mov
inc
mov
fwait
aas
sarl
push
adc
jbe
jge
jne
cwtl
sbb
mov
icebp
push
fiadds
loopne
test
scas
or
add
lods
push
or
in
jno
hlt
in
ss
bound
inc
xchg
dec
and
dec
pushf
push
sbb
pop
adc
xchg
push
xlat
adc
pop
cltd
arpl
je
fidivs
pop
jl
cmc
cmc
jmp
and
mov
jo
fnstenv
scas
mov
lock
pop
adc
inc
xchg
xor
or
lahf
hlt
mov
pop
cmp
mov
xor
adc
fidivs
test
jecxz
adc
or
in
pop
adc
and
mov
inc
cmpsl
jl
pop
adc
leave
sbb
xchg
in
add
adc
mov
pop
pop
xor
adc
je
or
cld
pop
adc
or
mov
filds
adc
or
xlat
pop
adc
out
mov
call
adc
sub
mov
xchg
rolb
adc
pop
dec
aas
loop
lods
hlt
out
adc
mov
insl
loope
sti
pop
adc
jle
daa
push
lods
arpl
cli
pop
adc
jne
sub
cltd
out
enter
push
int3
mov
sub
repz
fiaddl
adc
imul
mov
ficomps
mov
adc
cli
pop
jae
and
ljmp
mov
dec
mov
fnstenv
mov
push
mov
ljmp
xlat
arpl
push
mov
mov
mov
mov
cmp
xor
mov
rcl
mov
mov
mov
adc
xchg
inc
jle
jge
jne
mov
ss
mov
mov
ss
fldt
aam
lea
mul
add
sbb
rorb
and
movnti
pushf
dec
inc
cmp
sub
add
jno
pop
and
jne
insb
mov
daa
stos
mov
gs
xchg
xchg
fcompl
bound
imul
xchg
mov
xor
mov
or
jge
jl
out
add
push
adc
repnz
dec
jnp
in
aaa
cli
adc
fldt
fmulp
pusha
xchg
mov
lock
push
adc
xchg
pop
rol
mov
pusha
in
icebp
push
pop
ret
xchg
push
mov
jmp
push
leave
std
fwait
jae
andb
fisubl
daa
out
cld
aad
adc
retw
xchg
push
inc
leave
cmpsl
push
jp
dec
xchg
ret
adc
dec
xchg
repz
jle
mov
adc
push
xor
dec
adc
out
loope
push
and
cmp
sarl
push
adc
ds
mov
sarb
sbb
dec
daa
xchg
adc
push
adc
sub
repnz
push
stos
fists
cmp
int
pusha
inc
movsb
iret
mull
lahf
jge,pt
jp
or
pop
fsubrs
and
out
mov
clc
xchg
cmpsl
or
push
adc
sbb
mov
sub
adc
sbb
dec
mov
fwait
or
imul
fnstsw
icebp
fsubrs
fistpll
mov
adc
push
ja
push
add
fwait
and
pop
adc
mov
push
sbb
mov
adc
popa
pop
shl
outsb
fcomps
jb
xchg
clc
jnp
xor
insb
push
or
xchg
dec
pushf
fbld
adc
stos
add
xlat
out
roll
insb
adcb
adc
pop
xor
dec
add
mov
mov
cmpsl
xchg
outsb
ret
jge
jl
sub
scas
pop
je
repnz
pop
dec
inc
mov
pop
adc
jo
jmp
cmp
push
inc
push
adc
adc
ljmp
and
sub
fs
adc
aas
or
pop
rcrb
loop
adc
and
pop
mov
mov
adc
movsl
insb
inc
mov
and
je
roll
inc
out
nop
fstps
cmpsb
lock
cmpsl
roll
fisubl
xchg
add
jb
jnp
add
add
push
stos
inc
cltd
lret
cs
or
mov
push
adc
outsl
outsb
int3
and
push
jp
or
cmp
jp
mov
popf
adc
xor
adc
addb
sarb
xchg
and
sarl
sub
movsb
lahf
xlat
into
mov
test
hlt
add
pop
push
ficompl
or
add
mov
pop
jns
ret
push
dec
pop
loope
add
popf
mov
inc
xchg
iret
sbb
cmp
ljmp
ds
insl
cmp
bound
adc
or
xchg
stos
xchg
sub
stc
jae
push
scas
outsl
loopne
inc
popf
xchg
adc
inc
mov
cmpsl
negb
icebp
addr16
or
testb
pusha
push
std
xlat
addr16
test
push
jge
add
loop
xchg
xor
jno
and
mov
js
icebp
sub
data16
ss
and
mov
sbb
push
ljmp
jmp
push
arpl
pushf
mov
cmpsb
push
sarb
mov
or
xchg
mov
lret
xor
insb
mov
inc
rcrb
shl
adc
push
push
jge
pusha
cs
xor
fimuls
out
pop
jle
shll
jecxz
push
lea
out
cmp
iret
scas
ficoms
mov
fwait
in
loope
lods
repz
mov
pushf
inc
push
daa
iret
mov
mov
int3
fisubs
ret
push
fdivl
insl
test
daa
cmp
inc
adc
dec
mov
in
push
mov
mov
cmpl
xor
pop
fs
xor
negl
lcall
mov
adc
dec
xor
scas
jg
sahf
xchg
je
jl
cmp
mov
jp
xchg
inc
push
adc
icebp
dec
and
adc
push
test
mov
sub
push
xor
jbe
mov
ljmp
jmp
dec
mov
pop
jle
adc
lock
test
loope
cmp
jnp
mov
ds
pusha
push
pop
xchg
mulb
outsb
popf
inc
leave
push
mov
es
sub
jp
add
mov
jp
fisubrl
and
inc
adc
aad
adc
test
pop
mov
xorl
jp
imul
jnp
xchg
pop
or
mov
push
enter
ja
pusha
add
or
pop
adc
js
xor
out
push
test
es
push
in
or
insl
push
adc
jb
adc
ficompl
xor
jne
mov
lea
into
sub
xlat
jp
mov
outsb
fadd
ror
cmc
mov
xchg
jge,pt
mull
dec
add
xor
xchg
inc
push
adc
jp
shrl
mov
out
popa
sbb
sbb
out
movsb
push
lret
inc
lahf
aas
jle
mov
lock
cmpsb
or
adc
push
outsl
push
cmp
nop
sti
pop
adc
shr
xchg
jmp
push
sbb
jp
or
ret
sar
jg
test
sbb
adc
jg
fisubrl
push
mov
sub
addb
idivl
xor
pop
adc
mov
pop
int
sub
inc
mov
adc
cmp
push
jne
xchg
and
imul
pop
shlb
sbb
out
pop
adc
jae
fadd
push
cmpsl
inc
mov
adc
ds
pop
pop
cli
pop
adc
bndstx
jge
xor
js
inc
pop
lcall
mov
repz
leave
xchg
cwtl
into
cmp
lods
xor
adc
mov
movsb
dec
pushw
cmp
mov
mov
repnz
lea
or
mov
add
pop
pop
push
call
inc
dec
fisubrl
push
xchg
and
outsl
xor
xchg
dec
ss
push
cwtl
pop
cli
add
imul
xor
lock
mov
pop
xorl
adc
stc
mov
and
mov
mov
stos
jns
mov
pushf
movsl
icebp
out
jno
flds
jnp
pusha
shlb
and
sub
jb
fimull
mov
push
nop
xchg
jbe
pushf
shlb
scas
sub
nop
lcall
adc
pusha
cmp
idivb
or
pmulhw
out
fstps
gs
add
inc
fdivrl
shl
test
lock
fdivrl
sub
adc
cmp
stos
mov
sbb
cmc
push
add
mov
jno
jge
mov
gs
sbb
call
fimull
pop
cld
push
insl
lock
cmpsb
jp
xor
aas
outsb
aad
js
out
mov
in
cmp
jge
xor
jecxz
adc
rorl
push
dec
push
jmp
stos
shlb
jp
pop
xchg
je
leave
cmpsl
sub
aas
movsl
test
adc
xor
jp
out
fistpl
xchg
mov
push
dec
rorb
sub
dec
push
mov
dec
cmpsl
ljmp
push
sahf
stos
lea
imul
xchg
inc
push
adc
sbb
add
sarb
fdivrl
loopne
mov
push
push
pop
sbb
ret
or
call
pop
sub
pop
push
push
cmp
pop
adc
adc
mov
iret
and
in
adc
jne
xor
inc
mov
adc
jnp
icebp
ljmp
pop
adc
outsb
lock
fs
xchg
inc
mov
adc
clc
rolb
sti
pop
adc
pop
jae
insl
cltd
add
scas
add
call
je
lcall
mov
push
leave
push
popa
inc
iret
mov
sub
mov
xor
pop
xchg
mulb
outsb
popf
inc
int
mov
leave
mov
mov
stos
adc
jmp
test
xchg
aad
lock
sub
xlat
push
pushf
in
push
pushl
pusha
pusha
cmc
mov
jle
sbb
sub
or
mov
je
lcall
push
call
sti
mov
cld
stc
repz
ror
adc
fdivrl
or
lock
aad
fwait
mov
xlat
in
add
lea
cmc
ds
cmp
mov
pop
mov
inc
and
sub
jo
jecxz
jb
push
cltd
out
adc
xchg
mov
adc
rorb
mov
pop
add
fadds
idivl
sar
sti
mov
lods
xchg
and
xchg
inc
fstpl
imul
xchg
test
push
iret
jnp
loope
sub
push
pop
ficomps
in
cmp
lahf
daa
lcall
add
imul
cld
jno
xchg
stos
fstp
jae
xlat
cmpsl
mov
rol
lods
push
adc
xchg
xchg
adc
sbb
not
cmpb
out
test
int3
les
cmp
mov
divl
mov
xchg
xchg
jb
stc
cltd
fnstsw
test
arpl
ret
jg
push
lret
into
shrb
inc
sub
sar
jne
xchg
roll
nop
lret
jecxz
cltd
outsl
dec
cmp
or
mov
mov
add
rclb
jbe
inc
ss
imul
fcomps
dec
out
iret
mov
pop
jmp
icebp
dec
in
jne
add
ss
cmp
lahf
int
inc
mov
push
adc
adc
pop
movsb
es
mov
pop
nop
push
jns
pop
and
out
icebp
outsl
xor
mov
inc
mov
dec
xor
xor
jo
and
jbe,pt
or
das
fisubs
and
or
cmp
loop
fdivp
dec
repz
or
fwait
scas
shll
sub
orb
sbb
pushf
inc
mov
and
xchg
std
imul
sbb
out
or
ds
pushf
adc
stc
mov
insl
rolb
dec
aam
cmp
push
adc
xchg
iret
repnz
inc
jmp
ficomps
daa
and
int
in
xchg
pop
mov
jns
sub
in
and
mov
imul
xor
push
xor
cmc
pop
sub
clc
or
pop
mov
mov
xor
in
idivb
sarb
xchg
sti
sub
jg
stos
sti
xchg
jnp
add
dec
sarb
je
fwait
repz
add
sbb
inc
push
xchg
sub
lret
cwtl
cmpsb
sub
and
mov
or
push
fistpll
sbb
popa
sub
jae
in
pop
orl
movsb
iret
dec
test
test
xchg
pushf
push
mov
ds
daa
iret
adc
mov
inc
push
xchg
push
dec
cmpb
pushl
xchg
mov
sub
es
mov
and
into
repz
int
fdivl
movsb
or
out
or
bound
out
mov
push
sbb
mov
mov
pop
pop
cmp
incb
daa
int3
stos
mov
dec
add
ljmp
add
divl
mov
test
repnz
dec
movsl
loopne
out
aas
jb,pt
fs
stc
mov
inc
dec
xor
inc
add
mov
mov
adc
sub
lods
jne
sub
addr16
jne
xor
xlat
in
push
or
mov
cwtl
aad
cmp
xchg
fmuls
dec
push
sub
xor
int3
mov
jne
or
sub
enter
rorl
rol
and
xorl
imul
inc
imulb
jmp
dec
and
mov
fs
xchg
daa
adc
std
jb
inc
data16
adc
imul
pop
push
jns
cmp
movsb
xor
enter
arpl
cmc
or
jp
and
dec
xchg
jle
sub
push
sub
cmpsb
fwait
mov
rorb
adc
xor
test
sbb
adc
scas
pop
mov
cmpsb
fs
cmpsl
and
jg
mov
leave
xor
out
adc
incb
pop
ljmp
cmp
xchg
xor
dec
pusha
mov
hlt
jae
fdivrl
mov
es
fwait
idivb
mov
cld
sbb
das
pusha
rcll
mov
push
jnp
in
push
jno
and
fdivs
ret
cmp
clc
cmc
aaa
push
jne
dec
ficoml
mov
mov
inc
popa
shl
stc
das
and
movsl
clc
add
pop
je
clc
jl
mov
js
lea
cmp
js
fxch
outsl
sub
add
stc
cmpsl
int
setg
pop
or
pop
sub
xor
scas
out
insb
xor
jbe
loopne
dec
mov
pop
sti
fs
pop
mov
dec
imul
sub
cli
inc
jmp
das
mov
jg
dec
mov
mov
lods
inc
pop
adc
rol
mov
pop
xchg
jno
adc
inc
inc
ja
add
daa
les
pop
insb
addl
pusha
jne
in
jb
mov
ficompl
add
fsubrl
pop
push
dec
mov
mov
cmp
cltd
cmp
or
ja
lret
jge
xchg
and
mov
into
das
das
push
lretw
nop
or
mov
imull
adc
dec
mov
jecxz
cmp
sbb
or
xchg
mov
scas
jne
call
mov
jge
dec
jp
dec
adc
out
mov
testb
push
mov
ret
gs
inc
outsb
test
out
xor
bound
std
push
pop
push
test
cmp
sbb
mov
jl
dec
add
jle
mov
push
sti
push
movsb
mov
int
pusha
or
enter
and
fs
ja
lret
mov
popa
xorb
aas
rcrl
adc
cmpsb
xchg
adc
popa
sub
pop
add
sub
fnsave
cwtl
xlat
lcall
leave
sub
adc
and
ret
fstpl
mov
sti
ljmp
sub
cwtl
mov
sub
mov
push
aaa
or
lcall
and
cmp
setnp
or
ss
add
jbe
sub
fs
jo
jbe
adc
dec
pop
fstl
and
aas
xorb
and
icebp
cmp
jecxz
int3
push
fdivrl
negb
xchg
divb
fmull
mov
test
dec
testl
adc
stos
xor
sti
jbe
add
daa
icebp
test
adc
mov
repz
adc
jne
xchg
adc
jmp
scas
xor
sbb
mov
cmp
aaa
xor
xor
je
aad
sub
cmp
aad
xchg
sbb
and
mov
mov
testl
pop
loop
loop
xchg
gs
fs
xchg
jl
pop
imul
lds
xchg
lods
xor
and
mov
in
fstpt
push
push
mov
out
and
rorb
push
xchg
xor
xor
pop
mov
imul
mov
and
mov
mov
sbbb
jns
pusha
cmp
mov
int
adc
insb
push
inc
pusha
dec
jbe
push
adc
xor
imul
and
mov
stc
pop
fbstp
push
sbb
adc
pusha
add
push
jmp
mov
xchg
cmpsl
adc
cmp
xchg
daa
dec
fiadds
jae
mov
push
incb
leave
cmp
fld
iret
aad
rolb
pop
add
sti
fwait
xor
sti
mov
popf
call
push
mov
ficomps
subl
mov
mov
mov
xchg
cmpsb
sahf
sbb
xchg
aad
jbe
sbb
ds
jp
and
sahf
push
mov
adc
or
and
int
cmp
jl
sbb
je
sbb
lahf
outsb
lods
movsl
pop
int
setg
dec
pop
jge
xchg
xchg
scas
imul
pop
imul
pop
push
js
ljmp
loopne
es
daa
out
scas
sbb
into
mov
movsb
cmp
ss
xor
adc
pop
inc
daa
addr16
push
cltd
push
or
loop
iret
mov
shll
popf
lahf
xor
or
iret
push
mov
outsb
add
sub
scas
cmc
jnp
xor
or
inc
mov
and
ret
or
mov
int
jo
stc
jo
pop
jmp
jg
dec
stos
mov
ss
xor
jge
int3
mulw
mov
xchg
lock
mov
std
push
cmp
cmc
mov
outsb
lcall
hlt
mov
popf
mov
cmpb
inc
loope
dec
clc
insl
pop
mov
dec
cld
jp
inc
dec
sub
inc
mov
lahf
lock
mov
dec
sti
test
neg
pop
popa
mov
mov
and
cmp
push
mov
push
adc
jl
mov
ret
in
sarb
bound
call
cmc
mov
cmp
lds
adc
xor
stc
inc
inc
pop
sbb
or
and
cmp
pop
inc
lods
jno
shrl
adc
inc
cmpsb
adc
push
sub
call
jecxz
dec
mov
pop
xchg
pusha
cmp
xor
mov
jl
or
jle
aad
pop
xor
shll
push
pop
in
cmpsl
xor
mov
insl
mov
ret
ja
push
mov
push
subb
pop
je
adc
mov
movsb
frstor
or
jnp
out
pop
sahf
in
mov
push
adc
sub
test
and
mov
ja
call
mov
popa
mov
popa
push
push
add
xchg
nop
faddl
shlb
repz
jno
mov
and
fistps
or
fidivs
mov
push
popf
or
repnz
push
push
sub
push
shlb
inc
std
divb
data16
push
push
mov
in
lcall
push
dec
mov
or
mov
ja
dec
mov
mov
out
mov
inc
xchg
ficompl
dec
in
push
mov
hlt
mov
pop
loop
ss
int
push
ljmp
push
stos
or
outsl
xchg
mov
ret
mov
adc
sub
addl
sti
mov
cld
stc
repz
ror
adc
sub
and
mov
mov
mov
and
movsb
dec
insl
jo
cli
test
scas
fbld
push
jecxz
xor
xchg
xorl
lret
mov
push
lock
addr16
mov
or
xchg
pop
dec
or
inc
fnstenv
hlt
mov
and
or
mov
outsl
cmc
xor
mov
or
jl
xor
and
mov
aas
fnsave
adc
mov
sarb
in
adc
je
jl
pop
adc
inc
xlat
mov
xchg
sbb
push
sbb
test
push
push
out
lahf
out
sbb
sub
rcrl
ss
fsubs
mov
and
stc
adc
call
jmp
daa
or
sbb
jne
cmp
xor
mov
sub
call
cltd
movsb
sar
lods
movsl
pop
cwtl
movsl
lcall
test
adc
jbe
loopne
loop
fsubrl
cmpsl
das
out
mov
and
sti
jl
dec
clc
xor
adc
divl
cmp
mov
mov
inc
pop
push
negl
xor
mov
or
jecxz
pop
shl
outsb
push
adc
out
mov
cmp
es
jns
cwtl
mov
xchg
and
adc
push
test
cmp
mov
pusha
fs
repz
xor
sbb
and
pop
sbb
sbb
outsl
xor
orl
push
inc
out
call
add
test
add
std
lods
cltd
dec
gs
pop
mov
jnp
mov
cli
inc
or
out
out
int
pop
subl
dec
mov
scas
fdivs
cmp
cmc
mov
cltd
sahf
xchg
pop
mov
adcb
aam
jb
push
cmpsb
das
cmp
lcall
in
sub
mov
rclb
jb
inc
sbb
aam
pop
push
ss
lret
cmp
fs
mov
insl
push
adc
cmp
lret
in
insb
icebp
insb
out
mov
cli
cs
in
leave
fwait
dec
in
mov
jno
xor
cmp
flds
mov
mov
sti
rcrl
dec
clc
xor
adc
sti
fcmovnu
pop
clc
or
jecxz
repnz
xchg
pop
or
xor
inc
jo
jb
xor
cmp
es
xchg
outsb
push
adc
push
xchg
and
xor
xchg
pop
add
mov
shlb
out
push
add
test
imul
divb
mov
push
subb
outsl
jnp
outsl
fcompl
aas
int3
xor
xchg
pushf
push
std
insb
bound
loopne
mov
in
cmp
adc
adc
cmpsl
gs
inc
mov
jmp
gs
or
push
xorb
lcall
or
movsb
aas
jmp
mov
jb
push
jo
vpsrlq
xorl
xchg
mov
aaa
fs
lret
xchg
mov
add
adcb
xor
orb
dec
insl
push
adc
pop
scas
sbb
divl
jns
and
sub
jecxz
out
sbb
mov
and
cmp
pop
mov
pop
xchg
ja
mov
mov
push
adc
out
scas
xchg
mov
movsb
insb
lods
in
jbe
cmp
sub
inc
push
mov
dec
cwtl
sbb
adc
inc
add
scas
sbb
cmpsl
arpl
push
mov
push
pushl
ja
jb
push
mov
lds
adc
and
xchg
sub
test
cmp
sbb
xor
pop
add
mov
xchg
push
pop
push
jno
adc
loope
enter
pop
bound
xor
dec
jo
aad
into
inc
xchg
pop
push
xor
add
dec
fwait
ss
fcomps
mov
sub
mov
int3
ja
jbe
or
outsl
daa
add
push
adc
test
jnp
lock
mov
addr16
dec
jbe
push
lea
cmp
aas
inc
mov
test
inc
loope
arpl
xchg
popa
repnz
sbb
data16
cs
mov
cltd
stos
inc
sbb
inc
aaa
aam
mov
outsb
xchg
dec
push
adc
rorb
imul
sbb
ds
jp
xor
test
or
call
in
push
sub
ds
jp
movsb
popa
rcll
dec
sti
cmp
add
xchg
pop
xor
xor
add
mov
cs
faddl
xor
adc
ret
cmpsl
call
jb
xor
xchg
or
jg
push
cmp
sbb
pop
or
ja
mov
loope
pusha
aam
insb
pusha
and
cmp
in
cmp
cmp
push
iret
stc
sahf
pop
push
cmp
pop
iret
xchg
or
cmp
pop
or
mov
fsts
pop
jle
lods
sub
mov
pusha
push
les
adc
push
int3
lcall
sbb
sub
rclb
addr16
push
fistpll
in
mov
imul
int
aas
and
test
push
test
jge
lods
out
pop
xor
lock
jbe
aas
and
pop
testb
pop
lret
sub
xchg
inc
mov
mov
xchg
push
sarw
fs
dec
cmp
push
mov
cwtl
or
nop
int
mulb
js
pop
or
stc
into
mov
out
test
testl
jmp
add
push
ret
cmpsl
push
add
and
pop
aaa
cmp
mov
xchg
inc
push
adc
mov
out
loopne
mov
push
jo
ss
fdivl
sub
adc
push
push
jnp
mov
cmp
rcrl
mov
cmc
faddl
stos
push
inc
xchg
lahf
repnz
outsl
js
sarl
loop
or
lret
loopne
pop
xchg
sub
adc
mov
jl
imul
push
out
xor
sbb
adc
shlb
dec
sbb
xchg
scas
jmp
add
dec
xchg
lahf
xchg
push
add
stc
lret
and
cwtl
lea
es
lds
adcl
popa
sti
and
int
fwait
push
fsubs
sub
inc
cmp
push
out
mov
push
adc
das
xchg
push
xor
call
cmp
add
decl
sub
es
xchg
int3
fmuls
rol
icebp
rorl
inc
jmp
out
sbbb
lret
fwait
mov
loopne
jbe
jae
push
lret
jae
xorl
adc
nop
inc
jge
jo
mov
push
mov
stos
sub
adc
addl
iret
cmpsl
xchg
ret
pushf
movntq
out
jbe
pop
xor
movl
xchg
cmp
push
adc
xor
iret
adc
jns
cmp
mov
xchg
in
sub
fwait
ss
pusha
inc
adc
cmc
mov
xchg
mov
jl
fnstenv
insl
pusha
nop
stos
mov
sti
mov
fld
imul
dec
mov
jp
and
mov
repz
flds
xlat
in
jge
push
icebp
pusha
and
daa
dec
lahf
mov
ja
imull
hlt
or
daa
jecxz
aad
mov
je
lea
cmc
hlt
jb
jecxz
fidivrs
jo
lods
mov
push
enter
cmp
pusha
mov
clc
aas
mov
into
adc
jns
mov
sbb
xor
pop
jmp
addr16
pop
and
outsl
fsubs
xchg
scas
dec
ja
push
mov
daa
push
mov
cltd
mulb
aad
fistpll
mov
mov
and
and
mov
mulb
js
pusha
shl
cld
jns
lret
mov
stos
fnsave
xor
mov
inc
loop
xchg
fs
gs
mov
sub
pusha
ret
cmpl
add
daa
sub
jo
enter
mov
xchg
in
adc
push
sti
ja
fstpl
sar
pop
cld
mov
mov
mov
jbe
out
sub
jecxz
or
jecxz
sub
ja
cmpsb
shll
sub
sbb
dec
xchg
or
xchg
rep
pop
cltd
lods
stos
or
add
inc
movsb
pop
mov
cltd
and
fsub
in
mov
pop
xchg
add
xchg
cwtl
test
mov
or
movsb
adc
daa
loopne
xor
imul
outsb
std
mov
test
leave
and
adc
sbb
js
sub
gs
sub
ja
or
cmp
push
sbb
adc
inc
push
mov
mov
and
mov
in
mov
mov
add
enter
in
mov
xor
pop
push
add
xchg
xchg
std
imul
and
or
addr16
mov
sti
dec
test
inc
sbb
dec
cmpsb
loopne
lret
enter
lock
mov
xor
push
jle
push
push
sub
sbb
fs
pop
fcmovnb
mov
mov
test
aam
daa
inc
nop
and
mov
mov
or
nop
sbb
sti
nop
xchg
inc
jle
dec
mov
mov
add
pop
cmp
push
mov
jne
lods
dec
insl
sarb
xor
fstpl
pop
and
sub
lods
fisubl
xchg
int
lcall
andl
mov
dec
xor
lods
cwtl
aad
mov
inc
pushf
mov
xor
std
pop
test
mov
sahf
dec
xchg
xchg
into
sahf
fidivl
int
pop
rcrl
mov
mov
cmp
and
add
test
mov
repz
lods
sbb
push
xor
mov
xchg
xor
pop
bnd
fs
pop
ljmp
popa
mov
and
adc
push
jae
pop
clc
pop
ja
pop
out
call
mov
pop
jecxz
into
popf
loopne
daa
mov
push
rcll
iret
popa
imul
movsl
pop
jb
out
add
pop
lds
icebp
mov
out
or
xchg
les
je
mov
movsb
shlb
mov
and
pop
shlb
xchg
lret
mov
inc
jns
mov
push
les
xchg
mov
adc
nop
xchg
sbb
adc
mov
cld
stc
repz
pop
imul
jbe
inc
mov
ss
test
add
adc
mov
lret
add
jle
inc
ja
adc
fwait
xor
int3
imul
pop
pop
add
xchg
daa
out
sarb
outsb
mov
testb
xor
mov
lds
imul
dec
lahf
push
cld
mov
adc
daa
dec
repnz
mov
es
mov
adc
fisttpl
movsb
jl
push
js
ret
int3
mov
push
ffreep
mov
test
inc
loop
mov
fidivl
mov
lea
int3
outsb
mov
xlat
ja
sub
xor
idivb
enter
arpl
adc
stos
jle
ja
mov
adc
popf
fldt
movsl
imul
movsb
mov
or
add
adc
aaa
cmp
adc
mov
es
jmp
pusha
push
sti
push
fcmovb
js
sti
adc
mov
inc
jecxz
jp
mov
iret
mov
sbb
in
cmp
mov
into
mov
inc
mov
shl
scas
jl
xor
and
mov
inc
adc
adc
lret
add
fadds
test
fs
inc
add
and
pushf
cmp
mov
jle
and
cmpb
mov
jne
int
adc
xor
add
adc
sbb
sarb
xchg
mov
xchg
cmp
push
pop
pop
xor
xor
int
add
outsb
int3
dec
imul
subl
mov
test
adc
cltd
sbb
repnz
dec
nop
push
add
and
cmp
jg
add
repz
fisubrl
cmpsl
scas
cmp
repnz
pusha
cmp
mov
dec
stc
pop
sbb
push
js
cmp
shrb
stos
push
mov
divb
inc
adc
lahf
pop
xchg
mov
xor
mov
push
mov
aas
ljmp
add
sub
push
nop
mov
loope
add
sub
rcll
dec
pop
into
cmpl
daa
pop
cmpsl
jne
adc
cmp
dec
and
repnz
push
adc
daa
loope
cmp
inc
fst
fidivl
mov
or
sub
push
adc
sbb
mov
jl
jle
outsl
test
push
adc
cltd
add
stos
dec
xchg
pop
sbb
dec
js
shlb
into
fmuls
fs
pop
mov
mov
and
fidivrl
in
out
jo
inc
pop
adc
xchg
js
ja
out
inc
sbb
out
out
jge
cs
mov
ds
jnp
in
xlat
inc
add
mov
leave
loope
insl
sbb
test
pop
dec
mov
push
jmp
push
ds
outsl
scas
movsb
scas
rcll
adc
jno
xchg
push
je
mov
int3
test
inc
gs
nop
pop
lcall
adc
dec
push
lods
ror
xlat
xchg
inc
push
adc
repnz
mov
sarb
rcl
adc
mov
call
shlb
and
add
daa
aam
pop
adc
mov
lret
push
jle
int3
js
pop
push
sarb
test
cwtl
movsl
lds
int3
out
adc
loopne
mov
pushl
sbb
pop
js
jae
sbb
or
add
pop
adc
cmpsl
addb
hlt
stos
push
mov
sbb
cmp
mov
clc
test
pop
adc
sti
je
sarl
mov
push
popa
pop
mov
jne
add
mov
bound
jge,pt
hlt
xorb
out
xchg
dec
sbb
mov
xor
fcoms
xor
stc
repz
pop
adc
or
add
mov
pop
xlat
cwtl
leave
adc
dec
ljmp
lret
je
incb
cmc
fwait
aad
cmp
push
outsb
dec
push
arpl
fcmovb
insb
inc
fdivp
int3
pop
and
mov
je
cmc
xor
pop
cli
mov
sub
jge
dec
fwait
loop
das
int3
rol
adcl
add
adc
adc
ljmp
or
insb
fmuls
flds
lock
xor
dec
cmp
in
pop
mov
addr16
inc
aas
and
nop
dec
lahf
idivb
je
lds
xor
push
pop
push
sarb
lods
cmp
mov
cwtl
adc
jb
jnp
fnstsw
movsb
out
adc
xchg
movsb
mov
xor
lahf
jge,pt
xor
fstps
cli
mov
mov
leave
adc
inc
sbb
or
aas
cmp
add
std
push
enter
dec
jnp
data16
lcall
das
stos
ja
xor
mov
mov
sbb
cmc
mov
addr16
mov
jno
add
jne
jo
jmp
sub
or
pop
pop
popa
dec
pop
faddp
aam
daa
movsb
xchg
jbe
ret
xchg
xor
mov
mov
push
fisubl
arpl
sbbl
xor
xchg
xor
sub
cli
inc
mov
cmpsl
jmp
jns
int3
ss
cs
mov
daa
dec
pop
inc
xchg
gs
push
push
cmpsl
mov
enter
repnz
out
push
pusha
sti
orl
mov
jmp
stos
jl
and
jmp
mov
mov
mov
or
lock
cld
movsl
jg
xchg
stc
cmc
jg
push
aaa
sub
adc
sbb
jge
int3
fdiv
mov
out
in
sub
pop
lods
movsb
sub
push
out
xlat
sub
push
xor
pop
sub
repnz
shll
dec
xlat
jmp
pop
outsb
mov
add
cwtl
ds
orb
sahf
pop
in
fcoml
pop
les
cmp
or
lret
xchg
out
gs
push
lea
lock
mov
loop
push
lock
dec
inc
fcmove
hlt
lahf
cmp
jge
jmp
loope
mov
cmp
cmpl
jne
popa
jg
push
sbb
xor
jp
sbb
sbb
push
fsubs
insl
push
movsb
pop
dec
insb
add
sub
in
lock
or
popa
scas
cmp
lods
outsb
sahf
mov
fimull
push
sbb
les
fcomps
stos
iret
cltd
xchg
movsb
mov
imul
xchg
mov
loope
adc
addr16
jle
divb
out
cmp
mov
cmp
xchg
inc
or
dec
mov
cmpsl
pushf
cmp
orl
adc
inc
lea
lret
push
push
xor
jmp
lods
mov
inc
add
lahf
aas
xchg
or
inc
notb
shlb
pop
std
add
xchg
fisubl
sbb
xor
push
movsb
mov
shr
call
dec
aas
mov
fistl
or
das
and
and
dec
iret
fdivrs
jae
aaa
movb
xchg
scas
and
aas
shrl
mulb
pop
fs
je
xor
inc
mov
and
cmc
ds
mov
xchg
imul
fdivl
pusha
dec
jne
cmp
mov
or
push
hlt
insb
and
repz
push
andb
pop
inc
cmovb
out
lods
mov
repz
xorl
mov
aad
mov
xlat
stc
aad
lock
pop
jb
fadd
fdivrs
xchg
outsl
xchg
pop
pop
or
xor
cmp
cmp
mov
xor
lds
adc
push
sbb
pusha
dec
jns
in
fdivrl
pop
jecxz
mov
mov
rorb
adc
cmp
pushf
cs
mov
aam
push
loopne
cli
in
popa
out
push
adc
xor
jle
adc
pop
adc
test
mov
pop
push
testl
jp
sbb
adc
xchg
jne
adc
xor
out
push
aad
je
push
fdivs
test
fnstsw
inc
xor
and
push
mov
es
repnz
sub
dec
aas
jle
jb
ss
sbb
repz
pushf
test
cmc
xor
jl
pusha
or
inc
and
stc
insl
add
loop
or
stos
orl
sub
les
jmp
idivb
sub
cmp
pop
push
push
mov
sbb
je
addl
jl
jns
jle
stos
push
popf
imul
cwtl
flds
pop
orb
sbb
data16
jnp
jle
out
inc
push
inc
mov
xchg
arpl
pop
lods
dec
add
or
or
push
sbb
fwait
pop
sar
push
test
in
mov
in
lret
movsb
out
or
shll
into
xor
xor
in
jnp
push
xor
insl
mov
mov
popa
inc
jl
test
inc
xor
fcoms
loope
int
push
int3
out
icebp
mov
push
ret
cmp
dec
or
fistpll
add
push
sbb
dec
fists
cmp
in
sub
push
add
dec
xor
daa
sbbb
pop
mov
test
cmpsl
xlat
add
int
ds
mov
nop
imul
inc
mov
ljmp
dec
pop
sub
jns
jle
pop
adc
sub
ret
adc
rcll
shrb
in
pusha
lock
cmp
movsl
add
fmulp
nop
or
sub
imul
orb
subl
add
enter
inc
push
adc
push
rclb
sub
xor
rclb
stc
xor
inc
cmp
lods
test
mov
cmpsb
mov
insb
sbb
mov
cmpsb
xor
mov
mov
dec
xchg
ret
sub
lds
mov
in
vpaddb
fdivs
addl
ss
or
cmp
jne
je
cmp
inc
mulb
sub
xchg
ret
jmp
push
ss
mov
scas
sbbl
xchg
pop
lock
stc
mov
dec
push
into
enter
sahf
xor
xchg
cmp
loop
jmp
adcl
push
bnd
iret
and
jns
pop
and
mov
xchg
jmp
pusha
xchg
sub
mov
dec
inc
mov
negb
in
icebp
aad
imul
fs
jg
jb
andb
dec
movb
mov
ljmp
popa
cmpb
leave
daa
repnz
sbb
jg
fsubr
cmp
call
orl
adc
out
mov
inc
fnstcw
xchg
adc
rcrb
mov
es
fwait
jl
fdivs
push
or
jp
roll
jne
adc
in
push
cld
insb
inc
push
or
xchg
push
adc
add
inc
shrb
sub
xor
pop
jo
popw
jnp
xor
pusha
shl
icebp
fsubs
jbe
outsb
mov
sbb
mov
test
fdivrs
xchg
xlat
outsl
add
or
xchg
xchg
mov
repz
and
jne
sub
stos
cmp
pop
xor
inc
adc
add
test
cmpsl
pop
jne
jge
shll
mov
cmc
cltd
out
lahf
test
inc
sbb
movsb
movsl
add
push
fwait
ss
push
pop
push
jns
ja
sti
mov
ja
mov
arpl
clc
or
pop
adc
xor
ja
add
push
js
cmp
mov
sti
imul
fnsave
cmp
aas
mov
mov
jnp
lds
cmc
cld
scas
or
jmp
mov
jbe
ljmp
mov
shll
sbb
cmc
hlt
jnp
loop
nop
outsl
icebp
mov
pop
and
add
idivl
out
mov
xor
cmp
clc
xchg
test
sub
scas
sbb
or
push
adc
mov
lock
popa
scas
dec
fwait
sub
or
push
repz
sbb
jno
test
or
les
sub
pop
lods
cmp
push
mov
push
es
xchg
xor
and
outsb
add
push
adc
xchg
outsb
mov
adc
jmp
hlt
movsl
data16
sub
cwtl
data16
enter
add
mov
push
mov
dec
into
popa
addl
inc
fsubrs
pop
cmpsb
rcr
ret
cmc
add
xchg
icebp
sbb
nop
add
cmp
xchg
sub
lcall
in
test
jg
fldcw
sbb
jae
inc
pop
popa
movl
jne
xchg
dec
sbb
test
daa
push
sub
ljmp
pop
xchg
lcall
mov
iret
and
adc
mov
adc
add
mov
xor
adc
adc
fistl
sub
sbb
repnz
cmpsb
mov
data16
xchg
inc
in
scas
sub
ss
adc
and
xchg
or
bound
in
arpl
pop
push
cmp
inc
lea
xchg
xchg
push
mov
pop
dec
and
or
cmp
mov
dec
aas
popa
mov
jae
je
xlat
or
ss
or
je
mov
cmpsl
and
xor
rcrl
xor
or
sbb
dec
jo
repz
sbbl
pop
push
and
movsb
fdivl
rorb
mov
dec
cmp
xor
mov
mov
push
imul
or
jmp
adc
lcall
lods
mov
jbe
mov
or
dec
mov
lea
out
jno
mov
fimuls
ljmp
sarb
mov
or
mov
neg
sti
faddl
jb
not
bound
xchg
sbb
aas
notb
pop
sbb
sbb
xor
jecxz
shlb
loop
dec
pop
sbb
inc
cmp
pop
mov
mov
inc
dec
insl
clc
adc
enter
xchg
sub
sbb
mov
jle
popf
adc
xchg
stc
out
inc
cmp
hlt
mov
insl
xor
xlat
fsubs
cltd
int
insb
ss
xlat
cmp
mov
jp
ret
adc
insl
jb
push
lcall
inc
test
stc
aas
sub
rolb
pusha
dec
insl
add
loop
push
pop
add
push
mov
leave
dec
adc
insb
adc
push
or
and
rorl
or
aas
aam
mov
cmp
rcll
inc
pushf
inc
jb
shrl
push
adc
insl
je
mov
inc
int3
jae
cmc
cmp
pop
xor
cs
repz
sub
push
xor
gs
mov
pop
xlat
jno
push
or
or
xchg
sbb
pop
aad
jae
gs
fs
xchg
out
mov
mov
jg
out
mov
mov
adc
sub
xor
sbb
mov
clc
jp
repz
pop
or
and
gs
fists
mov
mov
inc
fldt
shrl
divl
es
adc
push
lcallw
or
es
push
ljmp
xorb
add
fs
test
aaa
insl
lods
or
jne
int3
pushf
mov
call
pop
arpl
and
sti
push
jne
add
inc
push
arpl
jbe
or
mov
data16
mov
scas
xor
mov
imul
sbb
pop
ja
adc
data16
mov
mov
pop
repz
sbb
stos
or
xchg
cmp
dec
sbb
setbe
add
jns
insb
or
sbb
pop
xchg
ret
push
pop
pop
decl
mov
xchg
ret
push
in
fstps
mov
in
xlat
sbb
leave
out
mov
in
fwait
push
insb
fcomps
mov
xchg
push
mov
jns
push
and
push
jne
sbb
ljmp
rcll
jns
aad
pop
jp
lret
add
jl
jg
insb
add
or
daa
cli
cmp
loopne
pop
mov
ret
call
add
insb
and
fiaddl
divb
cwtl
icebp
mov
sti
stos
or
add
notl
das
xchg
sbb
int
fildl
jg
xchg
cmp
fwait
sbb
push
sarb
ret
repnz
or
sbb
and
out
scas
jb
loope
sub
jg
hlt
lahf
xor
mov
test
popf
inc
lods
ds
loopne
pop
and
inc
hlt
and
es
ds
cmpsb
mov
dec
cmp
adc
in
idivb
and
mov
xor
jo
pushf
cmp
or
aas
cmp
mov
gs
sub
xchg
sbb
mov
mov
stc
lods
sub
inc
aaa
mov
mov
daa
cmp
movsl
notb
out
and
jg
popf
cmpsl
cmp
not
rorl
pop
mov
imul
mov
fst
push
mov
jnp
add
mov
inc
push
addr16
and
shlb
call
pop
dec
adc
sub
mov
push
rcrl
jo
cs
rorb
xchg
pop
insl
dec
jno
sbb
das
inc
icebp
stc
adc
stos
xchg
xchg
pop
push
mov
cltd
cmpb
adc
lods
jnp
mov
and
lret
jbe
test
fadds
dec
xchg
ja
sub
outsl
push
mov
stc
roll
adc
add
xchg
repz
lds
out
xchg
movsb
xchg
and
or
pop
xor
mov
cs
xor
jmp
sub
scas
jmp
xchg
sbb
xor
sub
cli
and
jge
mov
mov
pop
jbe
xchg
int
mov
mov
jg
out
mov
mov
adc
sub
xor
sbb
mov
clc
jp
repz
pop
or
and
gs
fists
mov
mov
inc
fldt
shrl
divl
mov
push
lcallw
or
es
push
ljmp
and
addb
push
int3
gs
stos
mov
xor
ss
lods
or
jbe
iret
lahf
mov
jmp
xchg
rol
adc
fbld
push
mov
jbe
add
inc
push
pusha
dec
push
icebp
or
fists
jbe
jb
out
bnd
cltd
mov
test
insl
fdivs
mov
jp
cmp
ljmp
mov
cmpsb
add
pop
fwait
ss
push
inc
adc
outsb
add
dec
jne
nop
add
inc
sahf
addr16
dec
inc
push
out
lods
mov
mov
rolb
cli
or
xlat
and
sub
ss
adc
xor
mov
orb
shrl
xor
mov
or
cwtl
mov
mov
repz
lds
sub
aas
mov
pop
in
push
lret
dec
adc
push
fs
std
mov
cli
cmc
jmp
push
addr16
sbb
lds
daa
xchg
and
leave
test
orl
cld
lahf
xchg
or
je
mov
ss
jg
sarl
shlb
jne
pushl
and
lods
ret
lock
inc
pop
inc
mov
arpl
stos
mov
xchg
jno
inc
sbb
or
push
dec
pop
push
repz
xchg
sbb
mov
sub
jmp
nop
fs
ss
scas
or
cld
scas
sub
ja
mov
adc
pop
sti
xor
sbb
xchg
ja
es
and
dec
into
aaa
pop
jne
mov
mov
mov
xchg
jne
jl
push
clc
add
in
dec
mov
lds
cs
out
dec
xchg
add
fs
cld
pop
dec
popf
cmc
jns
in
pop
data16
jecxz
and
jno
cli
fsubl
popa
icebp
mov
sub
into
fildll
cli
pusha
jp
push
repnz
mov
out
bound
mov
push
adc
arpl
xchg
jnp
ret
daa
ss
adc
aad
jb
int
test
ret
pop
xor
cmpsb
or
es
push
sbb
mov
out
decb
cmp
add
leave
xor
sub
in
dec
stos
iret
or
sub
inc
and
vdivps
lret
pop
fwait
mov
insl
shr
sbb
cmp
repnz
or
test
and
mov
clc
shlb
es
js
dec
inc
cmp
push
mov
inc
mul
pop
add
stos
insb
mov
test
clc
dec
hlt
out
mov
jmp
xchg
sub
mov
cmp
out
int3
push
inc
lahf
ret
aas
cmp
pop
xor
mov
dec
push
popa
or
ss
adc
mov
pop
popf
mov
push
push
push
roll
sbbb
xchg
insl
ss
movsb
mov
pop
sub
mov
cmp
lods
pop
ljmp
mov
adc
sahf
xchg
mov
jno
inc
cmp
inc
sub
push
jbe
xor
cmp
pop
bound
lds
loopne
aas
pop
stc
and
jmp
nop
in
js
inc
cli
orb
sahf
fbld
cs
ret
jmp
cmpsl
cli
movl
fimull
and
cmp
pop
ljmp
mov
leave
xchg
jl
pop
xchg
ss
adc
add
jge
sbb
mov
inc
sbb
lock
push
out
jo
out
je
das
or
ret
mov
pop
adc
mov
and
mov
ds
mov
jb
xor
mov
negl
cmp
loopne
je
mov
push
hlt
jo
jmp
xlat
cs
pop
adc
push
aad
imul
aas
sub
mov
add
jo
fistl
hlt
sahf
out
test
cld
fildl
call
jecxz
out
xchg
roll
or
dec
pop
push
lock
push
addl
adc
loop
ss
mov
in
les
mov
inc
daa
ss
adc
pop
fs
pop
push
insl
mov
repnz
push
ljmp
hlt
ret
fisubs
jno
push
fidivrl
mov
and
mov
mov
mov
and
addl
popa
fwait
sbb
outsb
jl
push
imul
mov
stc
jae
in
inc
in
xor
mov
pusha
fwait
and
xchg
lret
ljmp
pop
aaa
inc
push
ss
outsl
jbe
popa
mov
and
addb
in
shr
icebp
and
cmp
xor
outsl
pushf
stos
xchg
jl
pop
lods
cmp
push
imul
dec
xchg
xor
mov
ss
adc
xchg
pop
mov
adc
push
sbb
divl
fstp
xor
nop
ss
test
xchg
fsubrl
or
hlt
jno
inc
pop
addr16
dec
mov
mov
sbb
mov
dec
ja
pop
aam
pop
sbb
stos
pop
es
dec
mov
stos
mov
sti
cmp
stos
pop
addr16
cwtl
scas
rcr
hlt
rcll
outsl
mov
mov
sbb
andl
lret
push
neg
jns
pop
jne
insl
push
rorl
inc
out
mov
cmp
sub
jae
aas
mov
push
mov
dec
and
nop
lcall
mov
cmpsb
mov
xchg
push
inc
push
inc
movsb
jae
into
pop
scas
ljmp
in
stc
mov
dec
push
and
aas
xchg
stos
repz
popa
mov
lods
inc
pop
fisttpll
or
rolb
push
adc
cmpsl
test
push
enter
insb
ss
mov
out
daa
jne
scas
gs
into
fnstenv
sbb
xor
jge
adc
js
out
mov
cmp
or
mov
adc
aad
adc
or
cwtl
mov
fidivrs
pop
mov
insb
stos
xor
mov
lock
xor
scas
sub
add
loop
mov
cmp
mov
xchg
push
push
add
inc
negb
cmp
jmp
dec
push
notl
cmpsl
lcall
cli
dec
lret
inc
lahf
cmc
and
xchg
or
js
dec
jbe
fwait
inc
adc
lods
xchg
mov
shll
mov
and
rclb
push
inc
push
xchg
inc
sub
pop
out
mov
mov
stos
jo
lods
jnp
imul
lods
jg
adc
add
cli
mov
dec
sahf
call
mov
push
or
push
jnp
cmp
fwait
test
jnp
es
mov
push
js
std
sub
mov
inc
lcall
mov
roll
aad
adc
enter
add
adc
insb
fsubs
jb
testl
xor
sub
popf
dec
or
push
ret
insb
cli
shr
rolb
pusha
mov
cwtl
stos
mov
mov
sbb
dec
and
sbbl
pusha
loope
or
clc
out
cs
mov
lret
insb
cld
lret
addl
mov
push
adc
jae
inc
mov
dec
test
jp
fstl
je
push
pop
or
cmc
add
enter
mov
pop
inc
jne
xlat
and
roll
sbb
std
cmp
sbb
iret
lahf
incb
es
clc
and
roll
test
jb
jmp
pop
rclb
jmp
sbb
mov
sti
ja
adc
mov
sahf
jp
dec
lahf
aas
inc
inc
test
xor
jae
xchg
gs
stos
imulb
xor
mov
jnp
in
push
hlt
push
addr16
out
fisubrl
testb
push
add
cmc
inc
push
lcall
inc
ljmp
xor
cltd
fimuls
aam
adc
icebp
mov
or
jbe
roll
sbb
sub
xor
movsl
sub
mov
dec
rcl
js
mov
iret
test
in
inc
and
das
sbb
pop
lret
loopne
lret
push
idivl
adc
aaa
out
adc
insb
popf
mov
jno
adc
pop
clc
fs
pusha
js
push
jle
sbb
bound
mov
dec
jo
fidivrs
movsb
sti
sbb
dec
in
jno
jne
fcmovne
sahf
or
ret
add
inc
pop
stos
xor
push
test
lds
rcll
in
fs
mov
inc
dec
fistl
sbb
adc
pop
aaa
pop
adc
cmpsb
cli
pop
sbb
cmp
mov
sub
lock
sbb
mov
jg
mov
push
arpl
sbb
insb
pop
subb
add
loopne
push
mov
div
pop
jne
insl
inc
fiadds
push
sub
cli
stos
loope
dec
mov
push
cmpsb
daa
cmp
xor
add
pop
pop
inc
dec
push
leave
nop
gs
mov
cmp
sahf
fimuls
or
xor
ljmp
lods
jo
push
xchg
sub
inc
add
sub
in
insl
cli
xorb
loop
divl
jmp
sub
out
fs
mov
cmp
mov
jae
mov
leave
xchg
inc
xchg
add
daa
cmpsb
cmp
mov
pop
xor
imul
sahf
mov
cmc
inc
jge
loope
insb
and
mov
mov
mov
sbb
ret
xchg
jle
and
xchg
ds
into
loope
out
shll
mov
pop
pushf
adc
ja
push
loope
cmp
popa
cmp
inc
cmp
aas
inc
insb
inc
pop
icebp
mov
idivl
addb
bound
cmp
andb
mov
pop
ja
repz
add
nop
jg
mov
adc
sub
sbb
xchg
pop
sbb
cmp
cld
mov
adc
imul
xor
aad
inc
ficomps
ljmpw
push
insb
xor
in
mov
cmpsl
cmp
jbe
and
pop
lds
inc
push
mov
call
cmp
mov
sbb
sarb
sbb
inc
add
xor
stc
subl
inc
mov
cwtl
xchg
and
mov
incl
push
clc
jp
add
std
or
xchg
add
mov
mov
cltd
sbb
loope
inc
mov
out
scas
or
lcall
les
nop/reserved
pop
rolb
icebp
mov
scas
pop
ss
xlat
adc
push
fiaddl
sbb
adc
stos
jp
or
sub
aas
out
inc
test
xor
loope
arpl
or
jo
fwait
xor
xchg
bnd
add
push
mov
stos
mov
mov
stos
or
sbb
push
arpl
adc
inc
rclb
jnp
leave
in
and
mov
mov
and
aaa
repz
loop
insl
mov
arpl
pop
adc
xchg
iret
pop
fdivs
cmp
mov
stos
pop
in
cmp
sbb
lea
push
sub
sub
popa
pop
mov
rolb
sbb
mov
jecxz
xchg
aas
jmp
pop
jp
sti
adc
cmpb
mov
xor
and
add
dec
out
daa
aaa
ficompl
inc
sahf
jbe
enter
shll
fwait
xor
stc
bound
into
or
and
cmp
jge
sbb
add
test
mov
adc
fstl
sbb
das
cld
mov
adc
xor
mov
shlb
add
mov
xchg
jge
ja
push
xchg
and
lahf
jge
mov
add
ret
addl
lea
add
cs
inc
bound
pusha
sbb
insl
outsb
sub
mov
bsf
xor
mov
nop
and
jns
cmp
lds
lods
or
and
pop
sbb
dec
inc
inc
adc
outsl
cld
xchg
arpl
mov
pop
mov
out
aad
xchg
jne
ret
les
pushl
or
adc
subl
lods
xchg
je
es
mov
adc
jecxz
adc
jl
scas
cmp
xchg
mov
mov
adc
mov
aam
mov
mov
out
mov
mov
aaa
stos
jl
jbe
inc
adc
jns
lods
dec
scas
push
push
hlt
leave
or
adc
stos
pushf
test
ret
dec
shl
pop
cmp
xchg
or
mov
inc
decl
ja
mov
test
jae
fdivrl
mov
xchg
in
pop
sub
mov
lds
jbe
pop
mov
out
fidivs
pop
mov
in
push
jne
mov
in
loop
mov
js
mov
sbb
inc
int3
dec
lods
das
outsl
fs
jbe
adc
cmpsl
jmp
pop
aaa
dec
mov
popa
jnp
cld
xchg
adc
add
fcom
fisttpll
dec
daa
fisttpl
leave
pop
adc
adc
test
jne
dec
out
mov
sbb
out
mov
push
dec
jle
jns
sbb
loope
xchg
sub
mov
fstpl
sbb
push
enter
jp
lods
nop
inc
push
shlb
mov
ljmp
daa
xchg
movl
in
dec
arpl
std
cwtl
test
or
or
js
aas
mov
xchg
sar
cli
push
jmp
fsts
mov
cmpsb
dec
jmp
outsl
sub
pop
stos
hlt
test
aaa
jge
jne
pop
fsubrl
imul
sbb
jecxz
pop
inc
sub
arpl
adc
jae
jnp
jecxz
xor
mov
mov
dec
adc
adc
mov
adc
xor
cmp
popf
adc
imul
push
dec
fwait
dec
out
lret
pop
adc
cmpsb
jne
jmp
push
addl
or
ss
scas
mov
roll
loopne
ret
repz
or
xor
mov
das
pop
mov
inc
mov
test
es
fwait
mov
cs
das
sbb
adc
movsl
js
cli
pop
cltd
sti
movsb
lods
sar
mov
adc
aas
inc
aas
mov
inc
xchg
jmp
mov
lcall
es
adc
and
andb
cwtl
adc
adc
loop
jnp
or
xor
mov
sahf
mov
loopne
or
or
ret
pop
and
inc
pop
adc
push
jo
aas
sub
xchg
cmpsb
arpl
std
orl
jle
mov
lea
pop
scas
pop
out
adc
popa
xchg
cs
mov
adcl
cmc
shrl
jp
or
xor
mov
adc
and
or
inc
cld
mov
adc
fcoms
xor
push
or
pushf
out
add
rolb
popa
mov
push
or
and
pushf
add
xchg
loopne
inc
fcomip
mov
ret
and
jg
jns
and
cs
push
pop
push
jge
adc
popa
int3
int3
mov
pop
inc
sub
mov
arpl
mov
xor
out
subl
lret
sub
lahf
cmp
rclb
xor
mov
lret
jo
iret
ret
xchg
shll
jb
and
lods
mov
push
pop
or
jg
bound
dec
in
cmp
sub
dec
add
or
std
dec
push
mov
xchg
aaa
test
push
adc
addr16
adc
pop
push
push
cmpsl
outsb
lea
dec
ss
cld
mov
adc
cltd
subb
cmp
lret
rcrl
cld
mov
adc
jp
jb
xchg
mov
xchg
arpl
sub
insl
mov
loopne
jmp
adc
sbb
cmc
xchg
push
cmc
and
xor
cmp
ja
mov
test
and
lods
int3
mov
xor
dec
lods
add
in
sub
dec
lret
push
adc
stos
jmp
jmp
aas
sbb
enter
or
inc
addr16
test
jmp
js
js
daa
in
inc
stc
out
shl
ljmp
out
ret
fcompl
int3
mov
shlb
adc
pop
push
dec
js
popf
mov
fimuls
daa
fiadds
dec
add
jae,pt
inc
dec
inc
adc
inc
push
adc
xor
icebp
mov
mov
jb
mov
sti
pop
test
sarl
sub
sub
ss
daa
jae
adc
xor
fwait
shll
cmp
xorb
cmp
addl
pop
in
push
nop
inc
mov
das
out
out
add
jmp
and
jl
jle
ret
loopne
mov
jg
cmp
outsb
inc
mov
dec
in
idivb
push
es
cs
mov
outsb
cmc
test
add
and
sbbl
mov
inc
out
shr
clc
stos
mov
push
add
lea
pop
jo
stc
push
aam
out
scas
jg
pop
pop
xor
adc
je
shl
push
mov
pop
in
dec
into
cmp
pop
jle
or
inc
cli
mov
cmp
xor
or
xchg
pop
shll
xchg
dec
cwtl
out
hlt
mov
je
jle
leave
push
popf
out
xlat
scas
fstp
outsl
testb
fbld
or
mov
sbb
push
clc
cmp
rorb
mov
xor
cmpsl
lea
mov
sti
imull
lcall
push
jg
in
pop
dec
dec
push
xlat
dec
lahf
aas
repz
sbb
clc
cmp
push
sub
dec
xor
and
push
cwtl
adc
lahf
push
and
jb
aas
mov
sbb
push
imull
loopne
jge
stos
mov
xchg
dec
stos
or
outsl
repz
sbb
push
arpl
adc
inc
add
lahf
sar
jae
mov
insb
movsb
mov
adc
dec
sbb
add
imul
push
sbb
adc
cmpsl
shl
addl
xor
cli
imul
fstl
adc
push
adc
mov
xor
mov
mov
lahf
aad
xchg
je
pop
adc
cmpsb
add
jae
or
insl
push
aam
dec
lahf
aas
jle
loope
sbb
or
lock
push
fnsave
push
outsl
sub
mov
leave
push
push
sbb
addb
repnz
jbe
mov
or
jbe
je
push
push
outsl
mov
jne
fdivs
rclb
js
test
in
fstps
push
notb
xchg
or
mov
insb
cwtl
xor
cmp
mov
sub
sti
jb
sarl
cmp
jmp
popf
mov
jle
out
sub
or
js
loopne
pop
call
mov
mov
aaa
pop
imul
cmp
rorb
sbb
test
rorb
js
adc
stos
sub
xor
repnz
or
loope
test
mov
test
add
xchg
cmpsl
dec
iret
sbb
xchg
adc
fsub
adc
cmp
sahf
push
loope
test
pop
hlt
dec
jo
adc
mov
push
adc
popa
adc
xor
pop
adc
xor
lods
jno
vpxor
inc
scas
mov
jno
mov
outsb
xor
xchg
or
scas
cmp
pop
adc
daa
fmuls
mov
sbb
insb
mov
popl
adc
adc
int3
or
cmpsb
pop
cmp
xchg
sahf
add
les
xor
js
pop
int
in
pusha
out
dec
lea
mov
stos
in
pop
addb
out
xor
xor
mov
ret
mov
lcall
out
cwtl
rcrl
nop
add
mov
cmp
fmuls
insb
cs
je
xchg
sahf
xor
js
in
mov
dec
icebp
mov
imul
imul
xor
lock
cltd
test
cwtl
push
inc
test
jl
cmp
mov
les
imul
fldcw
mov
lods
push
adc
adc
negl
add
adc
fidivs
jl
and
in
ljmp
std
cmp
test
xor
mov
or
xor
scas
nop
xchg
and
stos
loopne
pop
adc
xchg
ja
in
jp
rorl
sahf
test
out
out
lods
filds
adc
ljmp
sub
popa
mov
adc
out
dec
push
mov
add
adc
pop
test
inc
pop
push
dec
mov
mov
add
popa
jecxz
lret
push
jp
jae
aaa
fisttps
fildl
sbb
ss
xor
xor
std
pop
je
cmp
out
adc
arpl
fidivrl
jbe
mov
jmp
addl
sarl
mull
stos
dec
mov
fstpl
cmp
pop
fidivl
movsb
int
iret
hlt
ss
jo
mov
sti
je
jmp
mov
adc
dec
sub
dec
lahf
mov
in
shrb
lcall
aas
sub
mov
cli
lea
daa
dec
sbb
inc
mov
mov
sbb
scas
pop
ss
push
int3
sbb
je
std
cmp
mov
jge
jp
shll
xor
test
fadd
add
aad
int3
pop
and
loope
loop
fistpll
xchg
clc
je
fldl2e
popf
ret
pop
in
mov
xor
out
test
jb
xor
rorb
sar
add
sub
dec
xor
add
fs
ss
cmpsl
xchg
cli
addl
or
mov
popf
adc
call
repnz
test
dec
fwait
inc
movsl
lods
or
add
hlt
divb
xor
mov
out
scas
pop
mov
pop
ja
xchg
daa
xchg
jle
and
push
adc
idiv
idivl
cmp
idivb
xor
aaa
dec
cmp
mov
inc
fdivrs
mov
adc
scas
pop
mov
cmp
push
adc
lahf
adc
jg
push
push
in
pushf
pushf
sarb
and
sub
xor
lods
adc
int3
stos
in
xorb
lods
gs
jo
pop
and
mov
icebp
cmpsl
inc
andb
cmc
fidivs
cmc
pop
xlat
cmp
dec
mov
xchg
shll
mov
lds
dec
push
mov
nopl
fwait
sbb
sahf
jne
dec
lret
adc
aas
inc
dec
nop
je
shr
mov
lods
or
push
popa
js
in
movsb
dec
inc
lds
aaa
push
adc
imulb
xchg
subl
sahf
add
ss
and
aad
push
lahf
jnp
or
je
rclb
mov
add
jbe
leave
hlt
jns
repnz
adc
out
mov
inc
scas
or
inc
movsb
or
cmpsl
pusha
insl
je
arpl
cmp
loopne
jbe
daa
jp
or
xchg
int
shll
ret
fisubl
fwait
push
or
lods
jp
cmp
dec
inc
mov
inc
mov
xchg
enter
pop
and
iret
push
fimull
or
jo
jle
pushf
loopne
mov
xchg
pop
ds
stc
imul
fwait
push
pop
mov
xchg
out
or
outsb
lock
fcoml
dec
mov
push
adc
xchg
xchg
movsl
enter
sbbl
arpl
dec
shl
test
jns
mov
push
adc
inc
fs
out
gs
sti
push
out
xor
mov
popa
mov
or
pop
dec
cld
mov
int3
bound
roll
adc
push
test
pusha
add
js
push
push
call
pxor
leave
jge
push
sbb
pop
xor
iret
xor
push
js
jle
insb
mov
adc
cmp
cmp
test
sub
movsl
cmp
jb
mov
add
cli
outsl
cmp
fldenv
cwtl
jl
lret
lods
mov
jecxz
mov
xchg
xor
jmp
xchg
imul
inc
dec
arpl
pop
test
into
jecxz
ret
mov
push
cmp
adc
pop
lock
xor
test
lret
sbb
popa
inc
inc
inc
push
lcall
mov
icebp
xor
fwait
jb
loopne
jle
mov
jmp
int
sti
and
add
in
pop
inc
lcall
xchg
arpl
repnz
pop
jle
mov
ds
fnstenv
mov
mov
hlt
je
dec
lahf
adc
stos
xor
add
xor
pop
add
aaa
fwait
ss
stos
cmp
xorl
roll
add
jb
mov
sahf
pop
pop
js
push
scas
sub
xchg
imul
pop
jmp
sbb
adc
xchg
inc
js
in
fstps
pop
insb
fadd
sbb
add
mov
jb
or
pop
jle
mov
ds
fnstenv
mov
mov
hlt
je
dec
lahf
adc
stos
xor
add
xor
pop
add
aaa
fwait
ss
stos
cmp
xorl
roll
jne
push
fldt
ds
ljmp
iret
rorl
xorl
mov
push
fistps
mov
jmp
lret
addl
ja
jecxz
or
xchg
clc
xchg
in
fnstenv
mov
jb
jno
pop
mov
fcmovu
sub
push
imul
dec
fwait
inc
push
push
mov
shl
add
lcall
fs
mov
icebp
xor
call
dec
mov
add
clc
inc
pop
mov
adc
pusha
xchg
mov
lods
sub
dec
push
dec
cwtl
inc
adc
sub
fildl
movl
movsb
mov
lock
add
mov
push
movsl
jb
daa
ret
hlt
xor
lock
xchg
push
out
pop
jnp
pop
sub
in
pusha
aam
sbb
sbb
imul
pushf
fiaddl
inc
mov
xchg
jbe
mov
adc
pop
cmpsb
or
mov
dec
pop
add
mov
in
stos
mov
gs
or
push
adc
fwait
adcl
mov
jo
out
sbb
inc
and
xchg
mov
iret
inc
flds
scas
cmc
test
adc
cmpsl
inc
mov
xor
jnp
mov
adc
into
pushf
loopne
test
xchg
js
xchg
xor
mov
popa
lods
out
js
mov
mov
mov
add
loop
inc
cmp
push
pop
push
daa
adc
gs
dec
xchg
in
adc
stos
jecxz
inc
outsl
add
subb
das
hlt
mov
cmp
push
mov
addr16
pop
jge
lods
lret
mov
pop
in
fstl
leave
xchg
mov
dec
xchg
or
jne
outsb
push
rcl
xchg
lds
scas
mov
stc
xor
int
xchg
test
andb
and
pop
mov
aad
sub
stc
outsb
dec
jnp
ljmp
cmpsb
out
cmp
fwait
jl
repnz
jbe
pop
or
loop
xchg
test
cmpl
xchg
into
mov
in
and
xor
cmp
rorb
add
mov
lds
jnp
loopne
pop
es
cmc
sbb
dec
add
dec
jp
pop
scas
jno
adc
arpl
shl
ja
xchg
aaa
xor
mov
inc
xchg
in
roll
ljmp
movsb
imul
dec
or
push
mov
bound
sub
lods
cmp
bound
cmpsl
stc
pop
out
test
inc
mov
xchg
sub
ret
dec
lret
pop
mov
mov
jnp
ds
and
jecxz
jecxz
arpl
jle
cmp
pop
data16
loop
inc
inc
leave
shl
lcall
add
xchg
scas
out
loopne
mov
sub
cmp
fisubs
mov
pop
popa
outsl
adc
dec
lds
lahf
divb
pop
push
pusha
inc
mov
ficoml
mov
jmp
dec
fwait
and
lahf
push
pop
xor
mov
clts
bound
mov
push
sub
shrl
cmpsl
jmp
addl
iret
stos
add
insl
pusha
sbb
movl
scas
addr16
xchg
into
lahf
aas
jle
xor
pusha
jb
shl
jl
xor
xchg
cmpsb
lret
addr16
out
pop
jnp
repnz
rolb
pusha
and
mov
adc
and
mov
lods
in
loop
sahf
jnp
cltd
sar
in
or
adc
jns
aaa
lcall
mov
test
adc
les
jno
dec
lahf
mov
psubsw
ret
subb
push
sub
sahf
leave
arpl
fnstsw
das
rcrl
dec
leave
outsl
das
scas
adc
xor
mov
in
sub
jnp
mov
in
hlt
mov
imul
mov
sub
dec
sahf
in
jmp
lods
push
mov
mov
std
nop
fs
outsl
rorb
in
js
movsl
sahf
rorl
out
push
pop
imul
popf
xchg
push
pop
xor
jae
insl
mov
mov
ds
xchg
inc
test
fcompl
inc
xchg
es
cs
fwait
lock
xchg
cmp
cmpb
cmp
mov
dec
adc
js
xchg
arpl
idivb
sbb
imul
loopne
jle
in
xchg
roll
xchg
cwtl
and
pavgb
jno
call
bound
and
jbe
cld
xor
loope
ret
push
inc
int3
lea
subb
xor
ret
das
xchg
fs
cs
lock
or
push
jnp
and
out
mov
sbb
pop
or
adc
outsl
pop
ds
test
sub
lret
outsb
mov
sti
add
and
xchg
bound
push
add
aas
sbb
mov
and
rcll
test
cmp
adc
mov
mov
in
push
cltd
andb
das
push
in
and
icebp
sub
jns
mov
dec
add
jae
sub
sbb
push
adcl
jae
xor
je
mov
inc
addb
test
lock
mov
adc
dec
inc
pop
mov
pop
cmp
adc
inc
sbb
inc
sub
in
cmpsb
dec
add
outsb
pop
out
imul
adc
negb
sub
aas
dec
js
sahf
dec
and
add
fimull
inc
dec
sub
inc
scas
fwait
xor
jp
push
pop
adc
std
insb
hlt
shll
push
inc
inc
pop
insl
jo
dec
push
sub
mov
ds
add
xchg
lahf
cli
mov
jae
adc
lds
fcmovnb
int
push
lahf
arpl
out
lods
mov
pop
lds
pusha
sbb
adc
mov
fldcw
mov
hlt
and
ret
ja
iret
add
jp
loopne
xchg
push
inc
bound
and
xchg
enter
ret
out
addr16
pushf
cwtl
mov
daa
adc
pop
or
dec
add
repz
sbb
enter
movsl
mov
lods
fldenv
sbb
mov
in
movsb
mov
fsub
adc
lds
push
mov
pop
maxps
lret
adc
arpl
or
enter
stos
test
shll
sub
jae
xchg
aas
pusha
bound
mov
mov
in
add
mov
ljmp
cmp
mov
dec
js
rorl
daa
sub
lret
add
fwait
int
xor
pop
ficoml
sub
fwait
inc
negl
pushf
shrl
adc
push
xor
mov
mov
mov
test
addr16
inc
add
daa
dec
lahf
aas
cmc
mov
sbb
dec
sahf
and
jne
inc
cmp
adc
out
ret
xchg
mov
movsb
outsb
stos
outsl
rorl
jl
push
test
enter
pop
dec
fwait
dec
neg
dec
adc
xchg
mov
loop
clc
add
sarb
into
ljmp
pushf
es
fisttpll
testl
ja
jmp
lret
aam
gs
fnstenv
cmpsl
es
mov
push
dec
jns
sub
fistpll
and
test
out
push
mov
dec
push
add
js
int3
inc
push
cmpsb
movsb
push
mov
je
pop
loope
jmp
or
ret
xor
cmp
clc
sbb
aas
jecxz
nop
or
xchg
xor
pop
add
data16
sbb
adc
jbe
push
xchg
pusha
dec
jne
xor
inc
imulb
and
push
pusha
xchg
es
inc
aad
lret
imul
push
stos
mov
pop
aas
mov
push
aaa
scas
and
mov
adc
in
fidivrs
sub
xchg
xor
aam
jnp
cmc
bound
icebp
call
adc
jae
inc
cltd
inc
fdivs
pop
mov
mov
stos
lret
jbe
shl
sub
mov
fstl
push
push
jle
mov
jno
out
sub
mov
mov
xor
jl
xorb
lret
dec
cld
es
popa
sub
sbb
dec
inc
mov
pop
jno
mov
insb
xor
popf
andb
push
xchg
xchg
dec
jmp
orl
mov
aad
ljmp
and
mov
mov
out
mov
ss
and
sti
ret
xor
xchg
xchg
aad
adc
xor
adc
sahf
out
mov
lods
mov
fcomps
out
mov
ja
or
mov
push
pop
xchg
or
in
stc
push
cmp
adc
mov
lods
push
sarb
adc
push
or
add
outsl
or
arpl
jo
cmpsl
push
dec
and
lds
dec
lods
cmp
mov
mov
cmpsb
cmp
dec
shl
repnz
add
arpl
mov
daa
mov
das
dec
mov
and
pop
orl
push
jle
lahf
pop
cltd
jo
dec
cmpsl
jno
imul
sub
or
mov
mov
in
test
lret
mov
aas
mov
sub
testl
adc
pusha
pop
jge
adc
push
dec
xchg
xchg
rcll
or
jb
stc
stc
xor
and
movsl
ljmp
jmp
mov
leave
add
dec
jle
in
cmpsl
add
dec
xchg
mov
lret
shll
inc
setg
inc
cmp
shrl
gs
adc
popa
and
inc
hlt
fisttps
cwtl
dec
add
lahf
ss
sahf
lods
xor
xorb
je,pn
add
inc
sbb
xchg
pop
mov
lea
nop
ret
aas
xchg
push
popf
sbb
test
push
lret
mov
cmpsl
push
into
test
xchg
mov
cmp
and
or
popa
xorb
and
aaa
lods
mov
out
push
inc
sub
mov
xor
test
aad
cmpsl
xchg
cmpsb
xor
pushf
fiaddl
jl
mov
lahf
mov
sub
out
icebp
adc
sub
mov
mov
test
dec
mov
lock
sahf
adc
jne
ss
sub
mov
testb
daa
and
add
ja
mov
fisttpl
adc
iret
bound
movsl
mov
insb
stos
or
outsl
jge
scas
movsl
sub
push
test
inc
lock
leave
xchg
daa
dec
adc
xchg
adc
mov
iret
shlb
xor
cmp
adc
pop
pop
xor
sarb
stos
jo
pop
xor
testb
mov
pop
push
bound
xor
xor
and
add
js
ret
sbb
mulb
clc
push
mov
mov
pop
or
pusha
mulb
lea
cmc
xor
roll
jbe
in
ja
ds
cmpsl
sbb
or
jnp
xlat
xor
sub
fwait
or
add
ret
mov
add
outsl
inc
pop
iret
jge
rolb
inc
add
adc
mov
mov
push
inc
push
gs
sbb
fcmovb
jg
push
inc
sbb
sbb
pop
in
and
sbb
sbb
xchg
or
daa
dec
in
lea
lods
or
mov
clc
dec
or
pop
jge
arpl
inc
adc
or
and
and
adc
orb
movl
pushf
stos
divb
int3
dec
and
mov
bound
sti
loop
ret
fstpl
scas
shrd
fists
or
subl
cs
aas
fs
mov
mov
add
and
rcr
xchg
cmc
pop
in
mov
ja
ret
fadd
mov
arpl
scas
mov
ds
xor
jbe
jb
fstp
insl
mov
rcl
shrb
mov
dec
stos
pushf
movsl
sbb
jno
jp
mov
lret
cmp
inc
fstps
mov
sbb
in
xor
cli
cmp
sub
dec
lods
in
cmp
mov
icebp
enter
jbe
insb
adcb
sub
hlt
outsl
mov
inc
sti
xor
jmp
pop
sbbl
add
push
lret
sti
or
or
stc
arpl
mov
cmp
pop
pop
imul
or
mov
and
jmp
cmp
js
push
adc
mov
mov
sti
cmpsl
cmp
sub
pop
sti
icebp
pop
cmp
pop
scas
adc
mov
cmp
cmp
and
cmp
mov
mov
sub
dec
pushf
iret
inc
push
mov
aas
sbb
sti
les
and
notl
sub
xchg
aaa
dec
clc
in
popa
jnp
out
mov
hlt
pushf
dec
lods
ret
push
mov
xlat
ficompl
js
mov
xchg
jle
nop
xchg
jecxz
test
or
fisttpl
cmpsb
jo
dec
pushl
leave
test
mov
insl
addr16
mov
cmc
sub
mov
sub
jecxz
dec
push
incl
xor
popf
out
dec
in
sbb
cltd
frstor
mov
fnstcw
pop
sub
mov
popa
inc
xor
test
adc
and
mov
sti
std
xchg
andb
insl
adc
int3
daa
xchg
or
addr16
outsb
xchg
jo
es
pop
bound
mov
mov
fimuls
mov
call
sti
cmovg
mov
pop
mov
sti
fisubrs
pop
inc
loop
mov
hlt
pop
sub
arpl
je
sub
adc
mov
clc
movsl
mov
sub
sti
jae
test
push
push
into
push
inc
movsl
pusha
add
inc
push
clc
cmp
hlt
lds
inc
jle
test
in
xchg
sub
repz
leave
rorl
pop
jecxz
inc
mov
mov
loopne
inc
mov
jbe
pushl
mov
mov
inc
mov
mov
add
into
gs
clc
fdivs
mov
lods
shrb
daa
testl
pop
ficoml
sub
fwait
inc
xchg
pop
pushf
shrl
adc
xor
mov
push
addr16
sub
lock
xchg
gs
fs
xchg
lods
add
adc
idivl
cmp
adc
repnz
sarb
push
xchg
fists
lock
addr16
push
cld
sahf
jae
test
test
outsl
mov
iret
scas
test
bound
adc
jb
dec
out
fnstsw
ss
test
popf
mulb
pop
sbb
adc
or
xor
pop
xchg
or
fidivrs
xor
sub
mov
arpl
adc
xor
jle
cs
subb
pop
jnp
das
sahf
sarl
stos
and
mov
mov
and
aad
lcall
test
mov
mov
mov
and
popa
mov
aam
push
add
bound
mov
fs
add
adc
shrl
pop
dec
aam
or
mov
js
sarl
dec
je
imul
adc
or
inc
sub
adc
push
and
or
or
test
shll
or
xchg
adc
cmp
sbb
lds
jns
adc
mov
lods
or
or
pop
nop
rcrl
test
cmc
mov
repnz
xor
sbb
adc
push
icebp
ds
mov
imul
push
fxam
jmp
sub
pop
sarl
into
ljmp
loope
bound
adc
cltd
jns
xor
fcomps
insl
sub
mov
fsubrs
add
in
and
sub
sbb
jo
add
into
push
mov
inc
lock
dec
add
adc
scas
cmc
xchg
inc
jp
cmp
lahf
inc
mov
aaa
mov
fimull
jge
inc
mov
jecxz
push
push
sub
cs
mov
jne
cmp
div
lahf
cmp
movsl
sahf
mov
cli
lret
xchg
mov
sti
nop
in
mov
in
mov
shrl
rcl
mov
fistps
loope
cmc
push
jge
xor
sbb
or
xor
pop
pop
scas
cmpsl
subl
insb
jns
imul
push
cld
ljmp
mov
sub
dec
out
fcoms
xchg
call
sbb
outsb
mov
in
call
inc
sbb
or
jbe,pn
daa
sub
outsb
ret
jecxz
inc
lret
dec
pop
hlt
inc
jp
enter
ja
ficompl
jmp
add
lret
xchg
mov
jbe
xchg
inc
repnz
fs
ficoml
dec
sbb
xchg
cwtl
sbb
jb
xchg
sub
sbb
push
push
pop
decl
fbld
lods
cmp
adc
iret
dec
push
lods
jp
test
xchg
pop
inc
mov
rorl
imul
inc
jo
jnp
dec
gs
sub
clc
cmc
lock
pop
or
jle
imul
shlb
mov
xor
mov
mov
sti
imul
fucom
mov
lock
push
lret
sub
mov
inc
push
std
stc
aas
insb
mov
gs
mov
pop
mov
add
pop
fwait
ss
adc
jle
cmp
push
pop
gs
ss
in
mov
push
sub
je
fidivs
sbb
addl
mov
ror
sahf
pusha
xchg
mov
addr16
push
cmp
jecxz
inc
shrb
adc
mov
xchg
sub
mov
les
xchg
aam
mov
jbe,pn
out
pop
inc
ja
andb
push
out
js
xchg
lods
add
cmp
sarb
xlat
scas
aad
imul
aad
ljmp
add
jb
jle
pop
out
test
test
xchg
fbld
sbb
or
insb
push
inc
iret
xlat
faddl
sbb
insl
jo
lds
imulb
xor
mov
adc
ret
push
jnp
lods
or
sub
push
in
xchg
jge
es
out
stc
adc
pop
adc
push
mov
enter
pop
push
pusha
rcll
fs
cmpsl
xor
adc
stos
stos
sbb
push
arpl
sub
int3
mov
mov
std
pop
sti
dec
cwtl
xor
jns
je
loope
pushf
insl
mov
jmp
inc
outsb
sub
mov
lcall
xor
mov
sbb
push
mov
in
sub
pusha
sub
push
sbb
or
jle
cmpsl
out
push
fidivrl
nop
fcoms
add
test
into
dec
pushf
hlt
and
int
rcll
inc
cmp
adc
pop
movsb
inc
inc
xor
hlt
mov
in
ss
or
sbb
out
cmp
bound
mov
mov
jo
and
inc
add
fisubs
and
lret
sti
cmp
dec
mov
and
and
jl
mov
and
testb
cs
jbe
adc
jno
xlat
mov
in
mov
pop
sub
mov
jl
add
mov
or
nop
pusha
fistl
xchg
out
and
add
outsb
cmp
aad
loopne
jp
pop
inc
fs
icebp
jge
outsl
and
xor
mov
dec
in
xchg
out
and
stos
mov
rorb
repz
fwait
stos
pop
andl
jae
adc
jb
push
jnp
dec
mov
lods
cs
fidivrl
neg
mov
add
movb
dec
pop
jne
arpl
pushf
cs
out
icebp
add
xor
popl
lods
cld
cwtl
rorl
dec
mov
rolb
push
daa
mov
adc
sahf
les
jmp
push
stos
ficomps
dec
hlt
sbb
ret
ja
jno
lds
test
mov
shll
lret
lretw
pop
xchg
pop
pop
dec
or
aam
push
xchg
clc
mov
jl
mov
add
arpl
push
xor
jmp
or
int3
jmp
das
inc
mov
aad
cli
mov
jg
push
pop
pop
test
mov
lds
lret
es
jmp
mov
and
cmp
pop
loop
movsl
jmp
adc
movl
lock
and
sub
js
dec
shrb
cmpsb
add
push
test
push
jbe
js
cli
push
jle
and
inc
inc
push
out
rorl
lds
outsl
dec
push
ja
jne
ljmp
mov
jmp
stos
add
push
mov
xchg
push
fstps
fdivs
mov
mov
jecxz
frstor
iret
jns
mov
xor
xor
push
cld
sub
jo
out
jae
jo
testb
pop
jmp
stc
push
sbb
je
cmc
mov
js
xlat
movsb
testb
jl
int
aas
out
and
mov
rcr
jle
ret
clc
adc
in
xor
andb
pop
enter
and
fwait
mov
rorb
test
shl
je
int
mov
xchg
mov
sbb
cmp
xor
std
scas
add
or
jle
and
mov
test
mov
mov
int3
mov
sbb
xor
pop
ljmp
cwtl
inc
xor
enter
je
adc
or
mov
pop
sub
cmpsb
inc
push
add
mov
mov
mov
in
mov
inc
shrl
imull
ja
push
push
aas
xor
popf
stos
in
popf
lcall
add
xor
and
mov
push
insb
push
cmp
adc
outsl
push
inc
je
aam
add
std
jp
lret
aaa
jnp
cltd
lods
fistl
jnp
in
jge
stos
fidivrs
mull
xchg
mov
fnstsw
inc
cmp
and
pusha
test
mov
aas
sub
insl
jns
jns
adc
lods
aam
sbb
inc
repz
pop
pop
jecxz
mov
and
movsl
dec
fstps
in
daa
add
add
in
push
cmp
aad
cmc
in
les
jb
or
cwtl
ss
lret
fstpl
jmp
adc
pop
dec
ja
outsl
scas
push
cmpsb
out
and
jno
lods
xorb
push
push
popf
out
out
jmp
adcb
repnz
jp
ss
jmp
incl
cmp
jecxz
and
push
or
pusha
inc
mov
jo
adc
mov
in
xchg
gs
mov
add
pushf
push
ja
test
leave
nop
lcall
pop
lods
jbe
in
dec
lods
shr
ljmp
cmp
jnp
out
pop
sub
push
scas
add
lods
mov
ret
arpl
sbb
add
jbe
je
in
lea
in
das
inc
icebp
pop
sub
lea
xchg
fwait
mov
test
notl
jbe
daa
inc
pushl
fiaddl
sub
sbb
mov
xchg
loop
stos
shl
and
inc
shlb
sbb
sbb
push
mov
shlb
pop
adc
push
mov
pop
stc
notl
loopne
dec
fwait
push
rcll
sbb
repz
popa
pop
cmp
adc
imul
mov
insb
cmp
push
scas
and
lea
xor
je
xchg
sub
jne
out
cmp
ja
mov
lret
mov
jle,pn
jbe
dec
push
out
inc
fstp
addr16
scas
add
inc
ljmp
fdiv
lret
jl
mov
push
or
iret
xchg
and
or
in
iret
cmpsl
test
or
jno
cld
data16
shrb
push
lret
out
mov
and
bound
mov
test
inc
pop
xor
sub
xor
hlt
call
fdivs
sbb
xor
aas
pushf
stos
lods
mov
push
xor
pop
mov
pop
sbb
push
jbe
cmp
cmp
push
mov
xor
adc
jg
mov
test
pop
jg
push
cmp
addl
testl
cwtl
mov
push
inc
push
mov
insb
movsb
mov
xor
xchg
aad
mov
mov
and
addl
and
cmc
xor
aad
xor
mov
xchg
xor
mov
hlt
fdivs
jb
and
adc
fidivl
push
hlt
pop
cltd
lds
cli
addl
pop
add
sti
fwait
jb
sub
jne
icebp
cmp
fstpl
bound
mov
std
jp
in
enter
imul
fnsave
sub
cmp
aad
outsl
jge
rorl
popl
lock
iret
lahf
imulb
jp
xchg
scas
pop
mov
cmp
addr16
xchg
bswap
in
xchg
mov
add
scas
daa
push
sub
dec
fwait
inc
stos
movsb
mov
decl
add
and
jb
insl
popl
push
xchg
mov
lahf
scas
or
orl
pop
jnp
inc
mov
sub
lods
lock
pushf
mov
mov
jae
repnz
das
add
pusha
mov
divl
sbbl
add
leave
sub
and
sub
sbb
cld
jae
shrl
jle
jl
aad
pusha
cmp
mov
cli
nop
frstor
adc
fsubrs
add
push
xor
add
fisttpll
out
xor
dec
mov
lds
jp
test
jge
xchg
lods
mov
mov
dec
pop
pop
out
mov
push
mov
les
aad
and
sbb
adc
push
mov
test
test
daa
mov
rcrb
out
xchg
ja
mov
dec
je
xor
leave
scas
pop
or
mov
xchg
pop
pop
mull
es
out
add
mov
loop
xlat
mov
popa
mov
stos
cli
daa
and
cmp
lret
icebp
out
push
xlat
lea
clc
int
xchg
sbb
sarl
repz
loop
and
mov
mov
dec
into
adc
out
fwait
int
sti
rcr
inc
lcall
mov
push
clc
dec
movsb
pop
lret
and
cli
inc
xchg
jns
lods
xor
les
push
pop
dec
cmc
hlt
mov
clc
lods
inc
psubsw
adc
lea
rcll
lcall
rorb
push
mov
mov
push
imul
test
cld
dec
jae
rcll
sub
sbb
arpl
mov
or
mov
shrl
adc
cmc
popf
jo
push
test
loope
mov
fildl
xor
xor
test
lods
sub
fistpl
push
sbb
stos
push
out
pop
gs
imul
cld
in
mov
es
ret
bound
cld
bound
insl
lds
sti
push
push
mov
rcl
add
xchg
call
arpl
inc
fistpl
lcall
push
mov
mov
dec
inc
xchg
stos
shlb
ret
add
pop
nop
adc
mov
and
nop
inc
pop
fdiv
std
test
sbbb
cld
pop
push
subl
std
lods
jnp
mov
hlt
and
mov
aaa
xchg
mov
sub
jl
xor
insb
push
xchg
neg
jecxz
fs
sbb
je
shl
jge
loope
push
and
js
std
test
push
or
out
scas
cmc
xor
add
call
mov
mov
je
push
cmpps
testl
shll
dec
jbe
ljmp
cmp
in
adc
pop
cmpsb
bound
cmp
inc
jno
out
ret
out
cmp
idivl
sbb
out
je
push
and
in
pop
jmp
pop
jp
or
lcall
rolb
pop
roll
adc
scas
pop
mov
out
and
mov
call
fisubl
add
mov
sbb
div
loop
mov
ret
ja
adc
lods
adc
and
pusha
mov
jb
push
mov
fnstsw
iret
test
inc
js
cmpsb
bound
mov
push
xchg
or
mov
mov
popf
dec
jns
mov
enter
nop
sbb
outsb
cs
xor
xor
mov
cmp
adc
fidivrl
outsl
xor
lods
adc
xchg
cld
pusha
mov
loopne
stos
cmc
xor
pop
test
xor
lret
fstpl
and
mov
jnp
and
mov
mov
pop
push
xor
mov
push
jbe
mov
fcompl
stc
push
jne
xor
push
shll
push
in
leave
push
or
xlat
addb
mov
repz
mov
mov
jns
xlat
cmp
sar
xchg
in
and
xchg
mov
cmp
cmc
lea
arpl
pop
lret
decl
and
es
cmp
fs
add
push
xchg
addr16
inc
xchg
rclb
jmp
mov
add
sbb
lret
xchg
sbb
int3
sbb
scas
mov
dec
jo
push
sbb
push
mov
add
jp
add
das
es
push
int
xchg
daa
mov
cs
in
or
lods
jno
and
cmpsl
xor
and
mov
inc
jecxz
aaa
sub
adc
dec
sub
test
pop
ret
push
mov
test
add
test
flds
shlb
pushf
mov
cltd
pop
ret
fmuls
fldt
enter
mov
inc
pop
fildll
mov
test
leave
xchg
pop
mov
insl
bts
ret
cmp
daa
imul
lcall
cmp
push
fistps
aas
dec
test
repnz
mov
xlat
ror
mov
cld
sar
push
cmp
lea
xor
in
dec
adc
sarb
test
aas
gs
insb
push
stos
or
mov
shlb
push
push
add
adc
cmc
jbe
push
loopne
sub
aad
shl
xchg
push
lods
or
rcrl
adc
or
out
and
les
mov
mov
push
mov
sti
cmp
mov
and
add
shlb
scas
sbbb
jge
mov
fcomps
cmp
and
adc
testb
je
sbb
int3
add
into
rcl
iret
clc
xchg
cld
and
xlat
inc
sarb
repz
push
pop
push
out
sbb
or
dec
sub
out
adcb
add
xchg
add
outsb
pop
cmc
and
mov
lock
das
int
andb
dec
mov
and
addr16
and
jge
js
test
xlat
fistps
outsb
mov
or
push
call
sbbb
push
mov
loopne
dec
mov
lods
adc
scas
iret
inc
pop
mov
jmp
xchg
shll
or
xor
jg
icebp
dec
adc
push
bound
adc
xor
mov
popa
dec
call
sub
xchg
ret
xchg
adc
shrb
xchg
sbb
pop
mov
cmp
imul
fnstenv
les
xor
stos
js
fistl
cmp
mov
mov
clc
xor
leave
aas
pusha
push
sbb
outsl
lods
je
repz
ja
ret
fnsave
xor
pop
stos
inc
xchg
ds
outsl
sbb
lods
and
and
ljmp
mov
out
pushl
pop
jbe
and
cmpsl
scas
stos
mov
addb
vmovapd
outsl
sarl
push
adc
aam
mov
cwtl
sbb
leave
mov
jne
jle
lret
lods
hlt
mov
addr16
mov
pop
mov
mov
push
negl
xchg
xlat
stos
and
or
subb
movsl
xchg
sarb
xlat
pushfw
mov
mov
inc
iret
jmp
ss
es
insb
addl
popa
sbb
push
jnp
fwait
rcrb
jp
fld
fdivs
xchg
lock
in
pushf
adc
test
jge
inc
mov
js
mov
dec
cwtl
lahf
sbb
sbb
mov
pop
mov
lock
mov
sub
mov
ds
rcr
arpl
jecxz
mov
jl
jecxz
sahf
mov
xchg
mov
lods
dec
sub
mov
sbb
fsub
and
std
inc
repnz
in
jge
fnsave
adc
fimuls
xchg
lods
repnz
fdivl
aas
rcll
movsl
sub
outsb
add
in
push
adc
jg
pushf
xchg
fsubrp
push
ljmp
ret
jne
pop
ja
into
xchg
mov
jmp
ficomps
jo
mov
mov
xor
inc
add
xchg
sbb
inc
lods
mov
mov
ja
mov
lods
test
fldln2
les
pmuludq
into
fucompp
mov
and
push
in
push
adc
pushf
cmpsb
adc
cmc
data16
add
mov
mov
xchg
add
adc
je
test
mov
fisubl
ja
cltd
push
xorb
push
sub
leave
sahf
cmp
cld
js
adc
mov
xor
popf
inc
lcall
mov
or
fistl
in
push
adc
lock
in
jne
inc
cmpsl
jp
jge
daa
out
fmull
cmp
pop
imul
mul
loope
jne
lds
fidivrl
cmpl
add
and
fiaddl
inc
pop
sahf
enter
mov
lret
test
lret
dec
pushf
sbb
insb
cmp
insb
push
hlt
in
in
and
mov
add
in
mov
in
push
adc
notb
shlb
stos
pop
lcall
mov
jns
ja
or
mov
orl
rorb
pop
jns
xchg
xor
push
xor
repnz
xchg
dec
pushf
rcl
push
test
repz
jae
push
lods
pcmpgtb
xchg
sbb
xor
popf
mov
push
adc
ja
sahf
sub
mov
or
xor
ror
out
cld
xor
mov
pop
movl
fmull
testl
test
roll
xor
mov
repnz
ret
lods
xorb
add
jle
ret
ja
and
gs
dec
sub
jnp
in
adc
leave
sub
cmp
adc
dec
jae
lods
mov
idivl
test
mov
mov
cmp
scas
cmp
or
add
or
or
mov
push
pushf
xor
inc
adc
and
lahf
ds
pop
aas
mov
xchg
fsubs
inc
dec
lahf
repz
adc
pop
popa
jl
je
shr
and
push
dec
xchg
mov
dec
neg
dec
adc
daa
jne
pop
outsb
mov
mov
fmul
gs
mov
loopne
insb
and
xor
cmpsb
js
xchg
sti
mov
sti
imul
fucom
mov
enter
mov
daa
and
clc
repz
cmp
adc
int
mov
or
pop
int
aaa
insb
fadds
or
adc
out
daa
inc
adc
cmp
pop
xlat
and
sub
imul
test
pop
adc
push
sahf
pop
jp
cmp
push
adc
mov
scas
aam
jle
cwtl
enter
out
lds
sub
arpl
cmp
jg
push
jb
and
push
aaa
and
fs
mov
rcrb
arpl
and
xor
xchg
les
es
popa
fs
inc
push
xor
clc
popa
cwtl
mov
mov
popa
jo
push
jb
jp
jno
sti
imul
mov
jnp
scas
imul
xor
ljmp
mov
stos
out
lret
mov
fstpt
jmp
daa
mov
outsb
cmp
sbb
cmp
lea
enter
out
inc
pop
out
lahf
cmp
pop
imul
mov
stc
add
or
pop
int
mov
pop
sahf
bnd
add
mov
mov
movsb
es
and
pop
aas
stos
fistl
unpcklps
cmp
jecxz
popa
push
or
mov
addr16
or
stos
ss
sub
add
pop
sbb
lret
stos
or
lret
mov
push
lods
pop
dec
sub
mov
add
mov
lahf
push
rolb
movsb
and
push
adc
ret
mov
jno
jge,pn
inc
sbb
rcr
or
adc
inc
rorb
loopne
push
lock
and
jns
adc
aad
imul
daa
aad
mov
push
xor
ficoms
mov
lds
push
imul
dec
int
jnp
jns
lds
pop
and
out
daa
imul
mov
cmpsl
imull
sub
pop
or
push
sti
pushf
mov
adc
lods
add
pushf
arpl
xchg
and
dec
xchg
xchg
lds
add
cld
pusha
mov
popf
lret
ss
ss
jo
push
pop
sbb
xor
jle
addr16
sarb
xchg
lret
push
lds
test
lcall
addr16
rorl
pop
frstor
adc
nop
testb
cli
out
sbb
daa
add
inc
mov
divl
xchg
pop
and
or
push
mov
push
movsl
rclb
jnp
xchg
push
pop
sub
mov
pop
icebp
dec
pop
push
dec
mov
xchg
mov
roll
lods
jecxz
jge
sub
movsl
pop
jb
jl
jne
or
sbb
push
out
or
cwtl
add
jbe
add
mov
das
xor
outsb
mov
dec
xor
push
xchg
rorl
jle
fldln2
testb
and
ds
imulb
mov
dec
repz
dec
sbb
jb
jb
testl
addr16
stos
mov
test
adc
mov
rorb
push
and
scas
xor
or
fiadds
das
out
xchg
and
jnp
pushf
sbb
push
sbb
outsb
fdivl
out
cltd
enter
cmp
push
jo
outsl
das
pop
mov
sbb
mov
mov
in
or
test
pop
lret
mov
lods
cmpsb
out
popl
outsb
jne
divl
aas
je
fnstsw
adc
mov
jne
aad
out
xchg
or
jo
divl
ljmp
inc
add
pop
jmp
adc
jg
mov
push
lock
inc
xchg
xchg
jno
sub
adc
aad
sub
leave
xchg
out
mov
cmc
mov
xor
lret
std
cld
imul
mov
popf
cli
cmp
repz
ss
pop
ja
xchg
add
stos
mov
xchg
nop
mov
add
pop
jmp
cltd
leave
cmp
mov
jg
repnz
lcall
fstpt
pop
loopne
xor
mov
cmp
bndstx
notl
mov
loopne
fcompl
dec
sbb
leave
outsl
cmpsl
mov
mov
jbe
mov
pop
in
push
in
sub
jnp
les
mov
mov
or
xchg
aaa
pop
daa
mov
inc
xchg
pushf
movb
or
loopne
mov
and
gs
cmp
jl
xchg
jle
sub
or
xchg
mov
lods
xchg
fmuls
adc
aam
aam
jno
int
inc
je
add
dec
pop
int3
pusha
ret
icebp
cmpsl
imul
jb
lret
fldcw
add
cmp
push
adc
or
repnz
aas
inc
and
adc
bound
hlt
push
andl
fcmovb
clc
pop
bound
insb
push
adc
fnstsw
mov
sub
pusha
dec
inc
mov
add
daa
jge
add
lock
adc
ret
nop
and
cmp
adc
aaa
movl
push
push
clc
lret
pop
sub
out
test
push
adc
adc
dec
xor
into
xchg
and
mov
lret
mov
push
rcl
adc
xchg
pop
mov
hlt
or
pop
sub
loope
mov
jb
lret
sub
mov
cmpsl
rcrl
sbb
push
les
pushf
xor
fwait
repz
stos
xchg
jmp
jne
aad
popa
adc
mov
hlt
push
bound
daa
push
mov
loope
cwtl
cmp
ror
jp
sbb
mov
inc
subb
mov
ret
bound
outsb
push
adc
pop
loopne
sub
mov
sub
and
aad
xchg
lret
pop
mov
push
dec
add
adc
sub
mov
push
mov
or
bound
add
adc
cmp
add
cmp
cmp
sbb
cmp
inc
mov
adcl
lahf
aad
xchg
mov
pop
adc
out
lea
iret
pop
adc
insb
idivb
in
push
jle
vmread
pop
adc
cmc
call
mov
pop
aas
in
adc
sbb
jle
repz
lret
or
adc
xlat
sub
mov
ss
xlat
jne
fistl
jnp
icebp
out
cmc
xor
adc
popf
inc
mov
cli
imul
adc
aas
std
cmp
sbb
int
ds
std
lahf
call
aas
and
mov
aaa
movsb
mov
aas
jle
jp
loope
gs
jge
popf
loop
in
pop
adc
mov
push
imul
pop
jbe
dec
push
push
inc
pop
cmp
stc
repz
out
mov
sbb
jmp
mov
or
xor
iret
sbb
jne
inc
out
fnstsw
ss
add
adc
daa
int3
pop
xor
cmp
clc
and
mov
jge
push
mov
mov
mov
leave
adc
inc
sbb
or
ds
stc
iret
lahf
ds
enter
sarb
test
or
pop
adc
xchg
movsb
mov
xor
in
jge,pt
in
fnstsw
filds
adc
leave
adc
inc
sbb
or
ds
lret
ds
lods
or
and
arpl
sub
fs
push
sub
pop
dec
jo
inc
out
sahf
mov
fnstsw
cmp
pop
adc
xchg
movsl
mov
aaa
jecxz
pushf
cmp
aaa
dec
jbe
aam
push
xchg
rolb
adc
scas
in
dec
pop
clc
jno
aas
sub
sahf
pop
jnp
icebp
add
mov
add
out
adc
mov
std
cmp
repnz
xor
mov
pop
adc
pop
mov
aad
lods
leave
sbb
ss
hlt
jne
loopne
aas
rcr
fwait
sbb
cli
pop
adc
scas
scas
push
out
cmc
inc
outsl
jno
dec
dec
pop
inc
and
lret
cmp
xchg
adc
data16
xchg
mulb
dec
negl
or
fiaddl
adc
cmp
pushf
movq
sub
pop
sbb
jle
push
lods
and
cld
pusha
mov
mov
out
sub
mov
and
push
dec
mov
xchg
jge
inc
jo
in
and
inc
push
mov
push
jbe
sub
fnsave
cmpsb
add
std
divb
cmp
mov
cld
add
ljmp
jge
cmpsb
push
loopne
push
std
cmpsl
cwtl
ss
push
mov
outsl
xor
adc
push
cmp
adc
sbb
mov
rep
sbb
mov
xlat
fsubs
sub
mov
test
push
xor
in
call
pusha
bound
fsts
adc
pop
shlb
cmp
shl
add
call
adc
lds
sahf
loop
addr16
xchg
mov
pop
jns
imul
in
dec
mov
outsb
stc
std
push
nop
sti
aas
cmpsl
mov
jns
mov
cmpsl
mov
adcb
push
adc
std
test
out
pop
jle
push
fs
lea
ja
scas
xlat
xor
movsb
dec
mov
fwait
cs
cmp
jge
arpl
adc
lahf
push
lock
dec
outsl
and
ljmp
jae
test
mov
iret
arpl
mov
sub
pop
inc
push
arpl
mov
mov
mov
pop
adc
cs
adc
xchg
cmp
inc
mov
fwait
cs
jo
pop
push
enter
lcall
jmp
push
cvttps2pi
dec
test
xchg
sub
gs
bound
cmp
jle
sbb
pusha
push
cmp
ret
pusha
jge
aaa
popa
ret
sbb
bound
pop
pop
or
minps
add
xor
cwtl
and
cmp
test
stos
add
sti
sub
mov
xchg
repnz
xchg
adc
xor
cmp
ss
xor
pop
mov
cmp
imul
fnstenv
imull
push
adc
clc
mov
lahf
mov
mov
ficoml
adc
test
jecxz
adc
scas
or
xchg
outsl
out
sbb
jno
aaa
lcall
pop
mov
xor
lahf
insb
testl
not
pushl
pop
sti
adc
mov
xchg
lods
xchg
sbb
daa
movsl
divb
iret
lahf
ds
cmp
and
lock
movsl
jl
fwait
inc
fisubrs
shll
sbb
pop
popa
inc
inc
mov
fistps
and
cmp
add
insl
jb
adc
inc
pop
xor
cs
jle
mov
aaa
cmp
mov
and
mov
inc
sub
push
loope
sub
loope
add
fwait
stc
push
bound
adc
xor
mov
ljmp
xchg
xchg
in
test
add
xchg
movsb
je
sbb
fidivl
lock
fstpt
mov
push
cltd
mov
cltd
jmp
sub
xor
clc
repnz
subl
sbb
out
popf
lahf
push
cltd
je
daa
pop
mov
adc
mov
sti
lock
cmp
mov
daa
sub
fld
jmp
int3
testb
idivl
cltd
mov
aam
pop
in
shrl
lods
ret
xchg
fdiv
icebp
cmpsl
std
push
add
aad
fnsave
popf
leave
jo
lahf
ret
jae
mov
lret
jge
sbb
lods
loope
lahf
out
xchg
cmc
adc
inc
sti
out
dec
imul
add
dec
dec
cwtl
mov
dec
mov
inc
pop
shll
mov
std
mov
push
cmpsl
push
mov
daa
dec
inc
movsl
popf
or
pop
add
fistpl
std
inc
pop
sar
mov
or
in
cmp
lret
mov
lods
jle
mov
inc
fstps
mov
jmp
push
ret
cmpb
clc
add
loopne
jg
stos
lea
sbb
push
xchg
sti
into
js
lods
notb
dec
pop
sbb
inc
sbb
xor
std
add
cmp
push
pop
sub
sti
aaa
divl
jb
sbb
insl
jbe
aas
das
jecxz
lret
push
jno
push
xchg
movzbl
into
scas
jg
test
js
sub
sub
leave
in
push
fldcw
jnp
push
test
pop
cmpsb
push
das
out
mov
push
adc
or
das
mov
or
xchg
mov
nop
leave
call
xchg
pop
cs
js
sub
or
int
adc
outsb
stc
jl
push
popf
xchg
jo
cmp
in
adc
push
push
jge
cmp
and
mov
jno
sbb
push
ret
imul
push
inc
or
cmp
xchg
pop
lds
shr
xchg
push
xor
dec
cmp
add
lret
std
fistl
sahf
and
cwtl
sbb
or
mov
and
stos
popa
ret
add
cmpl
inc
sub
push
dec
das
xchg
lds
ret
lock
js
mov
jnp
mov
mov
mov
popa
fadd
mov
rolb
lock
inc
adc
inc
sbb
jns
movsb
add
pop
sbb
cmp
int
push
loopne
movsl
lret
lea
push
dec
pop
hlt
adc
jns
fucomi
inc
mov
movsl
rcll
shlb
pop
add
dec
mov
cli
add
mov
mov
sub
cwtl
dec
sahf
dec
cmp
inc
jb
insb
add
pop
adcl
mov
mov
adc
in
lods
or
das
stos
jp
fildl
mov
xchg
adc
push
sub
pop
fwait
ss
lea
mov
testb
and
add
out
inc
test
mov
idivb
pusha
dec
pop
out
jl
stc
scas
mov
xor
es
push
enter
outsl
xlat
insb
sahf
push
or
mov
test
in
in
sub
scas
or
std
cmpsb
out
mov
xor
scas
sbb
and
pop
cli
jl
push
dec
popf
stos
mov
mov
lahf
mov
inc
mov
jle
xchg
inc
push
adc
xor
imull
repnz
mov
mov
out
daa
mov
mov
addl
scas
add
shl
xlat
push
sbb
dec
fwait
mov
mov
push
test
loop
adc
jg
mov
mov
cmp
adc
in
mov
cmp
in
mov
lcall
sbb
mov
push
lahf
mov
clc
icebp
outsl
mov
jge
fadds
les
out
lods
adc
sbb
movsl
popf
mov
cmc
jno
loopne
test
js
lock
jb
add
xor
mov
sbb
es
in
jge
or
fmul
lock
roll
inc
mov
pop
jo
shrb
ret
jge
and
dec
insb
testl
mov
icebp
imul
das
enter
jo
idiv
pop
mulb
adc
addr16
push
jns
mov
mov
add
or
les
and
push
movsl
lea
xchg
cwtl
in
mov
fdivl
xchg
rcll
inc
xchg
lea
rol
xorb
fistpl
add
mov
neg
call
add
or
pop
mov
sbb
sarb
pop
xorb
out
sbb
dec
adc
std
sub
out
pop
repz
cmp
outsl
jmp
mov
xor
test
clc
addr16
dec
push
into
dec
xchg
sbb
xchg
jno
daa
data16
psllq
pop
roll
fcoml
inc
hlt
iret
sbb
sub
loope
enter
ljmp
insl
cmp
push
scas
cmp
push
inc
pop
popa
ret
cmp
std
sbb
inc
nop
add
adc
aad
dec
repz
and
xor
shlb
int3
inc
call
popa
xor
mov
setl
icebp
mov
lock
movsb
or
fsubrs
test
sbb
cmp
xchg
mov
adc
popa
insb
ss
adc
es
test
dec
in
push
notl
subl
and
fwait
lcall
cmp
pop
jmp
dec
imul
lret
xor
bound
out
mov
std
out
test
cltd
pushf
sub
lret
stos
dec
xchg
mov
out
repnz
ficompl
sti
outsl
jo
lret
mov
pop
vpmacsdql
negb
push
imul
push
call
test
sahf
std
jecxz
icebp
stc
cmc
sti
jle
faddp
jno
fs
dec
jb
adc
pop
push
fldenv
xchg
lcall
ljmp
pop
or
xchg
inc
repz
scas
addr16
cmp
jae
dec
xchg
cmc
sti
pop
dec
adc
sub
fidivs
inc
cld
ret
hlt
daa
lret
scas
cltd
out
mov
mov
mov
out
movsb
test
mov
jp
lods
jb
movlps
xorb
cwtl
mov
stos
shrl
in
repnz
leave
int3
jns
xchg
fs
icebp
repz
enter
out
mov
and
enter
sarl
scas
and
mov
mov
ja
sbb
shrl
les
lret
test
or
jp
push
xchg
fists
hlt
std
jl
stc
stos
clc
movsl
fbld
sbb
dec
out
bswap
in
lahf
mov
sbb
pop
jl
int
lret
test
mov
rcrl
push
insb
fcoms
bound
cltd
fildll
shlb
sti
push
push
aad
adc
rcr
insb
bnd
sbb
imul
add
stos
int
mov
xchg
mov
mov
pop
dec
daa
insb
fsubs
or
mov
adc
stc
mov
test
adc
inc
lcall
lock
or
ja
stos
add
insl
sbb
popf
call
mov
inc
pusha
dec
jb
cli
push
adc
scas
mov
call
pop
jmp
fsubrl
push
dec
out
mov
adc
repz
les
mov
into
inc
adc
or
dec
or
xor
mov
ja
test
jmp
adc
dec
nop
mov
outsb
inc
shlb
pop
jno
xchg
ror
out
sbb
scas
stos
mov
push
jp
lcall
sbb
scas
out
push
jle
sbb
adc
es
cltd
pop
popf
mov
popf
push
add
jno
into
or
ja
sbb
test
fistl
xchg
mov
xchg
hlt
loop
xor
xchg
cmpb
dec
in
xor
and
jnp
push
ja
push
or
insb
jmp
rcrl
mov
pusha
shlb
fiadds
pop
sub
or
mov
ljmp
scas
and
int3
fs
mov
pop
sahf
arpl
add
fcomps
aas
xchg
lcall
orl
adc
cltd
sahf
cmp
shll
int3
jno
sub
jp
imul
lock
lock
cmpsb
jbe
test
xchg
loop
adc
xor
jo
add
fwait
lahf
dec
in
xor
or
lods
push
mov
int
adc
pushf
sub
ret
push
dec
int
jnp
jge
xchg
imul
out
pusha
add
push
xchg
xchg
fs
in
sbb
pop
add
mov
mov
mov
inc
mov
xchg
mov
inc
mov
jg
sub
ficomps
mov
jl
cmp
dec
aas
inc
insb
cmp
in
clc
dec
hlt
idivb
call
mov
push
mov
std
xor
cmp
adc
push
pushf
fsubrs
pop
gs
aas
dec
pop
aaa
subl
mov
fwait
lret
fstpl
repnz
xchg
jbe
push
cli
fs
fsts
pop
outsl
lcall
and
add
add
sti
jle
andl
fldl
xor
pop
dec
aam
jae
inc
cmp
xchg
add
mov
daa
maxps
out
hlt
xchg
cmp
adc
xor
jl
mov
push
jae
or
aam
data16
adc
jle
shll
pop
insl
jl
andl
shrb
rorb
inc
push
ja
adc
js
rorb
cwtl
inc
je
push
push
pop
mov
mov
dec
je
repz
xor
addb
loope
mov
and
or
pop
cmp
fcomps
adc
cmp
addb
fdivl
cmp
sbb
test
imul
rolb
xchg
ror
or
and
test
ss
sbb
mov
das
cmp
adc
push
fwait
mov
cwtl
dec
pop
out
pop
negb
js
mov
aas
and
rolb
pusha
dec
lea
arpl
mov
inc
test
lds
mov
loope
jno
mov
sbb
adc
test
nop
imulb
jae
jmp
mov
mov
dec
push
dec
mov
add
stc
pusha
adc
cmp
xchg
cs
add
and
ret
stos
add
and
sbb
pusha
rorl
jl
cmp
lcall
jmp
aaa
fdivs
mov
jmp
cmc
sub
aad
xchg
aad
fdivl
mov
inc
test
popa
push
sahf
fwait
ss
iret
push
rol
addl
fcmovnb
js
shlb
inc
stc
outsl
out
mov
daa
dec
lcall
orb
sbb
je
aas
stc
hlt
mov
fwait
sbb
pop
arpl
pop
ja
icebp
in
cmp
mov
adc
xchg
jl
or
cs
sarl
jnp
sub
cmp
cmp
aaa
jmp
jnp
cmp
adc
popa
xchg
mov
data16
sti
push
mov
test
int
mov
xor
notrack
xchg
lods
out
xchg
or
mov
and
arpl
xchg
cmp
mov
dec
addb
cmp
outsl
fidivrl
mov
lcall
jl
xor
out
and
iret
mov
aaa
and
and
js
mov
sbb
cwtl
fmull
std
lods
mov
push
mov
in
and
sarb
jg
xchg
popf
xchg
subb
sahf
xchg
mov
fsubr
add
pop
xchg
mov
in
dec
jge
cmpsl
sub
mov
fiadds
int3
sahf
out
adc
hlt
push
jbe
pop
nop
test
adc
sbb
fildll
insl
popa
out
andnps
sub
adc
inc
mov
into
push
aad
mov
xlat
sarl
sub
mov
pop
push
aam
dec
and
jno
ret
inc
lahf
stos
movsl
pop
filds
lcall
cmp
ljmp
rcr
loope
jle
jg
scas
cmpb
push
in
jo
lret
adc
popa
mov
lret
inc
and
cltd
jl
repnz
xor
cmpsl
jge
imul
mov
lret
incb
jne
jmp
sub
ret
sub
xchg
mov
sub
dec
movsl
cmp
call
pop
and
int
fadds
mov
xchg
out
out
mov
daa
add
dec
sti
adc
mov
sub
and
mov
and
popf
dec
or
sbb
mov
addr16
xor
sub
arpl
aam
push
push
adc
pop
das
jg
pop
adc
pop
mov
les
les
fstpl
test
or
inc
popa
jecxz
dec
fcomip
sub
xor
jle
mov
dec
das
nop
popa
divb
test
lea
lcall
adc
push
xchg
stc
stc
sub
andl
xchg
cmpsb
mov
mov
clc
lods
mov
add
xor
daa
fistl
xor
fwait
sbb
je
cmp
or
adc
idivb
cld
jmp
jmp
outsl
mov
and
xchg
jb
pavgb
mov
mov
add
shlb
dec
pop
call
pusha
dec
jns
cs
sub
pop
ss
sbb
sti
xor
insb
scas
cmp
jp
xchg
cld
jne
mov
mov
jae
cltd
rorl
insb
push
dec
cmc
orl
incl
insl
mov
pop
jmp
and
xorb
out
aaa
cmp
call
sti
mov
sbb
jge
aad
imul
cmpsb
jb
fmull
mov
add
mov
push
mov
mov
jbe
sub
sub
and
fiaddl
shl
imul
pop
in
insb
fadd
shrb
inc
mov
xchg
inc
cwtl
add
push
cld
jge
scas
mov
ljmp
mov
mov
adc
adc
xor
mov
pop
gs
mov
adc
out
lea
and
cmp
in
lret
mov
jne
jmp
rolb
xchg
fdivrl
daa
into
sbb
iret
sti
xor
jbe
jle
xchg
adc
mov
push
adc
xor
mov
out
cwtl
sbb
mov
jmp
test
jl
mov
scas
dec
xlat
inc
mov
sbb
lret
ljmp
pop
lahf
idivb
xor
mov
nop
ror
test
lock
xchg
test
rcl
or
test
inc
adc
pop
cmp
adc
jns
add
jmp
ret
jmp
mov
lds
jecxz
pop
into
add
inc
aam
ljmp
gs
ss
or
mov
xor
cmp
jbe
dec
sbb
or
adcb
mov
push
adc
inc
cmpsb
pusha
insl
imull
push
subl
mov
stos
test
xor
jnp
sub
sub
iret
dec
lahf
or
pop
and
sub
jns
jle
add
out
mov
sub
pop
mov
pop
cmp
adc
dec
mov
fstl
add
daa
shl
mov
lds
sub
fcmovnb
mov
jge
mov
aaa
lods
enter
add
lods
ret
lahf
or
fistl
push
adc
cmc
std
movsb
xchg
jb
mov
mov
icebp
clc
lds
das
xchg
mov
mov
push
imul
add
mov
cmpsb
or
sti
xor
and
xchg
push
dec
fwait
push
and
mov
push
adc
xor
inc
pop
loopne
nop
lret
xor
fwait
repnz
movsb
cli
imul
iret
imul
xorl
ds
mov
sub
orl
in
adc
xchg
test
jle
xchg
inc
mov
jmp
insb
xchg
es
rorb
and
dec
int
cmpsl
fucom
sbb
adc
cld
push
cmp
lea
fmulp
dec
pushf
dec
xor
sbb
or
jae
mov
push
or
popa
imul
dec
sub
enter
outsb
pop
jnp
and
shlb
fisubrs
rolb
cmc
push
xchg
imul
jo
cwtl
push
insb
add
cmpsl
iret
pop
mov
insb
and
rorl
or
sub
push
inc
push
incb
inc
fwait
ss
pop
push
cld
sub
fists
sub
aad
mov
pop
ss
in
cld
pusha
inc
xchg
scas
pop
fwait
mov
adc
cmp
xor
sub
jge
pop
jmp
lods
and
gs
rcll
add
pop
xor
test
out
fnstsw
ljmp
outsl
and
inc
ja
and
push
sbb
lahf
incb
hlt
fwait
rolb
out
pusha
mov
and
adc
sbb
xchg
movsb
mov
dec
jno
mov
insb
add
and
pop
dec
mov
pop
enter
aad
stos
and
std
stc
repz
cltd
dec
jb
and
jne
adc
imul
fnstenv
pushf
ret
out
mov
xor
xor
jmp
and
inc
jnp
lds
mov
cmp
lods
mov
mov
jle
cld
stc
jo
fsubrp
xor
push
js
sub
nop
jp
in
pop
dec
imul
add
or
or
sub
mov
imul
pop
dec
jg
sbb
add
rolb
notl
rcr
aaa
aas
out
outsb
repz
ja
dec
sahf
mov
sbb
arpl
aam
pop
cmp
dec
adc
sbb
movsb
jno
addb
dec
loope
cltd
mov
pop
rcll
jmp
and
jb
xchg
fnstenv
cmc
ljmp
mov
jge
mov
pop
jns
mov
pop
lods
pop
push
jns
repnz
fs
cmp
pop
fucomi
into
pop
adc
dec
xchg
loope
mov
out
es
jns
popf
loopne
add
push
jb
and
sti
sub
inc
push
jge
das
test
ret
jge
cmp
push
cltd
test
test
xor
out
and
mov
push
push
ja
aam
inc
loope
pop
ljmp
sub
push
cmp
cmp
les
or
ds
dec
jbe
jg
out
add
cld
outsl
sbb
xchg
daa
dec
xor
xor
or
mov
ret
push
daa
pop
scas
es
sahf
data16
lods
arpl
add
cld
pop
pop
push
pusha
imul
push
pop
fs
dec
movaps
push
enter
sti
lret
dec
dec
jl
cmpsb
div
sarb
xor
inc
cmp
xchg
cmp
lods
mov
adc
sahf
mov
es
ret
lock
das
movsb
xorb
mov
outsb
inc
pop
movsb
shrl
gs
jns
rol
idiv
add
mov
dec
pop
leave
jge
add
frstor
lods
test
pop
imul
push
pop
lret
stos
mov
sub
dec
xchg
notl
and
hlt
setne
aad
xor
sbb
mov
pop
push
push
xchg
sub
lods
sub
aas
jp
jg
push
jle
xchg
movsl
lret
dec
or
cmp
pop
push
mov
add
cli
adc
mov
mov
push
getsec
add
or
mov
ja
xchg
add
cmp
cwtl
jmp
stos
sahf
jle
dec
mov
or
js
pusha
add
mov
test
jo
sahf
inc
push
xor
jns
cmpsl
sti
mov
shlb
jae
in
jb
negb
in
icebp
mov
test
enter
push
rorl
lods
jnp
out
jecxz
andb
inc
add
jnp
jne
aaa
pop
pop
push
adc
mov
bound
testl
fwait
mov
repz
adc
push
adc
mov
push
lcall
jbe
in
aas
divb
pop
and
mov
mov
test
sbb
mov
push
jg
mov
setnp
ret
jp
and
add
paddsw
aaa
aas
enter
adc
jne
imul
jmp
mov
aad
pop
mov
mov
xor
rolb
fcmovb
jle
or
shrl
mov
in
es
sub
mov
jl
cltd
out
push
xchg
push
or
and
cmp
xchg
pop
xchg
fwait
ss
push
pop
sbb
jbe
icebp
or
lods
incb
adc
inc
jp
pop
inc
add
stc
loope
fdivs
fisttpll
xor
sbb
inc
je
xlat
scas
mov
dec
lods
loopne
insb
mov
rolb
mov
lret
pop
adc
push
mov
clc
mov
fcmovb
js
push
cmpxchg
or
shrb
pusha
shl
fists
and
in
pop
sub
test
popa
pop
mov
les
or
push
or
push
mov
mov
out
lahf
and
mov
push
push
adc
jb
xchg
pop
mov
xchg
scas
jno
and
cmp
mov
pop
testl
jne
dec
pop
les
pusha
into
mov
xchg
shll
sbb
xor
xchg
mov
or
insb
xchg
loop
or
lcall
ss
in
push
fs
scas
cwtl
cmp
jo
adc
insb
mov
out
hlt
imul
pop
push
ret
pusha
ljmp
pop
lahf
notl
add
sbb
aas
jg
bound
shrb
add
test
clc
lods
or
test
lods
fldt
jno
cmp
test
in
inc
sbb
mov
cmpsl
les
and
cmpsl
in
shll
in
jb
je
and
outsl
jne
push
es
or
xchg
aaa
dec
sub
cmp
jo
cmpsl
pop
out
mov
mov
sub
nop
cltd
jbe
jge
xchg
stos
cli
rol
cmpsb
call
jo
xor
mov
adc
cwtl
lea
cltd
xor
mov
cmp
int
fdiv
sbb
xchg
bound
movsl
in
and
push
hlt
mov
sahf
mov
jmp
add
lods
dec
mov
in
pusha
jp
inc
sub
mov
jb
pop
xchg
sub
inc
mov
adc
push
mov
push
rorl
insb
sub
fs
add
repz
or
scas
mov
jge
loope
push
adc
gs
adc
negb
mov
lock
sub
pop
mov
pop
cli
dec
mov
adc
lret
cmp
mov
dec
xor
or
cld
push
rcrb
adc
adc
sub
xor
pop
fsubr
call
mov
mov
das
into
xchg
stos
sbb
pop
mov
ss
mov
shrl
push
jnp
ficomps
aas
int3
xor
mov
std
mov
stc
loopne
and
shlb
jge
and
pop
adc
pop
cli
stos
cmp
lods
in
pop
sbb
nop
and
in
inc
or
in
leave
sbb
xchg
mov
mov
or
fwait
sub
xor
jns
and
jae
test
insb
ja
sbbl
adc
sbb
jae
inc
mov
lods
xlat
movsb
decb
pop
lds
maxps
pop
enter
cmp
nop
int
jle,pt
out
hlt
test
lret
jo
add
push
jp
test
xchg
xchg
mov
shlb
ret
jmp
data16
bound
cld
pop
pop
loopne
or
and
loopnew
mov
loopne
dec
ss
fdivrs
xchg
push
jecxz
push
or
mov
or
and
sbb
mov
adc
stos
mov
mov
lret
pusha
roll
mov
inc
jl
push
out
lods
scas
pop
push
mov
jo
xlat
sbb
pusha
mov
rorl
adc
iret
jae
push
xchg
leave
dec
fwait
ss
lods
xorl
jp
pusha
roll
add
pop
loop
aad
push
adc
inc
outsl
fcomps
or
xor
or
or
xchg
mov
sub
inc
test
mov
aaa
add
shrb
pusha
rorl
je
aad
add
out
xor
test
cwtl
sti
aas
loope
insb
fdivs
test
sbb
adc
incb
or
mov
mov
and
inc
push
cmpxchg
and
pop
mov
sti
imul
push
testl
leave
mov
inc
jg
push
int3
imul
inc
fldcw
sub
push
lea
shrb
mov
sarl
and
mov
mov
call
pop
jns
jno
notl
inc
popa
nop
mov
test
jecxz
push
jp
gs
sar
add
xchg
adc
test
and
jg
pop
sub
mov
mov
mov
enter
jbe
icebp
cltd
mov
adc
stos
add
and
or
cmp
adc
mov
jecxz
mov
ret
jno
and
leave
jbe
mov
loopne
lods
sbb
pop
adc
pop
clc
or
stos
xlat
xchg
cmpsb
out
cmp
pop
and
clc
notb
cmpsb
pop
int
xchg
out
and
xor
mov
imul
aaa
push
pop
test
and
sbb
rolb
or
call
into
mov
sbb
pusha
push
adc
testb
mov
std
fistpll
adc
test
mov
imul
imul
aad
cmp
adc
bound
add
lods
outsl
addr16
mov
loope
sti
mov
xchg
xchg
out
scas
nop
xor
push
scas
add
xchg
lret
mov
movsb
mov
cmp
lret
sub
test
lahf
aad
sub
inc
adc
movsb
mov
xchg
dec
fnstsw
int3
inc
ds
mov
lods
fnstsw
mov
mov
cli
mov
subl
sbb
push
sbb
roll
lret
xor
js
xor
mov
push
iret
pusha
sbb
xchg
xchg
mov
pop
mov
dec
outsl
mov
push
popa
sub
push
adc
pop
decb
cmpsb
dec
cs
jns
xchg
mov
shl
pop
dec
jno
jno
push
mov
movsl
int3
sbb
popa
xor
pushf
push
fimull
inc
insb
cmp
loope
mov
mov
xor
in
out
arpl
pop
pop
mov
iret
mov
fcomps
mov
push
outsl
pop
out
mov
jo
push
xor
cmp
adc
jp
mov
stc
imul
pop
adc
add
ret
enter
pop
rcrb
insb
jg,pn
inc
cwtl
roll
mov
push
subb
add
dec
cmc
add
rorl
xorl
lcall
xor
call
enter
call
add
push
sbb
xchg
inc
ret
hlt
fistpl
jne
jo
add
fisubl
aad
int
cmpsb
mov
inc
adc
stos
aas
pop
ret
imul
adc
jno
outsl
push
cmp
adc
hlt
in
mov
dec
jg
dec
lahf
aas
mov
mov
repz
push
mov
inc
test
ss
iret
pop
rolb
das
mov
pop
xor
xlat
inc
push
roll
pop
lret
loope
arpl
idivl
sbb
addb
mov
scas
pop
xor
cli
outsl
outsb
fs
xchg
aaa
cmp
stc
repz
cltd
mov
xor
out
fnstsw
lret
scas
pop
lods
lock
jl
mov
inc
push
xor
jb
mov
std
jp
cmpl
adc
dec
fwait
mov
rolb
sub
nop
mov
add
cmp
cmc
cmp
shrl
popa
icebp
or
xor
mov
push
daa
gs
push
xor
and
pop
lea
mov
repz
mov
fs
push
adc
push
lods
mov
fnstenv
mov
iret
mov
adc
or
daa
inc
mov
push
mov
sbb
push
xchg
inc
dec
fwait
lcall
add
xor
xor
push
jo,pt
sub
xor
xchg
cmp
popa
mov
stc
add
test
inc
mov
mov
movsl
adc
cwtl
xor
cmp
insb
mov
divb
push
and
fwait
fwait
push
push
cmpsl
ss
sbb
dec
xor
and
mov
or
mov
sbb
xchg
hlt
mov
or
rclb
int3
lea
outsb
pop
cwtl
sbb
xchg
or
sahf
adc
fisubrl
mov
nop
cmp
lds
dec
add
arpl
mov
mov
aaa
in
stos
add
repz
adc
test
cmpsl
fstp
insl
lea
mov
lcall
sub
imul
scas
push
lods
or
push
aaa
fwait
mov
insb
std
cmp
fsubrp
subb
jmp
lea
into
out
daa
jne
mov
push
inc
lods
mov
fistpl
loope
aaa
xlat
add
imul
inc
mov
movsb
jp
addl
mov
stos
or
xchg
cmp
adc
mov
rcrl
aam
sarb
jno
sub
jne
adc
or
add
mov
cmp
mov
push
push
rcl
push
xchg
lds
flds
lea
jb
sbb
ss
inc
push
sbb
call
rorb
mov
mov
aad
jo
xchg
daa
xchg
sti
aas
jge
cli
mov
std
dec
notl
out
sbb
icebp
add
sahf
test
dec
daa
pop
and
mov
xor
cmp
jle
mov
arpl
dec
out
add
clc
inc
insb
inc
cmpsb
xor
adc
ficoml
inc
lcall
or
sub
dec
jp
enter
push
ret
call
fildll
subl
push
cli
daa
xchg
inc
add
addr16
jmp
mov
push
sub
shll
hlt
outsb
push
mov
jmp
dec
rclb
xor
inc
mov
mov
cmp
outsl
inc
mov
gs
adc
out
push
andb
xor
scas
cmp
mov
cmp
mov
xchg
jnp
addb
lea
push
adc
cld
outsl
cwtl
mov
pusha
and
xchg
cwtl
cltd
cmp
aam
ja
pop
mov
cmpsb
loop
lds
pusha
rorl
pop
cmp
adc
test
scas
out
test
lods
loopne
and
addl
adc
mov
jb
dec
in
push
xchg
fdivs
push
or
inc
add
addb
pop
mov
aad
mov
jecxz
insb
fadd
adc
addl
arpl
cmpb
and
loope
ljmp
dec
fwait
and
inc
dec
lahf
mov
push
lahf
adc
xor
and
pop
test
adc
fdivs
adc
jno
pusha
insl
pop
cli
jp
cmp
ljmp
dec
jmp
pusha
outsl
adc
jb
cmovle
xorb
and
add
cld
popa
pushf
add
jnp
sub
movl
ljmp
xchg
out
and
fnstenv
stc
or
xor
cmp
mov
fwait
or
es
xor
ret
xorl
outsb
pop
out
jl
xor
and
movsl
test
adc
mov
cld
pop
or
addb
addr16
inc
xchg
pushf
shll
call
popa
iret
sbb
movzwl
sbb
mov
mov
mov
adc
sbb
add
pushl
inc
fnstcw
fwait
stc
call
enter
idivb
add
popf
xor
leave
dec
lods
cmp
stos
sti
mov
push
mov
scas
xchg
imul
aad
stc
imul
bound
repz
insl
test
daa
mov
sbbb
ja
xchg
dec
int3
cmpsl
outsb
add
push
adc
or
fcompl
testl
pusha
push
pop
ret
jmp
push
or
js
call
mov
lret
fidivrl
leave
lds
cli
std
cs
jmp
and
xor
mov
outsl
mull
xchg
jge
mov
sbb
bound
xchg
std
push
fsubl
pop
shrl
sar
enter
push
add
adc
mov
fiadds
fs
or
push
xchg
adc
iret
scas
mov
sbbl
pop
in
fldenv
stos
sti
cmc
pop
xor
scas
jno
push
ljmp
sub
add
jg
dec
cmc
lret
sbb
pushf
mov
lahf
xor
mov
jb
movsl
fisttpl
in
mov
lods
pop
cmp
insb
jne
leave
dec
movsb
sbb
sbb
xor
xchg
jb
xchg
idivl
stc
and
outsl
cmp
mov
fimull
jb
xor
call
loope
jbe
aad
sahf
stos
push
rolb
jno
mov
testb
notb
cmovne
cmpsb
xor
movsl
loop
repz
sti
jbe
dec
stos
fiaddl
sub
sbb
fstpl
dec
mov
ret
je
inc
or
add
pop
xor
shlb
inc
xchg
mov
aam
sub
outsl
fwait
pop
stos
or
pop
outsb
aad
cmp
cld
or
mov
push
and
or
negl
jge
ret
sbb
shlb
inc
jl
sub
subb
jp
add
xor
cwtl
testb
mov
shl
lods
xchg
fwait
mov
jg
cmp
push
dec
nop
mov
xchg
xchg
mov
outsb
push
in
nop
dec
ret
pushf
fiaddl
jl
movsl
insb
mov
pop
addr16
push
cld
sahf
aas
xchg
sub
pop
jmp
ljmp
inc
test
or
popf
add
and
mov
xchg
push
decl
ja
xchg
add
js
hlt
ljmp
mov
pop
ss
xchg
daa
dec
lahf
fs
jmp
push
adc
xor
fdivrl
sarb
out
push
fcmove
cmc
add
jbe
jge
idivl
xlat
and
add
cmp
sbb
sub
std
cltd
add
jae
jb
add
and
mov
je
xor
jp
cld
push
xchg
inc
sbb
jl
idivl
pop
loope
inc
push
loop
lods
mov
mov
incl
cmc
jb
fdivrl
repz
lds
and
xlat
cwtl
ss
daa
and
adc
cmp
test
pop
mov
addr16
inc
aas
and
mov
adc
cmp
adc
test
in
fwait
sub
push
adc
dec
jb
jge
testb
pop
adc
jp
sub
aaa
sbb
pop
mov
or
test
cmpl
sbb
push
mov
xor
xor
mov
adc
test
xor
jb
mov
in
insl
dec
scas
and
jno
cmpsb
inc
xchg
int
or
popa
out
inc
xor
aas
mov
jg
mov
inc
stc
cmp
add
inc
or
aaa
push
push
ja
dec
mov
test
push
shrb
add
jns
repz
lret
pop
or
push
mov
add
adcl
pushf
dec
iret
adc
dec
push
push
cmpsl
fstp
insl
mov
xor
dec
popf
pavgw
mov
mov
fs
shr
scas
icebp
pop
jge
fsubr
hlt
sbb
jo
mov
sbb
inc
mull
xchg
jle
or
add
mov
inc
lcall
test
jns
pop
sbb
inc
mov
cmp
loopne
adc
push
adc
les
push
test
push
adc
adcb
sub
sub
jecxz
jge
jb
push
ja
shll
repnz
ret
imul
daa
call
dec
xor
movb
int
outsl
jge
loop
lock
dec
pushf
mov
andl
fisttpl
sar
fisubs
mov
movsl
fs
adc
scas
mov
call
loop
pop
xchg
lea
fnstcw
neg
lods
xor
sahf
jp
sub
or
or
in
dec
push
adc
pop
sbbb
mov
cmpsl
loopne
adcb
cmpl
test
loope
push
sti
add
out
adc
push
dec
push
sub
sub
or
insl
stos
daa
add
pusha
dec
sahf
dec
xchg
mov
sbb
jmp
dec
push
dec
jle
rcr
paddw
mov
dec
addr16
jns
test
sub
dec
pop
mov
jns
adc
shrb
sahf
stos
sahf
cmc
push
cld
out
or
inc
cmpl
mov
push
mov
push
xor
shll
pop
jg
stos
cmp
xchg
insb
jo
cwtl
xor
xor
mov
into
xchg
nopl
mov
cmp
jge
jle
aaa
popa
ret
push
bound
jmp
mov
push
mov
sti
shlb
xor
inc
xchg
je
push
adc
aam
ret
adc
enter
fs
jge
mov
cmp
incb
mov
mov
je
lock
sbb
dec
push
int
mov
lods
adc
adcb
sub
jge
adc
fsubs
stos
ret
addl
ja
pop
pop
or
push
adc
mov
push
leave
push
popa
inc
iret
mov
sub
enter
mov
aad
mov
inc
test
ss
push
adc
negl
or
cmp
sti
push
movsb
ret
mov
sub
test
mov
jnp
jno
sar
lds
addb
add
adc
mov
es
jmp
pusha
stc
cmp
lock
jmp
sar
jmp
cwtl
outsb
daa
pop
or
xor
xor
mov
jne
pop
sbb
pusha
imul
and
roll
and
rolb
sub
addl
push
mov
imul
orb
push
dec
mov
rclb
lahf
push
jl
mov
call
test
push
aaa
mov
insb
fdivs
jno
jp
sbb
adc
fs
addb
jp
pusha
pop
add
sahf
push
jle
mov
or
std
roll
add
pop
sub
push
cld
out
and
clc
and
or
cltd
adc
repz
scas
stc
aad
cmc
sbb
dec
sbb
lock
mov
ret
insb
xchg
jge
sub
pop
lods
cmp
es
sub
add
mov
push
arpl
fcomps
out
repnz
shll
or
mov
jns
cwtl
or
and
push
stos
lcall
dec
shr
adcl
iret
movsl
in
xchg
xor
sub
scas
out
cmp
sahf
jl
jmp
push
sub
lret
rcrl
ret
cmp
sub
dec
cmp
pop
adc
sub
fldl2e
add
ja
inc
ljmpw
ficoms
or
jae
xor
mov
pop
ss
push
loope
xor
pop
sbb
test
shrl
mov
daa
sbb
jp
add
push
lods
sbb
inc
inc
sub
stos
aaa
outsl
adc
pusha
push
adc
test
adc
dec
and
in
adc
push
lock
jmp
jl
lret
loopne
lea
iret
jecxz
int
and
out
and
or
and
mov
imul
xor
push
dec
js
sarb
in
mov
icebp
lcall
push
rolb
jnp
or
dec
inc
cs
mov
pusha
sbb
or
lretw
jle
xchg
in
ss
dec
in
je
notl
scas
outsl
mul
sub
jl
add
sahf
test
outsl
pop
add
loope
test
xchg
sub
lods
sub
sub
andb
pop
negl
cld
mov
mov
sub
or
push
lods
out
arpl
lahf
notb
xor
aad
lea
mov
mov
scas
sbb
ret
or
scas
cmp
or
jl
test
jo
add
sub
xor
jns
sbb
ljmp
icebp
jae
mov
andb
scas
dec
bnd
adc
mov
rcrb
push
repnz
lods
aam
ss
push
lcall
rclb
enter
mov
xchg
punpcklbw
jb
pusha
pusha
sbb
jb
ret
aaa
ret
add
outsb
push
das
fdivrp
jle
xchg
cmpsb
int
dec
adc
xorl
int
shl
stos
adc
inc
subl
mov
pop
pop
add
insb
fdivs
push
or
call
jb
and
ljmp
in
lods
mov
ret
addl
pusha
mov
jmp
mov
sub
pop
xor
cli
add
test
imul
out
mov
out
fdivs
add
cmp
fnstsw
jnp
aad
xor
cmpsl
push
xchg
jle
adc
fs
paddd
push
jbe
adc
add
xchg
popa
rolb
in
xchg
or
push
notl
push
mov
fdiv
in
push
ljmp
push
xlat
cmpsl
jge
addl
shrb
and
pop
ljmp
add
out
cwtl
ss
inc
sbb
jl
stc
js
jmp
dec
jns
stc
jmp
mov
lahf
in
sbb
test
cmp
shl
jmp
push
into
jns
sub
sar
pop
cmpsb
add
fcompl
movsb
hlt
or
xchg
or
inc
fdivs
sub
inc
dec
mov
jne
imul
iret
out
mov
xorl
outsl
mov
push
sbb
sub
xor
es
lcall
loop
add
sbb
imul
push
sbb
repz
mov
ljmp
xor
cltd
mov
pop
in
pusha
std
push
cmpsl
inc
xchg
sbbb
fbstp
mov
ja
cld
adc
pop
dec
xchg
add
sub
cmp
lea
addr16
js
fwait
mov
flds
xor
mov
bound
add
stos
jns
imul
pop
int
pushf
sbb
or
jno
dec
xchg
adc
test
cmpb
popa
push
ret
repz
push
shll
in
jb
and
jnp
movsb
je
out
lret
lret
jno
or
mov
fucomp
mov
stos
xchg
cs
call
pop
jge
cwtl
mov
out
inc
subl
pushf
push
adc
lods
xchg
mov
in
inc
setns
dec
pop
mov
cmc
mov
jo
adc
fisubs
mov
sti
loope
or
push
xchg
add
cmp
cltd
pop
mov
dec
sub
hlt
int
enter
jnp
and
sub
test
fstl
lds
push
jp
cmp
cli
orb
sub
leave
cmp
lret
enter
mov
pop
xorb
ret
ds
add
ss
sub
fsts
sahf
xchg
fisubl
adc
xchg
jb
lods
adc
mov
push
pop
clc
sub
cmp
lcall
mov
int
sbb
cmpsl
rcrb
or
push
push
push
loopne
push
dec
lods
dec
out
lods
test
sub
dec
jb
mov
inc
pop
loop
dec
mov
sbb
mov
je
push
or
lds
gs
hlt
mov
iret
or
repz
or
daa
iret
push
scas
mov
negb
nop
ret
adc
xor
inc
arpl
lods
mov
sbb
jl
xor
cmpsb
leave
jg
popa
cli
and
mov
xchg
push
cmp
shlb
jb
in
out
inc
test
inc
ret
movsl
push
pop
call
dec
rclb
out
dec
and
and
ror
cmp
mov
shl
xchg
idiv
ljmp
fildll
sbbb
pop
pushl
or
mov
pop
addb
adc
push
fcomp
test
adc
adc
mov
jmp
xor
daa
es
test
adc
fdivs
xor
addb
lds
hlt
mov
repnz
addl
pusha
shl
repz
addl
es
stos
insl
fdivs
push
or
dec
or
cmovge
xchg
adc
pop
mov
outsb
fadd
sbb
addb
mov
cmp
testb
xor
adc
and
test
xlat
adc
gs
stos
push
pusha
push
jmp
push
or
mov
ja
jbe
adc
inc
jp
hlt
lods
pop
mov
dec
fwait
ss
mov
add
xor
loope
or
out
sub
push
int3
mov
pop
dec
gs
xchg
push
rcrb
fisttpl
xor
aas
jge
jb
and
xor
mov
adc
adc
dec
pusha
rolb
pop
aas
or
lds
out
jp
adc
pop
mov
aas
sub
pop
jecxz
add
add
mov
add
pop
faddl
mov
and
fdivs
jae
shlb
popa
rolb
adc
inc
jnp
mov
pop
mov
jecxz
lea
jbe
jmp
repnz
xchg
les
repnz
clts
adc
cmp
pop
mov
dec
cwtl
xor
ret
orb
test
clc
push
jge,pn
lret
dec
popf
xor
jge
movb
insb
cmp
pusha
out
test
pop
dec
cmp
mov
xchg
cmp
pop
insb
int3
lea
incb
sub
jmp
out
mov
popw
cwtl
in
push
orb
xor
dec
push
sti
int3
cmp
adc
cld
mov
lahf
mov
icebp
pop
ja
sub
arpl
in
sbb
inc
and
lea
les
cli
mov
pop
push
push
or
jb
data16
std
flds
enter
or
pop
xchg
shll
lods
or
subb
push
andl
pop
stc
jl
inc
mov
push
ret
jmp
cmp
cli
pop
les
inc
fisttps
sub
call
adc
insb
nopl
jo
or
dec
push
jl
cmp
jnp
pop
add
mov
add
fcmovnb
lock
leave
in
xchg
adcb
dec
in
lahf
pushf
shlb
xchg
imul
nop
mov
mov
addl
lcall
xor
pop
imul
and
pop
pop
shrb
xorl
jge
jmp
cmp
pop
mov
jne
shlb
inc
aaa
dec
mov
test
mov
mull
and
push
loope
xchg
adcl
adc
pop
insb
stos
push
inc
stos
bound
into
pop
and
mov
mov
out
sbb
dec
and
or
iret
imul
mov
adc
in
test
jmp
and
int
lret
imul
push
or
out
int
out
adc
xor
sarb
adc
test
push
fs
int
imul
cld
sbb
lock
xorl
stc
push
fs
jp
scas
hlt
push
loop
int3
lods
dec
jg
repz
xor
jge
sarl
es
lea
push
jmp
mov
and
lock
icebp
andl
push
cmp
jo
mov
sub
or
pushf
adc
stos
pop
sarl
sub
aaa
jo
insb
fcomps
ja
pop
add
js
fcomip
shrl
xor
mov
mov
push
cmpsb
lcall
xorl
mov
mov
call
inc
cmp
push
ret
push
push
into
outsl
mov
jge
aas
jge
xor
push
mov
inc
test
add
fistps
popa
rolb
pusha
sarl
notl
sub
xor
idivb
daa
dec
fwait
fildl
in
add
js
lret
adc
rcrb
sbb
pop
test
popa
push
lcall
xorl
rolb
xor
fldl
aaa
test
popa
push
loop
ss
iret
ret
addl
pusha
push
ja
mov
lea
lahf
sub
push
pop
movsb
in
fnstenv
mov
iret
mov
call
pusha
push
addl
adc
and
in
test
adc
negl
shrb
popa
roll
ds
jg
imul
xchg
stc
sbb
pop
addb
xchg
inc
xchg
aas
dec
and
lcall
jne
mov
dec
addb
add
push
push
mov
outsl
jo
aaa
data16
sub
mov
xchg
push
push
push
data16
and
or
sbb
mov
loope
inc
lea
jo
aad
cld
mov
pop
lods
loope
in
jecxz
push
in
pusha
aam
push
arpl
jp
push
call
aas
sbb
stc
inc
movsb
cmp
rorb
cli
pop
or
mov
dec
rolb
repnz
aam
and
add
int3
sbb
faddp
dec
adc
test
in
jno
mov
jmp
je
packsswb
jge
out
xchg
insb
daa
loop
les
mov
cltd
sti
or
lods
or
mov
push
enter
popl
fucomip
andb
andb
popa
mov
pop
push
add
xor
lret
cmp
or
sbb
test
sub
pop
and
xor
cmp
test
and
lods
int3
mov
xor
shrb
mov
outsl
gs
fcoms
and
xchg
int3
mov
pusha
jp
fadd
dec
mov
push
adc
inc
adc
imul
jecxz
rol
sbb
and
xor
sbb
in
lods
sub
xchg
imul
push
jnp
mov
inc
jecxz
adc
xchg
loope
cmpsb
mov
dec
xor
cmpb
dec
inc
sub
xor
pop
arpl
loopne
inc
sub
jge
jge
test
sbb
mov
pushf
xchg
movsb
xchg
inc
mov
inc
mov
or
mov
daa
mull
movsb
lahf
mov
push
pop
xchg
xor
mov
in
jo
or
pop
push
ds
adc
mov
jg
bound
cmpsl
or
mov
shl
scas
out
inc
push
pop
mov
addl
mov
xchg
sarb
mov
inc
fisubs
call
test
je
mov
push
inc
jnp
cmp
adc
push
xor
fwait
mov
repnz
dec
and
mov
sbb
pop
movsb
cli
xchg
in
xchg
ret
push
dec
add
ret
out
sbbb
mov
inc
cmp
xchg
inc
aam
nop
jne
ss
nop
call
imulb
dec
jp
and
mov
test
mov
imul
jnp
xor
or
xor
lock
adc
inc
mov
push
mov
mov
xor
jl
push
adc
daa
cltd
imul
ljmp
dec
out
inc
aaa
mov
push
mov
ss
scas
imul
lds
fchs
and
ret
jns
or
xor
mov
inc
pop
rolb
add
es
fwait
mov
addl
inc
cmpb
push
dec
mov
test
add
int3
cltd
ss
daa
and
adc
sbb
mov
jb
mov
insl
xchg
fwait
ss
push
adc
negl
or
xor
mov
cmp
lock
sub
xor
or
es
xor
rolb
pusha
sar
or
and
lock
sub
xor
fwait
cltd
push
bound
push
or
inc
jecxz
addb
leave
inc
mov
and
pushf
dec
gs
jbe
pusha
mov
mov
addb
mov
mov
and
inc
test
add
je
sbb
ja
mov
sub
out
add
imull
mov
xor
jecxz
adc
les
pop
push
punpcklwd
das
orl
shl
inc
sbb
dec
push
sbb
inc
cmp
es
fnstenv
pop
add
sbb
xlat
pop
fcom
push
lret
push
xchg
add
jb
test
stos
fcomip
scas
jae
lods
inc
xchg
cmp
scas
addl
mov
fcomps
ja
sub
xor
jne
test
mov
sub
lcall
jle
and
add
test
arpl
adc
das
movsb
fsubs
push
inc
rolb
repnz
pop
rclb
loop
call
pop
stc
js
pop
push
cmpsb
out
mov
adc
leave
mov
fwait
pop
mov
std
sti
out
out
subl
jns
or
jb
inc
pop
sbb
adc
push
loope
or
add
outsl
sub
mov
dec
iret
dec
xchg
sbb
loop
xor
push
mov
lret
dec
dec
jl
mov
pop
adc
test
je
dec
jb
cltd
data16
xchg
repnz
add
call
loop
adc
insl
cmp
dec
xorb
push
ret
jae
mov
push
rcl
jecxz
xchg
lds
ss
loopne
leave
ss
sbb
and
push
mov
pop
mov
jne
xor
mov
in
sbb
or
daa
rclb
in
or
sbb
and
cmc
lds
adc
xlat
mov
daa
notl
push
cmp
mov
pop
pop
mov
jl
insb
stos
mov
dec
mov
fabs
xor
cmp
ficomps
aas
add
dec
je
mov
fcoms
aad
jle
xor
push
adc
push
sub
xchg
mov
ret
sbb
notl
rolb
cmp
add
out
xor
imul
in
cmp
das
pushf
dec
adc
sahf
addb
bound
inc
test
loope
add
mov
push
dec
push
sbb
fcomps
push
lret
rcrl
xlat
into
lock
shl
lea
sbb
call
cmp
mov
add
ja
jmp
cwtl
orl
push
pop
xor
inc
mov
jl
sbb
mov
aas
add
inc
test
movsl
dec
fwait
ss
bound
push
or
inc
out
roll
mov
sub
inc
test
rclb
ss
fcomps
pop
jp
stc
adc
lock
adc
push
pop
cli
sub
mov
data16
test
add
fdivrl
aas
jge
clc
imul
adc
sbb
inc
test
popa
push
cli
fwait
ss
iret
lock
rolb
pusha
mov
mov
adc
jmp
mov
add
dec
push
sbb
pop
stos
je
and
and
cs
mov
test
adc
daa
dec
ja
pop
add
jo
repz
shlb
xor
scas
scas
pop
ss
int
ss
xchg
daa
ret
jno,pn
sti
prefetchnta
add
xor
xor
ljmp
lret
insb
int3
inc
adc
jne
mov
xor
add
out
fidivs
sub
pop
sub
inc
test
mov
sbb
loope
add
roll
xor
push
or
and
fdivs
pop
or
inc
and
ds
sub
mov
add
mov
mov
adc
jmp
pop
mov
dec
in
lret
dec
idivb
jb
xor
adc
clc
fucomi
push
sbb
jge
in
cmc
popf
xor
add
insb
mov
cs
xor
and
frndint
sbbl
lahf
mov
out
ljmp
gs
pop
sbb
inc
repnz
push
orb
and
dec
add
rclb
ljmp
add
lods
sub
lahf
push
out
stc
push
fmul
sbb
lahf
rolb
in
xor
loop
scas
cmpsl
adcb
movsb
push
aam
sub
cli
cmp
clc
das
adc
mov
push
adc
cmpsl
cmp
xchg
xchg
mov
or
inc
jae
mov
dec
jl
adc
pushf
scas
inc
adc
push
sahf
popf
sub
lods
add
sbbb
ret
cli
stos
or
add
mov
das
push
cmpsb
test
and
mov
fistpl
das
dec
xchg
add
rcrl
xor
push
dec
jl
es
gs
jle
and
xchg
addl
fcmovb
or
pushf
loope
jbe
mov
lahf
cmp
push
jbe
int
add
fcom
sbb
cs
das
cmp
mov
jo
test
gs
jbe
and
or
popa
loopne
imul
xor
sbb
or
daa
aam
sbb
test
mov
jl
mov
in
loop
mov
decb
rcrb
jg
sub
ss
mov
es
fadd
jo
dec
dec
mov
fistpl
jp
ret
add
xchg
mov
inc
dec
hlt
ljmp
fcoms
lock
rcl
fnstcw
inc
cmpsl
xor
dec
pop
ja
enter
jge
or
decb
inc
aaa
xor
jle
pop
mull
xchg
orl
clts
xchg
popf
lcall
shll
add
addb
mov
dec
sahf
fadds
bnd
pop
enter
lret
push
fisubl
clc
mov
cld
mov
lcall
or
cmc
pop
push
aam
in
pop
jno
push
pop
jle
inc
mov
xor
stc
mov
dec
sbb
lods
lock
sti
movsl
adcl
pusha
xor
mov
pop
fistpl
mov
insb
push
pop
fnstcw
fdivl
mov
and
push
mov
sarl
adc
shlb
lea
lahf
pushf
shrb
pop
sub
mov
xchg
lock
push
or
fwait
inc
adc
pop
div
stc
repz
idivl
ds
adc
jb
mov
in
mov
mov
jne
add
jae
sbb
adc
out
mov
lds
sub
sbb
adc
jp
pushf
movntq
andb
inc
imulb
sbb
jne
xchg
imull
cld
mov
mov
pop
pop
ret
and
adc
in
fnstcw
inc
jg
int3
cli
ret
jle
test
out
adc
or
xor
clc
fiaddl
adc
pop
push
and
adc
cmp
lahf
mov
push
xor
ds
adc
sub
test
inc
sub
aaa
inc
addb
push
out
fucomp
popf
in
scas
pop
in
jge
push
cli
pusha
lahf
nop
call
cld
xchg
mov
sti
jb
test
cld
scas
mov
jae
in
fnstcw
and
sti
lock
adc
adc
movsl
out
sbb
lcall
pop
incl
cltd
shlb
lods
aaa
jnp
dec
sahf
ds
sbbl
xchg
add
ljmp
in
cmc
mov
outsl
dec
mov
out
scas
jb
in
les
aas
adc
cli
xor
push
sub
push
leave
cmpsl
sbb
xchg
jnp
ds
imul
xlat
negl
repz
mov
ret
push
cmp
stos
sub
cmpb
add
sahf
adc
ss
lret
cwtl
push
movsb
lret
dec
mov
add
and
ja
mov
repz
cwtl
sbb
push
xchg
nop
sti
pop
adc
push
movsb
inc
mov
push
ljmp
jg
sbb
popf
pop
insl
addr16
leave
adc
push
daa
out
stos
push
and
out
ficoms
adc
pop
sbb
sub
out
ret
sub
imul
adc
cmp
dec
add
jle
jg
inc
les
mov
test
push
adc
dec
or
std
and
je
fidivs
cmpsb
aam
imul
sti
cmpsl
hlt
mov
enter
inc
mov
jge
sbb
lret
mov
sub
incb
push
gs
push
fcmovnb
pop
ss
push
mov
inc
push
sbb
sahf
pop
flds
pop
pop
add
std
xchg
xchg
push
ret
add
and
pop
mov
jecxz
jb
lods
cli
enter
pop
in
adc
insl
scas
js
and
scas
adc
inc
in
and
pop
push
movsl
js
sub
jae
cwtl
lock
cmp
bound
and
dec
out
lods
pop
xchg
les
in
dec
cmc
add
xlat
jno
popf
jle
adc
mov
fldpi
ds
adc
mov
ret
xor
and
mov
cmp
jp
push
scas
cmp
ljmp
imul
fidivrl
add
aad
dec
shrb
push
frstor
adc
xlat
pusha
or
leave
or
or
fwait
pop
cmc
ds
adc
movsl
ret
adc
mov
imul
add
call
or
cmp
pop
scas
test
fistl
pop
pcmpeqw
adc
loop
data16
adc
adc
movsb
or
inc
popf
sti
mov
fwait
roll
ja
pop
rcrb
push
das
adc
fcmovbe
inc
adc
cmc
mov
fs
arpl
clc
xor
add
push
mov
mov
daa
dec
push
cld
adc
xchg
xor
mov
pushf
sahf
xor
repnz
xchg
mov
mov
mov
mov
repz
lds
xor
pop
jmp
gs
lcall
ds
push
xchg
daa
adc
sub
mov
mov
push
mov
jo
leave
lds
scas
or
xor
jo
movsl
push
jl
inc
mov
aas
push
adc
in
and
dec
lahf
sahf
sarb
lods
enter
push
push
inc
cld
pop
fwait
push
mov
es
fwait
inc
es
pusha
rolb
pusha
roll
into
adc
es
test
adc
add
insb
fadd
sub
add
js
adcl
adc
adc
dec
sbb
ljmp
mov
inc
push
imul
or
xor
jnp
jbe
out
xor
inc
clc
mov
leave
cmp
adc
mov
dec
jbe
jl
sbb
pusha
aad
jbe
ss
aaa
add
push
ffree
xchg
out
fidivrl
and
sbb
jno
mov
xor
icebp
mov
pop
xor
xor
dec
lcall
addb
sqrtps
mov
adc
mov
and
arpl
cwtl
inc
faddl
and
lock
add
scas
and
xor
xchg
cld
jb
jg
mov
or
test
fucomip
lret
ja
mov
cmpsb
push
sub
fwait
mov
xor
cmp
cmp
fcompl
xchg
adc
loop
push
and
aaa
cmp
mov
add
adc
pop
lcall
cli
mov
or
cmpsl
in
shll
in
jb
and
das
lret
sub
push
movsl
lret
sbb
sahf
fmull
cmp
lods
jle
dec
mov
ficompl
mov
les
mov
dec
into
loopne
or
in
call
and
push
dec
mov
inc
sub
dec
test
cmp
adcb
lods
jb
aaa
ljmp
lcall
push
hlt
jmp
pop
jmp
popa
outsl
cmp
jge
pop
addr16
pusha
push
add
sbb
push
sbb
inc
adc
lahf
stos
jecxz
xor
shll
push
lock
loop
lahf
xor
xor
bound
adc
stos
xor
mov
push
mov
int
ss
sbb
or
dec
sub
fiaddl
push
fisttpll
mov
loop
xor
sahf
sbb
arpl
xchg
mov
lods
sub
and
and
jbe
std
test
xchg
fwait
mov
and
mov
cld
xor
sbb
cmp
jle
insb
dec
daa
idiv
fs
cmp
xor
push
jle
insb
gs
inc
mov
mov
out
pop
mov
inc
lods
sub
cmp
stos
and
dec
jle
stos
jae
enter
stc
cmp
adc
lods
ret
dec
mov
and
xchg
xchg
cli
cmp
add
inc
xchg
cltd
adc
or
iret
stc
xchg
mov
push
pop
call
popf
shlb
xorb
movsb
test
adc
adc
in
clc
or
in
xorl
hlt
filds
inc
int
or
jg
shr
rcrl
push
pop
mov
dec
sub
adc
popf
lcall
adc
xchg
cmpsl
cmp
xor
mov
das
fisubrs
mov
mov
imul
fcoml
call
adc
inc
fwait
pop
test
mov
jnp
xchg
pusha
sar
loope
sub
cmp
addl
fnstenv
jno
pop
stos
fists
in
fnstcw
stos
and
shlb
and
push
cmp
inc
and
mov
mov
adc
les
xchg
cmpsl
ret
sub
pusha
mov
repz
aad
and
jp
or
scas
cmp
xlat
lods
or
movsl
sbb
sub
and
out
aas
mov
sub
cmp
pusha
outsl
cmc
xor
inc
fbstp
pusha
mov
fwait
mov
and
pop
and
insb
fmul
pop
das
idivl
pop
pusha
mov
push
and
or
push
jl
xor
mov
push
xchg
inc
push
dec
jb
notb
stos
mov
std
and
xor
incb
aam
and
ret
stos
or
or
nop
shll
idivl
cmpsl
stos
sar
pop
repnz
insb
jle
leave
push
insb
enter
std
jl
fnstenv
xor
pop
call
in
push
out
insb
lods
or
jg
rclb
jns
adc
popa
adc
popf
mov
loop
lods
outsb
es
xor
jno
nop
lret
clc
fiaddl
adc
jle
adc
or
iret
dec
cwtl
xor
jne
test
shll
test
lret
aaa
mov
inc
ss
in
inc
ret
loopne
pop
pop
insb
repz
mov
inc
jns
out
popa
mov
mov
pop
pop
lods
or
pop
dec
out
stc
mov
mov
adc
adc
cmpsb
movsl
insl
repnz
pop
das
divl
or
inc
stc
fnsave
out
rcl
ja
lock
inc
xor
lods
xchg
call
arpl
mov
std
cld
cmc
icebp
loopne
std
dec
clc
pop
adc
int3
je
movsb
pop
mov
push
test
aaa
add
fldenv
mov
daa
mov
push
inc
lahf
mov
orb
add
lods
movhps
jecxz
in
jmp
xchg
decl
sub
mov
leave
xchg
mov
pop
stc
pop
imul
shrl
daa
inc
pushf
call
pusha
xor
cmp
mov
and
xor
call
cmp
inc
cmp
pop
dec
inc
cmc
daa
push
dec
out
and
or
mov
shr
repz
sub
in
ds
lret
sbb
mov
push
adc
mov
jge
xchg
xchg
or
jmp
test
lds
in
mov
mov
scas
pusha
sti
clc
insl
sbb
xor
sub
out
aas
stc
js
xchg
movsb
testl
adc
arpl
leave
mov
aam
pop
cmc
enter
loopne
leave
inc
cmpsl
mov
xchg
pop
push
int
andl
jmp
or
leave
cmp
popf
stc
dec
and
jmp
stos
nop
jge
fwait
aad
andl
cld
mov
in
mov
rcl
ljmp
out
repnz
adcb
lea
xchg
jmp
jno
mov
daa
shll
pop
outsb
fwait
mov
xchg
push
mov
clc
pop
outsl
and
pop
call
test
cmp
xorl
dec
push
fwait
inc
cmp
bsr
outsb
hlt
ficoml
insb
jle
cmp
mov
xchg
and
test
rcll
loopne
ret
xor
fxch
sbb
lret
or
jmp
testl
fnstenv
mov
iret
aas
push
adc
in
lret
sahf
ds
pop
out
mov
adc
scas
push
push
hlt
adc
cmpl
stc
repz
jo
out
mov
push
mov
scas
loopne
cli
je
lret
xor
ljmp
leave
mov
adc
pusha
sbb
add
xchg
es
out
add
pop
pusha
shl
jb
adc
idivb
mov
fdivrp
out
scas
pop
mov
or
aas
push
adc
stos
movsl
insb
mov
int3
sbb
add
pop
fcoml
arpl
dec
ss
nop
sbb
shrb
inc
xor
sbb
jp
aad
mov
sub
ret
daa
dec
fwait
inc
imul
jbe
inc
loop
or
jle
fnstenv
xor
xchg
sbb
loop
add
pop
inc
ja
stos
add
js
daa
subl
sub
mov
mov
cmp
imul
fnstenv
mul
aas
push
adc
clc
in
lahf
outsl
sub
pop
dec
and
pop
sub
stos
mov
jl
dec
mov
jne
loop
stos
bound
stc
xor
addr16
cmpsb
xor
mov
xor
shl
adc
xlat
xor
jnp
jnp
adc
cmp
popa
test
jmp
cld
xchg
inc
aad
sbb
jns
scas
jb
jmp
adc
clc
and
cmpb
aas
movsl
nop
lret
inc
rclb
iret
xchg
mov
aas
push
adc
aaa
jnp
fcomi
add
xor
arpl
jl
test
mov
imul
fs
inc
mov
inc
out
jne
shll
bound
pop
xor
aaa
cmp
movsl
jge
in
jmp
filds
and
xor
adc
stc
pop
inc
push
push
fidivs
test
test
mov
cmc
bnd
sub
fstl
push
std
jg
mov
fsubl
inc
push
or
sub
add
sti
mov
jo
push
inc
push
adc
inc
out
insl
cmc
stos
js
jno
xchg
sarb
in
add
cmp
mov
in
xor
xor
sbbl
dec
scas
and
fwait
push
or
mov
rcr
mov
adc
not
rcrb
pop
les
popf
test
testl
xor
xor
jmp
movsb
incb
lea
and
mov
div
push
loope
adc
mov
pop
lcall
jno
clc
call
xchg
insb
ss
pop
adc
inc
jge
je
xor
adc
dec
lea
and
xlat
jne
xchg
push
jo
cmp
mov
sub
rolb
adc
jne
ret
xchg
mov
add
lods
filds
adc
aad
add
adc
fwait
xchg
popf
adc
pushf
dec
out
mov
mov
cmp
adc
jnp
jl
cmpsl
sub
arpl
ret
in
out
pusha
xchg
cmp
or
pop
or
or
int3
xchg
imul
test
fdivl
jmp
dec
loope
aam
adc
in
cltd
lahf
lods
dec
rcll
inc
xchg
outsb
xchg
mov
sbb
jae
jns
inc
mov
out
inc
xchg
or
add
pop
stos
jg
sahf
cmc
or
fdiv
xor
pop
adc
sahf
jg
test
xchg
out
dec
sbb
mov
inc
loopne
add
jae
js
pop
adc
xor
cli
jbe
popf
ds
mov
dec
fnstcw
out
lahf
xlat
xchg
add
sbb
ljmp
or
xor
cmp
xor
pop
xchg
jge,pt
push
sub
inc
mov
pop
adc
xchg
movsb
mov
jo
ret
pop
jnp
hlt
imul
fstl
adc
adc
adc
and
cmp
mov
xchg
rcrb
cmp
ds
mov
mov
mov
clc
pop
adc
jmp
jg
jp
jmp
pop
dec
jb
xor
sbb
movsl
std
xlat
scas
pop
push
and
bound
push
out
pop
xor
cmp
sub
jg
mov
dec
fwait
ss
aaa
daa
sub
pop
adc
ds
aas
sti
imul
cltd
clc
stos
ljmp
fdivs
out
adc
imull
mov
sub
xor
xchg
into
mov
negb
sub
and
fdivrl
sahf
enter
jne
sbb
lods
add
or
divl
or
xlat
sub
mov
ss
xor
mov
jle
adc
xor
js
movsb
jmp
adc
add
jmp
loope
jae
mov
jnp
lock
pop
xor
fdiv
in
fimuls
or
jne
addr16
test
adcb
pop
push
ss
ja
cmp
xchg
push
pop
mov
dec
popf
xor
insb
mov
mov
ja
sbb
aas
adc
cmp
jae
dec
mov
xchg
xchg
dec
adc
js
sbb
movsb
add
cvtps2pd
mov
lock
adc
rorb
cli
pop
add
adc
dec
push
sarb
jmp
fldl
std
mov
out
add
adc
mov
das
enter
lcall
push
lea
movsl
mov
cmp
push
outsl
jne
pop
inc
cmpsl
mov
out
xchg
jnp
adc
ret
repnz
ret
loope,pn
sahf
mov
out
cmp
lods
xchg
subl
stos
lea
inc
sbb
pop
and
call
xchg
pop
stos
loop
idivl
and
fistps
sbb
ret
pushf
lods
sub
sti
hlt
aas
sbb
add
mov
inc
sub
call
push
pop
rorb
jno
into
lea
xchg
or
insb
fnstcw
inc
dec
cli
lock
dec
mov
mov
add
test
push
push
scas
ret
cmp
xchg
out
lods
mov
pop
xorb
inc
scas
aam
std
pop
push
pop
imul
ljmp
roll
mov
cmpsl
loopne
outsb
nop
lahf
repnz
bound
adc
outsb
mov
or
xchg
and
out
add
ficoml
push
aad
dec
mov
push
insb
stos
daa
mov
pop
xorl
scas
mov
pop
sub
jge
movsb
cmp
or
push
scas
out
jl
outsb
shrb
negb
test
or
pop
std
mov
in
or
and
xchg
es
inc
jns
xchg
subl
inc
into
add
cmpsl
in
roll
adc
push
fidivrl
pop
test
adc
idivl
adc
cmp
mov
add
in
ljmp
jmp
mov
pop
dec
idivl
fucomip
nop
popa
xchg
repz
shl
sbb
cltd
mov
in
test
mov
mov
shrb
or
xor
in
pop
inc
xchg
inc
add
arpl
lock
dec
add
mov
push
repnz
inc
jmp
movsb
mov
pusha
pop
or
daa
imul
test
daa
adc
mov
adc
xor
adc
mov
std
pop
arpl
mov
pop
dec
fwait
inc
sbbl
jp
ja
out
push
adc
or
adc
mov
loop
push
pop
pop
adc
pop
jg
shlb
fistpll
adc
scas
jle
xlat
mov
mov
inc
mov
jp
test
mov
addl
push
ss
or
pop
jp
in
pusha
mov
inc
or
pop
jb
int
pusha
inc
arpl
xchg
sti
mov
sti
imul
fnsave
cmp
mov
inc
jnp
and
fiadds
add
sbb
adc
sub
mov
mov
and
pusha
dec
adc
std
cltd
add
dec
xchg
scas
mov
sbb
aad
cmpl
or
or
daa
call
arpl
push
mov
pushf
inc
pop
or
inc
fldcw
cmc
hlt
test
imul
pop
mov
mov
aas
sbb
daa
cmp
int3
sbb
movsl
into
or
jnp
enter
test
std
daa
cmp
xchg
inc
xchg
es
in
add
ret
divb
adc
adc
cmp
into
orl
fildll
inc
dec
jo
hlt
pop
adc
adc
gs
scas
pop
lods
les
xchg
flds
int
pusha
mov
lock
adc
xchg
mov
adc
and
loope
icebp
mov
push
adc
repnz
sub
sbb
push
stos
test
popa
int3
mov
rorb
mov
sbb
in
rcr
ret
cmc
add
add
fistps
adc
mov
int3
arpl
cmp
mov
loopne
mov
push
adc
hlt
addr16
sbbl
sub
das
stos
xchg
in
jae
xchg
dec
les
scas
lahf
sub
cmp
loop
ret
sti
sub
sar
stos
ret
mov
ret
mov
int3
xchg
fbstp
es
mov
in
push
jo
or
sbb
stos
test
inc
push
adc
aas
aaa
aam
jae
adc
mov
pandn
inc
and
lds
cmp
push
jae
int3
fdivrs
popa
pusha
dec
outsb
dec
jle
movsl
xchg
pop
shll
push
xchg
mov
mov
mov
mov
xorl
mov
test
sbb
fldcw
shl
or
lods
pop
out
shl
rolb
sub
cwtl
and
jl,pn
cmp
jo
jo
andb
repz
xchg
mov
xchg
mov
add
mov
lock
insb
mov
shrd
lahf
dec
lcall
int3
out
cmpsb
stos
mov
sub
movsl
bound
popa
add
scas
add
fnsave
mov
lahf
fsubrl
mov
ret
pop
out
dec
lea
cli
lcall
mov
push
in
dec
aad
dec
jbe
and
movsb
sbb
addr16
push
sbb
shl
ret
int
popf
sbb
inc
inc
aaa
sbb
inc
insb
pop
inc
sbb
divl
adcb
in
insb
movsl
shl
lock
pushl
addb
stc
loop
add
inc
dec
jno
pop
mov
addr16
rolb
lds
push
inc
pop
mov
add
sbb
jmp
out
fnstsw
mov
pop
ljmp
mov
inc
int
loope
idivl
lahf
orb
sahf
movl
lods
mov
dec
sbb
outsb
adc
adc
jne
lds
hlt
test
out
lods
or
fildll
pushf
insb
sub
pop
pop
sub
pusha
xchg
cmpsl
jne
jae
sub
aas
sub
ret
cmpsb
mov
arpl
stos
mov
mov
push
mov
scas
mov
ret
xlat
or
stos
or
adc
jns
andl
mov
dec
cwtl
sbb
pushf
imull
ja
sti
in
iret
mov
jle
adc
or
in
lods
xchg
into
adc
scas
adc
adc
pusha
rorl
jle
aad
add
test
mov
mov
adc
cltd
nop
fstps
leave
xlat
add
or
or
and
inc
mov
addr16
add
nop
xchg
int
xchg
aas
jle
stc
test
or
shr
mov
test
outsl
jg
push
testb
imul
push
sbb
adc
out
pop
jp
add
push
mov
and
das
insb
fxch
pop
dec
jnp
or
jmp
fcomps
outsb
shll
mov
push
dec
xchg
mov
and
jae
or
mov
cmc
arpl
cltd
push
jns
lock
xchg
movsb
mov
sub
add
xchg
into
mov
add
aad
xchg
sbb
mov
xchg
mov
shl
jb
and
inc
push
adc
cmp
loopne
sub
inc
add
mov
aad
fisubl
cmp
cmp
inc
sub
int3
mov
sti
pop
dec
adc
sbb
mov
mov
adc
jne
jb
inc
stc
sbb
ljmp
push
cmp
push
cmc
inc
jo
pop
jb
faddl
add
or
inc
push
adc
ret
insl
stos
popa
ja
cmpsl
popa
dec
fistl
xchg
dec
jecxz
sbb
out
scas
outsb
enter
add
std
out
inc
mov
roll
xchg
subl
pop
sub
adc
jge
add
lock
adc
push
orl
lcall
popa
js
shll
push
int
aam
push
sarb
aaa
pop
divl
into
xor
out
mov
xlat
fiaddl
notl
jmp
and
sub
movsb
lds
add
push
popf
push
add
sub
push
sbb
inc
sbb
xchg
popa
inc
mov
daa
pop
sbbl
lock
pop
adc
int3
aaa
inc
pop
sbb
pop
pop
inc
imul
insb
jo
call
pop
mov
pop
push
sbb
jecxz
dec
pop
pusha
es
pop
push
push
pop
and
inc
enter
clc
ret
sub
push
decb
popa
mov
arpl
fidivl
cmpsl
stos
cmp
cld
xchg
and
mov
rcll
loopne
or
imull
add
adc
mov
popa
jecxz
jo
lahf
popf
sub
dec
ljmp
or
add
mov
pop
call
movsl
ret
or
out
dec
mov
add
sub
cmp
lret
push
sbb
or
pop
mov
scas
xchg
fstpl
addr16
pop
adc
movsb
inc
mov
xchg
stos
xchg
clc
jnp
and
out
xchg
pop
mov
dec
jne
xchg
sub
pop
adc
std
imul
mov
inc
jmp
aad
or
fnstsw
push
jae
jge,pt
incb
addb
jp
outsl
sbb
sub
stc
repz
push
lahf
jge,pt
incb
addb
jp
outsl
sbb
cs
aaa
pop
cld
stc
repz
cmc
xor
adc
popf
fucomp
scas
pop
ds
push
fidivl
dec
cld
stc
repz
cmc
xor
in
popf
std
jmp
pop
ds
push
fidivl
dec
cld
stc
repz
cmc
xor
in
popf
sbb
mov
insl
push
das
ja
aas
jle
out
out
cmpsl
lods
loop
adc
jmp
imul
stc
imul
bound
aas
jle
jp
out
cld
pop
mov
cmp
sbb
xor
push
xchg
inc
lahf
repnz
lods
ljmp
outsl
idivl
sahf
testb
adc
pop
mov
loop
mov
xlat
mov
mov
lock
sub
mulb
fprem1
push
enter
adc
mov
fwait
mov
cmpb
dec
pop
and
adc
push
hlt
jne
jbe
dec
flds
jmp
scas
sub
push
dec
and
mov
mov
adc
xor
xor
fisubs
xor
push
xchg
inc
test
or
scas
mov
mov
mov
mov
std
mov
std
icebp
call
mov
dec
jge
and
fisubs
mov
into
mov
add
dec
mov
mov
loope
mov
lret
xchg
out
mov
or
jle
sub
testb
in
cmp
fildl
cmp
addr16
fsubl
fwait
andl
sbb
pushf
aad
inc
push
adc
mov
cli
mov
xchg
xchg
ret
or
cmc
fucomp
lret
mov
xchg
mov
roll
bound
cmp
cmp
mov
scas
pop
mov
cmp
aas
and
mov
imul
out
dec
stos
scas
jne
xor
jp
fadds
cli
roll
jno
pusha
dec
inc
mov
lret
dec
sbb
fwait
add
cmp
jle
out
jnp
pop
roll
aad
pop
or
pop
outsb
popa
or
dec
hlt
pop
dec
cmp
pop
push
fwait
push
clc
fistps
cmp
push
mov
and
test
jecxz
xor
pop
pop
cmp
pop
je
movsb
and
xchg
or
flds
mov
adc
ficoms
mov
leave
insb
mov
push
adc
adc
mov
pusha
out
fcomps
adc
fisttpl
fmul
outsb
sbb
popa
jns
in
mov
pop
testb
mov
mov
hlt
pop
adc
adc
adc
inc
xor
push
inc
xor
sub
pop
inc
mov
jmp
push
insb
lock
mov
inc
les
cmpsl
stos
fsubs
repnz
das
dec
fdivl
adc
dec
loope
adc
adc
mov
lcall
imul
aam
mov
mov
fisubrl
mov
sub
cwtl
inc
out
pop
outsb
les
shl
mov
add
push
adc
das
push
sbb
dec
lcall
mov
mov
adc
scas
jg
pop
popa
vsqrtsd
add
jbe
shll
loop
pop
xlat
jbe
xchg
lret
or
pop
adc
ds
inc
cs
mov
rcr
cmp
jne
and
adc
push
clc
shl
dec
pop
xor
cmp
pusha
xchg
stos
in
push
adc
sub
cli
xor
dec
pop
jge,pt
fsubrl
popf
ljmp
test
imul
daa
dec
adc
jbe
xorb
jl
pop
inc
sub
fsubrs
lds
aas
and
adc
adc
lret
out
sbb
jno
aaa
fwait
or
xor
pop
out
pop
out
sub
mov
out
daa
dec
sbb
orl
aaa
jmp
cmp
cmc
xchg
inc
jbe
dec
loope
out
jae
loop
adc
mov
aas
jge
packssdw
jecxz
lahf
add
xor
test
xchg
jmp
ljmp
mov
outsb
mov
test
in
xor
pop
aaa
jg,pn
or
dec
dec
adc
aas
mov
aam
xchg
inc
and
sub
sub
aas
jle
cmp
out
pop
aad
inc
ds
adc
ds
into
mov
adc
xor
into
or
lahf
ds
jl
shll
xor
lea
pop
movsl
mov
mov
daa
jg
jge
mov
mov
test
jge
ljmp
pop
adc
jecxz
daa
dec
sbb
test
dec
push
ret
cmc
in
fsubrp
sti
mov
es
std
inc
xlat
loopne
adc
outsb
iret
aam
sar
cmc
push
sbb
and
in
cli
push
call
repz
push
mov
loop
stos
js
outsl
ret
xchg
xor
stos
pop
or
test
pop
out
scas
dec
and
loope
repz
and
mov
ret
xchg
in
add
lds
push
std
insl
imul
outsb
add
imul
aaa
ljmp
add
bnd
scas
pushf
insl
mov
mov
push
pop
xchg
xor
daa
iret
enter
adc
xor
add
mov
in
adc
inc
clc
sbb
xchg
bound
ja
cmp
jp
xor
in
adc
xor
pop
ja
inc
mov
add
in
add
pusha
insl
icebp
xchg
jle
inc
daa
loope
mov
js
fiadds
cmp
dec
pop
fdivl
or
dec
cmpsl
loope
cmp
dec
ret
add
xor
lahf
add
or
adc
cmp
mov
mov
push
sbb
packuswb
lods
cmpsb
ja
push
pop
push
insl
sub
notb
hlt
outsb
mov
mov
or
jecxz
cmp
xchg
mov
pop
sahf
cs
repz
fsubs
dec
lods
lock
jl
cmp
leave
aas
call
mov
dec
pinsrw
pop
and
jae
enter
and
cwtl
push
xchg
xor
or
leave
in
ljmp
das
and
xor
mov
inc
dec
or
xchg
pop
lds
inc
je
data16
sbb
rcll
dec
gs
push
xchg
dec
and
fstl
ljmp
push
int
xor
cld
xchg
and
lods
jge
stos
adc
cmp
jne
inc
push
adc
jns
push
popa
mov
jge
cli
or
aam
iret
cld
pop
mov
fsubs
ds
mov
adc
push
out
lret
xchg
pop
xlat
fstpt
mov
xor
dec
push
dec
aas
mov
pop
adc
mov
xchg
jns
xor
and
jp
xchg
mov
mov
and
push
movsl
adc
movsb
or
inc
popf
out
mov
add
inc
add
imul
cmp
das
xor
pop
ja
inc
push
adc
fmuls
iret
lahf
outsl
sub
mov
mov
sub
loope
daa
dec
out
fwait
daa
mov
aaa
cmc
mov
jo
xor
cmpsl
fnstenv
fs
xlat
decb
dec
fwait
sbb
shlb
lahf
jge,pt
ds
mov
aad
test
xchg
fsubs
xlat
dec
lahf
repz
mov
incb
test
nop
push
adc
stos
and
lret
mov
mov
in
adc
xor
xor
pop
jge
inc
mov
icebp
xchg
jg
idivb
stc
es
xchg
and
nop/reserved
mov
pop
sub
jecxz
ficoms
es
faddl
push
adc
xchg
cld
stc
mov
inc
cmpsb
mov
daa
add
clc
sub
adc
push
adc
or
push
out
bound
jg
loope
xchg
loope
arpl
xchg
dec
and
inc
rcll
movsl
lahf
push
iret
xchg
mov
and
mov
sahf
cwtl
sbb
adc
and
lahf
jge,pt
xor
sbb
js
fnstenv
mov
push
jle
stc
jg
mov
or
lods
icebp
pop
and
in
aas
outsb
sbb
mov
lock
mov
xlat
push
push
mov
inc
pushf
and
mov
inc
xchg
push
bound
adc
cmpsb
pushf
cmp
scas
test
inc
jae
add
dec
cli
nop
cmp
cld
mov
push
adc
sarl
push
adc
insl
int
jle
push
pop
enter
repz
and
andb
fs
xchg
fimuls
sbb
insb
repnz
insb
pop
popf
bound
stos
jge
bound
fldl2e
imul
cld
inc
cmp
cmp
jge
push
and
or
inc
sbbl
cmc
xchg
or
inc
pop
sbb
in
out
mov
mov
mov
fwait
mov
repz
pushw
fucomip
sbb
fstpl
pop
jg
call
xor
inc
mov
xchg
fstl
test
jae
cmp
dec
mov
divb
sbb
cwtl
xor
imul
adc
pop
xor
mov
mov
xchg
rcr
or
lcall
xchg
nop
push
adc
sbb
enter
test
add
push
dec
sub
aam
repnz
popa
loope
jecxz
repz
in
popa
andb
dec
in
lods
out
pop
inc
sbbl
mov
das
divb
or
gs
loope
xchg
dec
sti
or
push
rcrl
push
adc
sti
lcall
adc
and
cmpsl
mull
sub
gs
mov
movsb
xor
adc
sbb
dec
daa
subl
pop
xchg
xchg
cli
jno
xchg
xchg
addb
cmp
sti
popa
in
idivb
pop
jmp
jge
aas
pusha
leave
xlat
xchg
dec
jle
out
aas
mov
add
out
cmp
xchg
sub
sbb
adc
adc
in
bswap
push
outsl
pop
das
lret
dec
in
add
adc
sub
adc
adc
add
and
cmc
adc
xor
int3
rclb
adc
push
adc
push
push
repz
int3
rclb
sbb
and
jbe
lret
int3
fadds
jbe
mov
adc
jecxz
imul
sbb
mov
jns
mov
in
shrl
fidivrs
xor
dec
aad
xor
inc
inc
add
jge,pt
cmpsl
arpl
jne
xlat
imul
loopne
fwait
dec
push
fwait
dec
lahf
aas
sub
dec
out
lahf
clc
cmp
repnz
push
orl
lock
xchg
daa
dec
lahf
idivb
jbe
addl
inc
sub
ss
shr
cmp
mov
mov
fistl
jo
jb
ljmp
cwtl
jecxz
cli
in
push
testb
lods
mov
fucom
outsb
leave
adc
pop
out
jp
aad
xor
aas
dec
mov
xchg
leave
sub
inc
push
adc
dec
jae
lods
mov
inc
xlat
scas
pop
push
fbld
xor
mov
adc
cmovp
cmp
negb
pop
popa
mov
rcrl
ss
fadd
ror
and
lods
addl
jge
divl
sub
mov
rcrb
in
fldpi
push
leave
stc
daa
cmpsl
add
jle
xor
adc
cmp
xor
push
test
mov
leave
jnp
pushf
lahf
aas
std
cltd
add
mov
pop
jle
xor
push
pop
leave
imul
leave
cmp
ljmp
inc
ror
and
mov
xor
scas
pop
out
xor
and
addr16
es
cli
lcall
cmp
lock
adc
int3
push
arpl
adcb
shl
pop
movhps
ja
xchg
lods
pop
xor
mov
mov
mov
sbb
cmp
ss
lods
or
mov
or
inc
xchg
cmp
pop
inc
sbb
scas
imul
fs
jl
xchg
loope
pop
pop
cwtl
icebp
mov
notb
cs
stos
into
dec
shlb
or
push
sub
adc
mov
xchg
fcomp
mov
test
pop
popf
cmp
addl
mov
int3
mov
lret
rcrb
adc
int3
mov
jne
pop
push
sbb
xor
pop
xlat
repnz
inc
push
adc
inc
add
cmc
stos
nop
out
jno
xchg
sarb
sbb
add
clc
and
cmpl
sbb
cmp
pusha
cmp
incb
push
movsl
jns
add
xchg
fbstp
outsl
adc
cli
or
dec
sub
or
mov
ret
mov
jge
sub
in
fs
sbb
push
test
jmp
cli
addb
in
repz
int3
stos
xchg
sbb
mov
xor
mov
js
xchg
pop
daa
mov
call
xor
inc
das
stc
cmp
mov
loopne
js
fsubs
ljmp
jg
xchg
mov
dec
push
loope
add
lahf
xchg
inc
ss
sahf
into
fimull
push
pop
pop
and
leave
mov
pop
xchg
adc
imul
add
sbb
repnz
stos
mov
shrl
jg
fs
test
mov
iret
je
std
or
daa
cmc
cmp
in
xor
xor
sub
test
xlat
call
and
mov
loope
add
fdivrs
mov
adc
mov
sbb
inc
dec
ds
and
dec
inc
sbb
xlat
incb
jae
adc
repnz
and
movsl
jle
popa
int3
push
inc
adc
test
inc
inc
xor
mov
ja
dec
enter
loopne,pt
sub
push
aas
shl
sub
sti
sarb
mov
pop
xchg
mov
shlb
ret
sbb
int
jne
and
aas
mov
lret
imul
adc
inc
lock
test
xchg
fsubs
fdivp
mov
ret
jg
scas
in
sbb
adc
inc
mov
loope
cmp
jmp
test
adc
ss
fsubs
jb
mov
pusha
shl
mov
mov
test
pop
sub
out
loope
movsb
int3
or
scas
jle
or
lret
pop
or
iret
fs
push
sarl
adc
adc
loop
push
jnp
mov
sar
lds
or
fnstenv
inc
shlb
mov
in
push
divl
ja
xchg
add
jo
and
stos
and
inc
test
pop
sarb
and
sbb
jg
pop
idivl
imul
adc
and
and
add
add
or
call
mov
mov
popf
pop
cld
push
mov
es
out
dec
repz
ret
loope
mov
das
pop
mov
pop
fistl
mov
fwait
ss
push
cmpsl
je
sub
xchg
xor
divb
je
inc
mov
and
mov
aas
sub
xlat
inc
loope
or
js
jae
and
pop
mulb
mov
lcall
xchg
addr16
jno
in
fidivrs
mov
sahf
cmc
out
test
cmp
push
pushf
int
push
adc
push
pop
loope
sbb
lret
std
icebp
call
adc
push
mov
jmp
data16
insb
mov
cs
push
fists
sbb
add
fmull
nopl
fwait
sbb
xchg
or
xlat
orl
push
mul
mov
nop
ret
fisubl
dec
inc
aad
lods
xchg
test
and
add
test
arpl
mov
pop
jno
cld
inc
inc
repnz
loop
xchg
and
leave
aam
or
ss
and
cltd
pop
repnz
and
gs
dec
sub
inc
fsubr
mov
out
insb
rclb
loope
add
stos
cli
pop
sbb
icebp
aas
fists
mov
xchg
es
outsl
aam
idivb
adc
int
push
adc
jg
out
ds
xchg
loop
int3
notl
add
stos
mov
fbstp
test
js
sub
mov
orl
and
pop
push
cmc
fisttpl
cmpsb
movsb
pop
loop
adc
movsb
push
vunpckhps
xor
dec
in
or
mov
inc
icebp
mov
pop
or
pop
jbe
xchg
lret
jge
cmp
fcmovbe
incl
inc
adc
mov
pop
adc
insl
mov
iret
inc
pop
ret
push
push
add
notl
out
mov
inc
shlb
aad
in
pop
mov
or
inc
dec
stos
sbb
dec
out
lods
sub
imul
in
jb
mov
inc
pop
cmpsl
hlt
in
push
cmp
mov
pop
pop
push
dec
imul
std
push
sub
into
xchg
psubusb
sub
add
mov
lcall
mov
xchg
aam
jl
xlat
cmp
adc
pop
jns
fs
sub
xchg
jg
pop
outsl
das
dec
xchg
dec
imul
sti
sar
push
call
xlat
adc
mov
or
sbb
mov
push
fcomp
add
push
mov
in
jne
xchg
pop
outsl
sahf
lock
loop
xchg
cmp
loope
push
jno
jl
shrb
cmp
add
xchg
test
xor
shlb
dec
bound
psubd
pop
adc
lea
cmp
aas
aaa
jg
test
ss
mov
rolb
pusha
shrl
pop
lcall
mov
mov
jecxz
movsb
out
shrl
daa
into
pop
or
into
js
adc
and
or
es
mov
xchg
sbb
add
mov
in
or
push
mov
pop
xlat
jp
mov
xchg
iret
mov
ret
xorl
mov
push
aaa
sub
aaa
sbb
sub
insb
fsubs
jb
adc
imul
push
testl
adc
inc
shlb
mov
cmp
mov
pusha
movb
xor
sub
pop
xor
shr
mov
xor
pop
xchg
inc
push
adc
xchg
jge
sbb
mov
pop
adc
mov
inc
xlat
les
pusha
adc
ja
mov
notl
test
adc
mov
mov
jnp
mov
aas
std
mov
or
daa
addr16
jge
je
shr
lods
mov
mov
dec
cmc
ds
mov
adc
imulb
icebp
sub
sub
mull
mov
test
push
adc
je
adc
cmp
mov
fstps
cmp
pushl
lds
je
clc
ljmp
aad
xor
adc
shlb
jbe
pop
ret
ret
arpl
cmp
pop
es
xchg
lods
cmp
mov
sub
stos
insb
aam
sbb
jnp
out
test
in
add
cmp
lods
jns
mov
in
bound
xorb
ret
sub
sub
loope
inc
addl
dec
dec
lcall
cmc
loope
into
mov
test
stos
je
ret
adc
sbb
cltd
xchg
fnstsw
in
xor
loope
add
out
mov
loopnew
dec
add
push
loop
jnp
dec
cmp
shll
int
in
mov
icebp
insb
je
and
pop
dec
xor
es
sub
and
dec
leave
sar
stos
in
iret
ret
fiaddl
gs
jecxz
jecxz
ret
inc
sbb
ret
lods
call
sbb
and
adc
sbb
repz
pusha
adc
test
loope
add
aaa
push
push
mov
scas
sub
inc
testl
sbb
sbb
dec
in
lods
lods
and
inc
lods
jg
fstps
dec
ja
jae
jb
jo
repnz
mov
add
sbb
mov
push
adc
mov
fldt
in
mov
lock
inc
pop
adc
adc
leave
mov
popa
stc
and
and
cmp
in
push
repnz
ficoms
mov
pusha
jne
and
sub
icebp
and
std
or
mov
aad
push
adc
lahf
sbb
popf
movsb
fisubs
mov
push
add
push
fcomp
sub
ficoml
call
jae
daa
in
into
add
mov
pop
icebp
stc
cmp
lcall
mov
jecxz
sbb
cmp
jbe
inc
popf
shlb
out
lea
and
xchg
or
mov
adc
je
loop
xchg
xchg
sahf
psrlw
jne
mov
dec
push
iret
sbb
loopne
mov
xlat
and
ss
loope
adc
or
xor
xchg
div
xchg
insb
andl
push
jae
sahf
mov
adc
mov
jle
into
pop
cmp
fnstsw
jecxz
adc
leave
adc
inc
sbb
jno
mov
loope
jbe
adc
inc
cld
mov
daa
pop
push
xchg
cmpsb
adc
aas
cmp
sbb
outsb
cmc
aaa
ds
lret
jge
mov
and
cmpsb
sub
xor
adc
pop
das
imull
fnstcw
mov
xchg
int3
jl
adc
or
pop
fs
mov
adc
outsb
fs
xchg
lods
or
mov
clc
je
jnp
adc
cmp
jle
mov
mov
insl
mov
or
jle
stc
and
std
jp
jge
cmp
shr
lods
or
popa
pushf
adc
mov
stos
or
outsl
repz
sbb
shll
adc
inc
add
lahf
sar
jae
cltd
push
loop
or
mov
jae
adc
sub
es
dec
out
push
ret
es
lahf
mov
sub
add
addb
dec
pop
jne
push
or
mov
fsubrs
scas
loopne
lahf
idivw
fcmovb
jp
gs
push
mov
dec
ss
outsl
and
sbb
cld
clc
sbb
dec
popa
sar
or
mov
push
jmp
jecxz
push
pop
loop
daa
cmp
push
pop
pop
dec
pop
add
icebp
in
imulb
adc
sahf
imull
push
les
leave
dec
test
add
or
movl
sbb
fistps
push
lret
xchg
unpckhps
fisubrl
add
pop
lock
cmp
repnz
xchg
cmp
jmp
push
or
outsb
addr16
adc
negl
or
in
adc
ds
sub
and
xchg
pop
sbb
mov
ficomps
in
test
les
imul
push
test
sbb
stos
cmp
add
pop
inc
aaa
xor
adc
ljmp
in
xlat
mov
push
dec
fidivrs
shll
pop
adc
imul
adc
stc
add
out
sti
inc
dec
push
cmp
int
push
or
popf
arpl
and
sti
stos
sbb
jecxz
loope
xlat
dec
popf
out
push
push
mov
lret
xchg
or
or
jmp
push
outsl
add
or
xor
pusha
jp
adc
fnstcw
jg
fmulp
xchg
addl
fcmovb
test
shll
int
xor
pusha
mov
lret
push
add
mov
test
xchg
movsb
push
loop
loop
lods
mov
out
shrl
data16
iret
test
rcrb
inc
mov
mov
pop
mov
mov
fsub
inc
fdivr
jo
out
jl
subl
mov
pop
inc
mov
mov
xor
or
daa
jle
mov
loope
aam
push
sbb
test
aad
cwtl
pushf
xor
or
stos
mov
into
mov
add
mov
lret
dec
jmp
xor
loopne
inc
rorb
and
push
mov
jnp
dec
and
mov
in
repz
test
out
jmp
js
push
fildll
fistl
test
pop
xor
dec
mov
pop
pop
movsb
jle
scas
shrb
sub
nop
xorb
jno
push
xor
inc
icebp
xor
fcoml
imul
test
movsl
or
movsl
pop
sbb
xor
arpl
stc
imul
and
sbbl
loopne
movsb
sub
mov
push
mov
xor
xor
sub
imul
ljmp
mov
add
int
pop
or
add
movsl
icebp
outsb
fists
jbe
sarb
lahf
cmpsl
gs
hlt
gs
xchg
scas
pop
mov
sub
xlat
jmp
imul
inc
add
fildl
fidivrl
outsl
popf
xchg
je
fnstsw
ljmp
sahf
lods
incb
mov
sub
pop
jp
dec
xlat
push
adc
out
les
or
adc
xor
pop
jge
inc
mov
xorl
je
add
dec
leave
mov
xchg
stc
cltd
out
rcll
xchg
sub
adc
shlb
and
lods
xchg
xor
and
jo
data16
clc
jb
sbb
or
push
mov
pop
ds
in
push
mov
dec
scas
cmp
pop
mov
enter
mov
adc
jg
sub
push
movsb
ja
cmp
mov
mov
arpl
ljmp
jo
leave
lds
push
jle
lret
push
aas
mov
mov
pop
xor
jge
push
sti
insb
dec
cmc
das
dec
sar
ja
mov
sub
pop
bound
mov
adc
cltd
sti
push
sbb
push
pushf
push
mov
enter
std
pop
cwtl
cltd
fwait
xor
jns
stos
jle
cwtl
sbb
std
jo
pop
mov
adc
and
mov
rolb
adc
sbb
jno
js
xchg
in
mov
pop
ror
jg
pop
sub
addl
add
xchg
testl
testl
pop
pop
adc
ret
xchg
aaa
and
adc
add
fsubrl
jge
dec
cmp
testb
mov
pusha
rorb
cltd
stos
js
rcrl
fists
mov
cmp
stc
sub
insl
push
imul
sti
jns
js
jmp
sub
and
jno
mov
fdiv
imul
imul
sbb
jle
push
out
push
jl
pop
or
add
inc
mov
das
iret
push
fildll
loope
dec
sub
lods
cwtl
mov
addb
jge
adc
mov
pop
xchg
popl
mov
cmp
fisubrs
int
mov
pop
shlb
mov
rcrb
or
push
leave
sub
pop
cwtl
dec
push
sarb
das
jbe,pt
xor
push
scas
mov
lcall
mov
push
ss
jnp
jno
aaa
in
jp
push
pop
movsb
add
int
aaa
faddl
xor
dec
or
inc
inc
push
adc
mov
jae
jo
or
ret
das
xchg
xchg
cmpl
push
adc
subl
mov
aas
in
test
stc
idiv
pop
push
roll
add
and
loop
adc
in
imul
enter
daa
xchg
dec
push
fldl
push
adc
pop
rol
dec
xlat
lea
mov
lret
or
icebp
mov
mov
pop
aaa
jp
idivl
test
pop
adc
mov
loop
adc
ret
inc
push
adc
aad
xlat
mov
into
sahf
dec
outsb
mov
aad
outsb
push
adc
clc
lcall
addl
xchg
cmp
cwtl
daa
adc
pop
adc
sub
push
cs
dec
loop
adc
les
daa
jp
add
mov
or
jl
aad
bound
cmpsl
faddp
push
cwtl
fnstsw
popf
and
mov
mov
jl
fxch
jbe
mov
jge
fisttpll
out
xchg
test
add
xor
out
mov
mov
pusha
inc
inc
int3
pop
adc
cmc
sub
imull
cmp
and
test
ljmp
mov
pop
lahf
dec
jp
das
sbb
inc
fdivs
imulb
jmp
push
test
jnp
sbb
insb
and
scas
push
fwait
mov
jne
enter
cmp
or
pop
lds
fistps
js
fstsw
pop
inc
fsubrs
xlat
aaa
cmc
mov
jp
lret
adc
lea
ljmp
pop
mov
mov
shl
and
sahf
aam
jne
sti
insb
test
mov
pop
decl
xor
insb
mov
and
lahf
aas
xchg
dec
stc
repz
loopne
jl
jb
fnstsw
cmpsb
enter
shll
sbb
xchg
push
pop
pop
jg
std
scas
xor
dec
add
adc
jge
scas
mov
in
lret
je
out
xlat
aaa
incb
adc
bound
push
mov
andb
mov
addl
shrb
xchg
dec
mov
les
sub
fnsave
xchg
loope
mov
cmp
lock
cmp
inc
cmpb
int3
jae
loopne
ret
clc
and
sahf
loope
cmp
mov
jecxz
lods
mov
dec
cld
mov
pop
repz
dec
fisubrs
js
aaa
jge
fists
out
ljmp
inc
decb
and
hlt
dec
out
orb
into
sbb
inc
pop
inc
mov
les
add
xchg
push
adc
or
sahf
imul
sbb
dec
push
push
test
test
mov
pop
inc
cmpsl
jle
and
cmp
divb
cmp
adc
insl
inc
push
adc
jecxz
test
add
mov
popw
sahf
xchg
idivl
lds
cmpsl
push
push
aaa
and
notb
movsl
in
cmpsl
in
adc
sbb
dec
and
xchg
sub
testl
mov
jno
or
into
or
ret
xchg
testl
push
std
daa
repnz
decl
nop
cmp
das
pop
pop
dec
xor
int
push
xchg
mov
test
mov
in
inc
sbb
js
sbb
andb
and
cmp
pop
jbe
repnz
jmp
cmp
push
adc
push
cmp
xchg
loopne
scas
mov
push
mov
xchg
stc
das
dec
sbb
insb
mov
adc
aas
ss
mov
mov
fidivl
aad
pop
rcll
mov
inc
pop
pop
pop
push
repnz
pop
cmp
jbe
pop
mov
xor
cmp
xor
and
std
mov
daa
ds
data16
pushf
scas
cs
pop
ja
int3
jne
mov
sub
and
mov
xor
jp
divl
mov
popf
inc
adc
inc
jg
shl
mov
ret
and
inc
ljmp
pop
push
pop
mov
pop
in
pop
pop
mov
push
dec
lret
dec
lret
inc
adc
sarl
sbbl
cmp
test
mov
add
inc
cmpsl
sti
jmp
sbb
test
jne
sbb
push
insb
cli
and
inc
pushf
test
push
jo
std
sub
or
cwtl
loopne
add
mov
jmp
mov
scas
fildll
mov
imull
and
popa
div
mov
imul
cmpsb
mov
shll
mov
cltd
lret
sub
push
xlat
or
or
mov
aad
stos
add
andb
ss
add
jo
les
xor
mov
xor
xor
int3
mov
pop
ljmp
mov
push
adc
shlb
stc
repz
mov
pop
out
pop
ljmp
lods
arpl
in
pop
or
mov
mov
pop
je
xlat
and
push
jge
adc
or
push
add
ja
and
cmp
add
mov
adc
fnstenv
mulb
and
in
cmp
sbb
fisubs
and
test
sub
push
ret
cmpsl
and
in
adc
mov
icebp
into
jmp
sub
inc
jnp
test
pop
or
test
sar
jecxz
nop
push
and
xchg
push
jae
adc
cmp
rol
push
pusha
dec
jbe
inc
cmp
xor
pop
mov
mov
jle
sub
lcall
cmp
xchg
int3
and
fsubp
std
lods
les
push
data16
mov
inc
fisubrs
push
loope
in
sub
in
in
mov
lock
ret
mov
or
rorb
ja
mov
mov
mov
in
addb
jae
cli
jae
outsb
jbe
sub
cmp
pop
outsl
fnstenv
loope
das
lods
sub
mov
or
aad
movsb
xchg
rorb
fsubrs
mov
test
dec
cmp
imul
jmp
mov
outsb
xchg
jns
jae
in
jb
fnstenv
mov
ljmp
lock
jge
mov
mov
out
cmp
and
test
push
cmpsl
cmp
loopne
insl
push
push
repz
clc
xlat
pop
adc
xchg
scas
lods
xchg
sahf
mov
push
popa
aam
adc
inc
rorl
dec
scas
loope
test
or
sub
xchg
dec
movsl
adc
add
lods
stos
or
aaa
in
pop
jecxz
add
outsb
mov
cmp
inc
les
mov
push
nop
push
or
imul
mov
push
adc
mov
mov
test
adc
push
adc
jno
xchg
pusha
cmp
ret
cmp
fadds
xchg
add
pop
lds
xchg
dec
push
inc
cmp
inc
push
adc
icebp
and
mov
mov
js
add
std
pop
sub
in
sub
mov
sub
xor
pop
adc
push
or
pop
and
mov
aam
adc
imul
jae
movsl
jge
fsts
in
adc
testb
cmp
cmp
movsb
call
push
adc
or
sti
mov
push
xchg
dec
pusha
xchg
mov
and
push
mov
mov
adc
push
cmp
ja
add
jmp
in
nop
bound
inc
dec
pop
call
xlat
push
adc
pop
cmp
ror
xor
andl
rcrb
cmpsl
mov
push
push
or
adc
popa
xchg
je
lods
dec
push
mov
sbb
and
push
popa
cld
sbb
lret
push
out
or
aas
ja
inc
dec
out
jo
push
bound
shll
ret
push
adc
sbb
mov
lods
jl
xor
sub
xor
fs
or
jmp
mov
xchg
notb
test
push
mov
push
mov
inc
shlb
ja
inc
push
adc
or
andl
push
mov
mov
mov
fcoml
pusha
stos
iret
lahf
mov
iret
xor
jge
pop
xor
push
in
fnstenv
cmpsl
jp
addb
jge
into
lahf
ds
outsb
sti
adc
aaa
sti
mov
scas
pop
push
icebp
cli
adc
aas
ljmp
jb
push
jo
pop
sahf
jge,pt
je
dec
mov
clc
and
cmp
cmp
mov
cld
stc
repz
pop
push
mov
adc
repz
inc
test
es
arpl
push
into
aas
sahf
aas
jle
ret
out
cltd
mov
pop
loop
jmp
adc
push
adc
movsb
mov
dec
cmc
cmp
jl
pop
adc
imull
mov
sub
movsl
popa
lahf
mov
inc
xchg
lods
pop
fwait
cmp
adc
stos
out
adc
clc
push
clc
pusha
sti
mov
ret
mulb
mov
lahf
jnp
xchg
pusha
sar
idivl
iret
sahf
aas
icebp
mov
in
xor
les
sbb
pop
adc
jecxz
daa
dec
sbb
test
lahf
adc
test
ljmp
mov
js
xor
lds
dec
pushf
cmp
idivl
and
jnp
jp
jnp
jae
pop
in
push
jmp
sbb
dec
dec
popf
inc
loope
inc
jo
js
cmc
xchg
loop
nop
std
pop
adc
out
addr16
xor
aam
js
xchg
adc
ret
mov
std
sbb
xor
out
jl
es
bound
stos
jge
pop
jnp
jo
lds
aas
sub
and
nop
mov
loope
in
adc
data16
fsubrp
add
fldenv
rorb
adc
sahf
pop
pusha
xchg
mov
xor
cmc
int3
outsl
decl
lock
aad
fnstsw
cld
lock
cwtl
mov
push
sti
sub
andl
pop
sbb
stos
pop
add
sub
push
in
insb
cmc
mov
adc
push
adc
add
sarl
dec
call
fstl
mov
pop
push
daa
and
pop
adc
mov
lcall
sbb
outsb
push
adc
pop
push
push
aaa
fwait
lret
cmp
cmpb
dec
sbb
les
dec
lret
popa
loop
jecxz
repz
ret
and
inc
mov
push
js
sbb
mov
cmp
insl
testb
sub
mov
aas
cmc
js
xchg
mov
or
popf
imul
js
jle
cmp
jno
roll
hlt
setne
aad
sahf
sub
test
mov
cmc
and
inc
xchg
jle
and
pop
loop
add
leave
cmpsl
sub
ficoms
negl
pop
cmpsl
push
sub
xchg
out
insb
jae
idivl
sar
paddw
imul
aas
pushf
test
ja
ret
jge
cmpsl
xchg
inc
mov
mov
cltd
or
leave
les
pop
loop
cmpsb
cld
mov
es
lods
fwait
cmpsl
fbld
jecxz
jmp
mov
pop
fists
sub
pop
imul
mov
adc
pop
adc
cmp
adc
xor
jbe
daa
iret
fadds
jle
xchg
lods
xlat
call
loop
mov
stos
jnp
mov
out
inc
pop
mov
lods
popa
sbb
hlt
cmp
loope
inc
push
adc
xlat
mov
inc
sarb
mov
test
adc
mov
push
out
mov
lret
inc
lahf
aas
jle
ret
xor
and
aad
xor
pop
mov
cmpsb
popa
xchg
mov
mov
shrb
fcmovb
jl
mov
adc
stos
adc
xchg
xor
jns
dec
and
adc
stos
pop
mov
mov
push
out
fisttpl
inc
fidivl
and
lahf
jge,pt
mov
and
scas
xchg
jg
idivb
sbb
cmpsl
orl
aaa
ja
je
or
and
popa
sub
scas
mov
mov
jns
pop
hlt
js
iret
mov
repz
push
in
mov
icebp
add
notb
push
adc
mov
repz
sarb
out
mov
scas
or
mov
orl
ja
enter
imul
adc
cmp
mov
push
mov
es
fwait
cltd
push
mov
std
stc
repz
and
push
test
adc
icebp
sub
dec
fwait
leave
sbb
adc
mov
ljmp
push
push
sub
xor
or
daa
pop
shlb
hlt
mov
pushf
cmp
cs
enter
xchg
jl
cmc
mov
push
sbb
push
jbe
sbb
pop
xlat
push
adc
sbb
adc
pop
jnp
aaa
mov
mov
unpckhps
add
int
mov
sti
pop
addl
ja
or
mov
mov
imul
pop
or
fwait
sbb
test
dec
mov
shrb
jns
mov
adc
cmp
fxch
push
or
xorb
pop
add
add
dec
mov
ja
dec
push
push
shll
sti
ja
mov
fcmovnu
aad
mov
mov
pop
fadd
aad
xchg
mov
aaa
shrb
mov
pushf
xchg
jo
mov
adc
xlat
cmpsl
mov
xchg
pop
xor
and
js
imul
sub
xor
bound
mov
push
loopne
jbe
mov
sub
outsl
icebp
xchg
sar
inc
or
pop
lahf
fucomi
mov
and
push
fnstenv
scas
jo
or
or
and
dec
push
out
enter
mov
es
sbb
les
fcmovb
xchg
stos
cli
addb
or
mov
push
sbb
mov
adc
pop
sbb
fs
push
adc
sub
sub
pop
xlat
aam
je
or
enter
out
pop
int3
imul
xor
das
sub
daa
aad
inc
adc
lahf
mov
sub
xor
addr16
fisttpl
repz
mov
outsb
dec
out
ficomps
aas
or
mov
mov
insb
shl
cmp
xor
out
in
pop
push
inc
jnp
cltd
and
insb
jnp
jle
or
push
dec
insl
inc
imul
fstpl
shlb
jns
test
stos
pusha
ljmp
dec
ret
mov
outsb
arpl
iret
jge
mov
out
dec
or
xor
jle
jns
and
adc
test
nop
add
jae
sbb
repz
idivl
sub
fwait
xchg
enter
in
dec
and
jno
repz
shl
sub
cmpsb
adc
rcrb
lcall
jb
aam
mov
xchg
clc
nop
cmpsb
lds
imull
fidivrs
int
sbb
daa
push
xor
xorl
pusha
rcll
and
pop
mov
test
ss
fsubs
je
fbstp
pusha
rcll
cmp
mov
cmp
imul
fnstenv
pop
xlat
xchg
cmp
repz
inc
push
adc
sub
scas
fists
imul
fsts
sarb
mov
hlt
js
ja
lahf
ds
and
lock
xor
pop
lret
jp,pt
xchg
push
adc
pop
testb
cmc
xor
sbb
push
addb
subb
jbe
push
mov
es
fwait
inc
push
pop
mov
shl
insl
sbb
pop
arpl
div
jp
lods
inc
mov
jge
xor
inc
iret
shrb
jb
xchg
xor
inc
cmp
push
mov
shrl
pop
or
es
xor
outsl
cmp
addb
aad
mov
test
adc
jmp
pusha
outsb
pop
cmp
addb
aad
mov
push
adc
insb
fadds
shrb
push
adc
stos
das
jb
push
jmp
pusha
fildll
lods
lock
into
fwait
ss
sub
outsl
fildl
test
sbb
sbb
adc
mov
gs
rcl
xchg
ss
in
ret
cmp
in
push
cld
out
fdivr
mov
dec
cmp
lds
adc
pop
inc
jp
dec
aaa
jnp
cs
push
sub
pop
jb
imul
or
push
xchg
or
jle
rcrl
pushf
daa
push
ret
pusha
sub
outsb
idivb
addr16
stos
jns
fwait
inc
dec
push
xchg
push
xchg
mov
out
xchg
or
push
notb
fnstenv
in
inc
test
movsb
sbb
cmp
adc
cs
adc
mov
in
std
ja
in
mull
add
push
cmpsl
in
cltd
add
dec
pop
dec
ficompl
add
sbb
push
cmpsb
xchg
pop
inc
rcl
fsincos
loopne
imul
xor
in
nop
xlat
push
adc
mov
pushf
xchg
sbb
xor
mov
sub
adc
mov
push
add
mov
adc
loopne
push
adc
sbb
push
cmpsb
pop
loope
fisttps
outsb
push
jbe
sahf
into
xlat
hlt
mov
xor
test
mov
popa
mov
mov
shll
and
sub
call
mov
in
jl
outsb
addr16
xlat
push
adc
xor
jle
frstor
mov
mov
push
mov
xor
and
leave
jge
loope
inc
xor
push
mov
ss
ret
pop
inc
pop
arpl
cwtl
mov
jmp
xchg
pop
shrl
fwait
aad
andl
dec
and
aad
popa
repnz
movsb
notl
into
jb
cltd
inc
dec
inc
jg
pushf
push
js
push
cmpl
xlat
push
adc
push
pop
push
inc
sbb
ficomps
cmp
mov
lds
push
adc
notb
sti
iret
mov
inc
dec
aad
push
dec
xchg
in
sahf
cli
cmp
fildll
pop
sub
push
fnstcw
fdivrl
loopne
cli
jae
xor
lds
test
pop
sub
mov
inc
out
add
adc
jg
aaa
pmaxsw
roll
and
adc
maxps
loop
cmp
nop
mov
push
adc
pop
sub
push
or
mov
mov
adc
mov
fwait
jmp
xor
dec
pusha
movsb
inc
pop
imul
jae
pusha
adc
negl
cmpsb
pop
inc
xchg
mov
or
xor
mov
stc
cmp
cli
sbb
mov
mov
lds
divb
sbb
inc
mov
test
or
aaa
sbb
orb
jae
and
insl
xchg
into
cli
and
loope
arpl
or
xchg
mov
xor
das
and
outsb
pop
fistl
outsb
mov
insb
fsubs
mov
out
xchg
dec
notl
and
pop
ljmp
out
xor
xor
jnp
out
jno
sbb
pusha
add
adc
popf
fisubl
scas
pop
and
or
mov
pop
fwait
jle,pt
cmp
in
pop
mov
dec
cmpsl
push
xor
xchg
jnp
or
xor
iret
leave
xchg
movsb
xor
cmc
add
mov
xchg
in
cmp
mov
xlat
scas
pop
in
pushf
in
push
call
and
fidivs
or
daa
mov
add
test
aaa
cmp
aas
cmpsl
inc
test
xor
dec
push
add
aas
inc
out
inc
push
adc
jnp
imul
pop
push
xchg
jmp
scas
call
mov
mov
outsl
mov
jne
sbb
popa
mov
mov
jmp
xor
dec
out
into
lods
jle
into
mulb
arpl
xor
jbe
push
hlt
mov
shl
xchg
jne
jno
loope
cltd
ds
add
mov
push
imul
aas
out
scas
push
mov
bnd
call
jae
into
jle
cs
xchg
push
lods
push
mov
inc
pusha
test
adc
mov
nopl
fs
imul
xor
popf
adc
dec
dec
jge
mov
lret
fcmovu
cwtl
sbb
dec
push
scas
mov
jno
xchg
jno
lret
mov
jl
or
inc
pop
xchg
subl
out
jb
push
jl
loop
xchg
pop
xchg
or
gs
shr
push
jp
or
fsubr
add
pusha
adcb
push
mov
pop
movsl
out
out
or
xor
int3
loop
mov
xlat
mov
xor
movsl
in
pushf
dec
pop
pop
stos
or
xchg
xor
pop
push
mov
mov
jns
and
push
hlt
cmp
sbb
test
adc
cltd
ljmp
jp
and
and
fistl
xbegin
insb
and
cli
addb
mov
bound
fisttpl
fidivs
icebp
xchg
pop
ret
or
add
ss
pop
or
push
cmpsl
dec
inc
daa
add
cwtd
jne
mov
js
pop
insl
rcr
inc
outsl
xchg
jne
xor
gs
and
loope
inc
mov
sbb
aad
sahf
mov
sti
mov
or
ss
sub
sub
jmp
clc
xorl
pushf
dec
scas
cmc
jge
pop
mov
shlb
out
pop
push
dec
or
stc
pop
xor
loope
das
hlt
jp
dec
and
arpl
call
dec
test
jo
inc
xor
mov
inc
outsl
in
inc
and
pop
inc
cmp
lret
push
je
popa
std
inc
dec
xchg
dec
sahf
hlt
mov
lea
shr
push
mov
xchg
push
rolb
xchg
mov
repz
xchg
movsb
jae,pt
jge
pusha
jecxz
mov
push
jl
shl
inc
sub
popa
or
imul
pop
jo
les
jne
jmp
sub
xchg
and
push
jae
mov
push
mov
xor
pop
or
sub
adc
sub
aas
push
inc
test
cmpsl
std
in
xchg
fwait
lods
or
xor
sbb
rorb
sarl
xor
sti
and
push
push
pop
adc
mov
movsb
mov
sti
mov
or
inc
out
ret
or
and
lock
sub
push
jae
pop
ss
leave
xchg
daa
out
cmp
or
adc
inc
clc
outsb
push
mov
sbb
fwait
mov
jo
cmp
addl
sti
sub
xor
inc
lahf
sbb
jno
jecxz
xor
xchg
adc
and
mov
mov
in
outsl
fcomps
or
xor
arpl
inc
xchg
inc
divb
es
fwait
cltd
jnp
stos
pusha
rclb
mov
cmp
repz
xchg
mov
pop
xor
out
es
mov
repz
or
xor
or
or
dec
sub
jnp
in
push
call
cmpb
xor
iret
daa
sbb
adc
filds
jne
push
inc
mov
sarb
mov
aaa
idivl
pusha
rolb
sub
inc
test
xchg
dec
lcall
hlt
mov
adc
movsl
sarl
call
je
adc
test
cli
add
push
call
mov
shrl
mov
imul
pop
jl
clc
sbb
popa
sbb
jbe
loope
xchg
push
scas
pop
mov
sbb
inc
pop
dec
adc
sub
sub
push
jmp
pop
xchg
jns
xchg
lods
jmp
lock
outsl
push
outsb
roll
cmc
jns
aaa
repnz
imul
jno
fdivrs
and
xor
les
mov
cwtl
insl
ja
mov
add
xlat
inc
cmp
pop
push
mov
adc
rcl
es
mov
lds
lods
lcall
cmp
sarl
mov
xchg
subb
mov
lret
xchg
outsb
lds
mov
divb
pop
push
pop
sbb
push
addl
inc
fwait
loope
mov
jecxz
cmpsl
adc
cmp
push
adc
lock
xchg
sahf
add
mov
sarb
push
rolb
sub
and
push
ror
inc
in
dec
in
and
test
push
int
and
xor
mov
push
adc
mov
mov
sahf
shrb
pop
dec
sub
enter
inc
lods
test
jne
aad
imul
dec
fcoms
add
incl
in
movsb
je
dec
lods
sub
sub
cltd
cmpsl
mov
pop
fcompl
sub
cwtl
xor
cmp
mov
jo
push
xor
lock
ds
pop
shlb
xchg
jg
dec
push
and
lahf
sub
jg
jge
imul
out
lock
outsb
adc
into
inc
push
jne
aas
mov
add
fsubl
mov
cmp
inc
testb
adc
mov
test
xchg
call
arpl
jmp
or
adc
fs
mov
imul
mov
cmc
outsl
xchg
sbb
add
sbb
xlat
movsb
inc
push
adc
dec
lret
rorb
orl
ret
inc
push
imul
aaa
mov
rep
push
mov
add
xlat
push
adc
inc
rcll
pushf
push
or
adc
std
and
mov
lret
mov
orb
xchg
daa
cmpsl
lahf
movb
arpl
fucom
and
push
xchg
sar
cmpsl
xor
aam
cmc
cs
cmp
jmp
scas
mov
fcomip
in
cmpb
inc
fisubrs
je
stc
cmp
cld
xchg
movsl
sahf
xor
adc
mov
cwtl
clc
xchg
gs
adc
iret
xchg
cmp
jle
ret
les
inc
jns
out
ret
aad
sahf
xlat
xor
in
dec
aaa
daa
dec
lahf
xlat
pop
stc
repz
test
in
mov
dec
sbb
dec
lret
mov
idivl
repz
shlb
mov
pushf
mov
dec
add
adc
rclb
scas
movsb
aam
cmpsb
inc
jne
push
addr16
cld
xchg
cmp
pop
jp
mov
mov
push
popa
ja
sbb
mov
addr16
in
push
mov
fimuls
ss
test
adc
add
xor
jbe
mov
jmp
not
jne
mov
mov
cmp
cmp
xor
dec
cmp
pop
sub
mov
adc
lret
lods
xchg
jae
xor
dec
ja
cmc
add
aas
scas
outsb
jle
in
lahf
dec
fs
push
test
xchg
sub
loope
mov
nop
fbstp
push
push
jg
sub
and
pop
popf
js
cmc
pop
pop
popa
xchg
xor
jl
imul
mov
repz
push
shrl
pusha
aam
xchg
add
push
cs
fs
jl
std
or
mov
movsb
bound
aaa
les
adc
shl
lret
ja
pop
mov
inc
fsub
sbb
ljmp
inc
lahf
xchg
pusha
ret
inc
pop
sbb
sbb
sbb
adc
nop
fisttps
or
roll
xchg
cmpsb
push
repz
lds
cld
ja
js
insb
loope
inc
scas
jg
pop
aad
sub
mov
pushf
sbb
psllw
divb
sbb
movsl
jo
or
popf
xor
pop
stos
sub
sbb
mov
icebp
imul
xor
jbe
add
aaa
sbb
jp
test
popf
lahf
sahf
xchg
adc
inc
adc
fcmovu
repnz
pop
scas
lock
aas
lods
jnp
les
lock
sub
pop
mov
inc
push
adc
hlt
cmc
popf
into
add
bswap
rep
pop
push
dec
nop
xchg
jno
jb
sahf
in
fdivrs
mov
sbb
xchg
sub
cmp
jecxz
rcl
or
or
inc
sub
or
pusha
pop
jns
mov
sub
adc
jl
popa
mov
lret
pushf
repz
enter
push
popf
dec
ret
push
mov
movsl
out
and
push
sbb
sbb
je
cmp
call
mov
cmp
scas
stos
jecxz
cmpsl
sub
movsl
add
imul
sarb
inc
push
adc
inc
scas
jecxz
add
add
ret
sbb
cmc
and
add
mov
add
fcmovnbe
adc
pop
and
and
jmp
sbb
pop
adc
mov
and
adc
loop
mov
popf
out
xchg
mov
sub
and
or
lods
inc
stos
mov
sbb
lods
xchg
jge
dec
or
jb
dec
ja
bswap
ss
dec
cmp
jp
jp
test
adcb
cmp
test
dec
xchg
addr16
push
je
cld
bsf
and
mov
shlb
lds
jno
mov
aaa
dec
ljmp
jmp
dec
jb
clc
push
fucomi
popf
out
sub
scas
cltd
xor
mov
and
daa
cmp
pop
cmp
add
filds
inc
negb
xchg
ja
dec
jle
jl
mov
or
mov
adc
or
pop
shl
loop
inc
fstps
sarb
mov
sar
sbb
lahf
ds
cmp
lahf
repz
push
inc
mov
pop
popa
mov
mov
stos
leave
xor
pop
ljmp
stos
in
mov
aas
int3
jb
sti
inc
fimuls
and
out
out
sbb
popf
or
repnz
lahf
les
rorb
push
imul
pop
les
movsl
stos
aad
jg
out
pop
je
inc
xchg
sbb
sar
cld
lods
js
pushf
leave
mov
jo
lea
popa
cltd
out
gs
jg
les
or
or
or
jp
aad
and
pop
cmp
shll
loope
adc
jmp
lcall
mov
mov
lahf
or
xchg
out
or
jnp
xchg
sub
jae
aam
mov
jae
xchg
mov
pop
lret
inc
lahf
out
and
fstpt
xchg
mov
iret
xlat
jle
inc
int3
shrb
add
pushfw
inc
pop
jae
std
jo
push
adc
jno
stc
cmp
stc
xor
aas
stc
mov
repnz
sbb
sub
xor
push
inc
push
aam
xor
mov
sub
in
fs
iret
sbb
cmp
fnstenv
in
or
aas
lock
nop
out
and
je
addr16
push
scas
mov
shrb
inc
into
leave
push
jo
insl
cwtl
dec
adc
pop
lea
fisubs
loop
negb
push
movsb
mov
dec
int
jns
push
add
mov
xchg
sbb
rcll
push
call
pop
imul
mov
inc
push
adc
sbb
push
jne
add
pop
hlt
sub
xchg
inc
adc
cmpsl
sbb
push
adc
push
lahf
fs
jbe
les
adc
xchg
mov
gs
scas
icebp
adc
adc
dec
cmp
adc
mov
fstpl
and
mov
imul
or
dec
cmp
lret
inc
call
dec
sub
push
outsl
push
adcl
test
lods
mov
mov
mov
lods
aam
and
adc
pushf
mov
inc
mov
pusha
push
adc
jno
pushl
in
sbb
dec
jp
popa
sub
xchg
dec
scas
and
mov
pusha
push
adc
inc
pusha
push
adc
in
inc
add
movsl
in
pop
pop
dec
or
mov
aaa
call
popa
pop
cmp
sbb
roll
pop
sub
leave
out
lods
loope
ljmp
popa
loope
lock
pop
mov
jae
push
int
mov
adc
mul
popa
or
shl
loope
mov
loop
test
inc
sbb
cs
es
outsb
jp
sub
pusha
mov
push
xlat
inc
mov
jae
adc
neg
push
push
jecxz
aas
add
outsl
mov
push
pextrw
cmpsl
xchg
into
sbb
or
divb
outsb
daa
cmpsb
pop
test
cmp
fsubl
add
sub
xor
les
test
mov
arpl
movsb
adc
cmpsb
mov
mov
cmp
out
adc
xchg
or
adc
psrld
push
jl
iret
fcomp
push
adc
cmpsl
add
or
or
cld
jns
mov
mov
outsl
sub
mov
lds
pop
imul
mov
add
lret
mov
popa
add
fnstenv
mov
fwait
mov
pop
sti
shlb
pop
ss
jl
stc
mov
pusha
es
popf
lock
dec
inc
fnsave
jbe
dec
pop
jg
or
nop
mov
scas
lods
out
pop
ss
cmpsl
mov
pop
sbb
pop
mov
mov
mov
dec
push
outsb
cmpsb
jecxz
jno
and
dec
lahf
mov
xchg
lret
adc
xchg
fdivrl
aaa
xor
lock
enter
push
ds
xor
cmp
mov
ss
mulb
sub
add
push
inc
out
mov
inc
sbb
or
jb
xlat
inc
lahf
mov
clc
daa
aad
leave
jo
popa
scas
add
lock
xchg
add
divb
mov
mov
mov
xorl
clc
jnp
sbb
push
in
mov
and
jo
or
in
popf
inc
push
adc
cmp
pushf
mov
mov
sti
movsl
cmp
js
fs
cwtl
push
or
cmpsl
sub
les
enter
adc
ds
inc
dec
sbb
popa
daa
xor
in
cmp
data16
cltd
xor
sbbl
push
insb
push
adc
and
xchg
xor
push
sbb
adc
xor
cmp
les
mov
adc
or
rcl
loope
mov
mov
push
movsl
out
in
and
add
mov
mov
mov
int3
in
clc
mov
emms
inc
sub
lods
shl
sbb
jl,pn
mov
icebp
sub
push
cmp
aad
cmp
push
aas
xchg
cltd
xchg
lods
cli
cmp
loop
fmuls
outsb
outsl
jo
xor
mov
and
notb
movsl
in
fwait
sti
cmpsb
out
sti
loop
cmp
fisubrl
mov
aas
sub
in
xchg
loope
lock
sbb
movsb
mov
aas
popf
push
rcl
fists
popf
inc
and
pushf
in
das
lret
xor
sub
cmp
imul
lret
fs
les
adc
jg
mov
pop
mov
xchg
xchg
mov
or
dec
and
mov
leave
sar
mov
lock
aaa
jecxz
jb
mov
xchg
jge,pt
sbb
aas
dec
mov
inc
sbb
out
out
jge
outsl
cmp
mov
and
sbb
dec
daa
neg
mov
push
sub
loope
call
scas
imul
pop
add
testb
divb
loope
ds
scas
cmp
mov
sub
cli
add
mov
cmpsb
cmp
mov
cmp
pop
aam
fistpll
sbb
pop
fildl
lret
push
adc
cmc
mov
fcomp
cltd
sbb
roll
add
aaa
cli
decb
addr16
cmp
xchg
cwtl
stos
das
jg
push
ljmp
enter
out
sbb
dec
pop
insb
scas
scas
cld
sbb
gs
scas
ss
filds
out
dec
cmpsb
push
jg
divb
and
sbb
xchg
inc
mov
mov
std
stos
mov
xlat
mov
ja
stc
repz
push
cld
jno
dec
roll
add
add
clc
sbb
js
mov
adc
dec
daa
shrb
jg
out
fnstsw
ficoml
jnp
in
push
mov
ss
ja
int3
push
jbe
mov
pmaxub
ret
xorb
mov
or
and
gs
fdivrl
and
sbb
roll
cmc
lds
pushf
adc
xchg
clc
xor
aaa
xor
clc
push
in
lods
mov
pop
ljmp
mov
incb
lods
cwtl
aam
sbb
mov
dec
adc
adc
mov
and
lock
inc
rorl
popf
out
mov
popf
mov
mov
jae
in
imul
adc
xchg
sti
push
dec
outsl
or
mov
popf
test
jnp
in
push
pushl
pusha
mov
mov
adc
mov
jne
xlat
and
dec
and
fidivl
add
roll
adc
push
sub
add
aas
pop
mov
aad
add
xlat
out
add
subb
movsl
xchg
sarb
xlat
pushfw
mov
jge
fucom
out
mov
aam
add
sub
in
push
inc
lock
and
sbb
into
loopne
jg
and
and
dec
in
inc
push
adc
push
pop
mov
out
mov
mov
shrd
adc
xor
sub
pusha
out
jns
and
dec
adc
pushf
stos
jle
pusha
mov
add
dec
sub
sahf
pop
push
pop
xor
sbb
out
mov
push
jae
das
or
in
sbb
jns
sub
test
xchg
dec
add
xor
scas
icebp
ret
insl
negb
arpl
add
cmp
xchg
inc
adc
adc
xchg
test
dec
dec
sarb
inc
stos
rorl
sbb
stos
shll
xchg
push
push
xchg
or
mov
push
fnstcw
pushl
into
jecxz
outsb
pop
stc
stos
push
ja
or
mov
jo
add
mov
mov
add
in
sbb
repz
cmp
push
arpl
cmp
dec
mov
and
mov
inc
push
in
and
test
push
mov
xor
pop
ret
jle
mov
imul
js
push
pop
pop
lahf
test
idiv
inc
push
adc
mov
jp
imul
add
mov
shrb
inc
xorb
cwtl
xchg
lea
and
sub
or
dec
mov
leave
cmp
push
dec
test
xor
faddl
cmp
out
cmp
popa
sub
sub
rclb
icebp
pop
sahf
ret
sbb
adc
cmp
in
inc
out
pop
push
xchg
mov
xchg
xchg
dec
movsb
jge
leave
mov
cmp
xor
aas
lea
pop
and
addr16
movsl
jle
iret
cmp
lret
and
rolb
jnp
inc
ss
sbb
xchg
gs
sahf
xchg
jmp
push
fcomps
mov
imul
lds
add
lcall
ror
jecxz
push
cmp
adc
or
mov
adc
les
negl
inc
call
pop
icebp
push
aam
inc
sbb
andb
add
in
sub
mov
mov
js
sbb
jne
jno
lcall
add
xor
pop
ret
inc
add
cmp
xor
insb
add
daa
pop
in
shr
sysenter
jae
shll
orb
adc
sub
push
cli
pusha
lret
push
xchg
push
jle
xor
mov
push
in
add
sub
mov
adc
push
in
fnstenv
mov
xor
mov
movsb
sti
fs
push
sub
jb
pop
inc
or
jnp
addr16
xchg
out
rol
mov
lock
jb
roll
lods
sarb
mov
mov
sarl
fldenv
cmp
ja
into
lahf
ds
test
fwait
shr
push
adc
mov
cltd
imul
pop
dec
fwait
nop
lret
popf
jle,pt
jb
push
xor
cmpsb
mov
and
jl
aaa
xchg
or
inc
fdivp
cmpsl
pop
push
addl
mov
dec
loop
insl
jo
sarb
clc
jmp
scas
sar
mov
pop
inc
stos
stos
adc
cmc
mov
int
cmp
cmpsl
arpl
jl
xor
jo
dec
sbb
nop
mov
cld
stc
repz
sahf
inc
and
add
xor
xor
xchg
adc
movsb
xor
cmc
mov
orb
add
insl
pop
mov
dec
adc
jp
cmp
add
cmc
jae
and
mov
pop
imul
fnstenv
adc
xchg
add
sub
add
fidivl
mov
gs
je
jmp
add
cmp
inc
mov
xor
xor
shll
or
mov
je
mov
lahf
loop
xchg
xor
jnp
mov
xchg
imul
cmpsl
mov
cs
jp
xchg
jo
mov
mov
ja
clc
test
jbe
aam
fsub
enter
xchg
xchg
mov
jecxz
xor
and
dec
mov
ss
orl
push
aam
imulb
aam
push
aad
mov
test
aaa
xor
cmp
push
lahf
mov
enter
xor
pop
pop
xor
and
daa
lcall
popa
mov
enter
sahf
mov
push
mov
andb
inc
subb
push
jl
daa
and
jmp
ret
les
cmpsb
insw
and
inc
xchg
adc
xchg
lahf
pop
mov
aas
xchg
sub
jg
mov
cmp
scas
mov
test
xchg
add
xlat
push
xchg
xchg
jo
push
adc
in
inc
ss
in
mov
adc
pop
loope
lret
pop
pop
cs
and
or
sti
xchg
fwait
stos
ret
dec
sub
lea
lcall
sub
idivb
ds
inc
in
in
das
sbbb
lea
dec
mov
push
adc
jne
inc
xchg
cmp
test
push
xchg
roll
mov
fidivs
loope
rorb
mov
xor
jg
adc
test
testb
pop
mov
stos
sub
test
sbb
cmp
mov
shrl
push
mov
add
stos
test
push
push
cld
push
dec
push
mov
inc
add
pushf
stos
stc
dec
push
pop
call
pusha
ret
push
adc
into
lahf
push
xchg
sbb
je
fistpll
xorb
sti
dec
loope
push
xchg
jae
subb
pop
adc
outsb
cmp
insl
fcmovu
gs
push
ja
and
inc
popa
xchg
xchg
push
or
xor
addr16
xchg
push
or
sahf
sub
hlt
in
cmpsl
fistps
aam
inc
roll
popl
mov
inc
cld
sarb
mov
push
adc
jg
rclb
sbb
or
lea
leave
rorl
jp
or
add
pop
fimull
pop
inc
lahf
adc
mov
and
lock
inc
mov
aaa
cmpsb
arpl
nop
pop
mov
mov
enter
pusha
sub
pusha
push
adc
ljmp
ljmp
push
adc
lods
bound
lahf
aas
sub
pusha
dec
lods
add
inc
pusha
push
adc
scas
push
out
pop
dec
fwait
inc
sub
xor
stc
rep
subb
pop
push
out
fnsave
out
xlat
pop
and
adc
adc
jno
outsb
mov
or
cmc
fcomp
push
adc
sahf
or
pop
les
jmp
stos
mov
test
adc
sub
pop
push
dec
cmc
ds
fcoms
sbb
xorb
out
pop
mov
loop
jecxz
jg
fnstenv
sbb
xchg
push
push
or
cmp
sbb
sub
push
fiaddl
scas
pop
ss
aaa
lahf
les
std
js
hlt
outsl
mov
in
fwait
mov
pusha
sbb
xchg
inc
test
addr16
mov
int
leave
adc
fs
inc
push
adc
jmp
mov
dec
ss
pop
mov
cmp
call
push
adc
test
adc
aam
imul
cmp
xor
pop
mov
test
xor
pop
jg
push
stc
jb
aam
xchg
aaa
add
or
push
adc
mov
and
mov
lcall
adc
push
orl
repz
lds
fldcw
or
push
adc
aam
cli
insl
movsb
sbb
or
mov
or
sub
mov
dec
scas
insb
repnz
mov
fidivl
push
adc
xlat
ja
mov
mov
stos
daa
hlt
lds
and
insl
loope
sti
dec
negb
add
cld
xchg
push
jge
outsl
sbbl
test
mov
mov
test
sbb
fwait
pop
and
insl
or
mov
dec
adc
sub
bound
adc
dec
mov
push
add
add
push
add
popa
mov
cli
sbb
fcomps
xchg
std
lea
mov
lea
adc
sbb
or
and
jnp
mov
cmp
mov
sti
sub
aaa
in
or
fisttps
cltd
and
jge
mov
inc
cmp
daa
jg
sbb
cs
int
ljmp
and
jmp
jns
xchg
dec
movsl
pop
dec
aad
call
mov
pop
or
mov
xchg
inc
inc
addr16
mov
pop
add
jg
div
cwtl
xchg
push
mov
jne
push
mov
mov
inc
or
push
push
enter
nop
cld
mov
clc
leave
sub
pop
mov
sub
loopne
dec
mov
mov
or
xor
dec
nop
imul
pop
add
loope
lea
push
cmpsb
lods
lods
out
dec
aas
sub
imul
mov
dec
push
sub
nopl
mov
enter
mov
add
cmp
movsb
in
test
outsl
xchg
test
jl
jg
pop
jns
or
push
and
adc
sbb
and
and
enter
sbb
ljmp
sti
push
adc
cmp
and
bswap
hlt
mov
mov
ljmp
popa
addb
jae
inc
xchg
adc
iret
fs
inc
add
cmp
pop
das
fidivrs
imul
jge
jl
jle
push
adc
xchg
lds
adc
dec
xor
fildll
imul
sbb
adc
jle
roll
adc
idivl
mov
mulb
scas
mov
aas
adc
jb
psubq
xorb
sbb
out
scas
pop
mov
in
mov
xor
fdivrs
cmc
int3
ret
push
jmp
lock
push
lcall
pop
xchg
adc
pop
mov
popa
into
std
mov
mov
stos
cmpsb
mov
fildll
cld
lds
xchg
fdivrs
xchg
xlat
sub
pop
or
mov
out
push
std
jno
pop
repnz
jmp
and
adcb
push
popa
inc
iret
insb
xchg
pop
orb
dec
pop
addr16
jae
fnstsw
xchg
push
int
in
seta
dec
out
cmpb
test
pop
ss
mov
pop
dec
dec
jbe
jle
stc
jle
ret
iret
insl
xchg
cmpsl
mov
and
mov
mov
imul
out
lods
mov
mov
jp
jg
pushl
or
jecxz
lahf
shlb
lock
leave
shrb
sbb
mov
arpl
and
fcomps
push
pop
jbe
mov
fsubl
outsb
push
mov
mov
xchg
sub
call
jb
jg
mov
lcall
outsl
in
sbb
fcoml
sbb
adc
aas
daa
jle
sbb
subb
int3
mov
xchg
mov
or
insl
lahf
inc
push
adc
xor
divb
mov
xlat
scas
int3
cmc
out
inc
jmp
shll
hlt
sub
rorb
ljmp
pextrw
mov
flds
adc
push
adc
clc
push
or
iret
cmc
xchg
sar
adc
push
or
mov
cld
lret
es
add
cmp
sub
sub
or
fcoml
out
push
jo
cmp
xchg
aas
ja
dec
dec
leave
cltd
xor
add
push
inc
dec
into
xor
jl
jo
sbb
pushf
in
out
jno
icebp
aam
xchg
fs
push
lock
fadd
push
and
pop
sbb
xchg
or
dec
push
daa
in
jmp
mov
int3
mov
push
xchg
and
push
adc
je
lcall
rep
test
mull
mov
loopne
or
xchg
into
lods
out
pop
xchg
test
and
sub
shll
jno
and
push
jmp
out
pop
scas
stc
loopne
cs
push
mov
inc
push
adc
mov
jb
js
xchg
out
push
enter
inc
sbb
mov
cmc
imul
lret
lea
loope
add
jo
loopne
cmp
shl
icebp
add
imul
cmc
dec
daa
pop
fs
lea
ja
scas
aam
xchg
push
imul
push
pop
or
out
or
cld
lds
sbb
lcall
add
out
push
inc
push
adc
adc
and
daa
xchg
pop
adc
pusha
mov
insl
hlt
sbbb
aam
mov
outsl
pop
mov
out
repnz
bound
cs
pop
push
aad
hlt
cltd
and
jmp
mov
jns
push
mov
call
hlt
enter
fs
mov
and
aas
inc
and
aaa
cs
mov
shrb
jnp
nop
pop
je
shll
je
test
jno
cli
adc
mov
inc
fidivrs
mov
xor
cwtl
lea
or
dec
mov
addb
fnstenv
icebp
out
lret
push
mov
cmpb
aaa
cmp
or
out
enter
pop
inc
xor
mov
mov
jnp
es
fwait
and
aad
pusha
mov
outsl
mov
mov
out
or
and
xor
mov
aaa
int3
leave
xchg
daa
iret
loop
je
sub
jp
lahf
ds
popa
adc
push
push
push
mov
adc
cmp
adc
jp
jge
sti
xor
stc
cmp
jmp
scas
idivb
mov
lcall
mov
xor
out
das
or
pop
inc
mov
push
ds
jnp
xchg
fs
in
or
xor
mov
insl
and
ljmp
dec
out
mov
addl
loop
ja
and
mov
scas
add
mov
xchg
adc
lahf
push
adc
xchg
lds
or
inc
sbb
addb
popf
mov
mov
add
les
jmp
movsb
sub
sbb
pop
mov
lcall
es
mov
mov
add
or
addl
or
pop
aaa
aaa
add
xchg
es
sahf
mov
or
pop
mov
fidivrl
adc
outsl
out
fidivl
mov
and
iret
push
je
std
mov
push
pop
mov
pusha
mov
inc
xchg
jp
and
stos
imul
mov
je
js
repnz
mov
jns
mov
add
cli
mov
stc
insl
aam
sbb
jne
subb
hlt
mov
push
cmc
shrb
or
sbb
repnz
and
jbe
cwtl
loopne
loope
sub
and
pop
icebp
and
pusha
cmpsl
pop
inc
imul
test
jae
dec
aam
xchg
pop
add
fsubrl
sbb
xchg
pop
insb
rcl
mov
test
lahf
push
stos
ret
xchg
pop
push
sti
mov
push
jl
xchg
and
out
mov
mov
sbb
cmc
mov
xlat
aad
dec
dec
loope
push
pop
mov
test
rolb
xchg
add
lcall
in
test
dec
dec
inc
mov
cmp
in
adc
pop
xchg
jp
and
dec
xchg
cmpsb
fisttpll
cmovle
ret
pop
js
mov
idivb
out
pop
pusha
pop
sub
roll
les
sub
das
fistps
mov
mov
mov
mov
mov
adc
cltd
ljmp
pop
cmp
or
mov
mov
adc
or
das
add
push
cmp
loopne
cmp
xchg
push
pop
data16
cmc
xor
lcall
bound
adc
xor
push
adc
sub
inc
xor
and
pop
ret
mov
push
andb
pop
sub
dec
test
jle
pop
inc
arpl
lahf
loope
repz
stos
das
ret
push
mov
adc
out
fadds
adc
les
nop
lcall
daa
mov
adc
rcr
cwtl
iret
dec
fdiv
ss
or
pushf
push
adc
sti
and
sub
inc
imul
rcll
fisubs
mov
xchg
aaa
dec
out
push
test
dec
pop
sub
aas
iret
lret
mov
fidivrl
mov
mov
mov
dec
push
adc
add
pop
jl
js
mov
mov
lahf
je
rorl
xor
fidivs
jg
mov
xlat
test
pop
adc
das
outsb
mov
push
adc
pop
xor
mov
mov
stc
fsubs
adc
add
pusha
mov
out
test
in
sub
jge,pn
cmp
lds
std
xchg
jmp
mov
sbb
adc
ficoml
nop
jge
leave
in
cmp
sub
adc
sahf
into
mov
jmp
mov
mov
push
ljmp
repnz
cmp
xor
mov
imulb
push
sbb
aad
gs
pop
iret
xchg
dec
les
mov
sbb
scas
aad
jge
leave
in
cmp
aas
jle
xor
mov
jmp
jne
stc
adc
inc
popa
inc
test
outsl
pop
xchg
pop
mov
popa
mov
xor
ret
out
test
mov
test
outsl
sbb
dec
dec
push
adc
sahf
into
mov
repz
and
cmp
mov
pop
iret
push
ljmp
xor
xorb
mov
inc
mov
aad
gs
pop
iret
jae
les
mov
sbb
scas
aam
mov
enter
stos
jno
rol
aaa
cmc
ss
or
imul
lretw
lcall
sbb
mov
push
mov
push
popf
rcll
cs
fstpt
cmp
mov
mov
dec
insb
add
lahf
int
call
scas
cs
xchg
fwait
jb
jno
test
cmp
push
insb
inc
jle
xchg
loop
dec
jns
fwait
popa
sub
or
out
shll
or
or
bound
mov
das
leave
pop
lret
adc
pop
pusha
dec
push
adc
jns
and
sarb
and
dec
push
pop
inc
cmp
int
std
push
jbe
aad
rcl
jb
not
std
enter
sbb
sti
js
lods
faddl
push
fnstcw
lods
loop
add
xchg
mov
add
arpl
xchg
sub
push
cmpb
sbb
cltd
xor
clc
xor
add
mov
push
cmp
out
inc
imul
or
imul
cmc
mov
jno
aam
mov
push
inc
aaa
aam
inc
push
neg
pop
repz
rol
mov
adc
xchg
and
adc
shll
aas
pop
mov
cmpsl
sbb
daa
sub
cmpsb
aam
add
pop
xchg
pop
neg
sub
push
pop
mov
insb
lock
mov
jle
rcrb
arpl
fcoms
inc
enter
ja
jbe
popa
jae
sub
ret
jae
xchg
cwtl
cmp
sub
adc
mov
cmp
push
push
xchg
sub
push
aad
add
jge
sti
aad
push
call
lcall
xchg
mov
dec
mov
repnz
dec
push
test
push
or
mov
adc
ret
cmp
scas
pusha
sub
aas
pushf
sub
xchg
mov
sahf
or
movsb
loop
inc
add
pop
out
les
inc
stc
clc
fs
pop
ljmp
lahf
cld
out
push
mov
inc
iret
insb
sbb
iret
jle
xchg
xchg
sbb
pop
aad
imul
int3
jp
icebp
push
cmp
push
pop
pop
sti
cmp
or
or
adc
enter
movsl
mov
mov
jp
ja
imulb
ret
xchg
jecxz
add
mov
aaa
cmp
aad
mov
mov
mov
or
mov
mov
jae
out
stc
or
sbbb
pop
dec
fwait
dec
push
push
dec
lods
leave
xchg
divb
ret
fbstp
and
push
lcall
mov
pop
xlat
xor
fadd
fistpl
jb
pop
mul
mov
test
pusha
es
mov
in
mov
ret
push
test
daa
test
jge
je
int
adc
xlat
sub
mov
jne
aad
cmp
lods
mov
adc
and
mov
jo
push
adc
in
push
mov
stos
mov
inc
ja
addl
jp
je
idivb
jge
aas
repz
test
leave
sub
xchg
push
out
jae
jl
testl
and
xor
push
addr16
popa
rolb
fidivrs
aaa
icebp
adc
rorb
adc
mov
xor
pop
cmp
fmuls
clc
pusha
push
adc
jne
lcall
mov
leave
jnp
andb
aas
mov
into
nop
mov
push
hlt
pusha
push
adc
jo
push
adc
nop
push
adc
and
and
push
nop
push
adc
mov
nop
push
adc
fnstenv
nop
push
adc
or
and
xor
sub
adc
sbb
pop
push
movl
in
push
adc
inc
orb
shlb
clc
iret
xchg
and
pop
ss
push
xchg
pop
jae
sub
xor
shll
adc
push
mov
push
pop
adc
fwait
ja
or
pop
xchg
popf
adc
mov
notb
shrb
mov
ja
or
jecxz
mov
mov
addr16
add
jmp
scas
adc
sbb
mov
outsb
ja
mov
sbb
push
incl
aas
adc
jo
xlat
push
cmpsb
dec
pop
jns
ret
or
mov
daa
dec
popf
xchg
pusha
push
adc
adc
inc
je
add
stos
fisubrl
inc
mov
cmp
out
jmp
cmp
inc
loopne
push
or
xor
add
adc
cli
test
or
stos
jmp
cmp
mov
sub
fsub
lahf
add
pop
fadds
xor
sub
pusha
insl
fcmovb
or
jae
pop
xchg
sub
lods
push
or
jp
daa
inc
or
pop
rcrb
jmp
ret
xor
adc
xor
mov
mov
jnp
cmc
jae
pop
lods
mov
lcall
and
sub
ds
pop
imul
pop
jp
in
daa
xchg
xor
jno
pusha
push
adc
pusha
ss
sub
xor
outsl
sub
mov
jle
cli
dec
daa
loopne
clc
imul
dec
dec
dec
out
lods
mov
dec
hlt
xorl
mov
js
push
shlb
imul
sub
and
dec
fsts
or
ret
lcall
pop
ja
push
adc
fstpl
ffree
mov
mov
lahf
mov
std
xchg
xchg
mov
mov
pop
and
add
adc
dec
fstpt
movsb
aas
pop
push
repz
cwtl
xor
cmp
xor
icebp
pop
jo
xorl
fnstsw
fcomps
shlb
stos
dec
pop
lods
in
imul
pop
outsl
sbb
push
lahf
cmp
push
or
mov
stc
and
sti
push
adc
xchg
sarb
test
and
mov
cmp
push
cld
pusha
push
adc
cmpsl
xchg
dec
loop
jge
repz
fcoml
adc
jnp
add
daa
lds
or
jge,pt
mull
push
out
incb
sub
push
inc
push
adc
js
push
adc
aas
scas
mov
push
adc
dec
add
in
mov
test
xchg
adc
mov
lock
or
int3
push
scas
pop
cmp
pusha
mov
cltd
sub
les
xor
or
arpl
jnp
out
xchg
mov
mov
insb
xor
adc
xchg
or
dec
pop
repz
adc
push
mov
sbb
out
and
dec
outsb
cmp
sub
sub
mov
xor
adc
ss
fucomi
cmpsl
ss
pop
pusha
dec
jbe
mov
cli
jno
xor
mov
lret
int3
push
or
xlat
jnp
and
into
sbb
xchg
adc
pusha
add
sbb
pop
inc
and
push
push
in
push
jl
xchg
jmp
dec
fdivl
nop
shll
xor
push
adc
mov
out
mov
sub
int3
pop
pop
mov
mov
aad
pop
mov
mov
adc
or
jns
in
ror
and
jmp
aam
pop
mov
mov
scas
dec
push
adc
jmp
cwtl
or
sub
stos
rcr
lea
cmp
xor
adc
jnp
test
cmp
pop
cli
sub
inc
sub
xchg
sub
xor
cmp
out
pop
ret
fldcw
movsl
into
mov
dec
xchg
popa
push
aas
and
call
nop
test
test
icebp
xorb
js
push
adc
dec
insb
pop
sbb
push
lea
in
fwait
and
xchg
cltd
into
xorb
js
push
adc
jmp
push
mov
out
add
mov
in
mov
mov
or
pop
push
pop
cli
and
sub
jbe
add
popf
dec
enter
or
rorl
fcmovne
jns
pop
mov
push
push
out
dec
loope
fs
in
sub
push
je
push
sbb
data16
fsubr
adc
sub
mov
cmp
js
test
xor
mov
sub
in
mov
jg
aas
and
fiaddl
push
inc
jmp
outsl
push
hlt
add
pop
xchg
cmp
and
xchg
or
mov
movb
xchg
jp
popa
jl
inc
pushf
xor
jp
mov
push
mov
divl
cmp
lcall
or
addr16
mov
cmp
or
dec
mov
inc
lods
xchg
adc
aam
jle
scas
psraw
cmc
je
xchg
xor
mov
dec
aam
dec
mov
dec
cld
in
sbb
imul
test
repz
add
mov
pop
lods
leave
dec
mov
lods
sti
leave
lret
inc
test
in
push
test
mov
in
test
push
dec
inc
mov
dec
xchg
test
stos
cmp
xchg
adc
cmp
cmp
adc
das
xchg
fcomps
adc
cmp
adc
push
aam
cmp
shlb
mov
imulb
xchg
add
shlb
test
jg
into
cmpsl
fidivs
sbb
mov
call
sub
jle
push
out
ss
push
dec
dec
les
enter
mov
clc
ss
leave
ja
das
and
jl
cmc
mov
xchg
lods
xchg
sbb
daa
mov
shll
add
decl
fmuls
push
mov
fnstenv
push
push
inc
jbe
clc
lods
mov
js
ljmp
aad
idivb
leave
xchg
fdivrs
xlat
mov
test
sti
push
cvtpi2ps
push
leave
push
mov
cmp
fwait
mov
hlt
jo
jmp
xlat
cs
mov
addr16
mov
pop
mov
xor
in
xchg
daa
sbb
mov
fsubr
js
mov
std
xchg
mov
mov
stc
sbb
sti
cmp
testb
aad
jge
aaa
decb
inc
arpl
test
mov
insb
adc
jp
jmp
adc
and
sti
out
push
push
jecxz
push
mov
lods
mov
lahf
lods
xor
ljmp
cmpsl
push
ds
jne
notb
in
pop
aam
leave
js
je
aaa
or
jb
jecxz
addr16
pop
adc
mov
sub
cmp
pusha
inc
pop
or
into
mov
jno
xor
cli
scas
mov
lds
xlat
icebp
add
idivl
adc
cmp
test
fdivl
pop
or
out
loopne
adc
dec
push
adc
insl
cmp
shll
int
add
adc
xor
orb
lds
popa
xor
arpl
dec
mov
dec
jo
mov
jmp
rcll
jns
mov
insb
xchg
push
fcmovne
jae
sahf
fucom
jecxz
rorl
xor
loopne
cmp
xchg
adc
lret
pop
popf
adc
mov
push
in
sub
add
mov
aad
lods
or
pop
add
shlb
mov
adc
adcl
mov
stc
pop
sbb
pop
ja
lret
mov
js
inc
sub
and
gs
cmp
jne
nop
divl
xor
scas
dec
cmp
and
pop
call
fldenv
jge
andl
das
lcall
bound
ss
and
xchg
movsl
imul
xchg
stos
dec
push
adc
xchg
jbe
dec
xchg
jmp
in
lock
movnti
jg
or
rolb
dec
aad
mov
fcomps
repnz
jno
mov
cmpsb
outsl
xor
push
pop
push
scas
jb
loope
cmp
outsb
jnp
leave
fs
add
daa
sub
lds
jl
lret
cmc
jg
stos
pop
mov
shrl
lds
shlb
repnz
shlb
cmp
jp
mov
xchg
popa
movsl
ljmpw
push
xchg
imul
xchg
jg
aaa
lods
ljmp
or
jmp
dec
lods
cmpsb
push
jno
mov
push
jnp
xlat
push
xor
fld
js
ficomps
mov
xlat
inc
stc
cltd
dec
out
notb
inc
mov
shrb
ljmp
jae
or
cmc
fcomp
test
and
cmpsl
xor
in
inc
mov
mov
mov
call
push
ljmp
iret
lds
jbe
xchg
cmp
outsb
jp
js
sub
lds
or
incb
mov
mov
xor
sub
or
push
aad
push
movsl
push
iret
movsb
add
mov
outsl
clc
cmpl
sbb
push
ret
into
shl
icebp
cmc
das
pushf
and
cmpsl
test
fsubrs
cmp
ss
cmpsl
les
test
cs
mov
xchg
fidivs
cmp
in
aas
mov
out
adc
idivl
aas
and
mov
cli
cmpsl
adc
adc
xchg
outsb
push
mov
inc
jp
mov
sbb
adc
jno
mov
out
pop
ljmp
cmp
or
adc
adc
jno
mov
out
pop
ljmp
cmp
cmp
addl
cmp
scas
pop
fnstenv
pushf
cmc
sub
ss
xor
and
fcmove
xchg
mov
fistpll
divb
pushf
adc
or
mov
cmpsl
mov
mov
inc
cmpl
xor
out
loop
ljmp
and
ds
jb
ret
inc
lret
divl
sbb
mov
jmp
mov
xlat
cmpsl
jl
addl
ror
idiv
jbe
fwait
sahf
pushf
jne
push
mov
xchg
dec
xor
and
fcmove
xchg
cmp
or
inc
fistpll
divb
jp
stos
push
mov
es
out
xchg
addr16
movsb
aas
mull
popf
jge,pt
or
sahf
pushf
sub
cmp
ficomps
arpl
cmp
popa
shlb
insb
sbb
std
scas
es
lahf
aaa
mov
or
repz
sbb
pop
aam
ja
cli
pusha
or
or
xor
mov
adc
fwait
popf
adc
dec
je
test
add
push
ficompl
clc
jae
mov
call
dec
pop
sti
scas
adc
inc
mov
xchg
mov
adc
repnz
sbb
push
mov
inc
jecxz
arpl
aaa
lcall
and
fsts
jle
pop
arpl
dec
mov
xchg
sub
fldcw
sar
clc
ficomps
lds
push
pop
and
cmp
in
pop
shr
or
insl
repz
out
outsb
add
and
fs
xor
and
stos
mov
mov
sbb
cmp
sahf
movsl
or
mov
inc
scas
pop
xchg
pushf
repz
fsubrp
hlt
in
or
push
sbb
pushf
xchg
jb
push
lahf
scas
gs
outsl
int3
insl
adc
or
movsb
and
sub
add
loopne
dec
xchg
add
dec
push
hlt
mov
call
or
pop
xchg
lcall
repz
hlt
push
insl
jecxz
popa
or
das
xchg
dec
dec
jno
inc
sbb
mov
dec
dec
adc
or
mov
dec
gs
mov
lea
lods
scas
jle
jmp
jecxz
mov
dec
test
xlat
sbb
or
pop
and
idivl
ljmp
lcall
sbb
xor
xchg
xor
mov
loopne
sbb
push
arpl
sahf
mov
std
cmpsb
xor
shlb
lret
mov
or
stos
push
cmpsb
mov
addr16
lds
push
inc
push
add
mov
sub
adc
adc
aaa
sub
jg
and
or
ss
popf
out
xchg
sub
inc
jnp
xchg
ficomps
jge
stos
jbe
jp
or
movb
mov
lret
lock
sub
jb
lret
cld
imul
inc
xchg
and
xchg
call
fildll
mov
ljmp
jg
push
outsl
popa
cltd
or
xor
or
inc
mov
jmp
dec
fs
or
fstpl
pushf
inc
aad
loope
xor
jo
ljmp
mov
and
iret
adc
into
pop
ja
xlat
call
out
xchg
push
sbb
out
das
inc
mov
jmp
lock
lods
dec
xchg
clc
in
lock
fisubrs
aad
adcl
dec
daa
sbb
xorl
inc
cmp
scas
sbb
jo
xchg
sub
mov
xchg
cmp
xchg
cltd
ja
mov
gs
stos
lock
cmc
mov
cmp
sub
or
test
ds
aaa
mov
loope
sub
scas
aad
xchg
shll
sbb
pusha
dec
jb
mov
mov
inc
lret
addb
int
mov
filds
push
stos
out
mov
jns
adc
dec
cmp
add
mov
mov
xchg
mov
mov
add
xor
adc
lea
outsb
mov
outsb
mov
outsb
mov
outsb
mov
adc
add
cli
mov
add
mov
outsb
mov
outsb
mov
and
add
inc
mov
jno
add
stos
mov
xchg
mov
into
mov
icebp
mov
jno
add
adc
add
push
popl
jno
add
mov
or
lock
cmp
xlat
mov
insl
cmpl
push
jne
or
lods
fnsave
mov
jae
out
inc
cltd
mov
jae
pop
push
std
jl
xchg
dec
aam
outsb
jle
xor
and
clc
sub
fcmovnbe
xchg
js
bndstx
mov
shll
aaa
scas
repz
mov
cwtl
xor
stc
jge
js
int
mov
das
inc
mov
and
popf
xor
loope
adc
xchg
out
pop
fimull
add
push
jbe
mov
ja
loopne
lret
fs
push
jl
pop
cmp
imul
or
cmp
xchg
or
daa
sbb
pop
jo
or
or
jno
inc
or
scas
jmp
mov
push
dec
jge
push
repz
xchg
push
les
rcl
adc
pusha
aam
lea
mov
push
rcr
sbb
mov
mov
adc
cmpsl
dec
push
js
fisubrs
push
out
fnsave
and
mov
mov
je
inc
push
jno
fs
bound
fst
fistps
xchg
std
add
fmuls
dec
scas
in
outsb
inc
andb
cmc
push
orb
mov
dec
add
pop
jbe
out
pop
orb
xchg
pop
fisubrs
mov
cld
adc
jmp
mov
adc
mov
mov
mov
mov
inc
adc
aad
mul
or
cli
and
xor
out
or
lea
xchg
popf
lds
flds
std
add
mov
ret
test
pop
cltd
cmp
pop
clc
fstps
cmp
insb
pop
rcrl
push
jnp
das
sbb
push
pop
add
out
stos
cwtl
in
push
adc
jecxz
movsb
test
cmp
adc
cmp
ljmp
das
popf
sub
dec
and
shlb
insb
stos
lods
cmp
aas
push
mov
mov
jmp
mov
xor
inc
adc
xor
ja
or
push
test
sub
sbb
jmp
push
outsl
pop
sbb
lds
aam
out
lods
dec
dec
sbb
imul
adc
std
inc
lret
jae
sub
pusha
and
popa
or
adc
push
movsb
mov
ficomps
pushl
divl
cltd
or
mov
push
hlt
adc
lock
aas
xchg
mov
push
inc
leave
test
fwait
sbb
lret
int3
repnz
and
mov
adc
andb
scas
push
xor
sub
cmp
mov
mulb
je
fsubr
popf
cmp
push
mov
push
pushf
mov
dec
dec
adc
xchg
imul
inc
js
aas
adc
shlb
lods
andl
sbb
stc
daa
pop
push
jp
adc
ja
iret
adc
jne
xor
xchg
mov
cmpsb
popa
pushf
mov
cmpsl
inc
int
add
stc
nop
orb
sbb
push
testl
pop
xor
jge
outsb
mov
movsb
into
add
jl
push
mov
aad
subl
xchg
movsb
xchg
mov
pusha
dec
jno
mov
add
inc
mov
das
jmp
mov
insb
sub
sub
cmp
pop
ja
push
inc
mov
es
sbb
xlat
addr16
arpl
aad
adc
outsl
add
and
inc
push
adc
push
aaa
divl
jbe
jb
push
push
sub
ss
mov
inc
xchg
cmpsl
ja
mov
mov
jo
xor
jo
loop
in
and
test
push
imull
mov
sub
xor
lds
adc
jnp
in
mov
sbb
pop
mov
fwait
cmpsb
xor
xor
scas
mov
in
loopne
stc
push
sti
sbb
mov
js
popa
int3
and
aas
jl
xor
push
add
mov
push
mov
popf
xchg
xor
pop
lea
pusha
or
add
adc
cmp
cmpsb
stos
sarl
adc
aad
push
nop
ret
lea
imul
cli
popf
aam
mov
pop
out
jl
push
add
loopne
fisttpll
popa
adc
sbb
test
jb
push
push
adc
adc
or
ficoms
or
std
mov
outsb
outsb
ja
sbb
test
add
xor
ja
jle
mov
ja
rcl
stos
jbe
dec
and
ja,pn
xchg
daa
fwait
sti
mov
sbb
test
popa
dec
mov
loop
sar
fsubs
sahf
sbb
lret
pushf
xchg
add
xor
jno
cmp
dec
pop
cmpsb
rep
or
iret
ret
fiaddl
sub
cmp
cmp
push
dec
movsl
aaa
outsl
gs
push
jge
lahf
bound
pop
sub
or
ret
push
adc
dec
test
xor
jp
pop
or
ret
lock
addr16
xor
lds
sbb
test
test
mov
adc
and
out
lods
ret
adc
jecxz
mov
xchg
lods
mov
imul
pop
arpl
jae
roll
push
dec
add
and
and
rcrb
in
ljmp
sti
pop
fildl
addl
mov
enter
mov
add
xor
dec
xchg
nop
cmpsb
scas
push
and
dec
push
jp
aad
mov
adc
pop
dec
add
push
mov
std
push
rclb
lret
or
push
imul
stos
mov
pop
push
jnp
mov
xchg
pop
addr16
rclb
pop
and
scas
adc
jecxz
jmp
inc
rorl
das
sub
shll
mov
push
pusha
es
pop
jecxz
hlt
adc
hlt
loop
fdiv
add
cmp
ja
pop
mov
sahf
mov
and
orb
or
or
jnp
outsb
or
and
jo
pusha
fdiv
insl
psrld
dec
push
loopne
stc
rep
aaa
fsubrs
popf
mov
fnsave
lods
outsb
or
pop
enter
cltd
pop
cmc
leave
xchg
daa
sbb
jbe
adc
iret
lahf
insl
xchg
aam
out
fnstsw
mov
mov
stos
adc
sbb
ss
lods
mov
rolb
jb
pop
dec
cmpsl
pusha
divb
popf
jl
push
mov
negl
mov
daa
mov
mov
add
arpl
imul
and
daa
cmp
sbb
and
pop
in
and
cli
jno
xlat
scas
pop
push
sub
adc
aaa
movsb
pop
push
mov
rolb
xchg
pushf
ja
or
divl
mov
mov
jge
std
mov
leave
imul
pusha
mov
movsl
xor
pop
cmp
xchg
mov
xchg
and
leave
mov
mov
jmp
adc
inc
pushf
xlat
scas
pop
xlat
push
mov
ss
out
push
dec
jo
mov
mov
or
addb
fnstsw
mov
xchg
or
pop
jb
pop
out
mov
xor
adc
or
jge
idivl
daa
inc
mov
pop
and
lods
dec
nop
cmpl
sahf
mov
test
stc
mov
jle
in
pop
jae
xchg
adc
dec
jmp
adc
dec
insb
ret
sub
add
loop
push
xor
push
aam
cmp
ss
adc
xchg
ljmp
push
cmpsl
xor
jmp
leave
ror
push
cmc
jmp
adc
jge
test
mov
mov
pop
mov
ss
pop
and
mov
adc
out
inc
scas
cmpb
add
dec
popf
adc
fbstp
pushl
fisttpll
xor
sub
jl
dec
inc
int3
pop
pop
hlt
xor
gs
testl
imul
mov
test
aaa
mov
jb
ja
add
push
int
rcll
lock
inc
pop
out
sbb
cli
call
out
mov
stos
push
data16
pop
ficoms
into
call
movl
and
adc
or
popf
mov
add
mov
loopne
mov
adc
xor
rcrl
pop
cmp
das
das
xchg
pop
data16
mov
jae
or
adc
pop
lock
fs
dec
xchg
sarl
sub
sub
push
cmpl
mov
inc
mov
cs
cmc
lahf
dec
nop
mov
pop
and
lahf
inc
push
icebp
repnz
cmp
lea
int
push
shrl
rcr
aaa
cmpsb
dec
xor
outsb
leave
inc
arpl
push
jecxz
sub
filds
adc
cmp
popf
xchg
xlat
jnp
sti
insb
fs
mull
dec
sub
dec
adc
popa
jnp
xor
in
jp
notl
stos
pop
cwtl
xor
aad
stos
in
xchg
sub
rcrb
dec
mov
inc
imul
mov
pop
pop
imul
cmp
movsb
movsb
ds
out
mov
jecxz
das
iret
cmp
adc
int3
out
nop
mov
lods
dec
sub
xchg
add
les
inc
dec
add
sbb
out
dec
or
and
pop
and
cmpsb
dec
insl
mov
mov
rcrb
xor
in
inc
and
pop
mov
repnz
push
or
adc
out
pop
inc
les
call
xor
cwtl
outsb
lret
pop
aad
mov
add
inc
mov
stos
outsl
fsub
repz
ret
mov
push
aas
xchg
push
or
fwait
mov
adc
fnstenv
xor
xchg
mov
cmp
fnstenv
mov
pushl
xor
jnp
jnp
out
test
mov
in
pop
dec
insl
mov
aas
jle
shlb
cmpb
loop
mov
jo
or
push
dec
out
mov
nop
test
mov
jp
out
inc
fldcw
xchg
jno
adc
push
movl
paddsb
jnp
movsl
pusha
shl
push
sub
xor
cmp
pop
addl
push
in
pop
dec
insl
mov
mov
hlt
push
repz
aad
lock
sbb
and
mov
xchg
mov
addr16
pop
dec
and
fmul
pop
mov
hlt
test
mov
add
and
sahf
sub
xor
sbb
adc
jb
mov
outsb
mov
push
and
sahf
sub
adc
ss
inc
adc
jp
mov
outsb
mov
adc
pop
sub
jge
outsl
adc
sbb
mov
adc
sbb
xor
xorl
pusha
mov
jp
es
out
lcall
mov
aas
jl
mov
xor
les
mov
jge
dec
lcall
lret
cld
mov
pop
repz
inc
mov
push
insb
and
repz
mov
dec
js
add
xchg
rcrl
std
icebp
call
shrb
pop
mov
lods
loope
lahf
push
pop
dec
jo
mov
fisubrl
add
pop
out
jge
in
leave
pop
cmp
xchg
dec
inc
scas
cwtl
pushf
mov
add
addr16
es
mov
int3
clc
hlt
mov
fstps
mov
mov
std
inc
push
mov
or
loop
add
mov
mov
adc
ret
and
loope
mov
adc
enter
inc
cs
rsm
lcall
sub
imul
test
mov
sub
js
jle
inc
hlt
data16
adc
jge
ja
dec
imul
mov
and
fsts
enter
loope
mov
lds
hlt
das
ljmp
nop
pusha
push
adc
dec
inc
inc
or
xchg
outsb
sub
int
ret
nop
adc
jb
adc
sahf
aam
aam
cmpsb
xor
sbb
mov
dec
pop
cmc
lret
push
pop
fbld
in
pop
jbe
or
fs
jb
lahf
sub
push
xor
mov
bound
push
pop
push
leave
push
jecxz
pop
es
cs
sbb
push
push
inc
sub
sbb
pop
sahf
push
mov
decb
cmpsb
sbb
nop
adc
push
mov
sbb
scas
repz
sub
aas
sub
dec
mov
adc
fimull
test
rorl
repz
dec
push
and
xchg
scas
and
loope
dec
mov
cwtl
dec
movsb
daa
cmp
imul
cld
call
jle
test
jne
repz
insl
cmp
sub
pop
shrb
and
xlat
testb
lea
adc
iret
outsb
cmp
jbe
push
lret
js
or
inc
mov
gs
push
arpl
addb
dec
sbb
lea
mov
sbb
push
mov
mov
aaa
inc
pop
or
xchg
lods
mov
ja
mov
jo
and
dec
inc
xlat
out
mov
adc
cmp
xchg
add
jg
aas
lds
xchg
test
fidivl
insl
mov
pop
mov
out
ss
push
adc
int
mov
or
push
ljmp
loop
xchg
scas
adc
cld
inc
push
jge
imul
push
not
bound
or
loopne
insb
fisttpl
mov
sbb
pusha
push
adc
mov
push
jnp
mov
outsb
mov
xlat
push
mov
or
aad
add
or
sbb
dec
adc
lods
je
inc
lahf
pusha
dec
jne
mov
adc
xchg
popf
leave
add
jne
and
push
iret
rorb
adc
pusha
rorl
sub
push
mov
pop
jae
fisttpl
ficomps
push
rclb
ljmp
aaa
jno
pop
cmpsl
aad
jg
sub
or
ja
addl
fcmovb
jns
inc
adc
inc
cmpsb
sub
dec
mov
ret
stos
insl
fmuls
je
or
or
cltd
pusha
mov
push
fstpt
dec
fwait
inc
fdivp
cmpsl
cmp
jle
jl
call
jbe
dec
xor
and
insl
xchg
data16
mov
or
push
shlb
cmc
repnz
sahf
fs
cli
out
mov
cwtl
mov
pushl
sub
es
rcrb
pmulhuw
mov
push
hlt
mov
push
mov
mov
and
mov
add
int3
add
adc
lods
daa
in
xor
push
ja
ljmp
cmp
icebp
rcl
insl
inc
jne
cmp
std
mov
scas
cmpsb
lods
cld
adc
out
sti
xchg
mov
aam
imul
jge
aam
mov
pop
test
ret
mov
lods
jb
sub
lods
mov
movsb
or
sbb
add
loopne
cmp
ja
mov
add
cwtl
mov
test
mov
inc
aad
xchg
xor
xor
mov
adc
pop
pop
sbb
aas
or
ja
cmp
add
push
pop
mov
cmp
pop
pushf
loop
fnstcw
pop
or
outsb
push
outsb
js
leave
dec
dec
push
adc
mov
inc
sub
sub
adc
and
push
inc
mov
pusha
lret
mov
sahf
dec
lods
int3
mov
mov
and
pop
fisttpl
or
in
mov
jae
cmpb
or
pmulhw
mov
jnp
adc
icebp
fstpl
adc
in
add
pop
xchg
enter
imull
and
mov
mov
cmp
xchg
popf
lcall
imul
mov
gs
sahf
scas
adc
mov
dec
imul
lret
pop
xchg
hlt
pop
mov
push
xlat
ljmp
lahf
add
jle
mov
loopne
xchg
testb
sbb
mov
mov
push
or
lods
push
push
fmul
ljmp
fcomps
and
inc
fstpl
cmp
out
jbe
out
jp
loope
stos
mov
mov
addr16
arpl
bound
fdivl
mov
out
leave
mov
inc
push
mov
and
shll
adc
jmp
push
xchg
js
or
jb
aaa
shlb
mov
inc
mov
jmp
out
mov
in
test
jnp
push
or
outsb
pop
aad
js
scas
jmp
lahf
ss
mov
and
imul
xchg
cmp
in
rcl
daa
das
in
stos
andl
mov
arpl
pop
pushf
push
cmc
lock
mov
into
es
cmpsb
into
mov
jb
or
xchg
mov
fwait
cli
stc
cmp
jne
out
int
cmp
pop
out
jle
addr16
fs
rorb
movswl
stc
lock
pushf
outsb
xor
loop
jmp
call
xor
mov
insl
in
adc
sub
sti
or
leave
rorl
pop
inc
and
push
and
rorl
fisubrl
and
insl
gs
jb
test
ja
xlat
and
mov
cmp
sti
xchg
dec
lahf
aas
xchg
sub
addr16
jle
push
bnd
push
fistpl
xor
leave
jnp
adc
aas
sti
cmp
xchg
inc
lahf
mov
pushl
test
mov
js
fs
push
out
jmp
idiv
je
jecxz
push
dec
jg
imulb
mov
cwtl
fstpt
fs
lret
jl
clc
xor
lcall
mov
mov
lret
or
and
mov
dec
push
adc
cmp
pop
adc
cmp
fisubs
stos
jle
ja
arpl
mov
adc
cld
shl
scas
jg
xor
fadd
adc
cld
clc
leave
sub
mov
bound
push
rdtsc
aas
mov
insl
scas
or
aad
jne
inc
mov
popf
mov
sub
jecxz
inc
mov
rcrb
cli
and
pop
push
push
push
inc
aam
icebp
mov
cli
loopne
test
sbb
sbbb
scas
jle
mov
sub
movsb
cmpsb
xchg
lahf
jge
sub
add
sbbl
adc
sub
mov
sub
push
mov
aas
push
mov
ds
and
and
in
cmp
insl
out
dec
fsubrs
imul
ljmp
sbb
lods
jb
inc
pop
movl
dec
ss
stc
rorb
jb
xchg
fdivl
imul
jae
inc
adc
push
mov
cmp
mov
xchg
add
mov
push
push
add
mov
imul
mov
adc
sub
or
sbb
dec
aam
pop
orb
fidivrs
out
lcall
xor
mov
xchg
test
push
mov
inc
sti
cmp
cmp
and
push
inc
push
movsl
xor
sbb
popf
mov
jnp
mov
scas
jae
jmp
popa
dec
push
aaa
data16
daa
mov
mov
jg
sti
sbb
lcall
out
cmp
sbb
mov
lods
aad
cmp
pop
jae
insl
push
mov
xchg
sub
sub
test
out
insb
test
xor
pop
rcrb
mov
cmp
jl
nop
xchg
dec
fimull
sti
fsub
fwait
imul
scas
in
dec
or
pop
sbb
sbb
test
adc
imul
jmp
jg
jle
movb
fsubl
loopne
and
lcall
ljmp
mov
dec
sbb
repnz
arpl
stos
ret
add
daa
push
mov
je
test
pop
adc
loop
jle
dec
ss
push
adc
es
out
xorl
divl
mov
test
int
jns
add
ljmp
jno
sub
push
out
shl
stc
lock
jge
stc
shl
mov
sarb
in
inc
test
cmp
cmp
mov
stos
xchg
mov
jl
repz
jo
lret
jb
lds
push
cmc
pusha
cltd
push
imul
cltd
sbb
cmpsl
arpl
push
mov
pop
jne
sahf
push
imul
lods
insb
or
cld
jns
mov
mov
jnp
cltd
sarl
adc
inc
mov
fucomip
cmp
movsl
repz
push
roll
or
cmpsl
mov
lret
dec
adc
lods
jb
por
lds
adc
adc
and
inc
sub
add
push
lahf
ss
pop
shlb
cmp
out
pop
cmp
adc
sub
mov
pushf
daa
dec
fwait
ss
cmpsl
inc
dec
jle
jp
jecxz
pusha
mov
adc
ds
cli
addr16
mov
les
jp
daa
adc
hlt
sahf
pop
addr16
push
popf
sarl
ss
cli
imul
pop
dec
lahf
aas
cmc
xor
inc
mov
add
icebp
divb
and
popa
sub
es
mov
fnstenv
divb
iret
lahf
idivb
es
fs
mov
test
ljmp
push
xlat
add
push
or
psllw
xor
cs
and
sbb
cwtl
jp
sbb
lock
mov
stos
test
mov
sbb
jae
sbb
pop
dec
dec
xor
mov
cmc
cmpsl
mov
cmp
cmp
iret
aas
lods
daa
mov
data16
add
daa
cli
mov
mov
dec
mov
lahf
jb
and
cld
cmp
fimull
sub
push
movsb
popf
lcall
addr16
dec
addr16
daa
dec
inc
inc
cltd
aad
inc
insl
adc
dec
lcall
mov
xchg
xchg
dec
clc
test
jbe
push
push
test
or
sub
sub
mov
in
inc
scas
icebp
mov
cmp
add
inc
fsts
xor
mov
test
testb
pop
and
gs
stos
ss
pop
jmp
push
repnz
inc
sub
shl
out
mov
sub
mov
and
add
mov
xchg
ficomps
stc
jb
scas
jle
cmp
out
adc
cmpsb
notb
leave
push
inc
mov
loop
aas
sbb
icebp
xchg
lret
xchg
sub
or
inc
cmp
inc
ja
test
dec
push
adc
add
outsl
test
mov
push
mov
lret
das
sbb
loopne
pop
lea
lock
mov
call
loop
ret
xorb
jg
jle
les
mov
push
clc
stc
inc
xorb
imul
cmp
cmp
movsb
ljmp
sub
aam
aad
popf
test
xor
adc
lods
add
pushf
arpl
movsb
xor
rcll
cmpsb
pop
mov
jb
jl
and
mov
pop
daa
mul
subb
mov
outsl
cmp
sbb
mov
cmpsl
aad
rcrl
push
adc
in
std
iret
jnp
das
inc
adc
pop
adc
rorl
ds
adc
pop
xor
daa
mov
cmc
mov
xor
arpl
push
xor
pop
lds
mov
mov
call
dec
repz
pusha
mov
push
push
pop
fcom
mov
rorb
mov
enter
out
ss
xor
add
pop
inc
pop
sub
jmp
movsb
add
mov
cmpsl
pop
mov
jb
inc
std
out
sti
stos
in
dec
insl
push
adc
lods
pop
xor
aas
mov
jl
or
inc
in
xor
inc
fdivp
les
daa
pop
add
subb
cmp
jne
xlat
scas
aad
mov
leave
pop
in
lahf
xchg
dec
push
adc
es
jge,pt
sbb
adc
or
test
mov
aas
jle
jb
outsb
mov
push
or
push
xor
push
xchg
dec
fwait
dec
neg
dec
enter
clc
repz
loop
addb
inc
push
lret
shrb
push
aad
cmp
xchg
daa
dec
adc
mov
test
dec
hlt
jge,pt
xor
pusha
cs
push
ljmp
cli
gs
inc
adc
pop
in
rolb
sar
push
jne
ljmp
pop
es
out
mov
cmp
cmc
lods
outsb
mov
gs
mov
test
ss
cmpsl
ss
jp
repz
pop
imul
cmpsb
adc
push
sub
mov
mov
dec
push
adc
sbb
idivl
xlat
sub
mov
mov
cmp
and
adc
lret
sbb
insb
mov
mov
adc
jns
xlat
fimull
fstpl
add
js
cli
sbb
mov
pop
js
xchg
data16
mov
lret
mov
js
loope
mul
add
gs
mov
cmpsl
ss
add
pushf
xor
outsl
dec
ror
bound
add
dec
push
adc
jg
shll
fcmovnb
xchg
lret
xchg
inc
cli
xlat
inc
push
jge
sbb
adc
sub
add
or
call
cmc
shrb
xor
adc
mov
inc
xor
mov
adc
jno
cld
xor
popa
jo
sbb
stos
push
dec
push
adc
pop
testb
inc
sub
mov
repz
out
mov
or
insb
xchg
sbb
shrl
lods
or
push
add
push
inc
jo
cld
sbb
cmp
daa
sub
repnz
mov
inc
ljmp
xor
xor
cs
add
dec
adc
fisttpll
pop
inc
adc
ficoml
and
lcall
dec
scas
adc
push
flds
leave
jo
mov
sub
fld
and
cli
addb
inc
popa
stos
hlt
lahf
cmp
inc
in
lods
cs
fisttpll
lcall
js
sbb
push
adc
push
fistpl
sarb
cmp
roll
mov
lods
xlat
into
int
xor
fiadds
sarb
icebp
push
sub
jo
or
loopew
xchg
mov
test
outsb
cli
dec
daa
pop
and
mov
or
xchg
pop
jle
push
adc
pop
sahf
cli
sbb
pop
or
push
inc
sbb
dec
jle
pop
cmp
jnp
push
fadds
mov
jg
inc
adc
pop
mov
jns
adc
push
cmp
sbb
mov
imul
mov
mov
mov
sbbb
sti
fs
fisubrs
and
ljmp
icebp
pop
push
out
stos
sub
in
push
push
xchg
or
dec
xor
dec
cmp
mov
mov
out
shl
dec
ret
pop
leave
arpl
jp
and
in
add
xor
sub
mov
aaa
mov
jl
cmp
push
insl
adc
nop
cmpsb
int
pop
dec
gs
pop
ljmp
pusha
dec
jno
and
arpl
mov
ss
jbe
lret
adc
jle
mov
lret
adc
jne
push
inc
fidivrs
mov
les
repz
jp
aas
ja
inc
add
arpl
mov
inc
mov
test
popa
pop
cmpsb
fwait
ss
ja
ljmp
daa
pushl
jge
scas
mov
iret
jge
pop
jecxz
inc
test
popf
jnp
fwait
ss
push
sbb
iret
pop
loop
out
test
pop
adc
call
xor
or
es
xor
les
inc
pop
ret
addb
and
jbe
push
mov
es
jmp
ja
pop
cld
stc
jp
addr16
xorb
and
bound
mov
loope
pop
repnz
arpl
arpl
popf
jge,pt
jp
test
adc
and
mov
dec
out
inc
repz
mov
fidivrs
mull
inc
dec
outsb
mov
jnp
fnstenv
dec
lahf
cmpsb
mov
adcb
jns
mov
mov
popa
dec
fwait
ss
stos
in
aas
jle
gs
sbb
popa
inc
pusha
adc
fdivrl
test
inc
bound
je
xor
jnp
lock
add
cld
xor
inc
sub
xchg
std
pop
adc
lods
leave
and
addb
push
xchg
add
mov
pop
and
das
pusha
push
adc
addr16
mov
mov
stc
or
jle
jecxz
push
inc
mov
add
fidivrl
hlt
inc
es
lods
pop
sub
sbb
pusha
aam
sbb
ja
mov
cmp
xchg
xor
hlt
out
bound
push
sbbb
stos
jns
mov
add
aaa
cmp
cmp
test
cmp
addr16
add
adc
xor
mov
inc
outsl
ja
push
scas
and
out
push
sub
add
cmpsb
out
repz
add
or
icebp
jne
sbb
cmc
add
fsubrp
das
and
push
bound
out
dec
into
movsb
in
lds
insl
je
push
orb
xchg
mov
icebp
xlat
mov
jmp
inc
sar
jecxz
cmp
mov
adc
bound
adc
xlat
sub
jg
in
inc
cmp
pop
sbb
addr16
pop
sbb
mov
inc
pop
mov
int3
test
ret
mov
test
in
loop
loopne
lods
cltd
shl
imull
xor
hlt
in
stc
dec
leave
imul
lods
cmpsl
add
imulb
daa
fistl
inc
stc
dec
scas
xchg
xchg
pop
dec
mov
test
mov
or
pop
imul
jmp
push
rorb
mov
idivb
or
xchg
push
jge,pn
cmp
cmpsl
imul
movl
push
loop
ficomps
ret
popf
addb
cmp
xor
dec
out
xchg
xchg
pop
lods
push
cmpsl
pop
cltd
fisubrs
cs
jl
out
cmp
and
adc
inc
cmc
ret
ret
data16
pop
lahf
repz
popl
xchg
call
push
mov
inc
mov
adc
jp
mov
pop
and
je
hlt
push
cltd
push
push
sub
das
int
inc
fsts
cld
sbb
sarb
rolb
icebp
mov
xchg
dec
sbb
lods
pop
fs
cmp
repnz
fistl
andb
inc
push
cmp
pop
outsl
sahf
jge
jnp
xchg
mov
loope
orl
lret
fmull
adc
mov
mov
push
mov
fists
mov
adc
mov
scas
aad
xchg
add
dec
out
mov
mov
js
repnz
adc
xchg
outsb
sbb
and
pop
push
aas
lods
jne
inc
cmp
shll
sbb
push
or
or
fnstsw
out
rcrl
bnd
add
and
jl
and
daa
roll
bound
loopne
popa
mov
xchg
or
push
push
push
clc
cld
pop
int3
xlat
cmpsb
mov
rep
sbbl
mov
ds
xor
xchg
ss
movsb
mov
movsb
mov
push
mov
imul
es
mov
aas
aad
jae
adc
cmpsl
ror
addl
push
mov
lods
shrl
sahf
leave
outsb
mov
and
imul
lahf
mov
push
rorl
inc
repnz
push
int3
insb
inc
aad
cmpsb
inc
aas
jle
push
xchg
ljmp
hlt
mov
fcmovbe
push
repnz
in
fnstenv
mov
lahf
aas
cmc
mov
js
in
ss
mov
cld
cmpsb
stc
gs
mov
mov
pop
adc
jge
test
rolb
jl
adc
xchg
lods
sbbb
rorl
mov
ljmp
mov
push
cmp
hlt
repz
pop
testl
ja
cmpsl
arpl
ret
sub
mov
push
insb
inc
lcall
cmp
idivb
sti
mov
pop
xchg
test
mov
imul
sbb
ret
or
xchg
cli
ja
mov
xchg
fwait
or
xor
or
shrl
push
cmp
sahf
icebp
mov
mov
mov
dec
fsub
pushf
insl
add
jecxz
cli
decl
gs
inc
iret
leave
ret
adc
mulb
or
inc
and
push
pop
mov
xchg
xchg
push
lds
xchg
push
dec
push
push
fnstcw
aaa
lds
outsl
push
xchg
out
insb
sbb
and
and
out
fcmovnb
in
rep
imul
ljmp
sti
dec
fisttps
aas
fwait
mov
enter
xchg
imul
and
out
adc
pop
dec
popf
in
mov
hlt
push
pop
or
adc
iret
or
notl
push
cmp
sub
mov
dec
testb
sub
xchg
decb
push
jecxz
push
fcmovnb
jge
pop
clc
and
popf
into
mov
cmp
push
sbb
repz
pop
dec
stc
dec
call
pop
rcll
sahf
and
push
inc
cmp
in
mov
out
pop
hlt
icebp
ds
ret
jge
enter
jno
mov
cmc
cmp
lret
fwait
push
pop
loopne
mov
sub
loop
push
sti
pushf
mov
fpatan
fnstsw
fcomps
sbb
rcrl
iret
clc
fiaddl
adc
les
sbb
int
sbb
negl
mov
push
addr16
dec
out
mov
sub
dec
push
adc
fucom
sub
fidivl
or
out
outsb
push
repnz
and
inc
add
push
adc
mov
in
stc
xor
or
out
lea
xchg
daa
mov
jp
movl
stc
rorl
pop
jb
push
mov
call
mov
jmp
push
push
call
jg
push
fsts
push
imul
xchg
push
pop
mov
repz
push
xorb
das
mov
sub
enter
mov
pop
imul
int
inc
mov
push
lods
sbb
ss
ret
xchg
stc
sub
push
aam
jle
push
cmpsb
sahf
cmp
fs
or
xchg
mov
divl
pusha
imul
and
enter
xchg
inc
iret
lea
addl
jge,pt
xchg
ljmp
mov
sub
and
les
std
jp
lret
sbb
jne
int3
nop
fxch
insb
mov
xchg
add
es
xor
roll
lahf
add
clc
mov
and
popf
sub
push
mov
call
fs
adc
lahf
data16
adc
sbb
pusha
xchg
push
adc
decb
out
sub
insb
inc
bound
ljmp
or
xor
fildl
adc
popf
fidivrl
push
mov
test
lods
paddusb
mov
adc
aaa
cmp
adc
mov
es
jmp
arpl
fsts
sbb
push
cli
jl
sbb
mov
aas
mov
inc
test
fisttpl
jge
add
movsb
push
ja
jge
xor
and
xor
mov
push
ret
es
lahf
xlat
andb
mov
inc
mov
sti
cmpsl
push
jp
jne
mov
aad
in
aas
lods
sbb
dec
lahf
aas
jle
cmp
out
lret
dec
push
adc
or
mov
aam
sub
sbb
pop
cli
lock
ficoms
repnz
cmp
mov
pop
cmp
cmp
lcall
and
in
add
movb
mov
shrl
jg
and
ljmp
dec
cltd
shll
dec
jnp
jno
cmp
int
pop
lods
cmp
sahf
or
xchg
cmp
sbb
mov
pop
addr16
outsb
imul
dec
mov
test
cmp
shrb
dec
lcall
pop
mov
je
arpl
or
dec
iret
lahf
pop
inc
pushl
xchg
adc
mov
fildl
adc
cmpsl
movsb
inc
sub
stc
mov
mov
shll
hlt
jns
repz
mov
stos
in
test
adc
inc
push
adc
push
adc
push
sbb
and
loopne
lret
outsl
mov
aad
inc
sub
or
inc
shrl
ret
xorl
loope
push
xchg
mov
jns
clc
popa
dec
mov
or
sbb
ret
jnp
fsubs
adc
and
jns
flds
jb
loop
aam
push
adc
sub
add
mov
in
pusha
push
adc
push
aas
xchg
ds
jmp
push
pop
or
incl
push
pop
dec
pop
inc
lods
xor
lahf
iret
leave
push
sbb
call
cmp
pop
imul
xchg
mov
lods
rclb
xchg
sti
rol
push
adc
mov
or
mov
nop
ret
aam
mov
mov
mov
inc
mov
push
les
mov
pop
lahf
aad
inc
add
aas
fdivrs
push
pop
sahf
les
inc
adc
jb
ljmp
inc
xor
insb
stos
stos
mov
mov
cmp
mov
shlb
in
ret
ficoml
mov
test
incl
push
jno
push
dec
add
jp
jge
movsl
and
jge
rcr
push
jae
push
cs
stos
popf
test
mov
addr16
cmp
cmpsl
or
out
fwait
push
xchg
xchg
cmp
dec
push
adc
bound
aaa
stos
aam
jecxz
sahf
or
test
xchg
jp
pop
mov
push
xor
out
add
jge
mov
stos
pmaxub
fidivrs
icebp
mov
cwtl
xchg
pop
arpl
adc
xchg
repz
cmc
aas
testb
cmp
xchg
mov
adc
lock
mov
mov
les
pop
cmp
cmp
pop
adc
jge
jbe
pop
dec
cmp
pop
adc
sub
pop
adc
and
int3
lcall
int3
data16
add
nop
scas
inc
inc
mov
adc
mov
adc
enter
adc
push
je
cmp
dec
cmp
mov
adc
jmp
mov
scas
out
lock
repnz
inc
mov
adc
jg
dec
dec
jns
cmp
mov
adc
inc
addr16
fnstsw
sub
mov
adc
es
lahf
add
jp
inc
mov
adc
mov
jecxz
outsl
sub
clc
mov
fld
and
stos
sbb
mov
loop
dec
cmp
adc
or
adc
scas
xchg
xor
out
cmpsl
scas
add
jb
jmp
outsl
push
and
popf
les
and
cmpsl
sbb
adc
das
and
inc
pop
dec
push
adc
jnp
imul
sbb
inc
shl
jnp
dec
sarb
xchg
push
jp
jne
sahf
xor
popa
mov
scas
and
and
stc
outsl
mov
inc
sub
xor
mov
add
clc
arpl
adc
pop
loope
pop
sub
or
cwtl
lret
jae
pop
mov
xchg
sub
push
xor
js
ds
and
adc
iret
xchg
ficomps
push
adc
cltd
adc
cmpsl
xor
dec
xchg
xor
cmc
gs
scas
daa
inc
int3
lea
jns
xor
xchg
les
das
nop
out
pop
adc
mov
lock
sbb
mov
push
repnz
adc
adc
jmp
clc
mov
out
stc
addl
xchg
fbld
xor
bound
ss
addr16
dec
ss
inc
sub
dec
shr
adc
addl
push
in
fsubr
and
stc
add
jmp
push
adc
pusha
push
adc
push
push
mov
andb
lahf
and
jle
ret
mov
xchg
mov
inc
aam
sub
sbb
sub
std
pop
push
xor
aas
jno
sbb
mov
in
xchg
adc
pushl
jecxz
pusha
push
adc
cmp
cmp
adc
pop
test
adc
sub
mov
adc
es
addb
push
cmp
jbe
imul
inc
out
mov
adc
push
adc
out
push
mov
gs
cmpsl
andb
dec
stos
enter
test
xchg
lret
adc
nop
stc
das
minps
shrb
mov
jmp
cmpsb
cmpsl
idiv
xorb
push
mov
jg
and
arpl
adc
mov
jp
pop
pop
mov
imul
int3
pop
adc
hlt
arpl
adc
insb
je
cs
clc
in
mov
dec
mov
push
addr16
lods
in
cmp
cmpsb
loope
dec
pop
and
add
call
push
popa
sub
les
or
inc
inc
sub
push
je
in
push
adc
sbb
popf
test
push
aas
out
int3
shlb
adc
push
adc
push
sbb
scas
lret
mov
adc
filds
push
lea
push
das
mov
sbb
insb
popa
push
adc
aam
loop
test
repnz
add
lret
xor
mov
mov
push
pop
rorl
adc
fnsave
jg
insb
pop
xor
pop
or
jl
repz
lds
decl
leave
jl
in
push
adc
xchg
dec
cld
nop
push
adc
push
sbb
sbb
lods
jmp
xchg
popa
leave
jbe
stos
adc
cmp
and
es
test
iret
and
les
mov
cmpsl
arpl
push
mov
push
cmp
ds
push
enter
dec
addr16
pop
addl
ss
push
adc
and
mov
imul
out
push
adc
pop
loop
jnp
or
xor
xor
adc
lods
je
xor
addr16
je
xor
pop
xor
cs
call
iret
lahf
aas
jle
push
and
idivb
xor
mov
cmpsb
add
ret
sbb
je
data16
repz
out
lahf
mov
and
and
sbb
xor
mov
es
xor
es
cltd
pusha
rolb
sbb
jl
call
inc
into
mov
test
cmpb
dec
adc
fdivr
jmp
addl
pusha
rcll
cmpsl
push
adc
jne
push
imul
pushf
mov
cmpsl
sub
push
adc
repnz
jecxz
insb
jno
aaa
test
ja
xchg
jbe
inc
dec
and
pop
adc
addr16
sbb
mov
js
and
mov
inc
dec
xor
cmp
adc
and
ljmp
jno
testl
mov
jl
or
popf
xor
pop
lahf
data16
stos
scas
add
add
movsl
cltd
dec
daa
push
push
mov
dec
mov
std
mov
mov
jnp
push
fcomps
fs
movsl
out
cmc
aas
mov
mov
dec
add
dec
mov
mov
pushf
outsl
mov
lods
nop
out
pop
adc
test
mov
push
push
in
adc
push
adc
sub
out
and
in
xchg
jns
mov
pop
mov
cld
std
lods
mov
shr
adc
xlat
jmp
dec
fiadds
sbb
adc
xchg
cmp
call
sub
js
pusha
push
adc
push
xchg
arpl
push
adc
fs
pop
and
dec
xchg
imul
jecxz
dec
xchg
loope
push
jno
in
lock
rorl
push
adc
adc
pop
jmp
aaa
sbb
push
adc
pop
es
sti
jmp
sarb
aam
cli
xor
leave
lahf
sub
lret
jbe
mov
push
out
shlb
push
mov
add
dec
sub
test
subb
aam
jae
lods
test
loopne
mov
lret
inc
int
xchg
adc
push
adc
sub
pop
in
std
jo
mov
jmp
addr16
jp
gs
and
push
adc
ss
pop
xchg
fadds
call
std
fiadds
mov
mov
popa
mov
push
mov
xchg
mov
stos
mov
and
mov
stos
mov
arpl
xchg
pushf
aaa
mov
push
adc
faddl
adc
add
lret
inc
fwait
mulb
xchg
cmp
mov
xor
push
adc
das
pop
and
popf
xchg
dec
inc
sbb
pop
mov
jae
sti
jge
jg
les
push
mov
mov
out
sbb
push
adc
mov
outsb
cmp
mov
pop
mov
inc
enter
clc
fildl
adc
xchg
or
add
jb
mov
in
xchg
popa
imull
imul
adc
fsubs
ljmp
jle
jnp
roll
jne
pop
and
inc
test
movsl
pop
mov
sub
mov
mov
xchg
sub
push
mov
adc
fildl
adc
and
mov
lock
call
sti
dec
fidivrs
incb
or
xchg
daa
ret
addl
mov
cmpb
push
aas
lds
sub
jmp
pushf
call
xchg
push
adc
iret
nop
ds
inc
mov
or
adc
loop
adc
lds
add
jge,pt
xor
mov
add
push
adc
pop
pop
es
xor
push
xchg
mov
shrb
jne
out
orb
and
inc
pusha
push
adc
jae
daa
dec
fwait
cltd
jnp
push
lahf
aas
inc
aas
mov
cmp
add
jbe
scas
pop
gs
icebp
fs
mov
aaa
insb
fadd
sbb
push
dec
adc
aas
rcll
scas
in
fldpi
jmp
pusha
jbe
shl
xchg
ret
mov
adc
outsb
popf
stos
jb
mov
sbb
mov
imul
push
rolb
cwtl
negb
sbb
or
sarb
gs
inc
mov
cmpl
cs
push
pop
ss
addr16
xor
mov
faddl
mov
pop
sarl
ljmp
push
adc
in
sbb
jno
jbe
inc
dec
xchg
mov
fldt
add
sub
in
push
adc
lret
and
mov
outsl
ds
xchg
xchg
jb
cmp
mov
xchg
push
pusha
push
repnz
xchg
and
mov
fwait
shlb
adc
mov
mov
pusha
and
push
push
cmpsl
in
andl
or
mov
or
cmpsb
out
sub
add
movsl
dec
and
pusha
push
adc
clc
jmp
enter
add
adc
mov
dec
sbb
and
sub
mov
add
ss
fst
out
mov
pop
mov
mov
subl
mov
adc
push
xor
stos
mov
cltd
add
dec
ficoml
lahf
xlat
cmp
int3
sub
outsb
xchg
fmull
test
out
pop
push
stos
pop
and
sbb
insb
sub
cmp
dec
push
int3
popa
push
adc
mov
fldcw
ret
aaa
add
or
cmp
lds
sub
dec
inc
fnstenv
pop
xor
test
rcrl
cmp
jge
call
ret
cmp
and
cmp
dec
lret
push
adc
adc
and
pop
xchg
adc
cltd
ret
ds
mov
sbb
jp
cmp
mov
push
adc
ret
std
hlt
hlt
pusha
push
adc
sti
loope
test
xchg
pushf
aaa
lock
push
adc
push
call
inc
mov
stos
dec
mov
adc
push
adc
test
dec
lret
into
mov
ljmp
cli
test
xor
adc
leave
cmc
jae
push
or
jge
pop
nop
pop
cli
pop
rcrl
out
dec
add
sbb
cmp
out
mov
cmp
pop
adc
mul
jnp,pt
lea
sub
mov
nop
mov
pop
xchg
test
imul
sub
xor
ret
fs
adc
icebp
mov
add
or
and
jge
xchg
xchg
pop
mov
not
sahf
ret
iret
mov
aas
jle
cmp
outsb
orb
push
pop
imul
jns
push
ja
jecxz
push
jo
pop
mov
inc
jle
and
jo
mov
mov
divb
dec
out
negl
cmp
mov
iret
mov
inc
pop
rclb
mov
xor
insl
dec
push
inc
xchg
sbb
xlat
popa
push
mov
or
jp
or
jbe
push
ss
push
adc
fisttpl
out
filds
push
or
fists
jae
adc
dec
es
notb
mov
shlb
xchg
stos
or
cmp
mov
fucomip
cmp
cwtl
push
and
imul
adc
pop
ret
sub
xor
mov
cwtl
outsb
and
mov
dec
fwait
mov
mov
sub
jo
pusha
push
sbb
push
adc
mov
inc
test
and
xchg
js
pop
in
cmp
cmpsb
inc
add
pop
ljmp
mov
xchg
dec
stos
or
outsl
repz
sbb
add
stc
scas
std
andps
fs
daa
xor
dec
outsb
repnz
sbb
pusha
ret
or
cmp
adc
mov
xchg
sbb
subb
rorb
repz
shlb
and
xor
and
mov
mov
mov
pop
push
stos
add
and
rclb
fs
adc
lret
andb
sbb
insb
repnz
out
push
sub
xchg
test
lahf
mov
mov
push
mov
shrb
addl
adc
lods
or
and
rcrl
adc
call
cmp
pop
adcb
nop
lods
sub
enter
xchg
push
repz
cli
sub
icebp
mov
popl
push
adc
popa
push
adc
or
mov
jmp
pop
push
pop
mov
fndisi(8087
out
adc
push
mov
lds
adc
pop
mov
push
fucompp
mov
pop
in
pop
out
mov
push
test
imul
jp
data16
mov
xchg
idiv
fldl
adc
inc
leave
cltd
rorb
cli
pop
adc
push
adc
push
outsl
loop
fcmovb
cmp
or
cld
pusha
push
adc
rolb
adc
inc
add
leave
daa
into
adc
xchg
fisttpll
or
inc
pop
nop
mov
sbb
rclb
or
xor
ss
xor
std
jmp
add
in
add
cmp
jge
cmpsl
sbb
test
mov
pop
js
push
adc
imulb
jnp
movsb
pop
push
pop
mov
test
mov
fisttpll
mov
push
fadd
or
inc
divps
mov
nop
mov
bound
jmp
add
jp
les
test
je
or
push
fadds
popa
push
adc
divb
aaa
arpl
dec
nop
xchg
sub
addb
bound
test
bound
adc
test
adc
scas
fistpl
jae
sbb
dec
lea
pop
push
mov
sbb
mov
lods
adc
repnz
push
hlt
sub
lock
out
imul
mov
mov
lcall
out
lods
pop
add
push
jecxz
mov
cmpsl
repz
test
stos
shl
into
js
cltd
xor
xchg
lret
mov
mov
decl
adc
push
mov
cmp
adc
loop
bound
adc
mov
or
and
lahf
sub
clc
mov
leave
shlb
pop
movsb
pushf
mov
fdivrl
fucomip
cmp
mov
mov
xchg
sarl
push
or
fisubrl
sub
or
adc
ljmp
xchg
cmp
and
fidivl
pop
adc
and
mov
adc
aaa
cmp
out
dec
inc
test
inc
xchg
fidivl
adc
xor
xor
leave
lret
inc
mov
push
insb
inc
fimuls
add
xchg
inc
adc
addl
jmp
scas
mov
loop
adc
adc
adc
sbb
adc
stos
jl
xor
cld
xor
idivb
and
cmpsb
mov
mov
fsubl
adc
addb
sbb
pop
push
sub
jnp
or
es
or
and
ja
push
cld
stc
jle
lret
subb
cmp
sub
hlt
cmc
mov
and
jle
jne
xor
adc
in
pop
adc
pushf
jbe
scas
pop
aas
xchg
sti
pusha
pop
xchg
lcall
imul
lfs
movsl
test
sbb
loopne
mov
mov
repz
jge
es
adc
insb
adc
hlt
cld
pusha
push
adc
ret
es
mov
fsts
jnp
add
sub
je
andb
xchg
cmp
cmc
je
das
jnp
cmp
sti
mov
arpl
cwtl
xchg
mov
inc
xchg
xor
sarb
jp
popa
xchg
mov
cmc
cmp
pop
repz
inc
fcoml
adc
int3
sub
and
dec
pop
and
call
addr16
add
insb
sbb
lahf
push
mov
leave
pop
adc
adc
inc
and
push
movsb
xchg
leave
pop
adc
add
mov
out
fwait
and
sub
cs
mov
adc
stos
in
fsubrp
add
push
repnz
and
movsl
mov
iret
ljmp
testb
dec
mov
mov
adc
dec
sbb
dec
ret
movb
mov
stos
xor
leave
out
xchg
es
adc
push
int3
pop
adc
pop
pop
push
int3
pop
adc
sti
pop
adc
andl
lret
cmpsl
mov
push
push
xor
sbb
js
test
mov
adc
stc
or
pop
adc
dec
mov
cmp
pop
adc
mov
adc
pusha
lds
test
and
das
adcb
sub
push
movsb
mull
pop
adc
cmc
cmp
addr16
dec
push
xor
in
lods
mov
test
cmp
in
clc
loope
sub
pop
dec
ljmp
mov
xchg
shr
test
mov
popf
fdivp
inc
pop
out
out
out
inc
jbe
fcoms
insl
dec
dec
xchg
iret
clc
xlat
rcrl
aam
rcrb
mov
adc
or
jo
pop
adc
xchg
fcom
cs
rolb
mov
fxch
mov
movsl
ss
or
sarl
mov
adc
icebp
fmull
add
mov
adc
insl
push
push
or
adc
imul
mov
adc
jecxz
pop
lods
push
inc
jge
fdivl
pop
out
cmp
cmp
pop
adc
mov
adc
inc
mov
adc
adc
mov
arpl
dec
mov
or
adc
xor
js
adc
adc
ljmp
lock
push
mov
adc
shr
stc
repz
fidivl
div
lahf
sbb
or
mov
jnp
insb
movsb
xor
mov
xchg
jns
xorb
rorl
xor
xlat
inc
adc
idivb
push
pop
mov
shl
test
xor
mov
imul
fstl
xchg
sub
shl
mov
inc
pop
dec
fwait
inc
rclb
sbb
push
loopne
pop
adc
push
clc
cmp
cmc
addr16
push
popf
inc
pop
push
mov
aad
sub
mov
add
clc
or
add
adc
xor
push
add
or
add
sbb
or
cld
pusha
push
adc
cmc
pop
adc
popa
push
adc
idivl
push
mov
lods
scas
or
dec
popa
push
adc
push
adc
out
push
mov
adc
pop
and
xchg
daa
mull
sbb
lahf
ds
or
sub
add
adc
push
loopne
pop
adc
roll
and
xor
or
rol
sahf
sbb
cmpsl
adc
addb
lret
xchg
push
in
mov
inc
pusha
xor
jae
movsb
cltd
aaa
pop
arpl
into
imul
enter
aas
mov
fistpll
fs
xchg
xor
push
aam
movb
bound
arpl
push
adc
sub
jae
out
mov
dec
or
dec
cltd
mov
in
icebp
push
fucomi
idiv
loop
ret
jno
cld
mov
cs
inc
clc
cli
pop
adc
repnz
ljmp
movsb
pop
xchg
or
addr16
cmc
ror
push
rol
test
dec
cwtl
sub
push
pop
pop
inc
add
cwtl
arpl
imul
outsb
sarb
push
or
and
mov
sbb
ss
dec
jb
ss
inc
rcr
push
adc
adc
std
cs
out
outsb
addr16
mov
cltd
push
sub
inc
or
les
mov
adc
cmp
bound
popa
inc
push
inc
fs
adc
lret
stos
sub
inc
and
dec
mov
hlt
pop
adc
sti
adc
rcll
jge,pn
popf
aaa
loop
dec
sub
push
push
int3
sub
loope
dec
and
fs
mov
and
push
cmp
nop
leave
pop
adc
mov
add
jle
shrl
xchg
lds
push
mov
das
xchg
pop
xchg
push
ljmp
inc
cwtl
adc
adc
add
or
das
add
or
mov
dec
xchg
inc
pop
insl
int3
clc
or
cld
pusha
push
adc
fists
or
shl
add
adc
cmp
imull
pop
or
arpl
or
xor
adc
sub
fcompl
inc
cmp
or
pop
mov
cmpsb
mov
out
cmp
pop
ljmp
arpl
shrb
dec
jg
add
push
jbe
add
dec
pop
inc
jmp
jl
mov
push
jmp
fwait
cmpsl
pop
ljmp
xchg
push
leave
push
les
addl
add
push
or
lds
xor
js
inc
sub
fcomps
hlt
cmp
lock
test
lret
nop
xor
lds
jns
mov
pop
pop
lcall
sbb
dec
sbb
adc
mov
lahf
fsubrl
mov
mov
lret
mov
sub
xchg
jo
sub
jo
fists
cmp
movsl
xor
push
push
and
test
aad
lock
pop
pop
je
les
scas
sbb
iret
cs
popf
in
and
jge
pop
push
dec
xorl
mov
sahf
insb
fdivs
and
sub
aaa
sub
test
lea
out
lahf
lods
adcl
fcompl
xor
test
sub
scas
or
mov
mov
fwait
mov
das
cmc
hlt
jb
mov
int
clc
cmp
adc
sub
lods
repnz
mov
inc
xchg
lods
pop
imul
xchg
add
das
cmp
jmp
movsb
adc
dec
jmp
addr16
movsb
stc
add
inc
repz
lahf
add
pop
push
ja
pop
xchg
cwtl
sarb
mov
ss
fcoms
pop
cmp
jb
insb
leave
lods
idiv
adc
scas
div
jns
xchg
cmpsl
jne
pop
out
iret
outsl
ss
inc
adc
xchg
imul
pusha
mov
push
notb
mov
lcall
or
jl
xchg
jge
ja
inc
test
inc
push
cli
addr16
cmp
in
sahf
popa
xlat
jecxz
pop
or
or
and
xchg
inc
test
push
rorl
ret
mov
cmpb
sbb
adc
inc
sub
jle,pn
push
mov
inc
call
addb
movsl
or
adc
jnp
cmpsb
arpl
push
pop
xor
push
jmp
movsb
mov
icebp
int3
sub
xchg
fs
js
loop
out
sub
mov
rcrl
sbb
xor
mov
rolb
std
repz
mov
out
mov
mov
les
add
fistpll
addl
jge
push
push
cmpsl
and
xchg
add
sub
xchg
iret
movsl
mov
nop
xchg
or
rol
inc
faddl
adc
sub
xor
push
cld
mov
scas
pop
jae
push
ja
add
ljmp
xchg
sbb
dec
mov
lods
mov
fcomps
loope
mov
jmp
add
cltd
xchg
inc
ret
push
jbe
iret
inc
faddl
adc
fwait
push
fwait
sbbl
or
sub
rcll
cmp
je
push
jbe
cwtl
insb
mov
xchg
test
dec
mov
movsb
cmc
imul
pop
jecxz
sbb
scas
jp
or
movsb
cltd
jle
in
in
pop
push
adc
push
fnstcw
and
jo
pop
lods
xor
jg
addl
movsl
jnp
mov
hlt
mov
cs
cmp
pop
ljmp
xchg
sti
pop
jge
mov
cmpsb
je
sub
pusha
mov
or
pop
enter
je
pop
xchg
fwait
sub
xchg
inc
test
aad
mov
adc
push
adc
add
rorl
cmp
stos
dec
xchg
xorb
je
push
adc
adc
out
mov
roll
mov
insl
hlt
lock
insl
jg
pop
flds
fnstenv
lret
lea
cli
cs
cs
outsb
dec
call
mov
mov
das
stos
in
into
adc
jecxz
mov
rorb
pushf
mov
scas
jg
jnp
cmp
stos
mov
sarb
push
adc
sbb
call
pop
push
iret
lods
out
ret
sub
in
or
pop
popf
roll
push
das
push
xor
pop
xor
scas
jne
imul
jo
jbe
mov
mov
sub
clc
filds
adc
xlat
xor
add
mov
jge
xorb
in
test
push
push
out
iret
xlat
jge
stc
rep
repnz
adc
adc
and
sbb
adc
jnp
dec
lahf
mov
movsl
mov
mov
movsl
xor
push
stc
scas
pop
xchg
mov
fs
fistl
xlat
dec
push
mov
jbe
iret
lahf
ds
push
adc
mulb
xor
xchg
ja
ficompl
out
idivl
push
adc
push
adc
push
adc
mov
ja
sbb
cld
je
loopew
ds
push
add
fistpl
cltd
jnp
setg
orl
imul
push
call
sub
push
adc
push
mov
es
popa
lahf
aas
xchg
mov
mov
cmpsl
push
adc
jmp
sub
xchg
jnp
mov
jnp
setg
push
cwtl
fiadds
adc
sahf
sub
mov
pop
mov
pop
outsb
mov
push
in
fiadds
adc
notb
test
mov
inc
imul
pop
ja
inc
xlat
xchg
push
sbb
repz
cmp
sarl
sar
push
adc
push
hlt
repz
adc
scas
pop
cmp
jl
jnp
mov
loopne
push
adc
mov
push
lock
adc
addr16
lret
shlb
pop
loop
mov
mov
mov
int
aam
imul
lock
mov
jl
and
jp
cmp
and
mov
test
jle
fisubrl
mov
dec
enter
mov
fsub
sbb
fbld
inc
inc
cli
sbb
dec
push
adc
clc
scas
shr
push
scas
mov
out
jns
pop
mov
fistpl
adc
sbb
sub
push
repz
xor
jecxz
cmp
mov
sub
add
add
gs
jno
cli
sub
je
and
mov
lds
mov
lds
scas
hlt
nop
or
lock
add
in
pop
push
xchg
push
sbb
xor
pop
in
insl
popa
or
xlat
xchg
lds
iret
push
jbe
and
sbb
sub
icebp
adc
sub
ja
mov
dec
mov
xchg
and
mov
and
xor
lahf
fcom
push
into
mov
adc
sbb
or
mov
mov
divb
mov
jge
ljmp
mov
js
movsb
dec
adc
lea
in
pop
jo
dec
movsl
lahf
jbe
mov
lret
decl
lret
xchg
push
pop
repz
xorl
cmp
dec
and
or
xchg
fldl
sbb
jne
push
subb
es
jecxz
or
addr16
pop
lods
jp
cmp
and
cmp
leave
mov
sbb
stos
cmp
jecxz
mov
ds
aaa
dec
mov
mov
and
xchg
pop
fnstsw
mov
jns
add
mov
xchg
inc
fwait
push
loope
popa
fldz
sbb
and
add
mov
dec
pop
pop
call
cli
xchg
sahf
fidivs
rcll
inc
bound
xor
andb
sbb
fistps
jnp
aad
ljmp
dec
lods
xchg
jge
les
daa
sub
aaa
cmp
cmp
lret
jbe
aaa
ss
mov
mov
dec
lret
cld
cmc
clc
xor
test
aad
mov
cld
pop
call
adc
dec
loopne
out
daa
xchg
aas
jns
adc
xor
mov
jbe
push
pop
jp
jecxz
jecxz
mov
jmp
dec
and
sbb
adc
std
jp
jp
out
add
addl
stc
mov
adc
stc
or
mov
inc
out
add
rorb
jb
bound
jmp
sub
mov
cmp
mov
sti
test
inc
call
enter
aad
lods
jl
xor
sub
fnstsw
stos
loop
jbe
xchg
mov
jge
sbb
lahf
ds
jle
je
mov
mov
mov
and
add
push
and
fmulp
addb
cmpl
rep
or
sar
push
inc
in
iret
sbb
mov
hlt
jo
jecxz
pop
ret
addb
cmpl
andb
ja
adc
add
icebp
xchg
sbb
or
xor
and
mov
test
in
lahf
mov
xor
cmp
xor
mov
in
sub
or
xor
rcll
mov
jbe
addb
arpl
xor
mov
out
xor
and
out
lret
sti
mov
sbbl
push
xor
dec
cwtl
xchg
into
jg
cwtl
cmp
stc
dec
push
adc
xor
jnp
jb
xlat
out
and
shll
sub
mov
dec
lock
leave
and
adc
jnp
xchg
mov
sbb
in
sub
pusha
sub
mov
cmp
out
test
mov
rorl
jge
loopne
cmp
into
fcmovnu
lret
scas
sti
repnz
aam
aaa
jbe
cld
hlt
je
sub
test
stc
pusha
push
cli
add
clc
leave
push
dec
inc
cs
in
sbb
lea
push
mov
lret
and
gs
or
jmp
xor
inc
cld
push
ja
xor
add
jl
es
test
pusha
scas
sub
popf
test
mov
adc
mov
std
and
es
mov
jne
sub
xor
repnz
fs
adc
jbe
aaa
jae
repz
adc
cmc
ficoms
adc
jge
jecxz
rclb
jnp
stos
cmpsb
imul
leave
jle
dec
in
sub
sub
add
iret
jl
push
mov
dec
imul
inc
std
lret
push
pop
fisttps
dec
cmp
cmc
add
roll
call
nop
leave
jge
cli
out
rcl
mov
cmp
jo
dec
xchg
ljmp
lahf
addl
cmp
inc
js
sar
mov
jle
jo
ss
xchg
nop
dec
push
add
jbe
mov
push
fucomi
add
movsb
cmp
pusha
sub
or
xor
scas
sub
cwtl
mov
jo
das
loopne
mov
mov
and
adc
in
adc
cmp
mov
lcall
ja
pushf
out
xchg
lds
fistpl
aaa
mov
jmp
add
enter
aaa
hlt
jns
and
popa
or
adc
sbb
bound
test
or
ret
pop
dec
push
sti
push
test
push
or
xchg
xchg
enter
mov
ja
jbe
pop
xor
mov
fisubs
out
pop
push
xchg
jecxz
aam
lcall
dec
jbe
daa
xchg
or
jbe
rolb
inc
xchg
push
cwtl
xchg
inc
mov
xor
leave
dec
movsl
imul
test
and
inc
dec
inc
test
mov
jo
leave
lds
jb
outsb
iret
adc
jns
mov
pop
fdivrl
in
rcrl
bound
and
xchg
mov
sarl
jo
fwait
xor
sub
pop
shl
mov
xchg
and
push
mov
mov
clc
jo
jecxz
adc
and
repz
adc
adc
mov
mov
out
int3
cli
ret
jle
mov
dec
addl
out
pop
cmpsl
push
jnp
or
es
inc
fisubrs
lret
jnp
nop
hlt
sbb
adc
mov
mov
xor
xlat
scas
pop
je
in
popa
and
lods
aas
jle
test
mov
adc
hlt
sahf
pop
addr16
testb
imulb
pushf
dec
gs
mov
lods
push
mov
jmp
add
push
xor
pop
pop
popa
mov
jne
adc
nop
xchg
int
xchg
aas
jle
stc
test
or
push
in
jge
stc
clc
aad
dec
mov
xchg
mov
mov
pushl
inc
sti
mull
mov
fiaddl
dec
fwait
sbb
rolb
clc
mov
mov
lret
mov
negb
les
inc
mov
stos
add
mov
inc
fcomps
cmp
adc
test
inc
fidivrl
cmc
idivb
push
divl
shlb
pop
sbb
int3
insb
movsb
cmp
add
sbb
mov
mov
shll
or
jns
sub
push
fsubl
dec
cltd
movb
ret
fidivrl
add
popa
mov
jecxz
cmc
flds
cwtl
push
sub
mov
ret
mov
xchg
decb
dec
push
adc
ror
les
fs
and
fcomp
subb
sti
mov
xchg
adc
add
jmp
push
sbb
loope
movsl
sub
outsb
jle
test
pop
adc
add
push
adc
mov
add
push
outsb
push
mov
add
mov
clc
daa
adc
aaa
dec
push
adc
xchg
and
loop
pop
cli
in
pushf
xchg
subb
fcoml
add
push
adc
cmp
insb
inc
aad
loopne
ss
mov
sub
pop
pop
adc
sub
dec
or
loop
adc
or
jmp
xor
rcl
inc
mov
fwait
rorl
sub
fstl
cmp
roll
pop
mov
rcrb
jmp
pop
mov
aad
mov
jecxz
es
pop
fcomps
decl
lods
mov
outsl
fistpl
push
xor
cmp
ss
or
add
inc
and
jbe
enter
xor
rol
inc
mov
flds
push
dec
adc
lods
sti
mov
cmp
mov
pop
cmp
cmp
adc
sbb
ss
or
adc
xchg
mov
push
sub
les
js
xchg
fsubl
std
mov
popf
lahf
xchg
pop
aas
pushf
fstl
adc
cwtl
addl
cmp
cld
dec
or
cmp
sbbl
mov
jecxz
fs
repnz
daa
bound
jle
aam
pushf
test
and
mov
mov
mov
or
lret
xchg
push
repnz
xlat
fisubrl
out
inc
mov
push
nopl
or
xchg
jle
adc
fidivrl
mov
mulb
pushf
scas
push
mov
dec
push
adc
out
popf
cmp
or
dec
xor
or
jl
cmpsl
rorb
shlb
cmp
and
jecxz
jne
adc
xor
mov
mov
and
test
sub
scas
inc
lahf
aas
jle
xor
jecxz
jbe
addb
dec
dec
push
adc
push
jno
jnp
mov
bound
fadds
or
mov
mull
push
dec
push
sub
jge
cld
adc
mov
shl
or
mov
sti
imul
fnsave
jecxz
cld
or
test
in
xchg
cmp
or
xor
jl
cmp
sub
push
xlat
lret
stos
fucomp
in
stc
int
lea
sbb
lahf
testb
sbb
dec
ss
cwtl
std
mov
cmpsl
dec
ret
jb
mov
push
push
adc
xlat
scas
fstl
mov
mov
sbb
xchg
mov
or
mov
mov
cmpsl
push
fisttps
push
outsl
sub
xor
cmp
lock
jp
daa
sbb
cmp
mov
test
adc
lods
mov
popa
sbb
repz
lahf
idivl
dec
push
adc
push
jo
jnp
add
xor
xor
dec
jb
jno
push
inc
rcl
cmc
push
aam
stos
add
pop
jecxz
xor
mov
sbb
popa
mov
je
cld
movaps
dec
xchg
adc
data16
mov
cwtl
shlb
adc
mov
mov
xor
stos
pop
or
mov
mov
repz
aaa
sbb
lock
dec
and
popa
in
xchg
xor
sbb
mov
cmp
mov
push
fistl
mov
push
xlat
xchg
or
cmp
repnz
lods
jmp
adc
xor
test
push
xchg
add
les
pusha
dec
into
jnp
dec
decl
xchg
or
adc
fidivrs
mov
xor
iret
dec
pop
dec
dec
int3
add
cmp
scas
mov
mov
mov
out
add
sti
xlat
leave
scas
xchg
ss
adc
jl
pmuludq
nopl
fs
subl
sbb
lods
mov
or
mov
sub
and
rorb
lahf
xchg
cmp
adc
pop
fwait
and
jnp
inc
cmpsb
and
arpl
sahf
push
loopne
adc
stc
aas
jp
mov
pusha
jp
xchg
sub
cmpsb
jae
test
push
adc
mov
lock
cs
or
pop
imul
xor
inc
cmc
popf
or
orb
mov
push
mov
jg
jle
insl
or
xchg
frstor
mov
mov
inc
das
jl
add
loopne
cmp
push
adc
or
sbb
cmpsl
adc
sbb
cwtl
ss
ljmp
icebp
xor
and
in
jnp
cmp
neg
add
cld
les
pop
es
xor
mov
add
adc
out
out
int3
aad
and
nop
cmc
aam
pop
xchg
xchg
test
xchg
rclb
sbb
fmull
orb
mov
loop
xor
pop
xchg
mov
mov
test
mov
fsubrp
adc
and
or
mov
test
cmp
nop
jmp
pop
push
mov
xchg
mov
pop
es
ss
inc
mov
mov
inc
push
inc
or
stc
lret
das
jne
test
cmp
push
mov
rcrb
mov
jns
int3
daa
test
jmp
pop
cmp
and
xchg
pop
jne
mov
rorb
jmp
je
mov
mov
xlat
cmp
adcb
xchg
push
cmp
pushf
xchg
mov
aam
xor
mov
data16
mov
mov
cmp
mov
xchg
fs
dec
or
jp
aad
not
in
fldt
clc
jo
frstor
cmp
jo
hlt
jmp
sbb
mov
aas
cmp
ds
pop
ss
fadd
fnstcw
sbb
enter
roll
mov
sub
dec
jp
out
es
and
not
dec
fnstcw
jg
repz
add
adc
inc
push
dec
test
lods
pop
xor
xchg
bound
adc
add
mov
inc
xchg
imul
mov
popa
xchg
data16
std
jnp
cld
je
pop
daa
and
mov
pop
mov
and
mov
push
xlat
stc
repz
adc
idiv
jl
sub
mov
popa
xchg
inc
mov
push
cmp
mov
lahf
adc
xchg
dec
add
and
cmp
push
outsb
scas
push
pop
in
adc
cmp
cmp
mov
cld
clc
repnz
pop
cmp
mov
pop
sarb
test
and
fnsave
xor
and
lds
xor
in
mov
out
or
sub
jge
jl
cmc
lahf
adc
stos
jl
sub
das
push
ror
jne
and
jns
add
cmp
gs
xor
adc
push
adc
mov
enter
xor
outsb
clc
xlat
xchg
add
shl
lret
es
repnz
mov
loop
xor
add
not
fcmovbe
outsb
icebp
es
or
jo
mov
test
lods
outsl
pop
inc
dec
cltd
cmp
lock
loopne
adc
fcmovnu
xchg
adc
into
sarl
push
adc
aam
outsl
lods
sbb
aam
mov
sub
add
jo
js
fwait
dec
fisubs
sti
fcmovne
xchg
xchg
push
sti
xlat
scas
mov
mov
push
ljmp
ja
cmp
lret
or
aas
dec
loope
das
cli
pop
mov
cli
mov
mov
sub
dec
xchg
daa
clc
adc
push
adc
leave
nop
lcall
ljmp
mov
cmp
pop
icebp
imul
mov
addl
sub
add
xchg
int
lock
xor
pushf
ljmp
sub
insb
movsl
test
add
mov
dec
js
push
xor
hlt
pushf
mov
jl
jbe
mov
loopne
push
pop
mov
das
jge
jp
movsb
mov
xchg
ljmp
or
jge
inc
add
sub
gs
push
cli
xor
orb
pop
dec
push
ljmp
or
lods
sbb
neg
les
cmp
out
push
scas
and
mov
cli
leave
cltd
mov
shrl
loope
scas
ffreep
xchg
imul
jo
ficoml
fdiv
outsb
push
adc
std
adc
arpl
dec
sub
inc
add
jnp
dec
sub
movsl
int
imul
inc
add
jg
test
je
push
adc
clc
nop
stos
add
mov
jmp
mov
daa
dec
inc
jo
jg
cmp
fprem1
cmp
push
adc
mov
jg
icebp
cmp
mov
daa
dec
xor
jo
push
adc
sub
and
sbb
add
fimull
xor
scas
push
movsb
mov
adc
xchg
mov
adc
adc
jg
mov
push
aad
mov
inc
imul
xor
and
push
test
and
fbstp
push
adc
outsl
test
mov
bound
adc
lods
cmpsl
and
imul
jle
adc
inc
cs
mov
notl
jnp
mov
or
and
mov
and
dec
cwtl
clc
xchg
add
repnz
push
imul
shlb
cli
out
fnstsw
pop
call
mov
lahf
sbb
lods
in
clflush
sub
arpl
mov
adc
mov
cltd
iret
lods
or
mov
iret
lahf
mov
adc
sub
jnp
mov
jecxz
lock
iret
mov
jno
jl
out
adc
lea
arpl
jnp
in
test
xchg
cmc
movsb
xor
or
pop
dec
xor
arpl
loopne
adc
or
push
imull
into
aaa
cmc
mov
mov
jne
mov
jp
scas
pop
mov
mov
jbe
ret
or
pop
xchg
inc
rcr
xchg
mov
xor
pop
cmpsb
cmovae
call
popf
outsl
out
lea
or
and
jae
sbb
adc
pop
or
xor
loopne
cli
aam
jo
mov
lahf
mov
xchg
js
push
adc
ds
call
push
adc
out
mov
mov
push
pop
ss
aam
pop
sbb
pop
pop
inc
sbb
adc
pusha
dec
xchg
jnp
ret
mov
sarl
loop
jl
cs
pushf
ficoms
aas
mov
aad
add
pop
add
dec
inc
inc
mov
dec
sub
jge
pop
sub
lds
pop
fdiv
and
insb
daa
lock
std
in
mov
test
ss
pop
jbe
jle
movsb
lods
mov
repnz
adc
or
mov
call
xor
cmp
pop
add
jge
andb
sub
sar
jle
xchg
add
push
cmp
es
push
cmc
mov
mov
push
fwait
sbb
adc
int3
mov
add
clc
dec
and
dec
enter
mull
xorl
mov
or
and
add
out
adc
push
add
aad
push
xor
popf
in
fdivl
dec
jbe
mov
fdivrs
hlt
jae
mov
sub
jp
add
or
dec
push
adc
push
fistpl
push
mov
aad
movsl
adc
push
push
xor
aad
push
aas
sub
pop
jo
jns
scas
test
es
movsb
cmpsl
nop
lret
repz
push
sahf
test
push
call
xlat
pop
or
adc
cmp
cmp
mov
fisubs
mov
fdiv
popa
cmp
xor
in
ss
xor
jno
mov
sbb
sbb
push
jg
xor
inc
dec
aam
lret
add
mov
jo
lds
imul
add
or
adc
mov
cli
fs
inc
dec
iret
mov
pop
or
push
pop
das
jg
push
fstps
push
test
dec
push
adc
pop
push
ss
pop
imul
add
pop
aas
loop,pn
mov
sbb
movsl
pop
jbe
inc
push
insb
sahf
aam
out
outsb
sub
test
test
and
dec
push
xor
jbe
pop
imul
or
movsl
lahf
push
jge
gs
fnstsw
fstl
movsl
mov
les
add
or
xor
jo
test
cmc
xor
pusha
stos
mov
add
mov
pop
push
jns
adc
iret
adc
pop
js
out
cld
mov
sbb
js
fdivs
mov
nop
mov
mov
cwtd
mov
enter
aas
dec
fwait
inc
pop
iret
push
je
addl
sub
addr16
push
pushf
xor
scas
pop
ss
pushf
mov
int3
dec
adc
xchg
fadds
testl
xlat
cmp
and
jno
pop
repz
pusha
jae
andb
push
jmp
xlat
scas
aad
lock
push
mov
mov
mov
pusha
jp
mov
mov
stos
scas
gs
inc
clc
out
pop
push
pop
xor
push
mov
out
xlat
cmpsl
popf
aam
add
pop
xchg
jnp
xorl
sti
inc
mov
or
cmp
rol
fcmovu
or
shrb
add
icebp
push
int3
push
sub
enter
cmc
cmp
ret
mov
sbb
mov
cmc
repnz
push
and
xchg
popa
xchg
inc
mov
daa
xchg
and
ret
mov
mov
adc
pop
inc
xchg
jae
outsb
and
push
mov
push
hlt
fwait
dec
push
and
pop
cmp
jbe
or
add
pop
sahf
dec
clc
test
xchg
sbb
and
inc
call
and
test
mov
pop
ret
xchg
mov
hlt
mov
cmp
mov
add
inc
loop
jl
xchg
xor
cli
cmp
aaa
int3
stos
xchg
dec
jb
lods
jns
inc
cmp
mov
fldenv
iret
shrb
imul
in
push
pop
movsl
push
mov
push
inc
push
aad
stos
orl
xchg
cli
rcrl
inc
stos
mov
xchg
fdivl
mov
push
rcll
adc
mov
mov
cmp
cmp
adcb
xor
in
mov
roll
mov
lret
xchg
push
push
mov
roll
and
push
pop
ret
lahf
in
lret
aad
mov
xchg
push
nop
xchg
and
mov
gs
sbb
mov
pop
shrb
cmp
sub
jecxz
mov
dec
enter
movsl
cli
dec
push
adc
mov
push
idivb
lcall
dec
jl
pop
sarb
aad
pop
jecxz
addr16
and
push
aas
pop
xor
test
push
sub
in
mov
inc
mov
jmp
pop
inc
pop
sbb
push
push
jnp
pop
insl
jb
jbe
push
lea
in
push
push
into
out
mov
repnz
cmc
dec
cmp
sub
test
idivb
dec
push
adc
sub
lcall
sub
add
shll
push
adc
mov
cmc
gs
push
pop
call
popf
fisubrs
cmp
mov
divb
test
out
jl
push
rclb
lea
jmp
outsl
pop
mov
in
je
sbb
adc
iret
inc
cs
mov
mov
push
inc
and
fs
mov
inc
inc
lcall
aad
mov
ret
push
roll
js
xchg
jecxz
mov
mov
mov
clc
mov
push
mov
out
flds
mov
jo
out
jge
ss
mov
dec
dec
push
adc
lock
dec
call
test
mov
fimuls
mov
lcall
test
and
jl
mov
inc
outsb
das
jbe
ds
icebp
and
test
rorl
dec
nop
mov
insb
leave
adc
stos
mov
mov
inc
xor
pop
sbb
stos
sbb
testl
mov
stos
jg
rol
bound
fs
sbb
adc
repz
sub
cmpsb
repnz
jp
mov
xorl
push
sbb
repz
loopne
adc
fldenv
jmp
rorl
inc
adc
scas
test
jge,pt
mov
push
mov
adc
cmpsl
rclb
mov
loope
ds
call
fcmovbe
mov
mov
adc
cmpsl
mov
mov
sbb
pop
mov
jne
sbb
pusha
mov
jbe
push
mov
cld
xchg
aas
and
cmpsb
int3
loopne
mov
pop
sbb
aas
push
xchg
loopne
adc
notl
enter
adc
or
jg
cmp
and
das
int3
jae
cmc
add
push
fwait
sub
inc
add
mov
addr16
pop
out
rol
push
xchg
mov
sbb
jmp
cli
jge
push
out
xchg
mov
adc
sub
cs
popa
outsl
ja
mov
mov
push
mov
mov
sub
fcompl
mov
push
imulb
mov
faddl
mov
fistl
jnp
push
icebp
addb
in
cmp
jo
push
jl
rcrl
into
cld
orb
adc
inc
and
jle
xor
imul
cmp
fildl
adc
push
mov
int3
cmp
pushf
out
cmc
inc
insb
mov
stos
or
jne
adc
stos
insb
scas
enter
in
xchg
cmp
arpl
xorb
jbe
jno
mov
scas
sub
cld
pop
movsl
mov
sub
push
jp
jb
ss
add
test
arpl
adc
xchg
mov
cmp
outsl
mov
jg
pop
sti
in
in
sbb
cmp
insl
adc
add
out
push
sub
movsb
jp
dec
xor
mov
jns
push
add
in
mov
push
cmp
push
ret
fcomp
dec
lret
fs
fldenv
aad
decb
popl
cli
mov
lods
inc
in
push
mov
fldcw
in
adc
loopne
or
add
call
pop
inc
call
jcxz
add
clc
xchg
bound
mov
jbe
fisubrs
pop
adc
sarb
pop
push
into
mov
cmpl
addr16
popa
add
cmc
add
pop
jnp
jecxz
bnd
mov
stc
jg
xchg
lods
movsb
outsb
mov
mov
movsb
add
mov
push
insb
jmp
js
cs
cwtl
bound
or
xchg
jo
cmp
loope
andb
mov
xchg
adc
cmp
add
inc
mov
xchg
scas
notb
push
inc
insb
dec
daa
loop
mov
test
pop
sub
adc
push
adc
addr16
loopne
mov
sbb
lcall
push
call
fists
mov
push
in
dec
add
or
jnp
mov
sarb
in
lahf
lock
outsb
pop
jne
mov
xchg
jbe
stos
cmpsb
nop
push
incb
sbb
addr16
push
in
mov
mov
and
xor
aad
fcomps
mov
jp
fstpt
dec
sub
repz
inc
mov
stc
xchg
mov
aaa
xchg
push
loop
push
jle,pt
mov
xchg
cmp
test
ja
ret
inc
push
mov
or
jnp
jb
ljmp
adc
jge
xchg
add
daa
dec
lahf
aas
mov
std
repz
jae
testb
daa
and
pusha
xchg
mov
enter
sbb
outsb
ja
sbb
xor
dec
cmp
and
gs
sbb
mov
in
es
pop
insb
push
pop
adc
orl
xor
pusha
es
aad
jg
aaa
fcmove
insb
inc
int
mov
or
push
xchg
fbld
loopne
push
adc
in
bound
cmp
inc
fwait
ss
popa
das
sahf
push
and
clc
insb
add
addl
fidivl
jecxz
test
arpl
adc
stos
and
iret
mov
mov
mov
cld
jns
or
and
sub
adc
sub
lahf
je
pop
adc
into
insb
sub
adc
out
or
xchg
je
pop
adc
jo
pop
adc
sub
xor
pop
jo
pop
adc
fs
mov
loopne
mov
xlat
clc
repz
fisubs
adc
push
movsb
or
es
inc
push
sbb
shlb
or
les
adc
aam
pop
repz
jecxz
frstor
mov
adc
jnp
stos
jnp
call
lock
fidivrs
mov
mov
add
push
adc
ret
insb
jp
mov
inc
int
imul
xlat
aaa
jnp
cmp
ljmp
fistps
sub
pushw
add
push
movsl
xchg
loop
mov
xlat
jno
std
daa
rcrl
enter
mov
jns
and
pusha
repnz
das
mov
push
adc
adc
rcl
lods
pop
sub
fucomp
mov
or
mov
and
dec
iret
lahf
ret
jle
nop
pusha
push
adc
push
clc
push
dec
imul
loopne
mov
pusha
push
adc
xchg
adc
xchg
jo
aas
pop
xchg
subl
loopne
cmpl
sub
mov
mov
mov
xchg
test
mov
data16
pop
jmp
repnz
and
adcl
sti
dec
push
int3
sysenter
outsl
gs
jge
lock
xor
imul
repnz
cmp
push
sub
xchg
push
adc
and
or
adc
sbb
lods
cwtl
push
leave
pop
andb
lods
popf
std
fildll
lock
lods
mov
and
xchg
cmp
gs
mov
lods
test
cmc
pop
fcomps
push
or
or
movsb
pop
pop
xchg
add
je
lret
xor
test
iret
notb
sub
fimull
and
mov
push
mov
pop
std
andl
adc
mov
push
shl
lret
xor
sub
mov
loopne
mov
fsubs
aad
loope
cs
jnp
xchg
mov
loop
dec
fdivl
dec
cmp
push
mov
test
test
pusha
push
adc
jno
push
fisttpl
andb
pop
or
jg
cld
or
popl
and
popf
sbb
shlw
cmc
dec
mov
push
test
test
jbe
int3
fdivrs
jne
iret
push
cmpsl
adc
sub
xor
es
jno
jbe
pop
xchg
mov
cmp
push
arpl
cmp
mov
xor
mov
fidivrs
add
mov
push
mull
addl
sbb
pop
cmp
dec
push
or
push
sti
mov
cld
stc
repz
shll
stos
sub
mov
pop
xlat
jnp
mov
stc
daa
mov
js
push
adc
mov
ljmp
push
adc
mov
mov
push
pop
dec
pusha
jmp
ret
jge,pt
imul
fidivrl
and
inc
lock
or
scas
inc
lahf
aas
jle
mov
cmp
cmp
adc
daa
sbb
push
imul
cmpsb
out
test
pop
adc
lret
int
cmp
jmp
loope
adc
mov
aaa
sar
push
testb
daa
dec
lahf
xlat
mov
add
mov
cmp
adc
daa
sbb
stc
pop
repnz
and
push
adc
inc
iret
idivb
jb
push
in
jge
xchg
mov
cwtl
fistpll
insb
cltd
insb
jbe
adc
and
std
repz
outsb
mov
jle
lcall
pop
ds
divb
adc
lahf
popa
mov
dec
pop
inc
jo
mov
mov
stos
fistpll
testb
dec
ret
lahf
aas
mov
push
adc
sub
bound
push
mov
call
pusha
jbe
clc
and
lods
jnp
inc
fisubl
pusha
push
adc
pushf
add
or
and
jne
pop
int
mov
popa
outsb
mov
xor
xorb
aad
call
lock
lret
js
and
sarb
movb
jne
push
pop
pause
sub
mov
cli
shrl
sub
insb
repnz
pop
sarb
out
or
xor
cwtl
pop
add
add
les
test
iret
sahf
loopne
sub
lds
mov
dec
daa
inc
popl
adc
push
and
test
push
adc
mov
mov
out
cmp
mov
and
cmp
data16
ret
xor
pop
sub
pop
repz
scas
cmp
mov
push
xor
push
adc
jle
sbb
xchg
or
enter
in
xorb
ret
fisubrl
cmp
and
loope
int3
cld
fcomps
sbb
pop
cmp
adc
sbb
xchg
xor
push
sub
push
xlat
lret
or
test
gs
lods
jae
sbb
push
adc
cmpl
and
imul
push
movsl
xchg
xchg
inc
inc
cmp
add
add
mov
repz
push
int
popl
adc
mov
mov
shll
adc
popa
sub
jbe
mov
push
clc
inc
loope
adc
jl
jmp
add
pop
push
jmp
sbb
sub
adc
xor
test
pop
repz
xchg
mov
stos
repz
push
xchg
cwtl
bound
adc
repz
leave
fwait
cltd
or
fcmovbe
test
lret
movsl
out
inc
mov
addb
xor
iret
test
addr16
mov
xor
popa
add
cli
cmp
mov
pop
cwtl
mov
mov
sbb
mov
or
and
or
push
adc
jo
pop
aaa
sub
sbb
aaa
rclb
pop
push
mov
push
into
cmp
dec
scas
cmpb
sbb
mov
lods
push
dec
stc
push
into
push
pop
loope
adc
cmp
ficoms
mov
lahf
ds
cmp
js
fs
sbb
lds
sub
insb
sbbb
popl
outsb
pop
fisttpl
clc
xchg
call
shrl
dec
lahf
aas
jle
mov
mov
jo
ljmp
push
ds
out
pop
pushf
mov
mov
mov
subb
movsl
pop
fists
mov
fs
xchg
jno
jmp
jbe
jmp
jge,pt
aaa
mov
mov
pop
jmp
or
fnstenv
stos
sar
stos
jb
insb
mov
sub
ret
push
or
mov
adc
std
jp
lods
js
sahf
leave
mov
xchg
cmc
arpl
scas
pop
jp
repnz
fnstenv
les
adc
jmp
inc
cmp
jno
test
jge
fnstsw
push
dec
fs
adc
invd
adc
mov
push
lock
popf
jmp
pushf
in
push
inc
mov
fdivs
cmp
xchg
outsl
out
out
fnstsw
mov
lock
pop
aam
leave
push
out
nop
mov
lods
adc
andb
imull
sub
and
push
out
cltd
js
push
adc
or
fs
adc
icebp
push
jge
pop
insl
fnstenv
or
ljmp
adc
lods
add
mov
addr16
add
push
adc
push
addb
test
shrl
xor
dec
popf
cmp
add
lods
sbb
imul
movsl
and
mov
mov
push
adc
call
dec
outsb
mov
ljmp
out
jp
scas
stos
hlt
and
adc
negb
inc
out
call
gs
dec
enter
popa
push
fsub
pushf
fwait
lret
ficomps
add
or
push
test
push
adc
in
jb
jno
dec
push
adc
movb
je
mov
jno
test
ds
sbb
jo
sahf
notb
sub
movsl
jo
mov
xor
mov
vmovss
shll
sub
xor
xor
adc
addr16
push
adc
outsb
fisubs
mov
fwait
mov
adc
sub
xchg
lods
jmp
fstpt
rcrl
push
add
loope
adc
mov
xchg
xor
pop
loop
adc
movsb
push
sar
xorl
popa
mov
loope
adc
or
aam
stos
mov
pop
mov
jb
sti
rcrl
dec
les
mov
in
daa
stc
fdivr
out
shlb
push
mov
and
cmc
js
xchg
pusha
ret
rolb
lds
repz
popa
and
leave
xor
mov
and
or
cld
add
sbb
jbe
mov
push
adc
add
les
fmull
je
sbb
push
dec
sub
pop
sub
cmpsl
stos
pop
adc
loopne
js
push
loop
rcr
jp
ret
arpl
out
dec
pop
ja
btc
sub
mov
xchg
or
outsb
pop
std
jnp
mov
adc
faddp
es
pop
icebp
push
fbstp
cmp
adc
aad
aas
stc
dec
push
aad
dec
rorb
insb
adc
push
fs
push
fistpll
insb
fldcw
lahf
xlat
stc
hlt
stos
xchg
cltd
iret
inc
xor
cmp
jge
frstor
je
dec
cmpsl
insb
leave
pop
jl
enter
mov
jg
movsl
jnp
out
das
fidivrs
mov
dec
fistps
out
adc
jne
dec
out
fdivrl
inc
cmp
or
or
adc
jns
negb
push
shlb
fnstenv
mov
mov
dec
jmp
pop
stc
jg
shll
sub
adc
push
mov
jb
xchg
lahf
loope
xchg
aas
ds
clc
or
aas
adc
xchg
hlt
mov
xchg
mov
xchg
lret
jp
cmp
icebp
dec
addr16
or
clc
pop
cwtl
inc
sahf
loopne
sbb
inc
dec
ss
or
jl
push
cld
adc
xchg
loopne
push
adc
ret
ljmp
xlat
jmp
adc
scas
xchg
daa
lret
arpl
xchg
out
iret
shrl
push
adc
jns
in
leave
pop
mov
mov
leave
xchg
int3
dec
sbb
lcall
mov
sti
mull
mov
int
jnp
gs
push
leave
xchg
daa
dec
leave
xlat
adc
stc
repz
cmp
mov
scas
push
inc
push
sub
stos
fs
adc
inc
pop
jp
std
stc
repz
xchg
adc
test
ds
xor
cmp
cmp
jae
inc
imul
xchg
mov
notl
adc
add
lret
int
jbe
sbb
cli
mov
push
adc
xchg
shl
loope
adc
push
les
push
inc
je
sbb
jle
shll
sti
je
scas
scas
clc
test
sub
daa
out
sbb
jb
nop
pop
nop
jmp
insb
daa
mov
cmp
xchg
lds
imul
shlb
lcall
cmp
mov
jbe
push
jge
jne
pop
outsb
repnz
add
push
addb
pop
sub
adcl
in
stc
add
xchg
jns
adc
dec
fadd
pusha
push
adc
shrb
push
adc
push
or
push
repz
das
mov
adc
xchg
jo
sti
push
or
shrb
adc
pop
in
andl
andb
dec
xor
adc
mov
inc
xchg
jb
mov
pop
add
pusha
xchg
jbe
into
fsubr
xchg
mov
jecxz
fcoms
mov
out
in
mov
outsb
aas
push
ja
aam
or
pusha
push
adc
dec
mov
rcr
sub
mov
cwtl
invd
adc
xor
inc
xlat
mov
pop
movsl
es
pop
adc
adc
adc
sub
out
invd
adc
movsl
adc
clc
invd
adc
fstpt
or
loope
xchg
stc
pop
test
cwtl
invd
adc
rorb
in
popa
and
jecxz
pushf
add
sub
or
invd
adc
pop
pushf
cmp
cmp
arpl
daa
leave
add
mov
push
test
mov
pop
cmpsb
arpl
inc
sbb
das
jo
out
test
xor
shlb
mov
out
std
xor
cmpsb
cwtl
sahf
cmc
and
cmpsb
rorb
iret
sbb
push
aas
shlb
or
sahf
fcomp
insl
pusha
push
add
adc
adc
out
push
test
cmp
or
fcomps
or
mov
xchg
popf
dec
xor
cmpb
pop
imul
ljmp
in
fs
mov
mov
xor
ret
adc
fwait
cld
invd
adc
push
cmp
ret
cwtl
imul
sbb
pusha
push
fstpl
cld
invd
adc
jge
orl
sub
shlb
or
jge
jl
test
sbb
push
add
in
fldpi
push
sarl
pusha
sar
mov
cld
invd
adc
xor
jge
cld
invd
adc
or
fmull
adc
sahf
into
push
test
mov
sbb
push
adc
mulb
inc
mov
lahf
aas
xchg
mov
or
inc
loope
mov
cmpsb
lods
fnstsw
aad
ret
jae
lods
mov
mov
decl
hlt
jb
into
adc
sub
adc
inc
arpl
call
addb
cltd
out
sahf
mov
jecxz
inc
cwtl
inc
mov
pop
cltd
mov
in
cmp
aas
jle
cmp
cmpsb
ret
stos
lods
notb
lock
xor
sbb
ficoml
pushf
cmc
aas
lock
push
mov
mov
lds
xor
lahf
rorb
jno
adc
mov
xor
push
jl
mov
adc
and
jecxz
pop
dec
fwait
lahf
sbb
cmpsl
xchg
addl
lahf
dec
jnp
push
mov
pop
push
push
out
dec
push
adc
inc
sahf
ds
jno
insl
mov
cmc
in
fidivrs
mov
pushf
mov
or
insb
xchg
push
adc
inc
cmpb
aas
movsb
xchg
icebp
test
cltd
cmp
cmp
out
ret
sub
push
adc
push
mov
add
cld
or
push
in
loope
outsl
ret
jp
int3
lea
out
ja
jp
xor
dec
sbb
xchg
leave
dec
fs
xchg
rol
or
or
lcall
lea
flds
jle
fsub
lds
ret
or
stos
xlat
lods
add
add
jbe
pop
sbb
push
xor
dec
sbb
stc
push
mov
adc
pusha
jno
mov
cmp
fnstenv
dec
push
adc
fstps
dec
add
or
mov
aas
mulb
and
xchg
add
or
push
ss
xchg
orb
iret
rorb
repnz
lcall
jns
jbe
clc
jns
std
sbb
aad
mov
stos
jmp
adc
lods
adc
xchg
add
mov
adc
jae
test
add
or
inc
mov
lock
add
or
das
or
or
mov
insl
movsl
mov
shll
pop
xchg
fildl
pop
rorb
leave
lods
xchg
das
mov
in
or
add
or
pop
aad
jg
lock
jg
sbb
mov
cmpl
lds
aam
dec
mov
or
out
repnz
addr16
cmp
inc
cmpsb
or
or
or
outsb
sub
push
aad
sub
jge
and
or
inc
or
dec
out
jp
xor
and
ffree
bound
imul
insl
ljmp
scas
call
xchg
adc
fwait
sub
pop
pop
ja
dec
dec
push
mov
rcl
cmp
ds
data16
and
jmp
xchg
xor
sbb
mov
ret
mov
pop
stos
fiaddl
jp
stos
xchg
inc
xor
pop
outsl
xchg
mov
inc
out
sbb
ficomps
lcall
popf
sbb
jl
loop
in
pop
xchg
pop
iret
sub
add
jecxz
hlt
inc
adc
and
push
adc
mov
sub
pop
test
movsl
xchg
test
clc
daa
inc
hlt
mov
sub
jle
pop
lods
es
xchg
out
mov
dec
out
hlt
jmp
cmp
repz
pusha
sub
xchg
sub
xlat
sub
xchg
shlb
xchg
cmc
sbb
xchg
lahf
ds
mov
fdivrl
fstp
lahf
imulb
dec
fs
insb
push
inc
ja
addb
stos
mov
mov
adc
and
mov
mov
dec
out
ret
dec
jmp
adc
adc
mov
negl
cmp
mov
das
popa
pop
dec
push
adc
cwtl
aas
jle
adc
push
adc
ss
sub
inc
jnp
test
and
push
ret
xchg
adc
pop
adc
jnp
stos
xor
adc
mov
mulb
popa
pop
dec
push
adc
ds
aas
jle
adc
push
adc
ss
sub
inc
jnp
test
and
inc
ret
xchg
test
pop
adc
jnp
stos
xor
adc
mov
mulb
xor
leave
xchg
fdivrs
mov
sti
out
jge,pt
mov
leave
aas
mov
mov
push
ss
sub
outsb
imul
clc
adc
xlat
loop
js
push
adc
subb
fstpt
test
in
lahf
iret
hlt
pusha
rolb
lret
test
call
push
dec
pop
cmp
mov
or
push
dec
sbb
jno
mull
or
add
pop
mov
adc
scas
mov
inc
mov
xsaveopt
mov
dec
sarl
jmp
leave
jmp
xor
bound
mov
jbe
lahf
jb
aad
jecxz
sbb
sbb
inc
outsb
jne
sahf
loop
test
mov
jbe
mov
ret
in
sub
pop
rorb
outsb
or
mov
loop
adc
in
cmp
jle
or
xor
dec
cltd
ja
mov
iret
dec
mov
in
xor
js
mov
loopne
push
adc
add
js
mov
xor
jb
adc
adc
push
adc
sub
out
adc
adc
out
sub
add
adc
push
adc
cld
insb
jbe
adcl
xor
sub
or
and
push
and
adc
adc
or
or
mov
test
jecxz
and
and
test
mov
js
test
adc
jp
mov
adc
push
mov
push
pop
add
lock
pusha
push
adc
pop
mov
outsb
inc
sbb
cmp
jb
and
ret
pop
adc
adc
repz
mov
pop
pop
adc
adc
adc
mov
pop
pushf
cmp
clc
loop
adc
imul
inc
mov
mov
pop
mov
jno
popa
and
inc
divps
outsb
jns
jmp
fs
pop
orl
mov
daa
sub
pushf
dec
out
je
mov
dec
sub
test
mov
mov
std
aam
sbb
adc
sub
sub
and
cld
lret
xlat
xchg
enter
ret
sub
orb
push
jb
cmp
daa
xchg
iret
int3
mov
jecxz
outsb
ja
repz
xor
es
fistps
lods
out
pop
mov
sarl
ja
sbb
popf
sbb
repz
adc
push
repz
pop
jnp
mov
fidivl
aam
cmp
lods
dec
push
jne
aas
mov
loopne
clc
daa
sahf
cs
movsb
orb
push
fs
aaa
and
addr16
inc
loopne
mov
pop
outsl
jle
aam
fisubrl
and
shl
lahf
dec
inc
mov
ljmp
mov
mov
mov
cmp
mov
mov
mov
aad
sarb
ss
shr
pop
cli
pusha
shll
lods
push
xor
out
xor
sti
or
push
sub
mov
dec
push
pop
mov
mov
jg
mov
loop
pop
cli
imul
test
int
syscall
adc
ss
fadds
dec
lahf
aas
std
cltd
and
and
adc
mov
mov
pushf
push
out
mov
cmp
jo
or
hlt
mov
jne
mov
pop
ds
or
push
xlat
nop
inc
fildll
ds
jle
stc
jp
pop
adc
lahf
push
out
fnstsw
pop
mov
mov
or
mov
lahf
adc
jne
movl
sub
sub
and
adc
daa
cmp
repz
adc
mulb
cld
not
scas
pop
mov
push
push
daa
dec
lahf
mov
xor
shrb
or
mov
stos
fists
lods
movsl
out
mov
mov
jae
out
inc
fistpll
dec
cmp
ljmp
outsb
cmp
adc
sbb
pop
jle
cld
cli
lock
pop
jge
xchg
sahf
in
push
cld
jp
movsb
mov
sti
je
lahf
into
cmp
outsl
push
inc
idivb
mov
jle
lds
imul
loopne
jo
in
shrl
pushf
fwait
divb
iret
loopne
mov
xor
ds
int
notl
out
mov
mov
mov
mov
cld
popa
mov
imul
in
es
and
xchg
mov
mov
lds
add
inc
and
push
sbb
movsb
mov
pop
jecxz
pushl
or
jo
in
inc
ss
std
mov
in
cld
cmc
xor
sti
sti
and
sub
mov
rcll
jecxz
xor
inc
mov
addb
cmp
aaa
or
fimull
push
pop
jl
in
dec
dec
sar
stos
orl
sub
push
adc
dec
dec
push
mov
mov
and
lods
jge
das
fidivrs
ret
mull
sbb
notb
add
loope
sub
lods
sub
out
fidivrs
add
lods
mov
pusha
mov
sbbb
inc
push
jo
aad
dec
inc
out
movsb
inc
stc
lret
js
ficoml
lea
je
sub
aam
sar
mov
fidivl
push
mov
adc
push
xor
ljmp
or
sarl
xor
add
cmc
add
popa
jnp
lods
mov
mov
xor
imul
ss
test
sub
call
sti
mov
dec
out
enter
pushf
push
lock
rclb
orl
add
out
cmp
nop
and
arpl
pop
jnp
rol
roll
gs
xchg
or
jo
orl
mov
jmp
xchg
into
xor
pusha
adc
pushf
test
jb
out
dec
push
pop
pop
aaa
daa
movsb
daa
push
imul
ret
movsl
loope
or
lcall
rorb
xlat
pop
push
xor
dec
sub
sbb
mov
push
fcoml
sbb
dec
cmp
cmp
jae
int3
outsb
cli
xchg
loopne
das
fidivrs
pusha
adc
out
repnz
dec
js
imul
fnstsw
mov
shl
xor
adc
inc
fdivrl
hlt
nop
sti
mov
js
jmp
arpl
sub
leave
ret
lods
or
repz
lahf
mov
arpl
cli
aad
xchg
fstenv
dec
add
or
testb
jecxz
jge
out
iret
jae
rcrb
mov
loope
and
cli
in
xchg
rcr
mov
jg
lcall
lods
jl
out
mov
vcvtsi2ss
faddp
xchg
fdivp
inc
adc
icebp
mov
rorb
lea
sub
mov
add
xchg
test
mov
xor
cmp
mov
sbb
push
jmp
adc
adc
pusha
sbb
adc
mov
fdivr
dec
sbb
adc
lock
jno
daa
dec
mov
sbb
sbb
ja
jge
mull
pop
lock
imull
or
dec
jmp
std
cmp
jo
aas
leave
push
jge
ret
or
adc
pushf
bound
adc
xchg
mov
or
push
inc
cmc
cmp
xchg
pop
mov
stos
cltd
mov
test
adc
cmp
test
or
test
enter
clc
hlt
push
out
sahf
inc
dec
mov
mov
ret
addb
lods
and
mov
mov
mov
fidivrs
sar
sbb
insl
andb
inc
push
inc
push
jl
ds
repz
and
test
adc
push
leave
movsb
adc
adc
dec
lea
aaa
leave
add
jg
xchg
lods
sbb
fists
adc
xor
add
pop
inc
add
hlt
data16
lret
mov
jne
icebp
cmc
enter
jecxz
push
mov
cmp
incl
mov
jnp
les
add
xor
push
hlt
adc
mov
inc
mov
rorl
add
les
lock
dec
adc
inc
push
loop
out
dec
loopne,pn
push
adc
sbb
mov
outsb
jne
and
mov
sbb
sbb
popa
push
adc
gs
lea
stos
mov
inc
fwait
push
dec
xchg
push
test
aaa
imul
outsb
fdivrs
fcoml
pop
loop
adcl
in
pusha
jp
push
dec
pop
ja
xchg
cmc
pop
xchg
sub
notb
sub
push
xlat
cmpsb
clc
out
dec
push
xchg
lds
mov
adc
inc
repz
fdivrs
ficoms
stc
mov
scas
ret
dec
cmp
push
or
cs
mov
xchg
mov
cs
mov
mov
sbb
mov
ret
adc
jl
sub
push
mov
int
fstps
aaa
push
mov
test
fdiv
mov
mov
ret
das
sub
mov
add
fmull
mov
push
dec
popf
dec
out
rcll
lods
and
jecxz
mov
je
push
outsb
scas
jmp
popf
cld
mov
xchg
mov
mov
dec
ret
mov
faddl
push
mov
push
xor
sbb
and
xchg
push
cli
sbb
cltd
in
push
and
dec
iret
mov
adc
adc
jecxz
pusha
mov
test
rclb
xor
xchg
nop
test
xorb
mov
in
repz
roll
cs
rolb
aaa
maxps
fyl2xp1
jne
xchg
outsl
or
mov
call
pop
out
mov
dec
pop
cmp
inc
ja
pop
cmp
stc
jle
out
mov
lahf
notb
jecxz
adc
addl
mov
lds
cmp
cmp
cmc
cltd
adc
xor
jle
loop
popa
push
adc
in
mov
cltd
fdivs
or
cmc
aaa
push
xor
push
adc
mov
pop
sbb
mov
inc
mov
neg
dec
adc
jp
ja
mov
mov
testl
daa
dec
fwait
or
sub
mov
iret
add
adc
push
jecxz
fistpl
xchg
in
fnstenv
lea
jo
out
adc
jne
mov
cmp
push
adc
push
push
pop
jl
and
sbb
push
jp
jno
pop
mov
ljmp
pop
mov
jl
push
adc
and
pop
jmp
push
repz
jb
ret
ret
adc
pop
pushl
test
jmp
mov
jge
pop
dec
pusha
mov
fidivrs
cmc
fdivs
inc
cwtl
mov
fmul
andl
mov
adc
fsts
pushf
cmp
in
cltd
int
jle
lcall
fstl
sbbl
testb
in
fistpl
jp
adc
cmp
repnz
je
push
ficoml
cmp
xor
lods
cmp
xchg
insl
fidivrs
mov
xchg
jl
mov
xchg
inc
lds
xchg
fs
leave
lock
test
or
fnstsw
repnz
gs
adc
sbb
push
adc
sbb
rcl
mov
pop
cwtl
scas
adc
adc
dec
mov
loop
adcl
cmp
push
xor
mov
fs
and
xor
jnp
or
dec
xchg
sbb
xor
lcall
mov
lcall
mov
mov
iret
lahf
pop
jmp
xchg
jo
push
adc
and
jb
lods
xchg
in
xor
or
mov
ds
inc
mov
cmp
xorb
adc
cmpsl
jle
sbb
or
pop
sbb
or
and
push
cmc
xchg
add
mov
enter
sbb
ret
and
adc
adc
and
bound
mov
push
hlt
mov
jns
cmpsb
neg
popa
sahf
movsl
je
fisttps
loope
enter
ljmp
sbb
adc
scas
sysenter
sbb
cmpsb
ret
and
add
int3
push
pusha
mov
enter
add
sbb
jg
jecxz
pop
iret
fcompl
rorb
aas
dec
sbb
adc
xor
cmp
jne
cmp
insb
lock
dec
push
push
popf
rcrb
int
in
jg
pop
pushf
push
lea
pop
xor
mov
stc
mov
mov
jl
outsl
and
mov
pusha
adc
push
pop
cmp
jmp
mov
sub
jo
jl
xchg
xlat
inc
adc
mov
xor
pop
sbb
adc
bound
adc
mull
ljmp
and
pop
aad
out
lock
xor
aad
mov
xchg
mov
test
outsl
xchg
and
inc
add
sub
data16
loop
fdivrl
cs
adc
sarl
pop
jns
pop
sbb
adc
xchg
bound
adc
fwait
in
outsb
ja
and
out
jae
inc
cmp
lods
mov
sub
jbe
aam
mov
jle
lods
pop
outsl
sahf
and
add
jle
fdivrl
lret
xor
mov
adc
adc
decb
adc
adc
ret
inc
cmp
repz
enter
inc
mov
arpl
stc
pop
cli
imul
add
push
ret
fists
in
je
xlat
scas
sub
cmp
push
es
pop
ds
adc
xchg
inc
xchg
mov
ret
es
cwtl
xor
ljmp
xlat
pop
jne
dec
push
and
pop
cmpsb
lods
and
push
mov
pop
sbb
jns
xor
pop
sbb
aaa
ja
dec
jb
adc
es
cmc
sub
jne
xlat
scas
inc
jge
jne
es
cmpsl
dec
push
push
mov
cmc
repz
sub
jl
jmp
xor
stos
push
cli
pop
in
dec
jno
dec
pusha
aas
inc
sub
sahf
popa
and
popf
mov
jecxz
adc
inc
test
fistps
cmp
sub
bound
mov
inc
outsb
jo
out
je
mov
repnz
testl
stc
jo
xor
jne
imul
xor
insl
dec
mov
jne
out
mov
fildl
ja
addl
mov
or
push
cmpsl
in
fldpi
out
les
mov
sub
adc
sub
cwtl
pop
pop
mov
not
sub
addr16
pop
and
add
bndstx
fs
jecxz
sbb
sub
adc
dec
push
jge
jmp
clc
mov
or
push
lock
or
rorb
repnz
jmp
mov
or
mov
jns
mov
or
ss
xor
out
dec
out
inc
mov
mov
or
out
sbb
mov
xchg
sub
adc
popf
mov
mov
jns
sbb
rcl
leave
icebp
dec
inc
mov
daa
sbb
and
adc
jmp
push
push
test
popf
xchg
dec
inc
test
mov
and
addr16
movsb
adc
ja
or
xor
jb
push
movsl
xor
push
xor
cltd
mov
outsl
jecxz
stos
add
ljmp
imul
popa
insl
stc
jecxz
out
jno
xor
mov
dec
sub
addr16
leave
outsb
sar
stos
mov
or
std
imul
jns
mov
mov
mov
lahf
fidivrs
ud0
mov
jno
and
lds
push
cmp
call
mov
int3
movsb
imul
mov
in
jae
adcb
xor
daa
out
xlat
xchg
add
push
imul
fstl
jl
aad
filds
mov
jno
adc
mov
es
divb
ds
xchg
mov
add
outsl
pop
sbb
adc
adc
add
or
add
int
push
add
add
adc
add
out
pop
fsts
roll
fstpl
fs
loop
sbb
push
push
or
cld
push
add
or
cmc
mov
lods
in
mov
pop
cmp
popa
mov
jg
and
out
jb
cld
push
add
dec
dec
fsubl
sbb
jbe
movsb
inc
mov
sbb
repnz
adc
push
add
repz
add
adc
push
add
adc
push
add
adc
push
add
repnz
pusha
mov
fwait
adc
mov
test
xlat
mov
outsl
cwtl
lahf
adc
pop
std
push
adcb
ja
mov
jmp
xchg
push
cmp
imul
add
add
pop
add
adc
pop
add
adc
scas
fcomip
add
data16
arpl
das
adc
idivb
enter
jae
out
push
jge
mov
xor
mulb
cmp
aad
fdivrs
hlt
mov
adc
jne
test
push
sub
lahf
out
rol
inc
or
push
mov
leave
xchg
push
imul
jg
lock
dec
jo
add
and
jle
and
add
inc
dec
and
jb
pop
int3
lahf
jge,pt
push
ljmp
xchg
inc
pop
jae
pop
add
cwtl
and
add
adc
pop
add
mov
aaa
mov
and
xchg
mov
cmp
ret
bound
sahf
scas
aam
js
cmp
aad
mov
idivb
sbb
jg
push
out
xor
cltd
out
cwtl
and
and
dec
mov
pushl
in
fdivrs
mov
std
lods
sub
mov
dec
insb
adc
pusha
rolb
or
xchg
mov
push
and
adc
adc
adc
adc
adc
scas
pop
mov
clc
cmc
jmp
pushf
cmp
push
adc
mov
fcoms
jns
call
std
lods
pop
mov
fs
aas
outsl
inc
aam
inc
pop
js
sti
jbe
outsb
int
cmp
std
icebp
call
sub
cs
and
and
adc
and
adc
fld1
es
fdiv
je
cmpsl
xor
mov
cmp
push
std
pop
shll
in
jg
mov
sbb
jg
xchg
adc
aad
jmp
lds
test
push
add
add
push
jns
inc
fidivl
outsb
mov
idivl
iret
mov
cmp
js
lret
mov
popf
adc
ret
jbe
or
rolb
fwait
xor
sbb
jge
jle
inc
adc
adcb
mov
push
mov
and
popf
dec
jle
inc
jae
sub
outsl
cltd
inc
mov
cld
std
mov
ret
fucompp
cli
push
push
loop
stos
mov
add
adc
in
aaa
sbb
push
dec
add
sub
inc
cmp
sahf
test
scas
in
mov
xor
iret
push
das
mov
in
push
sub
cmpsb
push
mov
mov
inc
pusha
aad
mov
iret
adc
adc
rorb
jle
xchg
iret
rorb
push
or
mov
mov
fcompl
sub
jb
movsb
es
or
cmpsb
xchg
sub
gs
push
jo
or
sahf
in
sbb
xor
ds
push
loope
mov
or
imul
ja
xchg
xchg
sbb
js
adc
ret
sub
stos
andb
mov
jle
push
movsl
loop
loopne
repz
les
jnp
lcall
fwait
jbe
dec
push
mov
lcall
inc
cmp
sbb
pop
ss
adcl
into
add
into
inc
jnp
fwait
cmpsl
push
arpl
mov
lods
dec
adc
sub
dec
test
xchg
push
jge
inc
fadds
rorl
les
pop
or
or
repz
xor
icebp
aas
fidivs
cs
outsl
sahf
jb
out
sub
push
mov
out
mov
data16
jle
sub
xor
xor
aas
dec
push
and
pop
adc
rolb
push
addr16
and
test
icebp
and
pop
adc
lods
mov
stc
repz
sub
jge
jb
test
pop
sbb
ret
sub
imul
add
testb
sub
scas
mov
jp
in
mov
dec
xchg
daa
jbe
and
pop
adc
sub
cwtl
push
mov
jo
jbe
ret
lds
ret
pushf
out
xor
inc
cmpsl
push
cmp
cmp
bound
imul
fnstenv
add
imul
and
pop
adc
and
int3
push
xlat
lock
loope
cmc
les
pop
mov
cld
ret
leave
loop
cmp
fstpt
xor
adc
inc
test
xor
nop
data16
stc
js
inc
fnstcw
testb
in
adc
xchg
or
repnz
and
scas
dec
lahf
add
jne
negl
jb
ljmp
mov
es
cwtl
ss
cmpsl
out
daa
jle
jb
insb
mov
mov
sysenter
ss
movsb
dec
mov
sbb
dec
movsb
cld
idivl
pop
daa
cmc
mov
pushf
imul
lcall
jg
sub
xor
push
fiaddl
adc
sub
adc
or
cmp
movsl
lock
hlt
mov
sbb
jle
xchg
and
jg
icebp
cmc
jmp
xchg
mov
int
mov
jno
mov
sub
pop
shlb
sbb
ret
mov
stos
add
xchg
std
inc
lahf
inc
movsb
bound
fisttps
and
in
xor
cmovle
jp
ljmp
jp
inc
fucomi
adcl
jo
dec
addr16
jmp
pusha
xor
les
xor
mov
sbb
sti
ret
ficompl
lret
mov
adc
cmpsb
dec
leave
mov
stos
shlb
jo
xor
fcoml
repnz
jb
mov
out
adc
push
sbb
pushf
lds
loope
add
cli
out
ret
pop
adc
in
leave
cmp
cmp
add
push
in
mov
sbb
push
std
cmpsl
pushw
and
mov
mov
fdivp
mov
sarb
fisttpl
int3
std
dec
movsl
aad
xchg
jp
fldl
dec
add
pop
cmp
cvtpi2ps
mov
xor
push
or
inc
xor
ret
pop
or
push
dec
das
add
or
mov
daa
pop
pop
xor
fidivrl
arpl
insl
les
jle
adc
je
mov
pusha
sub
and
cmc
add
popa
jnp
and
fdiv
fstl
push
dec
cmpsl
sbb
push
jo
lea
or
or
inc
fs
bound
std
ljmp
cli
pop
push
idivb
xchg
inc
mov
test
push
fcomps
pop
mov
mov
ret
aad
outsl
pushf
mov
mov
dec
movsb
dec
mov
mov
adcb
or
nop
add
fstps
inc
inc
xchg
adc
add
push
mov
inc
pushf
pop
jecxz
js
lds
bound
repz
loopne
in
arpl
dec
or
push
xchg
sub
pop
adc
inc
jl
daa
pop
loope
sbb
mov
xchg
cmpsl
cs
add
cli
loopne
xlat
mov
jo
out
mov
pushf
jne
idivl
lods
mov
mov
popf
dec
sub
in
cmp
adc
jmp
push
repz
lods
js
cwtl
leave
mov
idivl
xor
jecxz
outsb
aad
js
xlat
daa
les
sub
jecxz
jle
push
xor
iret
lahf
ds
ss
fistpll
xchg
call
push
add
insb
sub
stc
repz
jbe
maskmovq
divl
mov
andb
adc
std
aas
jl
add
repz
add
add
adc
daa
add
lock
and
sbb
adc
icebp
outsl
mov
sub
cmp
test
jns
sub
mov
hlt
insl
mov
test
push
push
sahf
jg
shll
mov
sub
insl
leave
pop
cmp
cmp
imulb
sub
mov
jle
jl
inc
pop
insb
sub
arpl
add
adc
add
adc
sub
adc
sub
adc
imul
jl
push
push
cld
scas
pop
inc
aad
cmc
sbb
cmp
mov
jae
push
push
jge
push
inc
std
scas
pop
push
aam
hlt
or
cltd
inc
xchg
stos
dec
sahf
jg,pt
or
sbb
mov
adc
jl
add
adc
sub
mov
adc
repz
jp
shl
sub
adc
sarb
mov
mov
xor
jb
ret
sbb
lock
sarb
ds
in
cmp
clc
imul
rcrl
inc
inc
or
xchg
sub
loopw
divl
xor
std
mov
andb
ret
mov
sub
aam
in
dec
mov
lods
pushf
out
repnz
fucomip
adc
das
in
dec
in
push
sub
sub
or
add
add
adc
add
mov
rcrl
xchg
cwtl
mov
ret
test
orb
jg
xor
das
jle
aam
mov
loope
jae
jb
movsb
movd
lods
sub
add
pop
clc
push
inc
lcall
adc
pushf
ljmp
iret
dec
dec
lahf
out
or
cld
data16
jns
dec
dec
dec
jle
or
lcall
inc
xor
adc
sub
mov
sub
adc
sub
adc
sub
adc
sub
xor
adc
jbe
fists
fisttpl
testl
jb
push
inc
ret
shl
jb
cli
mov
push
push
cmp
and
xor
in
loopne
mov
mov
sbb
pop
and
int
dec
icebp
or
add
sub
adc
sub
adc
inc
mov
sti
pop
fwait
lret
adc
nop
rcrl
mov
cli
aad
push
test
push
or
xor
pop
mov
data16
dec
and
das
in
mov
mov
mov
gs
xchg
and
add
jnp
je
add
lds
popf
mov
bound
fdivl
mov
add
inc
mov
cmpsb
or
mov
outsl
leave
add
dec
jecxz
out
mov
mov
in
nop
test
lock
sub
xor
cmp
fwait
cmpl
insb
sub
xor
sbb
lods
add
leave
shlb
dec
test
nop
lods
mov
hlt
sub
data16
mov
mov
mov
xchg
ds
pop
sbb
movsb
push
mov
inc
pop
inc
mov
xor
gs
loope
pusha
push
sub
mov
mov
leave
mov
push
adc
sub
adc
mov
adc
inc
test
ss
mov
mov
test
xchg
incb
adc
jecxz
mov
jmp
in
push
je
or
sub
xlat
jmp
cltd
mov
push
adc
mov
sub
push
leave
pop
or
insb
fmuls
iret
xlat
xchg
adc
or
shufps
repz
loop
test
mov
pop
bound
and
fnstcw
and
lods
and
repz
fdivl
push
inc
or
add
push
fwait
ss
fidivrs
sti
cmp
negb
jecxz
adc
mov
mov
test
adc
mov
jecxz
adc
pop
popa
mov
mov
pop
andb
mov
shl
push
adc
xchg
leave
push
es
push
adc
leave
mov
adc
and
scas
repz
pop
leave
jl
add
pop
fwait
ss
sar
cld
scas
js
daa
dec
roll
je
sar
mov
xchg
or
cmpb
xchg
push
and
and
pop
adc
and
adc
ret
pop
adc
adc
lods
add
ret
pop
adc
loope
ret
pop
adc
lods
add
ret
pop
adc
add
pop
adc
movsb
pop
ret
addb
dec
gs
cltd
mov
js
adc
adc
pop
push
es
fildll
or
in
test
mov
mov
repnz
sub
ds
push
mov
mov
test
xchg
cmp
hlt
les
minps
das
out
adc
mov
inc
scas
mov
jl
sub
jb
enter
add
mov
test
bound
stos
sbb
pushf
insl
das
sarb
lods
sub
inc
xorb
lahf
xor
ret
jno
or
dec
and
mov
pop
sbb
mov
shlb
mov
fwait
mov
stc
add
push
sub
dec
mov
adc
adc
inc
ljmp
jbe
adc
adc
mov
sub
bound
adc
push
push
jl
mov
fdivrs
xchg
or
mov
push
movsb
rcrb
inc
mov
lods
mov
mov
adc
mov
adc
adc
adc
xchg
pop
adc
pop
or
jbe
xchg
stos
rorl
and
jecxz
mov
adc
cs
ret
test
cmp
out
xchg
iret
movsl
sub
sbb
lahf
cmp
and
out
out
sbb
pop
pop
and
repz
or
dec
mov
lea
sub
aaa
aad
mov
add
movsl
aad
movsb
mov
test
ficoml
push
cmp
xchg
jo
ficoms
out
or
and
mov
mov
or
jle
sti
std
xlat
iret
repz
jp
adc
lret
jp
inc
cmpsl
mov
push
mov
daa
xchg
fs
push
xchg
dec
push
in
test
sbb
fildl
movsb
insl
fs
cli
jnp
push
popf
cli
out
scas
and
jecxz
sbb
aam
adc
pop
lea
testl
mov
xorb
jecxz
inc
pop
rcrl
addb
pop
aam
movsl
jo
out
xchg
aas
dec
push
adc
sub
idivl
mov
mov
sub
jbe
pop
lods
outsb
call
cs
ja
mov
fsub
push
adc
test
pusha
roll
jne
mov
inc
jnp
cltd
int
adc
insb
push
inc
pusha
dec
jbe
ss
insl
jb
or
mov
cmpsb
pop
mov
pop
or
insb
fmuls
shl
iret
std
sub
lret
mulb
pop
sbb
pop
stc
aad
daa
sbb
xchg
in
repz
jmp
out
fnstsw
mov
push
outsl
and
mov
jmp
cs
sub
popa
sti
scas
insl
mov
lock
cli
test
jecxz
adc
stos
pusha
sar
sbb
enter
lcall
sbb
sbb
es
cmpsl
lahf
jnp
insl
lahf
aas
daa
jg
movntq
or
lcall
fstps
inc
out
sbb
pop
cld
stc
stos
and
push
clc
jecxz
adc
inc
inc
cmp
gs
push
loope
out
cmpsl
sbb
jle
ds
lahf
ds
cmp
pop
fisttps
lods
test
and
mov
in
jo
pop
dec
rol
adcb
out
fnstsw
xor
or
movl
mov
rorb
cli
pop
dec
inc
mov
sub
add
sbb
movsl
add
je
inc
clc
hlt
data16
int3
fsubrs
and
iret
imul
jbe
lds
lock
out
mov
fnstsw
rep
xor
insl
jns
addr16
repz
inc
jne
dec
in
xchg
test
mov
mov
inc
adc
lea
adc
in
ljmp
imul
dec
mov
mov
mov
dec
xlat
and
lahf
dec
cmp
aam
leave
add
jns
add
stc
imul
cmp
push
lret
fisubrl
mov
lret
iret
or
lret
insb
mov
xchg
cmp
ja
jo
and
je
repz
push
xchg
cmp
cld
push
jnp
insb
or
repnz
pushf
cs
scas
add
imul
cmovo
jno
mov
inc
sub
add
lods
imul
mov
lret
arpl
stc
or
test
sbb
test
movl
mov
sti
iret
aaa
pop
aad
jp
filds
cmpsl
push
lcall
in
scas
push
sub
inc
xchg
cmp
in
das
pop
jno
inc
cli
sub
adc
push
loopne
xchg
or
cmp
int
dec
xchg
pop
test
icebp
push
loope
xor
sub
adcb
jne
lock
adc
cmpsl
xchg
push
pop
cmpsb
fdivrl
int
lret
cmp
mov
cs
hlt
inc
enterw
jae
dec
int3
cld
sbb
pop
mov
out
adcb
fdivrs
jae
repz
push
loopne
orl
mov
xchg
rcrl
mov
jmp
daa
es
inc
lock
mov
xor
jb
out
aam
rcrl
test
mov
into
xlat
scas
arpl
movsl
mov
mov
inc
sbb
mov
sbb
fcompl
mov
sar
movsl
or
ret
push
fdivs
fwait
repz
and
sub
adc
pushf
cmp
les
out
xor
into
xchg
xchg
jae
and
sti
mov
repnz
or
aaa
negb
sub
mov
dec
or
int3
or
jo
dec
pop
lret
sbb
scas
scas
mov
orb
int3
fisttpll
cld
push
hlt
in
adc
or
cmp
or
jo
into
ljmp
in
sub
push
cwtl
iret
cmp
push
es
jbe
jno
popa
repz
push
out
test
xor
inc
pop
enter
pop
jne
dec
js
cmp
and
xlat
out
nop
pop
mov
js
ljmp
mov
fbstp
jl
mov
jg
testl
sub
into
pop
outsl
and
inc
dec
mov
adc
fs
lahf
aas
orl
or
fnsave
bound
fldcw
mov
push
movsl
int
cmc
mov
es
dec
jno
aaa
fidivrl
mov
push
inc
pop
enter
fidivrl
mov
jnp
in
mov
push
jge
jl
test
sub
movsl
fwait
enter
sbb
jle
adc
mov
stos
movsb
mov
out
cli
push
xor
or
sbb
cmp
add
dec
pop
push
cmc
in
mov
aam
mov
rcrl
xor
inc
movsb
imul
out
mov
mov
addl
jae
lods
movsl
push
ret
or
mov
jl
ret
bound
and
pop
jmp
mov
mov
fxch
jge
pop
imul
cmc
dec
and
sub
loope
xor
mov
mov
lret
add
dec
or
iret
mov
xchg
enter
scas
sub
xor
iret
push
addr16
add
mov
push
bnd
jle
shll
push
mov
add
int
sub
imul
or
test
out
cmp
arpl
inc
movsl
rorl
shlb
sub
inc
fimuls
les
fwait
popf
int
loopne
outsl
gs
aaa
mov
adc
in
cmp
mov
xor
sahf
or
cmp
rorl
std
sub
hlt
pop
sub
or
fiadds
iret
nop
arpl
inc
sub
outsb
pop
adc
xor
xchg
sbb
sbb
out
inc
fsubrl
add
mov
outsb
inc
sub
test
pop
xlat
cli
xchg
cmc
repz
in
and
mov
push
stos
lcall
xor
cmpsb
idivb
dec
cmpsb
or
mov
sbb
fst
cmpb
dec
es
rcrb
sub
xlat
popa
push
pop
inc
sbb
jno
push
xchg
mov
mov
mov
ss
stos
aaa
lds
daa
pop
repz
fsubl
jecxz
out
lods
lret
rcll
scas
jne
mov
out
mov
movsl
adc
jmp
scas
iret
inc
pop
adc
das
lea
sub
push
cmpsl
orps
test
mov
mov
inc
jl
ljmp
pop
dec
or
inc
xchg
mov
inc
repz
pop
dec
mov
int3
test
jne
sbb
loop
popa
and
es
mov
mov
cwtl
scas
pop
fldenv
jno
daa
cltd
bound
cwtl
xlat
divb
cmp
repz
or
push
insl
sub
mov
movsb
jo
mov
jecxz
jle
adc
add
fs
stos
cmp
sahf
scas
jnp
std
xor
push
xchg
push
jae
xchg
andb
ret
mov
insb
and
fiadds
outsb
in
addr16
inc
in
adc
jecxz
aam
in
jno
rolb
push
mov
fsubs
mov
hlt
scas
jbe
shrl
cmp
fsubrl
mov
insb
pop
xor
repz
add
int3
stc
repz
nop
mov
pop
jns
jbe
bound
adc
push
adc
in
lahf
js
mov
push
out
int
pop
cld
dec
fstpt
nop
mov
add
sub
push
push
lcall
mov
fdivr
mov
sbb
in
mov
dec
sahf
jno
dec
mov
pusha
sar
imul
and
scas
add
fnstenv
cmp
mov
daa
cmpsl
loope
add
mov
addr16
xchg
pop
into
andl
or
xor
addl
shrb
fimull
push
and
outsb
fwait
ss
movsb
rorl
ds
into
lahf
jge,pt
mov
and
mov
xor
dec
mov
insb
xchg
jecxz
aas
jle
lods
and
jo
notb
popa
push
lock
test
rcrb
cmp
and
std
scas
dec
pop
inc
fwait
js
and
into
jb
aas
jno
inc
test
lods
aas
iret
lret
inc
rolb
fcmovu
div
jae
test
and
test
mov
xchg
pop
jp
cld
lret
and
inc
mov
sbb
adc
xorl
push
les
dec
sahf
xor
loope
lock
sbb
push
in
fidivrs
dec
cmp
xor
gs
jb
test
loope
icebp
xor
push
adc
pop
and
and
outsl
pop
shll
and
cld
mov
mov
loopne
mov
jnp
out
in
push
lcall
xor
push
jp
jo
loopne
mov
loop
mov
into
test
int3
mov
das
test
or
ret
push
xchg
mov
cld
lods
lret
or
mov
mov
mov
in
adc
cli
stc
dec
stc
insb
jns
dec
pop
xchg
or
and
popa
jbe
adc
fists
scas
cmc
lret
mov
adc
mov
mov
cmp
aaa
add
sub
jp
mov
push
pop
push
dec
jno
xor
in
pop
insl
jnp
out
jno
mov
jo
jmp
pop
inc
inc
outsl
push
push
or
inc
xchg
push
or
and
push
fldln2
xchg
stos
or
pop
sar
mov
ljmp
aaa
adc
les
or
cli
mov
aaa
lods
sub
xor
sub
pop
in
push
lea
cmpsl
xlat
arpl
adc
popf
into
add
and
mov
xor
iret
mov
rorb
jle
fwait
aaa
push
inc
stc
push
shrb
jae
scas
dec
sti
icebp
mov
mov
loopne
test
dec
pushf
in
xor
fidivrs
das
sbb
inc
enter
sbb
mov
ljmp
loopne
cmp
test
cmpsb
int3
pop
jb
push
add
shrl
movsl
xchg
mov
jae
dec
inc
movb
notl
popa
cmp
fcomp
pop
test
stos
cmpsl
and
pusha
into
sbb
pop
jmp
cwtl
sub
in
dec
filds
xor
and
xchg
insb
add
adc
sub
dec
push
add
add
sbb
adc
add
test
push
dec
ljmp
push
fistps
mov
je
out
adc
pop
outsl
or
sbb
jbe
inc
mov
ss
jle
sbb
shll
fs
cmp
sub
jb
dec
mov
add
or
inc
mov
sbb
andb
push
repz
xchg
cmpsb
int
lea
and
push
int
adc
sbb
pusha
mov
sbb
rorb
out
add
andb
lret
inc
mov
jae
adc
inc
jp
shll
ljmp
fcmovu
hlt
hlt
jge
call
add
sub
inc
mov
ds
push
dec
adc
xor
mov
dec
fnstsw
or
ljmp
lods
cmp
xchg
jo
cmpsb
rorb
cmp
scas
gs
aas
or
sahf
sarl
or
lcall
lahf
dec
sub
js
or
in
fldcw
mov
fildl
repz
repnz
ljmp
ss
movsb
mov
mov
mov
or
xchg
sarl
jnp
mulb
mov
pop
sbb
cld
mov
sbb
xor
fisttpll
xchg
jle
jge
xor
leave
xchg
lods
psubq
mov
or
out
and
insl
adc
mov
cltd
aad
adc
ret
iret
inc
pusha
rolb
hlt
aas
orl
sub
jnp
test
aaa
insl
fxch
pop
sub
pop
inc
jbe
xor
pop
inc
test
insl
pop
dec
mov
and
insl
loop
sti
jl
clc
and
jbe
adc
jne
and
ret
adc
sahf
loope
lea
scas
shr
sbb
fs
xchg
xchg
insl
outsb
popl
cld
fidivrs
rcr
mov
sub
xor
xchg
nop
xchg
ret
pop
das
cs
in
dec
out
pop
les
mov
or
popf
and
cld
cld
pop
cmp
xchg
xchg
jno
lods
inc
fstl
pop
or
jmp
cmc
lods
cmpsl
push
fildl
cmc
in
and
xchg
pop
int
cmp
rcll
icebp
sub
mov
push
mov
pop
add
rep
cmp
and
pop
popa
jbe
aad
imul
xor
xor
mov
out
lcall
xchg
outsl
sbb
hlt
or
pop
xor
shll
mov
stc
mov
mov
nop
adc
scas
iret
push
add
lods
mov
mov
jecxz
loop
mov
push
pop
pop
sub
scas
push
test
push
jl
outsl
out
pop
int3
jns
pop
sbb
popf
into
rclb
pop
adc
push
or
jno
cmp
xor
insb
fistl
or
bound
push
pop
mov
jmp
cmp
mov
and
movsb
addr16
pop
out
jl
test
pusha
push
adc
sub
nop
mov
adc
xorl
jnp
pusha
add
push
loop
adcl
push
dec
gs
xchg
mov
imul
loope
pop
jmp
mov
movsb
inc
xchg
dec
sti
xchg
inc
pop
mov
stos
lcall
cwtl
mov
xchg
scas
fdivrs
add
xchg
push
sahf
lods
pop
push
ret
pop
adc
adc
cmc
neg
repnz
pop
jbe
xchg
inc
cmp
add
jb
or
push
stos
xchg
inc
pop
mov
in
arpl
xor
push
push
push
repz
lahf
add
test
je
mov
std
jl
xchg
push
rcr
aam
pop
mull
cmpsb
test
push
inc
jmp
mov
push
xor
add
sub
pusha
push
adc
cli
out
or
and
ret
push
mov
mov
pop
xchg
in
addl
add
lahf
idivb
mov
push
imul
in
lahf
fdivrs
mov
pushl
add
sub
jns
daa
sbb
stc
pop
addr16
xchg
je
pop
lods
add
mov
lret
push
mov
pop
jmp
mov
xchg
enter
inc
xlat
add
fidivrs
mov
mov
stos
jl
shr
and
and
pop
add
leave
xchg
lods
adc
es
lahf
mov
repz
cltd
leave
iret
pop
rorb
mov
in
push
pushl
inc
inc
sub
sbb
jae
iret
nop
mov
popf
clc
aaa
rclb
in
fnstcw
push
je
push
adc
mov
in
stos
cltd
sbb
adc
aas
mov
push
sub
jnp
stc
andb
adc
xor
std
repz
lahf
adc
sti
imull
inc
sahf
xchg
xor
or
cmp
fcmovne
push
dec
fs
mov
cmp
xor
jno
jne
and
push
pop
mov
orl
or
pop
jp
cmp
aad
jae
pushf
int
outsl
ss
cmpsl
jg
addl
enter
cmp
mov
lcall
adc
jne
dec
fidivrl
adc
pop
jge
ret
icebp
mov
inc
jmp
scas
xchg
imul
pop
repz
sbb
clc
cmp
sub
cli
shl
jne
popa
mov
xor
data16
jae
pop
bound
cmp
jp
jns
lea
daa
movsl
adc
mov
mov
or
out
xchg
jp
je
out
sbb
sub
cli
test
add
and
aam
and
mov
ja
pop
mov
xchg
xor
int
cmpsl
ss
add
shl
cmpsb
test
popaw
xchg
add
sbb
xchg
push
mov
adcl
and
lcall
xchg
xchg
arpl
popa
dec
fwait
scas
insl
leave
rorl
test
or
cmp
pop
stos
imul
jns
cmp
push
xchg
mov
insl
out
or
es
push
dec
adc
out
add
xor
in
stos
pop
lods
xchg
dec
bound
in
adc
xchg
js
mov
in
data16
out
adc
sbb
imull
ljmp
mov
or
roll
add
push
shrl
push
arpl
mov
dec
mov
js
and
mov
aam
rcrl
outsb
pop
xor
jle
stos
pop
lret
mov
mov
call
pop
cmp
pop
xor
lds
mov
and
xchg
insl
scas
jle
insb
add
xor
xor
dec
push
in
jne
cmp
xor
popa
and
xchg
test
stos
jmp
lds
insb
mov
lahf
and
ss
adc
movsl
scas
jl
aad
and
ja
loope
push
in
adc
jmp
xor
inc
dec
push
hlt
inc
jp
mov
shrl
stos
loop
sar
outsb
jnp
push
cmp
or
arpl
fs
movb
xchg
push
insb
mov
adc
movsb
btl
loope
fistpll
xchg
pop
fwait
popf
cld
mov
mov
adc
mov
daa
pop
icebp
or
dec
aas
ja
in
pushl
jmp
mov
pusha
add
mov
mov
in
pop
cmp
jge
mov
std
cmc
and
cmovl
je
mov
jb
int
fnstsw
fimull
inc
sbb
dec
lahf
aas
sti
cmp
jecxz
mov
and
jmp
xlat
scas
pop
push
push
jl
in
adc
scas
jg
xchg
clc
cmp
icebp
repz
je
hlt
mov
xlat
nop
stos
add
push
push
outsb
enter
in
adc
scas
jg
fwait
js
jecxz
jo
xor
call
mov
loopne
inc
movsl
int
das
inc
and
std
adc
push
lods
pop
inc
adc
fisubrl
movsl
movl
and
mov
cmp
faddl
mov
pop
movsl
mov
lcall
inc
adc
xor
xchg
int3
outsb
mov
pop
jge
lcall
adc
iret
push
loop
std
cltd
add
cmp
add
adc
fisubl
fwait
hlt
cwtl
shlb
sbb
dec
ja
cmp
or
pop
cltd
fnstsw
pop
jp
aam
fnstenv
mov
aam
jbe
out
int
out
cmp
fidivrs
sub
mov
ss
fstpt
pop
aas
xor
cmp
mov
jne
idivl
jbe
ficomps
and
fldenv
out
pop
popa
dec
pop
in
add
adc
test
sub
mov
movsb
mov
addb
xor
or
cmp
mov
add
xor
sbb
mov
jne
bnd
out
or
adc
popf
and
lods
sbb
sbb
addr16
lcall
das
imul
test
mov
adc
pop
adc
or
sahf
pop
lret
mov
fucomp
decb
adc
insl
mov
push
cli
xlat
xchg
inc
dec
dec
iret
pop
aad
mov
push
fnsave
xor
mov
inc
iret
mov
jp
mov
ret
repz
lret
jg
inc
ljmp
pop
repnz
mov
pop
mov
cltd
outsl
pop
jl
jbe
xchg
aas
xor
popf
dec
mov
roll
outsb
dec
pop
cmpsl
and
xchg
jno
push
sahf
arpl
int3
int3
out
insl
push
jge
in
push
fiadds
ror
adc
pop
jg
in
sbb
xchg
xor
adc
jnp
aaa
aam
test
mov
jb
sbb
sub
cmp
call
test
pusha
mov
je
lcall
ss
fmulp
push
push
dec
js
repnz
aas
sbb
push
into
es
cld
push
pop
inc
xchg
pusha
cmp
test
icebp
fidivs
mov
push
mov
outsl
push
out
out
sub
scas
inc
jge
xchg
lea
fs
push
inc
arpl
mov
bswap
imul
and
lods
add
daa
rcrl
add
xchg
fiadds
jmp
cmp
mov
sarl
xchg
into
xorl
mov
test
push
pop
mov
push
dec
mov
ds
es
push
jb
adcl
xorl
shlb
xchg
in
mov
xlat
sub
fcomps
js
mov
testb
jmp
fs
ret
mov
imul
in
xor
test
pop
dec
jae
jp
rolb
inc
jle
jl
ficomps
js
fxch
and
mov
lcall
idiv
add
enter
mov
pop
out
jmp
adc
pop
dec
icebp
inc
or
ljmp
jne
xor
mov
sub
push
mov
cmc
adc
and
loopne
or
in
repnz
mov
in
testl
pushf
cmpsb
mov
sub
mull
ror
xorb
push
jns
pop
fistpl
ss
roll
xchg
push
pop
adc
mov
pop
adc
sbb
jge
cs
dec
cld
cmpsb
and
dec
lock
mov
mul
lret
sbb
xor
fldl
iret
push
sub
mov
mov
sti
outsb
aas
xchg
repnz
sar
and
push
sti
aas
fldenv
leave
jno
add
repz
lods
js
cwtl
leave
mov
repz
push
dec
inc
sub
dec
aad
adc
jl
je
dec
outsb
jbe
jns
inc
cltd
mov
js
out
pop
push
je
cmp
jecxz
aas
das
xor
add
xor
int
jge,pt
mov
test
scas
fistpll
lret
sub
sbb
mov
pop
add
mov
stos
cmpsb
arpl
jl
push
adc
and
sub
mov
jno
lahf
mov
and
and
mov
jnp
lret
sbb
xchg
adc
aas
idivl
pop
or
daa
sbb
incl
sbb
sbb
lcall
mov
sbb
aaa
inc
mov
cmp
adc
sbb
push
ljmp
test
leave
mov
adc
clc
xor
and
and
popa
pop
adc
cmp
cmp
or
loopne
xor
jne
leave
sub
mov
outsb
mov
imul
xor
repnz
scas
adc
jb
out
stos
arpl
fistpll
mov
and
shlb
lahf
adc
add
bound
xchg
mov
outsb
push
cli
mov
jo
pop
or
mov
ficoml
sarb
arpl
in
or
xor
repnz
inc
ds
push
jg
and
or
adc
push
jae
add
dec
repnz
cmpsl
dec
clc
xchg
jno
fs
insb
decl
sub
xor
subb
fisubs
push
mov
lea
fnstsw
outsb
push
sub
pop
test
xor
js
inc
sub
ja
les
insl
cli
mov
xor
xchg
test
xorl
fadds
lret
out
sbbb
and
cmc
int3
movsb
pop
add
in
pop
cld
ret
clc
mov
and
aad
or
fldl
fdivrl
gs
popf
dec
mov
push
sbb
and
arpl
insl
push
inc
lods
inc
fs
lcall
lds
mov
sahf
addr16
pop
mov
sbb
push
lods
adcw
outsl
push
jp
or
imul
ss
and
pop
jl
popf
push
cmp
push
mov
test
cmpb
xchg
push
hlt
pusha
sbb
shrb
arpl
call
and
ret
stos
cli
mov
cli
lahf
js
push
cmpsb
out
in
xchg
loop
in
jo
push
cltd
shlb
inc
test
xchg
xchg
add
addl
icebp
ret
les
jl
outsl
cmp
or
aad
stos
push
jl
pop
scas
ret
in
fnstsw
addr16
inc
add
push
cmp
or
decl
pop
mov
imul
daa
mov
ss
shlb
fwait
and
insb
ds
imul
or
lock
sbb
jle
pop
neg
mov
mov
lock
call
mov
mov
fs
mov
or
adc
out
or
cld
push
leave
fnstcw
add
addr16
inc
add
push
push
jne
jle
pop
fcomip
and
dec
scas
adc
push
xchg
stc
cltd
in
xor
cs
sbb
inc
and
clc
jae
sub
lods
inc
das
pop
pop
mov
add
inc
loope
adc
cmp
jne
das
sub
inc
and
in
jb
adc
or
push
sub
leave
cmpsl
movsb
test
daa
sbb
jmp
xchg
insb
ds
and
lahf
aas
or
jb
ljmp
movsl
mov
leave
mov
pop
dec
outsl
cwtl
lock
fistps
jns
xor
cmp
jge
negw
arpl
std
jg
stc
repz
xlat
adc
aam
iret
xchg
push
cvtpi2ps
sbb
jmp
mov
jg
icebp
ljmp
movsl
mov
fistpl
lcall
mov
jle
dec
and
dec
lea
pop
leave
dec
jge
shl
out
idivl
pop
stos
test
mov
sti
imull
mov
sub
mov
sub
mov
or
inc
dec
push
shlb
mov
pop
fnsave
pop
test
aaa
mov
adc
lcall
jg
mov
pop
stos
cs
jnp
mov
sbb
xchg
addr16
push
pop
bound
mov
push
adc
gs
xor
adc
mov
dec
push
cltd
cmp
jae
add
xor
into
subb
adc
push
and
ja
jl
or
dec
fwait
fwait
js
inc
cs
mov
ja
or
stos
std
fs
jl
or
add
out
outsb
imul
inc
mov
mov
mov
jbe
mov
adc
sub
cmp
cmc
cmpsb
test
ja
pop
jmp
lret
rcrl
inc
cmp
scas
cmc
inc
outsl
adc
sub
dec
lret
sbb
adc
pop
mov
bound
pop
adcl
ljmp
loop
mov
cmpsl
insb
and
pushf
adc
adc
loopne
jbe
jno
cmp
adc
cwtl
cld
jo
lret
scas
loopne
test
shlb
imul
xchg
test
icebp
aaa
lahf
iret
inc
cmp
fstl
lahf
test
sahf
jmp
or
mov
dec
in
imul
dec
cmp
cli
and
add
push
adc
ljmp
or
sbb
sahf
dec
or
push
push
push
inc
hlt
push
into
jge
rcll
inc
and
in
rcll
std
cli
xor
push
stos
sti
sub
cwtl
add
ljmp
nop
dec
imul
push
jecxz
fisttps
lahf
stos
fiadds
mov
push
xchg
lds
jl
xchg
push
xchg
loopne
insb
repnz
rcl
cmpsl
nop
aam
mov
loope
loopne
js
lret
jno
gs
mov
in
popa
mov
add
or
aad
sbb
mov
jb
push
dec
jecxz
cli
cmpsl
mov
rolb
jne
stc
je
shlb
add
xor
ret
fwait
mov
jae
adc
das
jg
push
shr
out
pop
xchg
or
or
cmp
mov
stos
xchg
cmp
pop
mov
repz
xor
dec
fcompl
mov
dec
ficomps
lea
push
cmp
add
adc
adc
mov
es
rcr
ficompl
ds
lods
loop
push
cmp
inc
mov
or
xor
mov
pop
sbb
int
aad
pop
ds
adc
sbb
imul
and
jmp
idivb
call
jg
out
imull
das
data16
cmc
mov
pushf
jmp
movsl
lods
daa
push
sarb
test
push
adc
fwait
mov
aas
jle
jp
sbb
pusha
dec
jne
mov
and
bound
or
mov
leave
sbb
ja
mov
mov
imul
test
in
adc
pushf
pusha
push
adc
or
xor
mov
push
adc
push
adc
lcall
mov
shr
cmpsl
andb
xor
xchg
aad
repz
pop
push
jne
pushf
neg
mov
scas
push
jo
ljmp
int3
pop
cmp
xchg
and
std
fdivl
mov
lahf
rclb
cltd
jg
cmp
in
jo
mov
adc
aam
movsb
icebp
testb
stc
pop
jp
aam
mov
adc
xor
jb
mov
ret
add
adc
add
aam
lds
pop
adc
lret
push
inc
adc
repnz
sti
jp
add
mov
mov
shl
push
adc
divb
nop
stos
repnz
in
or
or
adc
and
push
adc
out
mov
pop
loopne
or
pop
repz
xchg
mov
sub
adc
push
mov
or
add
sub
adc
mov
or
adc
jle
nop
mov
insl
wrmsr
mov
adc
pop
adc
adc
orl
adc
adcl
andb
mov
pop
sbb
mov
loop
adcb
push
or
lret
mov
cmp
pop
sbb
and
jnp,pn
imul
jle
push
jo
out
bound
jno
outsl
movsl
lea
je
add
mov
int
sub
adc
leave
jmp
adc
xchg
popa
jne
sar
stos
loope
hlt
add
jl
sub
adc
and
cmpsl
xchg
mov
sbb
adc
call
mov
sub
adc
inc
aam
sbb
subb
push
jge
jae
imulb
lahf
push
cmpb
jl
or
out
es
inc
je
add
jno
adcb
xchg
adc
xchg
adc
jge
add
or
pmaxsw
adc
fbstp
inc
push
lock
test
es
push
mov
or
mov
mov
xor
cmp
into
dec
xchg
in
fcoml
or
insb
adc
mov
sti
inc
outsb
enter
mov
stos
pop
xchg
loopne
pop
adc
sub
or
or
inc
aaa
mov
pusha
push
adc
adc
jbe
lods
sub
mov
or
repz
out
push
out
sub
mov
aam
add
adc
or
js
loopne
pop
adc
jno
sbb
out
xchg
lods
pop
xchg
xchg
mov
cmpsl
into
push
fbstp
dec
mov
call
out
movlps
jbe
push
fnstcw
pop
std
jp
hlt
and
mov
aad
clc
lcall
dec
xor
push
jp
cmp
cs
add
sub
sbb
mov
or
sbb
pop
mov
addr16
shl
jne
or
mov
push
das
pop
stc
negl
inc
movsl
mov
stc
cmp
idivb
ss
aad
ret
and
jmp
mov
mov
mov
cmp
stc
stos
or
lods
cmc
cmpsb
ljmp
cwtl
mov
stos
mov
jnp
and
stos
or
repz
jmp
out
fnstsw
mov
push
outsl
sub
mov
jg
shlb
cli
ret
sbb
pop
inc
adc
fildll
cmpsl
mov
or
jl
pop
xlat
sbb
stc
rep
sti
add
adc
jo
inc
mov
mov
loop
shrl
mov
dec
push
adc
ret
mov
xlat
cld
or
repnz
sbb
insb
and
mov
adc
jnp
movsb
test
jmp
scas
add
xor
add
xor
xchg
pop
mov
fcomip
out
fnstsw
insl
jge
mov
shl
out
adc
inc
adc
pop
hlt
push
xor
iret
lahf
ds
jge
pop
js
rorl
fistl
jo,pn
leave
xchg
daa
cmp
stos
jb
es
push
bound
adc
mov
daa
fiaddl
xor
mov
iret
or
pop
cmp
sbb
out
fnstsw
add
repz
pop
mov
mov
leave
xchg
push
inc
pop
fdivrs
cli
jo
or
bound
sti
mov
or
imul
addl
adc
cmp
xchg
out
sub
mov
xor
mov
mov
and
or
arpl
js
push
popf
int3
imul
sub
aad
push
cld
fisubl
aaa
ret
push
repz
in
ljmp
negb
cwtl
pop
or
out
jbe
cmpsl
clc
adc
cmp
or
aas
mov
mov
lret
popf
call
vunpckhps
inc
adc
mov
sbb
and
and
jb
in
out
sbb
cmp
sub
sub
fnstcw
jmp
add
mov
mov
adc
imul
nop
daa
and
stos
push
mov
loopne
mov
xchg
ja
cmp
lret
insl
loopne
push
adc
sarl
push
cmc
jp
dec
xchg
fwait
loope
sub
or
adc
add
sub
adc
notl
dec
mov
cli
dec
es
xchg
insb
push
aas
popf
mov
shrb
jnp
addr16
test
or
sbb
shll
lcall
rorb
into
fistl
sbb
ss
daa
fidivl
das
sub
pop
xchg
sub
push
insl
adc
mov
sub
pop
adc
pop
adc
cmpsl
cmp
xchg
jecxz
mov
imul
cli
sahf
push
scas
int
loopne
dec
addl
sub
imul
aas
daa
cmp
mov
inc
cmp
mov
add
imul
mov
ret
sub
push
jmp
mov
xchg
pop
mov
or
std
xor
nop
sbb
push
pop
out
stos
ret
hlt
ret
daa
xchg
add
mov
xchg
cmpsl
stos
cmp
cmp
mov
or
pop
jl
rcrb
enter
adc
dec
dec
mov
shlb
les
lret
sbb
xor
mov
int
cmp
popa
popa
sahf
fistl
outsb
add
and
push
movsl
mov
cmpl
sub
mov
cs
aam
jle
cmp
ret
lcall
pop
or
aas
sbb
or
dec
add
pop
adc
mov
outsl
cmp
stos
insb
inc
dec
gs
test
push
mov
mov
mov
ljmp
stos
cltd
imul
inc
fwait
mov
mov
sbb
insl
cmc
imul
push
jmp
jb
push
add
incb
insb
and
adc
out
push
jp
lret
hlt
incb
pop
insl
mov
and
loop
lods
das
push
incb
cmc
movsb
jbe
mov
fdivr
movsb
insb
aaa
jmp
dec
sub
cmp
imul
push
push
stc
mov
lcall
popa
repz
pop
setno
lret
movl
lahf
js
fistps
sub
mov
and
push
cmpb
push
pop
out
mov
stos
outsl
out
and
jecxz
insl
and
lret
and
iret
and
cltd
imul
mov
and
ret
dec
outsb
jge,pt
ja
sbb
mov
sub
mov
xor
sbbl
lock
xor
add
out
push
out
push
call
push
outsl
jge
std
cmpsb
xchg
or
loopne
and
ret
xor
ljmp
mov
jp
pop
sahf
ds
test
icebp
lcall
adc
adc
mov
jb
mov
scas
add
mov
jnp
sbb
int
mov
shlb
xor
shl
cmp
shl
mov
xor
out
and
popf
xor
cmc
xchg
jnp
adc
sub
hlt
mov
imul
mov
stos
test
aas
sub
in
lods
inc
inc
adc
les
test
ret
rcrb
jns
push
mov
lahf
push
ror
pop
mov
sti
lcall
mov
les
or
xchg
imul
adcl
and
pop
ljmp
mov
bsf
inc
mov
aam
jmp
scas
mov
and
dec
xchg
mov
inc
insl
lret
int3
insb
in
mov
jmp
add
adc
cwtl
hlt
ret
mov
adc
mov
lods
adc
mov
lock
inc
dec
shr
jp
lods
add
and
push
loope
mov
scas
sub
mov
jne
sbb
pop
cwtl
dec
in
jl
mov
inc
sbb
sub
jns
sub
cmp
adc
mov
xlat
aam
lods
and
movsb
mov
xchg
pop
mov
subl
push
sti
sub
mov
add
out
call
scas
cwtl
mov
das
ja
and
push
test
or
roll
movsl
cltd
sbb
sbb
repz
dec
out
dec
test
jmp
pop
insb
inc
out
mov
pop
push
dec
fsubs
or
push
out
scas
mov
jmp
cwtl
test
mov
pop
mov
inc
cmp
jl
push
sbb
mov
inc
ds
popa
push
push
ja
fcos
push
mov
lea
or
jmp
inc
adc
repnz
jmp
test
mov
xchg
ficompl
sti
clc
cmc
pop
sbb
cmp
jge
fs
or
mov
add
push
adc
popf
mov
lock
test
test
xchg
sahf
or
shrl
jns
sbb
cmpsb
aaa
jns
lock
ja
jg
and
and
cmp
mov
aad
adc
out
adc
movl
add
pop
mov
and
pop
inc
adc
jno
clc
mov
shll
and
bound
or
bound
push
xor
push
and
mov
mov
xchg
fldpi
out
test
cmc
sub
mov
mov
int3
ds
and
cltd
jae
in
es
mov
xchg
xlat
mov
out
pop
cs
jmp
pop
and
pop
adc
ja
outsl
cld
stc
js
dec
loop
jge
scas
insl
cmpsb
scas
jne
les
lods
test
and
push
dec
lahf
mov
mov
ljmp
or
mov
test
gs
dec
imul
sbb
xlat
dec
sub
or
or
gs
push
pop
leave
jle
mov
fistl
mov
and
sti
shlb
push
std
sub
mov
push
push
mov
mov
out
outsl
daa
sbb
dec
daa
pop
adc
jl
mov
or
loop
repz
xchg
in
mov
divb
sbb
jmp
jnp
sarl
popf
fdivrl
and
dec
dec
adc
lods
nop
icebp
or
in
cmp
pop
jns
xor
das
and
cmpb
hlt
fwait
into
in
jg
jl
clc
lods
sbb
and
sbb
out
adc
dec
adc
enter
pop
js
jle
dec
ret
pop
adc
mov
jno
pop
lret
mov
aas
js
inc
inc
jnp
loop
push
loopne
jl
push
les
int3
mov
insb
pop
fnstenv
or
sub
and
daa
sub
sub
in
xchg
clc
dec
xchg
mov
jl
scas
or
lahf
ja
ljmp
jo
mov
mov
ss
and
jle
cmp
jp
mov
lods
or
push
shrb
cltd
das
outsl
pop
and
aam
push
cmp
push
inc
dec
into
push
mov
sbb
pop
insb
adc
cmp
push
cmp
dec
and
cmp
pop
lahf
add
add
int
sarl
jle
xor
and
in
jns
jmp
or
or
pop
dec
sar
add
out
outsl
push
imul
test
mov
cmc
dec
mov
scas
fstl
cmpsb
inc
stc
cmc
mov
push
out
pop
dec
mov
arpl
iret
aaa
insl
in
outsl
push
mov
or
cmc
push
xchg
aas
xchg
lcall
push
lods
mov
adc
lods
jbe
mov
mov
lods
test
push
mov
sub
sbb
fmuls
and
int3
push
or
dec
rcrl
popa
and
xchg
dec
imul
push
sub
xor
sub
scas
fdiv
adc
fdivrl
jp
push
rclb
adcb
pop
imul
out
xor
subb
mov
cli
loope
mov
push
dec
mov
pop
daa
fdiv
cmp
dec
xchg
jg
mov
fs
out
pop
dec
test
mov
xchg
xchg
cs
lds
out
adc
cli
jnp
jns
jb
dec
pop
or
out
dec
test
jge
jb
inc
jmp
mov
jge
cmp
imul
dec
add
dec
push
fistl
sti
inc
ss
icebp
cmp
aaa
cs
jle
incb
pop
adc
nop
mov
cmp
es
jns
in
xchg
xchg
cmp
imul
xchg
cmpsb
inc
in
and
cmpsb
iret
pop
out
push
jecxz
repz
pop
and
add
add
pop
mov
aas
pusha
notb
out
sbb
adcb
xchg
jo
andb
sub
movsl
dec
lods
sbb
add
jnp
cli
pusha
rorb
mov
cltd
jo
xor
add
pop
stos
popa
in
xchg
in
pop
es
cmp
jg
jle
stc
jbe
mov
mov
sahf
ffreep
pop
mov
cmpsb
mov
cli
daa
dec
sbb
bound
xchg
pushf
pusha
dec
jne
adc
and
mov
sarb
xor
lret
jle
fidivl
repz
xor
sarl
pop
dec
sarb
cld
push
negl
pusha
dec
jbe
rcrb
sbb
cmc
push
lock
jns
pop
dec
mov
push
imull
push
aas
cmpsl
rorl
mov
jae
add
negl
adc
adc
pushl
inc
les
clc
xor
mov
lahf
push
popf
in
scas
push
or
sub
xchg
daa
dec
pusha
dec
pop
hlt
adc
mov
cmp
out
push
pop
jmp
jae
fnstenv
dec
lahf
xlat
add
or
jp
imul
faddl
pusha
push
adc
mov
gs
pop
xor
cwtl
sahf
mov
or
push
out
jle
shll
xor
pop
lds
lret
or
dec
ja
aas
call
in
adc
adc
or
mov
movsl
xchg
subb
jmp
push
repnz
jg
shll
push
mov
cmp
lahf
sub
or
xchg
jno
bound
adc
je
or
scas
mov
adc
or
ja
es
or
enter
test
insl
or
mov
sub
adc
xchg
push
adc
or
je
mov
leave
cmp
mov
pushf
sub
adc
or
push
imul
sub
adc
adc
jne
ss
addb
ljmp
xorl
push
stos
sbb
xor
sahf
cmp
push
orb
cld
mov
into
sbb
pop
adc
xchg
adc
adc
cmp
pop
sub
pop
push
xor
adc
sahf
jno
lock
dec
sub
mov
sub
lock
gs
push
imul
and
push
mov
cmpb
je
cmpb
je
pop
ret
jmp
pop
dec
xchg
xchg
xchg
nop
nop
mov
mov
nop
nop
call
xchg
xchg
xchg
nop
nop
mov
nop
nop
addl
xchg
xchg
xchg
nop
nop
mov
nop
nop
sub
xchg
xchg
xchg
nop
nop
mov
mov
nop
nop
addr16
xchg
xchg
xchg
nop
nop
mov
mov
nop
nop
mov
xchg
xchg
xchg
nop
nop
mov
mov
nop
nop
mov
xchg
xchg
xchg
nop
nop
mov
mov
nop
nop
mov
xchg
xchg
xchg
nop
nop
mov
mov
nop
nop
dec
xchg
xchg
xchg
nop
nop
mov
mov
nop
nop
jne
xchg
xchg
xchg
nop
nop
mov
nop
nop
xor
js
jno
xor
loop
mov
cmpsb
adc
js
outsl
movb
mov
xchg
jns
pop
mov
adc
jb
xchg
sub
jle
jecxz
cmp
or
push
jnp
add
fistps
jnp
dec
cmp
imul
and
xor
fnstenv
cmp
addr16
push
out
adc
dec
lods
push
inc
sub
or
pop
out
test
lcall
adc
jl
mov
push
adc
test
adc
adc
pusha
push
adc
cld
sub
or
cmp
sti
not
subb
ss
loope
adc
rcrl
ljmp
xor
sub
or
push
push
pop
mov
sub
fnstenv
fwait
sahf
aas
jle
add
call
sti
les
push
mov
loopne
iret
mov
insb
push
mov
fsubrl
rorl
les
in
push
in
outsl
sarl
mov
ss
mov
je
push
adc
inc
ljmp
mov
mov
push
mov
dec
push
and
jg
xchg
add
sbb
idivb
jle
cmp
cmp
sub
mov
mov
xor
movsl
jne
pop
andb
xchg
gs
dec
mov
fiaddl
jg
mov
insb
jle
fcmovu
inc
aas
divb
into
lahf
ds
mov
mov
lods
mov
outsl
pusha
sub
adc
nop
mov
mov
and
dec
mov
rorl
bound
adc
testl
negb
cltd
mov
sahf
sti
xchg
add
mov
repz
cmp
xchg
jg
cli
setno
arpl
scas
or
sub
push
inc
insl
bound
adc
pop
jns
std
push
loope
popf
pop
clc
cmp
fwait
ret
cmpsl
xor
sbb
cmp
mov
shlb
xor
ficompl
test
cld
mov
mov
adc
jae
push
in
scas
ds
mov
inc
push
xor
out
cmc
shrb
jns
sbbl
int3
sub
bound
adc
lods
mov
fldcw
cmpsb
jmp
mov
cmp
enter
stos
cmpsl
outsb
mov
push
adc
xor
xchg
in
inc
mov
push
add
cld
dec
and
daa
pop
pop
lock
fsubr
cs
repz
int3
dec
push
lea
cs
ret
or
sub
addr16
out
xor
push
mov
int3
aad
cld
insl
and
or
call
mov
fsubr
aad
jo
pop
sub
cwtl
outsl
out
scas
dec
or
adc
sbb
pop
test
jp
iret
pop
pop
popl
sbbl
push
sbb
pop
stc
pop
cld
and
mov
hlt
fdivrs
mov
push
cmpsl
cmp
or
sbb
push
bound
xor
add
push
push
cltd
xor
cmpsb
andl
dec
xchg
rol
aad
or
pop
iret
inc
sbb
adc
lods
pop
sti
mov
mov
cs
cmpsl
cmp
sub
jl
mov
pop
fiaddl
neg
loope
ret
push
adc
xchg
out
daa
mov
adc
cmp
pop
sahf
les
scas
cmpsl
gs
test
ret
bound
adc
lods
jge
fmull
and
lds
pop
inc
sub
test
adc
cmp
ja
lods
sbb
sbb
mov
imul
adc
sahf
inc
lcall
xchg
mov
mov
arpl
mov
mov
test
jmp
mov
mov
ret
and
ljmp
scas
jg
mov
pop
or
dec
adc
adc
or
pop
add
loope
mov
adc
lahf
jp
outsb
aaa
ds
mov
pushl
mov
movsb
iret
pop
push
xchg
roll
or
aas
pop
cmp
imul
fstl
inc
sub
bound
jg
cmp
daa
dec
movsb
enter
repnz
movsb
stc
jb
aam
fnstsw
loope
jp
in
push
incl
movsb
clc
add
je
setg
xor
pusha
bound
adc
jge
jb
fnstenv
dec
nop
mov
call
add
dec
push
ret
pop
adc
negb
sbb
lret
dec
dec
pop
repz
mov
xchg
lock
cmp
xlat
mov
cmpsl
inc
and
adc
lahf
dec
movsb
iret
cmp
jge
imul
mov
mov
adc
add
aam
leave
adc
push
sbb
jno
jb
out
adc
mov
xchg
push
ret
pop
adc
cmpsl
mov
mov
daa
cmp
jecxz
sbb
mov
rcrb
mov
scas
push
and
in
mov
hlt
push
inc
mov
xor
scas
sub
or
fnstenv
dec
lahf
outsl
sub
jnp
js
loop
cmpsl
add
pop
adc
jo
or
push
insb
sbb
adc
or
adc
xor
idivl
mov
mov
lahf
or
pop
xchg
insl
dec
daa
dec
xor
push
xorl
mov
adc
pop
adc
push
adc
jo
or
out
sbb
adc
mov
jno
mov
data16
mov
mov
pop
mov
mov
and
jns
cmp
mov
mov
mov
push
jle
push
leave
jl
mov
adc
adc
jae
mov
mov
mov
test
jb
mov
add
or
sub
pop
xchg
mov
test
mov
dec
or
movups
pcmpeqb
in
pusha
push
adc
add
sahf
mov
cwtl
outsl
lods
push
jl
hlt
xor
int
repnz
lods
jo
arpl
xor
lahf
adc
test
xor
cmp
pop
jns
jo
mov
mov
xor
sub
jmp
fsub
ss
or
mov
mov
push
adc
jmp
adc
sub
scas
jbe
sbb
lahf
adc
iret
dec
popa
loopne
lahf
pop
xor
sub
fs
mov
negb
xchg
sub
or
add
sub
lds
stc
push
roll
test
pushf
and
shlb
into
lds
mov
or
sbb
push
and
push
xchg
gs
jbe
lahf
inc
aas
bound
sbb
add
sbb
inc
pop
jp
das
sbb
les
mov
add
xchg
lahf
xchg
out
mov
lods
mov
and
mov
or
cli
cmp
lcall
lods
enter
cltd
add
lret
cmp
adc
jb
sbb
adc
push
in
xchg
or
mov
push
mov
pshufw
push
dec
or
popf
enter
lds
sbb
or
add
and
mov
out
or
mov
hlt
xor
test
adc
pop
out
mov
loop
mov
int3
hlt
inc
arpl
cmp
repz
and
roll
addb
or
or
inc
xor
mov
jmp
jmp
xor
adc
mov
in
loopne
movsb
and
sub
or
dec
out
stos
sub
cmpsl
iret
pop
lret
adc
or
mov
adc
iret
test
js
stos
movsb
xor
shr
xlat
scas
insl
outsl
inc
cmp
idivb
and
pop
dec
jl
icebp
js
sti
movsb
cld
or
or
push
sti
inc
rclb
jge
cltd
mov
adc
xor
jno
out
lahf
lahf
mov
adc
mov
dec
mov
arpl
xor
out
mov
jmp
fwait
mov
pop
adc
mov
dec
add
push
mov
mov
xlat
xor
mov
sub
adc
ss
loopne
fsubrp
xor
add
mov
xchg
inc
test
mov
hlt
add
sbb
push
cltd
adc
jmp
sub
inc
inc
adc
mov
adc
es
cmp
sar
ja
movsl
mov
loop
adc
shlb
aas
cmc
inc
test
aad
bound
sub
pop
dec
pop
rcl
iret
inc
fnstcw
std
ret
negl
pop
sub
mov
aam
ss
movsb
mov
repnz
lods
call
cmp
out
std
mov
stc
mov
fdivrs
pop
clc
sbb
cmp
pushf
fs
mov
sbb
popf
rclb
push
mov
icebp
adc
adc
adc
insb
sub
or
shll
mov
fxch
xor
mov
sahf
fidivl
jecxz
adc
adc
jne
jmp
lds
add
sbb
pop
pop
jle
push
jle
mov
cmpsb
xor
pop
push
in
push
adc
sbb
sbb
jle
cmp
mov
repnz
xor
push
aaa
cmp
leave
loopne
lds
pop
xchg
mov
in
push
adc
push
sbb
pop
daa
dec
imul
pushf
or
pop
or
leave
scas
or
loop
mov
adc
or
rcl
shll
mov
pop
in
push
adc
dec
sbb
fcmovnbe
xchg
dec
xor
sub
mov
xor
sahf
or
fldln2
push
pop
cltd
xor
pop
adc
pop
xchg
lea
fmuls
add
xchg
mov
pop
adc
movsb
stos
xchg
inc
leave
inc
mov
jecxz
fadd
pop
adc
pop
pop
iret
aam
pop
adc
aam
int3
rolb
inc
push
fcmovnb
lock
fadd
pop
adc
stos
mov
insl
push
adc
test
rolb
mov
icebp
xchg
lds
push
push
lods
jge
sub
shrl
inc
int3
mov
jge
mov
mov
sub
rolb
jle
ret
pop
arpl
loop
inc
or
pop
adc
arpl
jmp
imul
mov
lahf
dec
int3
rolb
test
push
aad
loop
int3
rolb
add
in
pop
adc
mov
pushf
push
xchg
mov
xor
sbb
shl
and
cmc
adc
and
xchg
inc
pop
out
ret
inc
in
lods
out
mov
mov
stos
daa
ret
scas
xlat
and
addb
jmp
popa
or
fstpl
adc
cmp
icebp
mov
and
movsb
lret
rolb
mov
or
dec
pop
and
pop
popf
sbb
pop
outsb
mov
xlat
enter
ret
inc
filds
inc
mov
push
sub
fmuls
mov
call
or
dec
lcall
repz
or
push
divb
std
jnp
popa
ljmp
mov
or
aam
mov
inc
rolb
sbb
xor
std
test
jle
aas
mov
sub
addr16
adc
scas
aas
idivb
rolb
jge
subl
sub
lods
jnp
mov
or
adc
adc
outsb
adc
pop
sbb
sbb
jno
mov
addr16
adc
lods
cmpsb
mov
sti
jb
inc
rolb
leave
rorl
pop
or
mov
loop
jge
and
fdivs
xchg
xlat
imul
jl
testl
ljmp
dec
fwait
cltd
push
mov
lods
je
or
adcl
ret
sub
fnstenv
mov
dec
int3
rolb
adc
stos
pop
dec
push
inc
mov
testb
jo
outsl
int3
rolb
jp
dec
lahf
aas
repz
xor
cmpb
adc
outsl
pop
in
jae
daa
dec
fwait
pop
es
lahf
aas
cmc
jg
rolb
enter
or
and
dec
pop
sbb
gs
jbe
ss
stos
dec
jmp
adc
sub
inc
mov
sbb
scas
pop
fwait
xor
adc
and
xor
jp
stos
or
inc
mov
test
int3
rolb
popf
xchg
lret
push
rolb
adc
mov
add
push
mov
and
fimull
mov
push
jge
test
jp
mov
pop
adc
mov
orb
jl
adc
mov
sub
mov
popf
sbb
imul
aam
sbb
stc
jge
adc
sub
mov
sbb
or
push
sub
adc
aas
sub
pop
adc
jo
sub
ror
movsl
in
pop
push
ja
daa
popa
pop
sbb
mov
cmc
mov
push
shrl
pop
adc
aam
add
and
fmuls
or
fwait
lret
or
adc
fucomp
mov
pushf
insb
out
pop
jl
in
push
adc
xor
mov
push
pop
mov
test
mov
or
idivl
mov
cmp
nop
jmp
adc
and
data16
fstps
lods
insl
push
into
addr16
jbe
adc
mov
nop
mov
and
lds
adc
jge
repz
xchg
xor
or
mov
rolb
mov
sub
shl
dec
scas
popf
or
fs
int3
rolb
adcb
daa
mov
das
mov
or
mov
mov
adc
pop
xor
add
xor
rcll
inc
cmp
push
jbe
pop
int3
rolb
push
in
add
jecxz
ds
sub
push
in
mov
and
pop
adc
mov
fiaddl
ficoml
inc
incb
cmc
jl
mov
adc
mov
push
movsb
cs
ds
rolb
dec
push
mov
out
dec
dec
mov
loopne
stos
mov
mov
lcall
lahf
or
xchg
ret
xor
or
out
mov
cmp
sub
adc
imul
add
xchg
or
fildll
int
inc
adc
pop
push
aas
out
iret
xor
das
jg
pop
pop
repz
pop
xchg
mov
rolb
jo
xchg
jle
icebp
inc
pop
popa
popa
jecxz
imull
mov
dec
rorb
sub
iret
cmp
pop
xchg
daa
iret
pop
data16
roll
pop
mov
push
adc
out
orl
pop
ret
sbb
jb
sti
inc
push
jge
cld
mov
cwtl
adc
test
push
dec
add
scas
in
mov
mov
sti
outsb
jns
xchg
xor
sarb
ja
jg
push
nop
pop
mov
mov
es
push
aas
stos
push
mov
add
inc
outsl
mov
jo
lcall
mov
adc
or
sbb
insb
repz
and
push
pop
jle
shlb
mov
int3
rolb
adcl
je
pop
lahf
ja
stos
add
imul
sbb
push
or
dec
fwait
dec
push
jle
lcall
mov
mov
or
pop
adc
xchg
mov
and
dec
int3
rolb
inc
outsl
pop
popa
or
test
dec
int3
rolb
push
adc
adc
mov
and
rolb
pusha
rcll
lahf
push
mov
mov
ljmp
sahf
aas
jle
push
imul
inc
scas
aas
jge
popf
loop
inc
adcb
xlat
loopne
iret
mov
jnp
pop
lods
cwtl
ja
addl
js
movsl
pusha
mov
or
adc
not
jnp
cmc
in
fnstenv
out
pusha
shlb
or
adc
mov
push
mov
scas
aam
jbe
cmp
add
jp
mov
int3
pushf
mov
pop
xor
rorb
pushfw
mov
lods
pop
les
icebp
jle
dec
sbb
pop
mov
push
cmp
pusha
lds
adc
nop
ret
push
ret
pop
adc
jg
pop
loopne
or
sbb
in
or
lock
or
imul
dec
push
insb
adc
pop
inc
jo
or
in
mov
insb
sbb
adc
faddl
pop
adc
pusha
das
inc
push
mov
add
adc
mov
mov
hlt
pop
cmp
lahf
ja
je
push
add
adc
test
loop
je
mov
icebp
fcomi
pop
shrl
out
insl
mov
mov
cmp
fwait
xor
or
jmp
push
sahf
add
repnz
jns
in
cmp
add
fisubrl
pop
pop
out
cmp
dec
pop
mov
shrl
and
imul
in
cs
mov
inc
pusha
xchg
out
xchg
push
popa
xchg
lods
inc
ja
fadd
jge
aaa
push
sub
neg
cmp
leave
mov
push
push
add
dec
in
scas
sub
cs
push
js
push
adc
movsb
decl
lret
sahf
movsb
cmpsl
sub
fcomps
dec
js
das
dec
icebp
outsl
pop
sbb
pop
inc
aad
push
add
mov
cs
cs
xor
mov
clc
ss
sbb
aam
xor
sub
and
sub
rcl
pusha
jg
xor
pop
add
mov
pop
cwtl
and
sub
dec
xchg
jl
mov
inc
push
lahf
call
aas
pop
xor
test
rcrl
ret
bound
pushf
fisubs
pushf
repz
mov
push
lock
lret
call
dec
ja
add
add
add
or
mov
pop
popf
das
out
nop
in
push
adc
jno
repnz
xchg
sub
jno
sub
xor
sbbb
mov
cmp
jle
icebp
nop
rolb
out
les
hlt
jl
ficomps
add
inc
or
sbb
mov
jnp
dec
sub
imul
stc
test
push
sub
aam
addr16
sub
repz
pop
cmp
xchg
movsl
pop
xchg
ss
in
push
adc
int
loopne
jne
jb
jmp
ljmp
add
nop
push
xlat
clc
mov
lcall
jg
rolb
ja
outsb
sti
mull
cld
scas
pop
inc
jmp
jnp
addr16
xor
scas
or
xlat
stc
rep
mov
imul
push
mull
pop
das
pop
mov
mov
mov
dec
lahf
aas
orl
mov
adc
imul
push
outsl
mov
daa
dec
lahf
mov
adc
outsb
mov
cmp
jbe
mov
sahf
aad
lahf
jne
leave
mov
loope
bound
cld
pusha
mov
jbe
leave
fwait
jo
into
fimull
adc
scas
fs
sti
dec
lahf
aas
jle
xor
adc
stos
add
mov
and
test
divl
aaa
idivl
push
imul
dec
mov
dec
test
std
and
enter
push
lock
mov
repnz
mov
push
aas
lds
adc
addl
ljmp
mov
cmpsb
sub
scas
jnp
in
push
testl
jns
ret
je
mov
push
cld
mov
jecxz
adc
es
divb
pushf
cmp
push
cmp
aam
arpl
or
mov
daa
cmp
in
orb
in
dec
movsl
push
lret
loopne
or
imul
lods
bound
add
pop
lds
dec
sub
mov
lods
mov
aam
pop
adc
push
stos
out
lret
stos
out
hlt
shrb
add
in
dec
pushf
hlt
sub
cmp
xor
lret
mov
lds
stc
push
ja
sub
iret
cmc
xchg
jle
loope
adc
movsb
pusha
imul
jne
aam
shll
scas
ret
pop
cmp
fwait
xor
scas
sbb
mov
jmp
and
mov
adcb
aaa
bound
out
xor
ret
cmc
mov
and
in
andb
jle
sar
push
jl
xor
jb
fs
stc
sbbb
adc
orb
xchg
or
notb
jns
add
lret
sbb
lea
jnp
adc
aam
and
mov
and
sub
inc
fimull
in
xor
fld
hlt
xor
repz
mov
push
jae
fadds
or
mov
pop
adc
stos
push
dec
and
mov
insb
mov
inc
lahf
aaa
out
jl
test
loop
andb
cmpsb
jp
sarl
cmp
mov
lock
cmpsl
jecxz
add
pushf
xchg
outsl
and
sahf
test
mov
mov
adc
push
dec
shll
cltd
add
mov
je
jo
add
jb
ds
cmp
push
inc
insb
lcall
xchg
and
mov
lods
insl
shrl
push
ss
xor
or
les
popa
push
push
outsl
pop
sbb
push
stos
adc
push
aaa
and
sub
mov
daa
icebp
je
sbb
rcr
js
jecxz
orps
sarl
sbb
fwait
sbb
fistpll
pop
fwait
xchg
je
push
lock
jecxz
sub
jp
add
sub
pop
adc
jg
test
es
fcom
mov
fwait
pop
dec
inc
mov
sbb
adc
test
push
lds
nop
lock
pop
mov
test
inc
jo
loop
cmc
sub
stos
pop
jl
mov
iret
adc
lahf
dec
pop
add
or
jp
sub
mov
leave
dec
adc
jnp
mov
shl
in
and
pusha
jnp
jo
adc
popa
rclb
test
inc
jg
mov
jb
out
dec
sarl
push
call
movsl
inc
mov
movsl
mov
mov
daa
dec
int3
mov
hlt
js
test
imul
jmp
aam
mov
stos
imul
lahf
mov
call
mov
fwait
movsb
cmp
not
fisubrl
fnstenv
sbb
xchg
sub
idivl
jle
adc
call
xchg
aad
insb
in
scas
aad
sti
imul
gs
sbb
pop
jp
std
adc
xchg
iret
lahf
mov
fcoms
stc
xlat
scas
filds
mov
dec
adc
jbe
and
cmp
mov
inc
enter
shll
sbb
xchg
push
dec
ja
outsl
cld
stc
js
push
add
sarb
jne
xlat
scas
ffree
imul
pop
inc
fs
xchg
lods
or
add
mov
iret
lret
or
out
fdivrl
sbb
test
jecxz
aaa
out
mov
es
outsb
bndstx
leave
std
cmp
xchg
pop
ljmp
js
out
xor
jl
mov
push
fidivrl
mov
popf
shll
push
add
xchg
jno
cmp
mov
mov
imul
or
xchg
cmp
jmp
out
lea
sbbb
push
xchg
sub
xchg
or
jb
mov
stos
add
push
test
xor
mov
aaa
mov
adc
push
daa
xchg
mov
add
imul
add
or
lods
nop
shlb
jnp
sub
push
inc
jge
adc
aad
sub
das
mov
lea
fwait
addr16
jg
lods
or
outsl
gs
mov
adc
sbb
mov
push
into
push
jno
and
pop
xchg
jno
add
pop
cmp
dec
popf
xchg
rcrl
dec
mov
mov
das
mov
cmp
push
scas
inc
dec
cli
mov
movsb
std
xchg
loop
jmp
sub
sbb
mov
jecxz
mov
jne
inc
nop
enter
lock
mov
xor
ret
test
cmp
inc
dec
bound
cwtl
sbb
call
les
push
loop
jnp
add
pop
sbb
add
or
cmc
mov
lods
cwtl
call
loope
sub
sbb
inc
dec
int
shrb
add
dec
leave
mov
test
lock
call
mov
out
ret
pop
pop
and
push
pop
and
cmpsb
adc
pushf
ljmp
xorl
xorl
adc
or
ficoms
bound
cmp
shll
stos
sbb
add
gs
cmc
in
lods
jle
sbb
pop
mov
cli
adc
pop
xchg
std
dec
jmp
push
test
xchg
or
call
push
inc
or
jno
xchg
add
xchg
pop
xor
sbb
mov
cs
nop
je
mov
mov
cmpsl
lahf
pop
out
lret
lods
inc
movsb
adc
adc
push
push
ss
or
sahf
or
xchg
ljmp
and
pop
icebp
sub
pop
cs
jp
bound
adc
or
sti
jne
jg
xchg
sbb
adc
and
xchg
push
das
insb
jbe
pop
mov
adc
xor
pop
sbb
adc
mov
aaa
sub
push
xchg
pusha
sbb
adc
lods
cli
dec
push
push
inc
sbb
adc
adc
dec
sbb
adc
ss
fsubl
adc
setg
fistpll
jle
stc
repz
lahf
out
pop
mov
push
fstp
fs
pop
sbb
adc
mov
mov
lcall
dec
push
pop
sbb
adc
and
or
sub
bound
adc
mov
pop
sbb
adc
pop
pushf
bound
adc
dec
sbb
adc
push
out
push
mov
or
in
pop
xchg
inc
sbb
adc
push
sbb
adc
daa
inc
xchg
dec
sbb
adc
fcoms
adc
das
js
sbb
adc
sbb
adc
pop
aad
jo
lret
and
mov
xor
or
aas
lods
js
dec
jae
divb
and
mov
xchg
aad
mov
adc
pop
xor
adc
fnsave
cmp
pop
mov
gs
dec
imul
lahf
insb
repz
jns
inc
lret
lret
imull
mov
rep
loope
movsb
xor
or
nop
iret
mov
mov
cwtl
pushf
cmp
clc
xchg
push
jnp
and
scas
fisubs
dec
pop
jbe
loopne
movsl
cwtl
icebp
pop
jecxz
push
mov
sbb
mov
cli
or
sahf
lds
jg
mov
insb
mov
lods
sub
inc
sbb
jnp
out
jne
mov
cmp
mov
daa
cwtl
rolb
add
add
xor
jns
or
push
add
and
dec
stos
out
or
jle
jle
rorb
addr16
push
push
inc
add
and
cmp
add
imul
fdivp
jp
icebp
sub
sbb
push
xchg
add
xor
test
movsb
push
ror
inc
out
repnz
jnp
and
ret
pop
sub
and
inc
fxch
andl
jno
jns
and
and
xchg
outsb
inc
mov
jb
push
ret
push
cwtl
mov
xchg
jmp
and
les
mov
or
shrb
adc
adc
push
xor
xchg
or
filds
fbld
mov
in
dec
scas
jo
insb
das
je
orl
add
inc
bound
inc
in
fldenv
xlat
pushf
stc
push
fwait
pop
lea
push
leave
or
sbb
subl
jecxz
jno
fxch
mov
icebp
clc
jl
pop
movsl
xchg
icebp
mov
cmp
mov
fsubrs
cmpsl
fistpll
ljmp
jl
cmp
movsb
in
add
xor
inc
sub
add
fsubrs
pop
or
xor
dec
pop
sbb
adc
inc
fsubl
adc
enter
sbb
push
scas
cmp
jge
mov
or
push
inc
sbb
adc
test
cmp
imul
addr16
dec
dec
pop
sbb
adc
out
out
ret
dec
cmc
inc
sbb
adc
test
inc
sbb
adc
or
fcmovnbe
insb
inc
sbb
adc
mov
and
and
clc
stc
fiadds
or
icebp
dec
dec
decl
enter
or
repz
bound
adc
sbb
adc
adc
mov
jge
inc
sbb
adc
dec
pop
fisubrs
add
mov
mov
sbb
adc
inc
sbb
adc
ss
mov
dec
sbb
adc
sbb
adc
sbb
adc
pop
sbb
adc
push
mov
push
sbb
adc
sbb
cld
mov
test
dec
sbb
adc
or
add
xchg
bound
adc
sbb
push
sbb
adc
dec
dec
sbb
adc
inc
sbb
adc
icebp
dec
sbb
adc
push
mov
mov
ficomps
adc
repnz
push
xchg
xchg
jo
idivl
mov
jne
xlat
scas
ss
dec
jno
pusha
push
adc
cmc
xor
sub
pop
sbb
adc
cwtl
bound
adc
sbb
loope
cmp
adc
insl
js
adc
sub
cmpsl
addr16
mov
sbb
outsb
stos
lret
int3
dec
fidivrs
jle
xchg
and
mov
pop
stos
pop
mov
mulb
xchg
dec
jo
jp
cmpsb
jo
out
inc
fistpll
cmp
movsb
test
pop
out
pop
push
ss
push
imul
sub
lahf
mov
repnz
push
adc
fwait
aad
mov
mov
ret
test
lret
mov
pop
jo
mov
popf
cmp
sub
in
daa
ds
xor
es
pop
cs
push
pop
sbb
pop
jge
or
in
fidivs
es
adc
aad
addr16
nop
xor
pushf
jne
xor
mov
jle
lock
pop
loope
xor
addr16
mov
or
fdivrs
mov
shll
lcall
pusha
dec
shrl
nop
cmp
hlt
pop
ljmp
add
push
cmpb
jne
cli
cmp
ss
and
lret
cs
movsb
ficoml
sbb
shll
insl
mov
pop
stos
cltd
mov
shlb
xor
into
fistl
push
fidivs
jecxz
mov
mov
and
add
sbb
not
dec
fwait
xor
fadd
push
cld
xor
je
sbb
mov
and
out
lret
rorl
mov
outsl
fwait
mov
jg
dec
adc
push
clc
sub
push
mov
iret
dec
outsl
sub
std
lcall
stos
lds
daa
subl
sbb
xrelease
xchg
jp
xor
cmpl
dec
scas
scas
push
pushf
fisubrl
stos
dec
adc
push
je
icebp
xchg
test
mov
lret
mov
or
adc
push
sbb
jno
andl
insl
xchg
sahf
push
add
xor
mov
xor
in
pop
mov
cs
cmp
lock
pop
sub
cmp
or
imul
sbb
testl
mov
dec
cmp
popa
int3
add
leave
dec
mov
xor
call
icebp
jne
push
shrb
loopne
sub
bound
daa
js
mov
mov
sbb
xor
cmpl
pusha
test
jbe
les
lret
popf
jmp
push
outsl
pop
aad
sub
popa
or
cld
add
mull
or
dec
mov
dec
test
jnp
icebp
stc
stc
adc
iret
out
xor
enter
popf
in
fidivs
or
push
fists
pop
push
jle
mov
aad
repnz
and
inc
dec
cltd
and
mov
cs
or
iret
xor
out
mov
jno
mov
push
hlt
mov
mov
mov
sbb
out
pop
xor
mov
ror
xchg
repnz
imull
mov
repz
fnstenv
add
pop
fcoms
xor
gs
out
mov
mov
in
cmp
inc
hlt
test
in
cmpsb
and
push
dec
lock
insb
inc
call
cmc
mov
jp
adc
jns
mov
cmpsl
shrl
sub
fbld
dec
in
and
xor
lock
out
pop
imul
popf
cmp
nop
aas
or
je
pop
jo
jge,pt
and
push
idivl
scas
stos
sarl
jmp
in
fnstenv
dec
lahf
aas
das
adc
testl
lds
sub
xor
and
sahf
inc
sbb
adc
sbb
adc
cmp
mov
pusha
dec
les
popw
repz
xor
xor
xor
cmp
sub
mov
push
aas
inc
iret
fcmovb
fists
or
inc
inc
mov
bswap
xor
scas
mov
ss
iret
daa
mov
mov
scas
out
mov
or
pusha
sahf
cli
pop
in
ss
aad
and
inc
sbb
push
and
in
xlat
inc
and
imul
ljmp
data16
mov
mov
imul
pop
cmp
dec
std
push
movsl
sub
mov
push
and
leave
lcall
dec
fiadds
and
je
fbstp
gs
enter
add
cmp
push
mov
ja
aam
imul
mov
add
dec
push
or
add
in
sti
mov
sahf
sub
fmuls
jae
xchg
enter
jg
repz
and
xchg
out
cmc
inc
lds
fwait
int3
cmc
icebp
add
aas
movsb
dec
hlt
cmpsl
adc
bound
arpl
add
rorl
cmp
jle
cmp
xchg
fldenv
xchg
leave
mov
pop
sbb
mov
add
adc
or
or
movsl
mov
lahf
imul
add
mov
js
icebp
xlat
or
testb
out
js
jmp
adc
adc
sub
mov
cmpsb
jmp
adc
das
stos
fists
xchg
xacquire
outsb
xor
je
cmp
lds
fistpl
sbb
shr
jno,pn
mov
pusha
sbb
sti
mull
cltd
cmpsb
out
daa
jae
aad
xchg
cmp
xchg
push
fnstenv
jl
test
xchg
movsb
pop
rolb
ljmp
pop
shrd
cli
mov
in
cmc
mov
cwtl
outsl
pop
repnz
sub
jns
push
cmp
xchg
inc
icebp
push
sub
add
mov
in
adc
icebp
and
push
fildl
push
pop
adc
mov
roll
ss
mov
lds
imul
inc
push
jmp
push
jbe
mov
jmp
or
sub
cltd
stos
mov
outsb
jmp
dec
cwtl
mov
jge
lret
movsb
push
out
dec
xor
aam
add
add
sbb
push
jae
dec
or
sbb
out
xor
popf
movsl
mov
sbb
adc
cmpsl
movsb
pop
sbb
adc
cmp
sbb
adc
movsb
xor
adc
lcall
mov
push
bound
adc
roll
sbb
pop
mov
adc
adc
xchg
call
sub
inc
les
adc
jnp
cmp
pusha
push
adc
into
sbb
pop
adc
in
mov
adc
adc
or
mov
imul
mov
popf
sub
scas
pop
mov
sub
in
fdivrs
roll
push
out
adc
adc
cmp
inc
les
adc
loop
fnstenv
popa
push
adc
mov
or
leave
je
pop
jmp
scas
or
mov
push
dec
sub
adc
cmp
enter
sbb
inc
pusha
shl
frstor
addl
std
mov
out
mov
mov
cld
cmpsl
push
mov
and
mov
cwtl
fsubp
mov
cmp
ret
enter
jns
adc
sub
dec
fwait
nop
sbb
movsb
clc
or
test
shll
mov
adc
pop
in
xchg
in
outsb
es
cmp
inc
rolb
fstps
mov
data16
ficoml
jle
pop
or
adc
ret
iret
mov
jp
sbb
ja
jge
testl
or
fnstenv
fcmovu
inc
cmp
inc
push
repnz
xchg
mov
out
xlat
push
jle
movsb
in
dec
insl
lock
cmp
sti
fbstp
mov
mov
jp
in
jecxz
mov
add
mov
movsl
add
add
das
adc
sbb
pushf
js
int
ret
and
loopne
push
ss
cmp
into
push
arpl
insl
test
sub
movsl
cltd
leave
icebp
inc
movb
roll
je
sbb
jmp
mov
stos
nop
adc
adc
jnp
mov
pop
cmp
mov
roll
or
xchg
adc
adc
inc
mov
or
in
jns
push
and
fmuls
pushf
pusha
push
adc
call
fcomip
pusha
push
adc
push
adc
in
push
adc
xor
mov
fstpl
adc
adc
push
adc
xchg
adc
adc
in
mov
adc
cwtl
adc
adc
or
push
adc
nop
adc
adc
dec
bound
adc
or
adcl
mov
or
mov
add
or
push
pop
mov
adc
adc
mov
adc
sub
out
fdivr
cmpsl
adc
jecxz
nop
lcall
ljmp
pop
adc
pop
xchg
adc
adc
mov
inc
les
adc
popa
push
adc
jmp
in
iret
cmp
lahf
dec
in
pop
adc
adc
push
adc
ret
aad
xchg
leave
mov
cmc
js
mov
cmp
ss
gs
loop
inc
and
jbe
aaa
sarb
pop
arpl
int
xchg
and
push
adc
mov
sbb
pop
adc
sbb
das
shl
adcl
mov
dec
dec
daa
loope
push
xchg
sub
add
sbb
or
pop
cs
sbb
loop
sbb
fwait
xchg
popf
push
mov
call
dec
xchg
fdivr
out
ds
inc
cmpsb
dec
dec
cs
lret
mov
xchg
inc
cmp
add
push
outsl
inc
push
popf
inc
mov
cmp
xchg
and
inc
mov
mov
pop
dec
jns
add
mov
fcompl
lods
ret
pop
inc
cmp
dec
int
sbb
data16
pop
push
decb
out
and
or
mov
or
sbb
adc
pop
add
or
mov
les
xchg
sahf
and
pop
pop
sarb
jecxz
jo
lahf
mov
adc
sub
push
adc
into
pop
mov
out
lods
cmc
jg
push
and
stos
in
imul
jb
dec
jnp
mov
pop
or
stos
jle
and
xor
icebp
clc
pop
sbb
test
xor
mov
rol
cmp
mov
js
in
adc
popa
aad
fidivrl
daa
mov
fsubs
add
or
repz
or
xor
and
or
in
clc
outsb
aas
push
mov
xor
leave
xchg
dec
dec
pusha
or
or
push
ja
addb
mov
lock
push
mov
add
or
jnp
pushf
pusha
rclb
and
or
lock
adc
inc
and
test
adc
daa
mov
add
or
sbb
sbb
sar
stos
fstpl
inc
movsb
inc
test
sub
sbb
pop
or
outsb
jbe
testb
pusha
shl
inc
sbb
adc
leave
imul
pop
or
mov
ret
lcall
or
inc
sbb
adc
popf
xorl
cwtl
sarb
jge
mov
adc
adc
push
inc
sbb
adc
adcl
in
iret
pop
and
or
shrb
pop
adc
sub
or
scas
pop
xchg
xchg
jp
enter
ds
loopne
xor
push
adc
or
inc
sbb
cmp
test
lods
insb
mov
fidivs
adcb
sbb
fldl
or
movsl
mov
dec
or
adc
jge
xor
and
pop
or
sbb
jl
add
or
outsb
scas
inc
lods
mov
mov
sub
lds
xchg
je
adc
push
out
push
jge
pop
xchg
stos
or
add
popa
sarb
or
sti
daa
jne
icebp
sbb
inc
mov
mov
ss
lods
mov
sub
pop
adc
lahf
and
dec
out
xor
inc
je
repz
ja
pusha
bound
adc
ficoml
adc
lds
lock
insl
andl
popf
nop
stos
and
jmp
add
or
sbb
inc
add
ljmp
sarl
add
gs
repnz
loopne
les
out
fidivl
mov
sub
add
pop
mov
or
xor
adcb
add
push
je
roll
cltd
js
clc
mov
and
xor
out
jns
and
jnp
and
roll
inc
mov
pop
or
imul
imul
iret
sbb
shrd
fcmove
mov
out
and
or
xchg
inc
or
or
pop
push
dec
js
jl
cmc
jbe
sub
pop
adc
adc
jle
add
or
jno
imul
adc
cld
out
adc
xlat
jmp
test
and
pop
or
inc
insl
filds
sbb
pop
sti
adc
pop
or
loop
or
or
sti
push
pop
les
pop
or
idivb
xor
or
imul
adc
adc
cmp
leave
cs
dec
jle
jmp
push
lods
out
fidivl
in
cmp
loope
push
and
push
adc
addl
sahf
push
out
mov
pushf
adc
adc
out
cmc
jne
mov
pushf
adc
adc
int
xchg
inc
bound
adc
or
add
push
cmp
push
adc
daa
mov
jbe
adc
adc
xor
es
sbb
adc
sbb
xchg
add
or
mov
mov
arpl
lret
push
insb
pop
cmp
fs
in
out
fistpll
mov
mov
or
xchg
push
jnp
shlb
mov
dec
dec
and
or
repnz
js
pop
or
scas
or
adc
xchg
or
pop
inc
jo
leave
aad
xor
or
add
popa
pop
xchg
iret
cmp
sub
xchg
shlb
std
and
or
xor
pop
cli
push
scas
or
jle
stc
repz
adc
inc
not
scas
pop
std
nop
adc
add
or
movsb
xor
or
ret
pop
or
or
mov
adc
inc
pop
xor
push
outsl
xchg
dec
fwait
and
cmp
or
pop
negb
inc
or
mov
sub
nop
sub
adc
jbe
outsb
iret
out
popa
rolb
or
jl
imul
out
jp
mov
pop
movsl
mov
int
mov
popf
push
dec
lahf
ds
mov
mov
or
loopne
jl
mov
stc
repz
loope
incb
fwait
aad
mov
jno,pt
mov
out
inc
push
lods
inc
sbb
orl
imull
mov
sbb
mov
xchg
aas
or
jae
push
cmc
fcmovnb
jae
aam
fdivrl
inc
mov
adc
adc
jns
popl
add
inc
insb
ror
mov
or
fldt
mov
loope
sbb
cmp
sub
bound
adc
cmp
jae
push
aam
mov
xor
into
xchg
and
mov
mov
mov
js
fldt
adc
out
sub
mov
imul
int3
test
inc
sub
loopne
mov
pop
add
in
dec
xchg
lock
aad
dec
mov
mov
js
loop
lahf
idivb
or
mov
pusha
pusha
push
adc
sbb
inc
and
adc
adc
icebp
int3
lods
adc
adc
rcrl
mov
call
push
aaa
or
hlt
jo
mov
loopne,pn
xor
adc
xlat
and
into
sbb
fildl
icebp
adc
mov
adc
mov
adc
adc
pusha
pusha
push
adc
je
mov
test
xlat
arpl
scas
add
pushaw
pusha
push
adc
fwait
out
adc
adc
add
clc
inc
cmp
in
sub
aam
test
or
sbb
mov
xor
xchg
adc
adc
xor
fwait
sub
inc
sbb
dec
or
fucomp
test
or
xchg
rcrl
std
jmp
jbe
adc
adc
pop
adcb
shlb
mov
adc
dec
mov
rcrl
ljmp
movsb
outsb
pop
adcb
mov
sete
mov
add
jl
push
adc
clc
subl
push
adc
inc
out
inc
xor
adc
bound
adc
xor
mov
bound
adc
pop
mov
xor
cs
sarb
xor
sarb
js
xchg
mov
stos
jnp
mov
push
adc
mov
outsl
inc
daa
out
hlt
adc
adc
movsb
ss
cwtl
dec
or
loop
adc
add
dec
dec
addr16
ss
or
xor
dec
test
adc
rorb
pusha
out
push
adc
outsl
cmp
adc
loope
fdiv
mov
xchg
sbb
idivb
ss
idivl
lods
sbb
push
add
lret
out
adc
out
mov
and
stos
sahf
xor
int
adc
push
ret
inc
add
xchg
sbb
fnstcw
mov
fwait
ss
ret
addb
jo
pushf
out
clc
lahf
test
push
adc
test
leave
loope
sub
mov
int3
cmc
jo
int3
sbb
adcl
cld
mov
and
ljmp
jbe
out
push
adc
adc
jp
xor
je
push
adc
sub
or
jg
es
and
mov
ror
pop
or
cltd
ja
hlt
add
xchg
lcall
adc
leave
adc
jae
cmp
insb
inc
or
add
mov
fstpt
dec
mov
xchg
leave
mov
fistps
addr16
mov
xchg
repnz
jmp
dec
adcb
clc
adc
adc
jo
jnp
sbb
xchg
cltd
pusha
sub
adc
adc
mov
pop
mov
adc
adc
subps
dec
clc
adc
adc
test
push
adc
out
dec
lock
adc
xor
std
shll
adc
add
adc
sub
inc
jnp
cltd
shl
mov
fdivs
jge
xchg
lds
out
into
nop
add
and
adc
pop
inc
enter
jecxz
jg
jmp
cmp
or
mov
nop
bound
adc
add
mov
fisttpl
sti
sbb
and
movsb
arpl
out
and
std
jno
push
adc
dec
cltd
cmp
mov
xchg
xor
testb
jae
pop
xor
xor
mov
in
popa
mov
loop
xchg
enter
and
stc
shll
fdivr
sbb
js
mov
jge
sarb
scas
lods
mov
pushf
stos
in
xlat
mov
cmc
push
mov
cmp
fistpl
mov
mov
add
std
es
dec
leave
fdivl
cmc
cmp
adc
jmp
stos
sbb
add
or
or
insl
mov
fs
ret
pop
adc
in
push
je
sub
add
sbb
sub
fidivl
mov
fstps
jecxz
xchg
arpl
repnz
pop
jae
pushf
jne
sbb
adc
inc
aaa
aam
xchg
push
js
test
test
or
dec
enter
adc
xor
sbb
dec
jns
and
adc
xor
out
or
fs
pop
or
and
dec
jnp
cmp
fcoms
out
imul
divl
orl
aam
addr16
int3
movsb
in
je
pusha
inc
xchg
mov
jns
loop
adc
jo
and
bound
pop
pop
notl
sub
xchg
mov
das
icebp
aad
mov
sahf
cmp
std
aas
jno
cmp
arpl
or
or
mov
mov
adc
cmpsl
cwtl
jb
mov
mov
cmp
stos
cmpsb
jnp
iret
shll
xchg
add
call
js
dec
fstp
ljmp
add
or
ret
sti
into
div
clc
xchg
mov
pop
cmp
push
adc
dec
int
mov
lret
iret
pop
lock
adc
pop
gs
dec
xor
cmp
xchg
pop
fwait
push
repz
adc
mov
and
sbb
pop
fbld
jb
push
in
and
mov
lret
fwait
cmp
cmp
adc
fnsave
jle
push
xor
xlat
scas
es
mov
and
jbe
jnp
imull
jle
add
test
sub
mov
sar
jl
inc
cmc
out
pop
lds
shrb
pop
je
xlat
stos
aad
lahf
imul
fnstcw
and
push
out
ficoml
out
sbb
mov
push
in
xlat
scas
aad
sar
push
adc
pusha
dec
push
arpl
dec
mov
push
adc
sbb
testl
push
push
je
pop
jne
cmp
lods
lret
jle
jb
sbb
mov
cmp
arpl
loop
inc
xchg
mov
mov
icebp
push
mov
jl
mov
pop
push
jnp
adc
call
sahf
sbbb
out
iret
fs
jno
in
out
pop
jae
repz
std
fstpt
dec
push
jno
in
fnstenv
sub
aas
jle
dec
sarl
ret
fwait
int3
std
xor
push
xor
push
in
fnstenv
dec
mov
mov
std
ljmp
vorps
scas
pop
mov
mov
lods
pushf
mov
rclb
jge
cwtl
loope
or
xlat
xchg
sub
mov
mov
mov
shlb
jl
xchg
jg
xor
mov
push
in
xlat
add
dec
push
dec
data16
sub
int3
pushf
mov
dec
jle
mov
stc
icebp
dec
pand
dec
pushf
cmp
mov
and
add
add
mov
outsl
push
inc
sbb
xchg
sub
mov
cli
cmc
ljmp
lret
cmp
sarl
push
xor
push
out
cmp
mov
loope
ljmp
xchg
outsw
mov
dec
mov
pop
xor
mov
out
mov
and
ljmp
adc
leave
mov
sub
pop
adc
addr16
cs
pop
sub
pop
mov
jae
push
mov
pop
fisubl
add
jo
std
pop
ljmp
imul
or
cmp
inc
push
fs
int3
call
mov
jbe
dec
push
pop
stos
or
cmpsb
aad
into
mov
fldenv
aad
decb
out
mov
xchg
push
fists
cmpsl
notb
jns
add
mov
cmp
xlat
mov
int
xor
rcl
xchg
sub
in
fwait
cmp
push
or
ds
sbb
push
dec
data16
sub
xchg
dec
jecxz
jg
pop
push
mov
clc
dec
pop
nop
fwait
fwait
mov
scas
shrb
jg
push
sbb
push
dec
xchg
jne
xor
cmp
sbb
adc
xor
out
jl
div
out
shl
cld
ret
dec
xchg
xor
insb
jmp
in
cli
sbb
sub
dec
and
fimull
test
push
jae
and
adc
sbb
pop
adc
addb
and
ret
lret
jl
jbe
nop
shll
fisubl
movsl
stos
mov
mov
inc
and
add
syscall
xor
loop
sbb
pop
ja
outsb
ret
test
sub
call
mov
and
sbbl
cmp
mov
das
int
or
cmp
ret
dec
inc
mov
and
shr
iret
mov
stos
fdivrl
cmp
daa
lock
dec
es
ret
pop
adc
mov
xor
bound
subb
mov
cli
push
jg
stc
js
out
cmp
xchg
mov
das
fidivrs
xchg
sbb
mov
leave
stc
repz
nop
mov
xchg
into
sub
lods
push
cmp
sub
pop
cmpsl
mov
sar
cli
cld
bound
jge,pt
mov
cli
mov
pop
into
in
lods
mov
mov
out
cmp
inc
sub
push
dec
sahf
jge,pt
aaa
fwait
aad
sbb
pop
adc
clc
jge
gs
arpl
cmp
jns
xchg
in
adcb
sub
scas
pop
mov
mull
aas
jle
divb
xor
idivl
xor
daa
sbb
mov
mov
rorb
daa
ss
mul
pop
dec
mov
das
adc
pop
add
dec
lahf
aas
jp
mov
fidivrl
gs
inc
add
mov
adc
sbb
out
test
scas
inc
pop
jp
std
stc
repz
jp
jge
je
cmp
popf
popf
lock
fdivs
mov
dec
jns
inc
mov
push
je
jb
mov
ss
subl
and
inc
push
sbb
or
out
lret
outsl
cmp
daa
mov
and
cmpsb
adc
xor
dec
adc
mov
jle
icebp
xor
jl
sbb
sbb
jp
test
int
inc
xlat
out
pop
xor
andl
in
fidivs
xor
sub
popf
cmp
insb
or
test
lods
scas
mov
jnp
jb
jmp
mov
pop
hlt
aam
movsl
jnp
mov
test
ja
cmp
ret
xchg
sbb
mov
mov
add
imul
push
cmc
ljmp
lods
push
jne
cmp
shrb
push
mov
and
and
std
push
repnz
cmp
mov
sub
movsl
mov
and
push
int3
mov
or
xchg
subl
stos
jnp
lds
loop
push
mov
cmc
jg
jns
sub
rcl
xchg
decl
xchg
test
stos
mov
les
jbe
cld
rcll
sbb
pop
stos
and
or
mov
pop
stc
add
movsb
and
daa
inc
ds
movsl
lcall
mov
mov
movsb
add
test
imul
xchg
dec
bound
stos
or
xchg
rcrl
dec
decl
xchg
mov
mov
push
pop
add
pop
int3
pop
out
adc
addb
jae
lock
fs
inc
inc
dec
in
lods
mov
sbb
cmpsb
lods
mov
fcmovnu
int
stos
sti
insb
shrl
leave
jge
pop
cmp
add
add
mov
je
pop
arpl
dec
test
xor
stc
das
or
inc
dec
xchg
in
mov
test
pushf
add
adc
lcall
gs
add
adc
add
or
insb
stos
push
xor
out
sbb
mov
lcall
or
ret
mov
lea
push
dec
and
sub
divb
lock
adc
in
push
adc
mov
cmp
gs
mov
inc
pushf
lea
xchg
sub
ret
and
mov
and
add
rorl
jp
dec
aas
dec
mov
xchg
or
jno
jmp
cmp
lods
dec
pop
addr16
mov
pop
js
mov
xor
ljmp
js
jl
ds
add
ss
jns
sub
sub
sub
out
out
fwait
movsb
mov
dec
fildll
inc
cltd
cmp
mov
popa
jb
pop
cmpsl
xor
xchg
ss
and
mov
dec
mov
cmp
xor
xlat
icebp
add
and
add
repz
stos
movsl
insb
mov
notb
push
lcall
lods
dec
and
sub
mov
push
mov
pop
adc
pop
out
jl
stc
stos
scas
repz
cmp
pop
push
mov
push
xchg
ret
xlat
adc
idivb
jbe
movsl
mov
fwait
rol
arpl
xlat
add
ds
sub
xchg
cld
insl
sti
popf
divb
inc
ljmp
sbb
stc
and
mov
and
adc
lods
ljmp
insb
movsb
inc
mov
fwait
or
push
adc
jecxz
sbb
addb
fs
adc
dec
nop
mov
inc
enter
shlb
cld
ljmp
and
pop
xchg
daa
dec
ds
enter
outsb
xchg
cmp
and
cmp
mov
loope
fwait
ss
enter
ret
xor
jl
mov
adc
aaa
or
xor
fs
enter
ret
and
mov
pop
ja
rcrb
mov
pop
adc
sbb
out
mov
popf
push
loope
iret
shlb
aad
std
fildll
pop
adc
push
inc
xchg
sbb
cmp
jae
ret
dec
into
hlt
insl
iret
mov
out
dec
mov
enter
test
mov
arpl
enter
mov
adc
adc
adc
pop
or
das
lods
rorb
out
call
or
mov
mov
and
pop
adc
jno
pop
adc
adc
adc
adc
inc
mov
ret
fucom
cs
or
scas
add
rclb
adc
and
pop
adc
pop
insb
adc
adc
sub
sub
pop
adc
aas
push
and
pop
adc
adc
je
cmp
aas
cmp
mov
pop
adc
sbb
or
mov
std
jbe
pusha
push
adc
andb
hlt
mov
mov
pop
adc
into
jle
or
adc
xchg
loop
sub
popa
jne
movsl
mov
pop
adc
or
dec
roll
mov
data16
mov
pop
mov
pop
adc
aad
and
adc
adc
punpckhbw
mov
jl
inc
out
push
hlt
lahf
out
inc
test
popf
dec
in
daa
pop
andb
cmp
mov
fcoml
dec
jg
pop
mov
xor
lahf
and
pop
adc
call
das
nop
lret
std
sub
inc
cmpsb
loope
adc
daa
xchg
pop
aad
and
pop
adc
imul
dec
pop
and
mov
mov
cwtl
mov
ret
mov
ret
repnz
aas
mov
pop
adc
pop
stos
daa
inc
xor
adc
push
rorb
sbb
mov
mov
dec
je
push
push
sti
loope
mov
cwtl
xor
in
inc
rolb
faddl
loopne
int
outsl
xchg
xor
xchg
mov
insl
sbbl
sarb
cld
pushf
sbb
orl
push
and
push
and
pop
jg
pop
outsl
add
mov
pop
adc
cwtl
shr
fcoml
stos
int3
ret
sbb
cmp
cmp
push
or
int3
push
scas
jg
imul
xor
movsl
fsubp
inc
aam
cmp
shll
pop
leave
stc
loope
sbb
or
add
in
cwtl
jbe
nop
jp
outsb
pop
cld
imulb
mov
adc
jg
push
cmp
mov
test
arpl
lods
scas
ds
loop
lods
out
imul
xchg
mov
xchg
popf
push
cmp
mov
arpl
jb
xlat
ss
jp
in
cs
loope
out
fidivl
cmc
jl
ret
pop
adc
mov
ret
xchg
scas
ret
inc
jne
ficomps
dec
inc
push
inc
adc
adc
pusha
test
xor
in
or
jp
mov
jne
dec
adc
mov
aaa
mov
lcall
adc
loopne
stos
mov
ret
fmulp
imul
xor
rcll
jne
mov
mov
hlt
out
fnstsw
mov
aam
ret
int3
or
outsb
cli
enter
hlt
mov
aam
pop
mov
int3
ret
pop
inc
push
jle
fcomip
test
cmpsl
shr
out
or
cld
sbb
jbe
ret
in
cld
enter
mov
nop
shll
mov
and
pop
adc
jg
sub
jno
cli
jle
in
cmp
les
jno
lret
pop
adc
push
inc
pop
mov
adc
adc
lcall
jae
repz
popa
mov
mov
adc
adc
xor
clc
mov
dec
imul
call
cmp
or
adc
adc
popf
xchg
mov
adc
adc
pop
fidivs
mov
orb
rolb
addr16
or
xchg
mov
adc
adc
push
pop
into
into
pop
adc
adc
adc
adc
adc
adc
aad
pop
sti
pusha
adc
adc
adc
adc
repz
loopne
lds
or
push
sbb
lock
xchg
add
int
adc
adc
mov
xchg
mov
sub
push
adc
fwait
int
loopne
cmpsl
in
fsubrp
mov
out
outsb
mov
leave
loopne
mov
fwait
or
adc
mov
enter
sub
mov
inc
xor
mov
or
cld
dec
leave
jnp
jns
mov
push
lods
lahf
mov
push
push
pop
xorps
jne
pop
inc
lods
cmpsb
icebp
les
int3
shlb
mov
adc
add
pop
adc
rorl
pop
mov
ret
mov
lods
aas
mov
xor
lret
add
and
adc
adc
xchg
xchg
mov
xorl
stos
or
mov
test
jmp
push
dec
js
cmp
push
mov
outsl
inc
xorb
xor
push
adc
mov
fidivrl
pop
lds
or
ss
lcall
xchg
nop
mov
xchg
fwait
cwtl
push
or
mov
sti
mov
mov
stos
popf
push
cmp
inc
std
loopne
aad
test
add
les
cld
pushf
sbb
sub
inc
jl
sbb
shr
inc
push
fsubl
movsb
scas
mov
test
pop
and
ss
adc
daa
movsl
aas
pop
out
cmp
insb
movsl
je
dec
pop
hlt
pop
ret
pop
cmp
ljmp
lcall
rclb
or
insb
std
mov
xchg
cli
and
add
inc
aas
mov
fisttps
mov
in
inc
sbb
in
jae
rcr
idivl
sti
cmp
in
and
adc
lods
dec
stos
addr16
les
mov
xor
mov
and
sbb
cmp
iret
dec
mov
mov
popa
xchg
test
mov
or
addr16
cmpsl
mov
ret
cli
stc
push
andb
outsl
sbb
inc
or
sub
dec
jnp
call
push
cmc
cmp
xchg
jle
push
cli
push
decl
mov
mov
ds
popf
ljmp
iret
je
idivb
sub
sub
fadds
push
lret
sbb
or
jb
sbb
repz
outsb
push
dec
mov
fldt
icebp
sub
fcmovb
adc
stos
or
aas
push
js
lods
pop
in
dec
inc
mov
loop
insb
ja
fwait
fwait
ret
iret
fimuls
cmp
sbb
test
dec
rol
pop
adc
pop
adc
scas
push
add
push
or
and
xchg
mov
cltd
mov
in
push
hlt
push
pusha
dec
jp
leave
sbb
pusha
rcll
je
in
sbb
pushf
test
adc
loop
mov
mov
daa
xchg
jno
or
movsl
pusha
mov
rep
xchg
pushl
mov
and
scas
sbb
mov
pop
adc
xlat
jecxz
jge
xor
adc
cld
mov
stos
movsl
aad
adc
das
mov
mov
mov
gs
add
push
icebp
jno
rcl
std
add
jg
cli
lods
xorl
js
stos
test
inc
pop
dec
data16
shl
inc
fstpl
into
and
sub
aaa
leave
fstpl
xor
sub
stos
xchg
adc
out
jle
iret
rcrl
jbe
sti
sub
add
or
add
pop
and
mov
add
push
aam
jmp
xor
incb
mov
mov
mov
jge
add
sahf
in
mov
or
push
inc
xchg
dec
stos
into
mov
cmpsb
inc
xchg
dec
mov
inc
cmc
push
adc
xchg
fcoms
mov
subb
mov
pop
adc
pop
adc
mov
mov
ljmp
mov
in
cmp
ret
pop
adc
mov
jmp
push
insl
imul
inc
xchg
pusha
idivb
aaa
fldl
pop
fwait
jnp
cmp
fldt
or
jo
ds
pop
scas
dec
adc
sub
adc
rcl
inc
incb
push
pop
mov
inc
or
pop
loope
lods
jo
sbb
cmp
sub
rcll
aas
push
inc
cmp
shrb
push
adc
push
fadd
jp
cmp
arpl
cmp
rolb
mov
dec
dec
inc
es
loope
arpl
outsl
stc
jbe
lods
cmpsl
les
test
in
xor
imul
aam
outsl
in
mov
or
push
sahf
test
cmp
jge
das
push
xor
aad
sarl
pop
dec
call
push
iret
push
ret
pop
adc
sbb
push
adc
data16
subb
push
fsubrs
int
out
popa
int3
inc
mov
shlb
cmpsl
mov
and
test
push
ds
ret
loop
mov
inc
fnstenv
mov
scas
int
cmp
lds
cs
addb
lahf
jp
or
mov
aas
cmpsb
sarb
dec
rorl
rcrl
xor
dec
inc
xchg
pop
ja
lahf
xchg
jp
sbb
mov
mov
jb
dec
div
sub
pop
inc
loop
push
out
cmp
jg
mov
repnz
ja
pop
lds
imul
xchg
cmpsb
int
add
and
aaa
loope
mov
pusha
shll
pusha
daa
and
mov
mov
mov
dec
push
loop
stos
mov
mov
sub
scas
outsb
jnp
imul
pop
mov
into
das
cmp
js
lret
lods
sarl
aaa
xchg
shlb
mov
test
mov
lcall
xchg
aas
add
jb
shld
sbbb
pop
adc
call
incb
xchg
incl
dec
out
aaa
dec
ljmp
inc
ljmp
push
xor
sub
xlat
dec
movsl
add
ficompl
adc
jbe
cmpsl
test
or
mov
js
ret
mov
inc
sub
jmp
fidivl
orl
fwait
int
xor
xchg
gs
mov
inc
or
jge
cmc
mov
jge
idivl
xchg
jnp
scas
test
adc
cwtl
inc
sub
pop
pop
and
xchg
sbb
push
std
sub
insl
xor
adc
sub
jmp
ja,pn
sti
sbb
int
fnstsw
add
iret
mov
pushf
mov
pushf
jp
ja
jg
sbb
insb
sub
pop
test
push
sub
sbb
push
xor
sub
mov
scas
sub
pop
in
xchg
and
fidivl
decb
xchg
fstl
xlat
push
sub
testb
xchg
jge
das
data16
mov
mov
and
leave
popa
lods
cmpsb
cmp
mull
das
mov
lret
jl
ljmp
push
adc
cmp
adc
xor
dec
pop
pop
out
in
push
subb
das
test
fidivrs
mov
and
jbe
sbb
shrl
jmp
xchg
addl
cld
jb
cwtl
jno
push
mov
adc
and
xchg
dec
icebp
push
adc
mov
mov
loop
cli
mov
int
push
cli
pop
cmp
adc
shl
call
adc
jo
mov
icebp
push
adc
adc
cmc
mov
mov
push
adc
push
adc
mov
fimull
jno
adc
push
cmp
or
int3
out
and
mov
test
push
mov
jo
pop
fidivs
ficoml
xchg
lret
xchg
fiadds
mov
pop
inc
ret
int3
cmpsl
cmp
sti
lahf
push
mov
mov
dec
mov
cmpsb
sbb
mov
sub
fs
cld
push
and
push
pop
hlt
pop
imul
je
xchg
dec
cmp
int
pop
xorl
mov
push
shll
les
divb
sbb
mov
xchg
cmp
outsb
in
cmc
les
test
ret
push
or
or
gs
jnp
scas
jbe
pop
mov
pop
and
bound
xchg
fcoml
in
add
or
dec
hlt
pop
lods
in
dec
push
mov
and
iret
lods
in
les
mov
mov
jo
icebp
lods
test
xchg
dec
je
push
arpl
mov
daa
xchg
jecxz
add
sahf
fwait
xchg
int3
enter
fdivr
adc
stos
sub
inc
mov
shlb
xor
lret
adcb
ret
adc
rclb
sbb
in
dec
or
adc
outsl
sbbb
pop
add
pop
fwait
push
jo
fnstcw
pop
test
mov
pop
sarb
loop
test
add
pusha
push
adc
dec
shl
lret
jns
addr16
and
xor
push
js
outsb
outsb
out
fidivrs
int
andb
xchg
cli
push
push
js
inc
movsb
stc
jb
jns
fnstsw
add
jle
aad
adc
sarb
ja
in
add
addr16
push
sbb
in
test
fidivl
dec
lahf
aas
or
push
adc
cmp
bound
sbb
pusha
push
adc
fisubrl
jae
mov
addb
divl
jbe
xchg
lahf
pop
std
psubw
push
addr16
xchg
cmpsl
ja
dec
jp
cmp
std
daa
arpl
sarl
inc
test
pop
jp
and
and
iret
lahf
popa
xchg
js
adc
cmp
je
pushf
loopne
xor
adc
out
rolb
call
xchg
push
jns
adc
and
add
or
cmp
stos
mov
cmp
push
jns
xorl
scas
pop
ds
or
push
mov
lea
orl
or
pop
jle
bound
fwait
jl
dec
mov
lahf
xlat
adc
out
lahf
mov
nop
inc
mov
fildll
or
xchg
out
xchg
fwait
je
pop
sub
push
repz
rolb
je
in
mov
pop
jnp
and
inc
mov
std
sub
aam
fwait
lret
jmp
mov
jns
ljmp
dec
je
insb
lcall
loop
icebp
call
movsl
mov
push
lock
fucomip
xor
add
push
adc
cmp
pusha
push
adc
cmp
mov
jg
rclb
add
or
arpl
push
jns
jmp
sub
mov
pusha
or
repnz
sbb
push
mov
cmp
nop
icebp
push
adc
mov
push
mov
adc
jno
aad
test
push
or
jb
cwtl
jge
add
mov
aas
sub
mov
cmp
pop
inc
sbb
sub
and
into
ss
insb
out
mov
lock
cmpsb
in
sbb
lods
xor
jge
dec
inc
sbb
and
dec
xor
push
enter
loope
les
fcomps
int
mov
jmp
fs
adc
popf
pop
in
mov
cwtl
adc
stos
pop
aam
ss
lret
mov
push
in
pusha
jecxz
mov
out
fists
sbb
sub
scas
rcrb
hlt
outsl
mov
adc
adc
sbb
inc
jno
and
xchg
dec
and
push
sti
sbb
dec
jl
sub
dec
imul
mov
test
idiv
mov
ja
sbb
mov
aas
cmp
stc
das
lea
xchg
dec
sbb
repz
adc
and
xlat
lea
jmp
sbb
pop
or
jge
dec
into
test
mov
mov
inc
cmp
scas
mov
ror
xor
ret
xor
xchg
jno
push
jnp
fisubrs
mov
inc
lods
mov
adc
xchg
inc
dec
shrl
cld
mov
sub
daa
inc
test
test
cld
push
xchg
inc
lods
divb
stos
push
push
lods
mov
nop
repz
in
mov
test
in
or
andl
cmp
jb
mov
notl
sub
movsb
mov
pop
imul
mov
mov
popa
adc
sub
inc
mov
sub
push
mov
jae
xlat
cmp
and
stos
mov
mov
adc
adc
cli
cmc
loope
mov
jb
incb
lds
mov
sub
or
jne
pop
into
ja
iret
add
mov
out
fsubs
sub
ret
subb
adc
push
out
lahf
aas
fistpll
adc
inc
cmp
push
jns
sti
pop
dec
jo
subl
xchg
sbb
jb
gs
fnstsw
adc
inc
mov
insb
jle
jl,pt
or
js
jg
jle
js
loop
in
popf
jmp
push
mov
inc
cmp
push
inc
adc
scas
sbb
mov
jl
or
xor
jbe
sbb
adc
fisttps
out
nop
aas
jle
cmp
mov
and
jp
jl
or
enter
fistps
lahf
insb
fcoms
jl,pt
or
jp
leave
je
idiv
icebp
insl
sbb
mov
jl
or
inc
scas
and
loop
inc
pop
loope
nop
fwait
mov
idivl
aad
push
mov
outsl
xchg
dec
fwait
and
mov
xor
pop
popf
out
xor
negb
push
imull
into
data16
jg
clc
jns
jmp
loopne
mov
aam
mov
sbb
popf
nop
mov
jp
mov
jo
adc
mov
xchg
push
pop
out
jmp
dec
push
or
mov
jl
incb
test
ss
mov
add
ljmp
cmp
lock
loopne
and
jp
sub
outsl
pop
cmp
sbb
and
stc
pminsw
mov
or
out
out
jge
and
dec
dec
scas
leave
fidivl
push
inc
and
arpl
in
xchg
shlb
in
dec
inc
cltd
fdivrl
push
add
cmp
dec
and
sbb
mov
mov
or
fcoml
lea
mov
pop
fsts
ret
rcrb
fisttpll
js
pop
mov
xor
pop
lcall
lock
pop
popa
les
mov
adc
pop
xchg
jno
sbb
out
repnz
inc
out
sub
pop
jge
test
mov
call
shll
pop
dec
cmp
sbb
mov
add
or
and
fs
addl
mov
adc
cmp
into
push
dec
ljmp
dec
scas
mov
and
sbb
imul
test
dec
imul
stc
dec
js
or
push
inc
movsl
and
imul
add
int
sbb
into
pop
pshufw
les
or
push
das
push
mov
repz
mov
je
jge
sbb
xchg
jl
jg
test
icebp
lods
addr16
mov
push
or
inc
sub
jecxz
push
add
or
leave
pop
jo
daa
negl
negb
cli
xlat
fnstsw
ss
in
loop
xchg
xchg
pop
scas
mov
xchg
scas
mov
jg
std
xchg
aaa
and
xor
pusha
push
adc
xor
pusha
pop
notb
dec
mov
cmpsb
or
jno
lahf
pop
sub
jl
insb
mov
test
mov
dec
fsubl
cmp
aas
fs
pop
push
adc
mov
mov
lret
mov
mov
fistpl
adc
fsubrs
test
stc
or
scas
cmp
in
test
loope
fisubrl
cmp
jae
or
xor
inc
insl
popa
fsts
rorl
outsl
sbb
mov
pop
mov
xchg
fistl
insl
mov
jae
xchg
mov
test
aaa
and
test
shrl
mov
shlb
adc
ss
rorl
andb
sbb
or
jmp
idiv
add
lds
cwtl
iret
je
les
sub
fisttpl
jnp
ror
mov
xchg
in
mov
inc
xlat
jp
adc
insb
and
dec
lahf
mov
sbb
jmp
mov
testl
es
je
xchg
rorl
scas
cmp
mov
jle
lcall
mov
xor
adc
push
jns
sub
in
aas
add
inc
divl
inc
xchg
pusha
shl
call
shr
or
fsubl
ss
pop
dec
add
or
mov
jg
in
push
pop
lcall
incb
fildl
out
xchg
fwait
out
mov
dec
neg
dec
adc
mov
mov
or
or
sub
ds
fidivrs
pusha
sarb
ja
cmc
add
insl
std
mov
xchg
add
mov
leave
sbb
je
cmc
mov
xchg
aas
jl
xor
adc
jp
add
adc
dec
sbb
test
cmc
mov
in
push
vpaddq
lret
inc
outsl
fisttpl
pushl
ss
sti
sub
test
iret
jae
movsl
lea
and
pusha
push
adc
mov
dec
jo
loopne
pusha
push
adc
jae
cmp
ret
xor
dec
mov
fcoms
or
popa
repnz
add
or
xor
lods
jg
aaa
inc
and
adc
hlt
and
loopne
ds
adc
inc
mov
push
xchg
sar
call
in
dec
mov
add
or
daa
iret
into
das
sbbb
imul
jle
in
pop
mov
xchg
imul
cltd
mov
inc
mov
xor
pop
push
lods
xchg
lahf
fxam
popf
adc
mov
lods
xor
jge
inc
and
sahf
out
push
inc
mov
mov
push
test
sub
fmuls
and
mov
repnz
or
or
int
jno
sbb
xchg
push
dec
sub
push
scas
jle
adc
arpl
mov
cmp
js
rorb
or
push
mov
mov
add
fstl
daa
adc
ljmp
pop
lahf
push
mov
testb
add
subb
pop
out
jge
sbb
mov
mov
push
outsl
je
xchg
push
fistl
leave
add
lret
jbe
leave
adc
scas
pushf
mov
xchg
lods
push
jo
out
rclb
lret
notb
cld
fs
cmp
repz
je
or
mov
outsb
and
lock
xchg
arpl
and
loopne
orl
mov
fcoms
imul
add
xchg
push
fsubs
push
jno
mov
insb
ret
bound
push
add
sub
daa
stos
mov
jp
ret
add
fstpl
xchg
cli
mov
push
ret
pop
aaa
es
sbb
std
out
mov
test
std
lcall
test
push
aas
mov
fwait
loope
das
jg
mov
mov
fcoms
push
push
xchg
mov
mov
movsl
lds
mov
jp
adc
pusha
sbb
mov
push
add
pop
mov
dec
jns
cmp
cmc
les
cmc
or
jns
insb
pop
xor
pop
cmpsl
iret
jns
aas
jae
popa
out
lahf
pop
inc
mov
loope
cmp
xlat
push
mov
loop
push
mov
sbb
lahf
out
stc
add
loopne
js
mov
push
mov
testb
sbb
sub
out
stc
add
loopne
jnp
xchg
sub
in
sbb
add
mov
ds
stc
repz
lret
enter
mov
sub
jns
cmp
lahf
enter
pop
inc
loope
add
sub
pop
mov
ss
sbb
add
adc
das
lcall
inc
popf
jbe
sarl
jmp
or
dec
push
ja
sti
sbb
jp
and
pop
ljmp
add
mov
jecxz
sbb
or
lret
int3
adc
xor
ret
outsb
xchg
jle
jge
std
mov
dec
in
sub
icebp
or
mov
mov
cmpsl
repz
mov
fwait
ss
jl
popa
mov
xor
sbb
repnz
inc
stos
adc
lahf
ret
iret
adc
cmpl
xor
icebp
push
adc
mov
jb
lock
movsl
ret
sahf
jg,pt
cmp
sbb
adc
sti
add
or
xor
mov
pusha
cmp
adc
popf
dec
adc
popa
clc
cwtl
or
test
dec
mov
iret
int3
jno
mov
bound
adc
mov
int
andb
aas
cmp
xor
arpl
ret
lea
int3
lea
push
ja
outsb
pushf
out
adc
les
or
insb
mov
mov
push
or
dec
mov
jmp
push
into
fnsave
arpl
ljmp
clc
repz
sbb
leave
cli
inc
fcomps
popf
xchg
fistl
inc
jb
dec
clc
subb
ja
jmp
hlt
inc
sub
push
or
stc
das
call
cmp
adc
xor
test
sub
cld
leave
or
sub
push
bnd
data16
pop
add
or
out
mov
mov
les
push
test
jle
fimuls
rcll
push
pusha
push
adc
ret
aad
addr16
adc
lods
pop
inc
sbb
add
xchg
xchg
int3
sbb
jae
sub
jp
les
or
fnsave
mov
loopw
imul
call
out
test
sbb
das
dec
push
push
test
ds
push
push
push
inc
repz
push
or
and
and
or
adc
pop
mov
or
jle
push
inc
lret
xor
mov
pop
push
and
mov
ret
and
mov
push
adc
orb
ljmp
jo
icebp
lods
bound
add
or
popf
addr16
push
test
test
lds
cli
push
push
test
adc
aad
outsb
mov
add
in
mov
fistps
xlat
adc
fs
mov
scas
cmpsb
adc
push
add
or
int3
dec
test
adc
inc
jge
and
xchg
xchg
sub
addr16
and
cmp
shl
jecxz
sbb
or
or
pop
mov
mov
fstpt
pop
pusha
push
adc
lods
xor
repnz
pusha
push
adc
jp
cmp
pop
das
jg
sbb
inc
xor
push
push
sbb
cmovl
addr16
and
shl
mov
mov
stos
cmp
stos
frstor
in
pop
mov
cmp
push
jbe
loop
rcrl
mov
insl
inc
add
adc
adc
insl
mov
push
jl
sub
push
or
mov
jle
lcall
pop
push
popa
jne
shll
inc
iret
shrb
push
adc
mov
mov
mov
xchg
dec
fwait
dec
mov
push
sbb
jp
pop
add
or
inc
ret
movsb
test
loopne
push
adc
movsb
adc
jne
sub
mov
pop
adc
sbb
sahf
or
push
call
leave
jo
cmp
mov
or
in
cli
xlat
std
mov
or
mov
xchg
cs
clc
popl
sub
push
adc
jl
ss
loopne
jnp
adc
sub
pop
adc
pop
ljmp
mov
jl
jg
ja
sbb
sar
adc
outsl
popf
cmp
out
add
push
adc
push
pusha
shl
icebp
cld
dec
mov
jb
test
xor
sub
and
or
xlat
out
pusha
sbb
adc
mov
jns
hlt
mov
sbbb
dec
sbb
adc
insb
insb
fcoms
mov
jl
xor
hlt
mov
mov
popf
scas
pop
mov
dec
adc
insb
push
scas
cmc
aas
sub
mov
jo
or
sub
adc
pushf
bound
adc
fadd
int
adc
adc
in
add
lea
popf
mov
adcl
dec
mov
sbb
idivb
xchg
sub
push
nop
pop
mov
adc
mov
rol
repnz
adc
adc
popf
xor
adc
sbb
imul
pop
mov
jmp
outsl
subb
adc
int
xor
adc
sarb
mov
and
std
sahf
pop
stc
into
popf
adc
rcll
movsl
cwtl
icebp
mov
jne
sbb
adc
fldt
data16
mov
jl
or
pop
and
cld
add
jl
or
adc
mov
aaa
mov
cld
xor
mov
les
cmpsb
fcomi
xor
or
cmc
mov
xor
subl
adc
push
inc
hlt
push
outsb
ja
push
or
notb
mov
daa
cs
dec
mov
and
sbb
adc
aam
cs
js
or
xor
mov
sahf
bound
mov
insl
push
scas
int
test
adc
push
lds
call
aam
lahf
test
mov
push
xchg
pop
aam
imul
mov
call
sub
aaa
and
push
cmp
les
push
or
daa
out
fbstp
push
pop
xchg
lods
jp
push
mov
jmp
repz
or
adc
adc
sub
mov
add
stc
enter
sub
pusha
xlat
push
jns
jg
cs
adc
adc
arpl
push
push
push
fldcw
cmpl
jnp
push
lea
sub
xchg
mov
push
out
fsubr
adc
or
push
cltd
shr
add
or
fst
and
cmpsb
fbstp
mov
stos
mov
incl
mov
dec
mov
ljmp
lret
lds
in
sbb
cmp
ret
sbb
push
or
push
mov
sahf
adc
add
or
ret
adc
stc
xor
and
adc
pop
aad
xchg
aaa
push
out
pop
arpl
adcl
pusha
push
iret
mov
inc
jge
lods
push
xchg
outsl
sahf
jge
icebp
in
loope
daa
out
dec
push
mov
push
or
xchg
cli
jne
daa
xchg
dec
mov
push
jge
fisubl
cmpsb
int
ret
movsl
adc
or
or
jp
jl
pop
pop
push
cs
aad
testb
or
jmp
push
xor
add
mov
push
adc
pop
out
lahf
xor
push
adc
loope
mov
fsubrs
mov
sti
cmp
ja
iret
lahf
ds
lock
push
jg
mov
xchg
add
stos
addr16
aas
jle
int
add
or
clc
or
jne
pop
fidivrl
push
or
int3
adc
dec
lahf
add
repz
out
lahf
enter
fwait
mov
cmpsl
sub
adc
add
adc
arpl
jle
stc
lret
ljmp
aaa
xor
xchg
scas
jnp
mov
aaa
movsb
mov
jp
lods
adc
xor
and
aas
adc
jne
xlat
push
sbb
xchg
fs
xchg
stos
adc
pusha
push
adc
jns
xor
inc
pusha
mov
push
adc
mov
fwait
sbb
adc
sahf
xchg
repz
cmp
xor
push
or
jne
xchg
cmp
pop
fidivrs
cmp
sub
cltd
add
mov
push
push
adc
push
loopne
jg
in
pop
push
test
push
jp
jns
xchg
push
or
push
mov
or
pop
jl
or
xor
repnz
cltd
aaa
std
cwtl
cld
in
pop
jns
popa
xchg
dec
mov
mov
sbbl
and
aas
and
aam
test
adc
push
jp
shrl
loope
dec
popf
or
sub
lods
cmp
out
xor
adc
imul
sbb
js
dec
xor
std
add
adc
push
adc
sbb
adc
mov
push
adc
xchg
push
enter
adc
test
adc
test
pop
mov
add
adc
pushf
push
rcrl
popa
int3
inc
jno
add
lret
mov
xor
cmp
cmpsb
jo
jge
mov
cmp
pop
mov
out
sub
pop
push
lods
xchg
add
push
adc
fwait
adc
call
inc
aaa
loopne
mov
jle
out
inc
xchg
and
and
push
sub
frstor
xchg
fistl
daa
push
xlat
jmp
mov
daa
cltd
test
mov
pop
mov
test
mov
test
mov
xchg
js
push
adc
adc
shr
addb
es
jmp
jmp
mov
mov
mov
or
leave
mov
imul
xorl
xchg
or
add
jge
dec
ret
es
andl
mov
push
sbb
subl
cld
dec
fs
imulb
ficomps
add
andl
subb
js
push
adc
movsb
jg
ret
insb
xor
mov
add
loopne
push
inc
push
pop
pusha
push
pop
out
out
xor
dec
mov
add
mov
ret
adcb
cmp
call
push
loope
push
test
or
sar
cltd
dec
push
mov
ret
clc
cwtl
push
mov
mov
pushf
enter
jbe
xchg
sub
out
ret
dec
add
cmc
test
fdiv
lret
mov
push
pop
flds
pop
rolb
or
fsubrs
repz
js
stos
test
jecxz
ret
iret
cmp
cmp
cmp
arpl
jmp
outsl
fs
push
mov
je
push
adc
xor
and
jl
push
mov
dec
mov
cmp
xchg
xchg
or
adc
xor
call
out
lahf
ds
popf
mov
mov
jecxz
mov
mov
mov
daa
jle
stc
repz
sbb
jno
jp
leave
xor
adc
inc
mov
rep
dec
repnz
ds
and
xchg
aad
add
in
addr16
jg
cltd
and
addr16
aam
and
adc
mov
xor
pop
jae
xor
scas
xor
add
xchg
daa
dec
sbb
or
lahf
add
ret
xchg
aas
or
jl
fldenv
pop
xor
gs
lock
add
sbb
enter
sarb
outsb
andb
testl
pusha
or
jl
repz
add
or
int3
jle
xrelease
or
jl
out
push
out
xchg
push
enter
and
aam
ret
mov
fcmovb
dec
sub
or
mov
mov
cmc
mov
es
fists
xorl
mov
jmp
scas
aad
jg
and
outsl
into
ljmp
es
fidivl
idivb
imul
xor
lods
jmp
pop
fnstcw
hlt
loop
ljmp
mov
sub
sbb
pop
lea
insb
movsl
imul
pop
jo
sti
cmp
xlat
cmp
mov
mov
sbb
xchg
cmp
sub
pop
incl
adcb
or
jecxz
jae
imul
loop
ret
mov
std
mov
xor
jo
leave
aas
cmp
push
mov
in
mov
push
fwait
sbb
add
or
or
hlt
adcl
ljmp
cwtl
cmc
push
adc
xor
mov
jne
daa
xchg
xchg
test
mov
and
inc
cwtl
das
inc
mov
ja
subl
add
ss
and
cwtl
notb
push
lods
cmpb
adc
mov
popa
dec
push
fwait
or
dec
cmp
cld
push
push
sub
into
loopne
pop
jo
mov
sahf
mov
insb
aad
icebp
pop
mov
inc
pop
inc
test
fstpt
test
iret
xor
es
stos
repz
inc
xor
jmp
or
or
outsl
out
sahf
pop
sbbl
mov
sbb
popf
add
adc
sbb
dec
scas
add
mov
push
out
or
scas
stos
in
ret
push
ss
cli
outsl
jno
test
push
adc
into
icebp
in
or
inc
add
sbb
pop
fsubs
xchg
mov
push
add
mov
out
repnz
arpl
pop
adc
inc
inc
aam
ss
inc
jle
jns
arpl
ljmp
rcr
sbb
jnp
out
pushf
divps
popa
and
sbbl
xor
cmp
jg
jle
stc
fadds
fidivrl
negb
repnz
pushf
xchg
insl
add
cmc
sahf
lods
filds
addr16
daa
shlb
imul
xchg
pop
fcoms
jp
cmp
lock
and
mov
lods
and
xor
roll
or
adc
push
xor
iret
fadd
xchg
sub
out
adc
push
adc
out
scas
push
adc
or
inc
xlat
jmp
andb
int3
div
insb
sbb
sub
or
adc
add
or
fisubs
add
cld
imul
movsb
negl
cmp
aaa
cs
sbb
into
cs
adc
xor
out
push
push
ja
push
into
mov
pusha
stos
fisubrl
sbb
jbe
or
xchg
push
in
mov
pusha
push
adc
add
pop
sbb
jb
dec
out
fnstsw
shll
jb
dec
jae
cmpsl
aas
js
add
cmove
or
movsb
test
in
popf
inc
lahf
push
mov
xchg
dec
fwait
and
cmc
cltd
adc
fimull
je
and
xchg
cvtpi2ps
fistpl
cmp
mov
jns
xchg
sti
imul
mov
mov
adc
adc
push
adc
xchg
fcmovne
push
enter
adc
sbb
mov
arpl
shlb
mov
arpl
sub
adc
out
imul
xor
test
out
mov
out
jp
scas
in
push
xchg
aas
sub
ret
xchg
outsl
sub
hlt
out
sbb
gs
imul
test
mov
or
insb
push
inc
int3
shrb
push
adc
mov
dec
adc
not
jp
xchg
and
cmp
ss
in
lods
in
loope
sub
adc
imul
inc
mov
adc
or
lds
loop
adc
js
jae
dec
jg
scas
sbb
popa
shlb
jb
adc
dec
jmp
jp
or
hlt
add
mov
cwtl
fstpt
mov
mov
or
in
loopne
int3
in
rol
xorb
mull
cmp
mov
ljmp
mov
mov
fidivs
icebp
cld
push
sti
lea
or
adc
or
pmulhuw
adc
or
dec
sub
test
or
loope
mov
cmp
pusha
xchg
mov
cmc
enter
int
adc
adc
xorl
rcr
pop
jg
in
lret
in
ret
cmp
jmp
pusha
jne
inc
inc
dec
ficompl
and
xchg
pop
mov
inc
cmp
lea
mov
cld
push
out
jp
xchg
and
or
out
dec
cmp
mov
popf
adc
xor
and
and
add
push
push
jmp
adc
mov
out
fdivrl
or
dec
shrb
popa
stos
out
xchg
cmpb
cwtl
push
ja
push
inc
xchg
inc
stos
add
jae
lcall
xchg
or
fistpl
in
in
pushf
mov
cwtl
jb,pt
dec
data16
das
leave
pop
fdivs
cmp
stc
jge
arpl
aas
mov
outsb
inc
jle
cmpsb
out
lahf
cmc
outsl
lahf
jnp
xchg
dec
lahf
fildl
test
cmp
mov
daa
dec
mov
test
ss
int3
push
or
mov
scas
push
or
aam
fs
incl
dec
lea
pop
daa
sbb
in
and
or
lods
sahf
push
jbe
insl
sbb
and
xchg
cmp
adc
pop
aam
ss
push
adc
aas
or
fidivrs
lea
cmp
push
sub
lods
sub
shl
cmpsl
push
mov
mov
out
mov
stc
out
ffree
lods
repnz
sub
adc
test
out
roll
fisttpl
adc
adc
ret
or
or
fmull
adc
sbb
adc
or
mov
movsl
adc
dec
push
inc
mov
mov
mov
inc
xchg
shr
adc
and
lret
mov
js
jnp
mov
pop
popa
imul
xor
jle
jbe
jl
sbb
js
es
pop
adcb
movl
adc
and
gs
xor
adc
inc
lock
and
cld
imul
pop
pop
gs
psubd
fcoml
adc
lahf
aas
xchg
loop
out
pusha
push
adc
add
dec
adc
dec
adc
dec
ljmp
sbb
inc
or
pusha
adc
push
mov
popf
lret
jbe
dec
mov
js
push
adc
test
sub
stc
or
in
dec
mov
jnp
movsb
jmp
sub
mov
xor
int
push
mov
psrld
loope
ss
mov
mov
jecxz
test
mov
stos
mov
mov
bound
adc
or
je
dec
jbe
cmp
cmp
movsb
bound
adc
xchg
lods
leave
mov
repnz
mov
mov
pop
mov
fsubs
adc
sub
jb
and
adc
push
pop
enter
xor
rolb
mov
bound
adc
in
mov
testb
jge,pn
mov
xor
shl
icebp
js
inc
leave
push
les
adc
mov
xor
outsl
sbb
test
shl
clc
mov
testl
mov
push
cmp
in
fdivrs
cmp
pop
std
mov
icebp
in
pop
jnp
clc
outsb
mov
in
mov
js
out
pop
dec
lds
dec
pushf
cmp
mov
adc
je
mov
std
ja
sub
ljmp
adc
mov
sub
inc
dec
push
jp
mov
push
jnp
movsl
not
aad
repnz
cmpl
mov
std
or
mov
sub
cli
inc
mov
cmc
add
add
in
lret
cwtl
sub
sbb
mov
mov
cli
mov
or
adc
lcall
test
fs
sbb
adcl
sub
sub
pop
jb
test
push
repz
push
mov
out
imul
and
inc
or
adc
push
bnd
fs
cmp
movsb
out
xchg
add
dec
out
sahf
insb
dec
pop
mov
notb
inc
push
mov
sbb
inc
orl
jno
mov
push
adc
adc
mov
repz
out
das
dec
mov
incb
cld
adc
inc
inc
lea
hlt
sbbl
sub
push
pop
xor
mov
cmp
and
mov
lcall
test
les
adc
sub
push
scas
xchg
lods
jnp
pop
enter
pop
pop
inc
dec
jl
pusha
sbb
or
mov
lods
test
dec
hlt
lds
or
in
jb
mov
jle
insb
add
lock
or
sbb
jmp
adc
push
adc
in
imul
loope
jne
es
stos
int
mov
mov
or
cmp
xor
adc
cmp
stos
pop
testl
lock
dec
test
push
adc
mov
in
cmp
out
push
mov
cmp
int3
les
adc
xchg
adc
test
jmp
scas
movsb
cmp
push
push
in
and
and
lcall
roll
out
push
in
clc
ror
int3
les
adc
jmp
hlt
enter
lcall
and
add
sahf
lahf
std
pop
int3
daa
or
cs
les
adc
pop
xor
testb
jo
xchg
dec
ret
insb
pop
pusha
push
adc
add
pusha
push
adc
and
and
jo
in
xor
mov
loopne
daa
js
imul
ds
push
sbb
or
push
ss
repz
adc
adc
repz
ja
addl
adc
or
push
outsl
pop
leave
jns
cmp
dec
fs
xchg
iret
sbb
cmp
jno
sarb
pop
ljmp
mov
leave
xchg
fdivrs
xchg
stc
cmp
stc
or
push
aaa
fdivrs
mov
clc
cmpsb
add
ljmp
xlat
rol
push
or
or
push
adc
push
lods
sub
sarb
cmp
scas
xor
add
mov
inc
xchg
sbb
xor
in
ljmp
mov
test
pop
adc
pusha
bound
adc
sbb
decb
mov
mov
test
or
sub
loop
jg
xor
or
xchg
sbb
outsl
push
lock
fnstcw
or
daa
ja
mov
mov
andb
mov
int
or
test
mov
pusha
push
adc
outsb
mov
scas
addr16
out
loope
sahf
mov
xor
ss
scas
sub
mov
lret
sub
mov
mov
push
iret
andb
pop
roll
std
mov
adc
mov
call
pop
cwtl
xor
pop
mov
and
lods
addr16
or
adc
push
inc
data16
pusha
push
adc
pushf
mov
idiv
loop
lret
popa
xchg
sti
hlt
add
mov
aam
lahf
int3
addr16
push
adc
push
add
out
dec
out
sbb
stc
mov
fldcw
repz
adc
std
jne
mov
mov
jbe
jno
pushf
push
scas
dec
insb
cmp
pop
sbb
fdiv
cmpsl
push
js
push
adc
aam
mov
dec
mov
mov
pop
lret
dec
and
shll
fwait
sub
pop
addr16
ja
rcrl
aad
dec
fists
xchg
mov
pop
sbb
sub
flds
gs
jbe
mov
mov
xchg
aas
in
iret
shlb
negb
rolb
mov
outsb
es
jbe
cmp
std
sub
sub
inc
int
jno
cli
mov
aas
and
mov
pusha
push
adc
pop
orl
js
inc
or
dec
adc
push
cwtl
push
pop
push
jns
mov
and
push
ja
insb
adc
push
jo
rorb
cmc
mov
insl
popa
jl
dec
pushf
mov
incb
imul
jae
cs
mov
jmp
leave
mov
daa
xchg
pop
push
mov
das
push
push
inc
into
push
lahf
xchg
rolb
adc
add
mov
es
sub
nop
or
sub
cmp
mov
arpl
jmp
scas
inc
mov
rcll
mov
jnp
je
push
mov
lods
or
add
ljmp
popa
loope
icebp
adc
inc
mov
pusha
roll
or
inc
push
adc
aad
sub
stos
adc
test
adc
test
inc
lahf
mov
stc
push
adc
frstor
adc
popa
mov
movsb
adc
adc
mov
adc
add
cmp
adc
jnp
hlt
pusha
push
adc
or
mov
je
add
or
sbb
insb
jle
jl
sbb
mov
and
sub
movsb
mov
dec
xor
mov
movsl
pop
inc
jmp
popa
push
adc
pop
mov
dec
orb
sub
int3
pop
adc
icebp
pusha
adc
xorl
and
popfw
out
sub
mov
mov
xchg
testb
sbb
cmp
cmpsl
test
inc
add
test
inc
test
out
aas
and
ret
dec
jl
dec
subb
xor
rolb
mov
or
xor
fldcw
cs
int3
or
xor
mov
inc
clc
lods
iret
pushl
test
xor
fcomps
cmc
or
pushf
ja
addb
and
lds
or
insb
movsb
mov
xor
jno
xlat
mov
mov
or
movsb
push
mov
push
sar
push
cmpsb
xchg
dec
adc
rolb
iret
push
push
add
adc
push
push
inc
divb
ss
sbb
jae
add
jo
xchg
lock
mov
xchg
adc
dec
jmp
scas
rorb
stos
sbb
xor
jbe
jp
in
pop
scas
sub
mov
es
outsl
xor
popa
jae
push
cmp
lea
mov
fwait
ret
jne
pushf
mov
addr16
out
cmp
cwtl
and
lea
outsb
fnstenv
mov
dec
subb
jecxz
and
imulb
lahf
cmpsl
and
jmp
arpl
jbe
jb
lods
cltd
repz
mov
adc
sub
in
movsl
cmp
push
push
or
adc
imul
dec
or
mov
dec
mov
popf
iret
inc
inc
mov
jns
pushf
outsl
test
xchg
leave
and
adc
mov
rolb
test
mov
xor
and
jno
sahf
or
shll
push
pop
jmp
push
orl
push
mov
and
jne
push
mov
jne
sub
lds
fidivrl
cmpsl
inc
and
in
and
cmp
popf
insb
jnp
mov
pusha
das
ret
aas
mov
mov
lods
mov
lahf
xor
dec
mov
iret
aas
fcomps
addr16
outsb
addb
subb
pop
mov
and
sub
sub
or
cmp
push
inc
lret
add
outsb
addb
in
jo
xchg
dec
nop
lcall
aam
insl
out
inc
int
pop
xchg
pop
test
mov
or
lret
popa
sub
int
cli
or
inc
mov
hlt
lahf
xor
shrb
pop
push
adc
js
lods
mov
das
mov
bnd
dec
push
dec
jl
stos
das
leave
notl
imul
jl
repz
mov
movsl
fwait
push
pop
jmp
inc
pop
insl
repnz
divps
add
je
fldl
add
xchg
lahf
xchg
jmp
dec
mov
popa
jnp
dec
in
mov
test
xchg
sub
xor
push
aad
nop
cltd
mov
mov
rcrb
cld
fs
popa
adc
cmp
mov
mov
dec
stos
dec
jle
mov
insb
mov
push
ret
xor
test
add
in
pushf
popa
push
outsl
pop
insl
ret
popf
mov
xchg
jb
mov
mov
in
test
push
xor
add
hlt
jns
movsl
sub
sbb
rcrb
clc
rorb
lret
cmp
ret
adc
jno
mov
gs
mov
fstps
mov
int3
fdivrs
push
lcall
ret
or
addb
gs
lods
sbb
outsl
pop
mov
xchg
push
mov
test
and
add
push
mov
lret
pop
mov
push
or
or
rorl
pop
or
inc
mov
jmp
popa
push
or
les
inc
or
adc
leave
xor
or
mov
sti
mov
push
or
les
daa
or
adc
xor
or
mov
lret
mov
push
or
les
pop
or
adc
xor
or
mov
les
out
mov
rorb
adc
mov
mov
jo
test
pop
pop
mov
leave
jnp
popa
pusha
rolb
ja
push
add
adc
jne
xlat
inc
arpl
and
iret
jge
rolb
lahf
pop
aad
adc
or
jmp
scas
mov
push
or
es
leave
xchg
daa
cmpsl
mov
addl
lahf
ds
std
fsts
and
dec
xlat
scas
pop
push
sbb
es
shlb
daa
dec
ja
push
add
jo
jecxz
std
inc
sub
or
jne
mov
imul
mov
mov
fdivs
mov
cmp
inc
mov
outsl
sub
dec
fwait
lahf
jnp
bound
daa
movsl
adc
outsl
sti
push
mov
push
mov
or
mov
int
mov
pop
adc
and
pop
imul
shl
pop
dec
add
mov
mov
mov
mov
lock
popf
mov
pop
adc
out
stos
mov
pop
adc
stos
sbb
imul
repz
and
pop
adc
rcrl
js
aad
mov
adc
pop
mov
adc
mov
lret
sti
sub
xchg
dec
and
or
repz
loopne
or
push
insb
icebp
hlt
test
add
mov
jmp
jl
insb
adc
aad
in
enter
adc
loopne
or
add
mov
insb
adc
sub
push
cltd
sbbb
xchg
inc
fsts
bound
hlt
pushf
and
pop
adc
ljmp
dec
rclb
je
aam
adc
sbb
mov
out
in
dec
int3
shll
xor
or
add
jecxz
sub
fistpll
popa
dec
fsub
adc
mov
sbb
adc
sbb
out
mov
mov
mov
lcall
xchg
xchg
scas
jl
lock
dec
cs
or
mov
push
push
sbb
xor
lods
mov
inc
push
orb
mov
bound
test
scas
adc
je
or
mov
stc
mov
jbe
test
lahf
jns
mov
fs
push
dec
xor
fdiv
xchg
lahf
lahf
jmp
push
jecxz
dec
mov
mov
push
add
pop
adc
loop
adc
je
mov
std
and
mov
xchg
jmp
adc
and
es
mov
mov
fwait
jmp
push
or
insb
adc
or
adc
cld
bound
loopne
or
mov
insb
adc
and
pop
adc
mov
pop
adc
pop
ret
pop
adc
xchg
cld
push
in
fwait
xor
mov
popf
aas
out
dec
test
adc
pop
adc
push
add
scas
push
add
pop
shll
mov
adc
pop
adc
dec
cmp
adc
cltd
sub
std
adcb
pop
adc
pop
imul
adc
pop
add
xor
push
and
pop
adc
cmp
lcall
ljmp
lock
push
mov
je
and
repz
mov
cmpsl
push
push
nop
mov
and
popf
lock
and
pop
adc
rolb
cmp
pop
adc
fstl
and
popf
repz
and
pop
adc
test
adc
mov
movsl
cmovne
sub
test
insl
dec
inc
ret
and
or
sahf
out
jbe
sub
inc
stos
fcoml
loopne
or
push
adc
mov
insb
adc
repnz
cmc
push
pop
cli
pop
lret
cmp
xchg
and
stc
push
stc
and
jb
fdivl
mov
pop
and
push
push
shrl
pop
push
aaa
imul
fnstcw
push
lock
and
or
jno
xor
xchg
jge
adc
xorl
mov
loopne
fcomps
ja
push
add
stos
or
push
push
jb
ret
or
xchg
mov
xchg
pop
push
cmp
fadd
addr16
in
test
aas
xchg
flds
adc
mov
xchg
mov
xchg
pop
jbe
insb
fadds
cmp
cwtl
hlt
ds
clc
add
and
mov
fstl
jmp
xchg
in
leave
jp
mov
ja
les
add
fists
pop
movsl
test
jmp
arpl
jbe
jb
leave
cltd
repz
dec
mov
push
insl
sbb
in
ret
dec
dec
jno
mov
rcrb
and
xchg
jnp
pop
lods
mov
out
add
mov
push
pop
lds
xor
mov
mov
dec
mov
cmp
ds
ficoml
dec
addr16
cmpsl
cmc
ret
mov
lea
xor
mov
aam
or
aad
jle
cli
dec
daa
popa
jle
jp
sub
sti
or
cmc
dec
mov
or
sbb
xor
ret
int
jns
sti
xor
lcall
sub
fimull
pop
mov
or
xchg
mov
sbb
dec
mov
add
push
aaa
outsl
test
pop
adc
icebp
mov
adc
and
pop
adc
rcpps
pop
adc
mov
and
pop
adc
mov
and
pop
adc
jg
insb
adc
adc
test
das
nop
jns
ja
loopne
les
and
fildl
adc
aad
inc
test
cmc
int3
xchg
fwait
inc
mov
mov
cli
ret
subb
loope
push
mov
cmp
out
adc
xor
xchg
ret
cmpsb
rcrb
inc
cld
xor
and
xor
adc
adc
push
adc
js
or
or
adc
mov
cld
sarb
aad
sarb
adcl
call
adc
pop
adc
jnp
pop
ficomps
jb
mov
pop
pop
adc
pop
xchg
mov
push
mov
lret
sbb
inc
cmp
jg
adc
js
or
pusha
loop
adc
jecxz
bound
stc
in
cli
ret
rclb
cmp
pop
add
mov
in
incl
adc
dec
jge
insl
pop
inc
movsb
lea
xchg
shll
mov
das
iret
insb
lods
push
dec
jae
or
add
filds
push
xor
xor
out
sti
jp
mov
dec
xchg
into
cld
inc
adcb
imul
xor
cmpsb
daa
push
inc
in
mov
xchg
ja
mov
testb
xchg
repnz
divb
lea
pushf
daa
dec
jmp
aaa
mov
mov
mov
push
adc
jmp
sahf
xchg
lock
stc
push
adc
mov
fdivr
push
adc
push
mov
push
adc
lret
les
push
adc
lcall
movsb
pop
adc
stc
push
adc
mov
push
xlat
mov
fdivrs
mov
dec
outsb
jno
or
lahf
leave
imul
das
fldt
mov
rcrl
je
cmp
add
sbb
out
push
pop
shll
lahf
int
dec
push
fimuls
rolb
jg
jle
jge
pop
jae
cmp
sahf
aaa
jno
insb
and
sbb
adc
adc
cwtl
out
dec
inc
add
mov
cmp
pusha
cmp
rcr
mov
fwait
jno
fcmovb
xchg
imul
sbb
add
sbb
gs
ss
faddl
ss
and
stos
push
out
adc
and
mov
push
push
cmp
pop
loop
cld
test
out
repnz
or
mov
adc
imul
scas
jnp
adc
je
or
fbstp
or
js
ljmp
mov
mov
jns
stos
jle
dec
jne
fcmovbe
mov
adc
mov
xor
jne
icebp
jmp
insb
daa
nop
adc
or
pop
xchg
add
sub
shr
jb
ret
mov
or
push
movsb
lock
xchg
jns
mov
xor
jne,pn
insl
inc
js
loope
add
lcall
and
mov
daa
sbb
fcmovnb
sub
not
mov
inc
cltd
push
sarb
imul
movsb
sahf
enter
adcb
outsl
rolb
cmpsb
sbb
push
add
movsl
nop
adc
push
push
inc
xchg
jo
or
push
xchg
push
pop
ljmp
xchg
dec
test
outsb
inc
and
adc
jg
adc
push
or
cmpsw
mov
call
jns
les
mov
mov
xchg
nop
adc
add
add
mov
inc
insl
stos
mov
fbstp
aam
pop
fsubr
scas
sbb
jnp
jo
or
xchg
sub
adc
dec
lret
adc
add
adc
sub
arpl
and
lret
and
adc
jo
or
fnop
xchg
or
popf
add
mov
sbb
je
or
xor
shll
or
gs
nop
lahf
xchg
in
mov
jo
or
dec
lods
js
or
andl
loope
adc
adc
cmp
jo
sub
jmp
adc
dec
adc
xor
mov
adc
cld
add
out
or
xchg
mov
arpl
sub
adc
sbb
push
ss
addb
and
shll
or
and
or
lret
xor
dec
fs
mov
fwait
cmp
adc
and
les
mov
das
xlat
stos
mov
js
add
insb
notl
or
jg
add
cmp
inc
xchg
addb
sub
jge
xorb
adc
pop
je
or
push
jno
push
mov
or
lods
mov
adc
in
xor
roll
incb
push
inc
and
mov
rol
or
push
add
or
aas
cmc
inc
lock
adc
cmpsb
mov
fwait
int3
xchg
aaa
dec
lahf
outsl
sub
in
nop
adc
mov
iret
fdivs
or
out
mov
divb
mov
imul
dec
jno
bnd
or
sahf
in
lds
push
jne
jl
or
xchg
push
mov
mov
jae
and
mov
adc
adc
push
iret
imul
in
shlb
or
stos
xlat
mov
or
cmp
adc
adc
int
out
sbb
gs
inc
sub
mov
test
dec
add
jo
int3
push
test
cli
sbb
push
adcb
bound
adc
jo
or
jecxz
cwtl
mov
adc
adc
call
test
cli
add
aam
jle
jl
or
push
test
sub
push
js
xor
jb
in
je
or
aas
jg,pt
jl
or
aas
and
or
sahf
fisubrl
mov
gs
mov
aaa
arpl
fisttpll
ja
icebp
call
mov
jo
or
lret
mov
pop
or
negb
adc
pandn
jns
sti
adc
or
fcoms
sub
or
or
adc
mov
push
mov
add
adc
add
jmp
adc
mov
aad
adc
loop
in
adc
xchg
out
xor
or
fdivrs
adc
adc
or
adc
nop
adc
dec
mov
mov
add
fdivrs
pop
cli
lds
jb
adc
fnstcw
or
sbb
add
pusha
pusha
roll
add
pop
adc
out
mov
adc
dec
adc
or
nop
xor
nop
leave
cmp
mov
bound
ret
adc
les
aas
sahf
clc
mov
cli
mov
pop
adc
lcall
add
and
test
loope
sbb
xlat
fcmovb
in
dec
xorb
pop
std
jg
mov
xor
push
shll
fs
addr16
jo
or
cmp
cmp
sbb
jl
dec
loop
sub
jb
mov
out
mov
xor
movsl
xchg
icebp
xor
pop
mov
jecxz
bound
adc
pop
cmc
add
je
mov
push
je
or
adc
adc
dec
mov
lock
out
cmp
je
or
mov
js
or
cmpsb
jp
cmp
sbb
push
fmull
aaa
xlat
nop
push
sti
aam
pop
adc
pop
adc
dec
shrb
out
out
sub
nop
adc
add
push
xor
pop
sbb
js
or
cmc
leave
nop
adc
mov
jecxz
push
jns
dec
or
stos
pop
fs
pop
ljmp
daa
jns
or
ret
cwtl
jmp
dec
push
int
inc
pop
insl
or
pop
mov
push
xchg
pop
inc
pop
jp
insl
jle
xor
test
divb
les
daa
xchg
test
or
sub
fs
jg
ja
das
mov
imul
or
jle
bound
adc
sbb
adc
aad
or
inc
mov
rclb
jmp
jno
or
pop
bound
adc
sub
in
cmpsl
lahf
insb
push
imul
les
adc
cmp
sub
xchg
jne
lds
sarb
push
mov
pusha
dec
jno
mov
push
call
in
dec
or
cmpsb
fs
sbb
int3
pop
and
jo
cmp
sti
jle
xor
adc
pushf
inc
xor
andl
mov
jl
repnz
pop
mov
pop
enter
fcmovnb
bound
daa
dec
lahf
aas
cmc
mov
mov
jno
iret
addr16
mov
push
lods
lock
fstpl
push
shll
or
push
pop
mov
les
adc
mov
out
fistps
jbe
rclb
sbb
movsb
clc
or
je
scas
inc
xchg
mov
cmp
out
mov
pushf
int3
mov
pop
pop
adc
es
jp
sub
jne
mov
lahf
xchg
sub
mov
mov
cmc
adc
dec
jmp
std
adc
xchg
xchg
ss
xor
pop
in
jne
imul
js
icebp
cwtl
adc
cwtl
adc
dec
mov
jmp
adc
xor
aaa
insl
lods
xchg
pop
arpl
mov
or
push
dec
cmc
fsubl
arpl
xchg
adc
xchg
adc
add
jbe
xor
rcll
mov
ljmp
dec
jno
sbb
out
and
fwait
fwait
cs
and
adc
pop
dec
cld
mov
mov
test
cwtl
inc
ja
sbb
mov
or
and
xor
ss
test
leave
fiaddl
enter
mov
stos
push
int
mov
lock
jbe
mov
fistps
repnz
jo
lea
sbb
xor
jg
std
xor
push
sub
sar
mov
test
stos
mov
and
ja
mov
leave
or
push
sti
pop
sub
cli
dec
out
loop
pop
xchg
idivl
je
int
push
lock
xchg
mov
fnsave
outsl
and
lret
out
push
dec
adc
prefetchnta
aam
test
or
sub
pop
or
adc
inc
clc
pusha
push
adc
sub
jns
inc
movsb
aam
lahf
push
test
pusha
push
adc
dec
or
adc
aam
mov
out
test
or
dec
jae
cmp
pop
adc
nop
jg
sub
pop
adc
adc
fildll
adc
adc
std
mov
or
movsl
push
sbb
pop
adc
stos
xchg
add
mov
xor
pop
pop
adc
adc
adc
leave
fwait
insl
sub
cltd
mov
jmp
jmp
lahf
insb
mov
clc
mov
dec
push
ljmp
in
sbb
pop
test
xchg
sti
jp
sbb
adc
xlat
std
push
xor
xchg
stos
divb
shll
adc
imul
mov
add
std
xchg
aaa
push
lds
test
test
or
push
adc
andl
or
gs
add
outsb
ljmp
push
or
xor
mov
xor
in
mov
push
loop
sub
in
xchg
push
movhps
lret
jno
js
repz
adc
aas
stc
adc
xchg
mov
adc
mov
sub
pop
adc
adc
mov
or
xchg
subl
push
popf
sub
jnp
in
xchg
lds
stos
add
out
push
fisttps
pop
adc
sti
xchg
fisttpll
pop
repz
stos
push
mov
sbb
pop
test
or
lahf
imul
adc
cmp
test
mov
int3
adc
adc
xor
lahf
mov
rol
adc
adc
lcall
test
dec
movsl
add
fwait
fwait
ss
je
cs
ficompl
xor
fstpt
dec
shr
ficoml
sub
leave
adc
inc
sbb
or
jp
jecxz
cltd
mov
sbb
and
xor
into
in
xor
lea
out
add
xor
cmp
rcrl
cmp
cwtl
rolb
into
lahf
dec
mov
or
cltd
sahf
jge
add
in
add
sbb
ret
cs
out
int3
add
adc
xor
scas
pop
ds
jmp
jmp
sub
push
sub
je
shl
testb
test
pushf
test
and
aas
sub
ret
rclb
mov
test
adcb
mov
xchg
mov
ds
cmp
adc
jbe
in
push
out
adc
stos
cmpsb
pop
xchg
inc
mov
psubw
fnstenv
mov
mov
or
lea
cmp
cmpsl
mov
xchg
mov
xchg
arpl
mov
mov
daa
mov
push
inc
mov
xor
push
mov
in
aaa
jns
shl
rorl
xchg
out
sub
lods
jmp
mov
jne
mov
test
lcall
stc
push
cmp
and
faddl
hlt
test
and
mov
and
lds
mov
push
and
jno
sbb
lock
sti
sbb
hlt
pop
sub
xor
cmp
sub
mov
and
cmpl
and
gs
mov
outsb
dec
jns
cmp
pop
push
repnz
adc
and
fldcw
dec
mov
daa
push
clc
fiaddl
dec
cmpsl
jmp
int
xor
sub
mov
ret
fisubrl
mov
jbe
add
adc
adc
and
cwtl
in
mov
insl
popa
add
pop
add
aaa
aam
loop
sbb
lret
iret
inc
push
pop
xchg
cmpsb
fisttpll
xor
fcmovb
jns
sub
fs
push
fcmovnb
mov
or
sub
sahf
imul
js
xchg
lods
mov
loop
mov
sub
stos
mov
mov
testl
xor
bound
ljmp
fcmovnbe
xor
mov
aad
pop
mov
shlb
pusha
or
shrl
mov
jmp
and
sbb
lods
inc
nop
ficoms
movsl
cmp
or
xchg
fwait
les
push
pop
ljmp
ss
aaa
xor
js
fnstsw
out
rol
ret
repz
lret
loop
jecxz
test
dec
sub
push
xchg
test
lds
pop
mov
jmp
sbb
mov
xchg
sub
lret
inc
xchg
xchg
xchg
pop
push
fs
lds
adc
out
inc
xchg
jae
pop
f2xm1
jae
nop
ret
and
ret
pop
enter
jae
repnz
lods
pop
in
jg
cli
hlt
xor
mov
lret
sbb
inc
nop
jmp
ss
dec
jmp
stc
add
push
push
mov
or
out
adc
mov
xchg
aam
cli
aad
push
xchg
cmpsb
sti
daa
sbb
dec
dec
rep
pop
sarb
ret
cmpsl
mov
sbb
jnp
sub
mov
daa
dec
pusha
dec
jbe
mov
roll
mov
aas
push
inc
inc
test
das
mov
mov
aaa
aad
sub
adc
mov
repz
in
out
cltd
ret
fs
roll
popf
jmp
jno
sub
daa
jae
scas
and
jge
ds
lods
sub
fistl
push
jp
xor
xchg
push
inc
popl
adc
cmp
mov
sbb
in
insb
fmuls
iret
push
sbb
sbb
insl
movsb
test
pusha
cmp
aad
ja
sub
cmp
iret
shlb
sarb
dec
out
lahf
mov
adc
scas
fidivrs
imull
shll
les
or
rcrb
add
jge
outsb
scas
bound
dec
sbb
xchg
int3
outsb
lods
in
aas
mov
fcompl
xor
mov
cld
repz
push
mov
mov
leave
xchg
scas
adc
mov
adc
es
xchg
xor
push
jge
xor
mov
sbb
iret
cmp
and
xorl
inc
mov
sub
rol
test
sub
pop
divb
push
sub
outsb
xor
adc
cmp
and
shrb
add
push
nop
shlb
bound
movsl
aad
lea
jp
add
jge
pop
cltd
cmp
in
xchg
xlat
sbb
inc
cmpsl
pop
aas
jg
fs
cmp
insl
nop
data16
int3
stc
mov
mulps
sub
movsb
mov
mov
in
sbb
sar
gs
shlb
hlt
sti
int3
mov
insl
inc
dec
cs
xchg
sbb
inc
inc
mov
mov
jmp
add
scas
fcomps
adc
into
movb
push
mov
push
cmpsl
lcall
mov
dec
add
out
aaa
ret
jg
jo
rorl
mov
nop
out
mov
inc
add
add
in
popa
jbe
sub
mov
cmpsl
in
or
mov
ret
mov
cltd
cmp
cwtl
sbb
mov
int3
in
or
nop
ljmp
movl
sbb
cmc
aad
xchg
mov
in
scas
or
push
push
scas
out
push
and
or
or
pop
dec
pop
inc
data16
jo
shlb
ficoms
mov
and
ljmp
lods
test
cmpsl
popf
xor
arpl
mov
fsubrs
in
mov
push
test
movsb
lret
jge
fnstsw
mov
inc
mov
xchg
sub
inc
movsb
mov
add
movsl
js
stos
daa
xor
cltd
add
cld
idivb
dec
mov
and
lea
inc
sbb
shlb
xchg
xlat
or
mov
repz
lcall
add
push
push
cmp
into
or
xchg
mov
adc
add
data16
cli
mov
inc
call
stos
test
mov
leave
pop
into
clc
sbb
or
int3
pop
inc
push
sbb
mov
or
repz
hlt
lcall
xchg
cmp
or
adc
xorl
and
adc
jp
cmp
clc
movsb
mov
mov
push
or
loopne
lods
and
lods
cwtl
aam
ret
mov
mov
setb
mov
in
and
outsb
mov
jo
out
mov
xor
xor
insl
jb
push
push
out
xchg
add
inc
push
hlt
test
sub
mov
add
rolb
jg
mov
adc
mov
movsb
pop
mov
cmp
sub
aaa
sub
xor
std
xchg
loop
adc
jge
loop
scas
pop
push
insb
mov
leave
adc
mov
std
xchg
fsub
or
or
mov
js
repnz
out
popa
mov
test
fs
xchg
scas
cmp
ja
mov
and
xor
xlat
imul
pop
mov
dec
inc
push
pop
imul
loop
adc
outsb
nop
inc
cmc
adc
xor
and
mov
iret
pop
aad
cmp
push
fnstsw
cltd
clc
mov
in
fnstenv
out
adcl
pop
mov
jo
jmp
incb
mov
push
add
insl
imul
fstps
subl
adc
iret
lahf
mov
add
sbb
jmp
ja
test
xchg
int3
dec
push
dec
xchg
dec
out
sahf
aas
pop
cmp
fdivrs
loopne
jnp
in
cmpsl
pushf
adc
test
mov
into
pushf
cmp
fnstsw
sbb
cmc
out
ficompl
or
cmp
adc
jl
cmp
hlt
call
shrl
rcrl
data16
js
cmc
jmp
jbe
mov
jb
push
jle
push
mov
push
mov
mov
lds
jae
loopne
jne
xchg
mov
les
mov
adc
test
mov
leave
inc
adc
mov
addr16
or
fstpl
adc
xchg
bound
mov
mov
pop
mov
mov
push
shl
sbb
rcll
daa
jmp
out
mov
sbb
cwtl
loope
fsubrp
cld
mov
mov
call
repnz
mov
and
jno
mov
sti
push
int3
scas
lods
jl
sub
sbb
fnstsw
fsubs
adc
sbb
push
mov
push
pusha
push
adc
repz
stos
pop
push
les
adc
test
cld
cltd
fnstcw
mov
sub
pop
enter
test
push
xchg
fcom
sub
movsl
xchg
push
xchg
cmpsb
mov
mov
mov
lret
lods
repnz
pushf
faddl
xchg
arpl
push
push
xchg
lods
jp
xchg
mov
outsl
add
push
pop
inc
js
in
call
pop
lcall
lds
imul
in
or
adc
mov
outsb
fs
insb
adc
je
xor
popa
and
jle
ja
push
repz
dec
inc
add
pushf
repz
jle
jle
push
pop
pop
add
adc
out
and
popf
ret
bound
xchg
cmp
mov
push
jp
mov
cmp
xchg
test
fildll
mov
lcall
adc
mov
adc
lahf
je
jnp
mov
jecxz
js
or
dec
lcall
sbb
push
cmp
mov
xchg
shl
out
es
popf
nop
push
rcl
scas
xor
mov
xor
andb
fists
dec
mov
pop
adc
stos
cmp
test
inc
mov
fisubs
dec
out
adc
loopne
push
cli
andl
adc
pusha
push
adc
loop
adc
out
fstpl
mov
jp
loope
lods
cmpsb
fwait
mov
rorb
push
out
popa
push
adc
jmp
push
movsl
lods
in
mov
dec
jbe
and
popa
ret
test
aam
adc
out
adc
mov
push
cmp
sti
fs
pusha
dec
jle
mov
mov
and
push
cli
mov
xchg
push
adc
and
scas
aas
hlt
inc
dec
jp
aaa
pop
xchg
mov
mov
fidivl
test
shl
adc
inc
lods
cmpsl
push
out
mov
push
ds
xor
cli
xlat
xchg
cmp
or
dec
cli
loop
js
adc
mov
mov
ja
iret
mov
mov
clc
or
or
fiaddl
lods
mov
mov
js
push
adc
rcrb
jge
mull
inc
clc
scas
int3
lods
fnstsw
jne
and
fadd
cli
xlat
cmc
cmp
pop
dec
rol
adcb
fstpl
inc
mov
outsl
or
pop
xlat
test
adc
pusha
or
mov
push
cli
push
ljmp
xchg
test
or
push
and
inc
stos
les
and
movsl
std
xchg
les
out
mov
dec
sahf
add
mov
dec
cmpsl
add
les
push
adc
adc
jecxz
imul
in
and
jnp
add
andb
sbb
std
pop
lods
xor
or
inc
xor
stc
pop
lahf
push
ds
sub
lcall
mov
orb
cmpsl
or
outsl
addr16
mov
scas
scas
lock
test
or
fldenv
sbb
enter
adc
iret
aam
nop
rclb
stos
andb
ret
sub
pop
xor
adc
cmp
and
xor
sub
jge
cli
dec
and
bound
adc
addr16
insl
idivl
repnz
push
and
movsl
mov
or
pop
mov
mov
push
sti
dec
and
push
popf
or
and
nop
adc
pop
jne
pop
adc
pop
loop
jge
dec
push
cmp
imul
int
xlat
aad
stos
push
cmc
movsl
ss
pop
push
mov
jb
add
xor
jne
call
add
out
imul
xchg
xchg
sbb
pop
mov
push
sub
loop
cmpsb
int
roll
mov
test
lret
inc
or
pop
xchg
adc
inc
xor
imul
es
mov
bswap
outsl
sbb
mov
or
adc
out
cli
xchg
sub
aas
fadds
ffree
or
lds
adc
jge
cmp
adc
cmp
andb
add
push
ret
pop
les
cmp
adc
movsb
daa
xchg
js
pop
loope
int
outsl
xchg
push
add
fstl
push
add
cmpsb
cmpb
into
in
adc
adc
cli
out
scas
and
enter
and
popf
in
insb
loope
dec
cmp
das
jg
call
fsts
mov
inc
mov
add
fndisi(8087
sar
add
sbb
sbb
clc
mov
cmp
nop
lods
mov
pop
orb
mov
mov
cmpsl
xchg
scas
add
pop
clc
call
insb
pop
popa
mov
stos
xor
add
bound
adc
decb
fisubl
sahf
sar
or
or
stc
fcomps
leave
rorb
push
out
pusha
push
adc
mov
add
addb
test
mov
testl
push
xchg
xor
ss
pusha
push
adc
mov
inc
adc
cmp
sbb
xorl
mov
xor
and
ds
in
lods
mov
cmp
or
xchg
je
sub
out
xor
out
sbb
sub
insl
hlt
dec
fwait
inc
fildl
cmp
scas
mov
sar
out
adc
sub
lods
gs
push
jns
push
cld
sub
jo
xchg
sarb
xor
pop
in
or
push
out
lods
in
mov
clc
cmp
repz
push
jnp
jb
push
push
frstor
or
clc
xlat
jg
sbb
pop
adc
xchg
dec
data16
or
ja
xlat
into
jo
mov
or
and
sub
sbb
stc
or
dec
ret
adc
in
jns
sub
and
mov
leave
test
adc
fdivrl
pop
cmp
push
in
xor
dec
sahf
mov
xor
cmp
fwait
or
aam
mov
sti
nop
pop
fcmovu
gs
jnp
jg
jl
add
jl
jne
cmp
jl
outsb
push
ret
pop
adc
jp
out
ss
arpl
xchg
mov
jp
rcrb
clc
jg
cs
xchg
loopne
aas
and
loopne
ds
and
ret
push
jmp
push
faddl
in
popa
mov
mov
icebp
movsl
out
mov
mov
push
push
fstl
ret
inc
das
lds
and
xchg
push
ret
pop
adc
add
and
xchg
sbb
or
cld
pop
aad
cmpsl
push
cmpsl
in
aam
mov
fidivrs
mov
inc
addr16
sbb
pop
jno
shrl
in
idivl
mov
inc
lahf
je
in
push
mov
dec
cli
bound
adc
adc
loop
pushf
xchg
dec
xchg
inc
daa
lcall
xor
inc
loopne
out
cmp
inc
in
push
dec
mov
mov
or
mov
daa
dec
loop
xchg
lods
dec
insl
sub
or
out
push
es
js
sub
jns
leave
mov
in
pusha
jp
enter
inc
nop
xor
and
jp
ret
mov
mov
dec
cmp
stc
mov
inc
jne
jl
jecxz
aad
adcb
sbb
addr16
rorb
mov
fwait
ss
clc
mov
mov
mov
das
insb
xlat
jp
pop
mov
dec
add
adc
xchg
stc
das
xorb
mov
xor
fdiv
cwtl
xchg
imul
xor
dec
add
lds
xlat
cmp
pop
pop
test
xchg
fdiv
fsubs
xchg
daa
movb
xchg
andb
mov
scas
push
push
ret
bound
daa
push
cmp
test
mov
repnz
push
sti
call
cmp
mov
movsb
sti
in
cmp
mov
imul
sbb
ljmp
test
push
bound
cmc
and
push
leave
pop
push
enter
stos
rclb
bound
in
mov
push
fs
ret
jle
mov
stc
lcall
enterw
lcall
add
das
aaa
bound
xor
pusha
sub
lea
xchg
mov
subb
addr16
xchg
lret
push
je
lods
mov
jg
adc
push
or
sbb
sar
mov
mov
in
xor
xorb
imul
sub
mov
mov
add
bound
stc
rep
mov
or
in
rcll
xor
xchg
push
adc
nop
bound
jb
mov
fsubs
sti
notl
sub
addl
ret
iret
gs
aas
jle
lods
pop
insb
xchg
jno
or
jl
sub
mov
cmp
cltd
clc
ret
repnz
fnstenv
mull
jle
inc
repz
pop
or
fistpll
cltd
clc
ret
imul
fnstenv
jl
or
ja
sti
in
mov
popa
hlt
mov
test
xchg
movsl
aad
ret
nop
gs
int
cmpsl
icebp
xor
add
adc
push
adc
add
adc
add
push
adc
add
push
adc
add
push
adc
push
adc
jge
xor
ss
lods
ud0
add
or
mov
or
pop
gs
stos
insl
jge
xor
mov
rorb
push
xchg
movsl
sahf
rorl
jne
adc
push
es
fwait
mov
in
pop
shll
lods
jns
lahf
iret
insb
sub
add
or
leave
xchg
jne
stos
sbb
js
push
adc
arpl
scas
or
in
ljmp
nop
pmulhuw
lods
or
xor
leave
push
test
mov
adc
imul
pop
mov
pop
pusha
and
out
mov
xchg
subb
dec
hlt
cmp
add
jo
insb
sub
sub
add
adc
popf
and
inc
jmp
dec
fistps
pop
xor
pop
das
mov
push
jge
test
lods
push
push
out
ret
ret
mov
loop
faddl
cmp
push
push
fcmovnu
xchg
adc
iret
lret
sahf
lret
mov
push
mov
push
jbe
and
lret
js
adc
loopne
dec
daa
out
inc
push
mov
jb
movsb
aam
stos
sti
sbb
unpcklps
jecxz
adc
andb
sbb
mov
mov
std
jae
xor
ljmp
dec
jecxz
lahf
xor
loope
xchg
push
or
notb
sbb
xchg
adc
scas
jge
adc
leave
or
pop
out
push
push
pop
ror
sbb
clc
filds
daa
mov
push
sbb
lcall
dec
mov
mov
jmp
jb
adc
adc
imul
cmp
pop
popf
mov
or
pop
pop
sti
pop
call
sahf
test
addr16
push
cld
loope
inc
in
sub
imul
inc
movsl
fadds
insl
push
jl
mov
mov
insl
pop
ljmp
mov
jge
jp
mov
shrb
test
shlb
add
lods
out
js
push
dec
mov
icebp
mov
shll
loope
cmp
fcmovnbe
cs
jp
shll
inc
push
cmp
test
popf
jno
xchg
ret
arpl
scas
adc
inc
push
mov
or
fs
jno
sub
and
push
cmp
shrb
imul
adc
inc
dec
jmp
pop
adc
fsts
push
test
sbb
das
jg
jl
xchg
push
cmp
xchg
fdivp
sar
popa
in
orb
cmc
cmc
out
cmp
sar
call
push
test
fbstp
dec
lds
sti
roll
and
cld
mov
push
add
jns
popa
fwait
cwtl
fcmovb
push
jnp
mov
fidivs
imul
fstp
dec
cmp
jnp
insb
loop
add
nop
es
ljmp
shrb
sti
imull
or
adc
nop
imul
daa
dec
lahf
decl
icebp
jp
out
iret
ljmp
push
jp
das
fidivrl
push
in
lods
scas
or
or
adc
jl
lods
adc
repnz
ds
repnz
mov
inc
xor
pop
adc
fs
iret
xlat
mov
push
or
mov
pop
xor
mov
inc
fs
pop
out
xchg
nop
hlt
je
test
dec
mul
xor
cltd
pusha
xchg
cmpsl
xlat
clc
mov
adc
mov
and
or
hlt
xchg
push
mov
push
imul
mov
lea
fstps
bound
test
jge,pt
scas
sbb
mov
or
mov
ss
xor
or
mov
mov
add
lea
movsb
sub
mov
iret
lahf
mov
or
adc
loop
in
pop
imul
cmpsb
test
xchg
imul
adc
cmc
sub
mov
mov
lea
push
pop
jae
jo
add
inc
cwtl
sbb
sub
xor
fwait
xor
insb
lock
movl
sar
xchg
cmpxchg
push
xor
mov
ja
add
dec
imul
stos
rol
push
cs
stos
jnp
inc
jp
loopne
mov
inc
push
xchg
fldcw
test
jecxz
or
mov
jle
xor
nop
ret
in
test
ja
icebp
adc
mov
mov
mov
mov
das
mov
scas
repz
rorb
mov
jnp
sbb
mov
dec
cmp
pop
lock
cmp
mov
jp
mov
dec
popf
out
aas
jle
cld
push
push
sti
mov
ja
pop
stos
hlt
sar
dec
sbb
out
jno
aaa
xchg
fcoms
lods
mov
ds
sub
sar
cld
xorl
aas
movsb
pop
fwait
jp
dec
xchg
push
push
inc
sub
inc
aaa
outsl
repnz
notb
out
outsl
adc
sbb
cmp
imul
ss
jno
pop
hlt
fst
lds
adc
push
xor
pop
add
cli
decb
sub
sarl
jecxz
or
xchg
push
mov
xchg
pusha
mov
sub
into
sub
mov
or
sbb
push
lret
ds
insl
adc
pop
cmc
movsl
test
sub
pop
hlt
fcom
fwait
ds
jmp
push
lret
sarb
fs
test
pusha
or
mov
rcr
mov
mov
sbb
xor
iret
test
imul
and
and
out
pusha
push
adc
ja
push
daa
ja
jae
sbb
imul
jg
dec
movsb
jle
test
dec
aad
ljmp
insl
push
and
jmp
sarb
jp
dec
push
mov
movsl
xor
dec
cmp
cmp
outsb
outsl
jle
jae
add
sbb
in
xchg
popa
ror
add
out
leave
pop
jnp
inc
adc
test
nop
ret
nop
inc
mov
pushfw
sbb
push
cmp
adc
push
test
xchg
jl
or
mov
cli
mov
fcoml
pushl
call
rcrl
leave
mov
sub
xchg
push
insb
jbe
lret
cli
xchg
sbb
cmp
stos
xor
dec
in
sub
mov
data16
pop
mov
xchg
ret
jne
mov
push
mov
pop
xor
push
popa
pushf
inc
in
mov
or
js
daa
pushf
incb
jbe
pop
ljmp
mov
or
cmp
mov
jb
mul
jb
cmpsb
cmp
inc
sub
xor
pop
xor
cmp
cmc
insb
mov
cmp
stos
add
mov
pop
testl
test
out
add
fnstsw
pop
ret
pop
add
push
bound
push
or
mov
mov
jge
mov
mov
fxch
pop
dec
das
mov
aas
jle
jp
out
iret
loop
idivb
ret
repnz
dec
ds
in
lods
mov
mov
or
xchg
data16
test
dec
xchg
js
or
into
jno
lcall
fnstenv
adc
sbb
mov
into
out
sahf
ds
je
das
inc
add
push
lret
clc
mov
es
jns
not
dec
stc
mov
xchg
les
jne
xor
fxch
mov
notl
insl
mov
hlt
sahf
iret
sbb
mov
popa
fwait
pop
bnd
mov
cltd
loope
pop
js
push
loope
adc
xchg
std
sahf
lock
pop
pop
jbe
aam
fdivrl
jne
movsl
xor
sbb
pop
jno
mov
lahf
movl
sarb
test
pop
adc
sbbb
sbb
mov
inc
sub
lock
movl
fstps
outsb
dec
cmc
mov
mov
loop
mov
mov
addr16
mov
lock
mov
add
inc
cmpsb
lock
insl
popa
js
les
cmp
test
stc
dec
dec
gs
fdivp
jb
out
jns
mov
inc
je
sbb
das
int
pop
lcall
popf
push
inc
lret
arpl
sti
imul
clc
dec
loopne
pop
adc
and
mov
push
add
int3
adc
mov
adc
add
pusha
push
adc
and
lds
int3
adc
and
adc
xchg
icebp
cmp
pop
call
adc
or
test
sbbl
outsl
xor
dec
jb
cltd
ficompl
stos
lds
mov
insb
xchg
or
and
int3
adc
pop
inc
inc
pusha
sub
aam
jno
dec
in
lods
adc
cmp
icebp
bound
lret
es
negl
xor
mov
movsb
mov
mov
mov
jecxz
xor
stc
adc
xlat
jecxz
je
mov
jo
push
bound
dec
sub
ss
int3
sahf
outsb
pusha
bound
adc
call
cmc
iret
cmp
or
jns
cmpsb
xchg
and
dec
cmpsl
popf
into
xor
add
fistpl
test
push
jno
fisubrs
ret
mov
pop
mov
mov
stc
shll
add
fisttps
icebp
xchg
jg
add
outsb
xchg
xor
inc
imul
push
cmp
adc
dec
mov
cwtl
cmp
pop
sub
ss
or
lods
sbb
das
test
stc
cmp
adc
adc
scas
aam
lret
xlat
pop
fwait
push
test
sub
pop
jle
ror
and
mov
ljmp
popa
xchg
cmpsl
add
insb
mov
inc
mov
push
inc
add
sub
outsb
int3
mov
test
fwait
icebp
shlb
inc
dec
mov
jo
sub
pop
xor
jmp
add
test
mov
leave
in
mov
pusha
push
adc
dec
cs
popf
out
mov
mov
adc
adc
push
adc
cmp
out
sbb
mov
xlat
scas
pop
xor
outsl
sbb
cs
rolb
push
inc
int
mov
fcoms
out
popf
ss
push
add
mov
mov
xorl
mov
inc
and
pop
dec
adc
aas
jle
scas
movsb
sbb
popf
out
and
push
adc
je
push
adc
lods
cmpsl
xor
rorb
push
xchg
xor
addr16
jp
xchg
imul
and
adc
lahf
dec
ja
mov
pextrw
rolb
fucomi
xlat
scas
xlat
shlb
push
mov
hlt
jb
hlt
inc
dec
jnp
ljmp
cmpsl
mov
mov
xchg
dec
insl
fdivrs
fwait
or
pop
test
adc
push
jge
mull
scas
and
out
xchg
mov
or
rorb
xchg
repnz
adc
stos
or
in
mov
push
imulb
leave
lock
bsr
and
add
jg
push
xor
lock
inc
inc
or
cwtl
mov
ret
or
add
movsb
pusha
push
adc
or
and
mov
inc
addb
push
adc
push
lahf
push
je
daa
jnp
jae
add
and
xchg
sbb
flds
dec
xchg
iret
aam
mov
lcall
sub
and
test
jp
jle
xor
mov
cmp
les
or
lcall
pop
stos
movsl
dec
les
or
or
pop
push
mov
lods
pop
add
jb
outsb
lahf
pop
dec
cmp
adc
mov
adc
js
movsb
std
pop
sbb
lods
or
out
xor
pop
fwait
sbb
push
pop
aad
or
xor
add
jo
jecxz
cli
dec
insb
inc
out
xchg
mov
sbb
lock
mov
ret
jo
add
cld
sbb
sub
enter
outsl
or
fcmovne
pushf
loopne
fdivp
ds
cli
cmpsl
fmuls
stos
ljmp
dec
mov
out
loop
mov
sti
out
les
or
lcall
or
lods
jno
sbb
les
adc
adc
call
sub
ja
adc
adc
pop
nop
outsb
and
loope
addl
scas
pop
cmpl
ss
pop
imul
adc
adc
jns
loope
lahf
int3
adc
adc
sbb
cmp
int3
adc
adc
inc
xor
gs
pop
jno
push
cmp
xor
fsubrs
sbb
push
popa
cmp
cld
adc
pop
in
jmp
outsl
dec
fs
loop
cmp
testl
cmp
aam
andl
mov
adc
cmp
or
arpl
cltd
add
negl
mov
mov
xchg
push
inc
adc
adc
add
jns
xchg
add
in
rorl
adc
mov
push
mov
popf
subb
les
or
xor
mov
jecxz
jae
pop
mov
inc
in
inc
inc
jb
sbb
icebp
add
imulb
gs
xchg
push
xchg
repz
jecxz
mov
stos
and
adc
punpckhdq
mov
jbe
addl
addb
sub
mov
es
mov
clc
popa
rolb
imul
test
insl
add
mov
fnstsw
lods
or
int3
jg
repz
adc
sbb
ja
popa
jmp
mov
mov
in
adc
dec
lahf
push
or
cmc
xchg
inc
lea
cld
lds
mov
mov
fld
jb
subl
aam
sbb
or
fidivrs
aas
pop
jb
test
in
iret
mov
leave
adc
mov
cld
sub
xlat
out
dec
imul
inc
mov
test
imul
jno
ja
ja
push
stos
mov
movsl
xor
push
push
testb
cld
out
add
adc
jno
adc
jp
cmpsl
jmp
pop
enter
hlt
push
fidivs
mov
js
out
or
and
sbb
adc
jb
mov
aam
push
inc
mov
sub
jp
in
scas
pop
mov
neg
in
xchg
daa
dec
push
dec
mov
inc
shr
hlt
mov
addr16
data16
pop
ljmp
mov
daa
enter
pop
out
pusha
push
adc
pop
push
fnstsw
aam
icebp
mov
repz
xor
scas
jbe
jns
les
mov
cmp
lret
insl
add
add
sbb
ja
cld
sbb
adc
pop
fcoms
ljmp
in
pop
push
stc
int3
inc
ss
mov
insb
cmp
rcll
fcoms
add
insl
cwtl
add
scas
sahf
aam
sbb
testl
dec
fdivs
pusha
push
adc
xchg
ja
ret
push
pop
ja
pusha
push
adc
xchg
push
lahf
aam
or
pusha
or
mov
mov
add
fidivrl
dec
cmpsl
loope
in
imul
adc
cltd
lret
fs
leave
cmp
dec
outsl
call
pop
pusha
pusha
push
adc
sahf
insb
mov
es
ds
arpl
bound
popa
push
adc
mov
and
rclb
xchg
rclb
mov
js
pusha
push
adc
fcoms
ds
mov
lock
jle
jg
negb
cmp
fldt
pop
push
ficoms
roll
inc
das
ljmp
xor
sahf
add
inc
pop
sahf
jno
inc
hlt
pusha
push
adc
adc
sub
cmp
aam
or
in
outsl
dec
js
icebp
mov
leave
mov
inc
lods
inc
fisttps
les
repz
mov
sbb
roll
jge
jl
push
adc
in
setno
test
fcoms
nop
pop
jne
popa
cmpsl
pop
mov
shll
mov
ror
divb
sbb
adc
lods
mov
jmp
adc
fs
pop
adc
xchg
and
aas
jle
mov
adc
and
inc
testb
inc
push
pop
adc
or
icebp
inc
je
jmp
fcoms
or
bound
test
sbbb
fdivrs
jne
scas
lcall
in
adc
push
sbb
pusha
or
cmpsl
cmp
sbb
push
xor
shll
loop
arpl
cltd
xor
mov
jb
in
mov
xchg
ret
mov
pop
adc
clc
lods
pcmpgtb
popa
movsb
xor
pop
adc
mov
rclb
pop
adc
add
sub
xchg
jo
xchg
nop
mov
aad
mov
jle
jb
push
mov
sub
loope
add
daa
xchg
pop
pop
adc
add
adc
in
pop
adc
aas
sub
out
cmpsl
mov
xor
jae
mov
inc
sbb
adc
dec
test
adc
mov
cld
pushf
sbb
adc
cmp
addl
sbb
adc
dec
pop
mov
pop
jae
and
fdivs
pop
adc
dec
insb
rolb
mov
push
adc
insl
fdiv
mov
xchg
adc
pusha
mov
or
push
mov
sbb
adc
jecxz
aaa
insb
lahf
pusha
sbb
adc
adc
lea
mov
int3
sbb
adc
adc
cmp
cmp
fs
sbb
adc
mov
mov
sub
push
mov
add
xchg
mov
sbb
adc
or
inc
cmpsb
daa
sub
cmc
xchg
lds
dec
fmull
mov
push
jle
aas
jbe
push
add
push
mov
pop
adc
ja
inc
test
cmp
mov
testl
xor
xor
push
les
sbb
adc
jmp
test
xorl
lds
pop
inc
adc
push
xchg
sbb
adc
inc
fwait
aaa
sbb
ja
dec
pop
add
adc
xor
cmp
outsb
push
xchg
sbb
adc
mov
ret
or
add
test
test
sbb
sbb
push
adc
popf
cs
andl
mov
cmp
cmp
sahf
out
into
das
inc
rolb
orb
addr16
outsl
test
mov
or
dec
mov
adc
and
lret
cli
mov
loope
cmpsl
sub
daa
adc
inc
push
pop
adc
int3
inc
adc
xchg
add
jbe
mov
push
aad
xor
in
add
popa
sar
sub
pop
sbbb
adc
gs
ss
or
test
pop
adc
fisubl
dec
mov
in
es
mov
dec
into
pushf
and
sti
pop
pop
lods
push
pop
adc
je
mov
jl
push
pop
adc
ss
cmc
es
ret
sti
stos
or
stos
xor
ret
lods
pop
and
daa
cs
pop
adc
sbb
popa
out
insl
es
pop
pop
adc
aaa
leave
sub
in
or
push
lret
and
cltd
inc
in
scas
sub
je
decb
inc
mov
icebp
lahf
jne
or
push
mov
inc
mov
and
pop
adc
ret
aas
mov
out
repnz
test
adc
and
adc
and
or
adc
imul
push
mov
loop
lret
and
adc
dec
sbb
or
ret
or
pop
adc
and
and
adc
sbb
pop
dec
test
and
adc
sub
inc
mov
stos
add
scas
pop
sub
insb
cmp
jge
push
dec
cmp
pop
adc
xchg
adc
push
cmp
cli
sub
mov
jl
into
ret
std
xor
jnp
and
adc
lods
ret
imul
pop
xor
dec
pop
out
cltd
loop
mov
scas
mov
fs
jmp
pop
adc
xor
movsb
push
jp
push
rolb
and
adc
orl
into
hlt
scas
add
xchg
and
adc
xchg
popa
lock
fisubrs
movb
adc
xchg
pop
adc
lret
adc
xchg
aam
in
mov
xor
push
or
es
mov
sub
or
es
jle
imul
add
sbb
cli
gs
ja
and
out
loop
mov
es
lea
cmpsl
fnsave
push
or
and
push
and
add
movsb
inc
ret
je
pop
adc
adc
adc
adc
adc
sahf
pop
inc
jne
test
mov
aas
sub
jp
jnp
rolb
popa
shll
and
inc
mov
xor
push
xor
roll
shll
or
and
fildll
pop
xchg
in
dec
fwait
inc
push
pop
sahf
pusha
rclb
sarb
and
cmp
int
inc
test
test
in
or
repz
and
xor
out
add
arpl
push
mov
mov
stos
sub
adcl
daa
inc
clc
cmpsb
outsl
inc
jg
orl
ss
into
pop
stos
lds
xor
jbe
or
add
fwait
movsb
inc
idivb
xor
mov
addl
popa
mov
inc
pop
pop
out
inc
mov
and
add
dec
lcall
andb
xchg
js
adc
xor
sbb
pop
push
dec
adc
adc
fs
dec
add
pop
adc
aaa
ds
cmpb
aaa
mov
arpl
repz
jl
sti
jp
inc
or
pop
adc
fwait
mov
and
aam
and
pop
adc
int3
adc
jns
sub
pop
lahf
negl
jg
push
scas
les
or
lds
rorb
xor
nop
out
push
add
cmp
adc
jmp
arpl
add
cmp
adc
jmp
and
mov
pusha
jl
lcall
pushf
out
jmp
xor
mov
aas
sbb
sbb
cmpsb
mov
jmp
push
dec
leave
lds
mov
into
repnz
cwtl
xlat
insb
daa
pop
adc
pop
dec
into
pushf
sbb
stos
jo
setbe
mov
les
pop
adc
fiadds
rclb
es
adc
enter
fs
xchg
and
daa
pop
adc
and
dec
push
sahf
cmp
jmp
shll
adc
sub
int
cltd
shlb
sbb
dec
mov
pop
gs
imul
scas
jno
jmp
dec
in
mov
sti
loope
mov
cltd
sahf
aam
fisttpll
lcall
xchg
jns
mov
xorl
outsb
mov
lds
inc
sub
adc
cmp
adc
pop
out
or
daa
imul
sub
jo
pop
adc
loope
mov
mov
movb
pushf
sub
adc
bound
imul
jle
movsb
cmp
push
jp
sub
adc
dec
out
fstpl
push
inc
insb
sub
sbb
aas
or
xlat
dec
je
dec
mov
sub
adc
idiv
cmp
mov
dec
push
fwait
mov
xlat
and
pop
adc
cld
cmpsb
jecxz
fdivrs
in
jns
xor
bnd
ja
jbe
sub
push
cmp
rolb
sti
jb
dec
les
xor
movsb
push
mov
pushl
repz
andb
outsb
or
fdiv
ljmp
dec
aam
lods
adc
jmp
shl
fwait
mov
rcrb
push
test
pop
adc
push
subb
inc
in
sbb
pop
ja
sub
sti
addl
push
sub
sub
pop
icebp
call
push
mov
rclb
shr
xchg
icebp
adc
add
pop
adc
push
in
and
pusha
xchg
adc
imul
jp
and
add
mov
xor
sub
adc
adc
xor
mov
sub
rcll
sbb
xor
sti
roll
pusha
mov
dec
or
and
push
sub
or
es
cs
add
sbb
mov
outsl
out
mov
es
std
stos
fnsave
push
or
sarl
xorb
and
add
xchg
movsb
inc
ret
sbb
pop
adc
adc
mov
testl
inc
cmp
pop
adc
push
adc
mov
mov
cs
adc
xchg
add
pushf
iret
out
mov
adc
and
ret
xchg
out
leave
or
ja
cs
adc
push
aaa
inc
mov
das
pop
adc
jmp
mov
xorl
lds
pop
pop
adc
and
loopne
or
xor
xor
add
xlat
lods
rolb
punpckhwd
push
adc
sub
sub
jle
movups
cmp
adc
ss
xchg
push
ficoms
and
nop
das
pop
adc
loopnew
pop
adc
add
xor
pop
adc
fwait
or
xor
mov
add
mov
pop
adc
cwtl
push
pop
push
fdivs
pop
adc
sbb
xor
adc
dec
out
cmp
cmp
pop
adc
jo
xor
adc
mov
pop
adc
adc
icebp
loope
movsb
std
mov
jle
mov
repnz
adc
loop
pop
xlat
sub
push
sbb
push
add
adc
xchg
sbb
mov
dec
mov
repz
xor
adc
lock
fstpl
sbb
inc
xor
adc
sti
nop
xor
adc
pop
sbb
adcb
xor
mov
pop
adc
add
sub
sbb
pop
mov
outsl
and
xor
adc
bnd
dec
pop
push
mov
js
in
adc
je
sbb
add
push
ds
movsl
dec
xor
adc
add
xchg
pop
mov
lea
mov
inc
cwtl
and
jge
push
rcl
sbb
xor
mov
cmpsl
jl
pop
adc
push
aaa
lods
mov
pop
xor
and
cmpb
jle
int3
pop
arpl
pop
adc
fildll
xchg
cltd
test
test
loopne
xor
adc
xorl
push
dec
fimull
pop
jae
or
pop
adc
sbb
pop
dec
popf
push
fnsave
add
outsb
movsb
jge
xor
sub
arpl
stos
mov
sarl
scas
push
xor
leave
pop
push
aas
int3
rclb
std
pop
js
pop
adc
test
xor
insb
mov
iret
pushf
xor
cld
xor
in
xor
mov
ss
adc
in
cs
pop
adc
jmp
pusha
push
inc
dec
jnp
stos
out
aaa
hlt
ds
aaa
pop
adc
mov
pusha
out
out
in
in
push
loop
aaa
pop
adc
jae
repz
daa
push
std
fisubl
pusha
push
mov
aaa
pop
adc
xor
test
dec
cmp
adc
out
sbb
cmp
adc
sub
mov
sarb
adc
into
adc
pop
adc
xor
mov
dec
push
xor
xor
pop
adc
xchg
adc
xchg
call
sarb
adc
cltd
add
jle
jg
cmpsl
xchg
pop
or
cmp
adc
pop
mov
adc
in
fdiv
jo
pop
adc
push
add
pusha
mov
das
push
push
icebp
inc
mov
sbb
popa
pushf
cmp
adc
ret
js
addl
ja
movsl
decl
adc
pop
adc
jmp
pusha
adc
rol
addb
push
mov
shll
adc
inc
push
sbb
dec
or
inc
adc
add
pop
sahf
jae
adc
loop
push
inc
ss
or
adc
je
mov
mov
clc
iret
sub
push
fs
push
es
jmp
jbe
movb
jle
pop
jbe
push
add
push
cmpb
ds
mov
mov
fwait
ss
mull
repz
sbb
jns
shl
iret
adc
inc
pushf
punpcklwd
xor
xchg
adc
dec
shrl
mov
jb
adc
daa
or
pop
adc
pusha
pop
mov
and
dec
test
add
push
push
jbe
push
push
pop
jg
jp
rcll
or
pop
adcb
or
mov
mov
mov
or
movl
sbb
sub
cwtl
and
in
mov
mov
dec
or
push
and
lock
adc
in
adc
outsl
faddp
adc
mov
imul
cs
nop
xchg
insb
pop
lods
cmp
repnz
cmpsb
repz
lea
movsb
push
add
or
sub
cmp
cmp
adc
sub
fldt
lret
out
push
mov
aas
pop
adc
jne
sbb
and
dec
xchg
pop
jle
mov
std
jnp
divb
adc
mov
ss
jb
and
sbb
outsl
pop
repnz
mov
mov
gs
rol
jns
dec
mov
xchg
fsub
out
push
aam
fdivrp
test
cs
push
scas
cli
sub
orl
or
cmpsb
lcall
cltd
xor
sbb
push
cmc
les
and
enter
ret
adc
xchg
inc
jmp
outsl
gs
les
dec
sub
imul
add
repnz
in
xchg
or
lcall
sub
test
lahf
test
in
aas
cmp
mov
test
pop
mov
and
mov
push
adc
mov
incl
mov
mov
and
insb
pop
push
jnp
clc
testb
jg
sbbb
pop
out
inc
popa
push
cmp
popf
movb
fwait
sti
aad
inc
adc
xlat
sbb
aad
mov
test
or
mov
daa
notl
jns
daa
ss
cmp
lods
sub
sub
mov
pushf
outsl
stos
daa
sub
test
or
insb
dec
out
leave
dec
push
dec
push
jle
and
xor
jg
mov
or
mov
cli
sbb
mov
xor
and
vmwrite
test
aam
push
push
xor
add
push
push
adc
push
inc
mov
xchg
scas
push
dec
pop
mov
add
adc
cli
dec
jmp
xlat
out
out
outsl
hlt
mov
jmp
clc
dec
imul
out
inc
pop
adc
add
outsb
xchg
dec
add
out
sbb
adc
sbb
hlt
outsl
cmpsb
cld
mov
inc
pop
adc
jbe
mov
pop
enter
xchg
push
adc
xor
jne
add
inc
sub
outsl
in
inc
pop
adc
aas
cmp
cmpsb
shlb
test
inc
adc
adc
mov
notl
inc
ret
push
data16
mov
jb
adc
daa
mov
adc
inc
pop
mov
loop
push
movsb
ficoms
or
adc
addb
xchg
test
addl
push
test
inc
idivb
xor
inc
pop
adc
adc
adc
ja
inc
clc
cmpsb
aaa
inc
imul
push
popa
shl
sbb
lds
rol
inc
pop
adc
or
push
shl
scas
pop
xchg
icebp
dec
fwait
jno
inc
pop
adc
push
pop
pop
or
orb
rorl
pop
adc
pop
test
popa
xchg
scas
lea
fnsave
test
sbb
adc
cmpsb
outsl
inc
pop
xchg
orl
push
fnsave
adc
add
jmp
pusha
movsb
adc
addb
aas
cmp
ficomps
add
es
push
xchg
lods
inc
pop
adc
outsb
dec
mov
daa
dec
fwait
and
inc
pop
adc
push
roll
push
adc
and
js
or
xor
ret
ss
ret
arpl
and
iret
cs
mov
and
fistl
push
inc
xor
notb
pop
and
lret
aad
icebp
daa
adc
outsl
faddp
adc
scas
add
imul
cs
nop
arpl
pop
lods
cmp
jbe
sub
mov
mov
pop
mov
dec
inc
pop
adc
sub
stos
or
push
xchg
sbb
les
fwait
out
add
inc
pop
adc
push
mov
adc
je
push
repz
fadds
adc
mov
imul
push
popa
outsl
jne
cmp
movsb
mov
icebp
mov
aad
fists
pop
push
inc
fsts
sbb
inc
pop
adc
adc
out
and
mov
loopne
fists
mov
cmp
shll
pop
adc
xor
pop
adc
repnz
pop
cmpsb
jl
pop
jns
jo
in
test
ljmp
add
dec
mov
cmp
int
stos
inc
inc
pop
adc
out
sbb
pop
adc
jo
mov
and
mov
mov
xchg
mov
inc
pop
jp
mov
adc
mov
cli
adc
xor
mov
aam
sbb
push
shlb
jno
cmp
pop
adc
mov
pop
imul
add
inc
pop
pop
mov
imul
sub
mov
pop
adc
loope
lods
mov
adc
pop
adc
mov
insb
loope
iret
xchg
sub
mov
lods
cmp
out
imul
sub
mov
daa
jp
dec
pop
adc
dec
out
fistpl
push
inc
insb
sub
or
xlat
dec
je
ret
std
into
je
jg
mov
jae
in
cmp
jecxz
test
jp
fmuls
lcall
cmp
hlt
and
xor
mov
adc
lods
lret
add
aam
orb
push
cmp
aas
out
dec
out
cmp
clc
movsb
repnz
call
or
cmpsb
mov
xchg
push
cmp
loop
int3
into
cwtl
xor
inc
subl
notl
lds
pop
neg
stos
pop
mov
fwait
movb
fadds
pop
adc
sti
and
pop
ja
dec
pop
adc
adc
xor
xabort
mov
jnp
popf
pop
or
push
aas
xor
insb
fsubs
inc
push
mov
mov
pop
adc
bound
lea
mov
mov
jb
adc
daa
loopne
pop
adc
inc
mov
sbb
inc
test
add
pop
lcall
xchg
push
sbb
es
shll
pop
inc
inc
mov
xorl
dec
dec
pop
adc
and
xorl
xlat
sahf
adc
movsl
add
inc
idivb
and
fwait
and
xor
arpl
xor
pop
adc
stos
adc
pop
adc
push
push
jbe
pop
push
push
dec
dec
dec
pop
adc
cmp
ds
inc
test
dec
pop
adc
popf
clc
mov
mov
hlt
adc
xor
push
cmpsb
stc
inc
mov
daa
mov
pop
or
push
fsubl
stos
add
adc
ret
xor
pop
adc
stos
adc
pop
adc
sub
xor
or
xchg
icebp
rcll
add
movsl
or
push
cld
and
mov
mov
addb
sbb
jae
xchg
mov
test
insb
pop
mov
shr
xchg
das
sbb
jmp
cs
pop
pop
and
xchg
popf
xor
adc
test
adc
mov
inc
mov
movsb
inc
cmpsl
into
xchg
sbb
dec
popf
xchg
int3
loop
fmull
adc
xor
daa
adc
dec
xchg
adc
insl
cmp
pop
adc
outsl
dec
int
jnp
sbb
push
mov
dec
pop
adc
sub
jecxz
pushf
mov
outsl
jb
pop
xor
js
xor
push
mov
pusha
xchg
add
stos
add
adc
mov
repnz
jb
fs
dec
pop
adc
or
adcb
test
and
out
jns
ret
or
or
ja
stc
jno
fsub
out
push
mov
fdivrp
test
stos
cmovl
mov
stos
flds
add
mov
int3
push
pop
adc
pop
sbb
inc
dec
cs
jecxz
in
cmp
adc
push
mov
push
mov
jmp
and
mov
push
pop
adc
push
loop
xor
jg
arpl
pop
adc
mov
lods
cmp
outsl
lcall
xorb
fwait
hlt
in
cmp
mov
adc
mov
fs
mov
hlt
and
ret
data16
dec
testb
adc
dec
inc
adc
push
pop
adc
jns
push
mov
add
ljmp
xchg
mov
pop
adc
out
cmp
xchg
lahf
repnz
frstor
pop
shr
or
sahf
lock
jo
cmp
sub
loopne
sub
pop
mull
aas
js
stos
inc
cmp
cltd
xchg
ja
cmp
jl
popa
mov
mov
sbb
mov
out
push
stos
or
push
pop
xor
xchg
iret
xchg
cmp
pop
adc
add
mov
pop
adc
mul
push
pop
adc
or
mov
inc
xchg
push
inc
outsl
divl
pop
dec
les
hlt
movsb
push
pop
adc
mov
adc
inc
jl
andl
andb
pop
adc
dec
cmc
enter
fs
rcr
jge
mov
outsb
pop
adc
sub
lret
push
xlat
call
adc
or
pop
mov
lahf
movb
adc
stos
nop
mov
adc
add
adc
pop
sub
pop
adc
cmp
lea
test
rcrl
call
rcll
inc
rcl
cmp
pop
ficompl
push
pop
adc
pop
add
out
mov
xlat
xchg
add
or
lds
push
pop
adc
xor
push
mov
xor
xor
push
cld
nop
push
pop
adc
sbb
addl
rcll
lret
sub
pop
adc
ret
mov
mov
int
add
adcb
gs
pop
adc
test
popa
xchg
mov
mov
add
pop
adc
mov
push
push
pop
adc
xor
push
out
push
pop
adc
cmpl
pop
adc
adc
adc
cmpsb
add
popf
orl
nop
mov
mov
sub
adc
loop
popa
shl
and
lcall
push
inc
push
es
jmp
jbe
pop
push
push
jle
mov
fmulp
daa
inc
clc
adcw
xchg
call
inc
fdivs
add
je
pop
adc
dec
xor
inc
clc
cmpsb
add
popf
orl
xor
adc
es
pop
adc
inc
popa
mov
adc
jle
dec
lcall
xchg
and
inc
test
adc
xor
push
in
push
pop
adc
sarb
pop
adc
cwtl
das
pop
and
adc
xchg
adc
pop
pop
adc
mov
adc
pop
adc
xor
or
push
fs
pop
adc
les
das
dec
hlt
stos
outsl
dec
pop
insl
mov
adc
cltd
insl
int3
mov
jl
jmp
mov
pop
pop
adc
out
push
sbbb
mov
inc
lea
loope
mov
dec
nop
pop
pusha
add
push
arpl
ret
cld
sub
cmc
jnp
inc
lock
pop
adc
movsb
push
popa
push
in
mov
subb
xchg
stos
fs
ret
fnsave
push
iret
sbb
inc
mov
test
shll
rcr
cmp
iret
sbb
cmp
std
test
ljmp
sbb
mov
insl
push
cwtl
scas
sub
fcomps
pop
pop
adc
inc
sub
cs
and
icebp
cld
pop
pop
adc
push
sbb
sub
jl
jo
stos
xchg
push
adc
push
dec
pop
dec
out
insl
adc
and
jmp
in
adc
xor
push
mov
dec
pop
pop
adc
addr16
jecxz
popa
and
mov
and
int
ficomps
cmp
push
shl
test
adc
xchg
mov
adc
test
pop
adc
jecxz
and
decl
or
pop
adc
pop
inc
sbb
jnp
cmp
jge
rcrb
pop
mov
loopne
pop
pop
adc
icebp
or
popf
test
pusha
pop
pop
adc
rclb
out
shll
inc
in
lods
insl
test
adc
push
sbb
or
sbb
push
jle
insb
dec
out
sub
xor
cmc
into
cmp
adc
cmp
icebp
mov
xor
xchg
mov
call
or
dec
add
mov
jp
js
mov
adc
inc
pop
outsb
ss
cli
push
sub
shll
hlt
outsl
add
jp
hlt
jae
sahf
xchg
roll
hlt
ret
xchg
fmulp
mov
mov
cmp
repnz
pusha
jecxz
fimull
movsl
add
jbe
jp
dec
aam
loop
addb
outsl
pop
neg
stos
movzbl
ljmp
jae
lds
lret
lahf
and
mov
adc
or
xchg
xor
push
or
loope
les
adc
ss
add
sbb
sbb
bound
daa
in
pop
pop
adc
pusha
insl
mov
and
inc
test
add
sub
push
cs
xchg
adc
adc
aaa
clc
lahf
sub
push
pop
das
adc
aas
sub
inc
xchg
arpl
cmc
mov
sbb
shll
lock
adc
inc
pushf
mov
ss
add
sbb
jbe
bound
push
jle
mov
shll
inc
clc
cmpsb
jnp
jo
xchg
addr16
inc
lea
fnsave
push
or
aam
ret
mov
pop
sub
dec
xchg
mov
and
inc
out
mov
jle
add
xlat
test
or
push
testl
es
fwait
and
mov
mov
push
adc
aas
xor
xor
push
cmpsb
roll
pop
add
inc
fimuls
add
pop
es
xchg
arpl
inc
mov
add
in
fwait
ss
xchg
arpl
movb
addl
or
push
out
pusha
pop
adc
add
das
and
or
adc
imul
inc
xor
push
sub
adc
cwtl
pusha
shl
dec
sbb
mov
pop
adc
sub
repz
dec
cwtl
jb
bound
adc
adc
add
insb
test
roll
or
pop
adc
insl
orl
stos
pop
popf
mov
movl
push
les
dec
shll
pop
inc
sub
sub
and
outsl
int3
lret
pop
adc
movsl
icebp
lcall
mulb
add
mov
test
test
stos
sub
and
loopne
pop
adc
jne
sbb
bound
movsb
add
dec
and
pop
adc
sub
in
in
inc
test
and
leave
dec
pop
nop
fs
adc
pop
jns
ret
or
or
mov
pop
adc
iret
pushf
insb
std
sti
jecxz
call
fsubs
pop
cltd
mov
sbb
jo
mov
mov
xlat
push
aam
gs
adc
sub
add
sbb
adc
je
addr16
adc
fnsave
icebp
mov
fisttpll
or
lods
jmp
rorl
pop
jne
js
dec
mov
pop
repz
mov
insb
hlt
lret
loop
pop
popw
adc
xor
pusha
nop
fmul
adcb
cmc
mov
pop
adc
pusha
add
adc
lret
fwait
mov
jbe
push
mov
loope
bound
inc
stc
daa
cmpsb
aas
xor
fistpll
pop
imul
iret
xor
mov
aam
sub
pop
adc
in
xor
les
sub
mov
mov
notl
clc
add
insb
cld
mov
or
cmp
sbb
add
stos
pusha
mov
adc
adc
lahf
dec
out
and
jnp
xchg
fistps
jmp
pop
loopne
pop
adc
ja
push
dec
or
out
cmp
add
pop
adc
sti
push
push
mov
sub
xor
stos
lret
cmp
lea
xchg
mov
cmp
aam
jns
in
std
and
lods
shlb
jb
in
out
mov
lcall
push
inc
mov
lods
jnp
or
push
adcb
int3
fsub
xor
inc
les
ret
pusha
xorb
int3
lock
hlt
lods
pop
fsubrl
adc
jle
cltd
mov
repz
js
add
and
mov
or
adc
dec
sbb
inc
jae
inc
sbb
lock
pop
cli
mov
imul
dec
fwait
inc
push
aas
mov
rclb
rorb
and
clc
out
sub
push
sub
adc
aas
jmp
jbe
pushw
push
jle
daa
popa
roll
clc
data16
push
mov
and
subb
jbe
lods
add
jle
sbb
add
arpl
mov
inc
popa
or
fwait
ss
into
dec
movsl
ret
je
sbb
pusha
xlat
jecxz
adc
xchg
adc
arpl
popa
les
adc
add
jno
sbb
cmp
ss
imul
pop
adc
sub
pop
adc
inc
rolb
and
cmp
ds
inc
test
push
adc
popf
hlt
mov
mov
or
or
es
mov
push
pop
fsubrl
push
shll
mov
adc
pop
cltd
lcall
add
sbb
mov
pop
cli
mov
repnz
test
add
push
push
jbe
pushw
push
jle
mov
popa
cmp
inc
clc
data16
mov
and
into
mov
mov
mov
lds
inc
mov
xor
jp
es
lcall
repnz
add
sbb
jg
push
inc
mov
cmp
js
mov
cwtl
xor
ret
lds
imul
and
ljmp
push
leave
sub
loopne
imul
ss
xor
les
xchg
insb
mov
dec
xchg
aaa
mov
sub
and
pusha
aam
dec
call
jne
out
fwait
sbb
call
daa
or
push
sbbl
test
aas
daa
mov
cmp
insl
imul
inc
jp
jg
add
icebp
mov
jbe
sub
fwait
xchg
rcrb
jb
inc
adc
loop
arpl
int3
gs
cmpsb
out
push
push
xlat
std
fistpll
enter
jno
fsub
out
push
adc
fdivrp
push
sbb
mov
dec
into
mov
push
xchg
mov
lret
int
mov
insl
enter
and
add
cmp
lods
push
fs
mov
daa
adc
dec
pop
in
mul
lahf
mov
sub
jge
pop
xchg
xchg
inc
cmp
cmp
push
orb
mov
pop
dec
les
lods
mov
rcrb
repz
sub
pop
sub
lahf
cmp
add
sbb
gs
mov
das
ret
ljmp
out
mov
loope
xchg
adc
xor
movsb
inc
push
or
enter
shl
les
imul
scas
out
aad
push
loope
sub
mov
adc
int
adc
push
push
mov
push
push
xorb
xchg
or
mov
jno
scas
daa
dec
jp
mov
inc
loopne
movsb
jmp
pop
sub
inc
insb
cmp
pop
jne
dec
or
std
pop
push
mov
pop
adc
sbb
test
dec
out
push
mov
jnp
into
ret
std
xor
dec
add
aam
mov
jae
sbb
xchg
mov
je
ss
mov
mov
ds
scas
adc
pop
hlt
jae
add
pop
adc
fmul
jmp
loop
or
mov
adc
mov
insl
pop
adc
add
mov
jp
dec
aam
and
xchg
in
out
or
pop
adc
das
inc
ret
repnz
int3
fidivs
mov
adc
lret
xor
xchg
loope
outsb
pop
adc
rolb
divl
add
or
push
testl
popa
shrb
adc
adcl
jno
mov
repz
adc
sub
in
dec
or
push
pushl
pusha
mov
inc
adc
repz
or
and
ljmp
or
es
add
outsl
fadd
shr
xchg
cs
or
ja
outsl
pop
adc
nop
adc
lcall
push
fsubs
into
gs
mov
sub
repnz
pusha
mov
ja
inc
leave
inc
mov
pop
mov
cmp
adc
outsl
pop
adc
add
addl
inc
rolb
pop
adc
xchg
xchg
inc
test
outsl
pop
adc
mov
xor
fbld
xor
or
pop
cmp
inc
mov
pop
adc
insb
push
pop
ja
cmpsb
add
stos
and
xor
pop
adc
adc
inc
mov
jo
adc
jmp
stos
ret
je
sbb
pusha
xlat
adc
adc
mov
inc
idivb
es
fwait
and
loopne
pusha
mov
faddl
or
es
stc
addb
xchg
inc
mov
jmp
mov
outsb
fadd
adc
addb
sbb
or
icebp
ja
adc
inc
popf
ret
mov
adc
push
insb
fld
rcl
xchg
jae
or
pop
adc
arpl
or
push
cld
mov
cmp
sub
xchg
inc
cmp
adc
sbb
movhps
cmpsl
add
mov
jno
adc
adc
mov
cmp
call
in
js
sbb
mov
pop
push
xchg
cmp
jb
sub
pop
adc
fistpl
js
fcoml
ja
xor
jmp
push
sbbb
mov
inc
lea
lret
mov
jl
jb
adc
sbb
mov
outsl
popl
pop
lods
call
js
jg
je
iret
je
fwait
inc
and
enter
test
adc
in
cmpsb
mov
jmp
ds
leave
orb
scas
insl
cmp
dec
stc
mov
jb
mov
dec
test
sbb
jae
adc
mov
nop
mov
ds
dec
test
loopne
pop
adc
mov
xchg
adc
insb
mov
push
mov
cli
int
icebp
mov
or
pop
adc
xor
stc
and
sbbl
push
jno
in
leave
mov
jge
out
ljmp
mov
lret
rolb
dec
je
adc
mov
mov
mov
fstl
mov
xorl
leave
or
pop
call
jnp
cmp
mov
iret
ss
add
inc
daa
dec
xchg
fcoml
lods
xchg
dec
and
rorb
mov
add
cld
lods
mov
movsl
cmp
jne
adc
sub
in
cmp
scas
sub
ds
lods
sub
dec
jle
rolb
jle
pop
inc
push
ss
sub
rorb
fdivrs
stos
xchg
std
inc
ficoms
call
lcall
inc
ss
cld
cwtl
jne
adc
sub
jne
adc
cmp
pop
or
lcall
mov
add
mov
pop
mov
faddl
fs
rorl
jecxz
into
ljmp
inc
or
dec
xchg
in
jne
adc
loopne
lea
test
sbb
push
pop
fiaddl
mov
lea
cli
cli
and
mov
or
xchg
xor
push
jns
xorb
and
add
mov
xor
cmp
xlat
add
pop
or
or
mov
add
or
sub
push
jbe
adc
push
push
jbe
outsb
push
push
dec
je
pop
adc
cmp
ds
dec
inc
test
jbe
adc
sbb
xor
and
xor
push
es
mov
jbe
adc
out
test
stc
pop
xorl
xlat
cld
stos
or
gs
adc
jbe
or
pop
adc
test
cmc
mov
sbb
gs
pop
insl
sbb
pushf
mov
push
mov
sbb
mov
test
pop
adc
ret
shl
and
mov
loop
push
and
push
es
sub
jo
gs
inc
sbb
mov
pop
lcall
push
inc
out
es
sub
adc
rol
ja
adc
jl
addl
or
sti
sub
pop
icebp
leave
dec
fwait
jno
js
adc
mov
pop
or
inc
mov
jae
mov
js
adc
jmp
pusha
rsqrtps
or
xchg
cmc
or
push
ss
adc
push
mov
jne
adc
popa
aaa
insl
fldenv
ja
or
arpl
xchg
xor
pop
and
add
push
mov
and
add
js
adc
xor
cmp
cmpb
dec
popf
xor
fs
cmc
mov
push
fs
imul
push
mov
jns
adc
rcrl
inc
xchg
dec
adc
insb
int3
fwait
imul
fwait
sbb
xchg
or
popf
adc
movsb
xchg
pop
mov
jns
cwtl
or
iret
add
sbbb
and
iret
dec
and
and
jns
adc
sbb
add
repz
imul
outsb
ja
cli
sbb
dec
inc
mov
jecxz
jne
iret
or
jns
adc
not
std
fistpll
in
mov
jg
les
adc
mov
fcomps
pop
adc
je
mov
dec
push
test
mov
add
inc
dec
push
in
or
jo
cli
lret
xor
cmpb
mov
in
xchg
push
jle
and
xchg
jmp
xchg
outsl
movsl
add
jge
add
andb
stc
cmp
inc
aad
insb
fdivp
push
xor
jl
dec
rol
hlt
jmp
jmp
xor
movsb
cltd
mov
lcall
and
add
push
dec
xchg
dec
iret
xchg
leave
jge
xor
mov
inc
sub
ds
emms
push
xchg
std
push
cltd
outsl
pop
insl
mov
in
dec
cmpsb
lret
dec
aaa
cmpsl
enter
adc
imul
adc
lahf
dec
pop
into
push
push
push
loopne
sub
pop
aas
js
stos
inc
cmp
jo
push
xor
cli
data16
add
adc
stc
sbb
inc
out
popf
push
dec
inc
inc
fs
out
shlb
mov
insb
jg
imul
sahf
mov
mov
jl,pt
pop
adc
stos
cmc
sub
mov
in
push
mov
pop
pop
fbstp
outsb
jb
jnp
adc
fwait
ret
js
and
clc
push
popf
call
jnp
adc
imul
aam
xchg
icebp
enter
pop
adc
or
jnp
stos
xchg
out
mov
jl
adc
shl
icebp
clc
or
push
jl
adc
pop
das
jno
jb
in
nop
sbb
mov
rorb
mov
pop
adc
subb
dec
push
bound
or
pop
adc
mov
pop
pushf
pop
stos
push
mov
adc
push
insl
fadd
ror
xchg
and
or
ja
jge
adc
push
sbb
xchg
pop
fstpl
stc
push
adc
popa
mov
adc
es
rolb
sub
inc
imul
pop
adc
mov
cmc
mov
jo
xchg
jbe
addl
push
fdivrs
adc
xlat
cltd
inc
test
jle
adc
std
loopne
pusha
mov
inc
adc
mov
pusha
mov
das
push
inc
roll
push
push
jle
adc
jmp
lret
inc
js
pop
adc
mov
outsb
pushf
outsl
fistl
xor
push
sarb
sub
ds
addb
cmpsb
xchg
mov
loop
push
and
push
es
sub
rol
jle
adc
pushf
stc
addl
test
adc
stc
ja
test
jle
adc
jge
mov
mov
adc
ret
jmp
pusha
mov
adc
push
scas
subb
adc
arpl
xchg
rorb
adc
add
pusha
addr16
dec
dec
jg
adc
outsb
imul
insb
lahf
jo
pop
adc
sarb
push
inc
jge
adc
adc
jle
dec
lcall
test
inc
pushf
addb
aam
or
push
xor
push
sub
sub
or
push
cld
mov
sub
mov
mov
fwait
add
push
and
addl
adc
outsl
cmpsb
inc
lock
xor
hlt
addb
adc
inc
addl
xchg
arpl
adc
dec
rcr
rclb
test
adc
pop
lret
xlat
out
push
lods
lahf
xchg
or
mov
subl
enter
mov
or
sub
std
cmpsl
xor
and
xor
addl
cmp
popa
les
inc
orl
adc
arpl
loop
stos
adc
push
je
pop
dec
arpl
pop
pop
cmpsb
xchg
xlat
nop
xlat
add
or
jnp
lret
inc
fsts
test
jmp
nop
addb
imul
dec
into
out
and
mov
aad
addb
cwtl
aam
cmp
insb
and
repz
test
dec
aaa
insb
aaa
cmp
jg
add
and
adc
dec
mov
push
mov
cli
int
icebp
mov
addr16
mov
or
addl
das
pusha
adc
pusha
jp
shl
aad
cmpsb
test
call
cmp
stc
icebp
xchg
sub
or
pop
addl
test
pop
mov
adc
addl
sbbl
mov
adc
data16
adc
jecxz
push
jnp
movsb
test
adc
rcrb
lea
push
enter
in
aas
mov
dec
in
sbb
lods
add
insb
test
stc
fld
xchg
insl
xchg
jno
loope
in
sub
test
adc
pop
push
xor
stos
pusha
and
int
dec
pushf
fldl
ja
fcompl
aas
mov
adc
sbb
adc
adc
in
cmp
scas
hlt
mov
jno
mov
xor
idivb
pop
adc
or
je
push
je
adc
jge
aaa
hlt
or
or
xchg
insl
adc
clc
rclb
xorl
aas
push
popa
jmp
mov
fnstenv
popa
xchg
mov
mov
shll
xchg
push
out
jnp
sbb
pop
adc
jbe
xchg
pushf
ds
pop
aad
mov
xchg
cwtl
adc
xchg
repnz
cmp
addb
pop
adc
ss
add
sbb
sbb
outsb
adc
adc
lea
fidivs
sbb
clc
aaa
shlb
mov
aaa
insb
lods
add
mov
xor
xor
je
mov
subb
aad
mov
mov
fdiv
loopne
pop
adc
jne
xor
xor
push
rolb
pop
fnstsw
push
rorl
inc
int3
pop
seta
xchg
or
cmp
pop
insl
rorb
ds
lcall
sub
adc
lea
mov
push
adc
cli
aaa
add
mov
and
xor
xor
xchg
call
add
adc
popa
xchg
xchg
adc
inc
pop
roll
xchg
les
cld
jge
sub
adc
enter
jmp
xchg
lds
loope
les
adc
and
push
push
jbe
jbe
push
dec
add
pop
adc
cmp
lods
push
inc
test
or
fdiv
xor
and
popa
xchg
daa
mov
sub
adc
xchg
outsb
jbe
dec
call
popa
xlat
in
outsl
add
imul
gs
inc
mov
inc
mov
fisttpll
jb
mov
adc
adc
add
insb
inc
in
test
sbb
sbb
push
stc
out
mov
loop
mov
cmp
scas
add
cs
cmp
and
or
popa
gs
jo
pop
adc
int3
cmp
jns
sub
pop
in
jg
xchg
dec
xchg
mov
adc
andb
cwtl
mov
pop
adc
jbe
xor
jmp
and
adc
pop
imul
push
bnd
jb
push
pop
jge
pop
fwait
and
sub
pop
adc
adc
rclb
mov
lods
dec
xchg
mov
adc
lret
jns
in
fisubrs
adcb
mov
adc
loop
movsl
in
cmp
xchg
int3
fmull
add
mov
fadds
add
cmp
jne
mov
lcall
jb
dec
mov
pusha
push
mov
adc
mov
jl
out
sbb
test
fisttps
add
mov
adc
jno
repnz
in
jmp
cmpsb
insb
aad
xlat
xor
popf
test
pop
adc
cmp
jb
and
into
loop
or
mov
adc
jnp
mov
pop
adc
stc
inc
or
fstpt
mov
je
jnp
cmp
xor
jg
mov
arpl
push
mov
repz
mov
pop
mov
adc
movsb
mov
mov
cmpb
cmpsl
push
aas
mov
sub
inc
jg,pt
pop
dec
fwait
push
cmp
imul
sti
fidivrs
mov
pushf
mov
adc
insl
cmp
insb
arpl
adc
pmuludq
jnp
mov
das
xchg
push
popf
sahf
jp
sti
and
scas
jmp
cwtl
lods
adc
dec
or
adc
and
aam
xchg
sub
pop
adc
fidivl
lock
andb
pop
adc
push
cmc
enter
jb
rol
lods
cmp
mov
adc
mov
lods
push
xchg
ss
mov
in
jo
mov
loope
jbe
xchg
out
lods
mov
adc
ret
es
add
pop
cmp
cmp
push
outsb
jle
fs
cmp
cmp
out
jbe
jnp
push
js
aas
sbb
and
inc
int
mov
adc
adc
aas
sub
jp
stc
popa
rolb
popa
shll
sbb
pop
adc
dec
adc
xor
xor
popl
adc
daa
enter
pop
mov
arpl
adc
add
fcoms
cmp
enter
sbb
or
adc
je
enter
test
push
push
adc
andb
aas
push
shlb
cmp
and
clc
enter
adc
push
push
adc
cld
dec
cmp
mov
popa
push
adc
enter
push
imul
adc
hlt
test
mov
pop
adc
or
xor
pop
adc
ret
and
inc
sub
pushf
leave
pop
adc
adc
test
mov
push
call
adc
int3
push
rolb
pop
adc
sub
push
adc
jle
mov
mov
push
push
adc
mov
or
xchg
mov
adc
lods
leave
pop
adc
adc
pop
push
roll
adc
sub
add
lret
test
adc
leave
xor
popa
push
adc
mov
adc
pop
call
pop
push
and
or
movb
adc
std
mov
push
push
adc
clc
in
mov
pusha
mov
xchg
insb
daa
inc
popa
push
adc
int3
pop
adc
cmp
cmp
jb
mov
adc
adc
int3
pop
adc
pop
adc
mov
sub
into
pop
adc
adc
js
cmp
mov
fmul
pop
adc
pop
adc
cmc
scas
pusha
or
push
push
push
adc
jo
in
aam
cli
clc
mov
jne
inc
popa
push
adc
lods
or
adc
or
sbb
inc
fdivrl
push
push
adc
js
dec
imul
push
adc
push
or
enter
pop
enter
jle
pop
mov
js
lods
sbb
popa
push
adc
or
push
or
loope
and
sub
js
movsb
and
test
push
adc
rorb
or
jl
jp
cli
push
push
adc
int3
call
mov
push
adc
or
les
sub
bound
mov
sbbl
popa
push
adc
loopne
or
scas
fs
ret
inc
push
in
add
push
adc
xadd
pop
xlat
aad
pusha
in
pop
xchg
push
adc
clc
or
fcoml
inc
ljmp
rclb
ret
test
push
push
adc
mov
fnstenv
push
adc
das
pop
movsl
cmp
push
adc
dec
sbbb
push
mov
adc
pop
cmp
mov
xor
cld
push
jle
fsubrs
xlat
fnstcw
inc
push
push
adc
mov
orb
test
bound
lods
dec
cmp
insb
mov
adc
addr16
ret
push
or
inc
arpl
mov
mov
sbb
insl
movsl
addb
adc
mov
in
and
adc
push
lock
mov
adc
dec
mov
aam
int3
mov
or
out
out
in
pop
adc
xor
mov
test
mov
adc
mov
adc
pop
adc
popf
rorb
adc
jbe
daa
sbb
xor
adc
inc
lods
aaa
insb
jle
es
push
or
sbb
popa
rcll
scas
and
push
pop
jle
or
or
mov
push
push
adc
and
popa
shll
sti
mov
adc
xor
xor
or
inc
loope
adc
lret
or
testl
mov
invd
adc
invd
adc
inc
xor
adcl
mov
add
invd
adc
mov
push
push
adc
and
roll
push
adc
jecxz
push
adcb
adc
or
push
push
adc
mov
push
stos
and
xchg
push
push
adc
rcll
mov
adc
push
sbb
mov
sarb
sbb
or
jl
lea
jecxz
push
mov
sbb
bound
ja
into
aaa
mov
adc
data16
push
mov
cs
inc
test
mov
adc
xchg
cmc
aas
les
adc
push
popf
add
int3
pop
adc
adc
testb
lods
xor
sahf
dec
or
add
pop
cmpsb
cmovae
ljmp
mov
bswap
sub
adc
psadbw
mov
adc
fstl
inc
mov
fimuls
test
add
mov
repz
test
pop
adc
sub
sarl
jmp
les
popa
rolb
sub
mov
adc
sbb
sbbb
leave
push
cld
mov
adc
lock
orb
cwtl
sbb
adc
mov
mov
or
xchg
mov
les
adc
ret
rclb
les
mov
arpl
push
or
cmp
pop
lods
mov
or
es
or
popa
mov
jb
adc
or
jns
shrl
std
push
and
or
mov
movsb
lret
movsb
push
or
fistps
or
mov
scas
sti
sub
fsubl
adc
xchg
mov
mov
stos
cli
addr16
int3
push
or
leave
call
mov
jge
invd
adc
add
invd
adc
insb
invd
adc
push
adc
and
invd
adc
mov
or
or
mov
pop
sub
or
ja
add
or
sti
cmpsl
xor
adc
adc
scas
.byte
.byte
add
add
fistl
nop
nop
mov
xchg
xchg
xchg
nop
nop
mov
nop
nop
call
xchg
xchg
xchg
nop
nop
mov
nop
nop
pop
xchg
xchg
xchg
nop
nop
mov
nop
nop
add
xchg
xchg
xchg
nop
nop
mov
nop
nop
mov
xchg
xchg
xchg
nop
nop
mov
nop
nop
xor
xchg
xchg
xchg
nop
nop
mov
nop
nop
ret
xchg
xchg
xchg
nop
nop
mov
nop
nop
popl
xchg
xchg
xchg
nop
nop
mov
nop
nop
add
xchg
xchg
xchg
nop
nop
mov
nop
nop
push
xchg
xchg
xchg
nop
nop
mov
nop
nop
push
xchg
xchg
xchg
nop
nop
mov
nop
nop
push
xchg
xchg
xchg
nop
nop
mov
nop
nop
push
xchg
xchg
xchg
nop
nop
mov
nop
nop
jmp
idiv
leave
pop
sub
and
fildl
mov
nop
nop
call
xchg
xchg
xchg
nop
nop
mov
nop
nop
subl
xchg
xchg
xchg
nop
nop
mov
nop
nop
mov
xchg
xchg
xchg
nop
nop
mov
nop
nop
mov
xchg
xchg
xchg
nop
nop
mov
nop
nop
and
xchg
xchg
xchg
nop
nop
mov
nop
nop
add
xchg
xchg
xchg
nop
nop
mov
nop
nop
mov
xchg
xchg
xchg
nop
nop
mov
nop
nop
mov
xchg
xchg
xchg
nop
nop
mov
nop
nop
movzwl
xchg
xchg
xchg
nop
nop
mov
nop
nop
add
xchg
xchg
xchg
nop
nop
mov
nop
nop
cltd
xchg
xchg
xchg
nop
nop
mov
nop
nop
mov
xchg
xchg
xchg
nop
nop
mov
nop
nop
div
xchg
xchg
xchg
nop
nop
mov
nop
nop
xor
xchg
xchg
xchg
nop
nop
mov
nop
nop
xor
xchg
xchg
xchg
nop
nop
mov
nop
nop
ror
xchg
xchg
xchg
nop
nop
mov
nop
nop
inc
xchg
xchg
xchg
nop
nop
mov
nop
nop
cmp
xchg
xchg
xchg
nop
nop
mov
nop
nop
jl
xchg
xchg
xchg
nop
nop
mov
nop
nop
call
xchg
xchg
xchg
nop
nop
mov
nop
nop
pop
xchg
xchg
xchg
nop
nop
mov
nop
nop
test
xchg
xchg
xchg
nop
nop
mov
nop
nop
je
xchg
xchg
xchg
nop
nop
mov
nop
nop
dec
xchg
xchg
xchg
nop
nop
mov
nop
nop
je
xchg
xchg
xchg
nop
nop
mov
nop
nop
dec
xchg
xchg
xchg
nop
nop
mov
nop
nop
je
xchg
xchg
xchg
nop
nop
mov
nop
nop
xor
xchg
xchg
xchg
nop
nop
mov
nop
nop
ror
xchg
xchg
xchg
nop
nop
mov
nop
nop
xor
xchg
xchg
xchg
nop
nop
mov
nop
nop
cmpw
xchg
xchg
xchg
nop
nop
mov
nop
nop
je
xchg
xchg
xchg
nop
nop
mov
nop
nop
sub
xchg
xchg
xchg
nop
nop
mov
nop
nop
and
xchg
xchg
xchg
nop
nop
mov
nop
nop
jmp
xchg
xchg
xchg
nop
nop
mov
nop
nop
add
xchg
xchg
xchg
nop
nop
mov
nop
nop
mov
xchg
xchg
xchg
nop
nop
mov
nop
nop
cmpw
xchg
xchg
xchg
nop
nop
mov
nop
nop
jne
xchg
xchg
xchg
nop
nop
mov
nop
nop
and
xchg
xchg
xchg
nop
nop
mov
nop
nop
pop
xchg
xchg
xchg
nop
nop
mov
nop
nop
mov
xchg
xchg
xchg
nop
nop
mov
nop
nop
jmp
xchg
xchg
xchg
nop
nop
mov
nop
nop
xor
xchg
xchg
xchg
nop
nop
mov
nop
nop
jmp
xchg
xchg
xchg
nop
nop
mov
nop
nop
xor
xchg
xchg
xchg
nop
nop
mov
nop
nop
jmp
add
push
in
aad
adc
jnp
iret
dec
mov
in
daa
adc
stc
xchg
jo
stc
leave
pop
pop
cld
fs
sti
xor
addr16
pop
mov
sbb
fidivrl
sub
in
mov
jbe
mov
cmp
mov
sbb
xchg
jg
pop
les
and
addr16
sbb
mov
xor
push
in
mov
insb
bound
mov
inc
adc
jg
scas
hlt
xor
imul
sub
or
andl
adc
out
je
sub
fldpi
stc
fisubrl
jne
dec
idivb
out
fucom
xchg
jp
dec
leave
pop
idiv
out
ljmp
push
scas
ret
jno
rclb
xor
and
sarb
out
mov
xlat
hlt
cmp
sub
fdivs
lahf
pop
test
or
daa
es
inc
sbb
inc
jp
jbe
mov
and
mov
cmpsb
das
nop
outsl
out
lret
dec
divb
mov
sbb
or
mov
mov
mov
cmp
adc
jnp
int
out
inc
pushf
xchg
aad
dec
imul
xor
sbb
std
pusha
jnp
jecxz
xlat
pushf
jne
mov
xchg
mov
mov
mov
fmul
ss
pop
lods
jle
ficompl
mov
jnp
mov
mov
icebp
dec
cmpsl
aad
pop
and
lret
jbe
pop
adc
ljmp
scas
and
sahf
gs
addr16
or
shl
insl
in
xlat
call
mov
iret
push
mov
leave
pop
jl
shlb
push
or
ret
xlat
sahf
jne
cmpsb
cmp
mov
xchg
fisttpll
popf
mov
fmul
ss
pop
lods
imul
repnz
push
push
push
js
or
dec
sbbl
loope
xlat
ds
pop
nop
sub
divb
popa
cmp
iret
rolb
mov
ret
ja
sbb
enter
mov
rcll
sbb
cld
jg
repz
fisttpl
jno
mov
nop
sbb
cwtl
push
sub
out
push
adc
ljmp
dec
lahf
dec
and
sub
cmpxchg
pushf
or
repz
jle
mov
jnp
push
mov
iret
dec
out
bound
js
repz
clc
inc
stc
leave
pop
notl
insl
and
shlb
pop
jl
pushf
inc
mov
pop
shl
int
fildll
clc
xor
xchg
mov
dec
jge
scas
sti
cld
mov
jmp
jp
shlb
cmc
bnd
les
fsubrl
push
jb
leave
scas
sti
ja
arpl
cmp
jnp
push
cmc
sbb
dec
std
out
jnp
add
call
mov
div
jg
inc
jno
jmp
mov
movsl
insb
push
or
cwtl
jl
mov
and
jo
push
aam
mov
add
push
out
dec
cmpsb
insl
mov
jb
or
mov
cmp
pop
xchg
lcall
jnp
push
lock
or
pop
in
sbb
sbb
push
and
inc
out
lcall
fsin
pop
lods
ds
dec
neg
adc
repnz
jb
cld
fs
sarb
xchg
xor
push
scas
xor
ja
dec
jge
pop
movsb
ret
cmp
xchg
mov
idiv
fs
lret
sarl
out
lret
adc
sub
insl
out
mov
ja
fs
sti
iret
pusha
outsb
pop
jle
jmp
into
and
je
xor
scas
clc
dec
jo
testl
lcall
out
mov
ficompl
adc
mov
insb
push
in
jnp
mov
ja
pushf
scas
xchg
xlat
ds
sbb
lret
mov
es
jp
mov
ds
gs
sub
ja
inc
cmp
or
xor
movsb
sub
mov
xor
jl
push
jge
fdivl
bound
xor
adc
pop
iret
dec
jnp
mov
xor
push
inc
ljmp
mov
ds
int
out
mov
out
lock
inc
sbb
pop
cli
adcl
push
mov
jmp
ficoml
xor
push
repz
lods
push
mov
ja
aaa
js
mov
cmp
lcall
cmp
nop
pop
inc
pop
in
inc
sbb
adc
lcall
jmp
add
dec
jnp
adc
xor
addr16
jl
pop
sub
std
in
xchg
jmp
dec
lret
fidivl
push
rol
mov
das
jp
push
sbb
inc
sbb
sub
ss
pop
decl
push
mov
mov
ds
shll
shll
rcrb
idivb
pusha
jae
out
cmp
dec
lds
xor
mov
not
jg
mov
pop
sbb
jne
lahf
stc
or
jl
push
mov
xchg
insl
cmp
mov
cmp
adc
sbb
daa
push
jge
pop
negb
pop
jb
mov
cmp
lods
cld
adc
add
negb
add
mov
adc
adc
pusha
outsl
or
stc
jo,pt
jnp
insb
add
jg
fs
sti
jne
inc
idivb
dec
pusha
jae
addr16
iret
dec
jnp
stc
lods
clc
push
js
fdivp
stc
leave
and
inc
addr16
stc
jle
jmp
jp
dec
xlat
xchg
jecxz
movsb
dec
neg
insb
jmp
mov
inc
adc
and
cmp
jnp
push
scas
jae
test
mov
mov
loop
sti
iret
mov
fstpt
xlat
mov
push
mov
fcmovb
jne
into
scas
ds
fs
xor
mov
movsl
inc
in
jmp
lods
lahf
shrb
mov
sbb
inc
adc
sub
fisubrs
mov
stos
jo
push
add
ds
sbb
mov
or
mov
stos
ja
shlb
dec
jo
mov
popa
cmp
pop
push
test
pushl
ss
lods
or
lock
outsb
enter
jge
fstps
push
mov
lahf
xor
jnp
call
rcll
out
ljmp
adc
shr
lahf
nop
inc
jnp
lahf
lock
imul
out
rclb
jne
scas
jo
call
and
xor
adc
sbb
daa
push
jge
pop
negb
pop
jb
mov
cmp
lods
cld
adc
add
negb
add
mov
jo
ds
mov
daa
in
jne
dec
jae
shlb
stos
arpl
add
sub
jb
xor
push
scas
into
mov
xchg
push
ficompl
jge
scas
jnp
out
ss
arpl
adc
jb
mov
scas
xchg
jmp
aas
test
or
shrb
adc
ds
clc
inc
fildl
ret
into
sub
rcr
lea
test
cmpsl
jmp
cmp
push
xor
or
mov
and
sahf
mov
insl
mov
sub
dec
jge
cld
cmc
ret
xchg
mov
popl
fwait
push
adc
cmp
andl
cld
sbb
or
int3
movsl
sbb
inc
out
test
inc
in
sub
lods
lahf
mov
sahf
dec
adc
sub
fisubrs
mov
insl
sub
scas
jge
inc
es
cmp
xor
call
add
xor
mov
repz
cmp
xchg
das
pop
negb
or
mov
out
or
inc
enter
sub
jae
cmp
mov
sbb
jle
aaa
xor
movsb
jge
jp
mov
mov
out
xchg
xchg
mov
xor
xor
daa
jnp
repz
addb
mov
or
pop
pushf
pusha
pusha
adc
aaa
dec
andl
xor
mov
mov
add
dec
xlat
or
fwait
mov
divb
mov
clc
outsb
dec
enter
loope
hlt
jns
sub
mov
jp
iret
dec
lock
ja
lock
fwait
xlat
jp
ss
add
and
hlt
cmp
jnp
push
xor
test
gs
mov
fisttpll
iret
mov
andl
sahf
rol
rcrb
fadds
xchg
mov
add
dec
xlat
or
add
adc
push
imul
mov
cmp
into
jl
test
xor
sub
cmp
lods
dec
dec
lcall
sub
testb
add
bound
sbb
fidivs
mov
fstl
push
push
call
sbb
pop
cmp
mov
jnp
rorb
mov
ja
xor
pop
testl
je
push
shlb
ds
test
sub
adc
inc
sbb
mov
movsl
inc
jmp
add
jmp
aas
jecxz
pop
lods
xor
test
sbb
or
rclb
xchg
ss
add
gs
clc
sbb
fdivr
sbb
adc
inc
inc
pop
test
test
jo
mov
sti
cld
out
sub
orl
adc
adc
sbb
test
xchg
pop
jl
cmp
adcl
jne
les
and
insb
ss
pop
inc
mov
es
mov
sbbl
inc
adc
mov
mov
in
xchg
xchg
mov
fnstenv
fisubrl
inc
adc
and
or
loop
push
mov
cld
xchg
pop
hlt
jmp
sub
shlb
adc
movsb
mov
mov
push
out
xchg
or
inc
insl
inc
andl
mov
outsl
cmp
aas
int3
lods
push
mov
mov
sarb
ljmp
push
test
sbb
mov
jbe
mov
cli
jne
xchg
addb
mov
lcall
cmp
mov
cmp
pop
pop
mov
cmp
es
shrb
mov
push
repz
lods
sub
add
cmp
ds
jecxz
push
mov
mov
xchg
stos
push
mov
jmp
sti
cld
mov
lret
mov
mov
or
jl
push
push
inc
adc
pop
jl
cmp
jecxz
lcall
pushf
test
or
cmovle
pop
movsb
push
push
shl
stos
jl
and
loop
scas
push
fdivr
mov
pop
pop
fimull
push
mov
ds
sti
mov
jl
sub
cmpl
sahf
xchg
lds
xor
test
out
cmp
jl
push
add
xor
jl
pop
cmpsl
rol
int
lahf
idivb
lods
fadds
js
push
or
ss
orl
sbb
adc
mov
call
insb
inc
sar
leave
pop
jnp
popa
out
mov
xchg
mov
mov
xor
mov
movsl
insb
push
or
cwtl
jl
mov
out
cli
div
aaa
incb
lret
dec
mov
jae
push
movsl
inc
push
or
cwtl
jl
mov
cltd
mov
fs
sti
cld
cmp
andl
cld
sbb
or
idivl
out
cmp
cld
push
adc
push
ss
insb
out
imul
dec
mul
xchg
in
mov
pop
mov
sub
stos
and
jge
jl
pop
sti
cld
out
mov
mov
jmp
sbb
jl
data16
or
jp
mov
fs
sti
cmc
negl
divb
call
xlat
mov
aaa
sub
insb
mov
idiv
fs
jle
mov
jmp
mov
jge
or
mov
sbb
or
push
ss
jo
mov
in
jle
jbe
adc
cmp
aaa
sbb
iret
jecxz
dec
sbb
fwait
sub
jg
push
jp
es
xor
jne
les
adc
test
push
cmc
sbb
ss
mov
add
enter
shrl
dec
xor
clc
pusha
mov
mov
pop
add
mov
call
fildll
inc
sar
pop
push
sub
jmp
push
ss
jo
and
addb
insl
ljmp
and
int3
jl
jbe
inc
or
leave
aad
mov
adc
es
pop
in
pop
or
inc
sbb
inc
adc
push
add
fwait
and
jp
bound
lock
jp
xlat
dec
adc
js
fwait
mov
in
sbb
add
les
fldenv
inc
adc
pop
jp
ds
add
icebp
xchg
mov
xchg
andb
jb
dec
not
push
mov
cmp
lds
cmpb
aas
aas
ftst
sub
scas
mov
mov
jp
mov
imul
out
orl
add
mov
lret
fdiv
nop
adc
test
adc
daa
idivb
cmp
xor
idivb
adc
inc
gs
mov
jge
mov
iret
mov
inc
push
les
adc
test
xchg
xor
int
mov
mov
push
scas
outsl
pop
add
inc
add
imul
mov
cmp
bound
add
fcomip
push
shlb
lcall
fucom
xchg
dec
pop
jp
outsb
add
fwait
inc
hlt
ja
out
andl
lock
push
dec
sub
fdivrs
sbb
and
pushf
jne
bound
xor
xor
jae
cmpsb
pop
xchg
mov
fisttpll
iret
mov
or
rolb
daa
nop
sarb
xchg
sbb
fnsave
std
in
sub
mov
idivb
addr16
mov
or
outsl
jg
cwtl
sbb
push
mov
xor
or
shrl
jb
scas
test
out
mov
xor
pop
add
addr16
push
mov
xor
popa
cmpb
or
push
mov
or
mov
adc
out
loop
scas
push
fdivr
mov
sbb
or
cmovle
pop
movsb
push
cmp
mov
out
loop
scas
push
fdivrl
or
lahf
dec
notb
fadds
or
jecxz
push
fwait
push
sti
andb
rol
jne
nop
jp
xor
mov
idiv
inc
ljmp
mov
mov
imul
jbe
dec
or
dec
sahf
repz
adc
lahf
addr16
or
outsl
jg
sbb
inc
add
fwait
inc
hlt
cmc
aaa
iret
mov
es
xchg
arpl
sbb
jne
pop
idiv
out
sub
or
jb
shrl
dec
cld
jp
sbb
dec
xor
push
aad
xchg
pop
xor
add
gs
clc
pop
inc
adc
xor
push
jle
mov
dec
jge
iret
rolb
jmp
loope
mov
fldenv
daa
jecxz
xchg
out
pop
stos
aas
xlat
jmp
cmp
push
mov
add
mov
jge
xor
mov
in
pusha
mov
jp
scas
aad
insb
inc
gs
push
inc
mov
xchg
jbe
inc
sub
xor
mov
jnp
cmp
iret
bnd
push
add
ss
lock
inc
jno
dec
adc
jne
dec
adc
hlt
imulb
je
loope
jle
xchg
push
adcb
scas
outsl
adc
xchg
inc
or
jge
jnp
repz
ss
mov
or
dec
cld
xor
dec
push
push
lahf
dec
testb
out
fsts
insb
inc
add
push
fwait
push
js
mov
clc
jp
adc
mov
or
pop
out
icebp
js
scas
es
outsb
jb
xchg
cmp
cmc
testl
pusha
pusha
addr16
ret
mov
ja
sbb
pop
sti
cld
xchg
pop
hlt
jmp
and
shlb
adc
in
xorb
jne
out
fldl
inc
insl
inc
leave
test
jmp
xlat
pusha
jae
cmp
jmp
int3
lods
push
mov
mov
or
dec
cld
cmp
ljmp
push
mov
adc
xchg
pop
notl
and
call
jb
mov
int
pusha
pusha
outsl
pop
fstpt
clc
repz
mov
jle
xchg
push
xor
daa
mov
lahf
jecxz
push
mov
call
jg
add
jmp
sti
jle
fmul
in
ljmp
mov
or
aaa
dec
sbb
fimuls
jle
test
out
or
cmc
jp
pusha
jnp
sub
dec
push
scas
jo
outsb
bound
mov
fnsave
clc
inc
ljmp
movsl
pusha
jnp
sbb
push
scas
std
sbb
bound
idiv
leave
mov
add
and
rcrb
push
imul
fiaddl
push
ss
fcoms
shl
mov
sbb
pusha
addr16
or
stos
push
sub
insb
mov
fisttps
fwait
push
jo
lcall
dec
out
sahf
lea
jle
ret
sbb
xchg
add
push
jo
cwtl
pop
xor
leave
mov
adc
imulb
lock
inc
add
xlat
jle
xchg
push
xor
das
enter
cmpsl
lahf
cwtl
pop
inc
lret
sbb
lock
pop
nop
cmc
ljmp
and
cmc
out
hlt
xor
pusha
mov
int3
ss
mov
push
and
mov
div
loopne
cld
cld
mov
cmp
push
cmpsb
lret
xchg
lahf
lahf
divb
inc
mov
clc
push
js
mov
adc
out
jl
aas
sbb
shlb
nop
adc
dec
cmp
repnz
inc
or
scas
or
clc
xor
outsb
jae
adc
insb
bound
stos
sbb
and
jle
xlat
idivb
cmp
les
out
xor
leave
test
or
cmc
pop
add
rclb
ja
jg
daa
mov
push
sbb
pop
sub
mov
divb
inc
cmp
xor
cld
fisubrl
insb
inc
lret
sbb
lock
jb
loop
mov
outsb
xchg
jnp
push
or
lahf
in
cmpb
arpl
fadds
mov
jle
inc
sub
pusha
adc
pop
jge
and
xchg
ret
push
aas
adc
lahf
jle
mov
aaa
and
fucomip
cmp
in
ja
es
push
rcll
es
sbb
push
mov
sub
aaa
das
mov
mov
or
mov
cmp
cmp
nop
sub
cs
mov
rolb
sbb
mov
enter
popf
leave
es
sahf
xor
push
movsl
inc
push
or
cwtl
jl
mov
aad
sbb
outsl
cli
jne
aaa
incb
cmp
dec
sub
jae
push
movsl
inc
add
addr16
cltd
mov
leave
scas
sti
cld
out
push
popf
mov
xor
sbb
int3
xor
outsb
mov
sbb
cmp
testb
fwait
push
sarl
jmp
adc
cmpl
aaa
jnp
ja
mov
pop
jne
pop
jo
push
pop
cmp
push
scas
ficomps
jae
cmp
test
das
ss
jecxz
pop
sti
lret
mov
mov
adc
pop
mov
mov
or
dec
adc
or
pusha
jnp
sbb
push
scas
std
sbb
bound
add
mov
xor
adc
out
jbe
decb
jl
add
daa
jnp
add
xor
sub
imul
inc
sub
sbb
andl
pop
sbb
test
out
scas
gs
lahf
pop
out
loop
sub
pushf
pop
aad
lock
inc
add
mov
jb
pushf
sub
xlat
jge
inc
sbb
imul
xor
mov
addr16
dec
or
jno
sti
cld
sub
aas
fldenv
outsl
leave
mov
dec
divb
sti
pushf
or
jb
mov
adc
mov
cmpb
jmp
sub
pop
cmp
test
pop
xchg
mov
inc
mov
cli
ja
daa
mov
iret
cmp
aas
les
cmp
mov
fisttpll
ja
cmp
or
mov
out
js
popa
add
fnstsw
std
in
sub
addb
dec
mov
mov
jp
insl
sbb
ss
adc
sub
mov
idivb
bound
les
cmp
test
outsb
xor
aaa
aas
mov
or
jnp
dec
cmp
in
mov
inc
add
dec
jnp
out
cmp
add
enter
xchg
sub
jp
fidivrl
jmp
mov
out
js
add
test
add
jno
jae
in
xchg
jmp
lahf
sbb
fcoms
sbb
fstpl
std
in
sub
mov
incb
in
add
iret
fs
stos
arpl
or
mov
jns
mov
das
adc
mov
leave
mov
cli
jnp
dec
dec
divps
mov
jle
jne
add
fdiv
sti
push
sbb
sahf
push
imul
pop
fwait
lea
or
lret
in
mov
xor
push
scas
jae
cmp
mov
test
js
add
mov
inc
scas
sti
jle
es
push
pusha
jnp
out
lock
mov
ret
sub
insb
ss
add
mov
dec
xor
jne,pt
outsl
cmp
stc
or
out
mov
daa
jb
pop
or
jg
sub
pusha
fs
sbb
clc
sub
sbb
dec
mov
xchg
popa
cmp
pop
push
test
cmp
es
adc
rorb
mov
outsb
adc
lcall
test
mov
mov
leave
pop
clc
dec
lods
outsb
adc
mov
pop
call
cld
jp
push
ja
xor
fucomp
xchg
jl
and
rorl
ss
hlt
inc
gs
cmc
aas
push
enter
sahf
adc
add
mov
pop
and
gs
or
scas
cmp
and
mov
xor
adc
xchg
dec
divl
mov
mov
stc
jb
mov
adc
and
xchg
arpl
jbe
push
scas
rcrb
xchg
lahf
dec
idivb
sbb
cld
jle
adc
sub
xor
xor
idivb
aam
arpl
mov
enter
lds
push
xor
add
inc
add
or
sub
addr16
ss
dec
sahf
cli
jne
dec
incb
push
testl
add
inc
add
imul
mov
stos
sbb
pop
idiv
out
sub
dec
sub
shll
daa
sbb
inc
mov
sub
insb
cmp
cld
dec
sub
push
fwait
and
sub
sub
mov
jg
and
adc
mov
aad
sbb
push
add
movsb
hlt
sti
push
sbb
arpl
xor
add
sbb
mov
leave
pop
jo
mov
cmp
pushf
pop
pop
fimull
sbb
push
jb
dec
fdivrl
xchg
xlat
jge
sbb
mov
mov
mov
ds
repnz
fildl
fwait
push
js
push
and
mov
test
jmp
cmp
out
stos
add
jl
cmp
lcall
gs
aad
sub
out
xor
xchg
dec
push
jo
out
or
cmc
aaa
addr16
ja
gs
or
lcall
jmp
sbb
cmp
pop
push
pushf
xor
bound
pop
mov
xor
lock
pop
nop
cmc
cli
js
loop
mov
and
iret
pusha
outsb
pop
jle
jmp
into
and
jae
cmp
mov
pop
push
jo
mov
addb
fldcw
adc
les
adc
test
xchg
xor
push
aas
mov
mov
push
scas
outsl
mov
stc
or
cld
and
lahf
pop
in
imul
call
jge
ftst
mov
movsl
adc
push
dec
xor
je
out
jg
jle
test
push
in
scas
jo
inc
push
xchg
popa
push
cmpsb
into
out
or
dec
inc
or
stos
adc
and
fnstcw
xchg
popa
cmp
pop
push
test
fucom
daa
jnp
xchg
jb
stos
or
pop
cmp
leave
es
ret
xor
mov
insb
ret
lods
int
push
cmpsb
xchg
add
aaa
mov
sbb
xor
mov
out
lods
out
adc
repnz
sbb
repz
loop
js
mov
jne
lahf
idivb
out
pop
call
and
xchg
pop
or
shrl
or
stc
out
sbb
pop
dec
nop
mov
iret
xchg
cmp
inc
es
sbb
sbb
inc
or
push
mov
xchg
test
pop
ljmp
mov
adc
xchg
dec
testb
dec
jecxz
ret
pop
dec
out
loopne
repnz
push
popf
aas
xchg
imul
call
and
cmpsb
fs
stos
cmp
loopne
xacquire
andl
pop
mov
mov
cli
aam
mov
inc
scas
mov
lock
repnz
dec
ja
xor
inc
dec
pusha
