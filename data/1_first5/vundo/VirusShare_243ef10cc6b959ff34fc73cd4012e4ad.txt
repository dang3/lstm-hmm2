jb
add
dec
add
outsb
add
dec
add
add
insb
add
add
je
add
add
jb
popa
add
add
outsb
add
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
popa
add
add
outsb
add
add
je
imul
push
add
je
insb
add
add
dec
add
je
push
add
popa
add
imul
add
add
add
jne
je
je
outsl
add
inc
add
add
jb
outsb
add
je
add
popa
add
add
add
outsb
add
outsl
add
imul
outsl
add
add
add
dec
add
data16
push
add
js
je
add
add
inc
add
je
je
outsl
add
dec
add
add
je
add
inc
add
je
je
outsl
add
inc
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
dec
add
insb
add
add
je
add
dec
add
popa
add
je
imul
push
add
je
insb
add
push
add
js
je
add
inc
add
je
je
outsl
add
push
add
js
je
add
add
inc
add
popa
add
push
add
js
je
add
add
inc
add
je
je
outsl
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
inc
add
arpl
add
add
add
imul
add
je
push
add
js
je
add
dec
add
insb
add
add
je
add
inc
add
jo
push
add
jb
imul
add
popa
add
add
add
add
outsb
add
in
lods
in
call
loope
mov
or
add
push
add
add
add
test
mov
add
add
add
add
test
add
add
add
scas
add
str
add
add
add
add
or
inc
add
add
add
add
add
add
mov
add
add
sbb
add
add
add
add
add
add
push
int
addb
add
adc
jl
and
add
iret
push
out
rolb
stos
add
str
add
add
add
iret
push
inc
add
add
add
test
xor
and
add
push
test
xchg
add
add
add
add
push
int
mov
xor
inc
add
add
add
add
add
iret
push
out
mov
stos
add
ltr
or
in
inc
add
push
das
add
add
add
add
add
push
addb
add
add
jne
add
push
add
add
add
add
add
or
nop
add
mov
inc
add
add
add
pop
add
add
add
jnp
mov
jo
adc
add
xor
test
inc
add
add
add
jne
rolb
add
add
add
in
nop
add
push
ret
add
add
jge
add
or
adc
cltd
add
add
adc
nop
add
lods
add
add
add
add
sub
in
roll
add
cltd
add
dec
add
add
mov
in
cmp
adc
and
xor
inc
add
int
and
add
add
add
add
add
add
xor
rolb
inc
add
add
mov
in
mov
add
add
xor
test
add
add
add
add
add
jne
in
addl
xor
test
inc
add
add
imul
add
add
jmp
or
imul
xor
pop
add
add
test
add
add
inc
add
add
add
add
rolb
dec
add
add
add
add
test
add
add
add
add
ss
add
add
xchg
add
add
add
bound
in
arpl
xor
in
add
test
add
add
mov
rolb
sbb
add
add
add
mov
push
xchg
add
add
verr
add
add
add
add
add
add
mov
in
ljmp
add
add
add
add
add
add
mov
in
lahf
add
add
add
add
add
add
add
jno
ret
add
add
add
add
add
add
add
add
add
add
add
add
scas
add
add
test
xchg
add
add
add
add
add
add
mov
add
add
out
in
sub
pop
add
inc
add
add
add
inc
add
add
add
add
add
add
mov
xchg
add
add
add
add
add
inc
add
add
add
add
add
add
xchg
add
adc
add
add
add
add
add
add
add
add
add
add
sub
mov
mov
dec
xchg
aas
popa
clc
mov
insl
in
enter
lret
hlt
loop
jns
mov
insl
cmp
das
dec
shlb
fdivrp
ljmp
pop
aam
add
xchg
xlat
and
sub
in
jg
dec
mov
scas
fcoml
dec
jb
out
fsubs
add
lds
inc
adc
dec
insb
or
push
popf
shll
lods
jo
or
repz
imul
pop
mov
iret
dec
dec
ret
adc
sbb
mov
cltd
or
adc
cli
orb
jp
mov
ss
repnz
add
stos
ljmp
call
mov
ret
mov
sahf
rorl
scas
imul
jne
fucomip
hlt
fistps
xchg
out
mov
mov
add
mov
fwait
cltd
hlt
xor
adc
xchg
inc
mov
mov
popf
popa
out
movsb
mov
dec
je
and
inc
push
outsl
push
pop
sub
push
cmp
dec
enter
sbb
inc
jnp
aad
fld
dec
add
dec
push
lcall
hlt
ljmp
and
lret
adc
jo
pop
movsb
pop
scas
mov
lret
rorb
xchg
mov
jmp
cwtl
fdivl
xor
add
je
adc
shlb
xorb
cwtl
movsl
repz
pop
xchg
pop
ss
dec
adc
shl
lods
and
imul
loope
ds
lock
roll
push
das
mov
adc
adc
xchg
ss
shll
lcall
and
pop
pushl
rcrl
inc
and
out
lock
in
outsb
or
or
int
xor
sbb
mov
repnz
es
cs
inc
adc
mov
adc
daa
jp
out
setbe
cmpsb
mov
outsb
mov
imul
jae
negb
cwtl
lods
out
cmp
dec
cli
add
arpl
mov
rclb
inc
sahf
movsb
inc
push
sti
jg
cltd
scas
movsl
xorb
in
and
test
ja
push
push
push
popf
mov
xchg
push
mov
xorb
push
scas
sub
push
shll
sub
popa
add
cmp
test
es
ret
rol
outsb
into
je
jmp
mov
or
shlb
and
dec
dec
dec
sahf
inc
sbb
cmp
insb
and
aas
push
mov
bound
fnsave
aad
push
mov
or
or
mov
pop
cmp
sub
cmc
aaa
inc
testl
dec
adc
data16
sub
popa
jmp
pop
and
out
in
add
add
add
add
add
add
add
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
push
mov
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
push
call
mov
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
scas
insl
mov
pop
loopne
mov
sub
ds
push
int
jle
dec
lea
scas
insl
mov
pop
out
sub
ficomps
jp
push
jle
dec
iret
pop
popf
scas
insl
mov
pop
out
sub
ficomps
jge
xor
push
call
xor
std
and
or
ljmp
in
jae
cmc
cwtl
dec
pop
in
outsb
ss
test
pop
and
sub
mov
lds
sub
add
fwait
push
xchg
fsubrs
dec
frstor
outsl
inc
mov
out
in
mov
xor
adc
or
idivl
jb
adc
js
clc
sbbl
cmp
cs
xorl
lea
jb
adc
lret
enter
sub
sub
sbb
sahf
ds
stos
push
xor
inc
scas
jb
adc
xchg
push
pop
aas
mov
js
std
jle
push
std
neg
pop
fcoml
jg
dec
cltd
ss
lock
mov
pop
out
sub
ficomps
push
int
jle
dec
lea
call
and
xor
inc
mov
stos
inc
lahf
dec
outsl
mov
mov
jb
or
pop
into
or
int3
jg
dec
sti
das
test
xchg
pop
into
jp
sbb
dec
lods
pop
mov
into
sub
cmp
pop
int
and
cs
lahf
cmp
sub
ficomps
push
int
jle
dec
lea
scas
insl
mov
pop
out
sub
ficomps
push
int
jle
dec
lea
scas
insl
sbb
loope
xlat
mov
mov
xlat
adc
mov
repnz
jns
sarl
jge
sbb
fnsave
cmp
std
outsb
roll
add
sbb
in
sbb
mov
outsb
in
dec
inc
jo
movsl
jns
xor
cwtl
ret
sub
aaa
ficoml
idivl
add
add
xchg
mov
cmpsl
and
push
and
inc
jecxz
xchg
adc
mov
xchg
adc
cmp
pop
sbb
mov
enter
adc
or
sbb
call
xchg
push
pop
mov
mov
mov
shlb
movsl
cwtl
push
sub
mov
je
in
jno
les
ds
mov
imul
cmp
jmp
and
outsl
fistl
nop
and
inc
sbb
mov
sbb
jg
dec
mov
aaa
addr16
shrl
int3
int3
testl
cltd
adc
lods
stos
pop
cwtl
dec
je
jb
outsl
mov
fldenv
sub
dec
dec
loope
xor
add
in
cmc
mov
dec
stc
dec
and
push
lahf
loope
add
outsl
dec
into
mov
lds
stc
pop
rclb
lods
fldenv
daa
lahf
or
std
pop
daa
pop
add
les
imul
cmp
cmp
xchg
out
scas
popa
lahf
popf
sbb
mov
mov
cld
inc
xchg
test
insb
mov
inc
dec
test
dec
mov
xchg
cwtl
inc
fs
pop
xor
inc
dec
sub
mov
pop
sub
adc
pushf
cmc
mov
sarl
andb
lret
cld
jl
mov
ds
jecxz
cmp
loopne
add
mov
mov
add
xlat
stos
out
sbb
cmp
adc
imul
insl
dec
cwtl
xchg
mov
cli
movsl
cmp
sbb
movsb
bound
decl
inc
mov
lds
adc
das
jg
scas
add
jno
xor
xor
jae
mov
cld
jmp
adc
pop
inc
xor
data16
inc
loop
lds
lds
lret
stos
and
mov
inc
dec
or
dec
xchg
push
addl
xchg
lret
sbb
dec
call
enter
cs
fldl
mov
ja
movsl
sub
inc
lahf
jle
test
iret
hlt
lods
xchg
mov
ljmp
push
dec
sub
fmul
jno
clc
sahf
shll
sub
loopne
add
hlt
mov
push
repnz
gs
sbb
push
frstpm(287
xor
add
and
roll
lods
dec
leave
xor
and
dec
xlat
push
test
and
mov
mov
sbb
iret
dec
push
xor
inc
dec
shlb
lock
add
cwtl
and
lret
sub
int
xchg
mov
cmpsb
movsb
add
push
insl
xor
mov
sbb
dec
lock
cmp
jo
jb
adcb
jmp
rcrl
jmp
xacquire
clc
negb
xor
xchg
xchg
push
cmp
lahf
ss
sub
sbb
bound
push
js
jecxz
ds
mov
sti
addr16
mov
adc
xlat
fdivrp
mov
jp
popa
jge
jmp
or
mov
test
and
mov
cmpsl
movsl
clc
lods
add
cmp
mov
xor
mov
mov
ja
repnz
xchg
inc
fcmovnbe
imul
bound
ljmp
movsl
cmp
adc
xor
out
mov
sbb
outsl
dec
insb
loope
rcll
inc
loope
repz
or
inc
enter
mov
in
loope
clc
bound
push
test
lea
push
and
lock
outsl
pop
insl
mov
pop
dec
push
pop
jp
out
xor
add
add
lds
dec
or
jmp
xor
rcrl
mov
aas
xchg
xchg
sub
cmpsl
imul
sub
adc
push
movsb
call
stc
cmp
add
aad
mov
cmp
push
mov
xchg
ja
sahf
xchg
in
lods
sahf
push
into
icebp
xchg
lret
ret
jb
lret
mov
sbb
jno
and
jo
jmp
xchg
mov
push
mov
fisttps
xor
jnp
pushf
fwait
lea
mov
outsl
icebp
mov
jno
addb
fnstenv
ret
or
outsb
in
pop
andb
jnp
inc
cli
xchg
lock
push
stos
decb
adc
imul
or
fucomi
add
sbb
cmp
ss
nop
stos
or
pop
mov
cmc
pushf
repz
nop
fwait
mov
fwait
testl
push
push
cwtl
mov
dec
inc
mov
fildl
pop
mov
aaa
test
or
std
pop
push
pop
sub
push
das
das
sub
push
push
xchg
inc
dec
aaa
lock
fcmovnbe
scas
xchg
push
pop
lods
mov
sub
pop
xchg
js
pusha
sub
mov
mov
aam
fbld
push
sbb
jno
xchg
mov
sub
int3
popf
push
ficompl
xchg
adc
insb
push
jnp
add
mov
clc
ja
or
inc
add
add
imul
and
xor
add
test
lock
aam
adc
push
fwait
icebp
xor
cmp
jecxz
pushf
sarl
addr16
ljmp
test
add
lds
cld
or
jp
int3
sub
xchg
mov
mov
and
insb
scas
adc
jae
mov
or
leave
mov
add
shll
insb
fldt
sbbb
outsb
sbb
mov
cmc
out
ss
mov
popf
add
out
rorl
stos
mov
add
sub
mov
adc
xchg
test
and
pushf
rcrb
lcall
enter
pop
lods
mulb
nop
xor
push
aam
testb
jno
fwait
divb
mov
out
fldenv
lret
or
push
mov
adc
lock
test
cli
and
push
lcall
fnstenv
dec
mov
lods
addr16
mov
out
iret
jns
sub
push
push
sarb
or
cmpsl
mov
cmpsb
sbb
jae
fistpl
xor
jmp
test
cli
push
xor
je
push
adc
dec
push
in
jb
das
xor
xorl
fdivrl
cli
lock
mov
lahf
lds
aas
jnp
sub
in
or
xchg
mov
push
jmp
imul
push
into
mov
lods
stos
adc
and
lock
popf
test
repnz
loop
orb
cmpsl
test
cwtl
bound
divb
data16
popf
mov
addb
inc
leave
bound
sarb
jo
clc
ret
or
cmpl
mov
cvtpi2ps
shrb
or
outsb
iret
sbb
ficomps
in
out
add
and
fidivl
cmp
jae
inc
and
popf
mov
cmp
lahf
push
and
push
cmpl
jmp
addr16
cmp
jecxz
or
jbe
dec
shl
js
sbb
add
and
stos
in
pop
inc
pop
aam
push
push
repz
dec
fcomip
imul
je
imul
clc
bound
xchg
jge
pop
loopne
push
adc
sbb
clc
sub
repnz
stc
ljmp
into
adc
adc
add
int3
mov
fucomi
pop
mov
mov
fdivrl
adc
jg
test
or
fldcw
xor
cmp
js
inc
dec
add
jecxz
pop
and
dec
and
mov
jg
ds
pop
jo
jle
add
cmpsl
out
pushf
leave
fcmovnu
test
test
mov
leave
pop
nop
and
pushf
adc
or
add
mov
xor
out
in
cmp
xor
adcl
nop
push
inc
mov
or
pop
xchg
mov
xchg
jnp
les
push
inc
dec
lods
pop
mov
inc
dec
rclb
or
jle
sti
inc
adc
sahf
imulb
pop
fs
sbb
dec
and
add
push
and
test
insl
jbe
out
lret
ds
xchg
lcall
pop
or
idivl
cld
ja
or
fsubrl
jecxz
scas
arpl
outsb
xchg
fdiv
inc
cs
and
aaa
sub
push
lods
sub
outsl
sub
sub
ljmp
ret
and
pop
and
je
movb
fldenv
in
push
xchg
cwtl
adc
cmc
stc
repnz
xchg
pop
pop
mov
movl
ss
adc
inc
sbbl
pop
push
adc
push
mov
sbb
pop
adcb
xlat
cmc
int3
mov
das
cmp
sbb
xchg
sarl
repnz
fdivrs
in
mov
pop
in
lea
cmp
mov
sub
int3
xor
rorl
jmp
clc
add
mov
test
dec
and
idivb
jbe
mov
push
or
mov
loope
inc
int3
jp
int
cld
imul
pop
mov
stos
xchg
outsl
mov
into
xor
bound
ret
fcomps
dec
add
mov
cmp
mov
pop
je
addr16
cwtl
aad
xchg
adc
pop
lea
xchg
jle
xchg
and
sbb
add
cmpsl
sbb
popa
in
lcall
lahf
loope
shrl
add
bsr
cmp
xchg
jecxz
inc
jle
mov
lcall
pop
scas
loope
xchg
and
ja
sbb
hlt
std
lcall
jno
mov
mov
cmp
cs
pop
cmc
dec
insl
mov
mov
add
jp
inc
cmp
rcr
pop
cmp
sub
xor
in
mov
int
call
and
or
ja
adc
js
add
jnp
idivb
cli
ret
jns
shlb
stos
pushf
sub
pusha
sub
scas
jl
loopne
mov
sahf
fists
pop
pop
sarl
iret
add
sub
mov
dec
xchg
aam
jne
or
aam
adc
in
pop
std
sbb
mov
mov
adc
scas
add
jg
dec
mov
js
mov
movsl
dec
mov
xor
cmc
jno
call
xchg
sub
dec
stc
cs
fs
frstor
test
sti
bound
jb
cli
inc
shrb
mov
mov
inc
popa
sub
ds
test
jmp
dec
cmp
xor
pop
rorl
pop
inc
push
sub
sbb
pop
and
popa
sub
je
sarl
js
xor
mov
pop
push
loop
pop
push
in
mov
lods
pop
enter
pop
mov
lahf
out
loopne
repnz
loope
call
push
xchg
jp
subl
push
pop
dec
pushf
sub
into
jg
cmc
repnz
push
mov
mov
pop
lcall
ljmp
pop
mov
in
in
add
test
rolb
push
sbb
test
in
mov
repz
ljmp
inc
out
aas
inc
subl
xor
aam
imull
mov
insl
push
lds
lods
cltd
cmp
cmpsl
movsb
or
add
orl
call
test
cmc
inc
out
ljmp
rolb
inc
push
testl
in
movsb
pop
popf
loop
sub
xor
sarb
cmpsl
dec
xchg
cltd
das
xchg
pop
dec
addb
repnz
fstpl
and
mov
inc
lahf
out
mov
fucomip
jo
mov
stc
push
outsb
fdiv
cmp
inc
cs
ret
and
sub
mov
daa
pop
outsb
subl
sub
outsl
xor
push
test
mov
adc
aad
mov
mov
adc
and
dec
xor
push
sbb
and
xor
xchg
sub
shl
fsubl
add
sub
insb
lret
or
aad
mov
out
vpmacssww
cmp
sub
mov
pop
pop
push
jmp
dec
fdivrl
in
adc
mov
popf
aas
add
push
mov
mov
xor
adc
push
repz
or
push
rcll
cmc
mov
xchg
test
out
arpl
adc
push
mulb
inc
sti
push
repz
mov
pinsrw
loopne
les
es
push
pusha
jp
xchg
fcmovnbe
cmpb
adc
popa
pusha
sub
mov
xchg
fstl
adc
sub
dec
xchg
jae
mov
std
xor
popa
pusha
movsl
ds
pop
or
ss
mov
repnz
pushf
lods
mov
lret
shlb
push
pop
mov
jnp
popf
and
out
pushf
jb
jp
lcall
cli
test
jl
imul
lods
sbb
mov
xor
data16
rorb
inc
fists
enter
in
pop
mov
sbb
and
mov
push
fcoms
jge
and
xchg
das
rep
jns
aad
addb
mov
outsl
xchg
dec
pop
std
cltd
fisttpl
dec
cmpsb
loop
orb
ret
sarb
lock
sahf
gs
sub
sub
enter
sbb
push
cltd
int3
cli
es
inc
cmp
push
lea
pop
insl
add
inc
insb
xor
cmc
rclb
sub
push
add
mov
in
js
lea
mov
shlb
cltd
mov
jp
lret
decb
jns
push
jp
out
push
cmp
mov
xchg
scas
xchg
in
add
stos
popl
js
testb
lods
lock
jle
pop
scas
adc
ret
repnz
mov
icebp
outsb
jbe
or
jne
or
dec
inc
or
ret
into
and
imul
dec
jp
push
fiaddl
or
and
out
xorb
and
or
les
movsl
std
ds
pusha
shrl
mov
jae
xchg
add
stc
mov
test
in
enter
ja
cli
jbe
sub
mov
pop
sbb
cmp
roll
cmpsl
out
jge
mov
pop
pusha
cmp
rorb
popf
iret
mov
pop
mov
sbb
jl
test
jle
cmp
mov
cmp
adc
sub
cwtl
and
in
sbb
sub
out
insl
outsl
leave
loop
xor
xchg
iret
jae
aas
into
xorb
in
cmp
and
adc
xchg
sbb
aad
mov
push
pusha
mov
pop
sub
jl
repz
lret
mov
int
roll
xor
shr
xchg
test
mov
lods
dec
mov
idivb
or
jns
jno
add
inc
cmpsl
cmpsl
stos
les
mov
add
aad
xchg
sub
push
das
insl
and
scas
jns
ja
testl
out
shlb
aam
mov
mov
mov
aas
aam
xchg
imul
pop
and
jg
fmul
sbb
and
push
fnstsw
in
pop
mov
cmp
scas
or
add
pop
fimuls
sub
jno
sub
imul
cmp
jmp
gs
push
pop
adc
add
fistl
cld
in
inc
in
sahf
mov
push
mov
aas
ret
mov
add
xchg
imul
or
and
cmp
ds
popfw
mov
jmp
ret
mov
sub
mov
rolb
cmp
or
fs
bound
gs
enter
sub
pop
les
cmpsb
mov
mov
jb
cmp
cmpsl
inc
pop
inc
sbb
es
jns
dec
sub
or
into
shr
aaa
test
or
push
jp
push
pushf
push
inc
add
mov
std
loopne
inc
mov
lods
leave
in
aaa
test
fistl
out
sub
and
addr16
out
aam
mov
ret
xor
sub
jecxz
in
mov
push
or
add
stos
decl
add
xor
hlt
faddl
popf
xor
insl
mov
xlat
mov
test
mov
xchg
mov
pop
scas
pop
out
jge
iret
adc
push
jl
pop
inc
mov
push
lahf
fs
dec
add
add
psrlw
sub
std
cmp
cwtl
cltd
mov
clc
and
xor
xchg
jecxz
sbb
int
scas
pop
popa
icebp
pop
jns
add
scas
lods
stos
sub
test
jo
arpl
mov
fwait
fs
xchg
xor
sbb
movzwl
add
repz
cld
arpl
out
jbe
push
push
xchg
pop
mov
mov
outsb
and
gs
cs
xor
xchg
push
or
icebp
popf
insb
repz
clc
or
pop
add
xchg
jnp
insb
sbb
shlb
mov
xlat
mov
mov
xchg
dec
fmuls
scas
sub
repz
cmc
mov
cmp
and
push
lods
and
dec
insl
mov
aam
adc
lods
addr16
ja
sub
in
and
mov
and
and
leave
sub
mov
cmpb
sbb
mov
fcomps
or
cmp
fstpt
xchg
pop
jns
or
push
fimuls
jo
aas
xchg
mov
enter
mov
nop
enter
loope
mov
outsl
adc
cmp
jge
dec
arpl
aad
insb
scas
aas
pop
mov
cmc
mov
mov
fstpl
clc
dec
xor
and
jb
xchg
jp
popa
inc
adc
cmp
ljmp
in
int
outsb
js
out
mov
push
mov
dec
pop
inc
adc
cwtl
int3
roll
adc
push
inc
push
xor
pop
lods
inc
ds
aad
lret
push
cs
jb
xor
orb
mov
add
jb
out
fs
xor
outsb
idivl
sarl
sub
adc
mov
sub
test
sub
push
mov
sbb
mov
push
in
xor
fwait
and
pop
insl
cmp
rclb
push
adc
es
pop
out
aad
rolb
bound
popf
lcall
sbb
scas
mov
dec
inc
je
mov
xchg
cltd
and
adc
sub
dec
add
in
adc
stos
sub
xor
out
dec
insl
roll
cmpsb
neg
movsl
popf
jae
or
sbb
or
call
pop
jl
inc
xor
pop
aam
mov
sbb
and
jle
fwait
jb
loopne
out
add
data16
jne
push
inc
xchg
inc
add
test
stc
shrb
inc
subb
push
mov
mov
mov
mov
lahf
mov
xor
das
scas
lock
and
inc
cmp
adcl
xchg
cmp
aam
mov
movsl
aas
dec
sbb
lea
jne
ljmp
pushf
rol
fsub
test
es
push
lcall
add
fs
js
je
lock
cmp
mov
int
imulb
xchg
jno
lret
adc
inc
sub
div
shl
jp
arpl
imul
in
cmp
adc
jae
repnz
stc
ss
add
mov
xor
mov
jge
push
aad
lcall
pop
cmc
fs
mov
mov
and
mov
push
sub
and
call
shr
nop
xor
sti
xchg
cmp
xchg
popa
pop
cld
popa
adc
pop
xchg
add
lcall
cmpl
out
mov
notl
repz
inc
out
out
push
mov
test
stos
dec
insl
cwtl
mov
xchg
sbbb
fadds
lods
adc
sbb
arpl
adc
xor
and
pop
and
int
or
loop
stos
enter
jle
mov
int
mov
dec
inc
ficoml
dec
push
pop
cli
and
repz
adc
fsincos
lods
jo
jecxz
leave
test
movsb
sub
ljmp
and
scas
std
test
bound
cmp
stos
scas
loopne
add
jno
or
inc
lahf
aas
adc
cmp
mov
inc
leave
lret
jne
add
loope
jge
inc
sbb
into
push
mov
push
std
std
movsl
outsl
pusha
adc
das
popf
pop
mov
push
roll
jge
dec
sahf
pop
out
sub
ficomps
push
int
jle
dec
lea
scas
insl
mov
pop
out
sub
ficomps
push
int
jle
dec
lea
scas
insl
mov
pop
out
sub
ficomps
push
int
jle
dec
lea
scas
insl
mov
pop
out
sub
ficomps
movsb
int
stos
sbb
mov
shl
mulb
cmc
mov
push
inc
push
jbe
push
xor
add
test
lock
lods
out
mulb
cmpsb
nop
mov
inc
jo
and
jbe
push
xor
add
adc
pop
movb
push
out
idivb
cmpsb
nop
mov
js
or
push
xor
jb
inc
dec
ss
mov
sbb
mov
add
frstors
add
into
add
adc
or
or
inc
notl
mov
imul
data16
ja
insb
popf
add
out
lret
mov
mov
lcall
mov
test
arpl
xor
jne
enter
cmp
cwtl
xlat
and
xchg
out
jne
inc
les
xor
fcoms
pop
pop
pop
std
sub
xor
pop
xchg
imul
add
push
inc
lcall
clc
daa
sbb
pop
inc
insl
cs
sbbl
xchg
jg
movsl
xor
je
leave
bound
add
adc
mov
out
testb
andb
push
ss
jbe
push
cmp
xor
adc
stos
addb
jmp
nop
pusha
sub
aas
and
imul
movsb
jne
lods
xchg
mov
jne
lds
inc
xor
sbb
pop
jns
push
push
pop
mov
addl
cmpsb
nop
mov
inc
jo
inc
push
jbe
push
xor
add
adc
loopne
lock
shl
mulb
cmpsb
nop
mov
inc
jo
inc
push
jbe
push
xor
add
adc
loopne
push
ret
add
daa
outsl
inc
fcompl
aas
add
andl
stc
test
mov
stc
ds
pop
push
imul
mov
mov
ret
jno
inc
in
dec
ja
jnp
movsb
scas
lods
inc
jbe
dec
lahf
xor
les
xchg
adc
test
test
mov
cmpsl
in
sbb
pop
and
scas
dec
xor
jmp
or
js
push
in
dec
or
shll
hlt
shll
mov
adc
and
mov
mov
sbb
jle
popf
imul
lods
aas
sub
loope
faddp
imul
ficoms
push
cltd
mov
loop
xchg
xchg
pushf
test
arpl
daa
or
adc
jbe
sbb
test
out
mov
mov
add
into
out
sbb
pop
dec
in
xchg
leave
out
push
adc
inc
and
adc
pop
test
pop
mov
lret
add
or
jl
push
jo
stos
mov
fldcw
xlat
xchg
pop
jp
subb
jo
fwait
js
xabort
sbb
jbe
push
rcr
mov
or
cmp
into
fstpt
cmpsb
cmp
out
inc
mov
push
xor
add
mov
daa
pop
je
fs
out
es
add
cmpsb
scas
int
hlt
aam
mov
loope
std
xchg
jg
push
iret
mov
sbb
adc
cmp
out
sbb
popa
sbb
testl
cs
cmc
aas
iret
outsl
jae
icebp
shll
sbb
push
mov
sbb
lea
jns
movsl
inc
add
inc
aaa
jnp
xchg
sub
xor
shll
rcrl
les
in
mov
add
mov
adc
jle
or
mov
cmc
jnp
les
cmp
xchg
sahf
adc
mov
sub
xor
or
mov
scas
jle
fld
in
inc
movsl
jmp
mov
shrb
enter
movsl
ss
add
mov
outsl
push
pop
les
repnz
pop
sub
arpl
dec
hlt
mov
js
jge
jmp
sub
push
repnz
lahf
aad
call
jne
outsb
sbb
mov
pusha
test
jns
repnz
je
jb
xchg
aas
xor
xchg
mov
add
inc
adc
sti
jmp
mov
addb
cltd
dec
mov
outsb
mov
or
or
adc
rorl
aaa
imul
imul
mov
lcall
jnp
popl
ja
fdivrp
mov
fldcw
adc
push
shll
mov
push
ja
xchg
fadds
jecxz
fists
cmp
shr
sub
sub
mov
int3
stos
sti
xchg
jo
rcl
jno
sbb
push
mov
xchg
jbe
jmp
adc
xor
in
out
shrl
faddl
sbb
enter
and
push
xor
push
mov
jmp
mov
push
popa
pop
loopne
mov
ret
loopne
xor
hlt
daa
mov
fistpll
sahf
xor
sub
lods
inc
fcmovb
pop
pushf
pop
jns
adc
out
cmp
addr16
stos
xor
aaa
sti
lods
outsl
mov
aam
and
pop
push
and
jge
jbe
mov
xlat
add
xor
idivb
push
add
push
sub
sti
and
fdivs
xor
mov
push
aad
orl
out
sbb
lea
cltd
add
and
push
and
dec
push
rclb
rorl
loopne
je
inc
inc
mov
push
mov
jne
mov
or
mov
mov
pop
into
mov
inc
addr16
outsl
push
mov
jns
test
cli
insb
or
push
pop
jnp
daa
iret
scas
jmp
inc
mov
dec
cmpsl
sahf
cltd
inc
dec
lret
rcrb
adcb
pusha
sti
and
ljmp
xchg
pop
add
loop
aas
cmp
mov
cmp
mov
shrl
xorb
mov
dec
add
mov
lret
jae
adc
pop
int
xor
inc
sbb
fldt
rorb
add
lock
sahf
fsubl
repnz
adc
ds
std
int3
mov
adc
and
xchg
sub
add
adc
fwait
jg
ret
outsb
xlat
jnp
aas
cwtl
rcll
subb
sbbl
in
leave
aam
jg
mov
sbb
int
mov
test
xlat
shrb
nop
fucomi
daa
cmpsl
push
jno
in
inc
in
lods
rcrl
stos
jno
pop
cmpsl
mov
int3
cmp
rorb
clc
cmpsb
lret
lcall
enter
test
jne
mov
jns
test
push
add
ja
mov
gs
xor
data16
bound
leave
rcrl
and
data16
outsb
jmp
adc
cltd
dec
and
jae
push
int3
lret
lret
xor
push
fnstcw
push
int
jg
test
cmp
cmc
jge
sarb
push
call
add
insb
js
adc
shlb
inc
loopne
mov
sbbl
inc
mov
jg
xor
or
jb
or
pusha
pushl
jae
jp
rorl
xchg
ficompl
jb
add
cmp
movsl
aas
sahf
mov
sub
insb
jns
inc
aaa
fsubr
bound
test
sarl
dec
push
aaa
in
pop
mov
imul
cs
orl
sub
loope
cld
sbb
lret
mov
test
pop
xchg
push
cmp
fs
dec
pop
adc
call
cmp
cmp
xchg
sbb
shr
xor
out
test
clc
cmpsl
pushf
cmpsb
fwait
jecxz
push
and
repz
dec
mov
pop
jge
or
fst
iret
inc
jle
and
and
ljmp
cli
or
mov
dec
sbb
rcll
inc
test
lcall
mov
cs
fsubr
aaa
cld
mov
cld
ds
jb
fstpt
movsb
mov
sub
mov
pop
outsb
xor
or
loopne
movsl
cs
std
sbb
inc
popf
frstor
shll
sar
mov
fsubrp
cmp
in
mov
add
cmp
out
dec
dec
jl
pop
xor
xchg
pop
sarl
icebp
das
cmpsb
mov
adc
into
cmp
and
and
xchg
cwtl
xorl
imul
push
lods
lds
outsl
jno
outsl
pop
mov
sarl
je
push
mov
ljmp
pop
bound
clc
lock
ret
fnsave
add
pop
loop
dec
and
mov
fbld
mov
push
lods
call
cwtl
sbb
inc
sti
loope
adc
insb
pop
fstl
data16
mov
ret
adc
clc
mov
mov
test
mov
dec
cmp
movsl
popa
sub
clc
or
int
mov
sarb
outsl
call
imul
and
cmpsb
sub
inc
inc
fisttpl
sub
test
adc
shll
pop
cltd
mov
hlt
sub
push
aas
imul
mov
sbb
push
mov
shlb
shll
mov
hlt
lret
sbb
pop
loop
neg
mov
pop
stc
mov
push
push
cmp
ret
mov
cmp
push
adc
mov
fnsave
push
jnp
dec
inc
lahf
js
add
cmpsb
clc
inc
or
fsub
dec
cli
cwtl
mov
mov
lods
sbb
movsb
sete
adc
sub
or
pop
aam
fsubrl
pop
and
fisubrl
push
stos
sub
ds
scas
ret
mov
dec
std
push
pop
sub
xchg
outsb
xchg
stos
xor
xor
jns
fildll
fs
enter
lret
push
rorl
pusha
jo
nop
gs
lods
out
pop
or
xchg
in
test
push
fdivs
push
push
mov
cmp
stos
cmp
shl
sub
jp
add
xchg
mov
dec
bound
xor
mov
and
out
jp
sub
ds
mov
pop
repz
adc
clc
dec
leavew
mov
or
loopne
aaa
loope
cltd
mov
jmp
dec
cmpsl
lock
lea
aas
iret
jl
jp
lahf
inc
test
xchg
sbb
fmull
les
xchg
adc
mov
movsl
inc
cli
add
xchg
sti
mov
in
push
iret
das
mov
mov
daa
imul
mov
leave
sbbb
out
adc
pop
test
mov
dec
jae
or
add
dec
cli
mov
xor
js
pop
xchg
inc
push
adc
nop
pop
outsb
rorb
dec
loop
cli
jb
lret
jb
fistl
fbstp
cs
in
cmc
push
aas
lahf
es
pop
jge
cmp
pusha
push
sub
aam
bound
jmp
adc
stos
lea
push
add
js
xchg
xor
popa
push
ljmp
pop
sub
lods
cs
cmp
and
popa
loop
jbe
filds
enter
xchg
rcll
push
daa
stos
or
xchg
movb
xchg
ficoml
push
xor
test
inc
lods
lea
inc
jbe
fisubrl
shrb
fcmovbe
pop
xchg
out
xchg
lods
inc
mov
nop
xor
jecxz
shrl
jp
dec
add
aam
pusha
sub
je
pop
out
xor
fprem1
inc
sub
movsl
dec
lahf
testb
or
jo
dec
mov
sub
mov
and
mov
push
ror
ljmp
in
lea
les
in
mov
or
scas
insl
pusha
inc
sti
fidivrl
inc
sahf
movsb
bnd
scas
not
pop
rol
xor
scas
ret
fwait
sbb
sarl
in
pop
and
outsl
ss
fwait
adc
cmpb
push
loop
popf
sub
stc
or
xor
or
call
jg
jae
jnp
push
jno
out
test
jmp
xchg
lgs
sti
lea
mov
sub
sti
jns
rol
sbb
inc
sbb
mov
clc
ss
shl
loop
mov
inc
lock
fldt
or
popf
add
dec
movsb
mov
mov
dec
lds
xchg
je
sub
orl
adc
xchg
in
xchg
insb
mov
test
jne
sbb
sbb
mov
dec
and
aas
or
jb
pop
enter
aam
iret
std
out
insb
std
rorb
aad
adc
je
or
data16
orb
imull
sub
not
mov
mov
push
xchg
pop
outsb
iret
movsl
fdivs
mov
push
dec
dec
sub
mov
xor
add
adc
scas
in
xchg
jecxz
xor
push
popa
push
rcrb
int3
mov
test
gs
sbb
mov
mov
xchg
push
mov
jmp
cmp
movsb
and
aaa
lcall
test
dec
inc
or
mov
ret
lret
pop
sub
shlb
add
rol
add
sub
dec
pop
jae
test
cmc
mov
cmc
inc
or
mov
cmpsl
adc
cli
or
insl
xor
in
fisttps
push
fimuls
mov
xor
sub
adc
imul
sahf
sbb
aam
test
stc
lds
adc
adc
jo
jno
pop
repz
imul
out
ljmp
data16
pop
and
mov
lret
incl
mov
pop
fstl
cmp
push
lret
sub
movb
dec
mov
and
mov
hlt
js
inc
push
and
inc
add
push
andl
mov
shll
jecxz
ss
cmpsb
xor
jae
out
push
lds
jo
stc
pop
adc
in
inc
or
sub
arpl
repz
push
stc
mov
int3
mov
pop
mov
dec
or
and
fimull
cwtl
xor
jo
sbb
in
jns
in
xor
mov
jns
push
push
test
fwait
xchg
lret
cmp
call
arpl
stc
ret
test
xchg
adc
in
xchg
push
add
test
pop
pop
adc
arpl
or
cmpsb
or
movb
mov
test
subb
scas
mov
inc
jnp
imul
daa
sti
mov
decl
shrl
mov
add
xchg
dec
imull
mov
pop
dec
inc
lods
pop
add
fsubs
bswap
fs
mov
in
enter
enter
or
push
mov
dec
xorl
adcl
ljmp
insl
sub
push
mov
or
divl
add
stos
mov
fisubrs
call
cmp
pop
into
xchg
push
loope
popf
fcmovnu
mov
cli
fwait
insb
loop
mov
xor
adcl
xchg
repz
call
inc
cmpsl
dec
xor
scas
out
cmc
sub
xchg
loopne
sbb
or
lahf
data16
mov
push
das
sbb
inc
pop
xlat
hlt
divb
xchg
mov
pop
and
and
int3
inc
icebp
fwait
jecxz
das
nop
notl
cmp
mov
imul
leave
add
cltd
jns
xor
pusha
std
xorl
jle
sahf
jecxz
push
push
cmp
cmp
pop
test
test
rorl
daa
mov
jp
loope
icebp
icebp
sub
jb
js
test
icebp
leave
xchg
xchg
je
xchg
pop
cmp
jbe
and
sahf
mov
out
xchg
les
loopne
jb
mov
hlt
std
pop
mov
sbb
mov
fists
in
xor
movsl
jge
sbbb
push
jb
xor
ljmp
test
xor
aas
mov
xor
addl
jg
cli
outsl
shll
push
push
sub
mov
in
ret
or
xlat
sbb
pop
sbb
pop
fwait
dec
lock
repz
xchg
pop
push
enter
arpl
iret
pop
or
push
ret
data16
stos
std
and
lret
fimuls
std
or
push
ret
adc
xor
jp
loop
aam
outsb
sub
in
cmp
adc
fstpt
rorl
jp
inc
pop
mov
pusha
xchg
sbb
stos
loopne
mov
jl
dec
inc
cmpl
adc
dec
mov
hlt
test
fistps
cmp
stos
mov
rorl
pop
push
mov
xchg
or
test
inc
mov
pop
jg
gs
fcoml
imul
aaa
xchg
cmp
sar
shlb
push
test
add
sub
outsb
stos
sub
add
and
sbbb
xor
or
cwtl
ret
sbb
clc
mov
adc
ljmp
stos
lock
xchg
fcoms
jmp
mov
scas
xchg
jb
cmp
jmp
int3
divl
ljmp
loopne
mov
xchg
pusha
loop
mov
mov
add
inc
out
add
mov
scas
sub
adc
aad
stc
jmp
fs
adc
lock
jbe
add
fnstenv
inc
pop
mov
lods
mov
loop
jns
xor
mov
scas
sub
dec
dec
test
mov
inc
shlb
lods
hlt
lds
int3
enter
insl
and
orb
xchg
push
cld
icebp
jb
xor
inc
dec
add
mov
add
and
sub
cmpl
fsub
aas
add
pushf
cmp
sbb
inc
testb
xor
js
mov
xor
xchg
mov
cmp
movsb
repz
push
scas
mov
cmp
in
push
jge
adc
adc
in
mov
vsqrtpd
pop
sbb
in
and
xchg
cltd
jg,pt
sbb
ljmp
lock
daa
mov
scas
test
sahf
jecxz
jmp
cmp
mov
mov
and
mov
jle
lods
fadd
mov
pop
push
sub
lahf
xor
lods
mov
jecxz
mov
outsl
imul
inc
inc
inc
in
push
push
adc
lret
and
scas
out
popf
adcb
inc
mov
aam
push
mov
fists
lds
and
pop
cmp
jbe
imul
inc
js
imul
pop
mov
hlt
pop
fstps
mov
adc
in
cmc
adc
jno
mov
and
or
scas
sbb
setno
frstpm(287
cltd
inc
xchg
and
enter
jmp
loopne
cmp
sbbl
scas
icebp
je
add
fistpl
mov
into
lahf
adc
aas
pusha
loop
jno
xor
pop
imul
aad
out
cmc
insl
add
cmc
mov
loop
popf
mov
lahf
cmp
push
out
sti
jbe
lock
mov
fldl
es
stos
fwait
xchg
jp
into
mov
push
enter
and
mov
push
xchg
pop
popf
mov
subl
sahf
test
inc
mov
pop
inc
out
out
iret
and
faddl
lock
xchg
das
pop
popf
sbb
insb
lods
xchg
pop
cmpsb
mov
sub
xor
lods
cmpsl
or
out
and
cmp
pop
adc
cmc
dec
or
jp
fldenv
call
and
dec
mov
mov
add
mov
daa
mov
fnstsw
sub
out
fidivl
fsubrl
out
lret
stos
push
lcall
mov
sub
sub
push
push
add
sub
dec
sub
out
pop
scas
inc
lea
xchg
iret
les
fistpll
movsb
pop
and
and
nop
test
nop
stos
out
jmp
repnz
enter
mov
leave
xchg
push
push
add
cmp
movsl
pop
mov
shlb
in
or
fwait
add
push
sub
je
hlt
leave
cmpb
inc
in
rcr
aad
cmpsl
pop
inc
loope
or
xchg
sub
xchg
pusha
vprotb
pop
xchg
cmp
mov
mov
test
cld
sbb
mov
dec
adc
mov
test
test
pop
rclb
xorb
mov
adc
mov
test
add
lret
lds
stos
mov
pop
lods
in
int3
lret
ljmp
scas
shlb
in
pushf
bound
fstps
aam
test
addr16
inc
dec
jae
xchg
ss
es
and
fwait
lds
dec
mov
dec
pop
and
loop
sbb
adc
and
and
popf
popf
scas
adc
mov
loopne
jmp
mov
sbbb
stc
scas
stc
lret
sub
loope
or
andb
jno
lret
mov
aas
decl
jge
push
cli
rcr
outsl
arpl
jnp
mov
cltd
mov
xor
mov
cmpsl
mov
bound
mov
fsts
cmp
nop
jne
in
dec
and
jle
mov
or
lcall
das
test
sahf
dec
adc
cmp
push
dec
sub
aad
and
mov
sbb
jle
adc
mov
aad
insl
fiaddl
imul
push
jge
aas
test
sub
push
addr16
or
lods
and
testb
sbb
adcl
mov
xor
pop
or
icebp
or
mov
fistpll
mov
stc
or
mov
test
xor
add
test
ret
dec
and
repnz
ret
rorl
mov
cmp
inc
adc
and
or
imul
ljmp
jne
xchg
mov
arpl
popf
je
adc
inc
push
dec
sti
jno
enter
scas
stc
imul
jbe
test
pop
cmp
xchg
pop
out
and
push
and
imul
incb
in
in
adc
insb
pop
lea
pusha
out
sbb
jp
js
pop
pop
cltd
sti
adc
mov
in
inc
in
mov
add
mov
or
push
lahf
cmp
xlat
ja
fwait
lea
dec
dec
inc
dec
test
pushf
xchg
lahf
jmp
sub
mov
jae
loopne
xchg
xchg
jae
mov
cmc
sub
jo
xchg
ret
xchg
dec
mov
stos
insb
cmp
dec
out
mov
in
insb
add
sub
mulb
cmpsb
nop
mov
inc
jo
inc
push
jbe
push
xor
add
adc
loopne
lock
shl
mulb
cmpsb
nop
mov
inc
jo
inc
push
jbe
push
xor
add
adc
loopne
rcl
out
divl
xchg
mov
inc
jo
mov
push
jbe
pop
and
add
clc
ss
lods
lcall
push
andb
dec
pusha
mov
push
add
mov
leave
push
mov
sub
mov
andl
andl
andl
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
mov
lea
push
movl
movb
movl
movb
movl
movb
movb
movl
call
leave
ret
inc
dec
or
addl
add
fdivs
lea
fnsave
popa
std
inc
in
inc
or
sub
loope
shrl
xchg
xor
add
adc
mov
push
in
inc
add
adc
and
call
jp
popf
rolb
add
xor
inc
insl
mov
enter
or
mov
dec
dec
xchg
add
jne
je
inc
push
test
lods
loop
sbb
sbb
pop
lea
dec
push
mov
leave
inc
add
xor
push
pusha
or
dec
or
in
cmpsl
dec
loope
movsl
jne
lahf
mov
loope
lods
push
test
popa
mov
scas
sub
loope
mov
js
pop
and
popa
in
mov
and
sub
mov
inc
outsb
pop
popa
or
cmpl
test
lods
add
int3
in
jo
adc
inc
jb
mov
add
xor
inc
add
adc
scas
in
push
fnsave
cmp
jge
je
test
xchg
cmp
imul
and
pop
nop
dec
cmpb
and
jmp
inc
ret
outsb
mov
test
sub
leave
or
test
andb
adc
lea
fadds
add
and
lock
les
sub
loope
shrl
popf
xor
add
jno
popa
std
push
in
inc
sbb
xchg
sub
loope
shrl
popf
xor
add
jno
popa
std
push
in
inc
sbb
mov
xchg
jb
fisubrl
fsubs
jae
mov
imul
xchg
popf
fbstp
xchg
dec
xchg
loopne
loopne
xor
test
lret
xor
add
add
mov
or
jl
xchg
push
test
bound
mov
cwtl
fsub
setae
or
filds
pop
xchg
adc
xor
mov
jae
or
sbb
push
mov
add
and
loopne
ret
add
add
sbb
jecxz
nop
or
cmp
lahf
sti
push
add
sahf
pop
pusha
sbb
push
or
dec
jb
cmp
sahf
jbe
cmpsb
repz
mov
mov
inc
fsubs
cmp
mov
pop
shlb
jmp
add
bound
adc
iret
inc
out
sti
out
mov
je
xor
jp
adc
popa
sub
xchg
jbe
mov
out
push
sub
outsb
lahf
adc
into
ffree
xor
repnz
lock
xchg
ljmp
icebp
cltd
divb
lea
movsl
cmc
jle
mov
push
xor
fnstsw
push
arpl
addr16
imul
push
mov
push
fiaddl
push
lcall
dec
push
add
adc
mov
cltd
icebp
inc
add
mov
dec
fstps
sbbb
add
pop
add
std
sub
repz
sub
test
pop
cmpsb
in
mov
xchg
les
js
fsubr
or
iret
out
in
adcb
mov
lods
adc
xor
fcoml
lahf
or
jecxz
cwtl
aaa
ret
sub
xchg
gs
call
sub
jmp
push
sub
lods
inc
xchg
jb
into
fildl
stos
test
mov
repnz
push
fcomip
adc
push
stos
lock
jmp
into
sbb
or
imul
and
mov
inc
out
or
jmp
incb
daa
xor
mov
adc
or
push
dec
xor
pop
cmp
les
je
dec
aas
and
pusha
std
pop
pop
enter
mov
dec
in
mov
dec
or
fdivrs
sub
bound
lods
rcr
es
pop
cwtl
push
inc
enter
mov
pop
div
fsubrs
cwtl
lahf
je
jnp
pop
push
xlat
jo
shll
std
add
outsb
xchg
jae
ljmp
test
gs
iret
cmp
dec
cwtl
or
pop
jbe
sbb
mov
cmc
in
mov
jmp
mov
mov
aas
imulb
add
repz
int
out
jle
push
pop
aaa
cmpb
jne
mov
or
sbb
aam
popf
sbb
cwtl
jno
pusha
push
or
fucom
push
daa
negl
sbb
loop
rclb
aaa
ds
sub
outsb
mov
or
adc
xchg
mov
cmp
xor
adc
pop
and
mov
mov
sbb
dec
and
dec
cwtl
xor
jmp
jnp
int
cmp
push
insb
pop
dec
xor
sub
test
push
out
je
mov
jle
dec
sbb
jp
imul
fstpt
jp
xchg
sarl
pop
push
push
and
add
out
repz
inc
inc
dec
sub
ret
dec
inc
popa
rcll
je
ja
fistl
xchg
les
push
add
pusha
jmp
xor
int3
adc
das
mov
aaa
push
data16
adc
int
sbb
repnz
dec
inc
mov
ret
sub
sub
movsl
dec
test
add
sub
xchg
daa
daa
arpl
mov
rolb
push
jle
test
push
cmp
jecxz
mov
inc
int
sahf
mov
mov
jae
movsl
mov
ss
xchg
popa
adc
jecxz
inc
lods
fistpll
cmp
stos
cmp
and
jb
dec
jge
add
xchg
ret
mov
pop
cs
scas
xor
xchg
sub
push
add
xor
mov
push
sub
jp,pt
out
repnz
imul
add
cmp
leave
sub
mov
in
in
fdivrs
xchg
lret
cmp
dec
mov
mov
sbb
scas
sbb
xchg
lret
lea
lret
lds
icebp
add
mov
push
aas
inc
inc
iret
in
push
rcrb
and
xor
push
mov
jae
bound
lods
icebp
jbe
roll
nop
imulb
lods
jl
or
mov
rclb
lock
xchg
pop
mov
jno
sub
pop
inc
mov
sbb
sub
sbb
pop
packssdw
jmp
scas
and
loop
je
bound
and
mov
sbb
adc
dec
into
sbb
cmp
test
mov
sub
mov
stc
xchg
std
fcoml
test
dec
cltd
inc
mov
fmulp
pop
lret
sbb
jg
jne
ss
in
jp
cwtl
add
add
mulb
adc
insl
mov
lock
sub
add
cld
mov
and
jne
fisubrs
push
in
sahf
xchg
push
push
pop
int
push
pusha
pop
cwtl
icebp
js
cmpb
data16
clc
adc
movsl
popf
fstpl
mov
enter
sub
int
cmp
cs
xchg
mov
mov
faddp
sub
xor
inc
std
fcoml
ret
adc
xor
mov
aam
pusha
add
stc
stos
test
popa
or
sbb
push
sub
icebp
cmp
cmc
ds
test
cmp
mov
movsl
in
pop
or
lahf
cmp
cmpb
sub
dec
mov
cld
xor
cmpsb
pop
int3
cmp
cmp
mov
add
xlat
xchg
push
and
adc
loopne
pop
ljmp
adc
lds
jns
and
inc
pop
and
and
arpl
cltd
and
and
jne
jle
pop
mov
vmovlps
xchg
adc
outsb
xchg
mov
xchg
sub
shrb
loopne
dec
shlb
adc
js
repnz
int3
mov
xchg
mov
int3
ljmp
ljmp
push
sbb
idiv
mov
inc
cwtl
lcall
in
xchg
push
mov
in
stos
dec
push
insb
add
dec
xlat
add
test
fs
nop
or
dec
leave
mov
adc
sub
imull
js
or
rol
ljmp
mov
jno
cmp
pop
into
and
adc
dec
je
cwtl
inc
outsb
or
pop
jecxz
js
insw
scas
mov
add
jbe
popf
in
scas
pop
cmpsb
jg
ja
jnp
adc
cmpsb
jb
lock
jb
sub
mov
mov
shll
mov
mov
dec
ljmp
push
xor
cmp
ret
xor
pop
sbb
xchg
inc
xchg
in
sar
sti
xlat
jmp
repz
sbb
loope
mov
fisubrs
out
mov
jp
mov
xchg
mov
in
inc
cmp
in
mov
lods
inc
and
enter
repz
imul
push
xchg
pop
xor
fs
cltd
sub
arpl
out
jle
adc
and
insb
ds
xor
int
ss
repnz
icebp
add
or
sbbb
sbb
ss
iret
push
mov
xchg
xchg
loop
cmp
lret
xchg
addr16
cmp
jbe
mov
pop
pop
fisttpll
adc
fmull
xchg
pop
xchg
stos
add
in
test
push
or
cli
addr16
add
inc
or
incl
xor
pop
subl
test
dec
inc
xlat
push
xchg
mov
loop
cmp
js
push
dec
arpl
pop
jae
inc
pop
fcomps
xor
scas
adc
std
aas
dec
add
out
lock
jle
inc
xor
push
incb
adc
xchg
das
and
test
adc
adc
lahf
in
cli
mov
imull
mov
pop
push
imul
js
mov
cltd
cmp
loope
sub
roll
stos
xchg
or
shll
xchg
push
pop
mov
cmp
icebp
fstpt
xchg
into
xchg
stos
mov
add
mov
push
mov
add
popa
sbb
std
lea
mov
pop
cmp
add
in
push
add
adc
insl
lcall
push
adc
add
shrl
dec
cli
clc
xor
ja
push
push
dec
in
push
add
dec
adc
cld
aad
into
add
int3
test
popa
push
push
insl
arpl
imul
jbe
addl
leave
jmp
in
fdivrl
icebp
jmp
lahf
add
and
int3
lret
sbb
push
test
push
mov
imull
jl
adc
sbb
aam
jecxz
in
int
popf
and
add
test
sub
pushf
scas
push
mov
out
aam
xchg
mov
push
dec
mov
xchg
mov
mov
mov
mov
imulb
repnz
fildll
sub
jle
scas
cmpsb
xchg
sarl
pop
test
fimull
dec
loopne
ljmp
xor
jmp
fstl
in
xchg
mov
mov
inc
test
test
stos
shll
jne
adc
xchg
popf
movsb
lcall
stos
add
scas
insb
sbb
and
xlat
jno
push
loopne
nop
out
sbb
lds
xchg
fildl
mov
inc
jo
adc
std
fs
lock
xchg
push
leave
jg
push
or
mov
mov
mov
int
add
std
pop
mov
add
xor
shlb
lea
sar
test
sub
or
inc
xor
dec
hlt
ficoml
mov
dec
nop
rcll
xchg
in
sbb
out
call
int
fcmovb
and
dec
dec
sbbl
les
sbb
ja
int3
ret
loope
mov
ret
pusha
fstpt
stc
jae
inc
fdivl
test
push
and
ja
mov
popf
cmp
popf
sbb
scas
mov
jmp
cmpsl
adc
out
leave
scas
icebp
and
push
stos
stos
sub
mov
fdiv
negb
mov
cmp
inc
mov
mov
repnz
mov
into
call
cmp
push
mov
mov
test
xchg
dec
jecxz
adc
sub
in
out
fcomp
mov
mov
mov
push
inc
lret
pop
sub
dec
push
js
pop
mov
mov
lods
xchg
std
cli
scas
addr16
stos
dec
mov
jns
adc
push
dec
mov
and
push
push
scas
inc
shlb
mov
lahf
xchg
xor
add
xchg
es
out
add
and
cli
sbb
loope
out
rcll
into
jmp
test
sti
inc
xor
mov
sub
dec
dec
aam
xor
cli
cmc
inc
mov
jo
mov
dec
lods
aad
jns
insb
ljmp
int
mov
sbb
mov
lret
inc
mov
push
adcb
dec
in
and
xchg
orb
shl
xlat
out
mov
js
xchg
notl
mov
rcll
popf
inc
arpl
add
pop
into
mov
ds
jp
dec
fstpt
xor
das
aaa
sbbb
popa
pop
sarl
enter
xchg
cmp
call
int
jmp
js
xor
test
hlt
xor
pop
lods
jp
mov
pushf
mov
popa
fcmove
jnp
push
scas
loopne
sbb
pop
int
mov
pop
push
and
xchg
mov
and
jno
lret
mov
dec
rol
and
mov
repz
out
xchg
test
scas
idivb
xchg
imul
jl
lock
adc
mov
aam
adc
or
outsl
imul
mov
addr16
insl
fnstcw
imulb
aas
mov
aaa
out
add
cltd
fistpll
add
mov
add
nop
and
adc
xor
loopne
test
adc
adc
aaa
sbb
sub
and
adc
pop
dec
add
inc
in
xchg
fisubrl
adc
pop
movsl
mov
loop
inc
lcall
subl
test
enter
scas
adc
jbe
pushf
ljmp
adc
pop
sub
test
pop
pop
dec
sub
xchg
fdivrl
xchg
fwait
mov
mov
mov
cmpb
into
loope
xchg
adc
sub
jp
sbb
cmc
ja
repz
push
sbb
jecxz,pt
fisubrl
sbb
fistl
cmp
mov
ja
sbbl
mov
repnz
sbb
inc
push
out
ss
and
hlt
mov
out
cmp
jle
leave
mov
fwait
dec
or
mov
flds
dec
out
js
out
notb
push
lods
movsb
ret
or
mov
lahf
fs
popa
inc
call
sbbl
movsl
outsl
rcrb
roll
jo
insl
aas
xchg
fsubrs
jnp
inc
popf
pop
sbb
pop
cmpsl
mov
adc
push
lcall
mov
ds
xor
jo
scas
cmpsb
je
sub
xor
roll
inc
int
cs
or
and
nop
jg
mov
push
mov
repnz
xor
push
cmp
jge
mov
enter
imul
mov
mov
mov
dec
sti
sarl
mov
pop
aad
pop
xor
shrb
sbb
or
imul
ret
sub
mov
mov
insb
adc
leave
pop
fs
pusha
adc
dec
cmc
xchg
int
add
js
xor
shl
sub
lods
inc
inc
add
add
sub
stos
push
sbb
jmp
jmp
sbb
mov
out
aam
int
add
outsb
fisubl
xor
cld
fwait
insb
popa
add
out
sub
inc
stc
dec
jno
jae
filds
cli
xorb
sbb
rcrb
rol
les
frstor
pop
movsb
cli
and
pop
mov
lret
jl
out
xchg
call
outsl
fsts
rcrb
rcrl
rcrb
fbstp
imulb
in
push
cmp
out
lds
fsts
pop
popa
cmp
xor
js
dec
mov
mov
xlat
xchg
gs
addl
divb
cld
ffree
adc
sub
fs
xor
inc
xor
mov
ja
loope,pt
dec
jb
push
adc
sbb
push
dec
daa
pop
cli
lods
adcb
out
es
and
sub
movsb
dec
jne
test
nop
popa
xor
int3
pop
and
out
js
shll
lea
popf
jnp
sub
jmp
ljmp
popa
pusha
inc
repz
and
movsl
enterw
fs
dec
int
outsb
ret
jbe
cltd
sbb
jle
std
cs
cmp
push
pop
inc
mov
and
cmp
pop
inc
xchg
jg
mov
negb
in
cmp
inc
cmp
adc
push
outsl
jg
sbb
icebp
fwait
mov
sbb
cld
lret
pushl
shr
adc
jle
jg
in
loop
inc
jns
mov
sbb
dec
fsubrl
daa
sub
aad
mov
or
push
mov
cmpsb
push
sti
jne
mov
adc
aaa
cwtl
xchg
mov
cwtl
mov
das
daa
xchg
push
iret
xchg
cmp
jo
mov
jp
js
lods
ds
or
dec
rolb
cmp
std
xchg
xchg
frstor
test
inc
gs
dec
test
nop
adc
mov
aad
sub
and
push
movsb
mov
scas
xor
into
and
es
jbe
xchg
sti
outsl
xchg
stc
addr16
or
movsb
imul
sbb
movsb
stos
cmovg
imul
sahf
test
fs
fists
mov
sbb
stos
ja
mov
test
or
or
and
mov
mull
sub
dec
subb
in
pop
pop
es
mov
int3
or
mov
mov
loope
lahf
cmp
arpl
cmp
push
scas
outsl
xchg
shr
xor
and
xor
mov
sbb
adc
mov
mov
push
push
scas
sbb
adc
in
pop
xor
jecxz
pop
dec
and
test
fstps
pop
fdecstp
and
ss
sub
std
out
testl
dec
sahf
fcmovnb
ds
xchg
aam
sub
push
out
ss
dec
les
cld
lea
std
mov
jle
pop
cld
test
or
aam
cmp
inc
ret
xlat
mov
popf
xor
pop
inc
out
lods
mov
inc
ja
xchg
adc
pop
enter
adc
mov
xlat
mov
jne
ret
gs
xor
sti
insl
push
ss
shlb
fidivrl
mov
ret
sub
mov
daa
push
push
test
cmp
inc
je
mov
loopne
outsb
pushf
repz
lret
and
xchg
mov
in
push
roll
mov
outsl
data16
inc
in
adc
stos
add
ljmp
xchg
jne
js
xor
les
repz
aad
xchg
mov
xor
loop
cmp
insl
fistpl
aad
dec
ljmp
std
sub
fwait
cmp
cmp
lods
aam
mulb
inc
mov
jbe
add
inc
xorb
aas
push
jnp
test
push
add
push
push
lods
enter
cmp
xchg
jne
out
popf
lahf
xor
and
dec
jne
insb
xor
xor
std
cmpb
sbb
ret
pushf
cmp
pop
jns
mov
fs
shlb
push
mov
mov
repz
mov
xchg
lods
arpl
aaa
imul
loopne
subb
xchg
data16
sbb
imul
push
mov
xchg
ja
imul
out
leave
push
test
out
test
mov
es
xchg
xlat
filds
scas
add
stos
insl
andl
adc
mov
sub
xor
mov
jl
leave
je
mov
jne
cmpsb
push
mov
xchg
xor
ret
inc
mov
mov
adc
fwait
insb
movsb
jns
aas
loop
cli
push
xabort
cltd
shlb
fidivrl
ljmp
cltd
adc
xchg
mov
loop
jg
inc
lods
mov
je
inc
sub
int3
pop
insl
clc
xchg
sub
jbe
shrb
jmp
mov
movsl
adcl
mov
cmpsb
addr16
push
mov
fucom
sub
loope
adc
leave
push
mov
jg
or
mov
and
cmp
gs
xor
pusha
aad
jp
testl
inc
mov
add
clc
std
pushf
pop
adc
cmp
or
adc
repnz
rol
add
sbb
xor
push
movsb
sbb
int
mov
add
mov
imul
movsb
rclb
les
clc
pusha
pop
mov
xlat
in
xchg
cmpsb
lds
mov
add
test
inc
cmpsb
mov
jae
xlat
xchg
les
mov
out
inc
jbe
sbb
xor
lret
pop
inc
jmp
adc
cmp
mov
fsubrs
push
std
adc
scas
push
jbe
fisubs
inc
mov
push
movsl
and
jo
stos
mov
inc
rcrl
cmpsl
test
xor
stc
flds
sbbb
out
iret
fs
fwait
in
push
adc
xchg
add
test
jle
into
rolb
in
nop
add
in
dec
andb
or
push
dec
adc
test
ja
clc
dec
jmp
test
dec
ljmp
pop
lods
outsb
test
gs
or
lahf
pop
shl
aas
repz
mov
scas
insl
add
xchg
stc
js
fs
lods
popa
pop
faddl
sbb
cwtl
cwtl
ja
pop
fldt
loopne
dec
stc
xchg
and
outsb
push
ljmp
inc
cmp
cmc
iret
mov
push
fucomp
enter
jmp
pop
jl
cwtl
lahf
inc
cwtl
addr16
fcompl
out
iret
sti
in
xchg
cmp
addr16
jg
xchg
xchg
lcall
mov
mov
ror
xorb
je
adc
jnp
lret
mov
xor
out
sub
cwtl
jmp
sahf
add
orb
jle
mov
xchg
mov
xchg
push
inc
shl
xchg
push
add
rolb
jl
clc
push
and
sub
out
xchg
je
cs
jle
xor
xchg
xchg
test
adc
mov
pop
icebp
dec
loope
shrl
popf
xor
add
jno
popa
std
push
in
inc
sbb
xchg
sub
loope
shrl
popf
xor
add
jno
popa
std
push
in
inc
sbb
xchg
sub
loope
shrl
popf
xor
add
jno
popa
std
push
faddl
mov
mov
pop
icebp
dec
loope
shr
shll
mov
adc
sahf
add
dec
ffree
in
aam
stos
inc
lock
je
inc
insl
push
jge
or
adc
in
int
ffree
in
aam
movsb
lea
xor
je
push
push
jge
bound
add
adc
ds
je
inc
inc
adc
mov
cld
mov
fs
sbb
and
xor
je
pop
addr16
sbbb
push
xorb
out
scas
fistpll
inc
push
mov
inc
hlt
mov
scas
in
adc
loopne
mov
mov
sub
mov
int3
in
notl
faddp
movsl
lock
mov
sub
dec
sub
mov
lea
test
inc
jno
daa
or
test
popa
fmuls
xor
pop
test
fdivrl
mov
pop
xor
push
cmp
ret
hlt
pusha
cmp
jno
sub
dec
push
add
insl
inc
pushf
dec
mov
mov
sub
hlt
sub
movsb
lock
test
cmp
pushf
jge
xor
add
jo
xchg
lahf
sbb
scas
mov
repnz
cmc
fadds
sbb
imul
jl
orl
call
sub
sbb
push
push
jno
push
push
xchg
fwait
lcall
mov
test
je
inc
insl
push
jge
or
adc
in
hlt
ffree
in
aam
movsb
lea
fs
je
inc
insl
push
jge
or
adc
in
xor
insb
dec
mov
call
pop
shrl
out
mov
and
jmp
psllq
jno
jmp
push
fldt
scas
gs
push
test
inc
adc
lret
rcrb
mov
out
pop
cmpsb
mov
xchg
ss
dec
sbbl
pop
mov
mov
pop
fidivrs
pop
mov
mov
sub
and
dec
jb
clc
push
iret
sbb
movsb
in
loopne
inc
xchg
stos
scas
cmpsl
mov
aas
sub
std
icebp
or
pop
sub
mov
sahf
aam
lods
xchg
pushf
xor
outsl
push
cmp
lea
or
es
jo
mov
push
mov
enter
fucom
sahf
jnp
push
push
mov
sbb
dec
loope
inc
adc
jge
mov
xchg
jae
test
ss
imul
rcrb
jle
insl
mov
arpl
popf
sahf
mov
repnz
sub
test
aad
loope
jns
into
lods
push
fdivrl
aaa
sub
push
outsl
push
push
or
ret
xchg
clc
hlt
scas
push
xor
xchg
faddl
cmc
mov
mov
mov
jge
subb
lods
lcall
je
pop
in
fs
adc
sahf
sti
push
cmp
adc
popa
repnz
dec
repz
loopne
push
aad
ret
out
push
sub
sub
push
pop
push
into
fcmovnbe
test
fldcw
test
push
cmpsl
adc
es
dec
sbb
sti
fadds
push
lret
popa
sarb
fdivrs
pop
hlt
inc
cmpsb
mov
insb
and
dec
dec
stc
arpl
cli
dec
je
ds
xor
dec
pop
outsb
cmp
clc
pop
scas
xchg
mov
mov
test
pusha
pop
sarl
movsl
mov
xchg
pop
inc
cs
and
fcmove
cld
clc
adc
add
sub
or
mov
add
outsl
adc
dec
xor
ljmp
adc
jle
pop
mov
clc
jge
sbb
fs
and
aam
sub
sub
cmp
fists
push
cmpsb
clc
sti
jmp
jb
dec
pop
fbld
jns
rcr
sub
push
imulb
inc
add
pop
pop
push
ss
cltd
mov
loopne
in
mov
cs
cmp
jae
cwtl
sbb
add
shlb
xchg
loopne
push
mov
jb
sti
push
inc
pop
dec
repnz
inc
jmp
mov
lret
mov
xchg
mov
push
push
mov
cmpsl
or
call
out
jg
nop
push
stos
test
jae
add
mov
or
sbb
mov
xchg
pop
or
add
pop
int
jge
fadds
cld
shl
xor
hlt
test
clc
je
sub
in
cli
adc
lahf
int3
addb
xchg
inc
mov
movsb
mov
mov
and
nop
and
adc
notl
das
das
xor
push
nop
nop
mov
cli
push
insb
mov
ds
adc
popf
push
mov
adc
lret
cmpsb
imul
sti
pop
jmp
jnp
sub
notb
adc
pop
nop
sub
jge
aam
add
in
dec
sub
imul
or
icebp
push
xchg
daa
sbb
jae
add
test
call
out
or
div
sub
std
jnp
mov
data16
stc
mov
sahf
fcomip
paddsw
cmp
adc
mulb
aaa
imul
jb
inc
call
xlat
jb
sbb
jo
inc
out
push
mov
xchg
push
jmp
sbb
cmp
xchg
clc
pop
cmpsl
std
inc
ja
inc
push
ret
cltd
cmc
jle
fidivrl
andb
xor
jle
push
ja
loope
push
or
push
cs
lahf
jne
push
mov
scas
push
add
adc
es
fdiv
in
sub
adc
xor
push
mov
sub
arpl
repnz
mov
fimuls
leave
lret
lea
push
stc
inc
mov
loop
xor
add
dec
jp
add
or
dec
in
adc
ljmp
cs
cmpsb
loop
cmc
pop
mov
mov
cmp
int3
mov
lock
enter
mov
fnsave
push
loop
mov
orl
rsm
cmc
leave
dec
adc
mov
lea
xor
jmp
sbb
push
xchg
or
mov
mov
jge
xchg
dec
imul
lahf
mov
and
lahf
cli
mov
repnz
sbb
or
mov
les
mov
pop
cmp
mov
add
adc
ds
pop
inc
add
pop
lahf
fcoml
pop
mov
jecxz
mov
inc
mov
ret
div
rorl
scas
pusha
leave
and
enter
xchg
add
je
mov
das
adc
push
adc
jnp
jnp
rcrb
push
test
cmp
push
dec
mov
inc
xorb
repnz
dec
js
roll
lea
add
sub
cmp
cmp
sbb
pop
in
pop
stos
jecxz
mov
cmpps
fldpi
and
fwait
add
add
out
sbb
xchg
inc
filds
mov
mov
sbb
mov
jecxz
xchg
push
pop
bound
push
mov
cmp
aas
push
imul
sbb
stc
jnp
loopne
push
sbb
mov
je
add
jg
jle
fildl
mov
dec
pop
test
lret
xor
out
sub
push
jmp
frstor
lret
lahf
adc
sbb
fisubrs
sbb
pushf
lret
imul
fistl
fnsave
mov
jle
mov
sbb
sbb
out
adc
mov
mov
sbb
mov
movsl
sbb
stc
adc
push
dec
and
and
cld
xchg
add
out
pop
jmp
sub
aad
punpckhdq
jo
cmp
pop
mov
cmp
dec
fs
push
sub
pushf
add
movsb
je
icebp
mov
xlat
and
in
mov
add
or
xchg
lds
fnstsw
rcrb
in
inc
idivl
scas
cmp
mov
cmp
or
jg
push
ret
testb
hlt
pop
pop
push
mov
add
add
ljmp
pusha
in
jne
mov
add
ficoml
ja
outsb
xlat
add
js
mov
in
mov
pusha
movsl
adc
pop
hlt
push
jle
pop
xorb
insl
repnz
ja
arpl
cltd
pop
stos
fwait
in
adcl
push
cmp
mov
and
cmp
inc
xor
je
shll
in
lock
or
pop
adc
xchg
je
in
shll
test
insl
jno
mov
mov
cmp
cmp
adc
and
and
mov
fs
cmp
push
inc
dec
xchg
xchg
lcall
add
test
mov
mov
inc
mov
adc
pop
aas
adc
sbbb
sub
jb
das
stc
dec
sarl
inc
leave
jmp
fnstcw
and
xor
andl
hlt
in
sub
adc
ja
popa
fwait
inc
mov
push
jne
inc
fcmovu
add
fs
xchg
fsubrp
dec
lods
mov
cmp
in
adc
mov
mov
idivl
xor
sub
icebp
or
mov
jo
scas
or
pop
popf
pop
clc
std
push
mov
rcll
jecxz
fs
push
test
pop
cmp
xorl
es
fisubrl
das
adc
mov
push
mov
pop
lret
adc
stos
sbb
stc
mov
pop
imul
pop
das
pop
in
psrlq
arpl
sub
cmp
sti
mov
or
or
xchg
cmpsb
cmpsb
nop
das
sub
mov
mov
cltd
cmp
andb
inc
or
test
rcrl
loope
mov
dec
lcall
sbb
sub
fisttps
sub
xchg
cmp
bound
add
mov
daa
and
imull
mov
clc
nop
jno
xor
in
jb
leave
ds
push
test
push
jp
dec
and
outsb
add
lcall
notb
jae
outsb
mov
in
xchg
sbb
mov
ljmp
sbb
mov
xchg
into
cs
add
mov
arpl
xchg
and
push
cmpsb
and
pop
xor
push
xchg
je
cmp
add
mov
pop
dec
rorl
orb
xchg
jecxz
xor
adc
mov
cmc
imul
pusha
and
sbb
or
sub
mov
xchg
lret
cmp
negl
lods
arpl
jg
pop
test
cmpsb
add
stos
mov
ror
in
call
dec
adc
mov
scas
mov
gs
ficomps
jb
sbb
push
adc
js
cmp
push
imul
push
insb
sub
and
aam
or
shlb
lret
les
cltd
inc
xor
lods
cld
insb
and
push
int3
jbe
insl
stos
mov
adc
dec
push
mov
or
mov
lret
popa
pop
push
dec
loope
out
xchg
mov
sbb
push
aaa
outsl
or
in
dec
jnp
mov
mov
lea
clc
mov
mov
jecxz
cmpsb
push
push
cmp
and
mov
and
inc
mov
outsb
push
dec
jns
dec
jno
pusha
adc
ret
js
or
xchg
jb
cltd
daa
xor
imul
daa
lahf
icebp
aaa
jmp
ret
mov
js
fcmovb
addr16
mov
movl
addr16
cli
scas
jg
pushf
sahf
cmc
into
aam
xor
dec
pop
pop
scas
clc
add
dec
loop
pop
aas
cs
xchg
cmp
add
cwtl
mov
cmp
pop
sbb
repnz
mov
cld
mov
pushf
jb
mov
fstl
or
mov
push
mov
scas
scas
sub
loop
mov
sub
pop
mov
fidivrl
adc
mov
outsb
cmp
adc
cmp
mov
mov
mov
mov
out
orb
xchg
subb
ret
mov
lods
mov
xor
ficoml
std
idivb
push
andb
sbb
mov
mov
fisttpl
pop
aas
adc
movsb
leave
rep
lock
mov
mov
cmp
xchg
fcmovb
inc
ds
cs
lret
stc
dec
inc
pop
ss
in
ja
cwtl
cmp
rorl
xchg
adc
jnp
add
dec
test
mov
xor
mov
cmp
dec
jae
icebp
fmuls
dec
mov
test
lahf
xchg
jmp
xor
test
lcall
pop
out
mov
push
and
xchg
test
nop
or
in
mov
iret
jnp
icebp
mov
loopne
fidivrl
cmp
xchg
xchg
mov
into
cmp
into
xchg
push
xor
loopne
jmp
dec
cli
in
loopne
pushf
jb
dec
ss
ss
mov
sbb
clc
add
sbb
hlt
cwtl
dec
aas
jo
mov
push
sbb
cmpsl
jle
adcl
pop
inc
xor
lock
xchg
mov
stos
cmp
test
bnd
das
ss
jge
leave
shlb
sbb
cmp
pop
adc
sti
loope
mov
lds
sbb
inc
and
popa
adc
or
and
adcl
es
xor
sbb
jecxz
cmc
lret
pop
ds
jmp
scas
int
shrb
xchg
mov
lahf
std
cmp
pop
mov
out
adc
into
lret
ja
sbb
jae
sbb
xor
imul
mov
dec
in
loope
push
daa
jge
movsb
pop
lds
jne
mov
jne
fs
cmp
ljmp
movsl
cmp
stos
stc
mov
and
cmc
enter
outsl
pop
sbb
lret
js
ror
repnz
dec
das
pop
dec
in
call
pop
ss
adc
adc
loope
pop
inc
cmp
dec
push
and
sbb
pop
bound
clc
pop
jb
ljmp
imul
lret
pushf
xchg
xor
pop
std
mov
adc
lcall
inc
fistpll
jmp
cmp
cmp
jo
jp
add
mov
jnp
sub
aad
out
push
insb
aad
xor
lret
inc
adc
mov
mov
mov
sti
jbe
in
adc
sbb
jecxz
das
cmp
push
mov
or
cs
bound
jae
mov
sub
cld
movsl
sub
xchg
xchg
mov
xor
repz
repnz
mov
sti
orl
add
mov
aas
insb
sub
rol
xchg
mov
or
sub
mov
aam
scas
loop
mov
dec
scas
aad
push
mov
outsl
inc
dec
xor
pop
jecxz
jmp
lret
xor
jbe
in
and
push
mov
jne
into
xor
mov
xor
addb
inc
in
push
xchg
ss
cmp
pop
push
mov
add
and
lahf
ret
pop
testb
bound
jl
push
mov
ljmp
jge
dec
cli
in
push
jae
test
fmuls
mov
hlt
roll
outsb
imul
xchg
xor
dec
sti
and
movsl
iret
cmpsb
push
inc
cmp
cmpsl
fnstcw
icebp
dec
out
push
adcb
add
cltd
pop
push
pop
and
imul
shlb
pop
stc
cmp
ficoml
pop
mov
and
mov
sbb
movsl
cmp
mov
stc
arpl
lret
pop
push
jp
test
ljmp
add
sub
add
mov
lret
jmp
lret
mov
jge
je
jl
arpl
daa
lea
dec
dec
repnz
pop
mov
mov
or
adc
adc
shll
loopne
cmp
cmp
popa
pop
stos
hlt
into
lods
ret
stos
push
jl
xchg
repz
shll
jbe
dec
int
inc
pop
data16
lods
into
sub
push
rcrb
dec
push
bound
stos
cmp
dec
xchg
push
loope
push
mov
sbb
insb
dec
mov
mov
sbb
imul
and
mov
clc
cs
scas
pop
xchg
ja
enterw
cwtl
mov
mov
lcall
xchg
mov
pop
dec
aam
lret
call
jno
daa
insb
popf
jnp
xchg
ljmp
mov
inc
or
call
in
and
and
mov
repz
lea
jb
mov
ret
mov
daa
cld
xchg
and
scas
cmp
cli
dec
hlt
xchg
mov
repz
in
iret
pop
mov
aas
rorb
rorb
push
cmc
adc
dec
ljmp
and
dec
shrl
mov
mov
icebp
sti
mov
ss
loopne
sub
mov
je
mov
dec
cmp
adc
xchg
xor
cmc
push
jle
lcall
cmp
mov
jb
idivb
lods
dec
jle
pushf
les
sbb
lock
xor
cmp
add
stos
inc
adc
jb
cmp
cli
mov
xor
and
cmc
jo
sbb
addr16
xchg
jb
sar
rcll
aad
add
icebp
insb
jle
inc
lea
es
adc
inc
mov
aas
mov
ret
pop
mov
fisubs
shlb
orb
out
and
mov
outsl
pop
jp
cld
arpl
mov
mov
ljmp
aaa
cmpsl
addr16
adc
pop
cmp
imul
iret
movsb
mov
std
push
ret
mov
xchg
addr16
shrl
push
cld
test
dec
jo
cs
mov
dec
pop
or
out
or
or
in
add
push
mov
push
je
stos
cwtl
les
in
push
imul
clc
inc
mov
lahf
cmp
ret
out
mov
out
pop
lcall
ret
repz
int3
loope
cs
int
add
movsb
push
sti
mov
xor
outsb
jb
mov
mov
aam
add
xor
xor
shlb
xchg
xchg
adc
jnp
sub
mov
xchg
das
mov
add
xchg
sbbb
stos
into
cli
cmp
jae
sbb
aam
test
push
inc
pop
mov
into
inc
dec
daa
sbbl
lds
bnd
data16
imul
scas
les
mov
xchg
sub
lds
insl
or
icebp
jmp
aad
xchg
mov
xor
jl
ljmp
loope,pt
xchg
mov
mov
cmpsl
cmc
and
adc
cli
cli
ffreep
pop
movsb
jbe
stos
ror
sbb
test
cmp
popf
cmp
sbb
es
sub
pop
cmp
iret
dec
mov
xor
mov
lret
sub
call
jge
sub
lcall
pusha
sbb
cmpsl
mov
pop
pop
lods
int
int
and
adcl
int
addr16
movsb
add
or
ja
loopne
rclb
ret
sbb
rcrb
push
popa
or
xlat
loope
push
add
pusha
xorb
jecxz
mov
lret
jp
stos
js
jecxz
mov
fadds
lea
dec
mov
inc
cmpsl
aad
dec
loopne
jmp
orl
cmp
mov
out
shrl
xlat
ja
adc
pop
or
dec
adc
dec
outsl
push
mov
in
dec
pop
sub
ja
push
cmp
imul
popf
mov
sbb
mov
jecxz
lret
jecxz
cmp
lea
cld
cmc
fcompl
xchg
aam
repz
pop
push
and
or
ret
cmpsb
lock
xor
sub
cmpsl
rcrl
dec
call
fldl
fsubl
popf
lret
xor
push
out
dec
xchg
jnp
pop
shl
std
fs
mov
mov
lahf
pop
jae
sub
cwtl
movlps
out
subb
es
lea
mov
mov
leave
sbb
inc
or
inc
outsl
ds
pop
push
test
xchg
enter
xor
and
fs
push
mov
dec
pop
inc
add
jmp
je
sub
cmc
loopne
jp
cs
inc
xor
lret
xor
rcl
cld
cwtl
jnp
jno
jmp
and
pop
mov
dec
pop
cmpsb
test
sbb
lcall
mov
adc
mov
cmpsb
leave
push
xorl
lcall
iret
insl
loop
push
adc
jle
mov
movsb
rorl
and
movsb
fsubrs
add
fs
test
fildll
lock
arpl
cs
add
mov
sbb
mov
js
sbb
fwait
js
push
jmp
pop
mov
mov
testb
fidivs
int
mov
push
add
jnp
push
mov
sbb
in
xor
mov
xlat
daa
subb
test
jns
cmp
pop
and
mov
mov
cli
mov
ss
setp
es
pusha
add
push
js
cmp
pusha
jge
xlat
pop
notb
or
push
inc
loopne
lods
mov
in
add
enter
sub
stos
add
out
cwtl
fldt
leave
ret
xchg
pop
xchg
inc
sub
xchg
add
fidivl
sub
inc
xchg
sbb
fdivrl
js
dec
xchg
mov
add
cwtl
mov
adcl
js
mov
cmp
cltd
or
cmp
shrb
xchg
sub
fcomp
test
add
xchg
clc
loopne
inc
lods
outsl
mov
jb
insb
pop
leave
iret
jb
in
xchg
xchg
lock
or
cmpsl
jae
jp
roll
shrl
push
and
lods
pop
bound
xlat
lock
repnz
pop
inc
data16
test
repz
jg
idivb
or
adc
xchg
push
in
cwtl
inc
outsb
sarb
faddl
pop
imul
inc
adc
push
cs
fucomi
fstpl
leave
dec
aas
test
jne
jmp
pop
adc
push
sahf
cmpl
mov
ss
jge
outsb
insb
pop
arpl
mov
nop
inc
stos
fstps
lock
sub
and
nop
mov
lahf
add
push
aas
inc
out
sbb
shrl
mov
ljmp
cmpsb
mov
cmpsb
mov
jae
nop
dec
bound
xlat
pop
adc
xchg
sahf
jnp
loopne
sahf
out
mov
dec
mov
mov
cmpsb
daa
aam
pusha
scas
dec
lcall
std
movsb
lea
fs
je
inc
insl
push
jge
or
adc
in
hlt
ffree
in
aam
movsb
lea
fs
je
inc
insl
push
jge
or
adc
in
notl
movsl
lea
mov
dec
insl
push
jge
or
and
cld
int
fisttpll
cld
movsb
lea
fs
imul
insl
push
or
mov
ret
in
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
mov
adc
scas
jb
add
pop
or
sbb
repz
xchg
mov
pushf
push
lods
arpl
in
and
sbb
sub
cmp
mov
jl
mov
pushf
xchg
lods
stc
mov
pop
in
sub
add
aas
lock
cmpb
shlb
cmc
sbb
adc
roll
clc
adc
push
ljmp
shrl
pop
sbb
les
nop
lock
inc
mov
push
fcompl
icebp
cmp
das
rcrl
mov
cmp
icebp
fsubrl
xchg
or
out
test
push
sub
cld
or
or
je
inc
pushf
push
addr16
and
cld
mov
rcrb
repnz
sbb
out
pop
dec
iret
jae
jl
dec
sahf
inc
mov
loop
iret
in
dec
test
jmp
jge
jno
arpl
dec
loopne,pn
push
cld
xor
in
adc
adc
sbb
rcl
sub
flds
pushf
jae
pop
mov
adc
and
mov
sub
cmp
dec
mov
jl
int
call
pop
int3
cmpsb
scas
jle
push
je
cmpb
inc
inc
nop
dec
les
xlat
cmp
jmp
adc
pop
int3
push
cltd
inc
xchg
dec
scas
add
dec
cmpsb
cs
ret
dec
int3
xor
jmp
pop
orb
in
and
xor
sbb
sub
cmp
dec
sbbl
jl
mov
push
lods
arpl
in
and
xor
sbb
sub
cmp
dec
sbbl
jl
mov
add
xor
mov
rcrb
sti
aad
xchg
and
mov
adcl
test
jb
hlt
pop
push
insl
cli
jge
jl
xor
dec
rcll
mov
into
xor
pop
fstpl
mov
ss
outsl
jg
ret
into
push
pop
push
ja
rorl
push
pop
adc
ret
or
lret
push
iret
mov
jmp
add
hlt
test
into
sub
aad
or
cmp
inc
xchg
pop
das
jp
mov
push
cmp
inc
jo
xchg
filds
das
lahf
rolb
fnstenv
cmp
adc
fs
mov
into
loop
cmp
and
or
sarl
jns
jnp
fidivrl
inc
daa
mov
imul
mov
loopne
jl
dec
clc
sbb
jb
movsl
das
sbbl
out
push
jmp
xchg
xor
shrb
push
ret
popf
sub
jle
fwait
enter
lret
notb
daa
mov
test
mov
or
arpl
xchg
int3
ret
add
mov
call
xchg
aad
pop
jnp
push
loop
sarl
fsubrs
sbb
xchg
push
mov
addr16
lcall
add
cld
arpl
fdivrp
jne
xchg
dec
stc
or
out
cs
loope
pop
pop
sbb
fcompl
jge
adcl
pop
mov
je
jae
fsub
push
jo
out
adc
cmp
insb
out
rolb
orl
ds
push
push
jne
adc
test
add
xor
add
sbb
xchg
mov
mov
lcall
dec
xor
ret
int3
xchg
pop
sub
push
xchg
aam
cwtl
jae
stos
xadd
shlb
jnp
jecxz
das
cmp
lds
mov
sub
fwait
xchg
push
ds
leave
ljmp
mov
cmp
lods
outsl
and
pop
push
xchg
lret
adc
ja,pt
stos
xchg
mov
cmp
movsl
cmp
or
repnz
cmpsl
fsincos
pushf
dec
inc
sbb
movsb
out
into
sbb
test
testb
scas
push
mov
test
popa
pop
pop
add
sbb
lahf
dec
pushf
mov
jo
repz
pushf
xor
sub
out
mov
pop
out
push
and
dec
xor
jne
mov
mov
nop
pop
add
sahf
sub
jecxz
fists
push
hlt
mov
sbb
popa
cmp
pop
add
fldenv
shlb
pop
shll
push
pop
stos
xchg
movsl
test
stc
in
daa
not
pop
in
bound
in
insl
sbb
jns
test
insb
insl
in
arpl
jo
pop
popf
mov
inc
pop
sbb
jle
xor
ja
xor
lods
scas
cmp
push
jne
sti
dec
sahf
jbe
pop
iret
jmp
loop
pop
jmp
jmp
outsl
lcall
scas
stos
pusha
es
loope
jge
aaa
insb
adc
rcl
icebp
xlat
sbb
sbb
add
add
xlat
outsb
push
scas
sbb
inc
xlat
jg
sbb
mov
jp
cli
jae
sbb
movsl
mov
insb
aam
mov
mov
push
mov
push
test
xchg
cmpsl
jb
mov
call
lret
dec
popa
push
mov
mov
loope
lcall
dec
lret
adc
mov
rol
mov
adc
pusha
pop
loop
insl
lock
pop
rcrb
out
inc
push
mov
add
sti
stos
sbb
mov
inc
test
std
mov
adc
inc
incl
jg
ja
jns
loopne
mov
imul
scas
movsl
inc
pushf
decb
int3
push
xchg
mov
jbe
or
adc
js
adcb
xor
xor
jbe
add
pop
mov
pusha
xchg
sub
call
mov
int
cmc
ja
pusha
adcb
add
mov
dec
inc
mov
adc
xchg
push
sbb
in
loopne
repz
jns
mov
mov
out
mov
out
cmpb
mov
xchg
push
xchg
popf
repnz
movsl
cmpb
loope
pushf
mov
lods
push
adc
popf
cmp
dec
xchg
mov
mov
cltd
cmp
mov
fwait
mov
push
je
cwtl
add
sub
stos
pop
and
mov
fstps
sub
addl
adcl
or
loopne
data16
iret
fisttps
into
jo
jo
into
xchg
dec
sub
pop
inc
daa
pop
jp
arpl
and
lret
cmpb
mov
pop
clc
mov
push
lock
inc
es
ret
cmpsb
jmp
fmull
xor
push
js
cltd
mov
movsl
mov
addr16
jnp
mov
mov
test
cmp
sbb
lock
jmp
jb
push
pushf
pop
dec
stc
leave
jmp
jo
das
pop
data16
cmp
test
cmp
fmull
mov
fs
mov
mov
jmp
push
jge
xchg
daa
aad
rol
sub
mov
xor
mov
aad
gs
call
jno
cmp
cld
arpl
inc
popa
add
dec
jne
je
test
sbb
loope
or
push
jns
inc
popf
jne
ja
xor
dec
test
adc
push
je
addb
xor
lret
cmpsl
hlt
mov
mov
mov
int
in
pop
insl
loopne
push
pop
jo
add
int3
dec
arpl
lds
loop
popf
or
aam
imul
mov
pop
loope
xor
outsl
mov
pushl
movsb
shl
mov
pushf
mov
stos
mov
jp
movsb
rolb
test
mov
in
xor
xchg
out
pop
mov
sti
xchg
clc
lret
lret
cmc
test
ja
daa
mov
jbe
push
add
push
dec
sbb
pusha
pop
xor
xor
ret
loopne
dec
cmp
or
fnstsw
mov
jmp
cmp
outsl
test
cwtl
xor
hlt
shl
lock
and
fists
xchg
adc
dec
mov
loope
mov
inc
mov
mov
inc
mov
shl
fstpt
outsb
je
sbb
cmp
shll
lret
jmp
arpl
sub
les
xchg
mov
cmp
mov
adc
push
xchg
push
xchg
nop
mov
cmp
xchg
inc
mov
andl
mov
xchg
pop
dec
xchg
sub
cmp
bound
cmpl
pop
and
sbb
repnz
mov
push
jle
jmp
pop
push
out
dec
pop
mov
std
dec
push
and
call
cltd
and
xchg
sub
sarb
scas
loope
mov
dec
jp
out
leave
add
daa
repz
out
cld
loop
out
stos
jmp
imulb
adc
outsb
aam
dec
or
or
mov
int3
mov
pusha
push
jae
sti
stos
loop
cmp
pop
hlt
test
jp
cmp
adc
xchg
xchg
sub
cmc
lods
cmp
popa
mov
push
es
push
mov
sub
int3
cli
dec
aaa
call
addr16
ljmp
sbb
shrb
xor
fisttps
adc
or
pop
push
int3
cmpsb
cltd
fwait
addr16
pop
scas
mov
pushf
mov
add
pop
push
mov
sti
sub
daa
dec
inc
fucomp
pushf
and
rorb
scas
pop
sub
mov
xor
fisttps
inc
mov
jns
or
xchg
xchg
sub
movb
jle
and
gs
push
pop
jmp
jmp
jns
clc
out
sarb
pop
mov
pop
cmp
inc
faddl
sbb
xchg
cltd
iret
xchg
xchg
loope
imul
pop
add
lahf
inc
arpl
jo
inc
fisttpll
lods
lds
or
hlt
adc
sbb
shr
shlb
mov
sub
inc
add
mov
aaa
jle
mov
lock
fdivrl
jl
sbb
dec
pop
fwait
jl
jmp
inc
pop
int
dec
mov
imul
push
or
imul
test
pushf
call
or
mov
jg
les
sbb
push
inc
jb
mov
popf
mov
cmpl
push
dec
add
stos
mov
in
xchg
loop
in
inc
push
sbb
int
inc
push
data16
xor
mov
mov
pop
or
or
sub
iret
pop
push
push
cmp
sub
pop
xorb
addr16
push
and
bound
subl
in
sub
jns
ja
jg
sub
les
lds
icebp
call
and
xchg
jmp
insl
je
xchg
in
out
ds
aaa
xchg
sahf
jle
mov
dec
bnd
mov
mov
sahf
mov
jmp
xchg
adc
movsb
cli
test
xor
test
sub
xchg
xlat
outsl
mov
inc
sti
and
outsl
push
orb
jp
jno
lcall
jle
loopne
test
or
fdivs
pop
incl
insl
pop
lds
cltd
pop
pop
push
rclb
inc
cmp
inc
out
rcrb
inc
aaa
sti
pop
insb
pop
mov
xor
dec
mov
sbb
jmp
cmp
std
xchg
addr16
fiaddl
clc
mov
addr16
out
in
add
icebp
sahf
mov
shr
inc
inc
inc
mov
js
push
popa
pushl
gs
inc
adcl
icebp
lahf
pushf
test
or
pop
and
inc
arpl
dec
sti
mov
daa
ja
push
je
cmc
push
jne
hlt
add
mov
ret
cs
call
sub
out
jnp
mov
loop
and
mov
mov
inc
int3
inc
push
mov
jmp
xchg
jp
jbe
add
dec
mov
leave
inc
loope
rcll
push
pusha
cwtl
jno
int3
cli
cwtl
test
dec
sbb
ss
and
gs
and
cs
mov
mov
stos
jl
cmp
insb
jne
inc
rcrl
pop
dec
out
xchg
orl
dec
xchg
inc
rcll
sub
enter
dec
sbbb
repnz
push
pop
inc
mov
and
hlt
in
fwait
xchg
insb
mov
movsl
pop
xchg
sub
mov
or
pop
dec
rcll
cmp
push
mov
pop
and
sub
adc
inc
int3
arpl
cmp
xchg
ss
in
loopne
mov
push
sbb
and
subb
sub
mov
push
xor
pop
fdivl
pop
xor
sbb
test
sbb
and
and
inc
cld
aaa
jmp
sbb
sub
sbb
and
daa
out
scas
push
loope
add
test
jo
mov
push
popa
pusha
movsl
mov
getsec
je
mulb
inc
dec
sbb
pop
pop
xor
int3
dec
cmp
xchg
push
inc
enter
mov
out
ljmp
cld
adc
ret
push
mulb
lea
inc
int3
jns
dec
xor
cwtl
and
adc
or
xor
popf
mov
pop
pop
mov
sbbb
scas
mov
sbb
das
or
dec
emms
ret
mov
sub
repz
fists
add
mov
shr
stos
jmp
ja
fmull
mov
mov
loopne
addr16
mov
pop
pushf
outsl
xchg
int3
inc
stos
mov
and
movsl
sbb
mov
push
test
fidivs
sahf
repnz
mov
xchg
push
lret
or
mov
in
cmp
leave
push
jns
cmp
icebp
and
sbb
xchg
sbb
test
adc
and
cltd
ss
pop
mov
fs
jg
cmp
and
loope
ds
add
iret
subl
and
jae
sbb
inc
in
stos
cmp
call
push
mov
je
cltd
pop
mov
in
jmp
mov
jge
mov
into
mov
push
adcl
mov
mov
mov
dec
dec
les
les
xchg
out
cld
hlt
mov
xchg
mov
ret
jl
mov
pop
and
lock
ds
loopne
sub
std
dec
jns
mov
dec
js
insl
ss
icebp
pop
or
js
xchg
repnz
adc
mov
cmp
jnp
cld
les
stc
popf
nop
nop
jecxz
sub
or
scas
mov
mov
repz
sub
inc
bound
sbbl
out
adc
add
xchg
xchg
sbb
lret
xor
dec
push
movsb
adc
clc
fsts
add
insb
mov
sub
or
pop
cltd
inc
sub
ds
dec
insb
sbb
jle
test
orl
ficoml
jl
arpl
jmp
lcall
jae
cwtl
sbb
pusha
stos
mov
cmp
cmpsb
sbb
test
xchg
jb
enter
mov
stos
push
jnp
andl
mov
inc
jo
mov
jae
push
rorb
adc
or
xchg
out
outsb
xchg
adc
addr16
rorb
jbe,pt
mov
dec
arpl
sti
stc
xchg
mov
push
movsb
dec
mov
fnstenv
inc
xchg
ss
or
xchg
xor
or
cmp
pop
mov
xchg
cmp
cmpl
outsb
jo
mov
ret
inc
leave
roll
cs
in
push
in
lock
cmpsl
repnz
or
or
out
mov
and
les
xor
fimuls
push
in
mov
idivl
push
xor
sbb
outsb
mov
mov
jmp
fmulp
sbb
dec
adc
std
arpl
jge
shrb
ss
lcall
js
pop
out
pop
ja
mov
in
in
mov
mov
bound
jne
int
pop
lret
fmuls
adc
das
inc
std
mov
rclb
shll
sbb
shlb
test
jmp
fwait
pop
and
out
adc
scas
int3
or
in
cmpsb
lods
aad
mov
jno
fsub
cltd
xor
loopne
sbb
icebp
cmp
into
mov
ret
lret
cwtl
loope
lahf
pop
add
cltd
adc
enter
mov
push
outsb
cmp
pop
cmp
or
call
lret
int
pop
push
aas
cmp
add
mov
xchg
popa
push
dec
insb
mov
mov
or
fidivrl
mov
inc
push
mov
sahf
pop
xchg
jae
enter
mov
mov
loopne
jg
sub
or
pop
inc
push
sti
in
push
jge
and
popf
xchg
dec
nop
mov
jbe
mov
movsl
bound
and
adc
sti
imul
cwtl
dec
or
mov
popa
mov
int
sub
scas
jbe
pop
addr16
ss
int3
sbb
jbe
daa
sbb
sbb
mov
cltd
cmp
stos
dec
mov
les
adc
ficoms
sar
lret
pop
and
dec
sbb
cmp
rcrl
mov
enter
aaa
stos
lock
addl
cmpb
stos
cmpsl
jnp
imul
push
xchg
shlb
pop
mov
add
pop
bound
jmp
jne
scas
mov
pop
sbb
xor
jnp
mov
push
mov
in
ffreep
dec
out
add
cwtl
inc
lock
push
cmp
adc
cli
loope
loope
push
add
ljmp
mov
int
adc
lds
add
out
movsb
mov
leave
mov
mov
mov
enter
sti
movsl
test
inc
xor
jnp
aad
push
aas
test
aaa
jge
outsb
fcompl
je
ss
and
cli
mov
mov
jge
and
jne
scas
repnz
adcl
mov
test
push
cmpsb
es
bound
lcall
mov
out
mov
lcall
in
dec
or
dec
out
clc
hlt
ds
and
fucomip
jmp
daa
repnz
psraw
mov
and
and
insl
push
stos
xchg
repz
push
pop
cmp
lcall
cmp
pop
aam
lds
cmp
idiv
mov
hlt
xchg
push
lods
cmp
jmp
pop
popf
lret
push
fimuls
mov
mov
call
lcall
out
cmp
push
xor
jbe
inc
js
xchg
jmp
xor
sbb
out
leave
mov
xor
add
xchg
xchg
xchg
out
popf
xor
mov
movsl
out
out
xchg
pop
inc
xor
adc
inc
sbb
inc
faddl
xor
or
scas
cli
pop
push
mov
cltd
xor
xor
pop
mov
je
cmc
lret
xor
rolb
pop
lahf
xor
and
std
rep
adc
and
pop
jnp
icebp
jbe
push
cld
dec
cld
mov
push
out
xor
xlat
add
pop
incb
lret
mov
push
ret
out
add
add
sub
out
call
pop
clc
and
bound
adc
xor
inc
xchg
cmp
jge
pop
or
dec
leave
xchg
pop
sub
cmp
sbb
filds
add
push
push
mov
dec
fsubs
lcall
aas
sbb
jns
icebp
sbb
ja
ret
pop
cmp
mov
dec
aaa
int
push
mov
push
inc
fdivr
insl
mov
adc
jae
insb
and
jg
pusha
jmp
scas
nop
add
adc
cmp
push
dec
call
dec
ss
stos
push
jne
xchg
xor
ror
or
push
out
add
and
cli
sbb
popa
es
cmp
jnp
or
daa
repz
es
shrb
mov
mov
js
sbb
mov
sbb
int
inc
cld
fldenv
push
sar
cs
push
cmpb
fcomps
fwait
add
fs
gs
jnp
push
iret
aam
pushf
mov
lahf
pop
daa
mov
push
les
lret
sahf
nop
xorb
int
xor
jb
std
int3
fwait
stos
sub
insb
mov
mov
sbb
mov
sub
mov
mov
jp
hlt
mov
sti
les
lcall
sub
xor
dec
mov
and
xchg
jbe
mov
inc
or
mov
inc
pop
sbb
inc
mov
stos
pop
aaa
xor
jno
xor
xchg
cld
popl
imull
mov
lahf
test
incb
pop
sbb
add
inc
insb
aam
sahf
mulb
mov
pusha
jg
insl
sub
call
popf
inc
call
pop
pop
xor
insl
mov
out
stos
push
xor
test
ljmp
adc
cli
cmp
xor
cs
push
jecxz
aas
push
pop
sub
adc
adc
je
bound
add
pushf
iret
mov
push
jo
inc
aaa
mov
insl
lret
lds
fists
jg
call
sbb
cmpsl
fiadds
xchg
or
repnz
iret
outsb
mov
cs
dec
jmp
or
jae
or
push
pop
jg
fstps
add
addr16
inc
mov
call
cs
xchg
lock
shrl
jnp
adc
sti
out
cmpxchg
push
int
imul
repz
and
xorl
inc
xor
mov
popf
bound
xchg
bound
dec
xchg
stos
mov
or
jge
in
orb
mov
outsl
lods
fadds
fstps
mov
test
jmp
adc
lods
stos
sub
ja
adc
in
pop
jbe
jnp
or
scas
rcll
fidivrs
push
and
cwtl
inc
outsb
dec
jno
popa
pop
cmp
sbb
adc
loopne
fwait
mov
inc
mov
cmp
push
test
jae
or
fnstsw
push
adc
sbb
out
pop
jge
shl
mov
xchg
jp,pt
xor
out
xchg
mov
push
mov
int3
nop
add
dec
out
cmp
lods
repz
rolb
and
fsubs
aam
das
mov
inc
fwait
mov
jne
fisttpll
lcall
jge
lahf
xor
push
orl
out
xchg
jbe
jo
jae
pop
jp
jp
outsl
adc
ss
fcmovnb
jle
and
pop
test
xchg
incl
cmp
insl
dec
sti
xor
cli
mov
and
mov
mov
pop
sarl
scas
sbb
push
xchg
inc
fdiv
and
repnz
in
addr16
jecxz
jbe
mov
outsb
adc
jbe
adc
push
ret
xlat
sbb
cmc
in
xor
nop
jno
mov
adc
or
dec
dec
lods
push
jmp
and
dec
insb
aam
push
lods
mov
add
adc
and
xor
sbb
sub
cmp
dec
sbbl
jl
mov
push
lods
arpl
in
and
xor
sbb
sub
cmp
dec
sbbl
jl
mov
pop
sub
mov
js
daa
jl
or
sbb
sub
cmp
dec
xchg
stos
jl
mov
mov
adc
mov
sbb
xchg
cmp
cmp
sub
sbb
or
push
mov
sub
cmpl
mov
je
cmp
je
push
lea
push
push
movb
call
call
mov
xor
xor
call
mov
xor
call
mov
mov
lea
push
call
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
pop
pop
test
jne
mov
not
mov
movb
or
mov
leave
ret
out
sar
into
loope
icebp
cmpsl
cmp
cld
sti
enter
je
push
dec
jne
popa
add
sahf
push
and
xor
sar
into
loope
icebp
scas
cmpl
push
dec
popa
pop
jno
jae
adc
and
xor
fdivr
enter
jmp
mov
pop
jb
sbb
add
dec
dec
gs
push
ja
lcall
xchg
mov
inc
adc
sbb
gs
jb
stc
mov
out
pop
dec
add
add
call
mov
dec
sarb
mov
dec
pop
rorl
adc
mov
sti
or
xchg
shr
inc
imul
fisttpl
lea
push
je
lahf
fldcw
or
addl
sahf
mov
mov
xchg
neg
xchg
and
push
and
jb
adc
scas
ret
cltd
aad
jle
mov
mov
ds
movsl
hlt
sbb
jnp
or
loope
sub
cmp
sub
leave
and
sub
clc
fdivp
scas
cmpl
dec
dec
js
push
push
cmp
xor
test
lock
sbb
push
sbb
sbb
fs
imul
cwtl
test
mov
lret
xor
sbbl
jae
jno
adc
je
mov
rorl
mov
xchg
mov
jle
dec
popa
pop
jno
add
adc
and
xor
sar
into
loope
icebp
scas
cmpl
push
dec
popa
pop
jno
add
adc
and
xor
rcrl
jle
mov
je
sub
sbb
dec
mov
fldenv
push
mov
clc
jl
push
outsl
andl
xchg
mov
fisubl
mov
sub
fisubs
dec
out
sub
mov
lahf
mov
jbe
sbb
xor
jecxz
add
pop
dec
hlt
mov
sti
fsubr
add
cmp
xchg
and
in
mov
cs
push
lahf
push
js
xchg
movsl
pop
repnz
xchg
data16
mov
xchg
cmp
mov
jnp
ret
fnstenv
test
out
fisubs
cmpsb
adc
jne
sub
xlat
sub
addl
push
sub
push
xchg
push
in
rclb
mov
rorl
add
xchg
mov
dec
stos
and
popa
test
adc
fsubl
fidivs
inc
out
js
orb
jo
aas
rcr
sub
or
pop
lret
cmp
dec
sub
sahf
dec
or
dec
fwait
aam
or
xchg
ret
out
dec
ret
and
fdivr
inc
getsec
jne
xchg
pop
test
mov
mov
clc
jmp
cmp
movsb
dec
lods
mov
es
repz
xor
cli
and
jo
mov
test
sbb
xchg
fdivrs
pop
adc
test
insl
mov
shrl
pop
jns
mov
popa
jb
out
mov
fiaddl
add
cwtl
push
push
insb
cmp
cmp
mov
dec
mov
lahf
shlb
rclb
inc
lods
xchg
dec
ds
push
les
cmpsb
jb
xchg
mov
jge
loope
adc
loopne
fists
dec
mov
cmpsb
push
iret
lret
mov
add
out
fbld
cld
xchg
push
sub
sti
loopne
loop
ret
test
adc
mov
loope
scas
sbb
js
popf
xchg
mov
pop
mov
mov
fmul
loop
pop
fimuls
sbb
shll
jne
pop
cmp
pop
iret
lds
sbb
sbb
hlt
out
pop
mov
pop
fisubrs
cltd
ret
mov
push
mov
lods
xchg
enter
rorb
into
aaa
mov
rol
add
fstp
inc
stos
lahf
loope
dec
cli
cltd
ret
pop
xchg
inc
dec
dec
pushf
testb
pushf
inc
shll
or
mov
mov
mov
jecxz
pop
adcl
cs
data16
aas
xchg
clc
jb
outsb
mov
jge
lahf
jb
clc
clc
sub
dec
mov
adc
lahf
sarl
lods
and
fnstcw
dec
lret
xchg
scas
dec
jmp
mov
pop
mov
pop
dec
rol
cmc
sbb
mov
jge
iret
loop
cmpsl
lahf
push
push
cmp
jl
push
push
pop
test
push
dec
pop
clc
jo
xor
inc
popf
xchg
pop
cld
jo
dec
shlb
adc
mov
subl
cli
movsl
pop
in
jnp
test
repnz
mov
in
pop
pop
jb
aam
shrl
cltd
dec
sub
lret
cltd
shl
outsb
cmc
inc
mov
fcomip
jge
mov
aam
ljmp
inc
sbb
fwait
mov
enter
mov
mov
das
mov
pop
cmp
adc
and
mov
jno
mov
adc
bound
cmp
cmc
sbb
push
sbb
pop
pop
jb
mov
jp
rcrl
nop
cmp
dec
xor
add
daa
jp
add
mov
jmp
aad
loop
leave
xchg
or
pop
cltd
dec
mov
out
repnz
insb
iret
xchg
lods
cld
or
cwtl
jno
test
cmpsb
lcall
mov
add
leave
add
dec
xchg
fnstcw
cld
pop
sbb
js
pop
out
loop
es
mov
and
pusha
cmpsb
lret
nop
mov
mov
std
cmp
mov
push
int
fs
in
cmpsb
adc
pop
dec
mov
add
and
rcll
sub
mov
mov
xchg
scas
sbb
adc
xor
aaa
in
lahf
pop
pop
jne
push
cmp
ss
je
dec
addr16
out
movsb
in
xchg
mov
sub
cmp
dec
add
sub
mov
mov
inc
mov
shll
xchg
push
pop
arpl
pop
inc
adc
mov
lods
xor
jp
mov
in
sbb
mov
adc
push
push
testl
mov
test
pop
cmp
loope
mov
xor
mov
and
decl
in
add
das
mov
movsb
mov
out
decb
lods
lcall
icebp
jne
imul
fstpl
clc
xchg
add
push
mov
dec
jp
lds
xlat
push
jg
loope
xchg
mov
test
dec
imul
les
insb
iret
and
dec
ret
fxch
adc
cmp
inc
adc
push
rep
adc
jne
std
pop
daa
xlat
leave
sbb
cli
int
inc
xor
insb
shrb
mov
loopne
aaa
out
pusha
xor
pop
pop
sbb
add
dec
lea
icebp
popf
out
in
mov
ret
mov
loop
mov
movsl
cmp
imul
mov
mov
mov
or
je
sub
loope
cld
in
xor
lods
in
push
ja
and
lret
call
xlat
add
fimull
incb
in
sub
call
and
lcall
iret
iret
test
jns
lods
push
lahf
add
ja
or
cmpsl
and
mov
inc
frstor
cltd
xor
cmpsb
xchg
sub
clc
pusha
or
mov
xchg
ret
icebp
fcom
test
dec
cli
xchg
sahf
nop
jb
dec
add
pop
fstl
mov
push
lea
lods
adc
sti
shlb
movsb
arpl
jmp
jne
mov
dec
fcompl
sub
shll
out
ficomps
orl
lcall
iret
and
popa
push
cld
vmwrite
sbb
pusha
leave
andb
xor
xor
nop
pop
imul
sbb
pop
lret
iret
or
cld
lret
pop
ret
mov
fdivs
mov
test
xor
pop
repnz
push
mov
cmc
cmp
lret
dec
dec
pop
pop
sahf
daa
in
mov
vunpckhps
sar
scas
or
loopne
inc
cmpb
sub
iret
fxch
ja
lret
mov
inc
outsb
adc
lods
sahf
mov
mov
fadds
mov
fisubrs
hlt
cmp
int3
mov
xor
push
loop
dec
mov
lcall
cmp
nop
fldl
inc
or
and
addr16
in
test
adc
lods
lods
lret
mov
mov
imul
lea
ja
and
push
sbb
out
jl
mov
insb
testl
cmpsl
in
sub
mov
pop
out
outsb
sbb
shrl
mov
cs
adc
sbb
pop
es
mov
lret
ljmp
fsubr
inc
call
and
roll
sub
push
pop
lahf
test
xor
mov
imul
pop
mov
mov
push
shlb
pop
int
mov
cmp
mov
xor
push
into
inc
and
ljmp
outsl
xchg
add
rolb
aas
mov
add
test
mov
cmp
add
sub
dec
cltd
jecxz
ljmp
fwait
dec
xchg
ss
leave
je
lret
cmc
xchg
mov
mov
pop
imul
ds
arpl
mov
mov
xlat
scas
jmp
jno
or
aam
out
nop
mov
pushf
repnz
mov
ret
mov
sbb
cltd
popf
xchg
data16
in
aad
add
gs
shl
sbb
jae
stos
imul
jl
imul
pop
adc
ss
hlt
cwtl
aam
lds
cmp
popf
push
test
in
cld
insl
jae
enter
inc
dec
addr16
pop
sub
les
scas
cli
outsl
sub
sbb
mov
xchg
out
stc
xor
sbb
mov
dec
faddp
sbb
mov
dec
pop
and
bndstx
mov
test
cmp
flds
imul
scas
push
jnp
dec
lods
sarb
rcl
fdivrl
in
push
fwait
aaa
clc
push
repnz
dec
fldt
imul
pop
lock
fldl
xchg
adc
aad
lret
push
cmc
and
cmpsl
les
sbb
and
sub
xchg
push
adc
outsb
mov
mov
cmp
cwtl
ds
inc
ljmp
pop
inc
cmp
mov
push
pop
inc
out
aam
push
mov
cmc
ret
scas
dec
repnz
add
or
dec
adc
adc
ret
mov
test
lock
aam
mov
jmp
fs
pushf
adc
pusha
in
xchg
iret
insb
mov
add
mov
lods
pop
addr16
mov
mov
cli
fwait
adc
dec
jae
lods
aam
repnz
popa
mov
mov
push
add
inc
rolb
xor
sarl
leave
dec
add
sbb
dec
rcll
xlat
negl
aam
add
in
jle
sbb
xchg
int3
push
mov
repnz
das
push
call
pop
fnstcw
pushf
loope
fmull
mov
fdivrl
jne
cli
call
ljmp
inc
ret
enter
pop
inc
test
and
or
out
or
and
std
sbb
pushf
gs
xor
jg
rol
lock
mov
rorl
cld
mov
shll
push
fcmovb
dec
pop
mov
nop
in
xlat
loope
xor
dec
xchg
jecxz
fcmovnb
js
mov
test
xor
cmp
sti
repnz
xchg
sbb
mov
repnz
push
enter
test
aas
cwtl
gs
icebp
pusha
sbb
shr
lods
aad
xchg
xor
push
popa
mov
and
icebp
xchg
pop
adc
gs
xor
dec
xchg
or
add
jbe
cld
jae
rorb
int3
xchg
xor
xchg
push
cmc
cmp
ljmp
xchg
inc
into
loop
dec
setbe
mov
or
jecxz
adc
xchg
xorl
mov
adcl
mov
mov
cmp
pop
pop
cmp
fstpl
sar
or
cltd
xor
fcomi
in
push
iret
xor
insb
jns
cmp
inc
in
aas
std
inc
jbe
nop
aad
jo
dec
and
cmp
pop
adc
mov
inc
jmp
cld
popf
mov
mov
cmp
mov
notb
xlat
in
mov
cmp
pop
jne
cwtl
inc
je
dec
rep
mov
stc
out
pusha
in
std
ja
imul
mov
jmp
in
pop
test
ret
xchg
int
sti
scas
lds
insl
mov
add
mov
lods
mov
rcrl
push
orb
cltd
mov
push
jnp
push
xor
jl
call
pop
jbe
lcall
shrb
test
and
enter
fisubs
push
mov
lds
shl
push
lahf
lods
push
dec
and
inc
mov
orb
add
and
cmc
push
sub
pop
icebp
hlt
arpl
pop
jl
ljmp
sbb
jge
dec
imul
push
mov
pop
js
cwtl
movsl
xor
inc
pusha
mov
push
sbb
adc
sbb
jp
arpl
lcall
fisttpll
sub
push
jg
test
jns
pop
xor
add
sbb
movsl
sbb
cmpsb
int3
loopne
mov
call
xchg
mov
outsb
incl
or
test
inc
mov
adc
repz
mov
adc
js
testb
lods
jle
out
xchg
aad
xor
pop
mov
cmp
mov
mov
xchg
cli
cltd
mov
or
int
lret
cmp
cmp
dec
push
mov
or
mov
std
in
cli
shll
ret
cmp
test
push
adc
sub
dec
scas
mov
iret
sub
xor
pop
or
mov
mov
adc
and
xchg
sub
insb
adc
clc
lods
mov
add
pop
aaa
and
ss
in
dec
mov
repz
shl
inc
add
pop
xor
aaa
out
dec
pop
adc
pop
dec
leave
call
pop
movsb
mull
add
cs
fisttps
mov
inc
jae
sub
dec
push
mov
cmp
stc
xchg
out
add
cs
das
pop
cmc
out
xchg
es
lret
sti
xor
add
jle
xor
test
mov
xchg
and
lods
cltd
xchg
addb
sbb
jecxz
xchg
andb
pop
mov
push
fisttpll
adc
lahf
pop
daa
lcall
jp
imul
das
mov
insl
ja
mov
inc
cltd
cmpsb
jb
fwait
mov
sar
xor
xor
jge
pushf
outsb
inc
xor
cmpsb
outsl
pop
je
jae
xor
cli
xchg
or
jb
imul
sub
jae
insb
pop
out
mov
in
insb
sub
sub
test
sbb
sbb
aas
arpl
rol
sub
sbb
mov
std
movsl
ja
jp
pop
cmp
imul
std
push
adc
ljmp
scas
or
sbb
les
shrl
add
inc
out
sbb
shll
and
pop
sbb
dec
add
cmp
fildll
pushf
fucomi
ja
in
mov
shl
lds
ret
fstpt
pop
fistl
sub
int
mov
cmp
jmp
xchg
adc
mov
xchg
xchg
xlat
xchg
cli
or
jns
push
aaa
mov
pop
js
adc
mov
nop
push
and
cmpsl
test
dec
in
insb
sub
popf
push
push
sbb
pop
cmp
mov
xchg
ja
ljmp
aaa
das
sbb
jo
push
cmp
scas
jnp
mov
pop
out
jge
sub
popf
clc
fimuls
add
or
mov
sub
or
inc
mov
dec
sub
sbb
icebp
pop
mov
fwait
mul
dec
dec
out
cld
xor
stc
stos
mov
stc
jge
adc
or
add
xor
sbb
cli
stos
pop
jns
xchg
and
inc
arpl
xor
mov
incb
shr
or
imul
sub
inc
ffreep
jbe
into
stc
push
out
inc
arpl
cli
push
mov
aaa
popa
scas
popf
nop
test
push
in
sbb
xor
into
dec
dec
push
push
dec
aas
addr16
mov
mov
dec
dec
stc
rcr
repnz
fistpl
pop
insl
xor
cmpl
push
test
mov
mov
ret
mov
mov
mov
inc
and
inc
add
and
xchg
insl
pop
push
stos
xchg
orb
dec
xlat
inc
xor
enter
or
pop
aas
lret
xchg
enter
dec
imul
aam
jne
faddl
add
and
push
loopne
add
add
dec
sbb
sub
or
lods
mov
push
shll
or
pop
and
and
xor
js
test
xchg
jns
jo
fs
cld
mov
xor
aam
sahf
mov
test
mov
aaa
mov
mov
pop
add
push
sub
adc
mov
push
pusha
lcall
leave
test
loope
in
outsl
movb
jne
push
fisttpl
jge
shll
sub
add
int
js
arpl
popa
imul
hlt
enter
mov
cwtl
outsb
lds
xchg
cmp
mov
sbb
pop
pop
mov
loope
xor
dec
adc
fcompl
xchg
sarl
or
ja
fildll
fldt
incl
jno
stc
out
lods
aaa
jmp
push
sbb
sbb
or
fs
out
fsubs
pushf
out
enter
shrb
push
inc
jno
lock
xchg
xchg
push
loope
lcall
int3
add
faddl
cltd
and
inc
loope
push
and
fists
scas
insl
daa
sub
inc
push
push
push
test
mov
fdivr
mov
push
out
jnp
xor
in
gs
mov
rol
stos
and
push
jecxz
rclb
add
xchg
sub
into
jne
shlb
sub
repnz
fwait
repnz
repz
enter
rcrl
mov
cmp
out
and
pop
push
repz
xchg
push
jno
push
fcmovb
xchg
scas
movsb
iret
xchg
daa
jmp
inc
adc
sub
int3
xchg
ret
cmpsb
mov
jbe
lods
or
jg
add
repnz
addr16
pop
inc
xchg
mul
or
mov
pusha
dec
and
inc
enter
lds
mov
pop
pop
pop
push
mov
add
jmp
int
mov
mov
push
mov
cmp
mov
xlat
mov
cmc
shlb
xor
pop
sahf
cmp
push
sub
inc
orb
xchg
daa
lret
or
jnp
cmp
ja
fwait
and
dec
gs
cmpsl
ljmp
push
mov
sbb
fcomps
and
mov
jl
outsb
repz
sub
cmc
cmpsl
adc
lret
push
inc
or
pop
sub
push
adcb
xor
imul
or
clc
cmp
jne
rol
pop
ficomps
xor
sbb
cs
ret
pop
iret
xchg
adc
cli
shl
fbld
or
mov
pop
outsl
cmp
lret
aam
adc
mov
dec
cmp
arpl
mov
mov
jp
xchg
mov
fwait
out
incl
push
insb
mov
loop
sbb
test
jmp
push
mov
add
jp
jecxz
aam
inc
jbe
mov
mov
leave
stos
addb
loope
cs
mov
inc
lret
or
pop
sahf
test
pop
stos
popa
and
mov
adc
sub
imul
scas
add
movsb
lods
jle
test
sub
sbb
imul
push
dec
cltd
dec
out
insl
mov
repz
es
add
mov
popf
imul
and
pusha
xor
xor
xor
jno
in
xchg
pushf
dec
add
add
negb
loope
cmp
pop
mov
outsb
pop
lret
cs
nop
or
insl
add
sti
mov
and
movsl
clc
xor
cmpsl
scas
xchg
popa
mov
add
xchg
call
bound
cmp
aas
ret
cltd
outsb
add
out
ret
call
pop
sbb
xor
sub
sbb
inc
sub
gs
xchg
add
or
jg
cmpsb
mov
mov
fwait
lcall
stos
jb
jbe
or
sbb
dec
shlb
test
sub
sub
and
sbb
rcll
ds
or
das
inc
mov
std
jno
scas
lods
imull
cmpsb
sbb
dec
pop
jmp
arpl
jle
push
clc
aam
popf
fwait
push
mov
or
jmp
xchg
push
jno
add
fistpll
push
push
subb
mov
mov
fwait
jnp
mov
pop
mov
mov
add
dec
add
sub
out
cld
push
sti
pop
dec
in
add
pop
jne
add
cmpsb
push
cmc
xchg
jl
xor
gs
arpl
mov
stc
sbb
dec
in
push
jns
push
outsl
and
test
and
aam
push
inc
in
lret
cmpsl
repz
mov
ffree
xchg
xorl
mov
cmp
lock
cmpsl
stc
jge
stos
mov
loopne
jnp
test
sub
repnz
mov
bound
jl
scas
lahf
pop
scas
syscall
sub
bound
orl
lea
daa
adc
std
jae
xchg
sbb
stos
mov
xorl
inc
add
bound
popf
jbe
bound
cmpsb
sub
add
xchg
icebp
cli
stos
roll
roll
cli
xchg
rol
out
mov
sbb
imul
ljmp
insb
cmovo
add
push
adc
scas
inc
mov
pop
xchg
push
icebp
cmp
popf
divb
pop
mov
lret
shlb
mov
movsb
fimuls
fcomps
xchg
xor
out
pop
gs
push
fldt
add
jb
cli
dec
and
mov
xchg
ret
pop
dec
imulb
push
push
cld
adc
pop
jne
call
push
fcom
mov
xor
mov
scas
test
shl
loope
icebp
scas
cmpl
push
dec
popa
pop
jno
add
adc
and
xor
sar
into
loope
icebp
scas
cmpl
push
dec
popa
pop
jno
add
adc
and
xor
sar
into
loope
icebp
scas
cmpl
push
dec
popa
pop
jne
add
adc
and
aad
in
icebp
scas
cmpl
sti
in
pop
push
pop
mov
dec
push
mov
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
jmp
lea
push
pushl
call
lea
push
pushl
call
jmp
call
push
mov
call
xor
leave
ret
pop
ljmp
jecxz
sub
add
and
jp
dec
cmpsl
pop
xlat
sub
cmp
or
sbb
ljmp
push
stos
inc
mov
xchg
jp
dec
test
cmp
or
sbb
ljmp
dec
stos
pop
mov
mov
pop
call
jle
insl
stos
fs
jle
push
fiaddl
inc
mov
adc
jmp
fildll
sub
adc
jb
xchg
fwait
pop
jge
inc
aas
repnz
adc
scas
test
pop
xchg
xlat
repz
sti
test
mov
cmpsl
iret
sarb
adc
or
aas
cmp
testl
add
mov
data16
xchg
sub
mov
inc
sahf
mov
test
pop
xor
loopne
mov
mov
push
pop
das
jns
cmp
or
in
outsl
out
jo
fcomps
test
or
lret
dec
xchg
sub
fsubrp
push
cli
aaa
lret
inc
stos
push
mov
mov
jp
dec
mov
cmp
or
jae
out
bound
and
and
cmp
addr16
xchg
adc
jnp
das
ret
xlat
imul
lahf
pop
scas
push
fidivrl
movb
jecxz
aam
loop
mov
out
xlat
inc
lods
cmp
scas
imul
test
ja
addr16
cmpsl
pop
xlat
sub
cmp
or
sbb
ljmp
push
stos
inc
mov
xchg
push
jp
dec
cmpsl
pop
xlat
sub
cmp
or
sbb
ljmp
cmp
inc
leave
push
mov
cmpsb
mov
hlt
cs
rcrb
cmpb
fsts
cli
bound
js
lea
leave
pusha
add
push
roll
xchg
int
pop
and
mov
or
push
filds
and
addb
idiv
adc
adc
call
rcrl
push
cmp
lcall
cmp
push
push
or
or
mov
xor
cwtl
mov
lahf
imul
nop
jo
mov
clc
jecxz
inc
addr16
adc
cmp
pop
mulb
rorl
inc
push
adc
ficoml
shll
adc
mov
jmp
adc
out
imul
sub
das
bound
insl
mov
in
dec
and
loope
mov
aad
ljmp
pop
in
fldl
jno
mov
xorb
stos
sub
sbb
dec
dec
adc
mov
inc
sbb
loope
in
repz
adc
fstpl
incb
push
stc
dec
pop
push
jge
and
mov
or
sbbl
cmp
mov
mov
adc
xchg
addr16
sbb
or
scas
lods
adc
pop
mov
ja
enter
mov
lret
cmp
pop
xchg
xchg
push
mov
mov
sub
add
and
frstor
test
push
js
lock
sub
fadd
popa
mov
mov
and
mov
mov
add
in
bound
shrb
or
pop
cwtl
mov
out
test
sti
cli
add
mov
cmp
push
cmp
add
fimuls
leave
ljmp
mov
sub
mov
test
rorb
hlt
push
sub
jl
pop
push
xchg
call
jbe
nop
xchg
push
or
nop
push
pop
cmpsl
or
and
xchg
mull
cltd
pop
sub
add
repz
push
pushf
jbe
ss
xor
outsl
cld
mov
mov
pop
dec
insl
imul
cs
add
hlt
in
leave
andb
add
in
movsl
mov
pusha
aas
cltd
push
add
push
test
cmpsl
in
mov
sub
enter
xchg
enter
mov
shrb
adc
leave
mov
popf
cmpsl
and
add
mov
testl
ss
mov
inc
or
stos
or
leave
and
fnsave
pop
sarb
cli
daa
in
pop
and
fdivrl
popa
aaa
clc
sub
insl
ret
mov
pushf
sub
fdivrl
mov
pushf
sub
jecxz
dec
dec
lds
push
arpl
mov
push
push
xlat
shll
loope
mov
jb
in
mov
loopne
jecxz
cmpsl
dec
mov
or
dec
loope
stos
lds
adc
inc
add
call
or
jbe
jno
push
fistpl
in
ret
fildll
push
or
pop
and
aaa
dec
push
jae
push
adcb
mov
arpl
sbb
mov
push
mov
add
inc
mov
ret
stos
xchg
test
rcl
and
test
inc
jecxz
jp
arpl
pop
xlat
loope
cmpsl
dec
push
xor
repnz
mov
push
xor
into
pop
inc
imul
iret
out
pop
mov
cmp
jae
jge
and
popf
cmp
mov
int3
jae
test
lret
mov
popf
pop
je
imul
cmp
fwait
jne
push
gs
fimuls
push
mov
cmpsl
and
adc
pop
xchg
shrb
sub
mov
fildll
xor
or
test
and
or
xchg
push
dec
sbb
sbb
stos
cmc
rcl
test
push
sub
scas
in
das
pop
xchg
icebp
mov
sarl
into
cmp
cltd
stos
sqrtps
xor
sbbb
jns
mov
or
jle
pop
insb
andb
add
stc
pop
xor
mul
shlb
mov
cltd
std
ljmp
jmp
mov
cmp
loop
cs
cltd
inc
inc
shl
or
cwtd
cmpsl
fwait
mov
mov
mov
adc
cmpsl
mov
lret
leave
adcb
mov
adc
adc
sub
cmpsl
xchg
scas
mov
lods
mov
mov
loope
mov
out
ret
ja
hlt
xor
test
jo
shl
mov
ret
adc
mov
push
stos
lock
jne
imul
insl
add
fcoml
mov
insl
rcr
pop
sub
sub
dec
outsl
fidivrl
scas
inc
adc
mov
pushf
xchg
pusha
shll
mov
cmpsb
das
mov
xor
or
jge
inc
aas
mov
addr16
mov
in
or
dec
sbb
add
mov
mul
mov
mov
mov
add
and
inc
insl
jb
and
xlat
outsl
adc
inc
lahf
stos
push
test
int3
sbb
jl
cmp
or
shl
jecxz
pop
jnp
frstor
stos
cld
int
outsb
in
push
dec
xchg
mov
lahf
out
adc
insb
fisubl
aad
loop
xor
in
das
sti
pushf
lods
out
fwait
push
dec
iret
aam
mov
fisttps
push
xchg
mov
inc
out
sub
sub
das
or
aaa
sub
and
aaa
bound
sub
push
cmc
push
sub
lds
xchg
pop
xlat
ja
pushf
xor
mov
loopne
xor
sbbb
insl
sub
enter
cmp
aas
xchg
and
inc
loope
jmp
adc
xor
pop
xlat
sti
sub
adc
mov
out
jb
sti
cwtl
mov
aaa
mov
bound
adc
cli
and
mov
sahf
aad
ljmp
or
add
mov
or
sbb
sbb
test
cmpsb
fildll
lret
sub
mov
out
or
std
xchg
pop
das
dec
pop
mov
stos
ret
jb
pop
into
mov
aaa
call
adc
out
inc
scas
loop
adc
icebp
loope
cmp
and
sbb
sub
mov
loope
ja
cmpsl
ret
add
in
lds
insl
and
dec
icebp
fdivr
fwait
leave
pop
fildl
loope
fs
jle
insb
call
add
je
cmp
xchg
mov
imul
sub
sbb
xchg
pop
movsb
ret
int3
lea
dec
xor
or
stc
aad
lahf
mov
pop
into
lods
push
icebp
les
das
or
xchg
test
jne
mov
les
nop
push
addl
hlt
insb
or
and
xor
push
and
pop
push
pop
pop
into
push
cmpl
js
popa
data16
repz
andb
test
leave
adc
mov
stos
sbb
clc
data16
xor
repnz
stc
shlb
xchg
into
ja
pop
jnp
rclb
scas
mov
lods
fsubr
xchg
jmp
cmp
mov
mov
lahf
inc
test
imul
push
mov
into
add
mov
addb
or
test
mov
push
xor
or
jno
shr
jmp
push
lret
je
xchg
jne
sub
int3
scas
mov
cmpsl
pushf
shll
lret
inc
add
in
out
and
mov
mov
dec
or
bound
mov
mov
dec
mov
adc
leave
jmp
dec
int3
push
jae
insl
mov
sti
mov
fs
or
jnp
ret
clc
push
jnp
sbb
cli
jle
add
dec
nop
mov
fdivrs
xor
test
jg
scas
arpl
push
mov
jl
push
cld
sbb
rcll
enter
pop
fmuls
stos
fidivrs
mov
outsl
dec
or
sbb
insb
sub
mov
fucomi
test
push
into
xor
fsubl
pop
popf
in
int3
inc
int
inc
int
clc
lret
iret
inc
mov
and
sbb
jmp
mov
leave
mov
xchg
push
adc
cmc
jge
in
mov
jae
sbb
adc
in
in
jb
sar
xorl
imul
fidivs
sahf
sub
inc
cmp
cltd
test
adc
sub
cmp
hlt
pusha
das
movsb
xchg
mov
rcrl
push
popf
mov
out
cli
lds
jo
sahf
rol
aad
sub
pop
xchg
cmp
aaa
test
pop
pop
into
jae
add
jbe
lock
lret
xor
test
pusha
bnd
sbb
fisubl
adc
mov
pop
push
add
xchg
ja
jle
adc
fwait
mov
push
push
lret
dec
cmp
jns
mov
inc
loope
mov
cmpsl
daa
mov
cwtl
into
ja
into
daa
xchg
mov
call
stos
icebp
add
shll
arpl
mov
sub
es
xor
movb
mov
xchg
test
xchg
mov
xchg
mov
sbb
mov
mov
jl
fidivrl
in
sbb
mov
mov
cmpsb
fucomip
add
sub
jg
and
lea
insl
push
and
inc
les
loopne
pusha
add
sbb
int
inc
add
and
sahf
xchg
into
std
clc
lcall
imull
push
cwtl
adc
xchg
lock
loopne
sbb
push
addr16
or
push
xor
jle
cs
sub
fcoms
orb
pop
push
data16
ds
add
dec
fsubs
or
mov
push
lahf
rclb
xorb
insb
sbb
add
jno
test
stos
mov
into
dec
loope
or
stc
mov
in
xchg
call
push
rcll
inc
jecxz
jns
arpl
sahf
jns
mov
push
mov
repnz
and
xlat
push
add
mov
add
push
adc
fdivl
adc
nop
mov
std
or
enter
repz
loopne
push
mov
mov
ja
mov
xchg
std
lock
and
inc
test
cs
out
dec
mov
sbb
cmp
sbb
mov
or
loope
outsl
or
mov
lods
notl
lahf
lret
inc
test
pop
inc
lods
sub
lea
stc
cmc
cmp
loopne
xchg
jns
shll
sahf
and
js
adc
loop
aad
loop
inc
jb
rorl
ljmp
in
mov
test
jmp
mov
and
test
xchg
andl
loope
pop
dec
sub
dec
rcrb
push
bound
psrlw
ss
cs
adc
addr16
push
and
subb
mov
jge
push
cmpsl
xchg
imul
pushf
cltd
sub
push
fdivl
lods
pop
and
cmp
push
mov
add
hlt
sbb
test
popa
addr16
nop
gs
in
jae
ss
je
jmp
pusha
jge
and
adc
mov
mov
xchg
shlb
and
push
jmp
ss
scas
data16
fimull
jno
outsb
pop
sbb
cmp
or
jle
xor
jl
lahf
sub
push
hlt
cmpsl
insl
repz
mov
and
mov
pop
dec
mov
ret
cmp
ret
sbbl
jo
dec
and
inc
add
stc
insl
rorb
mov
add
lds
mov
xchg
xor
into
enter
icebp
aam
inc
mov
aam
mov
imul
xor
imul
adc
lret
shlb
into
xor
test
mov
xchg
scas
push
dec
cs
pusha
mov
and
pusha
loopne
sub
lret
xchg
leave
mov
inc
sub
mov
and
in
cmc
mov
aas
ds
lcall
ja
pusha
push
mov
xor
hlt
mov
popa
sahf
inc
cltd
sub
dec
mov
cld
jle
xchg
dec
jmp
sbb
addr16
push
lcall
test
loopne
inc
pop
outsb
ja
jo
data16
imul
xchg
adc
sbb
push
add
sbb
mov
xchg
pop
test
pop
fadd
mov
movl
dec
cmpsl
pop
rorl
jmp
mov
dec
mov
inc
ret
cld
test
ja
inc
mov
sub
lahf
pop
jb
xchg
add
ficomps
cmp
aam
lahf
rcrl
insb
jno
push
std
mov
addr16
loop
xchg
fstp
jmp
popf
das
push
stos
add
jo
loopne
jmp
sub
ret
scas
sbb
cmc
inc
les
fidivl
cltd
sub
repnz
sti
xor
notb
stc
inc
mov
sti
shrb
mov
pop
mov
adc
rol
push
test
sbb
mulb
repnz
cs
popf
inc
push
push
cld
sbb
sbb
add
out
or
idivl
pop
pop
fcoml
movsb
sub
cmp
mov
jno
push
ja
sbb
loopne
stc
sub
xchg
pop
insb
stc
mov
push
ss
push
aad
out
fisttpll
add
xor
insl
shrb
jecxz
cmp
ds
adc
sbb
aam
negb
cmp
fdivrs
in
nop
jbe
inc
pop
xchg
sbb
xchg
repnz
pop
pop
xchg
nop
inc
lcall
push
inc
mov
lahf
aas
decl
sub
adc
cmp
inc
push
xor
xchg
add
push
jne
push
push
mov
sub
fdivrs
sbb
lods
out
hlt
jns
repz
call
pop
out
hlt
xchg
shll
lcall
add
push
sub
loope
sbb
mov
dec
sbb
jmp
cmp
add
sub
shrl
and
sbb
adc
mov
out
xor
sub
pop
lds
adc
push
sbb
mov
in
or
push
lahf
jecxz
mov
enter
stc
das
mov
scas
mov
in
mov
pop
lcall
jle
push
push
fsubrl
mov
push
fdivr
mov
stos
mov
and
repnz
jae
add
xor
push
in
push
jno
stos
test
sbb
xchg
mov
in
dec
push
jp
fdivrl
jno
aad
xchg
push
in
sub
gs
push
test
pusha
or
hlt
jge
cmc
out
xor
jmp
add
hlt
xor
or
and
daa
icebp
loopne
push
mov
mov
inc
stc
jns
and
fisubrl
fisubl
lcall
jae
insb
sub
insl
inc
shl
aas
fstpt
pop
aaa
psubusb
fisubrl
adc
lea
cmp
push
add
sub
das
inc
push
jne
cmp
mov
jecxz
lods
jle
icebp
or
and
clc
nop
add
pop
clc
cwtl
cmp
shrl
ret
jmp
je
cltd
aaa
std
ret
dec
call
adc
sbb
sub
mov
sub
dec
add
fwait
mov
inc
mov
loope
xchg
fcoml
fld
shll
addr16
lods
jg
pop
stc
cmc
stc
in
out
lret
aam
sbb
add
and
popa
imul
mov
mov
ret
lea
sbb
adc
mov
lods
push
mov
cmp
sub
test
dec
sbb
push
xlat
loope
fst
repnz
add
lret
fnstenv
fwait
imul
mov
lahf
pop
jns
das
sbb
enter
ret
dec
lret
out
in
into
sub
out
mov
icebp
cmp
mov
icebp
cmpb
adc
mov
sub
xor
jl
xor
sub
outsl
das
and
loope
or
and
lret
popl
nop
adc
sbbb
mov
jne
repz
xor
loop
mov
outsl
shr
xor
enter
mov
pop
cwtl
imul
rcll
scas
inc
cmp
push
cwtl
ds
jnp
movsl
or
iret
ds
filds
movsb
add
mov
mov
mov
push
jo
test
loope
lcall
mov
daa
sbb
repz
jnp
jne
cmp
dec
push
or
jne
and
push
daa
dec
mov
nop
in
loopne
sbb
fildl
outsb
push
sub
mov
sti
dec
cltd
sbb
jge
pop
push
mov
sbb
or
enter
fsts
add
xor
ljmp
iret
fsubl
loope
sti
sub
mov
sub
or
popa
ret
scas
daa
mov
mov
stc
loope
push
shr
ret
icebp
pop
pushf
pushf
mov
stos
dec
fmul
lea
jg
std
in
out
mov
inc
aas
lods
out
mov
sbb
hlt
fucom
jo
out
testl
adcb
dec
aad
repz
fistpll
lds
out
cwtl
cld
mov
lods
pushf
inc
ss
popa
sbb
js
and
or
int
fidivrl
std
dec
inc
cmp
arpl
outsl
pop
and
xchg
std
add
lret
xor
mov
pop
ret
mov
adc
out
imul
jbe
into
mov
jmp
sub
js
cmp
shll
out
push
sub
adc
lods
ja
push
fwait
xor
outsl
push
sbb
sub
int
fistpll
jge
inc
sub
loopne
mov
ss
inc
and
ja
sbb
sbb
cmp
pusha
lahf
xor
iret
xor
dec
mov
add
addb
xor
cmp
das
jg
add
test
mov
or
pop
cmp
int3
jecxz
out
fsts
aas
or
sub
mov
mov
xchg
mov
out
paddd
sbb
dec
in
pop
ljmp
and
adc
in
fistl
xor
or
inc
jecxz
jg
mov
xchg
push
xlat
test
or
add
fwait
mov
dec
popa
dec
pusha
mov
mov
sub
insb
cmp
and
xlat
scas
int
adc
lcall
pop
stos
sub
pop
outsb
mov
out
sub
sahf
lret
dec
dec
xor
pusha
jp
rcrb
int3
mov
popf
enter
inc
add
out
adc
pop
xchg
loope
and
inc
dec
imul
sbb
pop
jle
aad
inc
cmp
cmp
das
ljmp
xor
js
xor
sub
sub
sbb
icebp
into
and
out
and
xchg
mov
sti
popa
sti
jecxz
pop
data16
push
and
out
push
sbb
popl
leave
and
sub
ret
mov
dec
mov
mov
sbb
je
mov
inc
mov
in
add
inc
hlt
inc
addl
sub
or
add
aam
shr
rorl
xchg
nop
shlb
push
shll
sbb
dec
xchg
dec
sbb
push
popf
js
out
cmpsl
in
mov
jg
or
or
and
movsl
sub
popa
out
sub
jecxz
sub
es
shlb
aad
mov
jle
out
mov
cmp
fsubrl
mov
add
dec
leave
lcall
sbb
ficoms
add
outsb
dec
aam
addr16
rcrb
jnp
xchg
mov
push
push
xor
push
pop
inc
mov
pop
les
pop
adc
or
push
fcoml
mov
jecxz
popa
xor
push
mov
in
rcrb
aam
cs
shlb
adc
adc
mov
pop
mov
fisubl
adc
cmp
dec
je
add
mov
sub
jnp
out
shll
test
int
shll
stos
push
cld
sub
pop
ret
pop
jnp
cli
cmp
push
sbb
inc
mov
sub
dec
lret
shll
xor
push
jp
lods
mulb
push
pop
clc
jne
sbb
and
out
mov
in
inc
xor
xor
dec
mov
outsl
addr16
sahf
pushf
lock
jo
push
jns
std
stos
ret
pop
or
push
push
jl
jbe
push
fimull
add
insl
sbb
cli
aam
enter
add
ds
push
dec
cmp
mov
fs
fs
loope
sub
push
dec
iret
jns
pop
jbe
outsl
sti
xor
cwtl
jo
cmp
inc
cmp
stos
inc
mov
xchg
push
jp
dec
cmpsl
pop
xlat
sub
cmp
or
sbb
ljmp
push
stos
inc
mov
xchg
push
jp
dec
cmpsl
pop
xlat
sub
cmp
or
sbb
ljmp
push
stos
inc
mov
xchg
push
jp
dec
cmpsl
pop
xlat
sub
cmp
or
sbb
ljmp
push
stos
inc
mov
push
dec
cmpsl
sub
or
sbb
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
imull
jns
dec
push
pop
popf
sub
sbb
jae
out
div
leave
xlat
fldenv
cltd
xchg
cltd
imul
daa
sub
cmp
or
jl
jmp
xlat
fldenv
mov
jns
dec
push
pop
daa
sub
cmp
or
sbb
jmp
mov
out
fsubp
cmpsl
in
clc
out
pop
and
pop
cmp
xchg
pop
cld
or
pushw
add
stos
and
int3
shlb
pop
xor
imul
cmp
mov
andl
sahf
ss
int3
pop
mov
outsl
enter
mov
and
mov
jmp
sub
sbb
test
rclb
in
insb
addr16
mov
cmp
add
stc
notl
aas
pop
inc
mov
popf
cltd
lcall
push
iret
mov
pop
sbb
xlat
fxtract
cli
fildll
lahf
xor
int
rclb
pushw
sbb
and
mov
pop
sarl
xchg
data16
jns
dec
push
pop
daa
sub
cmp
or
sbb
jmp
xlat
fldenv
mov
add
or
sbb
dec
inc
insb
jb
cltd
inc
loopne
lcall
ljmp
adc
inc
push
jl
pop
outsl
aaa
mov
lcall
int3
les
xlat
in
mov
adc
pop
sub
ja
sbb
cmp
or
sbb
jmp
xlat
fldenv
mov
jns
dec
push
pop
daa
sub
cmp
or
sbb
jmp
xlat
fldenv
mov
push
lret
sahf
push
fcoml
in
pop
pusha
jbe
cmp
xorl
es
in
pusha
xadd
loop
sbb
xchg
fildll
mov
inc
xor
jbe
shl
sbb
and
adc
push
enter
daa
pop
ret
aas
push
add
mov
xchg
rcrl
test
mov
enter
adc
pop
std
mov
and
xchg
xchg
pop
fwait
ret
popa
sbb
cmpsb
cmp
rorl
or
imul
pop
cmp
sub
or
dec
clc
xor
cmp
stc
xor
jmp
es
inc
repz
clc
rcll
prefetcht1
push
push
and
jae
stc
adc
mov
mov
jge
clc
mov
fdivl
xor
mov
repz
sbb
jg
pop
inc
xchg
cmpsl
push
add
pop
test
pusha
int
inc
shll
leave
xchg
fisttpll
sbb
fisubrl
bound
iret
enter
fiaddl
lret
inc
pop
xor
scas
fwait
mov
jl
daa
cwtl
xor
jbe
loopne
movsl
pop
add
push
leave
or
popf
out
push
pop
nop
adc
push
push
popa
push
xchg
leave
lret
ljmp
rcr
jle
xor
sub
pop
mov
faddl
cmp
mov
dec
rclb
and
sahf
push
lahf
outsl
pop
es
add
inc
fsubl
jne
ret
orb
stos
rorl
rclb
addl
lods
mov
inc
dec
movsb
test
inc
jno
mov
pop
pop
into
mov
push
arpl
and
shll
clc
xchg
sbb
bound
repz
push
mov
jno
xchg
inc
inc
addps
mov
cmp
dec
aas
and
dec
jmp
or
jbe
addr16
jb
outsl
jns
leave
mov
subb
clc
loope
cltd
cld
pop
and
dec
push
mov
or
jnp
int3
sbb
add
test
stos
icebp
jno
lret
push
push
cli
and
inc
mov
loope
movsb
aas
xor
icebp
imul
dec
stos
out
mov
pop
mov
dec
lods
test
mov
or
fsts
stos
cmpl
jmp
jnp
or
in
sbb
cmpsb
roll
ds
cltd
xor
aaa
adc
mov
or
sbb
shr
add
pop
mov
add
or
dec
sahf
cmpsb
add
test
sahf
ror
sub
and
dec
stc
add
add
mov
or
out
cld
mov
adc
xor
rolb
mov
icebp
pop
je
ret
mov
push
imul
push
pop
int3
mov
rolb
sub
loopne
push
and
es
insl
imul
fstpl
divb
mov
movsb
xor
rcl
ss
push
push
shrb
call
jb
popf
push
xchg
cmp
mov
jae
repz
push
pop
xor
aam
and
jno
inc
aad
sbb
mov
fimull
pop
sub
push
in
insb
xchg
and
ljmp
pop
push
cmp
mov
xor
out
es
mov
xlat
push
adc
sbb
and
in
test
les
sbb
lcall
fiadds
dec
push
loop
xchg
push
sbb
aaa
dec
and
enter
out
jne
jle
cli
pop
cmpl
adc
popf
pop
push
lods
cmp
or
inc
cmpsl
inc
and
pop
lock
ficomps
cmp
xlat
jae
bound
cmp
sbb
dec
xor
loop
jle
js
and
cmp
test
packuswb
mov
stos
leave
stos
insl
push
push
popa
lea
pop
and
xor
xchg
stos
mov
jmp
dec
sbbb
aas
sbb
jmp
leave
push
add
aas
gs
repnz
mov
inc
cmpsb
jne
and
test
adc
jl
mov
loopne
xchg
jge
int3
lcall
xor
push
pop
cmc
pop
sbb
dec
jo
iret
sub
push
inc
and
notl
jecxz
iret
test
stc
fucomi
sbb
xchg
arpl
in
xchg
out
in
imul
sub
xor
int
jbe
cmc
mov
stc
mov
dec
loope
rol
lock
movsb
inc
icebp
and
cld
stos
cld
add
lret
push
add
sbb
loopne
dec
lret
aas
xchg
fiaddl
mov
adc
lea
dec
cwtl
add
dec
inc
and
mov
push
mov
or
fcomps
es
pop
jl
mov
or
inc
xchg
shrl
mov
jnp
adc
inc
sbb
adcb
je
mov
orl
inc
mov
sahf
repnz
jp
cmp
mov
hlt
mov
mov
rcll
in
cmpsl
sbb
pushl
lods
lret
dec
and
iret
ss
nop
xor
ss
icebp
and
bound
js
cli
or
mov
in
sbb
rcr
test
movsl
xchg
mov
outsb
cmc
test
inc
shrb
dec
imul
and
adc
ljmp
mov
cld
mov
push
ss
jb
mov
cmp
outsl
stos
xchg
rol
adc
pop
mov
push
xor
sub
lods
popl
jb
imul
fsubrp
inc
sub
xchg
jnp
lahf
jg
add
adc
shr
lock
es
mov
add
pop
jb
es
cmpsb
mov
dec
inc
shrb
inc
mov
lds
pop
dec
mov
sub
in
ret
adc
movsl
inc
add
out
mov
cmc
addr16
dec
mov
out
dec
and
or
and
mov
cmpb
inc
xadd
and
pop
mov
fadds
aaa
ja
or
loopne
cmpsl
femms
jo
incl
push
rorb
sub
mov
mov
je
notb
or
pushf
enter
popf
xor
mov
cs
dec
sbb
push
cmp
insb
xchg
enter
xchg
xlat
js
cmp
xchg
mov
outsl
stos
out
jg
xor
add
adc
inc
and
pop
jae
dec
ret
inc
push
inc
stos
movsb
test
push
cmp
insb
mov
sbb
inc
mov
loope
fimull
sub
loopne
or
popa
int3
hlt
fcoml
out
lret
pop
xor
pusha
pop
inc
pop
out
test
aam
adcb
cltd
arpl
pop
test
push
fs
dec
into
dec
pop
repnz
test
jg
call
mov
mov
mov
sbb
mov
push
das
pop
jmp
mov
sub
pop
adc
ss
add
rorl
enter
push
xchg
ret
jb
jp
cmpsb
jno
dec
pop
les
push
sub
sahf
add
cmp
push
cmp
lret
add
dec
cltd
sahf
pop
popf
out
out
mov
dec
mov
lret
int3
sub
mov
xor
das
mov
mov
aad
daa
popa
fiaddl
mov
pop
dec
insb
pop
fimull
mov
adc
xchg
mov
mov
xchg
aas
push
mov
mov
jecxz
imul
dec
jl
jb
pop
sub
lahf
arpl
or
mov
xor
aad
mov
dec
sarb
xor
outsb
mov
or
add
pop
fnstcw
jge
dec
shrl
mov
jno
js
mov
cmp
or
or
test
push
inc
scas
dec
cmpsb
div
mov
movsb
lds
sbb
loop
sub
cmp
repnz
andb
loopne
roll
in
or
jo
xchg
xor
sub
call
mov
and
dec
in
stc
scas
mov
mov
call
out
ss
pop
rep
xor
shlb
sti
ds
push
adc
xchg
out
mov
aam
test
cmc
adc
xlat
and
xchg
mov
fdivl
mov
subl
or
xor
mulb
xchg
pop
fisttps
sub
inc
insb
mov
lret
pop
inc
xchg
jbe
adc
xor
sahf
lods
movsl
jmp
xchg
jne
adc
cwtl
stc
imul
dec
inc
popa
inc
mov
aaa
mov
xor
hlt
stos
pop
push
adc
dec
inc
insb
pop
and
push
ljmp
dec
ja
cwtl
dec
cmp
mov
add
jmp
les
fwait
inc
inc
imul
mov
pop
and
fs
xlat
fldl
aas
adc
or
dec
mov
or
cmp
fmul
and
lea
sub
mov
ret
iret
xor
rcl
or
fdivrp
lcall
loopne
dec
dec
push
fidivl
mov
fldt
ficoml
arpl
add
cmp
jmp
cs
bound
orl
addr16
or
or
orb
movsl
sbb
mulb
add
inc
les
or
out
push
and
call
dec
movsl
cwtl
test
in
xor
test
movsb
push
push
xor
cmp
xor
mov
mov
out
das
fsts
fildl
inc
jne
or
jmp
dec
mov
sub
fsubr
push
out
hlt
gs
or
outsl
movsb
cmp
and
jae
daa
xchg
jg
xchg
and
add
iret
add
and
adc
and
sub
insl
jb
mov
inc
push
or
sub
pop
ja
loope
test
mov
movsl
jae
add
or
ror
cmp
jno
sub
xor
pop
fisubl
lods
push
sbb
mov
out
imul
pop
push
in
nop
inc
xchg
pop
stos
mov
xchg
scas
fnstsw
push
insb
adc
pushf
pop
cmpsl
fdivl
cs
lods
std
mov
in
pop
cmp
out
in
add
sbb
insb
and
lcall
mov
pop
dec
fidivrl
lock
loopne
lods
fists
aam
lahf
fcoms
insb
push
or
xchg
addl
dec
pop
fsts
mov
mov
mov
enter
aas
rcrl
push
fldl
inc
jecxz
adc
mov
xor
xchg
pop
mov
xchg
clc
pop
xchg
sbb
mov
frstor
sbb
adc
push
sbb
ss
push
adc
add
divl
mov
jo
dec
xchg
fadd
ficompl
add
addr16
lods
lods
fiadds
sbb
or
mov
sub
xor
pop
xor
fidivrl
dec
subl
pushf
dec
popa
lock
imul
and
mov
iret
fsubrp
loope
cs
jecxz
pop
fistpll
out
xchg
lret
mov
push
or
adc
js
ja
dec
roll
push
mov
mov
and
lea
int
rolb
pop
ja
sub
mov
movsb
mov
fimull
xchg
movzbl
pop
xor
jl
orl
sbb
sar
js
je
rorb
or
add
xor
hlt
xchg
mov
lods
stos
xchg
add
fucomi
or
js
or
jg
aaa
lea
dec
fmul
adc
jbe
int
in
mov
push
push
fs
cmp
push
nop
xor
aaa
sub
push
cmpsl
xor
les
ret
loope
cwtl
in
lret
and
outsl
stos
mov
in
adc
addr16
jge
adc
jnp
mov
sbb
xchg
sbb
mov
dec
in
mov
xchg
xor
js
or
mov
mov
loope
jmp
repnz
mov
push
insl
mov
cmc
and
pop
sbb
adc
and
adc
push
outsl
lret
out
jno
clc
jnp
out
mov
test
push
adc
and
jns
cmp
pusha
sbb
or
dec
push
xchg
dec
mov
jbe
rcrb
pop
jo
rcl
fbstp
push
fs
std
loopne
and
push
lods
leave
adc
sbbb
dec
cli
dec
mov
xchg
xchg
cmp
lcall
sub
loop
mov
xorb
mov
out
lods
push
push
into
lahf
cmp
sbb
sub
arpl
pop
leave
ds
mov
jl
push
pop
fcoml
or
adc
ret
in
dec
and
aaa
leave
leave
mov
fdivs
fisttps
xor
sub
scas
movsb
outsb
xchg
ret
add
scas
or
pop
das
insl
lds
sub
mov
mov
jno
into
stos
outsl
lea
push
fistps
call
cmpsb
mov
add
adc
xchg
sti
lret
ljmp
pusha
mov
out
decb
push
repnz
adc
push
inc
leave
loopne
sub
call
and
in
push
lock
fstp
js
sar
xlat
mov
scas
mov
add
or
aad
arpl
and
mov
enter
loopne
and
add
sub
jns
mov
xchg
or
dec
xchg
enter
cmpsl
js
nop
fstpl
push
mov
or
pop
adc
sbb
push
xor
loop
xor
push
push
rclb
sbb
test
inc
inc
adc
or
xchg
dec
push
xor
mov
or
pop
lret
cmp
cmp
mov
dec
stos
stos
dec
in
sub
lahf
cmc
mov
bound
pop
sub
divb
and
popf
test
dec
xor
jge
repnz
fcompl
pusha
xor
sub
add
mov
xchg
scas
fstpl
ja
int3
cwtl
mov
movsb
fiadds
imul
out
fcmovne
js
mov
mov
xchg
mov
shlb
inc
or
xchg
stc
mov
icebp
imulb
lock
dec
test
jmp
aad
xchg
aad
loop
fisubl
imul
adc
popa
dec
fnstenv
sarl
sub
xchg
mov
pop
pop
xor
pop
int3
ljmp
arpl
and
outsl
jp
cwtl
mov
push
add
mov
idivl
adc
add
mov
lods
xor
test
mov
push
or
sbb
cmp
xor
and
push
and
imul
frstor
mov
adc
pop
sbb
push
push
jne
mov
dec
into
lret
cmp
out
enter
pop
popf
ja
mov
je
es
xchg
lds
cmp
dec
lret
mov
push
sbb
push
add
into
les
nop
push
scas
stos
aad
jp
dec
mov
jp
adc
test
and
mov
and
arpl
out
enter
jg
movsb
cmpsb
fisubrs
pusha
iret
cltd
fists
dec
add
outsl
pop
xchg
insb
jmp
and
xchg
add
lea
xchg
mov
repz
dec
sub
inc
mov
xlat
inc
mov
out
fcomp
pusha
lahf
ja
or
jge
fldl
jno
ret
add
fs
mov
jp
push
clc
fistpll
pop
xchg
adc
outsl
fldl
sbb
pop
push
fwait
sbb
loopne
and
sti
out
orb
jl
outsb
and
xlat
adc
xor
jmp
lock
loopne
lock
jbe
sti
addb
xchg
sbb
shl
pop
push
push
mov
cltd
pop
fwait
xor
shlb
stos
xorl
xor
mov
mov
cli
sbb
das
out
int
dec
mov
push
fists
iret
in
pop
mov
mov
mulb
fildll
pop
dec
repnz
mov
cwtl
add
cmp
outsb
data16
mov
sarl
and
icebp
cmp
jns
jne
dec
in
mov
enter
int3
das
imul
cld
jge
mov
les
sub
xchg
sub
xor
adc
enter
aaa
in
xchg
or
js
ja
aaa
sbb
fiadds
insl
jge
loopne
and
and
push
dec
lahf
insb
inc
lock
sbb
or
test
imul
dec
add
mov
loopne
ljmp
and
jmp
jle
lds
iret
lock
lds
in
push
push
push
mov
cmc
movl
mov
dec
sti
repnz
stc
adc
and
jbe
test
push
adc
adc
sbb
mov
and
mov
sbb
mov
mov
pop
push
fwait
inc
adc
and
fcoms
jne
and
sbb
cld
xchg
rcrb
mov
ret
js
andl
push
hlt
push
add
xor
popa
jae
movsl
cld
sbb
pop
push
lds
movsb
adc
sub
mov
aad
lea
aaa
sbb
sbb
xchg
loopne
int3
es
call
outsb
mov
pop
dec
xchg
outsb
jecxz
cmp
push
mov
insb
lcall
mov
mov
push
roll
iret
data16
mov
fdivs
addr16
and
mov
push
xor
jbe
sub
loopne
xorl
jne
sbb
popa
fmull
xchg
push
xor
rclb
sbb
idivb
pop
and
ret
jmp
dec
mov
adc
test
add
fstpt
sub
clc
sti
punpcklbw
mov
dec
jp
mov
sbbl
mov
add
gs
les
pop
test
mov
sbb
sub
fld
pusha
les
mov
xchg
ljmp
insb
mov
and
sbb
fwait
cli
xchg
les
test
addr16
jnp
mov
push
out
push
mov
ficoms
sbb
jge
mov
insb
mov
ss
pop
pop
mov
movsb
pop
push
cli
lret
sub
aad
ss
lcall
mov
in
fidivrs
shrb
push
xor
sub
push
pushf
mov
xchg
test
mov
cmpsl
mov
sbb
sbb
das
aaa
imul
sbb
adc
test
test
and
hlt
shrb
fisubrs
adc
push
iret
mov
call
dec
add
push
inc
xor
jbe
imul
sub
mov
sub
call
aad
ficoms
clc
stc
mov
mov
cmp
lds
add
loopne
fisubrl
ljmp
in
mov
negb
psraw
sahf
in
std
push
lea
xchg
push
ret
andb
leave
and
sbb
cmp
lods
arpl
cld
sub
fidivrs
add
push
fstl
loope
mov
sbb
test
mov
sbb
call
adc
das
lods
testb
adc
pop
xor
push
pop
mov
aam
mov
je
enter
xor
xchg
and
inc
mov
stc
mov
adc
sbb
mov
xchg
jne
pop
or
xchg
xlat
aas
movsl
inc
shll
fidivrl
iret
mov
jb
sub
stc
call
fsubrs
pop
inc
cs
add
enter
sbb
cmp
jge
add
int
aam
imul
pop
fs
jmp
imul
cmpsb
jl
scas
movsb
xor
in
add
fwait
inc
rorb
and
arpl
lock
xchg
add
inc
enter
push
mov
push
leave
hlt
aas
pop
popa
adc
sbb
dec
mov
fwait
sarb
inc
arpl
cmpsb
dec
popf
pop
mov
js
inc
mov
stc
mov
filds
add
lret
cmp
sbb
dec
fnsave
adc
call
jle
or
es
jns
dec
xchg
xchg
in
push
mov
cltd
nop
paddd
jns
inc
mov
cmpsl
je
xlat
ds
out
rorl
xor
and
pusha
leave
jne
cmp
jae
loope
roll
lock
pop
pop
and
fbstp
dec
xchg
fdivrl
jns
movsb
les
mov
cmp
cmpsl
pop
jmp
adc
jle
lods
jl
add
adc
repz
push
ds
lahf
xchg
add
and
jp
push
or
repz
mov
fnsave
jmp
inc
mov
mov
sahf
jb
stc
fcoms
xchg
movsb
arpl
mov
mov
pop
mov
in
repz
mov
jae
movsb
xor
rol
ljmp
xchg
dec
mov
add
hlt
repz
pop
es
aam
push
push
lods
and
fwait
mov
xchg
jns
fnstsw
dec
push
pop
daa
sub
cmp
or
sbb
jmp
xlat
fldenv
mov
jns
dec
push
pop
daa
sub
cmp
or
sbb
jmp
xlat
fldenv
mov
jns
dec
push
pop
daa
sub
cmp
or
sbb
jmp
xlat
fldenv
mov
jns
dec
push
pop
daa
sub
cmp
or
jmp
xlat
scas
shlb
aas
inc
js
push
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
hlt
add
mov
add
mov
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
das
cmc
add
sbb
add
adc
add
or
add
add
add
cld
hlt
add
hlt
hlt
add
in
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
cmc
add
push
cmc
add
pop
cmc
add
jo
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
call
testb
xor
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
test
add
mov
add
xchg
testb
pushf
testb
movsb
testb
lods
testb
mov
add
testb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
loopne
add
call
testb
or
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
shl
add
testl
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
clc
add
jl
add
je
add
insb
clc
add
fs
add
pop
clc
add
push
clc
add
dec
clc
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
test
add
mov
add
mov
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
dec
stc
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
in
add
in
stc
add
hlt
stc
add
cld
stc
add
add
add
or
add
adc
add
daa
cli
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
inc
cli
add
dec
cli
add
pop
cli
add
insb
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
