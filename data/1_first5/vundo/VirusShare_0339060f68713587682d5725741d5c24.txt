inc
stos
scas
aam
aad
add
dec
aaa
popf
lret
jbe
adc
cmp
ja
jo
adc
lock
movsl
fisttpl
mov
jae
adc
fildl
ja
jae
adc
cwtl
test
push
adc
mov
dec
inc
sub
add
leave
ja
mov
push
adc
push
and
push
mov
les
dec
pushf
cmc
push
fsubs
adc
sub
stos
clc
mov
sahf
and
jae
adc
inc
xchg
jbe
adc
inc
fcoms
add
pop
cli
mov
repz
das
or
es
mov
ret
jo
fimuls
cltd
mov
insl
ret
mov
xchg
dec
insl
mov
outsl
adc
sub
mov
inc
fistpll
mov
xchg
sarb
es
or
daa
xchg
das
xchg
sti
mov
and
jae
adc
adc
pop
cwtl
add
lods
iret
push
je
invd
adc
mov
jae
adc
hlt
mov
lock
adc
xorb
daa
movsl
cmp
cld
pop
bound
addr16
mov
or
int3
mov
jae
adc
outsb
mov
mov
addl
pop
shrl
aad
lds
inc
lock
invd
adc
push
adc
into
push
invd
adc
movsl
mov
jae
adc
adc
add
fidivl
enter
add
mov
dec
push
nop
jae
adc
xchg
jbe
test
xor
push
fcmovnb
enter
cmp
adc
mov
insl
adc
cs
xor
jnp
lret
jo
mov
xor
pusha
push
pusha
movsl
cli
or
push
loopne
push
adc
jnp
cmp
loope
adc
jecxz
adc
stos
in
push
mov
add
mov
aam
xchg
jb
cmpsb
sub
fsubrs
xchg
xchg
aam
shlb
adc
mov
push
sub
push
pop
cmp
lds
fistl
sub
cmp
sub
aam
pop
popa
loope
mov
shlb
imul
push
and
cmpsl
cmp
scas
das
inc
test
xchg
and
mov
rcrl
sub
adc
jae
add
adc
pop
sub
lret
pop
outsl
lods
pop
loope
shrb
push
adc
mov
lcall
mov
jp
fldcw
cmp
inc
arpl
fldl
int3
ja
fs
adc
daa
lahf
in
mov
mov
imul
xor
rcr
cli
les
pop
adc
xor
lret
mov
lds
jo
adc
ljmp
dec
cltd
xor
adc
addr16
adc
adc
or
nop
pusha
jo
adc
roll
inc
xlat
leave
orl
mov
push
ficomps
int3
mov
sub
pop
fisttps
sub
add
add
push
sub
add
dec
je
push
adc
stc
pop
inc
sub
rcll
repnz
jbe
iret
mov
mov
pop
jl
daa
enter
adc
add
push
cmpsb
push
gs
jg
mov
jl
aaa
cwtl
xchg
movsb
das
mov
loope
fmul
add
daa
sbb
out
mov
adc
int
lods
dec
mov
or
xorb
nop
ljmp
data16
jg
cmp
xor
ja
sbb
adc
outsl
pop
daa
lahf
in
movsl
cmpsl
xchg
pop
loopne
push
adc
lret
mov
pop
scas
cmp
cmp
out
xor
jo
adc
jg
adc
mov
int
jo
in
sbb
mov
int3
xchg
mov
loope
adc
pop
subps
lods
pop
mov
int
mov
dec
jmp
pop
mov
xchg
add
enter
jmp
lcall
or
xor
aas
std
cmpsb
dec
pushf
dec
dec
dec
out
cmpsb
movsl
xorb
cmpsl
cmp
test
mov
pop
mov
jb
int3
lods
ljmp
adc
cmp
jae
adc
cmp
sub
jns
loopne
mov
or
pop
mov
adc
pop
sbb
cmp
cmp
fiadds
xchg
jge
inc
cmpb
xchg
adc
mov
push
mov
clc
jecxz
fstpl
ret
icebp
inc
fs
test
js
push
adc
cli
push
pop
lea
arpl
or
or
mov
or
call
bound
adcl
test
cmp
push
daa
mov
int3
mov
cli
jle
pushf
xchg
xchg
nop
out
jl
jnp
or
sub
push
es
ja
push
push
pop
mov
ret
stc
lahf
daa
sbb
lret
loopne
jecxz
jecxz
sub
push
xchg
push
sbb
xchg
push
rclb
mov
jecxz
cwtl
iret
dec
jo
adc
sub
jae
mov
shr
test
jp
mov
jl
jbe
in
add
push
xlat
sub
adc
jle
nop
fbld
mov
sbb
push
adc
std
cld
cli
das
ret
jo
loopne
jo
adc
add
int3
push
push
fstl
xor
call
out
sbb
push
adc
push
movsl
mov
adc
arpl
sarb
xor
adc
andl
or
and
jmp
jno
jo
mov
icebp
cli
lahf
sbb
push
adc
dec
dec
dec
lahf
jb
push
rorb
add
xor
js
inc
orb
and
lcall
pop
mov
cmc
inc
enter
inc
jp
lods
aad
xchg
jo
adc
cmpsb
mov
movsb
and
loope
je
jb
mov
dec
dec
sti
pop
or
test
int
xchg
lock
xor
add
dec
jns
xor
roll
mov
adc
and
xor
lods
out
mov
sub
loop
shll
lret
mov
pop
es
lcall
sbb
mov
les
or
aas
pushf
jo
adc
adc
pop
mov
pop
pop
dec
push
sub
mov
dec
or
pop
shrl
jnp
jae
jo
adc
mov
cmp
xchg
and
test
adc
inc
pop
mov
int
mov
cmp
xor
adc
fadds
orb
lcall
adc
jno
dec
adc
inc
or
jp
test
pop
adc
je
adc
push
cmp
cmpsl
add
adc
subb
aad
mov
adc
sbb
cwtl
mov
xor
pop
mov
add
mov
iret
scas
push
test
sbb
adc
mov
popf
aam
movsb
dec
je
adc
mov
mov
movsl
cli
xor
and
fwait
test
fsubr
xor
jae
adc
pop
fisttpl
js
adc
push
adc
in
ja
adc
fadds
cmp
sahf
daa
mov
mov
xor
and
jae
cmpsl
dec
popf
dec
push
loop
pop
mov
or
push
xchg
out
lods
test
xor
adc
lahf
cmpsl
mov
cmc
or
xor
lcall
push
bound
add
lcall
push
daa
push
pop
sub
dec
adc
fsubrp
jae
sbbb
cmpsl
or
into
js
int3
imul
mov
pop
dec
add
sub
es
cltd
mov
dec
int3
xor
sar
inc
ret
add
dec
push
or
push
sub
mov
cwtl
mov
mov
and
lock
lea
pop
sub
test
mov
shrb
test
testb
fadds
aaa
jns
xor
mov
push
and
inc
cmp
lcall
scas
lcall
es
filds
loopne
or
scas
add
inc
repz
dec
xchg
rcrb
xor
mov
fs
and
jle
push
ret
les
jno
stc
fcomps
in
shll
nop
jecxz
aas
adc
push
pop
repz
in
movsl
jb
call
jbe
push
aas
xchg
dec
cmp
insb
outsl
test
imul
adc
aaa
sub
icebp
jecxz
mov
les
movsb
sarb
iret
lods
js
cmpsl
test
sbbl
out
or
cmc
sahf
or
jl
push
adc
imul
lret
aad
fsts
icebp
sub
xchg
xor
jg
fs
ja
push
adc
and
shl
ret
push
sbb
fucom
xchg
or
sarb
jbe
inc
shll
testl
call
addr16
jle
je
push
das
loope
jmp
jmp
das
mov
in
jnp
inc
jle
and
in
mov
add
sbb
dec
add
xchg
or
enter
mov
mov
test
inc
orb
add
inc
pushf
test
adc
inc
jno
cltd
xor
rorl
push
cmp
push
fdivr
xchg
mov
and
xor
cld
aad
repnz
fucomp
pop
aam
daa
dec
mov
and
fstl
fmuls
lret
xor
bound
mov
push
adc
popf
insb
into
push
cli
std
inc
scas
push
test
int
mov
test
mov
les
and
push
pop
sti
fstpl
xor
sub
pop
andb
pop
les
ja
stos
inc
fcmovne
adc
mov
je
dec
js
adc
push
loopne
rorb
aaa
dec
fs
insb
push
mov
loopne,pn
test
lods
fld
push
hlt
iret
cmp
xchg
mov
mov
pop
dec
mov
sar
mov
sub
pop
sub
lcall
inc
pusha
sbb
enter
mov
inc
stos
aad
jge
inc
xchg
mov
mov
shlb
mov
xchg
andb
orb
sub
dec
nop
mov
push
pop
xchg
mov
jne
ja
push
mov
jb
fldcw
sbb
daa
test
inc
lcall
iret
sahf
cmp
into
lea
xlat
addl
in
or
fidivrs
bound
loopne
pop
lds
pusha
mov
inc
test
in
or
xchg
test
in
cmp
jae
pop
test
mov
lds
and
lea
movsb
sbb
popa
xor
lods
fucomp
push
bound
xor
sub
sub
mov
jno
loope
aad
pop
daa
xchg
dec
adc
xchg
mov
mov
shll
push
jg
lea
inc
mov
sar
outsb
negb
push
leave
sub
push
pop
cmp
fucomip
pop
stos
pop
add
sub
imul
sub
mov
mov
sub
out
inc
mov
push
je
push
xchg
dec
std
xor
jecxz
pop
xchg
jne
ljmp
in
inc
pop
popf
fadds
outsl
push
pusha
js
adc
add
xchg
sub
adc
jmp
movsb
in
mov
push
mov
das
adc
inc
lret
mulb
add
fwait
mov
add
dec
mov
and
dec
jb
dec
dec
iret
jl
push
adc
and
mov
lret
mov
push
inc
cmp
xor
mov
jbe
test
adc
mov
and
iret
aas
aam
cwtl
pop
cli
notb
in
lods
or
test
add
sbb
inc
mov
clc
push
add
dec
dec
int3
sar
lcall
cld
inc
mov
mov
loope
rcl
push
fwait
adc
stc
loopne
aam
ljmp
sub
out
jle
mov
imul
shll
aaa
lret
pop
mov
or
mov
enter
sbb
lods
sbb
add
rcll
mov
jno
sbb
inc
push
in
inc
inc
mov
jle
idivl
test
inc
dec
and
jo
adc
mov
dec
es
in
stos
je
stc
mov
push
iret
jns
sbb
jo
adc
pop
mov
movb
inc
jne
ljmp
jbe
pop
movsl
icebp
or
movb
adc
scas
test
or
cld
out
sbb
pushf
clc
fists
cmp
andnps
fstpl
or
adc
dec
sahf
pop
les
aaa
out
push
imul
or
leave
dec
rcll
lods
pop
xor
add
cmp
daa
mov
mov
sub
enter
dec
cmc
add
mov
sbb
stos
loope
lretw
or
daa
leave
push
adc
sarl
push
inc
mov
push
roll
xor
inc
jb
lds
and
or
push
push
pop
loopne
push
adc
shufps
fwait
push
xchg
jge
dec
xchg
add
mov
lahf
cmp
ficoms
shrl
jb
jbe
jb
xchg
sub
jno
sahf
add
pop
pop
outsl
rorl
jg
add
lods
pop
mov
xor
fcomps
lcall
icebp
xor
jp
lods
jo
adc
loope
and
lret
rolb
popf
cmp
pop
inc
xor
cld
add
jl
push
stos
push
cmpsb
cmc
out
lcall
fcmovb
lret
push
lods
mov
aaa
dec
fs
int
rcrl
outsl
lods
sti
fucomi
mov
cltd
mov
pop
cmp
arpl
rol
xchg
dec
std
in
aaa
jge
cld
aam
push
fstl
sbb
adc
in
push
hlt
sahf
mov
popf
imul
xchg
mov
mov
aam
push
xor
mov
xchg
cmp
stos
mov
sbb
mov
xlat
leave
orl
aam
in
mov
mov
cmpsl
adc
and
ss
and
movsl
jmp
ja
push
test
pop
xor
insl
fldcw
ficomps
pop
and
jmp
push
cmpsb
ds
cmp
dec
pop
sbb
rcll
dec
in
sbb
data16
lret
fiadds
popf
cmp
pop
imul
sahf
addr16
cld
add
push
in
xor
cmp
dec
jmp
dec
cmp
xor
outsb
leave
inc
test
mov
mov
push
ds
andb
mov
push
adc
das
push
sub
insl
lock
movntq
add
rcl
xchg
dec
add
aad
jns
mov
mov
mov
xchg
sub
aaa
mov
ja
jg
aaa
aad
je
scas
sbb
mov
movsb
push
scas
and
jbe
xor
mov
dec
xor
mov
sbb
xchg
test
jle
out
mov
mov
rcll
cltd
jmp
sub
adc
jb
add
into
movsl
bound
add
mov
std
test
dec
mov
icebp
mov
outsl
jo
pop
mov
fs
pop
loopne
lcall
arpl
xchg
mov
lods
or
mov
sbb
mov
shll
add
jg
inc
mov
hlt
pop
adc
cld
pop
push
cmpsb
ljmp
nop
scas
xchg
out
sub
xchg
sbbl
jns
pop
jb
mov
lods
shll
pop
cltd
ja
scas
aad
mov
push
mov
push
xchg
stc
jecxz
adc
out
fldenv
and
ss
inc
xchg
inc
sbb
stos
inc
xchg
test
mov
repz
mov
push
ret
mov
fucomip
stc
xor
shl
lcall
mov
sbb
imul
mov
dec
gs
les
jecxz
aas
mov
lea
sub
cmpsb
pushf
fldt
cmp
nop
insb
cltd
clc
mov
mov
mov
and
addr16
mov
mov
add
jp
aam
shrl
mov
cmp
into
mov
jle
inc
cmpsl
int3
sbb
dec
std
ljmp
mov
adc
xor
cmp
adc
les
mov
aaa
xchg
sbb
push
in
imul
push
cmpsl
mov
cmpsl
dec
insl
dec
and
and
lods
addr16
xor
out
sbb
adc
push
out
mov
sarb
sti
push
insl
lret
jmp
je
jl
xor
xor
jno
add
loop
stos
sti
test
xor
cli
cmpl
cmpsl
dec
popf
mov
popf
jecxz
add
xor
fidivs
loop
stos
push
insl
outsl
shlb
stos
cmp
fs
movsl
dec
popf
cs
popf
cmp
fdivrl
fisubrs
sbbb
cltd
mov
pop
cmpsl
dec
popf
mov
xchg
sub
aam
adc
inc
add
push
test
lock
xor
mov
sub
sub
xor
test
aad
mov
jecxz
insl
lret
sub
popf
mov
add
cmc
inc
cmpsl
rclb
cltd
js
ret
and
je
pop
dec
cmp
clc
jg
fmulp
sbb
aad
and
call
pop
jge
sub
sub
xor
lds
cmp
mov
ret
test
dec
push
ret
shrb
call
jl
shrl
jmp
mov
stos
push
push
and
notl
arpl
dec
popf
cmp
push
les
dec
popf
cmp
xchg
in
mov
cmc
sub
sbbl
inc
ret
inc
pop
cmp
int
fwait
call
inc
cltd
movsb
sahf
jb
ljmp
dec
cltd
hlt
pop
loope
sub
mov
shll
fwait
movsb
push
jb
ljmp
loop
inc
pop
jmp
daa
xchg
cmp
arpl
pop
push
out
mov
mov
mov
xchg
xor
out
pop
cmpsl
dec
mov
cmp
xor
leave
aad
or
leave
dec
mov
inc
push
in
popf
sub
cmp
pushf
cmp
data16
idiv
adc
mov
shrb
xchg
push
into
sarb
movsb
push
scas
fisttps
and
daa
push
mov
out
aad
ds
xchg
jns
rol
adc
out
fldenv
inc
xchg
dec
or
and
js,pt
test
jnp
mov
push
repnz
mov
fimull
sub
and
bound
cltd
in
lcall
imul
enter
adcb
mov
mov
shlb
orb
popf
xlat
push
adc
jmp
adc
push
imul
pop
xor
ljmp
push
test
mov
nop
jo
adc
xor
fisubrl
aad
mov
adc
jp
outsl
push
xor
add
lea
jae
adc
mov
and
mov
add
push
mov
movsl
adc
rol
mov
movsl
out
push
push
imul
push
adc
push
es
mov
fsubl
sbb
lds
int3
loope
test
adc
nop
push
jle
cli
jmp
jle
cld
mov
pusha
mov
push
adc
cmpsl
pop
push
jg
cld
dec
xor
mov
mov
mov
mov
push
aaa
push
add
push
repnz
jle
lret
mov
sbb
test
and
bnd
cltd
adc
int3
sbb
xchg
imul
stos
hlt
imul
out
std
insb
mov
ds
es
loop
popf
cmp
xchg
les
hlt
mov
fmuls
push
cmpsb
pop
pop
and
out
lock
dec
popf
sub
cmp
xchg
jg
fisubrs
mov
cmp
lds
mov
and
cmp
jns
jmp
dec
add
stos
insl
ss
cmpsb
dec
adc
adc
cmp
sbb
mov
mov
ja
movsb
stos
jb
ljmp
insl
inc
pop
rcrl
cmp
add
popf
cmp
rolb
cwtl
jp
push
test
int
mov
and
xor
mov
fwait
mov
pusha
mov
cwtl
jbe
push
test
int
mov
pop
lret
push
xchg
push
mov
inc
popa
pop
and
test
dec
ss
das
inc
test
inc
ret
and
push
xchg
cmp
shl
push
or
int3
nop
leave
mov
cs
cmp
loop
shrb
out
mov
stos
push
fbstp
roll
adc
pop
sub
inc
popf
cmp
adc
rorl
mov
push
push
stos
nop
jmp
pop
mov
dec
jmp
dec
loope
cmpsl
xor
mov
cmc
sbb
sarb
mov
gs
adc
xchg
inc
scas
dec
popf
xchg
fucomip
push
push
insl
and
stos
push
inc
add
adc
pushf
sub
xor
xor
fwait
les
js
mov
shlb
push
cmpsb
pop
ficomps
sbb
add
jo
lods
inc
mov
dec
stos
inc
sub
int
push
fwait
pop
push
je
jnp
add
xor
jno
mov
ljmp
dec
aaa
sahf
leave
gs
ret
add
push
adc
dec
lahf
test
cmc
cmp
mov
ds
insl
lret
mov
push
sub
pop
insb
rorb
jmp
sub
cwtl
xor
add
pop
jge
dec
pushf
dec
psrlq
cmpsb
dec
xor
xchg
aad
jns
jmp
push
movsl
lds
es
xchg
sub
fidivrs
cmp
mov
inc
sahf
cmp
push
lods
rcrl
sarl
cmp
pop
imul
pop
das
lcall
pop
cmp
inc
jns
shlb
cmpsb
sub
jl
inc
xchg
xchg
jle
mov
xor
xchg
mov
test
push
mov
int3
es
and
fwait
add
test
lret
mov
and
lea
mov
mov
cmc
cmpl
mov
xchg
mov
mov
cmp
inc
add
xchg
dec
into
das
cld
dec
insb
test
cmp
int
sub
push
scas
xor
cmpsl
push
pop
iret
xor
sub
pop
mov
push
sahf
cs
fstpt
push
adc
lret
subl
stos
inc
mov
outsl
and
adc
jle
out
les
lods
pop
stos
notl
cwtl
push
cmp
push
xchg
loopne
movsl
bound
mov
les
mov
jge
decb
mov
test
push
test
aad
sbb
mov
xchg
sbb
data16
sbb
mov
lods
or
xchg
and
xor
cmp
dec
mov
shr
pop
mov
pop
das
xchg
mov
dec
dec
sbb
inc
test
movsl
inc
ja
xchg
mov
push
adc
jo
orl
sub
loopne
push
mov
dec
lahf
pop
mov
hlt
jle
xor
sbb
mov
push
stos
lds
jae
xchg
sub
xor
xor
jae
mov
fcomps
ljmp
jne
xor
cmpsl
pop
imul
jmp
leave
add
out
aad
nop
xchg
imul
int
xor
pop
cltd
cmp
sub
out
dec
pusha
jmp
mov
stos
scas
dec
cltd
and
and
sub
jnp
dec
popf
cmp
adcl
or
xor
xor
sub
xor
lds
cmp
jle
or
loop
stos
and
pop
ss
jge
cmp
aad
xchg
lock
dec
popf
lret
ss
leave
or
loop
stos
sti
mov
inc
pop
std
pushf
sub
push
arpl
adc
mov
popfw
mov
or
test
cmp
push
push
push
and
mov
inc
popf
cmp
and
fists
ljmp
inc
cltd
xor
mov
and
loope
inc
pop
loope
cmpsl
loope
jno
out
mov
mov
test
cmp
push
dec
js
dec
popf
mov
popf
mov
arpl
stos
jge
push
test
inc
pop
mov
add
xor
in
sbb
and
aad
ljmp
jo
push
es
fcomps
loope
adc
roll
cmp
js
out
fmulp
jne
pop
ret
stos
push
fldt
mov
cltd
xor
cmpsl
lds
push
xlat
cmpsl
dec
mov
popa
out
fmulp
or
xorl
jmp
push
ret
inc
rorb
cmp
popf
mov
cltd
mov
cmpsl
fcoms
mov
and
lret
inc
mov
xlat
cmpsl
dec
push
iret
add
cmc
std
test
push
test
xor
out
test
cmp
pop
jl
rcl
in
sahf
sub
int3
and
cmpsl
fcoms
mov
inc
dec
ret
std
aad
xor
sarl
xor
leave
adc
jmp
push
scas
fcompl
xchg
inc
cwtl
xor
mov
pop
sti
sub
call
in
jle
lret
std
jb
pop
test
scas
pop
cmp
and
lahf
shrl
dec
or
adc
and
adc
and
adc
add
shlb
adc
add
push
sub
adc
add
xor
add
xchg
and
adc
add
inc
sub
adc
xor
sub
cwtl
and
enter
mov
push
mov
ret
rorb
xor
cmp
adc
shlb
push
movb
sub
js
adc
arpl
lret
sbb
push
into
push
shrb
je
push
or
jbe
or
and
xor
mov
mov
test
xor
cmp
ja
cmpl
jae
leave
xchg
push
mov
jo
fwait
out
and
adc
mov
pop
cmp
jae
mov
sbb
das
push
sub
pushf
std
push
dec
rclb
adc
mov
jo
adc
and
pop
adc
outsl
aaa
aam
outsb
movsl
mov
aas
xor
roll
cmp
push
int3
sub
mov
pushf
add
shlb
loop
add
push
adc
ja
xor
jbe
or
xor
je
ds
cmp
sti
stos
pop
mov
sub
movsl
es
movsb
lds
adc
or
insb
int
dec
push
js
aad
jns
push
inc
adc
ret
push
adc
and
out
sbb
mov
pop
add
or
lods
pop
fdivrs
or
stos
aas
xchg
adcl
push
fiadds
push
mov
fistps
dec
arpl
lods
pop
mov
int3
or
pop
mov
cmp
stos
or
xor
pop
add
push
lahf
mov
cmpsb
ret
out
add
or
push
pop
dec
les
fcoms
adc
add
movb
cmp
mov
mov
cmpsl
xchg
fucomip
push
dec
jp
nop
ljmp
adc
pop
cmc
pop
daa
push
movsl
loope
xchg
enter
xchg
andl
pop
in
popf
sahf
mov
mov
xchg
mov
lods
pop
out
cmp
push
sti
std
ds
stos
push
pop
sbb
xor
bound
bound
mov
adc
js
adc
ljmp
sti
lahf
mov
js
adc
std
or
xchg
cli
rolb
xor
xchg
adc
dec
push
and
js
adc
sbb
sahf
sub
in
movsb
leave
lcall
fcmovb
lret
push
lods
sub
jmp
add
and
cmpsb
movl
movsb
fistl
sub
jae
les
push
add
mov
pop
cmp
jmp
cli
rol
outsb
mov
xchg
in
mov
vmovss
adc
scas
push
push
sub
adc
adc
push
adc
pushl
cmp
in
cmp
sub
ret
push
lods
scas
testl
inc
filds
rcrb
ficomps
js
adc
int3
js
adc
xlat
lods
pop
jno
enter
adc
arpl
fcomps
stos
mov
jecxz
ret
stos
push
aad
jge
outsb
and
lret
das
xor
data16
je
cmpsl
dec
loope
lods
adc
stos
loopne
ljmp
mov
cmp
loope
xchg
pop
adc
xor
popf
fs
add
orl
shll
insb
pop
xor
rol
adc
and
adc
adc
xchg
mov
cmp
pop
sub
push
cld
fnstsw
push
scas
aad
xchg
jb
into
adc
jmp
stos
pop
xor
lret
arpl
cmpsb
dec
jns
adc
cmp
adc
pop
mov
sub
scas
aad
push
btr
push
lea
shrb
test
xchg
adc
lods
dec
rorl
stos
leave
dec
les
add
mov
add
sbb
mov
sub
mov
scas
sub
lock
xor
icebp
sbb
loop
jb
push
add
insl
jb
arpl
add
add
xlat
add
pusha
push
push
fcoml
dec
adc
shlb
push
add
lret
add
inc
movsb
push
dec
imul
imul
jecxz
in
jbe
repz
test
sahf
pusha
js
adc
subb
mov
xchg
jbe
sub
push
push
in
pop
mov
pusha
jns
adc
loope
inc
rcr
mov
ljmp
enter
sub
pop
adc
roll
repnz
leave
in
stos
jne
out
mov
mov
mov
aad
xchg
daa
push
adc
fdivrs
enter
and
jg
xchg
and
xor
xorl
mov
mov
int3
jo
adc
mov
adc
leavew
lret
xor
ret
adc
jo
adc
xor
mov
xor
dec
test
int
jge
inc
mov
scas
mov
adc
in
adcb
inc
or
cwtl
jno
or
and
fcoml
xchg
jae
adc
adc
sahf
out
rorl
or
mov
push
adc
push
cli
jp
jge
adc
adc
movsl
jecxz
fsubs
adc
mov
pop
shlb
fwait
and
jp
sbb
repnz
xor
andb
mov
push
adcb
mov
pop
adc
pop
pop
gs
xor
out
mov
cmp
add
imul
insl
xor
adc
bound
popf
bound
inc
negb
mov
add
mov
or
lods
loopne
daa
push
adc
ds
bound
xor
inc
test
add
push
mov
test
push
leave
mov
cmp
push
add
test
inc
test
aad
dec
cmp
sbb
pop
xor
lahf
jno
dec
ja
jo
adc
push
shrl
pop
je
and
in
pop
xor
movsb
adc
pop
cmp
add
pushf
mov
push
test
dec
xchg
xor
daa
push
lods
fadds
adc
cmp
mov
push
movsb
push
ss
lcall
adc
ret
sbb
les
cmc
ljmp
aad
mov
lret
sub
adc
or
pop
ljmp
cmpsb
mov
adc
lds
rol
mov
ficoms
roll
fsubrl
mov
cmpsb
dec
jmp
jbe
xchg
sub
shr
push
sahf
nop
jo
adc
cmp
popf
and
sub
dec
cld
mov
mov
fmuls
data16
or
das
fistl
sub
jmp
fsubrs
outsb
and
push
in
push
pushf
cmp
mov
popf
cmp
inc
jno
mov
ljmp
outsb
and
adc
gs
bound
pop
mov
dec
push
out
fidivrs
or
push
adc
outsb
inc
pop
fstl
xchg
je
or
cmp
cmp
jno
icebp
add
loop
and
cmpsl
or
bound
jb
adc
sub
fimull
scas
pop
cmp
cs
xchg
pop
sub
sbb
cmp
jb
dec
out
sub
fs
dec
je
xchg
das
movsl
shlb
fs
lea
cmp
xorl
icebp
push
xor
and
cwtl
push
cmp
or
lods
rcrl
jnp
push
jo
push
adc
divb
adc
push
mov
inc
cmp
jb
fcoml
jl
mov
loop
aad
scas
repnz
add
aas
mov
cltd
lods
and
imul
shlb
xor
adc
jmp
inc
xor
or
jmp
arpl
fidivrs
pop
lods
pop
icebp
cmpsb
jge
inc
nop
lret
subl
push
push
lret
ret
push
andb
mov
dec
pushw
es
nop
dec
xor
mov
shl
dec
mov
xchg
xchg
mov
movsl
pop
fdivs
mov
hlt
mov
or
inc
leave
cld
pop
rcll
cmp
inc
test
jb
xchg
jge
lods
jp
xchg
mov
xor
icebp
aam
filds
jbe
scas
jmp
in
pushf
sbb
adc
icebp
mov
jbe
xor
test
xor
mulb
sbb
xor
fimull
jns
adc
pop
shll
pop
in
ret
adc
push
cwtl
icebp
stos
scas
into
daa
push
adc
lahf
aas
call
sbb
testb
adc
dec
es
fimuls
add
scas
mov
push
mov
or
cli
es
dec
add
jo
mov
mov
dec
popf
notb
fildll
pop
mov
fsubrl
and
leave
mov
cld
xchg
dec
pop
and
mov
insl
pop
and
movsb
aam
orb
fistl
dec
cmp
fwait
cmp
xor
dec
inc
lret
mov
adc
outsb
push
mov
mov
cmp
mov
dec
jp
sub
sbb
nop
mov
adc
pop
cmp
push
adc
xor
dec
push
or
ficoms
leave
test
data16
inc
cmpsl
loope
testb
push
cmp
stos
pop
pop
add
cmpsb
xchg
test
sub
adc
pop
jecxz
lds
dec
pusha
mov
mov
jno
enter
subl
sub
adc
adc
inc
cmp
adc
jb
lret
pop
sti
fucomip
mov
xor
mov
add
mov
adc
or
in
jle
push
lds
insl
jmp
adc
insb
les
or
mov
decb
lods
rol
xchg
fwait
popa
mov
inc
ficoms
xchg
aad
xor
in
lret
pop
jmp
imul
lahf
hlt
sahf
mov
and
jp
and
daa
add
in
lret
sbb
xchg
fwait
lds
je
and
adc
out
pop
mov
adc
or
aad
and
imul
ja
int
enter
inc
and
adc
adc
push
push
mov
cmpsl
dec
popf
dec
int
fidivs
pop
adcl
test
push
or
push
or
repnz
outsl
lds
mov
shll
aad
push
dec
movsl
fwait
adc
fisubrs
scas
lds
int
test
addb
mov
pop
lods
fnstsw
lret
icebp
aaa
sbb
cmpsb
dec
loopne
sahf
pop
jae
mov
jge
daa
push
adc
icebp
sub
shl
jne
iret
add
cmp
std
adc
pusha
jae
js
cmp
imul
inc
xchg
cmp
lea
mov
dec
pop
rorl
adc
push
push
dec
xor
stos
inc
loope
jge
cmp
adc
sbb
dec
jb
sbb
inc
dec
cmp
test
fidivs
andb
xor
pop
mov
pop
filds
jg,pt
xchg
sub
ret
pop
std
stos
add
lea
or
push
adc
adc
xor
pushf
add
add
and
jne
nop
add
das
daa
sub
bound
pop
pushf
jle
loopne
jb
ja
pop
int
dec
sbb
pop
push
xchg
shlb
mov
out
pop
pop
aaa
mov
mov
sbb
and
enter
shlb
push
mov
movsb
or
adc
fwait
inc
cmp
sbb
mov
pop
and
xchg
dec
lret
and
pop
or
cmpl
inc
inc
ret
iret
jle
push
inc
cmp
fmull
push
adc
jecxz
lcall
adc
add
andl
add
xor
jecxz
or
xor
and
push
mov
lret
mov
in
fimuls
push
cmp
mov
iret
jb
jno
push
das
cltd
aam
mov
add
insl
and
adc
xchg
js
xlat
push
add
mov
out
rcrl
icebp
and
je
ror
jl
inc
ret
sahf
insb
fdivs
loop
pop
xchg
pop
dec
test
adc
call
adc
pop
je
fistpl
adc
push
adc
inc
add
cld
pop
test
or
mull
cli
roll
rorl
inc
int3
mov
insl
cs
repnz
jno
int
sbb
out
rorl
mov
xlat
daa
nop
jns
adc
pop
mov
int
cmc
loopne
mov
mov
jl
cmp
or
mov
fisubrs
in
subb
pop
mov
inc
aad
xor
push
adc
les
mov
cmp
out
inc
decl
adcb
pop
sub
push
lods
mov
or
add
out
imul
and
cmc
sarl
mov
loop
hlt
sahf
fidivs
loop
aam
push
fstpl
fidivs
cmp
adc
mov
test
std
add
jl
mov
mov
lods
sarl
xchg
xchg
xor
dec
inc
lret
mov
adc
outsb
push
mov
inc
jbe
push
fisubrs
jmp
sub
in
fidivrs
or
push
cmpsb
dec
xor
out
adc
pop
fcmovnbe
lds
pop
mov
les
call
mov
pop
in
mov
das
ds
add
push
sub
popf
adc
push
adc
inc
xchg
sbb
pop
gs
stos
fcomps
or
push
cmpsl
sahf
out
mov
mov
or
ljmp
jae
adc
lds
arpl
mov
lcall
sahf
insb
push
movsb
pop
dec
jae
jae
adc
shl
push
fwait
das
push
loopne
and
loop
loop
stos
jno
int
lret
jae
adc
add
popa
stos
rorb
xchg
aam
es
test
mov
fnsave
loopne
xchg
or
push
popf
xchg
rorb
pusha
dec
mov
das
addr16
and
test
pop
or
push
adc
sub
dec
dec
or
lods
push
not
js
subl
sub
ja
daa
mov
lahf
cmp
ja
pop
shrb
push
xchg
xor
inc
push
jg
ret
push
pop
jno
cmpsb
pop
adc
in
cmpsl
loop
sub
adc
mov
arpl
icebp
add
bound
repnz
mov
mov
insl
xchg
push
rorb
lea
dec
stos
stos
dec
sbb
sub
push
xchg
push
sbb
mov
lahf
scas
cwtl
imul
add
push
cmc
mov
fprem1
cmp
imul
inc
ret
sub
xchg
cmp
push
mov
cmp
push
mov
dec
enter
addb
cs
jge
and
xchg
pop
stc
ret
or
out
cld
cmpsl
cmp
or
adc
in
and
mov
rol
inc
lock
out
and
cltd
in
lea
xchg
and
ret
mov
add
mov
nop
mov
mov
sarb
mov
mov
imul
idivb
incb
push
xchg
xorl
stc
xchg
jb
and
icebp
jno
jp
mov
addl
pop
arpl
fmuls
scas
sbb
push
adc
xor
jbe
lret
jno
push
or
fidivrl
pop
inc
mov
fmull
inc
decb
xor
int3
aam
ret
push
mov
jge
sbb
stos
aam
cwtl
daa
sub
rclb
ret
movsl
dec
inc
mov
int3
in
fldl
sbb
aas
xor
cmc
push
xchg
mov
dec
loop
stc
adc
add
cmpsl
fdivs
sbb
mov
push
sarb
dec
int
jnp
mov
ja
add
sub
scas
push
das
popf
mov
outsl
cmc
pop
dec
push
loope
popf
loop
idivl
mov
and
or
lods
and
push
cs
add
sub
xlat
data16
rorl
sub
stos
shrl
fs
lcall
pusha
dec
mov
jns
pop
xor
add
leave
je
imul
scas
mov
inc
fsubl
inc
adc
add
fcmovne
outsb
sub
xchg
roll
sbb
jno
loopne
das
mov
popf
and
pop
adc
pop
push
in
inc
cmc
inc
pop
mov
mov
pushf
mov
mull
jg
inc
add
pusha
pop
mov
or
loopne
mov
dec
pushl
cmp
cmp
les
lret
int
cwtl
push
pop
push
repz
in
movsb
rcrl
pop
hlt
and
mov
sub
stos
push
fstl
xchg
inc
out
sbb
mov
mov
movsb
lahf
jg
stos
or
test
mov
psubsw
add
hlt
jae
pop
or
mov
lods
add
pop
std
pop
cltd
scas
push
cmc
shrb
ljmp
icebp
jmp
jnp
ljmp
and
jae
int
add
jo
mov
mov
pop
loope
xchg
pop
inc
xor
leave
ret
sub
in
push
push
sub
ss
jb
adc
scas
mov
jle
test
fidivrs
fdiv
push
and
addr16
loope
out
cmp
add
sub
mov
lahf
inc
shrb
inc
push
inc
std
sbb
mov
cmp
bound
fldl
test
out
xor
jo
adc
scas
push
sub
shrl
add
daa
sbb
enter
stos
mov
and
mov
dec
call
mov
sub
jno
push
popa
subb
dec
mov
or
dec
mov
fisttpll
jmp
push
cmp
and
popf
mov
dec
fwait
sub
xor
hlt
sbb
bound
pusha
or
lahf
push
xor
sub
xchg
outsb
pop
jp
adc
push
adc
jge
pop
xlat
pop
jp
add
movb
push
xorl
sub
popa
enter
vdivsd
addr16
dec
add
pop
scas
fists
cltd
or
add
mov
test
xor
xor
push
pop
mov
or
lds
addr16
test
push
jbe
lea
shll
divl
mov
add
out
call
sub
mov
sbb
in
cmp
shlb
cmovg
add
or
iret
imul
lret
push
ds
dec
out
pop
xchg
pop
dec
cmp
scas
cmc
cwtl
mov
aaa
jecxz
inc
int3
xor
movsl
sub
pop
enter
lds
out
pop
cmp
test
jmp
mov
xchg
jle
jo
add
mov
xor
enter
jmp
stos
jle
out
xchg
sahf
or
fistpll
pop
and
add
mulw
jg
aad
jl
je
inc
dec
cmp
sti
cmp
ret
aad
adc
es
ljmp
daa
mov
outsb
shlb
pop
dec
sub
adc
add
fstpl
xchg
and
das
cmp
sbb
xchg
dec
popf
cmp
pop
aad
inc
push
jno
pop
stos
push
lods
pop
jp
and
lret
xchg
sub
sub
adc
icebp
pop
mov
xchg
add
leave
sarl
ljmp
mov
inc
push
mov
dec
bound
bound
cmpsl
les
sub
es
out
lret
out
aas
add
lods
pop
xor
sar
xchg
dec
dec
dec
inc
lret
mov
adc
test
or
push
adc
xor
dec
mov
inc
adc
sbb
ret
movsl
sub
push
pop
ss
mov
sti
mov
cwtl
cmp
mov
push
xor
pop
fnstsw
cmp
pop
cltd
or
xor
pop
popf
cmp
outsl
cmp
xor
xlat
jle
loope
sbb
push
stos
push
gs
mov
fwait
adc
add
imul
insl
lds
popf
cmp
out
dec
inc
jp
xor
fisubs
pop
movsb
dec
cltd
inc
pop
imul
loope
popf
fnsave
dec
jno
icebp
sbb
cmpsb
dec
cmp
sahf
xor
mov
adcl
mov
out
fidivrs
fwait
inc
xchg
push
cmpsb
dec
in
or
imull
adc
sub
adc
lock
mov
xchg
add
test
jne
push
push
stos
test
xor
pop
adc
push
adc
pop
cmpsl
dec
popf
dec
test
outsb
pushf
daa
push
stos
push
lods
nop
jno
int
mov
mov
xor
xor
lds
pusha
imul
test
in
or
lods
sahf
mov
repnz
adc
fiaddl
inc
mov
push
push
dec
sbb
adc
xor
mov
push
and
sub
adc
cld
mov
mov
fsubr
mov
aam
and
les
pushf
or
je
repnz
adc
cmc
cs
test
and
outsb
push
loop
lods
pop
mov
or
adc
jae
push
adc
stos
cwtl
orb
jge
and
movsl
roll
inc
out
les
loopne
jbe
scas
sahf
mov
in
adc
push
adc
cmp
cmp
mov
mov
out
mov
xchg
je
add
sti
popf
lods
push
scas
insl
pop
and
push
adc
mov
xchg
pop
jp
out
mov
lea
mov
dec
pop
mov
xor
lock
stos
adc
bound
sub
adc
jp
add
xor
out
push
xchg
and
sub
gs
push
mov
jo
jae
adc
adc
and
add
sbb
and
mov
cli
mov
aaa
pop
sub
cmp
add
adc
inc
xchg
sbb
js
clc
push
jp
adc
fwait
stc
in
ret
frstor
sahf
repz
mov
addl
pop
pop
shrl
loopne
popa
pop
in
pop
movsb
cmp
in
repnz
push
jp
stos
inc
in
mov
push
jmp
sub
dec
sarl
fbstp
xor
inc
jecxz
xor
repnz
mov
andb
das
cmp
data16
adc
mov
decb
jl
jmp
pushf
in
inc
or
frndint
xor
call
leave
fnstsw
jmp
sub
xor
outsl
popa
movsl
xor
inc
imul
movsl
cmpb
orb
inc
mov
push
mov
mov
test
imul
push
dec
adc
adc
frstor
cmpsl
dec
cltd
xor
cmp
hlt
mov
pop
or
icebp
sbb
push
adc
dec
mov
lods
cmpsb
gs
out
cmp
xor
ljmp
movsb
cmp
inc
ret
push
lods
sar
xchg
xchg
les
fldt
aam
pop
or
sub
adc
or
test
push
sbbb
and
addr16
push
cmpb
adc
mov
mov
cmp
lds
cmp
loope
xchg
ret
xchg
in
push
cmp
stos
pop
sbbl
adc
lret
insb
push
cmp
cmpsl
sbb
inc
int
aad
inc
or
pop
and
mov
int
xor
push
adc
cld
push
es
cmpsl
xor
daa
inc
clc
jns
adc
shll
lret
inc
sarl
outsl
jbe
rcr
pop
jb
inc
cltd
inc
xchg
in
push
adc
pop
cmpsb
dec
cltd
mov
and
adc
js
push
push
or
in
adc
inc
pop
inc
cltd
xor
jae
loope
ja
cmp
popf
lods
xor
adc
inc
fucomp
adc
inc
arpl
xor
jbe
pop
pushf
sahf
hlt
sahf
shll
pop
mov
addb
inc
jp
cmp
mov
mov
xor
sbb
sub
mov
adcl
mov
push
stos
fucomp
lea
std
xlat
lods
pop
cmp
add
push
rolb
lret
ret
sahf
cmp
test
fstl
cmp
loope
push
jae
sub
mov
inc
test
pusha
ljmp
cltd
xor
jo
in
imul
cwtl
loope
hlt
stos
adc
shrb
jno
jp
adc
cmp
out
mov
cmp
int
push
rcrb
jmp
setge
adc
fcoms
cmpl
mov
hlt
jbe
push
pop
and
fstpl
jp
adc
pop
cmpsl
dec
ljmp
lahf
cmc
lahf
ret
xlat
cmpsb
dec
call
xchg
cmc
adc
inc
pop
movsl
dec
in
mov
mov
ljmp
mov
and
adc
fildll
in
xchg
movsb
sahf
cmp
fwait
addr16
loopne
cmp
pop
rcr
mov
daa
leave
lods
imul
pushf
mov
mov
adc
imull
mov
lret
mov
mov
pusha
icebp
int
pop
lret
adc
fdivrp
repz
out
xchg
lea
sti
push
movsb
mov
add
push
adc
or
hlt
loop
fwait
mov
out
mov
jmp
add
cwtl
jmp
daa
mov
insb
add
pop
scas
push
xchg
inc
xchg
loopne
adc
out
sbb
in
dec
out
adc
push
mov
mov
mov
push
add
sarb
outsl
push
lds
hlt
clc
jecxz
and
sub
inc
xchg
dec
pop
adc
aas
js
stos
sbb
pop
lock
repnz
xor
rorb
mov
test
or
mov
dec
push
pop
ss
cmp
hlt
nop
jbe
adc
dec
adcb
gs
jo
adc
jl
adc
fdiv
stos
push
cwtl
jae
adc
insl
pop
out
cmc
fistl
mov
adc
cmp
cmp
nop
jbe
adc
out
ljmp
pop
jo
adc
jno
mov
loopne
mov
int3
xchg
inc
in
cwtl
jae
adc
stc
push
frstor
nop
adc
inc
and
enter
adc
ss
xor
cmp
sub
dec
popf
cmp
push
sub
dec
ja
jo
adc
enter
push
cs
cmpsb
dec
fs
subl
ficomps
inc
cmc
add
jecxz
enter
out
stos
fistps
cmpsb
movsl
cmp
push
out
mov
mov
fs
in
inc
jl
adc
mov
cmpsl
cwtl
mov
pop
aam
push
scas
pushf
test
push
fwait
push
dec
sbb
insl
push
mov
addr16
adc
ds
dec
inc
cmpsl
mov
mov
cli
jnp
push
pushf
ja
and
push
sub
push
or
lods
push
loop
scas
mov
pop
fldenv
mov
add
jo
adc
test
inc
lahf
mov
stos
loope
jg
pop
xor
popf
aam
push
adc
outsl
test
negb
shlb
adc
sbb
pop
cmp
jmp
fsts
adc
gs
push
fdivrs
pop
cmp
jb
dec
fwait
insb
mov
insl
testb
cmp
shl
xor
movsb
out
lahf
pop
dec
pop
xor
les
adc
outsl
or
mov
and
lock
les
push
shlb
mov
andl
aad
push
aad
dec
aaa
cmpsb
mov
and
inc
cmp
aam
leave
enter
lea
xor
adc
stos
roll
dec
jg
mov
cmp
jge
jp
das
mov
lds
mov
mov
lahf
xchg
mov
popf
dec
inc
stos
scas
aam
inc
jge
pop
sti
mov
mov
daa
sub
xchg
not
hlt
sahf
mov
and
leave
inc
std
pusha
fildll
daa
notb
test
fwait
rcr
out
loopne
sub
adc
mov
mov
xorl
pop
adc
xor
mov
jmp
js
jge
insb
push
dec
sub
cmp
or
ret
pop
adc
xlat
lods
shlb
push
mov
and
orl
into
adc
inc
ds
movsb
inc
lret
mov
cmp
fdivr
outsb
push
adc
adc
pusha
cli
cwtl
pop
faddl
pop
test
push
xchg
imul
lods
xchg
mov
add
mov
mov
xchg
leave
mov
sub
jae
adc
inc
stos
jle
cwtl
xor
pop
push
enter
outsl
fucomip
addr16
jae
adc
pop
adc
daa
orb
xchg
roll
cmpsb
rcll
jno
lcall
jo
adc
test
or
int
rol
repnz
adc
adc
jle
je
add
lcall
or
jb
mov
roll
icebp
out
adc
or
ret
in
daa
jo
or
repnz
sbb
push
jl
adc
mov
pop
cmp
inc
mov
inc
xchg
movb
and
std
aam
push
adc
inc
pop
gs
and
sbb
lea
dec
int
iret
and
jmp
shll
sub
jne
cltd
arpl
mov
pop
int3
in
out
inc
mov
mov
addb
mov
fmuls
pushf
push
dec
jl
adc
das
aad
jo
adc
into
out
jo
mov
xor
es
js
mov
mov
les
pop
sti
lahf
adc
xchg
stos
aad
pop
test
dec
fldt
popa
sbb
daa
into
xor
or
or
in
pop
adc
adc
fldl
mov
inc
fcoml
jns
popf
test
xor
sbbb
mov
lock
push
adc
xor
or
push
pop
jecxz,pt
jno
xchg
xchg
rorl
xor
lret
or
and
pop
cwtl
scas
dec
inc
test
fnstenv
xchg
pop
jmp
mov
mov
dec
pop
movsl
mov
mov
and
pop
dec
jl
adc
cmp
pushf
mov
lret
cmc
add
jo
adc
leave
gs
arpl
std
and
adc
aad
out
pop
cltd
andl
daa
sbb
std
shll
js
or
pop
cwtl
scas
test
adc
or
gs
pop
mov
add
sahf
ss
jno
sbb
adc
outsb
pop
psrlw
loop
data16
xchg
sub
push
xor
mov
adc
add
fcompl
push
or
sti
aad
lret
lds
dec
movsl
fstl
movsb
pop
outsb
cmc
ljmp
dec
cltd
xor
sar
xchg
mov
mov
dec
or
adc
outsl
rorb
add
adc
jg
pop
pop
add
popa
jmp
push
jbe
cmpsb
dec
jmp
data16
xchg
sub
or
pop
push
scas
pushf
mov
lods
test
rcll
dec
cltd
popf
adc
dec
ja
jae
adc
xor
ss
jno
pop
rcll
sub
inc
cmpsb
dec
aas
cmpsl
sahf
arpl
xchg
je
cmpsl
test
xchg
dec
cmp
add
test
xor
subl
in
cmpsl
loope
sub
repnz
jo
adc
push
lcall
mov
je
sti
cmpsl
add
das
ja
lods
push
cmp
mov
std
mov
pushf
xor
aam
jg
jne
jge
mov
inc
xchg
clc
fnstsw
mov
in
jo
adc
push
mov
dec
sahf
xchg
ja
aaa
mov
sahf
cmp
ss
mov
mov
in
jo
adc
fdivr
inc
mov
jo
adc
aaa
cmp
jbe
into
iret
nop
pop
movsl
pop
in
xchg
dec
add
cli
xor
in
mov
addb
pop
adc
sbb
inc
cltd
scas
jle
or
xor
push
jae
mov
clc
adc
xchg
cltd
dec
cltd
arpl
shrl
add
or
cmp
clc
xor
xchg
sbb
jl
adc
sti
xlat
into
stos
movsl
cmp
add
lods
pop
push
sbbl
je
adc
xlat
mov
mov
test
lods
into
stc
dec
test
push
and
jo
push
insb
fnstenv
adc
push
jb
adc
sbb
aaa
popa
adcb
pop
jecxz
dec
stos
sbb
or
outsb
rcrl
ja
dec
and
push
add
xor
jge
cmc
out
sub
xlat
fmul
pop
fimull
out
stos
inc
aad
repnz
push
mov
test
rcrl
fisttpll
lret
out
mov
and
cmp
bnd
test
pop
int3
inc
pusha
popa
mov
cmp
cltd
popf
lds
or
add
dec
push
mov
call
jne
xor
and
lahf
pop
push
sbb
sahf
cmp
mov
pop
jo
dec
sbb
repnz
dec
sti
push
shrb
and
add
pusha
sbb
xor
bswap
outsl
push
je
iret
inc
sbb
ret
adc
das
mov
and
data16
jne
jbe
int3
mov
and
inc
adc
pop
mov
xchg
adc
loop
test
in
mov
mov
xor
loopne
jmp
adc
add
jo
adc
test
mov
fstps
pop
adc
movsb
hlt
jo
adc
test
in
pop
std
test
adc
xor
sub
mov
jbe
lock
pushf
push
test
push
adc
mov
hlt
xchg
xchg
fadds
roll
and
test
inc
jns
mov
cltd
mov
jo
adc
xorb
ror
lcall
ja
jno
mov
arpl
pop
jne
aam
cwtl
out
cmp
dec
inc
cmpsl
mov
mov
fidivrs
jmp
adc
aas
clc
jo
adc
inc
jecxz
adc
mov
pop
adc
dec
hlt
jo
adc
pusha
and
push
inc
lock
adc
pop
fisubs
xor
push
adc
inc
shll
mov
loopne
push
adc
int
xchg
push
or
cmp
dec
aaa
xor
adc
jge
mov
cltd
mov
jo
adc
mov
rolb
stos
mov
adc
and
mov
lcall
sahf
dec
into
ljmp
jp
mov
stos
mov
jecxz
out
push
call
fs
testb
sub
push
fnsave
mov
and
sahf
mov
out
stos
pop
xchg
jmp
insb
jl
adc
dec
sti
orl
push
test
imull
jo
push
adc
loopne
inc
pop
arpl
imul
leave
sbb
addb
fdivrp
push
sub
mul
xchg
movsb
jae
mov
or
adc
jle
cmp
shr
xor
mov
les
dec
aad
sbb
and
adc
nop
jmp
push
adc
xchg
pop
scas
push
in
jp
call
ret
shrl
push
push
mov
sub
push
jl
adc
les
mov
shlb
sahf
dec
gs
mov
dec
fwait
xor
ret
arpl
pop
xchg
loopne
gs
mov
sbb
push
cmpsb
int
outsb
add
in
xchg
xchg
adc
roll
push
or
jbe
push
jl
lds
fucom
sub
repnz
pushf
xor
sbb
cltd
pop
mov
sub
sbb
lods
clc
inc
test
dec
std
dec
mov
push
popa
in
add
cli
test
mov
cld
shl
sub
xchg
mov
fs
xchg
cmc
adc
mov
dec
lods
xorl
movsb
sub
mov
pop
jae
mov
stos
cmp
test
ja
das
in
xchg
pop
outsl
inc
icebp
imul
push
dec
pop
das
mov
lret
jecxz
cwtl
mov
push
and
jmp
outsl
shr
sbb
aas
jle
andl
jge
xchg
sub
into
push
adc
hlt
ds
adc
cmp
push
or
movsl
mov
pop
insb
inc
push
hlt
xor
mov
xor
insb
clc
and
xor
lods
lahf
jne
lock
mov
dec
inc
pushf
out
push
das
xchg
inc
sbb
rolb
mov
movb
sbb
sbbb
cwtl
cmp
or
mov
rcll
jo
int
fwait
pusha
data16
sahf
imul
daa
sbb
dec
pop
mov
fwait
aad
pop
loop
pop
mov
je
scas
addl
inc
pop
fs
dec
mov
lds
shll
sub
test
add
mov
addr16
pop
mov
repz
add
movsl
sub
fs
lock
rol
bound
xor
test
les
lret
push
cmp
shlb
sub
ljmp
pop
xor
clc
jl
jmp
push
cmp
clc
sbb
sub
std
push
daa
sub
and
xchg
or
insl
pop
pop
insl
dec
ret
adc
mov
out
popf
xchg
mov
mov
subl
cwtl
jecxz
or
daa
sbb
adc
mov
out
mov
add
dec
xor
push
mov
fidivrs
mov
and
mov
movb
sub
std
inc
rorb
sahf
fsubrp
pop
xchg
sbb
adc
int3
loopne
mov
add
inc
pop
xor
sbb
pusha
rorb
fucomp
dec
out
movsl
inc
ficoms
arpl
call
scas
sbb
mov
inc
fidivs
mov
inc
push
jp
mov
or
shl
outsb
cld
into
push
pop
inc
out
inc
in
add
clc
sbb
movsb
xor
into
mov
sbbb
int3
or
dec
xor
fdivrp
jb
shll
push
and
cmp
loope
xchg
shrl
xor
cld
xor
sub
hlt
xchg
cli
rolb
mov
test
inc
es
pop
jne
mov
sub
frstor
je
scas
push
daa
sbb
xor
loope
mov
sbb
sbb
les
aam
orl
jecxz
mov
pusha
pop
mov
add
loope
cwtl
inc
lods
push
je
inc
ret
daa
adc
roll
mov
cld
jmp
out
pop
mov
dec
gs
je
ja
sub
and
es
insb
aad
gs
lret
ja
pop
and
adc
and
adc
or
adc
jmp
ret
test
mov
xor
jp
sar
cwtl
sub
cmpsb
sub
inc
sbb
movsb
adc
je
xor
mov
jne
push
aas
sahf
roll
inc
into
movsl
push
mov
and
roll
in
add
or
fildl
fsubs
or
mov
push
std
cmc
mov
push
sarl
pop
jge
cltd
int
sbb
int
fildl
adc
das
xchg
sub
lock
mov
repnz
xchg
ds
sahf
pop
jbe
repnz
adc
adc
jae
insl
add
fs
sub
add
sub
andb
test
imul
jecxz
mov
and
test
sbb
xchg
inc
out
inc
in
lea
xchg
addr16
and
sarl
cmpsb
fisubs
js
xor
cli
movlhps
pop
int
xchg
sub
sub
mov
int3
xor
icebp
sub
mov
popa
ds
lcall
scas
add
inc
push
cmc
cmp
insb
andl
fstl
out
ds
rorl
cld
push
add
mov
cs
add
hlt
jmp
add
mov
pusha
push
cwtl
icebp
stos
popf
insl
adc
cmpsb
xchg
pop
push
jae
push
andl
pop
sbb
cmp
xor
inc
clc
cli
out
push
fwait
out
inc
push
adc
test
jb
or
cmp
adc
push
cmp
xor
popf
pop
dec
push
vpsrlq
out
xor
lret
mov
ret
int
mov
popf
xlat
fwait
out
inc
push
adc
das
and
inc
fistpll
loop
push
sub
pusha
inc
or
jmp
adc
insb
fiadds
or
jnp
pop
fcmovne
jp
stc
sbb
cltd
mov
mov
aam
fsub
pop
and
shll
jnp
fsts
mov
inc
adc
jne
inc
dec
fs
imul
or
leave
fstpl
push
cmpsl
cmp
cmpsl
les
sbb
ret
xlat
es
and
push
fcmove
jle
call
sarl
and
jbe
add
imul
in
mov
xchg
sahf
ret
push
dec
dec
std
inc
shl
jbe
int
jb
repnz
outsl
inc
and
mov
adc
call
sbb
stc
adc
dec
popf
cmp
outsl
pop
xchg
pop
adc
lret
mov
mov
add
loope
nop
add
push
or
insl
je
mov
adc
jmp
lahf
pop
popa
inc
inc
out
jle
fistl
es
and
mov
mov
mov
pop
cmp
pop
sub
test
sahf
sub
sti
push
and
sahf
mov
pop
imul
cmp
ja
and
or
push
adc
int
arpl
daa
and
mov
mov
shrl
js
push
adc
xchg
inc
test
push
inc
push
add
pop
cmc
xor
xor
adc
mov
add
fisubrs
shrl
cmp
lods
pop
mov
push
add
out
push
mov
or
shlb
jmp
pop
dec
fstpl
int
mov
push
add
les
les
adcb
mov
inc
lret
xor
cmp
pop
xor
leave
mov
clc
push
inc
mov
sbb
negb
testl
lods
xor
imul
xchg
mov
cwtl
ljmp
sbb
sub
pop
add
xchg
jmp
lods
inc
push
into
push
cmp
lds
sub
ret
filds
iret
cmp
lds
sub
sub
pop
and
sbb
add
jb
cli
push
sub
aam
pop
pop
push
mov
ljmp
jne
adc
lock
pop
decl
lret
inc
xor
cmpsl
or
aas
pop
or
or
adc
pop
jl
orl
in
xchg
rclb
and
test
vmovapd
inc
mov
es
jp
mov
repnz
adc
xlat
mov
movsb
fsubs
adc
movsl
pop
mov
adc
loop
mov
adc
rcll
ss
sub
pop
repnz
adc
sbb
mov
and
adc
lods
and
adc
add
adc
lds
jae
loopne
lods
icebp
lahf
fwait
pop
mov
sbb
xchg
or
cmp
in
int
pop
sbb
adc
cmpsl
cmp
pop
insb
push
jg
je
xor
enter
pop
push
and
push
leave
mov
mov
es
fstl
push
xchg
shrl
loop
sbb
iret
inc
aas
jo
or
dec
test
in
push
mov
mov
mov
push
aaa
imul
lods
push
xlat
mov
daa
sahf
adc
adcl
popf
cld
push
push
fidivs
pop
cmpsl
out
cmc
adc
pop
xchg
shl
push
dec
xchg
popf
push
xor
std
add
mov
pop
cmp
std
adc
out
cmp
dec
sbb
mov
notb
jns
lock
jmp
adc
loopne
xchg
add
push
xor
pop
ja
cmp
fcomps
push
dec
or
sahf
push
xchg
push
jmp
shl
pop
pop
shll
lea
bound
mov
stos
and
gs
mov
andl
mov
test
adc
repnz
sub
mov
pop
push
pop
add
out
mov
jg
inc
pop
push
sub
cltd
mov
push
sub
jmp
or
aam
pusha
stos
fiadds
sub
cltd
mov
inc
push
dec
arpl
or
cmp
inc
stos
aaa
loope
jl
fiadds
cld
dec
cltd
xor
jo
div
add
movsb
in
arpl
sub
dec
jl
cmp
inc
aad
pop
mov
and
mov
inc
xor
push
mov
mov
jl
adc
cmpsb
je
lods
jl
adc
loope
mov
xchg
add
les
popf
pop
mov
loopne
push
daa
and
jecxz
out
and
sbb
popf
cmp
push
and
or
lret
ret
push
sahf
addr16
push
xlat
out
rcrb
mov
or
int3
flds
xorl
push
lods
jmp
mov
repnz
and
mov
xchg
pusha
mov
inc
test
jb
add
adc
lds
mov
jae
xor
xchg
fdivr
or
scas
push
cli
rol
inc
lds
inc
out
mov
out
sub
cmpsl
and
adc
dec
cmc
add
lea
movsb
pop
cmp
loope
aam
pop
in
sub
push
sub
roll
aam
mov
cwtl
add
mov
dec
sbb
dec
sbb
adc
in
insb
pop
adcl
or
inc
jl
jbe
mov
dec
int
lods
lahf
mov
lahf
scas
sub
adc
push
adc
loop
mov
add
pop
hlt
clc
xor
pop
cmp
lds
push
bound
aad
lret
pusha
xchg
shrb
pop
stos
inc
test
mov
test
out
or
ret
jbe
aas
dec
mov
mov
push
addr16
mov
pop
ds
fwait
cmovo
xchg
adcl
fsubs
xor
cwtl
inc
push
lods
jl
adc
repnz
jle
xor
or
out
cli
mov
in
xor
lret
rcrb
fistl
jmp
mov
jb
js
call
or
fst
and
js
or
and
in
stc
loope
pop
sub
nop
rcl
mov
mov
aad
sbb
jecxz
out
cmp
cmpl
out
aad
jbe
xchg
loopne
fs
movsb
call
cwtl
sbb
adc
adc
fwait
push
in
jnp
outsb
mov
rorl
xor
ret
cli
inc
cmc
xchg
leave
sub
jae
aas
mov
jl
jl
adc
stos
fildll
sti
lcall
cmp
mov
and
xor
insb
add
jb
push
jae
je
xor
daa
pop
inc
popf
add
flds
mov
and
call
and
fsts
xchg
out
push
mov
jle
cmp
dec
daa
cli
shrl
mov
mov
nop
ret
and
sub
pop
sub
inc
lods
mov
pusha
ficompl
sbb
sar
add
adc
and
cltd
mov
cmp
stc
mov
and
add
cs
test
push
test
push
jo
inc
jbe
cmp
daa
pop
xor
mov
das
insl
fs
leave
sub
pop
xchg
or
add
inc
fistl
mov
sub
int3
jb
add
pusha
and
sbb
addr16
mov
loope
fwait
pop
pop
push
inc
daa
rorb
loope
test
pop
cmp
sub
push
cmpsl
pop
cmp
clc
mov
ss
jnp
adcb
lret
adc
movsl
pusha
lret
sub
mov
xchg
lods
fwait
cmp
pop
add
push
daa
sbb
pop
pop
lods
pop
jb
incl
pop
sbb
jmp
arpl
outsb
and
shlb
call
pop
pop
repnz
adc
fwait
pusha
push
scas
adc
inc
dec
xor
fstpl
mov
loope
fwait
push
cmpsl
scas
les
std
sbb
mov
adc
imul
daa
add
adc
xchg
rolb
mov
lret
std
sub
sahf
pop
repnz
adc
mov
test
or
add
sarl
lret
int
sahf
daa
pop
adc
cmp
ffree
push
cmp
or
adc
scas
xchg
and
mov
pop
repnz
adc
les
or
sbb
pop
mov
mov
out
and
sub
and
add
cmpsl
add
pop
and
test
test
aaa
in
fwait
aaa
popf
xchg
mov
xor
xor
iret
fwait
pusha
bound
xor
scas
lcall
adc
into
xor
sub
jmp
pusha
add
imul
cmp
icebp
mov
push
and
dec
fisubl
das
sahf
cwtl
pusha
dec
shll
fmull
and
movsl
roll
or
and
mov
or
cmp
leave
add
pop
adc
push
mov
gs
adc
cmp
or
js
xchg
ljmp
js
cmpsl
add
movsl
jmp
test
insl
shrl
cmpsb
out
lea
out
lahf
xchg
sub
mov
pop
mov
sbb
jbe
sub
or
stos
sahf
mov
sub
xchg
cltd
jnp
mov
cld
inc
and
lcall
jp
aad
ss
stc
adc
leave
xor
cmp
inc
orb
notb
jo
dec
mulb
fistpll
clc
sbb
imul
clc
movsb
es
out
jmp
xlat
out
cmpsb
movsl
dec
and
inc
push
inc
xchg
adc
lcall
sbb
frstor
stc
js
pop
mov
stos
xor
xchg
fcomp
cmpsb
xchg
cmp
add
in
or
push
ja
add
or
sbb
and
test
xchg
mov
adc
sbb
or
xor
test
mov
cmp
aas
btc
in
or
inc
lret
out
push
xchg
in
lret
out
push
pop
or
stc
push
imul
mov
fimull
push
jbe
adc
mov
orb
add
scas
or
ja
mov
test
decb
inc
cmp
add
push
fimuls
inc
xor
test
outsb
shrl
popa
ljmp
pop
loop
out
inc
out
push
jle
and
rcl
shlb
or
cmc
mov
out
fnsave
mov
jmp
mov
cmpsb
popa
add
pop
mov
and
push
int3
dec
call
test
pop
ss
mov
push
ret
sub
add
jg
orl
adc
int
arpl
daa
inc
xor
bound
inc
xor
mov
jl
adc
inc
cmpsb
dec
in
cmpl
add
sub
mov
or
sub
adc
loop
inc
out
cmp
cmp
xor
mov
ret
and
sub
push
push
fcomps
stos
sub
cmp
adc
ds
adc
cmp
repnz
enter
lds
bound
orl
psubusb
jbe
shlb
push
sbb
pop
cmp
ret
push
pop
xchg
lds
cltd
popa
push
test
push
sub
adc
push
inc
dec
out
scas
mov
outsl
mov
stos
ja
fadds
adc
into
stos
lods
loopne
and
adc
popf
cmp
pop
and
pop
in
mov
stos
mov
rcrb
test
dec
lea
jno
popf
cmp
out
roll
les
or
adc
inc
cmc
ret
push
lods
xor
adc
je
rorl
dec
mov
fadds
adc
sbb
stos
push
frstor
add
leave
lcall
mov
cmp
xor
xlat
jle
loope
sbb
push
stos
push
gs
xlat
and
in
mov
mov
lds
fsubr
aad
stos
cmp
aam
jp
aad
xchg
sub
pop
inc
push
dec
test
sub
adc
int3
loop
push
das
mov
in
mov
sub
xchg
dec
movsb
mov
sarb
iret
or
aad
insb
push
adc
push
adc
inc
inc
sbb
push
fwait
push
cmpsl
dec
popf
dec
into
sbb
xchg
fucom
lods
cmp
lods
pop
mov
pop
push
jp
inc
mov
adc
sbb
and
arpl
ret
mov
mov
dec
xor
faddl
shlb
push
push
jns
xor
movsl
xor
ljmp
pop
aas
add
dec
adc
je
xor
pop
push
and
xor
mov
les
loop
das
fistpl
inc
repz
cmp
dec
movsl
inc
stos
inc
jmp
sbb
outsl
enter
xchg
gs
jecxz
or
bound
xor
mov
mov
pop
fldl
daa
adc
repnz
imul
stos
loopne
mov
and
sub
test
insl
push
subb
cmp
cli
mov
lcall
mov
stc
xor
xor
mov
ret
les
push
popf
xchg
inc
shlb
daa
shlb
or
push
cmp
fs
cmovs
lcall
rclb
hlt
iret
pop
push
sub
shrb
leave
pop
and
adc
ret
fmul
rorb
sarl
pop
stos
mov
stos
and
insb
mov
popf
adc
aas
sbb
in
inc
inc
imul
out
jns
test
fcomp
nop
movsl
lret
insl
scas
fs
data16
xchg
aam
xor
lea
arpl
inc
fdivrl
pop
add
repz
jg
je
and
jno
inc
out
and
movl
andl
cli
ja
das
mov
sub
push
adc
xchg
push
cmp
ds
std
lea
ret
loopne
pop
and
loop
pop
mov
fxtract
mov
imul
xabort
test
mov
mov
int
cld
test
daa
mov
jmp
ror
outsb
std
repz
mov
paddw
hlt
scas
push
daa
sbb
jnp
scas
shl
jb
inc
jmp
sbbl
stos
aad
dec
mov
adcb
jg
rorl
bound
fs
cmp
push
jns
jno
cmp
scas
pop
pop
gs
pop
xor
test
dec
ret
addr16
int
pop
cmp
rolb
sub
repz
inc
scas
xchg
loopne
and
das
pushf
mov
aaa
mov
fwait
add
jg
fmul
sbb
add
cmpsl
inc
push
dec
cltd
xor
jnp
pop
lods
sahf
icebp
daa
les
pop
movsl
sbb
stos
dec
or
sbb
repnz
or
pop
mov
xchg
push
push
fmull
pop
jecxz
ja
mov
ret
test
xor
mov
pop
xchg
sub
sub
adc
iret
fbld
push
imull
adc
sub
adc
cwtl
pop
mov
sub
in
and
mov
daa
sub
adc
mov
je
adc
cmp
cmpsl
mov
ljmp
sbb
pop
imul
call
lret
adc
pop
call
mov
sub
dec
and
int
and
test
into
push
jbe
push
daa
sbb
pop
pop
in
jo
das
sub
jns
add
faddp
jge
pusha
push
out
test
into
mov
out
sub
shlb
sbb
cmpsl
pop
out
mov
out
jno
mov
out
mov
inc
pushf
mov
xor
fisttpll
les
outsb
int
addl
in
cmp
in
js
sub
mov
stos
sub
xor
punpckhwd
in
push
inc
andb
mov
outsl
aad
shl
push
mov
lods
pusha
out
push
and
movsl
shll
sub
data16
mov
mov
jbe
outsl
mov
mov
cmp
cmp
mov
mov
je
jno
fwait
sub
adc
inc
dec
and
mov
cmp
push
cmp
dec
int
mov
mov
arpl
scas
and
shr
mov
popa
cli
push
dec
pusha
icebp
popa
xchg
test
test
mov
xchg
mov
leave
mov
shll
inc
inc
fstl
cmp
sbb
nop
cli
and
sbb
cld
fisubrs
bound
repz
imul
mov
add
insb
es
mov
cs
push
add
repnz
mov
out
dec
xor
movsl
pop
xchg
xor
mov
out
sbb
jl
jb
fdivrp
std
cltd
jb
pop
or
aad
adc
pop
inc
sti
jae
jmp
pusha
cmp
in
lret
lock
push
ss
enter
fidivl
enter
push
mov
rclb
popf
push
jge
imul
mov
stos
push
ss
xchg
mov
test
cmp
add
xlat
mov
rcrb
xchg
sbb
lret
mov
fyl2xp1
hlt
xor
out
int3
cmpl
insl
add
inc
flds
xchg
mov
or
ret
dec
aaa
fisubs
shrb
cs
hlt
cmp
adc
jne
pop
das
mov
ljmp
dec
pop
movsl
adcb
mov
loopne
add
in
sbb
cmp
push
inc
inc
fdivs
cmp
dec
loop
push
daa
into
popa
test
stc
cmpsb
mov
sub
adc
int
mov
lds
mov
pop
jp
jb
aas
lea
mov
movsl
mov
add
cmp
inc
rorb
cmp
pop
cwtl
cmp
in
inc
fstl
pop
stos
push
lods
pop
jp
cwtl
adc
cmp
xchg
mov
xchg
push
push
mov
iret
ja
xor
enter
mov
sbb
outsb
sub
xor
push
loope
std
and
mov
or
enter
shll
outsb
fbstp
sub
cmp
iret
mov
dec
popf
mov
jmp
enter
stos
dec
repz
in
inc
imul
sbb
add
adc
xor
shll
push
lods
mov
xorl
mov
jae
sarl
sbb
adc
leave
test
imull
push
imul
int3
cltd
mul
scas
test
pop
scas
lds
jo
adc
sbb
clc
sarb
aad
lret
bound
pop
ret
jmp
les
cmp
or
push
cmpsb
movl
mov
pop
je
cmpsl
sahf
out
mov
xor
sbb
push
scas
testl
inc
lahf
add
ljmp
shrb
test
push
xor
push
lods
mov
test
gs
mov
scas
push
shrl
fidivrs
pop
stos
add
mov
in
nop
xchg
arpl
pop
pop
mov
scas
cmp
sub
loope
nop
add
push
dec
adc
push
adc
inc
cmp
mov
cwtl
cmp
fstpt
out
into
add
pop
mov
mov
pop
mov
mov
xor
iret
jbe
negb
inc
pop
out
or
icebp
mov
jge
sub
xor
popf
mov
popf
bound
xchg
fprem
or
orl
frstor
sbb
adc
add
mov
sub
adc
out
mov
enter
test
pushf
adc
dec
mull
loope
sub
or
xchg
test
pop
cmp
faddl
rol
dec
sahf
cmp
imul
test
shrl
es
lods
mov
xchg
lret
add
pusha
lcall
pop
pop
push
mov
outsl
push
in
in
xchg
lock
pop
and
mov
mov
mov
ds
cmp
repnz
test
out
lea
ja
dec
setp
jbe
icebp
shlb
cmc
mov
mov
daa
in
mov
xor
mov
mov
mov
adc
ret
push
es
inc
mov
mov
fs
xlat
jecxz
push
adc
lret
lea
sub
jle
adc
das
sub
insl
add
aad
mov
pop
push
jno
leave
dec
and
pop
ret
shrl
pop
sti
arpl
repz
lahf
and
and
ss
mov
loop
mov
fwait
ljmp
dec
nop
pushf
enter
pushf
test
cli
stc
adc
jo
mov
lcall
jbe
in
push
jge
push
and
inc
pop
hlt
add
sub
adc
mov
sbb
mov
inc
jne
ljmp
adc
lea
call
or
pop
mov
jp
xchg
bnd
add
fwait
cmp
outsb
sti
mov
in
ss
popf
into
pop
es
sub
xor
mov
xor
inc
int3
addr16
or
mov
push
and
fadds
adc
leave
imul
pop
adc
les
popf
cmp
pop
sub
insl
mov
cmpsb
das
dec
insb
inc
outsl
pop
push
mov
out
cmpb
sahf
dec
popf
cmp
call
jge
jge
adc
adc
mov
and
sub
idivb
rol
mov
pushf
pop
in
pop
adc
mov
mov
inc
ljmp
mov
inc
push
inc
loope
xchg
hlt
or
sarb
mov
xor
ljmp
out
push
dec
jp
sbb
push
fidivl
add
pusha
loopne
std
cmpsl
les
sub
clc
mov
inc
bound
ja
lret
sti
sub
adc
loopne
mov
outsl
jmp
movsb
cmpsb
push
lret
xchg
sub
adc
push
sub
mov
pop
ficomps
adc
movsb
pop
popa
fwait
jb
lods
add
movsb
fwait
dec
adc
mov
repnz
adc
cs
cmc
ljmp
inc
mov
cld
cmpsl
lds
add
les
dec
popf
cmp
shlb
jnp
fiadds
cmp
data16
cmp
pop
loope
pop
cmp
cmpsl
sbb
adc
ret
push
lods
ficompl
sahf
int3
loopne
and
fstpl
sub
dec
leave
stos
pop
clc
ljmp
dec
imul
sbb
popf
fs
mov
sub
cmc
fidivrs
push
inc
adc
cmpsb
dec
aas
inc
xlat
shl
cs
imul
sbb
mov
push
dec
xchg
lahf
jnp
and
test
out
xor
shrl
cld
or
aas
adc
aad
mov
add
out
jns
std
and
dec
or
lods
pop
pop
inc
dec
into
cli
cmpsl
push
cmp
rorb
adc
popf
scas
push
inc
and
push
je
adc
int
pop
cmp
rcr
push
stos
xchg
popf
jbe
inc
cmp
cmpsl
dec
in
addr16
out
jno
and
lods
out
call
dec
xchg
push
sub
or
sub
adc
loop
test
jns
cmp
lahf
aad
pop
lock
mov
cmp
xchg
call
aas
adcb
clc
jge
lea
pop
imul
fisttpl
inc
xchg
ficoms
and
in
movsl
push
sbb
jae
cmp
mov
fidivs
dec
cmpsl
and
aas
or
inc
movsb
stos
mov
cmpsb
dec
dec
icebp
xchg
and
pop
cmpsb
inc
adc
test
sbb
arpl
loope
addb
test
xchg
inc
mov
pop
inc
movsb
xchg
push
mov
imul
cmc
inc
jne
adc
pop
xchg
insl
jne
pop
out
sbb
add
cmc
jmp
stc
lret
cwtl
adc
pop
ficomps
cmpsb
push
je
mov
in
or
sbb
in
dec
sub
adc
mov
or
mov
rclb
lds
je
push
aad
xor
and
shrl
andl
mov
icebp
movsl
sti
cmc
rorl
gs
jp
inc
cltd
and
add
fsubr
in
mov
out
arpl
jbe
mov
loop
sbb
fldcw
sbbb
loop
scas
lret
iret
incl
hlt
ret
sbb
mov
dec
pushf
nopl
shlb
push
jns
out
cli
out
cli
jmp
dec
push
fnstcw
add
in
sub
sub
and
lea
pop
imul
push
in
leave
shlb
ljmp
outsl
mov
lret
loope
out
jmp
push
mov
les
or
jb
rolb
xor
cmp
pop
adc
mov
cmp
inc
push
pushf
adc
cmc
xchg
movsb
pop
out
and
lret
das
cmp
sbb
loop
popf
cmp
push
sub
jb
push
cmp
jmp
mov
xor
cmpsl
xor
sbb
in
jae
push
adc
fs
xor
lock
cmpsl
and
push
test
jne
or
pop
loope
mov
mov
push
rorl
lods
jmp
inc
test
inc
jl
out
inc
cld
sarb
js
xchg
in
or
aas
cmp
sub
lds
mov
or
aad
clc
fndisi(8087
lea
xchg
xor
ja
cmp
lret
in
and
or
inc
sbb
xchg
aam
push
pop
jge
mov
ljmp
lods
sqrtps
lcall
into
cmpsl
fwait
repz
je
imul
mov
repz
cmpsb
inc
pop
adcb
lods
pop
mov
cmp
inc
jmp
mov
dec
add
mov
xlat
stc
xorl
sub
jns
imul
es
mov
mov
and
xchg
aam
push
jmp
jmp
inc
cmp
sbb
and
push
sub
hlt
mov
lds
stos
mov
and
pusha
shl
scas
inc
lds
mov
popa
xchg
pop
push
les
andl
pop
cmp
sbb
loope
cmp
arpl
ljmp
stos
outsb
pushf
daa
push
stos
push
lods
sar
xchg
xchg
jb
rcl
xchg
jae
fst
jmp
inc
gs
imul
mov
es
out
mov
mov
pushf
mov
cwtl
and
jecxz
push
push
mov
cmpsl
lret
jecxz
movsb
imul
sahf
xchg
lahf
popf
bound
pop
sub
push
sub
adc
insb
cwtl
xor
cmp
or
fs
sar
daa
sub
fadds
adc
in
fadds
adc
test
iret
add
rcl
sub
mov
iret
das
rcrl
cmp
int3
out
mov
mov
push
test
push
adc
andb
or
push
adc
cwtl
push
lods
in
loope
call
fimull
stos
mov
inc
clc
and
movsb
xlat
inc
dec
xor
dec
cmp
push
bound
jmp
and
xor
jae
push
sbb
push
and
dec
jecxz
scas
sbb
xlat
sub
lods
inc
lahf
adc
pop
inc
in
sub
in
or
in
lea
mov
rcll
arpl
nop
sub
adc
jb
mov
mov
xchg
inc
xchg
mov
mov
sub
adc
push
out
icebp
lret
mov
push
adc
xor
jg
adc
adc
std
lods
or
xchg
cmpl
mov
mov
lods
xor
ffree
das
stos
jnp
outsb
pop
repz
cld
shl
xorb
xchg
cmp
or
shlb
pop
jne
mov
cltd
insl
mov
mov
fbld
push
adc
jg
jmp
aas
fdivs
loop
inc
bound
cld
repnz
adc
lret
mov
adc
cli
rolb
mov
test
dec
adc
arpl
mov
clc
mov
out
pop
cmc
xchg
adc
sub
adc
into
shrb
inc
cmpsl
test
gs
and
je
int
inc
in
loop
mov
xor
and
cmc
data16
mov
int
icebp
addr16
ljmp
movsl
sbb
inc
jbe
pop
jge
adc
mov
int
icebp
addr16
ljmp
movsl
sbb
inc
jbe
push
jge
adc
mov
sbb
addr16
ljmp
cmpsl
pop
cmp
into
sbb
or
push
scas
fsubrl
jae
mov
sarl
xchg
jae
les
pop
int
cmpsb
cmc
ljmp
popf
iret
leave
lcall
outsb
xchg
arpl
xor
inc
leave
lea
repnz
xchg
lds
lea
les
rcrl
cmp
sbb
push
inc
push
cmpsb
dec
in
mov
or
addr16
cld
push
in
in
and
fsubrp
pop
gs
mov
cwtl
adc
cmp
fisttpll
int
jae
pop
pop
mov
ja
stos
pop
ret
xlat
cs
adc
sub
adc
xchg
imul
fwait
inc
cmpsl
test
push
shll
xchg
int
pushf
jge
adc
mov
jl
adc
xchg
push
lahf
hlt
xchg
les
jmp
dec
inc
push
adc
push
adc
pop
cmp
leave
gs
arpl
bound
popf
popa
lods
cmp
test
adc
adc
sub
adc
enter
pop
lods
fs
adc
sbb
pop
out
jp
jo
push
adc
sub
push
sub
mov
pop
adc
cmpl
loop
adcb
cli
push
cmp
jmp
lods
sub
fistpl
pop
aam
pop
aaa
mov
cmp
hlt
adc
pop
ljmp
jmp
jb
into
pop
or
and
mov
leavew
jmp
mov
mov
and
pop
ljmp
xchg
pop
inc
pop
rcrb
and
cwtl
stos
pop
mov
sbb
mov
cmpsl
xchg
add
or
push
push
rorl
cmp
in
loopne
push
push
ss
sbb
mov
and
dec
sub
shll
pop
inc
or
sarl
movsb
ret
int3
xchg
rcrb
mov
cwtl
aaa
pop
add
adc
mov
fnstcw
or
flds
sub
mov
js
jb
mov
cmp
add
ja
je
mov
stc
mov
xchg
push
in
push
adc
int
jb
push
aad
jae
pop
add
lock
mov
push
jo
ljmp
movq
loop
cmp
int3
lcall
jo
ds
in
lcall
in
insb
in
add
xlat
bound
mov
fdiv
int
ja
cmp
and
dec
cmp
cmp
enter
outsl
fucomip
addr16
push
adc
pop
adc
cli
dec
xchg
fwait
scas
add
cmp
ds
popa
xor
int
in
sbb
mov
imulb
std
nop
addr16
jno
cwtl
push
std
pop
ljmp
je
adc
fsubs
push
or
push
mov
jge
push
jmp
aad
in
adc
outsl
icebp
dec
andb
push
sub
inc
xor
dec
dec
out
ds
pop
adc
mov
fmulp
sbb
inc
adc
adc
pop
cmp
inc
lods
pop
mov
pop
and
shll
adc
sub
fs
jge
lret
and
sub
jg
or
pop
adc
imull
push
lret
dec
out
push
sub
xchg
sub
je
cmp
push
adc
cmc
pusha
cmp
shlb
add
loop
cmp
dec
popf
add
mov
xchg
add
cmc
inc
jl
cld
test
xor
fistpl
push
cmpsl
mov
cmp
push
adc
mov
adc
push
adc
je
pop
adc
movsb
faddl
adc
add
xchg
xchg
push
dec
mov
bound
cltd
mov
shlb
fdivrs
loop
xchg
ja
mov
pop
adc
aas
cld
jae
adc
out
dec
push
cli
xchg
sub
mov
dec
enter
movsb
faddl
adc
arpl
dec
jecxz
imul
imul
mov
jecxz
std
ds
mov
ljmpw
xchg
fadds
nop
jge
adc
js
jge
adc
lahf
leave
fs
jae
adc
es
stos
mov
sub
dec
popa
les
cmc
ljmp
pop
sti
jg
xor
mov
lds
cmpsb
ja,pt
jno
jp
and
push
adc
add
jp
adc
mov
mov
je
adc
jp
adc
loop
cli
stos
push
and
jnp
adc
mov
mov
je
mov
pop
adc
xor
jg
lds
adc
push
adc
lds
adc
pop
push
jnp
adc
mov
jmp
les
std
ljmp
mov
inc
pop
icebp
xchg
sub
pop
mov
pushf
lods
out
inc
dec
out
fidivrs
push
clc
cmp
cmpsb
cmpsb
or
push
adc
test
xor
movsl
lods
cmp
xor
adc
dec
cwtl
mov
sub
inc
pushf
cmp
fcomip
mov
inc
dec
pop
and
jmp
jno
adc
sub
les
adc
imull
mov
mov
scas
push
fdivl
dec
pop
mov
vmread
adc
les
adc
inc
pop
stc
out
fs
jae
adc
int
push
mov
stos
push
or
outsl
xorl
fwait
jge
push
aaa
movsb
faddl
adc
roll
lea
push
outsl
xorb
jge
push
fcoml
cmp
arpl
lret
int3
add
rcll
jno
ss
push
adc
push
push
into
cmc
and
adc
sub
lods
stos
lcall
jae
out
nop
sbb
adc
mov
cmpsl
rolb
jnp
bound
shlb
insw
into
lods
jl
scas
jp
mov
mov
enter
dec
rcrb
jae
adc
sbb
dec
adc
popf
and
popa
sbbl
xchg
in
scas
or
pop
int
add
adc
mov
fstl
lret
push
test
rcr
adc
add
adc
add
sub
arpl
into
pusha
test
sahf
inc
and
fwait
mov
pop
adc
stc
push
test
rcrb
jns
faddl
adc
push
adc
movsb
imul
flds
pop
cli
mov
in
jae
adc
mov
mov
int3
sbb
jo
rorw
movsb
lcall
mov
mov
out
xor
or
scas
icebp
fs
int
and
je
adc
add
cwtl
out
cmp
sti
popf
movsb
ljmp
push
scas
pop
loopne
fdivr
pop
adc
dec
push
mov
rorl
push
adc
lret
insb
ss
arpl
test
sbb
lds
fwait
test
fdivrs
adc
or
pop
adc
xchg
dec
cltd
xor
mov
or
stc
pop
adc
out
ficoms
jo
adc
dec
cltd
fcoms
push
adc
adc
cmpsl
aad
leave
mov
and
inc
in
mov
jp
fwait
test
jl
pop
cmp
mov
addb
daa
ljmp
popa
inc
push
fstpl
mov
add
sub
mull
into
sbb
test
sbb
stos
or
fwait
mov
jne
sub
adc
data16
pop
cwtl
mov
enter
lret
lock
outsl
movsl
fisttps
pop
movsb
jge
adc
sub
adc
int
insb
jl
adc
int
and
or
imul
jl
adc
nop
test
loope
mov
fwait
bound
daa
cmp
sub
aad
and
sbb
outsl
shlb
adc
dec
dec
sarl
orb
mov
pop
adc
mov
flds
push
rcl
divl
loopne
jge
adc
push
sti
mov
data16
mov
cld
aad
xchg
arpl
pop
mov
dec
int
jno
lock
and
adc
int
jecxz
lods
pop
cmp
cmp
push
and
jne
fwait
clc
enter
fsubr
dec
stos
fucomp
jge
in
cltd
mov
sahf
mov
dec
ret
pop
pop
pop
ja
out
leave
out
dec
icebp
push
shrl
jbe
add
jmp
push
adc
dec
xchg
std
daa
sahf
mov
test
pop
add
and
push
mov
mov
lret
imul
pop
les
in
xor
dec
int3
mov
push
inc
push
pop
adc
scas
scas
pusha
out
mov
pop
cmp
lret
push
sub
sub
adc
aad
insl
push
lock
jnp
pop
ljmp
sub
ljmp
lods
cs
xchg
mov
arpl
shl
mov
data16
dec
mov
imul
lds
clc
pushf
jns
jo
mov
xor
cld
outsl
hlt
cld
jl
lds
cmc
or
mov
stos
xchg
faddl
dec
mov
das
or
cli
icebp
orl
es
and
movsb
push
divl
jle
jmp
sbb
arpl
ja
popf
push
push
out
sub
js
sarb
jmp
mov
psubq
lods
rep
mov
mov
xor
test
or
dec
push
sub
aad
add
adc
mov
push
fistl
mov
aam
or
data16
push
or
xchg
lods
sub
scas
dec
add
adc
ljmp
outsl
enter
dec
jmp
testb
push
pop
sub
aaa
adc
mov
lret
pop
stc
enter
out
movb
inc
fnstsw
ljmp
push
lods
sarl
popa
stos
pop
lcall
cli
inc
mov
xor
mov
into
cs
mov
stos
pop
movsl
std
invd
push
cmp
and
subl
sub
pop
test
add
ficompl
mov
cmp
inc
shrl
sahf
inc
xor
inc
sbbl
add
sub
sbbb
push
ficoml
pop
flds
pop
call
ja
push
mov
jg
mov
shl
scas
cmpsl
lcall
and
arpl
fwait
cmpsl
dec
jmp
test
outsb
pushf
daa
push
stos
push
lods
sar
xchg
xchg
jb
not
lods
xchg
jb
dec
addr16
rorb
cltd
pushf
inc
jbe
clc
sbb
andb
outsl
das
pushf
mov
pop
sbb
out
pop
popf
add
mov
xlat
leave
sbb
daa
roll
cmp
sarb
sbb
mov
cwtl
bound
into
test
iret
pop
jge
pop
in
fs
mov
out
and
daa
and
jmp
fsubs
stos
pop
mov
mov
add
cwtl
adc
cmp
fsts
arpl
ljmp
sbb
addb
mov
pop
adc
mov
flds
push
rcl
divl
loopne
jge
adc
push
sti
mov
lcall
aad
xchg
arpl
xchg
dec
int
jno
lock
and
adc
int
subl
cmpsl
cmp
cmp
push
and
jne
fwait
clc
push
call
mov
mov
adc
cmp
rcr
jmp
cmp
cmp
inc
mov
push
adc
notb
ds
movsb
dec
popf
inc
dec
push
jl
hlt
xchg
pusha
jp
inc
test
outsl
loope
test
mov
push
sub
ljmp
push
sub
inc
cmp
mov
jp
rcrl
mov
ret
lock
cmp
rcr
out
push
bound
jmp
ljmp
adc
lods
cmp
mov
add
sarb
lods
or
and
lret
cli
cmpsl
les
sbb
sub
in
fistpll
mov
cmp
scas
outsb
xlat
fs
lods
arpl
xor
mov
inc
jg
fldl
pop
xor
orb
negl
pop
mov
iret
push
push
aaa
xor
push
cmp
ror
adc
and
dec
out
lea
sbb
add
sbb
bound
std
ror
adc
push
adc
pusha
das
lea
lea
lret
cmp
pop
push
jb
mov
push
dec
cmp
test
cmp
jge
adc
sarb
adc
inc
mov
mov
inc
mov
mov
jg
dec
push
sub
mov
mov
mov
push
jns
adc
jge
adc
or
pop
xchg
push
cld
push
leave
mov
popl
hlt
pop
test
mov
sbb
in
sbb
xchg
xorps
fnstsw
pop
jns
inc
pusha
into
dec
sbb
and
adc
imul
and
mov
sub
mov
or
push
and
or
cwtl
adcl
mov
jae
cmp
test
fsts
pop
add
int3
in
xlat
jae
jnp
sbb
xor
cmp
sbb
cli
cmpsl
push
mov
in
cs
xor
daa
xor
cld
lods
ljmp
push
mov
pop
nop
add
adc
out
jne
pop
lock
and
es
mov
or
push
aad
ds
aaa
int3
sbb
push
dec
adc
cmpsl
sub
xor
sub
negl
fcmovnb
mov
test
xor
mov
dec
xor
loope
mov
sbb
fs
mov
adc
push
cmpsb
cmp
in
adc
push
std
push
dec
pusha
mov
sub
sub
loope
cmp
lret
ja
ret
push
lods
fcmove
mov
adc
sub
imul
adc
or
stos
insl
aam
sub
int
dec
mov
adc
push
push
nop
fmuls
and
cmc
pusha
sbb
out
pushl
lret
cmp
adc
jne
inc
dec
jp
mov
sbb
cltd
xor
inc
adc
lds
popf
mov
inc
jb
cld
cmpsl
adc
outsl
pop
sub
add
xchg
mov
jmp
mov
fwait
shrl
xchg
add
mov
std
gs
dec
pop
loope
out
aam
push
sub
int3
mov
add
xor
mov
mov
and
and
popf
add
lret
lret
fisubs
loope
mov
sbb
je
mov
mov
mov
lods
add
mov
pop
shll
call
daa
sbb
imul
bound
and
test
testb
fucom
xchg
pushf
sar
dec
dec
into
xor
mov
leave
iret
adc
outsl
gs
rclb
scas
mov
loope
pop
inc
out
mov
repz
dec
adc
inc
push
repnz
and
pop
mov
lcall
jmp
shl
rorb
add
pop
xor
and
and
gs
pop
mov
loope
aas
push
pop
jo
daa
aam
push
xchg
leave
rcrb
outsl
loope
xchg
es
sub
fisttpll
push
cmpsl
cmp
jne
push
cwtl
sbb
hlt
add
test
fsubp
inc
daa
sub
jecxz
adc
pop
jmp
decb
mov
arpl
fisttps
in
sub
fcmovnbe
dec
jo
loope
mov
xor
mov
lds
fldl2e
orb
in
pop
sub
gs
cltd
leave
sbb
ljmp
adc
push
push
stos
adc
pop
in
pop
pop
inc
mov
ret
pop
inc
dec
pop
ljmp
mov
cmp
and
mov
sub
xor
stos
in
push
ret
adc
jl
push
push
mov
icebp
in
sbb
jge
clc
mov
fcoml
xchg
and
js
gs
xchg
sub
mov
cmpb
negb
mov
into
mov
cwtl
mov
mov
mov
and
mov
popa
scas
sarb
pop
pushf
rep
lret
mov
fisttpll
and
adc
movsl
test
cmpsl
ret
mov
out
and
lret
imul
enter
mov
push
adc
xor
jge
adc
add
push
fistl
lock
push
mov
fs
dec
cmp
leave
in
and
cmc
jge
out
icebp
int3
push
paddsw
pop
bound
push
paddq
jmp
xchg
adc
test
adc
pop
push
adc
mov
mov
sbb
jae
mov
sahf
xchg
or
jge
mov
inc
std
or
push
negl
cwtl
inc
jge
jl
cmp
roll
clc
movsb
mov
jp
bnd
dec
pushf
sbb
in
nop
and
sub
adc
xchg
lds
push
cmp
inc
or
stos
pcmpeqw
mov
scas
push
gs
fdivrp
roll
fwait
lahf
sub
xchg
jmp
adc
cmpsl
and
in
imul
mov
stos
add
pop
hlt
outsb
scas
mov
mov
sbb
push
fnsave
xchg
adc
push
push
dec
out
mov
mov
mov
mov
sahf
cmp
fnstenv
pop
hlt
outsb
movb
mov
cld
rorb
or
xchg
cmpsb
jbe
popa
lret
sti
mov
stos
cmp
push
dec
pop
int3
add
leave
push
sub
ljmp
jno
int
mov
mov
lds
lock
dec
std
add
iret
stc
cmc
ljmp
cmp
xor
lea
lods
pop
into
push
int
pop
pop
jmp
in
mov
ror
sahf
inc
aam
mov
mov
int3
lcall
out
add
mov
sub
pop
sub
mov
int
and
jge
adc
xor
push
dec
push
and
aas
mov
xchg
jno
lods
xchg
mov
xchg
pop
inc
insl
outsl
fdivrs
adc
mov
das
sarb
adc
icebp
sub
sbb
neg
pushf
mov
out
or
push
adc
leave
jb
mov
fnstenv
sarb
cmp
pushl
inc
clc
sbb
insb
adcb
lret
fs
mov
loop
xor
xor
cmp
loop
shrl
jecxz
mov
orl
je
test
hlt
ljmp
adc
and
adc
adcb
push
cmpsl
pop
test
jmp
addl
scas
push
gs
scas
cbtw
adc
call
enter
shrl
popf
fs
in
lock
adc
fstpl
dec
leave
lcall
pop
fnsave
cmpsl
les
std
sbb
cld
cmp
dec
in
mov
mov
lock
dec
aad
jp,pn
sub
and
xchg
leave
sbb
mov
cmp
sub
insb
cmpsb
jl
nop
call
add
and
nop
insl
in
icebp
pushf
mov
push
adc
dec
mov
mov
rol
stos
pop
and
xchg
mov
in
xor
inc
dec
loopne
lahf
popf
adc
aas
cltd
movsb
cli
insl
subl
mov
mov
sbb
stc
jnp
and
lcall
add
pushf
fldl
xchg
mov
mov
cmp
mov
add
rcl
add
jo
loop
shufps
arpl
scas
xor
dec
or
adc
ss
mov
out
mov
add
xchg
out
jp
pop
pop
cs
cmovp
push
rol
mov
and
arpl
jnp
outsl
lea
mov
add
jo
rclb
stos
lret
stos
in
and
pop
outsl
nop
loop
inc
insl
xor
dec
cmp
fs
inc
in
jmp
sub
add
jle
adc
and
in
xchg
fists
push
jle
ficoms
insl
push
std
stos
add
hlt
pop
or
ss
jns
lods
or
push
lret
jno
mov
es
jno
add
mov
mov
cmp
int
lods
shlb
je
pop
and
cmpsb
inc
scas
mov
mov
inc
inc
push
sub
sbb
into
dec
insb
test
push
std
and
out
add
enter
add
xchg
ljmp
rcll
cli
inc
jns
cmp
scas
pop
xor
fwait
inc
shl
outsb
xchg
add
cltd
push
popa
movl
aam
mov
xor
inc
mov
lahf
imul
sub
jp
sbb
push
cmpsb
jbe
fdivrl
pop
lods
jo
push
mov
jae
jb
mov
pop
sub
outsl
jle
sub
mov
sbb
adc
lahf
and
rcr
jecxz
test
movb
mov
imul
ljmp
sahf
das
sbbb
outsl
test
dec
imul
xchg
les
dec
std
sub
imull
dec
xchg
jmp
scas
fisubrl
std
lods
frstor
dec
mov
gs
mov
rolb
and
jo
add
mov
movsl
bound
push
xchg
or
jae
pop
pop
popa
vpaddsb
mov
cwtl
cmpsl
into
pop
or
sub
dec
xor
mov
and
addb
push
stos
fisubrs
int
in
loopne
test
loop
mov
inc
lock
or
xor
jge
and
int
gs
mov
sub
cmp
or
xor
inc
jg
sbb
dec
add
fcomps
mov
adc
cmp
cmp
xchg
adc
in
pop
and
lcall
aas
int
fiadds
xchg
mov
xor
sti
add
int
jae
push
push
ficompl
or
inc
stos
mov
subl
stos
sub
mov
cmp
int
imul
pop
int3
pusha
adc
es
pop
push
sub
xor
das
pushf
lods
out
leave
mov
cmc
sub
call
leave
jle
int
scas
and
push
pop
aad
mov
fwait
inc
leave
dec
inc
xchg
int
inc
enter
jmp
mov
shll
fwait
pop
call
mov
cmpsb
and
out
add
sub
sub
mov
dec
lcall
xchg
mov
mov
xchg
je
mov
jl
adc
push
mov
lret
pop
lock
fwait
cld
cmpsb
fcoms
xchg
les
push
imull
dec
push
xlat
into
fcompl
movsl
pop
push
js
sbb
xor
adc
sub
xchg
ss
and
andl
cmp
xchg
jnp
pop
push
lret
in
jo
mov
gs
arpl
mov
sub
xchg
add
pop
lods
or
out
mov
xor
pop
cmc
jo
push
mov
mov
movaps
int3
les
mov
in
cmp
inc
leave
pop
cmpsl
sahf
jecxz
adc
cwtl
push
stos
cs
aas
lods
push
cmp
ret
mov
cltd
sbb
and
std
frstor
outsw
mov
pop
imul
iret
mov
popa
fcmovbe
daa
pop
sub
test
stc
bound
xor
pop
ss
push
sbb
icebp
cld
shrb
fwait
inc
cmp
das
sub
and
push
test
push
paddq
enter
cmp
ja
or
in
and
fsubs
add
js
xor
sub
adc
mov
sbb
inc
pop
aas
test
jecxz
roll
add
or
loopne
adc
es
stos
push
out
cltd
and
mov
arpl
or
inc
out
cmp
fisttpl
nop
pop
and
popa
xchg
xchg
lods
push
divb
lods
mov
fidivrs
lcall
into
bound
dec
popf
dec
sub
punpcklbw
lahf
mov
stos
and
and
das
cmp
push
cmpsl
sbb
fidivs
lea
and
push
test
orb
xchg
xchg
pop
in
pop
je
cmpsl
adc
push
dec
insl
cli
aad
sub
daa
daa
lret
pop
shl
inc
dec
bound
sar
push
mov
pusha
shrl
cmp
cs
insl
mov
lock
jmp
test
adc
icebp
stos
push
lods
cmpsb
jbe
idivb
mov
lds
mov
sbbb
sti
xchg
push
push
xchg
cmp
inc
and
addr16
lahf
sbb
loopne
mov
out
fmulp
movb
out
inc
sbb
scas
out
cmp
mov
lds
sub
xor
add
leave
mov
mov
and
push
sub
jmp
das
cmpsl
inc
stos
mov
jle
add
cltd
xor
jnp
out
push
out
mov
jbe
cmp
std
inc
jge
xor
mov
mov
cmp
outsl
lds
mov
scas
aam
pusha
stos
fiadds
sub
cltd
mov
push
cmpsl
xor
rcrl
cmp
in
fidivs
xchg
cmc
pusha
es
ficomps
lea
xor
icebp
jnp
outsl
push
cmp
loope
std
and
fmulp
es
cmc
ljmp
mov
ds
inc
or
cmp
cmpsl
les
std
sbb
cli
popa
cmc
ljmp
cmp
jmp
bound
xchg
ljmp
rcrl
mov
sub
adc
pushf
lret
mov
dec
bound
inc
jmp
fs
pop
dec
test
and
cmpsl
pop
gs
mov
rorb
mov
sbb
aam
sub
mov
lods
mov
call
lods
out
cmp
inc
xchg
dec
loopne
std
fiadds
dec
adc
inc
jl
fimull
adc
ja
daa
mov
test
je
jecxz
dec
iret
stos
xchg
sub
adc
xor
filds
stos
pop
push
lock
or
push
sbb
pop
fstpl
cmpsb
pop
or
fsubl
mov
imul
inc
xchg
and
and
inc
fldt
jle
mov
lcall
int3
cs
das
jge
and
and
sub
jmp
dec
push
sbb
data16
call
jle
adc
int3
xchg
mov
lock
test
sbb
pop
lods
jbe
push
jo,pt
sub
pop
imul
rolb
stos
insl
cmp
addl
in
push
adc
inc
lea
mov
pop
inc
dec
test
sub
and
lds
xchg
mov
gs
jecxz
adc
fdivrs
adc
in
xor
aaa
xchg
sub
out
aam
mov
xchg
ds
cmp
add
xchg
dec
or
cmp
aam
push
adc
add
push
sub
inc
inc
stc
clc
outsl
aas
and
test
and
push
push
push
in
popa
cwtl
sbb
outsl
jecxz
adc
sbb
jle
adc
popa
mov
jle
inc
jnp
shll
dec
mov
call
cmp
insb
ljmp
push
adc
sarl
inc
mov
movsl
cmpsb
es
aam
cld
out
shll
icebp
outsb
dec
sbb
imul
xchg
mov
dec
fsts
mov
lret
sbb
jns
subl
fistpl
xor
inc
mov
jle
adc
push
out
fmulp
add
xchg
sub
dec
cltd
xor
xor
jo
push
adc
inc
dec
out
fidivrs
stos
push
test
xor
fisubrs
cmpsl
dec
popf
jo
call
jle
adc
and
dec
and
add
fwait
js
sbb
cmp
test
cmp
js
inc
xchg
inc
inc
inc
add
adc
mov
int
bound
inc
dec
jl
push
les
dec
or
pop
cwtl
outsl
xchg
sti
add
pop
adc
fimuls
push
cmpsl
dec
jmp
outsl
in
shll
push
adc
inc
jg
cmpsl
adc
and
negl
jle
adc
mov
sbb
sub
jne
dec
or
pop
cwtl
addl
js
iret
xchg
sub
adc
push
adc
cmp
clc
mov
orl
lods
push
cmpsb
jecxz
mov
pop
test
push
adc
mov
sbb
jb
int
jno
enter
adcb
idiv
popf
repnz
lods
xor
cmp
push
adc
dec
lea
out
xchg
les
fst
inc
test
xor
or
adc
idivb
push
adc
loope
pop
rcrl
gs
inc
mov
push
cs
out
aam
push
adc
stos
push
nop
jmp
jecxz
xchg
push
insb
push
xor
lds
cwtl
cmp
lods
popa
imul
aad
ret
je
push
adc
inc
jbe
xchg
sub
inc
cwtl
cmp
pop
mov
gs
out
faddp
inc
jg
inc
jo
push
adc
mov
leave
loop
sub
fstl
cmp
adc
out
fiadds
stos
arpl
pop
jecxz,pt
pusha
lret
and
push
lahf
cmp
pusha
jle
adc
cmc
std
jae
push
test
movsl
jo
push
adc
adc
jmp
cmp
jo
leave
xlat
adcb
aad
popf
xor
scas
push
cmpsb
fmul
jle
adc
pop
in
push
jle
adc
in
inc
lea
xor
cwtl
das
push
movsb
mov
mov
lcall
mov
adc
push
inc
cwtl
jae
adc
jg
das
push
ss
push
adc
scas
and
add
push
add
push
sub
adc
shl
xchg
ss
dec
push
mov
aad
in
in
xor
movsb
sti
sbb
inc
jle
adc
fcmovu
daa
jg
and
lds
loopne
lcall
push
adc
test
or
xchg
jle
cmp
jno
lret
cwtl
fisttpll
rcll
jle
adc
inc
arpl
addr16
lds
cld
cmc
fs
imul
jge
gs
cmc
sbb
push
ljmp
adc
sahf
pop
clc
mov
and
jae
shrl
pop
mov
jae
dec
inc
or
adc
xor
jne
out
aam
mov
push
incb
push
adc
lock
stos
xor
and
test
int
ss
push
rorb
movsl
and
int3
jle
adc
out
xor
aam
push
adc
jo
jmp
pop
and
addr16
hlt
mov
nop
mov
les
std
inc
popf
or
push
adc
rcl
std
pop
popa
or
xor
imul
jo
push
adc
aad
dec
dec
sahf
sub
adc
outsl
icebp
dec
dec
pop
jge
add
sub
in
outsb
mov
enter
daa
into
mov
pusha
jle
adc
xchg
shrb
dec
cltd
dec
pop
inc
ja
jo
push
adc
ret
fs
cmp
cmc
inc
cmpsl
sbb
push
lea
pop
fsts
adc
je
int3
jle
adc
leave
mov
cld
jge
adc
mov
dec
loope
sub
insl
enter
inc
jg
addr16
adc
js
push
repnz
sti
shlb
xorb
lret
jmp
adc
mov
push
adc
add
out
aad
and
pop
mov
mov
dec
jmp
cmpsl
cmp
dec
fucomi
adc
add
out
aad
push
andb
jnp
xor
aad
stos
xchg
push
pop
clc
mov
mov
ja
mov
in
stos
push
and
push
adc
gs
cmp
xchg
les
enter
xor
pop
ret
clc
jge
adc
orb
add
dec
out
jno
shll
xchg
ja,pt
push
iret
cmc
mov
push
dec
shrl
pusha
lret
add
mov
pop
xchg
hlt
jge
adc
inc
push
cmc
ljmp
jecxz
jno
lret
and
pop
cmpsl
dec
xor
insl
mov
aad
and
pop
shl
outsb
xchg
les
fldt
out
mov
out
mov
loop
mov
out
test
xor
ja
enter
fldl
cmp
inc
jg
adc
mov
xor
divl
cmpsl
adc
flds
adc
pop
or
pop
adc
jge
flds
adc
int
divb
mov
dec
push
mov
cmpsl
dec
mov
pop
inc
cmpsl
sbb
jmp
push
lret
pop
cmp
pop
jne
rcl
in
sahf
sub
mov
mov
jg
adc
fldt
push
adc
fwait
jl
pushf
mov
je
and
push
adc
ror
push
cmc
ljmp
mov
flds
adc
xchg
les
flds
adc
mov
shll
sub
test
mov
test
test
aam
mov
iret
jmp
mov
stos
cmp
dec
inc
or
repnz
pop
aam
leavew
add
adc
push
adc
inc
sub
push
adc
pop
imull
or
adc
sub
das
push
mov
adc
jg
adc
popa
orb
fdivr
xchg
sbb
das
xchg
ja
jge
adc
jecxz
push
loopne
mov
gs
jle
adc
or
xchg
mov
rcr
pop
adc
daa
jnp
and
lock
adc
mov
xchg
and
enter
jle
imulw
xchg
mov
cld
lds
fmull
leave
cmp
or
into
jmp
dec
mov
mov
jle
fdivs
adc
insl
add
or
mov
push
rorl
lea
pop
in
push
adc
jnp
gs
test
push
arpl
mov
sbb
jo
adc
scas
pop
stc
out
sbb
or
inc
imul
stc
fprem
mov
push
mov
imul
mov
add
inc
push
test
stc
dec
and
or
inc
pop
jge
filds
mov
push
arpl
inc
push
adcb
lods
push
test
jbe
jo
jl
mov
adc
outsb
pop
call
int3
cmp
mov
out
repz
or
cmpsb
fsubrs
outsb
adc
call
in
cmc
stos
push
out
jne
xlat
ds
pop
lcall
ds
loop
xchg
pop
fstp
and
sbb
cmc
out
ror
test
or
sub
adcl
fsubl
leave
test
pop
mov
pop
ja
mov
mov
call
and
fucomp
pop
loope
rcll
fdivl
cmpsl
cs
leave
jecxz
or
nop
fsubl
lret
mov
jmp
sub
adc
aam
fisubs
mov
inc
jae
jmp
cmp
loope
xchg
pusha
jae
inc
test
pop
not
je
xchg
pop
xor
in
sub
adc
loopne
xchg
fiadds
mov
adc
mov
pop
int3
imul
push
adc
push
je
push
adc
addr16
insb
jl
adc
out
stos
and
les
cmp
mov
cmpb
popf
sub
icebp
cmp
sbb
in
push
lods
cmp
adc
pop
loope
out
jmp
sarl
orb
adc
int
loopne
das
cmp
cmpsb
shll
xlat
stos
mov
adc
or
mov
lret
push
psrad
or
shll
xor
cmc
shlb
mov
sub
lret
das
std
aad
push
add
les
xor
or
sbb
in
add
imul
xchg
jae
fst
mull
dec
fs
jp
sbb
push
cmpsb
dec
adc
jb
ljmp
in
adc
xlat
push
or
inc
fcmovne
inc
jl
and
mov
sbb
lcall
popf
mov
popf
out
push
popf
cmp
pop
leave
dec
loop
loopne
push
add
int
dec
pop
cmc
rorl
sbb
dec
ja
mov
xchg
add
ja
hlt
push
nop
faddl
ficoms
mov
inc
lret
cmp
mov
test
pop
sti
and
aam
ds
pop
and
xor
pop
gs
popf
cs
xchg
fisubrl
jmp
push
pop
test
and
lret
fcoml
lods
pop
out
cmp
movntq
out
cmp
fisttps
pop
push
fwait
mov
ljmp
mov
mov
add
xor
lods
cmp
ljmp
mov
add
ret
fildl
cmpsl
pop
mov
mov
add
shlb
scas
inc
mov
clc
cltd
fistps
cltd
jp
dec
jo
stos
leave
dec
shrb
movsl
bound
test
inc
fdivrl
or
adc
sub
adc
mov
jle
adc
pop
and
sub
lretw
sbb
jg
adc
mov
jle
ja
lea
mov
data16
mov
jl
push
arpl
adc
lods
out
lret
test
add
jnp
ja
neg
adc
loopne
dec
adc
xchg
out
or
pop
aas
xchg
sub
call
push
adc
pushf
int3
test
mov
test
scas
push
jp
leave
dec
sbb
lea
scas
and
pop
lds
pop
mov
sub
mov
addb
mov
or
push
out
mov
arpl
das
repz
inc
fisttpll
and
fsubrs
mov
bound
mov
or
or
adc
push
orb
sub
xor
or
inc
cmp
movsl
push
addb
push
jge
jmp
cmp
movsb
add
into
sbb
daa
xchg
cli
out
sarl
dec
sti
add
shll
jne
or
and
rcl
cwtl
cmp
push
cmp
push
cmpsb
mov
or
mov
gs
mov
mov
dec
in
push
sub
adc
mov
sbb
cmp
jne
mov
cmpsl
cmp
les
dec
adcb
mov
sbb
jge
push
aad
mov
roll
push
ljmp
jno
lds
ret
test
inc
aam
jecxz
call
int
sub
dec
push
gs
insl
ret
stos
inc
sub
mull
mov
sub
orl
pop
pop
test
mov
sbb
cmp
les
lret
push
sub
dec
jmp
mov
dec
adc
sub
dec
cltd
xor
loopne
sub
cmc
arpl
ja
orb
push
outsb
push
inc
xor
lret
adc
pop
in
cmp
xor
cmp
dec
push
gs
insl
cmpb
pop
ds
sub
pop
addr16
cld
xchg
dec
leave
sbb
push
jecxz
in
push
cmp
rcll
arpl
sar
xchg
mov
mov
or
jp
xor
ficomps
popa
lds
pushf
sub
push
adc
ja
pop
push
jg
out
mov
rorb
repz
cmpsb
lds
push
fisttpll
push
dec
inc
pop
sahf
dec
popf
xchg
pusha
mov
mov
push
repnz
insl
cmp
stc
rcrl
cmp
ljmp
out
push
dec
insl
sub
aad
sub
inc
jbe
xchg
mov
cmp
push
shrl
clc
ds
cmc
xchg
out
inc
bound
pushf
lret
mov
mov
in
lahf
dec
movsb
dec
pop
int3
pusha
xor
mov
push
std
add
mov
xor
cmp
shl
dec
mov
adc
ficoml
movsl
cwtl
adc
cmp
xchg
outsb
je
cmpsl
xchg
cmp
inc
mov
and
xor
cmp
cmp
pop
mov
addb
xchg
add
sub
outsb
cli
in
test
mov
fwait
adc
andb
arpl
ljmp
leave
and
mov
es
fsts
popa
xor
cmp
in
test
insb
xchg
add
push
popa
mul
fldenv
mov
in
pushf
movsb
sarl
in
pop
in
xchg
jp
movsl
jmp
in
xor
std
mov
sub
sub
xchg
push
notl
push
add
insl
jae
bound
les
push
mov
jnp
addl
pop
hlt
jmp
ljmp
mov
jno
rol
sbb
inc
adc
mov
adc
ds
ljmp
push
pop
div
sahf
xchg
out
test
jmp
lret
push
adc
jne
xchg
das
aas
jns
lock
dec
in
xor
enter
jb
mov
cmpsb
dec
shl
fcmovb
cmpsb
mov
cmp
pop
cmp
in
mov
shll
in
repnz
arpl
or
add
pop
adc
and
sahf
mov
clc
push
icebp
bound
and
je
jl
add
sbb
pop
mov
pushf
sbb
fidivrl
xchg
inc
sarb
add
stc
xor
bound
inc
ror
pusha
mov
add
cmpl
xlat
testb
cltd
int3
jmp
sub
gs
dec
in
notb
jge
sbb
es
outsl
or
daa
inc
dec
adc
jns
mov
push
std
loopne
push
test
leave
pop
cmc
pop
ret
cli
cmpsl
push
arpl
cmpsl
dec
popf
mov
clc
fstpt
orl
adc
pushf
ss
pop
ljmp
sub
out
push
loop
jg
aad
movsbl
movsb
dec
cltd
xor
xchg
sbbl
pop
mov
add
bound
sbb
add
out
mov
xchg
ret
push
add
or
xor
dec
sbb
loope
loop
add
jmp
lea
or
fistpll
pop
das
cmp
inc
fistps
dec
pop
int
rol
dec
loope
test
ja
enter
pop
cli
fucom
push
jb
lret
cltd
std
cmp
push
mov
xchg
arpl
add
and
stos
push
daa
xorl
test
popf
cmp
shl
push
std
sbb
insl
mov
adc
or
adc
push
cmpsl
xor
mov
fistpll
ja
insb
mov
sbbl
push
stos
push
daa
adc
mov
repnz
leave
mov
rorl
mov
fwait
daa
mov
test
cmp
leave
adc
call
bound
dec
movsl
cs
ror
lret
xor
and
push
test
andb
xchg
andl
xchg
push
cmp
mov
arpl
mov
inc
jl
pop
lea
mov
lds
test
data16
xchg
sbb
push
sarb
clc
xor
xchg
sub
cld
mov
lds
jp
adc
fs
push
sti
mov
jmp
jb
pop
mov
orb
sub
dec
lahf
and
push
push
stos
fucom
fnstenv
cmpsb
leave
pop
xor
test
cmpsl
pop
test
out
movsb
xor
ljmp
imul
cmpsl
fwait
pop
outsl
xchg
lds
pop
mov
dec
push
leave
and
or
push
imul
fcompl
pop
test
mov
sub
mov
ret
fwait
cmpsl
subb
imul
xor
mov
arpl
shll
aad
push
stos
pop
ds
shrb
mov
sbb
jecxz
cmpsb
jecxz
sbb
sub
movsw
cwtl
and
leave
xchg
out
movsl
aaa
xchg
or
cltd
dec
ss
mov
aas
or
dec
xchg
mov
in
ljmp
sub
jg
inc
adc
fnstsw
add
inc
imul
pop
push
hlt
mov
imul
pop
cmpsl
cmp
test
dec
lahf
sbb
push
mov
xchg
outsb
or
sbb
dec
leave
gs
pushf
dec
aad
sub
lea
mov
aad
fwait
sub
rol
add
shl
sbb
out
leave
pop
adc
popa
fdivrp
pusha
mov
js
sarb
lods
es
xor
leave
bound
outsb
out
stos
inc
in
or
loop
mov
dec
iret
ds
in
aas
mov
sub
and
leave
jmp
jbe
mov
and
ljmp
mov
lods
jo
push
sbb
mov
xor
sbb
leave
mov
nop
push
hlt
ret
cmp
adc
jl
push
gs
loop
inc
xchg
pop
fcmove
test
dec
pop
or
pop
popf
sub
cltd
mov
adc
sahf
sub
mov
or
and
mov
inc
in
sbb
mov
lcall
push
sar
push
xlat
and
hlt
push
orl
mov
enter
ljmp
xor
leave
lcall
pop
adc
jmp
adc
push
shrl
cld
sbb
adc
push
test
adc
int
mov
rorb
mov
aaa
cmpb
ret
push
stos
push
lods
psubusw
inc
sub
aad
ficoml
dec
popf
inc
dec
sbb
daa
jns
inc
cmpsl
sbb
int3
int
cltd
dec
and
pop
ja
cmp
imul
mov
mov
int
or
cmp
pop
repnz
dec
adc
popf
sub
xchg
mov
jg
adc
cmp
js
xlat
sbb
jle
jl
fs
fwait
jb
out
lods
shl
mov
popa
les
lcall
adc
cltd
je
out
fchs
xchg
je
mov
adcb
dec
adc
push
adc
push
scas
push
inc
int
push
sbb
mov
fisttps
or
adc
adc
std
cld
stos
pop
pop
jns
cmpsl
adc
stos
or
jo
adc
xor
clc
mov
in
cmp
and
test
fcoms
cmp
and
sarl
adc
fs
xor
js
int
cmp
cmp
jmp
or
andl
mov
in
fwait
cmp
and
xchg
in
push
xor
mov
xchg
lds
jle
call
mov
out
orb
xchg
pusha
sbb
mov
psubusw
cltd
popf
pop
jae
xchg
xchg
pop
addr16
je
inc
cmpsl
loop
dec
sub
mov
sub
and
jno
out
test
je
push
adc
mov
movsl
cwtl
fstl
and
and
xor
fsubl
test
xchg
pop
pop
push
cmp
bound
lcall
out
push
and
call
outsb
test
xor
xchg
cwtl
addr16
hlt
and
fwait
popa
add
repz
adc
push
adc
and
jo
cltd
mov
cmp
orl
xor
popa
dec
icebp
sbb
dec
or
sbb
adc
adc
insl
ja
movsl
and
cwtl
jnp
rcrb
loopew
lret
jnp
mov
stos
cmc
cwtl
jbe
sub
jp
xchg
push
std
cmp
xor
ja
sbbl
in
adc
pop
push
cli
pusha
push
arpl
sub
jle
cld
push
cmpsb
mov
sbb
xor
mov
jmp
xor
das
pop
cli
mov
dec
cmp
movsb
test
roll
lret
out
or
nop
in
jbe
add
out
sbb
les
lret
pushf
sub
adc
lahf
and
xchg
aaa
in
lock
insl
pop
decb
xchg
mov
cs
pop
pop
cmp
xchg
cmp
mov
add
jmp
js
filds
and
inc
lea
ficoml
pop
std
sub
neg
mov
test
mov
push
test
shrb
in
fs
je
sub
outsl
sbb
lods
or
and
scas
pop
jg
insb
enter
mov
sub
push
lds
int3
cmp
std
cs
shll
mov
int3
jle
adc
add
pop
inc
stos
push
insb
cwtl
mov
mov
in
cwtl
cltd
xchg
xchg
mov
leave
mov
push
adc
pop
push
sub
es
fsub
dec
push
cmpsl
dec
js
and
out
fidivrs
fsubr
lods
or
sub
jb
sub
mov
pop
cwtl
cmp
xor
out
fmulp
cmp
jmp
stos
std
movsl
pop
aam
xchg
xor
cmp
sub
cmp
xor
out
fdivrp
orl
fdivp
pop
mov
inc
pop
xor
int
rorl
cmp
movsl
and
pop
lea
xchg
mov
adc
cmp
cmp
mov
addl
sarl
add
cmp
icebp
je
rorl
loope
jno
adc
leave
rcl
out
inc
sub
inc
dec
shlb
in
add
les
shlb
movsb
xor
cwtl
outsl
cmp
cltd
xor
sti
sub
js
push
adc
cmp
fldl
inc
test
stos
shrl
gs
and
popf
cmp
rcrb
jae
out
dec
mov
stos
push
test
and
lahf
cmpsl
loop
xchg
push
fwait
jo
dec
popf
sub
lcall
adc
negb
sub
mov
cmp
xchg
push
mov
jmp
iret
rcl
cmpsl
movsl
push
test
int
mov
mov
or
arpl
inc
jae
and
mov
aam
push
push
fstps
jns
and
dec
pushf
cmp
int3
jno
dec
int
fdivp
test
ljmp
dec
mov
lret
sbb
cmp
pop
clc
mov
in
cmp
jb
add
ljmp
jne
icebp
gs
inc
pop
popf
cmp
out
cmpsb
dec
pop
fiadds
cmc
ljmp
sub
jo
ds
xlat
dec
popf
loope,pn
jg
xor
cmp
jno
enter
ljmp
inc
xlat
mov
pop
addr16
je
jg
cmp
inc
jbe
fiadds
and
fwait
pop
mov
sub
loope
mov
or
dec
popf
inc
lock
xor
test
xchg
adc
push
decb
cmp
rcl
cmc
shrl
mov
mov
scas
pop
fmul
jle
adc
cwtl
cmp
cld
sub
popa
scas
int3
jle
adc
inc
xchg
rorl
pushf
test
push
xchg
mov
pop
cwtl
xor
jno
pop
cmpsb
shll
fstps
lret
lds
push
ss
enter
aaa
inc
dec
mov
popf
adc
mov
clc
repz
mov
int
scas
sbb
xor
mov
test
lea
ret
dec
int
adc
lret
test
push
push
stos
dec
sub
or
cmp
fistpll
loop
lret
xor
clc
push
adc
cli
and
mov
mov
jne
sbb
cmp
sbb
or
subl
ljmp
mov
pop
xchg
push
dec
push
rol
add
mov
in
aad
and
sbb
sbb
ss
mov
cltd
je
lods
sbb
outsb
xchg
jle
out
fisubs
or
stos
inc
out
xor
movsb
shlb
xacquire
mov
test
rol
rorb
push
xchg
jns
or
lock
sbb
pop
andl
fs
add
fcmovnu
popf
dec
hlt
pop
into
stos
outsl
imul
adc
adc
lret
inc
inc
sub
push
adc
mov
xor
push
cmc
data16
xor
cs
bound
inc
sub
and
push
adc
mov
pop
cli
jb
pusha
xchg
in
cmp
mov
fisubrl
mov
xchg
xor
test
enter
daa
mull
imul
fisubrs
mov
stos
sub
xor
push
fbld
sbb
jmp
push
cwtl
fwait
movsb
jp,pt
ljmp
dec
cltd
inc
pop
add
dec
inc
mov
xor
fidivrs
sbb
push
pop
nop
push
cmp
inc
lods
pop
mov
mov
jl
add
push
inc
or
stos
imul
sbb
and
das
push
mov
adc
ficoms
or
stos
imul
sbb
and
insb
push
push
mov
adc
ficoms
or
stos
imul
sbb
and
dec
push
jle
aaa
adc
ficoms
or
stos
imul
sbb
and
cmp
cmp
clc
ja
fiadds
mov
fldt
icebp
gs
and
popf
cltd
insb
dec
popf
cmp
clc
fadd
jp
cs
fldenv
es
fldl
stc
je
shrl
movsb
cmp
ljmp
cmp
std
gs
pop
cmp
adc
call
add
orb
fsub
push
cmpsb
mov
rcll
cmpsl
pop
push
xchg
fcompl
inc
ja
stos
pop
adcl
jecxz,pt
gs
inc
out
inc
popf
cmp
inc
mov
push
out
fmulp
or
aad
inc
fs
lock
fwait
movsb
mov
in
je
popa
lods
out
push
dec
test
and
sbbl
pop
mov
push
leave
arpl
jae
push
sub
dec
ja
jno
adc
sbb
adc
inc
inc
das
cltd
xor
dec
dec
xchg
lahf
imul
mov
out
fmulp
add
adc
scas
pop
je
mov
xor
mov
mov
adc
cmp
sbb
adc
leave
leave
cs
daa
fildll
int
mov
jbe
lea
movsb
inc
inc
adc
inc
test
mov
cmpsl
dec
cwtl
jp
xor
xlat
push
dec
cld
jo
adc
add
lds
shrb
adc
jno
push
test
inc
push
adc
enter
sbbl
dec
stos
cmp
add
int
mov
or
inc
shl
xchg
push
pop
test
pop
mov
xchg
add
aam
icebp
jb
pop
movsl
sub
adc
std
cmpsb
mov
push
lock
push
xchg
and
push
adc
in
sub
movsb
sti
cmpsb
subb
pushl
push
xchg
cmp
or
xor
and
and
mov
push
jb
shlb
imul
or
dec
xor
jp
pop
pop
or
aad
mov
out
ja
addr16
mov
addl
jnp
popl
faddl
adc
pop
inc
push
mov
push
add
xchg
lods
shrl
dec
lea
pusha
sbb
stos
scas
jp
and
aaa
mov
stc
insb
lcall
scas
rol
adc
sub
outsl
fwait
lret
xchg
lea
cmpsb
jmp
icebp
mov
sub
xchg
mov
fwait
icebp
inc
cld
inc
fbld
fistps
adc
imul
ret
out
add
icebp
mov
pop
cmp
mov
add
cmp
enter
sahf
cmp
pop
dec
jne
xor
or
or
int3
xor
sbb
orb
stc
shrb
fs
push
pop
pop
loope
sbb
sbb
mov
mov
adc
push
rclb
xor
faddl
adc
xor
xchg
cmpsl
pop
inc
cmp
stos
cmpsl
pop
dec
xor
arpl
je
pop
adc
adc
je
pop
adc
dec
jmp
pop
or
add
out
imul
xor
shrb
stos
push
lods
pop
mov
xchg
pop
stc
nop
jecxz
nop
inc
lahf
jno
cmp
or
adc
aad
xchg
ljmp
cltd
mov
sbb
inc
jl
mov
lahf
cmp
jb
jp
cwtl
outsl
std
sti
fndisi(8087
loope
and
pushf
fnstsw
push
cmpsl
cmp
sbb
insl
inc
cld
out
fidivrs
push
inc
jnp
pop
mov
inc
push
mov
ja
cmp
rorb
and
fbld
adc
xor
or
rcll
cmp
stos
dec
xor
fstpl
mov
imul
rcrb
adc
fidivrs
pop
adc
shr
ds
xchg
je
pop
adc
lahf
xor
sbb
mov
aad
add
lret
data16
inc
cmpsl
push
push
mov
cmp
fdivrl
stos
push
out
in
push
adc
das
mov
xor
sbb
cltd
insb
mov
cmp
jg
adc
adc
mov
lret
leave
movsb
mov
sbbb
adc
out
fisubrs
mov
out
cli
cld
sahf
test
repnz
adc
sub
mov
dec
sbb
and
popf
cmp
sbb
das
pop
inc
dec
cmp
fcomps
sbbl
xor
jne
sub
fcoms
pop
cmp
leave
adc
pop
in
pop
mov
sar
movsl
and
push
inc
or
sub
aad
daa
adc
jmp
stc
pop
lds
pop
std
cmp
mov
adc
stos
xchg
push
or
pop
shlb
and
xchg
add
jns
lds
pop
cli
xor
ret
add
jge
lock
dec
jecxz
push
pop
shl
imul
sahf
insb
pop
cmp
subl
popf
fnstcw
mov
mov
fcomps
pop
dec
ret
sbb
mov
inc
jecxz
sbb
gs
fnsave
xchg
and
adc
pop
pop
addr16
iret
adc
add
shl
push
sub
mov
mov
das
jmp
and
jp
or
inc
or
enter
inc
and
jp
pop
inc
repnz
sub
mov
cs
out
es
mov
popa
add
test
jo
insl
xchg
call
das
xchg
and
xor
outsl
and
sahf
ss
mov
leave
add
mov
cld
pop
bound
pop
mov
pop
ss
psrld
mov
fs
filds
adc
clc
sarb
insb
mov
adc
sub
dec
mov
js
and
sbb
cltd
pop
or
rcrl
lock
inc
push
sbb
popa
dec
mov
and
sbb
mov
xor
lea
pusha
inc
inc
mov
fistps
xchg
sub
inc
adc
pop
sub
push
sbb
inc
adc
cs
cwtl
fidivrs
jno
sti
cmp
cli
mov
cmp
mov
loopne
lods
mov
frstor
loopne
cwtl
std
cli
stos
or
scas
nop
jno
push
sbb
nop
mov
nop
sub
mov
mov
pop
fisubs
in
pusha
pusha
cmpsl
pop
fld
mov
imul
or
sahf
aam
jne
repnz
int
loopne
and
mov
ret
je
sub
fwait
daa
lret
lds
sahf
sub
int3
pop
lods
shlb
sbb
jmp
test
pop
sub
adc
mov
mov
lret
ljmp
popa
dec
lds
add
lods
jns
push
add
sbb
ss
push
fnstsw
das
leave
mov
cmp
push
cmp
dec
fcmovnb
xlat
es
adc
sar
xor
fs
bound
adc
enter
adc
pusha
sbb
mov
add
mov
mulb
pop
repz
shll
in
mov
push
stos
add
xor
out
push
xchg
push
fwait
aam
dec
popf
dec
cmp
loop
push
stos
push
fldt
adc
lret
sub
je
imul
adc
push
gs
ljmp
ds
gs
jmp
and
rorl
lds
std
repnz
fs
pop
adc
pop
adc
pop
adc
jo
mov
pop
adc
daa
xchg
pop
lds
xchg
out
fstp
mov
je
jl
jle
mov
adc
rcll
aas
cltd
xor
je
pop
adc
sbb
sbb
mov
je
pop
adc
sahf
pushf
push
lods
shrb
push
sbb
lret
xchg
mov
dec
push
sub
cmpsl
dec
fnsave
adc
adc
push
clc
cmp
lahf
negb
sub
jne
xchg
add
sbb
adc
test
ret
and
sub
dec
cltd
ret
push
lods
fisttpl
lret
sub
ja
add
adc
lods
pop
mov
leave
fwait
xor
dec
popf
cmp
jmp
adc
mov
ljmp
jmp
outsb
enter
add
mov
add
sub
inc
out
inc
jl
fistpll
and
imull
out
and
dec
adc
pop
fimull
fildll
mov
scas
dec
lcall
or
mov
adc
lods
mov
sub
or
lods
fisubrs
movsb
push
mov
fdivs
adc
in
inc
icebp
rcl
mov
sub
mov
push
xor
inc
push
jl
aad
push
mov
filds
inc
out
or
mov
push
subl
adc
sub
or
icebp
addr16
repnz
mov
and
gs
jl
add
jns
sbb
xchg
shlb
adc
cmp
push
mov
sub
enter
push
jbe
xchg
movb
mov
cld
cmpsb
pop
pop
xor
and
and
nop
gs
mov
jo
adc
mov
push
mov
cld
inc
cmp
in
faddl
adc
ret
mov
fs
dec
bswap
sbb
in
sub
enter
jecxz
int
es
push
or
xchg
imul
adc
cmp
rol
loope
repnz
xor
les
adc
or
pushf
xor
test
addr16
dec
lds
hlt
push
dec
std
push
rcl
push
cmpsl
fwait
cmc
dec
jbe
fldcw
rolb
lods
add
adc
pusha
inc
mov
stos
push
les
adc
mov
cmp
std
movsb
faddl
adc
sub
mov
jbe
push
jl
je
dec
dec
cmp
sti
cmp
ljmp
es
pop
dec
cmp
std
daa
into
mov
xchg
jge
into
sbb
adc
lret
push
stos
push
mov
lcall
xor
push
std
cmpsl
dec
xor
neg
ljmp
adc
or
call
call
ljmp
adc
stos
push
std
push
jecxz,pt
dec
lret
push
movsl
inc
rol
shll
out
xor
je
adc
cmpsb
cmp
cltd
dec
lret
das
fisttps
inc
dec
sbb
add
cmc
inc
cmpsl
rcl
xchg
jecxz
movsl
test
loop
fdivr
pop
adc
mov
les
cltd
mov
mov
cmpsb
dec
jae
jo
adc
outsl
push
xor
lds
mov
ja
movsl
into
test
adc
sub
bound
pop
jge
dec
xor
jb
cmpsl
dec
xor
adc
mov
and
gs
dec
jmp
shll
push
adc
outsb
aad
fiadds
lcall
sub
xor
adc
jmp
cmp
jbe
add
add
xor
stc
pop
adc
fisubrs
inc
add
shll
out
xor
jo
adc
loopne
xchg
dec
jae
jo
adc
faddl
adc
cmpsl
dec
movsb
faddl
adc
aam
push
test
scas
xchg
xor
aad
inc
outsb
pop
in
pop
pop
popa
inc
dec
adc
out
clc
pop
xchg
fstpt
sbb
add
pop
adc
cld
jae
adc
xor
lds
push
adc
or
cmpsl
outsl
xor
mov
int3
lods
pop
adc
adc
movsb
faddl
adc
ret
push
test
das
and
imul
pop
pop
pusha
testb
pop
mov
inc
lock
xor
test
insb
jns
out
lcall
or
mul
fucomi
aad
mov
push
dec
lcall
loop
je
les
sub
sbb
shll
inc
mov
cmc
push
dec
mov
or
push
adc
std
mov
push
fnstsw
push
sti
add
aaa
lcall
aaa
in
aas
ja
inc
fdivrs
adc
decb
call
pop
xchg
or
mov
sub
out
jbe
rcl
dec
jno
je
adc
jle
fldenv
xor
xchg
je
xor
ss
adc
fidivl
in
repnz
sbb
call
xor
sarb
jnp
mov
pushf
sbb
dec
int3
jmp
mov
cli
xor
push
adc
mov
jle
mov
fcmovnb
mov
pop
dec
js
data16
dec
xor
and
lock
adc
sub
adc
push
sbb
ljmp
add
pushf
fcompl
and
push
adc
fidivrs
xlat
jge
and
push
enter
aad
pop
adc
jecxz
cmpsb
mov
sbb
add
adc
and
ss
in
test
mov
test
jg
pop
negl
mov
push
adc
xchg
inc
jo
icebp
int
scas
xor
out
fstl
addb
push
sub
adc
inc
movsb
lds
adc
repnz
jle
adc
lds
adc
xchg
lds
adc
mov
out
adc
adc
std
pop
add
adc
lods
imul
mov
or
out
test
fcompl
hlt
or
push
adc
mov
jne
xchg
enter
adc
cmc
int3
jle
adc
lret
mov
test
pop
adc
nop
xchg
lds
adc
cmp
sti
fndisi(8087
lea
pusha
gs
addb
out
mov
and
dec
popf
das
lea
xchg
xchg
xor
cmp
andl
xor
cmp
out
jnp
adc
testl
xor
pop
push
cmpsl
lds
push
pop
clc
mov
into
cmp
lods
sqrtps
test
stos
push
aad
cmp
mov
dec
adc
push
xchg
pusha
cmpsl
dec
popf
xchg
add
cmpsb
ljmp
sub
jb
sub
cmp
inc
dec
push
mov
mov
les
push
mov
sbb
fbstp
fldt
dec
fs
mov
syscall
loop
push
stos
push
outsl
icebp
int
cmp
lods
jnp
jmp
into
xchg
jl
and
push
adc
testl
xor
pop
push
cmpsl
lds
push
pop
clc
mov
into
cmp
lods
sqrtps
or
shll
pop
jmp
pop
and
dec
popf
lods
adc
rol
add
lds
adc
int3
lds
adc
lds
adc
pusha
dec
dec
inc
lahf
xor
push
adc
jge
dec
mov
adc
xchg
push
push
pop
jmp
dec
subb
ljmp
mov
sub
loopne
pop
adc
int3
lds
adc
adc
mov
fistl
addb
out
js
cmp
cmp
faddl
adc
rorb
pop
jge
adc
sub
in
or
mov
adc
popf
jo
shll
out
mov
push
test
fs
orb
jge
cmpsl
push
adc
and
fsubp
je
pop
adc
push
adc
jge
adc
aaa
loopne
cld
aad
mov
mov
adc
push
loop
subl
xchg
mov
pop
adc
mov
pop
adc
cmp
push
adc
sahf
aam
test
mov
out
xor
fistl
arpl
adc
mov
push
adc
loop
pop
mov
leavew
jmp
lds
adc
sub
lds
shll
into
fdivr
nop
stc
push
scas
ret
push
adc
jle
cmp
mov
sarl
adc
jno
lds
stc
out
movsb
pop
stos
xlat
les
adc
sbb
test
xchg
mov
pusha
add
or
mov
stos
jno
outsb
sub
pushf
dec
pop
or
lret
push
add
adc
sub
add
jb
push
into
add
jle
ja
popa
int
lods
mov
xchg
xor
pop
or
sbb
jno
cld
pop
mov
jmp
push
shl
or
test
push
imul
and
xor
adc
mov
testl
inc
clc
jg
adc
scas
jae
addr16
scas
outsl
push
xchg
stos
fidivrs
dec
into
dec
add
pop
or
cmp
push
cwtl
cwtl
and
inc
push
in
mov
cmpl
lcall
sub
mov
adc
cmp
fcoml
dec
cmpsl
in
sbb
sub
cli
popf
mov
adc
mov
je
pop
adc
lock
adc
dec
or
or
movsl
cmp
cmp
push
into
jmp
xlat
add
cmp
pop
add
or
movsl
loopne
jno
adc
dec
jecxz
clc
mov
or
or
and
adc
movsl
pop
mov
cmpb
jg
adc
cmp
ja
or
ds
push
adc
push
add
xor
call
cmpl
cmpsb
dec
ss
cmc
add
stos
sub
loope
adc
faddl
test
int
mov
pop
push
cmpsl
mov
pop
or
sub
pop
or
jp
cld
jo
adc
push
insb
xor
or
lret
jno
adc
mov
sub
xor
stos
dec
sbb
or
fisubrs
out
sbb
lret
pop
mov
lods
loopne
push
adc
lock
or
pop
inc
aad
aaa
push
lods
pop
ds
test
lods
pop
xor
js
popf
mov
inc
jo
aad
nop
push
stos
push
test
adc
fstl
push
cmpsl
call
lea
clc
psrad
dec
jae
inc
es
lret
jbe
cmpsl
call
dec
lock
popf
xchg
pusha
pop
cmpl
cmpsb
dec
ss
cmc
add
stos
sub
loope
xor
fcompl
sbb
push
test
sub
lret
cmc
or
fs
jne
loope
adc
faddl
test
xor
mov
pop
push
cmpsl
mov
pop
or
push
xor
cmp
fidivs
pop
or
stos
mov
out
nop
ss
add
jno
cmp
adc
out
adc
push
or
in
adc
push
dec
add
adc
imul
jbe
push
sub
rcrb
adc
je
jp
cs
cmpsb
dec
out
push
out
xchg
sub
mov
adc
aas
insl
adc
hlt
les
or
ds
mov
shrl
push
cmp
shll
adc
cli
or
pop
fimull
jecxz
dec
lret
and
xorl
movsb
adc
inc
jp
inc
sti
stos
push
test
xor
outsl
sub
xchg
call
or
sbbb
push
fisubs
shlb
xor
shl
shr
iret
mov
cmp
push
or
sub
sbbb
adc
dec
sahf
inc
dec
add
orb
scas
xchg
jl
xor
mov
push
or
daa
push
xchg
xchg
test
ror
jle
fsts
xchg
outsl
push
adc
add
insl
push
sub
in
mov
imul
daa
xor
in
les
or
and
pop
inc
icebp
lret
int
jb
xchg
test
ficoml
loopne
jle
push
cli
add
inc
jle
or
mov
pop
sbb
adcl
lret
xor
adc
jbe
fisttpl
cmp
mov
loop
dec
push
in
pop
xchg
cmp
or
or
push
pop
cmc
sub
std
cwtl
inc
lea
int
ds
icebp
mov
cmpsb
jbe
cld
fs
sub
pop
xchg
mov
mov
sti
and
insl
jno
push
and
cmp
jecxz
mov
mov
dec
cld
jo
adc
xchg
out
inc
sub
mov
shlb
jl
mov
mov
xor
jp
sub
inc
xchg
nop
cmc
or
push
rcll
adc
mov
adc
arpl
data16
call
repnz
jne
mov
jg
adc
sub
lahf
stos
mov
pop
jne
data16
shlb
adc
out
sbb
or
daa
dec
call
sbb
jg
adc
adc
push
mov
dec
loop
xchg
cmp
shll
mov
jns
mov
rcrl
mov
push
adc
sub
dec
cltd
xor
mov
cmp
inc
dec
jmp
cmpsl
loope
inc
lock
fidivrs
adc
mov
xchg
ret
orl
cmpsl
dec
cmp
popf
cmp
clc
out
fidivrs
dec
jae
inc
nop
xor
fst
dec
push
cmpsl
call
mov
dec
cmp
jp
xchg
in
jne
mov
sbb
cltd
cld
push
or
je
add
adc
mov
and
mov
sub
mull
adc
push
xchg
pop
adc
popf
cmp
jp
jg
adc
xchg
add
adc
mov
cmpsb
dec
popf
lods
test
push
adc
mov
fcompl
mov
add
mov
or
pop
je
jne
loope
cmc
adc
fmulp
ret
scas
fnstsw
push
mov
xor
das
mov
sub
push
adc
dec
sub
jno
rcll
push
inc
pop
das
cltd
xor
mov
pop
push
cmpsl
lods
jmp
cmpsl
mov
std
hlt
ljmp
push
adc
push
add
out
dec
test
inc
ja
stos
stc
fucomi
aad
xchg
fs
or
imul
insl
cld
push
or
jmp
adc
push
adc
fsub
push
dec
popa
and
and
leave
pushf
cmp
jle
adc
push
dec
cmpsl
ror
test
inc
ljmp
popf
cmp
popf
add
in
sub
lcall
push
cmpsb
dec
ss
xlat
loope
mov
cmpsl
dec
or
addb
aad
mov
jmp
fidivrs
stos
push
inc
daa
in
fistpl
movsl
movsb
aad
or
je
cmpsl
scas
cmp
test
out
ficoms
or
mov
movsl
xor
adc
cmpsl
sub
cmpsl
out
sub
in
and
xchg
scas
mov
sbb
mov
add
popf
cmp
arpl
aam
push
loop
cmpsl
dec
cwtl
inc
scas
hlt
jae
adc
jecxz
cmp
xchg
cld
cmpsb
dec
pushf
adc
xchg
dec
nop
jns
jmp
adc
lock
adc
pop
sub
arpl
mov
xchg
push
xchg
inc
xchg
jl
inc
inc
push
lods
push
mov
int3
in
lret
fwait
cmp
js
pop
mov
xchg
in
lds
repnz
out
popf
stos
arpl
cltd
mov
sbb
faddl
adc
orb
movsb
faddl
adc
les
jb
subb
repnz
push
cmp
fnsave
nop
lods
xchg
push
fs
call
jl
xchg
mov
out
dec
xchg
jle
jo
mul
xchg
test
mov
push
adc
mov
shrl
jbe
andb
subb
ret
das
cld
pop
cld
add
dec
imul
cmc
int
cmpsb
or
adc
push
sbb
mov
pop
jecxz
pop
clc
sbb
hlt
cmp
rolb
adc
fs
adc
pop
adc
dec
test
lret
movsb
faddl
adc
fadd
pop
movsb
cwtl
mov
xchg
push
loopne
push
insl
dec
inc
push
fbld
pop
push
pop
jne
ja
mov
mov
jge
pop
ret
fcoml
loopne
pand
outsl
jae
divl
jmp
in
push
jecxz
nop
jl
lods
rclb
push
sbb
jle
dec
mov
out
imul
leave
pushf
data16
xor
cs
cmc
add
cs
and
jge
push
jnp
adc
pop
fstps
imul
mov
push
push
lds
vcvtsi2ss
sub
xchg
in
adc
scas
and
in
shlb
fdivrs
adc
xchg
sti
stos
push
fldt
aad
cltd
xor
fnstsw
lods
pop
xor
mov
mov
fwait
movsb
push
cmc
ljmp
pop
ret
xor
dec
popf
dec
jnp
test
fadds
dec
call
das
xchg
xor
push
adc
cld
mov
xchg
adc
lahf
adc
push
adc
notb
in
orb
jbe
cmpsl
fsts
addb
mov
sub
ficoms
bnd
inc
pop
mov
loope
inc
shll
clc
ljmp
shrl
mov
pop
mov
das
push
cmpsl
loope
cmp
cmpsl
add
adc
push
repnz
shrb
jecxz
arpl
xchg
xchg
lds
jne
xor
lods
or
ljmp
dec
cltd
inc
pop
mov
pop
push
movsb
mov
scas
pushf
mov
fidivrs
sarl
push
bound
mov
xchg
pop
mov
jo
shll
out
ficoms
aad
nop
mov
js
int
mov
pop
push
cmpsl
cmp
dec
pop
jmp
dec
xchg
adc
enter
lret
les
push
adc
js
ds
dec
popf
cmp
sahf
std
cmpsl
dec
out
mov
fnstsw
jge
addb
and
mov
lret
sbb
pusha
popf
cmp
jge
mov
cmp
xchg
cld
aam
cli
and
and
scas
ljmp
fidivrs
ljmp
mov
dec
mov
push
push
nop
shll
adc
push
sbb
fcomp
ljmp
gs
adc
stos
out
cmp
ds
lock
shlb
xchg
in
and
daa
sbb
xchg
push
mov
popf
sub
testl
pop
mov
push
ret
insb
fs
or
mov
inc
test
sar
fidivs
scas
lret
xlat
push
test
fdivl
mov
push
rcr
adc
adc
mov
test
sub
aas
pop
leave
xchg
mov
mov
pop
adc
lea
jl
jns
fisubs
js
mov
test
dec
push
cmp
das
or
loope
jno
rcrb
add
test
loope
movsl
pop
aas
inc
cmp
adc
js
stos
inc
cmp
jb
in
repnz
fidivl
faddl
adc
mov
ud1
fucomip
and
cmp
pusha
bound
xchg
push
cli
in
jnp
adc
jo
xchg
xlat
add
cmp
imul
and
test
xor
das
push
sub
mov
das
push
int
sub
cmpl
mov
outsl
push
imull
jae
cmc
add
addr16
or
ret
sub
pop
mov
dec
pop
aam
and
imul
addr16
push
sbb
int
or
mov
and
loope
adc
cwtl
and
mov
repnz
bound
call
mov
adc
sti
pop
push
rorb
push
push
mov
mov
icebp
out
lea
xor
adc
mov
mov
push
adc
repnz
out
sbb
or
leave
repz
dec
push
sub
adc
in
cmp
adc
mov
pop
rcrl
cmp
int3
inc
lret
and
inc
xchg
data16
and
loope
leave
dec
cmp
sub
addr16
test
pop
adc
imul
faddl
adc
faddl
adc
cmpsl
push
mull
bswap
sbb
adc
out
cmpsl
adc
frstor
push
or
xor
popf
sub
xor
xchg
jp
pushf
mov
jp
push
clc
and
or
push
test
sahf
sarl
nop
jo
ret
test
xor
cmpsb
dec
gs
mov
dec
popf
cmp
sahf
std
cmpsl
dec
loope
cld
rcr
vaddsubpd
add
addr16
xlat
lea
ljmp
les
dec
pop
or
ljmp
mov
int
inc
push
out
xor
pusha
popf
cmp
bound
cld
fiaddl
int
cs
test
std
and
sbb
xor
mov
sub
hlt
sahf
aam
xchg
int
dec
cmp
shlb
call
adc
mov
lds
std
xor
push
test
dec
dec
lret
in
dec
popf
pushf
shr
sbb
adc
cld
jo
adc
cmp
loopne
int3
jb
pop
sub
jne
xchg
push
xchg
test
dec
popf
xchg
add
cmc
inc
inc
je
jecxz
mov
pop
mov
sub
mov
lds
mov
adc
cltd
sti
stos
push
push
push
in
aaa
mov
gs
dec
xor
xor
xchg
jp
popa
inc
fisubrs
sarb
dec
pop
push
in
push
xchg
lds
mov
dec
js
movsb
into
push
cmc
ljmp
mov
dec
push
in
sub
pushf
mov
adc
cld
mov
xchg
push
leave
ret
ljmp
mov
jmp
aad
mov
loope
shll
adc
stos
push
add
int
lret
jge
dec
out
inc
pop
shll
out
fidivrs
stos
shrl
fs
jmp
loop
rorl
add
int3
push
pop
inc
mov
je
push
adc
aam
popf
cmp
inc
jmp
xor
and
test
push
jno
stos
push
hlt
or
loop
dec
lret
xchg
xchg
fdivrl
cmp
inc
cmpsb
dec
arpl
jbe
mov
aad
push
mov
cltd
mov
dec
xor
cmp
in
inc
pop
out
fdivrs
push
lods
shrl
mov
mov
int3
xchg
movsb
rcl
xor
adc
adc
hlt
jge
lea
out
fnsave
pop
fdivs
out
imul
xor
xchg
xor
call
mov
test
incb
and
addb
push
stc
adc
rclb
mov
xchg
push
sbb
inc
push
rcrl
add
addb
stos
push
mov
mov
mov
push
jl
cmp
cmc
dec
inc
mov
daa
shlb
jg
sbb
pop
xor
int3
adc
mov
int
ds
fimuls
and
push
sub
fnsave
adc
xchg
repnz
push
jp
stos
lret
hlt
push
and
out
test
or
es
sub
aam
inc
xchg
dec
adc
cwtl
jnp
adc
aaa
rcrb
fistps
ret
repnz
mov
mov
stos
daa
roll
lds
mov
outsl
jo
lea
and
arpl
add
arpl
adcl
jle
or
out
int3
xor
pushf
shrl
iret
mov
pop
adc
xor
pop
das
fiaddl
movsl
xchg
mov
cltd
mov
mov
adc
pop
cli
sbb
sti
mov
lret
mov
das
push
cli
sub
push
mov
push
jecxz
xchg
js
pop
jnp
idivl
addb
cwtl
addl
js
in
sub
adc
jmp
push
adc
aad
push
jecxz
mov
pop
jg
cmc
cmpsl
add
adc
jmp
cmp
lods
loop
mov
mov
push
mov
call
cmp
cwtl
lock
rcr
xchg
cmp
inc
dec
lret
pop
cmp
jge
xchg
dec
cmpsl
dec
out
inc
add
fidivrs
adc
xchg
sub
bound
inc
and
jg
xor
adc
add
ds
cmpsb
mov
xor
mov
sub
data16
mov
test
ja
movsl
xchg
jp
std
and
xchg
lcall
sub
mov
in
xor
movsb
into
jl
ljmp
xor
pop
push
cmpsl
lds
dec
push
xchg
std
cmpsl
dec
pop
pop
decb
adc
and
sub
lret
jge
dec
xor
mov
out
pop
out
faddp
inc
sbb
jnp
adc
adc
out
rcrl
push
adc
pop
out
ficoms
inc
rol
cmp
push
xor
addb
mov
es
cmp
decb
mov
popf
ja
movsl
xchg
jp
cwtl
addr16
push
jecxz
mov
cmp
push
insb
out
pop
adc
xorl
aad
xlat
xchg
pop
dec
test
pop
cmp
jge
push
rclb
add
jnp
adc
cmpsb
in
or
dec
mov
lds
mov
les
adc
or
add
xor
out
and
jmp
jno
rcr
jp
xchg
rclb
jle
mov
inc
pop
mov
dec
xlat
inc
pop
jmp
cmp
cmpsb
push
adc
xchg
lret
mov
gs
push
pop
sub
pusha
popf
cmp
xor
ds
jnp
nop
cli
stos
push
fcoml
aaa
jmp
fs
cmp
les
xchg
test
dec
add
fstpl
cmp
push
adc
pop
lods
push
ja
js
pushl
mov
adc
sbb
xor
test
cmp
xchg
sti
mov
int
mov
mov
sub
pop
stos
cmp
adc
push
xor
jne
repnz
xor
outsb
xchg
mov
push
lret
lahf
inc
mov
xor
push
xchg
test
rorb
and
or
outsl
stos
xchg
push
fs
loopne
mov
xchg
std
push
je
jns
sbb
sbb
and
fldcw
cmp
sahf
je
cmpsb
cwtl
mov
mov
sub
fisttpl
mov
je
pop
adc
js
call
pop
adc
ds
into
pop
xor
faddl
adc
add
pop
adc
jb
out
fwait
lea
lcall
push
adc
push
pop
push
lret
sbb
in
mov
pop
adc
ljmp
adc
jno
stc
and
mov
ja
movsl
push
test
xorb
or
xor
mov
clc
adc
push
sbb
bound
int
and
insb
adc
test
mov
stos
sti
inc
xchg
rcrb
arpl
or
or
in
inc
lods
or
jl
adc
cmpsb
cmp
sub
and
mov
pop
push
cmpsb
dec
cmp
std
adc
in
jae
adc
adc
pop
adc
sbb
sub
cmpsb
add
pop
adc
mov
flds
adc
lahf
fists
std
es
out
outsl
test
or
push
pop
cld
mov
adc
adc
icebp
jb
push
mov
dec
enter
adc
adc
cmp
daa
pop
inc
mov
fnstsw
push
xor
mov
xchg
iret
mov
faddl
adc
dec
fs
lret
fisttpll
je
pop
adc
je
pop
adc
arpl
arpl
mov
pop
cld
rcr
mov
divl
adc
fisubl
lret
lock
adc
imul
pop
mov
and
or
adc
inc
xor
icebp
adcb
push
or
jmp
adc
adc
inc
test
rcrb
and
cwtl
mov
imul
jmp
cmpsl
lcall
jp
out
push
jno
push
adc
mov
out
in
aad
mov
mov
xchg
xor
push
or
loop
mov
test
push
or
sub
xor
ffree
mov
and
aas
add
or
test
adc
add
or
arpl
in
dec
popf
icebp
add
or
jp
cld
jo
adc
push
insb
xor
or
lret
jno
adc
incl
xchg
adc
or
pusha
xor
mov
pop
or
push
dec
cld
jo
adc
jecxz
push
or
cmp
pop
add
andb
mov
fsubr
mov
gs
or
mov
jmp
push
or
ficoms
jo
adc
cmpsb
xor
or
pop
push
out
xor
ret
je
pop
adc
icebp
pop
dec
test
sub
push
aam
mov
outsl
cmp
cmp
jge,pn
xor
mov
inc
insl
cmp
stos
sub
sbb
lret
pop
mov
lods
pop
sub
cmp
xor
ficoms
jp
push
mov
pop
cmc
fs
push
pop
mov
dec
push
loop
cmpsl
dec
or
orl
mov
loop
fstl
cmpsb
aad
out
fldl
cmp
and
fsub
push
inc
jnp
mov
xchg
ret
and
inc
sahf
cmp
inc
out
pop
adc
xchg
jp
ret
xor
sub
scas
dec
sahf
cmp
ljmp
out
sbb
divl
nop
shrl
xor
mov
push
adc
lret
add
mov
sub
rolb
mov
stos
test
jo
adc
test
jo
adc
out
ret
repnz
pushf
jge
int3
push
and
int
and
icebp
sub
rorb
pop
jecxz
mov
add
je
adc
jne
jle
xor
add
cmpsb
insb
mov
sub
cmp
push
fdivr
pop
adc
arpl
vcomiss
pop
cld
dec
jo
adc
ficoml
out
pop
jp
into
xor
aad
and
bound
es
mov
int
push
in
stc
pop
adc
lahf
push
in
mov
cmpsb
sbb
push
adc
cmc
sub
stc
pop
adc
push
lret
shlb
adc
sub
jo
adc
dec
push
push
hlt
mov
xchg
lahf
addb
dec
mov
mov
inc
jb
cmp
push
test
jnp
push
xchg
lods
pushf
mov
adc
cltd
arpl
jmp
mov
rclb
cltd
sbb
lods
or
stc
dec
and
push
sarl
int3
jnp
push
repnz
push
ret
jl
or
pusha
sub
xchg
mov
in
aad
lret
outsl
pop
sub
push
adc
add
repnz
out
mov
out
fld
push
shlb
push
adc
adcl
push
hlt
sbbl
adc
adc
sbb
adc
cli
rolb
mov
xor
mov
or
cmp
cld
xor
inc
jnp
popf
test
adc
cmc
pop
lds
sbb
sbb
cs
xor
jno
adc
gs
pusha
repnz
mov
rcr
dec
mov
int
sbb
leave
sbb
add
pop
sbb
cmp
pop
jmp
into
push
cmpsl
adc
and
fsubl
movsl
fwait
adc
call
push
add
mov
mov
add
mov
push
test
or
movsb
jmp
mov
fimull
inc
fsubr
mov
sbb
push
push
cmp
inc
fistpl
xchg
add
jp
mov
and
jne
pop
aad
rclb
pop
cmp
xor
in
inc
or
pop
push
mov
out
int3
sub
loop
dec
fs
ret
popa
adc
push
test
int3
mov
jle
jnp
jb
pop
dec
xor
mov
lods
iret
and
xchg
mov
xlat
push
sub
xor
xor
mov
scas
mov
stos
push
push
lcall
inc
xchg
push
pop
lock
pushf
cmp
jbe
enter
stos
push
test
adc
xchg
sub
jno
sarl
std
int
push
mov
dec
loope
movsl
xchg
adc
push
add
out
loopne
daa
mov
jbe
mov
mov
popa
les
xor
cmpsl
inc
lcall
pop
xor
xor
cmpsl
xor
popf
shll
lock
sahf
jmp
mov
cwtl
xor
pop
and
cwtl
call
popa
mov
inc
cmp
lods
mulps
or
stos
push
call
dec
shrb
cwtl
lds
adcl
lock
addb
mov
xchg
mov
repnz
pop
lds
ret
pop
mov
adcb
sub
fcompl
inc
ds
push
sub
call
cmp
aaa
ss
mov
test
xor
mov
add
gs
dec
es
push
jle
inc
push
shll
sti
fcmovnu
jnp
in
jmp
aad
inc
iret
or
pop
push
fwait
sub
adc
in
mov
pusha
addl
ds
fsubrs
push
call
sub
fs
lahf
mov
repz
data16
gs
out
jl
fcompl
shrl
gs
nop
data16
cmp
orl
jg
push
idivl
addr16
dec
ds
jb
adc
add
mov
sbb
mov
loope
pop
rcl
gs
cmp
or
mov
adc
add
xor
adc
and
fwait
icebp
roll
adc
add
fstpt
pop
out
add
out
fnstsw
mov
stos
push
jg
shrl
out
inc
mov
lret
pop
test
mov
addr16
add
xor
ds
int3
test
cmp
movsb
adc
mov
pop
inc
push
fisttpll
jo
dec
push
inc
push
xor
push
or
xchg
jecxz
bound
pusha
addb
jne
in
fisubs
xchg
into
xor
mov
push
loopne
or
ret
mov
mov
push
mov
cmp
push
notb
inc
shlb
lods
mov
lret
adc
cltd
call
mov
popf
sbb
jo
pop
and
pop
sti
mov
out
lret
push
out
rcl
lods
iret
adc
cmc
lahf
push
cmpsl
sahf
cmp
scas
enter
dec
sbb
xor
fwait
mov
pop
repnz
lahf
inc
jnp
lds
add
leave
pop
jp
ljmp
jecxz
inc
mov
pusha
addl
inc
jmp
lahf
dec
sbb
adc
andl
jge
xor
daa
sbbl
push
mov
jb
inc
iretw
xchg
fildll
push
adc
sarb
lahf
sahf
push
lea
mov
les
out
cmp
out
orl
xlat
push
cmpsb
dec
xor
mov
daa
sbb
jl,pn
les
fwait
xlat
fs
xchg
out
stos
test
add
inc
add
sbb
push
jmp
inc
test
add
lods
pop
jne
std
push
stos
push
test
cwtl
adc
call
jb
lret
pop
adc
dec
pop
enter
pop
jge
jae
push
insb
adc
in
adc
jo
cmp
xor
push
sub
hlt
xchg
test
add
iret
sar
ret
test
int
mov
in
dec
leave
pop
adc
jl
lods
cmp
ss
fcoms
inc
mov
mov
sub
push
cmp
movb
ja
hlt
add
push
and
push
or
test
add
sub
in
fidivrs
add
mov
lock
lods
cmpsl
les
into
ljmp
out
fidivrs
icebp
push
and
mov
lea
inc
aam
pop
push
pop
and
and
add
pushf
dec
jg
insb
sub
sub
cmp
jns
jl
sbb
in
cmp
push
outsl
sub
xchg
outsb
push
jl
movsl
addb
xor
cmpsb
cmpsb
loopne
push
adc
adcl
xchg
in
shll
and
loop
ss
stos
mov
inc
pop
imul
loope
popf
fnstsw
jbe
int3
mov
or
or
repz
push
enter
dec
jnp
sub
std
lahf
xchg
fucomip
mov
xchg
push
lods
xchg
aad
in
xchg
push
adc
data16
mov
xorl
in
mov
push
lods
mov
or
ret
or
pop
xor
xchg
push
adc
xor
jmp
cmpsb
mov
mov
inc
sub
pop
and
ja
aad
inc
sbb
shl
mov
mov
mov
cmp
adc
push
inc
push
leave
xchg
hlt
mov
lods
clc
stc
mov
inc
mov
xchg
sub
lret
dec
js
js
mov
xchg
push
adc
test
std
lea
ljmp
mov
dec
xor
adc
mov
rolb
xchg
cmc
in
pop
in
xchg
push
xchg
stc
fwait
test
fwait
and
jb
pop
movsl
xor
jge
dec
inc
test
sti
pop
adc
fbstp
in
aad
adc
adc
subl
or
push
orl
dec
lds
pop
xor
inc
notl
mov
test
dec
pop
adc
or
inc
and
sarl
inc
and
fnstcw
mov
cwtl
push
adc
hlt
xor
sbb
lcall
push
dec
test
imul
lods
insb
pusha
or
enter
inc
push
dec
xor
xlat
fdivrl
inc
jno
cmp
out
sub
cmp
fildll
inc
icebp
test
loopne
pop
sub
pop
jl
push
in
jne
add
test
jne
push
ret
push
sub
test
or
aad
pop
sub
insl
sbb
mov
adc
mov
daa
call
gs
rorl
sahf
pop
push
and
test
cli
test
xor
test
mov
cltd
and
fdivrl
int
popa
dec
shlb
pop
out
mov
lahf
push
rol
push
idivb
inc
cs
push
and
sahf
push
cmp
repnz
std
and
sti
data16
fstps
push
inc
or
sbb
and
sahf
imull
daa
sbb
mov
inc
xor
popa
fcoms
pop
fs
pop
mov
adc
mov
pop
stos
jb
cli
jp
daa
pusha
add
sti
pop
xchg
add
loopne
daa
pop
mov
call
ljmp
lock
add
xor
mov
das
enter
push
or
sahf
jnp
and
test
jae
dec
pop
cmp
out
xor
sub
adc
sub
lods
or
mov
lock
pop
loopne
scas
xchg
rorb
in
xor
sub
cmp
cmp
imul
je
movsb
orb
and
pop
sbb
sahf
xor
ja
mov
mov
or
push
sti
inc
aad
sbb
push
adc
cmpsb
mov
orl
push
dec
lahf
mov
les
cmp
adcl
insl
or
mov
mov
loope
lds
ss
fwait
xor
sbb
fsubp
pop
inc
pop
cmp
ja
pop
mov
mov
aam
pop
cmp
loopne
fwait
arpl
andl
int
xor
out
dec
stc
adc
mov
jo
fstpt
mov
sar
testb
mov
test
pushw
mov
stos
push
mov
std
fstpl
mov
ja
pop
mov
mov
lahf
jp
cmp
rolb
and
int
das
jp
hlt
and
xchg
mov
lds
mov
cs
imul
inc
inc
or
fisubrs
add
push
sub
mov
mov
mov
mov
inc
iret
aaa
jle
in
jne
mov
push
pop
ljmp
sub
pop
in
rcr
jnp
js
pop
adc
lahf
lret
mov
daa
rorb
ss
push
andl
mov
mull
push
cmp
dec
fidivs
test
xor
xchg
jp
js
jecxz
nop
and
cmp
fnstenv
adc
lds
movsb
pop
out
sbb
fnstenv
mov
sbb
and
aaa
enter
sbb
cmc
outsl
add
shlb
fstpl
ficoml
out
jmp
les
and
test
test
dec
vsqrtss
mov
xchg
mov
std
scas
pop
ror
xchg
dec
in
push
and
xchg
sbb
ljmp
fimuls
mov
pop
dec
mov
stos
or
dec
pop
push
lret
cmp
cmpsl
cmpsb
andb
or
sbb
stos
stos
negl
movsl
cmp
dec
lea
xchg
icebp
das
lds
hlt
cmpsl
xor
out
jecxz
mov
subl
adc
xchg
hlt
fdivrl
test
xchg
dec
sti
mov
push
dec
ret
lea
popa
xchg
in
into
or
sub
and
inc
out
jge
pusha
mov
mov
vminpd
sub
sbb
and
shl
inc
or
jmp
notl
lret
movsb
roll
inc
mov
sub
loope
mov
add
cmp
in
movsb
lds
dec
mov
int3
fsubr
jo
jae
add
jmp
icebp
push
adc
pop
leave
je
and
movsb
pop
je
adc
outsl
stos
fiadds
dec
pusha
je
adc
mov
and
fnstcw
js
adc
xchg
and
movsb
or
jno
cmp
cmp
adc
incb
shrl
out
xor
je
adc
pop
xor
lds
mov
jp
cmp
addl
pop
sbb
jb
sarb
jo
push
adc
pop
dec
dec
pop
enter
mov
adc
cmpsb
sub
and
push
adc
xchg
fisubl
jmp
adc
adc
test
mov
or
cld
xchg
push
adc
std
add
aaa
mov
pusha
and
adc
cmp
das
jg
cmp
lcall
or
fimuls
xchg
bound
or
fcmovu
pop
cmp
int
adc
icebp
add
adc
aas
fwait
mov
decb
test
jb
ret
adc
xchg
lds
cltd
popf
imul
mov
out
popf
mov
add
pop
xor
cmpsl
dec
mov
sar
add
test
cltd
mov
sar
or
shl
push
fisttpl
dec
adc
pop
push
out
jns
negb
and
inc
arpl
pop
loope
pop
jns
je
cmpsl
push
cmp
cmp
js
js
adc
inc
and
inc
adc
cwtl
loope
or
add
dec
mov
loop
stos
lea
jg
push
adc
jecxz
out
xor
aad
cmpsl
loope
lcall
rorb
popa
and
in
mov
lret
xchg
push
call
subb
lds
sbb
loopne
insb
test
pop
jmp
leavew
in
mov
xor
cmp
jmp
jp
daa
addb
push
mov
mov
cli
fwait
cmp
adc
cmp
bound
jbe
fidivl
push
or
rclb
ljmp
mov
sub
lret
push
in
movzwl
sbb
xor
or
inc
loop
and
mov
and
pop
ds
popa
bnd
cltd
arpl
or
pop
je
icebp
lods
or
push
or
push
sbb
sbb
cmp
lret
dec
pop
inc
shlb
xor
mov
mov
jge
pop
fs
pushf
test
dec
dec
mov
fs
jbe
icebp
aas
nop
sub
push
jae
movsb
out
push
mov
jnp
mov
sub
cmp
divl
out
pop
int
sub
in
xchg
push
or
out
xchg
and
popf
pmulhuw
lret
cltd
js
sbb
mov
ss
arpl
push
xchg
aas
leave
loopne
mov
xchg
and
xor
sbb
cmpsb
mov
notb
sub
pop
jo
push
jge
push
mov
idiv
movsb
add
xor
cmp
mov
and
sbb
outsb
jmp
stc
or
push
push
in
jnp
inc
cmpsb
xchg
insl
in
adc
or
mov
arpl
shlb
fdivrl
sbb
pop
leave
repnz
push
sbb
leave
dec
adc
mov
clc
push
data16
mov
jmp
or
dec
ret
addr16
enter
push
lret
sub
sub
jno
out
test
in
cmp
push
das
lcall
jne
or
mov
xchg
or
jmp
sahf
inc
aas
pop
jmp
xor
push
pop
pusha
dec
inc
xchg
fsts
push
sahf
sub
out
xor
sub
ja
sub
cmp
sarl
fisubs
in
mov
pop
mov
les
inc
adc
aad
enter
adc
clc
shl
jle
bound
pop
pusha
dec
inc
xchg
aam
ret
dec
mov
and
inc
cmc
pusha
and
push
loope
mov
into
fildll
mov
add
inc
jo
push
inc
push
add
sub
pusha
aad
dec
shll
cs
test
lds
aaa
jns
push
sahf
insl
dec
faddl
das
mov
ds
xchg
xor
pop
pop
pusha
dec
dec
out
push
dec
xchg
push
addr16
test
scas
sbb
aaa
popf
jb
push
shrb
sbb
add
lret
leave
xchg
roll
push
daa
inc
cwtl
and
gs
jae
jmp
mov
jl
xor
fsts
push
sahf
and
dec
jbe
sahf
mov
jb
nop
lahf
jmp
xchg
mov
jno
insb
xor
sub
in
dec
das
popf
mov
outsl
pop
cmpsl
mov
jmp
sub
stos
cmpl
sbb
andb
popa
mov
dec
int3
push
scas
pushf
mov
and
mov
sub
jae
jmp
add
pop
jns
mov
pop
std
lods
insb
scas
push
das
popf
mov
movsb
outsb
adc
dec
dec
dec
jb
js
rorb
pop
sahf
push
inc
cld
fstpl
inc
and
gs
mov
aad
adc
add
pop
aas
roll
cld
test
push
cmp
call
dec
mov
mov
sub
testl
popf
inc
lods
push
and
movsb
out
push
mov
push
cwtl
mov
test
rcr
popf
jp
test
sub
and
ja
pushf
mov
pushf
scas
cli
rolb
adc
xor
pusha
pop
aad
sub
push
lret
outsb
inc
ficoml
and
dec
sub
fimull
outsl
jb
cmp
mov
jb
test
push
and
jbe
nop
and
hlt
jbe
or
cltd
arpl
inc
and
fnstcw
jle
ds
xchg
xchg
fbstp
in
xorb
dec
int
dec
rorb
add
popf
xcrypt-ofb
cmpsl
sub
push
dec
test
out
lds
test
mov
and
mov
and
jle
cmpsl
inc
movl
imul
into
aaa
mov
loope
cld
push
outsl
add
daa
push
arpl
sbb
mov
xor
inc
mov
stos
adc
inc
lea
test
xor
out
cmp
aas
mov
lret
xchg
push
mov
mov
adc
mov
push
data16
imul
cmpsl
push
add
jle
jno
sub
xor
pop
mov
mov
pop
or
faddp
xor
cs
popf
dec
mov
mov
cld
sti
mov
into
xchg
fnstsw
lea
pop
or
cli
out
enter
adc
stc
xchg
and
xor
xchg
jecxz
aad
enter
or
scas
push
mulb
sbb
leave
mov
push
scas
mov
xor
mov
leave
jp
stc
adc
or
and
pop
push
and
adc
cltd
mov
scas
mov
adc
jne
cmp
in
stos
mov
push
aad
hlt
or
jp
mov
fwait
cmp
pop
cmp
enter
test
fildll
mov
fisubrs
push
cmpsl
adc
push
xchg
jmp
nop
ljmp
xor
fs
scas
dec
out
ljmp
out
fmulp
dec
loop
shrl
mov
jmp
stos
or
lret
push
cmpsl
sahf
out
stos
push
mov
je
imul
mov
stos
inc
dec
xchg
mov
cmp
mov
lcall
aaa
pop
push
sub
stos
or
rcrb
jae
rorb
pop
cmp
xor
pop
inc
inc
push
cmpsb
dec
in
mov
test
lods
xor
enter
pop
fsubrp
push
xchg
and
lods
add
cltd
mov
push
sub
jbe
pushl
cmp
dec
jecxz
test
movb
inc
imul
and
cmp
mov
movsl
sbb
pop
sbb
mov
cmpsl
adc
lcall
sbb
dec
in
mov
ja
push
ja
jge
pop
mov
dec
pop
inc
dec
push
rolb
adc
add
mov
out
orb
jl
ficomps
xchg
pop
jecxz
gs
lods
pop
mov
dec
push
adc
add
leave
jp
push
adc
ljmp
loopne
inc
movsl
lds
imul
cmovg
add
pop
xchg
pusha
adc
jmp
gs
fmuls
cmp
iret
data16
fwait
cs
lods
mov
iret
adc
loopne
mov
dec
adc
xchg
fdivr
imul
xchg
out
pop
sub
mov
shlb
lret
pop
scas
mov
fildll
arpl
pop
fnsave
sbb
cmp
stos
push
shll
xchg
imul
push
adc
jge
mov
xchg
fldl
cmp
and
daa
sbb
in
pop
mov
nop
cmp
fwait
insl
push
xor
mov
or
inc
ss
sbb
dec
ss
push
pop
cmp
cli
dec
inc
ret
sbb
shl
in
in
cmp
aas
pop
in
repz
xlat
test
sub
jae,pt
fstps
in
je
leave
test
mov
jl
es
sbbl
mov
imul
repz
sbb
mov
push
pop
jmp
inc
cwtl
cmc
jle
fcoml
or
sub
out
lcall
sbb
jmp
scas
cmp
cltd
aad
mov
sbb
insb
scas
mov
ficoms
pushf
lret
dec
cmpsb
leave
or
sbb
shlb
fisubl
adc
fisubrl
sarb
outsb
leave
xchg
xchg
jecxz
inc
mov
cmp
fcmovne
ss
cmp
mov
and
rcl
cmpsb
mov
rcrl
dec
and
inc
and
xchg
mov
arpl
out
in
outsb
ja
or
jg
push
lods
fists
cs
adc
popf
outsl
test
loope
dec
and
xchg
mov
movsb
imul
aad
test
add
push
push
shll
cmc
jb
xchg
jno
add
jno
inc
insb
xchg
testl
and
mov
adc
mov
mov
sarb
jle
ret
test
or
das
cwtl
mov
jo
adc
inc
test
movb
push
pop
xor
xor
pop
cmp
cmp
inc
rorl
leave
out
cmc
sbb
sbb
push
adc
lds
xchg
pop
imul
movsb
pop
shll
mov
and
jle
ficomps
sahf
jbe
xchg
lret
repnz
scas
push
les
shrb
inc
rcrl
push
jno
insl
sarb
in
cmp
es
ficoml
push
loope
cmpsb
stos
dec
popf
inc
dec
sbb
add
adcl
pop
jno
int
pop
cs
adc
inc
jp
les
jns
push
mov
sub
aad
push
and
pop
jnp
shll
loop
sahf
out
push
dec
test
and
ret
xlat
and
adc
gs
dec
fisubl
test
adc
mov
jg
lea
lods
sub
push
adc
int
fldcw
mov
dec
into
les
popf
cmp
jne
inc
or
jp
out
inc
jge
cltd
xor
mov
pop
adc
hlt
rclb
repnz
adc
or
movb
and
movsb
cmovl
fsts
sbb
popf
imul
sub
fucomip
dec
and
sub
lcall
bound
dec
jno
movsl
bound
lea
inc
and
rcll
outsl
pop
jmp
add
mov
pushf
cmp
fs
or
stos
nop
sub
mov
int
mov
movsl
bound
in
mov
in
fmulp
lret
sub
rolb
in
mov
cmp
sub
pop
out
xor
xor
cmpsl
dec
or
loop
lods
add
dec
inc
inc
jmp
lock
cmp
std
arpl
cmpsl
dec
or
loop
lods
add
add
call
ljmp
jmp
lcall
mov
test
popf
lods
aam
push
lods
shll
jecxz
sub
arpl
mov
jge
cs
adc
xor
jae
mov
outsl
lock
or
in
shrb
adc
je
cltd
lods
orb
lods
inc
cmp
add
jmp
es
fwait
cmp
jbe
icebp
mov
lcall
and
dec
mov
jle
mov
pop
adc
pop
mov
lds
adc
inc
mov
push
pop
xor
clc
test
icebp
lret
mov
jae
adc
cli
test
imul
test
sbb
adc
lods
or
out
jle
loopne
and
lods
lds
adc
xor
clc
inc
nop
mov
insb
xchg
push
adc
add
sub
inc
iret
dec
stos
push
imul
mov
adc
rolb
repz
lds
adc
xchg
mov
sub
pop
mov
dec
pop
sub
and
mov
sbb
adc
adcl
pushf
stc
lods
pop
cmpsb
pop
movsl
lret
fistpll
push
xchg
dec
jae
enter
bound
movsl
sub
int
pop
mov
mov
cmp
icebp
lret
jnp
repz
in
fucomip
sarl
inc
fwait
adc
imull
push
in
jle
dec
adc
jno
mov
dec
lret
jae
adc
lret
fs
adc
cmpsl
cmp
popf
jge
xor
imul
adc
sbb
adc
push
adc
lds
fsubs
es
sbb
ret
pop
adc
sti
imul
adc
inc
xchg
xchg
out
xchg
cmp
xchg
sub
sub
shrb
mov
pop
mov
dec
pop
cmpsl
adc
push
das
mov
jmp
xchg
mov
dec
popf
cmp
pushf
sbb
popf
cmp
pop
stos
dec
insb
out
pop
adc
mov
cld
sti
or
jge
decb
test
adc
lock
mov
test
inc
mov
mov
or
dec
ljmp
or
nop
data16
jmp
push
xchg
push
adc
cld
outsb
sub
fidivrs
sub
push
aaa
fmulp
lcall
daa
adc
pop
lcall
xchg
jmp
movb
jecxz
add
aam
sbb
dec
shll
out
fisubrs
insb
push
es
cmpsb
dec
adc
adc
loop
mov
imul
ljmp
ss
gs
daa
xchg
ja
cmp
popf
xchg
fildl
sqrtps
push
push
inc
test
cmpsb
dec
xor
into
push
cmpsl
dec
movsb
xorb
fwait
popf
cmp
loopne
sub
sub
cmp
adc
je
mov
mov
out
ja
ficoms
or
ret
test
inc
xlat
loope
xchg
push
pop
pop
out
je
jg
mov
dec
fsubr
fidivrs
mov
pop
fmull
fnstcw
jmp
into
into
cmpsl
adc
out
or
rolb
fsubrs
bound
dec
ss
xlat
loope
pop
fbld
fwait
popa
mov
cmp
cmc
inc
inc
push
fistpl
push
popf
cs
push
mov
jmp
iret
enter
push
cmpb
js
xchg
xor
rorl
movsl
mov
sti
sub
test
addl
int3
pop
jo
test
adc
xchg
adc
sub
ss
pop
inc
cmpsb
adc
and
lret
xchg
pop
sub
dec
pushf
cmp
adc
movb
cmp
adc
inc
xchg
sub
mov
shlb
hlt
roll
scas
push
mov
int3
xchg
das
push
jmp
fwait
cmp
fwait
in
pop
ds
jno
jg
subl
pop
or
push
mov
xor
inc
xchg
sahf
aam
stos
lcall
sbb
pop
pop
dec
add
out
adc
arpl
dec
jns
xor
pop
adc
rcll
adc
lcall
jge
mov
mov
cmp
push
jns
movsl
leave
cmpsb
xchg
xchg
mov
sarb
add
xor
pop
adc
shrb
sbb
ret
imul
imul
in
test
push
lds
lea
mov
fistpll
cld
jae
push
push
jae
adc
xchg
inc
aad
dec
sbb
cwtl
mov
jl
out
dec
lock
xchg
shlb
lret
filds
xlat
outsl
inc
leave
mov
pop
popa
cli
xchg
push
mov
sbb
adc
pusha
jg
sub
push
test
push
xchg
in
xchg
dec
test
pop
adc
xchg
lds
adc
sbb
push
xchg
adc
push
jae
adc
jne
xor
sub
push
stos
stos
mov
push
pop
cmp
push
fdivr
das
push
cli
mov
xchg
and
data16
push
add
test
icebp
insl
nop
lds
adc
cmpsl
sti
std
in
pop
cmp
sub
cmp
jae
adc
adc
inc
lcall
xlat
test
stc
cmc
ljmp
test
cmp
adc
inc
sub
cmpsb
enter
inc
test
test
xor
out
add
jbe
mov
jmp
les
movsb
orb
sbb
push
jecxz
cmpsb
dec
cltd
es
mov
mov
shll
out
jb
xor
push
adc
out
inc
stc
pop
cltd
xor
cmpsl
dec
popf
mov
fwait
test
fdivr
fnsave
or
lcall
pop
in
sbb
daa
jne
adc
xchg
cmp
je
xchg
dec
mov
aas
mov
ss
das
pushf
mov
sub
xor
cmp
jno
xor
aad
adc
or
gs
scas
pop
mov
adc
mov
ja
pop
mov
fsubr
sar
xor
sub
popf
cmp
jle
xchg
push
adc
sbb
dec
outsb
cmc
ljmp
dec
cltd
ret
imul
aad
ficoml
dec
out
sbbl
add
adc
push
test
popf
pop
js
adc
movsb
mov
rorl
lds
std
xchg
outsl
push
test
ret
pop
adc
fwait
adc
or
je
push
mov
movsb
ss
ljmp
and
xor
cmp
cmp
cmpsl
add
cmp
jno
push
aad
sbb
push
xor
add
push
in
int
cmp
stos
dec
popf
das
fwait
inc
jb
shlb
shlb
fcoms
mov
sahf
jno
pop
and
ja
sbb
std
cmc
ljmp
dec
cltd
xor
dec
shrb
push
and
pop
outsl
sti
ja
jb
test
insb
push
cmpsb
cmp
cmp
jo
mov
push
mov
lds
iret
fisttpl
mov
rolb
add
hlt
loop
test
ljmp
lds
pop
pop
andl
jnp
bound
fs
fwait
adc
stos
xor
mov
mov
lcall
push
testl
movsb
cs
adc
inc
sbb
call
inc
orl
push
test
pusha
inc
insb
push
movsl
inc
xlat
ret
jnp
outsl
mov
imul
pop
and
xlat
sub
stos
and
lds
iret
es
dec
cmp
les
xorb
inc
inc
push
ret
clc
clc
mov
cli
push
imul
cmpsb
xchg
add
xchg
cmp
push
add
stos
xchg
xor
repnz
lret
int3
dec
clc
ffreep
dec
mov
adc
or
and
and
adc
push
pop
div
fsubrl
movsb
cmp
pop
and
lea
stos
adc
mov
daa
xor
cwtl
xchg
stos
adc
aaa
incb
sbb
jb
cs
shrl
mov
imul
inc
jecxz
sub
push
adc
jb
cltd
adc
jecxz
push
ljmp
mov
fwait
adc
adc
in
xor
sbb
fstps
call
into
out
push
movsb
sbb
mov
pop
adc
arpl
repnz
adc
inc
jno
mov
push
cli
stos
jle
inc
testl
jecxz
pop
cmp
add
out
sbb
popw
xor
clc
loope
shr
and
jae
and
cwtl
xchg
clc
mov
bnd
sbb
ds
mov
and
push
imul
push
inc
or
stos
push
push
inc
adc
cmp
sub
adc
insl
shlb
sub
xchg
mov
in
push
stos
frstor
lods
imul
pop
cmp
sti
adc
sub
stos
mov
sbb
push
shl
bound
sbb
cmp
add
sahf
xor
les
push
ljmp
push
cltd
xor
ljmp
mov
pop
stc
mov
sbbb
jmp
push
test
dec
add
mull
lret
adc
fsubrs
les
cmc
gs
mov
xor
fisubrs
sub
mov
and
lock
cmp
inc
push
dec
adc
shll
fdivp
shrl
and
les
xor
sub
push
adc
mov
mov
and
cmp
mov
or
pop
ret
push
lods
jl
push
adc
inc
int
jae
test
int
jo
xchg
adc
jmp
pop
adc
push
lcall
jp
lcall
or
je
cmp
jle
xchg
fdivr
push
mov
pop
and
cmp
test
mulb
xchg
popf
imul
cmc
sbb
mov
insl
pushf
sub
out
aad
cmp
mov
push
pop
pop
cmp
int3
add
lods
add
stos
fnstsw
push
mov
dec
ret
cltd
adc
mov
sahf
cmp
mov
or
adc
sub
mov
les
pusha
and
and
mov
test
sub
push
mov
inc
sub
sub
mov
orb
sub
push
daa
pop
mov
mov
aaa
mov
xchg
in
clc
mov
les
sub
ss
daa
pop
pop
and
jnp
xchg
pop
ljmp
sub
cmp
add
test
adc
push
stos
fsubr
pop
dec
pop
enter
sbb
cmpsb
dec
out
orb
lds
dec
jmp
stos
shl
popa
inc
aam
scas
push
cvtdq2ps
daa
add
jns
shlb
dec
orl
lcall
push
adc
push
scas
pop
xor
mov
fwait
ja
aaa
pop
out
mov
mov
pop
jg
adc
daa
adc
pop
xlat
fcoms
add
and
add
pop
adc
icebp
in
sti
mov
push
adc
cmpl
cmpsb
cmp
xor
sahf
in
out
push
fistpl
jle
int
jecxz
pop
iret
jnp
cmp
xchg
sbb
mov
and
cmp
mov
cmp
jnp
add
fistpl
jge
sbb
xchg
sti
in
or
fisttpll
out
in
mov
jo
sub
rolb
mov
push
push
std
sub
negb
mov
mov
xchg
sti
movsl
fwait
lea
shlb
movsl
fisubrs
sbbl
dec
out
icebp
jp
cld
push
popl
js
movb
rcl
aad
pop
ja
mov
fidivrs
lods
test
and
aam
imul
hlt
ds
push
xchg
adc
cwtl
push
ficoml
scas
mov
loop
data16
icebp
cmpb
insb
or
mov
and
jge
mov
xorl
push
jns
ljmp
add
addb
xchg
adc
into
push
arpl
adc
stos
test
cli
in
in
pusha
fs
fs
testl
lret
sub
push
jne
int
cwtl
jmp
push
push
cmp
daa
xchg
mov
or
bound
das
sbbb
inc
xchg
repz
lods
sar
xchg
xchg
dec
push
add
insb
and
out
stos
add
sbbb
jecxz
daa
adc
mov
xchg
movsb
push
ja
jmp
dec
popf
das
notb
add
cli
lahf
cmc
dec
int
out
mov
push
shll
pop
dec
cmp
int3
or
inc
lock
lods
sub
mov
sub
cs
mov
insl
pop
mov
rolb
sbb
jne
adc
adc
adc
je
jmp
sbb
fidivrs
jns
push
adc
xchg
or
sbb
lods
push
ja
jmp
dec
popf
add
cmp
sub
mov
cltd
sahf
jb
jno
lods
add
das
xor
jno
lcall
sbb
jmp
xlat
rorl
mov
inc
aam
pop
loop
xchg
add
add
jb
pop
sub
cltd
mov
dec
cmpsl
dec
popf
dec
mov
mov
ja
leave
mov
sub
adc
lds
adc
pop
in
sub
jmp
aam
gs
cmc
lods
push
test
push
iret
mov
dec
popf
mov
jmp
int3
pusha
into
fdivrs
pushf
push
in
cmp
mov
cmp
cltd
add
shr
push
xlat
sbb
andl
gs
sbb
and
adc
pop
ljmp
loope
loopne
subb
mov
push
cmp
fstl
imul
inc
jbe
push
sub
jbe
lock
and
push
sub
in
inc
test
lea
pop
das
pop
ret
cmp
add
shll
cltd
rorl
adc
sti
sahf
insb
push
cs
fmuls
mov
push
cmpsl
dec
popf
mov
decb
dec
add
dec
pop
stos
aad
push
mov
push
iret
mov
out
dec
jb
imul
add
nop
inc
or
in
rorb
mov
adc
adcb
rorl
sbb
pop
roll
leave
inc
or
xor
pop
mov
pop
sbb
cs
adc
pusha
stos
adc
je
sub
jmp
std
pop
cwtl
xor
mov
ds
add
cwtl
jmp
xchg
jbe
xchg
push
movsl
pop
das
lods
fdivr
jp
jle
mov
nop
repz
and
rcrb
jge
push
mov
hlt
and
loope
inc
sub
and
xor
fwait
pushfw
or
xchg
mov
stos
lods
in
adc
or
or
and
leave
mov
or
mov
ljmp
icebp
pop
movsb
test
mov
outsb
jno
sub
push
sbb
nop
fs
in
or
xchg
jmp
rcrl
add
mov
imul
mov
mov
ja
inc
out
and
sbb
adc
push
inc
out
fwait
scas
pop
testb
xchg
dec
loope
in
fcompl
mov
mov
aas
fsqrt
sbb
jmp
fnsave
inc
les
xor
cli
icebp
xorl
gs
loop
fisubrl
adc
push
cli
or
stos
mov
jle
xor
loope
outsb
cmp
or
popf
outsl
pop
sti
es
jle
dec
leave
std
sar
das
xchg
xchg
lret
sub
data16
pop
insb
cwtl
cli
in
sbb
mov
sub
stos
xchg
mov
pop
sarl
xor
sbb
mov
test
xor
inc
pop
shlb
fcomps
or
sbb
pop
sub
test
insb
add
insl
inc
cmp
sub
cmp
dec
push
lds
mov
ds
lret
xchg
inc
cmpsl
dec
out
rorb
pusha
cmp
aam
xor
fsubrp
inc
das
cltd
mov
subl
fdivl
pushf
decl
sbb
nop
cwtl
fildl
and
int
jnp
cmp
xchg
aam
dec
popf
inc
dec
dec
js
int
pop
cmp
fiadds
out
outsb
cltd
xor
jo
in
jmp
lds
dec
push
jl
pop
mov
ja
movsl
sbb
popa
pmaxub
inc
daa
pop
mov
imul
or
lods
mov
inc
jmp
sub
fsubrp
pop
inc
dec
loopne
mov
loopne
inc
outsl
dec
popf
cmp
push
cmpsl
sbb
dec
jle
inc
push
adc
std
or
mov
mov
cmp
adc
dec
pop
int3
pusha
iret
mov
mov
cmp
ficoml
fwait
arpl
shll
mov
jge
inc
and
test
cmp
mov
inc
pop
pop
add
sub
imulb
cwtl
addr16
and
mov
gs
mov
aad
push
cmpsl
sbb
and
pop
popa
ljmp
and
jmp
rol
jb
jle
shll
pop
and
adc
and
dec
and
push
mov
std
sbb
aad
and
movsb
mov
xor
int
pop
addr16
sahf
cmp
shl
push
orb
dec
enter
and
or
ficoml
mov
data16
add
add
das
aas
mov
imul
fstpl
dec
lds
dec
lock
inc
ficomps
xchg
pop
pop
xor
loopne
test
mov
cmp
xchg
xor
dec
insb
jle
aam
std
movsb
loop
add
xchg
sub
std
outsl
inc
pop
pop
mov
lcall
out
cmp
push
adc
rcrl
inc
push
sbb
push
adc
out
sbb
repz
daa
adc
test
pop
mov
popf
fstpl
lcall
inc
daa
sar
add
or
jecxz
repnz
mov
sbb
out
jmp
popa
add
xchg
inc
rcrl
fmull
testb
aas
jle
andb
jp
xchg
xchg
sbb
jecxz
stc
fwait
pushfw
push
add
jle
js
lcall
mov
dec
xor
lds
andps
mov
jl
add
xchg
push
bound
fucomi
xchg
push
movsl
pop
rcrb
ret
jo
push
adc
mov
dec
adc
out
mov
push
adc
fidivl
xchg
adc
push
data16
xchg
push
adc
insb
sub
cmp
int
stc
adc
sbb
outsb
dec
insb
or
xchg
cmpl
arpl
mov
andl
dec
je
stc
test
mov
jle
mov
or
fdivs
push
pop
stos
fwait
push
inc
pop
das
push
adc
push
cmc
ljmp
int
xchg
xchg
push
adc
xor
inc
mov
push
lods
cli
fdivl
and
cmp
pop
fsubrs
jl
shl
push
out
adc
and
fildl
das
mov
in
cwtl
cltd
subl
outsl
repnz
mov
in
ret
rcll
movsl
cmc
dec
adc
mov
dec
xchg
lods
push
ja
jg
cwtl
jl
icebp
or
and
lds
xlat
leave
xchg
in
pop
sub
jmp
push
cmp
xor
dec
jp
or
adc
outsl
loope
das
push
adc
adc
test
loopne
xchg
add
jnp
iret
add
in
inc
mov
adcl
les
push
adc
mov
or
imul
sbbl
adc
repz
into
cli
test
call
dec
aad
inc
xor
out
mov
xor
or
int
push
cld
sahf
cmp
add
add
aad
push
mov
test
enter
xchg
ficompl
mov
clc
xchg
mov
mov
mov
mov
push
adc
and
sub
inc
rcrl
pop
pop
and
xor
lds
test
mov
shrl
out
faddp
inc
push
dec
pop
sbb
sbb
lds
sub
fwait
sub
dec
popf
sub
neg
mov
movsl
sti
frstor
negb
sub
sub
cmpsl
ja
cmp
cmc
xchg
addr16
pop
enter
loopne
pop
pop
cmp
cmc
aad
movsl
push
mov
les
mov
das
push
adc
dec
jbe
push
lods
or
aas
int
inc
jg
dec
mov
push
out
fmulp
jne
bound
and
mov
push
cmpsl
dec
mov
push
jmp
fadds
iret
pop
hlt
ljmp
jecxz
inc
fistpll
hlt
sahf
les
xlat
cmpsl
dec
jmp
mov
push
push
test
xor
faddl
xor
fwait
push
out
cmp
test
fsubr
push
stos
mov
pushf
int3
mov
cmp
ficompl
dec
inc
clc
into
mov
push
inc
inc
mov
sahf
xor
call
lret
adc
out
mov
enter
notl
ljmp
jmp
sub
or
add
sub
mov
cmp
test
scas
pop
mov
cwtl
mov
xor
or
stos
add
jns
xchg
call
cmp
or
sub
xchg
dec
push
cmp
maxps
sub
pop
aad
cld
pop
adc
stos
test
fs
stos
std
test
cmp
jno
scas
nop
xorl
sub
cmp
shl
push
popa
fwait
in
gs
insl
jae
insb
mov
test
iret
and
jne
jl
push
mov
and
or
dec
out
push
fucomp
adc
mov
mov
or
sub
xchg
cwtl
push
cmpsb
or
sahf
and
sub
dec
aad
fwait
stc
in
notl
cs
pop
outsl
test
insl
or
shlb
enter
stos
and
cmpsb
andb
fldenv
mov
cmp
das
push
adc
aad
popf
adc
adc
push
or
jge
jae
loop
and
xor
imul
adc
and
sbb
adc
add
cmp
flds
adc
lret
sbb
aam
or
mov
idivl
push
xor
sub
loopne
stos
int3
mov
faddl
adc
sahf
jbe
or
cmp
mov
push
jge
ja
adc
dec
jo
or
pop
adc
xlat
add
jae
adc
xor
xchg
rcl
pop
pop
and
dec
adc
das
fdivrs
push
popa
and
pop
adc
fs
stos
push
adc
lret
mov
dec
xor
incb
mov
cmc
ljmp
ss
out
push
fcomps
push
je
and
xor
cmp
jno
shl
aad
sbb
push
adc
cmpsb
mov
subl
push
movsl
sub
faddl
adc
jg
sub
sub
dec
ss
xlat
mov
xchg
push
pop
pop
jno
je
scas
and
dec
test
jns
xchg
mov
adc
mov
adc
sub
ljmp
fwait
jmp
aad
push
test
adc
inc
xchg
pop
cltd
add
adc
xchg
inc
cmpsl
dec
popf
add
test
push
push
andb
fistps
push
lock
dec
popf
xchg
xor
flds
adc
adc
jg
sub
cmp
lahf
aam
pop
adc
mov
std
leave
popf
cmp
dec
mov
or
fs
out
in
dec
xchg
mov
push
dec
jle,pt
cmpsl
dec
pop
icebp
mov
mov
sub
aad
sub
lcall
faddl
adc
xorl
mov
cmpsb
dec
cltd
lahf
lret
inc
lods
pop
mov
inc
out
shll
out
fimuls
xchg
adc
pushf
ljmp
in
popa
test
flds
adc
cmp
flds
adc
xchg
pop
stos
and
pop
adc
int3
xchg
push
adc
cli
xor
cmpsl
dec
pop
add
and
fcomps
std
pop
adc
mov
dec
jbe
out
and
jge
pusha
repz
stos
mov
imul
aad
outsl
dec
adc
sbb
adc
movsb
ds
dec
popf
dec
inc
testl
mov
adc
pop
sub
pop
sub
lods
loopne
push
add
aad
inc
sbb
adc
jl
or
xchg
jmp
lcall
xlat
lods
je
shll
lcall
popa
dec
pop
or
dec
jb
jo
adc
add
shll
jp
mov
sarl
inc
loope
xchg
sub
xchg
je
cmp
adc
pop
adc
push
mov
pop
adc
xchg
repz
frstor
fcmovu
mov
fsubl
andl
movsl
pop
push
pop
rcrb
add
movsb
push
adc
add
out
inc
push
jbe
adc
inc
leave
cmp
cmp
xor
leave
xor
pop
adc
jb
cld
fucom
lcall
movsb
insl
inc
cmpsl
loopne
push
flds
adc
jo
pop
adc
xchg
imul
jo
adc
sub
int3
repnz
movsb
sbb
iret
nopl
adc
inc
sbb
adc
pop
lods
adc
lods
pop
cmpsb
cmpsl
mov
pop
stc
lret
cwtl
adc
jae
sbb
fwait
daa
outsb
dec
das
aad
jb
shl
adc
out
and
pop
adc
fdivrs
adc
push
jno
xchg
push
adc
and
pop
adc
mov
pop
outsl
jnp
stc
out
jbe
push
mov
push
fdivr
pop
adc
adc
inc
sub
inc
js
or
and
test
push
and
test
jns
into
sbb
adc
sbb
int3
scas
or
out
dec
or
inc
and
clc
add
mov
sub
push
adc
flds
ret
cs
out
jo
pop
adc
shr
shrb
mov
pop
out
imul
cmp
sub
repz
xor
adc
dec
xchg
mov
stos
aad
lock
les
dec
je
pop
adc
dec
sbb
ja
cltd
inc
mov
int3
nop
mov
rol
lcall
shll
cmp
jmp
rcrl
adc
faddl
adc
lret
pop
adc
je
pop
adc
cld
inc
test
push
xchg
push
cmp
adc
fwait
cmp
in
leave
fwait
cmp
cwtl
dec
orl
test
int3
jb
mov
out
cmp
jmp
push
out
ficoms
or
mov
inc
pop
mov
jg
shlb
cmpsl
dec
jmp
mov
push
test
and
daa
sub
jmp
or
icebp
mov
lds
adc
push
jecxz
pushf
ret
ds
dec
popf
cmp
jmp
and
std
and
pop
lds
adc
fldl2t
or
jecxz
dec
popf
icebp
pusha
lds
adc
add
add
frstor
push
test
in
cmp
sbb
popf
push
cwtl
adc
inc
push
std
loope
push
test
stos
adc
pop
sbb
cmp
shrb
mov
or
out
mov
xchg
fnstsw
enter
add
bound
mov
mov
sbbl
mov
xor
mov
add
fdivs
test
adc
fcoms
arpl
pop
adc
int3
add
lahf
mov
mov
adc
cs
mov
dec
les
adc
adc
shll
cmp
aad
add
jno
adc
cmpsb
cmpsb
mov
push
adc
dec
push
lcall
jae
adc
cmpsl
xchg
test
adc
inc
push
cmp
rorl
das
mov
scas
lahf
jp
sub
xchg
push
adc
fs
dec
pop
dec
pop
mov
xchg
push
push
movsb
xor
std
pop
adc
stos
xchg
unpcklps
sarb
stos
inc
ds
pop
xchg
loop
call
cmp
xlat
ds
jmp
ret
push
mov
cmp
shlb
loope
dec
ljmp
adc
mov
scas
xor
mov
dec
fwait
cmp
pushf
shll
jae
adc
jnp
es
faddl
adc
dec
fimull
ss
inc
sbb
stc
sbb
cs
aad
jo
pop
adc
ss
jle
mov
prefetch
or
sub
out
lea
jne
jo
jno
adc
test
adc
sbb
adc
pop
jl
push
dec
iret
jno
dec
sbb
xor
xlat
scas
xor
das
add
and
mov
loope
ja
mov
xchg
add
lcall
adc
adc
or
pop
pop
and
ss
clc
mov
pop
scas
add
add
pop
adc
aaa
cli
ret
mov
in
fwait
ret
sbb
mov
sbb
pop
adc
movsl
pop
add
sub
stos
ds
aad
sbb
lds
adc
rcl
mov
mov
jnp
faddl
adc
ret
inc
test
and
and
lahf
movsl
out
jno
in
scas
add
adc
adc
stos
pushf
xchg
jle
jge
xor
pop
std
push
pop
lret
dec
aad
lea
lock
mov
movsb
pop
hlt
std
pop
gs
aad
mov
mov
xchg
sbb
stos
inc
aad
lds
adc
add
mov
push
sub
inc
fdivrs
adc
daa
clc
into
sbb
pop
adc
dec
mov
sub
adc
pop
jle
lods
add
outsl
je
pop
adc
lock
faddl
adc
push
mov
adc
adc
xor
lcall
jno
scas
mov
lds
adc
push
cmpsb
xor
fstpl
jo
pop
adc
sub
pop
imul
out
pop
jge
sub
push
lds
dec
retw
imul
xor
jo
mov
popf
add
nop
ljmp
mov
mov
testl
or
ja
mov
pop
adc
push
cmpsb
cmp
push
loope
dec
loop
fwait
push
cmpsl
outsb
mov
jno
insl
push
sub
xchg
roll
cltd
ret
imul
sarl
jbe
jmp
ret
js
pop
or
or
fildl
movb
loopne
inc
addl
or
pop
cmp
addb
pop
adc
fisubrs
lret
xor
cwtl
sub
cmp
cmp
jmp
movb
lahf
mov
or
jge
gs
jmp
lcall
outsl
mov
pop
adc
icebp
es
add
in
sub
push
cmpsb
cmp
mov
cltd
sub
cmp
xor
enter
orl
push
mov
pop
pop
insl
jne
pop
add
outsl
jecxz
pop
or
xchg
popa
movsb
dec
loop
cwtl
adc
inc
pshufw
adc
les
jo
adc
and
in
pop
adc
out
inc
push
repnz
cmp
imul
jmp
jnp
adc
roll
mov
pop
adc
xchg
cmp
and
inc
mov
sub
mov
pop
adc
adc
pop
cmpsb
dec
mov
lods
mov
test
mov
sbb
pop
or
ja
mov
pop
adc
aas
cld
jo
adc
mov
lds
adc
call
mov
xchg
add
hlt
cld
rcll
sahf
xor
xchg
push
pop
mov
les
sbb
adc
fstcw
push
adc
test
aad
push
scas
push
sbb
das
roll
push
or
pop
sub
aam
xchg
daa
push
xchg
out
xchg
add
cmp
gs
scas
mov
das
mov
jl
adc
and
adc
lahf
test
inc
xchg
mov
int
fisubl
dec
mov
jo
and
fnstsw
leave
test
mov
out
insb
jnp
xchg
push
adc
test
add
fstp
sbb
imul
lods
roll
sbb
xchg
push
adc
sar
inc
adc
sub
adc
sar
push
pop
adc
cld
pop
push
push
mov
jmp
ja
add
push
in
pop
jbe
mov
inc
push
fs
leave
call
cld
cltd
cwtl
jae
adc
dec
int3
pop
mov
ds
mov
dec
subl
add
out
or
xlat
shrb
and
push
outsl
sub
inc
in
or
pop
bound
stos
andl
test
mov
pushf
idivl
jae
xchg
insl
orl
push
dec
movl
inc
sbb
and
jb
out
and
inc
idivb
inc
fs
lock
std
pop
orl
stos
lods
std
lret
cmp
mov
test
xchg
faddl
adc
das
roll
mov
pop
test
lds
lods
jbe
xchg
adc
jo
pop
adc
adc
test
xchg
stos
addr16
mov
mov
xor
jo
pop
adc
push
pop
mov
int
push
xor
sub
imul
adc
out
jno
je
pop
adc
mov
fnstenv
pop
adc
cmc
add
jo
adc
test
lret
cli
shrl
cmp
jmp
cmp
in
push
test
dec
jae
push
inc
les
adc
lahf
push
lds
adc
push
sbb
push
adc
xor
cmp
shl
aad
nop
xchg
rcrl
mov
js
imul
dec
out
inc
fucomi
shll
rcrl
loop
enter
loope
xlat
out
rcrb
pop
mov
mov
sub
out
cmp
push
adc
int3
test
xor
lcall
xor
push
movsl
sbb
inc
adc
stos
and
pop
ror
incb
lods
push
and
bound
sub
xor
sbb
test
adc
lods
pop
mov
push
rcrb
clc
jbe
sub
mov
and
or
scas
pop
mov
ret
imul
scas
mov
das
pop
mov
icebp
dec
pop
or
jp
add
adc
pop
mov
ret
push
lods
shr
jle
mov
and
push
jp
or
push
push
movsb
cmpsb
cmpsb
adc
push
adc
xchg
xor
mov
test
inc
mov
xchg
clc
add
cmc
cs
sub
out
pushf
gs
pop
mov
lds
daa
cmp
or
cmp
cmp
lcall
mov
lods
adc
mov
test
into
sbb
lds
pop
pop
fwait
xor
and
dec
gs
arpl
mov
sbb
repz
mov
mov
lods
pop
lds
clc
jle
sub
lds
stc
jo
and
sub
push
cmpsl
fsubrs
xor
push
xor
scas
out
les
or
fildll
addr16
leave
mov
shrd
xor
jge
mov
mov
push
test
int
mov
ret
jge
aaa
pop
mov
mov
sub
jne
popa
mov
sub
mov
add
sbb
les
dec
fwait
dec
rorb
dec
addr16
fcmovbe
mov
push
xchg
jae
cmc
or
sub
xchg
push
fcoml
pop
js
test
adc
dec
aam
into
dec
pop
sbb
xchg
push
adc
fstl
jp
shlb
mov
jae
push
xchg
jl
cmp
or
inc
repnz
mov
push
hlt
loope
mov
mov
ficomps
rolb
lret
mov
pop
dec
adc
dec
jbe
loop
mov
adc
cld
jo
adc
mov
nop
scas
pop
aaa
pop
push
cmp
fs
and
inc
adc
lcall
jae
adc
shll
in
or
and
gs
dec
pop
inc
out
fwait
sbbl
mov
pop
rcl
push
ss
stos
test
jae
adc
fmuls
dec
xor
sub
test
out
ss
fbstp
gs
dec
fwait
stos
add
popf
fprem1
inc
push
adc
dec
lods
test
push
ret
sub
mov
aad
pop
jle
xor
jmp
mov
jae
adc
jb
insb
sbb
adc
es
jo
mov
sub
jl
push
or
jge
or
cmpsl
ficomps
mov
mov
test
push
lods
sub
and
fsubrs
pop
cmc
xchg
mov
sub
xor
mov
test
dec
popf
cmp
sahf
mov
ret
test
inc
push
fstpl
and
mov
frstor
adc
adc
inc
vmovups
inc
mov
sbb
mov
into
ljmp
popf
insb
ret
adc
push
sti
fndisi(8087
mov
andl
adc
mov
test
popf
scas
cwtl
popf
fs
cmc
pusha
scas
mov
xor
push
inc
std
popf
cmp
imul
cmp
adc
adc
add
push
cmp
imul
insl
dec
pop
or
jmp
adc
adc
or
ret
test
and
adc
and
inc
or
adc
shl
jns
std
insl
dec
push
test
adc
js
adc
movsb
mov
rcl
cmp
cmp
leave
pop
push
adc
inc
dec
lcall
daa
sbb
push
clc
sar
push
ja
mov
add
push
push
insb
dec
pop
or
lret
jo
adc
vmovhpd
sahf
out
fmulp
or
aad
insl
adc
pop
xchg
les
add
mov
push
gs
rclb
insb
dec
pop
or
lret
jo
adc
pusha
and
jmp
movl
adc
pop
cmp
gs
push
xor
mov
inc
rorl
jno
adc
adc
sti
sahf
sub
std
test
int
int
sub
push
fldlg2
xchg
push
adc
pop
jge
mov
stos
test
push
jl
pop
mov
cmp
adc
fcomps
mov
cmp
rcrl
rcr
fcompl
orb
lods
or
xor
mov
sub
dec
adc
push
test
ljmp
mov
push
out
sbb
jo
adc
out
sub
add
xor
pop
or
dec
es
aas
and
gs
fcmovu
or
jnp
jge
or
cmp
adc
adcb
imul
stos
fisttpl
int3
popf
mov
lds
movsb
dec
sahf
ret
daa
cmp
int3
inc
mov
jne
cwtl
fstps
call
xchg
push
adc
loopne
sub
jno
jae
adc
dec
or
arpl
cltd
xor
adc
jl
mov
es
inc
jne
xchg
popf
adc
jae
daa
jle
subb
into
mov
sub
fstl
jp
push
lods
adc
xor
pusha
imul
cld
xchg
push
adc
jge
jne
xchg
jle
xor
gs
data16
loopne
inc
repz
mov
test
push
xorl
ljmp
fdivr
pop
adc
push
push
gs
push
movsl
out
lods
adc
inc
les
adc
and
cmp
arpl
rcrb
push
mov
push
lahf
adc
enter
aas
outsl
psubd
inc
mov
sbb
shr
stos
dec
or
ror
movsl
shlb
adc
jb
mov
cmp
mov
enter
jecxz
stos
cmc
and
incb
mov
fcoml
test
adc
jb
jg
dec
lea
cwtl
imul
movsb
and
adc
sbb
lods
or
sub
fs
push
adc
cmp
in
stos
hlt
pop
pop
jb
std
cmc
add
or
loopne
sbb
loope
ficomps
hlt
cmp
jns
jbe
adc
lods
mov
xchg
cltd
stos
and
nop
loope
in
addr16
aad
mov
mov
mov
push
shrl
mov
fdivs
pop
xchg
push
adc
xchg
push
adc
daa
data16
pop
xor
pop
adc
cmp
or
loop
adc
add
aad
sti
mov
xchg
ret
mov
dec
popf
cs
lcall
adc
aad
cmpsl
mov
lret
aaa
scas
pop
dec
pop
leave
add
shrl
push
dec
shl
pop
or
aad
inc
in
pop
xchg
push
adc
cmp
or
add
aad
sti
mov
xchg
ret
mov
dec
popf
xchg
arpl
cmpsl
dec
cmp
jp
dec
jae
inc
xor
cmpsb
dec
xor
das
pushf
mov
icebp
mov
cmc
leave
jne
adc
mov
push
adc
mov
adc
movsb
mov
int3
fstpl
fdivl
dec
push
xchg
push
adc
fdivr
cltd
xor
fdivr
pop
adc
mov
lret
jmp
sub
push
fidivrs
pop
jmp
push
ficompl
inc
pop
mov
cmp
cmp
jne
popf
cmp
leave
mov
aas
stos
cmp
aam
mov
push
daa
xchg
sub
adc
push
shll
out
fmulp
enter
pop
stos
push
lods
pop
cmp
cmp
lods
pop
out
stos
pop
xchg
vmulsd
stos
outsl
shr
fisubrs
outsl
loope
xor
adc
push
and
mov
sub
lock
ja
or
fucomip
mov
add
push
imul
ja
pushf
push
or
add
in
and
fisubs
cmpsl
in
cltd
inc
pop
mov
cmp
mov
push
or
push
inc
or
pushf
push
or
cmp
or
add
xchg
push
adc
or
faddl
adc
std
adc
stos
push
enter
push
adc
lcall
std
pop
adc
push
mov
les
cld
sub
out
push
out
push
cmpsb
dec
ss
inc
pop
pop
popf
cmp
shlb
loopne
xor
adc
leave
jb
or
lcall
add
mov
sub
xor
xchg
subb
dec
and
loope
sbb
test
or
mov
dec
ljmp
in
jne
fmuls
out
pop
sub
push
inc
les
adc
fwait
xchg
das
push
aad
les
jmp
shll
cmpsl
pop
movsl
sbb
fisttps
add
stos
inc
xchg
cltd
or
pop
mov
mov
mov
inc
shl
xchg
push
mov
outsl
sbb
push
mov
sub
adc
out
add
popf
mov
sbb
push
adc
das
bnd
imul
pushf
xor
xor
fnstcw
push
jo
pop
adc
add
scas
jo
push
imul
enter
pusha
adc
pop
out
rcl
out
fwait
ljmp
mov
pop
add
jo
pop
adc
cmpsb
sub
frstor
jecxz
cbtw
ret
sbb
pop
or
xchg
test
ja
out
les
movsb
pop
stos
inc
jg
jno
adc
push
or
inc
xchg
aaa
mov
adc
sar
jae
jo
pop
adc
add
xchg
sbb
xor
popf
out
lea
xor
arpl
shrl
out
in
cmp
jg
or
push
iret
mov
inc
push
repnz
ds
pop
or
std
mov
jo
adc
faddl
adc
lcall
and
sbb
aas
jae
add
push
adc
outsl
xchg
dec
pop
or
push
add
adc
mov
xor
fdivs
xor
test
aad
sbb
shll
mov
scas
je
sbb
pop
or
ja
test
adc
ljmp
dec
out
push
push
lret
xchg
sub
push
xor
aad
repnz
jae
shl
aad
xchg
jmp
xchg
xlat
sub
cmp
cmp
sarl
push
inc
out
fmulp
add
xchg
push
dec
push
mov
imul
adc
pop
cmpl
jbe
fiadds
push
stos
mov
inc
pop
mov
sub
ja
cmp
or
fisttps
enter
scas
daa
fcoml
cwtl
xor
test
cmc
sub
jmp
xchg
mov
test
mov
jecxz
lcall
xor
cmp
pushf
mov
stos
inc
outsb
or
ljmp
aas
lcall
cmp
arpl
cmp
in
sub
cmp
push
sub
push
ret
dec
aas
dec
push
lret
xor
dec
popf
lret
sub
mov
fiaddl
or
push
mov
cmpsl
xor
lods
xchg
push
push
pop
and
and
xchg
and
mov
xchg
andl
push
pop
mov
jae,pn
ja
lods
add
pop
inc
cmpsl
sbb
mov
lcall
dec
xor
xchg
fsubs
in
aaa
mov
adc
loope
pop
in
gs
xchg
push
adc
mov
pop
dec
dec
popf
lods
adcb
ret
test
pop
adc
outsb
mov
pop
adc
inc
xor
shll
out
ficoms
cmp
pop
or
inc
rorl
jmp
dec
xchg
sub
sarl
xor
cmp
cmp
out
jns
std
mov
test
shlb
xchg
ds
mov
cmp
popf
sar
jo
adc
pop
xor
in
dec
cltd
xor
mov
dec
jmp
daa
call
jo
out
test
jnp
nop
xchg
flds
sarb
lret
xchg
pop
mov
jne
andl
testb
and
lcall
push
lahf
cmp
in
mov
fmul
push
test
shrl
lahf
and
in
xchg
das
push
imul
out
aas
cld
jo
adc
stc
and
sahf
mov
sbb
pop
push
leave
jb
mov
fdivrl
dec
pop
or
repnz
cld
jo
adc
icebp
xor
adc
inc
adc
pop
cmp
lret
mov
stos
sbb
dec
imul
xchg
push
push
push
cli
push
push
or
push
sbb
pushf
pushf
push
or
sub
add
xchg
push
adc
inc
aas
jmp
lods
xor
out
dec
cmp
fdivr
pop
adc
outsl
sbb
ds
mov
pop
mov
clc
mov
xorps
adc
imul
dec
adc
lret
push
insb
movsl
pop
and
inc
push
xchg
and
iret
push
movsl
pop
mov
or
mov
adc
clc
xchg
fmuls
adc
mov
and
push
stc
sbb
rcr
nop
and
dec
cmovl
or
cltd
mov
jno
adc
or
sbb
cli
aas
dec
sbb
rorb
dec
mov
dec
imul
shrl
pusha
xor
or
cs
add
adc
das
push
adc
data16
adc
cltd
cld
aaa
xchg
mov
adc
mov
clc
pop
outsl
icebp
decb
aam
cltd
inc
int
mov
xor
fmuls
cld
dec
mov
lods
fdivs
outsl
leave
enter
insl
ret
stos
clc
nop
jmp
fwait
xor
cmpsl
cmp
test
aad
xchg
fcomps
ljmp
pop
test
gs
and
lea
xchg
push
fwait
aam
dec
popf
sub
push
fidivrs
jne
push
and
cmpsl
cltd
xor
rcr
cmpsl
fnstenv
push
adc
ja
mov
cmc
mov
les
adc
mov
pop
adc
out
inc
xor
shll
or
stos
pop
ljmp
cmpsb
dec
aaa
inc
push
fstpl
push
cmpsl
cmp
add
hlt
sahf
aad
clc
adc
jb
xchg
test
sbb
pop
or
cmp
jmp
adc
lahf
mov
and
pop
cwtl
xor
mulb
cmpsl
dec
jmp
daa
call
xchg
ja
xor
aad
pop
test
cmpsb
cmp
sbb
in
dec
popf
cmp
adc
call
popf
mov
jp
std
xchg
mov
insb
dec
pop
or
lret
jo
adc
pop
or
cmp
mov
xor
adc
faddl
adc
and
or
xor
pop
and
mov
js
mov
adc
push
jo
pop
adc
ljmp
out
leave
lret
ljmp
mov
int
mov
inc
popa
ja
jb
subb
jle
mov
push
push
cld
pop
aam
cltd
jb
mov
lds
pusha
leave
fidivrs
push
and
mov
mov
mov
mov
dec
push
loopne
and
enter
ret
test
mov
insb
push
aas
repz
ljmp
dec
push
loopne
out
push
xchg
cmc
popa
push
inc
inc
in
push
cmpsb
dec
in
mov
cmp
bound
flds
adc
roll
mov
es
mov
cld
pop
fbld
sub
pop
adc
pop
add
stc
out
test
pop
adc
xchg
sub
adc
rolb
dec
pushf
cmp
sub
pop
adc
mov
mov
lcall
test
pop
adc
sahf
cmp
flds
adc
pop
ja
mov
xchg
sar
insb
insb
pop
fwait
nop
fs
aad
insb
sub
sbb
movsl
shll
std
stc
into
and
sub
inc
out
inc
xchg
and
and
cmp
ret
push
roll
mov
xor
aas
or
inc
pop
and
clc
xchg
stos
add
ss
pop
out
shrb
insl
or
sti
pushf
sbb
nop
icebp
mov
fdecstp
out
cli
xor
insl
pop
cmp
dec
sarb
cmpsl
add
lods
push
add
das
mov
pop
shr
pop
mov
mov
out
jne
dec
push
sbb
and
lahf
jb
push
sbb
xchg
fcoms
test
xchg
push
divl
bsf
addr16
insb
daa
leave
pop
daa
jge
cld
or
daa
shl
pop
cwtl
or
cmp
sub
cltd
push
incl
xor
in
jp
addl
mov
cmpsl
cs
jbe
test
loop
test
adc
mov
insl
push
loopne
adc
and
test
add
or
dec
imul
test
cmpsb
cmp
lea
sbb
dec
xor
push
rclb
and
inc
mov
jle
xchg
mov
movd
cmp
cli
fisttps
sbb
sbb
mov
xlat
ds
sbb
fstps
cmpsl
or
adc
xor
imul
sbb
and
ljmp
push
fsubr
pop
stos
add
mov
xor
pop
mov
lret
jmp
adc
dec
jmp
inc
stc
dec
cltd
xor
xor
and
push
aad
dec
cld
jo
adc
sbb
adc
push
adc
xchg
int
adc
iret
adc
iret
lret
push
pushf
pop
movsl
inc
xlat
mov
xor
mov
cmp
in
and
mov
test
outsb
pushf
daa
push
stos
push
lods
nop
jno
int
loopne
mov
dec
jp
sub
mulb
into
adc
add
pop
inc
pop
mov
mov
shll
pop
push
xchg
pop
xor
adc
leave
inc
test
addr16
and
pop
fcmovbe
lcall
sub
jmp
mov
test
fsubr
in
insl
xor
adc
and
nop
stc
lock
jp
cmp
add
xor
shl
outsb
dec
push
lret
lods
pop
mov
mov
xchg
popa
cwtl
dec
out
mov
sub
dec
test
mov
push
pop
sub
cmp
or
adc
add
pop
dec
xor
sarl
add
inc
jmp
xchg
fdivr
shll
xchg
out
inc
ret
fidivrs
cmpsb
lret
jno
adc
or
hlt
pop
mov
mov
inc
int3
push
push
and
movsb
mulb
lods
sar
data16
dec
sub
cltd
cmp
in
pop
cmp
jl
cwtl
insb
push
fsts
dec
cmp
add
loop
pusha
fisttpl
mov
popf
sub
hlt
stos
dec
int
jno
dec
loop
add
jg
std
pop
jo
sub
nop
loope
mov
jne
scas
mov
xchg
push
adc
push
cmpsb
xor
cli
aad
mov
fsubr
shll
sbb
outsl
xchg
inc
dec
push
sbb
mov
test
cmp
pop
mov
adc
imul
adc
mov
sub
adc
cmpsb
cmp
add
push
sub
fsubp
mov
cmp
hlt
xchg
jo
xor
push
adc
outsl
dec
jnp
jge
adc
adc
je
int3
xchg
push
iret
mov
inc
cmpsl
adc
mov
test
shlb
mov
pop
adc
loop
lock
cli
fisubl
repnz
adc
daa
mov
jg
push
adc
fnstenv
xchg
cmp
mov
in
pop
ds
mov
or
sti
sarb
notl
dec
lds
fnstenv
in
and
mov
pop
adc
std
shll
push
adc
cli
pop
inc
movsb
jo
roll
add
mov
int
mov
xor
bound
xchg
in
push
mov
pop
and
jae
pop
stc
mov
sub
mov
pop
sbb
sbbb
pop
fdivrl
dec
xchg
hlt
jmp
or
or
mov
mov
fisttpl
into
in
mov
lods
lahf
push
cmp
jmp
mov
leave
jnp
jmp
add
add
mull
mov
mov
push
adc
imul
imul
or
stc
cwtl
or
sbb
add
int
test
leave
jo
or
adc
fisttpl
andl
cmp
cmp
jo
xchg
add
push
jl
das
mov
in
cwtl
jno
int
lds
cs
add
mov
leave
gs
pusha
in
adc
imul
lods
inc
or
dec
add
inc
mov
xor
adc
dec
jbe
imul
stc
lock
jp
hlt
xchg
xchg
add
pop
cwtl
addr16
or
or
cs
aad
mov
into
ljmp
inc
dec
les
jg
jmp
sub
xchg
pop
pop
push
fnstcw
mov
out
faddp
dec
cmc
cs
and
pusha
test
insb
dec
xchg
adc
jmp
subl
test
inc
adc
jmp
fistpl
xchg
or
es
push
push
and
mov
xchg
cmp
dec
push
rcrb
pop
ret
jb
test
test
and
pop
loop
inc
imul
shll
movsb
jp,pt
ljmp
cmp
mov
mov
lahf
push
in
pop
fcmovb
ja
jb
enter
test
scas
cmpsb
dec
xor
push
cmpsl
loope
mov
imul
inc
cmpsl
sbb
nop
jmp
lahf
lret
push
or
xor
cmpsl
dec
movsb
xorl
mov
adc
and
push
cmpsl
loope
mov
leave
outsl
dec
popf
scas
ja
jno
enter
test
dec
cltd
sahf
int
out
push
cmpsl
dec
movsb
xorb
xchg
push
push
dec
mov
push
adc
pop
lahf
int3
sahf
xor
cmp
loope
adc
mov
hlt
sub
fucomip
pop
cmp
mov
lret
in
loop
inc
xlat
jmp
mov
clc
pop
jne
cmc
jg
push
sti
fnclex
push
jne
xor
cmpsl
loop
dec
push
dec
shll
out
ficoms
rolb
push
push
cmpsb
loopne
inc
xlat
test
dec
movsb
subb
pop
clc
faddl
cmc
inc
inc
push
sbb
inc
xor
add
and
jmp
dec
int
jg
loopne
sbb
push
stos
push
es
shrl
fs
nop
arpl
push
adc
mov
mov
jle
int
and
fsubr
fstpl
ror
mov
popf
add
adc
sbbb
adc
mov
daa
fucomip
jp
nop
mov
stc
and
add
and
stos
lea
pop
xlat
out
aad
xchg
jle
arpl
inc
lret
push
push
outsl
and
adc
mov
or
xchg
mov
icebp
lods
inc
iret
push
out
out
fwait
push
or
jo
adc
push
stos
out
lock
add
inc
pop
cmc
add
xor
adc
jb
cmp
enter
testb
dec
dec
stc
movsb
cmp
scas
jnp
pop
sub
es
lret
repnz
add
fwait
xchg
jecxz
imul
into
pop
cmpsb
and
xchg
stc
lret
sub
mov
mov
jbe
sbb
shlb
mov
cmp
outsl
push
stc
iret
hlt
mov
sbb
adc
loope
cmp
adc
push
adc
stc
mov
outsb
dec
imul
add
out
je
or
into
mov
lret
pop
test
pop
mov
push
push
bswap
sbb
out
pop
mov
ljmp
cmc
mov
push
cmc
mov
pop
hlt
inc
add
jbe
insb
mov
imul
loopne
dec
cmc
or
mov
sbb
mov
mov
jge
dec
adc
scas
pop
mov
in
lahf
clc
into
movd
xchg
in
lea
pop
sub
mov
or
sbb
outsb
sbb
cmpsl
push
call
cmpsl
dec
mov
push
fsubs
adc
out
push
pop
stos
and
out
cmp
dec
popf
mov
cmp
imul
cs
cmpsb
dec
in
cmpsb
push
push
fcompp
test
dec
mov
in
sbb
sbbl
push
stos
push
notl
adc
cmpsb
sarl
jl
rcr
ja
cld
xor
aaa
jne
jg
inc
pop
push
sub
cltd
mov
push
sub
xlat
mov
add
adc
mov
lahf
imul
xor
mulb
push
mov
lret
add
cmpsl
push
mov
ret
and
xchg
stos
push
add
gs
jp
daa
sbb
jb
aad
xor
jae
fstpl
jmp
fsts
adc
jb
nop
sub
jne
or
inc
jp
dec
push
loopne
fwait
pop
xchg
cmc
bound
fidivs
inc
pop
dec
cltd
xor
xor
sbb
cmp
jmp
orb
and
fstpl
cmc
bound
daa
push
mov
test
pop
mov
push
adc
loope
cmpsb
in
and
imul
pop
call
ja
out
mov
mov
inc
push
and
cmp
dec
loope
lahf
fucomip
or
fnstsw
pop
push
and
mov
gs
or
xor
adc
imul
shl
adc
mov
adc
pop
fnstenv
sub
addb
loop
aad
push
fstpl
jg
push
ds
dec
cmp
int
data16
cld
mov
add
cmp
ljmp
movb
jmp
mov
dec
loop
push
aad
leave
mov
and
ret
xlat
cmp
fldl
dec
adc
gs
addr16
push
pop
cmp
sbb
xchg
in
xchg
ja
cmpsl
push
cli
rolb
cmp
sub
pop
pop
and
ds
popf
rcrb
ret
shll
lods
fistpl
insl
lock
movntq
out
mov
cmp
add
andb
push
mov
xor
mov
stos
movsb
cmp
inc
addl
stos
out
and
cwtl
sbb
pop
gs
frstor
sbb
shrl
jne
mov
jle
and
repnz
imul
shlb
xor
mov
dec
mov
and
jl
xchg
les
adc
sti
jae,pt
lcall
je
test
imul
lods
xchg
fistpll
outsl
movsl
std
push
cwtl
and
xor
sub
dec
mov
hlt
adc
pop
push
push
es
int
cmpsl
pop
imul
add
fs
push
mov
pop
jno
jle
daa
add
xorb
fnstenv
lcall
in
push
jecxz
ljmp
mov
stos
inc
xchg
jecxz,pt
adc
mov
test
lret
fwait
mov
add
inc
mov
push
mov
enter
push
dec
gs
jl
outsb
ffreep
jno
lcall
outsb
mov
mov
cmp
add
xchg
cmpsb
inc
pop
or
sbb
mov
cmp
mov
xor
pop
inc
adc
ja,pn
add
sbb
dec
adc
jle
sbb
test
out
jns
int
pop
mov
mov
or
mov
sbb
adc
jge
call
inc
mov
gs
ret
add
inc
cltd
dec
cltd
xor
jo
xchg
sbb
cmpsb
in
add
stc
ljmp
mov
loopne
inc
mov
add
dec
jb
js
enter
xor
adc
dec
mov
in
mov
push
out
mov
sti
popf
jg
stos
mov
icebp
mov
mov
test
lcall
mov
xchg
pop
mov
mov
cwtl
push
rorl
popf
nop
popf
daa
xchg
shlb
rclb
mov
pop
mov
adc
leave
inc
xchg
adc
adc
jmp
pop
mov
dec
inc
mov
mov
dec
sub
xor
push
lods
rorb
ss
lret
inc
pop
js
lds
pop
sub
aam
fiadds
aaa
lea
adc
lds
ret
dec
pop
aad
push
shlb
fidivrs
adc
ljmp
xchg
mov
cmp
dec
cmp
xchg
sahf
insb
push
cs
fmuls
mov
push
cmpsl
dec
popf
mov
dec
mov
add
push
push
push
push
je
int
inc
les
push
lds
pop
sub
leave
stos
jno
ljmp
push
gs
icebp
jnp
sub
bound
push
cmpsl
and
cmp
sub
std
insl
outsl
sub
or
in
cld
cmpsl
les
cmpsl
dec
jmp
imul
test
fstpl
xchg
aam
pop
mov
cmp
int3
outsb
xchg
pusha
mov
mov
stos
stos
or
cmp
pop
xchg
je
scas
pushf
mov
leave
leave
enter
imul
scas
pushf
adc
aad
or
je,pt
scas
pushf
mov
leave
pop
or
ja
cmp
and
xchg
outsl
or
daa
int
pop
cmpsl
dec
popf
mov
cwtl
dec
jnp
sbb
mov
in
mov
inc
fimuls
cmp
roll
xlat
ja
dec
xchg
push
sub
in
and
mov
dec
sahf
cmp
sbb
popf
daa
mov
add
push
mov
aas
insl
cmp
movsl
dec
fwait
inc
dec
adc
aad
fwait
cmp
popa
shlb
pop
and
sub
jg
push
mov
in
jnp
sbb
xor
fiaddl
repnz
lods
icebp
cltd
mov
imul
and
pushf
and
inc
mov
push
loopne
adc
cli
in
fstpl
xchg
jle
icebp
push
fs
imul
daa
in
adc
dec
push
sarl
les
orl
push
outsl
xchg
or
and
push
cld
js
icebp
sub
and
sbb
pop
push
rcll
pop
sbb
sbb
fs
and
sub
dec
push
cmp
inc
or
loopne
test
cmpsb
dec
cld
out
xor
mov
xchg
cmc
in
sahf
test
in
or
mov
aam
ja
jne
repnz
cmp
push
inc
cmp
push
xchg
fwait
insb
icebp
lret
adc
stos
loopne
fs
out
push
in
adcl
or
negl
std
mov
mov
imul
dec
xor
mov
jb
insl
pop
out
das
lods
fdivs
sahf
test
xchg
cli
popf
mov
mov
sub
sub
add
in
add
xchg
cld
sub
and
imul
cmp
mov
into
int
outsb
shlb
mov
in
fs
shl
pusha
ficomps
stos
shl
push
fdivl
loopne
mov
int
les
popf
cmp
push
cmp
ret
push
shrl
out
movsb
fstps
adc
sbb
push
lods
mov
les
adc
fsub
ret
in
orb
imul
les
inc
pushf
cmp
insl
clc
sbbb
outsb
inc
xlat
loope
xchg
push
pop
pop
clc
cmp
jnp
test
pop
adc
stos
push
fstpl
cltd
mov
daa
pop
mov
cmp
mov
push
and
xchg
inc
aad
adc
pop
adc
sub
jb
int3
sub
dec
popf
dec
into
push
pop
mov
or
pop
adc
or
nop
cld
cmpsb
xchg
pop
adc
fwait
js
xchg
cmp
fisttpl
lret
or
and
pop
es
push
nop
and
xor
pop
adc
cli
cmp
hlt
mov
lcall
aad
mov
in
mov
push
pop
cmc
test
pop
sub
out
cs
or
mov
cltd
mov
mov
decl
adc
jns
mov
ss
jle
push
pop
fistps
jns
insl
mov
mov
lds
out
mov
and
add
fsub
into
inc
inc
pop
cltd
xor
repnz
adc
push
cmp
lods
je
rorl
cmp
adc
fldl
push
ret
test
int
mov
dec
popa
sub
mov
ljmp
inc
cwtl
xor
jo
xchg
adc
jmp
add
in
and
add
les
adc
loope
ds
decb
dec
jnp
shlb
out
ficomps
or
ret
push
lods
fdivl
jecxz
inc
mov
cmp
sub
dec
add
adc
push
dec
push
dec
adc
and
frstor
out
popf
jb
xchg
sub
pop
cmp
push
xor
and
into
leave
cld
mov
xor
cmpsl
and
cmp
xor
jae
push
mov
lds
iret
dec
shll
popa
into
and
in
lds
popa
sub
enter
lcall
dec
lahf
xor
outsl
lds
push
insl
insb
aaa
dec
shr
ret
addr16
jno
jbe
nop
arpl
mov
adc
xchg
jge
xor
sub
xchg
lahf
dec
sbb
outsb
jo
subb
sub
lcall
filds
shlb
push
aad
push
fs
jl
add
cli
notb
in
lods
or
nop
jg
sahf
inc
mov
pop
or
mov
add
adc
les
adc
mov
les
adc
mov
pop
push
subl
cltd
outsl
adc
or
xchg
mov
inc
mov
xor
pop
or
lea
lcall
aad
lret
add
sub
lret
stos
fidivs
outsl
paddd
es
add
pop
sbb
gs
mov
rorl
xor
call
popf
xchg
push
in
enter
test
push
jnp
test
inc
pop
and
movsl
lds
lcall
add
dec
scas
mov
jl
es
orl
fstl
enter
shrl
aas
shll
xor
adc
cmp
rcll
popf
pop
gs
add
pusha
cmpsb
or
sbb
add
adc
mov
pop
cmp
cld
jo
adc
out
adc
mov
js
adc
lods
testl
pop
cmp
add
cmp
cmp
sub
loopne
dec
int
sbb
fdivr
mov
xor
adc
daa
sbb
jmp
and
rcll
or
js
divb
pushf
mov
push
loope
xchg
sbbl
sahf
fwait
sub
shl
inc
jp
cmp
mov
arpl
mov
incb
mov
test
clc
jno
xchg
sahf
shrb
pmaddwd
inc
xchg
movsb
pop
xor
mov
jne
out
cmp
int
cmc
add
push
adc
pop
mov
gs
inc
sahf
xor
xor
out
jbe
fst
push
sub
out
push
fcmove
jle
ret
inc
outsb
pop
ficompl
inc
dec
adc
les
mov
and
int
mov
aad
enter
pop
ljmp
pop
int
adc
lods
loope
dec
add
not
jg
push
adc
fistpl
xchg
fiadds
mov
stos
push
pop
fisubrs
jl
push
adc
fwait
je
dec
xchg
cmp
movsb
mov
adcl
pop
shrb
pop
adc
test
adc
call
in
xorb
aaa
xchg
pusha
adc
arpl
in
and
push
pop
mov
sub
pop
leave
add
leave
ret
xor
in
push
inc
inc
xor
rcrl
mulb
mov
mov
add
leave
ret
pop
pop
ficoms
add
outsl
aas
cmp
bound
popf
jge
cmp
inc
gs
aam
sahf
js
sub
pop
jl
xchg
repz
lods
sahf
repz
add
cmpsl
adc
stos
inc
push
jp
shll
movsb
sub
in
cmp
mov
mov
dec
int
ljmp
stos
add
and
test
ret
bound
push
inc
icebp
or
add
std
sbb
ret
cli
inc
test
shl
arpl
fldt
imul
and
dec
push
xor
and
lret
jl
push
test
jmp
loopne
push
sahf
cmp
push
sub
repnz
loop
add
or
fnstenv
xchg
xor
stos
xchg
jne
ret
xor
mov
pop
pop
sub
lods
add
fcmovu
dec
mov
xchg
scas
xchg
cmp
jg
adc
jp,pt
mov
ja
jecxz
stc
in
inc
fsubl
jl
sbb
aas
pop
repz
adc
sub
and
roll
test
sti
pushf
sbb
ret
shrb
loopne
mov
add
mov
repz
and
mov
out
add
cmpsl
pop
movsb
and
inc
lock
jecxz
sbb
sahf
fwait
scas
aaa
inc
subl
inc
pop
cmpsb
lahf
dec
mov
flds
clc
xchg
daa
add
mov
cmp
stc
inc
jns
and
mov
sub
push
insb
pop
inc
mov
jge
in
popf
test
push
int3
or
stos
push
mov
mov
or
adc
add
mov
mov
jnp
mov
pop
xchg
adc
inc
and
fsub
and
xchg
cs
out
aam
or
insl
rcrl
jg
sbb
fwait
dec
test
inc
iret
mov
in
repnz
inc
jo
mov
idiv
add
pop
push
mov
ds
aam
adc
insb
cltd
lcall
jo
jle
cmc
dec
in
adc
cld
cmp
or
mov
pop
ljmp
notl
arpl
jecxz
adc
pop
dec
incl
stos
dec
add
mov
pop
rcrl
push
xor
movsb
test
shrl
stos
mov
inc
fdivrl
stc
jle
out
push
lods
arpl
sbb
lds
adc
cmp
int
mov
xor
lods
arpl
pop
sbb
ja
stos
inc
add
mov
pop
rcrl
fmul
jle
decb
sbb
push
inc
push
inc
in
adc
insl
aam
mov
xchg
cmp
mov
cmp
int3
dec
push
cmp
jp
jmp
lods
mov
mov
pop
loop
cmp
flds
pop
fcompl
adc
lds
adc
pop
dec
test
int3
pop
jle
ds
test
push
cli
pop
mov
dec
add
lock
adc
pop
jmp
loop
sarl
orb
sub
lcall
popf
mov
popf
out
push
popf
cmp
pop
leave
dec
loop
fsubrl
data16
dec
jbe
cmc
rorl
sbb
dec
ja
mov
xchg
add
jo
push
push
sbb
fucom
pop
cmp
leave
sbb
sti
rorl
xorb
inc
cmp
rcrb
mov
stos
lods
sub
ss
movsb
fmul
jg
push
lods
and
cltd
insb
dec
icebp
adc
fstps
xor
loope
pop
mov
je
cmpsl
adc
sub
xor
push
fucomi
push
jecxz
add
nop
sub
mov
insb
pop
mov
ret
add
test
push
adc
notl
loopne
and
mov
ret
je
sub
fwait
daa
lret
lds
sahf
sub
int3
pop
lods
shlb
sbb
jmp
shrl
mov
jp
add
lods
cmpsb
outsb
and
daa
sbb
push
sub
repnz
add
mov
lahf
push
inc
fistps
pop
mov
rclb
xor
sub
call
dec
mov
clc
aas
scas
mov
out
leave
mov
pushl
std
add
cmp
pop
aaa
iret
test
fucomi
push
xor
sbb
sti
mov
out
les
sahf
xchg
pop
pop
popa
xchg
std
fldenv
hlt
outsb
mov
mov
loope
pop
into
jno
rcll
sub
outsb
lahf
lock
cmp
xor
inc
push
das
jge
clc
mov
mulb
xchg
mov
mov
xchg
cmp
xor
icebp
stos
push
rorb
int
or
and
bound
hlt
push
jp
cli
and
xor
sub
add
popf
adc
lret
rcrb
add
push
jle
sahf
pop
lods
push
push
mov
cmpsb
jge
sbb
aam
pop
pop
stos
xchg
sti
test
les
vaddsd
add
adc
btr
fcmovnu
mov
xchg
jg
inc
and
fbld
jecxz
cmp
push
adc
ljmp
out
inc
push
sbb
js
fbld
std
xchg
sbb
push
add
fnsave
push
adc
push
outsb
xor
inc
jmp
sbb
fdivl
test
sbb
sub
data16
arpl
scas
pop
test
aaa
or
cmp
pop
in
and
sti
ja
add
inc
notl
inc
pop
ljmp
fcomps
pop
lods
mov
adc
jno
dec
repnz
jle
loop
adc
mov
xchg
jno
add
pop
arpl
add
mov
mov
xchg
icebp
iret
pop
jl
decl
nop
cmc
imul
ret
and
insb
adc
int
lods
add
aas
push
and
xor
adc
xchg
rcrb
enter
adc
sub
leave
test
push
xchg
and
jmp
les
pop
add
adc
loope
jne
xor
cmpsl
xor
add
cmp
enter
inc
mov
adc
xor
mov
push
pop
push
xor
pop
loope
ja
movsl
xor
cwtl
outsl
xchg
sti
test
jne
jo
sub
ja
cs
fwait
imul
sahf
mov
in
cli
frstor
xchg
xor
outsb
inc
or
pusha
pop
xchg
add
adc
pop
idivb
push
aad
cld
jo
adc
cmpsw
fwait
mov
pop
pushf
cmp
pop
and
sub
cmp
insb
mov
sbbl
push
stos
push
daa
adc
mov
imul
mov
lret
popf
jl
xor
adc
fldcw
push
cli
add
inc
out
xchg
pop
jbe
cmp
ret
out
lods
cmp
sbb
push
shl
pop
dec
pop
mov
adc
fucomi
call
mull
inc
dec
and
jp
jg
aas
stos
fnclex
inc
pop
xlat
daa
fs
push
dec
bound
cmp
push
inc
loope
or
xor
lcall
adc
loopne
xchg
add
jbe
jp
pusha
fcmovu
aad
and
xchg
mov
dec
mov
pop
sub
jle
mov
fidivrs
push
adc
sti
push
cmp
cmc
gs
cmp
pop
popf
popa
lods
cmp
xlat
fwait
out
fisubrs
daa
push
stos
push
lods
nop
jo
xor
adc
pop
push
dec
ja
jb
adc
jno
ret
lret
or
lods
pmulhuw
mov
cmp
sub
test
push
sub
inc
push
fucomi
fwait
daa
and
or
push
lods
push
add
dec
bound
fs
addr16
mov
cmp
adc
jmp
mov
pop
mov
stos
ds
mov
sbb
mov
aam
ret
mov
lcall
adc
addb
xorb
push
jo
mov
iret
mov
adc
cmp
sbb
lea
lret
rcrb
cmpsb
rcll
xchg
xchg
mov
adc
dec
lods
outsl
insl
leave
add
sub
jge
lret
pop
dec
push
fstps
in
and
pop
imul
dec
cmp
xor
scas
pop
insl
mov
das
add
shlb
cli
ds
jecxz
jle
xor
lcall
fsubrl
cwtl
into
cmp
rep
xchg
push
mov
push
add
pop
push
add
gs
add
clc
push
add
ja
add
movsl
push
add
xchg
push
add
movsl
push
add
scas
push
add
clc
push
add
clc
push
add
gs
add
and
adc
push
add
call
push
add
in
push
add
in
push
add
gs
add
clc
push
add
add
push
add
clc
push
add
clc
push
add
neg
dec
in
rorb
test
xor
testl
in
pop
xor
nop
ja
and
inc
push
sub
dec
imul
cmp
imul
in
xchg
push
adc
add
out
mov
cs
outsb
cmp
out
xor
in
bnd
mov
std
sbb
jmp
and
mov
rcll
cmc
rolb
mov
mov
xchg
pop
pusha
outsb
push
or
xor
shrl
mov
sbb
loope
adc
fdivl
inc
icebp
or
and
jne
setle
cmp
add
roll
pop
jae
jg
mov
pop
cmp
leave
adc
std
pop
out
pop
rolb
sub
sub
lock
inc
push
and
adc
adc
pop
cmp
loope
popf
cs
cmp
int3
add
stos
xor
ficoms
movzwl
mov
daa
adc
pop
pop
cmp
shlb
or
scas
fucomip
push
pop
fs
fwait
mov
mov
rorl
cld
rolb
sbb
xchg
add
loopne
daa
sbb
fcmovbe
mov
sbb
add
add
jle
scas
shll
jg
push
pushf
popf
gs
aad
sub
inc
pop
cmp
ret
fsubrs
popf
cmp
sbbb
jb
fistpll
cwtl
adc
loopne
daa
adc
pop
and
stc
dec
lds
test
lea
push
cmp
leave
adc
pop
loope
cmp
rorl
cmp
mov
adc
fists
sbb
push
mov
add
cmpsl
sbb
xlat
lret
xchg
push
mov
push
cmp
fidivl
push
mov
cmpsb
arpl
shll
add
and
mov
sti
rol
inc
fsts
int
shrb
cwtl
test
jne
adc
sub
dec
loop
push
out
outsl
pop
xchg
adc
pop
jnp
daa
and
sub
popf
add
shl
lock
je
out
inc
icebp
lcall
sub
push
out
mov
push
inc
pop
call
loop
push
sti
sahf
sub
imul
sarb
call
cmp
add
pop
out
hlt
add
leave
mov
cmc
ljmp
out
and
arpl
mov
ret
sub
xor
stos
push
xor
pop
inc
nop
mov
adc
out
push
or
or
push
adc
mov
pop
or
mov
or
fmulp
leave
cmp
and
aaa
xchg
mov
cmp
je
sub
mov
inc
mov
into
inc
int
pop
out
pop
cltd
pop
jae
mov
sahf
sbb
lds
dec
lods
sub
fists
mov
out
cli
f2xm1
xchg
and
and
push
xor
shrb
popf
cltd
or
or
push
adc
shlb
inc
lds
stc
sbb
lret
mov
out
pop
mov
adc
jbe
or
mov
or
ds
cwtl
or
cld
push
loop
fstpl
out
mov
inc
jmp
pop
shl
xchg
push
mov
js
mov
out
divl
shlb
bound
out
mov
sarl
or
aaa
and
loop
mov
fwait
and
mov
mov
xchg
mov
bound
xor
sbb
xchg
je
xor
enter
push
jne
adc
sub
cmp
lea
cmpsb
daa
xchg
pop
aad
ss
sbb
push
ss
int
dec
and
enter
or
push
push
pop
or
pop
dec
cmp
ret
and
lods
mov
lods
icebp
sahf
cwtl
jbe
inc
cmp
sub
mov
push
je
add
xchg
cwtl
loope
push
jle
and
cmp
add
push
incb
xor
daa
mov
stc
fmull
inc
sub
mov
nop
push
das
mov
lret
push
aas
mov
adc
pop
push
xchg
dec
push
rcrb
cmp
arpl
add
lock
je
inc
jecxz
pop
mov
or
fidivrl
sbb
mov
jecxz
inc
lock
daa
dec
mov
nop
mov
mov
hlt
jmp
adc
adcb
add
jp
push
or
mov
in
lea
pusha
jmp
mov
std
shll
xchg
cld
pushf
cmp
push
adc
adc
xchg
test
jmp
je
les
mov
leave
shrl
jl
pop
add
mov
mov
pop
stos
sub
jmp
pop
xor
mov
fwait
es
fisubrs
outsb
pop
mov
inc
jbe
xchg
mov
cmp
sbb
sub
out
faddp
inc
sbb
jmp
push
cmp
cmc
or
loope
popf
loop
jbe
mov
pop
sarb
dec
call
jge
xor
stos
mov
dec
popf
dec
iret
xor
shll
out
inc
add
daa
sub
pop
mov
rorl
mov
mov
out
fidivrs
add
fsubrp
inc
repnz
xor
arpl
mov
cmp
push
cmc
dec
popf
cmp
push
xor
push
xchg
in
dec
nop
and
mov
adc
dec
mov
dec
mov
inc
add
inc
mov
mov
andl
loopne
mov
dec
bound
or
jnp
push
push
in
jae
shl
xchg
push
adc
loope
mov
hlt
push
dec
fcmovnb
xlat
cs
clc
add
ror
inc
fstpl
dec
jle
daa
cmpl
pop
push
cmp
mov
and
lods
fxch
jae
ret
mov
out
cmp
push
inc
inc
pop
jnp
mov
adc
push
and
adc
loop
and
mov
movsl
dec
ja
rorb
pop
sahf
movb
dec
inc
mov
gs
cmc
sub
popf
mov
popf
loop
les
std
add
aaa
mov
pusha
and
cmp
stc
rcrl
dec
push
scas
cmp
add
roll
ret
lret
push
shl
imul
insb
pop
movsl
or
int3
add
nop
jae
dec
std
aaa
sub
inc
and
xor
lock
out
fstpt
adc
jp
pop
xor
ljmp
lods
fcomps
sub
xor
idivl
imul
insl
es
lcall
stos
adc
mov
scas
inc
xchg
clc
jmp
adc
decb
loopne
lahf
or
add
cmp
jle
in
jns
inc
pop
push
dec
mov
cmp
fcoml
lods
clc
test
dec
dec
xor
jmp
push
cli
fsubs
mov
movsl
cmp
sbb
push
mov
sbb
adc
inc
icebp
xchg
sti
test
mov
fcoml
add
aam
das
xchg
mov
mov
jb
cmp
cmpsb
jb
dec
ss
ja
or
in
test
pop
mov
sub
imul
mov
test
pop
fdivrs
xor
leave
loop
jnp
add
jno
push
mov
fildl
dec
loopne
pop
sbb
adc
sbb
xor
into
shl
aas
dec
and
fstp
movsb
jnp
jge
mov
gs
icebp
mov
pop
push
fsubp
lcall
mov
xchg
push
leave
pop
xchg
push
jge
mov
addr16
jge
jo
imul
push
pop
loope
dec
cmc
adc
adc
pop
pushf
hlt
icebp
or
cli
imul
sbb
mov
in
adc
cmpsb
push
ret
loopne
xchg
mov
mov
pop
repnz
sbb
rcrl
sbb
xchg
daa
scas
cmp
inc
sub
je
je
sub
jne
imul
movsb
leave
lcall
xchg
add
movl
dec
aad
aam
push
shrb
adc
adc
cmp
repz
pop
lds
orl
fcmovnu
pop
cmp
ljmp
jmp
shll
test
push
cmp
mov
and
and
mov
les
cmp
arpl
adc
inc
or
sahf
and
loop
das
aas
mov
loopne
std
cmpsl
les
sub
clc
out
mov
inc
bound
xor
leave
xchg
mov
cmp
sbb
sub
out
faddp
inc
push
fsubr
push
inc
add
cltd
xor
mov
mov
cmp
lds
lds
ja
mov
ljmp
jne
imul
cmp
xor
sbb
inc
cmpsl
sub
outsb
xchg
add
aam
popa
push
dec
std
add
cltd
xor
xor
data16
dec
out
push
mov
cmp
xor
leave
je
ror
stos
push
fucomp
jge
in
lds
jnp
pop
in
pop
cmp
mov
and
pop
jno
fstpl
std
bound
repnz
fwait
dec
push
sub
dec
xor
adc
push
xchg
inc
jl
and
movsb
rolb
inc
out
lds
loope
ja
scas
lahf
lods
xor
sub
ljmp
in
add
imul
xchg
jae
lds
dec
xor
adc
adc
pop
sahf
push
pop
and
and
das
cmp
or
jle
mov
dec
sub
ljmp
loop
lods
pop
mov
or
adc
out
mov
je
adc
stos
push
fucomp
inc
cmp
rcll
jb
pop
ljmp
sub
es
inc
stos
mov
add
cld
aam
bound
daa
sahf
out
mov
mov
jmp
xor
push
ficomps
mov
lea
push
cmpsb
xor
int3
sbbb
out
ds
fcompl
ljmp
dec
adc
inc
pusha
cmp
inc
dec
add
cwtl
or
push
adc
push
cmp
adc
loopne
and
inc
jecxz
pusha
xor
sbb
push
dec
adc
gs
enter
jp
movsb
inc
mov
sbb
nop
fs
xor
adc
mov
lock
lret
xor
dec
dec
jl
movsl
call
dec
mov
or
sbb
jae
mov
push
jne
push
adc
jae
and
insl
test
cmpsl
mov
adc
fiadds
shl
arpl
push
or
jge
jne
cmp
int3
dec
enter
sbb
push
adc
shll
movsb
outsl
lods
cmp
pop
enter
sbb
int
and
aaa
lret
xor
stc
test
pop
imulb
sbb
push
adc
pop
add
mov
jmp
fbstp
in
mov
add
mov
repnz
mov
mov
pusha
inc
imul
shl
mov
leave
add
xchg
dec
mov
or
and
jae
inc
mov
enter
test
adc
out
jb
or
push
stos
std
mov
fbstp
sbb
adc
cmp
pusha
xchg
add
int3
or
lea
pushf
outsb
cs
sub
jbe
mov
in
xchg
push
adc
insb
repz
dec
mov
jo
push
dec
mov
std
xchg
mov
cmp
cmp
mov
jecxz
jb
mov
lods
adc
ljmp
cmc
pusha
ficomps
test
cltd
neg
xor
xchg
push
sub
loope
fwait
inc
shrl
out
faddp
inc
push
dec
pop
push
adc
mov
fisubl
sbb
push
and
mov
and
stos
xor
adc
xor
fisubrl
movsb
bound
lds
pop
jg
adc
inc
rol
dec
test
fcmovbe
lcall
adc
call
pop
adc
push
xchg
push
adc
mov
inc
popf
cmp
sbb
mov
fwait
pop
dec
outsb
sbb
cs
arpl
popa
pop
jmp
repz
pop
xor
inc
lock
shl
hlt
ret
shll
mov
pop
pop
cmp
cltd
pop
dec
push
inc
adc
dec
fimuls
cmpsb
mov
mov
jmp
mov
pusha
inc
lock
add
adc
in
mov
jmp
mov
pop
std
ds
push
pop
sti
and
push
adcl
sub
fidivs
pop
in
pop
cmp
subl
js
cmp
cli
pop
adc
scas
rol
bound
and
and
sbbl
add
jnp
push
pusha
das
fsubr
push
inc
push
cmp
shlb
lret
adc
jb
cmovb
mov
dec
xor
aad
pop
mov
ja
push
sub
into
jbe
xchg
sahf
sub
push
and
shl
outsb
dec
loop
imul
fst
push
mov
jae
out
fmulp
ret
add
rcl
mov
push
fbld
adc
pop
xor
sub
or
inc
lock
and
xchg
popf
pop
jne
inc
add
push
and
pushl
rolb
jne
push
ds
and
movsb
pcmpeqw
fstps
cmpsl
pop
sbb
repz
adc
ret
ret
jle
test
shll
ret
mov
pop
jnp
imul
and
iret
push
cmp
sub
out
subl
rcll
ljmp
xchg
pop
push
cmpb
sbb
jmp
insb
arpl
fwait
aaa
jb
mov
push
push
cmp
neg
pusha
dec
cmpsb
shll
xchg
shll
sub
xchg
aam
insl
enter
stos
push
push
add
out
aaa
scas
ss
ret
and
in
jb
fwait
test
int
rcll
clc
sub
push
adc
inc
test
cmp
add
pusha
jg
or
xchg
push
adc
or
push
js
divb
sub
std
pop
orl
fbld
repnz
adc
adc
test
pop
notl
sub
das
insl
xlat
mov
mov
inc
xchg
scas
push
das
outsl
add
hlt
or
push
push
cs
sub
mov
out
ret
xor
rorl
xchg
xorb
jl
inc
cmpsb
jnp
js
sti
jb
ljmp
fsubl
addr16
sub
adc
pop
sub
insb
insb
push
iret
leave
js
sub
and
cli
and
aas
sub
jmp
xchg
dec
mov
cs
jb
js
add
scas
aam
repnz
inc
sbb
pop
fwait
imul
push
test
andb
hlt
mov
sub
mov
loop
pop
mov
into
xchg
inc
sbbb
ret
test
leave
lea
shl
cmpsb
dec
cltd
inc
fnsave
loopne
test
cld
xchg
add
add
add
jg
loope
sbb
push
stos
push
gs
mov
push
adc
popa
lds
cli
push
adc
leave
aam
sub
push
pop
and
inc
mov
mov
pop
adc
cmpl
and
push
adc
adc
stos
cwtl
adc
loopne
movsb
push
dec
pop
roll
out
pop
cmp
enter
leave
rcrb
fs
and
movsb
mov
lahf
xor
cs
and
andl
adc
adcl
rolb
lret
adc
pop
ljmp
and
imull
mov
fidivrs
adc
in
or
push
cmp
cmpsl
les
std
add
aaa
mov
pusha
and
xor
pop
fdivrs
xlat
loope
inc
pop
dec
push
loopne
fwait
out
stos
jge
jmp
insl
dec
xchg
sub
imul
mov
std
cmp
cld
jb
pusha
mov
push
cmp
nop
nop
push
jno
cs
repnz
inc
cmpsl
sub
fs
call
mov
in
xchg
jg
cmpsb
dec
pop
mov
arpl
shl
jb
aad
cltd
mov
push
adc
adc
push
lods
or
in
mov
or
jmp
cmp
sub
cmp
and
cltd
dec
fbld
ja
cs
popf
pop
mov
push
inc
jp
xchg
in
dec
nop
and
xor
mov
mov
imul
and
or
xchg
adc
adc
shl
jb
out
ljmp
inc
test
jne
push
outsb
ficomps
push
cs
cmpsl
xor
aad
dec
jne
ja
das
outsl
fwait
push
scas
outsb
add
push
cmpsb
xor
mov
lds
nop
pop
mov
mov
push
fistl
mov
pop
jmp
loope
mov
fs
jnp
sub
pop
lret
imul
mov
push
cmp
ficoms
jo
pop
call
add
shl
jns
int3
or
or
jmp
and
xchg
or
shl
dec
xchg
add
mov
mov
or
stc
nop
pusha
sbb
mov
ljmp
in
fisubrs
lret
lret
and
gs
iret
push
jp
cmc
and
imul
dec
and
out
push
addb
outsl
imul
popa
xchg
jl
add
imul
loope
pop
lods
xor
dec
xchg
in
sub
dec
testb
jo
cs
mov
sub
repnz
mov
adc
push
imul
lods
cmp
aaa
mov
inc
sbb
insb
push
pop
imul
xlat
faddp
jo
mov
into
imul
enter
pop
rcrl
add
icebp
fisubs
mov
mov
adc
loop
mov
mov
cltd
cltd
add
nop
dec
sti
cmc
sbb
mov
dec
mov
mov
inc
sub
nop
mov
jnp
cmpsb
and
xor
adc
gs
rolb
into
ss
loope
mov
jnp
pop
lods
mov
sbb
stc
push
jno
pop
xor
mov
or
cmp
dec
fistpll
pop
jge
pusha
jg
lahf
inc
pop
push
push
clc
insl
jle
sbb
cltd
sub
sub
pop
dec
pop
or
push
mov
jnp
xchg
jl
jae
int
and
push
pop
daa
inc
repz
mov
jge
push
mov
cmpsl
dec
in
xor
rcrl
stos
lea
loope
je
test
xchg
adcl
cmpsb
outsb
popf
jb
cltd
sub
jne
dec
into
jge
loope
punpcklbw
pop
and
sti
pop
push
sub
mov
push
adc
xchg
dec
lret
adc
xor
sahf
popa
pop
inc
push
das
cltd
stos
pop
or
int3
xchg
movsl
test
pop
fadd
mov
sbb
popf
sub
cmpsl
pop
fstp
mov
adc
aas
add
bound
incb
fmuls
popa
sarl
sub
stos
fucom
push
cmp
into
xor
movb
arpl
xchg
add
iret
mov
es
stos
or
ss
daa
sbb
call
fnstcw
sbb
adc
mov
int
lds
popf
ss
sub
sbbb
jns
ficomps
sub
xor
icebp
addr16
xchg
add
in
mov
inc
leave
shll
aad
mov
in
mov
bound
out
adcb
scas
out
sub
cld
fidivrs
sbb
repnz
xor
mov
push
adc
jo
adc
jge
into
cmpsb
push
sub
in
cmp
js
pop
fnstenv
scas
cmp
clc
inc
test
cmc
sahf
push
pop
cs
je
xor
decl
cmpsl
dec
jge
inc
sub
leave
dec
jns
ret
test
xor
lods
in
je
xor
pusha
mov
out
ficomps
ret
es
gs
mov
adc
inc
cmpsb
dec
popa
add
lods
sub
clc
fistpll
xchg
dec
push
call
out
mov
daa
cmpb
rcr
shrl
inc
test
mov
push
push
inc
fs
cmpsb
dec
in
mov
loope
or
push
and
cwtl
gs
cmovge
cmpsl
outsl
and
rclb
or
lret
pusha
cmp
inc
jge
mov
or
push
leavew
xchg
mov
lds
and
mov
scas
add
jmp
and
mov
adc
dec
adc
jb
cmp
jecxz
pop
popa
xchg
mov
mov
aas
push
xchg
mov
shrb
or
loope
mov
sub
data16
mov
cmp
sarl
es
push
test
push
mov
mov
lcall
mov
lret
cmp
cwtl
cmp
stc
pop
push
mov
sbb
mov
or
sbb
sub
push
cmp
aad
inc
test
cld
add
adc
cmpsb
ljmp
sub
cmpb
push
pushf
test
outsl
jae
push
add
jp
loopne
mov
out
cmp
and
and
xchg
pop
xchg
cmc
in
pop
fs
loop
push
push
jb
adc
repz
cmpsb
and
mov
cli
mov
lds
in
xlat
in
pop
and
push
pop
rcll
call
sub
jl
inc
jmp
sbb
lret
call
adc
cltd
lcall
cmpsb
mov
rorb
or
mov
adc
inc
das
mov
bound
pop
ret
xchg
push
sahf
roll
dec
imul
iret
dec
and
and
neg
or
stc
xchg
loopne
cli
insb
in
lods
pop
cmp
fucomp
xchg
sub
fsub
pop
mov
outsb
mov
sbb
loop
repz
adc
movsb
sub
mov
inc
inc
add
inc
lcall
pop
cmp
lret
lock
fcoml
movsl
cltd
mov
aad
arpl
cmpsl
les
mov
inc
loope
fisubrs
enter
int
xor
mov
mov
in
out
mov
popf
loop
dec
inc
insl
mov
out
or
adc
das
mov
xor
fistl
fisttps
jmp
and
jb
popf
adc
movsb
mov
shll
sarl
mov
out
push
push
jp
sbb
and
cltd
inc
xlat
shll
mov
sub
ljmp
imul
shufps
and
pusha
or
arpl
cmpsl
les
std
sbb
aaa
loop
shrb
jp
fwait
adc
fiadds
dec
push
loope
popf
loop
jle
lds
jle
and
outsl
or
mov
dec
dec
pop
aad
arpl
cmpsl
les
mov
fidivrs
xchg
adc
mov
imul
out
ljmp
loopne
pop
imul
cltd
mov
push
cmpsl
dec
das
leave
or
inc
call
push
scas
outsb
add
push
cmpsb
xor
mov
lds
cwtl
pop
mov
mov
es
adc
gs
fsubl
xchg
pop
inc
cmp
jmp
mov
sbb
mov
leave
lods
pop
xor
adc
gs
fs
movsb
fcmovnbe
sahf
jnp
aam
dec
int
mov
sbb
mov
xchg
sub
push
xor
int
dec
jne
push
jmp
leave
dec
loop
shrb
mov
add
pop
pop
inc
jno
push
cmpsl
adc
cltd
sub
test
adc
daa
mov
cltd
mov
push
sub
jmp
xor
mov
xchg
xor
adc
mov
fwait
decb
out
mov
mov
lds
cmp
jg
adc
pop
pusha
lea
dec
enter
cmpsl
mov
sbbl
push
sbb
sub
xor
adc
call
enter
adc
or
rcrb
int3
fwait
cmp
adc
sbb
pop
rcrl
or
outsl
pop
sbb
mov
and
gs
cmovne
cmp
lret
into
psubusb
add
roll
fstps
inc
fmul
call
fs
bound
icebp
outsb
mov
dec
push
test
sub
pushf
rcrl
push
hlt
mov
lods
lahf
inc
addr16
mov
sub
and
in
dec
xor
jmp
push
jmp
adc
imulb
sub
dec
movsb
pop
mov
mov
pop
xchg
and
stos
xor
imull
aaa
in
xchg
scas
stos
xor
xor
xchg
xor
into
push
nop
addr16
sub
test
imull
rcl
in
lcall
xchg
push
ret
or
call
mov
cld
dec
and
rorl
insb
ja
jne
test
mov
nop
test
cmpl
xchg
adc
or
adc
mov
sbbb
daa
sbb
push
rcrl
les
es
outsb
sarl
movsl
pusha
xor
lcall
mov
shrb
cmc
inc
lock
inc
pop
mov
dec
nop
mov
stos
aad
pop
cmp
mov
sbb
popa
ljmp
jecxz
mov
inc
and
adc
lods
pop
mov
mov
shlb
fsubrs
les
cmc
ljmp
mov
int
and
inc
xor
mov
add
jmp
ret
adc
aad
dec
insb
lcall
lds
sub
sub
inc
out
sbb
inc
mov
cmpsb
dec
in
lret
adc
push
adc
mov
lds
push
xor
pusha
pmaxub
data16
inc
jno
sub
mov
lds
dec
leave
adc
sbb
push
test
dec
and
les
fistpl
ljmp
jno
add
stos
mov
inc
pushf
mov
mov
aam
xchg
adc
jl
sub
lods
pop
mov
and
push
sub
mov
mov
imul
ficoms
push
repnz
mov
daa
lds
cmc
xor
imull
mov
dec
lret
adc
cltd
sub
enter
pop
stos
push
lods
pop
jp
lds
or
popf
mov
fwait
imul
mov
push
adc
inc
xchg
ds
mov
popf
inc
dec
sbb
sub
out
push
mov
lret
push
shl
outsb
xchg
push
imull
cli
sub
xor
mov
and
test
inc
adcb
xor
loopne
push
sub
jbe
inc
jl
cmpsl
lds
pusha
hlt
aam
jp
pop
fsubrs
in
mov
push
jae
cmpsl
mov
out
movsb
xor
fdivrl
mov
xchg
aad
sub
jbe
inc
jl
cmpsl
lds
pusha
arpl
mov
fsubs
push
adc
in
sub
inc
jg
push
push
pop
jp
add
lods
cmpsb
outsb
and
daa
sbb
push
sub
repnz
add
mov
lahf
push
inc
fistps
pop
mov
rclb
xor
sub
call
dec
mov
clc
aas
scas
mov
out
leave
mov
pushl
std
add
cmp
pop
aaa
iret
test
fucomi
push
xor
sbb
sti
mov
out
les
sahf
xchg
pop
pop
popa
push
sti
fldenv
hlt
outsb
mov
mov
loope
pop
into
jno
rcll
sub
outsb
lahf
lock
cmp
xor
inc
push
mov
mulb
xchg
ja
fucomip
stc
mov
xchg
cmp
xor
icebp
stos
mov
imul
cli
mov
cmp
int
call
xchg
push
adc
inc
outsl
and
imul
jge
pop
scas
xor
add
jmp
and
push
adc
sub
sbb
insb
fld
cmpsb
pop
jp
or
insl
mov
xchg
cs
jmp
or
mov
shl
out
les
adc
test
fiaddl
mov
cltd
sub
cmp
lea
sub
icebp
aad
pop
xor
mov
lcall
loope
pushf
sbb
insb
inc
imul
sub
push
insb
inc
adc
mov
outsb
sahf
sub
mov
idiv
jno
jecxz
das
cs
out
mov
or
mov
in
pop
mov
ljmp
sub
jmp
jg
cwtl
sub
jno
sbb
mov
lea
aaa
and
sub
out
dec
cmpsb
lods
push
ja
mov
insl
and
adc
stos
xor
dec
popf
dec
int3
adc
jl
popa
jb
adcl
add
out
rcrb
mov
push
adc
insl
mov
mov
jge
push
xlat
rcll
cltd
xor
xchg
push
adc
into
les
jne
inc
or
jp
out
inc
mov
mov
pop
adc
hlt
rclb
repnz
adc
mov
adcl
pop
dec
adc
adc
cmp
cmp
push
cmp
mov
pop
pushf
jb
and
test
stos
in
mov
push
mov
enter
pop
mov
hlt
std
add
je
and
test
ret
outsb
mov
daa
stos
cmp
shll
pop
mov
int3
add
leave
xchg
xor
pop
add
pop
test
loope
dec
loopne
imul
cmpsl
pop
ljmp
push
sub
stos
fstp
pop
pop
pop
imul
cmp
out
or
pop
cmpsl
dec
jmp
outsb
test
push
push
lahf
inc
fdivl
xchg
cmpsb
test
jle
xor
jmp
mov
mov
pop
add
xchg
pop
mov
nop
test
icebp
dec
les
push
sub
icebp
data16
cmp
leave
ret
push
ljmp
rcrl
movsb
fmul
dec
lds
dec
iret
adc
add
jmp
lods
shl
outsb
xchg
adc
mov
in
mov
jo
lock
pop
inc
push
and
cmp
dec
loope
lahf
fucomip
or
fnstsw
inc
push
and
dec
ret
das
pushf
movsl
stos
push
bound
cmp
adc
add
add
lcall
inc
jmp
decb
popf
xchg
add
leave
fbstp
ljmp
mov
mov
cmp
inc
jp
pop
xchg
cmp
in
or
pop
fsubrl
in
add
xor
xlat
lods
add
rorb
out
jbe
dec
inc
in
or
std
std
stos
push
arpl
cmp
cmp
dec
inc
sahf
xlat
mov
mov
mov
and
push
das
and
mov
and
cmp
lret
ret
mov
stc
inc
js
gs
mov
shll
xchg
inc
dec
xchg
fdivrs
shll
mov
jbe
mov
mov
cmp
sbb
adc
aam
enter
lds
cmp
pushf
aas
or
sbb
scas
fists
cmp
flds
sbb
xor
add
cmc
outsl
inc
mov
daa
mov
popf
sti
sub
fidivrs
pusha
pop
test
sub
jg
mov
fs
pop
jb
imul
inc
mov
jo
and
scas
outsb
xchg
cmp
jb
push
iret
pushf
stos
mov
mov
or
push
push
dec
xor
stos
inc
loope
lcall
insl
mov
dec
xor
adc
sbb
mov
dec
and
sub
push
test
test
dec
mov
scas
push
xchg
adc
std
stos
add
sub
adcb
adc
pop
adc
notb
inc
addb
add
cld
cmp
insl
push
das
out
lret
jge
dec
xchg
data16
fildl
fisttps
and
arpl
mov
jo
jns
mov
call
out
in
loop
ss
jno
dec
adc
addb
sbb
xlat
mov
inc
or
stos
adcl
xchg
push
mov
scas
pop
imul
cmpsl
dec
popa
add
std
push
mov
xorl
mov
dec
lds
jp
dec
pop
int3
add
adc
fldlg2
adc
inc
in
cltd
xor
icebp
jg
loope
loopne
xchg
add
movsl
sbb
out
fmulp
rol
insb
pop
std
test
mov
push
cmpsl
xor
jl
popf
cmp
aad
inc
std
test
and
ficompl
outsl
mov
scas
pushf
mov
ficomps
rclb
rcr
cmc
pop
and
sahf
fdivl
add
cmpsl
les
mov
add
push
lods
fidivl
and
xor
mov
and
lods
sti
lahf
jg
test
xchg
pop
cs
xlat
fucomp
push
cmp
ret
loopne
sub
cmp
mov
sbb
mov
sub
xchg
push
pop
lcall
dec
lahf
cmp
jg
push
jl
test
sbb
ss
arpl
cmp
push
pop
xor
int
stos
cmovno
ss
pop
movsb
pop
jnp
inc
xlat
cmp
nop
jle
je
call
mov
cwtl
ljmp
fnsave
cwtl
mov
sub
les
int
cmpsl
sub
inc
sarb
add
pop
push
es
test
mov
les
pop
cld
mov
mov
mov
sbbl
push
stos
push
daa
adc
mov
cmp
add
leave
mov
mov
xor
push
dec
adc
jmp
fidivs
ljmp
repnz
sbb
ja
loope
faddl
fstpl
xchg
mov
out
sub
out
add
movsl
sub
push
and
aad
cmpsl
add
ror
movsb
ds
sbbl
enter
stos
xchg
mov
cmp
xor
pop
jmp
loopne
push
call
pushf
std
sbb
xor
pop
jmp
and
mov
insb
aad
add
adc
adc
test
jl
lock
ss
adc
dec
cmp
dec
shlb
sub
lods
jbe
lcall
lods
inc
xchg
mov
and
add
push
insb
mov
dec
jbe
mov
jl
fs
sbb
sub
xchg
inc
add
xor
outsb
inc
add
mov
scas
fnstenv
push
bound
nop
xchg
cwtl
pop
pop
mov
cmpsb
imul
inc
mov
roll
daa
and
fcoml
add
je
mov
pop
repz
mov
pop
sub
movsb
out
add
ljmp
test
push
cmp
pushl
and
xlat
arpl
ds
adc
mov
mov
sub
mov
xchg
pusha
pop
and
mov
imul
loope
mov
mov
xor
imul
cmc
jb
cld
and
jbe
fstl
pshufw
lcall
into
je
and
std
sub
dec
unpckhps
push
jle
cs
test
dec
fdivrs
xchg
cld
pop
and
scas
call
pop
add
push
cmpsb
mov
lock
pop
pop
cmpsl
mov
jnp
and
and
xor
insb
pop
out
out
mov
stc
dec
std
adc
mov
or
pop
cmp
pop
pop
fisubrs
pop
add
into
xchg
dec
jecxz
pop
daa
into
popa
addb
leave
rolb
addr16
rclb
cltd
std
cmp
push
mov
xchg
arpl
pop
mov
add
loopne
push
stos
cmp
adc
push
mov
inc
mov
cmp
shl
push
std
sbb
insl
popa
repnz
adc
mov
lcall
xor
mov
mov
ja
insb
mov
sbbl
push
stos
push
daa
adc
mov
aas
imul
mov
mov
xor
sbb
leave
je
pop
cs
push
sub
sahf
lcallw
push
pop
les
sub
lret
sbb
ret
adc
inc
pop
cmp
lds
dec
inc
fdivrs
jecxz
cld
outsb
mov
fwait
addr16
mov
cld
cmp
mov
jmp
xchg
fldl
push
push
cmpsl
cmp
leave
add
arpl
fidivs
jns
push
es
inc
cltd
xor
cmp
icebp
les
cmpsl
sbb
adc
or
dec
jecxz
mov
push
adc
lret
aad
or
xor
test
clc
pop
mov
test
in
andl
cmp
xor
popf
ljmp
and
enter
cld
fstl
loopne
xor
stos
mov
lret
or
and
sbb
sahf
fisubrl
jl
int3
gs
dec
into
inc
inc
dec
popf
cmp
loopne
pop
dec
int3
xor
sbb
pop
stos
add
mov
aaa
lcall
les
incb
shrl
mov
lds
sub
fsubrp
pop
inc
pop
mov
int
jb
test
add
sbb
push
sbb
adc
arpl
stos
das
xchg
cmc
add
test
sarl
jae
push
sub
inc
pop
jecxz
push
sub
inc
push
inc
jp
and
push
cmpsb
aaa
cmpsb
xchg
ret
cmp
jl
pop
mov
orb
or
adc
iret
test
adc
pushl
mov
cmc
sub
out
mov
mov
push
xchg
mov
daa
pop
cli
mov
dec
pop
insl
xor
dec
ret
and
push
inc
arpl
ret
mov
popf
leave
fimuls
push
movsb
mov
pushl
incb
iret
cmp
push
mov
jae
pop
aas
cmp
fwait
cmp
shlb
ret
inc
dec
lret
or
add
hlt
shrl
mov
or
xchg
jae
clc
and
inc
xchg
movsl
mov
jbe
and
divb
pop
and
jb
cli
push
push
push
insl
lea
addl
movsl
or
jecxz
movsl
inc
jg
sbb
nop
dec
insb
mov
push
and
scas
mov
repz
mov
inc
cmp
mov
lahf
dec
lods
loope
sbb
pop
jge
pushf
test
mov
fidivrs
mov
xchg
cmpsl
dec
inc
mov
daa
cmpsb
and
sbb
mov
cmp
rorb
bound
fnstsw
cltd
lea
shr
push
fwait
pop
int3
add
xor
fistpll
add
lock
icebp
sbb
orb
mov
js
jb
cmpsb
xor
xor
test
out
gs
jp
fldt
mov
or
out
jbe
addr16
xlat
insb
cmc
push
jle
sbb
jg
js
pop
enter
ss
mov
cmpb
and
inc
rol
push
sub
and
push
sbb
test
cmc
dec
movsl
pop
jge
push
sarb
fnstsw
sti
cmp
mov
out
fldenv
test
mov
and
mov
mov
je
push
int3
dec
ja
mov
xor
jg
dec
jmp
ret
cmp
sbb
push
das
mov
xchg
pop
ljmp
jl
hlt
push
pusha
adc
mov
xchg
scas
push
adc
xor
adc
not
lods
fistpl
xchg
fucomp
pop
push
cmp
mov
push
filds
mov
adc
cmpsl
dec
out
rorb
outsb
xor
sub
xchg
add
scas
and
das
cmp
fwait
imul
fnstsw
push
rcll
jnp
popf
and
xchg
pop
loope
cmp
in
aad
dec
sarl
addb
add
test
loope
fwait
xor
pop
stos
dec
mov
pop
mov
ficoms
out
or
pop
pop
inc
sbb
dec
out
mov
push
loope
addb
cmp
dec
jl
orl
adc
gs
fldcw
test
int
popf
cmc
mov
mov
ja
sarl
push
popa
sub
push
shrb
gs
out
js
hlt
mov
mov
sub
enter
popf
fs
aad
pusha
and
out
and
inc
lret
cli
aad
xchg
xchg
add
ljmp
fidivrs
push
sbb
and
xor
add
and
call
fwait
add
outsb
pushf
daa
push
stos
push
lods
nop
jno
int
mov
push
adc
xchg
rclb
add
sub
loop
mov
movsl
mov
cmp
and
dec
push
rcrb
je
std
or
aad
mov
adc
jb
xchg
sub
cld
xchg
lcall
les
enter
fidivrs
int
pop
imul
ficoml
mov
stc
ljmp
pop
adc
arpl
dec
push
jbe
cmpsl
dec
jmp
js
xchg
iret
test
adc
fstl
and
dec
mov
xlat
inc
adc
pusha
les
or
or
fnstsw
flds
adc
sarl
inc
push
mov
mov
pop
adc
sbb
les
adc
push
xor
mov
xor
rcl
push
mov
mov
xor
mov
lret
mov
popa
pop
and
lcall
stos
inc
xchg
cltd
outsl
xor
pop
stc
add
adc
faddl
adc
adc
hlt
adc
jb
push
mov
lock
lds
fwait
je
pop
adc
cld
pop
sbb
je
pop
adc
push
cmc
sbb
adc
mov
cltd
outsl
mov
mov
mov
lods
rolb
lods
sti
pop
pop
lret
cmp
sbbb
or
jp
loop
mov
jmp
lcall
shrb
and
pop
or
clc
pop
add
adc
fildll
mov
in
in
mov
jge
push
scas
aas
or
insb
jecxz
int
or
push
mov
popa
psllw
xchg
jnp
movsl
int
outsb
enter
arpl
mov
aas
mov
mov
sar
inc
ret
jp
pop
pop
adc
enter
and
aam
je
push
test
js
adc
lods
loopne
je
adc
mov
push
jns
inc
jae
push
sub
or
add
rcll
xor
mov
mov
xchg
das
push
jge
and
daa
pop
mov
sahf
jmp
cltd
sub
mov
pop
test
das
jo
outsl
pop
test
or
pop
add
mov
xchg
adc
fstl
mov
push
daa
mov
and
xchg
cmc
and
adc
cld
jo
adc
ljmp
mov
sub
inc
or
adc
ljmp
pop
bound
lret
or
popf
cmp
daa
cmp
cltd
movsb
push
jp
ljmp
dec
in
add
nop
pop
sub
loope
sbb
xor
cmp
jno
dec
int3
push
push
inc
fmulp
cmpsb
dec
in
add
push
or
mov
sahf
hlt
sahf
shll
mov
stos
push
test
into
and
push
adc
mov
iret
popa
out
xchg
lods
push
jp
ljmp
dec
ss
pop
jns
sub
jbe
stc
je
rcrl
mov
inc
out
fmulp
rorb
push
or
jae
adc
and
imul
xor
inc
mov
mov
pop
or
push
inc
cld
jo
adc
jns
sub
ja
cmp
push
adc
loop
push
push
stos
frstor
sub
cld
fs
rcrl
sub
pop
pop
rorb
ljmp
mov
inc
pop
dec
xchg
sub
cmp
mov
add
ja
jmp
aad
es
cmpsb
dec
cltd
and
daa
aad
popf
cmp
sub
mov
out
faddp
cmp
adc
push
test
mov
lret
fs
scas
cmp
aad
mov
inc
aad
in
pop
adc
int
pop
shrb
push
xor
push
adc
sub
stos
fistpll
push
stos
cmc
xchg
faddl
adc
adc
lods
pop
fistpl
jo
pop
adc
adc
lds
adc
cwtl
xor
mov
sub
xor
mov
popf
sub
mov
add
clc
and
xchg
push
jp
inc
aad
pop
cmp
mov
lret
sub
dec
popf
cmp
jne
lds
cmp
jno
aad
pop
and
fmul
cltd
xor
insb
push
or
popf
cmp
popa
fsubr
xchg
aas
jnp
jmp
loope
test
cmpsl
pop
out
cwtl
xor
push
frstor
pop
test
les
mov
and
pop
decb
sarl
scas
shll
lds
adc
jmp
in
les
xor
out
movb
hlt
imul
sub
scas
add
mov
jne
cmpsb
pop
shrl
adc
mov
fbstp
xchg
in
mov
pop
lds
adc
bound
mov
mov
pop
lds
adc
push
sub
lret
test
sbb
jns
lds
adc
lret
mov
cli
shr
hlt
pop
sbb
lea
hlt
xor
mov
cmp
pop
sbb
push
or
pop
mov
pusha
sbb
pop
jle
xchg
push
icebp
cmpsb
jge
jge
sbb
inc
push
fwait
jb
insl
dec
jle
sti
add
aad
mov
and
dec
adc
sbb
leave
adc
sbb
cmp
iret
movsl
pop
stos
in
out
cli
cwtl
and
dec
inc
outsb
cmp
divl
adc
push
adc
push
pop
xor
push
mov
inc
push
dec
dec
pop
or
lea
cmp
js
cli
movsb
sbb
add
pop
adc
mov
movsb
add
xchg
lret
inc
inc
sub
push
ret
pop
jg
movsb
add
pop
adc
push
or
ljmp
lret
mov
pop
adc
mov
or
inc
jmp
mov
xorb
adc
testb
jne
daa
nop
scas
xchg
pop
adc
push
je
inc
int3
shrl
fnstenv
loop
loopne
test
ret
test
pop
adc
fisttpl
jmp
inc
lock
fidivrs
mov
cmp
mov
lret
adc
lds
std
sbb
cmpsl
sbb
dec
cltd
inc
add
lahf
mov
xchg
mov
scas
and
bound
or
shlb
imul
cmpsl
dec
push
dec
or
cmc
mov
daa
xchg
jecxz
test
mov
sub
cmp
xchg
mov
and
out
or
push
insl
push
cmp
orb
pop
dec
xlat
mov
test
sbb
jno
adc
cmpsb
xchg
or
lods
sarl
sbb
rcl
pop
pop
or
popf
movsb
push
jp
ljmp
or
or
cmp
rolb
bound
mov
jmp
adc
jg
stos
sahf
mov
sbb
sarl
sbb
rcr
jno
faddl
xchg
dec
hlt
ljmp
sti
jmp
fidivrl
mov
push
or
popf
pop
ja
dec
pop
or
ljmp
dec
jecxz
out
xor
out
inc
jmp
xorl
adc
imul
or
mov
xor
dec
popf
inc
inc
bound
mov
cmp
daa
leave
cwtl
cld
jo
adc
pop
or
xor
insl
mov
pop
mov
mov
movsl
push
mov
les
or
sub
or
nop
jo
xor
lret
mov
inc
addr16
sub
mov
lock
rcrl
dec
movsl
and
int
mov
mov
cmp
lods
inc
test
jl
push
stos
mov
pop
mov
mov
rclb
les
xor
and
pop
cmp
sub
dec
mov
cmp
add
shrl
and
addr16
adc
pop
lret
pcmpeqw
jge
cmp
adc
xchg
and
inc
pop
je
adc
push
xchg
add
sahf
scas
sub
or
shl
mov
push
lods
add
shlb
or
arpl
out
and
lcall
in
add
mov
test
cmp
cmpsl
shrl
insl
cmpsl
ds
inc
xchg
ss
and
jge
leave
lock
pushl
add
push
or
sub
and
jns
jle
push
lods
adc
mov
sbb
xor
adc
mov
push
adc
push
mov
mov
je
mov
and
cmc
dec
xor
std
pop
adc
movsl
ss
movsl
push
out
or
movsl
sub
imul
pop
icebp
cmpsb
cmpsb
inc
push
fldenv
dec
clc
into
sub
sbb
cmpsl
inc
ljmp
cmp
xor
in
push
mov
aaa
in
cmp
push
add
adc
fisubrs
pop
adc
inc
insb
leave
xchg
enter
aaa
xadd
or
in
repnz
mov
sbb
lea
adc
lret
sbb
and
xchg
aas
dec
lds
arpl
rep
push
cli
movsb
out
out
or
dec
push
mov
mov
xor
dec
test
push
lods
jns
dec
dec
xor
rol
loopne
jb
cmp
arpl
push
jge
leave
aad
adc
xchg
data16
and
movsl
or
sbb
xchg
flds
adc
xchg
push
sub
sbb
push
insl
pop
push
daa
mov
faddp
inc
jle
mov
push
jecxz,pt
gs
push
dec
data16
out
cmc
push
jno
sub
push
sub
adc
dec
ss
pop
jne
sub
cmp
cmp
sbb
cmp
or
mov
lcall
movsb
xorb
into
in
popf
cmp
fmul
mov
cmc
ljmp
pop
jne
aas
or
mov
adc
roll
cmp
dec
mov
or
xchg
jmp
lcall
ret
mov
mov
inc
jecxz
fidivrs
stos
push
test
or
inc
sub
or
popf
cmp
in
mov
and
push
pop
inc
jg
cltd
xor
cmp
dec
popf
xchg
fucomi
mov
add
sub
add
sub
mov
sub
or
rorl
jo
adc
ljmp
dec
cltd
xor
mov
sub
xor
add
ljmp
out
jo
push
push
aad
push
aad
movsl
dec
jecxz
out
xor
fdivrp
cmpsl
loopne
cmp
dec
shll
out
fdivrp
mov
jecxz
cmpsb
dec
cltd
inc
pop
push
xchg
sub
hlt
sahf
ret
mov
sub
push
cmp
movsb
es
ljmp
push
sub
gs
sub
xchg
dec
cmpsl
dec
popf
xchg
dec
xchg
lods
inc
test
hlt
js
stos
mov
xchg
and
cmp
lods
out
push
or
jmp
mov
dec
inc
clc
je
jnp
sahf
daa
les
or
adc
bound
and
dec
popf
cmp
jmp
sub
rcr
mov
stos
push
aad
push
mov
test
and
mov
cmpsl
fst
popf
cmp
movsb
adc
ljmp
cmp
lods
mov
lds
out
cmpsb
dec
jmp
adc
xchg
push
scas
xchg
daa
aam
cltd
xor
and
daa
aad
popf
cmp
push
cmp
xchg
ja
adc
aam
cltd
xchg
cs
mov
sbb
mov
sub
cmp
in
jne
rcl
xor
scas
les
and
xor
cmc
push
movsb
dec
mov
outsl
ljmp
push
rcll
orl
fidivl
fsubrl
pop
int
push
push
xor
jb
ret
dec
mov
ret
ljmp
cmc
pop
mov
imul
pop
lods
push
jl
inc
in
movsl
adc
add
dec
mov
test
xor
stc
mov
inc
push
sub
nop
enter
cmp
mov
inc
icebp
stc
in
push
into
adc
aaa
inc
mov
les
or
mov
sub
xchg
pop
adc
push
mov
or
cld
inc
pop
or
jno
sub
aas
jae
add
sbb
dec
into
mov
scas
lret
cmpsb
pop
ret
push
mov
mov
mov
push
xchg
mov
in
jge
sub
movsl
pop
stos
movsb
mov
xchg
aas
fisubs
adc
cmp
pop
xor
or
xor
adc
mov
or
test
or
xor
sbb
inc
scas
stos
add
adcl
shl
mov
daa
movsl
lea
leave
push
lods
cli
xchg
dec
pop
ret
cmp
add
fnsave
push
adc
or
xchg
insb
jno
pop
rep
jle
decb
pop
orb
sbb
outsb
pop
dec
or
push
or
arpl
cltd
mov
jecxz
les
sbb
ret
and
pop
adc
and
mov
jnp
xchg
push
shll
gs
aad
mov
ja
mov
test
jg
aas
scas
cmp
mov
fbstp
gs
sub
jne
scas
mov
cld
mov
aaa
mov
cltd
sub
jp
pop
mov
clc
mov
dec
cld
jo
adc
aaa
out
les
or
pop
int3
flds
adc
adc
test
sarl
mov
mov
fidivrs
shrl
xor
cmp
flds
adc
dec
xlat
cld
ja
fiadds
push
pushf
add
mov
lret
cmc
sub
or
invd
adc
dec
ja
jae
adc
cmp
jecxz
dec
push
xor
mov
sub
xor
add
push
dec
push
or
jecxz
pushf
xchg
pop
imul
fsubs
int3
flds
adc
cld
jo
adc
lods
fldcw
data16
mul
fwait
pop
cmp
outsl
lds
mov
andb
ficoml
xchg
adc
adc
push
inc
mov
and
lock
adc
or
leave
test
lret
mov
pop
adc
bound
adc
into
test
adc
daa
sub
jecxz
xchg
mov
aam
pop
fistpl
pop
adc
adc
or
cmpsl
add
in
pop
push
xor
loope
cmp
rcr
pop
adc
les
flds
adc
cld
jo
adc
mov
pop
adc
les
xchg
lods
pop
cmp
gs
pop
xlat
push
cmp
cmpsl
loope
vmovss
push
push
je
adc
imul
or
jecxz
gs
mov
pop
adc
mov
sub
or
mov
pop
adc
subb
sub
mov
nop
mov
stos
jl
or
ds
push
adc
lret
jg
je
adc
add
or
in
scas
ljmp
or
loopne
jb
xor
push
pusha
mov
lret
dec
adc
pop
adc
mov
pushf
xor
test
jae
aad
enter
xchg
aad
jbe
insl
pop
scas
mov
imul
adc
lea
stos
test
jno
adc
int
loopne
pop
adc
sub
or
and
mov
adc
inc
fdivl
xchg
jo
pop
adc
insb
pop
ljmp
out
in
add
adc
mov
sbb
or
inc
mov
sub
or
flds
adc
xchg
jmp
popa
mov
int3
xchg
push
adc
flds
adc
iret
ret
orl
clc
ss
iret
add
mov
sub
flds
adc
push
sub
mov
sbb
outsl
push
fimuls
out
int
cli
out
cltd
cs
stos
inc
xchg
cli
adc
and
aaa
js
das
xlat
inc
insb
enter
shll
jp
int
xor
mov
or
shll
test
jno
stos
jp
aad
test
flds
adc
and
je
test
mov
in
lods
or
mov
mov
mov
xor
js
sub
es
cmc
dec
xor
push
jbe
pusha
jle
movl
aad
test
flds
adc
dec
cmpsb
icebp
stos
push
insb
in
sub
adc
test
xchg
push
adc
and
pop
adc
repnz
push
in
push
mov
mov
dec
xchg
push
inc
or
sbb
mov
sbb
pop
adc
cs
test
das
mov
jmp
test
sub
xchg
cmp
cltd
jne
rorl
pop
jb
jbe
leave
mov
cmc
ljmp
mov
and
xor
adc
arpl
or
gs
jp
nop
jb
push
test
xor
nop
xor
push
cmpsl
mov
adcb
inc
mov
fidivrs
adc
and
pop
adc
sub
je
mov
fstps
ljmp
dec
cltd
xor
cmpsl
dec
mov
dec
jmp
cmp
sbb
add
ss
xor
cmp
jmp
sbb
push
adc
leave
dec
jmp
adc
and
pop
xor
pop
adc
lds
push
cmp
out
or
adc
lods
rorb
push
xor
out
les
fwait
dec
cmpsb
dec
popf
add
in
sub
aad
push
ss
cmpsb
dec
or
les
lds
popf
cmp
fisttpll
inc
aad
and
xor
lret
dec
pop
or
dec
ljmp
nop
pop
dec
test
push
and
pop
imul
adc
lods
mov
jmp
cmpsl
jbe
dec
mov
and
or
adc
mov
dec
mov
xchg
sub
adc
fistl
cmp
and
int
shrb
jo
pop
adc
data16
jo
movb
cmp
push
mov
ja
jno
adc
adc
in
dec
cltd
negb
gs
sub
out
addb
or
out
xor
jo
adc
pop
dec
jecxz
fs
sub
dec
popf
cmp
ljmp
sub
jp
sbb
push
cmpsb
xor
xor
stos
mov
cmp
push
cmpsl
fstpl
enter
ljmp
ds
fs
jmp
mov
add
dec
popf
dec
or
loop
aam
push
out
outsl
cwtl
add
movups
jbe
cmp
add
rcrb
ljmp
out
gs
in
adc
xchg
ja
daa
fmuls
xor
dec
push
push
adc
pop
mov
mov
dec
add
adc
int
pop
das
dec
mov
push
addr16
jo
pop
adc
xor
mov
jecxz
fildll
or
enter
rcrb
adc
fs
popf
cmp
mov
xor
icebp
adc
mov
push
or
std
mov
pop
out
push
jmp
scas
imul
cli
shr
aam
test
js
loopne
and
inc
sbb
ffreep
subl
jbe
dec
cmp
call
lods
mov
add
fimull
outsl
add
aaa
sub
loope
pop
fs
pop
xchg
ret
nop
adc
cltd
clc
mov
pushw
dec
pop
clc
mov
cmp
mov
sub
mov
dec
fs
and
sbb
mov
mov
shll
cmpsl
pop
movsl
lock
pop
cwtl
and
ss
test
adc
inc
or
xor
lods
dec
mov
loopne
fstl
test
ror
call
jns
cmp
or
pop
clc
cmp
or
lds
cmp
pop
or
subb
ds
mov
inc
iret
or
cwtl
insb
lds
adc
sbb
push
cwtl
shll
jmp
pop
or
pop
dec
loopne
pop
or
daa
lock
mov
cltd
xlat
xor
faddp
xchg
mov
pop
adc
insb
lds
adc
or
andb
jbe
and
orl
pop
or
and
adc
add
je
push
adc
and
fmulp
add
jmp
stos
sti
xchg
jmp
lcall
mov
aad
mov
imul
mov
cmp
push
pop
ljmp
push
cmpsl
inc
leave
mov
push
adc
rorb
aas
mov
cltd
xor
mov
dec
popf
jne
push
sub
pop
xchg
js
adc
inc
stos
push
test
and
das
and
ret
cmp
adc
jp
sub
sbb
xor
cmpsl
movsb
cld
jo
adc
mov
mov
sbb
jnp
xchg
push
pop
stos
and
pop
adc
jb
push
jb
cmpsl
dec
movsl
inc
add
and
pop
adc
push
cmpsb
dec
in
subb
fldt
cli
idivl
popa
xlat
dec
jp
inc
add
adc
mov
xchg
decl
out
cmp
imul
and
xchg
push
adc
icebp
dec
cltd
dec
dec
imul
loope
mov
cmp
dec
popf
lods
mov
pop
adc
dec
movsl
jp
out
out
repnz
adc
daa
pop
mov
mov
jl
cmpsl
les
inc
inc
ja
insl
sub
adc
push
fwait
mov
dec
int3
adc
arpl
mov
daa
fdivl
push
mov
mov
int3
adc
sub
sub
jbe
push
cs
cmp
lret
xor
les
ficoml
cmpsl
or
push
pop
push
add
imul
nop
out
or
jl
adc
or
jmp
mov
pop
mov
gs
je
sahf
in
sub
and
pop
jne
xlat
daa
push
mov
test
jmp
inc
push
in
push
test
cltd
lcall
jmp
mov
fstpt
ja
inc
inc
dec
inc
sub
in
push
sbb
loope
test
inc
lcall
cwtl
dec
pushf
dec
iret
pop
test
sub
or
dec
out
mov
push
inc
cmpsl
xchg
adc
push
mov
jl
or
adc
lods
cltd
push
ss
adc
xchg
fnsave
pop
mov
lock
fisttps
add
add
das
sub
adc
inc
pushf
lods
push
mov
cmp
shr
mov
mov
mov
aad
in
popf
and
imul
icebp
int3
ret
jae
mov
aaa
in
fwait
in
push
cmp
pop
out
xor
push
cmc
xor
sbb
lret
mov
js
adc
js
and
push
add
pop
je
adc
rcr
pop
sub
rolb
pop
fiadds
sub
sub
or
and
int
test
ds
imull
mov
fs
sti
add
mov
test
pop
and
arpl
sub
mov
push
mov
orl
xor
jbe
mov
arpl
xor
sub
pop
in
addr16
test
add
sbb
dec
dec
xor
repz
fisttpl
fstl
jp
nop
push
inc
jb
shlb
and
jne
add
push
push
cmc
jl
nop
push
jo
push
loope
jb
aaa
clc
negb
adc
rolb
sahf
adc
adc
pop
das
es
lret
out
cmp
or
arpl
popa
and
pop
sti
mov
jl
push
test
sub
scas
or
es
imul
xor
int
cmpsb
push
stos
push
rorl
mov
mov
scas
imul
inc
mov
add
ficomps
rolb
outsb
inc
pop
push
cwtl
xor
repz
mov
sbbl
aad
mov
jmp
dec
mov
lods
dec
out
dec
pop
loopne
cmpsl
loopne
dec
inc
out
mov
adc
push
adc
jmp
ret
sub
or
inc
mov
inc
pop
mov
les
jns
jp
sub
push
stos
mov
inc
pop
pop
popf
sub
jne
dec
push
dec
fisubl
fcom
mov
rol
mov
int
fldl
xor
cmpsl
dec
xor
popf
or
cmc
mov
and
mov
cmp
mov
sub
cmp
rorb
inc
insl
pop
pop
aad
and
xor
pushf
inc
popf
cmp
scas
ja
adc
pop
or
aad
add
adc
jecxz
insb
lret
and
pop
adc
cmp
inc
test
sbb
cmpsb
dec
in
int
xor
flds
adc
jg
push
rcr
cmpsl
dec
xor
clc
loope
jp
cwtl
loopew
frstor
xor
stos
mov
xchg
xor
or
mov
out
fidivrs
mov
jl
pop
jns
xchg
mov
jno
popf
in
into
ret
cmp
adc
pop
or
aad
cld
jo
adc
pop
mov
pop
and
and
fs
push
stos
push
imul
data16
pushf
cmp
lods
cmpsl
movsb
mov
pop
les
cmc
ljmp
adc
stos
inc
push
mov
push
adc
mov
push
loope
cmc
sahf
xchg
jmp
std
mulb
adc
dec
inc
decb
jae
fs
push
stos
push
daa
pop
in
popf
xchg
fdivrl
sbb
add
les
fxch
or
outsl
imul
int3
fwait
xor
mov
or
cmpsb
dec
call
mov
mov
shlb
icebp
out
pop
scas
pop
mov
xchg
mov
pop
mov
daa
sbbb
add
dec
rcrb
punpckhdq
xchg
das
mov
jb
ljmp
mov
mov
sbb
jbe
addr16
push
adc
push
stos
inc
xchg
push
in
sbb
out
cmp
lods
in
repnz
mov
out
clc
adc
jge
mov
dec
mov
xorb
stos
nop
and
in
xor
or
inc
adc
lods
cli
dec
add
adc
jae
es
rcr
jno
xchg
or
lcall
add
or
in
dec
cmp
add
outsl
inc
loop
inc
cltd
pop
es
out
gs
std
jle
jb
adc
fwait
jmp
xchg
dec
aad
lret
stc
outsb
out
or
pop
cmp
jmp
push
std
jecxz
mov
sbb
sbb
jle
cmp
adc
mov
mov
dec
mov
dec
repnz
xchg
mov
bound
mov
mov
rorb
lea
movsb
inc
test
fisubrs
jl
adc
je
rep
or
loop
in
hlt
mov
or
lret
mov
pop
inc
lods
clc
add
rcrl
outsb
mov
cs
and
adcb
imul
xchg
adc
mov
cmp
inc
jge
test
shlb
lea
ds
fisubl
into
mov
sbb
sbb
inc
test
ret
mov
inc
push
frstor
push
cmpsl
cmp
add
rcl
icebp
push
xchg
out
cltd
cmp
jae
adc
inc
or
adc
cmc
popf
sub
xor
xor
scas
sub
jae
ljmp
dec
cltd
iret
lcall
xor
popf
dec
inc
cltd
test
jae
ljmp
ds
pop
jo
faddl
popf
cmp
fsubrp
sbb
scas
fidivrs
adc
push
cld
or
in
add
nop
fbld
push
cmpsl
dec
xlat
jge
jmp
cmp
insb
dec
inc
dec
jmp
push
cmpsb
cmp
ds
in
popf
cmp
rcr
cmpsl
dec
mov
or
and
or
daa
xchg
pop
cmc
mov
xor
xor
sahf
hlt
sahf
int3
ja
sbb
push
adc
jmp
mov
mov
mov
les
dec
int
sbb
and
aaa
lds
rcll
add
mov
cmpsl
dec
push
pop
ja
xor
or
shrb
scas
push
lods
pop
dec
jae
jo
adc
or
fwait
popa
push
jbe
dec
mov
and
mov
je
push
insb
lret
lods
ds
gs
rcl
xor
xor
jno
or
mov
scas
dec
cltd
popf
jb
fsubrl
push
aad
add
ljmp
fwait
jmp
aad
cs
pop
cmpsb
dec
ss
leave
sub
mov
push
pop
loope
ljmp
loope,pn
out
stos
test
push
lret
xchg
out
repnz
je
inc
shrl
test
out
repnz
inc
push
test
mov
push
push
xor
cmp
js
mov
inc
xchg
adc
inc
or
rcr
stos
push
outsl
xor
inc
cltd
xor
fsubrs
out
jge
rorl
cmp
js
out
fisubrs
fisubs
call
stos
mov
dec
mov
xor
xor
sbb
add
push
movsl
lahf
xor
int3
fwait
xor
subl
stos
jmp
jb
addr16
push
test
and
je
xor
enter
cmp
fstpl
push
adc
push
push
int3
outsl
push
push
pop
fisubrs
in
punpckhdq
xchg
pop
aaa
sahf
inc
fwait
cmp
push
lret
jl
add
fnop
cmpsb
pop
or
mov
adc
dec
and
xchg
ss
loopne
inc
xchg
cltd
or
in
xchg
mov
inc
pop
or
subl
dec
mov
icebp
lret
ret
insl
jbe
sbb
aaa
repnz
dec
cltd
arpl
push
out
push
cli
pusha
and
cmpl
dec
sbb
lods
xor
xor
icebp
jno
mov
orb
ja
loop
inc
push
push
gs
push
movsl
jp
jge
std
mov
pop
aas
inc
out
fwait
jb
add
fcoms
sub
xor
or
and
or
sbb
or
sbb
pop
iret
mov
push
mov
or
pop
inc
add
adc
and
outsb
movl
aad
mov
adc
popf
test
dec
leave
xor
sub
cmc
adc
pushf
ret
fcmovu
and
je
aaa
test
sbb
inc
dec
in
pop
cmpsb
xor
cmc
aam
xchg
decb
lret
or
push
adc
sub
lock
add
or
xchg
imul
pop
popf
mov
mov
jno
adc
mov
into
mov
popa
jbe
sub
pop
adc
mov
or
fnstenv
loop
not
cmpsl
into
test
adc
push
insb
xor
or
lret
jno
adc
pop
pop
loopne
cmpsl
cmp
fs
fmulp
sbb
pop
xor
mov
dec
xor
into
ljmp
mov
mov
mov
push
data16
mov
jne
inc
inc
push
sub
cmp
call
in
inc
ljmp
pop
jbe
cltd
xor
hlt
into
xchg
push
push
in
cmp
call
sarb
test
inc
pop
push
xchg
sub
xlat
clc
cmp
or
ret
aam
shrl
pop
mov
pop
daa
pop
jne
adc
loopne
xchg
push
adc
test
xor
mov
loop
mov
shlb
adc
mov
adc
rorl
into
push
mov
ja
lods
pop
lea
adc
or
inc
or
cltd
xor
std
andl
dec
out
dec
cmpsl
jmp
cmp
xchg
in
or
ss
cmp
fs
mov
dec
popf
add
xor
in
adc
or
dec
jae
jo
adc
push
jbe
dec
mov
sub
in
les
sbb
inc
cmpsl
shrb
cmpsb
cmp
or
icebp
push
cmp
je
cmp
jno
shlb
sub
or
push
jecxz
scas
dec
cltd
cmpsl
pushf
fnsave
push
cmpsl
cmp
pop
jge
shll
xlat
cmpsl
into
test
adc
push
insb
dec
pop
or
lret
jo
adc
inc
cmp
shll
in
and
addl
imul
data16
push
aas
lods
shll
xor
fwait
ja
cmp
ljmp
fldenv
xchg
mov
cld
mov
mov
sub
dec
popf
dec
add
xor
pop
push
inc
mov
subb
fldt
cli
xlat
lret
xlat
dec
jnp
inc
add
filds
cld
or
xor
mov
mov
sbb
push
movsl
sbb
mov
add
adc
sbb
movsl
dec
loope
shrb
push
das
mov
lock
movsb
sub
push
push
cwtl
pop
int3
cwtl
fsubrs
cmpsl
sub
into
push
sub
outsl
push
out
or
jbe
adc
xchg
ljmp
jge
ljmp
js
push
test
sbb
or
or
mov
in
sbb
ja
mull
and
sarl
mov
nop
jg
sub
sbb
adc
add
jp
out
jo
daa
in
push
sbb
subb
sbb
int3
cmp
mov
incl
sub
test
inc
cmp
or
sub
xor
pusha
push
mov
sahf
mov
dec
out
pop
out
push
sub
adc
jnp
pusha
shrb
scas
pop
insb
mov
push
sub
loopne
repnz
push
clc
mov
xchg
sub
sub
hlt
mov
out
xchg
inc
push
pusha
ds
xchg
f2xm1
jle
repnz
nop
or
sub
pop
push
pop
bound
das
mov
inc
icebp
push
and
aad
ja
inc
cli
icebp
adc
and
outsb
dec
mov
jmp
rolb
adc
sbb
stos
push
js
daa
in
push
in
fcompl
loope
pop
push
mov
mov
stos
push
jecxz
jg
xchg
das
cmp
pop
inc
mov
sahf
jmp
mov
iret
cwtl
adc
hlt
push
arpl
push
cli
mov
test
vmulpd
sub
sub
xchg
mov
repz
inc
mov
ss
adc
ljmp
inc
jge
ficomps
mov
lret
xchg
das
mov
xlat
push
push
and
dec
pop
int3
pusha
fcoms
jae
fistps
lahf
cltd
cmp
and
jmp
push
push
enter
int3
add
add
jecxz
add
xlat
inc
aaa
dec
popf
cmp
mov
jno
fmulp
enter
jmp
test
lret
arpl
xchg
pop
loope
out
out
or
dec
sarl
addb
adc
gs
lea
les
enter
inc
jbe
pop
xor
ficoms
jmp
adc
lds
mov
pop
adc
mov
lret
lea
loop
mov
mov
movsb
cmp
or
rcll
inc
lds
xor
and
pop
mov
fldz
cmp
xchg
push
sub
mov
and
inc
adc
dec
dec
cltd
inc
xchg
gs
xchg
xchg
sub
pop
adc
pop
and
add
lods
fldcw
data16
sti
subl
dec
jmp
push
mov
sar
sbb
inc
jo
pop
adc
mov
call
mov
dec
inc
mov
cwtl
inc
jb
dec
pop
inc
jp
stc
inc
xchg
add
adc
pop
xor
pop
adc
sub
mov
es
ss
les
or
push
rorb
xchg
xchg
cmp
adc
jmp
adc
push
sub
pusha
cld
aam
xor
add
adc
adc
sub
loopne
dec
or
sbb
push
cmpsb
jecxz
xchg
or
xor
inc
dec
or
and
lds
push
inc
sub
lods
add
fwait
loop
or
andb
stos
mull
ljmp
in
lods
cmpsl
les
push
lret
dec
mov
fstps
shrl
test
lods
pop
imul
jo
pop
adc
arpl
popa
sbb
lds
subb
mov
outsl
or
pop
mov
cwtl
mov
pop
sbb
dec
mov
or
jo
pop
adc
stc
fs
data16
fdivrs
fs
arpl
cmp
pop
dec
push
mov
push
sub
or
lret
push
mov
pop
popf
inc
pop
int
push
mov
dec
subl
leave
xor
pop
adc
outsb
adc
xor
pushf
jmp
int
std
and
mov
sbb
andl
cltd
inc
mov
aam
enter
mov
sub
push
and
mov
add
dec
push
shll
pop
adc
aam
movsl
in
xor
cltd
outsl
fwait
jb
dec
dec
aad
xchg
sub
pop
cmp
add
das
ret
push
mov
mov
or
popf
outsb
push
out
add
push
jae
aam
ret
das
xchg
lds
push
sub
outsl
mov
mov
popf
adc
add
adc
imul
dec
add
adc
inc
int
out
fidivs
add
push
out
sbb
sbb
addl
sbb
fidivl
movb
push
adc
and
popf
mov
adcb
cmpsb
loop
sub
lods
adc
pop
cmc
stos
xchg
lds
mov
rolb
mov
rcrb
ss
jne
cli
pop
scas
cmp
es
mov
fnsave
jecxz
shll
xor
push
mov
popf
movsb
scas
imul
or
pop
nop
mov
adc
sub
pop
pop
push
inc
test
jecxz
mov
cltd
inc
pop
xchg
xchg
sub
dec
idivb
je
jno
ja
cmp
jo
pop
adc
sbb
mov
jmp
mov
xor
xchg
int
or
frstor
push
stos
and
cmp
fcmovne
dec
popf
dec
xchg
sbb
ja
sbb
jle
aad
scas
mov
mov
sub
ds
cmpsl
dec
mov
adc
sar
add
fistps
and
lret
inc
lods
pop
mov
repnz
inc
pop
mov
fistpll
dec
movsb
shl
inc
mov
cmpsl
gs
jl
or
js
pushf
cmp
popf
lods
jp,pt
ljmp
mov
or
xchg
pop
sub
fwait
test
fcomps
ljmp
push
shlb
gs
mov
ja
movsl
lds
mov
ja
xchg
iret
jp
sub
pop
mov
dec
or
xchg
sub
cmpsl
movsb
sbb
adc
int
out
jns
sub
out
cld
aam
mulb
gs
nop
cmpsl
dec
out
sbbb
popf
cmp
fdivp
and
fs
cmc
pop
out
sub
stos
jmp
movl
jno
add
mov
es
mov
dec
mov
shr
shl
mov
push
adc
iret
mov
ljmp
jp,pn
gs
aas
cmpsb
dec
out
inc
addr16
sbb
mov
sub
or
pop
jo
faddl
popa
lds
sarb
or
arpl
sbb
mov
stos
push
adc
xor
shrl
push
aad
outsb
cmp
or
les
cmc
inc
in
adc
push
dec
sbb
push
adc
test
and
mov
sahf
or
bound
pinsrw
hlt
push
test
inc
xor
int3
scas
pop
mov
sub
pop
sub
or
fstl
push
adc
push
scas
pop
mov
push
sahf
cmp
andl
inc
jl
in
ljmp
lahf
xor
int3
ds
out
mov
jmp
mov
jecxz
inc
xor
pop
pop
stos
inc
cmp
sbb
mov
adc
jle
dec
pop
or
pop
imul
repnz
xor
or
mov
adc
push
sbb
push
test
fdivrs
int3
out
lea
aaa
xor
in
repnz
or
fsts
cltd
shrb
xor
iret
sbb
int
stos
cmp
cmp
add
imul
imul
sbb
in
sbb
iret
icebp
shlb
jmp
and
addb
mov
xor
insb
inc
pop
mov
mov
xchg
ds
and
rep
shlb
imul
mov
aad
stos
aad
xchg
sbb
sub
js
sbb
mov
movsl
bound
pop
nop
xchg
push
adc
sub
jge
fwait
push
and
xchg
push
adc
and
and
stc
cld
and
fidivl
xchg
push
adc
push
outsb
add
mov
or
les
adc
adc
addr16
out
push
lret
xor
pushf
mov
push
std
inc
adc
or
sarb
pop
adc
test
fimull
pop
pop
insb
sahf
mov
xchg
lcall
xor
fwait
sub
test
hlt
scas
sti
mov
dec
sbb
xchg
push
loopne
pop
or
int3
repz
jo
adc
and
sbb
mov
in
fmulp
sbb
stc
aad
and
mov
lret
push
fmuls
pop
leave
add
xor
or
cmp
pusha
adc
shrl
ret
lret
icebp
cmpsl
dec
popf
lock
pop
or
dec
ja
jo
adc
or
ljmp
pop
test
push
and
dec
popf
xchg
arpl
lods
pop
mov
stc
mov
pop
adc
cltd
stos
push
fnstsw
ret
mov
dec
dec
or
les
adc
lea
sbb
pop
adc
inc
mov
inc
jbe
xchg
stos
mov
add
shll
push
enter
adc
push
cmpsb
jecxz
nop
xchg
frstor
out
addr16
inc
mov
js
jp
jae
test
aam
mov
fldz
cmp
rol
push
sub
mov
and
inc
adc
pop
adc
stos
xchg
cld
mov
loop
mov
push
push
call
faddl
adc
je
pop
adc
ja
faddl
adc
es
adc
cs
mov
insb
push
jo
pop
adc
aad
imul
mov
add
xchg
xor
ljmp
imul
add
adc
pop
adc
adc
test
push
stos
push
pushf
push
mov
inc
cmp
jo
popf
cmp
mov
pusha
add
pop
fcoms
sbb
in
jb
loopne
js
xor
sub
pop
cmp
adc
inc
push
test
xor
ds
inc
cmpsl
dec
popf
cmc
push
push
cmp
loope
push
xor
and
inc
push
sub
imul
adc
and
lods
mov
movsl
inc
pop
push
sub
mov
inc
test
ljmp
cmpsb
add
adc
lods
pop
mov
inc
mov
sub
adc
adc
cmc
push
ljmp
dec
in
xchg
mov
fldcw
andb
mov
pop
adc
inc
adc
mov
mov
int3
fnstcw
xlat
xor
pusha
mov
cld
jbe
mov
mov
adc
fs
cmpps
or
cmpsl
push
mov
xchg
scas
jmp
adc
inc
cld
jo
adc
pushf
xor
das
stc
shl
mov
add
mov
call
pop
std
or
and
pop
adc
lock
jge
mov
outsb
cltd
enter
or
and
not
add
in
repnz
inc
subl
mov
push
sbb
pop
adc
push
outsl
test
adc
jne
push
dec
lcall
arpl
add
lods
jae
adc
ja
adc
int
and
sbbl
xor
adc
add
loop
xor
das
push
test
adc
push
imul
lods
jae
adc
out
adc
adc
test
adc
clc
cmp
cwtl
cmp
and
es
lods
jae
adc
adcb
enter
jecxz
jbe
adc
arpl
mov
adc
push
add
xchg
or
mov
sub
sub
xor
lds
inc
lcall
addr16
imul
pushf
push
and
sbb
lret
cmp
xor
rcr
pop
xor
cmp
repz
sbb
lods
sub
lcall
push
jl
cld
jbe
mov
mov
mov
icebp
cmp
adc
sbb
cmp
test
test
inc
loope
push
inc
fdivp
insl
out
aad
mov
pop
nop
mov
adc
add
pop
pop
push
inc
test
enter
or
cmp
mov
jmp
les
cmc
nop
ljmp
data16
ss
mov
lea
lret
or
adc
sub
nop
mov
cltd
lret
out
cmp
imul
adc
inc
or
adc
or
stc
aad
inc
sub
movsl
xchg
push
pop
mov
dec
push
mov
cmpsl
dec
xor
lock
jp
fldenv
cmpsb
jecxz
dec
ds
jmp
dec
push
rorb
push
lock
stos
mov
mov
and
pop
cltd
xor
lds
popf
cmp
push
in
or
cmp
push
adc
xchg
push
cld
mov
sub
lcall
popf
cmp
xchg
xchg
mov
popf
xchg
add
cmc
jae
rclb
mov
and
and
mov
shll
jae
adc
inc
cmc
loope
mov
nop
mov
pop
icebp
push
dec
xlat
test
shll
out
xchg
stos
imul
push
lods
popa
out
jb
ret
inc
adc
pop
adc
sub
pop
push
inc
test
or
dec
pop
or
push
dec
cld
jo
adc
cmp
fs
jae
adc
jb
es
sarl
sub
xchg
lds
fstpl
cmc
xlat
stos
push
mov
inc
pop
xchg
xchg
sub
sub
lds
xor
add
loop
lods
stos
push
add
xor
cmp
cmpsb
dec
mov
dec
popf
icebp
cld
push
or
jp
add
adc
xor
mov
lods
pop
loop
mov
shrl
mov
xchg
jnp
inc
cmpsl
fmul
test
mov
lret
lods
pop
mov
pop
push
call
sbb
or
add
inc
into
in
adc
movsl
movsl
pushf
xchg
xchg
xchg
in
sub
jecxz
mov
test
mov
pushl
mov
scas
repz
sahf
lods
je
stos
shl
in
roll
and
cmpsb
mov
iret
jnp
and
dec
fwait
test
add
add
shll
cmpsl
pop
xlat
in
out
out
data16
cwtl
and
or
bnd
inc
xchg
inc
dec
loopne
xchg
in
cmpb
movsb
into
sub
sbb
cmp
leave
test
insb
out
lds
cli
and
je
push
sbb
push
or
arpl
jo
adc
adc
jo
mov
xchg
mov
adc
xchg
dec
xor
les
adc
cmp
inc
rolb
xchg
lods
fisubrl
repz
dec
jge
rcrl
in
ret
fdivs
sbb
adc
cld
fdivrp
sbb
pop
adc
pusha
js
xchg
es
sbb
mov
popa
lcall
cmc
fldenv
xchg
ja
pusha
pop
xor
into
xchg
mov
rcll
cwtl
xchg
push
adc
inc
sbb
in
sbb
xor
push
sub
fs
lea
pushf
in
pop
adc
test
sar
imul
shr
add
pop
adc
sti
les
mov
xor
shlb
mov
mov
jo
pop
adc
das
aad
faddl
adc
movsl
xchg
imul
cmc
sub
insb
cwtl
cli
insl
in
push
out
addr16
stos
insb
push
lds
adc
pop
in
sub
int3
sbb
adc
pop
lds
adc
adc
sbb
mov
pop
lds
adc
jl
cs
lret
movsb
xor
pop
adc
or
jmp
mov
pop
sbb
test
arpl
popf
and
pop
sbb
roll
adc
or
cltd
inc
xchg
pop
pusha
sbb
push
and
sub
cmp
mov
sbb
and
int
xor
dec
popf
xchg
arpl
and
pop
cltd
pushf
dec
push
dec
inc
pshufw
adc
pop
mov
lods
pop
push
sub
xor
test
dec
out
aad
negb
jae
addr16
iret
cmp
pop
cmp
jl
xor
push
dec
push
pop
xor
or
test
xor
xor
pop
cwtl
lahf
bound
lahf
mov
faddl
adc
or
xchg
sub
mov
push
insl
dec
pop
or
jmp
adc
mov
push
cmp
jecxz,pt
jbe
xchg
push
xchg
add
les
pop
xor
jle
inc
add
pop
adc
jge
insb
int
xchg
push
xchg
pop
les
add
pop
adc
lods
sub
inc
fidivrs
stos
push
mov
xor
and
cmpsl
dec
out
inc
dec
call
add
pop
adc
dec
int3
push
inc
insb
shrl
cltd
int3
lcall
popf
dec
inc
popf
hlt
dec
popf
lods
add
pop
adc
std
arpl
push
test
xor
out
ds
cmpsl
dec
movsb
xorb
cmp
ss
adc
pop
adc
mov
dec
movsl
inc
pop
push
sub
mov
les
cmc
ljmp
mov
js
fsts
imul
dec
inc
clc
pop
fdivrl
jge
or
adc
adc
mov
das
aad
mov
je
dec
lahf
xor
sub
and
popa
stos
push
push
std
aam
jbe
push
mov
dec
xor
cmp
dec
and
mov
inc
push
inc
xchg
push
or
cmp
push
adc
loope
popa
push
test
loop
mov
mov
cmp
jb
cmp
and
fdivs
lret
push
jo
pop
adc
xchg
hlt
jmp
stos
pop
mov
xchg
lea
cmpsl
cmp
push
ljmp
push
in
cmp
enter
dec
ja
inc
sbb
aad
bound
mov
push
adc
adc
sub
xor
int
xchg
sub
inc
pushl
out
leave
in
lret
xor
adc
orl
xchg
inc
xlat
and
jecxz
mov
inc
fs
push
adc
mov
mov
push
add
rcrb
das
push
adc
push
adc
lea
shl
adc
jo
pop
adc
push
and
aas
fwait
jb
andl
daa
xchg
cmpsl
inc
ret
aad
sub
sub
sub
pop
xchg
idivb
and
push
jb
adc
sbb
out
lods
dec
mov
jns
sub
dec
shr
adc
sub
imul
stos
in
ds
mov
pop
sbb
push
imul
mov
stos
inc
mov
jo
pop
adc
jo
push
lods
adc
push
jne
gs
jge
add
pop
sbb
mov
mov
lods
jns
js
fstpl
addb
xor
dec
lea
stc
push
nop
stos
pop
fiadds
movb
sub
mov
cs
push
adc
sbb
xor
lds
adc
sub
repnz
sti
lds
lds
push
pop
or
xor
and
pop
aam
out
faddl
adc
popa
loop
jecxz
out
or
adc
lods
fidivrl
mov
mov
xchg
fcom
test
mov
push
jno
adc
leave
mov
dec
xor
push
adc
push
adc
push
lahf
negb
sub
fsubs
mov
jno
lds
lea
pop
adc
sub
pop
imul
data16
jl
lods
fisttpl
cmp
push
xor
sbb
xchg
jle
in
push
jo
pop
adc
ss
fisubs
sub
mov
sub
js
sti
adc
or
mov
xor
faddp
cmp
adc
je
adc
dec
insl
push
sub
pop
adc
and
ja
xor
jo
or
loope
idiv
adc
inc
dec
out
fidivrs
xchg
inc
test
dec
fs
stc
cmpsl
dec
loope
xchg
inc
xchg
adc
or
pusha
jo
mov
mov
ret
pop
nop
mov
adc
aad
sub
pop
push
inc
test
sub
mov
pop
adc
pop
and
popf
cmp
xchg
les
lods
iret
gs
aad
clc
fistl
aad
data16
xchg
arpl
movsl
dec
popf
xchg
arpl
cmpsl
dec
loope
xchg
sub
push
shrb
jo
pop
adc
jecxz
int
xor
scas
je
sbb
or
ja
add
adc
pop
pop
pop
or
aam
jbe
scas
push
pop
or
loope
pop
or
inc
les
dec
pop
or
ljmp
out
jb
xchg
repnz
jo
pop
adc
xchg
mov
pop
jbe
mov
adc
mov
adc
jo
adc
push
or
popf
rolb
jno
adc
rcrb
adc
aam
cs
fadds
test
sub
push
les
or
pop
mov
dec
popa
push
test
and
dec
cld
jo
adc
jbe
jo
pop
adc
loope
les
out
or
adc
aad
push
lods
xor
add
push
cmpsb
jecxz
sub
jae
pop
cmp
lods
ja
orb
sub
inc
fucom
pop
mov
dec
loope
xchg
sub
push
xor
imul
pop
cli
fdivrs
push
cs
mov
adc
mov
adc
mov
lret
or
push
xchg
imul
adc
fisubrs
mov
in
and
push
lret
cmp
mov
sbb
and
mov
cmpsb
gs
data16
add
sbb
imul
cltd
fwait
inc
out
dec
push
and
add
pop
adc
scas
sub
add
mov
sub
nop
rol
push
or
popa
stos
mov
jo
pop
adc
jb
in
inc
push
and
mov
inc
and
aad
push
or
fdivs
enter
push
adc
or
pushf
loop
lret
dec
or
sub
imul
jecxz
dec
neg
stos
in
xchg
in
push
lods
je
pop
adc
ret
mov
and
in
jne
out
fs
aad
adc
dec
cmp
lahf
mov
push
sbb
push
sbb
and
mov
das
jo
and
and
fucom
or
xor
roll
arpl
or
inc
test
fsubp
outsl
cltd
sub
call
push
or
addr16
fsubrs
inc
pop
xchg
insb
pop
and
and
or
xchg
cmc
out
dec
sub
adc
fwait
push
or
xor
push
addr16
daa
fdivl
xor
stos
mov
sbbb
cmp
popf
and
inc
push
sbb
jbe
jb
sbb
lods
add
xchg
mov
shrl
push
or
out
xor
jo
adc
or
cltd
xor
cmp
pand
sub
mov
and
pop
adc
mov
lcall
add
je
movsl
in
popf
cmp
adc
cmpsl
fsubs
fucomi
gs
mov
dec
popf
dec
push
cli
shlb
or
ljmp
addr16
sub
aad
sbb
sbb
xchg
add
cmc
inc
cmpsl
rolb
push
cmpsb
jecxz
dec
xchg
lret
cld
aad
add
je
jl
jecxz
inc
dec
pop
movsl
pop
orb
adc
mov
jo
pop
adc
push
pop
mov
xchg
mov
dec
inc
or
adc
cmpsb
pop
inc
mov
lret
aam
dec
popf
aad
xchg
dec
cmpsl
dec
popf
add
in
xor
push
test
and
subl
cmpsb
dec
add
jbe,pt
add
adc
shlb
push
cmpsb
cmp
sub
pop
mov
es
or
frstor
xchg
aad
and
xor
lret
sub
dec
popf
cmp
scas
in
pop
adc
insl
fistpll
shlb
filds
movb
les
cli
shlb
in
fidivrs
pop
adc
cltd
fstps
adc
aad
mov
xor
stc
cmc
out
fidivrs
push
popa
es
scas
jo
pop
adc
fsubrl
cmp
jl
mov
or
push
mov
push
lds
adc
dec
aaa
cltd
adc
subl
cmpsl
dec
jmp
pop
adc
cmp
dec
stos
lea
xor
stos
and
pop
lds
adc
lret
daa
xchg
pop
mov
push
fldenv
pop
adc
aad
lahf
in
arpl
cmpsl
cmp
pop
sbb
and
mov
cmpsb
xchg
pop
xlat
jecxz
in
test
or
clc
stos
ds
dec
mov
sbb
sbb
fadd
or
adc
ret
lea
mov
inc
cmp
std
or
and
pop
adc
xor
outsb
xor
sbb
fbstp
add
mov
jmp
andl
mov
insb
icebp
mov
pop
push
push
pop
shlb
pop
xor
or
xchg
ss
mov
jnp
sbb
xchg
icebp
jo
pop
adc
cmp
shl
mov
pop
lods
std
add
das
ss
pop
or
mov
jno
adc
mov
add
pop
adc
loopne
or
push
or
lcall
push
xchg
movb
mov
lds
and
arpl
cmp
movb
cli
mov
or
fbstp
icebp
jecxz
mov
gs
movsl
pop
mov
mov
out
stos
inc
ja,pt
movb
jmp
mov
or
pushf
fsubr
cs
enter
mov
lds
mov
and
push
or
lcall
pop
bound
inc
cmpsl
je
stos
lods
or
xchg
icebp
jo
pop
adc
cmp
mov
push
cmp
cmp
push
movsl
jmp
icebp
and
std
pop
ljmp
arpl
mov
adc
inc
lcall
or
adc
out
cmp
cmp
sub
mov
dec
adc
sub
mov
test
mov
test
inc
out
aad
inc
jo
cmpsb
dec
jmp
sahf
repz
je
in
inc
clc
cmp
movsb
ss
stos
mov
adc
rcrl
mov
adc
incl
fs
clc
shrb
mov
faddl
adc
mov
dec
cmp
and
test
mov
lods
pop
xor
shll
xchg
aam
fdivrl
lds
outsb
add
and
sub
inc
daa
fcoml
xor
jmp
lods
pop
mov
xchg
mov
inc
mov
pop
adc
adc
or
loop
data16
push
aad
sub
cltd
mov
push
adc
push
jb
repz
jo
test
and
cs
push
cmpsb
dec
push
jo
or
xchg
popa
mov
ja
in
lret
and
stc
aad
sti
mov
and
das
pushf
lods
or
adc
or
clc
jle
jp
pushf
jb
xchg
or
jo
pop
adc
fwait
popf
test
dec
nop
lods
inc
test
sub
stos
ds
pop
adc
daa
xchg
mov
push
imul
stos
sti
add
int
bound
sub
inc
dec
popf
cmp
push
or
inc
dec
or
pop
xchg
jle
in
push
jo
pop
adc
aaa
int
fisubrs
stos
pop
loopne
vpsubsw
insl
dec
pop
or
out
xor
jno
adc
pusha
pop
pop
or
ds
add
adc
push
pop
or
jl
bound
dec
pop
or
mov
adc
scas
dec
pop
or
cmpsl
addr16
cwtl
lahf
bound
lahf
mov
faddl
adc
test
sub
lods
add
pop
mov
mov
lods
xchg
push
js
ja
jae
adc
pop
ret
lret
or
push
bound
enter
sub
cmp
sub
xchg
lds
jge
fistpll
sbb
fsubs
ret
mov
dec
mov
call
cmp
enter
adc
ds
fisubl
push
dec
cwtl
xor
pop
sub
fisubl
pop
ja
cmpsb
dec
movsl
xorb
std
repz
mov
movsl
mov
cmp
adc
mov
daa
inc
fcompl
sub
xor
dec
xorb
sar
fstpl
dec
or
aad
dec
out
push
pop
mov
dec
into
cmp
movsb
pop
fdivrs
ds
pop
addr16
xchg
dec
inc
ds
stos
out
ds
or
movsl
aam
into
push
sbb
mov
mov
push
mov
add
test
clc
inc
or
adc
adc
mov
pop
in
lods
lods
or
xchg
test
insb
fcompl
xchg
and
jns
fisttps
js
ret
xchg
ret
cmpsb
ljmp
lods
fildll
iret
insb
adc
mov
mov
sub
or
iret
mov
pop
pop
inc
sbb
aad
std
or
dec
adc
dec
movl
cli
mov
movsb
jmp
ljmp
stos
inc
loope
push
jl
lock
leave
pushf
xchg
ss
enter
aaa
or
or
icebp
sbb
adc
ljmp
and
in
jnp
jp
fiadds
jnp
push
out
lea
ja
and
cmc
test
xchg
pop
dec
xchg
nop
scas
test
pop
adc
push
pop
mov
scas
in
jne
fs
ss
mov
add
cs
sbb
push
adc
adc
mov
lret
jne
imul
xchg
adc
sub
out
pop
sti
lds
jge
mov
cmpsl
insb
xlat
or
pop
or
sbb
adc
inc
test
std
shlb
push
test
inc
out
xchg
sub
pushf
cmp
sub
mov
lods
mov
inc
mov
mov
push
adc
sbb
sbb
ja
jg
icebp
adc
push
adc
call
ds
dec
popf
dec
aad
les
ljmp
cmpsb
dec
in
lds
mov
jecxz
cmp
subb
popf
jno
cld
fidivrs
stos
nop
xchg
cmc
sub
pop
adc
push
adc
pop
adc
and
push
dec
mov
adc
popa
inc
pop
stc
xchg
push
mov
jmp
mov
pop
lods
iret
dec
out
aad
shll
cmpsb
cmp
add
xchg
in
imul
test
fsubrs
std
push
lock
test
add
jnp
fsts
int
sahf
repz
dec
pop
cltd
pushf
fs
pop
adc
pop
lods
pop
pop
insb
or
imul
loopne
lds
out
pusha
jbe
ficoms
clc
fndisi(8087
shl
sbb
and
cmc
popf
cmp
fwait
ret
pushf
cmp
inc
lods
andnps
lods
pop
stos
push
frstor
test
xor
clc
lds
cmp
mov
and
enter
or
call
ds
inc
or
jl
cld
sahf
xchg
fadds
nop
jbe
adc
adc
lods
pop
mov
fcomps
adc
arpl
inc
cwtl
push
adc
cwtl
jae
adc
ja
add
pusha
loopne
sub
mov
dec
int
dec
inc
test
adc
push
cmpsb
jecxz
mov
jo
adc
add
mov
xchg
add
cmc
jge
cwtl
push
adc
mov
push
into
lcall
push
stos
loope
inc
push
out
cmp
adc
adc
sub
push
cld
mov
in
lcall
pop
loope
mov
add
dec
sub
and
sbb
or
or
pop
lds
push
scas
add
pop
jle
sbb
sbb
or
orb
pop
mov
add
adc
movlps
es
and
popf
cmp
dec
shll
mov
or
add
lods
push
lods
and
adc
and
sbb
adc
flds
and
ljmp
push
add
in
lret
mov
nop
jo
fists
icebp
data16
clc
pushf
jg
mov
cmp
sbb
and
lock
and
xchg
jne
push
fidivrl
or
or
lds
jbe
mov
fwait
out
fimull
lret
lods
sahf
jo
dec
jns
nop
adc
ss
aad
mov
cmp
in
dec
inc
mov
lock
xchg
mov
mov
call
mov
jnp
jp
hlt
or
pop
dec
rcll
xchg
xor
jg
cmpsb
adc
sub
imul
ficoml
mov
lcall
pop
and
lret
scas
and
adc
xor
int3
or
dec
mov
adc
dec
aad
dec
push
mov
mov
fsts
cmpl
push
adc
pop
mov
ror
es
lock
and
mov
mov
mov
fs
data16
sbb
lret
adc
pop
push
ret
popa
dec
adc
pmaxub
push
mov
xor
test
inc
mov
stos
sub
push
lods
loope
cmp
adc
lock
add
push
cmp
add
mov
push
ret
sarb
jmp
out
xchg
sub
dec
cwtl
push
adc
dec
pop
mov
sub
push
and
xchg
stos
push
fucomip
push
cmp
shll
aad
sar
xchg
dec
dec
dec
dec
sarl
addb
adc
nop
pop
xchg
xchg
pushf
cmp
shrl
leave
mov
pop
stos
out
xor
push
adc
std
or
xor
jp
sub
icebp
dec
test
stos
add
cld
test
mov
lods
pop
cmp
jmp
pop
sub
pop
lea
push
daa
pop
cmp
leave
adc
pop
cltd
mov
inc
sbb
sub
cmp
int3
fstps
std
push
fists
cld
shr
lcall
aad
push
jae
rcl
popf
dec
mov
and
lods
pop
mov
and
das
mov
adc
add
adc
ret
mov
pop
pop
inc
aad
fs
insb
scas
mov
jmp
rolb
adc
ja
aad
inc
lahf
daa
sbb
in
lds
jl
aad
shl
push
mov
in
or
iret
add
xchg
and
inc
push
in
lret
adc
push
loope
dec
out
leave
mov
data16
sti
cs
les
inc
test
movsl
aaa
cwtl
xor
pop
out
push
dec
xchg
sub
mov
or
inc
cmp
adc
xor
mov
xor
cld
orb
leave
ficoms
hlt
ljmp
mov
imul
icebp
data16
dec
popf
fs
xor
mov
stos
and
mov
lcall
arpl
mov
and
je
mov
pop
jne
test
adc
popf
in
stc
jmp
mov
mov
std
mov
adc
loope
test
daa
add
jbe
fidivrl
mov
mov
and
push
rcll
cmp
enter
cmp
testl
in
pop
mov
aas
sahf
xor
lret
xchg
movsl
lods
cltd
repnz
lea
sub
pop
stos
dec
lret
adc
inc
add
and
aas
mov
das
and
add
xchg
ss
mov
mov
push
push
or
mov
push
lods
lret
popf
xchg
mov
subb
enter
fstp
out
clc
fcmove
in
gs
pop
and
or
pop
aas
outsl
xchg
push
out
push
cmp
adc
and
inc
ret
dec
cmc
test
fst
xor
cmpsl
ljmp
push
push
add
push
pop
in
lds
imul
lea
dec
xchg
cmpsl
or
andb
pop
dec
mov
jns
repnz
aas
repnz
pop
jecxz
dec
dec
add
pop
adc
mov
add
enter
enter
das
xchg
cltd
cld
mov
mov
and
shlb
push
jp
sahf
repz
mov
adc
fs
xchg
push
dec
xchg
cmc
stos
mov
imul
add
insb
jne
inc
je
lock
mov
jmp
mov
fwait
mov
or
std
sub
xchg
xchg
test
or
xor
push
dec
in
jae
sub
sbb
mov
fnsave
cs
pop
mov
xor
push
daa
mov
add
loop
lock
icebp
fisubrs
cltd
mov
icebp
movsb
pop
sbb
jne
scas
adc
hlt
leave
fadds
hlt
ljmp
in
add
imul
add
jge
cmp
adc
mov
pop
inc
inc
push
sbb
sbb
into
lcall
loope
ja
xchg
dec
faddl
adc
shrl
fsubp
pop
cld
mov
daa
into
lcall
out
call
cmpsl
cmpsb
pop
and
loopne
stos
shl
ljmp
test
or
adc
mov
push
inc
je
pop
adc
jl
sub
sub
out
lock
faddl
adc
pushf
cmp
fld
cmp
popa
les
pop
fnstsw
add
xchg
inc
pop
push
mov
push
mov
lds
cmp
adc
ljmp
or
enter
fwait
test
test
out
jl
push
sub
andb
adc
outsl
in
cld
push
inc
leave
sub
xlat
push
push
fwait
gs
aad
fidivrs
std
sbb
dec
arpl
sub
cmp
aam
fisubs
xor
inc
push
arpl
push
enter
sub
aaa
hlt
pusha
popa
cmpsl
adc
add
mov
clc
xor
pop
pop
jmp
ljmp
pop
stc
roll
push
mov
mov
pop
jmp
into
mov
or
adc
adc
inc
jle
test
sbb
adc
sub
push
loope
xchg
loop
sub
call
and
enter
aas
push
test
addb
es
xor
dec
dec
sarl
pcmpeqw
sbb
lcall
mov
mov
scas
mov
ret
lock
mov
sti
shl
mov
out
sbb
cmpb
pop
leave
pop
jbe
stos
mov
stc
sbb
pusha
out
ret
imul
popa
lods
xor
dec
pop
in
loopne
and
jecxz
sbb
stos
push
es
cmp
pusha
mov
pop
les
in
pop
pop
popa
testb
mov
adc
push
subl
cmp
or
shlb
loope
jg
in
jl
push
and
popf
je
imull
push
mov
push
push
cwtl
repnz
sar
mov
xor
out
xchg
xchg
mov
jp
sbb
or
xor
sarl
pop
cmpsb
sarl
mov
jg
call
test
adc
insb
pop
pop
inc
and
push
dec
mov
out
add
imul
mov
shrb
or
jmp
xor
loope
sbb
add
add
outsl
inc
fdivrl
push
adc
addr16
cmpsl
ljmp
pusha
mov
or
in
mov
add
inc
sub
xchg
pop
mov
jge
lods
dec
xchg
cmpsl
dec
inc
insb
ret
daa
aad
into
push
jge
dec
rcrb
aam
and
push
icebp
xchg
inc
es
sbb
add
icebp
xchg
pop
movsl
sub
sub
xchg
in
xchg
mov
jecxz
arpl
or
cwtl
mov
int
addr16
adc
sub
jge
mov
aas
adc
in
xchg
outsl
jb
cltd
xchg
mov
repnz
xchg
in
aad
sbbb
pop
mov
pop
loop
cmp
aad
adc
xchg
ret
mov
into
mov
cli
fsub
fimuls
icebp
cmp
add
cs
fistl
inc
aam
xchg
call
mov
jmp
in
notl
addr16
clc
mov
in
sbb
push
ljmp
mov
out
sub
xor
pusha
out
cmp
adc
mov
xchg
xchg
movb
sti
rolb
test
pop
push
ja
dec
xor
mulb
pusha
cltd
jg
insl
daa
out
aad
xchg
or
out
lcall
xor
fs
lret
adc
int
and
stos
out
xchg
add
sbb
test
int
imul
fiadds
lea
add
dec
popf
cs
popf
imul
sbb
test
pop
pushf
mov
lret
add
mov
and
dec
and
sub
fs
daa
sahf
loopne
inc
pushf
mov
pop
mov
sbb
out
lods
pcmpgtw
test
sar
xchg
xchg
adc
xor
lds
bound
xchg
xor
inc
and
mov
mov
add
cmp
push
cmp
add
or
dec
je
cmpsl
push
stc
aam
inc
popf
gs
inc
push
lock
notl
mov
mov
pop
mov
imul
mov
inc
pop
loop
loopne
and
bound
cmc
pop
adc
adc
lds
das
cmpsb
dec
out
mov
sbb
adc
and
pop
cwtl
outsl
cmc
sti
add
pop
jno
adc
ret
les
adc
xchg
jl
hlt
ret
add
cwtl
outsl
jmp
push
jno
adc
icebp
push
add
cmp
insl
jnp
inc
jmp
iret
sti
pop
sbb
ss
sti
xchg
test
andl
adc
inc
cwtl
jae
adc
jmp
lcall
jl
push
adc
pop
sub
test
cwtl
outsl
std
sti
mov
inc
pop
lea
lods
xor
jge
adc
add
dec
popf
fwait
fwait
lods
out
test
adc
scas
pop
xor
pop
outsl
loopne
cmp
adc
mov
fs
jae
flds
xchg
push
gs
add
sar
xchg
mov
push
adc
inc
cmpsl
dec
loopne
jne
scas
add
pop
fwait
fs
inc
push
les
adc
mul
cmpsb
andl
push
adc
leave
into
add
pop
out
lods
push
and
cli
pushf
inc
push
jae
into
sbb
mov
pop
sub
rcr
pop
lret
jmp
push
enter
push
stos
sbb
mov
pop
test
pop
inc
lea
jp
mov
dec
and
fldcw
add
stc
arpl
xor
ja
or
xlat
pushf
sbb
fnsetpm(287
xor
jecxz
push
int
jns
pop
fs
dec
inc
into
mov
jmp
pop
enter
out
divl
pusha
sub
sbb
xchg
in
sbb
xor
jne
or
jmp
jno
jo
pop
cltd
dec
dec
test
in
cmpsb
fwait
and
in
push
inc
sbb
out
loopne
or
jmp
fsubr
leave
inc
sbb
cld
add
loope
xor
lds
jno
push
repz
es
cmovp
fdiv
pop
dec
cmp
push
sbb
or
dec
pop
cld
mov
stos
stos
mov
jl
inc
inc
test
int3
xor
mov
xor
and
lds
inc
cmpsb
and
arpl
pop
jne
pop
sbb
cld
frndint
cmp
jno
nop
arpl
add
cmpsl
outsb
es
mov
cld
cmp
or
mov
sbb
cmp
out
jnp
inc
push
jecxz
out
andl
hlt
ret
mov
push
ds
push
push
jmp
cmc
fistl
push
ja
inc
jecxz
shlb
into
imul
pop
sahf
bound
das
pushf
pop
movb
adc
lods
sub
push
cmpsl
cmpsb
cmp
add
leave
les
cs
push
movsb
rcll
lods
mov
mov
roll
pop
and
lock
lds
pop
rcll
inc
dec
and
push
cmpsb
cmp
aam
jecxz
pushf
sar
xchg
add
es
enter
das
jno
aad
in
lods
xor
addr16
cmp
xchg
arpl
add
lock
adc
pop
jmp
loop
sarl
orb
adc
gs
fldenv
test
leave
or
les
pop
int
mov
pop
jg
adc
loope
pop
push
movsl
fs
push
pop
cmp
adc
pop
adc
pop
adc
sbb
sub
push
adc
out
mov
popf
dec
nop
cltd
jecxz
or
repz
pop
jl
aad
jmp
or
call
cmpsl
sbbb
lds
lea
push
sbb
or
adc
mov
dec
cli
cmpsl
sbb
and
fisttpll
and
test
lods
into
adc
pop
in
pop
mov
xchg
xchg
xchg
stc
mov
les
loope
jns
shrl
jbe
cmp
and
mov
and
xor
les
or
daa
lahf
pop
insb
sahf
jb
sub
cmp
sub
inc
sub
repz
out
imul
in
fstps
xchg
xchg
mov
dec
cli
adc
cmp
rolb
stos
add
fsubrp
pop
and
jbe
sub
xchg
and
sub
sub
aaa
addl
bound
ljmp
lcall
add
enter
mov
sar
mov
xchg
imul
pop
mov
sub
dec
les
or
pop
das
adc
in
gs
aaa
pop
mov
dec
int3
pop
mov
mov
shrb
push
xchg
sub
mov
into
cltd
faddp
ficoml
cmp
into
add
fisttpl
rol
push
daa
dec
push
mov
inc
sub
adc
sbb
and
mov
sub
imul
sub
cmpsb
jecxz
pop
mov
sbb
push
mov
mov
test
aam
in
xchg
rclb
jle
xchg
movsl
jecxz
mov
test
je
and
xor
out
shlb
scas
imul
add
adcl
inc
push
cmc
out
mov
and
je
fsubrl
pop
add
mov
mov
insb
cmp
add
sbbl
shl
addl
das
iret
lcall
xchg
iret
fwait
jb
push
ret
or
sub
lods
inc
or
fs
sub
cmp
and
in
push
sub
push
sub
in
cmovl
into
sub
sbb
pop
dec
out
scas
stos
inc
loope
sbb
aaa
jg
pop
mov
leave
test
pop
hlt
int
dec
mov
stos
xchg
cmc
mov
mov
aaa
loopne
jp
xchg
cmpl
jno
outsb
filds
sub
adc
jo
ret
push
add
pop
cld
xor
outsl
adc
cld
inc
xor
adc
lods
inc
inc
cmp
adc
es
cmpsb
jmp
mov
pop
adc
cmc
xor
jmp
stos
test
dec
stos
jle
push
das
outsb
mov
mov
jle
sbb
mov
ficoms
pop
inc
mov
lds
daa
mov
into
mov
xchg
sub
pop
mov
stos
std
add
push
loope
cmp
jge
lahf
jno
pop
jp
jbe
jbe
aad
pop
xchg
out
stos
scas
mov
in
xor
cmp
loopne
aas
cmp
jae
dec
xor
add
sub
and
ss
sti
push
loope
mov
imul
pop
xchg
stos
inc
lret
xor
dec
xchg
daa
sbb
push
hlt
or
pusha
dec
int
jno
rolb
ret
push
lods
fidivl
fwait
leave
mov
add
mov
dec
popf
das
jecxz
scas
xor
fucomi
cmc
jecxz
add
adc
push
ror
jb
fcompl
addl
adc
mov
int
jmp
lods
or
popa
fistpl
cli
adc
ror
ljmp
cmp
sub
sbb
bound
test
mov
adc
xorb
pop
push
and
sbb
divb
pop
js
ds
pop
mov
inc
dec
popf
imul
push
repnz
setbe
push
inc
pop
daa
adc
imul
push
cmp
int
push
cmpsl
adc
fwait
insb
mov
push
jno
pop
stos
push
lods
pop
cmp
cmp
scas
pop
js
in
inc
jp
cmp
inc
lock
push
stos
push
daa
sub
xor
shll
xchg
pop
jnp
mov
adc
xchg
fs
jno
scas
push
xchg
inc
xchg
pop
jne
daa
cli
roll
lret
push
fistps
pop
inc
sub
mov
mov
ficoml
lods
nop
test
out
mov
pop
jbe
faddl
sti
dec
aam
push
and
out
adc
stos
pop
mov
dec
dec
dec
out
push
mov
xchg
add
push
cmc
ljmp
lahf
gs
xor
mov
cmp
sub
loope
nop
add
push
dec
adc
push
adc
int
cmpl
cmpsb
dec
loope
xchg
xchg
pop
cli
cltd
jbe
jg
inc
push
and
cmp
adc
push
inc
jno
lock
shr
ja
adcb
jle
mov
pop
paddsb
cmp
dec
pusha
fnsave
mov
mov
fwait
push
imul
lods
cs
pop
int3
xchg
das
insl
sbb
ret
lea
sbb
or
or
cmpsl
pop
mov
push
dec
imul
rclb
jo
inc
mov
cltd
dec
ljmp
inc
in
pop
addr16
leave
lods
mov
aaa
int
mov
jno
rcll
dec
in
cwtl
jbe
push
mov
sbbl
hlt
adc
or
xor
jae
into
inc
stc
push
add
inc
mov
in
add
xchg
adc
add
imul
in
call
ret
repz
dec
jge
int
test
in
mov
cwtl
dec
fwait
in
dec
dec
pop
adc
aas
cmp
jecxz
pop
imul
cmp
add
mov
mov
sahf
push
insl
add
sbb
cwtl
pop
pusha
and
test
enter
pop
push
in
in
mov
mov
inc
sarl
stc
fwait
inc
call
test
mulb
sbb
scas
push
xchg
rorb
imul
fwait
subl
xor
dec
imul
ljmp
enter
push
adc
dec
dec
cmp
hlt
dec
lock
cmpl
orl
or
sar
mov
jg
cli
mov
cmpsl
inc
pusha
jbe
and
aam
and
inc
test
mov
ljmp
movsb
pop
icebp
insb
fnstcw
xor
sub
daa
xchg
pop
in
gs
test
add
rorb
jg
stos
push
fsubr
pop
dec
mov
out
pop
cmp
dec
popf
cmp
push
cmp
add
sub
push
lods
pop
fldcw
cmp
xchg
sbb
mov
lds
adc
std
sbb
pop
xor
inc
pop
pop
subl
movsl
jmp
pop
ja
fisttps
cmc
xchg
ljmp
popa
inc
push
fstl
sbb
mov
movsb
andl
cmc
ljmp
sbb
mov
mov
popf
loop
bound
inc
std
jle
stos
sub
test
pop
leave
xchg
sub
mov
mov
xchg
push
call
insl
xchg
push
lock
sahf
in
out
out
pop
mov
or
sahf
imul
cmpsb
dec
popf
cs
xchg
push
call
push
xchg
dec
test
adc
fadds
sbb
and
das
and
fistl
inc
dec
push
test
and
push
mov
repnz
lock
push
push
cmpsl
dec
popf
mov
popf
loop
hlt
sahf
lds
loop
stos
push
shrb
mov
test
pop
les
inc
sbb
stos
rdtsc
cmc
pusha
mov
stos
pop
adc
push
adc
gs
bound
sbb
cmc
or
aaa
lea
data16
cmp
xor
les
imul
cmp
sbb
push
mov
or
xchg
es
sub
fnstcw
jmp
into
into
das
lahf
dec
bound
mov
pop
scas
xchg
adcl
xorl
sub
divl
sub
gs
inc
clc
mov
cli
xchg
adc
lock
fwait
js
shl
je
cmpsl
xchg
pop
in
cmp
fidivs
xchg
sbb
push
fnsave
dec
movsb
lret
sub
cli
cmp
hlt
mov
fwait
add
sub
sub
and
mov
pop
mov
mov
outsb
mov
les
sub
fldt
adc
sbb
lds
push
lds
pop
mov
xchg
fdivs
xchg
outsb
rolb
jb
mov
xchg
jmp
ret
sub
jb
adc
lods
xor
loop
pop
adc
lods
shll
xor
jge
pop
xchg
ds
in
pushf
popf
adc
push
dec
mov
inc
sarl
xchg
fwait
sub
push
icebp
nop
test
mulb
sbb
scas
push
xchg
rorb
imul
es
test
adc
loop
mov
push
roll
das
fistl
shll
movsl
pop
movsb
std
pop
bound
mov
lret
add
jnp
lds
int3
lcall
mov
mov
mov
pop
arpl
cs
dec
xor
into
cmp
sub
xor
adc
mov
cltd
gs
sub
sub
loop
lock
sub
xchg
ss
repz
dec
jl
mov
jns
xor
mov
pop
sub
mov
lock
ret
sahf
and
clc
imulb
pusha
cmp
xchg
fs
and
fnstsw
sarl
sbb
xor
aaa
in
stc
mov
daa
test
sbb
cli
in
push
cmp
adc
hlt
pushf
call
mov
aam
inc
nop
sbb
xchg
jle
bnd
mov
and
adc
sbb
add
out
inc
pusha
jbe
cli
andl
inc
dec
cmp
pop
mov
int
int3
or
mov
test
fxch
mov
pop
dec
mov
mov
push
push
loopne
out
aas
loop
and
jne
shll
fsubr
inc
cld
aam
push
mov
cwtl
cmp
in
adc
mov
push
xchg
push
cwtl
xor
cmp
stos
jl
les
push
popf
imul
bound
add
mov
push
cmp
xlat
and
cld
xchg
lcall
les
pop
rcrl
bound
push
adc
loope
mov
adc
push
sar
mov
jns
in
mov
cld
sarl
stc
call
inc
in
in
and
roll
adc
lret
or
dec
xor
fidivrl
mov
pusha
xor
test
xchg
mov
jp
inc
fstpl
daa
rcr
fwait
popa
push
pop
cmp
out
movsl
orb
xor
lods
aam
mov
pop
movl
sub
mov
subl
pop
daa
sbb
out
lds
js
pop
in
cmp
xor
jb
push
mov
les
loop
push
push
stos
lahf
outsb
jns
ficoms
push
adc
cmc
pusha
mov
inc
addr16
lock
inc
test
jne
int3
ret
push
lods
ficoml
out
mov
cmp
cmp
or
inc
aad
cwtl
outsl
inc
sti
fucomi
push
jecxz
mov
cmp
mov
dec
popf
xchg
push
push
loopne
cmp
adc
clc
pop
sub
push
aad
jge
sub
adc
and
cmpsb
dec
out
sbbb
push
jg
faddp
inc
andl
pop
and
mov
mov
dec
int
test
outsb
or
mov
xchg
mov
mov
mov
dec
sarl
pcmpeqw
mov
push
gs
xchg
data16
cmp
adc
popa
lds
cli
add
lock
jbe
sar
repnz
xor
adc
pop
call
bound
pop
cmpsl
dec
call
mov
adc
inc
fsub
cmp
cmp
cwtl
push
loop
sbbb
imul
movlps
fwait
xchg
in
xchg
mov
adc
jb
outsl
dec
out
popl
stc
popf
out
loop
aam
cmp
rcrb
mov
in
cwtl
leave
jns
pop
jb
push
ds
enter
pop
mov
mov
mov
out
pop
push
mov
clc
cmpl
test
and
fcomps
insl
in
shll
popw
and
or
out
stos
mov
push
adc
ret
ret
iret
int3
lret
pop
adc
xchg
mull
and
and
pop
cmc
bound
sub
js
or
cmc
pop
aam
mov
icebp
mov
xor
mov
testl
std
add
pop
jecxz
lahf
adc
push
adc
pop
push
in
or
popa
loop
ret
int3
adc
adc
mov
mov
mov
cli
aam
ds
insl
lock
cmp
dec
movb
mul
or
and
pop
fwait
or
or
test
lods
push
popa
adc
push
stos
add
jno
sbb
dec
nop
aam
enter
adc
dec
aad
cmpsl
lock
inc
jge
mov
sub
roll
sahf
enter
jge
stc
xchg
lock
icebp
pop
movsl
es
js
cld
out
sbb
sub
cmc
in
xor
rolb
test
pop
arpl
mov
or
push
mov
lods
loopne
fistpll
fsub
pop
inc
adc
xor
cmc
loopne
mov
loope
mov
push
loop
adc
cmpsb
xor
inc
fists
mov
inc
pop
xor
add
shl
push
sbbb
mov
push
mov
int
mov
in
mov
out
js
fidivl
push
adc
inc
push
or
leave
arpl
flds
daa
xor
dec
cmp
popf
fs
aad
pop
mov
leave
lret
cmp
fstl
dec
addr16
dec
cmpb
cmp
je
dec
mov
shrl
xchg
popa
cmc
bound
jo
dec
popf
inc
cmc
adc
sub
sti
aaa
ret
adc
inc
popf
inc
cltd
xor
dec
outsb
sti
fsts
gs
int3
shrb
dec
test
rorl
mov
adc
movb
nop
fmuls
and
xor
fsubrp
ljmp
or
mov
lds
pop
mov
mov
xchg
andb
adc
or
or
lret
daa
xchg
ja
cmp
popf
inc
dec
pop
movsb
mov
sub
test
fcmovb
xchg
sub
mov
mov
mov
ret
add
leave
outsl
jno
ljmp
xor
gs
and
popf
subb
sbb
iret
data16
std
pop
stos
mov
loope
stos
sub
test
out
imul
adc
ja
stos
sysexit
adcb
out
out
sbb
out
int3
mov
add
dec
into
into
lods
fs
pop
scas
push
dec
int
push
adc
cwtl
int
or
stos
inc
shl
mov
xorb
fmull
lods
adc
test
popa
inc
push
and
bound
or
loop
lods
sqrtps
jne
stos
push
adc
cmp
xchg
mov
sti
js
rcr
jno
inc
stos
out
fistpll
xlat
mov
iret
push
jno
push
xchg
inc
mov
leave
cld
sub
outsb
repnz
gs
std
jmp
mov
xchg
shll
fs
mov
push
lock
xchg
push
mov
xchg
in
jmp
aad
mov
xchg
mov
es
pusha
shll
jl
test
cmp
and
push
setns
ror
popf
adc
jp
add
xor
test
xor
jge
pop
enter
lds
imul
std
push
std
filds
shrb
je
jae
or
pop
sbb
or
fldenv
xchg
xor
mov
cmp
jb
jo
loop
aas
das
sbb
inc
cmp
push
jle
jmp
int
pushf
xchg
jecxz
xchg
sbbb
mov
in
mov
inc
adc
leave
rcll
addr16
sub
movsl
ds
sti
or
adc
ljmp
mov
ljmp
out
jmp
lret
pop
shll
pop
stos
cmp
push
enter
loopne
test
in
xchg
cmp
pop
scas
addl
ficoms
lret
fists
cmp
arpl
or
jno
push
pop
sbb
push
jg
cwtl
scas
rcrl
xchg
cmc
xor
sti
inc
rol
sahf
cmpsb
es
dec
add
rolb
icebp
pop
adc
cmp
int3
dec
jle
push
jge
or
insb
in
sub
cmpsb
xchg
fst
fs
montmul
cmpsb
add
xchg
sub
stos
test
jmp
mov
and
push
decl
imul
sub
xor
aad
lods
sub
in
add
lcall
int
rcrl
cwtl
and
dec
int3
push
popf
push
inc
xor
mov
mov
bound
xchg
imul
and
xor
cmc
fs
lcall
pop
pop
cmp
add
mov
adc
adc
or
cmpsl
dec
loop
mov
fnstsw
bnd
movsl
mov
mov
xchg
xor
push
ret
ja
jb
and
cmp
loope
mov
lods
frstor
push
xchg
xor
adc
jmp
jae
jnp
notb
aaa
addb
push
fxch
arpl
out
and
mov
cmp
cmpsb
cmpsl
xchg
pop
int
ja
fidivs
xchg
sbb
push
fnsave
dec
push
xor
mov
mov
popf
loop
and
inc
mov
or
fwait
insl
adc
pop
pop
sbb
gs
mov
jnp
rcr
jno
adc
insl
xchg
inc
icebp
push
sahf
outsl
in
adc
mov
es
adc
jmp
cmpsl
dec
loop
lea
pop
or
lods
frstor
lock
xor
adc
loope
subl
iret
data16
std
pop
stos
mov
in
stos
and
sbb
cmc
arpl
filds
jg
cmpb
dec
inc
popf
cmp
xor
lds
adc
mov
xor
mov
mov
cmp
enter
pop
xor
sbb
mov
and
daa
adc
jb
push
mov
les
in
sub
xchg
adc
cmp
adc
inc
aad
fistpl
fs
jmp
js
fsubrs
mov
adc
jmp
xchg
mov
mov
hlt
jbe
add
dec
mov
push
cmpsb
dec
ss
filds
loope
lcall
inc
vpandn
inc
sub
lds
fs
mov
jne
in
ror
inc
mov
nop
sub
adc
sbb
mov
cltd
mov
aad
push
outsl
and
add
xchg
and
imul
jmp
and
xlat
mov
mov
movsl
das
cs
inc
les
es
cmp
adc
out
xchg
cmp
ss
cmc
lock
test
insb
cwtl
pop
pop
popf
xchg
sub
cmp
cs
aaa
and
dec
and
and
rol
lods
push
in
int
pushf
fs
int3
in
out
daa
inc
out
mov
mov
jnp
jmp
scas
or
mov
scas
test
xor
inc
jge
push
and
das
xchg
insl
dec
roll
xor
addb
ss
andl
and
scas
add
inc
test
movsb
pop
pusha
shlb
xlat
fs
sub
aaa
in
inc
pusha
cmc
ss
inc
push
aad
outsb
mov
mov
jnp
push
jp
lock
sahf
push
pop
rcr
inc
xchg
fisttpl
cmp
mov
or
jl
lock
dec
inc
stc
adc
fwait
push
xor
in
outsb
mov
jg
dec
xor
insb
xchg
jl
mov
cli
fsubs
test
int3
dec
jle
into
push
movq
jb
das
movsl
sbb
mov
arpl
xor
mov
sti
add
lcall
mov
sahf
xchg
call
jbe
pop
cmp
pop
test
mov
in
jbe
inc
insb
sbb
test
data16
xchg
clc
sti
fbld
scas
mov
repnz
or
mov
push
stos
lahf
outsb
jns
xor
adc
sub
in
mov
sub
lock
ja
or
mov
push
stos
gs
jae
push
push
xor
adc
push
stos
mov
mov
aaa
and
jge
ja
adc
xchg
pop
movsl
popf
fs
dec
faddl
adc
loop
dec
faddl
adc
bound
mov
add
pop
adc
pop
mov
sub
cmp
push
adc
lret
adc
sub
mov
int
mov
dec
popf
dec
into
xchg
mov
rcrb
push
sub
out
divb
adc
jno
inc
add
lds
adcl
out
cld
aam
ljmp
aad
ljmp
bound
pop
and
adc
insb
sub
in
dec
cmp
imul
in
popa
lds
les
cs
push
mov
pop
and
popa
xchg
inc
push
call
mov
xchg
push
adc
std
sub
and
sub
lcall
pushf
cmp
cmpsl
movsb
sub
push
adc
aaa
adc
push
adc
aam
int
push
lea
popa
lds
roll
inc
jbe
jl
imul
shrl
push
cmp
loopne
mov
adc
cmpsl
lds
add
dec
inc
jp
xor
mov
cmp
leave
pop
cmp
cmp
push
mov
dec
fs
jbe
je
sub
push
frstor
dec
mov
clc
lret
push
cmpsl
les
inc
and
mov
mov
clc
add
cmc
pushf
insb
pop
inc
pop
daa
pop
mov
cmp
and
aad
out
pop
mov
dec
fs
ja
je
push
cs
pop
xchg
push
jne
fbld
pop
mov
jmp
int3
arpl
xor
loope
pop
test
lcall
jmp
cmpsl
dec
jmp
push
icebp
jmp
fisubs
fwait
popa
loope
cld
xchg
dec
int3
adc
cld
add
add
jl
mov
movsb
dec
out
mov
pusha
pushl
test
movsb
mov
sbb
jl
sahf
imul
mov
cmpsl
adc
rcrb
pushf
inc
fisubs
dec
xor
jns
push
mov
fiaddl
lock
xchg
jge
jmp
mov
push
adc
or
cmp
push
subl
jb
jbe
and
mov
jo
aaa
push
push
inc
cmp
popw
lods
xchg
sarl
jne
adcl
jo
test
cld
add
adc
aaa
dec
cld
ret
jle
jle
lcall
dec
mov
or
jle
leave
test
fs
pop
fs
cmpsb
inc
sbb
cwtl
jb
ret
das
out
jne
mov
or
jae
shrb
sub
xchg
push
jae
xor
repz
mul
jnp
int3
shll
aam
movsb
pop
stos
xchg
adc
cwtl
push
sbb
mov
add
movsl
bound
xchg
inc
repz
int
mov
inc
stc
xchg
jge
and
icebp
jno
mov
popf
imul
jle
icebp
jmp
cltd
xor
dec
dec
xor
sub
xor
adc
cs
stos
outsl
push
dec
cmp
push
pop
pop
adc
jge
cltd
cmp
xchg
sub
pop
repnz
sbb
mov
fnsave
jbe
mov
dec
leave
mov
shlb
int3
insl
mov
mov
jecxz
es
sbb
fdivs
push
dec
mov
push
pop
sub
mov
sub
loope
lods
fsubr
rcr
or
cmp
and
icebp
push
es
je
xchg
push
cmpsb
dec
pop
push
inc
lret
xchg
sub
cmp
out
jne
shll
jmp
mov
fisubrs
out
push
cmpsb
dec
in
leave
stos
pop
out
lret
dec
cmpsb
dec
popf
xchg
adc
ja
leave
js
or
scas
push
cltd
dec
pop
lret
xchg
sub
fnsave
cmp
cmp
in
nop
cmc
mov
push
in
addr16
xor
orl
loope
xchg
cltd
mov
cmp
add
adcl
xor
loop
sbb
stos
shlb
adc
add
mov
and
das
adc
orb
mov
cltd
orb
jp
stos
push
xchg
dec
cltd
xor
mov
sub
mov
shll
out
fdivp
test
addr16
and
lcall
dec
mov
out
pop
mov
xchg
add
adc
push
cltd
xchg
inc
jle
push
dec
cwtl
push
adc
mov
mov
arpl
aad
fwait
out
stos
mov
inc
mov
jle
mov
jb
xchg
loope
cmpsl
mov
adc
push
cli
inc
jl
outsl
fs
pop
cmp
sbb
dec
fildl
xchg
loope
les
pushf
cmp
dec
loop
adc
or
in
xor
mov
lock
out
icebp
fdivs
adc
subl
pop
loopne
or
or
mov
xchg
add
cmpsl
xor
pop
adc
mov
sub
test
call
lods
pop
mov
cmp
inc
cwtl
lock
adc
test
ljmp
adc
dec
lcall
push
lods
add
or
fldl2e
les
pusha
daa
inc
cmp
pop
adc
cmp
lcall
in
pop
adc
fucomip
imulb
mov
inc
or
adc
es
mov
fwait
fs
in
movsb
incl
adc
fwait
sub
pop
jns
sub
or
ds
lcall
pop
adc
dec
mov
lods
mov
adc
push
lods
push
std
mov
cwtl
adc
fs
lea
mov
or
add
adc
sbb
sbb
push
pop
mov
xlat
inc
repz
adc
dec
mov
push
jo
cmp
testb
pusha
lods
pop
popf
adc
fwait
loopne
addb
jae
jecxz
jg
out
sti
js
pop
adc
inc
nop
and
and
or
jmp
std
stos
add
jmp
je
adcl
add
cmp
pop
sti
add
pusha
test
add
cmp
push
pop
aas
mov
pop
adc
xlat
xchg
outsl
lcall
cli
pop
adc
ds
dec
aad
movsb
repnz
sar
pop
adc
xchg
lods
sarl
cld
mov
in
adc
mov
cwtl
mov
incb
adc
mov
dec
or
adc
lcall
lcall
jb
or
or
sbb
or
sub
jle
cmpb
out
inc
or
adc
inc
test
jnp
fnsave
pushf
imul
pop
adc
lods
and
inc
sub
pop
adc
xchg
lret
ss
outsb
sub
enter
pop
adc
sbb
pop
push
or
mov
rcll
loop
adc
jno
add
inc
lret
pop
adc
adc
inc
jmp
jo
pop
adc
mov
sahf
mov
or
adc
inc
test
inc
aad
shll
or
repnz
imul
cmovle
adc
push
adc
adc
mov
pop
adc
sbb
int
bound
or
jle
pop
mov
xchg
ja
jb
sub
or
cmp
in
sbb
pop
and
or
lds
or
loopne
out
pop
adc
sub
add
fsts
sbb
adc
out
mov
cli
or
lock
adc
test
adc
sahf
xor
or
pop
stos
lods
pop
out
adc
and
stos
push
or
loopne
and
pop
ljmp
or
movsl
pop
xor
addr16
jecxz
pop
or
or
mov
and
cmp
sub
orl
pop
or
xor
les
cmp
pop
or
les
lret
sahf
xor
jmp
ja
dec
jo
mov
pop
adc
nop
lods
pop
mov
xor
mov
lods
dec
push
sub
out
adc
and
ljmp
lods
push
dec
mov
repnz
or
xor
lds
or
pop
adc
dec
or
pushl
lock
pop
adc
lods
pop
out
adc
jle
sbb
adc
cmc
ret
jns
sub
pop
adc
test
lcall
xor
adc
fucomip
notl
in
jo
pop
adc
test
add
or
or
mov
sub
dec
mov
loopne
out
pop
adc
sub
add
loopne
fcoms
or
mov
xchg
je
jg
fdivr
pop
adc
inc
test
inc
aad
clc
ds
pop
adc
sti
cmpsl
xor
pop
adc
mov
mov
jbe
push
pop
jge
in
adc
mov
mov
pop
adc
into
sub
mov
cmp
or
sub
or
cmp
in
sbb
sbb
adc
cmc
mov
sub
dec
mov
mov
adc
stos
push
cli
cmpsl
fs
pop
adc
andb
inc
rorb
testl
sub
stos
jns
fcomps
cld
pop
adc
loope
pop
mov
cmp
cmp
sub
pop
adc
inc
orl
test
inc
ret
or
hlt
add
dec
mov
cltd
js
or
adc
fdivrp
iret
dec
jno
or
in
pop
adc
add
mov
out
int3
out
pop
adc
repnz
cmp
cmp
or
sub
mov
out
enter
data16
jp
outsl
testb
in
adc
aam
sub
insl
add
pop
adc
insb
hlt
mov
add
push
jne
xor
enter
add
pop
adc
int3
cmp
push
pop
cmp
and
adcl
sub
or
int
pop
imulb
leave
hlt
repnz
adc
loope
pop
dec
rcrl
in
push
or
mov
sbb
gs
adc
dec
xchg
stos
fisubs
xchg
pop
je
cli
pop
adc
pop
cmpsl
pop
imull
testl
outsb
leave
shl
testb
push
loopne
adc
pushf
adc
fsubrl
pop
adc
gs
mov
push
lods
mov
insb
in
pop
adc
xchg
xchg
and
and
mov
leave
push
std
stos
push
movsb
xor
add
imul
pop
adc
aaa
int3
cmp
in
pop
adc
sbb
pop
push
int3
icebp
pop
adc
cmp
mov
or
ret
pop
insl
cwtl
jno
cli
popf
test
fbld
jl
inc
xchg
in
pop
adc
add
push
bound
mov
jecxz
or
xchg
bound
adc
pop
mov
lcall
or
lods
fcoms
sub
out
adc
js
or
adc
push
stos
push
sti
cmpsb
gs
adc
or
jmp
or
adc
test
adc
les
push
lods
cmovle
adc
pushf
mov
and
sbb
pop
adc
ljmp
pushl
cmp
or
jle
pop
mov
xchg
ja
jb
jo
pop
adc
in
sbb
pop
movsb
cld
pop
adc
les
xor
fwait
adc
jp
fistpl
lods
pop
mov
cmp
inc
in
sti
pop
adc
dec
and
pop
ljmp
adc
xchg
fwait
xor
loop
add
or
xor
arpl
mov
xchg
in
pop
adc
int
mov
lcall
or
lods
jmp
popf
adc
js
or
push
stos
push
sti
cmpsb
gs
adc
cmp
cli
or
movsb
out
pop
adc
test
adc
les
adc
push
push
lods
cmovle
adc
mov
jp
inc
inc
insb
out
adc
lcall
testl
mov
xchg
ja
jb
sub
push
lods
pop
in
sbb
pop
xchg
out
adc
or
mov
jnp
xor
or
in
data16
push
cld
test
push
or
add
cmp
inc
xchg
or
adc
jle
inc
test
cld
push
ret
lods
repz
adc
pop
fwait
xor
loop
or
or
xor
arpl
mov
xchg
bound
pop
adc
inc
pop
mov
lcall
pop
adc
out
adc
js
out
adc
push
stos
push
sti
cmpsb
gs
adc
sub
cli
or
testb
dec
xor
add
adc
inc
push
lods
cmovle
adc
mov
adc
adc
fldl
fdiv
pop
adc
data16
fwait
arpl
push
or
jg
pop
mov
xchg
jbe
jno
pop
hlt
pop
adc
fists
out
sbb
pop
dec
add
adc
sbb
mov
scas
mov
jne
sub
cli
scas
jl
out
pop
adc
xor
inc
inc
fcompl
or
out
sub
mov
lock
or
pop
adc
mov
pop
sub
or
pop
adc
outsl
enter
mov
jp
hlt
pop
adc
lret
jle
jge
and
mov
sysenter
inc
incb
or
adc
fs
lretw
xchg
push
add
adc
jmp
fxch
cmp
or
pop
adc
mov
lret
sbb
movsl
sbb
pop
adc
outsb
das
aad
cmpb
adc
call
pop
test
repnz
movsb
push
pop
mov
pusha
sbb
adc
push
mov
hlt
lods
jl
pop
adc
bound
popf
dec
fistpl
pop
adc
inc
or
mov
sbb
pop
adc
sbb
pop
lock
jbe
xlat
adc
pop
adc
push
mov
push
dec
dec
add
pop
adc
cmpl
popf
inc
repnz
fcmovnu
or
adc
pop
subl
adc
pop
adc
and
fcoml
push
mov
adc
push
stos
push
shll
xor
sub
xchg
jno
pop
adc
xor
sbb
adc
cmp
jge
or
les
les
sbb
jmp
pop
jbe
push
or
not
imul
adc
adc
push
movsb
jne
pop
adc
adc
or
adc
push
mov
hlt
cld
lods
mov
mov
mov
pop
adc
xor
push
loop
inc
int
data16
dec
dec
popf
scas
mov
sbb
cmp
std
stos
push
push
iret
mov
int
lret
sub
fwait
popa
loopne
xchg
test
mov
and
or
das
mov
jmp
and
popfw
cmp
mov
dec
mov
pushf
scas
popf
jl
push
shlb
stos
sbb
loop
jl
dec
popf
xchg
fistpl
cmp
fs
push
stos
aad
jne
jmp
jp
xchg
sub
xor
lds
adc
fiadds
cmc
std
stos
push
push
imul
mov
gs
lods
mov
inc
mov
inc
pop
adc
inc
or
sbb
shlb
mov
shlb
int
mov
je
test
add
add
mov
cmpsb
sub
loope
sub
jo
dec
nop
dec
popf
xchg
add
cmc
std
cmp
push
test
sbb
lods
xchg
push
pop
pop
xchg
mov
add
int3
push
push
inc
adcl
loop
sub
je
in
xor
adc
jno
or
ret
inc
add
dec
inc
loop
sub
push
xor
cmp
fstl
cmp
leave
js
or
push
cmpsb
ljmp
push
cmpsl
loope
loopne
adc
dec
or
and
jnp
das
push
dec
mov
pop
mov
pop
loop
jne
jl
cmp
adc
out
jns
std
dec
sub
pop
fldenv
pop
popf
mov
sahf
les
push
cmpsb
dec
loope
xor
cmp
test
outsb
into
lcall
popf
inc
dec
shrb
mov
int
fmul
hlt
inc
or
push
dec
outsb
xor
testb
push
pop
clc
mov
pop
cmp
sub
sbb
add
jne
xor
and
push
adc
fwait
test
fidivrs
daa
fisubl
dec
cwtl
or
enter
addr16
pushf
dec
xchg
sbb
add
out
jns
inc
movsb
ret
add
pop
adc
popf
negl
xor
stos
xchg
jl
sti
mov
push
scas
rcrb
inc
adc
repnz
gs
adc
cld
cli
mov
insb
sbb
jae
mov
lds
mov
ljmp
in
les
pop
pop
adcb
xchg
ret
cmp
icebp
lret
or
repz
dec
imul
lea
scas
lahf
mov
fstl
xchg
sbb
jbe
js
sbb
mov
cld
call
jnp
xor
popf
mov
ret
jnp
stos
int3
repnz
cmp
fsts
add
fs
jle
setae
fs
cs
aam
dec
ret
and
cmc
mov
lcall
mov
jecxz
push
mov
pushf
jecxz
mov
in
cmc
leave
fstps
jecxz
push
popa
pop
cmp
addr16
out
cwtl
and
push
js
enter
aaa
aam
mov
dec
in
repnz
or
pop
fcmovbe
subl
sbb
push
test
repnz
dec
int3
cwtl
push
adc
arpl
insl
test
pop
insb
scas
les
fcompl
loope
xor
pop
xchg
imul
adc
shrl
daa
mov
cmp
loope
movsl
sbb
and
mov
pop
cmp
dec
and
outsb
pop
xchg
push
pop
fdivrs
cmp
imul
inc
iret
sbb
pusha
jl
out
stos
outsb
pushf
daa
push
stos
push
lods
sar
xchg
and
repz
ljmp
lds
adc
cmp
mov
lds
adc
pop
adc
lds
adc
insl
rol
adc
stos
insb
sub
sub
cmpsb
xor
or
in
xchg
lret
lds
adc
mov
jge
dec
popf
lcall
std
insb
dec
test
sub
lcall
xor
mov
cmp
cmp
test
jne
sbb
stos
push
cmp
cmpsb
xchg
pop
or
pop
or
rolb
jno
adc
or
or
stos
dec
mov
filds
jmp
cmp
sub
js
out
je
rorl
loopne
sub
jne
mov
andb
add
in
add
push
or
or
cmp
mov
stos
push
pmaddwd
mov
jbe
imul
adc
pop
or
into
xchg
ja
add
or
ljmp
divb
sub
pop
push
stos
jne
scas
and
enter
or
roll
in
pop
loope
pop
fcomps
add
fucomip
adc
rol
jp
inc
xchg
push
cmpsb
dec
adc
lods
inc
idiv
cmp
inc
jmp
inc
or
aad
inc
push
cli
mov
inc
into
lcall
loope
xchg
pop
mov
or
pusha
cmp
sub
out
inc
sub
xchg
sub
adc
call
add
mov
adc
mov
adc
cmp
lods
pop
cmp
xor
mov
or
push
adc
int3
inc
test
das
mov
xor
es
cmpsl
dec
push
xor
or
cmpsl
movsb
add
adc
mov
jg
mov
mov
inc
mov
pop
adc
adc
mov
fwait
sbb
lock
shrl
test
pop
sbb
or
fldcw
mov
lds
xchg
lods
pop
mov
dec
int
stos
or
addb
cmc
xor
fbstp
dec
cmp
sub
jecxz
scas
add
pop
inc
shll
imul
dec
shlb
les
cs
arpl
leave
rorb
jl
imul
pop
je
mov
inc
dec
adc
sbb
mov
daa
sbb
fisubl
and
sub
test
or
stos
enter
cmp
jne
sub
dec
mov
pop
sub
jae
cmp
lea
adc
sbb
cmp
scas
cmp
mov
insl
fisttpl
push
js
lret
test
mov
cld
inc
adc
leave
aaa
dec
cld
loop
push
xlat
jne
fisttpll
mov
mov
push
pop
pushf
aas
outsl
test
xchg
mov
xchg
outsl
cltd
add
ret
sahf
sub
pop
jmp
and
out
inc
mov
les
sub
xchg
and
aad
sub
fdivrl
mov
out
or
lret
mov
xor
add
cmp
shlb
jbe
xchg
cwtl
xor
or
mov
cwtl
lret
aas
xor
push
mov
stc
sub
ficoml
scas
rolb
adc
pop
lods
fistpll
jg
jg
cwtl
jb
or
mov
cmp
push
lods
inc
cmc
or
adc
loop
pushf
sahf
xchg
mov
add
xchg
or
in
lahf
dec
add
scas
adc
insl
xor
adc
pop
jno
sbb
jge
push
aam
shrl
jmp
aam
cmc
cli
jle
loop
daa
inc
push
pop
pop
clc
or
or
adc
ja
xor
fnstcw
test
je
sbb
pop
or
ja
cld
jo
adc
mov
jmp
dec
fnsave
lods
pop
cmp
xor
dec
dec
sarl
mov
jle
push
adc
dec
jbe
imul
stc
lock
and
jbe
shl
dec
movsl
es
cmpsb
dec
cltd
popf
test
sub
jmp
mov
mov
test
lods
sub
lods
pop
mov
fstpt
xlat
pushf
ja
ficoms
inc
vmovups
inc
out
jo
xor
jo
mov
sub
dec
popf
mov
popf
fs
rcrl
ret
push
lods
ror
mov
pop
cmp
inc
push
xor
mov
mov
add
cmc
inc
cmpsl
sbb
stos
cmovge
adc
cmpsl
sub
cmpsl
out
sub
rcr
mov
xchg
mov
gs
out
loope
mov
pop
adc
adc
or
imul
aam
fidivrs
push
stos
push
and
iret
cltd
xor
cs
mov
mulb
cmpsl
lds
sub
cmp
pop
mov
jbe
mov
mov
les
adc
xor
int
in
cmpsl
andb
dec
popf
cmp
xchg
jne
jp
pushf
scas
sbb
sub
gs
hlt
cmpsl
dec
popf
xchg
fcmovnbe
imul
ljmp
fldenv
das
insl
xchg
sub
cmp
cmp
sahf
mov
addr16
out
faddp
clc
sahf
add
scas
aam
out
das
insl
xchg
sub
loope
nop
xchg
adc
cmp
or
fprem1
ljmp
ss
cmp
popa
lds
mov
rorb
cmp
test
mov
and
in
sahf
fnstsw
adc
cmpsl
xor
or
popa
dec
int
fcomip
fdiv
jmp
add
mov
inc
push
insb
xchg
sub
xor
cs
inc
fnstsw
mov
push
scas
xor
test
dec
aaa
xchg
pusha
xor
or
or
and
push
push
in
shrl
arpl
pop
sahf
xor
push
mov
jp
mov
jecxz
ret
jmp
popa
pop
dec
cmpl
adc
stos
lods
in
jecxz
fildll
insb
movsl
in
mov
loop
inc
add
subl
push
lret
mov
and
imul
xor
mov
je
push
jle
pop
movsb
sbb
add
fstp
lods
or
or
mov
mov
adc
lahf
pop
pop
das
mov
das
push
cmc
add
incl
imul
pop
jg
push
imul
stc
mov
mov
dec
xchg
and
pop
jae
push
fldt
pop
jle
pop
or
test
add
adc
out
sub
cmpsb
pop
movsl
sub
aas
push
xchg
mov
xchg
pop
stos
inc
out
add
and
pop
insb
or
movsl
bound
mov
or
sub
lret
dec
mov
icebp
lret
leave
loope
sbb
stc
lods
mov
fidivl
icebp
adc
pop
jbe
in
xor
bound
loope
xchg
jle
or
out
sub
xor
pushf
rcrl
jns
xchg
aam
pop
orl
shrb
cmp
repnz
lahf
push
fwait
and
sbb
addr16
in
push
mov
xor
or
sub
mov
pop
adc
mov
pop
loop
or
loope
je
out
dec
inc
out
or
push
mov
dec
xor
imul
cmp
cmpsl
mov
ljmp
pushf
cwtl
xor
xchg
sub
les
cmpsl
stos
hlt
ljmp
mov
int
mov
movsb
popa
ja
jb
sarl
or
test
xchg
adc
cmp
adc
jp
lods
fstps
lds
pop
adc
sbb
inc
jl
and
inc
rcl
xchg
inc
fistps
mov
cwtl
ja
jno
pop
imul
stos
push
lods
or
sub
lods
pop
mov
cmp
pop
push
shl
ret
test
fstl
jo
movsl
scas
aad
mov
mov
fisttps
mov
es
mov
int
xor
inc
out
andb
mov
fldz
fisubrs
xchg
xor
adc
push
and
xor
push
scas
mov
cmp
cmp
leave
cs
hlt
ljmp
lahf
cltd
xor
sub
je
rolb
dec
in
mov
ljmp
dec
mov
and
xchg
push
jp
pop
or
cmp
in
out
fmulp
lds
jecxz
push
subl
leave
mov
jge
lds
pushf
cmp
inc
lods
rdtsc
int3
push
push
inc
mov
cmpsb
dec
in
push
and
mov
xorb
jp
cmp
in
out
fisubrs
outsb
push
ret
mov
popf
dec
sbbl
leave
sbb
ljmp
xor
bound
pushf
cmp
fwait
pop
cmpsl
dec
popf
add
in
and
fsubs
and
dec
mov
sub
adc
loop
lds
daa
jmp
fsubp
mov
int
xor
and
mov
add
inc
cmc
fnsave
enter
sub
out
out
std
mov
jle
fwait
insl
cmp
out
xor
rcl
cmc
rclb
jns
inc
rcll
stos
push
add
call
sbb
cmp
mov
dec
jmp
pop
addb
cwtl
inc
fbstp
xor
jle
cmp
jb
jae
dec
fwait
testl
adc
jno
adc
in
out
loope
jle
push
and
inc
xchg
gs
in
insb
scas
dec
movsl
bound
dec
dec
je
pop
or
shlb
jo
adc
mov
cmpl
cmp
outsb
in
pusha
cmp
inc
adc
adc
adc
adc
rcrl
mov
push
je
push
test
lret
xor
adc
add
adc
adc
pop
sub
mov
loop
add
or
fs
cs
faddl
cmpsl
xchg
hlt
fwait
jb
lea
and
dec
or
dec
xor
mov
imul
ret
push
or
sbb
ds
mov
push
sarl
pop
into
sub
or
xchg
dec
pusha
sbb
cmp
inc
mov
adc
fmul
pop
mov
dec
pop
jmp
and
adc
lods
dec
push
aad
lcall
push
and
or
gs
pusha
imul
jo
jnp
push
popl
push
mov
cmp
mov
add
enter
or
cs
jo
das
std
and
movsb
mov
mov
in
imul
adc
push
out
cld
mov
data16
dec
inc
fsubrs
inc
pop
xchg
insb
out
and
jbe
mov
dec
cmpsl
pop
pop
cmc
imul
cmp
xorb
mov
push
cmp
rcll
jae
pop
mov
push
push
rorb
insb
sub
dec
fistpll
mov
lds
cmp
or
cmp
roll
push
enter
lds
adc
adc
and
lret
ds
add
popf
inc
dec
bound
fcmovne
mov
cld
pop
stos
dec
or
push
sbb
pop
adc
adc
or
or
cmpsl
xor
sbb
adc
inc
lods
pop
cmp
sbb
xor
mov
sbb
and
dec
cld
jo
adc
aad
enter
pop
ljmp
adc
repnz
stos
xlat
inc
xchg
mov
int
lock
out
scas
test
and
mov
mov
ja
ret
test
xor
inc
sub
cmp
cmp
mov
je
test
xor
jecxz
pop
movsb
faddl
adc
imul
stc
test
pop
adc
std
int
sarl
adc
adc
into
mov
sbb
xchg
sub
mov
scas
and
and
mov
push
in
cwtl
push
adc
add
cwtl
push
adc
mov
lcall
push
adc
inc
lods
ret
test
clc
movsb
faddl
adc
cwtl
push
adc
mov
addb
adc
xchg
add
dec
cltd
movsl
fcomps
lret
xor
or
pushf
jbe
js
aad
mov
cmc
or
xchg
fs
cld
mov
xor
sarl
pop
xlat
out
ficoms
insl
inc
inc
aam
repnz
mov
andb
sub
je
imul
xor
mov
add
dec
cltd
and
cmpsl
loop
dec
mov
sbb
cmp
mov
sbb
nop
jmp
mov
xchg
sub
mov
mov
mov
scas
and
lcall
adc
fdivs
and
es
xor
or
xchg
jmp
fistpll
test
frstpm(287
aad
pop
dec
lea
int
xchg
pop
loop
jne
inc
insb
jl
adc
aas
mov
je
addb
push
mov
insl
or
pop
mov
ret
push
pop
fiaddl
sbb
lea
in
push
adc
stos
push
mov
add
mov
rcrb
adc
cmp
movsb
bound
cmp
xchg
aad
sub
lods
stc
sbb
jns
leave
dec
adc
enter
leave
test
xor
lahf
les
or
in
add
and
clc
subl
pop
lock
jae
push
or
dec
xchg
cmp
inc
les
or
cmpsb
sbb
or
pop
lahf
xchg
loope
outsb
sahf
sti
nop
les
or
push
mov
mov
scas
jae
push
inc
sbb
xchg
test
js
test
mov
loopne
sbb
addr16
inc
scas
xchg
sbb
addb
sbb
sbb
adc
int
pop
insb
lds
adc
xchg
cltd
add
inc
inc
ja
rcrb
pop
cmp
cmp
or
sbb
lcall
xchg
ss
xor
or
mulb
inc
push
inc
fsts
fdivr
dec
and
push
adc
or
outsb
lods
aas
adc
xor
add
repz
mov
adc
aad
cwtl
xor
or
lock
push
mov
das
and
cmp
adc
lret
push
mov
push
sub
sub
lock
pusha
or
je
adc
mov
stc
scas
jo
pop
adc
sbb
cmpsl
cs
les
inc
jo
push
adc
dec
pop
cltd
push
adc
pop
ret
dec
cltd
push
adc
push
adc
jle
xlat
call
scas
mov
or
push
and
leave
pop
xor
cltd
push
adc
or
leave
dec
pop
jnp
dec
cld
aam
push
xor
xorl
dec
or
fadds
xchg
cmp
cmp
jb
jp
pop
stos
clc
cmp
aam
push
xor
cmpl
lret
inc
les
sarl
xorb
fidivl
adc
lret
and
jle
cwtl
push
adc
mov
ss
sarb
lret
xchg
pop
bound
popf
popa
lods
out
cmp
add
sahf
movsl
lock
add
xor
or
push
adc
xor
pop
adc
jge
into
cmpsb
push
insb
test
pop
adc
faddl
adc
faddl
adc
cltd
aad
fisubl
iret
dec
cltd
inc
xchg
xor
or
aad
scas
xchg
loope
movsl
add
out
fidivrs
jle
aad
addr16
mov
mov
mov
or
jmp
adc
jmp
push
cmpsb
pop
rclb
call
cmp
adc
icebp
sbb
adc
cmpsl
xor
mov
ja
cmp
or
add
idiv
jb
push
test
adc
push
test
pop
adc
dec
vandps
cld
sahf
daa
and
or
bound
in
cmp
pop
or
jae
mov
sub
daa
inc
inc
pop
sahf
in
jnp
push
cmpsb
cmc
lea
jb
xchg
sub
cld
xchg
mov
mov
dec
ljmp
lahf
outsl
lahf
mov
sbb
xor
add
push
ficomps
dec
jns
gs
push
and
sbb
arpl
call
cmp
pusha
scas
jmp
loope
cmp
in
push
pop
mov
dec
pop
cmp
fisttpl
in
dec
mov
adc
sbb
or
mov
insb
mov
ret
pop
in
push
outsb
mov
sbb
push
xchg
fsts
fisubs
mov
push
ss
pop
jg
sbb
leave
xchg
mov
sub
add
insl
and
xchg
sub
push
adc
fistl
ja
sbb
outsl
sti
in
test
mov
scas
cmp
cmp
add
test
sbb
or
fldl
cmp
xor
or
mov
popf
pop
push
pop
out
xor
or
mov
cmp
pop
icebp
sar
xor
or
and
insb
dec
cmp
mov
sbb
rol
push
mov
lret
xor
or
jns
pop
loopne
jle
push
and
sbb
cmp
mov
sbb
lret
cmp
in
pop
xor
or
pop
push
lcall
mov
sarl
pop
ja
test
sbb
xor
or
pop
dec
sbb
out
xchg
xor
or
add
incl
xchg
jle
clc
xor
or
rolb
sahf
mov
dec
mov
xor
or
push
insb
mov
xor
dec
dec
push
dec
mov
loop
sbb
mov
lcall
std
popa
and
in
js
int
in
adc
dec
push
jnp
and
je
pop
adc
pop
or
jecxz,pt
jl
mov
add
or
lods
ror
fidivrs
pop
adc
fs
pop
adc
imul
lds
adc
fwait
out
stos
dec
dec
jmp
stos
fucomi
mov
ss
push
cwtl
push
cmpsl
fstpt
jecxz
flds
adc
jecxz
pop
or
fisubs
aaa
inc
cmp
pop
or
sub
cmp
sbb
jle
mov
pop
mov
and
cmc
xor
jo
mov
popf
add
jns
int
push
stos
push
lods
sub
cmp
mov
add
fistpl
or
test
test
adc
enter
cmp
sub
push
or
jge
push
or
aad
add
mov
sub
or
jbe
push
mov
add
ljmp
xchg
xchg
inc
cmpsl
test
faddl
adc
fwait
out
stos
mov
mulb
pop
or
push
adc
sub
or
jae
mov
mov
sbb
in
add
es
xor
fwait
push
imul
mov
or
shll
in
es
adc
outsl
or
mov
or
cmp
inc
jl
nop
jbe
adc
fs
stos
mov
out
data16
ds
cmpsl
les
adc
int3
ja
cwtl
jae
adc
stc
rcrb
pop
cmp
xchg
fildl
nop
jbe
adc
frstor
or
push
adc
adc
stos
cmp
or
adc
cwtl
jae
adc
add
mov
push
or
and
jle
jbe
adc
int
add
or
aas
pop
jo
adc
lcall
movsb
fldcw
push
adc
sub
jae
adc
into
sbb
xchg
fldl
pop
push
lcall
xor
sbb
inc
out
test
add
cwtl
mov
push
sti
xor
or
fucomp
cmp
adc
lret
cmpsl
lcall
stos
das
out
fwait
xor
sbb
in
mov
ljmp
push
jae
adc
add
inc
nop
jo
adc
xor
xor
jb
es
lods
jo
adc
cltd
mov
sub
pop
stos
inc
xchg
xchg
push
mov
mov
fsubrs
movsb
push
pop
popf
xchg
mov
mov
mov
lret
jno
adc
mov
push
adc
inc
dec
push
lods
push
adc
push
outsl
imul
push
jo
sbb
fcmovu
mov
xchg
jno
adc
inc
xor
fiadds
or
inc
jl
ja
xorb
rorb
jle
mov
jo
adc
into
sub
lcall
lds
lea
xchg
paddusb
shrl
test
loopne
xchg
push
sub
daa
adc
adc
push
clc
jo
adc
negb
lcall
jo
adc
scas
mov
jmp
jo
adc
out
pop
ret
je
enter
inc
and
and
push
mov
in
stc
sub
ficompl
sbb
mov
or
lea
sbb
add
lret
jbe
cld
or
pushf
lcall
jecxz
aaa
mov
mov
loope
pop
inc
lods
mov
jmp
ret
or
jl
mov
dec
in
mov
les
shl
jecxz
xchg
stos
mov
mov
enter
inc
pop
pop
jle
insb
xor
jno
sbb
or
outsl
dec
pop
subl
mov
fs
aaa
xchg
add
cmpsl
adc
xor
loopne
fs
adc
push
pop
fldt
inc
aad
and
xor
fisttpl
mov
jle
sbb
adc
jno
adc
pop
mov
xor
xor
sbb
adc
cmpsl
addr16
pop
jp
xorb
aad
pop
imul
cmp
mov
sub
cmp
jo
adc
imul
push
adc
sub
shl
les
cmp
loop
stos
push
aad
dec
ds
lret
mov
cmp
jmp
enter
jge
jge
insb
sbb
ljmp
push
in
cmp
xor
adc
fistl
pop
adc
enter
cmp
mov
lds
push
pop
add
cmc
inc
jp
lahf
push
scas
pop
xor
xor
dec
xor
mov
popf
shll
icebp
aam
push
push
inc
or
jp
and
pushf
cmp
add
push
inc
int
stc
rcll
test
pop
mov
sub
lcall
mov
ljmp
pop
cmp
cltd
xor
mov
sbb
bound
shrb
add
lcall
pop
test
dec
mov
adc
int
test
or
gs
pop
mov
ret
or
cmp
mov
mov
push
adc
jb
sub
out
hlt
dec
and
lcall
lcall
and
or
jae
fisttpl
sbb
ss
pop
mov
sub
mov
les
xchg
mov
cmpsb
shll
lods
push
cmpsl
loop
orb
cmp
rorb
fimull
xchg
push
negb
push
or
fstpl
mov
incb
adc
mov
cltd
adc
jmp
push
dec
mov
dec
pop
adc
ficoms
jmp
mov
pop
sub
mov
push
xchg
push
adc
rorl
push
jge
filds
mov
or
cmpsb
out
jge
jnp
mov
fs
push
out
and
aas
sbb
mov
out
add
fimuls
jae
inc
orb
mov
cmp
aaa
movsl
in
push
adc
push
roll
movsb
push
pop
dec
jae
adc
out
faddl
adc
les
adc
pop
cmp
pop
adc
faddl
adc
xor
pop
adc
pop
insb
cltd
faddl
adc
jecxz
jle
faddl
adc
or
shl
fiadds
adc
mov
inc
push
inc
sarb
faddl
adc
adc
xchg
push
or
jmp
rcl
neg
nop
xchg
push
or
cwtl
inc
sbb
in
xchg
sub
in
mov
mov
xchg
jno
cmp
lea
lahf
imul
dec
add
push
adc
adc
push
dec
sbb
add
xor
lock
adc
faddl
adc
std
movsl
add
adc
in
test
pop
adc
adc
push
adc
rolb
cltd
jae
or
movsl
push
rcll
faddl
adc
push
mov
mov
pop
adc
movsb
jae
adc
pop
adc
or
lods
imul
push
adc
out
jb
or
faddl
adc
jl
popf
push
push
cmpsl
gs
push
adc
stc
cs
cltd
clc
test
pop
adc
dec
push
test
pop
adc
faddl
adc
dec
xor
add
pop
adc
jae
jg
jno
iret
or
dec
mov
les
aas
jl
pop
adc
faddl
adc
pop
adc
cmp
cmpl
push
test
cltd
call
dec
fisubrl
pushf
inc
shrl
sbb
mov
adc
je
sbb
icebp
push
cmpsl
xor
and
adc
push
aam
push
adc
adc
cmp
mov
cmp
push
adc
mov
cli
pop
adc
add
push
fldcw
pop
imul
pop
fnstenv
lcall
jae
adc
mov
adc
dec
outsb
mov
pop
adc
fs
adc
adc
lods
pop
popa
pop
ljmp
in
mov
cmp
jnp
jno
sub
dec
in
mov
jl
cmp
adc
jmp
mov
in
inc
inc
add
lahf
scas
out
sarb
push
adc
pop
cmp
fstpt
jns
push
cli
pmulhw
mov
xchg
ret
jo
push
adc
bound
aad
mov
ja
jl
push
adc
lret
cmp
dec
jae
jno
adc
cmp
sbb
adc
cmc
add
jo
adc
sbb
ss
int3
pop
jle
add
out
cmp
or
adc
sub
faddl
adc
mov
ficoml
and
adc
popa
lods
out
cmp
dec
je
dec
test
adc
test
cmp
jmp
daa
sub
and
iret
dec
std
adc
cs
push
daa
adc
push
shll
add
loopne
mov
cwtl
popa
dec
outsl
or
and
mov
enter
test
adc
add
sbb
scas
jl
ret
test
mov
sahf
pop
mov
mov
pop
push
cmp
lret
adc
sbb
js
adc
test
or
mov
cli
insb
xchg
push
gs
mov
movsb
push
lea
shr
pop
out
mov
in
dec
loop
subl
cmp
sub
data16
push
pop
push
or
mov
pop
ljmp
lock
stos
mov
push
mov
adc
mov
mov
push
pop
idivb
fyl2xp1
je
pop
adc
or
mov
dec
or
stos
fs
cmp
sbbb
test
mov
xchg
xchg
pusha
pop
movsl
push
pop
jge
and
pop
pop
movsb
mov
and
pop
imul
push
sub
adc
ss
dec
sbb
pushf
js
scas
and
xor
sbb
add
adc
push
and
add
adc
push
sbb
push
ss
sub
mov
dec
mov
lds
xadd
arpl
xchg
adcb
sahf
je
pop
adc
sbb
movsb
faddl
adc
push
sbb
gs
inc
push
shl
test
pop
adc
push
out
or
faddl
adc
mov
or
mov
push
int3
mov
je
pop
adc
and
and
pop
dec
je
pop
adc
aam
das
xchg
xchg
mov
stos
push
faddl
adc
outsl
inc
sbb
fildll
sahf
mov
lcall
xchg
test
sub
mov
push
inc
push
sahf
cmp
push
adc
and
repz
insl
or
scas
push
push
pop
lds
pop
in
pop
cmp
rorl
add
fdivl
cmp
scas
fucom
push
pop
bound
mov
mov
sub
sub
in
rolb
sub
cmp
daa
lcall
daa
sub
gs
mov
rcl
and
les
and
loope
xchg
dec
bound
push
jb
leave
adc
pop
mov
cli
jp
and
fdivrp
pop
xchg
add
loopne
daa
pop
mov
in
jmp
movsl
dec
ljmp
lock
add
xor
cmp
ljmp
out
push
dec
insl
shr
aad
sub
inc
jbe
xchg
mov
cmp
sbb
sub
out
faddp
inc
sbb
jmp
cmpsb
lcall
cmpsl
les
push
sti
dec
popf
cmp
aam
mov
sahf
inc
ds
rolb
mov
xor
pop
enter
scas
es
and
rcll
call
scas
pop
jae
adc
sub
jno
loop
push
dec
into
push
lret
dec
push
test
pop
cmp
lcall
push
adc
jnp
jp
das
fsubrp
or
and
insb
sub
push
sub
ret
addr16
into
push
insl
jp
js
insb
sub
inc
outsb
pop
ljmp
jl
out
std
es
or
adc
ljmp
cmp
jg
jno
fidivl
jmp
iret
ret
dec
sub
fldcw
in
mov
push
pop
daa
cld
cmc
pop
pop
cmp
arpl
lods
add
pop
ljmp
or
sbb
daa
push
leave
mov
push
push
push
or
inc
dec
add
pop
addr16
fsubrp
push
inc
pop
and
test
mov
sub
mov
and
icebp
mov
ljmp
push
adc
pop
mov
jecxz
dec
inc
cmp
sti
add
inc
cltd
ss
adc
add
mov
in
xor
or
sub
scas
cmp
arpl
pop
or
sbb
add
insl
shlb
inc
xchg
in
jnp
scas
add
icebp
sub
inc
xchg
ljmp
or
fucom
fisubs
jne
rol
fisubl
jmp
pop
jno
adc
push
and
or
stc
negl
dec
sbb
call
cli
mov
push
int3
in
cli
movsl
inc
push
loopne
push
lods
addl
adc
add
push
das
inc
inc
dec
test
inc
adc
mov
fwait
cmc
push
movb
pop
xor
push
xchg
and
cld
test
sbb
jmp
fistps
sbb
pop
push
jae
jl
push
adc
mov
test
jp
shl
or
xor
sbbl
popa
out
sbb
adc
dec
rcl
aaa
xor
mov
stos
sbb
or
add
loopne
xchg
push
out
lahf
add
gs
pushw
mov
inc
and
std
push
xchg
stos
push
xor
test
and
icebp
push
jbe
pop
mov
pop
scas
fnstsw
js
push
jg
xor
leave
mov
int3
cmp
je
jno
jae
iret
mov
and
adc
fstps
xchg
sbb
lcall
pusha
jnp
cmpsb
ds
imul
add
xlat
push
add
jmp
test
cmp
insb
icebp
xor
xor
ffree
mov
lods
aad
scas
fdivrs
push
push
jp
or
mov
out
cmp
cmp
push
in
mov
adc
aad
jg
shrb
cmp
cs
mov
and
roll
and
je
sub
test
mov
xor
daa
test
pop
pop
loope
jns
adc
sbb
insb
adc
int
lods
fcmovbe
push
idivb
jb
divl
cmp
inc
push
xlat
fucomip
push
dec
jp
xor
mov
xor
pop
call
aam
out
push
mov
dec
jns
add
push
and
sbb
sub
daa
pop
cmp
sbbb
mov
adc
jle
add
dec
cmp
jmp
push
dec
sbb
dec
sbb
adc
sub
stos
cmpsb
ret
bound
daa
pop
cmp
roll
scas
aas
mov
pop
sbb
xchg
fldl
pop
pop
insb
lock
adc
push
adc
hlt
sahf
sub
aas
fidivrs
fsubp
pop
hlt
lcall
push
fnsave
inc
xor
sub
loop
cltd
sbbb
rclb
push
mov
gs
push
mov
scas
cmp
pop
scas
int
or
mov
push
cmpsl
daa
pop
mov
ret
mov
int
ja
insl
mov
inc
inc
adc
int
and
loope
addb
cmpsb
mov
dec
int
mov
jae
sahf
popf
dec
xor
mov
xchg
je
loopne
leave
jl
ja
insb
dec
push
into
sbb
sbb
and
xchg
sub
popf
cmp
mov
fwait
mov
cmovno
xchg
loop
xchg
sub
push
ljmp
mov
or
push
adc
mov
testl
pop
loope
pop
jne
jne
scas
cmp
leave
jo
leave
mov
test
mov
pop
adc
jno
xchg
add
repnz
adc
xchg
lds
inc
cmp
adc
dec
movsl
stos
push
sub
hlt
ss
into
mov
sbb
insb
andb
jl
push
adc
add
push
pop
cmp
pusha
inc
test
sub
adc
xchg
dec
ljmp
dec
lret
push
push
mov
adc
lret
sbb
or
jo
in
xchg
ficompl
xchg
hlt
dec
mov
jae
fisubrl
clc
mov
xchg
in
rcl
fsub
sub
and
push
out
je
jno
pop
je
or
icebp
pop
cmpb
jns
jne
mov
imul
leavew
mov
cmp
mov
and
and
pop
dec
dec
lret
das
xchg
lret
mov
call
sahf
mov
es
jge
sahf
pop
lahf
cltd
sarb
push
push
rcrb
cli
jae
daa
xchg
sub
push
xor
or
in
sahf
pop
in
dec
xchg
push
scas
xor
out
and
pop
mov
mov
mov
fwait
push
cld
aas
js
stos
adc
mov
cltd
cltd
dec
ss
data16
in
jp
repnz
add
test
push
dec
xor
mov
push
imul
out
fsubl
sub
sbb
popf
jecxz
pop
stos
xor
inc
xor
mov
test
dec
lea
push
adc
stc
pop
clc
push
mov
imul
imul
movsl
and
push
adc
fstpt
movsl
jbe
ljmp
fwait
inc
jo
mov
mov
mov
out
jns
adc
sub
push
adc
mov
dec
jecxz
push
daa
into
imul
setle
inc
inc
daa
sbb
pop
shlb
mov
sbb
fwait
cmp
int3
std
mov
pop
push
ficoms
cs
subb
rclb
add
mov
pop
adc
jl
or
pusha
stos
adc
sbb
fcomps
cs
popf
sub
mov
add
stos
inc
add
pop
fistpll
shlb
push
movsb
sub
push
pop
pop
cmp
push
das
fidivrs
out
push
xor
in
inc
sahf
pop
std
push
pop
cmp
cmpsl
push
cmp
lret
sbb
cli
xor
aam
lods
rol
bound
and
add
sar
push
leave
adc
pcmpeqw
push
fstps
leave
jno
loopne
test
test
roll
pop
cmp
int3
add
lret
int
lahf
jns
and
test
jecxz
inc
rcrl
mov
sub
add
mov
nop
ficoml
push
daa
pop
mov
fisubrs
cltd
bound
mov
add
cmp
stos
xchg
std
ljmp
lcall
aad
mov
int3
add
fmul
dec
stos
or
fiadds
push
jne
in
mov
icebp
dec
lds
fsubs
lcall
sbb
ljmp
lods
xchg
test
mov
xor
in
mov
test
and
xchg
in
jle
mov
xchg
xor
insl
push
aam
mov
rolb
pop
and
enter
xor
sub
mov
in
jno
in
xor
inc
outsl
pop
loope
cmp
shll
cmp
lret
add
mov
fistpl
loope
test
popf
cmp
push
stos
or
sbbb
out
push
fwait
addr16
lcall
nop
ss
ljmp
aam
test
movsl
and
movsb
fdivl
xchg
roll
and
xchg
dec
lret
adc
push
arpl
cmp
insl
sub
pop
jge
shlb
jbe
push
inc
outsb
fsubp
sub
xchg
mov
sbb
aad
cmp
inc
sbb
in
mov
or
lcall
rep
mov
mov
dec
fwait
mov
fwait
in
aaa
lahf
cmp
push
add
scas
pop
mov
lods
dec
shlb
jecxz
int
dec
stos
mov
cmpb
push
jecxz
jl
ss
leave
out
insl
mov
pop
dec
and
mov
icebp
mov
xor
sbb
scas
jmp
scas
mov
cwtl
or
push
jg
cltd
pop
fcomps
xchg
icebp
addb
or
repz
mov
add
in
rolb
lods
das
xor
add
ret
rclb
testb
fimuls
fcompl
movsb
mov
dec
stos
jmp
push
inc
in
fcompl
fldt
and
and
xchg
mov
mov
or
stos
lret
jle
xchg
and
inc
lret
add
in
insb
push
shlb
mov
or
jge
clc
mov
push
jnp
jae
xchg
fstps
outsb
sbb
cmp
lahf
movsl
out
popa
int3
orl
or
xor
inc
lret
imul
inc
fisttpl
jns
jge
push
inc
add
adc
mov
scas
xchg
aam
testl
lret
mov
mov
lret
push
fs
xchg
adc
adc
and
fists
mov
mov
sub
insl
iret
loope
stos
sub
testb
pop
jmp
jo
hlt
rorb
adc
inc
lret
cmc
cmp
and
dec
jnp
cwtl
jl
pop
out
stos
pop
xchg
jns
pop
xor
push
sti
sahf
fs
and
test
lret
dec
int
mov
mov
fildl
sbb
cmp
andb
jmp
lods
mov
in
lea
sub
loop
ja
cmpsl
xchg
cmp
enter
add
xor
pop
pop
jno
xlat
cmp
jmp
dec
mov
xchg
inc
jbe
lock
bound
mov
ja
rorl
add
adc
sbb
pushf
imul
int3
mov
cmp
leave
mov
pop
dec
mov
aam
push
stos
mov
loop
stos
and
test
mov
jnp
mov
cmp
es
popf
cmp
popf
fs
leave
push
test
not
and
hlt
push
orl
mov
push
adc
stc
sub
mov
dec
inc
imul
pop
lret
shrl
adc
aam
and
movsb
or
ret
add
pop
cmp
adc
cmpsb
dec
jmp
dec
loope
sbb
push
stos
push
gs
pop
inc
push
cmp
rorl
jnp
mov
push
arpl
ret
mov
sub
add
pop
cmp
int
shlb
inc
or
test
ss
mov
daa
lcall
ja
xchg
add
mov
or
fwait
mov
cmp
mov
dec
pop
aam
arpl
and
cmp
lds
imul
shl
xchg
add
arpl
push
dec
push
or
aad
pop
mov
lcall
mov
fs
mov
out
jo
test
dec
mov
sub
pop
movl
pop
cmp
cltd
pusha
das
lret
xchg
push
jg
add
cltd
loope
sbb
mov
cwtl
pushf
pop
dec
pop
jge
je
lods
or
stos
fldt
cmpl
fs
stc
adc
xor
inc
add
icebp
nop
scas
pop
movsl
sub
mov
rol
mov
and
fbstp
push
jp
mov
lea
lock
mov
loop
pop
cmc
xchg
xchg
in
pop
rol
test
test
test
outsl
fbld
pop
insl
aad
sbb
cwtl
imul
add
mov
or
cld
out
cli
cltd
lret
iret
lcall
aas
pop
or
lock
int
dec
pop
pusha
sahf
push
or
fwait
xor
sbb
add
lret
in
sbb
ds
pop
rclb
insb
lret
jbe
call
jecxz
adc
pop
pop
mov
faddl
adc
adc
pop
pop
add
cmp
lahf
pop
xchg
out
adc
lea
push
or
dec
and
and
pop
adc
and
mov
test
pop
adc
adc
pop
xchg
and
adc
imulb
rcrl
xor
inc
and
pop
adc
test
stos
ds
adc
jle
xor
lahf
lret
loope
add
add
imul
jae
pusha
pop
xor
xchg
push
aad
ret
insb
xor
ret
or
mov
sub
ret
add
adc
mov
pop
push
faddl
adc
pop
jns
ljmp
out
scas
ret
push
lods
or
mov
push
push
cwtl
sarl
mov
mov
ljmp
jecxz
rcrl
push
fistpl
cmp
cmc
inc
inc
push
es
cmpsb
dec
cltd
or
leave
push
pop
pop
dec
popf
xchg
loope
scas
mov
out
cmpl
inc
ret
test
aam
mov
jb
clc
aam
cld
repnz
cs
jp
adc
pop
ljmp
stos
aad
mov
cs
cmpsl
movsb
fistpl
xchg
add
stc
mov
add
divb
stos
inc
dec
ret
into
ret
xor
mov
adc
or
push
stos
cld
cmpsb
cmpsb
fdivs
adc
cs
shl
lret
sub
mov
mov
jno
fcoms
push
adc
dec
xor
daa
test
xchg
pushf
decl
gs
adc
subb
lods
les
adc
and
sti
or
jmp
daa
lahf
jno
pop
pop
sub
pop
cwtl
outsl
cmc
sti
add
cmpsb
mov
shlb
adc
jno
shlb
push
dec
pop
push
jp
shll
shrl
test
not
int3
int3
fldl
cmp
das
jmp
adc
mov
inc
and
js
mov
mov
cmp
xchg
jecxz
fwait
push
adc
cmp
loope
mov
faddl
adc
mul
dec
gs
faddl
adc
xor
call
mov
xchg
enter
pusha
mov
faddl
adc
mov
pop
mov
mov
mov
mov
push
mov
jmp
xchg
fnsave
sub
call
mov
mov
ficoms
out
or
stos
cmpsl
dec
in
subb
fldt
cli
negl
xlat
dec
jp
inc
mov
cmp
adc
and
imul
pop
or
or
les
jno
adc
js
pop
adc
xorb
pop
mov
mov
pop
push
xor
inc
xchg
inc
inc
les
adc
add
push
adc
lahf
mov
mov
pop
adc
in
sbb
pop
shll
push
fildll
outsb
mov
les
adc
jle
mov
or
repz
in
xchg
aam
jo
adc
push
pop
loopne
inc
frndint
rcl
popa
in
repnz
adc
daa
mov
fidivrs
pop
pop
inc
push
outsl
push
jbe
cs
lcall
add
fcomps
popf
sbb
arpl
cmp
insb
jae
adc
and
adc
dec
outsl
sahf
imul
nop
shlb
gs
push
sbbb
pop
sub
jecxz
xchg
pop
icebp
shlb
not
ds
lea
mov
cld
sbb
adc
push
pusha
jo
adc
int
sbb
xchg
push
jecxz
inc
or
sbb
jno
sub
es
icebp
xlat
xlat
imul
push
out
push
insl
inc
rcrl
fbld
insb
or
mov
cmp
sub
or
pop
into
xchg
jl
lret
out
jle
xchg
lods
push
jbe
dec
cwtl
push
adc
mov
push
push
jbe
xorb
cmc
mov
imul
outsb
sahf
dec
mov
add
dec
cmpsb
cmp
dec
cs
loopne
ret
loopne
cmp
imul
mov
es
adc
cli
insl
in
xchg
jo
test
push
in
rcl
xchg
aaa
xchg
mov
push
pop
fnstsw
and
jg
xor
test
jmp
jecxz
add
mov
push
fdivl
loope
js
sub
iret
lret
push
sub
and
out
into
pop
jb
mov
rolb
fdivr
adc
push
cmpsl
adc
adc
lods
rcrl
sub
dec
and
jge
les
adc
je
popa
addr16
lcall
lds
les
jb
sub
in
cs
je
jae
adc
add
cwtl
lds
cmc
push
cmp
mov
orb
aad
cs
flds
xor
aad
inc
outsb
pop
loop
pop
popa
dec
lds
scas
out
les
dec
insl
rcll
aam
mov
popf
and
fstpl
data16
mov
cwtl
push
adc
mov
xchg
ret
mov
pop
jmp
je
jns
imul
push
dec
mov
bound
cltd
mov
fs
call
ljmp
cs
inc
adcb
pop
jne
add
sub
xchg
jno
dec
pop
dec
fistpl
mov
adc
stos
insl
shll
mov
int3
jno
loope
fs
mov
dec
or
sub
mov
fwait
rcl
cltd
push
adc
adc
lods
fcomps
int3
lcall
xor
hlt
xchg
dec
cmp
loop
bts
aam
jp
leave
sbbl
mov
jecxz
mov
ja
outsl
sbb
xor
stos
es
mov
inc
xor
in
lods
pop
mov
loope
call
les
hlt
ljmp
cmp
sbb
hlt
pop
cmp
int
dec
and
cmp
adc
int
test
adc
push
shrb
mov
dec
cmpsb
dec
popf
dec
push
fcmovbe
cmpsl
dec
xor
xchg
aam
push
nop
jmp
insl
lret
test
mov
cmp
rcl
cmpsl
dec
popf
mov
out
xor
imul
fisubl
cwtl
dec
cwtl
xor
popf
sub
add
cmpsb
xchg
pop
mov
ja
mov
sub
out
push
inc
pop
cmp
mov
xor
and
shlb
fnstcw
mov
fistps
inc
stos
pop
mov
inc
mov
aad
mov
cmp
add
mov
pop
cmpsl
pushf
in
xchg
orb
stos
leave
pusha
mov
sub
in
pop
arpl
addr16
ds
jle
or
fwait
xchg
rolb
shrb
in
repz
fwait
push
adc
jae
add
mov
or
inc
fwait
push
adc
mov
sbb
inc
idivb
xor
sahf
outsb
pop
dec
cld
add
das
imul
scas
shlb
jne
cmpsl
or
in
nop
out
jns
stc
sbb
ret
lcall
push
add
hlt
andl
mov
fwait
push
adc
lahf
and
mov
fwait
push
adc
jb
cli
insb
pop
movsl
lret
cmp
fisubl
test
fistpll
mov
xor
push
ja
popf
cmpsb
pop
push
adcl
mov
repz
push
adc
fwait
push
adc
jp
mov
push
scas
lds
and
push
loopne
jle
cmpsb
call
jno
adc
int3
loop
xchg
mov
mov
ss
cmp
cmpsl
inc
add
mov
dec
lods
jbe
pop
dec
push
mov
daa
fsubl
inc
fsubr
xchg
imul
adcl
jne
mov
cltd
insl
in
nop
and
jne
lock
movsl
pushf
ret
imul
loop
mov
das
add
jmp
jo
pop
adc
or
push
adc
or
cmp
xor
enter
xchg
cs
stos
fcoms
jmp
or
mov
push
cmpsl
fld1
cli
pop
adc
mov
fmulp
shlb
jmp
scas
lret
xchg
mov
dec
into
ret
hlt
ficoml
mov
es
ficomps
adc
mov
dec
test
dec
fcoml
push
adc
cmp
jl
andb
inc
and
adc
mov
mov
add
enter
pushf
mov
adc
enter
popa
push
test
mov
gs
js
call
push
fwait
push
adc
leave
and
mov
xor
fs
loope
pop
cs
jne
inc
push
xchg
push
adc
ds
inc
dec
and
in
add
push
out
inc
scas
mov
cmp
stc
cmpsb
dec
loope
xchg
inc
dec
inc
or
ret
stos
push
push
fldenv
xlat
loope
cmp
dec
xor
enter
jne
stos
outsb
pushf
daa
push
stos
push
lods
sar
xchg
and
repz
js
jge
cmp
adc
and
adc
jge
into
cmpsb
cmpsb
dec
push
dec
pop
or
sub
mov
or
add
test
ret
mov
dec
fwait
xor
daa
push
loope
sbb
test
mov
fnsave
sbb
insl
push
cmp
int
xor
loope
or
mov
inc
mulb
and
fdiv
pusha
ds
bound
cwtl
xor
std
cmpl
cmpsb
dec
mov
push
sub
in
orb
stos
lea
jmp
push
cmpsb
sub
lret
mov
dec
popf
xchg
push
pop
int3
mov
fdivrs
ja
insb
cmpsb
mov
cmpsl
push
push
cmpsb
cmp
sub
jae
sarl
pop
mov
xchg
xor
or
mov
fnstsw
and
fs
inc
push
fucom
xor
cmp
and
pop
mov
jne
lret
arpl
cld
cmpsb
adc
adc
push
or
jae
inc
sub
cmc
mov
xor
add
mov
lcall
mov
xor
in
dec
or
mov
or
pushf
popf
sahf
cmp
fnstcw
mov
ds
das
push
ljmpw
aam
dec
fwait
testl
cld
jo
adc
in
mov
xor
fisubl
aas
push
pop
or
or
enter
adc
mov
orl
les
adc
and
pop
or
or
mov
cli
movsb
jmp
cmc
add
movb
cmp
lds
adc
ss
dec
orl
std
pop
popa
lret
das
cld
iret
push
test
adc
imul
pushf
push
inc
in
pop
outsb
idivb
lcall
pop
out
cmc
pop
rcll
ret
pop
out
out
inc
dec
or
or
adc
or
or
lcall
shrb
pop
in
inc
xchg
ja
push
or
in
in
insb
xchg
sbb
push
loopne
jp
enter
push
mov
mov
rcr
js
and
movsl
pop
lea
into
push
push
and
in
test
dec
bound
cmp
fnstcw
jle
mov
mov
xor
jmp
xor
orb
cs
push
jge
dec
popf
adc
gs
and
or
into
daa
das
orb
adc
sub
push
jne
xchg
pop
sahf
xchg
shll
int3
sbb
push
dec
adc
les
out
mov
into
mov
dec
test
sti
in
pop
adc
fstps
xchg
arpl
shlb
pop
cmc
stos
pop
icebp
call
push
pmulhuw
andb
cmpsb
sub
mov
fs
mov
fidivrs
pop
pop
or
movsb
shll
cmpsl
dec
cltd
xor
aad
cmp
insl
push
pop
or
test
inc
ret
push
lods
cmpsb
xchg
or
xchg
ret
cld
jo
adc
loop
sarl
pcmpeqw
xor
push
stos
or
add
jne
cmp
adc
pusha
lds
cli
lods
pop
mov
gs
pop
pushf
outsl
mov
jecxz
fiaddl
xchg
pop
pop
cmpb
push
adc
mov
test
push
push
lods
pop
pop
cmp
push
cmpsl
test
faddl
adc
pop
push
faddl
adc
and
cmc
add
jno
adc
push
mov
outsb
push
faddl
adc
mov
cmpsl
pop
mov
cmp
push
push
faddl
adc
fs
fistpl
into
pop
bound
loope
pop
fwait
imul
aam
rcrb
insl
in
cmp
or
sahf
push
ret
mov
adc
add
lret
fcomps
or
aam
imulb
nop
into
adc
lcall
ja
enter
cwtl
addr16
insb
push
push
faddl
adc
cwtl
xor
dec
popf
dec
into
mov
pop
adc
mov
adc
faddl
adc
cwtl
xor
jo
adc
das
pop
mov
rcll
adc
mov
jmp
ss
cmp
jmp
dec
jp
xorb
aad
pop
pop
fwait
gs
jo
adc
das
xor
dec
dec
sarl
punpckhwd
aad
mov
jp
leave
lcall
xor
sahf
insb
jae
adc
inc
cld
out
fidivrs
jae
adc
pop
loopne
inc
pop
inc
xchg
sub
loope
shlb
push
adc
mov
clc
mov
mov
adc
imul
lods
pop
adc
enter
movntq
out
rorl
out
lea
lcall
pop
xor
out
dec
sahf
cmp
inc
fcoms
jo
adc
push
inc
mov
sbb
pop
inc
es
adc
cmp
jo
rolb
or
inc
push
pop
daa
mov
pop
xchg
mov
fidivl
js
dec
fcomps
loop
lahf
adc
dec
sub
testl
and
push
jne
aaa
and
jb
shlb
sbb
jmp
movsl
jns
add
push
mov
inc
push
add
movsb
jnp
or
and
mov
int
movl
adc
and
add
fs
dec
sbb
imul
pop
dec
sbb
mov
and
mov
pop
xchg
cld
cltd
adc
push
adc
stos
sub
test
adc
adc
sbb
xor
je
mov
fisubrs
push
jbe
adc
popf
and
insb
dec
loopne
stos
in
xchg
jns
mov
fdiv
int
ja
cmp
imul
inc
test
xor
push
adc
mov
lahf
movsl
popa
cltd
arpl
or
add
mov
pushf
push
inc
or
cmp
dec
in
or
mov
cs
push
xchg
fdivr
pop
adc
mov
mov
pop
pop
mov
insl
mov
ficoml
repnz
mov
pop
adc
push
adc
out
shlb
loop
out
pop
adc
or
dec
subl
or
repz
imul
dec
fcompl
jg
mov
dec
cltd
movsl
push
xchg
push
adc
adc
call
dec
int
stos
mov
fst
stos
push
push
inc
out
fwait
xor
cmpsb
sub
jne
xchg
loope
mov
jg
ficoms
out
or
pop
movsb
dec
in
subb
fldt
out
pop
insb
pusha
xlat
dec
jp
inc
mov
cmp
adc
dec
jbe
insb
lods
stc
lock
jp
cmp
xor
adc
mov
inc
mov
cmp
push
adc
xor
xor
dec
popf
inc
dec
add
xchg
test
adc
jno
adc
pop
fwait
push
adc
adc
pop
adc
add
aas
xorb
or
or
jge
cmpsl
loop
sbb
adc
leave
mov
dec
cmpsb
test
adc
lods
fidivl
inc
pop
test
jb
cwtl
ja
and
clc
jge
jp
sub
aad
cmpsb
fsts
out
enter
adc
add
out
jo
fidivrs
int
push
stos
push
lods
sub
je
lods
mov
push
add
insb
out
pop
adc
scas
mov
jg
fsubr
xchg
cld
cmpsb
outsb
and
das
pushf
mov
mov
lods
lds
adc
out
xlat
stos
inc
std
adc
pop
adc
fsts
in
es
jmp
jo
pop
adc
and
loop
in
push
cmp
sahf
mov
faddl
adc
lods
pop
pop
and
mov
scas
pushf
mov
fidivrs
test
pop
add
lahf
cwtl
fstpt
imul
je
pop
adc
in
test
scas
leave
push
test
mov
imul
sub
jmp
movsl
dec
mov
mov
test
mov
and
sub
push
sub
mov
lods
and
sti
mov
dec
pop
cmp
test
xor
sbb
or
ja
or
adc
mov
aas
loop
arpl
xchg
cmp
inc
add
xchg
jmp
add
push
adc
mov
inc
or
into
sbb
xor
aas
ja
jg
mov
mov
push
adc
out
pop
jns
mov
movsb
inc
sbb
les
adc
lea
sbb
ret
or
loope
cmpsb
testl
add
push
and
adc
or
push
mov
pop
adc
xchg
mov
in
scas
jo
pop
adc
mov
inc
faddl
xchg
push
mov
movsl
test
mov
adc
xchg
loope
fs
faddl
adc
mov
sarl
xor
add
jmp
mov
sbb
or
adc
je
mov
add
pop
mov
push
and
or
adc
jp
jno
adc
fcoms
or
repnz
mov
movsl
scas
shrl
push
adc
sbb
jo
pop
adc
xchg
shlb
cmpsb
pusha
pop
jo
pop
adc
mov
inc
xchg
and
fildll
or
cs
dec
mov
push
inc
jmp
dec
je
push
test
stos
xchg
movsl
xchg
fsubrp
icebp
jno
int
stos
fs
adc
sbb
fstps
sbb
adc
push
hlt
mov
faddl
adc
ss
mov
jo
adc
add
or
mov
dec
cli
pop
pop
das
hlt
sbb
adc
data16
jl
addr16
jae
adc
add
outsb
pop
ret
leave
int3
xchg
push
adc
pushf
push
or
push
jbe
dec
sbb
iret
sbb
inc
leave
sbb
sub
pop
jg
mov
xor
shll
pop
adc
cmp
xor
cltd
sub
test
adc
sub
mov
xchg
les
adc
cmp
xor
and
dec
dec
add
jo
cli
cmp
adc
cmc
lea
cs
mov
lock
rcrl
dec
movsl
cwtl
les
add
adc
pop
icebp
movsb
dec
ja
jno
adc
rcr
pop
adc
daa
pusha
push
ret
test
fidivl
fwait
jb
mov
lods
add
ljmp
fwait
cwtl
cld
adc
cli
inc
push
stos
push
lods
aam
rcr
pop
adc
mov
sub
cmp
loopne
out
ficoms
insl
stc
jmp
stos
sub
xor
cmp
xchg
loope
jg
dec
popf
rorl
push
adc
cmc
inc
sbb
mov
mov
pop
adc
js
pop
adc
addr16
lds
adc
pusha
jae
aas
test
inc
pop
dec
cltd
dec
pop
and
mov
mov
pop
adc
sub
pop
adc
xchg
js
pop
adc
dec
jae
jno
adc
sub
push
sub
movsb
sub
push
adc
dec
loop
aam
push
shrb
push
test
push
adc
mov
add
inc
nop
fwait
push
adc
out
xor
jo
adc
xchg
fists
pop
loopne
sbb
jo
adc
adc
ja,pt
sbb
and
cmp
mov
xor
scas
fiaddl
mov
lds
xchg
inc
cmpsl
dec
popf
xchg
pusha
mov
mov
jo
adc
aam
push
xor
cmp
adc
xchg
and
rcr
es
pop
adc
adc
or
push
addr16
jmp
fadds
mov
pop
enter
adc
push
faddl
adc
jo
pop
adc
data16
jp
adc
pop
adc
xchg
cmp
adc
mov
repz
lret
movsb
cmpsl
test
pop
adc
cmp
shlb
add
ljmp
dec
cwtl
inc
push
adc
sub
xor
jge
test
pop
adc
lods
outsb
imul
jo
shlb
adc
popf
lret
pop
lcall
push
or
xor
repz
adc
popa
cwtl
aas
pusha
faddl
adc
sub
out
mov
jno
mov
jne
mov
push
xchg
push
out
leave
mov
xchg
dec
jno
adc
in
pop
adc
into
in
fistpl
loopne
fcoml
jle
push
outsl
xor
clc
sub
faddl
adc
out
outsb
fucomip
sti
sub
frstpm(287
lcall
xchg
js
or
iret
cmp
jle
js
push
adc
push
popa
jnp
mov
lcall
adc
pop
ds
sub
cld
pop
adc
pop
adc
jg
xchg
add
negb
and
jb
icebp
jno
sbb
adc
pop
cli
mov
arpl
mov
mov
ret
pop
mov
fistl
sub
pop
sbb
gs
faddl
adc
jae
adc
in
and
mov
adc
fisubl
ljmp
ljmp
and
inc
popa
sti
cmp
stos
sub
push
in
mov
mov
push
aad
inc
lea
push
and
inc
jl
push
adc
or
in
jp
inc
adc
push
pop
xor
push
adc
or
ret
rol
les
rcl
mov
dec
pop
jge
and
push
push
jle
push
or
les
adc
test
lea
mov
inc
out
ds
or
out
inc
out
and
les
adc
out
fisubrs
mov
fldenv
scas
pop
faddl
adc
std
outsb
mov
data16
loop
mov
push
insb
outsl
sub
je
pop
adc
jo
jecxz,pt
push
lahf
xor
cmp
subl
dec
push
test
xor
cmp
cltd
pop
faddl
adc
lret
cmp
push
pop
je
pop
adc
mov
mov
cmpsb
push
cmpsl
mov
mov
and
xor
jmp
stos
push
inc
add
adc
inc
dec
pop
sub
sbb
adc
lea
mov
test
xor
ja
faddl
adc
lret
lods
mov
bound
je
pop
adc
ret
test
sbb
loop
test
dec
popf
pushf
add
dec
or
jecxz
aad
push
outsl
mov
les
adc
xor
or
dec
sahf
cmp
in
insb
and
aad
ret
sbb
or
jmp
dec
repz
je
sbb
shl
jns
std
jbe
test
xor
push
push
cmpsl
loope
mov
les
popf
lods
or
push
adc
inc
mov
mov
gs
arpl
popf
sub
xor
xchg
insl
mov
aam
sub
inc
dec
cmp
sbb
ss
js
pop
push
lods
inc
or
adc
adc
push
fldl
mov
sbb
dec
repz
je
mov
pusha
cmpsl
rolb
lods
inc
push
xchg
mov
gs
add
push
dec
push
jns
pop
xor
dec
inc
jno
aad
pop
add
push
les
jo
cmc
lods
pop
mov
rcrb
adc
pop
cmp
jg
inc
dec
pushf
push
adc
cwtl
jae
adc
jne
or
jle
lds
adc
xchg
or
aas
fs
adc
jae
aam
and
aad
mov
pop
dec
fldcw
lds
adc
jbe
or
xchg
cli
test
les
adc
lds
adc
mov
jno
adc
xorb
repz
inc
lds
adc
cmpsl
repz
rcl
ja
xchg
les
adc
popa
lret
pushf
pop
jo
push
adc
adc
pop
adc
pop
leave
jge
popl
or
mov
mov
cmp
inc
and
and
fwait
or
pop
pusha
dec
mov
outsl
push
subb
test
insb
fs
imull
mov
lods
lahf
sbb
jl
je
andl
sub
push
adc
loope
fcompl
loop
xor
stc
push
add
mov
xor
das
les
inc
mov
adc
xor
fsubrl
gs
and
rcrb
pop
stc
push
and
pop
push
pushf
push
adc
push
insl
push
sub
andl
loop
scas
aas
xor
push
adc
jns
push
pop
or
insl
push
mov
in
xchg
inc
mov
repnz
mov
mov
jge
repnz
pop
in
inc
inc
stos
cmc
and
push
mov
popf
ret
inc
test
loope
xor
frstpm(287
lcall
xchg
test
pushf
imul
lods
xor
xchg
fstl
or
mov
into
loopne
ret
enter
sbb
add
movl
pop
pop
sbbb
xor
adc
out
dec
xchg
data16
or
or
into
xchg
addr16
push
and
mov
mov
icebp
cmp
adc
sbb
mov
into
sbb
es
sbb
negl
ljmp
adc
lods
aad
inc
jmp
xchg
mov
mov
inc
jl
rorl
rcr
pop
adc
mov
mov
adc
sub
sahf
xor
jo
ljmp
nop
scas
ficompl
cmp
cwtl
pop
inc
addb
lds
out
orl
iret
cmp
and
push
in
pop
adc
mov
jbe
imul
mov
clc
les
inc
lahf
cmp
movb
adc
and
loopne
rcrb
or
enter
inc
pop
mov
inc
ja
adc
adc
scas
pop
mov
mov
gs
or
mov
xchg
fadds
lods
pushf
push
adc
test
sub
rclb
and
push
adc
hlt
out
dec
lahf
jno
movl
mov
xor
push
movsb
call
es
xor
mov
orb
imul
out
roll
and
xchg
jmp
xor
pop
pusha
lds
jne
les
or
andl
push
lods
aam
pusha
iret
adc
sahf
xchg
test
adc
pusha
sbb
push
adc
test
push
adc
fldt
stc
xchg
data16
gs
pop
mov
add
out
inc
sub
and
pop
inc
inc
mov
inc
out
xchg
ret
and
push
adc
arpl
xor
loop
adc
jp
add
push
stos
shrl
inc
inc
cs
lock
pop
mov
fbstp
popf
movsb
loop
or
jns
mov
xor
daa
sbb
fwait
test
fcomps
adc
inc
pop
mov
or
cli
mov
mov
mov
orl
mov
ret
mov
lret
jo
adc
sub
push
adc
test
push
adc
lods
pop
mov
leave
fwait
xor
andl
jno
adc
or
push
adc
mov
mov
test
fnstenv
jle
fsubs
mov
scas
les
push
sub
push
inc
fdivs
adc
mov
sub
cmp
popf
adc
pop
loope
cmp
xchg
lods
lods
mov
jecxz
pushf
xor
daa
sbb
xor
add
push
loopne
lahf
push
jecxz
shlb
adc
or
or
cmp
pusha
or
xchg
lods
sub
imul
inc
cmp
lds
aas
push
lret
fwait
and
adc
jg
dec
lea
sahf
imul
sbb
scas
or
xor
hlt
mov
mov
jae
mov
mov
xchg
and
mov
les
cmc
push
inc
fisubrs
pusha
sbb
and
jecxz
frstor
loop
mov
sub
pop
movsb
lea
push
adc
in
jo
adc
adc
mov
or
push
out
rcrl
repz
out
xchg
sbb
add
sub
pop
dec
fbld
xor
mov
mov
cmp
mov
clc
inc
fs
jp
int
fsubrl
js
adc
lds
cmp
fnstenv
push
lret
jl
add
jmp
and
enter
or
push
adc
jo
and
jp
ret
mov
ss
cmp
mov
push
adc
or
xchg
xchg
in
pop
xorb
imul
sarb
xchg
cmp
insb
repz
jecxz
imull
mov
adc
or
sbb
jecxz
sbb
mov
xchg
lock
shrl
mov
cld
cmpsb
adc
movl
add
out
jb
mov
aad
into
xchg
je
dec
jae
adc
and
stc
rcrl
cld
pushf
push
adc
jle
jae
adc
add
and
mov
xor
jb
adc
push
fldenv
and
popf
push
push
push
movsb
or
inc
pusha
inc
popl
aad
div
test
xchg
sbb
fcomps
pop
inc
je
ja
cmp
les
or
lods
pop
jp
jne
cmp
js
lds
cli
and
bound
enter
pop
inc
mov
mov
int3
lcall
popf
xchg
je
push
popf
mov
jecxz
and
adc
pop
fstl
shrl
push
pushf
cmp
or
stos
push
test
loopne
std
imul
cmpsl
movsb
sub
push
adc
xchg
cmp
int3
fsubs
xlat
adc
into
push
add
add
cmpsb
cmpsb
js
push
adc
dec
sbb
push
add
fwait
cmp
xor
cltd
sub
test
adc
insb
mov
stos
iret
lcall
bound
sbb
adc
adc
test
adc
push
adc
js
pop
adc
dec
xchg
pop
adc
or
cmpb
stos
mov
or
fmul
jle
jno
adc
cmp
push
push
cmp
cmp
jg
rolb
push
decl
in
xor
loopne
mov
add
arpl
movl
scas
and
shlb
out
movsb
mov
loope
xchg
push
pop
pop
cmp
fwait
out
pop
jle
popa
push
push
and
xor
mov
scas
daa
test
pop
leave
inc
and
rcll
push
push
in
cmp
adcb
push
jp
mov
out
push
xchg
sbb
inc
sub
mull
adc
cmp
jmp
mov
sub
mov
enter
aam
mov
and
leave
subb
xor
pop
loop
lcall
jg
outsb
mov
lods
push
das
mov
and
pushf
cmp
das
pop
mov
mov
pop
jg
mov
pop
mov
mov
es
popf
and
ja
or
jl
push
adc
mov
pop
fstps
lret
jecxz
adc
mov
lods
sbb
fchs
ret
or
cmp
pop
sahf
sbb
and
popa
loopne
mov
test
push
adc
xor
mov
push
adc
out
and
fninit
push
hlt
out
and
adc
out
lahf
shlb
mov
int
rolb
das
cmpsl
xchg
sarl
cmpsl
jmp
enter
dec
std
dec
popf
push
adc
mov
stos
adc
cli
not
faddl
adc
cmp
jo
adc
nop
lods
rcl
lds
push
adc
mov
sbb
adc
pusha
jo
adc
out
test
in
test
cmc
pop
adc
xchg
mov
gs
sub
push
adc
mov
dec
enter
inc
pop
cmpsb
xor
pop
adc
test
adc
adc
cmp
jmp
pop
xchg
mov
sarb
imul
dec
sbb
cmp
mov
leave
int
inc
shrb
pop
add
cs
cmc
adc
les
adc
das
push
jge
xor
adc
pop
jl
pop
movsl
or
mov
test
dec
clc
mov
push
add
sbb
lcall
pop
adc
mov
enter
pusha
in
fiadds
adc
cltd
mov
jo
adc
imul
add
iret
rcr
sbb
pop
add
leave
xchg
ret
js
push
adc
sbb
cmp
loope
pop
int
sub
pop
aaa
pushf
int3
push
popf
cmp
mov
scas
mov
pop
mov
lods
rcr
pop
adc
jmp
push
adc
sahf
xor
lock
adc
les
pop
lahf
cmp
push
pop
or
jp
sahf
lock
adc
adc
pop
fldenv
mov
jl
adc
fiadds
adc
push
loopne
push
adc
cmc
call
andb
push
or
in
fiadds
adc
dec
push
lock
adc
adc
adc
xor
cli
push
dec
ja
jno
adc
test
sarl
pop
cmp
xlat
lods
pop
adc
enter
pop
mov
loopne
faddl
adc
and
pop
adc
lcall
adc
xor
lods
xor
sub
adc
pop
fstl
push
scas
pop
xor
lcall
sub
sbb
adc
add
jno
adc
cwtl
push
or
mov
dec
jmp
pop
adc
inc
jns
into
push
add
loopne
inc
adc
mov
sub
or
mov
out
ficoms
jp
push
pushl
mov
add
lods
xchg
mov
mov
push
adc
in
lcall
jae
adc
fstps
jae
adc
loope
inc
les
popf
cmp
and
dec
cmpsl
adc
data16
xor
mov
jo
adc
lds
xorb
xchg
rclb
shlb
pop
mov
sahf
and
jno
adc
sub
pop
adc
dec
mov
dec
cltd
gs
jg
aad
xorb
xor
lret
cmp
xchg
fwait
push
and
jnp
sub
test
cwtl
dec
pop
and
faddp
pop
mov
mov
pop
rorb
aaa
add
jns
jl
push
adc
scas
or
call
test
jo
push
adc
xor
sub
push
adc
adc
arpl
mov
sbb
aad
mov
inc
or
sub
test
out
sub
cwtl
mov
ds
iret
test
or
shrl
xor
jge
sbb
dec
sbb
loope
sbb
push
popf
imul
sbb
movsb
call
xchg
subl
push
fdivl
adc
sub
fiadds
adc
sbb
mov
mov
dec
sbb
xor
xchg
xor
push
adc
lock
adc
inc
or
mov
mov
fiadds
adc
xchg
lods
shrl
loopne
sbb
mov
push
adc
in
pop
das
shlb
addr16
jae
fsubrp
sub
fisubrl
and
push
pop
popf
adc
movsl
xchg
mov
push
test
jp
xchg
push
adc
movsl
adc
push
or
mov
test
lcall
es
sbb
adc
mov
sbb
jo
adc
out
pop
orb
cmp
add
sub
sub
push
inc
push
add
jb
adc
rolb
jnp
bound
xchg
out
push
xor
ja
repnz
lea
shrb
mov
cmp
lret
fsubl
mov
or
rcl
je
imul
adc
sbb
arpl
fistpl
inc
push
movsl
dec
cmp
rolb
and
mov
sbb
int
pop
pop
cltd
push
pusha
xchg
je
or
loopne
clc
sub
pop
test
repnz
push
aad
mov
filds
inc
or
std
fstps
inc
push
inc
sbb
daa
push
xor
in
lcall
ss
popf
outsb
push
out
hlt
add
leave
mov
imul
ficoms
movzwl
mov
daa
adc
pop
pop
cmp
shlb
or
and
pop
cmp
lds
and
mov
dec
fbstp
sub
mov
dec
clc
sbb
stos
sub
xor
adc
pop
fcompl
shll
dec
leave
adc
dec
push
inc
adc
add
and
cwtl
mov
cmp
rorl
shll
jns
icebp
setle
inc
jp
dec
mov
out
sub
cmp
int
dec
or
rcl
stos
push
mov
stos
fucomp
pop
mov
in
out
lds
lea
aad
rcrl
cmp
in
fidivs
xchg
cmc
pusha
es
ficomps
xchg
sbb
jnp
outsl
or
arpl
mov
leave
sbb
or
cmc
add
mov
mov
fwait
aad
jl
pop
push
mov
and
adc
loop
and
mov
movsl
dec
ja
in
cwtl
jno
inc
pop
sahf
fsubrp
pop
inc
dec
xor
fstpl
shl
jb
adcl
dec
lock
sahf
outsl
inc
notb
fwait
int
push
roll
mov
jmp
decl
fs
icebp
push
sahf
and
pop
ds
jno
loop
push
aad
sahf
dec
sbbl
fsub
dec
test
pop
jo
add
xchg
jae
out
jp
cli
mov
rol
mov
dec
loopne
xchg
fdivrs
cmp
scas
xchg
mov
pusha
dec
enter
cmp
sbbb
sub
outsb
add
mov
push
sub
pop
push
pop
daa
cmp
popf
iret
fidivl
sarl
add
in
push
jmp
and
dec
and
fmuls
or
add
into
jb
pop
loop
subl
das
mov
sub
bound
push
fs
adc
shll
cli
fadds
sub
imul
mov
pop
adc
jno
or
and
push
adc
lahf
push
cmp
iret
sbb
cmp
sbb
shll
sub
enter
cmp
xor
sti
cwtl
and
cld
cli
nop
add
jnp
cld
pmaxsw
jo
dec
outsb
mov
and
push
add
out
push
cltd
bound
outsl
cs
cld
or
pop
push
leave
ds
sarl
add
scas
fbld
js
pop
shrl
mov
les
adc
and
mov
push
push
lcall
jne
push
cld
les
adc
xor
pop
cmp
jge
stos
push
pusha
imul
outsl
roll
sbb
jae
cmp
dec
jb
stos
pop
fmul
mov
mov
stos
mov
pop
inc
sub
stos
addl
scas
popf
cmp
and
fwait
mov
arpl
ljmp
push
cli
mov
bound
es
popa
and
sbb
out
inc
popf
pusha
adc
jl
das
hlt
xchg
insl
mov
or
clc
fistpl
mov
arpl
adc
adc
xchg
push
mov
adc
add
mov
fndisi(8087
lea
xor
cmp
f2xm1
dec
push
dec
into
cmpsb
shrl
sbb
inc
push
into
add
jle
adc
mov
dec
and
xchg
jb
sbb
cmp
enter
push
push
dec
int
push
adc
mov
insb
add
pop
shlb
shl
inc
int
cmp
cmpsb
xor
mov
or
leave
mov
cld
fisubrl
loop
icebp
clc
les
adc
inc
lods
ret
test
fimull
mov
push
adc
imul
inc
dec
je
push
adc
rorb
dec
lret
cld
or
dec
fistpl
aam
out
stos
pop
pusha
ljmp
pop
push
mov
sub
ja
jecxz
sti
and
fsubrs
sbb
inc
mov
xlat
and
jmp
or
arpl
sbb
sahf
pop
imul
mov
jle
cmp
lods
pop
cmp
xor
mov
or
shrl
jl
pop
gs
sbbl
mov
jno
popf
cmp
push
inc
push
std
addr16
test
sub
pop
mov
cmp
cmp
add
repnz
call
mov
and
adc
inc
jmp
fwait
push
mov
sbb
mov
add
push
lods
sarb
xchg
push
xchg
outsl
push
cmpsl
dec
pop
out
inc
sub
shll
mov
test
push
imul
dec
or
imul
fwait
pusha
mov
shll
stos
incl
and
sub
inc
fwait
xor
push
cmp
cmp
inc
orl
gs
scas
pop
cmp
test
mov
shll
pop
xor
rcrl
in
push
lods
push
cmpsl
in
xor
cmp
mov
cmp
jmp
inc
cld
fistpll
push
sub
lea
pop
xor
mov
mov
and
mov
dec
int
scas
sbb
lods
fnsetpm(287
push
ds
adc
mov
add
pop
es
sub
dec
add
and
mov
mov
shlb
nop
lods
jecxz
xchg
dec
stos
pushf
xchg
movsl
or
adc
movsl
lret
mov
mov
imul
dec
orb
and
push
and
lods
ror
das
xor
sub
or
imul
mov
add
or
cld
inc
repz
inc
cmp
mov
pop
mov
out
cmp
xorb
cwtl
jo
loop
jge
add
lea
scas
lahf
and
imul
lds
and
imul
ss
repnz
and
filds
repz
mov
stc
push
or
fwait
int3
outsl
sub
ret
dec
fistl
ss
sbb
cmp
pop
ret
in
mov
mov
push
inc
push
icebp
sub
pop
inc
stos
mov
scas
push
test
push
sbb
add
jne
arpl
pop
push
and
lcall
mov
push
jge
pusha
lret
cmp
aas
and
cmp
sbb
push
mov
mov
ljmp
pop
pop
das
push
dec
pushf
test
jp
cmpsb
or
mov
mov
adc
aaa
cmpsb
orl
jmp
pop
sbb
mov
mov
jg
fidivl
mov
aam
imul
popf
sub
mov
pop
mov
xor
and
mov
scas
mov
dec
ffreep
mov
sbb
insl
mov
jo
sbb
cmp
adc
inc
jb
out
mov
pop
das
popf
mov
loopne
xchg
out
jnp
cmp
test
std
ss
push
test
mov
adc
inc
jg
scas
leave
les
cmp
adc
sbb
lret
fiadds
lds
shl
push
std
sbb
add
adc
fsubr
mov
sahf
jb
rcl
dec
loop
push
aad
leave
mov
and
ret
xlat
es
adc
push
adc
xchg
or
jmp
mov
loopne
aas
imul
push
daa
xchg
pop
aaa
xor
out
push
fadds
roll
and
inc
in
in
and
or
push
fidivl
inc
fnstsw
jbe
fwait
out
lahf
and
rcr
jecxz
test
xchg
push
cmpsb
fldenv
lcall
xor
add
les
rclb
cld
and
fbstp
jb
bound
aaa
xchg
mov
scas
mov
pop
jl
mov
je
fmulp
ret
es
adc
mull
cli
sub
xor
mov
and
test
inc
andb
cwtl
dec
gs
adc
arpl
mov
mov
push
les
popf
cmp
push
and
outsb
jno
or
lcall
xchg
jb
push
scas
mov
xor
sbb
cmp
cmpsb
fsubrs
pop
jg
adc
fwait
js
jmp
dec
movsb
mov
sbbl
icebp
test
ds
fistps
sub
push
adc
or
mov
dec
lds
cmpsl
jo
ljmp
arpl
cmp
mov
pop
pop
cmp
dec
mov
fbld
sub
call
cs
mov
insb
pop
mov
sar
stos
cmp
fstl
fs
inc
out
jecxz
stos
bound
push
pop
gs
pop
std
aaa
iret
test
andb
xor
fwait
pop
mov
lds
pop
mov
or
std
add
out
xor
sub
pop
cmp
aad
in
and
cmpl
jbe
inc
roll
ds
lods
or
mov
fnstcw
nop
xchg
and
sub
adc
fisubl
and
fnsave
insl
or
icebp
push
sub
int
leave
and
push
jl
mov
add
test
cmp
mov
and
push
int
lock
inc
and
push
stos
mov
popf
dec
pop
jae
pop
test
dec
jecxz
add
xchg
cli
adc
push
adc
pop
stos
cmpsb
push
in
jo
mov
jnp
cmpsb
push
addl
ljmp
pop
jnp
jmp
in
test
movsb
or
sub
repnz
popa
and
cmc
or
or
pusha
test
popf
fwait
pop
repnz
out
lea
movsl
bound
adc
ret
sbb
cmpsl
or
call
gs
ljmp
xor
sti
and
jo
sbb
mov
add
pushf
repnz
test
lds
push
imul
jp
cmp
adc
push
mov
add
sub
outsb
add
ljmp
push
adc
lods
fsub
fidivrs
fsub
inc
inc
sbb
xor
frstor
scas
pop
call
insl
push
xor
fwait
dec
push
inc
int
push
and
out
daa
sbb
out
lds
js
mov
push
mov
lds
aaa
dec
fs
jbe
je
rol
test
frstor
dec
mov
lret
push
cmpsl
les
inc
and
mov
mov
clc
sahf
mov
cmc
pushf
insb
pop
inc
pop
daa
pop
mov
cmp
adc
out
pop
mov
dec
fs
jbe
je
dec
ret
test
frstor
dec
mov
push
cmpsl
les
inc
and
mov
mov
clc
shlb
inc
pop
daa
pop
mov
cmp
adc
out
pop
mov
xchg
fistps
push
push
and
xor
cmp
dec
popf
cmp
and
ja
jbe
mov
aad
lods
add
cwtl
mov
outsb
pop
mov
subl
and
fs
inc
in
push
cmpsb
dec
in
or
imull
adc
cmp
cwtl
pop
mov
sub
pop
and
lock
add
aam
jp
inc
cmp
jmp
jae
shll
adc
fstpt
into
jns
out
and
sub
push
cmpsl
loop
dec
imul
shll
inc
repz
fsubrs
push
push
cmpsb
dec
ss
pop
jo
aam
dec
xor
adc
cmp
cmp
ret
mov
push
lods
aam
data16
cmp
rcrb
jbe
scas
and
mov
or
mov
push
dec
cmp
lods
aad
cli
sub
pop
sbb
push
test
or
call
jp
stc
adc
or
and
aad
cli
push
push
dec
enter
add
and
rcrl
mov
popf
cmp
lock
adc
rolb
cmp
gs
jge
dec
xor
mov
push
pop
in
fists
or
mov
mov
inc
push
in
xchg
sub
sub
movsb
les
cmp
lahf
lods
jle
jmp
test
mov
mov
mov
cmp
mov
lods
push
inc
les
adc
cmp
mov
pop
mov
inc
mov
jmp
mov
mov
push
adc
cwtl
and
aaa
js
loopne
add
adc
lahf
dec
int
dec
cmpsb
aad
push
adcl
jo
test
ret
xorl
negl
fsubr
in
jo
lcall
in
ja
insl
fsubrl
jbe
and
jmp
cmpsl
shlb
and
imul
lret
jo
adc
or
inc
xchg
sub
pop
arpl
movsl
shrl
dec
push
add
jle
aaa
sub
adc
push
gs
icebp
dec
in
push
adc
mov
int
pop
lea
les
mov
fnsave
pop
push
sub
fistpll
iret
sbb
mov
dec
stos
faddl
pop
stos
out
xchg
je
rcrl
shlb
adc
jge
dec
testb
pop
lret
xchg
sub
sbb
ret
sbb
xchg
orl
lea
in
lea
test
shll
outsl
xchg
jl
sarl
add
or
add
jecxz
sarl
test
lret
fdivrl
test
pop
cli
pop
adc
ja
lds
subb
xchg
test
mov
out
movsl
lods
xchg
xlat
in
cwtl
cld
ret
addr16
int
push
test
adc
ds
xchg
pop
and
sbb
inc
xchg
xchg
out
inc
clc
js,pt
push
adc
in
das
shll
bound
mov
push
adc
adc
inc
and
popf
pop
mov
pop
adc
jg
int3
jle
adc
ljmp
int3
cwtl
xor
vmovaps
mov
orl
les
lods
pop
mov
lods
and
enter
xchg
jmp
cmpsl
dec
popf
xchg
fildl
mov
les
aam
adc
dec
pushf
mov
lcall
xor
sub
ret
pop
popa
mov
stos
test
mov
adc
sahf
cld
aad
mov
call
pop
sub
fwait
fs
testb
outsl
cmp
mov
in
xchg
push
push
cmpsl
mov
sub
xor
cmp
out
jno
cmc
mov
and
gs
jno
adc
add
mov
dec
call
dec
jmp
push
cmpsb
dec
sarl
div
mov
pushf
je
les
les
adc
daa
xlat
stos
push
fstp
loope
sub
gs
js
sbb
dec
popf
cmp
adc
mov
mov
push
jb
mov
sub
idivb
cmpsl
cmp
and
out
push
test
jno
adc
lods
sub
movsl
inc
jg
shll
push
lret
xchg
loope
stos
push
and
gs
and
cmpsl
dec
or
fucomi
xchg
mov
fcom
test
sbb
lret
lods
aad
add
je
ljmp
fdivrl
stos
push
dec
daa
fmull
xor
mov
push
cmpsl
out
xchg
cmpsl
add
cmp
out
ficoms
jno
adc
mov
lcall
loop
push
out
cmpsl
dec
rorb
xchg
cmpsl
fcomps
push
cmpsb
loop
inc
lcall
popf
rcrb
push
adc
mov
lcall
stos
push
pop
inc
mov
mov
das
push
cmpsb
xor
mov
push
adc
fucomp
test
dec
movsb
cwtl
mov
jg
cmp
jg
call
das
adc
fidivrl
fsubrp
scas
push
mov
int3
ds
cmp
out
ret
cltd
cmp
les
movsl
sub
in
lahf
and
ss
pop
sti
cmp
fcom
push
push
out
repnz
sbb
add
test
jle
inc
cmp
test
jnp
stc
mov
lods
insl
lea
int
test
cltd
iret
aas
push
sbb
sub
stos
or
jge
ja
insl
adc
icebp
mov
push
adc
lds
ja
adc
ret
das
cmpsl
subl
fldl
movsl
jmp
and
xchg
push
or
adc
add
mov
push
ret
sub
in
jbe
add
insb
push
pop
sub
fstpt
in
fldcw
push
add
sbb
dec
cmpsb
mov
adc
popa
test
lods
push
test
mov
xchg
push
and
xor
mov
add
jge
decb
xor
and
shrb
gs
pop
insl
adc
mov
mov
lods
subb
mov
stc
pop
outsb
das
gs
jnp
mov
push
add
mov
and
push
dec
mov
pop
stc
sub
loope
fdivrs
cmp
and
inc
out
es
dec
inc
pop
mov
xor
or
movsb
push
sub
add
mov
push
sub
clc
and
sub
adc
mov
and
add
sbbl
add
xchg
sub
sub
cs
xor
mov
dec
jae
adc
cmp
aaa
aaa
imul
loop
xchg
add
xor
and
loopne
adc
fnstenv
ret
lods
xchg
push
pop
lds
push
cmpsl
xchg
dec
pop
shlb
xor
pop
inc
je
cmpsb
dec
in
subb
adc
cmp
outsl
lds
mov
scas
insl
popf
cmpsl
sub
cmp
xor
imul
or
push
adc
sbbl
lock
jl
and
mov
ror
scas
cmp
push
xor
fildll
aam
push
add
adc
mov
lods
mov
test
je
imul
inc
jge
mov
dec
popa
lret
daa
adc
push
pushf
or
les
dec
mov
test
push
pop
pop
mov
addr16
lods
aad
rolb
into
ljmp
fwait
insb
dec
in
mov
push
adc
add
xor
sbb
sbb
sbb
xchg
mov
ja
test
pushf
push
cmpsb
cmp
add
cmc
ja
push
dec
mov
push
adc
leave
mov
and
inc
stc
ret
push
lods
push
in
cmp
outsb
mov
adc
xor
cmp
and
and
imul
sub
push
cmp
in
jl
push
adc
pop
hlt
mov
lods
cmp
inc
mov
add
adc
sub
adc
jne
shrl
and
push
adc
js
xchg
sahf
insl
push
and
mov
mov
pop
sub
je
rcrl
mov
and
mov
pop
cmp
fnsave
or
and
lahf
xor
mulb
mov
loope
mov
pop
mov
loop
movsb
roll
xchg
bound
lcall
and
fdivr
pop
cmp
xlat
fadds
imul
aaa
sub
repnz
les
sbb
or
push
and
mov
scas
mov
rolb
dec
inc
std
sbb
adc
add
or
adc
pop
jne
das
ficompl
stos
sub
cli
aad
pop
push
inc
hlt
cmp
cmp
cmp
stos
neg
jo
test
push
out
jnp
jmp
ss
inc
dec
sbb
push
or
cmp
dec
xchg
sub
xor
add
xchg
add
sbb
stc
cmc
ds
push
xchg
pop
es
cmc
mov
or
pop
cmc
mov
inc
hlt
push
push
jmp
xor
mov
sbb
cmp
cmp
and
rclb
pop
call
repnz
in
nop
lcall
neg
adc
fwait
cltd
mov
jecxz
mov
cmp
pop
pop
and
push
jae
jo
jmp
jge
andps
or
inc
add
sbb
add
cmp
sub
in
pop
ss
inc
dec
cmp
ja
jne
mov
hlt
and
mov
sbb
push
adc
jno
js
shll
pop
xchg
in
test
adc
mov
cs
add
scas
test
adc
mov
mov
lret
ss
lock
pop
xor
pop
add
lock
xchg
push
sbb
in
mov
push
jo
clc
mov
mov
push
pushf
addr16
mov
or
sub
outsl
mov
mov
das
or
loope
mulb
inc
insl
mov
or
mov
lret
mov
loopne
ja
cmp
cmc
sahf
in
pusha
mov
mov
lods
pop
mov
addb
sbb
cltd
jl
insl
test
aad
and
sbb
int
jo
or
mov
cmpsb
sbb
clc
stos
pushf
xchg
enter
push
daa
mov
mov
lods
pop
cmpb
or
cltd
xor
fs
xchg
xchg
out
stos
scas
mov
xchg
xor
fisubs
cmp
adc
out
fmulp
rcrb
jmp
outsb
lret
jmp
and
xchg
ja
cmp
cmc
cwtl
roll
pop
cmpsb
dec
jmp
add
sub
je
roll
aam
out
and
and
xor
inc
jg
ljmp
int3
movsl
dec
loop
cmpsl
xor
mov
push
adc
stos
sbb
sarb
sbb
xchg
sub
add
les
lahf
cmp
out
jb
rcr
mov
movsb
dec
cltd
mov
jo
adc
mov
cmp
dec
popf
xchg
loop
lods
andnps
lods
in
test
gs
mov
data16
mov
daa
xchg
pop
aam
jbe
mov
cmp
pushf
jnp
sub
pop
and
test
push
adc
xor
dec
mov
push
adc
sub
nop
push
cmpsb
pop
add
and
lods
popa
add
jmp
sub
mov
pop
adc
loope
pop
adc
addr16
test
dec
xor
into
jl
jecxz
cmp
fs
sbb
push
cmpsb
scas
xor
push
mov
jnp
lahf
cmp
cltd
daa
js
adc
fsubrp
xchg
das
cltd
scas
xor
fstpt
scas
mov
cld
outsb
sub
aad
mov
fsubl
in
xorb
ds
mov
lcall
dec
int3
xor
pop
subps
aaa
enter
mov
fistpl
pop
push
cmp
leave
mov
cs
cmp
imul
cmp
push
imul
addr16
xchg
jge
insl
add
pmulhw
xchg
cmp
push
adc
jge
fs
pop
jo
adc
dec
push
inc
pop
cmp
adc
cwtl
jae
adc
or
sar
push
pop
add
xor
sarl
cmpsb
nop
jbe
adc
repnz
inc
test
jo
adc
mov
and
mov
adc
xchg
clc
jno
adc
mov
xor
pop
lods
pop
lock
xchg
je
cmp
fdiv
pusha
push
loop
inc
leave
pop
lods
xor
rorl
repnz
test
stos
xchg
lea
dec
aad
int
lret
add
cld
pop
cmp
or
push
adc
jns
sub
inc
sbb
fs
jno
adc
es
dec
mov
das
dec
mov
arpl
lock
punpckhbw
adc
inc
add
push
adc
jge
leave
inc
aaa
icebp
lods
push
pushf
in
sbb
jb
adc
mov
fiaddl
mov
into
mov
incl
adc
test
out
shll
data16
push
stos
add
lds
imul
clc
jo
adc
mov
xor
cmp
hlt
jo
adc
mov
push
adc
adc
and
mov
movsb
push
mov
push
adc
adc
sub
mov
testb
jp
in
cwtl
dec
decl
add
sub
jp
jae
pop
cmp
adc
pop
pop
jmp
call
mov
or
pop
sub
mov
int
jo
pop
loope
dec
push
dec
fdivrs
pop
mov
cmp
sub
and
cmpsl
sahf
mov
dec
aaa
dec
push
pop
adc
lds
push
adc
xor
dec
xor
cmc
pop
loop
adc
cmp
inc
lods
jns
adc
inc
jae
adc
inc
push
push
xor
push
int3
fildl
push
mov
push
inc
les
adc
movsl
xchg
xchg
xor
pop
pusha
cld
into
mov
fcmovu
popf
cmp
push
jp
xor
push
adc
movsl
test
push
adc
clc
jo
adc
inc
ret
inc
push
aas
hlt
jo
adc
jo
push
adc
mov
into
mov
mov
push
mov
rcrb
push
adc
out
mov
lret
xor
push
mov
adc
adc
push
stos
outsl
icebp
int
loop
lcall
out
mov
sub
in
repnz
or
and
xor
and
pop
loopne
iret
gs
repz
push
cmpsl
cmp
pop
test
dec
or
pop
ljmp
mov
in
xor
pop
rol
push
adc
mov
movsl
lret
test
adc
lods
pop
fldcw
iret
lods
loopne
das
cmpsl
dec
push
mov
xchg
cwtl
pop
mov
xchg
movsb
testb
push
push
or
clc
and
sahf
push
adc
dec
ja
jo
adc
out
inc
pop
adc
inc
aad
add
adc
cltd
jp
pop
cmp
sub
sahf
push
adc
mov
fadds
pop
or
inc
dec
push
in
push
int
add
test
mov
rcr
jb
adc
jno
nop
mov
test
adc
mov
shrb
jmp
lret
or
cmc
pusha
mov
mov
cltd
mov
jo
adc
dec
mov
sub
cmp
xlat
dec
jnp
add
stos
pop
mov
bswap
mov
adc
dec
out
cmp
cltd
inc
in
xchg
jmp
cltd
or
cmp
jae
adc
nop
fldcw
mov
sub
popf
shrb
lods
pop
in
cmp
push
adc
jne
into
lret
int3
mov
and
fildl
dec
lods
jo
adc
adc
lds
addl
stos
inc
jmp
mov
fiaddl
lock
dec
ja
cmp
lret
test
or
rorl
mov
stos
repz
inc
or
stos
jp
push
mov
sbb
cli
stos
rcl
cwtl
fs
adc
pop
push
std
stos
push
in
lahf
push
and
jle
loope
jno
adc
lret
push
inc
or
adc
shrb
push
sub
aam
adc
lock
sbb
push
adc
push
out
push
dec
test
push
adc
mov
push
adc
xchg
adc
push
sub
sbb
lret
inc
mov
out
in
sub
and
cwtl
lock
in
dec
adc
hlt
outsb
push
sbb
or
dec
xor
dec
das
fwait
aam
sub
jno
adc
test
mov
test
xor
fs
jo
adc
push
adc
cmpl
fwait
push
adc
fprem
jo
adc
xor
or
sbb
hlt
jo
adc
inc
xor
mov
aas
mov
out
sbb
jo
adc
jp
les
rol
add
adc
pop
fcoml
mov
movb
sbb
xor
sbb
cwtl
jae
adc
mov
cltd
xor
xor
lods
aad
lcall
cwtl
jno
adc
ja
movb
fsubrs
scas
push
cmpsb
dec
xor
push
lds
xor
mov
and
stos
push
push
push
dec
fdivs
adc
cmp
and
rcll
xchg
les
pop
in
push
adc
push
shlb
mov
gs
call
loope
jp
dec
ja
jno
adc
adcl
fstpl
data16
arpl
popf
rorb
jno
adc
mov
ret
test
adc
adc
dec
jae
jae
adc
push
lods
or
mov
pop
lods
loopne
push
adc
cmc
add
popf
mov
cmp
push
loope
rclb
push
adc
xchg
addb
or
inc
lods
push
cmpsb
mov
fwait
lret
js
pop
lcall
adcb
xchg
std
pop
jo
and
das
pushf
mov
jno
adc
pusha
jmp
mov
stos
push
mov
cmpsb
dec
cltd
fadd
jo
adc
lds
cmp
psrad
adc
cmc
add
cmpsb
les
adc
xchg
cmpsl
mov
push
add
out
cmp
mov
inc
dec
leave
jg
aas
stos
test
fmuls
adc
cwtl
les
dec
aad
or
loopne
out
xor
jo
adc
lea
loop
lcall
mov
lock
cmpsb
mov
pushf
mov
push
test
xor
loop
push
or
sbb
rorl
loop
les
pop
sahf
push
pop
cld
test
adc
adc
mov
cmp
les
insb
jg
add
gs
mov
cmp
mov
mov
inc
dec
push
pop
test
data16
aam
and
stos
pop
std
sub
test
xchg
inc
das
stc
xchg
sub
inc
push
mulb
out
jbe
fists
insb
add
cwtl
mov
mov
sub
loopne
mov
jmp
dec
pushf
inc
dec
pop
stos
les
jmp
mov
dec
call
jns
pop
mov
lahf
mov
mov
aas
lods
adc
orl
int3
pusha
add
aaa
nop
fiadds
sub
push
adc
or
cmpsb
pop
popa
arpl
add
loope
mov
mov
stos
inc
and
and
les
or
pop
lea
mov
inc
repnz
rorl
pop
out
lret
mov
xchg
xchg
mov
loop
in
gs
arpl
push
adc
nop
xlat
sbb
or
gs
loope
or
leave
xchg
inc
xchg
mov
sub
andl
das
cld
sub
das
mov
pop
sub
push
pop
imul
push
adc
push
stos
pop
stc
mov
mov
mov
notb
adc
or
pop
mov
jo
inc
inc
and
outsb
inc
xor
out
cmpsl
lcall
js
inc
xchg
xchg
lds
mov
popa
nop
ss
xor
or
in
ss
inc
daa
lea
cwtl
movsl
in
pop
icebp
lea
dec
xor
test
lock
mov
push
adc
lcall
les
frstor
lods
inc
arpl
jecxz
jle
xor
push
adc
mov
fldcw
xor
xor
push
stos
lock
repnz
cmp
popf
out
xchg
imul
jno
cmpsb
or
cmp
imul
add
cli
jne
daa
push
ret
sub
mov
jmp
mov
mov
or
out
fmulp
add
adc
push
sti
mov
inc
scas
int3
jo
adc
jne
dec
push
push
sub
xor
or
leave
cmpsl
shlb
mov
and
mov
jg
loop
adc
push
stc
iret
add
adc
push
sti
mov
xchg
pop
mov
shrb
add
push
adc
cmp
andl
push
sub
out
mov
mov
lds
cmpsl
addr16
cltd
insb
fwait
adc
jo
adc
pop
fcmovnbe
popf
push
adc
push
test
mov
xchg
je
cwtl
jo
adc
hlt
jno
add
push
sub
test
adc
mov
aad
pop
loope
mov
lods
cmovle
jo
adc
jge
pusha
add
dec
jae
jno
adc
pop
mov
cmc
dec
popf
cmp
dec
lods
movl
jo
adc
lods
sub
jno
lahf
push
xchg
sub
mov
lods
mov
jb
push
stos
fucomi
mov
aaa
imul
mov
int
mov
and
js
inc
xchg
inc
inc
xor
cmp
push
adc
mov
fwait
test
fsubr
push
mov
push
adc
adc
push
adc
push
cli
sub
adc
inc
jbe
jae
inc
sbb
push
adc
dec
jbe
imul
cmpsl
movsb
cwtl
jo
adc
in
in
les
or
jno
adc
rcr
inc
leave
dec
shlb
and
push
stos
add
loopne
inc
pop
fldcw
lods
or
movsl
orb
sub
mov
rcl
jno
adc
fst
adcl
gs
cmp
sub
push
adc
lret
or
and
xchg
cld
cmpsb
push
xor
lcall
out
inc
adc
sub
jmp
add
sub
data16
lret
jae
adc
cmp
imul
add
or
ljmp
das
cmpsb
sahf
pop
adc
push
adc
mov
das
adc
mov
jno
outsb
imul
test
mov
popf
leave
lock
popf
mov
cltd
cmp
sub
or
push
adc
mov
push
adc
pop
out
and
xchg
das
sub
out
cld
mov
jecxz
xchg
jbe
and
or
fs
imul
jns
ss
orb
add
dec
mov
jno
scas
jle
dec
out
es
pop
roll
xchg
push
xchg
lock
jbe
int3
movsl
cmp
pusha
pop
pop
fstpt
stc
movsb
sbb
cmp
push
es
lods
lea
dec
loopne
push
mov
fisttps
push
adc
cmp
mov
cmp
mov
das
push
or
adc
mov
ds
jbe
pop
icebp
push
cmpsb
inc
bswap
cltd
jb
add
out
push
notl
mov
hlt
xchg
jmp
or
sarl
scas
xor
pop
mov
in
stos
mov
aaa
xchg
push
lret
add
push
adc
in
cmpsb
pop
dec
les
adc
lds
test
xchg
out
lcall
inc
sub
fidivrs
mov
mov
lock
idivb
mov
test
xor
xchg
and
jb
jg
sbb
adc
lock
lods
adcb
pusha
jno
adc
dec
clc
jo
adc
iret
icebp
lret
imul
xor
mov
and
or
mov
test
lods
mov
xor
rcll
fdivs
adc
sbb
xchg
mov
push
shlb
cmp
jae
leave
sub
jo
adc
popa
loopne
or
mov
imul
scas
xchg
movsb
shlb
mov
cmp
push
mov
push
adc
cld
cmp
in
adc
mov
into
xchg
mov
dec
int
cs
lea
adc
lods
push
aaa
cwtl
int3
lcall
xor
lret
jmp
adc
call
inc
jge
js
leave
shll
sub
aaa
repnz
popf
lock
and
xchg
push
adc
jb
adc
adc
and
fwait
imul
andb
stos
push
and
pop
fs
gs
mov
dec
push
pop
insl
movups
nop
nop
jo
adc
add
fcompl
int
gs
ret
inc
jae
adc
bound
inc
jbe
sahf
push
adc
rcrl
cmpsb
cmpsb
mov
sub
add
cmpsl
hlt
cli
add
sbb
push
test
jno
adc
or
jmpw
out
cs
lods
or
push
adc
cltd
sbb
pusha
mov
daa
pop
je
inc
push
mov
stc
mov
push
adc
and
repnz
daa
push
je
pop
cmpsl
mov
pop
add
dec
add
adc
mov
lcall
lds
out
mov
and
add
push
sti
xor
xchg
sub
cmp
sub
cmp
or
adc
adc
int
loop
stos
push
test
data16
stc
lods
pop
mov
adc
int3
popf
jno
adc
inc
out
add
jg
and
cmpsb
pop
jo
xchg
lahf
hlt
ret
push
sub
in
das
cmpsl
scas
adc
inc
nop
jo
adc
xor
cmc
cmp
mov
push
pop
inc
xor
push
adc
fsubr
idiv
or
pop
cmc
push
sbb
dec
xlat
adc
fnstenv
mov
fists
jb
adc
and
mov
cmpsb
movsl
les
adc
mov
xor
testb
push
lcall
dec
lock
adc
inc
mov
mov
lods
shrl
mov
lret
push
lock
fistps
ret
mov
enter
xchg
push
fisubs
mov
mov
push
adc
lock
jl
movsl
int
sbb
push
adc
les
sub
mov
clc
jo
adc
mov
xor
sub
movsl
hlt
jo
adc
mov
mov
insl
je
push
adc
lods
and
out
js
sbbb
popa
cwtl
jo
adc
test
mov
xchg
mov
sti
pusha
mov
sarl
cmpsl
jmp
cld
dec
jae
adc
add
sub
icebp
pop
lret
push
mov
lret
stc
pop
clc
popf
adc
or
push
fcom
push
sub
out
inc
in
cs
xchg
aas
in
lods
lock
pop
pop
dec
xchg
pop
mov
sbb
and
pop
mov
jecxz
in
push
mov
and
mov
jne
popf
adc
adc
pop
cmp
aas
jge
jno
adc
clc
shlb
adc
insb
jbe
popa
enter
push
fstl
push
adc
xor
add
in
mov
jno
adc
adc
test
mov
ljmp
sub
add
push
adc
jno
inc
push
jno
cli
pop
nop
jo
adc
les
cltd
xchg
ljmp
les
adc
mov
pop
test
les
adc
inc
aad
outsl
xchg
test
mov
xchg
es
lcall
xor
loop
dec
pusha
js
inc
mov
inc
aad
or
adc
sahf
mulb
jb
and
xchg
rorb
pop
mov
mov
aas
add
push
adc
jae
jo
adc
jl
lds
adc
mov
jae
movsb
shl
pop
mov
inc
cmpsl
cwtl
jo
adc
xor
sub
or
in
pop
adc
andl
stc
cmpsb
gs
out
es
xor
mov
les
adc
mov
in
pop
adc
pusha
jno
adc
xor
and
insl
jecxz
aad
rorb
lret
cmp
call
shll
out
stos
ja
jno
adc
divl
sahf
testl
imul
shr
inc
rorb
add
adc
out
jb
or
and
sbbb
scas
pop
loop
mov
shrl
jo
adc
push
lods
pop
cmp
jmp
test
cmp
loope
adc
pop
loope
xchg
ja
add
push
push
stos
push
lods
cmpsb
movl
push
adc
lret
sub
lods
sub
inc
test
mov
push
test
push
mov
push
xor
mov
mov
jno
push
aad
rorb
lods
pop
dec
and
mov
pop
dec
ja
jno
adc
int
in
insb
ljmp
stos
push
and
xchg
cs
lcall
bound
xor
mov
xchg
pusha
int3
mov
es
mov
int
inc
sahf
pop
sub
lds
adc
xor
lods
add
adc
pop
mov
xchg
test
mov
dec
rdmsr
insb
pop
mov
xchg
ja
adc
adc
lods
pop
jecxz
dec
mov
or
dec
je
jne
cmp
loopne
adc
inc
aam
ret
stc
fisubrl
jl
data16
fwait
fs
ret
push
adc
sub
sub
mov
dec
sub
mov
xchg
add
mov
popf
jb
dec
mov
rdmsr
pop
inc
orl
test
pushf
mov
shll
pop
daa
ficoml
jp
popa
or
mov
pop
sbb
mov
fiadds
mov
or
push
adc
jecxz
mov
inc
repnz
push
mov
cmp
jo
adc
in
pop
adc
adc
in
pop
adc
add
mov
jo
adc
cmp
hlt
cmp
push
adc
inc
sub
call
jmp
jmp
inc
cmp
lret
mov
adc
cmpsl
push
pop
jbe
dec
dec
mov
mov
jo
adc
mov
adcb
mov
rol
sbb
adc
cmpsl
lcall
sahf
xor
out
shlb
jg
jecxz
xchg
add
push
sahf
test
xchg
fmull
adc
xchg
outsl
jl
pop
cmc
adc
push
adc
jmp
or
dec
xchg
shll
hlt
jp
inc
lods
push
push
subl
push
adc
fisubs
fmuls
or
cwtl
mov
sub
xor
fwait
leave
sbb
mov
jmp
movl
sbb
pop
loopne
ret
movsl
xor
adc
xchg
jae
sbb
sti
adc
dec
rcl
in
sbb
cs
roll
mov
fnstenv
imul
in
in
push
sub
hlt
imul
sub
and
or
dec
and
fsubr
jge
cmp
cmp
jecxz
push
sub
jb
dec
fs
int
or
jp
subl
lret
inc
jo
adc
add
hlt
xchg
xchg
loopne
mov
jl
mov
jecxz
out
adc
mov
jbe
sub
dec
in
sub
push
push
dec
cmp
push
adc
dec
pop
cmp
jo
adc
dec
call
jmp
mov
addr16
xchg
lock
jmp
sub
gs
shl
aad
mov
or
pop
cmc
loop
mov
jl
shlb
js
inc
test
cwtl
scas
lods
push
test
jbe
inc
arpl
mov
push
pop
dec
fnstenv
cmc
pop
adc
add
push
adc
inc
ja
stos
pop
jo
mov
pop
pushf
cmp
rolb
pop
fstpl
shrl
pop
fiadds
inc
aad
jmp
shll
adc
rclb
and
xchg
fs
bound
movsl
shrl
sub
xlat
and
lret
or
pop
cli
cmpsb
movl
or
cmp
lcall
adc
clc
jo
adc
insb
sub
hlt
jo
adc
aam
push
adc
mov
addr16
incl
adc
pop
inc
jg
ret
sbb
pop
adc
inc
jno
adc
pushf
jo
adc
cld
jecxz
adc
mov
enter
pop
insl
movsl
jb
imul
dec
sub
push
adc
cmpsl
data16
pop
xchg
loope
outsl
mov
adc
inc
or
cwtl
xor
push
adc
fwait
mov
xor
lds
adc
rcll
inc
jno
adc
xlat
lods
pop
fnstenv
cmc
pop
adc
fidivs
std
das
call
mov
iret
lcall
loope
fwait
stos
in
mov
test
push
adc
std
fists
mov
repz
lods
cmpsb
movsl
sub
push
adc
dec
mov
jbe
cmpsl
xor
add
pushl
imul
or
mov
popa
xchg
add
jbe
inc
xor
adc
inc
cmp
rol
das
pop
add
fldl
sbb
xlat
js
push
adc
sbbb
ficoms
sub
add
enter
sub
insl
loopne
sahf
or
sldt
adc
dec
stos
jle
ljmp
push
mov
inc
sub
test
das
xchg
xorb
sahf
arpl
add
jle
push
adc
ret
adc
mov
adc
insb
cmp
mov
sbb
push
adc
add
in
shl
adcl
xchg
push
lret
popf
pop
imulb
shll
jmp
mov
adc
sbb
cmc
pop
adc
fdivs
adc
and
and
mov
cltd
push
adc
mov
pop
xlat
sbb
icebp
je
mov
insb
push
pop
mov
xchg
sbb
js
mov
and
out
ljmp
les
sub
decb
mov
pop
addr16
sub
shr
dec
push
fucom
pop
sahf
arpl
cli
dec
shlb
adc
xchg
or
jo
adc
xor
leave
xor
adc
adc
movsl
add
lds
xchg
mov
cmp
push
adc
push
gs
fwait
push
adc
addr16
jo
adc
pop
add
pop
adc
xor
push
adc
out
xchg
xor
test
daa
popa
mov
push
mov
jns
jo
adc
in
aam
push
push
and
pop
cmc
adc
out
jno
out
shlb
inc
leave
sub
or
stos
add
jecxz
fs
push
test
cmp
cmp
pop
push
lods
add
xor
sub
cmpsl
movsb
push
xor
inc
mov
fisubrl
pop
adc
jo
in
rorl
cmp
cmpl
cmp
lods
imul
test
push
adc
jle
jo
adc
xor
dec
popf
jg
xor
sub
inc
hlt
jo
adc
xchg
sub
xor
cmp
cmpsl
movsb
mov
adc
adc
aad
cs
mov
lcall
bound
push
pop
scas
lds
ja
lock
adc
push
or
jecxz
fs
lahf
xor
xchg
fdivr
pushf
sub
fistpll
sbb
jmp
cmpsl
dec
cltd
inc
pop
popa
xchg
sub
xor
cmp
pusha
cmp
aad
ljmp
dec
cltd
xor
sub
mov
rcll
nop
jp
push
test
inc
pop
or
xor
je
les
pusha
les
cmc
pusha
cmp
shlb
pop
xor
sbbb
pop
mov
inc
fucomip
shll
pop
fistpll
mov
cmpsb
lock
adc
fwait
push
cmpsl
pop
insl
testb
rcl
mov
xchg
insb
mov
mov
jae
xor
cli
out
jne
rorl
pop
std
push
mov
mov
jb
push
test
and
aaa
imul
aad
dec
into
xchg
jl
xor
mov
sbb
push
dec
cwtl
jo
adc
dec
xor
mov
testb
inc
ret
push
lods
rorb
mov
gs
pop
mov
xchg
arpl
pop
mov
add
xchg
std
push
pop
in
cltd
xor
pop
fcoms
jo
adc
lret
or
rorl
lcall
lahf
cmp
int3
or
xor
data16
dec
pusha
xchg
js
movsl
aas
mov
xchg
push
das
das
sahf
ret
dec
stc
loop
mov
xchg
jno
or
add
or
pop
mov
mov
inc
fdivs
adc
dec
sbb
cmp
inc
repnz
imul
clc
faddl
jp
aad
popa
pop
push
outsl
call
insl
add
outsb
adc
cmpsl
jle
std
cli
dec
in
push
adc
xor
mov
mov
pushf
jo
adc
push
adc
jb
pop
test
mov
push
loopne
push
adc
mov
and
gs
adc
dec
mov
push
dec
ds
push
test
and
sar
cmp
jno
adc
mov
aas
les
adc
mov
push
inc
cmpsb
or
cwtl
test
jmp
adc
dec
inc
ss
stos
leave
dec
les
sbb
pop
push
ss
inc
shll
shll
jb
rol
pop
pop
inc
sarl
loopne
addr16
push
adc
adc
ljmp
or
adcl
sub
aad
subl
xchg
bound
add
push
dec
shlb
gs
or
push
fsub
addb
sub
cmp
ds
cmp
pop
mov
mov
fwait
mov
or
cmpsl
or
fsubrs
mov
xor
add
fsubrl
ds
out
xlat
negl
sub
fcomp
inc
stos
mov
mov
and
mov
mov
dec
jb
cmp
loopne
cmp
addl
cltd
mov
std
mov
cmc
mov
dec
fs
je
mov
std
out
movsb
pop
mov
lcall
lcall
mov
les
loop
out
loopne
je
out
inc
icebp
lcall
mov
roll
or
out
cltd
xor
lds
fistl
cwtl
and
sahf
arpl
xor
pushl
and
mov
shll
push
insl
or
cmp
jmp
mov
fwait
scas
scas
pop
mov
aaa
sub
rcrb
or
adc
push
or
cltd
popf
xchg
ret
insb
scas
imul
jns
lods
cmp
sbb
push
fcmovbe
push
sbb
imul
inc
lds
push
mov
and
aad
imul
lahf
mov
fadds
adc
lret
cmp
push
cmp
sarl
pop
lods
sub
lret
xchg
sub
ds
test
addb
lea
inc
mov
adc
xor
jae
cmp
hlt
xchg
cmp
ja
mov
sub
lock
out
dec
ds
or
mov
xchg
xchg
cmpsl
jmp
js
dec
addr16
and
sahf
add
adc
orl
inc
cmpsl
adc
push
push
in
add
lcall
jo
adc
enter
mov
in
stos
push
lods
bound
and
mov
arpl
mov
rcrl
adc
fucomip
fld
sbb
das
subl
jo
adc
jbe
and
test
mov
cmpsl
xchg
out
and
mov
and
ljmp
shlb
sub
or
ret
push
movsl
sbb
scas
pop
loop
xor
call
xor
xchg
sbb
roll
jo
adc
insl
rcr
push
or
lea
ret
imul
jo
adc
cli
out
imul
sahf
aad
outsb
int3
test
dec
inc
lret
dec
mov
lret
fildll
inc
scas
mov
aaa
mov
or
lret
insl
xchg
aad
lods
pop
cli
pop
sub
adc
in
fisubrl
out
jle
add
ds
hlt
mov
imul
jae
adc
dec
ret
add
push
cmp
leave
jmp
pop
aad
into
pop
lret
lods
adc
fwait
scas
adcl
and
dec
xchg
cmpsl
xchg
cld
stc
adc
cwtl
jo
adc
clc
nop
jo
adc
dec
sbb
inc
or
xchg
and
and
out
rcrb
xlat
pop
xchg
and
and
and
cli
jnp
mov
mov
lds
xor
jl
es
arpl
imul
notb
jno
test
adc
test
fisttps
es
andb
pop
jle
and
fstpl
roll
or
int3
mov
mov
call
enter
xor
test
xchg
aaa
mov
repz
enter
daa
das
dec
mov
mov
cli
jne
out
sub
imul
dec
sahf
pop
les
sbb
cs
dec
in
stos
dec
or
js
push
pop
mov
inc
jecxz
out
loopne
mov
inc
jo
adc
adc
add
test
adc
addr16
pop
shl
sahf
dec
addl
sub
fnstcw
ljmp
push
adc
imul
imul
and
lock
xor
pop
loopne
inc
xlat
mov
push
cmp
mov
sub
cmp
mov
and
rorb
jmp
xor
dec
jmp
aam
les
or
pop
shll
adc
pop
das
jno
xor
mov
lds
mov
jg
jo
adc
out
fdivrp
cmpsb
fs
xchg
add
mov
out
mov
dec
pop
push
int
stos
push
add
out
mov
jns
loope
popf
cmp
mov
out
jbe
cmpsl
xor
mov
mov
in
fstps
mov
test
dec
mov
andl
and
xor
mov
ret
in
jb
adc
fwait
popa
fcomps
pop
jne
fidivs
add
add
jae
adc
aam
addr16
mov
in
mov
les
sub
xchg
shrl
mov
data16
lock
push
out
dec
fucomi
shll
arpl
mov
data16
pop
push
aaa
aaa
iret
lcall
popf
mov
lods
test
inc
dec
dec
js
add
pop
sub
sar
cmpsb
dec
cltd
popf
repnz
push
adc
mov
lods
xor
adc
pop
je
adc
inc
add
push
xchg
inc
cmp
sub
aam
cwtl
negl
test
loop
lods
ljmp
cmpsb
inc
je
adc
dec
jae
test
fcomps
mov
adc
fcomps
out
lcall
lds
lahf
cmp
jns
clc
adc
xchg
test
push
adc
cmp
nop
jne
shlb
pop
dec
stc
pop
scas
cmp
lods
mov
add
lock
xor
sbb
sub
mov
inc
fsubr
shlb
fcoms
add
jmp
jne
insb
shrb
or
mov
imul
and
shr
xchg
imul
inc
xchg
lock
outsl
mov
jnp
mov
in
cmp
dec
sbb
int3
es
and
and
test
outsl
das
xchg
data16
and
adc
mov
push
adc
mov
mov
jno
adc
data16
mov
adc
je
stos
aam
rolb
sub
add
xor
movsl
imul
mov
mull
jne
mov
sbb
loop
push
ffreep
ljmp
movsb
aad
or
push
adc
mov
sbb
sbb
push
shlb
add
das
stos
fdivr
mov
rol
sbb
adc
mov
clc
mov
jnp
cwtl
jo
adc
xchg
dec
mov
int3
out
cmpsb
test
sbb
push
adc
cwtl
dec
pop
lret
xchg
shll
and
sub
mov
push
outsb
mov
cmp
add
roll
cmpsl
jmp
xor
sbb
jo
adc
inc
in
testb
movsb
adc
inc
jl
xchg
xchg
sbb
adc
es
lcall
jmp
jae
sub
or
xor
dec
mov
push
sub
pop
mov
xchg
adc
test
sub
xor
cs
enter
std
add
sbbb
gs
mov
fadds
adc
adc
popa
xlat
dec
stos
sbb
cli
test
frstor
addr16
push
pop
pusha
cmp
mov
int
jp
jmp
fsts
adc
jb
xchg
sub
jne
or
inc
cmpsl
mov
popf
mov
out
push
push
jp
add
fsts
push
xor
mov
addr16
cmpsl
and
fs
sub
test
xor
mov
xchg
sub
add
inc
pop
sahf
fstpt
fldenv
pop
and
adc
popf
cmp
shlb
out
xor
and
adc
aam
test
and
int
sub
rcrl
dec
push
pop
cwtl
mov
inc
orb
xlat
push
mov
movsl
out
xchg
jmp
adc
ja
fidivs
xchg
loop
rep
push
shrl
adc
lock
subb
push
xor
fidivs
jmp
and
test
arpl
outsb
mov
das
imul
push
dec
aad
cs
push
cmpsb
cmp
lds
jo
mov
add
mov
mov
jmp
aaa
xorb
outsb
int
loopne
movsb
arpl
outsb
mov
popf
sbb
inc
push
repnz
inc
icebp
sbb
sbb
fiadds
in
cltd
xor
cmc
xor
cmp
or
mov
inc
adcl
xchg
cmpsb
in
dec
pop
mov
xor
sub
pop
push
push
ja
sub
cmpsb
cmp
cmpsb
shlb
iret
xchg
sub
orl
in
mov
scas
aam
inc
mov
bound
and
shrl
or
mov
daa
sub
adc
sub
out
inc
xchg
cwtl
insb
jne
jne
push
inc
ret
and
ret
add
fwait
subb
stos
fiadds
daa
mov
pop
sub
push
pop
xchg
jne
test
jmp
in
mov
inc
or
sub
inc
pop
push
insb
dec
loope
fwait
jo
cmp
das
inc
add
adc
push
push
push
fists
or
push
adc
fstl
xor
add
and
cli
pushf
sub
cmp
push
dec
pop
das
mov
mov
mov
xor
rorl
xlat
test
mov
or
or
cmc
nop
mov
xchg
jge
mov
cmp
push
xor
or
jae
arpl
insl
sti
out
push
es
mov
jae
xor
jo
mov
dec
movsb
rcrb
cmpl
dec
cmp
cmp
shl
inc
sub
ds
push
pop
dec
dec
addr16
sub
shll
int3
cmp
data16
jmp
mov
pop
jp
testb
mov
push
push
xchg
gs
mov
insl
and
mov
call
xchg
mov
sbb
hlt
mov
mov
mov
popa
mov
js
xor
jne
sbb
jl
xchg
mov
fnstsw
addb
xchg
test
and
xor
divl
das
repz
inc
or
add
subb
push
cmc
bound
xor
xor
out
xor
std
sar
mov
sub
ja
pop
movsl
jmp
adc
pop
and
push
jmp
mov
das
popa
xchg
mov
push
in
shll
pop
shlb
out
push
jo
xchg
lock
cmp
jge
cltd
inc
lds
xchg
shll
lahf
cmpsb
ds
in
or
int3
cli
xor
mov
psubusw
push
adc
push
pop
je
adc
push
rcll
mov
loopne
daa
pop
out
xchg
popf
jmp
out
cmp
mov
stos
push
mov
xor
adc
loopne
push
adc
sub
push
jae
lds
shlb
clc
sarb
jno
push
fcomps
mov
aaa
imul
mov
sub
outsb
xchg
ja
add
cmp
cld
mov
dec
pop
cmp
rcr
pop
out
mov
jl
popf
mov
sbb
and
adc
jge
test
ficoms
cmp
fadds
adc
mov
jmp
adc
js
lea
mov
fadds
adc
cltd
pusha
xor
stos
stos
mov
je
or
pop
and
adc
xor
ljmp
pop
mov
cwtl
test
mov
inc
adc
sub
mov
lds
push
and
mov
fcmovbe
outsb
int
idivb
pushf
cmp
pop
cmp
or
sahf
sub
jmp
daa
pop
cmp
xchg
mov
mov
cmpsl
test
out
lods
or
adcl
lcall
adc
daa
push
cmp
int
jo
pop
out
mov
mov
sbb
xor
adc
xchg
test
mov
lds
pop
movsl
adc
jg
rolb
stos
push
sub
cltd
mov
push
sub
jmp
or
or
cld
daa
test
test
xor
mov
mov
pop
push
pop
mov
pop
mov
and
push
das
popf
mov
test
into
loope
jmp
fmull
enter
std
add
adc
adc
out
addb
pop
scas
cmp
dec
fadds
jge
add
add
lock
adc
aaa
imul
sar
loop
sahf
movsl
sub
rcll
jnp
cwtl
aam
sub
push
adc
inc
and
push
adc
push
filds
sub
adc
test
scas
fidivrl
adc
jae
shrl
add
adc
dec
dec
into
xchg
ja
pushf
inc
jp
sti
scas
dec
jne
jo
adc
gs
adc
add
ss
pop
adc
loop
sbb
pop
xor
inc
shrb
pop
stos
inc
push
aaa
repnz
and
xchg
push
adc
or
adc
repz
subb
and
sub
mov
or
jmp
std
stos
test
pop
arpl
jo
adc
sbb
fcompl
out
mov
dec
enter
xchg
lock
scas
mov
jl
push
cmc
add
jle
nop
pop
lods
push
cmp
outsl
lock
sbb
jno
adc
inc
idivl
push
addb
cld
mov
jno
adc
pop
lret
dec
pop
xchg
sub
mov
sbb
std
addr16
pop
adc
loop
je
xchg
mov
add
cwtl
iret
add
push
adc
push
adc
jne
jae
dec
jp
or
ds
adc
or
mov
inc
ds
jge
adc
add
lea
gs
and
sbb
mov
mov
pop
adc
mov
and
push
adc
cli
cltd
mov
and
add
sub
add
adc
pop
leave
lret
sbb
adc
push
cvtps2pd
push
adc
in
sbb
adc
dec
daa
nop
stos
xchg
sbb
jmp
mov
push
adc
mov
inc
or
ficoms
jo
adc
imul
sarb
dec
lcall
mov
inc
jmp
sarl
les
pop
std
cltd
push
test
int
pop
hlt
jge
adc
or
shrl
jo
adc
xchg
int3
and
dec
pop
movsl
imul
xchg
jb
les
rcrb
or
mov
cmp
push
or
inc
rsqrtps
push
adc
xchg
and
lock
inc
dec
xor
pop
adc
test
lret
lahf
scas
out
xorb
mov
je
mov
aad
sti
fndisi(8087
lea
xor
cmpsl
out
les
pop
xchg
mov
cmc
cmp
pop
scas
xchg
adcl
and
imul
loope
rcr
jo
adc
repnz
aad
fistps
cmpsb
cmpsb
lock
adc
mov
fnstsw
cld
mov
ja
fdivrl
xor
pop
lods
pop
mov
inc
xlat
lds
bound
inc
jns
out
ja
fmulp
mov
push
sub
pop
adc
cmpsl
lcall
popf
adc
out
scas
les
popf
xorb
mov
das
and
adc
pop
imul
sbb
push
adc
jge
inc
stos
push
pop
pop
cmpsl
sub
lret
cmc
add
addr16
faddl
adc
es
pop
les
adc
test
mov
movsl
rcr
pop
adc
push
cmp
inc
jbe
nop
inc
jno
adc
add
cmpsb
xchg
pop
adc
xchg
push
or
mov
jmp
hlt
jno
adc
push
inc
sbb
dec
stos
cwtl
adc
loopne
mov
add
cmpsl
push
mov
push
fbstp
pop
xchg
jg
sbb
mov
loopne
mov
cld
pop
sub
xor
mov
and
test
jle
xchg
or
seta
pusha
movsl
dec
popf
inc
pop
fs
dec
loopne
mov
mov
add
pop
mov
dec
inc
mov
dec
pushf
cmp
cmp
jp
jp
sbb
xor
mov
imul
jge
push
clc
pop
mov
in
mov
sahf
mov
shrl
ds
gs
dec
pop
mov
sbb
stc
insb
or
push
stos
inc
jmp
lret
in
in
outsl
fldcw
jle
movsl
call
dec
mov
pop
scas
std
adc
jae
xchg
ficompl
inc
cmp
popa
stos
and
sarl
pushf
xor
adc
test
in
sub
xchg
test
test
arpl
push
cmp
mul
sti
add
xchg
cmp
inc
mov
mov
rol
cmc
mov
sub
pusha
push
stos
mov
call
movsb
dec
mov
push
lcall
or
fadds
das
fsubrp
sub
mov
shl
pop
xor
adc
mov
jnp
ja
rclb
pop
dec
xchg
imul
rcl
out
inc
xchg
dec
inc
adc
mov
or
cmp
xchg
jmp
hlt
mov
ds
adc
xor
gs
lock
cld
mov
test
pop
jmp
mov
mov
inc
mov
outsb
mov
push
cmp
sub
push
add
into
pop
cli
stos
outsl
dec
cmp
mov
rorl
in
jmp
mov
sub
inc
adcb
sub
fwait
mov
cld
inc
adc
add
ret
outsl
int3
fimuls
data16
into
or
outsb
daa
adc
and
imul
and
pusha
mov
inc
bound
xchg
pop
imul
push
mov
jl
or
mov
nop
lret
test
xor
aad
sub
les
arpl
dec
loope
pushf
popf
lods
cmpsb
js
ljmp
in
lahf
xor
and
decl
loopne
mov
jge
dec
popf
inc
dec
add
aad
test
daa
sbb
loopne
movsb
mov
addr16
push
sub
jo
xor
and
sub
rorl
cltd
movsb
gs
inc
push
mov
das
mov
sbb
xor
push
lods
pop
dec
shrl
les
mov
pushf
loope
inc
pop
pop
aas
mov
lea
jmp
push
insl
lret
mov
aam
imul
and
xchg
sub
cltd
inc
cltd
xor
jbe
std
jmp
push
fwait
enter
xchg
adc
loop
fisubs
jmp
lcall
mov
jmp
dec
rcrl
lods
popa
imul
aad
orb
js
xchg
sub
pushf
mov
and
mov
xchg
add
jo
jnp
std
dec
mov
mov
loopne
movsb
mulps
fstl
cmp
and
mov
fwait
in
subb
fldt
cli
les
pusha
xlat
dec
jp
inc
push
adc
adc
mov
sub
enter
cmpb
adc
rcrl
pop
mov
lcall
cld
loop
incb
mov
mov
push
stos
push
inc
mov
fwait
xor
xor
sbb
cmp
shll
rorl
cmp
inc
dec
push
fldl
popl
aam
push
or
fwait
xor
lds
fdivs
inc
mov
ja
lods
syscall
loop
in
test
add
or
sub
pop
jo
aam
mov
jl
aad
lcall
or
repz
es
cmp
mov
lcall
in
jne
test
nop
in
test
xor
add
and
dec
pushf
cmp
push
mov
addr16
fsubrs
ret
aas
shll
in
in
jbe
int
das
pop
cmc
ror
imul
pop
cmp
add
arpl
addr16
add
mov
aaa
js
popa
outsl
jb
sub
pop
mov
and
pop
fdivs
push
push
jl
push
adc
clc
outsl
aas
and
test
cmp
lea
test
fnsave
pop
xchg
jl
mov
add
dec
sbb
xchg
outsb
pushf
ja
aaa
enter
push
adc
xchg
pop
loop
sub
pop
mov
mov
cmp
pop
adc
xchg
cmc
cmpsl
push
fimull
sar
pop
cmp
icebp
outsl
push
les
scas
shll
and
clc
jo
adc
scas
jns
pusha
imul
or
stos
mov
shlb
loope
out
xor
je
xor
les
lcall
pop
jns
data16
lods
lock
pop
adc
xor
subl
dec
mov
icebp
lret
mov
and
jb
das
sbb
adc
lret
or
jno
mov
xchg
xchg
add
adc
movsl
dec
sbb
cmp
or
int
fists
out
clc
jo
adc
mov
sbb
les
adc
popa
xor
cmpsb
or
aaa
jo
xlat
pop
dec
pop
das
adc
or
dec
adc
fnstcw
push
adc
adc
mov
lock
ret
cli
mov
and
push
adc
push
rorb
lret
test
mov
test
cmp
mov
loope
cmc
ljmp
cmp
jo
adc
insb
lock
adc
adc
pop
ds
imulb
mov
or
or
mov
sub
fs
daa
or
jo
adc
xor
lods
pop
mov
lock
adc
loop
roll
push
adc
ficoml
sub
fucomip
jge
cltd
fadds
jno
adc
adc
test
mov
loopne
sbb
adc
sub
push
push
mov
sahf
mulb
out
clc
lods
pop
mov
rolb
lcall
or
adc
jne
lcall
out
inc
scas
fisubrl
mov
lods
xor
pop
adc
fdivs
adc
or
adc
lods
pop
mov
xchg
dec
popf
lods
cmp
pop
fdivl
jb
pop
mov
and
les
push
adc
pop
or
pop
add
lods
mov
sti
fneni(8087
jge
mov
pop
enter
mov
xor
mov
sarl
xchg
sub
inc
dec
ljmp
and
divl
xor
sbb
dec
int3
xor
test
cs
fistps
and
ljmp
loope,pn
inc
jg
loop
xchg
fildl
mov
adc
inc
dec
mov
out
adc
jp
in
inc
aad
clc
sbb
adc
lods
mov
xor
fistps
mov
adc
cs
je
sub
push
adc
int3
xor
sar
add
scas
push
dec
mov
push
adc
xor
lds
test
stos
fbstp
cmpsb
gs
clc
insb
lock
adc
cld
jo
adc
pop
mov
cmp
jecxz
aam
push
add
dec
push
insb
lock
adc
mov
fsubr
sbb
pop
adc
aam
push
adc
or
out
repz
adc
pop
push
popa
les
adc
jbe
cmpsl
mov
push
shrl
mov
into
cltd
cmp
inc
scas
pop
mov
inc
pop
jmp
movsb
loop
sbb
jmp
adc
adc
in
int3
xchg
andb
jg
cmp
out
cld
repnz
stc
xchg
lcall
aam
rcrl
jmp
jp
mov
movsl
bound
in
xchg
push
add
adc
sub
and
adc
push
xchg
and
pushf
push
adc
ja
shrl
int3
andb
mov
daa
incl
mov
cmp
push
add
mov
lret
pop
adc
cld
pop
rclb
mov
jmp
lret
in
cmpsb
or
mov
push
pop
clc
inc
adc
test
sub
sbb
xor
pop
adc
push
fdivs
adc
fcmovu
push
es
pop
stos
call
cmp
dec
lcall
push
adc
test
clc
fwait
pusha
in
xorb
xor
push
mov
dec
sub
push
adc
sbb
ss
leave
or
mov
adc
sti
stos
add
lock
add
jl
or
fwait
mov
adc
lret
lods
lock
cmp
push
fdivrp
fmuls
inc
mov
lcall
daa
shll
mov
push
cltd
xchg
shlb
adc
addr16
xchg
les
adc
pop
mov
insl
pop
cmp
aam
add
fnstenv
imul
dec
adc
jl
xor
pop
adc
fdivs
adc
lret
jb
enter
mov
pop
into
inc
addr16
ljmp
popa
mov
pop
cmp
loopne
jp
jo
push
adc
loope
pop
xchg
or
pusha
movsl
dec
popf
xchg
push
pop
clc
mov
mov
dec
or
pop
push
ret
and
or
push
adc
and
aam
add
cmp
aad
pop
std
and
gs
dec
leave
outsb
and
mov
out
fiadds
test
adc
je
fidivs
gs
and
popf
cmp
inc
jg
loop
xchg
fadds
push
shlb
adc
dec
in
lock
adc
dec
xlat
jge
jmp
xchg
add
sub
repz
xlat
out
rcrb
inc
rol
sar
cld
sub
stos
scas
aam
inc
mov
fdivl
rcll
arpl
mov
mov
sub
mov
add
imul
frstor
mov
mov
push
cmpsl
cmp
shl
push
add
jg
inc
push
adc
inc
rcll
pop
cmc
push
rcrb
iret
xor
mulb
adcb
inc
sbb
in
mov
dec
cmp
repnz
xchg
xchg
cmp
push
mov
les
sbb
fwait
or
mov
add
xchg
xor
bound
pop
jg
in
outsb
inc
repz
adc
sbbl
cltd
ds
jg
adc
loope
dec
and
push
mov
lds
inc
mov
test
pop
jo
sub
push
adc
aad
outsb
sub
repnz
fs
and
lea
andb
popf
aad
mov
loop
std
add
aad
lods
rol
bound
daa
adc
das
je
les
lock
dec
mov
xchg
mov
inc
shll
push
iret
flds
hlt
mov
shll
aam
push
stos
xchg
outsl
setg
fildll
adc
adc
clc
addr16
rcrl
pop
and
sbb
mov
lret
add
adc
out
push
adc
xlat
push
adc
mov
call
int
aaa
push
and
test
loopne
lods
xor
mov
mov
cltd
adc
cld
insb
dec
adc
add
shr
stos
sub
push
cwtl
xchg
dec
bound
push
push
pusha
inc
int3
push
sbb
push
test
cmp
fcompl
xchg
cmp
mov
clc
dec
pop
lret
sahf
test
loop
pop
call
jns
nop
and
shlb
addr16
in
jae
std
stos
mov
fs
cmpsb
fs
andl
and
and
sub
jb
int
lods
mov
or
mov
enter
and
jnp
jge
shrl
stos
jae
dec
mov
mov
cmp
sbb
lods
mov
mov
dec
mov
mov
icebp
sbb
popa
sbb
cmpsb
cmp
in
pop
bound
push
enter
add
adc
mov
or
inc
insl
inc
into
aas
mov
inc
lret
call
push
testl
cli
data16
fists
shrb
hlt
xor
cmp
les
xchg
decb
push
inc
jno
loopne
xchg
dec
xchg
mov
push
arpl
mov
mov
mov
frstor
inc
lock
cmpsb
inc
pop
add
fnstcw
les
into
cli
mov
ret
frstor
out
les
cmpsb
mov
inc
or
pop
pop
inc
stos
mov
stos
fnsave
inc
adc
gs
arpl
mov
popf
cmp
sarl
add
in
ficoms
push
sub
popf
pop
ljmp
negl
mov
cmp
cld
xor
xchg
cmc
stos
push
lods
dec
adc
enter
andb
inc
and
and
mov
inc
test
cwtl
outsl
fsincos
gs
cmovl
jo
adc
nop
jo
adc
push
mov
mov
and
jg
jmp
pop
mov
inc
out
out
adc
mov
or
sub
xor
les
xchg
add
adc
lcall
cmp
ljmp
jle
mov
adc
and
pop
pop
add
ja
cmp
pop
js
jne
mov
ret
test
and
xor
das
in
lds
lds
pop
faddl
push
inc
mov
xchg
hlt
out
xchg
add
cmpsl
out
divb
stos
aas
or
movsb
call
dec
cwtl
xor
mov
dec
into
lcall
insb
dec
rolb
scas
mov
repnz
cs
les
pushf
push
adc
decb
mov
inc
dec
or
push
stos
add
push
jbe
pop
mov
mov
and
jl
les
scas
adc
cmp
dec
out
jb
jmp
jno
adc
out
ja
sbb
adc
jmp
gs
mov
jo
adc
pop
adc
jp
mov
stos
fistps
pusha
xor
pop
jo
adc
mov
scas
or
ret
std
jl
test
or
jl
test
push
adc
jo
adc
dec
jno
adc
addl
pop
inc
inc
inc
mov
aam
out
lret
sub
rorb
lods
in
pop
adc
or
ja
cld
jno
adc
in
fucomp
dec
fsubs
int
jp
lods
pop
cmp
rorb
les
sbb
adc
adc
aad
out
push
popa
mov
lcall
mov
cmp
cmp
lret
pushf
xor
mov
mov
xadd
fs
cmp
xor
pop
adc
dec
xchg
ds
pusha
movsb
sub
dec
and
outsl
sbb
mov
rcrb
pop
add
xor
and
gs
icebp
inc
dec
and
pop
mov
in
adc
xchg
adcb
out
int3
in
pop
movsl
xor
hlt
imul
daa
in
jmp
rolb
les
adc
or
daa
mov
mov
nop
gs
jecxz
mov
and
lret
jmp
push
sbb
pop
adc
fcmovb
daa
sub
pop
cmp
pop
and
aad
mov
and
mov
dec
push
xchg
sub
push
push
stc
cltd
repz
loope
mov
out
cmp
leave
or
stos
mov
add
int
cmp
mov
jo
shlb
sbb
stos
jp
sub
jp
sbb
gs
popa
ficoms
push
adc
sbb
mov
adc
push
xor
movsb
call
stos
dec
loope
jecxz
push
sbb
adc
das
push
xchg
pop
je
adc
mov
scas
pop
cmc
stos
jle
movsl
push
adc
mov
cltd
pop
insb
pop
cmp
sub
mov
pop
fiaddl
sub
mov
push
pop
popf
xchg
push
jns
ljmp
loopne
popf
gs
and
popf
cmp
pop
shlb
fs
push
pop
sub
gs
cld
cmpsl
loopne
testl
xchg
fstpt
sub
push
jecxz
movsl
dec
cltd
xor
arpl
lret
add
dec
addb
loope
inc
aam
push
adc
xor
loop
mov
dec
popf
dec
push
adc
cmpsl
dec
jmp
je
fidivrs
stos
ret
mov
push
adc
inc
xchg
leave
xchg
sub
or
rcl
mov
pop
dec
push
fldl
push
sahf
cmp
xor
push
adc
mov
cmp
stos
jb
mov
stos
push
add
xor
cmp
sahf
cmp
roll
xorl
xlat
stos
nop
movsl
mov
lcall
mov
dec
cltd
cmp
lods
xlat
xor
push
cmpsb
jecxz
pushf
mov
sub
dec
push
sahf
push
xchg
call
ja
sbb
adc
push
sarb
scas
sub
lods
cwtl
movsl
push
adc
popf
xchg
cwtl
sub
ds
insb
xchg
xchg
xchg
push
test
inc
pop
stc
nop
sub
xor
cmp
fnsave
cmp
ficoms
jae
adc
cs
push
cmpsb
dec
pop
push
out
mov
shlb
and
dec
xor
loopne
movsl
push
adc
test
xor
xor
dec
popa
mov
popf
cmp
mov
push
add
cs
mov
push
add
mov
sub
cmp
ss
shlb
and
aad
inc
jp
es
push
cmpsb
dec
pop
push
adc
lods
xchg
push
pop
lds
xchg
xchg
shll
push
and
orl
les
xor
adc
aad
sahf
je,pt
jle
and
cmp
jae
test
jp
cli
inc
xchg
les
xor
add
pushf
dec
popf
cmp
jmp
adc
xchg
and
jnp
lahf
and
stc
fidivrl
pushf
dec
cwtl
xor
add
push
adc
cmp
pop
push
lcall
mov
dec
push
loopne
mov
stos
push
not
aaa
test
pop
lcall
repz
jl
mov
jmp
test
xchg
das
xchg
popf
mov
aad
mov
inc
xchg
loopne
mov
push
dec
scas
shr
pop
xlat
push
movsl
push
adc
add
fisubrs
loopne
and
jnp
mov
mov
sbb
pop
jmp
sti
icebp
jl
mov
jb
adc
or
mov
ds
fs
xchg
in
je
std
stos
push
sarb
xchg
jle
jl
lcall
mov
mov
xor
clc
push
jb
dec
xor
pop
sahf
inc
adc
jb
adc
inc
push
inc
xchg
push
testb
lret
and
push
mov
pop
jo
adc
add
jb
adc
mov
push
mov
mov
mov
mov
jbe
or
adc
pusha
and
xchg
je
ret
xchg
xchg
inc
in
fsubl
jb
jnp
out
gs
dec
mov
push
lret
and
mov
pop
push
test
insb
mov
das
cmp
and
mov
push
cltd
fs
hlt
and
push
adc
in
and
std
cmp
cmp
add
or
adc
lcall
movsb
hlt
jge
adc
daa
mov
in
jmp
add
xor
movsl
push
adc
sub
cmpsb
or
out
pop
mov
das
pop
xor
add
sub
out
mov
shlb
int3
fisttpll
fiaddl
sub
mov
je
lods
cmp
aas
fwait
add
or
adc
mov
movsb
mov
shll
mov
gs
mov
xchg
gs
xchg
jmp
xchg
sbbb
adc
dec
cltd
and
inc
xchg
cmp
mov
mov
in
mov
scas
push
test
es
out
into
push
cmpsl
dec
jmp
mov
popf
and
inc
push
shrl
gs
xchg
lds
cmp
cltd
mov
push
icebp
ljmp
mov
dec
pop
cmp
push
js
dec
popf
xchg
je
sbb
adc
adc
mov
push
es
js
dec
cltd
lahf
leave
pop
in
push
adc
popf
xchg
fwait
xchg
in
and
jmp
mov
jae
adc
gs
lods
push
cmpsl
dec
mov
dec
popf
mov
fwait
sbb
jb
adc
push
jecxz
mov
mov
mov
je,pt
dec
sarl
push
jg
xor
mov
dec
dec
cltd
xor
sbb
aam
cmpsl
data16
mov
push
cmp
sub
fisubrs
fisubrs
mov
dec
imul
dec
dec
popf
cmp
popf
mov
jns
ljmp
cmp
shll
pop
movsb
or
int
xchg
xor
dec
popf
dec
addb
lea
test
pushf
xchg
mov
movsb
push
adc
fadd
filds
lahf
cmp
xchg
sub
and
push
fdivrs
sti
adc
inc
pop
lds
scas
xchg
dec
pop
cwtl
cmp
in
ja
fmulp
cmp
ljmp
sbb
pop
mov
sub
loope
jo
ljmp
adc
movsb
push
adc
bound
mov
dec
xor
stos
jle
movsb
push
adc
xchg
js
movsb
push
adc
cmp
pop
push
movsb
movsb
push
adc
fldenv
xchg
pop
addr16
out
dec
hlt
jge
adc
movsl
dec
seto
pop
sarl
jne
xor
aam
scas
cmp
cli
mov
movsl
xlat
cmc
jmp
cs
movsb
dec
aam
jae
shlb
xchg
jecxz
push
dec
lahf
jl
arpl
mov
and
out
inc
andb
cmp
out
les
pop
stos
lret
jg
adc
pushf
and
xor
or
add
je
push
adc
mov
jp
push
lds
insb
movsb
push
adc
pop
push
jmp
movsb
push
adc
jle
ucomiss
cmpsl
mov
movsb
push
adc
sahf
mov
or
shlb
outsl
push
movsb
push
adc
sar
mov
adc
mov
icebp
push
jl
mov
push
mov
cmpsb
sahf
cmp
push
adc
outsl
out
inc
adc
mov
jb
adc
shll
daa
cmpsl
fistl
push
dec
xor
mov
call
stos
xlat
xor
lcall
scas
inc
xchg
and
movsl
push
lahf
or
jg
scas
xchg
push
cld
rorb
sub
push
dec
test
pop
sub
add
fwait
scas
pop
shll
push
adc
inc
mov
popf
mov
sbb
lock
pop
adc
cmp
stos
jnp
sub
inc
mov
clc
fiadds
xchg
add
xor
adc
cli
pop
adc
xchg
adc
inc
mov
adc
sbb
push
pop
scas
add
es
mov
unpcklps
shlb
sub
adc
inc
pop
inc
inc
rcrb
data16
arpl
dec
add
cmpsb
fbld
jo
adc
repnz
ret
rcrb
ret
mov
inc
daa
in
cmpsl
loope
lods
mov
cs
pop
inc
inc
rcrb
jae
jo
adc
outsl
roll
fstpl
pusha
les
stc
ljmp
mov
out
dec
mov
mov
cmp
mov
das
and
cltd
xor
lret
pop
cmpsl
dec
mov
jmp
dec
or
pop
inc
inc
push
pop
lods
or
xor
sub
dec
xlat
imul
jo
adc
orl
inc
cltd
xor
mov
dec
xor
push
adc
cmp
orl
fmull
xchg
xor
imul
cmpsl
movsb
and
push
adc
xor
or
aas
scas
fldt
in
cltd
xor
pop
outsl
test
pushf
sahf
push
adc
stos
dec
popf
add
or
and
or
push
inc
cmpsb
dec
popf
xchg
fadds
lods
sahf
push
adc
xchg
mov
cmc
pushf
xchg
in
pop
test
jo
adc
push
pop
int
xchg
shlb
insl
inc
test
dec
push
sub
cltd
fcoms
or
int
pop
jg
lods
sahf
push
adc
xchg
bnd
ljmp
dec
cltd
popf
pop
mov
and
xchg
jecxz
sahf
push
adc
mov
stos
push
push
lods
pop
mov
fsubs
push
adc
cwtl
les
push
stos
fbld
adc
cmp
ljmp
mov
push
adc
fisubs
cmpsl
dec
jmp
aaa
in
cmpsl
dec
mov
add
cmc
inc
jp
fbstp
scas
pop
xor
and
inc
addr16
xchg
loopne
sahf
push
adc
mov
and
gs
jo
adc
add
pop
pushf
cmp
rcrb
loope
lods
fnsave
xchg
out
push
add
sahf
push
adc
lock
in
or
enter
movsl
add
xchg
add
aaa
lea
ja
jl
pop
sahf
cwtl
mov
movsb
orb
scas
cli
shlb
mov
stc
rcrb
inc
fwait
cmp
jbe
out
and
push
adc
jg
fcompl
fnstcw
xorb
in
add
pop
addl
jns
sbb
jo
adc
out
rcrb
pop
test
outsl
imulb
out
add
cmpsb
sub
push
adc
jmp
arpl
xchg
out
xchg
jle
loope
jo
adc
neg
mov
stos
pop
add
cmc
pusha
xor
pop
adc
push
adc
push
push
jb
xlat
add
pop
jp
or
pop
adc
push
adc
pop
cmp
adc
push
adc
inc
cltd
jmp
insb
fsubrp
insb
push
and
mov
fldcw
xor
and
cmp
pushf
cmpsl
inc
xchg
and
xchg
jmp
jo
push
adc
mov
fdivl
push
ljmp
dec
adc
mov
push
or
push
adc
pushf
jmp
jb
ds
sahf
push
adc
jne
mov
leave
flds
jo
adc
jle
inc
mov
sarl
insb
pop
in
cmp
adc
lcall
in
mov
push
adc
adc
lds
push
iret
sub
arpl
inc
mov
push
dec
and
sbb
inc
test
cmpsl
rorb
push
cmpsb
jecxz
int3
leave
bound
xchg
cmp
cmp
xor
jo
adc
pop
mov
inc
pop
rcll
add
mov
jne
cmp
and
adc
or
in
push
adc
lret
push
in
or
cmp
push
adc
and
cmp
mov
cmpsb
or
int3
lcall
popf
and
repnz
add
out
fisubrs
cmp
adc
dec
cltd
and
and
jno
cmp
jle
adc
mov
sub
add
fcompl
xor
cmp
add
dec
or
xor
cmp
jno
lock
aas
fdivs
adc
mov
gs
sub
decb
or
lock
push
adc
inc
enter
sbb
jnp
and
or
xor
jb
in
push
push
lods
pop
xor
adc
cwtl
mov
sub
xor
pop
adc
pop
and
and
xor
pop
adc
imul
push
rol
shll
pop
adc
xchg
cld
mov
or
cmp
dec
xor
xor
incb
test
test
popf
mov
dec
popf
lods
mov
invd
adc
insb
pusha
pop
sub
cs
fwait
jb
add
lods
out
jne
rorl
loope
jp
adc
roll
scas
fstps
push
or
jecxz
fs
decl
out
jo
in
cmpsl
cmp
dec
jnp
fidivrs
adc
jecxz
imul
pop
pushf
cmp
jns
pusha
les
mov
push
stos
add
dec
xor
xchg
sub
or
xor
or
ljmp
jo
adc
cmpsb
ret
push
lods
shrl
ss
movsl
lds
xchg
cmp
mov
cmpsb
fnstenv
movsb
push
cmpsl
cmp
xor
or
push
pusha
sub
movsb
les
cmp
push
int3
add
fsubrs
xchg
xor
cmp
lret
inc
sahf
cmp
cwtl
stos
orl
fucomi
xchg
clc
jo
in
movsl
out
cmp
aad
outsl
int3
xchg
pop
pop
lret
cmp
add
dec
or
aam
jbe
xchg
stos
rcll
jmp
imul
shrl
jo
adc
mov
mov
lds
std
pop
subl
dec
mov
into
mov
nop
jo
adc
adc
cmp
sarl
imulb
add
push
sahf
out
xchg
jle
and
hlt
sbb
xor
cmp
dec
fwait
rorl
pusha
mov
bound
jb
ss
xchg
push
lds
scas
call
push
stc
mov
jmp
jb
push
and
pusha
push
sub
gs
sub
pop
mov
xor
fldenv
enter
nop
and
pop
mov
jp
out
cld
sub
cmp
pop
cwtl
and
ss
xor
jnp
subl
xchg
leave
es
jb
mov
rcrb
or
out
lcall
testl
lds
adc
stos
mov
push
movl
flds
in
cmp
jno
cmp
stos
hlt
dec
mov
jmp
add
mov
loope
sbb
cmp
subb
push
nop
add
cmp
cltd
xchg
cli
insb
in
or
cmp
ffree
repz
xchg
and
flds
mov
imul
sbb
and
sbb
test
movsb
push
js
leave
mov
rorl
mov
fwait
daa
mov
mov
cmp
leave
adc
call
bound
dec
movsl
cs
xor
pop
adc
adc
mov
and
das
pushf
mov
cmpsl
test
sbb
or
es
lcall
add
mov
inc
in
adc
xlat
push
rorl
adc
in
push
daa
push
jecxz
inc
ficoms
xchg
xchg
pop
dec
cmp
cs
mov
jecxz
adc
cmc
pop
ljmp
daa
test
pop
and
pop
xlat
mov
xor
mov
test
inc
xchg
fimuls
loope
lds
add
mov
test
dec
jmp
xchg
cld
dec
cltd
inc
xlat
cmp
mov
into
push
movsl
push
out
stos
push
test
ja
mov
sbb
adc
cmpsl
cld
sbb
adc
pusha
jo
adc
lcall
out
jp
adc
inc
jp
ljmp
or
imul
outsl
jmp
cmpsl
xchg
adc
push
ret
add
cmp
sub
sahf
out
mov
shl
dec
addb
shrl
jp
gs
xor
xor
loope
push
scas
ds
loop
into
aas
push
adc
loop
fwait
adc
cmp
fldcw
push
sub
pop
add
ja
fdivp
dec
or
jo
adc
inc
dec
xor
aad
cmp
and
inc
test
std
adc
push
test
pop
lcall
popf
xchg
fcompl
mov
out
jb
or
inc
fldcw
andl
loop
dec
lds
les
lahf
cmp
inc
stos
mov
xlat
stos
and
pop
push
in
cmp
lods
pop
js
sub
call
cmp
jbe
jne
add
stos
push
fsubrl
jno
jmp
es
sub
adc
add
adcb
fwait
mov
dec
xchg
xor
aad
push
aaa
inc
mov
adc
or
push
pop
mov
lret
adc
out
cmp
fwait
pop
nop
jo
adc
cltd
aad
jbe
dec
scas
sub
movsl
ja
jg
in
sbb
sarb
jo
dec
pop
lret
mov
xchg
in
dec
lds
inc
dec
mov
aad
xor
push
lods
in
add
sarl
and
dec
lcall
cs
sbb
mov
cli
pop
adc
mov
inc
push
rcrl
xor
stc
push
add
add
push
adc
dec
mov
cmpsl
aad
jae
inc
or
loope
arpl
jns
icebp
dec
clc
jo
adc
sub
add
or
jmp
or
shl
pop
cmpsl
add
test
aas
js
push
adc
aaa
mov
inc
or
sbb
adc
push
sub
xor
lock
outsl
mov
jmp
inc
icebp
add
dec
js
push
adc
sbbb
subb
test
stc
xchg
loop
and
divl
jl
push
aad
xchg
sahf
popl
adc
or
or
inc
lds
adc
test
iret
cmc
xchg
outsl
mov
stos
add
sbb
mov
push
adc
push
out
push
je
aad
lds
in
hlt
stos
push
loope
mov
mov
push
mov
andnps
mov
fdivs
out
lock
adc
into
testl
lock
adc
ljmp
ljmp
cld
xor
inc
pop
out
cmp
or
push
adc
insb
pop
or
cli
inc
sbb
fcmovu
inc
cmp
leave
fildl
xor
scas
add
inc
ja
nop
js
push
adc
insb
pop
or
xor
clc
jo
adc
insb
sbb
pop
mov
gs
or
mov
jno
adc
out
sbbb
adc
dec
mov
cwtl
push
or
mov
jo
adc
xchg
xchg
push
or
mov
cmp
push
or
sub
adc
pop
or
cltd
fadds
jno
adc
cwtl
lds
je
insb
pop
or
cmp
adc
pop
or
aad
and
sbb
inc
gs
push
mov
xchg
les
pusha
rcrl
adc
fistps
test
divl
gs
test
mov
pushf
add
pop
andb
rorl
adc
cli
rolb
sbb
xchg
pop
push
jb
mov
sbb
sub
outsb
lods
rcrb
or
insl
add
aad
imul
adc
pop
movsb
or
out
subl
fidivrs
add
dec
cld
cmp
jb
adc
cmp
mov
add
mov
lcall
push
popf
cmp
out
std
sbb
add
out
push
stos
aad
dec
mov
dec
js
imul
loop
ja
mov
jns
ret
fldl
or
xchg
mov
cmp
shrl
outsl
pop
je
push
es
adc
jnp
xchg
sbb
loopne
pop
mov
into
imul
dec
popa
test
jnp
xchg
sbb
movsb
loopne
pop
mov
into
imul
dec
popa
test
jnp
xchg
sbb
loopne
push
mov
into
imul
dec
popa
test
jnp
xchg
sbb
movsl
loope
push
mov
iret
push
pop
dec
pusha
aaa
mov
scas
cwtl
mov
fnstsw
pop
cmpsl
jecxz
pop
inc
and
addr16
and
ljmp
popf
loopne
jno
rcr
cs
les
adc
mov
cwtl
call
cmpsb
mov
push
cmpsl
or
add
jnp
cmp
aam
dec
scas
lret
adc
sub
fwait
jne
ds
cmpsb
push
adc
sbbl
fstps
ljmp
sub
fstl
sti
int3
pop
in
sahf
scas
outsl
andb
rcll
stos
push
adc
fstpl
scas
push
adc
in
or
aad
ficomps
xchg
faddl
or
add
sahf
push
mov
mov
bound
adc
mov
scas
push
adc
inc
movsl
lcall
mov
push
adc
out
jmp
test
and
add
dec
mov
sbb
popa
mov
sbb
pop
lds
sbb
xchg
mov
popa
sbb
dec
xor
stos
push
adc
fstpl
scas
push
adc
out
xchg
mov
push
rclb
jmp
mov
adc
lods
push
lods
outsl
fsts
adc
sbb
callw
push
adc
adc
mov
pop
xchg
sbb
fdivrs
sbb
loop
int3
xchg
in
cs
stos
push
adc
sbb
arpl
push
mov
push
adc
loope
sub
push
adc
je
dec
mov
outsl
sbb
es
adc
mov
fidivl
sbb
and
xchg
mov
mov
adc
and
pop
movsl
mov
outsl
push
sbb
lret
pop
pop
sub
scas
push
adc
sbb
sbb
test
push
adc
xor
cmp
sbbl
adc
push
lret
mov
arpl
movsb
mov
and
sbb
sahf
mov
mov
scas
push
adc
xorl
sbb
mov
push
adc
adc
movsb
pop
jle
push
mov
jnp
sub
sbb
jge
pop
xchg
nop
jo
cmpl
je
or
loopne
clc
mov
jmp
pop
scas
in
orl
dec
adc
add
test
ja
xor
add
addr16
xor
lods
movsl
dec
mov
cwtl
sbb
add
roll
push
inc
stos
and
fsubl
cmp
sbb
jmp
mov
push
stos
add
inc
ffreep
loopne
mov
sub
mov
push
xor
and
stos
xchg
lods
push
lods
pop
cmp
cmp
pop
pop
mov
inc
mov
sub
xor
mov
test
imul
jno
sbb
insl
xor
jp
sbb
data16
sar
outsl
pop
and
pushf
pop
inc
in
mov
call
lds
es
ja
movsb
enter
mov
fdivl
data16
jae
rclb
add
sbb
and
add
addr16
jg
push
pop
push
adc
sub
and
push
push
pop
les
add
addr16
jg
push
pop
jb
adc
sub
and
push
push
pop
les
pop
arpl
push
stos
push
lods
arpl
pop
gs
roll
xor
bound
jno
push
int3
mov
pushf
outsl
test
mov
mov
sbb
mov
mov
cwtl
pop
ret
jnp
bound
in
popa
stos
mov
lahf
inc
push
sub
pop
cmp
pushf
rorl
popf
in
dec
jle
arpl
inc
jge
cwtl
movsb
xchg
sub
dec
push
cmp
mov
xchg
js
enter
dec
js
pop
or
jb
lret
mov
out
fwait
pop
inc
mov
pop
call
je
mov
out
push
xor
and
fsub
fwait
pop
mov
dec
cmpsb
push
jo
push
loop
adc
mov
sbb
pusha
test
int3
cmp
test
add
mov
pop
jne
shll
dec
ljmp
mov
xchg
and
push
jge
and
mov
int
push
mov
aad
mov
sbb
adc
or
xor
xchg
stos
push
jno
leave
inc
and
loope
inc
inc
fisubl
mov
jmp
test
arpl
rorl
xchg
call
into
sub
inc
shll
popl
sbb
xor
and
mov
pop
cmp
test
in
add
popa
divb
push
pop
push
add
fiaddl
sub
add
mov
xchg
xor
dec
inc
inc
jne
je
bound
mov
test
and
movsl
in
test
cltd
rcrl
push
adc
sub
insl
in
jl
cli
jl
fwait
test
and
mov
dec
rolb
jns
sbb
inc
movsl
rorb
movsl
lahf
add
call
mov
lods
pop
pop
sub
out
stos
lods
pop
xor
xlat
ljmp
das
sub
outsl
jb
push
sbb
loop
cmp
lea
fs
out
andb
icebp
jecxz
mov
and
push
sahf
sub
rcll
push
cmpsb
xor
xor
gs
loop
dec
pushl
and
ljmp
ja
and
lret
out
adc
mov
adc
lret
rcr
arpl
dec
popf
dec
into
jl
test
stos
push
ljmp
maxps
xor
data16
adc
nop
ret
push
out
inc
sub
lret
lret
pushfw
insb
xor
push
daa
pop
andl
aaa
pop
pop
sti
jae
xor
bound
je
add
adcl
mov
dec
cltd
inc
pushf
or
fcomps
inc
dec
shl
inc
out
pop
cmp
cs
daa
and
and
ss
cmp
xchg
fildl
xchg
andb
push
inc
lret
ret
pop
sahf
sub
outsl
inc
inc
orl
scas
mov
je
pop
cwtl
out
cmp
dec
fwait
jge
xchg
xor
pop
cmpsl
and
clc
bound
adc
aad
mov
push
add
mov
push
dec
inc
stos
adc
and
js
std
mov
dec
pop
and
divl
dec
movsl
mov
sub
lock
pop
jmp
pusha
test
push
and
sub
ficomps
es
lods
push
lods
pop
cmp
mov
inc
ss
popf
cmp
push
inc
arpl
iret
or
test
push
sub
xor
ret
sub
push
cmpsl
push
loope
xchg
in
fwait
pop
outsb
push
ljmp
dec
mov
or
jae
pop
loop
cmp
xchg
cwtl
dec
fisubrs
inc
lret
xorl
adc
pop
ret
sub
sbb
sub
in
popf
jp
xlat
jmp
leave
xchg
fidivs
mov
in
xchg
inc
inc
pop
and
mov
lds
out
cs
stc
das
mov
push
inc
inc
mov
int3
imul
jbe
rcl
idivb
inc
testl
sub
ret
aaa
dec
mov
inc
xlat
outsb
jecxz
xor
popa
cmc
dec
jae
sbb
jle
lods
subb
push
lods
fildl
mov
std
stos
pop
aas
push
dec
mov
int
aad
clc
add
jecxz
adc
out
sbb
inc
outsl
scas
mov
scas
mov
or
push
adc
movsb
enter
push
adc
les
cli
aam
push
push
mov
adc
rep
and
add
imul
lcall
xor
xchg
es
and
push
mov
std
or
mov
arpl
test
stc
popf
mov
xor
add
cmpsl
out
roll
lcall
push
or
aad
sahf
cmp
pop
test
rcr
lret
mov
shlb
xchg
insl
pop
fs
imul
and
mov
or
js
add
sub
pop
or
fsubrs
pushf
loopne
pop
popa
jg
sbb
xchg
sahf
sub
cltd
dec
push
std
jle
inc
mov
jae
aas
xor
mov
jecxz
push
push
mov
jb
mov
xorb
adc
xchg
test
out
fiadds
jno
stos
sbb
xorl
repz
jns
orl
mov
ror
adcb
lods
adc
aad
xchg
das
push
or
sahf
push
and
insb
sbb
out
imul
lcall
dec
nop
sub
sub
adc
scas
mov
sbb
into
roll
sbbl
shl
push
into
pop
fisubrs
insb
ror
inc
fnstsw
insl
push
dec
inc
stos
adc
and
js
std
mov
dec
pop
and
divl
dec
incb
mov
pop
test
xor
stos
push
push
pop
mov
sub
pop
ret
xchg
fildl
leave
icebp
add
mov
fcomip
jge
in
mov
mov
lods
pop
mov
mov
jl
test
add
jno
pop
sub
data16
mulb
pop
mov
inc
jae
pop
adc
pop
jno
shrl
inc
jns
mov
pop
subl
and
in
jnp
cs
lds
movsl
push
icebp
add
mov
test
pop
sub
daa
pop
xlat
inc
mov
out
mov
dec
lds
dec
shl
push
dec
int3
xor
leave
ret
dec
jae
inc
ljmp
mov
mov
adc
jle
shl
ds
out
push
sub
dec
adc
shll
inc
aam
inc
adc
xchg
mov
fdivs
pop
dec
xlat
sbb
push
fidivl
mov
xor
mov
jmp
dec
mov
pop
les
and
imul
pop
lds
jae
pop
dec
cmp
mov
sbb
ret
and
cs
mov
lds
aaa
lds
adcl
pop
mov
jae
and
and
lahf
dec
lds
cwtl
xlat
jmp
add
mov
sub
cmp
push
mov
cmpsl
lds
sbb
cmpsl
aaa
cli
rorb
add
push
adc
int
mov
mov
mov
mov
lret
aas
rclb
mov
inc
push
jb
lret
jmp
loop
adc
inc
or
add
mov
adc
sub
movsl
data16
jae
fnstcw
cltd
cmp
nop
mov
test
rcr
lret
jmp
xor
add
arpl
adcb
sub
cmp
pop
subb
and
sub
fucom
imul
popf
ja
or
dec
movsb
sbb
popf
imul
insb
int3
aam
add
fcoms
jge
in
push
shr
xlat
int3
and
mov
jecxz
sub
cs
xchg
stc
xor
xchg
cmp
and
inc
xchg
ss
je
outsb
adc
cmovbe
pop
push
stc
sgdtl
sub
aas
push
int
fwait
movl
lea
cmp
inc
jne
jecxz
xchg
jl
into
push
add
imul
push
hlt
xor
and
stos
pop
decb
cmp
mov
lods
jo
xchg
mov
mov
movb
bound
xchg
inc
leave
pop
in
xchg
movsl
add
ss
mov
adc
xor
std
test
mov
pusha
mov
push
sbb
testb
ds
and
dec
jge
popa
xorb
sub
fdivr
ds
nop
mov
dec
xchg
ss
inc
stos
repz
in
movsl
bound
add
mov
and
mov
dec
mov
aaa
mov
mov
mov
xchg
adc
sbb
stos
mov
adc
xor
jl
dec
mov
mov
mov
push
cli
fcoml
inc
jbe
cmp
jno
jle
add
rcl
inc
jbe
push
xchg
mov
xchg
arpl
xchg
add
enter
addr16
in
adc
lea
les
les
fildll
rcll
fists
push
cld
sub
push
daa
into
mov
stc
ljmp
xlat
jb
pop
mov
imul
loopne
popf
cmp
popf
rcr
and
sbb
cmp
and
aam
jg
adc
pop
data16
outsb
xchg
add
enter
lret
enter
outsl
push
test
cmpsb
cmp
sbb
loope
cmp
add
sar
dec
dec
or
sbbl
in
and
scas
mov
cmc
push
pop
add
sar
sub
lret
inc
enter
out
out
decb
mov
stos
dec
sbb
or
dec
movb
loope
mov
xor
cmp
lds
mov
cmp
push
and
das
or
out
sahf
filds
pop
cwtl
mov
sub
sub
mov
lds
insl
jae
loop
popa
shl
push
sti
fsubp
mov
push
and
subb
sbb
dec
dec
mov
aam
js
call
fdivrs
rcrl
and
jae
add
outsb
mov
fwait
insb
dec
movb
loope
mov
xor
jo
ficomps
add
adc
fldl
cmp
pop
and
mov
xchg
mov
cmpsl
adc
push
cs
xchg
fincstp
sub
push
aad
push
mov
sub
or
std
xor
fisubs
inc
test
push
adc
sub
iret
leave
push
jmp
test
aam
pop
jge
imul
pushf
lods
movsb
loopne
test
jmp
stos
xor
shl
mov
call
sbb
push
add
es
or
gs
sar
outsb
xchg
sbbl
sbb
outsb
decb
mov
dec
mov
mov
je
je
push
pop
stc
mov
bound
dec
je
imul
mov
aam
ss
lds
inc
popf
data16
and
inc
fnstsw
ljmp
std
xchg
dec
inc
sub
lods
mov
and
std
popf
cmpsb
jmp
sub
adc
sbb
stos
mov
ds
mov
or
pop
les
movsb
flds
pushf
sub
pop
ljmp
cwtl
cmp
push
push
movsb
add
push
into
ljmp
pop
je
push
in
movsb
cld
in
shl
lods
xor
daa
jno
adc
mov
or
or
inc
stc
mov
lock
aam
jns
and
gs
ficomps
lods
push
xchg
jo
pop
and
ljmp
das
mov
cmp
arpl
orb
mov
adc
fidivl
pusha
cmp
pop
inc
lods
add
imul
imul
mov
sub
push
adc
pop
orps
cmp
and
testl
dec
xchg
movsb
fwait
push
mov
add
jns
int3
and
fsincos
out
mov
popf
loopne
test
push
adc
jp
loopne
enter
icebp
xor
jl
mov
popf
adc
lods
loopne
push
adc
push
aaa
rcll
aaa
imul
xchg
or
repz
mov
sub
pusha
mov
sbb
xor
xchg
daa
sbb
mov
or
into
mov
jle
mov
xchg
cmp
mov
sti
std
or
mov
fcomps
mov
xchg
sbb
push
daa
mov
stos
mov
and
mov
xchg
adc
mov
sbb
sbb
movsl
leave
mov
out
jl
mov
pushf
push
popa
int
je
or
sbbl
imul
ficoms
addr16
dec
pop
add
inc
mov
cs
adc
adc
mov
mov
imul
mov
adc
nop
sub
add
jno
sbb
out
xor
adc
mov
lds
or
pop
nop
xchg
fstps
lcall
arpl
adcl
xor
xor
push
lret
out
cs
sub
mov
mov
fldcw
mov
out
and
mov
test
test
push
cmova
cltd
mov
cmc
add
sbb
loope
pop
fistpl
mov
and
adc
mov
push
sub
xor
mov
xor
sti
es
daa
pop
scas
push
or
lods
or
in
je
or
jne
inc
dec
cltd
outsb
lock
ret
imull
pop
mov
inc
xorb
cltd
jmp
lods
cltd
ja
scas
push
add
je
lods
in
adcb
dec
sub
xor
inc
push
dec
xor
int3
jb
dec
negb
cs
pop
cmp
cmp
push
and
inc
stos
add
or
add
mov
mov
scas
fiaddl
int3
sbb
jb
cmp
cmp
call
xchg
cmpsl
fcomip
jno
ror
fcompl
out
incb
sub
xlat
dec
les
pop
add
sub
jae
xchg
push
idivb
pop
inc
fistpl
dec
ficomps
jg
js
adc
outsl
or
xchg
test
loop
lcall
out
mov
sub
mov
and
sub
push
lret
xchg
xor
mov
push
insb
cmp
and
push
xor
shl
sub
out
scas
daa
sbb
add
sbb
lahf
imul
hlt
xor
fcmovne
outsl
int3
out
push
lods
shll
out
push
movsl
mov
inc
jns
and
dec
out
es
stos
loop
cmp
sub
mov
shlb
fmuls
mov
popf
popa
dec
sub
addr16
push
dec
and
adc
xchg
mov
mov
cltd
insb
dec
frstor
lret
hlt
jge
int3
out
push
loopne
dec
rcrl
stos
cmp
cwtl
pop
fs
mov
or
into
test
cmp
inc
add
test
sub
sbb
in
pop
mull
adc
lea
test
xchg
jb
cmp
pushf
imul
sete
cmp
mov
inc
lahf
jo
es
lret
loopne
fs
inc
inc
lds
pushf
flds
adc
pushf
dec
mov
addb
and
shlb
push
stos
test
outsl
push
ja
flds
adc
xchg
clc
sbb
lock
data16
push
pop
pusha
fsubr
xor
pop
cwtl
lahf
push
out
shl
xlat
mov
lcall
test
div
jg
pop
movsl
sub
mov
orl
xor
xchg
dec
push
add
cmc
cmp
mov
cs
xor
mov
leave
cmp
push
push
dec
mov
xor
test
push
out
sahf
inc
mov
mov
pop
jo
flds
adc
orl
cmp
adc
ja
xor
cmp
push
dec
pop
das
push
dec
dec
adc
sbb
sbbb
pop
lret
stos
push
insb
jae
and
jecxz
and
cmp
cmp
push
cwtl
xlat
pop
jecxz
shl
xchg
in
adc
jmp
mov
gs
pop
sahf
and
xor
fwait
loop
insl
add
insl
mov
out
mov
ss
pop
cmp
sub
cmp
das
ja
xor
aad
pop
das
popf
mov
mov
push
lahf
mov
lds
pop
cmp
or
sbb
sub
adc
mov
daa
cmp
dec
jb
push
out
push
xchg
mov
aam
mov
cmp
dec
adc
arpl
cmpsl
dec
jmp
dec
or
add
mov
or
mov
pop
push
mov
xor
int3
sahf
les
or
lods
cmpsb
lcall
cmpsl
hlt
lcall
adc
jle
xor
push
sub
inc
xor
sbb
shr
mov
std
add
mov
popf
cmp
inc
sub
inc
push
pushf
insb
inc
cwtl
lea
pop
xor
lods
pop
inc
and
bound
pop
dec
in
test
jno
adc
lods
cmpsb
mov
scas
sub
popf
mov
jmp
shlb
lret
addl
sbb
in
xchg
sbb
sub
mov
push
pusha
mov
inc
js
and
or
sub
mov
sahf
sbb
mov
mov
lret
ds
add
ret
pushf
lea
adc
mov
mov
andb
dec
xchg
push
fbstp
cmpsl
les
add
add
and
sbb
addr16
jmp
or
pop
mov
and
push
pop
adc
out
imul
and
cmpsl
adc
sbb
dec
sbbl
out
mov
xor
fcompl
js
loop
sub
clc
leave
test
cmc
sahf
jg
and
mov
pop
cmp
push
pop
hlt
lcall
push
iret
mov
out
lea
adc
scas
sub
dec
xchg
mov
mov
les
fmul
dec
fdiv
sub
xchg
dec
pop
cmp
sub
sahf
xor
cmpsb
mov
push
addr16
adc
push
adc
inc
mov
andl
add
int
sbb
cmpsb
cwtl
mov
lret
pushf
xor
mov
add
ret
push
fsts
shrl
pop
imul
std
movsb
ds
es
mov
cltd
rep
mov
hlt
mov
jne
mov
sbb
int
push
mov
lret
std
and
gs
popw
pop
push
repnz
pushf
pop
inc
add
jle
jg
jns
gs
jnp
push
cmp
flds
lods
sti
xor
xor
jge
cmp
mov
mov
out
inc
cmpl
pop
mulb
dec
lahf
jb
pop
stc
mov
xchg
addr16
sbbl
les
sub
das
cwtl
cld
mov
scas
outsl
es
dec
mov
lods
jmp
orl
flds
lock
xchg
aam
cmc
sbb
iret
outsl
popa
xchg
pushl
iret
push
adc
dec
pop
jl
inc
movsb
jle
add
or
add
rolb
adc
jb
mov
push
cmp
push
adc
adcl
pop
pop
out
addl
push
stc
sbb
stos
orl
mov
jle
pop
sarl
repnz
roll
das
lods
sub
xor
xor
inc
mov
jbe
push
out
addr16
sub
movsb
xor
mov
mov
in
lods
aas
and
add
adc
fucomp
inc
or
int
loopne
mov
push
stos
fucomp
popa
cmpsb
inc
ffreep
fs
cld
pop
mov
dec
into
ljmp
push
aad
shl
outsl
mov
inc
in
outsb
xor
mov
cmp
loop
sub
clc
lret
or
push
pop
negb
xchg
dec
in
int
lds
popf
cmp
insl
fldl
mov
and
fucomp
mov
js
pop
arpl
push
aam
jbe
inc
ja
push
sahf
push
leave
xchg
lret
push
lods
pop
mov
mov
hlt
adc
fwait
xor
pop
cmp
add
mov
cs
inc
push
das
mov
out
ret
lods
shl
ss
out
dec
xor
xchg
addr16
in
push
mov
xor
iret
push
adc
int
push
scas
and
pop
sub
adcl
adc
in
add
push
loope
adcl
jo
cmc
mov
fadds
adc
shll
es
mov
mov
dec
iret
pop
inc
cmpsl
testl
add
xor
daa
jnp
mov
sub
push
adc
out
push
inc
pop
dec
and
or
push
imul
cwtl
lods
jge
push
lods
aam
add
sub
pusha
lds
xor
test
jg
fsubr
ds
xor
imul
xor
sbb
shl
add
inc
push
stos
pop
mov
stos
cli
xor
mov
sub
pop
sub
xor
cmp
or
sbb
sub
adc
mov
daa
cmp
ljmp
testl
push
bound
mov
das
ja
inc
mul
cmp
clc
insl
jb
cltd
insb
mov
sub
sub
jo
fstps
pop
dec
das
cmp
fcos
mov
enter
mov
and
and
shl
push
push
jno
xchg
mov
adc
push
inc
cmpsl
testl
pop
test
adc
or
xchg
daa
mov
push
xor
ret
cmpsb
sbb
insb
jae
in
outsl
mov
fucom
movsl
lods
orb
sbb
pusha
pop
out
pop
mov
cmp
in
jb
out
fdivrp
sbb
mov
push
stos
push
add
and
shrb
lahf
pop
data16
shl
dec
mov
jg
and
dec
scas
jecxz
jecxz
dec
push
xor
mov
inc
shl
in
popf
in
inc
into
jl
push
inc
jae
nop
jp
ss
xchg
int3
xor
xchg
pusha
repz
sbb
out
test
incb
fcomps
lods
mov
stos
sti
push
jno
outsb
sbb
mov
xor
mov
or
int
dec
stc
xlat
cmp
je
rorb
sub
lds
test
test
lods
add
popa
stc
negl
fwait
cwtl
and
add
lods
insl
dec
pop
jl
lahf
push
in
movsb
cmp
sub
mov
dec
lock
fldcw
push
xchg
imul
inc
inc
pop
pop
push
and
inc
xchg
jge,pt
mov
push
adc
adc
rolb
adc
or
dec
mov
cmp
cmpl
mov
and
push
cwtl
faddl
jp
sbb
lds
mov
sbb
ret
out
inc
xchg
cmp
add
inc
mov
adc
push
adc
mov
push
or
into
cs
sub
inc
in
gs
or
sarl
cmp
pop
rep
push
insb
adc
cli
mov
nop
test
sbb
ret
popf
sub
xor
push
jbe
cmp
sub
push
adc
fdivl
loop
push
add
inc
test
or
lcall
jmp
mov
pop
int
int
sahf
lods
and
adc
out
test
ror
push
sub
cmp
int3
add
leave
sti
ds
jae
jecxz
and
mov
and
add
shl
sahf
dec
aad
enter
ljmp
pusha
xchg
daa
push
cmc
jmp
fcmovne
sahf
les
or
lods
cmpsb
lcall
adc
movsl
int
into
rcrl
ret
ror
dec
pop
or
add
cs
sahf
xor
sub
mov
xor
outsl
cs
push
cmp
mov
push
es
push
out
pop
push
pop
aaa
sbb
xor
jae
out
orl
sahf
insb
adc
push
and
in
xor
xchg
pop
mov
dec
into
out
and
mov
mov
xchg
gs
mov
push
mov
xor
int
push
in
pop
jnp
and
jb
sub
cmpsl
insb
cwtl
xchg
sahf
adc
push
sub
push
push
movsb
pop
jmp
inc
dec
jmp
mov
sbb
mov
ss
dec
adc
pop
mov
sub
sub
lods
pop
lods
pop
mov
stc
outsl
lret
in
sub
movsl
xchg
mov
gs
push
mov
fdivl
push
fsubs
lcall
insl
inc
sbb
and
dec
in
and
movsl
cmp
fisubrs
mov
insb
sub
mov
and
add
pop
or
pop
dec
xor
xor
lods
pop
cmp
push
sub
dec
fwait
jmp
fldl
das
and
retw
push
lcall
jmp
or
mov
and
test
lea
loopne
in
xchg
mov
out
jge
or
push
aam
inc
mov
loope
imul
adc
in
sbb
out
push
ss
xor
xchg
outsb
push
mov
and
cmp
xchg
xor
ds
fmul
popf
movb
dec
into
out
sub
xor
rcr
bound
xchg
fsubrs
mov
mov
add
aad
sub
ljmp
sbb
cwtl
mov
mov
fcmovnbe
jno
cltd
pop
cmp
andb
enter
fisttpl
rcll
enter
jns
adc
xor
xchg
in
inc
pushf
loopne
push
cwtd
test
outsl
iret
inc
add
xchg
je
mov
xor
push
hlt
loop
dec
add
int3
ja
hlt
mov
rcr
pop
lods
sub
incl
mov
cmpsb
scas
fisubl
test
mov
rorl
push
jp
and
and
push
adc
push
sub
lock
or
or
cwtl
ret
dec
mov
xchg
arpl
icebp
push
cli
pop
dec
dec
icebp
push
lret
sbb
xor
xor
mov
scas
push
nop
jbe
mov
cli
js
aaa
sub
inc
in
ss
cmc
pop
je
imul
mov
mov
cmp
adc
imul
add
mov
outsl
adc
cmp
sahf
rolb
sub
dec
mov
xor
aaa
push
loopne
pop
das
test
aad
jl
fs
data16
pop
cli
das
dec
insl
cwtl
jno
dec
scas
pop
stos
mov
fisttpll
add
xchg
mov
outsb
rcrl
cltd
lret
jecxz
and
inc
or
pop
dec
push
inc
pop
xchg
cmovae
movsb
loopne
cmpsb
lcall
cmpsl
hlt
lcall
loope
test
clc
leave
shr
outsl
mov
cmc
jle
pop
mov
cmp
and
jae
addb
and
jp
add
inc
dec
cmpsb
dec
enter
sub
cld
push
int
scas
pushf
mov
lock
adc
jmp
xchg
imul
pop
cmp
cltd
subb
lea
aam
sahf
push
mov
jb
mov
inc
sub
push
adc
imul
js
fiadds
push
sub
movsb
pop
or
in
imul
ja
pop
das
cmp
cmp
cmpsb
and
xchg
je
negb
adc
sub
add
or
flds
adc
sub
stos
push
lods
mov
xchg
xor
xor
addr16
outsb
dec
cmp
cmp
adc
cs
and
or
jae
lcall
dec
adc
pop
mov
add
int3
and
or
es
out
mov
dec
cltd
es
mov
push
jmp
xchg
aam
push
fxch
xchg
push
das
daa
xchg
inc
les
mov
or
hlt
orb
sbb
xchg
jle
mov
push
pop
push
and
out
push
fcoms
mov
jns
fmulp
clc
add
test
out
xchg
lds
out
jbe
aad
scas
es
push
outsb
add
popa
add
in
pop
pushl
in
mov
lds
lcall
sub
fidivrs
adc
mov
mov
lds
jmp
pop
push
mov
push
std
bound
int
push
shrb
add
inc
negb
sub
adc
dec
leave
shrl
outsl
outsl
push
xchg
imul
adc
out
adc
out
adc
out
adc
out
adc
add
fsubr
add
or
add
xor
add
cmp
add
jmp
ljmp
popa
jmp
adc
out
add
into
out
add
adc
icebp
add
jnp
add
or
add
das
repnz
call
repz
repz
mov
rcl
jle
rorb
icebp
sbb
and
and
stc
cs
inc
repnz
gs
lahf
in
sbb
jge
pop
xor
sub
xchg
push
insl
jae
and
cli
fimuls
jbe
scas
mul
ja
pushf
imul
lea
shrl
xchg
sub
cld
cmp
mov
sub
cmp
ljmp
bound
fnstenv
ret
aaa
sub
shl
pop
pop
rcll
cmp
mov
fcoms
xchg
divb
and
dec
jnp
xchg
fwait
adcl
jnp
shrl
out
fistl
jl
dec
inc
ss
daa
es
pop
pop
lret
cmp
cmpsl
push
mov
jl
push
sub
mov
jp
or
add
mov
jnp
test
mov
sbb
sarl
push
pop
mov
mov
mov
jbe
ja
mov
outsb
xchg
insl
dec
xchg
jmp
xchg
and
sbb
rorb
call
loop
loop
movsl
icebp
lock
inc
cwtl
loop
movsb
loop
rolb
mov
pop
imul
adc
test
adc
jnp
mov
push
adc
pop
les
push
cld
flds
adc
mov
jecxz
pop
je
inc
or
and
fsub
ret
aas
mov
lods
sar
dec
add
mov
add
sub
fucomip
fnstsw
sub
adc
pop
stc
enter
add
sub
adc
es
in
addb
fwait
das
jge
pop
cmp
add
cs
dec
xor
sub
add
cmp
inc
cmp
imul
push
or
daa
xor
push
mov
sbb
fcmovnbe
jo
dec
push
cmp
xorb
fincstp
mov
jmp
fisubrl
sbb
mov
cmpsl
mov
fbld
push
inc
and
mov
mov
ror
sub
cs
frstor
ds
jo
or
cltd
dec
fistps
insl
add
xorb
mov
mov
shrb
lods
shl
lret
xor
push
data16
push
test
hlt
lret
push
aas
fidivrs
jbe
insl
loope
cmp
dec
xchg
mov
sub
xor
jge
arpl
sar
dec
lds
and
cmp
jne
out
pop
nop
push
bound
jo
pop
je
push
pop
sahf
outsb
or
xchg
jb
jecxz
in
sub
jmp
into
mov
es
test
fs
push
jnp
dec
pop
out
hlt
fistpll
mov
sub
insl
inc
sub
and
dec
xchg
mov
shl
into
or
aaa
jecxz
mov
aas
sahf
js
mov
iret
add
or
fdivr
pop
scas
shl
loop
sbb
xchg
sub
nop
fwait
das
jge
xchg
dec
dec
mov
sbbl
adc
dec
cmp
inc
mov
sub
jmp
loopne
jmp
leave
enter
xchg
loope
cmp
test
sbb
cs
frstor
ds
inc
jmp
fwait
test
jmp
mov
dec
paddsb
push
xchg
enter
mov
add
in
mov
in
mov
mov
shrb
sbb
cmpsl
rolb
dec
xchg
xor
int3
xlat
xchg
add
ja
push
push
jg
push
lret
es
jno
mov
xchg
test
test
or
mov
stos
jg
fsubr
es
pop
adc
aaa
aad
lcall
jne
stc
and
cwtl
scas
cmpsl
mov
add
mov
inc
xor
push
and
call
lods
mov
jbe
dec
jg
inc
lods
push
mov
ja
lea
scas
jmp
cltd
ret
pop
xchg
cs
sub
sahf
cmp
sub
fbstp
cmp
in
mov
pop
push
pop
mov
loopne
mov
inc
std
enter
push
mov
push
sbb
faddp
adc
es
push
jno
test
push
in
test
cmp
push
xchg
mov
mov
enter
shll
loope
sti
dec
aaa
and
jle
iret
int
inc
lods
lret
jmp
jns
and
fcomps
insl
int
std
xor
roll
lds
out
adc
mov
cmc
mov
sarb
in
loope
shlb
int3
pop
push
bound
clc
push
xorb
jmp
lea
pop
push
movsl
call
dec
and
adc
dec
test
adc
sub
sbb
mov
mov
insl
loop
push
xor
cmpsb
scas
rcrl
sbb
or
adc
jecxz
xchg
pusha
popa
mov
xchg
int
inc
subl
test
insb
push
jmp
js
push
mov
mov
cmpsb
scas
test
sub
push
clc
cmpsl
lds
fistps
cmp
xor
or
pop
add
lods
rcll
jo
lcall
xchg
push
pusha
shll
adc
sub
adc
and
stc
push
lcall
fimuls
pop
popa
pop
inc
sarl
insl
mov
xchg
aam
aam
push
into
mov
dec
mov
loopne
out
sub
push
loop
pop
sar
xchg
lret
test
cld
push
lods
testb
push
sub
mov
not
aad
mov
leave
add
fwait
sub
cmp
clc
idivb
aam
sbb
mov
out
leave
push
or
mov
mov
cld
mov
enter
or
stos
out
das
xor
fs
out
imul
dec
inc
cmpsl
mov
xor
call
jg
ficomps
sbb
mov
incb
mov
push
mov
out
xchg
insl
repnz
scas
mov
mov
dec
pop
xor
xchg
push
push
cmp
out
mov
and
adc
mov
popa
lods
ds
movsb
xchg
in
sub
pop
xorl
xchg
pop
pop
stos
push
lret
rol
lcall
sbb
loopne
les
inc
mov
push
cwtl
lea
nop
cmp
xor
lods
pop
mov
ret
pop
pop
adc
inc
out
or
aad
movsl
mov
mov
gs
in
sub
cli
xor
cld
mov
fildl
cmc
hlt
or
push
and
push
push
adcb
imull
pushf
sub
mov
inc
pop
pop
lods
and
xchg
lods
adc
adc
out
cwtl
jb
and
jae
pop
scas
cmp
xor
pop
fmul
icebp
imull
outsl
jnp
sub
addr16
mov
pop
mov
lret
cmp
arpl
add
jl
or
into
xor
cs
movsl
pop
mov
adc
movsb
adc
xor
inc
cmp
xor
call
les
push
mov
mov
mov
cmp
sbb
sbb
ljmp
pushf
ja
test
test
imul
stos
sbb
popa
cmpsb
sti
jp
inc
test
and
jns
fisubrs
and
sbb
jl
add
pop
out
in
push
pop
jno
daa
sbb
mov
shlb
in
jnp
mov
cmp
mov
inc
or
jnp
mov
adc
call
cmp
addr16
jns
mov
aas
clc
cmp
outsb
mov
or
ret
movsb
pop
mov
cmp
xor
jge
cmp
aaa
sbb
sbb
mov
loopne
popa
je
lea
cs
lds
mov
outsb
lea
mov
add
std
movsl
dec
mov
xor
gs
mov
faddl
dec
test
pop
jb
push
xor
push
loopne
cmpsb
cmp
in
push
sub
push
jle
cmc
sti
jecxz
pop
xchg
mov
icebp
xor
push
xor
inc
scas
jl
roll
and
fdivs
pop
cmp
mov
cld
pop
std
into
push
popa
cld
xchg
imul
ret
xchg
xchg
js
out
subl
adc
adc
dec
nop
sub
pop
xchg
bound
fnstenv
sbbb
into
xor
into
jbe
scas
pop
mov
mov
or
aad
daa
cmpsl
pusha
addl
call
outsb
cmp
sub
rorb
cmc
push
ds
inc
daa
adc
imul
inc
mov
sub
dec
and
cmp
or
xchg
pop
mov
push
jl
bound
dec
mov
inc
dec
adc
xorb
leave
or
roll
cmp
int
xor
mov
pop
xchg
cmp
xor
inc
cs
xor
and
shll
pop
mov
mov
cmpsl
les
or
mov
pop
and
sbb
loop
jecxz
mov
mov
rcrl
movsl
rcl
mov
sbbl
aas
cmp
jge
xor
pop
je
add
mov
cmp
and
pop
pop
jl
or
xchg
mov
rorl
and
pop
sub
mov
cmp
stos
fst
dec
cmp
jge
xor
dec
and
add
sar
push
adc
or
pop
mov
lea
bound
add
rorb
sbb
sub
subb
pop
xor
pop
mov
jae
scas
sub
and
adc
in
jp
mov
lods
rorl
and
pop
and
mov
and
std
push
lahf
mov
mov
pop
xor
and
sahf
movsb
shrb
rcl
mov
cmpsl
and
mov
aad
mov
add
je
es
xchg
mov
mov
dec
std
in
lret
subl
les
test
lods
ror
xchg
movb
xor
push
test
imul
test
sti
outsb
stos
xchg
fcmovnb
lods
pop
cmp
roll
mov
sub
add
jecxz
roll
int
mov
add
insb
dec
add
inc
ja
lods
pop
enter
push
test
mov
sub
fs
add
xor
in
cs
pop
insl
cmc
int3
into
sbb
or
arpl
inc
pop
in
or
rclb
pop
les
push
mov
cli
scas
test
mov
out
dec
cmp
sub
popf
leave
fstl
addr16
rclb
xchg
inc
xchg
imul
out
pop
sub
mov
sub
jecxz
cmp
mov
cmp
fcomps
insb
fstl
data16
mov
fs
ficompl
adc
pusha
fcoms
mov
pop
popf
or
inc
lods
es
or
inc
scas
jno
enter
inc
mov
enter
aam
popf
pop
lcall
out
inc
movb
bound
xchg
inc
leave
push
adc
jl
test
sti
cld
cli
fdivrl
mov
rolb
mov
cld
hlt
rclb
fwait
enter
pop
cwtl
and
outsl
sarb
inc
or
mov
jne
adc
movsl
das
sub
or
xchg
or
das
ror
push
inc
loope
aad
and
mov
jbe
cmp
mov
adcb
pop
imul
xchg
mov
test
and
push
jbe
jle
push
jg
xchg
or
fldenv
sub
jge
mov
lods
jno
add
shrb
pop
xchg
adc
jbe
xchg
push
das
mov
push
xchg
outsl
add
cwtl
adc
adc
pop
cmc
int
fsubrl
addr16
ret
popa
lret
lea
cs
xor
mov
movsb
insl
and
outsb
lea
push
mov
and
daa
loop
mov
sub
xor
sub
push
add
pop
in
aas
imul
mov
dec
ret
add
and
rorb
sbb
sub
sti
pop
and
mov
and
rolb
lds
jle
add
ljmp
mov
test
stos
cmp
jno
push
sub
cmp
je
adc
test
vsubpd
cmp
mov
loope
mov
iret
sub
dec
or
aad
and
movsb
adc
out
inc
lcall
popf
dec
ficomps
data16
loop
mov
leave
insl
jl
ljmp
cmp
pop
icebp
push
subb
mov
xchg
xchg
mov
push
add
xchg
movsl
sti
shrb
test
add
sub
pop
inc
lods
pop
ds
jle
adcb
pmaddwd
xchg
adc
stos
or
mov
jb
add
lods
jae
lret
add
cmp
and
pop
sbb
cmp
movsl
data16
jne
pop
icebp
push
add
inc
jo
mov
cs
js
test
xor
hlt
push
lods
pop
aad
out
mov
enter
mov
les
jecxz
adc
popa
xchg
dec
pop
cmp
xor
pop
mov
sahf
mov
jmp
inc
mov
pop
mov
sahf
xor
push
jmp
enter
mov
movsl
cmp
stos
fidivs
adc
pop
cld
push
cmp
je
push
sub
lods
jae
sbb
ds
jl
aas
pusha
mov
int
lcall
add
cmp
xor
stos
pop
lea
scas
push
lods
pop
aad
das
cld
cmp
mov
jmp
sarl
rorb
addl
out
inc
inc
addr16
push
adc
mov
aam
cmp
js
jne
mov
adc
jl
lods
shl
ja
adc
fstps
inc
add
jmp
gs
adc
jns
aas
out
movsb
popa
ja
cmp
mov
leave
iret
into
lock
pusha
pop
pop
ss
add
add
aam
fwait
adc
pop
jge
dec
cmp
sub
es
cmpsl
pop
rcrl
dec
or
push
adc
mov
loop
or
push
adc
rep
mov
mov
addb
lahf
cltd
and
and
test
fs
push
mov
mov
push
cmc
int3
or
push
mov
fldenv
xchg
push
hlt
xor
fsubl
lds
mov
fdivl
ja
jns
mov
ret
sbb
sbb
lahf
cld
stc
adc
sahf
sbb
mov
ret
mov
push
mov
add
push
shl
pop
ja
mov
in
fstpt
inc
and
mov
jae
pop
mov
dec
inc
ljmp
cmp
stos
outsb
enter
rolb
cmp
mov
and
test
mov
sahf
stos
add
and
dec
xor
inc
mov
sbb
and
mov
jle
push
pop
mov
cmpsb
inc
in
rol
pop
xor
pop
mov
cli
push
cmp
add
mov
jbe
mov
fists
inc
into
aad
push
jecxz
jp
jae
sbb
mov
adc
pop
sub
add
sbb
out
frstor
shlb
pusha
push
cmp
push
push
or
add
fwait
imul
stos
fst
dec
cmp
cmp
cmp
cmpsl
lds
jmp
ret
iret
leave
enter
pop
pop
xor
lcall
lds
imul
inc
xchg
pushf
mov
push
add
iret
sahf
xor
cmp
rorl
xor
push
cmp
cmpsl
aam
push
lods
pop
in
imul
pop
call
xor
outsl
mov
mov
cmc
popf
or
test
lods
ds
cwtl
xor
mov
lret
das
mov
gs
outsl
or
std
or
out
mov
in
cmpsl
lds
out
and
iret
inc
dec
fcomps
ja
cmc
push
cwtl
mov
shrl
sub
daa
sub
gs
cmp
sti
xor
dec
je
mov
dec
cmp
jge
xor
dec
and
in
xchg
mov
cmpsl
les
or
daa
mov
xor
mov
dec
popf
inc
negb
sub
xor
rorb
or
fsubp
inc
daa
or
sub
daa
adc
adc
and
add
adc
jp
mov
push
movsl
cltd
lea
or
movsb
je
popf
test
sahf
bound
push
movsb
shr
outsb
inc
test
movsl
jmp
sub
shll
mov
push
hlt
lock
push
add
jo
andl
mov
out
lock
ss
jae
movsl
jp
daa
lahf
aad
mov
jmp
iret
test
negb
push
outsl
mov
movsb
nop
icebp
and
gs
cmp
sub
push
andb
mov
rorl
fsubrs
test
and
out
adc
cmp
pop
mov
pop
fstpl
sahf
jg
and
sar
push
xlat
int
test
inc
andb
cmp
cmp
xchg
push
lods
sbb
addr16
xchg
mov
loopne
or
in
popf
adc
lret
add
push
and
and
mov
nop
adc
imul
mov
mov
mov
inc
sbb
and
mov
int3
sub
and
dec
pop
mov
jo
mov
sbb
push
mov
gs
leave
inc
sahf
es
outsb
enter
cli
mov
or
mov
stos
stos
xlat
fdivs
push
xor
aad
push
aad
cwtl
xor
fwait
add
frstor
iret
jecxz
mov
xor
rorl
mov
xchg
std
push
rolb
sub
pop
daa
ja
pop
mov
cld
loope
dec
jno
test
std
shl
jmp
inc
adc
xor
loope
or
and
in
jb
mov
fidivl
and
mov
data16
aaa
in
mov
aad
in
add
xchg
das
aam
vorps
in
or
sbb
inc
xchg
xchg
stos
enter
test
mov
fwait
inc
sbb
dec
mov
push
imul
imul
inc
test
cwtl
cmp
adc
sahf
loopne
push
imulb
jecxz
fstpt
jle
ja
cmp
in
sub
mov
sub
loope
push
or
movsl
pusha
clc
adc
roll
sub
inc
lret
popf
loopne
test
pushf
pop
repnz
adcb
lods
jp
add
mov
adc
cli
or
fcompl
pop
pop
movsl
ret
xor
xchg
mov
push
jp
adc
mov
cmp
inc
test
inc
ret
test
lcall
popf
inc
dec
sbb
jmp
fildl
adc
fcmovnu
pop
lods
pop
mov
lret
shlb
cmp
test
shll
adcl
pop
mov
xor
dec
ds
rol
jbe
pop
stc
push
addl
into
sbb
mov
inc
xchg
xchg
mov
adc
xchg
sbbb
cmp
stos
test
out
push
mov
jmp
aas
add
xlat
jmp
cmp
and
push
aas
fdivrp
inc
jg
aad
pop
sub
imul
cltd
mov
dec
aas
add
cmp
aam
inc
sub
stos
push
psllw
mov
mov
fcompl
inc
testb
addb
push
aam
jbe
lcall
popf
dec
or
xor
in
fidivrs
mov
cmp
insl
mov
cmpsl
lds
aam
add
xchg
fistps
inc
push
and
mov
sbb
mov
jns
negb
sub
movsb
popf
mov
inc
fidivs
mov
stos
push
test
loopne
xor
aas
rorl
les
lret
lods
cmpsb
sub
shlb
das
adc
mov
into
add
popf
jp
cmp
je
adc
lret
ljmp
in
inc
add
jge
lods
shrb
cmp
popf
sbbb
ret
movsl
and
lcall
bound
cltd
mov
and
inc
or
xor
adc
push
adc
movsb
sub
call
and
pop
add
push
int
inc
pusha
out
pop
loop
xlat
imul
sub
cmp
add
popf
ss
push
adc
add
jge
lods
ror
push
xchg
das
cmpsl
movb
push
xor
jns
cs
inc
out
push
das
and
lret
shlb
rcl
mov
dec
arpl
push
xchg
xchg
call
dec
mov
mov
mov
mov
xchg
add
xchg
popf
loope
mov
in
rcr
sub
mov
sbb
cmp
sub
mov
andl
movsl
and
pop
sti
or
insl
lahf
lret
sarb
pop
stos
jecxz
or
xchg
int3
xlat
push
push
inc
rcrl
aas
jne
mov
mov
icebp
mov
cmp
or
inc
icebp
dec
push
test
xchg
and
test
in
jb
cmpsb
push
adc
imul
nop
in
inc
daa
mov
jmp
movsb
push
mov
mov
lret
lret
outsb
xchg
dec
icebp
mov
xor
daa
sub
das
sbbb
cmp
push
cld
pop
pushf
aad
cld
mov
mov
jnp
std
in
jge
leave
out
jmp
into
sbb
pop
adc
outsb
pop
mov
mov
faddl
or
cmpxchg
or
and
dec
in
cmpsl
fdivl
mov
pop
ficoml
push
push
pop
pop
neg
ret
fcmovnb
push
or
aaa
dec
jle
push
pop
cmp
mov
int
dec
dec
aas
dec
xchg
outsl
pop
test
dec
mov
jo
sbb
mov
in
lcall
sbbl
inc
xchg
pop
out
push
dec
daa
incb
push
sbb
insb
das
jns
jo
aaa
xor
pop
dec
push
add
cmp
xchg
ja
mov
push
sub
dec
inc
shrb
imul
fsqrt
mov
push
cmp
inc
icebp
pop
dec
pop
xor
jbe
mov
push
mov
pop
add
pusha
push
movsl
popf
cmp
push
mov
mov
adc
mov
adc
push
lods
nop
jmp
pop
cmc
push
inc
daa
pop
xor
pop
cmpsl
pop
xor
cmp
push
inc
cmovg
jne
lock
outsb
push
mov
mov
xchg
cmpl
mov
push
push
nopl
scas
mov
mov
fmuls
cwtl
iret
incl
dec
mov
rorb
sub
shll
cmp
and
mov
fwait
mov
bound
push
dec
sbb
insb
and
mov
adc
dec
mov
into
adc
shl
push
int
std
dec
cmp
push
adc
inc
mov
push
in
xchg
jb
add
mov
adcl
push
lret
outsl
shl
inc
pop
arpl
imul
leave
sbb
sub
mov
push
xchg
daa
or
pop
push
outsl
shl
push
dec
jl
shr
cmp
add
pusha
sub
xchg
daa
sbb
repnz
pop
mov
adc
cltd
sub
cli
push
pushf
push
pop
mov
add
mov
xor
or
lret
adc
jge
xor
test
std
pop
xor
mov
and
enter
outsb
sbb
loop
xchg
and
test
popa
adc
test
push
lcall
dec
mov
nop
lock
ljmp
or
add
outsl
fcmovne
inc
rorl
inc
scas
adc
or
cmc
popa
push
pop
push
inc
nop
jo
adc
jae
sub
mov
mov
loope
jmp
adc
movl
mov
cs
sub
cmpsl
xchg
pushl
xor
mov
mov
xor
push
je
push
adc
imul
mov
xor
xor
movsb
pop
cmp
rorl
pop
pop
andb
inc
pusha
jns
or
scas
outsl
shl
inc
rcrl
mov
les
pusha
les
aad
orb
xor
push
push
push
sub
imul
adc
xchg
inc
mov
inc
dec
sbb
fcmove
jnp
add
inc
cmovs
pop
push
and
mov
out
popf
push
jmp
out
pop
jo
movb
sub
pusha
adc
mov
add
out
cmp
mov
push
push
push
cmp
dec
pop
dec
pop
and
push
movsl
cmpsl
scas
sub
xorb
mov
mov
cmp
mov
dec
xchg
push
mov
mov
lock
data16
cli
xor
and
lea
scas
divb
int3
in
loope
or
jecxz
dec
jp
cmc
xor
inc
inc
imul
cmp
inc
lea
pop
mov
scas
add
cmpl
dec
mov
sbbb
loopne
dec
inc
mov
mov
outsl
sub
sbb
lcall
data16
inc
mov
jnp
sub
das
jno
mov
in
mov
xor
outsl
add
testl
aaa
sub
mov
fisubrs
sbbl
xor
xchg
inc
xchg
xor
sbb
or
sub
cmp
in
push
fidivrs
jbe
fwait
aas
lods
and
dec
and
rcrb
push
lods
push
insl
adc
mov
mov
mov
push
adc
xchg
xchg
mov
es
stos
xchg
push
jg
push
inc
sbb
inc
jp
xor
ficomps
inc
push
dec
or
ja
sub
fiaddl
cmpsb
mov
adc
jle
and
xchg
cli
mov
pop
push
sub
cmp
testb
push
mov
test
movsl
nop
xor
decl
fdiv
test
inc
scas
xchg
fbstp
daa
adc
out
lcall
test
pop
and
gs
rolb
cmpsl
adc
push
mov
lret
jl
jl
mov
lahf
mov
adcl
push
scas
pop
ljmp
mov
xchg
sub
lret
push
loope
setno
and
adc
push
cmc
pop
les
sbb
arpl
fmuls
loope
outsb
or
ljmp
data16
pop
or
fcmovu
dec
mov
sbb
ret
adc
test
jl
pop
dec
or
sar
rorl
and
insl
sub
rorb
adc
cmpsb
cmp
cmp
xor
movb
cmpb
jmp
cmp
sbb
adcb
fucomp
dec
cmp
lds
out
ret
xchg
dec
fiaddl
cmpsl
adc
xor
cmp
ljmp
mov
pop
cmp
push
cmpsl
sbb
repz
adcl
sar
jbe
xchg
mov
mov
aad
push
and
stc
jb
int3
xor
shl
adc
lods
shl
jbe
mov
cmc
inc
roll
cmp
sti
jb
sbbb
roll
mov
ficoms
outsl
push
int3
pop
mov
int
adc
cmp
inc
jp
add
adc
push
sub
fstl
fwait
dec
adc
cmp
leave
test
inc
es
imul
cmp
push
sarb
xchg
add
pop
jno
sbb
andb
stc
sbb
fsubr
push
sti
rorb
dec
sti
or
cmp
pushf
mov
and
push
ljmp
cmc
jle
lcall
popf
fwait
dec
push
sub
cmp
leave
mov
dec
inc
inc
and
adc
pop
icebp
movsb
dec
xor
add
inc
pop
dec
pop
int3
add
fists
repz
aam
scas
mov
inc
fidivrs
pop
cmp
dec
loopne
lcall
push
mov
push
cmp
mov
movsb
dec
ljmp
cmp
dec
adc
adc
std
cwtl
sub
lods
scas
fidivrs
jecxz
mov
dec
ss
or
pop
pop
pop
pop
jno,pt
scas
mov
mov
loope
xchg
mov
cmpsl
in
mov
aas
stc
or
or
cmp
ja
aas
adc
jle
roll
lret
cltd
repz
cwtl
stos
and
lret
daa
and
cwtl
loop
push
je
add
scas
cwtl
push
rclb
into
and
xor
inc
sbb
push
jo
xor
fimull
jne
cmp
neg
lods
jne
xchg
ja
bound
ror
sub
cs
mov
sub
pop
mov
arpl
lds
push
movsl
ds
cmp
or
push
arpl
inc
xchg
mov
jl
cmpsb
jle
js
es
shl
push
xor
lds
dec
arpl
push
xchg
int
outsl
and
mov
js
les
jbe
xchg
movsb
xor
jbe
test
pop
adc
jp
sbb
xchg
into
cmp
pop
or
and
adc
push
add
adcl
lods
aam
dec
daa
stc
xor
rol
shlb
fdivrl
inc
xor
sbb
movsb
popf
call
add
push
adc
shll
jae
pop
insb
cwtl
add
popa
fnstsw
insb
ja
scas
ret
std
push
out
adc
out
in
dec
jo
adc
push
xor
inc
test
xchg
push
dec
mov
bound
cltd
mov
sar
or
arpl
push
adc
std
sbb
push
sbb
push
adc
sub
push
adc
push
ficoms
adc
push
adc
testl
mov
and
adc
rolb
mov
or
sub
push
xor
sahf
out
mov
push
insb
pop
in
aad
rcll
pop
daa
xor
test
aad
mov
sub
fwait
push
mov
push
jno
int
insl
adcl
shlb
shll
call
jmp
lods
mov
dec
pop
insb
pop
aam
pop
cmp
rorl
pop
pop
cmp
loop
leave
push
jo
adc
scas
shlb
mov
mov
lods
mov
inc
dec
dec
push
inc
or
cwtl
bound
lahf
fcomps
addr16
int3
mov
dec
popf
dec
lds
les
jbe
inc
push
int3
dec
jmp
lods
xor
repnz
arpl
movl
arpl
jns
ljmp
jne
and
jae
rorl
decl
and
inc
pop
std
xor
mov
sahf
int3
loopne
mov
sbb
roll
fbstp
sub
dec
loop
aad
push
fstpl
cwtl
xor
call
jae
ljmp
shll
ret
push
lods
rolb
cmp
inc
jge
flds
lods
cmp
add
sub
out
push
dec
insl
shr
stos
and
int
adc
mov
pop
mov
jne
mov
aam
pop
and
mov
bound
iret
adc
xor
dec
scas
fdivrs
push
adc
out
jns
and
movsb
push
xor
sub
cmp
and
sub
push
and
addb
pop
jmp
sub
pop
push
push
daa
arpl
push
jo
aad
mov
nop
lds
dec
dec
int3
sbb
sub
pop
or
xor
pop
cmp
shrl
add
imul
testb
mov
ret
jnp
jecxz
mov
sub
adc
fimuls
lret
jle
out
popf
stos
xor
jle
pushf
and
inc
dec
xchg
jg
xor
shrb
movsl
bound
sub
xorb
mov
mov
xchg
sub
fucomip
and
shlb
addr16
stos
and
aas
push
adc
pop
in
jmp
pop
cmpsb
in
lods
imul
lret
fisubrl
jo
push
cmp
inc
mov
cmp
ja
push
sub
test
aas
aaa
sub
sbb
lock
pop
subb
cli
dec
xchg
lods
stc
outsb
out
in
imul
movsl
and
pop
mov
cmp
outsl
push
loope
hlt
mov
sbb
adc
cmpsb
shlb
cmp
mov
lea
and
cli
cmp
shlb
adc
dec
cmp
mov
push
and
aad
les
and
shlb
adc
in
out
out
ja
pop
sbb
add
or
mov
popa
xor
jle
in
call
enter
sub
fisubs
mov
popf
movsb
or
jecxz
aam
std
rclb
mov
sub
ja
pop
movsl
in
jge
ret
rclb
into
or
fbstp
pusha
sbb
mov
and
xor
icebp
cmp
bound
jbe
ffree
mov
mov
leave
mov
stc
clc
pop
mov
lods
and
pop
mov
mov
shl
outsb
pushf
add
shll
or
out
or
ficomps
sub
adc
fcomps
mov
adcl
dec
adc
adc
subl
cvtdq2ps
addr16
cmc
add
jge
add
les
lahf
cmp
int
jge
insl
dec
cli
mov
mov
cmc
sub
rol
pusha
adc
cwtl
out
cmp
mov
je
imul
and
test
fwait
out
mov
test
mov
rcrb
dec
test
adc
lods
pop
mov
ret
imul
adc
sub
testl
orl
pusha
adc
test
add
adc
lret
rolb
outsl
pop
sub
call
mov
sbb
adc
add
cli
inc
add
push
out
adc
and
lret
js
int
negl
mov
add
push
std
inc
inc
out
adc
inc
mov
sbb
sub
mov
mov
mov
xor
aad
mov
cmp
cmp
mov
in
sub
xor
inc
aad
neg
jmp
pop
dec
xchg
in
jnp
mov
pop
or
push
les
dec
out
sbb
fsubr
push
and
sbb
daa
sub
call
xor
adc
or
fsub
fdivrl
mov
imul
xchg
aam
mov
inc
mov
dec
je
imul
xchg
int
adc
scas
lcall
mov
popa
fsubr
scas
cld
mov
jno
lcall
jmp
flds
adc
scas
cli
incb
fsub
push
inc
int
cwtl
xor
cmc
pop
int3
daa
pop
mov
pop
pop
cmp
shlb
addl
push
hlt
roll
cmp
nop
jb
fistps
fisubs
aam
inc
andb
aad
add
cmp
adc
out
outsb
das
xchg
in
mov
iret
jp
hlt
add
xchg
xchg
lahf
test
sub
inc
mov
mov
imul
fisubl
lcall
stos
lahf
pop
cli
in
movsb
mov
dec
stos
mov
stc
mov
inc
dec
cmp
mov
test
stos
xchg
addr16
in
repz
mov
ja
stc
jnp
aaa
push
cwtl
fs
mov
mov
push
jmp
inc
mov
outsb
adc
rcrl
push
dec
sub
jg
inc
out
aas
inc
idivb
adc
stos
xorl
mov
pop
cs
sub
test
jecxz
out
je
or
xchg
mov
xchg
pop
shll
mov
jae
loop
movsb
shr
lahf
sub
rcrb
mov
jecxz
mov
dec
push
inc
out
sbb
lea
push
movsl
pop
stos
inc
adc
xor
mov
push
pop
inc
sbb
shufps
call
into
enter
mov
push
and
test
inc
inc
and
mov
lcall
stos
and
mov
outsb
xchg
jle
xor
fisubs
and
inc
jne
outsl
test
loope
dec
aad
stos
adc
das
stos
fsubrs
dec
inc
xchg
out
push
and
sbb
in
push
out
jne
jae
mov
ret
pop
sub
cmp
mov
insl
add
pop
jmp
ljmp
lods
dec
jecxz
mov
pusha
test
add
and
inc
js
daa
sub
outsb
dec
inc
insb
mov
adc
aaa
jbe
dec
jmp
sbb
xor
adc
xor
in
shl
jb
mov
jbe
rcrb
pop
inc
xor
rorb
xor
ret
nop
pop
inc
jmp
cmpsl
dec
out
cld
sbb
shrb
adc
gs
out
call
test
push
cmp
aad
je
imul
or
add
sub
jp,pn
cmp
aam
pop
xor
rolb
pop
into
imul
out
sbb
mov
iret
sub
inc
das
and
data16
push
pop
jmp
aad
rcrl
xchg
add
lods
or
int3
push
aad
inc
mov
cmpsb
dec
in
cwtl
inc
outsl
in
mov
xor
push
in
gs
dec
pop
std
out
test
movl
xchg
or
add
jmp
add
lahf
outsl
stos
hlt
or
int
jo
inc
test
arpl
fs
cmpsl
mov
xor
jns
outsl
pop
inc
dec
ljmp
xor
push
inc
insb
loop
dec
cmc
ss
sbbl
std
sbb
stos
push
shrl
pop
mov
inc
arpl
je
test
cmpsl
xorb
shlb
adcb
lock
mov
or
lret
pop
push
mov
ficomps
xor
shl
ret
test
mov
cwtl
or
jmp
mov
popf
mov
fwait
out
adc
stos
cs
fdivrs
sbb
out
cmp
ja
cmp
jbe
divb
cwtl
cmovg
jne
cmc
lahf
outsb
pop
mov
mov
andb
cwtl
pop
lea
inc
popf
cmp
jbe
inc
or
adc
rolb
pop
insb
lret
lret
jmp
popf
ljmp
mov
dec
pop
stos
fsubrp
pop
cmp
inc
push
adc
cmp
call
lret
adc
mov
mov
push
movsb
xor
mov
mov
repz
imul
in
jae
aaa
popf
fistl
push
mov
pop
icebp
cmp
leave
inc
movsb
or
lea
shl
cmp
adc
jecxz
repnz
sbb
xor
leave
xchg
and
ret
adc
or
dec
mov
pop
add
js
cwtl
or
fnstcw
or
clc
sarb
mov
ret
inc
popa
xchg
add
add
in
loop
int3
add
xchg
jmp
int
push
cmp
push
adc
sub
inc
js
mov
push
adc
xor
add
inc
jno
dec
push
adc
fs
lea
xchg
repnz
dec
cmpl
pop
jg
adc
loope
and
arpl
loopne
pusha
adc
out
in
mov
enter
pop
adc
int3
stos
dec
loope
or
push
adc
push
in
pop
push
inc
out
xchg
stos
pop
cmp
cmp
out
out
lock
xor
mov
mov
out
test
or
out
xor
stc
ds
sbb
in
bound
and
fnstsw
insl
or
icebp
push
sub
jge
fwait
inc
stos
fwait
incb
xor
das
mov
cli
and
cmp
mov
pop
shrb
ljmp
arpl
mov
insl
in
out
mov
jae
sub
sbb
add
inc
and
xor
mov
into
add
movsb
jecxz
ljmp
mov
push
and
test
mov
mov
out
cmp
int
pop
and
lock
or
scas
fucomip
pop
pop
push
iret
fstps
mov
rolb
and
bound
push
mov
loope
push
sub
lds
sub
mov
mov
jne
adc
push
sub
in
mov
sub
pop
jp
divl
pusha
mov
push
and
roll
sub
in
lds
dec
jnp
fsts
sub
or
pop
lds
dec
rcrb
cmp
mov
in
subb
xchg
mov
mov
cmpsl
push
mov
imul
mov
xor
fisubl
dec
popf
cs
xchg
push
dec
mov
aam
push
xor
int3
push
cmp
mov
lret
sbb
sub
or
pop
les
adcb
in
adc
cmp
leave
adc
pop
in
pop
mov
roll
mov
sbb
inc
and
movsb
lahf
bnd
adc
xchg
mov
shll
add
ficoml
mov
or
and
mov
add
push
sub
mov
js
enter
pop
cs
repz
call
sub
daa
adc
lahf
and
cld
xchg
mov
test
fsubr
pop
stos
out
ret
adc
das
mov
xor
into
push
ja
push
xor
adc
loope
pop
out
addr16
push
pop
cmp
sbb
pop
lock
dec
mov
pop
adc
sbb
and
push
adc
jmp
dec
std
add
aad
inc
ret
test
inc
inc
mov
les
rcll
cmpsl
pop
mov
faddl
push
and
es
fistps
inc
cmp
leave
mov
inc
pop
insb
dec
aad
cmpsl
pop
mov
mov
fs
faddl
lahf
fcomp
jmp
addr16
adc
xchg
incl
or
push
xchg
pop
outsb
adc
pop
jbe
ficomps
pop
je
mov
sub
sub
cwtl
fldl
inc
lahf
xor
jne
push
ljmp
push
jno
rorb
jbe
lods
xchg
dec
or
repz
inc
ja
aam
xchg
lea
and
sub
pop
push
push
or
or
scas
cmc
xchg
xchg
xor
mov
out
jle
jecxz
mov
outsl
fistps
sbb
xchg
in
fsubrl
loop
sub
pop
js
fnstenv
mov
lret
cmp
lds
outsl
pop
repnz
loop
lea
popf
out
outsl
xor
push
sbb
jo
hlt
aas
push
adc
mulb
mov
out
sub
sbb
shlb
dec
mov
scas
mov
fistpll
mov
sbb
adc
dec
and
lds
jge
push
cmpsl
pop
mov
xchg
insb
in
and
mov
lcall
and
lret
cltd
js
enter
sub
jle
add
popa
and
and
insb
jnp
lret
rorl
lcall
cmp
and
daa
or
int3
adcb
mov
pop
movsb
push
cld
inc
and
jmp
cmp
cmp
add
cli
flds
lock
lcall
pop
pushf
mov
popa
dec
sbb
or
sub
lahf
fwait
cli
xlat
adc
dec
sub
jo
call
fildl
mov
shl
out
xor
mov
imul
clc
sbb
jp
xchg
ljmp
adc
adc
cmp
inc
lock
and
mov
xchg
sahf
addr16
std
inc
fcoml
dec
inc
shll
fwait
loop
fmul
sbb
fsubrp
jb
cmovl
jmp
stos
shl
inc
aad
pop
and
mull
add
mov
pop
stos
fucomp
jge
xor
out
adc
pop
shll
mov
mov
arpl
or
lods
loope
aas
push
adc
jo
lods
pop
loopne
xchg
add
roll
dec
std
loopne
or
mov
leave
movsl
mov
addl
cmp
xor
popf
ljmp
and
enter
hlt
aas
push
adc
xor
sti
ror
push
jp
movsl
sub
in
faddp
loopne
adc
and
scas
mov
or
out
jmp
push
mov
les
mov
aas
push
adc
pushf
int3
lret
daa
test
aaa
movsl
dec
popf
mov
xchg
inc
mov
mov
cmp
cmp
repz
lds
fimull
repnz
add
sbb
leave
imul
mov
inc
cmpsl
dec
popf
dec
korw
mov
adc
adc
inc
push
adc
xchg
xlat
lods
or
das
int
pop
aam
les
jg
ret
test
test
lods
pop
js
jge
inc
push
adc
cmp
adc
enter
movsl
sub
push
pop
ss
mov
inc
or
pop
fdivrs
outsl
les
pop
sahf
aas
stos
test
frstor
addr16
push
pop
das
xor
sbb
dec
loop
push
out
sub
mov
push
fiadds
popf
cmp
push
and
jne
cltd
dec
inc
stos
scas
aam
jo
push
sub
lds
jno
push
shl
push
dec
adc
je
inc
add
stos
push
es
leave
xchg
pop
call
mov
mov
loopne
jne
mov
sub
and
cmpsl
mov
jg
mov
cwtd
mov
xchg
add
jle
xlat
popf
or
xchg
inc
cmpsl
push
movsl
mov
inc
fnstcw
movsb
adc
fcoml
add
out
jl
movsb
pop
shl
pop
jbe
lds
xlat
fcoms
pop
push
and
jns
mov
xchg
fcmovne
ss
out
pop
adc
sbb
subb
jb
mov
aas
aam
loop
jb
mov
dec
out
lcall
dec
push
push
mov
lods
jle
cs
test
xor
je
cmc
fisubl
jne
out
push
loop
cmc
cmp
xor
shll
add
shll
push
pop
movsb
sahf
xorb
cs
push
aas
push
outsl
into
stc
dec
push
ret
xchg
negl
pop
pop
pop
into
push
ror
imul
pop
adc
loope
sbb
adc
int3
out
pop
adc
mov
inc
jnp
inc
cmp
or
int
and
mov
or
adc
je
inc
push
xorb
pop
adc
dec
mov
pop
call
pop
adc
sub
xor
pop
adc
xor
or
cltd
adc
push
shl
adc
xor
jmp
mul
add
sub
pop
adc
dec
fldcw
in
pop
adc
cs
adc
xor
or
mov
jge
data16
sbb
or
sbb
jmp
sbb
in
pop
adc
or
mov
pop
adc
and
xchg
dec
arpl
adc
imul
faddp
jge
pusha
and
pop
jno
gs
mov
mov
adc
xchg
fldenv
add
or
adc
dec
cltd
xor
int
mov
pop
adc
cmpsb
dec
popf
inc
jo
push
dec
in
inc
lock
adc
push
cmpsb
dec
in
mov
testb
sub
call
idiv
sbb
out
adc
call
dec
inc
mov
pop
adc
cmp
mov
faddl
or
jecxz
aam
push
aad
jno
sub
out
xor
add
or
mov
or
add
or
stos
movhlps
aad
scas
mov
inc
fistpll
or
inc
push
adc
test
cld
xor
rcrl
aad
pop
mov
dec
xchg
test
aas
leave
or
or
jp
mov
test
cwtl
fs
inc
loopne
cmpsl
dec
jecxz
out
adc
nop
mov
stc
adc
or
and
pop
pop
and
int
in
jo
pop
cmpb
dec
repnz
jmp
arpl
add
leave
inc
push
dec
jno
and
pop
mov
add
cmp
push
adc
xor
pop
adc
pop
das
and
sub
inc
pop
xor
adc
in
fiadds
push
push
pop
sub
lods
xor
cld
push
pop
xchg
sub
add
mov
fsubl
in
subb
mov
arpl
inc
aam
pop
or
inc
push
adc
dec
jno
adc
lock
ffreep
loopne
mov
stc
adc
or
and
cli
mov
jne
and
aad
mov
inc
jne
pop
mov
in
inc
mov
xchg
test
lods
pop
cmp
xor
pop
xchg
lds
mov
inc
push
adc
cmp
pop
out
dec
jb
jo
or
mov
xchg
sub
sub
iret
stos
lods
sarl
out
xor
push
adc
ljmp
dec
scas
push
mov
push
shrb
mov
push
jo
push
mov
adc
shl
pop
inc
repz
aaa
xchg
shrl
out
xchg
xchg
mov
enter
out
mov
pusha
test
dec
jl
inc
out
cmpsb
pop
cmpsl
fisubs
jmp
mov
stos
ss
add
adc
jp
xor
or
pop
out
pop
xchg
pop
dec
aaa
orl
sbb
xchg
mov
xor
test
clc
sub
in
outsb
pop
test
mov
push
popf
orl
imul
mov
xor
popf
enter
out
push
adc
es
pop
adc
push
out
cwtl
cs
adc
jno
int3
ljmp
sahf
and
sbb
shlb
scas
and
cmpsb
pop
and
fbstp
in
or
pushf
pop
push
outsb
sub
leave
add
and
push
jge
adc
shl
cmp
ficoms
enter
mov
adc
mov
subb
mov
xchg
push
mov
adc
sbb
cmp
repnz
mov
std
sub
notb
adc
and
xor
daa
mov
xor
ds
inc
jge
push
cmc
add
or
roll
out
adc
inc
orl
and
das
cld
and
sbb
cmpsb
add
out
adc
fnsave
lds
mov
mov
ljmp
mov
push
adc
mov
pop
and
movsb
sahf
repz
iret
lcall
cli
pop
adc
call
lock
test
mov
int
js
sub
pop
mov
fwait
mov
icebp
leave
mov
data16
xchg
dec
shl
add
and
jmp
pop
cmp
xor
je
dec
test
adc
divl
cld
test
inc
push
adc
push
test
push
sub
jg
mov
rol
xchg
inc
pushf
fnsave
ret
dec
pop
aad
jae
pop
cmp
in
pop
xor
ds
push
sbb
addr16
daa
sbb
push
cmpsl
adc
fwait
out
loope
sbb
push
stos
push
gs
cmpsl
data16
int
xchg
pop
jecxz
cmp
dec
sub
mov
sbb
or
loop
xlat
stos
push
shrb
in
sti
mov
pop
out
mov
rol
inc
aam
push
jbe
jl
bound
and
push
shlb
pop
cmp
roll
les
push
popf
cmp
clc
pop
repnz
jge
cmp
movsb
pop
cmp
loope
popf
sub
dec
push
loopne
fwait
ror
lret
push
pushf
sub
dec
cmpsb
push
cmpsb
cmp
outsb
test
adc
xor
mov
andl
jo
icebp
movsl
pop
or
addr16
mov
jle
mov
dec
xor
sbb
dec
int3
push
push
and
xchg
mov
ja
gs
xchg
test
sbb
decb
dec
popf
dec
int
stos
or
mov
cmp
in
outsb
and
mov
lret
loop
in
mov
jmp
lret
xchg
aad
ret
pusha
dec
mov
std
jp
gs
jbe
ds
and
mov
pop
xor
clc
push
jl
or
mov
shll
xor
loope
xchg
push
movsl
sbb
push
and
cs
cmpsb
and
ss
push
fnsave
mov
jmp
cmp
loope
stos
mov
adc
pop
fsubs
cmp
sbb
loopne
mov
test
lret
std
dec
mov
sarl
mov
ret
adc
or
or
arpl
out
adc
loopne
inc
popf
cmpsl
popf
xor
push
xchg
shlb
sbb
dec
shlb
out
xor
adc
pop
adc
push
adc
xchg
dec
stos
or
ja
push
push
or
lret
nop
jle
push
sarb
dec
xchg
xor
sbb
cmp
in
xchg
adc
mov
and
xchg
jmp
loope
fwait
pusha
push
sub
or
orl
mov
push
dec
mov
dec
add
cmp
lahf
jmp
cld
rclb
inc
sbb
call
js
dec
push
xor
adc
jne
inc
inc
adc
ret
or
pop
roll
sbb
mov
idivl
sbb
mov
shlb
push
dec
jg
sbb
sahf
push
in
pop
push
inc
filds
xchg
cwtl
shufps
jb
repnz
push
ficomps
mov
xchg
pop
mov
data16
mov
ds
fimull
jnp
std
repz
or
mov
stos
test
ret
adc
dec
fimull
scas
pop
pop
or
or
add
mov
push
adc
xchg
xchg
sbb
pop
or
loope
rorl
sub
lock
pop
adc
rcrb
and
push
adc
sbb
sub
insl
sarb
mov
rcl
inc
cmp
inc
cmc
inc
pop
mov
and
mov
mov
loopne
lcall
in
sarb
sbb
ja
gs
sub
pop
pushf
mov
jae
ja
mov
pop
adc
jmp
adc
mov
mov
adc
adc
inc
test
xlat
cs
adc
inc
push
adc
push
inc
sbb
fs
adc
cwtl
in
faddp
loopne
adc
and
mov
enter
sub
adc
cmpsb
jl
hlt
shlb
repnz
adc
cltd
adc
xor
imul
loop
xchg
add
xor
and
loopne
adc
fnstenv
ret
lods
xchg
push
pop
lds
incb
cmpsl
xchg
dec
pop
enter
stos
in
ljmp
jne
test
lods
pop
ljmp
pop
mov
jp
and
out
or
mov
jg
ret
adc
xor
addr16
cmpsl
sbb
lahf
or
cs
movsl
nop
movsb
repnz
adc
sbbb
jbe
scas
cmp
enter
mov
test
adc
jo
xchg
add
repnz
adc
out
arpl
mov
test
lea
pop
lods
pop
mov
add
xor
ret
adc
xor
leave
rolb
inc
xchg
stos
push
test
aas
les
mov
dec
into
lret
cmp
jne
inc
or
jp
out
inc
std
mov
sub
adc
hlt
rclb
repnz
adc
roll
or
mov
lods
xlat
out
rcrb
mov
jge
inc
push
adc
das
mov
mov
and
pop
cli
out
cli
inc
fwait
push
fwait
in
pop
push
ret
sarb
cmp
sbb
cmp
jo
push
adc
sub
or
xor
call
and
push
adc
loope
push
stos
push
outsl
shl
outsl
inc
rorb
mov
inc
aad
pop
or
inc
push
adc
sub
push
stos
mov
cmp
iret
mov
mov
std
jp
pop
imul
stos
or
scas
push
ror
mov
arpl
popf
sbb
js
sub
adc
lods
jge
int3
mov
repnz
adc
ret
shrb
sbb
inc
mov
and
or
push
adc
dec
pop
dec
mov
inc
cmp
and
pop
cltd
in
or
and
jns
jns
adc
addr16
jle
stc
pop
imul
rcr
mov
jl
pushf
mov
pop
adc
les
repz
inc
sarb
pop
inc
lods
popa
cmp
jmp
int
mov
adc
inc
dec
mov
lea
in
test
shr
push
ljmp
xor
mov
cmpsl
rcr
xchg
dec
test
lds
cltd
sarl
sub
and
dec
push
xor
int
outsl
sub
in
xchg
test
inc
inc
cmp
sub
jmp
nop
jmp
mov
push
adc
ss
and
dec
in
xchg
imulb
imul
stos
add
or
loope
mov
fsubp
push
gs
fstpt
push
pop
jecxz
cmp
cs
pop
sub
decb
loope
inc
xchg
sbb
cltd
imul
fwait
call
jl
bnd
inc
movsl
xlat
in
push
daa
sub
and
xchg
stos
aad
cwtl
mulb
int3
mov
or
mov
push
daa
mov
and
roll
frstor
cmp
pop
bound
jmp
sub
or
repnz
inc
jbe
cs
cmpsl
les
jp
sub
hlt
outsb
dec
into
adc
pop
xchg
xchg
fsubr
pop
inc
and
xor
jo
pop
ljmp
ljmp
movl
stos
push
std
fcmovbe
xchg
int
mov
dec
bound
sbb
mov
shlb
sub
stos
fndisi(8087
push
cmp
shll
insb
sub
cld
xchg
dec
dec
dec
dec
sarl
cmpl
mov
dec
inc
imul
cmp
in
fistpl
xorl
fisubrl
mov
adcb
mov
ret
jne
stos
adcl
pop
mov
add
repz
push
adc
sub
aam
les
pop
sub
loopne
adc
and
ss
and
jmp
sar
xchg
dec
int
inc
lret
mov
adc
cli
push
cmp
jmp
pop
xor
ret
loope
mov
adc
sti
mov
ljmp
xchg
ss
aam
cmpl
dec
or
loope
mov
sub
fisttpl
fucomip
add
and
jmp
cmp
testl
addb
fstp
push
pop
jb
xlat
and
out
mov
hlt
jb
or
cmp
int
out
inc
repnz
xor
arpl
mov
mov
xchg
inc
dec
mov
mov
loop
cmp
push
lea
and
cmp
loope
std
and
mov
or
ret
mov
outsb
fbstp
sub
cmp
iret
mov
mov
xor
add
sub
adc
inc
icebp
pop
cltd
xor
shl
jb
aad
push
cmp
loopne
lcall
push
fidivs
push
mov
ret
loope
test
mov
jbe
lret
or
sbb
jne
mov
mov
dec
jns
movsb
gs
sahf
mov
std
sub
sbb
push
shrl
mov
ret
jmp
stc
pop
gs
aam
je
movups
adc
outsb
pop
sbb
sub
mov
ficoml
scas
test
xor
cmp
pop
int3
outsl
enter
pop
das
cli
cltd
fdivl
xchg
daa
mov
jmp
and
ss
test
test
push
and
xlat
dec
mov
outsl
xchg
icebp
data16
sbb
stos
add
les
in
xchg
adcl
pop
std
inc
push
adc
hlt
sub
rclb
jo
sbb
vmovmskps
popa
add
pop
push
pusha
xchg
push
mov
rclb
icebp
cmpsb
jne
add
shlb
adc
dec
in
inc
sbb
shr
and
sub
push
inc
in
lock
fldln2
cmp
rorb
inc
or
mov
movl
inc
push
adc
cmp
mov
ret
xor
fwait
rolb
push
xor
or
aam
push
ficomps
test
adc
jl
and
sbb
xchg
ds
leave
icebp
outsl
adc
add
ret
addr16
js
mov
cmp
cmc
mov
das
gs
cmp
push
lods
mov
inc
push
adc
xchg
dec
cmp
lods
jb
scas
sub
adc
stos
in
or
aad
mov
in
cwtl
jno
sbb
xchg
push
iret
sub
andb
sbb
test
pop
leave
loope
mov
add
pop
pop
xchg
js
mov
fidivl
sahf
lret
aad
pop
cmp
cwtl
lods
loope
nop
add
addb
insb
pop
jecxz
xchg
cltd
aaa
imul
cmp
or
adc
leave
jp
shll
leave
lds
sub
imul
pop
pop
into
cwtl
xor
mov
cmpb
aad
test
mov
push
into
add
push
adc
sub
arpl
pop
dec
xchg
in
cld
sahf
mov
sub
aaa
lods
add
sbb
mov
lods
mov
pop
push
incb
out
hlt
test
int
push
dec
mov
mov
xor
add
scas
test
mov
in
fisubrs
jp
adc
addr16
dec
xor
mov
jmp
movsl
dec
jmp
sub
and
xor
mov
dec
popf
dec
int
inc
cmpsl
dec
sub
dec
loop
add
xor
inc
sub
ljmp
mov
xchg
add
mov
push
std
fstpl
std
outsb
and
das
mov
pop
sub
cmp
or
push
testl
push
das
cltd
mov
popf
jb
imul
addl
fcompl
dec
adc
push
sub
iret
cwtl
xor
imull
dec
cs
and
stos
add
scas
add
mov
addr16
lcall
daa
xor
leave
outsl
and
sbb
dec
icebp
jp
mov
imul
fwait
mov
movsl
adc
rcll
mov
scas
rclb
and
fwait
xor
mov
sbb
sub
dec
call
adc
dec
fcmovbe
lcall
sub
or
loope
cmpsl
xchg
pop
or
jne
dec
mov
pop
and
xor
sub
cmp
loop
dec
inc
pop
lret
or
popa
mov
fwait
adc
andb
movsb
dec
call
xor
test
aam
ret
pop
cmp
sub
add
and
fsubr
pop
mov
dec
addr16
lods
mov
inc
sbb
imul
lret
mov
ret
inc
test
js
cltd
sub
insb
sbb
das
stos
shrl
cmp
inc
mov
fbstp
pop
stos
out
bound
add
fxam
or
hlt
inc
inc
jge
inc
sub
cmpl
lret
push
sbb
push
adc
adc
mov
add
sarl
add
test
xorb
xchg
push
cmp
push
daa
pop
add
jmp
repnz
and
loop
int
fisubrl
jl
pusha
sbb
movsl
push
pop
mov
aad
and
test
xor
cmp
stc
lods
sub
fsubl
loope
xchg
fistpll
and
pop
je
lods
sbb
outsb
stos
xchg
push
enter
in
xchg
lods
sbb
xlat
jns
dec
inc
jge
loop
adc
repnz
sub
int
pop
jbe
hlt
inc
inc
jns
push
or
rol
push
adc
or
daa
sbb
pop
push
test
add
rorl
or
push
jae
in
out
inc
mov
insb
lods
jns
push
loopne
mov
leave
clc
movsb
cvtdq2ps
jo
adc
mov
push
pop
aaa
scas
push
aam
inc
push
adc
and
sub
lock
cld
pop
fiaddl
or
pop
inc
inc
shlb
mov
dec
lea
fdivs
imul
push
repnz
pop
cmp
lds
jl
inc
scas
mov
cmp
addr16
out
cmc
inc
jp
fs
cmpsl
mov
mov
dec
cmp
push
xor
fcompl
push
sub
imul
fcmovne
out
adc
ds
jno
bound
sbb
int
and
mov
sbb
in
pop
das
and
sub
inc
pop
xor
shl
adc
clc
lahf
imul
xchg
mov
lcall
loop
lds
inc
pop
fistpl
test
add
arpl
in
gs
loope
pop
mov
addl
rcr
insb
cli
insl
popf
and
mov
lret
add
mov
mov
add
test
notb
push
adc
aam
repnz
repnz
aam
or
popf
mov
jmp
adc
or
mov
cmp
mov
vunpckhps
and
push
adc
inc
sbb
cld
cmpsb
repnz
stos
mov
sub
xor
xor
xchg
add
sub
cs
or
cmp
bound
fwait
fs
or
inc
inc
daa
sbb
aas
mov
and
inc
jl
idivb
pop
xchg
pop
notb
test
jmp
fsub
imul
mov
lahf
jno
out
fisubrl
and
pusha
adc
sbb
mov
es
mov
and
push
adc
or
add
hlt
jmp
and
mov
fs
xchg
pop
jmp
loope
mov
jbe
ficoms
out
or
push
movsl
dec
push
or
repz
aad
enter
pop
cmp
xor
clc
mov
push
stos
add
push
pop
jnp
xchg
inc
shll
adc
jmp
popa
xlat
sbb
push
stos
push
xor
int3
fs
pop
bound
jge
or
lods
sub
or
mov
lock
imul
ficompl
adc
scas
lds
jns
pop
mov
fldt
ja
lret
and
inc
push
adc
xchg
push
xor
lret
lock
scas
sbb
rcll
cmp
xchg
cmp
xchg
test
mov
aaa
js
loopne
cmp
bound
mov
inc
push
subl
dec
inc
and
or
ss
dec
add
mov
fsubl
addr16
insb
or
dec
inc
add
mov
int3
out
outsl
imul
xor
es
mov
xchg
ds
jns
loopne
loope
and
jmp
or
out
pop
or
in
sbb
out
nop
lret
and
clc
jnp
loop
push
fdivrl
sub
test
enter
xchg
ss
dec
mov
insb
xchg
je
imul
dec
jnp
pop
sub
or
sub
xchg
out
mov
bound
xor
mov
jb
cmp
test
lcall
in
xor
fsubr
fistpll
dec
sbb
fidivs
stos
add
ret
mov
scas
test
pop
add
scas
adc
push
hlt
xor
xchg
dec
xor
imul
adc
roll
cmp
enter
aam
adc
mov
shll
mov
jmp
cltd
jp
mov
sub
pop
ret
iret
pop
fcomps
lods
inc
imul
popa
or
faddp
mov
stos
push
lods
push
sub
jb
pop
sub
add
pop
adc
cmc
jne
stos
andnps
sub
dec
or
leave
gs
js
hlt
sahf
les
or
inc
dec
inc
or
push
stos
push
xor
cwtl
push
adc
sbbl
pusha
div
mov
push
stos
aad
pop
xor
xlat
in
xchg
add
pop
ret
jmp
inc
lock
inc
rolb
push
cmpsb
fneni(8087
push
or
out
js
cmp
cmp
mov
cld
ja
ficoms
insl
push
ljmp
sub
pop
jo
aam
add
adc
dec
popf
das
or
sahf
test
or
sbb
push
push
xor
jnp
cld
mov
lret
and
mov
adc
sbb
test
gs
rcrl
dec
popf
cmp
out
jb
or
in
adc
inc
pop
xchg
fwait
xor
mov
pop
inc
cmp
mov
adc
inc
rolb
jns
cmpsb
jecxz,pt
gs
daa
xchg
pop
mov
cmpsl
loop
dec
pop
jns
std
loop
push
test
inc
into
lret
and
dec
mov
ljmp
gs
leave
ret
push
pushf
outsl
cltd
inc
jns
sub
push
adc
js
add
popf
scas
je
shrl
clc
lods
fs
jge
jp
adc
adc
mov
enter
xchg
lods
jmp
dec
les
inc
lock
sahf
fs
sbb
movsb
fisubrs
loope
cmp
fnstenv
or
scas
mov
dec
mov
subl
jmp
lret
lods
aad
jle
je
movsb
add
in
faddp
rol
mov
jge
mov
adc
adc
jmp
sar
mov
int
jno
addr16
ljmp
cmp
leave
xchg
mov
sub
cmp
int
push
clc
or
cmp
sub
jl
push
cmpsl
cmp
cmp
jno
mov
cmp
pop
sub
popa
jns
inc
xchg
aam
push
adc
push
adc
push
inc
pop
adc
enter
or
cwtl
hlt
push
inc
stos
or
test
fcmovbe
in
add
insl
shrb
jb
insl
push
mov
lret
sbb
bswap
cmp
pop
adc
mov
rcrl
and
stos
ss
or
sbb
cmp
adc
cmc
or
mov
stos
xchg
sarb
mov
dec
sub
inc
fdivl
shl
adc
sbb
sahf
mov
ds
push
push
adc
jmp
test
enter
push
xor
pop
adc
push
sti
mov
jge
add
pop
adc
jae
addl
std
icebp
pop
adc
enter
in
arpl
or
xor
or
dec
test
cmpsl
inc
sti
xchg
out
mov
ficoms
push
inc
push
or
sub
sbb
pop
adc
inc
movsl
mov
insb
out
adc
xor
imul
daa
dec
pop
cmc
mov
pop
adc
aaa
mov
cmp
pop
adc
jnp
sub
or
icebp
dec
push
push
sbb
adc
jle
cmp
pop
or
push
sub
nop
mov
ljmp
mov
fcomps
je
mov
mov
pop
inc
jo
pop
lods
cmp
loopne
jl
push
int3
das
xor
inc
test
mov
cli
sbb
xor
insl
pop
test
loopne
daa
cwtl
xchg
ds
cli
into
sbb
jl
xor
cld
test
in
ficoms
out
or
push
mov
xchg
xor
push
bound
loop
les
pop
clc
shr
sahf
sub
out
mov
pop
movsb
rcr
cmpsl
dec
cltd
cmpsl
out
push
loope
pop
dec
out
jmp
dec
int
jno
and
jmp
and
mov
leave
xchg
pop
loope
cmp
int
jb
push
mov
les
loop
notl
outsb
pop
mov
out
push
adc
xchg
xorl
adc
jne
inc
rcrl
sarl
sub
adc
ds
dec
popf
dec
cld
adc
lcall
push
insb
mov
jp
adc
mov
push
xor
les
xchg
lahf
cmp
popf
insb
xchg
insl
push
cmp
stos
sub
mov
out
adc
mov
fs
popf
dec
lds
lods
pop
push
pop
std
cs
fldenv
xlat
loope
ficompl
dec
jmp
push
out
push
dec
test
and
sbbl
pop
mov
setle
adc
fistpl
gs
pop
inc
mov
call
js
pop
jmp
add
mov
cltd
cmp
push
inc
push
dec
sbb
push
push
aaa
call
pop
loope
jbe
sub
xor
add
mov
and
mov
adc
push
pop
mov
inc
jae
pop
push
fsts
test
adc
cmpsb
xor
or
fmull
lcall
bound
inc
lods
ret
stos
push
xor
adc
lcall
adc
mov
clc
inc
imul
cmp
shr
lcall
sahf
popf
pop
mov
sbb
loopne
out
adc
jge
cmpsb
cmp
lds
jo
xchg
sahf
cmp
jl
aad
fisubrl
in
mov
adc
imul
xor
ljmp
jae
les
jmp
jo
pop
adc
pushf
pop
movsb
cld
pop
adc
inc
jb
pop
pop
fadds
adc
jae
icebp
xor
pushf
testb
mov
sbb
pop
mov
pop
adc
xor
mov
repz
adc
and
push
imul
pop
adc
sub
gs
mov
push
adc
les
movsl
lret
out
inc
imul
dec
xor
xchg
pop
pop
push
dec
mov
pop
xor
int
dec
sbb
cmp
fisubs
jnp
fidivs
and
out
dec
lret
sub
hlt
fcompl
jno
arpl
jmp
js
repnz
xor
lea
mov
mov
push
adc
call
cmp
add
adcl
cmpsb
ljmp
sub
pop
icebp
rorb
cmovge
rorl
fwait
jge
dec
inc
push
sbb
add
jecxz
popa
imul
mov
mov
ds
out
aam
mov
add
cmp
movsb
pushf
cs
inc
push
sbb
je
jne
out
mov
mov
xor
std
adc
test
fs
out
aam
lea
ja
nop
and
pop
std
stos
add
fidivrl
mov
xor
popf
lods
jmp
leave
inc
je
insb
push
test
cmp
inc
push
pop
mov
push
rorb
jle
lock
push
rcr
leave
clc
push
jmp
cli
sbb
in
push
addr16
cmp
cwtl
lahf
cmp
mov
out
push
adc
or
and
jns
cld
gs
rolb
inc
xlat
loope
xchg
pop
ror
mov
into
cli
and
bound
jecxz
mov
or
pop
adc
mov
out
loop
push
popa
shll
fcmovne
pop
mov
ljmp
jg
mov
xchg
sub
xchg
or
push
pop
clc
mov
jge
ja
pop
mov
jg
lods
sub
adc
push
lea
pop
inc
lret
scas
lahf
cmp
xor
or
ret
stos
push
stos
rcrl
jo
lret
testb
icebp
pop
cmp
mov
adc
jno
cltd
inc
xlat
cmp
pop
push
cmp
jle
imul
mov
push
in
cmp
lods
pop
cmp
xor
mov
or
out
push
adc
xor
pop
adc
out
push
add
jg
cld
mov
int
test
push
int
pop
stos
push
lods
mov
xchg
xor
sub
pop
adc
pop
clc
shr
sahf
dec
std
fsubrs
or
popa
cmp
sbb
push
sbb
push
mov
and
lds
adc
aad
push
es
cmpsb
sub
leave
inc
bound
mov
inc
inc
std
pop
shl
pop
dec
int3
pop
mov
insl
mov
mov
orb
icebp
push
cmpsl
cmp
loope
mov
or
cmp
ret
stos
push
xor
mov
popf
cmp
mov
mov
cmpl
xchg
in
push
add
push
adc
mov
loop
jmp
sbbl
jns
stos
fndisi(8087
lea
aas
lretw
pop
shl
push
out
lahf
and
les
pop
rcrl
insl
int3
ret
bound
push
adc
loope
mov
adc
je
cwtl
andl
cmpsb
or
fldenv
pop
pop
std
xor
jmp
cmp
out
jnp
aam
rcll
lods
pop
fcmovu
or
adc
lcall
jg
jle
adc
lret
hlt
jmp
ljmp
mov
cmpsl
out
add
rol
mov
push
int
push
jmp
cwtl
push
adc
sbb
arpl
repz
adc
jbe
pop
dec
cwtl
push
adc
add
adc
cmpsb
mov
aad
cwtl
push
adc
mov
incl
adc
ficoms
mov
cmp
repz
sub
pop
cmpsb
pop
fs
lcall
stc
and
jmp
lahf
mov
inc
mov
fmull
lcall
push
stos
pusha
xchg
cmpsl
cmp
jo
sbb
das
mov
xchg
mov
fdivrs
cmpsb
mov
out
jg
lock
mov
test
sbb
xchg
jno
repz
pusha
fsubs
cmpsl
inc
adc
into
inc
inc
inc
sbb
push
fld
int3
push
inc
inc
shrb
loope
bound
cmpsl
or
push
adc
pop
popf
xchg
loope
in
lock
sub
pop
cmpsb
sbbb
arpl
xor
or
out
mov
stos
mov
in
cmp
mov
adc
movsb
test
and
mov
out
sbb
test
fdivl
imul
sti
add
cmp
adc
lret
pop
cmpsl
inc
orl
fs
das
xor
es
mov
mov
adc
cld
in
sbb
mov
inc
hlt
inc
fdivrs
lock
rcll
push
adc
fstpl
mov
aad
pop
xchg
out
stos
lods
mov
jp
gs
and
dec
mov
popf
dec
int
jno
lret
jle
xor
push
test
inc
xlat
loope
xchg
push
pop
pop
mov
xor
jl
insl
mov
stos
shrl
pop
sub
jb
jo
push
sar
push
into
ret
aas
xchg
cmp
dec
inc
or
ret
stos
push
sar
xchg
inc
fistpll
mov
lds
mov
pop
adc
mov
adc
adc
mov
repnz
fadds
scas
cmp
lret
sar
pop
test
push
mov
int
xor
dec
ljmp
inc
dec
xor
adc
lods
dec
cltd
inc
fnstcw
mov
sub
imulb
jo
push
push
in
fcomps
js
test
gs
in
testb
pop
jne
jae
pop
cmp
fcomps
push
loop
push
test
add
loope
mov
popf
sbb
inc
push
jmp
xor
or
ret
stos
push
xor
pop
jae
xchg
adc
jmp
xor
cmc
stos
cmpsl
adc
aad
popf
insl
fisttpl
mov
mov
push
loope
pop
insl
fbstp
pop
scas
cmp
repz
icebp
cmc
ljmp
mov
insb
sub
sub
sar
push
into
ret
fists
inc
or
ret
stos
push
sar
xchg
inc
fistpll
mov
lds
mov
pop
adc
mov
adc
mov
cltd
cmpsl
lcall
sahf
cmp
jmp
fcomp
popf
outsl
pop
insl
cmp
jno
int
loopne
mov
scas
mov
test
out
dec
mov
dec
sti
fnclex
inc
pop
push
xchg
xchg
shl
pop
lcall
xchg
fistps
sahf
sbb
and
pop
jnp
sub
jl
popf
mov
add
xchg
dec
popf
cmp
push
dec
das
pop
adc
mov
cwtl
in
cmp
xchg
xor
inc
scas
out
xor
dec
call
xor
popf
out
mov
lods
rcrb
lcall
shl
gs
add
scas
inc
or
movsl
adc
pop
mov
inc
je
and
stos
sub
cmc
xlat
mov
sbb
inc
lods
mov
loope
dec
rcrb
mov
push
xor
rorb
int
mov
cmpsl
or
or
fwait
jl
mov
mov
cmpsl
stos
sub
jb
ret
and
sub
sbb
mov
jnp
xchg
adc
pop
iret
inc
cli
mov
mov
inc
jno
dec
xor
dec
nop
dec
add
shr
cld
adc
loop
push
mov
pop
push
xchg
push
mov
pushf
adc
pop
jmp
and
sbb
fneni(8087
movzwl
and
ret
cwtl
push
sbb
fadd
ret
jecxz
xor
insb
push
lahf
or
rcll
sti
xchg
push
fs
mov
cmp
lret
inc
repnz
imul
stos
cltd
pop
jo
test
stc
movswl
shr
cmp
and
pop
fisttpll
insl
insl
cmpb
or
insb
imul
loope
sub
negb
lea
repz
popa
cmp
idivb
inc
inc
pop
das
mov
mov
clc
fisubrl
dec
or
adc
inc
es
cltd
test
adc
jo
iret
ret
pusha
dec
jnp
jne
and
insb
outsl
jge
out
sub
pusha
mov
push
adc
sbb
pop
xchg
pop
inc
mov
sbb
loopne
and
addr16
jmp
dec
popf
dec
cmc
sbb
mov
sub
mov
enter
cmpsl
dec
jge
inc
sub
shll
mov
test
push
imul
dec
and
imul
fwait
pusha
mov
roll
stos
incl
and
sub
mov
xor
push
cmp
cmp
andl
ret
push
lods
fcmovbe
lcall
pop
out
mov
jmp
aam
out
faddp
inc
push
cwtl
addr16
jge
sbb
push
out
xchg
je
and
inc
movsb
cmp
in
push
std
aaa
push
push
test
leave
pop
cmc
pop
ret
daa
push
mov
and
jo
cmp
mov
and
mov
aam
out
push
sar
push
int
les
xor
or
push
pop
pop
imul
loopne
movsb
shr
push
inc
cmp
incl
fs
sarl
mov
sar
outsb
into
push
cmp
cmp
push
and
jne
dec
leave
dec
and
jmp
test
push
push
jecxz
add
xchg
aam
pop
mov
out
xchg
rcl
hlt
push
into
sbb
ret
cmpsb
cli
or
jae
lret
mov
into
push
in
mov
inc
fidivs
loop
in
stos
push
test
lds
arpl
lds
push
les
mov
xchg
fdivr
jp
xchg
out
jge
sbb
in
add
imul
add
leave
mov
sub
inc
push
out
jns
cld
test
lea
das
cmp
dec
movsl
sub
xchg
xlat
test
notb
inc
push
and
lret
push
sub
incb
mov
in
leave
inc
push
jno
pop
stos
push
lods
pop
call
xchg
mov
les
bound
fisubs
inc
dec
pop
lahf
fucomip
inc
es
loope
fwait
adc
jecxz
mov
jne
push
push
xor
cmpsb
adc
inc
xchg
push
cmpsb
dec
fdivl
leavew
push
addr16
jge
or
adc
push
insb
sahf
cmp
fdivrs
mov
pusha
inc
pop
loop
imul
sub
sub
push
cs
add
icebp
mov
xchg
test
xor
stos
inc
xchg
inc
pop
sbb
xchg
pop
insb
fwait
or
movsl
or
imul
inc
std
sub
es
dec
push
test
sbb
shrb
in
lret
cltd
ljmp
push
sbb
inc
inc
jle
into
cs
jge
testl
add
add
daa
mov
jg
mov
pop
pop
mov
inc
inc
cwtl
loope
xor
iretw
mov
jle
jne
pop
sub
mov
pop
push
ffree
inc
data16
aad
jae
enter
sbb
push
sbb
adc
push
or
loop
mov
sahf
adc
jle
test
mov
adc
add
leave
dec
cli
andl
rcrl
dec
cmp
fdivl
js
sbb
pushaw
lea
xchg
cmpsb
stos
in
inc
stos
lea
loope
push
adc
lcall
jae
sti
aas
mov
jmp
mov
flds
dec
lods
adc
adc
xabort
push
jl,pt
push
insb
cwtl
jno
int3
mov
in
adc
in
push
jo
cmp
cmp
pushl
and
daa
inc
repnz
cmp
jmp
sbb
jmp
push
pop
push
pop
bound
xchg
ljmp
int
inc
pop
sahf
movb
push
cmpsb
jbe
out
cmp
cmp
dec
js
xchg
add
jo
lock
pop
inc
push
and
sbb
xchg
sub
pushf
mov
pop
jl
mov
loop
dec
inc
jp
xor
fisubs
in
dec
cltd
dec
pop
sub
mov
fwait
dec
inc
cmpsl
mov
popf
mov
out
push
push
jp
sbb
and
cltd
dec
pop
and
xchg
xchg
add
cmpsl
push
xor
iret
lret
push
std
stos
mov
test
leave
lcall
xchg
or
cmp
int3
or
inc
pop
inc
mov
mov
sbb
lcall
pop
int
jbe
cmpsl
dec
popf
mov
dec
shll
in
add
jp
push
push
pop
test
clc
cmp
mov
mov
xor
outsl
loopne
inc
push
adc
mov
fstps
jmp
and
jbe
push
fisubrl
jmp
adc
out
fimuls
mov
cmova
ds
test
mov
cmp
xor
pop
int3
std
loopne
inc
out
or
sahf
cltd
stos
push
daa
adc
cmp
lods
pop
mov
or
inc
cmpsl
sub
push
sbbb
aad
insl
outsb
xchg
sub
imul
sbbl
cs
pop
or
cmp
sub
dec
dec
pop
aad
arpl
cmpsl
les
test
fidivrs
xchg
fldl
cmp
shll
fdivl
add
fistpl
xchg
pusha
mov
pusha
and
inc
fucomp
dec
in
cmp
iret
mov
mov
cmp
fdivl
add
shrl
ret
test
mov
repnz
inc
shrl
out
push
push
jnp
sbb
and
cwtl
dec
pop
and
push
adc
ljmp
sub
jecxz
push
jp
fmul
stos
cmp
and
dec
fs
push
pusha
daa
mov
scas
cmp
dec
add
adc
hlt
mov
and
dec
dec
fwait
inc
dec
sub
sub
inc
dec
popa
nop
shlb
pop
sub
push
or
push
dec
fwait
cmp
mov
or
jno
enter
sbb
das
in
js
mov
inc
pop
mov
add
addr16
ja
or
adc
movb
xchg
pop
dec
cmp
out
out
push
loopne
cmpsb
je
jmp
hlt
inc
addl
xor
mov
inc
add
in
dec
jo
loop
fnstenv
jae
je
mov
stc
orl
cltd
sub
push
loopne
out
xchg
iret
push
xor
inc
sbb
dec
mov
lods
pop
dec
xchg
cmpsl
lahf
lret
lods
imul
push
adc
lahf
lea
fwait
daa
addr16
nop
stc
mov
mov
sub
cs
add
sarl
xchg
aad
inc
mov
aad
xchg
cltd
ret
jae
dec
ret
out
idivl
ret
jp
xor
xor
sbb
sub
gs
pushfw
xor
inc
and
jo
push
cmc
cmp
pop
leave
lock
xor
insb
das
test
js
ficoms
pop
cmp
mov
fs
in
movsb
ss
xchg
sbb
sub
or
pop
cwtl
cld
clc
scas
add
cmp
in
sbbl
int3
dec
ret
push
mov
mov
out
insl
rolb
into
inc
xchg
and
clc
jmp
jp
xor
jle
xor
jae
push
in
pop
jmp
sar
dec
rcrb
test
enter
and
hlt
out
cmp
ret
das
xor
add
add
fidivrs
mov
jb
xchg
imul
adc
inc
push
adc
jmp
fdivl
pushf
outsl
movsl
and
mov
int3
lods
add
cmc
scas
dec
jmp
jae
push
aad
mov
mov
push
sub
add
xchg
les
shlb
int3
adc
pop
cmp
icebp
cltd
inc
arpl
call
mov
popl
faddp
loopne
adc
jmp
fistpll
sbb
andb
sbb
pop
mov
ja
stos
pop
xchg
and
inc
imul
sbb
mov
aad
pop
dec
into
mov
sbb
pop
lea
popa
fcoml
push
out
and
out
cmpb
push
in
push
sar
outsb
mov
fwait
imul
out
faddp
enter
sbb
mov
dec
je
xchg
fwait
sbb
xor
cmp
outsl
les
cli
dec
ret
push
lods
nop
jo
inc
jbe
loopne
mov
clc
loop
cmpsl
xor
shlb
add
inc
shl
outsb
inc
xchg
imul
cli
roll
mov
popf
dec
movb
stos
push
ljmp
xor
xor
push
mov
imul
push
pushf
insb
inc
adc
test
std
adcb
sbbb
pusha
xor
pusha
and
gs
inc
fistpll
mov
aas
inc
push
adc
xchg
int
and
enter
add
rorb
push
repnz
testb
aad
mov
into
out
add
in
fmulp
ret
sbb
fcomip
movsl
push
inc
filds
pop
jmp
dec
vcvttpd2dqy
js
cld
ret
pop
push
test
xor
aaa
sub
push
lahf
cmp
and
cs
or
add
push
adc
push
movsl
cmp
adc
mov
popf
cmp
jg
pushl
mov
push
movsl
pmuludq
cmp
lret
pushf
xor
out
in
mov
dec
adc
xchg
jne
ret
inc
push
adc
ds
cmpsl
lock
mov
filds
out
mov
test
jl
adc
fstp
lret
push
mov
ljmp
push
adc
andl
xchg
ret
test
cmp
repnz
sbb
inc
push
dec
sbb
or
and
or
cld
stos
in
je
mov
push
lods
flds
and
addr16
imul
jle
mov
fdivrs
mov
movsb
call
inc
push
pop
mov
mov
add
sbb
lret
pop
mov
dec
mov
and
icebp
xchg
inc
or
dec
mov
fidivl
xor
jne
mov
orb
xchg
ss
in
xchg
clc
xchg
lret
aam
je
jne
add
mov
sbb
or
testb
mov
adc
test
out
stc
clc
xor
cld
mov
scas
cld
mov
xor
scas
or
imul
les
out
enter
jne
mov
sub
leave
mov
subb
adc
daa
add
inc
lock
ret
cmp
xchg
stos
test
fcompl
or
fwait
and
cmc
ret
jo
inc
clc
mov
sub
push
adc
daa
cwtl
lcall
and
dec
subl
push
jl
lods
pop
sbb
mov
mov
in
orb
ret
push
cmpsl
fistpl
pop
mov
xchg
add
add
aad
sbb
inc
jb
gs
sub
fistpl
xchg
inc
dec
jmp
push
cmpsb
adcb
sbb
in
sahf
sub
cmp
jo
fwait
out
stos
ljmp
cld
aam
mov
imul
xchg
fstpl
cmp
mov
add
or
test
dec
popa
xchg
push
pop
clc
mov
imul
enter
test
dec
push
add
push
adc
mov
shll
cmpsl
adc
inc
leave
push
imul
jns
sbb
cmpl
cmp
pop
mov
les
pop
rcrl
insl
int3
shrl
push
bound
push
adc
loope
mov
lock
fiadds
mov
roll
sbb
jmp
xchg
xor
outsl
sahf
cmp
push
sub
mov
add
ss
push
xchg
add
cld
fwait
xor
xchg
test
aad
mov
into
ljmp
inc
dec
inc
or
mov
xchg
inc
movsl
push
adc
sub
mov
pop
jg
daa
jl
clc
cmp
push
sti
fndisi(8087
lea
xor
cmpsl
loop
les
pop
xchg
shr
sahf
sub
into
fnstsw
insl
nop
scas
fsubrs
and
mov
dec
popf
cmp
jmp
adc
fldl
pusha
pop
xlat
stos
clc
cmp
aam
fiadds
leave
sbbl
mov
sbb
fwait
sbb
jle
cmpsl
adc
push
and
mov
xchg
mov
mov
imul
cwtl
addr16
and
push
mov
mov
in
rcrb
les
pop
mov
paddb
lods
pop
cmp
push
test
inc
xlat
loope
xchg
push
pop
pop
lcall
out
mov
cltd
jge
insb
ror
xlat
stos
and
loope
mov
add
cmp
cmpsb
dec
or
fiaddl
or
iret
push
aad
inc
nop
cmpsb
cmpsl
dec
movsb
cwtl
mov
dec
mov
jmp
mov
mov
mov
mov
lahf
mov
out
jno
aas
mov
mov
jno
push
add
mov
aam
inc
xchg
dec
roll
push
scas
and
out
ds
leave
fdivr
pop
popa
sbb
pop
inc
dec
mov
push
xor
jo
lcall
mov
int
xchg
fcoml
cmp
adc
nop
mov
xchg
xchg
jle
mov
mov
add
or
rorl
mov
sub
sub
pusha
pop
dec
lods
mov
test
add
imul
outsl
fwait
jb
lea
dec
mov
test
adc
mov
dec
sbb
mov
in
adc
imul
xchg
cmpsb
sub
in
or
ds
adc
sub
mov
push
push
or
pop
push
mov
and
fisttpll
pusha
xchg
pop
negl
push
sahf
push
xor
test
adc
clc
int
lods
gs
imulb
push
adc
push
ds
mov
inc
and
loope
mov
mov
fwait
jecxz
add
cs
jmp
dec
imul
int3
and
xor
fs
dec
jle
jp
fstl
xchg
out
jns
jb
cmpsb
adc
or
sub
daa
cmpsb
insl
ds
fsubrl
int
into
lds
mov
test
dec
add
cwtl
inc
addl
pop
sbbb
shll
outsl
sub
sbb
push
fidivl
nop
jno
loopne
test
jno
ret
int
mov
popf
add
leave
jecxz
imul
jp
gs
dec
pop
inc
jae
ljmp
sub
loope
xchg
pusha
pop
xchg
mov
fsubr
pop
testl
xor
mov
dec
popf
xchg
add
inc
pop
jbe
fmull
mov
and
ficoml
rorl
cmpl
adc
mov
xchg
jbe
in
xor
inc
roll
flds
dec
push
loopne
clc
push
lods
jp
sahf
insl
push
es
pop
shl
inc
rol
arpl
ret
adc
xchg
int
pop
inc
mov
jp
hlt
leave
call
push
adc
mov
pop
mov
in
and
rcl
cmpsl
sbb
mov
movsl
mov
pop
adc
sbb
cmpsb
and
push
adc
shlb
inc
push
dec
adc
cmpsb
jb
push
gs
popf
cmp
shrl
orl
cs
push
and
jno
jmp
mov
xchg
popf
imul
lcall
and
in
push
xchg
sub
arpl
aad
data16
push
sub
cmp
fsts
push
mov
cli
push
daa
or
push
int3
daa
push
ja
orl
and
mov
mov
pop
mov
pop
push
cmp
cmpsl
cmp
dec
push
gs
push
dec
adc
sbb
lret
daa
xchg
pop
fidivl
ja
push
sbb
mov
pop
mov
mov
xchg
xor
sub
arpl
adc
int3
adc
fisubs
stos
dec
cltd
inc
fdivl
loopne
sub
cmc
lret
shll
lcall
adc
push
es
push
mov
push
mov
les
xor
mov
jmp
pushf
lods
pop
outsl
inc
in
adc
fcomps
lahf
les
or
scas
lods
mov
push
pusha
fwait
in
ret
lods
push
fucomi
pop
cmp
ja
fdiv
xlat
mov
ret
frstor
cmp
repnz
out
cvttps2pi
dec
scas
mov
push
out
xor
int
jl
push
xchg
int3
lock
sbbb
dec
push
inc
adc
mov
and
push
push
cwtl
mov
inc
stc
inc
mov
cltd
movsl
lahf
out
xchg
cmp
sbb
inc
iret
stos
sbb
inc
or
mov
add
int
mov
pop
lret
mov
out
adc
stos
cmc
xor
sub
fwait
sbb
movsl
lcall
sbb
in
sbb
pop
icebp
fidivl
mov
dec
push
mov
adc
clc
ds
sub
push
out
iret
cld
and
xchg
pop
mov
xchg
push
repnz
and
stos
inc
out
shlb
lcall
iret
imul
push
cmp
mov
mov
rcrl
mov
push
or
jge
jg
rorl
das
insb
icebp
mov
mov
std
and
fxam
adc
and
inc
jnp
sbb
inc
inc
cmp
jae
test
lods
addl
mov
ret
ficoms
xor
ret
mov
push
pop
sahf
mov
in
xchg
mov
call
xrelease
addr16
cli
ds
adc
jge
jno
js
xor
jne
outsb
shl
scas
sbb
minps
dec
adc
xlat
inc
push
adc
pusha
mov
dec
sbb
jl
and
pop
shl
mov
cmp
lahf
cmpsl
les
push
lret
bound
rol
or
inc
mov
sub
adc
cmpl
cmpsl
dec
loope
xchg
sub
mov
jp
stos
push
mov
sub
out
repz
xlat
out
rcrb
jb
dec
addr16
shrl
out
push
push
jp
sbb
and
cltd
dec
pop
and
bound
pushl
cmp
fs
aad
sub
inc
push
adc
xor
int3
xchg
dec
std
sbb
aas
jns
sbb
mov
xor
pop
loope
les
sbb
outsb
and
push
pop
and
mov
gs
ja
mov
mov
or
jp
sbb
adc
gs
arpl
cli
lods
dec
popf
dec
into
push
scas
pushf
movsl
aas
pop
fstpl
ljmp
push
out
cmp
dec
jmp
dec
in
mov
scas
sbb
es
cmpsb
dec
mov
ds
pushf
pop
out
jbe
mov
dec
out
fimuls
push
adc
dec
jbe
push
lods
stc
lock
jp
hlt
xchg
xchg
add
adc
or
cltd
mov
cltd
dec
pop
cmp
cmp
pop
mov
sbb
pop
adc
cld
fisubrl
lret
fnstsw
adc
adc
push
pop
pop
pop
sbb
jmp
inc
fs
mov
mov
push
cmpsb
and
fucom
inc
push
cmpsl
xor
xor
xchg
dec
push
fldl
cmp
cmp
aam
decb
push
xchg
inc
mov
inc
clc
cmp
pop
sub
mov
shll
xor
xor
push
adc
dec
mov
mov
pop
xchg
out
stos
scas
mov
pushf
xor
out
dec
push
cmpsl
dec
pop
inc
pop
call
cmp
lahf
ljmp
mov
dec
out
bound
ret
pusha
dec
iret
iret
cmpsb
adc
xor
daa
lret
or
jp
test
xchg
es
popf
xchg
sub
xor
mov
and
sahf
popa
pop
inc
lds
dec
jmp
push
pop
mov
dec
shl
cwtl
pop
dec
jns
sbb
adc
iret
fildl
pop
pop
xor
adc
pop
dec
add
pop
adc
sti
jb
dec
push
lret
ret
inc
xor
stos
jle
punpckldq
pop
lods
push
test
push
xchg
cmpsb
hlt
push
xchg
and
stc
repnz
bound
adc
loop
push
push
test
in
repnz
hlt
sub
outsb
pop
loop
mov
inc
into
xor
pop
orb
stos
cmc
mov
cs
pop
sub
mov
movsb
cvtps2pd
jle
and
in
out
movsb
xchg
outsl
push
jb
push
inc
pop
aas
fwait
jb
mov
hlt
inc
ret
nop
ret
and
leave
pop
enter
fistpl
icebp
mov
lods
xor
xchg
faddp
int3
scas
dec
stos
adc
mov
mov
ds
jecxz
and
dec
push
test
out
adc
add
pushf
mov
roll
imul
adc
lret
fsub
loopne
adc
stos
add
cld
out
adc
add
nop
arpl
int3
cmp
ss
push
adc
add
mov
adc
das
xchg
push
addl
add
clc
jecxz
sub
es
mov
cltd
adc
dec
mov
xor
outsb
dec
cli
mov
out
sub
cmp
sbb
sub
lret
scas
das
mov
fwait
popa
inc
outsb
or
rorb
insb
loop
sbb
mov
cmpb
sub
mov
mov
cmp
cmpsl
adc
test
lds
fistl
insb
loope
notb
sub
mov
lds
loop
subl
push
or
enter
lds
cmp
ret
test
adc
in
out
push
adc
js
xor
lock
jp
mov
sub
test
pop
mov
inc
cmp
scas
or
pop
adc
pop
sarb
adc
pop
pop
sub
int3
lcall
or
pop
adc
pop
loopne
mov
mov
pop
pop
sub
iret
lcall
or
pop
adc
pop
add
mov
mov
pop
pop
sub
into
lcall
or
pop
and
mov
mov
and
pop
xor
shrb
xor
frstor
and
fadds
push
sub
jecxz
int3
lcall
insl
inc
adc
movsb
out
int
lods
sqrtps
ret
stos
push
shl
stos
dec
dec
imul
les
mov
cltd
mov
loope
call
pop
cli
push
inc
inc
xor
fwait
jl
jo
adcb
subl
cmp
pop
mov
gs
movsb
sahf
cmp
push
imul
out
mov
stos
jmp
sub
mov
ret
xchg
sub
negl
xchg
mov
mov
push
dec
dec
fsubl
in
subb
push
sbb
stos
pop
adcl
nop
dec
mov
xor
dec
push
adc
rcrb
jns
lock
andb
mov
imul
or
adc
in
testb
xor
das
pushf
mov
jmp
test
les
push
or
xchg
dec
xor
xor
jb,pn
arpl
or
xor
add
pop
pop
mov
ss
xor
ficomps
lds
movsb
and
sahf
addr16
adc
int3
fildl
sub
jb
sub
jmp
dec
popa
jl
fisubl
or
jge
in
pop
fcomip
lcall
outsb
enter
stos
cli
or
inc
stos
std
adc
les
inc
inc
push
adc
mov
jnp
shll
jecxz
push
adc
popf
out
lahf
loop
push
je
add
mov
jle
sub
test
add
outsl
sub
mov
mov
adc
mov
daa
shlb
clc
sbb
ret
jne
ss
scas
cmpsb
loope
pop
adc
xchg
xchg
ret
push
adc
cltd
lea
jmp
inc
or
in
mov
xlat
das
mov
shlb
push
xor
sbb
popf
jg
cmp
xchg
outsl
aaa
push
xchg
imul
mov
mov
jecxz
stos
xor
push
xchg
cmp
in
mov
sbb
push
jecxz
or
insb
mov
popf
adc
mov
and
ret
test
xor
ljmp
mov
fsubrs
sub
fistpll
adc
mov
pop
call
mov
xor
inc
jge
shll
cmc
push
add
jnp
mov
pop
inc
pushf
popa
xchg
add
pop
test
adc
out
pop
mov
push
sub
xor
mov
sahf
popa
in
cmp
add
mov
leave
cli
pop
pusha
mov
in
outsb
ret
xor
fdivs
loop
adc
addb
add
test
mov
lretw
daa
mov
jmp
int3
add
push
dec
out
or
pop
pop
inc
divps
fisubs
ljmp
les
inc
popf
cmp
dec
jl
orl
pop
decl
in
xor
jb
pop
fcompl
jne
sahf
imul
push
sahf
hlt
mov
aaa
cmpsb
xchg
ret
mov
cmp
popf
pop
push
xor
mov
inc
and
pushf
shl
testb
loop
les
push
and
cmp
mov
pop
and
sbb
sub
popf
cmp
arpl
cmpsl
les
into
sbb
stos
sub
pmaddwd
xchg
mov
addb
xlat
dec
jp
inc
add
sti
rolb
sarl
xchg
pop
dec
mov
gs
mov
fwait
out
xor
mov
cltd
inc
fdivrl
mov
jl
lods
xchg
cmp
jg
inc
push
adc
push
sub
cltd
mov
inc
cli
inc
popf
cmp
push
and
jno
inc
dec
add
pop
lea
es
std
fstpl
cmc
bound
inc
jle
push
cs
shll
stos
xchg
inc
test
push
lods
fcmovbe
outsb
int
push
addr16
repnz
out
xor
sbb
cmpsl
dec
popf
mov
clc
mov
dec
push
stos
pslld
lret
push
sub
jne
dec
popf
dec
int
dec
sub
sarl
push
out
pop
icebp
fwait
mov
push
adc
arpl
or
pusha
stc
lock
ja
or
in
and
rolb
loop
add
pop
aam
je
dec
movsb
mov
or
mov
rclb
push
aaa
lcall
popf
cmp
xor
mov
or
fildll
je
push
test
xor
lds
fneni(8087
roll
pop
push
cltd
mov
mov
inc
push
dec
push
cmpsb
mov
call
sarb
insl
pop
in
pop
or
inc
lea
fs
adc
cmp
imul
roll
into
ljmp
shrb
daa
adc
xor
out
pop
enter
mov
xchg
cmp
push
out
push
dec
push
dec
stos
inc
jmp
xor
lret
lret
push
cmp
sub
inc
in
mov
scas
xchg
mov
jo
and
jno
icebp
or
jno
and
jle
sti
lret
xor
imul
sub
jecxz
hlt
sbb
lds
scas
mov
mov
cmp
mov
push
adc
add
xchg
bound
inc
or
cltd
and
pop
mov
dec
ljmp
sub
inc
int
pop
adc
push
outsl
and
lret
mov
dec
fwait
pop
ret
sbb
in
shrl
ret
int3
mov
or
pop
push
fsubl
lods
mov
xchg
insl
cld
scas
lock
jo
sahf
ficompl
mov
frstor
jge
lock
jnp
xchg
adc
test
lcall
nop
andl
inc
push
insl
jmp
xor
jecxz
or
inc
call
subb
lret
or
pop
dec
sbb
pop
cld
dec
xor
jnp
cmp
add
movsl
cmp
push
lret
aad
lret
xor
xchg
jae
push
push
adc
mov
jo
test
add
enter
push
fstpl
and
ret
lcall
sbb
push
sbb
leave
dec
loop
mov
push
fst
push
ss
inc
inc
cmp
or
arpl
mov
dec
fistl
dec
and
xor
mov
pusha
jae
xor
imull
push
pop
jbe
sbb
mov
dec
dec
ror
adc
dec
sub
insl
sub
jno
push
les
jmp
mov
fwait
out
stos
sbb
ljmp
push
repnz
lods
sar
xchg
fucomi
pop
push
cmp
mov
or
imul
movsl
mov
aam
lret
push
fiaddl
sarl
inc
hlt
out
fidivrs
stos
and
shlb
cmp
dec
popf
cmp
jmp
and
mov
ret
test
mov
push
dec
adc
jl
dec
popf
cmp
adc
jnp
or
sub
dec
cltd
xor
lret
je
dec
jmp
xchg
shlb
inc
test
mov
push
in
iret
cltd
xor
fisubrs
jns
shll
out
leave
mov
xchg
mov
inc
aam
loopne
xchg
dec
sub
xor
adcl
xor
cmp
clc
mov
push
pop
sbb
popf
insb
ret
jns
int3
pop
scas
daa
xchg
jne
xor
cs
rcrl
push
sbb
outsl
aad
jge
cmovl
lds
lcall
rcrb
mov
out
fisubrs
inc
inc
mov
or
sub
cltd
hlt
cmp
fldt
sbb
shll
jns
fidivs
xchg
lret
and
add
or
mov
out
fmulp
rorb
inc
add
xor
icebp
inc
pop
loope
pop
add
inc
push
dec
test
and
sbbl
pop
in
cmp
daa
sbb
dec
mov
sub
outsb
dec
jns
outsb
inc
or
push
test
sahf
in
movsl
les
cmpsb
lds
lcall
shrb
mov
in
ret
add
xchg
mov
pop
cmp
jmp
mov
dec
jns
daa
fdivs
dec
test
or
push
fldt
fs
and
inc
push
adc
inc
jl
cmp
lret
jp
cld
div
inc
xchg
pop
movsl
and
inc
push
shll
push
cmp
jnp
mov
lret
pop
popa
adc
add
mov
or
and
jae
inc
mov
pop
int3
xor
je
push
adc
cwtl
pop
cmp
lret
loop
fistps
je
and
push
cmp
mov
jb
mov
daa
sti
add
cmp
je
pop
cs
lea
jmp
sahf
jo
inc
mov
aam
nop
sbb
xor
mov
dec
inc
test
push
cmpsb
cmp
push
xor
adc
stos
push
mov
add
in
fistps
or
loope
mov
push
sub
in
xchg
mov
inc
sbb
jnp
xor
mov
test
jg
scas
pushf
push
test
inc
push
adc
jbe
and
clc
xor
imul
cs
imul
or
mov
rcrb
into
xchg
rolb
cld
leave
pushf
cmp
movsb
or
mov
aam
mov
mov
jge
ficompl
push
lcall
jl
push
in
jge
dec
outsl
pop
movsb
mov
and
and
fdivrs
es
jecxz
movsl
aad
loop
or
lea
stos
pop
popf
pop
sahf
pop
jne
fst
inc
mov
xchg
sbb
cmpsl
push
cmp
rorb
xor
mov
dec
cmp
out
cmp
sahf
test
stc
push
ret
sbb
cwtl
popf
fs
aad
dec
aad
push
aad
jns
sub
jb
test
outsb
dec
into
push
shrl
inc
leave
cmp
ljmp
dec
adc
add
cmp
push
xor
inc
test
pop
sarl
cmp
shlb
call
push
or
jae
cmpsl
les
sub
push
or
adc
push
cmp
fstl
jge
pop
jmp
jne
rcr
jne
dec
rolb
aad
mov
adc
gs
xchg
inc
popf
cmp
rol
jb
adc
je
jg
ret
test
mov
push
sub
push
sub
dec
pop
dec
int
mov
fcoml
ficomps
xor
mov
popf
mov
cltd
insb
mov
xchg
and
pop
cmpsb
jbe
xchg
lret
and
sbbl
add
lret
int
std
push
popf
xchg
jmp
mov
push
push
cmpsl
cmp
xor
push
and
cmp
mov
and
inc
inc
daa
sbb
xor
adc
mov
dec
mov
enter
orl
pushf
bound
mov
add
push
jae
push
sbb
sbbb
mov
mov
mov
push
arpl
mov
popf
fs
jp
add
and
cltd
xor
jg
fimull
adc
je
shrl
out
fmulp
rolb
out
jne
shrl
push
adc
sarl
cmp
ret
adc
mov
cmc
pusha
fsubl
cs
adc
pop
in
cmp
hlt
mov
mov
or
out
inc
jg
cwtl
xor
pop
call
jne
and
pop
jbe
fnsave
andb
ficoms
insb
dec
adc
jno
xchg
push
mov
sahf
mov
ljmp
repnz
adc
call
arpl
hlt
xchg
je
sahf
inc
push
adc
dec
push
xchg
dec
jmp
in
test
std
out
mov
inc
in
pop
xor
int3
jnp
xor
aad
test
cmp
nop
enter
pop
rorb
xchg
lods
call
push
fst
lcall
fwait
pushfw
mov
xchg
add
into
push
dec
jecxz
dec
iret
jg
xor
stos
jnp
or
mov
inc
stc
pop
mov
mov
mov
xor
adc
movsl
adc
sub
iret
adc
daa
xchg
sti
jmp
sarb
and
mov
adc
mov
mov
jp
hlt
mov
and
lret
jecxz
std
add
jbe
sbb
hlt
mov
jbe
adc
in
dec
movsl
pop
fdivrp
bound
sbb
in
xchg
and
ret
mov
sbb
and
andl
fstps
inc
cmp
loope
push
fidivs
cwtl
cmp
jae
bound
mov
or
lods
or
in
dec
or
pusha
mov
pop
fdivs
xor
fucomi
stos
jge
xor
ja,pn
add
cs
jge
fisubrl
lahf
cltd
sub
cltd
jae
bnd
push
out
pop
jge
js
pop
aam
das
imul
sahf
inc
push
adc
paddq
xchg
adc
jecxz
popa
and
push
push
adcb
rcrl
lock
pushf
bound
and
cmp
fwait
mov
stc
jb
sti
cli
shll
pop
xor
aad
out
daa
sbb
add
imul
xchg
jb
dec
addr16
rorb
ficomps
push
fcom
std
jbe
fstpt
adc
daa
cltd
cmp
ret
adc
mov
cmc
pusha
cmp
mov
cs
adc
pop
in
cmp
hlt
mov
mov
or
out
inc
sahf
push
cltd
xor
addr16
jmp
je
cmp
pop
pop
sub
fidivs
xchg
andl
outsl
dec
adc
jb
xchg
push
shl
push
dec
ss
les
push
xor
push
push
fisubs
mov
adc
pop
pop
and
lahf
lahf
and
les
rclb
lea
inc
and
jbe
cmpl
cmpsl
dec
loope
stos
fwait
popa
mov
aaa
jns
out
fidivs
xchg
xchg
stos
fiadds
sub
ss
push
sub
jmp
cmp
sbb
clc
outsb
cmc
ljmp
jbe
out
cmp
or
mov
imul
sub
jecxz
fldl
imulb
fistpll
mov
and
les
ja
sub
outsl
inc
icebp
lcall
in
or
xor
inc
lahf
popa
test
pop
int3
add
shrl
out
fmul
cmpsb
push
sub
out
lds
addr16
in
dec
pop
int
pop
and
stc
outsb
dec
lds
or
push
aad
jge
sub
jb
xlat
sub
cld
xchg
dec
into
push
dec
sarl
adc
testb
jbe
out
cmp
cltd
xor
pop
lcallw
stos
mov
mov
stos
subb
fnsave
addb
bound
push
loop
or
fiadds
xor
and
flds
cltd
mov
inc
mov
sbb
sub
sbb
ret
push
fsubr
push
xor
mov
cmp
sbb
xor
lret
sub
loope
mov
out
jecxz
and
cmp
ret
cmp
jbe
push
add
mov
lods
fcomps
mov
adcl
in
mov
mov
jo
ror
dec
es
imul
xchg
mov
mov
ret
test
enter
aaa
jnp
sub
inc
dec
dec
js
xor
xchg
cwtl
push
dec
sub
inc
test
imul
shll
test
rolb
jl
fldcw
or
lock
dec
stos
lods
incl
and
jg
mov
jmp
adc
dec
xor
fwait
movsl
outsb
imul
push
cmpsb
testb
sub
cwtl
dec
out
or
arpl
add
stc
rcll
lods
aam
mov
addr16
push
cmpsb
cmp
pop
iret
lret
hlt
cmpsl
adc
enter
sbb
out
add
ficompl
mov
mov
mov
ffreep
bound
sbb
das
popa
sub
cmp
pop
orb
fwait
add
mov
inc
sub
sub
cld
out
lea
stc
sbb
mov
jl
jle
cmp
rcrl
scas
lods
fsub
in
or
pusha
enter
jno
inc
ret
mov
mov
pushf
sarb
cmc
pop
adc
xor
push
movb
cmp
out
jne
sub
jmp
push
mov
in
add
mov
add
mov
es
insl
xchg
clc
idivl
into
inc
bound
popf
cmp
inc
test
adc
mov
push
adc
das
mov
xor
les
pop
xchg
andl
inc
fdivs
cmp
out
adc
cmp
aad
jle
addl
pop
cmc
ljmp
pop
repnz
gs
nop
mov
jmp
dec
cmp
aaa
xchg
andl
push
cmp
rcll
jnp
jmp
sbb
shll
aam
iret
enter
jns
lahf
adc
mov
dec
pop
fldl
es
les
clc
adc
xor
roll
pop
dec
cltd
xor
icebp
dec
pop
loope
pop
jl
jmp
addl
stos
or
inc
push
adc
loope
xchg
inc
jp
inc
xor
aas
mov
stos
xchg
and
adc
mov
sub
xor
push
dec
loop
lock
push
aad
gs
mov
sub
jbe
cs
popf
popa
je
mov
add
test
mov
pusha
cmp
pop
cmp
lds
inc
addr16
in
cmp
sbb
inc
les
popf
cmp
push
cwtl
mov
sub
gs
ret
cmp
aad
arpl
xorl
xor
fistpl
and
xchg
push
push
arpl
xchg
cmpsl
dec
jmp
dec
ficoml
pop
stos
push
lods
pop
call
inc
push
adc
xchg
rolb
idivl
test
jne
push
and
mov
in
icebp
inc
lds
add
fldt
popf
cmp
lods
setns
jns
mov
push
cmpsb
xor
mov
dec
sub
mov
das
call
inc
xorl
fiadds
imul
arpl
push
cmp
aad
push
lock
leave
std
sbb
jo
into
dec
and
das
mov
jmp
cmpsl
les
mov
andb
pop
and
mov
shrb
cmpsb
xor
mov
fstpt
jbe
outsl
mov
dec
push
jbe
int3
fsubl
ret
insl
mov
push
adc
fmull
inc
adc
aam
data16
rcrb
mov
adc
fidivs
xor
add
jecxz
lret
push
cmp
xchg
ds
add
adc
mov
cmovne
test
inc
dec
xor
mul
or
inc
les
or
sbb
int
cmpsb
mov
enter
lds
mov
xlat
sub
rcrl
scas
lods
fsub
in
or
imul
inc
mov
fimull
cmpsl
and
imul
jle
test
pusha
lret
stc
test
pop
imulb
sub
push
pop
lcall
xchg
std
jle
out
pop
pusha
les
jns
jecxz
sub
ljmp
sbb
bound
dec
into
pop
jns
inc
shll
enter
push
lods
adc
imul
xor
andl
aad
lret
mull
pop
jns
xor
popa
int
call
daa
dec
pop
outsl
lcall
fidivl
inc
pop
hlt
out
sti
mov
stos
push
popf
test
leave
cmpsb
cmp
jecxz
jo
cs
idivb
inc
sbb
mov
push
adc
daa
loope
hlt
stos
push
int
enter
cmpb
sbb
gs
nop
sti
fldcw
xor
mov
rclb
and
rorb
adc
leave
les
jmp
cmpsb
pop
jle
fildll
mov
decb
push
or
jmp
mov
fcom
test
pop
gs
mov
xor
cmp
rdmsr
mov
inc
insl
push
jns
push
cs
fsubs
shll
and
popf
cmp
mov
add
notb
ret
stos
push
aam
push
gs
movsb
cmpsb
dec
popf
mov
jmp
cmp
mov
test
cmpsl
sub
fidivl
inc
leave
xor
cmpsl
dec
pop
cwtl
inc
sbb
add
fsubr
aad
push
insl
push
rorb
sbb
gs
xchg
bound
push
pop
fwait
mov
and
lds
ds
pop
mov
ret
push
lods
adc
sub
mov
and
mov
fucomp
dec
cmp
in
jne
push
insb
shll
cmp
popf
cmp
daa
sahf
addb
adc
and
adc
pop
inc
xchg
sub
enter
popf
popa
dec
cmp
mov
add
aad
sub
inc
ljmp
popf
cmp
mov
inc
dec
outsb
jge
rcrb
bound
push
push
xorb
or
push
mov
popf
sbb
in
jmp
cwtl
lods
and
test
jae
dec
loop
xchg
sub
leave
popf
cmp
test
fcomip
cmc
ljmp
push
inc
xlat
and
pop
das
adc
int
inc
testb
dec
add
adc
shlb
xor
pop
inc
pop
mov
inc
dec
call
les
outsb
cmp
cmc
inc
pop
jp
rcl
cmpsb
dec
cltd
test
popf
cmp
push
xor
inc
inc
jecxz
sub
fucomp
push
fcomps
aas
adc
ss
cmpsl
dec
out
mov
insb
sub
ljmp
inc
fdivrl
add
mov
dec
xor
pop
cmp
aam
imul
test
in
dec
adc
test
jmp
insb
dec
packssdw
cmpsb
dec
loopne
ja
fidivl
test
jmp
push
xor
call
fldcw
sub
xlat
int3
lahf
pop
js
push
nop
push
dec
movsb
and
mov
stos
pop
clc
pop
gs
xor
jecxz
dec
dec
mov
dec
inc
call
xlat
inc
outsl
mov
xchg
stos
ss
out
enter
stc
push
mov
movsl
inc
jge
les
sbb
out
and
gs
mov
pop
xor
cmp
mov
je
jbe
or
sbb
in
ljmp
mov
test
jae
mov
lds
mov
int
cmp
stos
outsb
xor
rolb
cmpsl
inc
leave
push
lcallw
push
ficompl
mov
mov
in
jnp
pop
jb
mov
lods
rcll
inc
sbb
pusha
sbb
mov
push
mov
mov
cli
push
push
inc
and
jo
int3
imul
in
jecxz
cmpsl
repnz
outsb
and
popa
push
mov
or
xchg
shrb
rorb
ret
lret
xor
and
sub
xor
xchg
imul
push
cli
movsb
xchg
mov
pop
ret
es
popf
shll
test
and
xor
popf
imul
push
mov
sbb
mov
push
pop
pop
das
daa
mov
xchg
imul
cs
push
arpl
dec
pop
stc
mov
mov
mov
arpl
mov
stc
or
add
lods
or
pop
sbb
out
cmc
ljmp
push
lcall
mov
cmpl
call
bound
std
add
mov
mov
mov
add
pop
cmp
shll
mov
pop
add
pop
fcoms
sbb
jmp
mov
mov
xor
pop
mov
mov
popf
insb
xchg
insl
ret
test
movb
jmp
push
repz
je
pop
inc
push
sbb
pop
adc
daa
mov
loopne
and
xchg
cmp
mov
pop
das
js
out
lods
jns
ljmp
dec
in
mov
aad
mov
into
ljmp
inc
dec
inc
or
nop
jmp
sub
or
pop
fistpl
cmp
fs
mov
sti
dec
inc
pop
xorl
xor
imul
cmp
sbb
adc
add
ss
lcall
pop
push
lcall
inc
cmpsl
loop
sbbl
jns
stos
fndisi(8087
lds
jnp
lret
lods
aad
mov
dec
mov
cmp
sbb
dec
add
push
daa
adc
pop
push
out
cmp
sub
aad
ficoml
dec
out
xorl
orl
sub
push
cmpsb
xor
and
sbb
lahf
xchg
and
popf
cmp
lods
pop
pop
adcl
and
jbe
cltd
mov
mov
les
sarl
add
stos
push
test
xorl
mov
adcb
dec
xor
sub
sarb
testl
ror
lcall
loope
addr16
cmpsl
adc
pop
stc
imul
les
loopne
dec
scas
lret
cld
aad
fisubrl
fistpl
xchg
inc
dec
jmp
push
cmpsb
loopne
int3
pop
mov
ja
cmp
scas
ja
out
roll
sbb
fs
arpl
mov
add
aad
pop
movsb
sbb
ljmp
sbb
movsb
loope
xorl
mov
xor
fsubrs
movb
fsubp
rolb
setl
inc
jno
sbb
pop
adc
outsl
mov
loopne
sbb
sbb
shrl
adc
imul
inc
xchg
inc
add
and
jnp
movsl
push
sub
loopne
cmp
mov
xchg
push
sub
push
test
push
gs
jnp
add
iret
in
lods
and
mov
and
jle
test
sub
xor
or
leave
xor
mov
sti
push
cmpl
xorl
add
rol
fwait
xchg
jecxz
imul
into
pop
jne
stc
jg
aas
jns
dec
pop
mov
push
imulb
mov
mov
push
lods
aad
inc
call
fwait
lret
cmc
stos
movsl
movsl
shll
sbb
pop
adc
jo
test
sbb
dec
mov
or
in
pop
fcmove
or
sub
and
jae
push
test
sub
ret
jo
aaa
dec
sub
outsl
shlb
iret
add
movsb
sbb
jge
sbb
jmp
cmpsl
xor
movsl
popf
pop
xorb
xor
arpl
adc
and
cs
pop
sahf
fmull
mov
sub
lcall
pop
xchg
cmc
jns
dec
movsb
sarb
jecxz
nop
mov
stos
aad
push
fidivrl
xchg
sbb
mov
inc
or
mov
mov
das
and
data16
fisubs
push
pop
mov
sub
in
jb
mov
ljmp
stos
adc
adc
cmp
scas
mov
cmp
leave
lods
inc
cmc
ljmp
repz
cltd
mov
rol
pop
cmp
dec
mov
dec
out
fidivrs
adc
fsubrp
push
inc
pop
xor
pop
sub
popf
cmp
jmp
nop
bound
std
push
sub
rcll
sbb
cltd
js
lret
daa
call
inc
ljmp
stos
mov
or
test
add
or
sub
xor
popf
cmp
cmpsl
dec
popf
cmp
or
insl
sahf
scas
stos
inc
lahf
scas
pop
mov
adcl
xor
pop
mov
dec
sbb
sbbl
mov
dec
pop
inc
jg
ljmp
xor
ret
addr16
enter
push
lret
and
adc
adc
cmp
inc
cmc
push
cmp
mov
mov
sti
and
inc
push
inc
jp
push
inc
and
and
ss
sbb
pop
sub
mov
and
jge
sarb
inc
mov
imul
push
les
add
or
add
inc
push
ret
mov
fmuls
push
adc
xchg
cmp
mov
les
iret
adc
aad
stc
push
push
enter
lcall
insl
inc
jno
sub
dec
xlat
mov
inc
add
and
arpl
jmp
shlb
mov
push
stos
fnclex
push
pop
mov
addr16
scas
push
aaa
faddp
mov
shrl
mov
sub
jns
sahf
insb
pop
shrl
pop
jo
aad
pop
add
cmp
imul
cmp
sbb
dec
cmp
lea
test
adc
push
cmpsl
xor
sub
mov
mov
addb
movsb
dec
psrlw
add
dec
pushf
cmp
mov
popa
add
inc
xchg
inc
sub
pop
jne
lcall
pop
adc
std
dec
jmp
dec
jle
decb
sbb
xchg
pop
push
fisttpll
mov
inc
jns
xor
jecxz
ret
les
movsl
lret
cmp
mov
or
in
ds
movsl
pop
push
icebp
xor
roll
icebp
fdivr
notl
push
test
xchg
add
lock
xorl
int3
into
jl
ds
dec
xor
gs
inc
jp
rcr
mov
add
sbb
pop
adc
and
xchg
lds
cld
shl
insb
sbb
pop
adc
push
sub
adc
cmpsb
movsl
sub
jae
aaa
jne
test
lea
sbb
jno
jae
sub
shrl
aad
fucomp
and
dec
outsb
xchg
push
mov
mov
sbb
sbb
inc
out
sahf
mov
push
jae
aam
mov
test
jbe
test
add
aam
gs
in
insb
xchg
mov
cmp
add
cli
jl
jns
fnsave
mov
popf
push
xchg
stos
addr16
pop
cmp
jo
or
and
inc
cmp
in
in
jbe
xor
mov
jno
imul
mov
arpl
mov
cs
pop
dec
lods
add
jmp
inc
lret
push
loop
jl
jge
dec
push
lahf
push
inc
cmp
push
adc
mov
out
mov
push
adc
ja
jne
ffreep
cmpsb
fwait
mov
int
mov
fstpl
pop
adc
int3
lock
out
fidivs
cltd
mov
movb
frstor
negb
sub
xor
std
leave
popf
cmp
push
push
insl
int3
mov
add
dec
cltd
popf
jb
add
inc
dec
movb
cmpsl
loop
add
in
aaa
stos
cmp
rcll
sbb
sub
je
rorl
cmp
inc
fcomps
jmp
daa
xchg
pop
and
lret
mov
je
jl
into
sarb
ja
lods
syscall
pusha
adc
and
push
aam
cli
sahf
lock
mov
scas
mov
imul
jno
pushf
daa
push
stos
push
lods
sar
xchg
and
repz
ljmp
mov
jb
in
fdivrp
imul
lods
pop
xor
pop
adc
out
mov
cmp
mov
jg
in
adc
mov
inc
lret
ljmp
test
mov
fistpl
sbb
lock
or
xchg
sub
cwtl
jl
int
adc
add
test
add
mov
inc
popf
fmul
shrl
lea
pop
mov
cmp
gs
jae
push
test
inc
fsubl
mov
test
xchg
pusha
mov
push
inc
cmp
sbbb
mov
cmp
ljmp
test
fdivrl
fsubrp
inc
xchg
add
outsl
cmp
xchg
arpl
pop
mov
dec
iret
sbb
jo
or
inc
jo
data16
int
mov
les
les
push
lock
fs
inc
subb
jecxz
in
sub
nop
mov
mov
inc
dec
adc
stos
sahf
cmpsl
adc
or
adc
lcall
lds
push
dec
sbb
filds
ljmp
mov
outsb
pop
in
pop
pop
popa
inc
dec
adc
into
lds
loop
das
push
stos
nop
ljmp
leave
shrl
test
dec
pop
lret
hlt
jmp
and
out
es
jnp
daa
sarl
ja
dec
cmpsl
mov
lcall
lcall
insl
jmp
cmp
xchg
addr16
ror
cmpsl
sbb
xor
ret
enter
cli
out
sarl
add
cmpsb
mov
shl
add
rcll
sbb
out
adc
rol
in
test
xor
sbb
push
adc
inc
loopne
dec
mov
outsl
movsl
roll
mov
fwait
pushfw
or
mov
push
adc
mov
fstps
incl
and
imul
adc
js
out
dec
xor
jns
rolb
movsl
add
mov
or
fstpt
mov
scas
jbe
push
dec
pop
mov
mov
cmpsl
scas
add
das
sarb
sbb
loopne
in
loop
test
aaa
in
inc
pushf
inc
mov
fcompl
test
mov
sub
xor
fisubl
js
pop
push
mov
rclb
cmpsb
dec
sbb
mov
lds
jmp
mov
mov
scas
xchg
stos
push
jbe
cmp
call
out
or
les
imulb
xchg
sub
stc
or
mov
cmp
xchg
ljmp
or
ret
arpl
into
add
movsb
sub
aaa
sub
sbb
lahf
push
inc
xchg
mov
jo
or
cmp
test
sub
in
bts
mov
aad
int
nop
enter
jl
pop
mov
push
dec
add
test
cltd
mov
rol
pop
fnstcw
adc
mov
mov
pusha
and
inc
lock
int
jae
out
hlt
inc
ret
addr16
lret
adc
pop
xor
pop
jmp
pop
subl
in
jo
in
sbb
and
pop
mov
cmpl
jp
push
stos
aad
dec
push
inc
aam
cmp
movsl
dec
out
std
or
nop
bound
lds
sub
imul
ror
lcall
pusha
lds
mov
mov
and
jge
pusha
push
in
inc
lods
jno
xor
cmc
sbb
pop
popf
xchg
fs
icebp
data16
mov
jge
adc
mov
cmp
stos
push
cwtl
call
pop
mov
add
or
stos
je
adc
mov
lcall
lahf
cmp
and
imul
or
ret
stos
push
pusha
out
mov
fisttps
mov
vmovlpd
add
mov
mov
pop
cmp
jo
xchg
adc
ljmp
out
push
idivb
cwtl
outsl
pop
clc
push
inc
push
push
jg
add
pop
adc
scas
les
jbe
cmp
dec
sub
out
pop
adc
andb
pop
adc
xor
mov
shrl
mov
les
out
adc
out
inc
inc
je
xor
jo
in
sbb
and
mov
lahf
cmp
fnstenv
and
mov
or
lods
pop
cmp
mov
test
inc
ret
push
lods
add
and
lods
fisttpl
mov
fwait
bound
add
mov
ljmp
loopne
test
mov
add
sbb
rcrl
adc
cwtl
sub
jmp
xchg
fucom
pop
push
cmpsl
xor
lret
sub
mov
sbbb
lahf
imul
cs
mov
and
popf
imul
shl
sub
xor
jp
push
shrb
ss
cltd
ss
mov
lea
inc
dec
adc
mov
and
cmpsb
repnz
lods
repnz
das
sub
push
cmp
ja
sti
add
dec
add
int
and
movsb
add
cmp
push
out
push
das
dec
jg
push
push
ret
shll
lds
mov
cmp
out
and
test
mov
jae
sub
imulb
xchg
loope
mov
je
sub
xchg
sub
jle
cmp
xchg
mov
mov
pop
or
leave
mov
pop
fs
lock
movsl
push
ret
adc
jno
xchg
push
movsl
push
clc
lock
xlat
cmc
stc
mov
out
push
stc
clc
mov
cs
rcrb
shll
pusha
or
and
sbb
mov
push
and
mov
iret
jl
lret
jmp
cmpsl
pop
mov
imul
frstor
mov
cmp
pop
add
dec
mov
rorb
push
outsl
icebp
mov
outsl
enter
lds
xchg
or
add
imul
mov
ret
adc
dec
fisubrl
roll
or
enter
outsb
xchg
pop
inc
push
add
jg
inc
mov
push
and
sbb
push
jmp
pop
mov
sub
sbb
sub
mov
pop
inc
sahf
cmc
ljmp
lret
xor
inc
inc
pop
movsl
dec
test
adc
lods
pop
mov
ret
imul
adc
sub
hlt
loop
enter
or
sbb
stos
test
mov
and
adc
push
inc
shll
adc
leave
adc
aad
and
movsb
xor
gs
mov
popf
cmp
mov
ret
aam
push
nop
sahf
roll
xor
mov
adc
sbb
shll
pushf
test
imull
jo
inc
out
adc
in
xchg
and
aam
cmp
mov
bound
daa
sbb
or
xchg
fwait
push
jecxz
cmp
shll
adc
xor
fimuls
pop
add
push
and
mov
mov
lret
adc
cmp
or
sub
lret
jl
cmpsl
cmp
int
push
inc
mov
mov
and
jb
sahf
imul
mov
cltd
gs
test
cmp
xor
dec
int3
and
adc
sahf
push
sbb
test
shll
sub
cld
sub
cmp
mov
mov
mov
rcrb
inc
cmp
js
jl
inc
push
adc
popf
sub
mov
sahf
int3
mov
out
std
or
shll
push
mov
inc
xorl
in
cld
mov
divb
gs
sub
lahf
dec
test
out
mov
cmc
cwtl
scas
and
or
cmp
jb
cmc
sub
jne
xchg
push
pop
sbbb
and
fsubp
pop
and
ss
cmp
jmp
pop
jmp
sub
rcr
or
fcomip
movsl
pop
test
lretw
xchg
es
inc
add
fnstsw
mov
cld
cmp
fiaddl
dec
in
xorl
cmp
sub
shrl
mov
les
hlt
cltd
scas
and
push
or
cmp
jae
hlt
sub
je
xchg
pop
pop
sbbl
xchg
fucom
pop
and
sbb
inc
cmp
ljmp
rcl
dec
das
xlat
fstpt
lods
push
fincstp
mov
int3
out
cli
pop
mov
inc
inc
fs
fstpl
dec
dec
xchg
dec
mov
cmpsb
pop
shrl
add
aad
push
fs
sbbb
outsb
enter
movsl
bound
mov
enter
jb
mov
aaa
test
repz
and
jae
sub
fstpt
pusha
pusha
imul
and
lea
mov
inc
push
rcrb
dec
addl
sti
rclb
sub
and
dec
cltd
movsb
sbb
cs
inc
inc
loop
jp
inc
mov
out
fwait
jb
adc
imul
sub
pop
ja
fstl
xchg
push
mov
push
aam
in
out
mov
cs
div
fdivr
mov
dec
mov
push
mov
mov
in
repnz
mov
pop
mov
les
cmp
sbb
fldl
pop
jl
lcall
xchg
ss
or
inc
insl
pop
loope
mov
scas
les
lret
mov
sub
and
test
andl
vunpcklpd
loope
inc
and
pushw
sbb
mov
cmp
xor
or
das
dec
in
jnp
stc
jne
daa
mov
outsb
sbb
cmpsl
out
pushf
add
jge
jl
call
or
aam
outsb
popf
jb
in
push
fistpl
dec
dec
lahf
dec
mov
out
mov
or
push
cmpsb
jecxz,pt
gs
and
pop
jmp
xchg
add
testb
aad
cltd
inc
xlat
cmp
cmp
and
shrb
mov
fmulp
enter
fwait
push
test
xor
sub
sahf
cmp
sub
es
pop
inc
add
sahf
adc
and
ficompl
inc
pop
mov
mov
shll
aam
daa
imul
push
dec
mov
int
pop
in
push
aad
push
cmp
shr
sahf
sub
mov
mov
fsub
cli
imul
int
xor
dec
jmp
hlt
loope
subl
jno
push
test
add
xchg
pop
and
popf
cmp
dec
shlb
fwait
push
jns
dec
adc
push
sub
adc
lcall
jmp
rcl
xchg
xchg
add
leave
fisttps
cmc
ljmp
mov
push
dec
mov
lds
mov
mov
fidivrs
mov
xor
ljmp
add
mov
mov
enter
imul
lret
sub
je
mov
pusha
sub
mov
stos
push
test
xor
js
mov
cmp
outsl
lds
mov
push
mov
nop
movsl
mov
lcall
popf
inc
dec
arpl
sarl
jb
in
fisubrs
add
popf
inc
lea
fwait
xor
sti
loopne
inc
xchg
or
jne
adc
ja
sub
out
push
test
popf
jb
nop
sub
jne
dec
inc
decb
dec
or
add
jecxz
sub
frstor
and
xor
movsl
pop
push
mov
fstpt
je
aam
xorb
jecxz
stos
lea
stos
push
and
xchg
xchg
cmp
add
cmp
imul
int
inc
jno
outsb
lret
test
pop
and
xor
adc
mov
inc
movl
and
imul
popa
int3
cmp
test
jb
ljmp
inc
add
jo
testb
sub
ds
pop
loop
psubusw
push
mov
mov
shl
sbb
lds
xchg
or
jge
mov
mov
pop
xchg
rcrb
dec
adc
cmp
sub
scas
ljmp
cmp
push
jno
je
push
lods
or
shlb
notb
cld
push
dec
jl
pop
sub
leave
pop
inc
test
xchg
jle
fwait
cmpsb
or
add
das
cld
shr
cmp
or
push
sub
lcall
sbb
mov
lea
jb
imul
push
sub
xchg
es
cld
enter
adc
inc
pop
and
fistps
icebp
jecxz
mov
add
shlb
scas
inc
xchg
mov
outsb
add
mov
jle
cli
imul
sub
imul
pop
lahf
push
lret
pop
icebp
lcall
fisubrl
mov
jl
add
add
shll
stos
movsl
jp
adc
inc
jmp
inc
movl
inc
pop
dec
mov
sub
mov
cmpsl
push
dec
mov
loopne
push
lds
outsl
xchg
out
jnp
mov
stos
dec
scas
and
sbb
xchg
adc
cmpl
int3
xchg
pop
xchg
inc
sbb
push
je
int3
jle
inc
add
jne
inc
push
std
test
push
test
xor
in
fs
pop
pop
mov
dec
inc
test
roll
in
gs
xor
add
movsl
push
sbb
add
lock
cmp
xchg
pop
sbbb
inc
fisubrs
je
jg
lea
rcrl
pop
sbb
sbb
xlat
stos
and
ror
fisttpll
mov
rcr
shrl
inc
test
dec
int3
push
push
inc
lahf
imul
es
std
psraw
or
push
loopne
pushf
cmp
mov
dec
sbb
cld
cmpsb
outsb
and
das
pushf
mov
lcall
and
jl
fstpl
mov
shll
gs
inc
pop
aaa
arpl
or
cmp
hlt
stos
scas
ja
and
pop
and
movsb
shl
bound
sub
jmp
jae
out
fidivs
dec
loop
lods
push
stos
aad
dec
pop
out
int
xor
jo
addb
aas
add
adc
int
push
fsubrp
pop
daa
xchg
mov
test
or
add
push
mov
in
or
jnp
mov
xor
pop
jo
aad
mov
xchg
movsl
dec
popf
stos
xor
mov
push
adc
xchg
fwait
gs
arpl
dec
out
dec
popf
inc
dec
sbb
push
cmp
enter
sub
inc
mov
or
sub
cltd
hlt
cmp
or
dec
popf
inc
dec
sbb
repz
and
cmc
or
jb
xchg
lret
and
add
or
mov
out
fmulp
rcr
sub
add
inc
mov
mov
clc
sub
dec
korw
mov
adc
inc
mov
in
lcall
bound
inc
push
adc
mov
aad
lock
cli
push
cmp
cmp
pop
aad
rorb
movsl
sub
out
ffreep
loope
adc
lcall
mov
mov
pop
jne
xor
lds
je
jbe
fwait
add
sahf
xchg
lcall
movsb
xchg
sub
ret
mov
adc
mov
daa
iret
inc
xchg
pop
jmp
pop
add
aaa
pop
or
mov
dec
inc
clc
lock
rorl
cmp
xchg
enter
imul
outsl
leave
or
and
in
xchg
mov
int3
fwait
dec
sahf
mov
mov
test
scas
mov
cmp
test
leave
in
xor
repz
lea
mov
sbb
push
add
or
jle
xor
cmp
test
outsl
icebp
mov
popa
xor
push
inc
pop
nop
cmc
dec
xor
jmp
outsb
jbe
mov
jnp
jle
lret
outsb
loope
arpl
push
lods
xchg
repnz
lret
jb
jae
sub
mov
jae
add
ficoms
fbstp
in
push
sub
in
enter
pop
fcomp
push
jmp
mov
aam
sub
mov
push
std
loop
push
mov
out
aas
cltd
outsl
mov
mov
sbb
fidivrs
out
jnp
mov
push
and
inc
aad
outsl
fists
sub
mov
adc
lcall
testb
cmp
lahf
lods
lea
test
or
into
cld
jno
add
data16
iret
cld
adc
fcmovb
lret
aad
push
out
and
mov
adc
add
push
push
js
add
jne
out
gs
rorb
dec
adc
call
jecxz
push
into
imul
test
adc
inc
xor
lds
pop
outsb
push
mov
fldl
adc
xchg
int
and
enter
add
rcl
xchg
xor
and
add
andb
cld
pop
scas
inc
ja
mov
in
cld
cmp
cmp
rcrl
loopne
mov
mov
cmp
gs
rorl
loop
frstor
mov
cmp
xor
sub
les
loop
outsb
adc
push
xchg
push
mov
scas
pop
imul
cmpsl
dec
popa
add
std
test
push
test
cmpsb
inc
or
ds
xor
jp
dec
pop
int3
add
adc
mov
inc
push
push
cltd
xor
icebp
jg
loope
loopne
xchg
add
movsl
sbb
out
fmulp
shlb
fprem1
jecxz
mov
push
cmpsl
xor
add
popf
cmp
aad
inc
std
test
dec
pop
lret
ficompl
inc
mov
scas
pushf
mov
fidivrs
rclb
rcr
cmc
pop
and
sahf
fdivl
popa
je
andb
fidivrs
subl
jbe
adc
mov
and
sti
lahf
jg
test
xchg
pop
cs
xlat
fucomp
push
cmp
ret
loopne
sub
cmp
mov
sbb
nop
add
xchg
xor
sti
lods
xchg
push
pop
lcall
and
dec
push
jl
test
sbb
ss
arpl
cmp
push
pop
xor
int
stos
mov
aad
add
pop
movsb
pop
jnp
inc
xlat
cmp
jno
cmp
push
mov
sbb
test
jle
imul
mov
sub
les
int
cmpsl
sub
mov
push
lcall
mov
adc
rcl
cmpsl
cmp
xor
cwtl
sub
mov
daa
mov
xchg
lds
adc
inc
push
adc
sub
lds
pushl
lock
incb
es
inc
lcall
jmp
and
add
mov
loope
je
inc
mov
imul
push
aam
insb
dec
arpl
mov
ret
push
faddp
xchg
fwait
cmp
lea
xchg
rcll
mov
sbb
stos
inc
insl
push
mov
outsb
enter
mov
dec
jbe
mov
jl
pusha
or
int3
mov
and
stos
mov
stc
jnp
stos
jno
fs
inc
push
cmp
loop
imul
jge
fsts
stos
mov
lret
mov
xchg
jge
xchg
and
or
sub
ljmp
ret
lret
push
mov
sbb
nop
sbb
aad
lea
mov
loope
xchg
test
cmpsb
and
dec
adc
cs
into
mov
adc
add
rcr
pop
ss
jg
fisubl
lret
mov
and
movsl
call
mov
aaa
test
jae
cli
dec
and
jl
and
imul
imul
pop
cmp
in
cmp
mov
jecxz
pop
js
out
out
cli
mov
jmp
xor
dec
dec
iret
adc
push
pop
popf
jle
dec
pop
std
pop
jmp
ret
imul
decb
ficomps
test
adc
jae
sub
sbb
data16
dec
test
das
adc
add
mov
push
les
sbb
mov
mov
pop
inc
test
push
add
std
jb
xor
sub
mov
pop
push
loop
sub
scas
fidivrs
push
push
add
mov
scas
xor
scas
and
ljmp
sbb
sahf
addr16
mov
xchg
sar
fisubrl
jle
mov
inc
fs
xor
pop
adc
cld
test
out
sbb
hlt
mov
iret
popf
cmp
jne
inc
push
std
xor
push
test
xor
in
fs
pop
pop
mov
dec
inc
xchg
xor
jge
push
gs
scas
ret
fisubs
test
gs
mov
push
sbb
add
lock
cmp
push
outsb
push
sbbb
inc
fisubrs
je
jg
mov
jbe
sbb
sbb
aad
and
icebp
leave
fisttpll
sub
fldl
sub
inc
test
sub
push
push
inc
pop
sbb
mov
loope
or
push
xorb
fs
push
dec
sbb
cld
cmpsb
outsb
and
das
pushf
mov
inc
cmpsl
dec
popa
cmp
push
and
jl
fstpl
mov
fdivs
gs
inc
lahf
int3
arpl
or
cmp
hlt
lret
sub
lcall
sub
xor
adc
pop
lock
jp
ja
fidivs
sub
stos
aad
dec
pop
out
int
xor
jo
addb
aas
add
adc
int
push
fsubrp
pop
daa
xchg
mov
test
or
jne
jmp
addl
xchg
sysexit
scas
dec
in
add
aad
mov
jle
dec
popf
stos
xor
mov
push
adc
cwtl
xchg
fwait
gs
arpl
pop
sahf
dec
popf
inc
dec
sbb
push
cmp
enter
sub
inc
mov
or
sub
cltd
hlt
cmp
cs
popf
inc
dec
sbb
jae
and
hlt
sub
jae
xchg
lret
xchg
sub
dec
cmp
or
mov
mov
add
jbe
xor
repnz
pop
loop
pop
add
je
movsb
push
inc
add
inc
addl
stos
pop
ljmp
stc
aad
inc
iret
mov
push
dec
loope
xor
cmp
adc
sub
add
shrb
lods
ljmp
jns
inc
cli
add
fnstenv
add
adc
adc
adc
dec
ss
pop
jg
xchg
lock
jbe
sti
ror
fisubrl
adc
mov
je
std
lods
or
inc
loopne
or
outsl
push
js
lret
inc
out
ret
push
lods
sti
ffreep
pop
lods
pop
das
cld
sbb
sti
lret
sahf
es
sub
inc
and
and
sahf
int
sbb
dec
jb
push
ret
push
jae,pt
in
setb
loopne
cmp
fsubr
imul
fistps
fcomip
and
mov
jb
gs
mov
aaa
mov
xor
mov
dec
test
js
shr
xor
repnz
cmpsl
ret
stc
icebp
cli
sub
sbb
xchg
and
fbld
lds
lea
enter
xchg
in
and
mov
cli
xchg
jle
or
inc
es
aaa
sub
xor
mov
sti
push
mov
mov
stos
into
adc
dec
loopne
cli
sub
dec
inc
xchg
out
jl
xchg
insb
cltd
mov
test
sbb
cltd
sbb
in
xor
jl
aad
cmpsl
xchg
cmp
xor
jecxz
adc
adc
mov
and
dec
push
aad
icebp
imul
ss
daa
push
mov
call
fnstcw
sbb
adc
cwtl
sahf
lcall
dec
popf
aad
cmpsl
cs
lods
pop
xor
push
and
mov
fiaddl
cmp
leave
add
xor
xchg
add
inc
dec
pop
sahf
addr16
test
cld
mov
fnsave
gs
fcmovb
pop
sub
pop
ficompl
adc
push
test
inc
fdivrl
out
fnsave
jmp
xchg
mov
jbe
insl
dec
rcl
stos
sub
and
daa
adc
push
sub
mov
mov
cmp
xchg
mov
sahf
arpl
dec
lea
mov
pusha
stos
and
inc
ficoms
outsl
adcb
jb
jp
sub
cmc
inc
aam
pop
sub
ret
push
std
dec
pushf
push
test
rcrl
cmp
pop
cmp
pop
and
aad
insl
or
mov
sub
adc
aad
mov
inc
sbb
out
mov
push
push
sub
into
stos
lods
rolb
inc
out
mov
xorb
dec
dec
pop
faddl
aaa
xchg
cmc
pusha
cmp
mov
xchg
pop
loope
out
jmp
push
mov
les
or
pop
mov
mov
cmpsl
lcall
bound
xor
lret
and
aam
inc
mov
mov
inc
mov
add
je
cmpsl
xchg
pop
cmp
out
movsl
xor
sahf
gs
and
movsb
rol
bound
leave
imul
daa
jmp
dec
iret
sbb
jne
iret
fbld
sar
shrb
out
cmpsl
mov
cmp
test
fldenv
rolb
lds
cmc
outsl
pop
mov
arpl
add
shll
pop
lret
sbb
push
and
clc
rcrb
lcall
dec
cmp
aad
sti
jecxz
jns
xchg
insb
inc
mov
adc
in
fucom
nop
mov
add
jns
insl
push
push
push
add
cmp
loopne
sub
int3
xchg
das
xchg
sub
cmp
ljmp
mov
loop
repz
xor
leave
xchg
inc
leave
sbb
pop
test
lds
cmp
fimull
jae
mov
cli
push
roll
cmp
call
rorb
xorb
fs
cmp
out
adc
into
ss
sub
and
rorb
fnsave
ds
into
sub
mov
pop
sbb
mov
loope
xchg
int
rolb
aam
inc
ljmp
sub
adc
ret
pop
sbb
stc
nop
dec
je
rcll
sbb
pop
cmpsl
adc
mov
pusha
sbb
add
icebp
xchg
xchg
pop
movsl
rep
lret
jecxz
cwtl
scas
push
add
shrl
stos
inc
in
pushf
and
pop
sbb
push
test
push
inc
sbb
aaa
mov
in
bound
mov
mov
out
lea
sub
sub
or
and
fldcw
imul
dec
xor
fisttpl
mov
sub
outsb
mov
fisttpll
or
loop
pusha
adc
mov
adc
es
mov
cltd
push
pop
push
das
dec
nop
js
dec
cli
jne
mov
test
lods
adc
and
inc
out
cmp
inc
into
loop
mov
xchg
sbbl
push
mov
mov
and
stc
dec
rcrb
or
jecxz
and
ss
das
pushf
xchg
out
mov
xor
dec
popf
cmp
add
cs
dec
push
push
adc
gs
arpl
cmp
shlb
out
cmp
rolb
pop
fadds
in
mov
fmuls
imul
lods
sub
jnp
mov
fsubr
push
pmulhuw
andl
je
test
lds
push
xchg
into
jle
sbb
push
fnsave
and
push
lea
xchg
fdivr
cmpsb
xchg
dec
popf
inc
dec
sbb
test
add
repnz
out
movsl
cwtl
adc
call
jbe
into
push
jg
movsl
arpl
adc
mov
inc
pop
pusha
inc
xlat
and
xchg
mov
jns
leave
add
arpl
outsb
lret
push
in
inc
test
pop
mov
lcall
sti
out
dec
aam
inc
or
mov
push
dec
or
in
jl
fiadds
sbb
cltd
mov
aam
dec
jmp
shll
addl
mov
sbb
mov
mov
leave
add
cmovle
enter
mov
and
test
or
push
fistpl
shl
aad
hlt
lcall
pop
ljmp
in
mov
cli
or
add
cmpsl
les
aaa
jno
ljmp
dec
in
mov
adc
lahf
popa
dec
mov
inc
dec
and
mov
fdivr
pop
and
or
mov
dec
xor
inc
dec
pop
movsl
xchg
cmpsl
test
fs
inc
jmp
lds
push
cmp
mov
int
push
into
es
into
dec
push
sub
out
lds
arpl
pop
cmp
int
pop
and
cli
jb
rolb
push
pop
pop
cld
enter
cs
xchg
ljmp
cmpsb
dec
push
int3
add
lds
int3
or
xor
mulb
test
pusha
lcall
sarb
ret
dec
cmp
pop
jl
add
std
fs
aam
in
cmpsb
aad
je
lds
cmpsl
sbb
sub
shlb
adc
mov
rolb
jecxz,pt
in
xorl
inc
sbb
jnp
xor
jne
int
xor
sbb
js
and
lods
xor
pop
cli
test
jecxz
sub
loop
dec
push
lods
mov
repnz
sub
sub
mov
into
xlat
in
je
fimull
xor
mov
cli
push
or
jae
push
andb
lods
outsb
ds
mov
loopne
cmpsb
andl
ret
in
insb
pop
bound
shlb
scas
aas
adc
xchg
xor
jns
fisubs
fcmovnbe
mov
fadds
pushf
and
adc
or
stos
inc
loope
adc
jg
mov
inc
out
jl
jl
mov
cmc
popa
mov
mov
add
cmpb
inc
icebp
mov
sub
cli
test
dec
dec
rorl
outsb
je
jl
add
inc
inc
int
xchg
or
loope
jae
loope
inc
divl
test
xchg
ja
jo
mov
mov
xor
ja,pn
pusha
cmp
push
push
pop
push
and
xchg
xchg
jecxz
pushw
scas
in
push
push
jmp
add
popa
sub
fsubs
outsb
out
pop
dec
ror
inc
xchg
mov
jns
int3
inc
sahf
and
sbb
int
mov
xor
ds
fimuls
cmp
push
cmpsl
add
fs
jp
sbb
es
test
add
addb
add
fistpl
dec
dec
and
lret
loopne
ljmp
mov
and
and
fwait
lahf
fs
cmp
sbb
clc
xor
sbb
jecxz
gs
daa
add
imul
fidivs
lea
adc
cmp
daa
mov
mov
add
shl
jp
add
or
pop
das
mov
nop
xchg
insl
pop
loope
cmp
fnsave
xor
mov
sub
sub
add
ret
push
lods
arpl
repnz
mov
jae
cmp
loopne
mov
or
fsubr
scas
cli
cmpsb
jbe
ffreep
xchg
mov
mov
jmp
aam
xlat
or
mov
mov
pop
scas
and
add
test
or
mov
push
push
cmp
cmp
out
push
dec
or
aad
mov
cltd
xor
add
ja
addb
cmp
rcrb
outsl
lods
clc
test
fxch
bound
xchg
hlt
sahf
dec
popf
xchg
ja
fnstsw
mov
pop
inc
xor
loopne
mov
hlt
sahf
dec
movb
or
adc
roll
rcll
adc
cmp
cmpsl
dec
popf
cmp
push
cmpsl
adc
out
faddp
inc
add
push
push
sub
cltd
mov
push
cmpsl
call
sub
cmp
aam
sbb
fisubrs
gs
jle
out
cmp
ficoms
mov
fs
cmp
enter
lret
int
cwtl
outsl
sti
mov
dec
pop
adc
in
out
je
pop
push
cmp
aam
gs
rclb
pop
pop
push
and
and
inc
aad
push
movsl
adc
in
dec
xorb
filds
push
dec
adc
adc
in
cmp
enter
sar
jae
int3
lret
jb
push
int3
jmp
and
push
xchg
sub
dec
cmp
ja
sub
idivl
mov
jns
jl
cli
xchg
push
mov
insl
sbb
cmp
inc
popa
cmp
xchg
dec
mov
and
lock
and
mov
jnp
cmpsb
fcomip
jp
ret
pushf
ret
xlat
sbb
adc
mov
aas
adc
std
mov
test
mov
inc
fcomps
sbb
xchg
out
fsts
mov
push
arpl
push
jecxz
or
jl
lret
in
js,pn
or
cmp
pop
inc
push
adc
pushf
psubsb
mov
jno
lods
cvttps2pi
pop
lods
jp
loopne
lret
jl
or
and
shlb
icebp
dec
cmp
outsl
cs
push
sbb
pop
cmpsl
mov
imul
ret
and
jne
insb
fisubs
lret
mov
cwtl
and
mov
insl
inc
cmp
xchg
leave
push
into
dec
dec
cmp
mov
test
insb
icebp
inc
dec
and
sarb
jne
dec
mov
pushfw
imul
imul
lods
lods
loop
scas
push
pusha
lret
and
mov
enter
mov
lods
bound
dec
mov
or
push
inc
popf
cli
sbb
dec
cmp
out
arpl
movsl
jbe
ss
test
adc
stos
adc
shlb
stos
aaa
sbb
pop
lret
popf
shll
fidivl
sarb
xor
mov
dec
cmp
out
cmp
sahf
test
stc
push
ret
sbb
cwtl
popf
fs
aad
jns
sub
push
cmpsl
les
rolb
shrl
mov
adcl
sti
mov
dec
pop
sub
jb
inc
inc
push
adc
xchg
int
pop
inc
mov
push
cmp
in
test
arpl
dec
dec
imul
push
or
sbb
shrl
cs
and
pop
shlb
test
lret
and
repz
test
push
repnz
dec
in
mov
and
mov
dec
popf
dec
int
stos
pop
jne
aad
adc
xlat
inc
adc
cmp
dec
lahf
pop
dec
cmp
enter
lret
std
push
pushf
adc
into
jle
sub
jmp
inc
dec
addr16
mov
fdivrl
je
call
push
sub
cwtl
pop
inc
jp
xchg
nop
push
cmpsb
xor
ds
dec
movb
outsl
xor
sbb
push
stos
push
lods
add
cwtl
adc
loopne
movsb
or
aas
roll
adc
arpl
jp
mov
popa
jecxz
stos
fiadds
pop
mov
cmp
xchg
arpl
les
push
xor
adcl
xchg
mov
idivb
push
dec
mov
jp
incb
mov
test
adc
loop
test
pop
ja
inc
or
decl
loopne
sub
xor
cli
inc
inc
push
adc
xor
pop
icebp
jl
aaa
int
arpl
dec
out
rclb
jmp
nop
aam
jne
jbe
out
cmpsl
shl
xchg
dec
dec
lahf
dec
mov
pop
xor
sub
or
adc
push
cmp
mov
mov
pop
dec
xor
lret
lock
data16
test
cwtl
push
stos
jmp
mulb
sub
popf
pop
inc
and
mov
jecxz
jecxz
and
cwtl
pushf
mov
lcall
sti
ljmp
inc
inc
les
cmp
cmp
roll
mov
mov
mov
clc
xchg
xchg
ret
inc
sarl
pop
out
popl
mov
fbld
loope
rcll
pop
and
sbb
ljmp
int
popa
cli
mov
lds
ss
mov
push
mov
into
sbb
dec
xor
jmp
cli
in
push
dec
arpl
aaa
ja
mov
adc
inc
mov
aad
pop
adc
inc
push
adc
imul
aam
inc
mov
imul
push
push
lock
insb
ja
sub
inc
pop
loop
mov
leave
aas
shlb
sbb
mov
mov
pop
hlt
stos
mov
xchg
push
dec
and
mov
repnz
jecxz
fcmovu
stos
inc
in
mov
scas
loope
and
pop
mov
mov
pop
push
xchg
and
or
cli
mov
push
jmp
mov
sbb
shlb
pop
mov
imul
mov
xchg
movsb
push
pop
test
sbb
mov
mov
lods
stc
push
ja
sbb
inc
cs
cmpsb
adcb
mov
test
push
add
mov
xchg
and
or
xor
push
cmp
test
xchg
sarl
mov
lret
xchg
shll
mov
and
sub
add
xchg
in
mov
xor
mov
aad
inc
jnp
jmp
hlt
sbb
pop
out
mov
inc
mov
aaa
popf
jb
lods
sub
jne
sahf
aad
inc
inc
push
adc
inc
inc
test
add
add
in
cwtl
xchg
mov
cmp
fidivs
sahf
mov
or
push
test
push
cmp
cmp
inc
cmpsl
les
ror
dec
lock
cmp
adc
cwtl
or
loopne
mov
into
movsl
sub
out
fmulp
shrb
jg
test
test
pop
mov
jl
mov
mov
add
jne
mov
cltd
pop
dec
or
sbb
xchg
rcl
dec
xor
cmp
xchg
je
mov
xchg
cmpsl
dec
loope
test
xor
pop
ss
lock
clc
add
mov
mov
and
jmp
sub
insl
fidivrs
or
fbld
sar
andl
cmp
int
popf
jno
cmp
fbstp
pop
sahf
flds
shlb
sahf
cmp
ljmp
push
cmp
pop
mov
ja
stos
inc
or
add
jmp
mov
and
dec
xor
les
int
fidivs
mov
jnp
inc
and
or
fs
xchg
fadds
mov
cmpsl
cmp
in
ficoms
xchg
inc
inc
push
adc
mov
lret
out
cwtl
scas
popf
jns
cmp
in
out
lods
inc
sahf
xor
stos
rorl
mov
push
inc
dec
cmp
into
add
shll
mov
or
inc
jnp
rcll
and
sbb
aad
mov
cmpsl
dec
jmp
push
inc
int
and
cltd
inc
fists
loopne
pop
pop
jno
andb
dec
aad
mov
add
outsl
dec
cmp
rcll
arpl
pop
cmp
out
shrl
outsb
sub
aam
push
xchg
stos
push
aam
js
jbe
inc
or
decb
loop
sub
rcl
cmpsb
xor
test
frstpm(287
inc
inc
pop
int3
lcall
aas
cmp
adc
xchg
add
lods
or
and
lock
test
out
std
xor
add
mov
push
fmuls
shlb
loope
pop
jl
push
movsb
dec
xchg
sub
add
cmp
jbe
dec
jne
add
mov
pop
cmp
andl
and
push
inc
imul
imul
add
pop
pop
inc
push
adc
rcr
mov
daa
lret
shrb
stc
add
dec
and
mov
loope
decb
lds
sbb
pushf
push
test
pop
imulb
mov
int3
stc
push
out
mov
pop
cmp
jg
aad
push
sbb
rcrl
mov
xchg
mov
test
pop
test
push
cmp
imul
mov
fildll
pop
mov
jne
pop
int
cmp
xchg
dec
ss
xor
add
push
or
js
mov
adc
rcr
mov
inc
xchg
jle
stos
out
sbb
push
adc
pop
jne
xchg
popf
mov
ss
dec
stc
cmpsb
add
mov
sub
out
sbb
mov
and
mulb
pop
and
mov
or
test
add
xchg
enter
xor
push
lods
ret
inc
push
adc
adc
sbb
fcomp
mov
lods
cmp
addb
dec
and
out
pop
cld
mov
xor
gs
fwait
cmp
jle
sbb
roll
pop
jge
mov
cli
data16
in
pop
scas
gs
jmp
arpl
cmpsl
dec
out
mov
sahf
addr16
enter
int
xor
or
push
adc
or
arpl
fiadds
mov
mov
cmp
lds
inc
loop
lcall
adc
out
fisubrs
pop
inc
mov
cmpsb
dec
cmp
xchg
mov
push
ficoml
roll
cltd
inc
popf
pop
cltd
xor
js
movsb
repnz
popf
dec
loop
push
aad
leave
mov
and
enter
outsb
inc
push
adc
lods
fwait
xor
xor
cmp
popf
dec
std
sbb
test
lds
push
and
movsb
aam
push
jb
cmp
push
jae
xor
add
les
popf
cmp
sti
ds
aam
ljmp
hlt
outsb
cmpsb
insb
or
test
out
addb
sub
mov
addl
in
cmp
lods
pop
js
test
adc
pop
sahf
rcl
into
stos
lods
mov
aaa
xor
push
ficoms
nop
inc
cmpsl
pop
mov
leave
mov
cmc
ljmp
pop
test
gs
mov
outsb
xor
je
fsubrl
cmpsl
jmp
jle
jge
jp
adc
fstl
loope
ljmp
je
dec
test
adc
lods
loope
inc
push
adc
nop
mov
jb
dec
movsb
mov
push
fsubr
fmulp
lock
in
fisubs
or
cmp
pop
jo
xchg
popf
cmp
lods
sub
clc
fidivrs
cmp
test
fistl
jb
mov
rcr
mov
inc
clc
dec
stos
jp
cwtl
addr16
inc
in
movsl
dec
in
subb
mov
push
mov
lds
fiaddl
or
inc
pop
decb
in
test
push
adc
sub
cld
ljmp
out
adc
dec
dec
adc
adc
xchg
mov
cs
call
movsb
cmp
aam
loope
out
push
sub
lods
push
icebp
xchg
ja
lret
arpl
cmp
cmp
inc
pop
pop
stc
mov
sahf
inc
push
adc
cmp
int
outsl
xor
movsb
xlat
and
or
or
adc
loope
cmp
inc
xchg
adc
cmp
test
inc
dec
inc
push
outsl
fistps
fdivrl
out
xchg
imul
hlt
mov
push
jno
sbb
ret
adc
mov
pop
mov
push
das
adc
xor
cs
pop
out
shr
jl
push
adc
and
pop
icebp
ficoml
stos
icebp
mov
pop
clc
and
sbb
ljmp
hlt
pop
push
sub
loopne
js
rcr
xchg
push
test
jge
fldz
std
iret
cmpsb
pop
movsl
out
xor
dec
sarl
xor
int
pop
and
movsl
in
and
push
or
aas
push
scas
inc
in
aas
cli
pop
dec
and
fnstenv
xchg
test
test
popa
jb
pushf
imul
dec
daa
mov
rcrl
ret
push
jmp
jge
je
aaa
or
pop
repnz
or
add
jmp
cmp
cmp
cltd
fcoms
pop
xorl
mov
or
aaa
cmpsb
mov
shrb
fsubrs
push
xchg
pop
mov
add
cmp
shll
add
push
mov
out
jmp
shlb
fnstcw
ss
out
stos
add
int3
push
ss
and
test
repz
fisubrl
imul
dec
adc
add
int3
jecxz
cmp
mov
movsb
shl
cmpsb
dec
cltd
inc
fnsave
loopne
test
cld
xchg
add
or
add
jg
loope
sbb
push
stos
push
gs
mov
outsl
adcb
jb
jp
sub
cmc
inc
aam
pop
sub
ret
push
std
mov
in
movsb
rcrl
pop
push
cwtl
mov
jge
out
mov
or
in
sub
int
jb
xchg
push
lods
mov
jbe
xchg
add
notb
mov
xchg
xchg
adc
xor
lds
aaa
dec
fs
fidivs
jns
pusha
cmp
mov
xchg
push
push
add
push
pop
insb
cmp
xor
leave
dec
loop
ret
stos
push
aad
dec
mov
jmp
outsl
or
arpl
cmpsl
les
std
sbb
aaa
loop
ret
stos
push
aad
dec
jp
cwtl
adc
cmp
dec
xchg
jmp
and
jmp
inc
or
add
mov
lea
gs
daa
lahf
les
mov
mov
ja
js
movsl
push
sub
inc
aad
daa
sub
in
mov
dec
cmp
rcr
rorb
test
mov
dec
pop
stos
aad
push
mov
orl
mov
pop
push
pop
mov
ja
fidivs
xchg
adcl
sub
cltd
mov
cmp
xchg
call
hlt
mov
inc
mov
dec
xchg
in
mov
rol
jb
adc
mov
stos
sbb
ljmp
mov
out
cmp
ds
sarb
mov
aam
inc
stos
aaa
xchg
adcl
dec
cmp
leave
int
xchg
daa
pushf
xor
or
pop
xor
int3
mov
pop
cmp
into
stos
push
sub
out
test
rolb
cmp
shl
jb
ja
fbstp
mov
fs
stos
lcall
fs
out
xchg
and
pop
push
in
sub
nop
pop
push
cmpsb
adcb
ljmp
mov
lds
ja
in
das
pop
mov
xchg
fdivr
sub
rorb
xor
in
pop
pop
std
mov
xchg
lds
xchg
and
ds
je
xchg
pop
pop
add
jno
dec
dec
sub
pop
arpl
and
and
repz
loope
das
xchg
fwait
inc
and
pop
subl
repnz
stos
test
fnstcw
mov
lds
in
pop
pop
cmpsl
adc
sub
pop
xchg
and
jbe
ss
les
out
or
mov
xor
dec
aas
rolb
sti
stos
mov
sahf
pop
std
popa
mov
aad
jbe
mov
ss
mov
dec
lret
pusha
fistpl
cmpl
cmp
testb
xchg
das
mov
shrb
jl
in
cmpl
adc
mov
sub
shl
inc
mov
outsl
and
and
out
fildll
xor
daa
lea
insl
adc
loope
inc
das
push
cmp
ljmp
push
push
xchg
jne
cmp
lea
arpl
ret
arpl
into
jecxz
fmuls
sahf
cwtl
das
js
cmc
adc
roll
mov
pop
push
push
popl
dec
outsl
push
out
mov
mov
sbb
add
dec
lret
cltd
imul
movsl
andb
or
mov
pop
sbb
rolb
jne
push
mov
int3
movsl
jno
adc
das
daa
mov
jge
jmp
movsb
popf
mov
ret
adc
lock
lods
ficompl
fwait
int
push
fisubs
test
jmp
mov
xchg
out
push
std
push
ficoml
sub
jge
adc
adc
ljmp
fwait
out
stos
inc
mov
aad
stos
cmp
aam
mov
sub
adc
dec
dec
sarl
addb
adc
addr16
fsts
daa
cmpl
cmp
cmp
rcr
cltd
jl
cmp
adc
scas
lods
es
jmp
jb
loopne
inc
popf
cmp
shrl
jmp
mov
add
lcall
das
scas
sub
sbb
push
cmp
int3
add
leave
lahf
or
ljmp
mov
xchg
pop
loop
out
cld
imul
shll
lods
leave
or
imul
test
sarb
aad
enter
movsb
dec
or
loope
mov
in
fmulp
fdivr
cwtl
outsl
sti
frstor
push
xor
arpl
cmpsl
cmp
roll
sbb
outsb
pushf
daa
push
stos
push
lods
nop
jo
ret
adc
aad
mov
inc
or
les
arpl
std
sbb
stos
push
daa
mov
inc
sub
push
out
mov
nop
decl
dec
lds
daa
jns
inc
ret
stos
push
lcall
adc
ljmp
xor
push
int3
sahf
addr16
enter
int
xor
andb
push
adc
out
mov
enter
cmp
lds
or
and
lcall
scas
nop
dec
mov
adc
adc
or
pop
adc
pop
fnstcw
mov
dec
adc
pop
mov
inc
dec
pop
enter
adc
sbb
adc
and
das
pushf
mov
jmp
mov
out
insb
xor
sub
pop
les
adc
leave
push
pop
push
jbe
xrelease
and
inc
add
aaa
push
stos
push
pop
fidivl
hlt
pop
adc
hlt
sub
arpl
sbb
mov
and
mov
das
mov
fisubrl
add
pop
adc
mov
adc
mov
mov
shll
push
orl
xchg
mov
pusha
mov
pop
adc
mov
clc
adc
fnsave
inc
dec
imul
es
and
test
or
xchg
push
push
repz
adc
movsl
leave
outsl
enter
fistps
push
cmc
dec
movsb
dec
mov
inc
das
aam
sub
or
mov
inc
inc
test
roll
mov
fwait
data16
adcb
or
or
scas
sbb
push
ja
jge
jecxz
pusha
mov
push
lret
rol
push
lods
sti
ds
fbld
in
cmp
andb
and
dec
push
rol
xchg
push
pop
icebp
xor
shrb
imul
cmp
out
fwait
icebp
gs
push
ror
les
push
in
leave
fdiv
dec
sbb
xchg
loope
adc
clc
stos
ss
lret
mov
or
and
pop
mov
cmp
lret
mov
pop
adc
lea
leave
test
js
mov
gs
mov
adc
out
xor
jp
push
sub
mov
xor
sbb
xor
clc
ret
or
imul
jnp
and
fcompl
or
sbb
adc
jmp
mov
ret
pop
out
inc
lret
push
popa
jge
repz
pop
xor
pop
or
into
cltd
adc
dec
outsl
pop
jge
les
mov
inc
dec
ljmp
sub
mov
mov
in
or
and
loope
insb
aas
mov
inc
sub
int
in
out
or
out
dec
inc
jp
cld
mov
jg
fnstsw
fsubr
cmp
cld
bound
das
adc
jl
aad
mov
sti
adc
div
ljmp
jae
into
sbb
xchg
lea
adc
sbb
mov
dec
stos
ret
sub
inc
push
adc
push
subl
jae
pop
loop
xchg
add
stos
add
xor
fistl
loop
lcall
lcall
jmp
mov
sbb
push
adc
fnsave
push
cmpsl
cmp
fwait
popa
mov
mov
push
pop
sahf
loope
out
stos
lods
mov
shll
gs
into
ljmp
sti
repnz
in
cmc
pop
daa
xchg
pop
aam
addr16
les
out
adc
movsl
mov
lock
fmulp
shlb
push
pop
pop
lahf
jnp
lret
adc
or
pop
lret
add
fwait
andl
enter
xor
pop
lods
pop
mov
xchg
push
not
out
push
adc
fistpl
inc
cmc
sbb
lret
enter
stos
ficomps
or
addr16
mov
cmp
int
adc
jecxz
adc
pop
xchg
adc
outsl
pop
sub
lret
sub
mov
mov
and
mov
adcl
or
pop
fwait
xor
call
inc
jp
mov
sbb
push
dec
pop
bound
xor
mov
movsb
dec
jmp
movsb
mov
sub
cmpsb
fdivrl
aas
stos
cmp
aam
mov
mov
xchg
sub
sub
pusha
dec
int
pop
sbb
fwait
insb
mov
mov
xlat
stos
pop
mov
adc
mov
cmp
outsl
lds
push
xor
inc
push
adc
mov
push
stos
aad
or
lock
pop
fsts
or
jecxz
hlt
pop
adc
insb
adc
mov
sbb
xchg
ds
pop
mov
dec
int
scas
lahf
mov
jno
sti
int
insb
sahf
inc
xchg
scas
pop
mov
in
xchg
mov
aad
pop
hlt
or
fdivrp
or
push
xchg
cld
sbb
push
lods
push
sbbl
sar
shrb
mov
mov
push
mov
not
aad
push
add
push
xor
and
xchg
insl
adcb
js
mov
inc
and
je
into
mov
cmpsl
xchg
aaa
add
aam
int3
jecxz
pushf
aaa
insl
mov
lret
cmpsb
int3
in
adcb
sarl
add
xchg
mov
mov
mov
ljmp
inc
js
flds
and
xorb
popf
xlat
movsb
das
sbb
push
imul
cmpsl
nop
pop
lea
mov
pop
das
pop
stos
les
mov
ret
loope
aad
jmp
pop
rol
inc
add
lds
pop
sbb
push
push
lock
mov
and
dec
or
pop
adc
cli
xlat
test
mov
jo
cs
into
mov
outsl
push
aam
pop
fwait
and
adc
gs
call
fwait
data16
stos
add
xlat
mov
push
inc
or
popa
nop
jne
xor
fildl
adcl
mov
sbb
mov
andl
js
mov
add
dec
add
mov
in
outsl
mov
and
in
lahf
mov
sahf
or
push
adc
ss
les
lock
test
jecxz
xor
xchg
push
push
fucomi
shll
clc
inc
sbb
cwtl
scas
add
ds
pop
jo
aad
xchg
cmp
fwait
jl
dec
popf
sub
mov
mov
fldl
ret
movsl
dec
fsts
jb
mov
adc
enter
sub
fnstsw
subl
mull
jl
dec
daa
int
adc
fwait
mov
fidivs
dec
sahf
addr16
mov
adc
ds
aad
in
mov
testl
hlt
in
lods
inc
push
adc
popf
fwait
xor
pop
inc
push
ja
mov
sbb
fmulp
leave
cs
nop
shl
es
fdivl
adc
cmp
outsl
lds
xor
jns
outsl
jp
or
aad
rcll
ds
jb
add
push
xor
les
sahf
cmp
rcrl
ret
push
lods
or
in
xor
daa
test
popf
adc
aam
dec
std
cld
sbb
jle
cmpsl
sbb
mov
inc
movsl
fiadds
push
add
aad
mov
mov
out
jns
adc
xor
mov
les
xchg
iret
add
fwait
cmp
sub
push
sbb
mov
inc
test
imul
mov
pushf
aaa
gs
inc
mov
mov
sar
xchg
fwait
mov
adc
gs
daa
inc
push
aaa
lahf
cmp
fsubs
jne
sbb
fcomps
pop
dec
adc
jb
cmpsb
sub
imull
xchg
addl
notb
lret
arpl
cmp
add
mov
and
dec
push
std
sarl
jno
int
mov
pop
pop
dec
jp
loopne
aam
sub
push
fidivrs
fwait
inc
push
inc
cmpsb
dec
cmp
xor
daa
mov
xor
sub
scas
dec
in
in
enter
jmp
and
mov
fs
adc
sub
inc
scas
mov
call
and
loope
outsl
test
cmp
sub
xchg
jo
fstpl
sub
test
mov
dec
adc
in
mov
adc
or
cmp
or
jns
push
out
imul
ss
and
jnp
stos
xor
int3
cmovle
imul
cmp
mov
push
push
or
test
xchg
and
adc
jle
aad
mov
cltd
arpl
hlt
push
jbe
add
lods
ficoml
dec
push
adc
xchg
mov
iret
pop
cli
lods
fldl
mov
push
adc
je
jmp
fwait
das
sbb
sarl
dec
sub
push
jge
xor
adc
aaa
or
sub
ficoms
ret
sbb
sub
fiadds
enter
leave
mov
xor
add
in
test
lods
and
mov
push
push
xor
int3
cmovne
rcr
push
xor
dec
dec
cmp
mov
jle
jns
in
push
mov
in
xchg
or
out
dec
lea
add
ss
push
sub
mov
fnstenv
fdivl
jge
dec
dec
dec
sarl
cmpsl
add
sub
sbb
dec
out
std
pushf
mov
or
int
divb
xor
sub
push
into
call
push
out
push
push
xchg
test
je
in
dec
jb
sbb
pop
pusha
fisubs
adc
push
cmpsl
xchg
shrl
scas
cmc
faddl
dec
adc
dec
push
inc
adc
dec
ficoms
pop
pop
gs
fstpt
stc
dec
fmuls
cmpsb
adc
push
add
cs
lods
pop
mov
jg
xor
mov
inc
jnp
sub
cmp
gs
leave
ret
add
mov
int3
repz
and
je
push
xor
mov
ficomps
adc
pop
mov
mov
cmp
leave
or
leave
enter
adc
rcrl
pop
loop
cmp
flds
pop
fcompl
push
sub
dec
or
mov
pop
sbb
sub
mov
fst
push
mov
shr
in
fmulp
orl
daa
adc
push
hlt
daa
push
xor
jle
add
stos
xor
sbbl
and
xchg
sub
cmp
repnz
adc
pop
test
push
mov
pop
les
push
lods
ljmp
and
mov
or
mov
jne
rcrl
xchg
rcrl
or
ror
les
nop
ljmp
out
mov
sbb
pop
fdivrs
outsl
les
add
adc
mov
push
out
mov
jmp
lds
and
and
pop
jo
xlat
fmuls
pop
aad
fcom
sub
clc
mov
hlt
xlat
out
rcrb
jae
lds
mov
xor
mov
inc
out
or
jle
stos
push
pusha
or
mov
roll
mov
sbb
mov
mov
and
push
bound
notl
vmovddup
enter
cwtl
or
aad
stos
lods
sarb
xchg
inc
jae
ljmp
jnp
mov
roll
imul
pop
sbb
cmp
addl
test
out
push
lods
push
inc
pop
cmp
pop
jbe
aad
add
xlat
daa
pop
loope
nop
add
push
add
sub
je
pop
sub
cmpsb
cmp
dec
fwait
dec
mov
cmc
cmp
flds
sbb
fiadds
pop
leave
addr16
movsb
push
ss
orl
jle
jne
aas
rcr
ss
repnz
inc
sarl
sar
or
andb
pop
push
test
lds
cmpsb
loop
in
arpl
test
aas
arpl
jne
xor
call
decl
and
enter
icebp
nop
clc
and
mov
adc
jmp
pop
sub
or
fscale
lds
push
xchg
stc
loopne
nopl
nop
fs
mov
fs
in
pusha
push
hlt
xchg
cld
stc
lahf
and
dec
lret
lahf
ja
add
stos
daa
mov
js
cld
and
stos
xor
ret
pop
cld
pop
arpl
xor
dec
shrl
in
subb
xchg
mov
push
xchg
adc
pusha
add
rcrl
adc
push
pop
or
clc
lea
clc
or
jb
call
lds
sbb
test
and
cmp
stc
xor
imul
or
inc
jae
adc
aas
mov
xchg
xor
adc
icebp
aad
mov
sahf
test
pop
repnz
mov
xor
sub
push
sarb
frstor
cld
push
xchg
ffree
movsl
hlt
es
mov
fnsave
addr16
mov
pop
sbb
fmulp
jb
jecxz
push
ficomps
and
push
inc
pop
inc
sub
sbb
inc
fidivs
mov
pop
inc
cmpsb
dec
aad
xchg
xchg
sub
hlt
jb
dec
inc
jl
les
int
ja
adc
outsl
jbe
cmpsb
jbe
gs
adcb
mov
jne
fwait
dec
jl
rolb
aad
jns
imul
movsb
mov
mov
je
jne
jb
dec
aad
ja
rclb
fucomp
dec
bound
ljmp
inc
jnp
dec
pop
int3
testl
ljmp
jecxz
mov
cli
mov
mov
je
xor
adc
push
scas
int
jp
ficomps
sbb
xor
das
pushf
xchg
xor
incb
jnp
les
ja
sub
outsl
dec
repz
call
xchg
dec
xor
sub
clc
jp
jp
dec
jae
push
xor
daa
mov
jmp
clc
mov
jns
push
inc
jge
push
and
lret
jmp
fucomi
pop
push
cmp
aam
clc
add
jp
xor
cmp
fnsave
sub
inc
enter
or
add
jp
add
cli
cmpsb
outsb
and
das
pushf
test
out
loopne
inc
push
adc
or
test
inc
jnp
out
inc
das
cmp
data16
int3
mov
aam
dec
into
cli
pop
sub
out
push
push
insl
lds
mov
pop
and
mov
push
pop
sub
xchg
out
mov
rcll
pop
sub
pop
shl
jb
aad
movsl
push
mov
les
xchg
adc
jmp
mov
and
xor
ljmp
pop
cwtl
addl
les
dec
stc
mov
or
or
icebp
cmpl
xchg
pop
icebp
mov
dec
rcl
outsb
dec
into
add
mov
pop
cs
pop
mov
mov
and
shlb
push
mov
movl
out
imul
jmp
loop
jbe
xor
movsb
loop
mov
push
mov
in
jl
fcoms
jmp
inc
adc
dec
sub
xchg
das
xchg
fistpl
lcall
adc
jno
xorl
fdivp
mov
push
fucom
mov
inc
push
lret
push
xor
int3
pop
jno
push
adc
std
inc
dec
cmp
mov
test
mov
test
inc
and
bound
out
inc
cmp
dec
xor
jl
cmp
mov
sub
mov
push
xchg
jle
jg
movsl
jnp
cmp
pop
enter
mov
fidivl
jo
xor
rcl
mov
sbb
or
orb
mov
in
xchg
mov
jnp
in
push
aas
inc
adc
pop
clc
mov
mov
fld
cmpsb
popf
and
aad
push
sub
nop
and
nop
sbb
dec
inc
insb
jecxz
xchg
jmp
stos
inc
pop
dec
sbb
jae
xor
jb
lea
rcrl
enter
mov
rorb
shrl
mov
pusha
adc
push
pop
jo
adc
add
ret
pop
fucomp
xor
pusha
gs
and
mov
aam
xor
inc
cli
mov
rolb
roll
movsl
jmp
mov
mov
push
aam
adc
into
insl
cltd
jae
ds
adc
js
add
pop
sbb
out
push
sub
out
sbb
andb
pop
icebp
and
mov
lret
fsub
sahf
push
pop
and
mov
data16
push
sbb
hlt
push
cmp
mov
orl
cmpsl
fdivs
test
cmpsb
pop
sub
gs
and
adc
pusha
cmp
xchg
inc
dec
jmp
push
cmpsb
loopne
int3
pop
js
mull
popf
dec
push
mov
cmpsl
dec
pop
inc
adc
fidivrs
and
cltd
xor
push
xlat
lods
add
das
sbb
enter
adc
push
cmpsl
adc
aad
inc
mov
outsb
pop
cmc
pop
pop
popa
dec
rclb
mov
inc
sub
mov
adc
cmpsb
sub
push
cmp
arpl
popf
inc
dec
or
mov
xor
inc
ljmp
into
mov
shrb
daa
movsl
push
mov
das
mov
in
fsub
mov
scas
and
pop
jmp
mov
sbb
jne
cltd
inc
cltd
jl
mov
push
push
fcoms
cmp
push
pop
cmp
int
push
in
or
popf
mov
xchg
loopne
insl
push
xor
fdivs
out
pop
sahf
lahf
cmpsl
xor
add
stos
out
int
loopne
xchg
in
pop
shlw
lods
and
daa
sbb
popf
sub
jno
into
sbb
mov
sahf
inc
repz
xor
sbb
cmp
std
xchg
aad
mov
mov
xchg
in
push
aam
mov
das
cmpsb
xchg
sub
push
pop
in
mov
sub
ja
insb
mov
stos
sbb
cmc
xor
stos
mov
adc
lahf
and
les
sub
cmp
pop
shl
push
fsubl
pop
and
je
scas
and
popf
fs
stos
popf
test
mov
gs
out
cmp
imul
ja
mov
in
pop
sbb
mov
les
push
out
mov
enter
sbb
and
or
xchg
sub
outsl
mov
jmp
jb
jae
dec
js
fs
roll
adc
ds
js
add
movsb
xchg
pop
outsl
pop
je
jo
cmp
push
dec
adc
adc
or
fwait
mov
add
and
cmpsb
xchg
fsubrp
shlb
je
xor
xor
inc
rcrl
fisttpll
cmp
push
pop
arpl
cmp
mov
dec
xor
cmp
mov
jp
mov
cwtl
aas
or
icebp
xchg
xor
hlt
pop
jle
sbb
jne
jno
je
sbbb
les
mov
imull
lret
subb
sub
test
push
inc
mov
xchg
gs
call
push
arpl
jg
inc
inc
push
xchg
xchg
jae
dec
pop
mov
jmp
ds
add
test
stos
xor
xor
lea
inc
mov
jge
ss
stos
enter
repnz
roll
dec
lret
lret
test
subl
mov
enter
test
pushf
add
adc
jl
jbe
mov
loop
outsb
add
jecxz
or
loope
aam
push
adc
xor
inc
testb
loope
pop
and
add
cmp
add
sbb
mov
jmp
pop
cmpl
adc
jns
mov
outsl
pop
dec
dec
jle
and
jne
movsl
aam
out
sbb
and
jecxz
jmp
xor
stos
xchg
dec
adc
cltd
adc
inc
push
adc
push
inc
dec
cmp
leave
mov
pop
popf
adc
fmul
enter
add
xchg
cmpsb
dec
in
xor
dec
or
popf
mov
jmp
xor
mov
lret
or
cmpsb
cmp
cmp
push
loop
lods
pop
mov
or
scas
out
push
adc
out
mov
push
in
icebp
ret
lods
pushf
das
and
pop
arpl
inc
in
in
and
shr
jl
ficomps
sub
mov
xchg
push
push
arpl
mov
lret
mov
adc
adc
inc
push
adc
sub
lods
fistpl
dec
into
sbb
sbb
dec
mov
lret
add
cltd
xor
push
xchg
and
arpl
cmpsl
les
jl
fidivrs
sbb
les
dec
cltd
inc
xlat
shll
lds
inc
push
adc
mov
test
xchg
movb
mov
lock
dec
pop
mov
out
mov
pop
cmp
inc
mov
add
dec
adc
jb
pushf
sub
jne
dec
test
call
aad
loope
sbb
push
stos
push
gs
mov
pop
mov
sub
daa
int3
fidivrs
sbb
fstpl
out
gs
push
pop
cmp
and
mov
dec
mov
cmc
xchg
out
inc
sbb
xor
es
cmp
outsl
lds
aaa
dec
fs
fidivs
jns
pusha
ds
fiadds
sub
cltd
mov
push
cmpsl
xor
rol
inc
int3
arpl
stos
mov
mov
mov
out
lds
push
adc
adc
xor
loopne
adc
leave
test
dec
addr16
fisubrl
aad
arpl
idivl
ja
insb
dec
push
dec
sbb
dec
rol
mov
xchg
mov
jb
cmp
sarb
arpl
push
js
and
test
loope
push
stos
fsub
lods
in
cmp
lods
pop
jmp
pop
flds
sub
inc
test
pop
jbe
adc
adc
pop
test
inc
std
ljmp
arpl
repz
and
es
dec
ljmp
stos
or
xchg
push
jmp
add
push
lcall
mov
adc
pop
and
fistpll
mov
pop
call
cmp
sub
jb
mov
push
jle
pushf
icebp
inc
dec
and
lea
sbb
sahf
cltd
sbb
test
push
mov
lods
sbb
daa
sbb
add
push
call
xchg
enter
push
lods
sti
xlat
repnz
test
mov
pop
add
cs
jp
sbb
out
dec
xor
inc
dec
aad
sbb
ror
mov
jnp
shrb
ret
repnz
dec
lahf
dec
loop
xor
inc
clc
enter
enter
imul
mov
pop
mov
jl
mov
enter
in
pop
push
cmp
popf
adc
mov
xor
outsl
daa
push
inc
test
inc
dec
push
paddq
out
stc
fdivrp
mov
pushfw
ljmp
out
pop
cmpsl
imul
adcl
std
jmp
pusha
xor
bound
shrb
dec
dec
jbe
cmp
sbbb
sbb
lcall
cmc
jge
cmpsl
jmp
in
push
jmp
addr16
cli
incl
adc
int3
jmp
aad
hlt
inc
jmp
les
loop
sbb
test
pop
nop
or
xor
test
inc
cmc
add
mov
ret
stos
test
sbb
gs
cltd
dec
pop
fidivs
rorb
roll
pop
cmp
cld
push
adc
or
shrl
in
xchg
mov
jb
out
aas
push
xchg
adc
pop
ja
je
pop
cmp
sub
cmpsl
add
lret
ss
cmp
xor
push
std
cmc
rcll
lahf
cltd
repz
and
push
adc
xchg
shlb
sub
enter
cwtl
add
in
cmp
jo
pop
ljmp
cmp
loope
ja
mov
mov
cmpsb
cmp
shll
xchg
mov
sti
lea
sub
fldt
mov
cs
loopne
adc
push
cmpsb
dec
ss
push
fisttpll
push
cmpsl
xor
test
xchg
add
cmc
pushf
xchg
sub
mov
cmp
gs
adc
in
sahf
dec
test
ret
cmp
insl
adc
dec
lods
jp
xor
dec
ss
adc
lods
xchg
push
pop
pop
aaa
cmp
push
std
loope
mov
adcl
dec
xor
lds
imul
scas
jmp
add
dec
sbb
lea
adc
subl
pop
adc
inc
mov
les
dec
sub
pop
fimuls
les
arpl
xor
cmp
xor
ja
add
clc
add
pop
dec
xchg
lret
test
or
repnz
cmpsl
dec
jmp
mov
fs
or
xchg
cld
sarb
mov
lret
xor
cmp
dec
adc
add
sub
out
adc
cmp
shl
cmp
cmp
popf
cmp
cmp
dec
popf
dec
lds
fcompl
and
push
shl
jbe
pop
inc
dec
out
hlt
dec
lds
ficompl
fisttpl
mov
call
cmpsl
loope
mov
orb
movsl
dec
xor
pop
mov
int3
loop
jmp
scas
pop
xor
scas
pop
loope
mov
pushf
push
ret
pop
cmp
into
nop
aam
scas
scas
push
stos
pop
cmp
jg
jbe
sub
shll
fs
out
jp
jns
xchg
stc
out
popa
pop
push
and
mov
sub
inc
ret
ds
les
into
push
dec
mov
or
mov
inc
adc
push
sbb
icebp
pop
rcll
xorb
jle
std
cmpb
pushf
mov
or
xchg
mov
lret
jp
in
ret
ret
dec
sub
mov
xor
sahf
adcl
inc
dec
shrl
test
xorl
cmp
pop
clc
mov
cmp
cld
jae
movsb
push
add
lret
cltd
mov
mov
push
and
jns
icebp
jecxz
cmp
aas
inc
sub
xlat
sub
push
adc
in
mov
pop
xor
dec
aam
xchg
fisubs
xchg
fcmovnu
cwtl
push
adc
inc
icebp
push
xchg
mov
push
int
gs
adc
out
push
mov
jg
jbe
adc
into
movsl
push
push
cwtl
xchg
jle
sahf
mov
xor
dec
ror
add
mov
mov
std
leave
and
std
pop
imul
lahf
xchg
call
xchg
repnz
dec
aas
es
adc
js
subl
push
pop
data16
pushf
fucomip
dec
sbb
into
popa
cmp
xchg
int
inc
or
push
inc
push
dec
or
push
adc
xlat
loope
mov
icebp
je
adc
cmp
fdivs
ficoms
insl
inc
out
aad
sub
test
mov
sub
les
negb
das
sub
mov
mov
aas
xchg
inc
add
cmp
in
push
dec
test
das
mov
dec
popf
cmp
xor
lods
cmc
ljmp
icebp
push
or
flds
in
je
shrl
pop
pop
lods
out
fidivrs
jge
test
mov
ss
lret
cltd
popf
cmp
popa
sub
cmp
test
lods
cmc
ljmp
dec
cltd
xor
cmpsl
mov
sub
int3
outsb
pushl
js
fcomps
mov
inc
pop
sub
cmp
mov
and
ja
ficoms
aad
adc
inc
jp
lcall
mov
cmp
rcrb
xchg
je
dec
mov
add
xor
push
adc
jle
into
pop
ljmp
fs
leave
add
ljmp
jo
ret
push
cmpsb
fisttpl
mov
xchg
aam
les
std
aad
push
pop
mov
sarl
cmp
sub
sbb
inc
inc
pop
cmp
jl
out
ficoms
or
ret
stos
push
xor
adc
lods
xchg
push
pop
pop
cli
inc
ja
jg
mov
dec
xor
fidivrs
stos
sub
push
cmpsb
loopne
int3
pop
js
ds
push
dec
popf
scas
test
outsb
mov
les
jmp
adc
push
rcll
cltd
popf
adc
xorl
je
test
mov
fistpl
ljmp
pop
mov
and
dec
popf
cmp
pop
mov
les
lods
inc
mov
add
call
ss
cmp
je
popf
cmp
jl
sarl
xorl
test
cmpsb
dec
out
dec
mov
dec
xor
int
bound
mov
push
add
mov
jnp
sbb
add
test
lds
pop
xor
cmpsb
dec
pop
loope
xchg
or
push
test
in
imul
int
lcall
das
inc
cmp
pusha
or
mov
enter
dec
andb
mov
dec
fwait
cmp
jbe
insb
and
and
stos
inc
out
xchg
cwtl
and
jns
in
insl
and
jnp
dec
dec
movsb
dec
add
cmp
mov
adc
add
cli
adc
push
cmpl
xor
jne
lea
mov
in
fs
xchg
jl
xchg
stos
in
jbe
pusha
xchg
mov
and
inc
add
mov
cmp
stos
in
sub
mov
das
and
cmpsb
adc
cld
loope,pn
sbb
mov
pusha
adc
gs
ret
mov
mov
pop
stc
pop
pop
mov
inc
xchg
cmpsl
les
pop
ficomps
push
adc
xor
mov
mov
xchg
cwtl
cmp
push
dec
mov
divb
movsl
pop
and
test
sbb
ret
xchg
leave
insl
inc
ret
pop
test
inc
cmp
jp
clc
add
test
adc
mov
fadds
jnp
inc
xor
or
xchg
nop
add
add
jecxz
out
hlt
cmp
jne
outsb
movsl
xchg
frstor
add
mov
cmp
ret
cmp
dec
push
adc
cmp
aam
xor
jle
loopne
cmpsb
addr16
stos
std
jle
out
adc
fiadds
and
inc
sub
inc
ljmp
push
sub
clc
test
imul
lcall
mov
pop
sub
lock
jae
insl
pop
repz
and
adc
adc
add
popf
dec
orl
add
push
test
outsl
roll
pop
loope
out
cmp
add
sub
mov
or
arpl
adc
xor
andb
cmp
mov
int3
cld
sub
fildll
push
xor
imul
bound
adc
pusha
mov
into
mov
cmp
cmp
push
loop
lods
pop
mov
or
push
sub
les
rcrb
xor
adc
push
adc
push
inc
jo
lock
sbb
push
sub
imul
data16
int3
repz
xchg
push
pop
clc
shl
sahf
add
cld
cs
test
std
test
push
test
int
pop
mov
push
adc
test
mov
xor
inc
push
cmp
fisubl
in
nop
jmp
xchg
mov
cmpsb
lods
pop
mov
dec
sbb
int3
add
sub
and
lods
pop
mov
int
cmp
xor
xor
push
les
rcrb
push
cmp
pop
push
ficoms
push
fwait
pop
imul
inc
shlb
dec
stos
outsb
pushf
daa
push
stos
push
lods
sar
xchg
xchg
jb
push
xlat
lods
xchg
jae
lds
xchg
dec
push
adc
shrl
lock
cmp
pusha
or
int
out
mov
lret
mov
ljmp
jmp
push
gs
or
in
sahf
sub
cmp
fcomps
jmp
push
cmpsb
loopne
int3
pop
js
pop
icebp
movsb
pop
push
ja
mov
pushf
popf
outsl
ss
push
jmp
stos
sbb
mov
shll
gs
cmp
mov
sub
cld
xchg
lahf
pusha
fwait
pop
inc
test
das
push
adc
dec
push
adc
push
inc
push
mov
les
lock
xchg
add
push
cmovl
jg
sub
xor
sub
adc
cmp
hlt
or
sub
add
add
sbb
push
lods
mov
inc
fisubl
xchg
repnz
repnz
ret
and
int3
out
inc
lcall
and
cli
inc
sub
fisubl
inc
add
and
into
or
mov
push
and
inc
subl
test
loope
mov
nop
lret
pop
pushl
data16
gs
cli
movsb
xchg
nop
xchg
xor
or
cmp
lods
inc
sub
inc
and
jl
fcompl
inc
movsb
xlat
fisttps
idivb
jbe
arpl
inc
das
cld
sub
fistps
stc
imul
push
ljmp
test
push
pop
iret
cmp
push
adc
adc
jmp
dec
sbb
sub
sti
mov
cmpb
enter
loopne
push
add
sbb
in
mov
cwtl
mov
push
xor
and
fists
xchg
imul
int3
aad
mov
pop
mov
or
mov
fsubr
lea
adc
in
icebp
insb
adc
push
add
sub
xchg
hlt
mov
pop
cmp
std
int3
lret
mov
mov
out
push
add
cmp
std
pop
sub
dec
xor
inc
pop
add
imul
loope
jne
cli
mov
xchg
insb
pop
cmp
sub
cmpsb
insb
iret
sbb
adc
scas
lcall
xchg
cmc
mov
jl
or
mov
out
fildl
cltd
and
and
pop
pushf
cmp
aad
popf
cmp
fs
test
add
and
jmp
ljmp
out
jno
xchg
sbb
push
aam
bound
gs
push
pop
pop
jl
ja
mov
gs
ficoms
out
or
jecxz
dec
jmp
out
lret
inc
pop
lret
sahf
cmp
fwait
adc
dec
popf
sub
sub
mov
or
fbld
adc
lea
arpl
inc
aam
pop
or
dec
push
adc
dec
mov
adc
lods
pop
adc
enter
andb
mov
jnp
hlt
xchg
dec
jno
and
fisttpl
sub
cmc
push
and
cmpsl
cltd
xor
loopne
inc
inc
ret
sahf
cmp
frstor
jno
dec
loop
push
test
cmp
push
out
inc
lods
pop
mov
push
push
push
clc
or
int3
pusha
in
sbb
inc
and
je
out
lcall
cmpsl
dec
mov
push
pop
hlt
sarl
cmp
mov
sub
out
mov
gs
dec
xor
ret
rcrb
adc
mov
push
imul
xchg
sub
dec
dec
popf
cmp
aad
mov
inc
dec
add
sbb
push
adc
xor
dec
pop
inc
pop
push
loope
dec
xor
pop
jecxz
je
stos
je
jge
and
cmpsb
andl
lds
cmp
and
inc
dec
enter
es
push
cmpsb
dec
mov
enter
inc
dec
popf
cmp
push
add
in
and
fisubrs
jbe
cmpsb
dec
pop
push
in
and
sub
popf
cmp
cmp
ja
rsm
outsb
adc
fsubrl
inc
push
cmpsb
dec
mov
sub
cmp
push
adc
test
push
leave
mov
pop
and
mov
lcall
lahf
cmp
popf
cmp
stos
out
outsl
adc
mov
in
pusha
loope
mov
pop
or
loop
js
out
fnstsw
sbb
test
pop
adc
leavew
loope
stos
movsb
dec
sahf
dec
adc
call
mov
lods
push
add
nop
jae
aaa
sahf
dec
push
mov
out
aad
dec
jno,pt
test
jbe
out
push
sub
adc
cwtl
xor
inc
push
lods
adc
movsl
cli
test
dec
ret
xor
mov
push
mov
or
xchg
ret
dec
adc
cmp
frstpm(287
lcall
mov
cli
arpl
xor
inc
mov
scas
in
mov
mov
pop
in
test
movsl
cltd
mov
movsl
push
out
or
jns
sbb
test
and
pop
push
lds
lea
push
push
sub
sbb
push
addb
push
aad
mov
jne
lods
sub
test
repnz
mov
inc
out
add
cmpsb
pop
xlat
and
mov
xor
leave
inc
xchg
inc
or
fildll
hlt
pushf
fcomps
mov
mov
sar
inc
mov
ss
adc
sbb
jbe
in
fisubrs
xchg
jle
add
mov
fxch
xor
xchg
cs
mov
repz
sub
push
or
shlb
es
leave
inc
mov
hlt
dec
fwait
shlb
adc
mov
cmp
mov
adc
xchg
mov
fsubs
cli
in
add
xchg
sub
xchg
xchg
sub
fcmovne
jle
mov
sbb
mov
repnz
sub
cmp
adc
lock
ficompl
sahf
adc
cmp
cmp
cmpsl
cmp
inc
push
or
insb
pop
adc
adc
mov
int3
xor
mov
andb
aad
mov
mov
pop
sti
frstor
negb
sub
sub
movsb
mov
fs
out
faddp
enter
sbb
cmp
dec
cltd
inc
xlat
shll
dec
out
cmp
mov
or
push
out
jl
pop
fucomp
pop
cmp
shll
mov
les
push
and
adc
mov
lahf
inc
xlat
cmp
xor
sarl
rcll
fmulp
enter
inc
fidivs
xchg
imul
xor
movsb
shlb
clc
sbb
or
repnz
ret
xchg
jbe
cld
adc
out
fisubrs
test
ret
dec
out
mov
repz
sub
out
xor
lea
cmpsl
adc
mov
ficompl
hlt
mov
scas
ds
inc
out
sbb
sbb
push
mov
sbb
pop
imul
incb
dec
add
leave
shrl
adc
pop
fmuls
cmpsw
lcall
mov
pushf
mov
and
pop
inc
rcll
dec
adc
mov
ret
dec
loope
fwait
aad
sbb
dec
xor
ss
pusha
adc
mov
mov
dec
jb
subl
and
test
popa
push
inc
sti
mov
dec
pop
and
loopne
mov
jmp
enter
stos
push
loope
aad
outsl
inc
gs
sub
movsl
popf
mov
jmp
int3
pusha
mov
pushf
push
adc
das
mov
loope
ja
jg
cmp
enter
mov
inc
clc
mov
dec
pop
inc
fsub
xchg
movsl
or
int3
bound
icebp
cmpsb
dec
call
stos
arpl
fsubrp
push
dec
adc
pop
ljmp
rcl
test
xchg
andl
loopne
push
stos
aam
xchg
xchg
ret
inc
sarb
pop
cmovge
adc
mov
fwait
sti
lock
sbb
add
cmp
push
push
scas
and
cmp
js
insb
daa
mov
stc
stc
insl
cmp
andb
and
imul
ret
jp
cwtl
pop
pop
rcl
push
cltd
fs
fldt
data16
pop
ret
push
sbb
mov
jecxz
cltd
fnstenv
jo
and
jns
cmpsl
adc
pop
loop
cmp
das
xchg
por
or
test
push
jno
mov
push
ljmp
insl
pop
js
pop
clc
rcl
lcall
fbstp
mov
pop
lock
iret
test
inc
pop
jmp
mov
icebp
pop
movsl
sub
stos
lds
push
adc
or
out
and
or
pop
cmp
enter
sbb
cwtl
cld
repz
jb
mov
cmp
jnp
lret
mov
fists
lahf
xchg
gs
arpl
push
sbb
sbb
cmpl
inc
int3
cmpsl
cmp
and
cmp
subl
add
idivb
add
loop
mov
pop
das
push
test
xor
and
add
das
or
or
es
sti
mov
xor
cmp
push
fwait
sub
es
cld
pop
jne
rcrl
add
jmp
imul
fimuls
out
push
sub
sub
push
cltd
xor
pop
insl
push
mov
mov
ja
fs
stos
push
aad
lea
xor
cmpsl
dec
out
dec
push
call
cmp
cmc
xchg
mov
test
sub
out
adc
push
jnp
imul
sbb
inc
lcall
and
sbb
mov
je
leave
stc
imul
xchg
dec
out
adc
cmp
ds
push
loope
xor
lods
iret
sub
ljmp
mov
popf
xchg
push
ja
cld
mov
mov
out
xorl
imul
inc
stos
rcll
mov
insl
test
dec
popf
scas
mov
cld
fiaddl
int
and
aad
mov
lcall
push
mov
les
sahf
cmp
cld
cmp
out
push
mov
and
das
mov
jmp
cmpsb
dec
popf
sub
jns
mov
stos
push
push
inc
sub
icebp
push
xchg
popa
pushf
cmp
xchg
dec
popf
cmp
fldl
ja
aad
es
cmpsl
dec
cltd
or
leave
outsl
les
dec
popf
inc
or
jmp
mov
loopne
push
ficompl
inc
push
mov
dec
mov
xor
cmp
jno
cltd
xor
push
cmpsb
push
mov
gs
pusha
cmpsb
dec
popf
add
ljmp
popf
lods
jbe
cmc
ljmp
mov
int3
pop
js
adc
movsb
mov
or
rcl
xchg
inc
pusha
out
fidivrs
sarb
push
cmpsb
cmp
out
test
out
mov
sub
cmp
push
adc
pop
mov
fldenv
lcall
mov
into
ljmp
js
out
adc
cmpsb
mov
add
gs
mov
push
loope
mov
dec
push
fmull
rcll
stos
mov
adc
lret
add
and
sbb
cmp
lds
lahf
cmp
in
dec
inc
test
nop
in
test
xor
push
int
ja
jmp
adc
fstpt
out
adc
lcall
daa
sbb
ret
cwtl
cmp
iret
push
xchg
ljmp
cmp
int
fwait
and
add
inc
xchg
lahf
inc
dec
lds
fwait
inc
into
mov
lret
cmpb
pop
pop
stos
xchg
test
adc
or
push
iret
cmp
fucomip
cmp
frstpm(287
lcall
movsl
push
cli
imul
ficoml
inc
repnz
aas
imul
xchg
add
adc
cmp
das
es
call
mov
and
mov
testb
jmp
stc
mov
sub
push
dec
push
sub
push
outsl
and
or
inc
dec
adc
cmpsl
mov
sbb
mov
sbb
pop
ficompl
out
in
inc
loope
sbb
stos
xchg
popf
mov
inc
pop
cmpl
and
ret
ret
repnz
sti
repz
cmp
or
mov
cmpl
sti
cwtl
insb
fistps
outsl
test
jecxz
xchg
jl
lods
daa
dec
rorl
push
js
cli
loop
jle
jns
clc
test
jbe
inc
je
out
sub
push
orl
pop
or
jge
inc
push
add
imul
sbb
das
mov
ss
outsl
sub
lea
aad
mov
dec
icebp
mov
lea
hlt
jle
mov
sbb
mov
stos
push
fucom
lods
xlat
out
rcrb
inc
call
pop
mov
lcall
push
adc
xor
das
and
mov
imul
sub
js
inc
out
add
cmp
dec
adc
jb
sub
lods
inc
dec
bound
fstpt
das
in
sub
push
inc
mov
pop
xor
out
fs
inc
mov
inc
cmp
movsb
mov
dec
sbb
cmc
ljmp
cld
bound
xor
orl
mov
mov
mov
inc
sub
mov
andb
fwait
inc
aad
les
jp
dec
pop
mov
insb
test
mov
sahf
addr16
enter
int
xor
or
dec
push
adc
mov
insl
inc
test
mov
enter
jo
xchg
sub
cmp
xor
dec
popf
sub
add
mov
rclb
push
cmpsb
jecxz
or
mov
pop
lret
jmp
cmp
loop
or
outsl
sub
cltd
xor
pop
mov
lds
movsl
popf
jno
out
fidivrs
stos
xchg
xchg
cmc
push
aaa
out
lcall
das
jne
arpl
mov
and
ja
lods
movups
adc
cmpsb
cmp
cs
aad
notb
hlt
sahf
ja
sub
aad
imul
mov
int
pop
adcl
push
pop
shlb
insl
cli
mov
ljmp
dec
cltd
inc
das
sbb
add
cmp
cmp
aad
jns
ljmp
ss
gs
jmp
cmp
sub
in
fidivrs
xchg
cs
cmpsb
dec
addr16
xor
dec
jmp
cmpsl
loope
inc
aam
fidivrs
push
stos
push
lods
sahf
ss
xor
push
jns
je
cmpsl
mov
cwtl
popf
pop
jp
jmp
ror
test
ficomps
xchg
or
push
cmpsb
dec
out
dec
and
shlb
in
aam
out
jmp
push
pop
mov
into
in
cmp
mov
cmp
xbegin
arpl
adc
in
mov
push
or
sar
insb
and
xchg
das
and
xchg
pop
fwait
test
adc
or
add
and
push
push
mov
inc
ds
xchg
jp
shr
push
out
into
jne
loop
out
cmp
aas
int
test
insb
icebp
inc
dec
sub
mov
push
je
sub
and
gs
cwtl
imul
sub
pop
bound
xchg
daa
and
sti
inc
hlt
adc
filds
mov
daa
sub
insl
jmp
ret
lahf
cmpsb
or
pop
jg
repnz
xchg
mov
mov
ljmp
rolb
mov
mov
jns
shlb
imul
add
cs
mov
inc
mov
mov
xchg
insl
inc
xlat
xchg
fwait
aam
jl
xchg
cli
fwait
jno
dec
sbb
stc
jl
mov
aas
add
push
push
pop
lret
repz
fsubrp
lea
jge
lcall
xchg
rorb
stos
push
cmp
xchg
mov
sub
push
mov
scas
mov
out
xor
cmp
xor
cs
cmc
data16
add
cs
bound
dec
sub
adc
pop
repnz
xor
ljmp
pop
loop
hlt
out
cli
mov
icebp
test
or
pop
cmp
es
adc
pop
aad
sbb
mov
xchg
loopne
inc
dec
jmp
push
cmpsb
ds
fs
int
dec
popf
cmp
into
add
mov
mov
dec
pop
cmp
xchg
pusha
or
jmp
inc
cmp
movsb
outsb
jnp
ljmp
dec
mov
bound
movsl
dec
xor
dec
popf
cmp
fisttpll
nop
sub
stos
and
fdivr
cwtl
xor
add
das
cltd
jmp
rcl
cmp
cmp
leave
mov
imul
inc
pop
adc
loopne
out
int3
xor
cld
mov
cmp
mov
or
popf
lods
outsb
jnp
ljmp
ss
xor
cmp
adc
popf
cmp
rclb
sub
out
jb
test
test
and
daa
push
cmp
mov
rorl
dec
dec
leave
outsb
cmc
ljmp
pop
loope
lretw
or
dec
popf
dec
into
fiaddl
push
adc
clc
sub
or
pusha
or
jmp
fs
mov
dec
popf
xchg
push
fwait
pusha
cmpsb
dec
popf
add
in
cs
data16
aad
rcll
lahf
cwtl
xor
sub
je
and
xor
cmp
jno
stos
mov
jb
mov
push
sub
xor
cmpsl
dec
jmp
mov
test
xor
es
xchg
xchg
lds
je
mov
hlt
push
fnstsw
sahf
fistps
cmpsb
loopne
mov
movsb
dec
jmp
cmpsl
dec
jmp
mov
jo
push
cmc
aam
cmpsb
xor
sbb
movsb
dec
out
dec
psubsb
cmpsl
pop
repz
jbe
lods
iret
leave
hlt
ljmp
adcb
push
aad
cmp
je
les
popf
cmp
inc
jg
test
inc
pop
imul
mov
add
add
out
adc
andb
adc
addr16
fldenv
aam
pop
adc
enter
push
out
cmp
pop
xor
mov
push
xor
call
sub
in
lret
adc
in
dec
lcall
shrb
and
cli
lahf
cmp
inc
or
lock
and
sbbl
in
jbe
out
aad
mov
sub
push
cmpsl
pop
movsl
sub
imul
xor
xor
xor
test
dec
lds
or
mov
push
sub
mov
push
add
mov
sbb
loopne
fs
imul
movsb
sbb
mov
lods
or
dec
fcompl
push
mov
repnz
push
xor
sub
or
pop
adc
xchg
imul
shrl
sbb
sub
dec
in
leave
xchg
gs
jns
cmp
push
adc
or
inc
xchg
push
ret
dec
loop
test
push
mov
fistps
adc
mov
or
xor
mov
in
sti
cmp
sub
stos
inc
lods
test
jo
stos
inc
jmp
repz
jnp
mov
cmp
inc
clc
pause
push
jge
mov
push
paddw
jo
mov
enter
lds
popf
imul
cltd
lods
or
in
outsb
or
test
shll
mov
out
stos
hlt
dec
inc
mov
mov
adc
std
pop
out
loope
lods
cmp
push
push
jp
adc
push
jmp
cli
mov
imul
sarb
test
and
dec
adc
test
pop
sbb
jo
sbb
mov
jno
mov
dec
pop
inc
cmp
fs
popf
cmp
rcrb
pop
jg
out
lods
iret
sub
ljmp
loopne
int3
pop
mov
ja
cmp
popf
dec
cmp
subl
cvtdq2ps
pop
gs
and
std
pushf
cmp
dec
dec
popf
dec
int
sbb
mov
fbstp
es
jbe
lahf
mov
xor
cmpsb
dec
popf
xchg
fistps
mov
das
es
jbe
lahf
mov
xor
adc
popf
cmp
bsr
mov
das
lahf
repz
add
sub
push
sar
inc
inc
dec
les
les
popf
insl
mov
movsl
inc
mov
js
lret
xchg
sub
xor
or
popf
xchg
loop
lods
movups
or
test
dec
cltd
xor
mov
cmp
cmp
dec
movsb
dec
out
dec
xchg
out
fidivrs
stos
and
cs
js
lret
xchg
sub
je
mov
mov
cmc
ljmp
mov
int
mov
push
xchg
je
dec
popf
xchg
or
jne
cmp
aad
inc
icebp
test
lret
xchg
sub
decl
lahf
lds
add
loop
and
xchg
aaa
int3
lcall
popa
push
lret
call
dec
sbb
sar
adc
out
test
cmpsb
cmp
dec
scas
jne
mov
inc
mov
jns
dec
jmp
stos
fidivs
mov
je
inc
mov
add
inc
dec
test
pop
or
mov
dec
pop
cmp
test
lret
call
in
pop
and
sub
jl
sbb
loope
fistpl
or
clc
je
stos
setge
ficomps
shrl
jb
push
sub
cld
jbe
inc
bound
xor
dec
into
sbb
pop
aaa
call
fnstenv
sub
push
mov
sub
loopne
add
jae
jbe
jb
ret
cmc
adc
loop
test
inc
adc
xchg
sub
sbb
ja
mov
dec
sahf
cmp
mov
jl
lcall
repz
pop
pop
fisubl
adc
xchg
dec
push
push
pop
jp
sbb
mov
sub
mov
inc
xchg
sub
pop
fwait
and
ss
lods
fldln2
nop
aaa
jnp
jl
xchg
cli
insb
dec
mov
sbb
sarl
icebp
mov
repnz
lret
out
push
adc
push
xor
push
mov
mov
daa
popa
movsl
sbb
adc
lods
push
insb
or
nop
inc
mov
push
enter
mov
clc
and
hlt
dec
xor
scas
popf
pop
adc
cld
pop
sbb
les
xchg
push
jb
testl
loop
mov
adc
or
pop
dec
xchg
pop
cmpsl
lret
pop
mov
notb
pop
ret
sbb
lock
jne
icebp
sahf
popa
pop
movsl
sub
mov
cwtl
and
push
outsl
pop
lds
test
pushf
bound
mov
mov
rorb
mov
xorl
test
fsubrp
lea
ja
sbb
lods
daa
mov
arpl
fsts
inc
and
scas
mov
mov
rorl
popa
mov
mov
cld
pop
adc
or
fucomi
in
sub
or
into
pop
outsl
lds
mov
xchg
sbb
cld
das
push
mov
adc
aas
clc
mov
stos
dec
inc
inc
jecxz
sub
mov
ljmp
mov
mov
jns
cwtl
scas
inc
push
test
popf
fs
jmp
lock
or
arpl
add
mov
pop
inc
sbbl
mov
dec
xor
xchg
xchg
ja
lods
adc
ljmp
push
xor
out
pusha
xor
out
adc
negl
sub
cmpsl
fdivrs
cmpsb
icebp
lretw
and
dec
popf
cmp
rclb
jmp
jne
jb
test
test
and
daa
push
mov
inc
fucomi
shll
data16
ljmp
dec
cltd
xor
movsb
cmpsl
rorb
dec
testb
mov
je
mov
mov
cmp
fldenv
shll
test
push
pop
push
fistpl
adc
das
stos
and
mov
js
shl
cmp
jl
mov
mov
rcl
jmp
jp
fidivrs
stos
push
mov
inc
pop
mov
sub
mov
je
mov
pusha
inc
mov
insb
mov
ds
fs
out
into
dec
popf
dec
loop
sarl
pcmpeqw
push
lods
push
in
cmp
outsb
rorl
sub
xor
jecxz
enter
std
gs
push
cmp
cmp
loopne
dec
popf
dec
ds
shll
out
fidivrs
fsub
test
xor
mov
cmp
in
rcrl
es
ljmp
dec
cltd
xor
add
dec
arpl
setae
out
fidivrs
stos
push
fucomi
lea
cmp
lret
xor
popf
inc
idiv
cmp
hlt
mov
xor
push
test
adc
push
cmpsl
xor
sub
mov
mov
stos
push
test
and
sarl
add
cmpsl
dec
popf
cmp
hlt
jmp
loope
test
cmpsl
loop
jmp
imul
mov
fucomi
ffree
inc
sbb
das
and
pop
out
leavew
jmp
jg
cmp
dec
push
rcrl
imul
out
mov
daa
dec
lahf
xor
dec
mov
cmp
xchg
inc
mov
push
xchg
cmpsb
in
in
xor
ds
imul
cmp
ss
jae
push
fsubrs
mov
ret
in
mov
push
mov
fiadds
jnp
fidivs
and
inc
icebp
pop
es
fsubrp
ds
arpl
sbb
xor
subl
lods
movsb
xor
pushf
in
sub
clc
push
add
dec
dec
iret
rorl
rorb
pop
push
push
mov
ss
insb
out
push
cmpsb
std
and
or
test
sti
xchg
adc
jnp
imul
mov
js
lea
in
mov
enter
sahf
cmp
lock
mov
push
fldenv
inc
xchg
sub
lcall
xchg
ss
xchg
sbb
aaa
xlat
pop
roll
in
repnz
sub
shl
int
mov
mov
fbld
cmp
adc
mov
movsb
gs
push
or
xor
adc
shr
out
int3
dec
xor
orl
xor
push
jg
sti
std
adc
pop
inc
pop
out
mov
sub
fsubrl
push
jmp
jbe
pop
mov
cld
daa
insb
mov
pop
xchg
mov
inc
inc
fdivrl
mov
ds
shll
into
sbb
daa
into
sbb
test
sahf
mov
push
test
xor
call
push
ljmp
and
xor
xchg
jmp
cmpsb
dec
cltd
mov
and
lds
pop
lea
leave
test
cmp
aam
mov
push
pop
imul
mov
out
ja
fmulp
or
aad
inc
pop
xor
ror
xchg
sub
popf
cmp
pop
fdivrs
outsl
les
cli
std
push
dec
stos
push
repz
call
dec
push
adc
xchg
shr
les
lock
inc
sbb
cmp
sub
add
cmp
in
in
cmp
xchg
or
test
xor
scas
sub
add
cmp
in
rcrl
es
ljmp
cmp
mov
pushf
arpl
xorb
fdivrl
arpl
mov
ljmp
and
pop
imul
xchg
pop
mov
and
enter
or
fsubrl
and
dec
les
js
pop
and
popf
cmp
imul
ret
int
test
std
cmc
ljmp
dec
ss
xlat
loope
dec
stc
movsb
dec
or
ds
cmp
fidivs
insl
aad
push
test
xor
fisttpll
cmpsb
shl
push
out
adc
mov
or
fisubs
aad
neg
popf
jb
jbe
push
fcmovne
mov
add
sahf
hlt
sahf
cli
sbb
aad
mov
jecxz
gs
rorl
dec
nop
aad
or
ja
jno
enter
add
sarl
add
sub
dec
push
dec
push
outsb
shll
arpl
test
out
cld
aam
xor
add
movsl
dec
or
loope
mov
mov
pop
xchg
dec
and
xor
xorl
xchg
popf
call
ja
jo
dec
int
xlat
push
inc
out
cmpsl
dec
ljmp
sbb
popa
sub
xor
cmpsb
cmp
mov
in
fnstsw
test
dec
lcall
movsb
loop
xorl
icebp
sahf
cmp
fwait
pop
mov
sqrtps
inc
shl
stos
xchg
push
pop
pop
in
bnd
mov
sbb
inc
or
out
cmpsb
pop
out
int3
stos
inc
xchg
dec
sbb
and
ss
mov
bsr
in
pop
movsl
mov
lea
jl
mov
insl
xchg
add
out
divl
xor
adc
sbb
jl
add
mov
cmpsb
popf
push
jmp
outsb
jns
mov
loopne
mov
aaa
int
loop
pop
hlt
shlb
inc
jo
cli
add
cmp
mov
stos
fstps
dec
scas
rclb
les
jnp
inc
nop
pop
push
lea
enter
jo
push
icebp
or
pop
sbb
lret
sbb
sarl
add
icebp
jecxz
mov
mov
add
cmp
inc
cld
stos
inc
xchg
inc
add
stos
inc
in
or
xor
cs
inc
cmpb
jg
mov
and
or
and
test
bound
dec
lds
ljmp
fcoml
shl
pop
sbb
xchg
and
jno
jle
xchg
mov
add
orl
xor
mov
pop
test
aaa
sbb
test
stos
push
insb
adc
in
cltd
ret
in
cwtl
cs
pop
adcl
fcmovbe
cmpsb
xchg
or
arpl
sahf
stc
dec
adc
out
mov
sub
inc
notl
mull
adc
lock
push
and
lcall
bound
push
sub
xlat
outsb
shll
icebp
sbb
xlat
jb
or
andb
sbb
mov
rorb
jg
mov
lods
and
inc
cmp
ja
cli
phsubsw
inc
out
mov
push
scas
insl
loopne
aad
sub
push
pop
cmp
sub
and
into
and
jnp
les
or
aad
addr16
mov
jle
cmp
pop
dec
popf
dec
sub
dec
push
fcoml
jge
or
push
xchg
xchg
ret
push
std
cs
imul
mov
fcomps
xchg
pop
gs
lret
scas
xchg
pop
dec
cmc
or
cmp
pop
inc
aad
mov
out
mov
mov
mov
je
call
flds
leave
dec
adcl
mov
and
adc
adcb
xor
push
les
popa
popf
cmp
aam
leave
dec
loop
aad
push
push
push
shl
bound
inc
jle
push
cs
shll
lret
xor
test
inc
and
gs
repnz
cmp
pop
les
jg
aad
mov
cltd
xor
and
mov
add
bound
sbb
inc
inc
xor
push
lods
fldcw
fdivs
and
lods
fldl
xchg
jp
pop
cltd
push
cmpsb
cmp
lds
dec
cmp
sbb
sub
pop
jns
rolb
push
and
xor
fisubs
cs
mov
jnp
fidivs
loop
cwtl
stos
push
aad
push
pop
cmp
cmp
fwait
inc
or
sub
push
adc
inc
stos
jge
insl
mov
cmpsb
xor
inc
pop
movsl
arpl
push
sub
outsl
adc
pop
pop
cld
pop
fwait
push
test
sub
mov
pop
fnstenv
call
ja
je
push
mov
jge
pop
insb
call
loop
in
aas
mov
mov
pushf
inc
aam
inc
cmp
dec
push
adc
movsl
pop
mov
lcall
cmp
dec
inc
cltd
dec
scas
sbb
dec
shll
mov
sbb
cmp
fisubrs
adc
inc
test
cmp
push
in
repnz
mov
xor
or
sub
ror
movsb
jp
xchg
push
outsl
mov
fcompl
insl
std
lcall
or
or
push
insl
jo
add
or
add
dec
add
out
adc
leave
ror
or
jmp
daa
sub
out
xor
pop
push
orl
and
xchg
push
repnz
fs
aam
enter
jp
iret
mov
lds
mov
inc
cmpsb
xor
imul
push
sub
fists
mov
popa
or
cmp
inc
scas
sbb
jb,pn
mov
rcll
jecxz
adc
repnz
mov
mov
mov
add
mov
jp
stc
sub
test
sub
nop
stos
loope
inc
arpl
mov
int3
cmp
sbb
arpl
jle
cs
fldt
sbb
cmpsb
cmp
jne
sbb
dec
xor
cmp
sahf
xor
push
repz
dec
push
lahf
loopne
into
adc
int3
xor
leave
mov
negb
mov
lea
mov
sbb
jno
push
dec
jo
jge
cli
xlat
sub
sbb
sbb
hlt
sbb
fnstcw
pop
leave
pop
pusha
outsb
insb
add
jecxz
mov
cmp
mov
je
sub
negl
adc
loop
jl
stos
aad
push
cmpsb
mov
inc
adc
arpl
push
jne
mov
fisubrs
dec
inc
jl
in
inc
inc
jmp
xor
cmc
fs
mov
dec
popf
dec
js
push
push
out
fcmovb
adc
leave
jne
jecxz
or
or
pop
and
fsubr
pop
adc
pop
stos
nop
mov
scas
pushf
mov
stos
inc
push
inc
adc
out
adc
mov
and
sub
jmp
xchg
or
fcoms
inc
popa
ret
test
or
daa
cltd
ljmp
cmp
mov
and
xchg
inc
mov
xor
arpl
mov
xchg
add
pop
das
mov
in
push
and
mov
sar
bound
mov
cltd
pop
sub
push
add
ficoml
push
imul
arpl
cmp
sub
pop
stos
push
mov
roll
inc
lahf
inc
push
pop
repnz
je
or
data16
ja
stos
or
fsubs
push
adc
or
push
adc
or
jbe
clc
add
stos
shl
bound
out
movsb
or
int
arpl
mov
push
cmp
pop
push
outsl
jmp
sti
aam
jp
fsubrl
dec
jmp
sahf
out
push
dec
test
and
ret
xlat
cs
adc
push
adc
xchg
or
xor
test
pop
sub
and
push
push
and
leave
imul
cmp
roll
cmpsl
pop
loopne
xchg
add
leave
popa
gs
ljmp
in
add
imul
add
rorl
sbb
dec
inc
out
or
ds
stos
push
pusha
loope
inc
push
adc
lock
sbbl
mov
daa
mov
cmp
cmp
mov
mov
pop
xor
push
adc
adc
and
sbb
popa
inc
xlat
loope,pt
es
call
push
cmp
lret
add
int
adc
imul
sbb
cwtl
repnz
ret
aad
mov
rol
repnz
loopne
ret
shrl
pop
sti
imul
fisttps
fwait
bnd
inc
xchg
inc
lret
mov
pushf
icebp
int
mov
sbb
add
test
pop
adc
sub
data16
aaa
inc
mov
xchg
rcl
cltd
arpl
cli
movsb
outsl
sub
lods
or
in
sbb
inc
mov
push
sbb
mov
push
jb
push
xor
pop
mov
adc
dec
sub
mov
out
data16
rclb
pop
imulb
pop
stc
rcll
lea
push
inc
sub
cmp
and
test
in
fwait
lret
out
add
sbb
push
xchg
push
cmpsb
pop
movsl
and
push
jp
xchg
mov
add
rol
xchg
ss
movsl
adc
aaa
aam
je
jne
inc
into
mov
sarl
add
rorb
movsl
insb
icebp
lret
mov
filds
bound
hlt
push
out
adc
dec
push
mov
lods
xlat
sbb
and
leave
dec
sbb
inc
outsl
shr
push
jns
inc
movsl
test
inc
mov
mov
jge
dec
test
test
xchg
loope
iret
sub
cmp
cmp
in
push
popf
adc
sarl
add
jne
push
sub
pop
test
dec
in
aaa
je
xor
pop
sbb
pusha
popa
outsl
leave
push
out
fidivrs
stos
rcll
sub
fisttpl
mov
xor
or
mov
insl
inc
pop
aad
sub
push
cld
sarl
xorb
or
pop
mov
test
dec
cltd
inc
pop
inc
xchg
sub
xor
cmp
ffree
popf
cmp
lods
stc
cmc
ljmp
pop
cmp
gs
shlb
inc
shlb
popf
insb
xchg
inc
dec
jmp
push
cmpsb
cmp
in
jns
push
sub
jp
cmpsl
dec
out
dec
shr
mov
stos
and
cld
cmpsb
dec
cltd
inc
das
jns
sub
out
sbb
shll
cmp
mov
std
fnclex
popf
pop
stos
adc
adc
push
xchg
inc
cmpsl
dec
popf
xchg
add
icebp
ljmp
ja
push
out
out
xchg
loopne
sbbl
mov
dec
int
jno
lret
add
lods
inc
push
test
inc
in
lods
xchg
push
pop
ret
push
push
outsb
shll
push
stc
lret
add
aad
sub
inc
dec
shlb
in
out
les
pop
clc
mov
sub
ja
sarl
add
push
test
dec
fmulp
xchg
sub
or
xchg
mov
cmpsl
cmp
movsb
and
ljmp
pushf
xor
je
dec
out
lcall
scas
fwait
lods
pop
pop
call
loop
aas
add
rcr
cmpsb
dec
cltd
popf
pop
jp
ds
mov
popf
pop
pop
mov
jmp
push
cmpsb
cmp
in
jns
push
jmp
dec
popf
dec
push
dec
shll
in
fmulp
or
aad
inc
mov
cmpsb
dec
in
subb
fldt
out
xchg
mov
jp
inc
pop
inc
mov
test
xchg
ret
imul
sarl
sbb
call
enter
lods
jo
ljmp
cmp
sub
xchg
cmp
cmpsl
mov
inc
jnp
sbb
and
cwtl
lcall
imul
mov
in
enter
and
gs
cltd
mov
dec
sahf
dec
inc
sahf
divl
sub
dec
sub
es
inc
cmp
xor
inc
imul
fadds
pusha
sbb
and
jbe
repnz
xchg
inc
xchg
inc
push
and
sti
push
inc
outsb
xor
aam
adc
in
repnz
dec
pop
cmp
inc
stos
std
adc
mov
test
sahf
test
adc
gs
jl
xchg
sub
push
lods
std
in
xchg
and
add
xor
fnstenv
out
inc
and
inc
and
jo
orl
rorl
imul
fiadds
sbbb
in
jge
sbb
push
mov
pop
push
push
mov
test
pop
aam
fwait
adc
sbb
sub
aad
hlt
mov
xchg
mov
mov
sub
into
add
test
xor
jle
in
pop
jbe
inc
push
ja
repz
ret
and
in
repnz
jne
jbe
stos
sub
jl
stos
dec
inc
sub
rcll
jl
xchg
pop
out
adc
int3
in
push
adc
pop
scas
fistps
jecxz
jbe
push
jle
push
sarl
fldl
xor
push
rolb
aam
shl
lcall
fcoms
push
es
ja
lock
or
in
jns
out
rclb
ljmp
stos
aad
cmp
insl
cmp
xor
jl
dec
xchg
lods
fdivs
rcrl
insl
sub
sbb
mov
int
push
cmp
sub
push
push
xchg
or
adc
pop
jns
pcmpgtb
push
pop
imul
inc
mov
pop
inc
cmp
xor
push
rcll
pop
std
leave
stc
push
test
ret
imul
push
cmp
and
cld
fisubrs
mov
mov
xchg
out
stos
lods
mov
cwtl
xor
es
inc
pop
cmp
mov
and
stos
inc
leave
mov
lods
nop
lods
cmc
add
cmove
loope
mov
mov
aad
out
add
in
and
or
pop
add
cld
aam
mov
push
popf
xchg
loope
mov
je
leave
jle
imul
cmpsl
adc
call
dec
and
daa
adc
ljmp
popf
insb
out
insl
lcall
aam
mov
xlat
leave
xchg
ds
mov
and
dec
pushf
cmp
out
enter
push
iret
fbld
push
mull
lahf
cwtl
pop
mov
test
cmp
decb
ret
push
lods
shl
push
adc
loop
daa
sbb
popf
imul
lret
ret
push
sahf
outsl
pop
and
push
pop
mov
mov
fisttpl
cmc
out
pop
call
sub
and
mov
aam
cwtl
dec
pop
pop
shlb
add
bnd
ljmp
xchg
xchg
adc
xor
lds
xor
stc
add
mov
add
in
dec
scas
push
cmpsb
in
mov
repnz
in
sub
jmp
aam
gs
test
test
push
and
dec
push
adc
inc
jge
hlt
jb
in
in
and
roll
xor
mov
out
cmp
out
cmpsl
les
test
shll
dec
js
inc
es
mov
and
das
sahf
popf
pop
mov
arpl
xor
daa
inc
test
inc
repnz
out
rcrl
jae
and
push
adc
nop
into
push
aad
inc
mov
mov
xor
mov
mov
out
popf
cs
das
pop
jmp
add
add
or
cmp
adc
dec
pop
lock
popf
pop
push
bound
inc
adc
push
sbb
in
adc
scas
xchg
ss
stos
sbb
xchg
cmp
ret
dec
imul
adcb
mov
xchg
push
addr16
and
int3
adc
dec
inc
mov
outsl
data16
cmc
inc
add
or
in
jmp
loope
add
scas
mov
ret
push
sub
add
mov
or
cmpsl
mov
stc
cmpsl
loope
ds
lods
xchg
sbb
xchg
and
dec
push
cmpsb
and
out
jp
loopne
sub
adc
pop
dec
dec
js
imul
dec
sbb
and
fimuls
inc
scas
xor
cmpsb
cmp
ljmp
cld
and
aaa
inc
dec
xchg
insl
inc
or
lock
js
shl
fiadds
or
call
jmp
neg
inc
lcall
dec
lds
call
and
imul
rcr
mov
jbe
sub
jl
jns
xchg
mov
std
and
faddp
sub
loopne
fmulp
jmp
movsl
jmp
dec
icebp
adc
movsb
push
inc
dec
push
adc
xor
xchg
imul
adc
scas
mov
or
cmc
ret
sbb
add
mov
loopne
cmp
int3
stos
inc
cltd
lock
jne
fiaddl
into
jle
inc
sarb
fidivrs
and
or
jb
insl
xlat
lods
sar
xchg
lcall
les
andl
xchg
pop
add
gs
andb
leave
out
fwait
in
sub
out
push
mov
and
adc
jb
xchg
sub
jne
or
scas
cmpsb
dec
push
adc
out
sub
div
enter
xlat
icebp
xchg
test
addl
xor
fistps
sbb
shl
outsb
cmpsl
cwtl
jae
ljmp
inc
les
aam
movl
adc
data16
pop
push
adc
mov
add
shrl
xchg
out
xchg
lods
pop
mov
and
aaa
imul
pop
fstps
add
xchg
in
add
pusha
daa
aas
test
scas
test
movsb
imul
in
pop
adc
pop
in
fimull
aad
js
nop
test
divb
outsb
and
dec
lahf
imul
push
sub
sbb
mov
loop
fsubrl
push
int3
out
pop
adc
mov
inc
push
nop
ljmp
and
inc
loope
lods
enter
out
ljmp
nop
ljmp
and
inc
rcr
lods
cmp
or
out
lret
and
inc
push
nop
ljmp
and
inc
cs
popf
cmp
sbb
adc
clc
lret
or
fsts
mov
shrb
jmp
add
pop
adc
push
sub
ret
insl
adc
mov
cmpsl
dec
popf
scas
cmpb
pop
adc
lock
lods
fidivl
dec
pop
inc
fs
push
jbe
adc
pop
outsl
cmp
dec
inc
in
mov
mov
dec
pop
cmp
push
fsts
movsb
rorl
mov
les
fidivrs
loopne
adc
pop
cmp
lcall
push
lret
or
sub
adc
test
imul
cmp
cmp
cltd
jno
jne
scas
fdivs
inc
dec
pusha
and
je
add
sub
cli
mov
adc
cmp
dec
sbb
sahf
ret
dec
adc
or
sbb
pop
dec
fistpl
inc
add
sbb
or
add
aad
sbb
icebp
pop
mov
loop
mov
mov
cmc
subb
inc
jne
pop
adc
inc
test
roll
mov
fidivs
adc
sti
movsb
sbb
js
je
or
dec
xorb
cmc
mov
stos
add
daa
or
sbb
das
imul
iret
jecxz
lds
lcall
jmp
adc
stc
mov
loopne
cmp
or
rorl
lea
ljmp
test
or
aaa
in
fildll
and
sub
adc
out
pop
cmp
fldenv
stos
mov
mov
insl
inc
leave
xchg
leave
sti
inc
xchg
aaa
out
or
in
sti
pop
adc
or
pop
in
push
mov
cwtl
inc
sub
test
xor
ficompl
int3
cmp
pop
js
add
out
in
lods
or
lcall
jmp
repnz
enter
inc
js
hlt
dec
dec
jne
std
cs
rcr
std
pop
popa
lods
sub
sub
data16
fisttpl
push
fwait
sub
das
dec
ja
in
mov
xor
mov
add
adc
push
scas
sbb
test
das
push
xor
and
jecxz
aad
push
cmp
xor
push
or
bound
loope
xchg
mov
mov
cli
jge
push
lods
mov
cltd
xor
cs
pop
ja
out
lahf
imul
cmc
dec
jae
das
lea
dec
dec
or
mov
popf
mov
nop
adc
popf
dec
int
jno
enter
test
dec
cltd
out
cmp
mov
mov
fistpl
outsb
cmp
aad
push
mov
jo
xchg
sbb
pop
adc
out
mov
adc
ljmp
mov
cmp
aas
je
mov
inc
fs
stos
push
fndisi(8087
fstps
dec
lretw
or
stc
arpl
pusha
cmpsl
dec
jmp
mov
outsb
fisttpl
les
mov
shrb
mov
xchg
add
leave
call
fcoms
and
pop
jo
inc
test
cmp
fwait
add
dec
popf
sub
nop
fnstsw
imul
xchg
sub
adc
sub
scas
mov
and
or
aad
inc
mov
mov
push
sub
adc
mov
mov
faddp
enter
fadd
test
add
subl
cmp
mov
insl
sub
xorl
cld
mov
pushf
xor
xchg
sub
mov
inc
mov
push
mov
push
stos
gs
ror
into
inc
out
loop
sbb
hlt
xchg
add
pop
inc
xor
inc
xlat
fs
mov
mov
lods
jae
push
mov
and
shrb
mov
sti
xchg
xor
imul
or
test
mov
stos
push
fucomip
xchg
jne
xor
cmp
cmp
shll
pushf
gs
xchg
mov
cmp
adc
call
pop
mov
cmpsb
dec
mov
data16
test
pop
lcall
inc
push
fidivs
sub
jle
ljmp
ljmp
fisubs
hlt
push
mov
iret
xchg
pop
out
cli
out
xchg
bound
movsl
fisubs
fidivs
cmpsb
sub
add
fildl
push
jecxz
ss
sbb
icebp
jbe
insb
lret
popf
xchg
cmc
int
loop
rolb
nop
mov
sub
mov
js
mov
in
push
test
add
lds
loop
das
mov
pushf
fimuls
xor
in
incl
les
pop
cmp
sbbb
into
icebp
das
call
push
adc
jno
xchg
push
repnz
fdivl
ss
mov
fwait
dec
push
mov
jp
pushf
push
pop
fnstsw
das
faddp
rolb
pop
sarb
and
icebp
sbb
pop
add
jmp
mov
ror
pop
sbb
lea
sub
or
jo
xor
cmp
test
jne
push
int
add
push
jno
jge
xor
aas
xor
movsb
outsl
lret
out
jle
cwtl
jo
push
jne
stos
jae
push
xchg
jl
mov
cli
shrb
je
dec
lods
or
imul
fbstp
jge
jo
and
mov
xor
stc
fsubr
stos
jle
xor
std
shl
sahf
dec
shrb
daa
sub
sub
inc
cmp
in
arpl
push
or
push
test
mov
enter
mov
aad
push
adc
int3
jae
stos
test
jnp
int3
fbstp
adc
sbb
push
sub
orb
out
adc
negl
ljmp
mov
pop
rcrb
cmp
add
ror
cs
add
jg
or
adc
outsb
pop
mov
aad
push
adc
aad
mov
xchg
fiaddl
imul
test
popa
sub
out
adc
jae
dec
popf
dec
lds
fmuls
aad
sti
ds
push
insl
and
in
ror
and
loop
loopne
cmp
mov
les
sub
and
push
lcall
or
ja
cmpsl
xchg
out
mov
out
push
adc
xor
pop
adc
cmp
pop
cmp
adc
int
test
adc
push
fcmovbe
lcall
sarl
mov
mov
lds
loop
cmp
lods
xlat
out
rcrb
inc
jmp
movsb
mov
or
stc
cmc
ljmp
jbe
out
cmp
cmp
push
fisubl
inc
rolb
call
dec
push
adc
das
mov
xor
dec
pop
aam
loope
cmovne
mov
xor
mov
sbb
or
and
sbb
push
loopne
adc
push
mov
adc
arpl
cmpsl
dec
mov
outsl
out
fiadds
xor
and
pop
cmp
mov
incb
sub
mov
mov
stos
mov
repnz
test
xchg
add
fdivs
push
cmpsl
cmp
je
mov
insb
adc
leave
lret
push
inc
jp
ficomps
sbb
aaa
inc
fistpll
lods
xchg
push
pop
pop
add
je
scas
pushf
movsl
out
mov
jbe
push
les
cmpsb
dec
out
mov
cmpsl
les
je
and
lea
push
std
je
push
test
leave
pop
cmc
pop
ret
cli
cmpsl
push
arpl
mov
stc
fidivrl
inc
and
mov
inc
aaa
xchg
pop
repz
cmp
mov
arpl
mov
push
lods
jns
sbb
and
lcall
pop
mov
add
popa
dec
lds
lods
test
xor
pop
movsb
cmp
fcmovne
or
insb
dec
push
jnp
jb
jo
fmull
cmpsb
cmp
out
shl
push
mov
mov
add
icebp
ds
aaa
push
jo
stos
lcall
or
adc
dec
inc
cmc
jbe
hlt
and
and
sbb
push
paddq
loope
dec
mov
in
fldenv
sbb
rol
mov
and
push
pusha
adcb
sbb
mov
pop
lret
sar
cld
lods
sti
aas
cmc
fwait
pushf
mov
push
xor
cld
pop
push
cmpsb
repnz
rcrl
cmp
xchg
pop
icebp
aam
push
imul
ss
das
fstpt
into
push
sbb
xchg
dec
sbb
xchg
sbb
je
mov
stos
test
es
push
xchg
imul
cmpsb
movsl
aam
stos
jecxz
sbb
sbb
out
test
xchg
inc
inc
push
sti
push
popf
xchg
int3
cmp
sub
lds
mov
stos
cmpsb
icebp
cwtl
mov
cmp
cmp
lahf
pop
cltd
jl
fnstcw
xchg
cmc
jbe
push
stos
loope
jle
add
push
inc
push
push
xchg
sti
filds
sti
jno
xor
mov
mov
xor
push
jge
into
cmp
out
pop
arpl
jo
cwtl
repnz
dec
mov
and
dec
push
adc
aaa
add
js
jnp
push
push
daa
inc
pop
push
mov
fdivs
pop
cmpl
push
push
filds
sub
in
add
addr16
push
pop
inc
cmp
adc
dec
inc
lret
mov
adc
outsb
push
mov
mov
lods
pop
call
les
test
dec
push
adc
dec
mov
loopne
inc
out
cmp
jg
mov
pop
and
jno
dec
loop
or
push
shrb
in
sbbb
mov
mov
loope
sub
jecxz
mov
adc
mov
fldt
aam
pop
cmp
sub
fidivrs
push
inc
daa
push
pop
mov
cwtl
adc
cmp
int3
and
cmpsl
xchg
cmp
mov
pop
and
xor
cmp
dec
jmp
cmp
shl
push
add
mov
aad
hlt
or
fwait
mov
sahf
int3
bound
loope
jmp
xchg
pusha
fistpll
sahf
and
xor
inc
outsl
pop
ljmp
out
push
mov
cmp
or
adc
or
leave
mov
cmp
xor
jle
sub
daa
and
xor
and
out
out
arpl
insb
sbb
mov
jp
inc
pop
mov
pop
lods
xchg
adc
nop
jno
jecxz
cwtl
xor
lea
push
or
out
add
inc
push
nop
ljmp
and
inc
aaa
mov
ja
fsts
sbb
adc
outsl
pop
sub
repnz
mov
rclb
pop
push
push
or
shl
outsl
push
push
stos
aad
push
cmpsb
mov
imul
lds
inc
out
pop
adc
cld
push
pop
xor
fldcw
sahf
mov
sbbb
pop
mov
rorl
lock
adc
mov
dec
pop
cmp
push
fsts
xchg
add
addps
and
add
cmp
cld
pop
adc
frstor
push
xor
ficomps
adc
test
or
sub
adc
imul
sbb
jne
pop
scas
push
daa
inc
push
adc
pop
ret
pop
adc
mov
push
xor
leave
dec
pop
std
jge
push
sbb
es
enter
adc
ror
loope
push
ds
lds
ficoml
ds
inc
dec
jmp
fsts
flds
or
or
aad
std
cmc
mov
sub
dec
stos
mov
aad
sub
cmp
pop
ss
repnz
adc
adc
pop
lods
xlat
xor
inc
pop
and
jno
and
dec
push
inc
pop
inc
lock
adc
or
xor
mov
rolb
push
jge
jmp
pop
stc
loopne
shlb
repnz
or
stos
addr16
cli
mov
sahf
loope
pop
mov
mov
xor
mov
and
or
in
iret
inc
enter
aam
fisubl
xor
jge
jl
fisttpl
jmp
sub
mov
je
push
in
ja
mov
and
sbbl
fstp
out
push
test
and
mov
jne
and
arpl
arpl
loopne
xchg
cmpl
test
popf
add
xor
inc
je
out
imul
xor
cmp
jg
mov
adc
dec
lds
push
sub
iret
lahf
popa
cwtl
jno
add
cltd
outsl
icebp
dec
nop
push
fs
aam
das
mov
sahf
stos
rcll
or
fmuls
imul
jb
push
jle
cmp
mov
daa
mov
adc
mov
sub
mov
mov
ljmp
mov
adcb
out
cmp
xchg
dec
out
push
mov
dec
dec
push
adc
inc
push
call
out
outsb
fwait
adc
push
pop
mov
cmp
aaa
dec
adc
inc
loop
push
push
stos
xchg
and
imul
pop
and
je
movsl
sbb
adc
inc
mov
push
and
int
mov
fnstenv
cmp
xor
sub
sub
push
test
aad
mov
cld
decb
sbb
fistpll
fmulp
lret
dec
test
jl
shll
xchg
push
loope
dec
out
mov
decb
iret
adc
or
inc
jecxz
cmpsb
dec
in
mov
shrl
pop
add
shl
mov
outsb
and
enter
imul
mov
push
das
xor
dec
ja
cmp
mov
and
imul
int
mov
ljmp
sub
inc
pop
jp
test
dec
jp
and
xor
dec
cmp
adc
dec
dec
jne
hlt
xchg
mov
jp
test
ret
dec
add
adc
and
das
pushf
mov
scas
nop
dec
mov
adc
roll
mov
gs
out
mov
cmp
jo
pop
mov
out
dec
imul
xchg
mov
lcall
mov
movsb
dec
or
mov
sub
add
stos
mov
out
push
or
addr16
xlat
loope
cli
mov
mov
pop
adc
or
mov
repnz
cmc
push
aaa
sub
adc
das
jge
or
movsb
dec
or
mov
pop
cwtl
movsb
lcall
adc
inc
mov
test
decl
lahf
outsb
movsb
insb
push
shlb
leave
and
lods
rorb
cmp
dec
and
dec
arpl
mov
int3
shl
test
pop
adc
mov
push
iret
cltd
mov
fldcw
fwait
mov
into
sbb
push
adc
aam
pop
sbb
inc
test
or
mov
shrb
fldl
nop
pop
fdivrs
jno
test
xchg
rcr
pop
aad
xchg
rorl
dec
js
jns
cmp
enter
pop
adc
pop
call
inc
in
loop
sub
imul
lret
jmp
pop
inc
mov
fwait
in
xchg
idivl
insl
jno
int
jmp
push
movsl
cmp
loopne
or
mov
sbb
mov
pusha
inc
dec
lds
inc
sti
adc
cmp
pop
mov
cmp
add
scas
sub
mov
lcall
int
fnstsw
inc
dec
xchg
mov
or
scas
adc
mov
mov
mov
sbb
sub
push
xchg
pusha
mov
push
cmpsl
pop
mov
xchg
or
dec
push
adc
jb
mov
outsl
or
jb
lds
call
jae
in
adc
cmp
sbb
pop
and
in
pushf
enter
lds
xor
mov
sarl
xchg
sbb
cmp
jge
sbb
push
pushf
hlt
out
pop
adc
lret
mov
xor
ret
dec
and
mov
add
aam
out
pop
loope
aad
decl
test
pop
cmpsl
or
xor
dec
in
mov
repnz
sub
mov
push
mov
arpl
sahf
mov
push
movsl
test
or
push
pop
jl
mov
enter
pop
push
test
mov
sti
mov
dec
les
cmp
test
ds
add
pop
icebp
lretw
lahf
cmpsl
fistpl
les
insl
out
push
xor
cmpl
dec
out
mov
ja
mov
decb
ret
push
lods
rorb
xor
insb
fs
pop
pop
mov
scas
sbbl
pop
adc
cmp
adc
outsl
pop
sub
bound
out
rorb
fdivrl
les
pop
cwtl
fs
dec
jecxz
xchg
mov
cmp
int
insl
imul
fucomp
mov
stos
mov
pop
das
enter
or
pop
jb
mov
xchg
arpl
pop
mov
add
push
lods
pop
cmp
rcll
outsl
cmc
jecxz
out
adc
aad
push
enter
inc
test
push
cld
push
cmp
sub
cwtl
int
dec
negb
inc
and
xor
inc
push
repnz
aad
repnz
xor
jmp
adc
mov
mov
outsb
inc
dec
gs
leave
ret
push
sahf
push
clc
add
adc
dec
imul
cwtl
iret
jbe
dec
push
jl
jbe
xchg
add
mov
sub
adc
mov
cmp
outsl
lds
les
and
daa
popa
cmp
fdivl
loop
test
xlat
push
mov
sub
xor
fwait
out
stos
cmp
ljmp
mov
xchg
sahf
insb
loopne
fnstenv
scas
lea
adc
out
test
ror
push
es
arpl
dec
add
pop
ljmp
dec
in
sti
adc
cmp
cs
popf
imul
int
rcrb
ret
test
mov
lods
xor
sub
cld
xchg
fwait
jne
dec
test
adc
packsswb
cmp
push
cmpsb
addr16
out
pop
xor
subb
test
adc
test
or
ss
jns
dec
stos
cmp
arpl
jne
push
push
and
dec
stc
iret
insl
pop
in
pop
cmp
movl
ss
add
stc
out
adc
add
dec
fwait
cmp
mov
xchg
aaa
jnp
push
pop
notl
in
mov
and
into
aaa
cmp
incl
outsb
cmp
insb
out
adc
hlt
int
mov
adc
xchg
mov
imul
imul
fistps
test
add
inc
jns
rol
push
push
add
or
int3
mov
adc
mov
pop
int
add
sbb
dec
push
adc
jo
movsl
pop
or
jp
lea
cld
jmp
cwtl
pusha
orb
out
adc
xchg
jb
out
adc
and
lret
and
xchg
jae
fimull
cmpsb
mov
imul
xor
enter
and
inc
lds
lock
jae
mov
imul
test
sub
cltd
jb
cmp
bound
cltd
imulb
push
jo
imul
pop
mov
mov
pop
test
or
xchg
add
outsb
outsl
pop
adc
andb
pop
pop
das
pop
rorl
adc
jo
xchg
insb
enter
imul
subb
mov
lods
ret
push
pushf
mov
push
adc
lea
xor
adc
push
int3
jne
and
pop
inc
lods
or
int3
push
push
inc
xchg
jbe
dec
jmp
repnz
in
inc
mov
sub
push
dec
cmp
scas
loop
or
push
aam
fcmove
lcall
jmp
sahf
out
push
dec
test
and
ret
xlat
cs
std
fstpl
mov
int3
pop
mov
pop
lret
jmp
dec
push
mov
inc
test
mov
xor
imul
shlb
inc
pop
cmp
lods
pusha
outsb
es
mov
inc
add
xchg
in
popf
dec
inc
loope
aad
sub
inc
xor
stos
cmp
aad
or
dec
cltd
xor
out
dec
push
adc
inc
jge
aam
les
insl
sub
jge
fisubs
shrl
daa
and
incb
dec
popf
inc
in
in
and
ret
cmpsl
sbb
cltd
dec
pop
sbb
loop
ja
cmp
popf
dec
leave
inc
push
jno
pop
stos
push
lods
pop
jp
lds
cmpsl
pop
dec
cmp
and
adc
leave
inc
test
jns
cwtl
lea
int
push
es
dec
push
and
adc
jns
out
adc
sarb
nop
gs
imul
in
jnp
out
mov
inc
test
jns
popa
push
push
imul
ret
cmc
insl
or
out
mov
shrb
mov
das
imul
popf
insb
cmp
sub
inc
push
mov
movsb
pop
mov
xchg
add
or
outsl
test
dec
cltd
inc
xlat
shll
xchg
sub
mov
push
adcb
jo
push
adc
mov
push
lods
or
xor
mov
out
add
push
sub
in
adc
test
push
adc
mov
data16
bound
popf
jmp
imul
popa
inc
xchg
add
adcl
aad
cmp
dec
xor
mov
xlat
gs
stos
push
xor
ljmp
mov
imul
mov
lods
lds
push
push
inc
lds
enter
loop
dec
sub
cmp
repz
jmp
lods
push
stos
or
out
ja
xor
out
mov
in
aad
cli
nop
popf
add
adc
pop
cmpsl
pop
imul
stos
inc
in
or
xchg
inc
shrb
mov
push
enter
cmpsb
cmp
cmpb
lret
mov
sub
stc
icebp
push
and
or
xchg
divl
and
shlb
std
xor
andb
inc
cli
xchg
addr16
mov
adc
adc
lods
sti
xlat
out
sahf
outsl
xchg
cmp
add
add
add
cwtl
int3
out
pushf
sub
mov
pop
shrl
addr16
push
mov
call
mov
ror
jmp
insb
push
sub
popf
fiadds
cmp
push
sub
aaa
mov
and
stos
shl
sub
dec
pop
dec
mov
mov
push
adc
pop
outsb
leave
add
sub
jmp
inc
loope
push
mov
and
mov
into
adc
inc
shrl
add
fbld
hlt
fisubrl
adc
mov
adc
jecxz
or
xor
sbb
adcl
sbb
cltd
mov
pusha
mov
bound
sbb
cmp
push
cmc
inc
inc
or
jge
imul
insb
bound
fidivs
lea
cli
add
aam
or
mov
pushf
push
cmpsl
add
push
hlt
imul
loopne
je
hlt
ljmp
in
out
std
les
fisubrs
push
cmpsl
inc
out
cmp
movsl
adcl
sar
bound
mov
pop
cmp
mov
mov
mov
outsb
dec
faddl
or
lcall
jmp
arpl
data16
fwait
addr16
push
add
and
in
daa
pop
cmp
leave
adc
xor
cmpsl
dec
xor
sub
sub
dec
sub
xchg
push
dec
mov
pop
or
dec
push
adc
jecxz
cmp
sub
adc
enter
adc
cld
inc
mov
rolb
sub
gs
cld
cmpsl
dec
popf
dec
ds
shll
popf
lods
or
ljmp
dec
cltd
inc
das
imul
in
aad
cmp
inc
or
jns
stos
push
fstpl
xor
push
sub
bound
pop
shll
out
fidivrs
or
insb
and
stos
inc
dec
cmp
sbb
ret
push
or
loope
cmpsl
sbb
and
dec
xchg
fistps
daa
sbb
dec
popf
dec
or
pop
cwtl
addl
sarl
add
dec
popf
cmp
popf
cmp
xchg
cmp
ljmp
xor
push
adc
cld
mov
mov
mov
iret
shlb
push
fcmove
mov
adc
adc
movsb
mov
int
mov
popf
das
sbbl
aad
mov
xlat
pop
sub
dec
popf
cmp
fwait
popa
loopne
push
loope
out
dec
sarl
add
test
inc
pop
dec
xchg
sub
loope
mov
jne
dec
int
jno
or
aad
inc
dec
ljmp
out
adc
mov
dec
push
xor
out
cmc
ljmp
dec
in
xchg
dec
popf
cmp
popf
out
hlt
sahf
shlb
mov
stos
push
test
sbb
xchg
sub
aam
pushf
cmp
test
dec
pushf
cmp
xchg
push
mov
rcl
stos
push
movsl
loopne
mov
subb
ljmp
jmp
sahf
popa
xchg
push
pop
pop
icebp
lret
out
xchg
sub
aad
dec
shrl
add
out
cmpsb
dec
xor
cwtl
and
ss
jbe
sbb
aaa
jnp
lret
data16
xor
jmp
push
lcall
push
negl
fucomip
in
ljmp
inc
push
in
shll
mov
push
daa
cwtl
mov
dec
mov
mov
shrl
das
xchg
push
inc
pop
in
add
pop
push
sub
mov
mov
pusha
adc
push
gs
dec
test
and
mov
adc
in
shll
in
ds
lret
jecxz
pusha
aad
and
sbb
pop
js
out
aaa
in
xchg
inc
shlb
cmpsb
pop
movsl
and
pop
xor
in
adcb
jnp
movsl
xchg
leave
arpl
adc
std
in
repnz
pop
movsl
mov
jge
mov
and
inc
and
fdivr
and
cmp
fsubl
addr16
subl
cwtl
addr16
or
in
lods
or
xchg
inc
sbb
leave
xor
and
push
add
mov
add
and
dec
or
xchg
sbb
sub
fwait
jns
pop
cmc
sub
fcompl
enter
hlt
aaa
mov
add
addr16
es
adc
cltd
mov
sbb
push
mov
test
jns
repz
add
orb
push
cmpsl
cmp
mov
notb
cmp
andl
dec
fwait
xor
dec
popf
cmp
xchg
pop
cmpsl
dec
popf
dec
int
lods
sbb
pop
sahf
loope
mov
sbb
mov
dec
pusha
mov
lahf
test
arpl
lods
minps
test
mov
and
je
test
fcomps
aaa
stos
ret
sarl
add
lret
push
push
jmp
cmp
jno
xor
outsl
inc
les
push
adc
js
ds
inc
dec
popf
inc
dec
popf
out
enter
inc
leave
xor
test
add
mov
fisubs
je
and
or
mov
inc
fcoms
add
jmp
repnz
cld
aad
fisubrl
ds
cmc
ljmp
dec
cltd
xor
adcl
lahf
fwait
imul
out
fidivrs
stos
rcll
sub
sti
xchg
sub
inc
or
mov
insl
add
mov
push
cld
sarl
xorb
sbbb
add
cmc
shrl
test
cltd
inc
pop
inc
xchg
sub
xor
cmp
ffree
popf
cmp
lods
stc
cmc
ljmp
pop
pop
frstor
out
shlb
aas
shlb
popf
insb
xchg
inc
dec
jmp
push
cmpsb
cmp
in
add
cmpsb
dec
popf
cmp
jp
cmpsl
dec
out
dec
shr
mov
stos
and
cld
cmpsb
dec
cltd
inc
das
jns
sub
out
inc
cmp
shll
cmp
mov
std
fnclex
popf
pop
lret
bound
out
push
adc
push
xchg
inc
cmpsl
dec
popf
xchg
add
lock
ja
push
out
out
xchg
cwtl
roll
xchg
pop
mov
dec
int
jo
lret
and
push
test
and
in
lods
xchg
push
pop
ret
pop
outsl
shlb
push
cli
enter
test
ret
inc
out
in
movsb
dec
sahf
xchg
add
inc
cmp
ds
push
scas
push
mov
int3
xchg
das
stc
push
pop
mov
ret
jmp
cmp
jbe
out
popf
mov
js
nop
cmp
rorb
test
jmp
repz
mov
in
movsl
call
ds
sarb
inc
es
xchg
test
jp
xchg
lods
pop
cmpsb
jae
fstps
lea
pusha
fnsave
push
arpl
xchg
jle
js
jle
xchg
jle
fimull
mov
sub
cmpl
cmpsl
xchg
mov
mov
test
xchg
in
pop
xor
or
push
push
in
nop
sub
ret
xchg
jmp
add
xchg
jmp
push
sub
adc
hlt
iret
xor
pop
nop
or
enter
dec
jp
cld
push
nop
arpl
push
push
imul
fdivrs
imul
ret
sub
lds
mov
sub
dec
and
fadd
lods
pop
inc
mov
fs
add
adc
dec
mov
mov
fsubl
popa
icebp
mov
loope
dec
pop
pusha
out
adc
push
mov
push
xor
call
mov
jle
mov
stc
cs
arpl
aad
bnd
mov
pop
cmp
es
cmpsl
xchg
aaa
gs
mov
pop
cmpsl
push
fstps
hlt
imul
test
jp
jp
stos
push
fucomp
pop
cmp
leave
int
and
inc
push
pop
popf
cmp
cmpsl
push
mov
test
pop
and
adc
gs
cmp
ljmp
cltd
fisubrl
cwtl
lea
sbb
into
mov
jmp
shl
testb
jl
cld
mov
sbb
fnstsw
adc
cmpsb
sub
push
lret
cld
mov
dec
lds
pop
iret
mov
iret
ret
sbb
sbb
mov
pop
inc
addr16
enter
mov
add
into
add
enter
stc
push
test
ret
fwait
xor
mov
sub
call
loope
shl
pop
pop
rcll
pop
push
aas
gs
xor
mov
mov
sub
stos
mov
push
test
push
lcall
jmp
stos
dec
popf
cmp
mov
pop
or
jae
pop
push
lods
pop
xor
push
lcall
lret
sub
mov
mov
xchg
sbb
push
push
pop
mov
xor
call
imul
out
faddp
clc
fiaddl
jmp
adc
cmp
dec
into
subb
popf
pop
decb
dec
xchg
jp
out
inc
fsubrl
ds
cmp
xor
cmp
inc
push
into
add
out
adc
fisubs
sub
mov
addl
stos
std
jmp
sub
push
daa
sbb
out
mov
aad
fiaddl
into
ljmp
fwait
out
stos
mov
out
push
xor
mov
popa
mov
dec
mov
andb
or
add
addr16
icebp
addr16
insb
sub
pop
mov
ja
and
fsub
data16
or
xchg
shrb
jmp
cmp
hlt
cld
xor
push
xchg
mov
mov
mov
jne
in
and
out
mov
idiv
cs
in
lds
loop
scas
shlb
jg
xor
hlt
pop
adc
cltd
mov
mov
and
pushf
xor
daa
rorl
ja
aas
sub
mov
pop
and
icebp
fidivs
push
fisubl
loop
js
insl
test
jecxz
mov
in
int
cmp
hlt
lret
orb
jnp
cld
push
test
jae
lret
bound
fwait
imul
es
sub
scas
xchg
scas
es
xor
xchg
hlt
loopne
jmp
lret
lret
cmp
pop
fdivrp
fisttpll
es
pop
dec
add
cmp
mov
shrb
out
xchg
sbb
cmp
mov
sarl
add
fs
sub
inc
imul
test
sub
xchg
out
adc
mov
pop
icebp
mov
popa
outsl
mov
and
jbe
cmpsl
pop
and
pop
shrl
xchg
sbb
leave
test
cmp
negl
inc
mov
repnz
inc
jmp
xor
jnp
mov
mov
cld
pusha
out
adc
int3
push
andl
mov
into
sbb
mov
dec
lret
inc
cmp
cli
push
popa
cmpsb
movsb
or
pop
adc
daa
sub
fs
xor
xchg
data16
push
mov
and
xchg
adc
sarb
nop
mov
push
sub
imul
push
into
sbb
cwtl
xor
leave
je
cmc
ljmp
dec
cltd
inc
aam
sbb
cmpsl
dec
mov
jne
shll
mov
adc
push
sub
aad
xor
sti
aad
ss
into
mov
pop
mov
and
out
fisubrs
aas
mov
adc
lods
inc
dec
arpl
aad
pop
xchg
fistps
in
push
stos
mov
dec
pop
cmp
sti
push
cmpsl
dec
movsb
inc
sub
sub
mov
in
out
fisubrs
mov
in
pop
adc
inc
in
xchg
addr16
icebp
addr16
insb
sub
pop
cmpsb
push
loop
mov
or
push
mov
jae
xor
mov
sbbb
sub
mov
mov
or
xlat
dec
lods
sub
jg
je
jmp
and
fmulp
dec
loop
ljmp
stos
xor
movsl
ds
dec
popf
dec
loop
sbb
cltd
sub
test
adc
inc
outsl
data16
imull
inc
dec
dec
popf
cmp
pop
pop
imul
out
jecxz
test
movb
push
pop
xor
fstpl
pop
jbe
pop
out
adc
hlt
outsb
xchg
add
stos
fsubr
adc
daa
sbb
out
mov
xchg
jae
lds
push
or
mov
xchg
cmc
arpl
adc
pop
mov
fwait
xor
jno
rorb
shll
push
jg
orl
lea
gs
testb
mov
pushf
cltd
fs
lret
xchg
push
mov
sub
out
int3
adc
out
hlt
dec
lds
shl
dec
rclb
xchg
or
fdivrp
jb
shlb
outsb
pop
in
pop
dec
dec
popf
and
cld
cld
jecxz
test
push
cli
rol
outsb
inc
test
sbb
sub
mov
jp
cmp
rolb
and
jnp
cmc
and
xchg
mov
mov
and
mov
lds
inc
sub
das
push
faddl
dec
adc
fs
jp
fcoms
push
int3
cmp
adc
pop
popf
push
jb
aad
dec
mov
pop
adc
sbb
ljmp
ljmp
or
push
inc
lods
or
mov
push
cmp
xchg
mov
xor
xchg
push
and
call
pop
int
negl
nop
ss
outsb
inc
push
push
sarb
mov
mov
cmp
mov
lds
bound
fiadds
jnp
frstor
faddl
pop
andl
cmp
push
outsb
popf
arpl
inc
add
cwtl
jecxz
lods
test
lods
jg
clc
add
outsl
insl
imull
lret
mov
pop
and
cwtl
mov
push
repnz
mov
sbb
mov
scas
sbb
xchg
add
test
loopne
adc
shll
mov
mov
scas
dec
inc
test
and
xlat
xor
lret
and
insb
sahf
es
setne
add
nop
shrb
or
xchg
movsb
sub
adc
dec
jecxz
js
mov
cli
xchg
mov
cwtl
mov
shll
pusha
mov
lods
clc
stc
mov
shrl
push
insl
jae
gs
jl
mov
pushf
cmp
inc
loopne
add
jae
daa
jge
jbe
int
mov
push
cmp
push
mov
push
adc
mov
loopne
xchg
loop
xchg
imul
push
adc
cld
mov
outsl
std
lea
dec
dec
cmp
sub
sub
pop
adc
popf
andl
jmp
inc
adcl
lock
stos
fiadds
xchg
jecxz
popf
jb
cmpsb
sub
imulb
push
popf
imul
test
adc
mov
out
xchg
xor
cmp
dec
cmp
xchg
adc
and
jmp
inc
imul
push
cmpsl
or
push
pop
push
pop
adc
dec
mov
xlat
adc
ja
aad
popf
and
clc
data16
add
leave
test
insl
fstl
insb
inc
imul
inc
les
cmp
push
sub
push
and
push
stos
fucomp
pop
dec
push
leave
adc
cmp
cmpsl
dec
mov
or
mov
pop
sahf
in
mov
push
cmpsb
cmp
leave
pop
jne
xlat
daa
push
mov
test
jmp
inc
push
vpunpcklbw
mov
lds
dec
jnp
mov
je
imul
add
test
sbb
adc
cmp
lods
pop
js
aad
scas
mov
push
adc
out
mov
push
in
cmp
arpl
mov
jle
jns
adc
enter
icebp
ljmp
imul
xlat
test
or
rclb
push
adc
out
push
lods
pop
jno
mov
sarl
lcall
adc
shrl
sub
push
adc
inc
cltd
cmp
jae
pop
cmp
sbb
popf
insb
repnz
mov
mov
pop
adc
mov
lods
xchg
sbb
repnz
adc
hlt
pop
mov
jl
push
push
adc
sub
mov
rcrl
jp
cli
xor
jg
adc
std
out
aad
into
stos
lods
aam
mov
pop
js
ds
dec
popf
lods
mov
daa
push
sub
push
adc
ds
jb
nop
sub
mov
pop
pop
cmp
int3
arpl
stos
add
push
mov
cmp
and
cmp
cmp
sar
stos
addb
xchg
add
movsb
bound
pop
cmp
iret
add
jge
jns
lods
sub
push
ficomps
mov
mov
mov
adc
adc
js
cmp
int3
notb
test
ljmp
adcb
rclb
adcl
push
cmpl
push
xor
inc
in
inc
and
ret
sub
lds
out
mov
out
xor
stc
lds
push
sbb
in
bound
and
insl
xlat
pusha
or
icebp
xor
jecxz
push
int
jne
es
sub
cmp
leave
add
jb
jb
loope
inc
js
mov
out
incb
arpl
pop
mov
fwait
jg
or
fstpl
notl
dec
xchg
sub
cmp
pop
imul
cmpsl
and
lods
inc
sub
js
sbb
sbb
dec
adc
ss
push
insb
pop
shrb
pop
enter
pop
flds
mov
les
icebp
push
mov
pop
push
sbb
in
jmp
aad
pop
mov
dec
lret
out
jb
fstpl
mov
pusha
out
bound
mov
cmc
cmp
cwtl
sbb
xchg
push
subb
xor
pusha
inc
lret
mov
sub
jae
jno
add
mov
shlb
pusha
jle
inc
roll
repnz
mov
popa
jecxz
sbb
or
scas
sbb
cmpsl
mov
mov
fistl
in
dec
dec
adcb
sub
sub
or
jmp
into
imul
repnz
inc
loopne
add
or
mov
gs
mov
pop
push
sub
cmp
xor
push
sub
inc
push
dec
jno
scas
push
and
xchg
mov
cmp
xor
lahf
and
les
sub
lret
adc
jge
mov
and
push
out
sbb
in
aam
dec
loope
ja
sub
adcb
imul
imul
xor
sub
ja
js
orb
imul
fwait
pop
js
ds
js
popf
scas
je
fimull
loope
cwtl
cltd
push
mov
stos
sub
push
cmpsb
in
int3
pop
js
ds
dec
popf
dec
cld
pop
lods
xchg
pop
dec
jp
adc
mov
sub
scas
sub
push
lods
xchg
aad
fisubrs
fistpl
add
xchg
stos
inc
dec
inc
popf
xor
xor
pop
push
jo
cmpsl
lahf
lcall
fistl
mov
pop
jp
leave
lcall
hlt
adc
out
xor
push
mov
push
push
cmpb
fcomps
push
je
and
aaa
repnz
or
and
in
inc
out
xor
inc
repnz
cltd
cmp
inc
mov
mov
mov
jge
and
mov
into
xchg
pop
and
mov
lds
andb
in
test
cwtl
fs
or
and
int
data16
bound
popf
popa
lods
out
cmp
in
cltd
sub
test
adc
inc
or
in
nop
xchg
arpl
daa
daa
push
mov
test
xor
mov
pop
nop
push
mov
jmp
push
pop
lds
mov
das
shl
push
lock
ss
mov
push
and
aad
jae
in
xchg
sub
pop
dec
cmp
enter
mov
fsubrp
pop
xchg
pop
into
jge
int
push
sub
sbb
mov
sbbb
sub
je
enter
pop
movsl
add
int3
mov
mov
xor
inc
or
fldl
pop
mov
andb
mov
mov
cmc
sahf
popa
pop
inc
dec
pop
mov
iret
cmp
lahf
cmp
fwait
addr16
mov
sar
jb
int3
push
nop
cs
outsb
cwtl
lods
push
pop
icebp
push
push
adc
in
and
out
cmp
xorl
fstl
pop
mov
enter
mov
push
icebp
mov
jno
pop
in
and
jb
hlt
int
addr16
and
or
repnz
sbb
imul
mov
enter
int
adc
inc
inc
stos
cmc
dec
rclb
sbb
outsl
cltd
jae
loop
add
cmpsb
lret
sub
xchg
scas
scas
mov
jnp
shlb
stos
mov
jnp
icebp
out
cld
sub
les
push
mov
imul
outsl
sub
and
out
jp
add
icebp
sbb
movsl
sub
mov
xchg
mov
jne
ss
xor
jae
dec
xchg
pop
gs
dec
ss
lret
subl
or
loopne
jp
leave
stos
push
bound
ss
xchg
sub
sbb
and
sysexit
push
ss
call
sbb
in
add
xor
movsl
jno
and
rcl
push
xor
push
das
daa
adc
or
cmp
aas
jno
popa
rep
jle
push
out
pop
popa
das
dec
mov
imul
push
ficompl
adc
fnstenv
out
mov
cmp
add
sbb
lods
pop
cmp
adc
loop
xchg
stos
push
aad
push
pop
push
popf
adc
pop
dec
pop
cwtl
pop
int
jmp
add
fidivs
xchg
adcl
ficomps
mov
xchg
xor
cs
pop
dec
xor
cmpsb
dec
loope
mov
push
jno
pop
stos
push
lods
pop
call
ds
inc
fistpl
xchg
fldl
sbb
pop
adc
nop
pop
or
pop
pushf
lods
inc
push
dec
pop
mov
in
pop
adc
sub
cmp
int3
or
xor
stos
push
sub
mov
dec
xor
dec
jmp
jg
cld
movsb
arpl
or
xor
inc
jle
test
fmul
lcall
mov
jmp
lods
cmp
pop
sbb
push
adc
xchg
add
imul
loop
mov
dec
addl
out
das
cwtl
mov
xchg
push
cmpsl
pop
mov
push
push
adc
or
stos
lock
cli
push
cmpb
call
cld
mov
into
out
sbb
adc
shrl
ljmp
nop
pop
or
arpl
mov
xchg
in
adc
and
sub
xchg
mov
negb
hlt
pop
adc
adc
ret
mov
popf
jle
cmp
push
adc
fucomi
xchg
jecxz
push
jb
sahf
sub
hlt
scas
dec
add
fisttpl
mov
add
stos
push
and
mov
or
xchg
sub
jno
arpl
ret
movsb
sahf
cmp
push
icebp
push
int3
adc
adc
fsubl
loope
pop
int
ja
pop
cmpl
int3
add
sub
shrl
mov
mov
nop
sub
adc
dec
jb
cmp
mov
and
enter
xchg
fs
lods
nop
jno
int
arpl
daa
daa
push
mov
int
inc
mov
add
leave
jno
cmc
ljmp
mov
dec
cld
xor
lret
cmp
cmp
mov
addr16
mov
fdivl
pop
dec
pop
loopne
pushf
loop
mov
mov
or
pop
jp
jmp
mov
xchg
imul
popa
jle
push
push
adc
or
push
jbe
or
lcall
dec
jecxz
pusha
xor
sahf
mov
popf
fs
and
hlt
mov
test
cmpsl
pop
mov
jle
shll
pop
fnstenv
push
enter
adc
xchg
aaa
or
in
inc
dec
mov
iret
fistpll
add
ret
sub
dec
xchg
push
xor
sub
dec
xchg
and
jb
pushf
mov
pop
and
fnstsw
hlt
popa
shr
pushf
push
jo
sbb
pop
mov
mov
xor
mov
mov
mov
dec
loopne
cs
repz
or
mov
loop
std
pusha
out
adc
push
cmp
testb
push
mov
and
inc
adc
cmp
push
test
mov
out
lahf
ret
in
xchg
xor
push
nopl
es
sub
mov
dec
cwtl
pop
pusha
pop
xor
xchg
lods
and
cmp
sbb
out
adc
test
scas
mov
xor
dec
cmp
fsubs
mov
adc
sub
jmp
pop
sbb
es
or
push
mov
arpl
xor
pop
jb
lock
mov
or
xchg
and
add
adc
dec
pop
movsl
and
out
jne
lret
mov
jno
in
int
scas
dec
test
jb
fnstenv
imul
in
mov
enter
xor
inc
pusha
pop
hlt
pop
adc
inc
stos
push
das
popf
mov
inc
pop
ljmp
sub
mov
insl
clc
push
adc
mov
inc
fdivl
cmp
mov
dec
popf
dec
cmp
movsl
jmp
adc
or
dec
adc
cltd
vaddsubpd
cwtl
mov
rcl
ja
subb
cs
sub
insl
push
push
adc
xchg
xchg
mov
inc
addr16
lock
inc
jbe
jl
into
inc
inc
in
pop
adc
mov
ffreep
loop
sbb
test
jp
adc
fdiv
std
push
dec
push
test
inc
push
fldl
push
cmpsl
fistpl
mov
cmp
cmc
inc
inc
push
sbb
out
lcall
aad
mov
rorl
cmpsl
out
mov
pop
jns
cwtl
outsl
in
sti
frstor
mov
xchg
test
aad
mov
into
ljmp
inc
dec
inc
or
mov
mov
js
mov
add
sub
mov
xorl
hlt
ljmp
addr16
orl
movsb
dec
push
xor
push
jp
cld
fimull
leave
arpl
ljmp
and
fucomp
rclb
fistpl
mov
cmp
inc
jl
out
and
dec
mov
into
xchg
pop
and
mov
lds
push
xchg
or
sub
dec
mov
subl
fbld
cmp
cwtl
ja
dec
mov
mov
push
xchg
add
dec
or
leave
gs
js
hlt
sahf
ret
arpl
movsb
dec
xor
fdiv
std
adc
jle
adc
js
jecxz,pt
dec
popf
dec
push
mov
cmp
mov
addl
subb
fdivp
push
aad
enter
pop
cmp
xor
clc
mov
push
stos
out
xchg
adc
das
mov
ret
lock
out
notl
fsts
or
mov
mov
and
push
cwtl
cmp
push
jno
sbbb
dec
fidivs
push
and
fwait
xor
xchg
xchg
pushl
mov
jo
je
dec
inc
push
inc
cmpsl
movsb
push
push
mov
inc
stos
or
mov
xchg
cmp
lret
add
push
pop
or
jne
jle
mov
mov
xor
xor
leave
xchg
and
lock
xchg
insb
add
pop
popf
fcmovne
ss
out
pop
pop
cld
cmc
and
push
mov
and
push
inc
and
push
sbb
jnp
sub
adc
mov
adc
jmp
pop
pusha
sarl
jl
ss
xor
pushf
push
push
adc
adc
cltd
rolb
movsb
dec
lock
add
lahf
pop
sbb
in
nop
gs
sub
test
fs
das
cmpsb
dec
aad
sbb
pop
pop
enter
cld
jae
and
das
aad
gs
into
jl
adc
stos
mov
sbb
jecxz
mov
jae
movsl
cld
jmp
mov
stos
inc
ds
or
stos
xor
jl
push
cmpsb
bound
mov
mov
pusha
xchg
dec
int
rclb
aaa
sub
or
jb
repz
gs
in
jo
mov
out
or
les
cmp
push
adc
sbb
call
mov
sub
and
mov
mov
lock
push
adc
pmullw
adc
lcall
pop
adc
adc
adc
sub
js
jae
jne
and
sub
sub
mov
mov
dec
fmuls
lods
int
push
daa
mov
out
stos
or
ljmp
dec
ss
push
repz
je
push
push
fistpl
jle
or
inc
mov
xor
pop
push
and
push
rcrb
mov
les
or
xchg
adc
or
outsb
inc
neg
cmp
hlt
mov
popf
testb
sub
inc
and
gs
arpl
add
lds
mov
mov
iret
ret
outsb
inc
aad
mov
jecxz
gs
push
out
and
mov
out
and
leave
pop
mov
cmpsl
jp
fists
data16
mov
mov
and
dec
popf
dec
adc
orl
push
ljmp
lahf
cwtl
cmp
or
imul
sbb
dec
int
dec
cmp
push
adc
out
stos
scas
mov
mov
lcall
xor
shlb
jmp
adc
xchg
aad
push
nop
jmp
mov
or
xor
cmpsl
dec
movsb
xorl
mov
pop
jecxz,pt
gs
jbe
dec
dec
je
mov
ja
adc
jns
ljmp
mov
xchg
arpl
ljmp
push
in
adc
xchg
aam
push
mov
inc
pop
fstl
out
shll
hlt
sahf
shll
mov
fadds
push
cmpsb
jne
xor
cmpsl
cmp
mov
sub
xor
cmp
jno
xchg
loop
movsb
stos
push
pop
dec
cltd
xor
sub
push
xor
jg
inc
lcall
icebp
adc
and
ss
pop
fstl
test
je
test
fcomps
ljmp
xchg
fwait
xor
out
inc
cmpsb
dec
popf
add
ljmp
fwait
scas
loop
or
push
cmpsb
jecxz
fnstenv
in
push
aad
data16
add
sahf
cmp
inc
lods
push
xor
int
scas
push
fisubl
sub
cwtl
xor
sub
cmp
lds
sahf
cmp
pop
push
fsubrs
and
test
scas
sar
xchg
std
pop
insl
orb
adcb
arpl
inc
orl
or
enter
gs
mov
lea
sbb
pop
rol
neg
arpl
xor
adc
addr16
outsb
fucom
xchg
inc
sbb
stos
inc
out
adc
movsb
sub
repnz
mov
rorb
push
outsl
icebp
mov
outsl
fucomip
and
lds
push
mov
mov
jecxz
and
inc
fldenv
stos
mov
jne
jno
test
out
daa
lret
xor
jp
adc
outsl
das
outsl
pop
mov
das
mov
int
mov
addr16
and
stc
xor
int
adc
bndstx
int3
imul
dec
pop
scas
mov
mov
inc
adc
push
adc
pop
add
push
jb
leave
dec
mov
lods
movsl
sub
fsubrl
pushf
aaa
jg
add
fbld
cmp
adc
xlat
mov
or
addl
std
subb
jp
lds
fdivp
pop
popa
push
add
insl
adc
adc
lods
in
in
or
pusha
xor
fnsave
mov
sub
lret
jae
push
dec
xor
pop
inc
xor
cs
add
jmp
cli
rep
adc
data16
pop
jl
xchg
out
cld
pop
jns
sub
cmp
outsl
lock
ds
lcall
jbe
adc
adc
and
je
into
add
cmp
add
adc
inc
nop
xchg
sarb
and
cmp
cmp
mov
jmp
xchg
sbb
jno
adc
adc
push
nop
xchg
rcrl
out
lret
sub
popf
cmp
push
jl
loopne
dec
int
stos
dec
or
js
adc
adc
cltd
fsubl
cmpsl
dec
popf
dec
into
andb
inc
stos
pop
and
adc
insb
rcl
cmpsb
dec
cltd
lds
call
adc
push
adc
xchg
sbb
test
add
aad
dec
cmp
sub
adc
xchg
cs
decl
sub
mov
cmp
pop
adc
cmp
push
add
mov
adc
adc
cmc
add
xchg
movsb
fidivrl
cmpsl
dec
cltd
inc
fbld
fstps
cmpsl
loopne
cmp
xchg
ficoms
stos
push
pop
sub
out
push
dec
les
mov
mov
dec
cmp
xchg
pop
sub
mov
mov
dec
pusha
add
mov
xor
jp,pt
ljmp
dec
jmp
out
xchg
sub
std
adc
pusha
je
add
hlt
testb
mov
jp
ljmp
jecxz
fcompl
cmc
fs
mov
push
outsb
shll
inc
lods
adc
cmc
inc
sbb
mov
mov
pop
adc
dec
arpl
fistpl
loope
test
ljmp
adc
int
mov
dec
xor
mov
loope
je
leave
push
outsl
or
sub
dec
cltd
xor
fstl
movq
sub
out
sub
cli
and
pop
std
and
stos
push
das
popf
mov
out
push
mov
mov
mov
pand
adc
pop
js
push
adc
and
xor
popa
movsb
shll
cmp
insl
leave
push
push
dec
shr
push
push
lods
pop
mov
into
pop
jo
pop
loope
xor
int
cmp
fisttpl
mov
xlat
stos
and
sub
out
mov
pop
adc
jne
and
daa
in
fnstsw
adc
mov
and
ds
shrb
in
xchg
push
push
mov
les
ror
fxch
imul
pop
inc
cmp
test
std
or
sub
jle,pt
inc
daa
pop
adc
cmp
enter
aaa
shlb
xlat
rorb
cmpsb
loopne
push
sub
cmp
aad
and
mov
test
enter
cmp
mov
pop
adc
imull
stos
push
mov
fcoml
iret
fildll
xchg
rolb
das
xchg
xchg
mov
jl
push
repnz
mov
cs
push
shlb
lea
adc
adc
push
fcoms
push
pop
ljmp
mov
pop
push
push
adc
pusha
aaa
in
loop
sub
enter
xchg
mov
cmp
and
leave
mov
adc
aaa
or
in
test
lret
pop
mov
addl
and
lea
dec
sub
pushf
imul
call
out
pop
out
push
cmc
mov
mov
cmpsb
and
lret
ss
mov
stc
push
add
and
aaa
mov
push
push
pop
das
out
cmovnp
aad
sub
ljmp
xchg
mov
mov
into
sti
mov
clc
stc
xorb
lret
fnstenv
out
xchg
adc
shll
xchg
lods
inc
pop
xchg
fprem1
ljmp
mov
imul
mov
ja
adc
jnp
dec
ljmp
sti
cltd
xor
out
xchg
push
cmpsl
dec
mov
fs
popf
cmp
add
aad
and
dec
imul
or
pop
sub
xor
fcompl
push
sub
imul
mov
imul
or
in
popa
mov
sub
loope
ds
faddp
inc
jle
mov
cmpsb
mov
mov
cmpsl
aad
and
je
jmp
lahf
cmp
dec
mov
and
shlb
xor
out
andb
shll
push
fidivrs
stos
push
test
xor
mov
das
jno
dec
shlb
popf
lods
cmp
ljmp
test
cmp
pop
push
cmpsl
dec
jmp
cmpsl
mov
inc
test
test
into
sbb
push
sub
mov
lds
pop
dec
aad
pop
cmp
jno
sbb
ljmp
dec
cltd
iret
lcall
popf
dec
push
sub
cmpsl
dec
dec
pop
xchg
and
pop
sti
cs
lods
pop
sub
cmpsl
dec
popf
dec
mov
enter
adc
push
cmpsb
push
inc
ljmp
jae
imul
pop
lret
gs
stc
adc
lcall
fnsetpm(287
cmpsb
dec
cltd
mov
rcll
pop
loopne
xchg
je
dec
popf
xchg
add
ljmp
xchg
lods
sahf
xor
cmp
sub
out
fidivrs
stos
push
push
fmuls
sub
fisubrs
push
aad
sbb
je
les
ja
cmp
cmc
popa
xor
pop
sysexit
gs
fcoms
dec
mov
sub
pop
jno
jae
fidivs
mov
pop
and
gs
and
cmp
cmp
jmp
stos
lds
sub
shr
outsl
inc
fnsave
loope
movsl
pop
jno
mov
dec
es
or
insl
or
push
stos
xchg
pop
mov
jecxz
out
dec
sahf
dec
clc
jmp
cmp
xchg
arpl
push
mov
lret
pop
inc
imul
add
out
cmp
jbe
out
mov
sahf
pop
stos
aad
xchg
mov
fisubs
inc
insb
and
fldt
test
movsl
in
test
pop
sbb
push
cmc
pop
rcl
mov
cmp
mov
fcoml
filds
cmp
fsubl
addr16
pop
lods
add
outsl
pop
imul
jle
or
jnp
andb
jae
xchg
mov
mov
enter
out
sub
stos
cmc
fnsave
push
mov
lret
pop
xor
sbb
xchg
jge
cmpsb
inc
test
pop
stc
mov
sub
leave
stc
mov
shrl
and
hlt
leave
push
push
sub
cmc
in
inc
mov
push
push
adc
mov
sub
es
push
lock
xchg
imul
cltd
jns
fistpll
mov
leave
in
repnz
add
push
xchg
xor
inc
icebp
dec
lcall
shlb
adc
mov
push
pcmpgtb
jo
test
jle
ret
mov
movsb
push
leave
xor
in
sub
lret
inc
mov
clc
push
add
rclb
cmp
push
das
push
or
ss
xchg
scas
sub
addr16
mov
jl
and
mov
sub
daa
pop
sub
sbb
pop
xlat
xor
sbb
loop
daa
pop
outsl
rcrl
mov
push
stos
pmaddwd
dec
xor
sub
ja
cmp
popf
xchg
loop
lods
iret
xchg
hlt
ljmp
fs
xor
out
and
dec
popf
sub
dec
push
dec
pop
jno
ljmp
cmp
popf
fs
sub
popf
cmp
jmp
cmp
fstpt
push
sbb
adc
cltd
inc
pop
popa
xchg
sub
mov
je
popa
lods
out
push
dec
test
and
sbbl
inc
push
data16
mull
adc
push
push
adc
xchg
pop
mov
sub
mov
enter
jge
out
cmpsb
push
and
lret
fisubs
mov
push
cmpsl
fists
les
dec
adc
bound
fstpl
dec
arpl
mov
mov
xor
jne
inc
push
outsl
shrl
into
sahf
lods
shl
bound
lea
xchg
dec
arpl
mov
les
popf
cmp
pop
fnstsw
cmp
int
xor
jno
dec
int
jmp
mov
lods
pop
dec
pop
cwtl
roll
mov
gs
sahf
mov
sub
jnp
cmp
insb
out
or
mov
cmp
cmp
push
loop
lods
pop
mov
dec
out
mov
faddp
mov
jecxz
test
mov
dec
pop
mov
mov
mov
inc
popf
insb
repnz
mov
xor
jecxz
add
jno
push
aad
shrb
and
sub
test
inc
aam
jo
push
clc
add
rorb
mov
mov
mov
push
mov
fistpll
mov
adc
lods
sar
xchg
lcall
les
adc
adc
sbb
in
xchg
arpl
dec
jp
pop
test
pop
sub
push
out
js
push
adc
ret
push
rclb
sti
orl
ret
lahf
push
movsb
pop
fdivrl
out
lods
or
scas
push
fisubl
fdivs
xchg
sub
xor
movsl
xorl
kortestw
enter
out
in
test
iret
jno
movsb
sub
mov
push
loop
jmp
or
in
push
lods
or
xchg
cmp
cmpsl
cld
stos
xchg
push
pop
ret
insl
test
dec
fwait
sub
pop
ficompl
faddl
push
mov
addr16
outsl
jp
ret
and
lds
cld
add
pop
scas
shlb
mov
mov
enter
subb
and
xchg
xchg
mov
aad
push
push
mov
imul
and
outsl
sbb
adcl
in
stc
mov
test
push
push
adc
mov
pop
shrl
pop
rorl
inc
mov
mov
sbb
insl
xor
adc
js
push
adc
sbb
push
adc
or
push
lcall
cmp
jp
jle
xor
jae
loop
lds
and
insl
lds
rcrb
fsubrs
lret
out
cltd
mov
shrl
xchg
cli
xchg
or
xchg
ss
sbb
xchg
xlat
jle
shl
rcrl
mov
push
inc
stos
daa
pop
dec
movsb
ds
outsl
aas
and
xchg
xchg
aaa
fucomip
cltd
mov
in
jne
and
or
pop
stos
add
adcl
or
lock
dec
stos
popf
data16
dec
push
or
xchg
cli
scas
jae
scas
mov
cmp
and
jmp
adc
loopne
cs
add
rcrb
and
out
test
and
in
cwtl
cs
push
hlt
sub
add
jmp
push
push
adc
jecxz
fsubs
into
cli
shll
adc
inc
add
shrb
test
lods
pop
push
sbb
cmpsl
out
shll
sub
cmp
mov
and
jp
sbb
rorl
jb
rcl
lods
add
fsubl
push
sub
dec
push
lret
leave
sub
cmc
ljmp
ljmp
sub
push
enter
fwait
clc
test
dec
inc
push
rcll
xor
lcall
bound
pop
jecxz
jae
dec
inc
out
or
jg
dec
in
add
mov
push
sar
xchg
lcall
les
adc
cmp
cmpsb
movl
mov
int
push
sub
fwait
out
inc
push
adc
adc
mov
push
out
mov
mov
sub
mov
inc
push
outsl
jmp
and
jb
popf
adc
movsb
mov
aad
arpl
jg
mov
out
push
dec
insl
nop
ljmp
cmp
lods
pop
mov
or
sbb
les
inc
fsubl
inc
push
inc
cmpsl
adc
mov
sahf
int3
bound
loope
jmp
xchg
pusha
xchg
fidivrs
sahf
and
xor
inc
outsl
pop
ljmp
out
push
mov
dec
leave
adc
xor
sti
mov
xchg
pop
aam
push
adc
jno
push
lods
mov
les
pusha
adc
fsub
test
xor
call
adc
or
jmp
mov
stos
es
cmpsb
dec
cltd
and
daa
daa
in
jmp
push
cmp
int3
pusha
add
aad
pop
and
xor
std
xchg
cmp
mov
jb
cmp
mov
and
sub
inc
leave
int3
mov
mov
xchg
fwait
pop
pop
pop
jbe
ss
inc
ret
add
mov
pop
mov
or
stos
scas
imul
out
mov
sbb
aaa
mov
push
outsb
fmul
inc
fcompl
dec
mov
loopne
popa
and
mov
mov
paddusw
es
iret
push
mov
popf
in
mov
dec
push
fstps
push
or
je
xchg
shrb
popa
lcall
fidivl
fists
pop
jge
popa
fdivl
loope
loopne
push
xor
sbb
lret
jle
gs
mov
mov
or
cwtl
fwait
xchg
and
enter
stc
lock
pop
inc
adc
test
ret
out
adc
les
cli
adc
cltd
push
inc
mov
test
sbb
mov
shll
maxps
cmpsb
rolb
daa
xchg
outsl
pop
dec
aad
shr
cmp
add
aaa
lret
lods
sahf
jo
test
adc
push
dec
addb
sahf
sar
imul
adc
xchg
jno
adc
idivb
bound
insb
mov
inc
mov
and
pop
repnz
adc
stos
loope
sbb
mov
in
xchg
arpl
movb
jno
mov
and
inc
inc
lret
scas
icebp
xchg
xchg
clc
jo
mov
adc
lcall
jbe
mov
push
into
xchg
shll
xchg
and
jge
repnz
adc
pop
mov
ror
es
lock
and
mov
pop
cli
and
jmp
popa
xchg
out
push
sbb
neg
add
add
jns
inc
push
mov
aam
sub
mov
and
test
dec
mov
push
fcomp
ss
repz
stos
pop
ret
xlat
cs
sub
mov
xor
cmp
push
sti
shl
ss
pop
sub
or
mov
sbb
xchg
cmp
mov
iret
cmp
pop
or
or
inc
mov
pop
or
fcmovbe
pop
int
mov
mov
jp
les
add
jns
sbb
pop
adc
jle
pushf
jb
nop
inc
mov
daa
int
lahf
sbb
in
mov
adc
movsb
sub
mov
fwait
adc
loop
pop
shl
inc
out
ljmp
popf
lods
jp,pt
ljmp
pop
xchg
imul
dec
popf
sub
cmp
xor
jg
or
adc
outsb
pop
mov
mov
push
cmp
iret
xor
sar
inc
shl
adc
sub
test
outsb
dec
mov
mov
push
mov
loope
gs
cmc
inc
aam
add
test
add
mov
aaa
inc
xlat
int
in
aad
sahf
xchg
fstpt
pop
mov
dec
inc
jmp
stos
push
sub
negb
push
adc
jno
loope
push
and
leave
jp
cli
adc
push
test
sub
cltd
fcomps
jo
adc
dec
popf
rclb
push
adc
rorb
sbb
xchg
dec
ss
push
cmc
pop
shrb
lea
mov
pop
sub
neg
mov
and
cli
int
mov
fcoms
stos
sub
pop
pusha
testl
xlat
cs
adc
push
push
adc
andb
mov
scas
data16
out
sbb
push
sbb
adc
loope
xor
xor
xor
shll
push
stos
pusha
pop
jb
iret
fbld
push
idivb
pop
inc
shl
push
lcall
add
stos
pop
xchg
sbbb
adc
adc
adc
mov
out
dec
divl
cmp
mulb
mov
jg
cmpsb
adc
mov
loope
cs
sub
dec
jbe
mov
xchg
add
lret
bnd
lds
adc
xchg
mov
jmp
shlb
and
loop
adc
lcall
cmpsb
inc
iret
lea
xor
cmp
mov
and
mov
push
icebp
xor
cmp
push
mov
jge
int
fmul
push
mov
or
dec
sub
sbb
mov
aad
in
pop
out
push
mov
mov
push
push
aam
xchg
push
lea
fstl
imul
shlb
xor
or
cmp
nop
mov
or
icebp
cmp
leave
out
inc
add
ja
bound
or
shrb
outsb
out
push
inc
dec
jle
pushf
outsb
adc
mov
sub
adc
js
push
in
je
mul
dec
dec
cmp
insb
mov
mov
push
xchg
aas
dec
pop
cmp
in
mov
shll
xchg
dec
dec
in
lods
leave
fs
sbbb
bound
mov
pop
and
mov
and
ret
push
test
pop
pop
int3
sbb
cmpsb
lds
aad
push
pop
cwtl
aad
ss
ljmp
cld
hlt
mov
cmp
fisubl
jb
lods
jno
call
addr16
jmp
in
pop
or
sub
mov
arpl
test
cmpsb
or
sbb
hlt
push
jno
pop
adc
das
inc
mov
jne
sub
pop
or
adc
int3
xor
inc
or
je
pop
adc
dec
lock
xchg
mov
cmpsb
daa
xchg
cmp
pop
or
idivl
cs
mov
inc
iret
enter
cmc
stos
push
daa
adc
in
or
imul
mov
inc
aad
rcrl
cmp
in
fidivs
xchg
cmc
pusha
cmp
mov
xchg
push
push
add
scas
mov
xor
jns
outsl
bound
fbstp
pop
sub
adc
ret
sbbl
rclb
dec
mov
lods
shl
negb
arpl
cmpsl
pop
jge
mov
adc
fdivr
xor
shrb
add
imul
push
loope
mov
inc
inc
cmpsl
cmp
lods
inc
test
sahf
fs
sub
sahf
das
and
push
pop
pop
popa
dec
lock
cmp
fsts
sbb
outsl
pop
loop
cmp
into
loop
sbb
adc
shl
cmpsl
adc
scas
mov
mov
loop
inc
arpl
pop
ds
push
faddp
pop
push
add
dec
pop
test
jb
xchg
dec
in
jnp
xchg
rol
data16
bound
xor
fcompl
push
sub
ljmp
enter
xchg
dec
popf
cmp
dec
les
inc
les
call
dec
aad
push
aad
cmpsb
pop
sub
pop
xor
xlat
and
movsl
lcall
adc
ret
inc
xchg
push
dec
mov
bound
cltd
mov
movsl
dec
mov
mov
push
sbb
add
mov
xchg
ret
mov
test
cmp
dec
jb
jb
cmp
xor
leave
je
fcom
stos
push
paddb
jge
inc
popa
lret
outsb
pop
mov
push
push
push
adc
inc
stos
mov
je
sub
loop
adc
gs
arpl
pusha
cld
mov
inc
dec
sbb
mov
mov
out
aad
adc
int3
xchg
sub
cmp
outsl
shll
jns
hlt
jmp
sbb
cwtl
inc
pop
fildll
insl
sar
xchg
lcall
lds
cs
outsb
push
push
adc
add
mov
and
adc
aaa
dec
jns
hlt
in
pop
dec
into
out
shlb
sbb
fistpl
pusha
lret
pushf
mov
out
nop
out
cmpsl
adc
mul
loope
aam
dec
movsl
and
dec
sub
loopew
in
ljmp
mov
mov
pop
pop
inc
pop
mov
push
mov
cmp
rorb
ret
stos
out
lcall
scas
pop
mov
pop
fldl
sub
mov
sbb
ss
push
sbb
je
int
push
ret
mov
dec
inc
pushf
add
sub
call
mov
xchg
push
inc
sbb
roll
push
mov
jo
push
rcr
lcall
shlb
addr16
cld
push
push
adc
popf
in
pop
dec
sarb
orl
xchg
jecxz,pt
in
pop
push
xor
aad
mov
scas
inc
in
jo
incl
fwait
add
dec
mov
jge
mov
and
icebp
and
lea
sub
lcall
aas
lds
out
pop
insl
es
out
inc
and
push
push
adc
xor
inc
out
pop
cmp
jle
adc
pop
mov
add
xor
mov
or
mov
xor
xchg
outsl
sub
outsb
push
test
xchg
rcr
fistl
mov
popa
cmp
cmpsl
movsl
or
xor
add
out
cmc
inc
ret
lods
push
shlb
lods
pop
in
mov
es
and
inc
stos
hlt
fucom
jno
repnz
addr16
fiaddl
adc
ficompl
add
test
sti
adc
pop
pop
insl
ss
cmpsl
pop
cmp
rolb
adc
dec
cli
sub
inc
push
sti
movsb
dec
lea
adc
pop
movsb
sar
data16
push
inc
adc
stos
adc
jbe
adc
mov
stos
shl
data16
dec
jno,pn
cmp
cmp
dec
cmp
orl
xor
sbb
cltd
cmp
pop
shlb
in
mov
or
nop
repnz
xor
or
push
adc
mov
les
cld
cmp
rcrl
fcmovnu
into
cmpsb
lahf
sbb
fwait
pop
js
pop
fnstenv
shr
data16
dec
fdivrl
or
test
xlat
mov
cmp
cmc
mov
mov
fucomp
fmulp
jge
ljmp
mov
int
fiadds
ljmp
cmpsl
push
cmp
rorb
adc
popf
scas
push
inc
outsb
popf
xor
xchg
ja
adc
imul
push
ret
and
sub
fwait
test
gs
sub
cld
mov
cmpsl
cmp
xor
xlat
jle
loope
sbb
push
stos
push
notl
push
adc
mov
mov
inc
add
out
xor
test
into
jl
out
and
jb
xor
lahf
cmp
sahf
mov
fwait
daa
leave
lds
sahf
adcw
outsl
lret
push
cmpsl
les
into
sub
bound
stos
fwait
fs
push
add
daa
sbb
outsl
xchg
cltd
cmp
js,pt
adc
cltd
push
or
bound
test
inc
leave
adcl
loope
ja
mov
push
ljmp
xchg
hlt
xor
outsl
mov
inc
aam
out
sub
pop
fnsave
lods
push
stos
sub
mov
cmp
into
loop
lods
xchg
mov
das
mov
into
pop
sub
outsb
push
push
adc
insb
pushf
xor
cmp
push
enter
mov
jno
movsb
or
call
dec
pop
mov
inc
push
test
mov
pop
inc
xchg
or
popa
push
popa
sbb
nop
lret
popf
andl
fwait
lret
xor
fstl
dec
cmp
and
mov
stos
xchg
idivl
mov
test
and
mov
inc
push
rcrb
push
add
pusha
mov
sbb
es
aas
repnz
adc
push
push
jge
mov
sub
mov
pop
mov
jno
push
sbb
loop
push
add
js
mov
cmpsb
sbb
inc
sbb
add
mov
hlt
ljmp
fdivr
mov
jmp
dec
and
dec
adc
into
insl
inc
rcl
sub
inc
xor
pop
jae
inc
stos
std
adc
int
test
push
in
test
xor
lcall
adc
jne
jle
or
jae
xor
mov
hlt
jo
leave
mov
sbb
xor
cld
mov
inc
mov
or
push
das
jge
mov
jle
pop
mov
pushf
push
movsl
inc
push
cltd
cld
out
shll
and
mov
sub
fsubrs
sub
mov
push
ljmp
clc
and
ret
daa
xor
mov
pop
fwait
ror
ret
sub
daa
dec
mov
incb
mov
es
andl
int3
jb
std
pop
sbb
jg
aad
cmpsl
mov
lcall
imull
mov
outsb
xor
ret
addr16
enter
push
lret
jmp
outsb
push
das
jmp
and
cmc
add
bound
fistpl
mov
fsubr
push
repz
in
ds
pusha
mov
bound
in
outsb
mov
xchg
pop
push
test
aad
mov
adc
lods
inc
dec
arpl
hlt
lcall
out
sub
imul
sub
in
cmpl
les
push
movsl
pop
cmp
add
stos
mov
sub
mov
adc
popf
popa
movsb
cmp
rcrb
xchg
loope
aad
pop
repnz
adc
sub
jb
cmp
push
shl
push
rcr
out
dec
mov
dec
fs
jo
rcrb
mov
pop
cmp
xor
jmp
mov
sub
xchg
fwait
cmp
loope
add
adc
adc
lods
fnsave
pushf
insl
adc
loop
fidivs
mov
arpl
sbb
rcrl
push
mov
sbb
dec
repnz
les
pop
sahf
fs
cmp
shl
lret
and
dec
in
rcl
incl
into
push
sbb
sbb
fs
and
pop
xchg
out
int3
adc
inc
push
daa
push
and
shl
push
incb
mov
daa
adc
out
test
dec
dec
push
pop
repnz
adc
cld
push
cmp
mov
pushf
imul
test
sub
mov
jno
lock
jns
fmulp
adc
fnstcw
test
les
mov
mov
mov
add
in
or
test
aad
in
or
fucomip
sbb
cmp
adc
adc
cwtl
out
cmp
xor
push
adc
shrb
lock
xor
push
adc
inc
mov
dec
in
shrb
or
fucomip
push
dec
or
and
mov
adc
jno
test
push
fmul
add
sub
push
rolb
cmp
lret
mov
cmp
adc
adc
add
cmp
add
aad
xor
push
adc
mov
in
mov
xor
jnp
jmp
push
adc
and
int3
out
cmp
aas
or
push
xor
test
stc
lcall
data16
push
push
adc
stc
out
cmp
flds
push
in
scas
xchg
inc
sbb
xor
rorb
stc
push
add
inc
decl
movsb
add
jmp
in
shrb
cld
movsb
das
sbb
or
outsb
roll
push
mov
lea
pop
icebp
lss
inc
daa
mov
sub
mov
add
cwtl
addr16
aam
xchg
hlt
cmp
sub
dec
pushf
inc
xchg
ds
and
xchg
and
add
rcll
aas
adc
jecxz
push
dec
adc
icebp
dec
and
xor
dec
les
mov
adc
sub
pop
das
jmp
jl
adc
mov
movsl
ss
cmp
pushf
sbb
jne
decb
xor
jnp
cmp
push
adc
sbb
sti
arpl
mov
ljmp
cmpsb
mov
push
push
adc
pop
lods
add
loop
push
sbb
xor
into
popf
xor
jmp
sbb
les
loop
loopne
mov
adc
negl
pushf
daa
push
stos
push
lods
nop
jo
rclb
ds
fiaddl
rol
push
add
stos
or
fsubl
mov
pop
fisubrs
ljmp
les
lahf
cmp
push
pop
push
inc
adc
pop
xor
xor
mov
xchg
cmp
dec
cmp
leave
inc
push
dec
dec
fsubl
cmp
pop
loope
pop
mov
pop
adc
cwtl
pop
cmp
dec
cltd
xor
sti
xor
popf
jge
push
push
adc
mov
mov
enter
cli
push
dec
adc
pop
js
pop
jmp
je
shrl
adc
scas
push
aad
mov
in
mov
mov
dec
arpl
pop
pop
cmp
adc
push
lods
pop
pop
adcl
mov
nop
inc
mov
cld
mov
jae
xlat
cmpsl
psrlw
add
sbb
out
xchg
or
and
cmp
out
addb
mov
lea
ja
in
mov
dec
push
lods
pop
xor
and
pop
cmp
sbb
loop
mov
jne
jecxz
or
shrb
data16
fsts
push
dec
xor
xor
popf
cld
or
cs
mov
dec
pop
insb
push
daa
sbb
push
pop
push
mov
sub
dec
sub
cmpsl
adc
mov
mov
gs
fisubrl
cwtl
lds
leave
mov
popf
inc
dec
dec
js
pop
jg
mov
mov
cltd
inc
push
popf
fmuls
arpl
dec
out
rorl
dec
or
rcll
push
insl
mov
outsb
popa
fcompl
mov
lods
call
fsubp
pop
and
sahf
ss
aad
push
loope
sbbb
sub
lahf
cmp
insl
loope
ror
outsl
pop
movsb
shll
lcall
mov
jmp
hlt
and
leave
decl
xor
pop
lods
pop
mov
inc
les
aas
mov
or
cmp
lret
imul
fists
mov
cs
es
xchg
push
aas
add
adc
adc
mov
cmpsl
mov
rcrb
das
outsb
dec
fwait
test
jns
inc
xor
rol
repnz
inc
shrb
mov
push
fdivl
in
adcl
lock
mov
mov
cmpsl
lds
dec
subl
cmpsb
inc
cmc
ret
inc
fcoml
sbb
fadd
stos
std
and
insl
scas
jecxz
in
pushf
sbb
test
loop
imul
xchg
jle
mov
cwtl
inc
and
imul
xor
mov
imull
ret
xchg
pmuludq
cld
and
mov
jmp
push
cltd
adc
pop
notb
loope
lret
adc
push
ds
inc
ret
aad
mov
fistpll
popf
pop
mov
adcb
pop
dec
lds
cli
out
cltd
incb
aam
xor
rcrl
dec
ja
movl
xchg
mov
cwtl
insb
sbb
xchg
int
adc
pop
aas
add
cmc
popf
mov
and
inc
inc
xor
mov
out
lcall
inc
stos
mov
hlt
inc
sbb
or
in
aaa
inc
push
imul
mov
gs
fiadds
or
ret
xchg
adc
movsl
jle
inc
xchg
add
arpl
xchg
adcl
push
sbb
or
push
fs
icebp
mov
cs
movsb
outsb
pop
dec
or
and
inc
sbb
fsts
xchg
das
xor
imul
mov
pop
fdivp
stos
popa
jge
fdivl
sbb
fwait
fwait
push
cmp
sub
adc
jmp
cltd
or
adc
push
sub
ja
push
sub
mov
xchg
pusha
stos
in
inc
test
fwait
stos
push
das
popf
mov
sbb
int
jnp
das
scas
les
push
leave
mov
mov
mov
dec
mov
cmp
rorl
std
clc
fidivs
pop
loop
loope
stos
aad
dec
dec
adc
pop
jo
xchg
xchg
pop
xchg
cmp
fwait
cmp
aaa
cld
push
jbe
push
mov
sub
aad
mov
call
fsubr
push
adc
sbb
js
rcrb
fdivrl
jl
fimuls
int
gs
push
sub
push
sub
jne
xchg
pusha
dec
cwtl
inc
test
lea
or
loopne
pop
push
ljmp
mov
push
mov
cltd
sub
adc
lock
push
lods
ficompl
fwait
int
push
fisubs
mov
jmp
sar
lods
add
pop
ljmp
dec
loop
ret
insb
pop
popf
pop
cmp
adc
push
mov
les
fwait
mov
push
adc
dec
adc
pop
js
jb,pt
dec
popf
xchg
fstpl
or
fldl
pop
call
and
mov
lods
xor
test
dec
popf
dec
iret
ret
and
fsubl
scas
setle
adc
fstps
les
pop
adc
cwtl
sti
rolb
sahf
pop
mov
cmp
xor
dec
jmp
lret
clc
idiv
inc
jb
test
mov
inc
pop
xor
mov
xchg
add
cmc
std
arpl
cmpsl
cltd
xor
sub
daa
fdivl
pop
lds
push
stc
inc
inc
test
xchg
jmp
pop
in
andb
push
push
inc
stc
or
mov
pop
sub
cltd
mov
push
inc
inc
lods
pop
mov
mov
fs
mov
bound
cmpsb
dec
call
mov
shrb
loope
shrb
push
pop
mov
outsb
mov
stos
scas
mov
fcompl
sti
shrl
in
inc
mov
xchg
das
inc
add
cmp
call
xchg
xchg
test
jbe
out
sbb
xchg
imul
mov
push
test
test
mov
dec
inc
xorb
inc
mov
mov
rorl
mov
outsl
fists
lahf
in
fwait
pushfw
roll
out
aas
or
inc
jmp
push
mov
cltd
and
pop
xchg
divl
jne
sub
stos
add
cli
sbb
push
mov
sub
add
jle
dec
cs
loop
sbb
sbb
lahf
idivb
fs
cmpsl
xchg
and
movsb
pop
push
sbb
pop
cmpsl
xchg
mov
lds
gs
sbb
mov
shlb
fnstsw
pop
mov
adc
cltd
and
test
test
inc
xchg
lahf
xlat
test
mov
dec
mov
rorb
push
push
jb
mov
fucomip
lea
adc
or
or
pop
aas
outsl
xchg
push
imul
inc
or
out
inc
and
jno
lea
push
adc
stc
xor
push
mov
cmp
add
mov
push
das
sbb
lret
xor
into
xchg
data16
lods
or
fs
jnp
sahf
popf
cli
aam
mov
loop
stos
aad
mov
adc
adc
into
sbb
daa
into
imul
cmc
ljmp
push
imul
jmp
and
stos
ljmp
mov
xor
popf
pop
stos
sub
jmp
sub
loopne
mov
push
push
xchg
das
mov
in
add
push
arpl
je
mov
pusha
cmp
mov
testl
jecxz
mov
sub
fldt
arpl
movsl
dec
cmp
adcb
stos
and
test
aad
push
insb
pop
arpl
mov
sub
add
mov
ds
gs
cli
mov
adc
mov
sub
ret
cs
inc
pop
adc
lret
inc
fstl
rorb
mov
sub
ja
js
insl
jg
shrl
add
xor
pop
in
fistpl
mov
movsl
sub
add
cld
ljmp
jae
jl
adc
jmp
shlb
dec
test
and
push
fsubr
push
stos
out
jg
push
adc
das
mov
xor
in
mov
leave
fidivrl
dec
and
push
mov
test
arpl
push
adc
call
int
and
adc
xchg
or
dec
lcall
daa
xor
dec
pop
xor
fcmovne
int3
ds
ljmp
mov
xchg
jb
test
call
ficompl
jmp
sar
mov
scas
ss
push
fnsave
das
xor
dec
cmpsl
fwait
ljmp
test
mov
sub
push
or
xchg
inc
jnp
int
enter
stos
xorb
and
scas
cmp
imul
push
adc
sahf
iret
mov
xchg
add
lret
enter
test
mov
scas
sub
cmp
xor
lahf
and
les
cwtl
test
sarl
and
adc
mov
xor
rcr
aad
lds
cli
adc
inc
cmpsb
rcrl
push
xor
lcall
adc
fidivl
or
and
push
cmp
adc
stos
in
test
cmpsb
mov
mov
pusha
rclb
inc
cmp
shll
mov
in
stos
xchg
shl
mov
lea
cmc
mov
push
adc
inc
subb
stc
mov
and
aam
test
leave
and
xchg
adc
inc
and
les
loop
lahf
scas
mov
lods
enter
sar
and
sub
jg
cmpsl
cmp
insl
mov
daa
imul
pop
gs
outsl
lcall
popa
dec
xchg
cltd
scas
stc
cmp
call
mov
pop
inc
lds
movb
adc
mov
aas
or
icebp
jecxz
int
push
shl
loope
push
push
adc
push
xchg
cmp
mov
adc
jae
ljmp
push
outsl
add
cmp
or
push
lea
dec
mov
push
adc
lock
cmp
push
std
cltd
mov
jae
sub
ds
imulb
mov
repnz
and
ss
lock
mov
pop
mov
ljmp
and
mov
push
mov
in
pop
js
or
push
xchg
in
jge
jo
ds
mov
sti
sub
shrl
sahf
pop
shrl
imul
inc
stos
scas
aam
pusha
stos
fiadds
sub
cltd
mov
push
cmpsl
xor
rcrl
cmp
add
aaa
mov
pusha
and
cmp
rcrl
push
push
aam
pop
or
push
push
adc
sub
or
lock
int3
mov
cmpsl
les
jp
popa
xchg
cmp
sub
gs
div
ljmp
jge
cltd
addr16
rcll
dec
push
sbb
add
leave
xchg
dec
icebp
ljmp
jnp
add
sti
sbb
inc
rorl
arpl
add
or
inc
loopne
cltd
xor
sub
das
cmpb
sub
mov
mov
scas
ss
push
addr16
add
mov
loop
mov
inc
jns
ficomps
add
ss
std
lods
xchg
push
pop
pop
scas
cmp
pushf
movsl
out
mov
adc
les
cmpsb
dec
out
mov
sub
stos
xchg
je
and
pop
pushf
cmp
in
push
std
sbb
and
pop
cmc
pop
ret
cli
cmpsl
push
arpl
shlb
clc
sti
fildl
and
mov
lahf
ss
pop
ljmp
sub
out
push
cmpb
aad
outsl
mov
xor
icebp
cmpl
mov
add
bound
sbb
add
out
mov
xchg
rolb
daa
or
xor
out
fidivrs
xchg
mov
in
add
jmp
mov
or
fistpll
pop
das
cmp
inc
cmp
pop
push
dec
pop
int
and
add
sahf
outsl
pop
cli
fucom
push
jb
enter
pop
loope
mov
xchg
arpl
add
add
xorl
test
popf
cmp
shl
push
std
sbb
insb
push
jmp
popa
or
mov
push
cmpsb
xor
pop
cmp
xchg
mov
xor
pop
scas
pop
mov
inc
aam
orb
rcr
in
push
mov
nop
add
iret
mov
imul
test
test
pop
jge
fstpl
lcall
stos
test
jecxz
push
out
stos
mov
daa
xchg
cmp
fdivrp
fisttpll
jbe
dec
in
orb
inc
inc
jecxz
out
push
subl
sub
test
push
inc
test
xchg
adc
cmp
xor
mov
or
sbb
cmpsb
or
xchg
mov
lret
in
xchg
fs
dec
lret
mov
clc
push
jb
add
xchg
or
xor
cmp
push
sub
fistps
or
jmp
adc
sub
lcall
enter
sub
ret
dec
inc
cwtl
push
insb
pop
mov
aam
lret
jae,pn
adc
fidivs
mov
sbbb
mov
icebp
in
dec
cmpsl
pop
and
inc
push
test
push
adc
clc
jo
adc
f2xm1
mov
mov
adc
dec
mov
shll
xor
jp
sbb
hlt
jo
adc
pusha
mov
mov
jl
push
mov
jo
fsub
xchg
jle
pushf
inc
mov
lock
lret
xor
xor
mov
pop
aas
dec
mov
mov
gs
push
adc
sub
dec
aaa
call
sub
pop
pushf
mov
pop
ret
rsm
aad
push
in
mov
dec
sbb
into
xor
sti
adc
lds
adc
iret
add
add
pop
cwtl
xor
push
lods
cmpsl
and
cmp
sbb
fbstp
out
fiadds
daa
sahf
scas
icebp
push
test
fucomp
xor
xchg
test
mov
add
cmp
adc
out
ficoms
or
mov
dec
pop
inc
jg
sub
dec
popf
cmp
inc
ror
sub
loope
cmp
jnp
push
cmpsb
jecxz
orb
bound
ja
outsb
jne
rcrl
popf
rol
jo
adc
xchg
mov
stos
push
aad
mov
adc
sbb
mov
mov
cmp
or
lock
or
xor
roll
outsb
xor
fcompl
push
sub
loopne
das
daa
stos
jbe
lahf
mov
cmp
shl
jge
cmp
inc
jbe
fisubrs
shrl
sub
mov
int
repz
in
cltd
cld
pop
or
aam
and
xchg
pop
scas
xchg
adcl
and
xchg
sub
cltd
cmp
xchg
xchg
nop
fistpll
stos
push
test
or
repz
je
sub
mov
dec
in
out
fidivrs
stos
push
arpl
pop
or
xor
xor
clc
mov
int3
aas
ja
insb
mov
stos
push
test
int
mov
sub
out
cmp
loop
sarl
pcmpeqw
push
shrl
dec
out
imul
je
sub
and
fidivrs
cmc
adc
push
push
adc
push
inc
inc
loop
dec
jb
imul
dec
gs
jecxz
sub
add
adc
mov
push
cmpsl
test
pop
or
movsl
add
jno
adc
sbb
inc
inc
dec
cltd
xor
add
pop
or
pop
dec
inc
hlt
push
cmp
mov
mov
xchg
push
dec
mov
bound
cltd
mov
loope
mov
sub
dec
fs
push
cld
pop
or
sub
jb
pop
call
inc
jmp
movsl
dec
pushf
cmp
into
inc
cld
jo
adc
nop
in
cmp
test
pop
gs
sub
ja
stos
or
lods
cmp
aam
xchg
xchg
push
in
stos
pop
mov
or
mov
jno
and
push
adc
lcall
jb
jb
adc
cmp
in
push
push
mov
push
bound
int
and
adc
xor
sub
cmpsl
inc
sub
push
insb
push
in
adc
inc
add
imul
es
mov
shll
pop
inc
js
inc
jae
pop
push
inc
lret
fildll
push
adc
dec
mov
sahf
push
inc
shrl
lea
sub
fs
mov
mov
stc
cmp
jb
adc
addr16
rcll
cmpsb
and
or
dec
adc
out
shrb
adc
adc
and
adc
andb
es
xchg
and
mov
cwtl
scas
test
xchg
in
xlat
jns
dec
inc
jge
or
fsub
mov
lret
sub
icebp
sub
out
andl
imul
mov
imul
imul
pop
outsl
stc
cwtl
or
xorb
push
arpl
jmp
add
lss
cmp
addr16
or
xor
mov
inc
inc
lret
push
push
adc
movsb
and
sbb
add
xchg
mov
xor
loopne
cmp
push
dec
icebp
mov
adc
into
jle
das
out
imul
adc
jno
pop
stos
push
lods
pop
call
loopne
mov
sar
inc
cmpxchg
pusha
jae
mov
push
sub
sahf
push
sub
ficoms
xor
adc
cltd
cmp
sbb
imul
or
cltd
mov
mov
popf
rolb
popf
sarl
push
adc
aad
add
dec
adc
mov
pop
repnz
jmp
adc
out
xor
jo
adc
fsubrp
jb
cwtl
push
fs
gs
dec
ficoml
xchg
outsb
sub
xor
mov
cmc
sub
dec
adc
xchg
fst
dec
lods
pop
xor
test
andl
jae
push
xor
adc
daa
and
jbe
inc
cmp
dec
inc
cmp
inc
int
es
insb
mov
fstl
cmp
arpl
add
shrl
sbb
adc
inc
fnstenv
lcall
popf
dec
cmc
xor
ja
leave
fcoms
adc
sarb
xor
sub
xor
adc
iret
outsb
cmp
or
fdivrs
in
add
xchg
sub
jno
sarl
loopne
rol
inc
aad
adc
cmp
mov
lret
pop
aad
xchg
pop
dec
push
sub
andb
fistl
and
fstpl
cmc
inc
dec
pop
inc
imul
cmpsl
dec
jmp
sbb
sbbl
out
pop
cltd
mov
cwtl
pop
test
pop
pop
cwtl
icebp
mov
scas
pop
sahf
pop
pop
and
cmpb
dec
arpl
mov
dec
mov
pop
sub
insl
sub
mov
cmpsb
mov
loopne
mov
dec
popf
inc
dec
arpl
shlb
and
loope
mov
nop
jl
arpl
ret
daa
sbb
adc
push
and
or
push
insl
push
test
push
lret
xor
outsl
les
push
test
les
movsb
inc
xchg
jp
and
in
js
push
sub
sahf
imul
and
in
mov
add
cmp
sbb
xor
lods
sub
cli
or
pop
inc
cmp
dec
hlt
cs
add
xor
push
xchg
cmp
push
lods
lret
fsubs
mov
clc
mov
shll
mov
sub
pop
pop
push
or
insb
cmp
dec
xchg
outsl
fbld
lcall
jbe
ja
sub
sbb
mov
jbe
and
xor
or
cli
mov
stos
jg
add
dec
ret
je
or
sub
cld
shl
lahf
mov
add
fcomps
xchg
adc
out
je
inc
push
jg
sbb
shll
dec
pop
pop
cmpsl
xorl
les
or
sub
mov
mov
aaa
pop
clc
std
fidivs
fs
dec
mov
dec
cmp
mov
push
dec
bound
ret
xchg
dec
inc
or
jae
into
insb
mov
repnz
imul
mov
jmp
outsl
and
lahf
push
mov
push
lret
push
sbb
adc
jo
insl
lcall
iret
in
adcl
loope
imulb
lods
push
fimuls
test
and
idivb
xor
call
rcrb
xchg
loopne
inc
push
and
inc
test
gs
adc
add
test
rorl
mov
adc
push
dec
dec
mov
sarl
adc
xchg
sub
push
int
push
arpl
inc
push
sbb
cld
pop
cmpsl
push
mov
cmp
xor
dec
rolb
test
xlat
adc
pop
arpl
xor
fwait
sub
adc
sbb
subl
stos
or
fwait
mov
dec
fisubrl
cmpsl
jne
add
push
xor
mov
fwait
out
stos
pop
jne
aad
insl
push
jecxz
pop
cmp
and
adc
test
clc
cmpb
pop
lods
loope
push
push
adc
jo
lods
pop
loopne
xchg
add
pop
cmpsl
cmp
xor
outsb
sub
push
inc
sbb
sahf
mov
mov
and
hlt
sahf
movb
test
mov
push
fucom
lods
cmp
leave
adc
mov
sahf
out
push
dec
xchg
sub
mov
push
mov
ja
je
ljmp
inc
cwtl
xor
or
jbe
or
sub
idivl
mov
and
pop
sahf
fcmovnu
in
pop
sti
xor
in
cmp
mov
pushf
cmp
sub
adc
inc
push
ret
inc
and
movsb
adc
in
add
xchg
sub
std
inc
leave
add
cmpsl
push
mov
and
aad
fucomp
jge
and
in
das
add
and
pusha
xchg
push
pop
cmp
xchg
loope
xor
push
imul
aam
orl
dec
jmp
push
andb
rcrl
push
jno
fstpl
dec
cltd
sti
pop
jp
loope,pt
dec
popf
dec
int
movsl
pop
movsl
jmp
pop
ficoml
push
std
add
xchg
push
imul
sub
cmp
sub
pusha
js
mov
fsub
push
push
pop
stos
in
or
imul
rcr
cmpsl
test
out
and
mov
aaa
cmpsb
mov
lods
pop
mov
or
jbe
lcall
xchg
dec
and
movsb
fsubl
fwait
int
sub
mov
lret
or
and
cmp
push
scas
fistl
push
clc
push
lds
bound
mov
cmp
push
or
mov
add
cmp
xchg
mov
shrb
addb
and
fdivr
mov
popa
scas
cs
mov
in
sub
push
inc
dec
fwait
cmp
shlb
pop
sbb
shl
scas
and
enter
pop
add
scas
int
xchg
fldcw
lock
out
add
push
inc
mov
dec
jne
inc
or
icebp
cmp
mov
add
jnp
lcall
ds
stos
jno
movsl
ja
or
add
lret
mov
mov
inc
jne
mov
mov
pop
dec
pop
mov
inc
pop
add
sbb
inc
xchg
in
sbb
mov
in
movsl
inc
mov
enter
lea
fbld
fcompl
bound
cmp
aad
mov
sub
ret
sbb
sbb
add
jno
pop
sub
inc
sbbb
cwtl
push
loopne
and
js
mov
test
icebp
gs
jb
cmp
jp
mov
leave
in
xorb
aaa
and
imul
arpl
mov
sbb
jmp
push
jl
hlt
in
lods
or
xor
test
cld
push
mov
enter
loopne
ficoms
fwait
mov
mov
arpl
bound
xor
adc
aam
icebp
mov
jo
pop
cli
mov
lods
pushf
cli
in
and
lds
or
jl
sub
sub
out
push
adc
mov
ror
orl
in
mov
dec
into
out
push
dec
popf
cmp
push
and
ss
rcl
cmpsl
dec
cltd
and
lret
xchg
sub
add
push
movsl
add
adc
inc
mov
pushf
push
jno
imul
out
lcall
jmp
cltd
mov
push
jg
fimuls
sbb
pop
push
in
pop
sbb
insb
xchg
jg
cmp
xor
mov
movsl
jle
cmc
ljmp
aaa
push
xor
loopne
push
rdmsr
mov
cmpsl
dec
insl
jb
xchg
loope
or
in
xchg
and
jp
es
mov
call
push
xor
cmp
mov
ljmp
imul
adc
adc
adc
push
and
outsl
lods
movsb
aad
movsb
dec
cltd
inc
xlat
leave
cmp
insl
pop
pop
push
xor
out
pop
mov
cwtl
insl
push
sti
aad
pop
pop
jge
gs
cmpsl
arpl
data16
push
imul
mov
stc
mov
push
lods
call
cltd
dec
mov
movsl
dec
popf
dec
ljmp
out
mov
outsb
push
fucomip
test
lret
loope
out
add
loop
dec
popf
lret
sbb
or
push
fucomi
pop
jecxz
or
fstp
and
mov
sub
and
ja
add
in
lahf
inc
popa
push
cmpsb
dec
in
mov
adc
lods
sar
jb
out
jnp
stc
data16
clc
cmpsb
mov
cmc
sahf
addr16
cmc
jbe
sbb
outsl
pop
jmp
je
cmpsl
adc
adc
pop
imul
fucom
test
jne
pop
loope
cmp
add
cmp
sub
pop
and
es
sti
pop
pushl
fidivrs
ds
scas
dec
popf
dec
ljmp
inc
mov
fidivrl
cmp
xor
mov
shlb
jge
rcl
cld
mov
adc
pop
rcr
out
xchg
test
fsub
sahf
test
xchg
jge
jecxz
les
and
inc
add
adc
mov
jmp
fists
aas
arpl
sarb
add
xchg
scas
lock
and
push
mov
xchg
jp
cmp
cmp
or
and
stos
inc
loope
xchg
jl
inc
ret
aaa
cmovs
push
mov
sbbb
sub
imul
mov
xchg
inc
adc
outsl
fistps
repnz
mov
movsb
cmovs
ss
and
jne
data16
mov
inc
outsb
mov
cmp
aad
inc
outsl
in
pop
movsb
xchg
int
sub
fistps
sahf
mov
and
adc
out
rcr
dec
push
pusha
sbb
and
imul
cmp
in
add
ror
xchg
dec
pop
hlt
test
arpl
lcall
outsl
push
mov
ret
push
in
xchg
stc
or
add
jp
mov
or
dec
int
test
cmp
gs
dec
mov
or
pop
adc
or
lea
mov
sbb
imul
hlt
jmp
add
adc
cltd
add
out
cwtl
add
or
lcall
or
add
lret
adc
cwtl
add
lret
adc
cwtl
add
insb
cltd
add
push
cltd
add
push
cltd
add
popa
cltd
add
add
add
lret
adc
cltd
add
int
add
pop
lcall
sub
add
int
add
insl
popf
add
jae
add
lods
popf
add
int
add
pop
popf
add
or
xor
mov
cmp
fdivr
mov
les
lret
inc
mov
cmpsl
dec
cmp
stc
rcrl
sub
pop
int3
add
stos
mov
dec
in
mov
mov
jo
pop
ljmp
fisttpll
cmp
enter
push
in
fnstcw
lods
pop
fnstenv
push
fldl
push
cmpsl
xor
lret
sub
mov
mov
xchg
fldcw
jge
xchg
sahf
frstor
push
cmpsl
xor
lret
sub
mov
leave
add
leave
jl
cmc
ljmp
aas
test
mov
inc
push
sub
cmp
sub
push
test
mov
sbb
fldenv
sub
ja
pop
adc
push
inc
rcrl
jecxz
out
cs
or
mov
stos
mov
push
inc
or
and
lret
sbb
popf
cmp
ror
push
adc
lcall
and
std
bound
addl
cmpsl
dec
out
add
and
fs
dec
cmc
xor
sbb
mov
test
cmpsl
shl
outsb
dec
sbb
xor
dec
jp
inc
add
decl
cmp
lds
in
loopne
sti
ror
xchg
out
jnp
imul
stos
mov
pop
and
adc
sub
push
mov
xchg
pop
shlb
fidivs
jns
faddp
push
les
add
cmp
xor
rorl
add
fisubrs
xchg
sbb
push
scas
dec
cltd
cmpsl
mov
pop
push
cwtl
cmp
xor
sbb
std
shlb
into
outsb
dec
push
lret
lods
pop
mov
xchg
push
popa
sub
cmp
jnp
call
inc
movsl
inc
cwtl
xor
je
mov
xchg
pushf
inc
dec
sbb
out
xchg
push
jns
mov
dec
lcall
sbbl
ja
movsb
sbb
scas
pop
xchg
mov
lods
push
aad
lock
les
mov
shrb
inc
out
pop
push
pop
add
mov
xchg
or
and
inc
pop
xor
push
stos
inc
add
or
test
jb
fistps
inc
jge
lret
subl
aas
cwtl
inc
or
icebp
mov
sbb
cwtl
xor
fs
adc
in
or
arpl
call
add
loopne
gs
je
rol
icebp
push
add
lret
mov
mov
leave
pop
int
xchg
rorb
cmpsl
mov
sub
insb
push
sub
push
nop
xor
adc
push
jnp
fidivrs
or
push
icebp
dec
fimull
push
test
and
imul
mov
pop
inc
dec
rcrl
mov
push
dec
or
out
xor
sbb
fdiv
outsb
sub
cwtl
and
cltd
push
pop
fdivrl
inc
push
push
add
jno
adc
add
cmp
shlb
and
mov
das
scas
pop
mov
addr16
pop
test
push
imul
push
daa
pop
cs
mov
mov
dec
mov
pop
loope
shlb
inc
push
movsl
or
push
xor
subl
out
cmc
mov
xchg
adc
jbe
pop
xchg
in
dec
lods
mov
test
pop
js
xor
jne
repz
data16
pusha
dec
adc
fwait
pusha
mov
pop
jle
sub
sbb
xchg
push
test
xchg
cld
test
push
or
push
movsl
adc
imul
or
in
and
loopne
movsb
shll
sti
bound
push
push
sbb
and
xor
cmc
loop
mov
addb
jg
addl
xchg
push
fcomps
xor
jmp
lods
sub
loop
adcb
pop
andb
mov
je
imul
jbe
cmp
mov
jmp
je
sub
dec
cmc
cld
and
call
in
bound
inc
cmpsl
dec
jmp
pop
inc
clc
push
mov
cmc
nop
ljmp
scas
xor
imul
or
test
cmpsl
cmp
add
mov
fisubs
mov
pop
mov
fildl
inc
sub
jmp
aad
faddp
je
test
inc
push
mov
dec
popf
dec
lret
adc
cmp
jbe
ljmp
dec
dec
lcall
lods
cmp
push
les
call
xchg
adc
fidivs
int
or
mov
or
fbld
out
pop
test
in
mov
cmpsb
dec
or
gs
arpl
ror
sub
shll
xlat
daa
inc
test
adc
daa
xchg
pop
adc
push
ror
loope
push
arpl
mov
fwait
ljmp
push
fucomp
pop
cmp
leave
adc
mov
push
js
int
inc
cmpsl
mov
xor
cwtl
fwait
shrb
shrb
jmp
mov
dec
popf
inc
dec
imul
jns
das
aad
stos
pop
lea
pop
pop
and
xor
xchg
push
push
and
arpl
mov
cld
mov
sbb
push
rorb
xor
pop
xchg
mov
sub
fisttpl
add
test
les
mov
push
cs
dec
mov
add
push
jmp
or
sbb
lret
push
jg
and
mov
cmp
scas
mov
mov
ja
out
das
mov
daa
inc
add
in
movl
ds
clc
inc
fildl
push
mov
push
inc
add
out
or
cmp
mov
sbb
push
pusha
pop
cmpsb
push
mov
mov
repz
mov
stos
ss
pop
je
xor
inc
xchg
movsl
dec
mov
mov
mov
test
outsl
pop
idivl
jb
dec
add
out
push
cmc
test
push
add
std
xor
dec
sbbb
inc
das
andb
add
mov
rol
stc
jo
pop
out
mov
or
xor
enter
jecxz
or
leave
mov
imul
aad
xor
cmp
mov
notl
icebp
xchg
das
jae
mov
adc
in
fisttps
push
sbb
cmpsb
sub
dec
lret
movsb
dec
lret
rorl
xor
in
xchg
sub
add
rcll
sbb
inc
mov
xchg
mov
sarb
mov
mov
popf
lret
in
push
scas
test
sbb
mov
xchg
test
dec
sti
loope
lea
xor
cmp
out
decl
stos
hlt
xor
pop
ja
adc
ja
fnstenv
mov
lret
xchg
xor
aaa
push
mov
or
out
daa
pop
jne
pop
sbb
mov
sub
dec
xchg
stos
andb
inc
jo
mov
btr
insb
push
call
adc
stos
inc
xchg
lods
pop
mov
in
fucom
cmp
xor
dec
inc
bound
cmpsl
les
pusha
test
mov
push
stos
cmp
push
pop
adc
push
daa
xchg
lds
sbb
mov
cmp
lods
inc
test
inc
inc
or
mov
dec
pop
cmp
inc
lods
pop
mov
ret
sub
pop
xor
sbb
fistpl
push
and
lcall
pop
inc
pop
cmp
push
rclb
and
mov
push
jno
xchg
pop
mov
ret
adc
pop
cmp
dec
out
adc
sub
add
in
adc
daa
pop
fldt
fs
dec
jo
in
mov
insb
push
stos
pop
mov
dec
push
lret
repnz
fwait
bound
das
ja
test
and
frstor
pop
mov
gs
mov
dec
inc
inc
les
shrb
sub
xchg
sub
out
adc
int3
inc
mov
jae
out
add
fmulp
pushf
push
ljmp
pop
sub
adc
repnz
mov
mov
jl
sarl
push
addr16
fmulp
pop
into
push
sar
fnclex
pop
pop
mov
mov
pop
pop
inc
scas
mov
cmp
stc
pop
add
test
and
daa
push
mov
sub
hlt
outsb
add
cmc
ljmp
ss
mov
test
pop
into
test
cmp
xchg
inc
inc
push
adc
inc
jge
in
nop
xchg
arpl
daa
daa
push
mov
push
out
mov
cltd
mov
adc
scas
or
and
push
rorl
cmp
imul
cmp
dec
push
in
inc
test
add
pop
fistpl
arpl
cmp
iret
cmp
inc
std
fndisi(8087
test
and
call
lcall
les
out
sub
push
sub
mov
fwait
xor
ret
es
pop
test
cltd
cmp
cmp
or
mov
dec
lcall
xlat
gs
mov
sarb
gs
lahf
ljmp
scas
and
sahf
and
sbbb
xchg
jecxz
hlt
call
push
sub
mov
in
adc
cmp
ss
test
or
cmp
pop
xchg
movsl
jmp
dec
mov
aad
inc
int
test
mov
js
clc
lea
imul
out
xchg
adc
mov
nop
push
leave
cmpl
mov
cmp
dec
mov
ds
fisttps
lea
lahf
arpl
das
cld
movsb
aas
sbb
in
sbb
xchg
in
cwtl
mov
pusha
xchg
adc
loope
lea
or
shrb
and
rcl
in
push
ret
sbb
in
push
xchg
push
push
xor
rclb
fldl
ds
cmp
movsl
sbb
addr16
pop
inc
dec
aas
jge
clc
ss
add
icebp
ret
lahf
sub
fwait
aas
lea
xchg
mov
cmpsb
imul
jbe
out
inc
xchg
adc
xor
inc
cmp
cli
push
mov
dec
rol
movsl
ljmp
repnz
das
push
daa
sub
xchg
pinsrw
incb
mov
mov
nop
or
sub
in
into
jge
sub
mov
or
pop
fdivrl
inc
sbb
daa
inc
ljmp
cs
aad
push
and
js
mov
cmpsl
xor
sar
outsb
dec
leave
adc
popa
out
pop
sahf
in
jae
push
cmpsb
cmpsb
mov
mov
sub
mov
out
pop
test
ja
insb
mov
and
ficoml
lods
and
das
cmpsl
mov
and
hlt
xchg
sub
push
dec
jmp
lods
xor
xchg
push
fnsave
addb
xchg
fistpl
std
ja
push
test
inc
xlat
cmp
out
lods
sub
loope
cwtl
bound
fisttpl
mov
xlat
daa
dec
test
adc
lods
fidivl
pop
into
das
cmpsl
mov
and
jmp
rclb
leave
and
cmc
ljmp
mov
xchg
push
shrl
push
test
cmp
sbb
fcomp
push
inc
fs
cltd
xor
js
test
insb
jmp
dec
rclb
popl
fucomp
push
in
cmp
stc
rcrl
rol
adc
jno
xchg
add
cwtl
rol
adc
and
movsb
shlb
pop
les
cltd
mov
les
pop
stos
xor
orb
pop
in
shl
outsb
inc
fistpll
cld
sahf
cmp
and
adc
inc
outsb
shr
sub
jge
daa
mov
aaa
inc
xlat
leave
loopne
mov
jne
cmpsl
sub
xchg
roll
inc
aad
nop
jo
adc
cmpsb
ret
imul
imul
imul
mov
mov
mov
pop
jmp
mov
sub
mov
and
icebp
xor
xor
or
or
push
movsl
test
xchg
xor
inc
pop
mov
xchg
pop
mov
jle
jl
pusha
mov
inc
xlat
cmp
je,pt
dec
popf
cs
imul
loope
insl
mov
sub
xchg
cmc
sub
fidivs
rcll
pop
int
int
sbb
xchg
sti
test
add
sbb
pop
int3
xchg
mov
sub
xor
iret
mov
xor
add
push
fsubp
push
pop
mov
out
mov
in
cld
fiaddl
jmp
sub
and
and
or
or
test
fstps
xor
adc
out
xor
mov
or
insb
cmpsb
notl
xchg
scas
jecxz
imul
pop
outsl
repz
add
das
xchg
cltd
ret
fiaddl
out
pop
inc
jae
inc
mov
pop
int3
xor
jnp
push
adc
cwtl
cmp
pop
cwtl
aam
subl
jno
mov
or
push
movsb
push
popa
jp
in
mov
mov
out
cmp
mov
mov
pop
sub
and
cmpsl
ljmp
xchg
push
fdivl
lods
jge
dec
xor
sti
lods
push
dec
aad
push
mov
pop
rep
push
push
adc
shrl
mov
xchg
dec
pusha
sbb
lret
inc
sbb
sbb
mov
sbb
test
pop
xchg
mov
aaa
icebp
add
dec
nop
jo
adc
jae
xor
jo
mov
push
pop
out
jl
jp
out
pushf
aas
jns
push
push
mov
frstor
jmp
cmc
arpl
or
push
call
daa
mov
xor
adc
jno
cmpsl
popf
mov
mov
nop
cmp
mov
add
jle
mov
pop
in
xlat
pushf
pop
xor
pop
mov
xchg
bnd
add
push
pop
das
cmpsl
sarl
mov
or
jecxz
push
daa
add
into
push
fldl
mov
sbb
leave
imul
andl
data16
add
dec
test
scas
add
mov
pop
sub
sahf
lea
push
aad
mov
ja
shll
ror
push
or
ret
test
and
sahf
cwtl
cmp
xor
dec
dec
sarl
mov
adc
std
shl
push
pop
repnz
pop
mov
add
call
cld
sbb
adc
sbb
jmp
inc
adc
movsl
cwtl
xor
adcb
xchg
add
jecxz
push
adc
call
mov
dec
out
push
inc
jnp
incb
outsl
out
stos
fstps
xor
push
sub
std
xor
cmc
pop
jno
sbb
adc
cmc
sub
repnz
das
and
popf
ljmp
and
dec
cmc
out
test
flds
out
xor
mov
push
xor
dec
clc
adc
shrl
lock
pmulhuw
adc
cmp
loope
cmp
xor
hlt
mov
mov
and
fisubrs
out
mov
outsb
pop
mov
lds
push
adc
leave
out
aad
in
and
cmp
xchg
push
insb
sub
or
fcomps
jge
out
stos
cmp
loope
inc
ja
fndisi(8087
lea
je
lret
pop
out
mov
pop
loop
popf
scas
stos
inc
lods
sqrtps
aad
scas
push
aad
inc
mov
shr
loopne
jl
pop
cmp
sub
or
fistpl
lods
shrl
mov
cmp
mov
jl
jmp
xchg
add
mov
aad
mov
mov
imul
inc
cmpsl
adc
inc
leave
stos
pop
icebp
ljmp
pop
xchg
inc
popa
lret
pop
shl
push
aad
movsl
push
mov
les
jecxz
pop
push
stos
sahf
outsl
pop
mov
or
push
cmpsb
xor
cmpsb
dec
loopne
cli
test
js
xchg
call
movsl
dec
out
popf
ffreep
lret
push
movsb
xor
movsl
dec
loop
mov
in
push
inc
jg
mov
fidivl
push
mov
ret
test
dec
insb
inc
mov
fsubrp
outsb
inc
inc
dec
fs
shrl
jge
mov
rcll
or
mov
sub
subb
xchg
mov
in
pushf
lahf
or
mov
push
test
movsl
divb
pop
cmpsb
stos
add
sbb
outsb
sbb
dec
divb
jo
dec
push
imul
insl
int
push
cmc
push
xorl
sahf
jne
cmp
imul
shl
imul
stc
movsl
adcl
sub
mov
fwait
jb
mov
ret
aad
scas
pop
sub
sub
push
cmp
xchg
inc
mov
inc
sbb
nop
inc
xchg
push
lea
pop
arpl
xor
dec
fdivrs
inc
jecxz
cmpsl
repnz
lret
and
jmp
lea
push
push
adc
sbb
cmp
pop
adc
sub
sbb
stc
dec
push
sub
xor
mov
je
or
push
mov
gs
sbb
cli
push
xor
ss
adc
sbb
loopne
sarl
dec
iret
inc
pop
jge
bound
xchg
jecxz
fcmovne
sbb
cmp
arpl
mov
mov
repnz
pop
fsubs
es
pop
or
mov
lods
push
jl
pop
loopne
push
inc
test
xlat
ss
fldl
dec
adc
gs
jg
pop
leave
je
and
push
add
push
dec
leave
inc
mov
cmpsb
dec
in
xchg
xor
ja
push
fstpl
cmp
inc
dec
test
or
cmp
sub
ds
cmpsl
sahf
out
mov
lock
ljmp
mov
or
idivb
pushf
cmp
push
mov
orb
fcmovnu
in
push
sti
rorb
outsl
pop
in
pop
xor
lds
add
stos
lea
nop
aad
cld
mov
test
xor
sub
aad
stc
push
push
adc
dec
inc
test
jge
pop
es
cmp
sar
aad
dec
out
push
and
inc
or
jp
in
inc
cmpsb
cmp
xor
repnz
andl
ja
les
pop
aad
push
int3
dec
dec
fsubl
scas
setle
adc
or
das
int3
add
shl
adc
push
sub
mov
lret
loope
aad
enter
pop
js
xchg
add
jo
loopne
adc
lods
pop
loop
adcb
cmp
int
aam
pop
in
sub
xchg
inc
mov
push
stos
push
std
sar
outsb
and
daa
sbb
push
jp
inc
mov
ja
fidivrs
and
push
das
aas
mov
xchg
idivb
xchg
add
movsl
pop
cmp
add
shl
adc
mov
cmp
push
mov
out
popfw
add
push
stos
ficoms
jmp
adc
cmpsb
lcall
jge
adc
dec
jae
mov
outsl
sti
fndisi(8087
jmp
lret
sub
adc
cmpb
jmp
add
repnz
adc
pop
cmc
or
push
adc
cmpsb
lcall
loope
ja
jg
cmp
int3
fistps
clc
adc
cmpsb
and
jmp
cmc
jae
rorl
lahf
call
into
stos
mov
test
cmc
in
es
popa
cs
jp
pop
cmp
add
sbb
push
push
stos
add
mov
hlt
cmpsb
aam
out
xor
out
mov
leave
sbb
movl
movsl
lret
push
rcrl
aaa
push
out
je
or
in
stos
xlat
outsb
dec
inc
xor
xlat
shrl
in
rorl
lret
pop
xchg
cli
sub
stc
icebp
pop
inc
push
paddq
rclb
xchg
sahf
fs
jno
and
and
or
jbe
ds
test
mov
stc
push
cmp
mov
push
add
sarl
add
xor
jmp
push
sub
add
mov
or
jb
pop
stc
mov
fs
sar
mov
pop
mov
fs
shrl
mov
push
push
adc
xchg
sub
outsl
pop
push
dec
jnp
js
adc
sbb
nopl
in
push
in
jnp
stos
sub
ss
adc
int
push
subl
xchg
mov
pop
jge
test
test
outsl
enter
lds
fstpl
imul
and
mov
and
nop
out
daa
mov
fwait
inc
and
push
int
cmp
js
pop
dec
stc
pop
pusha
scas
dec
out
shll
mov
push
pushf
aad
push
push
push
adc
mov
sbb
std
jmp
or
pop
xchg
ret
in
mov
into
sbb
push
mov
inc
ljmp
es
sbb
mov
lods
and
test
jae
fcoms
jnp
cmp
decb
aad
data16
jle
inc
faddl
mov
bound
mov
sub
les
push
jle
inc
fsubl
inc
push
inc
xchg
pop
mov
mov
nop
lcall
cmp
aam
arpl
dec
lret
hlt
sub
out
scas
xchg
loop
sahf
jb
or
push
shl
push
dec
push
mov
inc
cmp
cmpl
add
frstor
negb
ds
icebp
dec
popf
dec
into
push
sub
sbbb
jl
inc
cmpsl
mulb
ficomps
and
mov
push
push
loope
mov
clc
int3
and
ljmp
outsb
sahf
jb
cli
sub
hlt
mov
pop
fistps
lods
sbbl
push
mov
int
outsb
mov
jmp
push
dec
push
loopne
fwait
out
stos
loop
ljmp
xchg
push
jbe
test
inc
push
push
adc
loopne
dec
int
mov
jl
and
pop
shl
mov
cmp
lahf
cmpsl
les
push
les
pop
sub
jae
inc
mov
sub
adc
adc
movsb
dec
loope
shrl
scas
mov
stos
xor
sub
out
repz
xlat
out
rcrb
jb
dec
addr16
shrl
out
push
push
jp
sbb
and
cltd
dec
pop
and
xor
sbb
or
sbb
inc
add
inc
out
cltd
xor
shl
jb
aad
push
push
push
adc
inc
inc
test
enter
xor
or
pop
adc
ret
inc
mov
sub
push
adc
add
adc
out
mov
fstpl
push
cmpsl
fistpl
aad
mov
xchg
pop
mov
in
orb
insl
push
cmpsl
fistpl
aad
mov
addr16
rolb
in
push
cmpsl
cmp
fcoml
dec
outsb
cmp
addps
cmpsb
fisubl
add
imulb
add
fbstp
xchg
and
divb
add
push
adc
out
js
nop
push
mov
arpl
jmp
popf
jp
xor
xchg
sbb
jmp
pop
fdivp
sahf
sahf
sbb
pop
mov
insl
movsb
out
out
or
xchg
pop
push
or
adc
scas
lahf
xchg
adc
rcrb
fdivl
popa
fbld
test
sbb
in
push
loopne
cmpsb
adc
push
mov
mov
imul
inc
sbb
mov
cmp
add
xchg
push
shll
int
pop
shll
addl
push
xor
out
iret
push
pop
aas
push
outsl
int
sub
mov
and
ds
xchg
xor
xchg
fdiv
cmp
push
dec
jecxz
leave
inc
mov
jns
mov
pop
mov
add
jmp
fdivl
xor
add
outsl
xor
enter
add
das
xchg
cli
movsb
iret
mov
int
push
bound
xor
mov
jnp
mov
fsubrp
lea
xor
push
push
adc
mov
jmp
mov
push
add
jae
jmp
adc
xlat
out
pushf
stos
hlt
xor
jmp
sahf
adc
std
sub
lret
cmp
loope
pop
pusha
dec
cmpsb
testl
dec
mov
sub
dec
nop
mov
stos
andl
rorb
fnstenv
cmc
imul
lahf
out
fmulp
lret
push
dec
ret
sarl
push
loope
push
push
adc
lock
pop
loopne
dec
jp
pop
test
dec
xor
mov
fs
dec
in
mov
push
aad
add
jb
push
mov
les
mov
push
push
adc
pushf
int3
mov
xor
cmp
fidivrl
ja
stos
mov
and
stos
and
pop
pop
xlat
out
rcrb
or
push
push
adc
imul
popf
inc
test
mov
enter
rolb
mov
out
push
cmpsl
dec
mov
jmp
inc
in
in
and
add
jmp
stos
sti
mov
xchg
ret
pop
xchg
mov
xchg
jne
rcrl
sub
inc
push
fistl
leave
imul
fisttpl
cmp
sbb
ja
fsubl
or
fsubl
popa
xchg
sub
dec
pop
loope
pop
sub
or
aaa
popf
cmc
pusha
ds
ficomps
scas
negl
sub
aad
pushf
cmp
mov
icebp
cmp
insb
mov
sbbl
push
stos
push
daa
adc
in
or
fstl
mov
in
scas
loop
push
adc
out
sub
div
enter
int
xchg
pop
jmp
mov
out
jbe
fmulp
sbb
aad
movsb
shlb
pop
mov
fwait
pop
mov
pop
mov
sub
xchg
adc
push
mov
xchg
ret
pop
xchg
test
aad
cmp
sbb
xchg
fidivrl
fcomps
cmp
jb
jmp
out
dec
add
shll
adc
pop
stos
push
test
xor
xchg
mov
xchg
fsubr
pop
push
dec
pop
int3
ja
cmp
stos
inc
mov
or
sub
dec
popf
cmp
out
dec
fsubr
fidivrs
stos
and
pop
shll
xor
mov
push
mov
lds
mov
adc
mov
adc
filds
cli
roll
jns
iret
xchg
pop
arpl
dec
mov
jmp
bound
mov
cwtl
in
xor
mov
lcall
sbb
sbb
cmp
sbb
adc
inc
add
movsl
lahf
mov
inc
xchg
cmp
push
es
or
or
dec
add
inc
sarb
pop
push
adc
mov
imul
enter
lret
cltd
cld
gs
cmp
mov
cld
push
test
jnp
mov
test
out
in
push
adc
out
rcll
add
js
xchg
imul
xchg
test
mov
sub
or
idivl
cld
pop
das
xchg
push
subb
ljmp
std
cmp
dec
xchg
jae
and
mov
pop
xlat
lea
sbb
cld
jae
adc
sub
sbb
cld
xlat
and
insl
fidivrs
mov
mov
inc
in
sar
push
scas
sarl
rcll
inc
xchg
cltd
or
and
cmp
repnz
movsb
lock
cmc
mov
icebp
lret
dec
and
fcoml
cmp
adc
push
in
inc
jno
push
xor
mov
dec
xor
sub
shl
mov
dec
push
add
pop
das
out
pop
test
push
in
in
xchg
insb
cltd
dec
cmp
dec
adc
push
clc
mov
sbb
push
pop
rorl
daa
push
jbe
je
rcll
stos
insl
outsl
shlb
or
clc
loop
jp
xchg
ljmp
jecxz
gs
cmpsl
aad
cmp
imul
cmp
dec
mov
and
shl
outsb
inc
pop
movsl
xchg
sub
add
cmp
aad
cmp
test
adc
ljmp
dec
mov
addr16
loope
ja
cmp
popf
dec
add
loop
inc
test
fstl
pop
jmp
or
cmp
mov
adc
leave
add
xchg
insl
mov
mov
jl
lds
popf
cmp
popf
outsl
sbb
push
xchg
sub
dec
cltd
xor
fistps
dec
popf
out
dec
pop
movsl
ljmp
fsubrs
and
push
pop
mov
xor
push
mov
mov
or
cli
push
int3
fisubs
push
cmpsb
dec
fiadds
mov
pop
pushf
mov
ret
sub
shrl
jns
cmpsb
call
jno
dec
adc
pop
mov
sub
loope
dec
lds
les
popf
cmp
adc
push
and
mov
gs
mov
dec
int3
inc
cmpsl
adc
push
ljmp
sub
push
popa
hlt
outsb
mov
std
xor
xor
cmp
stos
cmp
mov
xchg
movsb
rorb
pop
mov
inc
in
orb
jge
lds
lahf
cmp
out
aad
fcmovb
out
test
popf
pop
mov
ja
cmp
popf
xchg
loop
lods
iret
icebp
imul
aad
out
stos
scas
mov
sbb
gs
dec
xor
push
xor
scas
ja
jno
or
adc
push
insl
adc
pop
dec
dec
popa
lret
lods
aad
push
cmp
sbb
outsb
fidivrl
stos
push
push
and
mov
cmpsl
imul
loope
dec
addr16
sub
ja
cmp
cmc
inc
inc
push
es
movsb
dec
cltd
and
pop
pop
cmp
popa
jbe
shll
xchg
insl
mov
test
cmp
xor
jns
mov
cmp
pop
sub
dec
dec
lret
or
loopne
mov
push
adc
aaa
aad
fcomps
addr16
aaa
nop
add
mov
fsubp
les
sbb
mov
push
mov
fwait
in
inc
mov
or
xchg
push
and
mov
jle
mov
and
in
testl
mov
inc
insb
inc
or
mov
and
cli
inc
js
pop
sbb
add
cwtl
mov
adc
pop
and
jne
mov
jle
jg
jb
dec
aas
xor
mov
mov
add
stos
stos
jg
inc
jl
push
sub
sub
dec
lcall
fs
les
lret
xchg
inc
inc
xchg
lea
inc
fcomps
xchg
and
jb
pop
mov
ficomps
rclb
iret
mov
adc
inc
mov
lret
popa
sbb
dec
lds
cli
out
das
mov
push
push
sub
lahf
sub
inc
ss
fcomp
jecxz
inc
cli
add
xor
mov
leave
push
or
pop
jmp
insb
or
and
sbb
lret
adc
add
out
aad
pop
test
adc
rcrb
imul
fistpl
std
fnstenv
ds
pop
ss
addr16
rcll
dec
mov
popa
sti
sti
add
push
jnp
add
scas
imul
add
xchg
cltd
das
stos
mov
mov
jmp
ffree
fcompp
es
mov
pop
mov
scas
int
push
hlt
mov
jo
enter
add
dec
in
xchg
pop
imul
jge
add
jmp
adc
loopne
stos
push
and
cmp
inc
popf
cmp
push
mov
fdivrp
xchg
mov
cmc
xchg
out
jge
sbb
mov
dec
xor
es
sarl
adc
adc
sbb
pop
stos
add
rorb
aam
lret
insb
sub
sbb
iret
adc
sbb
loop
ficomps
fdivrs
in
add
xor
mov
cmp
scas
jmp
mov
sbb
imul
int
lcall
inc
popf
aam
add
cmp
fnstcw
movsb
cmp
cmpsb
lds
or
xchg
sub
add
or
int3
fdivr
movsl
mov
or
lods
fdivs
int3
lcall
mov
jmp
rorb
adc
movsb
mov
cltd
xor
push
test
out
xor
ss
mov
test
xchg
dec
push
stos
pslld
jae
andl
int
movsl
sbb
sbb
jle
jns
mov
arpl
bound
pop
fwait
dec
cmpsl
mov
dec
loop
push
sti
std
call
das
mov
pusha
sti
xor
mov
fwait
dec
inc
cmpsl
mov
loope
je
mov
mov
pop
pop
out
adc
pop
popf
cmp
shlb
jae
les
shll
aad
sbb
jbe
push
adc
xor
pop
int3
mov
mov
jg
pop
push
insb
push
mov
push
adc
xor
loope
ja
mov
adc
fisubrs
test
stos
lods
lahf
cmc
pop
int
mov
mov
mov
shrb
mov
or
out
fmulp
enter
or
fbld
push
imull
cli
roll
mov
fwait
jbe
popf
dec
push
enter
jmp
push
rclb
xchg
sbb
iret
xchg
mov
mov
pushf
fwait
dec
cli
js
jns
jmp
test
inc
out
mov
pop
cmp
ret
sub
aam
mov
and
lcall
jecxz
dec
lahf
pushf
je
or
pusha
lcall
pushf
dec
dec
cmpsb
mov
cmpsb
pop
sub
mov
mov
jecxz
and
fildll
dec
cmp
xor
cmc
dec
cmp
mov
mov
push
mov
and
stc
sub
cmp
pop
xchg
idivb
mov
cltd
imul
fdivs
mov
push
fisubrs
sub
push
adc
mov
fcomps
inc
mov
sbb
jmp
adc
push
lcall
bound
pop
mov
sbb
loop
jmp
fidivrs
scas
aad
jns
test
test
push
or
dec
inc
in
mov
mov
stos
xor
adc
and
outsl
inc
lret
pop
popa
pop
in
mov
mov
int3
and
mov
dec
inc
inc
jmp
insb
icebp
mov
nop
test
and
arpl
imul
add
adcl
fcompp
xor
sub
dec
xor
imul
push
adc
dec
xchg
cmp
push
idivb
ja
arpl
nop
push
popf
imul
mov
jmp
pop
dec
outsl
pop
mov
ret
add
lock
loopne
dec
adc
ljmp
inc
mov
or
adc
push
aam
mov
lcall
dec
xor
push
aad
xor
lret
push
std
shrl
mov
loop
pop
dec
cmp
push
andl
push
rcll
mov
xchg
push
loope
dec
jmp
cmpsl
dec
jmp
sbb
sbbl
push
stos
push
gs
xlat
lods
pop
jbe
shr
adc
popf
scas
test
adc
push
aam
bound
push
sub
jo
cmpsl
out
xor
or
adc
cltd
xor
mov
pop
repz
je
mov
mov
cmpsl
test
cmc
jg
mov
jecxz
jle
xor
ja
push
ficomps
xchg
mov
or
push
ret
push
lods
pop
repz
mov
push
dec
fdivs
adc
mov
fs
sarl
dec
aas
test
jae
jo
adc
scas
fwait
imul
jo
adc
ret
scas
xchg
fbld
and
bound
fmuls
daa
leave
loope
jne
in
cmc
cwtl
xchg
loope
int3
jg
jns
out
stos
cld
xor
push
cs
mov
mov
xchg
push
movsb
mov
fidivs
jge
add
jo
adc
lcall
pop
outsl
or
push
lock
push
test
adc
dec
adc
jb
sub
jne
inc
dec
bound
xor
fs
aad
pusha
es
xor
ds
add
clc
aam
bound
jl
out
or
mov
cmpsw
pushf
lods
xor
push
cs
xchg
sbb
jo
daa
pushf
and
mov
sub
mov
es
xchg
xchg
dec
out
push
pop
push
sub
popf
arpl
mov
dec
sub
data16
mov
shrb
dec
cs
mov
push
dec
test
cld
lods
add
outsl
dec
dec
push
fs
xor
out
out
dec
pop
add
cli
add
or
pop
add
add
pop
mov
push
dec
inc
jno
mov
jae
adc
cmp
pop
lret
xchg
push
xchg
arpl
adc
aad
aas
mov
xchg
ljmp
add
lds
adc
pop
lds
adc
pop
ss
push
xchg
jmp
dec
int
lds
adc
nop
pop
lds
adc
gs
pop
adc
jae
mov
mov
pop
loope
jno
aaa
pop
lds
adc
pusha
lds
adc
aam
in
pop
lds
adc
cmpb
mov
add
xlat
pusha
lds
adc
notb
sub
and
cmp
insl
push
cmc
shl
cld
xorl
imul
xchg
jecxz
int3
pusha
lds
adc
dec
cmp
fwait
dec
imul
jmp
pop
adc
call
adc
mov
adc
fcmovnb
push
jb
int
loopne
dec
call
inc
add
adc
or
sarb
lds
mov
fcoml
jae
adc
scas
mov
xchg
cli
dec
cmovge
mov
dec
push
inc
cmp
xchg
push
insl
mov
and
adc
cmp
jbe
push
adc
and
test
cmc
push
test
xor
jno
mov
pextrw
inc
stos
mov
jg
fisttpll
push
mov
popa
lea
adc
je
adc
jmp
pop
mov
shlb
mov
add
es
mov
xor
mov
push
sub
adc
inc
jp
add
fidivs
sub
xor
test
add
pop
cmpb
out
mov
and
add
aad
sti
fldt
and
xor
add
lods
pop
mov
xchg
fdivrs
incl
adc
xchg
insl
cld
stos
push
fbstp
cmp
and
jo
adc
sub
mov
pop
lock
fidivrs
push
stos
cmp
pop
jecxz,pt
dec
lret
and
lds
shll
or
pop
adc
push
jecxz
dec
cltd
inc
das
push
mov
push
adc
in
fnsave
jo
adc
loopne
adcb
jno
pop
inc
js
sub
popf
cmp
xchg
jo
dec
popf
add
or
rcr
adcb
xor
jp
dec
movsl
inc
inc
shll
out
xor
jo
adc
loopne
adcb
jae
jo
adc
adcb
sub
mov
jae
jmp
adc
mov
push
adc
sbb
and
push
inc
cmp
cmpsl
lds
mov
mov
cmp
out
inc
fistps
and
adc
call
xor
fadds
insl
mov
pop
adc
test
jb
aad
push
inc
xorb
hlt
pop
dec
mov
pop
enter
push
xor
mov
lods
jmp
es
dec
cltd
popf
lock
add
jp
cmpsl
dec
les
je
adc
and
dec
cmpsl
sahf
mov
dec
xor
faddl
adc
add
xchg
push
jno
fucomp
dec
shlb
and
loope
lock
pop
adc
decl
movsb
cmp
ljmp
loopne
dec
mul
xchg
sub
aad
push
adc
xor
xchg
cmp
ljmp
mov
int
lret
jae
adc
js
rcl
and
mov
mov
test
int3
jle
adc
js
ja,pt
dec
popf
dec
jae
shrb
xchg
pop
mov
push
stos
push
lods
cmpsl
cmpsl
aam
push
adc
push
shll
pop
stc
mov
adc
push
or
frstpm(287
pop
imul
nop
xchg
sub
je
and
adc
mov
or
lret
push
cwtl
pop
lods
push
stos
mov
adc
arpl
xor
insb
sbb
dec
rorb
adc
dec
loope
mov
scas
inc
jmp
cmpsl
sbb
mov
movsl
xor
xchg
aaa
aam
je
jne
cltd
leave
mov
jle
fildll
inc
stc
clc
inc
pop
inc
push
xchg
or
and
sbb
sub
inc
aaa
scas
rolb
add
dec
test
leave
test
inc
nop
mov
push
dec
xchg
dec
xor
add
cmpsl
jmp
jl
add
mov
pop
lods
cmp
and
movsb
xchg
mov
mov
in
cmp
fisubrs
push
adc
xchg
lods
sarl
cld
pop
dec
or
xchg
divb
cmp
je
push
adc
out
popa
sbb
lds
loop
add
push
adc
and
loope
sbb
jnp
out
in
repnz
cmpsb
or
push
adc
sub
sub
test
out
or
outsl
push
or
lcall
add
add
push
popl
adcl
jmp
or
sbb
int3
cmp
inc
ljmp
loopne
es
push
dec
jnp
xor
vpaddusb
inc
aas
pop
arpl
test
fisubrl
xchg
mov
push
adc
inc
fnstcw
jecxz
repz
fdivp
std
fsubr
aad
mov
pop
push
jmp
ja
mov
cmpsl
dec
leave
scas
sbbb
jp
cltd
add
xor
imul
lahf
xor
adc
pop
mov
cmp
loop
push
scas
push
shrb
adc
push
cmpsl
loope
fimull
fdivr
pop
adc
test
xchg
mov
cmpsb
dec
jae
jo
adc
sub
rcl
lds
cld
adc
jle
inc
push
es
dec
cltd
popf
lock
mov
cmp
outsb
cli
cmpsl
dec
popf
rcrl
push
adc
jge
stc
pop
adc
lret
mov
gs
jo
adc
cmpsl
dec
ja
jo
adc
enter
aad
mov
sahf
lock
fwait
sub
cwtl
or
pop
cmp
enter
mov
fsubrp
pop
enter
int
xor
pop
xchg
mov
in
or
call
mov
adc
enter
in
popa
in
push
add
movsbl
sub
fstps
mov
pop
mov
mov
lods
pop
xor
pushf
test
xchg
pusha
dec
jnp
test
xchg
test
mov
inc
xlat
loope
xchg
inc
push
mov
lds
inc
mov
mov
push
adc
test
mov
or
aad
cmp
xor
xor
jno
adc
cmpsb
jecxz
orb
jne
cmpsl
xor
pop
out
jae
enter
adc
in
push
adc
and
das
pushf
mov
inc
pop
mov
les
cmc
inc
aad
cwtl
jno
adc
cmpsl
pushf
pop
mov
mov
jne
inc
dec
gs
orl
loop
cmpsb
dec
xor
aad
cmp
aad
mov
stos
mov
mov
stos
push
push
inc
enter
ret
mov
dec
sub
push
jo
mov
adc
leave
xlat
notb
cs
mov
xchg
mov
push
adc
pop
sub
or
les
inc
movsb
rcrl
push
movsl
loopne
popf
icebp
sub
aad
or
cmp
adc
aaa
aad
je
ja
into
fdivr
nop
icebp
push
scas
daa
fiaddl
sahf
xor
arpl
cmp
mov
adc
cmp
xlat
in
adcl
sbb
mov
jo
cmp
in
push
adc
or
or
je
cs
subb
sub
push
scas
into
mov
mov
mov
int3
subl
notb
in
xor
cmp
push
cmpsl
rorb
push
adc
movsl
daa
rorb
lods
stos
fisttpll
cld
mov
jno
adc
sahf
adc
jbe
imul
insb
sbb
fs
push
adc
ficompl
mov
sub
jb
push
add
dec
fbstp
jno
aad
enter
push
adc
push
mov
rcrb
bound
dec
aas
les
cwtl
and
mov
and
sub
movsl
bound
mov
int3
out
cmp
cmp
sbb
fsubl
jp
leave
lods
pushf
dec
vrcpss
cmpsl
outsb
rcrb
adc
mov
fsts
mov
xchg
mov
xchg
and
mov
pop
fmul
mov
jmp
pop
movsl
jmp
adc
jno
push
repnz
jbe
ds
lds
lds
cmp
mov
mov
fidivrl
imul
pop
loope
popa
xchg
fdivs
loop
pop
out
xor
jo
adc
push
aaa
out
int
xor
dec
popf
xchg
fstpl
cmp
in
push
adc
xchg
pop
mov
push
ret
mov
dec
push
xchg
faddl
shrl
ja,pt
leave
pop
xlat
or
and
das
pushf
xor
cmp
sbb
dec
popf
cmp
jmp
adc
mov
test
xor
jnp
hlt
adc
dec
sbb
int
and
stos
inc
gs
pop
mov
fwait
gs
jo
adc
movsb
add
adc
jno
dec
inc
inc
stos
adc
pop
jo
mov
cltd
cmp
out
cmpsb
dec
push
pop
or
push
push
dec
int
push
adc
mov
cmp
fnstcw
adc
sub
faddp
clc
fiaddl
scas
aam
fiaddl
add
gs
sub
rorl
out
repz
std
lock
add
gs
into
mov
std
das
xchg
fsubr
xor
jno
adc
es
mov
pop
nop
sub
push
out
addb
addl
sub
mov
pop
jnp
xchg
sub
push
nop
xor
les
jo
adc
daa
adc
adc
out
adc
xchg
ja
adc
adc
push
or
and
mov
fcompl
shl
mov
scas
testb
outsl
sti
test
adc
lds
fsubs
pop
rcr
jmp
adc
fiaddl
inc
lock
adc
hlt
out
fstps
aad
sbb
inc
jl
sbb
push
sub
adc
push
jbe
add
adc
pop
jo
xlat
pushl
mov
mov
sub
dec
popf
xchg
loop
lods
sqrtps
in
inc
scas
push
fsubr
push
pop
lcall
es
sarl
adc
adc
sbb
push
fucomp
in
stos
pop
push
adc
xchg
clc
lock
cmpsb
add
xor
jbe
std
enter
cs
gs
cmp
fisubrl
in
popa
mov
aas
push
ss
mov
lods
jno
je
adc
call
xor
cmp
mov
ret
lret
lods
jp
popa
ficoms
pop
and
mov
cli
bound
rep
imul
xchg
enter
xlat
shrb
mov
cmp
outsb
pop
fists
lods
repz
xor
in
push
aad
xchg
pcmpgtw
push
sbb
ficoml
sub
push
jo
mov
jle
sarl
add
inc
inc
inc
int
push
cmp
pop
push
enter
adc
pop
xchg
sbb
call
mov
movsb
pop
and
mov
xchg
push
out
pusha
sub
push
mov
fsubr
pop
pop
mov
add
mov
dec
and
xor
xor
imul
int3
sbb
imul
test
push
sub
in
jecxz
aas
repnz
inc
xchg
dec
jl
dec
sub
add
sub
cmpl
jbe
cmc
lret
mov
hlt
stc
shrb
rcr
sbb
pop
xor
and
and
or
jl
xchg
lahf
adc
std
sbb
push
xchg
and
pop
std
push
lods
stos
jle
xor
pop
inc
adc
std
pop
imul
sbb
test
or
add
in
scas
cwtl
in
cwtl
sub
outsb
dec
sbb
std
push
sub
push
jle
movsl
adc
xchg
data16
js
xor
inc
or
ret
lods
push
cmpsb
and
cmc
mov
out
addb
mov
je
adc
insb
xorb
lret
scas
pop
mov
mov
and
mov
popf
adc
call
adc
fsubp
mov
int
xor
ljmp
jb
mov
push
adc
inc
inc
das
cmp
inc
fistpll
out
push
decl
out
mov
mov
les
sbb
jg
stc
push
push
enter
lcall
vpsubsw
insl
dec
pop
or
out
xor
jno
adc
rolb
pop
mov
lahf
or
pop
xor
sub
popf
outsl
jbe
daa
add
stos
and
or
xor
movsb
call
lods
pop
xor
lret
sub
mov
andl
pop
gs
int3
out
xor
sbb
pop
adc
sar
push
js
or
adc
xor
adc
dec
xlat
leave
xchg
sub
je
cld
jo
adc
inc
sbb
push
sar
xchg
inc
fistpll
mov
ja
jb
mov
popf
cmpsb
aad
mov
or
mov
inc
lcall
mov
sahf
ljmp
shll
addr16
inc
mov
xchg
fcoml
push
cmpsl
or
pop
push
adc
imul
sub
lock
jo
cmp
jmp
test
cmp
sbb
mov
xchg
repnz
sub
mov
int
inc
addr16
pop
push
xor
adc
mov
into
mov
stos
push
arpl
or
inc
pop
push
xchg
sub
movsb
add
adc
je
sbbb
jg
push
ret
cld
xchg
push
adc
adcb
sub
je
out
push
cmp
lods
prefetch
or
push
frstor
xor
and
ljmp
and
test
cltd
data16
mov
enter
add
arpl
lahf
lahf
cmp
sbb
jns
stos
sub
fsub
rcrb
fsubl
cmp
mov
jno
ja
fsubrl
mov
mov
pop
mull
inc
adc
nop
das
push
mov
imul
popf
scas
inc
dec
fwait
cmp
jae
adc
xchg
cli
xchg
ret
pop
xorb
jb
lds
testb
mov
pop
mov
ja
mov
imul
push
test
clc
pusha
jl
adc
sets
adc
inc
inc
jo
sub
fucomip
inc
addb
or
std
cmp
xchg
mov
dec
movl
dec
movl
popf
mov
mov
xchg
mov
sub
xchg
mov
adc
inc
lret
repnz
pop
clc
ds
sub
sub
das
pop
xlat
mov
adc
inc
or
sbb
mov
push
or
rcrb
fcompl
adc
adc
xor
fnstenv
xchg
not
stc
jmp
jae
adc
sti
int
rorb
and
add
sbb
btr
pop
dec
fwait
adc
xchg
mov
into
js
and
imul
cli
call
dec
sbb
push
xchg
fdivr
pop
adc
push
std
jmp
iret
aam
and
das
push
jge
push
pop
dec
adcl
inc
push
push
mov
rcll
sbb
clc
mov
jne
dec
pop
or
ror
cld
jo
adc
outsb
jge
daa
into
or
and
add
and
fwait
insb
mov
sbbl
push
stos
push
daa
adc
mov
xor
js
jge
pop
push
adc
orl
lock
in
nop
xorb
insl
push
into
xchg
movsl
cmp
mov
faddl
adc
aad
push
mov
sarl
xchg
sub
pushf
mov
sbbb
dec
or
pop
std
cmp
insb
mov
pop
adc
dec
jmp
adc
jmp
mov
outsb
scas
dec
les
adc
jmp
dec
les
adc
dec
popf
cmp
add
int
or
push
cmpsb
dec
imul
fucom
popf
cmp
lcall
mov
test
push
lods
rol
push
je
pop
adc
das
pop
mov
add
inc
leave
mov
and
xor
dec
lcall
sbb
sbb
pop
adc
jo
js
mov
faddl
adc
adc
out
scas
pop
mov
or
cmpsl
les
in
pop
adc
jo
stos
std
add
mov
adc
fs
jmp
faddl
adc
sbb
pop
adc
lds
adc
adc
dec
popf
dec
push
pop
xchg
mov
and
add
aad
sti
mov
inc
das
dec
xchg
sub
inc
jmp
ja
sub
mov
mov
fs
jmp
mov
imulb
xor
sub
jmp
cwtl
mov
lret
or
aad
inc
push
and
gs
pop
mov
cmp
sub
jg
inc
push
into
add
daa
pop
pop
fs
pop
gs
pop
mov
xchg
xor
rclb
ljmp
xor
xor
pushf
fcomps
lods
sub
cmp
int3
add
dec
push
lds
adc
add
pop
fistpl
pop
adc
lods
pop
lds
adc
popf
xchg
in
lcall
add
rcl
jg
push
lret
or
les
and
adc
lds
adc
mulb
pop
adc
push
shl
imul
cmp
pop
sbb
andb
lods
push
and
mov
sbb
cmc
add
insb
dec
xchg
or
dec
fxch
cvtps2pd
sbb
or
ds
mov
mov
or
sbb
or
frstor
push
sub
icebp
imul
inc
test
cwtl
test
push
sbb
jl
mov
pushf
andb
inc
stos
push
movsb
imul
add
pop
adc
test
ds
cmp
rclb
sbb
jbe
fs
push
imul
or
icebp
dec
add
adc
aaa
adc
push
pop
or
dec
movsb
out
push
cmp
dec
pop
or
rol
cld
jo
adc
js
or
jge
enter
push
adc
jp
or
out
cmpsb
testl
adc
iret
les
adc
enter
aaa
insl
dec
cmp
stos
dec
fiadds
lea
stos
jle
jge
dec
pop
or
and
and
jno
adc
mov
add
pop
adc
adc
ljmp
push
or
rcr
cmp
cwtl
xchg
jle
in
int3
imul
jg
xor
hlt
cmp
jecxz
stc
les
mov
dec
shll
pusha
cli
sub
str
mov
gs
or
insl
cwtl
jno
in
mov
push
add
pop
cmp
cmp
jle
mov
clc
outsl
fst
xor
icebp
mov
mov
je
pop
movsb
faddl
mov
cmpsb
and
xor
push
sub
fwait
pop
pop
cmp
in
inc
or
adc
sbb
push
call
popf
cmp
pop
mov
out
xlat
movsb
sbb
ljmp
dec
cltd
popf
lret
mov
cmp
mov
pop
mov
je
stos
mov
jmp
push
cmpsb
cmp
sub
fucomp
popf
cmp
sbb
sbb
push
adc
mov
inc
xlat
sub
xor
mov
jbe
dec
popf
inc
repz
ss
adc
or
repnz
pop
adc
jg
insb
mov
adc
js
adc
adc
or
xor
popf
mov
inc
mov
add
adc
insl
sub
sub
pop
and
in
add
nop
pop
sub
loope
repz
in
shll
xchg
in
in
mov
pop
adc
cwtl
inc
or
lcall
mov
pop
adc
js
mov
mov
fstps
mov
xor
lret
sub
push
ljmp
push
fidivs
lahf
cmc
and
or
and
cltd
clc
push
pop
or
adc
cmp
dec
pop
or
subl
push
mov
cltd
xor
cmpsl
movsb
add
adc
add
leave
ss
icebp
ljmp
pop
ud1
loopne
les
or
dec
push
mov
enter
mov
push
or
push
sbbl
mov
mov
mov
fcompl
mov
fwait
dec
call
xor
push
test
mov
imul
ljmp
enter
inc
adcl
dec
cmp
fmul
adc
and
in
xchg
or
mov
rorb
std
push
push
test
inc
pushf
mov
mov
rcr
adc
test
aam
imul
fcomps
jmp
jecxz
pop
shlb
cmp
lret
jbe
and
and
pop
out
cmp
decb
in
testl
jno
out
lods
dec
or
scas
cli
dec
jo,pt
sahf
int3
sbb
and
xchg
aad
mov
cmc
mov
push
and
and
shll
out
out
xchg
test
jns
stos
adc
or
xor
ficoml
in
arpl
aas
add
and
jbe
test
xor
stos
test
movsl
mov
xchg
je
cltd
into
popa
push
xchg
mov
xchg
add
stos
test
mov
andl
adc
add
scas
jo
mov
sarl
or
add
xchg
ljmp
insb
xchg
outsl
mov
xor
pop
insb
pop
dec
addr16
pop
sub
lcall
pop
mov
daa
and
or
cwtl
movsl
pop
mov
sub
mov
inc
out
mov
cmpsb
pop
shll
ret
mov
pop
fstpl
cmp
mov
jecxz
or
addr16
fcoml
stos
jns
push
inc
xor
and
add
sbb
rorb
xchg
ret
xchg
negb
cmpsb
mov
int
imul
popa
jle
cld
call
xchg
testb
sbb
lahf
add
hlt
call
movsl
mov
push
das
nop
and
push
xor
out
jmp
jae
pop
sarl
inc
sbb
lea
and
push
xchg
mov
scas
out
cmp
sub
mov
push
jp
decb
adc
imul
test
pop
push
adc
mov
push
std
or
in
cmp
mov
test
push
lcall
dec
and
frstor
xchg
mov
inc
mov
push
sub
cmp
xor
xchg
mov
mov
mov
leave
adc
pop
mov
fucomp
ret
push
adc
push
adc
shl
gs
stos
shrl
adc
gs
rclb
pusha
pop
jmp
mov
lods
or
stos
push
mul
or
pop
mov
popf
cmp
test
jne
ja
stos
inc
push
ja
cmpsl
push
sub
test
loopne
push
adc
mov
mov
inc
dec
dec
jne
mov
daa
jno
dec
nop
fsub
cmpsb
inc
mov
cwtl
xor
pop
out
cmp
mov
or
push
sti
sahf
sub
imul
sarb
loopne
mov
mov
pop
cmp
ja
and
cs
std
add
xchg
push
imul
jmp
push
fstps
push
adc
insl
mov
sub
xchg
repz
jno
int
cmc
cmp
loope
inc
rorl
roll
inc
ficoms
jo
adc
mov
xchg
mov
loope
jl
cmpsl
movsb
add
adc
nop
je
push
adc
adc
pushf
data16
cltd
dec
cmpb
mov
mov
sub
lock
ja
je
into
adc
roll
mov
mov
sbbb
inc
or
sub
lds
cmp
pop
std
outsl
adc
push
cmc
add
hlt
pop
cmc
inc
lods
xor
cltd
cwtl
lahf
les
test
es
popf
data16
push
xor
jmp
push
inc
shl
adc
clc
roll
or
daa
push
xor
gs
xchg
shl
repnz
sub
mov
mov
and
lea
dec
jp
adc
xor
push
loope
xchg
sbbl
fisttpll
push
cmpsb
adc
aas
cwtl
lock
adc
pusha
in
lcall
mov
int
inc
mov
push
add
xor
cmc
lds
scas
rorb
jbe
dec
adc
je
stos
add
fs
push
adc
inc
or
pusha
lret
pop
xor
cmp
pop
filds
bswap
out
inc
xor
mov
sbb
adc
mov
cmpb
push
adc
inc
fstl
or
mov
sti
pause
and
shl
test
adc
push
adc
push
adc
fxch
sarl
imul
scas
push
cmc
jmp
pop
enter
xchg
scas
mov
push
adc
sti
stos
jg
inc
jl
push
dec
and
cmp
add
adc
xchg
nop
das
les
cwtl
sub
sbb
adc
dec
sbb
inc
sub
push
fisttps
fstpt
out
push
adc
sub
mov
mov
dec
and
ss
mov
push
adc
xchg
enter
test
mov
sub
jle
add
push
or
push
adc
push
pop
inc
cli
adc
outsl
xor
scas
ret
repnz
cmp
jb
adc
cld
out
cmc
mov
xchg
sub
adc
push
adc
cmp
inc
ja
mov
jb
adc
push
cmc
adc
mov
lods
inc
push
repnz
xor
sbb
cmc
pop
cmc
stos
popf
sub
cli
stos
push
mov
in
jg
popa
rclb
insl
nop
stos
aad
xor
sbb
jae
mov
repnz
jns
adc
sub
pop
push
adc
lock
lods
pop
loopne
dec
jp
adc
push
scas
test
xchg
test
dec
scas
xchg
filds
cmp
lods
xchg
movsb
pop
mov
lds
pop
cwtl
xor
loopne
out
movsb
orb
and
pop
sbb
lcall
push
out
lahf
and
les
ja
icebp
cs
sti
cmpsb
jecxz
inc
int3
cmp
in
lods
and
pop
ret
sbb
test
loopne
outsb
cmp
ficompl
scas
xor
sub
call
dec
iret
adc
add
dec
inc
test
dec
in
and
das
pushf
mov
out
shl
inc
rolb
ja
insl
sbb
movsb
inc
ret
dec
in
mov
mov
jl
jmp
inc
push
add
mov
inc
mov
xchg
outsl
or
jmp
loopne
sub
xor
mov
sub
in
pop
flds
mov
pop
imul
adc
rcrl
sub
xchg
fimuls
pop
mov
and
fistps
popfw
pusha
sbb
les
enter
push
and
or
imul
sub
sarb
adc
arpl
mov
xor
xor
es
jp
orl
jb
xor
xchg
mov
je,pt
out
push
mov
mov
push
sti
popa
add
out
mov
adc
push
sahf
pop
daa
test
mov
push
mov
push
jle
inc
add
dec
jae
lods
jge
mov
into
sbb
xchg
mov
mov
aad
jmp
pop
mov
add
fs
test
and
xchg
fisttpll
mov
pop
cmp
rorb
jl
pop
add
daa
mov
mov
inc
jl
jmp
loope
sbb
jmp
into
loopne
and
dec
add
mov
dec
pop
inc
bound
mov
rcrb
mov
add
dec
loopne
xchg
jnp
movsl
out
aas
adc
jmp
mov
negb
sub
iret
test
cmpsl
pop
mov
roll
in
and
xchg
je
ret
sbb
jo
rol
dec
pop
fldt
pop
icebp
rcll
stc
xchg
imul
inc
jecxz
ss
and
test
xor
cmc
dec
aas
xchg
mov
aaa
aas
inc
and
sub
push
xor
outsl
fbstp
stc
push
xor
iret
loop
mov
mov
cmc
add
push
adc
mov
arpl
cmp
fsts
test
rorb
aad
jbe
insb
and
mov
in
rolb
cmpsb
andl
lea
jmp
fwait
cmpsl
les
mov
adc
rcl
stos
cmpsb
daa
mov
or
pop
in
out
stos
stos
fdivrp
mov
icebp
push
out
jge
mov
repnz
xchg
dec
outsb
mov
xchg
cmp
xor
or
xlat
xchg
and
mov
mov
in
imul
subb
xchg
mov
icebp
lret
jae
cmp
mov
scas
divb
xor
sbb
frstor
push
or
in
stos
mov
scas
roll
lret
mov
dec
movsl
add
ret
shlb
add
das
std
daa
sub
push
idivl
popf
imul
out
cli
movsb
orb
push
mov
jne
inc
push
sbb
sub
imul
adc
ds
jb
pop
leave
sbb
lods
xor
add
pop
mov
push
sub
xor
ds
imul
mov
bound
sbb
jl
insb
adc
int
lods
mov
pop
mov
inc
jb
ljmp
sbb
mov
aad
stos
push
mov
and
sub
adc
add
lods
inc
add
std
into
push
test
leave
sub
mov
mov
dec
xlat
xor
jmp
mov
stos
push
test
mov
pop
arpl
lods
xor
add
shll
inc
leave
loope
cmc
ljmp
pop
push
cmp
adc
or
add
jae
ljmp
push
or
mov
cmovne
push
lods
pop
call
sub
jg
push
dec
xor
fisubrs
in
cli
pop
jge
push
inc
dec
mov
mov
fildl
add
push
lock
mov
ljmp
cmpsb
dec
loope
fwait
lahf
xor
pop
imul
aad
xor
stos
push
in
movsb
leave
lcall
outsb
dec
jp
aad
dec
popf
inc
dec
dec
js
mov
popa
push
pop
and
xor
test
inc
roll
jp
rcll
jnp
ljmp
in
mov
sti
rorl
sarl
lods
adc
sbb
pop
sahf
in
push
stos
push
cmpsb
in
cmp
sahf
xor
mull
add
movsl
pop
cmp
add
shl
adc
mov
cmp
push
fucom
sub
out
mov
out
popfw
add
push
stos
ficoms
jmp
jge
xor
fnsave
and
pop
cmp
sbbb
mov
loop
inc
imul
dec
into
push
jl
orb
or
adc
movsl
mov
pushf
sahf
mov
lds
push
inc
xlat
cmpsl
cmp
xor
xlat
jle
or
stos
sahf
outsl
push
mov
xchg
pop
push
adc
aam
mov
xchg
fildl
cmp
xor
mov
push
sub
stos
pop
jbe
xor
pop
cmp
ja
daa
mov
fldenv
or
cmpsl
popf
inc
cmp
movsb
dec
jmp
push
push
mov
ret
lea
popf
loop
dec
jg
shlb
insl
or
sub
nop
sbb
jb
sbb
lea
lahf
push
sbb
fbld
lock
jbe
in
push
pop
mov
ret
cli
insl
inc
mov
jge
cli
mov
add
cld
notl
dec
lds
cmp
fisttpll
lret
jecxz
imul
clc
dec
test
outsl
decl
xorb
idivb
push
push
add
pop
pop
in
rolb
pop
movsl
jg
mov
daa
mov
lea
sbb
cmp
imul
pop
xlat
outsl
fwait
lea
inc
ficompl
and
mov
pop
je
dec
xchg
lods
test
pop
mov
ret
in
imul
pop
push
adc
sub
pop
and
in
bound
xor
fs
stos
inc
jno
ja
rorb
into
pop
mov
adc
fimull
into
adc
push
sbb
sub
ret
pusha
stos
and
push
adc
push
cltd
outsl
frstor
pop
add
scas
adc
push
hlt
jno
inc
and
pop
push
adc
xor
inc
mov
insl
fsts
mov
sbb
jns
adc
jbe
ljmp
fwait
pop
jo
idiv
mov
mov
pop
adc
out
gs
imul
ret
fdivs
and
dec
sahf
daa
xchg
lds
inc
test
xlat
cs
and
mov
cltd
mov
and
fwait
fwait
bound
and
pusha
mov
mov
xchg
cmpsl
push
stc
rcrb
inc
and
mov
pop
push
cmp
jae
jno
ret
cmpsl
adc
cltd
xor
cmc
xor
cs
push
out
add
add
mov
aaa
cmpsb
xchg
ret
inc
jnp
lcall
jl
jp
movsl
je
fmulp
mov
jb
mov
xchg
fisubrs
jmp
aad
jno
xor
mov
fsubrp
cmp
cltd
dec
neg
cmp
mov
test
push
add
push
dec
push
inc
sbb
push
sar
push
pop
cmp
dec
popf
testb
pop
andb
push
out
jl
and
std
mov
shl
push
mov
pop
jp
mov
dec
insl
dec
in
aad
sti
mov
dec
pop
insb
xor
inc
mov
cmpsl
fwait
les
adc
inc
jno
cmc
push
test
iret
adc
push
mov
dec
int3
jp
xchg
xor
lret
sbb
push
dec
mov
pop
or
mov
and
adc
jmp
or
andl
sti
pop
das
cltd
mov
arpl
movsb
mov
or
shll
sbb
aaa
lea
test
inc
pop
imul
mov
inc
aam
pop
pop
in
ja
cltd
mov
push
fwait
push
lods
or
cltd
mov
fldcw
jmp
mov
insl
xor
xchg
fsts
adc
adc
xorl
dec
jmp
push
aad
leave
mov
and
enter
std
add
xchg
jb
out
jg
fistpl
xchg
arpl
aam
dec
or
add
stos
mov
xchg
call
test
cmc
bound
outsb
push
mov
scas
fwait
nop
inc
mov
dec
js
sbb
sbb
pop
jo
fsubl
movb
inc
dec
movl
shll
mov
push
adc
cmp
push
sub
cltd
adc
out
rcll
adc
add
sub
iret
lret
in
test
fcomps
push
mov
dec
je
dec
sub
mov
iret
xor
add
mov
insb
cs
movsb
pop
stos
inc
sub
sbb
or
or
sbb
push
mov
and
dec
pushf
dec
mov
inc
jb
out
jae
loop
fdivl
sbb
leave
in
push
in
sub
movsl
dec
sbb
popa
shrl
sbb
or
sub
lea
daa
sbb
gs
data16
xchg
add
mov
ret
and
jmp
test
nop
daa
cmp
loop
int
and
lcall
add
push
adc
test
jne
loope
and
arpl
loopne
outsb
xor
xchg
lret
fbstp
in
out
ret
mov
lea
loopne
sub
mov
test
out
scas
lods
and
gs
xchg
or
rcl
decb
mov
stos
repz
push
sbb
lods
push
mov
lahf
movsb
lea
cmp
and
lret
cmpsb
jbe
loope
cmpsl
cwtl
sbb
imul
hlt
fdivrp
pop
fstl
lret
mov
push
add
push
adc
cmp
lds
xchg
lods
sub
in
jg
mov
imull
mov
jle
adc
mov
ret
aad
jbe
jmp
push
sub
push
push
lods
jnp
push
daa
pop
lock
adc
mov
dec
adc
stc
mov
lock
adc
sub
fdivrs
xor
push
lret
retw
imul
push
imul
mov
and
xchg
pusha
dec
pop
inc
test
xor
addr16
adc
fdivl
xor
sahf
lcall
mov
ljmp
ljmp
mov
or
xor
lock
adc
inc
aad
les
push
cwtl
pop
inc
inc
fildll
out
adc
mov
cld
mov
aad
fidivrs
fsubr
mov
shrb
sub
test
push
push
enter
mov
add
mov
std
xor
push
in
xchg
mov
xor
iret
pushf
ljmp
iret
add
out
aad
out
mov
mov
in
jb
pop
fsubr
mov
push
add
and
addr16
shll
mov
xor
sub
lods
pop
mov
jb
xchg
aam
mov
and
jge
sbb
fimull
mov
inc
test
bound
loope
out
add
je
dec
and
adc
test
sub
outsl
dec
int
dec
fisttpl
and
insb
xchg
shll
dec
lret
bound
rcrb
pop
aad
xchg
push
push
lds
int
push
sub
xor
pop
sub
pop
stos
sbb
cmpsb
loope
lea
dec
xlat
loope
andb
or
xchg
insl
fmuls
inc
jl
das
es
mov
jo
es
mov
popf
addr16
jecxz
sub
das
mov
or
rcr
push
cmp
ret
in
xchg
adc
lds
or
inc
dec
add
aad
int
rcrb
imul
push
mov
inc
mov
and
sbbl
aad
cmpsb
lods
daa
mov
mov
mov
lods
push
testl
xlat
lahf
cmp
fbstp
mov
mov
and
lret
jg
jae
adc
cmp
push
and
jbe
movb
inc
inc
and
adc
xchg
aad
shl
movb
cmp
mov
push
ja
pop
lods
push
stos
pop
jl
ret
pushf
mov
pop
push
adc
call
cmp
dec
mov
out
dec
mull
xor
pushf
and
leave
or
add
mov
movsl
push
pop
std
mov
inc
cmpsb
mov
iret
fprem
or
and
ja
xchg
push
xor
imul
jbe
rcrl
xchg
sbb
frstor
xchg
jmp
jle
lods
in
sbb
or
aaa
daa
outsl
sub
imul
and
imul
jno
hlt
notl
imul
pop
push
push
out
cwtl
and
fmull
mov
notb
rcrl
cld
cltd
add
push
adc
in
shlb
mov
popa
addl
lods
fbstp
in
xor
sub
es
loope
sub
aas
aaa
xor
and
push
push
fucomi
imulb
stc
jmp
mov
xchg
testl
push
adc
test
roll
test
lock
adc
je
loop
std
das
lds
mov
out
xor
push
xor
test
xor
cmp
add
mov
bnd
bound
inc
and
lods
jb
xor
adc
pushw
push
mov
addr16
mov
push
adc
fs
cmp
xchg
push
repz
push
adc
in
xlat
mov
inc
or
lods
sub
insl
adc
sbb
push
adc
loope
mov
aad
subb
fidivrs
mov
mov
stos
push
ja
and
push
dec
pop
outsb
popa
jge
inc
test
sar
pop
mov
ret
call
jg
mov
scas
mov
adc
inc
push
repz
sti
fndisi(8087
test
lret
lods
pop
mov
dec
int
dec
fbld
mov
push
sub
sbb
cmpsb
sbb
in
xchg
adc
push
adc
sub
imul
dec
stos
sbb
mov
mov
xlat
loope
andb
je
dec
xchg
insl
fsts
sub
push
adc
add
ljmp
mov
pop
jecxz
imul
inc
lret
outsb
mov
cmpsb
xor
adc
push
adc
inc
jg
or
xor
sub
sbb
cmpsb
sbb
in
xchg
adc
lods
hlt
xchg
push
adc
jae
cmp
and
out
and
xor
adc
push
adc
inc
jg
or
xor
sub
in
or
jae
je
push
adc
xor
sbb
mov
outsl
ret
hlt
xchg
push
adc
subb
sub
pop
dec
dec
into
out
and
rolb
stc
ljmp
inc
in
xchg
ret
cmpsl
fnstenv
inc
mov
jp
fisubrs
xchg
add
push
adc
jae
fcomp
jae
sub
movntq
adc
fdivrl
movsl
sub
pop
pop
int
inc
xlat
lds
jmp
mov
loope
xchg
clc
js
jp
cwtl
addr16
adc
pop
mov
mov
je
je
popa
lods
out
cmp
add
fsubr
push
stos
add
mov
mov
leave
arpl
mov
fcompl
cmp
or
cld
push
cmp
cmp
fs
call
push
mov
pop
mov
nop
popa
inc
stos
sbb
outsl
shrl
push
and
loopne
lahf
mov
push
outsb
outsb
dec
or
and
add
stos
adc
sahf
jns
incl
push
push
test
or
lcall
gs
popl
push
jno
icebp
push
adc
stos
scas
loope
pop
mov
mov
mov
mov
jecxz
xchg
in
or
or
in
pushf
loop
mov
aas
add
cmc
fst
shlb
lea
jnp
lret
in
xor
fucomip
lea
jg
xchg
insl
lret
cltd
int
jl
and
inc
xchg
flds
jnp
addr16
lret
and
bound
daa
xchg
cmpsb
pop
add
add
sbb
push
adc
loop
push
adc
push
adc
rcrb
mov
sahf
sbb
mov
lcall
pop
xchg
xor
jo
cmp
jae
adc
adc
in
aad
aas
outsl
push
stc
stos
imul
sbb
inc
add
adc
jp
adc
xchg
rcrb
insb
xchg
mov
mov
fisubrs
or
cmp
lcall
and
push
imull
stc
fbld
rorl
mov
lret
sub
insl
fisubs
out
adc
jp
adc
lods
in
xor
mov
cmp
adc
jno
xchg
adc
std
xor
jbe
cmp
shr
pop
xor
pop
cmpsl
jno
iret
fs
jp
push
or
cli
test
add
mov
mov
jge
adc
jae
adc
mov
dec
mov
repz
pop
sbb
iret
stc
fwait
daa
movl
push
daa
push
xor
in
hlt
lcall
out
xchg
je
dec
dec
jp
adc
mov
outsb
popf
gs
movsb
mov
je
rcl
jg
add
fmulp
shl
and
jp
jne
pop
push
adc
lds
cli
cmp
hlt
push
in
hlt
and
inc
pop
sahf
fistpl
lock
pop
mov
add
loopne
xchg
mov
cs
shr
pusha
popf
jle
or
stc
mov
cmpsb
dec
in
xorb
sub
xchg
in
add
push
incl
fcmovne
daa
outsb
cmc
ljmp
das
xchg
xor
push
sub
adc
pusha
xor
mov
out
push
fidivl
and
imul
cmpsl
sbb
xchg
sbb
dec
stc
mov
shl
outsb
inc
movsl
push
adc
jmp
or
out
addl
aad
push
cmp
leave
adc
mov
adc
sbb
mov
or
xor
adc
loop
sahf
int3
loopne
and
addr16
pushf
mov
popf
inc
out
sbb
mov
pop
sub
push
pop
cmp
leave
adc
mov
fistpl
cmp
insb
mov
adc
lods
pop
mov
xchg
push
imull
daa
adc
jmp
les
or
movb
sub
cmp
out
cmp
repnz
pop
cmp
je
inc
cmpsl
cmp
call
jp
sahf
push
pop
push
scas
push
pop
inc
fstpl
shl
xor
cmp
or
xor
orl
out
mov
lcall
jmp
ja
push
mov
in
mov
and
jp
cwtl
fs
push
and
xchg
lock
mov
popf
cmp
les
jecxz
sub
fucomp
imul
inc
cmp
xchg
push
pop
add
lcall
and
imul
adc
pop
dec
cs
outsb
fwait
sbb
push
and
leave
adc
insb
shr
gs
iret
sbb
sbb
adcl
out
scas
in
test
rcrb
add
ficoml
and
negb
cmp
push
or
xor
dec
sahf
add
sub
pop
sbb
mov
xchg
mov
jne
cwtl
int
dec
cmp
push
pop
mov
mov
inc
les
pop
scas
rcr
pop
mov
daa
lahf
test
jae
xchg
or
xchg
or
sbb
test
icebp
push
lret
xor
mov
pop
xlat
int
loop
inc
test
or
push
sub
les
sub
pop
icebp
cmpsb
jge
sbb
cld
cli
ds
and
dec
mov
mov
loope
mov
cmp
adc
xor
outsl
fmull
sbb
or
scas
add
pushf
jge
rol
in
scas
test
sahf
or
sbb
mov
cmp
mov
enter
dec
lds
mov
push
xor
out
test
fs
add
pop
outsb
pushf
aas
or
insl
movsb
loope
fnstenv
add
mov
jae
shrl
stc
and
and
push
lods
mov
ljmp
cmp
mov
mov
mov
pop
adc
popf
fwait
call
jo
cwtl
sub
mov
testl
fwait
das
in
sub
outsl
scas
shrb
lods
test
daa
adc
push
sub
outsl
stos
push
test
mov
and
dec
sbb
imul
test
inc
jl
pop
add
adc
pop
rorb
sbb
add
ror
sahf
dec
testb
movsl
subl
aad
and
stos
mov
mov
mov
shrb
mov
loop
out
fmulp
lret
outsb
shrl
test
xorl
es
jmp
lahf
push
push
ja
movsb
mov
test
outsb
pushf
daa
push
stos
push
lods
nop
jo
stos
pop
push
adc
mov
mov
inc
sbb
cmp
leave
ret
push
sahf
cmp
sub
test
mov
dec
out
inc
dec
popf
cmp
push
movsb
xor
sahf
and
cmc
push
inc
loop
out
sub
dec
cmp
jmp
xor
ja
adc
sbb
das
inc
xor
mov
imul
xor
cmp
aad
outsb
scas
mov
ljmp
fldenv
xlat
flds
out
mov
and
pop
jns
std
mov
xchg
pop
popa
pop
gs
inc
mov
mov
je
out
and
mov
push
dec
dec
fsubl
scas
push
and
inc
lds
xor
mov
jno
mov
mov
insb
dec
loope
imul
arpl
je
mov
icebp
iret
into
pop
inc
ret
test
imulb
sub
mov
cmpsl
pop
cmp
sbb
inc
test
pop
cmc
inc
jbe
out
mov
lcall
jmp
xorl
add
jno
aam
sub
test
sub
push
cmp
loopne
jo
mov
mov
ja
cmp
dec
repnz
sub
in
mov
push
lods
mov
nop
addl
push
adc
out
xor
shlb
movsb
shl
outsb
negb
pop
pop
movsb
aad
mov
mov
les
push
sub
mov
jp
xchg
sub
test
mov
mov
jne
rcl
cmc
popl
lret
lret
jmp
adc
cmc
fprem1
fsub
loope
inc
ror
imul
dec
ljmp
test
fcmovbe
mov
setne
je
jmp
or
icebp
push
adc
jo
jbe
sbb
pop
adc
push
adc
repnz
dec
rcl
in
shlb
mov
outsl
xchg
icebp
sbb
cwtl
and
push
int
and
adc
cmp
in
and
cmp
into
cmp
pop
jp
nop
stos
sbb
loopne
ja
adc
adc
jl
jbe
loope
out
int3
xchg
rcrb
inc
cltd
test
cmp
out
xchg
enter
xchg
mov
popf
mov
loope
je
mov
mov
addl
jns
adc
mov
ds
test
mov
pop
mov
and
popa
cmpsb
fdivl
push
addb
outsl
cmp
mov
adc
repnz
jp
cmpsb
inc
add
shll
adc
mov
loop
cwtl
scas
je
mov
and
out
mov
in
cmpsl
dec
mov
and
jle
leave
jns
lahf
mov
sti
xchg
cltd
pusha
icebp
lret
ret
in
and
rcr
in
out
mov
push
adc
shrl
aam
pop
dec
xorl
mov
inc
jae
mov
push
push
stos
pop
cmp
jnp
mov
roll
movsb
shll
aad
xchg
loopne
sub
mov
sub
mov
cmpsb
vpperm
add
mov
je
out
lahf
jne
addps
mov
fcomp
mov
loope
or
ret
test
inc
sahf
lea
cs
data16
cmp
cs
cmp
mov
loopne
inc
pop
andb
pop
stc
jmp
adc
fsubrp
pop
push
sub
in
cmp
daa
addr16
lods
jge
add
jl
jg
or
adc
gs
mov
cwtl
adc
cmp
ret
push
pop
dec
xor
cmp
repnz
jp
cli
push
daa
sbb
jecxz
out
xor
inc
imul
dec
fsubrp
jle
dec
jp
adc
push
push
dec
in
mov
push
xor
xor
movsb
cmp
cmp
cmp
sbb
aam
es
pop
push
adc
mov
lods
pop
xor
rorl
fwait
in
inc
lods
pcmpgtw
sub
stos
push
fucomp
add
push
dec
dec
imul
sub
jmp
arpl
mov
push
iret
lret
add
sub
cmp
cmp
std
mov
add
add
push
incl
push
sarl
bound
loop
pop
mov
out
adc
jmp
and
notb
leave
inc
test
dec
pop
lds
add
jne
cmpsl
outsb
mov
add
loopne
daa
adc
out
mov
sub
and
out
popa
mov
addr16
aad
out
repz
xchg
mov
mov
pop
push
jns
pop
xor
jns
call
outsl
pop
sub
mov
cmpsb
cmpsl
les
inc
and
sti
cmp
in
ficomps
dec
pop
cltd
xor
xchg
mov
mov
pop
scas
dec
popf
lcall
sahf
fildl
and
test
push
xor
push
clc
je
or
ja
jae
adc
add
xchg
pop
cmpl
int3
pop
mov
lcall
cmp
out
in
jmp
sbb
and
adc
fsubrl
movsb
fwait
add
pop
jmp
rorl
adc
jae
je
adc
xor
push
adc
fadds
adc
mov
xchg
jecxz
mov
xor
or
mov
fadds
adc
nop
fadds
adc
mov
fadds
adc
test
pop
adc
mov
push
enter
push
rcl
sbb
inc
mov
mov
stos
mov
pop
adc
sub
mov
adc
gs
push
adc
xor
jno
adc
test
dec
lcall
add
movl
and
shlb
repz
adc
cmp
pop
fdivs
sbb
icebp
push
adc
sahf
mov
sbb
js
pop
or
stc
sbb
imul
and
out
lock
pusha
stc
mov
add
aad
add
adc
sub
rolb
stos
push
xor
leave
inc
cmp
inc
movl
push
pop
insb
in
ss
mov
push
adc
and
pop
popf
adc
les
std
cmp
and
mov
dec
sub
inc
lea
adc
xchg
stos
outsl
pop
mov
add
je
push
adc
stc
xor
pusha
pushf
jp
mov
xchg
cli
lods
cli
push
or
enter
movsl
sti
jbe
inc
iret
andl
enter
repz
mov
cmc
rorl
mov
mov
ret
enter
dec
nop
and
add
insl
and
int3
sbb
sub
xor
jmp
and
mov
mov
cmpsb
push
push
inc
loopne
popf
cmp
xor
adc
or
stos
mov
jecxz
out
or
sub
inc
les
les
aam
leave
mov
jo
adc
cltd
int3
push
dec
subl
push
rorl
adc
test
test
cmpsb
andb
adc
push
adc
xchg
rcrb
hlt
sbb
outsl
sbb
sub
xor
dec
popf
cmp
aad
cmp
je
dec
test
adc
daa
mov
pusha
loopne
cmpsl
fchs
pop
push
adc
mov
les
or
mov
out
out
sub
xor
sub
out
int3
lret
adc
roll
sub
stos
cmp
xor
cmp
lods
xor
cmp
push
adc
call
std
pop
add
push
adc
dec
mov
test
sub
andb
mov
adc
not
push
cmp
sahf
xor
dec
lds
xor
lret
mov
mov
int
imul
dec
add
shrl
mov
les
or
inc
dec
je
sub
mov
popf
pop
mov
pop
sub
dec
vdivsd
push
stos
push
test
ret
lcall
popf
testb
lods
aad
leave
mov
and
push
dec
mov
pop
cmp
add
sti
or
xor
movsb
js
push
adc
add
xorb
call
popf
adc
push
pop
dec
mov
test
mull
cmc
adc
stos
mov
lretw
loope
out
cmp
dec
jb
push
mov
les
enter
addr16
mov
daa
sbb
jbe
xor
push
je
sbbb
jo
shl
adc
mov
dec
ja
loopne
pop
sub
xchg
adc
lea
lcall
add
sub
stos
or
shl
adc
lahf
imul
sub
lea
sub
jnp
cmp
pushf
dec
sbb
and
cs
add
cmp
cld
mov
xchg
or
dec
sbb
aas
jbe
dec
leave
dec
and
xchg
adc
stc
subps
test
jl
push
adc
dec
out
push
shlb
mov
es
scas
pop
push
or
imul
mov
lret
or
cmp
das
push
das
push
es
pop
repnz
xor
cld
mov
ss
test
xchg
push
push
es
lcall
addr16
std
pop
arpl
ret
pop
mov
addl
sbb
mov
xchg
aad
dec
mov
dec
jge
fisttpl
push
aaa
lock
xor
mov
inc
xchg
aaa
cmp
add
adc
xor
repnz
and
rorl
push
outsb
jl
xchg
push
xor
out
jbe
js
or
mov
xchg
scas
mov
stos
add
jo
adc
pop
in
push
pop
ja
xchg
inc
push
incl
aaa
mov
and
ret
mov
jb
jle
add
cmpsb
enter
fcmovbe
ljmp
push
adc
sbb
rol
fadds
adc
ret
aam
outsb
int3
sub
scas
sbb
das
mov
aad
fadds
push
or
jecxz
out
aaa
sub
jns
cmc
popa
cmp
in
inc
sub
gs
xchg
aad
arpl
outsb
mov
dec
lods
add
pop
ljmp
xchg
xchg
idivb
sbb
add
les
mov
out
lods
or
add
add
or
cmp
jbe
leave
movsb
mov
int
out
movsb
cmp
shrl
fadds
adc
in
or
imul
scas
movsb
pop
jbe
in
push
adc
jmp
sbbb
movsb
jb
adc
pop
imul
pop
dec
ja
jb
adc
xor
inc
icebp
add
cmp
cmpsb
ret
pushf
jb
adc
xor
pop
dec
push
loopne
gs
leave
test
add
mov
data16
xor
pop
adcl
sub
data16
mov
push
inc
jp
xchg
jb
adc
jb
xchg
sub
cmc
inc
int
bound
push
pop
jl
mov
js
inc
push
xlat
cs
and
inc
shlb
lods
clc
icebp
push
adc
inc
lahf
fs
jbe
rorb
inc
sbb
adc
loop
movsb
lcall
pop
dec
add
mov
dec
in
xchg
mov
in
or
ret
das
repnz
out
xor
adc
icebp
push
adc
pushf
or
outsb
pop
mov
inc
out
adc
push
xor
in
enter
leave
lret
sub
imul
out
and
push
int3
pop
mov
std
dec
push
and
les
pusha
sub
fsubp
push
daa
pop
in
mov
movsb
fistl
dec
pop
sbb
dec
add
icebp
cs
add
mov
inc
ljmp
lds
inc
int3
arpl
ja
out
adc
fstps
rcrb
mov
inc
dec
dec
pop
mov
pop
push
adc
push
sub
mov
push
adc
xchg
pop
cmp
sbb
pushf
insl
rep
and
shrb
adc
mov
lods
xchg
sbb
idivb
pop
mov
jge
pop
push
adc
add
jmp
dec
repnz
adc
test
pop
aas
and
fistpl
and
sub
adc
mov
stos
xchg
sbb
repnz
adc
cmp
fsts
repnz
rcrl
stos
lret
dec
aad
outsl
outsl
push
xchg
xlat
jns
dec
jno
int3
or
lods
int3
test
mov
inc
xchg
daa
mov
stc
mov
sub
test
xor
lods
pushl
dec
sub
mov
xchg
subl
test
sarl
and
adc
cmpb
jns
fnstsw
rolb
repnz
pop
repnz
push
inc
mov
int
xchg
xorb
pop
cld
test
mov
push
das
out
jge
aas
sbb
roll
mov
push
mov
xchg
in
mov
jl
outsl
add
xor
adc
ja
fsubl
or
shl
push
aas
rcr
and
adc
fisttps
mov
stos
ss
add
dec
push
push
fsub
mov
dec
mov
test
je
or
ud1
movsl
mov
adc
adc
ret
jne
stos
push
rclb
je
jle
or
cmp
es
cwtl
cmp
repz
hlt
enter
pop
push
adc
dec
fnstsw
rcll
pusha
xchg
dec
and
dec
lret
jge
ret
imul
insb
repnz
adc
jnp
mov
push
and
das
lea
mov
scas
aad
pop
fnsave
daa
out
sbb
jb
flds
adc
mov
fdivs
mov
inc
test
adc
repnz
adc
dec
cltd
xor
pop
pop
push
adc
xchg
rcl
les
push
sub
gs
pop
mov
push
xor
mov
leave
call
jg
pop
jecxz
mov
xlat
addl
push
adc
and
and
cmp
adc
out
fiadds
push
adc
in
pop
adc
stc
sbbb
incl
inc
cwtl
repnz
adc
ds
aad
out
stos
lods
pop
mov
es
pop
xor
adc
test
and
ja
movsb
jp,pn
ljmp
dec
mov
fs
jmp
adc
lahf
pop
adc
cwtl
jno
rcrb
adc
enter
int
xor
or
pop
push
adc
mov
jbe
clc
add
pop
mov
inc
int
mov
sub
pop
and
adc
stos
mov
ljmp
in
add
imul
xchg
jae
vpsubsw
mov
fidivrs
repnz
adc
lahf
in
movsb
leave
lcall
mov
jmp
add
fs
dec
loop
sub
push
xor
mov
iret
outsb
add
push
sub
into
add
inc
test
pushf
push
dec
and
mov
int
and
repz
jb
scas
xchg
popf
fnsave
inc
test
insl
ja
sub
lahf
in
movsl
fwait
adc
xchg
loopne
and
fsubs
cmpl
push
cmc
lcall
cmc
fwait
in
sub
cli
cmp
cmp
enter
push
insl
push
push
movsb
shl
xchg
and
inc
push
cmp
loop
push
mov
mov
jne
or
sbb
push
push
add
sub
jno
sub
orl
pop
mov
adc
das
out
and
push
loop
in
ficoms
sub
jno
mov
cli
jge
ret
das
or
and
shr
lahf
or
inc
cmp
push
jg
jae
push
jge
inc
push
and
mov
fdivrl
push
mov
push
mov
fdivs
jae
pop
sarb
scas
add
shl
insb
fwait
lret
int3
sbb
mov
fs
push
aam
movb
sbb
test
in
push
popa
into
and
pusha
xchg
ret
jnp
je
mov
push
adc
or
mov
pop
pop
int
aad
shlb
jo
adc
lds
sarl
jb
push
xadd
adc
mov
mov
cmc
mov
aaa
adc
xorl
cmp
inc
js
dec
outsb
mov
mov
fistpl
ljmp
out
loop
iret
mov
insb
push
sbb
cmp
push
pop
cmpsb
push
pusha
mov
gs
xchg
mov
out
xchg
cmpsl
call
sub
arpl
cld
mov
sbb
inc
or
outsl
pop
push
xchg
aad
sub
mov
mov
xchg
dec
insl
mov
mov
inc
lret
pop
push
add
mov
jo
adc
mov
adc
add
mov
and
rcll
clc
inc
dec
inc
sarl
mov
push
cmpsb
jmp
sub
sbb
mov
movsl
fmull
push
sbb
adc
pusha
mov
and
jg
and
mov
movsl
mov
push
adc
lret
push
jb,pn
cltd
jae
out
jbe
repnz
sbb
add
cltd
jbe
mov
clc
fwait
mov
popf
sub
xor
dec
xchg
lock
add
xor
xchg
call
and
inc
xchg
enter
xor
call
movsl
lret
mov
leave
in
or
jo
adc
push
insb
sub
mov
push
sub
dec
ja
jo
adc
mov
pop
dec
push
stos
packssdw
addr16
xor
push
bound
ljmp
fwait
popa
dec
or
leave
ret
push
lods
shl
xchg
leave
xchg
mov
into
lret
push
mov
adc
addl
mov
add
fiaddl
cmp
jo
adc
dec
fadd
pop
adc
jo
adc
inc
jb
adc
and
adc
imul
inc
dec
or
adc
mov
push
repnz
pop
adc
adc
ss
std
or
stos
push
das
lahf
stos
out
dec
and
adc
and
cmp
add
pop
xor
lret
addl
call
jb
insb
lods
add
movsb
fwait
dec
adc
mov
ror
and
adc
mov
push
adc
iret
sbb
bound
mov
ficoms
adcl
nop
ja
fnsave
sub
cwtl
lds
fwait
jl
sarl
dec
inc
stos
scas
aam
adc
cmpsb
dec
cltd
movsl
push
and
adc
popf
cmp
fwait
popa
movsb
pop
clc
cmp
call
and
adc
dec
shll
adc
arpl
dec
int3
xor
loope
and
adc
xchg
test
sbb
daa
sbb
imul
std
or
add
and
adc
push
xchg
mov
and
pop
mov
dec
fs
dec
inc
or
ret
test
or
mov
mov
dec
mov
or
clc
or
inc
mov
and
adc
out
out
mov
shll
xchg
sbb
sub
and
adc
adc
cmp
dec
pushf
inc
dec
dec
push
dec
or
adc
cmpsl
rol
popa
and
dec
and
adc
push
adc
sbb
inc
cmpsl
mov
jb
add
push
adc
add
in
sub
fs
loop
mov
js
loopne
pop
pop
dec
dec
xor
leave
fnstenv
leave
jg
jns
fldt
subl
pushf
cltd
vmaxpd
mov
mov
nop
jbe
mov
and
sub
inc
and
outsl
fistpll
fistpll
test
jge
push
mov
jl
mov
ret
repnz
adc
push
mov
jne
lcall
das
push
jns
jmp
mov
add
lods
aaa
sbb
jmp
mov
jge
mov
pop
pop
xor
and
mov
mov
test
dec
aas
cld
lods
pop
arpl
ret
sbb
cmp
sbb
sbb
addl
mov
push
movsl
fisubs
adc
jb
mov
enter
lret
mov
mov
cwtl
mov
mov
push
mov
mov
and
sbb
repz
adc
lds
xor
mov
fnstenv
in
xchg
adcl
in
sahf
pop
push
adc
into
xor
push
cld
test
or
push
sub
xchg
sahf
in
sbb
cmp
loope
push
dec
add
push
push
fwait
adc
pop
addr16
in
pop
mov
fld
insb
nop
xlat
rol
pop
pop
out
inc
in
mov
iret
mov
inc
in
mov
in
pusha
adc
cmc
sub
fisubs
adc
cmp
in
rcl
cld
xchg
fwait
add
jg
loope
sbb
push
stos
push
gs
mov
jne
pop
push
adc
lea
or
or
jg
jp
out
inc
lock
cltd
xor
push
and
adc
sahf
inc
dec
popf
fsubrl
data16
jp
sahf
loop
out
sub
inc
popa
addb
cmp
out
pop
adcb
icebp
jmp
mov
cmc
jbe
lcall
jl
adc
pop
je
popf
dec
inc
cltd
adc
and
adc
xchg
ljmp
adc
xor
cmp
test
cmp
ja
stos
adc
lods
pop
mov
add
arpl
daa
inc
push
dec
popf
cmp
adc
adc
lods
add
sahf
in
or
daa
mov
mov
int3
mov
out
lret
jb
mov
mov
test
das
ficoms
cltd
inc
ffreep
push
lret
daa
sbb
sbb
or
pop
dec
or
mov
int
data16
movsb
les
xchg
mov
inc
leave
jp
or
mov
adc
and
add
cltd
int3
lcall
sbb
sbb
mov
fld
pop
cmp
leave
add
sahf
hlt
insb
sar
sub
orb
out
pop
lods
sbb
addr16
shl
push
xor
and
fldenv
mov
jbe
cmp
sub
outsl
jbe
cltd
sti
dec
bound
shlb
sbbb
adc
jne
dec
inc
push
dec
je
push
repz
adc
js
lods
pop
cmp
leave
push
loopne
push
pop
sub
loope
mov
dec
cmp
lds
int
stos
repnz
mov
pop
ss
dec
and
cmc
add
loope
data16
cmc
pop
lret
inc
in
out
cmp
jo
adc
sbb
adc
xchg
out
mov
pop
mov
daa
lahf
mov
xor
fsubr
pop
push
pop
lret
cmp
jnp
cmovl
stos
sbb
push
mov
into
adc
cmp
add
imul
or
pop
inc
xor
pop
mov
xor
shlb
popf
pop
mov
xchg
insb
cmp
mov
shl
jle
sarb
cwtl
call
xchg
hlt
mov
and
push
adc
cltd
dec
inc
jne
lods
inc
pop
sarl
sbb
push
adc
mov
xor
movsl
test
push
test
adc
sbb
adc
int
pop
mov
lods
jle
add
add
adcl
add
rcr
mov
cmpsb
or
not
inc
repz
adc
leave
adc
cmpsl
push
inc
repz
adc
popf
vpunpckhdq
xchg
rcrb
roll
push
mov
popf
ja
ret
inc
shlb
enter
push
std
aaa
in
std
adc
pop
mov
pop
push
jecxz
jae
cmovg
xchg
push
mov
cmpsl
scas
stos
add
jmp
sbb
jge
lret
data16
ror
xor
jle
aad
jnp
aas
pop
lods
push
test
gs
adc
push
fcmovnb
enter
cmp
lds
mov
xchg
push
cmc
jl
xor
adc
andl
aas
cmpsb
mov
cmp
and
adc
xor
adc
cmc
inc
test
or
jmp
jae
and
adc
gs
push
adc
sbb
bound
adc
js
or
js
int
mov
ret
or
push
jle
movsl
adc
mov
pop
mov
sub
ljmp
jo
adc
pop
repnz
movsb
mov
adc
cmpsl
lds
ja
mov
aad
push
push
dec
mov
push
adc
lret
pop
adc
add
shll
pop
add
enter
mov
adc
add
js
pop
adc
adc
ja
js
pop
adc
cli
xchg
js
pop
adc
testb
les
jge
pop
mov
mov
xchg
xlat
fisttpll
adc
jb
aaa
lods
add
pop
cmp
rcrl
popa
and
sti
mov
xchg
ret
mov
sub
mov
push
mov
sub
inc
lock
lods
add
cmpsl
lcall
popf
rcrb
ret
mov
loop
push
out
jns
out
pop
das
cltd
mov
loopne
lods
pop
mov
dec
mov
pop
mov
les
push
sub
fadds
sahf
dec
test
push
cmp
mov
fbstp
cmpsl
mov
xor
mov
adc
push
sahf
negb
mov
cmp
out
shrl
adc
leave
rolb
push
sub
inc
minps
add
rorl
and
push
dec
jno
imul
jbe
cmp
cmp
popf
mov
out
push
push
jp
add
fsts
xor
mov
hlt
sahf
lcall
and
rcr
leave
shrl
mov
lock
cmp
xchg
mov
roll
fsubr
push
push
jp
sbb
push
and
gs
dec
testb
lds
rorb
in
sub
cld
adc
or
mov
add
shll
mov
bound
enter
jecxz
add
pop
adc
loopne
mov
hlt
xchg
sbb
xchg
cwtl
gs
cmovle
adc
enter
test
push
pop
cmp
xor
jp
cmp
adc
icebp
xor
push
scas
pop
mov
mov
push
imul
call
xchg
roll
mov
xor
inc
xor
sub
jnp
inc
lock
sub
mov
sub
lods
add
shll
xchg
cmp
test
and
and
lea
lock
enter
push
dec
and
fnstsw
adc
insl
push
push
mov
cwtl
stos
pop
jp
jnp
sub
adcl
or
popa
xor
mov
pop
fs
adc
mov
stos
xor
pop
mov
clc
fsub
fisttps
xor
mov
out
cmp
pushf
ret
imul
imul
mov
and
in
pop
test
aaa
jae
roll
inc
fistps
and
test
jp
adc
inc
or
sbb
lret
or
inc
sub
les
ds
xchg
and
xchg
call
pop
pop
mov
inc
push
push
add
enter
mull
push
psubusb
dec
inc
test
pushf
jbe
mov
cltd
pop
shll
insb
mov
fcomps
arpl
fsts
or
or
add
jne
incb
xor
fs
mov
cmp
out
dec
add
je
add
addb
out
and
outsl
into
shll
add
add
or
ret
sbb
rol
push
push
fnstenv
outsl
std
xchg
mov
push
cmpsl
push
outsl
and
mov
and
sbb
es
pop
cmc
push
daa
in
fwait
andb
mov
dec
cld
xor
jns
adcb
sbb
jnp
pop
and
mov
vpmullw
insb
enter
nop
test
and
jecxz
xchg
test
push
shrb
push
pop
cmp
add
sbb
pop
sahf
inc
dec
or
sbb
daa
adc
popf
imul
add
stc
loope
add
out
mov
lret
pop
mov
andb
mov
rol
adc
mov
and
inc
push
mov
mov
lds
scas
or
scas
pop
inc
jg
stos
cmp
xor
pop
add
inc
in
mov
jb
cmp
cmp
push
stos
push
lods
loope
data16
inc
fs
call
scas
push
movsl
pop
or
mov
loop
rcrl
outsb
jno
push
cmpsl
pop
add
pop
mov
or
les
push
add
mov
cmpsb
dec
imul
adc
test
test
xchg
dec
rcrb
ss
adc
lods
pop
mov
mov
cmp
mov
xchg
cmp
fwait
aad
rorl
sbb
lock
lahf
cltd
xlat
in
rcrb
mov
pop
add
xor
add
jnp
add
in
stos
push
lods
pop
jo
pushf
and
enter
mov
enter
mov
dec
adc
fwait
mov
add
xchg
xchg
stc
mov
lds
outsb
mov
test
pushf
inc
jno
fcmovnb
jge
ss
iret
mov
mov
dec
lret
jbe
pop
inc
sub
adc
jl
adc
lods
sub
cmp
je
daa
adc
cmp
out
inc
xchg
orb
lahf
xor
jo
xchg
push
add
ret
stos
xor
push
addr16
nop
xchg
aad
popf
das
stos
push
xchg
mov
jle
pop
pop
jmp
mov
dec
inc
mov
aam
mov
mov
pop
fstl
xchg
inc
lods
lds
test
push
adc
ljmp
or
mov
jg
mov
or
fidivl
pop
pop
inc
popf
pushf
xor
iret
mov
arpl
pop
out
in
xchg
pusha
mov
out
sub
pop
cmpsl
shl
mov
stos
mov
mov
ds
mov
leave
push
mov
mov
pushf
sub
adc
adc
jp
push
test
ret
jle
mov
jb
stc
cmpsb
inc
lahf
xchg
dec
jl
fldcw
xchg
add
lods
into
xor
test
xor
loopne
adc
or
cmp
or
pop
sahf
push
inc
rcll
mov
push
and
cmp
sbb
adc
sbb
nop
aaa
lret
and
adc
out
pop
jo
cmpsl
lcall
push
adc
pop
loop
and
adc
push
mov
call
mov
adc
movsl
mov
insl
lods
iret
cs
jl
dec
push
adc
icebp
mov
dec
mov
mov
nop
pop
jge
mov
jb
adc
aad
adc
dec
mov
nop
flds
push
sbb
insl
mov
mov
bound
nop
repnz
js
jge
and
jbe
inc
aaa
pop
enter
push
add
loopne
push
adc
and
adc
cmpsl
popa
lods
sbb
sub
jmp
or
mov
stc
mov
sbb
push
adc
pop
inc
push
sbb
and
mov
push
jl
jne
push
cmp
enter
sbb
rcll
pop
sahf
outsl
lods
and
inc
or
and
pop
jo
sub
dec
jmp
jae
imul
inc
in
fsubl
aas
xchg
les
xchg
repnz
cmc
rcll
push
cld
sub
rcrl
fdivp
pop
daa
sbb
xchg
lea
push
xor
lds
jmp
mov
push
push
fstp
push
cmp
stos
lods
pop
xor
and
pushf
cmp
insl
lods
dec
repz
add
xor
and
xorb
popa
aas
lcall
sub
and
xor
call
jb
fdivr
push
dec
sbb
adc
inc
sahf
dec
cltd
xor
xor
pop
out
push
cmp
dec
andl
mov
ficompl
fcmovbe
xchg
es
lea
lods
pop
pop
inc
dec
into
push
scas
adc
and
pop
inc
cmpsl
ds
xchg
ss
movsb
add
push
jno
out
cmp
dec
loop
push
inc
xor
fiadds
in
mov
cmpsl
dec
loope
orl
mov
or
push
test
data16
jae
push
lcall
out
mov
jb
mov
nop
sub
inc
lods
pop
rorb
lods
rcll
int
push
sub
jb
int3
loopne
repz
adc
dec
aam
push
aad
movsl
mov
int
xor
nop
rcrl
cmp
mov
vmwrite
jg
stos
mov
stos
notb
sub
jmp
lods
shl
push
adc
jmp
stos
and
push
adc
adc
mov
pushf
or
pop
cmp
or
loop
fsubrl
dec
cltd
and
inc
jae
popf
cmp
and
dec
loop
push
sti
std
cwtl
stos
push
test
int3
out
xor
bound
bound
movsb
adcb
std
cmp
repz
adc
stos
dec
stos
adc
push
add
adc
out
and
mov
push
adc
movb
jle
or
jae
popl
sbb
xchg
xchg
cmpsl
xor
jmp
fldl
adc
lahf
add
lcall
dec
loope
push
fldcw
popa
fbstp
sub
in
sub
adc
cltd
enter
leave
lods
std
adc
mov
ds
fwait
push
test
leave
dec
jb
cmp
pop
push
sbb
fimuls
mov
xchg
sbb
pop
xchg
xor
stos
out
sub
or
dec
and
jo
cs
insl
hlt
or
popa
jne
mov
inc
in
xchg
test
mov
xchg
lods
cmp
and
adc
popa
insl
mov
cmpsb
fwait
jb
les
out
les
hlt
push
adc
lea
jecxz
mov
add
out
sbb
dec
xchg
mov
adc
lret
cmpsb
pop
mov
sti
ja
sub
push
out
arpl
inc
shr
pop
jge
xor
rclb
or
add
out
mov
test
and
sbb
adc
jle
loope
insl
jmp
adc
or
les
fisttpll
inc
sbb
ds
je
stc
clc
out
mov
rolb
movsl
jmp
add
cs
sub
in
cmpsb
js
or
add
inc
sub
mov
bound
push
adc
and
sbb
addr16
inc
in
mov
lret
sbb
inc
test
sahf
pop
pop
nop
movsl
fsts
mov
inc
aaa
mov
lds
sub
xchg
pushf
ja
sub
int
xor
loope
jno
out
fldz
adc
sbb
cmc
adc
mov
imulb
das
std
xor
sub
dec
sbb
xor
pushf
push
mov
outsb
cli
mov
or
lcall
push
out
add
adc
daa
sbb
int3
inc
jge
fidivs
int
frstor
daa
and
aam
les
aam
jnp
out
pusha
popa
outsb
pop
and
out
cmp
adc
sbb
dec
push
pushf
sub
adc
adc
adc
jo
out
adc
sahf
and
stc
adc
sahf
loope
cmp
hlt
leave
or
fidivs
int
icebp
jg
loope
dec
mov
in
xorb
cmp
insb
insl
pop
das
mov
arpl
or
jmp
adc
push
out
cs
lock
adc
insl
cmp
bound
pushf
cmp
fs
andl
pop
pop
testb
cwtl
xor
les
jle
ja
cmc
and
cwtl
jb
adc
test
mov
or
pop
push
out
or
adc
sbb
lret
imul
push
mov
jno
popl
inc
or
dec
jp
pop
xchg
add
test
lock
int
inc
jp
mov
or
sub
pusha
adc
lahf
cmp
sar
addr16
int
push
pop
fldenv
movsl
or
fistpl
mov
dec
jg
push
ret
push
push
scas
sub
adc
cwtl
push
shl
sahf
std
pop
arpl
inc
pop
enter
subl
sti
and
data16
cs
mov
orb
push
pop
pushf
cmp
sub
arpl
outsl
inc
sub
inc
jns
dec
pop
mov
les
cmc
sub
pop
data16
outsb
or
xchg
ret
xor
push
adc
xchg
sub
jb
subl
cmpsl
cmp
add
jg
sbb
aas
fcomp
pop
and
inc
popa
pop
fists
and
data16
in
sbb
ret
scas
add
icebp
cs
cmpsl
pop
dec
roll
push
sub
mov
cmp
add
das
xchg
cli
jbe
mov
loop
sahf
int3
cmp
adc
and
enter
icebp
sub
int3
cmp
adc
movsb
cwtl
push
jno
mov
add
jo
divl
call
sbb
lea
adc
mov
sub
adc
outsl
mov
pusha
movsl
add
sub
enter
ret
cmp
adc
int3
cmp
adc
insl
push
jle
popl
cmp
adc
ds
or
xchg
daa
adc
adc
xor
sbb
loopne
cmp
adc
sub
inc
out
int
push
mov
add
cmp
adc
cmp
hlt
push
adc
stos
lods
inc
xchg
and
ja
xor
into
inc
pop
jp
subl
stc
mov
push
xor
in
sahf
xor
fsubr
lea
leave
sub
movsl
arpl
cli
movsb
sbb
lcall
dec
sahf
cmp
push
loope
mov
xor
pop
pop
cmp
mov
jmp
dec
dec
ds
movsb
call
out
aad
xchg
imul
mov
jle
lods
xchg
data16
faddl
fwait
push
sbb
inc
pusha
xchg
mov
cmp
repz
jg
push
lahf
jb
fdivs
sbb
fdivs
loop
jl
lret
dec
ljmp
jo
mov
repnz
jo
dec
lret
adc
out
dec
shrl
push
adcb
push
pusha
loopne
sti
push
cmp
leave
add
ror
push
dec
fwait
lock
inc
xor
pop
pop
nop
scas
mov
lcall
pop
rorl
fistl
inc
jno
push
imul
push
sarb
cltd
xor
mov
leave
or
das
pop
jns
loopne
shrb
add
int3
sub
inc
push
sub
add
adc
sub
addl
jmp
cmp
iret
pop
fsubrl
jmp
xor
dec
push
inc
jecxz
mov
add
nop
mov
pushf
mov
jo
movl
pusha
inc
dec
adc
f2xm1
push
jb
mov
push
mov
loope
mov
lds
movsl
lds
jmp
mov
jno
mov
test
mov
sub
adc
sub
adc
add
dec
shl
in
and
push
mov
pusha
fwait
gs
imul
and
mov
cmc
in
xor
push
mov
jo
gs
jns
push
movsl
test
mov
int
lds
push
jl
mov
cmpsl
int3
sub
adc
sub
adc
and
les
adc
ret
and
out
stos
pop
sbb
push
sub
in
push
daa
sbb
cmp
lods
shlb
sub
into
adc
and
hlt
lahf
outsl
leave
ds
mov
push
scas
jbe
lds
mov
or
and
jl
addr16
test
repz
cmpsb
xchg
repz
sub
scas
push
sub
mov
adc
ficoms
xchg
mov
xchg
repnz
adc
pop
sub
sub
adc
sub
adc
and
mov
ficompl
add
mov
cmp
popa
nop
mov
jb
pop
sub
cltd
mov
cmp
lds
push
sub
int3
adc
stos
orl
xchg
outsb
pusha
int3
dec
inc
pop
sub
push
sub
in
test
inc
sbb
aaa
sub
pop
dec
push
ds
rorl
xor
mov
adc
std
inc
or
add
adc
add
adc
add
adc
adc
mov
imul
or
jp
clc
add
lock
lds
jae
sub
and
fisttpll
shll
ret
inc
sub
pop
cmpsb
push
inc
inc
shlb
xchg
outsl
cltd
andb
sub
push
sub
add
adc
sub
mov
add
imul
add
lods
pop
movsl
shl
push
xor
leave
enter
xor
sti
insl
inc
rcrb
adc
jg
adc
mov
mov
dec
js
and
push
and
rcrl
inc
and
aam
push
push
stos
shlb
fldt
sahf
xchg
jmp
push
std
stos
repnz
in
push
iret
push
jmp
push
ja
js
or
iret
mov
cld
cs
stc
push
or
test
sbb
subb
add
or
add
adcb
cs
adc
add
add
xchg
and
mov
jmp
and
mov
pop
enter
jecxz
mov
add
nop
mov
pushf
mov
jo
movl
pusha
inc
dec
adc
f2xm1
push
jb
cld
cs
pop
stos
shlb
lds
movsl
lds
jmp
mov
jno
cld
cs
repz
adc
cs
adc
cs
adc
cs
dec
shl
in
and
push
mov
pusha
fwait
gs
imul
and
mov
cmc
in
xor
push
mov
jo
gs
jns
push
movsl
test
mov
int
lds
push
jl
cld
cs
das
add
adc
das
add
adc
and
les
adc
ret
and
out
stos
pop
sbb
push
sub
in
push
daa
sbb
cmp
lods
shlb
sub
into
adc
and
hlt
lahf
outsl
leave
ds
mov
push
scas
jbe
lds
mov
or
and
jl
addr16
test
repz
cmpsb
xchg
repz
xor
push
xor
fwait
out
xchg
adc
ficoms
xchg
mov
xchg
repnz
mov
sbb
add
adc
and
mov
fistpl
add
adc
mov
loope
andb
jbe
jmp
xor
mov
cmp
cltd
pop
pusha
dec
iret
adc
sub
push
pop
dec
xchg
push
cwtl
xor
das
jnp
ljmp
dec
pop
mov
pop
cmp
int3
sbb
push
fwait
int
xchg
jp
dec
popf
cmp
fnstsw
add
dec
xor
adc
adc
adc
adc
adc
adc
and
mov
cmc
in
fldl
push
mov
pushf
cwtl
fs
nop
adcb
and
and
and
mov
hlt
in
int3
add
push
cmp
dec
lea
adc
inc
data16
cwtl
xor
xor
adc
xor
adc
adc
or
sub
and
mov
xchg
jmp
dec
add
lods
pop
movsl
shl
push
xor
leave
enter
xor
sti
insl
inc
rcrb
adc
jg
adc
mov
cmc
adc
dec
ja
aaa
and
hlt
push
adc
push
mov
push
hlt
push
adc
addr16
movsb
sbb
cmp
add
fmuls
jge
jne
sub
pop
and
mov
aaa
int
mov
mov
cmp
cli
sub
outsl
pop
repnz
push
hlt
push
adc
sub
fdivl
nop
in
jbe
xorl
enter
inc
ret
aad
and
and
sbb
in
push
sub
xlat
scas
push
jno
sbb
lea
lcall
hlt
push
adc
xor
xchg
js
jecxz
cld
push
inc
jge
loop
hlt
push
adc
mov
cmp
dec
mov
push
adc
outsl
and
xchg
and
rcrl
xchg
xchg
jae
arpl
hlt
push
adc
scas
fists
jo
push
adc
mov
mov
and
jg
lcall
decb
push
lods
sbb
adc
xchg
jb
or
sub
ret
adc
mulb
dec
sub
fmull
in
and
and
xchg
dec
mov
or
enter
orl
movsl
cwtl
adc
call
pop
int
fwait
imul
mov
stos
push
test
lcall
pop
and
mov
add
pmullw
dec
movsb
shl
xchg
lcall
xor
mov
popf
rcrl
out
addr16
loopne
mov
or
das
xor
mov
dec
ja
insl
sbbw
stos
push
lods
sub
hlt
push
insb
sub
xchg
add
push
sub
les
clc
jp
jmp
push
jnp
pop
cmpsb
andb
pop
xor
sub
jno
out
hlt
push
pop
sub
adc
add
out
aaa
sbbb
and
enter
mov
out
mov
cld
negb
insl
pop
mov
int
sub
das
cltd
mov
pop
pushl
dec
xor
inc
test
pusha
sarb
bound
lret
xchg
test
pop
mov
inc
jnp
pop
lcall
inc
test
xchg
pop
mov
test
insl
aaa
nop
mov
lods
cmpsl
mov
xlat
jl
sub
mov
mov
sti
out
xchg
adcl
shlb
xchg
scas
pop
out
mov
sbb
push
dec
cwtl
ss
shrl
jne
push
and
lcall
xor
call
je
imul
push
dec
xorb
mov
dec
or
mov
lods
cltd
fwait
or
and
push
sub
stos
cli
push
inc
dec
iret
data16
js
push
gs
jmp
add
xchg
jb
subb
repnz
fldl
loop
lcall
cmp
push
sub
lds
leave
sbb
fmuls
fstpl
pop
mov
mov
lods
lds
mov
xchg
xchg
cmp
decl
push
push
fadds
lea
pop
adc
cmp
into
shl
loope
and
push
sar
fwait
and
mov
xlat
xchg
inc
inc
rolb
adc
test
adc
pop
outsb
sbb
push
xor
iret
cltd
ss
dec
rolb
adc
out
int
mov
fsubrp
iret
ja
or
cmpsl
mov
mov
lret
pushf
fidivrl
shrl
movups
stos
inc
rolb
adc
jb
jo
push
stos
cwtl
loop
in
xlat
dec
rolb
adc
rolb
adc
mov
push
call
cltd
cmp
jle
xor
jp
out
repnz
sbb
mov
jge
inc
rolb
adc
data16
out
mov
push
adc
xchg
andb
mov
push
jns
hlt
idivb
push
sahf
push
in
cld
rcll
mov
sarl
mov
shrl
int
shlb
icebp
xchg
cmpsl
leave
arpl
mov
sti
fdivr
mov
lcall
rcpps
lcall
add
enter
in
ss
lock
push
xchg
in
iret
push
xchg
fadd
movsb
xchg
repz
inc
add
shrl
pop
ffree
xchg
and
cltd
and
inc
ret
push
push
rclb
icebp
mov
shlb
movsb
lods
mov
neg
cmpl
jo
sbb
sbb
and
imul
xchg
lahf
mov
add
xor
decb
lock
mov
push
mov
sbb
aas
mov
inc
mov
push
inc
mov
shl
subb
shlb
mov
out
imul
mov
mov
hlt
push
ret
push
adc
outsb
and
xor
mov
add
mov
xor
jne
and
push
pop
sub
sbb
mov
pop
mov
lds
push
cmp
jno
rorl
sub
xchg
jg
or
scas
daa
xchg
sub
outsb
mov
dec
out
negb
scas
cltd
mov
test
xchg
mov
stos
sub
push
pop
mov
imul
test
cmc
call
adc
push
xlat
pop
xchg
sub
imul
das
mov
roll
adc
aaa
jge
ljmp
out
and
cmpsl
lcall
dec
in
out
push
mov
inc
sub
push
jno
rcll
jo
pop
loope
out
sub
loop
adc
jl
adc
mov
xchg
mov
cmp
add
shl
lcall
mov
sub
fucomip
mov
and
lret
xor
lods
pop
loop
adc
inc
movsl
sub
adc
leave
pop
adcl
rcr
xor
mov
ja
push
dec
mov
scas
mov
mov
fsubrp
stos
mov
in
mov
pusha
les
pop
sub
dec
pop
cmp
enter
cmc
pusha
fiadds
fucomip
movsl
pop
jmp
push
daa
sbb
dec
shlb
jno
js
lret
or
incl
or
lret
sub
mov
jbe
mov
dec
jp
jb
inc
pusha
sub
cmp
inc
or
loopne
test
inc
sti
dec
add
xchg
fdivr
sbb
or
pop
shlb
fisubs
jae
push
mov
mov
adc
jmp
fstpl
mov
pop
xchg
pop
maskmovq
notl
pop
push
jo
dec
rolb
adc
int3
ffreep
out
pop
or
xlat
cmpsl
dec
mov
add
fwait
imul
nop
xchg
cmc
sub
pop
bound
shl
xchg
pushf
js
pop
xor
sbb
adc
ret
lret
xor
xchg
jl
or
loope
jl
or
data16
jmp
jle
push
adc
pop
cltd
mov
mov
sarl
in
xor
sti
sub
pop
mov
lret
jmp
sub
xor
ror
push
mov
dec
jne
into
pop
mov
repnz
and
callw
std
in
and
in
and
and
lea
push
std
and
push
mov
fstl
icebp
xchg
insb
adc
push
xchg
or
outsb
jl
mov
and
cwtl
out
das
in
mov
jge
in
lods
stos
jecxz
int
sbb
mov
adc
je
andl
roll
adc
pop
roll
adc
mov
pusha
roll
adc
add
roll
adc
movsb
push
mov
roll
adc
add
addr16
sub
adc
cmpsb
mov
inc
cltd
insb
cltd
jae
or
mulb
ds
xlat
dec
jo
in
ds
roll
adc
movl
xchg
cwtl
aas
aas
xor
cmpl
mov
mov
xor
cwtl
dec
lock
mov
inc
pop
js
add
mov
pop
adc
arpl
sar
push
stos
inc
rolb
adc
jb
mov
mov
mov
jle
jb
adc
stos
push
cwtl
sbb
lret
cltd
jge
dec
nop
lcall
outsb
bound
and
inc
mov
dec
push
cld
daa
and
jb
adc
test
aas
xor
xchg
lcall
push
leave
dec
adc
pop
adc
mov
and
leave
pop
adc
leave
pop
adc
hlt
dec
not
cmpsl
add
or
leave
shlb
lret
leave
pop
adc
mov
xchg
fdivs
push
mov
and
test
sub
add
mov
in
lcall
mov
shlb
mov
adc
inc
xlat
inc
xor
stos
shl
data16
sar
cmp
dec
popf
inc
dec
fs
jnp
and
movsb
or
in
mov
cmp
stos
mov
sbbl
and
stos
dec
or
mov
xchg
xor
fisubs
push
test
sub
adc
leave
lret
push
xchg
lret
pop
stos
push
lods
sub
mov
mov
ds
adc
mov
out
pop
stos
lods
in
aad
aad
lods
xor
ljmp
cwtl
ja
outsb
fnstsw
iret
fdivrp
inc
pop
test
nop
ljmp
inc
popa
inc
in
shll
mov
cmp
int3
ja
xor
outsl
pop
das
mov
jo
std
je
jbe
mov
imul
cwtl
jmp
inc
rcrl
mov
stos
push
das
mov
adc
mov
movsl
sbb
push
fldl
or
clc
cmpsb
dec
cltd
inc
fbld
jb
add
pop
enter
or
sub
push
fstpt
push
adc
popf
mov
dec
jnp
bound
jp
add
and
adc
jb
xchg
sub
jne
dec
into
repnz
adc
adc
inc
push
dec
icebp
ret
test
fnstenv
dec
lods
add
dec
pushl
and
xor
shl
inc
ret
push
lods
and
push
mov
sub
jne
inc
dec
insb
and
cmp
in
dec
sub
or
rcll
dec
loope
mov
hlt
push
adc
dec
aam
xchg
pop
ficoml
daa
lret
and
aam
movl
jmp
mov
xchg
pop
push
xchg
sar
mov
fwait
cmp
dec
mov
jb
lds
push
sbb
mov
test
push
or
xchg
cmp
sbb
inc
aad
hlt
push
adc
sbb
jecxz
pop
popf
fwait
dec
enter
test
ljmp
sbb
push
jp
outsl
push
add
insl
jae
sbb
aad
mov
and
es
or
adc
dec
movsl
fcompl
test
shlb
xor
cmp
pop
outsl
xchg
adc
ret
jmp
out
fadd
das
cld
es
and
decb
lods
iret
pop
adc
jae
popf
push
dec
pop
pop
adc
test
enter
or
xchg
rcr
inc
fdivrs
frstor
sbb
outsb
xchg
es
lahf
sbb
jbe
mov
mov
push
adc
inc
inc
dec
inc
dec
bound
jg
push
xor
addr16
xor
jb
into
pop
jle
inc
sub
mov
push
xchg
dec
cmp
cmpsl
cmp
dec
mov
push
sbb
jl
add
rorb
lret
ds
mov
pop
and
enter
pop
jae
or
xor
loop
add
aam
dec
ljmp
mov
test
out
and
xchg
stc
std
popf
sbb
and
dec
adc
out
pushf
sub
push
fldcw
sub
xlat
xlat
fdivs
loop
js
xchg
cmpsb
sbb
das
mov
inc
push
cmp
test
lahf
xor
mov
popf
jp
cmp
hlt
dec
cld
push
pusha
push
sub
mov
xchg
mov
mov
movsb
add
adc
cs
stos
pop
loop
inc
fistpll
mov
cmp
add
pop
andb
aam
movl
push
mov
xchg
fstpl
mov
mov
sub
jle
cwtl
imul
cmp
hlt
pop
mov
test
sub
adc
adc
adc
cld
mov
cltd
xor
xor
or
loopne
jge
or
lea
jl
mov
loop
out
pop
loope
lods
faddl
nop
add
cmpsl
adc
jbe
xchg
out
mov
imul
shll
mov
pop
ss
jae
jno
dec
mov
pusha
ret
fcom
test
sub
sbb
mov
and
mov
add
or
sub
and
sbb
les
pop
outsb
mov
inc
lds
cmp
ficoms
out
addr16
mov
xor
lret
sub
mov
xchg
add
stos
mov
stos
push
lods
ror
inc
fucomp
ds
aas
scas
push
xor
lds
fs
dec
adc
test
fnsave
loop
repz
xchg
xlat
lds
add
adc
xchg
in
push
and
sahf
mov
or
lods
sub
push
ja
out
mov
inc
test
mov
ficompl
ret
imul
scas
jbe
lds
mov
ss
sub
xchg
adc
fdivp
fwait
cmp
dec
adc
xor
fistpll
sub
fistpl
rep
jg
pop
mov
mov
xchg
sub
out
cld
addl
addr16
lock
inc
inc
xor
shlb
fldl
or
jge
cmpsl
out
popf
add
insl
cmc
dec
pushf
sub
jne
inc
bound
push
mov
out
adc
fisubrl
out
mov
fs
push
loop
dec
loopne
aam
into
pop
inc
add
xchg
xor
cmp
shl
cmp
aam
stos
cmpsb
mov
popa
data16
aaa
mov
fistps
jbe
xor
lret
aad
cmp
out
and
ret
adc
jecxz
fdiv
and
adc
xchg
xchg
xor
and
idiv
push
and
add
scas
xchg
iret
sub
mov
pop
pop
mov
movsl
ljmp
enter
jns
xor
mov
test
arpl
testl
xchg
cmpsl
les
inc
lods
shrl
xchg
aas
jne
add
or
jns
loop
pop
stos
or
push
xchg
shl
pop
es
iret
into
sahf
push
add
and
and
or
pop
bound
mov
stos
int3
cmc
adcl
aas
adc
sysenter
inc
and
sbb
stc
loope
cmp
mov
test
sbb
mov
adc
shlb
adc
es
mov
ss
cmp
inc
ret
movsl
sub
in
loop
roll
das
scas
les
and
addb
lock
xor
cli
imul
sub
dec
nop
mov
std
addl
lods
cmp
int3
sbb
mov
dec
mov
lods
fdivs
roll
adcl
xor
and
inc
pop
cmp
mov
add
lods
and
adcl
scas
dec
pop
sbb
mov
pop
lds
jmp
roll
bnd
fidivl
lods
pop
mov
imul
lds
pushl
sub
sub
mov
test
rcr
pop
push
popf
cmp
add
popa
inc
fidivrs
push
push
and
pop
push
fsts
mov
pushf
test
jns
jp
xchg
adc
shl
cmpsb
dec
cltd
inc
popf
repz
pop
dec
imul
ja
push
jg
mov
int
data16
arpl
jbe
bound
sbbb
pop
ret
mov
pop
push
mov
fcoms
stc
push
jmp
les
test
inc
mov
sub
jne
ret
outsb
shlb
adc
dec
int
mov
aad
xor
jecxz
inc
mov
push
push
and
pop
push
pop
cmpsb
dec
popf
scas
mov
andb
stos
add
cmp
push
cmpsb
xor
lds
push
cmp
pop
mov
sub
mov
push
adc
and
lds
push
cmpsb
andb
pusha
fchs
cmc
push
adc
xor
cmp
push
sub
pop
inc
jecxz
jmp
sbb
mov
sub
pop
imul
stos
ret
adc
daa
adc
in
sub
xor
scas
and
jb
adc
lfs
push
adc
mov
test
mov
or
add
jecxz
inc
nop
xor
add
jae
mov
in
mov
cmp
push
out
fwait
xor
pop
rorl
nop
cli
cmovl
sub
cli
cmpsl
add
lds
daa
adc
or
fstp
fwait
and
dec
in
cwtl
mov
sub
outsl
pushf
cmp
jb
rorb
inc
nop
outsl
mov
xchg
call
lea
leave
xchg
out
fdivr
popf
cmp
dec
aas
push
add
xor
fwait
lock
push
or
cmpsl
mov
sbb
pop
mov
dec
lock
aad
arpl
cmp
xor
lods
sbb
movsl
adc
mov
mov
fwait
xchg
ret
dec
inc
repnz
test
rorl
scas
mov
sarb
xor
ret
scas
sub
in
or
pop
call
pop
test
notb
sub
out
push
xor
enter
pop
mov
aaa
mov
sti
fdivrs
pop
inc
inc
stos
xor
sub
paddsw
cltd
out
outsb
lcall
adc
sub
out
fwait
icebp
pop
inc
aas
test
sub
or
inc
cltd
in
push
sub
sbb
ds
jno
sub
push
cltd
movsl
mov
dec
js
aam
hlt
sbb
into
adc
enter
sbb
xor
or
inc
xlat
subb
jp
push
dec
shrl
and
push
adc
push
cmp
fstpl
pushf
push
iret
icebp
imul
repnz
mov
xchg
or
xchg
in
inc
inc
fwait
lahf
cmpl
xor
inc
inc
lds
xchg
imul
sar
fbld
arpl
in
cmp
lret
fstpl
xlat
lods
lods
sub
repnz
jo
jl
cltd
sub
loop
addl
inc
jp
sahf
jmp
movsb
mov
inc
xchg
mov
mov
dec
into
not
push
cmp
dec
mov
stos
out
mov
in
data16
jmp
mov
mov
push
gs
xor
lds
dec
cld
imul
sbb
pop
and
xor
imul
ljmp
and
jecxz
and
pop
xor
lods
pop
xor
pop
mov
cld
cmp
sub
daa
xchg
cli
das
mov
sub
push
lret
add
les
jae
lret
push
stos
push
daa
sbb
in
xchg
ds
daa
fsubrs
lds
inc
mov
mov
test
sarl
fisubs
add
xchg
sbb
loope
mov
add
imul
nop
lret
mov
add
rcrl
insl
das
mov
push
inc
repz
pushf
test
or
pushw
fmuls
pop
std
add
fmuls
and
addl
push
push
cmp
mov
dec
insl
dec
adcl
push
cltd
mov
push
and
xchg
ficoms
jmp
mov
imul
inc
popa
and
mov
int
repz
mov
jmp
adc
imul
xlat
fs
mov
shl
orl
orb
je
cmp
les
push
fwait
out
stos
jecxz
ljmp
jmp
sub
cmp
and
popa
jmp
or
inc
sub
filds
data16
ret
cmp
jmp
ret
test
mov
shl
xchg
mov
fldcw
mov
popf
cmp
shlb
inc
stos
pop
cltd
aad
pop
fstps
and
jmp
lfs
mov
add
inc
test
test
sub
hlt
push
mov
jl
push
dec
fstpl
out
js
add
mov
push
fiadds
mov
lds
dec
and
ja
xor
mov
mov
add
push
mov
lea
xchg
shr
sbb
fwait
mov
lcall
add
les
icebp
movsl
mov
scas
out
add
and
pop
fisttpll
sbb
cmp
lret
jl
roll
popf
cltd
dec
and
push
pop
push
sub
leave
sbbb
stc
dec
and
rcll
xor
imul
ds
int
sub
insl
clc
lods
iret
pop
adc
insl
imul
lods
mov
mov
ret
ss
adc
push
push
sar
ror
arpl
popf
div
jle
in
ret
xchg
push
sbb
stc
cmp
pop
xor
orb
mov
xchg
es
and
dec
and
cltd
push
sbb
fsub
enter
pop
hlt
sub
mov
mov
pusha
sub
ja
js
addr16
adc
out
mov
push
push
repnz
data16
test
ds
popl
sbb
cmp
pop
inc
push
dec
sahf
jb
and
imul
in
xor
pop
in
out
call
mov
cmp
pop
repnz
push
push
mov
mov
int3
enter
sbb
js
jnp
or
popl
sbb
adc
mov
ror
cmc
pop
cmp
cmpsl
popf
pop
loop
xchg
mov
clc
xchg
mov
rorb
lret
inc
stos
scas
push
out
mov
enter
in
inc
out
pop
or
dec
into
ljmp
adc
inc
push
pop
add
xchg
push
lahf
cltd
pop
mov
fwait
movsb
popa
call
call
dec
lds
insb
xchg
adc
mov
int
xor
rclb
lret
cwtl
mov
and
clc
idivl
lods
pop
xor
roll
adc
mov
dec
cmp
inc
lds
pop
mov
aad
aad
ds
xchg
mov
into
add
fadds
adc
push
push
daa
test
cmpsb
js
push
adc
fcoms
mov
xor
mov
inc
test
cwtl
outsl
movsl
sti
add
js
push
adc
je
sub
jecxz
dec
mov
adc
lods
pop
nop
push
pusha
sub
or
push
sub
mov
mov
and
push
sub
xchg
les
dec
je
dec
stos
push
push
push
fmull
loop
icebp
jo
pop
adc
dec
loope
fsubrp
pop
pop
dec
adc
leave
lret
push
into
cli
pop
cltd
mov
xor
lods
lods
dec
mov
pop
and
sbb
adc
and
add
sub
and
outsb
mov
push
nop
and
jno
loopne
movsb
popa
jmp
pop
dec
pop
or
ja
js
add
add
mov
test
movsb
js
push
adc
fwait
mov
fidivrs
cli
sbb
adc
xor
subl
mov
test
sub
adc
adc
adc
push
sub
adc
inc
jo
popf
cmp
sarb
jge
or
lea
sahf
daa
adc
mov
push
mov
mov
xor
mov
add
lea
adc
dec
outsb
test
mov
push
xor
add
popf
push
stos
push
es
mov
xlat
lods
pop
cmp
int3
mov
cmp
pop
sbb
or
leave
push
push
push
test
add
in
scas
push
ss
mov
add
repnz
loopne
or
cmpsl
data16
push
adc
jmp
mov
das
stc
xor
fwait
mov
out
cld
inc
or
jo
adc
pop
das
lret
jp
aaa
cmp
xchg
outsb
leave
xchg
inc
rcrl
popa
cltd
into
mov
lds
iret
or
roll
pop
ds
xchg
mov
jmp
fnsave
ss
fstps
adc
jmp
fisttps
or
icebp
inc
lock
test
jle
push
cli
add
ds
xor
fistl
or
mov
daa
xor
jae
push
je
push
adc
das
loop
fnsave
les
insb
int
test
xor
cmp
adc
add
jae
mov
shlb
adc
add
xchg
push
call
mov
pop
xchg
jo
fimuls
daa
mov
inc
loope
pop
inc
lahf
push
in
pop
enter
repz
sahf
sub
ds
movl
jle
jg
icebp
mov
in
lret
in
mov
mov
setno
lahf
jecxz
sbb
cld
sub
pop
nop
lods
ret
call
lods
ffree
js
pop
loope
dec
leave
icebp
xor
inc
mov
inc
dec
mov
jmp
lea
jbe
movsl
sbb
mov
jno
fmull
jmp
mov
cwtl
fstps
or
dec
dec
ficoml
add
aad
push
aam
push
outsl
xchg
mov
adc
into
scas
dec
adc
pop
dec
ljmp
cmc
sahf
outsl
inc
cmc
or
nop
jo
adcl
mov
and
xor
lods
out
push
jge
cmc
push
adc
cltd
xor
jg
lds
bound
pop
shlb
xor
pop
inc
mov
or
adc
push
sub
cmp
and
repnz
inc
inc
sarl
int3
mov
imull
or
sub
push
loopne
xchg
fidivs
and
cmp
sub
xchg
mov
push
add
jl
ja
lods
pop
cmp
rcrl
xor
dec
int
dec
sbb
cwtl
mov
shrl
and
int
bound
aad
push
pop
mov
or
jge
sbb
mov
mov
lods
dec
mov
lds
pop
out
mov
testb
std
hlt
xchg
sub
mov
xor
dec
bound
incb
shrl
clc
imul
and
dec
lcall
shl
xchg
jb
mov
clc
mov
or
and
and
daa
sub
pop
lock
iret
pop
adc
gs
cmp
inc
push
cli
sahf
addr16
sub
push
pop
cmp
jecxz
call
aam
cmc
pop
inc
push
loope
sub
and
inc
sbb
cmpsb
shl
cs
sub
push
xor
mov
pushf
xor
pop
mov
jae
push
inc
push
inc
add
mov
gs
test
xchg
mov
mov
sub
xor
inc
test
xchg
shlb
flds
pop
jnp
fnstcw
cmc
lcall
jmp
mov
lret
or
push
sub
cmp
stos
jmp
fwait
das
popa
dec
les
jae
push
dec
prefetch
push
and
and
jb
push
push
imul
fwait
popf
sbb
pop
adc
pop
pop
fstl
or
dec
jb
or
vandps
or
pop
mov
test
aad
jne
pop
mov
mov
inc
inc
lds
daa
negl
jg
jp
scas
push
mov
adc
shrb
mov
out
xchg
or
mov
repz
jmp
mov
pop
and
mov
mov
dec
dec
mov
sub
faddl
in
push
loop
xor
jns
inc
test
jb
cmp
rcll
inc
dec
ret
pop
dec
xor
or
or
xor
cmpsb
and
jbe
or
jb
cmp
xor
loope
repnz
mov
sbb
xchg
loope
mov
fdivl
jg
pop
pop
stc
mov
sub
loop
aam
clc
mov
sub
hlt
cmp
and
mov
xor
inc
jmp
or
or
dec
sbb
int
or
jo
sbbb
xor
in
mov
xchg
mov
lret
leave
jo
pop
notb
insb
xchg
hlt
and
xchg
int
fsubl
subb
jae
mov
push
inc
mov
inc
xor
pop
adc
cs
aaa
inc
xlat
add
add
add
pop
mov
in
bound
xor
adc
cli
xchg
dec
mov
sti
sub
aam
out
mov
aad
push
sbb
push
lods
lods
iret
pop
adc
jno
mov
hlt
dec
adc
ss
sub
and
scas
test
dec
popa
sahf
cld
mov
push
or
mov
mov
pop
repnz
xchg
mov
mov
cs
xchg
push
cmpsl
pushf
jmp
jo
daa
ror
pop
rcll
push
jb
outsl
inc
popf
jb
xchg
push
ror
lcall
out
add
or
scas
jmp
dec
inc
ret
push
lods
fnsave
aad
arpl
fmul
popf
hlt
cld
sbb
pop
xchg
add
es
push
mov
movsl
lahf
hlt
jb
mov
sub
xchg
jmp
cwtl
sub
adc
mov
out
xor
fsts
call
cmpsl
cmp
cmp
push
xor
xlat
sub
push
shl
mov
and
arpl
lret
ds
cs
cmc
sub
lret
pushf
mov
xor
mov
mov
cld
shl
ret
push
lods
rolb
dec
je
push
mov
mov
adc
lcall
stos
pop
jne
push
lret
fucomp
mov
es
mov
mov
shrb
adc
xor
mov
push
inc
dec
push
sub
cltd
mov
sti
mov
lcall
jno
add
lret
sar
sahf
outsl
lods
and
sbb
out
mov
add
push
cmpsl
cmp
shll
lock
sbb
mov
mov
mov
jo
cmp
cmp
jecxz
les
gs
ljmp
and
addl
shrl
pop
data16
xor
sub
push
ja
aad
lcall
fbld
push
lods
jp
scas
adc
in
test
push
fistps
cmp
inc
mov
inc
popf
dec
loop
sbb
adc
sbb
fmuls
and
je
pusha
bound
push
lahf
imul
daa
fsubrp
pop
sub
push
stos
in
pop
out
cmp
jl
cmpsl
lds
ja
add
jnp
xor
mov
xor
sub
jge
pushf
mov
pop
shrb
out
fnstsw
lcall
add
jecxz
clc
or
ret
andl
pop
inc
cs
fistl
adc
aas
inc
inc
dec
adc
add
sbb
outsb
dec
fisubrs
mov
dec
popf
inc
sub
cltd
add
jne
inc
outsb
lock
jae
ja
and
mov
jb
adc
jg
xchg
sub
pushf
insb
adc
subb
add
add
cmp
mov
test
arpl
addb
int3
icebp
adc
pusha
aaa
add
addb
loopne
daa
mov
cltd
movsl
repnz
sbb
xor
push
fdivl
fsubrl
mov
divl
push
or
mov
cmpsl
les
or
insl
sub
das
push
pop
in
rorb
sar
enter
and
adc
icebp
jecxz
xor
ficomps
lods
or
mov
inc
into
push
xchg
inc
xchg
ss
outsl
cwtl
loope
rcrb
sbb
mov
add
dec
lret
inc
sub
adc
inc
dec
inc
and
aaa
dec
mov
imul
in
jo
arpl
lods
pop
add
int
lret
mov
inc
les
lea
mov
andps
cs
std
jmp
popa
mov
mov
add
xchg
jns
sub
and
dec
in
addb
push
adc
inc
ret
push
dec
in
out
push
jne
pop
das
xchg
jmp
mov
xor
nop
push
inc
icebp
or
push
andb
daa
lahf
pop
xchg
nop
add
jg
out
xchg
leave
adc
leave
std
push
pop
inc
sub
adc
xor
in
push
mov
cmpsl
stos
lds
lret
ds
lods
inc
mov
imul
in
xor
xchg
movsb
xor
inc
pop
mov
les
sub
sub
outsl
jbe
cltd
dec
dec
bound
fwait
movsb
sarb
add
fs
cmp
fisubs
out
cwtl
loopne
repz
ljmp
cmp
loopne
jbe
jnp
adcl
sub
mov
loop
cld
mov
jmp
pop
jecxz
add
sarb
xchg
jp
xchg
cmpb
test
xchg
adc
pop
and
xchg
sbb
sbb
xor
inc
in
sbb
jecxz
out
cld
pop
push
testl
out
cmpsl
adc
outsb
inc
inc
inc
jbe
stc
sbb
or
aaa
or
and
mov
mov
xchg
call
and
xchg
sbb
cld
mov
daa
sahf
out
mov
pop
lds
cmp
sahf
mov
aaa
xchg
inc
outsb
push
outsb
cvtps2pd
dec
movsb
dec
lock
push
out
test
cmp
stos
fidivrs
mov
fwait
in
sub
imul
daa
int3
std
sbb
aas
mov
cltd
mov
inc
dec
popf
cmp
push
and
call
int
inc
mov
pop
ficoms
sbb
sbb
fidivrl
les
into
push
les
dec
popf
cmp
push
sub
jg
inc
pop
std
or
cmp
int3
push
mov
xchg
dec
into
sbb
mov
cltd
xchg
lret
loop
ficoms
loope
dec
adc
gs
jnp
pushl
xchg
aad
cmp
cmp
enter
setne
add
sub
sub
fdivl
mov
push
cld
ljmp
es
mov
sub
xchg
test
xchg
push
idivb
clc
rcrb
or
push
lds
pop
pop
dec
cli
or
insb
pop
fistl
lcall
nop
mov
std
sbb
cmp
push
aaa
sbb
cwtl
rcl
pop
stc
or
adc
xchg
in
insl
ja
dec
mov
push
pop
xchg
mov
sbb
mov
pop
insb
int
adc
cmp
in
pop
jl
scas
movsl
xlat
inc
inc
mov
sti
sub
pop
andl
mov
xchg
sti
jno
mov
lret
imul
fwait
test
fldcw
add
rcrb
push
adc
pop
nop
add
jmp
scas
fnstenv
and
test
push
jae
in
dec
in
iret
or
mov
cmc
sbb
push
sbb
imul
lahf
push
insb
lcall
das
outsb
out
pop
stos
cmp
aad
jae
and
rcr
ret
xchg
xchg
das
movsl
xor
cmc
xchg
pop
es
and
ror
mov
icebp
das
in
lea
sbb
lcall
cmp
mov
xchg
and
pop
in
or
in
xor
dec
shl
cmc
xlat
add
jno
mov
addr16
out
push
and
gs
ss
daa
icebp
in
enter
cmpsl
pop
jbe
or
cs
andb
fistps
sbb
jno
push
outsb
sub
sbb
mov
add
stos
movsl
jmp
mov
vmovntdq
mov
or
fistpll
or
mov
mov
mov
mov
add
ret
and
stos
sbb
pop
fnsave
pop
sahf
cmp
xor
out
push
push
insl
mov
sub
mov
push
test
dec
fsts
testb
les
out
test
popa
subl
stos
mov
xchg
adc
in
rol
cmp
sarb
adc
or
and
mov
push
sbb
je
xchg
insb
jne
push
fmuls
loope
sub
call
test
jns
mov
test
cmp
shrl
andl
mov
inc
les
dec
popf
cmp
xchg
fnstcw
mov
dec
xchg
and
adc
insb
hlt
imul
fisttpl
mov
sbb
ja
ret
push
lods
pop
pop
loopne
gs
sub
adc
push
pop
add
mov
js
inc
mov
stos
inc
inc
lods
pop
mov
mov
xor
xchg
dec
sub
jmp
lahf
dec
popf
pop
loop
leave
mov
xchg
rcrl
testb
jb
lods
sub
inc
pop
mov
arpl
ja
js
mov
aas
push
lods
pop
ljmp
inc
xchg
dec
popf
cmp
lahf
imul
sahf
outsl
mov
mov
xor
cmp
mov
push
loope
les
dec
dec
in
cmp
push
adc
push
dec
in
mov
test
mov
inc
out
ljmp
fwait
das
enter
sub
xchg
push
pop
pop
insl
fwait
gs
arpl
cmp
rcrb
cmp
sub
outsl
mov
shrb
movsl
inc
out
cmp
bound
mov
fildl
leave
clc
add
xchg
push
mov
mov
repz
mov
mov
inc
dec
sbb
orl
sbb
fwait
inc
arpl
jmp
pop
jle
mov
cmpsl
pop
cmp
cwtl
jae
push
mov
shrb
add
outsb
pop
mov
inc
daa
or
xchg
int
cmp
or
add
nop
sahf
fists
out
ss
xchg
push
sbb
push
movsb
mov
fildl
push
fsubrs
shlb
inc
mov
xchg
xor
shrl
xchg
pop
mov
xor
pop
and
scas
push
sub
sbb
mov
pop
mov
in
dec
push
out
shl
imul
xchg
inc
daa
or
and
pop
lods
pop
test
leave
push
cs
push
test
jbe
mov
repnz
jmp
xchg
mov
test
jp
out
ss
test
lret
pop
cmp
pop
xchg
push
ss
inc
mov
loope
sub
fmull
inc
adc
nop
and
adc
xchg
in
shll
xchg
cmc
fiadds
lods
and
mov
push
add
ja
daa
nop
push
jb
adc
cmp
cli
mov
mov
imul
adc
or
popf
xchg
jb
push
add
jmp
out
xor
sub
adc
lcall
fstl
jecxz
cs
pop
fistps
nop
repz
adc
pop
pushf
jo
adc
addr16
push
testb
imul
es
leave
dec
int3
jnp
cs
jno
adc
xor
into
in
add
xor
lock
jns
cmp
ficoml
cltd
cltd
dec
ljmp
xchg
jae
inc
repz
leave
pop
adc
inc
es
add
sbb
adc
pop
adc
test
push
mov
leave
clc
movsb
cmp
testb
imul
and
das
fld
dec
rolb
sub
es
pop
adc
addr16
roll
out
in
pop
mov
jmp
out
cld
in
jmp
mov
sub
push
adc
fldcw
sbb
dec
jmp
ja
ficompl
mov
and
adc
xchg
cmc
pusha
and
adc
xor
roll
sbb
or
jnp
push
pusha
sbb
or
adc
cmp
cmp
adc
pop
data16
mov
cmp
adc
popl
mov
mov
movsl
xor
pop
adc
roll
arpl
shll
roll
cmp
inc
cmpsl
push
cmpsb
dec
aas
dec
xlat
leave
xchg
ds
mov
cld
testb
jns
push
xor
or
mov
stos
push
test
mov
xor
sub
jb
movsl
dec
out
fiadds
stos
fbstp
mov
cltd
xor
scas
fisubrl
mov
vmovhpd
jns
popf
cmp
aam
andl
xchg
cli
xor
imul
pop
pop
decb
sub
ja
sarb
adc
sbbl
sub
sub
adc
inc
add
sarb
adc
popa
and
lret
idivb
cmpsl
subb
lahf
mov
mov
pop
adc
xchg
push
sub
adc
in
loop
lret
pop
adc
and
rcr
inc
push
mov
and
in
leave
sbb
xchg
sub
pop
xor
mov
xchg
cmpsl
xor
adc
pop
adc
cwtl
xchg
repnz
jmp
and
adc
call
lds
shlb
fwait
xorw
sub
mov
cmp
loope
adc
mov
or
push
adc
adc
shrb
mov
cmp
pop
xlat
rorb
dec
xor
imul
cmpsb
mov
pop
call
lret
pop
adc
adc
mov
into
pop
adc
add
jbe
jb
jle
lods
add
add
mov
push
adc
stos
pop
mov
xlat
pop
cs
mov
push
hlt
lcall
jns
pushf
shlb
popf
lds
sti
fdivp
push
out
mov
scas
push
ss
adc
mov
xchg
fdivrl
mov
rcll
mov
lret
out
adc
scas
sbbb
test
xchg
ret
jmp
pusha
adc
mov
adc
adc
or
sub
cmpsb
rolb
jmp
testb
mov
sub
sbbb
mov
fbld
cmp
jo
lret
sub
push
xchg
stos
pop
pop
out
push
xchg
mov
jmp
jb
js
mov
cmp
ror
or
mov
cmp
pop
sub
add
ret
lods
push
cwtl
or
sub
xor
mov
outsl
outsl
imulb
movsb
lods
iret
pop
adc
ja
xchg
push
xchg
cmpsl
cmp
xchg
cld
cmp
mov
push
adc
inc
pop
mov
push
sbb
dec
jp
in
mul
push
push
dec
xlat
or
aad
xchg
push
adcb
outsb
enter
cltd
push
ja
xor
xchg
popa
add
dec
mov
and
stc
xchg
push
xor
and
clc
nop
adc
clc
icebp
push
sub
jl
or
fldenv
push
sub
stos
subb
mov
orb
cmp
ja
sub
repz
das
cld
fisubl
push
jbe
sbb
lock
repnz
jne
in
xlat
in
sbb
and
mov
stos
aam
xlat
pop
shll
imul
xchg
jbe
push
daa
lcall
xor
sub
dec
sub
or
jno
sbb
xchg
fiaddl
fucomi
cmpsl
in
cmp
repnz
ljmp
ljmp
jp
adc
mov
out
imul
rol
push
xchg
jl
cmpsl
les
pusha
cmpsl
dec
inc
test
and
jno
xchg
mov
scas
mov
pop
cmp
enter
inc
test
ljmp
mov
or
sbb
popf
imul
push
dec
outsb
scas
lods
iret
pop
adc
enter
lods
sar
inc
shr
aad
dec
pop
shr
loopne
push
jb
sub
mov
adc
cld
mov
mov
pop
mov
or
mov
jno
shl
ljmp
fildl
and
cmpsl
dec
push
push
add
mov
push
les
jg
adc
iret
pop
adc
insb
and
daa
test
pop
and
push
cmp
pop
in
add
leave
push
xor
lods
pop
cmp
je
fsubrl
jmp
rorb
or
mov
lret
stos
sub
adc
ficompl
xor
faddp
pop
mov
sub
inc
dec
xor
and
pop
cmp
xor
cmc
push
movsb
jp
jmp
cmp
insl
stc
ror
ljmp
cmp
and
push
imul
or
cmpsl
cmp
and
jg
ret
test
or
jmp
mov
cmpsl
cmp
lock
jp
pusha
and
dec
adc
jb
pusha
lods
inc
dec
bound
cmovle
int3
pusha
pushf
out
mov
or
stos
push
pop
out
gs
jmp
arpl
xchg
cmpsl
dec
mov
adc
andl
dec
insb
mov
jno
and
es
std
add
test
stos
das
xchg
hlt
shl
and
and
adc
pop
cmp
add
mov
xor
in
lret
les
test
jno
fbstp
push
add
in
inc
cltd
xchg
test
cld
stos
sub
dec
push
call
ficomps
popf
cmp
dec
cltd
jnp
fildl
sbb
lock
adc
loope
stos
inc
cmp
cwtl
fsts
sbb
cmp
pop
adc
mov
push
or
cmp
test
movsb
imul
inc
and
rcrb
fs
in
lcall
cmp
pop
scas
ds
sti
mov
lret
add
leave
in
add
enter
or
xor
push
adc
sbb
sub
rorb
fistps
push
sahf
or
lcall
pop
mov
lds
mov
and
loopne
lahf
ja
xchg
mov
sub
or
out
xor
cmpsl
shl
xor
scas
movsl
mov
cltd
pop
jl
adc
out
or
cs
in
dec
mov
outsl
jb
or
inc
clc
lods
jne
xchg
inc
mov
test
xor
adc
jb
jp
and
iret
pop
adc
push
adc
pop
adc
push
xchg
cmc
jbe
call
push
mov
or
mov
pop
mov
add
sarb
mov
mov
in
iret
pop
adc
cltd
jae
jne
hlt
aad
push
pushf
mov
and
add
das
mov
add
psrld
outsl
aaa
scas
into
cli
mov
mov
into
dec
repnz
stos
sbb
lods
daa
mov
dec
fdivrp
mov
cmp
mov
test
fwait
insl
addw
lcall
adc
popf
cmp
jmp
inc
icebp
sub
mov
gs
movsl
arpl
enter
sub
loope
ja
mov
test
xchg
dec
inc
push
fstp
push
cmp
sub
push
cmpsl
call
les
popf
cmp
clc
push
sbb
sub
mov
xchg
ret
test
fmuls
stos
roll
and
divl
int
out
xchg
or
daa
sbb
pop
or
adc
cmp
sbb
sbb
inc
cmp
or
out
push
mov
add
arpl
inc
push
xor
sar
outsb
dec
lds
or
adcl
lods
pop
xor
xor
lods
pop
cmp
and
xchg
cmpsl
dec
mov
scas
jge
ljmp
mov
pop
xchg
daa
sub
jb
int
test
push
dec
imul
test
pop
in
test
xor
mov
mov
mov
push
test
jp
jecxz
pop
jmp
stos
sub
sub
fstpt
fwait
rcl
movsb
inc
cmp
ja
and
loop
and
mov
lcall
or
cmp
push
dec
insl
adc
aad
repnz
movsl
mov
mov
inc
sub
cmp
dec
movsl
sbb
out
leave
dec
test
adc
dec
cltd
push
gs
addr16
mov
jl
xor
add
jp
sahf
pop
pop
std
mov
xchg
sbb
push
push
mov
iret
add
and
mov
dec
xchg
es
pushf
dec
sub
fucomip
mov
frstor
lods
pop
cmp
and
xchg
cmpsl
dec
mov
stos
outsb
std
ljmp
mov
jmp
imul
ficoml
cmpsl
mov
mov
pop
push
cltd
xchg
outsb
shl
inc
icebp
xor
cmpsl
test
scas
pop
lds
xlat
xor
add
mov
xchg
std
or
adc
pop
mov
pop
or
inc
notl
inc
lods
and
xor
aas
xchg
movsl
mov
lea
xchg
add
jnp
sub
mov
mov
es
loop
ds
dec
inc
sbb
rolb
xchg
cmp
or
mov
lret
in
xchg
stos
dec
sbb
jmp
je
out
outsb
sbb
stos
jae
sbbb
jge
mov
jg
pop
push
outsb
and
loopne
sub
iret
inc
sub
adc
mov
pop
enter
lds
clc
loop
lcall
subl
xchg
add
nop
in
sbb
les
pop
or
pop
dec
push
dec
imul
sub
rolb
fs
repnz
pop
ror
fimull
shl
adc
jmp
and
push
lods
or
lods
iret
pop
adc
inc
pop
add
cli
mov
out
jnp
lret
in
jb
pop
inc
sub
mov
push
dec
invd
inc
fwait
sub
cmp
int3
and
test
jae
test
jnp
int3
cmp
test
xor
push
jmp
arpl
call
inc
sub
xchg
xchg
imull
or
nop
adc
aad
js
dec
pop
icebp
outsl
pop
dec
pusha
bound
jbe
jbe
scas
xchg
iret
sbb
out
push
push
or
add
movl
sahf
push
mov
lret
pusha
push
cmpsl
call
int3
pop
mov
les
jl
jge
shrl
cwtl
xor
pop
mov
lods
out
cld
sbb
lock
out
push
test
sub
inc
inc
add
push
cmp
or
xchg
mov
mov
mov
inc
rclb
fldt
ljmp
adc
test
sub
in
cwtl
xchg
mov
xlat
jmp
sbb
imul
mov
or
xor
pop
aad
mov
add
or
lock
insb
repnz
nop
push
fiaddl
cmp
cmp
xor
jp
push
mov
shlb
sahf
pop
cmpsl
dec
loope
fwait
push
imul
mov
lcall
sahf
mov
sar
mov
push
adc
out
dec
popf
notl
jl
insl
inc
cmp
push
and
enter
imulb
sub
mov
inc
jmp
insb
fwait
addr16
mov
out
pop
daa
xchg
aad
aad
mov
lods
pop
xorb
dec
and
fistpll
test
dec
repnz
stos
mov
call
pusha
sub
loop
cmp
sub
test
adc
lds
in
xchg
mov
pop
mov
cltd
je
and
test
out
dec
cltd
inc
fucom
or
ja
movl
inc
stos
insl
xor
das
adc
cltd
inc
out
shl
stos
jo
push
rolb
adc
or
jno
out
js
pop
int
lret
push
lods
fsubrl
in
inc
outsl
cmp
cmpl
mov
cmp
add
pop
in
or
insb
sub
cmp
dec
cmp
gs
pusha
pop
mov
daa
xor
inc
shlb
idivl
pop
inc
ficompl
lock
push
aad
push
fmulp
ret
fldl
and
lcall
movsb
insl
cs
shlb
sub
inc
adc
push
pushf
loopne
daa
pop
dec
jge
fistps
movsb
sahf
dec
fwait
addr16
cmp
into
jno
cmp
daa
aas
and
ret
jecxz
es
loop
push
xchg
xor
das
jecxz
inc
or
lret
push
pop
pushf
adc
pop
xor
aad
je
fwait
aas
lods
and
rcll
divb
nop
and
lret
and
arpl
add
out
push
push
adc
inc
pop
jo
jo
and
fs
and
adc
test
add
or
mov
or
adc
jle
leave
push
push
pop
clc
and
adc
sbb
jge
and
adc
inc
xchg
gs
add
cld
and
adc
xor
xor
loop
lret
in
adc
add
jle
mov
lock
cmpsl
pop
dec
imul
mov
or
enter
enter
or
cli
sbb
mov
je
test
dec
je
mov
lds
lret
cli
and
bound
ficompl
xchg
xchg
or
mov
pushf
push
es
and
mov
pop
pop
jae
pusha
and
adc
and
adc
aam
and
adc
cmp
das
or
and
aad
in
inc
xchg
insb
jno
mov
xchg
xchg
lcall
cwtl
sbb
ret
adc
mov
cmp
pop
adc
adc
or
and
and
jp
xor
adc
loop
dec
out
lret
jno
orl
dec
std
cmp
dec
popa
mov
jp
stos
andl
xchg
in
aam
lcall
rdtsc
mov
sub
inc
loop
rdtsc
sub
dec
je
cmp
jne
ret
popa
xchg
xchg
xchg
nop
nop
mov
mov
nop
nop
call
xchg
xchg
xchg
nop
nop
mov
nop
nop
addl
xchg
xchg
xchg
nop
nop
mov
mov
nop
nop
sub
xchg
xchg
xchg
nop
nop
mov
nop
nop
addr16
xchg
xchg
xchg
nop
nop
mov
mov
nop
nop
mov
xchg
xchg
xchg
nop
nop
mov
mov
nop
nop
mov
xchg
xchg
xchg
nop
nop
mov
nop
nop
mov
xchg
xchg
xchg
nop
nop
mov
mov
nop
nop
dec
xchg
xchg
xchg
nop
nop
mov
nop
nop
jne
xchg
xchg
xchg
nop
nop
mov
mov
nop
nop
xor
push
mov
movsl
dec
push
or
push
lcall
adc
lcall
add
pop
jo
or
pop
arpl
push
sub
sub
sub
fstps
push
and
pop
adc
xchg
or
pop
cmc
pop
fsts
xchg
data16
in
add
testw
inc
leave
jg
cmp
pop
adc
lret
xchg
inc
js
or
arpl
loop
xor
inc
dec
in
testb
inc
push
stos
push
lods
or
jb
adc
sub
jmp
js
or
pop
ja
popf
xorb
mov
push
and
or
cwtl
xor
movsl
sbb
add
shl
jb
mov
push
dec
lds
ficomps
sub
out
xor
ret
and
adc
out
cs
xor
sbb
push
stos
aad
pop
mov
imul
ror
mov
fisubs
test
sub
andb
adc
out
jbe
or
gs
jnp
insb
popa
in
inc
lret
mov
mov
jo
icebp
sub
je,pt
push
adc
inc
out
mov
sub
mov
les
rcrl
arpl
add
adc
inc
or
sbb
jno
lods
pop
ljmp
xor
jb
add
jae
lods
pop
mov
fincstp
mov
mov
addr16
sahf
imul
data16
mov
pop
nop
arpl
fildll
xchg
and
mov
js
les
sbb
bound
int
je
push
adc
mov
into
mov
cli
sub
out
lret
xor
filds
jb
adc
push
js
jns
add
mov
xchg
pop
inc
je
dec
mov
ja
les
cmpsl
sbb
dec
pop
dec
mov
adc
push
adc
rcll
or
push
dec
and
sub
adc
dec
mov
shrl
ss
lahf
imulb
hlt
pop
and
aad
add
lret
sub
enter
aas
inc
sub
xlat
movsb
push
sbbb
cwtl
subl
pop
push
or
pop
out
jno
enter
movsl
call
push
mov
dec
push
or
jge
push
mov
jns
test
inc
cltd
mov
push
push
lcall
scas
push
jo
sbb
xor
and
inc
add
mov
dec
fcomps
mov
mov
cmp
mov
xor
push
or
push
in
mov
push
sahf
int
or
shll
add
movsb
andb
adc
out
mov
test
stos
mov
sbb
sbb
fnstenv
loop
dec
mov
pop
inc
or
iret
enter
and
mov
jmp
imul
cmp
sbb
loop
cmp
add
mov
pop
push
inc
insb
jb
adc
mov
mov
sub
in
sahf
inc
dec
adc
lcall
lcall
mov
sarb
je
call
dec
push
loop
loopne
std
mov
push
test
dec
xlat
leave
xchg
in
push
sub
pop
testb
add
sbb
mov
add
cltd
xor
icebp
addr16
pushf
mov
lds
popf
mov
out
push
lcall
test
adc
jo
in
outsl
sub
xor
sub
popf
fs
aad
ljmp
xchg
int
mov
into
daa
test
mov
mov
jmp
xchg
sub
rorl
push
add
xor
sub
cmp
push
shrl
out
xor
jb
adc
sub
fnsave
jno
cmpsl
call
xorb
andb
adc
add
mov
lock
lahf
cmpsl
mov
or
shl
sahf
dec
cmc
hlt
cs
and
adc
or
xor
popa
test
jecxz
or
or
cwtl
adc
adc
loop
pop
push
stos
aad
dec
cmpsb
ret
push
lods
xor
rcl
imul
test
adc
push
cmpsb
cmp
xlat
lods
pop
pop
xor
xchg
jmp
insb
pop
movsl
jno
or
xchg
data16
out
cmc
lods
pop
mov
mov
les
pop
add
xchg
xlat
mov
xor
cmpsl
movsb
fs
adc
mov
and
clc
loop
and
pop
mov
xchg
xlat
pshufw
adc
cmp
popf
lods
bndldx
sbb
dec
imul
mov
sbb
mul
pusha
add
jmp
and
insl
or
aaa
inc
add
or
pushf
mov
sahf
jo
fisubl
pop
jne
inc
add
cmpsl
shll
mov
inc
daa
enter
cmp
sub
pop
adc
cmc
sub
addr16
call
mov
mov
fistpl
clc
inc
outsl
xor
and
ret
sub
cmpsb
push
adc
pop
std
push
or
enter
adc
out
mov
sbb
aad
enter
fcompl
in
ss
push
sbbl
leave
mov
into
pop
adc
sbb
push
in
lcall
add
mov
flds
imul
lret
outsb
into
mov
cmp
imul
into
pop
adc
clc
push
adc
mov
or
sub
lods
sub
adc
push
fistl
icebp
nop
xor
jb
inc
sub
ljmp
dec
dec
pop
mov
ret
loopne
xchg
xrelease
lods
iret
pop
adc
inc
lods
xor
inc
fsubl
fists
shl
andb
adc
xor
into
pop
adc
jb
into
pop
adc
lock
test
pop
popf
in
cmp
and
stos
jle
inc
je
mov
stc
out
faddl
sub
adcb
xchg
into
pop
adc
cmpsb
ja
rcr
loopne
jo
adc
xor
pop
adc
push
add
subb
js
lret
and
ja
push
jns
or
dec
flds
adc
pop
adc
inc
shrl
pop
lahf
out
out
cmpsl
js
movsl
push
vdivsd
sti
push
iret
pop
adc
hlt
dec
jmp
pop
adc
into
pop
adc
adc
and
push
adc
mov
lock
pop
adc
sbb
je
cmpsl
mov
clc
cs
jp
shrb
pop
stos
push
lods
mov
or
jb
imul
add
aas
cmp
ret
adc
cmp
sub
shrl
xor
inc
test
cmp
pop
mov
scas
ja
fs
loop
subb
cmpsb
lea
xchg
data16
jne
cld
sahf
cmp
and
cmp
push
cmp
push
cmpsb
jo
jb
xchg
sub
jb
dec
addr16
imul
into
pop
adc
push
inc
push
dec
cltd
xor
cmc
xor
cltd
jae
roll
dec
push
cmp
push
dec
jmp
adc
test
or
adc
int
push
adc
sbbb
adc
adc
lahf
pop
cmc
out
insl
loopne
cwtl
arpl
fnstenv
addr16
or
ss
pop
std
dec
notb
das
mov
in
xor
notl
dec
bound
popa
mov
fdivl
adc
add
dec
cltd
mov
lods
pop
call
les
popf
cmp
sbb
aad
repnz
sbb
adc
fbstp
mov
sub
fmulp
ret
dec
cmp
push
stos
push
cld
mov
lds
gs
xor
or
adc
sbb
xor
adc
inc
shlb
inc
cmp
jbe
dec
popf
pushf
rolb
mov
popf
cmp
dec
jg
shl
fbstp
sar
add
xchg
lods
iret
pop
adc
mov
mov
outsb
jp
cs
shl
push
negb
imul
decb
cmpsl
mov
jecxz
xchg
sbb
and
mov
int
lods
iret
pop
adc
testl
adc
lods
iret
pop
adc
push
andb
adc
cld
insb
lds
lret
and
pop
adc
mov
push
mov
stc
lods
iret
pop
adc
cmp
test
mov
outsb
mov
push
xchg
lahf
fisttpl
je
xchg
mov
pop
iret
pop
adc
movsl
dec
sahf
sahf
add
sbb
cwtl
push
ja
aad
and
push
insb
pop
dec
push
cmp
xor
mov
fidivrs
cld
jmp
jns
repnz
loope
sahf
push
neg
mov
outsl
mov
mov
cmp
repz
subl
jne
push
mov
lods
xlat
lea
loope
mov
adcl
in
fsub
pushf
push
jne
add
das
clc
mov
je
pop
mov
ja
push
push
cld
orb
fsubr
pushf
imul
adc
mov
xchg
repz
mov
sub
cltd
pop
loopne
mov
pushf
cmpsl
idivb
dec
push
pop
call
xchg
and
loopne
dec
pop
notb
dec
lea
stos
adc
cltd
jp
rorb
test
std
push
adc
cmpb
cwtl
pop
pusha
or
rcr
psrad
xchg
inc
cmp
mov
inc
xchg
mov
jb
jg
mov
cmp
jmp
insl
xor
sub
cmp
outsb
inc
mov
jl
jle
adc
adcl
xchg
add
push
fidivrs
sub
cs
enter
clc
std
push
adc
into
in
xor
xor
xchg
test
pop
repnz
mov
dec
in
adc
in
or
pop
cmp
and
sub
xor
in
rolb
adc
pop
xor
add
xor
inc
loopne
xchg
imul
rolb
adc
fs
pop
cmp
pop
mov
lock
rolb
adc
mov
mov
adc
push
push
insb
in
rolb
adc
inc
sub
psubb
pop
adc
loopne
jge
adc
and
rolb
adc
cltd
xor
repz
mov
jmp
inc
dec
and
cmc
and
movsl
fldenv
scas
in
rolb
adc
xchg
call
roll
adc
ds
clc
jne
lock
adc
sub
arpl
mov
dec
loope
in
rolb
adc
adc
icebp
lcall
lods
pop
adc
enter
rol
push
pop
sub
lret
shl
sub
pop
mov
dec
movsb
jbe
loop
es
mov
popf
imul
inc
int3
push
sub
pop
lret
add
or
das
shll
les
or
inc
enter
and
arpl
jle
iret
pop
adc
inc
xchg
loopne
rolb
adc
ret
push
shrl
imul
or
sbb
cwtl
call
movsb
jp,pn
ljmp
dec
jecxz
ret
insb
push
iret
and
fstpl
shlb
or
fdivr
and
cs
fstps
cmpsb
and
xor
mov
and
adc
add
cmc
inc
inc
pusha
rolb
adc
mov
cmc
add
imul
bound
mov
push
adc
std
add
pop
adc
dec
loope
xchg
loop
dec
shlb
or
aad
mov
cltd
dec
pop
cmp
stos
mov
jle
and
adc
std
add
or
cmc
ljmp
pop
adc
aad
dec
popf
pushf
rcrb
mov
ljmp
fcmovnb
jge
out
pop
xor
or
add
push
cmp
and
fists
or
pop
and
dec
andb
sahf
xchg
in
push
xor
mov
jno
lcall
in
rolb
adc
fidivrl
cmp
inc
dec
dec
jbe
mov
pop
adc
adc
and
data16
sub
fwait
cmp
shlb
loope,pt
jo
rolb
pop
sbb
pop
sub
in
rolb
adc
pop
stos
xor
push
imul
lahf
or
or
test
dec
pop
mov
mov
xor
out
lea
or
adc
inc
xchg
jl
jo
jmp
jg
or
test
in
rolb
adc
fdiv
or
enter
add
jle
hlt
dec
xor
mov
adc
mov
loopne
pop
push
push
mov
adc
outsl
lcall
sahf
ror
pop
adc
jo
lea
call
sub
pop
scas
or
pop
mov
mov
pop
adc
add
inc
ror
push
jecxz
cmpsb
ja
out
push
sub
je
inc
xchg
dec
add
in
push
iret
push
stos
flds
nop
aaa
jnp
stc
push
mov
cmp
pusha
mov
pop
inc
xor
into
inc
arpl
sbb
sub
loop
push
je
mov
pop
adc
mov
js
fsub
xchg
or
lock
test
aas
pop
mov
or
fmuls
std
adc
mov
xorb
push
adc
xchg
insb
sbb
fwait
and
call
xor
cld
aaa
loop
stos
sti
mov
shlb
int3
mov
cld
push
adc
les
sbb
das
jmp
and
sbbl
iret
pop
adc
cmp
addr16
pop
adc
adc
adc
mov
cmpsb
adc
lock
adc
bound
shll
cmp
fdivp
pop
hlt
ljmp
adc
pop
sub
cmpsl
cmp
andb
adc
inc
dec
sub
gs
iret
pop
adc
shll
out
js
push
in
rolb
adc
or
sarl
lret
imul
or
xor
jecxz
enter
std
fstpl
push
mov
jo
and
pop
and
stos
orl
sub
scas
and
insl
ss
rolb
adc
pop
ds
push
les
les
dec
int
add
adc
loopne
ss
int
xor
mov
sub
into
pusha
fwait
xchg
jge
incb
adc
mov
sbb
lcall
insl
inc
dec
push
sub
lcall
aas
or
mov
lcall
bound
rolb
adc
dec
int
jno
jp
std
insb
jmp
test
or
inc
adc
popf
cmp
insb
cmp
hlt
mov
and
pop
adc
mov
push
hlt
jge
adc
cmp
out
test
lea
sahf
pop
mov
test
es
xor
lds
xchg
popf
cmp
push
fmull
ja
stc
js
leave
and
ljmp
mov
mov
nop
push
xchg
pop
lds
or
sub
xor
cmp
adc
inc
jbe
cmpsb
dec
in
cmp
fadds
out
cmp
xor
subb
jns
adc
mov
lret
pop
js
clc
out
rolb
adc
xlat
leave
pop
xor
pop
jb
and
ss
sub
fwait
imul
push
popa
jne,pn
mov
and
mull
sub
sub
pop
adc
push
pop
mov
and
jmp
rolb
adc
jno,pt
repnz
cmp
pop
adc
das
pop
test
mov
push
arpl
lahf
xor
pop
jns
or
push
adc
loope
aad
cmp
lret
push
mov
mov
daa
pop
cmpsl
fstps
mov
icebp
xchg
cmp
lods
mov
inc
test
mov
imul
dec
lret
sub
push
aaa
test
lret
xchg
fstl
adc
insb
loopne
mov
pop
jo
outsl
rorl
and
ret
sbb
xor
xchg
rolb
lods
jb
stos
andb
adc
or
sub
fcmovnbe
inc
iret
mov
push
insl
ljmp
or
pushf
and
je
aad
adc
roll
adc
daa
or
ret
dec
xor
or
insl
add
or
lret
dec
sub
pop
lahf
sti
mov
rolb
adc
pop
mov
inc
ret
and
pop
adc
leave
pop
adc
sarb
fwait
ret
scas
lods
iret
pop
adc
mov
dec
pop
iret
pop
adc
pushf
ss
jbe
add
mov
iret
pop
adc
push
fdivl
push
loop
popf
lea
sahf
cli
push
adc
mov
mov
out
loopne
inc
shl
negb
mov
mov
and
out
ja
int
mov
inc
sbb
jno
pop
mov
pop
adc
push
fdivrs
add
sub
cmp
push
pop
ffree
in
jg
daa
pushf
adc
and
cmp
sub
mov
nop
lret
cwtl
inc
push
mov
push
inc
mov
ret
push
lods
ficoml
loop
lcall
bound
push
adc
push
sbb
fnstcw
xor
mov
lds
jae
pop
cmp
aam
gs
aad
scas
insl
fistpl
arpl
daa
sahf
jo
movb
and
jns
cmc
add
test
notb
push
stos
aad
pop
mov
fcoms
inc
arpl
xchg
add
cmpsl
lds
pusha
sbb
inc
test
dec
daa
sbb
mov
daa
cmp
push
cmpsl
and
fwait
push
mov
ret
push
cmpsb
pop
jg
lcall
mov
push
sub
ret
enter
inc
orl
frstor
out
lods
pop
mov
leave
arpl
pop
mov
inc
mov
and
cmp
pop
mov
gs
movsb
fnsave
fiadds
pop
xor
clc
inc
inc
fs
loopne
adc
inc
mov
js
sub
popf
cmp
in
pusha
hlt
outsb
lret
sbb
loop
aad
stos
push
cli
rolb
int3
cltd
repz
jb
ficoml
cmpsl
adc
sub
jmp
push
data16
push
or
push
lods
pop
mov
push
dec
pushf
in
lods
inc
incb
adc
mov
stos
and
mov
das
cmp
ljmp
popf
fs
xor
shl
mov
daa
sbb
jmp
dec
cltd
dec
mov
dec
or
push
xchg
mov
cmp
mov
stos
js
lods
sar
jb
add
mov
jns
adc
mov
jle
gs
jg
inc
xor
popf
cmp
sarb
shl
addb
and
fsubrp
mov
sub
jo
push
xchg
cmp
daa
cmpsl
sbb
adc
cmovle
stos
sub
ja
lret
stos
adc
adc
push
aad
xchg
push
xchg
bound
icebp
mov
ret
aad
sub
and
cltd
ss
ljmp
and
add
iret
incb
cwtl
imul
jb
in
inc
leave
out
add
or
xchg
andl
ror
mov
and
and
outsb
stc
bound
sub
gs
push
xchg
and
xor
adc
pop
or
dec
mov
test
push
xor
xor
icebp
fcoml
jp
sbb
lcall
lea
pop
jbe
or
scas
or
loop
push
sbb
xor
imul
hlt
inc
jg
rclb
lods
sti
filds
inc
mov
add
outsb
inc
pushf
in
popa
call
mov
push
mov
icebp
xchg
xor
or
and
test
fwait
pop
addb
in
cmp
dec
aad
insb
mov
add
mov
in
push
and
mov
es
incb
adc
xor
dec
shll
mov
addl
mov
mov
mov
mov
jecxz
push
dec
pop
jns
hlt
inc
sub
mov
jp
push
pop
adc
cltd
add
imulb
and
shll
push
cmc
loop
cltd
test
or
cmp
ss
pusha
push
mov
int3
mov
sbb
sti
add
cmp
test
nop
insl
in
xor
stos
dec
xor
mov
in
cwtl
sbb
ret
int3
das
adc
xor
mov
mov
fsts
cmp
cs
sbb
adc
insb
push
aaa
repz
xor
test
outsb
sub
xchg
loope
clc
pusha
adc
mov
ljmp
fimull
int
push
xor
mov
jbe
lods
lods
ljmp
pop
imul
scas
mov
inc
les
rorl
xor
ljmp
mov
dec
pop
inc
inc
pop
out
inc
cmp
int
adc
sub
or
pusha
fnstsw
dec
cld
mov
es
fisubrs
push
cmpsl
loope
mov
inc
les
and
leave
lcall
test
xor
stos
xchg
outsl
rcl
mov
add
sub
cmc
pusha
and
jge
fisubs
mov
lret
les
mov
pop
dec
pop
fsubs
mov
jp
and
and
mov
jmp
fldenv
mov
shrl
add
add
cmc
pusha
es
pop
cli
cmpsb
outsb
and
das
pushf
cltd
out
call
jp
pop
mov
adc
std
fstp
push
xor
lcall
lds
cmp
mov
mov
jp
xor
and
adc
gs
jnp
fsts
inc
pop
jmp
inc
dec
gs
leave
lock
inc
cmpsl
adc
and
ss
gs
dec
sub
inc
pop
mov
mov
aam
jns
bnd
nop
popa
rcrb
mov
leave
in
loopne
mov
imul
cltd
cmp
xor
jae
sub
mov
shll
pop
hlt
test
pop
fnstsw
popf
mov
out
push
dec
insl
jmp
stos
and
mov
ja
xor
leave
loopne
push
dec
out
pop
hlt
ljmp
imul
in
gs
popf
popa
inc
mov
shl
leave
cmp
negb
rclb
fldcw
cli
mov
lds
insl
cmp
push
inc
rcrl
das
movb
adc
fucomip
inc
xchg
lahf
pusha
icebp
mov
and
sbb
mov
mov
insb
lds
push
xchg
inc
push
test
inc
jle
gs
adc
pop
ficoml
js
mov
mov
or
ljmp
pusha
lret
sbb
xor
fistps
pusha
rorl
pop
scas
outsb
adc
lods
sbb
inc
mov
jae
and
orb
mov
or
sahf
mov
jbe
mov
dec
sub
fcoml
jns
adc
mov
push
pop
pop
adc
mov
fiadds
pushf
push
stos
pop
mov
fbstp
xchg
dec
mov
sub
pop
pop
sub
into
mov
loope
js
lcall
hlt
mov
jmp
aad
mov
pop
arpl
mov
mov
add
ret
and
jecxz
pusha
adc
push
pop
xchg
je
fwait
outsl
jnp
jecxz
push
dec
cmp
or
inc
push
inc
pop
pop
dec
cli
lcall
xchg
ss
xchg
lods
in
mov
or
jbe
repnz
imul
pop
pop
iret
icebp
mov
and
push
addr16
ja
test
dec
lds
test
inc
test
adc
test
imul
mov
ds
mov
call
or
jmp
cs
int3
inc
int
ror
das
xchg
cmpsb
mov
vfrczpd
jmp
dec
mov
adc
mov
out
lcall
and
jge
pop
sarl
test
adc
cmp
adc
leave
rolb
push
int
mov
int
int
pop
call
or
movsl
popf
mov
clc
xor
inc
inc
add
daa
mov
push
mov
xor
outsb
cmp
xchg
jmp
dec
add
popa
aaa
pop
sbb
adc
gs
ja
push
sub
jmp
adc
lcall
push
sub
xor
out
and
xchg
arpl
cmpsl
dec
loope
test
loope
ficoml
add
mov
lcall
cmp
out
mov
sub
lret
fidivrs
movsb
sti
push
cli
mov
clc
xor
cmp
mov
data16
cmp
enter
dec
jle
mov
shlb
test
out
push
clc
pop
insl
cmp
mov
sub
nop
aad
adc
icebp
mov
jmp
les
push
jecxz
push
fists
mov
adcb
and
fldt
jle
sub
popa
and
push
jg
mov
jg
lock
and
adc
add
or
mov
sarb
dec
jmp
jge
or
xchg
mov
mov
xchg
je
pusha
jb
adc
mov
sub
adc
mov
xor
or
sub
push
sub
es
les
add
or
cmpsb
cmpsb
movsb
jb
adc
outsl
imul
or
mov
std
jns
jno
xor
test
or
stc
rcrb
adc
mov
or
jnp
mov
jo
adc
push
stos
lods
pop
mov
mov
bound
popfw
mov
jp
mov
adc
lahf
cmpsl
and
or
and
cmp
sub
adc
sub
adc
xor
push
insb
pushf
sub
adc
jle
jb
adc
pop
mov
hlt
add
cwtl
adc
outsb
sar
inc
rorb
subb
adc
or
test
or
push
mov
jo
ret
mov
or
push
adc
add
test
or
sbbl
or
cmp
and
test
or
sub
fs
lahf
in
pop
mov
imul
addr16
cmc
ficoms
sub
sub
push
ja
inc
inc
mov
mov
cmpsb
pop
std
add
inc
stos
jle
push
sub
iret
mov
and
sub
push
push
mull
and
lods
loop
fildll
adc
dec
rcr
imul
sbb
or
out
outsl
inc
mov
test
dec
cmp
mov
lret
test
in
popa
mov
pop
pop
sub
and
mov
lahf
cmovs
push
pop
and
sub
sub
out
push
mov
push
enter
test
outsl
pslld
pusha
mov
or
sar
push
xor
leave
pop
push
push
in
test
mov
xlat
inc
push
mov
push
dec
cmc
mov
mov
jmp
subb
daa
and
xchg
repz
imul
cwtl
sub
xchg
pop
scas
dec
pusha
xor
xor
daa
mov
or
cmc
jl
push
loope
add
inc
lock
sbb
lods
cli
aad
mov
push
cmp
cld
call
into
xchg
lret
movsb
orb
and
mov
pushf
add
popl
add
cmpsb
pop
pop
fisubs
push
cmpsb
pop
cmpsl
test
pop
loop
mov
stos
pop
lea
pop
xchg
cmpl
loope
cmp
adc
dec
sub
ljmp
adc
xor
ficompl
pop
mov
adcl
mov
mov
dec
les
and
and
xchg
or
lcall
imul
push
sub
xor
push
pop
sti
lods
push
cmp
adc
push
mov
fstl
jg
insl
lods
pop
mov
push
pusha
popf
popa
push
mov
sar
or
sub
ja
int
cmp
pop
jmp
iret
es
hlt
xchg
cmp
or
adc
jae
dec
inc
xor
cwtl
sub
adc
adc
adc
test
hlt
and
pop
xor
leave
fs
add
push
cwtl
sub
adc
jle
adc
ret
sbb
pop
or
lea
or
loope
add
sub
mov
subb
adc
dec
add
subb
adc
and
les
jmp
sar
subb
adc
jl
aas
stos
test
insb
subb
adc
mov
pushf
sub
adc
popf
pushf
jb
adc
fnstsw
pop
xor
pop
dec
pop
cmp
adc
int
or
jnp
inc
push
xor
mov
ficoml
test
or
sub
adc
adc
das
lea
mov
sub
adc
nop
sub
adc
jo
jne
sub
adc
sub
adc
fwait
jecxz
sub
adc
cmpsb
xchg
sub
adc
gs
stos
mov
xchg
dec
imulb
or
mov
or
adc
or
test
adc
cwtl
out
mov
or
jb
mov
or
and
sub
adc
pop
mov
or
fwait
repnz
sub
lods
xor
or
cmp
inc
add
mov
xchg
and
test
pop
fldenv
mov
inc
pop
mov
fucomip
xor
adc
mov
xchg
loop
sub
adc
lahf
pushf
jb
adc
mov
push
push
push
test
or
inc
fbld
jmp
push
shlb
dec
inc
movsb
mov
xor
lods
add
and
arpl
jl
call
cmpsl
stos
dec
adc
pop
mov
inc
mov
insb
es
sbb
add
adc
mov
dec
add
or
dec
push
lods
outsb
enter
pop
in
gs
mov
jecxz
mov
testb
dec
sub
inc
test
adc
shrb
test
cmp
or
mov
or
mov
inc
cld
rcr
jmp
je
and
cmpsl
xor
sub
cli
mov
mov
rolb
push
out
loop
inc
jmp
iret
mov
dec
mov
fwait
out
or
popf
jmp
xor
mov
add
dec
outsb
filds
pop
or
xchg
sub
aaa
outsb
add
mulb
test
mov
insb
and
push
mov
mov
push
xchg
or
cmpsl
or
adc
jno
xchg
cmp
movsb
adc
cmc
mov
mov
lahf
repnz
push
js
mov
and
fsubrs
push
je
icebp
shrb
mov
mov
or
insb
aaa
mov
sahf
aaa
int3
cmp
dec
mov
cmp
fistpl
rolb
movsb
arpl
pushf
imul
lods
and
adc
cmpsb
ds
cltd
fcomi
pop
and
nop
mov
jns
mov
out
in
lretw
pushf
iret
jmp
sub
sti
scas
pop
xchg
loopne
push
loope
lods
sbb
push
movsl
scas
lods
pop
dec
imul
cmp
add
leave
fimull
pushf
jae
and
test
int3
outsb
inc
jecxz
loopne
mov
ja
push
movsb
mov
dec
sub
ja
mov
pop
cld
in
movsl
mov
mov
cli
aam
jno
cmp
aas
add
leave
fimuls
pushf
jae
and
mov
shll
loopne
test
cli
push
rclb
pop
add
es
or
sub
leave
jmp
pop
les
lods
sub
mov
pop
arpl
cwtl
outsb
arpl
xor
push
fld
mov
lods
mov
mov
mov
and
push
fmul
lcall
jmp
movsb
cmp
divb
lret
leave
or
rcll
mov
fmul
loop
sahf
mov
push
pop
cwtl
pop
pop
lds
or
test
jmp
fwait
mov
sbbb
mov
inc
jbe
test
mov
cmp
pop
inc
and
fwait
cmp
push
lods
pop
mov
mov
xlat
rcrb
cmp
push
sahf
gs
nop
sbb
mov
lods
fadd
jnp
inc
lds
ret
add
adc
mov
loope
xchg
jg
xchg
cmp
ret
loope
jns
repnz
jg
mov
pop
cmp
rcll
arpl
pop
cmp
roll
and
dec
stc
sbb
inc
insl
cmpsl
mov
dec
or
jmp
test
pop
sub
decb
pushf
jae
and
inc
shll
push
popf
movsb
sub
adc
out
add
leave
or
pop
dec
sub
mov
push
mov
lods
fsubs
dec
push
and
int3
fwait
out
test
push
fiadds
pop
push
fxch
lcall
push
repnz
mov
lods
or
push
sub
mov
dec
push
add
dec
jae
jns
nop
add
mov
and
test
or
cmp
sub
adc
dec
xor
stos
jae
ret
fstpl
nop
aad
and
enter
mov
das
jns
xor
cmp
daa
fnsave
inc
inc
jecxz
mov
mov
adc
sbb
dec
xchg
loope
mov
xchg
sbb
xchg
jmp
add
das
xchg
xchg
into
es
mov
sbb
or
mov
lret
jae
int3
sbb
lret
xchg
pop
xchg
push
dec
das
cltd
cmpsb
pop
inc
loopne
pop
popl
sub
cld
adcl
or
jg
popa
lret
xor
mov
popa
ss
fnstenv
push
or
test
push
mov
pop
jbe
bound
addl
lock
lcall
pusha
fwait
nop
movsb
sub
mov
pop
dec
xchg
test
push
in
aam
out
push
inc
lret
movl
sub
xchg
test
aaa
imul
mov
lret
inc
dec
pavgw
xor
push
fdivrs
popf
xor
fimull
push
mov
cmpsl
jmp
lock
dec
xor
pop
mov
mov
shlb
loop
inc
insl
jmp
pop
adc
pop
mov
mov
push
inc
mov
ret
xor
jne
mov
jno
dec
xor
adc
fucomip
jbe
jmp
lods
sbb
or
pop
mov
mov
push
xchg
sbb
xchg
fwait
sbb
inc
add
xchg
stos
pop
popa
rclb
xchg
cmp
in
sub
xor
sub
imul
cmp
jne
shl
out
xchg
adc
imul
sub
dec
and
mov
rcll
daa
fisubrs
mov
inc
out
outsl
and
test
lret
shrb
insb
scas
movsb
inc
adc
push
and
movsb
fcmove
sahf
int
jg
pop
pop
cmp
roll
sub
lret
push
icebp
sbb
or
adc
and
in
mov
mov
mov
xchg
popf
pop
cmp
int3
add
jns
add
push
test
insl
xor
xchg
mulb
mov
mov
mov
iret
aaa
adc
inc
add
mov
data16
mov
cmp
adc
push
jno
pop
iret
mov
iret
lret
ljmp
mov
sbb
pop
adc
jne
lds
les
cmp
lahf
fcoms
insb
inc
and
cmp
dec
out
mov
lds
sbb
pop
mov
ds
int3
adc
push
int3
xchg
inc
subb
adc
sar
sahf
incl
jg
test
adc
arpl
pop
out
cmp
inc
aad
dec
pop
jb
adc
and
pop
adc
scas
push
sub
call
mov
shll
fwait
gs
pusha
aam
adc
xor
dec
ja
jo
adc
adc
and
adc
pop
faddl
test
mov
mov
jb
push
sub
inc
out
rorl
outsl
shl
and
roll
adc
in
or
mov
mov
pusha
aam
adc
adc
mov
adc
sbb
xchg
pop
jnp
in
dec
popf
pushf
fsubr
cmp
jno
adc
jg
inc
pusha
add
adc
mov
mov
pop
mov
subb
dec
xlat
push
test
negb
insb
xchg
popf
cmp
popf
push
mov
or
hlt
jmp
fucomip
imul
or
sub
cmp
pop
loopne
ljmp
pop
adc
xchg
out
outsw
jecxz
sti
pushaw
aam
adc
or
inc
je
jle
mov
repnz
push
or
and
cld
mov
ret
ja
test
gs
sub
adc
fldz
icebp
cmpsl
cmpsb
pop
add
sbb
sub
pop
push
xchg
adc
in
xchg
clc
xchg
leave
test
cmp
ja
mov
in
cli
add
lret
aas
or
add
icebp
xchg
movsb
fistps
dec
int
push
pop
out
rcll
pusha
mov
shrb
mov
adcl
pop
adc
pop
or
pop
adc
or
cld
pop
mov
add
das
jmp
jmp
mov
jge
adc
fwait
ljmp
adc
fs
clc
shl
scas
pcmpgtb
jo
rorb
roll
adc
aad
adc
pop
sub
icebp
or
and
adc
rcrb
aas
mov
pop
adc
in
or
fxch
mov
xchg
aaa
add
dec
push
jne
lock
orb
fwait
push
adc
mov
sbb
mov
fstl
push
movsl
hlt
jo
adc
incb
adc
arpl
adc
or
mov
push
adc
adc
push
adc
in
or
hlt
pusha
dec
add
jbe
call
clc
inc
dec
jb
adc
and
adc
push
jb
adc
and
adc
push
jb
adc
popf
fsubl
or
jp
add
or
mov
mov
fsubl
or
pop
leave
sbb
adc
ja
js
inc
test
push
jge
in
pusha
lods
pop
cmp
mov
cmp
pop
adc
adc
add
pop
adc
sbb
and
jno
adc
sub
je
sub
jbe
ret
pusha
out
fnstsw
or
movsb
xor
clc
push
push
cmpsl
pop
jnp
je
scas
and
bound
test
pop
xlat
stos
push
test
pop
jne
pop
leave
mov
das
cmp
test
popf
scas
cmpb
push
adc
je
push
test
adc
cmc
pop
lds
cmp
std
sub
and
add
ror
ljmp
jg
add
loopne
das
mov
xor
outsb
dec
int
stos
pop
lea
pop
inc
and
mov
and
dec
mov
aad
icebp
add
fwait
lret
or
push
ficoms
pop
mov
int
push
push
cmpsl
in
cmp
pushf
mov
adc
push
loop
pop
inc
sub
mov
adc
mov
lds
ds
mov
pop
xor
inc
test
lods
cmp
push
outsl
push
fldenv
pop
insb
aam
sub
adc
sti
sub
adc
mov
sub
adc
jo
or
xor
cmp
pop
mov
lock
shl
cmpsl
adc
push
insb
sub
adc
jle
jb
adc
cmp
mov
lret
or
cmp
mov
cmpsb
dec
negb
pop
jmp
push
shlb
inc
lods
pop
push
sbb
jb
shlb
cltd
pop
pusha
dec
aaa
adc
cmpsb
dec
popf
jl
xor
bound
sahf
loope
dec
push
pop
repz
in
iret
fdivs
ljmp
or
dec
or
cmc
and
adc
jecxz
fs
pop
pop
test
mov
inc
pop
dec
push
sub
adc
add
call
cli
aam
mov
gs
push
insl
inc
sub
adc
imul
adc
cmpsb
roll
push
cmpsl
in
lcall
loopne
les
inc
sub
adc
pop
push
imul
stos
xchg
hlt
outsw
cmp
jmp
sub
mov
rorb
popf
popa
sub
adc
add
in
movsb
fildl
jl
pop
xor
shrb
popa
sub
adc
mov
jno
lods
dec
xchg
loopne
jns
jge
jge
sbb
lods
cld
sbb
add
jp
test
or
lea
cmp
sub
adc
lock
mov
cmp
and
or
xor
jge
int3
cmp
sub
adc
or
or
into
int3
out
jle
cmp
sar
push
adc
ss
mov
cmc
dec
xchg
mov
add
pusha
scas
add
xor
mov
jp
jae
popa
fs
add
cmp
pop
ljmp
int3
pop
sbb
adc
clc
dec
jmp
addr16
or
or
or
mov
rorb
push
dec
into
js
inc
xor
ret
mov
pop
dec
dec
sbb
enter
add
sbb
mov
add
inc
aaa
sbb
mov
dec
jle
roll
adc
jmp
sub
and
add
pusha
repnz
jb
adc
std
pop
jmp
cmc
shll
test
das
sbb
sub
pusha
sub
adc
sub
adc
inc
sub
adc
test
jbe
mov
push
pop
addb
cmpsl
jp
xchg
dec
jl
mov
fcmovu
mov
cwtl
jno
outsb
or
sub
adc
jge
aad
daa
lods
push
cmp
mov
push
test
roll
adc
fstpt
ja
add
popa
or
sbb
pop
or
and
orl
inc
roll
adc
popa
sub
adc
test
call
fildll
cltd
mov
test
das
and
popf
imul
out
dec
sub
adc
lods
mov
lcall
pop
adc
xor
jo
or
popa
sub
or
scas
jne
and
or
bound
in
sbb
sbb
mov
test
mov
mov
movsb
sbb
sbb
daa
sahf
pop
add
je
popl
or
add
sub
mov
sub
adc
and
repz
xchg
xor
and
adc
push
leave
daa
jns
ljmp
jae
into
sbb
xchg
pop
loope
out
cmp
arpl
test
dec
stos
pop
loop
dec
loopne
push
adc
test
test
xor
cmp
cmp
je
push
movsb
cmp
and
adc
rolb
shrb
in
and
adc
lods
cmpsl
movsb
dec
jb
adc
jae
lcall
and
adc
lods
cmpsb
cmpsb
fs
adc
pop
lret
in
and
adc
mov
and
andb
adc
out
pop
xchg
pop
sub
adc
out
insl
lods
pop
mov
lock
sub
adc
pop
sbb
xor
cmp
pop
out
gs
pop
rol
mov
cmpsl
les
inc
in
fidivrs
outsb
insb
and
rorb
adc
pop
adc
or
movsl
push
mov
adc
ret
push
es
sbb
cld
mov
or
mov
icebp
mov
shrb
sub
sub
or
jecxz
pushf
inc
icebp
mov
movsl
sbb
adc
aas
xchg
sbbb
aad
jnp
lcall
inc
sub
adc
pushf
sub
sub
adc
std
mov
xchg
jno
loop
dec
sahf
cmp
sub
mov
subl
xlat
inc
pop
inc
jecxz
cmpsl
dec
prefetcht0
sarb
or
mov
loopne
pushf
cmp
aam
sarb
or
sub
push
pushf
lcall
cmc
cld
or
dec
daa
lods
jno
mov
jb
pop
orl
push
movsl
fucomi
push
ds
cmpsl
ljmp
fwait
mov
insl
ja
xor
js
movsl
cmpsb
pop
das
test
jg
sub
ficoml
cmp
or
stos
pop
ds
aaa
lock
nop
xchg
xchg
dec
xor
int
inc
stos
or
jge
jnp
aaa
andb
cmp
stos
push
mov
mov
nop
repnz
pop
out
leave
clc
and
adc
add
mov
popa
stos
or
testb
jg
or
fadds
cmc
mov
push
adc
adc
fwait
jo
and
test
outsl
lcall
insl
aaa
push
lret
aas
shrb
ljmp
loopne
loopne
xchg
repnz
pop
lfs
or
in
push
jp
ss
or
pop
mov
adc
jecxz
jp
lret
sbb
pop
cmp
test
mov
xchg
sub
inc
inc
cmp
mov
icebp
sub
or
and
adc
test
push
adc
cwtl
arpl
or
arpl
push
sub
and
orl
dec
mov
dec
cmp
push
lea
inc
rorl
jecxz
adc
in
inc
add
adc
xlat
push
inc
in
clc
pop
jae
jbe
push
adc
and
adc
mov
adc
lahf
pusha
jo
adc
mov
int3
sbb
pop
xchg
rcr
xlat
mov
daa
lds
push
adc
sub
or
stos
js
insb
push
ss
gs
sbb
and
adc
cmp
add
jbe
adc
add
adc
into
aam
lahf
push
pop
and
imul
adc
and
adc
dec
cwtl
lahf
sub
mov
cmp
mov
movsl
pusha
cmp
sub
or
stos
js
mov
dec
cltd
dec
push
lret
notl
xchg
rorb
enter
xor
sub
in
fsts
in
mov
xchg
ret
xorb
dec
ljmp
jno
adc
jno
adc
cltd
fadds
jb
adc
fucomi
cmp
adc
push
aad
sar
fcmovu
sahf
lock
pop
xor
enter
test
fnstcw
mov
dec
fadds
pop
adc
test
test
pop
adc
or
mov
jge
aaa
mov
pusha
and
lcall
imul
add
mov
jmp
push
cmp
je
dec
cltd
add
pop
adc
pop
mov
cs
test
add
inc
incl
adc
out
cmpb
xlat
lods
pop
cmp
sbb
rorl
loopne
shll
lret
cmp
jecxz,pt
fs
inc
mov
dec
mov
ja
loop
insl
adc
insb
push
xor
adc
cmp
aad
mov
stos
mov
int
push
ret
and
push
adc
sub
pushf
mov
shll
sbb
addb
sub
cmp
and
inc
sarb
cmp
incl
adc
mov
push
adc
inc
enter
leave
arpl
xor
cmpsl
dec
popf
jno
out
fidivrs
stos
push
ds
in
incb
adc
mov
cmp
mov
sub
stos
fistpll
mov
add
not
pop
lret
and
insl
dec
lea
sbb
push
inc
mov
fstl
mov
dec
and
adc
jb
rcr
std
adc
dec
dec
push
dec
aad
push
dec
and
adc
xchg
mov
cmp
nop
jno
adc
dec
and
adc
dec
and
adc
adc
pop
adc
push
inc
xchg
dec
mov
adc
daa
mov
pop
nop
push
orl
xor
lret
mov
movsl
roll
mov
jne
adc
and
rcll
sbb
cld
mov
int
mov
mov
pushf
sub
adc
adc
xchg
mov
adc
pop
xchg
sub
leave
es
jge
sbb
sbb
call
inc
push
sbb
cltd
and
add
test
or
imul
and
cmpsb
or
and
lods
push
cmp
cs
pop
mov
add
inc
ror
adc
sbb
loopne
pop
adc
mov
subb
sub
insb
aas
xor
lock
sub
jae
dec
inc
xchg
and
push
je
mov
xlat
or
push
movsb
jmp
iret
cmp
push
and
mov
sahf
lret
mov
popl
or
mov
addl
push
add
adc
pop
aad
sbb
lcall
cwtl
jno
rolb
pop
popf
and
rol
es
rcrb
add
inc
mov
push
je
jge
sbb
orl
daa
sbb
inc
xor
fstpt
dec
int
scas
nop
dec
cmp
aad
xlat
add
rcrb
sub
dec
pusha
pop
mov
test
jp
inc
jno
inc
hlt
ljmp
les
cmp
dec
cmp
aam
push
sub
stos
push
test
lret
sbb
sarl
push
and
loop
dec
js
clc
movsb
mov
push
fimuls
sbb
fidivs
scas
cmpsl
std
inc
leave
add
fimull
cmp
xchg
pop
mov
jno
push
sarl
mov
dec
popf
inc
addr16
cs
mov
lock
add
adc
push
cwtl
xchg
and
cs
push
arpl
mov
inc
subb
orb
jl
and
pop
fnsave
or
les
les
push
xchg
shrl
jo
jae
fadds
pop
adc
push
insl
mov
add
out
or
insl
insl
shl
test
sbb
cmpsl
xchg
out
scas
add
mov
test
adc
and
pop
mov
mov
lds
mov
xchg
leave
inc
icebp
daa
xchg
ret
dec
in
je
jb
fs
inc
pop
mov
inc
shlb
push
les
jecxz
sub
stos
aad
popf
mov
add
xor
cmpsb
popa
lods
daa
inc
test
aad
mov
mov
mov
test
in
shl
lret
mov
inc
test
or
and
lcall
out
rorl
push
and
pop
inc
test
xchg
dec
xchg
stos
mov
dec
popa
pop
push
repnz
fstl
lds
arpl
mov
pushf
outsl
xchg
movsb
pop
mov
dec
xlat
cmc
xchg
aas
in
mov
dec
into
and
jp
rorb
add
jmp
sahf
push
lods
pop
xor
lds
arpl
lret
and
xchg
inc
test
pop
es
mov
pop
mov
movl
sbb
mov
pop
mov
insl
dec
pop
mov
sub
sub
push
mov
pushf
push
dec
mov
daa
aas
sub
xlat
and
push
mov
movsb
xchg
mov
fisubs
or
xor
scas
jle
mov
inc
test
mov
lods
jp
lods
js
imulb
and
pushf
loop
and
pop
adc
cmpl
mov
ss
bound
add
in
xor
pushf
and
imul
addb
or
clc
push
jno
dec
jo,pt
roll
movsb
popa
cli
xchg
cmp
add
pushf
addr16
push
imul
push
jb
adc
mov
jge
orl
pushf
and
mov
dec
sbb
outsb
mov
inc
or
test
inc
push
push
mov
xor
add
and
js
inc
lret
lods
inc
sbb
cmp
xchg
mov
dec
mov
mov
pop
cmp
xchg
and
test
mov
aam
adc
cli
push
adc
cmp
pop
adc
adc
inc
out
fxch
adcb
iret
pop
push
push
xor
in
and
push
mov
push
jnp
cli
fdivrs
inc
dec
insl
or
cmp
inc
fs
shl
subb
sub
scas
js
jne
shll
inc
add
call
pop
cwtl
sub
mov
xchg
cltd
iret
mov
pop
jge
mov
ror
cmc
push
je
cmp
fiadds
aad
add
ds
jb
pop
pop
in
xor
mov
scas
adc
test
inc
test
sahf
ja
adc
jecxz
xchg
mov
aam
pop
cmp
and
jmp
dec
or
icebp
sub
mov
inc
fcmove
jecxz
fs
hlt
fcmovb
mov
sub
hlt
stos
dec
int
enter
adc
lods
pop
mov
dec
jle
imul
sbb
add
mov
or
inc
add
xchg
push
and
adc
in
adc
cld
mov
lds
bound
mov
stos
daa
or
pop
adc
and
lods
pop
les
jno
sbb
add
adc
inc
outsb
cmp
push
xchg
sbb
sbb
adc
imul
not
push
js
daa
add
dec
and
pop
std
sub
cltd
ljmp
jmp
mov
and
cmc
pusha
mov
sub
out
dec
jle
imul
sbb
orb
xchg
fwait
loope
orl
mov
aas
pop
roll
adc
into
mov
xor
mov
mov
xchg
push
cwtl
mov
int3
fsubrp
xor
roll
adc
push
xor
push
ss
mov
pop
roll
adc
loop
dec
adc
lock
ret
test
int3
lcall
ret
jmp
inc
cmp
add
push
in
in
in
cltd
cmp
pop
push
cmpsl
dec
sub
dec
popf
inc
pusha
adc
and
adc
mov
data16
xchg
pop
lds
xchg
in
inc
dec
xorl
adc
movsb
clc
cmp
pop
adc
mov
ret
pop
lds
or
dec
test
lods
sahf
mulb
pop
loope
inc
daa
add
shrl
mov
movsl
pop
jnp
ljmp
not
std
adc
adc
hlt
mov
lds
popf
xor
aad
test
mov
sub
sub
jns
aad
mov
pushf
cmp
xchg
leave
pop
mov
sarl
popa
or
test
out
cmpsb
les
jnp
mov
push
pop
fs
lds
pop
mov
daa
inc
push
adc
cs
pop
mov
iret
push
dec
pop
das
mov
add
popf
notl
lds
in
or
out
out
dec
mov
jns
scas
dec
outsl
cwtl
or
outsb
xor
clc
or
lcall
dec
inc
fwait
sub
adc
cwtl
and
ret
aam
fsubr
sub
aaa
jne
and
pop
or
mov
out
sub
arpl
jecxz
pop
xor
jne
inc
dec
imul
repz
aaa
int
xchg
push
mov
ja
aas
pop
shrb
mov
shrb
jmp
pop
sbb
and
in
or
add
cmp
lret
adc
add
out
fnstsw
and
push
stc
fs
in
pop
notl
fbld
imul
pop
pop
xchg
ss
mov
inc
in
jecxz
leave
dec
ds
or
pop
push
mov
ja
fistpll
popf
pop
and
test
mov
jb
mov
mov
out
lret
cmp
sbb
mov
push
cmc
arpl
or
jns
inc
addr16
lods
ja
mov
mov
sti
fstps
cld
and
lcall
sub
or
shlb
or
add
leave
mov
jp
xlat
sub
nop
cmpsl
sub
add
sub
adc
loop
pop
jle
mov
loop
push
push
movsb
sbb
cmp
pop
jecxz
mov
mov
mov
cwtl
jae
rcr
int3
out
shll
test
fsubp
ljmp
lret
pop
sbb
jmp
les
sub
and
mov
pop
fistl
adc
fcmovnbe
ret
fwait
pushf
mov
dec
das
lea
gs
pop
and
push
cwtl
add
mov
out
mov
sub
jnp
add
adc
cmpsl
add
adc
test
adc
adc
add
in
and
daa
test
sbb
mov
xor
faddp
inc
push
pushf
insb
imul
adc
adc
pop
loopne
test
adc
cmp
aam
inc
add
sbb
add
adc
aaa
loope
addb
pop
repz
mov
xchg
xchg
call
shl
push
call
pop
cmp
rcrl
mov
xchg
push
mov
jns
daa
lds
ret
push
mov
dec
lea
push
cmp
adc
leave
les
mov
test
nop
scas
pop
jo
lret
cwtl
out
pop
mov
add
mov
dec
loope
mov
es
popf
sub
js
and
jne
int3
mov
scas
dec
jmp
pop
jg
and
adc
inc
daa
sbb
out
lods
shll
xor
fwait
cmp
int3
xor
add
ljmp
les
outsl
xchg
jge
or
loopne
jge
or
leave
shrl
and
xchg
jb
ficoms
jnp
jle
inc
jmp
push
inc
xchg
dec
pop
sti
pusha
leave
dec
orl
dec
cmp
jmp
ja
pop
mov
sbb
lods
inc
xchg
dec
js
inc
popfw
sbb
pop
mov
push
aas
repnz
mov
or
mov
push
cmp
lds
sbbb
push
push
ljmp
movsl
cmp
stos
cmp
orb
or
es
push
or
sub
in
pop
adc
lods
push
fcom
pop
adc
dec
lods
add
adc
js
push
stos
push
ds
inc
jmp
fimull
fs
lea
insl
mov
adc
addl
sarl
dec
pop
sbb
push
sbb
and
jmp
fidivl
cmp
rorb
and
jecxz
and
jge
pop
and
gs
je
add
stos
pusha
xchg
imul
imul
rcl
pop
adc
cli
mov
dec
repz
dec
mov
mov
pop
cmp
pop
inc
inc
call
lahf
adc
mov
add
or
pop
adc
ss
mov
mov
mov
xchg
nop
ljmp
or
and
jns
cli
ss
lea
sbb
and
adc
jl
push
adc
stos
mov
sbb
das
inc
mov
and
adc
rolb
adc
or
out
mov
adc
dec
mov
xchg
pop
adc
push
mov
das
stc
cmp
and
jle
pop
inc
rolb
adc
loopne
and
adc
rolb
adc
rolb
adc
dec
rolb
adc
lods
xor
aad
cmc
sub
rcl
pop
adc
mov
insb
and
adc
adc
push
adc
dec
hlt
bound
test
xor
rolb
adc
cltd
or
cmpsb
adc
rolb
adc
loop
xchg
dec
mov
jnp
and
jg
cmp
in
xor
mov
mov
mov
rolb
adc
enter
lea
nop
lods
pop
fstps
ds
popf
pushf
sar
mov
std
int3
adc
xchg
push
test
imul
or
popf
cmp
jge
fs
inc
rolb
adc
push
in
fsubrl
sbb
push
mov
inc
add
roll
mov
inc
rolb
adc
push
in
fsubrl
mov
scas
lods
inc
rolb
adc
out
roll
jns
jle
inc
push
std
test
adc
out
push
fs
pop
adc
mov
sub
aam
pop
adc
fcompl
cmp
or
xor
add
roll
add
adc
sbb
xchg
push
pop
stos
pop
sub
out
adcl
add
jb
add
inc
pop
gs
add
sub
in
cmp
mov
cmp
mov
mov
and
pop
adc
stos
test
mov
adc
and
pop
mov
xlat
lods
pop
sub
lcall
xor
inc
sbb
adc
outsl
rolb
leave
xor
stos
jae
jmp
subb
cmp
insl
xor
push
arpl
inc
push
stos
push
scas
lahf
mov
inc
push
aaa
dec
dec
push
cmpsl
sub
xor
imul
pop
popf
xor
sub
iret
cltd
mov
imul
sub
mov
mov
clc
and
data16
mov
xlat
lods
pop
inc
cltd
inc
pop
bound
shl
outsb
dec
or
pop
adc
sbb
adc
pop
adc
mov
mov
push
les
cmp
mov
pop
pop
dec
es
pop
mov
push
and
dec
out
lcall
cmpsl
insb
add
roll
adc
inc
push
mov
scas
sub
or
test
loope
adcl
js
das
loopne
and
rolb
adc
mov
decl
cmpsb
fcom
pop
adc
mov
push
mov
dec
rolb
adc
mov
rolb
adc
int
imul
pop
adc
xor
or
stos
sub
mov
xchg
leave
outsl
loopne
jne
fucomp
rolb
adc
call
jmp
rolb
adc
pop
inc
out
lcall
rolb
adc
ficoms
mov
ja
jp
mov
adc
jbe
in
pop
adc
outsb
sub
adc
or
add
negb
and
and
sahf
push
and
cmpsl
or
in
or
or
rcrl
mov
cmp
pop
cmp
add
or
cli
stos
pop
mov
adc
mov
mov
push
and
cmpb
and
adc
nop
fs
add
push
or
mov
ljmp
inc
stos
mov
and
adc
hlt
or
aaa
sub
lcall
notl
push
mov
or
imul
scas
and
adc
int
aaa
jnp
std
jle
sub
test
and
adc
sub
loop
ljmp
pop
popa
adc
and
lcall
xor
aas
jmp
xor
lds
mov
sbb
add
rolb
adc
call
jmp
dec
xor
ljmp
iret
cmp
push
sbb
jge
mov
aas
aam
push
push
subl
addl
sub
dec
and
pop
pop
adc
out
rolb
adc
lods
and
leave
sti
loopne
dec
xor
in
rolb
adc
lock
adc
imul
sbb
or
lock
xchg
push
cmpsb
ljmp
and
arpl
aad
dec
popf
rcrl
aad
lods
push
lods
pop
pop
mov
gs
stos
mov
fnstsw
je
out
xor
adc
aas
lods
mov
xchg
sbb
daa
add
jmp
inc
stos
mov
adc
inc
int
cltd
xor
insl
ds
dec
popf
pushf
dec
inc
cmpsl
mov
mov
add
shl
adc
cli
push
cmp
out
loop
pop
mov
cmpb
xchg
not
inc
insl
dec
jl
and
add
lods
pop
mov
ss
arpl
mov
fisttpll
inc
pop
adc
inc
push
je
sub
mov
or
gs
and
xor
mov
add
sub
stos
add
xor
mov
jecxz
mov
sub
or
lds
outsb
cwtl
push
stos
and
pop
sar
lcall
scas
dec
or
aam
shll
and
sar
sub
xor
jbe
jecxz
sub
lcall
add
stc
push
inc
sub
cltd
xor
dec
xchg
push
dec
in
inc
mul
sub
clc
push
rorb
loope
adc
imul
xchg
sbb
pop
sub
xor
sub
jp
fcmovnu
std
in
scas
xchg
inc
daa
sbb
arpl
adc
jl
test
jae
je
test
cmp
shr
xor
out
sbb
dec
fwait
fs
push
xor
cmp
mov
cmp
mov
lcall
sahf
scas
mov
aaa
jne
push
add
cmp
adc
dec
fcomps
pushf
cmp
inc
les
jmp
imul
pop
adc
leave
and
pop
adc
idivb
inc
push
adc
mov
enter
js
subl
sub
pop
stc
in
orb
cmp
lret
daa
or
ret
je
iret
sahf
adc
in
inc
push
cs
scas
push
sub
xor
push
mov
cmp
loopne
xlat
loope
sub
mov
mov
stc
nop
pusha
push
xor
inc
xchg
xchg
shrl
pop
stos
out
insl
xor
xchg
mov
or
mov
je
addb
aas
xchg
out
push
push
push
pusha
mov
inc
dec
mov
jne,pt
cmpsb
loope
imul
cmp
push
shlb
mov
daa
inc
arpl
sub
fistps
xlat
shlb
sub
adc
bound
repnz
movsl
mov
addl
pop
dec
cmp
fs
stc
in
and
repz
pop
xlat
mov
cld
cmp
push
in
lcall
outsl
mov
hlt
mov
cmpsb
adc
sub
cs
sti
or
jb
mov
test
mov
test
adc
cmp
dec
les
imul
xchg
inc
xchg
aaa
fwait
stos
and
aas
xor
jb
sub
jmp
outsl
mov
arpl
inc
das
test
xchg
insl
loop
fdivr
je
pop
adc
pop
mov
jle
and
stos
incl
mov
mov
and
popf
dec
add
jbe
test
jmp
pusha
popf
sub
movsl
in
pop
dec
push
fimull
bound
mov
jno
xchg
xchg
cmc
imul
jno
test
into
pop
fdivrs
inc
pop
imull
movsb
rolb
enter
xor
loopne
push
adc
lret
push
fstps
cmpsb
lea
stos
adc
xchg
or
pop
dec
pop
aam
or
sbb
push
daa
sbb
aas
xchg
adc
pop
movsb
sar
sahf
dec
ret
adc
fwait
cmp
int3
fdivr
adc
test
sahf
outsl
pop
repnz
adc
out
lds
out
sub
roll
rcr
outsb
aaa
dec
popf
test
inc
and
stos
push
aad
dec
in
movsl
cwtl
adc
jmp
mov
decl
pop
cwtl
mov
int3
fistps
mov
adc
movsb
ret
dec
gs
adc
subl
dec
cmp
fwait
les
cmp
push
and
mov
fcoml
and
je
pop
adc
mov
adc
mov
adc
aaa
and
das
and
popf
in
mov
addr16
les
fucomp
pop
sti
pop
enter
xlat
sbbl
sbb
xor
cmp
jbe
and
inc
dec
xchg
rcrb
pop
xor
fs
lock
dec
jno
in
sub
cld
or
adc
and
push
and
lret
add
shl
push
sti
adc
push
adc
es
cmp
cmc
addr16
test
jne
testb
std
add
aam
pop
bound
cmp
cmpsb
jb
cmp
popf
dec
ljmp
dec
leave
push
cmc
ljmp
in
cmp
sub
mov
pop
sbb
fldenv
jmp
arpl
push
cmp
xchg
lods
pop
xor
dec
and
mov
movsl
push
stos
add
cmp
insl
shrb
mov
fs
scas
push
into
scas
and
fwait
loop
out
hlt
ljmp
cmp
in
xor
push
pop
and
imul
addr16
std
sbb
inc
or
sbb
mov
cwtl
xor
add
pushl
xchg
call
xlat
dec
jnp
inc
pop
lahf
xlat
inc
jnp
lock
jno
andl
iret
ret
jge
cmc
imul
pop
fnsave
xchg
pop
sub
and
adc
imul
roll
mov
lods
int
adc
lods
push
push
sub
jle
push
mov
push
fnsave
pushf
ss
mov
iret
fidivl
dec
lock
mov
adc
inc
ret
fprem
mov
movsl
in
push
repnz
and
or
je
sub
or
aas
rcrb
fcomps
lea
pushf
imul
inc
scas
cmpsl
cwtl
mov
xor
fsubp
adc
imul
nop
popa
decb
idivl
xchg
push
pop
dec
mov
add
mov
das
call
hlt
push
inc
xchg
cmp
jb
pop
icebp
cmpsb
jge
jmp
pop
adc
into
mov
sub
xor
leave
cmpsl
pop
push
push
iret
jo
addr16
into
std
ss
int
xchg
push
repnz
and
stos
out
loop
mov
ret
lcall
jecxz,pt
cwtl
scas
test
nop
xchg
ss
xor
sbb
das
xchg
in
js
movsl
add
sbb
mov
test
xor
test
fcoml
mov
cltd
mov
pop
adc
mov
pop
adc
in
mov
mov
outsl
sbb
xchg
ficoms
jl
fidivl
adc
daa
in
jae
clc
xchg
lret
fistl
sub
adc
pop
adc
mov
add
adc
ret
hlt
jo
adc
add
mov
sub
or
cmp
xor
sbb
add
adc
jno
mov
pop
jno
loopne
daa
add
jb
fbstp
and
cmc
inc
int3
pop
stc
lock
push
loopne
repnz
bound
pop
scas
inc
in
add
cmp
mov
pop
push
mov
loopne
sub
mov
push
push
pop
fstpl
sbb
adc
call
scas
sbb
addb
push
adc
xchg
or
stc
ss
cmpsb
dec
out
mov
lock
and
mov
test
sbb
adc
and
test
pop
mov
inc
and
pop
and
and
ljmp
insl
jae
roll
inc
daa
or
shll
push
lcall
adcb
inc
lods
hlt
data16
icebp
jnp
scas
pop
ja
test
les
or
lods
pop
cmp
inc
adc
fldcw
stos
mov
lds
pop
mov
mov
lods
pop
sbb
es
pop
mov
ljmp
cmp
or
es
and
cmc
push
mov
sbb
out
or
pusha
jmp
jae
or
add
xchg
add
sbbl
sub
xchg
sub
hlt
push
stos
pop
or
nop
xchg
push
lahf
cmpsb
mov
jge
xor
mov
push
adc
daa
push
mov
xor
and
pop
mov
pop
out
outsl
add
repnz
divb
dec
popf
add
loop
mov
mov
xor
mov
sub
call
mov
cmp
push
adc
sbb
out
mov
mov
dec
ja
jo
adc
hlt
imulb
sub
push
insl
push
test
stos
repnz
mov
shll
mov
lods
pusha
stos
pop
sarb
test
stos
insb
push
mov
mov
and
and
pusha
adc
lahf
add
ret
xlat
leave
test
fnstenv
iret
fwait
xor
adc
push
fsubs
add
adc
lock
fwait
cmp
or
fldt
lret
adc
in
inc
daa
or
ljmp
mov
inc
jne
and
push
stc
mov
jb
pushf
push
mov
pop
cmp
xor
ret
jo
sti
or
cmp
pop
movsl
and
shlb
cmp
xchg
and
push
adc
fnstcw
dec
int
mov
sub
inc
pop
push
into
push
addr16
push
lcall
outsl
pushf
imul
add
xchg
jle
mov
mov
pushf
repnz
sub
hlt
mov
cmp
std
cmpsb
lahf
popa
daa
cmp
mov
or
jo,pt
push
cld
jp
mov
jb
push
mov
les
adc
push
xorb
cmpsb
sub
fldl
pop
sbb
sub
and
pop
inc
daa
or
lahf
lret
push
or
inc
stos
push
push
pushf
in
mov
inc
aaa
dec
dec
in
push
mov
push
cmc
xor
pop
adc
aam
push
cmc
mov
or
or
lods
mul
adc
mov
cltd
test
jmp
add
es
adcl
outsb
insl
orl
iret
aaa
mov
add
jge
jmp
lds
xchg
adc
jno
cmpsb
or
xchg
ds
mov
pop
mov
dec
cli
jne
stos
fsubrl
sub
jle
mov
ss
push
scas
adc
or
imul
sbb
pop
dec
add
inc
dec
adc
jb
xor
push
xor
jl
pop
cwtl
call
sub
ret
push
dec
jmp
or
xor
dec
and
pop
leave
add
pop
orl
pop
jns
movhps
fistps
cs
imul
mov
xchg
das
subb
in
cwtl
test
mov
data16
push
mov
lds
mov
insl
and
inc
dec
fsubs
mov
out
sub
fldcw
leave
mov
lds
ljmp
or
mov
or
sub
sub
daa
cmp
stos
aam
xchg
and
cld
aam
and
aad
sbb
cmp
push
subb
dec
loope
ja
in
xor
out
adc
fs
insl
add
into
sub
sub
lds
pusha
push
push
fs
aad
je
lahf
lods
sbb
ss
cmp
xor
cmpsb
xor
and
mov
lods
fnstcw
test
cmpsl
add
clc
mov
sub
and
lcall
mov
cmp
push
jge
les
add
inc
push
ret
inc
nop
popf
rcrl
cmpsb
cmpb
and
adc
rolb
test
lea
inc
repz
call
add
pop
adc
imul
add
sub
add
push
cmp
inc
mov
cltd
sarb
adc
gs
push
movsl
adc
mov
xchg
aam
dec
xor
mov
fidivrs
sarl
push
lods
pop
adc
sbb
pop
mov
je
jne
adc
xor
fistps
cvtdq2ps
gs
ljmp
in
mov
fdivrl
push
lahf
es
mov
insl
mov
pop
mov
pop
push
inc
stc
mov
add
outsb
mov
sub
or
lcall
push
outsl
mov
rcr
ljmp
adc
cmpsl
push
stos
shrl
in
fidivrs
sub
adc
sub
xlat
lret
jne
aas
add
test
mov
sub
pop
xlat
lock
outsl
adc
push
mov
movsl
jae
subl
pop
adc
aas
rcrl
inc
xor
nop
and
xchg
sub
imul
cld
mov
push
cmpl
push
dec
mov
cs
push
push
pop
mov
call
rolb
call
mov
les
pop
xor
inc
fidivrs
jb
ret
das
out
jo
les
lret
andl
sbb
adc
sub
shl
mov
outsl
add
xlat
xchg
leave
icebp
push
in
cmp
cmpsb
rolb
push
dec
mov
loope
cmpsl
je
pop
sti
add
push
add
adc
sti
int
outsb
mov
scas
aas
in
bound
aam
pop
push
jne
push
push
push
pusha
mov
jp
jl
mov
xchg
loop
imul
cmp
mov
cltd
hlt
and
push
xorb
mov
or
roll
cld
add
jle
mov
xor
sub
jae
leave
push
jo
lahf
sub
cwtl
cmc
cli
hlt
or
add
mov
lods
and
mov
dec
out
fstl
gs
daa
or
adc
lea
mov
roll
adc
jecxz
xor
mov
push
xor
shl
outsb
inc
testb
inc
test
pusha
ds
pop
pop
cwtl
mov
outsl
mov
lds
sub
adc
hlt
test
and
push
in
mov
mov
scas
nop
dec
cmp
fstpl
xchg
dec
lods
stos
aad
dec
mov
inc
cmp
out
mov
sub
hlt
push
inc
xchg
rcrl
adc
aam
daa
or
mov
mov
dec
ret
adc
cltd
mov
inc
sbb
and
lret
pop
pop
ja
cs
popf
mov
cld
jb
mov
add
call
shrl
scas
pop
pop
and
lret
daa
pop
jecxz
icebp
mov
push
adc
pop
xorb
cmp
pop
mov
pop
push
cmpsl
jbe
int3
mov
sub
mov
cmp
adc
pop
das
jo
pop
mov
and
cmc
fstpt
sub
pop
sub
cmp
xor
pop
and
jge
push
sbb
pop
sub
cmc
pop
sub
mov
mov
adcb
push
or
mov
js
aad
arpl
sbbb
add
sbb
sub
mov
int
cmp
frstor
repnz
sbbb
lea
adcl
sub
in
mov
orb
je
cmp
mov
cmpl
jp
lods
test
shlb
adc
sub
jo
adc
mov
xchg
pop
mov
jle
mov
pop
sti
adc
adc
ljmp
popf
and
cmc
push
shll
pop
mov
stos
sub
pop
jne
jno
add
cmpsl
dec
pop
int
sub
mov
add
adc
push
cmpsb
adc
orb
dec
mov
add
ficompl
data16
push
lods
aaa
mov
xchg
and
shr
lahf
inc
fmulp
adc
lahf
inc
aam
push
fcoms
pop
adc
jecxz
imul
mov
cmp
or
ljmp
in
cli
or
ljmp
int3
ror
push
es
pop
sbb
ds
push
mov
lcall
xor
sub
dec
std
adc
push
dec
pop
das
lods
push
push
movsb
cmp
in
lods
mov
nop
repnz
inc
xchg
je
cli
cltd
mov
inc
sub
xor
xor
mov
jno
inc
pop
push
int
inc
lcall
mov
loope
test
out
and
or
push
dec
sbb
sbb
aas
fwait
shlb
lods
sti
xlat
repnz
xchg
dec
shr
bound
movsl
jmp
xchg
adc
jnp
jo
jp
out
clc
ljmp
sub
lfs
js
loopne
push
ljmp
adc
test
sbb
sti
xor
cmpsb
inc
add
daa
or
sub
sub
pop
cmp
jp
xchg
inc
jo
cmp
add
adc
mov
outsl
inc
mov
daa
or
cmpsb
cli
cmpsb
mov
dec
inc
and
pop
inc
daa
or
and
inc
jne
ret
sbb
pushf
nop
fcomps
push
mov
push
mov
xchg
push
ficompl
xchg
icebp
xchg
add
mov
stc
push
add
jge
jmp
lds
mov
mov
sbb
inc
repnz
jno
add
push
sub
ret
dec
pop
or
xchg
repz
ret
xchg
stos
es
and
mov
push
les
mov
pop
stc
sbb
mov
cltd
addr16
arpl
xchg
mov
mov
popf
pusha
jl
jmp
nop
jb
sahf
repnz
jb
scas
inc
in
cmp
mov
stos
dec
dec
loope
jl
popa
adc
push
push
xor
fdivrp
jb
shl
inc
lds
mov
mov
scas
inc
jmp
push
push
ret
jno
mov
ret
mov
push
ret
insl
dec
xor
mov
xor
add
mov
xor
xchg
ret
je
imul
popf
call
push
jg
xchg
or
adc
retw
push
lods
mov
clc
adc
out
jno
sub
rcrl
dec
outsb
push
das
gs
int
push
insl
lods
mov
pop
mov
stc
loop
shrb
push
lods
pop
aad
or
mov
xlat
lods
pop
xlat
pop
aas
lea
scas
dec
mov
les
jbe
inc
test
pop
sub
mov
lock
bound
sub
xlat
pop
add
test
jae
movsl
mov
data16
push
popa
lods
mov
pop
mov
stc
clc
sbb
rorb
sub
dec
pop
lods
pop
aad
or
mov
lods
pop
xlat
pop
xor
mov
les
jbe
inc
test
pop
sub
lods
pop
mov
lock
bound
sub
xlat
pop
add
test
jae
and
mov
int
shll
lods
mov
test
adc
test
daa
lds
xchg
sub
gs
lods
mov
add
das
inc
test
daa
in
xchg
cmpl
mov
cltd
ret
and
test
test
lret
sbb
xchg
sbb
sub
imul
mov
cmp
movsl
loope
mov
sbb
dec
mov
test
mov
xor
jae
mov
or
nop
pop
dec
jnp
pusha
adc
sub
mov
xchg
subl
es
sub
pop
adc
pop
icebp
mov
add
mov
push
and
fs
fdivrl
cmp
mov
mov
and
push
rcrb
mov
pop
cli
scas
xchg
sub
sub
jb
subl
pop
adc
scas
loopne
adc
pop
or
in
sbb
nop
ss
and
jge
or
movsl
bound
lods
iret
pop
adc
shrb
fbstp
dec
mov
pop
fcompl
test
adc
sbb
jb
add
adc
mov
out
cmpsl
jne
daa
or
sub
xor
dec
into
inc
daa
or
mov
test
ja,pt
mov
shll
mov
leave
xchg
in
xchg
ds
neg
and
jae
movsb
push
dec
mov
push
adc
add
xchg
jo
adc
add
sbb
mov
jns
inc
and
movl
mov
andl
sbb
push
sub
adc
sub
dec
in
addb
jge
mov
mov
pop
icebp
fsub
std
test
push
mov
movsl
push
gs
xor
add
lds
xchg
xchg
jmp
lods
sbb
daa
sbb
and
or
xchg
cmp
or
adc
pop
xchg
dec
xor
add
aad
bound
inc
daa
or
call
or
nop
xlat
push
inc
and
push
xchg
enter
adc
adc
jmp
test
xor
dec
xchg
icebp
iret
push
test
or
sub
popf
and
cmp
stos
pop
lods
pop
mov
out
xchg
cmp
or
negb
inc
daa
or
in
adc
nop
ljmp
daa
or
adc
xor
mov
cmp
mov
and
scas
pop
daa
push
xor
pop
fidivrs
sub
daa
or
mov
mov
cwtl
lea
cmpsb
int
inc
ficoms
jnp
lods
fisttpl
mov
pushf
popa
pop
inc
mov
orl
pop
jo
adc
or
daa
fwait
xor
cltd
dec
addr16
test
cwtl
push
aam
adc
pushf
mov
mov
addl
xchg
pusha
push
cmp
aad
or
js
pop
mov
outsl
xchg
jmp
mov
daa
or
popf
and
test
fsubrl
mov
scas
jmp
shll
out
pop
inc
mov
filds
push
adc
mov
sub
addr16
rcrb
push
adc
mov
xor
xchg
rclb
push
leave
fcmovu
bound
pop
les
lds
and
imull
sub
and
loop
cmp
add
adc
arpl
test
lods
push
mov
xchg
jmp
dec
or
aad
push
arpl
daa
or
xor
imul
dec
scas
pushf
stc
mov
daa
or
sahf
adc
push
and
lcall
bound
loope
rorl
or
in
jno
test
mov
xor
inc
loope
popf
cmp
xor
xor
or
imul
adc
movsl
subb
pop
adc
mov
adc
test
sbb
in
int
cmc
pop
fstl
pop
testb
rcl
mov
in
faddp
shr
roll
movsl
cmpsl
xchg
pop
nop
add
adc
xchg
je
jmp
push
sub
pop
adc
pop
adc
jne
cmp
shl
xlat
sub
cld
sub
and
add
ret
jmp
inc
pop
mov
leavew
stos
mov
pop
adc
movsl
or
dec
push
sub
testb
pop
mov
cmpsb
fistps
push
xor
dec
mov
mov
mov
mov
lahf
jmp
or
jmp
std
mov
ja
sub
adc
xor
in
or
loopne
cltd
in
push
mov
mov
sub
sub
test
ret
jp
js
inc
lea
loope
loopne
adc
lahf
pushf
sub
adc
adc
popf
dec
jge
and
adc
sub
cmc
jle
add
cld
dec
in
cmp
ja
jle
or
jle
les
xor
mov
xor
das
inc
insl
dec
jle
popa
cld
jae
and
cmpb
or
dec
mov
cli
push
dec
fcoml
cmpsb
dec
cmp
sbb
xlat
or
xchg
ss
adc
aaa
nop
je
sti
mov
mov
aaa
orl
mov
add
mov
sub
adc
xchg
sbbb
pushf
push
into
cltd
cmp
aaa
shlb
sbb
mov
testb
cmp
or
loopne
dec
test
mov
xchg
or
or
push
out
mov
psubusw
lods
jmp
jo
or
cltd
and
pop
insb
test
faddl
bound
push
jo
add
mov
or
cld
pop
daa
and
jo
adc
sbb
xchg
sbb
gs
pop
mov
out
jmp
inc
inc
out
jle
inc
sbbl
daa
or
fwait
int
xor
cltd
dec
addr16
mov
inc
daa
or
dec
dec
xchg
rcrl
aad
push
push
scas
pop
jne
lea
pusha
dec
push
testl
adc
std
movlps
sbb
pop
in
mov
arpl
xchg
loope
rorl
jo
adc
ljmp
int
xor
lods
pop
pop
sarl
loope
ja
jg
push
dec
xor
outsb
scas
cmp
or
adc
ss
dec
addr16
xchg
dec
mov
lods
inc
add
push
cs
fists
pop
jo
scas
in
xchg
adc
jbe
cmpsl
dec
loope
mov
sbb
adc
mov
jo
rolb
scas
mov
fwait
sub
adc
lahf
xlat
lahf
orb
faddl
popf
cmp
lahf
jno
mov
std
cmp
mov
adc
inc
mov
out
push
popf
dec
into
out
mov
sub
ja
js
inc
loope
aad
mov
mov
lcall
addr16
insb
or
or
xchg
pop
sti
test
adc
push
dec
popf
push
add
xor
ficomps
inc
adcl
mov
mov
or
dec
mov
ja
mov
push
adc
inc
inc
ret
rolb
pop
adc
push
loope
dec
or
arpl
mov
pop
movsl
ret
test
adc
push
cmpsb
dec
aas
gs
insl
loope
lret
sbb
add
inc
daa
or
scas
mov
mov
inc
out
aad
rclb
inc
daa
or
mov
xor
xchg
mov
insb
push
stos
and
push
pop
xchg
xchg
inc
and
je
jmp
dec
arpl
mov
sbb
hlt
movsl
push
lods
aad
imul
jmp
inc
cmpsb
cmp
lahf
or
dec
jo
pusha
stos
inc
sahf
mov
into
data16
pop
repnz
pop
inc
mov
cmp
cli
push
sub
dec
stc
mov
adc
push
mov
fwait
push
cmpb
in
lds
lcall
lds
inc
daa
or
int
dec
nop
jo
stos
fwait
jl
int
leave
mov
jns
jo
mov
adc
test
subl
mov
call
sbb
aas
cmp
loopne
cmp
cwtl
inc
daa
or
adc
daa
or
pop
jns
test
jns
or
jns
in
outsb
jle
push
ret
clc
testb
sub
jle
mov
cld
cld
insb
adc
push
adc
jns
push
pop
jge
icebp
xchg
mov
clc
mov
fs
daa
in
push
pop
adc
nop
xchg
lret
movl
in
lea
in
testb
loope
sbb
pop
hlt
movsl
mov
jb
adc
stc
adc
sub
and
stos
test
jo
adc
cmc
dec
push
and
aad
adc
fcmove
pop
and
leave
sbb
or
inc
in
push
xor
push
cltd
pop
mov
inc
dec
inc
push
and
push
add
push
add
mov
stc
mov
and
push
cmp
test
cltd
inc
mov
sbb
dec
push
les
add
adc
xor
cmp
negb
or
sub
cmp
push
or
shl
aam
inc
loope
dec
mov
mov
mov
xchg
pop
ljmp
push
adc
push
adc
sub
pop
sub
cmp
cmp
shlb
shll
cmp
push
test
or
jo
push
loope
dec
mov
mov
pop
sub
scas
imul
dec
aad
movsl
dec
push
xor
or
xor
dec
dec
pop
and
dec
cmp
hlt
sbb
cmp
cltd
mov
push
sub
rorl
jo
adc
adc
push
sub
cltd
mov
push
sub
jb
adc
xchg
dec
std
rcrb
mov
movsl
xor
ds
out
cmpsl
movsb
cmp
or
pop
fnstsw
adc
pop
push
xchg
pop
or
cmp
mov
leave
dec
iret
cmc
ljmp
lods
push
out
mov
jmp
enter
mov
adc
xchg
fcoms
inc
and
sahf
inc
je
flds
adc
add
adc
cmc
pusha
xor
xor
mov
pusha
adc
sub
inc
jbe
test
pusha
or
adc
mov
push
aas
sbb
mov
sbb
push
jle
aad
dec
mov
xchg
adc
pop
leave
cwtl
pop
lret
je
out
cmpsl
mov
and
adc
xchg
or
push
fdivl
inc
adc
in
push
lds
ret
lahf
lock
cwtl
adc
test
push
es
mov
fldt
cmp
int
ja
pop
cmp
fstpl
inc
jl
and
movsb
rol
jbe
pop
or
shlb
add
xor
inc
insl
test
sahf
loopne
outsl
inc
sub
pop
daa
mov
sub
xor
mov
jbe
add
inc
and
test
cwtl
mov
pop
jge
xchg
mov
dec
inc
cmp
lret
lahf
fs
pop
xchg
scas
sub
in
adc
cli
stos
sub
shrb
ficoml
dec
test
aam
or
and
dec
mov
push
dec
and
xchg
shr
xchg
int3
loop
or
pop
addl
in
test
mov
adc
pop
xor
cmp
mov
sbb
push
stos
pop
scas
rorl
push
xchg
mov
fisubs
lret
icebp
mov
cmp
mov
mov
mov
inc
daa
or
inc
jb
dec
gs
cmpsl
into
mov
fs
jbe
dec
push
jo
icebp
data16
and
pushf
jmp
inc
into
imul
lret
fs
loopne
inc
aaa
add
les
stos
dec
mov
push
sbb
inc
sbb
xor
jmp
mov
jge
mov
movsl
mov
hlt
test
in
pop
bound
adc
rol
cmc
dec
xchg
fcom
cmpsb
xchg
xor
call
push
fiaddl
mov
aas
int
lahf
jo
mov
pop
in
lods
aas
xor
arpl
lods
push
cmp
pop
adc
dec
push
jne
mov
mov
int
mov
lds
xor
lock
jae
popa
movsb
sub
and
sbb
pop
test
xor
adc
add
movsb
xchg
xchg
sbb
or
cmp
add
bound
adcl
mov
dec
aam
pop
jmp
in
daa
pop
shrl
dec
mov
imul
in
push
pop
addr16
dec
test
sub
adc
scas
orb
imul
jno
xchg
pop
mov
lahf
pop
ficompl
mov
xor
inc
pop
out
push
push
jp
sbb
and
data16
pop
mov
das
mov
push
pop
jno
ja
out
xchg
or
repz
out
movsl
cmpsl
xchg
pop
dec
push
pop
adc
xorb
mov
ficomps
push
outsl
jmp
push
sub
cltd
mov
inc
sbb
cmp
sarb
hlt
xchg
in
fisubrs
fsubrp
mov
in
hlt
cltd
xor
push
fiadds
popf
cmp
aad
xchg
jge
or
scas
rcrb
sbb
in
mov
sbb
add
jae
fwait
gs
cmp
lcall
jbe
nop
lods
fidivl
inc
insl
out
jo
mov
and
mov
jp
jg
test
push
pop
or
cmp
sub
dec
adc
jl
cmpsl
cltd
ljmp
in
pop
push
pop
adc
ljmp
push
and
dec
into
bnd
dec
and
push
adc
aas
movsb
jno
adc
jae
lds
or
adc
cmp
loope
lock
adc
push
and
scas
push
xor
pop
sahf
mov
and
jge
sbb
rol
mov
mov
andb
adc
hlt
jp
fsubrp
push
push
jp
sbb
xchg
xchg
and
lock
lods
pop
loope
mov
jmp
adc
call
ljmp
xor
xor
fwait
xor
mov
and
stos
push
pushf
pop
cmp
leave
test
call
sahf
cmp
pop
cwtl
icebp
mov
jg
cmc
ljmp
cmp
adc
sti
xor
roll
call
push
and
push
stos
push
sti
cmovl
frstor
addr16
cmp
out
cld
add
aaa
xchg
pop
inc
aad
mov
push
adc
jo
push
sarl
jg
dec
popf
popf
add
ljmp
stos
shrl
loope
mov
dec
push
ret
andb
adc
xchg
shrl
pop
and
pop
inc
jbe
scas
xor
shrb
mov
and
xlat
xor
pop
aad
sub
mov
push
sub
pop
push
in
xlat
insb
jno
adc
pushf
shrb
adcb
lds
jecxz
mov
or
inc
pop
inc
dec
pop
int3
ja
push
cmc
loopne
and
adc
and
fst
jbe
test
call
test
out
loop
insb
adcl
jle
jg
dec
mov
and
adc
mov
fistpll
and
adc
shlb
cwtl
pushf
cld
pop
bound
cmpsl
add
popf
cmp
pop
xor
sbb
adc
test
out
sub
and
adc
je
dec
adc
aaa
and
adc
or
sbb
fnstcw
clc
add
xchg
inc
pop
adc
or
xor
lcall
jnp
fisttpll
push
pop
popa
out
inc
xchg
movsb
gs
dec
xchg
inc
dec
and
aam
sbb
add
scas
mov
les
insl
dec
fldenv
cltd
xchg
cmc
push
jle
clc
dec
outsl
bound
in
mov
dec
popa
sub
adc
and
dec
lret
jbe
popa
outsb
les
xchg
inc
and
pop
mov
cmp
xlat
push
xchg
mov
cld
fisubs
or
in
sbb
add
test
int
pop
xchg
stos
aad
fisubrs
dec
loop
sub
ja
loopne
in
shlb
sbb
loope
xor
lds
imul
pop
std
cs
loop
aam
fadd
mov
imul
lcall
pop
out
adc
push
and
jnp
negb
mov
mov
pop
out
cmp
sub
pop
ja
cltd
int3
jmp
dec
adcb
push
ficomps
xchg
adc
sbb
bound
jmp
jmp
adc
or
adc
and
sbb
xchg
mov
mov
popa
sub
adc
cld
adc
xor
push
ret
test
mov
jmp
mov
cwtl
xchg
or
int
movsb
xor
xchg
or
push
repz
cwtl
adc
cmp
cmp
adc
jp
jge
push
stos
push
adc
or
int3
bound
adc
je
mov
mov
or
mov
and
adc
mov
outsl
out
xorb
aad
lcall
hlt
ljmp
dec
cmpsl
sub
loope
popf
cmp
out
scas
pushf
mov
mov
cmpsl
adc
and
xor
int
adc
cmp
push
rclb
call
adc
or
or
or
gs
push
in
cmp
ja
or
xchg
fiadds
rorl
cltd
mov
cs
je
mov
push
cwtl
mov
or
sub
xchg
out
xor
jo
adc
shlb
pusha
or
cmp
or
xchg
aam
les
jnp
sub
cmpsb
fildll
lret
in
or
cmp
lret
pop
cmp
rorl
test
js
push
adc
push
adcb
int3
data16
jl
popf
adc
pop
mov
push
xchg
pusha
std
popa
mov
fsubr
jb
sub
gs
mov
xchg
je
test
cld
xor
jmp
or
cmp
call
lods
jb
adc
cld
jge
jne
int
rclb
mov
std
insl
test
adc
mov
inc
imul
pop
loopne
add
sti
jns
sub
push
mov
push
aam
mov
inc
ret
fwait
cmp
jbe
cmp
push
adc
addr16
aaa
lcall
in
cmp
loop
xchg
inc
stc
add
xchg
in
pop
adc
popa
inc
in
mulb
shl
ret
push
jnp
pusha
pushf
jbe
add
imul
lahf
js
or
hlt
popf
push
mov
sti
cmp
inc
and
call
mov
xor
xor
mov
cmp
movsl
in
test
rolb
cs
mov
mov
cs
push
stc
sub
sub
fcom
pop
adc
pop
adc
pop
sub
xor
and
mov
adc
pop
adc
push
test
sub
es
fsubp
bound
mov
jge
mov
outsl
sub
or
mov
xchg
hlt
mov
dec
insb
cmp
pop
adc
orl
xor
movsb
adc
shll
pushf
or
test
pop
fsubp
pushf
push
stos
sbb
inc
daa
std
jg
sbb
mov
cmp
fdiv
xchg
dec
ljmp
divl
popf
xlat
les
inc
aad
xchg
xchg
loopne
repz
fiadds
jl
dec
xchg
xchg
dec
cli
out
adc
out
xchg
inc
mov
jb
adc
es
dec
loope
movb
fidivs
mov
push
test
pop
idivb
pop
add
cmp
push
mov
les
lock
cwtl
mov
inc
lcall
mov
aam
adc
xchg
js
mov
bound
fs
mov
insb
and
adc
lcall
or
call
jo
or
fwait
cmp
sbb
push
sub
mov
and
orl
cld
or
repz
lcall
push
adc
pop
dec
cmp
inc
loopne
incl
adc
in
sbb
add
sbb
repnz
inc
push
dec
popf
test
out
adc
movl
ret
cmc
ljmp
pop
pop
cmpsl
cltd
ss
mov
xchg
arpl
cmpsl
dec
loope
cwtl
inc
leave
clc
ret
cmc
ljmp
cmp
sub
sbb
jle
or
das
add
cmpb
sub
mov
or
pop
adc
pop
cmp
inc
xor
popf
cmp
and
push
adc
sub
pop
fidivrs
pop
adc
xor
and
in
incb
adc
cmc
stos
les
aam
test
shrl
in
aam
adc
lcall
jl
xchg
xor
cmp
adc
inc
in
jo
adc
ret
mov
and
mov
lds
insb
cmpsl
dec
cmp
into
test
adc
and
adc
xor
insb
sub
and
adc
and
loop
aam
push
mull
adc
insb
pop
aam
mov
popf
lds
popf
cmp
shll
mov
es
lock
pusha
inc
out
pop
or
data16
push
shrl
adc
push
push
imul
fidivrl
es
mov
mov
cmpsl
adc
out
fimuls
sub
pop
adc
xchg
lock
daa
and
jmp
xor
gs
movlps
imul
cmp
ficomps
arpl
jl
cmp
jb
adc
jbe
sub
lds
fsub
cmp
ficoml
mov
dec
popa
and
iret
mov
adc
add
adc
xchg
sub
xor
imul
popf
clc
or
dec
fwait
fwait
add
into
repnz
sub
fcmovnb
outsb
xor
aad
xlat
outsl
ss
inc
je
push
adc
lds
jmp
leave
mov
in
jo
push
mov
icebp
mov
sbb
pushl
jae
mov
cmpsb
xchg
sbb
xchg
popa
xor
imul
enter
inc
dec
sbb
mov
rorl
adc
or
jp
aam
inc
scas
jge
jmp
fwait
jo
push
shld
scas
fs
mov
dec
sub
jo
adc
adcl
shrl
xchg
imul
and
adc
cmp
push
js
push
adc
insl
inc
shl
inc
sub
jae
lahf
scas
inc
mov
cmp
enter
js
push
adc
or
xor
in
leave
in
mov
push
jp
pop
sub
jae
shlb
vmread
adc
and
push
jo
push
inc
pop
jle
lods
xor
adcl
sub
popa
ret
xor
xor
rolb
or
and
in
pop
mov
or
pop
or
add
adc
data16
xchg
cwtl
jno
lock
daa
xchg
in
test
std
fisubrl
mov
cmpsl
leave
adc
shll
sbb
push
orl
mov
test
push
fwait
push
dec
xorb
xchg
aam
les
fildl
aaa
xchg
cmc
pusha
es
cmp
and
jae
jmp
aas
shll
rcrl
pop
inc
insb
adc
inc
addr16
jo
bound
xchg
call
popf
inc
leave
leave
mov
repnz
dec
cmp
xchg
pop
out
xor
stos
cmp
pop
fstpl
push
in
popf
jb
xor
push
cld
push
pop
or
mov
mov
inc
sub
pop
fiadds
or
adcl
decb
dec
add
xor
sahf
pop
inc
and
inc
mov
mov
pushf
incl
cmpsb
pop
add
popa
adc
outsb
mov
push
stos
stos
nop
or
cmp
inc
push
stos
cmp
shll
push
adc
dec
push
jecxz
test
inc
pusha
or
adc
xchg
mov
or
xor
mov
xchg
adc
and
adc
fwait
push
adc
adc
or
or
adc
cmp
shll
pop
xchg
xor
add
or
mov
sub
push
rorl
xor
pop
imul
es
adc
push
sarl
and
mov
push
adc
push
mov
push
iret
mov
inc
insl
jb
scas
or
insl
jae
mov
or
adcl
out
fstps
xor
cmp
scas
mov
xor
out
fidivrs
pop
sti
cmp
cmpsb
lcall
push
dec
out
addl
cmp
clc
leave
mov
fsubr
inc
cld
xor
addl
cmpsl
dec
loope
lret
sbb
xchg
loop
fidivs
jns
std
jmp
mov
pop
pop
sub
movsb
loop
ja
jmp
cmp
in
sub
stos
push
pop
push
aad
inc
pushf
icebp
push
xchg
mov
cmp
scas
popf
lock
adc
and
pop
stos
sti
mov
lds
cs
pushl
sahf
sahf
mov
inc
xor
out
stos
add
fsubrs
arpl
xchg
pop
in
outsb
out
in
jb
or
jecxz
mov
or
or
jp
pop
cmp
pop
stos
mov
inc
roll
lea
jge
in
repnz
sarl
not
and
mov
imul
outsl
push
in
and
fsub
lcall
mov
arpl
xchg
mov
dec
mov
and
xor
sub
inc
out
jno
jbe
mov
cld
scas
adc
int
mov
movb
xor
push
xchg
push
xor
push
and
out
loope
pop
cmp
je
ljmp
sbb
hlt
sub
scas
aad
iret
imul
hlt
movsl
mov
stc
adc
aam
push
lock
repnz
mov
push
lods
pop
stos
inc
in
or
sti
push
cwtl
out
inc
das
popa
inc
in
mov
mov
mov
inc
cmp
sarl
dec
push
negl
dec
dec
ficompl
jo
imul
scas
cmpsb
push
push
loopne
jle
xor
jnp
scas
mov
xor
xor
sbb
stos
add
jle
push
iret
rorb
scas
adc
push
mov
add
in
push
push
jmp
jns
mov
push
mov
or
pop
stos
pop
xor
dec
dec
test
xchg
lock
adc
inc
aad
sub
and
inc
out
cltd
xor
pop
mov
xchg
loope
shrl
jmp
mov
fldcw
daa
xor
leave
cmp
cmp
push
daa
mov
adc
adc
dec
ljmp
dec
cltd
bound
mov
scas
enter
loop
scas
jae
fimuls
xchg
cld
xor
addl
push
nop
mov
mov
xchg
loop
fidivs
jns
std
imul
mov
lods
pop
loope
fidivl
or
aas
ja
sub
push
stos
push
jns
adc
push
cmpsl
mov
sub
mov
lods
mov
and
jg
jns
stos
lods
push
cmpsb
cmp
xor
sbb
mov
xchg
jecxz
cmp
mov
scas
mov
leave
mov
adc
pop
data16
mov
jb
dec
pushl
and
inc
insl
inc
or
and
jl
ret
test
and
push
cs
shll
aas
fidivrs
adc
and
push
outsb
pop
push
ljmp
jmp
out
fidivrs
jp
test
shlb
je
jne
je
shrl
orl
sub
das
scas
mov
mov
xchg
sub
pusha
pop
xchg
jmp
jmp
sub
dec
ljmp
dec
cltd
mov
push
cmpsl
dec
adc
arpl
add
clc
in
insb
jp
ljmp
dec
cltd
mov
push
cmpsl
dec
adc
arpl
mov
clc
lea
ljmp
dec
cltd
mov
push
cmpsl
dec
adc
arpl
mov
clc
lods
insb
jp
ljmp
dec
cltd
mov
push
cmpsl
dec
adc
arpl
cmpsl
dec
popf
mov
clc
dec
insb
jp
xchg
out
adc
mov
and
push
out
xor
jg
dec
popf
cmp
cltd
and
jecxz
add
aam
addr16
jae
inc
sub
push
repz
pushf
cmp
mov
xchg
decb
js
stos
push
in
sub
cltd
fidivs
movsb
dec
xlat
pop
mov
cmp
in
or
les
scas
push
mov
xor
fwait
jne
adc
pop
pop
xchg
out
jno
scas
mov
jl
or
mov
mov
xor
fildll
push
pusha
das
cwtl
and
jb
jo
push
mov
pop
arpl
and
out
insl
push
test
xorb
adc
push
mov
mov
or
push
xor
js
pop
adc
mov
out
aas
dec
into
cmpsb
push
daa
std
filds
inc
leave
pop
adc
movsl
sahf
js
cmp
leave
pop
adc
sti
push
imul
test
leave
pop
adc
cs
push
scas
cmp
adc
add
jle
jmp
movsl
and
adc
mov
sbb
pop
adc
lods
mov
aam
icebp
jecxz
adc
xchg
lret
or
dec
push
hlt
js
or
mull
repnz
cld
je
or
enter
daa
or
cmpsb
aam
adc
stos
lret
iret
pop
adc
cwtl
xor
sub
push
dec
mov
pop
push
cmp
out
test
and
xor
or
cmp
pop
adc
adc
pop
jp
lret
fldt
and
out
xchg
dec
hlt
mov
mov
mov
cmpsb
xchg
imul
mov
arpl
cltd
xor
stos
mov
in
popa
xchg
mov
lahf
js
or
mov
dec
sbb
add
jnp
daa
or
gs
jae
fcompl
or
add
cli
xor
rcl
hlt
sahf
dec
lret
adc
sub
or
xor
dec
arpl
les
sbb
sub
iret
push
test
xor
fnsave
push
cmpsl
dec
pop
cmp
dec
cmp
test
adc
es
xor
das
xchg
daa
mov
and
xor
std
stc
lret
repz
cmpsb
and
ret
loopne
sub
mov
aaa
pusha
hlt
lea
pop
adc
and
pushf
sub
sbb
pop
adc
and
pop
adc
repnz
xor
or
xor
mov
xchg
sbb
adc
daa
lods
iret
pop
adc
dec
mov
xchg
or
pop
repnz
ja
js
push
dec
in
mov
daa
or
shrb
loop
inc
leave
pop
adc
pushf
sub
je
pop
adc
and
roll
adc
push
stos
push
lahf
cltd
in
cmp
fdivrs
xor
dec
into
sbb
dec
inc
leave
pop
adc
pop
fcoms
arpl
leave
pop
adc
out
je
jne
divl
test
adc
push
cmp
movsb
insl
test
out
xor
ds
dec
popf
pushf
add
sarl
add
sub
pop
adc
popa
popf
jb
inc
sub
cmp
pop
adc
leave
or
mov
adc
stos
or
out
lret
ljmp
adc
jle
xchg
and
leave
pop
adc
sti
mov
xchg
adc
pop
mov
mov
or
mov
pop
adc
or
test
jmp
adc
inc
mov
sub
adc
pop
ja
mov
aad
cmc
xchg
stc
rcrb
sahf
int3
push
popf
out
cltd
je
or
fsubl
popa
test
or
push
arpl
sub
or
fistps
pop
xor
adc
pop
adc
adc
and
popa
and
push
inc
jb
cmpsl
dec
in
adc
ljmp
les
push
cmp
fidivrl
push
lahf
push
stos
fstpl
mov
dec
xor
sbbl
or
enter
inc
andl
aad
scas
push
fs
push
fists
mov
pop
xchg
jmp
jecxz
movsl
inc
xchg
movsb
or
out
lcall
xchg
jb
inc
jecxz
xchg
pop
push
dec
lret
js
fisubrl
mov
dec
push
repz
xchg
jge
fsub
sub
lret
dec
push
negl
jecxz
and
outsb
cltd
arpl
inc
push
notb
sbb
int3
add
repz
jle
incl
add
mov
and
pop
lret
fists
int3
sub
dec
xchg
popf
push
adcl
das
cld
scas
adc
test
cld
push
pop
lea
fcomps
insb
push
addl
imul
jl
jecxz
out
cmpsl
popf
sbb
sub
rcr
push
mov
inc
xor
lret
push
xor
loopne
inc
jecxz
stos
dec
dec
add
add
insb
popa
int
bound
cmc
mov
adc
adc
push
xchg
dec
dec
push
negl
call
fdivrl
in
dec
mov
adc
push
cli
or
inc
inc
jle
or
mov
mov
adc
mov
daa
sub
sub
dec
shr
test
lahf
jl
flds
rcl
xchg
imul
gs
fmuls
cli
and
out
icebp
pushf
add
sbb
pop
adc
outsb
pop
jo
repz
or
dec
mov
push
xor
stos
inc
leave
pop
adc
or
bound
inc
leave
pop
adc
push
movsb
shl
outsb
inc
loop
inc
leave
pop
adc
daa
or
cmp
or
jno
push
dec
jno
push
cmpsb
sahf
test
push
int
xchg
fcoml
addl
pop
jge
ds
cmp
mov
xchg
push
sub
jno
popf
std
sbb
fcoml
sub
adc
push
mov
cwtl
xchg
pop
out
push
or
inc
push
sahf
jmp
push
or
xor
mov
sub
or
rol
or
adc
cmpsl
div
enter
adc
out
and
or
sub
popf
or
pop
adc
cs
cmc
add
jge
insb
sbb
adc
mov
add
je
in
add
pop
in
loop
lods
pop
jno
jg
mov
notb
lods
cmpsl
test
or
rorl
or
xchg
loope
popl
mov
inc
xlat
leave
xor
popf
or
and
loopne
jbe
lret
pop
adc
mov
jb
jno
stos
xchg
outsl
imul
add
jg
out
fidivrs
push
cwtl
bound
jge
mov
add
and
mov
and
xchg
adc
add
xchg
outsb
pop
sub
dec
adc
gs
addr16
push
dec
ja
jo
adc
out
cmp
enter
push
loop
fcoms
call
jecxz
jge
sub
lds
cld
push
push
ljmp
icebp
icebp
cmc
inc
pop
sub
or
adc
inc
cwtl
popf
jmp
adc
jle
jns
mov
pop
adc
rorl
cltd
jge
je
orb
adc
dec
out
lret
je
pop
adc
jae
dec
loop
xchg
sub
mov
jmp
aam
pop
ficoms
aad
std
insb
push
push
test
rcrl
lods
sbb
cmp
cwtl
pop
dec
xchg
call
in
dec
sub
push
bound
fildll
or
aam
dec
pushf
cmp
jmp
pop
sub
mul
fucomip
fisttpl
mov
int3
imul
pop
dec
add
imul
loopne
daa
pop
fists
jno
enter
fcomps
jl
repnz
sub
jecxz
mov
divb
aam
fdivp
hlt
shlb
or
into
mov
sahf
ss
and
cwtl
shl
sub
or
mov
movb
shlb
adc
mov
add
aam
or
xchg
iret
mov
adc
jne
jl
jnp
mov
xchg
jl
js
pop
das
cmc
pop
shlb
adc
xchg
pop
enter
clc
jne
or
ljmp
add
mov
je
pop
dec
pop
pop
mov
sbb
mov
lds
pop
adc
xor
in
xchg
aas
adc
test
fwait
sbb
les
xchg
or
scas
pop
inc
rol
dec
aaa
add
fldl
add
call
mov
fsubl
or
dec
or
or
stc
fisttps
cmp
jnp
mov
sahf
and
jb
mov
jle
subl
pop
ret
inc
push
jl
enter
das
aam
test
frstpm(287
lcall
jns
movsb
shlb
or
jbe
out
jnp
sbb
pusha
inc
and
or
mov
push
shlb
adc
dec
imul
mov
or
jge
mov
push
add
out
addr16
mov
sbb
cli
push
lds
int3
or
cs
lea
jbe
xchg
jl
into
mul
or
pop
icebp
in
rol
and
dec
xchg
jp
sahf
fsubl
or
mov
xorl
pop
aam
xchg
and
or
mov
test
les
or
mov
or
cwtl
inc
add
or
inc
dec
bound
daa
inc
fsubr
adc
or
ret
test
dec
pop
inc
inc
sub
or
shlb
adc
add
std
sbb
push
test
or
insb
push
jmp
adc
or
or
and
popf
pop
std
movsl
test
ljmp
or
mov
lock
cmp
or
cli
test
adc
fs
aaa
fmul
lcall
xor
or
inc
mov
inc
inc
pop
inc
aad
loopne
or
cmpsb
mov
or
testb
lds
movsl
adc
fsubl
or
mov
xchg
test
sub
or
mov
stc
int3
or
lock
sub
fsubs
or
sub
or
inc
rolb
fsubs
or
popf
std
sub
outsb
and
int3
or
sub
fsubs
or
in
imul
dec
into
xchg
jl
test
or
leave
mov
xchg
cmpsl
shrl
xor
push
fnsave
pushf
incl
lods
push
shll
adc
sbb
or
and
or
cmp
or
cltd
pop
pusha
xor
int3
pop
out
cmp
in
jg
mov
imul
jbe
lret
pop
adc
nop
addl
dec
mov
pusha
insl
cmpsl
adc
push
or
insl
in
jo
mov
popf
cmp
xor
or
nop
ljmp
or
fcmovu
sbb
jmp
fsubl
or
pop
xchg
rorl
push
pusha
es
scas
int3
or
adc
lock
cld
das
gs
or
push
pop
sbb
fsubs
or
movsb
xor
inc
cmpsl
adc
push
push
insb
fsubl
or
fldl
push
cmpsl
xor
js
xor
push
in
fistpll
mov
or
lahf
mov
adc
icebp
les
or
adc
or
jecxz
test
stos
mov
fsubp
cmpsb
out
lea
insl
pop
mov
repz
or
pop
pop
divb
lods
cmp
jne
insl
cmp
add
or
fwait
mov
popa
shlb
adc
add
adc
xchg
hlt
fsubl
or
dec
pop
mov
or
dec
insb
or
addb
or
test
scas
fwait
int
cwtl
mov
pop
mov
or
jp
adc
and
or
and
insl
add
or
adcl
int
jecxz
fsubl
or
test
pop
xchg
mov
fsubs
or
push
shrl
cmc
add
jb
adc
or
cmc
popa
call
lret
mov
push
or
test
nop
scas
fsubl
or
cmp
test
dec
shl
jo
or
inc
in
mov
fsubs
or
fdivl
in
out
and
fsubl
or
hlt
daa
mov
stc
mov
lret
lret
testl
add
or
push
orl
xor
mov
or
and
hlt
and
adc
xor
push
adc
loopne
or
mov
or
ja
add
pop
into
dec
sub
xor
loope
ret
cmp
or
jo
or
jg
hlt
and
or
mov
pop
adc
loopne
fsubl
or
lods
aam
or
out
pop
jge
into
ret
or
jo
test
mov
mov
adc
pop
jp
in
add
ret
into
sbb
or
xor
fsubl
or
jg
cmp
pop
jle
gs
mov
sub
or
pop
pop
cld
sbb
pop
icebp
or
test
xor
add
fwait
lds
xchg
bound
mov
pushf
cmp
and
repnz
adc
lret
adcb
pop
mov
dec
add
mov
jge
out
and
pop
mov
jle
jb
adc
add
mov
scas
mov
adc
or
aad
shlb
cmpsb
ret
imul
shl
inc
shll
or
xor
pop
enter
xor
cwtl
push
loop
test
lds
mov
pop
push
xlat
jecxz
pushf
sbb
je
pop
adc
mov
xchg
ret
fidivrs
in
push
fldenv
mov
jge
movsb
loopne
or
movsb
xor
jg
fsubr
push
cld
xor
pop
enter
popf
shl
or
xor
mov
jp
ret
inc
mov
inc
aas
out
cltd
xor
icebp
addr16
sbb
testb
add
or
scas
sarl
aad
add
jecxz
inc
iret
cmp
lahf
lods
shlb
scas
lcall
mov
jg
mov
cltd
push
pop
xor
jne
jl
xchg
dec
int
scas
pushf
xchg
cmp
dec
inc
fidivs
mov
fbstp
pop
dec
jae
jb
adc
sub
push
xor
shlb
out
mov
sbb
mov
jle
adc
jb
adc
inc
imul
push
fucomp
pop
jl
push
xor
out
xor
jb
adc
scas
cmp
cmp
mov
ret
lock
out
idivl
ja
shl
pusha
es
stos
and
ss
ffreep
cmp
push
mov
jbe
mov
xor
push
dec
cmp
pop
sub
and
mov
mov
cs
aad
xchg
xchg
arpl
pop
mov
pop
mov
aaa
orb
sub
mov
cmp
push
shrl
mov
fldcw
mov
dec
int
stos
push
pusha
and
fstl
sub
jl
pop
loopne
out
ljmp
cmp
dec
lret
in
pop
adc
jb
imul
xor
and
loop
test
mov
fwait
sub
xchg
repnz
sahf
add
mov
pop
adc
aaa
xchg
fwait
cmp
insl
lea
out
cs
push
xchg
xlat
push
insl
mov
leave
inc
dec
insb
push
dec
inc
aad
add
mov
jle
in
or
aas
jge
or
in
call
sub
or
icebp
pop
and
ffree
lock
ja
imul
mov
movaps
and
xchg
arpl
enter
jo
cmp
sub
in
or
movb
or
adc
gs
leave
jmp
out
es
pop
stc
sub
outsl
fwait
jb
cmp
add
imul
aad
insb
roll
outsl
mov
dec
jns
sub
cmp
inc
in
cmp
repnz
push
out
cmp
or
sbb
jl
mov
xor
mov
adc
icebp
cltd
and
aam
adc
fcom
pop
adc
jne
test
add
mov
mov
lea
aad
push
cli
mov
pushf
push
imul
mov
rorl
xchg
in
iret
xchg
mov
jg
popf
sar
jp
adc
pop
movsb
or
mov
dec
dec
sub
xchg
xchg
pop
mov
pop
out
movsl
sub
push
adc
add
or
mov
sub
sbb
mov
pop
add
clc
or
mov
sub
sbb
adc
add
jo
adc
mov
cmpsb
imul
roll
in
sbb
adc
out
test
or
and
xor
sbb
adc
add
enter
fdivl
cmp
sbb
and
adc
testb
or
js
lods
sbb
adc
cmpsl
addr16
sub
daa
or
push
leave
loopne
sbb
adc
cld
testb
adc
add
or
out
push
fsubs
inc
dec
bound
aad
sahf
xchg
loop
lods
pcmpeqw
sub
or
dec
pop
inc
insl
and
mov
sub
and
adc
cli
sbb
add
mov
leave
jno
lret
or
out
incl
rorl
fs
jecxz
daa
or
shrb
test
inc
lret
push
sub
inc
rorl
or
dec
jg
dec
leave
sahf
outsb
jno
insl
test
call
sarl
and
cmp
inc
daa
or
or
aad
jmp
xlat
test
push
es
iret
mov
out
xor
mov
dec
mov
int
jmp
lcall
and
mov
xor
clc
cmp
sub
out
std
cmovl
leave
and
push
adc
pop
push
lds
inc
fidivrs
push
stos
aad
cmpsb
in
cmp
jb
cld
sub
icebp
push
decb
push
shll
mov
pop
push
and
gs
push
les
or
mov
dec
mov
jg
sbb
loopne
mov
and
adc
xchg
arpl
add
pop
stos
ja
and
adc
pop
and
pop
out
pop
loopne
mov
dec
cmp
mov
lods
or
and
lock
cmp
lds
mov
inc
push
or
ljmp
cmp
adc
out
xchg
pop
pop
xchg
dec
iret
xor
xchg
cmp
call
fisubrs
sar
inc
enter
ret
sub
mov
adc
mov
xor
nop
fiaddl
std
and
jmp
mov
xor
cmp
mov
xchg
loope
jle
dec
aas
shrl
add
pop
mov
adc
adc
js
mov
scas
sahf
ret
jno
in
sarb
into
or
lods
sbb
cmp
inc
imul
inc
outsb
fwait
rcrb
daa
xchg
pop
addr16
hlt
dec
in
fcomps
popf
jae
cmp
xchg
jmp
adc
mov
adc
mov
sbb
mov
xchg
jl
js
pop
add
std
push
dec
jecxz
jle
lods
xor
test
arpl
or
mov
xchg
hlt
mul
lods
or
out
data16
push
inc
pop
cmpsl
jge
xchg
lea
push
jecxz
dec
xchg
sti
jmp
dec
inc
push
and
ss
sbb
stc
pop
xor
imull
push
push
pop
xor
adc
and
into
mov
scas
lock
int3
or
push
int
dec
xor
outsl
mov
shlb
fwait
inc
out
mov
lea
jae
push
cli
in
divb
sbb
lret
arpl
dec
faddl
pop
inc
jmp
gs
rolb
insl
push
inc
int3
stos
js
lods
daa
sub
popa
enter
jno
adc
test
sub
jmp
lock
lcall
fists
dec
cltd
andl
shl
repnz
or
and
fwait
sbb
cmp
and
sub
lods
ss
xor
push
in
daa
into
imul
sbb
sub
scas
mov
pop
loop
aad
push
shrl
jecxz
lcall
leave
outsb
loope
je
add
mov
lret
push
test
cmp
fisttpll
sub
xor
pop
imul
orb
shrl
mov
xchg
xor
into
pop
out
dec
popf
aam
hlt
mov
stos
jmp
stos
adc
jecxz
pop
fs
ficoml
daa
xor
xor
dec
popf
dec
into
sbb
adc
dec
loope
mov
xor
push
xchg
dec
adc
divl
pop
cwtl
cmp
xor
mov
xchg
cmpsl
adc
inc
aam
cltd
xor
imul
add
cmp
out
jbe
in
out
iret
sar
sub
dec
aas
xchg
test
jae
outsb
dec
std
push
mov
leave
cmp
push
sub
push
out
xchg
dec
fs
adc
lahf
jne
cmp
adcb
addr16
and
pop
call
aad
adc
bound
push
pop
hlt
cmp
mov
mov
pop
adc
xchg
push
out
adc
sub
dec
popf
inc
dec
sbb
or
add
lock
adc
insb
or
ss
gs
addr16
jmp
jnp
les
gs
sar
ret
test
dec
pop
adc
stos
push
ficomps
gs
dec
jmp
cld
or
pop
jo
xchg
sbb
sbb
dec
pop
int3
add
ja
aad
and
push
fidivl
and
gs
in
sub
inc
cmp
sti
outsb
xchg
add
pop
pop
sahf
pop
pop
cld
fcmovnbe
pop
jne
std
adc
adc
push
push
add
test
lds
ret
xchg
jo
mov
adc
pusha
jnp
ja
mov
mov
int
das
mov
and
mov
lods
sub
inc
dec
out
inc
scas
jmp
xchg
pusha
pop
or
hlt
or
fwait
out
and
mov
call
push
setl
mov
pushf
inc
xchg
xchg
mov
fwait
pop
popa
jmp
mov
aad
xchg
cmp
add
shlb
fdivrs
daa
mov
in
jb
rolb
or
jg
mov
jne
jae
lods
sbb
sar
push
ss
pop
popa
outsl
xor
flds
cmc
xchg
test
inc
loope
fwait
jge
push
cli
inc
mov
add
mov
inc
cld
inc
and
mov
push
dec
icebp
repz
and
out
xchg
jl
std
das
rcl
mov
loope
es
imul
dec
xor
lock
jge
mov
mov
adc
lock
repnz
mov
loop
sarb
shrb
inc
cmp
outsl
lock
es
jnp
in
xlat
add
in
cmp
mov
xchg
pop
add
xchg
cld
push
xor
hlt
pop
addr16
cs
jb
adc
cwtl
repz
loopne
mov
popa
mov
dec
inc
xchg
sahf
enter
mov
js
jecxz
jge
or
dec
sti
icebp
dec
dec
aaa
mov
jo
jl
pop
mov
mov
adc
jge
rcr
addr16
arpl
decl
in
xor
cmc
mov
sbb
dec
add
and
ja
xor
roll
lods
cli
and
aaa
xor
lahf
jle
mulb
mov
push
insb
mov
and
sbb
jno
add
jno
add
push
mov
pop
xlat
loope
fsubrs
sub
lock
in
jbe
and
jg
das
adc
and
dec
add
jmp
xchg
mov
push
mov
sub
loope
mov
adc
adc
data16
push
ljmp
popf
sub
push
std
add
mov
adc
movsb
pop
mov
enter
lods
sarl
and
push
das
pop
lds
jno
and
jg
and
inc
movsl
int
xor
fcomps
aad
push
out
or
mov
aas
jns
dec
mov
cmp
push
popl
push
and
mov
rolb
inc
pop
and
mov
scas
dec
xor
pushl
and
or
adc
and
mov
adc
pop
jmp
into
ljmp
jns
push
pusha
daa
mov
je
les
cmpsl
les
ljmp
add
cs
fsubr
scas
jae
jo
adc
sub
xor
call
lret
int3
aam
push
and
inc
daa
or
sbb
je
mov
xchg
or
cmp
cmp
inc
fstpl
inc
ret
or
pop
adc
pop
icebp
push
mov
daa
or
push
xor
les
repnz
or
in
push
sbb
je
cwtl
cwtl
jo
movl
data16
jb
fadd
ljmp
cmp
fiadds
dec
pop
shll
cmpsl
les
pusha
pmaxub
fsubr
mov
or
jb
and
push
lahf
mov
lds
popf
cmp
xor
ror
ljmp
dec
cltd
and
daa
sbb
std
psrlq
push
pusha
mov
mov
sbb
test
int
xor
dec
loope
mov
sub
or
mov
inc
dec
daa
or
xor
add
sbb
push
movsl
sub
fs
test
hlt
add
pop
insl
adc
mov
int3
pop
jno
xlat
adc
xrstors
inc
movsl
test
sbb
inc
sbb
or
and
int
hlt
xor
insb
jo
adc
adc
dec
add
out
inc
or
cmp
call
and
fwait
hlt
sub
stos
pop
mov
inc
je
pop
push
xor
loop
cs
mov
jb
movsl
mov
sbb
ds
mov
in
add
into
pop
popf
adc
add
jl
subb
jnp
xchg
push
filds
sbb
stos
jb
cmp
cwtl
imul
jge
xchg
sbb
xor
data16
out
je
jle
aaa
into
cmp
jb
cmp
mov
cmp
call
cmp
xchg
imul
and
aam
insl
xchg
outsl
out
pop
cwtl
push
pop
imulb
aad
mov
popw
pop
xchg
cmpsl
jmp
fistl
movsb
loopne
pop
lret
sbb
sub
in
or
adc
sbb
pushf
loope
daa
pop
mov
fwait
lock
adc
sahf
jmp
ret
mov
xorb
and
adc
jle
fdivp
xor
sub
ficoml
fwait
pushfw
popa
push
pop
addr16
push
das
xchg
jle
or
mov
outsl
mov
rcrl
lods
cli
push
jecxz
mov
addl
pop
movsb
mov
lret
loopne
push
insb
cwtl
jae
or
push
adc
mov
sti
cmp
jo
adc
in
fildll
pop
jo
adc
xchg
push
pop
imul
push
adc
outsb
in
test
dec
bound
push
shrb
xchg
aam
les
vmovaps
loop
in
stos
push
loope
mov
or
outsb
pop
mov
inc
daa
or
popf
jmp
push
jge
mov
push
dec
mov
shl
cltd
dec
dec
and
push
mov
jmp
inc
daa
rorb
pusha
ljmp
xor
pop
jmp
dec
push
shll
adc
aaa
fimuls
pop
pop
sbb
outsb
mov
call
stos
popf
jmp
out
cmp
shl
jge
out
test
mov
fnsave
gs
fisubrl
cwtl
les
call
mov
inc
leave
xchg
mov
adc
cmc
sub
xor
dec
popf
inc
dec
sbb
fdiv
jp
dec
ret
push
test
sbb
pop
adc
pop
dec
dec
popf
inc
out
repnz
aam
les
xor
pop
pop
adc
and
lret
movb
cmp
sarb
shl
mov
stos
mov
adc
inc
lods
movsl
cltd
xor
push
xor
push
dec
popf
popf
dec
jp
sub
sbb
adc
adcb
or
or
mov
fwait
imul
add
outsb
inc
cmpsl
or
or
mov
popf
rolb
lcall
daa
or
push
stos
push
lods
clc
or
or
push
lods
mov
cmp
push
shrl
out
xor
jno
adc
in
push
lods
fimull
mov
call
les
sub
jo
or
adcl
fimuls
push
adc
xchg
mov
les
outsb
rcl
call
sub
jge
popa
sub
out
dec
cli
pmulhw
xor
and
dec
pop
fnsave
jo
adc
cltd
jl
mov
imul
out
leave
loopne
das
cwtl
mov
and
dec
popf
dec
in
stc
stos
xchg
cli
mov
dec
pop
cmp
lcall
push
out
rcl
mov
add
in
push
imul
and
fildl
test
sahf
cmp
dec
scas
add
aad
int3
and
jp
jecxz
xor
out
xchg
movsl
mov
jb
xor
adc
es
cmpsl
rcr
test
mov
inc
xchg
fadds
mov
cmpsb
scas
jge
add
mov
lds
pop
cmp
push
dec
and
stos
dec
stos
xchg
sbb
test
jae
sub
sbb
arpl
or
adc
or
and
lret
or
mov
mov
sub
imul
mov
jmp
sub
rcll
sbb
pop
sbb
adc
fidivrs
adc
popa
lret
cmp
les
int
pop
lret
fstp
imul
outsb
xchg
es
nop
sub
jecxz
scas
popa
das
adc
cmpsb
imul
adc
dec
dec
mov
ficoms
or
movsl
inc
sbb
adc
sarl
xor
adc
or
fcoml
jae
lea
push
cmpsb
call
daa
or
or
jo
adc
jg
adc
or
ja
xor
or
xchg
cmp
sbb
mov
adc
inc
movsb
or
int3
jb
adc
push
ljmp
mov
lahf
adc
fnstenv
hlt
in
jns
andb
adc
xchg
ret
pop
fcmovbe
lods
cmp
pop
push
popf
rcr
cmpb
sbb
imul
aad
dec
stos
inc
push
push
sbbl
les
mov
push
add
shrl
cmp
inc
in
lretw
out
arpl
xlat
je
int3
mov
jo
ja
stos
mov
std
popa
cltd
fdiv
mov
push
xor
out
cmp
jo
adc
cmc
add
inc
rcrb
sub
fiadds
sub
or
int3
xchg
mov
jo
adc
push
fs
jecxz
aad
repnz
mov
mov
fstpt
push
sbb
adc
xlat
ja
adc
adc
orb
push
xor
bound
push
adc
pop
push
cmp
daa
or
test
jo
adc
mov
xor
or
mov
lds
adc
adc
push
or
sub
int
mov
dec
notb
sub
push
xor
std
test
lds
int3
jb
adc
mov
xchg
testl
pushf
pop
test
jae
dec
jp
sbb
cmpsl
dec
jmp
arpl
inc
test
xchg
and
inc
mov
ja
gs
popf
in
sahf
cmp
dec
lock
roll
addl
dec
adc
jo
xlat
lods
pop
mov
xchg
je
and
int3
jb
adc
add
int3
arpl
popf
mov
jl
movntq
js
push
adc
mov
mov
push
add
daa
and
shrl
out
push
dec
jp
sbb
push
adc
add
jb
jns
push
fwait
in
sub
inc
int3
ss
cmp
dec
inc
jns
lods
iret
pop
adc
push
inc
lcall
lods
mov
sbb
sub
out
ficomps
fsub
and
pop
sti
ror
push
sub
cmp
cmp
push
rclb
gs
fistl
loopne
hlt
jmp
nop
mov
fwait
mov
hlt
push
rcll
mov
mov
lods
fisubrl
push
stc
shl
cltd
std
pop
popa
jecxz
mov
std
fldenv
aas
pop
daa
inc
addl
and
sbb
sub
jae
xchg
imul
pop
inc
or
adc
daa
mov
cmp
mov
jno
add
sub
sbb
jle
adcb
xor
cs
test
xor
je
pop
adc
daa
jnp
pop
js
sbb
fcomps
imul
dec
adc
cli
aas
test
sbb
mov
imul
lock
mov
shrb
mov
xlat
or
inc
and
cli
mov
imul
je
pop
adc
adc
dec
aad
pusha
pop
aad
lret
insl
mov
fsubrl
pusha
mov
mov
aaa
fs
int3
xchg
push
sub
mov
sbb
jg
data16
sub
and
stc
clc
add
jp
dec
mov
pop
je
pop
adc
testl
and
push
fwait
mov
popf
imul
mov
pop
or
jae
addr16
push
cmp
pushf
rcr
push
push
add
jecxz
pop
je
pop
adc
jmp
pop
das
push
mov
mov
pop
imul
and
roll
xchg
aad
sub
or
pop
test
push
out
pop
adc
or
cltd
push
nop
jecxz
jmp
clc
das
fdivl
lahf
ds
xchg
push
mov
sbb
lahf
add
jecxz
push
cmpsb
xor
sub
pop
jno
je
and
jb
add
mov
std
movsb
push
push
test
dec
ss
pop
sti
lds
out
mov
insb
cmp
xchg
shrl
das
pop
mov
ret
call
int3
lds
out
mov
and
insl
or
scas
loop
push
lods
xor
imul
cld
mov
lds
and
mov
push
sub
inc
out
stc
call
daa
leave
add
and
loope
les
dec
fstpl
sub
iret
gs
shlb
daa
or
mov
and
aad
rclb
popf
hlt
in
add
hlt
pop
pop
fnstcw
je
lods
mov
insl
loope
das
mov
push
fbstp
out
in
mov
and
and
ret
pop
pop
jle
das
jo
jp
sbb
aad
rcll
ss
xor
popa
mov
fisttpl
lret
shll
out
fmulp
lock
sahf
sarl
adc
pop
jo
xlat
lods
pop
mov
xor
and
jp
sarb
push
add
jmp
inc
stos
push
rorl
jns
xchg
subl
cmp
jne
insb
mov
ss
xor
xchg
xchg
inc
pop
cmp
xchg
subl
cmp
jne
pop
jmp
dec
jp
ljmp
std
out
lcall
popf
mov
fwait
imul
cmpsb
es
outsl
pop
xchg
adc
sbb
insl
in
push
mov
adc
insb
std
adc
pop
cltd
aaa
inc
ds
stos
sub
gs
push
sub
dec
loope
andb
jb
les
inc
int
fsub
sahf
pop
cmpsl
and
pop
fidivl
es
outsb
test
mov
cs
and
les
mov
clc
xchg
out
out
scas
pop
mov
es
repnz
lods
pop
mov
negb
in
imul
add
sarl
hlt
pop
aam
lea
shlb
jbe
fisubrs
call
adc
adc
push
adc
adc
adc
push
adc
push
adc
adc
adc
adc
adc
adc
push
adc
inc
jb
mov
inc
sub
adc
add
jo
pop
movsl
and
scas
push
xchg
or
push
repnz
and
dec
push
notl
repnz
inc
pop
mov
inc
stos
std
adc
clc
push
test
in
push
test
jne
sahf
in
jbe
push
insl
xor
push
sbb
or
mov
sbb
outsl
mov
add
push
adc
daa
push
jne
xchg
and
bound
inc
push
push
pop
pop
aaa
xor
cld
lahf
sub
les
jmp
mov
pop
ret
cmp
and
sub
int
dec
les
push
mov
pop
xchg
push
cmpsb
sarl
imul
adc
in
fidivrl
in
idivl
mov
cli
icebp
add
stc
ja
sub
xor
movsb
add
sbb
mov
repz
jp
popa
push
popa
push
add
mov
and
sub
push
push
dec
and
lds
call
cli
outsl
pop
sbb
movsl
fsubs
cmpb
jno
lret
xor
cmp
jb
mov
xor
or
pop
cmpsl
jmp
adc
xchg
sub
into
shll
inc
sub
dec
and
mov
mov
sahf
and
in
cmpsl
add
xchg
movsb
xchg
imul
lea
fstl
inc
mov
pop
shll
sar
dec
adc
inc
pusha
mov
inc
ror
or
sbb
stc
rcrb
and
adc
jmp
shl
sahf
dec
int
sbb
mov
cmp
leave
xor
test
popf
int3
xchg
popa
sub
cmc
ljmp
dec
jmp
push
cmp
push
cmpsb
dec
popf
xchg
arpl
dec
jmp
inc
push
outsl
loope
into
scas
lods
shl
xchg
inc
ffreep
cmp
cmp
shlb
cmpsl
hlt
push
lds
push
hlt
mov
sub
pop
fidivrs
and
cmp
bound
xlat
les
lcall
sbb
lret
inc
mov
pop
aaa
adc
pop
scas
sub
jmp
subl
xchg
stos
jnp
ljmp
mov
dec
jmp
shl
mov
ljmp
dec
leave
ljmp
fldl
pop
push
insb
lock
sbb
inc
cmpsl
add
scas
fidivrs
push
sub
jp
add
bound
daa
and
imul
shrl
addr16
jmp
jno
lods
xchg
inc
xchg
ja
sub
imul
or
fcomps
and
adc
pop
xchg
add
pop
popf
push
push
les
ja
sub
add
scas
cmpsb
stos
push
lods
aas
mov
lods
fmuls
sub
cmc
sbb
ss
shrb
push
stos
push
fstps
je
pop
adc
push
rorb
jmp
mov
xchg
pop
dec
test
inc
insb
sbb
adc
push
call
jg
sbb
adc
rcr
stos
pop
jp
shrl
scas
aad
lea
push
lods
xor
adc
stos
xchg
out
fiadds
movsb
loope
rolb
or
lret
xchg
lds
fldln2
mov
mov
or
loopne
pop
inc
in
in
mov
cmpsl
mov
cmc
xor
jb
subps
mov
pop
mov
dec
pop
cmp
push
shlb
cwtl
push
loop
cmpb
lods
repz
adc
hlt
cmpsb
out
inc
mov
mov
push
in
fimuls
add
enter
sbb
ficompl
ficoms
jg
cltd
mov
and
mov
jl
xor
xadd
xor
adc
xchg
mov
cmp
pop
pop
lret
mov
push
jp
nop
pop
sbb
lock
push
cwtd
arpl
fisubl
push
daa
dec
pop
arpl
ret
mulb
or
in
add
scas
cltd
mov
out
mov
cmp
push
add
xchg
cmp
adc
push
sub
sub
sbb
pop
icebp
cmpsb
jl
out
in
mov
sti
fs
jno
push
xchg
push
outsl
push
push
xor
jge
cltd
sub
push
xchg
dec
enter
mov
push
bound
movsb
adc
cmp
mov
sub
xchg
stc
jbe
test
icebp
insl
adc
cmpsb
hlt
dec
push
sbbl
inc
loope
sbb
clc
jno
adc
xchg
cmp
fisubl
rclb
inc
pop
out
orl
sahf
adc
push
sbb
jns
fldl
pop
adc
lock
add
les
sub
adc
iret
repz
xor
adc
cltd
jae
addr16
mov
jge
cli
mov
sub
mov
xlat
flds
cs
sbb
mov
stos
hlt
imul
imul
dec
inc
add
mov
dec
pop
and
push
pop
mov
popf
jo
out
and
popf
movsb
mov
stos
ficomps
outsl
pop
cltd
xor
icebp
addr16
push
cmpsl
lds
jae
shll
imul
jp
sub
dec
outsl
dec
cltd
or
fstpt
cmp
loop
cmpsl
dec
popf
mov
clc
insb
dec
test
dec
jae
jecxz
ljmp
push
fiadds
popf
cmp
mov
fidivrl
ja
in
aad
add
inc
mov
cwtl
xchg
stos
les
adc
shll
adc
stos
adc
aad
push
test
adc
xor
push
in
dec
lea
je
pop
push
pop
inc
push
out
mov
jne
test
lcall
cmpsl
js
nop
add
scas
mov
ret
lock
push
push
sbb
push
add
aas
cmp
daa
and
push
hlt
xchg
dec
int
inc
leave
ret
add
lods
adc
pop
test
mov
jo
cmpsl
into
out
rorb
mov
sub
sbb
xor
cli
mov
out
xchg
mov
inc
insb
lret
fdivl
gs
mov
hlt
push
dec
xchg
jp
les
into
adc
dec
mov
les
pop
andb
push
sbb
arpl
popa
repnz
sub
aaa
mov
push
and
lcall
xchg
dec
into
cli
jmp
mov
stos
pop
insl
or
test
adc
loopne
mov
mulb
push
mov
pop
add
hlt
xchg
xchg
cmpsl
orb
jne
inc
dec
fs
leave
shl
aad
sub
jo
xor
sub
fsts
jmp
enter
inc
cli
xchg
xchg
outsl
pop
test
in
xchg
xor
dec
loop
xchg
fwait
imul
add
aam
stos
xor
and
or
rclb
sbb
or
cmpsb
dec
arpl
out
nop
pop
dec
xchg
adc
mov
nop
pop
pop
bound
int
mov
adc
fdivrs
rcl
mov
sub
or
scas
mov
mov
fwait
outsl
scas
xchg
fwait
cmp
or
sbb
and
push
stos
lret
repz
addr16
frstor
jg
push
fucomi
mov
test
cmp
je
dec
inc
sub
xor
dec
push
aas
sub
lret
add
inc
sub
lret
jl
xchg
cli
loopne
fnsave
pop
and
sub
push
push
aam
jo
enter
dec
pop
lods
jnp
int
dec
scas
addb
dec
pop
mov
mov
push
pop
stos
shl
repz
push
clc
lock
leave
enter
fcoml
dec
addr16
stos
dec
inc
jo
icebp
scas
es
ja
mov
xlat
pop
adc
dec
out
hlt
or
out
push
insl
dec
aaa
push
and
leave
push
dec
lods
sbb
fstpl
jmp
mov
sbbl
or
or
ret
jmp
or
repz
mov
insb
push
insl
jae
inc
xchg
pushf
push
aad
jmp
push
lcall
jg
sbb
push
sbb
xchg
jno
add
push
dec
push
or
push
xchg
outsb
sbbb
adc
cmp
std
add
enter
inc
inc
fldt
shlb
call
sbb
push
adc
enter
pop
test
push
adc
les
sub
sbb
or
ds
xorb
cltd
dec
xchg
and
pop
xor
daa
or
scas
fdivs
loop
jne
pop
dec
jp
add
cmpsb
dec
cltd
xchg
adc
pop
jmp
xchg
sbb
out
ficomps
or
or
adc
fs
mov
pop
mov
incb
imul
adc
and
pop
or
neg
push
cmp
or
sar
inc
std
cmc
add
dec
mov
stos
push
lods
pusha
divb
popf
mov
mov
decb
mov
mov
xor
jb
cmp
and
push
dec
fs
adc
lds
je
adc
jnp
jne
divb
mov
inc
pop
in
cld
jb
subl
fistps
xchg
sub
mov
sub
push
stos
mov
pop
cwtl
pop
sbb
add
fcoml
lods
pop
cmp
int3
push
out
push
mov
bound
push
cmpsb
push
mov
subb
dec
add
aad
test
sub
mov
adc
imul
mov
jmp
cmp
xor
push
je
push
adc
jae
icebp
loope
mov
lods
ror
sahf
dec
or
and
clc
fiaddl
cmc
pushf
dec
mov
jg
andb
lret
icebp
mov
cld
mov
cmp
jne
inc
push
inc
jmp
lahf
scas
cmc
push
xor
jo
in
imul
les
mov
cmp
cltd
mov
stos
push
lods
rol
mov
ret
mov
rorl
jo
adc
adc
pop
dec
adc
gs
jae
movsl
cmpsl
les
sahf
je
push
adc
xor
gs
jae
xchg
movsl
push
stos
push
imul
int
xor
jno
inc
imul
cmp
leave
leave
jns
push
push
mov
push
or
inc
mov
arpl
je
rcr
cld
sahf
cmp
dec
cltd
leave
lock
fldt
lcall
popf
mov
shrl
mov
les
pop
jmp
dec
rclb
xchg
cwtl
fnstenv
adc
cltd
les
fldl
jl
mov
in
push
dec
jns
test
push
adc
ljmp
outsl
addb
lahf
cmp
xchg
push
lahf
mov
into
je
jmp
mov
in
rorl
es
lret
pushf
mov
mov
or
in
xchg
fldcw
mov
xchg
mov
rorl
pop
stos
in
cmp
fbld
mov
add
daa
mov
icebp
push
sti
andl
pop
push
push
mov
dec
dec
adc
mov
pusha
push
xor
sarb
gs
jo
pop
cmp
mov
jp
sar
ss
jb
mov
pop
push
mov
ret
movsl
pop
pop
lahf
addr16
fdivr
shl
sub
movsb
jo
adc
in
push
mov
dec
push
mov
push
lcall
stc
mov
mov
fs
scas
sub
cmp
pop
mov
fcoms
or
punpcklwd
push
stos
adc
stos
and
shlb
cltd
rclb
push
xor
adc
and
leave
jbe
inc
push
stos
push
cmp
jno
adc
or
in
dec
inc
pop
cmpsb
push
or
pop
lret
adc
or
adcl
cmp
xor
adc
testl
movsl
pop
push
andl
sub
pop
cmpsl
pop
push
andl
in
push
hlt
mov
xchg
mov
pusha
pop
jae
pop
popa
mov
pop
mov
dec
mov
jmp
addb
in
push
lods
xchg
out
pop
ja
push
add
arpl
mov
mov
mov
movsb
adc
mov
popf
stc
out
in
out
mov
push
mov
cmp
xor
sbb
insl
int
aam
nop
xchg
cmc
add
and
out
ja
fsubs
stos
std
rcll
lea
or
xchg
or
and
push
sub
in
xor
push
sti
adc
or
sub
cltd
test
cwtl
sbb
or
filds
sub
xor
cmc
pop
jmp
lcall
mov
and
test
rcll
push
bound
outsb
adc
or
fadds
sbb
or
pop
xlat
loop
leave
sub
ljmp
or
mov
shrl
rcl
test
or
leave
lret
jnp
ljmp
cmc
pop
shr
ja
loop
cmpsl
xchg
popa
in
lcall
adcl
adc
in
mov
sahf
mov
in
lahf
jo
fsubr
adc
and
adc
mov
jo
xchg
out
jbe
ljmp
push
sub
mov
iret
xorl
and
adc
cmpsb
aam
cmpsl
mov
insb
dec
popf
cmp
inc
mov
push
daa
adc
out
aam
adc
or
popa
in
outsb
mov
jmp
ret
popa
add
loop
xlat
stos
push
fstpl
aas
xchg
out
or
pop
je
je
cmpsl
sahf
lcall
faddl
push
pop
subb
xchg
cmpsl
movsb
shlb
adc
adc
jecxz
aam
repnz
icebp
mov
leave
orl
into
out
out
dec
popf
cmp
fsubrp
pop
cmc
shrb
xchg
pop
call
dec
out
sub
push
jge
pushf
popf
inc
daa
or
cwtl
es
and
mov
jnp
cmp
xor
scas
xchg
sub
mov
mov
sbb
dec
push
sbb
lea
pop
jne
out
addr16
in
pop
mov
roll
add
adc
inc
adcl
test
and
imul
lds
mov
dec
add
pusha
xor
cmpsl
dec
daa
pushf
jae
xchg
sub
jo
popf
sbb
or
lret
jbe
jnp
fmul
and
and
xor
add
adc
ljmp
das
ret
add
inc
push
pop
cwtl
push
inc
scas
test
xchg
cmp
and
gs
jb
addr16
test
and
pop
push
in
inc
fs
loop
xchg
xchg
dec
insb
rclb
jp
jne
sbb
push
xor
or
pop
fnstcw
popf
fisubs
xchg
cli
mov
stc
pcmpgtw
jp
push
filds
jo
adc
movsl
jb
popf
imul
stos
xchg
xor
and
mov
leave
data16
loopne
mov
aad
sbb
mov
mov
decb
jmp
sub
addl
daa
or
inc
jle
cwtl
cmpb
stc
cwtl
pop
aaa
push
test
cmpsl
les
sub
daa
or
ss
pop
adc
push
push
mov
jge
cld
into
out
clc
jo
adc
inc
out
jecxz,pt
cwtl
iret
xorb
inc
ret
and
or
add
dec
push
adc
arpl
mov
fs
sub
or
mov
leave
in
jbe
add
adc
clc
pop
adc
jne
xor
adc
sub
mov
mov
sbb
jo
adc
aas
cmp
push
push
and
cmp
adc
lret
ret
mov
daa
or
mov
and
mov
push
adc
sub
or
xchg
lods
adc
jno
pop
mov
mov
sub
adcb
in
jne
pop
cmc
or
adc
fcomi
arpl
shrl
in
sbb
lea
adc
notb
lret
push
mov
cmovle
jo
adc
pop
into
pop
outsb
push
inc
xorb
inc
fucomip
lret
or
out
lcall
adc
out
icebp
leave
pop
into
pop
dec
adc
shl
outsb
inc
fistpll
fstps
dec
jl
push
adc
sbb
or
jecxz
out
daa
call
das
jns
jl
ror
mov
aad
ficoms
push
bound
jb
adc
pusha
xchg
jge
or
loopne
jge
or
es
adc
jmp
push
test
xor
stos
cmp
cmpsl
cmp
lods
je
shll
test
es
adc
mov
imul
push
cmpsl
cmp
xchg
jl
shll
popf
lods
push
jb
ljmp
cmpb
lret
pop
mov
loope
cmpsl
pop
or
jno
lods
iret
add
enter
ds
insl
lret
hlt
stos
dec
popf
dec
push
lcall
jmp
out
aad
inc
mov
les
pop
adc
cwtl
lods
dec
popf
dec
out
xor
call
aaa
fisubrs
pop
inc
ret
pusha
lret
sub
adc
aad
mov
ja
enter
ljmp
pop
pusha
ret
pusha
lret
movsb
mov
outsl
aas
je
mov
popa
jecxz
mov
pop
adc
jne
sub
adc
inc
pushf
cmp
mov
lahf
cmp
loop
enter
mov
sub
adc
cwtl
sub
les
cmpsl
call
pop
adc
aam
adc
push
imul
xor
mov
pop
adc
stos
fidivs
xor
not
sbb
pop
adc
loopne
sub
adc
inc
mov
cmc
sahf
movsl
inc
je
mov
pop
adc
clc
stos
dec
popf
cmp
out
pop
dec
pushf
cmp
rcrb
ret
test
and
adc
arpl
fisubs
cli
ret
imulb
inc
inc
inc
fwait
xor
fs
dec
dec
sahf
dec
lds
cmp
shrb
pop
adc
adc
lods
push
fucom
push
pop
fst
data16
loopne
pop
mov
jge
jb
addr16
add
pop
xlat
in
popf
push
neg
insb
ljmp
js
insl
mov
divl
mov
imulb
pop
adc
fisttps
pop
adc
mov
mov
ret
in
and
fs
sti
movsb
insl
rcrl
fldenv
divb
mov
push
sub
aas
das
mov
sbb
sbb
scas
stos
and
imul
dec
lock
dec
mov
hlt
mov
fs
andb
add
out
stc
jae
mov
pop
adc
jecxz
push
mov
sbb
sbb
aam
pop
adc
into
mov
jecxz
add
cltd
mov
pop
adc
mov
cltd
and
cmpsl
loopne
in
test
pop
adc
aas
test
in
repnz
inc
pop
cld
dec
mov
call
pop
mov
insb
cmpl
fmulp
push
pushf
aas
popa
sarl
rcl
push
jmp
cli
jecxz
cs
adc
jecxz
mov
fstpl
cs
adc
mov
repnz
jle
and
fdivrp
pop
mov
popl
cmp
mov
subb
mov
inc
mov
addr16
test
pop
adc
vhsubpd
out
outsl
push
pop
data16
and
in
pop
adc
inc
adc
fsubrs
jnp
out
lods
punpcklwd
testl
pop
adc
les
mov
cld
mov
mov
fstpt
scas
mov
into
and
and
pop
adc
frstor
stc
pushf
push
jnp
cwtl
cmpsl
sub
mov
mov
lea
xor
jmp
adc
sarb
dec
push
mov
lcall
mov
adc
arpl
and
pop
adc
lret
movsl
push
test
pop
iret
xchg
outsb
inc
xor
adc
out
cmpsl
or
jne
ljmp
mov
imul
dec
jmp
push
pop
fwait
in
jb
loop
enter
pop
inc
scas
test
pop
adc
cmp
stos
lds
cmp
pop
out
aad
hlt
xor
adc
cmp
add
fwait
popa
loopne
inc
shll
lods
sqrtps
or
scas
push
out
sub
pop
adc
lds
mov
in
shl
mov
pop
adc
addr16
cmc
lods
cmp
pop
adc
inc
cwtl
xor
mov
pop
adc
fwait
popa
mov
shlb
lods
jecxz
ds
push
mov
cltd
xor
test
push
loopne
xor
adc
and
ror
xchg
lock
pop
rcr
pusha
lret
xor
dec
popf
sub
add
cmpsl
or
pop
adc
cmpsl
push
ljmp
mov
imul
dec
jmp
or
jnp
jb
loop
enter
pop
inc
and
pop
adc
sbb
sbb
scas
scas
cwtl
cmp
je
pop
adc
mov
stos
push
fndisi(8087
cmc
pop
mov
pusha
lret
xor
fs
sub
or
ret
outsl
mov
xor
cmp
or
xor
pushf
cmp
push
out
aad
es
cmpsb
dec
pusha
cmpsb
iret
xchg
pop
loope
pop
imul
icebp
popf
cmp
and
hlt
cltd
cmpsb
or
push
mov
je
fs
dec
mov
cltd
in
rcl
cmp
lret
sahf
xchg
repz
push
movsl
pop
mov
arpl
in
pop
movsl
dec
sahf
das
inc
push
aad
or
pop
adc
inc
insb
repnz
mov
sub
inc
rorl
dec
fwait
mov
clc
mov
xchg
pusha
sahf
pusha
fwait
or
cmpsb
pop
das
push
imul
adc
dec
hlt
fisubrs
mov
mov
pop
adc
pop
iret
stc
lcall
imul
mov
fistps
mov
jne
xchg
push
sbb
push
dec
sbb
in
bound
fprem1
mov
cmp
lret
mov
sar
jbe
jp
xor
cmp
out
mov
mov
rcrb
cmp
bsf
pop
movsb
orl
inc
popf
pop
cmp
sub
mov
adc
mov
mov
ljmp
mov
repnz
ds
js
and
or
push
mov
les
adc
mov
inc
inc
xchg
dec
fildl
inc
jecxz
scas
in
stos
push
stos
fidivrl
mov
and
dec
testb
lea
dec
xor
lock
sbb
test
pop
adc
out
xchg
pop
test
mov
insl
rcrl
scas
push
xchg
jle
clc
aaa
pop
adc
and
and
jno
sti
xor
mov
mov
jne
andl
xor
adc
sarl
mov
int3
aaa
pop
adc
sub
frstor
mov
cmp
adc
xchg
cmp
push
push
jl
lods
sub
fstpt
dec
mov
mov
mov
xchg
sub
aad
popf
cmp
dec
dec
popf
dec
add
jecxz
cmp
dec
cltd
xor
jp
push
aad
repnz
pop
cmpsl
cmp
jl
icebp
xor
mov
or
inc
cmpsb
dec
popf
mov
jmp
into
ja
js
inc
mov
cmp
adc
xor
fsts
cmp
fwait
or
adc
cmpsl
imul
mov
jne
cmp
adc
pop
pushf
cmp
pop
jo
sub
push
inc
in
xchg
mov
cltd
inc
xlat
vmovhps
je
popa
test
mov
mov
push
inc
cpuid
pushf
xor
js
push
insl
clc
mov
lds
cmp
js
loopne
test
adc
push
sar
xchg
dec
pop
in
imul
mov
jae
je
in
cmp
adc
push
inc
in
xchg
scas
mov
inc
xlat
vmovhps
scas
sbb
pop
adc
or
ret
sbb
mov
xor
pop
adc
shlb
fwait
cmpl
cmpsl
push
push
test
aaa
lea
pop
adc
sub
mov
ja
push
jp
cmc
cwtl
cmpsl
mov
push
mov
pop
aaa
lea
jne,pn
mov
cwtl
ljmp
inc
push
test
adc
subb
aad
push
cmp
xorb
jp
cld
outsl
pop
push
test
or
and
cmp
fldenv
jo
pop
adc
mov
stos
push
rorl
xor
jns
push
aad
push
cmp
jmp
cmp
lods
mov
mov
ds
arpl
xchg
aas
push
push
dec
popf
dec
push
jbe
cmpsl
dec
mov
sub
cli
push
cmp
mov
shll
outsb
sub
aad
mov
addb
cmpsl
cmp
fsubs
and
stos
mov
aas
sub
lds
push
aam
pop
cmp
les
pushf
cmp
repnz
push
in
out
add
pop
adc
and
daa
mov
fs
lods
and
pop
adc
cmp
mov
lods
push
mov
inc
shl
test
movsb
dec
fcoml
pop
adc
xchg
mov
iret
xchg
pop
mov
aas
imul
inc
jecxz
jecxz
fildll
divl
movsb
js
dec
mov
rorb
push
push
stos
lret
xchg
mov
cmp
in
jb
xchg
xchg
jl
jo
cli
movsb
sbb
mov
or
stos
mov
xchg
mov
mov
xor
clc
adc
aas
pop
adc
cmp
pop
popa
cmp
lret
fcompl
jle
in
pop
adc
pop
jnp
or
in
inc
jne
stc
adc
adc
cs
jae
loope
les
and
lret
inc
pop
adc
into
inc
dec
inc
cmp
push
mov
adc
cmp
cmpsl
pop
loop
inc
pop
adc
mov
cltd
and
add
out
and
ret
movsl
adc
fcomi
mov
and
jge
lcall
movntq
fstpl
ficoml
xchg
push
repz
cli
imul
jle
sbb
sub
xchg
or
test
mov
mov
cmp
adc
mov
mov
adc
adc
fadds
adc
inc
imul
jecxz
jno
mov
aad
xor
adc
sbb
andl
pop
adc
pushf
movsb
in
sbb
cs
inc
pop
adc
cmp
inc
or
dec
fidivs
inc
pop
adc
clc
mov
popf
dec
mov
pop
mov
movsl
stos
lret
aad
out
inc
das
mov
xor
mov
pop
mov
jno
xchg
insb
inc
pop
adc
enter
cwtl
jbe
push
test
xor
nop
inc
pop
adc
jmp
sub
lahf
daa
mov
in
call
pushf
and
inc
pop
adc
aad
mov
sub
inc
pop
adc
inc
cmpsl
dec
jmp
jb
mov
push
cmpsl
cmp
sbb
dec
fimull
inc
loop
aad
out
inc
mov
fwait
xor
js
aas
cmpsl
pop
dec
popf
dec
scas
cltd
cmp
lock
pop
adc
mov
stos
push
fucom
test
lret
pop
sub
xlat
cmpsl
cmp
xor
sarl
aad
and
pop
adc
and
pop
mov
jo
je
dec
inc
pop
adc
push
inc
in
dec
cmpsb
lods
push
loope
inc
pop
adc
cmp
pop
int
arpl
mov
cmp
js
cmp
inc
push
adcb
or
pop
pushf
cmp
add
aad
fadds
adc
and
je
jge
aas
je
cld
inc
pop
adc
or
ret
out
cmpsl
lods
push
loope
inc
pop
adc
popf
xor
or
pop
adc
mov
pushf
cmp
rolb
jecxz
int
push
out
inc
dec
pop
adc
rclb
mov
shl
rorb
adc
out
jnp
ljmp
lock
gs
xor
adc
lret
cmpsb
dec
popf
mov
out
push
stos
insl
and
aad
loope
dec
pop
adc
std
xor
or
dec
pop
adc
aam
pushf
cmp
and
adc
xchg
int
push
fndisi(8087
mov
shll
inc
dec
pop
adc
loopne
dec
pop
adc
inc
movsl
jnp
sahf
movsl
inc
in
mov
pop
adc
clc
mov
mov
mov
dec
pop
adc
push
int3
stos
push
call
lret
rcl
dec
pop
adc
aam
stos
sub
sbb
mov
adc
dec
movsb
dec
call
ficoms
aas
sub
popa
and
pop
adc
lods
fdivrs
cwtl
int3
xchg
mov
popf
vmread
ret
mov
lcall
stc
lock
fdiv
xchg
ds
ss
js
fistpll
test
or
sub
lcall
pop
out
cld
push
test
pop
adc
in
push
jmp
xchg
jl
adc
add
movsl
lods
or
outsl
jnp
jns
xor
dec
into
xor
xor
dec
pop
adc
aam
mov
push
sub
lock
xor
adc
push
ljmp
pop
sti
mov
mov
add
jl
aam
shlb
lea
gs
and
imul
fimuls
dec
hlt
jecxz
add
lds
pop
xlat
in
loope
mov
push
sbb
inc
xchg
and
shrb
mov
mov
cmpsl
test
push
jmp
dec
mov
icebp
mov
outsl
leave
mov
xchg
shrl
arpl
mov
out
jne
lea
sahf
jle
sbb
outsb
out
mov
xor
xchg
std
dec
xor
outsl
std
pop
adc
add
cmp
cmc
cmp
adc
data16
sub
int3
mov
dec
sbb
dec
add
cmpsb
push
sub
dec
sbb
push
pop
adc
enter
pop
jp
mov
fnstsw
aad
rclb
adc
sub
pop
jo
dec
popf
sub
sbb
cmpsl
cmp
adc
adc
mov
stos
push
test
xor
js
aas
inc
push
dec
popf
dec
push
mov
cmpsl
dec
mov
sub
ljmp
dec
jmp
or
xchg
sub
mov
cmp
fwait
shlb
mov
stos
push
mov
inc
pop
xor
je,pt
mov
popa
jne
mov
stos
push
test
xor
mov
pop
jmp
aad
lahf
cmp
xor
mov
test
aaa
gs
dec
mov
mov
rcl
cmp
sub
enter
ljmp
dec
cltd
inc
xlat
addl
shll
out
lods
iret
jne
ljmp
ds
fs
movsb
loop
popf
dec
movb
ja
cwtl
cmp
cmc
cld
iret
push
push
test
xor
jb
push
cmpsl
cmp
sub
shll
popf
lods
and
ljmp
ds
gs
movsb
mov
ljmp
out
lods
iret
pop
out
aad
dec
pop
push
cmpsb
ds
jbe
xchg
aas
jnp
dec
popf
dec
cwtl
cmp
popf
in
jp
cld
out
pop
push
test
xor
loope
push
cmpsl
cmp
aad
cmpsl
mov
cld
fidivrs
stos
and
push
add
xchg
sub
aad
popf
cmp
push
dec
popf
dec
lds
lret
ljmp
dec
cltd
inc
xlat
cmc
sub
mov
cli
shll
out
stos
iret
inc
out
aad
leave
pop
push
cmpsb
or
pop
adc
jmp
outsl
dec
popf
jl
push
pop
adc
aam
sbb
hlt
push
pop
adc
es
mov
mov
push
pop
adc
adc
jb
xchg
push
add
jo
pop
adc
lcall
stos
adc
js
xchg
pop
loopne
pop
dec
push
jno
xchg
in
push
pop
adc
sarl
addr16
push
movsl
or
push
pop
adc
in
mov
call
xor
pop
adc
lock
mov
out
pop
iret
les
cmpsl
adc
popa
mov
shl
pushf
push
pop
adc
xor
sbb
repz
lock
enter
add
rcrb
add
add
push
subl
repz
test
push
inc
loopne
int3
jge
outsl
cwtl
js
pop
adc
mov
and
mov
pop
pushf
push
pop
adc
pop
call
sbb
cmp
pop
dec
adc
gs
mov
pop
dec
or
xor
jnp
jno
push
pop
adc
mov
adc
inc
shlb
sbb
pop
adc
inc
stc
mov
ljmp
mov
out
jecxz
xor
adc
aad
rep
daa
push
xchg
mov
jae
mov
dec
dec
pop
xchg
sbb
outsb
push
inc
xchg
inc
or
imull
cmc
xlat
adc
divb
sub
mov
pop
in
scas
andb
mov
xor
lret
out
in
stc
test
mov
lcall
movsb
sbb
xchg
mov
jbe
fstpl
aas
sub
and
fmull
sarl
shll
js
inc
pop
inc
inc
xchg
imul
adc
inc
sti
mov
popa
fmull
xchg
cmp
pop
fdivrs
adc
es
push
pop
adc
and
es
outsl
or
jg
mov
sbb
out
imul
xchg
pop
push
pop
adc
mov
mov
cmp
fwait
push
cmpsl
dec
popf
sub
or
ret
scas
scas
lods
push
aam
push
xor
cmpb
mov
dec
pop
dec
popf
jl
push
pop
adc
aam
sbb
arpl
gs
dec
mov
in
rcl
cld
sub
cmp
inc
test
cmpsl
dec
fimuls
mov
ret
mov
cmp
cmc
cld
push
popa
push
test
pop
lahf
iret
xchg
pop
loope
pop
jmp
enter
popa
xlat
sarl
mov
inc
pop
inc
xchg
sub
frstor
je
cmp
pop
adc
or
ret
xrstor
adc
std
ss
cmpsl
dec
pop
xor
dec
cmp
ja
int
mov
push
adc
aad
sub
pop
pop
adc
int3
cmpsb
dec
out
mov
add
cmc
lods
xor
pop
adc
push
cwtl
xor
js
aas
mov
pop
pop
pop
adc
and
out
lods
rdtsc
jecxz
cs
push
xor
jae
outsl
sub
aad
mov
bound
cmpsl
or
pop
pop
adc
addr16
ljmp
pop
mov
pusha
lret
adc
or
sahf
mov
cmp
popf
popf
mov
imul
inc
es
xchg
sub
cltd
jmp
rcl
cmp
cmp
mov
cs
push
frstor
in
cltd
xor
hlt
sti
lods
pop
pop
jmp
aad
pushf
cmp
loopne
test
adc
push
sarb
fidivl
gs
js
mov
sub
loope
cmpsl
cmp
adc
and
ljmp
lcall
mov
mov
enter
jb
lods
sqrtps
sub
scas
push
fndisi(8087
loope
push
leave
pusha
lret
pop
pop
adc
aad
subb
mov
or
dec
jmp
and
jnp
push
cmpsl
cmp
adc
sub
out
fistpll
adc
pop
pop
adc
outsl
cmp
sub
cmp
and
mov
or
adc
sahf
jae
in
shlb
jle
jl
aam
push
mov
xchg
pop
int3
fmuls
dec
mov
out
aad
je
ja
in
mov
xchg
icebp
fsubs
pop
pop
adc
mov
xorb
leave
mov
aaa
or
mov
adc
int
ds
dec
mov
rorl
fisubrs
mov
adc
iret
mov
mov
pop
adc
jo
shll
ljmp
mov
inc
cld
or
mov
jb
pop
pop
adc
aad
stos
cmc
cmp
adc
xchg
sub
repnz
xchg
push
xlat
enter
or
cwtl
and
fwait
stos
add
pop
pop
adc
xor
pop
pop
adc
pop
add
pop
repz
pop
adc
in
jmp
jle
shl
mov
pop
adc
pop
xchg
sub
xchg
ret
cwtl
push
sub
outsb
shlb
scas
inc
jecxz
shl
movsl
je
bswap
mov
add
test
jl
jge
ds
pop
in
stos
andb
and
push
test
cmp
or
test
adc
pop
lods
or
adc
adc
fstl
and
sub
hlt
cmp
push
mov
adc
jmp
ljmp
mov
xchg
imul
mov
jbe
xchg
adc
in
dec
loope
addr16
in
pusha
pop
adc
fdivs
cwtl
daa
aas
sbb
leave
sbb
push
add
and
outsl
or
sbb
jecxz
imul
cmpsl
sbb
mov
jne
popa
pop
adc
insb
pushf
cmp
pop
hlt
mov
pusha
ja,pt
mov
adc
imul
ds
iret
xchg
pop
loope
pop
mov
jno
xchg
mov
pop
adc
cld
mov
pop
adc
inc
xlat
mov
sbb
pop
jmp
dec
popf
dec
add
jecxz
sub
dec
cltd
xor
push
push
aad
fisubrl
pop
cmpsl
cmp
pop
popa
mov
mov
pop
adc
inc
pop
mov
cmp
test
pop
adc
or
ret
das
stos
lods
push
aam
mov
call
aam
pop
adc
lock
dec
out
mov
inc
jg
lods
clc
bound
adc
outsl
cwtl
xor
mov
pop
ss
jno
mov
ja
push
cmpsl
pop
push
test
aaa
gs
dec
mov
mov
rcl
cmp
cmp
enter
ljmp
pop
ljmp
arpl
adc
aad
cli
aaa
ja
enter
ljmp
mov
es
mov
cwtl
cmp
pop
jo
sub
push
inc
in
xchg
xchg
mov
inc
xlat
hlt
mov
bound
je
popa
test
mov
mov
aam
lods
pop
mov
jle
iret
xchg
pop
loope
xor
mov
bound
ja
insb
mov
lret
shrl
stos
mov
jne
arpl
adc
push
cmp
dec
fs
adc
cli
cwtl
fs
adc
sub
push
loopne
fs
adc
addl
hlt
ljmp
sub
push
inc
adc
xor
adc
jecxz
pop
or
dec
test
test
or
pop
mov
addr16
cmp
pop
gs
adc
leave
enter
push
inc
dec
lods
mov
mov
testb
cwtl
cmp
les
mov
leave
das
std
shrb
mov
xchg
pop
loopne
pop
mov
jae
cmpsb
adc
loopne
xchg
cli
ret
imulb
inc
inc
imul
fidivl
ljmp
pop
adc
lods
fdivrs
fs
mov
popf
cmovs
adc
mov
lcall
stc
loopne
loope
popw
adc
sbb
ljmp
js
insl
pop
push
ljmp
pop
adc
lea
dec
int3
out
cmp
orb
adc
out
mov
pop
adc
fstpl
adc
daa
push
cli
jecxz
addr16
adc
in
ljmp
mov
xor
stos
repz
jne
addr16
adc
sbb
push
cmp
jle
ss
movsb
inc
orl
cld
cmp
pop
mov
pop
clc
fldt
sub
pop
mov
or
cmpsl
scas
enter
js
daa
enter
jecxz
mov
fbld
inc
xchg
sub
and
adc
cli
stos
inc
jecxz
push
loope
movsb
fs
cmpb
testb
repz
ss
mov
adc
lods
jo
and
in
pop
adc
mov
test
inc
pop
lods
sbb
fcoms
adc
sub
imul
enter
imul
xor
imul
or
pop
push
jl
pop
adc
ja
imul
ret
jmp
adc
das
dec
cld
jns
in
jne
inc
imul
lds
clc
aas
mov
enter
dec
sbb
adc
ja
stos
push
fndisi(8087
lea
xor
out
sbb
fwait
popa
in
pop
data16
lods
rdtsc
jecxz
xlat
lods
push
out
test
pop
adc
in
xchg
sub
adc
out
rcl
cld
fisubrl
or
ret
push
scas
push
aam
fisubs
enter
adc
out
rcl
cld
fisubrl
or
ret
out
push
scas
push
aam
fisubs
enter
adc
out
rcl
cld
fisubrl
cmp
inc
mov
fisubs
adc
js
dec
popf
jge
insb
pop
adc
sbb
out
lods
jns
push
fndisi(8087
loope
adc
arpl
out
xor
fstpl
int3
dec
popf
cmp
out
mov
mov
or
insl
pop
adc
out
dec
sub
shll
out
lods
jecxz
stc
test
pop
push
xor
sarl
push
call
inc
dec
xor
out
imul
xchg
pusha
insl
pop
adc
mov
xchg
cwtl
cmp
in
insl
pop
adc
iret
enter
mov
adc
outsb
pop
adc
mov
push
loopne
outsb
pop
adc
add
sbb
aaa
jne
mov
cmc
lcall
ret
je
dec
out
mov
popf
jl
outsb
pop
adc
aam
sbb
lea
outsl
pop
adc
adc
mov
je
fmulp
or
aad
inc
xchg
dec
jmp
xchg
lret
xchg
sub
jl
cmp
pop
cmp
popf
lods
adc
ljmp
jb
xor
xchg
sub
adc
out
rcl
cld
sub
or
mov
inc
xlat
loope
cltd
push
mov
jmp
cmp
lods
syscall
jecxz
lods
push
aad
cltd
xor
xchg
das
push
aad
sub
ljmp
xor
mov
stos
push
test
xor
js
aas
mov
push
push
shll
call
std
shrb
push
cltd
xor
sub
cmpsb
cmp
mov
cli
ret
negb
push
mov
sahf
aaa
mov
outsl
pop
adc
adc
movsb
push
inc
mov
out
fmul
into
cld
nop
in
dec
inc
call
sub
pop
adc
pop
mov
dec
add
mov
out
testb
pop
adc
xor
sub
pop
fnstenv
sbb
js
leave
je
xchg
aaa
or
mov
ss
aaa
push
xchg
push
pop
xor
inc
jg
imul
and
lret
sahf
bound
add
mov
xchg
or
pop
push
les
xchg
jle
mov
sbb
xor
and
add
inc
sbb
repz
pop
popa
cmp
push
pop
outsl
cmc
mov
dec
outsl
nop
pop
cmp
push
ljmp
sub
push
call
clc
mov
dec
pop
and
and
iret
pop
rclb
mov
into
jns
push
and
lcall
out
outsl
add
movsl
push
mov
push
movsb
stos
inc
xchg
and
cmp
stos
xor
hlt
jnp
mov
xor
int
in
pop
adc
add
andl
and
jno
adc
cmp
repz
mov
jno
adc
lea
bound
add
xchg
jle
mov
adc
and
xchg
inc
adc
pop
adc
arpl
pop
adc
add
das
pop
mov
xor
ds
in
xlat
push
jmp
adc
pop
jno
outsl
aam
in
andl
popa
test
pop
popf
adc
mov
je
adc
in
mov
lret
aad
clc
je
adc
sbb
fwait
pop
sub
sub
jne
adc
pop
push
hlt
ljmp
dec
cltd
jne
jne
adc
fs
cmp
cmpsl
les
mov
cwtl
jne
adc
lret
push
sub
call
jl
jne
adc
aam
sbb
mov
lahf
xor
lea
pop
adc
adc
mov
jno
fdivrp
cmp
adc
sub
jae
xchg
das
push
aad
fisubrl
out
aad
or
xchg
ljmp
dec
cltd
inc
xlat
loope
mov
les
adc
popf
insb
ljmp
sbb
out
xor
mov
dec
fwait
cmp
fwait
jl
dec
popf
sub
cmp
inc
sub
dec
fsubp
ja
adc
fmuls
shrl
out
ficomps
fmul
lods
cmp
pop
adc
addr16
xor
mov
adc
fwait
popa
mov
xchg
jne
lods
pcmpgtw
xchg
jbe
push
cmc
dec
cltd
xor
mov
shrb
fnop
cmpsl
cmp
call
stos
shr
in
sarb
adc
sbb
fwait
jl
cmc
aaa
cmp
mov
out
lods
iret
sbb
ljmp
sub
shll
sub
dec
shlb
adc
cmpsl
push
hlt
ljmp
pop
add
fs
outsl
loopne
jns
adc
loope
dec
popf
dec
bnd
ljmp
or
jns
adc
push
jne
mov
ja
inc
mov
in
inc
push
push
mov
fdivrl
cs
cmpsl
cmp
pop
bound
mov
stc
popa
mov
adcl
xor
mov
dec
mov
jae
rcl
cmp
cmp
enter
ljmp
pop
jb
arpl
roll
adc
aad
subb
push
imul
cmp
adc
fisubl
pop
adc
frstpm(287
jmp
xor
enter
dec
sahf
jle
jp
adc
adc
jmp
in
sarl
cmp
sub
cmp
jb
ret
pop
mov
mov
stc
lock
fcoms
ds
xor
and
fistpll
mov
jnp
adc
repz
dec
mov
or
xchg
cmpsb
jne
mov
pop
push
test
jp
xchg
fucomip
lea
out
push
jmp
xchg
jl
adc
repnz
lods
or
lahf
js
dec
push
jnp
adc
inc
jp
rcrl
push
add
inc
outsl
and
lret
pop
push
jl
pop
adc
int3
cmp
pop
adc
inc
xchg
gs
sub
cmpsl
or
iret
sub
push
mov
sbb
cld
jae
aam
shrb
cmpsl
push
jmp
addb
and
pop
daa
enter
loop
mov
fucomi
fbld
push
cmp
ljmp
cwtl
loopne
fnstenv
pop
ss
rolb
sub
mov
mov
sbbl
mov
lock
mov
fistps
in
add
leave
push
cli
movsb
lfs
lods
jle
out
loop
jle
ja
mov
mov
and
ret
sub
xchg
jl
adc
jmp
xchg
movsl
repz
mov
ja
imul
mov
sbb
xchg
adc
and
mov
jne
loop
aam
jmp
jbe
rorl
sbb
pop
and
inc
or
ljmp
dec
fisubrs
adc
cmp
pop
mov
and
and
aad
push
icebp
dec
cltd
xor
int
push
fwait
cmp
leave
bound
loopne
dec
out
dec
movsb
out
fidivrs
stos
es
cmpsl
dec
cltd
and
add
pushf
cmp
lods
dec
popf
dec
add
jecxz
fwait
scas
push
jne
cltd
xor
sahf
das
push
aad
dec
cmp
incb
add
cmc
cld
mov
push
test
adc
mov
pop
cmp
loopne
lahf
cmp
cmc
cld
daa
in
test
mov
loope
pop
or
jb
mov
ja
inc
mov
cmc
cwtl
cmpsl
std
push
test
xor
out
push
cmpsl
dec
mov
ljmp
out
enter
ljmp
pop
call
pop
mov
mov
out
mov
xor
es
push
cmpsb
dec
fisubrs
xchg
pop
and
cmp
fldenv
out
fidivrs
stos
fstpt
push
call
cmp
cmpsb
dec
out
dec
shr
mov
stos
es
cmpsb
dec
cltd
and
add
mov
jg
rcl
cld
fisubrl
push
xchg
stos
push
mov
inc
pop
dec
xchg
sub
idivl
je
popa
mov
xor
cltd
cmp
pop
adc
mov
test
aam
xor
adc
movsl
dec
out
dec
shr
shll
out
lods
sqrtps
imul
loope
adc
arpl
loopne
aam
dec
popf
sub
loop
cmpsl
cmp
mov
jge
out
aad
out
inc
cmova
pop
adc
fwait
popa
sbbb
jne
cltd
sbb
pop
adc
aad
test
loope
jg
adc
sbb
das
xor
into
push
cmp
mov
dec
lcall
adc
movsb
sub
cld
xchg
inc
dec
push
lds
test
rolb
mov
addb
jb
movsl
sub
cmp
les
sahf
cmp
jp
jns
lcall
push
stos
and
mov
loop
pop
stos
xor
lret
je
out
jp
sahf
mov
mov
jl
arpl
inc
popf
cmp
mov
pop
adc
ret
out
shrl
movsl
sub
aam
cwtl
push
in
test
jp
lods
sbb
xchg
icebp
xlat
sarb
mov
hlt
addb
imul
jbe
lock
lret
mov
adc
in
and
pop
adc
insl
rcrl
sbb
mov
addl
sub
push
mov
adc
push
rolb
sub
pop
adc
pop
xchg
gs
call
call
clc
mov
push
out
mov
clc
std
jle
push
pop
mov
or
fisttpl
frstor
in
insl
and
imul
pusha
dec
cmpsb
sub
add
lds
cs
stos
inc
xchg
inc
out
fnstenv
bnd
shlb
out
repnz
adc
cmpsb
ds
shrl
sub
xor
clc
int3
outsl
mov
cltd
pop
and
aad
mov
lret
adc
xchg
cmp
addb
cmc
movsb
dec
lods
or
cwtl
mov
adc
mov
sti
or
or
pop
adc
je
pop
adc
sbb
cmp
jb
pop
push
add
adc
addl
dec
xchg
xchg
adc
sbb
pop
adc
psubq
out
ret
and
imul
pop
loop
push
into
pop
push
test
adc
fsub
lret
imul
adc
fwait
popa
mov
ss
lods
jecxz
fldt
adc
clc
xchg
sub
adc
out
rcl
cld
fisubrs
cmp
inc
dec
popa
cmpsl
dec
fdivp
test
adc
mov
inc
test
adc
or
stos
pcmpeqw
insl
int3
test
fucom
test
ds
sub
insb
test
adc
rcll
sbb
ljmp
pop
or
cwtl
test
adc
sar
xchg
sub
push
inc
in
xchg
mov
cltd
jne
test
adc
jge
cmp
pop
fdivl
fwait
insb
mov
lret
pop
ret
loope
stos
push
sar
xchg
dec
pop
insl
xor
movsl
dec
jmp
xor
es
xchg
adc
aad
test
sar
xchg
and
rclb
loope
ret
call
xchg
sbb
sti
jmp
push
fucom
test
and
das
push
sar
xchg
inc
dec
xchg
sub
mov
jns
fmulp
enter
cmc
stos
push
lods
mov
xchg
xor
lea
adc
or
shrl
clc
stos
jnp
dec
jae
adc
push
lret
xchg
sub
mov
pop
sub
dec
cmp
pop
adc
sub
sti
cltd
xor
dec
mov
popf
je
shll
popf
insb
xchg
insb
xchg
in
stos
sbb
es
xor
mov
dec
mov
out
rcl
cmp
cmp
enter
ljmp
dec
cltd
jne
xchg
adc
jp
cmp
fwait
cmpsl
dec
popf
sub
or
mov
inc
xlat
loope
cltd
pop
mov
ljmp
dec
popf
dec
add
jecxz
fisubrl
cltd
xor
jae
push
aad
mov
mov
movsb
xchg
adc
daa
dec
hlt
ljmp
pop
cltd
sub
out
js
mov
pop
aam
pushf
adc
jns
or
ret
scas
push
aad
adc
fs
orl
movsb
dec
out
dec
mov
shlb
in
scas
or
loopne
scas
push
stos
fcmovbe
pop
stos
sbb
xor
and
inc
lahf
cmp
push
and
mov
adc
fcom
lods
and
xor
sub
pop
adc
or
cmpsl
adc
popa
popa
in
ret
les
movsl
sbb
adc
lods
and
fcomip
sahf
and
cmc
fldcw
leave
sbb
cmc
test
pop
adc
pop
jl
lret
sub
pop
adc
int
scas
xor
or
jb
push
xchg
jl
mov
in
or
gs
or
add
movb
inc
cli
or
mov
andb
adc
pop
dec
jo
pop
mov
push
cmp
outsb
mov
orl
cli
xchg
fs
in
mov
lea
repz
sub
jae
loope
les
les
lret
mov
adc
into
inc
inc
inc
cmp
sbb
cmpsl
push
call
mov
adc
or
ljmp
fdivl
mov
adc
pop
push
in
repnz
mov
sar
addl
xchg
and
cmpl
cmp
push
lcall
add
mov
fstps
inc
fsts
inc
cltd
ror
xchg
clc
fnsave
call
mov
adc
mov
adc
jmp
push
sub
bswap
mov
adc
mov
inc
ret
clc
xchg
addr16
out
mov
sahf
add
sbb
mov
adc
addl
shll
int3
pmaddwd
adc
mov
loop
add
sbb
fidivrs
stos
fstpt
fistl
popf
cmp
mov
popf
jl
mov
adc
aam
es
cmpsl
dec
cltd
and
leave
xchg
sub
aad
pushf
cmp
mov
popf
dec
add
jecxz
lods
push
out
inc
mov
adc
cld
xchg
sub
adc
jmp
aad
imulb
or
ret
out
inc
scas
push
loope
mov
adc
popf
push
push
cmpsl
or
mov
adc
mov
pushf
cmp
pop
shrl
fsubp
cmpsb
das
cwtl
sti
pop
ja
xchg
pop
loope
xor
mov
xchg
loopne
test
adc
push
cmpsb
push
mul
xchg
sub
fwait
dec
pop
leave
arpl
dec
cmp
ja
leave
stos
fstp
jmp
or
test
pop
fs
adc
mov
adc
in
dec
jmp
mov
cmc
sahf
movsl
sub
xor
mov
aad
out
out
rcl
cld
xchg
inc
dec
nop
and
jecxz
lods
push
test
pop
fs
push
sub
call
mov
clc
fistl
stos
ficomps
test
not
jl
pop
adc
sar
xchg
sub
push
inc
in
xchg
jecxz
jnp
dec
cltd
inc
xlat
enter
cmp
popf
popa
test
mov
stos
cmp
in
aad
mov
pushf
or
mov
sub
call
lea
adc
imul
stos
push
adc
jae
aad
push
loopne
lea
adc
loope
dec
popf
dec
push
sahf
hlt
ljmp
or
fiadds
pushf
cmp
aad
jl
pop
adc
out
jp
pop
mov
or
inc
imul
and
popf
jl
lea
adc
aam
sbb
pop
ss
mov
cmp
insb
mov
adc
iret
enter
sub
test
adc
lods
sub
cld
subb
popl
adc
push
inc
cmc
jmp
sbb
pop
mov
cwtl
je
lea
adc
popf
cmp
pop
fnsave
stos
inc
popl
adc
or
inc
out
cwtl
cmp
fisubrl
js
movsb
push
pop
loop
jecxz
jb
jp
shlb
push
pop
shlb
pop
adc
aad
xchg
inc
addr16
shll
out
nop
popl
adc
loopne
pop
adc
jns
lods
sbb
xchg
lret
hlt
xlat
rol
in
cmpsb
dec
mov
or
pop
adc
mov
dec
lret
in
xor
in
mov
adc
xlat
jae
ficoml
daa
jg
inc
xor
inc
lods
or
imul
les
mov
lret
jb
nop
pop
adc
aad
stos
cmc
cmp
das
cld
pop
add
fs
das
mov
push
cmp
push
ss
movsb
inc
orl
cld
cmp
pop
mov
lea
lea
bound
jl
nop
pop
adc
adc
aam
mov
pop
test
ror
inc
fistl
mov
adc
cmp
cmpsl
pop
movsl
aad
inc
pop
xor
test
or
xchg
pop
adc
jp
mov
inc
sti
mov
mov
imulb
xchg
pop
adc
call
xchg
pop
adc
icebp
mov
pop
adc
call
imul
xchg
or
in
jg
or
or
sahf
fdivl
mov
add
hlt
pop
mov
mov
popa
push
das
insb
iret
cltd
and
lods
xchg
pop
adc
ret
jmp
adc
sbb
adc
orl
scas
sbb
jp
popa
sub
nop
es
imul
insb
cmp
aam
adc
xchg
pop
lret
xchg
pop
loope
pop
es
xchg
pop
adc
in
jp
push
fcmovu
stos
fucom
mov
bound
lret
inc
jecxz
pushf
cmp
dec
out
loopne
xchg
pop
adc
pop
xchg
cwtl
addr16
inc
fcoml
ds
call
aad
pop
in
movsb
dec
out
mov
cmc
lods
dec
xchg
pop
adc
ja
xor
js
aas
add
xchg
pop
adc
add
lods
jge
push
fndisi(8087
loope
repnz
lret
js
cmp
mov
inc
aam
mov
xchg
scas
mov
inc
xlat
vmovhps
scas
int3
xchg
pop
adc
jp
sbb
mov
not
lock
pop
adc
aad
mov
mov
adc
push
xchg
pop
adc
fcomps
pop
adc
add
cltd
cmp
outsl
test
aam
mov
mov
xchg
sub
xchg
pop
adc
call
adc
sbb
jg
lods
adcb
cwtl
xor
js
push
insl
pop
pop
pop
into
jbe
cmpsl
adc
stc
or
js
sahf
movsl
sub
xor
mov
pop
adc
add
cmpsl
adc
ljmp
mov
ds
fs
xor
push
shlb
jmp
pop
adc
jmp
fs
aad
dec
popf
dec
push
shlb
jmp
pop
adc
jmp
addr16
cmc
scas
dec
popf
dec
push
mov
cmpsl
dec
mov
or
mov
movsl
dec
jmp
ret
sub
adc
movsl
dec
popf
sub
or
mov
inc
pop
inc
xchg
sub
popf
mov
scas
test
rcr
mov
pop
xor
adc
cmp
das
xor
mov
cmp
pop
lret
scas
dec
scas
push
sar
xchg
dec
pop
je
test
cmpsl
dec
fildl
adc
cwtl
outsl
mov
lds
test
jno
daa
dec
rcll
loop
mov
sahf
dec
out
test
push
scas
mov
cs
aad
xchg
inc
dec
inc
ret
lahf
fcompl
int
lock
xor
sbb
out
movsl
and
fcomip
sahf
and
inc
fisubrs
leave
sub
mov
loop
rorl
loope
in
mov
mov
dec
in
adc
insb
ljmp
sbb
and
iret
jnp
jg
jg
add
dec
fstl
dec
pop
jp
pop
mov
cmp
sub
mov
cld
cwtl
pop
adc
mov
jg
jno
cltd
pop
adc
mov
adc
inc
sbb
enter
mov
push
inc
dec
cmp
jne
and
int3
pop
push
das
add
int3
daa
enter
pop
adc
sbb
mov
pusha
fbld
push
cmp
mov
jg
jns
lods
sbb
xlat
rol
in
stos
dec
mov
call
fidivl
lcall
test
movsb
clc
or
rcr
call
push
pop
push
cli
imul
in
or
sbb
mov
mov
test
pop
adc
mov
cmp
cltd
sahf
mov
pop
dec
adc
sub
js
inc
cwtl
outsb
jl
add
mov
inc
out
xchg
adc
sub
ret
sbb
jl
cmp
fwait
pop
adc
ret
rcll
adc
dec
fwait
pop
adc
daa
inc
hlt
ljmp
dec
cltd
xchg
pop
lea
pop
adc
add
jmp
mov
clc
out
pushf
jnp
dec
jae
adc
fwait
pop
adc
pop
loope
pop
xchg
and
cmpsl
adc
jmp
pop
adc
sub
jae
mov
push
loopne
pushf
pop
adc
and
enter
repz
dec
cmpsb
xor
es
mov
xchg
pushf
pop
adc
leave
sar
sub
out
and
ss
fldl
cmp
adc
cmp
inc
call
xorb
insl
push
cmpsl
cmp
adc
repnz
dec
fidivl
lret
fsub
cmpsb
inc
or
aas
mov
dec
popf
jge
popf
pop
adc
add
out
lods
pcmpeqw
pusha
xchg
test
pop
adc
cmc
xchg
sub
popf
pop
adc
in
cmpsb
dec
jmp
dec
insb
rcrb
fidivl
and
mov
inc
loope
cmpsl
pushl
popa
dec
popf
dec
adc
mov
adc
cmc
xchg
sub
adc
mov
sbbl
fucom
mov
cmpsl
loope
rcll
push
sar
mov
inc
lds
adc
inc
outsb
cld
sbb
push
test
adc
aam
push
aad
cmpsb
sub
xchg
cmpsl
or
cmp
ljmp
dec
cltd
inc
xlat
flds
fcmovu
sahf
pop
adc
test
lahf
pop
adc
jmp
push
test
mov
sbbb
shlb
jno
mov
mov
ds
gs
loop
dec
popf
jge
mov
jnp
out
stos
pcmpeqw
dec
ljmp
pop
adc
mov
mov
cwtl
call
inc
dec
or
pop
popa
repz
dec
cltd
jne
mov
push
pushf
cmp
pop
fdivl
test
std
push
push
test
adc
lret
loopne
xor
mov
nop
jecxz
outsl
aam
shrb
jno
daa
dec
aad
sub
inc
loop
sar
call
int3
mov
lods
shrb
xor
inc
stc
jg
cmp
rcll
addr16
xchg
mov
mov
mov
jmp
xchg
or
roll
xchg
dec
in
or
adc
movsl
test
ret
pop
adc
js
push
daa
jbe
fadds
adc
xor
adc
clc
mov
test
and
ret
pop
adc
mov
cwtl
arpl
and
flds
adc
adc
fcoms
jae
jle
jno
adc
add
adc
pop
adc
movsl
push
lods
flds
adc
sbb
adc
pop
xchg
sub
mov
rcr
pop
adc
leave
pop
popa
push
adc
inc
insl
push
mov
imul
xor
scas
inc
imul
and
mov
push
adc
pop
ljmp
cmp
jno
adc
int3
flds
adc
pop
adc
adc
inc
faddl
adc
pop
adc
push
xchg
pushf
faddl
adc
shll
in
fimull
inc
jno
adc
rcr
adc
xor
push
adc
xor
andb
lret
mov
faddl
adc
mov
dec
movsb
xchg
popa
push
adc
mov
fistl
mov
adc
push
adc
faddl
adc
adc
mov
inc
bound
pop
xlat
inc
jno
adc
faddl
adc
sbb
les
adc
jo
sbb
push
xor
xchg
and
std
mov
cli
clc
fiadds
adc
xchg
jecxz
lds
adc
call
adc
adc
cmpsl
dec
aas
push
test
cmpsl
movsb
inc
jno
adc
dec
test
std
cmp
test
adc
mov
push
add
movsb
inc
jno
adc
jmp
adc
push
fs
lahf
cwtl
loope
xchg
je
inc
jno
adc
pop
or
inc
mov
push
or
mov
movsl
push
bound
adc
pushf
cmp
aad
cwtl
loope
xchg
ja
inc
jno
adc
outsl
loopne
pop
or
fldl
mov
bound
adc
xchg
jnp
cmp
rcll
adc
inc
aad
inc
jno
adc
add
or
test
adc
or
sub
flds
push
adc
out
hlt
ljmp
jecxz
fadds
push
adc
xor
or
dec
scas
mov
or
sub
pusha
fnstsw
adc
cmpsw
dec
aas
push
test
cmpsl
movsb
inc
jno
adc
dec
js
bound
adc
dec
lahf
push
test
bound
adc
cmp
jecxz
popa
push
adc
sbb
shll
adc
xchg
pop
pop
loop
push
adc
pcmpeqw
jne
fyl2x
popa
push
adc
dec
hlt
ljmp
adc
outsl
xor
bound
adc
and
js
popa
push
adc
sub
or
push
or
and
movsb
dec
or
bound
adc
dec
loop
mov
movb
inc
movsl
cmpsl
dec
aas
outsb
mov
or
outsl
cmpsl
test
mov
mov
pop
or
sbb
cmpsb
inc
jno
adc
lock
or
mov
adc
or
jp
hlt
movb
mov
xchg
cmp
or
fwait
dec
push
add
pop
adc
dec
orb
or
jmp
pop
adc
and
adc
sbb
pop
adc
jmp
adc
or
outsb
xchg
jle
add
nop
bound
adc
or
or
or
lret
imul
inc
cmpsb
bound
adc
outsl
stos
insb
pop
and
adc
pop
mov
bound
adc
pusha
dec
repnz
jne
push
inc
nop
jb
adc
insl
pop
andb
adc
icebp
push
adc
test
or
mov
mov
popf
inc
xchg
cwtl
push
push
andb
adc
and
adc
cmp
les
adc
in
cli
mov
pop
ja
dec
and
adc
cwtl
jg
mov
adc
mov
and
jecxz
fldenv
adc
ficoml
arpl
inc
out
shlb
or
push
push
fnstcw
popf
in
bound
adc
cmp
mov
loopne
mull
adc
stos
add
aaa
ds
int3
xorb
adc
dec
and
pop
adc
nop
jecxz
aas
and
pop
adc
mov
add
fnstsw
repnz
pop
adc
mov
flds
adc
inc
ficomps
cli
mov
pop
adc
and
and
insb
sbb
mov
cli
fidivs
push
loope
in
mov
adc
push
or
xor
jge
lahf
mov
xchg
mov
lds
adc
cld
call
jo
and
lea
movsb
and
dec
lods
lds
adc
sub
orb
je
enter
roll
popa
mov
cmp
lds
adc
mov
add
pop
adc
inc
mov
xor
rcll
sbb
pop
adc
popa
mov
in
cli
aad
sub
cvtps2pi
dec
adc
and
or
lods
cltd
rclb
mov
or
enter
ljmp
test
xor
movsb
push
or
pop
lahf
lods
ja
xchg
add
or
popa
call
mov
or
mov
je
pop
or
inc
inc
fcompl
or
mov
mov
fdivrp
hlt
pop
or
mov
jg
add
dec
movl
jae
adc
jno
ret
dec
loopne
cmc
xchg
sbb
or
mov
shlb
mov
or
pop
pop
bound
xchg
andb
adc
xchg
or
clc
icebp
push
adc
and
or
mov
sarb
je
pop
and
adc
cmp
and
adc
sbb
or
aas
mov
dec
popf
jl
and
adc
jae
out
add
add
fistl
nop
mov
xchg
xchg
xchg
nop
nop
mov
nop
nop
call
xchg
xchg
xchg
nop
nop
mov
nop
nop
pop
xchg
xchg
xchg
nop
nop
mov
nop
nop
add
xchg
xchg
xchg
nop
nop
mov
nop
nop
mov
xchg
xchg
xchg
nop
nop
mov
nop
nop
xor
xchg
xchg
xchg
nop
nop
mov
nop
nop
ret
xchg
xchg
xchg
nop
nop
mov
nop
nop
popl
xchg
xchg
xchg
nop
nop
mov
nop
nop
add
xchg
xchg
xchg
nop
nop
mov
nop
nop
push
xchg
xchg
xchg
nop
nop
mov
nop
nop
push
xchg
xchg
xchg
nop
nop
mov
nop
nop
push
xchg
xchg
xchg
nop
nop
mov
nop
nop
push
xchg
xchg
xchg
nop
nop
mov
nop
nop
jmp
stos
adc
sbb
rolb
mov
nop
nop
call
xchg
xchg
xchg
nop
nop
mov
nop
nop
subl
xchg
xchg
xchg
nop
nop
mov
nop
nop
mov
xchg
xchg
xchg
nop
nop
mov
nop
nop
mov
xchg
xchg
xchg
nop
nop
mov
nop
nop
and
xchg
xchg
xchg
nop
nop
mov
nop
nop
add
xchg
xchg
xchg
nop
nop
mov
nop
nop
mov
xchg
xchg
xchg
nop
nop
mov
nop
nop
mov
xchg
xchg
xchg
nop
nop
mov
nop
nop
movzwl
xchg
xchg
xchg
nop
nop
mov
nop
nop
add
xchg
xchg
xchg
nop
nop
mov
nop
nop
cltd
xchg
xchg
xchg
nop
nop
mov
nop
nop
mov
xchg
xchg
xchg
nop
nop
mov
nop
nop
div
xchg
xchg
xchg
nop
nop
mov
nop
nop
xor
xchg
xchg
xchg
nop
nop
mov
nop
nop
xor
xchg
xchg
xchg
nop
nop
mov
nop
nop
ror
xchg
xchg
xchg
nop
nop
mov
nop
nop
inc
xchg
xchg
xchg
nop
nop
mov
nop
nop
cmp
xchg
xchg
xchg
nop
nop
mov
nop
nop
jl
xchg
xchg
xchg
nop
nop
mov
nop
nop
call
xchg
xchg
xchg
nop
nop
mov
nop
nop
pop
xchg
xchg
xchg
nop
nop
mov
nop
nop
test
xchg
xchg
xchg
nop
nop
mov
nop
nop
je
xchg
xchg
xchg
nop
nop
mov
nop
nop
dec
xchg
xchg
xchg
nop
nop
mov
nop
nop
je
xchg
xchg
xchg
nop
nop
mov
nop
nop
dec
xchg
xchg
xchg
nop
nop
mov
nop
nop
je
xchg
xchg
xchg
nop
nop
mov
nop
nop
xor
xchg
xchg
xchg
nop
nop
mov
nop
nop
ror
xchg
xchg
xchg
nop
nop
mov
nop
nop
xor
xchg
xchg
xchg
nop
nop
mov
nop
nop
cmpw
xchg
xchg
xchg
nop
nop
mov
nop
nop
je
xchg
xchg
xchg
nop
nop
mov
nop
nop
sub
xchg
xchg
xchg
nop
nop
mov
nop
nop
and
xchg
xchg
xchg
nop
nop
mov
nop
nop
jmp
xchg
xchg
xchg
nop
nop
mov
nop
nop
add
xchg
xchg
xchg
nop
nop
mov
nop
nop
mov
xchg
xchg
xchg
nop
nop
mov
nop
nop
cmpw
xchg
xchg
xchg
nop
nop
mov
nop
nop
jne
xchg
xchg
xchg
nop
nop
mov
nop
nop
and
xchg
xchg
xchg
nop
nop
mov
nop
nop
pop
xchg
xchg
xchg
nop
nop
mov
nop
nop
mov
xchg
xchg
xchg
nop
nop
mov
nop
nop
jmp
xchg
xchg
xchg
nop
nop
mov
nop
nop
xor
xchg
xchg
xchg
nop
nop
mov
nop
nop
jmp
xchg
xchg
xchg
nop
nop
mov
nop
nop
xor
xchg
xchg
xchg
nop
nop
mov
nop
nop
jmp
fwait
addr16
sbb
lcall
sbb
test
imul
mov
inc
mov
lcall
hlt
lcall
daa
adc
push
lahf
push
sbbl
testb
sahf
das
lods
mov
mov
xchg
push
leave
fs
insb
ret
in
test
or
bound
pop
pop
test
mov
imul
out
faddl
js
or
mov
mov
or
bound
clc
movsl
mov
pop
push
mov
test
daa
add
shl
pushf
mov
pop
lods
sahf
shr
lods
inc
push
lods
adc
dec
fildll
sub
and
jmp
dec
rol
lods
pop
loope
das
and
pop
lea
push
xor
mov
shlb
dec
push
sbb
pop
adc
dec
sbb
outsl
jl
jp
mov
mov
pop
lods
rolb
les
rcrl
fldcw
lcall
mov
popf
jg
daa
sbb
and
inc
xchg
xchg
and
xchg
sbb
mov
in
push
push
add
jmp
cwtl
fs
adc
fmulp
jno
pushf
mov
in
add
mov
rcrb
mov
int3
jnp
adc
insl
jnp
arpl
lahf
js
ja
shr
out
or
push
push
push
arpl
push
aas
cmp
mov
fisubl
stc
pop
xor
cmp
push
push
imul
and
xchg
jecxz
loope
add
icebp
in
push
push
add
in
sub
fs
adc
push
je
mov
int
ret
popa
in
add
scas
xor
test
mov
push
fbld
movsb
xchg
scas
pop
popa
int
jmp
push
xor
sbb
imul
jmp
subb
jb
iret
test
cmp
pop
push
aad
fstps
loop,pn
cmp
out
and
pop
cs
mov
pop
test
jmp
mov
add
loope
jae
sub
adc
cmp
mov
fistl
aaa
cmp
adc
or
xchg
sub
bound
cmp
xor
push
and
lods
and
cs
adc
adc
push
hlt
lret
in
cmp
xchg
adc
push
imul
xor
push
mov
loop
mov
sahf
daa
in
cmp
scas
adc
cmpsb
jmp
and
cmp
mov
cmpb
mov
xor
mov
mov
sti
cmpb
dec
daa
gs
pop
sbb
mov
inc
inc
leave
popa
es
sbb
fidivs
and
mov
adc
mov
cltd
lahf
mov
lods
inc
loope
fbstp
mov
pusha
arpl
xor
mov
mov
insl
inc
pop
loope
std
mov
lahf
jo
sti
push
adc
xor
lret
loop
bound
loopne
pop
lods
lods
mov
pop
add
popf
adc
lds
jg
out
mov
popf
cmp
cmpsb
pop
dec
mov
pop
daa
sbb
scas
outsb
dec
and
imul
std
stos
mov
adc
jo
addb
loopne
cmpb
sbb
push
imul
xor
push
mov
mov
loop
shl
stos
pop
movsl
rol
clc
push
inc
inc
movsl
mulb
cltd
adc
js
and
les
test
pop
shr
adc
popa
ss
test
dec
fcoml
add
clc
jge
int
bound
and
pop
mov
jmp
and
mov
jbe
sub
inc
mov
push
jo
mul
mov
rol
xchg
pop
loope
adc
xor
in
test
int
xor
inc
adc
mov
and
test
daa
pop
and
sub
mov
loope
xorb
arpl
jmp
and
mov
sbb
inc
sub
adc
ret
cmp
fnstsw
pusha
mov
mov
xor
lahf
mov
or
lods
and
lcall
addb
sub
inc
outsl
cli
xor
lea
pop
cwtl
insl
xor
mov
mov
add
sti
sbb
adc
jmp
sbb
mov
lret
cmpb
pop
lods
mov
loop
mov
cmp
push
pop
sbb
inc
pop
repnz
pop
cltd
mov
shl
inc
xchg
int
xchg
test
xchg
add
add
inc
aam
arpl
sub
and
adc
pop
pop
fldl
mov
adc
mov
daa
add
sti
push
sar
test
inc
push
fs
dec
frstor
int
or
aam
rcl
inc
cmpsl
mov
mov
out
inc
imul
pop
andb
push
popa
fisubrs
fmulp
xor
push
ljmp
insl
inc
daa
loope
std
aaa
pop
loopne
cs
fwait
into
aad
dec
les
outsl
and
mov
inc
les
hlt
mov
insl
inc
daa
adc
std
aaa
cmpsl
loopne
cs
mov
lcall
cmc
popf
ljmp
fnstsw
sub
lods
leave
push
rcr
insb
jg
and
das
pop
mov
fcmovbe
jecxz
mov
ficomps
out
stos
sahf
mov
adc
inc
scas
les
sahf
daa
and
out
pop
lods
lods
leave
imul
sbb
js
add
inc
push
xchg
and
jbe
push
test
pop
leave
imul
sbb
je
mov
int
xchg
cmp
popf
pop
push
cmp
das
mov
movsl
xchg
and
imul
push
cltd
mov
dec
add
cmp
pushf
daa
test
aad
jmp
scas
or
loopne
loope
jg
shll
fimuls
pop
xchg
in
adc
cmp
mov
push
sbb
pop
adc
std
daa
fmulp
sub
fucomi
cmp
push
insl
lret
cmp
sbb
cmpsl
fwait
dec
and
fldl
push
loope
dec
pop
pushw
fucomi
sub
xchg
in
or
jl
rcl
lods
dec
mov
cmp
dec
mov
and
popf
pop
mov
mov
pop
loope
and
push
adc
mov
fmulp
dec
ret
out
pusha
pusha
pop
incl
inc
daa
loope
std
aaa
pop
loopne
cs
fwait
into
aad
dec
les
outsl
and
mov
inc
les
hlt
mov
insl
inc
daa
adc
std
aaa
cmpsl
loopne
cs
mov
lcall
cmp
cltd
or
or
cltd
mov
loopne
mov
js
adc
inc
outsl
sub
and
jmp
inc
sahf
sarb
adc
lret
mov
leave
clc
jge
adc
inc
andl
jp
inc
mov
fsubrp
call
sub
gs
popf
mov
sbb
sbb
rorb
faddl
dec
sub
loop
loopne
jecxz
int
adc
and
test
jmp
push
jb
pop
daa
cwtl
mov
outsl
mov
imul
cmp
xchg
dec
push
cmp
xchg
mov
jp
imul
rcll
cld
dec
jb
add
cmpsl
pushf
daa
pop
pop
fdivrl
sbb
scas
or
cmpsl
fwait
dec
push
xchg
in
sub
xchg
cmp
aaa
push
mov
jp
daa
sbb
or
push
and
fs
dec
fsubl
orl
dec
or
push
xor
in
leave
pop
jmp
xchg
mov
imul
pop
jns
das
test
jmp
insl
rol
test
jmp
test
aad
insl
imul
add
pop
jmp
cltd
rol
mov
jmp
and
push
mov
pop
cmp
adc
dec
cmpsl
xor
flds
imul
pusha
je
push
or
stos
cmp
jnp
xor
dec
cmc
cmpsl
lods
rol
lods
push
insb
inc
lahf
cs
cltd
mov
pop
or
cmp
test
pusha
mov
xor
pop
jmp
and
mov
stos
add
in
push
xchg
mul
jbe
mov
leave
imul
cmp
cmp
jl
sub
bound
in
and
cmc
dec
cmpsl
pop
mov
sub
mov
pop
loop
js
lret
js
stos
cmp
and
jo
lods
adcl
addb
and
or
cld
shll
arpl
pop
mov
xor
jmp
pop
xor
xor
push
dec
dec
cmc
xor
cmp
xor
pop
adc
xlat
xorl
pop
mov
jmp
mov
cltd
imul
out
xor
adc
and
dec
dec
popf
dec
cltd
adc
cmpsl
push
pop
test
popa
fs
pop
xchg
pop
mov
inc
xchg
add
adc
cmpb
sub
and
push
adc
mov
stos
add
inc
scas
cmpsl
popf
cltd
ljmp
cmpsb
jp
sbb
and
sub
xchg
js
push
mov
inc
cmp
out
xchg
cmpsl
dec
jp
adc
push
adc
and
inc
int
bound
imul
test
loopne
int
mov
out
cmp
int
inc
scas
xchg
dec
cltd
ljmp
cmpsb
jp
pop
sub
rcll
push
jnp
adc
movb
xchg
hlt
cwtl
rorb
add
push
mov
xlat
pop
jns
stos
xor
mov
popf
pop
imul
movsl
push
in
jmp
lret
dec
daa
cmp
pop
inc
mov
cltd
and
daa
pop
imulb
jge
lret
mov
leave
outsb
or
roll
or
rclb
sbb
push
mov
push
lret
or
add
aad
popf
in
es
dec
cmc
mov
dec
push
sbb
pop
sbb
mov
arpl
adc
popa
dec
dec
popf
dec
cltd
cmp
lahf
mov
or
lods
and
lcall
cmp
jmp
cltd
adc
cltd
inc
push
mov
stos
mov
xchg
and
push
mov
pushf
add
adc
cmc
dec
mov
daa
iret
pusha
xchg
test
push
jnp
mov
adc
hlt
inc
xor
and
mov
arpl
addr16
mov
adc
hlt
mov
hlt
mov
push
hlt
test
call
and
insl
jnp
out
adc
pop
je
add
sub
jp
sub
fidivs
xchg
mov
ja
or
ljmp
pop
add
xchg
test
out
je
adc
dec
jle
popf
cltd
pushf
daa
pop
cmp
shr
dec
dec
lcall
adc
shrb
out
cltd
cmc
dec
shl
jne
inc
inc
leave
popa
es
sbb
mov
push
dec
daa
sub
pusha
cmpsb
shl
out
inc
inc
push
popa
cmp
sbb
repnz
lock
inc
cmp
xchg
mov
push
cmpsb
jp
xlat
lods
inc
sub
xchg
cs
jns
out
je
adc
inc
or
sahf
daa
and
jb
pop
push
add
push
push
mov
xchg
stos
movsb
xchg
fdivs
push
mov
loop
insl
dec
pop
popa
mov
int3
xor
dec
jp
lods
lahf
insl
sub
push
lods
rcll
push
mov
lcall
inc
gs
mov
push
cmpsb
inc
test
imul
lea
dec
insl
dec
fadd
mov
sahf
out
inc
cmc
dec
daa
aad
adc
push
mov
popf
mov
out
fiadds
test
cmp
mov
cmp
sbb
loope
mov
fwait
push
jno
ja
sbb
push
xchg
dec
cltd
jecxz
pop
mov
shrl
sbb
lods
shll
mov
int3
xor
dec
out
xchg
dec
cltd
cwtl
std
cltd
mov
jp
push
adc
loope
test
xchg
test
ja
jp
inc
dec
gs
insb
shll
dec
inc
push
cmpsb
mov
fisubrs
mov
xchg
je
out
je
fimuls
insl
rcrl
mov
push
push
inc
rcll
out
mov
aad
out
or
dec
cltd
mov
cmp
sbb
cmpsb
mov
loope
test
ja
adc
loope
addr16
not
ss
scas
push
cmpsb
push
in
xlat
and
fiadds
mov
out
gs
or
sbb
bound
icebp
pop
cmpsb
jp
sahf
test
int
test
pop
jl
stos
add
fnstsw
popf
out
cltd
mov
inc
cmc
dec
mov
test
mov
fsubrp
out
imul
leave
cmp
les
imul
dec
lods
and
loopne
push
jl
push
add
mov
data16
sub
dec
sbb
pop
loope
adc
ret
dec
fistpll
adcl
ljmp
nop
mov
xchg
stos
cmp
xchg
pop
jl
sub
bound
std
dec
cmpsl
mov
shrl
cwtl
mov
sub
leave
pop
loop
and
lret
js
fnstsw
popf
int
jo
and
jo
lods
push
adc
pop
and
fwait
push
or
adc
and
lds
mov
insl
push
xchg
imulb
push
add
pop
add
std
fnstsw
dec
in
arpl
cmp
cmpsb
push
in
pop
mov
popf
jo
shll
faddp
sub
iret
mov
xorl
loope
das
je
inc
loope
add
pop
jl
sub
bound
in
in
int
je
jp
lods
pop
inc
sub
mov
out
je
imul
xor
dec
sarl
es
push
cmpsb
mov
popf
cmpsb
add
lret
lret
dec
mov
and
mov
xchg
add
sub
and
insl
stos
ja
inc
push
xor
or
aad
jb
push
scas
iret
add
test
push
jnp
mov
adc
hlt
xchg
xor
and
dec
add
fstl
hlt
inc
xchg
dec
xlat
mov
jmp
mov
hlt
mov
mov
shrl
push
stos
pop
xchg
test
out
gs
hlt
jb
xchg
addb
popf
pop
mov
mov
sub
aas
call
ss
adc
fists
mov
cwtl
dec
inc
dec
cmc
jbe
jge
cmpsl
push
lods
inc
sub
frstor
cmc
pop
add
fnstsw
popf
or
mov
lods
scas
push
cmpsb
leave
shrb
enter
cltd
push
sub
pop
dec
out
fstpl
shll
adc
into
pop
mov
shll
stos
adc
jne
popf
xor
pop
dec
mov
jp
push
insb
sub
insl
xchg
xchg
insl
stos
ja
inc
scas
in
cltd
ljmp
push
test
cmp
sub
add
dec
inc
xchg
fnstsw
popf
int
bound
add
dec
daa
or
mov
out
pop
out
lret
int
stos
cmp
sub
imul
movsl
push
movsb
mov
xchg
frstor
sbb
ret
mov
aad
in
nop
outsb
scas
dec
cmc
cmp
dec
jb
sub
stos
xchg
cmp
adc
xor
mov
sub
pop
jmp
mov
aad
movb
cmp
cli
cmp
sahf
pop
int3
lods
and
loopne
sbb
lret
dec
mov
outsb
cmp
or
scas
je
inc
test
jmp
mov
out
gs
pusha
arpl
inc
cltd
ljmp
pop
repz
pop
jmp
stos
pop
lds
sbbb
xor
xchg
out
inc
cmc
dec
rcl
mov
ficoml
test
xor
push
bound
ljmp
inc
jp
das
mov
movsl
push
lods
jmp
ret
dec
daa
and
mov
push
add
add
pop
imulb
xor
fwait
dec
xchg
mov
enter
inc
pop
mov
inc
pop
rcl
mov
xchg
test
sti
test
rcrb
addr16
out
inc
cmc
dec
fnsetpm(287
xchg
scas
push
push
inc
and
and
imul
jg
rcrb
das
cmp
or
inc
push
dec
lcall
add
push
les
pushf
mov
lods
sahf
and
inc
cmc
cmpsl
mov
insl
leave
pop
lahf
push
lods
fwait
ret
dec
cmovno
xor
xchg
cltd
pop
adc
mov
frstor
imul
fbstp
mov
in
push
mov
adc
mov
cmp
adc
mov
popf
xor
jb
push
mov
shrl
push
stos
xchg
inc
mov
lods
xor
sub
mov
dec
shll
and
pop
mov
add
fimuls
xor
pop
pop
pop
sbb
jmp
pop
mov
sbb
fmulp
cmp
int3
jmp
jmp
or
scas
jp
lods
fadds
cmpsl
xchg
mov
out
je
shlb
gs
out
jecxz
dec
in
mov
cwtl
push
fstl
rcrl
aad
and
push
int
ja
adc
aaa
cmp
dec
scas
dec
cmc
fldt
test
sbbb
push
push
mov
outsl
jl
sub
popa
rclb
mov
rorb
lods
and
cmpsl
cs
stos
sahf
shrl
lea
sub
xchg
jecxz
dec
pop
add
cmpsl
push
das
stos
sub
xchg
push
xchg
lds
inc
in
adc
inc
cmpsl
dec
test
pop
leave
imul
adc
add
dec
cmpb
int
out
nop
ljmp
pop
scas
insl
ficompl
and
jb
ja
es
popf
cmpsl
xor
mov
fsubrl
sub
xchg
andl
add
movsl
dec
sub
mov
imul
push
fstpl
mov
adc
mov
leave
pop
ret
shr
es
inc
or
cmp
cs
out
mov
je
sub
adc
and
jecxz
cmpsl
mov
dec
daa
sbb
in
ds
pop
xchg
push
sub
add
cmp
cmp
pop
sbbb
cmp
in
adc
daa
sbbl
out
add
xor
add
dec
fidivs
popf
cltd
sahf
das
inc
mov
mov
aam
scas
push
push
leave
imul
stos
pop
cmp
xchg
popa
int
pushf
adc
pop
jbe
push
nop
xor
pop
inc
and
adc
loopne
lock
push
xchg
pushw
jmp
cltd
popf
mov
idiv
cltd
inc
inc
push
popa
es
sbb
mov
push
add
sub
pusha
jne
mul
jo
inc
push
adc
stos
fbld
out
lock
lret
cltd
sbb
mov
cmpsb
jp
outsb
lods
lret
mov
out
bound
push
inc
stos
ja
pop
scas
sbb
or
fldl
cmpsl
push
fidivrl
cmp
mov
adc
jo
add
inc
outsl
mov
cmc
mov
mov
shrl
lods
jae
sub
rsm
loopne
xor
and
int
xor
cmpsl
dec
loope
daa
fcompl
sub
les
movsb
into
ret
push
out
or
lea
xor
mov
in
push
xchg
jo
adc
mov
es
out
lret
and
cwtl
test
pop
pop
cmp
loopne
sub
lods
out
ret
les
push
arpl
adc
adc
pushf
xor
inc
cmc
cmpsl
das
in
fisubrl
push
inc
pusha
jns
fs
inc
cmovle
mov
dec
hlt
mov
mov
incb
cmpsb
push
adc
loopne
popf
cmp
test
sub
xchg
xchg
pushf
aaa
push
cmp
shl
pop
inc
fs
fildll
xor
mov
pop
ljmp
in
dec
inc
jge
jp
lods
push
cmc
in
inc
sub
fldl
pusha
aad
loop
jecxz
aad
mov
sbb
cltd
sbb
and
cld
pop
pop
xchg
stos
push
aad
out
cmp
push
add
cmp
pop
xchg
mov
jo
sbb
rcll
fbld
lock
out
inc
add
in
pop
mov
add
sbb
lahf
jmp
push
stos
xchg
mov
out
je
xchg
mov
xor
nop
cmc
dec
pop
mov
inc
cmpsl
xchg
pop
test
mov
out
fs
pop
cltd
xor
out
nop
jns
dec
cmc
shrl
mov
or
loop
in
lret
js
mov
rcrl
bound
insl
pop
cmpsb
jp
lods
inc
cmpsl
out
mov
rorb
xor
dec
daa
mov
rcrl
lahf
jmp
push
stos
push
xlat
and
out
shlb
dec
mov
data16
insb
scas
mov
xchg
stos
mov
mov
xor
nop
ljmp
test
mov
out
loopne
dec
fmulp
or
add
ljmp
cwtl
insl
pop
in
sti
or
push
and
les
test
insb
stos
ja
ret
ficoms
or
fucom
jae
push
das
call
sbb
xchg
pusha
ficoml
sub
mov
mov
sarb
push
stos
pop
xlat
jge
xchg
jns
in
push
les
in
push
inc
pop
ss
scas
push
cmpsb
or
outsb
pop
mov
scas
lret
lds
and
pop
mov
daa
mov
loop
mov
push
inc
sub
pop
xchg
xlat
push
jnp
push
and
lds
sahf
out
or
dec
rcrb
int
pop
mov
lahf
adc
je
fmulp
xor
and
push
insl
lret
cmp
fiaddl
xchg
push
mov
and
int
pop
mov
mov
insl
aam
sbb
pop
test
daa
pop
out
test
cmpsl
or
jnp
dec
hlt
mov
mov
mov
pop
lods
dec
lcall
out
gs
ss
call
popf
dec
cmp
cmp
loope
cmpsl
push
das
subb
push
fwait
into
lds
mov
push
mov
sbb
rolb
int3
push
rol
ss
inc
fwait
into
fldcw
ficoml
sbb
mov
and
sbb
pop
push
imul
push
cs
push
int
jecxz
jmp
jbe
aad
xor
dec
lods
pop
test
insl
jno
loopne
cltd
loopne
push
pop
xor
inc
xchg
xor
idiv
jo
inc
push
adc
pop
fbld
out
lock
push
add
in
pusha
jne
and
jo
lods
push
adc
pop
and
lock
in
xor
in
orb
dec
cmc
fldt
or
outsb
pop
mov
push
inc
push
out
cmp
rcrb
xor
dec
hlt
xchg
sahf
out
inc
cmc
dec
and
fs
xchg
fbld
lock
stos
or
nop
ljmp
rolb
lods
pop
push
mov
sbb
adc
adc
jmp
mov
hlt
mov
rol
fsubs
push
ficomps
and
jge
int
bound
pushf
and
inc
cmc
cmpsl
inc
push
push
test
call
pop
out
gs
xor
mov
pop
jmp
mov
enter
dec
in
loop
sar
jecxz
xchg
jg
stos
ja
or
sub
aaa
or
mov
shrl
nop
xchg
notb
push
pushf
pop
cltd
push
test
dec
out
jecxz
dec
in
mov
ss
xchg
pop
fsubrp
imul
add
dec
sub
sbb
imul
sbb
pop
loope
adc
mov
mov
mov
loop
shl
ljmp
daa
psubusb
xor
je
fimuls
mov
pop
cld
dec
cmpsl
mov
shrl
add
loop
mov
js
fdivrl
popf
int
adc
and
xchg
cmpsl
dec
test
out
mov
aas
movsb
mov
hlt
inc
cwtl
lret
inc
xorl
bound
arpl
rcr
adc
test
push
out
dec
fmulp
xchg
or
fstpt
sub
mov
mov
push
sbb
loop
rcll
fmulp
sub
fucomi
sub
mov
mov
inc
sbb
mov
fwait
push
shll
jmp
loope
dec
cltd
jecxz
mov
mov
jle
xchg
mov
aad
and
pop
cltd
or
stos
fld
ss
mov
mov
pop
and
scas
adc
pop
mov
das
les
dec
sbb
mov
pop
test
clc
fwait
int3
popf
push
xor
les
jmp
cmp
sbb
in
movsb
mov
stos
add
mov
add
mov
mov
jb
sbb
fsts
add
xor
cmp
test
pop
inc
xchg
lods
adc
inc
mov
leave
sub
cmp
dec
imul
jnp
fsubl
dec
jp
xor
stos
or
mov
mov
and
add
inc
fsubrl
cmp
loopne
inc
push
push
mov
mov
push
out
mov
lret
out
mov
xor
out
mov
xorl
add
push
jne
inc
push
xchg
cmpsl
mov
