push
mov
push
push
lea
push
push
push
lea
push
call
ja
lods
push
jne
mov
fnstcw
mov
or
pop
shll
repz
sahf
sub
pop
pop
push
push
call
cmp
pop
jp
notl
lahf
jge
sbb
les
lea
jl
mov
clc
adc
or
stos
dec
sahf
or
adc
mov
mov
mov
sbb
hlt
pushf
sub
pop
pop
push
push
push
lea
push
push
call
bound
scas
cmp
std
pushf
xchg
or
movsl
sarb
mov
lret
shll
repnz
mov
mov
imul
les
jne
jle
push
inc
test
inc
shrb
mov
adc
dec
lahf
call
pop
lret
xchg
push
pop
imull
adc
insl
sahf
cmpsb
mov
cli
lods
xchg
scas
xor
sub
pop
push
push
push
push
push
push
call
cmp
stc
or
xchg
cmp
or
xor
dec
mov
gs
xor
negb
xchg
sub
pop
push
push
push
push
push
lea
push
push
push
call
out
xchg
mov
cmpsb
es
cld
xchg
sub
inc
movsl
sbb
scas
insl
inc
cmc
mov
ljmp
sub
lret
pop
lcall
mov
sbb
push
mov
push
ljmp
add
sub
out
xor
addr16
fcompl
inc
jmp
lcall
call
push
push
push
push
push
push
call
pop
and
inc
je
cmp
mov
test
sbb
push
fcmove
mov
push
enter
daa
xor
imul
outsl
sub
pop
push
push
push
push
push
push
push
call
jecxz
mov
test
outsl
ss
ljmp
hlt
rcll
lods
nop
notb
xor
jge
jbe
cmc
push
sub
pop
call
push
push
push
push
push
call
lret
stos
push
dec
sahf
out
ret
xchg
mov
fs
inc
sti
adc
adc
ret
pusha
cmpsl
cli
in
adc
leave
push
pop
and
sbb
mov
stos
or
mov
pop
int3
mov
jg
movsl
int
cltd
stos
in
cmp
pop
pop
mov
dec
mov
in
pop
pop
scas
rclb
sub
pop
jmp
push
push
push
call
or
cltd
jle
cmp
je
xor
mov
lock
xor
dec
mov
or
mov
daa
mov
test
fmull
addr16
jp
ficoms
push
stos
xchg
xchg
fwait
cmpsb
outsb
insb
pop
mov
adc
sub
ret
mov
push
push
push
lea
push
push
call
sahf
mov
data16
shll
xchg
mov
cmp
fwait
cltd
in
cwtl
adc
inc
test
push
ljmp
lcall
fstl
push
push
push
push
call
push
xchg
bound
jb
lcall
pop
inc
push
les
je
gs
or
cli
cmp
insb
add
sti
dec
sub
in
call
adc
add
dec
pop
mov
xor
push
push
shr
ror
push
rol
rol
add
mov
rol
dec
ror
add
sub
not
not
ror
inc
pop
shl
sub
pop
push
push
push
call
gs
das
loope
js
xor
xor
iret
cmp
gs
adcl
and
ret
imul
into
push
mov
adc
ds
push
jnp
adc
hlt
pop
push
push
not
pop
call
mov
push
xor
rol
add
shr
pop
mov
push
lea
push
push
call
sub
pushf
lods
cmpsl
dec
loopne
cmp
xor
fiaddl
push
inc
in
je
cmp
xchg
movsb
or
mov
test
test
pushf
xor
sbb
in
hlt
lcall
inc
cmp
push
or
push
hlt
push
push
push
call
jl
or
idivw
and
fdiv
jmp
push
jg
cmp
insb
sub
inc
cmc
or
fnstcw
addr16
idiv
or
mov
lds
lcall
ljmp
push
add
add
push
inc
pop
pop
pop
push
push
push
push
push
call
push
sbb
cmp
cmpsb
aam
mulb
xor
xor
add
fs
add
nop
inc
scas
cmp
and
push
std
fsubrl
inc
pop
push
add
push
in
test
and
jnp
dec
lret
les
pop
inc
shrl
pop
xchg
or
add
mov
xor
in
in
lcall
pop
push
push
push
push
call
mov
mov
in
out
mov
or
push
and
xchg
adc
ds
xchg
sti
cltd
aad
sub
mov
arpl
ss
pushf
rcll
and
push
shr
xor
rol
pop
xor
push
push
call
mov
mov
fisttpll
int
shrb
or
pop
mov
in
in
jmp
nop
jp
stos
jne
ret
mov
in
aam
pop
cmp
xchg
mov
cmp
adc
clc
jmp
call
in
sbb
push
sub
jmp
lcall
push
add
sub
shl
pop
ret
push
shr
sub
pop
mov
push
pop
cmp
jne
push
push
call
jae
xchg
dec
and
jg
test
into
xor
jo
push
mov
dec
inc
jmp
cmp
pop
dec
aaa
das
sbb
int
or
sbb
pop
mov
xchg
xchg
dec
testb
fistl
loop
xor
push
pop
jg
or
mov
push
jbe
sub
lcall
lds
in
xor
aas
add
add
adc
adc
sbb
iret
addr16
mov
cmpsb
imul
xor
dec
cltd
popf
gs
insl
add
enter
sbb
push
lcall
mov
inc
lahf
leave
push
sub
pop
add
push
push
push
call
enter
flds
inc
mov
into
scas
mov
dec
mov
fdivrs
insb
jg
push
pop
mov
and
mov
adcl
sub
jle
jbe
push
push
inc
xrelease
loop
pushf
xor
ret
jo
xchg
test
xchg
sub
cmp
pop
testl
add
jne
push
rol
rol
pop
pop
push
lea
push
lea
push
push
push
lea
push
call
sbb
pop
js
mov
imul
pushf
and
dec
outsb
pop
shlb
add
jb
out
dec
pusha
jno
insb
inc
mov
das
jmp
es
inc
or
cmpsl
jp
inc
jns
jns
cmp
shlb
cld
push
addb
pop
pop
pop
push
not
sub
sub
lea
pop
pop
push
lea
pop
pop
xor
push
rol
ror
pop
ret
cmpl
jne
push
lea
push
push
push
push
push
call
jnp
push
movsl
lods
mov
out
xor
and
insb
jg
lock
std
hlt
cmp
sbb
mov
mov
sahf
sub
pop
jmp
push
push
add
add
push
ror
shl
shr
mov
shr
shr
sub
add
pop
not
xor
dec
pop
push
push
push
call
aaa
ss
cwtl
insb
jg
push
loope
sbb
ret
arpl
mov
lahf
ret
hlt
leave
stos
mov
stos
fldenv
aaa
xor
lret
mov
push
adc
imul
sub
pop
push
call
push
push
push
push
push
push
call
jb
jg
jecxz
sub
lods
pusha
cmpsb
das
outsb
lret
inc
je
dec
dec
popf
add
in
jmp
fsub
xlat
jge
in
sbb
pop
stos
outsl
das
fistl
add
cltd
inc
into
push
mov
xchg
pop
rorb
xchg
mov
movsb
inc
incb
lcall
push
pop
call
cmp
jbe
push
sub
sub
ror
add
pop
add
push
push
lea
push
call
lds
into
inc
int3
fldl
add
test
xor
xor
sub
mov
aam
imul
lcall
pop
push
push
push
push
call
std
std
mov
xchg
mov
sbb
or
cwtl
pop
roll
xchg
pop
add
xor
fnsetpm(287
fs
or
sbb
addr16
pop
pop
push
push
call
push
xor
jg
and
icebp
jne
call
dec
push
lods
mov
iret
bound
decb
in
lret
push
in
mov
shll
cmp
sub
pop
pop
push
push
call
clc
jle
stc
pop
add
push
mov
shlb
jmp
mov
mov
xor
cmpsl
or
in
clc
lcall
push
lea
push
push
push
lea
push
lea
push
call
movsb
jo
lds
shl
popf
sti
pop
enter
test
inc
test
pop
fnstcw
push
push
sbb
pusha
call
in
xchg
push
repnz
jne
into
in
dec
hlt
js
enter
mov
js
in
in
call
push
push
lea
push
call
in
adc
push
cwtl
adcl
call
adc
insb
popf
push
push
jns
sbb
cmp
lods
xor
mov
pushf
mov
cmpsb
sub
push
jno
sbb
or
jnp
jg
lods
mov
shll
data16
push
sub
pop
pop
push
push
push
shl
push
inc
add
shl
mov
shr
add
rol
sub
dec
pop
rol
add
inc
lea
pop
push
add
shl
rol
pop
push
push
lea
push
push
lea
push
push
push
call
push
xchg
mov
lahf
mov
or
test
sti
scas
sarb
inc
sbb
adc
sti
push
icebp
xchg
xchg
fidivs
notl
outsl
sub
outsl
std
cmpl
aaa
popf
xchg
gs
inc
push
pop
inc
inc
bnd
popf
enter
ror
jecxz
sbb
lcall
pushf
and
add
lret
or
je
push
push
lea
push
push
call
stc
out
and
sub
dec
adc
push
mov
stos
mov
xlat
test
push
jmp
fwait
scas
xlat
mov
adc
fdivrs
mov
xor
ss
mov
pop
jne
jne
jecxz
fiaddl
cmp
in
lock
ret
push
push
ror
xor
sub
sub
push
sub
mov
sub
add
xor
sub
add
ror
pop
shl
sub
not
pop
push
lea
push
push
push
call
pop
adc
test
test
lods
dec
scas
lods
jecxz
mull
push
shlb
jb
das
fbstp
dec
mov
dec
adc
fcmovb
pop
aas
sbb
mov
in
lock
push
push
push
push
lea
push
call
xlat
lds
xor
pop
lea
sub
andl
or
or
push
jp
out
sub
mov
fwait
sbb
add
lock
lcall
dec
and
add
sub
shl
shr
pop
cmpw
jne
push
lea
push
push
push
push
lea
push
call
filds
fcmovbe
pop
inc
inc
stc
xchg
sbbb
mov
in
jne
lods
pop
mov
pop
push
mov
aam
jecxz
stc
sub
loope
in
call
mov
push
push
call
out
ret
mov
cmp
arpl
fiaddl
sbbl
orb
jnp
addr16
jp
mov
shrl
jp
adcl
bound
lret
faddp
test
mov
sbbl
into
std
jge
sub
pop
inc
push
push
push
call
ret
pop
adc
pop
sbb
jb
es
dec
js
and
stos
adc
roll
pop
push
gs
outsb
aad
repnz
out
mov
lret
push
aas
sbb
xchg
lock
cmp
ja
add
scas
sub
test
cmpb
jne
push
dec
dec
pop
mov
push
add
pop
sub
push
shl
pop
cmp
jae
push
pop
push
push
inc
add
pop
call
xor
push
pop
cmp
je
push
push
lea
push
push
push
call
mov
push
push
xchg
jle
adc
jnp
dec
xchg
gs
mov
rcrl
mov
pop
cs
shlb
insb
iret
out
inc
clc
or
mov
push
or
lcall
fsubrs
add
roll
push
rol
shl
ror
ror
mov
sub
not
sub
sub
sub
shr
add
lea
pop
inc
ror
lea
inc
pop
push
lea
push
push
push
lea
push
push
call
mov
movsb
dec
leave
adc
or
jns
imul
fdivs
and
sbb
nop
repz
ret
fldl
mov
rorb
orl
xchg
and
divb
xor
call
test
lahf
shr
pop
call
push
push
lea
push
push
call
xchg
les
xchg
xchg
xorl
sbb
sahf
sub
es
xor
out
scas
cmpsb
xor
jp
xor
dec
push
and
out
mov
fs
les
cmpb
into
jb
pop
jnp
adc
mov
ljmp
popa
test
iret
inc
xor
movsb
jbe
pushf
nop
dec
sub
pop
xor
push
pop
sub
push
push
push
push
push
push
push
call
dec
addr16
ret
jnp
dec
bound
sub
leave
xor
out
sbb
ljmp
inc
enter
jl
and
xchg
sbb
call
push
call
xchg
movsl
and
lret
dec
es
cltd
sbb
loope
dec
xchg
lcall
lret
sbb
jge
stos
adc
xchg
push
js
mov
jbe
inc
push
das
sbb
aam
jbe
push
je
inc
pop
push
push
mov
push
xor
push
lea
push
push
push
call
xor
inc
add
fucomip
push
dec
aam
cs
mov
xor
mov
cmp
cwtl
imulb
xchg
je
mov
fldl
loopne
rorb
movl
sahf
push
lea
push
call
repz
mov
fsts
popa
xor
pop
and
rorl
int3
lods
pop
dec
mov
or
jbe
lods
mov
repz
pop
cmp
sbb
jae
test
cltd
subb
aaa
mov
js
add
jmp
outsl
aas
test
pop
ja
int
push
push
sub
pop
xor
push
push
call
push
test
jg
in
in
cmpb
mov
outsl
dec
pop
xchg
push
je
fcoml
in
stos
scas
stos
xchg
lahf
loopne
mov
std
pop
push
and
xchg
xchg
push
hlt
mov
sub
sub
pop
pop
push
push
sub
push
shr
mov
not
sub
rol
pop
xor
inc
xor
pop
push
push
lea
push
push
lea
push
call
and
and
cmpsl
in
test
addb
jbe
loope
test
add
sbb
jl
ret
push
lods
sub
xlat
dec
jne
mov
and
inc
or
and
sub
mov
xor
dec
push
xorb
jecxz
cmp
push
add
rol
pop
call
push
shr
shr
pop
mov
push
add
pop
push
push
push
add
ror
add
push
shl
inc
mov
add
ror
add
sub
pop
dec
pop
push
push
not
add
rol
push
lea
not
inc
lea
mov
shr
sub
xor
dec
sub
ror
rol
xor
pop
sub
rol
xor
lea
pop
push
push
sub
shr
push
ror
mov
sub
sub
sub
dec
ror
sub
pop
xor
sub
add
pop
push
push
call
jg
or
dec
cmp
repz
iret
mov
add
xchg
repz
and
data16
adc
cld
push
lret
sub
pop
push
push
push
lea
push
push
call
aam
cld
js
push
cmc
andb
push
orb
aam
add
pop
insb
ja
ljmp
fldt
xchg
and
stos
enter
push
lcall
rclb
mov
push
lea
push
push
call
xor
push
nop
jmp
xor
jae
adc
jne
mov
dec
das
xor
aam
loop
add
jb
mov
test
cmpsl
jae
mov
jecxz
mov
fmuls
in
call
test
add
push
add
dec
pop
push
push
shl
inc
shr
pop
call
push
push
push
call
sbb
jmp
lock
out
xor
es
pop
xor
fiaddl
mov
cmpsl
jnp
and
lds
lret
or
cmp
push
mov
or
pop
jecxz
jecxz
pop
mov
xor
lds
sub
adc
fildll
in
hlt
pop
add
push
push
push
push
lea
push
push
call
stos
and
cmpsb
enter
mov
and
push
sbb
adc
jns
mov
pop
sub
xor
mov
test
pushf
pop
testb
insl
xor
in
lds
hlt
lea
sub
pop
pushl
push
push
push
push
call
sahf
in
push
rcrl
push
cmp
imul
jle
je
jmp
lea
ja
mov
pop
cmc
cli
pop
push
push
push
lea
push
lea
push
push
call
add
ds
mov
cmpsb
fsubl
rorl
jle
and
fcompl
js
xor
adc
mov
and
push
cmpsl
stos
scas
rorl
bound
mov
orl
and
sbb
sbb
inc
cmp
sub
pop
mov
push
add
xor
pop
mov
push
sub
pop
mov
push
push
push
not
mov
inc
inc
sub
pop
rol
shl
inc
pop
push
lea
push
call
movsb
inc
imul
cmpsb
idiv
in
add
mov
add
adcb
clc
rcl
rcrb
aam
adc
pop
pusha
and
mov
sbb
dec
xchg
and
sti
pop
rcr
pop
icebp
or
sub
pop
push
push
add
pop
call
cmpl
jne
push
push
push
push
call
enter
popf
rcrl
push
push
shlb
dec
or
jge
leave
xchg
popf
jg
addr16
mov
cmpsl
pop
int3
dec
lds
in
lock
add
push
push
dec
push
dec
xor
mov
xor
rol
ror
sub
inc
lea
not
pop
shl
add
pop
push
dec
rol
add
pop
push
push
sub
xor
pop
call
push
add
shl
dec
sub
pop
push
push
push
dec
dec
push
shr
xor
mov
shl
xor
lea
sub
rol
add
pop
lea
inc
inc
sub
pop
push
push
call
jge
jno
adc
push
mov
push
scas
clc
jecxz
iret
push
gs
mov
add
dec
lds
das
push
imul
dec
in
adc
fmuls
stc
push
jnp
mov
sbb
xchg
mov
int3
and
lret
dec
int
jne
jb
add
pop
dec
dec
loop
in
clc
pop
push
push
push
lea
push
push
call
ret
je
std
and
lock
stos
movsb
in
lods
push
sarb
xor
in
int
clc
cmp
popf
xorl
pop
call
push
push
push
push
push
push
call
adc
cli
in
adc
dec
int
xor
or
test
push
pop
stos
addr16
aaa
int3
mov
inc
lock
sub
mov
mov
mulb
jmp
sbb
mov
cmp
xor
adc
sbb
cld
cmp
xor
mov
mov
push
push
push
push
push
lea
push
call
sbb
cmpsb
iret
cwtl
sub
cltd
and
es
mov
push
pop
int3
mov
push
xor
push
lods
adc
add
push
jns
sub
sbb
std
pop
lds
popf
mov
add
and
ss
in
pop
push
push
lea
add
ror
pop
mov
add
push
push
call
int
in
pop
fnstenv
out
fildl
inc
sbb
cwtl
loope
int
enter
jmp
mov
and
imul
lcall
ret
add
add
push
push
lea
push
push
push
call
push
insb
outsl
sbb
or
es
add
mov
mov
in
mov
sbb
dec
jae
aas
outsl
xlat
ret
dec
shlb
mov
mov
stos
call
mov
fbstp
or
sbb
stos
mov
bound
ljmp
in
in
lcall
xor
add
movl
add
add
sub
pop
mov
push
push
push
push
push
push
call
stos
outsl
hlt
sbb
sbb
inc
sbb
add
cli
mov
sbb
sar
xor
pop
addr16
fcmovbe
call
pop
push
into
ror
in
pusha
cmpsb
fiadds
lcall
or
push
lea
push
call
mov
sahf
add
mov
scas
pop
lret
cmp
notl
xorb
sub
sub
pop
add
push
add
sub
pop
rep
push
push
push
lea
push
lea
push
call
shl
out
scas
jmp
inc
adc
repnz
movl
int3
sti
or
mov
pushw
dec
insl
inc
ja
add
imul
jmp
cltd
jae
ja
ss
leave
mov
stc
xchg
cmpxchg8b
sbb
sbb
mov
sub
pop
pop
mov
push
shl
ror
dec
pop
add
add
push
lea
push
lea
push
push
push
call
mov
ret
mov
mov
iret
xchg
or
fidivrl
jnp
mov
fwait
cld
inc
test
daa
arpl
mov
ljmp
mov
xor
sahf
lahf
ljmp
jmp
mov
loope
sbb
pop
jne
les
lcall
inc
sbb
cwtl
push
add
jne
rclb
inc
add
add
cmp
xchg
pop
mov
stos
push
adc
adc
fsts
jl
pop
outsb
cltd
sbb
nop
mov
pop
pop
jno
mov
lret
into
fscale
sahf
jp
push
xchg
rcr
sbb
mov
clc
pop
xor
push
push
call
sahf
sarl
and
mov
out
out
loop
das
jecxz
int
mov
mov
ret
stc
aas
lock
pop
sbb
notb
mov
mov
sub
and
mov
test
rolb
and
xchg
scas
mov
dec
mov
bound
mov
sub
lcall
les
ror
pop
mov
push
push
push
lea
push
lea
push
push
call
mov
stos
inc
xchg
lret
int
xor
mov
movsb
cmp
or
ljmp
pop
cmpsl
and
sbb
and
dec
pop
inc
fisubrs
flds
adc
push
lea
push
call
dec
cltd
cmc
adc
stc
or
dec
sub
mov
inc
and
mov
jp
roll
pop
loopne
clc
in
rcll
adc
movl
ljmp
mov
mov
aad
dec
das
shl
mov
hlt
into
or
cwtl
jne
data16
jecxz
mov
les
push
push
push
call
mov
sahf
xchg
stos
out
push
repz
fisubrs
cwtl
mov
stos
push
fists
push
inc
sbb
shll
mov
shlb
in
lock
mov
xor
push
dec
shl
pop
add
add
push
shr
pop
mov
push
push
xor
push
inc
add
sub
not
mov
not
not
sub
pop
ror
add
ror
xor
pop
push
not
pop
push
call
push
shr
dec
shl
inc
pop
push
push
push
add
add
push
rol
mov
sub
sub
xor
pop
pop
push
sub
pop
push
push
push
call
mov
adc
mov
pop
cmp
push
inc
pop
loop
jp
fistpll
aad
add
sub
ret
in
clc
pop
push
call
push
push
push
push
call
sbb
out
push
test
hlt
sbb
pop
mov
dec
clc
pop
loop
or
sub
and
push
gs
adc
fwait
mov
lods
and
movsb
sbb
sbb
and
jl
lcall
push
pop
mov
bound
or
sub
pop
mov
push
shl
lea
add
not
pop
push
push
push
sub
add
pop
mov
push
push
call
loope
addr16
shrl
sbb
lahf
pop
jo
fcoms
or
jno
das
roll
stos
iret
and
cmpsl
bound
daa
call
lcall
pop
and
push
sub
pop
add
mov
push
push
lea
push
call
sti
jo
add
rcrl
testl
mov
mov
jmp
xor
dec
ja
xchg
mov
rclb
arpl
or
sub
pop
xor
push
lea
push
push
lea
push
call
enter
push
add
icebp
iret
xchg
cmpsb
daa
jmp
es
pop
lods
sti
icebp
and
addl
inc
outsl
aas
pop
push
mov
cmpsb
xchg
sub
testb
fnstcw
out
sub
pop
add
push
xor
pop
add
push
not
pop
mov
xor
push
push
push
push
call
scas
jp
sub
cmp
xor
pop
imul
cwtl
jne
ja
or
dec
sub
sbb
push
movsb
xor
fistpl
test
sbbl
int
sub
pop
rep
push
push
lea
push
push
push
lea
push
call
or
cs
push
xor
inc
mov
push
fs
cmp
in
sar
mov
pop
sub
gs
jecxz
lret
push
push
mov
mov
sbb
push
sbb
pop
jmp
inc
ss
adc
lcall
dec
sbb
or
pusha
jno
ret
call
pop
and
mov
sub
data16
rcrl
cli
jnp
cs
jl
cld
adc
pop
cmp
pusha
lahf
pop
push
mov
int
cmc
mov
in
xor
xchg
mov
aaa
cmp
pusha
and
mov
mov
or
in
clc
pop
xor
push
push
push
call
ret
lcall
sub
jbe
mov
sub
xchg
rcrb
in
inc
add
notl
add
push
jb
inc
clc
insb
mov
push
mov
outsl
nop
xchg
arpl
jb
je
filds
les
add
push
shl
lea
pop
or
je
mov
xor
push
lea
push
push
push
push
call
cmpsl
clc
mov
or
loopne
jo
or
and
xchg
les
adc
out
mov
xchg
sbb
xor
sbb
int3
out
push
cmp
in
in
pop
mov
push
push
push
push
call
or
orb
rorl
pop
insl
jmp
mov
lds
add
xchg
pop
fcompl
nop
shll
and
sbb
xor
push
push
push
call
movsb
aad
fadds
out
scas
shll
out
fidivrl
cld
subb
sub
inc
addr16
cmp
mov
sub
pop
add
push
push
push
push
push
push
call
cmp
mov
push
mov
jg
adc
jge
xchg
sbb
jle
dec
xor
insb
fs
pop
adc
int3
std
and
fsubl
pop
xchg
jae
ljmp
push
das
sub
pop
add
push
push
lea
push
push
call
mov
xchg
stc
pop
pop
orl
outsl
int
lret
imulb
nop
stos
mov
lds
sbb
mov
cmp
cwtl
sbb
inc
mov
inc
fsubs
and
in
lock
add
rep
push
push
push
lea
push
lea
push
lea
push
call
xor
dec
loopne
psubq
ss
jl
inc
pop
mov
stos
jp
in
mov
pop
xchg
ss
xorl
dec
or
cmp
mov
xor
push
push
lea
push
push
call
mov
ret
mov
xor
xchg
sub
cmp
mov
movsl
into
mov
mov
sub
dec
sub
cmc
loope
sbb
test
dec
cmp
sahf
scas
push
in
lret
lds
jo
into
push
jb
sub
pop
or
je
push
lea
push
call
fistpll
test
ror
xor
imul
xorl
adc
cmp
fcmovb
frstor
call
lods
daa
scas
push
lcall
lcall
repz
add
shr
xor
pop
add
push
lea
push
push
lea
push
push
call
rcrl
lahf
mov
add
xchg
cmp
fildll
add
push
scas
jb
cwtl
movsl
mov
push
lret
das
adc
push
lahf
add
push
pop
push
fdivs
xchg
je
inc
fmull
adc
jl
mov
mov
in
in
pop
rep
push
dec
pop
pop
push
push
add
inc
push
xor
inc
sub
mov
rol
add
sub
ror
add
pop
ror
add
pop
push
lea
push
call
std
out
sbb
adc
mov
enter
movl
int3
push
or
fidivl
or
pop
adc
xchg
rcll
sub
aaa
jno
roll
push
push
push
call
aam
adc
out
jle
test
dec
and
jb
in
daa
mov
stos
in
dec
dec
data16
sbbl
cmp
test
xor
adc
and
int
fwait
popa
call
sub
testl
imul
dec
rclb
test
arpl
lods
pop
mov
pop
mov
push
sub
add
rol
pop
jmp
push
push
lea
push
push
lea
push
push
call
cmpsb
dec
xor
leave
outsb
shll
cli
lahf
scas
xor
ficomps
dec
pop
rcl
out
scas
movsl
push
mov
push
mov
divb
push
sub
pop
push
push
lea
push
call
aas
out
iret
adc
jl
mov
enter
lds
movsl
aad
test
arpl
dec
mov
sub
fs
and
mov
xchg
fwait
sub
cmpsl
mov
insl
sub
pop
mov
push
push
push
push
push
lea
push
call
push
test
or
rcl
sbb
fisttpl
sub
and
xchg
cli
pop
pop
movsb
popa
lret
in
lahf
imul
mov
pop
mov
push
pusha
push
push
push
pop
fwait
xlat
in
add
push
arpl
es
pop
push
bnd
fwait
rolb
jge
add
test
add
add
mov
rcrb
sub
add
or
add
push
sub
pop
mov
push
not
pop
and
pushl
push
push
push
call
add
inc
test
add
mov
leave
mov
movsb
enter
jl
fiaddl
sub
aad
cmc
xchg
adc
lcall
out
lahf
dec
cmp
dec
mov
mov
dec
fsubs
or
dec
cmpsb
pop
sub
sub
adc
adc
lcall
push
sub
pop
pop
push
inc
lea
xor
pop
sub
push
sub
dec
add
pop
jmp
sub
push
xor
add
inc
pop
pushl
pop
push
shr
inc
pop
sub
push
lea
push
push
push
call
rcrl
fucom
lcall
and
sahf
repz
js
scas
cld
test
add
xor
aaa
mov
mov
xchg
xchg
and
jo
in
lock
lcall
cmp
nop
decl
push
push
call
pop
mov
xor
jmp
pushf
jae
adcb
js
test
stos
stc
xor
in
loop
cmpsb
sub
sub
pop
add
push
rol
sub
add
pop
movzwl
push
push
push
call
mov
cmp
loopne
mov
addr16
or
xchg
bound
dec
leave
iret
sti
stos
imul
clc
mov
cmp
mov
test
insl
dec
pop
jns
add
cmc
or
and
cli
sbbb
adc
iret
sahf
movsl
inc
push
movl
lcall
jmp
push
sub
add
sub
pop
cmp
jne
push
push
push
push
push
call
pop
xlat
sar
mov
push
mov
shlb
cmp
test
push
clc
inc
push
in
jg
jecxz
repz
add
je
pushf
xor
rol
add
inc
cmp
das
mov
cs
pop
leave
push
pop
ret
push
dec
lea
pop
push
push
sub
shl
add
pop
mov
push
xor
not
not
pop
add
push
push
lea
push
push
call
cmpsl
icebp
push
movb
lods
adc
inc
iret
mov
js
js
inc
dec
rclb
or
shl
push
lret
fucomp
pop
lahf
sub
pop
push
push
sub
pop
push
push
push
push
call
adc
push
stos
fisttpl
out
and
inc
aaa
mov
xchg
fsubrl
sti
div
lods
push
mov
push
pop
imul
sub
sub
pop
push
push
push
push
call
les
mov
pop
dec
sub
or
push
and
and
push
nopl
xlat
les
push
shrl
aaa
int
fsubs
enter
xchg
inc
mov
iret
cmpsb
cmpsb
push
pop
jmp
push
cmp
sbb
data16
mov
lcall
pop
or
lea
push
push
lea
push
lea
push
call
imul
fcoml
in
inc
pop
add
jbe
int
fidivl
sti
add
popa
std
mov
add
pusha
dec
xchg
cmc
pop
adc
fucomp
xor
fdivp
fadds
fs
or
aas
adc
loope
pusha
mov
in
call
add
dec
pop
mov
push
lea
push
lea
push
lea
push
call
push
mov
add
mov
fisttps
dec
int3
insb
fld1
fisttpl
jge
mov
insb
out
xchg
cwtl
roll
sub
daa
nop
pop
dec
imul
fmulp
out
jp
dec
dec
or
dec
enter
jnp
push
out
and
dec
test
mov
add
push
lea
sub
xor
add
pop
mov
push
push
call
in
mov
inc
imull
leave
mov
leave
push
mul
movsl
pop
inc
aam
pop
dec
mov
adc
xchg
repz
pop
roll
inc
sub
pop
add
push
inc
inc
pop
xor
mov
push
push
push
push
push
push
call
ret
push
popf
fsubr
push
maxps
stc
test
inc
mov
xchg
rcrb
fstpt
sub
mov
sbb
in
call
not
shr
pop
rol
xor
push
push
push
call
mov
loopne
mov
divb
fildl
jb
rorl
jp
sub
rclb
test
ret
fwait
cmpsl
or
stos
or
sub
add
in
xor
inc
fcoml
aaa
mov
in
hlt
pop
inc
push
shr
pop
cmpb
jne
cmp
je
push
rol
add
sub
pop
add
push
sub
pop
cmpl
jne
push
sub
add
add
pop
xor
push
push
push
push
call
or
mov
xchg
inc
cmp
cmp
inc
push
lods
jmp
add
mov
lahf
popa
inc
push
das
or
jmp
xor
shrb
sbb
add
mov
inc
inc
xchg
add
lcall
add
mov
lock
pop
pop
push
add
ror
add
pop
pop
push
sub
pop
pop
push
shl
rol
ror
pop
pop
leave
push
push
push
push
push
call
pop
les
fildll
fsts
mov
cmc
hlt
cmpsl
push
movsl
mov
jbe
adc
adcl
and
xchg
nop
stos
mov
popa
iret
mov
repz
sub
pop
ret
push
push
push
call
cmp
inc
xlat
sti
and
outsl
addl
inc
cmp
mov
cltd
cmp
repnz
fbstp
mov
scas
in
or
fisttpl
mov
mov
ljmp
and
and
ud1
mov
add
fwait
mov
data16
in
jne
sbb
in
sub
pop
mov
push
lea
pop
add
mov
push
rol
pop
push
call
push
shr
ror
pop
xor
push
push
push
push
push
push
call
scas
iret
pusha
das
jbe
mov
mov
orb
mov
cmp
mov
call
mov
cmpsb
and
ss
ja
stos
cmpsb
jl
out
aam
in
call
pop
pop
push
push
push
lea
push
push
call
or
cmpsl
pop
outsb
fadds
jmp
add
imul
stos
sahf
adc
movl
dec
mov
pop
aaa
xor
aaa
mov
sub
or
cmpsl
fsubrs
mov
add
inc
test
pop
pop
sbb
movsl
ljmp
lcall
push
push
lea
push
push
call
aas
sub
loop
dec
frstor
pop
faddl
divb
sahf
xlat
mov
jp
enter
and
or
and
mov
inc
push
sti
repnz
lahf
jae,pn
mov
dec
int3
lahf
xorl
push
jg
jno
icebp
xchg
loope
addr16
shrl
sub
pop
pop
push
xor
pop
pop
push
rol
xor
pop
leave
push
push
push
push
push
call
nop
mov
in
xor
push
push
mov
mov
dec
popa
push
jno
and
adc
out
sbb
xchg
pop
xor
rclb
in
lcall
or
push
push
rol
rol
lea
pop
mov
add
push
push
push
push
push
call
pop
xor
sbb
inc
ljmp
in
lds
into
lds
pop
inc
inc
mov
xchg
adc
pop
jno
in
in
pop
push
push
push
xor
ror
add
lea
pop
push
push
lea
push
push
push
push
lea
push
call
mov
inc
xor
orl
fisttpll
mov
addb
push
jns
cmpsb
xchg
or
mov
stc
push
xchg
mov
mov
fs
ljmp
push
push
ror
xor
dec
pop
mov
push
push
push
push
call
sbb
je
ficompl
pop
sbbb
and
arpl
dec
lret
cmp
mov
sbb
mov
mov
mov
lock
lcall
push
inc
dec
ror
shl
pop
pop
push
not
xor
rol
shr
pop
mov
push
shr
pop
add
push
xor
dec
pop
mov
push
push
lea
push
push
push
push
call
divb
icebp
jmp
mov
ljmp
lcall
aam
cmp
mov
inc
nop
adc
in
call
jae
push
shr
pop
popl
mov
push
push
lea
push
lea
push
push
lea
push
call
add
int3
or
or
jb
mov
nop
jns
ds
cmpsb
shll
ss
in
call
push
call
clc
divb
push
sbb
add
aad
andb
rol
addb
imul
push
lea
xlat
rolb
fiaddl
add
mov
sti
loopne
lods
das
xchg
jno
ljmp
cmp
mov
dec
out
mov
mov
fiaddl
lcall
testb
pop
mov
add
push
rol
pop
xor
push
pop
rol
nop
push
lea
push
push
push
call
lea
lods
fwait
lods
or
lds
aam
xchg
js
inc
jp
mov
addb
lahf
imul
xorb
inc
xchg
xchg
movsb
arpl
cmpsb
xor
mov
sub
lea
ret
call
jecxz
mov
cmpb
insl
adc
hlt
sub
pop
nop
xor
push
add
pop
nop
push
pop
nop
push
push
call
mov
mov
cmp
repnz
inc
mov
push
sub
shll
xchg
ud2
out
or
cmp
xchg
mull
push
inc
xor
jg
test
pusha
adc
into
push
mov
out
or
ljmp
pop
inc
push
sub
ror
shr
inc
pop
nop
nop
push
pop
cmpb
jne
nop
push
lea
push
push
lea
push
call
imul
sbb
out
xchg
and
fadd
cmpsl
fstpt
popa
fldcw
and
popa
cli
xor
inc
push
and
xchg
sub
xchg
movsb
adc
in
lock
nop
cmp
je
push
xor
xor
add
pop
nop
push
add
dec
sub
pop
nop
push
push
push
lea
push
push
push
call
inc
sbb
mov
xchg
rol
pop
call
pcmpgtw
push
pushf
push
test
fstpt
aaa
add
or
out
pop
push
test
lcall
push
ror
shl
not
pop
nop
push
push
push
push
push
push
call
out
jns
xor
fistpl
sbb
repnz
in
sbb
jp
pop
mov
xchg
cmp
sbb
outsl
add
sub
pop
nop
push
push
push
call
je
add
mov
dec
cmp
xor
cltd
in
sub
inc
jge
push
jge
mov
inc
add
mov
jne
jb
xor
push
xor
pop
jmp
push
shr
add
rol
pop
mov
push
push
call
in
movsl
insb
es
push
mov
pusha
adc
pop
push
adc
shll
xchg
in
mull
movsl
xchg
mov
cwtl
out
adc
sbbl
das
add
arpl
adc
rcll
sti
pop
pmaddwd
add
add
sbb
sub
cltd
jns
je
je
mov
stc
xor
cmp
dec
xchg
and
aas
xchg
sub
inc
sub
pop
movzwl
push
add
pop
mov
add
push
push
call
outsb
cmpsl
sub
sbb
stos
lcall
add
jg
aad
ret
pop
sbb
and
ds
jbe
in
clc
lcall
add
add
push
xor
ror
sub
pop
pop
push
push
lea
push
push
push
call
xchg
jle
push
lods
lret
adc
and
push
dec
ret
frstor
sub
pusha
outsl
xchg
pop
xchg
and
cmp
stos
push
pop
dec
pop
cmpsl
or
mov
cmp
scas
mov
inc
fcoml
push
out
shrb
pop
test
rolb
in
in
lcall
push
push
push
push
lea
push
push
call
fstpt
pop
pop
xchg
cs
fcomps
cmpsb
subb
mov
pusha
je
out
jo
mov
mov
lret
cld
mov
inc
xchg
push
adc
mov
in
call
pop
push
push
push
call
data16
hlt
sub
outsb
or
mov
pop
sbb
jno
fdivrl
xor
out
push
in
jge
mov
lret
xchg
sbb
push
or
cmp
xchg
ja
mov
insl
lock
pop
lods
push
out
mov
xchg
fwait
sahf
scas
loop
lret
lahf
hlt
sub
pop
pop
push
push
lea
push
push
push
call
out
dec
adc
das
sub
lahf
addb
outsl
scas
dec
mov
add
lcall
xchg
inc
cmc
mov
cwtl
mov
repz
sahf
sub
pop
leave
push
push
call
jae
cmp
jecxz
push
adc
pop
outsl
es
lds
jns
xor
or
inc
push
jno
add
adc
mov
clc
pop
ret
or
push
add
ret
or
add
mov
lods
rclb
scas
push
add
mov
fistpl
push
add
jecxz
xchg
pushf
cld
inc
int
sbbl
clc
mov
mov
push
cmpsl
dec
idivl
jno
test
bound
cmp
inc
sub
jnp
aad
pop
fsts
push
jb
push
push
or
xchg
jecxz
mov
pop
jns
jno
xchg
enter
mov
mov
dec
mulb
ret
pop
call
and
pop
andl
jmp
pop
push
in
cmpsl
insl
and
sbb
out
rcll
out
dec
iret
dec
mov
fldt
or
imul
roll
dec
mov
add
or
mov
popa
stos
jo
or
mov
jb
dec
sub
xchg
dec
arpl
insb
mov
call
jne
xchg
sub
shrl
enter
sub
mov
outsb
dec
add
jl
xchg
fldenv
xchg
cmp
clc
sar
add
mov
movsb
sbb
es
stos
movsb
mov
lahf
sub
mov
insb
add
cmpsb
faddl
int
cld
ss
ret
inc
inc
mov
jecxz
out
notb
scas
ret
or
add
loop
add
add
popa
lahf
mov
inc
sbb
mov
push
cmp
int
cmp
xor
pop
js
scas
mov
aam
lods
add
or
xchg
lahf
sub
ret
std
xchg
jl
into
xchg
gs
xchg
mov
sahf
pushf
or
out
aam
jl
xchg
mov
shrl
test
xchg
xchg
inc
mov
xchg
xor
repz
mov
mov
pushf
add
xchg
and
fcmovne
xor
popf
shll
mov
xor
insb
and
mov
mov
popa
mov
cmc
pop
mov
test
push
out
push
pop
or
out
jg
out
cmpsl
out
push
cmp
xor
ljmp
aaa
lret
xor
ljmp
aam
sarb
mov
bsr
stos
jg
xlat
je
xor
loope
mov
pop
pop
pop
mov
dec
bound
dec
lods
xlat
adc
lret
cmp
or
and
outsl
jae
aad
outsb
and
ljmp
fists
inc
xor
push
adc
cmpsb
mov
into
mov
in
cmpsl
lds
cmp
out
jmp
cwtl
adc
pop
setl
movsl
fsubs
push
push
sub
imul
or
mov
cmpsl
mov
push
lcall
fimuls
sti
aam
mov
xor
out
sti
cmp
pop
shll
adc
pop
cmpsl
lea
mov
mov
pop
xchg
int3
faddl
dec
cmpsl
xor
clc
insl
inc
pushf
inc
inc
xchg
inc
or
int
xor
xchg
out
add
aad
aad
imul
imul
xor
jmp
fdivl
movsb
insl
add
add
sar
notl
sbb
loop
push
cli
outsb
jbe
rolb
mov
ljmp
mov
push
sbb
or
inc
adc
cmp
xchg
add
aam
or
mov
adc
inc
or
pop
movsl
loopne
stos
or
cmc
outsb
push
xchg
cmp
ja
pop
or
inc
popl
fcmovnu
mov
fdivp
inc
mov
out
add
add
push
mov
pushf
test
mov
enter
inc
loope
inc
mov
arpl
xchg
pop
push
and
pusha
jno
out
je
inc
lods
je
stos
add
fists
jno
cmp
xchg
jl,pt
xlat
adc
scas
hlt
daa
orb
mov
mov
xlat
cmc
adc
pop
fs
sbb
data16
cmp
mov
push
pop
test
mov
ficomps
mov
fcompl
jl
or
pop
sbb
subl
das
sbb
add
lret
mov
mov
lds
clc
push
sub
fstpt
sub
push
scas
test
lahf
adc
cmpl
movsb
mov
and
movsb
sub
jb
movsl
push
mov
lret
jle
or
push
popf
lods
sbb
push
int
mov
jns
cmpsl
movsl
mov
sbb
or
es
push
mov
enter
js
mov
cli
mov
shrb
loope
sbb
daa
cmpsl
cmp
std
cwtl
clc
jg
cmpsb
jle
mov
leave
and
adc
push
push
lcall
sub
sub
push
std
push
nop
jno
pushl
cld
push
and
test
jnp
pop
and
xchg
lret
movsb
sub
push
cmp
mov
int
arpl
mov
les
mov
scas
stos
loop
mov
popa
aas
out
iret
mov
andb
sbb
mov
insb
imul
or
jg
popa
xchg
mov
push
sub
data16
pop
cmp
xchg
mov
stos
inc
xlat
cmp
xchg
aam
push
popa
jl
jb
xlat
lock
sub
ret
addb
inc
pushf
ja
mov
sarb
rorl
out
or
mov
cmpsl
rorb
insb
mov
mov
out
adc
test
sub
lss
inc
add
and
adc
cld
inc
sub
orl
popa
inc
mov
lret
int
push
jbe
sbb
dec
rorl
outsl
sbb
ss
je
xchg
ror
inc
and
outsb
mov
xor
icebp
and
fidivl
pop
iret
fstpt
mov
ss
nop
xor
add
mov
andl
aam
movsb
ficoml
adc
fsts
push
push
adc
or
mov
cmpl
mov
test
and
insb
out
pop
sbb
dec
lods
mov
lcall
xchg
cmp
pop
jns
lcall
mov
and
out
faddl
mov
imul
lcall
sub
out
inc
xchg
mov
mov
inc
push
js
xchg
mov
call
lea
push
sahf
mov
jno
enter
test
push
sbb
loope
jp
and
iret
pop
ret
cmpsl
sbb
andl
enter
lahf
in
lahf
movsb
inc
pop
jo
cmp
push
fiaddl
jnp
or
jno
jnp
fsubrs
movsb
sub
enter
js
mov
add
out
fcomps
adc
jnp
xchg
jg
cmp
fimuls
out
mov
stc
fwait
cmpl
mov
push
push
jg
ljmp
cmpsl
jg
pop
movsb
sbb
fucomp
mov
xchg
fadd
push
pushf
inc
push
inc
int3
mov
jmp
filds
or
int3
pop
test
dec
jp
push
and
push
jg
popf
insb
xor
xchg
sub
adc
cmp
aaa
push
insl
rcrl
mov
popa
loop
mov
scas
sbb
push
stos
das
fcompl
adc
pop
and
std
or
ds
test
sti
repz
jb
cmp
lods
sub
jl
mov
int
popa
xor
sbb
aaa
jne
adc
inc
inc
cmp
loopne
cmc
dec
pop
sbb
cmp
jo
pusha
or
xchg
mov
pop
xor
enter
call
lods
arpl
sub
mov
push
popf
out
sbb
cmp
ja
dec
je
rcrl
sub
ss
adc
inc
inc
gs
dec
insb
mov
jae
repz
sbb
add
popf
xchg
aam
fisubrl
cmpsl
aam
fdiv
mov
lods
ret
arpl
pop
sbb
or
pop
stc
cs
adc
and
in
rolb
pop
pop
shll
jbe
cmp
jb
sti
cmp
test
out
mov
and
test
or
sbb
imul
pop
sub
jb
out
fldcw
into
addr16
push
jns
inc
stos
sbb
les
lods
jns
fdivrs
call
dec
mov
jns
inc
mov
sbbl
sbb
dec
insb
jno
jecxz
icebp
fldenv
mov
fs
mov
add
gs
popa
movsl
fs
pop
xor
stc
push
ret
push
fsin
add
mov
clc
in
jnp
sahf
shlb
mov
das
test
dec
cwtl
xchg
or
or
adc
mov
ljmp
and
imul
icebp
pop
clc
cmpsb
lcall
enter
adc
popa
push
or
jle,pt
sbbl
les
jl
cwtl
lcall
xchg
mov
aam
sub
repnz
fsubp
push
out
clc
push
test
data16
cmc
sbb
jns
jge
jnp
dec
add
ja
sahf
ret
xchg
adc
test
stc
loop
jge
lods
mov
push
mov
ss
mov
and
mov
mov
dec
and
ds
sbb
add
call
jb
add
rcr
lods
int3
mov
xchg
cmpsl
dec
jecxz
lret
movsb
das
aaa
cmp
jmp
mov
xor
loope
hlt
cli
icebp
and
jmp
add
mov
cmp
aam
mov
in
cmp
into
shl
into
cmp
bnd
ret
fcompl
jl
sub
enter
inc
icebp
ljmp
test
or
mov
aad
pop
mov
in
add
jns
push
inc
pop
xor
fsubl
es
jnp
sub
xchg
jo
js
lds
pop
mov
loop
push
fwait
add
xor
dec
sbb
jmp
cwtl
and
sbb
dec
mov
les
push
pop
sub
in
adc
jo
test
movsb
movsl
mov
cmp
jne
bound
std
sarl
sbb
ret
mov
loope
xlat
mov
adc
outsb
loope
fisttpll
mov
popa
jo
xchg
push
testl
mov
pop
outsb
in
inc
popf
lahf
pop
imul
mov
sti
js
nop
std
bound
push
gs
mov
push
bound
repz
and
mov
test
jne
cld
sbb
roll
push
inc
out
mov
mov
xchg
pusha
cmpsl
and
mov
setnp
aaa
daa
out
js
mov
and
pop
in
ret
cs
jbe
lcall
pop
xor
test
push
inc
xchg
enter
sub
sbb
jle
jb
cmp
jo
pop
lods
add
adc
jle
das
inc
jno
jg
xchg
or
cmp
adc
cmpsb
fsubrl
cmp
cli
ja
add
inc
xchg
pop
jmp
ja
imul
jl
push
mov
xor
and
jle
jmp
sarl
adc
jle
add
loope
scas
iret
pop
xor
stos
or
fistpll
sbb
popa
dec
int3
cmp
out
mov
lds
jp
and
jae
lds
mov
jmp
cmp
cmp
push
jns
xchg
in
push
push
add
cmp
cmpb
mov
addr16
rclb
mov
inc
push
add
fnstsw
mov
in
jnp
jns
mov
stos
inc
imul
paddsw
dec
sti
shl
das
cwtl
ja
scas
jnp
repz
test
pop
cmp
mov
pop
daa
inc
ror
or
fstp
int
add
or
push
cmp
dec
decl
stos
iret
mov
sbb
cmp
sub
mov
and
movsb
lea
mov
imul
or
ljmp
sbb
dec
or
and
fcmovnb
int3
adc
outsl
lds
sbb
adc
push
out
dec
das
cmpsb
popa
je
inc
sub
and
in
inc
mov
insb
adc
das
pop
and
pop
sub
cmpsb
test
shlb
cmc
or
mov
adc
xchg
lods
mov
jne
jne
or
ds
jmp
das
lret
out
adcb
add
icebp
adc
in
push
lds
pop
insb
dec
lahf
jl
into
mov
xchg
xchg
pop
cmp
rcll
mov
jae
sub
shll
jnp
pop
fldt
adc
scas
add
ds
fsubrs
loop
adc
addr16
cltd
enter
insl
and
clc
in
fstpl
rolb
leave
insb
scas
addr16
loop
outsb
inc
lds
dec
pop
ret
int3
bound
sarl
dec
sbb
and
fnstenv
push
sub
lods
clc
clc
sbb
inc
arpl
dec
lret
dec
test
sbbl
mov
adc
shlb
pop
dec
lahf
aas
rolb
test
call
mov
in
mov
loope
mov
sub
call
loop
inc
ds
pop
lods
mov
pop
stc
mov
test
mov
mov
mov
xchg
mov
lods
pop
movsl
sub
xor
cmp
mov
call
or
adc
rclb
dec
cmp
std
icebp
lods
and
cmc
sbb
cmp
aam
scas
add
xor
inc
inc
adc
jl
bound
movlps
sbb
jnp
mov
mov
xchg
rolb
pop
mov
adc
and
jnp
hlt
push
cmpsb
sbb
movb
pop
mov
xlat
cmpsl
mov
jo
cmp
lock
adc
push
xchg
or
jp
lahf
push
jno
xor
js
jns
daa
push
sbb
js
jb
sahf
cltd
mov
lods
cmpl
cmpsl
cmp
sub
pop
xor
adc
lds
insb
push
pop
push
inc
fldcw
call
adcl
gs
hlt
leave
pop
stos
aad
jl
jne
loope
mov
aad
lret
iret
cltd
mov
js
xchg
mov
popa
pop
movsl
mov
pop
popa
add
aad
dec
sbb
and
cmp
jle
das
xchg
nop
push
cmc
sub
or
fdivrp
mov
jo
jle
fildl
push
pop
lahf
push
roll
sub
rcll
mov
sub
pop
or
loop
mov
add
fldl
xchg
add
pop
aad
aad
xor
jns
xchg
dec
cmp
push
add
pop
cmp
fsts
push
dec
mov
push
xor
stc
cmp
movsl
mov
adc
lret
mov
outsl
mov
and
add
test
mov
inc
int3
sarl
jb
dec
sub
out
testl
xlat
outsl
cmp
scas
cltd
xchg
cmp
pop
sbb
jno
cld
lret
adc
pop
mov
sar
js
push
adc
mov
xchg
sbb
mov
and
and
in
and
fs
adc
push
jbe
xchg
les
in
mov
roll
cmp
jbe
in
data16
sbb
push
mov
jge
movsb
popl
push
test
xor
shrl
shlb
add
adcl
cmp
mov
arpl
xchg
out
push
fistpll
in
xchg
add
jnp
add
or
jg
push
add
xor
pop
pushf
jne
popf
out
lds
lea
dec
fcoms
sub
mov
bound
pop
popa
sbb
scas
test
inc
mov
cltd
arpl
jae
test
gs
stos
inc
aaa
icebp
jl
dec
aas
jle
mov
cmp
aad
std
addr16
lods
outsb
lret
and
add
scas
and
cmp
frstor
and
xchg
push
or
adc
aam
sbb
xchg
push
sub
sbb
cmp
inc
xor
or
cmpsb
mov
push
jmp
and
mov
lea
or
inc
sub
push
mov
scas
lahf
scas
jle
mov
cmp
or
xchg
movntps
mov
stos
jecxz
scas
push
push
jp
xchg
sub
jo
inc
loop
loop
cmpsl
std
push
xor
out
sub
lahf
cs
or
pop
lds
mov
stos
call
mov
ds
ja
dec
fs
insb
inc
xlat
test
sbb
das
inc
mov
addr16
xchg
pop
mov
push
inc
imulb
or
mov
lods
lea
vphaddbd
sbb
add
mov
aas
add
in
mov
push
flds
mov
fstp
idivb
int3
pop
fisubl
js
mov
call
fsubrl
aaa
into
lds
xchg
pop
sub
jecxz
cmp
lock
dec
fildl
cltd
mov
ljmp
rcr
fmulp
pushf
into
imul
cmpsl
scas
xlat
aam
in
stos
jo
and
int
sub
xchg
mov
dec
mov
xchg
adc
cmp
inc
lods
xor
nop
lock
add
mov
or
sub
setne
mov
sbb
outsb
stos
xchg
xor
adc
stc
call
xchg
ds
dec
or
mov
pop
rolb
and
jbe
add
jnp
cmp
clc
lahf
cmp
sub
je
xchg
fwait
jbe
es
lds
cli
fsubr
sahf
or
rorl
out
xchg
mov
xlat
enter
jb
xor
push
cwtl
or
jno
adc
in
popf
push
or
jge
or
push
mov
add
push
pop
test
ja
daa
jnp
jno
push
cmp
js
pop
in
adc
dec
jb
add
sar
leave
das
xchg
mov
lods
cmp
sub
shrb
or
xor
sbb
mov
fstpl
rol
cmovg
test
mov
mov
xorl
aas
xor
mov
jp
jl
stos
nop
daa
rorl
cmp
scas
data16
mov
sbb
dec
movsl
faddl
and
sbb
gs
std
ds
push
incb
add
in
cmc
mov
push
jno
repz
sbb
lods
out
xor
lods
mov
enter
xchg
and
sti
scas
daa
pop
aam
cltd
or
inc
adcl
int
hlt
cmp
adc
inc
and
and
popf
dec
cmpsb
add
cld
xchg
mov
dec
jo
xor
dec
imul
jno
sub
out
into
sub
movsl
repnz
mov
adc
push
lock
sub
test
cmp
jno
or
mov
ds
fadd
shrb
pushf
mov
cli
std
arpl
stos
icebp
mov
scas
mov
push
mov
add
cmp
bound
cmp
dec
sub
sub
or
bound
and
push
lods
cli
int
inc
dec
loope
rcrl
adc
mov
pusha
and
stos
pop
aaa
and
lods
rorb
pop
mov
das
bound
pushf
pop
imul
or
mov
leave
in
xor
mov
push
mov
mov
addb
add
mov
mov
xchg
add
movsb
xchg
xor
mov
out
in
pop
clc
or
popf
das
mov
cmp
fsubp
cmpsl
in
pusha
inc
and
aam
call
clc
lods
out
out
das
shlb
pop
outsb
dec
mov
dec
pop
js
es
xchg
mov
mov
out
pop
pop
add
mov
setne
jae
push
jmp
aad
test
aad
stos
out
ss
cmp
and
sbb
fdivl
cmp
xor
mov
mov
xor
pop
cmp
jl
lcall
push
xor
pop
sub
clc
sbb
clc
out
out
xor
mov
cmp
cmp
adc
sbb
sbb
adc
cld
xchg
psllq
popf
pop
xlat
filds
mov
jae
xchg
mov
sub
cwtl
aas
cmpsl
and
xchg
push
dec
adcl
and
add
in
dec
jp
cmp
stc
or
mov
and
pusha
sbb
dec
mov
pop
dec
test
outsb
dec
movsl
test
pop
inc
sub
cs
jecxz
sbb
repnz
mov
push
inc
in
fwait
hlt
repnz
lods
mov
push
mov
jne
mov
mov
in
ds
mov
mov
dec
icebp
push
rorl
cmp
call
fidivrs
mov
or
outsl
jns
dec
jb
int
js
mov
pop
mov
push
xor
sub
cmp
xor
mov
mov
dec
push
sarb
lret
lcall
std
pop
dec
lock
int3
dec
call
and
aas
xchg
jecxz
jmp
fsts
inc
mov
xchg
pop
cli
loope
das
rolb
loope
aam
push
sbb
into
lahf
xchg
push
lock
pop
mov
enter
dec
cltd
mov
sub
pop
sbb
jle
pcmpgtd
roll
push
adc
adc
lret
pop
out
add
push
cmp
mov
pop
jbe
dec
in
roll
mov
push
adc
inc
push
mov
repz
gs
test
push
movsl
std
out
cmp
xchg
repz
movsl
push
fs
mov
popa
sub
rolb
dec
add
dec
addr16
popa
mov
xchg
lcall
scas
inc
hlt
inc
dec
xor
lds
decb
and
rcl
pop
shrb
mov
stc
out
js
mov
pusha
dec
add
outsl
cld
push
xchg
into
pop
sbb
pop
bound
or
mov
xchg
add
cli
stos
ret
jb
sub
cmp
lea
bt
aam
push
notl
nop
xor
dec
or
lods
inc
dec
pop
int
es
aad
ret
dec
push
ret
jle
cltd
loope
cld
push
and
addr16
iret
add
ss
loope
xchg
dec
xchg
data16
lods
sbb
jns
push
call
push
jne
cld
adc
inc
fisubrs
ret
jo
push
xchg
aaa
movb
popf
lret
jmp
xor
jl
adc
mov
push
inc
movsl
xor
or
out
push
jb
sub
xchg
scas
xor
push
inc
or
in
pop
mov
int
add
movsb
mov
int3
inc
dec
mov
lcall
shl
xor
lods
push
xor
ret
jle
les
popf
test
loop
or
test
push
xchg
xor
fcmovnu
rcrl
adcb
movb
lds
outsl
js
std
aam
mov
jae
test
and
cmp
stos
clc
and
sbb
cli
cmpsb
pushf
xor
cmpsl
imul
push
push
fisubrl
mov
int3
lods
pop
inc
dec
jl
cmpsl
mov
out
or
insl
loop
jnp
adc
push
fdivrl
cmp
add
mov
lods
insl
sub
push
scas
je
subl
lret
jb
cmp
fs
xchg
mov
push
push
dec
dec
es
mov
inc
sahf
mov
jne
fldl2t
ret
push
leave
sbbb
repz
cwtl
sbb
dec
pop
fidivrl
add
scas
ret
fcoml
jle
test
in
xchg
pop
adcl
es
adc
xor
movsb
in
lea
dec
cwtl
fs
and
aam
xchg
sbbl
ds
stos
xor
stos
movsb
xchg
data16
nop
rolb
pop
dec
mov
out
lods
pop
pop
jle
inc
inc
mov
xchg
push
dec
cltd
test
ss
adc
xor
sub
enter
js
sub
loop
std
scas
lahf
test
int3
mov
jmp
xor
int
inc
dec
insl
cmpsb
sub
lods
and
cmp
push
mov
js
insb
stos
shlb
pop
scas
jmp
and
push
mov
adc
and
popa
sbb
test
cmp
call
lret
jb
inc
mov
pusha
jae
cmp
orb
loop
mov
rorb
rcrl
popf
adc
cmpsl
iret
out
popa
fnstenv
mov
add
iret
xchg
mov
pusha
ret
pop
popa
aaa
jmp
or
jae
inc
cmp
cmp
insb
or
cld
xchg
pop
sbb
adc
aaa
gs
sbb
adc
insl
adc
repz
js
push
aam
sub
pop
push
or
aam
sbb
scas
add
loopne
push
sarb
add
cli
sbbl
adc
rclb
jmp
add
xchg
jmp
outsb
ficoms
scas
sub
clc
je
inc
clc
test
in
dec
imul
add
test
out
lcall
int3
sarl
in
mov
xchg
pop
pop
dec
jecxz
das
mov
hlt
push
ljmp
xor
sbb
loop
push
jle
repnz
cmp
inc
out
add
push
rcll
repz
pusha
repnz
pop
sahf
push
mov
xchg
sti
ja
stos
pushf
idivb
and
xchg
frstor
ja
outsl
mov
push
insl
aaa
mov
test
adc
ss
mov
xor
movsb
dec
jns
mov
pop
ficomps
cmp
sahf
std
dec
mov
aad
inc
sub
cmc
push
lcall
mov
sbb
add
cmp
dec
sub
pop
jo
ret
testl
add
jb
sti
add
and
cmpsl
xchg
mov
iret
dec
and
fsub
xchg
or
lea
adc
xor
inc
ret
adc
arpl
mov
push
mov
sub
popf
pop
mov
fiaddl
in
sub
lock
fimull
jmp
shr
cwtl
add
xchg
mov
rclb
imul
loopne
shrb
mov
fbld
pusha
dec
inc
xchg
fs
dec
ds
and
push
cs
sbb
cwtl
push
loopne
pusha
into
cmpsl
es
dec
sub
mov
data16
cmp
pop
insl
push
call
sti
sub
xchg
stc
faddl
mov
adc
out
orb
dec
xchg
jo
adc
aam
cld
cmpb
ret
fmulp
iret
cs
dec
out
jp
add
mov
fstpt
jne
out
int3
adc
push
pop
inc
iret
inc
jnp
mov
hlt
or
movsl
sbb
lods
sbb
loopne
push
push
mov
push
call
add
popa
add
sub
pusha
sbb
sub
dec
inc
std
cmp
or
pushf
dec
xor
xor
cmpsl
and
outsl
adc
xchg
arpl
sub
test
push
or
out
push
cmp
cmp
rcll
cmc
std
repnz
jge
icebp
and
push
inc
pop
jmp
popa
outsl
jns
mov
sarl
lcall
ficoml
movb
outsb
aad
xor
xchg
push
push
idivl
insl
shll
mov
fstps
mov
inc
lcall
jmp
dec
nop
mov
dec
mov
fwait
adc
or
test
cmpsb
push
sbb
jb
push
inc
scas
sbb
ss
add
mov
loopne
inc
mov
xchg
stc
dec
xor
cmp
mov
enter
pop
imul
mov
mov
cmpsl
jo
sub
push
icebp
push
insb
mov
mov
cmp
ja
cmpsb
adc
and
xchg
cs
mov
mov
ret
es
sub
pop
lret
insb
sub
clc
or
push
add
dec
inc
pop
cmpl
lds
loop
inc
shl
mov
dec
mov
mov
push
and
jmp
cmp
fisttpll
orl
or
ret
out
jge
xlat
les
es
adc
jge
lds
xor
push
insb
xor
fistps
fdivs
mov
mov
jmp
pop
xchg
jb
jge
push
int3
es
sbb
push
inc
sub
fsubs
cltd
sti
xchg
cmp
or
or
sbb
add
test
xchg
cmp
cltd
adc
lret
push
lds
inc
and
arpl
cmc
and
jno
repz
scas
sbb
lods
push
pop
mov
bound
push
negb
loop
lds
cmp
lret
mov
adc
test
loop
or
outsb
mov
gs
and
lods
out
inc
aad
pop
inc
pop
xor
call
test
pop
pop
push
repnz
movsb
insl
mov
lcall
sti
je
pop
or
xchg
pop
das
loope
push
jae
in
sti
xchg
inc
mov
icebp
push
fdivrl
imul
outsl
test
cltd
or
loop
or
mov
shl
leave
outsb
shlb
cmp
scas
sbb
out
pushf
inc
in
dec
adc
clc
add
shlb
test
xor
jnp
scas
pop
test
in
nop
data16
push
lock
adc
imul
cmp
pop
mov
ss
mov
insl
iret
add
xor
fs
mov
mov
pop
imul
sub
sub
mov
insl
sbb
std
xchg
test
dec
std
popf
cmp
das
mov
fisubl
xor
out
mov
sub
out
fimull
jge
adc
in
std
push
add
push
cwtl
cld
es
loopne
fnstsw
and
out
cmp
mov
jp
add
scas
fsub
call
add
mov
sbb
fs
negb
mov
pop
cs
mov
sahf
ljmp
push
inc
popa
xor
jns
xchg
push
inc
std
lret
rcrl
pop
sub
cmp
xchg
jbe
dec
lds
jnp
or
loopne
push
pop
mov
xchg
sti
sub
je
lahf
popa
mov
daa
jb
xor
scas
stos
lret
stos
in
add
push
jo
sub
cli
pop
cwtl
int3
outsb
dec
test
pop
imul
movsb
xlat
sub
mov
jp
dec
xchg
imul
pop
pop
jge
ljmp
xchg
xchg
xchg
xor
mov
mov
push
cmp
enter
mov
or
push
orl
test
cli
dec
cmpb
movsb
repz
testb
adc
and
and
and
in
movsb
add
hlt
iret
in
mov
mov
xchg
xlat
push
adc
add
mov
jno
lret
mov
mov
mov
jmp
jne
cmp
icebp
inc
lds
xchg
cmpsb
add
mov
sbb
iret
and
pop
dec
sbb
fmul
and
jne
stos
scas
xor
in
cmp
jle
cwtl
imul
fmul
jecxz
dec
cld
mov
dec
fs
cmp
cmpsl
pop
or
mov
xor
push
mov
and
jl
xchg
dec
addr16
insb
adc
lcall
sub
roll
cmp
scas
push
xchg
or
adc
jmp
jb
int
loope
xor
xchg
adc
mov
dec
daa
lret
lahf
pop
fbld
mov
fiadds
in
les
dec
sbb
mov
cmpsl
loopne
mov
loopne
push
out
pushf
rol
lahf
adc
mov
repz
leave
cs
nop
mov
mov
gs
aam
sub
out
pop
inc
scas
scas
addps
iret
inc
adcb
inc
cmp
loopne
sbb
mov
in
pop
mov
in
aad
mov
dec
int
pop
aam
stos
or
xchg
jbe
push
xchg
div
icebp
out
sub
addb
mov
push
pusha
jle
inc
int
imul
jo
shr
testl
mov
cmp
sbb
pop
pop
fs
frstor
jmp
and
stc
out
mov
movsl
aam
mov
pop
sub
mov
aad
inc
es
sub
cmp
push
xor
ds
std
cmp
stos
imul
mov
call
sbb
add
jp
cld
fistpll
jp
xor
add
push
and
xlat
sbb
and
in
mov
xlat
pop
repnz
mov
fcmovu
sub
and
push
js
cmp
or
add
mov
sub
xchg
adc
and
mov
dec
xor
jp
sub
xor
in
inc
cmpb
leave
in
or
bnd
cli
inc
xchg
cmp
inc
push
loope
ss
insb
fiadds
jmp
stc
fistpll
bound
or
inc
in
jl
jbe
adc
loope
jbe
fadds
fidivl
leave
xchg
lods
mov
test
sub
loop
in
mov
ds
push
adc
xor
sti
inc
add
cmpsl
out
cmp
in
mov
push
cltd
ja
push
fwait
mov
int3
inc
adc
add
and
jbe
pushf
jnp
stc
orb
stos
or
inc
rolb
mov
adc
xor
fcompl
inc
mov
pop
insl
inc
pop
aad
test
nop
dec
mov
in
inc
push
je,pn
adc
inc
and
in
lret
xchg
lret
push
xchg
cmp
ror
push
push
push
dec
mov
sbb
add
dec
dec
cmc
jmp
mov
ret
fistl
dec
cmpsb
push
popf
fisttps
mov
fstpl
fdivrl
add
stos
decb
dec
push
mov
xchg
inc
xor
lods
push
xor
xorb
inc
hlt
incb
or
aas
sar
and
inc
dec
repnz
std
xchg
xchg
jne
xchg
cld
loop
jmp
cld
add
pop
cmc
xchg
dec
mov
cmp
fcoml
xchg
mov
pop
lret
cli
jb
into
xor
and
cs
rcll
sub
mov
push
push
pop
mov
pop
or
pop
push
add
rcr
out
lcall
cmp
in
iret
loop
pop
inc
xor
push
js
xchg
test
adc
pop
mov
sub
pop
push
xor
lds
mov
insl
or
icebp
imul
jl
sub
mov
mov
sub
scas
push
adc
out
add
