mov
sub
ror
shr
shr
mov
jmp
sub
mov
or
sub
mov
jmp
jmp
jmp
push
mov
xor
push
pop
inc
mov
call
xchg
jmp
jmp
jmp
addr16
inc
and
ror
shr
mov
and
nop
sub
mov
mov
addr16
andl
mov
jmp
push
addr16
call
mov
mov
mov
mov
xchg
mov
mov
dec
mov
push
mov
call
xchg
jmp
push
mov
push
mov
add
nop
push
mov
call
xchg
pushl
ror
mov
rol
pop
xor
mov
mov
shl
or
mov
jmp
sub
ror
and
pop
jmp
inc
mov
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jl
sbb
shl
and
add
pop
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
rclb
test
add
push
push
pop
inc
sub
mov
call
xchg
movl
nop
jmp
movb
addr16
movb
mov
movb
xchg
movb
xchg
jmp
call
mov
xor
shr
mov
mov
add
dec
mov
mov
nop
mov
xchg
ror
mov
call
addr16
jmp
jmp
jmp
jmp
jmp
mov
shr
mov
push
mov
push
xchg
xor
nop
jmp
push
nop
jmp
jmp
push
addr16
add
mov
sub
xchg
mov
xor
sub
shr
add
mov
mov
xchg
jmp
mov
add
mov
add
xor
mov
push
push
pop
push
mov
push
addr16
nop
nop
nop
nop
nop
push
mov
pushl
nop
call
xchg
mov
xor
inc
sub
xor
or
mov
jmp
jmp
push
xchg
add
inc
mov
sub
xchg
push
xchg
push
nop
jmp
pushl
add
mov
or
pop
push
nop
push
nop
jmp
mov
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
call
mov
dec
xchg
or
shr
inc
mov
jmp
and
xchg
jmp
jle
shr
mov
mov
xchg
andl
push
pop
add
mov
jmp
push
push
pop
jmp
jmp
jmp
jmp
push
mov
and
mov
sub
nop
push
push
pop
push
mov
call
mov
mov
mov
mov
mov
mov
xchg
jmp
lea
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
push
xchg
push
addr16
push
xchg
push
mov
or
or
or
mov
pop
jmp
push
xchg
xor
nop
jmp
sub
push
pop
add
push
pop
cmpl
mov
je
jmp
jmp
jmp
push
nop
push
mov
xor
nop
push
mov
push
mov
push
nop
push
push
pop
push
nop
push
xchg
jmp
push
push
pop
call
push
pop
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
dec
or
xchg
jmp
jmp
jmp
xchg
jmp
andl
addr16
push
mov
add
addr16
add
mov
xor
ror
dec
mov
push
mov
push
nop
ror
mov
mov
push
pop
jmp
jne
jmp
jmp
jmp
xchg
call
addr16
mov
mov
mov
xchg
mov
mov
add
sub
sub
sub
mov
jmp
inc
addr16
inc
mov
jmp
jmp
jmp
jmp
addr16
cmpl
nop
jne
push
push
pop
jmp
call
nop
nop
nop
nop
nop
nop
mov
xchg
mov
xchg
mov
addr16
jmp
jmp
jmp
push
push
pop
xor
mov
xor
mov
inc
mov
jmp
add
push
pop
cmp
xchg
jmp
jmp
jmp
nop
jmp
push
xchg
push
mov
push
mov
xor
nop
push
mov
push
or
sub
mov
pop
mov
or
sub
dec
test
jne
pop
inc
xor
or
mov
call
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
ljmp
pop
add
nop
nop
nop
nop
pop
push
mov
push
nop
xor
mov
jmp
xor
mov
mov
dec
ror
mov
mov
xchg
dec
mov
add
xchg
jmp
jmp
push
xchg
or
and
mov
or
sub
mov
sub
addr16
jmp
call
xchg
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
add
or
nop
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jne
jmp
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
lea
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
lea
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
call
xchg
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
loopne
lock
or
and
and
mov
shl
xor
shl
pop
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
push
and
xor
add
xor
mov
push
xchg
call
mov
inc
and
pop
lea
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
push
push
pop
movb
xchg
jmp
push
push
pop
sub
mov
rol
xor
mov
mov
push
push
pop
dec
and
mov
add
mov
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jne
mov
mov
inc
pop
xor
or
shl
pop
sub
shr
and
add
pop
jmp
mov
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
inc
and
mov
movzbl
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
xchg
jmp
add
push
pop
add
mov
add
push
pop
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
mov
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
fdivr
call
int
out
pop
jmp
mov
mov
jmp
jmp
jmp
jmp
jmp
or
add
xor
dec
pop
lea
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
push
mov
movb
mov
movb
push
pop
movb
xchg
movb
push
pop
jmp
movb
xchg
movb
xchg
movb
addr16
movb
mov
movb
xchg
movb
xchg
movb
nop
movb
addr16
movb
mov
jmp
jmp
jmp
jmp
inc
cld
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
push
nop
push
xchg
pushl
nop
pushl
push
pop
call
xchg
leave
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
inc
incb
nop
call
nop
xor
and
dec
mov
mov
push
mov
call
xchg
mov
mov
movl
xchg
call
nop
jmp
rol
and
inc
dec
xor
mov
call
nop
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jne
or
mov
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
add
add
shlb
jmp
push
mov
pushl
addr16
call
xchg
sub
xor
and
mov
pop
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
call
nop
push
mov
and
shl
or
and
pop
and
add
and
mov
xor
inc
pop
pushl
dec
or
inc
xor
pop
xor
mov
rorl
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
add
xchg
jmp
pushl
add
or
add
inc
pop
ror
mov
rep
jmp
jmp
jmp
jmp
jmp
jmp
jmp
or
shl
xor
or
shr
mov
push
mov
pop
add
sub
inc
add
sub
mov
jmp
add
mov
movzwl
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
push
xchg
sub
and
xor
rol
pop
cmp
xchg
mov
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
mov
addr16
mov
mov
movl
nop
dec
or
add
sub
mov
and
add
and
shr
add
mov
shr
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
rclb
jmp
mov
xchg
lea
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
addr16
push
mov
mov
xchg
jmp
dec
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
pushl
lret
xor
pop
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
mov
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
lea
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
mov
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
mov
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
xchg
ret
shr
stc
jmp
call
mov
nop
jmp
jmp
jmp
jmp
jmp
jmp
jmp
nop
jmp
jmp
jmp
jmp
jmp
jmp
jmp
cmpb
xchg
jmp
mov
nop
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
mov
nop
lea
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
call
addr16
test
jmp
jmp
jmp
jmp
jmp
jmp
je
call
xchg
jmp
mov
addr16
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
je
mov
push
pop
and
and
and
mov
mov
mov
movsbl
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
movb
adc
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
lock
incl
xchg
jmp
movb
nop
movb
xchg
movb
mov
call
nop
add
xor
and
inc
mov
jmp
sub
mov
pop
sub
and
and
mov
call
push
pop
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
je
lea
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
testb
add
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
iret
jmp
cmp
mov
jne
or
shr
xor
ror
and
pop
xor
xchg
add
or
rol
pop
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
les
add
jmp
push
xchg
mov
and
or
add
mov
call
mov
and
mov
xor
shl
pop
pushl
xchg
push
addr16
pushl
mov
push
xchg
nop
nop
nop
nop
nop
call
xchg
mov
shr
and
pop
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
push
nop
mov
rol
add
inc
add
mov
sub
mov
shr
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
aaa
add
add
jmp
jmp
jmp
jmp
jmp
jmp
je
nop
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
cmpb
nop
je
nop
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
call
add
add
add
nop
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
pushf
add
add
cmp
incl
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
sahf
add
add
rcl
mov
mov
mov
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
mov
jmp
jmp
jmp
jmp
jmp
jmp
jmp
inc
push
pop
push
mov
push
xchg
mov
xchg
mov
nop
mov
addr16
jmp
push
nop
add
mov
dec
mov
call
xchg
inc
or
pop
sub
or
rol
mov
shl
pop
xor
shr
rol
shl
pop
jmp
nop
jmp
jmp
jmp
test
or
add
pop
out
decl
push
jmp
jmp
jmp
jmp
jmp
jmp
jmp
je
push
push
pop
xor
xchg
shl
add
or
and
ror
pop
lea
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
call
push
pop
jmp
jne
sub
inc
mov
cmp
xchg
je
incl
nop
or
mov
cmp
nop
jmp
call
nop
inc
mov
mov
add
mov
movl
mov
jmp
call
nop
cmpl
xchg
je
cmpl
mov
je
cmpl
xchg
jne
mov
mov
ror
mov
jmp
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
sbb
jne
xchg
and
sub
add
sub
mov
jmp
aas
sub
js
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
mov
add
add
rorb
pop
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
add
add
or
mov
jmp
mov
mov
or
ror
ror
sub
mov
rep
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
add
mov
movzwl
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
inc
cld
xchg
jmp
pusha
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
ret
inc
or
lds
fimuls
call
mov
jmp
dec
mov
lea
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
incl
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jl
xor
mov
jmp
or
mov
movzwl
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
mov
xchg
add
xchg
mov
shl
and
xor
pop
add
shr
pop
jmp
call
mov
or
sub
sub
xor
ror
mov
movl
xchg
call
push
pop
movl
mov
jmp
jmp
xor
addr16
xor
xor
xor
and
ror
pop
mov
sub
xor
sub
add
pop
leave
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
mov
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
je
add
rol
or
mov
sub
nop
mov
mov
mov
push
pop
jmp
shr
ror
xor
add
inc
pop
leave
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
add
xor
rol
add
or
sub
mov
call
xchg
jmp
and
addr16
cmp
mov
jne
jmp
add
mov
push
popl
movb
mov
movl
mov
call
push
pop
popa
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
xchg
pusha
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
cmp
add
jmp
movb
xchg
incl
nop
jmp
ror
sub
mov
movzbl
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
xchg
call
mov
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
add
push
push
pop
jmp
and
mov
add
nop
add
xchg
add
xchg
and
add
and
add
jmp
mov
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
mov
incl
pop
and
mov
ror
shr
shr
mov
mov
and
add
and
add
or
xor
shr
mov
mov
add
addr16
mov
mov
or
or
or
dec
mov
jmp
call
xchg
popa
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
and
xchg
call
push
pop
call
addr16
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
inc
xchg
inc
xchg
decl
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jne
add
xchg
cmpl
mov
jmp
add
addr16
cltd
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
incl
mov
xor
xchg
inc
xchg
or
mov
and
xchg
jmp
call
nop
jmp
xor
mov
xor
xor
pop
xor
and
and
shl
pop
or
add
pop
leave
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jne
rol
mov
sub
pop
and
or
or
ror
mov
mov
mov
nop
add
xchg
inc
inc
mov
sub
pop
jmp
and
nop
add
push
pop
xor
addr16
shr
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
clc
add
push
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
shr
jmp
jmp
jmp
jmp
jmp
jmp
je
test
jmp
jmp
jmp
jmp
jmp
jmp
je
or
shl
and
add
sub
mov
sub
or
sub
mov
sub
xchg
jmp
mov
and
mov
and
pop
leave
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
mov
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
or
jmp
jmp
jmp
jmp
jmp
jmp
jmp
mov
add
add
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
mov
add
add
inc
mov
mov
or
mov
mov
mov
jmp
add
cmp
dec
xchg
mov
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
push
inc
jge
sub
mov
jmp
movsl
xor
jmp
mov
mov
mov
mov
jmp
call
nop
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
sub
push
pop
decl
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jne
nop
nop
nop
nop
nop
add
add
inc
or
mov
mov
nop
sub
nop
decl
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
incl
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
fidivs
jne
cmp
push
pop
jne
lea
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
out
jmp
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
je
sub
ror
rol
mov
sub
nop
nop
nop
nop
nop
nop
and
mov
jmp
mov
sbb
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jle
or
shr
mov
add
nop
add
xchg
dec
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
jmp
xor
incl
addr16
dec
xchg
mov
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
jmp
sub
xchg
jmp
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
mov
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jle
ror
jmp
jmp
jmp
jmp
jmp
jmp
jmp
xor
xchg
add
addr16
dec
jmp
jmp
jmp
jmp
jmp
jmp
nop
nop
nop
nop
nop
jne
push
xchg
pushl
xchg
call
xchg
mov
xor
mov
shr
shl
mov
mov
addr16
call
xchg
jmp
jb
pop
dec
push
pop
dec
xchg
sub
ror
or
mov
movzbl
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
shl
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
roll
xchg
lea
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
push
ret
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jne
jmp
dec
test
jns
sub
dec
xor
mov
call
xchg
cmp
addr16
jb
inc
nop
cmp
mov
jb
inc
mov
jmp
stos
daa
jb
ret
sbb
rorb
nop
nop
nop
nop
add
add
add
sub
sub
mov
call
xchg
mov
addr16
call
addr16
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jne
jmp
in
xchg
incb
testb
pop
add
add
xchg
inc
push
pop
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
bound
sbb
dec
hlt
call
ror
shr
sub
mov
shr
shr
mov
dec
and
add
sub
mov
add
rep
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jne
mov
call
addr16
push
addr16
jmp
lock
je
or
and
dec
mov
mov
or
mov
sub
push
pop
mov
nop
incl
xchg
dec
xchg
mov
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
nop
nop
nop
nop
jne
mov
nop
xor
nop
inc
xchg
jmp
clc
std
call
xchg
mov
and
inc
add
mov
mov
xchg
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
je
mov
and
inc
shr
mov
add
sub
rol
dec
mov
nop
nop
nop
nop
nop
add
nop
sub
mov
jmp
decb
jmp
inc
shr
xor
ror
dec
mov
or
xor
mov
nop
nop
nop
nop
nop
mov
mov
incl
nop
incl
xchg
jmp
jmp
shl
mov
sub
mov
mov
sub
nop
nop
nop
nop
nop
nop
shr
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
leave
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
lea
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jle
mov
mov
movzwl
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
sbb
ja
add
cmpl
xchg
je
sub
add
or
rol
sub
mov
mov
shl
pop
sub
mov
xor
add
sub
and
add
pop
jmp
sbb
sub
mov
and
mov
cmp
xchg
jmp
adc
jo
cld
xor
dec
mov
mov
sub
sub
pop
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
add
and
mov
add
nop
nop
nop
nop
nop
nop
add
nop
add
addr16
pushl
and
add
or
xor
pop
inc
xchg
inc
mov
decl
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
nop
nop
nop
nop
jne
nop
nop
nop
nop
nop
add
xchg
cmpl
mov
jne
call
xchg
mov
xchg
mov
nop
nop
nop
nop
nop
nop
mov
nop
sub
dec
mov
call
nop
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jne
or
nop
push
xchg
mov
inc
xor
sub
mov
nop
nop
nop
nop
nop
call
xchg
push
xchg
mov
push
pop
call
xchg
mov
addr16
nop
nop
nop
nop
nop
mov
and
or
mov
dec
mov
nop
nop
nop
nop
nop
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
pop
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
add
sub
and
add
add
mov
nop
nop
nop
nop
nop
jmp
and
add
add
and
mov
add
mov
push
nop
call
xchg
cmp
mov
mov
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
nop
nop
nop
nop
nop
je
nop
nop
nop
nop
nop
dec
mov
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
out
mov
ficoms
and
and
mov
sub
and
add
add
and
and
mov
mov
add
xchg
add
nop
nop
nop
nop
nop
nop
jmp
jns
movzwl
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
push
add
add
roll
shl
mov
nop
nop
nop
nop
nop
add
xchg
add
nop
push
xchg
pushl
xchg
call
mov
mov
nop
add
mov
add
addr16
inc
mov
mov
nop
nop
nop
nop
nop
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
incl
cmpl
xchg
jne
call
push
pop
mov
mov
and
mov
pushl
ror
pop
nop
nop
nop
nop
nop
add
shl
pop
add
pop
or
mov
rol
or
xor
pop
mov
nop
cmp
xchg
jne
pushl
dec
pop
nop
nop
nop
nop
nop
add
mov
mov
nop
pushl
mov
add
or
xor
pop
add
mov
leave
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
dec
mov
mov
ret
mov
mov
cmp
aas
push
inc
cwtl
jbe
mov
push
cmpsb
push
add
cwtl
stos
cmp
inc
mov
leave
pusha
out
mov
lahf
xor
sub
jl
dec
sti
sub
sub
jp
mov
inc
lods
pop
jno
mov
je
out
test
fst
jo
test
add
sbb
stc
in
pop
inc
xchg
adc
pop
int3
shrb
sub
push
daa
das
inc
aas
push
sub
sbb
push
ret
test
adc
or
mov
das
sbb
test
clc
jp
sbb
js
push
sub
jecxz
dec
mov
nop
inc
int
daa
and
adc
xor
lock
insl
mov
mov
xor
aad
sub
xor
jmp
aas
ja
int3
jle
enter
addr16
shrb
mov
bound
arpl
fsub
stos
sub
js
cmp
loope
inc
sahf
cmc
add
leave
ljmp
xchg
dec
mov
or
mov
and
xchg
xchg
jle
test
mov
mov
aas
insb
dec
sti
xor
shl
rol
add
xor
jnp
ret
jmp
add
int3
rcll
call
mov
arpl
jns
fstpt
jnp
je
dec
pop
fistps
fistpll
aad
jae
mov
aad
mov
sti
xchg
inc
push
push
test
ja
push
xlat
dec
adc
xchg
cmp
std
xchg
out
rorb
repz
xor
and
dec
decl
in
add
rorl
pusha
aas
inc
imul
adc
xchg
in
adc
xchg
add
xlat
rclb
xor
int
outsl
movsb
push
inc
pop
es
lea
aam
and
pop
leave
push
jmp
pop
xor
xchg
and
inc
jl
loop
pop
stos
aaa
ss
sbb
jecxz
dec
sbb
aad
test
inc
mov
jno
dec
jno
movnti
out
loope
ret
xor
shrl
inc
add
into
mov
adc
sub
ficompl
xor
push
jmp
mov
insb
ds
loopne
popf
sar
and
inc
and
pop
stc
in
mov
loopne
xor
sub
enter
xchg
ja
fcoms
xchg
lcall
mov
sub
ljmp
fistpl
or
in
and
or
loopne
jp
mov
stos
pop
je
xchg
or
loopne
test
xchg
fists
std
hlt
cmp
mov
repz
adc
movlps
and
dec
cmp
lret
or
jne
cmpb
lea
cld
push
in
push
sbb
or
cli
add
add
movsb
ret
xor
std
jno
scas
mov
fcmovbe
mov
cmpsb
mov
aaa
and
sub
aad
and
sti
popf
mov
push
shll
data16
jge
stos
add
adc
sbb
loop
jmp
roll
jecxz
aaa
xchg
js
es
sbb
pop
xchg
sub
std
inc
ja
mov
inc
xchg
fcomp
jmp
mov
pushf
and
cmp
insl
arpl
outsl
jmp
dec
mov
fsubrs
cmp
shrl
out
and
pushf
xchg
adc
xor
std
mov
push
addr16
pop
mov
pop
hlt
mov
and
mov
movsb
xchg
cmp
cmp
sbb
imull
lea
rcll
in
cmp
hlt
cmp
notl
std
jno
aam
xorb
fisttpll
rcrb
and
push
push
call
lret
ficompl
roll
sub
mov
aam
jbe
in
sahf
ret
sbb
xchg
fsubl
push
cwtl
push
ret
ficoml
lds
adc
dec
shl
js
dec
add
insb
push
push
js
cmp
sahf
pop
outsl
leave
shrb
test
aaa
xchg
rcll
popf
orl
popa
outsl
aas
sbb
ljmp
adc
insb
sub
adc
sar
dec
cmpl
ret
push
stos
out
pop
lret
clc
aaa
adc
nop
js
into
into
hlt
je
mov
mov
es
imul
sbb
jmp
pop
or
sub
xchg
jg
icebp
jnp
pop
jge
pusha
or
jo
cmc
mov
loope
cwtl
sbbb
sub
xchg
jne
fnstenv
in
mov
mov
pusha
addr16
add
mov
pushf
sbb
shll
xchg
mov
and
jmp
pop
pop
jg
jmp
sub
sub
pop
js
int
lods
xchg
add
sbb
js
inc
stos
movsb
sarl
mov
int3
out
xor
clc
or
cmp
pop
jge
inc
add
ljmp
test
insl
push
lock
adcb
out
adc
or
insl
pop
add
dec
loop
push
xor
lret
push
jae
mov
ret
aaa
ds
fistl
enter
fs
push
dec
shlb
mov
shlb
xor
sbb
movsl
mov
pushf
cltd
mov
cmp
xchg
mov
sub
shlb
hlt
and
les
add
xchg
xchg
or
incl
sub
bound
aad
gs
ljmp
xor
arpl
mov
pop
in
inc
xor
lds
cmp
sub
test
jmp
sub
jo
push
bound
push
loop
xchg
cltd
stos
and
cmp
xchg
ljmp
xor
mov
dec
xchg
cmp
sub
cli
mov
cmp
sub
fdivs
sahf
pop
and
lcall
js
shll
fs
insl
mov
fwait
hlt
mov
jno
popl
mov
fldenv
add
push
in
add
stc
add
rcr
mov
je
jge
mov
fidivl
sbb
push
in
add
jb
in
fisttpll
jl
xchg
xchg
sarl
pop
test
jo
pop
out
sub
jnp
notb
aaa
cmp
jle
lcall
je
std
stc
pop
in
pop
cmp
cmpsl
xor
je
mov
jg
inc
mov
rorl
enter
jge
aad
clc
dec
sbb
mov
mov
arpl
mov
dec
mov
cmp
sub
negl
pop
xchg
pop
add
inc
test
mov
add
adc
sub
lds
scas
fwait
int3
pop
add
out
sbb
scas
push
xchg
xchg
mov
adc
pop
cltd
sbb
les
lea
aas
and
divb
into
push
sub
aas
xchg
roll
dec
sar
cmc
aad
subb
aad
cmp
inc
lods
fistps
cltd
inc
fwait
in
push
jae
cmp
lret
loopne
push
fists
mov
inc
icebp
pop
add
mov
popf
xchg
divl
cmp
and
mov
fsubr
imul
es
adc
dec
sbb
jns
push
mov
js
jo
mov
test
xor
sub
cmp
int3
jnp
mov
push
cmpsb
aas
sbb
aam
adc
add
dec
jnp
call
adc
fs
xchg
jbe
addr16
mov
out
or
aad
test
int3
cmc
shlb
outsl
jle
aas
jmp
imul
xchg
sar
aam
jg
cli
add
jno
xor
mov
cmpsl
fs
roll
orb
cli
clc
loop
sbb
stos
test
push
sub
cmp
ljmp
in
cmpsb
push
sbb
or
push
fstpl
mov
leave
dec
and
push
imul
fisttps
out
push
movsl
xchg
jg
in
rcrb
scas
jnp
pop
imul
mov
cmp
je
popf
lds
into
and
rcll
int
sbb
xchg
adc
mov
push
push
push
movsb
push
js
xchg
lods
in
in
pop
add
arpl
cld
inc
push
sahf
test
mov
sbb
pop
pop
ja
inc
dec
push
inc
and
mov
mov
pop
jle
xchg
outsb
bound
add
loope
hlt
dec
fidivrs
out
push
fisubs
add
movl
insb
repz
cmp
lahf
lods
fsubrs
out
and
inc
xchg
dec
jecxz
push
repz
push
dec
cmp
mov
jle
mov
mov
pop
adc
sbb
scas
mov
ret
adc
and
aaa
mov
adc
jmp
clc
push
es
mov
add
add
jnp
shr
sub
lahf
les
mov
sbb
pop
das
inc
mov
cmp
push
fistl
btc
in
imul
gs
sbb
jmp
dec
icebp
xchg
xchg
pop
xchg
and
daa
pop
cmp
mov
jg
xchg
mov
insb
jo
imul
mov
push
dec
mov
mov
leave
lea
fwait
js
mov
mov
dec
or
cmpsb
cmp
out
pushf
clc
out
aaa
pop
mov
lcall
idivb
lea
aad
cwtl
pop
inc
incl
mov
xchg
dec
les
out
fists
cmp
add
call
or
mov
and
pop
mov
je
mov
lea
xchg
dec
rorb
pop
push
insb
bound
xchg
push
hlt
sarb
push
sub
rorb
dec
add
outsl
adc
xchg
jb
xchg
push
daa
data16
xlat
inc
nop
push
jmp
dec
in
mov
push
cmp
int
sahf
push
cmp
sbb
sbb
call
addr16
jae
mov
iret
sub
das
loope
sbb
cmp
inc
fidivrl
jp
dec
scas
dec
sbb
jbe
adc
stos
test
xchg
addr16
add
xchg
mov
or
aas
in
loop
movsl
insb
mov
scas
add
movsb
and
add
test
push
sti
xchg
insl
cmp
dec
js
mov
hlt
add
lea
or
das
pop
test
aaa
testl
fists
cmp
sti
rorl
mov
cmpsb
cltd
mov
dec
leave
lds
sbb
adc
add
lret
mov
cmp
ffree
stos
out
imul
aam
je
mov
ljmp
pusha
xor
cwtl
shll
and
cmp
addl
sub
and
dec
jbe
jne
repz
inc
pop
icebp
adc
cmpsl
sbb
pop
mov
outsb
stc
cmpl
stc
imul
xchg
fcomps
jp
xor
mov
cs
inc
pop
insb
insl
stc
sbb
arpl
pop
outsl
fs
push
mov
cmpsb
out
repnz
adc
stos
dec
add
push
in
or
or
jge
pop
add
cmp
ret
fucomip
or
cmp
cwtl
cmp
testl
cld
dec
jb
loopne
inc
pop
inc
bound
dec
outsb
sbb
mov
push
lahf
dec
adc
push
xchg
icebp
ficompl
test
xchg
and
mov
lods
push
fcoms
pop
pop
jmp
jno
xor
mov
inc
mov
dec
and
xor
outsb
jnp
ret
in
enter
gs
mov
sub
fcompl
and
bound
stos
push
jbe
pop
into
arpl
pop
mov
into
or
dec
arpl
xlat
inc
sbb
add
call
cmc
loopne
out
cld
lcall
cmc
cmp
cwtl
hlt
xor
test
push
and
sub
outsl
dec
or
pop
ds
xor
movsb
adc
pop
in
ja
sbb
mov
push
push
pop
push
out
lds
adc
or
lds
loope
inc
add
int3
sbb
stc
lea
out
or
jecxz
xlat
jl
pop
push
andl
ror
cld
insb
dec
xchg
mov
cmp
xchg
mov
pop
jae
rclb
shrl
test
shlb
leave
pop
fwait
test
jg
sti
jle
shll
push
pop
rcrb
sbb
add
in
or
fildl
mov
mov
fwait
xchg
and
and
cmp
jg
mov
add
mov
aas
push
and
sub
add
cmp
pop
xor
inc
cmp
subl
insb
sbb
subl
xor
xor
fidivl
and
and
in
adc
popf
sbb
sbb
stc
ja
sub
dec
add
ds
or
or
daa
inc
imul
fwait
stos
daa
enter
cmp
cmp
mov
mov
lcall
iret
xchg
jae
pushf
call
shr
adc
outsl
pusha
lock
mov
testb
pop
xchg
mov
in
insl
pop
push
data16
push
gs
out
jb
lea
mov
or
adc
repz
and
enter
jns
or
scas
dec
andl
xchg
jb
sbb
cltd
lcall
or
mov
test
xchg
mov
or
call
push
jge
fucomip
lret
jbe
in
sbb
cld
xchg
bound
mov
in
cmp
push
jno
xchg
stos
imul
test
and
mov
stc
andl
in
in
aad
das
xor
cld
sub
cmp
cltd
push
xor
mov
clc
or
int
shr
clc
orb
je
fldl
inc
mov
sub
nop
scas
xchg
xchg
dec
and
or
mov
or
cld
pop
jbe
popf
sbb
dec
dec
jge
addr16
mov
lea
or
outsl
out
or
xchg
mov
lods
sub
inc
mov
addr16
sbbb
rcrb
pop
jne
adc
add
int
mov
dec
mov
hlt
add
mov
das
and
ljmp
jle
cli
bound
rcll
add
cs
gs
inc
pop
xor
mov
sbb
adc
sub
jl
pop
cltd
pop
sub
dec
pop
jb
pop
push
inc
xchg
ljmp
je
cld
arpl
addl
ljmp
lcall
and
sarb
testb
mov
jmp
subl
add
and
cmp
xchg
or
push
loop
dec
sbbb
repnz
mov
lods
add
pop
and
pusha
pop
insb
jns
jnp
add
ret
dec
sub
and
sub
into
fnsave
sbb
xchg
imul
dec
js
aaa
and
pusha
adc
mov
sub
mov
mov
lods
jb
mov
imul
mov
mov
aam
adc
add
sbb
ss
jbe
mov
jecxz
ss
jne
mov
into
rolb
test
out
in
pop
adc
jecxz
push
mov
fsubrs
scas
dec
repnz
gs
adc
clc
roll
xchg
cltd
xorb
ljmp
or
int
scas
mov
push
mov
out
mov
out
mov
testb
aas
adc
dec
fildl
jecxz
imul
pop
mov
mov
and
push
push
or
aad
mov
xchg
lret
aad
imul
out
mov
dec
adc
jb
sub
pop
hlt
in
xor
js
adc
inc
lods
lock
iret
sbb
xchg
xchg
xorl
fdivrs
xlat
dec
adc
jg
out
test
imul
out
ja
pop
xchg
mov
jmp
movsb
push
out
popf
test
mov
adc
in
push
mov
out
mov
mov
jo
xchg
adc
sti
mov
inc
pop
stc
mov
idiv
je
dec
test
sbb
rorb
shl
cwtl
pop
fldl
in
xchg
pop
clc
pop
xor
js
xchg
sbb
les
or
pop
xlat
sbb
push
cmpsl
rorb
repz
cmp
xor
aaa
and
sub
mov
bound
stc
lcall
add
cmp
jl
mov
lods
popa
xchg
xor
ljmp
inc
xchg
adc
dec
xor
pop
mov
loop
dec
sbb
add
out
cltd
inc
and
rcrl
and
in
lds
jmp
fwait
mov
neg
test
ljmp
hlt
sub
sub
shll
adc
sbb
mov
sub
mov
jmp
mov
int3
inc
inc
push
inc
hlt
xor
jl
sbb
mov
mov
cmp
sti
jnp
iret
stc
mov
add
lock
cld
andb
sbb
shl
rorl
popa
incl
inc
das
xor
and
lea
outsl
mov
cltd
out
xchg
jge
leave
fnstenv
rorb
aas
add
rolb
sub
out
mov
outsl
aad
push
dec
add
push
jmp
jne
loop
mov
mov
outsb
adc
dec
inc
sbb
loop
mov
push
mov
dec
or
arpl
in
test
or
jo
mov
xchg
filds
ss
and
aas
sbb
popf
cmp
and
inc
pop
or
cmp
fistps
or
mov
dec
dec
push
loop
adc
fcoml
js
adc
push
faddl
xorb
mov
mov
les
push
in
sub
dec
jno
lds
not
pop
insb
inc
aaa
sbb
sahf
lcall
js
sub
inc
add
test
daa
popf
ret
aaa
out
xchg
inc
popf
shll
mov
out
stc
sbb
fcomip
push
jmp
xchg
lea
flds
out
fsub
movnti
hlt
pushf
mov
push
jb
pop
cli
xor
dec
jne
popl
adc
sbb
push
ss
out
jo
nop
aaa
lahf
and
and
imul
jecxz
cmp
das
jo
push
dec
fistpl
sub
mov
xchg
stc
loope
jecxz
or
cmpsl
xlat
jne
outsb
push
mov
dec
pop
mov
dec
jl
cmp
mov
mov
sub
xlat
push
add
rcl
and
stc
lds
mov
cmp
addl
aas
and
scas
and
js
ds
xor
dec
int
in
mov
sub
out
mov
in
mov
out
scas
mov
icebp
jecxz
cltd
das
jecxz
or
cmp
xor
loopne
jle
xchg
pushf
xchg
rolb
fldenv
dec
push
stc
lds
xlat
sbb
and
clc
push
arpl
pop
mov
jecxz
imul
xor
leave
test
mov
push
xchg
mov
icebp
sbb
mov
je
dec
popf
mov
pop
jl
shlb
inc
dec
fmuls
push
ljmp
sbb
inc
xlat
lods
lods
or
push
cwtl
jae
dec
sub
aad
xchg
imul
pop
cmp
cmp
ja
push
enter
jns
or
test
shlb
mov
mov
ret
aam
cmp
sub
int3
sbbb
rolb
dec
jge
pusha
dec
mov
pusha
test
pop
xchg
mov
mov
add
lret
in
and
nop
pop
lods
or
out
in
test
dec
xchg
mov
fldenv
leave
lcall
jmp
pop
mov
xchg
je
enter
inc
ss
adc
pop
dec
scas
adc
pop
push
mov
mov
xchg
orl
iret
push
pop
mov
icebp
cmpsl
cmp
out
inc
cwtl
int3
mov
ja
xchg
adcl
fwait
test
adc
stos
ds
sar
push
dec
imulb
ja
and
jp
jnp
fistpl
sub
rcrb
push
jo
push
and
inc
jno
shll
rcrl
orb
cmpsl
mov
add
outsb
mov
call
inc
aam
add
add
outsl
xor
mov
es
aam
scas
in
or
mov
icebp
mov
inc
push
out
sbb
or
mov
loope
insl
std
fdivrl
jb
pop
add
mov
add
mov
mov
enter
mov
test
lock
je
clc
or
xchg
sbb
cwtl
push
add
jbe
inc
in
pop
add
aad
inc
jb
push
out
das
inc
or
dec
jne
add
pop
jae
iret
notl
inc
out
mov
je
pop
cs
ficoml
xchg
sbb
mov
repnz
movsl
sub
iret
cli
fdivr
int3
cwtl
sub
stc
mov
push
int3
mov
aas
xor
jbe
lret
lods
lahf
mull
jmp
pop
and
pushf
mov
cmpsb
sub
packsswb
mov
and
lret
sub
sub
aaa
scas
imulb
outsb
int
jp
or
jp
pop
stos
sub
aas
xchg
fcmovnb
jl
mov
inc
pop
mov
jno
mov
stos
mov
and
and
data16
push
and
add
out
mov
adc
dec
push
cli
mov
cs
fisubs
stc
add
pop
push
jno
out
xor
dec
sarb
sbb
fcmovb
jmp
jp
mov
xor
jp
cltd
js
and
inc
add
mov
and
push
dec
jne
ret
in
jo
insb
jmp
sub
jg
push
aam
loop
adc
bound
andl
imul
test
and
cmpsb
adc
aas
outsl
ret
push
sarb
sbbb
mov
adc
addl
push
cmpsw
cmp
pop
mov
mov
or
iret
pop
sub
sub
lock
jo
test
mov
sahf
mov
mov
inc
ret
call
xchg
jno
mov
sti
sub
aas
cltd
push
mov
fwait
data16
mov
data16
cmp
inc
insb
ds
pop
lret
add
push
push
xor
jg
repnz
iret
push
mov
dec
mov
mov
pop
ja
test
jmp
imul
cmp
sbb
mov
and
scas
and
xchg
fbld
pop
dec
lds
cmp
fstpt
insl
aaa
fwait
mov
xchg
mov
data16
inc
xchg
es
aad
mov
mov
mov
mov
int
fsubl
jl
dec
push
pop
lods
in
sub
sbb
push
aaa
lods
add
gs
lods
xor
pop
cld
push
cmp
iret
add
test
mov
aaa
mov
aaa
mov
add
in
mov
sahf
jnp
call
shll
sub
mov
scas
pop
fistps
imul
fisttpl
sub
mov
lsl
pop
mov
sbb
xchg
inc
fstps
outsl
lock
aam
enter
imul
out
test
xorb
mov
sbb
hlt
rorb
xchg
dec
movsb
inc
int3
cmp
cmp
cmc
jb
adc
mov
inc
push
mov
rcr
sbb
mov
ja
cmp
sarb
cmpsb
pop
mov
mov
push
push
mov
loope
shrb
mov
popf
out
pop
mov
pusha
cmp
shlb
lea
xchg
sbb
mov
call
pop
test
leave
je
andb
in
sub
sbb
push
mov
lcall
xor
stos
xchg
in
mov
pop
ljmp
pop
pop
adc
or
fcom
dec
and
lret
mov
sbb
lock
ror
mov
repz
movsb
dec
lock
cmp
pop
hlt
dec
inc
pop
jns
adc
out
repz
mov
negl
mov
lods
inc
mov
pop
sbb
fiaddl
mov
cmp
aaa
push
adcl
xor
pop
adc
bound
jno
xor
fdivr
lods
leave
int
cs
pop
cmp
es
in
inc
inc
cli
in
xlat
mov
lret
daa
sbb
sbb
xchg
or
mov
dec
mov
mov
mov
test
nop
out
ja
push
dec
mov
loope
push
stc
xorl
fs
or
or
rolb
pusha
add
push
outsb
mov
movsl
cmpsb
fcoms
cltd
adc
in
dec
jmp
jo
out
adc
scas
xorl
mov
cltd
aaa
adc
cmp
stos
pop
rorb
cmp
push
cli
add
arpl
adc
movb
std
adc
cmp
jns
or
mov
je
rol
decl
test
push
cmc
mov
out
int
movsb
pop
jecxz
into
mov
ret
fisubl
leave
add
cmp
test
pop
add
jmp
mov
and
rorb
loop
mov
jno
jo
sbb
sbb
push
push
and
inc
insl
jne
dec
sar
jns
scas
jp
add
mov
push
hlt
push
mov
mov
ja
dec
mov
lcall
in
jne
add
sub
incb
adc
add
in
loopne
out
repz
nop
dec
ror
sahf
inc
imul
xchg
loopne
cmp
or
inc
cmp
adc
push
dec
or
test
xchg
shrb
add
cltd
sbb
pop
mov
xlat
push
mov
adc
cmpsb
popf
loop
vpsubusb
adc
sbb
jmp
jnp
in
mov
pop
enter
je
add
daa
cli
in
bound
pop
mov
cmpl
addl
adc
jg
orb
sbb
mov
sub
and
jae
clc
mov
mov
and
inc
or
pop
pop
cli
xlat
and
test
sbb
sub
jmp
cmpsb
sahf
out
dec
and
popa
out
insb
cs
xchg
enter
sbb
cwtl
divl
imul
push
dec
jnp
fimull
fnstsw
fmuls
mov
std
add
sub
hlt
rcrb
sbb
inc
out
dec
shll
je
movsb
mov
xchg
xlat
sti
mov
adc
sbb
test
int
fwait
lods
loopne
adc
inc
fmul
inc
mov
movsb
insb
mov
xchg
push
jae
into
rcll
addr16
fidivs
mov
or
in
pop
je
scas
shll
out
sbb
mov
in
cld
ljmp
or
fsubl
cmc
fldl
dec
jb
add
lods
sbb
loope
xchg
punpckldq
cwtl
xchg
lret
push
ljmp
xor
add
ja
jnp
xchg
outsb
mov
mov
mov
mov
push
jg
mov
inc
jae
cltd
gs
xor
dec
add
jns
mov
and
sbb
pop
jbe
inc
mov
mov
mov
shl
and
xchg
test
push
sarl
pusha
fwait
push
notl
pop
adc
jae
xor
xchg
leave
xchg
xor
xlat
pushf
fcmovu
in
clc
in
es
mov
or
ljmp
iret
inc
pop
out
sti
iret
mov
out
add
std
sbb
andl
add
lret
cwtl
and
xor
roll
adc
add
test
ficompl
fisubrl
fsubrl
repz
daa
test
cld
lret
inc
push
fdiv
into
push
and
out
lret
mov
pop
xchg
ja
sbb
stc
nop
cltd
dec
hlt
pop
push
cltd
psrlq
test
lea
push
pop
inc
fs
pop
xlat
xchg
mov
cltd
push
jmp
mov
cmpsb
in
ficoms
mov
ljmp
mov
or
idiv
add
cmpsb
jnp
loop
and
sbb
push
cltd
icebp
idiv
mov
rcl
popl
pop
imul
cmp
inc
dec
ss
popa
stc
pop
sbb
xchg
sub
or
pushf
fnstenv
in
sbb
negl
movsb
test
cmp
insl
mov
fdiv
cmp
je
sahf
stos
out
in
pop
and
mov
dec
xor
xchg
xchg
inc
xchg
ret
jo
adc
outsl
jle
xorps
cmc
fldenv
out
fsts
into
cs
mov
adc
cld
xor
out
mov
lret
cmp
int
stos
xor
jno
es
orb
push
sbb
jp
and
imul
insb
add
insl
fs
xor
cs
insb
add
jb
gs
xor
cs
insb
add
inc
js
inc
dec
inc
inc
jne
outsl
cmp
bound
push
jle
js
inc
sub
jb
insb
aaa
xor
pop
and
push
dec
jnp
out
xlat
rcl
xlat
rcl
adc
mov
div
daa
.byte
pushf
.byte
