jne
dec
add
add
insb
add
add
je
add
add
jb
popa
add
add
outsb
add
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
popa
add
add
outsb
add
add
je
imul
push
add
je
insb
add
add
dec
add
je
push
add
popa
add
imul
add
add
add
jne
je
je
outsl
add
inc
add
add
jb
outsb
add
je
add
popa
add
add
add
outsb
add
outsl
add
imul
outsl
add
add
add
dec
add
data16
push
add
js
je
add
add
inc
add
je
je
outsl
add
dec
add
add
je
add
inc
add
je
je
outsl
add
inc
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
dec
add
insb
add
add
je
add
dec
add
popa
add
je
imul
push
add
je
insb
add
push
add
js
je
add
inc
add
je
je
outsl
add
push
add
js
je
add
add
inc
add
popa
add
push
add
js
je
add
add
inc
add
je
je
outsl
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
inc
add
arpl
add
add
add
imul
add
je
push
add
js
je
add
dec
add
insb
add
add
je
add
inc
add
jo
push
add
jb
imul
add
popa
add
add
add
add
outsb
add
arpl
je
imul
jg
sti
int
dec
leave
cmp
xchg
mov
ja
lsl
or
add
pop
push
push
or
add
add
add
add
add
add
inc
add
add
add
add
push
add
add
add
add
add
add
fs
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
nop
add
add
add
add
mov
bound
dec
add
add
add
add
add
add
add
add
add
cmp
add
add
add
mov
nop
add
add
add
cmp
mov
mov
add
add
add
add
add
add
cmp
sbb
add
add
add
add
cmp
push
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
or
mov
jo
or
les
cmp
out
add
lods
add
add
add
add
add
add
add
add
add
add
add
clc
add
push
add
add
xchg
add
add
add
add
add
add
ltr
das
add
add
add
add
add
add
add
or
add
add
pushf
add
add
add
add
add
add
add
add
add
add
add
add
add
jae
lods
add
or
sbb
add
add
nop
add
cmp
add
add
add
add
add
in
add
sub
and
jge
push
add
add
add
add
lods
add
add
add
popl
or
cmp
mov
outsl
add
mov
add
add
add
add
add
add
xchg
add
add
add
add
add
cmp
or
faddl
lods
add
sub
inc
add
jmp
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
sahf
add
insl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
and
push
add
add
js
lods
add
add
cmp
adc
or
fadds
lods
add
add
add
add
add
cmp
test
faddl
inc
add
add
add
mov
cmp
scas
add
add
add
add
add
add
add
test
cmp
rolb
add
add
add
test
jmp
add
add
add
add
add
and
add
add
add
add
add
test
jns
incb
ljmp
or
les
jle
jbe
out
cmp
nop
add
sldt
add
pop
add
add
add
test
nop
add
add
add
or
mov
jp
add
cmp
fucomp
dec
push
nop
sub
add
mov
sbb
dec
jg
cwtl
dec
push
arpl
pop
daa
inc
mov
ret
jg
cli
jne
rcl
outsl
cmp
sahf
es
sbb
in
imul
jnp
popa
mov
xchg
xchg
add
popf
jae
cli
pop
inc
out
add
jb
in
mov
or
mov
aas
in
sub
cltd
filds
cltd
cmc
xor
cmp
adcb
rcrl
adc
dec
aam
mov
ljmp
data16
fadds
dec
xchg
inc
push
scas
sub
icebp
lret
les
test
icebp
or
out
lea
notb
sub
subb
adc
arpl
mov
popf
or
mov
mov
aaa
dec
xchg
clc
sbb
mov
xor
sahf
xchg
jne
jbe
cmp
ss
lods
bound
insb
rcrl
add
lea
das
mov
push
push
or
pop
cmp
aas
outsl
and
mov
jg
pop
xchg
out
loop
jnp
mov
movsl
add
mov
push
add
cs
ret
dec
outsb
ljmp
imul
dec
jo
lret
sbb
ljmp
add
xor
lret
jg
mov
sti
or
lret
int
and
rol
mov
fbstp
jmp
jns
addr16
insb
or
mov
xchg
les
pop
stos
push
mov
jg
fistpl
add
cmpsl
cmp
rcll
xchg
inc
jl
push
add
xchg
sti
add
and
fcoms
movsb
pushf
out
push
add
imul
fdivs
fwait
jecxz
mov
mov
pop
cmc
add
into
xor
inc
outsl
test
call
pop
cmp
mov
pushw
shrb
out
adc
inc
pop
inc
pop
push
es
xor
lea
hlt
mov
aaa
dec
mov
inc
imul
int3
test
xchg
jge
inc
outsl
movsl
dec
mov
and
inc
test
pop
push
xor
inc
fisubs
rcrb
mov
sbb
inc
mov
dec
cmp
add
mov
fdivrs
pop
mov
pop
xor
dec
sub
sbb
shrb
xor
add
je
shlb
cltd
cmp
jmp
xchg
jl
jecxz
popf
xchg
lahf
in
ljmp
int3
cli
jnp
mov
or
outsb
call
popa
push
fwait
or
movl
mov
and
out
rolb
add
add
add
add
rolb
add
add
push
mov
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
push
call
mov
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
pushl
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
and
outsb
lods
pop
pushf
dec
mov
mov
ds
popa
int3
mov
sbb
or
jl
insb
sahf
pop
mov
outsb
lods
outsb
pushf
dec
mov
cld
cs
push
fmull
mov
cmp
sub
sbb
or
adc
dec
addr16
push
mov
cld
aaa
in
push
fcompl
int3
cmp
lss
insl
xchg
sub
cmp
xor
aas
push
iret
outsb
in
hlt
and
push
testl
aad
je
cmp
xchg
xlat
adcl
pop
rcrb
cld
shrl
aam
aaa
dec
adc
and
ret
push
jb
add
pop
testb
das
push
cltd
cld
push
mov
inc
imul
hlt
scas
stc
jle
mov
pop
cmp
divb
xchg
ficomps
std
xchg
ficoms
dec
sahf
enter
int3
cmp
outsb
je
gs
mov
in
test
pusha
lret
jecxz
or
scas
insb
adc
sahf
cmp
adc
and
aam
mov
sub
iret
sbb
mov
pop
mov
pushf
pop
mov
cld
xor
push
fcoml
int3
out
imulb
sbb
or
jl
insb
sahf
pop
xchg
and
cmp
test
arpl
lods
jns
js
aas
lret
and
outsb
leave
cmp
dec
mov
inc
mov
cld
ja
push
fwait
dec
mov
insl
out
or
in
out
dec
jmp
push
fmull
int3
cmp
sub
sbb
or
jl
insb
sahf
pop
mov
outsb
lods
pop
pushf
dec
mov
cld
cs
push
fmull
int3
cmp
sub
sbb
or
jl
insb
sahf
pop
mov
lods
les
jno
dec
adc
and
pop
jg
fnstcw
push
aas
cmp
jp
xor
push
add
in
jo
push
roll
push
cmc
sub
push
xchg
inc
mov
mov
mov
data16
sahf
xchg
inc
or
and
fldl
sub
push
adc
pop
mov
add
sub
sbb
push
mov
loop
or
or
imul
sbb
cmp
inc
push
testb
sbb
mov
imull
and
mov
push
pcmpeqb
inc
inc
outsb
popa
hlt
add
mov
mov
push
mov
call
imul
dec
scas
in
pop
sub
cmp
repz
inc
add
mov
jmp
loope
xchg
aad
or
movsb
sub
push
pop
mulb
cmp
pop
pop
int
hlt
les
sbb
xchg
stc
mov
inc
test
adc
xor
push
shll
sbb
repnz
jns
ror
lret
jae
sub
aad
fisubs
nop
jnp
inc
adc
mov
jg
jl
xchg
add
jb
inc
sub
sub
pop
cmp
and
jge
xchg
in
data16
mov
adc
subl
jle
mov
leave
dec
adc
dec
mov
lods
cmp
popa
fcompl
cld
ret
fs
pop
jo
mul
lret
mov
in
xchg
push
mov
xor
or
imul
rcl
movsb
test
dec
outsb
or
xorl
int
sbb
popa
sub
out
and
out
mov
sbb
push
add
hlt
pop
fcomps
imull
xchg
aam
push
movsl
int3
mov
xchg
xlat
pop
xor
xchg
lock
mov
sub
lods
inc
push
xchg
outsb
insb
sub
out
loopne
mov
xchg
lcall
ror
jnp
pop
adc
push
loopne
iret
or
push
jp
sbb
lods
dec
cmp
int3
xchg
std
jbe
xor
out
addr16
jnp
or
mov
jmp
xor
pop
rcrb
repz
xor
jns
or
dec
add
cmp
cmc
shr
cltd
lock
ds
xchg
je
add
aaa
cmp
ljmp
fmull
mov
push
sahf
cltd
nop
js
into
mov
mov
mov
add
inc
mov
enter
sub
enter
pop
jbe
push
xor
xor
outsb
dec
sbb
mov
bound
add
dec
mov
mov
call
in
jecxz
xchg
xor
int3
sbb
mov
cmp
xchg
mov
cmp
pop
and
xchg
outsb
or
xchg
mov
mov
add
addr16
jle
dec
int3
lahf
cmc
add
cld
scas
cmp
fmuls
fsub
cli
cmc
or
jl
add
cmp
sbb
shl
gs
push
sbb
test
int3
jne
repz
rorl
jns
inc
stos
dec
andb
or
out
jle
cmpsb
test
mov
xchg
pop
stos
jbe
mov
lds
in
pop
or
dec
addr16
arpl
out
mov
push
fisttps
addr16
or
push
cmp
shlw
test
aam
adc
lret
xchg
movsl
lods
and
das
sahf
movsb
and
pop
lret
inc
cmpsb
loope
push
pop
and
and
xor
and
pmaxsw
cmpl
dec
and
push
out
inc
sub
pop
push
and
mov
cmpl
push
pop
add
ds
pop
out
pop
iret
icebp
test
push
jb
stos
sub
lock
int3
and
add
xor
hlt
shlb
xchg
mov
das
mov
lcall
test
lods
fsubrl
push
je
dec
ss
cmp
dec
sub
push
popf
into
and
fisttps
pop
cmpsb
xor
arpl
push
iret
add
mov
xchg
push
movb
pusha
mov
cwtl
lcall
clc
sbb
pop
insl
out
mov
push
cli
mov
ret
out
lea
inc
fstpt
arpl
mov
jmp
inc
dec
out
icebp
mov
xor
pop
mov
mov
repz
inc
sub
dec
mov
sahf
pop
roll
inc
cs
sub
adc
sub
hlt
jge
inc
cmpb
push
mov
nop
sub
loop
mov
outsb
loop
leave
xor
jb
fldl
xor
ss
out
jns
xchg
stos
jbe
jbe
popa
jl
adc
arpl
daa
imul
sbb
mov
dec
stos
pop
xor
cmpsb
enter
aaa
cmpl
xchg
notb
shlb
sbb
fwait
xor
push
xor
lcall
mov
pop
dec
and
jg
adc
scas
lds
xor
insb
enter
loopne
lock
nop
pushf
dec
sarl
aad
ja
cmp
aas
mov
jge
outsl
push
mov
pop
inc
xchg
leave
incl
repnz
inc
sub
mov
pop
lea
mov
ficomps
xchg
cmp
pop
push
out
aad
sub
jp
shlb
sub
xor
xlat
push
test
out
les
shrb
nop
mov
cs
cld
xor
jge
mov
mov
lea
sbb
inc
iret
out
imul
push
pop
mov
daa
cwtl
pop
jg
shl
mov
xor
sbb
dec
mov
dec
pop
jle
adc
lret
xor
lea
in
mov
icebp
adc
nop
adc
xchg
jmp
jle
andl
dec
push
in
jecxz
mov
popf
popa
cmp
adc
dec
das
and
mov
stc
vmovlpd
mov
sti
jmp
sbb
mov
scas
inc
sbb
clc
dec
lods
cld
imul
inc
sahf
cwtl
in
cmp
pop
jns
filds
mov
jno
js
adc
outsl
dec
add
imul
push
xchg
jno
xchg
lods
out
cs
int
and
shrl
mov
fisttps
pop
pusha
xchg
add
ss
pop
push
hlt
sti
jo
sbb
mov
lods
jle
pop
imul
mov
mov
roll
mov
movsb
and
xor
inc
daa
and
loop
gs
pop
js
jle
jb
shrl
mov
pop
cmp
sti
movsl
xor
push
xchg
fstpl
xorb
sbb
xor
push
popa
cmp
cmp
sub
add
mov
push
push
fimull
mov
mov
inc
pop
imul
cmpsl
std
jbe
scas
push
pop
int
jle
or
jns
adc
aaa
ficoms
ret
test
popa
aam
and
jge
sbb
or
jl
push
test
lret
jp
outsb
or
inc
stc
jp
add
lahf
adc
shll
inc
adc
pop
or
and
push
stc
loope
pop
push
aam
std
divps
rolb
rcrb
xchg
jno
es
jbe
and
fsubl
or
rcr
xorb
or
outsb
ror
push
pop
jnp
mov
push
aas
int
mov
outsl
ljmp
test
es
push
std
mov
mov
sbb
lahf
push
out
xlat
mov
add
cmpsb
add
js
or
mov
and
cwtl
lds
shrl
cwtl
jmp
mov
gs
inc
add
test
pushf
aad
shlb
xor
push
xorb
xchg
push
jnp
lret
lret
mov
xor
cmpsb
and
push
fwait
pop
sub
mov
pop
lds
ret
addl
nop
xchg
test
mov
ss
jns
out
inc
bound
mov
cltd
cmp
xorl
push
ret
jb
nop
insl
imul
lcall
add
jb
sbb
addr16
decl
sbb
test
jp
and
lods
sub
lret
test
xor
xor
test
insb
add
insl
fsts
cmp
lods
fs
loopne
inc
hlt
adc
and
sbb
or
rcll
in
dec
mov
mov
cmp
cmp
clc
jle
in
popa
daa
pop
rolb
push
xchg
add
icebp
dec
sar
and
mov
jg
sub
and
cwtl
lcall
test
mov
flds
dec
xor
ret
repnz
ret
jge
je
sbb
mov
jg
jmp
mov
adc
out
inc
jo
jns
scas
int
sub
stos
stc
mov
shlb
inc
divl
int
cli
adcl
or
add
adc
sbb
sub
stos
daa
pop
jo
push
inc
js
jmp
dec
inc
test
mov
pop
int3
pop
xchg
fs
inc
fistpll
sub
mov
cmp
pop
in
jnp
ficomps
imul
lds
ret
adc
push
pop
aad
xor
xchg
sub
mov
pop
sbb
push
or
test
inc
and
mov
xor
mov
mov
fiaddl
or
pop
jmpw
pusha
enter
test
fisubl
in
xor
push
mov
push
mov
lods
mov
ret
lret
sub
fisttps
mov
in
jae
add
shlb
push
lock
and
jg
add
lods
jge
test
mov
mov
xor
je
xchg
into
mov
lds
or
vunpcklps
mov
sub
les
stos
sub
xchg
or
or
cmc
nop
pop
das
xchg
les
orb
fisttps
std
mov
xor
and
xor
popf
inc
mov
pop
add
inc
cltd
or
inc
push
in
out
jns
es
enter
je,pn
arpl
pop
jmp
fisttpll
inc
js
inc
add
int
sbbl
add
in
jbe
pop
test
fbld
mov
dec
divl
cmp
movsl
stos
mov
test
sub
aaa
daa
repz
jmp
in
push
xchg
aaa
testl
add
cwtl
mov
jle
das
cltd
test
test
pop
mov
sub
stos
stos
or
pop
insb
jl
pop
mov
cli
sti
outsb
notl
jge
in
loopne
rorb
sub
and
in
negl
xchg
pop
sub
push
hlt
add
mov
loope
push
adc
sbb
shrb
lea
inc
das
aam
jmp
xor
enter
into
sbb
in
popa
jae
mov
cs
jmp
in
or
xchg
lret
or
xor
lods
push
cld
aam
shlb
dec
add
cmc
loopne
pop
rcll
xchg
das
mov
jmp
shlb
out
inc
add
loope
out
mov
movsl
mov
fwait
rcll
bound
push
jmp
pop
push
push
fists
adc
push
dec
pop
int3
xor
out
hlt
and
pop
je
pop
data16
mov
shrb
jecxz
outsl
cmpsl
cmpb
ret
push
pushf
xchg
pushf
inc
adc
jmp
cwtl
and
popa
insb
jnp
xchg
sahf
and
add
mov
jge
rcrl
in
lret
xchg
lret
out
or
jno
imul
jecxz
test
nop
cmpl
je
jmp
xor
mov
cli
pop
loopne
out
lcall
movsl
add
mov
xor
icebp
call
rcrb
push
sbb
mov
xor
push
jno
adc
ss
aaa
lahf
pop
pop
sahf
mov
sub
insl
jno
bound
fstpl
sub
leave
xchg
insb
adc
cltd
adc
xchg
cmp
aaa
ret
and
test
or
sbbl
mov
pop
xor
fwait
ret
mov
mov
mov
sub
pop
dec
js
cmp
xor
stc
and
and
add
pop
cld
fsubp
cwtl
ds
sbb
mov
clc
loop
inc
fistpll
lahf
mov
aam
cmp
cmp
rorb
sbb
and
lock
int
cmp
xor
mov
pop
mov
and
sub
cmpsb
ret
jo
mov
call
cmp
shlb
sub
je
daa
fildll
not
outsl
loopne
mov
std
aas
or
xchg
fwait
dec
push
int
aaa
jcxz
sahf
inc
mov
or
push
pop
subl
inc
movsl
mov
subl
lea
pop
mov
mov
iret
bound
adc
fadd
inc
sbbb
loope
dec
add
mov
rcrb
jae
add
lods
add
adc
iret
lcall
popa
out
negb
pop
out
mov
fidivl
inc
addr16
imulb
lods
and
cmpsl
out
fsubrl
ret
push
dec
xlat
arpl
push
imul
arpl
xchg
mov
ljmp
nop
push
jnp
clc
sub
call
adc
in
mov
sub
adc
ja
lcall
mov
clc
jmp
push
test
or
jmp
xchg
push
rolb
add
cltd
shrb
je
inc
sarb
fstps
out
imul
lods
lret
jno
adc
cmp
pushf
fmull
mov
sub
mov
addr16
test
add
in
shll
mov
mov
lds
rcr
adc
in
daa
shl
inc
lds
mov
loop
cmpsb
cmp
lods
mov
mov
repnz
and
hlt
add
jno
cmpl
and
hlt
out
cmpsl
shl
mov
ja
xchg
cmp
faddl
lret
push
sti
and
pushf
push
aas
test
jp
lods
imul
daa
scas
arpl
dec
cmpsb
mov
imul
push
lahf
pop
cltd
push
imul
dec
enter
mov
faddl
push
in
add
je
orl
pop
aas
hlt
push
xchg
test
cltd
outsl
out
inc
in
movups
pop
decl
mov
hlt
xchg
mov
aam
ret
xor
or
ret
test
mov
shr
pop
xchg
mov
movsb
mov
and
test
bound
int3
int3
push
xchg
call
inc
ljmp
pop
lcall
push
sub
imul
mov
and
and
push
dec
call
imul
cmp
cmp
aas
jne
shrl
insb
loopne
scas
xchg
jo
inc
jne
fdivrs
jle
jns
adc
call
push
int3
testb
ds
adc
xor
jae
push
arpl
pop
lahf
int3
cmpsl
jg
pop
mov
std
xor
mov
sub
or
jno
push
inc
lahf
push
ljmp
js
aad
xchg
push
ret
int
mov
hlt
sahf
insl
adc
rcrl
push
imul
jb
or
pop
gs
sbb
push
imul
cli
out
cmp
insl
sub
push
or
cmp
and
imul
add
inc
fcomip
lods
push
push
arpl
test
popf
mov
adc
cmp
test
mov
fsubrs
cmp
sbb
pop
and
lods
push
testb
arpl
repz
xchg
cli
test
xchg
pop
ror
mov
jge
jmp
cmp
fs
and
pop
pop
sbb
and
jb
cltd
fiadds
jg
adc
icebp
or
lods
push
pop
lea
rorl
enter
fnclex
xor
test
jl
scas
shl
cmpsl
fwait
inc
xchg
lock
loop
push
cmp
sbb
push
out
subps
psadbw
dec
js
mov
repz
jns
jecxz
nop
mov
dec
lahf
adc
test
fnsave
fidivrl
mov
out
push
push
clc
ljmp
repnz
cmp
pop
sub
std
push
lock
inc
xor
sbb
add
icebp
ret
mov
jns
adc
je
push
push
push
rcl
inc
sti
mov
push
stos
test
adc
subl
xchg
or
ds
nop
loopne
lret
add
stos
hlt
add
insb
lods
idivl
shrl
and
shrd
addb
xchg
pusha
push
jl
jle
fcmovb
test
add
pop
push
out
hlt
sub
and
insb
dec
scas
int3
shll
mov
xchg
ljmp
fs
push
jmp
adc
pop
inc
push
and
shll
dec
jne
je
gs
mov
add
movsl
daa
cmp
lret
shll
jno
mov
sub
and
icebp
mov
mov
xchg
rol
imul
insl
aad
sub
mov
mov
out
mov
dec
rcl
jb
imul
jg
jg
lea
ficoms
push
fistpl
ret
mov
subb
out
mov
mov
xor
call
mov
inc
into
mov
es
ds
jns
ret
gs
ret
push
loop
sub
movb
xor
je
hlt
lock
add
sahf
cmp
xchg
jmp
in
incb
add
into
ret
dec
add
xchg
add
jp
out
jl
aad
cld
or
jns
nop
jg
or
imul
sbb
dec
xchg
nop
scas
mov
aad
dec
repnz
js
dec
xor
add
sub
pusha
xchg
outsl
imul
dec
jge
fstps
gs
pusha
cmp
sub
scas
xchg
sbb
cmovnp
push
and
push
mov
fwait
orb
dec
add
adc
rcll
cltd
inc
ljmp
dec
sbb
hlt
in
add
add
cmp
add
frstor
fisubl
sub
mov
jns
inc
push
jecxz
adc
cmp
imul
inc
pop
loope
fistpll
jne
das
sub
sub
ss
hlt
xchg
mov
mov
fwait
test
cmp
or
andl
aas
test
dec
cmp
and
lret
inc
mov
rcl
ficompl
adc
cmp
shl
loop
mov
push
and
movsb
in
pop
inc
fldl
cli
inc
mov
adcb
or
pop
add
nop
push
add
adc
xor
rclb
inc
int
cld
xor
mov
clc
fldt
mov
in
jl
in
shll
sahf
inc
sar
add
jge
iret
jns
mov
pop
inc
aas
push
hlt
out
ret
sbb
in
mov
cmp
or
sub
dec
lods
ds
mov
adc
mov
sub
inc
ret
add
or
sahf
sbb
dec
decl
insl
mov
cmp
aas
lods
arpl
loope
add
insb
cmp
hlt
push
iret
mov
and
push
mov
ror
inc
inc
mov
push
mov
fcoms
xor
cs
mov
xlat
nop
nop
adc
xchg
fldt
hlt
fucom
inc
cmc
mov
cmpsl
dec
scas
pop
mov
stos
adc
icebp
push
xchg
cmp
adc
sub
fcompl
pop
pop
test
pop
xor
or
dec
inc
mov
xchg
mov
adc
enter
jns
fwait
push
pop
xchg
sub
and
shlb
mov
aad
inc
negb
rolb
nop
xor
fisubrl
ficoml
aam
sub
inc
add
mov
sbb
in
mov
sbb
out
dec
dec
ljmp
xchg
jmp
pop
movsb
push
jge
pop
sub
mov
push
js
out
mov
adcb
pop
dec
flds
mov
sbb
int3
lods
mov
adc
mov
sbb
push
adc
outsl
clc
sbb
je
das
ret
cmp
das
mov
add
test
pop
ret
test
sbb
loopne
insb
roll
inc
push
and
sub
inc
dec
xorl
enter
lcall
push
call
loop
fsubrl
gs
stos
fidivrs
mov
bnd
push
fisubs
sbbb
inc
sti
xor
cmc
add
mov
lahf
pushl
lcall
cmpsl
cmp
fstps
adc
jp
ja
loope
mov
inc
sti
popf
leave
mov
lret
sbb
or
pop
cmp
sbb
ss
jmp
outsb
out
fimull
mov
mov
fcomps
js
dec
mov
cld
cs
push
fmull
int3
cmp
sub
sbb
or
jl
insb
sahf
pop
mov
outsb
lods
pop
pushf
dec
mov
cld
cs
push
fmull
int3
cmp
sub
sbb
or
jl
insb
sahf
pop
mov
outsb
lods
pop
pushf
dec
mov
cld
cs
push
fmull
int3
cmp
sub
sbb
or
jl
insb
sahf
pop
mov
lods
push
cld
cs
sahf
fmull
xchg
jnp
hlt
es
popa
mov
call
dec
mov
fadds
in
or
push
enter
stos
sbb
call
dec
mov
sbb
ljmp
sub
lcall
fadds
push
mov
add
shrb
scas
lretw
dec
les
data16
cs
repz
popa
nop
ficomps
pushf
mov
cmp
jae
push
sub
mov
aam
nop
jle
mov
add
lret
aas
cmp
movl
add
mov
out
jg
sub
stos
mov
mov
pop
dec
jp
sbb
cmc
js
js
aad
outsb
xor
sbb
or
pop
inc
pushf
mov
sbb
or
xchg
ljmp
sub
clc
lcall
lahf
pop
sub
and
xchg
sti
add
mov
jmp
pusha
lcall
enter
test
cwtl
add
repnz
ret
dec
sarl
mov
or
mov
pop
lods
dec
aam
loope
std
jbe
cmp
cmp
inc
stc
pop
lcall
mov
lods
dec
decb
sbb
subl
scas
or
lds
or
xchg
cmp
mov
sbb
ljmp
sub
clc
jp
push
pop
enter
test
cwtl
sbb
ljmp
sub
clc
jp
in
arpl
pop
bound
xor
stos
inc
cmc
add
sub
pop
mov
es
mov
add
jg
movl
or
xor
je
pop
sub
xlat
push
andb
fimull
pushf
add
add
xor
stos
jl
cmp
push
cld
xchg
popa
jl
adc
push
cmpsb
fdivp
fstp
mov
imul
and
push
addl
inc
or
push
adc
sbb
jo
pusha
lods
xchg
and
addr16
push
cmp
popf
or
dec
cmpsl
dec
add
pop
mov
and
rcrb
arpl
insb
pop
stos
and
leave
in
push
imul
push
rcll
int3
std
push
mov
mov
xorl
mov
mov
loop
sub
shrb
inc
mov
mov
push
cld
or
push
scas
add
sti
pop
sub
out
sbb
push
push
push
push
mov
sbb
cmc
inc
test
aaa
fwait
inc
cmpsl
sub
mov
clc
hlt
pop
add
insl
lock
cmc
jns
pop
insb
pop
fisubl
or
sbb
jmp
lahf
and
imul
pusha
into
adc
pcmpgtw
test
outsl
mov
jno
add
or
jae
push
add
leave
mov
enter
jl
adc
xor
xorb
fistpl
ret
sbb
pop
xor
popa
xor
cwtl
push
jae
loop
push
mov
xor
jmp
cmp
pop
xchg
out
movsl
xchg
inc
sbb
jnp
xor
inc
cwtl
test
cli
jno
xchg
iret
xlat
sti
lds
xchg
std
mov
jp
loope
xchg
notl
into
fldt
loop
pop
jno
pop
mov
mov
bound
jno
es
mov
lret
push
inc
cmp
dec
mov
jp
aad
cmpsb
es
adc
pusha
cmp
rolb
inc
ret
cltd
rcrb
jp
inc
popa
sub
stos
cmpsb
push
out
pop
icebp
jo
addr16
mov
sbb
jl
ds
in
and
pop
sbb
loope
je
xor
pop
cmpsl
mov
dec
out
dec
or
add
sub
mov
jge
clc
lds
cmpl
shrb
aaa
inc
inc
push
mov
cmpl
shll
ja
movsb
jns
or
leave
and
push
std
mov
fucomi
cmpsl
sub
xor
sbb
pushf
jno
sbb
rorb
inc
ret
xchg
dec
and
je
push
out
or
xor
fsub
jle
rcrb
cmc
arpl
rcl
fs
xor
rcrb
cmc
mov
or
popf
mov
sub
sub
jg
dec
in
add
jno
dec
mov
and
or
inc
xchg
mov
sub
mov
add
inc
pop
mov
mov
dec
mov
sbb
cld
sti
andl
xchg
testl
adc
in
adc
lret
test
jne
mov
inc
or
stc
in
mov
sub
fisubrs
loope
cmp
cmpsl
pop
mov
push
lods
ss
repnz
clc
xchg
push
adc
push
inc
in
andb
out
push
mov
dec
inc
mov
mov
loop
pop
mov
dec
bound
and
insl
insb
pop
shlb
cmp
push
push
aas
ret
jae
rcrl
jne
lahf
ja
cmp
fistpl
push
cld
adc
lcall
cmpsb
loop
call
mov
add
mov
repz
push
pop
push
sub
jecxz
add
test
adc
jo
ljmp
pusha
fcmovu
cmpsl
xchg
sarb
pop
pop
pop
sbbb
sbb
add
cmp
lods
or
xchg
jne
fisttps
sub
push
loopne
cmp
stc
dec
adc
mov
ficoms
aad
push
jo
int3
je
push
jp
xchg
ja
pushf
xchg
push
add
jle
pop
dec
arpl
pop
sti
stc
mov
cltd
call
mov
cmp
lret
dec
ljmp
add
push
mov
fistpll
rcll
cmp
repz
mov
dec
imul
jg
mov
xor
filds
xor
push
fiadds
aam
and
dec
xchg
adc
lea
rolb
je
stos
mov
mov
and
scas
es
shrb
out
or
insb
test
push
std
mov
cmpsb
cmp
stos
movsl
popa
out
daa
daa
xchg
mov
add
jbe
ret
je
sbb
outsb
ds
jne
daa
aas
pop
cmp
mull
inc
adc
pop
into
nop
or
mov
cmp
mov
dec
repz
rol
jbe
lea
js
cmp
cld
cli
in
lods
scas
mov
sbb
sub
sbb
repz
sbb
les
scas
fistl
loop
adc
mov
mov
jmp
lahf
mov
jmp
mov
mov
add
lret
ficompl
xchg
pop
out
lock
ss
mov
das
dec
das
jmp
fnstcw
loope
in
loopne
hlt
std
push
or
rcpps
xor
xor
hlt
call
xor
pusha
popa
loop
mov
mov
in
xor
jg
fwait
pop
jmp
mov
or
mov
lods
push
pop
pusha
fsts
aaa
sti
clc
xor
pop
xchg
jo
div
imul
lret
imul
xchg
outsl
testl
imul
sti
jmp
ja
push
ret
outsl
int
add
scas
jg
push
test
add
cli
call
cmpsb
ljmp
fnstenv
andl
sbb
push
inc
push
pop
jne
dec
and
push
in
push
mov
pop
and
shlb
xchg
repnz
cmp
xor
insb
push
out
pop
adc
adc
cmp
sbb
insl
dec
mov
repz
mov
xchg
or
outsl
mov
mov
push
or
push
push
push
out
adc
out
add
xchg
loopne
outsl
xor
sub
dec
sub
xchg
or
inc
mov
sub
adc
and
jmp
xorl
cli
cmp
lret
sub
dec
mov
fldcw
daa
pop
push
out
mov
sbb
not
push
jnp
and
insl
gs
idiv
mov
nop
sbb
lahf
cmp
xchg
mov
imul
push
push
inc
mov
adc
push
cmp
pushf
xchg
dec
call
sub
dec
test
adc
dec
mov
push
arpl
sbb
xchg
cmp
dec
jl
push
inc
adcl
push
imul
xchg
mov
les
imul
dec
and
jne
sbbb
shlb
mov
test
movsb
shrb
mov
jbe
fists
aas
sahf
or
js
sbb
sbb
aam
fwait
cs
push
shlb
mov
sub
dec
mov
sbb
leave
addb
pop
stc
mov
or
enter
jae
out
push
mov
sub
push
xchg
jo
pushf
and
sbb
das
fcomip
into
and
or
and
and
inc
out
faddp
jp
jmp
mov
outsb
pop
pop
gs
in
jp
cmp
fldl
fistpll
lret
aam
rcl
jnp
movsl
push
mov
in
outsl
cmpsl
out
or
int3
fildl
test
xor
les
imul
gs
into
jne
and
cs
inc
rorb
cmpsl
lock
xor
adc
dec
scas
add
xor
inc
loopne
pop
or
xlat
dec
js
imul
arpl
iret
nop
jae
xor
sbb
dec
fcmove
push
les
sahf
and
add
fwait
andl
xorps
mov
dec
fisubl
fimuls
insl
cld
mov
and
pop
push
mov
xchg
das
push
push
push
sbb
xlat
dec
mov
cmpsb
mov
pop
jne
insb
lahf
jmp
adc
fsubl
push
repz
scas
loop
pop
sub
aaa
fcmovnbe
mov
aam
cli
cmp
jbe
xchg
out
fsub
aaa
loope
jge
and
adc
inc
mov
insb
push
repz
ret
mov
xor
push
add
out
jmp
int3
fiadds
gs
movsl
mov
or
pop
lret
out
scas
fs
jmp
mov
cmc
in
jno
dec
lods
dec
sub
in
dec
mov
adc
mov
dec
jle
test
mov
xchg
push
cmp
jnp
mov
mov
jecxz
leave
lcall
cmpsb
pop
pop
sbb
add
aas
mov
or
cmp
jne
enter
inc
xor
push
push
or
filds
outsl
push
lock
sub
push
in
test
arpl
in
loop
hlt
cmp
pusha
sbb
jecxz
cmpsl
mov
cmc
ja
les
out
std
shlb
sti
lods
pop
neg
fnstsw
adc
push
out
cld
mov
ret
inc
hlt
adc
les
das
and
jmp
cmp
cmp
jo
sub
mov
mov
lea
imul
mov
mov
fstp
leave
mov
pop
ja
mov
lahf
xor
push
lods
sub
mov
sub
add
xchg
inc
dec
inc
js
lahf
icebp
mov
outsb
aam
lea
insl
mov
mov
cltd
fiaddl
insl
jmp
bound
cmp
out
jb
fwait
jecxz
popa
into
rorb
call
ds
popa
pop
sub
mov
pop
adc
idivb
movsb
xor
sahf
test
outsl
jg,pn
pusha
pop
cmpsl
xor
push
pop
or
add
sub
lods
pushl
push
adc
lret
lahf
jge
lock
cwtl
nop
adc
inc
scas
insb
lret
push
push
mov
add
push
lahf
cmc
mov
add
aam
lock
inc
jo
sbb
add
mov
test
pop
inc
sub
stos
ror
mov
mov
fisttpl
test
sbb
dec
and
and
fucompp
gs
cmp
cli
pop
std
cmp
getsec
int
addr16
addr16
icebp
aad
jl
mov
popf
repnz
ret
sbb
push
jnp
jno
adc
leave
aad
mov
data16
je
int
mov
mull
mov
xor
xchg
xchg
and
and
xchg
jno
pop
cld
mov
je
int
in
xchg
and
mov
mov
inc
push
and
mov
lret
cmp
and
adc
jge
filds
or
xchg
aaa
or
pop
cmp
std
jmp
fs
mov
mov
inc
out
mov
or
mov
inc
pop
mov
jnp
mov
xchg
pop
repnz
imul
in
repz
loop
lret
gs
adc
mov
outsb
ljmp
imul
or
dec
test
mov
call
fdiv
pop
out
subl
dec
fsubrl
movsl
lret
sbb
mov
and
push
xchg
push
add
orl
sub
fsincos
cmp
sbb
inc
aas
sbb
cs
jb
lock
subb
fisttps
shlb
out
sub
and
lods
in
cmc
jns
imul
cmp
fcmove
or
xchg
insl
inc
pop
ja
mov
cmpsb
push
pop
inc
sbb
fistpl
jmp
lahf
jae
sub
push
out
sahf
pop
jo
cmpb
lret
xor
daa
enter
adc
les
pushf
mov
jns
test
std
push
aas
fmull
lea
lret
push
and
xlat
and
lods
lret
fcomip
aas
ret
dec
or
xlat
jae
xlat
fidivl
aas
pop
and
pop
inc
insb
mov
sub
add
and
stc
fnstsw
cmp
jno
jge
rcrl
dec
dec
ret
in
jae
or
data16
inc
pop
xor
pop
loope
mov
nop
mov
into
pop
pop
and
push
push
pop
mov
jecxz
int3
arpl
inc
popl
in
pushf
ja
mov
xor
cmp
std
mov
divl
mov
push
iret
fsubrp
mov
xchg
pop
hlt
in
aam
aaa
rcrb
cmp
arpl
test
pop
xchg
mov
mov
mov
jns
sbb
cmpsl
add
lods
daa
cmp
sbb
xlat
scas
je
insl
dec
mov
sub
xor
push
xor
inc
pop
xchg
mov
and
cmp
clc
pop
xor
sbbl
fdivl
insb
adc
fmul
ja
stos
test
mov
pop
push
sub
xchg
gs
jno
stos
jmp
or
fs
adc
pusha
arpl
and
lods
in
push
call
sub
or
out
add
push
stos
push
insb
adc
sti
or
cmp
inc
sar
ss
xor
js
test
hlt
adc
xor
or
fcmovb
jb
ror
leave
mov
mov
mov
inc
and
and
jb
jnp
gs
stc
sub
loopne
dec
movl
jb
pop
les
mov
nop
push
sbb
xchg
les
mov
jbe
das
cld
sbb
pusha
icebp
dec
mov
ss
lret
adc
mov
cli
test
jecxz
and
jg
cltd
jp
pop
jb
jno
mov
out
movsl
fisttps
pop
inc
scas
mov
dec
pop
addr16
sbb
mov
mov
sbb
dec
and
jmp
mov
fxch
cld
inc
dec
sahf
pop
dec
push
dec
out
add
addr16
xchg
mov
inc
imul
in
xchg
fiadds
and
mov
mov
ffree
std
inc
test
arpl
push
xchg
lret
pop
in
dec
in
jbe
imul
mov
pop
add
dec
xor
xchg
adc
xchg
jg
mov
inc
pop
mov
mov
mov
adc
dec
mov
inc
loop
lret
or
push
out
mov
clc
dec
test
pop
pushf
inc
mov
cmp
xchg
pop
mov
adcl
and
scas
mov
mov
ds
pop
lods
cs
and
ja
lea
fnstsw
int3
push
cmpsl
push
xor
popa
loopne
daa
bound
dec
mov
outsb
jmp
arpl
mov
mov
cmpsb
outsl
stc
sahf
shrl
out
xchg
jg
mov
pop
lret
and
insl
rolb
aad
call
sbb
adc
dec
insb
stc
icebp
negl
sbb
lahf
rcl
movb
mov
jmp
sbbl
cmp
xorb
sbbb
test
mov
pusha
mov
or
adc
push
fs
lahf
inc
push
lock
insb
pusha
dec
ficomps
fstpl
dec
push
lock
xorl
xchg
xchg
push
and
into
dec
xchg
lds
xor
aas
dec
subb
imul
arpl
mov
sub
or
and
call
and
sub
cmp
fiaddl
insb
pop
in
pop
mov
fldcw
cmp
push
jle
and
mov
sbb
mov
mov
xlat
loopne
fdivrs
sbb
xchg
sbb
jno
sbb
push
fbld
es
sbb
inc
mov
lahf
push
pop
std
scas
sbb
data16
mov
push
mov
push
xchg
jle
aas
mov
inc
jmp
aaa
test
insb
ss
add
pop
lea
xor
xor
mov
xor
cltd
out
in
dec
push
jg
notl
adc
push
adc
mov
sbb
nop
dec
data16
imul
hlt
xor
sbbl
push
popa
outsb
sub
push
xor
stos
aam
mov
mov
or
fnsave
dec
mov
inc
fidivs
lods
jo
mov
or
call
dec
jnp
or
push
push
xor
orl
stos
test
cs
sub
sub
xchg
dec
pop
fstl
outsl
push
inc
cmp
xchg
jp
jne
mov
cltd
je
insl
inc
rorb
pop
into
push
cli
sarl
sbb
xor
or
push
insl
jl
call
xchg
insl
mov
dec
lret
js
add
xor
xchg
divb
pop
inc
mov
iret
mov
aam
loope
fldcw
fidivs
mov
in
outsl
mov
mov
and
fdivrl
xchg
xor
mov
or
adc
add
and
ret
inc
dec
inc
or
mov
imul
push
stc
aas
and
shlb
call
xor
sbb
test
sub
add
adc
xor
add
decl
in
fwait
ds
pop
sti
mov
jmp
loop
sahf
lods
mov
or
mov
lahf
fmuls
sbb
fcmovb
jne
and
pop
pushl
push
clc
stos
es
lahf
lahf
repnz
mov
xor
mov
lahf
test
jg
sbb
mov
shl
mov
xchg
dec
hlt
insb
subl
cwtl
insl
sub
stc
push
pop
leave
jae
cltd
jae
orb
imul
and
mov
insb
push
shl
push
adc
add
xchg
mov
cmp
mov
pandn
mul
mov
loope
xor
add
into
icebp
jg
inc
inc
les
mov
xor
clc
push
dec
test
or
inc
sub
sti
and
fucomp
sarb
roll
into
lods
fcomi
out
dec
icebp
push
inc
imul
lods
pop
incl
mov
ret
insl
adc
xor
repnz
xor
add
outsb
xchg
jns
jo
sbb
jnp
aas
movsl
jbe
fs
mov
int
enter
out
sub
aad
movsl
xlat
mov
pop
and
sahf
xor
in
add
daa
mov
std
push
pop
sti
loope
mov
or
imul
in
push
loope
adc
xchg
push
popf
cs
xchg
mov
cmpsl
push
xchg
imul
sub
faddl
dec
repz
pop
aaa
cld
stos
jnp
jb
in
les
and
add
dec
lods
push
imul
sarb
icebp
sub
xchg
icebp
cmp
enter
mov
cmc
jne
jle
jmp
mov
push
mov
cmpsl
inc
and
adc
cwtl
xor
jns
cld
xchg
pop
movb
aam
das
pop
out
ss
fnop
adc
jmp
mov
in
mov
jg
enter
arpl
push
gs
jb
in
shlb
add
dec
imul
xchg
fsts
xchg
or
aas
sbb
add
push
lret
push
out
fadds
adc
jo
jbe
or
in
clc
loope
sub
jmp
jmp
loopne
or
pop
sti
cmp
test
cmpsb
or
into
mov
outsb
aaa
mov
outsb
mov
adc
adc
mov
pop
mov
add
sbb
cmp
les
loopne
or
nop
das
jae
out
sahf
mov
dec
and
mov
or
pop
xchg
outsb
fsubrl
push
xchg
aad
pop
fstl
mov
cmp
jb
test
pop
jnp
jmp
lea
jnp
sarl
xchg
or
and
lret
dec
xor
arpl
xlat
jns
push
inc
pop
repz
mov
sgdtl
sbb
notl
mov
mov
ror
in
cwtl
cmpb
fwait
pop
out
xchg
imul
in
imul
bound
mov
xor
ss
out
ds
dec
enter
sarb
aaa
mov
gs
cmpl
jmp
mov
xchg
or
inc
cmp
or
lock
dec
pop
and
iret
push
sbbb
xor
xchg
mov
jecxz
xor
mov
mov
js
dec
and
jge
pop
mov
scas
repnz
add
sub
push
testl
insl
je
jnp
push
movsl
cmp
gs
lods
sbb
ljmp
in
mov
mov
xor
push
jne
cld
cs
push
popf
push
push
mov
mov
and
xlat
jo
lahf
add
mov
jo
ja
cmp
call
jecxz
xchg
in
pop
xlat
add
dec
xchg
adc
aas
flds
xchg
jnp
jno
outsl
outsl
ret
and
negl
push
push
mov
dec
mov
sbb
ljmp
sub
clc
jp
push
pop
enter
test
cwtl
sbb
ljmp
sub
clc
jp
push
pop
enter
test
cwtl
sbb
ljmp
sub
clc
jp
push
pop
enter
test
cwtl
sbb
inc
repnz
dec
xor
jne
mov
sub
mov
andl
andl
andl
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
mov
lea
push
movl
movb
movl
movb
movl
movb
movb
movl
call
leave
ret
mov
push
push
fsubl
jae
push
lds
jo
xor
insb
rcrl
repz
or
hlt
inc
in
push
fsubl
jae
add
sub
insb
shll
dec
repz
dec
xchg
sbb
or
es
insb
push
pop
arpl
jae
add
adc
std
add
sbb
jo
imul
mov
inc
int3
daa
cwtl
pop
mov
rcrb
fildll
push
jecxz
movsb
out
imul
dec
mov
mov
sti
push
in
mov
or
clc
jle
mov
jecxz
repnz
mov
cld
test
xchg
dec
pop
xor
fstpl
cmp
xchg
sub
ret
andl
mov
bound
add
lock
dec
sbb
cs
or
xchg
jns
adc
inc
add
in
fcomp
les
xchg
mov
dec
sub
dec
mov
in
stos
and
push
xor
push
adc
call
xchg
ret
dec
repz
mov
mov
inc
in
push
fsubl
jae
add
adc
roll
xor
mov
lcall
insb
fsts
inc
in
inc
sbb
lea
ljmp
sbb
data16
lock
pushl
inc
xchg
lahf
dec
in
dec
cld
imul
fbld
lods
pop
lea
stc
outsl
lods
adc
insb
rcrl
repz
sub
sbb
or
cld
inc
in
push
fsubl
jae
add
jl
insb
rcrl
repz
sub
sbb
or
cld
inc
sub
xchg
xchg
mov
mov
lcall
pusha
mov
sub
push
and
and
xor
out
adc
xor
stc
in
fcmovnb
adc
jge
popa
push
test
xchg
adc
jle
push
push
test
es
dec
scas
mov
fs
push
xchg
stos
mov
xor
daa
pop
dec
fdivrs
mov
or
test
push
and
shrl
dec
fs
xor
test
es
cmpl
push
cmp
stc
out
stos
mov
cmp
adc
or
push
aas
mov
stc
test
fists
dec
sub
xchg
ljmp
inc
pop
pop
xlat
and
out
aad
pop
iret
imul
cmc
arpl
and
imulb
inc
jo
sub
pop
jmp
shlb
mov
cld
movsb
stc
xchg
jnp
mov
sub
jbe
in
js
cwtl
add
mov
xor
add
mov
aas
pop
cmpsl
push
sbb
mov
aad
sbb
dec
mov
ds
push
rcrb
pop
mov
test
pop
and
pop
aad
lock
enter
pop
dec
push
lea
cmp
insw
int
mov
jmp
cmp
jne
add
fcompl
push
adc
and
and
mov
into
in
fiaddl
stc
push
fcoms
xor
push
xor
add
xchg
jg
fs
mov
push
stos
cmp
jmp
add
sti
movsb
add
mov
out
push
cld
lret
add
test
or
cmpsl
out
aad
insl
ficoml
pop
repnz
faddl
aaa
adc
dec
lea
xchg
dec
xchg
into
fcoml
push
mov
out
lea
test
cmc
shrl
arpl
and
sub
or
rcl
imul
xchg
pop
inc
sbb
popf
popa
mov
shrb
mov
xor
stos
sbb
loopne
sbb
sbb
xchg
stos
and
and
and
mov
repnz
js
cli
js
iret
popa
imul
pop
mov
cwtl
or
xor
mov
call
sub
sbb
push
cmp
ret
dec
sub
leave
mov
addr16
pusha
add
mov
jbe
pop
fistpll
fcom
leave
adc
adc
jo
dec
insb
aam
pop
cwtl
xlat
pmullw
mov
push
sti
pop
les
int3
fistpl
lahf
iret
inc
mov
add
mov
stos
fcomps
mov
inc
sub
add
mov
and
movsl
fwait
stos
push
and
test
test
mov
stos
xor
int
mov
mov
jl
and
and
mov
mov
mull
movsl
pushf
mov
in
pop
mov
into
xor
ja
insb
and
dec
lock
push
pop
scas
shlb
mov
push
jle
aam
mov
pusha
dec
adc
add
rclb
ret
stos
jae
or
sub
mov
test
mov
adc
iret
or
dec
fsubrs
loopne
mov
push
pushf
fldt
mov
repz
xor
outsl
outsl
test
pop
ret
or
lock
fwait
jb
fucomip
repz
jne
mov
pop
jne
test
xor
loope
fmull
adc
adcl
enter
or
inc
and
dec
rcrl
and
andl
stos
nop
cmp
xor
jp
mov
loope
xchg
xlat
adc
or
ljmp
outsl
sub
iret
or
scas
pop
test
inc
ror
hlt
cmc
fists
movsl
mov
ljmp
ret
ret
mov
add
sbb
in
scas
inc
add
cmp
jmp
subb
aaa
pop
shl
pop
mov
cmp
pop
dec
popf
fisttps
loopne
mov
jl
jbe
cld
lods
pop
jg
and
pop
sbb
adc
jo
ret
xchg
jbe
out
sbb
das
mov
mov
add
push
jb
or
testl
adc
inc
sub
add
dec
sub
mov
fwait
test
add
sbb
inc
inc
sub
out
push
pop
cltd
mov
cmpsb
pusha
addl
add
jbe
int
js
scas
lods
scas
jle
add
pop
pop
ja
mov
rcr
add
jge
xor
loopne
cs
push
add
lods
rolb
mov
adc
ds
aad
dec
test
jne
jmp
aam
sti
sub
stos
and
jge
mov
sub
mov
mov
pop
arpl
push
add
dec
enter
fistps
test
shlb
lds
in
jle
and
push
dec
fcompl
push
lods
dec
arpl
push
test
jnp
lret
or
lret
ds
inc
push
dec
inc
insb
orb
xor
ret
out
fisubrl
lods
jb
jbe
xor
dec
aas
popa
shll
test
cmpsl
or
movsl
inc
shlb
xlat
cli
mov
push
or
popf
out
rorl
sub
mov
sub
adc
mov
cmpsb
or
std
inc
repz
in
and
mulb
nop
inc
lds
push
aaa
dec
fcmovnbe
cmp
pop
push
push
je
test
sbb
dec
bnd
negl
jne
inc
jbe
lea
sbb
insl
lret
xor
lahf
jecxz
lcall
pop
jns
push
cli
mov
aad
rcrl
dec
fdivrl
in
stos
inc
jecxz
dec
out
push
iret
in
fcomip
adc
mov
mov
push
push
xchg
push
mov
mov
adc
ds
in
in
aas
fmull
jns
loopne
rclb
int3
and
in
push
mov
test
adc
mov
jb
fisubrl
stos
sub
sub
xchg
xor
sub
mov
pop
mov
adc
xchg
imul
aam
or
pop
std
mov
mov
shlb
call
lret
ja
adc
fdivrl
cmp
jnp
and
jb
sbb
orl
pop
jae
mov
or
lods
jge
sub
and
cli
lods
pop
push
jl
xchg
pop
add
pop
imull
stc
cmpl
jne
dec
sub
xor
imul
out
cld
xlat
cli
mov
leave
clc
or
pop
movlps
cmp
shr
std
xor
dec
jmp
ja
or
inc
jle
movl
bound
add
daa
add
mov
sti
xor
cwtl
cmp
pop
sarb
jae
in
or
mov
mov
xchg
pop
sbb
daa
pop
lock
cld
mov
or
push
cmc
popa
push
xor
mov
xor
out
cltd
lods
add
testb
roll
addb
pop
fsubrs
push
test
push
cmp
push
mov
adc
stos
xlat
push
fdivr
repz
mov
pop
mov
std
in
out
mov
out
mov
data16
jo
rcr
mov
lods
ret
hlt
lea
das
lret
pusha
lods
cmpl
mov
sbb
pop
push
inc
or
ja
inc
mov
jg
cs
cmp
test
and
push
jns
cltd
outsl
sub
xor
xchg
push
cld
subb
or
jecxz
cmc
inc
push
cli
xlat
mov
psrad
daa
and
mov
dec
repnz
cmp
mov
mov
sub
pop
xchg
or
das
pop
std
add
jae
mov
dec
je
push
outsl
or
inc
imul
rcl
cmp
repz
pushf
daa
mov
jge
loope
fcom
ret
dec
sub
shll
push
aam
xchg
push
xchg
mov
or
mov
xor
ds
int3
jne
pop
cmp
sbb
push
aam
sbb
aas
inc
bound
xchg
inc
cltd
stos
std
inc
loop
adc
pusha
add
mov
fs
xchg
es
inc
out
out
insl
or
sbb
lods
inc
mov
arpl
fs
xchg
inc
pushf
test
fcmovb
dec
call
fcmovu
pushf
mov
stos
sbb
test
mov
push
popf
lock
and
fisubrl
mov
out
test
cmp
jbe
pop
push
es
sbb
idiv
mov
xor
and
adc
mov
jge
mov
adc
jmp
outsb
push
lea
shll
sbb
aam
adc
mov
outsl
das
pushf
push
movsl
sti
pop
xchg
and
sar
mov
sahf
push
pop
xchg
in
sbb
mov
rol
xchg
cmpsb
sub
nop
call
cmpsb
jge
sbb
xchg
test
fldenv
push
enter
and
sahf
push
xchg
sub
fwait
loopne
das
push
cli
add
pusha
push
and
nop
in
ss
stos
pop
mov
push
mov
add
jl
pop
push
arpl
daa
iret
xor
shll
adc
out
cmp
push
dec
out
aas
add
push
enter
fsubrl
mov
and
insl
call
or
lret
inc
in
fisttpll
hlt
nop
rcll
pop
push
nop
je
adc
ljmp
mov
jo
sub
push
cmc
rcrb
cli
mov
dec
dec
cmc
hlt
push
test
jg
push
mov
aas
rcr
lods
jg
test
cmpsb
scas
adc
dec
inc
bound
cmpsl
ret
xchg
add
and
jae
out
xor
push
jb
je
mov
xor
stos
and
popa
ret
sub
dec
cmp
movsl
adc
stc
add
stos
push
in
ss
mov
outsb
out
cmp
call
pusha
das
push
ret
das
fs
mov
repz
dec
stos
mov
xchg
imul
mov
inc
call
sar
lret
mov
stc
popf
outsb
cmp
add
fs
or
mov
push
inc
mov
xor
inc
out
hlt
cwtl
mov
pushf
out
scas
cmp
add
inc
or
imul
xor
adc
out
test
mov
dec
xchg
mov
cs
push
push
xor
jl
call
pop
jp
aaa
jo
imul
mov
sbb
pop
insb
leave
pushf
inc
push
flds
sbb
xchg
ret
sub
stos
pop
inc
cmp
jb
mov
or
loop
and
and
add
dec
lods
sub
xchg
adc
sbb
dec
std
aam
jnp
mov
jo
rclb
mov
inc
mov
in
pop
xchg
dec
shlb
mov
adc
lock
and
mov
push
inc
and
aas
out
imul
dec
sbb
pop
pop
stc
dec
cli
sbb
xorb
gs
xchg
ret
mov
out
repz
mov
push
stos
push
leave
sbb
push
mov
mov
mov
push
ljmp
mov
jecxz
pop
mov
mov
mov
fs
mov
and
dec
movsb
mov
jmp
push
jo
call
test
hlt
push
test
leave
repz
test
mov
push
adc
push
test
imul
push
mov
add
roll
fiaddl
dec
mov
jno
push
dec
adc
mov
icebp
xor
data16
fs
mov
xchg
movsl
pop
mov
mov
inc
jecxz
jns
lods
adc
lret
inc
add
test
mov
gs
and
xor
xchg
sbb
jl
add
sbb
in
lods
add
mov
lret
push
cmp
movsl
mov
out
and
push
and
gs
mov
ljmp
mov
lahf
out
idivl
bnd
scas
mov
outsb
dec
jnp
mov
outsl
stos
repz
andb
dec
pop
js
rorl
or
push
mov
pop
cmp
loope
pop
cmpsl
and
and
cltd
xchg
mov
pop
push
push
pop
divb
add
hlt
pop
iret
add
xchg
pop
sub
test
arpl
je
cmpsb
inc
shlb
adc
mov
js
dec
sub
mull
ss
pop
out
xor
cs
je
imul
loopne
in
jbe
scas
in
mov
aad
fimull
pop
cwtl
dec
push
ret
loope
cmp
or
test
pusha
enter
dec
icebp
xor
inc
pop
test
push
adc
mov
sbb
mov
inc
cli
or
jae
lret
aam
xchg
mov
jb
pop
jns
dec
and
xchg
mov
test
or
pop
pop
addb
adc
ret
adc
outsl
lods
shrl
adc
test
and
int3
xchg
setp
mov
push
xchg
mov
frstor
mov
stos
rclb
in
mov
add
jecxz
mov
mov
sarl
jmp
cmp
pusha
dec
add
dec
sub
jp
cs
outsl
inc
dec
push
stos
pop
mov
nop
js,pn
mov
fldcw
cmp
idiv
adc
cli
es
out
sbb
mov
inc
mov
push
mov
push
sub
js
or
sti
lea
sarb
pop
in
mov
lock
mov
out
sbb
inc
xchg
nop
push
dec
out
fstp
inc
dec
pusha
add
das
lods
ljmp
adc
push
sbb
ret
jle
dec
inc
xchg
je
xor
adc
mov
sbb
xor
fmuls
mov
lock
xlat
xchg
repnz
dec
stos
movsl
jne
movsb
js
lock
dec
xchg
pop
jl
lret
add
dec
xor
sub
ret
and
cld
cmp
outsb
and
stc
leave
sbb
mov
dec
or
jp
mov
jb
je
dec
cld
lahf
mov
xchg
ret
cli
mov
add
adc
mov
cs
add
fsub
jo
xrelease
inc
jp
xchg
jle
adc
mov
push
out
mov
inc
jae
cmp
fdiv
lcall
jno
dec
outsl
sbb
gs
divb
mov
in
fs
or
add
push
rcrb
or
into
outsb
and
add
xchg
sub
jae
cli
out
cld
inc
les
iret
mov
stos
inc
xor
fs
aad
cmp
fnstcw
inc
add
rorl
sti
push
xchg
js
cmc
movsl
mov
ljmp
into
sbb
cmp
adc
stos
and
cmp
subb
jo
mov
mov
add
push
push
arpl
xor
fsubs
jno
jb
xorl
add
loop
ret
cmp
pop
sbb
sbb
test
scas
xchg
adcb
js
or
or
fildl
push
into
ja
mov
dec
jp
push
pop
sbb
loope
xor
adc
push
mov
dec
or
or
clc
mov
ljmp
dec
sub
fnstenv
sbb
movsl
cmpsb
shlb
sub
mov
adc
inc
in
loopne
adc
iret
lret
out
mov
mov
movsl
popa
sarb
lcall
icebp
mov
test
mulb
inc
insb
push
push
mov
inc
jle
cmp
push
jae
dec
testl
inc
test
xchg
mov
mov
xchg
pop
into
ss
cmp
sbbl
cld
add
jns
loopne
mov
dec
fiadds
inc
mov
pop
xor
mov
jp
sbb
les
push
or
movsb
add
dec
out
mov
out
jb
push
mov
pop
mov
sti
mov
and
imul
cmp
mov
test
mov
xchg
and
push
mov
and
mov
and
inc
sbb
jp
lea
leave
jb
insl
push
or
fisttpl
fisttpl
dec
lods
xor
cli
jg
dec
shlb
pop
push
pop
and
push
push
fldl
mov
movsb
mov
jb
fcmovb
ret
jge
iret
subb
lahf
mov
jb
movsb
je
push
sbb
or
and
rcl
cltd
adc
inc
inc
jb
test
add
sub
adc
pop
pusha
int
dec
shl
insb
mov
push
cwtl
push
mov
xlat
mov
pop
lcall
int
sbb
sub
mov
jae
aad
inc
mov
fldl
jmp
mov
mov
push
pushf
jo
or
aaa
insb
addr16
jle
mov
int3
adc
jp
dec
push
sbb
cmpsb
mov
adc
movsl
mov
aad
dec
js
mov
mov
loop
shr
push
dec
daa
mov
cld
mov
js
mov
jmp
adc
pop
adcb
push
mov
std
and
stos
shl
mov
and
in
xchg
pop
mov
or
cwtl
daa
test
std
jnp
or
pop
out
add
jl
sub
rcl
cmp
push
int3
pop
mov
or
scas
scas
xchg
cltd
or
dec
jbe
out
jecxz
mov
scas
imul
test
movsl
add
lahf
lods
jge
adc
int
enter
dec
fsubl
push
cmp
dec
nop
and
fsubrs
aaa
pop
push
mov
jmp
out
movsl
mov
cs
dec
xor
out
repz
int
subb
adc
ljmp
and
loopne
in
leave
testb
addr16
adc
outsb
shll
movsb
or
loopne
popa
add
xchg
addr16
sarl
cltd
fs
fimull
cmp
mov
jmp
scas
popf
dec
rcll
xlat
test
push
lea
stos
fcom
es
sar
aas
mov
jae
jo
mov
insb
cld
ss
lods
add
mov
aad
sbb
push
push
loopne
sub
movsb
dec
mov
mov
inc
sbb
push
adc
in
mov
adc
mov
fidivs
sti
cmp
or
sbb
adc
test
push
bnd
cmp
or
cmp
xchg
sbb
mov
mov
xor
adc
cmp
gs
je
jge
mov
rcr
fwait
pop
not
push
std
movsl
pmulhuw
sbb
pop
popa
cltd
addr16
pushf
aas
mov
push
and
call
rcr
push
ljmp
or
adc
xchg
fidivl
jnp
ds
std
and
lock
dec
test
xacquire
jno
mov
or
mov
inc
mov
lea
pop
scas
xor
push
lock
bound
fsubl
dec
mov
mov
fdivp
add
jbe
adc
pop
ljmp
clc
shll
imul
and
add
int3
dec
inc
ret
cmc
sub
imul
jle
out
icebp
fadd
dec
hlt
xchg
sub
xor
out
push
das
iret
pop
sub
sbb
add
cmp
xchg
mov
cmp
jae
sbb
pop
shrl
sub
cld
pop
movsb
fisubrs
cld
mov
and
outsl
fisttpl
out
pop
fstl
pop
xchg
lcall
inc
movsb
push
cwtl
mov
pop
jnp
dec
sub
int
gs
jae
lea
js
mov
cwtl
lret
fldt
sub
lea
test
out
xor
jne
adc
sub
ss
jle
scas
push
icebp
cmp
cwtl
in
lods
stos
dec
push
mov
add
test
mov
addb
push
lret
sbb
xchg
fstl
pop
aas
inc
cmp
inc
push
in
and
mov
cld
xlat
cmp
xor
lock
fiaddl
sub
sahf
imul
xchg
xlat
push
pop
xor
pop
movsl
jns
shll
mov
fsubr
loopne
mov
lods
sbb
xchg
push
sub
rorl
inc
movsb
mov
cltd
inc
cmpsb
and
push
mov
or
pop
out
sahf
out
shlb
mov
loopw
in
fistpll
push
mov
data16
push
stos
sbb
stos
call
out
xchg
sahf
mov
jge
in
sub
shrb
jo
je
jg
xlat
push
xchg
xchg
popa
repnz
test
mov
cwtl
aas
test
add
ret
mov
pop
cmp
lock
in
adc
push
mov
popf
stos
mov
addr16
pop
fsubp
call
adc
push
nop
bound
mov
fsubs
jg
pop
sti
push
lods
lock
adcl
pop
pop
xor
pop
aas
pop
mov
fmulp
lcall
sub
imul
lds
addr16
cwtl
pusha
inc
pop
bound
mov
jl
movsb
lods
hlt
cmp
push
repnz
pop
adc
cmpsb
je
leave
dec
sbb
scas
jmp
das
mov
mov
addr16
ret
fistps
and
outsb
loopne
stos
aas
jno
mov
mov
push
or
bnd
push
inc
inc
jecxz
push
fwait
shlb
add
jl
insb
rcrl
repz
sub
sbb
or
cld
inc
in
push
fsubl
jae
add
jl
insb
rcrl
repz
sub
sbb
or
cld
inc
out
push
int3
arpl
jb
add
xor
insb
rclb
dec
repz
xor
mov
inc
rclb
in
mov
mov
xchg
jns
jecxz
test
movsb
insb
jecxz
repz
lret
adc
and
xor
inc
xchg
jo
cmpb
or
sbb
loopne
lock
add
adc
inc
cltd
push
test
sbbb
mov
sbb
sub
sub
jnp
and
xchg
inc
stc
push
mov
mov
nop
add
sbb
bound
lock
add
popa
lea
xchg
je
push
push
ss
hlt
xor
sub
push
and
iret
cmpsl
ret
sbb
mov
mov
inc
cmp
mov
mov
pushf
xlat
out
pop
inc
int
andl
pusha
jns
sbb
pop
adc
pop
add
xchg
or
adc
push
push
out
mov
cld
in
pop
xchg
imulb
cmp
loopne
out
leave
movsl
fs
jne
adc
jne
repz
dec
rcrb
sub
pop
xor
out
call
xor
mov
loopne
lea
sub
cmp
xchg
add
xor
loope
test
add
pop
mov
adc
sbb
cmp
popf
dec
sbbl
cs
in
enter
mov
pop
mov
add
loopne
cld
xor
pop
in
jo
clc
or
imul
jbe
inc
test
movsl
dec
mov
mov
push
fiaddl
push
test
sbbb
mov
sbb
sub
cmp
leave
add
adc
and
xor
pusha
mov
nop
imul
cmp
leave
add
sub
out
push
outsb
fsts
fs
loope
shll
adc
clc
push
movsb
inc
loop
cmpsl
lahf
push
aas
aam
bound
mov
or
test
scas
adc
mov
fwait
into
mov
mov
mov
scas
dec
loop
push
xchg
push
dec
les
icebp
push
mov
xor
pop
mov
outsb
sub
sub
out
cwtl
mov
xchg
rcll
clc
pop
in
lcall
mov
nop
fld
mov
cld
push
fwait
in
aas
stos
mov
jne
jg
xchg
add
dec
mov
roll
add
cmc
inc
pop
call
into
mov
xor
test
push
mov
xchg
cli
cmpsb
ljmp
lret
mov
and
das
fucomi
pop
pop
xchg
xchg
sbb
sbb
fsubrl
ds
pop
jmp
push
inc
fidivrl
push
out
push
mov
jle
and
es
lods
add
jmp
add
sbb
pop
xchg
mov
in
add
popa
sub
cmpsb
mov
loope
call
insb
imul
stc
and
mov
jg
sub
sub
popf
xor
sub
adc
imul
ror
xchg
jbe
bound
or
aam
cmc
inc
cmp
adc
scas
adc
xchg
aad
inc
iret
and
or
jb
dec
jle
aad
mov
push
lock
mov
repz
insl
ds
mov
jl
int3
pop
add
mov
lret
xlat
dec
inc
subb
jl
cld
dec
mov
std
popf
fucom
or
inc
notl
push
test
mov
adc
fistl
mov
xchg
cmc
addr16
or
jge
jbe
je
xchg
inc
pop
dec
movsl
test
addl
call
mov
push
push
cwtl
dec
fdivrs
int3
cwtl
xor
cltd
cmp
int
shll
inc
popa
mov
pusha
or
test
dec
or
das
sub
movsb
inc
clc
fwait
xchg
sub
or
addr16
jns
in
push
cli
dec
sbb
rclb
or
in
mov
jecxz
test
popf
mov
sub
mov
stos
cmp
insb
xor
push
clc
mov
sbb
jnp
lods
add
in
sbb
aad
add
mov
neg
stos
lahf
mov
scas
adc
push
and
out
popa
pushf
mov
sahf
aas
add
les
inc
mov
cmc
in
mull
pop
lods
xchg
sbb
popf
daa
mov
nop
lds
ret
add
or
je
cli
jecxz
xor
sub
xchg
pusha
pop
mov
cmp
gs
pop
rol
les
lods
push
jg
adc
into
aam
repz
dec
jnp
repnz
pop
lret
popf
cltd
cmpsb
shrb
lods
mov
push
movsb
pop
cmp
mov
jns
das
outsl
mov
test
dec
or
push
std
sub
sub
jecxz
ret
inc
dec
xor
mov
push
les
pop
inc
les
dec
push
dec
mov
in
mov
gs
lcall
push
pop
into
mov
and
int
mov
cmp
pushf
pop
sub
lret
cmpsb
push
pop
mov
mov
or
jno
test
adc
jg
scas
jae
add
les
jp
mov
std
or
addr16
push
sbb
mov
insl
jle
lods
jmp
jb
cmp
dec
pop
test
add
push
xchg
ss
decb
sbb
mov
sbb
lret
mov
ret
lods
int
jns
cmp
or
loopne
push
cld
lret
adc
push
bound
int
stos
loop
pop
lods
test
stc
data16
outsl
mov
adc
popa
andl
ljmp
hlt
cmc
in
mov
loopne
push
push
or
push
inc
shrl
andb
test
cmp
push
test
push
addr16
enter
sbb
ljmp
cmpsb
cmp
jge
sub
mov
and
xchg
inc
xor
or
cmp
push
repnz
push
sbb
mov
inc
xor
cmp
inc
shlb
push
mov
dec
and
test
into
shlb
push
jne
mov
xchg
inc
ficoml
inc
jbe
test
lods
mov
pushf
cmp
loop
imul
mov
iret
adc
jbe
jecxz
add
arpl
fiaddl
ret
sbb
pop
pop
out
sbb
xchg
cltd
jns
test
bnd
cmpl
insb
inc
xlat
popa
mov
sbbl
test
sbb
leave
xchg
ret
sbb
fsubrs
xchg
addr16
inc
or
and
ret
hlt
out
inc
xchg
mov
and
adc
das
inc
xchg
dec
mov
dec
push
fisubl
xchg
xor
cmc
outsb
dec
jg
jb
jae,pn
and
iret
mov
sbb
popf
xor
mov
dec
sub
or
dec
insb
push
cltd
jmp
rolb
jp
call
or
mov
xchg
arpl
in
xlat
repz
cmp
mov
mov
rcl
jg
in
add
aad
inc
les
pusha
xchg
inc
imull
pushl
popf
rorb
mov
add
arpl
fsubrs
adc
loopne
jge
aaa
push
dec
insb
push
subb
xor
lds
mov
inc
push
loopne
inc
inc
lret
sub
mov
je
aaa
cmpsl
xor
inc
or
clc
cld
xchg
cmc
add
dec
pop
mov
enter
sub
and
test
scas
inc
add
add
rcll
xor
shr
mov
mov
ss
jmp
stos
ret
rcrb
mov
aam
stc
mov
push
inc
fs
cmp
inc
std
xchg
je
popf
mov
adc
lret
outsw
mov
loop
clc
call
movb
push
xor
lds
outsb
jae
sahf
xor
ret
shrl
jno
or
jle
mov
inc
repnz
dec
jecxz
jecxz
sbb
iret
jnp
adc
lods
ss
pop
mov
or
cmp
cmc
mov
stos
arpl
jbe
int3
cmp
push
mov
and
pushf
mov
xor
push
jge
inc
adc
jle
cmpsb
nop
cmp
aam
inc
aam
fldcw
adc
mov
and
cld
popa
pop
push
add
xchg
xchg
lea
dec
movsl
xor
rcrb
xchg
sbb
push
mov
and
sub
ljmp
call
push
ficoms
arpl
cmp
pop
push
mov
pop
test
xor
push
sahf
pop
ret
out
push
or
xchg
pop
sub
mov
mov
fidivrs
mov
out
repnz
mov
ja
jmp
inc
ljmp
xchg
aas
or
mov
xchg
add
into
mov
ret
test
sub
pop
mov
or
mov
notl
inc
jl
adc
lret
icebp
aas
sbb
addb
in
and
ja
jo
push
sbb
mov
out
push
add
mov
cwtl
xchg
mov
xchg
add
addr16
adcl
adc
popf
repz
mov
add
sar
notl
dec
sahf
jno
inc
enter
cltd
pop
std
add
push
dec
imul
mov
push
mov
push
mov
and
or
aas
and
add
xlat
ror
or
mov
push
sub
lret
or
cmpsl
sub
push
xor
outsb
mov
inc
inc
xor
aas
int
mov
jbe
movsl
pop
xor
mov
in
test
loop
inc
inc
std
cmp
add
daa
mov
jnp
add
adc
cld
xor
xchg
imul
outsb
mov
or
in
inc
jno
outsb
xchg
cmc
add
or
jecxz
add
shlb
lods
xor
pop
dec
inc
cmpsl
inc
rcr
sbb
imul
inc
cltd
push
cmp
pusha
add
dec
sub
jmp
or
rclb
addr16
sub
jecxz
sub
cmp
sbb
arpl
and
push
scas
test
out
inc
mov
jae
orl
sbb
cmp
pop
in
gs
stc
cwtl
sub
xchg
fxch
jnp
add
cmc
das
call
mulb
sbb
jns
add
je
rcr
inc
nop
push
mov
pop
mov
mov
fimull
jnp
subb
jmp
lods
cmp
int
lcall
popa
std
cmp
add
cmp
cmp
out
jnp
sub
repnz
pop
mov
fisubl
adc
cmc
or
cld
imul
push
sbb
mov
pop
pop
jg
xchg
cmp
jbe
movsl
cmp
std
mov
ljmp
mov
adc
push
adc
loope
pop
cmp
mov
adc
mov
mov
mov
cmp
loop
aad
lods
xchg
rcll
fs
dec
add
inc
dec
hlt
cmc
lds
sbb
sbb
sbb
xchg
pop
inc
aam
out
xor
xor
shlb
aaa
ret
fldenv
mov
inc
into
mov
and
push
xor
ss
adc
and
sti
cltd
add
ret
test
jmp
push
and
out
sub
in
in
popf
cmp
cli
enter
jb
xor
dec
mov
push
je
test
sbb
jbe
pop
push
fnop
mov
jbe
xor
out
lds
lods
push
or
enter
mov
fsubs
lds
arpl
dec
dec
ds
xchg
fxch
sbb
inc
fs
mov
movsb
outsl
test
inc
push
sbb
add
mov
outsl
int3
lret
stos
jns
pop
stc
jg
dec
mov
hlt
sbb
push
testb
fists
jae
cmpsl
inc
cmp
rcr
pop
adc
popf
fisubrl
fwait
mov
sbb
pop
xchg
sub
dec
xor
bound
sbb
cmc
cmp
push
add
or
mov
mov
mov
rclb
xor
dec
es
ret
aam
fwait
adc
sub
sbb
xorps
mov
sbb
dec
subl
incl
loope
cld
push
and
ja
ret
jl
adc
loopne
jp
jb
pop
fdivrs
nop
jl
orl
inc
dec
mov
aad
mov
lock
insl
iret
jp
imulb
pop
xor
mov
adc
and
xchg
fimuls
rorl
or
push
stos
in
and
jns
hlt
out
pop
xchg
aaa
xchg
hlt
out
shlb
cmp
and
insl
pop
jns
enter
lock
movsl
nop
sbb
jmp
loop
pop
rcl
rcr
add
adc
jne
inc
or
inc
mov
movsb
xorl
mov
mov
pop
pop
in
sub
aam
lds
and
scas
sub
movsl
rclb
movsb
pop
jmp
adc
mov
sarl
popf
sbb
jae
push
sbb
call
jbe
push
lret
into
cmp
adc
mov
cmpsl
cmp
jne
jg
sub
jle
mov
sub
stos
and
add
imul
cmp
jne
sbb
pop
xchg
cmp
ss
push
test
mov
shlb
mov
imul
insl
outsl
ss
sbb
sub
jbe
in
inc
mov
roll
or
gs
lret
js
rclb
imul
mov
pop
pop
add
cmp
mov
jle
inc
push
ljmp
sti
dec
jmp
mov
jbe
and
mov
mov
cmp
sbb
bound
iret
insl
das
lahf
mov
cli
sti
pop
out
push
out
jecxz
les
fisubrs
add
pavgb
add
xor
mov
cmpsl
and
mov
jne
fisubrl
in
cwtl
andb
aad
mov
or
rcrb
cwtl
push
mov
sub
popa
lock
mov
xor
ficompl
mov
pop
call
push
clc
out
xchg
cmc
std
xchg
fsubl
scas
pop
mov
cmp
jns
fcom
pop
xchg
sbb
mov
faddl
sub
icebp
and
ret
jno
int3
outsb
ljmp
mov
adc
dec
mov
mov
adc
nop
das
out
push
aad
mov
mov
mov
mov
mov
pop
cmp
or
and
jno
add
popa
fsubr
mov
xchg
or
and
push
negl
nop
pop
sub
addb
jne
pop
and
sbb
add
inc
mov
pusha
and
push
fldl
shl
cmp
jge
mov
adc
in
cmp
popa
push
outsb
mov
push
or
pop
mov
aad
jns
xlat
les
xlat
test
xor
mov
pushl
mov
out
jecxz
test
push
imul
sbb
daa
loope
lret
inc
add
adc
dec
add
sub
arpl
into
sbb
mov
push
mov
mov
fistps
clc
cwtl
stos
test
inc
sbb
mov
push
jbe
mov
or
xchg
fcmovnbe
mov
mov
into
mov
jmp
push
in
xlat
sti
inc
imul
stc
lret
bswap
incb
sub
jmp
jns
hlt
mov
jge
lahf
jl
mov
mov
xchg
jno
mov
sub
ficoms
sub
sbb
pop
push
xchg
jns
lahf
and
adc
pop
jbe
sbb
popa
sub
imul
sub
xor
clc
movsl
sub
add
leave
repz
cmp
test
pop
dec
jb
hlt
push
imul
sbb
mov
sub
mov
sbb
cmpsl
test
dec
ret
pop
aad
jle
ret
or
mov
fsts
fdivrs
push
adc
push
inc
dec
iret
cmp
daa
add
mov
push
and
aad
lret
adc
xchg
pop
repz
xchg
test
adc
fimuls
stc
cmpsb
pop
test
push
cmp
push
negl
xchg
and
ret
rorb
scas
cs
inc
sbb
in
xchg
jbe
push
push
dec
or
pop
jno
adc
inc
lea
enter
fadds
inc
pop
jae
sbb
ja
sahf
filds
mov
xchg
outsl
mov
mov
lock
sti
push
out
arpl
nop
out
loopne
xchg
mov
dec
lods
fadds
mov
cmp
dec
cmpsb
add
mov
pusha
aas
pop
xchg
mov
fistps
dec
mov
push
mov
adc
xor
dec
inc
xor
xor
lret
es
dec
sbb
mov
ret
add
push
and
movsl
jecxz
jmp
out
scas
ss
push
push
mov
and
js
icebp
sbb
fists
push
push
push
lds
mov
mov
inc
jmp
mov
xchg
xchg
nop
in
mov
ds
or
inc
fcoms
into
jnp
stos
call
call
xor
ljmp
mov
lcall
sahf
inc
fisttps
jns
jl
int3
gs
mov
call
cwtl
jecxz
cmp
pop
sub
pop
inc
jno
test
mov
cmp
and
and
mov
xor
mov
sbb
sbbl
shr
andb
or
xlat
mov
in
sub
repz
mov
jns
lds
adc
lahf
popf
mov
or
sahf
sti
lcall
push
pop
dec
xchg
mov
int3
or
sub
pop
jo
inc
push
fmull
scas
mov
sahf
jb
mov
enter
cmp
jno
out
push
pop
pop
cli
cmp
fidivs
xchg
mov
aad
lds
mov
loope
mov
xlat
mov
adc
fs
les
push
mov
adc
and
imul
jb
ror
aam
jae
shrb
or
jmp
cltd
xor
jle
je
mov
xchg
mov
fldt
scas
sbb
pop
dec
jge
sub
inc
sbb
clc
hlt
push
xor
hlt
jo
daa
sbbl
xchg
mov
push
scas
aam
sarl
dec
mov
xchg
push
push
ja
sbb
and
lods
xchg
lea
dec
xchg
aam
inc
jne
stc
out
add
pop
insb
or
add
loopne
add
pshufw
in
outsb
dec
cmp
stc
inc
dec
pusha
aaa
cwtl
dec
iret
movsb
pop
xchg
inc
mov
mov
or
xor
out
rol
pop
inc
cmp
sub
cmp
dec
xchg
es
fimuls
fadds
in
add
sbb
cmp
je
lods
hlt
and
es
in
cmpsb
pop
jno
outsb
and
repz
jne
and
inc
jmp
ret
clc
aad
fisubs
add
gs
pushf
pop
outsl
push
pop
jmp
xor
push
jno
jo
nop
loopne
pop
mov
ss
jns
cmp
iret
fidivs
rclb
adc
arpl
mov
pop
add
scas
inc
insl
fwait
xor
cmp
dec
xchg
lea
xchg
cli
pop
test
jnp
mov
pop
adc
inc
inc
xor
mov
sub
test
and
pop
or
pop
fistps
repnz
mov
xor
lds
addr16
cmp
sub
popa
push
fistl
cltd
dec
mov
movsl
push
sub
jmp
or
sbb
outsl
xor
mov
rcrl
xchg
lea
iret
sbb
push
push
xor
dec
pop
xchg
jns
fwait
cmp
push
je
push
xor
fs
lock
inc
arpl
out
jmp
xchg
mov
into
push
push
mov
test
sbb
insl
sub
xchg
mov
sub
inc
jo
cmp
cld
popf
xor
dec
push
aaa
xchg
lods
loope
adc
out
jnp
jge
iret
fs
pop
std
dec
mov
daa
xor
sub
movb
xchg
cmp
dec
cmp
repz
or
popf
push
pop
add
mov
insl
or
arpl
repnz
jecxz
push
sub
shr
repz
jg
pop
aad
bound
sbb
push
pop
test
mov
mov
sbb
in
xlat
js
mov
hlt
imul
bound
ja
and
sub
subl
sbb
lret
adc
push
sti
and
push
add
movsb
push
icebp
cmp
mov
in
xchg
dec
arpl
cmp
nop
adc
and
sbb
fbld
sub
push
hlt
mov
mov
cli
insl
xor
and
inc
and
sbb
push
sub
xor
fcoml
lret
xor
or
out
jge
add
dec
cli
ret
insb
sbb
mov
dec
inc
inc
mov
loopne
dec
loop
out
xchg
add
jmp
add
icebp
dec
int
mov
add
push
cltd
xchg
pop
mov
push
ds
mov
mov
flds
jg
loope
xchg
sbb
imull
jmp
xchg
imul
out
lret
jne
or
movsl
mov
outsl
ja
add
sbb
sar
pop
andb
push
pusha
dec
mov
mov
repz
cmc
bnd
cmpsb
pop
adc
cwtl
push
divl
mov
div
jns
mov
sbb
sti
sahf
rcll
push
cltd
in
sub
adc
cltd
mov
cltd
lret
sub
inc
push
xchg
stc
shll
inc
xchg
sbb
mov
or
test
outsl
andl
jecxz
gs
dec
push
int3
xchg
fsubl
mov
loop
or
lret
sub
into
inc
test
loopne
in
sbb
stos
pop
jg
lods
loopne
xlat
push
jg
mov
iret
mov
gs
and
and
mov
mov
out
or
lods
fdivrs
cmpsb
rcl
fs
int
cmp
pop
movl
pop
or
mov
xchg
jno
hlt
rorb
cltd
sahf
dec
mov
lods
in
add
and
jo
mov
mov
cld
push
fs
std
push
xor
dec
lahf
jg
cmp
mov
dec
dec
sti
in
xor
add
xchg
lock
xor
pusha
mov
nop
imul
cmp
leave
add
adc
and
xor
pusha
mov
nop
imul
cmp
leave
add
nop
mov
cltd
shrb
add
cltd
mov
or
sub
shl
fldl
test
mov
fnstenv
mov
push
test
andb
jle
xchg
das
pop
andnps
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
outsb
mov
pop
out
lcall
das
out
iret
into
fsubrp
scas
lahf
mov
scas
outsb
pop
jle
dec
jg
outsl
cs
orl
push
pop
out
into
call
out
scas
lock
ja
addr16
push
xlat
inc
insl
aaa
and
xor
rcrl
aaa
testl
cmpsb
pushf
scas
enter
lret
leave
scas
pop
pop
adc
dec
or
cmp
ds
and
imull
add
scas
cmpsb
arpl
icebp
out
aam
pop
ss
repz
insl
imul
lahf
xor
scas
dec
mov
orb
sbb
dec
mov
movsb
mov
jb
bound
jg
mov
xchg
xlat
rcrl
aas
addr16
les
shlb
lcall
push
sahf
mov
cld
ds
repz
ret
sub
ljmp
out
das
out
mov
cmp
out
push
int3
mov
push
xchg
mov
mov
jg
rcll
fbstp
mov
mov
jmp
in
jo
mov
addr16
cmp
cs
in
scas
negl
or
out
cmpsl
mov
cmpsb
ja
mov
sbb
cmp
inc
pop
imul
push
push
dec
out
cltd
xchg
mov
lock
cld
repz
add
pop
push
and
cs
inc
jo
cmp
push
dec
inc
lods
mov
lahf
mov
fdivrp
les
or
or
das
ss
jnp
femms
aas
push
das
out
iret
into
fsubrp
scas
lahf
mov
scas
outsb
pop
jle
dec
jg
outsl
cs
ds
aas
push
das
out
iret
into
fsubrp
scas
lahf
mov
scas
outsb
pop
push
cwtl
icebp
fsubrl
fldt
repz
mov
aaa
insb
or
adc
xchg
andb
jmp
inc
rorb
int3
in
sbb
adc
push
pop
jmp
push
mov
popl
dec
leave
mov
adc
insb
pop
clc
pusha
loop
xor
and
insl
gs
dec
pop
xchg
in
jbe
aas
cld
shll
rcll
scas
in
or
sub
mov
or
and
xor
pop
jl
sub
or
push
mov
rorl
sbb
fmull
adc
fld
fwait
push
pop
cmc
mov
outsb
je
lret
in
jg
sub
scas
ja
pop
ja
arpl
ds
or
xchg
mov
out
test
hlt
sub
jp
inc
inc
test
fdivrl
bnd
pop
insb
xlat
pop
fstl
inc
mov
daa
js
mov
pop
jbe
add
pop
fnstcw
pusha
lods
jbe
mov
push
jecxz
ret
les
mov
jb
call
cmp
stos
add
iret
inc
icebp
jb
xchg
pop
mov
aam
iret
lock
ljmp
push
add
in
bound
cwtl
inc
outsl
lret
push
lock
lret
clc
int3
mov
cmp
mov
cmpsl
pop
test
inc
adc
inc
xor
sub
push
mov
mov
dec
adc
xchg
sahf
popl
daa
adc
pop
lock
pusha
sub
add
and
scas
aam
jns
push
jbe
sub
pop
imul
pop
int3
rorb
loope
mov
and
cltd
pop
cmpl
xor
jns
jb
ficoml
pop
add
jge
cmp
stc
push
cmp
add
push
jns
cwtl
sbb
add
loope
cmpsb
or
adc
and
adc
dec
sub
movsl
fwait
mov
cs
sti
or
sbb
mov
or
test
cltd
cmp
iret
xor
rclb
or
mov
inc
ljmp
pop
movsl
data16
out
mov
hlt
mov
daa
push
push
sbb
mov
inc
rcrb
xchg
cmp
sub
das
leave
test
movups
test
push
lcall
or
inc
and
out
lahf
stos
cmp
adc
clc
cmp
and
loopne
nop
negl
lods
dec
jl
mov
cmp
out
repnz
gs
push
cltd
out
inc
gs
or
scas
cs
pushf
dec
xchg
push
pop
ja
scas
dec
xor
stc
push
outsl
sub
add
int
sub
imul
cmpsl
das
mov
mov
ja
aas
push
inc
push
test
push
cmp
cmpsb
in
data16
cmp
fcomi
dec
and
cs
ds
push
adc
mov
jno
fcmovne
and
inc
xor
and
cmp
dec
aaa
and
fisttps
cltd
mov
je
xor
and
adc
fiadds
enter
mov
es
ja
movsb
pop
mov
stos
call
pop
mov
mov
pop
rcl
testl
pop
pop
cmp
out
sub
andl
jl
fdivrl
lcall
pop
or
nop
pop
add
loopne
cmpsl
cltd
mov
mov
sbbb
test
stos
add
cwtl
in
mov
rclb
test
jecxz
insb
pop
jg
cli
mov
pop
xchg
test
jnp
shlb
out
sub
xchg
fisubs
cmpsb
stc
loop
lods
lds
into
pop
loop
push
pop
jo
xchg
insl
push
shll
daa
jnp
pop
dec
int3
ss
test
xor
icebp
js
mov
mov
mov
dec
hlt
scas
movb
jp
repnz
mov
int
pop
ffreep
pop
inc
shrl
popf
push
xor
out
push
push
or
outsb
mov
cltd
pop
nop
test
ds
xchg
les
out
out
jbe
incl
rcrl
sbb
add
mov
shr
sub
and
push
lds
jge
xor
imul
in
jecxz
mov
inc
xor
push
sbb
sbb
mov
mov
add
subb
inc
outsl
ds
adc
pusha
xchg
outsb
xor
movsb
test
idivb
fidivs
inc
stc
dec
and
xor
pop
lahf
stc
ljmp
inc
xor
fcomps
insb
orb
sahf
xlat
mov
fisttps
imul
and
leave
or
inc
mov
cmp
cmc
pop
lods
leave
stos
stos
adc
mov
popa
jae
ret
jl,pn
jb
fwait
sbb
fcompl
jne
gs
test
ds
shlb
aad
sub
push
in
leave
cmp
repnz
hlt
mov
push
scas
test
adc
hlt
ret
iret
push
rcr
fucom
leave
xchg
jo
or
ret
out
pop
push
cmpl
jno
add
fstpl
repz
add
xchg
es
lea
fwait
dec
inc
repz
mull
add
jmp
jno
aaa
jp
loope
dec
fs
add
fisubs
push
xchg
add
mov
mov
push
sub
mov
cmpl
imul
fnsave
mov
push
lret
mov
jmp
sahf
mov
aad
or
in
icebp
sti
addr16
std
test
mov
push
subl
adc
or
movsl
xchg
xchg
in
dec
push
dec
lret
call
mov
fnsave
sbb
sbb
aas
add
or
push
stc
or
or
jmp
push
push
rcrl
scas
inc
adc
leave
nop
ja
out
cmp
jne
pop
jmp
bound
dec
es
lret
sub
cmpsb
and
addr16
int3
dec
add
stos
push
imul
mov
shll
in
daa
aaa
test
pop
lods
xor
sub
out
sub
rcrb
icebp
in
xchg
jecxz
xor
mov
hlt
loope
nop
cmpb
jmp
cld
shrl
in
and
mov
pop
cmp
sub
enter
pusha
cmp
in
jle
int
popa
mov
aas
sub
or
roll
mov
dec
clc
or
adc
jge
xchg
shr
fisttpl
imul
loop
aad
dec
ja
leave
mov
imul
mov
ss
aad
mov
loopne
sbb
fistpl
or
mov
in
insl
lock
lock
sub
or
mov
out
jmp
inc
xor
mov
or
push
leave
mov
sub
sahf
jne
imul
push
lock
stos
cmp
adc
mov
pusha
repnz
cli
sbb
sbb
xchg
pusha
std
out
lds
fadds
flds
mov
cmp
jns
subb
roll
outsl
sub
mov
and
aas
pusha
mov
and
andb
ds
sub
push
les
fiaddl
rcrl
in
push
clc
ljmp
popa
mul
scas
mov
loopne
add
or
nop
or
ljmp
clc
imulb
nop
pop
inc
adc
xchg
aaa
mov
clc
pop
mov
pop
and
push
or
inc
ss
jo
lock
mov
cmpsb
sbb
cmpb
mov
popf
sti
or
jnp
nop
pusha
cmpsb
and
hlt
and
add
test
rclb
clc
hlt
add
fwait
adc
sar
mov
and
paddq
shll
call
sbb
ljmp
mov
int
rorb
ret
push
test
or
nop
sub
xchg
das
js
sub
cmpsb
jno
in
xchg
mov
outsb
cmp
shrb
inc
push
loope
shlb
js
inc
fisubl
mov
xor
ret
test
loope
stc
jae
das
bswap
dec
mov
jb
push
jbe
daa
xchg
lahf
daa
dec
cmp
and
loopnew
mov
push
mov
lds
aad
daa
lods
int3
hlt
adc
mov
sbb
cmp
xchg
mov
inc
loop
fstp
pushf
dec
inc
gs
outsb
jg
add
cmpsl
jecxz
sbb
or
add
or
mull
out
and
add
mov
in
xor
lock
flds
xor
std
dec
scas
or
pop
repz
pop
and
push
jge
rclb
leave
sub
mov
push
adc
pop
loopne
imul
xchg
test
xchg
pushl
decw
and
loop
mov
inc
ss
push
sarb
add
pop
push
jp
mov
rcrb
mov
mov
jne
insl
mov
into
or
repnz
lret
adc
sub
adc
pop
sbb
ds
sarl
pop
cld
les
nop
add
sbb
aaa
insl
cmpl
pop
insl
icebp
sub
addr16
ja
dec
clc
sbb
inc
dec
mov
mov
outsb
cmp
in
imul
movsl
jge
into
test
cmp
or
in
jmp
bound
in
sub
lock
dec
shlb
pop
fwait
jae
cmp
pinsrw
lcall
and
or
sbb
cmp
popa
insl
in
mov
mov
lds
sahf
mov
sbb
loop
push
outsb
and
pop
lcall
outsb
je
pop
cltd
or
pop
lds
enter
fstpl
mov
hlt
mov
sub
mov
push
imul
jb
lods
adc
or
enter
cmp
lds
insl
adc
mov
jg
jno
mov
adc
pop
daa
fadds
loope
xchg
dec
and
xlat
sbb
push
insl
imul
loop
or
mov
mov
data16
js
xchg
out
fsubl
inc
jecxz
subb
push
push
mov
cmp
sub
or
popa
add
cmp
fsubrl
add
cmp
sub
das
sbb
pop
jge
mov
in
inc
lret
inc
sahf
jo
sbb
movsl
nop
shl
mov
cli
push
push
xchg
mov
orps
filds
mov
lret
xchg
inc
sub
and
test
xchg
rolb
add
loope
shrl
push
jecxz
xchg
push
sbb
pusha
and
inc
pop
xor
leave
std
jecxz
jecxz
or
sahf
lcall
inc
mov
and
push
or
mov
jp
cs
dec
sbb
mov
mov
inc
icebp
mov
jp
dec
fs
jnp
push
jle
imul
psrlq
mov
xor
cld
pop
mov
sti
sti
and
or
stc
fwait
add
iret
cmp
ret
test
mov
jmp
cmp
loop
dec
mov
xchg
cwtl
sti
movsb
fcom
cmp
pop
adc
xor
lret
rcrb
aaa
inc
mov
mov
mov
outsb
into
cwtl
leave
rcll
fs
jle
jge
int
loope
gs
pop
xor
lcall
data16
or
ljmp
sub
push
push
in
popf
outsb
pop
cmp
into
sub
fimull
cltd
push
or
cmp
fs
inc
out
aad
dec
mov
pushf
fldcw
adc
das
je
mov
or
mov
xchg
mov
in
ljmp
cmp
outsl
cmp
sub
pusha
jnp
in
in
mull
xorl
mov
lds
orl
div
dec
aad
xor
xchg
mov
pop
xor
xchg
scas
adc
dec
mov
testb
mov
sbb
test
or
es
int3
pop
lcall
jae
pop
fidivrs
push
int
cld
dec
cmp
cli
test
dec
inc
sbb
pop
push
add
aam
out
outsl
cltd
rcr
dec
stos
mov
cmp
inc
xorl
sub
pop
lahf
xor
cmp
xor
outsl
sahf
in
icebp
cmpb
aas
mov
cmp
es
rcl
xor
sbb
ss
es
cmp
mov
sbb
out
cmp
push
inc
fwait
pop
lock
sbb
inc
mov
lahf
xor
mov
lret
cld
out
push
jmp
adc
fs
daa
icebp
ljmp
std
jl
pop
rcrb
sub
pushf
mov
cli
pop
jae
shll
mov
mov
inc
sub
add
mov
cmc
add
stos
lock
lods
cmpsb
pop
rcl
dec
fidivl
addr16
sub
and
movsb
mov
flds
gs
outsb
jg
out
mov
xor
inc
dec
cs
ja
mov
cmpsb
mov
fisubrs
les
ljmp
jp
cs
mov
adc
sti
sub
mov
sar
pop
sbb
dec
in
add
movsb
cmp
test
mov
xchg
or
iret
imul
das
outsb
push
pop
adc
sbb
dec
out
fwait
sbb
and
mov
dec
rcrb
xchg
int
sbb
out
adc
or
in
inc
leave
test
and
out
into
out
mov
xor
nop
sub
test
test
imul
aam
xchg
push
sahf
movsb
sub
repz
aam
int
jge
mov
aaa
aaa
mov
mov
pop
mov
outsb
mov
loop
pop
call
repz
push
adc
int3
filds
and
sbb
pop
mov
bnd
aad
hlt
dec
adc
ss
and
frstor
ds
into
push
pop
iret
cli
loope
call
test
les
aas
cmp
xchg
pop
shlb
or
mov
adcb
jb
jo
sbb
int
sub
pop
xorb
sub
test
arpl
outsl
cmpsl
inc
int
icebp
inc
inc
ret
enter
add
movsl
or
xor
add
mov
dec
push
push
pop
jnp
subb
in
xchg
shll
dec
repz
lret
sub
pusha
cmp
shrl
andb
adc
fs
gs
mov
and
out
insl
flds
or
fimull
pop
hlt
cwtl
or
stos
in
jmp
out
pop
imul
movsb
pusha
movsl
movsl
mov
cwtl
jno
push
int
ret
jno
fstpl
xchg
xor
repnz
dec
lcall
jns
jno
dec
mov
mov
ret
push
inc
push
xor
repz
pop
add
xchg
insb
xchg
ss
outsl
repnz
shrb
pop
inc
mov
mov
push
ljmp
mov
sbb
mov
xchg
push
xchg
and
js
and
add
dec
mov
adc
jmp
mov
add
aas
sbb
cmc
xchg
in
mov
mov
sub
clc
pop
mov
dec
lock
inc
bound
ret
and
pop
cltd
xchg
add
push
sub
cld
test
sub
cmpsb
outsl
push
and
push
and
loop
adc
mov
movsb
leave
addr16
outsl
inc
mov
popf
out
incb
pop
xlat
les
and
adc
int3
stos
mov
cltd
int
pushf
adc
push
in
aam
mov
sbb
dec
aas
pop
mov
mov
clc
test
fsub
adc
cmp
sub
jmp
push
idivl
test
out
mov
out
hlt
jmp
insl
pop
int3
cmp
pop
bound
scas
lcall
fs
and
xchg
lock
test
sub
push
adc
xchg
fs
testb
stos
cmp
lock
icebp
fwait
sbb
outsb
pop
or
movups
mov
add
stos
stc
sub
adc
sbb
xchg
sbb
lcall
mov
imul
and
xor
cmp
jmp
add
jne
ret
lds
rcrb
push
roll
lea
hlt
pop
loopne
mov
iret
js
rcrl
js
push
xchg
add
add
cmc
mov
xlat
loop
xor
daa
lock
mov
pop
stc
pop
jb
divb
mov
xchg
xlat
or
jne
adc
push
and
cmc
or
jmp
xchg
repz
pop
inc
jp
pop
sub
cld
jl
mov
and
outsb
inc
cmc
inc
les
fcomps
lods
out
inc
cmp
dec
cmp
cmp
and
std
mov
fucom
push
outsb
cs
xchg
inc
lret
or
adc
jecxz
nop
xchg
jp
jne
imul
lahf
popl
loop
es
rclb
and
movsl
or
sub
or
stos
pop
sti
sbb
sbbb
mov
lret
dec
clc
or
je
inc
sarb
adc
std
xlat
fldenv
mov
ss
fwait
sub
fimuls
jecxz
mov
xor
mov
sub
ret
mov
jnp
push
sbb
ficompl
cmp
es
sub
pop
inc
sahf
lahf
jno
jecxz
sbb
and
sbb
jne
cmp
aad
cmp
jb
adc
out
pusha
mov
ljmp
pop
sar
xchg
adc
add
and
cli
sbbb
mov
cli
dec
dec
gs
imul
cs
xchg
adc
ja
outsb
add
aam
bound
test
sbb
les
sub
and
push
mov
daa
xor
mov
pop
stc
aas
lcall
pop
xchg
fcmovbe
jb
pop
dec
repnz
or
mov
daa
or
shlb
popf
inc
mov
aas
jbe
movsl
nop
mov
sub
sub
sub
xor
and
js
or
inc
push
or
fistps
in
addb
add
std
repz
mov
lods
lods
inc
add
add
xor
mov
out
popa
push
pop
clc
lcall
movsb
sti
xchg
pop
movsl
in
dec
loope
das
mov
notl
out
dec
jae
jecxz
js
inc
cmpsb
jmp
mov
sbb
loopne
adc
es
sarl
mov
dec
pop
sti
mov
fists
jo
or
mov
shll
pop
cmp
xchg
add
xchg
stos
dec
neg
mov
push
sbb
ret
dec
add
pop
pop
out
or
clc
enter
mov
jb
cmp
test
pop
dec
lods
hlt
orb
xor
xor
fiadds
xchg
jnp
cmp
testb
lock
cmp
push
mov
repnz
xchg
mov
mov
pop
mov
loop,pt
xchg
movsl
push
xchg
push
daa
icebp
cwtl
adc
mov
in
jo
in
mov
inc
xor
pop
mov
fwait
or
push
inc
cmc
inc
jle
dec
mov
ret
pop
xor
sbbl
and
jl
jmp
roll
lret
clc
dec
je
mov
adc
xor
jmp
sarl
xor
and
push
push
cmc
dec
dec
fldenv
and
and
mov
jbe
cmp
hlt
stc
cmc
pop
push
jge
leave
jb
fstpt
lea
popa
mov
pushf
outsb
add
xchg
sbb
sub
adc
fstpl
popf
xor
andps
emms
mov
mov
imul
popa
orb
cs
adc
cld
rclb
clc
and
jmp
xor
ret
je
in
jns
and
cmp
imul
xchg
decb
lods
les
and
add
outsb
std
xchg
or
and
fidivrs
icebp
push
xor
int
push
push
jbe
sub
mov
cwtl
add
inc
scas
sub
loop
inc
xchg
aaa
jae
sbb
nop
xor
push
cmp
jmp
jmp
mov
insb
xchg
jmp
jbe
test
jo
ret
jge
cmpl
arpl
jmp
fists
sarl
adc
sub
fisubrl
ret
mov
fwait
push
imul
push
pop
mov
add
inc
mov
aas
lahf
sbbb
ret
or
pusha
push
pop
xor
lahf
fidivrs
mov
out
loop
out
ja
iret
int3
mov
add
jnp
rolb
sarb
cs
jl
mov
push
mov
arpl
dec
jbe
popl
dec
inc
pop
inc
push
sbb
cmc
and
xor
push
inc
xchg
or
outsb
jae
mov
pop
cwtl
xchg
or
lret
cli
aad
push
mov
pop
out
push
inc
in
add
xlat
ret
mov
sbb
push
pop
std
add
or
out
add
mov
jno
inc
bound
inc
push
in
pop
mov
sbb
into
insb
sub
sahf
cmpl
inc
mov
mov
test
xor
mov
add
cs
ds
aas
push
das
out
iret
into
fsubrp
scas
lahf
mov
scas
outsb
pop
jle
dec
jg
outsl
cs
ds
aas
push
das
out
iret
into
fsubrp
scas
lahf
mov
scas
outsb
pop
jle
dec
pop
pop
outsl
cs
cmpsl
push
aas
push
das
out
pop
dec
into
fsubrp
scas
lahf
mov
scas
outsb
pop
jl
dec
jg
outsb
sub
jle,pt
and
gs
ficomps
jno
popa
push
into
xor
incb
inc
push
in
add
jno
gs
jne
stos
outsb
mov
push
or
sarl
ror
fisubs
out
adc
add
push
mov
mov
into
fistps
loope
sarl
ror
fsubp
out
mov
ja
inc
sahf
sub
mov
addb
jle
push
mov
push
movsl
xchg
jne
pusha
out
inc
xchg
fs
jle
cwtl
movsl
rolb
das
cmp
push
sub
jg
cmp
mov
add
jno
sahf
ljmp
fistpl
outsb
adc
jns
mov
sahf
pop
js
dec
mov
add
mov
or
pop
add
dec
add
fisubs
test
mov
xchg
mov
inc
nop
outsb
adc
icebp
in
insb
lods
or
push
in
add
xlat
inc
sahf
pusha
sub
xchg
or
jmp
add
fwait
loope
jle
aas
dec
xor
and
sub
ds
xchg
and
mov
icebp
xchg
inc
push
jmp
cltd
xchg
movsb
imul
add
incb
mov
popa
scas
push
mov
or
jle
push
int
ucomiss
ds
xor
insl
mov
in
or
and
push
dec
repnz
outsb
xor
loop
mov
mov
js
stos
ja
mov
insl
mov
cmp
jb
rorb
aam
ret
jle
movsbl
inc
mov
mov
inc
faddp
cmpl
popa
scas
push
mov
mov
push
icebp
push
loope
sarl
ror
fisubs
out
adc
add
push
mov
mov
push
icebp
push
loope
sarl
ror
sti
ja
insb
shr
jo
in
sbbb
mov
icebp
add
std
repnz
stos
scas
add
jge
jl
scas
mov
push
xchg
or
clc
mov
mov
push
loopne
insb
pop
loopne
repnz
sbb
outsl
pop
jmp
cld
add
mov
insb
add
adc
xor
add
and
cmp
dec
sbb
mov
jl
push
cmp
mov
mov
call
pop
test
adc
in
cmp
hlt
ror
mov
mov
lea
jae
or
jns
loope
add
lcall
mov
pop
or
popf
xor
jae
xorl
adc
or
adc
cld
adc
cmc
mov
fwait
push
mov
cli
in
and
cmc
pop
xchg
jno
mov
fadd
mov
imul
idiv
push
pmaxub
lahf
mov
cmp
mov
mov
push
pop
popa
scas
je
add
imull
xor
mov
in
xor
fwait
cli
nop
sbb
mov
lret
lods
xchg
dec
mov
pop
icebp
sarl
scas
push
les
dec
cmp
adc
xchg
jnp
xchg
jecxz
add
mov
xchg
andl
mov
mov
lahf
outsl
push
in
cmc
cmp
fdivr
mov
or
inc
ds
xlat
xlat
ljmp
jno
xchg
xchg
js
test
pop
and
lea
dec
sbb
push
and
rcrb
sbb
jle
or
mov
ljmp
pop
shlb
fadd
mov
int
sbb
pop
lock
push
out
out
push
xor
xor
and
xor
dec
stos
push
fldlg2
push
sub
shll
pop
je
sbb
movsl
jo
mov
lock
cld
sub
pop
je
pop
push
daa
jnp
lret
inc
in
push
inc
dec
or
sbb
arpl
jmp
and
movsl
roll
mov
mov
mov
mov
mov
scas
xlat
aaa
mov
shrb
cmp
adc
imul
fadds
insl
and
in
jp
and
inc
adc
insb
mov
push
pop
mov
mov
test
or
mov
mov
or
fcomps
enter
fsub
inc
sbb
or
test
add
hlt
ficoml
andb
sarl
sbb
xlat
in
mov
daa
insl
mov
aas
mov
dec
cs
fiadds
jmp
sub
add
mov
lret
mov
xchg
lret
jg
dec
fiadds
mov
sbb
loopne
push
lock
data16
je
mov
gs
xor
pushf
repnz
in
mov
inc
cmp
test
xchg
push
xor
imul
push
adc
or
clc
xor
sti
shll
inc
lods
shlb
std
dec
xchg
ja
rorb
aas
sahf
cmp
dec
and
gs
popf
sbb
movsl
xchg
xor
inc
or
in
sbb
iret
ljmp
mov
xlat
sub
int
cmp
shll
iret
rorb
cmp
outsb
loope
out
inc
mov
xchg
adc
mov
lret
in
xchg
inc
jb
stc
jge
and
inc
pusha
hlt
loop
cmp
fcompl
fs
nop
xor
mov
lret
nop
cmp
mov
imul
push
xor
pop
popf
cmp
insb
scas
sub
cmc
pop
pop
mov
cmp
push
lock
xchg
bound
dec
mov
xor
ficoms
mov
cld
ret
loope
add
jmp
dec
sti
jnp
pop
add
cmp
push
mov
bound
mov
fisttpll
xor
in
out
orb
insb
sbb
jl
fisttps
and
jge
and
sbb
jbe
add
out
dec
test
push
cmpsb
cmp
mov
mov
sub
mov
aam
jbe
sub
and
call
or
jmp
orl
js
cmp
jns
xlat
ljmp
mov
iret
mov
mov
push
add
mov
je
test
ja
add
and
dec
loopne
or
push
pop
fdivl
or
aam
ror
xor
jno
out
leave
leave
jbe
mov
mov
dec
mov
insl
inc
xor
leave
or
leave
cwtl
and
mov
cmpsb
sub
xchg
add
movsb
cmp
mov
jg
aad
jge
pop
sub
sbb
mov
push
cmp
xchg
lea
mov
lea
sub
mov
fbstp
shll
leave
data16
xor
mov
inc
dec
pushf
xor
dec
out
popa
xchg
aad
or
and
adc
and
roll
in
daa
pop
imul
leave
add
adc
psllw
int
push
clc
lock
cmp
rolb
test
sbb
shll
inc
mov
int3
xchg
push
int3
sbb
rcr
subb
sahf
fldcw
cmp
jmp
jne
xchg
mov
jl
inc
cmp
aas
idiv
in
mov
iret
js
cmp
jmp
and
sub
insl
pop
loopne
out
add
les
in
fisubrl
stos
dec
pop
mov
nop
insb
nop
cmc
movsb
jl
or
movsb
mov
xchg
jnp
add
or
cmp
pop
lret
cmp
ljmp
addb
cmpsb
insl
pop
shrb
gs
lea
sbb
push
and
in
add
nop
inc
fdivs
scas
xchg
lds
xor
jge
scas
xor
mov
in
sti
fdivrl
mov
or
xor
pop
jge
jecxz
mov
ret
std
or
ja
or
stc
adc
pop
xlat
outsl
jg,pn
pop
lahf
data16
xor
andb
and
fmull
in
sarb
push
gs
add
fs
popf
mov
bound
aad
pushl
jno
ficompl
mov
push
arpl
pop
stos
mov
cmpsb
imul
ret
les
push
jg
xor
jle
pop
mov
mov
loop
and
xor
loopne
rclb
pop
out
and
jo
int
cmp
mov
and
add
adc
inc
push
outsl
pop
mov
or
repz
cltd
ret
jmp
call
out
sub
xor
jns
rcrl
call
dec
inc
iret
addr16
or
dec
jp
inc
movsl
jge
xor
jle
test
jecxz
in
daa
sbb
xchg
and
aad
mov
pop
stc
jae
out
scas
cmc
jmp
push
push
lcall
or
outsl
hlt
xchg
xorb
mov
inc
xor
xchg
xchg
fdivr
and
xor
imul
aaa
hlt
jl
andl
je
dec
xchg
decl
out
mov
sub
popa
in
andl
es
xor
cwtl
sahf
dec
ficoml
test
adc
aas
push
inc
mov
push
mov
mov
loope
add
mov
insb
hlt
faddp
fwait
mov
ds
inc
stc
std
ffreep
movsb
lret
cwtl
repz
mov
cltd
aad
xor
dec
int
loop
mov
outsl
je
push
xchg
ljmp
lcall
fcomi
add
add
push
shl
pushf
or
xor
add
push
sbb
hlt
cmp
aas
rolb
mov
in
pop
mov
and
hlt
mov
xchg
xor
mov
ret
es
mov
sbb
int
pop
fdivp
add
icebp
pop
xor
sar
repnz
pop
or
xor
lods
mov
shrb
add
xchg
mov
aad
sub
mov
aaa
mov
sbbb
fs
bound
dec
loop
mov
nop
stc
add
test
pop
outsl
mov
iret
es
ficomps
scas
fmull
inc
cltd
loopne
orl
std
out
rolb
stos
lds
in
ficoml
sbb
sbb
sbbb
lods
rclb
lea
xor
fwait
dec
stc
es
xchg
in
pop
addr16
pop
xchg
and
or
clc
mov
xchg
or
loop
in
or
ret
outsl
dec
arpl
or
or
ljmp
mov
out
mov
or
xor
mov
adc
dec
xor
jl
jl
idivl
mov
dec
inc
mov
mov
pop
popa
push
xlat
pop
scas
call
test
cltd
pop
push
test
adc
mov
ja
jp
push
xlat
jmp
xchg
lds
lods
mov
jae
out
push
aaa
mov
rcl
ja
push
or
dec
js
jle
inc
xchg
pop
fdivrs
lret
mov
mov
xchg
lea
data16
nop
scas
movb
popa
xchg
std
lds
mov
ljmp
fwait
xchg
or
fildl
adc
stos
orb
jns
xor
loopne
or
inc
cmp
loopne
push
out
out
pop
jl
mov
and
hlt
jge
sub
push
aas
outsl
or
rorl
xchg
jbe
insb
jns
aad
add
inc
ds
jge
xchg
xor
pop
fisubrs
test
jnp
mov
jmp
insl
mov
cmp
jne
pop
insb
dec
mov
mov
aam
jecxz
push
ljmp
jo
push
jns
dec
cmp
pusha
mov
push
xchg
incb
lods
cmp
push
xor
stos
fbstp
stos
adc
bound
dec
pop
mov
imul
add
push
sbb
mov
out
into
mov
test
mov
sbb
push
or
ret
arpl
lret
adc
repz
push
mov
sbb
jecxz
dec
lcall
mov
sar
jns
fisubrs
jp
sub
hlt
add
inc
sti
ret
ror
fcomp
xchg
shll
xchg
out
pusha
test
or
xor
add
imul
rol
je,pn
in
jg
inc
test
movsl
xchg
lahf
cmp
icebp
pop
lahf
adc
cltd
add
scas
jmp
cmp
insb
dec
jae
pop
in
push
xchg
nop
incb
mov
sub
into
fs
jbe
or
mov
cmpsb
rol
and
std
jo
inc
sbb
fadds
push
push
shlb
inc
jmp
es
imul
mov
or
shlb
mov
mov
mov
xor
shl
push
cmpsl
out
imul
and
and
sbb
popl
mov
push
sarl
or
and
cmp
mov
push
enter
mov
mov
stos
add
pop
mov
inc
popa
jbe
cwtl
sub
rcll
add
cmp
mov
jmp
inc
xor
cmp
cmp
xchg
std
mov
loope
cmp
sub
addl
lods
add
sbb
push
sbb
mov
sub
pop
rol
mov
sbbl
stos
rcl
stos
cmpsl
cld
cwtl
cltd
cld
push
jbe
lods
scas
xchg
xchg
int
pop
insl
push
div
fists
sbb
cmp
dec
dec
mov
aad
cmp
pop
sub
cmp
and
or
xchg
scas
xchg
fmuls
in
stos
jmp
or
out
jae
pusha
inc
mov
xchg
sbb
imul
enter
add
dec
mov
sbb
jo
inc
inc
mov
outsl
lock
test
insl
into
mov
sbb
xchg
jns
cmp
pop
aas
inc
and
xchg
outsl
inc
dec
mov
adc
push
repnz
xor
mov
dec
push
inc
jl
xorl
bound
divb
pusha
inc
push
dec
ds
int3
sbb
call
and
pop
jmp
push
jmp
rcll
sbb
lea
aam
mov
fcmovnu
jge
cltd
mov
fwait
aaa
fisubrs
movl
out
add
xor
mov
loope
or
sbb
jecxz
dec
lods
fs
outsb
aad
lock
mov
icebp
adcl
stos
mov
das
mov
jae
movl
popl
out
inc
call
push
adc
mov
pushf
cmpb
mov
scas
arpl
enter
xor
xorb
insl
test
mov
rcr
mov
add
xor
jb
mov
xor
ror
leave
lods
fwait
push
jp
dec
repnz
pushf
fsubrs
cwtl
aaa
addr16
dec
stos
dec
fdiv
pop
add
xchg
fmull
loope
repz
sub
dec
sbb
xchg
jecxz
jp
into
push
insb
xchg
incl
dec
mov
lods
jmp
pusha
mov
fxch
pop
mov
mov
nop
shll
hlt
sbb
orb
je
inc
push
in
fstps
jmp
nop
push
push
js
sub
movsl
push
lds
out
xor
cmp
mov
data16
lock
sets
lds
aam
and
cwtl
andb
xor
sbb
lds
or
pop
pop
call
inc
imul
xchg
stc
jg
mov
sub
pusha
mov
xor
outsl
pop
xchg
sub
mov
pop
cmpsb
fisubrs
rcrb
adc
lea
ds
lods
repnz
pushf
xor
inc
xchg
imul
xor
test
xorb
mov
addr16
dec
jbe
loopne
inc
pop
jmp
and
jmp
sub
insl
ja
pop
adc
iret
and
outsl
scas
nop
pusha
push
push
xchg
test
test
lea
pop
ss
add
stos
lret
dec
fwait
xorb
rolb
dec
mov
out
xchg
xor
mov
in
out
or
ljmp
gs
mov
pop
stos
push
jmp
push
jecxz
sbb
pop
add
movsl
int3
adc
push
ds
mov
mov
out
inc
test
add
fsub
mov
ljmp
add
leave
push
pop
xchg
ret
mov
sub
and
and
orl
loop
fnstcw
jge
inc
lahf
mov
loop
xchg
jg
sbb
movsb
pop
lods
mov
cld
jg
pop
push
adc
stc
xchg
or
ljmp
imulb
negl
mov
loop
adc
cmp
push
sahf
cmp
inc
mov
push
xchg
or
insl
mov
fs
cmpsl
xor
or
mov
mov
stc
lret
scas
adc
sub
push
nop
push
lea
sub
pushw
cld
out
inc
scas
aam
mov
and
in
mov
lods
pop
sarl
gs
mov
mov
inc
xchg
sti
mov
jae
add
adc
cmp
adc
mov
jp
imul
ja
pushf
lods
and
xchg
cltd
inc
push
push
ficoml
dec
stos
sub
stc
push
inc
jle
test
test
push
dec
cli
cmp
bound
sbb
into
movsl
and
addr16
dec
jnp
sbb
aaa
sbb
in
xlat
gs
popa
aas
jmp
cli
fadd
mov
loop
or
dec
hlt
xchg
and
mov
enter
inc
aad
xor
fwait
imul
pop
jae
and
in
cwtl
stos
pop
ja
out
lds
mov
inc
inc
xchg
dec
negb
or
sti
mov
xor
js
aam
and
pop
mulb
or
push
lock
clc
popf
mov
adc
and
arpl
aaa
xor
shl
inc
mov
pop
jmp
inc
xchg
call
push
sti
out
mov
sbb
sub
pop
inc
dec
and
jae
shlb
les
test
mov
xor
cltd
popa
pop
mov
js
adc
fs
mov
cmp
sbb
xchg
pop
and
xchg
adc
loop
in
cld
xchg
xchg
sbb
mov
mov
mov
adc
test
fs
mov
xchg
sbb
into
mov
ret
mul
lock
xchg
insl
jl
outsl
xchg
dec
xchg
test
and
or
adc
pop
jno
daa
in
daa
cltd
les
sahf
int3
ljmp
lret
xchg
int3
lea
mov
shr
outsl
cmp
repnz
and
mull
loopne
sub
pusha
xor
and
xor
ret
sti
xorb
mov
lods
add
xlat
icebp
lods
leave
ljmp
jecxz
pop
loope
sbb
sahf
xor
clc
or
in
push
cli
jno
enter
xor
cld
add
dec
sub
pop
adc
out
mov
push
iret
fwait
xchg
das
adc
lea
mov
cmp
fwait
jbe
adc
add
icebp
sarb
insl
inc
adcb
add
jo
mov
ret
add
lret
shlb
in
fs
inc
fdiv
pop
shlb
push
jmp
movsl
ret
lcall
les
mov
daa
pop
or
movsb
rorb
daa
xor
stc
and
mov
xor
test
and
mov
xchg
std
fcompl
add
pop
popf
cmpl
insl
jae
pop
and
ret
sub
jl
pop
ds
sahf
subl
cmp
aam
xor
add
imul
aas
mov
in
cmpsl
cmc
iret
and
mov
fs
hlt
movsl
lret
or
pop
xchg
sbb
faddl
scas
push
adc
add
dec
shll
outsl
scas
shrl
cli
outsb
pop
test
imul
add
sbb
dec
mov
test
xor
imul
mov
les
pushl
cld
arpl
insb
inc
test
cmpsl
dec
xchg
inc
cmpsb
jle
jg
dec
xor
pop
cli
mov
and
aam
cli
xchg
mov
dec
pop
fiadds
pop
ja
call
outsl
daa
and
lea
lret
pop
inc
xor
rcrl
test
and
in
sbb
loop
mov
pop
push
or
cmp
loope
adc
test
hlt
cwtl
imul
cld
andl
lcall
cmp
sub
cld
xlat
inc
fucom
cli
and
into
ja
cmc
movsl
xchg
fisttps
sbb
xchg
scas
jg
test
xor
mov
push
adc
mov
aas
outsl
test
rcll
fnsave
ficomps
pop
test
cli
scas
shlb
ret
out
lret
mov
and
jae
pop
xor
andl
lods
mov
insl
movsb
cmp
into
mov
test
mov
sbb
push
sbb
scas
jo
nop
fwait
mov
lods
mov
shll
adc
cmpsb
neg
cmp
out
lds
sti
js
xorb
mov
xchg
insl
aas
cmp
jmp
mov
inc
stos
fdivl
xchg
and
icebp
mov
pushf
and
xor
ss
fildll
addr16
pop
mov
les
sbb
dec
jbe
add
shlb
push
jp
aaa
andb
aam
adc
mov
cmp
or
mov
and
jne
sub
push
rorl
out
rorl
stos
lds
sarl
inc
lea
inc
or
test
repz
stc
push
push
test
jb
lock
mov
andb
scas
popf
push
lods
xchg
push
ficoms
cmp
lods
or
test
in
mov
insl
ljmp
jns
and
add
pop
je
jecxz
push
adc
inc
pusha
cmp
xchg
adc
xchg
jmp
dec
and
sbb
and
push
add
push
mov
mov
sub
cs
jnp
pop
scas
lahf
fs
mov
lea
sbbl
out
or
xchg
jle
and
cmp
in
sbb
pop
in
ja
adcl
movsb
cmc
xor
mov
or
jbe
in
sahf
js
push
lods
js
jb
push
push
cmp
in
xchg
les
jb
inc
mov
cs
sub
xor
and
mov
pop
jne
mov
push
xor
and
sbb
data16
sahf
sqrtps
ja
fistl
push
xchg
push
je
ja
scas
loopne
movsl
mov
pop
pop
sbb
arpl
aam
sahf
scas
nop
adc
inc
popf
dec
xor
scas
mov
bound
ds
dec
jo
rolb
imul
inc
mov
adc
adc
sbb
aaa
xchg
add
fwait
cmp
push
dec
nop
adc
mov
call
clc
pop
std
pop
cmp
add
je
subl
push
xor
and
adc
add
push
mov
mov
push
icebp
push
loope
sarl
ror
fisubs
out
adc
add
push
mov
mov
push
icebp
push
loope
sarl
ror
pop
das
outsb
or
add
scas
push
ds
dec
mov
movsl
outsb
xchg
jle
push
cmc
push
loope
fdivrs
and
out
cmc
incb
jno
popa
scas
sarl
or
xchg
jle
jle
outsb
cltd
pop
test
in
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
lea
push
pushl
call
lea
push
pushl
call
jmp
call
push
mov
call
xor
leave
ret
dec
fwait
pop
mov
jg
push
fidivrl
pop
xchg
xor
int3
movsl
fldl
out
cmp
sub
imul
outsl
mov
pop
lret
das
sti
aas
mov
sbb
or
cmp
sub
jnp
imul
mov
jg
pand
lret
das
sti
aas
jmp
sbb
sub
sbb
sbb
xlat
ds
outsl
call
dec
and
clc
mov
pop
cwtl
hlt
mul
pusha
clc
pusha
add
adc
inc
test
scas
mov
roll
inc
shll
popa
jae
push
hlt
adc
add
fmuls
adc
ret
out
cmp
imul
add
jno
lret
cmp
adc
sub
mov
sahf
lods
scas
js
addr16
lret
jbe
aas
or
out
hlt
push
std
add
push
push
xor
sbb
fidivl
andb
stos
mov
into
in
push
les
or
pop
push
adc
popf
push
add
xchg
inc
mov
bound
dec
xchg
aam
dec
int3
sbb
mov
mov
jg
pand
lret
das
sti
aas
jmp
sbb
or
cmp
sub
jnp
sub
sub
cmp
push
jo
inc
sahf
mov
adc
fimuls
or
push
cmp
sub
or
ds
mov
jp
mov
pop
jns
ds
ffree
push
aad
sub
pop
fsubrs
ficomps
rorl
pop
lret
das
sti
aas
jmp
sbb
or
cmp
sub
jnp
imul
mov
jg
pand
lret
das
sti
aas
jmp
sbb
or
cmp
sub
jnp
imul
mov
fildll
and
int
adcl
jl
hlt
int
pusha
into
das
push
adc
pop
jnp
or
sub
cmp
mov
ret
mov
dec
xchg
xlat
sarl
jl
ja
lcall
jbe
mov
fistps
or
in
insb
dec
out
fbld
aaa
dec
cli
inc
jns
in
pop
arpl
std
pop
sahf
add
addl
pusha
sub
dec
add
push
sub
test
jle
jge
add
adc
inc
and
rcrb
loope
add
imul
sbb
stos
call
xor
mov
ss
or
cwtl
sub
jmp
jae
imul
out
mov
cmc
pushw
push
pop
xor
stc
xor
mov
push
push
pushf
mov
pushl
mov
mov
sbb
mov
push
mov
jb
hlt
adc
jg
cwtl
ljmp
mov
ss
inc
ljmp
outsl
cmp
cmp
or
int
idivl
sahf
sub
call
int
sub
test
ror
dec
cmp
cmpsb
and
inc
mov
add
adc
imul
test
ficompl
ret
cmpsl
mov
jb
icebp
cltd
enter
push
sahf
pop
sbb
shl
dec
pop
into
shlb
shl
popl
sbb
sub
cmp
push
out
push
pcmpeqd
jae
inc
adc
loop
in
inc
aaa
sar
rsqrtps
movsb
mov
and
mov
stos
xchg
inc
stc
push
sarb
imull
sahf
add
xchg
mov
rcrb
pop
cli
cmp
xchg
or
push
add
fistps
mov
shrl
pop
push
xchg
push
and
cmp
lcall
ljmp
out
pop
sub
fs
or
cltd
cmp
shlb
xor
and
stos
insb
add
adc
jmp
mov
mov
sbb
mov
test
adc
pushf
ret
loopne
xchg
fmuls
push
fs
cmpsl
jnp
ficoms
jle
and
pop
outsl
cmc
push
push
stc
insl
pushf
adc
xchg
mov
roll
pusha
add
hlt
jle
pop
pop
call
xor
cmp
pop
scas
cli
add
call
push
mov
popf
shlb
and
jns
andb
add
lret
sub
adc
popf
shr
ja
rclb
in
imul
sbb
loope
pop
or
or
add
lods
push
xchg
dec
pop
cmp
pushf
scas
mul
popa
lods
shr
nop
sub
insb
gs
repnz
shl
enter
mov
pop
mov
sbb
inc
leave
clc
aas
add
sbb
inc
jp
lods
sub
xchg
and
daa
shlb
les
xchg
ret
sbb
test
in
sti
arpl
jne
fs
test
fidivrs
pop
xchg
dec
adc
leave
lods
negb
idivb
adc
jns
enter
sbb
xchg
test
leave
das
loope
popa
adc
shlb
rcrl
hlt
into
test
mov
jb
mov
lds
clc
hlt
mov
ljmp
subb
outsl
jnp
lret
jae
in
push
push
das
ljmp
out
lcall
je
push
push
loopne
gs
outsb
add
enter
mov
or
fdiv
fucomp
out
fisttpl
test
das
shl
mov
jg
sahf
out
mov
cmpsb
loop
mov
mov
test
clc
aas
fcmovnbe
add
and
aas
add
sarb
push
test
inc
cli
lea
mov
mov
xor
add
rorb
shrl
xor
xchg
sbb
rol
fistl
fmull
movsl
sbb
in
ja
adc
aam
nop
loopne
mov
cmp
int
pushf
push
mov
cmc
cwtl
stc
es
int
and
or
xlat
push
mov
adc
movsb
mov
jnp
or
xchg
mov
pushf
xchg
jno
bound
repz
lods
in
push
repnz
sbb
outsl
int
jge
jg
jmp
nop
and
aad
lods
and
lret
cmp
sti
fwait
sbb
cs
aaa
scas
inc
or
enter
jno
push
inc
sbb
sbb
cmp
int3
cmp
sbb
inc
outsl
inc
push
pop
mov
sub
jb
xor
xor
dec
mov
fiaddl
jg
push
scas
jbe
mov
repnz
xlat
daa
mov
sbb
add
movsb
cs
repnz
mov
data16
mov
mov
repnz
repnz
xor
fs
ds
hlt
bnd
xchg
or
stos
cs
push
imul
mov
pushf
sub
mov
ljmp
pop
cld
push
sbbl
mov
mov
or
movsl
gs
cmp
mov
popa
addb
out
mov
jae
dec
and
jno
outsb
loopne
inc
inc
fwait
bnd
xor
stos
subl
push
or
testl
stos
notl
xchg
jb
sub
xor
in
and
xchg
sub
lret
jo
mov
out
repnz
lods
xchg
out
shl
out
fisubs
mov
mov
xchg
das
pusha
test
and
xor
gs
jne
push
lock
in
dec
adc
aaa
ss
hlt
dec
rcrb
push
inc
pop
adc
sbb
out
adc
das
pop
adcb
bound
jge
sbb
jmp
push
popa
loope
outsl
int3
iret
sub
iret
cmp
repz
add
pusha
rcr
adc
xor
xchg
jl
or
sar
add
sub
cmp
add
arpl
xor
add
dec
out
fsubrs
jmp
sub
bound
das
jne
push
push
les
jnp
pop
mov
add
sbb
xchg
cmpsl
fs
aam
hlt
mov
das
or
cmpsl
push
mov
fwait
mov
mov
aas
sub
xchg
rol
pop
dec
fildll
dec
xchg
nop
push
test
jmp
xchg
push
xchg
nop
push
inc
xchg
addr16
data16
and
pusha
faddp
jb
scas
je
rcrb
sbb
dec
inc
iret
sti
mov
push
insb
js
xchg
mov
aas
imul
out
mov
movsl
int
les
mov
jg
gs
cmpsb
jecxz
loope
ss
ficomps
shll
or
mov
test
cmp
outsb
inc
lret
sub
inc
pop
int3
dec
gs
add
inc
and
xchg
cmp
xor
mov
adc
neg
pop
pop
aad
adc
movsl
in
enter
sar
xchg
in
mov
stos
jnp
insb
les
pop
cwtl
add
xor
data16
rcrb
sbb
push
idiv
sti
roll
pop
test
adc
and
out
imul
decl
xor
mov
fstps
jecxz
or
mov
sub
dec
les
sahf
hlt
jge
mov
jecxz
subl
sbb
lods
push
sbb
cli
inc
adc
and
stos
cmp
daa
inc
fnstenv
add
push
pusha
xchg
test
xor
inc
adc
xchg
and
jl
rolb
mov
push
dec
testl
jg
insl
shlb
int3
lock
xor
jecxz
dec
jae
aad
icebp
arpl
pop
dec
or
shll
insl
leave
xor
icebp
flds
ds
test
icebp
push
mov
pop
jbe
stos
inc
jmp
stos
jmpw
jbe
fs
push
push
and
push
add
repnz
mov
pop
mov
int
outsb
mov
jns
mov
push
stos
outsl
adc
mov
gs
ret
test
xor
adc
rorb
jne
in
loopne
jp
jle
push
in
imul
sbb
mov
movsl
or
and
cmp
stos
sbb
ds
add
cmp
push
out
rorl
inc
xchg
iret
aaa
rcll
xor
aas
sbb
frstor
or
scas
or
repnz
call
rcr
rcll
jns
pop
jns
andb
xor
sub
add
lds
outsl
mov
mov
out
arpl
sub
pushl
lret
jp
mov
std
out
xor
inc
or
into
sti
orl
mov
and
fstps
push
enter
fisubl
pop
mov
out
mov
jge
sti
scas
fists
or
xor
push
lahf
add
fcomip
jne
push
orl
int
in
mov
daa
outsl
pop
xor
push
push
add
stc
dec
cmc
je
cmp
sbbl
cmp
adc
mull
mov
mov
push
mov
push
leave
cltd
and
test
aam
movsb
popa
cld
and
mov
sub
cmp
inc
sbb
int3
mov
push
sbb
pusha
cmp
sbb
icebp
sar
nop
jbe
xor
xchg
lds
sbb
adc
lcall
rorb
or
dec
pop
stos
jecxz
pop
addb
sbb
cwtl
xor
mov
jns
mov
add
jp
jmp
lahf
lcall
std
daa
enter
cmp
xchg
inc
xor
fnsave
lea
xchg
jle
mov
xor
jno
cmp
push
push
pop
int3
pop
loop
and
addl
gs
dec
shll
mov
insl
call
sbb
test
test
push
and
or
mov
loopne
out
pusha
shlb
int3
lret
mov
lea
dec
mov
jns
mov
rcrb
adc
add
fsubl
das
push
ret
jb
mov
mov
imul
in
push
xlat
imul
dec
sbb
test
fistpl
fsubrl
aaa
pop
ja
xchg
xchg
push
rorl
cltd
cmp
xor
or
shll
xor
add
push
shrb
fadd
pop
adc
and
cmp
jne
pop
adc
push
push
movsb
jns
push
int3
arpl
xorb
je
jmp
push
inc
fs
mov
jne
faddp
lock
adc
shrb
sarl
sub
jbe
xchg
lcall
mov
adc
orb
imulb
call
dec
cmp
bound
mov
hlt
push
xor
stos
pop
out
mov
rcrb
push
mov
and
sbb
mov
in
cld
and
incb
fmul
ja
adc
les
push
mov
push
lahf
cmp
pop
rolb
int
cmpsb
aas
rorl
push
in
loopne
xchg
jg
mov
js
aas
jmp
jne
mov
js
sub
sbb
xchg
das
xchg
andb
pushf
ds
mov
inc
aaa
aaa
dec
push
fisttpl
cmp
js
sbb
into
adc
xchg
jg
pop
adc
popa
sub
test
xchg
in
push
sub
push
push
mov
cmp
jns
addb
popa
fldl
jns
cmp
les
push
mov
sub
sub
push
adc
clc
lea
jbe
or
cmp
cmp
cmp
mov
test
sti
jb
inc
mov
movb
sub
pop
add
and
in
cmp
test
mov
mov
aas
push
xchg
jmp
xchg
cmp
xchg
jle
roll
mov
fwait
dec
outsl
sbb
in
shr
push
scas
pop
dec
shll
pop
inc
movsl
pusha
stos
repz
inc
xchg
or
pop
dec
xchg
sbb
ja
dec
jns
xchg
adc
mov
xor
adc
add
push
xchg
lret
fdivl
adc
jecxz
bound
push
mov
inc
mov
fisubrs
adc
or
fs
jg
sbb
test
mov
shlb
inc
or
pop
cmp
cmc
movsb
data16
in
call
fdivrl
mov
pop
or
arpl
add
fdivl
pop
or
movsb
mov
mov
jns
pop
ljmp
adc
push
test
dec
and
out
cmc
dec
sbb
xor
jmp
xchg
out
and
into
scas
lods
rorl
sbb
in
adc
adc
adc
rorb
add
ret
jb
lret
push
adc
mov
pop
mov
inc
addb
movsl
mov
pop
icebp
lcall
inc
sti
out
ret
and
xor
push
xchg
add
inc
adc
mov
test
pop
repz
mov
add
xor
xchg
cmp
mov
sbb
mov
adc
jno
xchg
xchg
sbb
xor
movsb
ja
dec
lock
jl
mov
jb
mov
icebp
push
std
dec
adc
cmpsl
fdivl
popf
push
jo
xlat
sub
int3
into
and
sub
pop
inc
rcll
push
test
popf
mov
xchg
push
sahf
psubb
test
dec
mov
arpl
std
push
jo
sbb
xchg
lcall
xchg
ss
and
or
test
lret
arpl
xor
inc
jle
lret
int3
xchg
sub
sbb
fistpl
xorb
lret
sbb
jne
pushf
jns
lods
data16
lahf
xor
lds
mov
out
cs
inc
xor
cmp
mov
add
adc
push
bound
fs
xor
jmp
inc
and
movsl
hlt
mov
xor
pop
ss
and
mov
xor
sbb
out
push
add
out
sarl
push
xor
push
and
ror
or
nop
daa
das
leave
push
out
mov
divb
call
clc
mov
xlat
xor
push
jnp
pop
jnp
cwtl
mov
daa
mov
pop
sub
dec
mov
sub
push
xchg
cmp
stc
add
xchg
je
rol
movsl
mov
insl
sub
adc
sub
call
fisubrl
jns
cmpsb
push
fisubl
jg
out
lods
cltd
push
fwait
mov
dec
inc
ljmp
scas
pop
jno
shrb
inc
mov
jns
clc
and
ret
js
lods
sbb
cmp
in
pusha
mov
std
mov
popf
les
sti
xor
push
or
jns
negb
jae
add
idivl
addl
sub
sbb
fdivrs
movsl
mov
ja
ljmp
pushf
mov
pusha
loop
mov
jb
idiv
mov
dec
fcom
repz
and
adc
int3
cmpsb
cld
push
movsb
aad
adc
push
fdivl
mov
jnp
std
sbb
push
jnp
aaa
xor
out
cmp
in
imul
loope
push
pop
add
push
add
adc
mov
mov
out
fs
stos
shll
push
cmp
mov
and
mov
pop
adc
xchg
xor
xchg
ret
jbe
clc
ds
lea
rclb
nop
mov
sti
mov
and
xor
iret
cli
int3
cmpsb
jle
and
inc
into
mov
sahf
cmp
or
push
dec
xchg
dec
or
xchg
pop
in
sub
sbb
xlat
push
cltd
push
das
repnz
rcr
sahf
out
addb
stc
jb
fs
mov
sbb
pop
or
jecxz
adc
xor
fs
scas
adc
cmpsl
call
jp
in
cmp
test
orb
lods
sub
test
cmp
ret
stos
test
push
mov
aam
add
jge
cmpsl
mov
add
fcoml
scas
mov
pop
das
inc
cs
shll
icebp
jge
stc
push
stc
jg
lret
mov
invd
mov
pop
mov
hlt
outsl
nop
shrl
arpl
lods
jl
push
testb
lea
iret
mov
mov
sbbb
cmp
dec
stos
cld
mov
and
jmp
lahf
loop
lret
leave
pop
xor
add
cmp
in
cmp
push
lock
orl
xchg
into
aaa
xor
mov
pop
mov
cwtl
dec
or
adc
loope
sub
prefetcht0
clc
mov
hlt
out
jp
or
cmp
pop
jmp
fadd
mov
cmp
cmp
cli
sbb
or
and
or
cmpsb
mov
mov
enter
daa
adc
popf
inc
xchg
adc
xlat
lcall
out
cmp
aam
mov
mov
test
push
adcb
xchg
push
add
cmp
out
dec
leave
xor
or
push
and
push
mov
mov
clc
std
fsubrs
lods
sbb
leave
mov
cwtl
dec
test
jg
jmp
mov
add
cld
mov
xchg
adc
icebp
out
hlt
stos
in
bound
ljmp
iret
xor
into
mov
xchg
xor
popa
out
iret
es
in
jae
jecxz
pop
add
adc
aaa
dec
fwait
test
push
adc
xchg
mov
add
inc
pop
popa
outsb
inc
aad
mov
stos
mov
lea
xchg
std
testl
cmc
adc
loopne
cmpsl
jg
inc
aad
cmp
ret
into
xchg
cltd
popl
cmp
dec
rorl
movsl
mov
rcl
jl
scas
inc
sahf
mul
cmpsb
mov
adc
loopne
xor
dec
in
mov
mov
sbb
mov
jg
pop
xchg
mov
dec
popf
pusha
or
repz
and
or
rcrl
and
push
ds
mov
bound
cmp
cld
imul
insb
bound
xor
push
in
xlat
mov
fwait
mov
dec
or
mov
lock
shll
jecxz
sub
and
mov
mov
lahf
fimull
mov
mov
movsl
ljmp
jge
in
mov
jecxz
in
lahf
pushf
xor
jle
mov
ss
subl
aad
cld
add
adc
icebp
stos
jo
out
out
sbb
popa
inc
jb
and
imul
inc
out
or
xor
push
mov
dec
mov
push
dec
mov
loope
enter
jnp
adc
lods
push
cmc
fwait
stc
sbb
push
into
ds
cmpsl
mov
jbe
inc
mov
into
cmp
dec
lret
lret
clc
xor
adc
pushf
mov
cmp
mov
inc
test
xchg
adc
hlt
and
daa
xchg
push
imul
pusha
add
mov
xchg
adc
mov
pop
jb
mov
push
or
xchg
mov
mov
mov
popl
and
mov
lret
add
int3
aas
fwait
stos
jmp
mov
mov
sub
je
sub
in
sar
jne
shll
aaa
mov
add
jecxz
or
and
jp
dec
sub
pop
jno
divb
dec
cmp
popf
mov
pop
fwait
pop
add
or
in
jecxz
lcall
scas
outsl
push
mov
sarb
test
outsb
mov
mov
data16
cs
outsl
lea
adc
movsb
outsb
ds
dec
sbb
inc
jge
imulb
jp
push
sti
cld
rcll
ja
in
sbb
jp
iret
ret
mov
push
nop
leave
jp
jb
dec
cmp
stos
out
push
mov
adc
arpl
inc
sub
fsubrs
and
ljmp
insl
jp
stc
inc
dec
and
loop
cmpsb
mov
enter
xor
or
fisubs
stos
clc
and
out
push
mov
imul
xlat
add
adcl
push
ss
jnp
push
xor
xor
dec
imul
mov
xchg
fisubrl
sub
cmp
insl
pop
jmp
mov
lea
cltd
and
sub
xor
push
loop
das
cld
fadds
xchg
sub
loope
inc
pop
add
xchg
dec
mov
dec
shrl
shll
pop
jbe
dec
cmp
dec
jae
and
dec
cld
lods
mov
dec
cmpsl
adc
paddsb
xor
sahf
nop
mov
dec
icebp
adc
push
test
sbb
bound
lds
mov
sbb
js
pushf
iret
imul
jo
and
es
mov
movsl
push
sahf
sbb
adc
rol
ss
xor
cwtl
cmpsl
loope
mov
xor
xchg
xlat
inc
test
data16
mov
inc
push
pop
sub
popa
mov
push
jne
nop
cmp
daa
xchg
js
mov
sbbl
inc
inc
push
mov
daa
das
mov
inc
ja
ds
cmp
dec
popl
pop
dec
call
aam
loopne
push
pop
mov
cmp
push
lods
into
pop
je
repnz
dec
jmp
jp
mov
outsl
cmpsl
out
and
jg
pand
lret
das
sti
aas
jmp
sbb
or
cmp
sub
jnp
imul
mov
jg
pand
lret
das
sti
aas
jmp
sbb
or
cmp
sub
jnp
imul
mov
jg
pand
lret
das
sti
aas
jmp
sbb
or
cmp
sub
jnp
imul
mov
jg
pand
lret
scas
sti
mov
mov
clc
rcll
mov
test
push
mov
sub
movl
movl
movl
movl
cmpl
jne
pushl
call
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
shrb
push
cmp
jo
mov
and
sahf
sarb
sub
mov
inc
sub
popa
or
add
imul
xor
shlb
fwait
sbbb
fildl
push
and
jo
add
arpl
push
xor
stos
rcrb
jecxz
stc
popl
addr16
dec
sub
and
xor
inc
jno
imul
mov
jo
xor
mov
adc
sbb
mov
push
das
inc
mov
mov
test
dec
and
mov
push
outsl
cmp
inc
add
lcall
stos
cmpb
dec
push
inc
and
cmc
sahf
xchg
les
pushf
dec
add
imul
xor
rorb
inc
loope
sbb
pusha
xlat
ret
jle
xor
lret
mov
hlt
outsl
call
inc
xor
test
movsl
inc
mov
lock
jmp
dec
pop
mov
repz
xchg
loopne
fcomp
fmuls
or
ret
push
rcll
ret
nop
sbb
cmp
sub
jo
add
jnp
dec
xor
stos
shlb
xor
jecxz
shll
dec
or
jle,pt
imul
test
bound
hlt
mov
stc
int
les
adc
cmp
je
and
dec
imul
fwait
jecxz
lock
scas
scas
sub
add
pop
inc
pop
adc
dec
xor
stos
sarb
sub
sti
mov
sub
pusha
or
add
jnp
dec
xor
stos
sarb
sub
sti
mov
sub
in
mov
sbb
fs
and
xchg
mov
add
stc
addr16
sbb
neg
jge
lret
add
xchg
mov
fnstenv
xor
sbb
xchg
out
es
addb
inc
jo
mov
fs
std
hlt
out
cs
lods
xor
sbb
mov
add
divb
pop
sub
mov
mov
das
xchg
mov
jbe
rclb
repz
mov
mov
push
mov
xchg
jb
mov
and
sarl
inc
mov
adc
pop
aaa
dec
stc
inc
mov
lds
iret
in
jbe
sbb
ss
pop
sbb
jae
shrl
mov
icebp
movsl
adc
push
jl
xchg
pop
test
mov
insl
adcl
stos
orb
testb
xlat
mov
pop
jnp
mov
js
jns
repnz
dec
sahf
dec
mov
lock
clc
ljmp
lods
jp
out
mov
sub
movsb
or
cmpsb
mov
es
loop
arpl
jno
jge
push
or
dec
jle
jl
dec
addr16
in
mov
addr16
lret
mov
jp
cmp
aaa
fstpt
mov
je
fildl
xchg
jne
mov
sarb
push
clc
pop
pop
mov
ficoml
cmp
mov
pop
mov
in
inc
scas
stc
dec
insb
or
jae
rorl
or
lods
jns
sbb
mov
rep
sub
mov
in
sub
repz
cmp
lea
mov
shrb
addr16
cmp
pushf
pop
fnstenv
or
stos
jecxz
call
sbb
xlat
adc
inc
js
movsl
iret
icebp
test
fwait
xchg
fadd
dec
or
outsl
lods
mov
orl
xor
lods
bound
test
std
sbb
in
sbb
sub
mull
adc
subb
mov
xchg
xchg
pop
insl
pop
data16
or
sbb
adc
mov
dec
arpl
int
mov
aam
push
lcall
push
nop
sbb
addb
in
and
push
cmpsb
or
adc
sti
or
push
sbb
insl
push
mov
jmp
xor
inc
add
inc
lds
jge
xor
mov
and
push
dec
imul
pop
cwtl
push
add
rcrb
push
lahf
movsl
fcmovu
add
sub
push
in
xchg
mov
adc
sbb
sbb
es
push
addl
push
outsl
dec
pop
cmp
clc
inc
or
ret
xor
mov
xor
mov
and
aad
or
popa
iret
mov
add
aam
or
in
divb
sub
add
rcrb
scas
shr
xor
call
ret
pop
fnstsw
in
cltd
jbe
jl
in
sub
lcall
sbb
enter
daa
and
xchg
mov
inc
sub
scas
lahf
int3
fsubrp
cmp
or
xor
add
add
xchg
repz
setge
addr16
subl
push
stos
adc
or
push
sbb
aad
shlb
scas
push
add
shrl
ficoms
and
cmpsb
ss
sbb
jno
into
push
sub
cmpsb
fimuls
xor
jg
or
rorl
sti
xchg
outsl
popf
xor
aam
push
loope
ret
ja
test
jo
jne
and
mov
xchg
and
out
int3
pcmpeqb
into
add
incb
ret
rolb
jae
data16
inc
std
mov
xchg
mov
out
repz
dec
jne
sub
or
dec
push
imull
iret
push
lret
dec
mov
sbb
in
inc
nop
hlt
sbb
pop
stos
lea
std
adc
dec
jnp
aam
mov
aam
js
pop
lcall
pushf
dec
out
loop
cmp
outsb
stos
push
ret
mov
xor
dec
or
add
xchg
fstps
sbb
sub
jno
btrl
jmp
pop
cli
pop
adc
mov
jl
add
xor
mov
push
cli
shl
ret
inc
mov
mov
and
aas
mov
idivl
xchg
xor
cld
jo
fsubl
mov
test
sbb
fstpt
xchg
xorb
out
sarl
scas
mov
push
pop
in
add
jle
and
ss
js
sub
fisttpl
iret
add
adcb
xchg
lea
repz
mov
mov
orb
mov
jae
xchg
js
sub
aaa
mov
lock
bound
aaa
cs
push
pop
inc
sbb
push
and
sbb
sub
in
mov
xor
sete
xor
stos
int
jno
sbb
flds
add
cmp
cmpsl
adc
clc
ret
adc
fsubl
rorb
jmp
aaa
aaa
cmp
mov
sub
xchg
jnp
and
int
iret
adc
in
add
add
lret
mov
jecxz
dec
sbb
mov
fwait
repz
loop
sbb
stos
xchg
xchg
and
dec
mov
adc
fnstcw
movl
mov
xlat
fiadds
push
xchg
cmp
fisubs
fidivl
adc
cmovb
bound
ss
sub
dec
mov
cmpsb
sub
and
movb
mov
gs
xchg
adc
fstpt
mov
pop
sbb
pop
sub
outsb
push
sub
fidivl
xor
mov
jle
sub
int
int
in
rcrb
mov
imul
pusha
icebp
fidivl
test
gs
add
lods
inc
pop
pushf
fbstp
jmp
inc
mov
xor
or
add
fdivr
loopne
xor
fildl
lret
movsl
pop
or
outsw
je
jns
subb
cmp
sbb
pop
jecxz
lea
inc
clc
das
sahf
push
cmc
test
sub
mov
mov
xlat
cmpsl
in
cli
das
les
sbb
push
sub
cmp
into
cmp
push
push
or
mov
das
mov
cmpsb
loope
pop
jb
dec
push
mov
jnp
test
aam
or
cwtl
movsb
adc
movsb
rcl
push
lock
lock
push
mov
nop
sub
test
ret
mov
sub
cltd
notb
push
cmp
jmp
aas
ljmp
xor
inc
lret
cmpsl
add
adc
addr16
mov
aad
push
add
mov
gs
cs
pop
jno
jge
iret
test
add
push
sbbl
xchg
mov
and
xchg
fwait
xor
mov
imul
test
pop
jne
mov
pushf
mov
push
jb
inc
pop
in
mov
pop
aas
aas
and
inc
push
jl
test
cmp
jp
xor
adc
scas
lret
fistpll
sub
lcall
mov
cmp
test
imul
cwtl
sbbb
cltd
dec
mov
add
jg,pt
inc
adc
pushf
jno
in
mov
mov
push
ret
pop
insl
mov
inc
jecxz
xchg
cmp
or
mov
cltd
stos
dec
or
or
inc
loope
sbb
push
mov
add
out
lret
jge
add
andb
push
dec
orb
int
push
out
cmpsb
dec
xchg
rcll
sbb
adc
mov
dec
movl
pop
aaa
sarl
shl
pop
sub
movsb
ret
iret
ds
outsb
sub
clc
test
mov
test
icebp
outsl
stos
push
test
jle,pn
and
lds
ds
cmp
mov
fidivrl
leave
daa
ficoml
inc
push
movsb
aaa
aas
in
mov
cmp
dec
cwtl
sub
lret
mov
aam
adc
jg
mov
push
adc
stos
push
insl
cmp
sbb
add
movsl
dec
sbb
test
or
sbb
push
int3
jo
sahf
test
dec
lahf
sub
sub
push
mov
pop
jmp
enter
fstpl
rcll
pop
inc
cmp
xorl
mov
int
std
xchg
adc
xor
push
or
in
jb
repz
stos
lea
imul
push
cmpsb
push
and
adcb
in
pop
out
enter
int
jbe
dec
and
dec
push
push
mov
repz
outsl
mov
aaa
test
pop
hlt
dec
scas
fdivl
adc
sahf
xor
fcmove
fidivrl
fs
test
lret
leave
lahf
out
and
andb
into
es
fimull
cmpb
inc
fdivr
or
mov
pop
scas
jns
inc
sbb
and
test
cmp
inc
adc
xorb
jno
std
addr16
lcall
into
xchg
dec
xor
pop
mov
jmp
sahf
ja
mov
push
mov
sbb
sbb
jmp
and
pop
mov
push
sti
aam
outsb
outsl
int
xor
movb
push
mov
cmpl
imul
clc
jns
or
jbe
bound
in
stc
ljmp
push
int
xchg
dec
in
xor
orl
in
mov
das
mov
lds
adc
cmpsb
sbb
icebp
xor
pushl
inc
arpl
scas
out
fwait
stc
xchg
mov
mov
sbb
es
mov
insb
mov
push
xor
lods
mov
cmpsl
inc
cmp
add
les
imul
sub
nop
incl
cmpb
fwait
and
dec
es
or
hlt
pop
lods
mov
stc
clc
clc
mov
ss
int
test
shl
ja
pop
xor
les
push
push
int
sbb
das
jecxz
inc
mov
inc
inc
push
mov
xor
jp
test
imulb
adc
lret
bound
std
xchg
jge
xor
sbb
idivl
xor
add
fsubrp
sbb
cwtl
dec
mov
or
lret
cmc
bswap
jmp
inc
pop
fbld
aas
cli
scas
cmp
iret
pop
mov
jmp
out
mov
addb
sti
push
movsl
fimull
lods
mov
push
push
inc
cmp
xor
aam
hlt
add
popw
push
push
mov
add
iret
mov
in
cmp
lahf
inc
jp
xchg
xor
outsb
lcall
fldt
fildl
pop
or
out
mov
mov
mov
cmp
clts
or
movsb
pop
subb
xchg
fistl
cmp
scas
daa
jl
fcomi
aas
push
sub
xchg
and
sbb
mov
jp
xor
jne
cmp
sbb
xchg
lret
inc
std
andl
cmp
cmpsl
dec
into
adc
pushf
rclb
xchg
aam
test
rorl
mov
mov
xchg
dec
add
fucomp
sti
neg
jo
je
and
xchg
push
push
jmp
sbb
push
pushf
cmp
stos
into
ds
loop
xchg
sub
subl
mull
shlb
cmp
stos
cli
sbb
enter
dec
mov
mov
mov
pop
out
mov
adc
pusha
cmpsb
ficoms
push
cmp
xchg
daa
cmp
and
fadd
leave
mov
xor
enter
imul
cmp
iret
aas
in
inc
lods
pusha
popf
divl
in
mov
or
imul
ret
repnz
or
push
pop
aas
pop
inc
ret
sbb
jl
sbb
pop
notl
inc
mov
pop
push
fistpll
xchg
test
cmp
adc
dec
dec
pop
mov
ret
adc
or
hlt
jb
jmp
or
dec
or
push
xor
dec
fldcw
push
or
adc
mov
lcall
mov
pop
or
sbb
test
cld
sahf
das
jl
xchg
repz
push
aam
test
push
aaa
mov
addr16
pop
add
lcall
sbb
mov
call
icebp
scas
mov
outsl
cwtl
push
lods
sti
add
jmp
dec
xor
lods
pop
inc
in
add
cmp
mov
push
in
sti
lds
cmp
adc
pop
sbb
out
sbb
mov
aad
out
loop
xchg
jge
cmpsl
sbb
in
lock
test
or
mov
loopne
cld
mov
gs
cmpsb
jnp
sbb
sahf
jmp
in
inc
sbb
sub
pop
and
outsb
test
outsl
jp
ljmp
pop
add
dec
stos
dec
popl
xchg
push
jns
icebp
outsb
sub
in
lods
popf
push
sub
and
jno
cmpl
pusha
lret
and
movsb
mov
addr16
dec
add
xor
std
jp
inc
clc
fidivl
test
es
mov
ss
lods
xor
lds
pop
xchg
cmp
push
test
ds
std
cmp
push
test
sub
pop
jge
lcall
inc
add
inc
inc
cmpsl
add
dec
and
test
js
inc
lret
add
scas
xor
push
mov
mov
lahf
jnp
push
lods
sub
sub
and
cmpsb
fildl
dec
in
sbb
loope
sbb
jg
pop
dec
xor
fsub
test
fildll
test
and
jl
sti
lret
jno
sbb
aaa
lods
cmp
sub
into
pop
add
leave
loope
stos
mov
imul
fcoms
out
faddl
fidivrs
and
fs
push
and
xor
icebp
xchg
out
jno
loope
pop
ret
dec
ja
mov
fidivl
aam
jmp
enter
jl
int3
and
cwtl
dec
pushf
in
jns
mov
in
sub
das
dec
dec
or
repz
mov
mov
add
aaa
loop
fcmovnb
fsub
cmpb
pop
repnz
mov
mov
mov
add
das
adcl
stos
leave
mov
pop
cli
pop
and
ss
addr16
jp
pop
dec
outsl
shlb
sbb
leave
ret
cmp
pop
xchg
push
pop
xor
dec
push
ficompl
pop
dec
mov
inc
test
adc
cmpsl
xchg
subb
fildll
scas
shlb
mov
lahf
test
mov
cmp
mov
aas
cmp
adc
pop
pop
loopne
and
pop
mov
mov
dec
mov
nop
ret
out
leave
lret
iret
add
cmc
ds
ds
xor
adc
jae
lcall
rorb
cwtl
jecxz
mov
cs
xor
mov
pusha
arpl
mov
test
std
mov
push
add
cmp
aam
sahf
out
mov
ljmp
into
out
or
int3
inc
addr16
and
pop
sub
add
jg
jne
jp
pop
out
mov
cmp
pop
xlat
leave
mov
repnz
or
and
mov
sub
mov
mov
insb
loope
rcr
cltd
xor
cli
cwtl
xchg
mov
aad
pop
pop
adc
mov
push
adc
lea
out
jns
inc
adc
adcb
add
and
mov
pop
je
or
jg
idivl
push
lret
xlat
adc
into
lock
in
inc
iret
lods
pop
jp
icebp
repnz
and
inc
and
mov
adcl
mov
subb
aaa
mov
popf
or
push
sti
push
or
xor
movsb
call
int3
mov
cmp
sbb
std
xchg
cld
sbbl
add
insl
jp
sbb
jg
cmp
cmp
xor
out
fisttps
xchg
xchg
movsl
add
xchg
shrl
push
sahf
dec
sbb
add
movsb
sub
adc
adc
mov
fld
loopne
sub
cmpsl
dec
rcrl
xor
daa
cli
jmp
pop
mov
push
fs
mov
or
inc
mov
fidivl
lahf
mov
inc
iret
ss
enter
insl
movsl
pop
push
ds
jbe
call
ret
jo
and
stos
adc
cmp
outsl
cmp
in
sub
fadds
ljmp
inc
or
dec
xor
mov
stos
push
movsb
rcrb
sbb
add
xor
outsb
cmp
xor
cltd
mov
aas
cmp
cmp
push
jno
cmp
sahf
add
movsl
int3
neg
iret
pop
mov
loop
dec
add
test
cmpb
sbb
mov
cwtl
rolb
xchg
jbe
pop
fidivl
cmp
out
or
out
sbb
pop
subb
sub
idiv
adc
pusha
add
loope
outsb
or
xchg
sub
call
jge
xchg
xchg
sub
std
stc
xchg
cmp
cltd
pop
lods
movsl
loop
pushf
bound
push
xchg
mov
cmp
and
sbbb
out
in
in
xor
loop
in
jns
xor
add
sbb
sahf
jp
outsb
shrl
jge
std
sub
std
xchg
shl
and
addb
cwtd
push
inc
mov
leave
pop
sbb
ret
sti
mov
cli
jo
cmpsl
inc
ljmp
mov
dec
roll
test
xchg
xchg
push
nop
ds
call
mov
int3
inc
mov
fimull
add
lret
xchg
pop
ret
sub
fucomi
and
rcr
push
stos
jb
movsb
add
mov
push
js
jbe
mov
mov
fwait
in
dec
jp
xor
add
lret
movsl
adc
fmul
insl
jo
cwtl
mov
cmp
leave
inc
add
flds
pusha
sbb
jmp
xchg
scas
mov
jmp
shlb
jo
in
cmp
cld
xchg
or
add
push
jns
xor
xchg
add
ret
and
dec
ja
insb
fldt
icebp
ret
xor
stos
pop
pop
fwait
and
sahf
sahf
mov
xchg
jno
push
lcall
sbb
cltd
sub
xchg
outsb
pop
xor
and
ret
mov
or
cmpsb
daa
cld
cmc
loope
push
in
jbe
mov
inc
outsl
xchg
mov
jbe
jle
in
hlt
nop
xor
out
or
repnz
mov
mov
jmp
dec
mov
adc
jbe
xchg
jnp
xchg
cs
aaa
cs
dec
fists
xchg
sbb
mov
rorb
adc
and
cmp
adc
cltd
xor
leave
lea
push
enter
aaa
push
rcll
lret
sbb
xchg
mov
mov
jmp
outsl
lcall
xadd
cmpsl
adc
call
jbe
fisubs
inc
add
stc
push
aas
sub
insb
vpshufhw
cmpsb
mov
jne
or
push
fdivl
repnz
subl
lock
into
pop
test
ret
mov
aam
ficompl
scas
cmp
push
and
inc
mov
dec
inc
push
in
fcmovnb
push
lods
dec
movsl
ja
movsl
jmp
jg
mov
push
xchg
fimull
in
pop
push
roll
jl
or
and
stos
fdivs
xchg
pop
fmull
jns
push
mov
test
or
xor
lock
add
test
ret
rclb
sub
ja
scas
test
lret
push
stos
cli
imul
pop
jnp
cmp
adc
nop
jle
jl
lret
mov
jecxz
test
dec
dec
or
sub
lahf
std
inc
pop
cmp
adc
cmp
leave
adc
adc
shlb
dec
test
mov
inc
out
cmpb
addl
push
inc
push
cmc
js
movsl
mov
loop
out
adc
cmp
mov
pop
push
addl
in
rcll
jae
pop
inc
int3
add
sub
mov
ud0
mov
daa
add
push
jge
hlt
pop
cmp
test
push
and
add
sbb
std
not
icebp
ds
xchg
fidivl
jl
xchg
and
push
push
and
aas
jnp
rcr
mov
pop
cmp
imul
bound
in
orl
inc
nopl
and
mov
test
out
sahf
shll
mov
fwait
jecxz
jg
xchg
aaa
out
mov
sahf
scas
lret
imul
lret
xchg
icebp
mov
push
mov
lcall
repnz
pop
jne
jle
scas
pushf
js
mov
ret
add
mov
xor
test
cld
mov
jge
push
pop
daa
xchg
fdivl
and
jne
je
jo
add
jnp
dec
xor
stos
sarb
sub
sti
mov
sub
pusha
or
add
jnp
dec
xor
stos
sarb
sub
sti
mov
sub
pusha
or
add
jnp
dec
xor
stos
sarb
sub
sti
mov
das
push
aas
popa
pshufw
imul
and
fwait
shrb
in
mull
test
dec
movsb
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
shl
add
cld
repz
and
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
lahf
hlt
add
mov
add
test
add
jl
add
je
add
insb
hlt
add
fs
add
pop
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
hlt
add
int3
hlt
add
loopne
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
pop
cmc
add
js
add
mov
inc
add
rorl
jmp
or
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
hlt
cmc
add
cld
cmc
add
add
add
or
add
adc
add
sbb
add
and
add
aaa
testb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
push
testb
pop
testb
push
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
adc
add
cmp
add
pusha
testl
push
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
fcomip
add
int3
testl
add
add
lods
testl
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
clc
testl
add
add
and
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
cwtl
clc
add
mov
clc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
xor
add
cmp
add
inc
stc
add
dec
stc
add
push
stc
add
pop
stc
add
fs
add
ja
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
nop
stc
add
cwtl
stc
add
test
add
mov
inc
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
