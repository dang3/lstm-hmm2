and
sub
mov
jmp
jne
push
jmp
inc
jmp
xorl
call
xor
sub
or
xor
xor
mov
push
push
mov
mov
jmp
mov
mov
mov
jmp
add
insb
and
dec
sub
shl
mov
and
sub
mov
shl
or
mov
mov
jmp
push
jmp
jmp
addl
push
push
jmp
inc
leave
call
inc
call
push
dec
push
subl
call
mov
add
or
add
or
rol
mov
movzwl
movzwl
add
jmp
sub
addl
jnp
add
test
push
push
lea
mov
add
and
mov
jmp
jmp
add
and
cmp
into
mov
lea
sub
and
xor
ror
or
dec
mov
xor
test
mov
mov
jmp
add
push
call
dec
shl
shl
shr
or
mov
jmp
movb
movb
movb
movb
movb
movb
movb
movl
jmp
jne
cmpl
jne
add
push
jmp
call
jmp
call
push
call
push
push
xorl
jmp
mov
test
ror
mov
add
add
xor
cmp
mov
mov
jmp
call
test
jne
xor
jmp
jmp
nop
mov
xor
add
add
and
sub
mov
mov
inc
add
mov
add
and
mov
add
mov
jmp
test
jne
and
mov
mov
mov
xor
xor
and
add
mov
lea
jmp
ret
or
add
mov
shl
shr
or
and
mov
jmp
add
ret
mov
xor
test
je
movsbl
jmp
and
add
jmp
lea
jmp
add
add
push
mov
inc
mov
mov
sub
test
jmp
push
push
call
call
xor
inc
mov
xor
mov
xor
mov
cmp
jmp
and
mov
mov
movzbl
jmp
ret
jmp
test
jne
add
ret
sub
sub
or
mov
push
jmp
ret
leave
push
ret
pop
pop
leave
int3
leave
addl
call
jmp
add
add
mov
jmp
add
add
add
sub
mov
push
push
push
push
push
jmp
push
pop
jmp
call
call
xorl
jmp
jne
cmpb
jmp
push
push
push
movb
movb
jmp
mov
push
lea
ror
and
mov
sub
test
jne
jmp
mov
test
jne
add
ret
shl
sub
mov
sub
mov
jmp
and
cmp
jne
jmp
lea
mov
and
or
mov
shr
and
add
test
je
or
shl
and
mov
mov
jmp
add
add
add
add
sahf
add
add
ror
ror
mov
jmp
add
mov
lea
or
mov
shr
and
lea
mov
or
mov
jmp
rol
sub
mov
add
sub
dec
add
mov
mov
shl
mov
rep
movzwl
jmp
shr
lea
jmp
cltd
and
add
jmp
add
jmp
add
add
add
repz
mov
test
je
jmp
test
je
push
push
mov
jmp
mov
add
add
mov
jmp
jne
add
ret
sub
rol
rol
mov
jmp
jne
nop
nop
and
shl
sub
mov
nop
push
nop
jmp
pushl
jmp
jne
jmp
add
add
jmp
cli
pop
ror
sub
dec
mov
sub
mov
jmp
movw
movl
call
cmpw
jmp
mov
mov
add
add
push
mov
jmp
test
jne
pushl
jmp
call
lea
call
mov
rol
sub
dec
add
xor
mov
jmp
test
lea
jle
inc
ror
mov
jmp
lea
nop
movzwl
shl
mov
jmp
test
jmp
add
add
in
dec
cmp
in
or
add
jmp
shl
and
or
mov
jmp
sub
cmpl
lea
je
push
push
mov
mov
sub
shr
jmp
jle
jmp
shr
mov
mov
mov
add
jmp
inc
inc
mov
add
test
je
jns
movzwl
jmp
push
jmp
leave
jmp
inc
subl
call
test
jne
add
ret
shr
xor
sub
dec
mov
pop
ret
add
add
add
leave
sub
jmp
sub
test
mov
jmp
add
add
sub
add
cmp
mov
jl
sub
mov
and
mov
inc
mov
jmp
push
jmp
mov
lea
push
push
call
add
mov
jmp
pop
ret
add
add
add
push
rol
mov
sub
lea
push
jmp
push
push
sub
xor
mov
mov
xor
jmp
jne
pushl
pushl
ret
add
add
add
rorb
rorb
insl
cld
decl
mov
add
mov
jmp
add
add
cwtl
addl
sti
call
add
pusha
mov
call
popa
jmp
ret
add
add
add
mov
add
add
jmp
add
movl
movl
movl
movl
movl
movl
movl
movl
movl
push
call
int3
int3
push
push
mov
xor
test
push
mov
mov
mov
jmp
cmp
je
mov
and
sub
xor
mov
jmp
add
ret
or
mov
add
lea
push
sub
mov
mov
push
jmp
call
subl
jmp
pop
or
shrb
and
mov
add
test
jne
add
cmpl
jne
jmp
push
push
call
push
jmp
call
push
call
xorl
mov
jmp
jne
xor
mov
movzbl
add
mov
jmp
jne
movzbl
add
jmp
rol
add
xor
mov
test
jmp
mov
add
sub
rol
shr
dec
mov
call
xor
add
and
mov
call
nop
nop
nop
nop
nop
push
jmp
addl
push
jmp
dec
dec
dec
call
call
addl
push
call
jmp
pop
pop
pop
mov
pop
ret
add
add
add
clc
add
add
add
shlb
ret
hlt
jmp
call
push
jmp
jmp
push
pop
leave
jmp
subl
mov
jmp
lea
and
sub
shl
mov
shr
and
add
test
jne
mov
mov
jmp
ror
or
or
mov
mov
mov
inc
add
add
xor
mov
mov
shr
and
add
test
jmp
insl
pop
dec
jne
cmp
je
add
cmp
jl
pop
jmp
push
pop
pop
mov
je
inc
and
and
mov
sub
test
jne
movzbl
jmp
xor
pop
and
or
mov
ror
mov
jmp
and
mov
inc
ror
mov
call
and
mov
sub
xor
mov
call
and
shl
mov
add
jmp
sub
jne
jmp
test
jle
xor
rol
or
add
mov
lea
sub
jmp
jae
out
call
push
jmp
call
ret
push
subl
mov
call
push
jmp
nop
call
push
subl
mov
call
add
push
jmp
inc
call
call
pop
leave
ret
addl
jmp
push
std
sbb
into
sub
jne
mov
sub
subl
jne
test
jmp
lea
push
push
jmp
call
pop
xorl
push
jmp
call
int3
push
xorl
mov
movb
call
cmpb
jmp
add
mov
lea
and
xor
mov
and
xor
mov
shr
and
add
test
jmp
pop
ret
or
mov
movzwl
dec
shr
mov
jmp
pop
pop
pop
mov
mov
pop
add
ret
add
add
add
dec
add
cmp
nop
nop
nop
nop
nop
jne
pop
pop
pop
mov
pop
ret
jmp
mov
mov
jle
jmp
iret
ror
jne
add
push
jmp
push
nop
push
push
addl
call
pop
pop
mov
pop
jmp
popl
xchg
je
xor
movl
shl
sub
xor
mov
sub
test
jne
movzbl
add
jmp
sti
mov
add
pop
xor
mov
mov
pop
ret
add
add
add
ljmp
roll
adc
roll
in
mov
pop
ret
add
add
add
or
inc
and
sub
and
mov
shr
and
add
subl
lea
jne
jmp
push
adc
mov
pop
ret
mov
ret
add
add
add
and
test
sub
js
sub
jne
mov
test
mov
jle
inc
rol
ror
mov
nop
nop
nop
nop
nop
push
jmp
dec
in
or
or
or
or
mov
sub
mov
mov
add
nop
nop
nop
nop
nop
jmp
jmp
fdivrl
or
add
mov
ror
mov
pop
add
sub
xor
or
or
mov
xor
add
sub
jne
jmp
imul
add
and
pop
sub
or
and
and
sub
mov
pop
ret
add
add
add
add
add
mov
mov
mov
and
add
add
shr
nop
nop
nop
nop
nop
mov
mov
je
test
je
jmp
lea
nop
nop
nop
nop
nop
dec
mov
sub
add
nop
nop
nop
nop
nop
sub
mov
mov
jne
or
mov
mov
nop
nop
nop
nop
nop
mov
nop
nop
nop
nop
nop
movl
jmp
movl
mov
movl
jmp
nop
nop
nop
nop
nop
lea
call
cmpl
nop
nop
nop
nop
nop
jne
nop
nop
nop
nop
nop
cmp
jne
call
test
nop
nop
nop
nop
nop
mov
nop
nop
nop
nop
nop
je
jmp
lea
shr
and
mov
nop
nop
nop
nop
nop
sub
add
sub
mov
mov
jne
mov
jmp
nop
nop
nop
nop
nop
sub
jmp
nop
nop
nop
nop
nop
sub
and
and
add
rol
mov
mov
movzbl
shl
add
nop
nop
nop
nop
nop
add
lea
xor
xor
or
sub
mov
nop
nop
nop
nop
nop
mov
call
nop
nop
nop
nop
nop
cmp
jb
nop
nop
nop
nop
nop
add
cmp
jb
add
cmp
nop
nop
nop
nop
nop
jae
add
test
mov
je
sub
mov
sub
nop
nop
nop
nop
nop
mov
mov
add
nop
nop
nop
nop
nop
sub
jne
mov
mov
nop
nop
nop
nop
nop
ror
mov
dec
and
xor
sub
dec
mov
sub
and
add
add
and
mov
movl
jmp
mov
mov
add
nop
nop
nop
nop
nop
add
nop
nop
nop
nop
nop
mov
movl
mov
cmpl
je
pop
xor
mov
sub
pop
nop
nop
nop
nop
nop
pop
xor
mov
pop
ret
add
addl
add
add
add
addb
loopne
add
rolb
add
incb
add
add
add
dec
addl
add
addl
add
add
add
addb
loopne
add
rolb
add
incb
add
add
add
dec
addl
add
je
jb
arpl
jae
push
add
gs
je
inc
imul
gs
jns
je
insl
dec
outsb
outsw
add
add
inc
gs
jns
je
insl
dec
gs
imul
push
jns
je
insl
push
popa
jb
insl
gs
jb
dec
outsb
outsw
inc
add
inc
jb
push
outsl
add
add
arpl
add
adc
push
jb
outsb
je
insb
addr16
js
adc
adc
add
add
add
add
add
add
inc
jle
add
add
add
mov
pop
push
cmp
add
cwtl
add
test
add
call
xor
test
cmp
cmp
cmp
enter
pop
xor
xor
cmp
cmp
sbb
and
fnstenv
loopne
out
out
xor
xor
xor
xor
cmp
cmp
bound
ds
add
or
or
cmp
cmp
outsb
cmp
cmpb
cmp
cmp
push
xor
imul
arpl
push
imul
xchg
mov
lahf
movsl
lods
xchg
mov
insl
and
dec
adc
jne
mov
nop
mov
xchg
xchg
xchg
xchg
lcall
mov
out
.byte
.byte
