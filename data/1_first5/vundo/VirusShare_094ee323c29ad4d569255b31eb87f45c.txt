pop
stos
stos
xchg
add
lcall
outsb
add
dec
dec
daa
sbb
and
nop
mov
add
in
mov
testl
icebp
dec
pop
push
add
jne
in
ret
sub
adc
call
call
int
mov
je
je
adc
call
pop
jae
jae
adc
or
sub
or
or
cmp
add
inc
adc
dec
dec
adc
imul
sub
or
dec
je
imul
adc
sbb
or
pop
sbb
cmp
and
jnp
push
sub
push
or
sbb
xorl
iret
mov
sbb
lea
mov
add
pop
adc
cmp
or
add
sub
jne
mov
lock
psubq
pushf
jnp
out
xor
lcall
xor
mov
imul
push
adc
inc
mov
xlat
cmp
adc
gs
fs
stos
adc
fdivs
mov
cmp
jnp
mov
sbb
call
jae
mov
adc
xlat
pushf
inc
add
jmp
leave
negl
sub
xchg
adc
jnp
iret
fcmovnbe
push
das
xchg
ret
jae
cmp
movsl
ss
inc
pop
xor
sbb
out
jo
mov
jbe
sbb
jae
scas
add
iret
mov
dec
push
arpl
ret
and
or
out
inc
lahf
stos
mov
pop
testl
int3
call
insb
adc
mov
les
mov
sbb
or
dec
ret
movl
dec
adc
jb
cld
fcomi
sahf
imul
push
add
fdivrl
cmp
and
jnp
lret
std
xchg
inc
cmp
out
cmp
lcall
out
lahf
test
or
pop
jnp
sti
push
dec
add
into
mov
sbb
shl
pop
sub
mov
stos
add
cmpl
idivl
sub
ret
mov
cs
into
cmp
xchg
xchg
pop
idivl
jo
scas
adc
xchg
in
jmp
jnp
rcrb
adc
fsubr
pop
or
in
test
fnstenv
fsubp
in
out
out
ret
jp
cmp
pop
sbb
jae
leave
leave
enter
sbb
outsl
pop
adcb
iret
or
lret
mov
mov
jecxz
cmp
in
jae
ret
nop
mov
lahf
or
dec
js
clc
fwait
repz
mov
jmp
dec
cmpsl
lret
je
popf
push
sub
in
in
lock
adc
jecxz
sbb
cltd
cmpsb
fiaddl
loope
scas
cmp
and
inc
xlat
jg
add
jo
sub
cmp
jae
pop
stos
inc
jecxz
pushf
jae
loope
movsb
daa
mov
jae
or
cwtl
or
jecxz
js
xor
ret
fsubl
mov
aad
lods
lds
icebp
fwait
add
mov
js
xor
mov
add
mov
lds
and
push
add
lods
xchg
add
sbb
test
sahf
mov
adc
mov
popl
push
jns
insl
mov
lret
je
jno
aam
insb
sbb
or
fnop
lds
mov
inc
scas
mov
jge
je
dec
fsubl
cmp
pop
addb
ret
jnp
orl
cmp
jae
imul
and
mov
inc
mov
lds
push
xchg
mov
lock
stos
or
cmpsl
xor
add
mov
loopne
or
jmp
fdivl
insb
fwait
cmp
xlat
cmpsl
dec
fsts
inc
lods
pop
test
pop
mov
mov
dec
addl
dec
arpl
clc
lods
out
adc
pop
jnp
or
sub
ret
sbb
mov
jnp
jge
in
popa
cmp
psllq
mull
icebp
imul
ficoml
les
push
dec
cmp
jle
pop
daa
push
pmaxub
cltd
xchg
cli
mov
pop
mov
and
fsubl
mov
push
pop
repz
add
adc
das
and
adc
shrb
mov
cmp
int3
loop
add
and
push
sbb
pop
and
rolb
arpl
lds
cmp
mov
adc
jmp
pop
movsl
xchg
add
aaa
jecxz
enter
push
cmpsl
divl
inc
inc
or
and
push
xchg
mov
push
pop
es
out
icebp
and
lret
sub
cmp
into
mov
jecxz
bound
jmp
or
cmc
or
adc
cmp
xor
negb
scas
dec
ja
sahf
jnp
ret
daa
push
pop
movsb
xchg
mov
addr16
loopne
pop
fwait
pop
mov
movsb
pop
sbb
add
icebp
lcall
test
xchg
push
push
loope
push
mov
outsb
inc
cmp
filds
pop
cmp
test
inc
movsb
or
ja
mov
cwtl
jno
das
shrb
lret
popf
cmp
jno
mov
mov
test
pop
mov
pop
sbb
lock
jne
xchg
mov
fcoml
out
in
loope
shl
xor
mov
dec
mov
shrb
xor
push
mov
cmp
ficomps
jecxz
inc
push
mov
loope
jnp
gs
jmp
mov
dec
mov
sarl
sbb
add
dec
pop
test
je
lock
out
lock
imul
push
out
inc
shrl
dec
mov
sbb
xchg
cmp
and
pop
pop
inc
push
push
jnp
loopne
jmp
and
pop
push
lods
out
and
popa
inc
jae
mov
fdivr
mov
mov
or
cmp
jnp
inc
cmc
mulb
or
call
lods
mov
mov
xchg
jnp
stos
sbb
je
cmp
imul
mov
pop
push
sbb
xlat
and
mov
jnp
cmp
adc
or
out
lock
loop
clc
or
jmp
pusha
push
mov
mov
subl
nop
js
adc
push
mov
mov
fwait
pop
add
mov
or
clc
aam
rcl
icebp
lcall
loopne
inc
pop
xor
loopne
cmp
push
in
lds
sahf
push
jnp
sub
testb
out
or
aam
shl
test
adc
fiadds
push
xor
jl
jg
arpl
sbb
pop
inc
pop
mov
test
pop
bound
push
pop
rclb
adc
pop
add
fs
shr
icebp
jmp
fisubs
mov
push
mov
imul
cmp
shll
ret
flds
test
es
outsl
mov
ja
iret
add
imul
pop
mov
push
xor
lock
xor
cmp
ficomps
pop
test
sub
cmp
stos
inc
adc
ljmp
cmp
ds
jno
scas
cmp
jns
loope
mov
out
test
mov
sbb
dec
outsl
divb
out
cmc
push
and
call
shr
pop
mov
ja
loope
xor
cwtl
push
mov
mov
sub
xor
push
pop
push
lods
sbb
movsb
inc
lods
cmpsl
push
jo
or
add
mov
pop
jnp
mov
mov
push
mov
and
leave
push
movhlps
jb
add
mov
pop
in
fnstenv
fwait
rorb
negl
adc
mov
mov
out
xor
cltd
pop
sbbl
je
sub
loope
jp
rol
and
or
fdivrl
and
cltd
pop
mov
jno
ljmp
pop
inc
add
xor
call
movb
popa
xchg
fcomps
jmp
inc
push
xor
sahf
loope
test
test
cmp
icebp
fdivrl
inc
mov
and
xorb
js
push
js
cmp
sub
inc
xchg
adc
dec
jo
add
test
je
jecxz
lock
cs
mov
push
cli
call
and
add
cmp
in
dec
pop
pop
mov
into
leave
mov
add
and
insl
cmpl
add
int3
ljmp
mov
adc
testl
push
mov
pop
enter
cmpsl
mov
sahf
cmp
fsubp
imul
std
push
jne
adc
jecxz
mov
mov
xlat
das
inc
xchg
push
sbb
dec
stos
scas
or
dec
imul
pop
xor
push
jg
rorb
imulb
ljmp
sbb
into
sub
ret
jg
xor
dec
into
dec
into
aaa
fsts
xchg
int
mov
and
rcrb
mov
sbb
mov
stc
push
adc
inc
outsb
jns
add
hlt
and
les
rol
and
lds
dec
mov
popf
fldl
out
bound
ret
leave
scas
sbb
icebp
andb
out
mov
sub
scas
out
cwtl
cmpsl
test
push
xor
fidivs
out
icebp
mov
mov
dec
ret
mov
push
shr
jle
shlb
adc
lods
add
inc
dec
mov
movsb
or
mov
xchg
xor
rolb
xchg
cli
jnp
je
and
sub
mov
adc
dec
add
pop
mov
adc
nop
outsl
pushf
shrb
xchg
cmp
mov
push
sahf
or
fnstcw
imul
pop
rorb
popf
bound
lock
and
bound
fidivs
shl
stos
aas
adc
fdivs
jmp
sub
fwait
lock
ljmp
popl
mov
or
cld
fisubs
out
les
in
jmp
add
sbb
idiv
daa
dec
adc
pop
ds
adc
jp
and
ja
add
loope
lcall
aaa
jecxz
sti
int
hlt
cmpsl
outsl
push
pop
push
je
fimuls
bound
jp
jp
mov
dec
scas
imul
push
jns
or
lods
shll
call
mov
fsubrl
mov
adc
and
pop
xchg
mov
outsl
jbe
jp
add
ja
aam
pop
popf
mov
movsb
jne
pusha
icebp
cmp
int
stc
xor
inc
xor
or
loopne
cmp
lods
out
call
pop
jo
ficomps
filds
pusha
and
mov
icebp
leave
adc
js
jnp
sbb
mov
negl
sbb
inc
and
iret
mov
ss
sarb
popf
adcl
cmp
or
orl
or
pop
and
xlat
arpl
int
fwait
jne
pop
inc
shrl
fidivs
sbb
js
or
je
es
or
or
fdivrl
dec
in
dec
fimuls
jnp
gs
sbb
push
or
jnp
nop
pop
sarb
sub
aam
shll
rorl
add
jp
jp
push
pop
bound
lds
inc
lcall
jl
iret
sbbl
popa
jp
cmp
push
push
cmovle
fmulp
adc
add
lret
adc
jmp
push
das
cmp
jae
or
push
bound
add
pop
dec
in
dec
cli
jo
mov
cmpl
out
rcll
mov
int3
jb
popa
cmp
loop
and
xor
bound
ja
or
inc
pop
psraw
popf
fwait
adc
mov
add
js
rcll
xchg
inc
jle
das
push
test
sarl
sbb
les
inc
repnz
mov
cmp
push
mov
mov
sarb
jmp
pop
pop
lds
dec
aad
cmpsb
add
mov
xchg
mov
push
adc
repnz
add
sbbb
sarl
pushf
loop
test
mov
cmpsl
sbb
sub
call
jnp
rorl
rorl
sarb
jle
popf
xchg
les
rol
adc
cmp
mov
pop
sbb
jecxz
and
imul
loope
jecxz
mov
and
mov
push
cmp
adc
out
push
stc
and
pop
cmp
addl
mov
ds
leave
int
fisubl
sub
inc
cmp
out
adc
int
lcall
inc
loopne
xchg
clc
clc
aaa
test
inc
adc
xor
lds
push
movsb
or
iret
adc
bound
dec
fwait
out
adc
in
inc
scas
or
stc
jmp
xor
cld
lret
in
sub
mov
dec
mov
adc
mov
push
lock
lds
fwait
push
or
adc
push
ljmp
pusha
out
mov
js
stos
mov
pop
sbb
push
int3
in
call
fcoms
daa
ret
lcall
lea
xchg
xchg
flds
mov
sar
repnz
xchg
sbbb
add
jp
mov
incb
xor
and
push
arpl
and
pushf
fcompp
scas
outsl
popf
cmc
pushf
cmp
js
pop
in
cltd
jge
sti
insl
popa
jo
adc
jmp
pusha
inc
js
push
lret
xchg
dec
popa
fwait
test
inc
mov
pop
push
das
les
mov
pusha
and
jp
cmp
mov
xor
xlat
cmp
cmpsl
xchg
mov
mov
das
js
das
out
mov
movsb
dec
dec
inc
jp
pop
cmp
dec
cmpxchg
and
inc
xchg
ljmp
xchg
mov
movsl
or
cli
in
adc
es
fsubr
leave
aaa
dec
dec
dec
shlw
or
testl
adc
sbb
pushf
push
nop
mov
insb
neg
mov
into
fidivrs
cmp
mov
mov
popfw
pop
mov
or
int3
cmp
sub
mov
ja
icebp
dec
add
mov
jp
push
dec
jmp
js
sbb
sbb
mov
rorb
je
jge
xchg
push
rorl
push
sbb
cmc
lea
dec
mov
add
jnp
pop
mov
cmp
xor
push
imul
int3
sarb
int3
mov
lods
das
lods
cmp
sub
dec
sbb
pop
xchg
jbe
mov
adc
lds
push
outsl
rcrl
mov
dec
mov
or
mov
shrb
pop
sub
adc
stos
dec
dec
jno
inc
adc
data16
and
fsubr
and
pop
jmp
pusha
fadds
js
scas
xor
pop
lods
pop
sub
push
push
pushf
push
adc
lds
pop
fwait
loopne
jnp
jbe
adc
movsl
adc
dec
mov
cmp
inc
call
mov
adc
bound
and
out
loopne
lods
in
shll
enter
add
lock
shrb
mov
pusha
mov
aam
xchg
mov
sti
cwtl
in
int3
push
mov
xor
faddl
lods
fsubl
inc
cmp
lock
sbb
roll
jae
into
mov
shrl
adc
jne
sub
cmp
lock
movsl
jge
sub
fdivrp
rcrb
rcrb
jno
dec
mov
lods
in
shlb
and
push
cwtl
dec
ret
mov
fmull
ret
adc
push
mov
je
mov
lock
adc
jo
hlt
sbb
shlb
pop
cmpsb
dec
or
cmc
fsubrp
and
ja
fs
inc
loop
push
mov
mov
inc
xchg
inc
or
scas
jbe
mov
mov
lds
jp
int3
js
ljmp
push
mov
push
jns
jnp
bound
mov
jp
cltd
fcompl
jp
mov
xor
adc
jne
push
jl
je
in
and
movsb
mov
mov
inc
adc
dec
nop
aam
jns
icebp
mov
ja
mov
and
mov
inc
sbbb
add
sub
rorl
fists
dec
loopne
fiadds
lods
cmp
dec
int
push
add
lds
ljmp
sub
add
or
push
out
int
sarb
iret
sub
hlt
cmp
mov
mov
and
lret
lds
cltd
or
lock
cmpb
js
out
jne
adc
inc
dec
js
insb
cmp
mov
ljmp
adc
cmp
adc
and
sbb
rol
inc
int3
jb
push
bound
repnz
xlat
int
inc
or
repnz
cmp
arpl
icebp
das
push
popf
loopne
xchg
cld
pushf
sub
mov
mov
popa
test
cmp
mov
scas
aaa
loope
mov
add
inc
mov
mov
or
mov
mov
mov
inc
ret
inc
mov
cmpsl
dec
shrl
les
sbb
cs
jp
mov
cmp
pop
inc
or
mov
aaa
sub
aaa
data16
jo
xchg
mov
push
xchg
mov
pop
mov
xchg
les
push
mov
mov
mov
rolb
lds
adc
mov
pusha
ljmp
pusha
pop
pop
mov
push
xor
mov
ja
mov
gs
inc
xchg
and
sbb
push
lret
mov
xchg
into
data16
out
add
je
xchg
sub
xor
in
xchg
adc
rorl
jmp
mov
xchg
sti
xor
repz
adc
mov
mov
mov
push
mov
xor
pop
mov
or
outsl
push
sbb
push
lock
inc
mov
aam
sbb
cmpb
xor
mov
pop
xchg
mov
fistpll
lock
cmpsl
testl
mov
add
stos
es
inc
insb
out
out
lds
xchg
push
cmpsl
sbb
adc
and
es
cmp
jae
adc
jecxz
pushf
lock
sbb
imul
xor
mov
addr16
jno
call
cmp
lods
inc
daa
mov
or
outsl
dec
cmpsl
adc
fs
mov
and
neg
scas
lock
fwait
les
fsubl
js
fiadds
mov
mov
out
mov
jle
jl
imull
mov
add
shll
ret
mov
xchg
mov
das
push
lds
scas
mov
mov
lcall
mov
das
inc
out
jge
mov
xchg
popa
jae
pop
in
push
mov
xchg
lcall
jmp
addb
sub
add
add
shl
repz
dec
dec
cmpsl
out
data16
insl
jmp
scas
mov
sbb
add
jno
pop
js
ret
jnp
hlt
lock
mov
mov
enter
das
or
je
jne
add
fisubrs
dec
cli
xchg
daa
cwtl
aaa
fwait
mov
das
jp
js
inc
rorb
xchg
ljmp
mov
repz
outsb
add
xor
ja
jnp
sbb
imul
pop
xchg
outsl
inc
loope
cmp
and
mov
sub
mov
sti
mov
inc
or
hlt
fsubs
js
inc
fnstenv
in
sub
daa
xor
out
mov
jno
or
les
popa
cmpsl
or
loopne
arpl
arpl
or
mov
insb
cmp
inc
call
das
mov
adc
add
mov
mov
pcmpeqb
pop
mov
xchg
mov
push
ja
mov
adc
adc
aaa
jmp
idivl
shlb
push
fldt
adc
sarl
inc
dec
ret
add
dec
repnz
and
cmp
jp
data16
fucomi
push
lods
fsubr
jo
mov
repz
and
fcomp
out
or
lds
roll
daa
stos
add
lock
mov
add
sar
addb
jns
inc
les
xchg
into
adc
mov
pop
js
je
pop
bound
xor
outsl
adc
into
mov
pop
call
rorl
xchg
mov
fmuls
pop
test
leave
mov
pop
lds
lret
hlt
push
gs
jae
lret
sbb
dec
push
sbb
push
inc
sub
lods
mov
cmpsl
pop
pop
mov
dec
pop
mov
cmp
cmc
or
loop
loop
sub
les
and
int
repnz
int3
and
ljmp
mov
popf
jp,pt
xor
bound
mov
pop
in
inc
mov
jp
sub
jne
fdivs
add
push
mov
xor
xor
shll
xchg
mov
jb
data16
int
mov
inc
aas
ja
sub
add
loop
push
mov
push
mov
leave
jp
fsubrp
adc
call
or
push
outsl
push
icebp
lods
lahf
fbld
clc
xchg
add
neg
jp
insb
jo
xlat
mov
int
out
popa
cmp
cld
ret
test
lock
fs
mov
sbb
idivl
pop
and
test
mov
pop
mov
vsubsd
stos
sbb
and
adc
add
clc
dec
add
loope
mov
mov
and
into
mov
jp
rcll
dec
jo
pop
mov
inc
out
sbb
loop
ljmp
xor
dec
jae
jbe
sarb
out
add
out
fmull
pop
imul
inc
lods
or
aaa
or
xchg
mov
or
int3
and
dec
jge
mov
les
jnp
push
sbb
out
sbb
cwtl
push
xchg
and
mov
stos
add
jo
pop
cwtl
lret
movsb
jbe
inc
in
mov
xor
lds
addb
cmp
pop
sub
jp
add
daa
js
repz
sub
push
adc
or
push
jmp
ljmp
or
or
lods
mov
insl
mov
lcall
add
icebp
stos
lds
jae
pop
lods
data16
push
and
adc
pop
movsb
xchg
out
mov
popf
pop
cmp
add
popf
out
vmovhps
push
bound
dec
cmp
hlt
jp
repz
xchg
enter
mov
sbbb
shlb
fwait
add
sub
out
mov
adc
test
adc
jmp
mov
lds
inc
lods
gs
lods
sbb
arpl
iret
lds
pop
ror
jmp
pop
data16
sbb
dec
loop
out
dec
mov
testl
xor
mov
outsl
ret
movsl
mov
setge
jnp
or
mov
cmc
in
scas
push
mov
or
cmp
stos
jae
jmp
loopne
dec
pop
sti
mov
int
pop
and
aad
sti
nop
push
cmp
bound
dec
dec
jae
pop
jno
rolb
ret
imul
jo
and
movsl
in
lods
or
negl
adc
inc
dec
xchg
mov
push
sbb
lds
mov
cmpsl
or
push
xchg
inc
fsubrl
mov
and
xor
fmull
fwait
jo
push
cmpsl
mov
cmp
ret
adcl
inc
repnz
lds
inc
ret
mov
lods
adc
mov
push
lock
mov
test
fs
cmpsl
inc
ljmp
les
inc
jnp
push
cmpsl
cmp
xor
fs
push
xor
add
mov
dec
cmp
test
push
inc
lds
shrl
mov
ljmp
jnp
test
cwtl
jne
js
movsb
cs
jae
orl
fimuls
dec
into
push
cmp
lret
mov
mov
dec
outsb
sub
add
push
xchg
int
adc
cmp
sub
add
aad
push
mov
fldt
add
loopne
pop
jmp
inc
mov
jecxz
lds
int3
loop
pop
lea
shl
and
jae
adc
adc
sub
jg
mov
mov
pop
lds
push
repnz
test
sbbb
mov
adc
hlt
popf
stc
rorl
sub
jbe
pop
bound
icebp
es
mov
int3
pop
xor
mov
ljmp
or
lods
push
cmpsl
add
lods
rcrl
dec
cld
pop
cmp
lock
dec
aad
loope
push
inc
mov
pusha
jbe
sbb
inc
xor
jecxz
out
xchg
int
rclb
xchg
shll
mov
xor
jecxz
js
pop
mov
or
push
pop
daa
mull
sar
insl
rcrl
xor
js
lret
push
sbb
xchg
sbb
lds
pop
xchg
out
mov
add
mov
cmpsl
xchg
mov
aad
mov
inc
and
adc
push
xchg
cmp
cmpsl
push
ss
mov
sbb
push
adc
jecxz
and
enter
jnp
gs
aaa
adc
mov
out
cmc
mov
mov
mov
push
push
dec
orb
clc
and
lock
xchg
mov
cmpsl
aaa
add
sbb
jb
mov
add
cmpsb
fwait
inc
mov
les
loopne
movsb
pop
push
or
std
pop
and
popa
push
and
shl
cmp
leave
dec
mov
xor
jge
in
inc
call
mov
xor
jnp
cmp
sbb
cs
mov
or
push
stos
or
cmpsl
fstps
cmpsl
mov
ficompl
mov
int3
sti
mov
adc
jae
lret
push
in
xor
add
pop
jo
sbb
in
jp
fidivrs
nop
and
imul
int
mov
and
mov
lds
xor
push
mov
jle
cmp
andl
xor
push
xchg
ljmp
les
outsl
or
and
dec
xor
lock
loope
test
push
test
inc
mov
xor
mov
mov
mov
lock
sub
mov
int3
push
test
sub
sbb
mov
inc
xor
lss
out
jo
mov
add
bound
mov
adc
into
aam
push
and
sub
lds
mov
inc
repnz
or
mull
pushf
es
test
bound
or
push
mov
pushf
rolb
sub
popf
bound
pop
fildl
fimuls
je
xor
xchg
mov
out
inc
jmp
mov
pop
xor
lcall
stos
popa
orl
test
ja
pop
xor
pop
out
mov
add
add
push
out
push
sub
mov
or
push
mov
int
inc
pop
mov
pop
iret
paddsw
add
add
daa
or
inc
xor
push
mov
pop
out
inc
test
les
xchg
and
sbb
ret
lds
lcall
adc
out
push
lods
pop
ret
fbstp
adc
dec
sbb
cmp
jecxz
scas
jl
out
xor
pop
sbb
lahf
rorb
test
mov
lock
adc
mov
cmc
jo
sbb
leave
stos
fsubrs
pop
dec
adc
and
arpl
mov
sahf
fwait
add
push
lahf
bound
loope
mov
lret
scas
js
jnp
fisubs
xor
jp
movsb
cwtl
ss
adc
or
add
fsubs
mov
push
movsb
adc
inc
mov
inc
push
test
push
addr16
aaa
jecxz
test
mov
xor
mov
jmp
push
int3
sub
inc
jo
jg
aaa
mov
test
mov
cmpl
xor
out
add
das
push
inc
mov
icebp
dec
je
ja
jmp
cmp
mov
popa
jecxz
dec
mov
jecxz
das
or
xorb
mov
pop
cmp
idivl
hlt
jp
es
das
adc
lock
bound
les
pop
add
jecxz
sub
mov
mov
decl
dec
jmp
add
xor
sub
test
jb
mov
inc
test
push
mov
add
push
out
inc
dec
lock
test
aaa
sub
jae
add
icebp
sbbb
test
ret
dec
insl
sbb
or
js
sbb
inc
lds
jmp
cmp
add
mov
hlt
pop
jns
sbb
adc
jmp
jnp
or
test
sarl
lock
enter
sbbb
lods
test
popa
cwtl
adc
add
jmp
mov
sbb
fsubl
orb
mov
sub
rolb
cmp
push
stos
ret
popf
call
or
loop
xchg
es
popf
pop
adc
mov
add
mov
ljmp
scas
add
sbb
adc
dec
cmp
shrb
stos
push
movsb
sbb
dec
hlt
fiadds
jo
or
lcall
cmpsl
pop
aas
mov
add
xchg
push
in
cmc
sub
aaa
cmp
mov
adc
dec
jmp
fwait
xor
outsl
cld
movsb
sbb
imul
cwtl
aad
jle
inc
sbb
testb
call
sub
add
or
ret
cmpsb
cmp
pushf
dec
imul
push
dec
or
inc
scas
stos
xchg
sbb
xchg
int3
mov
jae
cwtl
rorl
and
pop
mov
movsb
aad
inc
mov
add
lret
int
push
mov
aaa
mov
lds
cwtl
inc
lcall
repnz
hlt
and
mov
and
xchg
jbe
inc
mov
ja
imul
cmp
sbb
push
popf
sbb
dec
pop
mov
nop
out
push
js
pop
ja
adc
xor
mov
inc
adc
sbb
dec
sub
shrl
mov
dec
call
push
jp
ljmp
xchg
push
movsb
loopne
notl
inc
js
test
push
lret
pop
mov
cs
add
mov
es
mov
dec
add
cld
push
icebp
fimuls
frstor
xchg
call
sbb
ja
mov
in
loop
and
or
dec
dec
xor
int3
outsb
and
jle
adc
fiadds
call
js
mov
mov
bound
testl
addr16
jnp
pop
mov
dec
jnp
lock
add
jmp
push
aad
and
mov
jns
cltd
dec
xor
test
cwtl
cmp
or
inc
aaa
mov
sub
ljmp
lcall
mov
mov
call
lds
adc
xor
adc
or
jmp
int3
jne
inc
mov
cmp
push
mov
imulb
popf
js
call
ret
lret
das
pop
add
pop
and
scas
nop
jbe
es
jae
adc
sub
sarb
and
sbb
dec
mov
cmpsl
dec
out
jno
pushl
rcll
hlt
push
mov
push
call
insb
cmp
inc
mov
jo
dec
cltd
mov
xor
and
fidivrs
int3
in
push
test
mov
adc
push
push
sti
pop
shlb
shlb
or
fs
ljmp
add
jmp
add
sbb
add
mov
fcomi
add
push
jp
jmp
cmpsb
mov
sub
ja
xor
jmp
sub
add
jne
cmp
out
jne
ret
or
add
mov
sub
or
jo
add
out
aaa
mov
mov
pop
add
jmp
out
push
jmp
add
sub
and
mov
shlb
sbb
add
jmp
adc
ja
decb
js
inc
add
adc
in
push
push
mov
and
call
add
call
leave
adc
xchg
pop
clc
pop
rcrl
pop
repnz
dec
pop
cmp
inc
subb
mov
mov
dec
pop
push
lods
push
adc
iret
test
aam
pusha
movsl
and
sub
pop
inc
mull
adc
stos
mov
call
fsubrp
add
push
lcall
ljmp
inc
jl
sbb
adc
repz
pushf
lret
in
dec
push
je
push
cwtl
sti
decl
ljmp
push
cli
add
fmull
int3
lods
jo
fcomip
jg
dec
daa
mov
sbb
ds
jno
adc
imul
lock
jg
jmp
adc
cltd
pop
loope
cmpsl
aas
ljmp
mov
mov
call
sarl
xchg
jb
jge
in
ds
in
cs
xlat
jg
pop
ficomps
movsl
scas
hlt
fwait
and
or
loopne
cli
test
cmp
inc
dec
call
cmp
inc
call
cwtl
stc
sub
pop
cli
je
fidivs
add
cmp
hlt
xor
testb
call
daa
xor
adc
jmp
jne
dec
cli
ljmp
cs
pushl
push
add
xchg
or
jae
add
lods
inc
dec
fs
sub
pushl
sahf
or
adc
mov
and
pop
les
loop
jmp
ljmp
and
push
imul
dec
sub
popa
mov
inc
push
adc
mov
les
or
sbb
aam
je
push
add
aas
inc
std
loopne
jmp
fxch
test
and
push
daa
cli
push
add
mov
cmp
or
push
outsl
and
mov
sub
xlat
inc
clc
dec
loop
sub
ljmp
sbbb
or
xchg
aam
test
xor
mull
arpl
popf
cmp
adc
out
gs
outsl
dec
mov
call
insl
dec
insl
pop
pop
shr
pop
movsl
xor
loop
lock
mov
pop
cli
loop
daa
daa
xchg
aas
adc
mov
jo
push
das
loopne
mov
dec
mov
and
dec
push
sub
icebp
incl
orb
adc
pusha
adc
sub
jno
sub
lcall
and
or
test
add
adc
inc
push
dec
ret
add
loopne
dec
sbb
push
ljmp
xchg
xchg
xlat
pushf
push
pop
inc
outsb
std
mov
imul
test
pop
fnsave
mov
push
and
pop
clc
xlat
lods
push
cwtl
inc
sti
rep
sub
mov
push
pop
lock
shrl
les
add
negb
sahf
and
jne
call
daa
dec
mov
sub
jmp
sbb
sahf
xor
mov
xlat
adc
jl
out
push
or
in
shlb
imul
fistpl
sbb
mov
or
adc
decl
push
add
or
je
xchg
adc
adc
adc
aas
cmpsl
fistl
pop
sahf
in
xor
cmpb
arpl
and
xchg
jl
nop
fisttps
and
fstpt
add
shl
pushl
rcrb
jmp
mov
mov
push
insl
inc
xlat
sbb
dec
and
push
jg
rclb
mov
mov
cli
add
sbb
test
mov
mov
clc
mov
xor
mov
aas
dec
stc
rcr
incb
leave
je
arpl
fimuls
aad
or
or
icebp
xchg
cmp
loopne
inc
sbb
sub
ret
fbstp
aas
xchg
hlt
push
adc
pop
jnp
add
ljmp
or
adc
fildl
loopne
mov
lock
cld
sub
pop
jae
cwtl
mov
mulb
pop
push
in
sub
push
call
pop
mov
jmp
push
sub
sbb
dec
dec
jmp
inc
adc
add
ljmp
lcall
add
xchg
movsl
prefetcht1
test
cmp
mov
sbb
cmp
pop
cmpl
int
fsubl
lds
add
cmp
xor
daa
mov
cltd
cmp
rcl
in
cmp
xor
cmp
or
mov
xchg
mov
adc
aas
push
std
xorl
inc
je
adc
js
xchg
fsts
cwtl
pop
call
fs
add
sub
pop
or
push
imul
pop
sub
push
pop
sbb
xor
out
pop
sbb
inc
xlat
sbb
ficomps
dec
cli
lods
jmp
lret
sbb
inc
inc
add
xchg
iret
ret
mov
outsl
outsl
lahf
add
jge
and
push
shll
inc
jg
sar
jne
imul
insb
gs
push
xchg
scas
mov
inc
sbb
push
cli
jmp
test
std
mov
push
inc
and
or
bound
call
jb
hlt
dec
sbb
scas
adc
ja
fsubs
xorl
lock
decb
addl
jmp
add
in
push
adc
jo
xor
cld
repz
fwait
std
daa
loopne
mov
cltd
and
cmp
add
sahf
mov
call
pop
xor
sub
lcall
loopne
or
cwtl
sbb
bnd
outsb
jb
stos
and
insl
mov
outsb
fildl
cltd
or
push
pop
js
ss
imul
jmp
add
pop
mov
sbb
adc
jmp
add
clc
dec
adc
jmp
scas
sub
cmpsb
dec
fldt
pushl
push
mov
dec
adc
mov
orl
rcrb
notb
loop
inc
arpl
mov
mov
mov
jnp
icebp
sub
push
arpl
jge
or
cld
lcall
jb
aam
aaa
lcall
inc
nop
cmp
cwtl
loopne
aam
adc
rorb
loop
pop
icebp
dec
lock
jns
push
xchg
mov
jg
int3
cmpsl
movsb
repz
adc
cmpsl
lds
inc
add
bound
push
testl
push
or
lock
ss
add
lret
test
jmp
cld
inc
cmp
bound
cmp
cmp
mov
sub
in
insb
sbb
inc
add
xchg
mov
xchg
dec
add
lret
pop
or
or
outsl
pop
addb
push
cs
sub
testb
adc
test
jg
adc
in
jae
popa
or
adcl
push
std
jg
push
aaa
sbb
dec
sub
fimull
cltd
push
xchg
jl
inc
enter
and
test
stc
jnp
or
sbb
add
insb
or
jl
add
cs
push
inc
xchg
push
lock
bound
inc
int3
dec
cmp
sti
daa
rcrl
fstl
imull
jmp
lock
push
sti
jno
test
mov
aad
enter
leave
mov
loop
push
adc
jmp
mov
fisttpll
ss
rclb
lock
pop
test
mulb
xchg
sub
outsl
lods
adc
cmp
sub
adcl
out
and
mov
arpl
xchg
scas
inc
mov
jne
xchg
jg
inc
push
adc
dec
inc
and
ds
mov
sbb
xchg
clc
call
addr16
adc
aas
add
pop
mov
ja
cmpsl
add
ljmp
or
adc
mov
pop
push
clc
jge
dec
or
adc
xchg
add
and
mov
add
clc
xchg
repnz
or
jbe
cld
sbb
mov
std
xchg
cs
push
add
shlb
cmpsl
bound
test
mov
out
pop
and
push
push
sbb
leave
jl
adc
fistl
push
adc
mov
out
je
test
and
pop
xchg
adc
ljmp
or
mov
in
add
aad
push
mov
push
notl
pushl
pop
sub
mov
call
and
leave
and
lods
ss
in
sar
incl
mov
pop
add
out
inc
enter
ss
cmpsb
xchg
shr
inc
sarl
or
scas
jg
push
adc
inc
mov
and
adc
je
cmc
jge
lcall
cld
lret
mov
jne
in
mov
je
push
and
or
cli
xlat
daa
iret
popa
or
mov
es
sub
add
and
std
sub
cmp
xchg
or
mov
mov
ror
pop
jge
cs
sub
rcl
mov
mov
push
pop
jge
add
out
shrl
insl
add
sbb
inc
mov
in
dec
or
pop
dec
xorl
insl
fildl
adc
push
sbb
pop
fistpl
adc
insb
pop
dec
xor
mov
xor
xor
push
mov
in
push
mov
popf
outsb
jnp
je
mov
mov
adc
ret
repz
clc
lds
loop
cmc
add
mov
lock
lea
xlat
lds
jmp
test
xchg
js
stos
lret
and
fistl
mov
inc
xchg
xchg
mov
jg
fisubs
je
jmp
pop
sub
add
fadds
popa
gs
hlt
es
push
std
loop
add
mov
mov
iret
xor
pop
aam
push
pushf
mov
clc
test
jge
jbe
push
inc
adcl
push
mov
mov
test
mov
and
subl
mov
mov
je
test
push
mov
arpl
xor
sbb
lcall
adc
mov
in
dec
pop
in
inc
ja
push
cmp
mov
xchg
and
cli
mov
test
and
cmp
subl
jnp
test
bound
add
push
push
sarl
sbb
dec
les
popa
push
sbb
loopne
mov
js
jl
aad
mov
sbb
add
lods
jo
xor
hlt
mov
lea
loop
lock
sbbb
divl
pop
push
pop
jg
aas
sub
iret
jl
scas
mov
subb
loop
adc
mov
pop
fmull
fwait
repnz
jbe
fcmovnbe
xor
cmp
inc
inc
push
cmp
jne
mov
adc
and
incl
insl
or
and
or
jg
jmp
insl
add
daa
adc
mov
mov
sbb
popl
test
call
ss
jns
push
adc
popa
lods
adc
hlt
arpl
fs
adc
xchg
cld
xor
hlt
daa
js
enterw
push
sbb
or
and
jle
cmp
or
fimull
std
push
std
fs
cmp
jo
xchg
out
ljmp
sbb
sub
inc
pusha
hlt
fcom
inc
lods
jle
fiadds
ds
jl
jne
mov
mov
push
add
xchg
test
daa
jp
xchg
cwtl
dec
stos
jno
xor
mov
ljmp
sub
inc
xorb
insb
pop
adc
and
clc
adc
inc
cmp
pop
adc
movsl
sbb
int
bound
cmpl
sub
push
mov
dec
call
push
lea
mov
jb
jmp
int3
lock
push
test
adc
pushl
sub
cmc
mov
out
addr16
loop
clc
cmp
mov
push
xchg
out
mov
dec
ffreep
jb
cmp
and
loope
lock
mov
ja
outsl
xchg
movzbl
mov
push
mov
mov
jg
pop
cld
adc
dec
lahf
outsb
mov
pop
scas
call
pop
nop
std
inc
decl
sbb
cmp
jne
test
mov
xchg
test
mov
loopne
icebp
xchg
jge
js
orb
xor
testl
loope
sub
lock
or
push
inc
mov
jle
pop
nop
fisubs
pusha
jnp
jp
cmp
jo
adc
jecxz
add
pop
push
push
leave
adc
call
call
push
andl
stos
in
mov
arpl
xor
cmp
outsb
leave
push
mov
mov
xchg
adc
mov
call
cli
in
ljmp
adc
mov
xor
adc
cs
push
or
das
cmp
push
xchg
jb
adc
pop
loope
xor
push
shlw
xor
cmp
call
sub
and
cmp
adc
icebp
cs
adc
adc
pop
sub
pop
rolb
jp
fsubl
push
jge
std
dec
xchg
and
adc
orl
mov
and
lahf
iret
inc
dec
dec
sbb
or
adc
insl
loope
or
pop
pop
or
push
and
lods
popa
fstpt
lret
xor
adc
cmp
test
pop
outsl
daa
ficoml
inc
cmp
xlat
pop
adc
xchg
fbld
inc
xor
cmp
loopne
aaa
fdivrl
mov
call
daa
mov
cmp
or
dec
cmp
add
cs
hlt
pusha
add
cmp
insb
adc
adc
ficompl
sahf
mov
pop
dec
sub
mov
fstps
in
and
inc
std
cmp
or
push
outsl
xchg
pop
push
lea
stos
fistl
stos
dec
xor
or
lds
test
bound
or
data16
dec
mov
jnp
imul
cmp
pop
lds
cmp
das
sbb
jno
adcl
inc
sti
jns
dec
push
sbb
sbb
mov
notb
dec
mov
jge
int3
or
xlat
dec
stos
or
sbb
pop
adc
int3
mov
jns
mov
pop
mov
mov
sub
ret
dec
lock
mov
xchg
aaa
clc
fildl
cld
or
push
std
jg
jmp
add
or
pop
dec
addr16
xor
mov
or
mov
push
into
or
or
cmp
mov
mov
repz
pop
leave
add
lods
dec
movsl
aas
fst
incb
mov
xchg
call
mov
call
jbe
pop
xchg
xlat
add
xchg
and
test
test
inc
jmp
add
sub
bound
in
arpl
sbb
stc
and
les
mov
js
sbb
add
sub
push
add
mov
fcoms
xchg
xor
or
push
inc
mov
mov
push
add
xchg
mov
sar
iret
in
and
lcall
inc
rcrb
cmp
std
sub
dec
jle
push
addb
or
inc
and
adc
js
adc
in
jo
adc
push
js
std
outsl
and
and
test
mov
inc
push
jl
std
stos
cltd
jne
cmp
aaa
sbb
cmp
push
in
out
movd
pop
cmp
clc
daa
test
mov
push
setno
stos
jle
cmp
adc
sbb
xchg
mov
aad
pop
add
and
jne
sarb
mov
dec
push
ss
icebp
aaa
lods
test
test
inc
pop
orb
aam
ret
push
push
mov
dec
sar
cmp
repz
test
fidivrs
enter
adc
and
jae
inc
inc
icebp
push
mov
mov
mov
push
jmp
pop
pushl
loopne
xchg
mov
xlat
incl
push
fbld
xorl
popa
lods
repz
cmp
or
in
ret
in
xchg
pop
push
cmp
xor
pop
jnp
rorb
xchg
inc
lea
dec
das
push
mov
mov
push
mov
lea
repnz
dec
sub
xchg
cmp
fimuls
inc
sub
sbb
mov
add
movsb
pop
and
pop
push
xor
mov
adc
or
adc
sti
faddl
and
cmp
dec
cmp
push
scas
aas
adc
test
into
aam
pusha
pop
pop
mov
jnp
sti
push
pushf
push
adc
mov
adc
rorb
pop
inc
push
pop
xor
loop
bts
dec
and
les
mov
and
pop
fistl
add
mov
ljmp
loope
scas
or
xchg
mov
xor
daa
rcrb
xor
jle
incl
push
dec
ret
jae
mov
cmp
push
mov
xor
sub
cmp
sbb
mov
cmpsb
gs
mov
sbb
je
add
sbb
movsb
mov
mov
sbb
push
clc
jge
out
rcr
fsubp
inc
testb
inc
jl
mov
inc
sbb
loop
shr
lock
test
out
pop
mov
lret
ljmp
lahf
cmpl
push
add
push
mov
cmp
sbb
or
push
mov
aas
push
push
ds
aaa
rol
rcrl
pushf
jns
push
inc
ret
xchg
sbb
xchg
hlt
fwait
out
or
mov
test
lea
ss
cs
pop
mov
sub
inc
xor
or
call
insb
sbb
jg
sti
lods
aas
ja
push
call
pushw
or
jno
adc
outsl
das
std
push
jmp
and
add
pop
outsl
jo
xor
push
inc
mov
pop
test
lods
scas
pop
mov
in
mov
in
stc
cwtl
cmp
inc
lahf
fbld
add
jp
add
jne
lea
aam
mov
mov
sub
roll
je
pop
mov
adc
rorl
or
mov
adc
pop
xor
sbb
fsubr
mul
clc
cmp
dec
sbb
test
data16
stc
sbb
sbbb
jb
or
insb
xchg
sbb
clc
pushf
pop
cli
inc
cmp
cmp
add
xchg
in
push
je
push
fists
adc
fdiv
gs
ja
adc
push
pushf
out
cld
mov
sarb
arpl
or
enter
in
push
aas
rcl
add
ret
sti
inc
ljmp
nop
push
pop
lahf
or
or
inc
xchg
mov
test
test
sbb
adc
repnz
out
pop
mov
shrb
rcr
push
fbld
adc
out
adc
ljmp
pop
cmp
pop
lock
inc
test
cmpsl
add
mov
jmp
data16
inc
xor
add
add
insb
shlb
sbb
std
pop
mov
clc
pop
aad
xor
xchg
xchg
jle
inc
mov
mov
dec
je
sbb
add
sub
subb
mov
scas
cmpsl
popf
xor
out
inc
inc
ret
mov
inc
or
inc
test
jmp
pusha
out
push
lods
push
sbb
push
ds
jae
das
lock
ret
pop
mov
adc
pop
mov
decl
lock
push
lcall
adc
add
and
and
cld
push
add
mov
mov
loopne
inc
ret
jl
cmp
add
dec
adc
mov
enter
ret
fadd
daa
sahf
xor
mov
loope
sbb
or
into
and
cmp
dec
sar
xchg
xor
pop
rcrl
pop
imul
jnp
pop
cltd
ret
jmp
mov
cltd
add
dec
and
lock
test
lcall
out
inc
test
insl
popf
andl
inc
xor
or
adc
mov
sub
push
jbe
in
dec
cs
outsl
daa
call
mov
xchg
imul
fisttpl
push
jg
dec
jecxz
lock
add
xchg
push
int3
jg
push
shlb
mov
sbb
push
dec
enter
add
xchg
push
inc
and
popf
cmp
and
push
inc
aaa
std
aaa
cli
xor
or
adc
js
push
add
inc
hlt
popf
pop
pop
push
mov
outsl
stos
outsl
sub
jmp
and
mov
sbb
inc
mov
fcmove
or
ds
sbb
fmull
xchg
insl
cmp
pop
and
decb
lods
sub
inc
out
dec
aaa
aam
or
jno
mov
arpl
pop
inc
jecxz
test
cltd
int3
push
and
push
outsl
mov
push
pop
inc
ljmp
mov
ret
call
lcall
mov
aaa
or
sbb
xor
notl
xor
cmp
cltd
aaa
mov
inc
nop
push
sbb
mov
call
add
add
push
js
or
loope
jmp
jne
mov
sar
dec
lcall
rclb
vpshufd
sbb
dec
dec
push
push
jge
mov
popf
scas
adc
adc
xchg
adc
cmovge
sbbb
and
cmc
xor
addr16
push
lods
pop
adc
pusha
or
dec
daa
ljmp
inc
bound
adc
insl
inc
jno
pop
pop
aam
add
adc
jmp
sti
xor
mov
mov
adc
push
fnstsw
mov
test
lret
out
push
xor
hlt
shl
enter
shll
rclb
sub
sub
inc
dec
cmp
and
sub
mov
pop
jb
or
insl
jae
add
dec
test
or
pop
mov
or
dec
push
xchg
cmp
adc
sub
call
dec
xor
stc
icebp
inc
add
movd
mov
add
push
or
data16
pop
xchg
dec
push
dec
inc
mov
fisttpl
ret
push
iret
pop
push
xor
xchg
sbb
and
sub
stos
fst
push
and
mov
out
adcb
jl
jo
aas
test
cmc
or
jle
out
cmp
push
enter
or
pop
xchg
add
push
xor
and
sub
cs
jne
pusha
mov
inc
push
mov
in
pop
push
inc
leave
int3
pop
or
push
inc
xlat
je
in
add
pop
les
insb
cmp
fdiv
xor
in
bound
fs
stos
in
ss
shlb
cmp
xor
add
lds
jns
dec
push
mov
out
sbb
xchg
clc
mov
pop
sub
and
sbb
push
rcrl
lea
mov
lcall
test
and
aad
sub
mov
addr16
sbb
shrl
sbb
push
jl
pop
mov
pop
pop
movups
imul
jo
das
push
mov
or
jle
enter
push
lds
add
leave
loop
cmc
cmpsl
or
jne
adc
mov
inc
mov
inc
fwait
test
mov
push
push
xor
add
push
clc
xor
cwtl
repnz
andl
fdivr
push
xor
roll
insl
xchg
test
inc
sbbb
add
aaa
adc
enter
ret
std
sub
cltd
outsb
cmp
hlt
push
cld
mov
lea
push
inc
jmp
or
push
xlat
pushf
adc
test
fbld
shlb
jmp
lret
stos
stos
js
jg
jle
jl
cld
ljmp
stos
jecxz
adc
dec
sub
stos
ret
test
adc
cmp
add
testb
shrb
gs
push
ret
test
jl
lcall
pop
mov
int
mov
mov
cmp
fildl
je
outsb
add
out
gs
iret
jne
cwtl
imul
repnz
mov
and
adc
ds
mov
sub
or
push
lcall
daa
jl
push
movsb
or
imul
pop
shll
add
test
mov
gs
fcoms
add
orb
sbb
adc
in
dec
lea
mov
adc
or
add
ss
pusha
mov
mov
sub
lea
lods
inc
jmp
adc
movsb
incl
jbe
and
lcall
dec
and
fadd
push
xorb
push
cli
pop
mov
call
dec
xor
mov
xor
test
insb
clc
sbb
mov
and
std
jecxz
dec
or
es
loopne
mov
adc
fisttps
orb
mov
add
cmp
ljmp
scas
and
out
and
cld
dec
ficoml
mov
jnp
add
jbe
xchg
call
inc
test
adc
xor
and
mov
dec
adc
loope
pop
pusha
sti
loopne
movsl
hlt
add
pop
fsubrp
push
test
xor
mov
sarb
hlt
hlt
mov
sbb
mov
cmp
xor
xor
imul
and
mov
fmull
mov
pop
xchg
pop
icebp
adc
ret
loopne
test
pushl
add
or
dec
adc
inc
inc
lahf
loop
add
sahf
cmp
fdiv
addl
pop
lods
ljmp
or
pop
and
adc
rclb
mov
inc
shlb
push
lock
push
leave
xchg
sbb
std
cmp
or
scas
int
orb
sub
and
js
aad
or
popf
iret
or
outsl
or
or
cmp
jle
jo
addr16
sbb
dec
clc
insb
inc
and
fisttpl
lods
inc
mov
out
or
cmp
das
jb
sbb
adc
pusha
push
fsubrs
dec
movsb
inc
adc
ss
cmp
mov
or
jnp
pop
repz
and
sbb
fbstp
mov
push
jl
hlt
std
and
add
mov
inc
adc
mov
jge
mov
ss
aad
popa
jp
fnstcw
lcall
fdivr
inc
inc
xchg
ds
test
pushf
push
jecxz
cmp
fiadds
xchg
stc
dec
add
push
rorb
ljmp
jne
and
and
outsl
pushf
jae
lcall
clc
or
xchg
push
fisttpl
mov
sar
call
cmp
or
sti
inc
mov
cmp
add
and
jg
dec
gs
sbb
xor
icebp
bound
push
jecxz
mov
jg
std
imul
sub
push
mov
mov
int3
adc
insl
push
es
outsb
jno
cld
dec
in
js
sbb
mov
popa
xor
pop
adc
mov
xchg
pop
fsubs
stc
mov
inc
push
inc
out
mov
js
sbb
push
loope
jle
push
adc
mov
outsb
aas
mov
jne
add
jo
out
inc
xor
lcall
jg
mov
mov
cmp
push
mov
or
push
xchg
adc
mov
and
mov
rcr
jle
cmp
outsl
addr16
inc
imul
jb
pushl
jmp
push
cltd
jo
pop
sbb
sub
push
jmp
mov
push
or
cmp
sbb
into
jg
cld
jg
dec
push
je
push
lods
or
addr16
ret
shrl
pop
mov
and
popa
and
inc
cld
jg
and
fwait
cmc
outsl
add
mov
loope
pop
loopne
fs
insb
cs
aaa
stos
js
lds
pusha
mov
mov
ret
sub
and
loopne
mov
and
inc
shrl
imul
shl
sahf
sti
mov
repz
lcall
leave
ss
loop
jmp
pop
cli
out
shr
add
jl
mov
push
repz
inc
sbb
sti
jg
adc
movsb
jl
or
push
inc
mov
jo
shl
jl
das
hlt
test
xor
xor
push
in
push
jg
lock
out
adc
and
mov
dec
adc
data16
xchg
imul
inc
and
aas
cmp
push
mov
rcl
insl
mulb
mov
pushf
xor
call
jp
mov
addr16
and
test
xchg
lods
adc
adc
mov
dec
and
or
push
idiv
das
insl
sti
sub
std
push
cmp
nop
or
mov
shrl
mov
pop
xor
mov
into
inc
sub
mov
jl
mov
xor
inc
iret
sub
or
push
fwait
dec
xor
movsb
stos
pop
call
or
cmp
jne
pop
nop
push
add
fsubrs
cs
stos
mov
pop
lods
sbb
decl
inc
ret
jecxz
inc
and
sub
xchg
mov
and
push
push
shlb
daa
aas
adc
cmpsb
jge
or
sarl
inc
aas
stos
jmp
cmp
adc
jl
or
push
imul
adc
rorb
outsb
adc
fcoml
cld
inc
outsl
outsb
mov
sub
outsl
aas
add
or
sub
cmp
sub
mov
sub
enter
pop
xchg
and
clc
mov
outsl
mov
dec
out
mov
mov
mov
aam
shl
je
sarl
adc
inc
sub
or
nop
test
add
add
adc
push
inc
aas
jns
lds
xor
or
repnz
dec
jbe
jl
popa
popl
xor
xchg
inc
out
dec
jae
sarl
hlt
jns
jmp
addr16
adc
loop
pop
les
inc
dec
lods
out
cs
pop
sub
aam
fs
sbb
lea
lret
cmovs
movsb
in
jp
ljmp
dec
and
push
lods
or
sub
or
insb
cmc
sub
sub
pop
jge
incl
das
or
xchg
push
push
sub
cmpsb
inc
dec
sub
loop
sarl
mov
jo,pt
xor
push
adc
cld
stos
mov
pop
je
ljmp
pop
aad
pop
outsl
cld
das
pop
repnz
repz
inc
nop
push
fwait
pusha
and
pop
xchg
stos
jo
add
jp
ljmp
dec
fwait
push
mov
call
repz
cmc
cmc
add
lea
add
sbb
xlat
aam
repnz
cli
or
jbe
and
outsb
popa
jnp
or
push
test
pop
push
mov
xor
jbe
and
or
mov
fsubrp
in
loope
inc
sub
xchg
mov
push
ret
std
decl
dec
ret
fisubrs
push
cmpsl
pusha
stos
inc
add
xor
jnp
pop
jae
negl
sub
or
jmp
mov
mov
sbb
and
pop
jg
jbe
dec
adc
and
insw
repz
dec
mov
out
fbld
out
push
push
and
mov
ljmp
leave
inc
mov
int3
jno
dec
cmp
mov
js
mov
pushf
rorl
jo
pusha
and
aas
jno
mov
ds
sbb
jmp
rcrb
inc
mov
sub
cld
repnz
das
push
sub
push
mov
adc
pop
inc
nop
cmp
ret
mov
push
out
loopne
and
gs
inc
bound
inc
addr16
jle
sbb
arpl
pushl
sub
shll
sub
jne
enter
out
adc
es
addb
mov
les
cld
mov
or
cmpsb
sub
inc
addr16
in
mov
loop
daa
sbb
cld
mov
pop
movsl
add
es
xchg
mov
adc
and
out
or
dec
fildl
xor
mov
shlb
leave
fists
lds
das
ror
cmp
or
inc
std
push
jb
rorb
cli
jg
gs
jo
es
sbbb
dec
pop
cmpsb
sbb
nop
or
jo
or
adc
aad
or
dec
lea
mov
jbe
cmp
fstpl
icebp
xor
adc
xlat
clc
stos
dec
lods
push
lods
adc
jns
sub
inc
or
scas
addl
mov
sub
inc
inc
ret
test
jl
cmp
call
jmp
mov
inc
stos
enter
or
hlt
sub
or
call
push
pop
loop
pusha
add
cmp
cld
xor
repnz
mov
das
mov
fsubrp
xchg
adc
imul
scas
fmull
jnp
das
sbb
or
loope
decb
cmp
adc
pop
pop
ja
add
push
scas
mov
cmp
and
cmp
rorb
pop
imul
adc
ja
push
mov
sar
call
mov
jbe
sbb
dec
sub
pop
stc
out
or
push
pop
pop
mov
pop
xor
inc
xor
add
cld
mov
fsubrp
jns
or
jle
pop
sub
lcallw
inc
push
and
adc
push
jno
adc
inc
push
jl
push
mov
xchg
jbe
roll
mov
decl
jle
adc
aaa
stos
lahf
inc
push
repnz
sub
add
das
js
imul
dec
lock
call
aaa
mov
jae
fstpl
push
cld
jb
push
and
mov
dec
ja
ss
inc
outsl
jae
out
cmc
scas
sar
daa
das
mov
outsl
fwait
mov
or
out
dec
popf
mov
add
pop
xchg
je
ficoms
xchg
and
or
pop
insb
dec
add
sub
cmp
mov
or
out
and
push
leave
inc
or
mov
jo
cs
cmp
inc
jl
stos
adc
jno
sbb
orb
lock
or
inc
add
sub
push
ret
testb
xor
mov
fs
adc
push
mov
push
mov
fcomi
adc
repz
sahf
test
add
scas
push
fdivs
cmpb
jecxz
jp
jecxz
loop
mov
mov
in
aas
fldcw
push
imulb
lcall
fists
data16
mov
pushf
out
push
pop
inc
ja
add
incl
lods
xchg
ror
xlat
lock
lock
push
push
sub
ffreep
sub
xor
sub
mov
addb
inc
add
fs
xchg
je
jmp
decb
orl
pusha
add
cmovp
xor
mov
add
enter
decl
xor
dec
add
xchg
pop
test
aas
je
adcl
jno
cs
mov
adc
pushl
shlb
adc
mov
push
xor
ja
jg
fstps
mov
push
mov
mov
adc
and
xchg
sub
jo
sbb
pop
and
adc
adc
mov
xlat
insb
mov
jnp
cmc
test
sbb
or
sbb
test
and
cmp
mov
aas
push
mov
or
test
lods
jb
rcll
add
aaa
fildll
outsl
std
mov
or
dec
mov
out
lcall
loopne
pushl
push
adc
cltd
inc
bound
test
incl
jmp
pushl
call
cld
xor
xor
rorb
movsl
adc
leave
rorl
jecxz
or
mov
or
add
lret
cs
jmp
sub
xchg
sub
mov
jl
xchg
bound
test
inc
add
mov
div
mov
or
pushf
ds
jne
fwait
call
jge
lea
xor
adc
loopne
dec
add
loope
xchg
mov
leave
xor
in
cmc
adc
pop
scas
xor
in
adcl
int3
mov
incl
in
xchg
cs
fwait
lea
sbb
mov
test
xchg
andl
xchg
mov
pop
js
push
sbb
arpl
divl
test
xchg
sti
fbld
inc
mov
iret
leave
sbb
in
pop
mov
pop
fidivl
mov
and
ret
or
pop
nop
push
aas
and
addb
es
call
fidivl
sub
dec
inc
jns
std
pusha
jno
cli
push
cld
sub
push
jmp
test
adc
or
or
out
dec
inc
sahf
nop
cmp
jg
cmpsl
mov
add
mov
jge
cmp
sub
inc
std
adc
mov
and
push
clc
mov
ss
adc
cmp
mov
push
out
addr16
loope
push
and
cmp
je
cwtl
pushl
sbb
and
mov
decl
mov
sahf
pop
mov
cmp
push
sub
mov
pop
aam
mov
call
and
scas
inc
push
xor
mov
mov
fs
cmpsb
push
inc
inc
inc
fcoml
push
jecxz
fildll
es
xor
cmp
jmp
cmp
and
ljmp
aaa
or
ljmp
aam
mov
jp
pop
stc
xlat
push
inc
mov
lock
xor
jno
push
lods
jge
sti
mov
lahf
push
pop
push
pop
mov
xor
add
stos
ficomps
icebp
push
add
fdivs
cmp
or
inc
and
or
inc
sbb
inc
fildl
add
and
pop
stos
mov
das
mov
jo
insl
add
inc
sbb
cmp
mov
add
mov
lahf
pop
xchg
or
mov
jmp
jg
sbb
shl
push
pop
jge
jge
mov
or
sbb
adc
incl
fs
ret
fimuls
adc
jge
mov
jae
mov
std
fmuls
fcoml
fildll
int3
push
adc
xchg
adc
ljmp
test
ret
jg
mov
push
dec
cs
or
jbe
call
sbb
add
imul
roll
sub
stos
fbld
aas
xchg
mov
push
mov
dec
push
adc
imul
enter
insl
mov
std
jno
mov
xor
pop
adc
cmp
adc
add
push
xor
je
popa
xor
insb
lods
adc
add
push
pop
adc
js
stos
xor
sbb
xor
jp
fildl
aas
sub
add
cmp
mov
xor
pushf
dec
aam
loope
xor
testb
shlb
lock
adc
adc
push
pop
sbb
cltd
notl
and
fnstcw
loope
mov
test
lret
pop
xor
shlb
outsb
inc
add
js,pn
push
sbb
jbe
in
in
push
incl
cmp
es
mov
mov
orl
or
cmp
jmp
xrelease
or
sbb
and
inc
mov
pop
cwtl
dec
cmp
pop
cmp
pop
mov
adc
sbb
xchg
popf
xchg
mov
xchg
adc
mov
push
jecxz
xchg
dec
out
repz
xchg
sub
adc
cmp
lret
fistl
out
imul
xor
je
add
test
sbb
pop
imul
das
mov
ljmp
xchg
mov
sahf
js
xchg
outsb
mov
test
and
das
mov
xchg
push
push
mov
imul
lods
mov
add
sub
insb
xlat
adc
sarb
sub
and
rcrb
xchg
movsb
cltd
mov
add
jl
dec
jl
pop
ljmp
push
addr16
mov
add
pushl
stos
cmp
ret
pop
je
stc
test
std
push
lcall
add
xor
inc
add
or
std
sub
pusha
incl
cld
or
or
push
decl
les
fimuls
push
in
cmpsb
mov
dec
ja
adc
je
dec
add
or
sti
push
subb
shlb
adc
je
sub
mov
and
outsb
and
mulb
mov
add
mov
xchg
jg
cli
imul
and
push
push
pusha
imul
into
inc
xchg
movsb
jb
pushl
cmp
bswap
push
or
mov
push
nop
rorl
push
in
jg
fcomps
fildl
mov
icebp
push
xor
cmp
mov
test
movsb
xor
nop
jmp
add
punpckhwd
inc
decl
lods
ss
cmp
cwtl
adc
mov
pop
and
mov
mov
shlb
outsl
jl
movzwl
lahf
test
cmp
in
mov
hlt
dec
cmp
adc
mov
test
fdivrs
movsl
add
xchg
xchg
loopne
ljmp
mov
lods
ret
mov
push
add
test
movsl
inc
andb
xor
cld
lcall
test
shll
fsubl
push
add
lahf
sbb
mov
sbb
imul
fs
push
push
iret
cli
adc
incl
add
jle
les
ds
sbbb
xor
das
rcrl
pop
cmp
lea
incb
adc
mov
inc
enter
adc
adc
xor
decl
loop
adc
jbe
adc
aaa
xchg
mov
stc
inc
or
cs
scas
les
xor
adc
mov
xchg
mov
sahf
sbb
and
scas
mov
ds
inc
adc
xchg
ljmp
xor
xchg
incl
hlt
bound
inc
push
and
dec
mov
jmp
add
addl
mov
xchg
add
fdivr
test
inc
jg
lods
lahf
ss
sub
out
lods
adc
aam
inc
rcll
adc
ror
push
pop
movsb
sbb
outsl
mov
mov
fstpl
dec
shrl
sbb
js
xor
inc
incl
aas
mov
stos
sbb
mov
insl
jl
arpl
dec
call
push
cmp
pushl
in
flds
mov
movl
ret
push
rcrl
fsubrl
cld
pop
leave
pop
or
stos
andl
xor
sub
push
in
add
pushf
mov
sub
fmull
into
fldenv
cmpsb
inc
add
call
cmpsl
and
push
dec
sbb
mov
push
push
lcall
psubsw
add
loop
scas
sahf
fmuls
xchg
cmpsb
jmp
inc
inc
mov
in
sar
call
fs
mov
adc
jne
cmpl
fs
push
add
fistps
aam
inc
std
mov
in
add
cmc
xor
rcl
jae
test
aam
stos
inc
inc
mov
mov
mov
aad
pop
mov
and
insb
call
push
xchg
outsb
mov
jp
std
jge
fistl
lcall
decl
inc
into
mov
dec
jmp
xor
mov
push
jmp
popa
sub
mov
pop
cld
incl
sub
lret
or
pop
pop
or
jle
xchg
loop
push
fs
cmpl
cmpsl
lahf
sbb
mov
cwtl
cltd
push
push
or
or
dec
add
cmc
jmp
dec
push
hlt
jns
pop
inc
xor
lods
xor
xchg
pop
loopne
jmp
sub
popf
push
std
jl
imul
inc
jg
fbld
cmpsb
mov
divb
push
and
je
jbe
lods
mov
mov
and
and
in
add
imul
clc
dec
fwait
clc
call
or
cmp
outsb
or
inc
adc
adc
lea
push
imul
incl
movsl
and
shlb
pop
das
sub
inc
push
call
jge
inc
xchg
jns
mov
and
mov
divb
js
inc
cs
mov
enter
push
mov
mov
dec
pop
popf
push
pop
add
hlt
xchg
mov
dec
lret
insl
inc
das
mov
das
adc
out
lret
fidivs
dec
sub
inc
dec
ljmp
std
lcall
dec
pushl
mov
xor
mov
scas
xchg
push
adc
xor
dec
icebp
cmp
adc
jg
adc
fcmovnb
mov
inc
mov
test
in
jne
pop
push
push
pusha
testl
sbb
push
xchg
clc
cs
xor
sbb
inc
and
jge
loope
mov
or
add
loopne
cs
xchg
adc
cmp
mov
mov
push
imul
adc
or
ljmp
adc
mov
imulb
push
jne
imul
std
jg
inc
jecxz
lcall
movsl
imul
jl
orl
jne
cmp
fsubrs
inc
cmp
pushl
shlb
sub
mov
repnz
ja
mov
lret
xchg
je
mov
shrl
pushl
add
cld
mov
cld
out
mov
scas
jb
call
clc
das
cld
pop
mov
jmp
mov
fstl
inc
rcrl
mov
mov
fiaddl
mov
int
inc
mov
mov
xchg
pusha
mov
mov
movsb
js
push
and
sbb
xor
add
add
jbe
and
pop
fisubrl
js
jp
pop
dec
rclb
in
insl
imul
or
movsl
test
je
sahf
mov
inc
push
iret
xchg
sti
fdivs
jns
lahf
xchg
and
in
ret
adc
and
leave
fadds
jo
push
in
subl
in
push
adc
pop
and
cmp
incl
cld
mov
cmp
sbb
fistpll
out
cmp
ret
push
or
pop
push
stos
fisttpl
and
subb
cmp
clc
or
push
push
cmpb
dec
mov
hlt
ja
or
push
sbb
test
push
rolb
mov
inc
ret
push
push
gs
sahf
sub
and
cmc
push
jmp
pop
or
mov
sbb
cmp
imul
or
mov
cmpl
push
std
add
xlat
mov
lea
test
and
jp
ljmp
sbb
call
push
dec
mov
adc
jnp
fucomp
dec
rcrb
sub
gs
cmp
add
push
insl
push
pop
insb
mov
sbb
cmp
xchg
or
add
fistpll
add
loop
hlt
ljmp
loopne
jns
in
mov
lock
enter
push
or
add
or
pop
fbld
push
sub
je
rcrl
xor
jl
mov
and
sbb
shlb
outsl
es
push
pop
jno
je
push
sbbb
loopne
dec
sbb
lcall
jge
or
iret
xor
int
fwait
and
sahf
or
scas
imul
pop
adc
cld
nop
sbb
or
fisubrl
sbb
jp
lret
dec
mov
sbb
arpl
aad
cmpsb
mov
and
xor
loopne
daa
bnd
push
cmp
xor
stos
and
mov
pop
js
daa
repz
mov
xchg
es
lock
push
mov
adc
ds
movsb
mov
movsb
imul
in
mov
or
subl
cltd
adc
ret
shr
out
push
xchg
jne
mov
ret
cmc
push
sbb
jg
call
ljmp
fs
test
adc
loop
sub
pusha
mov
sar
idiv
dec
out
mov
adc
cmp
or
int
fstl
int3
sar
or
adc
fimuls
cli
inc
fisubrl
or
das
pop
clc
mov
insl
push
inc
pushf
and
push
je
notb
loope
or
pop
idiv
adc
sub
les
or
insl
add
mov
aas
movsb
fisttpl
ucomiss
pusha
arpl
jnp
inc
xor
jo
and
xchg
stos
sbb
cmp
push
call
sbb
add
or
jo
cs
stos
mov
jmp
out
pop
pop
mov
xor
pusha
jl
add
mov
lea
out
jb
fxch
adc
or
inc
mov
pushl
or
or
outsl
adc
jmp
xor
jg
inc
mov
jmp
pop
and
arpl
sub
adc
xor
loop
or
int
inc
inc
or
mov
push
sub
and
xchg
sbbl
outsl
or
pop
adc
dec
outsl
lds
fcomps
add
pop
adcb
mov
syscall
out
mov
gs
cs
call
adc
push
ss
pop
add
loop
cmp
cli
inc
rcl
mov
inc
mov
pop
in
and
shlb
arpl
sbb
mov
mov
mov
cmp
adc
pop
xor
mov
adc
or
mov
push
mov
sbb
inc
addb
call
shlb
mov
pop
stos
push
cmp
clc
mov
test
or
rcpps
push
mov
and
mov
insl
movsl
mov
jge
jge
out
loop
adc
jmp
adc
xor
mov
rclb
xor
or
cli
lcall
xor
jl
jg
shr
and
adc
jmp
add
call
add
aas
cmp
loopne
rorb
lret
pop
add
aas
and
ret
ret
sub
mov
test
clc
jb
mov
inc
mov
push
ret
das
push
sbb
mov
sbb
xchg
loop
pushl
stos
mov
shrb
push
stos
js
jg
repnz
test
fsubrp
add
ss
cmp
sub
xchg
int
nop
or
pop
xchg
lods
repnz
cs
pushl
xchg
push
xchg
jl
adc
inc
jl
dec
mov
jecxz
mov
pop
loop
or
pop
mov
das
aad
mov
xor
xchg
fwait
push
shrl
mov
scas
std
adc
adc
and
sub
jg
jg
push
push
or
or
push
daa
sbb
mov
and
dec
clc
sbb
jp
loope
sub
bound
or
or
pop
fadds
jecxz
aaa
or
lock
pop
push
insb
add
or
fucomi
es
push
rcrb
call
popf
inc
adc
add
pusha
add
scas
enter
jmp
xchg
jg
dec
rolb
add
testb
dec
movsl
jp
std
pop
mov
and
fisttps
jecxz
and
dec
cld
shlb
and
jo
or
cld
push
jo
push
xchg
loop
push
jge
jg
jne
test
adc
pushl
movl
lods
fsubrp
mov
push
inc
mov
sub
push
lea
loopne
mov
inc
shrl
decl
ffreep
jo
push
xchg
dec
mov
imulb
jp
push
aaa
sti
loop
xor
mov
fs
mov
adc
popl
xor
xchg
jle
je
inc
cs
dec
ss
xorb
notb
add
fcoml
pop
push
mov
inc
xor
cltd
je
inc
lods
cli
adc
subl
inc
lret
je
or
cwtl
mov
jmp
xor
xchg
clc
adc
das
repnz
cld
test
or
or
call
cmp
mov
into
xchg
call
push
test
cmpsb
ficoml
lret
aam
sub
inc
jg
repnz
xchg
and
shl
sub
mov
xchg
fisubrl
dec
mov
or
and
aam
ret
pop
fcoml
or
cwtl
outsb
aad
cmp
lock
ret
and
lock
inc
dec
jge
xchg
push
sti
add
inc
xchg
sbb
faddl
adc
call
pushf
mov
or
inc
jmp
and
push
pop
insb
idivb
mov
insb
fildl
cmp
inc
inc
jne
push
push
sub
ds
sbb
add
ljmp
adc
push
and
jo
mov
bound
adc
mov
push
mov
adc
shrl
mov
pop
rclb
mov
push
ljmp
adc
test
fiadds
push
jne
enter
cli
sub
icebp
loopne
dec
adc
call
lahf
nop
nop
push
es
mov
push
xchg
in
inc
inc
mov
pop
jmp
popf
lret
or
jg
scas
orb
ret
sbb
lea
push
push
cmp
jle
xchg
jo
lcall
fdiv
sbb
pushf
xor
and
je
sub
push
pop
dec
aaa
adc
sub
or
inc
sbb
inc
pop
clc
test
movsl
sbb
adc
adc
cmp
dec
test
pop
mov
je
sub
mov
jmp
stos
mov
cmp
mov
jb
int3
adc
stos
mov
jge
add
or
rolb
cs
cmp
xchg
lods
cmc
ss
add
mov
adc
aas
add
mov
shrl
pop
inc
insb
sbb
daa
jl
ret
inc
pushl
cmp
mov
cmp
dec
dec
cltd
sub
shll
mov
stc
shll
repz
cmp
xadd
testb
cmp
jg
add
decl
test
jae
mov
sub
mov
orb
inc
rcll
jge
pusha
aad
push
lahf
daa
push
mov
mov
fwait
pop
mov
mov
cmp
push
add
push
clc
sbb
xor
add
scas
or
push
outsb
fadds
dec
inc
jl
out
adcb
jg
push
push
sbb
dec
xchg
rorb
push
inc
mov
or
fs
testb
fimull
stos
dec
sbbl
ja
test
enter
mov
xor
jo
jge
push
dec
lock
fsubl
cmp
push
mov
pusha
mov
push
pop
loopne
arpl
lds
ljmp
add
add
ja
sbb
push
insl
jmp
xor
filds
in
jo
cltd
jp
mov
mov
sub
fsubp
and
and
and
loope
in
cmpsb
or
xchg
push
in
inc
dec
test
sbb
adc
push
push
and
ja
pop
ret
aas
nop
addb
ja
lods
cmp
div
or
adc
gs
adc
pop
adc
lahf
push
xor
ffreep
scas
fidivrs
adc
je
jno
jnp
push
xlat
sbb
call
pop
jne
pop
dec
mov
insl
lods
or
pusha
sarb
lock
add
adc
xchg
movsl
outsl
test
push
pop
popa
xchg
addr16
incl
xor
pushf
mov
and
xor
xorb
adc
adc
ljmp
push
add
pop
sbb
pop
push
shll
ret
jbe
or
cmp
sub
cmp
dec
in
adc
pop
cmpsb
in
or
or
jnp
mov
jle
daa
pop
inc
hlt
loop
std
inc
icebp
mov
xchg
pusha
xchg
pop
xchg
add
mov
ret
sbb
cmc
inc
and
xchg
fwait
and
or
adc
fcmovnb
jg
push
fiadds
or
ret
mov
adc
adc
and
pop
nop
lock
fists
test
or
pop
push
dec
dec
add
push
add
add
push
not
ljmp
outsl
je
inc
xchg
call
call
adcb
es
pop
inc
inc
fwait
incb
out
fisubrl
jp
imulb
or
ret
jne
sar
add
mov
lret
jb
shrd
dec
sbb
ret
mov
call
cmp
add
xorb
xor
cmp
jne
xor
pop
push
lcall
sbb
inc
inc
cmp
mov
mov
jg
bound
add
lret
daa
jns
add
cli
jo
roll
push
and
lea
jle
das
pop
pop
dec
in
mov
orl
inc
pop
and
sbb
lods
push
clc
daa
lret
add
lret
in
dec
aas
into
push
scas
or
push
and
push
jo
cmp
cmpsb
call
sbb
sub
inc
pop
push
js
inc
imul
jo
lret
cmp
pop
xchg
push
mov
mov
fsub
xor
jne
mov
adc
mov
xchg
mov
push
fisttps
iret
aas
xor
stos
mov
pusha
push
jbe
sarl
dec
scas
in
dec
mov
pop
add
mov
cltd
incl
pushl
icebp
sub
fcomps
add
sbbl
pop
or
movsl
decl
mov
add
sti
hlt
or
mov
pop
and
jmp
jbe
fs
adc
push
and
into
bound
mov
aam
movsl
jo
mov
insl
cmp
sahf
leave
sbbl
mov
loope
xchg
mov
mov
mov
scas
jo
subl
dec
sub
fistps
adcl
push
mov
sbb
mov
fsubs
mov
mov
cld
ljmp
push
mov
xor
sahf
aam
xchg
adc
cld
adc
push
mov
sbb
inc
test
mov
enter
mov
push
pop
mov
adcl
fstpl
xchg
xchg
add
dec
sti
pop
xchg
stc
mov
shlb
push
cmp
jmp
or
jne
inc
movsl
push
pop
push
decl
movsl
rcr
cli
cmp
out
mov
jge
cld
jmp
xchg
shrl
push
sub
ljmp
rcll
aaa
or
sbb
xchg
imul
jnp
jp
jge
ficoms
xchg
loopne
test
inc
jmp
leave
adc
mov
and
add
into
es
incl
jbe
cmp
sti
test
mov
out
incl
ss
data16
clc
leave
outsl
dec
cmp
mov
jg
lcall
daa
jne
cltd
dec
cmp
cmp
and
push
pop
sub
mov
xor
rcll
or
insb
adc
mov
fcomp
adc
dec
sbb
sub
mov
fisubrs
inc
lea
sub
push
inc
fucomi
call
sbb
mov
mov
and
popf
incb
inc
rorb
mov
push
clc
sbb
out
push
or
imulb
ljmp
stc
andb
lock
ret
add
lock
cwtl
xchg
xor
jo
sub
mov
and
out
inc
insb
mov
rclb
inc
inc
inc
lcall
inc
xchg
cmp
push
int3
xor
mov
inc
lret
mov
je
cld
sbb
das
inc
dec
lock
or
jmp
cmp
fs
or
das
je
adc
xor
scas
xor
or
jno
call
or
je
lock
dec
mov
adc
cmp
or
or
or
test
add
lret
fcomi
and
outsb
or
mov
or
call
adc
clc
pop
insl
jmp
xchg
push
and
sbb
mov
mov
addr16
push
and
stos
inc
negl
jg
mov
in
mov
or
sbb
cltd
bound
pop
pop
push
in
pushl
ss
xor
mov
jae
cs
xchg
aaa
lods
add
mov
test
les
cmp
rolb
je
outsl
push
jle
push
ret
out
jecxz
dec
or
pop
cli
test
push
pushf
mov
cmp
xchg
and
icebp
inc
mul
or
les
test
xchg
outsl
cmp
jg
xchg
daa
sbb
aam
sbb
inc
dec
fsubs
arpl
out
push
loopne
fsubrl
fistps
ljmp
pop
out
xor
sbb
sbb
out
jae
test
push
and
push
xor
adcl
mov
popa
pop
cmpsb
jle
adc
aam
mov
or
cmovo
xchg
scas
xchg
mov
cmpsb
mov
mov
push
loope
pushfw
pushf
xor
pop
popf
loopne
rorl
fldenv
imul
ljmp
std
sbb
adc
fnstcw
dec
xchg
roll
adc
pop
xor
aam
test
push
cltd
xchg
fs
repnz
rorb
cli
call
jle
fidivrl
sti
cmovne
dec
or
outsb
ja
outsl
cmp
inc
cmp
call
nop
stc
scas
inc
mov
rorl
fidivrs
decl
mov
add
add
scas
pop
push
mov
call
clc
test
out
and
out
pop
xchg
clc
cs
pop
push
push
cli
cmp
lds
in
scas
push
inc
je
adc
adc
sbb
sub
or
pop
mov
mov
roll
jae
add
fdiv
mov
cmpsl
loop
outsb
adc
nop
xchg
cltd
adc
outsb
mov
imul
mov
scas
add
iret
xor
cmovo
leave
mov
sarb
xchg
adcb
pop
jge
fcomps
ds
mov
adc
sub
incl
cmp
ss
nop
adcb
pop
and
xchg
lods
jae
sbb
xor
aaa
hlt
sbb
push
bound
test
xchg
xor
adc
in
aam
out
addr16
mov
popf
add
ret
cwtl
sub
push
inc
dec
pop
imul
mull
ret
fidivs
rolb
fdivrp
icebp
jns
mov
shlb
cmp
test
xchg
push
mov
push
cmp
pop
cmpsb
add
mov
cmp
or
lcall
fdivs
sti
sbbb
btr
bound
call
test
fldt
ds
adcb
mov
xchg
push
and
faddl
add
and
xchg
xor
jp
xor
cmp
adc
jae
and
shl
decl
je
mov
push
filds
das
enter
clc
xchg
cmp
scas
inc
add
sub
push
add
dec
or
push
add
aaa
cmp
sub
sub
dec
inc
outsl
adc
hlt
pop
js
or
mov
xlat
sub
dec
mov
sarb
and
fs
outsl
mov
mov
icebp
adc
inc
test
mov
sub
sub
outsl
insl
xchg
clc
push
std
aas
xor
push
add
outsb
sub
cld
cltd
in
push
jnp
xor
xchg
jp
add
push
sub
daa
adc
fimull
test
add
xchg
test
orl
loope
orb
push
rclb
mov
decl
aam
jecxz
mov
jno
and
jne
or
adc
xor
call
lds
push
mov
xor
or
out
mov
rorl
lahf
add
paddw
jg
cmp
inc
js
les
lods
mov
xor
inc
push
fildll
xchg
cmc
arpl
push
mov
jmp
mov
jne
fstl
cmp
iret
inc
adc
insb
dec
jmp
push
adc
sub
adc
mov
mov
add
cmp
xor
add
ljmp
sub
pop
sub
cli
mov
inc
or
push
in
mov
iret
hlt
popf
sahf
and
test
add
adc
stc
dec
fildl
mov
call
inc
add
push
pop
das
fidivrs
inc
shll
xor
inc
je
imul
in
test
add
pop
inc
cmp
and
incl
xchg
shrl
cmp
test
xchg
mov
loope
and
enter
in
jmp
out
or
adc
pop
mov
cwtl
push
insb
cld
pop
sbb
inc
sbbb
ret
pop
push
add
lret
sti
jg
aas
cmpsl
shrl
into
loop
fmul
jge
fcmovu
or
fsub
mov
pop
cli
fcomps
adc
mov
jg
std
push
leave
mov
call
xchg
dec
jl
pop
cmp
mov
lret
mov
std
mov
or
js
jg
clc
sub
mov
fsubs
mov
cmp
add
sbb
jae
lods
jbe
sbb
cs
fsubrl
mov
and
mov
xchg
roll
cmp
call
cmp
push
loope
sub
mov
bound
mov
js
fists
or
dec
clc
jg
pop
lods
jmp
cmp
adc
and
inc
lock
popa
fdivrs
fildl
push
pop
mov
sub
adc
decl
rorl
fsts
cmp
adc
cs
xor
cmpsb
std
pop
mov
pop
roll
mov
and
pushf
jle
add
mov
fs
mov
call
add
and
inc
jo
mov
jb
daa
mov
jecxz
jbe
dec
mov
outsl
sub
cld
cmp
out
sub
lea
lock
and
xchg
and
popf
repnz
mov
dec
adc
cmpsb
cld
ljmp
ret
pop
js
pop
aam
cmpsl
insl
movsl
mov
sbb
sub
call
pop
outsl
pop
cmpb
in
adc
or
add
mov
cld
xchg
mov
xchg
sub
xor
add
loop
jp
adc
jmp
push
jmp
xchg
sub
cmpl
mov
jg
push
pop
aas
dec
cwtl
push
bound
mov
mov
hlt
call
pop
mov
pop
shrb
jmp
lock
or
repz
aaa
cli
outsl
hlt
mov
lcall
mov
push
or
push
add
mov
add
lahf
bound
push
jge
pushl
das
xchg
mov
xchg
jne
xchg
adc
mov
jnp
pop
test
xchg
push
clc
mov
add
or
sub
sub
outsl
hlt
dec
std
push
data16
mov
popaw
mov
mov
sbb
pusha
adcl
rolb
and
ljmp
test
inc
mov
leave
pop
insl
fnsave
test
push
pop
in
or
jle
add
stc
outsl
icebp
aaa
addb
inc
xchg
adc
push
and
push
sub
loop
sub
xor
add
insb
lahf
roll
clc
pushl
push
daa
clc
je
jne
inc
popf
mov
mov
or
pusha
fisttpl
inc
cli
decl
roll
scas
mov
and
ljmp
aaa
dec
add
push
cmp
mov
fiadds
enter
push
push
enter
daa
popa
loop
sbb
cltd
dec
repnz
mov
mov
and
push
stos
sub
cmpsl
popl
icebp
pop
adc
pop
jbe
inc
and
add
inc
test
pop
es
hlt
daa
jle
xlat
test
and
add
jg
dec
xor
add
movsb
inc
push
test
push
or
fdivl
push
es
pop
in
or
mov
add
add
mov
lds
xchg
je
pop
stos
mov
push
les
outsl
push
push
push
lea
ret
sbb
test
aam
push
aaa
mov
iret
adc
mov
or
sub
mov
add
ja
adc
xor
movl
add
fmuls
jle
pop
mov
jl
pop
rolb
std
add
sbb
xor
mov
mov
jge
rorb
call
dec
jne
jnp
or
cmp
mov
sti
mov
shlb
sar
add
lea
dec
adcb
int3
dec
lahf
push
push
icebp
add
movsb
pop
call
add
pop
add
cmc
xor
cwtl
mov
clc
inc
add
and
sub
and
xor
mov
and
jb
mov
and
pop
addr16
add
adc
jbe
and
hlt
pushl
cmpsl
cmp
cmp
mov
pop
cli
mov
pop
add
jae
rcll
or
jb
xchg
push
call
testb
mov
inc
ljmp
dec
add
xchg
xor
or
adc
sbb
and
clc
cli
jmp
add
pop
cld
mov
and
jl
inc
insb
adc
testb
call
popf
jmp
stos
inc
sub
int
sbb
pushl
inc
int
test
call
add
push
sbb
idivl
mov
stc
test
ja
fists
cltd
xor
repnz
data16
cld
mov
xchg
scas
lahf
rcr
inc
fistpl
push
fadd
xor
enter
stc
fidivrl
je
leave
add
xchg
int
pop
fistpll
inc
pop
and
mov
arpl
inc
or
add
or
mov
roll
push
push
jmp
jnp
in
fadd
push
and
and
lcall
sbb
push
fdivrs
test
jo
sub
icebp
les
push
cmpb
push
cli
out
push
mov
or
mov
sahf
pop
xchg
cli
ljmp
and
jo
sub
jl
or
popf
pop
movsl
dec
loop
adc
jb
ja
aaa
out
in
pop
aad
loop
xor
lds
call
aas
dec
icebp
add
sbb
das
mov
inc
insb
stos
inc
outsl
std
jbe
or
sbb
push
mov
mulb
daa
inc
jnp
add
shll
mov
pop
xchg
jg
call
pushl
dec
je
sti
fs
push
ja
stc
push
movl
inc
push
and
dec
mov
bound
push
add
test
je
inc
pop
aam
imul
fwait
mov
push
pop
int
das
cmp
add
pop
movsl
ljmp
dec
loope
call
jbe
or
and
add
xor
mov
jmp
mov
leave
push
mov
pop
sbb
add
sar
cmp
cmp
sbb
test
sub
mov
ljmp
call
cmp
in
out
jae
test
decb
hlt
das
mov
popa
or
push
loopne
mov
add
std
jg
push
test
cltd
sub
xchg
push
add
xchg
inc
mov
or
repnz
cwtl
out
jg
or
andl
or
jo
inc
incl
push
xchg
and
add
adc
movsb
std
mov
or
jbe
mov
data16
clc
call
pop
loopne
inc
sbb
hlt
adc
fs
push
push
dec
fstps
mov
unpcklps
cmp
sahf
adc
inc
add
loopne
hlt
fimull
insb
js
lock
hlt
lahf
pop
dec
adc
jp
or
cli
fwait
call
sbb
push
mov
mov
mov
clc
cmp
mov
sbb
push
sbb
dec
dec
negl
fcoms
mov
je
mov
mov
inc
iret
cld
incl
jecxz
pop
int3
xor
outsl
std
or
int
pusha
adc
mov
lea
sub
pop
movsl
pop
or
cld
pop
fnstcw
and
das
inc
and
and
fnstsw
xchg
jle
movsl
mov
fldenv
xchg
test
adc
fs
pop
in
inc
jg
xor
testb
inc
dec
mov
jg
lds
outsl
mov
sub
adc
mov
xor
shl
jae
int
mov
mov
or
adc
inc
hlt
iret
or
in
fcoms
insl
rclb
adc
je
add
push
daa
pushf
fidivs
in
hlt
mov
and
jg
inc
mov
add
xchg
in
pop
pop
sbb
fcomps
mov
xor
pop
sbb
call
cli
or
mov
push
es
rclb
call
push
push
mov
les
xchg
jmp
dec
dec
adc
loopne
data16
call
xchg
or
lcall
or
jle
psubsb
arpl
ds
mov
xlat
std
faddl
mov
inc
shlb
or
xchg
xchg
sub
adc
fimuls
cld
lea
cld
test
push
jle
in
dec
andl
and
pusha
ret
and
mov
cld
aaa
pop
pop
int3
sbb
pop
int3
rorb
mov
cmp
fildl
aam
out
aas
mov
pop
mov
push
test
orl
cmp
adc
loope
in
dec
xor
jl
bound
sbb
sub
or
cmp
xor
cli
ljmp
inc
mov
push
notl
pop
jl
scas
xor
jle
dec
push
in
xchg
add
push
popf
loope
or
jae
das
jnp
rol
dec
mov
jg
cltd
es
jl
clc
xorl
mov
mov
mov
push
mov
lock
andl
or
adc
pop
insl
mov
adc
inc
in
pop
les
shlb
adc
hlt
fildll
xorl
mov
adc
pop
js
inc
lcall
cld
pop
roll
push
leave
popf
lock
push
pushf
imull
in
push
or
enter
sbb
loopne
xor
dec
mov
nop
xor
inc
jne
scas
inc
iret
pop
ljmp
popa
push
movsl
add
jns
cmp
std
mov
push
push
dec
aad
add
push
movnti
mov
mov
and
scas
and
mov
push
add
lea
je
ds
sub
scas
adc
sbb
push
mov
filds
cmp
les
inc
hlt
adc
xor
push
cmp
popa
mov
lock
jecxz
cli
ss
jbe
sahf
dec
jo
and
jg
in
and
arpl
nop
push
rorb
mov
push
outsl
sbb
call
inc
roll
xor
xchg
push
lcall
cmp
pushl
inc
clc
cmpsb
xchg
push
and
push
rcrl
insl
inc
ljmp
lods
inc
dec
inc
adc
pop
and
inc
out
clc
sbb
call
outsb
push
fcomi
or
sub
jbe
adc
mov
sub
lock
sti
adc
mov
scas
roll
out
jo
mov
fcoms
iret
outsl
xchg
shr
pop
add
push
jns
outsl
in
mov
push
cltd
push
lods
push
push
mov
jp
negl
push
cld
decl
mov
je
mov
pop
decl
inc
mov
and
insb
add
ja
xor
or
mov
ja
dec
loope
int3
push
mov
pop
adc
mov
mov
lods
sub
test
enter
clc
das
cld
cltd
into
mov
dec
les
loope
sbb
pop
jmp
push
adc
pop
shll
pop
cld
mov
or
push
cmovb
jge
inc
sbb
dec
push
xor
sbb
xor
incl
filds
push
push
cmpb
add
sti
outsl
cltd
inc
test
add
inc
es
or
sbb
sahf
in
mov
std
xorl
sub
insl
lahf
or
jbe
sub
or
sub
xor
sbb
mov
xor
adc
mov
je
imul
mov
sub
idiv
insl
inc
pushf
add
cltd
rcll
ds
loop
hlt
fwait
mov
cld
xchg
fldl
fmulp
int3
push
mov
out
jmp
rcrb
test
push
jl
xor
ljmp
mov
mov
xchg
mov
mov
pop
and
orl
push
jp
movsb
lret
orl
pop
mov
roll
and
push
jg
out
les
jno
shlb
push
cmp
or
pop
mov
ret
in
adc
cmpsl
es
mov
mov
lea
inc
pop
or
cs
mov
das
add
jecxz
cli
cmc
mov
pop
push
push
insl
hlt
pop
inc
xlat
inc
stos
sbb
add
insb
pop
jmp
inc
mov
mov
or
mov
aaa
cmp
and
int3
dec
push
imul
xor
mov
cmp
and
loopne
jmp
dec
adc
xchg
xor
mov
insb
add
popf
test
lods
scas
lcall
xchg
and
fdivr
adc
loopne
add
xchg
decb
push
cmpsb
and
xchg
or
mov
dec
push
push
push
push
push
lcall
ret
insl
in
adc
adc
je
outsb
xorb
add
mov
cmp
addb
jg
pop
mov
push
insb
adc
inc
push
dec
xor
rcrb
lcall
push
aam
adc
call
dec
sub
ficoms
xor
pop
mov
mov
rolb
andb
pop
stos
cmpsb
or
adc
sbb
adc
add
mov
pop
push
test
push
adc
xor
rolb
mov
dec
xchg
mov
out
call
sbb
iret
lret
sbb
sar
das
movsb
push
jb
pop
test
push
fwait
nop
sbb
cli
fstpt
pop
mov
jns
push
jbe
insl
pop
mov
xchg
jg
jb
dec
jg
sbb
shrb
push
push
popf
push
sbb
outsl
dec
cmpsl
sub
pop
loope
or
ret
insl
push
xor
call
mov
inc
hlt
lcall
adc
adc
adc
outsl
or
dec
and
jb
push
mov
call
jne
and
int3
jnp
jno
dec
sbb
jg
mov
in
xlat
inc
out
fyl2x
sbb
pop
std
cmp
pop
mov
adc
sub
jne
or
push
loopne
data16
pop
clc
xlat
add
pushf
fwait
sbb
adc
mov
jno
repz
pusha
popa
pop
subb
xchg
dec
jge
xor
aas
push
push
dec
hlt
mov
pop
lods
push
sbb
imul
xchg
sahf
fsubrl
pop
clc
jecxz
pushl
jp
lret
out
inc
xor
aaa
mov
push
inc
in
popa
cmp
add
jle
pop
insb
loopne
mov
mov
addr16
lahf
fsubrl
pushl
daa
dec
pop
add
push
hlt
mov
add
push
and
in
daa
ret
xchg
add
ud0
scas
mov
in
inc
test
push
das
test
and
mov
in
sahf
call
push
call
shlb
cmpl
cmp
dec
lock
lcall
mov
lods
mov
std
fucomip
add
inc
xor
sarb
adc
pop
add
or
cld
test
push
loopne
out
adc
inc
or
push
leave
push
adc
shrb
rcll
jge
insb
mov
dec
xchg
inc
cltd
jbe
sbb
aad
push
es
loopne
aad
scas
shr
jge
call
jp
je
push
adc
daa
out
push
xchg
pop
dec
lcall
push
add
test
inc
push
jb
and
lret
sarb
shlb
insl
jg
push
mov
jge
stc
add
daa
psllw
sti
out
imul
in
push
jg
jno
add
inc
inc
movups
pop
add
add
je
xchg
mov
shll
pop
mov
xorb
in
mov
lock
xchg
mov
and
sbb
call
ret
adcl
sbb
add
hlt
xor
jge
andb
push
sub
inc
fcmove
jmp
pop
mov
pop
fldt
nop
push
xor
adc
or
add
stos
sub
dec
ficoml
pop
inc
test
push
rcl
cmp
xor
push
mov
pop
lret
je
fs
mov
sarl
jns
jl
popa
das
sahf
or
ds
insb
ljmp
sub
addr16
pop
loop
test
leave
jecxz
jle
fwait
loop
popa
xorl
decl
xchg
add
ja
cmp
incl
flds
stc
icebp
xor
sbbl
cli
xchg
add
scas
call
decb
aas
lock
push
cwtl
aaa
jmp
call
rolb
je
inc
loope
pushl
pop
mov
mov
mov
sbb
popf
ficoms
jg
and
jle
xchg
scas
jo
adc
ljmp
stos
mov
out
test
xorl
aaa
or
lock
sbb
sbb
add
jo
or
rclb
push
in
testb
and
adc
sbb
push
in
pop
lds
insb
mov
adc
sti
sub
push
pop
aas
add
sbb
add
mov
xor
cwtl
in
out
or
out
mov
adc
and
pop
decb
add
cmpsl
adc
jp
adc
pusha
add
pushl
pop
in
mov
cmp
fcoms
mov
lcall
hlt
jg
les
add
not
mov
and
mov
or
fcomps
call
xor
loopne
pushl
push
mov
or
lea
sub
and
icebp
sbb
mov
pushf
sbb
sbb
pop
mov
scas
fstpl
loope
cmp
gs
jmp
stc
xor
mov
popf
or
pop
js
push
mov
pusha
imul
adc
add
adc
clc
sub
mov
aas
xchg
mov
pusha
jecxz
push
or
clc
ljmp
adc
dec
fwait
add
push
and
push
icebp
xchg
lea
mov
push
inc
pop
test
mov
sub
movsb
enter
push
or
cltd
hlt
push
sbbb
sbb
test
shl
fildll
shl
and
sub
out
lock
and
nop
and
jb
jb
jo
decl
call
mov
lahf
aad
jnp
pop
push
add
mov
mov
fimull
jno
loopne
ds
or
test
pusha
test
loopne
bnd
aaa
adc
cmp
mov
nop
call
xor
mov
xor
push
mov
pusha
jbe
adc
imul
fcoms
orb
and
push
inc
jge
pop
mov
jo
inc
cmp
fnstsw
push
popw
push
test
inc
dec
mov
ss
aas
sarl
daa
sub
cmp
add
addr16
outsl
lock
push
dec
mov
cmp
fs
push
adc
insl
rclb
sub
pop
idiv
mul
ret
sbb
adc
dec
dec
cld
push
mov
imul
sbb
mov
xor
dec
hlt
mov
lea
movsl
pop
jl
adc
xrelease
sti
inc
fists
mov
test
out
lock
iret
mov
mov
pop
inc
lcall
clc
add
mov
sub
insl
test
and
es
jmp
xchg
lcall
add
scas
mov
aas
jg
orb
mov
adc
aam
hlt
adc
rcr
jg
mov
mov
sbb
cmp
sub
add
mov
scas
sbbl
or
stos
sbb
add
je
pusha
lea
mov
or
xor
pop
pop
add
cli
cmp
pop
adc
insb
or
inc
sub
sub
je
call
fsts
push
mov
xor
sub
mov
mov
or
xor
add
adc
pushf
jl
pop
mov
mov
cmp
in
sbb
shlb
push
ss
jl
jmp
cmp
sahf
call
pop
cmp
or
adc
daa
xchg
mov
lret
jge
cvtps2pd
ds
pop
xchg
scas
push
inc
fiadds
xchg
test
call
dec
or
mov
lock
cmpsb
loopne
lahf
or
cmp
xor
in
mov
dec
movsb
mov
icebp
shlb
pop
push
call
adc
cmp
out
adc
inc
add
dec
jmp
ljmp
push
xchg
push
es
push
je
adc
mov
mov
jbe
enter
inc
jbe
or
sbb
fbstp
mov
dec
push
jle
sub
es
ljmp
cwtl
adc
or
xchg
pop
andl
std
mov
lds
jg
out
mov
mov
jnp
call
loop
dec
xor
pop
mov
icebp
int3
adc
sahf
add
push
adc
xor
or
jne
mov
aaa
pop
jmp
mov
inc
gs
adc
mov
inc
cmp
and
mov
call
rcrl
mov
mov
mov
inc
jne
pop
stos
jl
mov
pop
dec
dec
lock
push
cli
aas
xchg
call
sahf
dec
sub
inc
dec
cmpsl
xchg
lret
movsl
loop
xorl
mov
push
or
out
fcompl
xchg
in
fadds
push
adc
fsubrs
mov
jp
std
inc
aam
sti
mov
and
sub
imulb
or
dec
jne
jg
aas
loope
or
repnz
nop
rcll
fildll
test
and
rorb
stos
add
mov
int3
pop
fnstsw
mov
mov
pop
push
sbb
xlat
xchg
pop
inc
cmp
lret
enter
jmp
and
xchg
ja
and
jae
push
outsl
aad
repz
jb
jmp
cmpsb
out
dec
xor
xchg
adc
inc
lock
lods
xor
movsl
nop
arpl
adc
fs
or
rep
aad
sub
and
jnp
dec
add
or
rolb
mov
mov
fdiv
pusha
sbb
add
movsl
adc
push
jnp
mov
js
lds
pop
xor
sbb
mov
or
insl
lods
inc
add
or
xchg
sbb
test
outsb
stos
dec
pop
or
fs
xchg
aaa
mov
cli
idiv
ds
ffreep
xchg
gs
ds
rolb
fs
or
inc
dec
out
or
mov
movsb
cmp
fbstp
shll
add
cltd
inc
mov
sbb
or
inc
dec
cmp
rcrl
lcall
mov
loope
pop
xor
pushf
mov
cltd
out
mov
js
cmp
pop
lock
add
sbb
inc
popf
mov
fmull
sar
sub
fistpl
int3
mov
dec
aad
lods
adc
push
fsts
cwtl
jmp
and
outsl
loopne
pop
loope
out
or
sub
cld
test
cmp
mov
xchg
jge
bound
dec
cmp
stos
mul
push
shr
push
pop
mov
bound
mov
pop
sti
ret
dec
push
dec
cli
inc
cmp
ja
add
xchg
xor
jo
pop
rcl
or
aaa
mov
ss
xchg
in
push
or
dec
inc
mov
mov
mov
rorl
out
inc
lock
pop
mov
ret
ja
add
in
xlat
clc
add
pop
cmpb
push
mov
inc
test
inc
ljmp
pop
mov
xor
into
xchg
xor
fdivr
mov
iret
sbb
pop
or
addl
outsb
inc
fs
pop
adc
out
xor
jmp
notb
xchg
clc
sbb
jmp
incb
push
add
and
and
jmp
sub
add
sar
decl
xor
push
push
fwait
jge
mov
sbb
inc
inc
and
cmp
sti
jbe
stos
sti
mov
pop
mov
lea
test
insb
str
lret
mov
mov
cld
nop
outsb
pop
stc
arpl
inc
aaa
add
test
jo
push
insb
daa
inc
adc
adc
insl
lods
or
mov
add
ljmp
jmp
add
or
lock
add
adc
push
je
daa
mov
xor
hlt
fucomip
and
mov
cmp
and
cmpsb
push
inc
test
addb
movzwl
repz
int3
mov
mov
and
and
mov
subl
push
fimull
and
sub
xor
ja
or
mov
gs
add
mull
add
mov
lcall
testb
jne
or
je
dec
addb
adc
loop
loopne
les
push
in
ret
pop
dec
dec
sub
ljmp
cltd
xor
push
push
addl
push
and
pop
rcl
adc
fs
or
pushl
pop
mov
test
push
enter
adc
hlt
xchg
call
loopne
push
mov
sub
stc
cmp
adc
push
jae
or
bound
inc
nop
dec
es
fwait
jmp
xor
jmp
push
push
outsb
mov
cs
cmp
cmp
inc
adc
insb
adc
mov
fidivs
leave
mov
jnp
rclb
and
rorl
mov
aas
hlt
repz
cmpsl
shl
orl
pop
into
mov
push
scas
outsb
aad
jl
jge
dec
cs
outsl
rolb
cmp
push
movsl
mov
fs
lret
sbb
mov
adc
pop
loop
jmp
int
push
mov
push
push
inc
notl
adc
mov
adc
jb
push
sub
xor
sbb
or
sbb
frstor
push
shr
adc
hlt
mov
xchg
mov
aas
arpl
xchg
mov
iret
loopne
pop
loopne
push
pop
xchg
iret
dec
leave
adc
inc
jmp
stc
inc
jae
dec
cmp
or
outsl
int
and
sbb
fistps
call
stos
std
hlt
bound
push
jp
inc
int3
mov
cmc
aaa
adc
pop
dec
cmp
shrl
enter
xor
lea
cwtl
testb
imul
mov
push
sub
mov
jmp
sbb
int
test
outsb
push
push
adc
add
pop
inc
pop
inc
fists
add
rorb
mov
adc
jno
ljmp
mov
pop
pop
jbe
out
cmpsb
jae
pop
inc
adc
out
mov
add
je
mov
cmpsl
push
sbb
daa
in
jl
pop
push
and
lcall
or
inc
imul
jp
les
addb
sbb
call
mov
push
sub
cmp
add
add
sbb
mov
jo
std
lcall
loopne
push
adc
popa
sub
in
fists
jl
jne
rorl
sbbl
push
push
out
jl
jp
xor
sysenter
mov
shlb
adc
sub
pushl
sets
hlt
push
push
ret
call
daa
subb
fstps
sbb
insb
mov
and
adc
and
lret
cmp
sbb
cmpsl
pop
paddq
xchg
incl
sbb
call
mov
or
sub
push
cmp
add
imulb
add
lock
js
jle
inc
push
jnp
inc
mov
mov
cmp
clc
push
in
js,pn
xchg
dec
lret
dec
inc
add
adc
jbe
mov
adc
and
insl
sub
andb
outsl
lock
add
or
add
inc
je
push
ljmp
lods
mov
inc
pop
inc
mov
push
sub
pop
lahf
jno
sub
loopne
insl
jg
loopne
fdivl
mov
imul
loope
push
push
and
test
push
mov
test
mov
les
jo
jg
jl
mov
sub
mov
call
add
jo
xchg
movsb
push
fimull
cld
add
cmp
arpl
inc
mov
jg
fistpl
test
mov
add
sbbb
dec
stos
jmp
xor
mov
adc
jmp
js
in
sahf
mov
pop
jae
pop
inc
sub
sub
add
lods
mov
into
cmp
mov
adc
push
insl
fildl
or
mov
fists
push
cli
push
les
cmpsb
cmp
test
cmp
push
xorl
insb
into
mov
mov
dec
lds
cmpsl
dec
loopne
mov
inc
xor
loop
dec
sub
mov
inc
outsl
sbb
call
ss
cmp
jl
sub
sti
in
jl
cld
stos
push
popf
je
cmp
dec
call
rep
inc
mov
mov
mov
data16
jg
jle
add
loopne
lahf
mov
inc
mov
mov
or
push
mov
pop
push
cmp
arpl
jg
sub
ret
ljmp
push
jg
out
shl
push
cld
dec
xor
and
clc
das
cmp
lret
in
call
addl
push
dec
ret
jo
xor
idivl
rclb
sbb
dec
xor
push
push
add
outsb
cs
jno
js
js
loop
stc
or
mov
test
lods
xchg
cmp
and
cwtl
pop
nop
push
or
mov
cmpb
leave
and
sub
stc
or
outsl
mov
and
enter
sti
das
hlt
dec
lcall
daa
mov
or
test
jo
iret
xchg
jnp
hlt
scas
fiaddl
sahf
punpckhwd
pop
xor
add
add
xor
add
ljmp
sbb
mov
xchg
and
inc
movsl
or
insb
fisttpl
orb
adc
push
xchg
adc
lds
shrl
std
jne
pop
mov
mov
mov
std
add
push
cmp
sub
jne
aas
lds
stos
fmuls
andnps
sub
pop
mov
adc
je
sbb
push
insl
aas
cwtl
rcll
sub
fstpt
or
leave
ja
loopne
call
adcl
iret
push
adc
xchg
repnz
rorb
call
cmc
dec
adc
mov
jl
loopne
dec
fstpl
clc
cli
pop
add
inc
push
push
sbb
jg
jnp
inc
mov
or
xlat
inc
pushf
mov
cmpsb
aas
inc
jo
sahf
adc
sub
mov
outsl
std
mov
mov
mov
jo
jl
and
mov
adc
push
jmp
inc
mov
mov
push
push
fistps
sub
cmp
dec
lcall
xchg
mov
out
or
sbb
push
and
and
lds
bound
push
push
pushf
mov
mov
jmp
fistpl
data16
daa
cmp
sub
icebp
xor
call
push
rolb
or
adc
sub
lcall
and
stos
push
aam
scas
inc
popa
sbbb
push
cmp
xchg
jecxz
push
push
mov
jg
push
jmp
arpl
pop
dec
outsb
and
lcall
inc
xor
sub
aaa
or
fs
jg
push
aam
addb
mov
mov
jmp
sbb
mov
add
icebp
std
and
jae
cli
mov
mov
js
ret
sbb
jno
and
cmpsl
in
mov
mov
jne
push
out
add
ret
xchg
add
lea
lods
mov
mov
mov
lds
cs
xor
cmp
ret
je
add
mov
arpl
sbb
mov
push
mov
mov
or
push
aas
lret
fisttpl
mov
cmpsb
xor
adc
xchg
push
mov
and
mov
mov
in
push
shlb
jbe
add
inc
pop
mov
add
adc
les
mov
push
int
stos
addr16
jmp
ret
mov
js
inc
lock
jle
jg
fs
cmc
inc
mov
aas
les
inc
lea
divb
mov
add
inc
ds
jmp
and
out
push
bswap
sti
arpl
fs
inc
push
mov
jg
pop
repz
mov
push
icebp
incl
mov
xor
push
pop
or
stos
or
mov
inc
xchg
adc
subb
push
pop
aaa
fdivrl
or
stc
adc
stos
mov
jg
fcmovu
inc
push
and
popf
xchg
cli
xor
mov
or
adc
pusha
xlat
sar
scas
loope
dec
or
sbb
jl
push
add
mov
pop
call
shlb
fcmovbe
imul
scas
dec
or
cmp
add
jne
adc
ret
cmp
push
dec
filds
jg
dec
dec
mov
std
lea
shl
enter
clc
push
stc
sub
lret
ret
jge
add
clc
loop
mov
leave
inc
cwtl
je
addr16
add
pop
aam
pop
lods
mov
add
aaa
mov
aas
push
mov
cltd
call
daa
stc
and
test
adc
jo
lds
or
test
mov
stos
loope
mov
aas
leave
sbb
mov
push
and
dec
push
loope
sub
and
cmp
mov
insl
test
jp
add
mov
lea
dec
push
insb
in
push
int3
or
lods
sbb
lcall
popa
imul
xchg
icebp
add
push
sar
rorl
sti
inc
int3
inc
aad
mov
das
add
jns
sbb
call
adc
xchg
add
jb
shl
arpl
fists
das
or
sti
xchg
xchg
hlt
lock
pushl
ficomps
inc
mov
call
daa
xchg
int3
cmp
ljmp
ss
fstps
clc
pushf
sbb
sub
cmp
movb
das
std
test
mov
hlt
add
ret
les
adc
or
pop
inc
shrl
sub
pop
lcall
call
sub
ljmp
mov
pop
and
add
push
inc
stos
mov
notb
jmp
movsb
jne
clc
cld
mov
xchg
mov
xor
mov
fsubs
sbb
rorb
push
adc
adc
js
adc
and
xchg
aaa
or
hlt
cmpb
add
push
or
or
add
xchg
sub
xor
sbb
shrb
mov
ljmp
add
mov
dec
xchg
or
jbe
xor
call
add
xchg
test
push
xor
sub
adc
fcompl
jne
subl
call
stos
insl
xor
call
sbb
outsb
xchg
or
adc
adc
dec
out
inc
inc
add
pop
lret
jmp
sub
aaa
pcmpeqb
jne
cmp
aad
aas
push
add
repnz
das
movsl
xchg
add
out
mov
push
add
mov
push
sbb
fimull
leave
js
orl
inc
sbb
sbb
outsl
fwait
dec
sub
fdivl
jl
or
dec
mov
stos
iret
xor
aam
adc
and
adc
jne
sbb
test
imul
fmull
cld
add
inc
inc
add
dec
sub
jge
sub
push
gs
sti
decl
pop
adc
call
push
leave
test
out
mov
push
sub
adc
adc
adc
mov
pop
sbb
icebp
std
jmp
inc
adc
jl
fildll
outsb
les
dec
push
call
enter
mov
enter
push
mov
fldl
cmp
or
pop
mov
or
mov
mov
sbb
dec
orb
shl
fists
pop
jl
movsb
dec
push
adc
mov
clc
lret
fdivrs
jne
lods
push
xchg
mov
addb
popf
cmpl
lds
adc
je
and
in
mov
punpckhdq
or
mov
and
adc
or
clc
xlat
movsl
fisubs
ss
jle
mov
add
scas
clc
jmp
jo
and
mov
out
push
mov
rorb
out
fs
dec
jb
push
test
jge
imul
or
mov
dec
pushl
mov
mov
sbb
or
cmp
in
push
and
and
sbb
ret
push
rclb
add
mov
pop
fmull
jb
pop
push
cmc
xchg
test
xchg
js
dec
push
xchg
loope
in
jecxz
mov
mov
dec
mov
push
call
das
icebp
mov
and
adc
mov
incb
inc
dec
adc
mull
out
sbb
mov
out
add
movntps
sub
or
les
adc
push
pushf
in
adc
adc
or
sbb
cmp
jmp
inc
jecxz
imul
xor
test
adc
in
add
add
in
sbb
scas
rclb
outsl
std
push
test
xor
leave
adc
loope
push
outsl
and
imul
hlt
incl
jns
xchg
dec
sbb
jnp
and
jp
hlt
mov
rol
push
xchg
xor
test
sub
mov
dec
or
xor
sbb
cmp
movsl
mov
dec
mull
sub
sbb
dec
aaa
mov
push
inc
outsb
frstor
ljmp
mov
push
cld
inc
adc
cwtl
movsb
fistps
push
rol
push
das
lret
and
jbe
mov
cwtl
pop
test
or
add
and
cmp
jne
or
mov
xchg
cmp
inc
mov
dec
jae
hlt
jg
pop
loope
adc
sub
inc
pop
mov
dec
stc
jl
push
lods
fsubp
xchg
and
xchg
pop
decb
pushf
push
mov
stc
push
bound
lock
inc
cltd
xor
call
addr16
or
mov
outsl
es
sbb
dec
jmp
sbb
inc
in
push
mov
pop
sbb
fs
fs
xchg
cmpsb
dec
and
sub
mov
popa
test
fdivp
dec
sbb
mov
inc
jle
testl
lret
mov
pop
sub
pop
and
insb
gs
cmp
inc
jg
outsl
mov
cli
ds
adc
data16
sub
pop
or
js
xchg
arpl
orb
jp
mov
fidivl
jge
mov
leave
inc
adc
sbb
adc
arpl
xor
xchg
cs
jne
imul
fldt
xor
lods
mov
adc
test
stc
and
add
and
jne
adc
fcoms
jge
rcrb
sub
xchg
fsubl
sub
push
imul
je
ljmp
xor
ljmp
ja
xorl
xorl
jg
mov
test
imul
mov
or
imul
inc
pusha
das
dec
sub
sub
mov
pop
outsl
icebp
decl
or
mov
ljmp
clc
add
inc
fs
in
adc
outsl
cmp
push
add
pusha
ljmp
jmp
xchg
xchg
sub
mov
test
cmp
cmpsb
push
fildl
clc
test
cmp
movsl
aas
jecxz
inc
mov
stos
cs
inc
cld
in
cmc
inc
mov
ss
adc
cmp
hlt
pusha
mov
test
out
mov
push
dec
mov
xchg
cmp
add
adc
std
jg
std
movb
cli
call
xor
push
jno
push
xor
mov
fdivrl
test
outsl
js
fdivrs
jge
push
sbb
xor
inc
nop
push
sbb
out
sub
push
dec
or
push
or
or
mov
sub
adc
mov
add
ret
rorb
mov
xchg
in
add
les
dec
adc
call
pop
das
addb
lret
fildll
sub
adc
fstpl
std
mov
push
add
idivl
aad
clc
and
push
je
lret
mov
pusha
sub
cmp
adc
jl
mov
push
ret
cs
sub
xor
push
jl
dec
int3
sbb
push
andb
rclb
add
je
mov
inc
mov
cmp
test
xor
in
loopne
or
pop
lcall
mov
outsl
jp
sbb
mov
xor
addl
mov
sub
inc
adc
jnp
inc
movsb
repnz
cvtpi2ps
rorb
dec
mov
inc
sahf
test
leave
mov
icebp
cli
jl
leave
in
xchg
jmp
pop
adc
movl
inc
or
xor
mov
das
repnz
fidivrl
push
xchg
adc
mov
add
pop
loopne
and
lcall
cld
ss
push
or
inc
cmp
add
lret
sub
cmp
and
test
loope
or
sub
mov
scas
insl
popf
mov
or
add
popa
jnp
xor
sbb
int3
or
push
mov
aaa
jne
ljmp
lods
in
push
pushl
pop
adc
xor
sub
jnp
js
mov
loopne
dec
add
mov
jg
mov
call
adc
or
cmp
repz
adc
das
push
call
jle
das
cmpsb
repz
sti
mov
inc
mov
sub
and
jmp
sbb
inc
jae
fistpll
adc
push
lret
pcmpgtb
xor
pushl
pop
cli
pop
xor
dec
add
adc
mov
stc
notb
enter
aaa
insl
incl
test
shlb
rorb
test
cmp
mov
jg
aam
jg
inc
sub
aad
or
insb
or
scas
mov
dec
pop
repz
inc
bound
inc
xor
adc
adc
sub
fiaddl
push
call
mov
or
push
pusha
fadds
pop
mov
jb
jno
sub
es
icebp
push
mov
scas
cmpsb
repnz
mov
pusha
mov
lret
adc
adc
je
jne
dec
sar
adc
pushl
pop
rcrl
fstpl
push
lock
inc
mov
inc
inc
jae
cs
call
mov
xorl
dec
inc
xor
adc
subb
pop
and
call
jmp
outsl
mov
xchg
fs
push
add
sahf
sbb
pop
loopne
mov
adc
and
cmc
jp
sbb
xchg
je
add
xor
and
sbb
jns
rcrb
cmp
loop
dec
mov
sbb
insb
lods
out
mov
mov
cs
cmpsl
adc
pop
pop
push
and
mov
xchg
pop
add
jae
inc
push
inc
cmc
scas
push
pop
xchg
jl
adcl
outsb
rorl
and
repz
inc
xchg
mov
push
pop
push
dec
stc
or
aam
scas
and
loop
xor
cmp
mov
mov
loopne
jl
jmp
fisubs
cmp
push
das
shr
inc
rcl
call
mov
push
std
add
adc
stos
inc
xchg
clc
pushf
hlt
jmp
or
call
add
arpl
out
cmp
pushf
adc
push
xchg
clc
repz
popf
dec
je
adc
dec
sub
call
mov
or
enter
ret
les
dec
jo
push
aaa
inc
pop
fcoml
outsl
movsl
repnz
push
add
divb
in
dec
je
mov
mov
stos
push
in
cwtl
xchg
je
mov
imul
push
aad
dec
sub
adc
popf
push
pop
xchg
mov
mov
add
and
std
out
sbb
cli
lret
add
or
sbb
pushl
js
mov
shll
mov
mov
pop
stos
inc
and
or
cmp
nop
lock
add
jmp
adc
aaa
cs
cli
mov
mov
xor
add
out
pop
and
push
adc
xorb
sbb
lods
and
les
int3
testb
loope
pop
sub
mov
jo
cltd
xchg
add
adc
adc
lea
adc
mov
std
ret
push
dec
mov
stos
cmp
leave
push
sbb
int
fucomi
cmpsl
je
add
rorb
outsb
mov
sbb
mov
add
adc
jmp
jge
xchg
test
aaa
adc
inc
loope
shr
je
xchg
cmp
mov
sbb
call
and
test
xchg
xchg
ficoms
cmp
inc
les
inc
add
popa
add
clc
lea
xchg
adc
mov
call
std
adc
fildll
outsl
sub
jmp
xlat
and
pop
sti
mov
int3
ja
push
jg
jmp
popa
and
pusha
nop
movsl
mov
pop
mov
pop
stos
stos
clc
sub
les
mov
mov
insl
pop
loop,pt
xor
or
xor
pop
jle
subl
sar
mov
or
int3
dec
mov
sub
sub
sbb
or
add
lea
arpl
popf
adc
daa
shrb
adc
mov
adc
push
xor
push
and
fs
test
mov
ret
call
scas
pop
mov
adcb
jecxz
push
out
cmp
dec
lcall
inc
push
or
into
stos
jmp
cltd
fnstsw
xchg
gs
pop
cmp
jg
mov
es
mov
xchg
or
add
inc
mov
push
ret
xor
js
pop
add
loop
std
add
xor
sar
in
sbb
cwtl
push
sarl
add
cli
test
and
cli
lock
jb
mov
pop
std
xor
sbb
push
rcrb
jne
out
in
jecxz
push
mov
fimull
mov
mov
pop
mov
in
sbb
sub
scas
daa
cmp
adc
nop
inc
mov
sbb
enter
push
add
icebp
xchg
call
testl
mov
fwait
push
pop
push
add
movsl
jge
mov
dec
inc
push
mov
decl
jne
xor
xor
adc
out
push
lahf
cld
mov
pushf
sbb
jge
pop
or
inc
into
push
jmp
shl
inc
inc
inc
in
imulb
das
lock
hlt
inc
and
cmp
mov
lea
sub
inc
inc
add
inc
xchg
xchg
pop
add
das
incl
call
jb
mov
enter
push
inc
pushl
orl
enter
jmp
into
outsb
cld
out
lea
pop
add
out
mov
jl
in
add
jge
out
mov
loopne
pop
jo
cmp
pop
sbbl
clc
cmp
aad
in
push
mov
add
xorb
daa
jle
subb
mov
insl
dec
scas
stos
lahf
dec
mov
lods
or
inc
jle
pusha
imul
or
gs
div
add
mov
push
out
adc
lds
fcmovbe
mov
adc
aam
jle
cmp
mulb
xchg
daa
jb
mov
push
adc
outsl
cmc
xchg
cmp
clc
sbb
sar
push
lea
notl
inc
stc
jp
rcl
mov
lahf
imul
jnp
xchg
adc
dec
pop
movsb
add
xchg
and
mov
push
fiadds
sbb
push
addr16
sti
mov
sbb
add
rclb
mov
out
adcb
push
mov
or
sub
inc
inc
jmp
aad
dec
and
fldt
lcall
jl
mov
pushl
pop
cld
lods
sbb
push
out
push
pop
push
and
xchg
fwait
pushf
lock
insl
das
jbe
movsb
fs
sub
mov
repnz
cmpsb
shlb
icebp
or
lcall
les
aas
and
xlat
rclb
push
sti
rorl
xchg
aad
mov
pop
movsl
and
cs
cmp
and
clc
push
xor
in
mov
cmp
out
and
inc
push
or
mul
push
sbb
sbb
aam
cld
popf
movsl
pop
add
jno
loop
push
jne
sub
jg
push
push
loop
ss
mov
and
cli
pop
cli
and
cmp
inc
adc
xor
jg
push
pop
push
mov
ret
das
mov
decl
enter
loopne
inc
adc
push
sub
add
push
push
add
adc
lds
call
or
jp
push
push
call
cld
add
jmp
pop
cld
or
lcall
popl
ficompl
lcall
mov
mov
cs
aam
cltd
push
sub
push
mov
pushl
icebp
adc
mov
mov
aad
jnp
pop
dec
xchg
and
push
incl
fwait
imul
loop
sbb
loop
pop
out
call
pop
and
out
aas
adc
lods
mov
jl
mov
es
or
xor
mov
cmp
sbb
jg
jne
jg
jle
jl
mov
inc
test
aam
rcr
dec
sti
jg
icebp
repnz
adc
sub
out
idiv
ja
add
shll
out
jl
test
movaps
insl
dec
jecxz
test
daa
inc
call
or
divl
and
mov
mov
xor
out
aaa
add
jns
xor
ja
or
lea
or
mov
sub
sbb
inc
and
fiaddl
lods
imul
jbe
fcmovnbe
push
cmp
cmc
and
lock
adc
xchg
sub
jne
in
cmp
sbb
daa
fisttpll
lea
jmp
andl
jne
mov
xor
inc
icebp
mov
dec
in
add
add
xor
pop
or
daa
mov
mov
int3
sub
ljmp
fstpl
push
pop
jmp
lea
pop
mov
mov
pop
pop
push
xchg
adc
mov
ret
cltd
mov
enter
lret
and
push
ja
mov
xor
mov
and
add
call
nop
je
daa
aad
dec
adc
jne
mov
xchg
pop
fnsave
pop
enter
and
or
sbb
ds
andb
mov
sbb
jbe
sub
or
cmpsb
outsb
sub
pop
aaa
sarb
nop
dec
jmp
stos
outsl
std
mov
cmp
mov
push
jmp
sbb
push
fidivl
mov
xor
in
sahf
lea
sub
in
setne
inc
cld
ljmp
sbb
push
mov
shll
pop
cld
jns
sub
fidivs
je
cmp
lret
jg
or
dec
and
xor
popf
xchg
pop
and
cmp
inc
scas
inc
ret
pop
insl
nop
jle
aaa
adc
push
add
xchg
sarb
iret
in
jnp
mov
add
scas
decl
xor
inc
fisubs
mov
cmp
subl
aad
ret
outsl
lea
sbb
pop
adc
cmp
rcl
ret
orl
xor
cli
and
das
or
in
xor
lahf
popa
outsl
pop
notl
xchg
cmpsl
adc
and
das
jne
mov
sub
cld
daa
jns
addl
jnp
lret
jbe
and
cmp
xchg
xor
clc
pop
cld
or
enter
jo
xchg
or
lea
mov
stc
daa
and
add
dec
sbb
xchg
movsl
mov
sub
clc
ljmp
xchg
xlat
inc
mov
adc
inc
pop
sub
mov
mov
push
mov
pop
fistpll
or
and
push
jl
in
pop
dec
leave
push
je
mov
in
mov
jmp
push
pop
pop
aad
mov
dec
mov
and
cld
dec
xor
enter
icebp
stos
mov
dec
adc
sub
lret
jmp
lea
push
lds
dec
les
roll
hlt
and
push
jo
andb
lods
insl
xor
cmc
jo
adc
jmp
pop
add
pusha
mov
adcl
or
inc
xchg
sub
inc
or
xlat
inc
inc
cli
pop
sub
stos
shrl
cmp
es
adc
scas
add
inc
fwait
sub
fadd
pop
scas
aas
push
jo
push
push
push
ljmp
cmpsb
int3
xchg
or
xlat
xchg
adc
mov
add
mov
push
cmpsl
sbb
sub
sub
add
xor
mov
aam
loop
iret
cltd
jo
scas
testl
in
andl
cmp
sub
push
sub
hlt
add
test
fldt
push
in
ret
adc
das
cmpsb
std
fimull
cs
or
add
loop
inc
push
mov
push
not
add
mov
push
xchg
imul
push
rclb
push
imul
cld
test
fiadds
mov
lret
jg
jmp
mov
mov
push
pop
xor
sbb
inc
dec
in
call
fnstcw
pop
dec
rcrb
push
movsb
call
loope
jl
imulb
push
fdivrs
loop
ret
outsb
movsb
in
inc
int
or
and
es
pop
adc
or
xor
cmp
in
add
mov
enter
sub
sbb
loop
mov
into
and
test
outsb
jg
test
pushf
adc
mov
lods
pop
loope
or
aaa
js
inc
clc
inc
fucomp
test
mov
std
xor
cmc
lods
or
push
push
mov
sbb
adc
pop
adc
imul
xor
outsb
or
push
and
lret
aas
mov
lret
lock
mov
bound
adc
gs
cs
adc
dec
sub
mov
add
pop
inc
mov
and
cli
xor
push
seto
fildll
rol
hlt
inc
cmp
or
cmp
icebp
outsb
adc
add
lcall
dec
or
jl
lock
pop
xchg
jo
push
fucomp
dec
cmpsb
or
mov
fucomip
sbbb
pop
push
loopne
push
mov
icebp
testb
add
imul
fsts
testl
dec
pop
jle
shrb
out
or
cli
fstpt
movsb
or
out
xchg
or
movmskps
out
jge
inc
xor
es
xchg
pop
outsb
mov
std
scas
xchg
cwtl
repnz
xchg
inc
xchg
sbb
adc
xor
sub
fmull
pop
add
push
add
ljmp
popl
push
notb
shll
rol
lsl
pop
mov
push
cmc
push
mov
fistps
push
shll
lret
add
or
int
pop
daa
xchg
flds
and
call
jmp
push
mov
call
int
das
and
gs
xor
add
aaa
cli
decl
stos
xor
or
inc
mov
cmp
ret
in
push
sti
fcomps
add
pop
incb
fwait
int
jne
push
div
in
lcall
push
std
adc
je
add
cld
incl
inc
xchg
aaa
sub
enter
or
mov
lret
dec
addr16
enter
outsb
pop
or
sub
and
fdivl
sub
push
push
add
mov
adc
call
test
cmp
or
push
dec
scas
dec
lea
mov
push
or
lock
imul
mov
pop
nop
or
lods
add
dec
std
jb
ret
and
xchg
xor
rorl
sbb
testb
push
or
addr16
jae
call
or
stos
mov
movsb
jnp
ljmp
aam
mov
lea
decl
add
popf
rcr
jnp
pop
rcrl
jo
pop
and
sub
sub
lahf
add
push
add
and
test
lcall
jle
jge
and
adc
sbb
jne
fwait
dec
lock
cmpsl
add
movsb
cmovnp
cmp
ljmp
adc
icebp
dec
aam
out
outsl
imulb
and
sbb
xor
dec
xor
jmp
cmp
mov
or
mov
adc
lods
adcl
test
adc
mov
out
sbb
pop
push
jne
jne
shll
push
in
sbb
decl
popf
testl
negl
addr16
fidivl
and
mov
add
sub
xchg
test
cmp
mov
mov
inc
adc
mov
jg
inc
mov
xor
or
cwtl
enter
enter
mov
in
or
xchg
hlt
test
or
filds
mov
cld
jle
cmpb
aam
xchg
adc
jp
mov
xchg
push
jg
decl
dec
jns
lret
lods
cmp
mov
inc
mov
or
or
push
jg
int
xchg
xchg
mov
shr
cwtl
popf
jle
aas
sub
jle
shll
sub
pop
in
fwait
or
push
lods
jmp
push
mov
or
fistpl
adc
or
push
pop
inc
sti
in
stc
pop
mov
cli
pop
stos
pop
enter
cmpsl
and
pop
int3
xchg
adc
push
test
arpl
lods
test
add
aam
jmp
mov
outsb
add
shrb
inc
incb
mov
data16
xlat
fldenv
daa
incl
aad
out
fistpll
test
adc
or
scas
call
mov
dec
dec
and
inc
mov
hlt
lea
mov
add
outsb
cmp
sub
sbb
sub
ret
xor
or
ss
aaa
mov
divb
pop
nop
ss
popf
test
push
std
pop
adc
bound
js
push
mov
cmp
jns
pop
enter
pcmpgtb
mov
insb
aam
or
cmp
pop
push
pushf
call
shlb
into
pop
jmp
fldt
out
and
sbb
das
mov
pushf
sbb
add
xor
mov
mov
push
xchg
cmp
inc
inc
sbb
jmp
jmp
call
mov
mov
dec
sub
inc
jg
jmp
lea
add
inc
mov
stc
adc
in
int3
clc
sbb
loope
mov
mov
pop
sub
movsl
pop
cli
les
add
gs
xchg
cli
push
jl
sbb
cs
stc
nop
shr
add
nop
jmp
mov
mov
push
gs
cli
or
adc
adc
testb
jmp
outsb
shrl
add
scas
stos
test
xor
loop
push
or
hlt
dec
hlt
push
aaa
adc
jmp
ret
xchg
mov
and
push
aas
add
mov
mov
mov
sub
negb
dec
or
imul
je
sbbb
aaa
mov
bound
mov
lea
adc
mov
cld
mov
jno
jo
loope
lcall
fadds
insb
sub
inc
add
aam
mov
sbb
mov
mov
push
mov
call
scas
ret
xchg
pop
idivl
fwait
sbb
jp
sub
pop
mov
adc
cmc
pop
pop
xchg
xchg
pop
inc
xchg
in
mov
push
jne
sahf
imul
adc
incl
jae
dec
popa
cmpsb
pushl
or
jns
adc
outsl
adc
xchg
jo
bound
insl
pop
out
jle
in
adc
mov
rcr
jmp
in
push
add
push
outsl
mov
sub
add
add
and
aas
mov
hlt
lcall
rcll
imul
inc
jg
sub
add
movsl
mov
mov
add
je
mov
rorl
pop
and
push
adc
sbb
lea
orb
mov
je
aam
cmc
push
and
ret
inc
adc
stc
jmp
fnsave
push
lods
xor
bound
xchg
call
mov
xchg
gs
push
pushl
and
push
push
dec
repnz
hlt
pushf
sub
scas
pop
ljmp
call
mov
faddl
and
or
xlat
dec
fs
dec
bound
incl
bound
push
cmpsb
shl
and
adc
adc
jne
and
test
xor
xchg
ss
jne
cmp
inc
jno
fildl
stc
fisubrl
and
mov
clc
ret
and
lcall
cmp
cmpsl
sub
std
das
sahf
outsl
and
xchg
push
ds
mov
push
add
push
add
mov
mov
in
adc
icebp
fimuls
add
mov
pop
dec
xlat
cmpsl
add
push
mov
je
or
add
imul
decl
ds
and
sub
cmp
adc
out
test
mov
sub
dec
pusha
inc
mov
sbb
or
jle
mov
aad
cli
outsb
jge
pop
shll
outsb
dec
hlt
movsl
decl
pop
test
bound
mov
xchg
jle
pop
mov
push
stc
in
inc
call
insl
dec
loope
aas
inc
jp
ffree
andl
xchg
shll
mov
adc
mov
mov
dec
jae
dec
cs
insb
mov
xor
sub
sbbl
pop
adc
adc
mov
mov
adc
inc
aad
sbb
sbb
out
mov
in
mov
fs
test
cwtl
mov
push
mov
add
dec
mov
mov
xchg
outsb
std
and
rcrl
test
mov
les
in
in
add
mov
mov
addb
dec
and
pop
add
dec
adc
cmp
testb
mov
dec
add
xchg
pop
jge
inc
icebp
outsl
mov
pop
push
mov
out
addb
push
or
call
pop
inc
div
negl
xchg
cmpsb
jg
icebp
loopne
push
ret
aad
test
test
sub
int3
sbb
movsb
mov
sti
and
cmpsl
sub
inc
ljmp
push
loop
dec
ljmp
std
xor
or
mov
mov
mov
sub
call
jle
cmp
inc
mov
and
ds
inc
pop
out
sarl
and
mov
pop
enter
cmc
xor
es
adc
jo
lcall
push
aas
shll
sub
xchg
testl
filds
pop
dec
pop
mov
mov
test
xor
xor
repnz
add
or
sar
mov
aaa
push
or
std
js
out
inc
mov
add
mov
mov
sub
scas
int3
mov
dec
dec
cmp
pop
push
add
sub
hlt
xorb
pop
inc
push
dec
mov
xor
dec
movsl
negb
sbb
push
mov
add
sub
enter
fdivr
mov
iret
and
sub
sub
ds
dec
inc
sub
rolb
int3
adc
fs
mov
loopne
add
jge
int3
or
outsb
adc
cmp
adcl
and
cmp
in
insl
add
roll
enter
test
ja
add
pop
fxch
les
xor
sbb
mov
xlat
pop
notb
push
push
or
xor
orb
cwtl
and
incl
or
jbe
cmpl
mov
aas
out
in
dec
xchg
outsl
cmp
add
mov
call
pop
punpckldq
js
scas
iret
mov
mov
push
aam
orb
jecxz
inc
loope
mov
xor
and
ret
jo
push
mov
push
shl
clc
sti
cld
xor
aaa
cmp
dec
cmp
popf
insl
loopne
mov
or
filds
dec
or
dec
and
scas
dec
mov
mov
enter
ror
push
fsubs
or
ret
repz
pushf
xchg
addr16
pop
cmp
cmp
in
mov
or
pop
xchg
lahf
pop
cli
scas
mov
pop
add
add
adc
je
cmp
sbb
jle
pop
jg
adc
xchg
inc
jge
scas
mov
inc
push
cld
pushl
add
daa
adc
or
xchg
inc
dec
out
xchg
mov
pop
je
push
sbb
jbe
js
push
jl
jle
inc
mov
jae
inc
clc
cli
inc
dec
popf
ljmp
es
sbb
add
popf
sbb
cmp
push
lahf
inc
pop
push
mov
xchg
xlat
mov
stos
call
xor
aam
icebp
call
mov
sarl
pushf
in
sub
movsl
mov
fstpt
repz
inc
scas
lcall
sahf
and
inc
or
sbbb
lcall
and
shlb
aam
pushf
lock
fs
xchg
xchg
inc
nop
lds
ljmp
outsl
inc
mov
xor
cmpb
or
js
or
cld
andb
jle
andb
aad
mov
stos
push
je
rol
inc
adc
clc
filds
pop
inc
mov
aas
decl
and
inc
dec
rcr
add
add
add
cmc
push
popa
inc
sbb
ret
repz
dec
repz
repnz
add
pop
fstps
xchg
call
push
insb
nop
jo
inc
cli
xchg
cmp
in
dec
lock
mov
aam
hlt
inc
sti
mov
cld
aas
mov
ljmp
and
xor
xor
repnz
dec
insb
dec
lret
ljmp
inc
push
out
add
adc
push
jmp
adc
and
sub
sbb
pop
test
loopne
cmpsl
insb
cmp
movsl
cmp
fs
jp
imul
mov
test
xor
pop
mov
inc
xlat
sarb
movsb
or
jle
popf
mov
inc
xchg
mov
outsl
dec
inc
jne
mov
fsubrs
add
inc
or
nop
arpl
das
mov
orb
sub
mov
cmp
lock
ds
cmp
cmp
cmp
mov
mov
sbb
aaa
sbb
adc
mov
std
stc
lahf
mov
jp
mov
out
clc
and
inc
aas
sbbb
sbb
popa
cmp
sbb
push
js
jp
xor
push
adc
mov
shrb
adc
test
jne
lahf
mov
lahf
loopne
mov
cmp
iret
shr
fmuls
roll
in
popa
sbb
lcall
imul
std
jns
sti
jo
repnz
push
xor
pop
addl
add
icebp
inc
mov
mov
decl
dec
rcrb
and
mov
ja
stos
mov
shl
or
les
cli
push
push
lret
mov
xor
inc
stos
sub
adc
mov
out
std
enter
mov
dec
add
adc
in
adc
bound
mov
repz
or
jecxz
and
and
mov
popa
cs
jg
idiv
xor
mov
jp
subl
and
fstpl
pop
lret
sbb
faddp
out
in
shrl
dec
cld
dec
push
xchg
movb
dec
hlt
mov
mov
pop
out
out
loope
xor
es
push
dec
lock
hlt
sub
push
adc
flds
les
pop
aas
lahf
jo
ljmp
xchg
aas
mov
aas
out
out
jo
mov
lcall
jnp
in
dec
push
cmp
daa
add
addr16
xchg
jge
subl
out
mov
xchg
and
jg
mov
nop
test
stc
daa
invd
push
out
test
dec
xchg
dec
aad
push
cmpsl
dec
fildll
punpckhbw
packssdw
call
vhsubps
mov
mov
cmp
mov
sarb
shll
pop
cmp
sbb
fmull
add
ucomiss
daa
dec
je
addr16
xchg
lea
sbb
jb
je
pop
or
inc
cmp
cmp
and
mov
lds
ds
jmp
mov
xlat
rcl
push
mov
mov
xor
mov
aaa
pop
adc
repnz
in
mov
loop
outsb
inc
das
pop
je
jle
push
lock
filds
lock
hlt
adc
cmp
adc
add
ficoms
insb
xor
out
scas
outsl
stc
push
mov
xchg
adc
lcall
cmp
adc
clc
and
cwtl
or
ficomps
push
mov
adc
adc
push
push
jl
test
add
pop
add
shr
js
sub
js
mov
sbb
xlat
nop
sbb
stos
mov
xchg
mov
dec
jmp
jl
lock
inc
cmp
testb
icebp
mov
add
dec
jg
dec
sahf
mov
mov
mov
push
jg
xor
ja
mov
inc
dec
insb
mov
adc
aam
cld
imul
adc
pop
call
mov
sbb
mov
add
mov
cltd
inc
scas
add
pop
clc
std
fwait
push
adc
addl
fst
loopne
aam
lock
mov
mov
push
mov
and
push
addr16
incb
ds
push
push
mov
icebp
adc
mov
cli
mov
and
je
push
push
subb
inc
mov
mov
cmp
xor
push
iret
sub
add
pop
jns
add
adc
or
add
bndstx
iret
fnstenv
mov
int3
fbld
aas
mov
jg
pop
push
inc
and
sbb
enter
clc
call
ret
cmp
fdivrl
ret
aas
repnz
stc
push
pop
test
inc
dec
pop
push
insl
pop
ret
and
rclb
cld
sahf
ds
scas
dec
cli
xor
loop
mov
dec
mov
idiv
jmp
inc
and
fsub
stc
idiv
add
dec
or
add
sub
das
cld
fmuls
xorb
dec
leave
fcoms
loope
xor
mov
test
pop
pop
sub
mov
xor
cmpsl
add
cmp
adc
je
mov
mov
push
icebp
mov
fdivs
cld
or
fldt
rorl
adc
or
fbstp
scas
mov
jp
iret
bound
dec
jmp
mov
push
jg
sub
inc
loope
loope
mov
jg
hlt
stos
push
lret
dec
mov
inc
mov
jb
lock
cmp
adc
pop
pop
cs
mov
adc
add
lods
into
js
clc
push
xchg
push
mov
fimuls
pop
popa
mov
adc
pop
lods
push
fcomip
daa
push
je
jg
outsb
aas
sbb
push
xchg
push
push
mov
inc
pop
cli
int
enter
and
sti
int
xchg
adc
outsl
jp
inc
pop
cmpsb
je
dec
lock
out
jle
lea
sbbb
push
dec
mov
mov
jmp
add
stc
lret
stc
aam
cltd
in
out
cmp
pop
adc
dec
add
adc
dec
inc
xlat
int
push
aaa
inc
inc
inc
popa
pop
or
push
cltd
subb
aad
push
dec
xchg
xchg
popa
sti
inc
jmp
xchg
fdivrl
rorl
sub
add
inc
addr16
icebp
cmp
ds
mov
push
aas
pop
aas
insb
jl
aas
frstor
inc
pop
inc
mov
push
or
push
jg
nop
push
cmp
mov
jb
je
inc
jg
sti
mov
test
sbb
dec
out
lods
and
fdecstp
clc
adc
pushl
je
insb
sub
jl
jle
fsubp
ds
mov
les
pop
or
leave
pushf
add
daa
sub
incl
mov
shlb
fisubs
je
jp
sub
cmc
pop
jmp
nop
mov
jo
add
xchg
pushf
lret
lds
adc
stc
mov
outsb
and
sub
or
rorb
lret
int3
adc
xchg
andl
int3
imul
psubb
outsb
xchg
clc
and
das
movsb
sbb
imul
or
outsb
and
xor
cmp
push
out
loopne
sub
es
cmp
ret
mov
jg
xchg
add
add
ret
pop
push
dec
pop
outsb
out
pop
xor
loope
xchg
xor
and
push
sti
push
addr16
test
out
pop
inc
in
jb
jle
sub
dec
pop
imul
mov
push
sub
and
popl
movsl
mov
mov
adc
stos
sbb
aam
pop
aaa
test
mov
add
leave
test
or
and
cmovs
or
mov
and
mov
xor
pop
insl
push
jge
dec
outsb
mov
xchg
je
sarb
jo
insb
testl
aas
push
cmp
fildl
dec
mov
mov
ret
xor
pop
aam
jb
cs
bound
mov
inc
sub
insb
xchg
push
cmp
and
add
mov
and
test
outsb
ljmp
and
cli
stos
mov
lock
jle
add
add
pop
fstl
rcrl
pop
out
lret
mov
mov
jae
es
cs
call
pushf
pop
jmp
ds
mov
mov
aam
scas
add
xor
mov
push
mov
fisubrs
rcll
shrb
lods
insl
pop
jp
jno
mov
add
je
js
icebp
and
lock
cmc
ja
mov
push
pmullw
stos
je
pop
imul
adc
daa
add
movsl
loopne
jl
or
shl
fnsave
cmc
js
test
addl
cmpsl
or
xchg
test
dec
sub
roll
mov
pop
ret
lds
mov
fldl
sarb
push
enter
mov
fnstcw
xor
or
lods
fcomps
ret
xor
pop
adc
cli
adc
and
mov
rcrb
jge
inc
push
outsl
sbb
pop
loop
iret
call
shll
sub
sbb
lahf
addr16
xchg
inc
mov
fmuls
fwait
dec
add
adc
fsubrs
cmpsl
jns
jno
push
mov
movsb
scas
repz
push
mov
xor
or
in
testb
dec
mov
in
pop
sti
push
das
or
fsub
sbbb
cmp
and
mov
mov
sahf
inc
out
cmp
inc
mov
scas
inc
xchg
out
jbe
add
sub
call
push
mov
pop
dec
cmp
push
push
mov
xchg
mov
aad
imul
cwtl
mov
insb
and
inc
inc
aad
inc
lret
pushf
inc
or
jle
imul
orb
pop
xor
aad
jnp
pop
add
iret
out
fcmovnu
mov
push
push
insb
lahf
mov
and
daa
adc
ds
je
xchg
sti
je
dec
shll
and
mov
int
mov
std
fmul
mov
xchg
fdivrl
mov
jge
mov
mov
add
or
adc
push
cmpl
repnz
dec
lock
jge
cmp
shrb
je
or
sub
or
das
jecxz,pn
cmp
ds
repnz
cmpl
shlb
icebp
pop
and
push
repz
imul
sub
sti
sub
or
jne
out
insb
int3
insl
or
cmp
loopne
in
mov
dec
cmp
jg
outsl
push
jo
pushf
xor
fucomi
inc
shll
or
insb
cmp
push
adc
insl
sbb
push
out
mov
add
dec
sub
les
push
imull
stos
mov
xchg
or
fldl
aad
jg
cmp
fmuls
jecxz
jbe
les
push
movsl
call
adc
cmp
and
lods
mov
movsl
decb
push
add
jle
scas
lods
mov
push
pop
push
dec
unpcklps
test
cmp
sti
mov
add
or
push
and
mov
fiadds
inc
int3
push
mov
leave
aaa
mov
call
inc
mov
adc
js
dec
cmpsb
scas
add
pop
inc
xor
push
les
adc
sbb
lock
insb
push
xlat
lock
xchg
dec
je
or
not
push
in
or
dec
add
vpshuflw
sbb
pop
hlt
jo
aaa
adc
sub
or
stos
test
stos
iret
cli
loop
push
inc
mov
loope
cmp
int3
test
cmp
cmp
sbb
xchg
lcall
std
jno
cmc
mov
mov
bound
out
std
sti
fs
pop
and
inc
lcall
cmpsl
filds
push
push
aad
sbb
and
adc
stc
inc
or
hlt
into
inc
sbb
mov
adc
inc
imul
andl
js
js
jne
pusha
dec
adcl
jo
stos
aaa
int3
mov
ret
xchg
jbe
icebp
cld
sub
xchg
mov
insb
scas
inc
mov
mov
mov
sbb
ja
inc
lds
mov
je
in
mov
xchg
sub
push
int
test
jg
test
hlt
sbb
pop
sar
mov
popa
adc
cmp
lcall
mov
cmp
xorl
ret
call
or
mov
cmpsl
xchg
jne
sub
test
inc
lret
cmc
sbb
imulb
mov
dec
and
inc
jb
mov
outsl
pop
stos
sbb
and
notl
ds
insl
dec
add
aas
mov
xor
insl
adc
push
call
call
sbb
in
in
jmp
mov
sbb
cmp
mov
inc
and
aas
and
test
cmp
mov
add
push
cld
sub
or
data16
push
aas
add
sbb
add
and
inc
das
pop
inc
scas
ljmp
sub
lds
jmp
jmp
daa
lock
popf
adc
mov
subl
orl
fsubl
addb
inc
push
bound
sub
mov
mov
fnsave
je
xchg
push
test
test
jbe
ljmp
add
imul
push
cmp
add
insl
or
inc
or
and
shlb
or
mov
adc
push
sub
and
loope
fldt
inc
pushf
sahf
jecxz
mov
jecxz
aaa
lcall
cmp
or
std
sbb
fnstsw
push
inc
in
xor
dec
outsl
jo
icebp
lods
movsb
decb
pop
shl
and
sub
mov
jge
sub
lock
push
in
jo
fcoml
call
sbb
adc
pop
and
adc
fisttpl
mov
outsl
sbb
jne
push
adc
je
inc
mov
mov
cmp
jl
ja
gs
push
add
pop
sbb
mov
fs
mov
jb
jg
cld
int3
pop
into
hlt
jne
or
into
jno
cli
push
dec
mov
mov
push
xor
orb
lea
add
add
je
mov
inc
inc
sbb
loop
je
aaa
cmp
popf
scas
testl
cmpsl
sbb
out
push
cmp
sbb
popa
push
push
xor
or
add
jo
dec
inc
push
push
jp
fisubrl
scas
jl
push
sub
add
mov
adc
jbe
sub
push
ss
shlb
les
mov
sbb
push
movups
and
inc
sub
jl
roll
pop
pop
aad
add
out
or
je
mov
out
mov
lock
shlb
mov
mov
xor
inc
or
dec
add
mov
ror
push
xchg
int3
jl
jo
inc
mov
or
mov
pop
add
xorl
subb
jno
push
add
push
jp
mov
fs
mul
add
jo
aad
adc
cmp
and
xor
ret
dec
call
inc
push
xchg
sti
dec
adcb
or
imul
pop
inc
mov
jo
pop
pop
cs
or
in
jle
jge
sbb
in
cmp
jmp
in
add
cmp
xchg
fsubrl
outsl
inc
in
or
sbb
push
dec
ds
push
negb
adc
ret
xor
mov
inc
aad
push
cld
jl
aad
dec
cmp
xor
into
call
es
roll
add
dec
push
mov
cmp
es
inc
sbbl
dec
test
sbb
loopne
dec
inc
adc
mov
jle
mov
jle
jno
fnstcw
xlat
sbb
pop
add
push
mov
mov
lock
mov
add
push
dec
mov
arpl
popf
cmp
add
outsb
imul
cmp
adc
jg
shlb
pop
scas
cmp
fwait
jmp
jno
push
and
inc
dec
jo
mov
xchg
scas
paddusb
inc
je
scas
sti
inc
mov
es
pop
inc
and
sub
testb
test
lret
call
popa
xchg
dec
jnp
mov
in
add
testb
sbb
fcoms
cmp
imul
dec
xor
adcl
imul
add
cmp
ljmp
pop
cwtl
aad
lods
mov
lcall
jmp
and
hlt
out
adc
sub
sbb
hlt
aaa
jg
dec
outsl
fsubrs
dec
mov
mov
jmp
call
test
cmp
fsts
push
enter
adc
mov
mov
fdivs
push
or
push
push
mov
jne
push
insl
lcall
rcrl
inc
aas
jbe
shll
aas
pop
call
ret
inc
push
pop
cmp
sbb
xor
dec
std
mov
hlt
jnp
les
or
dec
xor
xor
lock
push
xor
add
fwait
sub
sbb
call
mov
das
xchg
mul
aad
sub
push
cmp
jnp
cli
out
lods
jecxz
scas
mov
je
lds
adc
xlat
aas
gs
loopne
jmp
cmp
cs
pop
lock
lods
mov
sti
push
mov
inc
and
add
shl
add
mov
fisttps
inc
cld
xor
call
das
jo
ret
jmp
cwtl
mov
inc
fisttpl
out
cld
jnp
enter
mov
mov
jl
shrl
cmp
fwait
sahf
or
popa
jbe
or
jle
outsb
jno,pn
mov
ds
cmp
push
movsb
pop
mov
push
lock
xchg
outsb
inc
ret
pop
mov
jae
push
xchg
in
stc
inc
mov
pop
call
hlt
lret
dec
adc
stos
cmp
insl
mov
shrl
in
add
jne
sbb
dec
xor
push
xchg
in
mov
data16
cmp
push
cli
jge
gs
mov
insl
xchg
mov
and
rcrb
in
call
xchg
and
rolb
insl
push
sub
add
lds
dec
int3
pop
imul
adc
and
push
ret
stc
sub
out
add
clc
adc
mov
ljmp
dec
mov
xchg
sbb
mov
cs
lods
or
cmp
cwtl
inc
aam
pop
test
loope
jo
cltd
jle
mov
sbbl
adc
mov
sarl
pop
mov
push
fidivs
ss
push
sbb
roll
sub
jbe
and
mull
inc
jmp
fisubrl
xor
xor
push
add
mov
nop
aaa
aam
cmp
inc
aad
mov
stos
add
adc
mov
mov
xor
ds
xchg
cwtl
je
add
or
inc
movsb
cmp
dec
mov
mov
xchg
lock
cmpb
hlt
pop
sub
xor
fs
sbb
adc
jo
stos
and
inc
jle
pop
mov
ja
insb
rorb
sbb
sbb
loope
dec
mov
js
add
xor
je
in
dec
fiaddl
sub
lock
push
sbb
and
push
pop
les
adc
lahf
fisubrl
ret
outsb
mov
or
lock
pop
dec
xlat
outsb
pop
sahf
dec
mov
ret
dec
arpl
add
sbb
jnp
aad
enter
sub
hlt
and
lcall
push
pop
jno
sbb
leave
mov
xor
popf
ss
gs
push
cmp
cltd
dec
push
imul
mov
mov
dec
inc
mov
jp
jne
in
cmp
pop
clc
mov
or
in
sahf
and
shlb
shll
sbb
xor
mov
out
cmp
xchg
or
dec
outsb
sub
jo
and
arpl
xchg
cmp
cmp
and
xor
pop
push
inc
fidivrs
adc
xchg
imul
add
xor
pop
in
adcl
stos
clc
xchg
bound
xor
sbb
push
test
sub
imul
jbe
js
adc
inc
shr
and
sti
scas
adc
test
ja
inc
sbb
sbb
jbe
ja
cwtl
jns
insb
lahf
push
add
out
rclb
adc
shlb
adc
or
or
push
xor
mov
add
rolb
sbb
push
jne
sub
xchg
dec
sub
loopne
inc
mov
cmp
test
bound
jg
pop
mov
jns
sub
inc
aas
negl
ss
push
ljmp
cmc
jno
xor
and
in
mov
push
push
xor
xor
dec
lahf
out
outsb
icebp
jb
cli
mov
dec
stos
bound
ljmp
rolb
test
cld
cmp
jne
mov
pop
pusha
mov
rorb
adc
pop
lds
mov
inc
xor
dec
mov
shrb
imul
cmp
jne
cmp
js
aaa
jp
jns
inc
cmpb
add
fidivl
loop
and
push
push
fcmovu
mov
add
cmp
negl
lea
inc
sub
xor
outsb
iret
dec
outsl
insl
cmpsb
push
inc
call
daa
mov
mov
cmp
out
mov
cmp
sub
mov
shlb
pop
inc
add
mov
mov
adc
enter
hlt
cmp
test
jae
lret
adc
push
insl
xchg
jbe
dec
adc
imul
push
pop
sbb
mov
inc
rolb
dec
das
jle
fsubl
shrb
cmp
sbbl
sarl
jg
cmpsl
inc
mov
cmp
mov
xchg
mov
push
jmp
inc
fdivrl
cvtpi2ps
pop
add
shrl
and
int
sub
lds
enter
in
outsb
xchg
sub
aas
mov
mov
push
ljmp
fldt
pop
push
mov
sarl
jle
fistps
sbb
push
dec
mov
dec
dec
enter
sub
pop
js
aam
mov
inc
neg
gs
call
popf
xor
jge
daa
js
mov
jne
or
shr
inc
mov
aaa
adc
xchg
les
push
jno
call
call
fdivrl
cld
cmpsl
cmp
push
push
pop
sbb
inc
aas
cmp
aas
or
cld
lods
and
add
test
adc
or
mov
mov
adc
xchg
sub
call
das
movsl
pusha
add
xor
pop
inc
cmc
stc
lods
or
pop
stos
fwait
jge
jmp
adc
sbb
lcall
mov
adc
ret
ja
fcompl
add
test
fidivs
push
xchg
mov
mov
in
inc
aam
ret
cld
lret
jb
fildll
popa
sbb
inc
sahf
out
xorl
pop
mul
data16
inc
outsl
or
aaa
add
test
sub
lahf
push
mov
lock
cmc
pop
sti
mov
jle
xchg
fwait
adc
call
push
or
dec
cmp
jnp
cltd
or
rcl
mov
mov
daa
testl
inc
inc
xor
stos
xchg
jp
mov
push
sub
fstpl
dec
out
enter
add
or
lods
andl
subl
rcll
or
adc
insb
or
inc
or
ret
vmovaps
outsl
mov
mov
sub
mov
leave
push
int3
add
and
pop
inc
and
lods
cmp
testl
idivl
push
das
leave
and
je
dec
call
hlt
outsb
repnz
sbbl
and
cmpsl
rolb
daa
jp
inc
and
xchg
flds
cmp
adc
pushf
dec
dec
sbb
mov
dec
or
push
popl
lds
mov
outsb
xchg
xor
xor
popf
outsl
lock
stos
fidivl
and
or
and
or
pop
xor
mov
mov
adc
mov
shlb
aam
dec
or
fwait
icebp
fnstenv
push
inc
add
mov
lods
cltd
aam
sub
ljmp
aad
pushf
lock
icebp
mov
rorb
dec
paddq
rol
or
rcl
or
jo
jge,pt
adc
clc
jp
outsb
sahf
movsl
les
sbb
out
lock
fnstenv
dec
stos
outsb
mov
mov
daa
inc
cwtl
sbb
xchg
sbb
xchg
les
inc
jb
jl
xor
out
pop
scas
rcrl
ret
pop
leave
add
jmp
shll
cmpsl
les
xchg
sub
repnz
loope
call
pop
ljmp
inc
pop
add
pop
sub
outsb
inc
or
lock
mov
and
mov
or
mov
js
cmpsl
loop
mov
lret
xorl
sbb
clc
and
inc
in
scas
test
push
jge
and
xor
xor
imul
xor
aam
testl
or
push
sub
fnstsw
and
push
out
push
aam
mov
aas
sbb
adc
test
xor
add
or
or
inc
jmp
lock
adc
adc
xlat
sarb
cmc
cwtl
shrb
adc
mov
jg
lea
pop
mov
in
or
ljmp
je
shlb
jb
dec
inc
push
stc
pop
add
and
ss
push
fistl
cmp
inc
fildl
adc
out
movsl
sbb
inc
sbb
cld
call
push
xchg
loop
jnp
and
inc
insl
jae
and
je
pop
add
out
push
mov
rcrl
push
andb
push
inc
pop
push
fnstsw
mov
or
sti
pop
pop
in
mov
jnp
xlat
adc
outsl
fs
or
jle
jl
xchg
fwait
aas
mov
imul
test
call
pop
fnsave
jae
adc
pop
out
lahf
movl
loope
sub
mov
ret
in
pop
mov
pop
stc
aas
ja
pop
push
outsb
je
cmpsl
push
test
fucomi
mov
bound
xor
mov
jmp
aad
xor
cmpsl
lret
fnstsw
or
xor
dec
pop
pop
pop
sti
cld
lock
hlt
outsl
jns
push
add
add
sbb
fistl
jnp
inc
xchg
jb
ljmp
test
inc
dec
adc
mov
mov
add
mov
inc
fisttpll
insb
in
fsubr
lret
cli
push
sub
pop
jle
adc
inc
and
pop
cs
mov
sbb
cmp
push
mov
xor
or
or
adc
adc
shrl
js
testb
fs
in
and
ljmp
push
xor
adc
dec
outsb
int
push
rolb
lock
xchg
leave
cmp
js
adc
inc
in
mov
mov
movsb
rdpmc
push
xchg
pushf
sub
xor
sub
push
cmpsl
scas
rclb
push
mov
repz
push
dec
add
pop
push
es
inc
movsb
mov
sbb
and
push
or
and
mov
cmp
sub
sti
aas
inc
mov
int
jne
lahf
cmc
xchg
pop
sbb
dec
dec
adc
ret
pop
movsb
mov
mov
call
int3
je
xchg
ret
insb
dec
and
sub
jp
ljmp
push
addb
std
push
je
loopne
and
cld
sarb
push
pop
sub
mov
je
or
push
inc
or
lea
ja
mov
adc
sub
andl
mov
sbb
sub
mov
inc
and
mov
fs
sti
xchg
repz
je
or
push
xchg
mov
sbb
fs
mov
sub
inc
je
mov
and
shll
sbb
push
ja
pushf
or
call
aam
insl
pop
push
or
sbb
inc
jo
pop
fdivs
mov
mov
dec
mov
cmp
dec
sbb
call
jmp
xorl
xchg
cmp
inc
inc
scas
add
mov
sub
pop
sbb
test
inc
pop
inc
sub
andl
scas
sbb
outsl
movsl
mov
xor
dec
inc
dec
call
jl
xchg
call
mov
push
xchg
dec
orl
xchg
dec
pop
cmp
jl
mov
sbb
idivl
push
fldl
lea
mov
adc
pop
xorb
or
fcomps
cwtl
jo
shl
push
out
add
add
cmovno
andl
xlat
push
mov
dec
inc
push
adc
push
sbb
out
testb
pop
stc
adc
mov
inc
xor
mov
fimuls
ret
xor
adc
pushl
xor
mov
mov
dec
adc
and
call
cmp
mov
push
xlat
je
xchg
stos
mov
shll
mov
data16
or
pop
ss
movsl
sahf
cli
mov
sub
mov
xor
scas
push
wbinvd
jge
mov
pop
cld
addl
push
mov
call
add
push
inc
hlt
iret
in
lock
adc
add
cmovno
fldt
mov
xor
je
sbb
dec
les
push
and
insl
add
mov
cmp
mov
pop
adc
pushf
sub
call
fcmovnb
popa
inc
push
or
mov
adc
and
push
test
jle
fdivp
js
mov
enter
daa
mov
add
push
aad
scas
outsb
mov
lods
xlat
cmpsl
std
inc
cmp
sbb
xor
test
shlb
pushf
or
push
aaa
mov
dec
mov
or
dec
minps
inc
jl
idiv
call
lret
repz
inc
mov
loope
jae
fsubl
inc
xchg
insb
push
xor
add
or
mov
add
cmc
andb
fcmovnb
jg
cmp
sub
clc
sub
xchg
adc
fdivl
lods
mov
xor
add
loop
andl
je
mov
add
lock
adc
sub
ret
pop
lahf
adc
add
mov
mov
jbe
inc
pop
sub
add
inc
jo
andb
push
in
sub
or
xchg
sbb
cmp
adc
cli
enter
xor
adcl
movsl
popa
adc
sbb
in
ficoms
dec
test
stos
push
push
pop
sub
icebp
xchg
jp
ret
cmp
pop
andl
dec
pop
push
aad
rcrl
add
mov
mov
out
ljmp
lahf
ljmp
dec
add
repz
aam
push
push
rcrl
pop
mov
or
je
jecxz
jne
push
cmp
mov
push
insb
out
daa
mov
xchg
in
outsl
std
ds
push
jge
and
bound
movsb
fisttpll
sbb
add
push
sahf
cmpsb
fists
xchg
insl
jnp
or
xor
inc
mov
mov
rcrb
movsl
jbe
lahf
xor
fwait
jmp
push
mov
mov
mov
loopne
ds
xchg
push
mov
ffree
and
ja
and
jp
outsb
lds
lods
out
push
push
stos
adc
shl
mov
add
cmpsb
sarb
xor
subps
out
add
out
aam
add
ret
sub
or
mov
adc
mov
scas
scas
push
add
sub
ret
inc
test
add
adc
leave
mov
push
loopne
das
gs
xchg
jae
jg
inc
clc
jne
jl
iret
mov
rorl
movsl
scas
mov
js
adc
or
or
mov
sbb
and
in
xor
xor
pop
jmp
add
dec
les
inc
fisubrl
outsb
inc
push
mov
out
inc
xchg
mov
enter
mov
mov
inc
mov
dec
inc
cmp
mov
xor
je
rcr
inc
add
and
loop
inc
pop
mov
insl
movsb
mov
pop
cmc
or
bound
into
xor
cs
outsl
test
icebp
add
mov
or
jmp
bound
jb
and
pop
mov
xchg
ja
mov
mov
sub
and
aam
dec
and
fs
test
xchg
xor
loopne
mov
popf
add
add
or
push
dec
pop
pop
sarl
ret
sub
clc
xchg
je
inc
imul
aad
test
psubsw
daa
cmp
loopne
pop
push
jp
mov
push
aaa
adc
aam
or
pop
mov
pop
test
shl
cld
loopne
pusha
scas
and
add
insb
push
iret
cmp
xchg
call
aam
dec
mov
jo
add
jno
add
push
jg
jge
xchg
adc
int
and
add
mov
push
cmc
sub
pop
pop
ret
fisubrs
aam
cs
pushf
jmp
out
nop
aas
cmp
mov
xchg
in
call
aam
push
or
sbb
xchg
rclb
mov
inc
pop
adc
lds
jmp
sahf
mov
repz
fisubrs
mov
faddl
pop
sbb
sbb
sbb
sbb
fistps
mov
mov
daa
bound
dec
jmp
outsl
in
cmp
pop
push
fildl
sub
outsl
push
dec
add
push
dec
call
jl
inc
mov
ljmp
add
lea
add
push
inc
mov
mov
inc
pop
lods
cmp
pop
or
dec
mov
jmp
ljmp
dec
scas
sbb
stc
and
out
pop
cwtl
std
in
and
or
mov
orb
je
pop
stc
inc
or
hlt
push
adc
insb
mov
inc
je
jae
and
inc
shl
jg
adc
call
test
ret
ret
pop
enter
inc
or
inc
inc
mov
int3
fimull
dec
adc
cmp
stc
pop
fadd
shrl
into
testb
mov
cmp
roll
xor
sub
aaa
inc
imul
adc
jnp
dec
cld
mov
mov
dec
addr16
in
pop
xchg
subb
push
mov
push
xor
add
fldenv
mov
mov
dec
movsl
or
push
pop
push
mov
push
ss
adc
and
addr16
dec
sbb
insl
out
jo
lea
jnp
out
pop
repnz
push
mov
imul
add
inc
add
push
call
add
data16
inc
xchg
notb
or
xchg
ret
jo
sbb
gs
mov
sub
fst
lea
push
mov
jge
fnsave
andb
sarb
cmp
outsl
das
std
adc
jmp
subl
sub
into
in
clc
mov
in
jbe
mov
arpl
jne
enter
pop
mov
in
dec
fwait
je
bndldx
sbb
push
movsb
cmp
stos
and
cmc
add
dec
inc
pop
cwtl
mov
rorb
mov
inc
in
sub
fistps
fxch
cmpsb
push
and
add
lds
inc
dec
notl
pop
fnstsw
loope
push
sub
xlat
ret
mov
jns
imull
bound
fsubs
jne
outsl
jmp
and
mov
test
in
add
mov
xchg
ja
scas
sbb
and
or
std
mov
sbb
xchg
mov
inc
std
lret
and
scas
stc
int3
or
pop
sub
stos
mov
roll
pushf
test
aad
les
cmp
push
push
sbb
rcl
jne
push
lahf
xchg
jnp
cmp
mov
vmovups
mov
test
xor
or
jbe
jp
std
push
xor
jae
inc
xchg
in
fists
pop
imul
adc
xor
jp
inc
sbb
aaa
iret
push
jge
arpl
cmc
loopne
and
stos
sub
fidivl
lret
add
inc
adc
dec
push
sbb
lock
jl
push
lds
sbb
out
outsb
pop
pop
lcall
icebp
or
push
or
nop
fidivl
push
movsl
jp
and
jp
mov
ja
call
loopne
pop
push
les
sbb
adc
mov
push
dec
cmp
int
nop
popl
enter
pusha
jmp
jp
inc
pop
mov
add
mov
cli
mov
in
push
and
mov
and
call
js
outsl
cmp
add
or
bound
test
fistpl
ds
pushf
aas
push
cli
aad
xchg
cmpsb
jp
jo
sbb
mov
add
lret
xchg
test
jmp
pusha
clc
mov
dec
shlb
mov
cmp
repnz
sub
sbb
fwait
cs
frstor
adc
in
mov
push
jmp
scas
or
lds
sti
mov
in
jl
dec
add
cli
cmp
push
push
cmc
adc
repz
sbb
add
ficomps
push
stos
pop
filds
loopne
inc
ficoms
fwait
outsb
clc
xor
push
dec
adcb
xor
lds
pop
dec
stos
or
or
aam
push
jb
sbb
in
fcoml
inc
lret
add
cmpsb
mov
jne
and
repz
inc
adc
xor
popl
in
cmp
fdivl
sbb
adc
fistpl
stc
mov
pop
test
into
icebp
mov
sub
insl
int3
add
outsl
jmp
mov
mov
cmp
das
jbe
cwtl
add
movsl
clc
mov
push
notl
in
mov
popf
enter
add
lea
lea
test
in
mov
out
pop
mov
mov
in
jecxz
mov
pop
pop
pop
aad
inc
insl
mov
sub
loope
je
cli
add
repz
je
cmp
sbbl
std
daa
push
cmp
lods
inc
mov
push
lahf
call
jns
xchg
pop
insb
push
sbb
or
cmp
dec
add
mov
shlb
call
mov
sub
cmp
pop
sti
mov
rclb
or
addb
xorb
inc
das
push
in
shl
adc
mov
add
xor
push
sub
jb
lea
add
add
cld
inc
outsb
test
inc
stos
mov
pop
jno
jns
inc
pop
and
dec
jle
push
or
leave
push
inc
add
loope
and
sbb
shrl
outsb
xchg
add
mov
lock
push
add
pop
sbb
mov
imull
sbb
mov
loopne
add
mov
in
lea
roll
stos
js
push
je
jle
shl
ss
ja
xchg
and
mov
stos
push
mov
mov
sbb
pusha
mov
mov
pop
xor
lods
popf
aas
xor
lods
je
test
sub
sub
pop
push
adcb
sbb
mov
enter
test
aaa
cmp
mov
push
je
sbb
imul
sbb
aaa
test
cmp
arpl
repnz
mov
mov
pushf
fadds
pop
stos
rorb
pop
sub
push
les
adc
dec
mov
insb
cld
mov
daa
xchg
mov
cwtl
xchg
xorb
mov
or
loope
cmpb
outsb
stos
outsb
sbbl
mov
orb
insb
sub
sub
daa
idivl
mov
hlt
inc
mov
lods
push
in
add
jno
inc
push
add
addl
adc
cmp
fucom
fs
push
insl
imul
sbb
add
js
mov
pop
pop
inc
or
sub
mov
bound
fmuls
lods
xor
xor
outsb
dec
xchg
fildl
or
and
stos
push
bound
add
xchg
xchg
adc
jno
jne
dec
inc
pop
sub
push
adc
lcall
xchg
push
xchg
lds
sbb
pop
jns
cmp
adcl
loop,pt
stos
or
ret
ret
adc
xorb
xor
int3
mov
outsl
out
shrb
shr
int
fsubs
sahf
jno
sbb
test
or
lret
ficomps
mov
lret
adc
push
pop
add
out
js
je
lret
mov
es
jbe
fstpl
push
jmp
push
jne
or
jmp
imul
push
push
xchg
dec
mov
inc
int3
cli
pop
out
inc
add
call
pop
insb
imul
sahf
je
sbb
sbb
push
ljmp
insb
rolb
sub
dec
das
inc
repz
and
shll
shl
fwait
sarb
inc
dec
sbb
ljmp
cmp
pop
inc
sbb
adc
xchg
mov
notl
out
ja
lods
push
sbb
jo
cltd
ret
test
scas
jle
iret
or
jb
cld
jle
xor
leave
adc
in
fldl
cs
loopne
jmp
subl
mov
sarb
or
ds
je
dec
mov
lcall
xor
jmp
in
push
or
or
leave
mov
ret
test
adc
ljmp
cmp
fwait
lods
faddl
jne
in
outsl
xchg
inc
mov
std
pushf
sub
add
bt
add
or
je
movsl
fistpl
scas
or
push
stos
pop
shlb
jl,pn
and
or
push
movaps
mov
mov
add
sub
or
imul
aad
sbb
adc
adc
outsl
scas
data16
cmp
or
dec
adc
cmp
call
aaa
gs
adc
aas
roll
dec
sub
testb
repz
sub
in
outsl
pop
inc
sub
xor
inc
sub
fimuls
cli
add
push
or
rcrb
orl
sti
cmpsb
cmp
add
dec
lret
lret
inc
mov
in
mov
mov
cwtl
movsb
loop
push
push
push
jo
sub
push
or
in
jg
pop
cmpsb
and
push
mov
lds
inc
push
pop
sbb
cmc
jg
popf
cmp
lds
outsb
xchg
cltd
sbb
mov
stos
loop
mov
icebp
jns
xor
clc
sbb
lock
cltd
repz
lret
cmpsb
pop
push
inc
xchg
stos
and
push
popa
mov
inc
push
fstl
lret
sub
mov
push
test
scas
inc
test
fisttpl
jae
mov
jle
call
mul
lds
xchg
aas
mov
mov
lret
sbb
movsb
pop
mov
mov
add
mov
adc
xor
mov
pop
jbe
push
or
push
aad
inc
add
lea
loop
and
push
cmp
mov
and
sti
insb
test
cmc
dec
jne
stc
cmp
lret
popf
or
ret
les
adc
and
or
scas
sarl
icebp
xchg
inc
mov
mov
mov
or
xchg
sbbb
pop
std
fwait
or
adc
or
imul
jp
sbb
add
popf
loopne
orl
mov
cld
inc
shl
movsl
es
push
pop
add
mov
dec
sub
pushl
fmull
lcall
inc
jae,pt
jno
lahf
pushf
test
out
push
addr16
mov
inc
sti
andl
mov
xor
pop
xchg
jecxz
outsl
adc
mov
adc
ret
das
shr
or
ds
in
or
sub
adc
test
test
test
adc
jmp
xor
sub
in
imul
xor
jmp
add
jne
hlt
inc
ret
into
inc
push
test
gs
mov
xchg
nopl
je
push
jnp
aam
jl
or
xchg
push
mov
mov
test
push
cs
mov
dec
aas
or
pusha
push
inc
mov
fsts
es
sbb
imul
add
adc
lds
cld
mov
adc
call
add
fcoms
mov
xchg
fildll
std
push
imul
adc
aaa
push
jl
pop
fidivl
push
mov
js
pop
add
adc
pushf
insb
cmp
push
lcall
cmp
push
cmp
sub
dec
jnp
mov
xor
push
psubusb
add
pop
jnp
movsl
inc
or
out
call
mov
or
bound
adc
mov
mov
or
inc
das
xor
xor
insb
mov
jmp
pusha
sub
cli
jo
xchg
lock
mov
and
or
ja
pop
dec
ret
maskmovq
testl
fwait
push
xchg
cmp
sbb
mov
out
xor
ficoml
stos
push
cmp
into
jns
or
inc
cmp
sub
cmp
enter
or
jle
cmp
fwait
mov
lea
pusha
inc
movsb
movsb
adc
jbe
inc
lret
mov
or
int3
shr
and
ret
movsb
xchg
call
fwait
std
jnp
stos
cmp
hlt
jne
test
xor
das
movsl
inc
adc
add
insl
imul
fwait
xchg
enter
push
shrl
clc
inc
cmp
inc
imul
mov
xchg
dec
push
fs
mov
cmpsb
and
pop
pop
cmp
lds
fsubl
gs
cmc
push
pop
jbe
and
xor
repnz
mov
sbb
pop
cltd
aam
js
mov
cmpsb
roll
push
push
lcall
inc
cmp
jg
shrb
rcrl
cmp
into
rorl
inc
je
jg
pop
hlt
xlat
push
mov
insl
and
orb
jecxz
xor
dec
jb
rorl
adc
jmp
pop
mov
mov
inc
sub
fldt
sbb
cmp
add
mov
sub
rcl
push
adc
lock
sbbl
push
test
push
daa
ljmp
inc
mov
mov
loop
test
mov
add
dec
cmp
or
xor
data16
or
add
std
adc
push
mov
xor
movsb
out
inc
les
out
fs
out
pop
inc
je
insb
adc
jno
mov
fiaddl
inc
jecxz
cmp
movb
mov
ret
xchg
inc
inc
jbe
add
push
jmp
pop
dec
mov
pop
jo
inc
sahf
js
les
inc
dec
loopne
push
fsubs
popf
aaa
sbb
pusha
clc
jo
sub
push
or
sbb
or
leave
inc
lcall
mov
or
mov
loopne
call
xor
test
outsl
pop
rorb
adc
loopne
add
push
scas
ljmp
or
cmp
fcmovnb
ret
adc
out
jl
cmc
and
and
and
inc
cmp
sbb
cli
and
mov
mov
popa
jb
inc
rcrb
sbb
cltd
ljmp
xor
xor
stos
xor
xchg
rcrb
pop
pop
ja
sbb
loopne
fs
inc
xor
pop
jne
ja
add
jo
mov
mov
sub
sbb
jbe
mov
insl
mov
sub
pusha
sbbb
dec
lea
stos
sbb
shrb
sub
aas
or
mov
inc
sbb
js
mov
cmp
mov
jg
jne
or
into
pusha
rcr
ret
cmp
adc
adc
jl
adc
mov
out
push
and
clc
pop
movsl
dec
das
adc
data16
adc
pushf
push
je
dec
adc
stos
inc
sub
jne
icebp
add
add
and
sbb
push
or
sbb
add
jmp
test
sub
fistl
stos
fstl
cmp
sub
mull
dec
mov
call
loop
cmp
js
add
shll
insb
popf
call
shrl
ret
mov
fs
inc
or
pushf
hlt
mov
lahf
es
bound
aad
jg
aam
int3
adcl
lods
dec
push
out
add
mov
inc
out
add
mov
dec
dec
paddsw
inc
jg
addb
imul
movsb
push
addl
pop
push
pop
in
inc
fists
jno
cli
mov
adc
add
sub
mov
cmp
add
ljmp
xor
xor
daa
inc
xchg
xchg
adc
jo
les
xor
and
bound
ret
or
sbb
add
pop
cmp
push
pop
xchg
fnstsw
aad
test
push
dec
addb
xor
push
xchg
pop
cwtl
rol
in
sbb
and
jbe
cmp
aas
inc
sbb
inc
shrb
mov
fcomip
sbbl
insl
add
xor
into
pusha
adc
push
js
ljmp
push
cmp
ds
fisubrl
into
aam
cs
cs
icebp
cmpsl
out
push
stos
or
stc
je
lret
int3
or
clc
mov
scas
cltd
stos
mov
adc
pusha
int3
push
movsl
stos
push
add
scas
dec
push
adc
jbe
pop
mov
add
pop
jle
cltd
pop
add
dec
and
ret
pop
jae
clc
push
xchg
dec
add
jo
outsb
stos
mov
pop
fsubs
jo
mov
jno
mov
subb
test
repz
jg
in
cvtps2pd
or
adc
xchg
outsb
add
shr
and
or
ljmp
jns
std
jnp
ja
loop
dec
push
mov
cmpsl
or
pusha
xor
jno
repnz
test
add
and
inc
movl
rorb
or
shlb
xchg
mov
jp
jbe
jbe
cmp
dec
insb
pop
xor
or
xchg
cmp
dec
pop
shll
lods
fcmovu
or
out
sbb
sub
add
sub
mov
push
mov
jle
xor
sti
jle
mov
adc
idivb
into
lock
inc
cmp
add
fadds
jmp
push
xor
push
xlat
xchg
cwtl
arpl
enter
push
adc
ja
dec
jne
paddd
imul
in
pop
jae
leave
cmove
inc
push
push
or
or
push
insb
scas
add
or
mov
imul
inc
lret
hlt
sub
sbb
push
loop
inc
sub
dec
stos
xchg
sbb
sub
inc
movl
sub
push
cmp
pushf
cmc
sbb
je
aaa
ret
lret
inc
dec
adc
jmp
fidivs
jmp
enter
loop
mov
decl
or
incl
stc
jmp
jmp
add
push
mov
dec
jmp
pop
mov
ret
pop
inc
shr
add
add
push
scas
std
insl
pop
pusha
or
shr
out
adc
in
es
jmp
sti
push
jmp
add
mov
cmp
adc
mov
or
aaa
pop
scas
lcall
jge
arpl
mov
xchg
out
imul
jmp
and
or
negl
mov
fsubrp
cmp
in
dec
idivl
hlt
and
or
shr
fiadds
fsin
outsl
imul
lods
fimuls
xor
jmp
and
mov
adc
ret
idivb
incb
pop
push
adc
out
cmovg
cltd
pop
add
addb
negl
jmp
hlt
push
adc
pop
mov
je
lret
push
cmp
cs
nop
pop
stc
mov
inc
pop
js
rcr
loopne
adcl
addb
js
scas
fdivrs
lret
dec
add
cmp
js
adc
clc
sub
and
adc
jnp
lock
ss
addb
add
call
jne
inc
jne
sub
mov
add
cmc
bound
stos
ss
and
or
fbld
inc
cli
jb
and
add
imul
pushw
xchg
pop
pop
imul
mov
lds
lods
out
dec
sahf
bound
ljmp
push
xor
es
sbb
pop
inc
cmpsb
ljmp
adcb
lret
ljmp
mov
je
cmp
daa
dec
push
and
ret
add
leave
es
sub
dec
ja
sub
dec
call
mov
bound
cmp
push
orb
sub
cmpsl
xchg
fisubrs
dec
stos
pop
jg
xchg
aas
push
push
add
ljmp
inc
push
sub
ljmp
ret
jp
inc
xchg
call
mov
mov
test
pop
and
pop
mov
add
sub
mov
mov
mov
mov
lock
mov
pop
add
jle
or
push
pop
enter
cmp
lahf
ss
in
push
pop
xchg
push
or
adc
mov
mov
out
lret
js
push
xchg
mov
lea
add
jbe
stos
orl
shrl
pop
adc
roll
dec
fsubl
jo
mov
jecxz
xchg
sub
xor
add
dec
aaa
je
adc
dec
je
orb
test
sbb
push
adc
pop
mov
mov
inc
push
xor
pop
xor
loope
clc
dec
jl
mov
cld
leave
jns
push
test
or
hlt
inc
insl
jae
push
xchg
je
sbb
or
jecxz
xchg
arpl
pop
loop
mov
inc
clc
or
clc
mov
inc
sub
or
jmp
sub
pop
jmp
test
pop
push
incb
cmp
test
inc
daa
jo
xor
mov
test
mov
push
add
fcompl
aad
call
add
sbb
adcl
aaa
fwait
lds
sbb
lods
mov
xor
add
fdiv
or
jmp
mov
mov
aad
lock
dec
cmp
mov
xchg
stc
and
loop
int3
add
lock
add
aas
inc
movsb
or
inc
outsl
cmpsl
mov
push
test
mov
or
gs
push
leave
push
inc
dec
std
and
add
sbb
lret
or
sub
add
jb
add
and
sbb
mov
les
dec
add
mov
sub
dec
clc
movsb
clc
das
inc
insb
dec
sub
xchg
call
or
and
jge
sbb
outsb
mov
into
sub
or
inc
rcll
inc
push
sub
sub
out
mov
shr
sub
and
and
and
es
mov
outsl
xchg
int
sub
adc
cmp
sub
cmpsb
fmul
sbb
pop
or
jmp
or
aaa
pop
jle
movl
int3
pop
push
dec
sub
sub
mov
jo
and
mov
dec
inc
and
mov
clc
xchg
add
insb
xlat
jmp
sbb
js
sub
sti
fmuls
in
lds
pop
or
or
stc
aaa
insb
add
hlt
in
je
mov
dec
sbb
push
lock
xor
fbld
pop
js
jae
jmp
add
cmc
mov
xchg
shll
jmp
push
push
imulb
cld
adc
fnstenv
ds
push
dec
push
sbb
adc
pop
ljmp
or
ret
ss
or
push
and
fwait
add
pop
mov
or
cmp
ljmp
jb
push
out
and
out
or
js
cs
cld
or
inc
mov
push
jmp
les
add
add
jbe
pusha
fcmovnbe
jp
popa
call
dec
pop
inc
push
dec
fs
sti
gs
addb
jne
iret
add
push
pop
je
cltd
cld
sbbb
mov
pop
mov
call
int3
arpl
lahf
inc
fiaddl
pop
sub
push
das
std
mov
push
xchg
pop
inc
outsl
aas
je
mov
addl
mov
lret
inc
push
shl
enter
xchg
outsl
scas
call
cmp
sbb
pop
push
mov
rorl
sub
sbb
xor
adc
in
adc
inc
arpl
daa
add
push
scas
stos
and
adc
nop
jnp
pop
gs
loopne
cmpb
aas
das
unpcklps
cmp
insb
add
lods
or
fdivp
and
add
xchg
jge
leave
movsl
lahf
icebp
rcll
push
xor
repnz
pop
ret
fstpt
fisttpll
dec
push
inc
fistps
push
repz
ds
outsl
inc
mov
push
xor
pop
loopne
push
mov
sub
insb
mov
test
movl
aad
roll
lods
mov
xchg
add
shl
sbb
jb
add
adc
jo
roll
sbb
jae
aam
pop
dec
xchg
or
and
pop
jl
mov
incl
dec
add
xor
call
add
push
pushf
fcmovu
leave
dec
adc
mov
push
sub
mov
dec
or
sub
mov
pop
inc
xchg
add
push
xchg
pop
std
aas
pop
call
push
push
pop
ret
js
fsubl
shll
insl
std
xchg
aad
or
adc
push
push
popf
mov
inc
addl
jne
nop
mov
push
push
loop
out
cmp
pop
cmpb
dec
cmp
or
inc
insl
cmp
scas
xor
mov
pop
test
xor
adc
inc
sbb
ss
inc
xchg
jbe
lock
adc
cmpsl
xor
mov
fcmovnb
fcmovb
outsb
je
pop
in
and
mov
sub
add
mov
mov
es
stos
mov
insl
or
je
stos
cmpsb
mov
push
negl
or
in
mov
ret
cmp
addb
push
xchg
adc
ljmp
inc
lods
jge
dec
mov
in
dec
and
pop
cltd
inc
jmp
xchg
data16
push
fsubl
push
lret
mov
cmp
or
push
fsts
xlat
xchg
push
xor
cwtl
push
add
jl
pop
adc
addr16
aam
mov
inc
rcl
xchg
push
arpl
stos
lea
or
shrb
insl
and
mov
sbb
sbb
movsl
test
cmp
sbb
hlt
cmc
aad
lods
dec
repnz
jle
incl
xor
xor
dec
gs
mov
adc
pop
or
inc
xor
mov
push
push
icebp
fs
mov
push
pop
bound
pop
xchg
fwait
inc
dec
pop
and
cmp
or
fcomi
inc
cmp
fiadds
insb
ds
test
adc
push
loope
js
hlt
loopne
mov
cli
imul
inc
or
sbb
fstpt
dec
or
inc
or
inc
or
icebp
aas
stc
xchg
imul
add
push
gs
add
je
xchg
nop
in
push
fisubrl
addl
jbe
ss
jae
dec
inc
xchg
fs
dec
ja
shlb
mov
outsb
mov
shrl
je
fadds
loop
ss
in
add
fcomi
and
push
mov
cmp
enter
ret
dec
mov
icebp
rcr
mov
sahf
xor
dec
push
xor
push
ja
popf
cmp
sbb
fdivr
addr16
mov
jmp
in
inc
je
mov
scas
mov
push
xor
incl
xor
fistpl
pop
push
inc
xor
xor
outsb
or
push
je
aam
sub
and
mov
push
out
jle
pop
lods
mov
dec
pop
dec
sub
mov
pusha
test
dec
mov
ret
mov
out
mov
push
sbb
cmpsb
mov
cli
cwtl
int3
push
sub
sbb
jbe
in
or
int3
xchg
jo
ret
jg
outsl
mov
adc
mov
add
out
cli
lds
js
out
cmp
sub
lcall
andb
push
insl
jl
lcall
data16
popa
popf
push
sub
xorl
pop
dec
adc
and
test
lods
cmc
pop
dec
popf
adc
les
roll
sbb
orl
inc
fisubl
push
rdpmc
push
stc
and
jp
imul
loop
shr
or
adc
cmp
cli
call
mov
rolb
jmp
adc
sbb
testb
adc
pop
add
adc
repz
sbb
sub
inc
dec
call
pop
ret
cmpl
add
adc
inc
xchg
sub
pop
push
inc
sub
pusha
call
add
adc
je
pop
fnstsw
push
dec
lods
imul
dec
cmpsb
call
or
call
sub
inc
mov
js
hlt
xchg
pop
and
inc
cs
jecxz,pn
std
xchg
lock
aaa
mov
inc
fnstcw
xchg
lds
xchg
aam
clc
or
pop
push
sub
adc
cmp
jne
pop
pop
ds
pop
lahf
inc
jecxz
rcr
push
jp
bound
ret
cmp
pushl
add
mov
daa
or
je
jo
lret
add
push
jle
add
sub
push
pushf
addb
and
xor
xchg
pop
movsl
dec
aad
lods
stc
cmp
mov
push
mov
in
mov
icebp
mov
xor
jnp
cltd
push
shrl
mov
insb
inc
inc
fildl
sub
rorb
aaa
or
rclb
push
push
imul
and
js
adc
pop
xchg
incb
pop
cmpb
jo
pop
cld
or
sub
mov
scas
and
inc
add
cmc
nop
sub
cmp
mov
mov
adc
outsl
adc
fldenv
mov
jne
push
inc
mov
sbb
or
mov
adc
pop
sbb
mov
sub
mov
pop
sub
outsl
adc
pop
scas
repnz
dec
adc
cltd
enter
xor
shrl
jp
in
je
push
push
subl
sbb
cmp
sbb
sbbb
add
add
xor
push
loopne
inc
test
mov
sub
cmp
pop
push
imul
push
mov
cs
aam
dec
xor
add
fcomps
mov
push
cmpsl
or
dec
and
mov
ret
push
mov
or
or
pop
push
daa
inc
fbld
push
sbb
or
sbb
mov
movsl
xchg
out
arpl
ret
sti
adc
pop
orl
sbb
fidivs
imul
jae
call
in
inc
mov
aaa
lcall
sbb
xlat
pop
dec
pop
xchg
mov
out
daa
or
pop
call
roll
jno
add
sahf
adc
negb
adc
add
mov
cltd
cmc
dec
in
xor
mov
lret
loop
adc
nop
rolb
pfmul
arpl
pop
aam
pusha
sbb
or
push
les
nop
pop
mov
mov
aam
sarb
fiaddl
push
fisubs
roll
mov
cmp
jno
dec
xchg
iret
jno
cld
mov
mov
inc
ljmp
jne
shr
and
cmpsb
sahf
xchg
mov
adc
adc
and
mov
mov
fldt
adc
lds
dec
insb
lcall
clc
xor
lds
adc
add
mov
mov
lcall
and
sub
in
push
lret
call
hlt
cli
clc
push
xor
adc
jmp
pop
test
mov
test
lea
pop
or
pop
cmp
inc
aad
rolb
bound
pop
sub
test
sub
fistl
mov
jmp
add
or
push
inc
inc
adc
dec
mov
add
inc
in
add
cmp
pop
in
mov
into
add
mov
call
xchg
frstor
push
fwait
jo
mov
loopne
mov
mov
sub
flds
jb
std
mwaitx
dec
into
popf
push
jnp
data16
in
xchg
hlt
and
test
sub
adc
mov
repnz
adc
lret
push
push
ret
enter
roll
cltd
lret
insl
test
gs
add
fadds
lods
sbb
aaa
ror
hlt
inc
sbb
pop
xor
add
jmp
je
loope
std
and
and
stos
inc
xor
inc
pop
decl
insb
lret
je
pop
cltd
lret
mov
fidivrl
jmp
adc
mov
insb
pop
call
adc
loope
cmp
decb
rcll
sub
out
lret
pop
testl
adc
inc
mov
sub
ret
cs
adc
popf
sbb
cmp
or
cli
aaa
jg
xchg
pushf
push
xor
push
les
or
xchg
sub
nop
sbb
xor
push
xor
pop
push
gs
cwtl
lahf
dec
or
sub
inc
es
aam
adc
mov
jg
add
outsl
test
addl
xor
cmp
mov
cwtl
test
add
sub
add
addr16
and
in
out
in
ds
imul
addl
sbb
aas
jno
inc
out
sbb
fs
adc
fidivrl
bound
and
xchg
xchg
xchg
xchg
xchg
mov
pop
jo
dec
insl
or
xor
mov
mov
pop
repz
call
out
pop
xchg
push
mov
xor
adc
add
ret
mov
negl
js
je
ja
fidivl
ss
xchg
or
inc
bound
popf
mov
in
fwait
adcb
or
insl
adc
or
inc
adc
mov
add
and
adc
cmp
sbb
mov
adc
cmc
shll
int3
add
cli
inc
or
jo
dec
jne
mov
dec
or
pop
outsb
movsl
outsl
xor
sub
push
bnd
xchg
outsl
inc
imul
ljmp
mov
jns
fcmovb
and
ret
push
subl
jecxz
push
add
or
ret
mov
cmp
add
out
jbe
cmc
in
mov
mov
lds
cmp
mov
mov
insb
xor
decl
mov
in
mov
mov
inc
inc
nop
dec
lea
sbb
inc
decb
cmpsb
xor
cmp
push
jecxz
push
xor
clc
ljmp
push
test
in
mul
jecxz
pop
xchg
pop
or
in
jle
cltd
jb
cmpsl
jbe
ss
cmp
stos
stos
loope
test
dec
mov
pop
inc
jg
stos
dec
adc
sub
mov
out
pusha
fisubs
pusha
jno
lret
iret
test
sbb
test
cmc
cmpsl
push
lds
jp
inc
ljmp
push
shrl
repz
adcb
jb
and
scas
cmp
or
call
dec
lods
test
notl
inc
jge
clc
jge
jno
out
loop
or
aaa
ljmp
outsl
push
jns
inc
mov
push
add
or
push
lock
sub
push
imul
test
jmp
fildll
mov
das
addl
icebp
push
out
rcll
neg
stos
push
sub
mov
fsubr
lods
xchg
popa
dec
adc
sarl
cwtl
in
stc
or
mov
cmp
cmc
fbstp
jno
into
pusha
push
cmp
xchg
sub
add
imul
push
pop
cmp
ja
and
sbb
jmp
cmp
insl
pop
outsb
stc
ret
inc
loope
cmp
inc
push
cmp
inc
aas
pop
movsl
pop
lea
push
data16
testb
in
inc
xchg
xor
call
or
dec
addb
xchg
enter
mov
xchg
jle
jns
popf
mov
inc
shrb
rorb
jle
pop
mov
ljmp
mov
add
jb
das
test
into
adc
pop
cmpsb
or
ret
cmc
and
sbb
cwtl
out
mov
sbb
mov
mov
pop
loop
adc
cltd
add
mov
lahf
inc
mov
sbb
shl
cmp
imul
jg
out
pop
fildl
pop
sub
dec
jb
pop
jmp
je
sarl
xor
adc
sbb
orl
and
push
lods
mov
inc
movsl
arpl
push
and
adc
outsb
xchg
pop
insl
fldt
inc
adc
test
popa
stos
or
cmp
dec
icebp
mov
fucompp
je
and
xchg
clc
mov
data16
adc
ss
in
cs
mov
es
aad
shl
pop
mov
inc
xchg
add
add
decl
rorb
clc
repnz
push
mov
fwait
pop
xor
js
mov
mov
aas
xchg
sbb
xor
testb
das
sub
adc
jne
mov
dec
xchg
les
and
cld
push
in
add
jo
sbb
rolb
cmp
adc
adc
int3
dec
xor
cld
add
add
and
pop
loope
inc
jb
xor
sbb
dec
dec
inc
cmpsb
or
push
push
hlt
inc
adc
inc
and
out
push
xlat
lock
adc
and
or
lret
cs
lods
rcrb
repz
test
subb
mov
call
mov
pop
push
rclb
scas
addr16
pop
stos
dec
loope
test
mov
call
sbb
push
adc
cltd
cmp
and
ret
dec
inc
push
scas
jle
mov
rcll
nop
test
dec
push
inc
call
mov
test
mov
cmp
pop
sbbb
dec
cmc
gs
outsl
std
insl
in
inc
push
repz
stc
pop
mov
outsl
out
add
and
cli
int
push
or
inc
dec
mov
out
cmp
subb
loopne
lret
push
push
adc
call
and
addb
mov
mov
add
ret
cmpsl
inc
pop
mov
adc
stos
fmul
test
push
push
ds
jb
inc
mov
mov
pushf
inc
mov
push
sbb
aaa
das
sbb
jge
jle
push
test
pop
cmp
or
mov
add
dec
pop
mov
call
arpl
fisubrs
ret
mov
xor
xor
fimuls
pop
mov
mov
outsb
cmp
and
lcall
cmp
add
loop
cli
push
adc
mov
flds
sub
xor
xchg
jg
or
in
mov
sub
dec
aas
or
mov
add
dec
mov
das
adc
movups
in
cmp
js
mov
cmp
jbe
mov
in
ficomps
jb
decb
mov
std
cmp
adc
sub
subb
out
inc
mov
js
inc
cmpsl
mov
imul
fimuls
aaa
inc
fucomp
fwait
jbe
xchg
sbb
js
xchg
cwtl
lds
outsl
pushl
sub
pop
inc
xor
out
adc
mov
mov
xorb
cmpsb
or
and
pop
push
es
das
jne
inc
imul
lret
jg
mov
pop
mov
rol
sti
cmc
push
popa
adc
and
pop
sti
sbb
jg
or
in
jo
js
sub
and
sub
pop
inc
cmp
or
adc
mov
and
cmp
dec
filds
lea
pop
xor
adc
ja
std
adc
outsl
add
xor
int
inc
movsb
add
adc
lods
adcb
cmp
dec
or
ja
sbb
mov
sbb
repnz
loopne
pop
sbb
xchg
aaa
sub
stos
in
sub
call
fcmovnbe
push
jae
scas
insl
in
je
dec
pop
or
je
mov
test
pop
pop
lock
push
xchg
or
adc
cmp
mov
cmp
cmp
loopne
pop
xor
add
movsb
xor
add
sub
scas
jg
cmpsl
sub
bound
fs
fbld
inc
or
or
sub
or
add
mov
push
imul
push
sbb
in
pop
inc
aam
aam
in
decl
movsl
jg
xchg
pop
xchg
out
loope
adc
adc
scas
stc
fdivs
bound
adc
mov
mov
mov
loopne
pop
into
inc
pop
push
xor
dec
ljmp
mov
xchg
loopne
push
mov
call
loopne
mov
add
das
into
or
mov
cmp
push
inc
mov
xor
mov
lods
rcrl
inc
push
inc
dec
shrl
icebp
aas
fstpl
popa
clc
sahf
mov
loope
lods
dec
mov
push
in
mov
clc
or
pop
sbb
insl
cmp
push
fwait
clc
sub
dec
cmp
add
mov
jle
mov
inc
mov
fsubrs
dec
sbb
out
add
je
in
and
xchg
sbb
lods
outsb
adc
aas
movsl
dec
ret
rcr
add
push
push
movsl
jbe
mov
jo
subb
sub
pop
sahf
cmpsb
or
sti
inc
xor
or
pop
push
xor
push
mov
mov
popa
out
fwait
adc
xor
lcall
ja
mov
rcll
pop
pop
popf
out
rorb
shr
daa
and
call
mov
cmc
rcrl
sub
jns
mov
mov
mov
cld
push
in
adc
adc
push
shrb
out
pop
loop
inc
mov
mov
nop
cmpsb
and
enter
js
cmpsb
jg
mov
adc
sub
xchg
adc
call
inc
dec
jns
dec
enter
push
dec
mov
fbstp
incl
movsl
je
lahf
push
fs
sahf
adc
jg
dec
cli
push
imulb
pop
xor
imul
mov
sub
clc
imul
fldl
lock
mov
lret
push
add
adc
add
sub
mov
out
dec
sbb
cmpb
daa
fs
inc
je
push
sub
push
mov
xor
pop
push
je
or
mov
cmp
lcall
lret
scas
sbb
mov
xor
inc
pushl
dec
lods
adc
mov
arpl
sbb
xlat
and
pop
testb
loop
add
orl
sub
fisubrs
mov
cltd
xor
faddl
xchg
stos
enter
adc
jl
dec
divl
inc
push
pop
sbb
xchg
enter
lods
ss
adc
adc
jns
movsl
pushl
sub
jae
stos
jns
test
pop
cmpsl
sbb
mov
rorl
negb
idiv
cmp
xor
jl
cmp
mov
push
or
xchg
jns
test
idivb
mov
repnz
mov
sar
mov
fisubs
out
or
jb
test
pop
stc
jmp
push
loopne
sbb
or
fbld
cli
or
cltd
mov
xchg
pop
cmp
sbb
mov
mov
lret
cmp
push
cli
adc
scas
mov
cwtl
and
shlb
mov
je
in
adc
test
mov
insl
push
aas
mov
nop
sbb
inc
outsb
icebp
jg
add
sbb
test
mov
imulb
aad
sub
lret
popf
clc
mov
sub
adc
push
out
mov
jg
aam
or
push
xor
and
movsb
outsl
or
push
aaa
into
insl
hlt
das
cmc
jnp
sub
lods
cmp
sub
mov
jge
mov
mov
mov
ffree
lods
sub
inc
push
sub
jno
shll
inc
mov
add
icebp
mov
lcall
lock
cmp
dec
dec
call
cld
sbb
pusha
ljmp
movsb
and
jg
or
sbb
dec
loop
inc
mov
cwtl
cmp
frstor
mov
mov
icebp
dec
or
mov
adc
stos
inc
lods
inc
pop
mov
in
push
xchg
stos
push
cmp
mov
inc
or
cwtl
jo
jg
test
sub
push
push
inc
or
pop
sbb
les
adc
jg
mov
test
or
icebp
pusha
pop
jp
or
add
sub
pop
xchg
shlb
adc
or
xchg
or
xlat
mov
adc
and
aad
xchg
cmp
stc
call
in
loopne
test
imul
ficoms
mov
push
pop
pop
loopne
cmp
pop
je
mov
fsubl
add
jmp
push
ss
shrb
sar
sbb
lret
lret
or
xchg
adc
and
jle
adc
je
je
sub
aam
inc
xor
push
hlt
sti
imul
loopne
sbb
enter
mov
cmc
or
add
adc
test
repnz
pop
ds
push
call
out
ret
mov
xchg
jp
dec
or
jge
mov
mov
mov
es
mov
inc
mov
imul
push
push
mov
jbe
push
leave
push
jnp
or
pop
inc
loope
enter
das
mov
mov
out
mov
cwtl
adcb
loop
roll
cltd
xchg
push
push
sbb
loope
or
mov
push
add
cmp
jb
sbb
mov
icebp
cmp
sbb
or
cs
or
rcl
and
jp
mov
push
jnp
imul
and
xor
shr
mov
fidivrs
js
mov
add
lret
sub
or
mov
int
sbb
mov
adc
int3
mov
iret
insl
add
push
je
sub
pop
rcll
test
add
sbb
cmp
mov
and
mov
sub
and
cwtl
xchg
outsl
pop
add
xor
xor
and
adc
popa
adc
jg
inc
xor
lret
andl
test
xorl
inc
adc
call
mov
add
cmpl
dec
cld
test
loopne
lods
icebp
popa
mov
sub
xchg
pushf
arpl
or
push
aam
mov
repz
jne
outsb
fdivr
xlat
or
loop
xchg
push
jl
sub
dec
mov
sub
ds
inc
jb
adcb
sub
mov
les
sub
aas
push
adc
cmpsb
or
sub
push
mov
insb
test
in
dec
and
adc
fcoms
jp
fld
shll
lret
mov
enter
mov
xchg
add
pop
pusha
mov
test
sub
or
or
cmp
addr16
mov
add
add
and
or
leave
dec
or
loopne
imul
or
in
ret
add
dec
push
je
sub
insl
dec
cwtl
mov
or
inc
addl
outsl
adc
inc
aaa
sub
mov
int3
or
adc
add
mov
mov
or
mov
scas
adc
add
xor
pop
mov
js
and
enter
mov
pop
sub
lods
adc
subb
lcall
inc
jo
inc
xor
in
adc
sbb
adc
lock
sub
cmp
ret
add
xor
inc
sub
pop
inc
mov
daa
test
pop
sub
or
faddl
cwtl
es
pop
call
nop
sub
dec
shlb
mov
test
mov
outsb
pop
shll
lcall
aaa
sub
or
mov
xchg
jp
mov
inc
or
leave
std
xor
cmp
sarb
push
lea
jecxz
or
test
inc
adc
out
ljmp
arpl
test
rol
dec
sub
inc
fisttpll
cmp
filds
data16
iret
repnz
scas
mov
add
push
es
notb
jge
sahf
and
lret
das
inc
adc
lcall
cli
cmp
add
adc
inc
cmp
insl
ljmp
je
cmp
je
jmp
aaa
fadds
add
mov
mov
cmpb
add
pop
jb
incl
test
loop
push
xor
xchg
in
aaa
add
mov
push
jle
test
adcb
mov
jle
xchg
aaa
ret
pushl
aam
xchg
push
fdivl
sub
and
outsl
sar
push
mov
mul
sub
push
pop
in
mull
incb
sbb
testl
add
loopne
pop
rorl
sbb
mov
incl
data16
dec
outsb
push
xorb
cwtl
imul
push
leave
loopne
loopne
loopne
aaa
aam
adc
and
or
pop
adc
ret
dec
call
and
orb
or
and
adc
sub
dec
adc
mov
mov
jecxz
inc
push
push
add
inc
jg
fmull
int
jle
push
jmp
add
test
or
push
push
add
cld
outsl
pop
push
call
ret
jmp
loope
mov
pop
out
decb
add
inc
add
jmp
pop
dec
sub
adc
adc
aad
sbb
jle
movsb
ss
imul
and
pop
mov
nop
jmp
aas
jmp
ret
fistpll
xchg
mov
fistpl
cmp
xchg
test
gs
fcomi
inc
shrl
aad
adc
or
push
dec
fbld
cmpb
ja
pop
sbb
popl
loop
testb
inc
inc
mov
fiadds
adc
std
in
mov
add
adc
dec
jae
mov
push
outsl
cmpsb
xor
lret
aam
lcall
sti
push
jmp
arpl
lea
xor
call
push
scas
push
pop
add
je
push
push
push
cltd
or
add
nop
adc
xchg
pusha
mov
dec
add
inc
push
dec
inc
dec
xor
cs
dec
scas
or
decl
lds
mov
scas
faddp
into
aaa
push
push
lds
stos
cmp
pop
dec
ret
dec
or
inc
lock
mov
ret
clc
in
push
je
inc
scas
mov
or
ret
aad
lods
es
pushl
push
in
mov
rorl
fcompl
sti
bnd
into
adc
fcmovb
sbbb
aaa
jg
sti
repnz
pop
cmp
cmpsb
dec
bound
and
lcall
fisubrs
dec
aaa
pop
mov
lods
and
lret
xchg
sbb
bswap
jecxz
out
iret
and
das
pushl
ffreep
icebp
loop
fs
hlt
fwait
xchg
into
dec
aaa
imul
pop
mov
adc
repnz
adc
outsb
cmp
pop
es
pop
jg
or
cld
fistpll
pop
fsubl
gs
ret
xchg
pop
scas
cmp
xlat
mov
aaa
mov
add
ret
int
dec
jmp
lret
dec
ret
jbe
inc
sbb
test
fadds
jmp
lret
mov
xchg
xorl
xor
ljmp
imulb
jae
xor
sbb
rol
add
push
ret
clc
mov
pusha
cmp
dec
or
sbb
jg
idiv
pop
mov
add
inc
jge
imul
mov
fcmovne
xchg
xchg
fsubrl
ja
lret
jb
das
das
enter
lcall
mov
test
inc
adc
outsl
add
adc
cmp
sub
mov
pop
mov
jno
sub
testb
fistpll
adc
ds
mov
inc
aas
jne
sti
insb
adc
daa
fwait
ds
or
fcmovnu
pop
mov
or
fmuls
mov
in
dec
lods
adc
jl
es
fs
mov
jge
pusha
pop
sbb
jbe
inc
xchg
or
outsl
aas
fsub
add
add
adc
and
pop
mov
in
mov
aad
call
stc
ret
aad
pop
bound
push
dec
xchg
push
mov
inc
add
decb
mov
fists
xchg
and
std
jg
ret
sub
cmp
push
aaa
and
andl
pop
loope
adc
jmp
popa
fs
lret
push
pusha
icebp
loope
pop
rcr
push
outsb
filds
pop
bound
popa
sti
insb
filds
adc
pop
aad
sub
jge
or
jno
pusha
sub
imul
imul
xchg
pusha
popf
adc
aad
mov
sub
dec
mov
cltd
xor
xchg
lahf
sub
push
scas
xchg
xchg
add
adc
mov
add
mov
pusha
sti
jb
adc
fdivp
aaa
pop
shll
mov
sub
jp
mov
lahf
pop
roll
mov
mov
mul
and
call
and
fistl
mov
test
mulb
lret
ljmp
mov
xchg
sbb
jbe
adc
xchg
lea
call
ja
pop
inc
ficomps
add
in
add
in
je
sbb
jae
mov
mov
adc
cmp
rcr
movb
push
dec
imull
xchg
xchg
sbb
mov
fistl
mov
add
ret
dec
mov
movswl
mov
ss
mov
jae
lods
pop
mov
enter
fwait
pop
dec
ret
clc
mov
pop
sbb
fistpll
out
or
xchg
add
repnz
or
jns
fcompl
daa
outsb
sti
loope
int3
add
mov
leave
ret
dec
jge
sub
dec
daa
jl
xchg
jmp
das
imul
mov
pop
imul
int
shll
lea
add
and
std
nop
das
ffreep
femms
xchg
pushf
icebp
icebp
push
popa
dec
xchg
cmpsl
mov
lahf
mov
pop
push
ret
into
sub
stc
xlat
xchg
jb
cwtl
dec
into
sar
outsl
or
inc
adc
mov
jmp
sub
adc
add
xor
inc
fidivrs
lret
xchg
sub
xchg
and
or
sub
pop
cltd
xchg
pop
cltd
addr16
data16
cmc
popa
js
in
lods
and
and
push
or
mov
divl
mov
xchg
fadd
fsubrl
jge
add
mov
inc
push
sar
outsl
fistpll
gs
lods
cld
add
inc
mov
inc
dec
and
leave
xchg
fldt
es
rcl
outsl
insl
cmpsl
clc
adc
repz
add
pop
ret
insl
clc
xchg
cmpsb
addb
outsl
pop
jg
cmp
test
mov
add
or
dec
clc
testb
dec
add
insl
and
fwait
mov
lea
jge
jecxz
popl
gs
clc
sub
lret
xchg
xor
jle
cmp
shl
mov
in
rcrl
mov
push
dec
and
mov
mov
pop
inc
int3
into
loopne
outsl
mov
insl
mov
testb
cmp
lea
jnp
arpl
jle
dec
pop
scas
mov
repnz
jmp
repz
xchg
mov
in
out
lret
pop
into
xchg
pop
into
ret
into
outsl
movsl
outsb
aad
mov
insl
dec
xchg
pop
add
pop
ffreep
mov
int
movsl
cltd
outsl
es
xchg
jg
mov
push
cmpsb
cmpsb
pop
or
mov
pop
ret
es
sub
cld
repnz
mov
shlb
cmp
lcall
fdiv
lods
jle
or
fldenv
mov
sbb
lds
into
movsb
imul
into
pop
xor
cwtl
icebp
push
cld
leave
mov
stos
add
dec
iret
fidivrs
add
cld
lds
ja
icebp
mov
add
ss
aaa
jge
jbe
adc
mov
lret
aas
into
shr
addr16
sbb
or
mov
lea
jae
fcmovnb
mov
lock
lret
lahf
sahf
frstor
pop
enter
lods
cmc
xchg
jg
in
xchg
mov
and
sub
cmpb
shlb
mov
cs
rcr
out
pop
jnp
stos
add
push
push
sti
mov
fdivl
xor
ja
int
jbe
repz
lea
or
jb
je
push
jg
addr16
mov
mov
clc
sbb
jne
jl
loop
mov
push
sbb
lods
in
pop
push
pop
loop
mov
repnz
gs
mov
pop
testb
lcall
add
out
insb
mov
or
and
adc
mov
pusha
rcl
inc
mov
sub
stc
not
pusha
icebp
jno
pop
jle
fldenv
pop
daa
pop
push
mov
imul
dec
setbe
in
cmc
cmpsb
int3
add
rol
shl
inc
dec
add
ret
mov
nop
cmpsl
xchg
cwtl
jl
cld
fbstp
jbe
into
lds
test
into
cmp
jnp
xbegin
sbb
push
dec
mov
pop
popf
jnp
in
mov
test
jae,pt
cmp
push
fidivrl
jbe
testb
and
popa
imul
and
lea
leave
xchg
aas
xorl
loope
mov
xor
dec
mov
fsubs
sub
mov
add
adc
jg
pop
mov
fdiv
jge
in
dec
iret
out
fsts
xchg
fsubs
loop
push
in
mov
sbb
outsb
push
dec
ret
into
push
xchg
stos
mov
clc
xacquire
mov
xor
add
jl
pop
ret
movl
add
fcomi
in
dec
fildl
sub
out
loope
aas
push
mov
or
or
subl
leave
dec
js
je
popa
aaa
hlt
mov
xorb
aad
pop
mov
xor
jl
movsl
dec
and
jecxz
fdivrs
fwait
pop
ffreep
jb
cmp
repz
call
notl
jmp
in
push
mov
lret
mov
fistpl
dec
jle
loop
andl
sar
add
jg
and
mov
loop
aas
iret
mov
rorb
sub
jns
xor
clc
aad
dec
and
cmpsb
mov
sbb
shlb
jle
mov
cld
nop
lcall
outsb
pop
ret
clc
sub
xchg
mov
shrb
cwtl
mov
outsb
jge
fidivrs
shr
mov
stos
add
dec
shl
or
decl
mov
inc
notl
test
mov
outsl
loopne
cmp
adc
ret
add
pop
mov
push
and
jb
mov
xchg
icebp
or
push
cmc
jb
jno
mov
sti
add
jb
scas
xor
test
or
cmp
mull
into
call
in
fnstenv
test
jg
subb
push
add
in
repz
xor
aas
fldcw
es
mov
jmp
ljmp
or
dec
pop
orl
jl
push
aad
xchg
xchg
and
adc
insb
ja
cmp
call
mov
jl
mov
push
inc
jb
fistps
add
adc
cmp
pop
or
inc
jb,pt
outsl
add
jo
mov
pop
imull
jno
or
das
imulb
push
jl
mov
add
adc
pop
test
fnstcw
and
mov
stc
mov
xchg
not
call
pop
xor
sub
add
addr16
sub
movsl
into
jbe
ss
ljmp
adc
adc
fidivrs
mov
daa
pop
nop
rcrb
adc
fcmovnu
dec
push
aad
jno
sbb
ret
mov
in
int
xor
mov
sub
adc
and
scas
mov
push
push
mov
and
or
push
add
mov
mov
enter
outsb
and
xchg
dec
add
xor
enter
add
cld
mov
xor
pop
fnstcw
gs
call
cmp
cmp
in
add
stos
cmp
int
mov
outsb
adc
pop
inc
cmp
lds
add
loope
ret
call
inc
jmp
addl
add
loop
xchg
mov
lds
mov
mov
inc
scas
inc
inc
stc
inc
iret
cmpsl
add
inc
xchg
mov
jb
xchg
out
pop
cld
sub
dec
cmp
cmovs
sahf
mov
sub
cmp
sahf
fdiv
dec
cld
sbb
cmp
cmp
nop
fbstp
inc
mull
xchg
inc
cld
andb
ljmp
outsl
xchg
and
or
mov
xchg
lds
sub
inc
sbb
insl
xor
test
add
xor
mov
push
mov
xorb
mov
mov
gs
push
dec
mov
scas
imul
dec
cmp
cmp
dec
sbb
mov
add
imul
mov
cmp
or
out
cmp
cmp
movsl
dec
mov
dec
pop
fstpl
int
add
pop
data16
and
cmp
fcmovb
ja
cwtl
fcmovnb
popf
jp
out
stos
or
xchg
out
divb
sbb
xchg
mov
rolb
xchg
adc
jbe
and
push
cmpsb
jle
or
or
jbe
inc
ret
inc
push
shll
mov
jle
cmovbe
jge
mov
sti
or
cld
std
xchg
inc
jno
inc
lds
dec
jbe
icebp
pop
pop
xchg
pop
inc
add
fdivrp
mov
lds
std
mov
sbb
push
push
lcallw
cmp
fmuls
dec
dec
outsb
fsts
xchg
lods
popa
out
lcall
sub
xchg
or
insl
icebp
sbb
cmpsl
dec
mov
dec
mov
add
pop
cwtl
pop
lds
clc
mov
sbb
sbb
test
int
pop
movl
aam
loope
jnp
out
rcrl
dec
inc
cmpsl
popl
inc
inc
jge
sbb
mull
fstl
cmp
push
cmp
cmp
push
ja
mov
push
into
cs
imul
pop
sahf
lret
cmpb
mov
inc
pop
sbb
dec
insl
mov
inc
notl
fsubrp
dec
dec
dec
or
call
add
pop
jecxz
mov
jb
push
sbb
cmp
pop
das
cmp
or
sub
cwtl
or
jno
cmpsl
xchg
adc
sbb
data16
cmpsb
ja
not
sbb
fwait
mov
int
test
xlat
push
sti
test
dec
daa
rcrb
je
adc
lret
xchg
pushaw
cmp
fdivrp
addr16
jnp
sbb
adc
rolw
cld
addl
stos
test
imul
cmp
jo
cltd
test
or
pop
mov
pop
adc
outsl
jp
sub
sub
adc
rolb
jl
or
or
mov
loopne
mov
sub
popa
jmp
jnp
lcall
mov
loope
rorl
and
es
ret
adc
xor
dec
cmp
loop
push
dec
xor
mov
xor
dec
mov
or
jnp
add
daa
pop
mov
andb
sub
test
mov
pop
ljmp
mov
loop
xchg
mov
lock
or
cmp
jno
mov
int3
rolb
out
dec
sbb
mov
xor
pop
sbb
jae
mov
jae
dec
and
and
jg
stc
jg
pop
pop
popf
or
int
mov
cmp
cmp
in
repnz
jge
fisttps
jnp
mov
lahf
int3
xlat
mov
xchg
push
pop
cmp
mov
jbe
xchg
int
mov
sbb
testb
test
pop
aad
push
fldenv
fsubs
cmp
jmp
jmp
add
mov
sbb
jecxz
ja
xchg
in
std
gs
jle,pn
jbe
jne
xor
jmp
push
das
lds
int3
iret
or
das
dec
pop
movsl
pop
cmpsb
cwtl
adc
orl
xchg
or
inc
or
push
jne
push
in
mov
mov
sti
add
mov
fiaddl
rorb
and
pop
push
mov
pop
sti
pop
cmpsl
pop
lahf
ljmp
add
ret
push
dec
fdivl
cmp
cli
stc
jbe
jns
pop
jl
neg
xchg
movsl
jnp
or
push
xchg
pusha
inc
mov
dec
roll
clc
mov
cmpsb
imulb
jbe
jno
jo
rorb
add
add
clc
test
lock
insl
push
int
movsl
fildll
mulb
cmp
add
shrl
icebp
aas
xchg
add
outsb
inc
cmpl
sarb
push
sbb
or
aad
dec
fbld
pop
inc
lahf
mov
mov
dec
aam
mov
std
mov
or
and
fiaddl
cmp
mov
incl
inc
push
outsb
xor
cmp
and
sti
in
das
fisubl
out
test
adc
xor
adc
or
and
shll
dec
adc
jo
inc
xorl
cli
mov
lea
into
test
sbb
push
pop
mov
mov
pop
loopne
inc
push
movsl
pusha
mov
clc
inc
outsl
or
push
mov
inc
into
je
inc
add
cmp
cmp
int
mov
popa
or
or
add
add
arpl
sub
xor
jle
sub
or
cmp
sbb
or
mov
cli
mov
push
xlat
or
xlat
dec
add
dec
mov
scas
sub
inc
mov
fucomi
dec
dec
jne
dec
pop
and
pop
xchg
xchg
popf
outsl
insb
dec
dec
sub
insl
addb
inc
push
and
and
or
mov
pop
mov
sub
mov
pop
lods
sarl
jne
gs
pop
sbb
fistps
sub
xchg
add
lds
push
mov
lds
add
lds
sbb
push
jbe
xor
inc
cmp
cmpsl
movsl
push
jecxz
das
cmp
add
cmp
scas
xchg
iret
sarb
stos
mov
jne
dec
cwtl
sarl
repnz
popa
sub
or
ss
mov
arpl
mov
sbb
xor
xlat
mov
movsl
inc
loop
push
into
xor
adc
adc
mov
in
push
mov
inc
add
test
cmp
inc
aaa
jp
xchg
mov
clc
pop
sbb
es
insl
lret
mov
xchg
fildl
and
lret
fwait
xchg
and
add
pop
int3
inc
insl
ja
sub
pop
pop
icebp
xor
test
insl
mov
test
fcomps
mov
sub
jno
fs
jae
sub
cs
or
inc
or
mov
or
in
pop
add
pop
jnp
dec
adc
ljmp
sub
pop
adc
jns
pop
mov
lds
push
in
pop
adcl
cmp
fcomp
aas
ret
jp
and
aam
fbstp
ficoms
or
sbb
mov
aaa
mov
adc
push
jg
std
not
fs
cs
add
ret
add
cld
or
jge
lcall
sub
lret
testb
mov
cmp
push
stos
cld
in
in
in
addl
sbb
jl
test
add
ljmp
jp
cmp
addb
std
in
adc
outsl
aad
cmpsb
or
cmp
hlt
in
je
repnz
cld
decl
adc
dec
push
pop
mov
jge
mov
add
in
shlb
xchg
sub
rorb
pop
adcl
and
cld
push
add
sub
mov
addr16
mov
cmpsb
test
movsl
cmpl
jg
fnsave
mov
inc
sub
test
xlat
adc
mov
or
mov
add
imul
push
xchg
adc
lods
pop
ret
aad
aam
loopne
lret
sub
sub
xchg
icebp
repnz
sub
fldt
jmp
cmpsb
rorl
stos
test
pop
jbe
jl
push
xchg
push
mov
push
popf
ret
fcoml
push
lret
add
dec
fisubrl
and
ja
xchg
stos
cmp
pop
cmpsl
mov
out
mov
sbbb
mov
test
in
arpl
arpl
push
outsl
aam
out
pushf
into
xchg
test
aad
mov
pop
enter
incb
mov
xchg
push
xchg
clc
ret
pop
mov
scas
cmpsl
adc
push
out
jnp
mov
lret
fwait
scas
fwait
cmpsl
add
gs
std
fadds
out
lods
jno
fldt
add
lahf
cmpsb
jg
icebp
sahf
add
int
std
jl
jecxz
enter
das
shrl
arpl
lea
pop
in
add
and
mov
sbb
repnz
mov
sub
ret
add
fistpll
clc
into
idivb
xor
push
pop
les
mov
scas
jmp
push
mov
insb
add
mov
mov
popa
jno
cmpsb
in
dec
in
lret
shlb
jno
sub
fisttps
mov
testl
dec
cmp
pop
jno
cld
mov
dec
xchg
mov
or
mov
or
or
shll
add
jge
or
lahf
and
pusha
fidivrs
mov
fcoml
orl
rcll
scas
fisttps
test
or
out
mov
and
in
testl
pop
inc
and
sbb
lea
pop
push
cli
add
in
or
pop
in
icebp
arpl
xor
push
jo
cmp
jmp
fcmovnu
stos
mov
push
mov
dec
jae
divl
pop
hlt
push
std
in
andl
idiv
dec
sub
mov
sbb
lds
push
popf
movsb
sub
add
das
aad
sbb
cltd
das
test
mov
mov
and
imul
push
icebp
iret
gs
add
or
jns
jle
stos
arpl
mov
inc
adc
sub
dec
jns
sbb
cmc
mov
clc
mov
push
enter
outsl
fistpll
sarb
dec
pushf
dec
xor
lret
rclb
outsl
ficomps
pop
ss
leave
lahf
les
repz
add
push
or
cs
iret
push
jmp
xor
call
pop
outsl
rcr
dec
sub
lret
mov
adc
sti
jmp
pop
fnsave
lret
xchg
das
pop
mov
xor
call
sbb
dec
pop
lret
scas
outsl
shll
push
dec
mov
jns
jno
ret
into
inc
fiadds
pshufw
dec
mov
jb
cmp
mov
mov
dec
cmpsb
sbb
xor
sbb
xor
iret
mov
hlt
cld
in
mov
pusha
or
sbb
mov
inc
cmp
outsl
in
repnz
imul
xor
repz
cli
shl
push
cmpsb
sahf
ja
add
std
popa
mov
xor
fistps
or
cmc
std
testb
and
fiaddl
pop
fisubrs
mov
arpl
adc
sti
add
imul
stos
push
bound
cmpl
pushf
or
subb
push
add
add
test
aas
adc
or
mov
insb
inc
insb
insb
outsl
arpl
jnp
fisttps
popa
outsb
fs
gs
or
inc
jb
sbb
insb
inc
imul
arpl
push
mov
pop
push
gs
jne
pop
dec
xor
in
or
outsb
mov
push
imul
outsl
push
je
inc
jns
jns
je
mov
outsb
je
push
jg
xchg
inc
jae
mov
inc
cs
arpl
gs
and
inc
popa
insb
push
push
mov
popa
insl
adc
insl
insl
cmp
psubq
dec
outsb
outsw
push
dec
gs
or
jb
push
je
jne
pusha
xchg
mov
popa
imul
dec
bound
arpl
mov
ss
push
push
inc
imul
mov
jne
push
push
add
or
jge
test
push
add
into
sub
syscall
fcomps
dec
xor
adc
jns
mov
sub
jae
or
mov
sbb
xchg
mov
adc
push
jnp
inc
js
jo
outsl
outsb
inc
jp
popa
test
mov
mov
test
inc
gs
aas
inc
je
dec
inc
dec
popa
jo
jb
and
loopne
xlat
loop
clc
insb
xchg
mov
dec
or
jno
adc
nopl
cmp
in
xchg
je
ja
inc
mov
gs
outsl
int
sbb
test
or
dec
or
or
pop
bound
jns
dec
inc
outsl
xchg
in
icebp
or
fimuls
fwait
sbb
add
adc
sbb
dec
or
dec
cwtl
xchg
lret
jbe
push
insl
insl
xor
or
popa
inc
popa
xchg
sbb
sbb
sbb
das
icebp
or
push
jne
je
dec
push
je
daa
push
sub
aas
data16
sub
sub
inc
xor
fs
jae
push
shl
pop
cmp
jae
push
inc
inc
pusha
ss
inc
inc
pop
xor
nop
addr16
jo
dec
gs
push
es
jne
adc
cbtw
lds
adc
push
cvttps2pi
sub
inc
push
cmp
fstpt
and
add
push
popa
jbe
je
xchg
outsb
arpl
in
dec
dec
inc
sbb
int
mov
pop
fs
mov
ficoms
stos
adc
adc
nop
test
nop
inc
jb
push
pop
or
addr16
and
insb
imul
and
fwait
mov
jne
push
adc
adc
or
jecxz
cmp
push
fsubrs
sbb
or
xchg
jo
fnstenv
testl
mov
inc
dec
adc
cmp
fldlg2
loope
jp
sbb
fbstp
clc
xchg
gs
mov
aad
or
mov
ret
pop
mov
shlb
push
shrb
sub
add
stc
cmovno
shlb
xor
mov
dec
mov
outsb
adcb
insb
cs
orl
mov
lock
push
inc
fstpt
adc
push
and
outsl
mov
outsb
psubsb
dec
outsl
outsl
imul
repz
or
outsb
jns
insb
fcomps
dec
jae
pop
jae
lea
imul
fsubrp
mov
jae
ret
inc
xor
lret
outsb
and
pop
and
int
inc
arpl
or
fisttpl
mov
adcb
ja
jae
push
dec
jo
outsl
and
or
jbe
dec
popl
outsl
scas
adc
jne
stos
xchg
or
pusha
sub
insb
fldcw
out
xor
ffree
outsb
push
jo
inc
push
adc
dec
push
ret
cld
pop
jl
xchg
cmp
sbb
xchg
sub
inc
pusha
xchg
add
out
cli
dec
jbe
cmpsb
cmpsl
jo
mov
and
sub
sbb
jbe
xor
popa
ja
pop
pop
out
xor
pop
mov
xchg
push
sahf
and
xorb
mov
cmc
and
jne
xor
or
xor
out
push
sub
dec
sub
xchg
jae
dec
xor
mov
push
lcall
jae
mov
rorb
push
int3
adc
es
cmp
jo
cmp
jbe
fwait
and
lret
dec
call
dec
stos
insl
outsl
loope
xchg
sbb
outsl
js
leave
insb
and
add
inc
rcll
and
xchg
xor
or
dec
xor
pop
push
adc
push
or
or
int
data16
mov
hlt
jb
add
fistpl
fdivrs
sub
insb
mov
inc
mov
xchg
insl
cmpsl
or
cmp
xchg
adc
lret
fdivrs
mov
test
data16
push
xor
popa
outsb
and
out
or
pop
push
loope
imul
mov
or
xor
sarl
fdivrl
ja
push
dec
and
add
push
bound
mov
xchg
cmp
dec
sbb
pop
mov
fstpt
jmp
push
ja
inc
jb
data16
fnstenv
sbb
adc
inc
or
mov
ljmp
dec
cmp
add
imulb
pop
imul
cli
adc
mov
or
rcr
sbb
idivb
push
sbb
mov
icebp
aaa
adc
xor
sbb
sbb
hlt
and
lret
push
push
push
adc
mov
xor
sub
jne
andw
lods
mov
cmp
adc
cmc
push
popf
arpl
cmp
or
or
roll
inc
xor
ja
inc
xchg
in
push
data16
and
jg
push
inc
add
dec
add
add
out
inc
loopne
sidtl
add
scas
cmp
leave
sub
adc
add
add
cmovo
adc
add
cmp
add
add
add
mov
push
test
sub
xor
mov
add
xchg
add
testb
outsb
shlb
je,pn
pop
cmp
nop
mov
insb
add
pusha
fwait
js
nop
sbb
and
je
xchg
adc
and
shrl
je
inc
ja
in
out
add
add
or
rolb
push
pop
repz
movsb
rorb
lock
out
cltd
mov
inc
jmp
mov
rorb
jge
scas
add
negb
push
cwtl
pop
adc
add
add
add
add
add
add
add
add
add
add
inc
add
call
int
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
lea
mov
mov
repnz
jne
cmpb
jne
mov
shr
rol
xchg
sub
add
stos
jmp
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
