jb
add
dec
add
outsb
add
dec
add
add
insb
add
add
je
add
add
jb
popa
add
add
outsb
add
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
popa
add
add
outsb
add
add
je
imul
push
add
je
insb
add
add
dec
add
je
push
add
popa
add
imul
add
add
add
jne
je
je
outsl
add
inc
add
add
jb
outsb
add
je
add
popa
add
add
add
outsb
add
outsl
add
imul
outsl
add
add
add
dec
add
data16
push
add
js
je
add
add
inc
add
je
je
outsl
add
dec
add
add
je
add
inc
add
je
je
outsl
add
inc
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
dec
add
insb
add
add
je
add
dec
add
popa
add
je
imul
push
add
je
insb
add
push
add
js
je
add
inc
add
je
je
outsl
add
push
add
js
je
add
add
inc
add
popa
add
push
add
js
je
add
add
inc
add
je
je
outsl
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
inc
add
arpl
add
add
add
imul
add
je
push
add
js
je
add
dec
add
insb
add
add
je
add
inc
add
jo
push
add
jb
imul
add
popa
add
add
add
add
outsb
add
repz
xchg
and
pop
in
jno
movsl
les
add
add
add
add
add
add
rolb
mov
mov
pop
add
add
add
push
pop
add
add
add
add
add
add
add
add
add
add
or
add
mov
ds
add
or
add
add
mov
sbb
insl
add
lcall
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
xchg
add
add
add
add
mov
push
addb
add
add
mov
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
aas
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
cmp
add
add
add
add
add
jle
incb
nop
add
add
add
sub
lods
add
popf
add
add
add
add
sldt
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
mov
add
add
aam
push
add
add
add
add
push
add
add
add
add
cwtl
add
add
add
add
add
incb
jo
cmp
cmc
add
add
add
or
push
add
add
add
add
add
xchg
xchg
add
add
add
add
add
cmc
add
add
add
add
cld
add
add
add
add
add
add
add
add
jae
lret
add
add
add
add
add
add
add
add
mov
pusha
add
test
lock
add
add
mov
push
mov
in
add
add
add
add
add
add
mov
add
jno
mov
add
add
add
add
add
add
add
iret
add
sbb
add
add
add
add
add
filds
leave
add
sub
xchg
rolb
cmp
add
add
add
add
add
add
add
in
add
add
add
add
add
add
add
mov
sub
filds
je
mov
add
add
test
sbb
roll
add
add
xor
add
add
add
mov
int3
add
add
add
add
mov
push
mov
pop
add
add
mov
add
add
add
add
add
add
add
add
pop
add
adc
add
sbb
xchg
add
lods
add
add
add
add
addb
add
add
add
add
add
add
add
add
or
sbb
loope
xchg
pushf
leave
adc
repz
inc
add
daa
dec
mov
sbb
sub
faddl
inc
xlat
mov
pop
cmpl
mov
pop
sub
pop
sbb
dec
cmpb
psubd
mov
mov
aam
js
lock
jo
push
inc
cmpsl
push
adc
adcb
jmp
sbb
hlt
cmp
xor
das
dec
push
push
ret
int
fcomp
jb
negb
lret
jb
xor
es
and
popa
cmp
cltd
scas
xor
popf
xor
sbb
mov
inc
sbb
sbb
int
loop
insl
jge
lea
ret
xorl
or
int
mov
lea
test
pcmpeqd
push
loop
ja
add
rol
js
test
inc
popa
mov
mov
js
sub
jg
ja
pop
repnz
aad
stc
pop
sarb
or
or
aam
pop
sbbl
adc
imul
outsb
cmpsb
lcall
adc
jbe
mov
ss
and
clc
stos
enter
jb
inc
or
nop
and
int
add
cli
and
das
subb
imul
pop
stos
sbb
and
test
std
and
rcl
test
lock
inc
add
push
sti
pop
loop
pshufw
pop
loop
add
aas
mov
gs
adc
in
shl
shrl
adc
ja
clc
jnp
std
add
nop
les
cwtl
dec
icebp
dec
mov
bound
fwait
in
call
push
stos
addr16
pop
xchg
lret
mov
inc
add
outsl
dec
insl
xor
fdivrs
cltd
ss
in
add
jno
cmp
repnz
aad
stos
fcomip
or
mov
xchg
mov
flds
mov
bound
or
roll
mov
cli
mov
scas
and
dec
pop
into
add
pusha
sbb
cmc
adc
sub
fldt
stc
fnstsw
xorb
xor
mov
shlb
inc
xchg
push
std
sub
pop
mov
cmp
mov
out
xchg
mov
lret
adc
out
or
xchg
mov
mov
aaa
stos
xchg
addb
loop
pusha
orl
xchg
dec
gs
rcll
push
aam
imul
les
es
incb
add
xchg
sub
jnp
xor
in
fdivrs
imul
sarb
add
add
add
add
add
add
add
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
push
mov
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
push
call
mov
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
std
push
mov
xchg
test
bound
aaa
cmp
imul
pop
mov
mov
mov
xchg
cltd
out
divl
leave
xlat
lods
sub
or
sbb
jbe
inc
or
mov
and
rol
idivb
imul
dec
cmp
xor
ds
xlat
test
stc
int3
out
fimuls
jb
aad
add
sub
or
sti
pop
adc
pop
pop
cmpsl
and
test
roll
add
out
or
imul
push
fcmovbe
sub
push
mov
mov
iret
push
and
test
xchg
cwtl
dec
xor
mov
test
ret
xchg
das
xor
es
pop
imul
push
mov
push
jecxz
mov
aaa
mov
das
jp
sub
into
pop
sbb
cmp
lret
cmpsb
inc
imul
jp
mov
and
clc
notb
add
dec
push
frstor
mov
xchg
in
stc
adc
pop
ds
das
lcall
sbb
push
jg
outsl
addl
sarb
sbbl
mov
jne
jns
or
adc
cmpsl
in
mov
loop
xchg
mov
stos
cmpsl
xchg
mov
dec
aaa
outsl
inc
insb
bound
cmp
into
incl
cli
lahf
idiv
leave
xlat
fldenv
sub
cmp
or
sbb
ja
inc
dec
push
pop
cmpsl
test
xchg
cltd
out
idiv
leave
xlat
fldenv
sub
cmp
or
sbb
ja
inc
dec
push
pop
cmpsl
test
pushl
add
fisubl
pop
push
sub
xchg
jns
adc
push
sbb
cmp
inc
dec
mov
lcall
daa
fdivrl
fisubl
daa
mov
ss
jo
adc
cmpsl
insl
xchg
sbb
cmc
jg
mov
or
inc
and
lahf
ret
pushf
mov
jmp
dec
ss
ss
or
xchg
xchg
nop
inc
jo
jp
iret
cltd
daa
arpl
dec
dec
add
leave
sahf
data16
inc
xchg
cmp
dec
ret
loop
adc
sahf
faddl
cs
popa
or
sbb
jl
pop
pop
bound
fld
psrld
inc
xchg
ljmp
xlat
jns
clc
clc
mov
jb
out
fstl
psubusb
ljmp
fstps
and
inc
aam
imul
pop
inc
in
and
cmpl
push
or
mov
jl
cmpsb
mov
push
pop
xchg
xchg
push
cs
push
xchg
xchg
pop
cltd
jp
call
add
add
xchg
iret
mov
subl
cmpsb
mov
dec
repnz
pushl
add
jle
hlt
je
or
pop
movsl
xchg
adc
sbb
sahf
xor
or
fcomp
dec
mov
xorl
pop
aam
pop
mov
aad
cltd
inc
inc
stc
mov
mov
ljmp
or
adc
roll
add
dec
in
cmp
movswl
cmp
cmp
test
xlat
out
push
cmp
push
in
pop
popf
mov
test
xchg
jg
inc
mov
call
pop
mov
mov
rcr
test
mov
lds
or
jle
mov
sbb
pop
outsl
out
push
loopne
mov
and
pop
std
push
adc
in
orb
push
ficoms
mov
mov
inc
mov
sbb
fsubrs
jl
pop
sbb
sbb
out
adc
insb
test
inc
pop
add
adc
pop
jnp
push
pop
movsb
stos
pop
pop
mov
jo
stos
push
or
lods
hlt
mov
mov
xor
pop
mov
dec
je
popf
or
lcall
jge
adc
decl
xchg
and
test
stos
xor
dec
fsubrs
pop
push
lds
mov
sub
sti
insb
sti
sub
inc
and
push
mov
test
fisttps
adc
outsl
cli
out
cmp
jge
xlat
loop
add
sti
pop
sbb
jno
scas
je
sbb
inc
inc
insb
or
int
rcll
rclb
sti
pop
add
test
adc
and
mov
test
sbb
ret
testb
movsb
pop
inc
popa
mov
scas
adc
push
rolb
pop
dec
shll
sub
push
cli
iret
inc
int
jnp
or
push
addr16
push
loope
in
or
adc
and
mov
addr16
or
loopne
jmp
in
lret
sub
stos
push
mov
data16
inc
outsb
in
cltd
imul
mov
push
gs
xchg
xchg
inc
mov
jl
mov
lods
lods
push
xor
lcall
push
out
jae
sahf
push
push
stos
xor
and
and
pop
ret
imul
adc
dec
pop
repz
test
jl
push
stos
stos
test
add
xchg
jmp
dec
aas
es
or
fldenv
pop
aam
rcl
sub
xchg
dec
std
or
or
pop
push
jg
add
repz
push
in
popa
loope
out
or
gs
scas
inc
cmp
mov
and
pop
jp
fisttps
push
lock
jnp
adc
daa
mov
xlat
ret
ret
sub
mov
add
dec
mov
xchg
call
je
mov
xor
xchg
push
or
incb
stc
jne
push
dec
mov
andb
idivb
scas
sub
inc
pop
or
mov
jo
pop
rorb
popa
inc
xchg
and
lret
and
shl
mov
xor
mov
sbb
dec
xor
ficoml
jns
mov
dec
pop
test
mov
cmp
or
sbb
ficomps
sbb
shl
inc
mov
arpl
or
jbe
inc
adc
call
xor
jo
dec
mov
push
jb
dec
xlat
jmp
fadds
out
daa
shrl
out
call
cwtl
mov
pop
xor
adc
adc
sub
add
sahf
and
andw
mov
sbb
sahf
or
jmp
jle
or
pop
mov
daa
pop
xchg
add
and
jp
divl
push
dec
push
jge
test
bound
adc
adc
or
cli
jbe
es
push
inc
mov
orl
mov
dec
jb
xor
cmp
xor
or
dec
xchg
loop
sub
addb
loop
cmpsb
dec
pusha
and
pop
lock
cmp
loope
xchg
add
test
jnp
cmp
sub
push
mov
fmuls
lods
adc
out
cmp
and
inc
hlt
inc
sbb
scas
test
jnp
arpl
ljmp
mov
ret
fmul
fmul
lods
aas
fdivrl
xor
int3
inc
fld
fsubrl
test
sub
fistpll
andb
shll
outsb
cwtl
ja
shll
cmp
mulb
dec
xor
mov
pop
ja
popa
ret
add
cwtl
shlb
ja
cmc
gs
dec
xchg
inc
fcmovbe
mov
jl
mov
mov
add
data16
lods
push
mov
outsl
push
mov
inc
jo
addr16
sbb
test
mov
pop
mov
jbe
sbb
push
movsl
cmp
jns,pn
xchg
add
es
xor
in
push
stos
js
xlat
cmp
mov
inc
pop
mov
pop
rcrl
xchg
dec
inc
add
jae
jle
mov
imul
out
jge
push
ljmp
aam
scas
stos
lret
flds
adc
mov
mov
push
ficompl
pop
mov
mov
cmovb
jb
mov
bound
dec
std
fs
cmp
xchg
pop
fadd
cmp
sub
inc
nop
dec
ret
xor
dec
push
out
add
movsl
or
mov
mov
sub
dec
iret
fwait
sub
out
in
and
jp
out
test
mov
lea
push
loop
push
jmp
dec
jae
and
xchg
pusha
dec
sti
jg
imul
mov
push
aam
loope
inc
iret
sti
data16
lahf
bsr
fsub
xlat
pop
cltd
mov
std
jge
push
sub
pushf
sbb
and
sbb
xor
iret
popa
int
mov
aaa
mov
mov
xchg
cld
insb
add
shl
sub
adc
pop
inc
push
outsb
loopne
sub
cmp
mov
xchg
ret
xor
ljmp
dec
sbb
mov
xor
pop
mov
jno
jno
adc
insb
push
icebp
es
inc
xchg
and
mov
in
or
jb
xchg
push
rorb
aam
or
pop
in
pop
jge
jle
pop
or
cltd
or
xorb
pop
dec
cmp
frstor
xchg
sahf
cmp
lds
lock
jge
mov
inc
mov
testb
mov
push
or
jle
ja
fs
fldl
or
lds
add
adc
sub
pop
xor
inc
push
cmp
or
std
jnp
aad
mov
repz
nop
dec
popa
mov
loope
xchg
mov
sarb
or
out
pop
roll
jmp
adc
sbb
jl
ja
insb
xchg
push
repz
shll
mov
clc
push
out
jb
loop
test
lret
nop
scas
xchg
lock
cmp
or
adc
lahf
jns
les
leave
lds
lods
sti
test
mov
and
add
icebp
lods
fmuls
loop
aas
lahf
fiadds
mov
add
mov
mov
pop
xchg
mov
jo
and
fdivl
adc
fs
add
cwtl
jbe
mov
outsl
xchg
into
inc
jae
lret
adc
movsb
add
ret
lcall
fnstcw
ror
push
sbb
jg
fmull
add
inc
pushf
lret
fsubr
sahf
add
fstp
mov
xor
jp
imul
andl
nop
lret
push
sub
faddl
inc
std
sub
xchg
repnz
das
ss
or
stc
call
rorb
sbb
cs
adc
clc
sub
sbb
sbb
mov
adc
scas
mov
inc
mov
iret
and
mov
aas
pushf
cli
mov
mov
into
push
xchg
inc
mov
test
lea
or
pop
test
aaa
cmp
inc
shl
or
scas
xchg
enter
pop
xchg
mov
dec
mov
xchg
sub
xchg
scas
notl
stos
xchg
xchg
out
push
sub
and
sub
adc
mov
std
ss
add
jge
lcall
cltd
add
mov
jno
pop
cmp
lahf
sbb
out
mov
mov
inc
test
pushf
mov
inc
xchg
insb
rol
mov
dec
das
adc
xor
loopne
les
inc
pop
testl
pop
lret
lret
repnz
jl
cmp
int
js
or
mov
je
nop
aam
cmp
adc
dec
push
cmc
fistpl
mov
leave
in
adc
gs
cmpsl
inc
push
xlat
mov
aam
mov
inc
xchg
repz
cwtl
jg
clc
gs
repz
cmp
or
lods
stos
out
repz
xchg
popf
loopne
iret
inc
das
adc
icebp
add
adc
push
test
into
sarb
or
mov
xor
cmp
xchg
adc
cs
lret
xor
or
sub
fsubrl
mov
add
scas
jbe
test
dec
and
addb
mul
mov
dec
mov
icebp
sub
setp
sbb
popa
mov
dec
inc
mov
xchg
xor
shlb
test
inc
sbbl
div
xlat
jge
and
pop
xchg
loopne
push
addl
in
inc
ss
xchg
inc
ljmp
cld
mov
cltd
fwait
cltd
and
xchg
mov
fcmovb
or
fbld
sti
fs
or
aad
mov
mov
scas
and
push
mov
sbb
shll
and
out
fsubrl
sbb
mov
push
mov
cwtl
rcrl
ljmp
enter
xchg
jbe
hlt
mov
cmp
xchg
fidivrs
or
dec
das
daa
pop
push
dec
int
stc
imull
into
sub
fs
shlb
movsb
jg
xchg
cmp
push
repnz
fsts
addl
aam
xor
jge
xor
decb
mov
push
jl
push
mov
mov
addl
addb
mov
sbb
movsl
mov
mov
repnz
pop
rclb
das
test
cwtl
xchg
push
aad
adc
and
jp
insl
xor
dec
mov
cmpsl
mov
les
fists
xchg
int
repnz
addr16
xchg
iret
mov
cmpb
sbb
cmp
mov
and
adc
loope
inc
fisttps
daa
sbb
cs
shlb
std
cmpsl
dec
jne
dec
shll
cmpsb
sub
dec
js
mov
sbb
int
mov
push
sbb
pop
pop
pop
xchg
mov
movsb
rep
lock
out
imul
add
dec
xchg
lcall
popa
inc
cmp
stos
xlat
inc
stos
mov
and
mov
imul
pop
lock
xor
movsl
lods
pop
lcall
or
stos
outsl
addr16
mov
add
adc
and
jae
sti
inc
leave
or
ficoml
cmc
fprem
les
stc
ss
pop
mov
dec
int
ljmp
adc
dec
sbb
push
arpl
movsl
dec
ja
rcll
subb
xor
int
or
shll
inc
mov
push
ss
and
lock
push
push
sub
sub
popf
stos
mov
jl
mov
notl
xlat
mov
sahf
fldcw
mov
xor
jl
nop
sbb
xor
xchg
pop
lods
sub
dec
cmp
mov
push
pop
cmpsl
push
push
ja
mov
pop
xchg
mov
rcrb
cmp
lcall
push
adc
cmp
mov
and
mov
push
mov
adc
pushl
pop
sub
es
aas
bound
orb
enter
mov
push
sbb
int3
arpl
mov
test
repnz
sub
or
push
arpl
sbb
sbb
insl
std
inc
push
outsl
sbb
inc
movsb
aam
movsb
mov
adc
dec
mov
inc
push
loop
push
loope
popa
xor
sub
push
and
xchg
mov
mov
testb
pop
xchg
in
in
dec
cmp
popl
int3
adc
scas
push
mov
gs
add
andb
cmp
xchg
pusha
imulb
xchg
lahf
sub
adc
dec
out
pop
ret
rclb
ret
addr16
arpl
push
lds
sub
or
int3
inc
pushf
cmp
mov
inc
adc
inc
xor
push
paddusw
cld
mov
loop
cmp
dec
addr16
mov
fdivrs
ljmp
mov
cmpsl
movsb
cmp
movsl
shr
cmp
nop
psubq
cli
cld
lods
call
or
dec
rcrl
mov
cmpsl
dec
inc
pop
inc
fcoms
jecxz
cmpsl
dec
mov
xor
inc
les
cmp
js
test
pop
lock
popa
imul
sbb
xchg
jmp
mov
scas
jb
jg
test
mov
sub
adc
or
mov
mov
dec
outsb
stos
pop
lcall
leave
loop
sbb
fdiv
ret
pop
inc
add
scas
cmp
fsubs
adc
lcall
sti
push
lcall
sbb
xchg
test
inc
in
add
pop
leave
lahf
add
xchg
pxor
in
mov
lahf
inc
ret
mov
aad
pop
test
dec
inc
inc
test
enter
pop
lea
pusha
fnstsw
mov
pop
lret
xor
sbb
movsb
popl
repz
or
lods
and
xor
mov
mov
addr16
hlt
adc
add
push
popf
jbe
pop
out
fistl
sub
imul
adc
push
das
lods
paddq
insb
or
ret
in
xchg
add
add
jmp
cmp
xor
fstps
and
sarl
or
arpl
hlt
jp
pop
stos
mov
push
xchg
movsl
int
jno
fnstenv
out
jle
mov
decb
out
push
push
xor
jge
pop
push
shrl
in
and
cmpsl
xor
ret
std
jns
jo
loop
fildll
aaa
popf
dec
fcoml
ja
xchg
mov
test
push
mov
xchg
xchg
jbe
arpl
mov
xor
push
ror
xor
inc
mov
popf
xchg
addr16
aam
mov
std
rcrb
loope
fs
fcomps
adcb
lret
loope
loop
ret
mov
rolb
call
jg
outsb
jl
bnd
jl
pop
sti
jae
sbb
lea
jae
mov
inc
data16
enter
mov
inc
xchg
mov
adc
jle
xor
mov
imulb
xor
test
frstor
adc
dec
in
sarl
pop
inc
mov
and
or
sbb
jae
adc
xchg
jbe
adc
rorl
cld
inc
mov
adc
mov
out
es
fistl
aas
icebp
lea
into
dec
in
pop
mov
loop
mov
mov
pop
pop
cli
sbb
xchg
leave
fucomi
cltd
loop
dec
mov
or
cmpl
sub
cs
enter
insb
sub
mul
add
cld
xor
test
rorl
rcrl
ds
in
mov
fidivrs
mov
and
movsl
add
repz
ja
pusha
test
push
mov
ds
xchg
jb
jecxz
punpckldq
loope
cmp
inc
fstps
pop
mov
sti
into
dec
sub
btr
or
inc
xor
dec
ret
aas
aaa
adc
or
inc
push
bound
pop
or
push
push
pop
mov
inc
lea
jne
jns
sbb
inc
and
mov
sub
pop
push
mov
cmp
in
mov
hlt
mov
jmp
or
sub
outsl
jne
xor
gs
ret
notb
mov
pop
xor
mov
jbe
inc
lret
mov
jae
test
and
jnp
and
addb
mov
mov
mov
xlat
or
xchg
clc
mov
loope
popf
mov
push
hlt
xor
dec
cld
shrb
fiadds
lods
std
clc
fcmovnbe
leave
setle
sub
lcall
cmpl
pop
mov
xchg
inc
sub
pop
js
aaa
mul
sub
sbb
jbe
fsubs
dec
and
testb
loope
pop
inc
rcrb
aad
stos
inc
clc
daa
push
jae
adc
mov
cwtl
out
rcr
xchg
mov
arpl
inc
sbb
xor
js
push
sbb
sbb
lret
inc
inc
jae
xor
testl
outsl
out
adc
idiv
push
xchg
iret
popf
andl
or
ficoms
xor
mov
mov
iret
cmp
movsb
jo
stos
imul
dec
arpl
stos
xchg
push
int
mov
int
push
adc
or
and
mov
inc
lods
fs
lock
push
fistpll
repnz
out
pop
scas
mov
xchg
push
mov
mov
lock
cld
lods
mov
jb
outsl
inc
fmul
inc
inc
lea
inc
addr16
xor
pushf
repz
pusha
and
xor
adc
push
sahf
inc
mov
out
fildll
jecxz
cmc
sub
stc
push
pop
fistpl
or
or
pushf
jnp
push
add
jmp
xchg
pusha
std
push
xchg
sub
popf
out
mov
popf
cltd
inc
fisttpl
mull
push
xor
mov
pop
es
rcrb
clc
mov
pop
dec
mov
das
sub
mov
fucomp
lahf
gs
dec
pop
mov
add
int
xor
mov
inc
loope
cmpsl
or
sbb
rorb
repnz
inc
fstl
inc
adc
insl
dec
or
dec
popf
mov
iret
mov
adc
in
dec
xor
test
mov
test
loope
scas
xlat
jg
imul
imul
mov
loope
insl
arpl
je
pusha
sub
in
arpl
mov
ret
loope
jg
xor
dec
sub
dec
int
dec
hlt
push
jne
push
or
dec
pop
mov
into
cli
cmc
mov
pop
push
ljmp
or
fcomps
fdivl
add
sbb
jp
nop
mov
mov
push
or
ret
orb
scas
fdivrs
pop
adc
sub
stc
dec
clc
xor
xchg
test
cmpsl
mov
imul
pop
mov
fisubl
sarl
xchg
or
dec
cmp
shll
lahf
hlt
cmp
ds
jg
sub
shlb
lret
movsl
add
fidivs
push
mov
lea
xor
jo
inc
lret
lds
test
sbb
addr16
push
push
xchg
fisttps
out
inc
adc
mov
jae
xchg
enter
and
dec
pop
stos
test
push
rolb
mov
aam
inc
cmpsb
ret
mov
cmp
xor
push
repnz
xor
cmp
in
inc
xchg
mov
jb
and
jo
and
pop
test
cmp
cmp
mov
nop
fstpt
orb
out
xchg
ljmp
mov
out
idiv
leave
xlat
fldenv
sub
cmp
or
sbb
ja
inc
dec
push
pop
cmpsl
test
xchg
cltd
out
idiv
leave
xlat
fldenv
sub
cmp
or
sbb
ja
inc
dec
push
pop
cmpsl
test
xchg
cltd
out
notl
leave
xlat
fldenv
icebp
aaa
cmp
or
sbb
jae
inc
imul
mov
xchg
cwtl
out
idiv
inc
dec
push
enter
pop
outsb
adc
incl
and
jno
popa
inc
add
bound
ljmp
loope
xchg
test
mov
mov
push
push
popa
adc
inc
xor
cmpsb
shll
loope
xchg
testb
push
les
jno
popa
js
push
add
push
and
out
xchg
popf
out
xor
in
aam
mov
push
adc
jbe
pushf
xor
loope
test
xchg
negb
cmp
push
xchg
sahf
dec
jmp
fldt
push
insb
ret
icebp
push
sbb
or
mov
pop
fadds
jae
add
dec
ss
xchg
hlt
xchg
and
xchg
mov
push
dec
ljmp
jo
jne
adc
mov
loop
aam
punpckhbw
sbb
not
dec
sbb
cmp
lcall
ja
xchg
xor
shlb
mov
icebp
stos
mov
cltd
ficompl
movsb
xchg
cs
pmaddwd
imul
movsb
aad
jge
pusha
inc
push
jno
popa
adcb
add
lock
sub
lock
cmpsb
loope
xchg
cld
xor
cmp
xchg
jb
outsb
daa
or
inc
xor
cmpsb
mov
repz
xchg
cld
cwtl
clc
scas
xor
or
pcmpeqb
das
mov
add
rcll
lahf
cltd
out
scas
les
xor
xor
xor
cmpsb
shll
loope
xchg
testb
push
ss
push
jno
popa
adc
inc
xor
cmpsb
shll
loope
xchg
testb
push
nop
push
les
sbb
iret
test
loopne
adc
lods
aas
aas
lods
push
dec
call
clc
sub
gs
and
pop
popw
imul
mov
mov
pop
inc
aaa
ret
scas
inc
jbe
nop
lret
jbe
adc
mov
fisttpl
arpl
cmp
ficoml
movsl
jae
aam
pop
ret
push
and
je
and
lcall
pop
fwait
shll
ja
xchg
push
push
pop
adc
jo
dec
xchg
movsl
xchg
or
push
fiaddl
sti
add
add
fmulp
mov
push
cmp
in
into
out
stos
push
rcrl
mov
inc
into
or
popf
js
cmp
sub
iret
sbb
xor
mov
mov
sub
xor
inc
mov
push
adc
outsl
push
mov
int3
xor
or
das
sub
out
jne
cmp
pop
inc
fdivrp
fimuls
mov
cmpsl
push
int
adc
int
push
insb
jne
cmp
and
inc
adc
xchg
repz
enter
sbb
mov
ret
xor
sbb
rcr
and
mov
pop
xchg
mov
out
stc
pop
cmc
aaa
push
xor
jne
mov
cmp
repz
cmp
ja
into
addl
ss
sbb
cmp
cmp
clc
mov
ds
cld
repnz
mov
or
rcr
adc
push
loope
and
jae
push
loop
adc
clc
mov
imul
pop
mov
jnp
push
inc
sbb
pop
sub
xor
in
xchg
inc
pop
out
sbb
inc
dec
loop
add
test
shr
pop
mov
add
ljmp
and
adc
incb
lds
stos
or
dec
loop
sub
xor
adc
cs
jmp
jecxz
mov
decb
xchg
pop
leave
inc
mov
les
mov
and
xor
insl
sahf
inc
rcll
sbb
cs
lahf
adc
cmp
cmp
mov
pushf
add
lret
adc
scas
sti
in
cmp
popa
cmp
mov
sti
mov
stos
mov
jge
idivb
pop
jnp
xorl
mov
cmpsl
mov
clc
clc
icebp
mov
out
xchg
mov
mov
push
pop
jno
and
xchg
or
and
out
test
pop
push
int
ret
xchg
push
das
mov
cmp
lea
idivb
pusha
ja
bound
adc
cmp
add
push
xchg
adc
jae
jnp
cli
cmp
push
sub
jp
jns
arpl
enter
mov
sub
xchg
mov
pop
lods
sub
mov
push
push
dec
jno
xchg
cmp
push
cmp
adc
cmp
push
jbe
mov
xchg
cmp
jmp
dec
loop
cmp
cmp
sub
and
in
ja
push
push
cmp
jnp
mov
addl
scas
arpl
push
imul
rcll
mulb
dec
mov
xor
mov
or
test
lret
push
mov
and
leave
notl
xchg
sbb
pop
mov
loope
addl
sarb
jp
movl
and
dec
mov
jae
or
scas
mov
mov
negb
cmpsl
adc
dec
xlat
pusha
adc
rol
es
sub
jno
aam
aaa
fwait
shl
dec
outsl
lahf
xor
dec
out
add
pusha
es
bound
movsb
jge
sub
pop
push
push
push
js
cs
nop
sub
push
add
dec
ds
and
test
ja
pop
cmc
ret
popa
pop
icebp
jl
xchg
xchg
xchg
fstpl
and
xchg
cmc
incl
out
push
xchg
lea
test
insl
pop
nop
xor
out
rcrb
iret
pushf
out
pop
clc
mov
inc
or
xor
test
sub
or
cmp
aaa
test
outsl
jecxz
push
cmc
push
push
push
pop
js
outsb
jl
loopne
fsts
add
cs
popf
inc
mov
cld
es
push
lock
test
test
das
enter
inc
mov
mov
mov
jbe
and
dec
imul
imul
pop
test
jo
jno
bound
out
jo
mov
xor
leave
dec
xor
fimull
push
leave
sub
mov
pop
xchg
movsl
push
mov
loopne
scas
outsl
out
mov
imul
pop
pop
xor
andl
add
rorl
mov
cmc
fimuls
in
jo
rcrl
xchg
adc
cli
jb
arpl
ja
jae
loop
mov
dec
negb
pop
pusha
bound
cmpl
out
jge
imul
cmpsl
push
or
xor
pop
icebp
lds
mov
pushf
mov
sub
pop
loop
fwait
pop
sbb
ret
into
mov
fsubs
mov
div
and
cmpsl
adc
dec
and
dec
test
mov
push
scas
xchg
repnz
aam
aaa
jp
test
rorl
pop
int
cmp
repnz
mov
or
leave
pop
nop
push
insb
cli
mov
jno
cmp
and
cmp
or
cmp
in
fwait
mov
faddp
faddl
jg
xchg
push
xor
ds
or
aas
adc
pusha
jns
movsb
push
inc
mov
pop
mov
adc
loope
mov
ds
pop
outsl
dec
hlt
inc
ljmp
xorl
fldl
mov
aad
cld
fwait
addb
fmull
jmp
xor
aad
pop
jae
in
add
xchg
mov
mov
or
sar
cmp
aam
add
movb
pop
add
adc
stos
jns
popf
add
mov
pop
bnd
shl
push
xor
cmp
fstl
adc
adc
shrb
xor
jae
das
mov
xlat
jmp
jns
icebp
cmp
shrl
mov
sahf
daa
scas
leave
pushf
les
roll
addr16
shlb
call
adc
lock
xor
xor
imul
mov
cmp
addb
xchg
and
mov
xchg
loopne
adcb
mov
shrl
int3
lahf
pop
scas
imul
and
inc
popf
mov
mov
lcall
pushf
add
ss
mov
mov
gs
jne
roll
inc
xchg
jae
dec
xor
jae
aam
into
inc
test
cli
pop
inc
sahf
push
adc
or
inc
pop
scas
inc
cmpsl
out
loop
and
cmc
outsl
popa
mov
lods
mov
test
mov
lret
and
pop
sbb
mov
outsb
testl
adc
mov
and
out
xor
dec
int
push
loope
jne
imul
sub
push
mov
adcb
jecxz
arpl
pop
jmp
lea
je
stos
loopne
pop
xor
outsl
push
adc
test
cmp
inc
icebp
and
push
in
inc
mov
repz
cli
aaa
mov
xchg
fcomip
or
lock
add
idivb
sahf
cmp
mov
enter
lock
jbe
dec
arpl
mov
xchg
pop
frstor
loop
cltd
imul
insl
mov
and
or
enter
paddw
scas
ret
xchg
mov
lret
pushf
lret
or
dec
dec
xor
enter
cmc
cli
test
dec
ljmp
popf
push
test
xchg
clc
inc
xchg
lods
jmp
jae
icebp
jg
sbb
adc
aam
mov
sub
cwtl
cli
sbb
push
xor
outsl
xor
and
in
add
mov
jg
nop
sub
bound
mov
das
dec
movsl
jp
push
inc
movl
add
inc
popf
bound
ss
gs
mov
fsubrl
lret
sbb
cmp
mov
add
dec
push
addr16
loope
push
pusha
test
adc
xchg
mov
loop
in
ficoml
sbb
xchg
mov
jmp
not
arpl
jns
pushf
je
push
and
imul
inc
jmp
test
out
shlb
cld
mov
jne
lcall
stos
pushf
xor
insb
and
mov
out
mov
rolb
shlb
jne
rcrb
call
dec
and
sahf
cmp
xor
mov
outsb
pop
and
repz
leave
add
fnstenv
or
add
cs
or
in
cltd
js
jmp
mov
loopne
sbb
stos
sysexit
adc
push
cltd
mov
fsubrs
sub
ds
nop
push
dec
ljmp
lock
push
mov
mov
sti
jp
enter
xchg
jnp
shlb
jmp
mov
xor
out
icebp
mov
inc
mov
in
pop
xchg
and
sbb
insl
shlb
faddl
cli
xchg
cmpsl
mov
stos
mov
jge
rcr
or
scas
hlt
in
add
adc
jecxz
pop
fisttpll
push
xorb
pushf
cli
loopne
in
lods
fdivs
mov
pusha
nop
pop
lds
lret
out
jne
and
sub
js
leave
inc
xor
dec
mov
or
std
arpl
nop
adc
movsl
jge
mov
add
jge
daa
and
cmp
sub
push
jo
icebp
mov
push
and
cmp
mov
lods
fs
aaa
loop
leave
mov
and
jnp
xor
je
jle
sub
lea
test
mov
imul
sbb
lods
jns
sbb
add
inc
ljmp
push
pop
leave
ja
mov
adc
sahf
adc
mov
scas
push
fcmovu
pop
in
sbb
test
scas
rcrl
out
mov
jg
adc
xor
test
fwait
pop
dec
jle
aad
inc
in
dec
pop
pop
in
adc
rcll
fsubrs
in
mov
xorl
xchg
xor
mov
bound
xor
dec
mov
insb
sbb
movsb
xchg
mov
pusha
ds
aaa
je
ss
cli
or
adc
aam
jne
xor
in
hlt
mov
pop
cs
das
push
shll
push
lock
cltd
lods
aam
jns
gs
das
push
dec
xchg
popa
aam
mov
mov
push
dec
rcrl
testl
mov
lds
lret
test
test
and
push
jl
jecxz
cmc
loop
aas
and
xchg
and
cltd
dec
jmp
mov
aaa
and
mov
inc
cmc
xor
mov
lcall
add
xor
xchg
pop
outsl
dec
fdivl
jnp
ljmp
pop
push
mov
add
mov
inc
xor
frstor
add
shrb
aas
in
sbb
into
cld
icebp
repz
pop
adc
fisttpl
push
out
pop
dec
test
jmp
pop
add
xchg
sbb
push
shll
sbb
push
dec
xor
cli
loope
xor
scas
push
inc
test
xchg
dec
cmp
into
add
adc
fimuls
outsl
testl
lret
adc
lods
in
cwtl
xchg
stos
insb
ds
in
pusha
cld
inc
fs
ljmp
ret
inc
sbb
scas
ja
cmp
xlat
rcrb
orb
notl
sbb
mov
add
sub
mov
dec
das
scas
cmpsb
push
cmpsl
cld
or
push
adc
imul
xchg
xchg
pushf
mov
fldcw
into
add
pop
insl
call
dec
adc
mov
loop
sbb
xchg
cmpsl
fs
push
xorb
pop
sbb
xor
mov
testb
inc
lahf
inc
adc
mov
fidivl
nop
mov
cld
pop
test
nop
inc
test
data16
dec
jl
imul
cmp
inc
stc
cmpsb
xor
xchg
int
lahf
dec
add
and
movsl
ljmp
mov
idivl
mov
cs
push
ja
dec
xor
push
loopne
outsl
imul
inc
shlb
or
sbb
lahf
add
out
mov
call
cmp
and
jecxz
jne
ss
or
push
outsl
sti
cmp
and
dec
pop
or
cmpsl
scas
mov
jge
jl
mov
popf
aas
js
mov
sbb
push
es
testl
aaa
xor
pushf
lea
fcmovbe
pop
repz
outsl
shl
cmp
inc
cmp
cmp
xor
adc
dec
stos
sub
mov
int
jnp
sub
mov
pop
ljmp
aad
addl
pop
jne
inc
je
movsb
sub
repz
out
push
lds
popa
fwait
roll
lcall
push
ret
push
inc
popf
xor
cmpsb
push
ror
jnp
dec
mov
mov
xor
push
in
add
pop
dec
cmp
cmc
and
dec
and
xchg
mov
push
aas
mov
cmp
add
inc
fcompl
dec
or
push
test
add
mov
xchg
mov
xchg
testb
test
xchg
imul
mov
repz
cmp
shl
sbb
fwait
mov
inc
mov
out
repnz
adc
inc
andl
adc
sbb
sbbb
or
xchg
lds
test
inc
pop
mov
xchg
adc
cmpsb
inc
dec
jp
dec
movsl
jle
test
jno
in
pop
test
lea
mov
out
or
cmp
dec
leave
bound
mov
xor
incb
mov
mov
lret
mov
outsb
cld
mov
pushf
add
ret
rclb
cwtl
outsl
dec
mov
shlb
mov
aad
fs
push
add
lahf
pop
hlt
insb
adc
movsl
fidivrl
inc
or
test
fisubrl
sub
xchg
js
inc
dec
mov
ss
add
out
sbb
dec
add
les
mov
mov
aam
or
test
dec
aas
xchg
rorl
movb
push
inc
pop
or
push
jbe
pop
jbe
sbb
test
gs
or
sbb
push
add
enter
roll
adc
popa
jmp
mov
movsl
jno
imul
ja
mov
js
add
cmp
rolb
or
sub
int3
or
and
cmpsl
std
dec
daa
std
xchg
int
inc
dec
cmp
push
mov
stos
sub
jge
jge
add
es
lds
mov
xchg
pop
jae
pop
push
xchg
push
stos
dec
or
dec
lcall
mov
stc
jecxz
push
cmp
fistpll
push
jnp
idivl
push
cmp
sti
mov
jecxz
jg
mov
ret
xchg
sub
fld
sarb
adc
out
lcall
fwait
mov
adc
and
rcr
mov
mov
hlt
dec
cmc
arpl
mov
xor
clc
push
mov
mov
jb
push
dec
in
jecxz
add
movsb
cltd
inc
mov
mov
popa
pop
imul
jge
cs
adc
fstpt
or
lret
sub
shll
pop
fsubrp
or
fsubr
pop
iret
inc
sarl
push
cmp
push
xor
lcall
adc
push
or
shll
aam
jmp
mov
pop
pop
mov
daa
mov
adc
cmpsb
cmpsb
fsts
jo
mov
loopne
cmpsl
inc
jp
add
fwait
cmp
inc
cmp
leave
xor
and
and
jno
je
rorb
push
mov
cmp
inc
ja
test
leave
xorb
and
xchg
mov
imul
insl
lds
adc
loop
mov
and
clc
cmp
inc
mov
fs
nop
sahf
or
mull
xor
adcb
mov
mov
mov
inc
jl
mov
adc
lods
cmp
push
test
xchg
int
bound
aaa
lods
fnstsw
stc
sbb
sub
cli
jb
lds
adc
inc
adc
push
fsubr
gs
xchg
jns
hlt
adc
sbb
cmpsl
data16
mov
addl
fisttpll
scas
dec
in
faddl
fidivl
ss
fldl
les
loopne
mov
in
mov
hlt
out
mov
inc
fnstcw
imul
popa
sarl
push
xchg
pop
lock
xor
xor
sub
lock
repz
test
addr16
lods
popf
mov
mov
xchg
cmp
xchg
lahf
cs
test
or
cmpsb
cld
dec
leave
mov
dec
dec
xor
sbb
gs
mov
cmp
pusha
add
sbb
fiaddl
arpl
sbb
out
cltd
push
pop
sets
fs
dec
leave
dec
and
mov
scas
push
push
ret
cwtl
xor
push
dec
xchg
imul
dec
ficoms
pop
or
xchg
jl
adc
jne
xchg
cmp
fnsave
in
dec
inc
xchg
ss
lods
mov
inc
movsb
fmull
sub
ret
js
jbe
call
rorb
mov
add
and
ss
mov
inc
negl
and
xchg
xor
and
mov
lahf
and
flds
call
scas
push
pop
loope
jo
cmc
int
cmp
jge
jp
arpl
leave
inc
xchg
rclb
pop
scas
subb
sub
sbbb
popa
or
or
js
mov
fisubs
scas
sbb
shll
cmpsl
stc
push
pop
enter
mov
jne
cmc
je
dec
inc
push
shrl
pusha
jae
xor
jl
and
mov
lods
rorl
mov
xor
enter
cmpsl
dec
rolb
ror
mov
popa
inc
or
in
gs
pop
xor
sbb
or
notb
sbb
aas
dec
cmp
clc
test
in
cmp
push
sub
push
sahf
pop
mov
dec
aam
lods
in
push
cmp
mov
fwait
orb
ljmp
ret
cld
inc
inc
dec
pop
aas
fimull
fistpll
mov
sahf
lods
les
rorb
cli
js
ficompl
cmp
stos
dec
mov
mov
cmpsl
imul
pop
add
mov
stos
call
push
inc
scas
mov
lahf
sbb
push
lods
loopne
lret
sti
jno
movsl
enter
js
mov
jg
mov
pop
pop
xchg
cli
sarb
and
inc
es
ficompl
lcall
sub
or
mov
xor
xor
repnz
xchg
movsb
jno
xchg
jno
pop
sub
sbb
and
test
cltd
and
mov
jbe
dec
or
sub
cmp
jmp
push
jno
loope
in
and
cmpsl
push
jle
push
outsl
jne
cmp
and
add
mov
jnp
inc
xor
mov
sbb
scas
push
gs
pop
aas
dec
jle
push
sbb
daa
mov
in
mov
jnp
sbb
lcall
cmc
jbe
xchg
jle
imul
frstor
mov
push
mov
dec
sbb
sbb
or
xor
ljmp
push
adc
iret
xchg
dec
sub
cli
and
and
int
mov
adc
xchg
inc
jp
cmp
push
mov
mov
adc
stc
add
adc
mov
xor
mov
into
in
pop
data16
add
mov
cmp
ja
add
dec
repnz
bound
lods
cli
xchg
mov
sub
add
xor
sti
sub
mov
lcall
sbb
jnp
xor
insb
cmp
imul
mov
ljmp
or
sbb
test
cmp
insb
push
jae
mov
lea
rol
imul
cwtl
xor
push
aad
sahf
loope
pop
div
inc
cmpsl
and
cmpsl
pop
icebp
jne
inc
xlat
stos
sti
lea
xor
pop
pop
leave
js
call
mov
scas
aad
fldl
or
jne
sbb
lock
clc
mov
and
icebp
jo
and
imul
nop
fsub
inc
sub
sub
sarb
pushf
cwtl
lods
enter
mov
insb
ljmp
std
in
imul
adc
ds
and
inc
add
and
mov
or
xor
aaa
sbb
jmp
adc
sub
imul
daa
shlb
mov
shr
hlt
aad
push
cmp
and
add
cs
inc
jo
popa
adc
inc
xor
cmpsb
shll
loope
xchg
testb
push
ss
push
jno
popa
adc
inc
xor
cmpsb
shll
loope
xchg
testb
push
push
inc
data16
pusha
notb
jbe
inc
xor
shlb
loope
nop
out
mov
mov
pop
jno
adc
inc
mov
fisubs
icebp
xchg
xchg
xchg
sbb
cmp
pop
push
mov
sub
mov
andl
andl
andl
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
mov
lea
push
movl
movb
movl
movb
movl
movb
movb
movl
call
leave
ret
add
test
outsb
adc
cs
pop
subb
add
xor
fldl
fs
fs
xchg
sbb
movsb
sub
hlt
jge
adc
push
mov
inc
int
std
fs
xchg
sbb
movsb
sub
hlt
jge
insl
adc
add
push
iret
inc
int3
aaa
mov
sahf
in
test
hlt
sub
psadbw
out
jle
clc
cmp
pop
cwtl
rcr
and
mov
dec
or
aad
lret
enter
addr16
jmp
test
add
std
pushf
mov
mov
push
dec
int
mov
add
ljmp
push
push
pop
test
xchg
adc
call
xchg
add
ret
cmp
dec
mov
pop
xor
in
imul
mov
hlt
pop
in
jl
jno
fs
and
pop
mov
insb
cwtl
test
xor
or
or
and
jmp
rcr
inc
inc
test
sahf
jne
gs
lret
sbb
movsb
sub
hlt
jge
insl
adc
add
xor
and
push
fldl
std
fs
sbb
dec
fdivrs
mov
cmp
mov
inc
fldenv
sahf
or
lret
js
push
mov
mov
or
imul
pop
mov
int3
and
jnp
loop
stos
inc
xlat
dec
test
jae
dec
hlt
jge
insl
adc
add
xor
and
push
fldl
std
fs
xchg
sbb
movsb
sub
hlt
jge
insl
adc
add
xor
and
push
fldl
std
fs
xchg
sbb
imul
cmpsl
sub
adc
push
scas
sti
test
add
ja
pop
xchg
mov
std
dec
or
xchg
push
jae
bound
jno
xchg
int
fildll
sub
nop
dec
insb
fldcw
int3
packuswb
sahf
adc
push
inc
xchg
aaa
fldcw
or
arpl
jo
cmp
loop
push
xor
mov
xor
jb
sbb
push
mov
push
es
xor
scas
into
ret
xor
cmp
push
ja
jnp
jne
or
or
cld
and
mov
js
repnz
idiv
push
and
ficomps
dec
jge
movl
adc
fidivrl
sub
add
adcb
sub
cmp
jae
and
mov
mov
xchg
leave
mov
test
cmp
jp
sub
jo
inc
adc
mov
pop
xchg
lds
xor
subb
inc
or
ljmp
mov
and
movsb
mov
sub
add
jbe
push
inc
rol
outsb
mov
out
cltd
cmp
mov
mov
and
lahf
inc
adcl
sub
pop
add
int
sub
dec
clc
out
sub
mov
bound
ficoml
push
sbb
sarl
adc
das
xlat
mov
inc
pop
lret
jno
inc
xchg
pusha
mov
inc
xor
ret
lret
in
jnp
in
mov
and
jmp
adc
mov
popa
in
scas
fstpt
aas
jo
pusha
mov
xchg
sahf
clc
xor
sub
mov
dec
iret
loopne
clc
push
pop
sahf
addr16
imul
push
jmp
movsl
sub
loop
sarb
xlat
in
pop
lods
add
xchg
scas
fidivs
movaps
fs
mov
leave
jo
int3
movd
cli
ljmp
push
xor
insb
xchg
ficomps
add
rcrl
pop
outsw
ror
or
cmp
lret
nop
mov
stos
shlb
add
enter
in
cltd
pop
push
stc
ljmp
cmpsb
cmpsb
push
pop
inc
xchg
jecxz
pop
dec
les
jle
iret
mov
addr16
mov
mov
gs
sub
scas
push
and
xor
in
cmpsl
mov
stos
inc
jns
test
rcll
cmp
mov
bnd
jge
enter
mov
mov
test
insb
outsb
loope
cmc
sahf
add
int3
into
jg,pn
test
mov
mov
sub
iret
add
popa
xchg
xchg
mov
push
xchg
js
pusha
add
push
mov
hlt
ljmp
ret
int3
mov
out
dec
jb
sub
mov
mov
cmp
jmp
dec
inc
jle
ja
pop
clc
nop
daa
inc
sub
cmp
roll
xlat
or
leave
dec
cmp
aam
jne
xchg
add
push
aas
xchg
inc
fistl
in
decb
movsl
adc
push
add
mov
fwait
ret
xchg
rcr
jg
dec
dec
insb
fs
and
movsb
xchg
sbb
dec
lods
mov
xchg
xchg
sahf
inc
int3
mov
xchg
jecxz
or
xchg
push
mov
sbb
std
fistps
rcll
pop
bound
fs
ret
cld
inc
adc
lea
lock
pop
int
cltd
lcall
pop
pop
jne
sub
sub
add
mov
dec
pop
jb
into
ss
mov
inc
js
dec
nop
movsb
jnp
popf
inc
mov
and
cmp
push
sub
or
ds
xor
pop
sub
shlb
sbb
ss
sbb
pop
xchg
jl
mov
out
mov
std
arpl
mov
cmpsl
xlat
dec
dec
cli
cmp
mov
mov
ss
xor
test
mov
outsb
sbb
mov
inc
mov
and
add
bound
outsl
pop
jp
sbb
dec
pop
dec
out
pusha
mov
jbe
xor
rcrb
fnstsw
fsubs
mov
int
mov
add
pop
js
ret
xchg
xor
repz
cmp
inc
repz
dec
add
jbe
xchg
adc
movups
mov
mov
xlat
pop
mov
pop
pop
arpl
je
inc
jge
sahf
pop
push
loope
mov
nop
addl
mov
xchg
lock
in
mov
dec
or
movsl
jb
je
mov
test
or
pop
jns
sar
sub
cmpsl
mov
dec
or
or
mov
adc
rorb
rcrl
xchg
xor
sti
orb
std
cmp
out
fchs
mov
adc
lea
inc
data16
mov
or
and
lea
fdivl
adc
or
mov
or
fcmovnb
push
fists
int
outsb
call
xchg
xlat
sbb
inc
stos
lret
mov
lods
mov
fstl
divl
in
sbb
jbe
les
in
loope
andl
or
ret
test
adc
cmp
lret
cs
ja
aad
mov
popf
xor
add
inc
fadd
dec
xor
outsl
fs
ret
dec
cltd
mov
mov
add
dec
mov
jge
test
xor
push
cwtl
clc
ficompl
in
xchg
xchg
adc
sbb
adc
cli
rolb
shll
inc
mov
cli
int
adc
jo
and
or
out
out
sbb
push
insb
xchg
cmp
mov
fisubrs
sub
movsb
loopne
mov
xor
icebp
fnstcw
out
mov
nop
push
test
stc
sahf
xchg
movsb
cli
nop
mulb
les
xor
std
and
mov
mov
add
or
mov
lcall
jmp
les
repz
std
stos
out
mov
rcrb
jecxz
xor
jg
and
mov
mov
maxps
mov
mov
lret
jp
xchg
movsb
pushf
lods
lcall
mov
jns
stos
fbld
test
fstps
fidivrl
fdivr
sbb
cmp
call
push
fistps
scas
test
je
mov
stos
add
xchg
xor
adc
aam
or
mov
add
movsl
test
ret
mov
cmp
mov
out
push
repnz
aam
jno
adcb
mov
sub
mov
cli
in
loop
push
pusha
mov
movsl
sahf
nop
outsl
inc
pop
fcompl
aaa
fdivrs
stos
rorl
je
pop
cmp
leave
enter
jb
outsb
in
push
adc
test
outsb
mov
jns
je
mov
lahf
rorl
cld
cmp
addr16
sti
andb
push
adc
mov
mov
repz
dec
aad
fisubl
pop
xor
jo
imul
adc
or
ljmp
subb
adc
xor
or
fsubrs
sarl
sti
movsb
sub
xchg
sub
icebp
mov
cmp
movsl
pop
outsl
loop
push
jbe
cmpsb
xchg
xlat
loopne
mov
push
orb
rolb
cmpl
ret
call
xlat
mov
popf
mov
jge
aas
fcomip
jb
scas
cmc
pop
fwait
inc
sbb
jns
adc
dec
inc
cmp
out
pop
popf
or
icebp
mov
sub
leave
sti
outsl
call
push
jne
negl
scas
lods
push
pop
dec
mov
call
movsl
xor
ja
and
shlb
and
add
adc
adc
xor
adc
and
pop
je
sub
out
subl
aam
or
and
cmp
inc
adc
outsl
insb
jns
imul
xchg
push
xlat
mov
cwtl
repz
push
push
repnz
out
sbb
loope
aam
mov
aaa
flds
push
mov
cltd
dec
mov
fmull
ljmp
xor
xor
sbb
pop
xchg
mov
jno
lods
cltd
imul
cmp
out
push
or
mov
and
mov
cld
in
movsb
inc
je
dec
mov
daa
xchg
inc
xor
imul
cltd
int3
push
mov
adc
sbbb
and
pop
pushf
mov
popf
jbe
loop
cmp
das
ljmp
jmp
loope
test
inc
xchg
std
mov
stos
adc
dec
lock
fwait
push
xchg
je
cmp
bnd
xor
test
imul
or
push
mov
push
pop
mov
mov
add
jno
add
sub
insl
xchg
push
jne
negl
jae
mov
push
aam
iret
loop
incb
adc
lods
ja
mov
pushf
xcrypt-ecb
cmpsl
mov
mov
xchg
lods
and
shll
add
imul
pusha
test
pop
lcall
push
cmpsb
test
xchg
pop
sbb
jg
adc
je
lods
ret
or
adc
pop
ficoms
pop
jmp
sti
js
fiaddl
cmpsb
mov
or
mov
leave
sbb
mov
and
sub
mov
xchg
pop
je
dec
and
xor
cwtl
cs
rcrb
lahf
xor
adc
cmp
push
jl
out
add
cmp
mov
pop
mov
push
jl
mov
cwtl
outsl
xchg
js
movb
mov
or
mov
lret
pop
es
cmc
xor
sarb
mov
lock
inc
lock
popf
aad
or
xor
push
pop
fwait
data16
inc
cld
leave
push
loop
fsts
js
nop
mov
push
shrl
dec
out
inc
push
sbb
sub
scas
out
dec
lods
subl
fcompl
sub
xor
into
mov
ss
pop
fsts
cmp
jne
ja
test
push
or
je
mov
sti
adc
jno
fs
cmp
inc
sahf
loop
xor
jno
xchg
and
push
mov
lret
mov
xchg
jnp
mov
adc
in
nop
mov
inc
lahf
shll
and
mov
imul
xchg
push
dec
inc
inc
cmc
dec
daa
fsubs
cmp
mov
adc
lcall
stos
mov
or
addb
push
cmp
in
into
adc
pop
clc
rorb
test
and
adc
dec
inc
cmp
mov
fcompl
pop
ss
mov
mov
ficompl
or
mov
and
lret
cwtl
jns
sub
shld
add
xchg
sub
and
push
in
cmp
jns
addr16
pop
sub
mov
push
mov
in
xor
popf
das
sbb
jp
xchg
das
fiaddl
popf
ret
dec
mov
xchg
pop
shrb
and
rcrl
insl
mov
jg
xchg
ss
inc
sbb
mov
test
jl
xor
jl
scas
xor
in
xor
int3
inc
lcall
rclb
cli
ficoml
adc
add
movsb
fs
add
push
jmp
aaa
je
arpl
movsl
outsl
push
in
sub
jge
mov
mov
or
pop
ja
mov
push
nop
nop
push
data16
test
push
pop
pop
js
sbb
fimuls
lock
lods
sbb
push
clc
lds
and
pop
loopne
xor
ljmp
clc
xlat
mov
out
mov
les
rorb
jl
enter
dec
imul
lret
lret
mov
pop
mov
pop
rolb
or
cld
arpl
add
aas
repz
mov
cmp
cwtl
inc
adc
test
dec
pusha
mov
fnstcw
out
stos
fiaddl
cmp
test
jg
add
sub
mov
mov
jns
cmp
out
cmpsb
pop
pusha
cltd
clc
add
js
mov
cld
sbb
js
jecxz
int3
lods
cmp
rol
icebp
repnz
and
fwait
js
cwtl
mov
inc
lods
jnp
stos
out
sbb
xchg
fsubrl
ljmp
push
imul
push
and
xchg
sbb
jnp
sbb
mov
push
mov
sbb
out
pop
pop
movsl
in
popf
stos
push
add
jno
dec
insl
add
push
xchg
dec
lea
mov
in
subps
insl
adc
pop
mov
fwait
push
push
push
push
dec
imul
sub
sbbl
dec
sub
in
jecxz
addl
and
sub
cltd
mov
inc
ljmp
test
cltd
je
xor
push
into
push
test
cmp
mov
mov
movsb
sub
xchg
or
mov
push
and
jne
shll
add
lret
xor
xchg
sub
dec
data16
push
adc
jl
lahf
dec
pop
out
in
push
push
iret
outsl
mov
inc
push
int3
ds
cmpsl
pop
cwtl
rclb
jg
jl
mov
mov
xchg
mov
scas
inc
cmp
push
je
pop
jle
and
sarb
scas
push
and
mov
add
fstps
jne
sub
rolb
sbb
and
mov
and
fcomp
pop
xchg
pop
jns
call
push
pushf
or
imul
cwtl
mov
fsubs
mov
xchg
ss
or
dec
cltd
xor
mov
cmp
lods
insb
adc
mov
imul
adc
fadds
nop
push
pop
pop
jb
cmp
gs
mov
fwait
mov
adc
mov
push
mov
xor
das
fdivrs
push
cld
xchg
push
test
in
out
je
jg
ljmp
mov
mov
add
adcb
movsl
movb
push
push
and
xchg
sbb
and
add
push
xchg
cmp
sbb
ja
movsb
or
push
mov
es
call
push
aaa
inc
push
mov
popf
dec
xor
shlb
push
and
add
loope
and
inc
fisubl
loop
adc
pop
mov
jo
popf
stc
shl
mov
outsb
nop
sbb
stc
aas
or
leave
xor
jg
ljmp
sub
enter
jecxz
adc
scas
jg
bound
mov
repz
adc
adc
and
xchg
adc
enter
xchg
imul
push
loop
xchg
mov
loopnew
hlt
sub
shrl
xor
cmpsl
lret
jmp
push
dec
dec
mov
dec
inc
js
add
sub
mov
clc
das
mov
div
ljmp
cmp
cltd
es
test
test
dec
mov
sbb
lahf
add
pop
push
inc
pop
fldl
ret
sbb
sbb
or
ret
add
inc
dec
push
push
mov
xchg
xlat
fs
cltd
cmpsl
ret
jne
jle
lods
inc
mov
sbb
push
nop
stc
xor
xor
sti
fmuls
sbb
dec
jo
sub
call
mov
mov
pop
pop
lods
lcall
or
add
mov
icebp
xchg
loopne
adc
pop
pop
jo
incl
fbstp
lods
cmp
pop
adc
inc
sub
sub
mov
les
daa
dec
fs
fistpll
mov
jle
xchg
sub
xor
xor
mov
or
xchg
inc
pop
cmp
push
cmpsb
or
fidivs
mov
jl
shlb
xor
out
pop
dec
out
cmp
in
xchg
movsl
in
mov
push
adc
mov
pop
ds
or
outsb
sub
ss
lret
and
rcrb
aaa
repz
roll
xchg
enter
lea
mov
data16
enter
and
mov
cs
setl
sbb
or
inc
fwait
rorl
js
sbb
stos
sub
or
mov
cld
outsl
push
mov
adc
daa
jp
dec
mov
mov
jbe
mov
lret
mov
les
insb
mov
gs
push
fisttps
jle
sahf
sub
mov
outsl
shrl
inc
lret
xor
ja
popa
in
fimull
fnstenv
popf
and
ds
out
test
mov
bswap
mov
xchg
cmpb
in
jb
sbb
inc
jl
sbb
out
xchg
stos
sbb
test
adc
cmp
aad
mov
out
jno
mov
and
aad
and
fmull
inc
pop
xchg
jmp
push
cltd
rcll
imul
adc
test
mov
fwait
shr
loopne
in
add
xchg
ret
cltd
es
test
pop
dec
xor
movsb
insl
dec
ret
mov
in
sub
stc
push
or
test
pop
lods
sbb
sub
jns
mov
jae
and
add
mov
inc
inc
mov
inc
test
sahf
in
and
fstps
and
push
enter
or
cltd
cmp
mov
rcl
pushf
call
out
xlat
push
lock
not
inc
fwait
cmpb
inc
mov
inc
lock
xchg
mov
pusha
xchg
lcall
repnz
dec
add
pushf
sbb
push
or
pop
lcall
dec
add
or
xor
xchg
aam
push
js
insl
ljmp
inc
mov
inc
mov
and
mov
scas
jg
cmp
lret
pop
push
call
mov
mov
scas
cmp
andb
sub
mov
incb
lret
push
adc
shrb
imul
movsb
mov
sub
push
push
or
insb
sbb
test
pushf
test
sbb
jl
notb
mov
es
enter
mov
xor
imul
bound
jg
mov
add
sub
sbb
rorb
movaps
add
jae
into
loop
fcoml
das
cltd
cmp
add
sub
das
push
enter
add
pop
test
int
popl
ret
mov
cs
scas
mov
xlat
jbe
enter
or
jle
aad
or
push
stc
and
out
cli
inc
adc
push
fistps
dec
pop
call
push
icebp
jb
inc
mov
popf
ss
mov
sub
movb
orl
in
jg
cmp
lret
loop
and
in
pop
in
ds
push
lcall
mov
push
fidivrl
dec
mov
or
lods
subl
lcall
lret
or
push
cmp
rcrb
pop
out
jo
std
cld
jp
push
dec
fadds
adc
js
aam
jbe
mov
insl
push
inc
test
and
or
in
into
mov
outsb
test
data16
and
add
mov
adc
shll
dec
xchg
outsl
mov
or
data16
jbe
xor
lcall
int3
mov
stos
in
pop
ds
push
fsts
or
xchg
cmp
inc
pop
xor
adc
sbb
incl
sbbb
sbb
mov
popa
lds
jbe
out
lcall
xor
jecxz
sub
fildl
les
cmp
xor
xor
xor
ret
jb
cmp
push
repnz
leave
test
add
idivl
cmp
push
aaa
cwtl
stos
inc
xor
aam
movsb
and
popa
andb
dec
fcompl
inc
mov
mov
sti
insb
rorb
lds
in
sub
adc
nop
push
popa
ljmp
das
push
repnz
push
mov
sub
rorb
sbb
and
mov
pusha
push
adc
inc
fcmove
js
test
sarl
xchg
sub
cli
pop
and
call
stc
insb
imul
enter
lea
xor
mov
rclb
ret
pop
xor
jg
and
xchg
pop
sti
pop
push
xor
jle
add
cmp
jl
jl
mov
gs
insl
ret
jne
test
inc
lea
outsl
std
jo
cmp
ret
aad
aas
inc
mov
or
sub
test
adc
dec
fsubr
lret
cmp
sub
mov
jle,pt
mov
std
push
or
rolb
sub
in
jns
movsl
jnp
es
outsb
adc
es
hlt
jno
push
in
pop
sub
mov
xchg
push
addr16
mov
xchg
mov
jl
cmp
aam
mov
lcall
mov
mov
xchg
fst
out
cmpsb
imul
dec
and
call
shrl
stos
xor
sub
adc
addl
orb
ja
repz
dec
fwait
push
jmp
sub
inc
cmpsb
aam
mov
push
cld
push
lods
push
cltd
in
xchg
mov
mov
pop
inc
andl
subl
aam
les
jge
insl
adc
add
xor
and
push
fldl
std
fs
xchg
sbb
movsb
sub
hlt
jge
insl
adc
add
xor
and
push
fldl
std
fs
xchg
sbb
movsb
sub
hlt
jge
insl
adc
add
xor
and
push
fldl
std
gs
xchg
sbb
movsb
sub
hlt
jge
insl
adc
add
sahf
mov
int3
xor
lcall
rcr
ret
iret
mov
mov
arpl
pop
inc
dec
ss
and
sti
jmp
out
rcr
ret
iret
mov
mov
and
pop
inc
dec
xor
inc
das
adc
movaps
arpl
push
filds
scas
mov
xlat
movq
jp
inc
fs
jo
mov
ret
mov
mov
sahf
cmp
dec
xchg
inc
orb
or
lret
data16
push
pop
xor
ljmp
dec
xor
cmp
push
mov
xchg
sahf
nop
lods
pop
test
mov
mov
xchg
dec
mov
cmpsl
repz
shrl
inc
mov
out
mov
nop
lods
lahf
mov
out
loopne
pop
xchg
adc
scas
xchg
adc
add
mov
rolb
loopne
xorb
adc
add
dec
mov
lret
or
xorl
lods
mov
and
inc
loopne
xorb
adc
ss
push
ljmp
push
dec
inc
dec
mov
and
push
or
push
sar
out
rcr
scas
iret
mov
out
xchg
lahf
cmp
mov
dec
push
aas
cmp
adcw
fst
scas
adc
fists
sbb
sbb
aaa
and
pop
pop
dec
pop
addr16
imul
fisttps
mov
call
and
ss
and
inc
inc
data16
pop
xorl
mov
jae
arpl
pop
inc
dec
xor
and
adc
add
repz
out
rcr
ret
iret
mov
mov
jae
arpl
pop
inc
dec
xor
and
adc
add
repz
cmpsb
jnp
pushf
mov
jae
inc
pop
adc
mov
cmp
sbb
cld
inc
sbb
xlat
scas
push
sbb
movsb
icebp
fadds
loopne
enter
cmc
sub
xchg
or
sbb
testl
fwait
arpl
inc
sbb
ss
mov
or
sahf
jb
orl
xchg
enter
jae
aas
stos
pop
sbb
test
repz
xlat
gs
popa
inc
push
push
out
sti
daa
mov
shl
cli
in
jb
jge
ja
mov
daa
mov
jnp
mov
cmp
jecxz
sbb
push
add
data16
pop
outsl
and
nop
push
daa
inc
cli
push
dec
aaa
add
mov
mov
outsb
jnp
and
aad
aam
dec
scas
test
xor
icebp
sub
push
jge
lods
push
into
outsl
in
and
mov
or
jecxz
jecxz
lret
fildl
bound
jo
cmc
rcl
inc
dec
insb
mov
inc
or
addl
jp
jbe
pop
xchg
je
push
pop
sbb
ficompl
mov
jl
loope
mov
xor
adc
dec
jg
repz
jmp
rolb
sbb
and
call
les
or
fisubrs
pop
sub
frstor
lcall
mov
mov
xchg
mov
sbb
imul
adc
mov
xchg
and
mov
fsubrs
jae
cmp
xor
add
test
dec
mov
push
es
xor
stos
sbb
cmp
mov
push
loop
fldz
and
mulb
jmp
repnz
insb
cmp
out
pushf
cmp
shlb
pop
std
mov
mov
dec
sub
cmpsl
aam
fcoml
and
ljmp
addr16
cltd
cmp
xchg
ja
cltd
addb
js
cld
xchg
push
popa
fcoms
xchg
inc
shl
test
mov
push
sub
loopne
inc
push
mov
sub
les
pop
add
je
mov
mov
push
dec
mov
xor
xchg
popa
js
ljmp
js
lea
jp
xor
ret
xlat
inc
sahf
mov
xorl
adc
mov
stc
repnz
sbb
aaa
xchg
mov
mov
sub
shll
sbb
movsb
movsl
and
pop
lahf
cwtl
cmpsb
mov
outsb
icebp
inc
outsl
outsl
repz
sbb
push
cmp
loope
lret
insl
sbb
mov
sbb
insb
mov
rcll
push
xchg
test
pop
pop
iret
jecxz
cwtl
cmp
sbb
inc
or
pop
addl
lods
push
mov
nop
ljmp
lds
int
sbbb
or
mov
arpl
mov
pop
jns
lret
push
rcll
ds
jnp
aas
aaa
pop
add
loop
ror
notl
dec
mov
cld
iret
push
outsb
loop
mov
pop
dec
cli
push
outsl
mov
insl
outsb
cmpsl
dec
or
shlb
jns
insl
mov
test
push
xchg
lret
jecxz
clc
xchg
cmp
bound
xor
fnsave
std
jnp
sarl
jnp
mov
fildll
mov
cmp
lods
cmp
push
adc
xchg
and
lcall
rorb
fdivs
jg
arpl
adc
mov
sub
orb
imul
sti
aas
push
xchg
insb
or
adc
pop
pop
mov
cmp
idivl
not
pop
xor
cmp
ja
jno
sub
sti
sbb
xchg
loopne
mov
jns
pop
jmp
sub
push
inc
mov
pop
push
mov
pop
add
xrelease
sbb
jae
ss
sbb
aam
popf
fimuls
insl
enter
mov
pop
jae
sbb
sbb
sbb
scas
fwait
aam
mov
gs
orb
in
les
mov
push
subb
mov
in
dec
pusha
push
insb
pop
ds
je
and
mov
cmpsb
mov
ret
jns
sbb
loope
leave
jl
xor
and
xchg
inc
mov
test
mov
jl
mov
hlt
cmp
mov
cmp
adc
imul
push
out
scas
imull
pop
lret
mov
pop
stc
add
stos
bnd
xor
xchg
lret
mov
mov
push
push
lahf
and
xor
dec
fildl
push
pusha
jp
xor
push
icebp
pop
inc
sbb
fsubl
add
lahf
std
clc
mov
test
dec
cmpsb
enter
pop
cmp
sub
push
dec
inc
sbb
pop
xlat
ss
sahf
enter
std
mov
fadds
incb
sbb
out
and
ja
rcll
paddusb
cmp
jo
jecxz
push
mov
mov
mov
mov
filds
andl
cvtps2pi
pop
jns
jle
add
mov
mov
pop
inc
scas
test
or
arpl
or
lods
push
xor
in
jbe
movsb
fs
push
loope
add
adc
shlb
sub
sub
stc
cmp
inc
movsl
push
pushf
lahf
mov
or
fldcw
daa
jno
and
mov
add
in
mov
xchg
mov
js
cs
jns
in
int
orb
cmpsl
popa
fisttps
scas
fcmovu
mov
pop
inc
imul
js
sbb
stos
out
enter
test
inc
lcall
repnz
mov
add
xchg
and
in
mov
xor
push
lea
push
push
dec
repz
xor
mov
ja
cld
and
test
shll
ds
les
das
push
sbb
outsl
xor
and
mov
sub
loope
mov
stos
mov
pop
sti
cmp
mov
arpl
movsb
stc
push
adc
jg
js
inc
sbb
mov
pop
adc
jne
in
inc
mov
mov
sub
mov
sbb
push
pop
std
lods
std
mov
jbe
roll
sub
rcr
loopne
xchg
addr16
adc
xor
push
cmp
sbb
cmp
inc
mov
repz
pop
mov
faddp
add
pop
orb
cli
dec
lods
mov
inc
sahf
dec
jb
jo
sti
add
pop
aas
mov
fimuls
xchg
shll
xchg
and
xor
loopne
mov
xorps
mov
push
fisubrl
ret
sbb
mov
mov
jne
pusha
hlt
dec
mov
adc
mov
outsl
jmp
in
sahf
jecxz
xchg
pushf
filds
sub
fstpt
mov
movb
rclb
adc
int3
stos
pop
movsb
hlt
jge
in
mov
dec
mov
dec
add
andb
sbb
mov
and
or
mov
addr16
clc
stos
in
adc
dec
cmp
jecxz
cmp
insb
sbb
pop
and
hlt
xchg
mov
mov
xchg
cmp
loopne
movsb
mov
jmp
aaa
mov
sub
lock
test
xchg
xchg
adc
jp
loope
cmpb
out
int
aad
jmp
ror
popl
xchg
xlat
test
cmp
in
int
mov
popf
fisttpl
cmpsb
int
lahf
outsb
mov
dec
cmp
push
enter
pusha
xchg
mov
push
sbb
push
sbb
push
arpl
es
adc
dec
mov
ja
inc
sub
jmp
jnp
mov
inc
push
lcall
and
xor
cmp
lcall
cmpsl
push
push
sbb
je
scas
jecxz
outsb
mov
arpl
aam
dec
ja
ds
cmp
xorb
add
inc
inc
push
and
xchg
in
or
jno
sbbb
xchg
xchg
mov
mov
pop
scas
scas
lock
or
aas
repz
xchg
leave
into
daa
push
xor
dec
adc
lcall
pop
adc
bound
sub
pop
std
scas
sub
mov
ja
aas
js
mov
jnp
mov
imul
dec
arpl
fwait
stos
add
push
aaa
imul
push
cmp
adc
ja
sbb
scas
push
mov
je
pop
fbstp
push
xor
ja
or
lds
mul
adc
mov
jno
add
jnp
js
jp
mov
psrld
lods
out
in
or
jnp
mov
dec
movsb
pushf
jl
and
xchg
negl
push
adc
inc
mov
mov
cmp
ja
imulb
das
outsl
push
cmp
push
pop
xchg
movsb
mov
inc
adc
shlb
into
in
inc
lret
and
dec
add
dec
push
jo
loop
sar
or
push
inc
mov
mov
fs
sbb
or
lods
les
rcrl
test
loope
inc
mov
mov
inc
add
sbb
push
lahf
jbe
cmp
lahf
sub
xchg
repz
mov
sub
ja
mov
mov
inc
jp
leave
inc
or
push
fwait
and
jg
mov
push
and
icebp
repnz
addr16
mov
dec
mov
cmpsb
rcr
rcl
ficoms
clc
jae
mov
sti
aaa
cli
add
pop
push
insb
int
pusha
adc
and
cmpsb
pop
or
mov
imul
clc
dec
sbb
jb
fldenv
leave
lahf
sbb
ss
arpl
mov
jg
jnp
or
mov
cmp
enter
ret
push
in
mov
fisubs
and
test
cltd
insl
adc
xor
adc
inc
push
lock
sbb
outsb
sub
aaa
popf
scas
pop
mov
addr16
fmuls
loopne
pusha
xor
mov
nop
aad
mov
push
xchg
je
sbb
dec
scas
int3
or
add
mov
jge
out
mov
mov
and
stos
inc
jb
cmpsb
xlat
ffree
mov
xor
add
into
out
mov
fcom
cmp
mov
jne
btr
cltd
mov
mov
jno
cs
adc
icebp
push
jecxz
rolb
test
push
or
dec
push
and
sahf
dec
loop
pop
loop
mov
jl
aam
ja
ficoml
rcrl
add
addl
sbb
or
fisttpll
imul
xor
es
cwtl
dec
mov
ret
int3
adc
mov
enter
fbld
cld
mov
adc
mov
mov
inc
cs
pop
nop
inc
sarl
fdiv
or
clc
add
jne
ret
fcom
jns
movsb
pop
push
mov
xchg
aaa
mov
jp
and
mov
or
out
sub
pop
mov
dec
loopne
ficompl
ret
sub
das
imul
mov
pushf
mov
xor
dec
jnp
adc
jnp
aam
fwait
cmpsb
cmp
dec
stos
sbb
inc
ffree
dec
push
or
xor
cmpb
fidivrl
mov
lods
ljmp
test
insl
push
cli
xchg
ljmp
movb
scas
pop
cld
outsl
cmp
ss
cli
sub
xchg
loop
loope
pop
push
mov
scas
cmpl
sti
mov
and
stos
inc
push
jle
adc
sub
in
test
or
insl
inc
jle
sti
imul
outsl
fadds
aam
mov
es
mov
movsb
call
fcomi
jp
jle
clc
outsb
outsl
pop
add
lods
mov
orl
xchg
outsb
mov
jecxz
cltd
cmpl
or
fs
or
jle
or
jp
mov
xchg
mov
rcrb
mov
dec
adc
out
cmp
xor
sub
xchg
and
inc
pop
jle
add
dec
cmc
cs
cmc
leave
mov
mov
notb
cmovl
test
sbb
and
lods
out
mov
and
cli
jecxz
int3
leave
xor
inc
imul
mov
in
pop
xor
cli
in
xchg
outsl
dec
loope
mov
std
cld
add
mov
es
out
clc
adc
xor
mov
in
or
or
add
cmp
jno
jecxz
add
mov
inc
mov
call
out
mov
aaa
repnz
cmp
jb
int3
add
out
cmpsl
inc
scas
fcmovnbe
call
cs
push
pushf
movsl
xchg
insb
xchg
inc
lret
out
mov
shll
or
repz
push
lods
adc
xor
adc
inc
ja
pop
mov
or
ret
inc
jle
sbb
dec
lea
xor
and
jmp
aad
pop
and
mov
adc
outsl
dec
dec
pop
dec
out
cs
push
xorb
fdivr
cmp
push
pop
fs
mov
push
mov
hlt
mov
in
dec
push
mov
in
outsb
shrb
in
sbb
js
repz
and
or
cli
call
sbb
daa
data16
inc
mov
cs
and
xor
movsl
es
adc
pop
in
pop
aaa
and
aad
aaa
mov
pushf
cmpsb
cwtl
mov
pop
jg
dec
fdivs
pop
dec
aas
lahf
mov
lds
and
icebp
xchg
push
stos
out
adc
icebp
and
repnz
sub
enter
xor
mov
xlat
repz
inc
and
es
cld
or
je
bound
or
lahf
in
fwait
sub
stos
pusha
enter
repz
inc
movsl
fdivrs
push
or
fisttpll
addr16
add
pop
and
jecxz
xchg
lock
cmp
push
cs
int
xchg
sub
add
rep
scas
pop
out
and
shr
daa
jnp
pusha
les
es
out
xchg
aaa
pop
sub
xchg
nop
sbb
jbe
ficoms
mull
sbb
lret
jnp
shl
and
jns
test
pushf
inc
add
cmpsl
aas
loopne
push
cmpsb
sbb
rcr
punpcklbw
dec
jnp
mov
lcall
sbb
fidivrl
cmp
cmp
cmpsl
sti
and
cld
mov
sti
lahf
mov
je
cld
call
pop
mov
aam
and
add
rcl
out
popa
pop
addl
mov
sub
enter
leave
lods
mov
mov
pop
mov
fwait
outsl
sub
jle
push
mov
jecxz
xor
pop
sbb
cli
pusha
push
mov
xchg
aaa
jl
fidivl
sbb
add
stc
lods
divl
mov
cmp
mov
add
sub
mov
mov
je
inc
repnz
leave
push
imul
ss
pop
das
jp
insl
shl
adc
push
cmp
xchg
adc
and
out
or
test
fs
insb
jecxz
push
js
dec
jle
dec
or
leave
sub
and
ret
sub
jmp
lds
jecxz
mov
pop
cmc
and
cltd
jmp
in
icebp
pop
mov
cmp
pusha
and
lods
int
gs
xor
fildll
adc
xchg
cld
mov
scas
jg
pop
and
xlat
rorl
adc
jbe
dec
and
std
loope
std
imul
repnz
out
iret
test
or
mov
jmp
lods
inc
dec
jecxz
in
in
test
addl
ret
jecxz
enter
js
bound
and
xchg
inc
jns
cmp
daa
dec
orb
enter
jb
mov
xchg
cmp
xchg
out
mov
or
movsb
mov
mov
jl
inc
sbb
xor
pop
negl
jmp
neg
divl
adc
ret
cmp
xchg
add
fs
xor
mov
lods
lcall
jo
fiadds
mov
or
dec
mov
test
hlt
push
or
mov
pop
mov
andb
jno
mov
mov
lods
xchg
fwait
inc
dec
test
cli
cs
add
pop
pop
movsb
js
push
jl
shl
jne
jno
lds
sub
push
ficomps
sbb
sbb
ss
outsb
pop
dec
mov
in
imul
push
scas
add
and
and
push
out
dec
jbe
cmp
xor
add
cmp
sbb
xor
jb
dec
aam
and
push
push
jmp
push
push
lods
xor
movsl
fwait
test
xchg
popa
lahf
inc
inc
sti
mov
stos
mov
sbb
mov
push
jno
and
out
xchg
stos
jecxz,pn
ljmp
mov
dec
mov
or
mov
mov
aad
movsb
jl
into
sub
aas
push
and
sbb
inc
popa
mulb
sahf
adc
xchg
rolb
adc
pop
loope
scas
hlt
lret
cli
inc
dec
aam
cmpsl
popf
jle
and
inc
push
mov
dec
movsl
mov
ficoms
adc
test
inc
in
test
mov
cmc
cmp
add
out
sbb
sub
into
sbb
sub
call
sub
aaa
jg
pop
mov
lcall
aas
loop
test
popf
mov
push
dec
mov
pop
movsb
cmp
pop
leave
or
xor
inc
mov
imul
cmp
iret
lods
out
shlb
movsl
jmp
jbe
and
mov
std
push
or
andl
or
pop
add
mov
int3
fnstcw
sbb
mov
cmp
shrl
insb
nop
pop
jmp
xchg
add
jmp
inc
push
mov
repz
mov
cmp
in
outsb
adc
push
sbb
and
and
xor
fisttpl
sub
jbe
mov
adc
bound
or
inc
mov
cmp
jge
mov
xchg
sub
xchg
mov
jle
xchg
scas
sti
dec
mov
dec
mov
cwtl
lods
lahf
push
push
xor
inc
xchg
mov
data16
sbb
insl
jg
cmp
and
push
lcall
xchg
inc
stc
push
popa
shrb
push
add
push
cmp
hlt
cs
data16
out
adc
stos
imul
imul
imul
and
mov
xchg
mov
int3
outsb
sahf
dec
mov
mov
dec
pop
inc
mov
push
push
cmp
sub
adc
scas
pop
out
pop
aam
sbb
push
xchg
mov
mov
sarb
xchg
push
cltd
xor
jae
push
dec
cltd
ss
and
jg
adc
sbb
test
aad
xlat
es
rcr
mov
sub
or
push
leave
jecxz
ja
nop
iret
xor
adc
xchg
xchg
test
or
lods
flds
out
sbb
and
mov
jp
into
sarl
hlt
popf
inc
ja
out
pop
dec
mov
push
pop
inc
hlt
in
cs
dec
mov
inc
inc
out
fcmovu
stc
cmp
icebp
push
or
xchg
inc
cli
pop
repnz
mov
mov
cld
icebp
jecxz
dec
and
jge
xor
push
dec
lretw
add
mov
add
jae
add
int
mov
aaa
and
or
lods
repz
mov
int3
addr16
and
mov
fsubp
and
addr16
pop
xor
fnsave
fwait
cmp
xchg
iret
lcall
popa
cmp
mov
jg
shr
dec
xor
pusha
insl
push
push
mov
mov
xchg
mov
jecxz
add
pop
movsb
push
bound
xchg
shll
ret
xchg
xchg
fs
cmpsl
ds
jp
xchg
in
xchg
sub
push
pop
jmp
jp
leave
js
add
aaa
mov
pop
jb
loop
scas
stos
int
fwait
inc
pusha
inc
cmp
sbb
jo
sti
lcall
pop
sarl
inc
xor
jbe
push
inc
mov
ljmp
in
test
pop
insl
in
negb
icebp
cmp
in
jecxz
mov
aad
mov
jb
fbld
js
lea
or
inc
and
pop
loope
push
xor
jo
insb
sahf
stos
xor
rcrl
movsl
movsb
fcmovnu
push
stos
in
int3
push
pop
fcmovnbe
cli
mov
dec
pushf
push
sub
mov
adc
cmc
js
mov
adc
pushf
ds
dec
xor
ss
xchg
cmpw
xor
fwait
mov
les
cmp
pop
dec
loope
and
dec
adc
lahf
inc
cmpsb
mov
add
in
shll
out
push
in
lahf
mov
rcrl
or
or
andb
dec
adc
push
cmp
leave
fidivrl
mov
repz
mov
push
test
insb
and
adc
mov
fnstenv
xchg
jns
push
pop
jae
sub
es
or
faddp
idivb
daa
aad
inc
push
mov
adc
jo
mov
mov
jae
arpl
pop
inc
dec
xor
and
adc
add
repz
out
rcr
ret
iret
mov
mov
jae
arpl
pop
inc
dec
xor
and
adc
add
repz
outsl
ret
pop
ret
iret
mov
cmpsl
das
xchg
lahf
orb
pop
inc
dec
xor
cmp
pop
pop
xor
jmp
iret
out
pop
fucomip
iret
mov
mov
xchg
lahf
add
stc
pop
inc
cmp
shr
loopne
lock
mov
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
mov
mov
stc
clc
test
mull
and
jns
jnp
or
push
cmp
mov
mov
stc
icebp
mov
cltd
shrl
and
dec
add
push
leave
push
sub
mov
mov
loopne
nop
loope
shll
add
sbb
jns
dec
adc
jg
cmp
leave
shlb
data16
cmp
dec
js
ret
sbb
das
cld
loop
and
pop
xchg
pop
cwtl
outsb
popa
jl
icebp
add
addr16
leave
lods
mov
jns
jns
mov
pop
sub
je
ss
pop
sti
mov
popf
movsb
fbstp
cltd
sbb
sahf
push
int3
xor
add
test
jo
ljmp
cltd
xchg
push
jmp
push
pop
mov
roll
lods
cmpsb
lock
xchg
pop
popa
out
mov
and
adc
jl
push
test
dec
mov
pushf
sub
jns
popa
loope
scas
sub
pop
cmp
mov
js
xchg
shll
dec
fs
loope
imul
xor
inc
sub
mov
jecxz
mov
cltd
shll
and
jo
pusha
jno
popa
push
push
sub
aam
ret
call
mov
mov
and
cmp
push
mull
xor
xor
aad
repnz
sar
cli
stos
stos
xchg
int
aad
xor
insb
sbb
add
cmp
pop
mov
mov
sarl
imul
sbb
inc
cmp
jmp
loope
shrl
and
imul
sbb
inc
cmp
enter
mov
adc
mov
adc
inc
xchg
adc
cmc
incb
jmp
mov
fadds
adc
popa
cmpsb
xchg
mov
ja
xor
inc
inc
ficompl
out
and
andl
sahf
not
push
lds
xchg
mov
stos
addl
out
imul
fnsave
push
dec
incl
subl
out
pop
mov
adc
inc
pop
mov
out
push
repnz
out
lea
in
push
dec
test
mov
pop
push
sahf
sbb
nop
hlt
hlt
fs
daa
pop
sbb
sub
pop
mov
daa
push
outsl
lahf
scas
cmpl
cmp
sbb
int
cmp
pop
push
cmpsl
and
lahf
jnp
jp
ds
inc
sub
cld
sub
adc
xchg
jecxz
imul
mov
pop
jp
loopne
and
das
xchg
adc
repnz
push
ficompl
ss
adc
mov
imul
pop
push
iret
shl
jl
and
into
sarb
aad
lock
xor
icebp
addb
lahf
inc
push
dec
mov
lods
stc
push
loopne
mov
out
and
dec
dec
cmp
faddl
dec
out
push
lock
lods
imul
jo
or
sub
rorb
dec
call
mov
add
dec
mov
mov
lods
pop
cmp
and
or
jp
mov
mov
cmp
sbb
and
push
test
push
pop
jmp
test
mov
lods
das
dec
mov
push
mov
clc
repnz
push
test
cmpl
scas
lahf
inc
xlat
test
or
pushf
in
mov
popa
cmp
add
push
jns
repz
daa
mov
jge
mov
fnstenv
inc
add
scas
test
inc
sbb
leave
mov
mov
hlt
rclb
addr16
mov
sub
ss
pop
jno
cmpsb
sub
movsl
mov
push
adc
xor
xchg
sysexit
aam
xor
push
mov
inc
add
jbe
lock
and
pop
add
inc
data16
lock
lods
cmp
std
sub
lahf
pop
ja
out
dec
lods
bound
pop
ucomiss
arpl
sub
pop
mov
hlt
fldt
dec
test
sub
movsb
xor
fisubl
sti
sub
int
inc
xchg
dec
adc
add
cld
inc
push
add
pop
adc
sarl
lea
test
sub
inc
mov
push
testl
sar
enter
push
lcall
adc
ret
incl
pop
dec
add
inc
xchg
adc
sbb
mov
fdiv
les
pop
enter
pop
dec
sbb
hlt
cmp
xchg
dec
adc
push
xor
cmpb
repz
mov
sub
pop
decb
lret
cmp
test
mov
popa
cmp
in
lea
jmp
das
je
pushf
imul
pop
jge
popa
mov
cmc
jo
xor
xchg
decb
aas
sub
xlat
pavgb
push
es
sub
jl
mov
mov
fstpl
cli
cmpsb
mov
mov
outsb
fs
dec
xchg
cld
mov
pop
mov
imul
das
add
mov
push
jp
pop
fmul
enter
movl
stos
dec
xchg
pop
rol
sub
jle
jmp
dec
add
ret
jbe
cmp
ret
leave
pop
int
xchg
stc
imulb
out
pushf
mov
pop
adc
mov
fnstenv
ds
fisubl
lahf
fldcw
adcl
call
fistpll
or
cmp
adc
ja
or
xorb
sub
jno
dec
push
mov
mov
rcrl
in
fsqrt
inc
sbbl
dec
js
loope
mov
mov
xchg
cmp
decl
sub
pushf
mov
mov
dec
movsb
mov
fldl
jbe
xor
xchg
inc
and
mov
xchg
mov
jne
mov
push
lods
out
popf
stc
into
in
scas
sahf
fdivr
push
mov
jo
out
lods
repnz
mov
dec
dec
and
push
sub
je
sbb
jo
ret
sub
lret
sarl
cmp
lea
dec
or
push
xchg
adc
es
push
sub
ds
mov
mov
inc
out
jb
dec
jmp
jns
jno
adc
mov
test
jbe
lret
sub
test
inc
xchg
add
mov
jb
movsb
and
sbb
mov
xchg
int3
rorb
jo
mov
pushf
in
xchg
lahf
ret
popa
cli
std
mov
aam
bswap
mov
push
out
shrb
lcall
pop
sub
lahf
push
dec
int
add
xchg
dec
shrb
cmc
pop
leave
xchg
mov
jle
insl
and
mov
rcll
add
xor
idivl
mov
repnz
out
jmp
out
sub
or
lods
adc
pop
ficompl
enter
jmp
mov
fndisi(8087
out
aaa
sbbl
scas
dec
testb
loope
xor
fldenv
outsl
xchg
xor
push
and
sbb
outsl
jno
cmpsb
jns
mov
insl
inc
mov
lds
loope
movsb
xorl
out
in
lcall
rorl
dec
out
scas
or
cmp
out
sbb
and
repz
adc
lods
jle
xor
test
push
enter
rorl
cmp
dec
pop
lcall
and
jmp
cmp
aas
xchg
ljmp
lock
add
test
sub
mov
outsb
stos
pop
das
js
push
leave
cmp
aaa
loope
pusha
sbb
hlt
insb
sub
sbbl
sbb
aam
sti
sub
repz
dec
decl
push
or
lods
inc
lock
outsl
aam
popa
mov
xchg
or
xor
xor
cmc
fidivl
or
mov
jns
mov
and
sbb
mov
xlat
rcrb
mov
mov
int
das
mov
pop
add
pop
pushf
inc
pop
js
gs
sub
mov
stos
sarl
jne
xlat
out
and
hlt
inc
mov
mov
mov
xchg
xchg
arpl
mov
xchg
mov
cmp
mov
loopne
into
xchg
and
sbb
add
shrl
dec
sub
stos
aam
mov
lret
sahf
cmp
mov
xlat
push
cmp
sub
cltd
mov
out
inc
sub
movsl
dec
pop
lds
add
sbb
bound
or
cmp
mov
mov
add
xor
xchg
scas
ds
push
scas
dec
stc
pop
sub
sub
push
ret
inc
cwtl
push
xor
adc
pop
dec
popf
ljmp
outsl
decb
mov
fcomip
clc
fiadds
testl
nop
sub
lds
cmp
xor
lret
loopne
xor
ret
cwtl
sti
sbb
jo
das
add
inc
cmp
dec
in
xchg
xor
lret
add
sbb
jle
in
push
imul
mov
lock
dec
shl
leave
pushf
sub
mov
pop
and
je
fs
out
cmp
ja
pop
pop
cmp
loop
fnstsw
mov
push
mov
shlb
pushf
and
fisttpll
sub
or
lock
push
daa
push
xchg
rclb
sub
sahf
leave
int
xchg
lods
cwtl
push
push
iret
mov
test
add
repnz
sbb
push
mov
jne
daa
lea
dec
pop
xchg
xor
jo
jb
inc
adc
jle
pop
daa
sbb
bnd
jne
pop
inc
jno
sbb
fstl
push
xchg
adc
into
lea
pushf
jecxz
ljmp
adc
mov
pop
cld
push
mov
adc
and
or
mov
test
lret
es
ss
mov
inc
cmpsl
mov
add
ss
out
icebp
mov
aaa
cltd
push
fcmovnu
test
or
nop
loopne
dec
andl
lret
xchg
pop
jo
xor
jno
cmc
mov
sbb
in
adc
fwait
or
ja
sahf
loop
mov
lea
fiaddl
inc
lods
std
xor
in
mov
stos
cmp
and
nop
inc
insb
stos
push
inc
jno
lea
movsl
push
lods
cmp
lahf
pop
nop
cmp
adc
xchg
ror
cmp
mov
and
pop
mov
pop
mov
jo
pop
into
in
adcb
push
mov
int3
xchg
subl
jb
out
cltd
aad
or
add
daa
inc
xor
js
dec
dec
mov
test
jae
es
out
sub
outsl
testb
pop
inc
in
test
stos
xor
test
js
fsubl
test
mov
test
sub
pop
jae
sahf
pop
addl
mov
cmp
in
sub
sub
dec
addr16
std
repz
jg
push
scas
cmpsl
sarb
stos
ljmp
fs
je
ds
clc
sti
imul
fst
test
xor
rorb
js
jbe
dec
mov
mov
in
negl
dec
mov
nop
repz
xchg
ljmp
and
in
add
arpl
pop
sbb
xchg
sub
jecxz
movsb
dec
testl
xlat
in
loop
cmp
or
loopne
inc
sub
std
jmp
mov
cltd
jno
hlt
iret
aaa
shrl
or
imul
pop
fisttpl
aad
pop
sub
push
out
jns
adc
call
dec
mov
repz
xchg
and
mov
addb
scas
in
and
lea
je
push
jae
lret
pop
or
into
mov
xor
jp
sbb
test
inc
inc
rorb
movsl
mov
cwtl
fisttpll
insl
mov
ds
cmp
and
adc
popf
mov
mov
or
adc
jbe
and
jle
insb
test
inc
sub
jg
push
sbbl
shrl
aad
pop
add
mov
into
test
cltd
sahf
sub
mov
xlat
or
stos
sti
scas
pop
sbbb
add
xchg
decb
push
into
mov
call
in
xchg
mov
out
inc
fdivr
xchg
inc
sarl
sti
sub
jno
jg
int
jl
cmp
cli
xchg
and
shrl
fcomps
and
xor
fdivrl
sub
xlat
inc
and
xor
inc
clc
sbb
cmp
or
cmc
orb
fimuls
out
cwtl
aam
aam
arpl
mov
inc
xchg
in
inc
lds
xor
ret
int
outsl
pop
sbb
jbe
jl
in
add
dec
movsb
nop
sbb
fdivl
scas
mov
xchg
dec
jmp
dec
jmp
out
movsb
push
dec
imul
into
add
ret
jb
dec
pushf
cld
mov
nop
or
cmc
adc
add
inc
movsl
loope
cmp
mov
rorl
or
cmpsl
dec
daa
mov
sub
aaa
push
push
inc
bound
sbb
div
jmp
sub
icebp
int
cltd
sbb
orb
loope
mov
cmpl
nop
cmp
jae
enter
xor
mov
into
pop
cmc
jns
inc
push
cld
dec
loope
inc
cmp
cmp
or
outsb
xor
sub
addr16
ljmp
add
jle
xchg
imul
call
mov
dec
dec
out
or
das
cli
pop
imul
subl
imul
js
push
push
daa
fsubrl
cmp
fbld
or
cwtl
push
addb
mov
mov
sbb
cli
aaa
sub
push
mov
lcall
cltd
add
xor
test
push
xchg
insl
xchg
outsb
cwtl
sub
stos
inc
arpl
mov
lcall
das
push
pop
adc
inc
test
jp
dec
cmp
sub
jmp
fucomp
bound
pop
popa
stc
sbb
mov
fwait
adc
std
jg
sub
fistpl
iret
and
mov
sub
mov
cmp
pop
push
imul
ret
pop
xchg
pop
sub
fisttpl
fistpl
lds
cwtl
adc
out
aad
popf
xor
ja
dec
adc
push
mov
and
xchg
frstor
in
mov
xchg
sub
pusha
sahf
sahf
call
jnp
out
ljmp
nop
mov
push
mov
jle
pop
push
sti
fwait
test
pop
add
mov
inc
inc
mov
call
js
jp
jae
pop
fstl
sbb
push
xor
shrb
mov
sbb
add
test
inc
mov
jp
insl
aad
mov
jae
mov
add
jecxz
scas
enter
mov
dec
mov
nop
pop
pop
adc
xchg
ja
pop
xchg
ret
in
imul
test
popa
in
adc
shlb
cld
add
or
pop
je
mov
outsb
sub
inc
xchg
mov
jecxz
sbb
shl
mov
adc
inc
cli
movsl
scas
out
sahf
xchg
addr16
add
pusha
fildll
shr
loopne
mov
loope
stc
scas
aaa
mov
mov
add
sbb
pop
or
nop
mov
jo
mov
xchg
and
in
xchg
ljmp
lcall
jmp
mov
notb
in
dec
jmp
cmc
outsl
mov
jge
mov
add
mov
jae
fisubs
xor
pop
sub
inc
ljmp
lods
cld
add
aam
and
sbb
sbb
sub
add
cmp
dec
lods
dec
lds
fldt
and
bound
xor
int3
and
push
mov
lcall
aad
and
dec
daa
and
in
imul
ret
inc
xchg
push
fwait
test
push
fucom
fwait
mov
call
jmp
or
or
pop
stos
jbe
or
or
add
push
aad
mov
sti
pop
std
mov
rol
subb
add
fldl
or
aas
testb
mov
int
push
stc
or
shlb
push
adc
dec
push
cmpsl
aam
fidivs
mov
push
xor
pop
xchg
mov
cmpsb
shrb
inc
stos
or
sub
fs
test
jge
in
clc
ss
adc
xchg
add
and
sbb
xchg
push
aam
mov
out
fwait
and
push
aad
add
push
aas
dec
test
aam
xor
lock
out
push
push
xchg
or
aam
iret
cmpsb
jne
popf
adc
sub
jo
ss
and
test
dec
push
xor
cli
test
ja
and
mov
pop
push
sub
mov
add
mov
sti
mov
pop
xchg
jne
mov
inc
fwait
dec
pop
fidivl
cmp
mov
insb
shlb
pop
dec
jbe
mov
or
in
jb
sub
mov
mov
sti
cmp
or
lret
leave
loop
pop
mulb
out
ja
int
add
call
std
adc
xchg
fcom
fsubrl
xchg
cmpsl
and
xchg
mov
ret
jmp
xor
jge
xor
test
test
outsb
push
outsb
dec
and
xor
pop
std
add
lods
add
jnp
lahf
inc
mov
mov
cmpsl
mov
pop
lods
and
lock
jae
outsl
in
ret
or
push
scas
int3
mov
push
mov
and
scas
pop
or
ficomps
push
push
sbb
jge
out
jb
push
lcall
jns
mov
vucomisd
inc
add
neg
sbb
dec
repz
mov
sub
insb
cmpb
xor
fistpll
adc
outsl
cmp
pop
xchg
sbb
lock
pop
pop
push
call
lods
cmp
ljmp
pop
mov
dec
leave
das
arpl
repnz
in
push
push
aad
repz
stos
inc
adc
notl
dec
sub
stos
sub
gs
jge
push
sbb
shll
aas
fidivrs
adc
cmp
or
sbb
jns
xchg
inc
push
add
jecxz
fcom
jecxz
jmp
xor
daa
cmp
jmp
rcl
subl
or
inc
cmp
mov
push
arpl
sti
lahf
dec
xchg
sbb
mov
into
cmp
pop
in
mov
ljmp
and
es
xorb
jecxz
and
pop
ja
push
in
cwtl
xchg
or
adc
mov
pop
push
fldenv
loopne
jne
mov
repnz
jbe
sub
adc
or
cs
inc
test
enter
loopne
add
into
stc
rolb
push
mov
popa
adc
popa
lods
movsb
loopne
sbb
xlat
cld
mov
pop
jb
push
push
frstor
cwtl
fisubs
dec
pop
jnp
mul
arpl
ss
ror
lods
xor
jo
add
and
jle
rol
sub
lock
imul
mov
jo
loop
add
xchg
mov
mov
push
lret
adc
dec
adc
inc
xor
jno
daa
sbb
imul
sub
pop
xchg
or
in
or
ja
jp
stos
cmpsl
cli
lcall
sarb
or
inc
jp
fidivrs
mov
or
jmp
mov
jle
int3
enter
dec
jo
dec
daa
clc
test
jno
pop
sub
pop
cmc
push
dec
xor
pop
mov
cld
inc
and
or
cltd
lahf
push
xor
push
jmp
ss
cli
xor
cmp
in
hlt
and
out
jmp
jns
mov
jmp
sbb
sub
sub
cmpsb
sbb
pop
lea
xchg
inc
add
push
rcll
loop
sahf
mov
ljmp
sub
and
ret
loopne
ret
xor
inc
rclb
dec
mov
mov
fadds
push
adc
rorl
stos
call
mov
inc
push
xor
test
ja
dec
popa
inc
mov
fistl
outsb
mov
jecxz
out
pushf
jecxz
push
nop
cmc
cmp
fptan
bound
ds
push
adc
fiadds
fisubl
imul
inc
lock
sti
sub
xchg
xchg
and
les
sub
push
pop
sub
arpl
in
ss
les
outsl
dec
xchg
sti
cmp
les
push
xchg
sti
push
jbe
xor
lret
fucomp
and
add
stc
leave
loopne
sub
in
adc
cmp
iret
fildl
fistpl
inc
adc
xor
sarb
shll
xchg
add
mov
ret
inc
jnp
stos
pop
fisttpll
mov
popa
imul
outsb
mov
push
lahf
inc
lahf
es
dec
nop
dec
cmpsb
lods
insb
aas
add
icebp
adc
stos
sbb
xchg
pop
add
mov
rorl
pop
movsb
mov
sub
fwait
loope
mov
rclb
mov
sbb
rcrl
cmc
fnstcw
cmp
fsubs
cmp
sbb
mov
insl
lea
push
sub
push
sub
cli
dec
test
in
and
jg
mov
push
push
aad
lcall
jns
or
and
pop
pop
xor
pop
cmp
shl
sub
out
adc
mov
jo
insb
sbb
xchg
cmc
xchg
or
fidivs
mov
add
sti
inc
enter
jno
xlat
mov
or
fldl
sbb
mov
xchg
es
nop
pop
les
pop
dec
inc
cmp
push
jbe
cltd
daa
dec
fs
inc
cmc
and
cli
xor
cmp
jg
push
call
je
xchg
mov
push
in
jb
add
cwtl
into
add
adc
aaa
jne
decl
shl
xchg
adc
icebp
fs
mov
cmp
lahf
out
aam
add
or
or
inc
fildl
sub
sub
or
jge
loop
outsb
call
sbb
fsub
xor
jge
mov
cmp
xor
idivl
jne
or
add
inc
mov
icebp
mov
out
add
fldcw
mov
cltd
shrl
and
imul
sbb
inc
cmp
jmp
loope
shrl
and
imul
sbb
inc
cmp
jmp
loopne
shrl
and
imul
sbb
inc
cmp
jmp
loope
push
test
fdivp
mov
sub
push
mov
sub
cmpl
mov
je
cmp
je
push
lea
push
push
movb
call
call
mov
xor
xor
call
mov
xor
call
mov
mov
lea
push
call
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
pop
pop
test
jne
mov
not
mov
movb
or
mov
leave
ret
pop
mov
mov
rorb
push
mov
into
and
push
out
adc
push
scas
inc
pop
mov
mov
pop
repnz
aas
shrb
mov
ds
and
adc
add
pusha
mov
stos
dec
mov
pop
jmp
cli
aas
lret
fbstp
in
add
cmp
shrl
testl
and
xlat
sub
jbe
cs
mov
jmp
pop
mov
sub
fwait
nop
shl
orb
shrl
faddl
inc
adc
pusha
adc
mov
js
sbb
xchg
jns
leave
mov
jno
fbstp
fwait
and
js
std
iret
xlat
repnz
push
scas
pop
pop
in
dec
pop
adc
repnz
mov
rorb
add
test
cmp
lcall
insl
nop
testb
xchg
mov
into
cltd
fnstsw
xchg
mov
out
add
mov
js
inc
mov
das
xchg
mov
dec
add
std
iret
pop
add
xchg
movsl
dec
mov
mov
pop
repnz
aas
shrb
fcmovnu
xor
cmp
or
sbb
dec
scas
inc
push
mov
rclb
testl
sbbl
cmpsl
fistps
and
push
xchg
addr16
pop
pusha
fdivrl
sub
sbb
add
pop
repnz
lods
inc
cmpsb
jge
mov
ja
add
xor
dec
mov
push
rorl
aas
shrb
ret
iret
and
adc
add
push
scas
inc
pop
mov
mov
pop
repnz
aas
shrb
ret
iret
and
adc
add
push
scas
inc
pop
mov
mov
adc
stos
punpcklwd
pop
mov
push
leave
inc
xor
push
push
rep
mov
and
cli
push
inc
arpl
add
loop
xchg
cmovne
or
movsb
mov
adc
jbe
in
adc
fs
inc
mov
add
mov
xor
inc
mov
loope
adc
ljmp
mov
inc
mov
rcr
int3
push
shr
imul
and
sub
push
xor
addr16
jmp
sub
lock
dec
jns
sarb
or
mov
in
in
inc
movsl
movsl
jne
cmp
mov
sub
lods
mov
out
mov
mov
cmp
xchg
cmp
dec
inc
outsb
inc
xchg
clc
add
sbb
cmp
or
iret
loopne
mov
push
iret
mov
dec
aad
stos
in
cmp
mov
cld
jmp
cmp
xchg
xchg
insl
std
push
fwait
jg
fmull
js
in
ret
sbbl
sub
clc
xchg
loopne
mov
xchg
bswap
inc
rolb
and
pop
pop
mov
adc
mov
mov
ja
mov
ret
push
pop
dec
fs
aaa
sbb
popa
add
push
inc
cmp
loop
cmp
jmp
xchg
mov
mov
mov
addr16
inc
inc
pop
shrb
mov
outsb
mov
pop
aam
stos
call
push
mov
mov
jmp
idivl
mov
andl
sbb
mov
ja
xchg
mov
aad
testb
and
and
mov
and
dec
cmpsb
loopne
sub
adc
ror
pop
sbb
fistpll
out
lock
shll
in
push
mov
jg
pop
mov
out
push
xlat
xchg
xchg
jg
push
test
xchg
and
mov
inc
mov
mov
arpl
lret
sbb
inc
add
add
dec
push
ja
inc
sahf
jmp
scas
push
and
mov
popa
call
sub
int3
test
sub
xchg
cs
jbe
push
pop
andb
aaa
out
paddsw
adc
mov
addr16
rol
sub
and
mov
mov
sub
xchg
dec
loope
jl
aas
sbb
popl
jge
xor
jb
jno
subl
cld
adc
testl
xor
jg
inc
into
xchg
pop
add
sub
pop
and
in
mov
cmp
xchg
and
push
nop
imul
xchg
shll
shll
mov
adc
test
int3
dec
inc
sub
stos
std
sahf
ss
jmp
js
adc
xlat
push
lock
sbb
and
dec
pop
into
mov
sbb
mov
inc
aaa
inc
mov
das
lods
ljmp
mov
pop
and
mul
xor
aaa
jno
pop
cmpsb
daa
loopne
pmulhuw
adc
stos
jno
lahf
jno
xor
sbb
fstpl
lret
push
fs
pop
mov
add
fnsave
clc
aas
je
dec
jp
sahf
and
sbb
push
inc
or
lods
adc
imul
mov
daa
jg
sub
or
sbb
inc
xchg
test
pop
scas
push
pop
leave
cs
sti
test
jae
jl
icebp
arpl
lahf
sbb
loop
inc
cmp
rcll
pushl
jg
mov
call
aam
addr16
mov
dec
sbb
faddl
iret
cmpsl
int
cmp
mov
clc
sub
imull
push
sti
cs
adc
lods
repz
adc
shl
inc
out
push
push
or
outsb
mov
xchg
mov
in
push
lcall
bndstx
mov
bound
inc
sub
ficomps
notb
mov
jbe
xor
pop
shlb
adc
dec
dec
xor
cvtps2pd
in
add
cmpsl
jbe
div
divb
xchg
in
cmp
fistpll
out
sub
push
call
add
jne
mov
js
imul
sub
sbb
cmpsb
lret
mov
xchg
xor
push
pop
nop
sbb
fists
gs
sbb
jae
clc
std
xor
fsubrl
pusha
ja
jmp
xchg
mov
inc
out
shl
push
cmpb
imul
pminsw
or
mov
cmp
cmpsb
aad
fs
sahf
enter
lahf
adc
pushf
stos
ljmp
add
pop
xchg
pop
stos
mov
stos
xchg
and
pop
cmp
sub
fimull
orl
push
xchg
nop
xchg
movsb
cmp
dec
mov
fwait
test
lret
pop
fstpl
mov
xor
jo
test
lahf
dec
wrmsr
fisttpl
scas
fnstenv
fs
cmpsl
dec
sbb
lods
push
dec
sub
enter
fadd
int
aam
push
mov
and
std
outsl
dec
js
mov
mov
push
aad
mov
mov
pop
ja
and
pop
sub
repnz
or
rclb
add
jmp
push
add
pop
sar
pop
push
mov
inc
sarl
dec
dec
pop
xor
jle
arpl
dec
movsl
xor
int
push
xchg
insb
push
mov
cmp
xor
mov
jne
push
mov
sar
jmp
pop
and
jp
cmp
and
test
repnz
sbb
xchg
cltd
inc
loope
adc
xlat
test
pop
push
insb
jno
add
in
test
pop
rolb
repnz
sahf
mov
or
pop
mov
fucom
sub
std
gs
sti
fistps
cli
inc
into
str
aas
dec
leave
imul
rcll
arpl
aas
dec
sbb
sti
divb
pop
dec
add
inc
or
call
dec
cmpsb
mov
gs
cli
dec
je
cmpsb
pop
test
inc
and
ss
jl
cmp
xor
fucomip
mov
mov
ret
xchg
insb
xlat
xchg
push
pop
aad
sbb
mov
cmc
fcmovu
adcl
lods
mov
cmp
jmp
jb
push
inc
xchg
xchg
in
cltd
and
rcrb
and
insb
xor
mov
cmp
jg
and
loope
lcall
cmp
or
mov
sbb
inc
stc
test
pop
fstpl
push
xchg
and
mov
add
js
hlt
cmp
mov
gs
jmp
mov
push
nop
sub
mov
jno
add
repz
outsb
sub
inc
fimuls
loope
push
jg
shll
lods
mov
jns
and
inc
cmpb
cli
sub
jnp
jg
jecxz
sub
sub
idiv
sub
lds
mov
das
dec
pop
mov
mov
cmp
popa
setns
xchg
frstor
daa
imul
scas
adc
inc
mov
into
stos
sti
mov
mov
fimull
loopne
cmp
inc
add
pop
push
lahf
inc
shrl
xchg
test
mov
in
sarb
push
push
call
fistps
xchg
push
fiaddl
jo
inc
or
mov
lods
out
pop
sbb
mov
push
xor
inc
xor
test
adc
sub
push
pop
push
out
ret
movsl
inc
loopne
mov
inc
andnps
lahf
mov
cwtl
scas
inc
ret
stos
shlb
adc
mov
push
fwait
push
rcrb
fisttpl
insl
lods
add
inc
mov
xchg
and
rep
jo
and
enter
cmc
sti
xor
push
add
jb
lds
sbbl
jne
insl
pushf
neg
sub
ss
add
icebp
jnp
mov
jl
pop
jp
subl
nop
sarb
hlt
out
fwait
xchg
mov
mov
mov
xlat
mov
ret
ret
jge
cmp
mov
push
and
xchg
jecxz
outsl
cmc
out
fstpt
mov
pop
das
push
dec
dec
jmp
aam
mov
lret
out
dec
ret
shrb
into
add
cltd
in
dec
movsb
iret
pop
mov
and
pop
push
dec
xor
mov
push
push
ja
jnp
idivb
rol
cmc
lcall
jmp
repz
jae
push
hlt
loope
mov
insb
pop
imul
lret
stc
nop
pop
stos
mov
pop
outsl
xlat
jo
pop
out
and
lods
mov
pop
push
or
ret
test
stos
stc
push
dec
sub
dec
and
test
mov
test
sbb
cmp
pop
mov
add
sbb
clc
mov
mov
dec
mov
or
sub
testb
enter
dec
loope
cmp
cmpsl
std
xlat
xor
xchg
inc
inc
into
mov
adc
fsubl
btr
lret
repnz
xchg
popa
rclb
mov
fldl
sbb
sub
test
aad
lret
ret
fdivr
sub
bound
inc
pop
mull
divl
rcrl
mov
cltd
cmp
ret
add
imul
inc
push
xchg
in
xchg
orl
cmp
sbb
push
mov
xlat
xor
xor
jecxz
imul
into
mov
cmp
les
ds
and
test
maskmovq
divl
xlat
and
xchg
ljmp
sub
push
xchg
leave
xchg
pop
mov
or
dec
xchg
aad
aas
imul
les
outsl
add
mov
mov
lahf
jb
ret
andl
pushf
dec
cmc
ret
adc
inc
cli
movsb
cli
gs
pop
sbb
mov
xor
adc
jbe
dec
push
jg
inc
mov
pop
mov
cmp
jno
stc
sbb
shll
inc
and
arpl
addb
dec
push
xchg
das
dec
cltd
and
jne,pn
xchg
inc
sub
fcompl
jne
jl
js
in
mov
inc
dec
movsb
cmpsl
into
inc
mov
loop
or
dec
sub
std
sbb
sahf
lds
sbb
xchg
ja
lods
xchg
stos
ss
add
xor
cmp
push
inc
fldenv
add
clc
cmp
jo
outsb
call
add
imul
stos
push
and
aaa
mov
push
lret
xchg
and
sarl
rcrb
push
arpl
movsb
jmp
push
pop
adc
out
lods
cwtl
outsl
pop
mov
push
xor
in
cld
jecxz
jp
push
sbb
xchg
add
outsl
xlat
jne
aam
call
mov
push
mov
and
add
mov
addb
xor
push
mov
stos
icebp
jge
xchg
das
dec
jle
and
shll
jns
xchg
sarb
cltd
jge
out
xorl
add
mov
jecxz
lock
imul
hlt
pop
in
xchg
clc
or
out
iret
push
xlat
dec
sbb
fisubl
rcr
test
mov
rorb
js
mov
push
mov
out
scas
mov
pop
push
and
leave
bound
mov
sub
jbe
inc
inc
pop
outsb
loop
int
xchg
idivl
dec
mov
jno
push
gs
add
add
insl
xrelease
mov
mov
gs
mov
lcall
dec
mov
cwtl
in
mov
jmp
mov
jae
pushf
cli
push
mov
fldt
pop
in
xchg
fcoms
dec
push
push
stc
and
aad
insl
mov
mov
in
fmuls
xor
mov
xor
jl
sub
loopne
add
inc
sub
inc
push
sub
mulb
stc
out
cmp
jo
aad
popa
pushf
xchg
cmpsb
popa
and
or
jle
hlt
mov
xchg
pop
jb
verr
cmp
ret
sub
xor
jns
in
test
pop
aam
jg
pop
divb
push
pop
sti
xchg
repz
mov
adc
cmp
or
cli
push
stos
in
mov
dec
clc
xchg
sbb
sub
jns
rorb
insl
jbe
sbb
mov
mov
in
dec
jge
sbb
call
les
sub
sbbl
outsl
hlt
lock
sub
test
enter
sbb
push
jnp
inc
push
sbb
sahf
sub
sbbb
enter
xlat
pusha
fwait
jno
adc
jnp
lret
pop
arpl
push
fistl
in
dec
popa
push
xchg
cmp
cmp
out
mov
cltd
xchg
sub
jb
dec
push
push
ficomps
xchg
inc
lcall
push
fld
sbb
jecxz
sbb
call
repz
jo
je
mov
and
lea
mov
pop
rorl
arpl
pop
mov
xchg
cmp
push
pusha
or
cmp
out
insl
adc
and
daa
test
pop
data16
lcall
mov
jg
adc
out
jg
pop
dec
stos
pop
scas
stos
cmp
popa
stc
mov
pop
adcl
imulb
mov
js
loopne
dec
add
lods
aas
das
ret
jp
xchg
in
addl
cmc
adc
and
movsl
xchg
push
movl
ret
pop
inc
ficoml
loop
mov
mov
aas
xor
dec
in
inc
faddl
lret
fwait
int
add
jecxz
loope
mov
push
fnstsw
xlat
repnz
or
dec
cmp
pusha
stos
rcr
ljmp
cld
mov
in
cmp
inc
xchg
pop
xadd
out
mov
jb
aaa
loop
cmp
xchg
mov
and
dec
stos
xor
stos
push
out
mov
or
dec
fucomp
ss
or
jae
adc
mov
xchg
icebp
xchg
sub
int
rorl
pmulhuw
xorb
out
mov
xor
jo
mov
lret
fdiv
scas
jle
inc
repz
sbb
in
ffree
je
imul
fiaddl
test
adc
and
cmpb
sbb
and
hlt
pusha
xchg
add
fstpt
cli
daa
sub
fisttpl
mov
push
test
mov
sbb
daa
insl
xor
pusha
lret
imul
push
mov
andl
jecxz
addl
xchg
int
ds
mov
pop
xchg
subb
ss
inc
xor
push
movsl
jnp
fcmovnbe
pop
mov
sub
stos
sub
ret
in
outsl
and
movsb
lret
xchg
enter
aad
add
mov
inc
push
adc
hlt
xchg
in
inc
stc
xorl
or
test
in
xor
add
in
pusha
mov
and
fdivrp
js
push
or
mov
sub
sub
idivb
push
or
arpl
lock
and
mov
jne
or
scas
jp
insb
cs
movsb
shl
inc
inc
xor
push
mov
mov
ja
call
inc
cmp
mov
add
push
outsb
jg
and
sbb
stc
pop
movsb
popa
das
jnp
pop
and
jl
pop
push
jno
rolb
mov
inc
push
in
push
mov
lcall
test
dec
and
mov
mov
xchg
sbb
ret
ret
imul
mov
cld
mov
pop
aam
jnp
sbb
xchg
out
aas
cmp
lahf
mov
stc
stc
sti
cli
test
sub
dec
pop
mulb
or
pop
inc
ret
mov
sub
in
nop
inc
outsl
jg
aad
mov
sbb
jae
lret
push
sti
les
out
jp
and
es
repnz
pop
pop
enter
clc
jmp
jae
pop
mov
and
rolw
jp
aam
pop
outsl
fcomi
outsb
test
fiaddl
pop
cld
pop
pushf
push
inc
and
ftst
je
fidivrl
fstpt
nop
xchg
ljmp
icebp
jge
mov
outsl
cs
sti
roll
xor
nop
push
sub
xchg
lea
mov
xchg
gs
sbb
lret
shll
add
leave
xor
fimuls
das
xchg
or
inc
xchg
insb
pop
xor
mov
pop
pop
mov
xor
lcall
das
stos
cmpl
leave
sbb
inc
in
fisubrs
push
push
leave
adcl
adc
or
imul
enter
div
fs
popa
fldl
imul
in
sbb
ret
les
pop
cltd
ds
lock
js
pusha
pcmpeqd
mov
call
xor
sar
lret
leave
adc
arpl
std
mov
sbb
cld
ljmp
sarl
pop
cmp
lcall
aad
fistps
shl
dec
data16
loop
xchg
mov
cwtl
xor
int
cmpsl
dec
pop
shr
cld
jecxz
mov
dec
pop
pop
loopne
aam
or
stos
data16
popf
cmp
sbb
adc
jb
popa
shll
cmp
jecxz
addr16
mov
push
sbb
mov
jo
pop
dec
xchg
mov
jp
dec
shl
jp
cld
jbe
call
push
adc
mov
imul
fimull
insl
add
mov
add
mov
fcoml
push
int
cmc
xchg
mov
lods
fstp
inc
mov
dec
aam
pop
push
mov
lea
clc
in
imul
popa
jl
gs
adc
push
loopne
pop
cs
rolb
push
adc
in
lret
push
mov
pop
fcom
jns
dec
push
or
nop
xor
int
loop
subb
fistps
jae
add
mov
xchg
inc
cwtl
adc
push
add
mov
xlat
sub
imul
mov
jnp
nop
imul
adcl
mov
pop
or
lock
xchg
insb
sbb
jns
jo
dec
sbb
shl
pop
imul
pop
mov
rorb
ja
into
mov
dec
push
incb
xchg
stos
rcl
imul
and
gs
lds
mov
lods
out
inc
or
xor
mov
outsl
dec
lods
pop
add
das
xchg
xchg
adc
xor
inc
mov
ds
xchg
out
adc
jge
xlat
mov
jg
pushf
fwait
scas
xor
dec
int
mov
ljmp
xor
fldcw
call
aas
pusha
mov
push
icebp
shlb
shl
pop
sub
jno
cmp
ret
and
pop
pop
ss
scas
sub
mov
push
xchg
adc
pusha
repz
loop
sbb
adc
dec
jmp
adc
cmp
xchg
fwait
bound
into
cmp
mov
and
jle
fldl
movsl
mov
out
std
adc
inc
pop
sbb
mov
in
aas
sub
xchg
cmp
pop
adc
push
movsb
imul
fwait
out
ret
stc
cmp
sarb
imul
mov
jne
dec
mov
sbbl
imul
pop
cmpb
lods
ret
fdivl
jnp
test
jl,pt
lods
xchg
sbb
mov
pop
dec
out
test
push
imul
popa
mov
mov
jg
jnp
push
mov
dec
jno
pop
inc
imul
mov
sbb
or
clc
mov
pop
imul
fmull
repnz
jmp
adc
mov
add
jge
dec
stc
es
adc
or
mov
cmp
lcall
jg
mov
js
xchg
in
out
sahf
mov
push
push
or
or
xor
sub
and
jg
xor
std
iret
ret
cmpsb
or
scas
mov
aam
ja
gs
into
das
mov
push
cmp
cmp
pop
ss
and
pushf
add
dec
or
cs
and
xchg
fildll
shll
sbb
loop
idivb
adc
insl
in
lret
or
int3
sub
push
cmpsl
stos
or
pmaxub
pop
aam
loope
mov
and
mov
jecxz
sub
mov
fisttpl
in
add
popf
pop
cltd
add
dec
push
pusha
mov
dec
dec
xchg
in
vsqrtss
in
je
sti
pop
fcmovne
xor
jno
cmp
lret
ret
insl
mov
jl
push
mov
jbe
push
out
mov
mov
out
jle
inc
repz
mov
dec
xchg
out
repnz
xchg
fcmove
push
jns
aad
sbb
push
mov
mov
jmp
popl
add
cmp
mov
scas
and
cmp
fstps
add
sahf
scas
mov
mov
cmp
into
popa
in
sub
xchg
xchg
inc
push
xor
sbb
mov
mov
jecxz
js
lods
lcall
cltd
xchg
mov
and
outsl
sbbb
psrad
shrb
ret
iret
and
adc
add
push
scas
inc
pop
mov
mov
pop
repnz
aas
shrb
ret
iret
and
adc
add
push
scas
inc
pop
mov
mov
lahf
repnz
aas
shrb
and
adc
push
lahf
jb
bound
mov
cmpsb
jg
outsl
sbbb
psrad
shrb
add
xor
mov
out
jne
cli
lcall
push
mov
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
jmp
lea
push
pushl
call
lea
push
pushl
call
jmp
call
push
mov
call
xor
leave
ret
addr16
imul
dec
sub
inc
or
jb
out
mul
fcmovnbe
lret
cmpsl
mov
xchg
mov
ja
inc
pop
push
dec
daa
cmp
sub
sbb
outsb
out
imul
mov
xlat
lret
cmpsl
fidivs
mov
ja
inc
pop
push
dec
daa
cmp
sub
sbb
or
sti
test
iret
std
aam
leave
stc
cld
cs
ja
xor
and
les
sub
subb
fimuls
xlat
dec
in
jnp
jnp
xor
or
xchg
loope
adc
fsts
and
ficomps
mov
ficompl
mov
mov
es
sar
out
popf
ljmp
ds
loop
push
inc
and
jbe
xor
sbb
stc
adc
out
out
dec
sbb
fisttps
out
xchg
mov
movsb
outsl
inc
pushf
mov
les
dec
push
or
add
xlat
and
lret
sub
mov
repz
dec
jge
in
inc
fbstp
clc
xchg
pushf
xorb
xchg
xor
stos
mov
xchg
ja
inc
pop
push
dec
daa
cmp
sub
sbb
or
sti
imul
fcmovnbe
lret
cmpsl
mov
xchg
int
jnp
adc
sbb
or
jle
bound
jg
mov
repnz
mov
in
ret
jmp
add
sub
pop
outsb
pop
dec
pop
and
xchg
cmp
push
cmp
cmp
ds
xor
or
sub
sbb
or
sti
imul
fcmovnbe
lret
cmpsl
mov
xchg
mov
ja
inc
pop
push
dec
daa
cmp
sub
sbb
or
sti
imul
fcmovnbe
lret
cmpsl
mov
xchg
mov
rolb
xor
mov
into
leave
test
add
add
xchg
sbb
push
xor
xchg
jne
and
xor
and
test
xorb
cmp
aaa
aaa
inc
mov
sub
mov
push
bound
push
mov
bound
dec
repz
mov
test
jg
and
inc
sbb
lea
push
clc
pop
push
daa
jno
and
ficomps
sub
pop
outsb
fisubs
and
push
sbb
pop
mov
hlt
push
cvtpi2ps
stc
inc
sti
xchg
inc
dec
in
into
lds
hlt
nop
xchg
ds
insl
xchg
fdivrl
mov
in
push
xor
dec
loop
jp
push
inc
inc
cli
add
mov
mov
sbb
das
inc
ds
cmp
mov
jmp
pop
pusha
leave
xlat
filds
adc
cs
dec
cmc
xchg
mov
daa
sub
cmp
cli
jg
and
xchg
pop
mov
je
xor
in
lods
aas
lds
mov
fsts
cmpsl
cmp
lock
lahf
shrb
imul
dec
shll
sarb
addr16
sti
jo
out
addl
arpl
leave
dec
jbe
mov
pop
outsb
cmp
aaa
cmp
in
xchg
push
dec
mov
push
sub
and
inc
push
test
xor
ret
iret
lds
and
xchg
std
rcrb
leave
add
or
push
inc
and
stos
jle
mov
cmp
addr16
pop
push
fnsave
cmpsl
adc
rcrl
and
rcl
mov
ljmp
xlat
jbe
sbb
test
es
std
inc
dec
js
nop
cmpsb
loope
mov
nop
test
aad
loopne
inc
adc
xchg
or
cmp
xchg
je
and
lock
movsl
xchg
pop
cmc
js
iret
les
sub
ja
stos
push
test
cmp
rolb
push
sbb
stc
nop
pop
roll
cli
sbb
xchg
cmpsb
mov
rorb
pusha
sbb
es
iret
repnz
repnz
adc
pop
loop
adc
push
in
cmc
lahf
and
rcrb
xchg
sbb
mulb
addr16
mov
dec
and
and
adc
in
dec
or
pusha
xchg
rorl
hlt
xchg
dec
jmp
cmc
dec
aaa
mov
inc
push
mov
dec
mov
in
xchg
aad
ret
mov
sbb
repnz
mov
aam
in
shl
xchg
mov
cwtl
sti
inc
lds
cmp
addl
mov
fsubl
xchg
sub
mov
adc
faddl
sbb
int3
pusha
cmp
addb
pop
mov
mov
outsb
lea
dec
addr16
fxch
sub
dec
fnsave
std
inc
sub
imul
pop
sub
sbb
dec
jl
idivl
bound
pop
sbb
arpl
mov
push
jae
popf
push
lock
mov
lret
es
jno
test
loopne
xchg
cmp
test
gs
xor
clc
sub
jae
mov
daa
or
jp
fiadds
jl
sbb
jo
add
icebp
push
mov
dec
xchg
sub
push
mov
fdivl
xchg
into
out
and
cltd
mov
mov
aad
jecxz
mov
cmp
lahf
test
pop
lods
xchg
mov
decl
andps
movsbl
je
lock
cld
lds
aas
int
frstor
imul
rolb
push
and
and
cli
out
pop
data16
cmp
mov
jmp
mov
loop
nop
jmp
add
push
cli
sbb
push
lods
pop
stc
mov
xchg
cli
mov
jbe
adc
mov
std
push
jno
sub
jmp
pop
and
rorl
jb
pop
mov
and
shrb
int
or
out
xchg
divb
fdivrs
push
mov
into
cmp
test
in
sbb
lds
lock
pop
pop
or
or
cmp
cmp
or
sub
movsb
add
sbb
insl
add
ljmp
dec
cmpsl
int3
sbb
fs
in
shll
aad
jmp
mov
and
jbe
clc
dec
in
jbe
mov
mov
rorb
push
clc
mov
push
sarb
dec
fisubl
mov
xchg
aam
fwait
icebp
add
ds
aaa
adc
movsl
push
sbb
xchg
in
xchg
inc
daa
xchg
mov
sub
adc
out
ja
dec
fstps
inc
adc
iret
dec
and
add
sub
or
adc
push
dec
in
sbb
lock
std
stc
add
cmp
fidivl
mul
insl
sar
jnp
data16
js
cmp
loope
adc
sub
js
js
push
test
cmpsl
cmp
lock
frstor
mov
mov
mov
mov
insb
jl
movsl
mov
mov
nop
enter
test
std
mulb
or
mov
xor
call
movsl
xchg
hlt
jecxz
inc
add
addl
mov
xchg
mov
adc
std
mov
notl
xor
adc
add
inc
js
shl
cmpsb
dec
iret
nop
sbb
jae
push
push
ja
pop
jno
sbb
imul
push
stos
clc
shlb
jae
xchg
insl
add
or
data16
pop
mov
push
loopne
push
int
movsb
ret
xchg
daa
mov
cmp
ds
cmp
adc
ficoml
xchg
test
push
cli
leave
cmc
pop
mov
loopne
add
sbb
cmp
adc
mov
or
call
cs
xor
xorl
popl
into
cltd
aad
add
mov
mov
pop
movsb
inc
push
pop
incl
mov
shrl
cmp
push
pop
adc
pop
mov
push
popf
jae
fcoms
test
mov
lea
in
lock
data16
addr16
aad
insb
in
loopne
jecxz
std
outsl
test
scas
repz
loop
xlat
mov
jmp
push
mov
cmp
sub
notb
ds
inc
lds
sub
or
dec
int
punpcklwd
mov
sbb
out
pop
or
inc
inc
leave
jbe
jl
adc
mov
scas
rolb
fbstp
dec
dec
lods
ffreep
push
lcall
inc
cltd
cmp
sub
fidivrl
scas
test
addr16
lcall
repz
dec
inc
jmp
pop
inc
aas
mov
xor
fs
lcall
dec
jecxz
sbb
or
bsf
xor
das
rcrl
sbb
loop
xor
mov
int
dec
faddl
mov
mov
xchg
aaa
decl
pop
mov
and
ret
xlat
mov
dec
add
inc
xchg
jne
icebp
jecxz
lret
in
mov
cs
bound
insl
mov
xor
incb
push
cmp
adc
sbb
sbb
movsb
mov
cmp
and
xchg
adc
mov
in
push
scas
lret
lret
add
fsub
js
xor
pop
repz
sbb
mov
push
int
cmp
cmp
xchg
inc
lahf
fldenv
faddl
pop
adc
push
inc
mov
loopne
pop
jns
add
lds
pusha
lea
and
add
lea
sahf
mov
pop
inc
jne
push
and
or
mov
jne
out
inc
jle
adc
in
jns
decl
add
push
sbb
cmp
int3
sbb
mov
mov
push
jae
stos
inc
xor
nop
sub
add
inc
rorl
and
push
movsb
js
xchg
outsl
mov
xchg
add
test
push
xchg
add
int3
xchg
out
mov
iret
mov
push
js
subl
clc
sti
lock
dec
or
cld
ret
pop
sub
icebp
push
sarl
fwait
out
out
psrld
repz
and
lea
hlt
push
cmc
jg
lret
or
ja
shlb
fldt
jno
stc
mov
aam
insb
mov
sbb
xorb
lock
fildl
test
rep
test
bound
mov
xlat
je
xchg
test
mov
mov
ficompl
lret
jge
fs
imull
mov
in
xor
mov
ss
mov
cmp
sub
shl
idivl
shlb
cmp
imul
pop
ror
mov
mov
cmp
sbb
jno
popa
push
ftst
dec
popf
aad
in
xor
sub
insl
jnp
cmp
daa
jmp
add
ds
jl
stos
lcall
jge
daa
mov
sar
jg
cltd
dec
mov
sub
jbe
jg
fnstenv
sub
pop
lock
mov
sbb
adc
dec
sarb
inc
jo
test
push
bound
sub
jp
out
pop
loop
add
rcrb
xor
xlat
fsts
push
pushf
stos
mov
push
push
dec
sub
clc
je
add
test
fisttpll
mov
xchg
mov
mov
lret
pop
rorb
mov
or
push
test
enter
sahf
dec
adc
cmp
sub
jae
push
and
sahf
xchg
cld
enter
push
insl
je
add
hlt
fsubp
jns
pop
mov
cmp
pop
enter
cmp
faddp
inc
imul
insl
lret
dec
scas
movb
mov
mov
pop
fcmovne
cmp
out
xor
dec
bound
out
sub
mov
adc
enter
mov
push
push
je
mov
xchg
aaa
push
stc
jbe
lahf
inc
pushf
dec
daa
out
jp
xchg
push
xlat
xchg
mov
jge
xchg
lds
pop
cmp
test
popl
adc
jns
rep
mov
inc
pop
jb
and
inc
out
sub
cwtl
or
out
sub
daa
fwait
and
inc
mov
sahf
iret
xor
stc
fs
cwtl
cmp
push
aad
cltd
cmovbe
mov
push
stos
popa
mov
ja
push
pop
adc
or
or
out
mov
aam
fbstp
call
in
movsl
push
adc
mov
ljmp
pop
enter
rcrl
dec
stos
mov
inc
or
ret
fnstsw
mov
stc
in
imulb
ljmp
pushl
std
mov
adc
lds
movsb
pop
ja
mov
pop
xchg
xchg
push
scas
rorl
push
jbe
fildll
dec
mov
fsubr
xor
dec
fldt
fs
mov
push
ret
and
push
mov
mov
cltd
push
bswap
jmp
xor
addr16
cmp
lret
ret
imul
aad
dec
shll
dec
lret
test
cld
mov
sbb
std
negb
loop
popa
mov
adc
dec
xchg
loop
pop
out
push
pusha
lcall
fisubl
insb
imul
outsb
inc
cmp
push
mov
fimuls
enter
sub
inc
mov
xor
dec
cmp
in
pushf
or
fisubrl
negb
out
and
insb
leave
cmp
pop
xchg
sub
cld
in
insb
pop
outsb
arpl
lea
rolb
or
sbb
xor
scas
popa
in
test
jb
or
sarl
sahf
sbb
shll
subl
sub
sbb
dec
pop
sub
pop
adc
out
mov
sub
pop
push
mov
jg
sarl
jbe
pop
push
mov
lods
jg
mov
adc
scas
lahf
aad
rorb
cmp
jge
jl
test
cmp
pop
daa
and
cmp
add
xchg
je
xor
sub
push
or
jb
sahf
jae
nop
pop
sbb
dec
data16
mov
sub
mov
and
lods
test
inc
dec
and
repnz
sub
mov
inc
data16
dec
push
cli
sarl
mov
int3
subb
and
push
lret
sbb
push
dec
test
scas
enter
dec
test
pop
enter
ret
push
aaa
aad
test
cmp
imulb
xlat
or
xchg
adc
mov
push
or
fcmovnb
adc
ret
push
pop
lahf
mov
adc
mov
imul
push
pop
sub
fs
leave
jg
fdivrs
jo
cli
filds
scas
push
mov
out
lret
fdivrs
add
or
or
and
add
insb
pop
hlt
inc
push
pop
xor
gs
lahf
pop
es
xchg
ljmp
mov
out
and
sub
push
push
out
jnp
hlt
xchg
popf
rcll
xchg
sub
dec
mov
mov
push
dec
dec
std
push
movsb
clc
popf
daa
movsl
fsubs
inc
or
cmp
cwtl
cmc
mov
jno
test
adc
out
mov
test
xlat
fstpl
xor
ss
pop
mov
ret
cmc
shlb
lea
ljmp
jle
pop
dec
push
dec
push
cmp
mov
sbb
pop
aam
adc
ret
or
pusha
xor
mov
lret
and
ret
dec
mov
je
pop
fsubrl
es
xor
inc
sub
cmp
xchg
inc
rorl
divb
leave
outsl
jge
sbb
lock
orl
jp
out
cmpsl
inc
imul
pop
mov
dec
lea
lods
xchg
cld
pop
mov
or
lock
jb
in
sub
jno
sub
or
das
popa
cmc
cmp
mov
ret
roll
xchg
cmpsb
pop
lods
ljmp
adc
dec
xlat
push
push
cmp
fcomps
stos
loope
fcmove
push
dec
mov
and
loope
call
jne
pop
bound
pop
into
stos
scas
mov
addr16
xchg
xchg
mov
fucom
nop
pop
mov
mov
sub
push
outsl
imul
inc
out
push
daa
lds
cmpsb
dec
movsl
fmull
mov
test
jns
jl
adc
leave
faddp
xchg
xchg
sbb
jmp
repz
sub
scas
enter
jge
in
dec
push
fdivs
xchg
fisttpll
mov
inc
and
popa
mov
stos
xor
ror
xor
sahf
aas
mov
push
aad
sbb
sbb
sub
es
hlt
pusha
addr16
push
mov
pop
call
mov
test
les
fadds
mov
xor
jo
movsl
xchg
in
push
inc
fdivr
cwtl
je
xchg
sub
shlb
mov
xchg
sub
in
cmp
xor
fstpl
jne
sbb
sub
pop
repnz
push
xchg
jl
sbb
jecxz
incl
mov
xchg
sub
inc
jmp
out
sbb
inc
sbb
or
cmp
adc
xor
je
ror
loop
pop
testb
push
sbb
dec
das
subb
aam
add
add
xorl
and
inc
jb
jo
mov
push
insb
out
or
fstpl
xlat
repz
jmp
dec
xor
xor
hlt
in
movl
outsl
jb
pop
or
xchg
scas
scas
fs
mov
push
daa
int3
and
cli
push
cmpl
or
or
xchg
sub
cmp
paddsb
xchg
or
aam
div
jb
jle
cs
mov
std
clc
pop
pop
cmc
aad
xor
cmp
jl
dec
lret
mov
xchg
xchg
sub
into
jecxz
clc
inc
push
sbb
pop
repz
push
inc
mov
add
add
lahf
mov
and
mov
in
cli
ds
add
cld
add
mov
mov
sub
mov
sbb
and
mov
stos
popf
xor
mov
inc
pop
sbb
ds
mov
pop
lods
movsl
sbb
nop
pop
sub
mov
or
pushf
pop
inc
inc
out
mov
mov
pop
mov
mov
push
arpl
jo
sbbl
sbb
fidivs
rcrl
cmp
lahf
jmp
pop
xchg
ret
mov
and
popa
inc
fwait
aad
mov
add
fimull
mov
fstpl
fcmovnu
cmp
call
sub
adc
sub
or
clc
jb
mov
call
or
and
mov
into
mov
mov
push
je
arpl
daa
scas
lahf
push
movsb
sub
push
mov
mov
call
adcb
stos
neg
adc
pop
cmp
adc
mov
inc
in
xchg
xor
arpl
push
and
sbb
testb
fwait
xchg
add
or
push
push
mov
jbe
rorb
adc
ss
mov
sub
sbb
daa
movsb
pop
push
insb
adc
inc
jns
dec
jnp
sub
mov
jecxz
inc
add
loopne
push
daa
aam
je
sub
mov
roll
pop
lahf
pop
insb
jl
je
orb
adc
scas
lcall
push
push
pop
loop
clc
jl
mov
insl
in
ret
das
arpl
push
adc
mov
dec
gs
mov
ds
jmp
pop
dec
push
aaa
and
pusha
xor
loop
std
pop
mov
push
pop
lods
sub
and
addl
out
sbb
or
and
lods
mov
leave
pusha
sub
leave
sbb
mov
pop
push
inc
mov
push
imul
movsl
ret
int
xchg
dec
ja
mov
lret
xchg
arpl
sub
jge
fcomps
sahf
and
cwtl
loope
inc
xchg
cmp
adc
push
aad
js
movsl
and
lret
aaa
stos
xor
jecxz
add
jno
nop
push
xchg
add
cmp
xchg
sbb
jl
int
cld
pop
int3
add
gs
jb
pop
lcall
push
mov
mov
xchg
dec
in
adc
push
dec
cmp
sub
mov
and
es
adc
inc
imul
call
mov
mov
pop
add
xlat
push
inc
sbb
jne
inc
adc
jle
lahf
aam
data16
cmp
mov
popa
cmp
js
fldt
std
push
jno
add
xor
lds
jle
leave
fmul
push
sbb
lcall
push
in
pop
rclb
cmpsl
outsl
stos
or
or
inc
jl
cwtl
out
pop
sub
push
pop
ljmp
out
data16
negl
fisubrs
mov
addl
xchg
mov
daa
daa
je
xor
push
jns
pop
dec
adc
into
xchg
test
add
adc
dec
in
es
push
jg
mov
and
lcall
les
arpl
les
imul
scas
adc
dec
adc
test
arpl
xchg
in
pop
xchg
in
leave
ret
es
inc
into
sahf
into
and
in
je
mov
jg
mov
out
sub
jno
pop
sub
sub
ror
pushf
ret
mov
test
arpl
sarl
fistl
adc
pop
jne
mov
out
or
pop
pushf
cmp
out
insb
xchg
mov
in
lcall
adc
dec
cltd
clc
in
loop
dec
pushf
out
fwait
pop
mov
cmp
call
jecxz
in
dec
xchg
sub
sub
lods
movsbl
je
stos
mov
jbe
stos
jge
cmpsb
sbb
arpl
outsb
jp
or
dec
mov
mov
int
mov
aam
ljmp
fidivl
lahf
call
pop
dec
add
and
cld
jns
mov
lods
icebp
mov
movsl
xor
push
call
lds
rcrl
ljmp
loopne
rorl
cmp
xorb
and
pop
imul
add
fisttpll
imul
shlb
fwait
inc
cwtl
or
ljmp
or
xchg
sub
cmpsl
mov
pop
or
insl
ror
sbb
lahf
pusha
movsl
xor
into
add
push
lods
add
jo
hlt
insl
or
pop
sbb
or
repnz
jbe
adc
aam
adc
pusha
mov
jmp
and
cmpsb
aam
jmp
add
push
in
into
push
pop
cmc
fwait
mull
mov
lds
cwtl
aas
mov
into
mov
out
and
mov
jo
add
pop
mov
aaa
add
loop
ret
jmp
ljmp
pop
loop
push
lods
mov
out
testb
mov
aaa
pop
dec
sbb
xor
call
inc
push
pop
neg
jle
dec
cmp
popf
subl
push
cmp
lds
mov
xchg
push
sbb
ret
lret
mov
icebp
scas
sti
adc
adc
into
push
push
daa
sbb
lret
lret
fstpl
fidivl
and
mov
aaa
ljmp
sub
push
mov
imul
push
dec
daa
cmp
sub
sbb
or
sti
imul
fcmovnbe
lret
cmpsl
mov
xchg
mov
ja
inc
pop
push
dec
daa
cmp
sub
sbb
or
sti
imul
fcmovnbe
lret
cmpsl
mov
xchg
mov
ja
inc
pop
push
dec
daa
cmp
sub
sbb
or
sti
imul
fcmovnbe
lret
cmpsl
mov
xchg
mov
ja
inc
pop
push
dec
daa
cmp
sub
sbb
lret
out
testl
xor
push
js
push
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
insl
jmp
pop
fstpl
lods
adc
int
fstpl
sub
sbb
dec
int
lea
jge
inc
rcrl
add
sbb
push
push
inc
stos
xor
and
scas
hlt
insl
ficomps
sub
das
lods
jle
pop
sarl
jns
test
sub
int3
push
ficompl
push
addb
movsl
cmc
mov
push
in
out
cmpb
mov
cmp
bound
aam
xor
lods
bound
test
sub
xchg
mov
dec
push
mov
fstps
std
test
jns
sarb
sbb
callw
clc
mov
pop
push
cmp
popa
cmp
xor
mov
in
dec
cmp
int3
lods
sub
sub
lea
or
aas
dec
std
adc
sub
call
loope
ja
popa
fisttpll
pop
fnstsw
lods
sub
pmuludq
aad
dec
les
adc
das
add
sbb
pop
or
inc
clc
sbb
or
lods
push
push
jns
je
stos
sbb
and
cmp
scas
scas
or
or
pop
pushf
insl
lods
cmp
or
xor
mov
in
insl
std
jge
dec
fstpl
sub
popf
sbb
dec
int
lea
jge
dec
fstpl
sub
popf
sbb
repnz
xor
cmp
cs
fsts
or
stos
and
jmp
push
add
mov
push
jne
test
or
inc
mov
into
lret
add
or
adc
das
divl
decl
mov
out
ljmp
adc
jno
sub
outsl
insl
lahf
pop
imulb
out
and
mov
into
stos
imul
fiadds
fucom
cmp
dec
mov
jle
int3
cs
jno
sub
cmp
cmc
dec
jo
jge
movsb
push
sub
pop
xor
stos
push
dec
cmp
sbb
pusha
sub
js
insb
adc
mov
dec
iret
pop
inc
sbb
repnz
push
in
sahf
das
jae
aas
mov
inc
jns
sbb
lret
imul
mov
mov
xchg
xchg
lods
ret
adc
push
jns
mov
mov
dec
jmp
aam
addr16
movsl
daa
adc
rorb
ds
jp
pmaxsw
xchg
dec
int
jae
cltd
insl
xor
stc
fcmovnbe
pop
std
push
movsb
sbb
pop
cmp
mov
daa
xchg
add
lods
xor
cmp
mov
or
mov
cmp
pushf
sbb
mull
fdivrs
sti
jb
fisttps
mov
test
mov
ret
fxch
dec
shll
mov
and
lods
or
sbb
push
xchg
jmp
clc
add
sahf
xchg
cmp
mov
movsl
movb
push
fcmovu
std
dec
adc
dec
adc
mov
inc
dec
mov
add
add
sbbb
or
stos
jne
jle
fs
xchg
sub
pushf
xchg
add
imul
and
fcomps
stc
mulw
jb
push
xchg
test
dec
addl
push
repz
fwait
pushf
adc
sub
sub
mov
loopne
mov
jp
stos
je
cmp
pop
pop
into
push
pop
xor
dec
loop
jmp
dec
cmpb
mov
pop
sub
jns
movsb
jmp
shlb
filds
in
mov
insb
push
ret
mov
mov
and
adc
inc
pop
stos
imul
mov
add
and
lods
outsb
data16
imul
jle
add
popa
pop
add
or
test
ljmp
pop
dec
lcall
xchg
inc
sbb
inc
inc
add
movsl
ljmp
aaa
add
push
push
inc
test
and
xchg
and
lods
popa
pop
fsubrl
xor
add
fsubr
pushl
rorb
and
rorb
shr
movsb
decb
mov
and
cmp
dec
ss
aaa
push
iret
xor
sub
add
xchg
ss
sahf
pushf
pop
in
push
ficomps
aas
cs
xchg
push
sbb
jb
mov
mov
pop
inc
dec
fsubs
cs
inc
lds
mov
ja
sbb
mov
es
inc
ret
cmpsl
cmp
jno
jno
jmp
das
outsb
ja
lahf
ficoms
and
sbb
fwait
xor
adc
fstps
popa
xchg
dec
mov
in
popf
xchg
out
mov
das
lcall
loopne
repnz
pop
sub
gs
mov
add
int
mov
xchg
ss
and
mov
out
push
cmc
hlt
bnd
add
insl
inc
pop
push
data16
setge
test
pop
addl
pop
pop
out
inc
outsb
es
dec
inc
mov
cmpsl
mov
loope
pop
sub
push
or
mov
adc
lret
dec
lret
out
push
popf
orb
out
cmp
jbe
and
inc
pop
stc
test
es
rorl
cmc
and
jl
repz
pop
out
aaa
mov
mov
lcall
sub
movsb
test
add
push
add
sub
insl
push
jmp
and
jbe
adc
jmp
cmp
fstps
iret
dec
jno
rcrl
dec
inc
loopne
inc
into
sub
ret
push
jnp
test
push
addl
mov
fisttpll
add
dec
ficoml
fwait
mov
sbb
roll
rolb
dec
ret
and
out
lods
aas
xor
nop
pop
imul
mov
lret
loopne
testb
and
cmp
hlt
popf
je
scas
push
popa
mov
mov
push
xchg
mov
sub
lcall
xchg
scas
adc
sub
adc
cmp
push
xchg
or
mov
decb
rdtsc
mov
lock
cmp
rorl
imul
or
popf
jb
mov
cmc
pusha
mov
ja
push
sbb
sub
add
movsb
mov
mov
lahf
ret
cli
jg,pt
test
sbb
ret
clc
fstpt
cmp
jne
cli
mov
roll
mov
lock
push
jno
sbb
int3
cmp
jl
push
iret
adc
pop
or
pop
outsl
cld
mov
cmp
stos
push
jns
das
dec
jle
stos
addr16
or
in
jmp
mov
sbb
xchg
jg
addl
mov
pop
andb
stos
scas
mov
mov
jg
sbb
loopne
imul
or
outsb
rorl
fimuls
daa
shll
fucomip
jo
scas
push
repz
imul
xchg
test
imul
pop
mov
dec
ror
gs
adc
cmc
ds
adc
xchg
jge
xchg
out
andl
shr
inc
pop
lock
rcl
dec
add
inc
adc
or
cmp
xor
lahf
test
mov
insb
xor
dec
jno
add
sub
dec
cmp
push
mov
ret
icebp
push
int
and
lahf
imul
xchg
jle
xor
dec
pop
mov
jbe
fdivs
jne
dec
pop
shl
mov
jmp
add
jmp
insl
enter
push
cltd
int
xchg
das
fistpll
popa
push
push
xor
adc
out
sbb
ss
mov
cmpsl
ljmp
push
test
pop
add
xchg
pextrw
stc
jl
mov
and
and
mov
popa
push
cmp
ljmp
adc
or
add
aaa
pop
fnstenv
or
push
int3
test
mov
push
jmp
nop
jnp
addr16
mov
jmp
ret
inc
sbbl
or
sbb
les
mov
je
outsb
addr16
jae
xchg
cmp
adc
clc
adc
bound
imul
pop
xor
fld1
sub
mov
adc
mov
iret
in
ljmp
adc
rcll
and
dec
adc
xor
push
xor
cmc
int
js
jae
mov
cltd
xor
xchg
mov
test
popf
idivl
xchg
daa
aam
push
push
iret
pop
cmp
test
in
je
std
jecxz
movsb
mov
jge
xchg
jnp
rorb
mov
aaa
or
daa
mov
mov
test
jno
lea
hlt
push
xchg
dec
std
sub
aad
xlat
pop
das
lahf
dec
cmc
push
xor
add
or
or
les
and
push
jae
adc
adc
jno
dec
xchg
pop
bound
sub
lods
push
push
xchg
es
xchg
sub
xchg
and
and
loopne
int
xchg
mov
xchg
sub
pop
add
insl
xor
jo
and
fcmovnbe
push
stc
adc
rorl
in
mov
pop
cmp
clc
lret
insl
shlb
fisttps
mov
test
add
in
xorl
cli
fwait
inc
dec
leave
call
popf
fldenv
cmp
data16
add
push
sbb
or
mov
popf
outsb
xor
and
sbb
push
outsb
xchg
lcall
sub
jnp
inc
or
and
jp
stos
sbb
mov
movsl
push
sti
mov
fimull
lret
repz
sahf
add
jl
cmc
mov
inc
in
dec
mov
aas
cmp
js
gs
or
int3
dec
imul
pop
pop
insl
and
cmp
mov
jl
fcmove
sbb
notl
push
roll
ja
mov
jmp
jnp
mov
mov
add
xchg
mov
xchg
ret
sub
stc
test
data16
rcrb
in
add
aas
adc
sti
xchg
mov
sbb
sbb
popa
push
lea
fildl
push
nop
add
stc
cs
push
fcmovbe
jns
sbbl
scas
push
stc
fldenv
stos
jne
mov
test
push
andb
gs
les
sbbb
daa
dec
loope
hlt
aas
and
or
and
adc
leave
inc
add
inc
stc
insb
adc
jns
dec
push
sbb
pop
insb
fimuls
fidivl
add
ja
mov
arpl
and
rcrb
lds
mov
pop
and
sti
outsb
scas
pushf
pop
push
loope
push
into
xchg
jmp
xchg
cmp
mov
test
test
sahf
ja
and
dec
or
cmpsl
jg
enter
fmuls
icebp
push
loope
cmp
push
cli
adc
pusha
push
or
cmpsl
mov
cmpsb
pop
nop
notb
cmp
movsl
push
jge
jne
jg
mov
iret
movsl
mov
cmpsb
mov
lahf
adc
dec
and
pop
add
adc
arpl
movsl
jecxz
add
lea
mov
test
xor
jl
test
dec
fidivrl
inc
call
xchg
xchg
test
rol
fadds
cwtl
pop
mov
lret
mov
repz
mov
mov
xchg
jmp
les
jno
std
aas
int
add
xor
xor
es
cs
xchg
xor
fwait
test
pop
loopne
sbb
push
xor
inc
push
cld
push
xchg
mov
dec
cmpsl
aam
pop
push
jno
add
mov
mov
lods
inc
push
sbb
imul
xchg
xchg
fwait
int3
push
or
arpl
xchg
test
sub
add
cmc
sahf
mov
lahf
pop
loopne
hlt
std
dec
scas
or
scas
sub
dec
insl
and
in
pmovmskb
movsl
popa
xor
adcl
push
xchg
cwtl
inc
mov
mov
call
xchg
mov
sbb
adc
pop
and
mov
pop
jecxz
addr16
scas
xchg
or
cmp
nop
dec
jne
in
movsl
push
sub
sbb
xlat
mov
rcrl
pop
jmp
mov
mov
int
xor
xchg
push
jp
xchg
inc
sub
push
ficompl
push
stos
fucom
clc
xor
xor
daa
inc
inc
fiadds
in
outsb
cmc
mov
pop
or
dec
ds
adc
arpl
test
and
add
jecxz
pop
ss
int3
and
loope
imul
stos
sbb
les
xor
das
mull
push
arpl
sti
out
cld
lock
dec
pop
add
xchg
out
jg
lcall
insl
xchg
cli
and
pusha
iret
in
aam
fidivrl
mov
mov
cmpsb
xchg
repnz
std
and
and
sbb
sub
mov
pop
xlat
mov
fnstenv
mov
scas
ljmp
shrb
mov
mov
xor
push
int
out
addr16
mov
mov
cmpsb
mov
mov
int3
add
add
lods
push
push
bound
inc
mov
add
subl
in
popa
mov
pop
sub
loopne
ljmp
leave
sub
xor
in
loopne
or
testb
adc
punpckhdq
ret
xchg
das
dec
sub
adcl
cmp
xchg
shrb
fisubrs
cmpsb
es
ret
stos
cmp
add
iret
and
ja
icebp
dec
jne
xchg
pop
fldcw
mov
ljmp
or
push
inc
push
lret
pop
push
inc
rorl
adc
jnp
ljmp
dec
jmp
pushf
cmpb
insb
pushf
adcl
and
jo
xchg
into
fs
pop
dec
sub
mov
pop
pop
mov
jb
mov
jl
pop
ljmp
mov
out
out
lds
stos
jo
mov
lret
sub
test
sti
mov
clc
add
and
out
movsl
cmp
pop
mov
stos
outsl
lcall
mov
test
mov
push
lock
int3
sub
aas
xchg
cmpsb
fldcw
mov
repnz
bound
dec
fs
jmp
int
xchg
ja
xchg
sbb
aad
and
test
or
jecxz
cld
call
insl
or
push
hlt
lock
jl
dec
nop
xor
pop
mov
adc
pusha
mov
sub
sbb
push
test
xor
cmp
lahf
dec
inc
nop
fnstcw
cwtl
dec
subl
jb
jge
lods
xchg
mov
lea
mov
lret
mov
and
and
adc
fadds
lods
or
fldenv
sub
cwtl
fistpl
pushf
or
push
xchg
push
mov
jne
mov
lcall
imul
sub
ret
or
ret
adc
and
ret
sti
test
fiaddl
adc
lret
push
lea
xchg
or
mov
insb
and
int3
add
add
es
adc
fdivr
cmp
add
dec
xchg
roll
dec
in
bound
bound
test
dec
test
add
inc
test
aaa
loope
mov
mov
test
clc
je
push
shll
mov
mov
mov
adc
jge
and
mov
jl
mov
je
shll
mov
and
sbb
jle
call
icebp
push
mov
mov
outsb
sub
mov
pop
arpl
pop
insb
out
and
pop
subl
cli
into
cmp
pop
or
dec
arpl
add
cmpsb
in
leave
ds
add
inc
lret
rcll
cwtl
push
mov
jno
mov
xchg
mov
std
lret
and
mov
sbb
adc
idiv
ret
jo
call
xchg
fistpll
mov
push
jmp
outsb
orl
sbb
mov
stos
nop
ret
mov
push
in
xor
mov
cpuid
loop
test
pop
rolb
repz
sub
inc
movsb
aaa
cld
inc
clc
mov
jp
inc
xchg
push
xchg
push
scas
daa
dec
movsl
pop
js
jbe
mov
xchg
mov
fcmovb
or
jns
arpl
add
mov
adc
inc
fldt
cmp
and
or
dec
les
mov
inc
cs
adc
adc
jnp
enter
mov
and
or
negb
mov
mov
cltd
out
outsb
xor
mov
test
adc
push
or
xor
inc
jp
dec
scas
and
or
aad
pop
decb
mov
xor
fwait
mov
call
xchg
in
xchg
jns
mull
and
ja
lods
popa
into
push
popa
add
ljmp
je
xor
adcl
inc
mov
xchg
dec
dec
das
xor
aas
mov
sub
push
xchg
jae
xchg
push
lods
adc
add
cmpsb
mov
pop
repnz
xor
out
icebp
int3
jg
lock
cmp
jl
cmc
aas
fstl
pop
cmp
fimuls
sbb
jmp
mov
cmpsb
jo
lahf
std
jg
jne
pop
out
xorb
adc
leave
sti
aaa
leave
out
mov
xor
cmp
jae
push
inc
inc
pop
daa
sbb
pushl
or
mov
mov
jo
lds
sbb
aaa
jb
fnsave
pop
int3
xacquire
and
and
fdivl
rcl
out
cmpsb
cmc
xor
andb
les
push
stos
outsb
dec
mov
jnp
sbb
cmpsl
push
sti
dec
rcll
cmc
lods
jbe
push
fidivrs
sub
inc
fldt
and
in
push
sbb
inc
jae
sub
mov
cmpsb
repnz
arpl
xchg
lcall
js
xor
inc
inc
cmp
scas
lds
push
and
cmp
decl
inc
ss
inc
mov
inc
aam
pushf
setnp
in
adc
repz
jmp
jno
cmpsb
call
data16
mov
sbb
paddsw
outsl
push
xlat
and
adc
pop
dec
lret
push
into
push
hlt
loop
push
inc
mov
xchg
inc
mov
xchg
cmp
adc
jl
popf
icebp
jg
mov
dec
xchg
fnstenv
mov
loop
out
hlt
dec
mov
mov
aaa
pop
jo
mov
pop
mov
mov
mov
pop
cmp
dec
jb
xchg
mov
es
sahf
or
inc
push
lahf
mov
push
cmc
add
notl
ljmp
insb
lret
clc
test
cld
imul
mov
xchg
xchg
pop
xlat
add
push
pop
push
dec
clc
ja
data16
and
dec
popa
xchg
aaa
aaa
push
jnp
dec
mov
inc
mov
sbb
sbbb
popa
jno
pop
mov
ret
inc
aaa
push
cmpsl
mov
daa
popf
xchg
out
dec
or
data16
dec
cltd
adc
std
out
or
ret
jge
notl
push
pop
fisubrs
or
push
add
test
popf
arpl
insb
adcb
adc
pop
or
int
popf
cmpsb
int
mov
push
mov
sub
ja
push
lods
pop
sbb
sbb
mov
add
push
lock
cmpl
mov
out
mov
jl
mov
push
sub
mov
in
into
jecxz
inc
push
les
push
dec
loop
stos
cmp
out
pop
sti
daa
ret
mov
add
in
push
or
popa
mov
test
arpl
push
lcall
pop
xchg
xchg
arpl
sbb
push
xchg
add
and
dec
jge
scas
cmp
shll
xor
mov
frstpm(287
stos
arpl
into
daa
call
xchg
arpl
sbb
fs
cmp
in
dec
inc
hlt
rolb
out
fidivrl
sub
xchg
sbb
add
jns
jg
or
fidivs
dec
loope
sbb
mov
push
stc
or
mov
and
cs
sbb
sub
pop
mov
pop
in
or
mov
lret
jge
das
dec
inc
lods
jmp
dec
pop
test
xchg
cmpsl
lcall
mov
mov
iret
gs
out
roll
sub
add
and
scas
mov
jp
popa
mov
xchg
jmp
xchg
stos
xor
push
sub
addr16
lods
pop
sbb
dec
stos
jge
ret
pusha
lods
int
xchg
outsl
shlb
mov
lods
testl
jnp
cmpb
sub
cmp
scas
and
jb
pusha
out
mov
jmp
sbb
mov
mov
rcll
sbb
aaa
repnz
insb
sub
mov
cmp
aad
pop
adc
repz
jne
sbb
inc
cmp
xchg
lds
std
pop
jmp
cmpsb
aas
lock
iret
bound
mov
inc
out
ss
lcall
inc
jns
sbb
movsl
sarb
add
dec
jge
out
dec
sub
sbb
cmp
mov
dec
xor
loop
lods
dec
lcall
movsb
pop
jmp
fcompl
inc
push
outsl
cmp
aas
in
rorl
jb
and
inc
sub
jmp
cs
inc
inc
into
cmpsb
std
cmp
call
add
mov
sbb
xchg
sbb
out
sbb
in
adcb
ljmp
rol
mov
pop
mov
or
sbb
mov
or
sbb
mov
nop
pop
add
or
cmp
outsb
int3
js
dec
mov
jne
movsb
mov
cmp
inc
add
movsl
pop
push
pop
jmp
addr16
xor
das
pop
ds
xchg
fisubrs
cld
xchg
adc
cmp
lea
and
ret
rclb
inc
mov
incl
fs
ret
adc
push
xor
mov
ss
pop
jo
jne
mov
sbb
pop
add
test
insl
es
pop
add
xlat
jnp
orl
inc
enter
lods
cmp
popf
in
insl
std
jge
dec
fstpl
sub
popf
sbb
dec
int
lea
jge
dec
fstpl
sub
popf
sbb
dec
aad
fldcw
mov
jns
dec
fstl
mov
stc
insl
or
dec
sub
das
lods
cmp
pop
adc
ficoml
inc
jb
bound
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
hlt
add
mov
add
mov
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
das
cmc
add
sbb
add
adc
add
or
add
add
add
cld
hlt
add
hlt
hlt
add
in
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
cmc
add
push
cmc
add
pop
cmc
add
jo
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
call
testb
xor
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
test
add
mov
add
xchg
testb
pushf
testb
movsb
testb
lods
testb
mov
add
testb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
loopne
add
call
testb
or
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
shl
add
testl
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
clc
add
jl
add
je
add
insb
clc
add
fs
add
pop
clc
add
push
clc
add
dec
clc
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
test
add
mov
add
mov
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
dec
stc
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
in
add
in
stc
add
hlt
stc
add
cld
stc
add
add
add
or
add
adc
add
daa
cli
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
inc
cli
add
dec
cli
add
pop
cli
add
insb
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
