rol
jmp
in
sbb
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
mov
test
je
mov
mov
test
jle
mov
test
jne
movl
mov
mov
test
jle
mov
test
jne
movl
insb
xor
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
mov
movzbl
sub
je
inc
cmp
mov
jbe
call
mov
call
mov
mov
movzbl
jmp
movzbl
sub
je
call
mov
movzbl
sub
jne
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
sub
stos
lds
fxch
out
xchg
scas
movsl
cmp
sub
jne
gs
imul
aad
lds
xchg
ljmp
push
sub
jne
gs
push
pop
xor
stos
lds
xchg
ljmp
push
sub
pop
outsl
add
inc
add
pop
and
mov
popf
jno
lret
ds
cs
mov
adc
out
xchg
dec
out
test
in
push
mov
aad
inc
pusha
xchg
xchg
mov
aas
aad
enter
jecxz
popf
pusha
add
cmp
jp
dec
sub
xor
fnstenv
stos
loope
frstor
cli
movb
in
mov
lcall
and
mov
lahf
push
fcmovu
lret
stos
pop
or
or
inc
add
inc
push
stos
dec
adc
shld
xchg
and
mov
cld
push
outsl
lea
push
pop
xor
stos
lds
xchg
ljmp
push
sub
jne
gs
push
pop
xor
out
test
cmc
in
lock
in
popf
repz
icebp
push
sub
inc
jne
outsb
adc
push
es
aaa
dec
ds
jmp
in
stc
mov
fcmovu
mov
push
outsl
add
jnp
add
arpl
int3
xchg
test
mov
mov
movsl
cmp
inc
sbb
gs
push
pop
xor
stos
lds
xchg
ljmp
push
sub
jne
gs
push
pop
xor
scas
lods
pop
sbb
daa
mov
sahf
sbb
sbb
add
mov
aam
jae
mov
inc
clc
aas
les
shll
jns
mov
pop
adc
lahf
xchg
and
mov
lret
push
scas
aad
aam
lret
adcb
inc
les
andb
fmuls
out
adcb
mov
popa
push
ds
cmpb
mov
cmp
cltd
stos
mov
repz
fcompl
ss
into
push
xchg
jecxz
into
hlt
loopne
jb
aad
push
sbb
hlt
hlt
add
or
mov
cmp
dec
lds
cmp
mov
jb
dec
xchg
inc
mov
outsl
xlat
pcmpgtw
popf
pushf
fnstcw
sbb
lds
sub
ljmp
pop
sti
xlat
fldenv
lods
inc
jo
jne
addr16
mov
ja
in
dec
jno
mov
fidivrs
pop
mov
push
lods
inc
xchg
adc
stc
or
add
jmp
ljmp
jmp
imul
mov
repnz
sti
adc
out
xchg
loopne
je
mov
add
pop
mov
in
cmp
shlb
sub
repnz
lods
imulb
imul
or
add
shrl
push
mov
dec
dec
nop
out
addl
sub
cwtl
mov
daa
sbb
dec
mov
lds
or
jp
das
in
fidivrs
cmc
dec
jb
and
sahf
idivb
movsl
push
sub
repnz
xor
jl
icebp
shl
push
aad
leave
int3
loopne
jmp
cmpsb
jno
int3
pop
and
in
dec
je
lcall
cmp
cmp
sbb
inc
xor
mov
push
loop
stc
mov
pop
push
hlt
or
adc
cmp
in
xchg
push
aas
mov
call
jno
fwait
jo
das
or
mov
jmp
cmp
sbb
mov
in
mov
repnz
mov
lret
xor
mov
sub
mov
dec
jecxz
pushf
push
cltd
lds
push
popa
ds
scas
movsb
movsl
imul
mulb
lock
mov
daa
test
pop
xlat
lock
jg
jo
adc
jle
out
dec
sti
cmpsb
mov
and
push
arpl
push
leave
dec
leave
pop
cld
es
lds
sub
lods
push
push
adc
test
add
sti
mov
scas
add
xchg
dec
mov
push
push
and
mov
xchg
daa
xor
pop
add
filds
loope
nop
mov
enter
imul
sub
and
jne
mov
xor
mov
sub
xor
xchg
or
lods
gs
cmp
jo
ds
fsubrs
add
adc
adc
dec
sti
or
push
mov
sbb
es
movsb
mov
jns
mov
inc
out
adc
mov
nop
insl
lods
push
push
imul
add
adc
xlat
pop
push
jmp
dec
jmp
ret
mov
cmpsb
push
jle
cltd
in
or
inc
enter
add
jns
scas
xchg
push
dec
mov
cmp
out
stos
lds
test
arpl
cmp
mov
xchg
jg
push
cmp
push
sub
adcl
lret
xchg
jae
pop
out
xchg
rorl
jns
cmp
adc
xlat
jl
fstpl
or
mov
imulb
sbb
and
add
hlt
add
push
inc
stc
repnz
pop
cld
outsl
test
insb
jmp
nop
jge
jns
pop
jno
dec
call
mov
sar
sub
iret
adc
stos
mov
jb
call
mov
ss
lods
mov
scas
mov
shll
push
mov
mov
pushf
ds
and
in
xor
ret
aas
mov
into
jb
jnp
test
loopne
jl
clc
mov
xchg
daa
cmc
in
mov
in
inc
shrl
mov
outsb
mov
test
push
inc
jo
mov
mov
enter
push
cs
stos
ds
cltd
adc
test
xor
divb
mov
sub
ret
test
movsl
je
sub
mov
imul
adc
push
xchg
xor
sbb
arpl
fldl
sbbl
leave
dec
pop
inc
cs
sbb
or
xchg
and
arpl
pop
and
adc
or
and
gs
aas
add
inc
cmp
pop
mov
hlt
stos
popf
notl
mov
dec
mov
call
cmp
mov
adc
dec
dec
xchg
leave
fcompl
cmc
xor
sub
xchg
push
cmovbe
jnp
dec
imul
jmp
push
mov
mov
scas
lock
push
sub
xchg
addb
ucomiss
jb
push
andl
bound
arpl
repnz
lahf
in
out
lcall
jno
jp
pop
jmp
push
cmp
popf
out
imul
movsl
cmp
xor
pop
test
jnp
xor
xorb
dec
mov
push
and
loope
add
add
rcr
insb
fstpt
mov
jno
add
inc
xorl
rclb
fcompl
and
jl
insl
push
dec
ret
pop
and
fstl
jl
and
mov
or
popa
push
js
loope
jp
adc
mov
fcomp
in
adcl
fsubrl
jo
jns
jecxz
or
enter
mov
mov
cmp
and
jnp
fcmovb
xor
pop
dec
push
lock
xchg
sbb
aas
mov
imull
or
and
sbb
aas
xchg
dec
jo
cwtl
adc
jae
cmpsl
push
mov
idivl
imul
push
mov
outsb
adcb
inc
rcrl
lock
divl
ljmp
fdivp
pop
dec
inc
dec
aas
and
pop
out
lret
xchg
test
call
push
xor
lods
lea
fs
icebp
pop
pop
xlat
data16
jge
pop
xor
cwtl
in
xchg
xor
pop
adc
adc
fsubl
scas
insb
push
std
mov
cmp
aam
push
xor
les
xchg
sbb
cld
xchg
mov
test
aaa
cltd
sub
popa
es
add
cmpsl
cmpsl
sbb
in
in
sbb
out
pop
ja
repnz
lret
xchg
hlt
adc
jno
lcall
insb
neg
mov
jae
cmpsb
addb
cltd
mov
add
mov
mov
repz
inc
push
in
sub
outsl
pop
sbb
repnz
mov
mov
daa
in
fsub
mov
mov
push
or
dec
sbb
int
data16
xlat
rorl
adcl
insl
test
sub
bound
loopne
mov
ss
mov
inc
fildll
cmp
test
jnp
sbb
dec
cwtl
lods
mov
scas
push
xor
adc
cld
rcll
lcall
dec
add
aad
testl
or
aam
xchg
and
loope
cmc
movsl
push
imull
mov
les
and
mov
int
into
mov
jo
js
je
pop
addb
jnp
or
push
in
pop
inc
pop
jmp
push
adc
mov
insl
mov
push
mov
inc
imul
out
jg
push
fsub
push
leave
insl
inc
imul
mov
jne
mov
mov
cltd
jmp
cmp
in
mov
cmc
add
xchg
and
imul
dec
jns
movsl
cmc
xchg
push
aad
push
ljmp
pop
pop
mov
repz
lock
cmpsb
pop
lds
lods
add
stos
cmp
cmp
mov
leave
pusha
add
addr16
dec
xchg
bound
push
mov
xchg
fdivrl
xchg
inc
scas
mov
fwait
and
push
mov
add
sub
ret
xor
fcoms
les
or
or
mov
mov
sbb
xchg
inc
je
cmpsl
getsec
outsb
je
jno
test
push
aas
loope
or
imul
xor
int3
test
mov
or
jns
jno
repnz
mov
insb
adc
pusha
hlt
jge
mov
pop
sbb
mov
xlat
cwtl
dec
fists
outsl
cmpsb
sahf
sbb
mov
nop/reserved
jne
inc
movl
pop
cmp
dec
pushl
adc
daa
dec
in
ljmp
adc
loop
cmc
push
cmp
or
push
fwait
lret
add
mov
dec
std
and
shll
jg
cmp
das
pop
insl
icebp
add
insb
das
fimuls
movsb
gs
fdivr
xor
stos
mov
dec
inc
xor
cs
inc
lcall
jmp
xchg
or
rcr
clc
addb
xchg
push
sub
repz
inc
jl
adc
subb
fnstcw
adc
pop
mov
aad
sub
imul
and
push
shll
inc
repz
mov
iret
rol
mov
hlt
out
inc
mov
fwait
pop
incl
sub
fsts
jb
inc
decb
mov
stos
jns
mov
cli
shlb
sbb
test
jp
push
cwtl
jecxz
hlt
cmp
push
cmpb
mov
push
in
rol
mov
and
jns
fsubl
cmp
adc
in
aam
cwtl
or
sbb
into
mov
jecxz
gs
mov
xchg
addr16
xor
shll
and
pusha
mov
cvttps2pi
add
xchg
mov
lahf
pusha
ficompl
js
adc
mov
inc
mov
ret
mov
test
movsl
scas
loop
jae
fildl
sub
add
mov
mov
int
xchg
iret
std
pop
aad
shrb
push
mov
mov
lret
and
jae
vcvttps2dq
fisubrs
into
pop
fwait
jp
push
fisttpl
rcr
sub
loop
sub
and
push
mov
jnp
jno
fucomi
dec
inc
xchg
inc
and
popa
cwtl
in
sbbl
mov
repz
xor
adc
or
aaa
jle
jp
pushf
mov
or
xor
test
and
dec
cmpsl
cmpb
arpl
dec
jmp
lock
mov
fiadds
fidivl
pop
add
push
sub
adc
scas
pop
cmp
inc
insl
dec
push
aam
sbb
xor
aaa
push
push
mov
cmp
cmpsb
xor
outsl
js
clc
lret
in
xor
or
leave
addr16
popa
xor
fimuls
pop
mov
add
xor
push
mov
mov
jecxz
or
xchg
push
cmp
setnp
fldenv
divb
or
jns
cltd
scas
add
lods
popa
mov
sbb
sub
dec
mov
js
pusha
mov
jae
fistpll
aam
outsb
inc
test
add
sbb
xor
and
jp
ljmp
iret
inc
sbb
and
mov
test
icebp
sbb
stos
mov
xor
add
push
dec
mov
xchg
xchg
cli
out
jno
lods
test
ja
mov
pop
and
outsb
push
insl
push
mov
push
mov
adc
fs
cltd
in
add
jns
int
enter
sbb
iret
jnp
push
fwait
and
inc
and
addr16
fisubrl
xor
shlb
pushf
aas
enter
xchg
or
int3
aam
in
movsb
int3
mov
scas
jle
xlat
push
adcb
inc
iret
ds
sti
mov
and
fldt
aad
push
ja
cmp
push
push
xchg
loope
fs
jns
pop
mov
pop
mov
mov
fisttps
sete
xchg
push
xlat
popf
mov
mov
lods
and
push
incl
mov
add
xor
sub
les
lock
jne
test
xchg
push
pop
out
orl
xor
ljmp
mov
sbb
sahf
push
and
jmp
sub
push
outsl
push
mov
add
push
and
mov
cwtl
sub
sub
mov
in
cmpsb
sub
sti
inc
cmp
lcall
nop
inc
cmp
jl
cmp
and
jmp
push
outsl
mov
fstpt
jmp
inc
jns
adc
rcr
popf
mov
add
cmpsl
movsb
lret
mov
dec
jg
mov
cmp
xchg
icebp
in
or
js
mov
push
fdiv
outsb
push
psraw
daa
pop
stos
pop
in
push
push
roll
lock
dec
jne
in
mov
sub
and
xchg
inc
cwtl
andb
js
sub
sbb
dec
mov
add
or
push
fmul
sub
out
pop
xchg
popf
jg
xchg
push
jae
loope
mov
in
jmp
push
shr
push
xor
sahf
gs
test
pop
jmp
fwait
inc
bound
pop
pushf
cmp
sbb
es
les
jne
push
adc
out
in
pop
bound
pop
scas
repnz
mov
dec
sub
es
lock
fidivl
jno
mov
jbe
xchg
cs
push
fidivrl
mov
jnp
mov
pop
lahf
mov
mov
inc
iret
pop
inc
loop
addr16
push
adc
addr16
inc
ss
loope
mov
sub
sub
fcoml
sub
mov
dec
cwtl
imul
mov
ss
jge
add
fs
jae
int3
insl
xchg
orb
adc
sti
data16
mov
into
jl
mov
push
lea
and
lret
in
jns
pop
repz
mov
xchg
aad
gs
pop
add
js
sub
push
int
lret
cli
and
sbb
scas
xchg
stc
in
imul
fisttps
nop
or
test
or
decl
cmpsl
fsubs
pop
adc
mov
in
sub
lods
dec
test
push
adc
out
xor
pushf
dec
dec
call
add
push
adc
add
filds
mov
fwait
cmp
aam
cmpsb
add
leave
ja
add
cmpb
and
cmp
jmp
rcl
clc
xchg
fbld
cmpsl
stc
and
push
mov
push
mov
cs
fisubrs
pop
add
or
enter
inc
mov
xchg
pop
mov
sbb
push
movsb
mov
adc
jmp
sbb
stos
inc
adc
dec
and
or
jb
xor
and
adc
cli
adc
or
xor
fcmovnbe
adc
sahf
lods
movsl
arpl
aaa
xor
cmp
leave
xchg
add
cltd
xchg
cmp
mov
aas
pop
call
aaa
stos
and
adc
gs
pop
push
or
enter
pop
outsb
push
es
xchg
cmpsl
push
loop
mov
mov
jl
andb
roll
fwait
lods
mov
mov
imul
cmpsl
test
andl
test
in
cmp
insb
popf
pop
fistpl
adc
cmp
mov
bound
add
shl
out
repz
es
xchg
faddp
cmc
mov
aam
mov
daa
fs
mov
xor
sbb
dec
daa
pop
cmp
xchg
mov
scas
out
mov
xor
movsb
and
pop
sbb
lods
dec
mov
jb
aam
out
pop
add
sbb
sarb
bound
mov
xchg
aam
scas
sbb
out
jno
popf
adc
cmp
pop
mov
inc
inc
xlat
filds
or
stc
movsb
lahf
dec
imul
repnz
or
cmp
ss
push
xchg
pop
movsb
iret
shrb
dec
outsb
xchg
mov
lods
sbb
scas
sub
jo
xchg
jmp
enter
mov
test
jbe
rcrl
bound
ja
jg
testb
pop
mov
xchg
mov
mov
lea
adc
pop
cmp
push
mov
lcall
mov
stos
mov
cmpsl
mov
jmp
sbb
or
sub
sbb
sbb
cs
std
fsubl
jbe
lcall
ja
dec
cwtl
cmp
add
test
and
mov
nop
jo
push
or
je
and
and
fldcw
cli
xlat
jmp
cmpsl
sub
ljmp
inc
mov
mov
divl
fisubs
negb
fistps
mov
mov
jb
addb
ljmp
or
ljmp
pop
inc
adc
cmp
mov
inc
mov
jmp
fnstsw
clc
xor
mov
cmp
pop
sti
ljmp
subb
jl
popa
inc
fsts
cmpsb
test
push
nop
xor
sti
cs
data16
xlat
ret
xchg
jne
shll
insl
nop
inc
push
cs
add
add
scas
pop
cli
pusha
stc
push
rcll
inc
fsubl
sub
xchg
inc
xlat
shrb
test
sub
fldl
push
add
out
lret
gs
mov
jne
mov
xorl
mov
adc
push
ss
out
sbb
and
in
jbe
cmp
test
sub
mov
popf
out
fldt
mov
out
std
cmp
mov
lret
mov
dec
stc
fld1
mov
sbb
cmpsl
dec
push
jmp
adc
cmp
test
and
data16
xchg
in
mov
imul
add
into
sub
jmp
out
sbb
jg
mov
adc
dec
ljmp
lahf
shrl
mov
adc
mov
mov
sbb
sbb
stos
test
mov
and
or
add
sub
mov
ja
mov
and
mov
and
in
mov
sub
lret
jae
orb
scas
scas
fsubrl
sbb
cmp
lahf
cld
xchg
add
test
and
inc
pop
aas
lods
pop
pop
cmp
stc
cmp
test
mov
clc
cld
pushf
mov
dec
insl
sub
leavew
adc
jg
sub
sbb
inc
mov
inc
mov
or
push
add
dec
in
sub
cmpb
lea
fwait
pop
jmp
sahf
xrelease
out
cmp
jmp
repnz
and
jp
mov
xlat
fcoms
sbb
outsl
inc
pop
scas
enter
xor
sbb
and
int
xor
and
or
loopne
jge
jae
shrd
lret
and
das
in
sub
mov
or
shlb
mov
sub
cmpsl
mov
adc
test
mov
mov
scas
mov
movsl
xor
inc
fcmovnb
adc
movsl
jo
cltd
mov
adc
mov
mov
mov
dec
jae
lahf
movsb
fwait
xchg
fldcw
xor
mov
xlat
jecxz
or
cmp
jns
xchg
out
xchg
inc
loope
xchg
outsb
adc
mov
mov
inc
mov
loopne
idivb
sahf
mov
and
shr
int
adc
dec
jg
test
mov
push
jp
int3
mov
int
scas
and
lret
add
addb
cmc
dec
push
pop
outsb
jno
imul
jp
push
mov
add
insb
dec
jb
mov
push
dec
faddl
jecxz
and
int
test
into
jl
add
fiadds
and
inc
add
jmp
lods
add
ret
fistps
xor
cmp
push
nop
scas
xchg
pop
stc
outsl
jmp
sbb
inc
jnp,pt
cmpsl
sub
push
popf
daa
mov
push
push
mov
mov
fwait
cmp
mov
stos
jecxz
jmp
aam
sbb
mov
pop
fs
mov
pop
repnz
mov
push
xchg
and
xor
fadds
adc
jl
xchg
pop
or
sahf
aaa
lcall
insl
test
ds
lods
mov
xchg
int3
les
stos
jns
jne
dec
es
inc
lds
mov
cmp
es
push
movsl
setns
cmpsl
inc
pop
sbb
cmpsl
stos
mov
or
test
mov
cmc
into
cmpsb
ficompl
mov
hlt
dec
shr
mov
arpl
ffree
adcb
pop
lods
adc
pop
push
xchg
mov
pop
mov
cmp
adc
xchg
dec
dec
adc
es
js
push
imul
cmp
mov
lods
adc
imul
mov
mov
push
mov
pop
js
mov
cmpsl
jmp
andb
mov
sub
xchg
loopne
loopne
fistl
call
dec
xor
test
inc
jmp
mov
out
mov
push
testb
jp
push
adc
add
sahf
sbb
jne
imul
in
xchg
ljmp
push
sub
jne
gs
push
pop
xor
stos
lds
xchg
ljmp
push
sub
jne
gs
push
pop
xor
stos
lds
xchg
ljmp
push
sub
jne
gs
push
pop
xor
stos
lds
xchg
ljmp
push
sub
mov
or
or
lret
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
sub
cmp
imul
pop
jnp
jo
push
jmp
add
adc
cmp
rcrb
imul
mov
push
test
add
adc
pop
shll
mov
int
lcall
jae
push
popf
jb
je
movsb
jne
or
jns
xchg
add
out
jmp
add
lods
clc
stc
cmp
fstpl
jecxz
xor
mov
cmp
jg
outsl
pop
lahf
int
or
add
xor
es
xlat
mov
cltd
mov
dec
cmp
jo
lret
jmp
pusha
pushf
inc
cltd
scas
stc
sarl
cmc
loopne
lock
cmc
rclb
inc
pop
sbb
or
xor
fldcw
xor
sub
icebp
mov
inc
shrb
cmp
mov
stc
and
pop
movsb
invd
mov
add
lock
xchg
lcall
cmp
jne
in
fidivrl
insb
outsl
rorb
mov
rorb
cmp
outsl
pusha
and
incl
insb
mov
sbb
and
dec
lahf
jge
popa
mov
cmp
and
add
in
xor
je
jns
cmpsb
pop
mov
mov
mov
mov
add
add
nop
outsl
xchg
xor
xchg
push
adc
dec
mov
dec
sbbb
pusha
mov
push
jmp
add
adc
loopne
lock
sbb
imul
mov
push
jmp
add
adc
loopne
cmpsb
lret
mov
push
push
mov
mov
hlt
aam
and
aaa
dec
push
in
dec
fdivr
and
cmpsb
cli
jle
cmp
xor
test
add
mov
outsb
clc
imul
cmpsl
dec
push
xor
push
xchg
push
xlat
iret
jb
pop
add
dec
sti
iret
rcrl
je
dec
jbe
lahf
push
push
test
push
dec
jl
xor
clc
xor
pop
outsb
in
mov
cli
cwtl
add
mov
add
notl
pop
mov
xchg
pop
cmpb
inc
cltd
xchg
mov
mov
lahf
xchg
or
sti
imul
clc
push
pop
mov
mov
push
mov
lret
popa
shl
mov
pusha
push
jnp
and
or
adc
ret
test
xor
push
pop
jo
and
jp
inc
push
loop
mov
pop
cmpsb
push
xor
xor
xchg
call
jbe
add
xchg
mov
xor
mov
cli
and
ja
dec
sahf
pop
stc
fsubrl
hlt
or
fdivl
push
and
and
test
sbb
adc
jo
scas
sahf
and
jp
insb
jae
sub
pop
inc
or
in
fidivrl
insl
into
or
jne
je
inc
adc
pop
arpl
pop
je
xchg
sahf
or
call
call
test
ds
imul
sub
push
mov
mov
leave
enter
fisubrs
mov
mov
mov
enter
call
rolb
call
push
bound
lods
in
lds
inc
stos
nop
or
nop
mov
jo
cmp
push
jl
je
xor
mov
ret
mov
jb
stos
xchg
sbb
jp
jecxz
cmp
push
sti
std
inc
lahf
fiaddl
xchg
ss
jge
mov
mov
push
inc
stos
inc
rorl
jnp
cmpb
and
insl
mov
lahf
jbe
inc
test
je
shrl
repnz
int3
mov
fdivs
mov
and
jle
movsl
pop
pop
sub
jmp
rcrb
lock
icebp
adc
pop
subb
rorb
int
icebp
orb
sar
scas
popa
aam
push
sbb
lcall
and
shrl
es
aad
inc
push
add
add
fwait
insl
cld
nop
cmp
in
test
dec
sub
mov
push
cmp
mov
and
push
int
xchg
mov
add
sar
cmpsb
enter
inc
pop
fcoms
mov
fildll
stc
mov
mov
mov
xor
inc
shll
xor
push
pushf
scas
inc
jmp
push
mov
mov
scas
add
lods
cli
scas
jmp
nop
pop
stos
call
insb
cwtl
hlt
push
adc
insb
int3
scas
xchg
das
push
icebp
sbb
adc
cs
cli
mov
push
mov
aam
mov
xor
push
jecxz
sub
popf
hlt
inc
data16
stos
cld
jb
stos
movsl
push
lcall
loop
fcompl
outsb
pusha
mov
aaa
jb
cmp
jne
movsl
int3
mov
iret
lods
popf
rcrl
xchg
mov
dec
stos
jo
in
mov
fdivr
pop
push
iret
fnstcw
cs
imul
inc
addl
xor
push
bt
fwait
sbb
stos
pop
hlt
pop
jmp
mov
pop
rorb
pop
fisubrs
sbb
xor
sarl
cwtl
pop
fcmovne
dec
mov
inc
push
lods
adc
test
mov
iret
mov
mov
int
jmp
xchg
add
jg
leave
jns
push
cli
push
incl
data16
push
jo
pusha
les
cmp
lods
mov
sub
cltd
adc
fmul
movsb
aad
test
sbb
insb
xchg
sub
and
arpl
mov
push
adc
ja
pop
mov
sbb
cltd
xchg
in
pop
outsb
and
sbb
cmpsl
push
into
sub
ss
sub
jno
popf
in
mov
xor
fwait
inc
dec
lret
mov
mov
cmp
mov
add
das
rorl
ds
cmpsl
js
fidivrl
jp
mov
dec
test
push
push
push
cs
jne
dec
mov
mov
adc
dec
jl
cld
cmpsb
lock
fs
inc
out
add
or
fmull
leave
jns
xchg
jp
gs
jecxz
repnz
jb
out
mov
mov
dec
push
cmp
inc
aaa
or
xor
push
insl
xchg
nop
lods
bound
int
xchg
inc
xor
cmp
fisubs
mov
cmpsb
jp
inc
jno
bound
mov
or
iret
pushf
push
or
rcrl
cmpsb
xchg
cmc
add
leave
xchg
jns
cmp
imul
adc
aaa
mov
mov
into
xchg
push
pop
xchg
xor
xchg
sti
in
mov
je
cli
sahf
js
xor
popa
inc
or
scas
xor
out
jmp
fstpl
pop
int
push
sub
pop
sar
sahf
mov
shl
and
and
cmp
mov
adc
andl
loope
sahf
or
pop
add
adcl
sub
daa
push
mov
mov
shr
jle
xlat
push
inc
std
fwait
sbb
test
add
out
out
and
lret
add
sub
mov
lock
call
pop
outsb
cltd
dec
popf
jne
dec
idivb
ljmp
or
and
xchg
or
in
ds
lea
enter
cmp
outsb
mov
pop
sahf
sub
dec
pop
roll
add
lds
cmp
or
push
scas
cltd
cmpsl
lcall
or
loop
jl
push
xor
jge
in
lods
cmp
jge
pop
ljmp
filds
sub
clc
add
add
ja
mov
and
or
imul
pusha
out
pop
pop
stos
jae
adc
cmp
mov
mov
xchg
dec
sahf
sbb
push
in
dec
ret
push
jp
mov
pop
xchg
out
jnp
jnp
repz
mov
sbb
into
rcrb
outsl
lock
inc
in
push
mov
mov
xchg
gs
scas
cwtl
test
mov
lcall
lods
xorl
in
call
rorb
xchg
mov
and
repnz
mov
mov
int
or
xchg
fucomip
cli
daa
mov
dec
jmp
inc
lcall
dec
lret
mov
incb
lock
scas
das
jle
ret
jbe
shll
cmp
add
cmp
loop
xor
scas
insb
jno
jne
mov
iret
je
pop
dec
jmp
fcos
jo
sbb
mov
mov
das
mov
dec
mulb
xchg
xor
inc
ss
clc
imul
sti
add
int
dec
lret
sbb
loop
idivl
or
dec
mov
and
insl
sub
mov
jae
ja
cmp
push
lods
lret
inc
xchg
out
mov
xor
inc
out
push
movsl
les
and
mov
popf
int
adc
and
es
xor
push
and
stos
cmpsb
stos
mov
mov
push
movsl
faddl
call
cld
cmpsl
lret
movsb
mov
lea
inc
leave
and
mov
lahf
adc
sub
sbb
add
inc
pusha
sbb
popf
cmp
inc
icebp
out
push
scas
jo
cmpsl
mov
adc
adc
mov
iret
in
enter
in
dec
add
jo
sahf
push
enter
popf
jle
rorl
fnstcw
ret
or
dec
gs
imul
fcmovb
clc
pop
and
mov
push
cmp
dec
fwait
and
jb
sub
in
pop
data16
jbe
movsl
cmp
fidivrl
je
xchg
xor
mov
mov
insl
lods
cwtl
add
aam
pop
scas
pop
jl
clc
cmp
inc
call
pop
mov
das
in
inc
cltd
daa
popa
sar
mov
movsb
or
push
popa
out
add
insl
testb
stos
das
add
adcb
cli
fsubl
push
pop
dec
cli
rol
mov
jp
adc
jl
adc
jl
dec
mov
popa
or
sub
ja
daa
iret
mov
dec
pop
cwtl
popf
hlt
fwait
xchg
fstps
addr16
shll
jge
jbe
daa
mov
jmp
mov
test
fwait
dec
stc
test
sbb
cmp
inc
shl
jge
dec
xor
mov
hlt
mov
sub
and
subb
jge
repnz
enter
cmp
stos
inc
pop
testb
cwtl
sub
fsubrl
sbb
jbe
repz
loop
add
fisttpll
fsubrs
sub
xchg
inc
insb
and
dec
arpl
jo
out
popf
mov
and
add
cmp
push
mov
sbb
test
in
and
jne
cltd
imul
mov
lret
pop
sahf
jp
fiaddl
mov
sti
sub
xor
call
cwtl
addr16
pop
in
pop
mov
sti
outsl
outsl
into
and
test
pop
or
xor
xchg
add
call
popf
xchg
les
dec
pusha
daa
pop
nop
mov
stos
push
pushf
and
jl
hlt
mov
leave
cltd
inc
cmp
inc
mov
pop
mov
lods
dec
out
aam
mov
push
stos
test
imul
add
imull
inc
add
scas
fisubl
aad
lea
xor
call
in
leave
je
loopne
ss
loopne
add
inc
xchg
cmpsl
loopne
pop
lock
lods
idivb
lods
ret
mov
adc
arpl
adc
fnsave
imul
inc
or
jne
ret
add
test
scas
mov
cmc
push
rep
mov
in
dec
shll
rcrl
mov
jge
fldt
sub
mov
enter
mov
ja
jb
ret
and
in
clc
dec
pop
rorb
sub
jns
outsl
inc
mov
add
ja
and
mov
loop
pop
fwait
hlt
jecxz
adc
sbb
scas
sub
xor
xor
add
inc
push
cmp
mov
int
xchg
xor
sub
lcall
ret
fbld
inc
add
pop
jno
mov
or
outsb
add
mov
dec
inc
pop
add
aad
mov
push
scas
lahf
ja
insb
leave
les
mov
movsb
jnp
mov
fcmove
or
faddp
inc
call
jl
jne
jo
push
aam
int3
jecxz
negl
xchg
push
push
cs
and
bound
aad
add
loopne
jb
mov
mov
js
cltd
jp
cmp
mov
mov
xor
or
and
shrb
mov
xchg
bound
mov
jle
mov
xlat
mov
xchg
sbb
out
iret
ja
xorb
mov
fistpl
fisttpll
and
dec
adc
daa
xor
xor
iret
psadbw
sbb
out
nop
dec
xor
pop
cmp
adc
add
pop
mov
cmp
jns
aas
cwtl
insl
push
pop
pop
repz
push
dec
push
cmovs
pop
dec
aad
jo
adcb
dec
repz
inc
mov
fwait
stc
adc
fildll
xchg
mov
test
inc
inc
loope
pop
jle
lods
cld
aas
pusha
and
outsb
fs
insl
movsl
pusha
or
in
sbb
sub
dec
pop
push
mov
in
shrl
adc
lret
fnsave
jae
push
dec
xor
mov
in
bnd
lock
sarb
mov
aad
jmp
in
fadds
popf
pop
in
mov
xor
fs
movsb
test
sbb
roll
sbb
xchg
fildl
add
test
mov
stc
ljmp
mov
sbb
fdivrl
inc
rcll
sub
addr16
push
in
jno
imul
stc
cmpsb
jns
sbb
jno
push
jns
lret
sub
insb
ret
leave
shrl
xchg
pop
rclb
inc
xchg
std
ret
cmpsl
push
out
mov
mov
test
lock
subb
lock
xchg
cwtl
outsb
mov
inc
push
sbb
dec
rorb
outsl
imul
imul
pop
adc
inc
and
test
adc
and
dec
popa
pop
loop
jg
cmp
jb
lock
testl
adc
idiv
ficoms
mull
shlb
push
mov
aas
add
sbb
repnz
stos
dec
pop
or
gs
cwtl
sahf
lea
in
jmp
sbb
mov
dec
or
ja
or
jmp
cmp
shrl
pop
adc
xchg
jne
sarl
jecxz
outsl
and
imul
stc
out
movsl
aaa
imul
fs
inc
loop
mov
xor
movaps
mov
cmp
out
xor
adc
jmp
ljmp
movsl
sbb
xchg
nop
outsb
test
hlt
cmc
stc
sub
pop
dec
popa
sbb
and
adc
insl
mov
scas
push
testl
idivb
and
pop
loope
test
cs
cmp
jbe
arpl
outsl
pusha
repnz
pop
shll
lahf
jb
cltd
fisttps
mov
pop
push
fidivrs
mov
pop
sahf
adc
les
mov
loope
insb
mov
fdivrs
fs
sbb
loop
arpl
mov
push
addr16
test
repnz
or
push
sbb
andps
sub
sbb
or
sbb
test
mov
sub
cmp
nop
bound
icebp
imul
lods
ja
xchg
gs
xlat
enter
mov
mov
add
mov
js
stos
test
mov
clc
fcom
insl
ss
jmp
dec
jne
test
fidivl
test
inc
lret
into
dec
loope
ja
sub
pop
xchg
inc
imul
xlat
jbe
movsl
push
mov
jno
dec
icebp
and
mov
cmp
mov
inc
jg
xchg
in
lret
jns
jns
test
clc
addr16
test
cmp
sbb
jle
cmc
pop
cwtl
pop
lods
xchg
inc
mov
xchg
or
mov
lea
dec
imull
add
xor
xor
push
mov
ja
repnz
shlb
and
pop
pop
loopne
sub
push
push
lcall
orb
jge
xor
fldenv
and
in
push
push
sbb
shrl
aas
mov
cwtl
shrb
test
jns
xor
push
jns
ret
sbb
mov
adc
jecxz
scas
stos
cs
in
cmp
out
nop
addr16
push
nop
mov
xchg
cmp
adc
imul
jg
int3
les
cmc
push
pop
xchg
jg
int3
sub
lcall
adc
adc
xchg
pushf
ret
fwait
es
inc
cli
jae
shll
test
cmp
movsl
push
mov
mov
pop
std
jo
dec
pop
pop
cmc
sahf
stos
mov
inc
push
cli
add
pop
aad
push
cltd
add
enter
xchg
rorb
xchg
mov
pop
shl
jg
scas
lret
push
or
aas
dec
subl
mov
or
mov
cld
push
gs
push
sub
enter
pop
mov
rcrl
popf
and
out
pop
sub
lret
shlb
sbb
out
lds
pop
ljmp
scas
cli
xchg
pop
fs
sbb
xchg
adc
enter
imull
movsl
addr16
call
in
fmulp
mov
mov
mov
and
int3
loope
xchg
insb
out
mov
lods
or
aaa
dec
inc
cmpsl
add
inc
gs
lret
fs
in
jg
jle
bound
outsb
inc
sbb
mov
loope
flds
pop
adc
imul
and
bound
dec
push
loope
xchg
stos
dec
dec
hlt
cmp
fwait
cmp
cs
push
es
pop
jmp
mov
fwait
rcr
insb
mov
scas
adc
sti
push
loopne
aad
in
adc
or
jno
mov
add
push
cmpsl
and
xlat
lcall
inc
lods
scas
mov
push
cli
and
sahf
adc
jmp
sub
cltd
add
and
clc
fisttpll
sbb
js
test
xor
test
sub
push
mov
add
sbb
xor
incb
fdivl
js
push
or
adc
aad
adc
out
jae
xor
ja
sbbl
aad
pop
jmp
xor
cmpsl
jo
inc
imul
jbe
push
fcoml
push
rcr
xchg
xchg
icebp
lcall
adc
xchg
es
xor
stos
icebp
and
mov
inc
xor
jg
jg
sub
in
hlt
pusha
mov
pop
stc
jns
inc
ljmp
addr16
pop
mov
stos
add
lret
stc
and
mov
fndisi(8087
cmp
pop
mov
notb
mov
js
stc
sbb
jae
jge
shrb
das
loop
mov
jbe
xchg
scas
enter
and
lret
jb
sub
jns
sbb
pop
mov
sub
push
jne
and
adcl
mov
int
daa
cltd
inc
xor
xor
rcrl
into
pop
icebp
and
addr16
pop
shll
ret
mov
scas
push
or
xlat
xchg
aas
push
cmp
add
xlat
fldenv
xchg
add
cwtl
pop
xor
jb
cmc
adc
jb
out
mov
fucomip
adc
jns
or
orb
out
icebp
jl
icebp
cmpsl
push
or
bound
xchg
aaa
add
je
or
movsl
xor
fistpll
dec
mov
sub
or
repnz
in
sbb
fmul
push
xor
ss
sbb
pop
stos
push
imul
jae
cmc
xchg
addr16
or
popa
jns
aas
sahf
cwtl
inc
push
xchg
push
jb
out
and
jbe
sbb
mov
adc
add
push
xchg
or
subl
xchg
lods
bound
mov
mov
lcall
push
dec
arpl
xchg
in
js
insb
sub
mov
jge
divb
into
sub
lods
cmp
insl
mov
lret
xchg
xchg
pop
jecxz
pop
sub
stos
testb
insl
lods
inc
push
xchg
jo
mov
into
fs
ret
push
out
cltd
lret
adc
bound
stc
mov
shll
roll
fsubl
or
mov
fidivrs
and
int
addr16
mov
call
fcomps
add
ret
mov
jl
daa
pop
sbb
cltd
add
rorl
cs
mov
xchg
sbb
dec
imul
ret
mov
add
push
lea
sbb
jnp
fstp
loop
or
xchg
pusha
xlat
dec
mov
dec
repz
cmp
icebp
out
jle
adc
pop
or
jp
cld
ja
loope
push
lcall
pushf
imul
outsb
mov
scas
out
add
outsl
and
jae
mov
aas
xchg
or
pop
jns
iret
jo
seto
mov
jle
jnp
test
pop
sub
mov
leave
dec
mov
es
mov
jle
lods
add
dec
mov
pushf
fcomps
jb
xchg
xchg
lret
daa
in
xorb
cli
daa
mov
aad
stos
sbb
mov
lock
sub
test
add
add
cltd
repnz
xor
add
cwtl
or
ja
mov
stos
adc
mov
cmp
leave
jbe
inc
inc
rcrl
les
rolb
push
lock
push
push
mov
xor
cmp
lods
or
cmp
mov
outsb
mov
stos
ja
sbb
pop
sbb
jae
loopne
test
xor
mov
or
push
pop
stos
sarl
stc
leave
xchg
mov
xlat
movsl
xchg
movsl
dec
push
add
pop
xchg
inc
add
and
repz
nop
ss
pop
les
xor
xchg
popl
pusha
xorl
lcall
hlt
push
mov
push
mov
add
iret
jb
xchg
jne
into
andb
inc
mov
sbb
lahf
mov
mov
mov
and
dec
out
mov
fcomi
shlb
dec
jge
testl
jbe
sbb
mov
xor
sub
shlb
pop
mov
cwtl
pop
insb
sbb
and
push
push
cltd
push
adc
jns
lret
push
outsl
xchg
mov
out
repz
cld
jp
mov
psubq
push
mov
dec
and
arpl
repz
imul
push
sub
popa
lea
ljmp
mov
mov
jns
mov
lea
inc
fdivs
stos
outsb
popf
push
clc
int3
mov
lock
lds
shrb
jns
dec
sbbb
pusha
mov
push
jmp
add
adc
loopne
lock
sbb
imul
mov
push
jmp
add
adc
in
imul
jns
dec
test
je
inc
cltd
pop
jmp
or
hlt
cmp
and
nop
imul
inc
fisubl
inc
cltd
daa
sahf
pop
jno
ss
push
in
xor
faddl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
inc
notl
arpl
jae
mov
jl
push
sub
js
mov
cwtl
jecxz
repz
mov
mov
inc
or
arpl
jae
add
aam
push
sarl
andl
clc
pop
lcall
sbb
cmp
lock
mov
lahf
cld
mov
pushf
in
sub
cmp
arpl
insl
push
jg
shl
je
mov
push
stos
clc
mov
push
jnp
andb
jb
test
dec
adc
lods
cli
enter
test
leave
sbbl
jmp
scas
sbb
rcrb
pusha
test
repz
add
jle
sub
fsubs
enter
cmp
cld
dec
adc
fcoml
ror
popf
or
jl
xchg
daa
sub
mov
adc
xchg
mov
outsb
pusha
ret
js
fistl
mov
pop
stc
mov
movsl
and
mov
cld
movups
shrb
cmp
push
mov
daa
mov
or
arpl
pop
and
lret
pop
sti
mov
mov
mov
pop
sbb
imul
jo
jne
outsb
add
sbb
nop
fcoml
lods
shrl
xor
dec
add
and
pusha
adc
in
mov
jecxz
mov
sbbl
xchg
es
aas
pop
vmread
pop
dec
sub
pop
and
js
mov
cwtl
jecxz
repz
mov
or
arpl
jae
add
pop
and
js
mov
cwtl
jecxz
repz
mov
or
mov
adc
shll
inc
sbb
jae
sub
or
shl
jle
into
xchg
jp
and
add
scas
xchg
add
add
cmp
pop
fimull
xchg
mov
dec
gs
movsl
mov
xorl
std
aaa
lret
adc
inc
xor
push
xor
mov
jns
loopne
fidivrs
or
mov
into
xchg
adc
cmp
out
jecxz
sbb
jle
ss
push
lea
xchg
rclb
mov
aas
aam
inc
push
push
jne
xchg
cwtl
xchg
add
insb
mov
sahf
xchg
lds
push
pop
lods
mov
add
push
mov
fists
sbb
dec
repz
push
fistps
bound
push
lods
mov
dec
addb
mov
sbb
sub
hlt
add
leave
sbb
and
insb
inc
jne
mov
push
mov
xchg
dec
cs
push
mov
lods
fistl
into
jne
shrd
or
mov
sbb
xor
and
sub
mov
sahf
iret
je
cltd
xchg
test
dec
mov
pushf
aaa
pop
fbstp
rcrb
inc
xor
xor
dec
je
pop
add
and
cmp
fsubrs
sub
sub
pop
cmp
stos
lret
sub
aas
add
push
inc
xchg
popa
dec
sbb
stos
lods
cmp
and
inc
leave
push
mov
and
das
outsb
insl
push
dec
fsub
push
cwtl
frstor
mov
mov
or
movsb
test
mov
cltd
xor
pop
pop
outsl
outsb
adc
xor
daa
dec
and
xchg
dec
dec
push
test
push
sbb
outsb
jnp
cmp
fisttps
stos
pop
das
push
adc
cltd
pop
test
nop
mov
stos
adc
mov
mov
push
roll
and
sbb
pop
xlat
and
push
test
je
jnp
sti
js
push
push
in
mov
mov
mov
data16
lcall
gs
arpl
jb
rorb
jle
mov
aas
sarb
sbb
inc
je
fcomp
std
cmp
fisubl
xchg
and
cli
les
mov
cwtl
push
leave
mov
and
cmp
jecxz
dec
xlat
dec
adc
mov
pusha
jb
dec
sub
test
push
xor
out
std
and
nop
aam
aaa
jbe
sub
mov
shlb
mov
mov
hlt
out
mov
into
push
test
cltd
std
aaa
mov
xchg
repz
mov
loop
sar
test
sub
push
iret
pop
mov
fimuls
sbb
incl
jb
jmp
jns
push
push
imul
aad
pop
and
subb
out
push
add
test
inc
jae
rclb
push
push
lea
jg
stos
lods
scas
cmpsb
je
xor
add
int
and
jmp
or
testb
cmp
imul
imul
in
insb
push
inc
pop
lret
in
xchg
lods
push
jp
lcall
sub
xchg
rolb
mov
pop
pop
mov
add
movsl
sbb
and
incl
repz
fwait
xlat
jg
mov
and
mov
push
cmp
lret
xchg
xor
repz
cmp
cs
add
pop
inc
les
mov
roll
rcrl
ret
test
pop
das
pop
fisubrl
imull
fdivr
or
dec
imul
cltd
dec
sub
dec
in
mov
jge
sti
outsl
gs
in
add
iret
sarb
mov
push
pop
jge
ret
test
jns
ds
jmp
adc
or
std
or
test
and
clc
push
jmp
pop
cmpsl
shll
mov
adc
mov
sub
rorl
and
adc
test
daa
cmpsl
leave
jmp
xchg
fsubr
jge
out
add
fdecstp
xor
push
dec
push
xorl
enter
sub
or
xchg
clc
das
lods
mov
sub
inc
or
shll
lcall
sub
cmpsl
loop
shlb
sti
xor
out
and
negl
daa
pop
sub
jecxz
dec
sub
ds
cltd
int
icebp
mov
add
xchg
in
xchg
das
mov
loopne,pt
sub
lock
add
mov
sub
mov
inc
add
sbb
dec
cld
adc
out
push
movsb
inc
pop
inc
mov
daa
sti
cwtl
and
cs
fistl
ficoml
and
cwtl
lret
sahf
jno
mov
pop
int
mov
fidivrs
imull
sarb
hlt
std
dec
out
push
stos
testl
fidivrs
dec
xlat
push
dec
pop
outsl
pop
filds
jg
das
aad
adc
push
in
push
cltd
call
xchg
jbe
fdiv
aas
test
aaa
loopne
rclb
aaa
aaa
scas
lds
mov
es
or
push
lcall
fcom
push
adc
sbb
dec
out
xchg
mov
push
loope
dec
jp
stos
dec
inc
cwtl
ljmp
loopne
int
ljmp
add
mov
movsl
sbb
xchg
addr16
stc
push
jle
outsb
pop
mov
mov
and
add
ret
and
movsl
out
call
movsl
cmc
stos
arpl
sbb
push
fidivrl
add
cmpsb
xor
xor
cmp
jp
aas
and
push
mov
scas
movsl
fld
loopne
fildl
sbb
loop
adc
cli
push
lahf
xor
movb
pop
cmp
jmp
daa
ret
or
mov
je
sbb
nop
movsl
xorb
das
ror
mull
or
cmp
shrl
outsb
and
in
xor
mov
jb
das
dec
decl
xor
stos
cmpsl
leave
sbb
pusha
fbstp
movsb
push
clc
test
xchg
push
orl
in
mov
movsb
testl
testb
sbb
cmp
test
mov
xchg
xchg
and
testb
jnp
ljmp
cli
mov
nop
mov
mov
sub
clc
fldenv
push
fwait
loope
cmp
jmp
stos
shll
inc
out
jp
loope
testb
jecxz
push
jne
push
imul
dec
lcall
aad
add
es
iret
jns
out
lret
arpl
das
mov
dec
xchg
mov
popa
sbb
xlat
les
out
insb
adc
inc
in
jo
cs
jns
mov
pop
js
mov
jge
add
pop
sbb
stos
movsb
jl
pop
pop
dec
and
sbb
sub
jmp
rcrl
sub
pop
jne
dec
les
scas
push
adc
js
fdivl
test
sub
nop
dec
int3
imul
cmp
cmp
js
mov
divl
dec
dec
jns
into
dec
cltd
mov
lock
xchg
movsl
mov
lods
les
mov
dec
sub
loop
lret
mov
pushf
stos
mov
into
lret
fdiv
pop
or
cmc
xchg
lahf
inc
pop
inc
mov
sarl
xchg
push
adc
xlat
mov
sub
mov
mov
xor
shlb
pop
and
les
pop
mov
mov
pop
or
enter
cmpsb
mov
jno
fcoms
jge
jne
or
push
xor
lods
adc
mov
mov
std
pop
xor
lret
jge
lock
fcos
mov
jp
call
popf
and
ret
iret
ret
rcrl
sub
incb
loope
xchg
sbb
push
xor
test
and
test
jo
dec
jae
pop
out
sbb
cld
xor
mov
jb
lcall
pop
imul
mov
sar
iret
jp
and
xchg
mull
mov
push
pushf
dec
rclb
add
cmpsl
sub
cld
stos
clc
inc
enter
cmpsl
push
pop
jae
out
dec
sub
loop
aas
sbb
int
int3
stos
mull
icebp
cs
ja
jmp
repz
out
pop
out
cmp
aad
insb
jle
test
mov
movsl
cmpsl
pushf
push
inc
adc
jg
scas
add
pop
jl
je
lret
insb
mov
jle
add
pop
ds
rclb
insl
sub
loop
jg
inc
jecxz
and
loop
in
push
aad
xchg
cmp
fwait
pop
movsl
frstor
mov
add
mov
push
cmp
push
cmpsl
stc
jns
into
jmp
in
jl
shr
cmp
pop
xchg
pop
xor
popa
jbe
push
pop
push
mov
or
iret
int
loopne
pop
decl
cmp
mov
xor
ret
mov
lds
fadd
dec
cltd
shll
mov
xchg
in
daa
dec
dec
ja
dec
cmpsl
pop
mov
lds
cmp
pop
adc
test
mov
stos
cmpl
clc
iret
sub
test
dec
or
push
fwait
mov
cmp
in
xchg
xor
inc
sbb
add
inc
out
lret
sub
dec
out
mov
sar
jecxz
adc
test
sub
jno
xlat
out
frstor
adcb
pop
enter
pop
fisubrs
xor
cld
loope
js
or
sub
xchg
push
or
add
lahf
push
mov
andl
push
cs
mov
testb
test
shl
push
rcll
xor
fs
js
out
push
dec
cmc
inc
or
mov
ljmp
xor
in
and
mov
mov
push
add
xor
je
test
cmp
and
jns
xor
mov
iret
daa
into
lret
dec
fmuls
js
pop
pop
xor
pop
sbb
or
or
in
cmp
andl
int3
es
jmp
icebp
sub
aas
xchg
std
xchg
adc
cmp
adc
ja
pushf
test
xchg
push
bnd
dec
cmp
lock
and
xor
mov
das
adc
mov
mov
push
jle
out
orb
test
cmpsb
xchg
insb
aad
sbb
adc
sub
roll
mov
xor
test
push
xlat
shlb
cltd
inc
loop
pop
mov
mov
dec
div
or
shrl
int
test
dec
xchg
outsb
cmp
xor
test
int
scas
pop
pop
cmpsb
and
sarl
mov
cmp
inc
and
mov
pop
adc
cltd
aam
adc
into
mov
jo
jmp
aas
add
jg
and
mov
fs
cs
push
mov
dec
mov
lods
pop
lcall
adc
ret
or
scas
cmp
jl
pop
and
mov
js
pushf
cmpsb
pop
add
cs
xchg
imul
in
icebp
mov
cmpsl
inc
sahf
mov
or
cwtl
xchg
jb
pop
test
sbb
insl
add
add
push
mov
pop
or
jnp
jns
mov
xor
leave
mov
orl
das
xor
sbb
insl
sbb
mov
mov
les
dec
jecxz
or
mov
jne
je
in
in
sbb
or
sbb
and
mov
arpl
icebp
lret
out
nop
lea
gs
or
jge
insl
jle
pop
mov
xchg
and
xor
mov
cwtl
in
scas
test
jnp
divl
pusha
jno
pop
xchg
pop
iret
jnp
std
iret
adc
inc
sub
inc
out
into
aad
js
loop
jle
aaa
cwtl
es
cltd
mov
loop
in
lcall
mov
out
repnz
js
or
shll
mov
bound
call
jl
daa
push
imul
inc
cmpsl
inc
cmp
jge
mov
stos
add
xchg
pop
mov
jb
and
loope
xchg
outsb
sub
cmp
testb
lea
fisttpll
std
add
sbb
lock
and
scas
pop
cmp
and
mov
mov
es
pop
mov
fimull
repz
popf
sbb
inc
mov
repz
stos
cmp
xchg
fdivrs
jnp
leave
insl
mov
mov
xchg
cmpsb
jno
lods
in
mov
sbb
sbb
sub
xchg
mov
fdivr
jb
jecxz
and
push
popl
ljmp
movsb
mov
stos
inc
and
ja
sub
dec
xlat
and
dec
sbb
gs
sbbb
dec
sti
mov
jecxz
sub
cmp
dec
cwtl
dec
cmpsb
pop
jl
mov
mov
sbb
jmp
out
mov
sub
mov
sub
ret
fs
dec
cmc
insb
cmp
jns
in
ror
pop
dec
and
jmp
js
xlat
adc
cmp
in
xchg
shlb
aaa
jp
pushf
lret
xor
test
bound
push
clc
mov
pop
movb
pusha
push
arpl
jp
mov
and
dec
xor
ret
cmp
repz
mov
cwtl
call
cli
shl
xlat
pop
jg
lret
push
js
sub
adc
cmp
call
fidivrs
arpl
je
popl
mov
sahf
arpl
and
ds
ret
cld
push
outsl
lcall
mov
mov
call
mov
push
outsb
inc
in
inc
sahf
push
insl
imul
aas
jb
icebp
fstps
popa
adc
jle
dec
xchg
push
push
scas
pop
add
dec
in
mov
push
fistps
inc
add
sub
or
mov
out
call
mov
cld
pop
aam
mov
mov
sbb
inc
inc
std
jae
mov
sub
adcb
cmp
pop
cmp
fidivl
scas
xor
and
push
pop
lret
mov
or
addr16
mov
mov
sar
aaa
imul
in
rcll
mov
sub
scas
xlat
gs
lret
add
inc
fidivl
mov
mov
mov
cmp
jecxz
bnd
outsl
sbb
pushf
mov
mov
es
and
arpl
int
out
or
insl
repz
pop
daa
in
jbe
xorb
aaa
lret
cmc
jno
adc
pop
mov
pop
shl
popf
scas
mov
insl
orb
mov
push
fs
fst
mov
push
loope
fs
adc
cmp
es
repz
lods
lods
es
ds
scas
adcl
test
sahf
jno
loop
mov
add
ss
arpl
mov
fistl
xchg
popf
test
mov
mov
sbb
fst
mov
push
aaa
shlb
and
mov
and
js
pusha
arpl
test
jns
mov
push
ror
roll
mov
aam
dec
mov
push
out
ret
aaa
rorb
rcrb
outsb
inc
cmc
pop
test
mov
and
int3
test
add
lcallw
nop
cmp
adc
adc
push
push
leave
push
call
dec
xor
cmpsl
pop
xchg
fcoms
std
bound
add
mov
push
flds
enter
pop
fwait
push
push
jl
add
jle
jnp
push
mov
jp
push
push
mov
lea
notb
or
hlt
cmp
jp
cmp
or
flds
shr
dec
jne
loop
lret
push
jle
mov
fcmovnb
test
push
mov
out
stc
hlt
mov
cltd
pcmpgtw
mov
inc
jo
push
pop
pop
leave
mov
ss
testl
dec
in
xor
btr
imul
dec
cmp
xor
rorl
jae
rclb
cs
mov
sbb
js
xchg
adc
pushf
imul
adc
xchg
dec
xor
pop
and
sub
inc
xchg
xchg
jns
mov
fadds
dec
int
aas
lret
out
push
xchg
lds
test
lea
lods
imul
adc
mov
jo
and
sbbl
shrl
mov
jecxz
movsl
mov
je
or
sahf
jne
pop
pop
scas
pop
out
dec
xor
inc
inc
inc
jne
lea
and
jl
sub
cmp
paddusw
sub
lret
pop
mov
pop
xor
add
cld
sbb
xchg
cmpsb
mov
mov
push
into
mov
jecxz
inc
rcrl
out
shrb
sub
mov
ficomps
sbb
ja
jno
sub
dec
andb
loope
xchg
sub
lea
dec
mov
add
xor
dec
add
repz
cmp
inc
sub
mov
stc
test
arpl
xchg
jl
sbb
sub
pop
lcall
xor
cmpl
nop
aad
fwait
ret
dec
jae
jmp
xchg
push
push
push
add
fisubs
push
sub
bound
xchg
dec
daa
inc
dec
lods
pop
add
and
or
repnz
add
ja
dec
sti
jg
xchg
adc
stos
ljmp
push
adc
fidivl
scas
nop
sbb
push
xchg
arpl
rcll
xchg
clc
cltd
fld
mov
push
pop
int3
push
arpl
stc
cltd
sbb
jnp
dec
lret
push
cmpb
cli
mov
inc
je
jp
aam
js
iret
imul
popf
cs
jecxz,pn
bound
pop
stos
dec
sti
inc
jg
jns
rcrl
and
dec
jecxz
mov
sbb
xor
xchg
sbb
mov
push
cmpsl
mov
add
jg
inc
and
fstpt
in
lcall
sbb
scas
into
ljmp
xchg
lock
stc
add
mov
push
pushf
sbb
push
xchg
adc
add
xor
xchg
mov
cmpsb
jg
adc
lcall
fistpl
out
and
cld
sbb
cmp
or
cmp
pop
scas
dec
fcmovu
popf
dec
sub
lds
sub
mov
movsb
sub
fidivrl
mov
fisubrs
and
shrl
mov
push
outsl
cli
inc
das
mov
inc
inc
mov
bound
jb
cwtl
lret
pop
sbb
and
mov
mov
push
lret
push
pop
mov
sub
rcr
lods
out
iret
pop
push
mov
repnz
loopne
inc
adc
adc
aad
daa
daa
rcr
cmpsb
and
mov
adc
sbb
cli
movsl
xchg
jne
loop
mov
and
popf
jp
mull
dec
mov
scas
cmp
pop
dec
or
xor
jnp
ss
jl
pusha
bound
ss
les
dec
shl
jno
jecxz
ret
push
push
stos
and
aaa
imul
call
les
sub
data16
mov
sarl
shll
mov
test
xor
dec
xchg
mov
in
sbb
xor
fiadds
test
and
imul
sbb
cmp
fwait
pop
icebp
ficoml
ljmp
jmp
test
rclb
push
in
in
sub
pop
xor
sbb
mov
les
push
imull
outsl
adc
pop
or
or
inc
fiaddl
loope
clc
aas
xchg
push
adc
or
out
xor
test
repz
shrl
idivl
fmul
or
xchg
std
mov
mov
and
sub
add
mov
mov
or
jl
pushf
ret
and
aaa
push
iret
je
inc
pop
pop
sub
imul
jnp
bound
or
scas
pop
pusha
int3
mov
nop
mov
push
pop
pop
cmc
dec
lret
in
enter
inc
rclb
js
xchg
jno
sahf
je
adc
popf
dec
sub
mov
add
lds
sub
fisttps
sub
sub
push
jle
or
inc
jmp
bound
jbe
cli
mov
jmp
repz
repnz
jns
cmc
in
dec
stos
cltd
xchg
dec
pop
pop
iret
push
fadd
inc
ret
mov
mov
pop
out
fsin
inc
in
jmp
sub
push
xchg
icebp
jge
repnz
ja
clc
mov
mov
adc
leave
push
fcompl
sahf
testl
icebp
mov
push
xchg
mov
out
push
inc
dec
adcl
jns
clc
jecxz
and
aam
jle
dec
inc
scas
fst
pop
mov
and
add
xor
cs
cld
dec
xor
ret
jns
and
mov
xchg
orl
call
aad
mov
sub
outsb
pop
inc
cld
and
mov
shlb
or
scas
fiaddl
test
faddl
call
pushf
add
lods
mov
adc
int
xor
mov
xchg
xor
jno
shlb
pusha
lods
insb
sub
adc
xor
call
jl
or
cs
test
dec
adcb
cmpsl
sbb
jo
fmuls
lret
inc
add
inc
lahf
push
cs
out
dec
out
clc
or
inc
stos
aaa
ret
sbb
jae
add
pop
and
js
mov
cwtl
jecxz
repz
mov
or
arpl
jae
add
pop
and
js
mov
cwtl
jecxz
repz
mov
or
arpl
cmp
dec
adc
and
js
push
rcrl
or
fsubs
or
bound
jae
add
pop
mov
ja
xor
repz
hlt
inc
sbb
pop
pop
dec
pop
rdtsc
pop
fisubrs
out
aas
incb
das
lock
sbb
scas
jle
jl
push
fistps
out
ds
ds
pop
fisubrs
out
aas
decb
pop
sahf
outsl
scas
jg
dec
lahf
pop
fisttpl
jle
insl
out
cs
ds
pop
fisubrs
idivb
out
xchg
pop
xchg
jg
lods
lahf
fcompl
xchg
jle
dec
mov
ds
into
pop
mov
lcall
in
test
lds
addr16
sub
and
mov
lahf
fisubl
add
and
ss
mov
and
jle
mov
dec
out
add
xor
adc
dec
sahf
adc
xchg
push
lret
cmc
sahf
push
rcl
sti
outsl
push
push
push
mov
aas
ds
sahf
push
ficomps
mov
pop
xchg
notb
inc
push
mov
xor
loope
movsb
std
push
lock
inc
adc
push
hlt
scas
push
bound
jle
lahf
ret
arpl
sub
jle
data16
lock
push
mov
jg
xchg
hlt
xor
dec
cmc
dec
push
jnp
outsb
repz
fisubrs
rcll
leave
das
aas
in
mov
outsl
mov
cmpsl
push
lahf
inc
scas
ja
addr16
push
fisttps
out
lcall
stos
jbe
dec
out
pop
jmp
fcoms
lock
ds
daa
fwait
es
cmp
adc
cs
push
or
insl
fidivrs
pop
sti
or
xor
aaa
popf
aas
out
sbb
cmp
popf
inc
lcall
jnp
inc
mov
pop
sahf
outsl
scas
jg
dec
lahf
pop
scas
outsb
mov
push
out
cs
ds
pop
fisubrs
out
aas
decb
pop
sahf
outsl
scas
jg
dec
lahf
pop
scas
outsb
mov
push
out
cs
ds
mov
in
xchg
mov
test
dec
pop
hlt
add
jae
push
xor
test
scas
xor
nop
xor
adc
or
out
imul
mov
ljmp
adc
bound
sbb
lods
sub
stc
jg
xchg
fsubs
mov
cmpsb
mov
lea
add
push
adc
push
in
xlat
add
cmp
lods
lds
pop
xchg
xchg
push
pop
add
mov
push
fcmovnu
adc
cli
cs
inc
sbb
arpl
cmpsb
mov
mov
fs
xchg
add
int3
cmpsl
pop
popa
mov
pop
shll
push
mov
cmpsb
sarb
lods
cmp
call
leave
cltd
arpl
mov
add
bound
jne
jne
cmp
imull
mov
or
mov
out
pop
xor
mov
jmp
cmc
inc
sbb
data16
out
out
clc
pop
mov
push
roll
fstps
fsubrs
rcrb
inc
dec
pop
test
sub
adcb
das
out
test
jp
daa
mov
shll
and
xchg
mov
xor
lret
scas
dec
jns
aam
xchg
sahf
shll
fadd
cmp
dec
out
mov
cmp
xlat
mov
cwtl
ss
mov
iret
mov
jne
in
enter
hlt
dec
sbb
jb
pop
jmp
adc
out
lea
mov
call
xchg
icebp
ret
imull
xchg
ret
dec
pop
lds
dec
fldl
pop
arpl
pop
mov
xchg
out
mov
mov
cltd
add
mov
jmp
adc
pop
int
jmp
lods
mov
popf
lret
pusha
xchg
lahf
cmp
push
repz
ds
sbb
xor
add
and
loope
adc
push
pusha
mov
popf
and
xchg
xchg
arpl
sub
into
pop
imul
and
je
fistpll
fbstp
xchg
pop
inc
pop
inc
inc
std
xor
jb
xchg
pop
iret
lods
lods
bound
or
add
xchg
repnz
push
mov
in
das
mov
pusha
adc
rorb
xchg
loopne
dec
stos
cmp
mov
xchg
xor
mov
push
rcl
xchg
mov
addl
repnz
or
cmp
cli
and
inc
dec
test
push
pop
pop
jnp
fldl
pop
mov
jecxz
test
inc
lds
push
xor
jbe
or
sti
jp
and
aas
xor
pop
sti
lcall
mov
outsb
push
jbe
test
pop
lods
dec
movsl
adc
mov
popa
call
out
mov
jl
dec
ret
js
pop
bnd
mov
in
ret
mov
sbb
mov
aad
xchg
sbbl
js
mov
btc
and
sbb
adc
outsl
dec
enter
int
push
out
loopne
push
rcl
stos
scas
xor
add
sub
imul
jno
mov
mov
pop
mov
pop
adc
sbb
push
and
les
insb
test
test
cld
in
mov
add
shlb
jp
cs
mov
jmp
push
add
or
push
mov
push
pop
pop
and
mov
add
psrlq
inc
fsts
rcl
mov
xchg
rol
inc
mov
repnz
ss
lea
cmp
testl
cltd
int3
sbb
jbe
loop
data16
mov
mov
test
xchg
mov
push
xchg
dec
sbb
add
dec
or
pop
test
je
fidivrs
sub
and
xor
or
lds
xchg
sarb
xor
or
mov
dec
xchg
mov
pop
mov
rcll
inc
push
aas
push
fidivl
xchg
push
dec
rep
fdivrs
imul
ja
cmp
mov
aaa
mov
push
xchg
sub
aam
pop
xchg
call
inc
mov
push
fistl
sbb
mov
jg
sub
jmp
rolb
inc
xor
movsl
lods
sarl
insb
mov
push
xchg
mov
mov
or
and
ror
mov
mov
push
stc
mov
jno
dec
repz
loop
scas
mov
je
pop
xchg
dec
sub
or
push
insl
add
addr16
pop
dec
sub
cmp
push
iret
and
int
mov
mov
movsl
mov
aaa
xor
ljmp
fisttpll
arpl
sti
pop
add
jl
or
ret
sub
pushf
fstps
dec
scas
nop
add
ss
dec
pop
jle
es
loope
sub
jae
push
and
add
and
jmp
mov
aaa
pop
loope
pop
pop
mov
pop
cmp
pop
sub
xchg
shlb
mov
pop
push
dec
xor
rcrb
pushf
or
inc
and
and
ret
xor
out
pushf
data16
loope
pop
into
mov
mov
inc
out
pop
or
fidivl
int3
pop
es
dec
lret
movsl
into
jmp
jp
xor
int3
mov
adc
pop
inc
push
jecxz
fdivrs
testl
dec
cld
das
lahf
push
xchg
lea
sbb
mov
pop
es
lret
mov
xchg
popa
movsb
pop
imul
or
ret
emms
jbe
scas
addr16
mov
pop
cmp
shll
stc
add
push
xor
jae
sbbl
fsubrs
mov
test
mov
jmp
jae
fimull
xchg
and
aas
test
jl
adc
test
in
push
pop
add
lcall
icebp
sbb
pop
stos
jb
xchg
xchg
sarl
pop
out
pop
repz
dec
jnp
out
addl
xor
push
push
test
cwtl
les
xchg
rcrl
jmp
xchg
mov
xlat
dec
cwtl
cmpsb
cmp
enter
dec
lahf
mov
xor
imul
movsl
push
and
fs
call
mov
push
mov
dec
outsb
cmc
adc
mov
sub
dec
pop
push
push
gs
ds
and
sahf
cs
cmp
dec
arpl
test
push
mov
cmp
lret
pop
hlt
and
testb
mov
add
mov
sarb
push
cmp
jns
mov
popl
mov
mov
pop
mov
or
or
das
inc
outsb
movsb
dec
fistl
push
sub
insb
cmp
or
pop
test
sbbb
pop
mov
jmp
lret
fiadds
pop
inc
outsb
shll
or
lds
imul
jb
js
inc
dec
adc
mov
add
or
imull
xor
mov
daa
sub
mov
sahf
push
aam
stos
stos
sahf
cltd
and
xchg
sbb
inc
jmp
hlt
test
and
out
or
lods
inc
lret
jo
out
lods
mov
or
adc
dec
mov
sbb
aas
iret
and
sbb
jb
lock
xchg
scas
mov
mov
lods
xor
lahf
fs
aas
mov
mov
or
out
fcoms
inc
lods
test
sti
aas
or
ret
pop
mov
shlb
loopne
cmp
fdivrl
bound
dec
xor
fwait
jo
outsb
scas
xor
dec
fcomps
lods
cmc
ret
or
add
xor
ds
insl
push
xchg
mov
push
push
jecxz
jl
cwtl
stos
dec
add
push
inc
xchg
fstpl
jp
inc
inc
jecxz
cmp
lret
lds
inc
call
repz
sarl
loope
ss
sbb
xlat
cwtl
inc
add
fwait
repz
fisubrl
enter
push
sti
jbe,pn
lret
das
rcrb
les
xchg
mov
xchg
ret
insl
xchg
push
cmc
xchg
pop
jp
dec
outsb
in
cwtl
mov
iret
inc
mov
cmc
imul
cmpsb
pop
hlt
fadds
jge
aam
dec
fisttpl
or
mov
mov
and
ljmp
movsb
adc
pop
pop
push
shll
rcrb
jge
mov
sbb
add
and
push
pop
call
sbb
aad
cmp
push
cmp
fistpll
jge
test
cmp
sbb
xchg
mov
and
test
movsl
pop
mov
add
outsb
ficompl
inc
divl
sub
push
push
fcmovbe
push
aam
xchg
jecxz
and
push
sahf
dec
dec
cmp
icebp
xlat
movsb
and
push
mov
out
jmp
xchg
jp
imul
out
xor
imul
push
inc
pushf
xor
out
rcll
mov
lods
rorb
stos
out
cmpxchg
pop
call
jb
ljmp
jmp
outsb
mov
shrl
cmp
sarl
jl
xchg
sti
mov
inc
dec
dec
or
and
pop
jne
ficoms
jnp,pn
cmpsl
or
cmp
pop
cs
cmp
icebp
rcl
sbbb
lret
sbb
jecxz
pop
inc
or
das
repnz
in
mov
les
xchg
ret
jecxz
sahf
inc
cmp
ja
push
jle
dec
mov
push
mov
cs
and
bound
push
push
xchg
into
cmp
insl
in
lds
adc
sti
hlt
aaa
cmp
inc
sbb
sub
mov
cmp
into
hlt
icebp
fcomps
js
and
xor
fadd
jg
xlat
pop
dec
inc
orb
pop
test
lret
inc
int3
repz
sbb
lods
fwait
lret
jge
lahf
gs
fcmovb
lret
jle
rcl
dec
addb
or
sbb
sti
enter
dec
xor
insb
scas
xor
mov
jg
repnz
sub
fisubrl
push
adc
fildll
cld
adc
lret
sbb
dec
cld
and
outsl
fstps
rcr
adc
out
sub
xor
pop
mulb
cli
inc
jns
mov
in
and
pop
push
popa
pop
and
push
mov
sarl
adc
or
int3
pop
fildll
sbb
aam
loope
dec
xor
inc
test
dec
cmp
je
shrl
loopne
lahf
int3
scas
jae
fcmove
sub
jo
imul
ret
scas
in
pop
mov
adc
xchg
lcall
mov
jns
shlb
mov
adc
dec
mov
sbb
sub
xchg
cmpsl
dec
lods
cmpsl
iret
mov
es
and
jae
fmul
xchg
or
stos
cld
fimuls
pop
lahf
jbe
xchg
cmpsb
xchg
sti
xor
dec
inc
shl
or
push
fdiv
xchg
in
dec
jl
mov
mov
mov
jecxz
test
mov
out
addl
jbe
cs
int3
xchg
add
xchg
pop
cmp
out
movsl
call
add
inc
add
ret
mov
add
dec
xchg
cltd
pop
sub
xchg
pop
sub
mov
movsl
ds
hlt
push
mov
xor
pop
and
push
lds
jns
jl
push
sbb
mov
fidivrs
push
out
int3
xchg
sub
or
out
mov
int
psrad
lds
xor
out
inc
addl
loop
lea
icebp
dec
scas
mov
scas
outsb
jecxz
loop
adc
pusha
push
xchg
scas
jnp
push
adcl
mov
movsb
xchg
mov
sbb
pop
mov
push
ds
mov
or
mov
ljmp
jbe
inc
mov
push
ljmp
xchg
mov
sahf
jecxz,pt
cltd
shl
jns
inc
lods
inc
cmp
sbb
xchg
mov
mov
shr
movsl
push
pop
add
fsubrl
and
pop
ret
jp
xlat
add
cld
inc
pop
sbb
push
sbb
enter
jb
cmp
jle
sub
add
ja
cmp
addr16
mov
cmc
push
xor
movsb
or
lods
sbb
cmpb
jmp
das
cmp
out
fmul
out
jge
jb
fisubs
ret
cmp
or
xchg
and
dec
jecxz
fisubrl
cmp
push
or
jnp
and
inc
leave
mov
stc
aaa
out
jo
es
das
add
int
ficompl
xchg
adc
xchg
es
adc
mov
outsb
out
outsb
or
adc
out
sbb
pop
faddl
xchg
push
loope
push
stos
sbb
add
int
mov
shrl
hlt
loop
pop
add
add
sbb
ss
adc
imul
aaa
mov
stc
jne
pop
sbb
in
pop
or
out
in
jl
mov
add
cmp
aam
stos
sbb
ja
cld
or
data16
sbb
add
xchg
rol
aaa
fldl
add
lods
xor
ret
scas
xor
pop
daa
cltd
mov
rcrl
movsb
mov
dec
cmc
mov
add
and
insl
jns
inc
mov
clc
mov
fbld
icebp
xor
roll
xchg
fsts
aaa
cwtl
pop
scas
fiadds
in
xchg
sub
mov
cwtl
out
out
add
xchg
out
xor
stos
incl
xor
shll
adc
sbb
mov
or
and
mov
sub
fwait
sbb
ss
or
lds
stos
out
add
add
aad
test
mov
or
cmp
mov
mov
clc
hlt
jle
pusha
iret
sbb
or
add
mov
insl
aas
int
sahf
xor
mov
nop
popw
sbb
jnp
adc
cmp
xor
test
lret
push
add
xchg
xchg
lods
push
xchg
jnp
pop
pop
xor
mov
xchg
dec
cmpsb
jmp
hlt
sbb
sub
xor
lds
sub
popa
shlb
std
xor
xchg
jns
push
dec
and
pop
mov
movsl
mov
dec
sub
push
lds
jns
fs
mov
arpl
jb
mov
cmp
in
in
push
push
scas
sub
int
mov
test
mov
sti
pushf
loope
outsl
inc
insb
testb
stos
lock
fs
jne
jmp
cmp
adc
adc
xor
stos
cmpsl
scas
cmp
add
cwtl
aaa
popf
xchg
jne
into
outsb
out
movsl
xchg
cmc
lock
mov
mov
sbb
psraw
dec
xchg
pop
mov
cmpsl
rcrb
push
sahf
sbb
js
adc
in
lock
xchg
cmp
sub
idivl
inc
lahf
orb
cmp
out
arpl
lret
dec
jbe
je
stc
sbb
mov
ret
outsl
jge
repz
mov
or
test
fs
jno
lret
dec
jecxz
out
push
dec
loope
rorb
xor
sbb
cmpsl
and
hlt
add
pop
push
notb
mov
popa
pop
leave
push
stos
fs
andl
mov
outsl
pop
adc
pop
cmp
dec
mov
js
addb
int
into
scas
inc
or
jge
aas
xchg
and
push
sub
je
andl
inc
pop
sub
cmpsl
xchg
cwtl
jl
sahf
rep
xchg
pusha
aam
aad
mov
pop
jo
out
adc
or
ficomps
mov
add
adc
pusha
xchg
sub
and
shl
cmp
xor
fcoms
xor
mov
popa
lods
xchg
sahf
inc
xor
addb
imul
inc
cmp
lea
aad
sub
adcb
jb
fldcw
jne
ret
stc
gs
dec
sti
jl
test
mov
or
inc
or
popa
lods
andl
adc
test
inc
adc
sbb
cli
xor
cmp
pop
xlat
and
adcb
cltd
das
pop
scas
nop
xchg
test
stos
insl
cmc
es
or
mov
push
mov
mov
arpl
out
add
stos
mov
adc
aad
dec
test
cmp
push
repnz
scas
and
push
stos
div
popf
push
mov
int3
repz
mov
add
mov
dec
xchg
roll
jbe
ficoms
mov
xchg
mov
cltd
insl
pop
jecxz
shl
pop
insl
pusha
lcall
cmpsl
in
imul
mov
cmp
insb
mov
jmp
sub
outsb
leave
push
loop
lods
mov
jmp
cmp
outsb
imul
push
iret
cmp
xchg
pusha
jg
cmp
push
out
lods
xor
xor
mov
sub
sbb
sbb
cmc
sub
std
aad
jo
stos
mov
xchg
or
out
and
cmp
fimuls
decl
pop
add
dec
mov
mov
lds
pop
mov
mov
js
sbb
add
jae
cltd
fucomip
insl
daa
int
ss
stc
clc
scas
int
into
fisttps
fwait
cmc
fmull
pop
xchg
addr16
dec
leave
lret
pop
fwait
sbb
pop
pop
mov
mov
sub
lock
xchg
cmc
ret
adc
addr16
xchg
jb
jge
xlat
scas
out
mov
xlat
mov
les
aaa
lret
cmp
dec
int
adc
addr16
insb
push
sub
sti
fsub
xchg
insb
dec
call
clc
xchg
push
jp
push
jo
mov
push
sub
adc
xchg
sbb
mov
inc
pop
sub
fucom
sbb
xor
sub
xchg
jnp
jnp
mov
ds
fsubrs
mov
or
push
mov
xor
push
or
cs
fs
sbb
rcl
aad
sahf
jb
inc
sbb
jnp
jecxz
sbb
push
adc
pusha
xor
cmp
ljmp
xchg
dec
and
test
pop
dec
push
in
pop
out
jle
cmp
or
push
sbb
lret
rclb
mov
and
mov
or
iret
push
mov
andb
or
pop
xor
sub
xchg
imul
cld
push
xchg
inc
cmpsl
repnz
push
outsl
xchg
ret
xchg
mov
pop
std
inc
add
lret
fwait
sbb
xor
add
and
xor
push
loop
push
outsl
cwtl
call
push
jp
ret
out
jo
mov
sub
arpl
mov
pop
xchg
rorb
adc
lret
sbb
add
dec
jnp,pn
mov
in
and
lret
mov
hlt
sbb
or
sub
cmp
mov
pop
xchg
adc
cmc
mulps
mov
xchg
cmpl
mov
add
test
or
adc
cmc
jp
outsb
and
add
add
xor
imul
es
outsb
insb
xor
cmpsb
xchg
int
shl
mov
push
jp
subl
inc
and
jbe
or
pop
cmpsl
lods
mov
aad
repz
mov
jg
or
mov
daa
or
sub
leave
adc
rorl
cmp
data16
into
clc
lods
outsb
dec
mov
jne
adc
cli
and
sbb
fisubl
pop
push
lret
cltd
pop
fimull
jae
cmp
xchg
pop
inc
ret
sbb
in
fs
inc
outsb
ss
inc
int3
mov
xchg
dec
or
cmpsl
not
cmc
sub
dec
mov
dec
jg
iret
or
stos
arpl
jecxz
shrb
aam
std
pop
out
mov
jle
push
xchg
mov
pop
mov
inc
jnp
adc
or
jmp
mov
aam
xchg
test
dec
mov
lret
xchg
mov
adc
leave
or
push
push
push
dec
int3
jg
cmp
inc
inc
test
cmpsl
push
fldenv
push
pop
iret
fistl
ja
mov
dec
xchg
sub
adcl
rorb
pop
and
push
xchg
insb
fimuls
call
test
aam
test
sbb
add
inc
stc
outsb
fmul
inc
fsubr
shll
push
mov
bound
clc
imul
ds
push
sbb
mov
outsl
xchg
jb
cmpb
repz
pushf
fistpll
icebp
push
and
imul
pandn
test
out
cmp
jl
scas
addb
adcb
push
js
sub
dec
test
into
push
cmp
imul
stc
push
pop
and
cli
lret
repz
sub
push
into
stos
or
pop
hlt
jl
mov
inc
aaa
repz
fcompl
pusha
dec
adc
call
xor
js
cmp
das
out
push
lods
aas
ljmp
lret
sarb
lret
movsb
lea
les
lea
xchg
xchg
xchg
popf
sub
or
aas
decb
pop
sahf
outsl
scas
jg
dec
lahf
pop
scas
outsb
mov
push
out
cs
ds
pop
fisubrs
out
aas
decb
pop
sahf
outsl
scas
jg
dec
lahf
pop
scas
outsb
mov
push
out
cs
ds
pop
fisubrs
out
aas
decb
pop
sahf
outsl
scas
jg
dec
lahf
pop
scas
outsb
mov
push
out
das
ds
pop
fisubrs
out
aas
decb
pop
sahf
outsl
scas
jg
dec
lahf
hlt
add
xchg
adc
add
push
mov
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
pop
pop
loop
push
jp
add
jae
pop
push
push
addr16
cmpsl
xlat
lcall
pop
pop
pop
push
jp
or
inc
sub
addr16
cmpsl
mov
inc
stos
mov
out
pop
fiaddl
in
aaa
mov
inc
push
ja
addr16
xchg
test
test
out
pop
jp
cs
or
movsb
lods
cmp
or
in
jno
push
adc
dec
out
decl
xchg
repz
in
add
daa
dec
jg
js
mov
sub
mov
aaa
mov
dec
dec
adc
sbb
xchg
pop
aaa
add
adc
pop
pop
pop
or
outsb
lar
test
sti
das
daa
or
inc
sub
cmp
cli
dec
add
cmp
mull
fdiv
push
cltd
push
outsb
bound
or
rclb
lcall
sbbl
xchg
loop
scas
add
xchg
loop
xchg
cmpsl
cli
cmpsb
cmpps
jns
pop
pop
push
push
daa
or
inc
sub
cmp
xor
test
stos
neg
mov
js
pop
cs
adc
cmp
cmp
pop
aaa
stos
repnz
repz
mov
mov
cmc
std
cmpsb
dec
pop
rolb
arpl
jnp
inc
add
repnz
fwait
repnz
xchg
enter
lods
fists
imul
sbb
ja
addr16
xchg
mov
cmpsl
mov
lcall
pop
pop
pop
push
jp
or
inc
sub
addr16
xchg
mov
cmpsl
mov
lcall
pop
sahf
dec
ret
pusha
inc
fwait
cmp
popa
dec
leave
dec
cmpsb
popf
cmpb
cmp
inc
mov
pop
sbb
stos
pop
push
sbb
or
imul
add
or
fs
mov
pop
call
jb
test
in
xchg
sar
sbb
pusha
cli
sub
mov
test
adc
cwtl
in
mov
inc
popa
and
in
sub
sbbb
jnp,pt
cmp
push
outsb
nop
xchg
loope
out
mov
test
shll
in
adc
dec
fs
lds
nopl
mov
adc
jae
xchg
jb
cvtpi2ps
push
fsubs
xor
mov
jle
ljmp
xor
push
mov
and
inc
lods
mov
aaa
inc
sub
and
jno
lcall
imul
push
jg
pusha
mov
jmp
sbb
mov
orb
movsl
aas
dec
pop
pop
outsb
xlat
loopne
lret
mov
xchg
ljmp
call
mov
clc
jge
sbb
jb
jne
cmp
mov
sarb
add
push
mov
xor
sub
imul
clc
pop
lcall
jl
mov
mov
aas
sbb
sbb
jbe
enter
scas
sub
push
loop
stos
mov
negb
pop
out
dec
ficomps
das
andb
mov
jne
jle
and
nop
xor
aas
jnp
enter
fstl
mov
sbb
sbb
lds
push
mov
mov
pop
sahf
mov
jae
cli
mov
jnp
xor
and
mov
subl
cmp
test
lea
rcll
lods
aam
std
sbb
pop
mov
mov
xor
in
jb
mov
inc
data16
lods
mov
xchg
add
mov
std
jg
cwtl
dec
push
call
insl
adc
orl
dec
push
jae
arpl
les
cmp
xchg
sar
push
adc
rcrl
cmp
aas
dec
mov
in
mov
and
icebp
imul
fildl
cltd
mov
sub
xor
bound
mov
jmp
cmp
ret
js
push
or
or
mov
xchg
cmpsb
mov
in
movsb
mov
stos
mov
xor
test
jbe
adc
pusha
cli
mov
repz
fstp
loop
ds
int3
insb
dec
fdivs
fucomi
shrl
dec
sub
mov
imulb
movsb
rcrb
jb
jp
ss
dec
das
stos
add
xchg
lret
jecxz
pop
test
adc
adc
out
sahf
test
sbb
out
xor
sbb
mov
push
popa
clc
pop
pop
pop
imul
test
and
iret
clc
and
fists
mov
mov
adc
sbb
dec
mov
rolb
mov
loopne
in
test
mov
mov
dec
pop
pop
movsb
leave
in
popf
sbb
movsb
lock
xor
shll
imul
dec
test
inc
fildl
ds
das
xchg
mov
pop
xor
mov
sub
negb
test
sub
pop
out
mov
inc
dec
test
pop
mov
loopne
loope
and
lret
pop
inc
es
mov
mov
imul
mov
sti
lds
inc
lods
cs
mov
lea
push
pop
push
pop
arpl
icebp
insl
scas
jg
lcall
addl
adc
sub
mov
clc
movsb
or
mov
dec
jae
cmp
andl
aaa
cmc
xor
mov
mov
add
jno
icebp
daa
inc
in
mov
out
inc
push
roll
hlt
nop
mov
popa
lahf
or
push
loope
fdivrs
mov
xor
mov
jle
notl
repnz
xchg
stos
insb
sbb
cltd
getsec
test
fstl
push
test
mov
add
testb
cwtl
push
pusha
lahf
add
out
loop
mov
or
push
test
cmp
test
jmp
loop
fnclex
fs
andb
aad
and
loop
movsb
adc
mov
ljmp
lods
add
enter
mov
aad
and
dec
xchg
xchg
in
jae
xor
sbbl
in
and
fistps
push
rorl
cltd
push
call
in
push
leave
cmc
das
lea
movsb
aam
and
mov
mov
mov
inc
sub
test
cmc
js
and
jecxz
and
mov
ss
test
add
std
scas
push
idivb
pop
divl
or
pop
xor
iret
push
pop
adc
pop
sub
popa
and
sub
push
insb
add
movlps
pop
cli
xchg
mov
data16
mov
ja
mov
lock
arpl
mov
inc
mov
or
sub
push
dec
bswap
cli
les
mov
xor
in
mov
mov
lods
scas
lret
xlat
orl
rclb
lea
dec
test
dec
push
ljmp
mov
icebp
cmpsb
notb
rcll
mov
es
js
stos
mov
mov
clc
fstps
fiaddl
xor
cmpb
out
jg
pop
addr16
in
inc
notb
cs
add
cpuid
push
mov
decl
cmp
fnsave
cmp
notb
dec
in
and
inc
cmp
push
test
mov
mov
push
dec
pop
push
cmp
push
mov
int
sti
jbe
xchg
mov
mov
sub
and
jecxz
jmp
pop
sbb
xchg
out
mov
add
lret
les
cmp
dec
sub
outsl
adc
push
jne
call
stos
cmp
popa
adcb
test
mov
xchg
out
out
arpl
lds
jl
sarl
cmp
mov
jnp
mov
dec
test
sub
adc
je
push
sub
lock
cmpl
lock
mov
andl
add
out
mov
mov
xchg
mov
sti
jge
jl
dec
nop
lcall
mov
mov
dec
mov
pop
mov
mov
mov
xchg
clc
pushf
pop
mov
mov
sub
pop
xchg
and
stc
sbb
pop
out
hlt
fwait
pusha
sbb
and
push
pop
pop
mov
ljmp
or
mov
pop
pop
adc
arpl
mov
sub
xchg
pop
mov
les
subl
add
insb
test
adc
lret
stc
jo
jmp
jns
xchg
cwtl
xorb
push
dec
fs
push
xchg
adc
aaa
leave
cmpl
xchg
inc
xor
movsl
cmpb
aad
into
ds
addr16
pop
faddl
aam
mov
dec
jb
dec
xchg
fstp
enter
dec
outsb
ljmp
inc
cmp
push
adc
adc
adc
add
and
jbe
push
xor
dec
ja
and
daa
jno
stc
add
pop
adc
test
jae
iret
pusha
imul
push
cli
and
rorb
dec
push
sbb
loopne
jae
cli
test
stos
add
pop
pop
sub
inc
mov
fisubrs
jns
inc
out
cmp
mov
mov
pop
mov
and
sbb
hlt
pop
shrb
aam
aad
adc
sbb
sbb
out
mov
btr
xor
out
adc
sbb
fwait
lods
jns
je
pop
adc
sahf
pushf
push
dec
int3
test
test
inc
mov
insl
dec
sbb
inc
stc
imul
ret
fimull
pop
mov
mov
dec
push
pop
ja
jnp
scas
pop
adc
adc
push
imul
mov
dec
cmpsl
add
insb
or
jl
pushf
cwtl
je
pop
jecxz
in
cld
jmp
mov
popa
jb
pop
jne
das
dec
daa
inc
add
cmpsl
sub
xchg
mov
push
sub
je
xchg
xchg
out
mov
jg,pt
jmp
jg
movsl
jae
xchg
mov
jns
mov
adc
repz
call
jae
lret
mov
xchg
lahf
mov
pop
push
lock
ret
push
stc
dec
stos
push
outsb
xor
cwtl
sti
cwtl
jnp
nop
push
fwait
or
les
fcomps
mov
lret
mov
pop
adc
fimull
pop
mov
inc
pop
fsts
mov
sbb
inc
cmp
test
xchg
fiaddl
icebp
gs
and
cmpb
sub
cmp
xchg
adc
add
pop
xlat
or
sbb
mov
sub
sbb
and
mov
xchg
push
xor
cld
lods
xchg
aas
push
dec
mov
xchg
fcoms
mov
adc
loope
cmp
leave
sbb
xchg
mov
incl
fisubrl
add
xor
or
sar
mov
les
in
aas
loop
insb
rolb
fmulp
lea
cmp
movb
push
bound
ja
inc
pop
pop
loope
jecxz
pop
cmp
jecxz
adc
sti
sbb
mov
and
fdivrl
arpl
scas
dec
ret
imul
jne
jnp
sub
dec
lret
roll
insb
sbb
fistpl
and
mov
push
insb
inc
mov
push
xor
pop
adc
sbb
add
mov
ret
mov
mov
sbb
mov
pop
cld
std
scas
popw
mov
mov
mov
jb
jg
xor
pop
cmpsb
push
loope
in
daa
sarl
add
cmpsb
sbb
lods
sbb
lahf
ljmp
mov
in
gs
jno
sarl
xor
lds
movl
push
test
or
dec
int3
sahf
mov
pop
mov
loopne
fs
mov
sub
scas
push
dec
xchg
xor
std
icebp
or
fwait
fwait
cwtl
ds
rcl
divl
sub
ret
incb
mov
sub
push
sub
stos
jb
iret
jae
pop
clc
repz
enter
pushf
daa
enter
mov
and
adcb
cmp
xchg
pop
pop
daa
nop
xchg
xchg
mov
cmp
mov
sbb
cmpsl
push
scas
out
push
dec
call
xchg
pop
stos
mov
sub
mov
jl
repnz
mov
mov
iret
dec
mov
sarl
adc
adc
sub
jnp
in
popf
add
fxam
xchg
xchg
ret
add
lret
jmp
push
outsb
dec
jle
cld
mov
ficompl
xlat
sahf
or
cltd
xor
sbb
push
adc
jne
arpl
ljmp
sbb
inc
and
in
inc
ljmp
adcb
adcb
out
adc
lods
call
call
clc
jmp
imul
arpl
jge
sbb
mov
push
shll
sbb
sub
outsb
in
stos
sub
ljmp
pusha
sbb
dec
scas
dec
push
jl
sbb
jg
mov
aaa
sbb
fisubl
rorb
lcall
lock
cmpsl
sti
test
and
sbb
jnp
int
into
gs
mov
iret
sub
outsl
ljmp
addb
fisubl
cmp
inc
mov
pop
mov
sbb
push
mov
xor
cltd
cmp
xor
stc
addl
scas
cmpsl
inc
xchg
sub
pop
inc
cmp
hlt
xchg
and
pop
mov
notb
mov
push
xchg
pusha
mov
jns
adc
pop
rcrl
lcall
aad
mov
mov
inc
inc
sub
jmp
cld
lcall
sbb
jecxz
fistpll
cmc
and
movsl
or
pop
out
das
fs
sbb
pushf
cmp
aam
pop
push
call
loope
sbb
out
clc
fiaddl
xchg
std
lods
mov
idivl
insl
add
popa
fyl2xp1
xor
lcall
xor
mov
lret
sbb
dec
rclb
dec
mov
cli
stos
mov
pop
mov
arpl
jnp
xor
lods
movsb
cmpb
mov
jo
subb
mov
pushl
cmp
nop
pop
mov
mov
xor
cmp
mov
add
sbb
cld
movsb
add
fistpll
dec
out
or
xor
adc
mov
add
inc
shll
test
stc
jbe
and
jo
xor
inc
inc
xorl
outsl
xchg
mov
fisttps
scas
stos
lods
clc
xchg
xor
xor
pop
pop
ja
nop
jnp
leave
cmp
or
xchg
xchg
cld
add
stos
mov
sbb
or
cmpb
cmpsb
pop
mov
mov
mov
mov
add
adc
mov
bound
cmp
ss
out
insb
jne
adc
mov
call
xchg
adc
xchg
push
aad
xchg
xor
das
cmp
call
fwait
cmp
ret
repnz
adcl
pop
mov
je
jl
pushf
testb
insb
stos
in
adc
jno
sahf
lods
push
cli
pop
mov
adc
and
sub
cmp
sub
pop
mov
and
shll
and
inc
adc
bound
add
push
rolb
movsl
ret
sub
adc
add
or
bound
xor
xor
lods
mov
mov
lock
mov
xor
fmuls
xor
stos
xor
fsubrl
ficoml
hlt
mov
adc
call
shld
pop
in
jle
stc
mov
sarb
rorb
dec
mov
lret
mov
sub
out
sub
sarl
pop
call
movsb
jge
arpl
in
mov
mov
push
sbb
stos
aas
push
test
jmp
push
test
cld
stos
jp
mov
mov
pop
mov
and
xor
push
test
add
jge
lods
cmp
outsb
jbe
pusha
push
or
daa
mov
push
push
push
fbld
gs
call
aaa
int3
mov
fs
ret
push
inc
aaa
rcrb
adc
test
mov
sub
or
jae
nop
fdivs
bndstx
and
pop
cld
or
jle
inc
fmull
icebp
test
mov
add
hlt
fs
ret
lods
push
lods
xor
je
xor
call
push
xchg
adc
xchg
ja
sbb
movsl
rcrl
cmp
mov
movsb
push
pop
cmp
fldt
mov
lcall
int3
call
lock
or
daa
sbb
jmp
fs
push
int3
mov
leave
push
dec
push
push
sub
lods
xchg
xchg
cmp
das
mov
pop
iret
addr16
out
stos
mov
sbbb
ret
in
mov
lock
push
push
jg
sbb
les
jne
icebp
sbb
add
test
jnp
sbb
popf
rcrl
sbbb
xchg
push
ja
idiv
pop
hlt
add
sbb
mov
adc
fidivs
or
sub
mov
jg
jnp
sub
mov
movsl
daa
cmp
mov
negb
dec
mov
sub
jno
xchg
daa
sub
cmp
clc
adc
ficomps
mov
sti
mov
xchg
enter
loop
pop
push
cld
outsb
lahf
push
mov
jne
sbb
push
mov
lods
aad
je
hlt
rol
call
mov
jne
in
pop
adc
jmp
sbb
xchg
or
xchg
pop
dec
inc
int3
clts
xchg
or
je
out
cmp
jo
scas
sbb
mov
mov
add
cmpsl
push
pop
pop
lcall
adc
popa
xchg
pop
rcr
imul
inc
adc
mov
loopne
outsb
xchg
and
movb
jo
mov
mov
mov
cmpsl
push
roll
dec
jbe
cmp
mov
rcl
std
mov
enter
cs
adc
or
mov
out
pop
inc
scas
mov
mov
out
sbb
loopne
sbb
ret
stos
push
dec
adc
icebp
jb
int3
daa
dec
gs
push
cwtl
adc
out
adc
xchg
mov
dec
cltd
push
cs
lret
cwtl
movsb
sbb
lods
push
xchg
lock
scas
jle
bnd
and
jl
pop
or
push
jl
pushf
leave
pop
sbb
inc
in
dec
mov
in
and
dec
repnz
or
out
lret
xchg
jns
cltd
pop
cmp
popa
add
mov
xor
dec
and
sbb
xchg
sbb
leave
loope
enter
icebp
inc
lret
inc
push
cmp
or
sub
inc
push
mov
out
pop
cld
push
sti
test
imul
mov
jmp
push
or
sbb
loop
jp
lret
in
divb
stos
icebp
dec
mov
nop
fucomip
jecxz
in
test
loopne
adc
mov
sarb
jge
or
ljmp
out
sub
mov
dec
cmpsb
lret
into
mov
mov
loopne
out
sbb
outsb
out
repnz
gs
jle
ljmp
insb
inc
dec
fcmove
dec
jno
jle
jmp
inc
xchg
idivb
pop
and
pop
mov
jge
mov
push
fs
mov
cmc
rorl
stos
repnz
cwtl
fimuls
lock
push
subl
call
fbld
lods
xor
lea
push
jne
test
xchg
push
out
sub
push
mov
cmpsb
add
pop
inc
movsl
adc
sar
sbb
test
push
cld
add
stc
push
subb
xor
xor
aas
scas
movsb
push
arpl
out
fisubrs
cmp
sbb
loopne
outsb
and
mov
xor
rcll
lock
outsl
add
lcall
sub
loope
negb
bound
and
sub
sub
mov
or
test
push
mov
je
and
jecxz
or
ja
lret
scas
cmp
shr
push
ret
mov
sub
jge
pop
gs
adc
in
inc
test
push
cs
cmp
add
mov
mov
jl
ret
call
iret
out
xor
enter
mov
lcall
shlb
jne
mov
inc
dec
test
inc
shll
movsb
and
jbe
pushf
cli
into
jl
xchg
mov
adc
gs
shrb
and
cmp
mov
mov
or
xor
jbe
or
xchg
xchg
dec
lods
sbb
in
inc
lods
out
mov
adcb
mov
pop
push
xchg
dec
call
rolb
pop
in
in
and
xchg
jecxz
push
mov
outsl
in
or
jne
fcmovne
and
mulb
in
scas
fistps
out
mov
or
enter
push
in
pop
pop
push
mov
out
jl
dec
ret
mov
aas
sub
sub
jmp
mov
stc
mov
outsb
inc
mov
jmp
ret
int3
repz
mov
mov
adc
push
pop
es
cltd
pop
int3
jns
sub
jbe
scas
out
mov
pop
inc
cmc
pop
mov
push
jb
and
pop
push
sub
jl
fiaddl
xchg
mov
adc
adc
mov
es
or
pop
loope
fcomi
lahf
not
lea
mov
mov
hlt
xchg
push
xor
test
jno
or
clc
test
xchg
aam
or
test
dec
int
rcrb
fcmovb
sbb
xchg
imul
sub
mov
jge
or
in
cmp
daa
mov
es
jb
or
xchg
xor
fwait
inc
sbb
mov
mov
in
ret
pusha
cmp
cmp
or
out
push
sub
mov
test
xor
orl
sub
push
cs
xchg
cltd
je
push
xchg
dec
jmp
sarl
fldcw
cmp
push
and
mov
addr16
call
shr
dec
mov
sub
inc
lods
xor
int
mov
pop
push
test
adc
pushf
adc
mov
cmc
insb
adc
lods
jecxz
mov
shl
lods
mov
sbb
adc
cltd
inc
adc
fists
fcoml
cmp
int
inc
mov
add
pushf
xchg
enter
data16
or
inc
sub
addr16
xchg
mov
cmpsl
mov
lcall
pop
pop
pop
push
jp
or
inc
sub
addr16
xchg
mov
cmpsl
mov
lcall
pop
pop
xchg
jp
or
sub
addr16
pop
fiaddl
mov
add
testl
daa
or
inc
sub
addr16
sub
std
pop
adc
push
or
stos
mov
out
ret
mov
push
cmp
jbe
imul
inc
dec
ss
es
mov
out
xchg
sti
xchg
mov
cmpsb
sub
inc
or
imul
push
dec
ss
es
mov
out
xchg
sti
xchg
mov
cmpsb
sub
sbb
jle
imul
push
xor
fidivl
in
lods
inc
and
adc
add
xor
adc
fisubs
fiadds
out
sbb
outsb
sti
jns
mov
mov
cmc
jbe
addr16
jnp
sbb
ret
rcll
loope
rorb
add
cs
push
lock
stos
sub
adcl
neg
gs
ljmp
push
mov
rolb
clc
dec
cmp
and
adc
fstpt
dec
push
lock
xor
mov
inc
mov
pop
jbe
push
inc
ds
fs
rcrb
outsl
jge
and
push
sti
jb
data16
mov
pop
es
negb
xchg
mov
cmpsb
sub
inc
or
imul
push
dec
ss
pusha
into
mov
frstor
movsb
rcrl
pop
cmp
js
pop
or
jnp
jg
mov
inc
fstl
fidivl
mov
sahf
cmpsb
pop
adc
and
or
xor
xchg
xchg
scas
cli
sti
xchg
mov
cmpsb
sub
inc
or
imul
push
dec
ss
es
mov
out
xchg
sti
xchg
mov
cmpsb
sub
inc
or
imul
push
dec
ss
es
fcmovbe
push
add
aaa
cmp
js
fsubs
aaa
psllq
or
cltd
inc
jg
lahf
inc
and
push
jae
test
and
addb
shll
push
fcmove
jl
add
pop
cmp
ss
imul
push
outsl
shll
xor
call
sub
outsb
cmpsl
mov
or
inc
loopne
movsl
jp
pop
sub
xlat
mov
testb
sbb
push
loopne
push
aaa
inc
sbb
mov
xor
ss
repnz
scas
mov
int
in
and
and
in
push
sub
jmp
sbb
cld
notb
xchg
psrlq
push
mov
inc
cltd
rcr
xor
mov
adc
push
movsl
decb
in
and
aas
pop
xor
add
sbb
cltd
jmp
fmul
or
pop
scas
mov
repz
push
push
dec
jo
in
or
jno
push
cmpsb
push
addl
aam
xchg
xchg
dec
les
sub
imul
lret
addl
xor
sub
je
divl
clc
ret
enter
jb
int3
sub
test
and
add
jmp
pop
jb
shrb
jp
movsb
scas
aad
add
cmp
adc
add
mov
sarb
mov
jns
into
ja
inc
nop
mov
fnstenv
xor
out
mov
adc
mov
test
mov
mov
in
aad
sub
imul
pop
xor
push
or
popa
sbb
cs
or
jmp
dec
jg
dec
test
pushf
cmp
mov
js
dec
and
insb
sub
inc
mov
adc
stos
mov
adc
xor
adc
rorl
fldl
mov
test
mov
push
jge
and
clc
out
or
sbb
lcall
cli
nop
adc
imul
add
ret
test
jmp
in
push
lods
and
enter
jmp
pusha
jle
xor
pop
outsl
mov
daa
sub
adc
movb
inc
addr16
loopne
pop
sub
rorb
jb
dec
xorl
into
faddp
repz
lcall
and
mov
imul
sub
ret
dec
loop
or
in
push
push
push
xor
push
xor
xor
mov
inc
imul
and
sbb
hlt
push
push
sbb
or
ljmp
cmp
iret
sbb
or
mov
pushf
inc
mov
dec
mov
lods
aad
std
mov
mov
ljmp
addr16
adc
in
xchg
push
addr16
loopne
mov
dec
and
jmp
rcrl
inc
mov
mov
shl
push
push
cmp
imul
mov
cmp
es
clc
imul
add
xor
or
pushf
xorl
xchg
repz
div
jl
add
daa
dec
xchg
pop
movsb
shlb
cmp
jle
ljmp
jp
stc
jmp
pop
jge
in
ret
test
cli
adc
rcll
in
jl
fistps
mov
cmp
test
js
xor
jg
sbb
lods
movsb
mov
inc
xchg
jne
rorb
pop
xlat
sub
mov
inc
repz
subl
or
test
cwtl
mov
mov
xchg
sub
shrb
icebp
cmp
je
in
leave
cwtl
in
mov
jne
outsl
adc
mov
xor
insl
xchg
fdivp
xor
and
xchg
sbb
incl
loope
jmp
bound
or
inc
decl
jne
fsubl
jns
mov
outsl
das
jne
adc
cs
loop
mov
fimull
xchg
pop
arpl
pop
jnp
adc
xchg
pop
clc
xor
std
xchg
push
lret
dec
sub
leave
fldenv
jl
lcall
dec
aas
xor
outsb
inc
loope
in
cmp
jnp
sbb
xchg
inc
xor
dec
push
fwait
imul
out
scas
sub
push
push
sbb
test
and
jo
push
aam
lds
push
les
imul
pop
xlat
pop
cmp
in
cmp
inc
fwait
cld
out
xchg
or
push
movsl
sub
fs
loope
sub
mov
fs
hlt
push
adc
popf
xor
mov
push
jbe
mov
repnz
sbb
jmp
or
movb
xor
xchg
push
push
jg
xor
dec
push
or
pop
andb
cmp
or
mov
fbld
out
xchg
testl
xchg
push
sub
jmp
xchg
test
xchg
mov
mov
pusha
scas
loope
mov
mov
or
push
je
orl
in
imul
and
outsb
ret
mov
pushf
mov
cmp
loop
scas
add
push
inc
dec
lret
pop
pop
es
mov
mov
in
outsb
or
es
loop
pop
imul
jg
jo
adc
add
xor
std
cmpsb
shll
pop
jmp
aas
repnz
mov
jmp
pushf
fs
xchg
out
fsubrl
movsb
lcall
jle
add
fsubrs
sbb
and
std
roll
jne
adc
mov
push
out
outsl
cld
cmp
inc
mov
and
insl
div
mov
sbb
add
cli
cmp
cwtl
jmp
pusha
fcoms
fmuls
pop
lods
push
shlb
int3
ja
pop
pop
add
push
mov
int
cmp
insl
incb
mov
int
jg
daa
jne
cltd
iret
add
xor
repnz
divl
inc
jl
addr16
loop
xor
fidivl
fwait
lea
mov
lret
es
add
into
or
add
sbb
and
loopne
xchg
lahf
scas
fisttpl
xor
mov
xorl
pandn
sbb
push
mov
stos
push
rolb
dec
pop
lcall
dec
cmp
fidivs
test
sarb
add
lea
scas
lds
clc
outsl
pusha
inc
ds
push
in
clc
sahf
fldenv
pop
jmp
xchg
insb
adc
inc
or
push
je
or
mov
xor
pop
and
pop
lret
fwait
push
push
add
in
push
push
cli
stc
mov
movsl
daa
ja
pop
sub
inc
sub
xchg
insl
psubw
negb
in
jle,pn
sbb
cmp
add
jae
test
sbb
mov
outsb
lret
inc
movsl
mov
inc
cmp
dec
jp
and
push
cmc
pop
sarb
mov
jecxz
mov
hlt
lods
in
pop
ffree
sbb
mov
jo
sub
ss
shlb
lret
dec
mov
fsubrp
orb
jle
lcall
enter
loop
xchg
or
push
es
bound
mov
add
pop
mov
dec
enter
ss
inc
hlt
cmc
imul
and
mov
shrl
popl
test
loope
cltd
mov
lret
add
lcall
or
inc
fldl
pusha
and
inc
cltd
cmc
out
hlt
cld
ljmp
ljmp
andb
jecxz
or
scas
mul
mov
clc
sub
mov
popf
das
imul
loope
adc
cmp
imul
mov
inc
pop
stos
ficomps
gs
mov
sbb
ljmp
mov
lret
int3
dec
jae
outsb
test
xor
push
cld
xor
in
das
daa
insl
sbb
popf
jl
push
call
cmp
fidivs
jmp
arpl
dec
fst
int3
mov
xchg
or
dec
mov
jecxz
mov
sub
ds
iret
js
inc
xor
por
add
adcb
sbb
fdivs
jl
roll
mov
pop
jge
xchg
inc
or
xchg
in
rcr
jmp
inc
ds
loop
cli
ljmp
lret
jge
add
loope
dec
inc
xchg
add
mov
mov
cmpsb
mov
hlt
pop
mov
gs
inc
je
dec
test
pop
push
iret
or
cmovno
push
dec
enter
shrb
jo
outsb
in
jecxz
xchg
ljmp
lahf
jbe
add
fisttps
pop
and
pusha
jle
add
or
xchg
loop
pop
sub
movsl
movsb
movsb
aad
movsl
in
sub
imul
sbb
popw
jns
cmp
mov
cmc
daa
and
xor
aas
jnp
lret
scas
push
jge
or
mov
mov
inc
jnp
int
loope
in
cmp
mov
aam
call
or
pop
mov
mov
jnp
ja
adc
aaa
daa
mov
fiadds
imul
repz
or
pop
sbb
int3
xor
nop
and
cld
push
jmp
scas
mov
das
fdivs
adc
mov
mov
cmp
stos
or
subl
aad
jp
mov
adc
or
push
hlt
ss
cltd
push
into
dec
std
mov
outsb
pop
fs
iret
jle
cli
push
mov
add
mov
dec
icebp
fcompl
push
adc
mov
sub
pusha
pop
mov
xchg
ficoml
popa
ljmp
frstor
das
jge
test
push
pop
pop
adc
sahf
aad
and
mov
stc
loopne
mov
mov
out
lods
sbb
das
push
es
pop
xchg
lcall
fst
xor
fwait
ret
push
jae
and
push
mov
scas
ret
aas
pop
push
fcompl
insb
or
fsubrp
xor
xchg
or
pop
addr16
mov
cmc
cmp
test
jmp
fmulp
xlat
pop
sbb
lds
sub
shlb
in
fidivrl
test
xor
popl
rcrb
inc
inc
nop
and
xor
xor
push
pop
push
je
imul
push
orl
mov
loopne
or
sbb
mov
test
orl
jge
sub
xor
repnz
out
loope
fmuls
mov
jge
int
mov
movsl
repz
cli
bound
in
icebp
add
or
push
xor
aas
push
mov
std
mov
fdivr
sbb
out
pop
gs
not
push
adc
test
jg
jmp
inc
sbbl
inc
mull
out
aaa
mov
push
repnz
aas
int
push
loope
repz
fchs
stos
mov
cmp
pop
fdivl
and
cmp
dec
xor
mov
mov
jecxz
pushf
pop
sub
adc
mov
adc
sbb
enter
or
clc
test
lock
insl
xchg
lret
push
ja
jb
or
mov
lods
jbe
inc
sbb
inc
xchg
jmp
adc
or
std
sub
push
fcoms
mov
sbb
inc
rol
fiaddl
xor
sbb
lret
xor
aas
and
mov
test
adc
cli
das
sub
mov
mov
in
jne
and
push
mov
fstl
adc
sbb
sub
lock
xchg
movsb
pop
pop
sub
mov
xchg
cmp
sub
adc
lock
dec
imul
inc
cmp
inc
and
les
xchg
leave
hlt
sbb
add
and
es
cmp
sub
aaa
push
adc
and
push
lea
xchg
push
int
jecxz
or
push
and
xchg
fadd
jno
sarl
mov
divl
lods
sub
mov
push
mov
jb
test
jg
mov
stc
cmc
or
sarl
push
test
mov
scas
cs
imul
push
cmp
lods
ljmp
aam
fwait
cli
in
lahf
aas
aaa
fsubrp
in
aas
mov
pushf
fcmovnb
ror
movsl
lret
jmp
fmul
pusha
pusha
aaa
add
dec
or
add
mov
push
or
mov
jge
fmuls
out
mov
jbe
push
daa
imul
mov
sub
clc
sub
push
test
mov
sub
fists
les
aas
add
adc
lods
sub
cwtl
rolb
rorb
jbe
ret
scas
or
test
or
mov
idivl
fsts
xor
pop
jns
ds
jae
add
fidivrl
in
push
add
jg
lods
lea
inc
fnsave
in
cmp
mov
adc
mov
sarb
test
xchg
jmp
out
mov
push
pop
int3
bound
jnp
adc
fistps
scas
cs
dec
daa
mov
and
aas
jecxz
pop
push
cmp
jb
mov
ret
psubsw
dec
adc
fyl2x
mov
jno,pn
iret
in
fst
insb
jmp
lret
leave
out
sbb
imul
push
xor
adc
pop
mov
scas
loope
xor
lret
jecxz
nopl
fisttpl
xor
and
lds
pop
cmovl
cmp
mov
sub
jl
idiv
fwait
movb
jae
fiadds
aas
mov
sub
mov
mov
imul
adc
enter
adc
repz
cmc
xchg
test
cmp
and
xchg
or
or
out
xor
imul
mov
push
cli
or
imul
mov
inc
out
dec
movsb
sbb
enter
xchg
pop
push
dec
popf
push
fisttps
xor
adc
xchg
jno
hlt
aaa
gs
dec
divb
imul
push
xor
lock
enter
pop
in
call
cs
ffree
mov
cltd
mov
cs
pop
mov
insl
out
and
inc
mov
in
dec
mov
push
dec
xchg
outsl
pop
cld
and
sbb
adc
push
popa
rcrb
push
lret
das
xchg
stc
mov
mov
nop
fstl
imul
jecxz
sub
outsb
pushf
and
pop
clc
arpl
mov
add
pop
mov
lds
adc
and
jge
fnsave
nop
aad
xor
popa
in
xchg
jbe
adc
jns
dec
cmp
push
sbb
lods
loopne
xlat
sub
mov
pop
je
notb
pop
fildll
pusha
mov
add
fiaddl
jne
pop
icebp
mov
mov
sbb
ret
bound
pop
lahf
xchg
pushf
or
inc
rep
mov
mov
icebp
aaa
dec
aaa
xor
cmp
cmc
push
fucom
in
dec
dec
loope
std
cmc
jnp
sbb
push
sub
push
enter
aas
cmp
sahf
lock
fs
leave
les
inc
outsb
xlat
aas
clc
and
inc
stc
push
dec
iret
lcall
mov
adc
xlat
or
jne
or
inc
std
mov
or
inc
cmpsb
xchg
repnz
xor
pop
cmp
std
loopne
pop
js
sub
ss
jg
dec
and
or
dec
push
outsl
mov
xor
aam
roll
loop
xchg
stos
mov
push
or
mov
repz
pop
mov
jbe
fsubl
sbb
mov
dec
xchg
mov
test
mov
lahf
sub
out
sub
addr16
test
test
dec
and
adc
gs
sti
dec
out
sbb
rorb
fiaddl
imul
cmp
lock
xchg
cli
jp
inc
lcall
lods
xchg
add
dec
jle
mov
push
pop
shrd
jle
push
mov
pushl
scas
and
adcb
xchg
into
dec
fadds
ja
push
push
rcrb
je
jae
imul
mov
dec
rol
mov
mov
cs
std
jge
popf
or
js
push
cld
jg
xchg
adc
lods
push
sbb
xor
in
xchg
rolb
fxch
shr
sbb
or
scas
push
adc
inc
mov
cld
movsl
pop
jle
mov
dec
loopne
fidivrl
add
mov
aam
jbe
dec
js
fsts
orl
sti
inc
pop
loop
mov
push
outsl
push
push
adc
sub
mov
dec
dec
sub
sub
mov
mov
sbb
push
push
mov
xchg
and
adc
jno
ja
test
std
dec
mov
mov
or
sub
jmp
ret
imul
and
jns
clc
mov
xchg
cmp
mov
insl
jp
mov
ljmp
or
dec
cltd
pop
lret
test
sub
loope
outsb
fildll
shr
pop
ret
pop
lahf
imul
sub
fstpl
push
jecxz
jns
pop
cmp
mov
jmp
sub
cs
mov
sub
cld
mov
pop
fsubrs
js
jl
xchg
dec
xor
add
add
dec
adc
sbb
in
push
out
lret
cli
inc
mov
cmpsb
mov
xchg
fs
dec
fcoml
popf
adc
in
leave
outsb
dec
fimull
sahf
lods
outsl
inc
repz
mov
sbb
push
xor
push
arpl
shl
xchg
test
xor
and
in
sahf
aas
push
int
pop
jno
dec
adc
cmp
mov
mov
cld
aad
mov
jne
push
mov
movsl
push
inc
pushl
and
cmp
stos
repnz
push
decl
stos
sbb
ss
adc
push
push
ss
js
pop
addl
inc
push
or
iret
jnp
in
push
jmp
in
aas
mov
int3
jl
jmp
mov
xchg
mov
aam
lahf
inc
jl
adc
jl
ja
adc
push
adc
mov
ja
push
test
jae
cmc
xor
jo
push
repz
mov
enter
imul
stos
cmp
adc
adc
insb
fwait
sahf
ja
in
cwtl
push
jle
jg
lods
jmp
xlat
insb
gs
and
mov
cmp
xchg
xchg
mov
add
cli
dec
insb
sbb
mov
in
ret
or
xlat
sub
jle
mov
lods
ret
leave
mov
jo
or
arpl
xchg
xor
loopne
lods
cmpsb
loopne
mov
or
lcall
lds
jmp
aaa
lret
and
xchg
adc
dec
mov
decb
into
cmp
into
pop
inc
movsb
push
lods
sbb
mov
dec
aas
and
sti
and
movsl
pusha
fsubrl
jae
push
fsubr
mov
imul
jo
aaa
dec
ret
aam
call
xchg
inc
outsb
lea
gs
ja
adc
xlat
out
cmp
mov
jle
cmc
loop
xor
pop
jge
or
lock
push
shrb
mov
test
loopne
sub
aaa
in
shll
adc
in
xchg
sub
outsl
and
insb
int3
jb
out
jmp
mov
stos
ret
sub
call
mov
or
xchg
mov
xchg
insb
mulb
mov
inc
fistpll
add
sarb
ja
cltd
sbb
xchg
call
sub
mov
leave
les
push
cmp
push
cmpsb
xchg
ret
and
lea
push
sahf
lds
pusha
in
aas
adc
jbe
mov
dec
inc
sbb
pop
push
jnp
xor
es
ss
xchg
sarl
push
test
pop
push
repnz
notb
jp
or
hlt
xor
jns
shlb
inc
lods
and
incl
xor
stos
in
mov
add
xchg
test
and
popf
dec
sbb
xor
mov
std
aaa
push
lods
and
in
xorb
mov
std
jge
jge
pop
push
imul
or
jmp
loopne
hlt
ret
popf
insb
adc
push
js
inc
imul
dec
aad
inc
test
inc
cmc
mov
pop
arpl
scas
dec
inc
test
pop
imul
iret
xchg
push
add
jge
and
clc
ret
xlat
dec
mov
dec
inc
mov
nop
jg
or
push
xchg
and
and
es
sbb
cmp
pop
xor
mov
fwait
out
xchg
sti
xchg
mov
cmpsb
sub
inc
or
imul
push
dec
ss
es
mov
out
xchg
sti
xchg
mov
cmpsb
sub
inc
or
imul
push
dec
ss
es
sarb
out
xchg
cli
xchg
mov
cmpsb
sub
inc
or
imul
push
dec
ss
es
mov
loop
xchg
sti
push
dec
ss
pop
aam
in
mov
sahf
repz
mov
mov
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
push
jp
dec
mov
dec
ljmp
sti
add
cmp
sub
push
push
lcall
sub
cmp
or
sbb
lret
sub
mov
push
lcall
sub
cmp
or
sbb
ljmp
inc
stos
sbb
push
lcall
hlt
sbb
dec
jmp
mov
add
loop
mov
sbb
sar
aas
fildl
icebp
lcall
cmp
jb
pusha
pop
or
xor
dec
mov
cmp
mov
dec
push
dec
add
and
sbb
aad
movsl
jbe
negl
lahf
and
das
lret
sbb
addr16
cmc
xor
mov
push
dec
cli
stos
or
scas
push
pop
lcall
push
cmp
add
lods
pop
dec
lds
pop
ficoml
fwait
mov
add
mov
xchg
arpl
dec
repnz
dec
aaa
sbb
jp
xchg
cmpsb
lcall
sub
cmp
or
sbb
ljmp
sub
jp
sub
lcall
sub
sbb
lret
pop
stos
cs
psadbw
out
repnz
sub
dec
les
pop
fidivrl
aas
aam
out
out
pand
and
call
sbb
ljmp
sub
jp
push
lcall
sub
cmp
or
sbb
ljmp
sub
jp
push
lcall
aam
dec
add
mov
mov
test
mov
test
jo
sub
ror
mov
imul
mov
adc
jno
inc
xchg
and
loopne
cli
lds
add
aam
fwait
sub
int3
hlt
into
arpl
add
and
mov
loope
inc
pop
mov
lods
add
push
mov
push
inc
lret
js
xor
popa
lcall
adc
push
push
clc
ja
jo
push
test
and
inc
cwtl
jp
dec
mov
jl
xchg
jmp
xchg
cmc
push
rorb
loope
mov
and
daa
mov
push
cmp
mov
mov
test
pop
pop
mov
jae
push
mov
addr16
push
push
cmp
mov
subl
das
dec
loope
push
popf
push
sub
cmpl
lock
xchg
sub
pop
mov
sub
mov
xor
or
mov
dec
stos
pop
pop
out
pop
movsl
out
in
jge
repnz
cs
push
fs
scas
xchg
cli
mov
clc
pop
or
pop
fisttps
out
insl
movsb
push
cwtl
jge
sub
imul
or
cmp
jo
xor
int
pop
gs
nop
pop
cmp
out
mov
dec
ds
or
pop
mov
mov
sub
pop
mov
es
push
dec
and
cmp
stos
orb
jg
jns
jge
sti
test
push
das
fldcw
push
adc
fwait
cmp
ds
or
xor
popf
int3
loopne
cli
sbb
xor
jge
scas
cmpsl
push
jae
movsb
dec
or
aad
jbe
jmp
mov
cwtl
sbb
fcomip
repnz
jp
insb
cmp
dec
dec
adc
add
pop
jl
fistps
adc
jbe
jp
cmp
test
test
fwait
les
cmp
mov
sub
stos
inc
out
cli
je
js
jge
icebp
push
imulb
insb
frstor
push
sbb
fisttpll
outsl
mov
jl
add
mov
shll
dec
and
aam
xor
loop
imul
mul
cmc
and
insl
sub
inc
mov
sbb
jmp
pop
into
adc
and
pusha
xchg
pop
dec
cltd
fprem1
jbe
add
negb
pushf
cmpsb
insl
or
shlb
sub
in
mov
adc
lret
lods
bound
xchg
dec
sbb
xchg
aaa
jae
fnstsw
test
or
gs
stos
idiv
cwtl
jge
insl
aas
sbb
and
cltd
rolb
xchg
and
outsb
pop
scas
outsb
mov
arpl
and
pop
andl
push
jne
mov
xchg
push
xchg
xchg
sbbb
or
adc
test
outsb
lcall
inc
in
lahf
push
or
test
lock
sub
fs
dec
inc
frstor
jne
mov
and
sbb
ss
out
aad
mov
mov
gs
out
adc
out
jg
pop
and
fs
ds
insl
nop
cmpsl
dec
jg
pop
add
pusha
pop
in
in
inc
sub
adc
jmp
xchg
push
and
out
daa
aad
xor
ret
test
cmp
es
ret
inc
pop
nop
aam
add
mov
xchg
jno
subb
lods
pop
sbb
fwait
and
sbb
add
pop
ficompl
jmp
dec
lret
fisttpll
sbb
push
mov
imul
xor
jl
lods
out
mov
add
dec
js
cmp
test
cmpsb
xor
xor
pop
pop
mov
into
xchg
fnsave
es
stos
adc
pop
add
xchg
push
cmp
stos
addr16
lret
cmp
cmpb
xchg
xor
ss
jmp
scas
xor
pushf
sub
ds
dec
ret
out
movsl
ljmp
mov
dec
inc
jbe
iret
les
popf
xor
rolb
andl
aas
testb
dec
mov
jb
add
fwait
or
rorl
fimull
inc
fldl
sti
pop
movsl
test
imul
div
cmp
inc
aaa
ja
push
xchg
sub
loop
addb
hlt
out
xor
pop
add
fcoms
aad
popf
ds
scas
dec
lods
stos
pop
jp
fnstenv
mov
inc
push
rcrb
fstps
xor
nop
xor
test
and
loop
and
daa
daa
jns
mov
jo
sub
test
repz
stos
stos
nop
adc
test
cvtps2pd
outsb
pop
and
pop
jb
sti
push
cmpsb
and
ret
pop
inc
or
sub
je
xor
and
sub
mov
iret
dec
shrl
out
cs
push
mov
mov
inc
dec
mov
jno
push
nop
cmpsl
xchg
in
aad
out
pop
or
mov
insl
pop
pop
xchg
out
dec
ljmp
mov
adc
sahf
into
lods
mov
jno
mov
aam
repnz
out
les
mov
sub
adc
push
dec
pop
push
pop
ret
push
clc
pop
sahf
test
jae
pop
cmpsl
or
xorb
inc
xchg
dec
iret
sbb
stos
pop
sahf
rcrl
nop
mov
cmp
push
stc
ja
negb
insb
mov
cmp
mov
cmp
fcomps
pop
ja
stos
mov
xor
xchg
mov
aam
mov
push
sub
add
and
or
aam
sarb
sub
push
xor
push
cmp
jg
jl
xlat
xor
mov
adc
rclb
movsb
js
add
pop
shrl
popa
or
rclb
lds
test
mov
cmovne
jp
mov
xchg
pusha
movsb
fcomp
out
lea
adc
add
inc
enter
add
xlat
mov
cmp
sub
cmp
fsubrs
les
sti
push
add
jbe
jo
das
xchg
inc
cmp
stos
mov
xor
je
xchg
ljmp
sub
in
shl
das
adc
loopne
xchg
mov
iret
mov
mov
lcall
in
xchg
ret
mov
enter
lods
sub
lret
xor
dec
add
loopne
push
inc
add
lods
mov
std
aam
dec
out
pop
test
hlt
mov
jo
and
insb
push
sbb
pop
lea
pusha
pandn
push
mov
or
dec
or
clc
mov
xchg
cmp
repnz
adc
iret
ss
mov
dec
loopne
or
popf
sbb
cmp
adc
stos
test
add
add
or
jb
ljmp
jg
pop
xchg
movsl
addl
mov
loope
cmp
movl
mov
cmpsl
ja
pop
into
push
inc
les
push
jle
push
add
cmpsl
xor
mov
push
mov
test
test
cmp
in
fdivrs
fcoms
xor
fs
jge
sub
mov
push
or
shr
pusha
pusha
daa
xchg
ret
pop
divl
xchg
das
cmp
test
push
bound
je,pn
lahf
inc
shlb
push
mov
ds
in
jg
mov
and
mov
nop
cld
add
jbe,pn
stos
stos
add
dec
fsubl
push
inc
sub
out
fcoms
push
add
orb
xor
test
mov
inc
aaa
jmp
out
outsb
push
mov
fnstsw
xor
icebp
and
rcr
std
dec
push
dec
pop
mov
jge
lcall
cmp
mov
jno
cmp
mov
bound
pusha
cmp
jnp
bound
orl
mov
pusha
xchg
sub
push
bound
fucomip
sbb
sub
dec
nop
pop
mov
mov
sub
loop
insl
sbb
pop
fdivr
dec
dec
cmp
int
dec
aas
fisttpl
adc
andl
stos
iret
xchg
dec
jne
xor
inc
je
jmp
mov
mov
int3
sub
xchg
in
gs
sbb
loopne
or
es
imul
mov
jecxz
jo
sbb
movsl
add
xchg
mov
int
rcr
adc
lds
jmp
xchg
mov
push
in
outsb
shl
inc
mov
and
and
je
pop
decl
das
cmp
lret
or
cmp
arpl
scas
sbb
and
mov
rorl
in
mov
enter
fimull
jecxz
mov
andl
clc
cmp
fsubrl
jnp
jb
cltd
dec
shlb
outsb
mov
rcl
dec
push
ja
lret
mov
xchg
pop
lret
popf
inc
es
push
nop
pop
jno
mov
or
sub
lret
dec
cmpsl
mov
shll
popf
in
mov
mov
aad
xchg
jmp
and
xor
jne
fs
insl
or
cwtl
inc
xchg
sti
mov
aam
icebp
xchg
imul
mov
and
ficoms
add
cld
push
fs
lcall
jecxz
rcll
pop
stc
cmp
sub
divl
ja
scas
or
loope
inc
insl
cmp
in
cmpl
and
mov
adc
dec
cmp
dec
ljmp
mov
incl
mov
rcrb
shll
loop
aam
imul
aam
outsb
stos
fs
xor
out
xchg
inc
adc
and
push
mov
imul
movsl
sub
movsl
and
out
aaa
es
andb
push
into
dec
xor
add
das
lods
decb
aam
mov
push
mov
mov
jmp
pop
add
and
mov
popf
mov
inc
nop
jnp
mov
xor
rolb
scas
repz
or
ret
add
cltd
add
jo
je
dec
int3
mov
hlt
pushf
repz
loope
insb
push
mov
or
divb
andb
xlat
inc
cwtl
loop
inc
pushf
fcompl
cmpsl
or
adc
pop
insl
jo
sub
icebp
aad
sbb
ljmp
imul
shrl
mov
jo
enter
imul
mov
cmp
dec
mov
roll
shll
cmp
and
jo
sub
push
or
mov
fdivp
faddp
stc
or
inc
pop
lret
int3
sub
loop
or
sarb
xor
mov
xor
shrl
pusha
roll
or
lock
ss
stos
loopne
mov
mov
mov
jno
pop
les
jae
stos
mov
sbb
and
cld
in
jg
arpl
cmp
out
sbb
les
js
scas
mov
mov
clc
subb
mov
push
pop
pop
divl
pop
inc
ljmp
adc
xor
sub
mov
xor
scas
pop
mov
insl
xor
sti
xlat
push
inc
mov
pop
jno
cmpb
rcl
push
sbb
ja
ret
leave
btr
add
shr
fisubl
xor
xchg
popf
adc
mov
aad
loop
cmp
adc
lea
ljmp
xchg
cmp
mov
xor
inc
or
jle
lahf
mov
pop
ljmp
and
push
pop
mov
mov
mov
and
adc
cs
adc
mov
jb
xchg
xadd
in
out
sti
mov
sahf
xor
or
push
sub
push
sub
inc
mov
pop
adc
movsl
movsl
cmpsb
inc
jmp
jno
adc
or
and
out
cs
jg
or
sub
int
mov
mov
ficoml
mov
mov
fdivrl
pop
xor
pop
es
insb
outsb
mov
sarl
xor
ja
xchg
mov
or
pop
pop
push
leave
jnp
pop
mov
pop
inc
mov
int
fldt
jle
dec
mov
add
mov
dec
rcll
je
inc
jae
imul
mov
divb
xlat
xor
fisttpll
mov
fdivrl
out
lea
outsb
lcall
dec
jne
adc
push
fiadds
into
enter
adc
insl
mov
mov
mov
pop
hlt
xchg
mov
push
push
and
or
jge
add
cltd
sbb
mov
dec
out
repz
fsubs
and
or
pushf
pop
arpl
or
or
xchg
mov
cmp
add
mov
sub
int
subl
adc
jnp
sbb
pop
inc
push
or
jp
mov
jge
lret
es
jne
enter
mov
xor
test
rcrl
out
mov
gs
dec
dec
jno
adc
mov
xor
adc
rorl
les
cltd
mov
in
cltd
ss
mov
shl
sbb
cs
push
ret
and
popa
inc
loopne
int
ret
jnp
and
pop
or
or
push
xor
out
testb
mov
not
subl
mov
sub
push
mov
mov
cmpsb
sbb
mov
fidivrl
mov
push
pop
insl
repnz
dec
pop
jmp
mov
dec
and
xchg
pop
insl
xchg
inc
aas
fiadds
xor
int3
lods
pop
cli
gs
sbb
js
sub
mov
fiaddl
mov
mov
adc
cltd
decb
and
cld
mov
das
mov
jge
aaa
lds
stos
fsubl
lds
testl
test
repnz
mov
push
cs
stos
lea
and
push
mull
clc
mov
movsb
or
out
pop
mov
dec
jl
and
push
add
adc
push
xorb
faddp
addl
cltd
adcb
xor
adc
shrb
in
xchg
xchg
test
fldenv
mov
ja
les
aad
faddl
cmc
pushf
mov
ss
jo
dec
std
scas
push
outsb
jnp
rorb
mov
mov
adc
xchg
adc
sub
or
mov
out
ss
daa
adc
pushf
xchg
pop
lock
out
jge
cmp
addb
out
sbb
fcoms
sbb
push
bound
adc
mov
ret
adc
sahf
add
jle
repz
nop
inc
mov
es
xchg
mov
push
mov
or
mov
push
sti
and
pusha
cmp
in
movl
jne
sarb
fsubp
cmc
mov
das
xchg
mov
pushl
fwait
mov
sbb
mov
jo
shlb
aas
sbb
adc
mull
jne
xchg
nop
roll
sbb
data16
in
ret
dec
cmp
pop
bound
in
std
inc
adc
mov
mov
loope
xor
xor
adc
inc
dec
pop
icebp
cmp
mov
lods
lret
pop
push
ret
loopne
jae
iret
mov
add
inc
ret
inc
jle
shrb
mov
into
mov
dec
mov
mov
gs
das
insl
adc
cli
mov
mull
fbstp
movsb
xchg
jbe
and
cmp
push
mov
push
cld
cs
in
pop
dec
push
out
ljmp
bound
and
loopne
push
inc
mov
scas
xchg
jbe
or
lea
cld
stc
shr
ja,pt
or
test
mov
mov
or
or
dec
mov
jne
aam
leave
test
adc
hlt
add
and
add
std
sbb
mov
xlat
dec
iret
into
lcall
mov
movd
cmp
add
push
pop
jmp
dec
jmp
sbbl
sbb
lock
xor
mulb
mov
stc
cmpsl
inc
shlb
push
aas
inc
mov
imul
pop
mov
mov
xlat
mov
fs
mov
sub
xchg
jns
lea
mov
lock
in
movsl
rcll
jmp
cmp
dec
mov
adc
lahf
push
cmp
xchg
mov
stos
loopne
push
dec
shrl
dec
pop
inc
mov
pushf
cmpsl
mov
outsl
test
and
mov
scas
ljmp
xor
in
gs
insl
imul
cmp
mov
mov
xchg
scas
mov
ljmp
popa
rcr
nop
lds
adc
daa
dec
pop
frstor
es
jne
xchg
shll
mov
dec
mov
add
mov
stc
mov
pop
add
cmp
rol
arpl
cmpsb
leave
mov
xchg
test
push
movsb
cld
xchg
dec
sub
pop
jnp
sub
imul
add
mov
outsb
add
sub
sbb
sbb
or
and
pop
xchg
ss
dec
cld
add
bound
or
aam
lods
jmp
pop
xor
aad
dec
ljmp
call
push
hlt
push
xor
ds
fprem
push
dec
cmp
pushf
mov
or
in
call
loope
xor
mov
mov
nop
and
repz
mov
pop
daa
adc
inc
lock
ja
inc
ret
pop
xchg
dec
mov
or
aaa
leave
and
xor
ds
arpl
cwtl
xchg
cmp
frstor
dec
repnz
or
lahf
pop
lock
imul
sbb
rcrl
mul
sbb
andl
jmp
sti
pop
adc
lods
jae
loope
fcoml
mov
lcall
cmpsl
mov
daa
push
pop
mov
jl
add
and
outsb
scas
add
xor
push
pop
nop
pop
outsb
out
shlb
push
shlb
pop
and
movsl
cmpsl
jae
pusha
pop
ret
xchg
div
lcall
adc
mov
addr16
xchg
iret
push
jp
ret
into
add
lcall
jp
scas
mov
fnstenv
push
inc
into
repnz
setb
arpl
jnp
adc
jo
xlat
inc
mov
or
inc
lea
sbb
das
rcrb
mov
and
jbe
pop
repz
dec
mov
pop
jp
xchg
shl
mov
mov
loop
es
or
push
xchg
int
daa
push
pop
mov
loop
xlat
cmpl
cli
dec
pushl
dec
andb
jmp
jne
push
xor
faddp
xor
inc
add
rorl
stc
fcmovb
repz
mov
leave
and
test
jl
gs
imul
orb
lds
or
rolb
fwait
jmp
movsb
aas
ret
int3
das
mov
sbb
inc
jb
pop
pop
andb
les
adc
xchg
xor
push
mov
outsb
pop
adc
dec
xchg
sar
movsl
xor
dec
cmp
sbb
cmc
stc
jb
add
mov
and
or
mov
sub
mov
pop
stos
and
add
jb
mov
pop
cmp
jecxz
adc
in
ds
bound
ljmp
xorb
jbe
pop
pop
ja,pn
inc
push
mov
loop
arpl
fwait
popf
inc
test
imul
jnp
enter
int3
ficoml
imul
in
gs
mov
mov
mov
mov
mov
daa
dec
test
mov
cli
cld
inc
gs
dec
roll
xlat
sub
fs
ja
push
test
andb
mov
lcall
pushf
xor
or
and
mov
fs
movl
and
or
cld
xor
scas
and
xlat
sub
test
loop
jmp
mov
jo
fnstsw
xor
daa
push
iret
add
dec
popl
lret
jns
iret
push
inc
jnp
mov
dec
push
fstp
jmp
std
inc
jg
subb
inc
adc
test
and
pop
push
lods
push
sub
xchg
in
repz
mov
sbb
inc
pop
push
xor
push
inc
test
sbb
sbb
out
adc
mov
xchg
xor
pop
pop
lahf
imul
test
mov
push
andl
cmp
imul
jae
out
inc
inc
imul
rolb
mov
jmp
inc
mov
add
xor
sahf
dec
dec
ror
sub
imul
xchg
jbe
push
jnp
xchg
and
popa
loopne
out
aas
xor
push
je
xchg
aam
mov
mov
sarl
push
sub
jae
mov
pop
stos
sub
cmp
or
sbb
ljmp
sub
jp
push
lcall
sub
cmp
or
sbb
ljmp
sub
jp
push
lcall
stos
fidivrl
lret
lcall
cmp
sub
jp
push
lcall
sub
cmp
or
sbb
ljmp
pop
fcmovbe
lret
test
xchg
dec
mov
and
push
mov
leave
aad
subb
or
and
pop
loopne
pop
mov
and
jo
pusha
mov
aam
bound
rorb
shrl
loopne
or
cmp
push
cmp
jl
lea
pusha
cmc
add
jl
dec
out
pop
xor
imul
fs
dec
or
out
xor
mov
xor
xchg
mov
ss
jg
dec
dec
lods
imulb
aaa
sbb
insl
mov
and
loop
push
jb
ret
js
xchg
cmp
loopne
pop
imulb
faddl
or
out
push
shlb
fidivl
push
stc
cwtl
lods
pusha
dec
movsb
fld1
xlat
mov
cld
test
xchg
in
mov
or
cmp
push
imul
pushf
pusha
shll
cwtl
lds
movsl
loope
mov
jnp
jns
or
int3
lock
add
jg
lods
add
jae
dec
nop
fmuls
outsl
push
jg
dec
out
notb
push
rorb
shrb
aaa
mov
pop
jmp
mov
cwtl
xor
popa
fdivs
inc
stc
dec
arpl
inc
in
xor
sub
lods
in
subb
sbb
movsb
imul
add
push
ljmp
sbb
and
dec
cmc
jl
or
loopne,pt
jns
xor
sub
inc
jmp
nop
cmp
or
jns
imul
mov
and
jo
pusha
leave
nop
cmp
or
jns
imul
mov
dec
mov
pop
sub
ds
insl
xchg
mov
arpl
daa
mov
sbb
mov
xor
scas
iret
sbb
mov
inc
adc
xor
lods
adcl
xor
iret
xor
packssdw
cmpsl
mov
loope
push
sub
dec
push
sbb
push
push
mov
xchg
xor
xchg
or
shr
ja
fs
test
sbb
fs
xor
insb
mov
lods
cwtl
cmp
fistpl
and
cmp
xor
pop
insb
rorb
mov
dec
mov
dec
push
pop
cmp
fs
pop
ja
leave
cmp
movsb
aam
jns
adc
dec
scas
out
arpl
cld
add
iret
xchg
xchg
jl
pop
popf
lds
sub
test
daa
repz
call
sbb
fistpll
les
mov
mov
sbb
cmp
adc
shl
outsl
jns
mov
jo
cmp
mov
add
pop
push
insl
insb
cmp
jmp
scas
jbe
bound
out
cs
pop
iret
and
lods
or
push
and
xchg
int3
imul
repz
into
xchg
filds
inc
pop
arpl
ret
icebp
push
or
leave
in
pop
lods
pop
out
aas
jge
and
std
add
movsb
pop
test
gs
ljmp
xor
mov
lods
in
icebp
xchg
push
inc
cmp
repz
insl
leave
push
cmc
dec
gs
and
out
dec
dec
jbe
stos
and
mov
sbb
add
or
jns
inc
loop,pn
cmp
les
add
mov
adcl
pop
xchg
cmp
out
pop
leave
add
lods
fbld
mov
fistps
mov
inc
inc
and
es
or
ror
les
adcl
pop
jl
cmp
int
out
pop
dec
pop
push
jno
pop
cmp
movsb
or
shld
sub
inc
divl
subb
mov
mov
sti
cmp
testl
pop
dec
pop
fnsave
movaps
lret
adc
ficoml
das
cmp
or
fsubp
pushf
sub
loopne
adc
testb
out
mov
pusha
adc
stos
cli
pushf
int3
lods
mov
daa
push
sahf
push
inc
mov
jb
push
fs
pop
in
leave
das
std
rorl
pop
imul
push
test
outsb
fiadds
test
outsl
movsl
add
out
repz
mov
xchg
mov
push
dec
jl
sbb
movsl
cld
dec
aas
pop
xchg
adc
mov
add
inc
lods
inc
xor
lahf
push
xchg
cmp
and
out
ret
xlat
cmp
mov
push
popa
dec
xor
jl
xchg
cs
push
jl
fnstenv
mov
cwtl
dec
xchg
pop
inc
loope
mov
imul
xor
sbb
data16
mov
cmc
sbb
xchg
rsqrtps
repnz
push
and
clc
pop
pop
mov
adc
nop
popl
hlt
add
pop
gs
mov
fistl
stos
ds
int3
jecxz
pushf
mov
or
cmp
test
ljmp
inc
es
ds
fcmovnu
inc
xor
add
icebp
inc
inc
out
lret
movsl
movsl
movsl
dec
xor
mov
mov
xlat
je
inc
cmp
imul
add
les
insl
xchg
insb
addb
test
icebp
and
push
mov
scas
fwait
in
mov
dec
push
push
loope
repz
push
adc
push
xor
jno
sti
fwait
sbb
mov
push
cmp
jbe
inc
or
inc
mov
inc
push
jb
lds
pop
and
inc
xchg
inc
stc
xchg
dec
xchg
pop
in
adc
repz
mov
das
add
outsl
and
dec
test
xor
faddl
inc
test
call
xor
rorb
int3
cmc
and
pop
xchg
fldt
test
sub
jmp
lret
int
jae
mov
and
and
mov
xor
mov
pusha
cmpb
lods
inc
std
mov
les
popf
adc
int3
add
jg
imul
jne
test
and
clc
or
lret
jle
out
xor
popf
jmp
dec
repnz
shrl
jle
int3
and
fcoms
sbb
xchg
adc
push
icebp
arpl
inc
push
movsb
xchg
jmp
bnd
xorl
call
pop
push
ja
adc
je
push
out
inc
mov
jp
arpl
dec
mov
add
imul
aad
jnp
inc
mov
jg
incl
xor
and
into
mov
sbb
lds
pusha
or
xor
repnz
test
shlb
call
add
dec
pusha
repz
cld
and
int3
in
mov
xchg
mov
jne
fwait
jns
jmp
enter
mov
popa
mov
adc
cmpl
shll
cwtl
stc
leave
adc
or
rcll
mov
les
add
or
pop
push
scas
sub
rorb
pop
xorb
push
xchg
cmc
mov
xor
inc
jecxz
add
mov
popf
cmp
cmp
stc
cmp
mov
mov
out
xchg
push
inc
sub
sub
insl
insl
adc
rolb
std
hlt
outsb
pop
xor
sbb
xor
push
and
popa
mov
jl
xor
into
xor
dec
jmp
jnp
addr16
xchg
in
cmc
shrb
icebp
in
cmc
mov
rorb
xchg
push
sbb
push
das
nop
xor
add
int
or
inc
lds
add
xchg
mov
mov
pop
popa
push
dec
cmpsl
loop
inc
sub
hlt
fistpl
jns
xchg
fmuls
push
or
stos
shll
adc
jmp
mov
jp
mov
inc
jle
test
dec
xchg
jnp
cmp
sbb
dec
icebp
pop
out
lret
imul
and
dec
jbe
int
addr16
adcb
sbb
xchg
push
sbb
mov
insl
xor
pop
lret
loope
pop
mov
dec
mov
fs
cmc
ja
mov
and
scas
mov
sarb
cmp
jle
popf
cmp
mov
mov
pop
sub
test
adc
call
mov
jno
xchg
xor
cmp
xor
addr16
push
inc
ret
aam
or
mov
mov
pop
mov
jg
insl
ljmp
out
cmpsb
out
push
lcall
jnp
xlat
ret
jp
fcmovnb
mov
pop
adc
xchg
repz
mov
movsl
outsl
xchg
xchg
int
dec
jb
cli
pusha
mov
mov
sub
jecxz
or
cmp
adc
add
ret
popf
mov
imul
dec
es
stos
add
mov
ficompl
xchg
mov
mov
loope
fwait
int3
xor
faddl
push
bound
mov
out
test
orb
aam
xchg
inc
testl
outsl
outsb
sub
add
dec
xchg
pop
shrl
push
xchg
mov
push
ljmp
popw
add
push
lret
xchg
imul
add
or
push
fldenv
es
cmpsl
je
mov
push
fbstp
loope
mov
jae
data16
cmp
push
sbb
xchg
mov
inc
movsb
sbb
stos
in
loope
dec
sub
cmp
pusha
les
mov
insb
mov
lock
or
hlt
adc
or
sbb
push
das
jge
sub
cmp
ss
enter
lea
mov
imul
inc
in
push
sub
adc
ret
pop
mov
fldcw
pop
and
mov
or
pop
mov
nop
sub
sarb
add
jns
dec
ret
inc
lods
outsl
icebp
add
sub
negb
cmc
int3
push
add
mov
add
mov
pop
xchg
sbb
shlb
and
nop
test
push
lcall
out
ret
mov
sub
adc
insl
adc
xchg
inc
pop
lds
repz
aam
or
jbe
sar
jne
and
imul
jae
pop
or
pop
or
aas
mov
adc
stos
iret
loopne
sbb
push
int
fnstcw
ret
repz
enter
mov
pop
in
std
adc
and
add
imul
stc
in
mov
inc
vmwrite
test
stc
stos
adc
cwtl
outsb
fldcw
cmp
mov
in
push
movsb
jae
sbb
scas
inc
mov
push
pop
jo
push
leave
mov
adc
fsubs
mov
popf
mov
xor
add
call
orb
jne
adc
mov
and
and
sbb
sub
scas
mov
aas
imul
sub
xor
pop
mov
in
cmp
mov
pop
cld
inc
movsb
cmp
nop
cmp
cmpsl
sub
xchg
adc
add
lods
loopne
push
std
xor
outsl
mov
cwtl
sarb
jns
loope
dec
adc
jae
add
fwait
xor
divb
sbb
pop
out
and
movsl
sahf
jbe
pop
std
sub
int
int3
pop
cmpl
pop
aam
push
in
aas
mov
sub
pop
add
out
dec
mov
mov
icebp
sti
xor
push
daa
inc
movsl
data16
iret
jle
mov
and
sbbb
xchg
mov
mov
loopne
fistpll
mov
or
pop
adc
lock
xor
adc
fwait
ret
bound
pop
jge
scas
mov
lret
in
stc
inc
mov
xchg
sti
xor
std
ss
fstl
test
xchg
sub
cmp
std
test
jecxz
addr16
xchg
inc
dec
and
cwtl
sub
icebp
mov
lock
mov
mov
dec
cld
loop
aam
in
sbb
inc
xor
les
or
lret
cmp
or
fistps
sarb
pop
jns
js
inc
pushf
push
pop
out
sub
push
mov
xor
fwait
das
stos
std
hlt
sub
lock
ffreep
fdiv
insl
mov
xor
js
jge
loope
cmp
pop
loope
test
mov
outsl
push
test
pop
mov
test
push
sbb
inc
xor
pop
pop
push
outsl
mov
int
add
push
outsl
rol
cmp
je
jo
int3
shrb
imul
mov
inc
mov
sbb
sbb
fldln2
xchg
movsl
jp
pop
aas
xchg
loop
pushf
mov
repz
adc
dec
sbb
addr16
iret
sti
aad
push
fsubrp
scas
pusha
fdivs
xor
jmp
push
cmpl
xchg
int3
pop
mov
mov
loop
repnz
rcrb
jno
mov
cld
out
jle
rep
fisubrl
mov
adc
xor
or
daa
jne
repnz
jne
inc
mov
sahf
jle
mov
in
repnz
jp
fwait
fs
movsl
mov
push
shrb
js
scas
or
cltd
push
inc
pop
cmp
or
xchg
lock
adc
pushf
jmp
outsl
in
add
aaa
sbb
or
scas
jg
ret
cltd
or
mov
pop
jge
mov
movsl
dec
jns
sbb
aas
dec
jge
ja
xchg
sar
pusha
andb
bound
fmulp
out
mov
lret
cld
leave
pusha
repnz
nop
aas
subl
xor
pop
int3
mov
sbb
mov
nop
push
gs
jne
jl
imull
sbb
out
cld
jge
cmp
int
js
loope
mov
in
pop
inc
or
jecxz
xorb
ja
inc
dec
in
dec
or
bnd
push
in
mov
sub
repnz
and
cs
out
ret
sahf
fsubrp
loope
in
cmpsb
jle
jo
add
push
jge
jne
add
mov
scas
loop
adc
sbb
pop
add
lret
in
adc
lods
mov
sysexit
jp
outsl
jbe
pop
cmpsb
shlb
sub
ljmp
inc
xchg
push
dec
sbb
lahf
pop
aad
jae
dec
out
sub
icebp
push
mov
sub
cmp
mov
sbb
insl
pop
cwtl
sti
dec
jg
adc
test
sbb
das
xchg
xchg
xchg
add
xor
in
sbb
cld
lret
shlb
out
mov
xor
fdivrs
je
sbb
outsl
pushf
add
xor
test
lds
add
pop
in
into
add
inc
mov
std
mov
xrelease
sbb
fildll
mov
and
pop
in
and
aaa
into
inc
rol
and
dec
fcmovnu
gs
and
rolb
orb
movsb
pop
sti
push
mov
sar
pop
stc
dec
xchg
cmc
jmp
test
mov
sub
jb
aad
pop
sbb
mov
adc
mov
jne
pop
ss
aas
lock
cmp
ret
dec
cmc
mov
shl
popf
lods
scas
dec
sub
sti
inc
repz
pop
mov
ret
ret
or
cli
add
pop
fistpll
cli
and
pop
fstpl
aad
jle
jo
in
mov
cmp
sub
xchg
int
adc
js
mov
pop
jmp
stos
inc
add
rcr
dec
or
sbb
inc
add
iret
int3
outsb
cmp
push
dec
inc
sub
out
pop
insb
cmp
flds
mov
bound
loop
out
incb
js
insl
cs
aas
push
cwtl
test
push
adc
ret
mov
mov
or
sbb
jbe
repz
ss
jae
andl
inc
inc
sbbb
cmp
push
js
sub
cmp
outsb
dec
ret
jmp
xor
xchg
pusha
lahf
push
dec
mov
mov
sbb
das
leave
xchg
mov
enter
cmc
xchg
lock
mov
mov
fisttpl
movsl
lds
or
pop
inc
andb
mov
sub
mov
add
mov
mov
and
loop
cmpsl
popf
and
cli
pop
out
inc
cmp
arpl
mov
das
ds
sbb
xlat
cld
pop
xchg
mov
lods
test
push
mov
inc
mov
jl
xchg
cltd
or
dec
or
sub
lods
add
call
push
leave
flds
loope,pt
xlat
dec
mov
orl
add
mov
int3
pop
testl
sbbl
push
fstl
fwait
into
fimuls
test
sub
test
aad
push
andl
push
mov
push
das
in
push
sahf
mov
inc
clc
cmpsb
das
sub
sahf
jno
mov
cmc
xor
sahf
xor
lods
xchg
fdivrl
mov
pushf
pop
dec
test
mov
pushf
cmp
xor
cwtl
and
lock
adc
sub
ja
rcll
es
test
lret
pop
dec
adc
inc
cmc
push
mov
or
call
lds
js
repz
pop
jae
insl
push
jecxz
pop
cltd
rep
cmp
test
xchg
jo
push
adc
pop
sbbl
icebp
insl
xchg
subb
xor
idivl
xchg
sub
xor
cmp
pop
cmp
mov
pusha
mov
stos
lock
divb
adc
adc
mov
pop
adc
push
test
push
in
jmp
lcall
jmp
and
fcmovu
dec
shr
mov
xor
xlat
push
rorl
lret
jbe
enter
pop
or
mov
cmc
ret
pop
movsl
jo
adc
aas
xchg
out
cltd
lea
test
push
roll
sbb
add
xchg
pop
mov
pop
xor
imul
mov
test
xor
jmp
push
cmc
jbe
add
dec
fs
cld
mov
xorl
cltd
jae
std
fsubs
movsb
jns
pop
jns
add
aaa
jo
xchg
insb
xor
mov
push
xchg
mov
xchg
add
out
mov
adcb
cmp
sarl
jp
imul
mov
mov
push
or
in
jae
adc
notl
mov
adc
xchg
cltd
ret
dec
adc
out
in
sbb
push
adc
mov
out
fs
std
add
loop
in
jl
add
lahf
lcall
aam
ror
jle
std
loope
sbb
ret
repnz
lahf
or
sub
cmpsb
push
inc
shr
jg
cs
mov
inc
sbbl
fidivl
push
and
jle
mov
mov
sub
or
inc
andb
pop
push
cmp
add
mov
out
mov
enter
test
mov
inc
sub
loop
pop
xchg
xchg
out
mov
stos
xor
jge
fwait
jp
fists
adc
dec
int
jns
out
adc
and
sbb
mov
imul
scas
add
out
popa
daa
sahf
ftst
add
sub
scas
push
fistl
xchg
push
jnp
orl
cmp
pop
lods
bound
xor
test
mov
pop
and
gs
enter
push
pop
push
sbb
sbb
pop
fldpi
loopne
cmp
out
scas
stc
add
daa
inc
xor
inc
pop
enter
cld
cltd
jbe
stos
aam
dec
adc
lcall
shl
or
ret
scas
pop
out
jo,pn
cmc
jl
xchg
addl
pop
xchg
sti
out
sbb
dec
xchg
inc
xchg
test
inc
les
mov
fistpll
adc
gs
dec
xchg
xor
shll
pop
cltd
leave
fwait
mov
lock
iret
hlt
mov
dec
pop
in
lock
scas
es
add
sub
nop
int3
mov
add
roll
pop
outsb
andl
adcl
push
lcall
and
mov
in
cli
movsb
adc
jle
int3
or
in
inc
rcl
add
hlt
cwtl
ljmp
inc
adc
add
loope
add
call
push
cmpsb
rcll
or
xor
lock
mov
pop
pop
cli
in
cmp
pop
pop
mov
stc
jno
pushf
xor
aam
mov
in
das
lret
xor
xlat
mov
mov
push
push
push
out
int3
lahf
pushf
mov
and
xor
mov
incl
gs
cltd
scas
faddl
fcompl
or
xor
loopne
inc
fwait
test
addl
adc
inc
push
das
rcrl
pop
mov
cmpsb
dec
xchg
stc
pop
xor
rol
sub
loopne
cltd
add
roll
call
add
pop
add
mov
scas
or
repnz
ficompl
arpl
or
aaa
jne
fdivs
jg
enter
pop
or
fs
xorl
sbb
sbb
pop
dec
inc
in
cmp
andl
mov
and
cltd
mov
test
xor
or
cmp
add
test
scas
stos
inc
and
lahf
jp
fidivrl
insl
push
jb
addl
xchg
insl
sti
subb
mov
push
xchg
or
fdivr
jns
stc
inc
sub
xchg
push
stos
jge
in
xchg
lock
or
sar
popa
xor
sub
jle
sbb
mov
jl
in
out
cltd
or
movsl
in
adc
dec
pop
mov
inc
data16
addr16
jg
and
inc
mov
xor
lea
out
movsb
mov
sub
repz
sahf
jb
test
arpl
lret
xchg
shl
das
sub
inc
fwait
sti
pushf
fadds
stc
fcmovu
pop
or
cmp
cmp
sahf
jns
dec
mov
test
or
jl
jmp
aam
rcrl
mov
mov
nop
jbe
cwtl
push
cmp
into
insl
faddl
or
jmp
xchg
or
push
jbe
setg
into
fadd
and
in
ret
out
xchg
out
adcb
loope
cmpsl
popa
adc
pop
jns
or
sub
out
adc
xlat
negl
test
fs
outsb
inc
xor
xchg
push
jbe
mov
and
mov
fwait
sub
iret
loopne
jae
das
dec
int
and
and
or
aas
rolb
xor
je
in
out
lds
xchg
and
xor
adc
and
pop
add
ss
sub
cmpb
xor
idivl
xchg
shr
inc
push
fimull
pop
fwait
jecxz
pop
inc
adc
lcall
xchg
xor
inc
pop
cmp
xchg
roll
cltd
nop
aaa
sub
push
push
sbb
fdivl
data16
stos
mov
push
sbb
shll
mov
popf
push
data16
mov
mov
iret
imul
jl
mov
mov
in
loop
movsl
cltd
and
jo
pusha
leave
nop
cmp
or
jns
imul
mov
and
jo
pusha
leave
nop
cmp
or
jns
imul
mov
and
jo
pusha
leave
nop
cmp
or
lock
rorl
mov
and
lock
or
jg
sbb
mov
push
pop
ss
mov
sub
movl
movl
movl
movl
call
mov
cmpl
jne
push
push
push
call
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
dec
adc
insl
call
ret
fcomps
add
add
pop
add
pop
add
add
add
iret
add
mov
outsb
add
add
add
add
add
iret
add
add
into
add
add
push
add
lea
mov
add
imul
add
and
mov
xor
inc
add
add
add
add
roll
les
mov
cmp
add
add
add
dec
add
or
popf
add
add
add
add
add
roll
cmp
mov
fiaddl
imul
add
pop
add
add
add
add
add
add
add
in
and
adc
push
add
pop
add
filds
popf
add
add
add
xchg
add
mov
xor
inc
add
mov
lret
add
and
in
add
xchg
add
add
add
add
add
inc
add
add
addr16
add
cmp
les
xchg
test
add
add
add
push
add
mov
and
or
dec
add
add
cwtl
add
add
repz
add
stos
add
adc
add
pop
add
add
add
add
pop
add
add
add
add
add
filds
or
add
aas
add
add
sub
add
add
jne
cmp
add
add
add
add
add
add
add
add
nop
add
add
add
add
add
add
add
xchg
add
add
add
add
add
jns
roll
xchg
add
add
add
add
insl
add
add
add
add
xor
inc
or
add
dec
add
add
stc
add
dec
add
add
jmp
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
sub
lds
cltd
add
jmp
addr16
add
dec
add
add
add
test
sbb
push
add
or
add
incb
lds
pop
add
add
add
mov
lahf
add
aad
aad
arpl
imul
add
aad
aad
mov
in
adc
jnp
aad
push
add
addb
add
add
add
fwait
add
add
add
add
add
add
nop
add
add
scas
add
inc
add
add
add
add
pop
in
sub
cmp
sub
add
add
add
mov
js
adc
jne
add
fiadds
cmp
push
add
jmp
mov
add
faddl
mov
add
add
add
add
add
sub
test
filds
pop
add
add
roll
pop
add
adc
test
fildl
add
or
sahf
add
add
add
add
roll
pop
add
add
add
push
add
pop
add
add
add
les
cmp
int
inc
add
add
jne
add
test
fildl
inc
add
add
add
add
add
testl
jae
or
dec
add
add
push
add
mov
mov
add
add
add
add
add
add
add
add
add
add
pushf
add
lds
int
jae
jecxz
popa
add
inc
add
add
add
arpl
roll
in
add
in
add
jne
pop
add
add
insl
add
add
pop
add
cmp
push
add
test
push
add
add
pop
fwait
push
mov
daa
and
in
ljmp
dec
push
adc
adc
mov
dec
push
sahf
pop
xchg
out
out
sbb
sbb
incb
fnsave
mov
test
sub
adc
cmp
jo
jne
pop
mov
lock
pop
lds
xchg
fistpl
cmpsl
xrelease
jo
dec
rorl
jecxz
push
mov
dec
cli
leave
adc
outsl
mov
jg
dec
push
xchg
adc
push
cmpsl
jl
mov
scas
ljmp
int
cmp
xchg
rorb
dec
clc
adc
cmp
inc
sub
adc
and
mov
aad
jecxz
cld
push
mov
sub
inc
inc
ljmp
fwait
icebp
mov
loope
or
jp
loopne
out
inc
mov
scas
lods
leave
out
loop
add
popa
rcll
ret
rcrl
dec
dec
stos
loope
inc
cltd
sbb
sub
and
mov
nop
cmpl
dec
adc
gs
imul
adc
leave
stos
mov
aaa
jns
in
mov
mov
jns
inc
out
or
add
in
imul
mov
lret
ret
lods
dec
jle
jg
gs
and
adc
lods
addr16
jp,pn
imul
adc
repz
push
in
lret
das
imul
xor
cmp
cmp
jo
add
ficompl
pushl
mov
cld
in
out
imul
sbb
sub
xor
cmpb
cmp
aas
sbb
push
sbb
je
out
mov
add
and
fbld
mov
nop
or
arpl
jl
sbb
das
push
mov
loop
loop
and
inc
inc
sub
rcrl
call
in
sbb
outsb
mov
inc
inc
daa
movsb
mov
mov
lcall
stc
pop
lcall
or
xchg
pusha
std
and
sub
pusha
sub
ret
leave
xchg
mov
jp
add
push
adc
cmc
dec
and
mov
fisttps
scas
mov
xor
xor
cmpsl
pop
cmc
cli
scas
gs
arpl
fsts
or
xor
ret
cld
out
fwait
mov
test
scas
mov
divl
sub
int
xchg
add
adc
sbb
or
dec
adc
jg
out
mov
mov
loope
fbstp
and
outsl
movsl
fcoms
or
je
or
outsl
push
xchg
enter
fdecstp
and
sbb
dec
fwait
pop
push
xchg
dec
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
repnz
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
repnz
fdiv
add
aam
add
int3
repnz
repnz
mov
repnz
lods
repnz
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
hlt
add
dec
hlt
add
push
hlt
add
pop
hlt
add
fs
add
insb
hlt
add
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
hlt
add
mov
hlt
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
testb
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
testb
mov
testb
lods
testb
movsb
testb
pushf
testb
xchg
testb
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
testb
cld
testb
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
shl
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
clc
add
dec
clc
add
push
clc
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
clc
add
lods
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
