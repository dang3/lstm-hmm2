cmpsb
mov
jle
test
mov
jo
ret
sub
or
and
push
or
stos
fsubs
sub
add
push
stos
mov
push
pop
dec
cmp
in
fistpll
outsb
jmp
fwait
jmp
cmp
xchg
lea
insb
int
lret
push
cld
and
or
sbb
jno
ret
dec
jno
mov
sbbl
cmpsl
lods
addr16
jp
outsb
adc
ret
inc
jnp
jp
inc
add
iret
sahf
cmp
std
push
push
scas
sti
mov
or
adc
inc
jg
test
fsts
stos
lcall
test
sub
ret
xor
fnsave
out
inc
mov
mov
inc
add
andb
pusha
inc
adc
or
movsl
mov
and
mov
jbe
mov
imul
adc
movzwl
ja
dec
jb
mov
jb
adc
jbe
jl
add
fcmovb
stos
xchg
add
aaa
sbb
sub
cmc
lret
jge
movsl
sbb
xor
fcom
pop
jle
jb
jmp
inc
xor
and
mov
pusha
xor
inc
mov
rorb
into
mov
cmp
popf
ret
jno
loope
fbld
ja
mov
xchg
dec
sahf
fldt
rcrb
cmp
push
pop
xor
xchg
dec
ret
hlt
lret
inc
mov
sbb
cmp
inc
enter
rolb
pushf
jns
testb
jmp
pop
inc
sbb
ds
mov
inc
iretw
insl
pop
vmread
adc
push
push
lock
and
xchg
inc
and
int3
xor
dec
jle
jecxz
mov
xchg
cmp
and
addr16
sbb
add
push
ret
decb
adc
fucomi
mov
mov
imul
jo
mov
rclb
inc
push
pop
adc
jmp
sbb
push
insl
mov
ds
lock
lcall
in
stos
pop
ret
xorb
or
add
pop
popf
arpl
xchg
mov
test
fimuls
aas
testb
adc
or
mov
imul
and
test
fisttpll
les
cmp
shll
shll
push
out
in
push
lods
push
mov
stos
dec
or
and
cmpsl
icebp
sbb
pop
in
lock
or
pop
pushf
stos
clc
xchg
int
test
mov
xor
nop
fst
xor
pushf
cld
xor
cmp
inc
sub
sbb
test
ds
pop
push
lcall
cli
mov
jbe
rcr
jge
loope
jl
add
lcall
or
fucomi
arpl
movsb
cld
adc
xchg
es
cmpsb
cltd
out
test
xor
out
sahf
loopne
les
dec
in
mov
test
cmp
adc
std
xchg
inc
dec
stos
lods
mov
mov
in
xchg
fisubrs
jmp
stos
jle
push
and
arpl
mov
test
ret
fdivl
sahf
imul
mov
pop
int
pop
rolb
in
cmp
xchg
shlb
imul
cs
cmpsb
mov
xchg
mov
and
stos
pusha
test
xorb
ror
sbb
and
scas
int3
push
or
subb
pop
xor
xchg
push
jo
faddl
push
inc
inc
and
inc
mov
push
dec
jg
enter
or
cmp
xchg
out
jo
or
in
add
xchg
or
sbb
cmpsb
pop
xor
lret
iret
pop
in
movaps
outsl
insl
cmp
ljmp
sub
cmpsl
mov
fs
adc
std
inc
sub
sbb
stos
push
or
mov
dec
or
mov
inc
outsl
pop
movsl
or
fisubrl
jmp
jmp
inc
outsl
add
ss
enter
sarl
push
add
scas
mov
scas
xlat
cmp
out
push
jno
cmp
int
aad
push
test
push
lods
jle
mov
xor
push
or
jne
xor
inc
lcall
jge
dec
sbbb
das
or
lock
add
mov
test
mov
iret
lret
push
rcr
push
inc
divl
cmp
cmpsl
push
xchg
dec
and
iret
and
fs
jo
cmc
sub
or
inc
scas
pop
dec
test
cmpsl
inc
xor
jecxz
pop
push
pop
test
outsl
and
loope
jp
pop
cmp
jb
dec
ffree
pop
push
repz
lret
in
and
push
clc
pop
es
xchg
lock
jmp
xchg
and
adc
jg
popa
ja
inc
out
loope
je
cmp
ds
ss
cli
cmc
mov
xchg
mov
xchg
out
jo
fwait
in
test
adc
outsb
iret
sahf
cmp
add
das
pop
xor
shll
test
rorl
out
mov
add
cld
sbb
cmp
lret
cmp
xchg
lahf
xchg
dec
loope
std
jb
jecxz
xchg
popf
fs
scas
push
sub
mov
xor
hlt
in
pop
mov
lret
pop
dec
popa
or
adc
inc
xchg
xchg
xchg
xor
pusha
in
sbb
xchg
inc
push
mov
test
mov
iret
xchg
inc
jecxz
cmp
outsb
fdiv
mov
jo
ret
jecxz
push
inc
rcl
repnz
daa
mov
stc
xor
in
xchg
fcompl
enter
sbb
nop
adc
cmc
xchg
xchg
adc
lock
jo
ret
aaa
cmc
ds
into
pop
dec
inc
daa
pop
bound
push
dec
cmp
pushf
outsl
dec
cmp
pop
push
sti
mov
jg
dec
mov
add
dec
sahf
mov
jns
pop
mov
sbb
or
push
mov
inc
mov
pop
dec
pop
mov
mov
cli
cmc
rcrb
mov
test
aas
adc
xchg
push
or
xor
stc
jl
hlt
mov
pusha
mov
cmc
cmp
pop
int3
adc
dec
outsb
or
sar
in
in
popa
dec
pop
sbb
iret
sub
mov
dec
push
jne
test
in
sbb
add
xchg
les
xor
pop
repz
jmp
push
popf
push
sbb
mov
inc
sbb
rcrb
loope
xchg
dec
push
add
test
add
jge
jo
fs
mov
aas
sti
cld
inc
xor
xor
adc
jle
lds
test
std
or
fs
pop
popf
loope
lods
faddl
mov
sub
movsb
sub
push
cld
int
sub
rcll
or
mov
jae
aam
mov
nop
js
mov
mov
jecxz
pop
out
pop
push
dec
sub
jnp
mov
stos
xor
cmp
cmovge
ss
xchg
jae
enter
mov
pop
pop
mov
ljmp
lret
fistpll
stos
fidivl
fisubrl
jno
add
arpl
sub
and
xor
in
xor
pop
jnp
gs
push
scas
gs
scas
push
movsb
pop
inc
cmpsb
cwtl
jne
inc
insl
outsl
and
sbb
cltd
test
jbe
dec
aam
mov
xchg
mov
xchg
out
jo
addb
shll
sahf
sub
cs
je
xor
sbb
mov
jbe
pop
jnp
pop
fstpl
jb
xor
test
jle
dec
in
xor
jle
sbb
fs
stc
push
mov
push
lea
xchg
mov
sahf
loopne
les
dec
in
mov
inc
push
cmp
in
lret
mov
cmp
pop
incb
adc
test
insl
out
pop
inc
icebp
lret
push
xchg
add
test
add
pop
and
xchg
add
push
jg
pop
push
push
sub
in
cmp
xchg
shlb
imul
cs
cmpsb
mov
xchg
mov
rcrb
out
fistpll
int
xor
loope
push
inc
in
jnp
or
es
in
test
add
mov
and
inc
mov
test
mov
movlps
lahf
xchg
inc
gs
imul
dec
in
dec
push
jne
test
in
sbb
add
xchg
les
xor
pop
repz
jmp
or
or
sbb
xor
les
aad
fwait
jne
xchg
sbb
adc
inc
jmp
push
jb
or
mov
xlat
popa
int
mov
lods
rclb
or
add
xchg
add
and
loope
call
xor
sub
aas
inc
mov
and
jns
cmp
or
call
mov
stos
and
fmuls
aaa
aaa
add
lock
and
fxam
jl
mov
xor
add
lcall
insl
sbb
into
scas
mov
sub
addps
fldl
xchg
aam
ja
je
dec
movsl
xchg
cmc
sbb
mov
in
push
lods
push
mov
stos
dec
or
and
cmpsl
icebp
sbb
pop
in
lock
or
pop
pushf
stos
clc
xchg
int
test
mov
xor
or
inc
in
jle
xchg
test
dec
cltd
out
ret
sub
or
fadd
jno
rolb
inc
xor
stc
xor
test
cs
xchg
jmp
std
pusha
push
orb
and
in
jecxz
leave
sahf
cmp
fcomp
scas
dec
mov
pop
push
push
jno
ret
cmp
stos
xchg
or
jae
icebp
add
into
mov
insl
jno
outsl
pushf
mov
adc
dec
sub
shlb
jae
sub
mov
cmpsb
pop
mov
xchg
outsl
insl
sub
lcall
cltd
cmp
pop
xor
out
in
push
rorb
dec
cmp
enter
sbb
fistpl
pop
jp
cli
cmc
jmp
test
cmp
movsb
dec
ja
test
fistpl
into
push
test
jge
inc
ret
adcb
jnp
and
push
pop
fldl
push
xchg
movsb
and
add
mov
sub
pop
int
pop
rorb
into
adc
call
mov
dec
mov
loope
fbld
ja
mov
cmc
sahf
xor
rclb
and
test
lahf
ss
ret
fwait
clc
mov
fs
xor
fistpll
fnstcw
mov
push
push
jo
cmp
or
fcoml
inc
and
fidivs
loope
and
push
mov
adc
arpl
mov
xchg
jbe
sbb
fildll
mov
push
dec
sahf
arpl
dec
cli
stos
xor
adc
and
mov
jecxz
in
fs
lahf
inc
push
out
add
jne
lock
out
xchg
cld
cmc
jmp
dec
pop
jg
cld
push
fldl
out
dec
xchg
loop
js
mov
movsb
jg
xor
inc
mov
sbb
popf
mov
jbe
rcr
jge
loope
jl
add
fstps
in
dec
xchg
aad
add
fucomi
arpl
movsb
lret
pop
cmp
mov
sahf
stc
mov
test
insb
xlat
into
enter
jmp
pop
popf
fiadds
out
and
imul
and
mov
scas
aam
or
push
pop
cmc
int
enter
or
ss
cmp
fldt
jb
lahf
inc
and
fdivl
outsl
ds
dec
mov
mov
lret
push
xchg
add
test
fisubrl
jns
in
mov
jmp
fnstsw
fiadds
sub
inc
mov
or
popf
pop
adc
sbb
inc
xchg
das
ret
mov
fdivr
ss
cli
cmc
arpl
call
popa
pop
int3
adc
inc
es
add
mov
rcll
or
mov
push
ds
sti
or
popa
cltd
lock
jmp
addr16
loop
add
cmpsb
or
and
jp
das
mov
iret
or
or
fadd
jno
rolb
inc
xor
cmp
push
cmpsb
andb
mov
mov
ret
xchg
rcrb
push
das
es
inc
mov
out
scas
xorb
push
mov
nop
sbb
xor
mov
push
mov
mov
mov
push
cmpsl
adc
mov
cli
cmc
xchg
fwait
cmp
and
mov
and
lret
inc
sbb
mov
push
hlt
dec
jecxz
push
jbe
je
mov
loope
jae
jnp
pop
fwait
cmc
stos
or
insl
mov
int3
lods
mov
cli
cmc
add
ljmp
or
and
scas
mov
fsubrs
push
sbb
cmp
ss
xor
mov
sti
adc
fimuls
aas
testb
fildll
and
into
scas
mov
sub
adc
pop
fisttpl
ret
mov
les
mov
test
fstl
out
in
test
sbb
sub
stos
push
mov
push
cmpl
pop
in
lock
or
pop
pushf
stos
clc
and
arpl
gs
sahf
outsb
sub
std
cli
add
ss
lcall
cs
ss
orb
imul
xor
push
lret
sbb
cmp
fldt
int3
jmp
lahf
js
jne
or
and
call
or
in
movaps
outsl
insl
cmp
ljmp
sub
mov
jne
mov
enter
out
lret
cmp
inc
icebp
je
dec
stos
or
ds
rcll
mov
aam
push
and
mov
inc
dec
push
sub
mov
mov
push
xor
mov
sub
xchg
jg
repnz
jmp
das
jp
fs
jo
mov
stos
mov
enter
push
lahf
cltd
aas
cmp
movsl
push
jmp
fwait
in
xor
mov
adc
jmp
push
out
ja
jnp
out
pop
mov
scas
xchg
and
test
addr16
into
mov
scas
xor
push
xor
and
pop
nop
xor
in
bound
les
dec
bound
hlt
mov
loopne
xor
xor
ret
sub
push
lret
cmp
iret
jns
jns
push
mov
in
or
sbb
push
lret
xchg
xor
loopne
push
add
stos
mov
lods
mov
mov
xchg
and
jo
mov
mov
inc
cmp
in
mov
adc
inc
push
mov
pop
in
fs
lahf
inc
push
out
xor
testl
mov
in
mov
cld
or
xor
test
mov
iret
je
and
xor
and
sar
and
adc
mov
out
xchg
lock
mov
fs
in
bound
or
dec
sbb
dec
cwtl
sub
lret
pushf
xorb
inc
aaa
bound
adc
ret
mov
jecxz
aam
pop
dec
aas
adcl
xchg
pop
dec
dec
mov
fdivrl
les
inc
mov
aaa
xchg
shlb
push
fisttpll
push
pop
std
mov
inc
lods
sahf
sbb
jmp
dec
cmp
mov
int3
shlb
cmpb
adc
adc
cwtl
mov
inc
inc
iret
inc
fildl
sub
xor
sub
icebp
repnz
scas
cmpsb
add
shlb
imul
cs
cmpsb
mov
fsts
leave
mov
cmp
cmp
or
xchg
cmpsb
in
and
sbb
out
sti
out
dec
arpl
cmc
add
out
cmp
aaa
in
xchg
mov
jo
ret
fnstenv
inc
iret
cmpsl
lret
jno
iret
enter
mov
add
sub
add
sbb
fcomps
sbb
and
nop
movb
dec
push
lret
push
cmp
les
or
lds
mov
mov
shll
gs
aad
mov
int3
movsb
pop
dec
mov
stos
dec
lret
sahf
xor
in
pop
xchg
add
push
ret
decb
adc
fucomi
mov
stc
xchg
stos
pop
pop
mov
imul
psubsw
out
adc
sub
mov
xchg
mov
lahf
xlat
jae
mov
test
ret
adc
add
mov
ret
aas
es
fbld
mov
xor
xchg
push
std
xchg
inc
dec
stos
lods
mov
das
lahf
mov
movups
inc
scas
mov
fdivs
lahf
int3
mov
test
inc
jb
xchg
add
aaa
sbb
jbe
addr16
into
mov
pop
out
imul
lock
jnp
or
scas
ds
mov
and
xor
lcall
jb
push
xchg
cld
std
mov
sub
mov
jno
mov
or
call
xchg
aam
jl
adc
pushf
fistpll
std
lcall
sarl
push
and
xchg
push
cmp
push
mov
insl
or
push
imul
cmp
loop
js
mov
movsb
jg
xor
std
mov
js
add
iret
fwait
out
push
int3
int3
adc
shll
jecxz
out
inc
xor
sub
scas
inc
sub
sub
shl
jmp
clc
and
push
mov
xchg
mov
xchg
mov
adc
movb
push
fildll
push
std
dec
adc
call
pop
xchg
outsl
and
insb
xchg
es
cmpsb
sub
xorb
test
pusha
sub
xor
fwait
xchg
xchg
adc
in
mov
mov
inc
ret
sbbb
or
mov
test
nop
or
mov
pop
ret
lret
push
and
ds
sub
sub
stos
jo
inc
inc
add
xor
test
int3
jle
popf
sbb
add
cld
popa
xchg
iret
push
push
jne
ret
cmovge
es
push
mov
hlt
mov
loopne
test
insb
push
mov
cltd
out
ret
stc
dec
dec
sbb
cmc
pusha
sti
ret
out
fsubs
or
ret
mov
or
and
mov
rcrb
in
mov
add
cmp
push
mov
or
and
test
add
xor
icebp
or
scas
call
xchg
cmp
aaa
test
add
xchg
mov
jne
je
mov
stos
dec
cli
arpl
push
je
or
xor
fbld
mov
cmc
jne
lcall
xchg
repnz
pop
pushf
fwait
into
jne
test
sbb
aad
xchg
mov
add
cld
sbb
cmp
lret
cmp
xchg
lahf
xchg
dec
loope
std
jb
jecxz
xchg
popf
fs
jae
sub
mov
mov
jecxz,pn
mov
inc
sbb
je
cwtl
xchg
notb
loope
jae
jnp
push
mov
pusha
scas
popf
pmulhuw
loop
into
lret
fiadds
inc
or
cmpsb
mov
cs
fisubrs
icebp
lret
push
xchg
movsb
and
add
mov
sub
pop
int
pop
rorb
into
adc
sub
rcl
xor
mov
cmp
popf
ret
jno
fdivr
adc
cmpsl
dec
sbb
xor
pop
pop
insb
ds
lret
inc
fs
jecxz
or
in
movsb
cltd
in
nop
mov
push
dec
sahf
add
sub
sub
jo
repz
clc
mov
and
mov
push
jle
xchg
fdivrl
sbb
sub
lcall
stos
cltd
xchg
xor
popf
xchg
mov
mov
shll
mov
orb
sub
sub
or
dec
adcb
mov
ffreep
and
pop
cltd
mov
jo
repz
pusha
cld
inc
adc
push
repnz
lock
repz
dec
pop
xchg
xor
pminub
mov
add
andb
pop
adc
mov
orb
hlt
fwait
push
cs
sub
xor
jg
cli
sub
xchg
sbb
dec
pop
aam
in
das
dec
mov
jae
lret
fisttpl
xor
aad
xor
add
adc
and
repz
mov
and
clc
cmp
mov
push
xor
cmp
pop
nop
xor
in
jne
loop
pushl
insb
mov
popa
mov
pop
xchg
mul
out
cmp
sbb
or
add
imul
fistpll
ja
inc
inc
mov
add
inc
xchg
add
add
stos
and
inc
clc
mov
addr16
and
jp
cmovs
fstpl
mov
xchg
add
cmpsb
clc
mov
mov
mov
aaa
lock
fbstp
or
sbb
xor
test
cs
xchg
push
mov
test
sub
jb
push
das
cmpb
pop
push
pop
gs
es
adc
dec
and
outsl
outsb
pop
mov
sahf
movsb
mov
popa
xchg
mov
inc
adc
adc
inc
je
imul
bound
adc
imul
adc
jmp
outsl
cld
mov
insb
ja
dec
jb
mov
jb
adc
jbe
jl
lahf
dec
mov
std
mov
lret
cmc
lret
jge
movsl
sbb
xor
fcom
sbb
das
xchg
mov
and
pop
std
cltd
popa
cs
push
xor
jg
int
into
xchg
xchg
cli
ja
aam
xor
lds
fists
in
jns
pop
mov
add
cmp
cmp
cmp
or
and
sub
mov
add
gs
pop
mov
adc
mov
mov
sti
notl
and
mov
pop
push
fwait
loopne
xlat
or
inc
xchg
lahf
xchg
inc
popf
mov
out
fists
add
lcall
repnz
adcl
popa
dec
pop
cmp
sbb
dec
fstpl
jnp
arpl
mov
cmp
insl
add
loopne
inc
adc
mov
jo
cmp
inc
push
enter
adc
mov
jl
mov
push
jb
xor
test
jle
dec
in
xor
xchg
mov
mov
out
imul
push
aad
dec
rcll
sub
jecxz
mov
shlb
pop
repnz
into
out
repnz
jmp
hlt
xlat
shl
movsl
nop
mov
stos
cmp
xor
mov
mov
cmp
pop
incb
adc
test
aaa
sbb
clc
cmc
xchg
es
mov
clc
sub
push
mov
fldl
sahf
inc
cmp
test
lock
repnz
push
sbb
fidivs
and
inc
in
jns
jns
push
sub
xchg
lret
and
xchg
cmp
xor
outsl
sti
fmulp
mov
insl
jg
rep
mov
xchg
mov
repz
clc
mov
mov
mov
aaa
sbb
mov
loopne
adc
and
and
xchg
jo
shll
enter
sbb
jno
rorb
xchg
testb
icebp
das
pop
xor
insb
adc
sbb
inc
xchg
idiv
add
cld
sub
sub
je
sbb
add
test
mov
aas
not
hlt
jmp
push
push
ja
cmovo
setp
les
fstpl
jne
adc
mov
iret
shrb
mov
xlat
scas
sub
xchg
lods
rclb
add
add
mov
or
mov
pop
cmp
jbe
or
jno
loopne
es
es
fwait
nop
mov
cmp
stos
mov
inc
jno
xorl
shl
scas
mov
fsubrs
push
cmp
in
lret
les
inc
mov
mov
adcl
pushf
pop
or
push
mov
stos
scas
adc
inc
sub
fdivrl
das
test
test
mov
lahf
cmp
shll
or
test
adc
sti
cmp
mov
idivb
imul
jae
imul
test
scas
dec
les
cmpsl
inc
movsb
fistpl
push
inc
mov
xchg
mov
and
fadd
jno
rolb
inc
xor
add
inc
iret
pop
in
movaps
outsl
insl
cmp
ljmp
lea
mov
mov
enter
and
scas
out
scas
es
dec
lods
or
ds
rcll
mov
aam
push
and
mov
inc
dec
xchg
fstpl
push
cmp
or
imul
fcoml
jp
adc
add
jbe
stos
outsl
call
mov
xchg
imul
out
in
sub
cmp
popa
xor
sbb
xor
fcom
sbb
jp
lret
mov
mov
fstpl
jl
aam
movsb
mov
sbb
fldl
neg
fidivl
and
pusha
fnstenv
mov
in
or
push
push
mov
lds
mov
push
sahf
cmp
mov
in
pop
orl
out
ret
out
stos
push
cltd
dec
stc
adc
inc
mov
mov
pop
rolb
sub
fucomp
ss
adc
cmp
andl
pop
outsb
shrl
cmc
xor
xchg
je
pop
fldl
addr16
adc
mov
cmp
and
or
inc
jnp
pop
notb
aam
mov
and
xor
jle
stos
push
or
mov
jmp
outsb
push
jns
test
fistpll
push
xor
hlt
in
pop
mov
lret
pop
jae
rcr
mov
icebp
inc
jle
fs
pop
jno
rcl
push
fbld
xchg
js
dec
hlt
sub
mov
push
loopne
mov
cli
int3
scas
or
lea
stos
dec
mov
mov
jg
fsubrl
mov
sahf
cmp
pop
in
lret
les
inc
mov
pop
test
xchg
and
iret
lods
iret
mov
cmpsl
jecxz
stc
cmp
add
fwait
int
inc
adc
add
iret
dec
push
sbb
push
jno
push
dec
cmp
in
icebp
push
cmc
sbb
call
push
pop
test
sbb
mov
inc
mov
fcomip
outsl
aas
stos
dec
adc
inc
pop
fcomp
out
lods
jp
sarl
jns
inc
lds
jge
mov
pop
push
test
pop
in
fs
lahf
inc
push
out
add
jne
lcall
xchg
repnz
shrb
cmp
movb
mov
es
cmp
adc
mov
cld
gs
or
test
adc
lret
sahf
lcall
leave
jo
or
inc
sub
aad
rcrb
sahf
add
or
aas
sti
cld
inc
xor
sbb
scas
pop
mov
or
and
cmp
stos
shlb
cmpsb
sub
orb
mov
mov
sahf
pop
repnz
sti
sub
or
int
aad
push
mov
mov
bound
fsubl
js
cld
pop
xorl
and
jo
or
mov
fwait
outsb
mov
mov
nop
scas
adc
cwtl
imul
iret
inc
fildl
sub
test
js
nop
add
mov
imul
adc
popa
xor
inc
push
sbb
lock
lret
insl
test
mov
popa
imul
mov
fiadds
ja
jnp
out
sub
xchg
addb
test
mov
mov
push
jmp
hlt
cmp
fmulp
adc
dec
xor
popa
mov
loope
cli
xlat
cmp
leave
jge
dec
push
adc
jbe
sbb
xlat
mov
aam
mov
xchg
mov
mov
int
jmp
lahf
js
jne
or
sbb
daa
xchg
out
xlat
scas
pop
andps
pop
ret
testb
jnp
add
and
push
xor
jo
mov
mov
insl
or
mov
movsl
lock
sbb
mov
xor
push
in
daa
mov
insb
les
imul
fidivrs
mov
in
mov
in
mov
mov
lret
and
or
int
aad
push
test
or
mov
subb
sti
sti
aam
scas
mov
fsubrs
push
cmp
in
lret
les
inc
mov
shl
push
popl
xor
out
xchg
arpl
sahf
push
adc
or
mov
imul
and
test
cmp
jg
cltd
mov
ja
inc
inc
mov
cmp
pop
ds
in
rorl
xor
pop
push
repz
sbb
and
cmpsl
icebp
sbb
test
ret
iret
or
inc
cmp
ja
mov
xchg
in
fistpll
lea
loope
mov
jae
sub
jo
inc
out
ss
pusha
ss
sbb
dec
cmp
daa
lea
adc
ds
dec
roll
jp
inc
jl
fstpt
pushf
cmp
push
jae
mov
movsl
loop
mov
adc
cmc
mov
xor
divb
test
loopne
ljmp
sbb
out
testb
out
js
roll
adc
pop
in
pusha
inc
notl
gs
sbb
sbb
mov
cmc
mov
mov
xor
jl
std
jle
push
pop
outsl
cmp
xchg
fs
jae
pop
fsubrp
dec
lahf
mov
mov
xchg
shl
xlat
shl
movsl
nop
mov
and
aas
repz
xor
jecxz
cmp
sbb
jne
aas
cmp
inc
xchg
cmp
cmp
xchg
push
mov
mov
xchg
outsl
push
add
sub
jo
icebp
inc
outsb
out
lods
pop
and
jmp
mov
fwait
xchg
subl
push
xchg
or
add
mul
jne
lock
dec
inc
mov
or
adc
jne
lahf
mov
adc
movsl
xchg
arpl
sub
sbb
pop
orl
jmp
inc
ficoml
pop
cmp
dec
dec
outsl
xor
andl
cmpsl
outsl
xor
or
ret
rolb
inc
xor
add
inc
iret
pop
in
movaps
outsl
insl
cmp
ljmp
sub
mov
add
xchg
rorl
out
lret
cmp
inc
sub
sti
btr
jecxz
sub
sbb
pop
mov
sahf
movsb
mov
popa
xchg
mov
inc
sti
incl
pop
push
js
movsl
mov
inc
idivb
xchg
out
or
or
jne
inc
outsb
in
stos
pop
ret
xchg
adc
adc
add
mov
mov
shll
fsts
scas
xor
fists
vandnpd
jnp,pn
mov
insl
or
and
aam
std
loope
std
std
dec
sahf
shll
push
jg
jge
movsb
addl
aad
sub
ret
mov
stc
lahf
push
jg
lock
loop
imul
or
or
mov
lret
dec
pop
adc
outsl
jb
jg
in
test
add
mov
and
inc
mov
outsl
fstl
xchg
loopne
mov
out
sahf
mov
push
or
sub
clc
outsl
mov
cmp
dec
out
jle
fbstp
mov
xchg
imul
fistpll
jle
es
or
test
adc
dec
cmp
fsubrl
out
fistpll
js
sbb
mov
dec
lret
int3
jge
test
push
cwtl
xor
mov
push
in
pusha
inc
notl
gs
mov
jecxz
sub
sbb
pop
mov
sahf
movsb
mov
popa
xchg
sub
hlt
insb
inc
xchg
pop
push
js
movsl
mov
inc
idivb
imul
and
push
or
jne
xor
sub
mov
mov
stc
xor
in
xchg
out
push
call
push
hlt
xchg
pusha
ja
nop
adc
cmc
xchg
xchg
cmp
sarb
stos
fcompl
les
ds
mov
and
dec
in
and
fimull
aam
mov
jo
ret
inc
lret
sub
xor
popa
les
and
int3
lods
add
movsl
pop
mov
out
mov
lret
incl
pop
popa
iret
sahf
cmp
fs
jl
test
fisttpll
and
leave
ret
fmull
in
cmp
cmpsl
xchg
cli
and
mov
adc
inc
mov
push
dec
dec
ffreep
aam
imul
fbld
push
insb
enter
sub
out
xlat
test
inc
cwtl
xor
outsl
cli
and
jge,pt
enter
pop
aas
cmpsl
and
sbb
test
out
shrb
inc
andl
xor
jecxz
lods
xchg
insb
arpl
xlat
loop
js
mov
movsb
jg
xor
inc
mov
pop
push
pop
mov
or
test
adc
jmp
imul
push
fistpll
cmp
push
add
les
dec
insl
or
out
lcall
jge
pushf
add
fucomi
arpl
movsb
cld
adc
test
cmp
bound
xlat
popa
int
adc
test
or
jle
insl
sbb
cmp
dec
mov
fdivrl
les
xor
mov
and
mov
inc
mov
ficoml
sbb
notb
xor
jo
in
repz
lret
add
aaa
and
clc
cmp
mov
push
xor
pushf
xchg
test
pop
std
cltd
popa
fnsave
or
nop
fsubrp
xor
rclb
into
addr16
and
inc
in
jns
jns
push
sub
push
dec
dec
mov
mov
mov
lret
xchg
xor
adc
mov
push
pop
cwtl
out
imul
xor
imul
adc
mov
sbb
dec
shll
std
int3
xor
dec
jle
jecxz
mov
sbb
cmp
sbb
and
lahf
dec
push
pop
jbe
jmp
push
jb
or
mov
fwait
and
fwait
cmp
and
mov
in
pop
and
inc
repnz
andb
mov
idivb
xchg
int
imul
adc
jmp
sbb
jbe
stos
outsl
call
mov
xchg
imul
push
cmpsl
in
xchg
out
push
call
sub
popa
sbb
jne
jne
rcrl
movsb
shlb
mov
mov
mov
fstpl
jl
aam
lods
outsb
sbb
pop
cmp
mov
lods
xor
add
inc
in
jns
jns
push
sub
mov
dec
jp
pop
cmp
pop
movb
sbb
bound
sbb
adc
jmp
scas
mov
fistpl
loopne
orl
pop
push
cmp
fadd
xchg
mov
jo
sbb
jae
inc
xlat
adc
xchg
shll
es
mov
inc
push
xor
aam
mov
mov
jne
push
int
xchg
pop
jnp
add
inc
int
cmpsb
cs
test
adc
pop
mov
jecxz
add
ss
sbb
mov
pop
jge
or
lods
pop
mov
lret
adc
pop
inc
push
aad
cli
pop
or
out
jne
outsl
filds
mov
fdivrl
pop
inc
stos
cwtl
mov
pop
push
and
push
inc
mov
inc
notl
gs
mov
jecxz
sub
sbb
pop
mov
sahf
movsb
mov
popa
xchg
mov
shl
insb
inc
xchg
pop
push
fldl
fcompl
lret
nop
add
dec
pop
aam
in
das
dec
mov
jae
rclb
lahf
imul
pop
dec
cli
cmc
jmp
stc
outsl
imul
popf
fiadds
in
subb
mov
hlt
andw
call
sti
fisubs
mov
jg
jbe
lods
or
push
push
and
enter
sbb
fidivs
sbb
dec
sbb
cwtl
in
out
mov
ds
lret
inc
fs
jecxz
or
in
movsb
cltd
in
nop
mov
pop
ret
jne
add
mov
repz
clc
mov
mov
mov
aaa
lock
fbstp
or
sbb
xor
test
cs
xchg
jmp
fwait
xor
jb
jae
js
push
clc
lcall
cmp
lret
cmp
xchg
lahf
xchg
dec
loope
std
jb
jecxz
xchg
xor
adc
add
xor
hlt
fwait
push
cs
sub
xor
jg
cli
sub
xchg
sbb
dec
pop
aam
in
das
dec
mov
jae
lret
fisttpl
xor
aad
xor
add
adc
and
repz
mov
and
clc
cmp
mov
push
xor
cmp
pop
nop
xor
in
jne
loop
pushl
imul
push
sarb
cmp
sbb
pop
lock
xchg
sbb
cmp
movsb
daa
adc
cmc
sub
xchg
imul
pop
stc
sub
mov
or
and
mov
loope
mov
mov
arpl
gs
and
mov
out
sahf
mov
push
stos
call
inc
es
fiadds
or
jmp
xchg
les
shl
sarb
jne
cmc
jmp
inc
push
mov
jecxz
rolb
push
movsb
ud1
and
cli
sub
mov
or
arpl
push
test
incb
adc
push
mov
pop
pop
loopne
and
dec
xchg
aaa
or
int
sbb
xchg
fdivrp
in
or
out
in
pop
lret
push
dec
jg
mov
bound
mov
add
stc
jne
sub
lock
lcall
insl
sarl
fdiv
sbb
sahf
dec
test
fists
xor
nop
js
mov
jle
sub
mov
xchg
xor
vandnpd
cs
or
test
adc
das
mov
and
mov
aam
imul
fisttps
jmp
icebp
push
cmc
sbb
pop
scas
sti
sti
sub
cld
es
pop
sub
xchg
sbb
shrl
ret
add
pop
xor
xchg
dec
ret
inc
fldl
mov
mov
add
cmpsb
clc
mov
mov
mov
aaa
lock
fbstp
or
sbb
xor
test
cs
cmp
or
pop
sti
adc
jae
js
cmp
shll
mov
orb
sub
nop
ret
push
lds
mov
jmp
sub
add
fs
jae
sub
movsl
dec
sub
shrd
xchg
sub
xor
lods
lret
jne,pt
xor
jno
mov
arpl
pop
jne
sbb
inc
xchg
dec
cmp
aaa
add
adc
jmp
js
cld
pop
xorl
push
ror
push
call
jnp
dec
in
aas
daa
and
stc
mov
inc
mov
ret
xor
and
repz
fwait
sub
pop
and
dec
hlt
mov
push
push
xchg
subl
adc
mov
jg
sbb
scas
rorl
testl
dec
inc
sub
movsb
mov
in
cmp
arpl
sub
jmp
dec
or
xchg
clc
rolb
or
dec
stos
fidivl
loope
cld
cmc
jmp
mov
sub
sti
sub
mov
shll
mov
xor
dec
inc
sahf
and
call
pop
icebp
ret
xchg
loop
sub
and
psubb
mov
push
pop
push
inc
leave
es
sub
arpl
ljmp
sti
xchg
pop
leave
data16
ds
ss
sub
arpl
push
test
lods
scas
jne
mov
enter
insb
jbe
scas
out
scas
es
dec
lods
or
ds
rcll
mov
aam
push
and
mov
inc
dec
xchg
dec
into
pop
add
xor
iret
inc
je
inc
movsl
mov
inc
idivb
jle
push
add
test
inc
das
dec
mov
jae
rclb
lahf
imul
cmp
adc
dec
mov
std
mov
jp
push
in
in
es
arpl
hlt
test
into
add
mov
int3
add
jbe
or
xlat
and
pop
ret
outsl
filds
movsl
mov
inc
out
sub
pusha
sub
dec
push
sbb
push
jno
push
or
rorb
into
mov
cmp
pop
negb
lock
jne
lock
xor
xchg
fcompl
movsl
pop
mov
stos
mov
pop
jns
push
sbb
xor
xchg
and
push
imul
test
mov
movlps
lahf
mov
imul
sub
insb
adc
sub
sbb
cwtl
les
add
xchg
les
xor
pop
repz
jmp
push
icebp
test
movsl
ficoml
loop
xor
insb
jle
push
roll
enter
out
lret
cmp
inc
icebp
je
scas
pop
mov
pop
xor
adc
push
pop
jno,pn
push
mov
inc
dec
xchg
dec
into
pop
add
push
ss
pop
mov
jnp
sub
in
das
jp
fs
jo
mov
dec
frstor
in
loop
into
lret
fiadds
bound
or
push
jge
ret
jnp
and
dec
outsl
stos
jle
push
xchg
mov
xchg
cli
out
fistpll
mov
mov
iret
inc
fisttpl
adc
nop
sub
popf
leave
cld
cltd
scas
mov
stos
mov
cld
xor
enter
loope
and
inc
xor
pop
inc
pop
xlat
xchg
mov
imul
add
stos
leave
mov
cmp
cmp
or
ret
add
je
rcll
ss
adc
push
lcall
scas
int
push
repz
push
leave
mov
pop
jmp
xchg
xchg
aad
negb
inc
sub
sbb
test
cmp
fsubrl
jle
jo
cmp
inc
push
enter
adc
adc
mov
mov
xchg
rcl
and
and
mov
inc
push
scas
out
scas
es
dec
lods
or
ds
outsb
xor
dec
aaa
push
dec
fistl
clc
jmp
scas
and
in
pop
mov
lret
invd
sbb
iret
sahf
insl
xor
jno
push
hlt
xlat
push
movsb
sub
push
cld
int
sub
rcll
or
mov
jae
mov
add
sbb
in
push
jecxz
pop
out
pop
push
jne
test
out
xchg
inc
aas
push
int
je
xchg
push
stc
jp
popa
cmp
adc
xchg
gs
fistl
dec
test
mov
lret
dec
pop
adc
xchg
int3
subb
dec
jle
dec
sbb
ja
xor
or
pop
add
lret
stos
cld
mov
mul
loop
add
cmpsb
or
and
jp
das
mov
iret
or
or
fadd
jno
pop
mov
and
fdivs
pusha
xor
sbb
pushf
std
or
pop
subb
sub
iret
push
clc
lcall
les
in
pusha
inc
notl
jecxz
dec
loope
std
jb
jecxz
xchg
popf
fs
pushf
mov
lods
stos
push
sti
dec
rcll
sub
jle
lds
test
dec
jg
stc
loopne
jne,pn
xor
notb
pop
mov
sbb
xchg
inc
push
mov
popa
add
loopne
cs
and
mov
scas
aam
mov
pop
xorl
push
sub
dec
add
sbb
insb
xor
dec
mov
inc
lods
sahf
sbb
mov
adc
push
sbb
jbe
test
mov
stos
scas
adc
pop
testl
or
fstpl
lock
sbb
jp
push
jb
lods
rcrb
fwait
lcall
mov
fwait
mov
scas
stos
and
inc
clc
and
add
or
test
adc
adc
aaa
mov
mov
and
mov
je
sub
add
test
adc
jp
shlb
ret
out
stos
push
popf
and
mov
xchg
mov
cli
cmc
cwtl
out
jb
sub
clc
outsl
inc
icebp
daa
test
repnz
jp
std
pop
bound
or
xlat
scas
pop
pop
cld
xor
pop
jo
jb
orl
mov
xor
mov
inc
cld
gs
int3
movsb
pop
dec
mov
lock
fbstp
fdivs
xchg
cmc
dec
test
mov
inc
push
inc
dec
jle
xor
stc
jb
lcall
inc
sbbb
mov
je
fdivrl
pop
or
jg
test
mov
insb
shlb
pop
repnz
cld
fcoml
or
jnp
jecxz
jle
repz
pusha
scas
popf
pmulhuw
loop
into
lret
fiadds
adc
adc
cmp
xchg
pop
xchg
jmp
mov
pop
aaa
and
clc
cmp
mov
mov
dec
jnp
or
scas
ds
mov
and
dec
movsb
arpl
mov
shlb
push
xchg
cld
es
ja
sub
ret
fists
in
jns
test
pop
push
xor
out
sub
jnp
ret
and
loopne
xlat
mov
cmpsl
insb
dec
cmp
arpl
sbb
in
fldt
int3
jmp
fucom
leave
xchg
sarl
and
out
lret
dec
shll
inc
ja
loopne
dec
sub
jge
cmp
and
addr16
sbb
add
sarl
aad
shlb
in
out
cmp
imulb
in
cmp
xor
jbe
mov
and
out
mov
aam
inc
jns
jp
inc
fidivrs
dec
cwtl
popf
int
jle
loope
aas
jge
scas
mov
inc
fnstsw
and
loope
and
jb
mov
mov
mov
mov
insb
fistps
fwait
jmp
fiadds
sbb
insb
int3
push
test
push
bound
mov
xor
push
push
jne
mov
idiv
daa
popa
repnz
insb
fnstenv
push
pop
mov
sarl
icebp
push
int3
sbb
xor
lahf
xor
arpl
push
adc
jbe
dec
mov
paddq
sub
addr16
into
mov
pop
ds
repz
fistpll
fisubs
ret
sub
ret
sbb
insb
mov
iret
sahf
cmp
ret
mov
imul
sub
xchg
and
enter
xchg
mov
or
xchg
clc
rolb
mov
imul
mov
cmp
adc
and
jne
mov
flds
shl
mov
hlt
lret
mov
out
lret
xchg
dec
adc
jmp
scas
outsb
cmp
mov
mov
out
sbb
cmp
int
push
lret
push
cmp
jbe
insl
dec
out
xor
scas
inc
cwtl
int3
mov
stos
cld
cli
je
pop
add
mov
pop
sti
cmp
lahf
shl
sbb
adc
insb
int
lret
push
cld
cs
gs
sbb
mov
hlt
xchg
jnp
pop
notb
aam
mov
lods
test
push
pusha
in
cmp
sbb
faddl
mov
sarl
cmp
jb
cmc
jmp
add
jbe
pop
xor
lcall
mov
push
cwtl
cmp
cld
cmp
and
jnp
out
mov
ljmp
rclb
or
loope
mov
sub
stc
jbe
stos
outsl
call
mov
inc
fadd
pushf
daa
xor
sbb
mov
dec
mov
std
mov
jp
push
cmp
popa
sbb
sbb
xor
fcom
sbb
jp
lret
sub
outsl
push
sbb
insb
loop
cmpsl
stos
dec
push
mov
mov
cli
cmc
jge
stos
mov
ret
xchg
sub
pop
mov
insb
fnstenv
jl
mov
jg
mov
adc
cld
xor
pop
xchg
add
pushf
sarb
in
fcoms
dec
xchg
movl
push
lret
xchg
xor
loopne
push
add
cmpsb
or
and
jp
das
mov
iret
or
jns
inc
cli
xor
or
sbb
xor
mov
add
or
pop
subb
push
xor
inc
mov
es
inc
mov
out
scas
es
dec
lods
or
ds
rcll
mov
aam
push
and
mov
inc
cmp
push
pop
bnd
insb
inc
xchg
pop
push
js
movsl
mov
and
mov
sbb
pop
cwtl
sbb
dec
pop
aam
in
das
dec
mov
jae
rclb
inc
mov
jb
adc
jbe
jl
lahf
dec
mov
std
mov
loop
xchg
std
lds
insl
and
jge
xor
mov
test
faddl
or
loop
or
and
insl
repz
jmp
inc
repz
mov
and
adc
and
ret
out
insb
loop
push
push
mov
in
jb
or
mov
repz
xchg
add
scas
pop
mov
lret
stc
and
or
mov
and
icebp
outsb
fldl
movsl
lds
sbb
arpl
sub
xchg
sti
dec
outsb
or
sar
in
in
cmpsl
inc
movsb
fistpl
push
inc
mov
adc
cmp
and
and
mov
and
leave
data16
ds
push
out
dec
inc
mov
or
sbb
cmpsl
xchg
cmp
movsl
xchg
or
and
or
and
pop
faddp
cld
sbb
das
xlat
xchg
jne
into
clc
mov
jo
ret
movsb
cld
adc
gs
outsb
iret
sahf
cmp
bnd
pusha
mov
popa
xchg
mov
inc
adc
adc
inc
je
imul
fistpll
dec
bound
push
jge
ret
lods
xchg
inc
push
mov
imul
enter
lea
push
push
mov
sahf
in
sub
jmp
clc
test
mov
iret
ljmp
inc
mulb
shlb
mov
lea
adc
dec
inc
fimuls
aas
testb
imul
shlb
orb
test
adc
je
sub
in
jns
xchg
das
stos
insb
repz
js
into
sbb
ds
pop
mov
lods
push
add
push
mov
jg
cmp
aam
jnp
in
pusha
add
push
jb
popa
shl
adc
inc
xchg
xlat
and
fiadds
imul
cmc
xchg
stos
adc
jmp
scas
inc
add
pop
xor
xchg
dec
ret
inc
leave
pop
shl
xor
push
je
lods
mov
int
stos
mov
out
loopne
mov
mov
inc
fbld
mov
imul
xchg
and
inc
cmp
stc
and
or
pop
dec
sub
and
add
cld
push
out
or
cld
or
icebp
in
adc
add
sub
push
adc
mov
mov
push
inc
xchg
jns
push
loope
mov
in
and
mov
xlat
xchg
jne
into
sub
addl
frstor
jne
jnp
outsl
pop
xlat
cmpl
xchg
inc
pop
sub
jle
push
mov
lock
jecxz
repnz
jae
mov
test
ret
adc
mov
movsb
sub
push
cld
int
sub
rcll
or
mov
jae
add
add
sbb
in
push
jecxz
pop
out
dec
mov
iret
mov
mov
outsb
mov
fmull
pop
push
push
sub
scas
inc
or
cmpsb
add
shlb
imul
cs
cmpsb
mov
xchg
mov
and
stos
pusha
nop
sub
lock
ficomps
cmc
sub
xchg
imul
clc
out
daa
dec
lock
or
and
mov
lcall
scas
int
push
repz
mov
sarl
push
data16
daa
xchg
aad
negb
mov
or
cld
pop
cmpsb
xchg
or
cmpsb
in
sbb
mov
shll
mov
orb
sub
nop
ret
push
lds
mov
jmp
sub
mov
adc
rclb
jb
or
jg
test
cld
mov
test
orb
scas
les
mov
mov
cmp
cmc
jg
or
outsb
cmp
inc
inc
mov
ficoml
sbb
idivb
push
insb
adc
js
dec
mov
call
jne
mov
mov
or
mov
shlb
push
dec
shll
into
mov
pop
out
push
push
adc
sti
fisubs
mov
add
ss
or
inc
ljmp
stos
or
lret
push
push
sti
sub
jge
pop
arpl
sbb
push
jmp
mov
jecxz
por
adc
outsb
stos
jae
or
sub
lret
mov
addr16
inc
imul
mov
fisubrs
mov
xchg
sti
dec
outsb
or
sar
in
in
cmpsl
inc
movsb
fistpl
push
inc
mov
push
cmpsb
xchg
repnz
fisubrl
frstor
mov
cmp
mov
push
pop
jnp
arpl
mov
xor
xchg
cltd
rcrb
fsubl
mov
mov
cmp
mov
xchg
pop
sbb
cmp
div
cli
inc
test
aas
lods
pop
mov
and
repnz
insb
fnstenv
pop
xlat
ss
shll
jmp
scas
adc
jle
lds
test
xor
jo
xor
cli
cmc
movsl
mov
mov
outsl
add
inc
dec
in
ss
flds
fs
daa
ret
and
lcall
mov
pop
shlb
insl
test
xchg
cld
mov
pop
ret
xchg
cmp
and
sub
jg
aad
push
clc
iret
jns
cmpsb
or
mov
jge,pt
outsb
pop
popf
lcall
test
test
in
lcall
lahf
push
cld
repz
xor
dec
int
add
mov
int3
stos
xor
cmp
scas
dec
std
adc
out
ficoml
cld
roll
or
or
cld
es
pop
sub
xchg
sbb
adc
xchg
pop
inc
push
mov
pushl
adc
and
pop
inc
mov
mov
push
and
ret
test
xor
insb
test
cwtl
xor
jo
imull
or
pop
inc
push
stc
daa
inc
xchg
mov
out
fcomip
pushf
cld
xor
lret
fsubrs
jge
mov
aam
pop
lret
mov
loop
js
mov
movsb
jg
xor
inc
mov
sub
ljmp
loopne
sbb
lret
xor
sub
add
mov
sti
cmp
mov
out
aaa
push
jbe
jecxz
les
add
xchg
leave
dec
xor
mov
icebp
je
scas
pop
mov
pop
xor
adc
push
pop
jno,pn
bnd
inc
test
pop
add
push
insb
out
repz
cmpsl
outsb
in
fs
cmc
mov
adc
mov
movsb
gs
sub
ror
push
mov
sub
jns
fistpl
xlat
scas
pop
cld
daa
pop
adc
in
lret
and
jns
cmp
or
ljmp
or
sarb
mov
js
mov
jle
sub
test
mov
iret
dec
or
sbb
jmp
add
leave
andl
pop
xor
bound
hlt
mov
sbb
enter
inc
fwait
rclb
fwait
jmp
ja
fistpll
xorl
sub
push
dec
dec
mov
xchg
jbe
pusha
cmp
dec
add
ss
xor
jnp
xchg
xor
mov
mov
out
cmpsl
and
mov
push
jle
xchg
and
xchg
pop
pusha
ret
add
inc
xchg
and
mov
aad
xchg
mov
clc
and
cmp
push
fcomp
scas
or
xchg
outsb
movsl
xchg
or
adc
mov
pop
sub
mov
sbb
fdivrl
pop
or
jg
test
mov
arpl
jne
jl
jne
lahf
mov
mov
xchg
shl
xlat
shl
pop
shrl
or
lret
cmp
adc
pop
dec
xor
xchg
push
std
xchg
inc
dec
stos
lods
mov
mov
in
xchg
fisubrs
jmp
fldl
mov
inc
sti
mov
ret
fdivl
sahf
push
lcall
xchg
add
cwtl
push
inc
sbb
dec
mov
adc
push
pop
sbb
enter
std
add
mul
jne
lock
dec
inc
mov
or
mov
push
nop
lods
pop
cli
jp
out
mov
lret
mov
pop
pop
test
sbb
and
cmpsl
jnp
and
push
and
ljmp
mov
sbb
iret
sahf
cmp
out
adc
inc
pop
mov
mov
inc
es
push
in
or
push
jns
cmp
mov
jns
loope
and
in
sbb
jle
jne
les
xor
pop
repz
jmp
push
mov
xchg
cmp
and
addr16
sbb
add
push
inc
mov
rcl
xor
out
lret
sub
popf
fs
loopne
push
cmpsb
movsl
int3
jmp
test
test
or
jno
enter
ss
jmp
out
fistpll
xlat
scas
pop
jmp
in
call
mov
loop
loopne
sbb
lock
cmp
andl
stos
cmpb
sbb
inc
lcall
push
jbe
fmul
call
int3
scas
or
lea
stos
dec
les
sbb
cmp
xchg
push
out
testl
movsl
inc
sub
and
in
ss
fldenv
subb
xlat
lock
or
insb
out
pop
push
int3
push
subb
xlat
mov
mov
sub
dec
push
sbb
push
jno
push
dec
cmp
shrb
sub
xchg
or
add
mul
jne
lock
xor
leave
mov
mov
push
addr16
sbbl
sub
xchg
test
mov
iret
ret
out
fcoms
roll
fcomip
outsl
aas
stos
dec
and
insl
push
adc
inc
loop
cltd
movsl
mov
sbb
jo
out
fmull
cli
cmc
jmp
cmpsb
pop
mov
xor
push
repnz
insb
fnstenv
icebp
or
scas
call
xlat
scas
or
test
arpl
ljmp
sti
xchg
pop
leave
adc
adc
jmp
scas
inc
sub
sbb
test
mov
loop
js
mov
movsb
jg
xor
inc
lods
mov
jo
movsb
and
outsl
sbb
mov
xor
push
roll
enter
out
push
jbe
ret
xchg
mov
adc
hlt
jmp
and
insb
arpl
fwait
push
mov
shll
cmp
mov
mov
jnp
mov
popf
jo
cld
cmp
test
add
bound
and
mov
lock
push
iret
mov
icebp
leave
dec
add
testb
mov
repnz
shr
mov
sahf
cmp
jmp
addr16
imull
jae
outsl
add
ss
mov
push
dec
in
aas
daa
and
stc
rcrb
pop
in
sbb
je
jmp
rcrb
xor
test
out
xchg
inc
aas
out
mov
inc
fadd
add
sbb
inc
xchg
iret
dec
push
sbb
push
jno
push
dec
cmp
mov
mov
fwait
out
aad
in
xchg
xor
adc
leave
mov
push
lret
aam
xchg
div
jmp
repz
sarb
or
pushf
dec
mov
cmp
lock
fs
hlt
movsb
daa
adc
and
inc
mov
test
and
ret
out
stos
push
cltd
jne
lods
xor
int
push
lret
push
cmp
les
or
lds
mov
mov
shll
addr16
shll
pop
int3
movsb
pop
dec
mov
stos
dec
lret
sahf
xor
sbb
add
push
ret
decb
loopne
cmp
xchg
stos
pop
pop
mov
imul
mov
iret
push
cmp
mov
sbb
cli
sub
xchg
sbb
dec
pop
aam
xlat
jl
ljmp
fldenv
inc
mov
push
cmp
out
ss
cli
cmc
mov
ror
lret
aam
jns
xchg
mov
decb
mov
fwait
outsb
mov
mov
jnp
out
xlat
scas
pop
call
or
test
fidivs
mov
xchg
cmp
mov
xor
pushf
xchg
fwait
ljmp
inc
dec
bound
lahf
leave
mov
stc
sbb
mov
loopne
cmp
negl
xchg
inc
outsb
out
sbb
cmc
adc
jmp
icebp
push
cmc
sbb
pop
and
test
imul
fistpl
pop
stos
dec
dec
arpl
push
je
ret
push
fimuls
insb
fnstenv
and
js
xorl
sub
push
rcr
push
insb
adc
or
dec
jns
shrb
int
push
int3
mov
sub
cmc
jne
lcall
xchg
repnz
shrb
cmp
into
les
mov
jae
cmpsl
mov
cs
sbb
push
and
sbb
sbb
movsl
imul
cmp
mov
aas
not
hlt
jmp
and
insb
arpl
fwait
push
or
push
xchg
and
pop
enter
sarl
push
add
scas
pusha
mov
pop
jo
mov
adc
sub
mov
push
xchg
sbb
xchg
xchg
xlat
pop
movsb
or
sarl
loop
ficoms
mov
stos
rcr
mov
sub
loop
andl
out
aaa
cmc
adc
in
ss
fxch
fnop
repnz
push
dec
sub
inc
push
jne
ret
xor
fbld
mov
mov
les
cmp
shll
clc
sub
lods
pop
dec
addr16
mov
popa
dec
jge,pt
cmp
pop
gs
push
jecxz
icebp
mov
sub
nop
pop
imul
in
cmp
sti
pop
inc
push
mov
xor
mov
jne
lcall
mov
pop
cld
xor
jbe
lret
pop
adc
mov
icebp
xor
pop
mov
dec
stos
inc
jne
cmp
sti
mov
cld
sbb
sti
mov
pop
jp
aaa
or
int
sbb
fwait
xor
aam
dec
cmp
sbb
mov
xchg
popf
int
lahf
push
mov
push
sbb
sbb
mov
add
mov
cmpsl
into
es
cli
mov
repnz
int
jg
inc
faddl
fcom
ja
jnp
out
pop
cwtl
sbb
dec
pop
aam
in
idiv
out
pusha
mov
aaa
sbb
icebp
xor
cmp
mov
scas
cli
int3
fildl
cmc
lret
rclw
sahf
cli
fnstsw
loop
rcl
jmp
mov
clc
mov
xor
lea
aas
sbb
ja
pop
mov
jecxz
mov
adc
aas
rorb
loope
shlb
les
add
lock
and
push
je
sub
jb
ja
push
cmpsl
lds
fists
inc
popa
test
mov
iret
mov
ret
xchg
pop
es
add
scas
pop
mov
mov
out
mov
fs
xchg
aad
push
or
ds
sbb
xchg
xor
outsl
aas
xor
in
shll
xchg
rcrb
jg
mov
outsb
push
and
xchg
or
test
adc
push
leave
mov
pop
std
loope
sub
out
jbe
xchg
sbb
pop
jnp
pop
mov
push
jne
test
sbb
fs
jb,pt
ds
andl
fbstp
call
lds
mov
outsl
adc
sbb
xchg
clc
js
pop
jp
sbbb
mov
or
mov
es
cmp
in
ds
mov
imull
dec
dec
test
pushf
call
pop
lcall
jbe
cmc
jmp
push
scas
sti
mov
cld
sbb
movsl
imul
bndstx
insb
dec
aaa
pop
lea
lods
push
sarl
in
xor
jle
sbb
nop
insl
add
xor
mov
mov
cmc
jb
xchg
int
jg
inc
faddl
cmpsl
fidivrl
mov
lret
ja
insl
sbb
mov
xor
mov
or
call
pop
push
dec
in
aas
daa
and
stc
mov
inc
mov
ret
xor
and
repz
fstpt
std
gs
out
cmp
xchg
loopne
mov
inc
pop
lahf
movsb
pushf
inc
mov
mov
and
dec
pop
push
fcomps
shlb
push
xchg
cld
es
ja
lahf
push
stos
mov
pop
jns
push
sbb
popa
and
call
sub
jnp
xor
xlat
mov
cmpsl
insb
dec
cmp
arpl
fistps
inc
subb
push
ja
ret
repnz
jae
and
addr16
mov
iret
ret
sbb
ds
divl
jo
addb
shll
mov
mov
shll
in
adc
cmc
mov
loopne
dec
sub
xor
test
mov
iret
clc
lcall
test
mov
icebp
sub
adc
or
xchg
insb
sub
push
cli
jo
outsb
loopne
cmp
sub
mov
mov
lret
cmp
cmp
mov
in
cmp
dec
and
icebp
inc
outsl
out
in
dec
pop
mov
stos
mov
lock
sbb
mov
addl
xchg
xchg
jmp
das
adc
loope
cmp
aad
shlb
in
out
enter
sbb
dec
and
outsl
outsb
pop
mov
push
js
cmc
jmp
ja
cmp
add
in
xchg
or
les
mov
mov
imul
mov
in
lret
mov
or
cli
cmc
jmp
test
fwait
icebp
adc
dec
cmp
mov
mov
or
jmp
cmpsb
add
lods
sahf
sbb
lea
cltd
out
test
dec
push
dec
shll
into
inc
and
push
test
sub
fcmovbe
adc
in
jecxz
push
xchg
sti
jg
jbe
lods
or
push
push
and
cli
cmc
jmp
cmp
popf
ret
sarl
adc
inc
insl
push
test
test
mov
lahf
cmp
shrl
addr16
jg
out
test
adc
outsb
cwtl
repnz
fstl
cltd
jl
bswap
mov
xor
add
sub
arpl
gs
xlat
out
imul
pop
cwtl
out
jb
sub
clc
outsl
inc
icebp
daa
test
out
sub
mov
mov
sbb
dec
shll
std
int3
xor
dec
jle
icebp
pop
movsb
test
fnstenv
shll
mov
orb
sub
nop
fnstsw
push
cmp
adc
inc
xchg
mov
fld
pop
mov
repnz
adc
jle
push
js
test
ss
jns
leave
int3
push
pop
jno,pn
in
pop
cmc
sti
xlat
scas
sqrtps
ret
add
bound
and
mov
addr16
inc
arpl
mov
das
jp
fs
jo
mov
xor
xchg
mov
and
ds
xlat
scas
pop
fiaddl
int3
stc
in
lds
xchg
xor
cwtl
pop
jbe
xorl
pop
scas
cs
test
adc
xchg
mov
mov
outsb
rol
mov
stc
es
out
pushf
xchg
inc
fstl
mov
xchg
jl
hlt
adcb
out
enter
test
adc
dec
outsl
arpl
leave
mov
cmp
cmp
hlt
in
inc
pop
mov
and
cltd
shlb
lock
adc
hlt
pop
push
repz
or
mov
sti
push
or
xchg
outsb
cmp
mov
mov
test
push
adc
aaa
adc
inc
adc
jg
cld
push
outsl
pushl
pop
pop
mov
jecxz
add
ss
sbb
mov
dec
aaa
repz
dec
scas
dec
gs
jns
inc
xchg
jns
push
loope
mov
fnstenv
mov
xchg
mov
fdivrl
leave
sti
sub
icebp
inc
push
cmpsl
mov
adc
mov
mov
mov
out
test
mov
mov
jecxz
sub
in
mov
sahf
cmp
mov
cmp
pop
or
jg
cs
add
mov
sbb
testl
stc
sbbl
ret
insb
and
or
push
addr16
stc
sub
inc
in
pop
pop
andl
mov
or
sbb
sbb
insb
sub
mov
fistpll
lret
imull
cmpsl
add
nop
dec
mov
iret
sahf
das
cwtl
pop
jbe
add
cli
cmc
jmp
movsl
pop
mov
pop
jp
mov
xor
cli
xor
fistpll
xchg
dec
jnp
or
push
pop
std
cltd
popa
cs
push
addl
pop
inc
lahf
shlb
push
xchg
cld
es
ja
lahf
push
stos
mov
cwtl
fists
in
xchg
cmpsb
dec
aam
lods
lea
mov
push
mov
cmp
pusha
mov
cmc
cmp
insb
or
cwtl
ss
cmpsl
insb
dec
cmp
arpl
cmc
jo
scas
pop
cmp
stc
sub
or
jl
stos
movsb
insl
xchg
clc
out
fistpll
inc
int
mov
loop
pop
sub
out
mov
ss
sbb
fcoml
ss
test
add
mov
xchg
in
pop
push
mov
mov
into
sahf
cmp
lcall
pushf
xor
in
js
xchg
aas
fs
call
cli
or
cmp
jge
je
pop
popa
fdivrl
dec
or
stos
mov
jae
icebp
add
into
lahf
mov
sbb
xlat
scas
pop
repnz
lret
pop
enter
mov
pop
sub
mov
sbb
push
mov
fisttpl
mov
adc
hlt
jnp
mov
xor
notb
rolb
push
roll
jle
repz
pusha
scas
popf
pmulhuw
loop
into
lret
fiadds
bound
sub
int3
fwait
ss
xchg
jmp
adc
cmp
in
dec
rorb
scas
ljmp
cmp
andl
pop
xor
bound
hlt
mov
loopne
xor
sti
cmc
jmp
mov
aad
jmp
add
iret
jns
jns
push
sub
push
dec
dec
mov
xchg
jbe
add
insl
in
nop
mov
push
dec
sahf
add
sub
sub
jo
repz
clc
mov
mov
mov
aaa
lock
fbstp
or
sbb
xor
aad
mov
push
insb
adc
cltd
scas
in
cmp
std
les
aad
fwait
arpl
cmp
push
loope
xchg
dec
mov
das
hlt
mov
clc
jns
int3
lcall
or
push
inc
xor
xchg
cmp
adc
jle
lds
test
dec
jg
mov
bound
mov
add
stc
jne
sub
lock
mov
pop
xor
aas
fimull
mov
jmp
addr16
jbe
dec
enter
sbb
xchg
mov
pop
mov
mov
mov
rorb
pushf
inc
mov
mov
sahf
cmp
cltd
test
inc
pop
jnp
push
xlat
pop
shr
jp,pt
inc
xor
fcomps
shlb
push
xchg
cld
es
pop
cmpsl
lds
fists
in
jns
test
pop
push
dec
outsb
mov
sbb
push
je
addr16
ret
and
cmp
xlat
mov
cmpsl
pop
xchg
adc
push
add
cmpsb
or
and
jp
das
mov
iret
or
or
fadd
jno
rolb
jne
movsl
dec
arpl
push
cmpsb
andb
push
mov
inc
adc
mov
pop
jno
inc
repz
ja
push
push
dec
movd
push
add
pop
and
in
inc
rorl
cmpsl
jno
out
xor
sarb
sarl
adcl
mov
cld
sbb
movsl
cmpsb
jg
out
mov
jnp
xchg
cmpsb
jo
dec
js
cli
inc
repnz
sub
push
rcrl
ja
mov
sbb
cmp
je
cwtl
add
push
push
xchg
mov
fstpl
or
rol
aas
repz
lcall
push
fimull
mov
jo
addr16
xchg
add
mov
mov
cmp
mov
push
xor
pushf
xchg
test
pop
std
cltd
popa
cs
push
addl
pop
sbb
insb
into
xchg
xchg
cli
add
xor
ret
jecxz
jl
je
mov
stos
and
sub
push
dec
dec
mov
xchg
jbe
sbb
and
popa
cltd
lock
xor
loopne
push
add
cmpsb
or
and
jp
mov
add
dec
dec
push
jle
xchg
and
mov
sti
sbb
xlat
scas
pop
xor
or
cld
pop
cmpsb
xchg
or
mov
lret
jnp
push
adc
jnp
out
xlat
scas
pop
push
jnp
pop
dec
mov
lock
mov
xor
imul
filds
mov
cmp
dec
lods
or
ds
rcll
mov
repz
fistpll
xlat
jae
fwait
sub
mov
add
adc
sbb
mov
cli
cmc
jo
mov
rolb
xor
push
cli
or
inc
push
jmp
in
pop
pop
andl
ret
fwait
into
pop
jne
inc
outsb
in
stos
pop
ret
xorb
sbb
xor
or
or
aaa
add
lock
and
fxam
jl
mov
push
adc
or
mov
imul
and
test
cmp
jg
cltd
mov
ja
inc
inc
mov
cmp
pop
ds
in
rorl
xor
pop
push
repz
sbb
and
cmpsl
icebp
sbb
test
ret
iret
or
inc
cmp
ja
pop
jne
daa
xchg
aad
test
pop
inc
sub
sbb
test
ds
pop
push
lcall
cli
mov
outsl
and
fdivrs
loope
jl
add
nop
sbb
dec
xchg
aad
add
fucomi
arpl
movsb
cld
adc
xchg
pop
pop
xor
inc
out
test
xor
out
sahf
loopne
les
dec
in
mov
inc
push
cmp
mov
xchg
inc
jecxz
cmp
pop
incb
adc
test
aaa
sbb
clc
cmc
xchg
es
push
stos
pop
clc
sub
vpcomuq
int
push
jmp
dec
or
inc
ljmp
stos
mov
ret
xchg
sub
pop
mov
imul
pusha
dec
jle
push
dec
or
mov
push
ds
sbb
inc
and
or
mov
mov
adc
sub
mov
dec
jecxz
jge
mov
das
mov
cmp
data16
ds
push
out
dec
inc
mov
or
sbb
adc
je
sbb
add
out
fisubrs
aad
push
mov
out
mov
repnz
pusha
sbb
popf
mov
and
aam
or
leave
nop
inc
push
add
bound
xchg
setp
outsl
push
sti
sub
out
xor
frstor
imul
out
xchg
enter
imull
cmp
pop
in
movsl
mov
scas
jge
cmc
inc
cwtl
jb
add
sub
push
gs
andb
pop
pusha
iret
sahf
cmp
aam
add
call
jo
adc
push
sbb
fcmovnbe
stos
or
and
sarl
out
mov
inc
dec
imul
ss
lods
or
push
push
and
enter
je
shrl
ret
mov
xchg
mov
ret
xchg
add
or
push
xchg
and
cltd
shlb
jmp
stos
dec
les
sti
out
fistpll
or
push
push
mov
mov
repnz
dec
sahf
push
mov
out
mov
icebp
or
and
and
inc
dec
outsl
nop
sub
and
repnz
xchg
add
test
pop
inc
sub
sbb
test
ds
pop
push
lcall
cli
mov
inc
icebp
cs
sbb
pop
sbb
sbb
in
push
push
or
fucomi
arpl
movsb
cld
adc
xchg
es
cmpsb
sub
orb
push
mov
loopne
les
dec
in
mov
inc
adc
gs
mov
sahf
cmp
out
divb
push
ljmp
outsb
icebp
add
mov
mov
test
cli
mov
sahf
cmp
icebp
mov
iret
sti
lods
out
pop
sti
and
mov
mov
cs
mov
outsl
dec
int
out
jge
xchg
test
lret
test
adc
dec
test
icebp
repnz
dec
pop
das
xchg
push
xor
add
inc
aam
bound
sbbb
push
and
test
testb
cli
cmc
jmp
aam
xchg
stos
or
test
adc
imul
icebp
outsb
test
mov
inc
push
mov
lds
nop
lret
cmp
mov
xchg
testb
inc
enter
shl
cmp
or
divb
stc
xchg
stos
push
cltd
dec
stc
adc
cmp
test
mov
jmp
sbb
dec
fwait
xchg
sarl
sbb
ret
lock
jmp
int
mov
loop
pop
adc
xchg
je
dec
or
dec
cmpsl
adc
rcl
add
scas
pop
mov
leave
jbe
pop
jnp
pop
notb
pop
cld
int3
jno
repz
jne
cmc
jmp
mov
icebp
je
push
add
insl
or
mov
and
jmp
xchg
push
sbb
xor
lcall
cmp
divl
or
pop
mov
or
jno
enter
ss
jmp
sti
bound
jp
adc
repz
jb
mov
adc
insb
fldenv
mov
xchg
in
sub
lods
insb
push
sub
inc
rcrb
stos
xchg
or
imul
jbe
imul
mov
lret
or
cmp
push
pop
push
and
ljmp
inc
aas
movsb
pusha
sbb
mov
or
repnz
dec
mov
scas
mov
ljmp
loope
dec
xor
aad
or
adc
sbb
cld
mov
mov
xor
loopne
cmp
pop
mov
stos
scas
fiaddl
or
dec
cmp
clc
cld
mov
add
and
sbbb
cld
es
ja
lahf
push
stos
mov
pop
jns
push
sbb
popa
and
fs
push
jo
push
jo
faddl
push
fwait
cmp
inc
mov
push
dec
jg
stos
ret
push
fnstcw
movsb
sahf
cmc
xchg
leave
ss
jg
and
or
pop
iret
sahf
cmp
pop
and
xor
push
jp
ret
jae
pop
pop
mov
jecxz
add
cmpsb
pop
pop
outsb
adc
mov
iret
pop
in
movaps
outsl
insl
xlat
jecxz
popf
push
sbb
mov
or
lcall
ss
cli
cmc
test
push
bound
pushf
push
mov
rorb
stos
mov
adc
shl
jmp
and
push
popa
cmp
cmpsb
cltd
jmp
xchg
sahf
aam
cmp
repnz
mov
sahf
cmp
adc
ret
mov
mov
fcmove
fcomps
cmc
test
mov
iret
adc
lret
add
jno
add
scas
pop
mov
xchg
adc
inc
xchg
adc
xchg
xchg
adc
in
mov
mov
scas
add
push
jne
aas
cmp
inc
cwtl
repnz
cmc
and
ljmp
or
sbb
mov
out
test
jmp
loop
stos
jo
and
inc
ljmp
stos
mov
ret
xchg
sub
pop
mov
imul
mov
ds
sub
and
shr
push
inc
pop
stos
fdivrl
stc
xor
or
dec
loop
xchg
aad
push
or
dec
jns
in
xlat
xchg
and
adc
orl
and
jge
push
mov
call
jge
lret
push
cmp
dec
inc
and
lret
lret
mov
mov
sbb
cli
cmc
jmp
mov
out
dec
inc
mov
or
jb
scas
aaa
adc
dec
sbb
add
nop
ret
push
fidivl
mov
adc
mov
pop
sub
mov
sbb
cli
dec
sub
shrd
xchg
sub
xor
and
lcall
xchg
notb
mov
int
roll
jle
repz
pusha
scas
popf
pmulhuw
loop
into
lret
fiadds
bound
cmp
fiaddl
mov
cmp
or
cli
sub
fcmovbe
adc
push
jne
loop
pushl
xchg
loopne
xor
subl
or
and
sub
xor
test
aam
imul
fisttps
mov
fnstcw
out
push
mov
push
rolb
jl
popf
xchg
loopne
jg
je
lock
or
mov
or
xor
iret
ja
jnp
out
mov
jmp
scas
jo
cli
sbb
cmc
pop
in
fs
lahf
in
sbb
adc
jne
iret
push
push
cmp
cmp
fwait
aam
cmp
lods
orl
mov
dec
stos
inc
jne
cmp
sti
mov
cld
sbb
movsl
imul
xor
dec
pop
xchg
push
mov
lret
mov
add
test
dec
sbb
testl
push
xor
sub
add
xor
fwait
push
pop
cmpsb
xchg
mov
push
int3
lods
sbb
mov
push
cwtl
push
pop
incb
adc
test
aaa
sbb
clc
cmc
xchg
es
sbb
push
xor
push
mov
or
mov
jmp
loop
xor
or
inc
ljmp
stos
mov
ret
xchg
sub
pop
mov
push
dec
lahf
mov
and
pusha
test
xorb
ror
int
xchg
call
in
xor
or
mov
inc
test
and
push
inc
stc
mov
mov
mov
fdivrl
sbb
sub
lcall
stos
cltd
sub
cmpsb
xchg
or
cmpsb
in
sbb
mov
cmp
mov
dec
repz
adc
pop
inc
mov
push
mov
push
cmp
test
pop
inc
das
mov
jae
mov
clc
and
ja
das
fmulp
sub
inc
pop
lahf
jg
mov
jo
ret
and
sub
pop
adc
insb
jbe
push
aad
dec
rcll
sub
cli
mov
xchg
mov
lahf
xlat
jae
mov
test
dec
outsl
mov
leave
pop
popf
outsl
aas
mov
ljmp
cs
mov
xor
xchg
add
aaa
sbb
sub
out
into
mov
mov
mov
push
xor
cmp
pop
nop
xor
in
jne
adc
inc
dec
bound
hlt
mov
loopne
xor
xor
push
xchg
fwait
jmp
ja
fistpll
stos
fidivl
jg
mov
sbb
cmp
cmp
xchg
loopne
mov
out
sahf
mov
push
pop
cwtl
out
jb
sub
clc
outsl
inc
icebp
daa
test
out
sub
mov
jecxz
jnp
xor
mov
xor
popf
push
sbb
mov
or
lcall
xor
aaa
inc
sub
sbb
clc
jns
int3
lcall
loopne
inc
outsl
pop
xlat
add
jcxz
mov
test
or
jno
enter
test
jmp
push
rorl
jne
sub
lock
lcall
ret
sbb
adc
mov
or
or
aaa
add
dec
lret
addr16
into
mov
sahf
cmp
mov
xor
pushf
xchg
daa
push
stc
and
or
pop
imul
cmp
incb
ljmp
and
popa
mov
dec
xor
inc
push
sbb
lock
xchg
mov
sub
frstor
fsts
lahf
fwait
pushf
arpl
in
cmp
sti
pop
inc
push
mov
sub
xchg
sti
pop
nop
mov
cmp
into
fistl
clc
sbb
test
lret
cwtl
pop
lods
orl
mov
dec
stos
inc
jne
adc
inc
andb
test
ret
pop
and
popa
ret
push
cmc
andl
ficoms
loop
nop
mov
fbld
mov
inc
sbbb
pop
out
js
dec
movsb
add
scas
pop
mov
push
scas
xor
outsl
add
ss
jae
pop
fsubrp
dec
lahf
mov
ljmp
mov
ret
jnp
push
daa
mull
rorl
mov
xor
xchg
in
mov
clc
jnp
in
ss
fstps
sub
jge
cmc
push
mov
xchg
pop
xchg
jmp
mov
push
movsl
rcr
mov
sub
loop
insl
pusha
call
pop
add
push
push
mov
xchg
cmp
rol
test
inc
cld
pop
pop
popa
add
jmp
sub
push
jmp
jb
inc
jns
push
pop
jmp
pop
sub
jmp
insb
xor
xchg
pop
add
and
jo
or
jmp
setl
inc
pop
xor
shlb
fimull
mov
dec
xchg
push
push
jmp
inc
nop
dec
test
mov
push
pop
mov
rcl
cld
pop
pop
pop
push
push
mov
jmp
mull
xchg
ror
into
out
cld
test
or
xor
adc
add
call
cmp
jle
sub
mov
add
jmp
sbb
xlat
les
cs
pop
gs
pop
push
jmp
hlt
sbb
fidivrs
js
mov
jmp
mov
and
inc
push
nop
mov
add
inc
lcall
ret
push
popf
inc
sbb
or
add
repnz
sar
lahf
in
mov
push
popf
inc
sbb
or
lock
stos
or
hlt
jmp
mov
push
and
fstps
sahf
add
add
jmp
stos
fwait
cmp
jbe
in
add
push
dec
dec
outsl
pop
jmp
jl
pop
mov
es
mov
les
add
cmp
je
push
push
cmp
xor
xchg
cmp
lea
je
dec
mov
push
pop
cld
pop
pop
mov
push
push
push
pop
cmp
cmp
lea
test
dec
xor
inc
dec
cld
pop
pop
mov
push
push
mov
dec
cld
pop
pop
add
push
push
pop
jmp
cwtl
icebp
push
inc
sub
scas
xor
jmp
dec
fsub
mov
inc
je
adc
loopne
pop
xchg
jmp
clc
shll
aaa
movsb
or
push
das
cmp
sbb
inc
out
aam
jb
inc
jns
pop
insb
xor
xchg
jmp
pop
add
and
pushf
jmp
movsl
jp
mov
inc
pop
jmp
xor
shlb
int3
adc
div
fs
xchg
ror
into
out
jmp
cld
test
or
add
addl
jle
sub
push
push
jmp
sbb
xlat
les
cmc
xchg
xchg
cs
xor
pop
jmp
pop
gs
dec
loope
hlt
sbb
pusha
sbb
mov
js
mov
mov
lea
int3
jmp
inc
sub
pop
jmp
push
nop
mov
ret
js
mov
add
lcall
mov
add
pop
pop
xor
push
push
push
pop
std
cld
pop
pop
xor
push
push
shl
cmp
mov
rol
cmp
mov
cld
pop
pop
rol
push
jmp
ds
in
mov
mov
test
insl
rcl
pop
jmp
insl
mov
sbb
sub
jmp
cli
stos
or
push
and
fstps
insl
rcl
jmp
fwait
cmp
hlt
jmp
adc
add
jmp
in
add
push
dec
dec
outsl
jl
pop
jmp
pop
mov
es
mov
addb
inc
jmp
mov
or
icebp
push
inc
sub
add
add
add
scas
dec
fsub
mov
popa
xchg
popf
adc
loopne
pop
aas
or
push
xchg
add
push
das
cmp
sbb
inc
out
jmp
jb
inc
jns
pop
insb
mov
jmp
xor
xchg
pop
sub
jmp
add
and
pushf
movsl
jp
mov
jne
push
jmp
shlb
int3
adc
div
fs
mov
jmp
adcb
test
or
add
add
add
sldt
add
jle
sub
mov
sbb
pop
jmp
xlat
les
add
aad
or
iret
pop
gs
dec
loope
hlt
sbb
sub
fstpt
cmp
mov
lea
nop
mov
lret
test
cmpsw
push
std
repnz
sar
lahf
in
mov
mov
test
jmp
xor
imul
and
movb
lock
sahf
jg
jmp
xchg
stos
fwait
cmp
jbe
in
add
push
dec
dec
outsl
jl
pop
mov
es
mov
loop
cmpb
jnp
icebp
push
inc
sub
adc
add
xor
popa
xchg
popf
adc
jecxz,pt
cltd
pop
aas
or
push
clc
shll
aaa
movsb
or
push
das
cmp
sbb
inc
out
aam
jb
inc
jns
pop
insb
xor
pop
mov
pop
jmp
add
and
pushf
movsl
jp
mov
out
jmp
and
xor
shlb
int3
adc
div
fs
xchg
ror
into
out
jmp
cld
test
or
add
addl
pop
add
jmp
mov
sbb
xlat
les
jmp
pop
gs
dec
loope
sub
jbe
jmp
push
hlt
sbb
fidivrs
add
add
mov
pop
push
push
push
not
inc
push
pop
rcr
mov
push
pop
nop
inc
xchg
rcr
test
xchg
shr
inc
cld
pop
pop
ret
