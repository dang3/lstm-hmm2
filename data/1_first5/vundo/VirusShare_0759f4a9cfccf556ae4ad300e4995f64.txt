dec
inc
mov
and
and
mov
jmp
lea
je
jmp
and
mov
push
mov
mov
jmp
movb
movb
movb
mov
movb
jmp
add
add
add
lds
inc
mov
and
sub
mov
rol
mov
push
push
and
dec
shr
mov
jmp
pop
call
add
call
pop
add
add
jmp
push
jmp
jmp
call
int3
inc
xorl
push
jmp
nop
push
int3
call
addl
call
ret
add
add
add
push
lea
inc
or
or
rol
mov
sub
test
jne
xor
xor
mov
mov
shr
mov
jmp
test
jne
push
jmp
jmp
call
dec
nop
xorl
call
jmp
dec
mov
mov
cmp
je
inc
or
rol
shl
mov
mov
test
jne
sub
mov
mov
jmp
jne
xor
ret
test
jne
push
jmp
push
pop
push
call
push
push
push
xorl
pushl
call
pushl
jmp
movl
movl
call
lea
addl
call
mov
or
mov
sub
mov
add
mov
mov
mov
jmp
mov
movb
call
cmp
push
jae
call
push
jmp
push
push
int3
call
dec
push
dec
nop
leave
subl
push
jmp
int3
nop
dec
push
jmp
push
leave
nop
ret
push
addl
jmp
push
movb
jmp
mov
call
call
cmpl
jne
cmpb
jne
jmp
xor
mov
push
push
mov
mov
mov
add
add
jmp
push
jmp
push
inc
xorl
push
jmp
call
ret
call
push
call
nop
leave
push
addl
push
jmp
add
push
add
or
shl
xor
xor
mov
sub
jmp
movzbl
add
mov
lea
and
shr
xor
mov
shr
and
jmp
call
lea
push
call
jmp
mov
mov
movb
call
test
je
lea
cmp
je
jmp
je
jmp
add
add
add
add
int
dec
xor
in
xor
shl
add
mov
sub
mov
push
push
jmp
mov
mov
mov
lea
jmp
lea
and
inc
inc
add
inc
mov
add
jmp
mov
rol
add
mov
dec
mov
add
add
xor
cmp
mov
jmp
push
jmp
jmp
push
push
pop
leave
ret
subl
call
mov
add
mov
movzwl
movzwl
add
jmp
movsl
clc
jns
call
or
or
add
xor
mov
lea
xor
xor
add
sub
mov
add
test
je
jns
movzwl
jmp
mov
add
mov
lea
sub
test
mov
mov
mov
jmp
add
add
add
mov
test
je
push
push
mov
shl
add
mov
sub
cmpl
jmp
call
ret
add
add
add
pop
and
mov
mov
add
xor
sub
add
rol
mov
sub
test
jne
movzbl
jmp
mov
jmp
sar
jmp
add
mov
lea
jmp
add
add
add
push
mov
mov
test
je
mov
add
cmpl
je
jmp
push
push
call
jmp
nop
nop
jmp
ret
shr
xor
rol
mov
mov
add
xor
and
and
xor
mov
shr
lea
lea
cltd
and
add
jmp
movzwl
jmp
movzbl
add
jmp
add
add
push
sub
sub
mov
sub
push
push
rol
xor
add
add
shr
mov
jmp
mov
push
mov
movl
mov
jmp
call
test
jne
push
jmp
nop
call
push
call
ret
call
int3
call
addl
call
ret
add
add
add
add
add
xchg
jmp
cmp
je
jmp
xor
ret
or
mov
pop
ret
add
add
add
roll
ret
mov
add
add
push
and
xor
mov
inc
sub
mov
sub
mov
push
mov
movl
mov
push
jmp
add
mov
lea
ror
inc
mov
mov
shr
and
add
test
jmp
test
jne
add
ret
add
and
add
add
and
mov
or
mov
sub
mov
mov
test
jne
jmp
add
sub
mov
nop
push
nop
jmp
pushl
call
add
jmp
sub
test
jne
xor
or
shr
mov
movzbl
jmp
jle
xor
add
or
mov
jmp
lea
nop
jmp
add
add
add
add
mov
mov
movb
jmp
push
jmp
mov
lea
push
push
call
add
jmp
add
ret
and
add
mov
push
jmp
inc
xorl
jmp
and
rol
and
and
mov
sub
test
mov
jne
jmp
add
add
add
in
xor
mov
sub
mov
mov
jmp
push
push
xor
dec
mov
sub
jmp
mov
and
jmp
movl
jle
add
jmp
jmp
add
add
add
add
jmp
int3
push
ret
subl
push
jmp
inc
push
nop
int3
subl
push
jmp
push
nop
jmp
push
leave
push
push
subl
call
test
jmp
mov
or
mov
add
test
jne
add
jmp
add
jmp
insb
into
and
jmp
add
add
push
jmp
call
call
call
inc
push
subl
jmp
add
call
mov
call
call
call
jmp
push
push
push
lea
xor
shl
xor
rol
mov
add
push
call
jmp
je
add
ret
jmp
push
jmp
call
call
push
int3
call
leave
int3
subl
push
jmp
xorl
call
ret
add
jmp
call
jmp
add
cmp
incl
add
test
add
add
jmp
call
call
jmp
call
call
int3
subl
call
add
ret
add
add
add
adc
add
lea
or
dec
sub
mov
sub
cmpw
jne
xor
mov
mov
jmp
jle
jmp
and
and
mov
mov
jmp
test
jle
add
mov
dec
mov
xor
mov
test
jle
sub
and
inc
mov
sub
sub
jmp
call
mov
xor
shl
mov
add
mov
inc
mov
shr
mov
lea
push
push
jmp
int3
dec
dec
jmp
xorl
jmp
xor
and
cmp
sete
mov
ret
add
add
add
jo
add
call
popa
jmp
mov
ret
add
add
add
jne
add
ret
mov
xor
jmp
mov
xor
shr
add
shr
mov
mov
shr
xor
mov
add
mov
jmp
mov
mov
and
cmp
jne
and
add
add
add
jmp
cmpl
jne
pop
pop
pop
mov
pop
ret
add
add
add
jne
sub
sub
jne
test
jmp
xor
and
mov
shr
and
add
test
jne
jmp
mov
mov
xlat
push
jmp
call
call
call
push
subl
mov
call
push
jmp
dec
leave
ret
xorl
mov
jmp
mov
mov
pop
ret
add
add
add
pop
and
add
or
mov
mov
mov
mov
or
shl
mov
shr
and
add
jmp
test
je
movsbl
jmp
inc
mov
and
rol
mov
sub
add
mov
or
mov
rep
movzwl
and
and
xor
or
mov
add
add
jmp
jle
pop
add
sub
jne
add
cmpl
jne
pop
pop
pop
jmp
pop
out
dec
mov
mov
jle
rol
mov
xor
dec
mov
jmp
cmp
test
sub
into
mov
jmp
mov
pop
ret
pop
mov
pop
ret
mov
ret
add
add
add
jge
add
sub
jmp
call
push
jmp
dec
call
leave
push
addl
mov
call
push
jmp
call
push
addl
mov
call
jmp
test
mov
je
inc
mov
sub
test
jne
movzbl
add
jmp
and
icebp
mov
lea
and
mov
shr
jmp
xor
mov
test
jne
cmp
jmp
mov
jl
shr
mov
mov
mov
push
mov
push
jmp
jne
test
mov
jle
add
and
inc
mov
jmp
loope
sbb
xor
adc
ljmp
cmovb
push
push
call
int3
push
inc
subl
push
jmp
xorl
push
jmp
leave
call
ret
pop
call
jmp
push
dec
leave
subl
call
test
je
jmp
xchg
add
lock
xor
inc
and
add
mov
jmp
add
ret
pop
pop
mov
pop
mov
dec
mov
pop
ret
add
add
add
test
je
xor
jmp
pusha
mov
test
add
add
sbb
pop
or
addl
lret
or
mov
call
add
xor
shr
xor
shl
mov
call
push
jmp
call
jmp
call
xorl
jmp
je
jp
inc
and
add
add
jmp
std
inc
xor
mov
lcall
rcrb
mov
pop
ret
jmp
push
jmp
dec
call
dec
call
push
dec
pop
call
int3
addl
push
call
dec
or
xor
mov
jmp
ror
mov
pop
and
mov
rol
add
dec
mov
xor
add
sub
jne
jmp
sub
call
outsl
add
mov
sub
test
jne
movzbl
jmp
test
mov
roll
add
jmp
clc
movzwl
shl
mov
mov
mov
pop
add
pop
add
mov
jmp
stc
jp
pop
pop
pop
sub
and
xor
mov
pop
ret
add
add
add
in
xor
add
sub
shr
mov
shr
mov
call
jmp
scas
cmp
lea
add
mov
add
or
mov
shr
and
add
jmp
push
sub
add
add
or
insb
and
add
push
add
lea
jmp
out
popf
pop
lea
jne
test
mov
jmp
cmpsb
cmp
call
jmp
push
cld
add
inc
mov
inc
add
mov
mov
mov
mov
cmp
jmp
popa
inc
popa
je
xor
and
xor
xor
and
mov
sub
mov
jmp
dec
sbb
add
lock
int3
jne
mov
add
pop
mov
mov
pop
jmp
icebp
jmp
movb
add
jmp
movzbl
dec
add
mov
and
add
add
jmp
adc
xor
pop
mov
or
sub
add
mov
pop
ret
add
add
add
call
mov
je
test
je
and
mov
sub
jmp
stc
mov
jmp
loope
jns
out
add
jne
or
and
rol
add
add
mov
mov
jmp
pop
dec
sbb
inc
and
movl
jmp
movl
mov
movl
jmp
lea
jmp
xchg
incl
jne
cmp
jne
call
jmp
sti
pop
scas
test
jmp
push
popf
rorb
test
add
add
lret
fiaddl
pop
sub
mov
jmp
jecxz
out
sub
jmp
jle
push
add
sub
mov
mov
jmp
aad
sbb
decl
rolb
add
sub
jmp
sub
jmp
imul
rcl
leave
mov
movzbl
shl
add
add
jmp
jno
xchg
lea
jmp
inc
mov
repz
ljmp
mov
mov
call
cmp
jb
add
cmp
jb
jmp
test
addb
add
add
add
or
add
add
jmp
or
mov
je
lea
jmp
jecxz
bound
repnz
or
mov
sub
jmp
sbb
mov
jmp
mov
add
sub
jne
mov
mov
jmp
jl
inc
add
add
and
shl
mov
and
add
mov
sub
ror
mov
movl
jmp
mov
jmp
add
add
add
jmp
sbb
mov
jmp
mov
and
add
add
mov
cmpl
je
pop
add
or
mov
sub
jmp
xor
push
pop
pop
or
or
shl
dec
mov
pop
ret
push
xor
add
add
insb
xor
add
add
mov
add
add
add
push
xor
add
xor
add
xor
add
add
add
add
add
xor
add
xor
add
add
jp
add
insb
xor
add
add
mov
add
add
add
push
xor
add
xor
add
xor
add
add
add
add
add
xor
add
xor
add
add
add
add
outsb
inc
jb
jbe
jb
add
add
outsl
jae
inc
jb
jbe
jb
add
add
je
push
jne
je
push
jo
arpl
inc
add
cmp
push
popa
je
inc
gs
push
jo
inc
add
xor
push
popa
je
inc
imul
inc
outsl
insl
jo
outsb
outsb
je
add
push
add
gs
je
inc
imul
js
je
jb
arpl
jae
mov
je
push
add
filds
inc
gs
imul
je
add
push
jb
arpl
fs
jae
mov
fs
imul
add
adc
add
add
add
add
add
add
add
add
or
add
bound
add
add
add
xor
ss
cmp
mov
aaa
xchg
aaa
pop
cmp
lret
xor
cmp
cmp
cmp
xor
xor
cmp
cmp
sub
xor
xor
xor
lahf
xor
in
mov
cmp
cmp
cmp
cmp
cmp
cmp
xor
add
add
adc
and
popa
xor
xor
xor
jne
aaa
xor
lods
daa
sbb
in
insb
ljmp
push
lock
stc
inc
les
out
ret
in
xor
rorb
cmpsl
mov
loop
jecxz
aaa
sbb
cmp
xchg
pop
mov
jp
add
push
incb
add
add
in
orb
mov
sbb
fnstcw
out
out
enter
inc
push
jo
adc
inc
mov
mov
gs
fwait
fwait
xor
jge
or
imul
