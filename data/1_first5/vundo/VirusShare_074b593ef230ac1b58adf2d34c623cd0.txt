sbb
add
jle
or
negb
mov
xor
shrl
dec
movsl
fmulp
jne
dec
sbb
mov
loope
leave
or
stos
rclb
jecxz
fdivr
adc
stos
mov
pop
loope
push
hlt
lret
xchg
movsb
lds
out
aam
notl
cli
in
loope
test
mov
or
data16
xchg
mov
pop
fldl
insl
and
xchg
bnd
and
addr16
cwtl
lahf
sbb
cmp
xor
jnp
sbb
or
bound
loopne
addr16
addb
sbb
mov
lahf
das
loopne
ret
aas
dec
aas
inc
pop
sbb
cmp
mov
pop
divb
mov
xchg
and
adc
lret
arpl
iret
fisttps
inc
mov
push
fdivrs
es
mov
mov
push
sbb
jmp
adc
jbe
jb
xor
pop
loop,pt
repnz
loopne
sbb
loopne
add
das
mov
pusha
mov
adc
sub
mov
or
loopne
imul
vandnps
cmp
mov
push
and
sub
xor
pop
in
cmp
sub
inc
andl
push
in
lcall
loope
push
sub
push
adc
ficompl
jg
adc
bound
aaa
xchg
dec
jns
mov
lret
subl
icebp
mov
jp
cmp
xorb
cli
out
pop
outsl
jge
scas
cli
out
sahf
xor
std
iret
cmpsl
jecxz
xchg
scas
fnsetpm(287
jae
out
fst
adc
imul
xor
popa
inc
call
dec
dec
sbb
enter
mov
je
pop
push
pop
stc
pop
sub
sbb
pusha
js
jecxz
pop
or
add
subl
mov
and
sahf
mov
or
adc
mov
ljmp
fs
icebp
push
xlat
nop
shl
lods
shr
in
or
lcall
push
inc
test
jge
inc
push
stos
jl
inc
pop
dec
add
test
mov
cwtl
inc
aaa
pop
mov
or
sub
fsubs
ja
dec
mov
and
shr
mov
fcmovbe
xchg
pop
inc
push
loop
fdivrs
in
std
mov
out
cs
sbb
or
lret
mov
cmp
cmp
or
hlt
or
push
fs
add
push
adc
out
outsb
push
fs
nop
fcomip
ja
outsb
out
in
rclb
xchg
stos
xchg
adc
movsb
and
mov
lock
adc
inc
loop
shll
mov
repnz
fistl
in
inc
rcll
mov
push
pop
jae
andl
in
mov
imul
sarl
mov
sbb
and
push
and
xchg
adc
sahf
dec
pop
jo
cld
ret
out
jo
mov
adc
push
sbb
sbb
std
mov
sbb
nop
in
loope
insl
in
xor
out
sub
imul
mov
pop
rolb
lods
cmp
ret
mov
pop
inc
mov
frstor
cmp
ret
ljmp
movsl
jae
leave
jnp
mov
ss
aas
sti
push
fiaddl
cmpsl
movb
dec
pop
push
imul
lahf
sub
jecxz
rcr
sbbl
test
mov
gs
ret
daa
jbe
add
loopne
cwtl
or
out
cmp
inc
test
xor
mov
imul
shll
mov
jmp
sbb
or
fs
push
mov
ret
mov
cltd
inc
in
insl
addr16
xchg
jae
lods
pop
leave
xor
es
jae
xchg
cmpsl
mov
pop
dec
mov
cmp
fwait
out
adc
dec
mov
inc
repz
mov
inc
and
push
mov
xchg
fldt
xchg
jno
mov
pop
iret
dec
or
adc
sbb
mov
xchg
dec
mov
cwtl
push
mov
push
nop
mov
nop
clc
stos
daa
jo
call
push
in
push
mov
stos
cld
js
xorl
pop
or
push
ja
dec
dec
roll
pushf
or
ljmp
jno
hlt
outsb
insb
clc
pop
out
jge
out
sub
jnp
test
mov
fdivrs
ja
test
adc
fwait
jno
rcrl
sbb
fsubrs
std
push
gs
aaa
insl
mov
push
mov
inc
mov
mov
add
outsb
ss
xor
push
push
dec
pop
aam
andb
fstpl
jmp
lods
and
add
inc
incb
and
mov
adc
test
sub
ljmp
pushf
test
popa
ja
mov
data16
mov
mov
push
clc
loop
mov
and
xor
pop
or
stos
rorl
xor
lods
pop
clc
or
notb
cmp
test
leave
and
lods
sbbl
in
clc
xchg
inc
gs
aas
mov
cmpsl
or
mov
das
stos
mov
lea
add
add
mov
out
mov
cltd
rorb
stc
test
dec
leave
adc
push
push
mov
stos
addr16
and
xchg
mov
fwait
aaa
mov
mov
out
add
cmp
push
stos
mov
movsb
push
inc
sub
mov
jns
push
out
sbb
sub
mov
ret
sahf
icebp
imul
cld
hlt
into
ljmp
inc
outsb
and
push
and
push
arpl
dec
mov
pop
lret
inc
and
xor
dec
loope
inc
inc
out
cmp
jb
jecxz
cmp
test
sbb
cmp
push
mov
int3
sub
inc
ret
popa
movsl
imul
sub
push
loope
jnp
inc
dec
xchg
aam
hlt
jno
loop
lods
push
jg
loop
rorb
mov
js
xchg
jg
xor
xchg
clc
ret
xchg
outsb
xchg
mov
aam
sbb
test
lret
fwait
jp
xchg
or
push
mov
outsl
push
jb
ficoml
fstps
sub
or
sbb
cmpsb
ss
sbb
xchg
adc
jo
cmp
jp
loop
stos
pop
mov
cmc
push
sbb
test
xor
sbb
jp
pop
lock
sub
and
ret
sahf
lods
dec
pop
jnp
pop
dec
pop
leave
sub
repnz
flds
dec
data16
enter
pop
adc
jp
dec
into
xchg
fcmovbe
pop
fsubl
push
hlt
aaa
jno
xchg
int
mov
xchg
mov
dec
adc
mov
cwtl
sub
dec
and
or
mov
insb
lcall
mov
jnp
and
les
bound
jmp
jb
fldl
push
mov
sbb
adcb
test
jmp
push
imul
les
adcl
cmp
inc
pop
pop
jp
xchg
imul
shlb
mov
lods
mov
cmp
sbb
xchg
pop
stc
dec
push
test
loopne
sahf
mov
sbb
test
pop
nop
ljmp
xor
xchg
mov
fdivs
movsl
gs
add
aas
sarb
scas
cmp
sbb
and
mov
mov
adc
cld
sub
in
jne
test
mov
jg
pop
mov
jb
lds
adcl
rolb
mov
jge
and
push
adc
push
out
and
and
das
stos
lret
jg
add
jecxz
jne
add
mov
fs
or
or
idivb
pop
mov
fcoml
and
mov
pop
xor
lahf
inc
mov
xchg
xchg
in
mov
jbe
sbb
add
add
xchg
dec
sbb
loope
lret
lret
xchg
cld
fwait
mov
jno
mov
adc
sub
je
push
xchg
add
loope
insl
notb
or
add
fwait
sbb
and
mov
mov
cmc
jl
push
push
pusha
mov
jmp
repnz
cmc
scas
fnstsw
sub
fiadds
mov
fstpl
push
push
pop
fmull
nop
cli
pushf
popf
movsb
mov
aad
movsl
arpl
xor
mov
or
shlb
mov
xchg
popa
adc
cwtl
outsl
insb
mov
sbbb
jb
jae
outsb
pop
scas
jo
sbb
lcall
fstpl
insl
cwtl
xchg
sub
xor
inc
ret
jns
lret
repnz
cmp
ja
and
clc
lods
hlt
push
test
aam
sbb
rcrb
cmp
outsl
aad
xchg
adc
lods
shl
mov
push
sbb
sub
adc
mov
push
std
out
xchg
or
xor
stos
ds
xchg
jo
lcall
xor
or
adc
insb
and
pusha
lods
or
dec
jb
jmp
mov
int
mov
pop
mov
mov
xchg
stos
out
jle
jnp
daa
and
sbb
push
lahf
mull
movsl
mov
push
sbb
sbb
sub
dec
push
popa
jo
loop
dec
cmp
dec
sub
addr16
lock
aam
lahf
andl
sbb
je
insb
jl
mov
fisttpll
mov
fidivrl
add
push
xchg
les
push
push
in
sub
addr16
test
mov
push
adc
cli
push
xorb
ret
iret
xchg
out
insl
pop
mov
icebp
add
mov
addr16
js
pop
jnp
test
sub
xchg
inc
lahf
xchg
mov
add
dec
jp
in
fwait
outsl
jno
sub
xchg
aam
or
xor
push
pop
lahf
jmp
sbb
aam
xorb
and
filds
add
pop
fwait
mov
les
daa
cmp
jne
call
fldl
sub
mov
cmp
mov
dec
ljmp
mov
es
cltd
mov
mov
push
js
imul
std
pusha
sub
dec
cmpl
xchg
aad
data16
dec
xor
fwait
push
cmp
cs
adc
xchg
addr16
cli
xchg
jg
lcall
insl
popa
movb
mov
inc
sub
jb
add
aad
lret
mov
cli
inc
sbb
es
call
sbb
push
xchg
adc
clc
loopne
outsl
xchg
or
clc
add
popl
sub
ror
sbb
or
mov
test
in
fcomip
fldenv
sbb
stc
lea
je
aaa
outsl
hlt
mov
leave
cmpb
xchg
cltd
ljmp
call
int
shrl
idivb
cli
mov
sar
pop
adc
xor
xor
ljmp
push
movsl
fldcw
dec
push
mov
lahf
sbb
dec
hlt
xor
outsl
pop
aaa
clc
adcb
adc
push
add
lahf
mov
scas
loope
jne
xor
sub
or
cld
mov
sbb
mov
icebp
fdiv
cmp
xor
loope
cwtl
jnp
adc
mov
sub
jmp
cmc
arpl
inc
and
cmp
adc
xor
mov
daa
cmp
add
mov
or
add
add
mov
jo
add
aas
gs
shll
xchg
lea
ret
ficomps
leave
xchg
lahf
scas
and
mov
rcrl
mov
pop
push
mov
mov
cmp
add
lcall
in
jp
fwait
xor
loopne
sbb
test
filds
int
inc
lds
xchg
arpl
cmp
lret
jnp
cld
pop
pop
les
mov
jmp
mov
lods
jp
insb
dec
adc
or
adc
out
ds
out
cmp
mov
fildl
push
cmp
jle
out
or
stc
jl
cmp
bound
jne
insb
into
sbb
sbb
mov
cmp
cmp
xchg
fs
add
arpl
pop
rclb
pop
fildl
fadds
cmp
jo
shrb
cmp
mov
filds
sub
test
in
adc
add
mov
lods
pop
jo
hlt
test
cmp
iret
int3
and
lahf
bound
inc
xchg
mov
sbb
push
mov
mov
cltd
lret
sbb
lock
xor
add
aas
sbbl
mov
pop
or
pop
mov
push
inc
mov
sti
mov
das
lahf
inc
xchg
andl
jo
outsl
out
in
mov
clc
add
pop
lods
je
in
in
inc
and
mov
xchg
pop
xor
cmpsl
mov
pop
xchg
dec
rep
lds
int
lcall
jl
push
mov
push
je
in
add
and
fldcw
mov
stos
imul
mov
das
imul
mov
mov
lret
push
leave
int
into
xor
mul
hlt
in
xchg
aaa
cmc
push
jae
mov
cli
imul
les
sub
fucomp
push
addr16
in
adc
mov
and
fdivl
lock
mov
cmp
imul
xor
or
jbe
mov
movsl
mov
fdivrl
cmc
mov
jno
repz
cwtl
test
push
xchg
xchg
sub
decb
inc
cld
add
aad
and
insl
pop
out
loope
sub
shl
rorl
fcmove
xor
dec
mov
popa
lret
mov
mull
mov
and
cmp
add
jbe
in
insl
mov
loop
add
in
cmp
ficomps
sbb
or
jns
pop
inc
outsb
loopne
push
push
into
sbb
leave
push
ss
repz
sbb
popf
inc
adcb
out
adc
dec
add
das
or
popa
js
mov
in
xchg
sbb
incb
movsl
and
clc
add
stos
xlat
xchg
roll
test
mov
jno
je
ds
dec
push
sbb
pushf
pushf
sbb
adc
movsb
mov
sub
push
ret
inc
mov
dec
loope
pop
adc
mov
pop
out
jge
std
movsb
xor
outsb
je
xchg
call
sar
ret
out
sub
push
push
ljmp
dec
push
outsl
fisubrs
mov
sarl
or
push
xchg
and
enter
cmc
or
lahf
add
add
xlat
push
jg
mov
imulb
xchg
cmp
push
xor
int
push
out
out
push
or
fdivrl
xchg
pop
stos
je
xchg
xchg
js
pop
mov
addr16
xor
rolb
jmp
cmp
dec
and
jns
fbld
into
lea
pop
xor
mov
dec
fs
andl
ficomps
rcrl
pop
addr16
popa
jmp
push
mov
call
rcll
js
cmp
inc
lcall
in
pusha
sbb
ror
pop
sbb
repnz
hlt
sub
sub
fnstcw
movsb
subl
add
enter
mov
in
jnp
iret
loope
int
cld
dec
cmp
in
jp
inc
pop
or
pushf
adc
fs
push
data16
loopne
jle
jne
aam
out
push
outsl
bound
enter
mov
push
mov
shlb
repz
mov
jge
sahf
roll
nop
imul
out
cmp
es
mov
test
jo
mov
mov
jg
je
popf
mov
pop
js
push
or
inc
cmp
dec
jge
push
xchg
insl
idivl
into
adc
fidivrl
orl
add
sbb
xchg
imul
mov
and
out
xchg
push
hlt
das
or
mov
pop
sbb
mov
cmp
mov
shlb
je
sbb
out
out
sub
lods
sub
adc
cmpsl
add
rorb
ficoml
ss
push
pop
fistps
lods
mov
scas
sbb
push
stos
or
pusha
fcompl
dec
lods
outsb
jmp
xchg
sbb
nop
lahf
std
gs
or
sbb
cmc
jae
push
sbb
sbb
call
test
lret
je
adc
imul
fcmovnb
xor
push
ljmp
cmpsb
push
jecxz
mov
xchg
jmp
mov
jo
mov
repnz
sahf
ds
xchg
add
push
mov
push
repz
jl
mov
mov
gs
je
stc
jp
imulb
lret
jecxz
mov
mov
mov
jle
push
cmp
sbb
adc
dec
cli
dec
adc
adc
ret
sbb
cmpsl
mov
js
adc
leave
sub
test
xor
ret
mov
fildl
or
jno
mov
in
mov
bound
sbb
int3
fwait
dec
push
sbb
repz
popa
mov
enter
mov
xor
out
jbe
loope
adc
dec
cmp
sub
je
or
xchg
inc
call
jge
sub
adc
cmp
add
cmpsb
outsl
xlat
mov
jle
and
push
xlat
je
lahf
popf
pop
cmpsl
nop
insl
shrl
sub
jmp
mov
sbbl
push
dec
es
inc
pop
jecxz
lret
cwtl
and
out
xchg
push
cmp
adcb
out
movsb
stos
std
out
mov
sub
push
rcrl
hlt
mov
sbb
jb
mov
mov
adcb
insb
pop
xlat
push
int3
in
push
inc
jp
gs
inc
mov
xchg
jl
ret
xchg
out
cltd
dec
in
push
shrb
xlat
or
jl
in
loop
dec
scas
rolb
or
sahf
cmp
fisttpl
shlb
sbbl
inc
fwait
cwtl
mov
mov
push
jb
lea
je
cmpsl
and
pop
rolb
addr16
pop
sahf
cli
jmp
jb
std
xor
daa
imul
jge
pop
inc
ficomps
sub
mov
pop
cmp
int
outsl
cmp
rorb
lods
call
sahf
xchg
aad
pop
dec
xchg
pusha
pop
jge
fstps
jo
pop
mov
test
adc
jle
lock
jne
fldl
sub
mov
imul
or
xchg
mov
movups
lods
pop
mov
sub
pop
ret
jnp
rorb
les
fdiv
insb
mov
imul
adc
fldenv
loopne
mov
ret
fisubrs
ficoml
jb
ljmp
lcall
inc
push
mov
push
cmpsb
bound
sbb
stos
popf
sahf
adc
jmp
popa
add
in
sub
jg
fdivs
insb
adc
in
sbb
sbb
xor
adc
jp,pt
pushf
cmp
xchg
jecxz
gs
mov
sti
in
and
and
loopne
ja
rorl
xchg
xchg
clc
in
xchg
jmp
cmpsl
ret
adc
je
inc
and
test
es
pushf
mov
xor
out
mov
mov
in
xchg
out
xor
jbe
je
divb
jge
sbb
fwait
sub
pop
addl
jbe
hlt
push
mov
inc
clc
lods
sub
xchg
popa
fucomip
sub
jl
xchg
pusha
ja
pop
in
push
int3
movsl
popa
cmp
insl
adcl
xchg
push
call
mov
daa
jg
jecxz
ljmp
adc
push
fmul
or
test
mov
cltd
dec
in
shll
xchg
mov
mov
inc
cmp
push
stos
insb
xchg
xlat
imull
loop
mov
out
lahf
out
lea
adc
xor
aam
movsb
push
add
jle
pop
insl
pop
pop
jb
inc
xchg
push
sbb
cmp
mov
mov
jg
inc
dec
fcomi
addr16
dec
cli
sahf
ret
int
adcl
es
pop
int3
loop
mov
push
push
cmp
jno
xchg
push
inc
mov
cmp
incb
mov
daa
mov
pop
mov
loop
clc
nop
cmpsl
and
pop
andl
addr16
xchg
cmp
sbb
cmpsl
rorb
les
or
repnz
cmp
clc
or
cmp
fimull
repz
xor
mov
roll
jae
in
mov
mov
mov
push
xor
sbb
jmp
fxch
mov
cmp
cmp
sub
and
pusha
fiaddl
stos
pop
mov
mov
sti
lahf
test
stc
xchg
mov
cmp
gs
rcr
bound
cwtl
in
xchg
mov
mov
sub
mov
pusha
hlt
and
mov
or
push
dec
das
add
sbb
js
idivb
test
jl
mov
xlat
pop
jb
mov
imul
add
not
and
push
ret
into
sahf
mov
mov
scas
push
dec
mov
addl
aas
cmp
stos
mov
in
pop
enter
cmpsb
adcb
mov
cld
adc
add
mov
insl
xor
mov
adc
gs
sbbl
xlat
adc
jmp
xor
movsb
dec
inc
inc
sub
push
sub
rorb
add
cli
dec
add
loop
sbb
cltd
sbb
aas
rcl
mov
icebp
test
mov
dec
int3
ljmp
cmp
in
sbb
inc
pavgw
lea
jnp
int
shlb
lahf
std
mov
aam
dec
ss
cmp
push
add
fdivrp
imul
neg
flds
out
xorb
xorb
lods
adc
lret
cmc
pop
out
jg
fcmovb
cmp
rcrb
mov
pop
cmpsb
xor
repnz
lods
out
in
cmp
xchg
or
mov
test
sub
loop
cltd
mov
repnz
push
ds
test
pop
in
ja
jo
stos
stos
xchg
scas
sbb
inc
pushf
or
mov
xchg
es
mov
lds
xchg
mov
les
dec
iret
out
movsl
pop
push
negb
lock
jbe
loop
popa
mov
lds
ja
add
cltd
mov
loopne
cmp
cmp
dec
adc
lret
fidivs
jne
xchg
lods
mov
jnp
xor
and
into
xchg
jne
aaa
cmp
ret
fimuls
pop
cwtl
mov
sub
leave
jl
sahf
mov
lahf
fsts
clc
int
dec
cmp
daa
pop
jae
push
lods
test
xor
shrb
mov
push
loopne
scas
push
mov
cmp
add
pop
mov
sub
outsb
dec
mov
popa
xor
xchg
lods
jne
aad
pop
cmp
xor
lods
add
or
pushf
sub
mov
leave
pop
int3
jo
icebp
mov
add
fisubs
mov
mov
pop
lret
ljmp
cmp
bound
data16
mov
mov
test
xchg
pop
or
mov
push
stos
mov
stc
cwtd
repz
or
mov
cld
lods
add
int3
int
stc
sti
jae
jmp
jmp
loope
dec
pusha
push
neg
lods
ds
loopne
rorl
xor
in
adc
push
pop
movsb
fs
lret
bound
jge
loopne
mov
inc
jbe
jns
mov
testl
test
aad
imul
ret
addb
cs
adc
lret
lds
fisttpll
mov
pop
mov
insb
pop
xchg
lods
mov
sub
ljmp
mov
shll
jmp
mov
in
push
stc
mov
cmp
into
iret
pop
adc
or
fidivs
int
sti
sub
and
jae
outsb
sub
test
addl
mov
fdivs
inc
std
mov
sti
sbb
int3
movsl
test
and
or
jno
in
ret
and
sbb
pop
fdivp
and
test
sbb
mov
pop
mov
dec
jb
lods
xlat
xchg
sbb
pushf
in
shll
nop
je
jb
cmp
js
add
sbb
insl
lret
stos
scas
insl
int3
lods
pushfw
mov
push
jne
repz
inc
clc
sbb
push
pushf
jbe
dec
lcall
pusha
in
pop
cmp
shlb
scas
adc
add
fldl
jae
xchg
fisubrl
test
push
sarl
and
xor
inc
pop
pop
push
xlat
xor
xchg
not
sbb
push
mov
sbb
mov
inc
mov
bound
cmc
add
cwtl
or
dec
mov
lret
mov
cmc
sti
shll
out
add
jb
mov
or
dec
mov
jg
sbb
cld
rcr
and
cld
pop
fs
sti
sbb
pop
sbb
cwtl
xchg
sbb
sub
xchg
mov
rorb
push
inc
aam
xchg
adc
fildll
add
adc
outsl
xchg
dec
fdivrs
in
lock
fcompl
mov
mov
jg
xchg
mov
pushf
mov
push
pushf
xor
mov
and
popa
sub
in
adc
fstl
mov
lahf
push
mov
mov
cli
jmp
fwait
scas
dec
imul
and
int
movsb
sbb
cmp
push
mov
les
push
into
std
cli
cmc
adc
ficompl
mov
mov
std
jmp
cld
xor
test
dec
push
in
add
pop
pop
xor
mov
repnz
push
jne
xchg
mov
mov
fnstcw
pop
sbb
jge
xor
loope
dec
jl
mov
sub
lahf
fsubr
jo
leave
adc
out
xchg
jno
clc
jl
lods
imul
adc
mov
mov
pop
test
jns
xlat
push
addb
in
movsl
cltd
push
mov
jmp
sbb
imulb
dec
lock
xlat
mov
mov
aad
mov
xchg
or
add
loopne
in
mov
cltd
in
dec
ss
adc
hlt
mov
loope
inc
mov
ss
scas
repnz
xchg
shlb
lods
mov
inc
popa
movsl
lret
in
push
out
icebp
sbb
inc
xor
cmp
pop
fwait
addl
mov
and
loopne
pop
rcll
mov
in
xor
sbb
repz
mov
mov
scas
ret
jne
pop
andb
and
mov
adc
xchg
cmc
pop
in
pushf
popa
movnti
loop
pop
or
ja
lret
sarb
jnp
mov
or
xor
sbb
sbb
aad
icebp
fbstp
scas
add
mov
xor
out
xchg
xor
and
adc
adc
pop
jae
shlb
inc
pusha
cs
repnz
out
and
mov
sbb
mov
add
xchg
cmp
call
lret
push
mov
lcall
cmpsl
xor
fists
xor
mov
inc
clc
add
fstpl
mov
ja
jmp
jecxz
mov
or
and
and
addr16
cmc
or
dec
xchg
cmc
sbb
imul
in
jo
dec
push
push
out
or
sbb
cmpsl
xchg
jns
lret
pop
lret
adc
xchg
lret
add
pop
mov
xor
rclb
sahf
and
lea
or
dec
jae
dec
jg
notb
mov
ljmp
pop
lds
pop
sub
ljmp
xchg
xchg
cld
mov
pop
cwtl
stos
lds
mov
outsb
test
out
xchg
jne
inc
sarl
mov
mov
mov
lods
ret
mov
insb
mov
mov
dec
in
lock
push
aam
xlat
leave
outsb
nop
mov
clc
mov
pop
in
mov
in
mov
arpl
add
imul
pop
dec
ret
and
das
push
mov
jb
cld
int3
js
ret
ds
and
and
and
push
pop
cmp
cltd
hlt
ja
sub
and
push
es
cmp
sub
xchg
shlb
push
mov
push
test
insb
in
inc
outsl
xchg
stos
js
jp
jns
or
and
les
add
mov
xlat
push
mov
inc
adc
dec
repnz
mov
dec
xchg
call
mov
mov
cmp
cli
sub
fbstp
cltd
cs
mov
sar
out
fiadds
inc
cli
xor
push
dec
cmp
pop
ffreep
xchg
int
bound
push
neg
jb
jae
js
jge
xor
sbb
insb
cmpsb
sbb
aaa
push
push
xchg
repnz
aad
adc
add
mov
je
inc
and
jecxz
cli
pop
mov
rcrb
rcrb
sub
jae
dec
nop
lock
test
sbb
inc
mov
pop
xor
mov
jge
fstl
outsl
pop
xor
je
fstps
mov
imul
int3
pop
jmp
inc
inc
jns
fcmovb
aam
mov
mov
fdivp
mov
jp
imul
addr16
movsl
push
xchg
and
repnz
jle
sub
jp
xor
roll
jp
cli
and
mov
or
mov
sbb
lcall
daa
mov
dec
andl
jo
jecxz
dec
ljmp
sti
fcompl
cmp
jp
clc
push
shll
inc
sub
sub
in
jb
push
lret
adc
xlat
dec
shr
mov
jecxz
mov
inc
shlb
stc
or
xor
push
outsb
jno
ret
jecxz
jl
push
call
and
jmp
mov
xor
mov
inc
cwtl
lods
xchg
add
ljmp
xchg
mov
mov
mov
add
out
ljmp
dec
mov
cli
sub
arpl
xor
mov
cltd
lods
add
fs
lods
sub
loope
sbb
mov
cmp
or
adc
add
xchg
xorb
mov
cltd
add
lcall
idiv
add
lret
adc
out
cmp
lods
jle
jge
lcall
mov
mov
lods
call
xor
xchg
cmp
jnp
aaa
sti
jnp
add
pop
xor
shrb
arpl
stc
call
into
xor
xor
or
fcomp
pushf
sub
mov
mov
mov
sub
lock
sub
addl
pop
and
and
das
sbb
mov
jle
hlt
adc
add
cli
xchg
lret
sub
xchg
mov
cmp
int3
xor
push
rorl
inc
cmpsb
xchg
sbb
cmp
rcl
ret
xor
in
xor
mov
push
insl
rcr
rolb
mov
pop
push
test
push
ljmp
insb
sub
mov
leave
sub
aam
jge
mov
add
stos
lcall
jnp
lods
lea
xlat
iret
mov
cltd
repnz
adc
loopne
xor
and
js
push
xor
sbb
mov
shlb
movsl
xlat
arpl
test
jmp
arpl
in
mov
jl
repnz
idivl
fistpll
mov
xor
push
enter
ja
sahf
test
xchg
leave
jns
mov
pop
pop
andl
lret
push
repnz
fcomps
mov
je
lcall
push
mov
sub
sahf
pop
out
sahf
adc
imul
les
sarb
fcmovbe
push
les
aas
ja
mov
push
xchg
adc
pusha
jnp
icebp
and
push
fisttpl
xchg
ds
xor
out
and
pop
dec
or
dec
in
repz
dec
jmp
iret
mov
jb
mov
jl
mov
xchg
loop
dec
xor
pop
xor
pushl
jbe
mov
fstpt
loopne
pop
cmp
inc
cmp
sub
pop
aam
ficomps
and
adc
or
sub
cli
and
pop
lds
int3
mov
prefetch
mov
outsb
mov
loop
sbb
lods
test
aad
adc
and
mov
outsl
faddp
and
inc
jle
aaa
sti
les
mov
adc
mov
loope
test
sbb
cmp
inc
pop
roll
roll
mov
fcompl
inc
sub
mov
mov
shll
subb
mov
push
pop
popa
jecxz
je
mov
sub
ret
mov
sti
mov
std
rcr
add
scas
sub
cli
aam
ret
mov
cltd
mov
inc
aam
mov
lahf
inc
jecxz
sahf
sar
testb
mov
sub
mov
push
in
enter
jo
fldcw
daa
mov
es
pushf
xchg
or
mov
lret
enter
xor
xchg
cli
xchg
push
add
or
xor
cmp
xchg
push
fildll
repz
sti
aaa
aaa
xchg
lcall
cmp
mov
stos
bound
insl
xor
cmp
nop
cmp
into
mov
out
jecxz
leave
adcb
ret
shrl
out
lods
xor
sub
xchg
inc
cmc
out
sub
push
and
pop
sub
jne
sbb
add
sbb
dec
xor
or
pop
ds
xacquire
mov
sbb
cmp
push
dec
jl
and
sbb
add
pop
xor
sub
out
test
clc
pop
shrl
xchg
push
rsm
adc
fmulp
xchg
inc
add
or
es
mov
in
jecxz
pop
nop
adc
push
push
sub
cmp
mov
loope
inc
cmpsl
imul
call
mov
in
xor
jnp
sbbb
ljmp
lods
test
push
clc
sub
rclb
or
mov
in
sub
stc
popf
repz
mov
push
dec
jo
js
jl
sub
adc
pop
movl
mov
mov
inc
fnstcw
mov
jae
pop
sti
push
pop
ds
push
lcall
fidivrs
pop
sbb
pop
in
xchg
mov
xchg
xor
add
mov
push
mov
loopne
mov
adc
aaa
xchg
int
dec
pop
xlat
and
mov
popa
shlb
in
stos
test
sub
xchg
cmc
mov
fs
dec
cmp
roll
ja
push
das
xchg
mov
mov
ja
sbb
push
pop
mov
lret
pop
sbbl
or
pop
push
cs
mov
sbb
arpl
mov
call
and
inc
cld
cmp
nop
jle
cmp
lea
adc
sahf
xlat
rolb
les
sub
mov
jecxz
sbb
insb
sbb
mov
add
mov
mov
xchg
xchg
leave
inc
push
nop
jg
fs
mov
sti
mov
sbb
pop
jnp
mov
push
cld
movsl
sbb
jmp
or
mov
sub
enter
insb
mov
stos
loopne
or
pop
jg
mov
iret
insl
dec
inc
mov
lret
cli
dec
pop
addr16
cmp
in
sbb
call
xlat
inc
mov
inc
icebp
repz
test
lret
fdivrl
imul
jns
push
lret
int
stos
sub
addl
ja
daa
push
popl
xchg
in
cmp
mov
aaa
movsb
mov
imul
fnstsw
push
lret
aad
adc
shll
mov
pusha
sahf
mov
clc
mov
xchg
jmp
ja
or
add
repz
aad
loopne
das
mov
jmp
punpckldq
sbb
int3
scas
in
outsb
into
outsl
in
lahf
push
push
jo
enter
adc
mov
mov
pop
enter
aam
ja
xchg
adc
aas
sub
adc
sahf
cmp
iret
lock
ss
mov
test
addl
sbb
out
adc
lea
out
sbb
adc
movsl
call
jnp
xchg
mov
xchg
jecxz
mov
dec
mov
push
mov
mov
xchg
loope
and
xor
hlt
add
cmp
sbb
sarl
and
xchg
stos
sahf
sbb
push
cmc
sahf
bound
mov
mov
dec
push
loope
mov
push
iret
or
adc
mov
loopne
inc
out
mov
enter
xor
mov
adc
sbb
xchg
insl
mov
sub
add
divb
add
out
pop
add
stos
lea
sahf
and
jne
hlt
aas
inc
mov
out
push
dec
test
push
pop
sbb
lock
inc
xor
mov
pop
aad
fsubrs
dec
ljmp
sbb
lock
lds
push
and
loopne
dec
stc
movsl
mov
push
insl
or
outsl
or
fistl
inc
sahf
in
je
xchg
enter
or
ret
or
leave
test
xor
jl
adc
pop
in
jecxz
shrb
call
jge
fdivrl
push
dec
sbb
xor
insl
jp
cmpsl
in
add
mov
shll
adc
pop
leave
jp
sti
xor
and
insb
xchg
push
xlat
mov
out
out
aad
inc
je
adc
xor
arpl
xor
aam
xchg
fs
stc
repnz
mov
jl
lds
push
outsb
or
pop
add
movsl
jg
lret
ja
cmpsb
je
mov
jne
xchg
xchg
addl
xor
xchg
cmpsb
fnstcw
pop
mov
pop
ss
and
pop
sbb
int
stos
sahf
mov
mov
call
add
fimull
sbb
xor
mov
and
sub
sbb
rorl
fisubrl
xorl
mov
dec
mov
lahf
gs
cmp
mov
ljmp
inc
adc
sub
in
cwtl
cmc
xor
es
xor
adc
inc
imul
mov
repnz
das
mov
adcl
stc
les
inc
je
and
pop
sti
addr16
or
loopne
loop
je
jae
push
cmp
jnp
dec
idivb
xor
loope
es
inc
xchg
nop
xor
jl
outsl
insl
in
mov
xorb
push
hlt
or
ret
jg
mov
or
fdivrl
outsl
ss
sub
add
test
int
xor
xlat
inc
mov
loope
pop
les
fnstenv
mov
dec
jmp
lret
imul
adc
stc
inc
aad
cmp
xor
je
lea
fwait
scas
fs
add
rolb
pop
cmp
push
std
mov
xchg
push
xchg
add
xor
pusha
movsl
lahf
std
push
or
mov
insb
jb
push
cmp
add
fldl
adc
adc
aaa
push
adc
jecxz
or
mov
mov
push
push
and
les
and
jb
in
pop
lcall
dec
push
pop
daa
testl
cltd
mov
test
lcall
pop
dec
mov
mov
pop
test
xchg
xchg
stos
insl
mov
in
cmp
inc
sbb
or
bound
out
cld
subb
repz
negb
cltd
jge
mov
jno
pop
popf
inc
push
pop
xchg
inc
in
dec
cs
xchg
paddw
ljmp
mov
dec
jne
xchg
jecxz
in
jne
out
enter
sti
gs
js
pop
xor
inc
sbb
sbb
aas
js
sub
out
cs
sbb
mov
ss
sbb
pop
in
mov
lea
and
sub
lods
mov
and
add
fwait
xor
and
and
or
push
pop
out
xchg
jmp
add
sub
xor
clc
enter
fmuls
into
call
pop
aam
or
and
xchg
jmp
dec
mov
call
jne
popf
add
add
mov
push
lcall
cli
mov
dec
push
cld
inc
dec
sub
lods
test
nop
xchg
pushf
xor
lods
rclb
out
mov
xor
cmp
test
iret
inc
fdiv
xor
mov
cmpsl
and
stc
mov
jle
pop
out
adc
pop
pop
jno
insl
movb
add
daa
push
outsl
or
sub
push
add
loope
mov
enter
aaa
lahf
and
into
sub
mov
daa
ja
mov
loop
mov
and
ror
in
mull
out
cmp
xlat
dec
fcmovb
adc
and
inc
pushf
mov
addr16
pop
adc
mov
out
push
aad
dec
pop
mov
out
stos
daa
xchg
or
sub
sbb
addr16
cmp
std
cmpsb
mov
pop
adc
inc
lcall
mov
fidivl
lret
divl
scas
cmp
xlat
repz
imul
popf
ja
inc
sbb
sbb
pop
and
ret
pusha
mov
add
xchg
cmp
imul
sarl
cmpsb
pop
push
adc
inc
xchg
loop
inc
dec
les
push
sub
pop
mov
mov
movsb
bswap
ss
cmp
arpl
push
imul
push
pushf
xchg
mov
mov
or
popf
sbb
pop
in
sub
mov
and
testl
cld
enter
jl
lds
fwait
jp
fistpll
repz
jae
xor
inc
pop
adc
jecxz
ja
xchg
push
je
fiadds
and
cmp
popf
test
add
inc
push
lods
ret
dec
mov
aam
inc
aad
dec
imull
jmp
cmpsb
cmpsb
xor
out
pop
add
lahf
add
stos
xchg
lods
imul
cmp
dec
jbe
inc
ret
xor
jae
iret
clc
pushf
cs
test
jmp
inc
stos
pop
pop
fcoms
mov
pop
scas
pop
pushf
mov
icebp
out
xchg
je
mov
fisubrl
mov
lea
sar
push
xlat
aaa
sbb
addl
sbb
lea
adc
adcl
adc
sbb
in
sub
inc
ljmp
sub
jb
xchg
test
enter
cli
aas
dec
aas
dec
mov
add
dec
sub
mov
add
push
test
pop
pop
sbb
andb
pop
les
aaa
mov
in
or
out
repnz
jno
and
mov
jnp
aaa
jo
addr16
nop
in
push
loop
cmp
in
lods
aam
je
jp
ret
add
ret
sbbb
sub
ret
sub
fdivrl
dec
mov
mov
sarb
inc
push
lcall
xchg
jg
adc
aad
xchg
bound
ljmp
les
lods
daa
xchg
movsl
insb
pushf
insl
mov
jl
add
dec
ficomps
aas
aas
mov
push
lds
cmpl
lret
pop
or
imul
add
mov
sbb
jl
pop
mov
cmp
test
cmc
add
sub
jno
mov
jne
cmpsl
lods
cmp
scas
cmp
shlb
into
mov
push
mov
jge
pop
shrl
jbe
dec
mov
fs
notl
pushf
sbb
dec
data16
adc
inc
mov
imul
mov
pop
and
ficoml
lods
push
jp
fisubs
mov
xchg
adc
push
daa
jno
sub
aaa
cmp
mov
xchg
fldt
out
mov
stc
jbe
test
mov
dec
sub
sub
rcll
into
repnz
jl
mov
fdivrp
pop
jle
pop
pop
mov
fs
out
sbb
inc
iret
add
aaa
sbb
fwait
repz
repz
xchg
fwait
adc
cltd
inc
pop
dec
lods
mov
jle
ja
cmp
inc
outsl
inc
scas
iret
mov
insb
int3
adc
fwait
add
pusha
fmul
and
out
add
pop
jo
push
mov
out
outsl
mov
sub
cltd
sti
adc
pop
dec
jl
cmpsb
jecxz
mov
leave
idiv
pop
lock
jnp
sbb
push
rcl
lds
or
out
dec
rcll
testb
lods
mov
add
loopne
cld
and
lret
fldcw
imul
xchg
add
test
scas
daa
shr
jg
jg
dec
sub
pop
xlat
scas
mov
pop
aaa
loopne
xchg
sub
add
push
loopne
ret
cmp
insl
shlb
lods
in
gs
dec
cs
ds
je
add
inc
rclb
loope
pusha
jne
push
lock
pop
sbb
jnp,pn
ds
out
popa
jae
jo
inc
dec
xchg
mov
stos
adc
mov
pop
cmp
push
js
mov
ret
jbe
or
rcrb
mov
nop
push
lret
repz
add
mov
or
push
inc
dec
mov
ss
jp
push
inc
in
mov
sbb
dec
out
fs
movsl
insb
test
movsb
ret
cwtl
adc
mov
mov
sbbb
out
or
rolb
or
fldcw
popf
or
xor
mov
xlat
mov
les
inc
ds
insl
fcmovne
aas
cli
cli
fcompl
push
xlat
sub
test
pop
jne
add
or
sbbl
je
loope
mov
pushf
enter
lods
fs
adc
lods
xor
cmp
jne
mov
gs
dec
or
sbb
lock
sub
lcall
mov
test
sbb
lahf
or
or
and
sub
outsb
fwait
out
popf
push
ja
adc
stos
imull
movsb
push
lcall
mov
inc
cmp
mov
lahf
js
jo
les
mov
daa
sar
mov
loope
cmp
sbb
dec
scas
cmc
jp
or
jae
flds
add
fcomps
in
les
popa
sub
mov
add
clc
pop
and
mov
addr16
add
xchg
pop
inc
in
lods
dec
js
popa
sub
fsubs
mov
inc
cli
cmc
xor
mov
jne
jle
inc
sub
pop
cmpsb
lret
mov
push
inc
cwtl
aas
dec
insb
jbe
cmp
popa
dec
pop
xchg
mov
sub
jg
insl
int
add
sub
push
pop
push
mov
pop
rolb
xor
inc
aad
jl
adc
add
imul
in
stos
xchg
jp
cld
dec
inc
mov
lahf
xor
in
cld
repnz
xchg
nop
aam
jle
inc
ds
stc
push
mov
mov
add
push
mov
pop
idivl
pop
adc
lret
cmp
data16
xor
mov
adc
or
cmpsb
imul
cmpsl
dec
push
hlt
or
inc
test
lret
mov
aaa
xchg
mov
pop
in
push
aam
fidivl
mov
push
mov
mov
pop
popa
cmp
mov
pop
enter
pop
int3
lods
inc
in
repz
fnstsw
sbb
fdivrs
fsubr
inc
adc
push
mov
mov
ret
inc
lds
push
out
inc
repnz
xlat
jecxz
mov
or
pushw
ret
adc
xor
out
mov
xor
lret
xchg
dec
push
push
nop
add
push
int3
scas
fs
cmp
stos
insb
cwtl
inc
scas
stc
orb
xchg
push
addr16
in
inc
pop
push
ret
mov
es
orl
ja
sbbl
sti
cmp
divl
rolb
scas
push
jmp
frstor
cmp
pushf
das
bound
call
lea
mov
inc
or
dec
call
mov
scas
leave
mov
btc
xor
cmp
mov
mov
jbe
jp
rorl
adc
aas
mov
fsubrs
push
sti
decl
push
sub
pop
cmp
jg
das
sub
jns
lret
jae
add
adc
jnp
push
cld
cmp
mov
sub
inc
fwait
sti
sub
pop
addl
das
mov
adc
sbb
or
shlb
add
or
mov
jp,pt
or
fnstenv
hlt
push
mov
hlt
jge
pusha
outsb
add
sbb
cmc
jmp
and
or
stos
test
mov
mov
push
cltd
cmpsb
xchg
mov
ja
scas
lea
jo
dec
and
sbb
adc
iret
outsl
pop
test
mov
into
xor
mov
cmp
shrl
ss
popf
add
adc
cwtl
dec
mov
sbb
add
jecxz
test
iret
sahf
scas
or
jae
ja
orl
sbb
and
mov
or
loop
mov
lds
adcl
dec
sbb
adc
add
shlb
sbbb
push
imul
mov
dec
and
jae
js
mov
xchg
loopne
sbb
jnp
in
in
lcall
mov
shll
mov
data16
jl
xchg
rolb
imul
testl
mov
test
js
push
enter
push
in
stc
enter
dec
in
sub
pop
aad
sbb
push
pop
mov
stc
aaa
rolb
call
ja
dec
fcompl
xor
jg
push
icebp
pop
xchg
aam
lret
fidivl
mov
push
lea
aas
rolb
xchg
lock
imul
les
mov
xor
nop
push
cmp
add
add
dec
mov
int
arpl
in
push
call
xchg
ds
xor
movsl
jg
mov
daa
sub
fmull
data16
push
inc
out
insl
add
clc
dec
xchg
sub
fdiv
bound
xchg
loope
out
insb
dec
cmp
stos
pop
in
cmpsl
xorl
in
mov
rcrl
push
or
fmull
pop
cmp
mov
fwait
bound
fstpt
jecxz
or
add
mov
addr16
jecxz
orl
inc
mov
loop
sub
sub
jbe
lahf
cmp
movb
stc
jb
add
dec
ja
adc
rcl
lods
dec
icebp
icebp
push
adcl
loop
and
inc
sahf
in
cmp
add
sub
mov
sub
ja
mov
gs
xchg
jb
dec
movsb
mov
push
add
and
jns
sbb
adc
xchg
jno
arpl
mov
mov
cmp
cmp
cmp
mov
xchg
or
out
inc
cmp
push
mov
push
mov
pop
xor
popa
push
or
mov
mov
call
dec
sbb
sti
enter
jne
xchg
pop
mov
dec
and
and
data16
lcall
nop
bound
mov
sbb
and
clc
hlt
mov
sub
xchg
adc
sub
test
pop
dec
dec
push
xor
adc
dec
xor
dec
cmpsb
sahf
test
int3
xchg
adc
push
xor
mov
mov
xlat
out
clc
xchg
xchg
sahf
inc
dec
push
ja
xchg
mov
mov
fcompl
fisttpll
test
fisttpl
movsl
test
testb
sbb
shll
push
push
bnd
icebp
cmpsb
test
dec
jns
xor
leave
push
xor
cmpsl
aam
std
push
add
insl
inc
xchg
push
mov
jg
nop
sti
into
mov
negl
cmp
aam
cmp
jbe
orb
add
imul
mov
stc
andb
inc
cld
pop
mov
ds
sub
cs
cmp
dec
mov
xor
mov
stos
sbb
push
cld
push
jae
lahf
jo
shrb
push
cmp
stos
fistps
dec
or
push
jno
loopne
and
jb
int
aam
and
lods
aaa
std
sbb
mov
ret
sahf
enter
mov
adc
mov
add
inc
das
and
out
sbb
aad
insl
adc
dec
testl
shr
mov
cmpl
sti
sti
cmp
add
or
adc
or
push
adc
in
loop
push
jnp
call
mov
sub
sub
out
outsl
mov
xchg
xchg
cmp
iret
out
sbb
push
fadds
mov
and
jo
cmp
daa
flds
sti
movsb
mov
sti
inc
pop
xchg
mov
fcmovb
ret
push
sub
mov
xor
js
dec
sub
sub
mov
test
lret
les
fcmovnbe
inc
scas
xchg
in
push
dec
mov
cmp
push
xor
arpl
adc
inc
or
rcl
sbb
dec
scas
push
lods
dec
popf
mov
stos
lea
fwait
mov
xor
xor
mov
leave
add
popf
or
pop
pop
je
inc
rclb
mov
push
pop
jmp
ds
repnz
lods
or
int3
xchg
mov
jp
sbb
mov
int
sbb
shl
call
xchg
cld
out
sub
ret
adc
into
dec
mov
jb
and
mov
nop
adc
js
jno
mov
test
jle
push
fiadds
ret
call
and
in
dec
in
add
sub
mov
notb
stc
test
inc
or
adc
inc
ret
jns
fldcw
jmp
movsl
sarl
push
pop
push
mov
mov
incl
mov
jle
or
imul
dec
push
inc
add
cmc
mov
and
mov
in
inc
push
das
repnz
aad
in
push
lods
sbb
cmp
xor
adc
push
out
and
push
and
cmp
sbb
mov
stc
dec
ljmp
push
xchg
outsb
subl
dec
mov
or
jge
rcl
xor
dec
icebp
add
or
and
or
imul
dec
out
stc
mov
cmpsb
mov
jg
lea
xchg
sub
in
mov
mov
in
fstpl
sub
add
or
roll
pop
push
pop
icebp
les
and
js
xchg
ffree
jg
mov
cmp
pop
lea
jae
idiv
lea
push
lock
mov
cmp
popf
outsl
mov
mov
push
ja
jle
sbb
leave
test
mov
cmp
or
divl
movsb
push
in
adc
into
and
insb
cmp
movsl
cmp
cli
pop
out
loopne
fwait
stc
pop
sbb
xchg
jge
jmp
pop
sbb
jbe
adc
inc
and
bound
mov
pop
enter
das
orl
out
fwait
push
iret
sbb
stos
int
jo
jno
sbb
push
xchg
arpl
sub
leave
jns
pop
mov
adc
pop
xchg
adc
and
imul
sbb
das
push
adc
enter
dec
imul
xchg
sti
jecxz
inc
jg
bound
mulb
test
test
ret
mov
or
push
cmp
mov
or
or
xchg
js
lods
jmp
jnp
jmp
xchg
pop
outsb
mov
push
dec
mov
lret
hlt
jne
pusha
mov
movsl
mov
mov
mov
push
xor
lods
xor
data16
lods
pop
mov
jb
push
pop
mov
dec
push
ret
aam
out
aad
sub
cmp
mov
xchg
inc
out
pop
cmp
xor
inc
test
xchg
pop
cmpsl
mov
aam
jg
cmp
xchg
into
mov
jns
decb
push
xchg
popa
inc
cmp
fwait
sub
lea
jg
inc
dec
mov
jbe
aaa
jbe
insb
mov
jb
cmp
clc
pop
mov
push
outsl
lret
test
clc
ss
test
dec
mov
ret
into
mov
into
jae
xchg
mov
in
js
cmp
sarl
sbb
sbb
xchg
fstpl
dec
scas
cmp
and
popa
jb
xor
mov
and
cmpsb
push
lea
pop
ja,pn
cmp
push
incb
int
sbb
mov
call
push
ljmp
sbb
dec
mov
mov
nop
imul
dec
movl
adc
lahf
push
mov
and
cmc
je
pop
and
or
sti
out
jp
scas
adc
push
mov
sub
out
cmp
add
pusha
add
sub
jl
jl
sub
lea
scas
pushl
ret
fs
inc
xor
dec
mov
pop
push
imul
pop
hlt
pop
jno
push
imul
rorl
mov
aas
lea
loopne
aad
leave
push
dec
rorl
test
hlt
or
xchg
xchg
sti
jae
push
sbb
cs
fsubl
xor
dec
lcall
pop
inc
lcall
push
filds
dec
push
jns
mov
popa
cmp
pop
cmp
jne
fisubl
dec
ret
mov
divb
in
lahf
out
leave
push
dec
cwtl
mov
dec
sub
outsl
adc
pop
addr16
in
jecxz
mov
out
dec
loop
pushf
adc
push
in
imul
das
test
into
js
inc
add
sti
push
loope
pop
or
pop
les
mov
sub
jns
sub
xchg
jecxz
repz
mov
push
ret
neg
adc
mov
push
xchg
mov
shr
mov
pop
not
mov
push
push
mov
jle
lret
and
fisubl
les
loop
xchg
cmp
leave
cmp
add
push
inc
lcall
lcall
dec
jle
lods
subl
cmp
out
cli
je
or
loop
adc
scas
mov
jns
xchg
adc
adc
fmuls
int3
mov
mov
jle
daa
pop
cli
cwtl
xor
mov
test
es
fildl
mov
push
stos
cmp
dec
and
movsb
adc
xchg
stos
mul
mov
cmpsl
mov
push
ja
mov
jb
or
ret
xlat
loope
push
ljmp
sbb
push
xchg
sub
inc
ja
jne
insb
cli
leave
orl
or
pause
fists
jp
lret
cmp
gs
sub
aam
pop
sbb
sub
aam
rcrl
jmp
mov
lods
loopne
mov
fyl2xp1
scas
scas
pop
test
repnz
jge
mov
sub
lock
fst
cmpsb
fwait
sti
leave
pushf
sbb
stc
xchg
daa
xor
into
dec
mov
fisttps
andb
dec
sub
lret
fwait
mov
lcall
xchg
add
add
jae
ds
mov
add
jp
insb
xor
jecxz
lcall
mov
call
jns
testb
ljmp
mov
push
jmp
inc
popf
inc
insl
pop
jnp
adc
sbb
dec
mov
sti
int3
push
cmp
and
es
test
and
add
push
cmpsl
imul
movsb
pusha
enter
scas
fs
adc
push
sbb
out
mov
and
ret
inc
jge
xor
andb
insb
sub
cmp
loop
out
and
sti
testl
and
sahf
jo
cmc
cld
outsb
inc
dec
mov
arpl
sbbl
insl
sub
mov
push
xchg
or
in
aaa
mov
mov
mov
or
mov
xchg
sbb
mov
mov
call
mov
roll
mov
pop
xor
je
std
ret
shr
mov
push
sarb
insb
sbb
push
jae
jne
or
repz
test
mov
push
and
and
movsl
adc
je
lea
xchg
add
jle
fwait
into
sbb
inc
cmp
popa
lret
test
rcl
jecxz
push
push
es
cmc
aas
cwtl
lahf
int
shll
and
sub
aas
jb
jmp
inc
das
movsb
enter
xchg
nop
adc
lahf
leave
lea
adc
movsb
mov
xchg
movsl
adc
add
adc
sbb
mov
jmp
dec
pop
out
imul
aam
xor
and
jo
jno
decb
in
push
sbb
nop
dec
mov
ret
imul
cld
mov
fs
outsl
inc
outsb
popa
decl
data16
dec
cmpsb
add
mov
cmpsl
jae
pop
dec
fstpt
cmp
cltd
dec
ds
mov
aam
pop
mov
fxch
dec
sub
jb
ror
shl
addr16
inc
pop
es
inc
std
jns
jb
adc
jmp
cmpsl
sahf
rcll
test
pop
push
sbb
lock
push
jbe
fildll
clc
aam
mov
sbb
dec
aad
lret
dec
ljmp
xor
cmp
cmc
pop
int
je
push
push
rolb
stc
lds
shrl
pop
mov
cmp
les
inc
xor
jmp
outsl
int
inc
sbb
ds
or
fsubrl
mov
ds
ja
xor
push
dec
or
imul
gs
xchg
and
xchg
cmc
adc
pop
push
push
cltd
cmp
sbb
sub
pop
jle
imul
and
jne
clc
pusha
jp
mov
cmc
mov
scas
cmp
out
in
adc
popa
adc
rclb
pop
int
push
and
lret
repnz
jbe
sub
cmp
les
test
sub
cmp
pop
das
and
jg
popa
pop
in
push
mov
mov
das
mov
lret
fimull
and
sub
inc
adc
inc
inc
sti
imul
pop
xor
ret
sar
xchg
and
fdivl
insb
push
aaa
cli
add
orl
jmp
inc
cmp
mov
inc
sbb
push
add
lods
mov
lds
hlt
jns
pop
mulb
gs
cmc
xor
mov
lret
adcl
cmpsb
fdivs
mov
fnstcw
mov
adc
push
fldcw
stos
and
inc
popf
mov
xor
jl
jo
xchg
orl
loop
push
or
jp
in
les
and
pop
xchg
shll
adc
cli
mov
test
xor
rcrb
inc
cwtl
pop
dec
lods
jmp
sarl
stos
cmp
xchg
pop
bt
faddl
mov
pop
mov
mov
fwait
mov
divl
sarl
ficoms
xchg
shll
xchg
out
jecxz
mov
in
sbbb
shrl
outsl
outsl
ret
data16
aam
cmp
mov
aaa
mov
sbb
fcoml
int3
cli
aaa
mov
sbb
rcrb
daa
xor
inc
push
ja
xor
jp
outsl
je
adc
cmp
imul
xchg
addl
inc
push
je
inc
in
bound
in
push
lds
pop
cmpsl
aad
fnstenv
pop
add
pop
xchg
push
cltd
inc
sbb
jp
imul
lret
sub
scas
stc
fisubrl
push
jnp
dec
iret
and
cld
test
cmp
ljmp
and
xor
mov
je
out
lret
jne
addr16
mov
fldt
pop
or
vpaddsb
jmp
xchg
pushf
cli
hlt
mov
data16
leave
mov
jo
repz
sub
scas
test
cmp
cmp
sub
lret
rcr
xor
jge
push
std
ficompl
cld
push
mov
jge
and
and
pop
jle
jnp
and
push
inc
mov
mov
addb
insl
jle
imul
mov
out
inc
mov
inc
out
in
addr16
mov
cmp
insb
aad
xor
cmp
xchg
mov
push
mov
test
lds
adc
mov
xchg
add
push
adc
push
or
adc
sbb
mov
imul
dec
cltd
or
pop
ds
cmc
rclb
mov
adc
sarl
jle
jecxz
icebp
mov
adc
in
mov
add
and
iret
mov
jle
and
rcl
movsb
scas
dec
and
dec
pushf
mov
in
or
jp
movq
sbb
mov
inc
jge
xor
aam
fistpl
hlt
push
es
testl
bound
ret
test
push
dec
js
cli
inc
mov
mov
push
les
in
adc
insl
jg
xor
fisubrs
dec
andb
out
mov
xor
xchg
or
inc
jmp
unpckhps
sub
and
sub
pop
dec
mov
and
data16
inc
pop
xor
inc
mov
mov
cmc
push
repnz
dec
mov
adc
aam
adc
je
stos
pop
xchg
push
outsb
xor
cmpsb
add
js
cltd
dec
dec
loope
adc
outsb
mov
mov
lret
mov
mov
cs
cmpsb
jmp
mov
arpl
xchg
lret
je
imul
push
stc
add
mov
popf
loope
or
push
into
or
leave
xchg
jp
mov
in
mov
popa
mov
xchg
xchg
lcall
sbb
xchg
les
push
scas
inc
adc
aaa
xchg
popf
mov
int3
inc
in
jl
ja
aam
cmpsl
pop
sbb
and
jle
in
mov
and
add
mov
hlt
mov
adc
stos
push
jns
out
test
sub
cmp
into
fwait
jae
fcmovnb
in
nop
dec
lret
je
mov
mov
nop
add
dec
pop
adc
adc
icebp
in
out
ljmp
push
adc
sbb
fistpll
rcr
addr16
mov
mov
fildl
push
or
xor
lods
inc
imul
outsb
cmp
xor
lcall
inc
fdivs
fwait
test
pop
mov
mov
inc
lcall
jecxz
flds
xor
pushf
jnp
adc
shr
cmpsb
jle
aam
cmp
cmp
pop
jne
inc
pop
stos
test
loop
pop
popa
std
aaa
fwait
pop
ss
int3
std
push
ss
ds
into
inc
movsb
xor
iret
cld
fsubrs
inc
pop
xchg
jno
in
sub
dec
mov
push
addr16
push
in
shrl
pop
cmpb
mov
aas
jp
push
xlat
int
rorb
xchg
pop
fs
addr16
pop
pop
stos
ljmp
fsubrl
aam
inc
jne
jp
jae
dec
sub
icebp
mov
lods
aad
lret
movsb
or
loope
mov
enter
ficoms
ldmxcsr
int3
scas
insl
stc
lods
insl
movsl
fidivl
cmp
cmc
and
cmp
mov
ljmp
xor
lret
imul
mov
imul
lods
loopne
cli
and
inc
cmpsb
imul
mov
mov
insl
xchg
loope
mov
jno
xor
xor
divl
adc
sahf
into
mov
dec
sub
shlb
cmp
and
ror
cmp
dec
or
sbb
dec
dec
adc
xchg
notb
inc
inc
sub
sub
pop
adc
imul
aam
push
sti
dec
clc
xchg
mull
push
testb
xor
out
lret
in
shl
and
loop
add
cwtl
cmp
pop
test
inc
push
outsl
es
and
sbb
addr16
or
mov
inc
mov
js
mov
mov
aas
adc
mov
lcall
mov
sub
flds
xorl
lock
cli
inc
je
jbe
pop
mov
xchg
insl
xchg
iret
ja
and
in
cld
sahf
sbb
jbe
push
rorb
mov
sti
mov
cmp
fimull
bnd
mov
add
out
sbbl
outsl
inc
push
adc
mov
int
xchg
or
shlb
mov
stos
jg
adc
int
daa
xor
jne
adc
mov
int
testl
or
out
push
jle
push
lock
xchg
add
fisubrs
jmp
mov
cmp
inc
adc
pop
ss
xlat
mov
aaa
aas
sub
cmp
lods
mov
mov
mov
ja
xor
push
outsb
insl
sbb
cwtl
push
movsb
pushl
jno
adc
xchg
aas
sub
push
idiv
push
call
mov
das
ljmp
cmpsb
movsb
insl
cmpsl
out
fsub
and
mov
adc
loope,pt
ljmp
popf
scas
xor
push
cmp
aad
sbb
mov
add
imul
add
add
stc
cmp
sahf
les
je
insb
pop
dec
jno
jo
outsb
shrl
inc
or
frstor
out
cmpsl
imul
lods
push
jl
fdiv
aad
or
mov
sbb
das
add
xchg
dec
addr16
pop
mov
dec
jbe
loopne
pop
ljmp
mov
test
dec
jb
push
mov
or
or
ss
and
into
ds
repz
ret
xchg
and
stos
mov
outsb
std
leave
sub
pop
push
loop
mov
lahf
mov
mov
js
inc
loop
imul
jge
add
and
cmp
mov
sbb
dec
test
inc
sbb
adc
cmc
in
setbe
insb
aam
arpl
push
cmp
lods
or
dec
pushf
iret
pop
test
cltd
mov
fdivp
cmp
out
outsb
clc
inc
jge
jp
jbe
out
push
inc
jl
iret
sbb
pop
mov
dec
inc
pusha
test
and
cld
mov
mov
test
xorl
loopne
jecxz
dec
mov
add
mov
shll
or
jnp
cmpsb
sub
fld
mov
out
jg
stos
arpl
jo
jmp
loope
in
mov
and
jmp
scas
jp
xchg
ja
pop
xchg
mov
outsb
aas
and
scas
pop
cmc
fimull
adc
inc
adc
int3
into
icebp
sub
dec
adc
xchg
dec
or
sbb
nop
cmp
shrb
xor
lods
insb
mov
xor
sbb
pop
mov
sub
mov
and
dec
in
xor
lock
mov
divl
xor
sti
into
jle
push
add
icebp
out
push
fidivrs
adc
sub
notl
cmpsb
or
iret
sub
pop
push
ror
insb
pop
loopne
repnz
push
and
push
sub
mov
jmp
mov
jnp
loop
sub
and
ret
mov
call
int
pop
add
fsubp
in
sbb
pop
es
xchg
dec
cli
int
lahf
inc
jmp
lds
jb
mov
mov
push
mov
jl
add
imul
mov
cmpsb
stos
jae
xchg
movsl
lock
sbb
in
pop
stc
lods
xchg
loope
nop
rcll
mov
lea
inc
sbb
aam
inc
push
xchg
jp
out
push
push
lahf
movsl
adc
pop
loop
test
shrd
push
lret
xchg
mov
jbe
lds
sub
fs
mov
pop
inc
pusha
jg
stc
and
lds
inc
movsb
or
mov
add
in
sub
test
jmp
pop
pop
and
pop
or
xchg
xor
test
add
mov
mulb
aas
lock
pop
and
aad
xchg
jnp
xorl
or
mov
push
xchg
sahf
jg
jl
add
sbb
popf
lcall
fdiv
fs
cmpsb
hlt
and
jne
or
add
add
icebp
pop
xchg
push
mov
dec
jmp
ret
jne
jg
int
jge
jnp
dec
sub
dec
daa
inc
rcll
xchg
jns
pop
outsl
jne
push
add
rclb
adc
je
inc
push
sub
add
xchg
aam
int3
lcall
sub
ljmp
jae
cmp
int3
out
push
jmp
xor
ja
test
cmp
push
mov
push
xchg
mov
and
sub
xchg
cltd
sbb
js
sub
notb
push
movsl
sub
mov
xchg
pusha
jne
lret
xchg
pop
mov
xchg
movl
popa
mov
dec
daa
scas
jp
adcl
ss
mov
and
or
imul
fwait
pop
out
inc
daa
out
push
xchg
sbb
test
sbb
addl
mov
sbb
leave
xchg
pusha
mov
adc
lcall
adc
cs
stos
fisubrs
das
mov
out
mov
out
fiadds
mov
adc
ret
clc
jp
jno
push
dec
ss
inc
bnd
xor
mov
push
adc
in
ret
adc
int3
arpl
xchg
std
inc
jne
sarl
mov
mov
cmpsb
cltd
sti
sub
fsts
shll
jle
jnp
inc
mov
mov
repnz
inc
and
addl
loopne
outsb
fistl
fmul
loop
sarb
xchg
mov
das
movsb
xor
cmp
enter
scas
xchg
sub
int
fsubrl
mov
push
sub
adc
out
xor
arpl
dec
dec
dec
outsb
inc
jecxz
imul
cmc
in
fisubl
mov
sbb
jno
jge
mov
outsl
sub
cmp
sub
inc
push
mov
aad
dec
jp
fistpll
or
sub
cld
mov
sub
xchg
imul
push
mov
pushf
jle
add
loopne
popa
shrl
xchg
xchg
adc
paddq
xor
push
cltd
insb
mov
inc
push
jecxz
and
push
lret
out
jb
sbb
pop
xlat
sbb
xchg
rolb
mov
cmp
ja
sbb
adc
gs
sbb
repz
lahf
or
inc
push
std
and
daa
xchg
xlat
icebp
xchg
push
mov
mov
dec
shll
sbb
lea
cmp
push
out
fmulp
subb
es
mov
jge
imul
pop
jns
or
jo
lds
push
std
imul
inc
daa
or
out
rcrb
cmpsb
lods
data16
fisttps
outsl
mov
movsl
mov
out
ljmp
mov
movsb
cmp
jmp
nop
push
pop
adc
mov
dec
es
jp
clc
xchg
shlb
sbb
jns
lret
dec
pop
les
jbe
cmp
scas
jle
xor
jg
xor
enter
mov
xchg
jmp
push
insl
movsl
das
cwtl
fwait
movsb
inc
cmc
mov
les
sub
int3
cmp
scas
push
sub
insl
add
test
lock
in
push
rcrl
mov
in
cs
push
rcl
jl
mov
push
mov
aad
enter
dec
cmc
push
mov
fwait
mov
sbb
or
and
xor
dec
or
sbb
movsl
push
jge
adc
enter
pop
lcall
xor
pop
out
mov
enter
cmp
lock
popf
add
jns
bound
stos
jb
sub
adc
jnp
ret
mov
sbb
aas
loope
popf
push
orb
push
std
ficoms
cwtl
cli
dec
lcall
lock
enter
push
fwait
adc
push
adc
stos
dec
test
cmp
cvtdq2ps
xor
push
lret
js
movsl
push
mov
es
or
dec
pop
sub
xchg
test
cmp
add
pop
sbbb
fidivrs
pusha
out
ret
ss
cmpsl
sti
aaa
dec
hlt
mov
mov
adc
sub
loop
push
jbe
jno
sbb
fwait
imul
mov
imul
dec
xor
jo
dec
mov
dec
scas
ret
aaa
insb
fldenv
outsb
mov
out
imull
dec
dec
or
mov
into
in
mov
std
mov
and
sbb
movsl
push
inc
xchg
je,pn
dec
push
mov
outsl
inc
adc
pop
or
push
and
sbb
jg
in
pop
jmp
call
out
fwait
subl
jecxz
add
jno
or
inc
shrl
inc
ret
fistl
aam
lret
data16
aas
fstpt
imul
loop
data16
or
mov
lret
mov
les
dec
sbb
mov
aas
cmpsl
enter
aam
hlt
aad
aam
adc
aad
jno
push
out
sub
inc
inc
add
rcr
in
mov
pop
add
jb
bound
push
add
mov
mov
lods
jbe
movl
cmp
pop
mov
ret
xchg
cmpsl
cmpsb
stos
push
cltd
pushf
test
std
and
je
or
repnz
icebp
test
pop
pop
pop
sbb
rcll
mov
dec
adc
sub
mov
out
cmpsb
sahf
std
call
jne
mov
pop
loop
in
insb
cmp
movsl
xchg
mov
pop
aas
cs
insb
sbb
fs
test
mov
sahf
hlt
inc
inc
push
and
dec
push
jae
mov
cmp
adc
faddl
mov
or
lods
push
fnstenv
enter
int
mov
xor
jns
sub
cmp
iret
lcall
jo
and
ret
add
xchg
popf
mov
pop
jbe
stos
mov
inc
lcall
call
add
inc
movsl
jns
nop
sbb
mov
jnp
sub
cmp
jmp
push
xor
xchg
fdiv
xchg
arpl
jmp
loope
mov
mov
xor
push
mov
adc
repnz
fidivrl
cld
mov
int3
pop
lods
mov
imul
push
sbb
inc
and
add
dec
mov
mov
scas
inc
outsb
dec
sbb
jl
es
mov
cltd
loopne
in
sbb
dec
mov
inc
push
outsl
mov
fwait
mov
loop
mov
mov
lock
cmp
les
hlt
pushf
cmp
sub
add
pop
dec
insb
lds
push
or
sub
ja
lds
cmp
pushf
pop
dec
xor
and
popf
cmp
outsl
imul
and
mov
aaa
mov
pushf
mov
lahf
outsl
or
add
and
addr16
out
push
rcrl
icebp
clc
push
sahf
adc
shl
ror
jnp
cmpsl
push
enter
jge
mulb
sub
and
xchg
pop
xor
ret
or
icebp
rclb
inc
add
jb
mov
add
cld
ljmp
mov
mov
xor
jmp
call
jecxz
dec
sub
jp
call
pop
jbe
stos
inc
ret
loope
out
inc
add
xchg
inc
mov
cmpsb
mov
popa
movsl
and
fidivs
loopne
or
das
sti
stc
aas
aad
imul
dec
xchg
add
inc
or
adc
inc
jae
loopne
fs
pop
dec
scas
push
mov
outsb
jno
inc
shlb
xchg
scas
or
arpl
jnp
sub
jp
dec
scas
js
out
out
test
or
loopne
lds
and
dec
sub
mov
aad
es
xlat
or
mov
jb
jge
dec
in
fisubl
pop
jb
mov
ds
scas
rcll
stc
cwtl
leave
outsb
out
lahf
push
lea
push
push
xchg
les
dec
sub
test
mov
sub
outsb
xor
sub
mov
adc
cmp
lret
test
out
dec
xchg
nop
and
addr16
ljmp
mov
jecxz
jns
sbb
fistpl
sub
pop
push
shll
xor
or
std
jne
adc
add
fnstsw
imul
add
and
pop
leave
test
imul
in
add
loop
mov
arpl
jnp
sarb
pop
mov
add
aam
jae
pop
cmp
pop
rclb
dec
push
sbb
cld
andps
jmp
mov
lods
mov
adc
mov
dec
xor
push
hlt
movsb
push
movsb
pop
fwait
add
loop
xchg
sub
sbb
sbb
lahf
out
js
fcoml
mull
fisubl
jg
subl
arpl
mov
and
insb
xlat
fwait
out
adc
sti
adc
and
ljmp
enter
pushf
enter
fs
mov
sbb
dec
lods
insb
cmpsl
cltd
outsb
xor
enter
shrl
int3
mov
dec
xlat
jns
lock
lods
int3
adc
es
out
pop
adc
fistps
lret
xchg
cmp
mov
or
enter
cmpsb
push
insl
pop
shl
inc
stos
cmp
xchg
std
add
sub
ret
insl
dec
ret
lock
xor
leave
xlat
in
cmp
mov
movsl
pop
mov
sahf
mov
mov
repnz
insb
test
popa
adc
sti
or
ret
mov
in
or
xor
aas
dec
push
cli
cmc
xchg
mov
mov
in
into
cli
cwtl
test
repnz
adc
mov
cltd
mov
aas
insb
outsb
pop
lods
sbb
jno
cs
test
lret
jno
inc
add
mov
jbe
jae
mov
lock
sub
mov
pop
push
repz
fidivrl
cmp
in
mov
sarb
inc
fdivr
scas
lods
aaa
stc
movsl
lea
and
or
test
pop
xchg
sub
xor
aas
mov
nop
add
xor
clc
adc
rcrl
adc
notl
mov
pop
aaa
jb
cmp
rolb
aaa
shld
movsl
mov
ljmp
cs
mov
out
adc
jp
lods
sbb
push
in
jg
sbb
mov
cmp
mov
pop
jno
xlat
rclb
cli
jno
fmul
pop
call
inc
pop
lea
jbe
js
shlb
je
dec
aam
into
in
inc
push
adc
ds
insb
iret
out
je
jp
fildl
in
in
sub
mov
mov
imul
insb
call
jg
cld
stos
fcmovnbe
pop
popf
loopne
flds
dec
mov
xchg
adc
enter
jg
call
pop
cmpsb
push
cli
pusha
pusha
mov
sbb
ret
add
jp
ds
adc
out
mov
cltd
mov
cmp
pop
cmp
and
fmul
scas
pop
push
jbe
mov
out
outsb
mov
sub
es
dec
idivl
out
repnz
mov
sbb
outsb
shlb
inc
mov
sub
push
int
cmp
lahf
int3
xchg
sub
sarl
mov
andb
loope
xlat
ds
sbbb
mov
fisubs
es
mov
cs
and
into
cli
test
cmp
pop
pop
xor
rclb
jl
out
add
and
je
add
scas
push
xchg
cmc
mov
inc
in
mov
lock
movl
cmpsb
loop
ds
jle
lret
int3
lea
in
mov
xchg
cmc
ds
hlt
movsl
adc
cmp
loope
into
sti
xor
imul
icebp
outsl
scas
pop
sti
pop
imul
and
outsl
mov
shr
sub
dec
lea
lock
mov
movsb
xlat
in
push
xchg
mov
test
sub
and
mov
pop
jns
insb
dec
aaa
sahf
xchg
dec
xorl
lds
sub
mov
dec
cmpsb
add
int
shlb
inc
dec
sub
mov
leave
push
sbb
sbb
pop
add
and
jae
jae
jl
test
cmp
dec
movsb
mov
mov
inc
push
pop
rorb
pop
sbb
inc
bnd
mov
lea
aaa
xchg
jp
push
pusha
bound
inc
xchg
out
sub
fsubl
or
pushl
nop
pop
jl
jp
shr
js
lods
mov
fidivs
and
mov
push
mov
imul
or
aas
adc
add
add
adc
adc
movsl
sub
in
jmp
dec
or
mov
sbb
adc
xchg
dec
wbinvd
jns
int
mov
test
pop
xchg
push
imulb
pop
std
xor
cli
jne
stos
stos
inc
lcall
and
adc
sub
test
mov
sub
into
cmpxchg
sub
dec
sahf
push
lods
mov
push
aad
mov
shrl
mov
inc
mov
jne
cmp
adc
xchg
sahf
test
mov
icebp
outsb
aam
xor
jo
js
jg
out
xorl
xchg
aad
xchg
popa
mov
lock
lcall
mov
add
mov
andb
and
or
add
lods
das
adc
rorb
inc
xchg
push
test
add
add
jbe
icebp
data16
ljmp
and
mov
mov
pop
fldt
inc
test
out
int
nop
xor
fldt
int3
enter
adc
fnsave
and
jne
movsl
sbb
insb
xchg
adc
mov
mov
mov
js
sti
fists
hlt
mov
pop
push
pop
imul
add
aaa
iret
clc
fnsave
cmp
test
push
sti
jle
sbb
out
movsb
roll
xor
add
bound
mov
jno
push
inc
jne
add
lret
xchg
out
push
mov
pop
sahf
insl
dec
repnz
sarb
inc
jne
inc
cwtl
enter
test
scas
je
decl
ficoms
ljmp
cmp
cwtl
sbb
add
xchg
scas
ror
adc
xor
out
cmp
rcrl
jno
mov
insb
fadds
sahf
loope
jb
push
jl
imul
jecxz
in
lds
jecxz
std
mov
dec
loop
xor
pop
cli
pop
xor
push
into
cmpsb
xor
fwait
loope
bound
mov
call
add
ja
lcall
mov
mov
xor
sbb
and
aad
inc
pop
sbb
push
in
sub
mov
pop
sbbl
xor
push
fdivl
jno,pn
adc
mov
in
xor
loope
mov
push
xchg
xchg
sti
sub
fsubrl
subb
pop
jne
mov
cmc
xchg
pop
mov
inc
popa
ss
aad
shr
xchg
add
sub
lods
xchg
inc
xchg
out
mov
test
add
mov
call
mov
and
mov
xor
cmc
into
push
addb
mov
pusha
inc
inc
adc
fcmovbe
push
fmull
outsl
jb
cmc
sbbl
pop
mov
jo
sti
cs
mov
xor
inc
dec
mov
cli
push
cmp
push
push
ficomps
mov
icebp
or
push
icebp
pop
jp
mov
mov
lds
add
push
sub
pop
mov
aaa
pusha
mov
adc
xchg
sub
lret
gs
fcomps
dec
jmp
sbb
push
out
arpl
lods
outsl
mov
or
jge
xchg
sub
cld
xchg
nop
xchg
rorl
xchg
ds
xchg
sbbb
lock
mov
out
outsb
gs
push
pop
lea
enter
test
rorl
mov
cmc
push
cmp
adc
in
jmp
rclb
and
pop
xor
pop
arpl
test
or
stos
add
mov
std
into
push
sub
arpl
testl
and
lods
pop
jb
pop
or
fstpl
lcall
pop
cmpsl
sarl
mov
mov
cmp
push
loope
and
sahf
dec
jo
inc
test
pop
daa
in
cmp
jmp
dec
jl
sub
sbb
mov
mov
cmp
or
je
adc
push
lret
movsb
xor
dec
in
xchg
add
xor
pause
adc
subl
lret
xchg
push
sbb
adc
xor
or
incl
push
or
int
cmc
sub
lahf
ficomps
mov
loop
mov
scas
hlt
loop
imul
jno
cwtl
pop
jl
mov
int
dec
add
lret
add
jmp
cld
mov
fs
pop
sub
lods
inc
inc
mov
inc
mov
push
fwait
push
nop
repnz
add
imul
movsl
cmp
jmp
push
mov
mov
out
mov
cmpsl
fsub
es
adc
push
dec
mov
jg
into
mov
inc
adc
mov
or
adc
xchg
mull
sarb
pop
ficompl
leave
lahf
xchg
ljmp
pusha
mov
mov
push
mov
cmp
sbb
dec
xabort
jmp
mov
fidivs
nop
icebp
sbb
mov
sbb
into
ds
mov
sbb
dec
mov
add
stc
ret
pop
add
ljmp
loope
ret
pushf
stc
adc
cmp
xor
cmc
lods
psrlq
mov
sbb
pop
mov
cltd
pop
dec
dec
lds
insl
popa
les
xchg
or
repz
loop
dec
mov
rcr
test
lds
mov
fwait
out
icebp
cli
insb
jnp
sbb
sahf
aad
mov
clc
push
xor
decl
jle
test
and
push
and
cltd
cmp
lret
lahf
aas
mov
ds
or
int
and
fbstp
push
mov
and
hlt
ss
and
mov
mov
mov
lods
mov
imulb
xor
mov
pop
dec
inc
enter
aad
ret
add
cmp
inc
jl
pusha
jecxz,pn
inc
push
jb
lcall
hlt
xchg
sbb
adc
cmp
in
test
lahf
rorb
xlat
sarl
arpl
mov
outsb
test
jae
dec
ret
mov
inc
pusha
les
cwtl
out
or
pusha
ds
rcl
dec
jmp
sbb
mov
or
jo
stc
in
mov
mov
cmc
in
ret
cmpsb
fildll
inc
push
xchg
or
jnp
jmp
fstpt
sub
fsubr
or
push
xor
jnp
xchg
jbe
cmp
fs
pop
cmpsl
pop
adc
cmpsb
lods
test
hlt
sub
je
sahf
xchg
sbb
lahf
ffree
insb
mov
add
jno
das
loope
push
cmp
cld
add
inc
xor
or
push
pcmpeqw
mov
jge
add
movsb
adc
sub
loop
jle
sub
lods
add
fistps
cmp
cmc
lock
push
push
rcrb
xchg
adc
jmp
push
adc
call
hlt
sbb
ds
mov
stos
ret
dec
ja
repnz
inc
imul
xor
stos
mov
outsb
xor
in
aad
sub
pop
add
and
add
sbb
xchg
fsubr
in
dec
mov
push
and
cmp
pop
dec
or
jle
loopne
xor
xor
aas
ret
and
fadds
fwait
arpl
add
aam
mov
insl
push
add
mov
ficomps
push
dec
shrl
rcrb
in
adc
inc
push
jae
jle
outsb
dec
pop
bound
pop
cli
fwait
lods
mov
xchg
in
mov
jns
in
hlt
test
call
pop
sbb
repz
jp
jl
mov
out
pop
jg
and
loope
push
daa
xor
cltd
mov
in
loop
fisubrs
cmp
mov
lods
push
idivb
cmpsb
xchg
cmp
cli
jne
and
das
cmp
pop
lcall
loop
cmp
sub
mov
xlat
xor
js
movsb
aam
mov
aas
lds
add
xchg
add
into
and
sbb
jmp
dec
jge
cld
lret
dec
gs
in
lods
shl
aas
ret
and
iret
cmp
adcl
stos
jl
sub
inc
add
cld
stos
push
iret
fs
icebp
popf
xor
daa
popa
push
jo
int3
test
cltd
stc
sbb
scas
cld
jb
out
xor
mov
iret
ret
xchg
inc
push
pop
enter
in
xchg
sarb
push
cmp
mov
lcall
inc
cmpsb
imul
and
in
fadd
sub
mov
imul
cmp
or
lods
ret
push
mull
dec
inc
es
out
outsb
std
jg
aam
adc
stc
or
movsl
sub
mov
ret
sbb
aaa
push
repz
ds
push
mov
test
movsb
dec
jle
xchg
sahf
dec
addr16
in
rcr
into
mov
jb
int
fwait
or
fildl
es
or
add
bound
fcomps
in
loope
jge
fcmovne
lahf
adc
je
jb
sahf
mov
xorb
jmp
sbb
gs
push
dec
jp
xchg
repnz
test
jbe
mov
cmp
call
xor
jle
shr
in
mov
stos
push
ds
or
imul
idivb
jno
mov
mov
push
nop
mov
pop
into
mov
clc
notb
sbb
fistps
xchg
sub
mov
std
js
xchg
int3
and
adc
mov
inc
scas
mov
outsl
icebp
clc
xchg
gs
add
mov
jno
ds
icebp
xor
add
stos
xchg
dec
popa
ret
sti
jns
jle
ret
sti
sahf
sahf
or
jnp
sbb
shl
fwait
jae
nop
insb
lds
sti
daa
xchg
ss
shrb
and
mov
adc
fadds
jne
ret
add
lods
mov
insb
shr
fwait
and
icebp
pop
inc
ja
push
add
inc
imul
or
adc
loope
cmpsb
sub
repnz
sbb
in
xchg
sbb
mov
xor
loope
inc
xchg
xor
sbb
in
pop
hlt
popf
repnz
aad
jecxz
lret
pusha
or
test
in
sti
lahf
add
jae
ficompl
cmp
cld
aas
out
add
fdivrl
inc
jg
pop
int
les
fcoms
push
out
adc
xorl
jg
sbb
jecxz
dec
jp
mov
push
jle
ret
sbb
or
cmp
repnz
inc
or
mov
les
jmp
mov
or
xor
out
fistpl
fwait
call
xor
les
iret
pop
and
xor
jns
leave
push
sti
mov
or
push
and
pusha
adc
add
sbb
mov
lcall
push
in
push
ljmp
adc
pop
cmp
mov
insb
bound
pop
ret
push
lret
mov
in
cmp
aam
shrl
mov
or
out
test
iret
lret
sbb
mov
cmp
dec
jl
sbb
cmc
sbb
xchg
rorb
adc
cmpsl
out
mov
fldlg2
int3
add
jo
in
pop
mov
test
aaa
cmp
loope
in
dec
inc
je
push
arpl
pop
pop
xchg
shll
nop
and
addb
inc
mov
negb
mov
imul
push
xchg
mov
gs
dec
cltd
jo
jne
ja
mov
sbb
jge
inc
pop
dec
movsl
mov
mov
popf
mov
in
mov
pop
ret
xchg
lcall
call
push
stc
push
pop
shll
js
jle
mov
sbb
dec
jge
stos
mov
lods
mov
sub
sub
in
call
sbbl
popf
xlat
mov
stos
inc
fsubr
jb
adc
fisubrs
xor
xchg
pop
lcall
sub
orb
test
mov
call
push
jecxz
loop
repz
rolb
loopne
movsl
insl
pop
xor
sbb
push
dec
jbe
loopne
rorl
stc
or
leave
pop
stos
loopne
adc
adc
push
in
in
incb
lahf
cmp
testb
and
test
dec
xchg
mov
ja
add
dec
ficomps
adc
test
fisubrs
xchg
lahf
jl
lods
testl
sub
mov
insb
pop
test
int3
pop
pusha
jecxz
mov
rcl
imul
pop
add
and
cmp
mov
mov
into
jg
xchg
call
xlat
stos
mov
mov
sub
mov
idivl
push
jnp
or
adc
ret
dec
dec
enter
out
xchg
iret
ja
jp
or
bound
in
andl
mov
jno
sub
gs
popa
fildll
lds
jbe
into
divl
lahf
pop
inc
imul
aas
mov
sub
icebp
jnp
fstpt
adc
pop
lods
sub
pop
movsb
sbb
adc
fistpl
bound
add
ja
push
lret
cmpsl
sbb
jmp
je
dec
cli
xor
pop
push
sbb
add
push
stos
test
xor
jne
inc
test
dec
icebp
fs
push
mov
mov
call
mov
or
sbb
imul
inc
pop
fdiv
shrb
fdivs
mov
clc
jge
das
fidivrs
fidivl
push
leave
pop
negb
rorb
enter
xchg
mov
out
gs
sar
push
je
pop
outsl
dec
loop
test
leave
mov
cmc
mov
jo
fsubl
push
xchg
xor
ret
adc
and
daa
and
inc
test
cmpsl
xor
fistpl
and
and
outsb
dec
into
sub
inc
mov
leave
jl
shll
inc
fs
adc
inc
push
sbb
pop
arpl
fwait
xlat
sub
mov
push
aaa
adc
sbb
add
loope
push
ds
jp
jge
roll
js
mov
popf
loopne
xlat
or
insb
sbb
pop
mov
fstpt
iret
call
js
fsubr
mov
lock
sar
push
sti
lahf
pop
imull
lea
mov
ficoms
stos
sub
int
pop
std
push
inc
sub
out
addb
fidivrs
push
dec
xor
aam
inc
in
pop
pusha
dec
inc
loop
int3
mov
nop
mov
mov
lahf
lds
outsl
pop
push
imul
jp
cs
lret
insb
insl
rorl
ret
mov
xchg
mov
push
cltd
sbb
cmp
adc
lcall
scas
pushf
imull
or
shr
adc
jno
adc
mov
dec
xchg
mov
int
sahf
lret
aaa
sbb
or
lret
mov
dec
lea
rcll
popa
xchg
pushf
mov
out
shlb
out
ljmp
adc
popa
cmpsl
cltd
push
jge
arpl
add
push
es
bound
mov
insl
insb
aaa
insb
pop
mov
or
sti
loop
cmp
leave
jge
cmc
sahf
test
push
data16
into
es
scas
sub
or
fcompl
push
push
pusha
sbb
lret
xchg
fsubrl
repz
add
or
fistps
or
mov
sbb
andb
cmp
imul
pop
and
xor
push
xchg
push
in
arpl
mov
or
inc
scas
test
mov
jmp
jle
gs
inc
push
inc
jo
pop
or
movsl
in
cli
cmp
and
pop
inc
pop
or
sub
repz
mov
movsl
cwtl
lds
arpl
adc
aad
lret
push
je
cwtl
out
arpl
adc
mov
out
mov
dec
fisubs
js
cmp
addr16
mov
mov
popf
pop
mov
jp
int3
mov
dec
je
sub
ss
stos
in
xchg
add
call
mov
iret
xchg
jmp
inc
and
lods
xchg
lock
xchg
jg
clc
scas
dec
sbb
pop
push
fcoms
lods
mov
jns
sbb
loope
xchg
fwait
add
sbb
dec
jge
test
lock
movsl
xchg
sub
into
into
cmpsl
shl
sbbl
sbb
and
jns
xor
jne
fnsave
mov
aas
cmpsb
dec
lds
or
jno
add
sub
ljmp
lds
mov
inc
jle
push
aaa
lcall
inc
lock
push
or
push
push
orl
jle
fwait
cli
mov
test
sbb
or
sub
test
mov
jnp
dec
insb
out
push
out
push
lea
dec
push
lea
mov
inc
inc
popa
and
dec
push
out
loope
or
mov
xchg
cld
push
and
sar
and
iret
cmp
ds
mov
add
cmp
imul
clc
movsb
cltd
mov
mov
ds
push
xchg
jle
in
lea
shrl
xor
mov
push
adc
xchg
addr16
jnp
mov
pop
inc
push
mov
fidivs
test
mov
aad
test
jp
jge
jb
pop
es
rcrl
jmp
push
lods
add
enter
mov
mov
mov
lcall
rcr
mov
mov
in
mov
je
cmpb
cmp
sbbb
mov
ljmp
cmp
out
dec
scas
sub
in
nop
cmc
sbb
xchg
lret
sub
ljmp
inc
insb
add
add
fsubl
sub
xchg
mov
mov
push
insb
ss
in
pop
mov
jecxz
sbb
repnz
jbe
test
pop
ror
call
push
push
jg
mov
mov
aad
pop
orb
ss
dec
mov
dec
sbb
sbb
imul
mov
movsl
mov
test
add
flds
mov
cmp
fwait
mov
add
std
lret
movsb
inc
cld
rcll
fidivl
iret
lcall
add
xchg
stos
call
lret
mov
rorl
cld
dec
insl
lea
push
cmp
inc
popa
cmpsl
lock
mov
xlat
push
xchg
sar
ja
je
mov
jb
or
dec
pmulhw
mov
pop
add
mov
popa
add
lcall
test
jae
out
xchg
xchg
lods
push
pop
scas
mov
sbb
outsl
push
adc
add
jne
daa
dec
loope
adc
sbb
mov
fld1
push
jp
mov
mov
shrl
pop
test
push
shll
sub
add
ja
je
pop
xchg
mov
cld
push
and
cmp
mov
sub
out
movsb
lods
pop
mov
or
or
cmp
ret
mov
test
push
aaa
cmp
sahf
ja
sahf
testl
movsl
aaa
mov
ret
push
rcrl
lret
das
subl
pop
aam
jmp
dec
xchg
bound
dec
hlt
pop
js
cmp
add
mov
pop
nop
out
testl
sbb
cs
jp
inc
adc
mov
inc
sub
loop
pop
inc
dec
arpl
dec
icebp
in
aas
jb
shlb
sti
add
ja
pushf
and
inc
xor
mov
sub
xchg
or
lret
std
clc
dec
inc
int
mulb
or
outsl
jmp
xlat
jb
imul
and
inc
xor
mov
mov
push
inc
jns
push
gs
iret
into
push
dec
mov
sahf
data16
mov
nop
xchg
sbb
cmp
in
or
adc
lcall
out
cmpsl
fwait
ds
adcb
rcrl
and
sbb
idivl
or
aad
lcall
testb
lret
cmp
out
icebp
xor
xor
add
push
pop
or
inc
sarb
out
out
sbb
rcl
testb
std
add
cmp
enter
dec
cld
adc
and
dec
std
push
bnd
dec
lds
fists
pop
xor
ss
pop
sbb
ds
aad
mov
add
sub
mov
in
mov
gs
addr16
in
xchg
enter
movsb
sti
sub
addb
xchg
cli
lret
mov
punpcklbw
and
push
cmp
notb
mov
push
leave
andb
adc
fs
jae
adc
jmp
mov
mov
cmp
bound
stos
pop
fists
mov
in
jo
in
es
or
sbb
enter
cmp
mov
das
in
cli
arpl
inc
out
cmpsb
push
stc
jno
dec
jo
es
iret
out
lock
xor
test
mov
les
jno
mov
shrb
xor
adc
aam
adc
rol
push
and
cmp
std
call
es
das
jbe
movsl
mov
inc
data16
jne
sbb
gs
pop
nop
inc
and
pop
xorl
ja
clc
popa
clc
into
popa
test
cmp
pop
imul
das
sub
inc
mov
mov
test
adc
mov
cmpsb
adc
inc
sub
jl
sbbl
dec
and
loopne
xchg
cmp
mov
repz
pop
cmpsb
xchg
fbld
pop
push
jle
test
out
cmp
movsb
scas
sub
mov
add
inc
jg
inc
mov
idiv
xchg
cmovnp
scas
popa
nop
in
fsub
pop
flds
jl
jmp
cmc
rclb
adc
cmp
xlat
xor
subl
scas
inc
add
jnp
mov
cld
sub
push
mov
push
mov
mov
sbb
int
lahf
sbb
and
loopne
add
push
cwtl
leave
mov
mov
dec
push
dec
or
or
sbb
lods
push
cwtl
pop
sub
aad
pop
jecxz
popa
nop
and
test
lcall
in
xchg
adc
stos
adc
mov
in
mov
xchg
sbb
sbb
ljmp
xchg
mov
fdivs
xchg
out
jns
cltd
mov
mov
adc
xor
push
jo
call
lcall
addl
int3
add
insl
lock
mov
std
mov
lods
mov
mov
and
pop
aaa
sub
popf
call
loope
adc
sbb
lock
lods
add
push
and
or
xchg
popa
fnstsw
mov
stos
pushf
shlb
inc
sub
fptan
mov
jo
test
hlt
icebp
inc
rolb
push
mov
bnd
adc
push
xchg
mov
es
mov
mov
js
mov
jae
repnz
in
xchg
mov
sub
js
fstps
cmp
sbbb
mov
cli
jns
dec
add
roll
sbb
cmp
xchg
or
out
push
jns
stos
pop
jne
insb
xchg
cmpsb
dec
adc
ljmp
xor
shrb
scas
and
or
flds
sub
lret
outsb
inc
in
iret
cmp
adc
rcrl
adc
sub
inc
mov
inc
push
js
pop
cmp
aaa
std
and
shll
xchg
mov
push
adc
push
in
ret
test
sub
pop
adc
lods
cmp
pop
cld
hlt
shlb
lea
test
push
fnstsw
lcall
es
out
mov
notb
cmp
mov
out
mov
and
push
aam
mov
mov
jno
andb
out
in
mov
aam
add
push
stc
arpl
scas
jae
nop
mov
cmp
mov
fstp
aam
cmpsb
xchg
aam
jns
mov
into
mov
jno
pop
and
and
sub
and
mov
inc
ljmp
sub
mov
and
leave
jl
mov
sub
sbb
movsb
inc
add
mov
xor
push
mov
jmp
and
jne
or
xchg
imul
push
and
shl
push
dec
push
or
jo
out
sbb
cmp
stos
cwtl
pushf
sub
mov
nop
xor
push
popf
mov
pushf
add
sarl
cmp
fistpl
jnp
push
out
lods
aaa
inc
scas
jno
popf
clc
inc
adc
in
movsb
dec
fdivs
les
dec
idivl
outsl
mov
add
hlt
fcmovbe
mov
lahf
push
add
fnsave
test
ljmp
sub
mov
mov
ljmp
orl
xchg
repnz
inc
es
sbb
ss
xchg
push
ret
adc
jb
sahf
xchg
repnz
movsl
vandpd
iret
fmull
xor
push
addr16
adc
arpl
xchg
jg
mov
mov
mov
fnstenv
rcrb
xlat
cmp
adc
sahf
mov
ffree
loope
lret
mov
jno
aaa
push
pop
es
scas
addr16
fiadds
and
sbb
clc
les
cltd
fistps
jg
sbb
or
xchg
sahf
cmc
ja
in
icebp
xchg
fidivs
jl
pop
test
push
std
pusha
repnz
push
mov
insl
bnd
inc
mov
pop
test
mov
imul
and
fnsave
cmp
popf
andb
mov
imul
arpl
mov
adc
idivb
sub
loop
pushf
icebp
inc
test
xor
fs
test
push
popf
popa
push
push
fidivrl
fcoms
jmp
int
lcall
xchg
pop
sbb
inc
iret
or
rcrl
das
enter
mov
lock
pop
loopne
dec
mov
dec
jle
jo
fisubl
adc
mov
mov
cli
cmp
dec
push
xlat
add
mov
add
xchg
push
xchg
orb
lock
shll
ret
mov
xchg
mov
and
std
lds
push
mov
push
stos
xchg
inc
fwait
dec
add
pop
xchg
mov
icebp
adc
filds
fmul
lods
loop
popl
cmp
pop
sbb
lcall
scas
and
and
testb
dec
aaa
mov
stos
scas
imul
idivl
and
cmp
jg
inc
sbb
jns
push
gs
shlb
sub
mov
push
fwait
cmpsb
pop
xchg
xchg
mov
pop
pusha
push
mov
flds
dec
test
dec
cmp
pop
adc
dec
mov
mov
jle
test
test
shlb
nop
pop
popf
and
dec
fs
adc
dec
arpl
mov
sbb
les
add
push
mov
stc
xor
loope
and
aam
push
push
sub
inc
dec
push
jl
adc
aas
push
stos
cli
ljmp
hlt
ljmp
inc
or
sti
repnz
dec
mov
mov
loope,pt
fsubs
pop
in
adc
pop
jg
xchg
or
rcll
mov
cld
lock
popa
dec
cwtl
push
cmpsl
and
mov
adc
bound
xchg
js
xchg
out
add
add
and
cs
sbb
sbb
ret
ss
adc
xchg
cmp
dec
les
mov
sbb
addl
in
outsb
int
std
xor
xchg
outsl
sbb
mov
push
sub
jp
sar
cmp
push
cwtl
rorb
fdivp
cltd
jnp
test
sbb
loopne
iret
jge
dec
or
push
sbb
sahf
lods
repnz
dec
ret
cmc
mov
push
in
add
pop
rsm
mov
mov
aaa
imul
sahf
push
call
std
xchg
cld
add
dec
in
jo
sub
ret
mov
lahf
sbb
add
push
dec
pop
loop
int3
adc
jno
jmp
push
sub
ja
insl
and
je
xor
test
sub
int
int
mov
aaa
mov
lcall
mov
jg
sub
fs
adc
mov
mov
pop
in
sbb
js
push
nop
adc
jae
pop
ficompl
stc
mov
aad
mov
je
setne
xor
test
jbe
adc
mov
in
sti
push
mov
imul
or
jmp
mov
mov
mov
lret
xor
int
push
dec
dec
inc
insb
subb
xchg
and
mov
or
loopne
es
dec
fsubl
adc
sub
and
call
mov
pop
push
fmul
bound
mov
or
lahf
repnz
icebp
jae
xchg
stos
jbe
sti
add
inc
mov
insl
mov
and
and
or
mov
push
popf
repnz
ss
jle
leave
dec
mov
cwtl
or
jle
and
sub
mov
cmp
push
clc
jge
xchg
push
lods
sbb
lcall
pop
sub
mov
fsubrl
add
movsl
adc
add
lods
lcall
add
jbe
jns
aam
mov
push
adc
mov
push
out
push
xor
sub
aad
lahf
and
ret
ret
push
jp
rcll
rcll
push
mov
dec
rcl
cli
cmp
add
push
or
xchg
out
fmul
adcb
push
fadd
test
aas
andl
test
add
inc
push
repnz
inc
bound
xchg
iret
pop
iret
pop
mull
xor
fcomp
das
mov
imul
and
sub
stos
sub
inc
mov
test
xchg
add
pusha
jge
mov
ret
jecxz
lock
outsb
add
adc
movsb
dec
mov
mov
push
and
popf
lahf
sub
ja
mov
iret
arpl
push
clc
in
mov
xor
in
lahf
stc
shrb
sbb
mov
xor
ret
push
sub
ja
add
sbb
xor
inc
mov
lcall
fmulp
in
cld
ret
aaa
dec
ftst
or
or
jl
addr16
mov
add
mov
cwtl
lahf
xor
or
aas
mov
pop
aaa
dec
rorb
sti
nop
repnz
mov
scas
or
outsl
xlat
and
lods
fisttpll
test
imul
pusha
lods
notl
gs
mov
adc
rcr
cmp
or
mov
outsb
stos
pop
test
xchg
aam
pop
jne
or
inc
dec
and
mov
jo
in
lahf
cmp
test
rol
stos
pop
fwait
les
sbb
push
leave
in
adc
fwait
mov
negl
jmp
mov
and
insl
cmc
fwait
das
popa
dec
sbb
jge
or
negb
push
sbb
dec
repnz
int
ds
adc
loopne
mov
aam
in
pop
xchg
mov
fs
add
gs
add
cmp
movsb
mov
inc
ds
fnstenv
repz
mov
popa
pushf
add
bound
cs
push
cmp
adc
jge
bound
sub
jo
fs
inc
aas
daa
stc
mov
mov
or
in
ret
inc
xchg
add
xchg
fadds
cmp
cli
cli
je
incl
mov
pcmpeqb
pushf
adc
mov
fcmovb
sti
mov
fisttps
and
or
xchg
mov
inc
mov
sti
sti
adcl
fmul
mov
dec
ror
pop
outsl
cmpl
and
jnp
push
scas
cmp
push
push
pushf
shll
loopne
hlt
in
lahf
aaa
int3
out
mov
inc
sub
jp
mov
in
xchg
and
jl
or
pop
mov
push
repnz
mov
push
add
aam
push
sbb
or
sti
stc
sbb
in
ror
cmpsb
shr
push
adc
jl
mov
lcall
mov
dec
jne
cmp
sub
das
fldl
xchg
shlb
jle
rorb
add
js
xchg
jp
inc
mov
out
jo
test
aam
int3
fbld
scas
jge
rcrb
bound
dec
mov
iret
rcrl
mov
lods
aas
mov
lret
cli
fistpl
pop
insl
sahf
dec
jbe
cltd
dec
movsb
nop
xor
adc
xor
imul
cmp
scas
in
xor
pop
inc
jns
andb
xchg
fs
scas
push
push
pop
push
xor
sub
scas
inc
xchg
sub
fmul
mov
mov
cld
fistpll
rcrl
test
adc
or
pop
push
or
adc
aam
xchg
xchg
pop
xchg
shlb
cmp
jne
xchg
xchg
jp
iret
mov
sbb
vcmpss
ljmp
add
dec
leave
subb
mov
inc
xor
jle
ret
cltd
enter
lds
cmc
jle
rcl
orb
adc
push
dec
popf
cltd
xchg
mov
or
add
nop
das
test
shrb
mov
popa
mov
adc
jns
out
mov
cmpsb
cmpsb
dec
mov
jb
xor
adcb
clc
xchg
xchg
pop
add
add
push
push
loopne
test
adc
mov
neg
ja
cmc
pmaxsw
xor
mov
or
jl
cmp
sub
add
and
in
jg
inc
leave
jbe
adc
add
xor
in
and
pop
push
xor
pop
inc
and
mov
jecxz
repz
mul
pop
mov
hlt
cmp
sbb
dec
loopne
iret
jmp
push
andb
test
movsl
ret
addr16
hlt
ss
push
leave
push
rcr
and
das
xchg
sti
push
clc
ja
sub
push
mov
cmpsl
add
dec
xor
xor
add
sbb
mov
loope
jae
inc
addl
ret
mov
bound
jo
call
jbe
mov
fiaddl
xchg
xchg
test
sub
data16
push
push
pop
lock
js
ffree
scas
hlt
lret
ljmp
push
ljmp
cmp
jno
jp
addr16
dec
dec
pop
fdivrs
xor
sub
int3
inc
xchg
testb
adc
lods
push
jl
mov
or
inc
dec
dec
outsb
or
jne
insb
adc
adc
cmp
jne
neg
inc
loope
mov
mov
mov
aaa
and
dec
mov
cmpl
dec
adc
and
and
lods
or
insl
jmp
dec
pop
cmp
sbb
dec
movsl
cwtl
sarb
mov
ret
or
mov
xor
inc
shrb
or
sbb
or
decl
ret
inc
jl
push
cmpsb
add
test
test
cld
mov
add
cmp
insl
jns
mov
or
out
repnz
enter
xchg
mov
lds
jge
fidivs
shl
mov
xchg
mov
int
jge
cmp
sub
pop
inc
fidivl
jno
enter
clc
pop
fs
push
fs
or
dec
xchg
ret
adc
clc
xchg
jns
push
and
pop
mov
pop
mov
andl
idivb
add
imul
pop
mov
loop
push
scas
ljmp
fcos
call
push
mov
gs
inc
aas
pop
xor
jmp
stc
ret
insl
mov
sti
pop
outsl
or
out
ljmp
inc
mov
and
push
mov
repnz
jnp
adc
aas
cmove
pop
test
push
cmp
mov
leave
ja
xchg
bound
cwtl
stos
fistps
nop
leave
add
jl
push
popf
mov
in
insl
rclb
bound
adc
sbb
jmp
cld
lock
push
sbb
mov
push
pop
push
or
mov
push
arpl
inc
cltd
lret
fs
fisttpl
sub
and
jecxz
inc
mov
lea
sahf
repz
adc
sbb
xor
rorl
lret
test
mov
xor
enter
or
inc
or
xchg
mov
xor
xor
mov
sti
decl
cmp
pop
js
and
or
inc
add
jle
dec
or
pop
jo
outsb
mov
xchg
add
leave
dec
jmp
rcrb
add
pop
or
imul
mov
ja
and
fnsave
mov
iret
add
daa
cmp
and
js
daa
sbb
jo
xor
js
dec
shl
mov
pop
lcall
out
pop
xchg
loopne
fdivrs
test
mov
gs
movsl
ret
jae,pn
cltd
nop
adc
mov
push
mov
push
sub
inc
push
add
jle
jne
cli
pop
adc
pop
sub
fldcw
in
mov
pop
sub
adc
sbb
sub
mov
movsb
lahf
insb
cmp
push
das
jecxz
sarb
lods
sarl
jmp
sub
and
jns
out
xor
add
shll
mov
clc
sub
xchg
mov
dec
in
ficomps
sub
sbb
cld
fisttpll
pop
dec
sahf
pop
popa
push
cmp
cmp
gs
int3
cli
jnp
or
jmp
adc
cmc
fnstenv
push
wrmsr
ret
jo
pop
into
and
sbb
xor
insl
jle
insl
loop
pop
dec
int
cmpl
imul
loop
lods
xchg
rclb
add
cmp
shll
xchg
aaa
or
int
mov
lods
outsl
lock
cwtl
lret
cli
xor
gs
lea
adc
push
test
mov
pop
loopne
stos
xlat
repnz
mov
fistpll
sti
bound
push
and
nop
pop
lock
mov
dec
jns
test
mov
pop
sub
outsb
xchg
jno
int
in
fs
mov
mov
cmc
sub
xor
mov
je
mov
sub
jbe
movsb
es
cld
mov
jne
fildll
ds
xor
repz
int3
xor
cli
add
js
leave
xor
ret
repnz
aad
adc
mov
sub
sub
cltd
das
cmp
xchg
sbb
xchg
inc
rolb
push
dec
jnp
sbb
inc
push
icebp
movsl
cmc
lea
jb
imul
out
aad
sub
sbb
insl
in
mov
adc
lret
imul
xchg
enter
lock
xlat
aad
es
outsb
test
or
in
mov
mov
jae
cmpsl
mov
or
std
and
test
sub
and
leave
inc
sub
popa
xor
pop
stos
push
ljmp
fdivp
scas
in
repnz
dec
mov
in
mov
mov
ficoms
fistpl
js
adc
jnp
sbb
xchg
jno
mov
cmp
inc
aaa
pop
ja
cmp
dec
pop
sub
and
add
sbb
xchg
data16
mov
mov
cltd
mov
xchg
imul
sti
jo
inc
sbb
push
stos
or
lret
es
cmc
int
jg
pop
std
idivb
mov
std
ss
xchg
pop
arpl
mov
cli
jns
xor
xchg
lret
cmp
dec
test
popa
mov
ljmp
xchg
lret
add
rep
mov
stos
cmp
fsubrs
push
rcll
in
inc
int
add
sbb
sahf
mov
rorl
fcmovnu
add
pop
add
rolb
gs
cwtl
mov
out
xchg
in
roll
xchg
aad
ficoms
jle
xor
gs
push
mov
lahf
adc
sbb
sahf
loop
out
sbb
add
lcall
fwait
mov
sahf
adc
jb
sub
push
fsts
pop
add
or
out
scas
call
loope
das
push
js
pop
clc
cs
leave
jno
xchg
adc
insb
xchg
andl
xor
imul
pop
mov
xor
inc
cmpsl
mov
push
loopne
pop
mov
add
aad
icebp
scas
push
mov
loope
xor
iret
ror
xlat
insl
test
inc
xchg
pop
cli
jne
sub
push
mov
call
adc
das
cs
aas
add
inc
jecxz
push
cmp
sbb
outsl
outsl
lods
xchg
ss
in
fwait
lods
push
notb
cmp
ljmp
cltd
leave
sbb
jne
call
daa
or
cmp
mov
lret
jnp
sub
pop
jl
test
xor
inc
mov
cltd
je
inc
inc
popa
inc
fldcw
mov
mov
xor
mov
inc
imul
and
outsl
cli
cmp
xor
dec
lahf
roll
and
das
clc
mov
insb
pop
push
loopne
mov
inc
inc
pop
imul
adc
adc
loop
jle
scas
in
adc
sarl
xchg
ret
adc
sti
cwtl
data16
jne
js
cld
ss
aam
fnop
ret
outsl
mov
test
jno
pop
cmc
xor
cli
test
loopne
xchg
sub
push
inc
inc
fs
fstpt
sbb
mov
sub
xchg
test
xchg
in
lods
inc
push
shlb
inc
push
imul
fwait
sub
dec
popl
loop
dec
dec
out
lods
jae
nop
xor
into
sub
aad
punpckhwd
xchg
dec
loope
movsb
jnp
mov
nop
pop
mov
insl
rcr
clc
push
jne
add
cmp
lods
scas
push
dec
rol
out
cmp
inc
xchg
aam
movsl
iret
adc
cld
cmp
cmc
ds
in
dec
push
outsb
loope
shlb
pop
jnp
xchg
pop
into
inc
mov
cli
and
scas
aas
loopne
pop
hlt
test
sub
inc
cli
int
jge
pushf
xlat
xor
aad
decl
xorl
pusha
mov
ret
aaa
push
mov
cltd
cmpsl
mov
dec
and
jnp
sub
out
leave
xchg
mov
daa
jle
movb
pop
xchg
pop
jbe
iret
out
xchg
ja
sub
int3
adc
pop
test
mov
jno
rcrb
cmp
call
cmp
xor
push
or
sbb
push
pop
mov
adc
or
jne
add
pop
jne
mov
and
sbb
dec
add
xchg
and
fimuls
dec
sbb
adc
push
jge
mov
cmp
sub
push
mov
push
inc
sbb
dec
add
adc
or
jp
xchg
cmpsb
push
scas
arpl
jno
push
mov
daa
cmc
lds
push
mov
xchg
das
push
adc
jb
rcrl
test
js
lret
sub
adc
xor
enter
xchg
jnp
add
pop
xor
mov
inc
mov
pop
inc
loop
subb
sub
mov
jno
dec
xchg
pop
adc
and
jno
jae
enter
mov
movsl
push
out
cli
sub
mov
mov
pop
scas
imull
pop
or
sbb
ret
out
sbbl
sbb
popa
jmp
inc
adc
push
pop
mov
xchg
cmp
jns
mov
xor
sarb
xlat
cmc
jg
dec
or
lahf
xchg
pop
into
inc
cmc
pop
adc
ret
mov
cld
lds
mov
jp
mov
arpl
push
add
fistpl
and
and
stc
daa
adc
cmp
push
push
std
loopne
testb
pop
push
stos
rolb
test
jp
bound
rclb
inc
cmp
ret
jl
nop
jp
rclb
mov
outsb
outsl
xor
loope
pop
xchg
push
ljmp
cmp
clc
les
mov
push
out
xchg
mov
test
inc
jo
leave
popf
ficoms
cmpsb
movsl
rorl
mov
add
test
repnz
cmp
shll
xchg
or
dec
mov
jp
cwtd
inc
xchg
lods
lock
lret
xchg
mov
outsb
out
xor
jg
add
jl
std
mov
loop,pn
adc
jo
sub
sub
pop
insb
xchg
loopne
add
sar
jno
mov
movsb
cmp
sbb
mov
xor
push
shrl
cli
daa
sub
loope
mov
cmc
xchg
enter
pusha
arpl
sbb
inc
dec
add
push
or
scas
insl
repnz
inc
int3
dec
insb
sbb
cmp
adc
mov
jo
insb
mov
filds
movsl
ljmp
sub
incb
jb
ljmp
jae
int3
add
jge
test
rorb
scas
dec
cmpsl
mov
out
cltd
out
jb
and
dec
clc
adc
sbb
das
call
jmp
mov
or
xchg
jmp
repnz
outsl
addr16
dec
shrl
lret
and
jnp
mov
and
insl
xor
xchg
inc
fptan
jmp
cltd
loop
lea
lds
xchg
mov
push
push
add
jle
pushf
stos
push
jge
ds
sbb
lret
lods
mov
sbb
cmp
fs
pop
mov
xlat
test
xor
mov
les
add
push
add
or
push
stos
mov
cs
push
mov
jl
sub
add
mov
inc
pop
xor
lea
jb
adc
movsl
bound
pop
mov
jle
push
jle
pop
adc
add
fs
push
mov
jbe
and
mov
fstpt
pushf
test
sub
nop
popa
stos
dec
push
jne
sbb
push
push
das
pusha
fwait
mov
lahf
or
sarb
jo
xor
mov
xor
push
icebp
inc
scas
popf
push
scas
xchg
xor
lret
and
push
xchg
pop
hlt
lret
test
shr
test
mov
inc
inc
sub
xchg
dec
mov
push
stc
rolb
gs
lcall
das
imul
add
mov
pop
xchg
sbb
idivl
jp
add
lods
push
jp
dec
and
sub
push
xor
mov
faddp
pop
lahf
daa
cs
mov
fdivs
and
test
loope
in
adc
in
and
fbstp
outsb
pop
lahf
sub
dec
stc
lahf
jo
xchg
inc
xchg
pop
mov
insb
mov
insl
test
jmp
test
push
add
jp
mov
cmp
lea
jle
xchg
dec
xchg
push
roll
cmp
pop
iret
testb
jecxz
mov
inc
fists
dec
push
iret
jo
or
pop
fsts
cld
cmpsl
daa
int3
scas
add
scas
jge
dec
lahf
sti
iret
and
mov
pusha
inc
jecxz
in
jo
loopne
cmp
and
or
jmp
and
and
js
inc
adc
mov
jecxz
add
mov
pop
ljmp
jge
sub
popf
das
dec
outsb
cmp
jp
and
jo
and
lds
bnd
xor
popa
jp
jl
loopne
cmp
out
hlt
sub
pusha
sub
push
and
cmp
cmp
lds
jns
xor
mov
hlt
mov
add
pop
xchg
push
xchg
inc
adc
pop
aas
paddusw
xor
out
std
mov
mov
mov
jge
sti
jge
mov
sbb
mov
adc
std
mov
mov
jb
lret
nop
mov
jmp
inc
jnp
sbb
stos
shl
or
or
inc
xchg
bound
sbb
jae
sub
mov
das
movsb
cmp
out
and
xchg
dec
dec
pop
mov
leave
jecxz
push
cwtl
ret
adcl
in
lcall
push
negl
cmp
test
inc
insl
pop
sbb
in
aaa
lods
xor
loop
jle
jle
sbb
hlt
lret
negl
adc
push
cmpsl
mov
adc
push
mov
mov
jg
fnsave
inc
arpl
cmp
pop
add
lods
and
inc
imul
vpmulhw
cmp
pusha
lods
jl
mov
sbbl
dec
fisttps
movsb
xor
ror
xor
jp
pop
xchg
dec
cs
dec
lret
ficompl
scas
jge
pop
lret
and
adc
sti
pushf
adc
mov
aad
mov
cmp
fwait
jb
leave
cmp
add
sbb
fwait
scas
sub
jg
adc
cmp
pop
pop
jle
mov
pop
mov
cmp
sub
mov
rcl
setnp
mov
or
out
push
and
push
sbb
das
lahf
cmp
inc
or
decb
lods
ljmp
leave
pop
cmp
dec
int
mov
push
cmp
sbb
jmp
or
insl
adc
negb
push
aas
xor
adc
bound
lock
xchg
lret
leave
jecxz
mov
idiv
rcrb
mov
insl
or
stos
addb
dec
loope
mov
adcb
mov
bound
popf
mov
push
repz
sbb
and
bound
sub
js
fwait
or
mov
data16
dec
dec
push
daa
insb
je
adc
and
test
ljmp
loope
lcall
dec
xchg
movsb
adc
jl
xchg
mov
inc
fimuls
adc
es
fwait
movsl
faddl
mov
sbb
ret
jne
dec
jns
xor
push
out
xchg
icebp
add
xor
imul
and
pop
fmuls
in
inc
icebp
xchg
mov
fsubrs
iret
jae
adc
lods
mov
ds
push
push
int
mov
sub
call
xchg
mov
sti
mov
pop
shll
and
pop
cld
xchg
mov
push
dec
jle
aam
scas
mov
jo
jne
sub
aad
xchg
fistl
fucomp
in
push
and
sarb
aas
test
jl
shr
adc
aaa
cmp
fmuls
mov
push
andb
enter
or
push
adc
or
sub
sbb
add
xchg
lea
fistl
inc
sub
cmp
repnz
out
in
clc
adc
stos
inc
lea
cmpsl
mov
mov
mov
stc
pop
mov
imul
das
insl
movsb
popa
or
or
adc
push
outsl
daa
inc
faddl
or
xor
push
testl
and
imul
mov
inc
xchg
mov
mov
pop
cs
mov
dec
les
cmc
jne
movsb
xchg
cli
xchg
hlt
inc
icebp
pop
inc
lods
push
xchg
push
int
pop
cmpsb
mov
and
pop
mov
aas
test
and
outsl
stos
leave
jns
jg
scas
sarl
stos
jns
ljmp
xchg
lds
xor
jb
cli
je
push
pusha
orl
adc
pop
cmp
popf
add
jmp
sub
jno
add
in
mov
xorl
xor
mov
mov
test
mov
mov
sbb
fpatan
test
icebp
adc
jns
and
push
negb
and
adc
pop
xchg
adc
sbb
decb
cmp
pop
movsb
daa
add
push
testb
enter
mov
cwtl
movsb
cltd
repnz
jecxz
xchg
cmp
pop
cwtl
pop
jmp
xor
aaa
sahf
mov
inc
xchg
sbb
icebp
fstps
xor
xchg
push
push
or
aad
fists
mov
mov
repz
pop
outsb
cli
loope
xchg
mov
clc
dec
xor
aaa
inc
cmp
shlb
test
insb
jl
iret
mov
push
cmpsl
sub
pop
jo
jno
lods
pop
andl
push
add
jl
xchg
mov
push
imul
xor
cmp
and
xchg
shrb
outsl
xchg
hlt
sub
fisttpl
inc
pop
repz
jmp
adc
fnsave
adc
ret
in
dec
test
or
roll
inc
push
mov
ja
sub
enter
cmpsl
sbb
andl
and
sbb
in
out
sub
jle
lret
dec
enter
sbb
cltd
insl
mov
or
cli
add
jns
mov
sbb
std
stc
sub
sub
pushf
mov
cwtl
cmc
loopne
and
and
inc
test
aas
or
xor
pushf
dec
andb
repz
rcll
scas
sub
lds
mov
cmp
mov
mov
add
lret
sbb
aad
jns
stos
sarl
xchg
pop
filds
or
pop
fists
jl
or
adc
adc
dec
cmpl
popf
sub
lcall
push
cmp
xchg
cwtl
maxps
loop
add
adc
loope
xor
insl
cs
aam
push
scas
jns
push
enter
mov
add
mov
or
pop
inc
pop
cmpsb
js
dec
inc
imul
insl
icebp
adc
ret
cmpsb
or
outsl
mov
lcall
jmp
loop
bound
rcll
mov
add
es
xchg
inc
sbb
mov
jmp
inc
cli
js
fdivrp
mov
mov
int3
imul
leave
push
outsl
popa
mov
test
mov
dec
pop
insl
incb
jbe
mov
and
sbb
mov
aaa
enter
repz
icebp
and
adc
das
mov
ds
fucomi
es
mov
imul
imull
int3
pusha
jbe
scas
push
sbb
or
test
test
es
dec
fcmovb
and
push
scas
inc
and
and
cld
out
icebp
mov
jbe
cmp
mov
push
push
cmp
test
adc
push
inc
out
cmp
mov
lock
rol
sub
mov
dec
jecxz
or
or
inc
in
mov
jo
mov
sbb
dec
or
fdivrl
pop
in
pop
fsub
sub
outsl
cltd
cmp
adc
mov
add
sub
inc
sub
lods
mov
xchg
adc
stos
add
stc
sahf
xor
xchg
out
cmpb
addr16
ficoml
movsl
jno
push
sub
and
xchg
aaa
xorl
push
mov
cmp
inc
insl
sub
loopne
jno
sbbb
and
push
int3
mov
in
rorl
shll
je
adc
jno
jae
scas
stos
jmp
scas
sub
push
push
ss
stos
hlt
sbb
xor
and
sub
pop
sbb
dec
cld
repz
push
push
jo
out
inc
mov
inc
fidivl
gs
fwait
and
test
stos
inc
add
lcall
sti
fsubrs
ja
insb
lock
aas
lcall
push
add
sub
and
in
pop
sbb
popa
out
cwtl
add
jnp
lods
fiadds
add
push
cmp
xchg
loope
xchg
rorb
mov
stos
jno
inc
mov
xchg
outsb
sub
bound
xor
dec
cs
mov
incb
mov
xor
xchg
iret
cmpsl
movsl
frstor
and
ret
inc
pop
xchg
ja
cltd
into
fs
push
push
push
popa
inc
or
mov
aas
imull
cltd
lea
leave
dec
mov
cld
or
mov
loopne,pt
adc
push
inc
xor
mov
xchg
adc
inc
cmp
imul
fistpll
push
mov
mov
jg
mov
lret
inc
ret
popf
fwait
mov
pushl
push
subl
cli
adc
pop
rcl
sbbl
push
in
cwtl
das
sub
outsl
out
stc
adc
dec
dec
repnz
adc
fstpl
cmp
xchg
sahf
pop
movsb
push
dec
daa
mov
pop
gs
inc
out
or
xorb
push
push
push
sbb
mov
push
out
jbe
and
jle
sahf
rol
or
clc
xchg
cmpsb
mov
pushf
cmp
sub
sub
call
jo
pop
mov
fisttpl
adc
push
pop
imul
fs
mov
mov
mov
scas
test
mov
mov
pop
push
cmp
test
push
xchg
aaa
jle
cmpsb
mov
lock
jl
mov
sbb
push
pop
leave
mov
adc
dec
pop
and
add
ljmp
mov
hlt
jae
hlt
cmp
lds
inc
insl
dec
adc
gs
push
sub
call
inc
ljmp
and
sub
aam
xor
aaa
popa
stos
dec
rolb
xor
sbb
divl
pop
gs
jb
call
scas
xor
subl
inc
cwtl
jp
push
push
cmp
add
loope,pn
or
or
je
adcl
into
into
sub
ljmp
cmpsb
nop
addr16
cmp
jle
xchg
dec
repz
outsb
lret
jae
lea
test
pusha
mov
pop
mov
jns
jbe
push
push
inc
pushf
mov
jb
jecxz
jbe
mov
dec
or
sub
jg
lods
sbb
mov
js
mov
ja
dec
ss
sub
cld
and
or
cltd
mov
xor
in
aas
mov
mov
add
sbb
test
xchg
or
jns
outsb
icebp
idiv
lret
out
sbb
push
mov
jae
daa
dec
jno
mov
mov
xchg
sbb
rolb
mov
fadd
jb
scas
pop
add
mov
mov
push
push
mov
cmp
xchg
in
mov
jnp
sub
ficoms
mov
outsb
loope
sarb
jns
xor
cmp
mov
jmp
mov
out
jle
sub
dec
xor
and
sbb
insb
cmpsl
popf
int3
ret
mov
push
adc
scas
gs
mov
sbb
jns
push
or
js
xchg
sub
out
pop
add
mov
jecxz
scas
xchg
or
mov
int3
jne
mov
adc
sbb
mov
testb
cld
cltd
je
jno
dec
push
scas
cltd
fldenv
adc
mov
pop
adc
xor
jae
sub
pop
cmp
decl
mov
mov
dec
inc
mov
sub
loopne
push
dec
cmp
testl
dec
mov
adc
das
rol
fnsave
push
push
ret
pop
and
mov
mov
xchg
xor
bound
pop
daa
or
int3
or
mov
mov
aam
in
mov
jbe
pop
mov
and
icebp
dec
sub
insb
mov
add
into
orl
sub
push
pushf
mov
and
in
add
pushf
pop
adc
divb
push
jmp
insb
call
inc
insl
scas
xchg
and
jo
or
pop
sub
cwtl
push
movsl
add
fcom
lret
shlb
pop
sbb
fs
mov
dec
inc
clc
or
pop
loop
sbb
in
lahf
je
sbb
shlb
add
test
cltd
imul
pop
ds
fildl
outsl
dec
pop
popl
jbe
or
lret
popl
cmp
lcall
movsb
xor
leave
mov
jmp
ret
mov
es
ret
dec
push
out
movsl
aas
loopne
into
xor
shrb
mov
pop
inc
iret
mov
adc
gs
data16
or
pop
dec
mov
les
or
adc
cmc
into
insl
daa
add
adc
insl
xlat
iret
cld
sbb
sub
add
aaa
mov
jno
jae
sbb
clc
mov
dec
hlt
scas
mov
mov
int
mov
jp
sarl
jp
push
fs
cmpsb
rclb
pop
push
sub
xor
sub
xor
pusha
and
cs
mov
pushf
push
xor
cmp
sub
mov
aaa
or
mov
std
fwait
popa
xor
inc
adc
hlt
or
xor
and
es
gs
push
pop
loop
mov
xchg
push
mov
cwtl
ljmp
ret
mov
jb
xchg
ds
in
adc
enter
lcall
insb
mov
aam
xor
mov
inc
int3
insl
xor
aas
ljmp
rolb
adc
cmpsl
mov
mov
loopne
xor
cli
add
dec
inc
inc
je
dec
out
in
fwait
out
je
in
fcomps
test
clc
pop
fucomi
loop
mov
sahf
movsb
cmp
mov
hlt
gs
push
movsb
sbbb
das
or
mov
lahf
shlb
int
test
loope
in
loop
dec
dec
push
addl
mov
xor
arpl
cmpsb
loop
cwtl
adc
pop
adc
mov
sub
xchg
xchg
les
jmp
xchg
cltd
lds
xlat
or
js
dec
fcomip
filds
dec
inc
aad
pop
push
stos
or
aas
mov
dec
sbb
lret
mov
mov
mov
xchg
lret
dec
std
or
ja
xchg
jp
and
lahf
xchg
cmpsl
dec
cmp
sbb
push
push
aas
inc
inc
sbb
inc
int
push
cmp
jns
and
mov
fstl
addl
gs
jge
loopne
jmp
sub
push
mov
push
xchg
sbb
pop
test
out
cmp
pop
mov
or
out
out
icebp
adc
hlt
jno
jmp
stc
sub
push
repnz
divb
clc
xor
out
lea
cmp
mov
ljmp
aad
mov
clc
sbbl
repnz
icebp
popf
sub
fdivs
add
jno
sub
sbb
sbb
jae
inc
xchg
adc
xor
mov
xor
sub
mov
jns
mov
aaa
pop
fmuls
jbe
insb
outsl
xchg
xchg
insb
ljmp
clc
pop
icebp
into
mov
mov
cmp
daa
sti
and
mov
xor
movl
mov
cmp
insl
stos
mov
in
mov
arpl
mov
mov
lea
in
lods
push
dec
push
or
mov
push
sub
out
jne
dec
popa
mov
out
rolb
test
sti
cmp
cli
xor
call
mov
pop
fsubl
xor
iret
push
xchg
call
pop
xor
jns
jbe
mov
scas
shlb
ret
pop
push
inc
and
cs
jne
pop
arpl
sahf
imul
xor
mov
adc
xor
mov
and
outsl
push
cmpsb
and
add
and
dec
pop
daa
mov
mov
idivb
dec
hlt
dec
pop
mov
xchg
cmp
pop
outsl
out
inc
clc
outsb
bound
rclb
scas
lock
mov
mov
fldt
inc
cmp
inc
pop
sbb
sub
lcall
or
js
sbb
sbb
ja
jb
insl
imul
stos
mov
pop
mov
add
fadd
outsl
sbb
adc
shrl
js
xor
jge
inc
fwait
inc
in
sub
sub
xchg
out
enter
lcall
adc
pop
mov
and
inc
call
mov
pushl
jo,pt
sbb
sbb
into
add
cmc
nop
push
cmpsl
pop
dec
mov
xchg
out
xchg
push
bnd
outsl
mov
mov
push
ja
and
sbb
popa
in
push
cmp
cmp
jne
xchg
lds
imul
or
scas
insl
movsl
mov
mov
dec
ja
insl
sub
insb
mov
push
aam
ljmp
rorl
push
inc
ja
psubsb
dec
xor
mov
mov
ljmp
aad
movzwl
mov
in
dec
arpl
adc
insb
call
in
mov
sbb
subl
push
inc
lea
lods
or
lds
xchg
pop
cld
fs
pop
in
rcrb
mov
mov
cmp
push
cwtl
popa
movsb
int3
jmp
mov
jo
jp
mov
testl
aam
leave
mov
push
in
fsubl
sbb
enter
push
push
gs
dec
fstpt
or
sbb
pop
aad
shlb
mov
xor
mov
push
int3
ljmp
repz
cli
pop
jb
imul
test
cmp
jl
sbb
push
xchg
mov
jmp
outsb
rcll
xchg
sbb
jp
mov
inc
aaa
or
arpl
hlt
in
cmc
add
scas
fwait
and
pop
inc
cmp
repz
push
push
mov
das
or
add
aaa
iret
gs
pop
aas
ret
pop
push
popa
inc
sub
jbe
out
sub
movsl
and
mov
push
movsl
sub
mov
push
inc
rorl
test
jge
jae
mov
dec
push
xchg
js
cmp
push
mov
jp
out
loopne
stos
add
xor
jle
in
mov
push
adc
xor
xchg
and
es
sub
test
sbb
sahf
icebp
add
mov
and
mov
out
xchg
sub
in
adc
push
clc
xchg
dec
aad
mov
lret
adc
scas
lret
dec
add
sbb
pop
sarb
xor
les
inc
add
adc
add
sbb
int3
xchg
rcr
ljmp
shrb
fidivs
xor
imul
mov
mov
jne
shrb
dec
add
mov
mov
add
pop
lahf
push
adcl
movsb
lret
mov
daa
hlt
and
fldt
int
int3
lahf
pushl
pop
leave
and
lea
subb
mov
fisttps
dec
push
adc
rcll
aad
outsl
lock
adc
call
mov
dec
je
int3
pop
out
xor
movsl
xor
jo
sahf
out
mov
add
sub
mov
dec
cs
mov
cld
xor
sub
cwtl
out
cmp
insl
mov
loope
xor
push
mov
outsl
adc
jno
in
sbb
stos
cs
jne
jge
mov
sub
and
enter
jo
mov
add
or
mov
sti
inc
jp
cmpsb
xchg
shrb
push
xchg
fistps
cmp
sub
add
call
mov
popa
inc
push
push
add
xchg
test
repz
and
sub
jb
and
arpl
push
cmp
das
out
xor
out
adc
ds
sbb
sub
fnstsw
lret
lret
repnz
je
shl
xor
sub
int
sti
orb
add
inc
mov
movsl
mov
hlt
stos
push
mov
imul
xor
cmp
cmpsb
int3
cld
dec
outsb
popf
cmpsl
xchg
fstl
sub
fadds
inc
mov
and
mov
mov
adc
es
mov
mov
pop
dec
xlat
lea
jle
loopne
push
pop
std
push
fwait
sbb
cmp
adc
cltd
or
repnz
jecxz
pushf
or
aaa
incb
test
ret
mov
xor
loop
cmp
cmpsb
rorl
pusha
iret
or
neg
mov
nop
mov
addb
ret
jb
add
sub
mov
iret
jmp
imul
inc
stos
fs
mov
cmp
and
cld
sub
std
ret
hlt
call
push
add
nop
dec
pop
xchg
cmpsb
jp
in
out
sbb
sbb
mov
push
dec
push
adc
fdivrs
test
pop
mov
push
mov
dec
popa
push
loop
in
fidivrs
adc
mov
pop
xchg
jmp
stos
ficoms
les
jne
clc
pop
dec
pop
stos
pop
and
gs
xchg
inc
or
or
xchg
mov
in
adcb
add
cmp
jb
add
jne
enter
imul
popf
xchg
and
rcll
and
and
insl
adc
mov
aaa
hlt
adc
push
cli
ficomps
inc
dec
or
imul
mov
pop
jo
inc
xorb
xchg
lock
fdivs
sub
inc
testb
into
imul
mov
and
sub
mov
repnz
xor
enter
xchg
out
push
push
mov
pop
aas
pop
or
popf
lret
dec
dec
stos
jecxz
push
mov
mov
mov
push
xor
call
cmp
add
xchg
ja
dec
and
xor
push
sub
scas
jns
test
pop
inc
sahf
push
mov
adc
push
mov
mov
push
fldenv
xlat
lret
ds
push
push
inc
ljmp
dec
push
dec
xor
jge
mov
dec
icebp
sar
cmova
push
cmp
xor
clc
jae
pusha
sub
sbb
inc
dec
xor
nop
cmp
sub
js
andb
xchg
stos
lcall
sub
rclb
ret
fsts
repnz
push
test
push
pop
ret
mov
icebp
jmp
xchg
ljmp
push
dec
jecxz
lret
jns
mov
leave
xchg
and
fs
out
fnstenv
pop
repnz
mov
lret
jp
addb
or
loop
inc
arpl
sub
mov
imul
imul
and
loopne
outsl
stos
push
loop
xchg
xor
dec
pop
sub
mov
inc
pop
into
pop
lods
add
inc
repz
out
sarl
sbb
ret
sbb
cli
jo
and
inc
cmpsb
push
cs
adc
sub
mov
into
mov
sbb
popa
mov
outsl
xor
sub
sbb
adc
jo
sub
js
sbb
cmp
adc
dec
in
push
mov
icebp
jne
ljmp
arpl
adc
je
push
cmp
push
lods
sbb
jns
push
mov
cmp
aad
adc
mov
ja
popf
loopne
sbb
inc
push
hlt
sarb
imul
jmp
push
out
push
data16
sub
sahf
jmp
sub
push
rol
adc
dec
and
mov
mov
adc
dec
in
dec
call
cwtl
sarl
adc
movsl
add
and
sub
dec
xchg
mov
outsl
pusha
push
cmp
daa
jle
repz
aad
sbb
inc
mov
out
push
xor
adc
cmc
xor
movsb
cmpsl
out
mov
add
test
mov
enter
out
adc
and
clc
jbe
jno
fnstenv
arpl
lock
fcoms
ja
cmp
cltd
jb
ds
pop
push
ds
ja
les
int
push
jb
pusha
mov
sub
lea
rorb
pop
lret
push
decl
pop
jg
loop
sbb
jnp
fistpl
fimuls
adc
ljmp
add
cmp
aaa
loope
inc
or
adc
push
dec
out
cmp
and
xchg
cmp
mul
call
add
mov
or
mov
inc
push
push
subb
fwait
ds
jae
lea
mov
andl
xchg
aam
mov
iret
xchg
cmp
js
push
into
loop
push
fldln2
mov
cmp
pop
rep
cmp
dec
out
mov
and
push
jl
enter
pop
cmp
mov
cmp
movsl
mov
ss
jb
jno
push
cmp
cmp
pop
push
xchg
and
test
outsb
xchg
add
pop
insb
push
cmp
out
ror
repnz
jle
leave
cli
insl
add
enter
ss
mov
mov
add
mov
out
adcb
repz
mov
xchg
add
test
cmpsl
lret
jecxz
xor
push
loop
lock
sub
cs
in
jmp
push
push
lret
mov
jns
xor
data16
loop
or
xchg
sub
mov
dec
stos
push
pop
stos
das
jecxz
add
cmp
mov
mov
cmc
pop
movsb
dec
sub
in
daa
test
or
cltd
es
ljmp
mov
xlat
pop
add
ficoml
in
loop
rclb
xor
repz
fsts
or
xor
jle
xchg
or
cmp
xchg
rolb
sbbb
fwait
in
add
inc
cli
cmpsb
mov
out
or
out
loopne
sub
xchg
xchg
sti
pop
dec
fwait
imul
push
lock
adc
sbb
pop
int
aam
push
push
sbb
repz
xor
xchg
xchg
loope
push
pop
xor
shrl
repz
add
sbb
jb
dec
mov
lea
push
lahf
bound
bound
hlt
push
lahf
and
roll
je
or
cs
mov
dec
mov
mov
adc
psrad
xor
and
pop
loope
mov
xchg
movsl
sbb
xor
xor
add
or
in
jmp
bound
push
aad
cmp
mov
inc
in
mov
cmpsb
cmc
adc
orb
push
cmp
ret
int3
jns
and
xchg
pushf
fcomps
sahf
pushf
inc
test
xchg
xor
xor
cmp
push
repnz
mov
in
xchg
cmpsl
push
dec
xor
test
test
and
or
jmp
push
ret
cmp
addl
lea
push
std
je
push
subb
popf
shll
jae
add
pop
insl
push
xlat
ja
mov
and
mov
mov
sbb
aas
xchg
sbb
gs
mov
xchg
std
adc
xor
mov
stc
out
das
or
fcomip
or
add
mov
daa
mov
cmp
iret
test
mov
js
pop
dec
fmull
adc
xorl
cltd
pop
push
je
dec
shrl
fcmovu
popa
lods
movsl
shrb
pop
pop
pushf
mov
xor
jle
fld
jl
and
adc
lods
aad
or
or
or
inc
pop
xor
icebp
pop
mov
pushf
adc
mov
sbb
rclb
xchg
dec
jp
push
imul
and
les
jnp
outsb
ret
and
mov
icebp
mov
scas
sbb
inc
movsl
je
dec
das
mov
cmp
cbtw
xchg
jg
ret
inc
clc
jne
jp
out
sub
into
arpl
sbb
mov
fs
adc
sbb
shrb
or
ja
sbb
add
adcl
jb,pn
mov
jns
sub
sbb
sub
lcall
shlb
clc
jno
or
push
clc
add
das
shll
dec
lds
cltd
mov
ret
loope
les
sbb
sarl
push
dec
mov
outsb
mov
or
inc
repnz
add
mov
in
loope
scas
mov
mov
sub
dec
pop
xchg
mov
pop
sbb
fsubrl
lret
movsb
stos
addr16
sub
inc
sahf
and
jae
fwait
popa
adc
pop
push
lahf
push
loop
xorb
dec
inc
inc
int3
mov
shl
imul
ds
pop
mov
gs
sbb
add
push
push
aam
mull
insl
cli
adc
int3
or
jo
mov
inc
mov
dec
pop
gs
sbb
sub
outsb
fwait
loop
lods
or
fistpll
jo
inc
push
fwait
adc
cmp
sbb
pop
loop
adc
pop
pop
dec
lret
pop
movsb
das
ljmp
dec
pop
jb
ffree
fiaddl
aas
inc
das
and
into
adc
jle
iret
or
mov
or
xchg
jns
pop
imul
les
hlt
idivl
adc
push
sub
dec
xchg
outsl
out
addb
xor
adc
cmp
sbb
call
popf
xor
repnz
and
inc
and
dec
jno
scas
dec
pop
mov
movsl
stos
pop
mov
mov
push
mov
dec
mov
adc
ret
jo
mov
lret
out
and
mov
mov
lret
rolb
or
loope
xor
pop
adc
out
xor
jns
aas
add
rcrl
jg
and
push
push
mov
push
call
xor
mov
jae
arpl
loopne
scas
cli
je
pop
lcall
and
loope
push
daa
ret
pop
out
mov
mov
xchg
jae
jnp
in
loopne
out
jbe
inc
sar
gs
pop
stc
adc
lea
mov
call
mov
cld
fmuls
jl
sbb
ss
pop
mov
sar
mov
out
mov
int
nop
mov
rcll
mov
outsl
mov
movsl
sbb
popa
or
fadd
sub
fisttpll
and
cmp
sbb
cmpsl
add
mov
rdmsr
xchg
or
xchg
xchg
dec
inc
sub
jb
test
or
vpshufhw
jno
sbb
adc
cmp
push
clc
jle
push
push
push
imul
and
jp
sub
mov
inc
insl
sbb
add
aad
gs
call
lcall
das
setne
and
icebp
xor
jmp
push
cmp
flds
scas
add
and
or
notl
push
dec
cmp
push
ljmp
scas
jge
testb
cltd
mov
ds
je
cmp
cmc
xor
lods
in
jbe
insl
adc
mov
les
cmpsl
mov
sub
les
mov
xor
cmp
add
fidivrl
jge
and
popf
movsl
push
inc
jbe
out
cli
fstpl
add
out
es
adc
adc
lahf
hlt
fucom
subl
aaa
pushf
and
xchg
out
fists
das
test
or
popa
nop
jns
subl
es
jae
rcl
lahf
xor
inc
xchg
sahf
mov
movsb
aad
pop
xchg
mov
out
adc
or
test
mov
popf
out
je
iret
add
fiaddl
or
pop
cmp
jns
fmull
dec
adc
or
in
jno
lahf
pop
imul
adcb
mov
test
inc
jne
addl
push
shlb
movsl
stc
inc
out
xchg
test
push
xchg
inc
dec
push
or
mov
cmc
out
loope
cli
mov
jp
sub
mov
sbb
shr
movsb
push
cwtl
repnz
sub
idivb
xchg
add
cmp
insb
lock
xchg
mov
mov
mov
jae
pop
push
mov
add
add
imul
add
hlt
mov
jecxz
outsl
jnp
add
mov
das
sti
ljmp
cmpsl
outsb
cmp
mov
lods
mov
or
orl
mov
jnp
dec
pushf
call
stc
shlb
stc
add
inc
push
jb
add
out
mov
mov
or
mov
test
dec
mov
push
sbb
jge
sub
or
outsl
sbb
lock
sbb
add
sub
mov
dec
dec
cmpb
fildl
ds
sbb
inc
iret
les
pushf
in
jp
xor
inc
repz
inc
dec
inc
in
es
mov
cmp
lods
mov
jno,pt
outsl
mov
mov
in
inc
mov
fcomps
test
mov
fistpll
cmpsl
sti
dec
jne
js
lret
bound
lea
mov
dec
cld
scas
inc
dec
jecxz
jmp
sbb
mov
push
jg
dec
jecxz
jne
gs
mov
mov
adc
xor
je
decb
jns
mov
call
imulb
aam
cmp
ja
inc
clc
hlt
enter
jns
popf
cld
and
cli
repnz
lds
int
cmp
shr
jmp
adc
aas
adc
mov
jne
pop
aaa
stos
rcrb
xchg
xchg
and
mov
lret
pop
and
push
xchg
cmp
or
ja
movsb
ret
ficompl
daa
sbb
out
cwtl
inc
mov
outsl
fucomip
fwait
fwait
ljmp
aas
mov
mov
data16
loope
js
add
fidivrl
inc
orl
push
xlat
xor
mov
mov
push
mov
scas
pop
hlt
mov
rol
pop
arpl
shl
or
xchg
rol
push
inc
pushl
xchg
mov
sub
push
movsb
jp
mov
and
nop
adc
mov
push
push
add
push
jmp
mov
lds
movl
sub
inc
dec
push
lock
cmp
loope
cwtl
das
xor
pop
loop
jecxz
xor
cmovs
sti
mov
repnz
lret
push
fsubrs
pop
mov
xchg
mov
dec
and
xchg
into
es
fdivrp
fnsave
in
inc
jle
jmp
movsb
inc
shrl
fldt
mov
ja
add
push
lret
int3
add
dec
push
or
testl
fildl
aaa
sbb
ficompl
dec
fadds
data16
fidivrl
lea
lds
or
inc
adc
pusha
aam
jb
dec
cmc
addr16
pop
sub
data16
and
push
push
sbb
cmp
das
xchg
push
leave
mov
push
mov
movsb
xchg
nop
fs
test
decb
inc
es
cmpsb
jb
lcall
fstl
mov
and
jle
jecxz
and
aad
bound
sbb
add
test
mov
pop
mov
loope
pusha
fs
sub
or
adc
cld
movsl
insb
push
pop
in
mov
fcom
je
fists
sub
pusha
out
xor
adc
xchg
insl
rorb
jecxz
cmc
pop
incb
loopne
cltd
pop
adc
into
ret
mov
pusha
iret
jb
loop
fiaddl
dec
push
scas
push
int
cmc
cld
nop
in
mov
xchg
ret
inc
sahf
out
dec
cmp
mov
outsw
imul
repnz
xchg
xor
scas
add
lcall
pop
lcall
outsl
cltd
jp
lods
jle
xor
imul
sbb
mov
out
mov
es
inc
dec
sti
pop
es
and
xor
hlt
clc
adc
push
sbb
mov
sahf
out
ja
lret
mov
mov
popf
test
xor
mov
pushf
insb
es
hlt
lcall
inc
addr16
popa
add
pop
mov
mov
inc
notb
addb
push
xor
sub
dec
and
jmp
nop
repz
insl
dec
mov
inc
add
sub
enter
cli
mov
decl
in
fwait
adc
mov
outsl
adc
call
in
call
jg
push
repz
out
int3
pop
popl
jmp
cltd
mov
sbb
xorb
push
add
loop
repz
jg
mov
test
mov
insb
and
xchg
cmp
xor
test
cwtl
into
lods
shll
into
mov
pop
mov
and
jns
jns
mov
repnz
insb
push
push
pop
stos
sbb
pushf
cmp
xchg
cmp
push
cwtl
pop
insb
sub
aam
repz
icebp
add
dec
mov
clc
dec
jmp
movsb
inc
clc
cmpsl
repnz
scas
xchg
bound
adc
fcmovnb
jnp
mov
jo
rol
cmc
mov
popa
fmull
icebp
cmc
push
mov
js
test
lcall
mov
mov
xchg
mov
cmpsb
outsl
mov
add
enter
dec
inc
dec
inc
sub
stc
faddl
stos
mov
lcall
cmp
xor
out
loope
mov
dec
popa
adc
int
lcall
bound
xor
xor
aas
insb
dec
xor
jmp
or
mov
sbb
xor
les
outsb
push
and
cmp
and
imul
jmp
daa
fidivrl
sti
jnp
cmp
mov
dec
lss
or
dec
lret
ja
dec
mov
ss
movsb
ret
scas
inc
in
and
mov
lahf
jge,pt
rorl
lods
stos
mov
inc
repz
enter
xor
xchg
or
fucom
inc
jge
mov
adc
leave
in
jno
pop
scas
iret
clc
rcl
daa
scas
das
pusha
decl
outsl
aam
jns
repz
and
mov
mov
pop
cmp
jno
jno
dec
mov
lods
mov
sbb
pop
aad
adc
push
sbb
jne
cmp
shll
cwtl
fldt
cmp
cmc
stos
mov
sub
jbe
loopne
xchg
sahf
inc
push
sarl
shr
imul
xchg
ret
je
mov
orl
mov
dec
jbe
xor
cmpsb
shl
lea
push
mov
dec
push
sub
jne
dec
ficompl
xlat
adc
in
mov
sub
scas
cmp
roll
in
scas
arpl
xchg
xlat
loop
push
ds
mov
cli
repz
mov
cbtw
cmc
cltd
ret
movsb
movsl
cwtl
loopne
jmp
hlt
or
jo
fxch
std
xorb
mov
les
or
adc
xor
in
ret
pop
int
sub
fiadds
pushf
xor
mov
add
push
xor
repnz
adc
xor
push
xor
int3
in
dec
icebp
testb
mov
inc
pop
clc
ss
les
push
in
push
adc
pop
int3
addr16
stos
in
sbb
sbb
jge
dec
push
in
mov
cltd
xchg
sbb
out
pop
push
loop
nop
inc
outsl
out
das
or
xchg
loope
mov
push
into
mov
ret
mov
pop
jmp
xchg
push
add
idivl
aas
insb
xchg
jnp
mov
and
mov
sbb
xchg
mov
cmp
push
fwait
popf
xchg
pop
cmpsl
cltd
add
sub
and
outsb
mov
bound
ucomiss
cli
sbb
into
bound
pusha
outsb
xchg
xchg
mov
repnz
jns
inc
sub
dec
add
mov
or
addr16
iret
icebp
sbb
ljmp
mov
mov
adc
jge
fnsave
les
fs
sub
test
adc
stc
hlt
js
lea
mov
or
stos
push
mov
mov
add
inc
fs
sbb
cmp
dec
add
xor
dec
out
pop
mov
jnp
mov
xor
std
ret
inc
push
sahf
pop
imul
pop
aad
int
mov
rcrl
roll
push
sub
push
pop
xchg
jmp
arpl
imul
inc
dec
int
clc
gs
std
sub
and
jbe
in
enter
loope
stos
xor
std
hlt
rorb
out
xchg
arpl
xlat
cmpsb
test
and
push
int3
add
sub
pop
cmova
lods
cld
dec
jnp
or
daa
lods
lods
pop
test
xchg
mov
mov
cmp
lahf
nop
aad
sbb
xchg
mov
cmovb
fstpt
divb
psrlw
daa
or
les
inc
ds
xor
push
dec
mov
je
mov
test
mov
cmc
leave
mov
movsb
imul
xlat
xchg
xchg
push
in
loop
mov
and
ljmp
adc
mov
push
xchg
push
mov
push
mov
js
repz
mov
push
out
jo
insl
pop
xchg
nop
xchg
repnz
cmp
rcll
das
dec
js
fnsave
adc
and
xor
lcall
xor
mov
mov
push
cmp
aam
push
call
push
cmp
fstps
js
mov
or
mov
xchg
dec
jb
es
xchg
sbb
fstl
mov
sub
out
push
pop
incb
add
and
push
xchg
xchg
aaa
mov
sbb
adc
lcall
scas
int
repz
inc
add
pusha
xchg
sarb
xlat
mov
push
lods
xor
and
jo
push
sub
test
addl
lret
addl
int3
loope
ret
mov
sub
movsb
sub
dec
mov
mov
inc
sub
out
mov
cwtl
shrb
ss
std
mov
mov
cmp
mov
popf
mov
int
sub
pop
mov
mull
inc
jns
pop
push
js
icebp
cs
addr16
stos
fwait
roll
and
js
adcb
fwait
aas
mov
std
lds
xchg
and
enter
dec
fucomp
inc
dec
jmp
xchg
int
lock
ror
fwait
inc
jge
out
pop
inc
mov
push
inc
mov
adc
int3
movsb
ss
sub
fs
arpl
mov
pop
cltd
shrl
mov
pop
rorb
or
pcmpeqd
adc
cmp
std
or
add
push
mov
dec
xchg
xchg
mov
stc
mov
in
cmp
movsl
mov
rorb
pop
push
cltd
jg
xchg
subb
cwtl
add
add
mov
mov
mov
test
adc
std
hlt
push
rcrl
flds
sub
jmp
leave
or
ficoms
aas
clc
cld
push
xor
cmp
mov
lea
jbe
insl
imul
and
and
inc
pop
inc
jae
enter
ret
push
jle
shll
bound
out
mov
lahf
cmpsl
out
rorb
pop
subl
jge
out
mov
bound
lods
scas
rcrb
cli
or
std
loope
flds
dec
pushf
inc
lahf
popf
js
clc
adc
sub
bound
adc
xchg
ds
icebp
bound
sub
ss
adc
daa
inc
lea
and
inc
and
jg
jnp
out
mov
dec
cmp
sub
inc
jg
lret
das
mov
mov
icebp
mov
pop
dec
mov
int
adc
push
dec
daa
cwtl
cli
add
pop
sub
push
mov
add
loopne
cwtl
mov
lea
addb
shrb
or
aad
cmp
sub
pusha
xor
jle
xchg
push
jbe
repnz
push
jmp
stos
aad
ljmp
mov
cmp
xorl
imul
cmp
sar
jne
dec
add
fidivrl
inc
sub
add
cmpsl
pop
inc
mov
popa
movsb
cltd
popf
push
jp
xchg
aad
push
rclb
mov
arpl
iret
cmpsl
jb
pusha
sti
mov
popf
pop
jbe
decb
and
repz
inc
xchg
jge
cmp
mov
pop
adc
mov
push
decb
mov
fildll
mov
mov
add
dec
pop
inc
cmp
ljmp
in
mov
xchg
loope
in
movsb
fistps
movb
stos
in
test
cmp
xor
add
xchg
nop
mov
vsubss
add
stos
mov
out
mov
push
shrb
pop
jecxz
mov
jb
sbb
repnz
sub
pop
bnd
xchg
cmp
loope
xchg
sub
aad
pop
mov
jp
lock
ljmp
lods
push
cld
pushf
lcall
adc
sbb
push
incb
pop
mov
leave
lods
dec
mov
mov
inc
push
add
data16
mov
mov
push
mov
xor
push
test
push
xchg
sub
in
sub
mov
imul
ljmp
cltd
or
xchg
clc
fldl
inc
xor
push
pop
sbb
popf
mov
inc
pop
rcr
jl
lea
inc
out
nop
scas
jb
pop
cmp
jmp
jbe
stos
push
std
push
in
call
fisttps
pop
sbb
xchg
mov
mov
mov
add
push
leave
lcall
clc
pop
imul
stos
ds
mov
sub
das
add
mov
pop
and
jle
je
jo
ss
sbb
mov
pop
icebp
mov
orl
jae
rorb
dec
dec
xchg
pop
sahf
xor
gs
sarb
in
push
and
mov
add
add
imul
adc
cmpsb
popf
sub
les
adc
fsub
inc
repnz
aam
ret
lahf
jmp
int3
inc
insb
cmp
add
dec
sbb
mov
adc
cmp
and
call
push
mov
sbb
jo
stos
pop
outsl
and
out
adc
mov
push
movsb
scas
sub
and
jae
je
dec
push
fildl
mov
push
outsl
xlat
mov
mov
js
insw
rclb
xchg
ljmp
fwait
ja
lds
mov
call
adc
stos
xchg
push
cs
push
das
xchg
jb
cmc
pop
addb
cmpsb
out
pushf
push
and
jns
jge
dec
or
mov
aaa
inc
cmp
xor
mov
sbb
insb
sub
xor
mov
arpl
sahf
imul
shll
cld
cmp
inc
insl
jecxz
dec
push
or
inc
cmpsb
filds
dec
add
inc
lret
inc
nop
add
mov
pop
add
popf
sub
mov
pop
push
fnstenv
lock
cmpb
cwtl
mov
test
cltd
mov
mov
jecxz
jnp
cwtl
jl
testb
pop
out
pop
add
rorb
mov
incl
sub
ret
mov
aas
jmp
or
outsb
movsl
pop
or
or
mov
jle
out
jns
dec
adcl
testl
stc
jmp
insb
test
pop
mov
sub
xor
cmpl
mov
in
mov
xchg
xlat
jbe
ret
inc
add
rcrl
cmp
push
das
sub
push
ret
divl
mov
es
pushl
stos
test
in
xor
gs
bound
push
rclb
lds
xchg
mov
into
sub
ds
outsl
lret
push
lcall
rorb
push
lcall
in
pop
sti
pop
push
cltd
add
mov
push
and
lcall
dec
pop
adc
jecxz
iret
pop
aad
dec
lret
subl
dec
inc
or
pop
mov
test
stos
jle
test
gs
push
test
xor
jnp
xorl
cmp
jne
xor
pop
jnp
pop
cmp
inc
add
sbb
mov
loope
mov
stc
mov
inc
ljmp
mov
inc
adc
sub
imul
xchg
test
push
out
cmp
cmpsl
ss
mov
je
iret
arpl
or
xor
pop
xor
mov
or
mov
jnp
inc
sub
adc
sub
rcrb
push
imul
ljmp
aaa
or
aam
out
sar
inc
cmp
out
push
jne
popf
mov
out
loopne
pop
fistpll
shr
adc
xchg
mov
adc
dec
jle
cmp
pop
shr
cmpsl
mov
adc
xchg
adc
loop
das
dec
bound
mov
andb
jp
jecxz
add
pop
adc
enter
sub
cmp
add
mov
xorl
std
xchg
scas
call
notl
inc
pop
mov
fistl
and
pop
aaa
arpl
pop
xor
stos
hlt
subl
mov
gs
enter
mov
xor
shlb
stos
inc
pusha
cmp
in
ja
adc
cmp
adc
jae
pusha
mov
dec
imul
mov
mov
jne
cmpsb
bound
sub
outsb
mov
shl
adc
add
iret
js
arpl
outsb
jns
push
or
push
cmp
and
and
dec
xchg
mov
mov
pushf
lcall
jg
rorl
mov
jae
fwait
inc
ja
test
popa
fld
outsb
lods
adc
aam
mov
mov
cmpsl
jmp
pushf
sub
mov
and
outsl
popf
std
rolb
sub
pushf
or
push
add
or
pop
imul
xor
ficompl
xchg
out
mov
pop
push
or
rcl
lahf
inc
mov
ja
mov
jne
stc
fs
insl
jmp
jl
or
shl
out
aaa
pop
arpl
lock
fisttpll
cmp
push
cmp
iret
pop
mov
pop
mov
outsl
sub
ret
pusha
mov
xchg
lods
pop
int3
inc
add
mov
cmp
outsl
rcll
or
scas
sahf
ret
sub
xchg
sbb
je
ljmp
scas
jecxz
loope
jbe
add
add
gs
cmpsl
ret
dec
inc
in
mov
sbb
adc
add
and
mov
movsb
pop
mov
xor
push
addr16
pushf
jnp
pop
inc
jae
jne
js
adc
aad
mov
pushf
mov
or
in
xchg
clc
inc
fildl
es
inc
cmp
or
and
mov
fistpll
xchg
outsl
adcb
xor
aad
into
push
or
andl
cmp
jbe
sub
pop
out
stos
mov
jbe
addr16
aam
jg
mov
sahf
fidivrs
lahf
fcomps
data16
sti
outsl
mov
add
pop
cmp
nopl
psubd
lret
lds
xchg
inc
insb
inc
jecxz
dec
test
loope
aad
jae
sub
dec
out
into
ds
cmp
add
lret
mov
push
call
xchg
ret
fwait
sub
xchg
fidivs
dec
cld
faddp
add
shrl
or
xorl
not
ret
lds
out
mov
and
std
aam
fldl
testl
pop
jae
cmp
lcall
test
imul
dec
rorb
mov
pusha
es
cmp
js
jp
es
mov
bound
sub
inc
and
or
cmp
int3
xlat
mov
frstor
subb
add
out
test
or
jmp
cmc
cltd
sbb
lcall
fcmovne
les
and
stos
ret
sub
xlat
int3
pushf
test
fs
or
fisubrl
cltd
xchg
popa
dec
fisttpll
mov
in
pop
ds
fmuls
ret
int3
cmpsb
sbb
cmp
ret
pusha
arpl
add
pop
in
push
dec
mov
cmc
call
pop
mov
jmp
mov
add
add
jae
jnp
aaa
insb
cmp
lret
xor
lods
add
pop
stos
loop
in
loop
in
jo
add
mov
sub
mov
mov
aam
push
xor
xor
loop
repnz
and
add
push
je
mov
mov
dec
sti
pop
mov
rcll
mov
inc
adc
aaa
mov
cli
cltd
xchg
and
pop
test
shlb
iret
addr16
mov
sub
les
pop
std
sarl
add
rol
dec
inc
out
je
adc
add
jbe
outsl
inc
pop
inc
jbe
mov
mov
lds
inc
sub
sbb
add
mov
sbb
imul
sub
add
push
fildl
idivl
shrb
je
or
fldt
ficoml
hlt
add
or
add
bound
fadds
lcall
mov
pop
xchg
cmc
popf
in
push
pop
add
mov
mov
cmp
loopne
stc
sbb
dec
jb
dec
dec
mov
stos
std
push
subb
sub
sbb
mov
pop
jge
inc
jbe
inc
sbb
jns
out
inc
adc
leave
dec
jge
jle
clc
dec
sbb
fcompl
cmpsb
gs
xchg
aam
mov
mov
add
movsl
imul
stc
xchg
jp
dec
jne
mov
call
into
nop
shrb
jg
dec
jmp
cli
pop
pop
hlt
call
aad
xor
mull
or
xlat
les
rcll
sbb
in
mov
adc
cs
sub
stc
loope
xchg
mov
add
loope
pop
jo
pop
push
ret
mov
pushf
movsl
btr
in
xchg
repz
icebp
add
mov
roll
mov
sbb
add
push
fcompl
je
cmp
xchg
inc
inc
insb
cmc
ljmp
push
inc
mov
push
out
pop
dec
and
and
pop
leave
testl
xchg
push
sub
repz
les
xchg
pop
fcoms
pop
fisubl
push
jmp
lods
mov
mov
hlt
jg
xor
scas
inc
das
cmp
scas
jle
sbb
ficomps
ret
xor
inc
add
lret
pop
add
insl
dec
sub
push
jmp
sbb
mov
enter
xor
in
sbb
test
in
sbb
and
xchg
mov
popa
arpl
dec
pop
jno
or
inc
or
xchg
cmp
iret
add
scas
repnz
or
push
push
int
loop
push
es
add
jle
dec
and
fsts
sub
and
cmc
cltd
out
mov
mov
fldcw
mov
mov
sbb
adc
xor
in
mov
stc
adc
push
dec
jnp
sub
sbb
xor
lcall
fidivs
shlb
dec
push
mov
aad
push
cmp
pop
xchg
lock
pop
jecxz
ret
js
cli
outsl
out
jno
fisubl
jl
xor
mov
dec
jp
mov
clc
mov
imul
push
mov
sub
fsubp
or
aad
jge
xor
std
out
stos
test
add
sbb
je
ds
jb
lods
mov
negb
in
jmp
sbb
fbld
mov
pushf
xchg
test
jp
sbb
inc
mov
push
sbb
push
pop
ret
xchg
pop
cltd
jle
scas
dec
jno
push
sub
pop
cld
loopne
pop
iret
mov
mov
xor
mov
aad
mov
dec
xchg
jns
pop
add
xchg
push
lds
and
jmp
jmp
or
mov
xor
ret
pop
loopne
push
insb
lahf
js
in
out
add
clc
aaa
xchg
inc
outsb
mov
jno
aam
jl
xor
movsl
mov
push
insb
enter
pop
xchg
jg
adc
rclb
xor
push
cmp
int3
aam
rorb
adc
push
popa
hlt
adc
adc
rolb
xchg
inc
add
mov
lea
push
and
lods
inc
adcb
push
dec
push
sbb
rorl
adc
adc
popa
pushf
clc
dec
sub
pusha
es
sub
push
push
out
xor
mov
dec
lcall
dec
sbb
sub
ret
and
fsubrp
popa
jle
dec
lea
repnz
push
inc
arpl
or
scas
fs
or
mov
ret
iret
sbb
rcrl
or
outsl
repnz
pop
jmp
jbe
daa
int3
sbb
add
push
mov
movsb
or
gs
mov
ljmp
out
and
fyl2xp1
jg
jbe
mov
inc
ret
arpl
pop
repnz
jmp
xlat
pop
mov
popa
mov
push
fiaddl
add
inc
mov
dec
lea
lret
addr16
push
jecxz
stos
fistpll
jp
add
mov
and
sub
std
lcall
loop
mov
sti
and
cmpsb
xchg
ror
gs
jo
int3
aad
dec
sbb
clc
or
cmc
sub
dec
subb
lcall
jne
add
xor
inc
xorb
add
popa
push
mov
cs
inc
lcall
cmp
ficomps
test
or
call
pushf
pop
lods
xchg
pop
adc
pop
outsl
push
std
sub
mov
daa
mov
xchg
scas
adc
mov
in
dec
push
mov
add
movsl
sbb
dec
subl
add
xchg
jge
push
pop
js
adc
mov
mov
dec
mov
mov
js
mov
dec
cmp
mov
pop
and
add
push
pop
jge
ret
mov
mov
cmpsl
hlt
daa
test
lock
mov
fildll
or
aaa
and
shlb
shll
cmpsl
xorl
aam
xchg
adc
hlt
in
scas
mov
hlt
adc
imul
xor
jb
iret
xchg
in
sub
sbb
arpl
xchg
or
mov
mov
hlt
ss
and
jge
inc
sbb
mov
adc
mov
add
clc
gs
adc
and
out
push
std
repz
cld
shrb
gs
mov
inc
arpl
inc
mov
daa
insb
lods
push
bound
dec
mov
stos
inc
aad
adc
loop
stos
mov
mov
jo
dec
rolb
aam
push
and
pushf
popf
movsb
add
and
lret
jb
jno
jle
dec
enter
sbb
and
jmp
hlt
xchg
add
push
cmp
rclb
inc
jbe
push
fcoml
add
stos
xchg
loope
xchg
mov
or
or
or
jae
gs
push
divl
jns
sti
fsubrl
loopne
into
imul
test
pop
test
dec
mov
lods
sahf
imul
ds
jo
addl
jge
xor
lods
and
stos
stos
inc
out
rolb
push
out
leave
push
lock
cltd
sahf
ror
cmp
subl
pop
add
push
out
faddp
scas
lea
push
lcall
sbb
repz
nop
jae
test
lret
mov
cmp
popf
sub
pop
and
xchg
aaa
sub
addr16
out
fimuls
cwtl
insb
pop
popa
in
push
aad
jo
hlt
dec
adc
cmp
test
fisubrs
inc
pushw
pop
scas
push
out
outsb
jmp
addr16
or
push
dec
test
dec
sub
or
jecxz
pop
inc
out
mov
inc
mov
mov
or
pop
mov
add
into
aaa
add
outsb
dec
int3
or
adc
mov
or
popf
in
sbb
pop
jns
push
mov
sub
test
pushf
push
aam
cld
std
out
add
mov
scas
and
jae
pop
adc
lcall
into
rol
int3
fstps
les
adc
xchg
int
or
repz
negb
or
pop
adc
pop
sahf
mov
xchg
mov
and
dec
shlb
testl
cmp
or
loopne
inc
rolb
pop
add
nop
lock
sub
gs
ds
cmp
xlat
mov
imul
adc
in
mov
in
jo
pop
outsb
dec
push
out
dec
sbb
push
cmpsl
out
mov
shrb
sub
sbbb
repz
lcall
lea
insl
jno
jp
fdiv
data16
mov
in
pop
ret
pop
mov
fucomip
jge
jmp
xchg
adc
scas
mov
xor
jg
cld
mov
adc
pop
sbb
leave
jae
and
pop
mov
insb
aas
xor
daa
xchg
mov
ss
sarl
dec
inc
push
mov
fbstp
mov
push
fistpll
sub
push
sbb
adc
stos
mov
xor
inc
mov
test
and
ret
iret
push
xchg
js
push
fstpl
aad
add
outsl
out
mov
lret
add
aad
add
loope
test
cltd
inc
sbb
pop
adc
sar
out
add
xchg
and
add
bound
sub
jae
ss
lcall
outsb
mov
jmp
rcrb
stos
out
jle
adc
lcall
call
stc
insl
jl
mov
jg
adc
and
scas
jl
aaa
mov
pop
ljmp
xlat
pop
mov
loop
test
mov
sub
jns
xchg
daa
ljmp
aam
push
inc
mov
imulb
into
xor
push
in
icebp
xchg
out
loop
jno
push
sbb
xchg
adc
in
add
rcrb
cltd
je
icebp
lcall
xor
rclb
sbb
ss
xabort
push
jmp
out
push
lock
cmp
push
shr
add
repz
aad
add
fbld
sub
sbb
mov
imul
adc
inc
addb
popa
stos
daa
js
aam
pushf
mov
adc
pusha
clc
or
je
jo
cmp
movsl
sub
aam
pop
les
sar
stos
mov
ds
daa
push
jecxz
inc
repnz
fisubrs
dec
xor
pop
nop
ja
xlat
jecxz
and
sbb
test
pusha
fcmovne
xchg
xchg
loopne
xor
adc
adcl
mov
scas
cmpsb
jnp
inc
loope
add
lahf
fisttpl
and
out
mov
xchg
cmpsl
enter
mov
mov
mov
scas
aas
cmpsb
push
fsubrs
shrb
cwtl
jbe
pusha
pop
fwait
scas
cld
das
subb
sbb
dec
adc
es
dec
clc
jmp
xor
lret
ret
repnz
cwtl
insl
cwtl
mov
lahf
mov
push
ds
or
and
pop
pop
mov
add
rorb
or
dec
dec
aam
lock
jo
pop
sub
aas
adc
cmp
mov
sub
mov
hlt
mov
or
outsl
js
sub
and
add
imul
icebp
mov
je
xlat
jne
xchg
popa
adc
sbb
fidivrl
cld
push
sbb
push
push
adc
push
scas
push
push
pop
push
fstpt
mov
xchg
mov
push
mov
xor
add
shll
fisubl
pop
fisubrs
mov
in
mov
inc
mov
out
enter
out
mov
add
mov
testb
popf
cmp
mov
xchg
stos
lahf
mov
in
and
xchg
stc
out
roll
imul
loop
push
xchg
popa
push
mov
loope
les
fmull
lcall
js
mov
test
and
repz
mov
mov
push
js
xchg
imul
repz
sbb
or
jne
sbb
or
jb
jmp
les
mov
or
cmpsl
push
leave
mov
sbb
pop
push
ficomps
test
sbb
arpl
dec
lds
sbb
fdivs
or
add
adcb
nop
fmul
mov
test
or
mov
sahf
xchg
push
jge
pop
mov
or
push
leave
xchg
fyl2xp1
jns
or
jg
daa
fldcw
cmp
inc
add
sbb
inc
sarl
push
sbb
cmp
pop
pop
xchg
mov
dec
xor
jge
push
mov
jp
push
jo
rolb
and
filds
xor
mov
and
mov
shll
jmp
jl
fstl
xchg
std
pusha
mov
rclb
inc
jle
xor
lret
out
cmpsb
inc
ds
push
xor
int3
xor
in
sbb
adc
iret
dec
bound
fistps
leave
xchg
movsl
mov
mov
negl
add
jp
lret
addr16
jnp
mov
stos
push
or
loop
int3
movsb
mov
daa
jl
fwait
outsl
cmpsl
call
and
xchg
std
rorb
gs
sub
or
sbb
les
push
stos
sub
adc
mov
cmp
mov
mov
mov
or
inc
and
dec
cmp
sub
jne
mov
mov
in
enter
pop
ret
sub
inc
xor
sbb
push
outsl
ja
sbb
fs
int3
jle
xor
xor
or
enter
push
ds
push
adc
adc
lock
out
mov
add
push
cmp
cmp
mov
roll
out
stos
pop
push
adc
scas
or
mov
pusha
jl
fbld
mov
lea
push
xchg
jne
cli
into
hlt
adc
test
popa
pop
push
xor
repnz
sub
stos
ja
arpl
outsl
sbb
sbb
mov
push
ret
ja
gs
cmp
add
lret
outsb
add
rorb
push
jp
push
loopne
push
push
cltd
ds
mov
outsb
dec
lods
test
pop
rcll
stos
movsl
pop
in
lahf
and
insl
arpl
push
sbb
cmp
imulb
cwtl
mov
cwtl
imul
push
push
xor
push
jle
cmpsb
nop
jnp
pop
js
shlb
sub
xchg
icebp
jnp
lds
jl
adc
or
repnz
pushl
stos
push
xlat
add
cmp
cld
gs
jmp
xor
mov
imul
mov
xor
xchg
pop
pop
mov
popf
outsb
mov
nop
in
jo
pop
xor
rcll
xor
cmp
dec
adc
jge
pop
and
shll
loopne
xor
cwtl
lcall
dec
push
jle
sub
xor
add
scas
mov
test
fistps
cmc
cltd
hlt
jo
mov
inc
push
enter
stc
lods
vmovhpd
and
into
sbb
adc
cwtl
loopne
cwtl
sti
rolb
fmul
adc
mov
push
mov
push
or
mov
shl
xor
mov
pusha
scas
push
xor
dec
sub
test
imul
adc
sub
movsb
mov
and
jo
mov
aas
call
test
repnz
sub
ret
cltd
ljmp
or
or
and
out
data16
or
jns
lahf
icebp
xlat
lods
lahf
cmp
inc
cmp
mul
mov
pushl
and
xchg
fwait
cmc
sbb
jae
loop
mov
lahf
loop
int
jle
enter
sub
mov
icebp
cmp
arpl
xor
das
sub
ret
aaa
push
push
orb
js
jae
ljmp
push
and
pavgw
dec
mov
mov
adc
mov
push
add
adc
and
cmp
xchg
lock
sahf
dec
mov
out
adc
mov
mov
or
lods
mov
push
pop
leave
cmp
dec
icebp
jp
test
sbb
stos
sbb
pop
pop
cmc
mov
jecxz
imul
decl
sahf
push
dec
sub
movsl
movsl
xchg
ljmp
xor
sarl
jb
leave
int3
test
push
insl
sbb
sbb
lods
pop
or
xor
push
popf
xchg
ljmp
loop
xor
dec
test
adc
push
sahf
shrb
lahf
adc
xor
ja
push
out
mov
cmp
aas
mov
aad
call
inc
lods
sub
xchg
inc
pop
dec
xor
adc
inc
aas
mov
sbb
out
jp
jo
jae
dec
mov
std
mov
add
mov
pop
lret
jb
pop
cltd
sbb
sub
mov
mov
cmpsl
inc
xor
xchg
lods
jnp
test
int3
movsl
mov
lea
insb
inc
inc
test
adc
mov
mov
sbb
std
rcrl
outsb
daa
rcrb
pushf
divb
je
clc
js
mov
jae
test
xchg
mov
cld
js
aas
ficompl
mov
cmpsb
fnstcw
mov
les
adc
or
test
test
jle
adc
push
and
iret
lock
xchg
cs
push
inc
call
xchg
mov
and
dec
xrelease
xchg
das
xchg
jecxz
jne
nop
mov
jbe
adc
lea
into
sbb
push
mov
add
sub
adc
push
cmpsb
mov
dec
dec
sbb
xor
cmp
and
jp
cvttps2pi
lods
aad
sub
das
fsubr
repz
cmp
cmp
add
movsl
dec
imul
negb
lds
adc
push
and
loope
arpl
std
or
in
repnz
and
icebp
add
and
hlt
divps
popa
pushf
adc
mov
pop
add
std
enter
xor
mov
mov
lret
pop
rcll
cli
push
push
lods
xlat
xchg
lahf
test
push
xchg
popa
xor
xchg
nop
sub
jl
sahf
sbb
xchg
loop
shrb
add
or
jnp
mov
jmp
sub
lret
add
dec
lods
pop
sub
imul
addr16
stos
xchg
int3
js
ljmp
lret
mov
or
ret
xchg
in
inc
cmpsb
lods
ret
mov
adc
sub
jmp
jb
mov
sub
adc
mov
loop
fstl
fwait
mov
and
rcrl
pop
daa
cli
cwtl
xor
add
and
add
repnz
push
adc
pop
jmp
pushf
mov
cmp
cld
fidivs
jl
adc
int
test
adc
push
stos
lds
lret
xor
in
mov
xor
in
in
fmull
or
mov
sub
or
jge
enter
jmp
scas
lods
sti
ror
test
adc
inc
popa
ss
fstl
cmpsl
aas
push
mov
inc
je
pusha
mov
pop
xchg
sub
mov
fcoms
jae
sub
test
sti
cmc
push
ja
xchg
xchg
mov
pop
sub
mov
std
adc
and
lcall
mov
movsl
mov
lea
repnz
push
sbb
insl
add
ret
adc
pop
negb
clc
ljmp
jno
testl
or
rcr
jmp
fs
aad
rclb
test
imul
loope
lods
inc
fs
jp
dec
fistl
inc
ret
push
inc
jg
pop
mov
orb
shlb
nop
loopne
cli
mov
cld
mov
and
jno
leave
test
pop
add
xchg
repnz
add
jge
pop
cmc
jmp
adc
repz
sub
fdecstp
add
inc
push
gs
and
inc
aad
out
xor
bswap
inc
mov
shll
and
jno
cmpsl
mov
mov
sbb
jmp
mov
mov
jne
hlt
aaa
leave
pop
and
movsb
jmp
roll
les
dec
mov
and
movsb
jnp
xor
clc
icebp
sahf
scas
rcrl
popf
push
pusha
hlt
mov
filds
xchg
mov
mov
dec
aaa
inc
imulb
pop
mov
xchg
fidivs
pop
inc
sar
xchg
int3
movsl
addb
mov
or
push
nop
scas
mov
jp
push
stos
lcall
call
pusha
and
aam
aad
or
mov
mov
cltd
add
xor
cmp
aaa
shrb
aam
fisubrl
dec
fcoms
sub
fists
cwtl
ds
push
cmp
or
loop
jmp
cmpsl
lret
mov
push
inc
jp
sub
fcoml
xor
lods
sbb
mov
push
mov
fmul
dec
cvtpi2ps
aaa
pop
pop
jns
arpl
adc
mov
pop
lods
jo
pop
movsl
jecxz
stos
and
sub
stos
pop
test
pusha
in
imul
push
push
mov
addb
sub
inc
pop
mull
mov
out
in
fisubrs
test
in
jp
jne
push
sbb
adc
dec
lds
das
imul
sub
push
and
ja
aad
test
pusha
adc
sub
push
in
inc
add
adc
pop
nop
add
stos
mov
inc
xor
rolb
pop
arpl
or
adc
push
int
rcrb
incl
ss
xchg
mov
loop
movsb
mov
sub
mov
cli
sbb
scas
add
pushf
ret
sub
sub
add
stc
pop
and
into
adc
outsl
cmpsb
das
in
std
xchg
cwtl
inc
xlat
mov
sbbl
pop
in
sub
add
pop
jbe
push
jl
cld
push
mov
add
scas
repz
fsubrs
clc
into
lahf
and
dec
repnz
and
mov
fcompl
or
ja
movsl
das
mov
mov
into
dec
ret
jnp
or
fists
push
lock
xchg
xchg
sub
cmp
push
rcrl
repnz
push
ret
add
jle
fiaddl
xchg
pop
bound
gs
jmp
and
xor
xor
enter
mov
insl
sub
adc
mov
push
pushf
jno
ret
adc
and
hlt
cmp
inc
dec
lret
fiaddl
or
outsl
out
or
inc
lcall
lcall
popa
es
into
je
xchg
push
cwtl
cltd
pop
cwtl
mov
testb
xchg
mov
iret
mov
jnp
enter
jg
jne
jmp
mov
pusha
sub
xor
jp
sbb
xor
pop
sti
sub
mov
insb
aam
mov
xor
xorl
add
dec
jg
jne
mov
adc
or
aaa
mov
nop
mov
ljmp
iret
and
jp
dec
or
cmpsb
aaa
lock
scas
test
fnsave
or
clc
rorl
fldenv
movsb
mov
inc
outsl
repz
pusha
dec
and
imul
sbb
je
inc
jnp
push
std
jo
push
fs
mov
xchg
mov
out
sbb
in
pop
in
pop
ss
scas
mov
mov
jecxz
adc
push
js
jbe
push
push
push
mov
ljmp
adc
cmp
out
jl
inc
inc
lret
fxch
mov
scas
mov
fidivrs
sbb
jmp
aas
subl
shl
mov
in
pushf
fsubrp
inc
aad
sub
mov
and
add
xor
repz
fnstcw
imul
pop
imul
test
ret
jne
imul
pop
mov
test
jb
std
push
out
and
aaa
mov
ficoms
insb
ret
insb
imul
popl
cmp
sbb
mov
and
mov
pop
adc
adcb
dec
xchg
add
jl
imul
or
and
shlb
push
jg
sbb
into
cmp
xor
xor
movsb
add
push
jbe
iret
scas
clc
xor
push
popa
das
push
jae
stos
js
xchg
out
xlat
push
inc
std
mov
cmpsb
out
sarb
sti
adc
vandnps
lods
pop
sub
and
pop
aaa
cmp
pop
out
cwtl
js
or
sub
clc
movb
insb
xchg
les
sbb
and
adc
dec
jecxz
pushf
mov
mov
xor
jb
xchg
pop
pop
xchg
leave
ljmp
lret
div
out
sub
test
or
test
cmc
pop
inc
mov
jns
fidivrs
mov
sub
cmp
pop
jle
out
lods
mov
mov
mov
jo
mov
push
cmp
pop
push
lcall
imulb
dec
icebp
ss
jmp
jecxz
addl
lcall
mov
push
iret
js
sub
add
lea
pop
mov
popf
xchg
loope
arpl
sbb
mov
repz
test
or
push
mov
adc
aad
mov
cltd
cld
xchg
sub
cmpsb
push
pusha
adc
and
jnp
jge
mov
cmp
sub
mov
ljmp
sbbl
addr16
jo
lahf
je
mov
xor
mov
rorl
shll
jbe
nop
into
push
cmp
mov
sbb
pop
shll
divl
es
xorb
insl
push
out
dec
dec
mov
ror
arpl
sbb
fnstcw
dec
mov
sbb
daa
push
cmp
fldl
pop
test
pushf
jae
dec
daa
or
cld
mov
dec
adc
inc
cmp
jmp
stc
dec
icebp
xor
ja
insl
jp
pop
daa
insb
outsl
push
sarl
mov
arpl
or
cmp
outsl
adc
lock
push
cmp
faddl
pop
sbb
inc
pop
and
out
dec
lcall
inc
inc
pop
test
jae
test
jecxz
fs
cmpsl
aas
int
jp
insb
pop
inc
jns
test
mov
rcrb
movsb
fs
and
sub
inc
mov
sbb
mov
ficompl
pop
cmp
icebp
xor
jnp
jmp
cmp
mov
repz
sbbb
movsb
repz
jo
popf
or
jle
or
aad
call
repz
fcmovb
push
fs
das
fldt
stos
andl
jl
inc
add
lods
dec
pop
shll
int
mov
cmp
jo
sub
push
daa
test
xchg
jl
sbb
jmp
insl
lods
jnp
jg
pop
ja
lret
bound
dec
in
xchg
outsb
inc
adc
pop
xor
sub
mov
lea
and
aas
roll
idivl
arpl
data16
in
or
fwait
mov
cmp
add
out
pop
push
xchg
sahf
lret
pop
xchg
lock
insl
scas
push
andl
in
mov
movsb
lods
pop
xchg
jo
jl
xor
into
jb,pt
lret
and
xchg
lahf
or
inc
cmc
sbb
jns
adcl
and
dec
pop
xchg
dec
pop
adc
push
mov
sahf
imul
icebp
xchg
inc
pop
xor
cmc
decl
call
sbb
add
inc
hlt
dec
jo
jno
fisttps
jecxz
inc
or
jno
das
mov
dec
sti
sbb
clc
mov
dec
push
rcr
mov
int
test
cltd
lea
aad
inc
and
mov
mov
sub
push
jbe
jno
mov
jns
cmp
xor
fnsave
and
sahf
ds
stos
mov
inc
pop
aam
cmp
addl
add
test
and
inc
jmp
jg
test
xor
sbb
xor
sahf
cmc
pop
xorl
dec
rcll
test
addr16
sub
add
add
inc
es
mov
or
add
cmc
daa
push
mov
fistps
mov
neg
pop
mov
test
fwait
adc
xor
adc
lahf
mov
test
add
pushf
xchg
jmp
lea
repnz
nop
xor
cs
mov
cli
pop
enter
lahf
movsb
data16
arpl
or
sti
cwtl
push
sahf
mov
push
pop
mov
sbb
pop
add
adc
aam
imul
mov
push
arpl
imul
scas
movb
push
std
cwtl
insb
mov
cmpsb
jno
xchg
cwtl
mov
inc
sbb
pushf
repnz
mov
sub
push
out
cmc
mov
fs
shll
pop
mov
fbld
push
pusha
push
mov
iret
ficoms
xchg
cwtl
in
mov
in
adc
div
dec
mov
sub
jecxz
stc
int
test
jmp
dec
dec
sbb
or
sahf
cld
repnz
test
pop
pop
jae
nop
jmp
aas
xchg
dec
mov
and
push
fstps
pop
cmp
stos
mov
mov
insb
clc
adc
pop
dec
arpl
lock
xchg
mov
pushfw
sbb
leave
lods
mov
push
imul
pop
sub
dec
leave
mov
and
mov
decl
lods
loope
or
and
shlb
sbbb
sarb
cvtpi2ps
bound
sbb
aam
or
gs
icebp
fisttpll
push
pop
call
jge
and
cmovne
xchg
adc
das
push
mov
push
repnz
mov
sbb
dec
cmp
repz
iret
sahf
test
jnp
lret
bound
cwtl
rorb
add
add
cmp
and
mov
pusha
mov
cmc
sahf
mov
sub
lock
jo
push
hlt
add
pop
test
int3
dec
inc
inc
add
std
stc
pusha
mov
sub
cmpsl
jg
repz
test
dec
pushf
xchg
aad
inc
push
sarl
and
loopne
cmp
fidivs
or
into
dec
out
test
or
dec
add
and
pushf
gs
dec
push
arpl
or
or
stc
or
rol
insl
movsb
jp
jmp
pushl
ja
xchg
mov
xor
or
push
fdivr
jb
and
dec
inc
mov
imulb
cmpsb
fs
call
push
popf
push
movsl
iret
pop
adc
cmp
jl
inc
dec
push
pop
shlb
mov
jecxz
test
xor
std
aaa
lcall
adc
int
das
push
loop
adc
xchg
outsb
ucomiss
cmp
in
outsb
sarb
loop
in
loope
lcall
xchg
or
out
xlat
mov
xchg
shlb
sbb
fmull
cwtl
sahf
dec
mov
add
sbb
xorb
lret
push
and
ljmp
sti
lret
fimull
pop
cmp
lahf
outsb
mov
aas
mov
xchg
and
mov
out
ljmp
mov
imul
movsb
lcall
inc
xor
or
xchg
in
cmpl
stos
mov
pop
lahf
shlb
fwait
aas
cmp
adcb
mov
dec
inc
mov
outsb
insb
push
xchg
xchg
cmp
mov
loop
into
jbe
ss
das
xchg
pop
ds
or
jno
shrl
gs
lcall
or
out
xchg
std
mov
push
pop
pop
sbb
cld
cmpl
xor
xchg
out
jae
xchg
inc
mov
jae
ret
mov
xchg
and
and
push
popa
ds
push
mov
xchg
xor
mov
and
test
mov
mov
fimull
adc
jl
scas
sub
insl
jne
jb
fwait
xor
ret
mov
movsb
outsl
test
aam
scas
nop
lds
lret
sti
add
cmp
pop
movsb
xor
jge
cmp
cmpsb
mov
mov
popa
out
movsb
ret
jb
inc
or
push
mov
push
jp
das
js
pushf
roll
iret
adc
cltd
test
in
into
xchg
movsl
lds
scas
mov
mov
int3
int3
sbb
cld
add
mov
mov
pop
dec
xor
adc
test
dec
jae
jne
sahf
dec
xlat
fwait
inc
imul
jmp
pop
cmp
mov
and
ret
pop
mov
pop
ja
aad
xor
fsts
push
lock
sub
in
mov
call
ljmp
lock
push
inc
out
pop
call
cld
pop
test
adc
jle
loope
jle
movsl
push
lods
and
fwait
add
jmp
stc
out
add
in
lock
cs
std
push
lods
sti
pop
ljmp
or
push
rcl
xor
fmull
xchg
inc
repz
iret
mov
leave
mov
sti
imul
pop
pop
mov
sbb
and
mov
and
sub
dec
aas
pop
xchg
fwait
sub
imul
sbb
inc
mov
xor
dec
adc
dec
data16
or
and
rorl
sbb
dec
sub
mov
int3
push
or
and
or
sbb
inc
jo
aas
dec
pop
adc
mov
mov
mov
repnz
enter
mov
pushf
adc
pop
push
xchg
lds
das
xor
fildll
xor
enter
js
push
push
add
push
outsl
add
pop
mov
mov
into
dec
test
push
or
mov
add
insl
mov
pop
mov
aad
mov
mov
out
std
xchg
pusha
in
ljmp
pop
dec
out
cld
push
repnz
lret
arpl
mov
jle
push
mov
push
xor
sub
fstpt
into
inc
and
cmp
insl
pop
sub
cmpsl
outsb
push
test
mov
jb
xchg
mov
inc
and
enter
vpcmpgtd
ret
std
in
pop
scas
call
mov
and
js
out
jb
or
cld
push
mov
xor
mov
add
iret
mov
mov
pop
inc
shrl
bound
inc
pop
mov
cmp
in
lods
leave
pop
aam
inc
push
sbb
push
nop
push
mov
and
or
negb
rcrl
cli
sub
pop
xchg
aas
and
sbb
jo
mov
dec
xlat
mov
sub
mov
mov
cli
dec
sub
in
mov
jns
out
sbb
push
dec
jmp
push
scas
and
addr16
dec
in
cmc
test
or
sub
pushf
stos
sbb
mov
sbb
lahf
fcomps
mov
mov
dec
fisttps
sarl
inc
js
xchg
aaa
repz
jp
inc
lods
int
mov
mov
dec
pop
jno
pusha
inc
pop
or
and
shr
dec
out
mov
gs
jb
fistpll
fmuls
dec
or
sbb
fmull
mov
mov
add
ljmp
aas
mov
adc
pop
xchg
cwtl
repnz
das
loope
in
rep
mov
aam
mov
repnz
test
pop
mov
cwtl
pop
mul
add
adc
sbb
dec
insl
or
cmp
push
push
gs
cmp
shlb
movsb
mov
pop
shl
stos
lcall
xchg
pop
jnp
bound
dec
adc
faddl
ret
cmp
pusha
dec
das
subb
mov
lds
xchg
jns
lods
push
mov
and
jne
or
je
cli
push
jne
lcall
dec
xor
or
xorl
sbb
out
push
mov
out
jmp
imul
jmp
dec
call
xor
shl
cmp
jge
jg
shl
push
push
dec
ss
pop
movsb
and
inc
mov
adc
cmp
and
stos
adc
dec
shl
cmp
subl
out
ds
mov
cmc
jnp
fucomip
cli
jae
imul
rcrl
mov
jmp
call
aaa
sub
aam
loope
mov
or
cwtl
push
push
repnz
outsl
subl
inc
sbb
aaa
or
lods
into
xor
sub
mov
fisttpl
sbb
dec
adc
fsubr
pop
in
mov
lret
or
pop
js
dec
or
add
pop
jns
push
or
or
xor
or
pop
cmp
or
sbb
jne
cmpsb
mov
iret
mov
dec
push
sub
mov
outsb
adc
or
lock
adc
std
mov
in
mov
adc
mov
addr16
xor
push
xor
sub
movsl
dec
fistl
jp
lret
ret
rol
pop
push
dec
sbb
psubd
out
scas
pop
pop
inc
or
xchg
leave
fistpl
push
adc
call
cmpl
rorl
dec
stc
gs
jne
pop
jb
sti
lahf
xchg
and
je
add
sbbb
dec
rclb
xor
scas
lods
movsl
into
sbb
fistpll
or
lods
xor
xchg
fcmovu
jmp
jae
arpl
fwait
lock
subb
iret
sahf
dec
rol
daa
call
mov
aas
ret
cwtl
adc
divl
stos
cmp
pop
imull
sub
vcvtss2si
xor
sarb
pop
addb
sub
push
call
sub
fstl
insb
xchg
dec
lret
out
call
test
fisubrs
jnp
ret
sub
mov
ds
sarl
jbe
pcmpeqw
fwait
and
das
jg
scas
aaa
jmp
fstpl
icebp
scas
ds
ds
cmpsb
pop
leave
mov
lcall
mov
mov
ret
cmp
mov
ret
lret
add
mov
dec
fiadds
lahf
dec
cmp
addr16
out
push
lds
rcrl
xchg
sub
adc
mov
mov
jne
into
imul
loopne
mov
mov
call
push
dec
in
fdivl
cmp
popf
sbb
repz
xor
or
stos
movsb
in
pop
mov
movsl
inc
inc
adc
xchg
sub
jge
stos
bound
mov
xor
mov
stc
test
pop
jl
jae
popa
pop
cli
xor
or
stc
mov
jmp
mov
dec
cwtl
outsb
and
mov
cmp
das
mov
cmp
inc
mov
add
xor
addb
jbe
gs
sti
xor
scas
xor
xor
fs
lret
lock
adc
shll
xchg
inc
popa
sbb
lods
and
lcall
into
insl
xor
inc
xchg
out
call
mov
daa
pop
js
dec
add
dec
jns
push
jnp
add
lcall
push
jne
sti
outsl
sbb
jmp
sbb
ret
sub
jge
fadd
xor
popf
push
and
hlt
adc
sti
push
push
or
sbb
mov
mov
pop
addr16
mov
dec
cmp
pop
or
jb
jnp
iret
outsb
andb
scas
sub
push
pop
or
mov
and
andb
cmpsb
jne
cmp
pop
cmp
xchg
fnstcw
pop
add
and
xor
out
test
pop
inc
stos
dec
fsubrs
xchg
fistl
enter
dec
sbb
lret
xorb
or
aad
dec
rcrb
mov
negb
pop
addr16
jp
sahf
ret
loopne
emms
stos
push
jg
xchg
repnz
in
add
sti
pop
mov
xorl
push
mov
fisttps
lcall
mov
cmp
ljmp
xor
pop
pop
jb
fcompl
inc
fdivrl
inc
test
ds
js
adc
cmpsb
mov
dec
inc
nop
ret
out
dec
stc
dec
inc
lret
lret
and
xor
push
push
dec
jb
lret
pusha
add
push
ficoml
stc
add
jmp
lcall
jb
jnp
xchg
jno
ss
hlt
inc
add
out
pushf
pushf
idivl
mov
sbb
xchg
shrb
loope
push
dec
mov
mov
ss
mov
hlt
int3
cmp
sub
out
lds
jnp
lret
sahf
push
aam
xor
imul
xchg
dec
pop
js
pop
lret
and
stos
movsb
mov
je
loopne
lret
sbb
jp
mov
in
cmpsl
fsubrl
or
dec
lods
add
push
ret
jecxz
lahf
ja
dec
andl
inc
sbb
mulb
pop
inc
movsb
sbb
fs
push
or
jp
fsubrs
clc
rorl
int
int
push
out
xchg
rcl
pop
add
push
cld
test
popa
fmuls
dec
mov
or
push
add
cmpsl
xor
jle
aad
xchg
and
cmp
mov
rcl
out
int
stos
movsl
fs
mov
out
in
jae
ds
test
jmp
add
flds
add
lds
inc
xchg
lea
scas
jp
pop
jp
ljmp
jge
rolb
repz
enter
cwtl
lock
mov
xchg
or
out
aam
rcrl
mov
popf
adc
xchg
sar
mov
mov
jae
pop
xor
fnstcw
add
popl
rorb
out
lds
or
mov
sbb
xchg
aam
adc
jne
push
lock
jb
adc
movsb
adc
int
add
repz
aad
iret
data16
add
ja
add
int3
xchg
es
stos
out
or
in
mov
in
out
in
aaa
ret
xor
mov
mov
in
or
mov
fisttps
dec
cwtl
sub
mov
ss
cmp
out
mov
push
inc
mov
inc
lods
jge
sub
jmp
mov
fisubl
test
xor
inc
add
scas
jl
inc
adcb
and
std
lock
fs
mull
mov
adc
into
nopl
xor
cmp
lret
or
into
add
cmp
icebp
xchg
pushf
sti
xor
daa
jb
sbb
mov
fsubp
aas
popa
rcrl
push
adc
xor
sub
fs
fildl
fs
and
fadds
in
sti
in
adc
jl
xchg
call
sub
mov
or
jbe
pop
repz
stc
inc
or
dec
lcall
cmp
cmc
fidivl
xchg
fstl
and
test
jnp
rcrl
mov
mov
ret
and
jo
arpl
adc
jne
adc
push
mov
dec
dec
adc
jns
jmp
cmp
xchg
sbb
dec
das
adc
mov
out
mov
rorb
adc
inc
jecxz
pop
xchg
ljmp
cmp
and
mov
andb
pusha
aam
inc
rcll
popa
addps
repnz
stos
loope
jle
mov
jle
ljmp
adc
mov
out
stos
add
insb
jne
sbb
add
inc
inc
add
mul
icebp
cltd
pop
sbb
inc
dec
inc
xchg
pusha
xchg
xor
jno
mov
clc
jp
unpcklps
aam
mov
sub
ss
and
int
jl
in
xor
enter
rorl
and
adc
dec
inc
nop
ja
hlt
lahf
cmp
mov
scas
fs
fisubs
xlat
pop
push
and
stc
ret
adc
inc
enter
mov
stos
add
push
pop
inc
mov
pushf
call
out
fsubl
dec
or
inc
xchg
push
pop
sbb
xchg
and
jmp
dec
mov
cwtl
in
and
in
iret
incb
test
imul
div
lcall
fst
sbb
push
notb
push
pop
js
sub
dec
icebp
add
adc
adc
ret
mov
fildll
sbb
jnp
push
fucomp
je
mov
lods
loopne
insl
push
inc
sub
das
subl
shr
xor
in
or
lcall
out
ljmp
or
xchg
pop
mov
add
push
ljmp
in
pop
mov
mov
cmp
adc
mov
mov
cmp
popa
pop
inc
les
mov
and
push
int
pop
fdivl
sub
ss
pop
mov
shll
inc
movsb
out
cmp
jp
clc
mov
push
dec
nop
add
mov
add
hlt
enter
mov
cmp
xchg
sub
mov
imul
jb
push
push
and
sbb
add
popf
paddsb
xchg
and
xor
inc
mov
add
cmpl
das
fidivl
into
pop
cli
cwtl
mov
xchg
xor
cmp
gs
adc
pushf
inc
arpl
ror
gs
je
mov
push
sub
mov
push
js
dec
xchg
sub
xlat
jnp
gs
call
fstl
sarb
push
movsb
stos
mov
and
pop
xor
add
sub
iret
jb
int3
adc
push
pusha
js
sub
xor
cmpsl
lret
mov
mov
lfs
fistps
mov
dec
lods
out
jo
jecxz
cmp
jle
movsl
insb
push
push
sub
xchg
cli
add
stc
mov
gs
xor
adc
mov
pop
outsb
push
jmp
inc
leave
popa
mov
repz
lds
imul
or
pop
adc
sub
mov
out
xor
cld
lods
into
test
in
push
enter
insb
sub
outsl
mov
pop
xchg
mov
push
push
outsb
pop
int
jecxz
push
shlb
inc
push
jns
lods
mov
cltd
jo
mov
cmc
jae
add
bound
cmpsb
stos
jo
jecxz
jno
int
or
cmp
xchg
and
mov
xchg
iret
dec
sub
jg
mov
add
sbb
dec
xor
imul
mov
add
push
mov
gs
loope
push
add
adc
jmp
mov
in
int
sbb
sub
inc
sub
lahf
movsb
or
test
orb
adc
mov
cmp
jmp
adc
xor
jecxz
push
fstpt
cmp
adc
mov
add
mov
bound
xchg
ficoms
mov
rcll
out
clc
cmc
test
je
dec
adc
adc
enter
int3
cmp
pop
mov
pop
in
jmp
hlt
xchg
dec
adc
in
mov
or
and
cmp
sub
mov
mov
je
adc
shll
loopne
fnstenv
cmp
stos
xchg
adc
sbb
roll
addr16
xchg
sti
dec
and
jo
insl
call
inc
cs
cmpsb
in
adc
lds
sbb
shll
popa
push
dec
lods
sbb
xchg
cmp
mov
jg
cs
xchg
sub
repnz
fmuls
push
mov
out
shrb
int
pushf
push
mov
imul
xor
sbb
mov
jbe
jg
xchg
jno
jae
add
or
xchg
outsl
icebp
push
fildll
mov
adcb
pushf
push
daa
pop
mov
imul
push
push
mov
movsb
adc
rol
jne
loopne
dec
dec
insb
data16
das
and
adc
cmp
das
xchg
dec
xchg
or
dec
lahf
mov
xchg
pop
out
xor
push
stos
pop
dec
cmp
xor
dec
rclb
jbe
inc
push
daa
mov
in
and
and
decl
push
pop
popa
adc
faddl
xchg
push
hlt
pushf
pop
pop
test
sub
gs
mov
repz
out
lret
or
cmp
sbb
ds
push
sub
cmpsl
cmc
xchg
imul
add
jnp
mov
jmp
je
imul
into
sbb
mov
jae
mov
push
out
or
mov
test
mov
repnz
sbb
lcall
gs
aad
cld
sbb
lahf
out
pop
cmp
dec
mov
and
mov
xchg
add
pop
mov
cltd
push
in
xlat
clc
sbb
pop
push
add
push
cmc
repz
jl
mov
test
add
pop
into
ja
add
fwait
inc
lret
shll
cmp
cmp
rcrb
dec
and
cld
pusha
xchg
push
cmpsb
inc
pushf
pop
bswap
mov
ds
clc
pop
adc
dec
lret
lds
and
sub
scas
loopne
push
sub
xchg
repz
xor
pause
mov
call
adc
sbb
and
jge
push
xor
push
mov
xor
cmpsb
jno
or
mov
mov
and
fiadds
jge
mov
adc
div
sub
dec
movsl
rcll
push
fiaddl
jecxz
cmpb
fs
hlt
test
jne
stos
loopne
mov
insl
imul
imul
xchg
push
loope
dec
data16
cmp
loopne
sub
sbb
arpl
lcall
cmpl
or
rcr
in
sub
scas
sub
mov
sbb
mov
and
aas
or
fisubrl
sti
and
push
xor
sbbb
mov
push
test
push
adc
sbb
mov
pandn
dec
push
scas
cmpl
add
fdivp
movsl
das
test
cmp
adc
fadds
or
data16
aam
jl
push
fdivrl
pushf
pop
sbb
push
mov
cmp
dec
xor
in
adc
mov
jge
ret
popa
cmovp
pop
and
dec
mov
insb
adc
out
popa
xor
xlat
enter
xchg
sub
aam
in
cmp
lret
mov
clc
lahf
in
addr16
xchg
pusha
push
pop
cwtl
shrl
enter
cmp
adcb
aad
jp
icebp
lahf
pop
rclb
add
shl
ret
mov
cmc
fs
add
mov
test
in
ja
xchg
add
inc
sbb
mov
inc
ret
mov
pop
mov
mov
js
sub
movsb
dec
imul
int3
test
mov
or
arpl
push
adc
fildl
lcall
sti
xchg
fists
inc
fcmovb
cwtl
movsb
inc
and
cli
rorl
cltd
pop
inc
outsl
sub
dec
popf
jae
in
jl
xor
sbb
mov
jae
pop
ja
jb
add
jns
sbbl
push
sub
aaa
std
push
sbb
push
sub
push
iret
jbe
jge
pop
jecxz
dec
shlb
inc
out
int
cmp
mov
pop
jbe
mov
push
sub
and
cmp
ret
cwtl
adcb
inc
mov
repz
mov
pushf
ror
dec
inc
movsl
mov
insb
push
sbb
or
add
and
add
outsl
and
dec
popf
mov
sahf
test
cwtl
mov
icebp
xchg
cmp
pop
add
stos
jnp
jge
jne
fsubl
push
mov
lret
fidivrl
fwait
andl
add
in
insl
or
outsb
dec
adc
dec
jmp
cmc
enter
adc
sbb
xor
loop
sarl
pop
lahf
pop
xor
cmpsb
les
cmp
pop
lea
jbe
jb
in
mov
pushf
xor
mov
mov
jbe
jae
push
je
mov
ret
ss
stos
shlb
xor
mov
daa
jmp
cltd
xchg
xlat
sbb
stc
les
dec
and
jle
daa
sarl
mov
mov
push
xchg
hlt
dec
lea
pop
xchg
inc
xchg
call
or
fsub
dec
stc
repz
jge
jp
fcmovnb
adc
mov
mov
mov
ljmp
sub
jecxz
inc
subb
psrlq
aaa
into
sahf
loopne
pushf
sub
jecxz
lret
add
dec
inc
enter
imul
scas
dec
divb
mov
ficomps
scas
aad
adc
adc
pop
sbb
mov
cld
test
dec
loop
mov
test
jns
les
jne
and
jmp
lods
cmp
rorl
cltd
fadds
lret
inc
jno
fiaddl
mov
sti
lea
nop
andb
mov
adc
and
jle
test
mov
sub
jb
pcmpgtw
adc
or
ret
or
xchg
out
pop
cld
fnstcw
stos
adc
sub
ljmp
movb
inc
filds
mov
push
push
call
in
pop
dec
mov
test
out
sub
mov
aad
fwait
rorl
stc
cmc
cmp
aaa
cwtl
and
or
les
mov
lcall
stos
and
or
mull
lcall
aaa
pop
adc
lds
ret
shll
inc
push
dec
mov
dec
fwait
mov
inc
jmp
mov
negl
cs
xor
dec
mov
out
mov
stos
mov
sbb
xor
int3
test
pusha
cmp
inc
mov
pop
mov
test
jb
ds
cli
pushf
bound
out
xor
dec
or
mov
xor
and
insl
scas
xchg
cld
sbb
cmp
sbb
insb
pop
pop
jge
test
repz
xor
insl
loopne
pop
adc
dec
rolb
mov
outsl
andl
leave
sbbl
shlb
rorb
out
add
lahf
dec
mov
loopne
into
mov
adc
fnclex
ljmp
repz
int3
lea
movl
jns
push
sahf
lea
push
mov
test
push
lods
shr
xor
mov
inc
pop
es
mov
push
mov
dec
dec
push
out
imul
sub
adc
ja
dec
and
xor
mov
push
xchg
inc
cmpsb
or
fdivrs
mov
push
cmp
hlt
xchg
outsl
movsl
cwtl
insl
xor
xor
outsb
dec
mov
data16
lock
insb
push
int
orl
xor
adc
or
xchg
sarb
xchg
push
jl
inc
fbld
ljmp
xor
cmp
cmc
scas
lret
xchg
js
iret
aam
rclb
or
adc
adc
cmpsl
add
sbbb
pop
push
jl
inc
add
xor
sbb
xor
ret
imul
test
xchg
inc
fidivl
jg
cmp
jmp
sbb
testb
push
inc
ss
sbb
cmpsb
outsb
inc
test
movsl
jnp
or
jnp
mov
jg
je
push
pop
es
adc
push
mov
aaa
popa
mov
ljmp
xchg
out
js
int
lret
jne
ret
pop
lret
xor
push
es
addr16
push
sub
sbbl
arpl
int
mov
outsl
shrl
in
data16
pop
or
cmp
and
and
data16
inc
loope
mov
xchg
cltd
jmp
xchg
test
aaa
mov
sbb
sti
pop
pop
repz
push
jle
jmp
cmpsb
aaa
iret
push
and
aaa
xchg
push
in
popa
in
int3
jmp
addb
pop
in
cld
mov
dec
or
jecxz
pop
push
push
dec
dec
rolb
lret
stos
mov
lock
cwtl
jecxz
xchg
or
cmpsl
and
jp
lods
sub
pop
daa
sbb
adcl
scas
fs
push
cvtps2pi
cwtl
push
aad
cwtl
xchg
jle
iret
das
push
scas
add
jge
dec
mov
mov
inc
loopne
imul
inc
scas
icebp
inc
push
mov
popf
jne
addr16
jns
mov
aam
cmpsl
in
mov
movsb
dec
aad
mulb
movsl
icebp
stos
fs
pop
xchg
add
ss
mov
lahf
cld
pop
fiaddl
push
loope
fsts
mov
into
push
mov
dec
pop
push
and
push
inc
xlat
lret
outsb
mov
outsl
aaa
push
test
ja
je
xchg
enter
mov
cld
outsb
add
test
push
insb
sub
out
enter
push
mov
cmc
xchg
add
and
out
and
movsb
in
call
add
out
or
dec
fadds
or
cmp
sub
ds
jb
orl
dec
mov
mov
xor
xlat
push
test
push
jae
or
cmp
aad
inc
mov
mov
pushf
fnstcw
sti
subb
stos
lahf
aas
js
flds
sahf
lahf
loope
xchg
add
push
xchg
pop
or
out
movsb
mov
or
xor
jmp
lock
in
jmp
sbbl
and
adc
movsb
adc
scas
jl
lods
mov
loopne
jg
mov
sub
sbb
shl
addr16
jbe
cwtl
cmpsb
sub
inc
jae
jp
je
add
inc
xchg
mov
push
mov
lahf
dec
inc
hlt
xchg
test
cld
repnz
xor
jecxz
jne
add
shl
xor
ja
sbb
dec
sar
sub
jno
push
jmp
adc
mov
into
adc
sub
mov
add
mov
icebp
jae
lods
mov
scas
in
ja
in
pop
or
sub
mov
imul
mov
lds
jae
scas
or
iret
mov
cmp
mov
jbe
fisubrs
fmull
and
lahf
leave
jne
popa
pop
mov
adc
xor
push
xor
jg
ret
andb
mov
jae
mov
jns
cs
sahf
out
jmp
fisttpll
push
push
jg
jae
cmpsl
pop
sub
into
pop
add
mov
outsl
pushf
sub
cmp
int
jecxz
jle
std
push
in
jne
test
push
pop
push
sbb
popa
pop
inc
adc
in
cmp
xchg
pop
sbb
or
ret
and
lods
loop
inc
fs
pop
lods
test
out
insb
shll
sbbl
xchg
add
punpckhdq
xor
adc
rorl
clc
adc
arpl
pop
dec
xlat
push
mov
mov
fcomp
faddl
xchg
push
rorl
daa
mov
sub
in
dec
jb
cmpl
call
mov
xchg
icebp
adcb
int3
pop
psrlq
shlb
mov
dec
xchg
lods
fimull
loope
cld
jb
xor
cs
push
push
xor
dec
jecxz
and
jo
adc
pusha
repz
loop
bnd
xchg
and
inc
xchg
sahf
mov
mov
jecxz
inc
dec
xchg
clc
iret
mov
cmp
xor
mov
jp
std
ljmp
pop
push
loop
lcall
push
mov
sub
mov
lret
roll
mov
les
mov
pop
cmpb
fildl
inc
imul
push
mov
sub
mov
js
adc
pop
js
push
call
sar
dec
xor
push
mov
sbbb
ds
adc
ja
out
ljmp
rcrl
xchg
lods
nop
jbe
repz
daa
cs
mov
add
das
sub
icebp
pop
call
pop
cld
lret
mov
mov
jle
lea
js
aad
cmp
dec
mov
adc
cs
mov
fwait
mov
push
aad
dec
inc
ds
adc
in
jle
mov
stos
lods
clc
pop
lahf
iret
in
mov
push
xchg
and
cmpsl
and
mov
fs
mov
pop
das
stos
mov
fwait
push
fsubrl
inc
out
push
enter
jnp
xchg
adc
push
cld
popa
cwtl
in
add
stos
jne
pusha
ret
int
fwait
cmpsl
or
jno
mov
mov
popa
mov
push
ret
mov
ret
and
rolb
arpl
adc
jle
int
aad
jmp
rcr
push
sahf
jg
sbb
adc
add
sarl
loopne
pushf
cwtl
int3
mov
andl
pop
push
std
sbbb
dec
movsb
shlb
fildll
cmp
and
pop
fists
xchg
push
dec
add
mov
stos
inc
adc
inc
sbb
jmp
or
xchg
pop
fwait
push
out
cld
dec
movsb
movsl
mov
pop
pushl
stc
enter
push
jge
hlt
rorl
adc
pop
pop
ja
das
xor
push
push
jno
insl
xchg
sub
sub
data16
pop
push
in
pop
in
and
outsb
repz
stos
mov
std
cmpsl
insb
cli
push
xchg
divps
or
les
rol
pop
sarb
and
xor
movsl
repz
scas
pusha
mov
push
sbb
push
andl
add
cmp
xchg
loop
es
xchg
lds
xchg
mov
pop
fwait
push
rcl
adc
push
stc
repnz
pushf
test
cmpsb
inc
inc
sbb
or
mov
stc
mov
js
mov
jbe
and
repnz
mov
repz
in
lret
enter
addl
scas
xchg
cmp
jp
mov
cmp
rcrb
fmul
in
stc
adc
cmc
push
insb
aaa
fsubl
xor
mov
dec
cmc
out
xchg
sbb
sti
cmc
jo
and
fs
mov
test
pop
xchg
cltd
rorl
popl
call
mov
xchg
stos
xor
es
adc
outsl
movntq
sbb
call
mov
cmp
sarb
repnz
add
sbb
test
jns
fidivrs
imul
push
inc
xchg
mov
adc
lds
lret
xor
int3
sbb
aaa
jb
js
incb
bound
hlt
sub
adc
movsb
inc
pop
and
aam
and
cmp
hlt
out
scas
xlat
push
lods
sbb
fists
xor
scas
sub
sbb
mov
dec
rclb
inc
push
mov
mov
xorl
test
pop
loopne
cltd
mov
inc
and
xchg
or
and
ss
push
std
pop
add
and
mov
sub
cmp
adc
mov
cld
frstor
push
or
pop
jae
ss
insl
loopne
lds
insb
int
xor
dec
mov
pop
ljmp
test
nop
adc
or
or
iret
adcl
clc
call
lods
ss
mov
add
out
insb
mov
nop
iret
dec
or
out
das
pop
dec
shrl
inc
sub
xor
scas
in
push
ljmp
xor
or
pop
andl
loope
mov
scas
jae
ret
adc
cmp
push
pop
add
mov
sbb
lock
mov
xor
xchg
and
jo
fidivs
cmp
cmpsb
jnp
das
xorl
sbb
in
pop
add
hlt
sbb
or
xchg
into
pop
loopne
xacquire
data16
pop
mov
sti
mov
cmc
jo
hlt
pop
ss
push
popa
or
pusha
mov
cmpsl
jl
add
add
sbb
imul
in
add
loop
cmp
xor
or
pop
and
in
das
mov
adcl
ret
xchg
jae
mov
sbb
fcmovne
fdivrs
and
dec
fists
pop
dec
stos
inc
cld
cmp
sub
loopne
shrl
push
ret
lcall
pop
stc
outsb
add
sbb
mov
ds
dec
adc
cs
loop
roll
adc
addr16
aad
mov
cmpsl
adc
dec
cmp
mov
mov
nop
icebp
scas
out
in
in
mov
lock
jp
and
or
pop
outsb
iret
das
jmp
popf
dec
pop
addr16
inc
mov
or
mov
sahf
push
popf
aam
je
mov
fiaddl
into
jle
fsts
add
sbb
dec
out
xor
push
or
std
repnz
mov
sbbb
fdivrs
or
cs
test
xlat
cmp
jle
arpl
mov
addr16
and
test
arpl
xchg
mov
inc
jg
mov
mov
pop
cmp
rorl
xor
jno
lea
mov
add
and
push
pop
xchg
pop
jmp
shlb
and
adc
mov
inc
aam
loop
aam
mov
adc
xor
movsl
sbb
in
or
testb
jne
inc
push
rclb
mov
filds
pop
or
jne
mov
pop
xchg
negb
cmp
xor
xchg
push
cmp
test
mov
sahf
ja
sub
add
sub
jl
add
mov
pop
push
outsb
mov
ljmp
push
dec
testl
aam
out
sti
xchg
sub
leave
push
scas
mov
xchg
mov
or
mov
or
push
push
lods
in
es
iret
adc
pop
push
mov
lods
pop
test
xchg
aad
outsb
sub
scas
andb
sbb
fcomip
out
iret
sbb
jmp
pop
jo
int3
jno
sub
fcmovnu
call
fisubl
cmc
movsb
addb
jo
add
xchg
pop
mov
mov
lcall
icebp
pop
fwait
lds
xchg
mov
subb
enter
test
movb
adcl
das
lret
pop
loopne
mov
test
lret
iret
mov
ja
cs
push
out
jae
nop
and
clc
in
ret
mov
mov
cli
aas
rsqrtps
out
push
jle
rol
dec
into
cwtl
aaa
std
daa
nop
mov
aam
mov
mov
lea
mov
and
subl
daa
je
push
or
dec
je
cli
pop
nop
std
dec
orl
and
dec
ja
loope
aam
dec
xor
sub
lods
xlat
pushf
rorb
clc
lcall
pop
daa
jo
dec
sub
insl
and
cmp
mov
add
and
mov
shrl
mov
xchg
fistl
and
cmpb
or
mov
cld
xor
popf
out
dec
sub
xor
push
inc
les
jge
pop
push
sub
add
mov
pop
xchg
or
pushf
mov
mov
cmp
rorl
fnstcw
xor
movsl
inc
cmp
aaa
jge
jnp
aas
loop
xchg
das
cmp
in
xchg
fadds
pop
mov
shrl
leave
shlb
push
outsb
das
adc
mov
push
orb
imul
data16
std
lea
lret
dec
ret
repz
dec
imul
xor
inc
pop
fstpt
cmp
les
xor
xor
inc
dec
cli
test
dec
jmp
adc
adc
xor
pop
mov
pop
cmp
loopne
mov
pop
push
stc
jge
pop
push
cmc
add
cmc
inc
outsb
mov
iret
scas
mov
xor
mov
add
inc
jns
sahf
popa
testb
arpl
out
push
ret
or
xor
xchg
cmpsb
push
out
add
push
enter
dec
mov
arpl
adc
aad
dec
ss
in
inc
nop
imul
clc
pop
lods
push
divl
push
mov
mov
adc
loopne
fcmovnb
movsl
push
mov
cmc
inc
fcmovu
pop
sbb
mov
xor
mov
xchg
mov
and
leave
pop
cli
dec
sub
mov
es
pop
stos
dec
mov
pop
pushf
rol
jnp
inc
mov
popa
daa
leave
pavgw
mov
enter
xchg
mov
pop
cmp
shlb
dec
cli
rcrl
mov
lahf
mov
cmpsl
pusha
adc
jle
and
or
add
push
out
and
pop
test
stos
or
xor
cmp
xchg
xchg
jo
sub
jecxz
out
mov
push
and
pop
mov
leave
in
inc
push
push
faddp
mov
mov
fcoms
and
out
push
pop
bound
lea
leave
inc
sbb
mov
jne
add
jo
lea
xchg
mov
mov
or
xchg
push
lcall
and
or
cli
xchg
adc
cli
arpl
pop
mov
cmp
daa
lods
push
daa
lods
inc
push
or
mov
mov
shlb
pop
out
and
es
insb
jmp
cmp
mov
inc
xchg
cmpsb
adc
xchg
je
jo
push
mov
ss
inc
add
subl
sbb
cmp
loope
icebp
inc
outsl
fsubr
push
aam
mov
sub
mov
js
jl
ljmp
stos
jp
aas
jg
inc
cmpsl
int
xor
jae
mov
stc
xor
xor
mov
mov
xchg
xchg
jns
loope
sahf
add
and
ds
mov
xlat
pop
push
jmp
mov
hlt
push
pop
out
and
pusha
fidivrs
and
test
lods
mov
mov
cwtl
inc
push
test
push
iret
fs
mov
cmpsb
mov
xlat
jb
push
dec
inc
jge
sahf
dec
xchg
jno
push
xor
mov
mov
hlt
or
popa
add
sub
ljmp
gs
sub
cmp
xor
test
ret
push
fld
cmp
cmc
jecxz
popf
jecxz
clc
push
jmp
sbb
jge
push
je
bound
sahf
inc
pop
cmc
lea
std
std
inc
pushf
mov
or
test
stc
xor
repz
mov
dec
sbb
aas
mov
ror
dec
pop
sub
or
push
stos
sbb
cmp
loop
inc
out
jbe
mov
jno
xchg
lret
pusha
inc
cmp
int3
sub
and
cmc
test
cld
push
inc
adc
dec
rcl
rolb
cmp
aam
mov
jbe
jnp
mov
insl
add
mov
enter
stos
mov
sbb
cmpsl
es
push
nop
fistl
inc
mov
lea
add
nop
ret
push
aaa
pop
ret
lods
push
cs
aam
or
mov
insb
push
cs
out
dec
sbb
or
std
je
pop
pop
pop
out
push
xchg
adc
sub
jp
add
loop
or
jl
gs
jp
mov
sub
mov
sbb
cmp
mov
lods
add
xchg
pushf
sub
pop
fdivrs
mov
nop
mov
or
dec
and
aad
cmc
or
mov
jns
inc
add
inc
rcrl
push
aaa
jb
cwtl
or
mull
pop
repz
push
mov
lret
mov
dec
push
sub
jg
jo
repz
xlat
in
jno
pop
and
packsswb
fwait
cmpb
lcall
jg
outsb
dec
adc
xchg
scas
push
inc
sbb
fcoms
jp
cmpsl
adc
lret
xor
and
push
repnz
movsb
lods
sub
bound
adc
ret
adc
clc
or
jne
int
sti
jo
movsl
mov
enter
xor
ljmp
add
add
test
xor
push
inc
and
pop
pushf
xchg
lds
cmp
out
jge
pop
inc
out
push
lea
adc
pop
scas
sub
push
and
stos
dec
clc
cmp
cmpsl
out
add
push
mov
mov
ret
lea
in
cmp
xchg
cld
lcall
enter
lretw
sub
lods
mov
fisubl
pop
xlat
mov
daa
and
fsubrl
imul
fsubrl
jmp
iret
subb
ret
out
inc
jecxz
aaa
jg
push
mov
and
aam
test
test
lods
inc
adc
sbb
mov
sub
sub
fcoms
or
fisubrs
in
bound
and
dec
insl
in
or
jle
call
out
push
cwtl
push
and
into
lods
pop
mov
daa
testb
sahf
int3
scas
loopne
pop
mov
outsl
fildll
pop
adc
movsl
lea
push
imul
lds
or
xchg
ljmp
xchg
mov
cltd
mov
jbe
out
leave
out
pusha
cmc
aas
cmc
xchg
hlt
js
lods
add
jp
adc
mov
sbb
test
cmp
mov
jge
mov
mov
adc
or
inc
out
mov
push
aad
vpavgb
repz
sti
popf
rol
divb
push
or
cltd
and
xchg
mov
addr16
aam
mov
fsubl
ror
push
jnp
out
sarb
imul
xchg
call
cli
or
cmp
dec
jne
sarl
subb
xchg
dec
lahf
sbb
mov
sub
and
sbb
sti
cwtl
cwtl
mov
movsl
in
gs
or
inc
imul
das
dec
xor
jle
cmp
push
push
nop
mov
les
stc
add
xor
outsl
out
movsb
ret
out
out
aam
xlat
or
pop
xchg
ljmp
call
sub
jl
gs
push
mov
sub
mov
imul
or
jmp
enter
flds
or
sbb
outsl
pop
test
aas
xor
mov
jae
test
xlat
adc
nop
ret
cmp
fdivs
repz
xchg
popa
sub
mov
pusha
push
pusha
rolb
push
and
pop
or
ret
cmp
stos
int
xchg
je
cwtl
mov
ds
shl
fildll
xchg
xchg
jnp
add
sbb
sub
fstpt
adc
jno
lret
cmpsb
jl
aad
ret
sarb
fs
aad
std
sub
mov
xor
and
jnp
fucomip
sbb
enter
sub
scas
sub
jp
aas
inc
xchg
pop
inc
xor
mov
loop
xor
fxtract
mov
jne
add
cmpsl
in
push
fnstsw
inc
pop
xor
arpl
mov
inc
js
fs
gs
out
js
testl
jo
or
push
loope
rclb
filds
out
dec
xor
adc
mov
sub
mov
mov
add
popf
lcall
xchg
fnsave
outsb
sarl
mov
aas
inc
xchg
push
testb
adc
sub
les
outsl
cmpsb
mov
mov
xchg
jecxz
arpl
lret
popf
cld
cwtl
pop
ds
js
ret
and
and
mov
and
jmp
cmp
in
loop
pop
xlat
jnp
mov
push
mov
mov
push
or
inc
push
pushf
inc
cmp
or
leave
sarl
pusha
push
xchg
inc
push
jo
sub
sti
jns
jp
push
mov
imul
js
pop
data16
push
lahf
adc
stc
sub
mov
sub
inc
push
notb
or
mov
sahf
mov
test
xchg
int
cmp
xchg
dec
xchg
xchg
ja
inc
xchg
aaa
test
xor
ss
cmpl
aam
cmp
mov
test
shlb
shl
or
testb
out
xchg
mov
dec
pop
cli
dec
pop
out
cwtl
out
xchg
and
pushf
repz
sub
jecxz
xchg
or
inc
dec
mov
or
jge
lret
mov
lea
addl
out
mov
sbb
std
inc
in
popf
xchg
ret
jg
mov
test
push
movsb
push
cmp
mov
dec
cwtl
into
iret
cmp
fisubs
fucom
pop
xor
movsb
sub
in
gs
pop
std
jnp
in
jmp
sub
add
add
daa
in
cmpsl
das
adc
in
stos
dec
scas
stos
insb
pusha
stos
mov
sub
or
cld
es
xor
inc
jmp
ficomps
aad
out
imul
repnz
xchg
insl
jp
mov
sbb
in
xchg
jecxz
lock
cwtl
fcmove
cmp
mov
lods
inc
in
push
mov
ja
and
scas
sti
dec
jns
les
movsl
adc
mov
add
fidivrs
push
xor
push
cmc
cmpsb
add
aad
jne
sbbb
je
cmp
lock
enter
imul
imul
xchg
xchg
repnz
xchg
mov
cmc
pcmpgtb
and
out
mov
lods
mov
dec
mov
xor
ja
in
aam
pop
mull
or
pushf
scas
pop
push
jno
stos
js
movsb
js
push
pop
pop
es
repz
vcvttps2dq
jg
gs
cmp
std
or
cmc
cmpsb
xor
test
inc
lcall
lret
sbb
xchg
jnp
in
or
pop
cld
aas
add
jp
inc
loop
xchg
dec
mov
das
add
and
or
inc
and
gs
add
sar
outsl
int
or
cmpsb
pop
cld
mov
add
pop
fnsave
cmp
cmpsb
pop
and
mov
add
mov
pushf
mov
out
xchg
pop
and
inc
mov
lret
roll
jp
push
mov
or
pop
xchg
cwtl
and
leave
add
leave
cmp
rep
push
out
mov
xlat
repz
into
mov
stc
inc
dec
arpl
xchg
push
les
adc
inc
mov
cld
ret
aaa
jg
mov
sbb
pop
jnp
pop
je
test
pop
or
cmpsl
stos
jp
scas
lret
mov
sbb
jne
push
sbb
dec
sub
sbb
sub
dec
dec
notb
mov
sbb
std
int3
out
adcb
call
push
les
in
jmp
add
insb
fcomps
push
adc
xchg
lcall
lods
pop
enter
adc
sar
dec
fsub
clc
push
xchg
fsubp
and
push
dec
sub
mov
ja
arpl
inc
out
push
xor
mov
sub
cltd
sub
add
or
stos
cmpsl
cmp
popa
iret
sbb
mov
lret
cmp
jns
pop
and
xchg
mov
lret
pop
sar
dec
xor
outsb
shl
fsub
cmc
movsl
scas
or
gs
jbe
mov
adc
inc
imul
fidivl
mov
mov
enter
adc
fucomip
cld
gs
or
repz
mov
cmp
popa
lods
sub
jmp
add
int3
pop
lds
cmp
mov
dec
imul
insl
xchg
cmp
pop
test
call
mov
jle
cmp
ret
cmp
popa
test
dec
sub
mov
rclb
stos
lcall
rcrb
int3
xchg
and
sub
jno
imul
xor
repnz
ss
mov
pop
lcall
into
cmc
xchg
aas
xor
dec
je
es
ss
and
xor
rcrl
lods
xor
or
add
jne
fidivrs
cld
push
loop
add
lret
push
inc
push
xchg
cmp
push
out
jle
add
jne
push
mov
add
xchg
mov
or
fcomip
ljmp
nop
rorl
push
xor
and
and
stc
repnz
and
bound
in
inc
push
xchg
pop
in
lret
fcomip
xchg
pop
fs
mov
mov
or
out
adc
pop
int
xor
stos
scas
outsb
pushf
loope
sbb
mov
xchg
or
test
mov
mov
push
fimull
ja
sahf
pop
adc
in
push
sahf
in
shll
je
stos
unpcklps
dec
mov
cmp
mov
xor
insb
sbb
loopne
sarb
sub
bound
pop
das
dec
inc
fsubr
scas
in
ss
rcr
test
dec
adc
mov
pushf
scas
fincstp
sub
push
mov
scas
pop
xor
fs
sbb
in
insl
stos
and
pop
incb
ficomps
movd
inc
sub
sbb
jne
xchg
lock
push
sub
dec
push
mov
sbb
add
repz
in
xchg
into
aaa
lret
lcall
test
mov
enter
mov
push
jg
pop
mov
call
and
mov
pop
pop
cwtl
cmpsb
daa
adcb
jbe
in
out
sub
push
xchg
hlt
push
aas
cmpb
adc
les
or
mov
mov
insl
mov
pop
jae
pop
enter
adc
xlat
jmp
dec
pop
push
inc
aas
scas
or
outsl
xchg
and
in
adc
inc
out
cmc
mov
jp
inc
push
mov
jne
push
popf
imulb
mov
repz
mov
sti
rorb
sti
movsl
jb
pop
popa
xorl
push
movsb
push
pop
lds
rcrl
jo
xchg
iret
cmovl
testb
mov
incl
pop
hlt
or
leave
sub
cmp
mov
push
imul
lahf
mov
inc
andb
or
cwtl
or
lret
mov
sbb
sti
pop
or
or
adcb
rcrb
mov
idivl
cs
lock
mov
dec
pop
mov
xor
mov
es
mov
mov
and
xchg
mov
imul
add
and
movsb
icebp
cmp
xor
and
ret
adc
cmp
cmpsb
jo
repz
testb
add
jb
xchg
call
test
xchg
push
lods
lea
cmp
push
jae
and
push
fstpt
dec
pop
repz
and
out
ss
sub
repnz
push
push
jne
sbb
mov
ret
mov
iret
xchg
xor
test
loop
popa
dec
lea
or
and
in
lds
cmp
mov
mov
sbb
sub
push
lcall
xor
mov
pop
dec
or
push
xor
inc
fs
subl
sub
inc
dec
xor
enter
mov
aaa
cmpsl
or
hlt
int
js
push
lret
add
dec
mov
xchg
and
lea
shrb
loope
jnp
mov
out
push
mov
jo
xor
fcomps
jne
inc
insl
jle
and
test
push
idivl
push
movsl
mov
nop
test
push
lds
ficompl
and
lcall
adc
xchg
fs
cmp
jge
loope
add
cmp
insb
mov
js
cmpsl
lods
sarb
jecxz
xchg
xor
ret
jo
mov
outsl
ja
int3
cli
lods
orb
fnstenv
sbb
pusha
mulb
xlat
test
repz
mov
push
rcrb
clc
hlt
cmp
add
aaa
ret
addr16
or
roll
data16
iret
inc
ds
and
jp
hlt
gs
arpl
push
xchg
bound
repz
fildll
inc
mov
mov
sub
xchg
fs
jb
mov
inc
dec
inc
push
pop
sbb
data16
jo
clc
xchg
subb
and
imul
subl
inc
fcompl
jno
aas
cwtl
xchg
call
adc
lea
xor
pushf
iret
test
mov
adc
and
imul
or
and
mov
stc
adc
sub
jle
in
dec
pusha
or
addl
cmp
imul
mov
sti
pop
stc
decb
ficomps
push
aad
test
shr
mov
xor
sub
push
addr16
mov
in
mov
lahf
mov
loop
pop
leave
pop
scas
movsb
mov
scas
xor
mov
inc
xchg
test
mov
hlt
inc
aaa
das
pop
hlt
pop
js
adc
jl
lds
sar
jae
test
enter
add
mov
popf
loope
mov
movl
movb
cmp
movsb
hlt
mov
scas
into
dec
bound
inc
jge
dec
fldpi
jge
je
shll
popa
pop
add
aad
xchg
loop
inc
sub
in
ljmp
push
dec
in
dec
pop
sbb
push
ret
roll
push
lock
jmp
dec
arpl
or
sbb
push
int3
data16
sbb
mov
jg
imul
fidivl
aas
adc
pop
sarl
rcr
pop
or
subl
mov
rcrb
or
ds
icebp
xor
lcall
ds
mov
adc
mov
or
sub
aaa
jb
xchg
pop
data16
jae
add
sbb
jmp
pop
pop
pop
xor
in
dec
pop
cmp
xorb
aas
add
outsl
popa
or
fs
add
push
call
shll
xor
test
mov
les
lods
out
fldl
shlb
fs
lods
pop
scas
cmp
pop
mov
cs
cmp
out
xor
lahf
push
push
mov
cli
xchg
jg
lods
or
jmp
rcrb
pop
pop
sbb
cmp
and
pop
push
push
cmp
notl
xor
cmc
jge
push
sbb
notb
jp
pop
fwait
cmp
or
pop
aaa
fcompl
cltd
lock
push
mov
std
mov
xchg
int
sub
int3
icebp
scas
insl
insl
sbb
repz
iret
das
mov
shr
xchg
sbbl
jno
loope
addr16
mov
aad
xor
xchg
ja
in
mov
loopne
nop
test
out
lds
lds
pop
xchg
xor
jl
mov
outsl
ljmp
mov
add
mov
mov
clc
pop
pop
push
addr16
jo
addr16
mov
rcrb
ss
sahf
add
sarl
jecxz
dec
outsb
dec
adc
mov
repnz
xchg
repz
and
cld
movsb
mov
jne
mov
mov
not
movsb
jo
ja
jo
sbb
or
mov
ret
push
inc
inc
sub
jnp
insl
pop
jnp
push
mov
adc
pop
mov
xchg
sbb
cmp
lret
adc
out
aaa
incb
xlat
loopne
mov
add
test
bound
dec
and
into
push
out
xchg
repz
mov
pop
or
ret
pop
jae
sahf
mov
sub
imul
push
ss
add
push
cmp
push
and
scas
mov
jno
xor
cmpsb
mov
into
xor
fdivrs
cmp
mov
stos
add
jge
int
in
int
orl
outsb
outsl
sti
push
xor
rcrl
inc
push
js
fisubl
jle
mov
jg
sub
imul
fisubrl
in
shrl
daa
add
test
sbb
hlt
fwait
loope
sub
jle
ljmp
lods
mov
inc
inc
repnz
int3
jecxz
jae
dec
jo
cmp
ja
jl
out
xorl
vpunpckhbw
lret
les
pusha
push
mov
mov
sahf
outsl
xchg
insl
dec
negb
add
add
jne
cwtl
xor
cmpsl
push
ljmp
subl
cld
inc
outsb
xor
mov
mov
out
fstps
call
mov
jmp
out
pop
repz
cmp
sti
call
shll
mov
lahf
mov
dec
aam
dec
dec
pushf
fmuls
dec
mov
xlat
push
ret
push
call
repnz
push
popf
pop
jmp
cmpsl
mov
fildll
sbb
adcb
out
sbb
jg
sub
popf
fwait
dec
shll
mov
bound
sbb
inc
daa
push
cmc
mov
sbb
mov
testb
inc
and
leave
xchg
sub
sbb
scas
rolb
push
or
sbb
xchg
adc
mov
ret
popa
push
xor
daa
jbe
dec
xor
push
cltd
lods
lcall
lret
mov
repz
test
push
int
daa
add
cmp
mov
in
pop
dec
imull
roll
or
inc
leave
push
stos
imul
jg
fs
xchg
popf
repz
fimull
mov
and
jge
xchg
scas
cmpsb
nop
imul
jb
cmp
inc
cmc
sub
loop
mov
rol
dec
cli
das
xor
dec
cmc
aad
mov
stos
mov
js
aaa
push
insl
push
mov
stos
mov
and
nop
test
add
pop
sub
mov
test
insb
jle
arpl
mov
popa
std
xchg
int3
pop
pop
cmpsl
lods
pusha
cmc
cltd
inc
into
add
mov
add
rcl
jne
jnp
inc
adc
movsl
xor
and
jne
test
arpl
lret
xor
movsl
jo
pop
lods
push
int
mov
rolb
mov
push
outsl
imul
insl
into
mov
stc
push
xor
shl
int3
clc
repnz
rcrl
icebp
dec
pop
out
pop
lret
push
inc
andl
in
ja
mov
les
sub
xlat
mov
out
pop
pushf
stos
sbb
and
mov
sar
sub
mov
cmpl
sbb
cs
cwtl
mov
jb
sarl
pop
fsubs
or
aam
pmuludq
add
sub
cmp
fdivs
xchg
cwtl
sub
xchg
xor
lock
dec
dec
repnz
das
jge
xor
js
mov
xchg
mov
add
or
popa
out
aas
sahf
leave
aam
sar
adc
scas
ljmp
fwait
aaa
mov
aam
push
push
adc
inc
or
sbb
in
dec
aaa
inc
frstor
or
pusha
xchg
mov
cs
fcompl
test
in
add
mov
inc
outsl
mov
mov
push
cs
add
daa
lret
pushf
stos
sbb
sbb
repnz
lcall
mov
mov
xchg
xchg
or
pop
repnz
iret
push
pop
xchg
mov
sarl
cmp
push
das
mulb
mov
repnz
scas
lds
dec
fwait
push
inc
add
jp
jmp
pop
popa
adc
cmp
and
jp
mov
in
jp
movsl
ja
shlb
mov
addb
xor
scas
sub
mov
scas
cmp
xor
inc
data16
and
ret
out
sub
mov
mov
inc
adc
decl
fcomip
mov
push
lods
pop
inc
adc
jmp
lock
mov
xor
xor
into
xchg
test
mov
fwait
insl
push
rcl
fstp
pop
mov
dec
in
out
scas
loop
push
xor
dec
pop
sti
cmp
sub
pusha
dec
pop
movsb
mov
pushf
xchg
add
leave
imul
loop
fwait
xchg
mov
push
jmp
jp
or
out
ds
xor
ret
shr
xchg
cmp
pop
scas
sbb
shr
pushf
dec
jae
fs
xor
inc
dec
pop
out
mov
push
popf
lea
mov
xor
push
aam
adc
jae
outsl
xor
out
js
xchg
les
insb
inc
jl
cli
push
or
shl
bound
dec
dec
dec
in
jnp
stos
jne
jno
fdivrl
xor
out
repnz
int
mov
inc
and
mov
mov
mov
jno
sti
mov
and
jmp
loop
and
push
ret
outsl
into
or
loope
sub
cmp
cmp
cs
inc
scas
mov
aas
or
adc
mov
cld
les
scas
insb
or
sub
fwait
ret
cs
push
out
mov
xor
sbb
popa
or
fs
je
dec
mov
mov
jp
hlt
and
fistps
sbb
sar
stc
jae
out
jae
adc
popf
push
adcl
ret
fidivrs
sub
dec
fidivrs
cmp
cli
jg
xchg
sti
pop
adc
es
jae
adc
hlt
test
jge
ds
lahf
and
test
ljmp
in
or
stos
mov
rcll
loope
xchg
mov
push
stos
jb
pop
sarl
add
mov
xchg
mov
pop
fucomi
fidivrl
xor
scas
dec
jne
xchg
inc
bound
nopl
sub
push
mov
ss
nop
lret
movsl
les
dec
push
sbb
pop
push
push
ljmp
inc
dec
or
mov
mull
pushf
ljmp
inc
movsb
fstp
xor
pop
cmp
inc
jl
mov
dec
jg
out
das
ljmp
ljmp
insl
call
insb
push
fisubs
out
cli
ja
cld
in
or
push
push
or
fdivl
sbb
test
fistps
loop
xchg
mov
out
add
das
jle
dec
cld
mov
scas
dec
stos
sbb
mov
mov
or
repz
sub
test
mov
roll
das
jg
scas
cltd
scas
addr16
sbb
mov
xorl
push
inc
call
xor
dec
leave
or
pop
cmp
inc
hlt
push
add
cmp
jle
imul
dec
push
jne
sti
cmp
les
sub
and
and
popf
popf
insl
xchg
pusha
stos
add
dec
icebp
mov
xchg
xchg
adc
pop
push
leave
lahf
data16
lret
fadd
push
push
sub
aaa
sub
rcll
popa
aad
xchg
sub
lahf
jae
fisubs
add
cmp
or
in
jl
cs
push
xlat
fwait
mov
mov
sbb
mov
inc
lret
fs
out
out
add
test
dec
push
fimull
ja
ret
stos
imul
inc
ljmp
ret
pop
inc
sub
xchg
jl
sbb
dec
sbb
cmp
or
jmp
mov
mov
aad
icebp
ret
xchg
push
scas
shl
push
xor
jns
in
push
fistps
mov
xor
push
mov
sahf
or
out
rcrb
aaa
push
outsl
stos
push
pop
cmpb
out
and
mov
mov
or
xchg
jmp
inc
cmp
addb
out
in
bound
cmp
sub
jno
pop
outsl
add
jl
jmp
mov
cmp
push
out
pop
mov
sub
pusha
movl
sub
je
mov
add
sbb
imul
pop
nop
inc
fstpl
repnz
addr16
mov
or
addr16
cmp
xchg
mov
sub
jl
inc
and
adc
arpl
test
adc
ret
xchg
hlt
or
roll
stc
xchg
sbb
scas
cmp
adc
cmp
aas
xor
cmpsl
gs
mov
dec
add
xor
imul
icebp
mov
testl
testl
jnp
fmuls
sub
mov
lds
sub
les
arpl
mov
arpl
mov
and
addr16
sbb
fimull
jbe
jg
cmp
mov
jp
inc
out
jns
insl
hlt
push
cld
pop
fnsave
in
xor
pop
mov
dec
pop
adc
test
cmpsb
cmp
inc
aaa
cwtl
loop
out
cmp
cmp
jo
ds
or
or
xor
negb
push
jmp
enter
inc
aaa
push
iret
sbb
xorb
xlat
xlat
and
shl
adc
xchg
jnp
push
pop
das
sub
imul
mov
sbb
mov
inc
iret
inc
js
mov
shll
rcrl
push
ss
xor
adc
sbb
push
lock
leave
push
leave
in
cmpb
lret
dec
pop
nop
dec
and
jnp
test
add
nop
push
lcall
daa
pop
int3
mov
cmc
fbstp
push
xchg
mov
pop
mov
mov
hlt
daa
cmp
ljmp
inc
test
cmpsb
nop
jae
dec
imul
sbb
push
xor
lahf
inc
pop
push
stos
insl
jbe
aas
push
push
repnz
das
in
inc
jge
sub
insb
int3
loop
pusha
and
and
push
rcr
insb
xor
cmp
cmp
stos
iret
int3
fs
icebp
jle
stos
and
inc
adc
fwait
sti
dec
mov
mov
mov
jo
fs
cmp
push
push
pushf
mov
ss
push
pop
sub
sbb
mov
jae
or
icebp
adc
push
hlt
mov
sub
out
dec
dec
cld
fadd
call
out
sbb
and
push
adc
xor
cmpsl
xlat
and
mov
lock
xor
push
lds
jecxz
cmp
mov
stos
sti
jecxz
in
movsl
sahf
jp
pop
sbb
subb
sub
adc
fsubrp
sbb
mov
cld
inc
xchg
dec
movsb
xchg
int
dec
lds
insl
cmpl
push
and
loop
add
pop
jns
sbb
or
addr16
xchg
cmp
cld
test
test
xchg
cmp
orb
cmp
pop
jecxz
jge
jo
and
insl
cmc
int
pop
jne
imul
loopne
jp
outsl
loopne
or
test
and
push
jl
cmp
pop
adc
cltd
sahf
push
std
repz
stc
add
and
mov
mulb
test
ss
cli
sbb
push
jbe
bound
adc
test
mov
scas
fcom
mov
jnp
cmp
fstpl
and
sub
jno
shl
inc
mov
mov
sbb
jo
and
dec
sub
dec
ret
in
movsl
xor
pop
mov
adc
in
xor
addb
push
pushf
push
sbb
rorb
cmp
push
lret
popa
jge
or
daa
lods
add
aam
cwtl
adc
xchg
ret
xchg
xorb
test
cmpsb
push
adc
dec
jo
push
cltd
add
jp
test
push
pavgb
stos
mov
mov
movsb
sti
lea
xchg
adc
data16
or
stc
iret
lock
andb
push
xchg
sbb
icebp
rol
movsl
ss
and
fimuls
stos
xorb
movl
jo
mov
jns
xchg
xchg
inc
fwait
xchg
dec
push
cmpsb
mov
jmp
push
repz
popl
sbb
jb
lock
fldl
inc
pop
xchg
or
add
fisubl
and
lahf
test
push
sub
cmpsl
pop
testl
mov
mov
or
icebp
push
repz
cltd
xchg
stc
or
and
mov
stos
dec
imull
ja
dec
xchg
int
icebp
jle
fs
inc
je
and
sub
jnp
out
je
sbb
aas
sub
dec
sub
push
stos
into
sbb
lods
dec
xchg
or
and
icebp
icebp
sub
aad
and
test
leave
lahf
cmp
adc
mov
push
rolb
outsb
sub
daa
negb
and
mov
jb
rcll
xchg
pop
sub
dec
jne
cli
test
pop
aas
mov
lds
aad
jb
and
aad
mov
xor
arpl
add
inc
inc
xor
sbb
jp
repz
fstl
pop
std
mov
notb
pop
pop
xor
xchg
and
xchg
push
mull
push
add
cltd
sub
sub
jp
adc
cmp
lcall
hlt
jg
ret
sub
dec
test
xor
add
jecxz
and
fdiv
idivb
sbb
push
test
shlb
es
push
ret
and
sub
fs
jne
xchg
cmp
push
call
inc
cmpsl
negb
sbb
mov
push
pop
les
push
xor
add
fdiv
sub
cwtl
jg
imul
cld
or
ret
lret
push
dec
fnsave
pop
les
lahf
xchg
sub
aaa
add
aam
lret
ret
push
leave
and
add
orl
cmp
movsb
fcomip
pop
mov
sub
sub
gs
adc
in
push
jl
adc
sub
loop
outsl
jg
mov
and
bswap
pop
aas
loope
xchg
push
xchg
pop
cmp
add
inc
push
xor
enter
ljmpw
mov
inc
das
das
jns
cmp
sbb
pop
and
pop
or
jge,pn
sbb
js
fstps
push
out
sahf
ror
popf
std
hlt
ret
hlt
js
sbb
fld
push
fistpll
push
mov
lahf
cld
imull
pop
imul
out
in
daa
call
out
push
xor
scas
ja
xchg
sub
shlb
jp
fcoms
xchg
pop
rclb
jbe
or
push
addr16
lds
pop
push
repnz
in
cmp
or
mov
lds
repnz
add
rcrl
cli
fs
sbb
imul
push
adc
pop
cmpsb
xor
push
mov
cmp
ss
fdivr
or
jle
xor
sub
push
in
lret
data16
movsb
scas
and
sub
mov
push
mov
push
xchg
add
add
lock
outsb
int3
out
lock
mov
rorb
dec
inc
aad
cmp
je
iret
nop
mov
lods
shrl
cli
and
pusha
sbb
ficoml
sub
mov
cmp
aaa
ds
ljmp
fwait
cli
sub
cli
sarl
add
cs
loop
out
dec
stc
aad
mov
or
orb
fmuls
xchg
sti
imul
cmp
aas
pop
fs
cmpl
jno
inc
arpl
and
push
xchg
dec
jp
or
inc
bound
stos
add
inc
xchg
fisubl
cwtl
mov
pop
enter
mov
cmpsl
sbb
insl
call
stos
mov
dec
fsubp
pop
cli
sub
adc
mov
or
cmp
loope
movsl
div
mov
adc
cmp
mov
mov
xor
lret
inc
mov
arpl
int3
loope
popa
loop
push
lcall
outsb
shrl
imul
sub
inc
push
sub
sbb
xor
js
out
int3
pop
adc
shl
jno
lea
cld
pop
gs
aas
scas
xor
push
mov
mov
es
leave
sbb
arpl
mull
push
addl
jp
dec
mov
mov
fistps
pop
jl
dec
inc
fdivrl
iret
cld
loopne
xor
vcomiss
jmp
jb
jbe
cmpl
aam
or
lods
into
std
add
ljmp
jmp
jae
mov
dec
sbb
or
xchg
pushf
je
xchg
push
dec
pop
pusha
lea
rorb
mov
scas
jmp
pushf
inc
lock
movsb
xor
dec
mov
lahf
ret
push
cmp
and
aaa
jle
push
loope
into
sub
addb
cs
into
clc
mov
xor
fistps
xchg
cmp
lds
negl
shll
andb
xchg
mov
lret
pop
jmp
es
add
into
adc
repnz
sub
add
ret
addb
jl
int3
pushl
xlat
pop
shlb
xorb
xor
std
pop
in
sub
mov
inc
jne
inc
mov
lret
mov
xchg
xchg
push
and
daa
outsl
sbb
test
fimuls
jne
adc
std
subb
scas
ret
xor
lds
ret
popa
nop
mov
aas
mov
pop
pushl
xchg
out
sti
mov
sahf
in
jb
add
pushf
andb
sub
subb
out
pop
lock
jo
push
std
in
push
ds
popf
aad
push
xlat
cs
mov
aaa
xchg
inc
cmpsl
add
cmp
mov
aam
into
aas
fwait
outsb
mov
stos
dec
mov
sbb
sbb
bound
inc
mov
inc
sbb
sub
mov
inc
xor
das
aam
pop
aaa
sub
or
pop
loopne,pt
xchg
jnp
jp
std
cmp
imul
dec
lret
test
out
test
jbe
test
mul
push
leave
lods
xchg
lcall
jp
mov
fisubs
push
scas
fwait
stos
imul
fimull
mov
add
loope
hlt
loop
out
adc
imul
daa
inc
ja
and
pushf
nop
or
and
and
andl
ja
roll
mov
mov
nop
stc
ljmp
add
cs
add
push
or
test
inc
xor
insl
loope
mov
push
cmp
cmp
sub
push
scas
out
xchg
adc
pop
leave
cmp
out
std
pop
dec
mov
scas
jne
shrl
das
pop
test
dec
sahf
xor
hlt
je
push
pushf
lock
in
xchg
pop
dec
dec
adc
inc
xor
es
lds
push
shrb
dec
push
daa
pop
fucomp
inc
rcl
dec
jge
jg
push
shrl
leave
xor
popa
or
test
hlt
mov
movsb
scas
push
call
cmp
push
insb
ret
sarl
and
or
mov
push
clc
sub
fisttps
icebp
popf
jno
push
imul
jmp
lods
lods
ja
push
mov
pop
cmpsl
js
mov
xchg
cmp
adc
sahf
ja
jp
inc
dec
insl
xor
pop
movl
sub
cmp
cli
xchg
mov
pop
jmp
cmpsl
or
mov
std
loop
jl
xor
pushaw
jnp
dec
xchg
cmp
in
lods
inc
dec
movb
or
mov
jle
fucomi
pop
push
sub
rorl
dec
sub
cltd
xor
jmp
in
jbe
or
out
adc
sahf
xchg
shll
sbb
push
adc
clc
mov
mov
xor
push
addr16
xor
popa
xlat
out
outsl
cmpsl
pop
imul
enter
cmp
imul
pop
lds
sarl
push
adc
sahf
mov
insb
xor
jo
mov
inc
and
push
aas
call
ds
pop
loopne
sbb
pushf
and
jb
jmp
push
pop
xor
or
scas
mov
mov
mov
pcmpgtd
mov
push
hlt
in
jns
outsb
cmc
fs
or
sub
aaa
pop
mov
and
add
cmp
jmp
sub
dec
sbb
test
iret
lret
das
dec
pop
push
cmp
xchg
scas
daa
cmp
jo
xchg
out
imul
cli
gs
xchg
test
stos
out
in
xchg
sbb
shll
out
mov
mov
adc
add
je
and
sbb
sbb
in
aad
jecxz
mov
test
std
ftst
in
pusha
pop
add
mov
mov
lock
pop
jmp
arpl
ret
jmp
adcl
pop
mov
inc
es
jl
mov
das
dec
and
xor
ljmp
sub
push
ljmp
in
xchg
mov
xchg
or
inc
clc
arpl
inc
jae
mov
roll
addr16
adc
add
jne
lcall
pop
les
lds
push
fdivl
mov
jae,pn
dec
fsubr
xchg
push
das
mov
sub
mov
ret
repnz
shll
inc
push
rorl
and
cwtl
stc
mov
call
fldenv
dec
fisttpll
add
pusha
and
pop
push
jmp
dec
push
scas
cmp
fildl
in
mov
mov
insl
daa
mov
mov
aas
jp
divb
jl
adc
and
mov
mov
loopne
in
xorb
mov
inc
insl
ret
push
call
call
mov
iret
lcall
sarb
cld
mov
xchg
out
jns
rclb
rorl
sbb
xchg
daa
dec
sub
arpl
jb
add
outsl
popf
cltd
dec
addr16
test
addr16
imul
mov
imul
xchg
insl
mov
push
lods
mov
test
adc
mov
pop
gs
xchg
mov
xor
daa
fisubs
rcll
loop
mov
sub
adc
or
pop
insl
pop
hlt
clc
test
jmp
push
imul
xchg
sub
push
mov
push
pop
dec
fcmovnu
xchg
xchg
stos
out
int
cltd
mov
mov
or
lods
xchg
mov
mov
add
fdivl
leave
mov
jle
bnd
jns
pop
xor
sbb
jbe
sbb
dec
sahf
adc
inc
or
push
popl
mov
xchg
sar
dec
pop
xor
jle
aam
dec
inc
mov
in
push
divb
mov
dec
lret
jb
dec
fwait
cmp
sbb
jmp
mov
outsb
setae
inc
sub
lahf
imul
cli
cmp
loope
or
xor
inc
mov
cmc
lret
popf
and
out
mov
add
dec
loop
pop
pop
or
mov
mov
inc
cmp
test
scas
in
das
lret
mov
lods
outsl
cmp
aam
jbe
mov
push
cmp
jge
cmp
popa
loop
incb
push
sti
xor
cmp
adc
inc
add
pop
aam
lods
xchg
sti
or
fnsave
push
pop
pop
cmp
dec
xchg
inc
mov
adc
push
mov
pop
dec
xor
sbb
sub
pusha
jmp
or
cmp
pop
in
imul
outsb
pop
pop
movsl
orb
jmp
xchg
outsl
adc
or
sub
adc
leave
push
sub
xchg
loop
mov
shll
sbb
add
clc
dec
inc
vmovd
fsubrs
arpl
cmc
jno
adc
aam
pop
adc
mov
outsl
fs
gs
mov
cmpsl
jns
scas
pop
fidivs
dec
cmpsl
jb
mov
roll
xlat
xchg
jo
sub
lret
cmp
inc
mov
inc
sarb
cmpb
jno
leave
mov
and
icebp
mov
fs
mov
xor
sahf
mov
mov
adc
xchg
add
mov
mov
mov
nop
cmp
rep
lret
cmp
mov
shl
lahf
pop
cmp
xor
add
int
call
push
inc
in
out
push
loopne
inc
cmp
outsb
outsb
imul
dec
lock
and
xor
pop
in
mov
inc
loop
icebp
adc
cld
cmp
pop
outsl
test
pop
mov
sbbb
pusha
mov
das
int
inc
mov
or
mov
popf
cmp
cmp
mov
cmpl
mov
cmp
imul
leave
add
add
pop
aaa
push
jns
mov
inc
jne
lods
cwtl
jae
stc
sub
in
push
das
clc
aaa
insl
mov
sbb
scas
xlat
out
sti
subb
jnp
adc
aad
mov
sbbl
scas
std
inc
ret
lret
icebp
testl
push
outsl
jne
pop
fildl
cmp
push
test
mov
jecxz
inc
xchg
push
lcall
sub
pop
pop
shrb
xlat
add
adc
fwait
jbe
std
mov
lods
dec
lret
or
inc
xchg
js
push
push
dec
mov
cmc
and
jne
cmc
inc
into
push
rol
dec
push
jmp
ret
loopne
ljmp
cs
pop
scas
loop
orb
in
icebp
dec
adc
popf
frstor
mov
jno
cmc
and
call
and
mov
test
lahf
fildl
lret
cmp
mov
inc
fidivrl
add
push
push
inc
rcrl
clc
pxor
xlat
insb
jo
imul
and
dec
popa
ret
int3
mov
lods
or
cmp
pop
sub
shrb
adc
or
cmp
cmp
in
mov
pop
out
ja
or
dec
pop
loop
clc
jno
popa
cld
xorl
push
mov
negl
pop
rolb
mov
pop
mov
sbb
sbb
xor
cmp
dec
jne
sub
aad
jge
int3
rcl
jno
les
sub
pop
mov
pop
scas
rsqrtps
mov
xor
les
inc
in
xchg
or
fisubs
mov
xor
testb
and
daa
push
call
jbe
repz
xchg
push
nop
pop
cli
fimull
loopne
mov
and
xlat
push
cmp
aad
mov
xor
or
inc
psubsw
daa
dec
loopne
imul
scas
jecxz
aad
dec
loopne
xor
xor
and
repnz
shll
xor
je
outsl
inc
xor
icebp
add
ret
xor
sub
faddl
sub
adc
jno
cmp
sbb
xor
hlt
jecxz
ss
add
int3
out
xor
out
imul
pop
mov
xchg
fldcw
adc
jb
xchg
gs
jmp
mov
in
xchg
test
jo
gs
ljmp
cmp
ret
cmp
subb
sahf
enter
and
in
xchg
outsb
cmp
and
pushf
insl
pop
test
xor
fildll
enter
jns
fadds
popa
push
mov
sub
sub
push
fs
cbtw
mov
dec
movsb
mov
and
sub
mov
into
data16
pop
xchg
vpsllw
out
mov
xchg
fs
sub
dec
pop
shlb
into
push
inc
test
push
dec
shrb
mov
fimull
pop
add
or
jp
adc
cmp
ja
cmp
mov
mov
ret
dec
xchg
jle
adc
test
imul
dec
push
add
push
aaa
push
adc
popa
jns
lret
in
fwait
jb
inc
inc
neg
insb
into
ficompl
or
xchg
ss
int3
gs
rorb
stc
inc
or
aaa
pop
inc
ljmp
mov
push
imul
loope
aad
movsl
cmc
in
mov
mov
rcr
mov
popf
test
divl
lock
mov
pusha
pop
xor
xchg
sub
mov
xlat
sbb
mov
add
rcr
mov
in
and
int
in
adc
xor
sbb
add
sbb
push
sub
jl
and
mov
mov
lcall
lods
rcr
inc
es
pop
aad
mov
jnp
jmp
out
mov
or
fadd
lret
mov
and
inc
sbb
mov
pop
dec
lods
sub
rcrl
xchg
cmp
xchg
sbb
add
hlt
imul
mov
arpl
cltd
adc
pop
inc
imul
dec
xchg
push
rcrl
sub
arpl
and
xor
jg
aas
fisttpl
add
jp
aam
inc
mov
jns
in
ficoml
cmpsl
jbe
push
sbb
pop
mov
mov
movsl
imulb
lods
sub
insl
lds
pop
aam
dec
std
adc
cmp
or
add
inc
loop
int
push
pushf
pop
int3
movsl
pop
fists
jne
adc
sahf
stc
or
xor
xchg
xchg
std
scas
es
mov
jo
movsl
in
push
sbb
rorb
ret
xchg
icebp
inc
inc
cltd
loopne
test
outsl
jo
enter
repz
jne
add
cmpsl
js
or
adc
xorb
and
jecxz
std
sbb
push
movsl
mov
pop
jnp
pop
push
fnstsw
pop
pop
xlat
push
aam
clc
or
loopne
lahf
jmp
dec
mov
jno
pop
sbb
dec
fstpt
fdivrl
scas
ficoml
inc
int3
sbb
push
xchg
push
dec
and
push
pop
fbld
mov
gs
shll
mov
rcrb
in
fstp
xchg
lahf
call
xchg
sub
lret
in
or
ss
mov
test
jp
sub
pop
mov
dec
mov
cmp
xor
fnstenv
lods
out
jb
je
ret
dec
bound
mov
pop
inc
data16
or
fadd
xor
and
mov
push
loopne
lds
out
mov
dec
cmc
stos
test
or
xor
pop
imul
xlat
lods
fsts
pop
mov
out
and
add
cmp
fstpt
sbb
enter
mov
jae
divl
sbb
addr16
dec
int3
jl
add
mov
cmp
and
movsb
cmp
ss
shl
movsl
jl
fimull
push
push
dec
lahf
add
pushf
ja
add
xchg
push
jne
imul
out
daa
pop
leave
sbb
dec
jmp
out
mov
das
sub
xor
inc
push
movsb
ret
push
pop
icebp
lds
cmp
mov
mov
add
fimuls
inc
xchg
push
dec
out
or
movsl
hlt
mulb
mov
int3
or
bswap
out
dec
inc
pop
loope
jno
adc
lods
pop
sbb
test
sub
stc
mov
roll
push
mov
call
cmc
inc
cmp
hlt
xchg
sub
cmpb
push
fcoms
out
push
in
repnz
jo
mov
lcall
jbe
dec
cmp
xchg
cmpsl
push
xor
popa
loop
push
rorb
vcomiss
test
cmpsb
jmp
mov
jo
out
mov
inc
inc
xor
mov
test
decb
push
cmp
lods
pop
mov
mov
push
inc
test
lock
xor
daa
fiadds
je
mov
add
sbb
pop
xchg
mov
pop
jo
fs
xchg
xrelease
pop
ja
sbb
xchg
add
inc
mov
pop
ret
mov
movsl
mov
int
jbe
repz
movl
push
cmp
adc
lret
pop
pop
cli
ds
and
mov
or
sbb
lahf
and
mov
add
mov
inc
push
daa
xlat
and
mov
iret
test
or
cmp
pop
outsl
pop
inc
addl
lahf
mov
jo
or
mov
cmpl
aam
lret
fdivp
xchg
or
mov
xor
jecxz
or
lret
mov
lds
mov
sub
ja
popf
out
sti
lods
mov
mov
mov
and
push
xor
into
and
jno
mov
arpl
bound
push
repz
je
xlat
add
popf
sti
mov
stos
fdivl
push
mov
add
sub
ror
xchg
adc
ss
push
cmpsl
add
push
xor
sbb
xchg
sub
imul
inc
pop
xchg
aas
mov
xchg
xchg
outsb
inc
mov
mov
adc
and
in
xor
xor
lret
cmp
ficomps
lea
enter
clc
jo
sti
pushf
inc
sub
fucompp
jne
ret
mov
lahf
pop
movl
xor
stos
add
pop
sub
loopne
xchg
sbb
mov
test
shlb
inc
adc
add
cld
mov
mov
adc
lret
jbe
mov
iret
pop
gs
pop
xchg
cwtl
push
lea
sub
iret
rcrb
dec
aad
and
in
int
push
dec
xor
call
jb
nop
aaa
stos
push
cmpsl
call
jo
pop
neg
out
hlt
loope
push
cmp
imul
pop
mov
dec
clc
push
mov
fstps
push
push
pop
mov
mov
sub
test
clc
mov
mov
cmp
aam
mov
popf
out
popf
jno
inc
leave
insb
push
call
push
lahf
aas
inc
pop
or
sbb
pop
loop
pop
cmc
and
cwtl
or
mov
std
mov
jne
cmp
cmp
fistl
and
adc
rcrb
and
loopne
jo
xorl
icebp
pop
data16
test
mov
sub
cmp
in
xorb
flds
ljmp
sbb
inc
fiadds
aaa
inc
dec
xchg
pushf
pop
cmp
jge
rcr
aam
leave
cs
das
rcrb
movb
mov
mov
xchg
mov
pop
dec
mov
xor
les
insb
inc
lahf
xchg
push
in
push
push
mov
inc
outsl
int
xchg
adc
sbb
sahf
gs
fst
ja
push
mov
add
das
rcrl
aad
xor
mov
dec
lahf
test
push
and
and
loopne
je
daa
clc
and
xchg
es
lods
adc
push
stos
ljmp
ret
test
jo
adc
adc
jge
bound
pusha
jmp
test
cmp
cltd
cmpl
pop
sbb
lret
sar
xchg
imul
orb
inc
mov
add
js
aam
mov
out
ja
je
fisubl
jo
add
sti
dec
mov
mov
nop
cmp
icebp
hlt
repz
inc
jns
fs
mov
imull
pushf
mov
and
sub
mov
leave
mulb
popf
xor
cwtl
push
cmp
cmp
divb
sbb
jno
sub
sbb
cmp
mov
das
push
xchg
in
cltd
lcall
loope
pop
pop
lret
hlt
mov
ficompl
sbb
je
mov
inc
inc
out
sub
mov
xchg
in
and
fcoms
cld
daa
sub
sti
push
rcrl
loopne
xchg
movsb
test
fcmovu
jns
popf
in
aaa
xchg
xor
mov
enter
xchg
mov
cld
jb
sub
jl
mov
push
lea
cmp
sub
jno
sub
mov
pop
xchg
mov
cltd
mov
dec
jp
sub
sbb
sti
aam
lahf
xchg
mov
outsb
mov
add
pop
dec
sub
push
mov
cmp
jecxz
push
mov
hlt
paddq
push
pop
andl
mov
adc
ja
cmp
cmp
andb
fdivrs
pop
and
push
ja
iret
dec
daa
ds
lods
inc
dec
cmpsl
mov
shrb
add
fadds
rcrl
mov
aam
mov
shr
mov
or
sbb
adc
jne
cmp
sahf
movsl
push
cmp
sub
inc
imul
insl
in
xchg
adc
jo
call
fwait
insl
xor
xor
je
and
xor
xor
push
push
sbb
enter
outsb
jns
add
sbb
decl
test
ja
adc
stos
addr16
fsubs
orl
pop
jne
loop
icebp
les
addr16
push
fildll
bound
mov
inc
sbb
add
shl
sbb
cmp
mov
lea
jno
sub
xchg
mov
mov
dec
insl
xchg
xchg
iret
sahf
jbe
nop
mov
pop
xor
clc
dec
mov
jae
lea
lea
jp
pop
sub
cmp
fldenv
std
addr16
testl
scas
arpl
xchg
test
in
and
dec
pop
dec
pop
or
jbe
data16
add
rorl
fsts
jae
cld
movsl
xor
dec
or
xor
pop
repnz
insb
es
mov
dec
xchg
fmull
pop
mov
in
mov
sub
jl
push
xorb
lock
fucom
sbb
xor
or
ljmp
xchg
subl
cmp
lock
gs
lods
mov
inc
imul
xor
test
arpl
adc
xor
lods
pop
ss
lods
out
in
inc
mov
mov
bound
mov
icebp
aaa
or
shll
mov
xor
jle
push
sahf
mov
sbb
add
xlat
xlat
rcll
xchg
mov
xchg
inc
pop
js
sahf
jne
fwait
into
inc
cmp
popf
stos
hlt
test
push
mov
stos
sarl
adcl
pop
imul
data16
adc
shll
inc
test
pushf
cmp
movsb
inc
push
xchg
push
fldenv
xorb
and
cmp
sbb
ret
aam
mov
pop
add
mov
mov
std
jle
jae
aaa
subl
mov
sub
lods
sbb
dec
jb
fiadds
or
cli
sahf
ss
xchg
std
push
mov
fistpll
mov
mov
popf
cmc
insl
out
cwtl
test
sub
add
xchg
xorl
add
push
xor
push
addr16
ss
cld
bound
addl
pop
arpl
jmp
ss
popf
in
mov
insl
mov
aas
ret
push
pop
fcomps
mov
push
lock
lods
aam
test
mov
xchg
xchg
fidivrs
scas
xor
shlb
dec
adc
dec
mov
lret
xchg
jb
mov
inc
adc
test
mov
mov
pushl
mov
adc
xlat
popa
shl
nop
cmp
jbe
xor
incl
mov
repnz
imull
push
mov
sti
add
xlat
sub
mov
pop
mov
push
in
mov
lahf
out
int3
ljmp
data16
test
lods
pop
jl
imul
imul
xlat
sarl
test
dec
dec
pop
test
cmp
aad
xchg
sub
cmpsl
outsb
jmp
lock
sahf
stos
sbb
pop
sbb
adc
dec
xchg
rcr
push
syscall
push
je
imul
xchg
rolb
outsl
add
lret
sbb
cmpsb
sti
sbb
ljmp
jnp
cmp
cmp
pop
jne
cmpsb
scas
mov
lds
iret
mov
in
ss
je
leave
adc
js
push
dec
xchg
fst
fimull
cli
movsb
sbb
icebp
add
es
push
ds
sbb
pop
jge
lods
mov
pop
ja
sbb
mov
pusha
inc
xchg
mov
std
or
or
orl
fldt
es
jae
mov
ficomps
adc
or
add
add
and
pusha
ss
cmp
lcall
inc
rcrb
pop
mov
add
push
fnstsw
and
outsl
sbbb
adc
pusha
sbb
dec
mov
sbb
add
repnz
dec
cli
std
jle
int
test
stos
inc
xor
mov
pop
inc
lea
mov
nop
fstpt
jle
jb
pop
lcall
ja
jg
cmpsl
add
sbb
dec
cmp
dec
fsts
cld
in
repz
adc
xchg
jne
fs
imul
jge
out
adc
jnp
adc
adc
adc
negb
dec
in
test
in
testl
vsqrtsd
shl
icebp
ljmp
jno
adc
movsl
sti
jp
jecxz
insl
dec
adc
sbb
es
adc
adc
cmp
jne
mov
mov
ss
mov
repz
mov
cmp
dec
push
test
jmp
in
sbb
gs
push
movsb
daa
or
clc
aas
data16
jle
xor
cmpsb
push
notl
movsb
mov
js
mov
and
and
and
xchg
out
jp
out
jne
hlt
fidivs
das
cmpsb
mov
push
rolb
xchg
sahf
hlt
mov
mov
adc
pop
add
rorb
mov
fs
jns
dec
cmc
fcompl
je
ret
pop
scas
pop
inc
jp
shrl
sbb
lcall
movsl
lods
fs
call
outsl
shlb
pop
push
xchg
cli
cmp
popf
adc
pushf
push
sarb
stos
jmp
jno
cmc
adc
mov
pop
hlt
fisttps
jle
ret
jle
mov
jmp
sub
leave
jle
sub
leave
sub
arpl
loope
pusha
ret
scas
test
out
jns
mov
and
or
push
pop
stos
outsl
test
int
cmp
imul
ficompl
jmp
js
mov
xchg
lret
inc
pop
bound
adc
cwtl
aas
or
cmpsb
push
sbb
jnp
pop
mov
jb
aam
aam
dec
xchg
and
movsb
pop
les
and
or
stos
lret
cmc
jns
aam
inc
cmp
in
fdivrs
pop
xchg
xchg
addb
cs
add
jp
dec
mov
es
jnp
adcb
sub
xchg
jmp
js
inc
and
pop
fldt
arpl
xor
dec
pop
mov
shr
or
imul
xchg
push
mov
pop
sub
sbbb
add
add
nop
es
outsb
ljmp
pop
ss
ficoml
in
insl
ret
dec
lock
mov
sti
stc
in
fstpl
mov
cmp
xchg
dec
ret
pop
stc
add
cmc
lods
jns
or
cmp
out
inc
lods
imul
orb
cltd
jbe
ss
ja
mov
nop
data16
out
pop
push
mov
fmull
jne
cmp
sub
cmp
and
and
in
stos
dec
lods
mov
adcb
xchg
mov
ret
in
mov
loopne
inc
mov
add
cmp
mov
push
or
dec
jge
sbb
leave
dec
push
lret
shrl
hlt
add
daa
mov
inc
sbb
jno,pt
sub
enter
and
das
sbb
cmp
gs
or
loope
lret
gs
bound
cli
sbbb
and
sub
xor
xchg
jae
xchg
test
jmp
cmp
test
cmc
xchg
sbb
jae
mov
add
mov
cmp
pusha
lock
or
mov
in
insl
lea
aam
outsb
mov
sbb
xchg
int
push
call
pop
add
repnz
inc
sub
fsubs
sub
sub
mov
aad
call
scas
push
sub
fisttpl
inc
scas
imul
pop
arpl
insl
popf
or
adc
jmp
inc
enter
js
mov
pushl
push
sbb
cmp
cs
or
or
xor
hlt
rolb
mov
dec
nop
mov
mov
lock
add
addb
adc
hlt
pushf
push
dec
fs
push
add
ret
jae
mov
lea
enter
loop
rorb
pop
outsb
mov
xchg
lock
sub
and
stos
mov
out
mov
aas
fmuls
xchg
jo
jbe
push
inc
fcoml
cmpb
cmp
in
repnz
jecxz
xchg
lea
inc
lock
rorw
jl
jge
mov
je
push
lods
cmp
cltd
and
sbbb
rorl
movsl
sbb
mov
aam
dec
insb
stos
lock
jecxz
pop
mov
mov
jno
jecxz
fstps
or
lahf
jbe
mov
inc
push
sbb
sbb
bound
and
nop
repnz
mov
in
mov
cmp
push
adcb
mov
push
add
or
push
inc
in
or
cmp
mov
push
fwait
pop
adc
test
sbb
and
std
and
in
call
inc
pop
into
jne
sbb
xchg
jecxz
clc
push
jb
lods
fildl
sti
pop
data16
mov
adc
sahf
push
push
dec
cs
lahf
lret
int3
lods
popf
stos
xor
adcb
mov
test
cmc
jns
clc
cwtd
idivb
xchg
into
mov
inc
mov
popa
shr
nop
inc
lcall
and
push
gs
cmp
mov
mov
jge
sub
pop
gs
mov
lds
dec
movsl
in
and
lock
cmp
cmp
xchg
pop
test
bound
iret
aas
cwtl
icebp
out
ds
cmp
jg
outsb
inc
flds
sub
ret
sub
jae
mov
call
ss
js
mov
lea
les
stos
leave
daa
pop
xor
mov
aas
negb
and
mov
pushf
jmp
cltd
fbld
std
arpl
mov
mov
lods
ret
cltd
lods
mov
imulb
mov
in
adc
adc
outsl
shll
mov
xchg
jns
jmp
jg
sbb
xor
mov
mov
fmulp
and
jbe
cli
xchg
or
or
jae
shlb
lcall
cmp
pop
popf
sbb
cmpsb
jne
xor
add
add
pop
repz
test
jbe
cmp
dec
sti
mov
sub
pop
inc
pop
int3
mov
and
leave
or
sub
fisttps
ljmp
cmp
push
sub
test
aas
add
mov
jle
adc
insl
dec
fcomps
lock
xchg
pop
shrb
es
and
sub
pop
inc
sub
incb
cltd
leave
xor
mov
ljmp
cmp
fadd
daa
mov
mov
pop
sbb
fadds
imulb
jns
inc
and
imul
add
fwait
adc
cmp
insl
inc
fwait
dec
popa
fsubrs
mov
int3
ljmp
adc
sbb
test
sbb
jge
or
out
ja
cmc
inc
addr16
jne
sti
int3
lods
test
add
jo
test
loopne
push
or
add
fcmovb
sbb
roll
push
xchg
pop
test
xor
mov
mov
rclb
repnz
es
mov
dec
and
out
fdivs
push
sbb
cmp
lds
or
pop
jbe
mov
leave
mov
mov
in
scas
rorb
popf
movsl
jne
data16
dec
adcb
push
clc
mov
and
into
sbbb
dec
mov
sbb
mov
mov
cmp
mov
sbb
in
imul
outsb
lods
and
cli
push
data16
dec
mov
sarb
xchg
sub
scas
cmp
lcall
jae
imul
sti
push
mov
loop
sbb
xchg
dec
xchg
jbe
addr16
sbb
sub
mov
and
test
adc
hlt
dec
jne
jge
add
and
add
hlt
sarb
in
adc
xchg
mov
xor
js,pt
xor
cmpl
pushf
mov
adc
jge
xchg
jae
mov
stos
imull
push
stc
out
jbe
jl
mov
imul
shll
in
inc
loop
daa
fimuls
insb
xchg
insb
lret
sbbl
sbb
iret
mov
xlat
lahf
xchg
fidivrl
out
cwtl
mov
cs
outsb
mov
push
sub
mov
inc
cmpl
scas
lret
rcrl
stc
pop
pop
mov
adc
stos
or
add
or
and
icebp
les
adc
and
iret
imul
or
pushf
seto
jbe
inc
fdivs
lds
imul
and
lret
jle
loop
cmc
push
pop
fists
mov
popf
rcrb
pop
inc
and
js
sub
dec
xchg
scas
adc
fidivrs
lea
lret
inc
test
pop
mov
mov
sbb
icebp
daa
shlb
bound
mov
xor
sbb
leave
sbb
ljmp
pusha
jecxz
lods
and
popf
sbb
aaa
jnp
dec
mov
sbb
dec
out
cld
inc
out
xor
jbe
cmpsl
mov
cld
and
cli
movsl
or
mov
pop
cmpsl
push
or
scas
pop
jp
imul
fistpl
loope
cmp
pop
jae
cmp
xchg
stos
fsubl
push
mov
addb
cmc
xchg
lods
pop
sbb
frstor
push
call
push
and
stos
leave
xchg
je
loope
mov
pop
fsubrs
test
add
sbb
and
jmp
xlat
jmp
testl
shll
sbb
fidivs
push
sbb
cld
pop
fs
push
js
ret
add
mov
jl
push
push
mov
cmp
popa
push
sub
in
out
mov
fwait
push
xchg
mov
xor
adc
imul
mov
ljmp
push
ljmp
test
xchg
sub
xor
pusha
sbbb
pop
shrb
pop
inc
fsts
dec
pop
mov
push
fimuls
in
push
mov
dec
xchg
mov
jl
ljmp
sub
add
or
sti
rcrb
stos
pop
out
push
lods
sub
fwait
popa
jb
stos
mov
xchg
jbe
stos
inc
cli
fwait
push
subb
xchg
push
xor
lcall
cmp
sub
fisttpll
mov
fsubrs
dec
and
add
push
xlat
pop
dec
xlat
cmp
mov
jl
bound
in
leave
mov
cmpl
jmp
enter
repnz
xchg
cmpsl
sahf
add
pop
sbb
test
adc
std
adc
xchg
add
gs
push
dec
dec
lret
xchg
or
testb
popf
popa
jl
mov
or
imul
ljmp
fwait
test
adcb
or
jns
test
dec
mov
jle
cs
fadd
test
scas
aas
and
sbb
inc
mov
mov
sub
loopne
xchg
lahf
lret
lahf
pop
dec
xchg
sbb
push
insb
inc
mov
loope
jnp
xor
push
pop
dec
sbb
mov
xchg
dec
mov
sti
xchg
xor
fisubrl
xchg
lret
and
icebp
lods
mov
xchg
ret
pop
mov
jo
bound
imul
mov
inc
in
xor
xchg
xchg
push
cmp
test
and
add
xchg
sbb
adc
add
and
out
sub
mov
inc
cltd
inc
jp
sub
xor
xor
mov
sbb
pop
lods
mov
inc
adc
jnp
mov
sbb
int3
fadd
mov
aad
negl
sub
inc
jmp
pop
fmull
and
mov
out
pop
aas
shll
push
sar
pop
xchg
in
adc
sub
mov
outsb
sbb
fnstenv
jo
pop
pop
mov
inc
mov
ss
pop
rcl
js
xor
and
mov
or
xchg
outsl
inc
loope
aas
rolb
movsb
push
out
imul
mov
aam
push
add
pop
and
cs
mov
je
movsl
xor
loop
das
xor
movsl
bound
fstl
shl
fcmovnbe
and
shr
aas
aaa
inc
ficoml
addl
daa
inc
and
cmpsb
xchg
inc
or
aad
gs
not
inc
and
ljmp
pop
cli
out
stos
mov
add
cmp
cmpsb
stos
rol
sbb
push
cmp
adc
shlb
xchg
mov
push
leave
dec
fs
mov
pop
aad
push
sub
and
outsb
je
mov
xor
adc
pop
sub
and
lods
mov
adc
xor
test
orb
jg
daa
imul
subb
jecxz
push
sbb
jmp
scas
pop
stos
lahf
adc
inc
or
popa
sbb
fs
pop
call
repnz
mov
add
pushf
jbe
mov
test
dec
jecxz
adc
push
imull
mov
fldenv
inc
cwtl
iret
pop
shlb
out
lock
dec
movsl
add
rorl
sub
xchg
dec
in
xchg
fdivl
test
xchg
insb
sbb
and
adc
fisubrs
testb
js
jo
mov
mov
ss
cld
lock
pop
cld
cmp
lret
or
jb
lock
pusha
into
push
dec
or
out
lcall
mov
or
pushf
cs
add
sub
loop
movsb
sahf
add
pushf
pop
mov
dec
or
add
test
icebp
in
jecxz
ret
out
cmp
or
jle
push
scas
arpl
xor
nop
cmp
jns
lock
push
mov
mov
mov
pop
in
test
jmp
adc
cvttps2pi
int
sub
cmp
xor
aas
dec
jbe
pop
push
enter
cmc
and
iret
cld
imul
dec
xor
adc
push
inc
pop
mov
dec
and
cmp
jge
or
fisubrs
pop
shl
adc
int3
std
add
add
iret
pop
xchg
jo
test
or
scas
sbb
push
shll
repnz
sbb
mov
xor
mov
fs
shrl
sub
lds
add
lock
jne
mov
mov
rclb
or
push
mov
and
mov
scas
aas
rclb
movsb
fsubr
xchg
push
insb
pop
lods
ret
jmp
xchg
mov
cmp
data16
jg
repz
push
xchg
je
inc
jmp
loopne
pop
jb
jnp
test
push
jmp
add
aad
movb
or
roll
mov
pop
inc
icebp
mov
out
jb
int3
lcall
inc
xchg
in
xor
fcmovne
pop
mov
outsb
xlat
add
or
push
test
xor
mov
sbb
adc
sbb
cmp
push
mulb
xchg
lret
mov
daa
daa
jo
lods
dec
test
xchg
in
pop
movsb
iret
jno
xchg
jp
in
pop
hlt
sub
movsb
jmp
repnz
fsubs
cmp
and
lea
pop
and
pop
nop
aam
ja
pop
das
jecxz
shl
xchg
inc
lret
pop
or
jns
fs
jecxz
scas
mov
aam
idiv
pop
std
in
jmp
pop
jl
inc
cmpsl
in
je
sahf
xchg
cmpsl
and
gs
xchg
dec
adc
das
setg
add
es
ljmp
push
shll
push
mov
insb
sub
adc
sbbl
pop
loopne
xor
lahf
or
jp
cli
out
icebp
sbb
les
pop
fs
out
out
bound
jbe
cwtl
xor
jp
fs
cld
sarb
cmp
movsb
sarb
push
sbb
xor
je
xorb
call
adc
das
les
out
dec
repnz
sub
dec
and
es
mov
jmp
cld
dec
shr
mov
adc
cmpsl
mov
xor
out
data16
hlt
outsl
into
les
ret
icebp
push
sub
mov
mov
in
pop
rcl
popa
dec
sti
adc
mov
andl
rclb
ss
ds
mov
out
jne
cmp
test
inc
mov
mov
add
adc
scas
mov
scas
das
mov
or
lcall
xor
mov
sub
iret
push
repnz
div
mov
pop
cmpsl
add
mov
mov
xchg
and
test
lock
scas
xchg
lods
ljmp
lret
add
lss
lret
pushf
cmp
push
fildll
loopne
xchg
decl
dec
pop
or
pusha
and
cli
scas
add
push
mov
test
aam
out
or
push
test
dec
orl
mov
cli
mov
cmp
test
xchg
push
jmp
jecxz
dec
cmpsb
aad
sub
dec
mov
stos
push
and
mov
sbb
cmpsb
pop
lds
loopne
mov
sub
or
sbb
mov
ret
adc
pop
in
popf
test
cmp
push
inc
dec
sub
mov
fldt
insl
lea
imul
fwait
insl
adc
insl
or
or
sti
aam
push
sub
cmp
sub
pop
mov
nopw
cmp
xchg
in
jle
xor
jo
ret
mov
call
enter
out
fwait
dec
adc
push
adcb
pop
or
pop
mov
dec
dec
push
in
repnz
repz
xchg
fidivrs
xor
aad
mov
scas
call
ljmp
insl
dec
push
mov
adc
cwtl
sub
mov
sbb
xor
sub
add
xor
jmp
rorl
pop
xor
stc
xorb
adc
je
cmp
addl
cmp
inc
push
xchg
cmp
push
jb
out
and
xchg
outsb
das
sahf
aaa
cmpsl
mov
mov
mulb
jnp
dec
add
pop
out
dec
push
cli
inc
pusha
sub
or
sahf
nop
sbb
mov
and
cli
push
mov
or
adc
cmc
shlb
xor
cmp
xchg
xchg
push
mov
inc
testl
gs
das
call
jo
pop
mov
fwait
lahf
aas
cmc
jecxz
xor
and
popf
loop
pop
mov
jno
ljmp
push
insl
inc
lea
decb
lock
ret
xchg
mov
incl
dec
adc
jns
out
push
xchg
mov
lret
cmpl
and
adc
lock
mov
jg
push
shlb
dec
outsb
in
mov
and
mov
adc
loopne
or
arpl
mov
sbb
cmp
fwait
xchg
bound
arpl
stc
push
jae
sub
stos
push
in
outsl
es
clc
jbe
jp
decl
sbb
fsts
mov
push
popa
in
or
shlb
xchg
ror
push
mov
and
mov
xor
push
ljmp
xor
mov
int3
jo
scas
xchg
stc
sti
movsl
scas
or
movsl
pop
ds
adc
xchg
jbe
les
mov
xchg
push
es
inc
mov
push
jne
push
cs
ljmp
repnz
dec
daa
jle
je
mov
cmp
mov
adc
lcall
pushf
stc
es
mov
movsb
cmp
pushf
bound
pop
push
pushf
mov
stos
and
mov
jae
adc
out
xor
or
int
aaa
cmp
dec
dec
es
push
and
imul
pop
std
call
in
insl
ja
sbb
movsb
adc
mov
cmpsb
or
stos
sbb
jb
inc
jp
in
and
push
jp
mov
sub
sbb
mov
pop
jns
ja
adc
jae
nop
adc
pextrw
and
enter
adc
cld
pop
and
jg
gs
gs
icebp
fcomi
mov
jp
aad
push
or
int
sub
into
push
pop
push
int3
mov
or
sub
mov
xchg
fildll
shrb
cltd
ds
sub
jge
mov
xchg
push
adc
xchg
out
jb
popa
xchg
inc
cltd
repnz
and
push
lods
ja
fistpl
shl
pop
push
xchg
jno
xlat
lcall
fldenv
and
imul
out
jle
mov
pop
pushf
or
dec
inc
and
push
addl
inc
pusha
movsb
jmp
adc
shlb
shll
jmp
jmp
mov
mov
cmp
mov
push
xlat
jne
push
xlat
pop
mov
negl
gs
test
mov
ret
movsb
jg
pushf
lods
adc
stc
xor
adc
shl
push
lcall
xor
adc
push
stos
movsl
in
ret
pop
inc
xor
mull
mull
leave
sbb
ljmp
push
ljmp
sub
lahf
pop
mov
sub
mov
in
arpl
mov
jnp
leave
lcall
push
leave
int3
popl
sbb
arpl
sahf
nop
cmp
fiaddl
mov
test
outsb
gs
and
or
je
and
mov
lcall
xor
mov
jne
lods
sahf
xor
sub
xor
mov
mov
int3
hlt
adc
dec
jb
aas
cwtl
cmp
jmp
sti
xor
cmpsl
fs
sub
add
mov
ret
pop
xor
push
push
xor
push
ljmp
mov
shll
pop
fsubrs
std
jp
sub
sub
ss
dec
inc
hlt
dec
fs
mov
es
jp
push
int
fadd
es
sub
lea
call
pop
into
jbe
pop
cmp
adc
into
push
repz
out
div
pop
push
inc
mov
adc
sub
roll
pop
fwait
mov
dec
pop
xchg
ss
or
sub
outsl
pop
jno
jae
clc
mov
fwait
adc
cmpl
mov
out
lods
or
fists
sub
xchg
and
stc
xor
es
or
bound
jp
cmp
outsb
cli
iret
xor
fwait
cmp
out
dec
xorb
in
or
lods
sub
int3
loop
repnz
outsb
scas
lret
out
push
outsl
popf
movsb
xchg
jle
ret
pusha
lret
pop
sub
mov
addr16
sub
andl
jp
mov
xchg
xor
subl
lret
push
std
cmp
mov
and
repz
in
inc
movsl
nop
sbbb
xchg
test
xor
jbe
cmp
dec
inc
mov
adc
scas
rdmsr
inc
scas
daa
mov
cmp
push
inc
and
push
and
and
push
leave
mov
gs
addr16
and
sbb
fistpll
scas
or
push
cs
push
arpl
fisubl
iret
dec
sbbb
cwtl
sahf
xlat
cli
ss
fdivr
ss
mov
pusha
addb
jno
shll
add
push
sbbb
push
mov
cld
cs
loopne
adc
cmpb
cmpsl
push
cmp
mov
jae
inc
es
xchg
imul
out
nop
rorb
dec
xchg
pop
cmp
cmp
jnp
and
pusha
hlt
xchg
test
push
lret
lods
lock
pop
push
mov
cmc
or
mov
and
jmp
into
pusha
mov
push
xor
js
mov
inc
mov
sbb
fbstp
pushf
stos
sbb
sbb
xchg
rcll
cmp
iret
push
aad
adc
sub
cmp
push
fiaddl
out
clc
cmp
xchg
jae
les
cmp
mov
cld
push
xlat
xchg
dec
shlb
int3
jmp
fwait
adc
cmp
sar
mov
mov
mov
xchg
insl
xor
shl
xor
cwtl
jne
mov
cmp
decl
shl
in
stc
add
mov
insl
faddp
ret
mov
into
lods
pop
insb
mov
and
mov
fdivl
int
inc
lahf
cmp
sbb
movsl
push
jae
adc
lock
xchg
stos
push
insb
pop
push
push
cmpw
mov
sahf
insb
dec
fs
lods
repz
testb
mov
pop
cmp
or
or
insb
hlt
out
sub
data16
mov
jecxz
and
pop
scas
pop
insb
hlt
mov
jmp
movb
into
ss
mov
lods
xchg
sti
push
addr16
sub
test
add
loope
sbb
jmp
adc
jo
ret
xlat
stc
mov
jns
shrb
imul
stc
lea
arpl
add
data16
lods
and
mov
mov
inc
js
add
rorl
xchg
add
in
icebp
push
xchg
scas
cmp
or
lock
inc
adc
and
rol
mov
ds
dec
jl
lock
loope
sub
js
sub
aas
sbb
xchg
push
mov
jmp
mov
fcmovne
mov
lock
jbe
jae
pop
add
les
shlb
jg
in
xor
add
or
cltd
cmpb
lods
push
lret
scas
xchg
sub
push
adc
mov
pop
and
sti
nop
xchg
push
stos
mov
in
adc
push
stos
add
xchg
sti
jmp
je
cld
mov
xchg
sbb
lds
insl
mov
gs
mov
sub
lahf
mov
stos
jne
repnz
enter
enter
jns
pusha
ljmp
sub
pop
xor
and
push
aam
jmp
leave
push
dec
test
sub
orl
iret
pop
cs
jb
popa
bound
mov
push
adc
xor
cld
mov
fisttpll
shr
call
xor
jo
shll
lcall
fwait
push
or
outsl
std
jno
adc
or
adc
das
add
add
pushf
sbb
xchg
nop
insb
lcall
into
addr16
and
js
js
sti
lret
dec
inc
cmc
out
lds
daa
scas
int3
and
jns
push
sahf
push
jge
out
sbb
mov
add
mov
mov
popf
stos
sbb
imul
push
inc
and
add
dec
in
inc
in
lret
dec
es
out
pop
add
xor
adc
and
or
mov
mov
xor
and
int
mov
out
sub
scas
leave
popa
xchg
xchg
and
xor
mov
sti
into
mov
and
inc
incb
in
cmp
nop
lea
icebp
push
movsb
inc
gs
sub
xlat
std
sub
adc
push
test
js
cmc
fistpl
xchg
clc
sti
push
xchg
and
in
and
cmp
stos
xlat
cld
rsm
mov
lds
ds
mov
fs
add
mov
mov
fstpl
dec
nop
out
dec
xchg
jo
out
pop
dec
stos
nopl
sbb
into
mov
lahf
add
call
std
mov
aaa
jp
rolb
call
icebp
bnd
cld
pop
add
xchg
loope
pop
mov
cli
in
cmp
ror
test
das
push
jge
cmpsb
repz
cmp
push
push
mov
fidivrs
and
xor
cmp
jns
fiaddl
pop
in
repnz
sbb
or
movsl
xchg
adc
insl
sbb
xorl
sub
push
neg
scas
scas
fwait
stos
lret
clc
and
jge
ja
or
push
js
in
in
shrb
mov
stc
ja
adc
inc
out
sbb
push
xchg
jg
xor
ss
clc
mov
inc
test
jb
fcoml
int3
out
cs
ss
lret
imul
pop
sub
mull
pop
jnp
cmp
nop
shlb
rcr
out
pop
push
mulb
cmp
lret
inc
lret
pop
rorl
fldl
add
inc
repz
dec
je
pop
push
jns
mov
pop
inc
rcrl
adc
negb
stos
pop
inc
mov
cmp
or
mov
dec
aaa
fnstenv
mov
insl
cmp
or
scas
lods
rcl
scas
xor
leave
and
push
xchg
out
imul
stos
pop
adc
inc
add
lock
mov
popf
push
jne
ljmp
test
sbb
pop
rcrl
sahf
mov
fnstcw
aaa
push
cmp
push
push
dec
jle
inc
sahf
out
or
and
mov
imul
imul
test
and
shlb
and
iret
fs
enter
add
cmp
xor
insb
mov
in
loopne
or
test
dec
dec
xor
cmp
pop
test
adc
push
test
and
jecxz
mov
mov
shll
sub
mov
xor
repz
insl
jns
jle
shrl
xor
mov
mov
mov
sbb
xor
add
shll
pop
mov
jge
or
dec
inc
pop
in
or
scas
shlb
dec
pop
sub
test
lea
sti
addr16
push
pusha
std
outsl
fsubp
iret
fildll
imul
jle
lds
sub
scas
ficoml
fisttpl
sub
lods
mov
push
sbb
sbb
pop
jo
negl
mov
jmp
dec
mov
lret
cmc
icebp
jle
add
dec
push
pop
push
jnp
pop
pop
mov
int
xchg
stc
mov
push
stos
orb
lea
les
mov
push
inc
push
scas
inc
inc
pop
test
jp
lods
and
pop
jge
fidivrl
fs
mov
xor
cmp
int
xorl
and
cmpb
cmp
or
sub
xchg
inc
out
and
jl
jp
cmpl
bound
add
push
push
enter
jno
adc
mov
ja
or
mov
pop
int
xor
addr16
push
mov
jne
lods
stos
hlt
push
and
pop
in
add
mov
out
sub
cmp
jp
mov
sub
mov
enter
and
inc
fnsave
sub
pop
cmp
int3
mov
negl
test
mov
sti
cwtl
or
pushf
add
adc
movl
pop
addr16
lock
sbb
cmp
int
mov
subl
xchg
lret
out
arpl
jp
pop
shlb
cmp
fidivl
sbb
imul
jp
mov
fimull
jb
movsl
jle
mov
xchg
movsl
fwait
rorb
add
jb
or
mov
mov
ss
xor
pop
mov
adc
dec
add
sub
je
and
xchg
dec
lcall
iret
inc
inc
js
add
inc
mov
ror
jne
mov
jecxz
push
push
cltd
jecxz
testl
xchg
ja
mov
sti
adc
test
faddl
xorb
xor
push
and
arpl
mulb
loope
push
add
and
aad
sub
xor
data16
orb
cmp
fldenv
or
mov
jnp
push
sbb
outsb
mov
loope
adc
aad
or
cmp
cmc
mov
jo
cs
je
and
nop
mov
movsb
sub
push
ja
repnz
inc
out
fisttpll
into
dec
sub
xchg
std
cmpsl
pop
outsl
or
push
sarl
andl
shrl
cmp
clc
test
cltd
sbb
aaa
mov
xchg
aam
lret
aas
insl
aam
jo
mov
and
add
or
xor
add
fdivl
stc
popf
dec
cmp
xchg
iret
in
sub
xchg
out
jae
loope
mov
push
iret
push
das
sub
push
dec
sahf
mov
xchg
ja
push
mov
mov
cmp
add
ljmp
add
mov
xchg
cli
int
or
push
and
daa
xor
repz
pop
js
add
sbbl
jge
push
pop
stos
movsb
sarb
jecxz
push
inc
gs
popa
cli
pusha
jg
mov
call
stc
psllq
stos
in
adc
mov
sbb
mov
sbb
mov
loope
addb
fldt
jecxz
dec
aas
inc
out
jmp
add
sub
xlat
push
imul
cmc
inc
dec
inc
sbb
std
add
std
sbb
sbb
cmp
call
mov
sahf
xor
pop
dec
mov
lret
push
das
add
adc
ret
pop
insb
and
xchg
cmc
in
and
mov
sub
pop
jl
mov
in
pop
popf
or
mov
adc
jp
pusha
pop
add
int
nop
imul
sbbb
mov
mov
lock
out
repz
jle
aas
push
or
pop
jae
stos
enter
xor
in
pop
xchg
les
test
dec
add
lods
and
fwait
cmp
or
sub
sahf
mov
and
push
fwait
jge
call
dec
cmpsl
sbb
adcb
call
sub
pop
dec
and
scas
imul
lret
mov
insl
pop
in
mov
mov
jmp
imul
jb
stc
stos
mov
add
dec
je
cwtl
addr16
jo
pop
adc
cld
cmp
pop
arpl
xlat
xchg
jg
aad
pop
stos
sub
inc
add
inc
and
push
mov
aad
out
flds
addr16
push
lods
or
int3
dec
sub
ficompl
fldenv
test
sub
push
pop
cmpsl
movsl
inc
or
out
jnp
nop
data16
cmpb
in
mov
push
data16
xor
lods
cld
sub
call
fwait
sbb
out
sub
enter
stos
jg
jns
ja
stos
xchg
jg
push
sbb
push
insl
rcrl
int3
ret
sbb
pop
jg
xchg
lods
cmpsl
and
pop
dec
test
xor
mov
xor
add
das
cltd
xchg
test
mov
xchg
jl
clc
cmp
adc
popf
daa
cs
jo
mov
cmp
lds
jae
cmpb
mov
imul
cli
jo
in
imul
xchg
pop
loopne
xor
push
mov
jmp
dec
sub
fucompp
inc
xchg
push
dec
mov
adc
add
jo
cltd
push
inc
outsb
or
xorb
lock
std
rorl
and
push
cmc
lret
std
rcr
jg
cmpl
xchg
dec
leave
loope
add
dec
dec
cmpsb
int3
xor
jmp
xor
aam
jmp
rolb
cmpsb
jmp
jg
lret
xchg
push
lahf
xchg
and
pop
sahf
lods
daa
lcall
dec
mov
cmp
loop
pop
mov
les
aam
or
sbb
cs
dec
loopne
or
nop
test
xor
cmp
fistps
add
les
shrb
sbb
mov
fisttpll
lret
add
lods
mov
cltd
mov
mov
daa
push
daa
push
arpl
inc
adc
xchg
out
insl
xor
push
outsl
ret
imul
dec
repz
ljmp
jns
ljmp
shll
jge
jb
sub
cmp
xchg
movsl
setl
mov
or
cmp
fstpt
test
xor
bound
iret
jns
pop
push
dec
mov
pop
add
jp
mov
or
and
loopne
and
push
push
jle
push
mov
sbb
pop
cmpsl
clc
dec
out
push
cmp
int
cmp
aad
push
lds
fdivrl
mov
mov
push
lods
mov
inc
cmpsl
out
inc
mov
push
cmp
jo
push
stos
negb
jmp
stos
push
sbbb
ljmp
fwait
jg
test
aam
out
dec
pop
pop
push
pop
sub
dec
push
leave
dec
aad
dec
fstl
mov
aad
jnp
adc
adc
ss
xor
xchg
xlat
mov
int
sub
test
lods
rorb
inc
sbb
outsl
dec
aam
icebp
popf
adc
mov
psrlw
and
mov
mov
out
push
jae
lods
cmpsl
jne,pt
dec
js
cwtl
jo
mull
je
ss
mov
xchg
jae
or
jle
pop
out
xor
lods
daa
pushf
icebp
adc
aaa
adc
lock
scas
dec
cmp
bnd
add
xchg
mov
data16
fs
mov
jg
shll
add
cmp
dec
in
out
pushf
fimull
or
test
cmpl
bound
int
enter
je
jb
shll
pushf
add
inc
jnp
in
xor
movl
push
mov
lea
dec
cmp
xchg
mov
push
movsl
inc
das
notl
dec
popa
push
push
pushf
cwtl
mov
daa
movsb
push
mov
push
ficomps
push
mov
push
jne
sbb
stos
mov
xor
cltd
jb
stos
sub
or
push
out
sbb
fisubrs
dec
pop
fldenv
in
jbe
and
pop
sbb
call
cmpsl
testb
cmp
js
sti
cltd
out
push
pop
dec
sbb
jmp
xchg
push
lock
test
mov
mov
fisubs
insl
cmp
cltd
xchg
hlt
call
pushf
and
mov
imul
mov
pushf
int3
cmpsl
in
inc
fadds
outsb
mov
cmp
aas
rorb
sub
gs
adc
mull
imul
inc
nop
mov
aam
xchg
mov
add
or
test
inc
cwtl
into
js
push
in
mov
mov
mov
inc
xor
movsb
mov
or
add
cltd
fcmove
dec
mov
movsl
icebp
adc
mov
sar
dec
mov
aas
pop
mov
add
test
and
sub
sti
jl
mov
cld
addr16
add
ds
hlt
call
dec
lahf
add
gs
into
adcb
fs
int
push
test
in
cmp
inc
ljmp
dec
mov
push
jg
popf
lods
hlt
iret
jnp
mov
pusha
insl
xchg
jp
stc
ficoms
negb
lds
sub
add
shlw
cmp
in
mov
or
cmpl
dec
adc
ss
sub
and
lcall
mov
xor
hlt
mov
push
repz
lods
dec
xor
jecxz
nop
xlat
imul
pop
das
push
int3
out
sub
inc
daa
sub
lods
gs
xor
xchg
adc
or
mov
out
adc
inc
mov
jae
dec
test
int3
xorl
jp
stos
adc
loope
mov
leave
imul
out
jae
and
lret
std
push
push
dec
mov
and
out
or
xchg
or
sub
lds
sub
arpl
pop
push
pop
movsl
or
add
loop
add
cli
xor
and
cmp
adc
cli
mov
out
movsb
jns
mov
pop
mov
jb
xchg
xchg
sub
jb
pop
lcall
mov
repnz
inc
mov
or
sbb
cmp
inc
push
push
hlt
outsl
lock
adc
fbstp
push
jmp
sub
jno
dec
mov
xchg
adc
int
rorl
sbb
jb
pop
dec
fsubrs
xchg
loop
sub
jmp
fstl
ror
loope
jge
ret
add
aam
mov
mov
add
mov
jnp
sub
pop
push
das
fisttpl
shll
or
mov
xor
movsb
mov
cs
orb
subb
scas
xchg
out
sbb
xchg
cmp
push
das
xor
int3
insl
adc
iret
popf
push
mov
shrb
aas
fldt
cltd
mov
fbld
mov
cmpsb
cwtl
rcrl
mov
inc
cmp
mov
xor
sbb
jne
mov
push
jmp
jg
leave
movsl
test
stos
lods
rolb
jo
xchg
in
mov
pop
adc
movsb
and
bound
jmp
sub
iret
jne
cmpsl
add
and
pop
std
fldcw
or
xchg
push
addr16
cs
fistps
cmp
mov
adc
test
int3
inc
lret
jo
ja
into
pop
xchg
jle
xor
add
stc
lods
fisubrs
out
js
push
and
jnp
jmp
mov
mov
sub
mov
adc
stos
and
int
fadds
cmp
mov
int
sahf
xor
xchg
out
dec
int3
repz
jne
xchg
rcr
xchg
int3
rcl
push
pop
mov
roll
or
mov
das
shrb
and
hlt
lret
xor
or
pop
or
and
and
push
divl
pushf
jnp
gs
icebp
jp
in
sub
jo
push
scas
scas
pop
adc
imul
jb
mov
ss
mov
test
sbb
pop
cmp
rol
mov
cmp
mov
ret
cmc
mov
sahf
outsb
scas
mov
cli
push
lds
mov
sub
mov
push
fstps
mov
mov
mov
lret
xor
pop
and
sbb
outsb
jne
sbb
or
les
mov
push
stos
dec
dec
mov
movsl
rcrl
dec
xor
pusha
push
int3
es
sbb
pop
or
in
out
adc
xchg
scas
pushl
andb
sub
inc
test
pop
fiadds
js
push
int3
pop
mov
ficompl
and
dec
sahf
sti
dec
dec
loopne
add
push
pop
or
dec
adc
mov
in
inc
loope
pop
lock
ja
test
orl
cmpsb
ja
inc
repnz
xchg
scas
je
movsb
pushf
outsb
cmp
aad
aaa
mov
out
jne
xor
sbbl
or
inc
aad
and
cmp
mov
aas
inc
xor
popa
or
adc
add
aaa
test
fdivr
sbb
dec
jmp
sahf
dec
movsb
add
fistps
sub
adc
mov
jmp
xchg
shl
outsb
jae
push
sbb
and
or
and
xor
outsl
and
shlb
xor
pop
popa
inc
movsb
fldz
stos
test
or
jnp
mov
in
mov
fcmove
mov
gs
jmp
dec
push
cmp
imul
pop
stc
jp
ficomps
aam
mov
movsl
cmp
or
inc
mov
lock
xchg
mov
test
fsubr
out
addr16
pusha
in
mov
fstl
xchg
pusha
add
fstps
ja
cwtl
popa
adc
jno
arpl
stc
jp
push
shlb
cmp
stc
jmp
test
repz
loopne
inc
dec
test
adc
inc
cmp
xchg
dec
ljmp
jl
test
mov
sub
or
mov
cmp
add
mov
in
lock
xchg
decl
jge
lcall
mov
push
enter
dec
into
inc
adc
sub
adc
push
outsl
xchg
lahf
cltd
jmp
xor
add
push
xchg
test
push
mov
iret
push
lret
pop
mov
adc
lret
dec
dec
jle
pop
dec
push
mov
adc
xchg
xor
ljmp
xor
sub
mov
push
outsb
pop
in
or
gs
mov
mov
daa
fists
mov
insl
orl
sub
out
sub
or
fs
add
dec
leave
rcrb
jp
std
and
std
in
rclb
loopne
imul
add
lea
aad
jae
sbb
adc
cld
inc
push
push
push
arpl
cmp
stc
or
cmp
xchg
push
inc
std
lods
sar
xor
cli
cmp
sbb
inc
xor
push
cmp
movb
xchg
xchg
cmp
and
stc
sub
cs
daa
xchg
xchg
pop
cmpsb
sub
add
repz
in
addr16
cmp
or
jle
and
and
cmpsb
cmp
shrl
jmp
push
push
and
clc
xor
mov
mov
cmp
jae
xchg
mov
mov
lds
sub
dec
cmp
xchg
sub
or
mov
mov
adc
out
xlat
jo
rep
jmp
adc
cmovb
imul
mov
inc
into
push
xchg
incl
xchg
cmpb
cmp
mov
subb
jge
ja
adcl
cmp
mov
mov
mov
dec
pop
lret
iret
int
sbb
sbb
pop
pusha
shll
stc
sub
das
jae
and
xor
mov
fistl
fs
lret
pop
xor
pop
xabort
push
mov
lods
je
sbb
mov
in
cmp
mov
cmpsl
mov
loope
cmp
jns
xor
mov
add
popa
mov
es
xor
stos
repnz
in
pop
adc
push
jle
sub
leave
sahf
and
lds
mov
nop
xor
xor
sbbb
cmc
lcall
jb
aam
or
mov
jne
fimull
xchg
mov
or
sbb
jnp
aas
jle
sbb
stos
out
addr16
or
sahf
test
jo
shrl
repnz
aas
das
mov
mov
jge
scas
rcl
inc
das
int
cwtl
jae
fcompl
mov
mov
jo
jecxz
ds
push
testb
pusha
fimull
outsb
cmp
aaa
jecxz
lods
fidivl
not
cmp
dec
sbb
sbb
mov
cmp
jo
cltd
fcmovbe
aam
ret
dec
mov
sbb
inc
sti
xchg
xchg
mov
or
adc
mov
in
mov
xchg
sub
insl
ljmp
pop
and
push
mov
fs
dec
add
jae
jmp
add
out
test
jmp
or
push
pop
fs
lret
push
and
frstor
cmp
xor
outsb
and
out
fisttpl
ljmp
insb
iret
imul
dec
or
sub
or
faddl
scas
jp
ss
outsl
fildl
int3
test
inc
fwait
xchg
nop
lods
cmp
and
sbb
aas
daa
inc
adc
mov
aas
lods
lret
shrb
mov
mov
loope
inc
into
pusha
ficomps
xlat
cmp
shll
roll
sub
or
inc
inc
sahf
dec
inc
jg
push
pop
mov
lock
and
ja
and
or
or
lods
insl
push
fwait
and
cmp
xor
sets
jl
sbb
test
loopne
xlat
enter
insb
and
test
cmp
clc
push
pop
xor
out
jmp
dec
ret
mov
imul
inc
xchg
mov
xlat
sub
lods
int
mov
dec
or
ret
loop
inc
in
sub
or
adc
mov
dec
test
pop
mov
cmpsl
mov
sbb
sahf
mov
ret
ds
pop
stos
rorl
mov
sbb
push
inc
test
lahf
fnstcw
mov
mov
out
push
jno
inc
int3
out
das
push
fwait
and
fs
stos
mov
enter
cmc
aaa
cld
pop
cltd
mov
or
cmp
vpshufhw
jl
dec
stos
subb
jbe
pusha
cli
push
pop
out
mov
ret
je
push
rorb
sub
icebp
mov
push
int3
xchg
cmp
bound
xor
inc
jmp
xor
xlat
js
xor
inc
push
xchg
rorb
lock
sbb
lock
xchg
outsl
fstl
add
movsb
jp
in
add
push
lods
jns
mov
inc
adc
mov
add
xor
jbe
inc
add
mov
jnp
dec
adc
lret
mov
ror
fistps
and
daa
movb
inc
fdivs
mov
lea
sahf
inc
gs
enter
js
cmp
stc
xor
inc
je
xor
or
and
loopne
loopne
xchg
shrl
shl
cmp
incb
dec
xlat
mov
dec
jae
jno
ret
jg
loopne
inc
aam
fists
xor
add
dec
push
mov
adc
adc
scas
mov
inc
cmp
lret
fs
lea
testl
cmp
std
xchg
pop
add
into
bound
and
lods
dec
pop
popa
jb
sub
notb
subb
sub
dec
xchg
and
fstl
lret
jl
in
mov
dec
cwtl
inc
shrl
lahf
dec
fucom
scas
stos
out
push
fs
leave
mov
push
dec
movsb
std
xor
push
data16
adc
or
push
cmovno
test
cltd
outsl
scas
fwait
inc
sub
adc
and
test
nop
push
lock
aas
ret
cli
cmp
xchg
sub
popf
jae
cmp
stc
adc
jp
pop
pop
dec
enter
push
push
das
jb
xor
inc
pop
loop
mov
jmp
scas
mov
xor
pop
push
mov
mov
mov
gs
or
gs
add
cmovnp
mov
sbb
mov
in
xor
jecxz
xorl
pop
ss
gs
fs
jmp
dec
mov
add
addr16
stos
lcall
in
or
cmp
jle
mov
sbb
lds
loope
sarl
dec
xor
cld
jge
adc
push
mov
or
ja
fwait
mov
dec
push
cmpsb
fldl
cmpsb
adc
xchg
fcmove
ds
mov
movsb
rclb
adc
dec
push
shrb
jno
sub
pop
adc
jle
jno
loope
std
jae
insb
jmp
out
push
or
pop
stos
mov
mull
push
or
mov
idivb
xor
dec
pop
outsb
pop
insb
mov
in
out
sti
cmpsl
xor
and
out
rol
std
jno
and
out
pop
cltd
js
mov
sub
push
inc
mov
sub
test
orb
out
add
and
jmp
cld
addr16
scas
inc
or
scas
and
mov
fisubrl
ret
and
icebp
pop
adc
cld
cmpsb
fldenv
xor
ljmp
aaa
int
mov
sub
cwtl
das
adc
xchg
fwait
jp
cmp
out
inc
mov
ud1
cmpsl
sbb
dec
inc
xchg
arpl
in
out
pop
loopne
lods
jno
iret
sbb
jge
push
jno
inc
mov
loopne
daa
jnp
jecxz
push
sub
xor
fadds
add
mov
lret
lahf
enter
jmp
enter
dec
lea
ss
dec
popa
push
or
mov
adc
xor
jecxz
insl
or
adc
out
fiaddl
rcll
or
pop
fstpl
lods
cltd
cs
dec
outsl
leave
ljmp
fsubrs
push
xchg
cli
mov
sbb
push
lret
mov
xchg
pop
mov
jb
or
movsb
pop
xchg
ss
pop
xor
pop
xor
mov
int3
mov
fucomi
mov
mul
adc
push
inc
mov
push
xor
and
popf
insl
mov
sub
divb
pop
pop
jmp
jns
pushf
xchg
xchg
imul
in
push
sbb
jl
cld
int
jnp
ret
mov
xor
push
pop
pusha
cmc
aaa
addl
cld
icebp
and
mov
fisubrl
pushf
fnstenv
out
inc
ds
xlat
xchg
rolb
inc
or
and
adc
jb
xlat
mov
rol
jnp
cmp
je
aas
push
sti
mov
dec
push
aas
aaa
sbbb
mov
or
or
lahf
pusha
int
lds
aad
sbb
and
fdivp
addb
bswap
jl
test
andb
inc
inc
shrl
fbstp
jp
jmp
cmp
pop
repnz
scas
inc
mov
in
push
inc
icebp
push
clc
dec
push
jmp
inc
push
jl
daa
push
daa
cmpsl
ds
in
into
ja
xchg
adc
loop
bound
inc
pushf
fistpll
mov
lods
lock
and
jno
lods
ficoms
stos
cmp
xchg
dec
fisubrl
sahf
jo
mov
xor
push
sbbl
mov
mov
add
aas
minps
out
std
add
push
fldcw
add
imul
test
mov
cld
repnz
jne
xchg
scas
xor
push
lea
dec
mov
in
divl
add
add
or
jp
mov
int
icebp
mov
mov
lret
addr16
inc
sub
movd
jne
sbb
sbb
cmp
xchg
dec
push
push
outsl
mov
and
loop
push
cmp
add
aad
jle
popf
aam
arpl
pop
mov
add
sbb
add
mov
adc
inc
fadd
xchg
push
lock
mov
xor
std
mov
test
outsl
jne
pop
pop
scas
aad
stos
xor
ds
dec
jecxz
negb
xor
mov
adc
das
dec
inc
jg
sbb
sub
and
stos
xor
cmp
xlat
in
and
xor
push
jb
rorl
dec
xor
pop
aas
or
add
popaw
mov
push
pusha
pop
push
xchg
popf
leave
sbb
xor
xchg
negb
clc
mov
sub
mov
sbb
iret
out
mov
or
outsl
bound
push
js
pop
xor
repz
or
push
cmp
xor
cld
outsl
and
or
mov
adcb
test
push
femms
inc
cmc
pop
or
adcb
dec
mov
adc
notb
sbb
xor
jle
pop
sub
fbstp
insb
test
jg
inc
sbb
out
test
cmc
mov
add
and
pusha
jo
lret
dec
cmpsb
push
notb
ret
mov
push
inc
xor
pcmpeqw
jns
ss
int
pop
and
ficoml
inc
outsb
inc
lret
pop
aam
arpl
pop
into
mov
mov
cmp
adc
mov
in
mov
in
inc
mov
aam
jg
data16
and
jg
jnp
add
inc
outsb
enter
xchg
movsb
cmp
out
xchg
je
cmpl
shll
mov
rolb
or
xchg
and
imul
lahf
shl
insl
cmp
inc
outsl
sub
sbb
into
aaa
cmpsl
xchg
inc
loopne
add
cs
sub
out
aas
jnp
addr16
loop
stc
mov
js
and
loop
xor
cmp
mov
or
fs
jge
inc
fsubrl
add
xchg
in
scas
out
push
fwait
push
imul
shl
push
js
out
xchg
lock
xor
cmpsb
fmul
push
xor
or
popf
pop
test
adc
in
pop
lret
mov
test
setge
dec
test
mov
pop
jmp
jg
fs
jl
pop
mov
mov
out
aam
xchg
push
lret
repnz
mov
cs
in
push
in
xchg
mov
cli
mov
jp
sbb
adc
loopne
out
fsubs
aas
cmp
or
cmc
je
aaa
je
insl
repnz
sbb
sarb
int3
and
mov
jge
push
ljmp
jecxz
inc
xor
mulb
xchg
shl
sahf
mov
in
or
imul
test
test
and
pushf
dec
xlat
cmp
push
cmp
xorb
andb
xor
dec
out
mov
mov
fmuls
inc
das
mov
mov
xor
xchg
sub
cltd
sbb
pushf
stc
push
sbb
dec
adc
jns
ljmp
sbb
dec
pop
aas
shrl
pop
dec
push
mov
ljmp
pop
mov
xchg
mov
sbb
sub
inc
jge
sbb
mov
dec
mov
jle
js
xor
dec
jb
nop
sub
jge
leave
cs
and
push
out
in
test
andb
mov
fisubl
jbe
mov
mov
sbb
jae
adc
add
push
in
or
cmp
mov
cmpsl
ja
mov
xchg
xchg
roll
sbb
push
pop
fcmovne
test
sbb
icebp
push
fldt
push
add
ja
and
push
ja
mov
lods
rol
idivl
push
or
pop
add
cmp
aaa
pushf
cld
aam
xor
test
push
loope
mov
inc
and
mov
cmp
inc
pextrw
xchg
scas
mov
add
push
jmp
mov
repz
std
adc
dec
dec
mov
mov
cmc
cmp
xor
push
sti
xor
mov
mov
push
pop
fs
sti
mov
mov
movsb
sti
hlt
fmulp
outsb
mov
sbb
sahf
outsl
jno
mov
fbld
aaa
cwtl
jb
sbb
jle
pop
lea
bnd
cmp
mov
push
adc
jl
jae
movsb
out
jb
faddl
add
mov
mov
add
and
adc
cld
outsb
dec
stos
adc
jp
sahf
lret
jnp
sbb
mov
mov
sbb
adc
inc
cmp
arpl
cmp
insl
ficoms
pop
ficomps
sti
lods
dec
mov
inc
in
cmpsb
addr16
pop
mov
sbb
pop
sub
out
xlat
mov
mov
adc
jbe
xchg
aam
jmp
lahf
stos
xor
lahf
mov
xor
neg
aam
sub
xchg
jo
cmpsb
push
and
adc
in
outsb
js
and
add
inc
sub
clc
push
aam
jo
cmp
mov
push
popf
xor
sub
enter
daa
add
imul
inc
out
ljmp
add
jmp
or
pop
inc
rcrb
dec
pop
cltd
sbb
mov
sbb
add
fisubrl
sub
stos
mov
mov
lahf
dec
aas
mov
mov
aad
mov
test
adc
mov
adcb
jns
pop
sub
lcall
jno
adc
in
inc
jno
sbb
int3
repnz
inc
stc
out
add
or
inc
push
pop
into
mov
pop
sbb
shll
shrb
ret
cmp
add
jno
stc
xor
daa
dec
mov
out
negl
and
in
or
popa
dec
sub
jecxz
out
mov
dec
jo
test
fmull
adc
lea
add
jmp
sbb
push
std
mov
inc
mov
rcll
xor
xadd
rolb
adc
dec
add
fs
loop
imul
sti
data16
sti
mov
fdivrs
lods
push
cmp
lea
stc
xor
mov
mov
outsl
pushf
pop
sarb
cwtl
out
add
repnz
mov
mov
mov
int3
popf
mov
outsl
das
jle
mov
fstpl
loopne
ss
scas
xor
pop
or
addr16
and
push
std
test
inc
repnz
mov
fcmovnb
xor
sub
mov
jp
add
sub
push
sub
mov
lea
mov
int3
pop
xor
push
jae
push
es
ficoms
jge
out
add
add
cmp
outsb
addb
popf
aad
adc
pop
jb
or
xor
bound
iret
xor
fwait
adc
mov
stc
sbb
movzbl
pop
mov
jne
dec
divb
add
pop
rcr
loopne
scas
sbb
mov
and
movsl
cli
insb
pop
call
dec
cmpsb
mov
inc
sub
cmp
mov
cmp
add
rcl
lods
mov
fld
xchg
or
jb
dec
xchg
sbb
xchg
push
lcall
test
inc
xor
femms
push
mov
sub
adc
jle
mov
sti
sub
push
mov
dec
shll
push
mov
nop
pop
add
clc
jecxz
mov
js
das
add
mov
lahf
imul
clc
divb
mov
sbb
leave
jne
jae
les
mov
lret
int3
inc
lret
jle
rolb
test
mov
lret
push
data16
mov
arpl
movsb
inc
add
data16
jle
fadd
ds
push
ja
divl
inc
loop
mov
lods
mov
cld
hlt
das
ret
into
sub
jge
in
adc
and
push
jbe
dec
xchg
rcrl
lcall
adc
mov
pop
fstpl
inc
and
mov
negb
add
mov
rcr
mov
mov
in
fldt
js
or
sbb
xchg
test
shlb
pop
sbb
and
sti
pop
push
bound
sub
and
insb
xchg
adc
cmp
sti
lea
jg
mov
jb
mov
in
jmp
cmp
xor
pop
and
dec
imul
push
sbb
mov
bound
repz
lret
js
pop
mov
xchg
add
sbb
sbb
jno
fsts
xchg
gs
sbb
test
cli
push
push
mov
mov
push
addl
orl
mov
add
cmpsl
push
cs
nop
rdpmc
scas
int3
dec
out
pusha
sub
add
push
mov
xchg
in
mov
out
xor
jnp
pop
xchg
adc
adc
cli
into
repz
scas
imul
imul
sub
or
push
dec
mov
mov
cmp
adc
mov
add
sub
mov
std
dec
test
push
jg
jle
fldl
sbb
adc
int
popa
stos
fnstenv
ds
gs
xlat
cwtl
fisttpl
daa
xchg
mov
push
mov
rorb
in
sti
sub
inc
mov
xchg
mov
pop
pop
fimuls
inc
push
add
sti
fidivrs
lcall
xchg
in
sti
fildl
call
xchg
pop
dec
wbinvd
bound
xor
popa
imul
bnd
movsb
scas
push
xor
aad
in
mov
sub
push
pop
fs
movsl
jmp
in
mov
mov
ja
mulb
icebp
and
mov
mov
or
je
mov
stc
mov
jo
push
hlt
lcall
mov
loope
mov
out
push
int3
push
ja
imul
orb
in
iret
sbb
js
bound
jge
jno
js
pop
popf
cmp
int3
pop
sarb
mov
add
mov
jp
rolb
ret
popf
fmuls
das
xor
cmp
imul
mov
xor
sub
push
or
mov
jl
pop
mov
mov
pop
or
adc
jmp
fdivp
cmpsl
lea
or
lock
loopne
or
mov
push
fwait
dec
or
mov
nop
jns
pushf
adc
gs
jmp
push
lods
dec
cmp
or
lock
shlb
jl
mov
or
dec
and
add
aam
mov
dec
enter
shl
or
adc
loop
shrl
or
jge
sub
leave
push
test
mov
out
push
pop
je
adc
mov
mov
in
les
mov
in
xchg
jge
fidivs
mov
mov
inc
ficompl
ljmp
sub
xchg
popa
into
repnz
loope
ja
data16
or
xchg
lret
adc
xor
inc
mov
cmpsl
sbb
jp
adc
sbb
adc
test
jecxz
jb
jae
adc
pop
out
mov
xlat
insl
xchg
sarl
and
push
jecxz
insl
adc
int
outsb
movsb
jmp
scas
imul
jl
aas
in
pop
add
cmp
stc
leave
ds
stc
ljmp
push
lock
and
sbb
mov
movsb
cmc
jp
pusha
je
aaa
sbb
pop
outsb
enter
xchg
cmpsl
adc
jo
adc
out
fs
adc
pop
ds
pop
push
dec
aaa
cmp
pop
jp
xchg
mov
dec
addr16
mov
cli
in
xchg
movsl
call
divb
pop
sbb
in
and
bound
fisttps
sbb
jecxz
lret
icebp
mov
ja
ret
pop
mov
mov
push
push
xchg
push
addr16
or
addr16
xor
sub
inc
lcall
fildll
jl
or
xchg
ds
xor
call
pop
fisttpll
outsl
sub
or
rcr
push
sahf
shrb
pop
sti
into
mov
sbbb
inc
out
dec
aam
scas
in
fcmovne
push
pop
sti
xchg
jl
loopne
push
mov
cli
inc
pop
jae
cmp
add
sub
push
fildl
fstpt
adc
mov
lds
jge
mov
xlat
arpl
cmc
js
push
je
and
mov
add
sbb
arpl
dec
jbe
mov
push
dec
fsubl
dec
cmp
out
mov
and
push
pop
in
xchg
xchg
int
push
test
mov
dec
into
mov
jge
mov
mov
dec
rcll
mov
in
mov
mov
xlat
std
js
mov
pop
pop
int
out
insb
mov
xchg
jl
dec
repnz
push
in
nop
cmp
loopne
xchg
xor
roll
sub
cmp
fwait
shll
das
pop
pop
and
mov
enter
add
mov
daa
and
cmp
in
test
ds
mov
addr16
mov
in
aaa
push
fxch
mov
push
add
jle
fidivrs
jl
add
mov
jae
cli
sub
les
ss
xchg
daa
pavgb
xchg
dec
in
or
inc
or
test
cmp
cmp
stc
jnp
jge
sbb
xchg
fldt
shrb
call
or
jl
loop
adc
inc
incb
test
bound
aas
stos
jne
add
jp
int3
cld
sbb
sbb
inc
into
push
inc
jns
jle
ds
jbe
fidivrs
xor
adc
xor
popf
idivb
cmpsb
and
sub
push
fidivrl
ljmp
mov
das
bound
mov
mov
not
addr16
cwtl
pop
hlt
out
lret
xchg
push
pop
jb
xchg
jno
and
xor
push
xor
fsts
pop
and
dec
mov
addl
inc
mov
push
adc
mov
pop
dec
insl
push
insb
jecxz
call
les
push
inc
dec
int3
jae
xor
cmp
add
test
mov
cmp
push
fsts
mov
inc
cmp
dec
pop
leave
outsl
int
orl
cmp
iret
fnstcw
dec
push
nop
js
add
sbb
adc
cli
scas
mov
lods
int3
lea
sbb
sub
into
les
testb
cmpsl
inc
sub
repz
xor
cmp
sbb
notl
mov
mov
into
imul
pop
add
pop
and
sti
mov
rorb
xor
icebp
ds
cmp
lahf
jl
scas
clc
cmpsl
or
mov
jmp
pop
jecxz
aas
and
xchg
leave
add
pop
mov
lock
xchg
xlat
mov
add
es
aaa
jbe
popf
sub
fists
sbb
insl
leave
cmp
add
cld
or
mov
sarl
jns
adc
incb
mov
push
cmp
andl
test
daa
cltd
aad
sbb
filds
adc
mov
xchg
fiadds
sbb
fnstsw
insl
pop
add
mov
popf
shrb
rorb
cmp
fsubrs
imul
imul
lods
sbb
jnp
repnz
inc
inc
adc
inc
scas
adc
cmp
insl
mov
outsb
aam
or
pop
push
sbb
cmpb
mov
pop
mov
out
lods
jae
lcall
out
pop
xchg
scas
mov
dec
mulb
xchg
xor
cmpsl
or
push
jo
jl
jp
and
dec
fiadds
mov
aaa
mov
or
and
xchg
push
or
push
add
ret
xchg
insl
iret
adc
movsb
jno
mov
adc
xchg
or
lds
xor
ss
in
cltd
mov
sbb
int3
outsb
lret
pushf
lret
insl
shl
fs
test
ds
cmp
gs
hlt
and
or
mov
mov
add
push
add
ss
jnp
sbb
cmp
rep
push
lods
loop
mov
pushf
push
xor
ficoml
dec
push
call
mov
test
sub
icebp
xor
pop
fidivl
jae
add
and
insl
inc
cmpsb
dec
dec
jg
jb
mov
mov
inc
push
movsl
jmp
dec
sarb
jle
add
in
jg
add
mov
aaa
xlat
lods
stos
cmp
cmp
adc
push
fldl
int3
adc
and
cmp
mov
mov
or
lcall
icebp
std
dec
int3
jbe
arpl
push
cmp
cmp
lret
enter
mov
out
mov
mov
or
pop
xor
push
jnp
fcmove
pop
ret
cli
test
mov
push
in
movsl
pop
call
inc
cmp
repnz
test
inc
insl
and
cli
test
pusha
sbb
jge
lods
cltd
ja
dec
rcll
call
jg
in
arpl
ja
lret
inc
ja
orb
pop
in
adc
fildl
xchg
pop
inc
loopne
push
daa
pop
or
mov
cwtl
pavgb
icebp
pextrw
mov
cmc
dec
clc
popl
test
sbb
adc
in
pop
movsl
pop
mov
xchg
shrb
mov
cli
jbe
or
push
inc
jno
cmp
push
pop
cwtl
dec
or
push
lods
xor
mov
lahf
cld
mov
and
jge
test
pop
fstl
je
or
mov
jo
lahf
mov
and
cmp
test
cltd
loope
dec
fdivrl
data16
test
add
ror
popf
inc
pop
fbld
xchg
icebp
pop
inc
enter
cltd
mov
push
cmovo
lret
in
imul
mov
mov
sahf
mov
fisubrl
loop
push
jmp
pusha
fimuls
sti
pusha
push
jno
adc
stc
and
jecxz
xchg
sbb
in
jg
call
loopne
and
mov
adc
aas
aas
jb
mov
pop
gs
mov
fwait
imulb
out
cmpsl
pusha
mov
mov
jg
stc
jle
ljmp
out
and
pop
ret
fsts
popa
les
mov
cmp
pop
dec
iret
xor
pop
pop
dec
addr16
sub
fwait
or
sub
lea
jae
sbbb
icebp
out
mov
jo
addl
pop
aad
or
sub
sarl
cltd
lds
cmp
xor
cmp
adcb
enter
and
inc
dec
test
cmpsb
loop
xchg
dec
jae
test
push
mov
lret
ret
enter
xchg
cld
push
inc
pop
or
mov
inc
dec
xchg
mov
shll
inc
push
jmp
mov
mov
mov
xchg
add
jae
pop
movzwl
insb
pop
fldl
gs
dec
into
pop
cmc
push
mov
dec
dec
movsb
xchg
mov
test
iret
cmp
fs
call
jg
ret
fwait
jo
mov
cltd
pop
icebp
loop
push
jno
push
lret
jne
enter
je
enter
ljmp
xor
into
insb
icebp
jne
cs
add
add
jb
clc
mov
mov
jl
je
in
inc
sbb
push
cmp
aas
daa
mov
cltd
pushf
push
pop
clc
stc
sub
shll
dec
cmp
mov
std
mov
fildll
mov
dec
mov
pop
seta
xchg
test
sbb
sub
clc
push
notb
nop
fsub
jle
mov
cmp
test
sbb
jae
sbb
adc
adc
mov
out
xchg
jbe
rclb
fistpl
push
mov
mov
cmpsl
aas
sbb
jne
inc
pushf
jbe
fucomp
xor
and
dec
add
xchg
mov
mov
or
xchg
fidivrl
in
pop
aas
jnp
push
xor
inc
aam
add
cmpsb
dec
xlat
lods
cmp
jns
loopne
and
xchg
sbb
cmp
test
bound
pop
jns
mov
roll
mov
je
mov
fnclex
xor
or
divb
loop
cltd
ss
lahf
arpl
cwtl
fsubrl
arpl
xchg
fldl
mov
dec
shl
dec
or
xchg
or
pop
repnz
sbbb
sbb
rorl
adc
push
iret
and
pop
test
and
mov
push
dec
add
aas
push
sbb
mov
lea
scas
mul
mov
cmp
movsl
push
sbb
out
sbb
push
negb
mov
pop
and
dec
and
and
in
ds
es
add
xchg
and
push
cmp
cltd
dec
push
mov
sbb
lahf
push
pusha
out
xchg
cmp
push
jae
cmp
adcl
movsl
lret
iret
out
jb
xchg
and
negb
sub
mov
arpl
jmp
loopne
dec
add
hlt
cmpsb
mov
out
push
subps
movb
and
mov
xchg
inc
sbb
pop
ret
rorb
mov
shrl
sbb
loopne
cli
sbbb
jne
push
cmp
cmpsb
popa
push
int
mov
add
inc
push
xor
sub
mov
sbb
mov
jge
shrl
fisubl
push
outsl
sbb
push
xor
pop
jae
int3
in
sbb
inc
lahf
dec
inc
rclb
xchg
add
mov
xor
pop
mov
sbb
and
in
xchg
testl
mov
movsb
inc
aaa
fdivr
and
leave
xorl
mov
jmp
cmp
pusha
repnz
enter
popa
aad
outsb
cmpsl
inc
dec
ljmp
jno
pop
sbb
dec
repz
ret
fdivrp
adc
add
mov
add
push
pop
insl
lds
or
in
fcmovbe
lcall
jno
and
cmp
lret
xchg
fstpt
sahf
dec
mov
push
cmp
mov
insl
in
adc
bound
pushf
fldt
movsb
dec
rcl
dec
xor
cmp
das
jmp
std
mov
cmp
adc
add
test
shr
test
inc
pop
xchg
cli
hlt
pop
dec
push
fsubrl
and
push
rcrb
xchg
les
cld
addr16
mov
aad
out
and
pop
mov
jle
jnp
test
adc
rcll
mov
ret
test
leave
sbb
add
pop
mov
addr16
arpl
and
pop
cmp
ds
in
test
sbb
mov
jne
ja
xor
lret
aad
test
test
std
stos
or
ljmp
dec
lock
lcall
add
pop
or
jno
loope
rcrb
loope
sbb
mov
stos
jmp
and
sbb
mov
stos
mov
jae
stc
xchg
dec
pushf
inc
and
das
dec
or
int3
cmp
pop
shrl
stc
scas
pop
repz
filds
int
or
or
daa
xchg
and
cmp
jmp
aaa
pop
add
mov
jae
push
movsl
imul
repnz
or
jnp
sbb
jl
dec
xchg
xchg
push
add
sub
les
dec
jmp
or
add
movsb
adc
repnz
mov
loope
vrsqrtps
xchg
rcr
es
inc
add
fs
inc
insb
data16
movsl
lds
jne
out
xlat
mov
push
mov
sarb
cmc
call
andl
mov
pop
ret
or
lods
sti
fistpl
sbb
mov
cld
test
xlat
sbb
es
mov
xlat
js
add
lods
lcall
sarl
pop
int
imul
inc
jle
sbb
inc
out
enter
jle
and
gs
subb
add
pushw
xchg
xchg
sub
or
push
je
out
dec
jl
loopw
xlat
insb
int3
leave
in
ds
sbb
ds
xor
sub
jno
add
adc
cmp
sbb
sarl
mov
sahf
cmp
mov
pop
stos
sbb
sub
xor
add
mov
mov
arpl
loopne
xorl
int3
cli
bound
or
jne
pop
push
aaa
ret
call
loop
lret
adc
mov
xchg
outsl
push
in
hlt
jb
pop
ficompl
pop
or
icebp
stos
mov
ret
es
inc
cmp
out
pop
movsb
enter
pop
lea
xor
xchg
pusha
xchg
cli
popf
adc
mov
xlat
mov
jne
in
rcrb
mov
imul
jmp
adcb
std
sub
xchg
adc
hlt
es
xor
aas
jo
cmp
sbb
jae
xor
fisubrs
jp
sbb
decb
cmpsl
orl
push
push
mov
jne
or
ret
jnp
pop
enter
imulb
mov
popa
sarl
ja
pop
add
popa
mov
int
jl
sbb
lret
scas
pop
or
push
mov
out
daa
icebp
adc
push
mov
mov
bound
adcb
scas
jae
test
je
sbb
lea
jb
pop
dec
test
and
lret
aaa
push
loop
push
push
popf
adc
cmp
fldt
test
adc
or
ljmp
jae
jmp
xlat
or
cmp
fs
ret
inc
push
push
in
gs
xchg
sarl
pop
into
sbb
movsb
push
cld
sub
pop
inc
sti
sti
in
jecxz
sub
std
cld
jmp
sub
adc
call
pop
mov
mov
adc
dec
lret
adc
loop
or
push
xchg
movsb
pop
addb
aad
mov
adc
jmp
inc
jbe
xorl
xchg
mov
add
lahf
aam
ja
imul
add
test
stos
and
lahf
or
std
lods
jmp
cld
cmp
adc
cmpb
lods
icebp
pop
lods
in
dec
mov
jmp
and
inc
adc
shll
mov
sti
fs
mov
xor
xchg
stos
adc
mov
ss
js
dec
dec
jmp
adc
mov
inc
ret
and
jecxz
mov
pop
push
je
cld
fstl
cmpl
or
xchg
mov
cli
xorl
sbb
cmp
nop
lds
jae
stc
daa
cmp
in
call
add
rcrb
cmpl
or
sub
ret
xchg
push
mov
jo
ret
cwtl
test
sub
cmp
adc
or
and
mov
sbb
call
lock
pop
pop
js
cmp
xchg
fisubs
dec
loopne
leave
xlat
and
popf
mov
popf
mov
fcomi
testl
js
test
mov
push
lock
lods
int3
and
cld
icebp
sahf
pop
mov
out
aam
adc
in
add
dec
mov
pop
push
in
loope
adc
fnstcw
fisubs
mov
aas
cmp
mov
imul
scas
cmp
jecxz
fsubs
xchg
mov
mov
repz
shl
mov
scas
pushf
xor
pop
gs
addl
dec
out
cmc
sub
xchg
mov
fisttpl
fsubl
clc
xchg
inc
fsubr
stos
lcall
inc
sbb
movsl
jnp
ret
rcll
dec
fisubl
sub
or
sbb
inc
cmp
data16
and
iretw
xor
arpl
decl
xor
cmp
sbb
jecxz
ljmp
cmpsl
sbb
or
scas
sbb
lea
mov
loop
pop
sub
fdiv
cs
lods
sub
mov
cmp
testl
and
or
pop
je
jmp
or
std
and
mov
dec
jecxz
dec
adc
sbb
mov
dec
xchg
fdivs
dec
push
mov
insb
dec
test
add
mov
outsl
popa
or
movsb
bnd
fisttps
xlat
pusha
push
dec
fstps
imul
lods
fidivs
mov
sarb
lcall
outsb
ret
ror
sub
mov
push
inc
bound
call
insb
lret
js
outsl
mov
xchg
fs
inc
mov
insl
dec
movl
insb
xchg
jae
jle
dec
fdivrp
dec
sbb
or
pusha
cmpsb
adc
adc
push
inc
mov
movsb
mov
pop
xor
testb
lret
jle
push
add
out
cmp
sbb
outsl
movsb
sahf
fwait
jle
and
and
jnp
inc
push
or
imul
nop
adc
mov
dec
test
sub
in
jnp
arpl
or
stos
xchg
icebp
insb
push
std
insl
fbstp
xchg
xchg
mov
imul
out
pushf
je
push
aam
pop
sbb
dec
sbb
es
div
xor
or
push
xchg
in
mov
nop
adc
push
jns
inc
mov
adc
dec
movsl
mov
jb
sbbb
out
or
sbb
call
xchg
es
mov
lret
cmp
daa
and
andl
mov
shrb
lahf
add
push
popf
jg
js
pop
inc
icebp
arpl
call
sbb
pop
daa
mov
add
cmp
add
sti
mov
jo
sub
jno
pop
pop
sarb
stos
roll
rorl
pop
xorl
stos
adc
xchg
movsb
pop
xlat
ret
push
gs
test
int
lods
sti
pop
sbb
inc
cmpb
stc
sub
mov
xchg
fs
cltd
or
xlat
mov
mov
rcl
mov
popl
lock
adc
sub
sbb
jnp
dec
inc
insl
repz
das
lods
mov
stos
pop
jmp
iret
adc
xchg
jl
push
xchg
int3
outsl
jnp
lret
popf
in
pop
outsl
jmp
cmp
mov
ret
and
dec
cmp
cld
push
lcall
mov
sbb
faddl
movb
js
mov
pop
jb
outsl
pushf
xchg
or
testl
clc
pop
fs
hlt
cli
out
push
or
inc
js
rorl
pop
pop
pushf
cmpb
sub
xchg
pop
ja
mov
or
cs
jp
and
loopne
or
movsl
lret
and
sub
mov
repz
push
add
cmc
repz
dec
pop
xorb
popf
lods
dec
test
in
add
jle
aam
jl
add
mov
sbb
es
adc
ds
mov
nop
aas
jae
fisubrl
push
es
jno
es
nop
jno
add
lods
lock
xchg
in
movsb
je
pop
push
dec
mov
call
xor
xchg
xchg
test
pop
hlt
mov
fs
out
jne
pop
xor
mov
loop
xchg
jp
push
call
dec
pusha
mov
or
outsb
les
int
out
pop
mov
mov
call
inc
jmp
popf
adc
clc
out
aaa
idivl
sahf
aad
jns
xchg
scas
mov
ret
sti
sbb
jmp
je
push
mov
mov
push
test
and
or
inc
mov
scas
leave
cwtl
clc
roll
push
idivl
test
sar
repz
and
lea
lods
nop
ds
cmp
jnp
dec
loope
sbb
jo
imul
sub
loopne
add
mov
or
push
aas
mov
push
pop
adc
sbb
es
fimuls
and
push
icebp
pushf
xor
scas
insl
sub
pop
push
xor
sub
icebp
in
pop
outsl
imul
and
icebp
xchg
enter
xor
scas
das
fs
testb
out
sub
ljmp
test
popf
hlt
or
xor
call
scas
mov
sbb
inc
mov
xchg
mov
addr16
dec
dec
inc
lods
push
dec
xlat
jbe
pusha
int
push
cltd
push
xor
jl
jmp
loop
jne
push
fwait
jmp
cmp
mov
fxch
adc
inc
push
int
jne
out
in
jecxz
jo
add
mov
lds
roll
xchg
insb
pop
cmc
push
push
mov
pop
push
add
repnz
gs
loop
aaa
jbe
stos
idivb
jle
push
pop
popf
inc
fisubrl
jno
xchg
pop
ficomps
lods
cmp
and
lcall
pop
add
test
and
mov
push
and
add
pop
jo
lods
aaa
enter
bnd
jp
fwait
insl
insl
loopne
mov
or
outsw
test
movsl
stos
dec
and
sahf
popf
ret
mov
mov
sbbl
es
pusha
push
mov
sub
data16
sub
and
adc
sub
sbb
cwtl
in
ret
imull
aas
stos
jge
cld
pop
xchg
loope
lcall
mov
call
sub
daa
pop
std
scas
sbb
mov
call
in
stos
sbb
andps
flds
inc
jge
and
xchg
cmp
sbb
fnstenv
test
add
aad
shlb
out
pop
jge
adc
nop
pop
inc
out
into
jle
out
shr
sub
lret
jo
negb
jne
xor
addl
stos
lret
rcrb
pop
mov
dec
mov
mov
in
push
xchg
ja
add
insb
fists
shlb
pop
mov
inc
mov
stc
push
clc
out
dec
mov
xchg
dec
ds
cmp
jge
mov
lret
stos
mov
mov
cmp
cmp
insl
rcrl
in
add
pushf
pusha
add
pop
int3
imul
cld
iret
push
push
insb
imul
enter
adc
je
lcall
das
mov
inc
pusha
je
rolb
add
pop
cmp
pop
xchg
int
aas
arpl
ljmp
add
inc
mov
daa
ja
sub
mov
dec
xorl
fsubrl
andb
push
dec
scas
out
out
leave
es
jo
mov
and
mov
cld
jg
dec
mov
in
cld
mov
cmp
mov
shlb
pop
test
fldcw
cmpsb
int3
add
cld
mov
push
cmpsb
pop
icebp
push
scas
pop
cmpl
fisttps
das
xchg
stos
and
xlat
ret
cli
insb
jp
sarl
dec
inc
pcmpgtw
insl
clc
or
out
shlb
loope
popf
enter
int3
pop
in
dec
jecxz
out
xchg
loopne
xchg
ss
lahf
popf
cltd
cmpsb
pop
or
add
popf
adc
mov
mov
sub
hlt
mov
or
xchg
xor
gs
pushf
pop
out
or
push
sbb
les
dec
lock
clc
hlt
jg
outsl
out
xor
movd
mov
mov
add
fistpl
dec
leave
leave
loopne
aaa
mov
sub
push
and
lret
aad
pop
rclb
sub
add
call
repz
or
lret
inc
or
aaa
xchg
sahf
sub
stos
jmp
pop
orl
outsb
xlat
ss
inc
stos
add
mov
std
pop
mov
xor
sbb
shll
cmp
gs
cli
lcall
fisttpll
xchg
sti
ret
cli
xor
or
xchg
push
xchg
dec
jo
out
cs
jmp
lret
mov
xor
fadds
cmpsl
mov
out
gs
xor
cwtl
adc
add
fisttpl
insl
mov
ss
rol
mov
shl
mov
push
mov
fsubp
lds
bound
fists
sbbl
add
nop
sbb
push
jbe
dec
ljmp
pop
movsl
lcall
or
cmp
mov
sub
mov
outsl
cmp
gs
call
sbb
ja
mov
and
rcll
dec
push
dec
dec
or
xchg
sbb
fucomip
xor
or
testl
jmp
pop
out
jns
push
mov
sahf
popa
pushf
fimuls
sti
icebp
cmpsl
sub
call
mov
adc
push
cmpsl
push
inc
cmp
sbb
sub
jnp
aad
xor
xchg
mov
rcll
outsb
jne
rcrb
mov
or
aas
loop
push
subb
shl
test
pop
fs
xchg
movsb
xlat
sbb
dec
jne
xchg
sub
pop
push
push
shlb
gs
jmp
shr
imul
mov
ss
jns
cmp
int
sarl
xchg
mov
daa
in
jmp
imul
addl
aaa
outsb
mov
xchg
lret
test
cmp
ret
sbb
ss
pop
pop
adc
enter
xchg
fldenv
xchg
jmp
fwait
je
mov
hlt
cmp
std
mov
cmc
scas
inc
mov
and
data16
cmp
dec
mov
dec
aam
sbb
jns
fcomi
mov
cli
scas
mov
inc
jmp
loop
les
popf
imul
fwait
push
adc
inc
stc
loope
sub
mov
adc
jl
mov
push
ret
xchg
mov
cs
cmp
scas
test
inc
pop
imul
inc
xchg
shrb
scas
sti
add
xchg
mov
js
mov
scas
add
and
xor
and
adc
popf
jmp
test
lds
icebp
adc
dec
fstps
xchg
or
iret
fiadds
pop
pop
and
addr16
mov
lcall
pop
sahf
jg
xlat
pop
pop
mov
xor
ficoms
cltd
sbb
dec
mov
fdivl
jmp
testl
idiv
xchg
movb
jno
xchg
lcall
xchg
std
fnsave
sbb
mov
jp
adc
push
jbe
mov
testb
and
mov
or
jo
ja
addr16
fnstsw
xchg
mov
mov
or
jne
xchg
pop
sahf
in
mov
pop
iret
outsb
pop
rcrl
shl
inc
loop
xchg
das
aas
mov
ret
adc
sbb
std
mov
adc
xchg
int
mov
movsl
push
pop
jne
outsb
jnp
das
and
ret
dec
std
dec
adc
leave
jge
push
xchg
iret
sti
dec
lahf
pop
mov
mov
and
test
cld
rorb
pop
aad
call
stc
sbb
pop
add
andb
mov
aaa
dec
in
test
cmp
sbb
sahf
scas
mov
mov
add
fwait
outsb
aad
add
mov
sub
je
pop
enter
outsb
test
cwtl
adc
jno
cwtl
dec
inc
fs
inc
fcmovnu
iret
dec
cmpsl
add
mov
lret
jl
inc
and
sub
jl
sub
pushf
dec
lahf
fcoms
xchg
dec
dec
jge
bound
or
ds
out
jno
in
testl
jecxz
xlat
sahf
mov
inc
and
into
arpl
fcom
mov
daa
cmp
xor
pop
jno
test
pop
iret
bound
pop
sbb
jecxz
ds
mov
push
lahf
or
fiaddl
and
insb
lret
orl
or
xor
and
jbe
movsl
push
pop
fimull
test
inc
je
mov
xor
imul
push
mov
lret
and
int
sti
enter
call
scas
xchg
insl
or
jg
jmp
ss
inc
int
jg
mov
sub
cmp
mov
ja
jecxz
rorl
pop
xor
xor
xchg
addr16
xchg
sahf
push
cmpsl
push
dec
xchg
movb
loop
lds
hlt
pop
and
add
lcall
out
mov
push
enter
inc
rorb
and
push
js
dec
scas
mov
pop
xor
lret
adc
push
cmp
pop
and
mov
lahf
inc
js
sub
clc
test
jg
inc
dec
insl
lahf
stos
lods
imul
lods
aaa
imul
or
push
add
repz
xchg
pop
cmpl
bound
stos
jg
js
jg
cli
imull
mov
sbb
xchg
sub
and
dec
inc
movsl
push
lods
xchg
jb
cld
fisubl
xchg
fcompl
ret
lea
mov
fmuls
sarl
jnp
fwait
sbb
fprem
xchg
xor
in
jne
fldenv
add
sbb
popa
pop
setno
cltd
and
mov
lret
dec
mov
loope
xlat
pop
aas
lods
imul
jbe
xorl
jnp
xor
enter
push
push
loop
lock
xor
xchg
lods
subl
fsubl
sub
inc
xor
arpl
pop
sahf
jno
mov
pop
xor
xchg
or
dec
sbb
test
lock
xchg
cmp
sub
mov
jp
in
icebp
pop
pop
adc
ret
adc
imul
lret
xchg
mov
fisubrs
fs
xlat
push
xor
xchg
sbb
sbb
mov
icebp
xchg
dec
and
xchg
jle
frstor
mov
mov
js
cmp
mov
cli
jmp
xchg
cs
mov
mov
cmp
lret
sahf
or
subb
push
push
inc
push
stos
ja
out
subl
cmpl
lods
ljmp
or
sbb
or
and
sbb
sbb
out
jo
mov
cmpsl
lea
pop
pop
jne
push
xchg
scas
out
mov
xchg
fimull
fwait
push
loope
enter
mov
into
push
mov
das
in
clc
test
lods
xchg
push
mov
stos
dec
push
xchg
pop
pop
mov
xor
xor
movnti
dec
insl
cmc
shlb
sbb
or
aad
mov
sub
ret
test
and
cmp
push
and
hlt
stos
sbb
cld
mov
aas
jbe
mov
lcall
ret
cmpsl
popl
dec
stc
das
mov
dec
imul
mov
insl
mov
xlat
rolb
push
lea
push
dec
mov
lock
mov
jns
hlt
push
jp
push
mov
add
push
dec
dec
jmp
je
pop
shlb
ja
out
sub
jb
aad
mov
mov
xor
xor
and
addr16
cmp
mov
inc
das
shll
and
je
ficompl
stc
mov
dec
xor
mov
mov
sub
sub
je
mov
loopew
in
iret
or
aaa
imul
sub
lcall
dec
xchg
sbbb
add
sub
repz
dec
sbb
inc
test
jbe
or
les
sub
pop
mov
es
adc
add
sbb
mov
jmp
mov
mov
imul
pop
loopne
movsl
dec
mov
fsts
inc
fimull
jns
or
lea
mov
imulb
sahf
in
repnz
shll
add
clc
dec
lcall
inc
inc
stos
loopne
push
and
loope
lock
sbb
and
lds
mov
jmp
inc
pop
sbb
ja
jae
and
or
je
cmp
push
int
cmpsl
pop
mov
sahf
lcall
sbb
cmp
in
cltd
and
xor
sti
adc
mov
add
jp,pn
sbb
test
mov
add
popf
mov
rol
and
scas
push
push
dec
xchg
xor
stos
jne
loop
imul
sbb
sahf
scas
mov
hlt
jle
les
xlat
mov
adc
rcrb
in
push
orb
inc
out
scas
pop
std
lahf
dec
sahf
aas
mov
lock
jae
mov
test
pop
cmp
enter
inc
jo
dec
sarl
xchg
sub
and
fwait
xchg
jnp
ljmp
add
and
cmp
adc
jmp
cmp
and
movsl
movsl
cmpb
dec
mov
push
icebp
icebp
ret
cs
frstor
es
stos
and
push
loopne
shrb
adc
rcrb
ret
push
xorb
push
mov
scas
xor
mov
iret
dec
or
andb
mov
sbb
scas
jp
mov
push
psrlq
into
fiadds
dec
dec
mov
jle
mov
mov
stos
lret
gs
push
dec
movl
sti
addr16
fadds
iret
add
and
orb
cwtl
bound
cmp
insl
cmpsb
scas
pop
dec
inc
ret
hlt
imul
cmc
xor
and
mov
inc
flds
push
sub
lods
js
cmp
leave
repnz
mov
inc
pop
fcompl
mov
cmp
add
gs
add
xchg
std
xchg
or
jno
and
or
jmp
dec
cmpsb
cmpsl
pop
imul
or
adc
scas
adc
stc
and
xlat
cmp
mov
adc
or
lds
xchg
shl
xor
stos
push
ds
in
mov
mov
push
adc
subb
adc
inc
shrl
loope
sbb
add
je
pop
scas
push
scas
jle
sbbb
sbb
scas
std
imul
pop
fwait
je
leave
lcall
sbb
aaa
or
pop
hlt
clc
mov
gs
lea
fsubrs
jo
push
daa
pop
jge
add
outsl
pop
jns
lret
pop
ja
lret
ret
mov
cmp
push
out
sbb
jne
xchg
cmc
mov
inc
xlat
and
out
or
fprem1
xchg
xchg
imul
or
inc
in
bound
sub
mov
aas
mov
adc
stos
pop
js
inc
pop
sarl
jno
int3
xorb
lds
rolb
loopne
leave
divb
pop
call
movsb
pop
sbb
push
adc
mov
and
mov
ljmp
fsubrs
jg
and
stos
sub
test
xor
int3
int
pop
sbb
mov
data16
jb
adc
push
xchg
imul
outsl
dec
popf
push
xlat
dec
mov
out
sahf
jnp
lods
inc
fwait
adc
sub
std
mov
jno
repnz
pop
add
aaa
sbb
xor
loope
xor
test
inc
xchg
dec
and
dec
nop
push
xchg
lret
into
out
insb
test
jg
in
testb
ret
int3
mov
dec
pushf
push
inc
mov
or
cs
cmc
add
repz
lock
xor
push
loop
lahf
mov
outsl
push
insb
mov
mov
sbb
outsb
xchg
sub
into
bnd
jne
mov
or
ret
or
ljmp
lods
dec
ret
test
lret
adc
gs
dec
lcall
mov
xorl
aaa
aas
lahf
dec
ret
lds
jae
pop
mov
out
push
xchg
sbb
push
pop
in
or
xor
cmp
dec
mov
fistps
add
testb
jle
mov
push
add
inc
dec
enter
adc
jb
sub
enter
daa
pop
inc
push
add
xchg
add
fsub
lock
les
daa
xchg
mov
je
cmc
add
cwtl
or
push
pop
mov
shlb
or
xchg
inc
test
lock
mov
sub
lds
inc
dec
xor
add
xchg
leave
jle
cmp
mov
mov
inc
dec
popf
pmaddwd
lock
in
sub
sahf
mov
mov
scas
adc
jl
shlb
pusha
int3
and
sbb
pop
sarl
jne
das
arpl
data16
adc
vpsraw
outsb
in
cltd
popf
fildll
in
lret
mov
dec
or
inc
test
decb
add
add
shll
or
std
sbb
nop
test
addr16
sbbb
cld
pop
ljmp
clc
mov
out
sbb
adc
ja
test
mov
xor
mov
lock
movsl
sub
sub
mov
jle
xor
cmp
clc
out
das
fcomps
ret
fidivrl
adcl
lret
dec
scas
cwtl
and
xor
push
aas
loopne
sbb
fcomps
inc
loopne
add
rol
call
dec
test
mov
std
fdiv
sbb
mov
or
mov
test
xchg
dec
inc
or
sbb
add
daa
arpl
into
iret
xor
test
jns
testb
adc
popa
movsb
lods
push
jb
or
push
mov
stos
or
mov
push
xchg
xor
pop
mov
inc
mov
xchg
add
jne
dec
lds
mov
sub
cmp
aad
aam
pop
jmp
adc
sbb
sub
push
fimull
scas
ret
test
imul
xlat
adc
call
imul
sbb
or
xorb
mov
movsb
adc
push
mov
cmpsb
xchg
sbb
lahf
dec
pop
mov
sub
lahf
jge
in
je
push
cli
nop
into
mov
repnz
sub
repnz
sbb
pop
insb
icebp
xchg
mov
push
nop
jmp
push
scas
push
into
jmp
scas
jo
gs
cmp
xchg
ss
and
push
orb
lret
les
std
aaa
cmp
cmpsl
mov
jnp
sub
xchg
fcmove
lds
push
adc
in
or
shr
pop
repz
xchg
dec
xchg
jo
adc
sub
cmpsb
aad
mov
push
add
add
or
lret
or
call
ss
scas
ljmpw
incb
cmp
pop
imul
jmp
out
aaa
bound
or
push
xor
sti
mov
cmpsl
mov
mov
sbb
inc
xor
jb
xor
lahf
mov
push
mov
push
mov
xor
shl
out
add
and
nop
mov
jbe
push
int3
add
inc
rorb
pusha
in
add
ljmp
rcrl
daa
andb
icebp
fistpll
jmp
lahf
or
out
push
push
push
sbb
mov
fld
sbb
push
pop
inc
mov
scas
andb
scas
movsb
test
in
xor
gs
mov
cltd
popf
int
pop
sbb
inc
in
fildl
ja
or
movsl
jg
or
inc
loope
pop
fwait
lods
mov
movb
fldl
ret
mov
pop
dec
rol
mov
ja
xor
ljmp
sub
dec
leave
loop
mov
insl
cs
dec
es
out
sbb
dec
cwtl
jae
and
andb
shll
sbb
sbb
or
out
movsl
outsl
or
push
sbb
js
fldcw
push
push
in
int3
je
mov
call
xor
out
aam
mov
xchg
ljmp
xor
orl
loope
lcall
sbb
orb
scas
mov
cmp
mov
les
cmp
push
andb
test
pop
xor
dec
sub
jo
or
roll
pushf
sub
std
fdiv
rclb
mov
cmp
or
test
test
or
mov
cmp
frndint
cs
subl
rorb
loope
cmpsb
jl
mov
xor
repz
ffree
jg
jno
jnp
cmpsb
loopne
repz
pop
sub
or
xor
mov
in
mov
aaa
adc
lahf
inc
sbb
push
orl
sub
lea
xchg
add
jne
lcall
cmp
pop
mov
pop
jmp
sti
lock
les
mov
pop
push
das
add
jno
scas
jns
jl
rclb
push
push
ret
push
add
mov
and
test
hlt
mov
sub
test
mov
rcl
mov
add
sub
fsubs
mov
dec
xchg
xor
mov
sub
push
pop
cmp
sub
xchg
jae
cmp
pop
xchg
xchg
dec
outsb
add
stos
daa
in
fadds
pop
adc
cwtl
mov
xchg
xor
mov
cwtl
stc
pop
push
sbbb
xor
pop
cmp
loop
ficoml
sbb
mov
ret
out
jp
subl
xor
adc
pushf
rcl
stc
adc
lock
in
movsl
xchg
xchg
imul
hlt
movsb
lods
xchg
inc
lods
or
or
push
sub
arpl
jmp
pop
pop
in
ficoml
lock
rcr
nop
add
movsb
and
aam
subl
repnz
pop
or
shr
xchg
mov
add
sti
xor
xchg
hlt
xchg
inc
xchg
lret
jge
jge
mov
movsb
sub
and
js
hlt
mov
aas
or
and
add
testb
test
inc
cli
test
push
dec
pop
jb
stos
xchg
and
sbb
xor
add
fldenv
mov
fstpl
notb
fisubrs
sbbb
insb
inc
jg
outsl
sti
mov
push
aas
jecxz
testb
xchg
stos
lahf
xchg
shll
push
adc
inc
addl
adc
call
mov
jge
js
mov
cmpsb
ljmp
xchg
in
test
nop
lods
pop
mov
loope
jbe
cmpsb
iret
pop
sahf
push
push
and
jbe
cmp
push
inc
lock
std
mov
adc
mov
arpl
adc
and
jne
test
dec
push
pusha
mov
inc
mov
jmp
loope
loopne
mov
dec
sarl
dec
bound
sub
movsl
cmp
mov
push
or
inc
inc
pop
pop
sub
pop
xor
push
jns
jns
cmp
xchg
lahf
dec
movsb
fmull
mov
add
fs
orb
push
int3
test
outsb
push
dec
shll
repz
std
mov
test
rcrl
pop
lahf
sahf
mov
xchg
repz
ja
inc
arpl
sub
adcl
jge
aas
mul
fidivrl
pop
adc
push
mov
jns
out
dec
cltd
std
mov
mov
inc
push
test
fs
js
push
roll
or
out
insl
dec
xor
fadds
push
xor
scas
and
pop
sahf
test
jae
dec
aaa
das
jnp
xchg
inc
mov
lahf
imul
int
sahf
aam
inc
mov
call
movb
xchg
fs
sti
lds
push
adc
and
cmp
xor
sbb
xor
jg
inc
xor
pop
lret
push
aaa
inc
sbb
cmp
push
cmp
mov
xchg
mov
pop
data16
rolb
into
pop
loopne
test
jp
mov
pop
adc
jnp
rolb
mov
sub
sbb
popa
jnp
aad
popf
add
adcb
movntps
in
jae
add
shl
pop
insb
inc
inc
add
sub
icebp
sub
dec
lods
fistps
lcall
int
xchg
imul
mov
sbb
push
push
push
jno
ret
into
test
movsl
xlat
call
jecxz
je
pop
xlat
gs
push
jg
or
pusha
jmp
mov
imul
sub
xchg
mov
jne
adc
and
lahf
in
sbb
dec
shl
or
push
sbb
outsl
jg
jbe
pop
jecxz
daa
sub
outsl
dec
add
sub
inc
mov
int
sub
std
and
js
test
mov
push
cmp
ret
stos
and
test
xor
ret
push
adc
jle
pop
fstpt
ret
mov
push
xchg
sub
cmp
jecxz
sub
mov
xchg
imul
cmp
and
sbb
add
or
jae
mov
outsb
xchg
xlat
or
mov
jmp
aam
pushf
test
xlat
cmpsl
fucomp
dec
xchg
fs
adc
andl
les
cmpl
xchg
fidivl
push
fldt
popa
out
xlat
adc
push
aad
cmpsb
pop
jb
xchg
xchg
insb
or
lds
sub
cmp
or
call
hlt
mov
lea
push
sub
fs
lea
pop
inc
dec
sbb
jle
fistl
adcb
fwait
and
dec
scas
xlat
test
push
mov
lods
out
cmpsb
sub
xor
inc
ja
loopne
fldenv
in
dec
dec
pushf
in
fsubr
iret
shl
xor
sti
movsb
xor
std
xchg
push
ljmp
out
jae
sahf
push
in
xor
mov
pop
or
mov
jge
in
icebp
inc
icebp
out
jge
mov
pushf
mov
mov
sub
sub
test
bnd
shll
popf
call
mov
dec
jmp
xlat
into
inc
out
adc
and
testl
arpl
xchg
jmp
scas
xchg
push
pop
mov
js
xor
sbb
jno
dec
fstpl
lcall
xor
dec
stos
aaa
xchg
lods
add
imul
test
sub
pusha
jae
adc
adc
das
or
fimuls
adc
stos
aam
adc
jmp
int3
mov
push
add
rolb
xchg
inc
fisttpl
push
mov
data16
mov
cmp
inc
mov
ljmp
jge
cmp
sbb
lods
decb
mov
shl
ja
sar
mov
aaa
lods
dec
xor
scas
bound
and
sbb
ja
mov
and
stos
repz
testl
sbb
dec
bsr
mov
cmp
decb
cmp
mov
in
xchg
imul
cmp
adc
sub
pop
lcall
mov
mov
mov
test
adc
clc
stos
or
arpl
js
dec
mov
cmc
jo
and
aad
cmp
push
and
iret
dec
insl
enter
and
pop
daa
in
enter
in
mov
int
mov
fidivrs
lods
or
inc
aaa
in
arpl
std
loop
xor
fisubs
cmpl
sbb
cmp
add
dec
mov
adc
push
aaa
mov
xor
fwait
pusha
dec
js
lea
jbe
sub
fdivl
jle
frstor
push
mov
jge
mov
and
int
popa
sahf
andl
scas
lret
pop
ror
or
jl
psubsw
xchg
addr16
sbb
hlt
int
lahf
jnp
jmp
into
flds
pop
sahf
cltd
jnp,pn
cmp
cmp
push
mov
lcall
mov
adc
and
jno
mov
std
inc
adc
sbb
stos
push
insb
ds
hlt
jg
adc
nop
mov
mov
xchg
mov
adc
sub
jne,pt
mov
test
ja
sti
dec
lret
lahf
pop
push
dec
jnp
iret
mov
mov
pop
mov
hlt
ljmp
imul
loopne
int
xlat
cltd
cwtl
dec
push
rol
out
sbb
mov
push
inc
and
xchg
adc
lret
add
mov
repnz
pop
mov
in
push
cmpsb
and
add
incl
inc
mov
loop
inc
xor
jmp
fcompl
push
insb
ffreep
sbb
add
mov
pop
icebp
xchg
je
mov
jno
fdivrp
jmp
dec
fidivl
pop
pop
sarl
xor
imul
jne
pop
and
addl
adc
xor
sbb
movsl
lods
dec
mov
stc
add
or
sbbb
mov
xor
push
leave
idivl
inc
sbb
loopne
lods
lahf
push
fwait
sub
int3
sbb
shll
ret
notl
ja
sbb
aam
ret
aad
int
jbe
out
daa
push
dec
das
pop
mov
mov
mov
xor
pop
sbb
nop
shrl
cmc
das
pop
add
mov
dec
je
div
pop
or
push
xchg
sub
rcrl
push
or
adcb
dec
sub
out
inc
adc
jmp
sub
or
mov
jg
mov
or
gs
pop
cmp
xor
cmp
fcomi
mov
fsub
add
lock
leave
pop
call
jl
fisubs
sbb
pop
outsb
out
pop
ror
orl
mov
popf
jnp
or
pop
sub
fsubrp
pushf
dec
sbb
arpl
ret
xchg
mov
les
cwtl
xchg
push
pop
repnz
sbb
fstl
call
out
ror
mov
lahf
fdivp
jnp
ja
push
cli
add
test
mov
or
in
mov
test
and
mov
xor
ss
loope
lret
in
scas
icebp
inc
hlt
mov
sbb
dec
inc
cmp
and
dec
cmp
xchg
fisttps
shl
outsb
cli
dec
xchg
sub
lds
xchg
test
xor
cmc
adc
sbb
push
mov
rcl
xchg
lcall
repnz
sbb
and
or
xchg
fstpl
lock
pushf
mov
inc
repz
sbbl
scas
inc
jno
jns
dec
adc
lods
orl
stos
or
dec
xor
jne
mov
outsb
inc
add
insb
adc
and
out
pop
test
inc
push
and
and
jg
adcb
es
sahf
push
shl
or
push
loope
mov
pop
std
enter
filds
jae
gs
mov
push
ljmp
pop
mov
adc
lds
xchg
pop
xor
mov
ret
insl
in
xchg
xchg
sub
test
nop
add
lods
sub
stc
push
std
adcb
jb
inc
sbb
adc
scas
inc
and
icebp
xor
xchg
push
xchg
adc
test
push
loop
cmpsb
popf
add
sbb
addr16
jo
mov
xchg
xlat
test
add
mov
mov
mov
xchg
dec
repz
sarl
in
pop
fbstp
int
aaa
adc
mov
shrl
mov
fsubr
cmpsl
rcrl
fsubs
aaa
es
mov
out
call
xor
push
mov
stos
test
hlt
sub
loopne
adcl
add
outsl
ljmp
rep
rorl
dec
push
mov
inc
or
lret
imul
es
pop
cmp
push
xchg
and
mov
lcall
shlb
mov
movsl
add
stc
inc
push
fs
mov
leave
push
nop
lea
sbb
notb
fwait
mov
xchg
xor
lea
push
popa
repz
or
mov
pop
inc
jmp
out
jbe
jns
fwait
mov
js
ds
ret
xchg
inc
pop
fsubl
lods
mov
mov
xchg
or
out
dec
xor
nop
lods
and
jne
push
imul
sbb
jg
mov
fadd
into
xor
inc
push
pop
insl
pop
imulb
jle
cltd
test
mov
jle
jne
out
sahf
inc
into
arpl
sbb
popf
mov
fimuls
filds
jmp
add
push
pop
pop
lcall
fimull
mov
mov
out
sub
jp
cmpsl
cmp
push
call
mov
dec
mov
stos
push
hlt
addl
test
add
in
fcmovb
pop
dec
push
inc
jmp
jns
xchg
rcl
aam
ss
in
test
test
ja
jns
sbb
jne
mov
fnstsw
aad
mov
and
mov
xchg
inc
pop
xor
adc
cmp
ret
dec
aam
outsb
in
cli
and
lods
pop
iret
push
vpminub
fisubrl
mov
push
pop
hlt
lret
xchg
inc
dec
ja
dec
loop
sbb
pop
mov
mov
mov
inc
test
out
mov
inc
fs
shlb
test
jne
test
fcoml
jmp
test
xchg
imul
xchg
xchg
lret
sbb
repz
dec
xchg
cmc
js
cli
ja
mov
jecxz
hlt
sbb
not
or
gs
fs
jp
ret
sbbl
lock
mov
js
outsl
pop
in
aaa
aam
stos
mov
aaa
and
sbb
pop
mov
aam
inc
push
jbe
je
mov
fmul
or
test
jae
cltd
pop
sahf
movsl
mov
pop
jmp
add
jnp
mov
push
loopne
fstp
andl
push
mov
push
jmp
subb
and
dec
cmpsl
sub
dec
ret
sarb
xor
push
adcb
cli
fs
jno
stc
aad
imul
and
aas
and
loopne
xchg
sub
mov
fiaddl
inc
xchg
nop
pop
jae
jbe
push
fld
push
data16
jle
repnz
sahf
enter
in
sub
mov
andb
mov
sub
leave
sti
repnz
jge
adc
aaa
clc
jae
jg
jecxz
add
mov
xlat
adcb
dec
xchg
jae
dec
scas
jle
cmp
outsl
je
fcomps
popf
or
inc
sub
es
fsubrp
push
or
dec
jno
in
leave
data16
push
in
mov
outsb
sub
test
sahf
ret
cs
jno
and
aam
xorl
mov
daa
adc
mov
cmp
shlb
movsl
xchg
mov
fsubs
lods
lods
int3
fs
lods
add
pop
ffreep
outsl
and
mov
and
pop
and
fs
inc
dec
lea
mov
rorl
popf
lods
nop
mov
enter
shrl
and
mov
cmp
ret
xor
loopne
fs
or
in
sub
jg
or
jae
mov
insb
and
leave
aam
push
in
jg
packssdw
lock
jl
in
sar
jecxz
adc
cli
add
leave
cmpsl
nop
xchg
cltd
dec
out
dec
pushw
mov
aam
out
inc
sti
int3
mov
jno
out
test
fisttps
add
dec
into
clc
push
push
or
fisubrs
mov
xchg
push
cwtl
shl
outsl
sbb
push
xor
cmp
cmp
adc
push
add
mov
xchg
sbb
push
push
sub
dec
sbb
and
cmp
cltd
pop
push
iret
xchg
adc
adc
and
ljmp
xchg
shr
sbb
xchg
push
test
mov
cmp
scas
cmp
cwtl
lods
cltd
test
cld
ret
adc
push
mov
or
into
rolb
sbb
popf
dec
fisubrs
cmp
faddp
pminub
in
mov
xor
mov
test
repz
sti
sub
rolb
cmp
inc
in
in
and
popf
ret
roll
push
pushf
sti
xor
lock
inc
cmp
ds
jnp
call
repz
popf
sbb
or
ficomps
rclb
mov
shr
mov
jmp
pushf
mov
sahf
sbb
in
into
push
pop
and
out
push
pop
push
lea
cmpsl
mov
jp
jbe
push
mov
std
sti
jno
cld
gs
mov
pop
sbb
fstl
fwait
cmp
inc
and
dec
stos
test
jnp
cmc
add
ficomps
aam
sub
in
or
scas
xchg
inc
mulb
add
mov
mov
cmp
sbb
gs
pop
dec
sarl
or
mov
ljmp
add
test
icebp
popl
inc
push
xor
in
cmpsl
cmp
xchg
popl
push
cmp
pop
insl
mov
mov
mov
push
adc
repnz
mov
dec
aas
movsl
cmpsl
mov
and
mov
ljmp
cltd
lock
loop
mov
movsb
add
jbe
je
mov
push
jg
lods
insb
test
lods
mov
sahf
dec
and
push
dec
pushf
insl
jno
in
inc
mov
xchg
shl
or
pop
clc
dec
mov
scas
lock
and
pop
loopne
js
out
and
cmp
decb
mulb
cwtl
inc
stos
xor
imul
sbb
xor
jmp
push
pop
push
lods
add
repnz
adc
nop
sti
imul
mov
clc
sbb
add
bound
jo
out
jo
lret
bound
push
mov
data16
in
sub
es
mov
out
push
jnp
ret
lds
enter
pop
clc
pushf
lock
out
into
mov
into
rcll
dec
lret
inc
xor
movsb
lods
xlat
loope
dec
leave
ficoml
mov
lcall
dec
mov
fildll
cmp
lods
shrl
pusha
push
add
jmp
adc
and
aas
pusha
mov
mov
aaa
imul
pop
mov
movsl
mov
sbb
lcall
xchg
push
fsubr
gs
and
sbb
iret
ds
jp
pusha
stos
mov
mov
cmp
scas
cmpsl
xchg
pop
flds
add
sbb
bound
shl
inc
ljmp
jmp
dec
mov
gs
sbb
inc
jg
js
hlt
and
push
and
scas
xchg
mov
fst
mov
stc
ss
jbe
and
imul
repnz
adc
cmp
mov
stos
stos
movsl
push
xchg
or
lea
mov
stos
mov
xchg
fdivs
lcall
call
outsl
les
or
sub
xchg
nop
aad
xchg
or
je
pop
sub
loop
das
hlt
or
int3
pop
insl
into
xchg
xchg
xchg
loope
fdivrl
fs
dec
sbb
cld
dec
imul
sub
movsb
fisttps
xor
mov
sub
push
jnp
in
pop
and
testb
je
test
adc
shl
fildll
jg
stos
pop
ds
sbb
xchg
push
cmpsl
shl
popf
jmp
cmp
leave
aaa
rclb
add
push
pusha
and
xor
sbb
icebp
cli
dec
sub
daa
loop
outsl
sub
pop
cmc
sub
jne
mov
xchg
andb
or
push
test
push
dec
dec
mov
arpl
sbb
sbb
lret
sbb
orb
mov
cltd
out
imul
pop
or
dec
mov
fstpt
cli
test
addb
loop
push
mov
add
mov
cmp
push
and
mov
mov
jmp
mov
push
loopne
xchg
push
jp
loop
cmp
mov
xchg
pop
shlb
lahf
popf
pop
sub
loope
scas
jns
ss
jg
ret
adc
fdivs
iret
fistps
stos
jecxz
dec
inc
jmp
mov
adc
jmp
pop
sbb
push
repz
rep
into
imul
outsl
inc
fs
cltd
cmpsb
aam
push
loopne
or
popf
xor
ds
pop
xor
je
lods
insb
fwait
or
add
lea
pop
into
sbb
cmc
sbb
jae
xor
pop
cmpsl
add
into
fistpll
dec
inc
xchg
jle
add
adc
xorl
ret
and
data16
adc
out
push
outsl
sub
cli
std
in
insl
aam
mov
mov
dec
subl
lcall
jecxz
mov
inc
inc
outsb
jnp
pop
lret
mov
clc
cli
adc
inc
imul
in
xchg
into
inc
lcall
testb
pushf
sbb
sahf
jae
and
or
andl
mov
mov
dec
cwtl
aad
cli
pushf
iret
xchg
push
jge
xlat
adc
orl
das
ja
pusha
xchg
fidivrs
js
fidivrs
adc
push
daa
jbe
lods
insl
mov
adc
incl
or
les
hlt
mov
aas
jl
inc
in
jge
mov
fadds
xor
add
aaa
adc
inc
pop
or
scas
fcmovnu
fsubrl
stos
pop
test
sbb
jns
movsb
aad
out
pop
pop
jmp
clc
sahf
jmp
add
mov
jb
popa
test
scas
jns
sbb
hlt
je
xlat
and
test
and
dec
mov
push
in
das
xchg
cmc
dec
sub
xlat
bnd
mov
cs
insl
and
lahf
je
xchg
inc
and
decb
adc
aam
push
mov
sbb
lret
setns
faddp
leave
movsl
fldenv
and
icebp
lret
add
inc
xorb
ds
sbb
iret
fdivr
jg
in
ljmp
sub
sbb
sbb
orb
shr
push
clc
icebp
mov
dec
pop
dec
inc
sub
pop
mov
mov
outsb
inc
fistps
out
mov
jns
mov
xor
and
lods
xchg
je
push
or
mov
scas
cmpl
shlb
clc
push
daa
ljmp
rcr
lods
lret
sub
in
cmp
or
dec
out
fiaddl
rcrl
pop
call
fwait
inc
mov
outsl
sarl
or
aaa
aad
shrb
jne
mov
and
jnp
xchg
shl
mov
dec
xchg
cltd
xor
cmp
fstps
push
push
adc
mov
xor
rcrb
pop
popf
push
aaa
push
and
mov
mov
mov
jbe
movsl
in
std
xchg
ljmp
fstps
lods
push
pusha
push
cmovo
outsl
jle
popf
addr16
pushf
mov
mov
or
outsb
or
clc
aaa
mov
jp
mov
xor
pop
in
pop
fdivs
xchg
xchg
mov
xchg
mov
ficomps
daa
movsl
popa
in
adc
mov
movsl
inc
add
stos
pushf
int3
lahf
mov
mov
filds
leave
push
pop
adc
rcrl
pop
sub
or
xchg
cmp
push
arpl
int
sahf
jae
cltd
fnstcw
dec
fs
in
int3
adc
jecxz
push
jnp
iret
pop
ds
sub
loopne
push
mov
dec
push
in
jno
mov
cltd
jl
and
jge
xor
stos
dec
scas
dec
add
mov
and
movsl
push
daa
jns
sbb
ret
push
icebp
cmc
clc
js
insb
sbb
out
pop
xor
pop
xor
out
ret
mov
xchg
pop
jmp
adc
mov
in
dec
test
cmp
lods
pop
jecxz
std
outsb
mov
int
mov
test
sub
add
adc
push
mov
add
subb
iret
sti
jmp
loop
scas
push
or
mov
jno
mov
lock
mov
ret
and
jge
inc
xorb
jbe
test
mov
mov
push
push
cmp
aaa
imul
mov
test
mov
pop
cmp
lahf
adc
test
enter
aaa
es
mov
cmpsb
imul
icebp
scas
mov
ret
inc
mov
and
aaa
xor
push
subl
xchg
and
adc
xor
stc
scas
sbb
shrb
hlt
dec
pusha
inc
xlat
mov
pop
add
cld
cli
addr16
lea
stos
add
pop
dec
cmc
xor
mov
addr16
imul
sub
test
sbb
xchg
mov
jecxz
pop
fadd
mov
adc
loopne
mov
pop
mov
icebp
cmp
dec
scas
and
pop
adc
jo
mov
pop
dec
je
lret
add
mov
pop
lock
ret
shlb
rcrl
mov
lds
or
xlat
lret
jg
sahf
aad
mov
xchg
repz
push
movsb
stc
xchg
mov
movb
or
xor
addb
sub
mov
mov
lds
or
das
outsb
inc
jle
fcomps
sbb
cmc
js
xchg
in
sti
sub
push
int
inc
sbb
cmp
in
aaa
fwait
shlb
out
roll
xchg
arpl
jo
les
test
sbb
sub
cmp
adc
test
xchg
test
ja
shlb
and
fcoms
mov
je
pop
call
out
in
jl
mov
dec
push
push
add
scas
daa
insl
or
inc
stc
pop
xchg
and
insl
adc
fildll
lahf
mov
fiaddl
inc
out
out
push
std
xchg
push
cmp
clc
sub
shrl
enter
fwait
mov
sbb
and
inc
inc
mov
sub
fdivrs
fisubl
test
pop
mov
outsl
sub
insl
or
mov
fsubr
gs
pop
jb
scas
pushf
addr16
std
fs
cwtl
icebp
push
out
popf
mov
pop
repz
lds
lods
outsl
cmp
mov
loop
sti
call
jns
sbb
ret
cmp
or
divb
clc
lcall
mov
cmpsb
push
movsl
inc
repz
paddd
mov
addr16
mov
out
loop
adc
aas
xchg
cmpsl
int3
jbe
push
pop
repnz
and
pop
enter
mov
jg
rcr
rclb
in
mov
testb
lods
mov
push
or
mov
test
je
ret
cmpsl
or
xchg
hlt
inc
xchg
aam
mov
mov
lods
push
imul
cwtl
lret
call
xchg
lcall
push
adc
add
in
jne
scas
jle
xlat
out
out
push
push
lahf
adc
out
mov
lea
lock
mov
test
jmp
cmp
scas
int
rcl
push
push
jge
xlat
fstp
mov
xor
sbb
lods
aad
sbb
test
sbb
movsl
fdivrs
push
jbe
or
mov
int3
stc
adc
clc
or
mov
inc
fnstcw
sbb
jno
test
idivl
andl
insb
cmpsl
inc
aaa
sbb
push
pop
popa
xor
pop
pop
popf
vcvtps2pd
popf
jbe
icebp
loope
add
rclb
lods
pop
popf
push
in
lret
or
mov
out
sbb
scas
push
pop
mov
test
sbb
je
stc
dec
out
out
arpl
mov
ljmp
cmpl
xor
test
push
movsb
push
adc
call
sahf
and
jl
in
notl
mov
pop
inc
dec
loop
pop
std
cmp
mov
clc
shll
mov
push
mov
inc
loope
test
adc
jae
or
lret
bound
mov
test
adc
sbb
insb
adc
mov
mov
mov
mov
sbb
adc
xor
mov
jl
mov
xor
or
add
lds
and
lods
fwait
aam
mov
sub
in
or
fimuls
enter
outsl
popf
les
call
sbb
push
push
cmp
sahf
outsb
ret
test
pop
js
fidivrs
in
orb
je
inc
out
into
negl
mov
es
fwait
ret
fiadds
sarb
lea
cmp
cmp
xor
cmp
pusha
mov
add
enter
repnz
insb
mov
pop
sbb
inc
stos
pop
in
xlat
sub
xchg
outsl
imul
test
push
xchg
scas
and
enter
sub
pop
ret
push
jecxz
inc
mov
fmulp
jbe
ret
or
pushf
cld
and
mov
xor
cmp
jl
push
lods
pop
mov
int3
lret
dec
mov
mov
loope
jne
mov
and
loope
xor
mov
mov
imul
xor
jecxz
rol
imul
sub
test
or
jg
ljmp
adc
jnp
fcomps
popf
retw
mov
out
or
imull
mov
push
lock
mov
jmp
mov
int3
dec
ss
dec
out
mov
mov
bound
clc
int
adc
dec
lock
lock
ja
xchg
cld
and
xor
mov
push
dec
mov
mov
inc
scas
daa
dec
mov
outsl
mov
or
push
pop
lea
lds
dec
or
aaa
add
mov
jae
ret
sarb
imul
or
ficompl
loop
mov
xchg
and
dec
mov
push
xor
aas
es
sub
adc
loop
loopne
aas
fisttps
mov
and
jnp
fistpll
movsb
lea
test
and
es
inc
lret
aam
lods
call
cmp
mov
xorb
testl
mov
inc
sub
or
loop
jno
arpl
pop
incb
mov
loope
or
ja
mov
adc
addr16
xor
call
sub
cmpsb
inc
push
xchg
jge
test
sub
repnz
add
pop
int
jecxz
adc
rcr
fwait
jbe
cwtl
or
cmpsl
pop
stos
fsubrs
imul
int
and
in
adcl
lahf
xchg
sahf
jecxz
cmc
clc
push
out
mov
dec
sbb
pushf
lods
arpl
dec
push
icebp
fnsave
sbb
movsb
dec
faddl
lea
sahf
fistps
into
loopne
jns,pt
mov
push
push
insb
jo
mov
sbb
mov
dec
cmpsl
je
dec
lret
dec
mov
outsb
idivb
imull
fisubl
test
fimuls
imul
and
dec
pusha
push
mov
add
jge
loopne
fimull
fiaddl
pop
push
rorb
lods
pop
pop
mov
std
pop
push
adc
lcall
insb
push
sub
push
add
pop
jg
lods
out
or
fisttps
mov
add
xor
lcall
and
jmp
fcmovbe
add
ds
mov
xchg
test
and
dec
adc
std
inc
sbb
adc
out
jge
jnp
jno
dec
mov
pop
push
mov
cmc
dec
dec
ds
mov
push
rol
fildl
or
mov
das
lahf
sti
push
lret
or
shrl
mov
add
fimuls
push
pop
mov
dec
jne
xor
push
hlt
jmp
or
lret
adc
idivl
mov
pop
sub
xor
jbe
repz
call
add
popa
dec
cltd
popa
inc
lods
popw
leave
xchg
mov
mov
fwait
xor
fidivrl
out
movsw
and
dec
jo
rorl
pop
pusha
sbb
movsl
and
dec
sbb
lcall
xor
movsb
or
rol
lcall
inc
push
xlat
leave
or
push
out
icebp
insl
pop
jmp
imul
sub
mov
push
dec
mov
sbb
outsl
es
aad
dec
daa
icebp
inc
sub
inc
lods
in
xlat
push
lret
ljmp
push
pop
cli
sarl
cmp
rcll
mov
pop
fisubl
xor
insl
cmpsl
sub
dec
bound
mov
cmp
xchg
imul
outsb
stc
lods
dec
jg
add
push
jb
repnz
pop
xor
addr16
sti
mov
shlb
xlat
jmp
ftst
fst
popa
and
jp
scas
dec
dec
xchg
xchg
xorb
sbb
mov
cmp
mov
lret
adc
scas
aad
sarb
frstor
orb
shr
jl
test
cmpsb
pop
sub
adc
jo
sahf
mov
cmp
sub
sti
inc
jg
out
jae
lret
dec
ja
int
xor
xor
inc
mov
xor
test
inc
mov
lahf
ja
sub
insb
loope
add
loope
mov
xchg
xor
stc
adc
adc
dec
mov
clc
dec
dec
daa
and
xchg
inc
mov
push
cmp
push
fstp
fwait
hlt
jno
inc
jp
sbb
subb
out
jae
push
mov
and
cmp
mov
or
fwait
mov
fs
cmp
sti
outsb
add
test
test
mov
rcll
fimull
repnz
mov
dec
daa
scas
out
out
push
mov
mov
imul
pop
lock
xor
iret
addb
jl
or
fadds
push
jno
sub
dec
or
or
jl
add
rcll
jo
pop
iret
into
aas
fidivrl
pop
mov
xor
push
mov
jne
loopne
cli
sub
sar
or
push
in
jae
and
push
movsl
gs
jg
xor
fsubl
mov
test
roll
insl
leave
jne
push
sbb
xchg
sub
aam
and
mov
adc
and
xor
testl
orb
cltd
dec
sar
cwtl
mov
mov
jecxz
fstps
and
xor
mov
jp
adc
inc
outsb
mov
jg
das
adc
mov
stos
insb
adc
pop
cmpl
pop
mov
fistpll
lods
inc
and
scas
ret
jle
cmp
mov
sbb
jb
sahf
xor
enter
cmp
mov
cmp
das
mov
push
in
insl
push
mov
cld
push
fdivs
mov
cmpsb
add
daa
into
xor
scas
push
outsb
in
and
dec
push
mov
add
cltd
fldl
lock
add
cmp
add
mov
repz
fstpt
pop
inc
sub
adc
lock
test
inc
adc
xchg
ljmp
dec
aas
fisttpl
inc
mov
add
or
shll
add
inc
clc
sbb
xor
add
add
loop
mov
popf
mov
sbb
add
test
xchg
xor
xchg
xor
jg
add
sub
ja
or
mov
std
sub
mov
icebp
mov
or
aam
stos
test
jne
push
cwtl
es
or
aad
cmp
mov
insb
aam
insb
add
in
pop
xor
xor
cmp
imul
mov
ds
cmp
sbbl
push
bound
sub
mov
cmp
sbb
icebp
xchg
loope
idiv
jb
pop
mov
shll
cltd
mov
sub
outsb
sub
idiv
mov
out
push
xchg
mov
and
fisubl
dec
gs
dec
sti
cltd
les
in
sub
aaa
jle
mov
ret
mov
dec
mov
adc
add
mov
inc
jge
mov
mov
pusha
pop
mov
push
cmp
mov
or
sbb
push
call
push
inc
and
sub
popa
xchg
xchg
xor
repnz
jp
mov
jne
cmp
xor
pop
jne
outsl
les
and
mov
inc
mov
jmp
je
out
flds
fiaddl
xor
or
fmul
or
sub
insl
mov
jl
fcmovu
sbb
out
es
out
xlat
xor
loope
filds
pop
fisttpll
push
add
sbb
movsl
push
add
ret
pop
mov
mov
sub
inc
push
dec
inc
out
mov
push
sti
adc
jle
sbb
sub
call
mov
jle
cmc
sbb
add
test
subb
cmovnp
cmp
arpl
pop
push
mov
pushf
fwait
xchg
leave
xchg
pop
inc
sbbl
scas
sub
xchg
or
repz
xor
sbb
outsl
icebp
mov
xor
lret
mov
cld
mov
sub
add
shlb
lods
add
rcrb
adc
jo
fucomi
lcall
xchg
mov
inc
neg
push
or
mov
in
add
xchg
xlat
inc
or
fs
clc
fwait
popa
cmp
pop
test
pop
sbb
add
dec
stos
test
insl
clc
lret
sbb
jno
jle
clc
in
ljmp
lcall
call
mov
inc
jb
imul
jg
imul
lea
sub
iret
cwtl
xchg
js
and
and
pop
pop
xor
rolb
ret
inc
dec
clc
or
into
dec
out
test
je
mov
mov
aaa
lds
push
shrb
icebp
lahf
jae
dec
jp
outsb
adc
pop
jecxz
mov
cwtl
mov
out
into
cltd
test
and
add
push
xchg
mov
addr16
fisubrl
dec
js
push
cwtl
mov
push
in
dec
xor
leave
into
sbb
cld
jecxz
sti
mov
iret
outsw
jae
and
shll
sahf
mov
jns
ljmp
arpl
push
xor
push
push
addr16
jae
inc
sub
push
lcall
loopne
aam
jb
out
jo
xor
dec
rcll
outsb
mov
inc
arpl
mov
push
pop
inc
jnp
adc
and
pushf
jge
mov
loop
push
sub
cmpsl
pop
mov
les
repz
dec
jns
clc
lcall
loopne
lcall
pop
jo
mov
pop
leave
stc
push
push
pop
mov
add
dec
inc
jno
call
jmp
shll
sub
sub
cli
jp
xchg
movsb
mov
pop
test
test
jnp
jns
pop
sar
insl
dec
cmp
popa
dec
cltd
mov
xor
push
pop
add
stos
insl
dec
sbb
cmp
pushf
inc
shl
pusha
dec
daa
lret
rcrl
popa
cmpsb
inc
jo
mov
loope
rolb
aam
movsl
cmc
adc
jbe
movsb
pop
lahf
fldcw
sahf
movsb
jns
jbe
out
ficompl
notl
aad
push
cmp
push
test
mov
data16
popf
cmpsl
jns
outsb
sbb
movsb
mov
cmc
scas
mov
lret
xchg
aaa
fiaddl
and
das
xchg
inc
mov
insb
adc
push
xchg
mov
push
lret
test
movsb
mov
push
stc
or
loop
xor
decl
mov
dec
nop
mov
cmp
jns
xchg
scas
mov
icebp
sbb
cltd
test
sub
fldpi
xchg
pop
ffreep
ds
fsubs
in
iret
fmull
leave
push
or
rep
sbb
or
inc
in
sub
xchg
xor
filds
mov
aaa
test
jecxz
sbb
incb
leave
add
sub
push
jo,pn
imulb
cld
in
and
adc
cld
clc
fmul
mov
push
insl
je
movsb
pop
out
ljmp
pop
test
or
and
sub
int3
cmc
xchg
cmp
add
popf
sbb
pop
aas
addb
inc
cwtl
fwait
cltd
add
fldl
movsw
sbb
xorb
xor
xor
cmp
lods
inc
stos
cltd
subb
loope
mov
stos
xchg
xchg
mov
push
dec
popa
xchg
loope
hlt
pushf
xchg
xor
mov
test
adc
pop
rorl
push
jb
mov
lds
aaa
lahf
cld
sub
cmp
mov
mov
imul
mov
popa
mov
popa
mov
ds
hlt
shr
testl
sub
dec
outsl
fscale
push
movsl
mov
add
int
adc
lock
rorl
jmp
mov
bound
nop
fcoms
mov
cmp
push
adc
xchg
jns
andl
pop
jp
pop
dec
test
hlt
arpl
mov
pusha
stc
dec
testb
xchg
imul
imul
jbe
cmpsl
popf
mov
inc
out
mov
repnz
mov
jg
mov
and
jno
xchg
xchg
mov
lcall
faddp
mov
jb
jecxz
data16
mov
out
cmpsb
int
rol
dec
xor
in
pop
inc
mov
inc
cmp
xor
cs
mov
negl
lcall
je
xchg
cmc
add
push
jo
sub
int
js
daa
cmp
cli
addr16
cmpsb
xor
mov
xchg
out
inc
pushl
call
clc
cwtl
jl
mov
test
call
cmp
xlat
loopne
mov
mov
ficomps
out
sbb
jecxz
add
jle
xlat
cmp
pop
push
cmp
outsl
hlt
arpl
mov
fistpll
jge
in
jo
mov
stc
push
push
aaa
sub
cmp
lcall
push
flds
adc
pop
les
lods
hlt
sub
push
inc
jbe
pop
int3
out
xor
mov
repnz
imul
push
leave
cmp
sarb
scas
cmp
adc
imul
repnz
pop
scas
sub
jg
rcrb
xchg
jmp
dec
mov
jno
inc
rcrl
jge
sbb
jnp
jl
fdivrl
sub
adc
scas
nop
xchg
lcall
stos
adc
mov
mov
dec
xor
xor
iret
cwtl
pushl
ret
stos
or
xchg
fs
stc
and
push
mov
test
lods
les
mov
clc
mov
xor
mov
aas
aam
push
in
inc
enter
daa
sbb
negb
jns
fsub
cltd
sbb
sahf
enter
jecxz
push
inc
xchg
cld
movsl
fwait
mov
jp
fldenv
fisubrl
cs
test
popa
es
add
cmp
in
std
sub
lahf
add
sbb
fdivl
fbld
mov
pusha
test
outsb
inc
insl
in
xchg
pop
lea
mov
cs
adcb
adc
push
fsubrs
out
push
jl
scas
in
divb
rclb
imull
mov
sbb
movsb
aad
notl
pop
cltd
cmp
jg
or
dec
mov
cmp
sub
rclb
mov
adc
ja
sbb
mov
add
fimull
fnsave
jle
jae
scas
arpl
in
sarl
xchg
in
enter
dec
mov
inc
icebp
test
push
test
stos
dec
enter
ljmp
jns
cmpsl
jg
xor
cmpsb
mov
push
aaa
jne
fnstenv
pop
sub
dec
fldcw
mov
test
incl
jl
ljmp
adc
inc
dec
pop
callw
mov
mov
mov
cli
loopne
es
add
sbb
imul
dec
lds
xor
xchg
jbe
sbb
jg
jg
cltd
or
adc
sbb
imul
mov
xor
sbb
movq
je
sbb
aaa
cs
dec
int3
sbb
xor
pop
lahf
xchg
and
cs
in
or
aas
sbb
jl,pn
stos
repz
fdivl
jbe
jle
inc
mov
mov
adc
fiaddl
jae
mov
test
je
cmp
xchg
push
and
lahf
xor
mov
cmpsb
jae
repz
lret
lds
jmp
fwait
test
cmp
xor
xchg
mov
outsb
cld
or
test
jae
fbld
mov
and
push
xchg
jl
cwtl
dec
jmp
sub
loop
pop
inc
xchg
mov
xchg
leave
dec
ljmp
adc
and
fmulp
cmc
movsl
imul
ds
xor
xchg
or
xor
sub
leave
pop
inc
es
inc
jb
xor
fnsave
pop
call
sbb
ret
out
leave
sub
lods
add
push
fistps
push
lahf
test
push
pop
push
insb
testb
sbb
sbb
push
lcall
jg
mov
mov
sub
cmp
leave
mov
adc
inc
mov
or
leave
pop
pop
inc
scas
pop
inc
xor
adc
pushf
sub
xorb
cmp
insb
push
psubd
mov
add
ret
xchg
sub
adc
into
mov
mov
pop
out
cmpsb
ja
sub
inc
imul
xchg
add
aaa
cmpsl
add
pusha
pop
enter
pop
jno
mov
add
adc
nop
enter
andl
test
push
sti
sub
fs
test
cmp
xchg
dec
in
add
adcb
pop
outsb
outsb
or
or
je
sbbl
jne
sahf
lock
fmuls
adc
lea
adc
dec
inc
jo
daa
mov
push
xchg
nop
jae
inc
sbb
push
jmp
mov
mov
xor
push
mov
xlat
jne
push
add
dec
cli
or
inc
into
pop
rolb
lret
xchg
xor
fmul
cmc
dec
mov
xor
std
inc
mov
cmp
or
lea
enter
popa
imul
push
jmp
loope
enter
fildl
mov
add
xchg
addr16
inc
or
mov
inc
in
out
pop
mov
mov
mov
outsl
movsb
mov
in
aad
test
inc
nop
insl
repnz
pop
out
and
fisubrs
push
js
dec
jecxz
mov
jge
push
add
and
aas
or
andb
inc
dec
xor
and
test
roll
stos
add
icebp
dec
je
mov
roll
cltd
popa
ret
shrb
gs
sbb
cmp
pop
cmp
test
xchg
insb
or
adcb
popf
cld
dec
push
inc
jl
jb
push
out
imul
jbe
mov
outsb
repnz
sub
mov
ds
push
rcrb
and
enter
inc
adc
aas
sub
jae
int3
add
jns
jnp
push
out
ret
mov
aam
jge
sti
mov
out
mov
popa
jnp
mov
jge
mov
int3
jnp
jo
adc
jbe
jge
outsb
pushf
sti
and
inc
imulb
testb
fsubl
and
mov
stc
aaa
sub
stos
adc
jns
and
inc
loope
ljmp
je
in
pop
add
xlat
cmp
push
pop
out
mov
xchg
inc
testb
cld
push
jbe
aaa
dec
jno
fbld
ss
push
test
or
push
push
jle
push
cmp
test
add
fwait
cmp
data16
and
cli
pop
sub
cwtl
xchg
lahf
sarl
shll
push
jg
dec
and
test
scas
in
lea
lret
out
jecxz
mov
jo
adc
int3
fsubr
mov
push
hlt
aam
push
daa
mov
cmp
jge
jg
divb
jmp
adc
xor
add
mov
jle
jb
icebp
negl
shlb
out
test
lcall
cli
cmp
adc
in
bound
aam
mov
mull
mov
dec
loopne
push
xchg
leave
pop
adc
lret
mov
or
xor
xor
jl
ss
xchg
insl
adc
dec
test
mov
jbe
aam
jo
aad
cmp
mov
jge
pushf
mov
push
xchg
mov
cltd
xchg
xchg
dec
insb
sbb
sbb
loop
sbb
stos
pop
loop
lcall
xchg
mov
dec
mov
sbb
mov
js
dec
sub
iret
jl
push
ljmp
lds
sub
mov
outsb
cmc
aam
std
int
sub
call
popa
andl
mov
mov
loopne
mov
fucomp
jbe
push
fstps
adc
push
inc
jne
ret
sub
incl
push
loop
inc
sar
xchg
pcmpgtw
mov
mov
mov
mov
mov
daa
inc
lret
jnp
lods
fistl
mov
mov
jp
aaa
and
orl
lret
in
pop
jno
inc
cmp
cmp
dec
loope
mov
dec
xchg
outsl
push
in
and
mov
nop
and
add
jo
movl
leave
aaa
sbb
sub
imul
push
pop
aas
dec
fsubl
and
outsb
sub
xchg
jo
cmp
push
sarl
jmp
arpl
jg
xchg
cmp
and
loopne
pop
pop
insl
push
mov
cmp
dec
movsb
xor
lret
sbb
fwait
xor
jo
testl
loopne
pop
in
push
test
inc
adc
or
xchg
xchg
es
adc
mov
js
add
cmp
and
stos
or
sub
and
xchg
jle
and
scas
pop
push
sti
sub
or
xlat
sub
push
cmc
or
cltd
outsb
test
test
out
outsl
sbb
or
push
mov
cwtl
jnp
loope
sbb
int
jne
mov
push
add
ret
or
call
xchg
jns
sbb
push
test
jl
adc
cli
or
imulb
aad
push
cltd
enter
jo
xchg
sub
stos
lea
adc
in
mov
mov
call
xlat
jbe
bound
aad
mov
ja
mov
mov
scas
mov
je
sbb
and
push
data16
iret
sbb
dec
push
or
jmp
sub
mov
pop
mov
call
adc
lahf
out
mov
fwait
insb
mov
pop
ds
lret
test
mov
imul
or
adc
shr
enter
int3
out
xor
jns
xchg
sub
or
add
les
add
cs
shlb
push
out
dec
enter
inc
test
push
jmp
loop
sub
push
fwait
sahf
jnp
adc
push
adc
sahf
adc
addr16
adc
mov
mov
jbe
daa
scas
inc
xchg
in
push
ljmp
add
lea
sbb
or
pop
cmp
ja
test
xchg
jae
cwtl
sub
add
enter
sub
push
mov
jecxz
in
or
rcll
addr16
xchg
out
or
sbb
dec
jl
mov
gs
aaa
mov
pop
cli
push
mov
inc
push
sub
imul
dec
mov
mov
xor
sbb
lcall
inc
out
mov
add
sub
lret
out
daa
cmc
cmp
xor
pusha
jns
xchg
fsub
dec
cmp
fs
push
push
mov
sbb
sbb
xor
iret
into
or
shll
push
pop
xchg
and
pusha
xchg
push
icebp
xchg
fwait
sbb
sbb
repz
sahf
inc
xorb
dec
or
gs
shlb
inc
jg
push
push
push
xchg
daa
lcall
addr16
pop
inc
jmp
sub
movsl
dec
out
jno
inc
sar
leave
arpl
add
adc
vpmaxsw
pop
add
inc
jae
cmp
loopne
icebp
test
pop
fstps
adc
sub
data16
or
movsb
jg
jb
xchg
mov
nop
pop
push
push
and
scas
cmp
aam
lcall
rorl
push
shlb
lea
imul
mov
ret
fisttpll
push
fsubr
repnz
pop
aad
mov
test
lods
push
push
cmpsl
cmp
mov
in
aaa
shlb
add
gs
lods
dec
xor
test
inc
xor
xor
fdivl
xchg
insb
xlat
cmp
dec
xor
pop
mov
xor
fdivp
add
xorb
mov
push
clc
or
in
cli
out
xchg
addb
into
or
jmp
cmp
stc
pop
mov
ss
dec
and
mov
into
jl
mov
adc
push
mov
adc
mov
pusha
cli
cmc
inc
ds
cmpsb
inc
pop
push
js
aad
pop
or
mov
sub
stos
sahf
xchg
xchg
sub
xchg
or
xchg
addl
jbe
xchg
arpl
push
rol
mov
insl
int
out
xchg
cmpsl
xchg
inc
dec
and
jae
pop
sti
gs
aaa
and
dec
aam
xor
mov
mov
cmp
xor
mov
cmp
adc
popf
lock
jbe
cmpsl
sti
adc
add
int
inc
pop
pop
add
xchg
dec
push
inc
xchg
insl
loop
mov
push
dec
mov
call
incl
into
sbb
dec
sub
cwtl
adc
sub
mov
jmp
imul
andb
and
xchg
rorb
inc
sbb
xlat
push
test
fnsave
ljmp
ja
or
cmp
add
cmp
jp
popa
ja
testl
sbb
test
mov
fsts
and
loope
inc
icebp
pop
bts
mov
iret
add
mov
inc
call
lock
xor
pop
jg
sub
outsb
imul
cli
dec
lock
mov
out
imul
xchg
xor
sub
push
iret
mov
hlt
mov
jne
cmp
dec
sbb
adc
jnp
mov
enter
xchg
jecxz
int3
ds
mov
ret
enter
and
and
arpl
sub
outsl
or
es
loopne
js
push
dec
push
jmp
enter
and
jo
arpl
ret
mov
addr16
cli
fdivs
pop
mov
dec
push
push
mov
ret
pop
roll
lds
cltd
cmp
xchg
dec
fwait
adc
inc
add
push
dec
leave
mov
mov
scas
inc
ret
aas
push
fimull
push
xchg
push
jne
xor
cltd
imul
into
lods
jmp
or
aaa
out
je
mov
jns
in
dec
call
or
cld
and
xchg
int3
xchg
dec
mov
neg
cmp
rcrb
xchg
stc
jo
nop
inc
push
dec
xchg
mov
inc
and
mov
imul
test
push
int3
mov
ja
jae
dec
xor
enter
jne
mov
mov
sbb
in
in
xchg
and
or
push
cmp
push
jbe
sub
and
cli
pop
fwait
mov
sub
or
test
das
imul
add
js
pop
cmp
xor
jb
popa
pop
adc
ja
inc
int3
adc
rdmsr
or
loopne
std
add
mov
lretw
mov
pop
out
or
repz
loop
push
imul
les
sbb
dec
jno
push
adc
lds
test
jne
inc
std
test
xchg
cmp
pop
lret
cltd
clc
aaa
push
xchg
cld
or
roll
test
mov
xchg
lcall
xor
fstpl
sbb
push
sub
out
loope
loopne
or
mov
inc
mov
push
popf
outsl
or
or
jg
push
daa
xor
pushf
pop
fs
and
push
mov
scas
mov
insl
xor
mov
xchg
cmp
aaa
and
ds
mov
jge
icebp
scas
int
pusha
hlt
push
loopne
lret
jbe
loope
cwtl
mov
inc
es
inc
mov
in
fiaddl
pusha
pushf
inc
loop
lock
push
testb
push
pushf
leave
jge
and
daa
scas
adc
or
fnstenv
shrl
mov
xor
int3
insb
jl
adc
push
push
cmp
jmp
cmc
loop
fmull
dec
inc
shrb
mov
stos
add
xorl
call
aam
call
test
adc
sub
or
mov
repz
push
cmpsl
xchg
sub
mov
mov
ss
leave
in
jl
xchg
push
cmp
lret
icebp
or
add
jg
cwtl
cmp
arpl
sbb
xchg
adc
add
jne
xchg
add
xchg
adc
je
pop
adc
jge
push
xor
mov
test
cmp
imul
movsl
fdivrs
lret
and
jne
mov
xorb
push
loope
sbb
jnp
dec
je
cmc
and
fwait
mov
add
inc
out
cwtl
nop
push
inc
pop
into
in
push
pop
stos
out
mov
lea
inc
sub
rcrl
sbb
sahf
ds
mov
leave
lcall
mov
cli
jns
inc
xchg
mov
push
adc
or
adc
or
fadds
repnz
xlat
inc
pushf
push
mov
popf
dec
or
xor
xchg
out
in
mov
sbb
dec
push
decl
pop
xlat
inc
pop
mov
sub
ljmp
rol
mov
pop
cwtl
pop
lahf
push
sbb
rcrl
mov
pop
lcall
mov
xor
loopne
push
call
imul
lcall
mov
dec
sub
cli
inc
enter
or
je
mov
dec
and
int3
xor
mov
pop
cmp
bnd
es
cmp
push
adc
cmp
adc
jns
fdivrp
mov
orb
add
add
mov
cmp
ja
pop
popf
mov
icebp
jecxz
cmpsl
enter
pop
pusha
pusha
fwait
sub
insl
mov
add
pop
add
xlat
fimull
dec
dec
stc
outsb
test
mov
mov
mov
push
in
into
sbb
andb
testl
lods
lahf
mov
bound
rcrb
das
sub
int3
mov
lods
push
dec
in
lds
mov
adc
ja
dec
and
rorl
add
in
add
mov
mov
pop
pop
loop
stos
pop
mov
xchg
pop
hlt
rorl
pop
and
mov
and
pop
shll
stos
xchg
insl
loopne
xchg
pop
xchg
scas
fdivs
stos
js
sub
xor
test
mov
pop
fistps
cld
mov
mov
push
pop
pop
clc
push
mov
pop
mulb
push
movsb
push
sti
aam
loope
xchg
push
lcall
rcl
cmpsl
movsb
in
dec
or
pop
mov
jmp
mov
inc
ficomps
adc
inc
xchg
mov
push
stos
jle
add
dec
std
mov
jl
mov
das
aas
cmp
xchg
stos
pop
jae
fsubl
adc
inc
xchg
int3
or
ret
stos
and
xchg
es
inc
lods
and
cld
jecxz
mov
adc
adc
mov
aad
push
push
fst
jecxz
jb
mov
pop
pop
pop
ljmp
repz
leave
jl
movsb
ret
mov
push
mov
leave
aaa
xchg
aas
shr
fisubs
repnz
out
jmp
scas
sbb
xchg
mulb
out
clc
loopne
iret
mov
jmp
and
mov
loopne
mov
or
add
mov
hlt
std
loop
subl
jnp
dec
and
cmpsb
enter
test
push
push
push
outsl
cmp
in
mov
push
pop
mov
es
in
je
movsb
jp
pop
jl
lcall
mov
les
fcoms
inc
jo
push
mov
mov
inc
ret
and
mov
ss
jnp
outsb
push
mov
xchg
test
fadds
movsl
or
mov
in
add
bswap
cmp
cs
lahf
pop
sub
stc
fwait
push
ss
pop
dec
or
cmpsl
add
cmp
push
rcrl
cmp
stos
ret
jb
leave
inc
popa
mov
push
pop
xchg
repz
mov
out
adc
aaa
jg
je
inc
cmp
lcall
insl
add
into
sbb
sub
pop
test
push
orl
mov
loop
xor
jge
std
fisttpll
frstor
lcall
scas
sti
mov
pop
mov
and
dec
aas
les
leave
loop
xor
ret
jb
insl
movsb
sbb
popa
jp
pop
dec
adc
xorb
xor
test
loope
pushf
cmp
or
rol
pushf
mov
es
jne
shl
pop
xor
jle
lods
sti
inc
popf
dec
mov
divl
sbb
dec
add
sub
mov
jb
xor
loop
scas
in
imul
insb
mov
xlat
fwait
mov
pop
jecxz
imul
pop
sahf
xchg
int3
xchg
pop
push
and
test
cwtl
lahf
mov
out
pop
pushf
push
enter
jb
and
or
jl
dec
push
out
cli
pusha
xchg
cmp
cmp
jmp
mov
sub
fdiv
mov
int
jg
sbb
or
adc
jmp
data16
inc
movsb
shl
push
sub
add
popa
fwait
adc
inc
fdivs
clc
xchg
fnstenv
xor
or
cmp
adc
jns
dec
cmp
scas
leave
out
push
push
fucom
xchg
cltd
mov
inc
lea
idivl
or
les
jle
mov
pop
mov
fmul
sub
xchg
loop
mov
and
or
push
icebp
mov
jge
jo
and
sub
dec
mov
cmp
push
icebp
int3
fdivl
and
pop
fisttpll
xchg
aas
mov
cmc
mov
cmp
repnz
mov
dec
xchg
rorb
mov
push
dec
push
cmp
cli
orb
jg
sub
lods
xlat
out
pop
pop
xchg
jp
sbb
rcll
enter
insb
test
lcall
int
inc
shrb
pop
push
xchg
test
adc
inc
fnsave
and
imul
lods
mov
push
int
out
pop
icebp
mov
adc
insl
jbe
push
cmpsb
and
jno
mov
jb
cmp
pop
test
scas
insb
cli
or
repz
pmuludq
cmc
test
xchg
into
fstpl
testl
fbstp
addl
imul
adc
rcll
ja
and
or
adc
enter
cmc
or
sbb
push
and
push
jne
jg
fidivrl
into
popf
loop
stc
mov
push
push
lcall
frstor
int
fcomi
fimull
or
and
mov
cmp
adc
inc
adc
sbb
cld
pushf
js
cmp
subl
arpl
sarb
pop
call
stos
push
clc
shlb
dec
sbb
and
xchg
jecxz
enter
cs
jbe
fwait
pushf
orb
cmpsl
cwtl
push
jb
fisubs
push
jne
inc
imul
dec
add
push
or
push
xor
push
out
pop
ljmp
into
lret
test
jae
sti
ljmp
add
cmp
cmpsl
mov
pop
rcrb
cs
fisubl
sbb
adc
push
ret
scas
ret
or
adc
push
enter
mov
lds
fwait
leave
call
xchg
pop
sbb
xchg
inc
repnz
enter
lahf
xchg
inc
xor
cmpsb
je
fwait
pop
cltd
jnp
loop
pop
imul
or
sti
sbb
push
nop
push
andl
insl
loop
fcmovnb
pushf
call
jns
sub
int3
or
cmpsl
ret
xlat
mov
pop
inc
outsl
dec
lock
fsub
pop
pop
jecxz
mov
add
push
inc
test
pop
sub
or
mov
inc
roll
cmp
mov
ret
sub
out
xchg
adc
and
cld
dec
insl
mov
shrl
test
inc
sti
xchg
and
std
cld
dec
imul
repz
sub
sti
std
ret
mov
push
push
cmovge
outsb
push
in
fmuls
push
mov
add
adc
rcrl
jnp
mov
cld
cmp
xchg
out
push
or
xchg
stos
jge
add
rcll
mov
mov
fsubrs
in
xchg
jb
js
out
insb
jl
mov
jae
or
in
clc
int
es
mov
sbb
xor
cmp
add
cmp
pop
xor
das
std
mov
dec
notrack
mov
jo
jmp
inc
dec
dec
fists
push
jno
cmpsl
les
or
jg
insb
in
pop
mov
mov
sahf
mov
repz
dec
cmp
addr16
nop
int
jle
mov
stc
ret
jle
incb
xchg
stos
mov
fistps
jno
lea
or
lea
outsb
addr16
pop
sub
arpl
mov
mov
push
mov
adc
mov
sub
ret
leave
jb
mov
pop
bndldx
or
pushf
dec
cs
push
fdivr
push
mov
cmpsl
hlt
fwait
mov
ret
les
jae
mov
jle
jo
bound
xchg
adc
shrb
out
test
into
dec
loope
jp
icebp
in
sub
pusha
push
jg
sbb
pop
dec
test
push
xor
jmp
cmpsb
in
xchg
push
mov
sahf
cmp
js
aaa
stc
adcl
and
in
sti
inc
js
mov
mov
xor
out
push
test
mov
lods
mov
int3
sbbb
test
add
sbb
sbbl
adc
cli
xor
les
mov
sub
cmpsl
adc
adc
out
sub
xchg
xchg
and
mov
sti
lret
rcrb
jl
cmc
adc
sbb
and
lods
inc
mov
and
stos
push
pop
push
sbb
mov
inc
xchg
out
stos
inc
mul
jo
nop
push
imul
int
mov
sub
movsb
dec
pop
insb
insl
mov
dec
inc
test
bnd
pop
push
xchg
iret
dec
aad
outsb
adc
sub
cmp
mov
test
add
rorl
sbb
cmpsb
lock
inc
xchg
pushf
mov
cld
cmp
orb
add
int
lret
jb
jae
shrl
push
pop
mov
outsb
and
xorb
push
clc
int
dec
ja
mov
xlat
xlat
pop
lahf
mov
test
inc
push
cmp
push
inc
pusha
jmp
fnstenv
mov
call
fwait
mov
rorl
scas
jno
jg
arpl
pushf
sbb
or
pop
jae
dec
pop
ret
and
jle
in
push
mov
sahf
xor
dec
lods
repz
cmp
movsl
pop
pop
into
and
ror
cmp
pushl
insl
mov
movsb
inc
and
nop
jo
cmc
mov
pop
inc
ss
scas
lea
jo
sub
cmp
push
dec
lods
fs
push
push
js
out
jae
insl
push
insb
xor
btc
inc
sbb
sbb
pop
cs
addr16
jge
adc
clc
mov
inc
addr16
xchg
cmp
push
movsl
ja
jae
bound
push
mov
hlt
in
andl
jno
inc
lret
outsb
or
and
aaa
lret
imul
cli
push
dec
mov
test
cmpsb
fs
inc
add
mov
and
jmp
in
inc
pop
push
repz
imul
test
in
pop
add
stos
sahf
mov
or
test
push
push
mov
cmpsl
fdivr
or
test
andb
outsb
xor
inc
lods
sahf
push
jbe
mov
jne
lret
jp
adcl
ja
cwtl
test
jnp
push
jl
je
mov
mov
and
fnsave
popa
adc
xlat
idivb
xor
push
aam
stos
jae
mov
leave
test
dec
mov
ficoms
sbb
dec
std
lods
mov
jns
fldt
xor
cltd
call
pop
xorl
out
jmp
negb
inc
mov
push
repnz
mov
jge
xchg
outsb
mov
lahf
pop
or
jb
pop
mov
jp
dec
adc
call
les
cmp
ret
scas
subb
adc
cmp
movsl
sbb
fdivrs
sub
pushf
pop
pop
fs
jecxz
jno
mov
xchg
add
ficomps
push
mov
scas
cmp
cmp
inc
sbb
jp
stos
das
jnp
jge
push
jno
daa
sub
ja
pop
cmp
mov
outsl
xor
aas
xor
cwtl
jle
xchg
es
pop
push
pop
out
inc
push
pushf
movsl
add
loop
push
add
mov
es
add
xchg
loope
stc
sbb
cld
push
int
stos
insb
inc
mov
aad
insb
pusha
cmpsl
mov
push
cmp
dec
stos
xor
loopne
scas
sub
sub
push
jecxz
sbb
fsub
popa
pop
out
into
jl
aam
jp
aad
repz
inc
in
cmp
sub
mov
push
adc
pop
push
sub
push
inc
mov
mov
stc
jns
jae
push
rclb
fs
push
mov
aaa
outsl
ss
dec
inc
lods
pop
test
repz
insl
and
gs
push
inc
cmpsl
into
ss
popf
and
inc
inc
ljmp
cmp
pop
out
repz
and
sbb
jns
daa
cli
or
mov
xor
addr16
movsl
mov
sbb
divl
repnz
pusha
repnz
dec
les
pop
inc
enter
jno
daa
xchg
jp
xchg
cwtl
push
js
cmp
xchg
and
or
adc
inc
out
loope
mov
lods
addl
mov
mov
ret
inc
dec
test
into
xchg
and
mov
inc
aaa
rcll
adc
and
pushf
xorl
fsubrl
push
mov
lret
fucomip
dec
pushf
js
xchg
lods
mov
lods
sbb
cmp
lock
xchg
sahf
or
stos
fcoms
jmp
mov
xchg
insb
call
add
sahf
cld
or
mov
les
cmp
sbb
inc
lcall
add
ficoms
push
mov
sbb
and
inc
xor
out
push
sti
mov
lods
inc
in
xor
jae
sbb
sub
insb
push
daa
cmpsl
dec
das
ja
mov
or
fists
je
sbb
and
adc
mov
in
and
pop
bound
jecxz
dec
mov
xchg
pop
and
jecxz
adc
sbb
cmp
lock
mull
jp
testl
mov
into
sbb
xchg
out
lock
pushf
cmp
xlat
sub
hlt
and
adc
cmp
cmp
pop
out
jmp
dec
outsl
xor
or
cmp
aas
push
add
ret
dec
inc
in
sbb
sbb
dec
sbb
insb
bound
and
cmp
rol
sub
repz
imul
dec
lods
stos
dec
ja
mov
js
or
xor
lret
push
pop
push
insl
mov
dec
add
ds
popf
repnz
push
test
lret
sub
in
mov
std
sbb
ss
into
aas
push
inc
xchg
lahf
popa
hlt
ret
outsl
test
es
rcr
mov
clc
test
cmp
pop
cmp
push
xchg
in
in
sub
outsb
mov
pop
aaa
add
sub
xchg
mov
stc
lret
inc
jmp
sub
in
push
jne
jge
mov
pop
xlat
jmp
lret
scas
and
mov
cli
sub
popa
hlt
push
add
lret
xchg
popf
cmp
enter
addr16
stos
aam
inc
mov
xorb
jmp
bound
fnstcw
sub
xchg
cmp
and
in
cs
mov
mov
sti
mov
lret
test
sub
push
leave
or
mov
dec
shll
cmp
std
push
jae
das
xchg
mov
sbb
jecxz
bts
lock
xor
add
subb
jnp
dec
mov
scas
cmp
cmp
adc
push
gs
add
rcll
jae
dec
into
mov
outsb
add
jecxz
push
jns
into
pusha
aam
cmp
pop
mov
xlat
and
std
faddp
mov
movsb
test
cs
std
mov
pop
pusha
dec
push
mov
mov
daa
fildl
inc
mov
subb
in
cmp
les
cmp
lods
xchg
or
mov
pop
mov
xchg
mov
js
lods
pop
jns
test
pop
fs
cld
repz
shr
xchg
cmp
xor
inc
xor
sbb
dec
inc
scas
xchg
cld
call
cmp
orl
loopne
lret
sub
dec
aas
pop
jne
movsl
and
inc
mov
sbb
cwtl
rcll
inc
push
xchg
pop
pop
je
sbb
lret
shlb
mov
inc
sub
add
mov
loope
push
sbb
inc
je
out
inc
and
sbb
das
add
jnp
mov
aas
jbe
fisubl
sarl
mov
mov
jae
sbb
lods
and
add
mov
dec
out
mov
fiaddl
into
je
cwtl
xor
cmpsb
push
mov
adc
xchg
cmpsl
jecxz
adc
jns
imul
data16
shll
mov
mov
int3
hlt
fisttps
xlat
lahf
or
mov
cli
mov
test
jns
test
shl
aaa
jmp
and
dec
add
or
divl
dec
xchg
cld
ss
mov
call
mov
stc
clc
jo
sub
sub
xchg
mov
cwtl
in
push
cmp
cld
adc
lea
scas
mov
xchg
pop
fistpl
inc
out
addb
rcll
push
jge
and
dec
fildl
jne
aaa
std
adc
arpl
pop
cmp
xchg
arpl
lods
sarb
cld
shl
movsl
cltd
pusha
sahf
cmpsl
adc
xchg
imul
mov
sahf
push
popa
lahf
sub
push
fwait
jno
sbb
push
cmp
mov
xchg
ja
nop
mov
pop
or
lea
repnz
scas
push
test
sbb
out
insl
mov
mov
and
nop
aaa
call
mov
mov
xor
movsl
cli
pop
rclb
notb
lcall
or
fsubrl
cmpb
adc
dec
mov
mov
or
lret
insb
leave
mov
mov
cmpsl
xlat
sub
sarl
fs
mulb
dec
mov
mov
int
add
inc
push
mov
xchg
lds
in
scas
or
das
xorl
fistpll
xchg
aas
pop
out
rcr
push
xor
fadd
jl
sub
out
push
inc
ljmp
clc
inc
adc
and
add
icebp
lods
fistl
sti
sti
cmp
pop
add
sub
stos
pop
dec
inc
stos
mov
push
add
in
and
ret
sub
ljmp
xchg
sub
xor
out
jp
out
lret
orl
and
sub
loop
or
sbb
imul
out
fdivr
mov
mov
jae,pt
jle
test
jbe
inc
lds
dec
xchg
pushl
and
push
pop
xchg
push
cmpsb
cmpsb
mov
hlt
and
cmc
sbb
xor
sub
les
adc
inc
jb
pop
das
test
out
lret
jg
or
push
pop
sbb
or
movsl
call
aad
add
and
or
mov
push
mov
cmp
into
insl
sub
sbb
mov
mov
jg
fisttpll
loop
test
pop
pop
or
push
sub
fwait
cmp
jne
jg
sbb
out
adc
lcall
fs
cmp
cmp
mov
das
dec
leave
jecxz
adc
sub
cli
mov
mov
jmp
push
imul
or
xor
dec
js
or
jecxz
push
lahf
mov
xchg
cmp
outsl
jno
xchg
xlat
ja
sub
lcall
mov
push
shl
movsb
and
jnp
cmp
ret
dec
jnp
mov
push
pop
call
xchg
mov
mov
out
jo
test
and
xlat
inc
xchg
push
xchg
xchg
fbld
dec
or
nopl
pusha
daa
inc
jmp
and
jle
sbb
stc
mov
lret
fcmovu
mov
and
lds
loopne
jmp
cmpsb
cli
cmp
jne
and
ficoml
call
arpl
cmpsb
push
test
pop
mov
dec
and
rcr
pop
aam
repnz
aad
aas
adc
sbb
pop
les
push
aaa
sub
test
into
mov
bound
mov
jp
insb
dec
mov
or
stos
imul
lea
inc
ljmp
push
addl
lahf
dec
gs
nop
out
inc
and
sub
adc
mov
mov
leave
push
pop
jnp
cs
jne
mov
mov
ljmp
jbe
mov
pop
push
pop
popa
sub
push
fsubrs
popf
dec
rorl
aas
sbb
xchg
adc
in
pop
xorb
mov
popa
inc
mov
out
and
and
and
cmpsl
cmp
cmp
xchg
mov
sub
xor
mov
jl
xchg
push
cmpsb
jbe
xor
hlt
cmp
sub
insl
add
int
sbb
shll
iret
xlat
gs
add
imul
and
stos
or
test
outsb
movsl
sbb
sbb
out
xor
iretw
js
adc
outsl
dec
fsubrs
jnp
cltd
sahf
adc
add
adc
fwait
sub
adc
push
cmpsl
cmc
cmp
jo
push
into
popa
xor
setnp
dec
insl
fsubrl
je
popa
jl
insb
icebp
lea
lods
fcoms
inc
push
clc
shr
aas
push
adc
nop
pop
jp
adc
jbe
repz
test
jle
xchg
xor
sub
insl
mov
ds
inc
sbb
mov
push
pushf
inc
mov
sbb
loopne
cmp
ds
and
repnz
shlb
cwtl
and
mov
repz
mov
popa
or
subb
mov
movsl
inc
jo
or
and
xchg
clc
and
add
fwait
lahf
clc
dec
and
or
mov
inc
mov
ss
pop
cli
mov
leave
pop
pop
enter
add
sub
or
adc
repnz
test
push
mov
jg
xor
leave
add
sbbl
cmc
sub
or
ror
cmp
fidivrs
icebp
xor
fstl
js
loope
cmovp
stc
inc
cmp
sahf
imul
push
jo
insb
mov
xor
in
cmp
pop
cmc
xchg
aad
xor
push
adc
loop
jl
ds
sbb
leave
dec
pop
sub
mov
or
imul
shlb
inc
outsl
enter
dec
ss
add
sbb
sub
out
loop
and
mov
test
lcall
lock
jg
jnp
fisttpll
repz
jno
clc
data16
or
and
push
cwtl
repz
push
dec
ficoml
cmc
xchg
jmp
enter
xor
pop
cmp
dec
ret
les
mov
sub
mov
push
pop
and
mov
fs
mov
pop
pop
inc
addr16
inc
cmp
mov
lea
xor
arpl
into
aas
lea
jo
add
pushf
mov
mov
icebp
inc
push
sahf
xchg
aaa
pop
mov
push
jp
gs
outsb
xlat
cli
sbb
shll
jae
sbb
push
mov
push
outsb
cmp
and
xor
sbb
inc
in
mov
addr16
mov
sti
push
int3
out
xchg
jle
or
divb
add
outsb
inc
js
pmullw
cs
or
das
push
sbb
sbb
push
xor
cmp
lods
in
int
or
pop
add
mov
push
dec
sbb
adc
jbe
dec
fucomi
jne
ret
ljmp
xchg
dec
aas
lock
divl
loopne
insl
xchg
in
and
sahf
lret
and
cmpl
and
scas
cmp
aam
fldt
push
mov
mov
idivb
add
popa
mov
lcall
hlt
orb
mov
pop
mov
push
sbb
mov
pop
dec
rorb
sbb
mov
addr16
sub
mov
jno
mov
mov
cmp
xlat
xchg
xchg
push
jb
xchg
scas
lds
jne
stos
fisubrl
mov
mov
js
mov
shll
bound
push
divb
xchg
xchg
add
cltd
sbb
jp
stos
adc
mov
mov
ret
aas
mov
test
mov
insl
push
fsubl
jmp
cmp
sahf
mov
arpl
pusha
mov
adc
je
sbb
jne
sbb
and
sbb
xor
cwtl
jns
mov
push
fsubl
pop
and
jns
aam
movsb
sub
imul
daa
mov
ret
add
xor
gs
fmull
push
cs
and
xor
neg
gs
push
aas
daa
loop
inc
xchg
push
adcb
mov
lret
fadd
cmp
cwtl
jne
inc
push
jo
xchg
adc
or
pusha
xor
mov
mov
mov
and
xorb
push
cli
pop
push
mov
cli
sub
stc
sarb
xorb
mov
mov
xchg
decl
ds
icebp
pop
mov
mov
push
lcall
orb
mov
jo
ss
mov
mov
in
movsl
or
xor
rclb
sub
cld
cli
xlat
push
je
test
cmpsb
popa
faddp
sub
jo
inc
push
jae
mov
add
out
pop
and
lahf
cmp
mov
popa
daa
adc
shlb
lock
push
push
test
dec
adc
in
push
enter
mov
in
dec
lcall
sbb
dec
jno
lods
and
inc
scas
movsb
mov
xor
pop
cmc
fwait
push
adc
dec
stc
xchg
out
flds
sbb
xchg
outsl
sub
mov
out
adc
popf
sbb
dec
into
iret
xchg
jno
mov
cs
test
lcall
stos
jge
shrb
stos
jmp
push
jmp
lret
insl
inc
outsb
fidivrs
mov
int3
add
jbe
xchg
in
xor
push
stos
ret
test
push
mov
ficompl
xchg
pusha
pop
inc
add
mov
jp
pop
fcmovnb
sbb
lcall
jle
ss
adc
xchg
adc
cmp
daa
fbld
xchg
in
rolb
mov
hlt
sub
jno
jge
fidivrs
push
or
aaa
push
pop
pop
xor
cmp
lret
pop
sub
pop
call
and
jnp
push
dec
les
jns
and
mov
enter
data16
movsb
popf
pusha
scas
push
inc
pcmpeqw
hlt
daa
aam
adc
imul
push
test
mov
sbb
cli
mov
repz
jge
xchg
pop
cmpsl
jle
cli
mov
push
stos
adc
std
imul
and
jne
xor
xor
inc
je
mov
imul
imul
movups
imul
lock
rorl
add
cmp
pop
sbb
pop
jno
rol
loope
sbb
adc
fwait
inc
adc
xor
jge
mov
aaa
loop
into
inc
inc
mov
cmp
pop
sarb
fwait
jecxz
repz
or
lret
daa
dec
xchg
cli
cmc
movsb
aas
push
outsl
in
mov
inc
cmp
mov
ffree
mov
lea
xor
cld
inc
xor
and
pop
jmp
sbb
sbb
pop
mov
es
lret
inc
mov
add
push
loope
sub
xorb
cmp
sub
xchg
adc
jnp
cmovb
aas
int
inc
outsb
pop
or
mov
mov
jg
add
lock
faddl
aaa
test
mov
nop
sub
out
jle
clc
cwtl
jbe
ds
or
sbb
fisttps
xor
scas
sub
push
jp
je
sub
inc
enter
sbb
dec
mov
loopne
jmp
push
fldl
js
scas
add
test
movsl
imul
and
pop
movsl
mov
add
and
cmp
insb
addr16
adc
enter
inc
or
enter
push
mov
in
sbb
scas
pop
xor
mov
adcb
loop
ljmp
mov
int3
movsl
mov
jmp
hlt
xor
jp
mov
pop
lret
pusha
pop
cs
inc
mov
xchg
in
jne
sbbl
push
repnz
mov
pop
pop
xchg
mov
inc
mov
lds
push
dec
dec
icebp
jnp
imul
jb
jo
daa
outsb
adc
test
pop
aaa
push
sbb
loope
cmp
mov
inc
dec
xchg
leave
les
test
or
mov
and
mov
adc
xchg
stos
sub
dec
xchg
fstpl
dec
es
stc
adc
test
je
clc
insb
inc
mov
jne
cmc
push
out
xchg
or
shr
mov
xchg
cmp
add
inc
mov
out
test
dec
lcall
jnp
lock
ja
mov
jb
inc
cmp
fcompl
xor
test
mov
aaa
xor
pop
mov
shlb
inc
nop
std
scas
das
test
inc
sub
pop
mov
lock
xchg
sbb
adc
jne
xor
jno
add
data16
adc
sbb
ret
and
xlat
js
and
aad
or
loope
push
push
mov
inc
fldt
dec
mov
jle
addr16
arpl
scas
fstpl
int
and
sub
cmpsb
and
push
inc
jmp
in
xor
mov
pushf
je
push
clc
dec
rcrl
sub
hlt
pop
ret
rcll
jo
fldl
sahf
cmp
lret
lds
mov
sub
push
jnp
and
hlt
std
push
mov
add
neg
clc
jecxz
lahf
sub
and
cli
movsb
xchg
ja
adc
adc
mov
pop
xchg
sub
aaa
add
mov
and
es
mov
arpl
sarb
xchg
das
lods
push
mov
int3
push
ret
push
push
or
mov
mov
clc
faddl
xorl
orl
jmp
loop
loope
icebp
mov
notb
mov
movsb
cmp
pop
in
lods
insb
lret
add
pop
sub
dec
call
pusha
sbb
clc
test
fcomps
addr16
adcb
sahf
jo
jbe
shlb
cmpsb
popa
mov
pop
cmp
mov
push
and
stc
pop
mov
mov
mov
loopne
lods
jl
in
xor
sub
adc
jb
jmp
testl
dec
bound
push
ds
loope
and
ljmp
xlat
fs
push
ljmp
push
fcoms
mov
pop
movsl
ljmp
dec
push
movsl
fisttpll
dec
or
ds
dec
rol
divl
mov
call
cltd
mov
xor
push
xorl
and
mov
fdivrs
cld
mov
call
push
mov
cld
jmp
fdivrl
jle
mov
sbb
push
dec
out
pop
mov
fwait
mov
mov
nop
es
and
ucomiss
dec
push
jmp
pop
jl
dec
xor
cwtl
into
sahf
jns
data16
pop
mov
stc
mov
lret
test
mov
jne
adc
fistpll
mov
xor
xchg
aas
jne
pop
xchg
add
test
inc
les
lret
rolb
add
call
ja
mov
sbb
lods
xchg
adc
inc
pop
xorb
mov
push
pop
xor
jne
lods
inc
scas
popf
xchg
popa
in
jbe
jl
daa
lahf
sbb
mov
and
dec
pop
mov
ret
jae
in
movsb
sbbb
xchg
or
xsave
in
xchg
dec
mov
cmp
js
mov
pop
cmovnp
nop
mov
es
andl
push
mov
es
cmpb
xor
push
mov
and
jl
xor
stc
dec
sub
in
test
inc
inc
repz
imull
xor
cltd
test
in
test
lcall
loope
dec
sub
or
out
aam
inc
roll
jb
and
mov
xchg
pop
adc
xor
sub
fnstcw
push
dec
sub
sbbb
insb
sbb
lock
mov
dec
es
lcall
xchg
sub
push
cmp
inc
sbb
push
push
orb
movsl
sub
ja
call
pop
movsl
xchg
dec
and
leave
and
das
mov
pushf
arpl
cmp
cmc
roll
psrad
inc
in
fldcw
jno
xchg
out
dec
mov
pop
inc
xor
popf
jnp
aad
push
cld
mov
shlb
jbe
test
or
lret
xchg
pop
daa
pop
cs
cmp
xchg
and
pop
pop
movsb
adc
das
or
mov
xchg
mov
lods
pop
and
add
clc
xor
movsl
mov
data16
jp
xchg
into
js
and
xchg
gs
mov
or
cmp
sbb
pop
fsubp
jo
repnz
or
xabort
xchg
sbb
add
stc
inc
sub
xchg
test
arpl
push
cli
dec
int
imul
sub
sub
pop
jo
repnz
mov
and
sbb
cmp
popf
jge
mov
pop
dec
and
fcompl
jmp
mov
mov
lcall
add
xor
cmp
test
push
loop
ss
outsb
enter
out
dec
inc
fcompl
push
mov
cld
mov
push
jo
jns
pop
les
adc
mov
mov
xor
cmp
idivb
push
mov
lds
outsb
sarl
mov
push
outsb
in
lods
push
mov
pop
push
push
jbe
les
and
fwait
adc
neg
daa
sub
scas
xchg
inc
jne
imul
inc
lea
ljmp
cwtl
mov
into
adc
stc
sbb
in
cmc
rcr
add
inc
jae
inc
mov
fcmovnb
jl
outsl
iret
adc
rol
adc
xor
dec
pop
mov
lret
loope
sbb
cltd
stc
adc
scas
sub
out
jnp
inc
ljmp
mov
jne
or
dec
and
jb
push
cmp
loop
movsl
push
push
test
int
popa
push
jae
std
mov
int
xor
mov
stos
shl
out
enter
fwait
dec
sahf
movsl
sub
add
mov
push
mov
mov
imul
xlat
mov
mov
sub
ljmp
xchg
insb
add
push
scas
imul
cs
sar
mov
push
mov
jecxz
inc
ja
frstor
cmp
sahf
fbstp
xchg
dec
adc
scas
sbbb
sbb
mov
mov
mov
out
cmp
loope
xchg
fcmovbe
insb
inc
scas
jae
mov
cmp
inc
cwtl
dec
push
js
dec
sub
mov
inc
push
fdivrl
mov
pusha
pusha
mov
pushf
fistpl
add
jecxz
decl
xchg
or
les
lods
in
and
mov
pop
push
int
lret
inc
sbb
dec
test
dec
inc
jecxz
mov
call
arpl
jo
rorb
and
lods
ss
lret
cmpsl
lret
push
lcall
cmpsb
and
xchg
adc
filds
pop
aad
je
inc
jno
mov
ret
push
call
push
fisubl
shlb
nop
cmp
mov
lret
int3
je
jle
repz
and
mov
out
addb
sti
hlt
push
cmp
scas
mov
push
test
xchg
mov
stos
pop
adc
jo
xor
mov
jb
jle
bound
dec
or
pop
mov
jge
lcall
xchg
or
aad
sarl
cs
lahf
fstps
push
mov
in
aad
rcll
pop
mov
jmp
jmp
out
into
fldt
lret
fs
fucomp
ds
sbb
jl
cli
push
xchg
test
js
pop
lret
cltd
mov
aad
adc
xlat
adc
vpshab
inc
add
cmp
or
push
ret
and
mov
push
adc
pop
inc
xchg
pop
repnz
int3
subl
or
and
movsb
push
enter
ja
add
xchg
icebp
incl
inc
pop
nop
and
pop
std
ljmp
jp
mov
add
mov
jne
push
ds
push
mull
xchg
rolb
arpl
jo
xor
mov
jae
mov
roll
pop
test
push
jecxz
dec
leave
inc
fidivrs
mov
xor
cli
xchg
stc
cmpsl
in
or
in
jb
mov
push
shlb
pop
add
idivl
sahf
or
je
push
fwait
cmc
sbb
push
mov
jnp
leave
or
cltd
sub
ds
dec
loopne
mov
mov
mov
cwtl
pop
aad
mov
cld
inc
jmp
pusha
or
out
daa
adc
jo
rorb
sub
jecxz
dec
imul
cld
push
pushf
jb
xor
loopne
xchg
cs
jae
int
in
nop
push
sbb
dec
lahf
xor
repnz
mov
cs
shl
ja
jb
out
sub
cltd
lcall
cmp
push
test
or
push
call
xor
das
push
je
aam
pop
pop
add
xor
sub
arpl
mov
sbb
and
and
mov
or
jge
xor
pop
sbb
sub
push
push
mov
add
jne
outsl
and
or
flds
sbb
xchg
xchg
fnstenv
mov
push
inc
cli
inc
fisttpll
sub
enter
fdivrl
jle
mov
mov
lods
sub
push
mov
push
cli
rcrb
mov
mov
lods
cmp
outsb
xlat
insl
inc
xchg
leave
ds
pop
pop
stos
mov
or
aam
mov
cmp
in
decb
jnp
jl
mov
fnstenv
out
inc
xchg
aam
xchg
add
lret
jle
cli
mov
faddp
fimuls
scas
xorl
pop
push
push
push
into
mov
adc
jo
not
sbb
mov
xor
add
shll
pusha
in
pop
add
stc
fcoml
movb
mov
gs
cmp
aas
ret
jl
or
cmp
fs
popl
inc
pop
out
xor
test
mov
fcomip
mov
mov
inc
jle,pn
mov
add
aaa
mov
dec
sahf
std
and
clc
mov
mov
lods
ss
jg
or
adc
scas
loope,pn
cmp
lret
ds
orl
loop
jns
adc
cmc
clc
jge
pop
add
incl
daa
imull
enter
and
adc
cli
mov
fwait
sub
popa
popf
mov
insl
out
jnp
unpckhps
xchg
and
rcrl
mov
xchg
mov
sbb
test
or
mov
xor
addr16
sbb
mov
dec
mov
add
cmp
cmc
pop
outsl
jecxz
mov
sub
call
mov
cmp
xchg
flds
sub
jg
pop
push
adc
jmp
push
out
aam
ficoms
sti
xor
push
sbb
std
dec
xchg
roll
add
or
addl
rolb
hlt
ja
leave
jns
aad
rolb
pusha
cmp
push
lret
loop
push
gs
push
enter
ljmp
add
dec
inc
sbb
jbe
jg
hlt
push
insb
inc
mov
and
xchg
out
mov
imul
xchg
or
push
stos
cmpb
ja
dec
inc
ret
arpl
mov
lods
and
cmpb
fs
pusha
mov
mov
sub
cli
out
and
jo
xor
lcall
movsb
addr16
in
add
inc
adc
cmpsl
push
aad
push
inc
jb
dec
lock
cwtl
xchg
xchg
mov
inc
cmpsl
cmc
pop
out
mov
sti
pop
ja
mov
jecxz
std
inc
mov
pop
imul
stc
jne
fnstsw
add
xchg
test
test
jnp
pop
fimull
inc
pop
mov
mov
cmp
jno
cmp
xor
xor
roll
inc
mov
lock
cwtl
idiv
popa
std
shll
iret
int
and
xchg
add
outsb
daa
shl
push
addl
dec
mov
and
lods
mov
adc
setns
jle
out
stos
mov
clc
mov
push
adc
jo
cmp
test
andb
add
push
and
arpl
inc
mov
xlat
mov
dec
mov
rcl
push
pop
sbb
rolb
pop
cli
test
inc
inc
xchg
sbb
cmpsb
mov
push
outsl
mov
mov
test
leave
shll
push
in
xchg
ss
jbe
xchg
lods
inc
das
inc
mov
sub
jmp
pushf
sub
rcrb
adc
pop
dec
mov
lock
fwait
xchg
cmp
inc
shll
movsb
push
movsl
adc
rcl
in
sbb
inc
and
in
cmpsl
shl
sub
fistpll
xorb
rolb
jg
mov
cli
or
call
xchg
pop
add
or
ficompl
pop
mov
dec
sub
and
cmpsb
dec
jns
add
in
add
cli
daa
push
add
add
loopne
cltd
mov
push
faddl
dec
cmp
je
fisubrl
mov
lock
nop
mov
cmp
adc
sbb
mov
std
negb
or
lahf
mov
xchg
jge
insl
clc
mov
xor
jecxz
push
dec
aam
test
movsl
mov
sbbb
push
inc
sbb
leave
inc
dec
iret
or
cli
frstor
mov
adc
and
imull
fwait
push
pop
or
xchg
sub
cmp
sbb
imul
loop
jae
cmc
lcall
push
jmp
pushl
xchg
or
dec
sbb
mov
lock
call
ja
mov
jns
dec
xchg
jmp
cmpsb
mov
jno
stos
imul
pop
jle
jno
push
dec
mov
push
or
pop
call
jecxz
mov
jo
jb
cs
fbstp
es
push
fldl
popa
jg
lahf
fbstp
adc
popa
cmp
lcall
dec
inc
lea
es
xchg
sub
lea
xchg
pop
and
sub
xchg
mov
add
xchg
mov
pop
mov
push
fwait
mov
mov
int3
das
out
xchg
mov
jb
outsl
mov
dec
xor
pop
pop
lret
faddl
jnp
xchg
cmp
jg
je
inc
pop
pop
xor
insb
pop
xchg
add
add
inc
mov
icebp
sub
aad
arpl
call
gs
mul
enter
imul
movsb
push
ss
mov
jno
dec
mov
xor
popf
imul
jp
out
in
or
jb
push
add
xor
std
daa
lods
ja
lret
popf
insb
inc
dec
iret
cmp
lods
pop
sub
leave
add
mov
sub
jno
arpl
sub
cmp
lock
scas
insb
cmp
movsl
xchg
fcoms
sub
xor
mov
fbld
adc
sub
pop
and
push
daa
cmpsl
call
in
xchg
cmp
xor
xchg
or
cmp
testl
add
mov
loopne
inc
js
std
fisttpll
rorl
cmp
out
mov
ds
aam
fimull
add
add
jne
mov
mov
bound
xor
mov
xchg
sub
jns
pop
pop
jno
cmp
shlb
test
xor
jl
shlb
lahf
pop
cmp
test
or
out
scas
xchg
push
jge
jp
mov
lods
call
mov
jne
out
test
mov
pop
xchg
pop
add
dec
ret
xchg
jb
dec
xchg
push
pushf
cs
int
xlat
cmpsl
lahf
popa
stc
int3
push
test
leave
sbb
in
sub
mov
mov
mov
jmp
cwtl
jns
cmc
mov
xchg
lcall
sarb
inc
sub
aad
es
or
lea
dec
test
les
adc
pop
int
std
dec
sub
mov
inc
das
stos
or
jb
jnp
clc
add
xchg
sub
dec
rorl
inc
mov
jnp
rcll
loope
out
push
push
imul
mov
leave
repnz
push
cwtl
and
pop
pop
mov
inc
pop
push
in
mov
xchg
pop
fiaddl
nop
sbb
test
push
or
jae
adc
dec
js
mov
xor
jno
pop
idivl
push
fstps
fwait
sub
lret
xchg
sub
add
ret
mov
and
mov
lcall
ss
mov
add
fldenv
ror
cs
dec
out
mov
lret
mov
cmp
sbb
out
and
jge
rclb
xchg
sbb
mov
shr
js
jl
mov
std
inc
fmuls
sar
pusha
inc
jmp
data16
in
xchg
in
test
ja
jmp
xor
jo
cmpsl
mov
xchg
clc
popa
jmp
pop
lret
push
dec
push
push
lds
push
adcl
loope
ljmp
inc
sbb
inc
enter
outsb
inc
pop
sub
jb
jecxz
sbb
push
loope
xchg
out
lods
xchg
push
jbe
sbb
xor
mov
outsb
dec
aad
mov
out
cmp
dec
sti
xor
and
cmp
jmp
adc
jg
in
push
ljmp
insl
loopne
enter
push
imul
xchg
outsb
pop
cmp
inc
dec
repz
pop
xor
xor
pushf
inc
aad
imul
ljmp
sbb
jae
mov
gs
loope
push
pop
imul
std
or
pop
fsubl
adc
pop
fwait
ja
data16
sub
xor
or
push
sbb
test
addr16
repnz
add
xchg
mov
adc
lcall
lods
in
mov
adc
xor
scas
jns
push
jno
adc
stos
sbb
mov
addr16
fs
ss
cmpsb
sti
xor
jecxz
and
pop
dec
pushf
inc
fstps
push
mov
fsub
scas
jmp
in
aam
loopne
adc
xor
pusha
mov
mov
pop
imul
and
cmp
scas
jno
lock
test
mov
xchg
xor
imul
xchg
xchg
mov
dec
add
pop
bound
scas
jg
addr16
mov
lahf
sahf
cltd
cmp
jle
cli
add
bound
fs
push
fucomi
xchg
into
xchg
gs
stos
ljmp
aaa
add
or
sbb
sbb
push
dec
jl
push
repz
pop
dec
inc
xchg
push
pop
insb
xchg
and
dec
cmp
out
mov
fstpt
push
inc
xor
ljmp
xor
sbb
xorl
jecxz
int3
adc
cmp
or
ljmp
insl
add
dec
clc
cmp
test
inc
push
and
fsubs
or
clc
in
lods
rclb
imul
divl
sti
cmp
es
dec
push
es
testb
and
mov
out
sub
dec
dec
or
sbb
inc
or
push
xchg
seta
add
movsb
inc
pushf
sbb
and
xchg
xor
mov
sub
addr16
shr
lods
and
out
out
pop
loope
fwait
mov
ror
sbb
aam
inc
repnz
pop
push
mov
insb
les
frstor
mov
push
sbb
mov
cmp
inc
sti
mov
lods
lea
dec
adc
xor
repnz
cmc
sarb
mov
mov
test
out
lcall
sub
xchg
rorb
sub
out
add
push
sbb
xchg
fs
inc
xchg
sbb
xor
jg
cli
xchg
push
rcrl
mov
xor
shlb
pop
mov
lods
fdivr
jnp
mov
or
dec
xchg
push
and
aam
and
add
push
ret
jle
fistl
mov
cmpsb
push
outsl
pop
cld
pmulhuw
test
ss
aas
nop
xor
add
push
ljmpw
stos
ds
daa
inc
adc
nop
test
mov
cmp
push
icebp
push
divl
push
add
push
xchg
loop
int3
fisubrs
repnz
jle
or
cmpsl
sbb
ret
sbb
js,pn
sub
mov
out
inc
jecxz
lock
push
jb
fwait
arpl
mov
xor
cmpsl
loope
adc
pop
pusha
lock
ljmp
aam
call
add
jmp
stc
lcall
inc
mov
jmp
fisttpll
ficoms
aaa
adc
push
dec
je
test
pop
jnp
orl
bound
jb
insl
stc
xchg
stc
add
aas
in
push
hlt
push
minps
mov
mov
or
es
xchg
cmp
pop
cmp
jbe
ret
dec
mov
cmp
mul
leave
test
rcl
lret
imul
fstpt
popf
or
or
andl
ret
inc
lret
sub
push
inc
adc
xor
dec
dec
dec
cmp
add
xchg
dec
push
loopne
mov
mov
ljmp
mov
cmpsl
outsl
scas
mov
xchg
jns
fiadds
mov
icebp
lods
jmp
sbb
fidivrl
in
mov
cwtl
mov
add
add
scas
into
mov
stos
add
and
pop
pop
daa
nop
lds
pop
shll
stos
jno
xchg
sti
and
std
mov
sbb
test
push
movsl
xor
sahf
fsub
and
fcmovnu
mov
pop
mov
mov
out
cmpsl
jl
cmp
shlb
call
js
jge
ss
xchg
cmp
mov
mull
insb
or
jnp
xchg
pop
dec
add
rclb
movsl
inc
call
lock
lods
insl
jmp
popf
and
cmp
add
jnp
in
mov
sbb
jae
fwait
arpl
in
lcall
cmpsb
test
mov
inc
dec
lret
ret
xchg
mov
loop
pop
lcall
insl
outsb
lods
popf
cmc
xchg
dec
addr16
cmp
push
sahf
nop
pop
pushf
lods
adc
jmp
add
pop
shlb
loop
repnz
pop
cmp
movsb
jmp
enter
outsl
push
scas
jae
inc
push
dec
pop
mov
std
jo
ss
or
insb
and
push
hlt
inc
mov
pop
lcall
dec
sahf
arpl
into
stc
jo
insb
scas
jb
xlat
ret
mov
mov
lods
iret
xchg
xor
cwtl
sahf
jp
sub
in
mov
mov
mov
or
mov
clc
jnp
pop
jb
push
add
push
cli
sub
adc
loope
dec
fsts
xorb
mov
xchg
hlt
lahf
fdivl
insl
lods
outsl
and
stos
add
dec
xchg
jb
xor
mov
icebp
jae
cmp
mov
icebp
loop
aam
or
testl
or
fs
in
js
inc
push
cmp
jecxz
add
fnstcw
add
xchg
sub
insb
idivl
or
movsb
fcomps
push
aad
xlat
movsl
push
outsl
sbb
or
rcll
jb
pushf
or
dec
lret
ja
or
test
lret
cmp
shll
les
and
mov
dec
pop
mov
iret
xor
add
adc
dec
dec
jae
add
fcmovne
jle
jmp
movsb
out
mov
push
popa
ret
jg
call
cmp
xchg
mov
hlt
ss
adc
es
pushf
xchg
adc
sbb
test
inc
lods
lahf
mov
sbb
mov
in
cltd
aad
inc
mov
fwait
dec
icebp
sub
pop
out
push
cmpsl
rorl
pop
mov
xchg
aad
cwtl
lods
fidivrs
push
xchg
cmp
pop
sub
xor
or
jne
lret
cltd
orb
push
fsts
mov
cmp
ss
push
mov
sti
insb
push
adc
pushf
push
repnz
mov
push
xchg
mov
dec
cmp
pop
fcomp
jo
dec
mov
sub
sahf
je
pop
push
iret
sub
push
cltd
ret
mov
mov
cmp
iret
mov
aas
add
dec
fcmovnb
cld
jge
iret
inc
addr16
daa
sahf
jmp
lods
aas
test
es
aad
xor
cli
daa
jb
aas
sbb
mov
shlb
sub
les
inc
mov
pop
mov
ret
push
adc
or
ja
leave
cmp
enter
aaa
jmp
sbb
add
mov
xchg
push
sbbl
dec
mov
and
pop
inc
push
jne
stos
insl
sub
dec
mov
jnp
dec
mov
loopne
aam
or
cmp
aaa
push
push
pop
aas
xchg
cmpl
daa
insl
cmp
inc
bound
into
jmp
cmp
mov
test
fs
jne
push
or
cmp
inc
inc
popa
mov
daa
divl
insl
jmp
push
movb
mov
pop
or
in
add
or
push
and
mov
push
mov
stos
sti
pusha
fimuls
cmp
or
ljmp
mov
push
imul
or
dec
inc
push
push
jnp
jae
sub
cmp
stc
push
bound
add
fisubrl
inc
sbb
cld
and
mov
mov
jnp
aas
jno
push
das
mov
mov
xchg
pop
cmc
sbb
add
lods
sbb
adc
lods
mov
call
ret
sbb
mov
lds
fnstenv
mov
ud1
hlt
jg
fisttpll
arpl
sbb
and
aam
pop
test
scas
pop
insb
push
cmp
or
lcall
lock
popa
je
dec
mov
out
and
subl
lcall
mov
loop
ja
inc
sub
daa
rclb
mov
pop
ss
or
mov
add
adc
sub
ds
movsb
cltd
leave
les
xchg
shr
jmp
mov
jg
call
xor
mov
lods
loopne
xor
add
hlt
adc
fimull
popa
add
jmp
int
or
lret
insl
daa
mov
push
adc
mov
fwait
dec
loop
out
test
test
mov
sbb
lret
xlat
mov
push
jmp
int
or
jns
in
xor
gs
push
mov
shrl
mov
adc
popf
and
sub
pop
adcb
inc
and
sbb
shll
mov
jb
dec
shl
aaa
ljmp
test
jnp
xchg
inc
dec
xchg
xchg
mov
in
aas
and
cmp
inc
and
jns
stc
push
aam
jl
cmp
jg
inc
bound
loop
js
push
sub
ja
or
inc
out
adc
cli
shlb
test
repnz
cli
ret
or
in
add
and
xlat
mov
and
sbb
cs
stc
popa
adc
jge
loope
jae
in
arpl
addr16
shlb
xor
gs
lret
jl
cmp
das
jo
and
or
cwtl
xchg
mov
fldt
in
push
push
lds
loop
hlt
pop
mov
gs
pop
mov
and
ret
fldt
fwait
int3
add
fs
xorl
in
cmp
cld
and
cli
iret
fldt
and
adc
mov
shl
out
pop
scas
sbb
pop
push
leave
std
xor
push
dec
cmp
addr16
mov
sbb
jo
xchg
push
mov
ret
or
mov
push
add
push
dec
ret
mov
or
or
jns
mov
scas
movsl
pop
sbb
push
sbb
fwait
push
rolb
xchg
aad
or
js
imul
out
jmp
es
shlb
add
pop
lahf
pop
bound
pop
xchg
jl
in
fs
or
mov
divb
push
xor
ds
sub
xor
out
sbb
out
pop
cmp
jbe
jo
and
cs
mov
jae
imul
xor
aaa
jb
daa
inc
adc
cld
mov
sub
out
or
pop
stos
adcb
cld
cmpsl
xchg
sbb
and
adc
scas
sub
cmp
lret
or
push
cmp
imul
repnz
xor
mov
xchg
shl
adc
push
and
inc
rcl
test
ja
imul
jecxz
loope
inc
mov
jne
and
inc
daa
fiadds
cmpsb
or
xchg
mov
sbb
bound
shr
lcall
push
inc
std
mov
mov
add
bound
in
jge
sti
dec
sbbl
xor
add
dec
xor
js
mov
gs
mov
jl
push
sbb
inc
out
dec
push
jnp
dec
push
cli
shlb
mov
push
xlat
bound
ja
sbb
in
ds
movsl
and
mov
stc
cld
mov
dec
mov
mov
mov
dec
adc
and
test
incl
sbbb
movsb
xchg
sti
fistpl
ljmp
xor
jnp
call
inc
add
movsl
outsl
int
adc
aaa
movsb
pop
push
mov
testb
or
movl
xchg
out
das
pop
js
addr16
cmpsb
and
push
sbb
shr
sarl
dec
sub
test
shlb
cmp
cmp
fs
roll
rorw
push
imul
adc
sbb
xor
pop
int3
mov
adc
pop
mov
arpl
in
jg
ds
fwait
cmp
cmp
jmp
xchg
fs
xor
jmp
lret
daa
or
shll
cmp
push
int
cmp
mov
scas
xor
and
inc
cmp
cmpsb
stos
test
ljmp
lea
push
xchg
cmp
pushf
divb
loop
in
lret
fsubl
mov
lods
ror
push
mov
xchg
mov
int
jmp
pop
call
inc
pop
adc
adc
int
aam
xchg
sbb
mov
push
sub
cmp
sbb
sub
in
lcall
cmpsb
faddl
clc
or
pop
lcall
jbe
jp
das
ljmp
mov
cmp
mov
push
mov
shrl
movsl
enter
dec
les
test
gs
push
leave
outsl
and
cmp
in
mov
dec
xor
bound
lea
test
int
aas
std
subb
rclb
sti
and
sub
pop
mov
mov
and
push
xor
xchg
loop
jno
and
inc
lods
addr16
pop
jo
in
leave
mov
xchg
xlat
fidivs
or
inc
cmp
fistpll
pop
ds
loopne
dec
pop
cmc
sbb
cmp
cmpsb
fists
jl
fdivl
andb
jo
fistpl
xchg
mov
adc
aaa
sub
adc
xorl
mov
repz
adc
jb
popf
mov
sbb
orb
mov
dec
arpl
das
testb
iret
rcl
add
sub
pop
or
popa
jnp
mov
cmc
imul
xor
cmp
jle
sbb
push
lea
jmp
cmc
xchg
sarb
inc
out
or
lea
hlt
stc
jnp
and
xchg
xlat
fiadds
add
or
stos
or
pop
add
pop
mov
popa
pop
jne
cmp
jae
pop
and
jae
pop
and
cmc
pop
dec
lcall
dec
lcall
push
not
lods
xchg
fstl
cld
jne
sbb
shrl
ret
push
addr16
mov
inc
repnz
cld
adcl
movsl
fcoms
jecxz
push
adc
and
xchg
cmp
loope
mov
fmuls
fadd
int
notl
pop
mov
and
xchg
divb
roll
push
xchg
adc
pop
cmp
adc
inc
int
test
and
sub
cli
pop
pop
and
or
push
mulb
outsb
addr16
nop
xor
idivb
jp
and
or
test
mov
pushf
inc
rclb
pop
xor
lock
in
addl
rep
mov
xchg
fwait
mov
cmc
mov
sahf
and
adc
pop
ja
clc
sahf
scas
push
xchg
jb
icebp
into
pusha
imul
sub
cmp
lds
aad
sub
add
xchg
arpl
fdivrl
mov
fnsave
cmp
in
and
inc
inc
aam
ss
jecxz
dec
mov
mov
inc
testb
dec
aas
clc
lods
mov
rcr
pushf
js
mov
test
and
or
aam
cmpsl
jle
sbbb
shl
mov
sbb
divb
sahf
test
inc
cmp
je
mov
aam
jmp
sarl
test
mov
cmp
sbb
mov
mov
test
in
push
mov
outsb
in
stc
cs
or
mov
outsl
insl
insb
or
movsb
pop
add
add
jl
push
sub
enter
or
add
lahf
lahf
sub
fsubr
push
popf
or
mov
pop
test
xor
rolb
dec
cmp
pop
std
cmpsb
pop
xchg
cmp
dec
cmp
jg
add
jg
pop
test
mov
into
mov
jge
pop
inc
sbb
sbb
jle
insb
mov
ss
jle
scas
lcall
push
shlb
or
fwait
pop
sbb
sub
fbstp
in
sti
movsb
daa
movsb
movsl
adc
lret
adc
pop
ljmp
sub
mov
mov
sbb
mov
xchg
push
add
add
mov
xor
cmp
repnz
push
dec
mov
dec
cmp
push
adc
sub
xchg
push
test
les
mov
imul
and
daa
repz
int3
arpl
stos
orb
mov
sub
inc
out
xor
subl
es
out
cmp
ficomps
iret
cmpsb
xchg
iret
mov
push
bound
sub
pop
inc
das
sbb
out
stos
push
xchg
fdivl
cli
aas
sub
rcrl
cmpsb
sbb
mov
cmp
or
add
push
test
inc
mov
adc
fiaddl
fdiv
push
inc
scas
sti
data16
xor
pop
dec
or
xchg
or
roll
dec
loope
rcrl
sahf
fidivl
mov
dec
jne
aam
fstl
sbb
les
adc
lock
add
loopne
mov
sbb
push
inc
lods
imul
adc
mov
pop
mov
pop
adc
rolb
lock
or
aam
test
inc
stos
subl
ds
clc
mov
xchg
dec
adc
leave
cmp
push
add
ss
shll
and
loopne
adc
mov
ret
cmp
loope
dec
sbb
adc
cmp
jns
xchg
xor
dec
push
cltd
jbe
inc
and
jne
cmp
lret
pop
in
cmp
adc
jg
cmpsl
dec
cmp
adc
negb
mov
mov
xchg
sbb
push
sub
and
mov
cmpsl
sbb
fidivs
in
inc
sbbb
lret
cmp
pop
sub
xchg
ficompl
mov
outsb
and
jg
sub
and
lods
in
jb
mov
cmp
adc
or
pop
dec
sub
bnd
push
ret
sbb
inc
xor
mov
mov
xor
adc
xchg
andl
jg
mov
jecxz
push
xor
scas
jmp
shrb
fwait
pusha
push
in
cli
data16
add
dec
xor
add
lea
popf
mov
pop
push
adc
rcrl
mov
ljmp
out
data16
jne
cmp
mov
rol
hlt
sub
icebp
ss
push
pop
pop
or
sbb
adc
push
xor
fcomps
js
jl
and
push
mov
push
mov
loope
dec
pushf
pop
cmp
mov
push
jge
sub
and
sbb
je
icebp
das
fiaddl
idivl
sbb
enter
pop
icebp
add
sbb
ja
rolb
cmc
or
icebp
jecxz
push
outsb
jge
pop
cmpb
inc
ljmp
sahf
inc
jns
xorb
ret
cmp
and
js
add
lahf
cltd
movsb
push
repz
pop
pushf
dec
add
sbb
mov
jne
lret
push
mul
pop
scas
add
or
sub
sub
subl
adc
sbb
pusha
data16
lahf
sar
jle
stos
sbb
push
test
arpl
stc
test
xor
stos
or
mov
hlt
sub
xchg
out
dec
enter
push
xor
cmpsb
push
or
sbb
es
add
mov
xor
fnstcw
inc
sbb
repz
arpl
cmp
pop
mov
call
jne
or
mov
mov
mov
fwait
sbb
negl
stc
addl
jo
inc
xor
ficompl
jge
movsb
sbb
mov
pop
add
in
xchg
jmp
mov
push
inc
jp
stc
mov
cmp
repnz
sbb
adc
fs
out
cmp
pop
or
inc
pushf
pop
hlt
ficoms
lods
adc
fdivrs
ja
cmpsl
jg
fmull
mov
add
mov
call
movsl
cmc
call
push
inc
imul
cld
test
sub
shll
inc
inc
repnz
jle
adc
xor
shl
cmc
cs
sbb
sub
push
je
scas
or
rol
pushfw
inc
out
arpl
mov
xor
or
addb
cmp
or
pop
sbb
imul
cmc
lock
or
cmp
ret
jo
inc
jg
inc
jmp
jns
mov
cmpsl
cli
adcl
fcoms
movsb
xchg
out
push
lcall
data16
aad
or
addr16
jl
je
dec
cltd
adc
xchg
fwait
sbb
push
loop
sbb
push
or
shll
jns
cwtl
xchg
xchg
and
inc
dec
mov
ljmp
leave
mov
adc
mov
imul
pop
cmpsb
outsl
aam
shr
hlt
add
sahf
xor
out
ror
inc
sub
hlt
pop
pop
fwait
out
inc
xchg
and
cwtl
in
jl
das
inc
mov
mov
lret
aaa
pop
repz
lret
dec
pop
fcomp
scas
rcll
ret
xchg
in
jp
in
adcb
ret
push
jnp
push
int
and
loope
std
rcrb
scas
sbb
cmc
pop
sbb
cmp
shll
sub
dec
lea
in
or
xchg
pop
xlat
mov
lods
or
add
xor
notb
movsb
rclb
adc
fistpll
jmp
xchg
xor
fsubl
in
mov
test
mov
push
pop
je
shrb
sub
mov
loopne
inc
test
xchg
adcl
push
sub
xor
adc
sbb
sub
mov
mov
stos
add
out
dec
cmpsl
imulb
outsw
fwait
call
mov
outsl
hlt
xchg
or
adc
fsub
xlat
in
push
cmp
leave
shrl
js
add
jnp
lock
lahf
mov
movsl
xchg
bound
das
je
jecxz
les
test
ss
stos
push
popa
nop
in
fistps
lcall
and
dec
stos
aaa
fsubl
jno
ja
addb
mov
cmc
stos
out
xor
sarb
pop
mov
jmp
xchg
repz
call
cmp
mov
push
sahf
test
mov
pop
std
pop
xchg
and
scas
fiadds
xor
pop
movsl
jbe
cs
xlat
adc
fidivl
sar
jge
mov
aam
mov
sub
gs
xlat
aaa
xchg
and
jnp
jmp
mov
shr
add
cmc
adc
jo
mov
cmpsl
out
push
lret
sarl
add
stc
adc
push
add
push
out
dec
insl
jp
pop
mov
mov
cli
xchg
sbb
repz
in
xchg
mov
add
jno
add
inc
dec
mov
outsb
pop
scas
sbb
or
rcrb
repz
nop
xchg
test
add
inc
movsl
and
test
jns
pop
js
test
sahf
stos
sub
xchg
cs
xchg
jge
rcl
orb
loopne
pop
test
mov
loopne
inc
or
popf
sub
or
adc
lock
imul
push
aad
and
ret
inc
js
xchg
mov
mov
sbb
stos
inc
xchg
mov
dec
and
push
and
cmp
cli
loop
fidivl
setae
adc
pop
lret
add
push
push
pop
inc
imul
cmp
and
outsb
or
dec
insl
das
mov
shl
outsl
and
cli
adc
scas
lahf
or
jo
les
jbe
js
jge
je
push
jg
jge
dec
ja
jp
xor
push
adc
add
jo
cmp
enter
sbb
mov
sbb
xorb
mov
lds
stc
inc
mov
ficoms
sarl
push
push
xchg
jae
dec
dec
xchg
xchg
and
addr16
cmp
inc
jg
dec
cmp
lock
xchg
std
test
repnz
and
int3
arpl
in
scas
fwait
mov
pop
out
leave
sub
and
test
jno
mov
stos
into
push
cwtl
dec
sub
sbb
adc
dec
scas
and
add
or
sub
pop
nop
in
cmp
mov
loop
inc
mov
pop
mov
out
lods
dec
xor
xor
pop
pushf
xor
les
stos
mov
fldt
sbb
dec
dec
sub
call
movzbl
pop
lcall
mov
xchg
jge
les
push
mov
pop
inc
mov
mov
dec
shll
pop
adc
iret
movsb
mov
inc
pop
in
jns
not
sbb
push
xorl
pop
cli
out
mov
cltd
pusha
shlb
fsincos
insb
ret
loopne
add
dec
ljmp
cltd
movsl
sti
in
dec
sahf
testl
scas
in
push
xchg
mov
popa
movsw
adc
and
jp
dec
cmpsl
add
cmp
notl
cmp
fstpt
repz
je
xor
add
push
arpl
mov
iret
xor
inc
gs
clc
nop
xor
aas
enter
adc
xchg
pop
fidivrl
ljmp
pop
out
dec
or
xor
or
mov
or
sarb
repnz
ja
pop
outsl
addr16
adc
fnsave
cwtl
mov
gs
adc
jl,pn
add
pop
in
popf
xchg
mov
add
sbb
comiss
push
lret
in
das
loope
pop
hlt
mov
pusha
xlat
mov
into
ret
int
lcall
dec
ljmp
push
push
enter
xchg
or
inc
std
aam
ret
data16
mov
test
xlat
mov
sbb
leave
arpl
insb
sub
jne
mov
sbb
insb
sbb
shrb
out
xor
lock
stos
jmp
imul
mov
in
or
stc
mov
fisubrl
lods
push
push
sbb
mov
and
and
lods
dec
into
ret
xchg
jb
or
iret
pushf
jecxz
test
mov
mov
loope
rclb
inc
inc
rcrl
jge
fs
dec
std
pop
adc
push
mov
dec
sar
cmp
jbe
loopne
sbb
shll
adc
dec
test
and
cmp
fstl
jge
loopne
movsb
in
dec
dec
aam
sbb
pusha
int3
sbb
mov
shrl
mov
movsb
inc
mov
jecxz
ret
mov
xor
sub
aaa
cmp
dec
js
and
das
inc
and
pop
cmp
les
dec
and
rorb
fimuls
inc
roll
out
jnp
loopne
mov
xchg
add
jbe
xchg
in
std
sbb
xchg
cmc
jno
lcall
fimull
jmp
add
push
lret
xor
and
and
test
test
int
xchg
cwtl
orl
xchg
push
lcall
cmp
aaa
cltd
xchg
xor
nop
arpl
loopne
in
mov
stos
shll
sub
scas
je
xor
fdivrp
pop
shll
dec
pop
mov
xchg
sub
ljmp
mov
jl
out
inc
pop
inc
jnp
push
sbb
mov
jg
push
inc
jl
push
mov
filds
pop
cld
sub
mov
into
jmp
cmpsb
arpl
push
inc
es
fucomi
mov
dec
lea
sti
aad
imull
mov
aaa
push
add
sub
aas
cmp
call
push
fadd
call
ss
movsb
aaa
lret
cmp
and
push
loope
sbb
fsts
in
sub
mov
inc
into
xor
cmp
pop
in
pop
add
pop
jl
sbb
sbb
mov
mov
cwtl
push
sbb
push
cmp
xchg
les
xchg
sti
xor
arpl
shll
pop
push
cmp
dec
jmp
xchg
mov
test
mov
push
pushf
sbb
sbb
popf
stos
lea
lods
aad
mov
cmpsl
stc
sbb
jg
pinsrw
push
adc
out
dec
out
sarl
outsb
jbe
out
sti
roll
push
mov
pop
addb
dec
stos
mov
sub
addr16
adc
out
xchg
shl
adc
das
lds
mov
add
sbb
jne
outsb
mov
dec
std
cmp
push
sahf
jne
mov
sub
call
or
and
mov
lods
or
cmp
lret
adc
xchg
jno
pop
xchg
imul
and
popf
jg
in
mov
xor
xor
sub
data16
xor
sub
pop
jmp
flds
out
adc
adc
imul
push
jnp
fldl
or
ret
int
movsb
xor
cmpsl
xchg
pop
movsb
and
xor
pop
cs
and
aas
test
jl
sub
mov
or
xor
je
testl
je
fstpt
add
rclb
popf
inc
sub
and
shll
mov
sbbl
lock
gs
sti
pushf
jl
sbb
cmp
cs
mov
dec
mov
repz
ds
dec
xor
sub
jmp
roll
into
xchg
xchg
xor
pop
into
inc
or
sub
es
ja
add
mov
xor
sub
xbegin
mov
xor
push
out
push
lods
xor
sbb
loope
cmp
cmc
sbb
push
test
mov
cwtl
xchg
mov
jg
dec
ss
mov
rcrb
push
stos
mov
inc
push
das
dec
mov
mov
mov
pop
push
sbb
add
xchg
and
negb
push
mov
sbb
into
insb
and
cltd
mov
dec
sub
xchg
lods
mov
stc
push
push
icebp
hlt
xlat
adc
scas
mov
fs
mov
lret
ja
cs
push
out
lods
push
loope
sti
mov
mov
mulb
mov
jge
jmp
mov
and
sbb
push
add
lahf
in
adc
xor
adc
jns
aad
push
xchg
mov
mov
inc
cmovne
jno
xlat
cmp
xchg
cmp
mov
ret
or
xor
sbb
outsb
lss
ret
insb
sahf
loope
pop
popf
pop
ljmp
add
int
adc
jecxz
je
cmp
dec
mov
inc
mov
mov
test
xchg
into
cmc
scas
test
mov
jle
sbb
xchg
dec
fdivrs
dec
ja
adc
test
push
subb
push
dec
mov
nop
adc
pop
xchg
leave
mov
pop
scas
int3
lahf
add
scas
cld
xchg
push
jne
out
dec
pusha
jg
lahf
push
mov
or
add
pop
faddl
rcrb
mov
dec
mov
stos
inc
sub
scas
sbb
lret
nop
jge
fwait
ss
dec
push
int3
test
lret
rorl
jno
mov
or
sub
inc
dec
cli
addr16
sbb
pop
ret
btc
fcomps
stos
sub
xchg
les
and
cmp
push
inc
mov
sbbb
mov
outsb
arpl
pop
pop
clc
lea
and
scas
jp
loopne
sar
or
loope
arpl
cmpsb
je
mov
xchg
jp
cld
cli
aam
jb
clc
adc
mov
das
jb
sub
les
adc
mov
fstpt
jmp
cld
and
push
mov
and
push
decl
and
movsl
xchg
ja
mov
pop
mov
add
and
fldl
pop
add
mov
or
dec
mov
push
dec
jmp
pusha
cli
jae
repnz
mov
jle
push
or
pop
outsl
mov
and
adc
popa
mov
mov
mov
jns
jb
and
and
in
pop
repz
out
dec
mov
repz
inc
aas
out
hlt
adc
mov
sub
mov
sbb
push
xchg
cld
fcom
mov
movsl
add
daa
push
std
int3
xlat
aad
xchg
xchg
push
cwtl
into
and
cmp
fbld
jns
insb
mov
test
cmp
insb
icebp
sub
ret
sub
std
je
adc
push
sbb
ljmp
scas
push
adc
cld
mov
xor
test
push
shr
aam
in
arpl
xchg
cltd
jmp
or
dec
aam
pop
push
or
mov
and
loope
testb
scas
mov
dec
add
xor
enter
lods
or
popf
sarl
mov
jmp
pop
faddp
sub
adc
dec
sbb
mov
xlat
sbb
xchg
jbe
in
iret
js
mov
out
dec
cmpsl
ljmp
jecxz
inc
mov
xor
and
pop
mov
addr16
and
ficomps
cmp
test
into
mov
bound
mov
dec
scas
js
sbb
dec
imul
cmc
lods
popf
sti
inc
add
call
push
xchg
jle
sbb
and
xchg
mov
push
add
pop
mov
enter
insl
scas
jp
mov
cmp
push
sub
cmp
filds
int3
mov
stos
adc
imul
in
xchg
bound
mov
sub
pop
pop
pop
push
mov
push
nop
sbb
pop
pop
iret
mov
pop
pop
jns
cmp
nop
test
sub
inc
dec
cmp
outsb
cmp
fdivl
popa
sbb
mov
mov
mov
orb
or
cltd
rorl
sub
mov
shrl
call
shll
in
test
add
decl
lcall
xchg
sub
lock
mul
pop
leave
loop
gs
int
xchg
xor
mov
cmp
inc
loopne
xor
mov
sub
adc
das
pop
mov
inc
cmpb
test
sbb
test
imul
cli
mov
cld
sub
jne
add
or
fsub
mov
push
adc
movsb
lcall
dec
icebp
aas
and
or
jp
fisubrl
gs
mov
or
call
loope
test
repz
sub
mov
out
lcall
adc
ljmp
xor
fsubp
inc
fwait
insb
pop
iret
inc
mov
cmc
pop
and
idivb
dec
fistps
movsb
movsb
sub
mov
push
cmp
in
sbb
or
xor
mov
pop
mov
out
lea
in
and
sbb
ljmp
into
cmc
rcll
rcrl
popa
cld
and
inc
cmp
pop
sbb
and
jns
call
xchg
aam
dec
in
test
es
or
pop
fistpl
inc
ficompl
cs
push
scas
add
fstpl
cmp
pop
mov
and
rcr
and
popf
jmp
ror
or
out
mov
inc
sub
cmp
call
lods
stc
cmp
aad
mov
inc
cmp
test
iret
mov
outsb
insl
outsl
cmpsl
xor
push
fisubrl
out
add
xor
dec
push
add
dec
inc
add
pusha
aam
mov
cmpsb
daa
in
std
stos
mov
sub
sub
dec
pusha
and
mov
jg
push
and
cmpb
lea
mov
mov
mov
cld
sbb
mov
add
iret
pop
or
push
rcrl
mov
je
cmp
lretw
mov
sar
popa
push
ja
shlb
cmp
and
add
fs
or
loop
rorb
inc
mov
subl
jae
bound
and
adc
gs
cmp
xchg
cmp
pop
mov
dec
xlat
jb
js
mov
mov
sub
dec
loopne
mov
dec
in
mov
aas
je
or
sbb
cmp
mov
js,pt
or
inc
push
mov
fistpll
inc
ret
aas
jbe
cmp
loopne
cmp
sbb
js
les
mov
pop
outsl
stos
mov
sub
pop
test
loope
mov
out
aaa
inc
movsb
jb
addr16
int3
ljmp
bnd
xor
jnp
push
xchg
gs
popa
cmp
imul
mov
lret
jg
lret
hlt
and
cltd
subb
mov
test
aas
addb
divl
xor
imul
push
pop
jae
call
push
sub
or
jo
hlt
inc
addr16
pop
shl
dec
jno
adc
fucomp
scas
pop
mov
and
aad
cwtl
movsb
out
imul
or
sbb
sub
iret
imul
scas
mov
mov
jnp
lods
fcmovnu
je
sbb
xchg
mov
data16
push
mov
xor
ds
movsl
jmp
pop
imul
iret
stc
neg
sti
mov
mov
scas
pop
mov
fstpl
insl
push
lock
pop
ficomps
push
ds
push
fsubrp
int3
les
jae
cmp
sub
out
pop
push
push
pop
pop
add
and
inc
mov
dec
dec
pop
push
stos
sbb
dec
sahf
xchg
dec
mov
adc
push
scas
dec
cltd
lret
jg
xchg
or
cmc
ror
cwtl
xor
and
mov
loopne
xor
add
cmp
pop
mov
push
cld
pop
incl
xchg
das
loopne
dec
inc
mov
in
addr16
sbb
stos
in
push
mov
lcall
mov
xor
adc
and
sbb
gs
pop
adc
lods
or
xlat
insl
xchg
xlat
iret
lret
or
push
cmp
jp
ret
rclb
or
jecxz
xorl
movsl
outsb
aad
or
pop
cld
idiv
inc
dec
outsb
cli
add
push
pop
jne
dec
sub
or
mov
xor
xchg
pusha
inc
xchg
dec
movsl
mov
fwait
divl
add
cli
jg
cltd
inc
xor
test
sub
pop
jecxz
cwtl
sbb
out
movb
stos
std
cmp
pusha
stc
lods
inc
rcrl
sub
mov
mov
dec
jmp
outsl
cmpsb
push
hlt
imul
fisubs
imull
and
pop
in
sbb
out
std
out
js
fstpl
in
stos
cmp
repz
popf
jecxz
mov
fidivl
into
jnp
inc
cmc
sub
sbb
js
lods
mov
test
hlt
pop
mov
push
fldt
adc
and
mov
jb
inc
mov
aas
in
mov
jecxz
je
and
dec
pop
sarb
insb
scas
and
inc
jg
repz
test
out
jmp
rcl
sarb
mov
icebp
dec
mov
and
or
sbb
mov
std
loopne
fadd
outsb
xchg
into
divl
add
and
enter
into
jns
subb
sar
and
leave
data16
stos
sbb
cmp
adc
fwait
in
xor
loope
jns
sub
dec
inc
inc
push
iret
mov
cmp
outsb
movsl
sub
nop
jne
fistpll
mov
cmc
xlat
and
in
inc
stc
scas
mov
fld
ds
and
sbb
xor
pop
jecxz
pusha
cmp
sub
jge
loop
cs
ljmp
inc
xor
lods
mov
das
test
pop
cmp
pop
or
fidivrl
ret
rolb
fbld
xor
xor
push
shlb
sub
inc
fadds
pop
mov
lret
prefetcht0
data16
mov
mov
xchg
add
sbb
in
mov
xchg
outsl
dec
fdivs
bnd
out
sub
fwait
lret
int
sub
ljmp
mov
pop
and
mov
push
xor
pop
aas
sub
pop
pop
mov
fwait
notb
lock
jp
or
lock
loopne
mov
vpshufd
and
loopne
fcoms
and
ret
mov
lea
cmp
rclb
daa
and
mov
call
arpl
dec
adcb
inc
out
pop
iret
add
add
or
into
mov
cmpsb
stc
cmc
xor
nop
inc
push
or
and
xor
jl
dec
pop
dec
into
xor
bnd
mov
jmp
or
or
repz
pop
ljmp
add
add
mov
gs
ss
lea
and
mulb
xor
add
std
mov
bound
xor
out
push
mov
and
sub
cmp
imul
sbb
xchg
cmp
mov
mov
rdpmc
push
insl
je
push
jecxz
dec
out
das
pop
test
repnz
pminub
add
aas
sub
pop
xchg
pop
push
xor
jo
dec
popf
aaa
sbb
loop
pop
jmp
mov
add
push
rorb
clc
pop
je
or
xor
arpl
push
mov
out
dec
arpl
ror
and
or
or
fldcw
sbb
scas
cmp
push
sbb
int
jno
sub
jnp
mov
add
arpl
lods
sub
in
mov
stc
sahf
mov
and
sahf
pop
scas
xor
or
add
cmp
inc
xchg
das
xor
sbb
pop
das
push
ja
xchg
cmp
add
jnp
dec
mov
or
inc
addr16
loope
data16
mov
cmpsb
ret
lods
xchg
adc
sarb
stos
enter
cs
out
mov
mov
inc
xor
mov
and
adcl
or
mov
lods
xchg
ds
js
rclb
jbe
push
sahf
bound
mov
je
add
popf
cmpsl
mov
inc
xchg
lock
popf
out
leave
dec
mov
lahf
jns
jmp
mov
nop
cmp
jbe
mov
int
cs
push
imul
fbstp
pop
and
repnz
mov
call
xchg
pop
rcrb
insb
adc
add
cs
insb
xchg
rclb
sbb
js
mov
in
shll
inc
aas
mov
icebp
mov
arpl
lret
dec
ja
mov
lcall
fisttps
mov
outsl
mov
dec
inc
jnp
shlb
test
int
test
gs
fidivrs
shll
xchg
movsb
xor
pop
xchg
jno
pop
and
dec
push
in
cmpsl
xchg
dec
xchg
into
mov
push
jl
rcr
inc
cmp
cmpsl
enter
lea
and
sub
pop
jg
cmp
popa
sbb
inc
adc
xchg
jge
jge
shl
bound
out
stos
jns
sahf
insb
push
xlat
mov
dec
and
jb
jl
adc
mov
fs
fstl
pushl
pop
mov
adc
adc
add
add
jne
es
or
in
dec
push
push
sub
mov
clc
xchg
ja
add
mov
pop
dec
hlt
loope
add
cmp
inc
std
mov
xchg
das
cmp
jecxz
fmull
lahf
mov
cltd
insb
mov
xor
push
pop
push
bnd
ret
pop
test
mov
sub
dec
aad
jb
mov
jbe
subl
jnp
in
cmp
mov
xor
mov
inc
adc
and
push
jae
jl
sub
sbb
sub
xchg
movb
xor
fdivrp
es
adc
in
mov
xor
mov
cmc
mull
add
cmc
xchg
push
xor
xor
cmp
cmpsb
xchg
push
jge
mov
daa
int3
and
pop
xchg
sarb
imul
mov
or
les
rcr
cld
mov
cmpsl
mov
cwtl
jae
pop
leave
or
lds
mov
in
inc
mov
inc
lds
and
in
adc
out
or
jne
popf
mulb
imull
mov
pop
jbe
inc
inc
mov
mov
push
int
mov
shrl
out
loopne
push
ret
cli
loopne
lock
in
pop
ds
mov
xchg
ss
testl
pushf
insl
lods
sub
sub
call
cmpsb
add
mov
pop
ja
lret
xchg
stc
adc
pop
stos
mov
pop
in
and
in
xlat
jle
jl
call
and
popf
je
and
fdivs
out
stc
ds
es
dec
mov
mov
fs
add
rclb
push
in
test
pop
sub
icebp
fstps
push
sbb
mov
ds
mov
pop
inc
add
icebp
shll
or
sub
and
add
adc
mov
fcoms
jl
and
lods
inc
je
ret
mov
add
movsl
lea
fnsave
sti
push
loopne
cmp
lods
sub
jl
push
sub
out
cli
jmp
fmull
fs
or
js
and
or
and
arpl
popf
leave
mov
adc
sbb
out
sbb
movsb
arpl
aam
mov
subl
cmpsl
sub
xchg
pop
jne
push
mov
adc
or
stos
push
in
xchg
push
jne
adc
shlb
scas
mov
out
jmp
outsb
pop
push
adc
sub
jae
out
mov
add
add
xor
sub
dec
mov
mov
xor
xchg
in
loop
add
cmp
pop
mov
push
pop
and
push
ja
insl
out
and
xchg
sub
mov
mov
mov
or
jbe
sbb
in
xchg
ss
stos
test
decl
lds
push
push
dec
jb
mov
cs
sbb
xchg
add
cmp
rcr
test
mov
xchg
mov
imulb
out
mov
divb
gs
push
fidivl
push
jno
jl
in
adc
or
xchg
out
mov
mov
sbb
jp
pop
je
test
xchg
das
xchg
mov
mov
cmpsb
cli
std
fwait
andl
mov
or
mov
push
popf
push
push
imul
imul
inc
xlat
fidivl
push
aas
insb
add
stc
loopne
test
std
lea
add
add
jo
add
das
mov
jb
dec
sub
adc
movsb
icebp
fstps
xor
ret
xor
pop
test
test
cltd
sarl
in
mov
push
packsswb
dec
cmp
inc
lock
cmp
lods
fcoml
fildl
in
push
sahf
inc
arpl
add
sbb
fdivl
es
mov
icebp
xor
xor
cmovb
xor
fnstsw
jp
popa
lret
mov
cwtd
inc
and
sub
in
outsb
jp
loope
xchg
pushf
dec
pop
gs
fprem1
fwait
cmp
pop
imul
or
jge
scas
lods
mov
pop
mov
push
lock
push
jns
hlt
push
adc
mov
dec
int3
es
repnz
gs
xlat
addr16
jnp
or
push
push
add
push
movsl
xchg
out
daa
loopne
pusha
stos
xchg
cmp
sub
pop
into
cmp
and
aam
sbb
dec
mov
pop
or
cwtl
das
rcll
ror
loopne
aaa
jg
mov
jg
mov
xchg
jns
sbb
push
mov
inc
int
lcall
pop
stos
jo
pop
xchg
fistps
filds
fcoml
cmp
dec
xor
fnstcw
mov
jb
out
xchg
mov
repnz
mov
mov
dec
jno
movsl
or
outsl
aaa
xor
pop
cmp
fnsave
fcomip
ret
ficompl
and
adc
subl
out
adc
sbb
int
pop
mov
popa
push
rcl
aad
sbb
mov
push
inc
std
add
add
and
lret
scas
cmp
jge
push
xchg
aam
int
insb
push
lods
mov
shlb
fs
push
ss
dec
sbb
daa
lods
shll
xchg
aaa
xchg
cmp
cmpsl
das
test
jmp
into
jecxz
mov
cmp
fdivs
jnp
mov
add
dec
andl
sub
or
xor
out
pop
xchg
sub
pushf
push
shl
pop
fsub
dec
push
aam
push
jb
test
mov
sub
push
pop
lret
cmp
mov
or
xchg
dec
imul
pop
pop
aad
or
mov
jp
mov
les
enter
push
xor
cmp
sub
sbb
adc
rcrl
pop
and
xchg
or
sti
or
mov
lods
adc
lods
add
push
push
in
mov
cmp
pop
testl
sbb
andb
in
testl
or
and
jecxz
les
cltd
lret
jo
in
ja
cmp
inc
out
dec
jmp
inc
test
fdivrl
jp
test
fimull
pop
je
incl
adc
add
xchg
cmpsl
dec
sti
subb
mov
mov
jo
pushf
push
xor
jno
cltd
data16
gs
je
repnz
push
pop
repnz
loopne
lds
jns
aad
ret
hlt
dec
fwait
push
add
or
sub
jnp
aad
jmp
adc
xchg
bound
jne
dec
xor
pop
adc
xor
jne
mov
daa
push
inc
pop
xor
rorb
data16
mov
aad
lret
addl
and
pop
popf
add
jne
cmp
sarl
inc
mov
push
aam
mov
add
ss
fwait
lds
mov
mov
lcall
sub
jp
cmpsb
xchg
adc
test
pop
das
imull
push
jo
out
pop
cld
ds
imul
jmp
mov
xchg
xor
cmp
dec
les
jns
mov
mov
push
scas
dec
jmp
inc
insb
test
pop
cmp
scas
aam
dec
mov
test
xchg
mov
scas
icebp
push
dec
dec
adc
cli
aas
fdivp
repz
mov
lcall
or
jae
mov
fcomip
or
aaa
int3
lds
push
jle
sbb
mov
inc
mov
out
int
das
lods
and
fistps
jo
and
pop
fs
ret
out
mov
push
aam
pop
dec
xor
aam
loope
std
add
std
inc
mov
in
inc
inc
inc
and
mov
dec
add
stc
call
push
cmp
outsl
push
mov
ds
inc
cwtl
pop
roll
dec
rorb
cmp
popa
sub
sbb
test
xchg
sub
in
jns
fimuls
pop
test
xor
sbb
xor
add
pushf
mov
push
mov
xor
aad
jae
adc
int
push
push
call
mov
sub
pop
mov
xor
fmuls
fnstcw
jle
cwtl
or
repnz
cmp
push
fs
roll
jbe
lcall
cwtl
add
cmp
push
loop
std
and
push
fldcw
imul
or
ds
lret
inc
cwtl
jle
jge
aam
xchg
data16
jecxz
pusha
xor
sub
mov
push
rorl
push
inc
pop
cmp
out
pop
cmpsb
incb
aas
roll
mulb
sub
ret
rcrl
jmp
or
sub
jge
dec
xchg
bound
adc
sbb
push
lahf
adc
sbb
inc
outsb
xor
pushf
mov
shrb
std
out
int
and
push
ret
sbb
enter
lea
in
loope
orl
clc
in
jb
inc
push
repz
sbb
mov
nop
nop
int
xor
orl
addr16
bound
shll
or
jne
sub
adc
lods
enter
repnz
sahf
add
addr16
xchg
mov
rol
cmpsb
pop
pop
push
cs
cli
fisubs
xor
or
pop
popa
es
jmp
mov
sub
jge
shll
dec
mov
dec
outsb
shrb
fiadds
push
lock
or
add
aas
mov
mov
iret
rcll
and
fsubl
rorb
push
add
sti
pop
or
mov
out
in
es
test
inc
jmp
inc
mov
out
mov
sbb
cmpl
ljmp
inc
adc
xchg
push
femms
test
cli
xor
and
pop
hlt
dec
pushf
pop
lods
lahf
bound
lds
enter
hlt
data16
xchg
mov
pop
daa
cld
jmp
test
adc
sti
push
adc
jmp
bndstx
xchg
adc
push
lea
pop
fisttpl
int3
imul
les
sbb
nop
sbb
pop
jle
scas
aam
xchg
pop
je
cli
ror
adc
xor
push
ret
xor
mov
ficompl
aaa
inc
or
jne
sarb
xchg
lods
jb
loopne
stc
dec
sbb
out
and
sbb
sub
jge
push
mov
push
aam
loope
pop
pop
add
fs
pop
jge
addl
mov
insb
aaa
clc
add
mul
dec
xor
aas
adc
lret
mov
in
dec
xor
push
adc
adc
iret
xlat
rcrl
or
push
mov
addr16
mov
loop
and
insl
andl
inc
and
mov
mov
ja
out
jp
loope
cld
jns
cmpsb
leave
mov
dec
arpl
push
xchg
inc
mov
jle
pop
add
fwait
jp
test
andb
xchg
data16
lret
push
movsb
sbb
subl
add
dec
fs
ret
cli
jmp
roll
xor
inc
mov
jmp
lret
mov
cmc
int
mov
movsl
mov
ljmp
out
jno
push
sbb
mov
push
and
aad
cli
pop
mov
adc
sub
xchg
xchg
add
test
out
cmpb
add
jb
mov
push
cmpsl
lods
xor
outsl
sub
push
push
daa
loop
lret
pop
pop
loopne
in
add
mov
dec
clc
push
inc
push
jmp
repnz
xchg
rorl
mov
ret
lods
movsl
divb
xor
cmc
xor
pop
and
mov
stos
pop
xchg
mov
adc
mov
and
push
dec
sub
out
adc
cmp
int3
inc
mov
xlat
loopne
bnd
jns
lock
adc
clc
xchg
ds
jl
or
sbb
pop
enter
dec
push
bound
xlat
xchg
jp
sub
and
sarb
or
frstor
pusha
arpl
dec
add
pop
cmp
mov
dec
push
or
ss
add
repnz
popf
xchg
adc
cmpsb
js
scas
sub
cmp
and
stos
ljmp
sub
mov
mov
inc
sub
jmp
iret
or
stos
jmp
push
dec
out
fidivl
push
mov
test
dec
pop
pop
leave
jbe
sbb
sub
imul
les
stos
dec
cmp
xchg
inc
in
pop
jne
aaa
push
pop
lock
lcall
addb
clc
insl
stos
xchg
adc
sti
pop
lahf
lea
ret
pop
sub
hlt
sub
jmp
xor
sub
lahf
mov
decb
std
add
leave
gs
xor
loopne
out
hlt
imul
bound
mov
loop
xor
mov
cwtl
test
mov
data16
inc
mov
xchg
in
pop
cmc
cmp
sub
mov
push
lods
sub
out
aam
orl
pop
mov
cli
insl
add
mov
xchg
cmp
jnp
sbb
pop
in
xor
mov
rcrl
ss
pop
in
sub
fdivrp
adc
mov
cs
jno
data16
push
jmp
idivb
shlb
sbb
sub
or
shlb
adc
stos
test
add
add
and
pop
push
lods
mov
sub
mov
dec
ret
sbb
mov
lods
loope
outsl
in
or
pop
addr16
mov
add
imul
cmpsb
jecxz
int3
xor
iret
shlb
aaa
lods
jo
pop
pop
xchg
cmpsb
xor
jg
or
rcll
enter
out
nop
push
in
jb
mov
pop
mov
inc
aas
push
xchg
xor
and
jbe,pt
cli
cmp
mov
shr
dec
sub
repnz
enter
imul
mov
das
xchg
cmp
in
mov
xor
cmp
lods
push
cld
push
pop
push
pop
pop
and
js
repz
adcb
jmp
lcall
mov
shrb
jno
add
jae
sti
xor
push
dec
pusha
aad
ds
repz
addr16
mov
lret
xor
mov
cltd
push
mov
ret
mov
sub
xchg
lds
bound
push
fs
aam
idivb
cmpsl
jnp
loop
jp
scas
xlat
mov
or
cld
jno
sbb
rcrl
push
setne
cmpsl
leave
mov
jecxz
add
outsb
js
into
hlt
xchg
data16
push
loop
movsl
pop
cmp
aad
into
ficoms
mov
mov
hlt
gs
jae
test
push
out
fldcw
pop
shlb
mov
lret
adc
add
pop
fld
adc
insl
cmp
sbb
sub
jmp
int
cmp
loopne
das
cltd
jle
dec
xchg
pop
dec
xchg
ds
aam
rorl
mov
jne
repz
outsb
sbb
out
stc
mov
pop
test
shl
pop
and
jg
fnstcw
shrb
dec
add
add
adcl
sub
pop
out
fdivl
enter
xchg
data16
aam
rorl
popf
clc
jmp
stc
cmp
jmp
std
fnsave
jne
pop
lods
out
repz
fisubl
xchg
jl
push
shrb
mov
stos
mov
clc
mov
lods
dec
and
call
notb
dec
cmp
shrl
in
sub
adc
hlt
push
addr16
aaa
pushf
lret
cmp
nop
leave
mov
sbb
stc
push
test
xchg
mov
shrb
xlat
push
dec
mov
jp
leave
ret
enter
xchg
adc
sbb
shrb
sahf
les
adc
out
pop
mov
cmp
pop
rorb
or
ret
mov
sub
leave
divb
xchg
push
pop
adc
jmp
adc
test
aas
hlt
inc
in
iret
or
push
pusha
outsb
sbb
xor
mov
push
sbb
mul
mov
or
dec
xchg
sub
pop
inc
aam
addl
dec
repnz
add
fwait
push
cmp
cltd
in
fisubrs
or
repnz
pop
pop
shlb
stos
fisttpl
jae
ljmp
movsb
sbbb
xor
adc
xchg
out
push
popa
movsb
iret
cld
sbb
negl
std
inc
push
gs
mov
lret
dec
popa
insb
inc
sub
fisubrl
sbb
inc
jmp
lret
das
shrl
sub
jl
fcomp
jo
push
push
idivb
mov
out
cmp
push
push
rorl
mov
xchg
cltd
dec
pop
inc
sahf
or
gs
jmp
out
cld
fs
shl
sub
xchg
and
and
jmp
push
push
rolb
data16
popf
pop
xchg
cmp
xor
lods
or
rclb
call
cli
std
mov
add
xchg
and
dec
mov
xchg
xor
in
call
scas
inc
adc
lea
mov
cld
xor
shlb
out
or
outsb
cli
cmp
and
xchg
xchg
call
lcall
inc
dec
sub
lea
into
jmp
cwtl
mov
scas
jo
adc
mov
mov
int
ljmp
int3
dec
push
clc
sbb
cltd
clc
outsl
out
cmp
add
and
dec
mov
add
mov
or
push
xchg
jecxz
inc
inc
xor
mov
stc
sbb
dec
xor
inc
aas
scas
rcll
rol
imul
dec
notb
stos
fisttpl
das
pop
movsl
jmp
leave
repz
call
xchg
cmc
jge
mov
js
push
bound
xchg
decl
pop
mov
mov
jecxz
loop
mov
outsl
add
mov
lret
bound
and
popf
xor
jbe
pushf
lock
lods
sbb
aas
jno
mov
add
jbe
dec
push
rorl
add
jbe
and
pusha
dec
mov
popa
mov
cli
nop
int3
mov
shlb
fdiv
dec
push
mov
inc
pop
sahf
cs
push
aad
mov
ret
popf
adc
cmp
leave
sbb
lock
rcrb
xlat
xor
ds
jp
xlat
jne
std
mov
lods
loope
loope,pn
xchg
rcl
outsl
jno
add
cli
cwtl
repnz
ret
dec
jae
test
pop
in
xchg
jl
hlt
ret
aad
aam
push
pushf
outsl
nop
pop
inc
les
push
fs
jg
wrmsr
movsb
repz
lret
xor
jle
cli
mov
xor
repnz
mov
mov
imul
pushf
cmp
aam
fs
xchg
adc
jle
lret
jbe
inc
adc
add
lock
inc
sbbb
gs
fiaddl
mov
sub
mov
icebp
or
jb
add
xchg
fucomi
mov
loope
popa
add
adc
sub
xor
lds
jb
jo
enter
mov
xor
ror
dec
call
sub
movsb
pop
inc
dec
adc
into
mov
mov
shrb
call
in
add
mov
adc
push
pop
pop
xor
mov
ficoms
cmp
in
adc
sarb
xorl
sub
add
mov
aad
mov
cmpsl
dec
lock
lret
imul
mov
lcall
or
pop
orb
outsb
push
cmp
xchg
adc
scas
stc
daa
aas
out
fstpt
pop
sub
cli
addl
pop
add
test
aam
test
dec
ds
cltd
adc
push
lahf
or
hlt
lods
ret
push
pop
iret
pop
stc
add
fldcw
sti
and
ss
dec
mov
insb
scas
lds
cmp
sub
xchg
mov
cld
int
dec
push
add
and
imul
pusha
sbb
enter
lea
mov
or
fcoml
pop
adc
mov
incb
and
cli
js
fwait
push
das
fdivs
mov
mov
dec
repz
fisubrl
mov
mov
bound
mov
out
inc
fwait
lock
xor
sbb
cld
movsl
fdivr
push
bound
into
cmp
xor
jno
jg
push
xchg
js
lret
adc
ds
mov
pop
pop
ficoms
xor
mov
mov
jmp
ficoml
pusha
sahf
loope
movsl
dec
jle
push
pop
mov
mov
inc
push
add
stc
inc
bswap
and
mov
sbb
lret
repz
push
sub
aam
lods
in
add
cs
call
and
sti
add
dec
movb
scas
add
ja
test
lcall
cmp
cmp
xor
fsts
mov
cld
aas
shr
push
cltd
mov
scas
enter
enter
add
and
idivl
popf
cli
lods
jns
test
cmovo
sub
ret
std
mov
lret
fsub
jg
sahf
nop
pop
inc
or
mov
sbb
or
lcall
mov
adc
mov
cmp
pop
jg
push
lahf
popf
jo
push
mov
jbe
dec
ficompl
insb
xchg
outsb
out
ss
xor
xor
mov
mov
push
mov
iret
shlb
movsl
cmpl
fisubs
mov
pop
not
repz
xor
sub
and
xorl
sub
push
xchg
imul
stc
pushf
adc
adc
inc
jg
in
xor
pop
aam
mov
clc
and
jae
call
pop
loope
jge
es
scas
mov
jne
xor
push
lods
pop
ss
shlb
fmuls
cmc
fstpt
inc
sub
jge
scas
pop
inc
mov
ja
rolb
sbb
mov
cmp
cwtl
imul
shlb
test
cmp
cmp
inc
rcrb
scas
xchg
dec
mov
mov
lret
lahf
mov
in
popa
push
jp
cmp
subl
into
sub
jb
ljmp
shrb
sti
pusha
push
mov
add
mov
push
daa
sub
mov
loope
mov
pop
fisttps
rcll
cmp
pop
movsb
mov
adc
dec
jge
sub
push
push
jbe
cmp
outsl
dec
mov
repz
cltd
movsb
push
xor
ss
mov
sbb
or
sbb
test
add
sbb
out
imul
inc
aad
dec
adc
fs
rcl
sbb
cltd
test
divb
push
scas
loope
pop
pop
xor
shrb
in
mov
loopne
add
push
push
addr16
lahf
fwait
int
dec
data16
fildll
adcb
push
lret
fsubr
jbe
test
mov
scas
int
pop
pop
dec
mov
and
pop
pop
mov
mov
xor
out
fwait
dec
jmp
add
in
jnp
cs
jl
cmp
adc
pop
out
pop
out
and
mov
test
mov
and
sarb
insb
pusha
xor
cmp
imul
test
cmp
pusha
mov
adc
inc
mov
mov
cmpsb
lea
sbb
lret
mov
mov
mov
outsb
outsl
rcrb
mov
ja
push
notl
orl
dec
neg
mov
mov
mov
xchg
cltd
push
push
daa
dec
or
pop
mov
sub
xchg
cli
lret
inc
or
mov
mov
aaa
stos
es
add
rorl
mov
inc
push
outsl
lcall
loope
sub
xor
mov
cmp
shll
dec
loopne
push
adc
faddl
test
mov
inc
sbb
xchg
ja
push
pop
addr16
iret
aas
and
fidivs
sbb
ds
xor
push
inc
add
gs
dec
aaa
or
not
icebp
add
mov
mov
insl
mov
es
popf
xchg
out
movsl
inc
mov
sbb
fildll
pop
sub
jmp
js
mov
jmp
jl
cmpsb
rorl
aas
leave
imul
fiaddl
adc
sub
in
test
lret
out
inc
stos
mov
push
out
repz
add
mov
xchg
mov
aaa
jnp,pt
div
test
dec
arpl
insl
int3
aad
sahf
fcoms
xchg
addr16
and
inc
je
in
jns
popf
push
fnop
shll
hlt
or
imul
push
or
mov
inc
add
sbb
cmp
sub
shll
lret
je,pn
mov
in
outsl
jae
sub
rorl
test
mov
push
pushf
and
jbe
lret
xor
in
imul
shrb
sti
out
aam
dec
lret
or
mov
movsb
loop
ja
cwtl
adc
cs
fs
out
xor
jbe
adc
clc
xor
and
add
inc
pop
repnz
fmuls
lahf
jg
sub
movsb
jp
sub
sarl
pushf
lcall
cmp
test
imul
push
dec
popa
ret
pop
sarl
loope
sub
test
mull
ret
ljmp
jo
sbb
inc
hlt
lock
mov
sti
push
mov
jle
jb
jmp
push
clc
iret
push
subb
adc
sarl
xor
xor
cwtl
je
inc
xchg
sarl
ret
jbe
mov
xchg
mov
mov
adc
xchg
pop
inc
enter
lock
mov
popf
leave
es
add
jae
xor
out
lahf
jp
aam
add
es
into
and
lods
lock
sbb
fisttps
pop
sub
cli
outsl
mov
and
inc
pusha
add
mov
bound
fimuls
jmp
popa
jecxz
pop
mov
iret
jg,pt
outsb
jne
xchg
push
sub
push
out
sbb
jnp
jno
in
dec
aaa
mov
clc
mov
jno
xor
mov
js
movsl
cmp
leave
mov
test
xchg
jo
mov
outsb
jns
pop
or
mov
adc
adc
fmuls
inc
out
negl
xor
js
inc
inc
jg
int
mov
push
sti
cmc
stos
outsb
mov
jae,pt
andl
in
ret
and
adc
inc
lret
and
fwait
add
and
test
shlb
push
mov
cmpsb
adc
bound
lea
cmp
mov
mov
xor
mov
jge
add
push
jge
fdivrs
sub
lds
imul
inc
mov
push
mov
fs
mov
sbb
cmc
add
icebp
das
enter
add
sbb
enter
push
outsl
jns
or
push
dec
inc
dec
popa
jecxz
iret
xor
lds
out
fdivl
sub
adc
push
lret
and
sub
std
fmull
jno
sahf
mov
inc
data16
cwtl
shl
dec
fstp
xchg
adc
call
out
adc
jne
inc
jge
pop
lea
push
pop
out
repnz
and
jne
xorl
je
loop
imul
int
into
mov
pop
stos
or
scas
arpl
repnz
and
adc
repnz
pop
dec
fcomi
mov
xchg
insl
fwait
rcrl
jecxz
pop
gs
das
adc
dec
mov
push
movsb
push
cmp
sub
imul
xchg
gs
inc
xor
push
xor
sbb
adcl
lea
push
call
mov
das
sub
cmp
add
xchg
out
adc
sub
sub
mov
sarl
pushf
sbb
mull
add
popf
or
mov
test
inc
cld
aaa
xchg
mov
mov
rcrl
lods
jecxz
xor
jg,pn
lcall
cmp
popa
push
ret
dec
test
and
and
pop
imul
test
sub
jg
jg
push
cmp
inc
lcall
mov
cltd
test
xor
inc
push
stc
push
push
mov
mov
inc
xchg
or
add
cmp
dec
xchg
lcall
mov
std
add
les
out
mov
addb
mov
jne
loopne
addl
and
pop
stc
jb
xchg
jnp
lods
and
ret
sub
push
fdivl
fstpl
cmp
cmp
jne
xchg
lock
or
leave
imul
sbb
ljmp
push
or
xor
hlt
fmuls
push
push
xchg
push
or
xchg
sbb
icebp
pop
movsl
sub
in
lret
fsts
aam
pusha
pop
add
pop
adc
cmpsb
cmc
adc
movsl
add
add
jne
inc
imul
gs
out
xchg
xor
push
cmpsb
and
and
xchg
pusha
mov
pop
test
imul
pop
addr16
js
inc
in
out
lds
jle
jb
cmpb
sbb
add
jb
and
pop
cmpsb
dec
mov
xor
ja
xchg
mov
jae
rcrl
in
mov
xor
dec
rol
mov
jg
shl
iret
or
outsb
jmp
lcall
adc
pushf
mov
push
icebp
jne
pop
dec
add
jbe
and
nop
testl
outsb
lcall
jne
adc
fldcw
jbe
pop
add
sbbb
sbb
inc
je
pop
lret
add
dec
stos
pusha
cmp
mov
stc
xlat
das
aam
pop
mov
cmp
mov
es
fwait
or
mov
inc
les
jo
fisttps
fmull
adc
push
mov
sbb
mov
shll
ds
imul
push
loope
push
adc
inc
test
mov
shl
add
dec
add
adc
call
lods
inc
nop
in
lcall
or
sbb
pop
incl
mov
cld
rcrl
bound
jnp
cmp
add
inc
mov
sbb
test
jg
insl
cwtl
sbb
mov
push
or
arpl
int
or
ja
cmp
mov
push
or
lret
arpl
rcll
ror
lea
xlat
fcmove
into
cmp
sbb
rcr
xor
adc
and
push
test
adc
dec
lock
jl
xchg
lods
aas
jmp
or
ljmp
mov
dec
movsb
inc
push
inc
repz
mov
in
cmc
jle
jp
xor
jmp
ficoms
cwtl
add
mov
daa
cmpsb
or
test
xchg
adc
lea
fwait
lea
inc
bnd
inc
push
push
into
ret
scas
mov
sub
push
es
rcpps
mov
or
cmc
mov
cmp
cmp
sbb
mov
jb
jecxz
jmp
mov
sarb
xchg
sub
or
jbe
mov
inc
repz
inc
xlat
push
add
sbb
aas
loopne
xor
les
mov
outsl
jbe
orb
mov
insb
loopne
clc
pop
or
adc
sub
mov
aad
xor
mov
jnp
fisubrl
inc
negl
cwtl
arpl
lcall
ficoms
inc
jecxz
adc
inc
or
int
inc
pop
jp
mov
xchg
in
cmp
shll
inc
push
icebp
jo
cmp
sbb
js
dec
xor
xor
popa
lock
xor
xor
pop
adc
int3
enter
cli
gs
cli
pushf
out
lods
sahf
add
in
sbb
mov
in
mov
aam
mov
adc
repnz
pop
stos
pop
inc
pushf
pop
dec
bound
outsl
sub
mov
aaa
popf
jge
xor
or
or
dec
inc
xchg
jmp
mov
faddp
sbb
jmp
inc
lcall
lods
xchg
sbb
fldln2
fdivs
movsl
out
lea
pop
fnstenv
mov
mov
dec
pop
lock
cmp
add
push
sbb
push
outsb
aaa
out
mov
mov
adcl
mov
mov
sti
adc
jb
adc
mov
cwtl
sbb
and
mov
adc
jnp
daa
mov
add
cmpsw
jmp
fimull
test
adc
cltd
push
lahf
pop
repnz
mov
je
pop
call
adc
ds
stos
push
sub
mov
or
arpl
xchg
lret
and
jecxz
dec
dec
imul
push
arpl
push
cmp
repz
and
aam
jae
push
outsl
sahf
fstpt
inc
lock
mov
in
js
add
ljmp
mov
mov
xchg
movsl
fnstcw
dec
cld
mov
fwait
add
push
ret
jo
lret
adc
xchg
cmpsb
mov
stos
jnp
push
ret
sbb
pushf
pushf
iret
out
sub
lcall
enter
cmpsl
cmp
inc
or
mov
mov
or
push
sahf
movsb
pop
push
mov
pop
insl
or
imul
lds
lret
ds
test
pop
pusha
lock
xchg
cmp
andl
in
add
jnp
daa
ret
pop
movl
adc
xor
push
push
pop
add
lahf
fcom
orb
xchg
jbe
lahf
xor
cmp
dec
in
mov
dec
cmpsl
xor
bound
ja
scas
mov
cmp
movsl
das
mov
mov
cmc
push
mov
loop
pop
mov
les
rcrb
sbb
jge
adc
test
cmp
push
jmp
mov
inc
pop
nop
add
je
xchg
sarb
pop
mov
cmp
loop
test
lcall
sub
sbb
in
add
call
mov
int3
outsb
in
xor
inc
and
xchg
call
sarl
negb
cmpsl
pop
mov
dec
xor
and
sbb
jnp
add
and
and
fdivrl
loope
stos
pushf
mov
inc
pop
inc
pop
in
pop
mov
sub
inc
movsb
pop
hlt
pushf
testb
out
stc
scas
push
fldenv
pop
adc
call
out
jns
pusha
cmpsl
jle
and
jle
pop
adc
jge
mov
mov
mov
lea
jge
mov
aaa
mov
sahf
and
jge
pop
and
scas
push
add
dec
cmp
lods
insb
jmp
rolb
jmp
rclb
in
push
adc
clc
inc
xlat
mov
aas
hlt
cmp
cmpb
jge
jle
jno
aam
pushf
lcall
ret
or
into
ljmp
fisttpl
inc
inc
cmpsl
icebp
pop
mov
cmpb
fbld
aas
fistps
mov
sarb
add
inc
out
jmp
testl
xchg
pop
xlat
std
rep
mov
pop
outsl
enter
fs
repz
xchg
mov
dec
inc
inc
jge
dec
lods
notl
mov
and
fs
fs
call
cmp
in
stos
push
push
loope
fcmovnb
pop
pop
test
xchg
add
pop
fdivrl
es
pop
push
popa
mov
xor
xlat
pop
jmp
enter
outsl
fidivrl
addr16
movsb
jbe
nop
jbe
stos
push
lret
mov
sbb
cmp
movl
pushf
imul
push
push
pop
or
and
adc
fmuls
jne
test
lea
xlat
add
rcl
outsb
push
cltd
pop
iret
adc
gs
clc
or
add
push
lcall
xchg
mov
xchg
movsl
push
mov
stc
dec
cwtl
adc
out
inc
scas
aam
fildl
pop
lds
xor
das
cltd
imul
push
lcall
push
fildl
enter
and
xor
lds
or
fwait
daa
inc
cmpsl
pop
xor
imul
shr
xor
inc
jbe
fwait
rclb
push
aam
xor
adc
push
icebp
jmp
add
in
pop
cmpsl
mov
rol
aad
scas
rcrl
push
xchg
xchg
jecxz
mov
add
dec
sbb
loope
dec
iret
mov
in
and
shlb
test
xor
in
fldt
push
hlt
bound
jecxz
imul
push
jecxz
fs
push
xor
in
enter
dec
cltd
push
push
xchg
in
adc
stos
mov
test
decb
fstps
fiadds
jns
aad
jmp
jp
mov
les
leave
bound
mov
aad
add
orb
imul
gs
cmp
sub
sar
jns
pop
xor
inc
iret
push
push
sahf
xchg
aas
cmpsb
or
cmp
test
cmp
loope
fbld
xchg
or
mov
enter
or
nop
fstpt
pop
pusha
popa
out
push
push
jl
loope
mov
push
mov
call
xor
xlat
cld
insb
in
sarl
inc
pop
xchg
jmp
mov
pop
lahf
jmp
mov
gs
clc
repz
lds
push
push
lods
cld
xor
cwtl
gs
add
stc
xchg
bound
ret
sub
std
push
repz
daa
and
test
sbb
inc
jg
ja
push
mov
xlat
jb
stos
popf
je
ficomps
mov
and
repnz
shll
data16
orps
and
lahf
sbb
pop
xor
inc
inc
cmpsl
stos
imul
cmp
jecxz
pop
jo
xchg
ror
dec
movb
sub
mov
rolb
int3
imul
push
adc
xchg
loop
inc
std
loopne
mov
rcrb
pop
pop
mov
repz
xchg
or
aam
mov
jno
js
test
fstpt
lds
dec
jno
fadds
lods
sbb
fs
push
cmp
aad
or
lret
jmp
out
sub
or
jmp
push
les
int
ds
cmp
mov
sahf
xor
in
ljmp
int
pop
mov
cltd
imul
fstps
inc
cmc
adc
fcmove
decl
inc
jl
push
ret
imul
jge
push
inc
lods
dec
cmp
aad
lcall
add
lahf
mov
js
inc
ret
and
push
mov
ljmp
lea
or
mov
lcall
mov
jg
mov
xor
ja
xlat
mov
add
dec
les
jb
cmpb
popf
arpl
scas
mov
pusha
stos
jle
pop
jg
push
dec
insb
jg
nop
and
xor
cmp
in
cmc
mov
and
sub
ss
loopne
sbb
xor
int
xor
scas
sahf
mov
push
insb
jecxz
sbb
jnp
inc
cmpsl
das
insb
jno
movsl
rolb
push
mov
jecxz
gs
adc
mov
inc
aad
addl
stc
and
popf
insb
sub
flds
lods
sub
jo
neg
dec
or
mov
inc
jge
call
stos
push
popa
fcmovnu
fisttpll
into
pop
xor
pop
jecxz
sub
mov
lahf
cmp
out
cmp
add
insl
xor
push
insl
inc
cltd
leave
insb
test
sbbl
add
dec
pop
push
cld
lahf
ret
inc
xchg
inc
imul
stc
pop
pop
cmp
aam
add
lret
pop
xchg
fistps
sub
rolb
add
iret
cltd
sti
adc
xchg
and
out
mov
mov
arpl
cmp
push
fisubrl
xor
add
sbb
mov
mov
ds
lock
fsin
pop
repz
mov
pop
subl
cli
pushf
cmpsb
ljmp
dec
mov
mov
lds
adc
out
movl
lret
pop
fbld
loope
bound
lret
subl
jp
push
sub
sti
push
aad
cwtl
out
sub
mov
xlat
sub
mov
in
loopne
adc
fdivs
in
jl
jns
or
add
popf
test
cmp
mov
and
lret
pop
cmpsl
imul
jge
sbb
pop
pop
push
outsl
mov
sub
stos
jg
xor
out
sbb
iret
pop
push
sahf
sbb
les
jmp
sub
stc
add
jl
xor
ja
iret
mov
scas
xor
loope
push
das
xlat
jl
cmp
ret
outsb
xor
xchg
push
popf
jne
out
ds
pop
scas
ss
std
addb
into
push
je
ja
cmp
test
aas
push
bnd
mov
rcrl
pop
add
int
out
pop
cwtl
mov
and
sub
fadd
addr16
test
scas
aam
mov
add
shl
pop
aaa
fndisi(8087
inc
push
pop
sahf
inc
aaa
popa
std
in
dec
cmpl
cltd
or
xchg
xlat
arpl
and
fbld
pop
mov
ret
mov
sub
push
call
jne
popl
xor
int
repnz
mov
or
test
jnp
pop
push
adcl
pusha
push
dec
inc
pop
ss
mov
jle
fucomp
scas
pushf
loop
cs
pop
jne
dec
pop
add
mov
movb
push
movsl
xor
adc
push
out
mov
inc
fdiv
dec
insl
cmc
add
xor
lcall
ljmp
rcl
test
lret
jbe
add
bound
mov
hlt
ds
insl
lods
icebp
sub
lods
orb
ret
cld
test
into
push
jecxz
mov
mov
ret
jge
mov
iret
dec
out
dec
add
xor
cwtl
mov
in
pop
sub
pop
fs
stc
push
add
xchg
sahf
and
inc
mov
sub
fistps
xorl
adc
jl
adc
popa
jle
aam
push
mov
shll
xor
loope
std
mov
call
adc
das
pop
xor
lods
cli
inc
in
adc
adc
sub
fst
inc
xor
inc
add
fstl
cli
lea
inc
lea
dec
mov
mov
jae
sbbl
jnp
cli
pop
int3
jp
mov
dec
xchg
mov
xchg
or
add
loop
xchg
push
add
mov
add
loopne
adc
lahf
test
aad
jne
cltd
inc
inc
push
pushf
push
daa
cmpsb
lods
int
inc
rcr
push
notb
or
xor
stos
sub
dec
addb
mov
gs
jp
adc
pushf
jns
sbb
and
mov
addps
jno
pop
call
cs
adc
mov
aad
or
inc
adc
inc
insb
dec
add
aad
xchg
stc
addr16
test
call
adc
adcb
imulb
push
add
pop
loop
mov
sub
pop
divl
sub
push
loop
lods
leave
jecxz
stos
int
inc
fdivrs
imul
fisubs
xor
and
mov
sar
stos
xor
jge
sti
xor
fcmovbe
xchg
cs
jle
and
push
test
insb
cmp
mov
mov
lds
pop
hlt
cmc
add
mov
int
inc
xchg
dec
mov
into
enter
pop
jmp
xor
nop
push
sarb
arpl
aad
push
or
pusha
push
sahf
nop
mov
into
adc
inc
fucom
gs
movsl
icebp
pop
lea
lock
sub
dec
movsl
adc
insb
sbb
push
mov
imul
inc
aam
add
sbb
cmpsl
fisubrs
dec
sbb
arpl
xchg
loopne
mov
cmp
mov
dec
leave
xchg
xchg
and
ljmp
cwtl
dec
jae
stos
jmp
decl
inc
mov
xchg
iret
pop
jg
inc
xor
dec
mov
xor
dec
data16
insb
adc
in
decb
push
push
dec
mov
loope
inc
arpl
fcoms
nop
dec
push
mov
adc
pop
jnp
pop
cltd
jne
push
shlb
popf
movsl
adc
leave
sub
push
aad
or
mov
inc
sub
js
mov
iret
dec
mulb
cld
icebp
loope
jmp
pop
xchg
aaa
enter
ret
pop
movsl
xor
inc
mov
into
int3
adc
dec
lret
jno
cmp
nop
in
xlat
and
leave
scas
sarl
cmp
aam
jp
jne
andl
shrl
repz
pushl
push
fcoml
int
pop
and
push
mov
fdivs
pop
test
mov
pop
pop
cwtl
loop
cwtl
push
pusha
inc
roll
lods
hlt
cmc
lods
xchg
repnz
or
inc
inc
xchg
sub
xchg
rcll
cmp
dec
loope
jne
adc
and
mov
lods
and
sbb
test
mov
or
aas
jbe
xchg
sub
push
add
jnp
mov
push
repz
and
ds
mov
cld
cmp
ds
jnp
pop
xchg
movsb
inc
test
cmc
sbb
push
lea
jle
loope
shlb
cmp
cwtl
xor
stos
in
das
scas
dec
pop
lret
insb
adc
lret
loope
scas
shr
into
aam
fisttps
orl
pop
and
adc
imul
pop
or
outsb
add
cmc
push
jns
adc
cmpsl
xchg
es
imul
add
adc
push
cmp
cmp
movsl
sbb
bound
pop
jl
xchg
ljmp
test
dec
sar
out
mov
outsl
in
stos
add
hlt
iret
cvtdq2ps
clc
out
cltd
or
pop
push
aad
push
ret
mov
aam
int
push
aaa
jp
xchg
imul
push
and
jecxz
fidivrs
in
pop
dec
sub
xchg
imul
in
sbb
fcompl
xchg
push
xchg
rcll
mov
add
addr16
outsb
cld
mov
cli
adc
outsl
fadd
or
leave
cmp
xchg
sbb
cmp
cmp
sub
sti
int
add
je
int3
test
push
push
jecxz
icebp
push
out
cmc
mov
fs
addr16
push
lods
mov
jp
test
cmp
dec
daa
rcll
push
mov
push
sub
push
xchg
sub
scas
inc
js
test
cmp
subb
jo
sbb
mov
or
aad
dec
outsb
xchg
ja,pt
and
pop
cld
jb
hlt
hlt
cmc
dec
xor
push
lock
mov
jl
stc
repnz
inc
sbb
add
mov
sbb
sbb
pop
mov
cs
mov
shr
add
pop
popf
inc
lahf
icebp
lahf
dec
xor
mov
add
xor
jp
or
jmp
das
test
pop
sub
fdivrs
xchg
pop
sub
fwait
jno
sub
mov
xor
dec
mov
in
mov
cltd
test
add
mov
adc
testb
imul
imul
call
or
test
fwait
push
mov
push
inc
pop
stos
xor
pop
jnp
fistpll
cmp
cmpsl
jle
scas
scas
jmp
inc
xchg
sbb
and
bound
lods
and
jp
lcall
jnp
push
dec
dec
aam
andl
and
jp
sub
sbb
outsb
adc
mov
sub
or
adc
jge
or
lahf
pop
inc
sbb
jne
xchg
lds
mov
loop
sbb
addb
pop
lret
in
inc
imul
out
fadds
movsb
decb
and
xor
mov
xchg
loop
movsl
add
adc
testb
test
or
js
ds
test
and
mov
in
add
sub
sub
or
sti
jbe
cmp
xor
mov
cmp
call
es
sbb
ja
jb
jbe
ror
imul
stc
jle
mov
mov
aam
testb
sub
lock
insb
insl
dec
icebp
pop
push
cwtl
mov
push
pop
cld
xchg
pop
in
pop
je
xor
cmp
sub
rcl
and
stc
cltd
pusha
and
sub
idivb
fs
add
mov
lods
aad
dec
mov
stos
xchg
out
in
jo
xchg
mov
shlb
dec
sub
aam
ds
arpl
jb
push
inc
mov
mov
dec
mov
or
aaa
test
sub
lds
fsts
adc
pop
dec
cli
arpl
sub
pushf
mov
sbb
xchg
or
mov
leave
stos
inc
jp
dec
jbe
int3
popa
ljmp
jno
mov
jnp
fwait
add
popf
sub
pop
xchg
cmp
insl
fisttpll
sub
int3
ljmp
fsubs
subl
pop
lea
xor
rep
sbb
out
push
outsl
cmpsb
test
adc
rcl
jae
xor
aaa
data16
stos
in
push
lock
jbe
iret
aaa
add
sbb
lea
shl
sub
rclb
push
cld
lods
lea
add
pusha
add
cld
mov
lcall
add
pop
xchg
shlb
mov
jecxz
and
cltd
lret
sub
jns
stos
aaa
sub
push
jecxz
mov
orl
pop
lds
cwtl
xchg
je
and
lret
aam
movsl
push
mov
je
shrl
sub
hlt
lahf
pop
scas
mov
negb
les
iret
cmc
pushf
jae
pop
xchg
fstl
test
or
pop
mov
inc
lcall
fbstp
aad
dec
in
inc
dec
dec
jmp
xchg
xchg
sbbb
sub
pop
dec
test
add
gs
mov
xchg
pop
or
mov
int
addr16
out
dec
push
subl
sbb
int
pop
xchg
xchg
sub
mov
into
in
adc
add
mov
icebp
in
or
sbb
fwait
insb
sbb
sub
mov
mov
sub
push
orl
cltd
adc
dec
jg
mov
in
mov
inc
sahf
aad
rcrb
aaa
cs
insl
or
sbb
jno
call
adc
or
out
idivb
orl
and
arpl
pop
mov
sti
les
jmp
inc
lds
jo
pop
mov
sbb
or
jbe
jo
paddusw
stos
add
push
cmp
outsb
out
pop
jge
xor
push
shr
push
loop
or
cltd
dec
negl
xor
sbbb
or
xor
xlat
jle
inc
sub
cmp
push
into
leave
into
cmp
test
mov
hlt
addl
js
fwait
push
in
subb
rcrl
int
xchg
inc
push
adc
cmp
push
adc
aaa
and
andb
mov
inc
subb
lea
cmc
sahf
test
jmp
or
nop
inc
pop
lods
scas
xchg
cltd
mov
inc
lahf
sahf
xchg
lcall
test
mov
sbb
popa
rcll
rolb
fsubrs
outsb
add
pop
xchg
or
inc
inc
fwait
jnp
addr16
fmuls
or
les
into
and
inc
push
shl
push
jne
sbb
pop
mov
adc
mov
push
stc
fwait
dec
xchg
cs
std
cmc
xchg
or
sub
add
int3
xor
gs
sub
cltd
push
inc
lret
fiaddl
adc
lahf
or
into
pop
sub
dec
xorb
mov
mov
repz
xchg
in
mov
cmp
add
test
mov
and
mov
fidivrs
mov
mov
sarl
into
das
mov
orb
fwait
pop
push
adc
fcoms
push
mov
jno
sbb
or
into
mov
fstp
inc
fsubrs
das
jbe
xchg
jge
test
pop
inc
lods
push
in
pop
int
jp
push
jl
mov
and
push
fistps
scas
aaa
lret
xor
pop
jmp
lods
dec
pop
sub
dec
stos
fnstsw
movsl
xor
rorb
inc
sub
jne
adc
xchg
jg
ljmp
sub
sub
shlb
jge
and
inc
popf
neg
stc
or
sub
dec
cli
xor
fldt
mov
or
pusha
mov
in
pop
xchg
sbb
popf
xchg
or
int
loopne
push
and
movsb
les
dec
mov
sub
sub
push
pushf
and
scas
mov
outsl
stos
sub
rcrb
jno
popf
adc
ja
test
inc
mov
sbb
outsl
mov
imul
push
mov
cmp
mov
ficoml
dec
adc
test
sub
aas
mov
pcmpeqb
push
jp
push
and
pop
add
adc
out
adc
or
inc
mov
lcall
jg
xchg
fsts
pop
nop
rcr
orl
out
fstpl
in
mov
aam
clc
int3
repnz
in
out
sub
xchg
pop
xchg
or
shl
and
inc
scas
dec
rcll
andl
adc
cs
arpl
sbb
aad
mov
clc
dec
inc
test
cmc
mov
movsl
ja
dec
jmp
call
push
and
fdivr
mov
dec
dec
mov
int3
leave
cmp
aam
push
xchg
xor
iret
xchg
sti
jno
sbb
mov
popa
or
test
outsb
ljmp
roll
cmp
and
dec
lret
fisubs
lods
jnp
xchg
xor
movsl
cld
xor
int
imul
mov
loopne
and
imul
xor
leave
mov
in
pop
fwait
sbb
mov
push
inc
push
cs
xor
fs
pushf
lahf
das
pop
jecxz
sbb
insb
cmp
or
xor
sbb
mov
repnz
iret
jmp
int3
cmp
mov
out
jno
outsl
fisttps
fstpl
push
xchg
adc
xchg
push
in
inc
jno
mov
mov
fnstenv
insb
fiaddl
jp
dec
ret
push
int3
in
in
lock
mov
sub
sbb
loopne
cmpsb
adc
mov
scas
daa
mov
mov
pop
lock
pop
movsl
lods
gs
jle
or
imul
sbb
arpl
adc
mov
xor
lahf
mov
push
sbb
lods
cld
sbb
pop
arpl
jle
loopne
inc
sbb
xchg
cmpsb
test
jp
adcl
ljmp
das
cmpsb
inc
mov
sbb
bound
out
lahf
inc
jmp
pusha
pushf
addr16
inc
dec
sub
jno
push
fidivl
push
mov
dec
mulb
sbb
pop
testb
cltd
shll
add
dec
repz
stos
mov
add
xchg
int
fstpt
mov
test
mov
push
jno
jo
ljmp
add
test
dec
shl
loop
add
cltd
clc
jge
fmuls
outsb
cltd
mov
adc
pop
mov
mov
sbb
sbb
sarl
stc
sbb
push
push
dec
or
and
sahf
call
dec
sub
xchg
pop
ret
dec
jne
jo
xchg
gs
lahf
notb
pop
mov
xchg
mov
push
out
cmpsl
lock
inc
testb
es
push
cwtl
leave
mov
sbb
and
sbb
sbb
xchg
or
cmc
jecxz
cltd
pop
in
in
xor
lods
mov
dec
test
std
push
push
lock
push
in
sub
out
and
jae
stc
mov
in
mov
imul
cvtps2pd
jb
cmp
jns
lahf
shrb
adc
jmp
xlat
jo
je
xchg
loope
xchg
clc
sub
xchg
jl
arpl
xchg
adc
dec
out
pop
mov
and
sti
xchg
aaa
mov
mov
mov
mov
dec
dec
jnp
icebp
jne
and
xchg
xchg
pop
xor
repz
enter
movsl
std
xchg
nop
cmp
inc
pop
daa
pushf
push
cltd
adc
or
fsubs
mov
dec
fstpt
neg
cmp
mov
negl
out
sbb
or
ret
iret
loope
mov
ja
outsb
adc
add
outsl
and
dec
aad
add
in
or
push
adc
xchg
lahf
jno
scas
push
lods
push
fs
xchg
push
xchg
xchg
popa
jmp
inc
push
cmpsb
push
pop
fisubrs
jne
mov
lock
imul
in
xor
cmpsb
mov
insb
in
aas
pusha
sub
mov
dec
and
shll
pop
imul
adc
push
sub
shrb
ret
mov
aaa
ss
mov
inc
xchg
mov
inc
lock
push
push
pusha
and
jnp
bound
testl
lcall
xchg
pop
fs
sbb
push
pop
mov
test
ljmp
ds
or
pop
adc
in
mov
push
frstor
lock
lcall
push
or
bswap
scas
hlt
and
fnstenvs
xorb
das
mov
xlat
cmpsl
in
fbstp
iret
xor
stos
inc
aaa
jo
jge
mov
scas
ljmp
pop
xlat
mov
test
jne
int
aas
outsl
or
and
cmp
popa
pop
mov
mov
scas
lret
rep
push
pop
xchg
leave
stc
stos
test
mov
sub
push
aaa
cs
jg
adc
and
dec
das
das
in
jb
push
cli
lock
adc
outsl
loop
jmp
adc
enter
xchg
mov
je
fimull
adc
dec
aas
jge
mov
mov
repnz
sbb
es
insb
test
fisubrl
inc
lods
and
test
int
dec
movsl
push
or
clts
data16
cwtl
mov
out
xchg
mov
out
aad
mov
dec
mov
push
sarb
dec
mov
flds
or
jge
ja
pop
imul
cltd
inc
xchg
pusha
xor
cmp
aad
xor
pop
rcr
in
int3
jge
leave
popf
xchg
inc
xchg
outsb
jg
out
push
mov
repnz
mov
fists
icebp
jb
inc
fsubs
xchg
and
or
adc
aas
mov
adc
lods
jns
jns
sub
xchg
arpl
loop
mov
ret
popf
js
das
adc
cmp
imul
testb
fldcw
inc
ror
rcrl
adc
push
lcall
mov
das
leave
js
mov
mov
inc
and
mov
jle
xchg
mov
inc
leave
adc
fmuls
dec
pop
outsl
stc
push
pusha
pop
dec
pop
add
adc
hlt
out
cmp
xor
dec
cs
hlt
add
inc
sbb
incl
xchg
mov
mov
stc
cmp
mov
arpl
xor
or
lds
insb
rol
je
inc
pushf
inc
fldpi
popl
xor
in
je
pop
std
icebp
pushf
inc
out
ljmp
lahf
mov
imul
pop
jb
movsl
ret
cmp
jge
push
and
mov
daa
add
xchg
lret
inc
enter
pusha
cmp
inc
mov
in
dec
or
inc
shrl
cld
jg
cmpsl
pop
int
dec
stos
pop
fmul
sbb
cmp
adc
lods
jae
js
enter
mov
bound
mov
mov
cmc
dec
addl
aad
sar
test
mov
aad
or
call
es
xchg
add
mov
mov
shll
cmp
mov
mov
dec
daa
add
adc
sub
mov
pop
add
iret
dec
scas
or
dec
xor
and
pushf
xor
add
hlt
js
pop
mov
or
mov
imul
push
aam
addr16
mov
xchg
dec
dec
pop
inc
add
iret
sarb
add
add
stos
cmp
jb
addr16
test
loop
ljmp
add
popa
mov
xchg
or
jbe
fmull
fstl
xor
jae
or
pusha
outsb
mov
cmp
ljmp
fmuls
sbb
mov
pop
dec
jecxz
fwait
sbb
push
ret
jle
or
out
jne
mov
mov
insb
sahf
insb
imul
pushf
or
dec
inc
push
lods
pop
roll
jae
mov
xchg
mov
test
mov
scas
sub
xor
fdivs
mov
or
sub
in
sub
pop
subb
push
mov
jae
pushf
out
scas
imul
cmp
cmpsb
in
sub
and
mov
xlat
inc
jae
ljmp
fs
jne
sbb
xor
xchg
sbb
rcll
and
lcall
stc
mov
popf
push
sbb
adc
lcall
sbb
pop
lcall
repnz
iret
pop
mov
pop
adc
mov
sub
stc
ficompl
das
dec
xchg
or
dec
pop
fwait
jle
xchg
loop
mov
xchg
or
inc
xchg
xchg
inc
dec
aas
inc
scas
pusha
mov
mov
popf
sub
mov
out
fxch
in
mov
in
orl
dec
mov
lds
mov
aad
pop
scas
in
popf
dec
fs
xorl
or
loopne
daa
jo
sbb
jl
data16
sarl
arpl
dec
fadds
lcall
dec
mov
movl
inc
xor
push
mov
push
mov
dec
push
inc
push
xor
leave
fsubs
sub
xlat
lea
mov
pop
xchg
sbb
fwait
mov
popa
dec
insb
sbb
test
adc
jmp
xor
jmp
and
out
xchg
push
fwait
lret
lds
stc
sahf
int3
xchg
push
fisubl
insl
lods
ljmp
xor
cmpsb
push
mov
shrl
data16
aad
ljmp
and
lock
xor
jno
mov
fdivrp
scas
out
cmp
add
ret
arpl
mov
daa
mov
dec
sti
call
xor
mov
ss
push
mov
dec
aam
sti
mov
add
jae
pop
es
jae
adc
xor
cmp
enter
and
jp
or
mov
rolb
dec
mov
cmpsb
adcl
ss
mov
fwait
sbb
movsl
cmpsb
and
loopne
jl
jo
jae
dec
into
nop
dec
mov
jmp
idivl
add
pop
inc
andl
push
sub
in
dec
lds
or
loopne
imul
lods
mov
ss
cmp
xchg
mov
ljmp
mov
add
daa
xlat
jle
nop
mov
pop
movsl
mov
jp
shrl
scas
sub
out
adc
pusha
cmp
pop
and
jp
das
bound
scas
sbb
je
xchg
mov
enter
leave
push
mov
call
sbb
and
scas
and
scas
aad
fisttpl
or
push
jmp
imul
in
fnsave
jb
scas
popl
xor
arpl
cmp
in
gs
push
dec
push
inc
dec
insl
sub
xor
into
stc
dec
shlb
les
push
xor
addl
insl
or
insl
imul
negl
add
xor
cmp
cmc
inc
push
sarl
mov
jne
sar
std
cmp
aaa
dec
sti
xabort
movsl
pop
add
in
lds
int
adc
arpl
mov
pop
das
mov
inc
sub
pavgw
fildl
sub
adc
data16
mov
shrb
shrl
int
test
test
scas
mov
movsb
sub
inc
cmp
test
cmpsb
pop
xchg
add
nop
mov
push
dec
sahf
jb
jecxz
lds
insl
ds
jp
jae
je
jge
add
hlt
testl
push
insb
adc
xchg
out
cmp
cltd
inc
dec
cmpsl
cmp
mov
aad
pop
in
jecxz
in
orb
out
and
xchg
push
aas
daa
jge
dec
loopne
mov
fbld
jns
sbb
movsl
lret
ror
pusha
cmp
fimuls
loop
pop
flds
ja
iret
test
push
int3
bound
pop
jecxz
xor
in
sti
sarb
adc
mov
fucomip
mov
dec
add
jmp
ds
or
jl
push
inc
gs
xor
hlt
sbb
lods
fwait
sahf
pop
icebp
add
clc
ds
iret
mov
mov
paddb
dec
ja
inc
dec
lods
mov
data16
loop
xor
cmp
sbb
dec
rcll
mov
lcall
fmull
adc
mov
aam
lods
mov
xchg
fbld
xchg
insb
xorb
mov
iret
jle
subl
dec
rol
cwtl
js
xchg
sbb
jnp
stos
add
cmp
popa
imull
add
push
pop
xor
aad
clc
pop
rolb
push
inc
loopne
inc
cltd
push
sbb
inc
adc
out
lods
sbb
mov
sahf
dec
xchg
into
push
sbb
mov
push
jae
pop
mov
mov
xchg
or
xor
in
xor
test
fs
push
mov
adcl
out
loope
sbb
aaa
mov
push
out
dec
push
cmp
aaa
sub
jae
fs
cmp
inc
inc
fucomip
mov
add
sbb
add
add
pusha
cwtl
push
and
xchg
sbb
adc
ja
push
loopne
cmp
sub
inc
out
or
iret
pop
xor
int
adc
and
adc
sarl
jg
fs
push
mov
insl
insl
jecxz
out
jb
data16
loop
jb
jg
iret
or
dec
and
sbb
xchg
xor
inc
xchg
setno
adc
adc
cmc
mov
shll
mov
ja
and
cltd
and
jge
ret
pop
outsb
push
lods
sti
rcrb
xor
mov
out
push
sbb
nop
jae
cmp
dec
in
iret
scas
inc
lcall
dec
pop
xchg
mov
push
jne
pop
dec
lds
mov
pusha
and
add
mov
adc
mov
sbbb
sub
insl
sbbb
fs
int
rolb
dec
in
and
sahf
imul
sub
and
add
pop
out
and
ret
xchg
rclb
jo
xor
jl
call
popa
xchg
pushf
adc
mov
xor
ja
out
lock
jg
subb
or
arpl
and
xor
add
jns
popf
inc
or
movsl
lods
inc
dec
mov
cmp
dec
addr16
xlat
jmp
pop
popf
out
gs
adc
aas
imul
lret
outsl
xor
xor
call
bound
in
js
add
inc
imul
ss
outsb
sub
push
pop
ljmp
sbb
mov
mov
sub
sbb
int
cwtl
xchg
cmp
inc
mov
sbb
xor
int
shr
mov
sub
mov
enter
mov
cli
mov
and
imul
sub
add
std
inc
xor
adc
cmp
test
mov
xchg
mov
push
cwtl
mov
pop
sub
outsl
lcall
repz
push
lods
jne
push
mov
ljmp
cwtl
xchg
adc
adc
insl
jmp
aam
pop
iret
rcll
sbb
sbb
inc
mov
aad
mov
subl
xor
call
or
sbb
cmp
jns
jle
ljmp
jg
mov
cmp
rcl
in
fistps
xlat
push
push
in
inc
sti
inc
call
movsl
aad
pop
fs
pop
mov
or
into
test
add
sub
cmp
aad
or
jge
divb
sbb
push
rcll
add
mov
iret
mov
arpl
stos
xchg
xor
jae
iret
mov
fildl
mov
sbb
sub
jmp
xorl
jb
push
or
fs
lret
mov
sbb
sub
jb
dec
and
xchg
iret
imull
pop
jbe
adc
inc
inc
mov
mov
stos
add
cli
adc
mov
sub
repnz
and
cmp
cld
add
add
in
sarl
push
sahf
push
push
mov
push
ljmp
xchg
and
test
movl
lock
roll
cmc
ds
push
ds
fs
or
pushf
xor
insl
loop
xchg
cmpsl
lahf
push
in
out
bound
insl
mov
cmp
shlb
das
jbe
bound
bound
popf
movsb
mov
mov
pushf
into
pop
outsl
xorb
mov
xchg
in
xor
jmp
xchg
xorl
data16
ror
push
int
and
in
js
mov
test
cwtl
loop
out
leave
sub
ljmp
mov
push
cmpl
int
cmp
mov
inc
push
sub
mov
stos
fists
std
js
jae
lds
into
test
xor
fimuls
and
sub
xchg
inc
dec
aas
lahf
call
dec
push
mov
mov
sbb
xor
loop
cwtl
ja
xor
insb
mov
fs
mov
adc
pop
mov
jp
je
loop
sarb
pop
or
cmp
int3
mov
add
push
adc
mov
cmp
cmp
in
mov
sub
outsl
cwtl
cmc
cmp
xor
push
and
cmpl
or
popf
mov
inc
nop
lcall
xor
daa
lcall
jb
dec
sub
xchg
mov
xchg
mov
pushf
mov
rclb
cwtl
mov
clc
pop
es
add
pusha
sub
ds
shll
shlb
pop
lods
sbb
out
pop
adc
dec
inc
lcall
mov
cmp
out
mov
sarl
adc
divl
pop
inc
mov
jno
rclb
fs
or
jp
dec
sbb
mov
xchg
std
in
ret
fadd
adc
and
pop
outsb
daa
push
pop
outsl
sbb
mov
fbld
test
push
cltd
repz
lods
fwait
adc
sub
mov
add
inc
sub
sub
dec
mov
or
or
stc
cmp
add
out
push
ficoml
dec
jb
add
mov
fbstp
out
test
inc
sar
testl
aaa
adc
dec
and
sti
or
in
pop
xor
push
and
mov
in
gs
pusha
sti
jg
sub
xor
cli
mov
int
gs
out
inc
add
push
repz
cmpsl
cmp
sbb
sahf
xchg
int3
faddl
cmp
je
lods
cmpb
ret
sarl
sub
rcl
push
out
scas
xchg
xor
lahf
ds
bound
jne
sub
mov
out
xchg
loop
adc
leave
jle
adc
inc
jmp
sti
adcl
fcmovb
add
outsl
adc
shll
pop
testl
sbb
jns
xor
jp
push
insb
mov
sbb
cld
jecxz
jbe
vmwrite
in
mov
push
mov
add
mov
sub
ds
sub
sbb
stos
orl
jg
mov
push
dec
aad
aas
cmpsb
pop
pop
movl
pusha
imul
jl
pushf
ds
fstpt
jbe
cli
out
pop
cmp
fidivrl
and
rcrb
dec
pusha
inc
dec
and
outsl
push
std
jns
mov
fwait
daa
mov
das
pusha
inc
adc
fistpl
mov
les
mov
sbb
shlb
pop
xor
adc
scas
add
sub
sahf
fsubrs
lret
out
xchg
enter
xor
test
lcall
jae
dec
xchg
jb
jnp
ftst
mov
cmc
xchg
sbb
xchg
fsts
adc
sbb
adc
shlb
sbb
mov
inc
sub
fsubl
shll
xlat
xor
xchg
push
add
imul
mov
jle
dec
cmpsl
adc
in
xchg
inc
adc
pushf
mov
push
outsl
scas
aad
shlb
sahf
pop
jae
pop
mov
jecxz
cmp
or
push
in
mov
sub
cli
adc
jmp
push
mov
sbb
inc
fsubr
lock
lcall
pop
fdivr
and
pop
mov
pop
cmp
test
lock
xchg
mov
fstps
mov
ja
in
cltd
sbb
mov
ret
jns
sbb
cmp
repz
push
mov
xor
push
push
pop
imul
push
cmpsb
push
inc
and
aas
and
scas
movsb
fwait
daa
das
push
stos
fxch
outsl
enter
les
or
mov
jmp
mov
push
pop
in
loope
imul
pop
cmp
sbbl
xchg
std
inc
rolb
mov
add
mov
iret
int3
enter
gs
and
jo
nop
scas
or
adc
pop
mov
cmp
test
add
pop
jbe
mov
push
sarb
mov
mov
out
jne
shlb
adc
inc
hlt
pop
pop
leave
pushf
dec
sbb
pop
mov
ret
andl
pop
sub
pop
pop
inc
and
ret
clc
add
subb
jecxz
push
xchg
arpl
std
out
xchg
jo
movsl
xchg
dec
inc
insb
shll
jnp
lock
sbb
icebp
imul
and
jg
mov
fistps
sbb
mov
lcall
jo
pop
cld
dec
and
pop
jmp
pop
inc
adcl
cmc
cmp
sub
leave
shld
add
ja
clc
push
inc
fidivrl
pop
xchg
imul
stos
or
negb
sahf
xchg
xchg
push
xchg
pop
cmpsl
pop
xor
push
lret
add
push
mov
int
nop
aam
in
or
jno
adcl
pop
fmul
sub
movsl
xorb
lea
cs
mov
repz
sbb
popf
fdivl
mov
not
adc
or
popf
add
pop
mov
push
and
scas
inc
mov
jg
scas
mov
mov
add
inc
gs
mov
xor
mov
mov
hlt
pop
jae
mov
xchg
xchg
pop
jne
mov
ljmp
jp
adc
lret
push
adc
cltd
pop
mov
inc
push
stos
sbb
and
ret
cmp
mov
in
cmp
mov
xchg
push
pop
sbb
test
ds
stos
pop
arpl
daa
inc
movb
out
pop
push
and
in
fwait
into
shl
dec
out
jno
pop
sub
xchg
enter
dec
push
sbb
mov
adc
fnstenv
imul
xor
call
mov
scas
fstps
ljmp
mov
or
mov
mov
js
push
pandn
arpl
insb
pop
push
insb
pop
push
sbb
pushf
fs
das
sahf
dec
pop
shlb
stc
pop
xchg
aas
sbb
and
mov
pop
xchg
ret
xchg
sbb
mov
sbb
aas
push
dec
cmp
stos
scas
and
lahf
and
jecxz
mov
in
xchg
jg
cmp
fldcw
rcr
inc
jo
outsb
dec
inc
aaa
inc
sub
and
add
jle
dec
loop
and
ret
ret
shlb
popf
pusha
scas
aaa
inc
insb
push
mov
cltd
sbbb
xchg
leave
dec
out
push
loope
test
nop
and
mov
cltd
sbb
inc
pop
out
inc
add
loopne
push
jmp
in
pop
cmp
mov
mov
out
fcmovb
dec
mov
shll
outsb
stos
scas
push
inc
daa
push
out
fsubrs
or
into
xor
paddsb
inc
mov
test
xor
xchg
rcr
dec
lcall
into
jle
pop
jp
test
xchg
push
stos
mov
les
mov
enter
push
cwtl
cli
outsb
jb
dec
insl
push
or
out
and
int3
pop
rorb
ss
sahf
aam
sbb
cs
xor
jg
mov
adc
std
in
push
stos
xchg
sbb
movl
hlt
or
pop
popf
adc
xor
pop
fwait
popa
dec
sub
lahf
xor
repz
lock
sub
add
adc
fwait
or
insb
fildl
idivl
mull
cmp
cmp
sbb
fcmovnbe
and
jno
stc
or
mov
enter
mov
mov
aad
add
rcrl
arpl
in
scas
insb
sub
pop
cmc
movsb
sbb
sbbl
mov
loopne
jne
scas
leave
jge
dec
icebp
fnstenv
mov
cld
js
push
push
aaa
inc
sbb
lea
scas
int3
ljmp
call
pop
xor
jae
sub
inc
test
push
out
imul
mov
jnp
test
mov
jo
inc
cmc
gs
adc
and
pop
in
xchg
jmp
dec
adc
insb
addb
subb
and
jno
jbe
lcall
in
inc
adc
cmp
idiv
pop
fdivs
ds
mov
jo
out
push
xchg
and
aad
lahf
push
jbe
xchg
pop
pop
in
cmpsl
inc
fldln2
or
mov
sub
adc
lds
iret
sub
fsubrl
sub
pop
push
cmp
mov
cmc
mov
movsl
loope
mov
jb
imul
fdivs
popl
adc
add
repz
sub
ds
xlat
aam
xchg
pushf
movsl
dec
lods
cmc
sbb
out
mov
mov
or
dec
call
mov
sbb
lods
inc
cwtl
push
or
xchg
mov
push
dec
std
jns
addr16
pushf
push
or
jae
jno
pop
jne
jge
mov
add
pusha
adc
jae
push
movsb
jnp
mov
jp
or
jno
or
loope
pop
stos
xchg
pop
imul
mov
shrb
dec
adc
mov
lret
inc
push
scas
inc
push
icebp
push
pop
xchg
push
xor
int3
movaps
add
sub
lcall
or
adc
leave
je
aaa
jae
add
hlt
xor
mov
in
scas
into
sub
imul
lock
xor
xchg
rorl
mov
adc
or
lahf
pop
dec
icebp
add
lods
xlat
jb
mov
cmp
arpl
test
and
lock
pop
jo
pop
jmp
test
dec
or
push
pop
jge
push
mov
or
mov
stos
nop
loop
cmp
sarl
arpl
pop
aas
sbb
ret
je
stos
addr16
popl
jg
cld
test
mov
mov
js
pop
pop
das
jp
into
mov
cmp
lret
mov
jno
ret
sub
cmp
loopne
ja
xor
or
inc
cmpsl
mov
stos
leave
div
jp
pop
push
mov
ljmp
rcr
rolb
mov
push
push
or
xor
test
cmpsb
inc
out
inc
jb
decl
sbb
xchg
jne
sahf
shl
cmp
data16
mov
push
dec
mov
mov
or
xlat
insb
bound
cmp
dec
push
test
es
xor
jno
outsb
test
inc
jb
mov
testb
orb
cltd
jp
imul
xor
in
mov
scas
jns
movsb
and
shl
aas
push
xchg
jecxz
insl
fsubl
sub
jnp
xchg
mov
mov
adc
mov
inc
gs
test
repnz
in
cmp
lock
jge
jb
out
mov
or
jmp
lock
in
add
loopne
xchg
inc
pop
inc
mov
xchg
popa
dec
jae
mov
rorl
scas
pop
insb
js
mov
adc
cltd
jne,pt
jne
leave
movsl
mulb
cmpsl
ret
out
bnd
loopne
mov
scas
sbb
clc
out
shlb
sbb
jl
inc
leave
decb
lock
popa
fsubl
jb
mov
mov
subl
loopne
sub
push
clc
adc
pop
fmul
cmp
pop
cmp
sbb
mov
mov
shl
outsl
nop
fisttpll
mov
ja
adc
lret
and
cmpsb
inc
lahf
lret
sti
and
mov
or
adc
daa
andl
ss
sbb
test
aas
mov
lock
sub
stos
fisttpll
cmpsl
and
jnp
mov
int3
fidivs
inc
xor
loopne
add
fstpl
cmc
data16
je
frstor
movsl
jmp
popa
or
adc
push
and
pushw
mov
popa
repnz
cmp
push
testb
cld
cmp
cwtl
adc
sbb
mov
sub
sbb
and
lret
in
mov
adc
cltd
mov
push
ss
popf
add
jle
jnp
sarb
stc
cltd
ljmp
pop
sti
aad
psubw
repz
lock
pop
int3
or
mov
mov
faddl
sbb
mov
enter
jg
push
outsl
or
es
sub
cld
adcb
stos
cltd
cmpb
xchg
xchg
cli
addr16
xor
je
sub
gs
sarb
and
sub
add
test
xlat
cmp
and
mov
fstl
pop
pushf
add
jne
add
into
mov
push
stc
push
mov
or
insl
js
shlb
icebp
mov
dec
stos
mov
fisubs
push
add
movsb
mov
jp
push
push
jbe
and
sbb
mov
push
fists
stos
jbe
inc
cli
popf
pop
inc
mov
inc
cmpsl
pop
aaa
xchg
test
xor
insb
dec
xchg
movsl
stos
push
sarb
mov
xchg
and
mov
fisubs
pushf
mov
sbb
jae
cmc
jp
test
in
pop
rolb
cmp
and
movsb
lods
iret
and
fisttps
rorl
xor
insl
or
push
add
adc
das
popf
mov
add
xchg
das
popa
fwait
stos
mov
pop
arpl
ret
in
lock
cmp
mov
test
sbb
imul
insb
std
in
fadd
fmull
jecxz
je
xor
and
sub
jge
dec
and
sbb
push
mov
loop
loopne
and
mov
jb
jecxz
in
adc
cmp
enter
mov
jno
pop
mov
pop
lcall
or
or
jmp
sahf
fcmovu
mov
dec
dec
jecxz
insb
xchg
ret
jne
cld
jg
test
push
jp
cmp
xchg
dec
dec
sub
mov
popa
subb
inc
and
add
jl
or
cmpb
dec
sub
pop
das
xor
push
pop
addb
jmp
push
pop
xor
sub
aam
clc
test
jge
jecxz
cmovl
mov
lods
adc
es
shlb
aad
bound
outsl
mov
repnz
clc
test
xor
dec
jecxz
push
add
and
inc
push
aaa
repnz
adc
std
xchg
and
dec
jne
inc
jb
ljmp
stc
mov
pop
jo
jb
fs
xchg
lds
sub
add
loopne
xor
mov
sbb
aaa
aaa
adc
pop
cmp
mov
in
out
ss
ret
mov
pop
pop
aad
call
test
loop
clc
mov
push
adc
lock
add
outsb
frstor
or
test
sub
hlt
aas
loop
loope
sbb
jle
popf
aad
popf
mov
inc
lods
or
dec
adc
pop
cmp
push
fstpt
stos
jno
fidivrs
imul
ja
or
mov
xor
shlb
jae
adc
lods
inc
pop
stos
pop
xor
cmp
jne
js
sahf
and
subps
in
and
push
leave
xchg
inc
nop
adc
lret
aas
rcrl
es
lcall
std
mov
or
push
inc
stos
fidivrs
addb
fs
mov
insb
mov
ss
push
repnz
jle
sbb
dec
mov
lret
pop
add
sub
mov
loopne
fcmovu
sub
movsl
sbb
jle
and
jle
cmpsb
pop
dec
nop
jg
imul
out
sbb
loopne
lods
or
jge
insb
add
mov
push
pop
and
das
popf
cmpsl
inc
int
cmp
fnstenv
push
loope
testl
pop
add
fwait
subb
push
add
int3
add
cs
shlb
cmp
cmp
inc
ret
sub
jb
mov
xor
and
fisubrl
xlat
sub
inc
ss
xchg
mov
add
sbb
xchg
in
and
clc
nop
fisubl
cli
lcall
lock
cli
popf
and
cwtl
sub
mov
lds
movsb
sahf
cmp
inc
adc
fbstp
adc
mov
mov
push
fmull
xchg
fst
movsl
dec
loopne
push
push
lahf
std
xor
ds
jp
xchg
push
sub
idivb
xchg
adc
fdivrl
clc
pop
xchg
ss
xchg
clc
cmp
out
lods
clc
sbb
jne
je
fiaddl
shr
fistpll
stc
inc
cwtl
mov
and
or
pop
xor
add
out
xor
icebp
jmp
jecxz
cmp
adc
sahf
loopne
sbb
mov
sub
push
or
mov
loopne
push
adcl
xchg
xor
jbe
push
sbb
popf
xor
mov
out
mov
test
push
push
aas
data16
hlt
hlt
xor
jl
aam
jmp
mov
mov
pop
data16
push
or
mov
sbb
xchg
jmp
cli
mov
jo
insb
outsb
stos
addr16
or
xor
rcrl
pop
inc
rcrl
pop
xchg
mov
outsb
enter
or
jae
inc
pop
int
pop
and
das
xchg
xchg
and
pop
cmpsb
mull
dec
lahf
mov
adc
filds
addl
shll
jg
lahf
dec
mov
sbb
mov
mov
add
sarb
mov
pop
push
movsl
cmc
add
xacquire
sub
cmc
or
xor
fsubr
sub
fidivl
jnp
add
add
sbb
push
fiadds
add
es
sub
xchg
sub
xchg
jbe
data16
shl
push
fs
jle
clc
aaa
pop
popa
pushf
pop
push
pop
repz
and
test
mov
mov
ss
inc
loope
and
loopne
cmp
inc
es
pop
cmp
jo
mov
sbb
sbb
mov
pop
pop
mov
leave
inc
out
xor
mov
sbb
ljmp
imul
dec
xchg
adc
mov
test
sbb
mov
xchg
stos
inc
jge
imul
mov
lret
sub
jae
shrb
lret
scas
ljmp
inc
dec
or
lret
push
push
xlat
stc
mov
outsl
lcall
jmp
lods
xor
ret
divl
bound
mov
out
inc
mov
pusha
and
cmp
or
repnz
fwait
sub
icebp
sti
pop
jne
dec
imul
xchg
push
dec
cmpsb
andl
xchg
cli
add
xchg
cli
jo
sbb
sbb
sbb
enter
in
jae
pop
and
xchg
fldenv
or
adc
adc
sub
mov
lret
pop
mov
ljmp
mov
shl
or
lahf
imul
stc
cmp
or
inc
dec
push
loopne
ret
aas
jl
mov
mov
not
in
and
orb
jns
mov
jge
ds
inc
imul
rclb
xor
cmc
push
fs
loopne
cmpsb
int3
jns
imul
sub
mov
add
mov
insl
test
mov
adc
inc
in
mov
rolb
push
inc
sub
divl
pop
sbb
fsincos
outsl
lcall
and
sub
mov
xor
xorps
inc
xor
add
mov
jg
push
imul
scas
xor
mov
std
jno
pop
mov
inc
xchg
mov
pop
sub
mov
xor
into
jl
xor
popf
add
lahf
fs
int
shlb
mov
fs
ss
mov
jl
in
pusha
imul
mov
loope
xchg
and
pop
or
enter
adc
js
adc
dec
mov
sub
dec
mov
je
out
rcr
in
pop
add
inc
icebp
cmp
les
pop
cmp
cmp
jno
inc
cmc
cld
mov
stc
pop
jb
fs
mov
rolb
sub
sbb
or
fnsave
pop
push
adc
add
pop
repz
ljmp
lret
in
xchg
popf
mov
sbb
push
sub
jns
out
daa
mov
pop
out
test
scas
mov
inc
movsb
dec
fcom
jge
jl
faddl
push
pop
andw
sub
inc
stos
cmpsb
push
jl
cmp
sbb
cmpsl
pop
cmp
lods
push
jnp
pop
stos
jg
add
std
sub
outsb
cmp
add
insl
in
scas
orb
xchg
rol
mov
rclb
jmp
or
popf
sub
sti
jmp
add
fcomps
shr
mov
out
out
das
add
test
cmp
sbb
pop
cmp
scas
push
imul
mov
sbb
cmp
arpl
call
jg
mov
test
add
dec
adc
xor
loop
into
lret
sahf
mov
lret
xchg
test
xor
fs
sarl
xor
mov
mov
in
jne
xor
jne
lds
sub
adc
out
fdivrp
cld
imull
push
movsl
jbe
inc
push
lret
or
push
or
shrl
sub
sbb
pop
and
scas
fisttpll
inc
enter
icebp
cmp
push
fs
jbe
lods
cmpsl
addr16
adc
jecxz
and
scas
or
xchg
xor
sub
or
out
cmp
ret
pop
clc
jno
sahf
ret
popa
fimuls
test
xchg
bound
test
lret
jnp
pop
or
cmp
rcrb
mov
mov
test
adc
clc
pusha
notb
sbb
dec
pop
push
mov
dec
adc
mov
cmc
in
jg
push
mov
add
pop
pusha
sti
daa
xor
arpl
pop
scas
ja
add
outsb
dec
cs
outsl
sub
lret
dec
xor
mov
adc
mov
insb
add
add
mov
and
jae
jge
jecxz
push
dec
pop
jo
xor
add
out
mov
add
mov
add
cmp
in
insb
push
push
aam
popa
test
ljmp
cwtl
ret
mov
and
fcoml
jns
adcl
jmp
xor
dec
int
xchg
in
aam
in
inc
inc
xchg
fstl
and
jg
outsb
mov
adc
push
jns
adc
popf
nop
jle
adc
xchg
or
cmp
push
mov
push
aad
hlt
sub
sahf
fsubs
test
clc
shl
mov
xchg
push
lea
out
shr
inc
das
push
mov
push
xchg
das
xchg
push
inc
into
jle
pop
inc
mulb
call
sub
out
and
mov
fnstcw
adc
cmpsl
sub
inc
ret
push
pop
pop
sbb
loopne
cltd
cmp
test
jmp
aaa
fsubs
or
mov
or
lret
mov
cmp
inc
mov
stc
movnti
dec
pop
clc
xor
and
stos
outsb
cmpsb
jo
add
sub
cli
imul
mov
push
sarb
cmpsl
cli
dec
sbb
notb
dec
test
movsl
xchg
jecxz
dec
push
cmpsl
jae
push
mov
pop
or
clc
idivb
mov
out
xor
mov
inc
lea
xor
insb
sub
shl
add
dec
inc
mov
in
sbb
sub
ss
or
or
mov
cld
mov
inc
clc
jle
ss
xor
loopne
inc
jmp
js
out
out
push
xchg
xchg
arpl
adcb
rcr
inc
call
sub
inc
xor
sub
mov
stos
xchg
mov
repnz
movsl
mov
xor
sbb
loopne
das
ret
add
pushf
or
lcall
mov
data16
mulb
sbb
dec
call
push
or
fstp
mov
mov
or
test
movaps
add
sub
xor
push
push
scas
xchg
int
xor
out
stos
inc
scas
iret
lods
pop
inc
dec
or
push
subb
inc
cs
out
icebp
mov
into
dec
loopne
int
outsb
adc
lahf
popa
into
pop
adc
dec
mov
cwtl
imul
ja
aas
sti
push
pop
cwtl
rsm
xor
outsl
icebp
jno
push
mov
add
rclb
push
add
mov
mov
mov
xchg
pop
into
mov
xchg
test
cmc
push
ds
and
xchg
daa
xchg
shl
mov
jecxz
cs
inc
xor
jmp
repz
aam
icebp
jo
mov
and
outsl
mov
je
inc
cwtl
jb
jne
cmp
or
jle
aas
sbb
aas
sbb
aaa
jmp
testl
sbb
add
or
insl
mov
nop
int3
push
inc
dec
mov
add
test
aam
adc
lods
mov
xchg
push
pop
xor
sbb
imul
mov
mov
insl
shlb
loope
mov
sbb
andl
push
inc
pusha
daa
adc
out
and
sbb
or
inc
mov
mov
adc
jle
in
cmp
test
sbb
and
aam
pop
aaa
jge
iret
popa
fsubl
addr16
pushf
jle
sahf
adc
in
loopne
push
jbe
push
mov
aam
adc
cs
out
nop
outsb
ret
ljmp
dec
jl
xor
ret
mov
dec
out
mov
sti
adc
shrb
scas
sarl
sbb
push
jl
jno
loopne
push
add
mov
inc
push
orb
jp
mov
fiadds
int3
popl
pop
push
add
or
cmp
in
fdivrl
sbb
in
sbb
add
or
sbb
cmc
push
inc
ficompl
lods
addr16
pusha
cmp
xor
jae
iret
dec
jne
lcall
inc
leave
mov
inc
and
cltd
mov
and
scas
cwtl
aam
xchg
or
and
inc
fisubs
jb,pn
mul
gs
mov
xor
leave
jne
fwait
ret
sahf
repnz
cwtl
pop
outsl
sub
outsl
test
jle
test
fwait
lea
mov
xchg
lds
cld
cld
or
mov
rclb
mov
out
out
fs
lret
gs
push
jns
dec
stos
jg
inc
cmp
pop
ljmp
popf
clc
mov
inc
jg
push
aas
add
das
outsb
cwtl
xchg
pop
outsb
fucomi
lds
or
in
sbb
inc
xchg
cld
mov
push
cmpsb
in
repz
or
xor
inc
lock
sub
pop
fildll
fwait
cli
dec
sbb
sub
jb
ss
pop
xchg
mov
inc
jns
cmpsl
sti
mov
push
cs
pop
inc
test
jl
outsl
or
daa
call
inc
dec
mov
jmp
or
fiaddl
xor
cs
out
sbb
bound
adc
dec
lahf
or
jo
xchg
icebp
int
jne
pop
push
std
lock
iret
roll
or
loopne
lods
cmpsb
mov
or
add
mov
mov
sti
in
adcl
lcall
mov
add
inc
sbb
sahf
movsl
test
mov
dec
mov
int
push
in
inc
dec
push
mov
xor
add
push
pop
les
leave
fsubp
sbb
roll
pop
mov
xor
jb
iret
pop
test
loop
int3
jbe
push
push
dec
push
pushf
sbb
and
dec
push
mov
sbb
pop
lea
data16
ds
div
mov
int
jo
lret
insl
push
mov
pop
xlat
sbb
and
inc
mov
mov
lret
test
popa
mov
jbe
dec
mov
out
inc
cs
nop
ja
loope
enter
adc
test
xchg
scas
or
aaa
shl
sbb
pop
data16
outsb
scas
les
mov
sub
cmp
cs
push
mov
sarl
mov
or
sbb
xlat
jnp
shlb
ltr
cmp
mov
mulb
cld
add
inc
mov
sbb
xor
popf
stos
fnstenv
mov
icebp
add
or
push
inc
fs
out
repnz
push
jb
cmp
jmp
scas
icebp
cwtl
add
sub
lret
test
loopne
fisttpl
mov
pop
std
je
sahf
mov
jns
mov
and
and
jecxz
nop
cmp
fcoms
pop
xchg
pop
xor
jne
xor
mov
mov
jecxz
test
mov
mov
in
lea
adcb
sti
outsl
jbe
jmp
subb
frstor
xchg
jg
rep
cld
mov
xor
jecxz
out
cmp
xchg
add
or
and
insb
jmp
and
test
mov
mov
mov
push
and
popa
jle
push
test
inc
mov
addl
in
lret
jo,pt
xlat
cld
pop
outsb
arpl
dec
mov
lds
mov
pusha
adc
add
push
pop
mov
sbb
das
scas
imul
aad
sbb
shlb
ja
ljmp
mov
adc
pusha
add
jecxz
add
jno
xchg
or
mov
mov
sub
and
rcl
jmp
daa
imul
mov
pop
in
bound
sub
hlt
pop
cltd
popa
inc
insb
add
xchg
fcmovne
lahf
cmp
dec
xchg
inc
jecxz
test
fwait
shll
mov
and
imul
xchg
jb
jae
pop
stc
call
dec
pushf
pop
popf
cmpsb
push
sub
shlb
mov
sub
pop
int3
xor
stos
inc
xor
dec
mov
adc
cmc
cmp
adc
add
sbb
xchg
sbb
lcall
in
sbb
sub
movsl
loopne
imul
ja
push
scas
nop
jbe
rolb
shlb
push
mov
dec
lods
cs
mov
xor
cmpsb
adc
cs
out
cli
aad
outsb
pop
pushf
add
xchg
mov
and
jnp
test
popf
fldl
mov
movsb
aad
inc
sbb
fs
decb
or
jl
jnp
jae
stc
push
xor
daa
dec
xor
test
jp
pusha
shlb
loopne
out
xchg
inc
das
push
mov
scas
mov
jp
add
push
aam
ss
mov
scas
mov
in
popf
pop
nop
add
out
js
ret
xchg
fldl
mov
jg
cld
push
xorl
negb
dec
in
push
shl
xorl
xlat
lret
pushf
mov
push
das
mov
out
aam
sbb
push
xchg
rcr
call
test
aaa
xor
mov
jbe
push
flds
pop
fadd
xor
push
cmp
mov
xlat
or
hlt
xchg
and
mov
loopne
scas
jmp
iret
pop
gs
cmp
bound
aam
push
mov
push
lret
add
ds
imul
sbb
outsl
dec
sub
orl
xorb
into
stos
outsb
out
inc
cltd
sbb
xchg
push
test
mov
add
in
imul
lahf
xor
dec
arpl
dec
int3
int3
push
jbe
test
test
outsb
push
sahf
adc
mov
and
xchg
shrl
adc
push
jbe
dec
xchg
add
cmc
jns
mov
jns
sub
fadds
idivl
and
add
out
hlt
test
adc
xchg
jge
in
inc
test
jo
out
fcompl
loopne
or
sbb
and
sti
pop
stc
jmp
add
mov
mov
loope
dec
loopne
daa
rcrl
lods
test
fs
mov
sahf
dec
inc
movb
repz
lcall
sub
ret
sahf
les
add
les
enter
adc
cmp
pop
cwtl
mov
and
fstl
popa
into
xchg
mov
in
pop
adc
cmp
mov
shrb
mov
or
push
mov
xor
in
imul
and
into
ljmp
jl
gs
sub
je
imul
out
jp
fninit
mov
push
mov
mov
movsb
insl
sbb
hlt
xor
rol
sbb
cmpsb
cmp
lods
dec
pop
mov
jne
dec
xchg
mov
call
xor
iret
ret
stc
lods
sub
fdiv
inc
cmp
int
repz
idiv
out
scas
mov
push
jmp
jae
mov
or
add
xchg
outsl
cmpb
xchg
inc
jl
outsb
xor
add
and
mov
mov
ss
pop
fldt
in
sbb
out
aaa
add
jle
push
insb
xchg
add
mov
mov
nop
dec
testb
dec
cld
mov
dec
xchg
push
out
xor
jecxz
jbe
push
shll
dec
in
jo
ljmp
mov
sbb
jo
lods
mov
ss
adc
mov
mov
dec
and
clc
dec
jb
dec
jmp
lret
in
ljmp
lret
sbb
clc
rcr
add
adc
and
ret
mov
xchg
hlt
jae
push
sbb
aam
imul
sub
push
cmc
cmpsl
add
jnp
ja
push
cmp
insl
rcll
addr16
dec
and
mov
popf
or
ljmp
sti
and
xchg
inc
call
clc
popa
in
xchg
sub
mov
pop
call
shrl
pop
repz
lcall
dec
mov
mov
pop
data16
clc
icebp
in
add
mov
adc
mov
xor
ja
dec
mov
sbb
add
cld
int
dec
fisubrs
iret
push
push
loope
inc
out
movsb
xchg
dec
nop
xlat
stos
in
pop
push
pop
aad
inc
or
or
call
movsl
arpl
pop
lret
jo
jp
pop
jns
ffree
daa
mov
adc
testl
xchg
les
loop
and
pop
lcall
add
jge
out
xchg
and
push
test
or
pop
movsl
pop
dec
jae
push
sbb
movsb
or
cli
push
dec
jnp
inc
adc
dec
sahf
shll
mov
frstor
jnp
dec
sbb
mov
ljmp
lea
ficoml
add
aaa
lods
push
sahf
push
xlat
rolb
mov
push
jg
sar
jmp
test
ja
sub
in
push
sbb
aas
fmulp
bswap
push
loope
xchg
fwait
and
cmpl
and
aas
xchg
dec
adc
mov
mov
push
into
xchg
and
mov
call
jns
sub
or
jae
in
or
daa
adc
lds
js
add
jg
ret
punpcklbw
push
nop
and
xchg
sbb
jmp
ljmp
inc
or
adc
adc
sarl
push
mulb
loope
out
insl
sub
xor
jmp
pop
pop
hlt
aad
mov
mov
or
pop
neg
adc
clc
lods
or
aas
sbb
xchg
inc
and
and
pop
adc
rcrl
rorl
cmp
jp
inc
or
jl
imul
inc
ds
fstpt
sbb
dec
mov
xchg
rol
mov
push
pop
mov
dec
leave
cmpb
ljmp
inc
inc
jl
jne
mov
rcrl
inc
pushf
push
and
cmp
daa
xor
push
xor
mov
mov
push
push
sub
mov
jle
rcll
arpl
subl
mov
push
pop
dec
mov
aam
sbb
pop
or
aas
lock
mov
test
push
xor
hlt
jl
loopne
cmp
popf
call
popf
lcall
push
jbe
inc
pop
sub
sbb
int
popa
adc
movsb
mov
jb
add
xlat
jg
insl
test
clc
testl
cmp
int
mov
and
cmp
sahf
movsl
adc
out
mov
cmp
pop
xor
xor
mov
add
xchg
push
aam
mov
jo
mov
and
jl
hlt
fwait
add
fucom
sub
outsb
cmp
sarl
pop
push
dec
stos
iret
xchg
test
xor
ja
mov
movsb
cld
mov
adc
stos
mov
xchg
imul
gs
imul
stc
inc
mov
xchg
in
cltd
xchg
mov
or
lret
and
aam
dec
jecxz
or
ja
aaa
mov
mov
imul
jns
dec
aam
filds
jle
mov
jl
adc
je
pop
ja
stos
jns
dec
sbbl
stos
sbb
add
adc
outsl
imul
scas
je
mov
cli
gs
sub
sbb
nop/reserved
add
or
jbe
xchg
cmp
inc
jmp
inc
xchg
cmp
imul
inc
loop
pop
shlb
ds
cmpsl
fisubs
cld
mov
and
add
push
pop
mov
add
insb
adc
jne
dec
test
pop
add
aaa
daa
roll
ds
not
insl
sti
dec
cwtl
jno
pop
mov
adc
inc
enter
add
jmp
xor
sub
imul
pop
fstpt
sbb
sub
mov
dec
jge
or
or
ficompl
repz
icebp
lods
dec
cli
cmp
dec
mov
clc
mov
mov
arpl
xor
mov
sbb
inc
mov
jmp
scas
rol
xchg
add
pushf
jecxz
in
lret
push
pop
sub
arpl
push
loopne
inc
dec
pop
cmp
add
cmp
fwait
jge
and
pop
sbb
lods
push
or
push
add
sbb
mov
mov
test
xchg
add
or
cmp
jns
adc
push
cs
mov
js
sbb
repz
fcoml
mov
out
jp
xor
mov
cs
mov
shll
jae
jecxz
jo
imul
imul
sbb
or
negb
jns
lods
cmpsb
mov
outsb
adc
sbb
loope
dec
mov
fildl
shlb
bound
std
inc
out
fldpi
iret
and
or
jge
or
sub
loop
inc
mov
sarb
push
push
sub
sub
mov
or
test
adc
sbb
into
stos
shrb
outsb
jl
xchg
cld
and
adc
and
jmp
lcall
loop
mov
jns
aad
mov
xor
adc
add
inc
out
lret
pusha
data16
adc
out
push
jne
pop
test
xchg
imul
hlt
add
sti
out
loope
sub
xchg
imul
les
addb
ja
mov
lret
or
mov
stos
cmc
mov
lods
mov
popa
dec
adc
push
gs
mov
movsb
rcr
out
dec
dec
pusha
mov
xchg
pushf
sub
inc
mov
sbb
or
les
dec
push
sub
clc
out
xchg
shl
roll
push
push
iret
xlat
loop
mov
cmp
jo
xor
fldt
push
mulb
repz
ret
add
call
push
aad
sbb
inc
insb
pusha
jecxz
push
jbe
ja
mov
movsl
sbb
aad
jle
orb
mov
int3
outsb
ret
jbe
xchg
in
jle
sbb
mov
mov
sub
xlat
in
cmpsb
shlb
push
mov
jle
hlt
and
call
sbb
jp
insl
adc
sarl
mov
loopne
into
inc
push
rcr
jns
mov
lcall
mov
repnz
test
pop
dec
js
xor
sbb
mov
adcl
mov
mov
mov
mov
pop
push
mov
in
les
jmp
pop
cs
call
mov
dec
pop
imul
jns
repnz
cmp
daa
sbb
fisttps
lea
cmp
in
daa
rcrb
jo
lret
and
out
fstpl
imul
cmp
lock
add
push
arpl
repz
iret
fistpll
imul
adc
add
sub
pop
adc
cmpsl
and
loopne
xchg
pop
xchg
sbb
sbb
imull
sub
js
mov
push
faddl
mov
inc
stc
push
jb
mov
xchg
ds
das
sub
insl
inc
stos
add
fscale
and
cmp
lea
pop
jnp
js
cmc
rcr
outsb
test
lods
jbe
mov
fstpl
pop
outsl
mov
shlb
jnp
outsl
xchg
pop
mov
mov
sti
cmc
bound
xchg
popa
push
add
fdivr
jae
jbe
ss
xchg
cltd
test
cmc
jg
or
xchg
out
scas
add
lahf
jmp
sti
test
mov
ret
stc
sbb
and
fldt
repz
lea
mov
cmp
aad
sbb
push
insl
ds
clc
push
mov
mov
inc
jae
pop
ret
bound
es
shlb
xchg
sbb
and
les
mov
mov
imul
sub
or
aaa
cs
xchg
sbb
jne
adc
ss
sbb
outsb
dec
bnd
jnp
mov
mov
add
sbb
push
ljmp
adc
cmc
add
mov
and
loopne
jno
popa
ss
cwtl
jb
push
xor
arpl
push
lret
cmp
jge
mov
cs
sahf
scas
outsl
lds
iret
inc
mov
jecxz
mov
mov
push
lret
subl
in
mov
xor
jb
inc
cmp
je
lcall
into
jns
sarl
notl
xor
xchg
jnp
incb
adc
push
adc
xor
push
pop
out
add
jnp
inc
and
xchg
xlat
mov
ss
out
inc
outsb
aas
mov
call
in
inc
aaa
xorl
rclb
insl
jmp
andb
je
pop
insb
mov
xchg
add
inc
mov
aad
lods
jle
xor
sarl
scas
push
mov
sti
mov
xor
jp
popf
fimull
xor
push
int3
xor
xor
sbbl
fisttps
cltd
jae
lea
push
repz
js
sbb
add
xchg
adc
aam
jmp
jmp
enter
xchg
xchg
daa
push
mov
push
pop
loop
gs
cs
mov
jg
in
mov
cmpsb
adc
adcl
xor
pop
dec
mov
popf
lds
jne
rorb
pop
fwait
cmpsb
out
jns
add
sti
jno
rol
mov
cld
enter
and
adc
or
mov
xor
and
xchg
jge
out
mov
and
lret
imul
test
in
rclb
ss
mov
sbb
sbb
adc
rorl
outsl
ja
mov
cmp
lahf
andl
int
out
add
pop
dec
or
push
lock
mov
or
sarl
xchg
pop
or
and
out
dec
nop
arpl
shlb
pop
shr
sub
cmc
push
mov
mov
fstpl
in
jns
mov
icebp
dec
xchg
xchg
aad
in
adc
mov
inc
sbb
into
ja
xor
xlat
push
mov
imul
cld
add
adc
std
insl
icebp
add
scas
cs
push
mov
test
lock
int
dec
popf
movsl
jge
cmp
sbb
out
xor
jecxz
pushf
jmp
in
cmpl
outsl
dec
jmp
dec
cltd
in
or
loope
mov
inc
cmp
mov
cltd
or
gs
lock
lcall
cli
out
pop
xor
sbb
xor
push
test
sub
pop
and
fwait
mov
fbstp
roll
push
xlat
loopne
mov
in
mov
cmc
sar
lcall
lock
sub
and
scas
out
dec
mov
into
dec
adc
mov
in
jbe
add
aaa
cld
leave
push
mov
jbe
xlat
loop
mov
or
stc
insl
popf
cmc
mov
repz
and
mov
push
mov
aad
cltd
leave
out
push
add
jae
insl
push
adc
cmp
hlt
mov
cld
mov
mov
dec
in
push
mov
mov
mov
test
pop
cli
lcall
test
lods
inc
adc
add
mov
mov
xor
mov
and
mov
andl
sbb
jno
jae
scas
mov
sahf
jl
xor
loopne
repz
push
inc
lcall
sti
rcrb
sub
mov
aam
and
mul
sbb
xchg
test
fiadds
mov
dec
mov
lea
iret
ds
fists
cmp
pop
jg
push
out
mov
ja
cs
icebp
jecxz
imul
cltd
add
roll
cmp
cli
repnz
into
jo
stc
jp
test
popf
lds
mov
jge
jns
jbe
jbe
leave
mov
adc
rcl
pushf
in
call
out
inc
outsb
cmp
das
xor
outsl
std
mov
ficompl
or
fs
lods
sub
pop
push
mov
mov
inc
mov
movsl
repnz
stos
std
adc
xchg
adc
imul
mov
mov
mov
xchg
into
std
inc
adc
add
call
mov
cmpsb
push
xchg
shll
push
movsb
call
jb
push
pop
pushf
pop
aas
jp
lods
push
negb
adc
push
xchg
push
xchg
rorb
or
stc
mov
jnp
and
mov
stos
and
int3
mov
ficompl
xor
lret
imul
je
je
and
out
sbb
stos
shll
push
aad
xor
inc
cs
or
je
xchg
nop
int
mov
aam
inc
mov
pop
xchg
or
sub
mov
leave
add
adc
and
das
das
ret
ror
cmp
jg
call
jo
into
mov
repnz
mov
cmp
xor
fistpl
loopne
es
mov
mov
les
cmp
sub
mov
xchg
or
in
jg
xchg
aad
repnz
popf
inc
stc
push
or
dec
fcomps
sbb
jp
imul
sar
jo
ret
ret
cld
add
push
dec
outsb
pop
enter
jmp
xlat
xchg
cmp
pop
or
and
xor
andb
mov
ret
loopne
xchg
test
arpl
cmpsb
jle
push
push
out
fwait
xchg
sub
in
pop
dec
shrl
cmp
push
loop
js
dec
xor
adc
cmpsl
add
lea
mov
xchg
pusha
les
lret
pop
xor
int3
sub
push
icebp
pop
xor
push
adc
pop
or
mov
mov
add
sub
out
mov
es
cld
pusha
scas
jnp
pusha
push
inc
pop
push
fbld
std
shl
xor
mov
add
sti
sahf
arpl
jae
jae
fnsave
loop
mov
inc
jb
ljmp
rol
movsl
gs
lock
repz
add
adc
fcoms
mov
andl
mov
test
lcall
mov
xchg
call
test
fisubl
add
or
push
jne
adc
aaa
or
adc
add
in
cltd
popa
imul
in
ret
mov
inc
in
movsl
inc
jecxz
push
popa
lret
int3
xor
mov
push
pop
cmp
jmp
imul
int3
fildl
xor
sbb
mov
fwait
mov
jp
cmc
insl
mov
ret
or
push
insb
test
inc
clc
bound
cmp
test
scas
loope
mov
cmpsb
stos
mov
outsb
out
mov
subb
outsb
inc
adc
inc
into
xor
lcall
mov
testb
jbe
mov
sub
mov
vcvtpd2dqy
pop
adc
sub
clc
cli
loop
repnz
mov
ret
jnp
mov
push
cld
pop
sbb
aas
inc
cmp
test
mov
mov
bound
arpl
mov
mov
test
mov
jbe
addr16
js
iret
pop
test
or
shrl
sbb
fisubl
bound
jecxz
mov
sbb
inc
cmp
xor
ret
cmp
icebp
and
mov
enter
mov
data16
and
and
xorl
repz
mov
mov
addr16
pop
stos
push
xchg
mov
not
cmpsb
loopne
rolb
cli
imul
sti
push
pop
aad
and
stos
sahf
fst
adc
test
push
in
dec
xor
xchg
and
ret
fdivrl
xchg
dec
dec
xchg
jae
xchg
out
cmp
add
adc
add
je
js
sub
jb
inc
fmul
jbe
imul
cs
sub
cmpl
je
test
mov
push
lods
into
cmpsb
jae
push
cmc
lods
jmp
jl
mov
ror
fs
jmp
imul
inc
cmpsb
sbb
xchg
cli
testl
fstl
mov
inc
lea
aaa
mov
pop
pop
arpl
push
xor
pushf
jmp
pop
aaa
stos
in
insl
push
dec
or
dec
mov
xlat
jecxz
cmpsl
mov
in
popa
cmc
pop
mov
xchg
popf
or
adc
movsb
test
stos
mov
pop
jns
inc
push
je
sbb
std
cli
movsl
push
imul
cmp
mov
stos
cmp
sbb
adcb
pop
stos
test
sahf
xchg
aam
inc
lock
fstpl
mov
fistps
sbb
cmp
leave
ret
sbb
js
testb
pop
movsb
int3
loop
test
cmp
movd
push
mov
inc
in
repz
xor
mov
jno
xor
pop
xor
push
dec
in
int3
lahf
std
insb
xor
idiv
pop
push
call
sub
add
jl
insb
or
mov
mov
mov
test
div
rcrl
testl
fldcw
orb
add
inc
leave
push
pusha
jne
adc
testl
mov
icebp
es
movsb
ds
js
rcll
out
mov
xor
inc
shll
cmpsb
sub
inc
xor
icebp
and
jb
and
out
leave
dec
pop
incb
int3
sub
in
ss
mov
and
sbb
pop
sub
divb
mov
out
jecxz
lahf
and
hlt
xchg
scas
scas
xor
pop
addr16
mov
mov
lock
aam
fmul
push
sbb
dec
test
notl
lods
cmpb
mov
mov
cmp
in
shl
sub
mov
push
lods
add
leave
inc
rcrl
rol
data16
daa
loopne
xor
enter
fwait
xchg
add
dec
adcl
pop
lahf
addr16
shl
imul
mov
sbbb
lea
hlt
jg
fidivl
mov
sub
sbb
test
jge
xchg
outsb
pop
ret
push
inc
xchg
popf
mov
sub
out
mov
sahf
call
div
test
movsb
enter
adc
mov
push
and
iret
insl
loope
adc
xchg
lret
sbb
lds
insb
push
cltd
xchg
fisubl
repnz
or
and
sbb
push
fwait
jecxz
pop
ss
loop
dec
std
pop
sub
add
inc
push
sub
pop
add
pop
stc
xor
add
stos
inc
sbb
out
sub
xor
jmp
sti
repz
jae
mov
push
add
and
jnp
sbbl
adc
mov
notb
mov
mov
jp
push
test
jbe
mov
out
fs
jo
aad
mov
xchg
xchg
movsl
stos
mov
pop
jbe
add
loopne
cmp
sub
mov
jbe
mov
cmp
fwait
lock
jp
pushf
in
xchg
jns
and
fbstp
fstps
jmp
aaa
push
mov
insb
arpl
cmc
shrb
gs
imul
xchg
mov
fwait
pop
mov
and
jg
mov
sbb
adc
mov
popf
popa
notl
fsubrp
pop
cmpsl
lods
lods
sub
lcall
dec
ds
ret
rorb
jbe
jge
iret
push
mov
mov
test
jl
sub
cwtl
mov
push
out
lods
je
sbb
or
push
mov
enter
mov
test
ret
and
jmp
imul
cwtl
testl
push
faddl
aaa
les
sub
incl
xchg
add
jecxz
lds
mov
mov
cli
fcoms
aad
faddl
push
aad
push
int
popf
aas
jnp
cltd
repnz
mov
shlb
mov
out
lcall
pop
in
add
jnp
mov
pop
push
adcb
cmp
sbb
testl
out
add
stc
loope
rol
mov
mov
les
loope
pop
jae
jecxz
pop
mov
sub
out
xchg
out
pushl
popf
in
push
mov
cmp
aad
inc
xor
lds
jmp
cld
mov
or
push
mov
aam
mov
push
mov
ljmp
mov
aad
negl
dec
sbb
push
push
loope
outsl
test
cmp
xchg
out
cmpsb
pushf
divb
out
mov
add
push
and
sub
and
pop
fnsave
imul
cmpsl
mov
sub
shlb
xchg
jecxz
sbb
mov
test
out
cld
inc
iret
sbb
mov
fxch
mov
sbb
xor
push
mov
or
ret
repz
insl
dec
stos
inc
xchg
fmuls
push
imul
mov
dec
adc
and
push
push
fbld
or
bound
dec
rorl
inc
push
push
pop
fsts
loop
in
idiv
pop
dec
ret
sbbb
push
fnstenv
fidivrs
stc
fdivs
xchg
dec
sub
mov
imul
insb
out
sub
lret
dec
push
sbb
out
stos
in
push
sub
rorb
push
xchg
lea
mov
scas
es
xchg
in
cmpsb
scas
ss
push
lea
popf
mov
fcmovb
add
adcb
subl
cmp
inc
adc
xor
and
hlt
lret
fiadds
in
and
in
mov
lds
add
pop
mov
jae
stos
imul
das
loope
stos
pop
lock
mov
aaa
arpl
jg
pop
xlat
dec
in
in
push
pop
xchg
fcmovbe
jno
ds
shl
xor
daa
cmc
or
int
fs
push
adc
loop
xor
je
out
fldcw
cmp
cwtl
fdivrl
pusha
pop
jae
dec
in
shl
out
cmp
or
jnp
adc
aad
jae
push
mov
jnp
loope
pop
mov
leave
leave
jbe
pusha
cltd
push
mov
out
xor
icebp
pop
les
aas
test
dec
mov
mov
pusha
cwtl
test
andl
sti
xor
ds
in
lods
ret
or
cld
push
iret
adc
adc
ret
cltd
and
xchg
dec
dec
dec
pop
mov
les
test
shrl
loop
adc
sbb
mov
out
sbb
pop
ret
dec
xlat
push
cmp
jecxz
add
mov
stc
jp
pop
outsb
and
scas
mov
ss
outsl
ds
loope
popf
jmp
lods
mov
test
pop
dec
ret
ffreep
clc
mov
sub
add
repz
in
sbb
and
sbb
lds
inc
lcall
or
popa
push
insl
jp
ret
pop
mov
jbe
into
test
xchg
sbb
cmpsl
mov
mov
stos
aam
fnstenv
xor
add
mov
lret
jmp
inc
stos
clc
pop
inc
dec
negb
pop
rol
clc
test
and
or
insb
push
jl
shrl
mov
stos
dec
mov
scas
ret
push
adc
inc
push
mov
dec
fstl
dec
loop
inc
ljmp
fstpl
add
je,pt
iret
mov
mov
test
sub
rclb
loop
xchg
movsl
dec
or
jo
lret
sbb
mov
enter
sar
jl
inc
pop
xchg
mov
jmp
pop
sub
sbb
push
je
andb
fidivl
in
repz
xor
ja
pop
nop
and
punpckldq
rolb
add
es
push
adc
sbbl
and
mov
dec
pusha
leave
repnz
jbe
mov
or
fimuls
jg
scas
int
addr16
pop
lods
adc
lock
outsl
or
lds
xor
insl
push
or
std
mov
aam
or
es
test
ds
sub
or
lock
mov
movsb
cmpsb
mov
adc
rorb
xor
nop
xlat
inc
cmpsb
push
sub
sbb
cli
lods
jns
mulb
addb
sbb
fs
rcll
filds
sbb
hlt
ret
and
shl
xchg
in
xchg
mov
xchg
add
aaa
in
rcrb
lock
mov
ret
xchg
pop
mov
push
hlt
sub
rcr
dec
shrl
ret
mov
hlt
lods
mov
xor
cltd
sti
jmp
cltd
insb
xor
scas
insl
add
xor
inc
mov
cmp
das
jle
clc
cli
shlb
outsl
inc
lahf
fidivl
arpl
jle
pop
jbe
mov
xchg
fcompl
mov
mov
sbb
fsqrt
outsb
movsl
dec
cli
daa
jae
cli
mov
add
lret
shl
and
sub
insb
lcall
movb
mov
decb
xor
fcompl
bound
popa
fidivs
and
xor
xor
or
mov
nop
mov
rcr
aas
arpl
mov
add
fisttpll
dec
dec
xchg
jno
inc
pop
aam
loop
stos
pop
push
and
xchg
hlt
cmp
imull
scas
int
in
jne
popf
adc
push
push
cmc
adcb
jmp
push
andl
cmp
sub
add
loopne
jbe
outsb
inc
leave
sub
daa
push
mov
cmpsb
dec
dec
lahf
dec
cmp
dec
and
les
push
inc
add
aam
mov
mov
mov
inc
std
fwait
outsb
pop
push
in
test
sub
fiaddl
ljmp
outsb
negb
and
call
stos
fwait
lock
idiv
cmp
adc
mov
gs
cwtl
orl
test
pop
jmp
lea
pop
push
inc
or
cmp
bound
arpl
jne
dec
xchg
in
push
not
mov
jae
out
mov
es
mov
shrb
ret
add
and
dec
push
lcall
orb
fidivrs
mov
je
push
fisubrs
inc
ja
insb
adc
stos
or
sub
lods
into
sub
insl
test
test
or
scas
sbb
mov
test
icebp
cmp
adc
jbe
push
fidivrs
lret
cmp
leave
pusha
sti
sub
sbb
int
and
roll
push
sub
push
lahf
cltd
popf
clc
push
push
aaa
xor
movsl
stc
mov
outsl
cmp
sahf
inc
cmp
movsl
pusha
add
repz
pop
adc
into
sub
xchg
mov
mov
clc
push
push
ja
and
sub
out
cmp
jge
fisttpll
xor
mov
jae
sub
add
es
xor
push
jo
addr16
sahf
pusha
loopne
mov
mov
and
mov
xor
lds
adc
add
mov
test
loopne
cmc
ds
test
mov
hlt
cmc
push
imul
ljmp
fsts
jg
jo
insb
ljmp
mov
add
fisubs
pop
flds
xor
pop
mov
icebp
rol
lea
fadds
xchg
outsl
repnz
gs
loop
xor
fisttpll
jb
sbb
lods
sbb
inc
test
push
inc
xor
loop
ret
repnz
cltd
cmp
stc
jno
fs
dec
fists
rclb
ss
rcrl
cwtl
adc
cmpl
sarl
mov
xchg
out
add
rolb
xor
xchg
and
call
jo
jg
sbb
sahf
mov
mov
mov
int3
pushf
mov
test
inc
fdivrl
out
pop
mov
outsl
scas
ret
cmc
inc
test
pop
mov
fsubs
pop
inc
rcll
xchg
sbb
fisubrs
mov
scas
arpl
or
je
adc
jmp
push
gs
push
shlb
pop
and
jno
mov
mov
or
pop
xor
push
lods
mov
inc
inc
cmp
mov
aas
jo
jg
push
call
aaa
fcoml
push
psubd
into
and
jle
fmuls
rcrb
push
or
fxch
dec
add
aas
mov
mov
dec
insb
in
cmp
push
cmpsl
jae
add
sti
cmp
mov
fiaddl
sbb
aaa
xlat
lods
sahf
mov
pop
sbb
jmp
lret
iret
push
or
add
lret
add
push
push
add
lahf
fs
sti
and
inc
fsubs
add
lock
arpl
aad
pop
mov
inc
mov
mov
out
cmp
jmp
mov
orb
cltd
fists
mov
push
mov
push
add
inc
movsb
adc
cmp
mov
sbb
stc
shll
lret
in
add
xchg
cld
test
xchg
test
adc
add
cmp
je
int3
inc
in
repnz
std
sub
push
dec
mov
inc
cmp
mov
pop
mov
scas
pop
sbb
pusha
pop
add
andl
jmp
dec
inc
scas
rorl
call
cwtl
push
cmp
cmp
sbbl
pop
int3
dec
push
sub
sub
sub
sub
sarb
lcall
fwait
adcb
push
sti
sahf
mov
dec
jns
dec
mov
xchg
aad
xchg
xchg
dec
ss
cmp
test
cltd
cmp
lcall
adc
insl
fadds
sub
xor
rorb
aad
das
mov
add
dec
push
aam
movsb
dec
jecxz
mov
push
es
pop
fsubrs
adcb
push
cmp
stos
and
int
pop
test
js
push
cmp
out
fnstcw
std
xchg
aaa
mov
cmp
dec
jle
inc
inc
mov
movsl
push
nop
pusha
jl
push
loopne
shl
stc
sbb
dec
int
in
add
inc
xchg
jl
sub
or
fxch
jmp
xor
mov
syscall
dec
xor
push
incb
push
fisubs
xorb
in
pop
sahf
mov
mov
icebp
mov
jnp
lcall
xchg
das
xor
sahf
xor
sarl
imul
cmpsb
push
aam
xor
pop
mov
mov
xchg
popf
xchg
clc
and
fldt
jge
fwait
dec
push
and
or
iret
in
add
mov
sbb
mov
or
shr
mov
loop
add
adc
out
test
xchg
push
cmp
popf
and
or
out
cmp
xchg
psraw
jmp
mov
and
ss
mov
subb
out
fbld
jno
cmc
adc
cltd
cmp
out
pop
inc
fsubl
cli
jl
call
lods
pmaxub
xchg
xchg
shl
xor
dec
inc
fldenv
inc
je
lods
or
pop
dec
sub
mov
dec
pop
xor
pop
dec
loope
in
das
jae
mov
stos
sub
xor
mov
ffree
xchg
movsb
jno
adc
lds
xor
fisttps
jo
inc
imul
sbb
repnz
xchg
outsb
dec
ja
mov
inc
xor
cmc
cmp
mov
fidivs
ficomps
push
add
cwtl
or
sub
add
xor
mov
lods
cmp
inc
sub
shr
gs
pop
sbb
adc
into
divl
xlat
xchg
add
ss
pop
add
aad
pop
inc
fiadds
push
in
into
xchg
pop
mov
jo
scas
sbb
sub
les
fs
rcl
lret
scas
xor
nop
xor
push
jmp
roll
bound
loope
fcmovbe
dec
in
ljmp
push
mov
rorb
pop
ja
cltd
push
mov
ds
sub
out
lret
shrb
mov
sbb
arpl
inc
jae
call
xchg
mov
iret
inc
movsb
pop
or
cmp
add
inc
in
or
icebp
int3
shl
aad
cmpsl
cmovl
loope
repnz
popf
cs
aad
and
dec
adc
insl
cmpsb
test
jle
sub
mov
adc
xchg
mov
fisubl
push
les
lea
dec
adc
cmp
pop
xchg
add
xor
and
stos
adc
pop
out
push
cmpsl
int
xchg
aas
sbb
adc
leave
data16
mov
or
or
mov
mov
cmp
ss
in
cmp
adc
stos
lcall
push
mov
mov
flds
mov
push
sbb
push
jle
imul
ljmp
sbb
idiv
insl
sub
pop
in
jo,pn
or
jnp
fucom
xchg
xchg
inc
bound
jecxz
push
or
out
out
cli
xchg
cmpsl
inc
inc
mov
and
mov
das
adcb
subb
call
test
xor
pop
loop
aam
hlt
xchg
nop
repz
xlat
pop
leave
mulb
movsl
sti
inc
jbe
lret
sbb
sub
push
xor
lods
lret
pop
sub
sar
mov
sbb
popf
insl
push
movsb
loop
enter
dec
outsl
jl
xchg
lods
scas
sar
in
jb
rep
hlt
inc
push
arpl
jb
aaa
sub
add
mov
add
inc
or
in
push
xchg
sbb
lcall
adc
test
dec
dec
out
push
jo
dec
jg
out
or
sbb
cmp
and
bnd
add
sbb
iret
jbe
or
dec
psrad
and
xchg
dec
cmp
jb
cmpsl
push
fwait
mov
xchg
movsl
shlb
shl
repnz
movsb
sub
inc
mov
xor
add
xor
outsb
fdivs
shlb
jno
aad
lds
lahf
lods
sbb
sbb
jecxz
ss
aaa
mov
sbb
pop
sub
pop
cltd
cli
add
push
mov
jmp
sbb
test
xchg
mov
rol
repz
or
out
insb
int3
pop
push
inc
xlat
pushf
inc
pushf
ss
in
jmp
iret
call
inc
push
scas
lret
mov
stos
mov
and
xchg
cmpsb
arpl
lds
jmp
sbb
dec
cmpsb
push
in
mov
jbe
jb
movl
fidivrs
push
pop
fsubr
cmpsb
add
adc
das
jge
cmpsl
xchg
adc
inc
push
push
pushf
xlat
mov
hlt
jmp
movsl
outsb
adc
add
ret
jbe
sbb
lret
movsb
jno
pop
aaa
push
daa
loope
outsb
sbb
mov
stos
mov
pusha
dec
in
push
fs
sbbb
xchg
gs
daa
xchg
xor
inc
mov
pop
stos
out
push
xlat
dec
imul
fadd
xchg
mov
xor
les
lods
cvtpi2ps
test
sub
fsubl
dec
fwait
out
int
test
icebp
and
cmc
test
adc
xor
mov
stc
and
xchg
popa
jp
inc
pushl
das
fisttps
insl
test
mov
xor
sbb
clc
push
xchg
shl
mov
inc
xchg
ljmp
cld
jno
cmp
push
test
dec
out
adc
jne
arpl
xchg
lret
cs
popf
jbe
jnp
rolb
pop
lcall
mov
gs
dec
dec
popa
jne
ljmp
push
cmp
ficomps
lret
xor
or
and
sbb
mov
mov
dec
xchg
ret
shlb
lock
pop
push
add
insb
jns
imul
aam
in
test
adc
mov
and
ret
xchg
sbb
xchg
adc
and
out
jmp
dec
into
mov
lods
cmp
jno
inc
mov
sub
add
imul
das
stos
aad
into
sbb
pop
mov
cmc
ret
aas
in
jp
inc
or
dec
out
gs
xchg
neg
cltd
sbbl
paddusb
xchg
push
mov
fnstcw
dec
cltd
jl
sar
xchg
cmp
mov
mov
ret
out
or
jl
es
imul
aam
stos
clc
push
aaa
mov
outsb
xor
pop
stos
subb
lea
in
shlb
pop
bound
call
mov
adc
icebp
jnp
dec
jmp
aam
jge
add
inc
xor
mov
jae
daa
and
lock
push
jae
mov
ja
sub
fldcw
mov
dec
scas
cmp
ret
insl
sub
sbb
lret
push
decl
aad
mov
not
jno
adc
sbb
imul
jns
mov
pop
rolb
hlt
fs
fnstenv
jg
xchg
jle
mov
test
and
mov
xlat
sub
lret
cmp
sarl
xor
xor
jnp
add
nop
mov
sbb
push
inc
push
or
mulw
and
push
pop
aad
cmp
in
inc
add
dec
int
movsl
fmull
je
fiadds
mov
pop
mov
sbb
sbb
xchg
adc
or
fsts
in
cmpsl
push
sbb
pop
pop
sarb
test
jecxz
cmpsb
push
frstor
cmc
ret
mov
jg
es
data16
inc
jmp
pushf
test
sub
pushf
adc
mov
rorl
loope
loopne
icebp
dec
mov
add
or
movsb
imul
in
movsl
dec
hlt
jns
adc
pop
ljmp
sub
push
mov
dec
push
push
addr16
pushf
enter
push
jg
scas
push
push
adcl
add
mov
stos
fwait
enter
and
push
add
daa
sbb
lea
mov
cmp
mov
aad
sbb
cmp
insl
xchg
jb
imul
jl
js
fldcw
pop
add
fwait
sub
adc
mov
data16
repz
addr16
push
mov
mov
jno
and
lds
or
jp
xor
xchg
std
mov
addr16
dec
sbb
sub
and
push
inc
add
jle
das
dec
sarb
push
stc
insb
mov
bound
jl
cmp
lock
lret
mov
popa
dec
test
mov
mov
jb
or
or
push
xchg
lret
mov
cmp
lods
mov
dec
mov
lock
cmc
ficomps
adc
imul
aam
jge
adc
sahf
jns
or
mov
loope
repz
ljmp
xor
cmp
cmp
fdivrs
lds
dec
mov
push
push
push
out
xor
lret
in
mov
jp
fimuls
call
fwait
xor
or
aaa
xor
cmp
pop
adc
sahf
outsb
repnz
mov
mov
adc
cmp
int
mov
pslld
in
pop
sbb
cmp
mov
mov
call
xor
cmp
xchg
cmp
sbb
jp
sub
sbb
jbe
sbbl
and
inc
sub
inc
adc
inc
inc
mov
shll
pop
imul
jge
xor
mov
cltd
xor
adc
pushl
add
mov
pop
int3
dec
mov
divl
adc
pop
mov
into
sbb
push
aas
dec
xchg
aas
rorb
adc
dec
add
pop
push
cmp
aam
out
cs
push
stc
iret
popa
pop
push
mov
sub
mov
dec
ds
xchg
cmp
out
insl
test
xor
lods
out
xor
xor
xor
mov
adc
mov
dec
cvtsi2sdl
xor
jbe
in
dec
fldenv
mov
xor
mov
jne
mov
sbb
jl
js
fstpt
scas
pop
mov
dec
cmpsb
xchg
sbb
sbb
js
bsr
cmp
cli
mov
sub
sub
xor
dec
pop
ljmp
je
cltd
cmpsb
decl
xlat
rcpps
jno
repz
std
push
xchg
and
imul
push
mov
data16
test
insl
sbb
sbb
mov
int3
orb
mov
jo
mov
lds
int
stc
movsb
inc
jb
sti
hlt
sub
dec
and
xchg
and
stos
repnz
lret
call
shl
imul
int3
int
stc
xor
mov
arpl
mov
pop
mov
jb
xchg
outsl
pop
pop
lret
andb
xchg
sbb
jmp
jno
sbb
or
pop
insl
aam
or
push
movsl
outsb
loop
test
sbb
lret
xor
jmpw
mov
or
pop
cmp
fs
nop
insl
or
cmp
sub
jle
cmpsl
xchg
fwait
xchg
fs
gs
xor
push
or
add
out
pop
out
mov
xacquire
sub
jmp
or
xchg
stos
cmpb
or
inc
fistps
mov
sti
mov
loope
movsb
sub
ja
out
xchg
mov
scas
sysret
push
mov
sub
sub
and
arpl
pop
dec
dec
mov
mov
or
dec
fadds
jle
and
pop
push
ret
sub
sarb
cmc
and
xchg
sbb
adc
cwtl
cmp
out
pop
sti
jae
lcall
xchg
repz
cmp
imul
and
mov
jne
lock
arpl
jle
push
jb
imul
aas
xor
mov
cli
enter
jnp
dec
mov
lods
sbb
les
push
pop
push
xor
inc
cmp
fisubl
sar
cld
andl
pop
push
clc
scas
mov
insl
lods
cmc
xchg
xlat
leave
mov
mov
mov
or
jo
lods
xor
enter
cli
lds
xchg
iret
mov
aam
in
lcall
mov
dec
and
in
xor
or
pop
loopne
cmp
push
stos
sbb
add
fidivl
sbbl
jb
mov
mov
test
add
lea
adc
divb
cs
cmp
pop
xchg
pop
shlb
or
ljmp
ret
add
push
fs
dec
repz
mov
jp
cld
ret
into
cmpl
jnp
mov
fnstsw
stc
cmc
xchg
repnz
mov
push
fmuls
sub
push
lds
ja
shrl
test
xchg
icebp
cmpsb
call
mov
or
and
mov
movb
add
stos
jecxz
popl
xchg
sbb
cmp
cmpsb
mov
in
mov
pop
mov
int
cs
cmp
mov
cmp
xchg
shlb
fwait
imul
xchg
mov
mov
int3
test
stos
rorl
jg
xchg
outsb
pop
or
add
adcb
cmc
ljmp
sub
scas
ud1
pusha
arpl
idivl
mov
xorl
iret
lret
shll
sub
enter
or
jge
fadd
jbe
dec
sbb
into
xchg
out
ljmp
mov
mov
mov
imul
cmp
fistl
dec
jecxz
shl
inc
mov
inc
aam
xchg
jb
in
mov
adc
cli
rorl
jnp
sub
or
mov
cmc
jbe
mov
fadd
adc
lock
dec
mov
sbb
int3
add
ljmp
mov
mov
cmp
fs
sub
fdivl
in
xor
xchg
sub
test
ret
loope
fdivrp
jp
add
lret
stos
fsubrs
mov
push
mov
pop
dec
shlb
scas
add
mov
loope
mov
mov
jbe
and
pop
push
pop
mov
cmp
push
jno
loope
dec
push
dec
cmp
icebp
and
test
pop
dec
xchg
stc
fnstcw
jmp
outsl
pusha
frstor
cli
xor
cmp
jb
xchg
cmpsb
mov
popf
data16
or
inc
sub
popf
in
movsb
push
out
pop
jo
cmpsl
jge
int3
stc
inc
cwtl
outsb
mov
sbb
adc
mov
jmp
ja
pop
jg
addl
test
movsl
les
sub
cs
ret
mov
xor
push
loopne
mov
push
mov
imul
divb
adc
xchg
out
mov
xchg
xor
pop
xorb
enter
add
or
dec
inc
xor
pop
mov
pop
jmp
stos
inc
inc
pop
xchg
cmp
jg
shlb
decb
aaa
cmp
in
in
es
subl
mov
sbb
insb
jbe
pop
cld
jne
mov
push
mov
int
dec
and
adc
fnstsw
ret
push
gs
inc
decl
mov
cmp
xor
insl
shlb
loop
popf
mov
jl
mov
icebp
push
or
jo
mov
sub
push
cs
aad
sbbl
sahf
lds
popf
icebp
adc
enter
out
jnp
xor
xor
cmp
rorb
mov
filds
dec
inc
lods
and
fst
repnz
stc
sub
xor
sbb
and
out
fldcw
mov
cmp
jmp
iret
mov
mov
aaa
sti
xor
sub
test
filds
xlat
frstor
arpl
mov
mov
xor
inc
jge
jno
stos
ljmp
pusha
inc
arpl
push
cmp
sarb
ds
xor
pop
repnz
mov
out
in
movsl
cs
cmp
and
mov
xchg
jo
gs
test
sub
sub
pcmpgtb
cs
jmp
in
leave
jmp
cwtl
and
addr16
bound
lcall
mov
cmp
enter
pop
dec
jno
cmp
adc
sarl
push
mov
lahf
lods
cltd
xor
loop
paddd
icebp
enter
out
xor
adc
inc
sub
or
cmp
adc
mov
mov
push
dec
jno
jae
mov
push
inc
add
loope
jae
mov
mov
dec
arpl
xchg
dec
and
sarb
out
pmaxsw
fcoml
aam
push
popa
cmp
xor
rolb
hlt
inc
add
shrl
cltd
outsb
cmpl
popa
clc
fnsave
or
adc
or
pop
jne
inc
ljmp
shll
mull
test
cmp
push
pop
sub
stc
push
clc
pop
addr16
loopne
jb
outsl
ljmp
cmp
mov
imul
mov
cwtl
pop
cmp
mov
movsl
jg
maxps
cwtl
jne
movsl
pop
xor
mov
dec
mov
xchg
push
jno
push
rclb
fscale
out
xchg
clc
sarb
in
cmp
in
push
adc
pushf
stos
aam
test
call
aaa
cwtl
out
pop
adcl
fadds
push
in
pop
outsb
mov
mov
cmc
mov
cwtl
mov
vpunpckhwd
mov
push
mov
rclb
add
ficomps
ds
test
jp
add
adc
cwtl
test
je
sbb
or
into
and
rorb
ljmp
mov
lods
cltd
xchg
ds
or
mov
cmp
push
mov
ficoms
inc
in
xchg
cmp
cwtl
cwtl
in
cld
enter
add
test
movsl
lret
mov
pop
push
mov
pop
jae
adc
cld
pop
push
loope
ret
pop
imul
jb
fadd
dec
jp
add
out
ds
out
adc
jae
jge
pop
rcll
jp
jb
icebp
xchg
xchg
xchg
push
sbb
or
push
cs
mov
pusha
dec
nop
mov
cmp
pop
xchg
push
adc
loopne
and
sbb
mov
test
pushf
pop
pop
pop
and
mov
inc
mov
nop
scas
fisubs
jns
push
mov
jecxz
aad
clc
sub
cmp
sub
stc
xor
sub
arpl
mov
mov
icebp
xchg
sahf
out
mov
adc
xchg
jl
or
ret
and
lods
jp,pn
mov
popf
pop
jbe
inc
in
movsb
pop
xchg
jecxz
movl
frstor
xchg
arpl
pop
pop
sub
adc
or
stos
sarb
in
aad
add
into
sbb
sub
push
mov
mov
lret
add
adc
loopne
popf
add
lds
push
xor
outsl
push
cli
clc
mov
es
xor
mov
pushf
iret
sbb
mov
mov
mov
jb
aaa
mov
cltd
shl
in
ja
adc
fwait
jnp
cmp
stos
addb
loop
data16
not
stos
add
fdivr
pop
movsb
popf
test
xchg
sbb
mov
fcomp
mov
add
test
push
mov
push
daa
jg
mov
mov
add
jnp
out
sub
clc
enter
sbb
or
and
mov
pop
and
in
jl
movsb
cmp
in
xchg
push
js
xchg
gs
jne
scas
xchg
addr16
js
loopne
mov
fsub
and
orl
adc
int3
out
ljmp
add
test
push
cmp
sub
jne
negb
pop
sbb
mov
push
pop
pop
dec
adc
cmp
push
pop
ficomps
or
fcomi
stos
ja
in
or
scas
push
into
cmp
cli
xor
icebp
imul
push
dec
test
cmp
fsubrs
lds
pusha
loopne
vxorpd
subl
and
push
xor
dec
jo
into
int3
cmp
mov
cmc
push
inc
leave
into
pusha
fisubl
das
test
imul
mov
pop
jg
lock
pop
xor
sub
xor
xchg
test
xchg
inc
ficomps
xor
push
mov
add
popf
fstps
lcall
xor
cs
adc
and
dec
loop
hlt
mov
inc
cld
rcll
push
sbb
jb
cmpsl
push
bound
inc
aas
les
xchg
push
xor
repz
push
fcomp
jns
in
scas
inc
jecxz
xchg
insb
and
ficomps
inc
das
mov
cmp
cmp
mov
adc
fsubr
arpl
cmpsl
int
jb
nop
xchg
sbb
gs
rolb
pop
enter
or
lret
cmp
sbb
jle
dec
sbb
lcall
mov
mov
out
daa
pop
add
outsl
sbb
loopne
icebp
sbb
mov
gs
or
fstl
jae
iret
popa
insl
cmpsl
cltd
lods
push
out
stos
loope
mov
xorl
xchg
cmp
stc
insl
ret
sahf
divb
inc
fsubrl
push
inc
xchg
push
es
js
jg
aam
jnp
jge
aad
mov
push
and
mov
lds
adc
inc
rorb
cmp
es
jns
xor
pop
xchg
insl
mov
loopne
xor
xchg
pop
push
dec
add
inc
jp
mov
push
cmpb
xor
cld
jno
sti
sbb
cld
sti
adc
xor
sub
add
adc
movsl
xor
pop
xor
data16
in
in
std
sbb
cli
test
stos
dec
inc
mov
cs
push
insb
arpl
push
mov
sbb
mov
out
fsts
or
mov
jbe
clc
jecxz
out
add
fwait
scas
fwait
das
push
push
std
mov
jmp
test
or
shll
pop
dec
out
sarb
imul
std
lock
pusha
jmp
inc
std
xchg
test
mov
into
adc
push
cmp
and
push
dec
popf
jge
mov
mov
lret
jge
adc
add
sub
addr16
xlat
call
mov
dec
and
pop
xor
cltd
lds
or
jg
dec
mov
and
insb
xchg
in
cmp
outsb
push
or
adc
clc
nop
das
in
jecxz
sub
jne
jns
in
push
jg
xchg
movsb
ss
mov
push
shll
lock
lods
adc
ret
jae
xchg
out
xlat
push
mov
das
jecxz
pop
and
scas
pop
cmpsb
jb
jb
jo
add
lds
jb
data16
mov
add
mov
test
pop
mov
mov
xchg
add
loopne
dec
roll
push
aaa
xor
rol
daa
mov
mov
fidivs
call
adc
in
movsl
xchg
in
mov
add
pop
stos
mov
xor
imul
adcl
call
mov
out
imulb
mov
push
movsb
aam
dec
xorl
dec
mov
xchg
rcl
in
aam
push
mov
jb
int
test
pop
out
std
sub
or
sub
cmpsl
mov
aas
push
push
sbb
push
and
aaa
mov
mov
aas
cmpsl
dec
pop
xchg
ds
push
cmc
js
pop
sbbb
or
neg
xchg
push
loop
ljmp
add
int
push
pop
or
xchg
lods
rcr
jl
pop
adc
xor
sub
inc
aas
mov
inc
insb
sbb
insl
push
inc
add
in
xchg
and
fcoms
loopne
inc
rcrb
dec
cltd
xchg
push
cltd
jno
sub
cmp
xor
push
fs
and
repz
cmp
or
pop
je
mov
and
imul
jb
jno
ljmp
repnz
aaa
xchg
lock
or
rol
repz
xor
jnp
dec
cld
mov
add
dec
jb
xlat
sub
out
push
std
sbb
sbb
mov
mov
pop
inc
rcll
xor
mov
mov
subb
mov
push
ret
sub
xchg
or
pop
mov
mov
and
jne
gs
jnp
mov
cmp
push
movsb
push
cmp
movsb
out
push
cmp
outsl
jl
sbb
stos
mov
cmp
daa
sub
mov
movsb
mov
sub
xor
mov
inc
jecxz
notl
out
incl
popa
dec
mov
outsb
rol
inc
aad
fstps
cwtl
lret
enter
icebp
mov
into
jmp
fisubs
insb
rorb
pushf
dec
in
push
push
push
aam
inc
pop
mov
adc
test
jno
mov
and
in
pusha
add
cmc
pop
aam
sub
aad
add
sub
jno
sbb
mov
pusha
shll
add
fstl
ds
cmp
pop
pop
sbb
cmpsb
sbb
cmp
sbb
xor
jo
int
shll
xor
sbb
adc
mov
in
push
les
pusha
cmp
test
fucomp
ret
inc
fstpt
call
roll
sbb
daa
pusha
pop
pop
stos
mov
cmc
push
adcl
mov
out
aaa
push
adcl
sti
arpl
xor
sbb
mov
cmpsl
xlat
adc
sub
or
scas
mov
stos
lret
xor
popa
imul
call
dec
inc
clc
fdivr
sub
add
pop
loop
int
dec
test
insl
aas
adc
push
ret
lret
lods
mov
insb
push
sbb
call
stc
scas
daa
inc
fs
out
jg
adc
popf
iret
clc
xchg
sub
add
sbb
mov
loop
sub
sbb
aad
sbb
lahf
jns
and
xor
add
sub
cmp
mov
jge
loope
scas
leave
mov
jns
adc
les
iret
mov
cltd
int
push
test
fstpl
in
fisubrl
pusha
sbb
out
and
pop
push
stc
nop
int3
stos
add
ljmp
cmpsl
in
sbb
xchg
pusha
dec
push
mov
mov
imul
cmp
xchg
mov
fsubrs
xchg
cwtl
sub
cwtl
push
mov
pushf
cmc
in
fildll
js
push
dec
jo
xchg
or
stos
sahf
insl
adc
inc
xchg
clc
out
mov
mov
inc
psubusw
xor
or
arpl
popf
mov
scas
movsl
push
jb
inc
pop
mov
cltd
cmp
adc
pusha
adc
cmp
adc
pop
ret
fdiv
lds
cmp
dec
sbb
mov
cmc
fisubrs
loope
inc
cmp
push
cmp
mov
cli
iret
jb
push
dec
push
jmp
aas
mov
scas
inc
outsb
pop
push
xor
adc
or
add
push
xorl
leave
ja
fldt
fisubs
outsb
push
bound
cmc
push
mov
push
mov
rolb
adc
pop
call
push
mov
icebp
inc
inc
fnstenv
and
movsl
orb
jbe
mov
mov
je
adc
into
in
jo
sub
aaa
aam
test
cmp
ja
sbb
scas
sub
cmc
loop
jb
push
pop
pop
repnz
fs
push
mov
sub
in
sub
lods
and
jb
mov
sbb
sbb
jbe
into
mov
rcl
sti
cmp
jg
or
mov
mov
and
in
shlb
sub
inc
arpl
and
imul
bound
cld
sub
sti
push
shll
shll
push
cltd
xorl
clc
cltd
sub
mov
pop
pushf
hlt
je
fmul
fistpl
jno
push
inc
ret
add
push
jns
sbb
aas
inc
mov
mov
inc
dec
mov
lcall
dec
repnz
mov
ffreep
lea
pusha
pusha
in
mov
inc
in
cmp
lea
shl
addr16
fiaddl
lret
popf
xor
push
js
sbb
rclb
add
pop
jb
mov
je
xor
arpl
bound
cmc
repz
inc
je
nop
cmpsb
add
inc
addr16
stos
mov
sbb
xchg
sarl
lret
and
xor
mov
idivb
popa
xchg
or
in
dec
cmp
adcl
fsubrs
pop
frstor
mov
push
pop
cmpsb
imul
jns
dec
xchg
add
test
iret
mull
adc
pop
scas
js
leave
xchg
cmp
lods
sar
std
jl
ss
inc
mov
ljmp
mov
push
pop
loop
sarl
adc
cmp
or
pop
rcrl
je
jno
sbb
lcall
or
xchg
hlt
cmp
in
pushf
cmp
inc
add
jns
pop
pop
or
pop
adc
nop
stos
dec
mov
mov
sbb
scas
pop
sub
or
out
rcr
dec
and
adc
int3
data16
lods
repz
into
sub
aaa
jnp
or
fisubrs
into
sti
shrl
mov
ljmp
outsb
or
loop
idiv
call
add
lock
call
pop
imul
dec
push
xchg
cmpsb
gs
cmpsb
mov
shl
or
jg
mov
test
fs
push
inc
sub
pop
jno
sub
adc
iret
sub
mov
bound
mov
cld
sbb
or
cltd
mov
pop
jmp
mov
fs
adc
push
sub
jo
sub
jl
inc
aaa
adc
ret
test
push
ja
sti
push
jle
inc
mov
or
mov
cmp
rcr
daa
leave
sbb
lock
and
pusha
jmp
or
jmp
aas
fwait
cld
and
push
into
xchg
sub
loope
xchg
aad
movl
sub
xor
dec
xchg
sti
imul
es
movl
insl
gs
add
cmc
jle
mov
lods
cltd
fwait
add
push
jp
popa
rclb
call
cltd
loopne
xchg
jmp
mov
jecxz
xor
imul
push
enter
adc
fildll
into
gs
xchg
adcb
lods
push
call
mov
push
mov
mov
push
andb
insb
push
or
dec
rorb
adc
or
dec
sub
setbe
movsb
pop
mov
sbb
sub
js
pop
push
push
inc
mov
mov
xchg
dec
repz
xchg
sub
and
je
jmp
subl
sbbb
mov
rorb
mov
add
leave
in
xchg
add
jp
pop
xor
testl
mov
dec
jno
mov
add
int
pop
dec
mov
lds
pop
cmpb
aam
sbb
xchg
inc
sbb
sbb
outsb
movsl
cmc
fwait
scas
dec
adcb
outsb
in
outsl
fs
mov
inc
notl
scas
je
fistpl
or
or
hlt
sub
lret
aad
or
out
sbb
out
aas
mov
popf
adc
ficomps
fs
inc
cmp
cmpb
iret
lea
xchg
test
lds
mov
mov
fwait
dec
pop
or
inc
lret
int3
xchg
xor
test
mov
mov
jl
jge
and
add
inc
pop
mov
jae
fidivrl
push
dec
in
pop
jae
jo
inc
jg
push
pop
sbb
xchg
pop
mov
sbb
bound
mov
daa
test
adc
xchg
es
mov
imul
movb
scas
add
push
pop
xor
je
ljmp
int3
test
adc
inc
mov
pop
aad
sub
xchg
dec
mov
imulb
jmp
scas
out
imul
subb
test
mov
inc
and
lahf
vphsubdq
imul
movsl
jo
mov
in
nop
leave
mov
cmpsb
cmp
xor
cmpsl
test
dec
jae
push
dec
inc
fs
push
xor
lock
and
pop
push
or
or
rcl
pop
fldcw
call
add
fmull
inc
rclb
cmc
sbb
scas
add
mov
mov
or
dec
mov
pushf
mov
in
cmp
stos
roll
jmp
xor
cmc
pop
xor
or
nop
lcall
sub
mov
push
fistl
push
lods
outsb
push
lahf
jns
leave
push
imulb
cmpsb
or
and
jb
xchg
pop
adc
or
pop
ret
xchg
cmp
jmp
andl
jge
loop
pop
into
pop
xor
mov
adc
jp
aad
adc
fst
inc
daa
adc
sub
push
adc
test
aam
mov
repz
pop
mov
sbb
lahf
movsl
push
xchg
int
das
pop
cmp
mov
addl
mov
or
decb
adc
cmp
or
cld
mov
cli
shll
sbb
pop
into
push
pusha
ljmp
and
cmc
setns
cmpsl
aaa
push
arpl
sub
loopne
mov
fcmovb
mov
xchg
movsb
int3
stos
mov
imul
push
mov
pop
test
fdivrl
cwtl
stos
arpl
lds
push
or
pushf
jecxz
mov
mov
test
stc
lock
xorl
scas
jl
xchg
js
xor
dec
outsb
lcall
inc
clc
sub
cmpsb
xchg
in
xchg
cmp
push
inc
mov
es
sub
fstpl
add
pop
scas
xor
sbb
xchg
ret
inc
sub
cmc
in
inc
aaa
mov
std
dec
repz
popf
repnz
and
jnp
int3
cmpsl
out
jg
mov
pop
int
stc
sub
popf
pop
popf
mov
movsb
dec
lret
mov
mov
xchg
out
cmpsl
push
dec
in
leave
das
jmp
sub
sub
sbb
dec
dec
pop
out
dec
dec
pop
or
add
subb
sub
repz
repnz
dec
cmc
pop
push
shrl
cmc
popa
lahf
mov
stc
hlt
pop
cmp
mov
push
and
add
pop
dec
pop
sub
pop
xor
sub
pop
std
and
outsl
loopne
push
inc
jb
aaa
jnp
mov
mov
addr16
sub
fstp
int
aam
inc
cmp
adc
jnp
stc
leave
dec
in
dec
ficomps
mov
cmp
rclb
jae
push
rclb
insl
lret
ret
scas
popf
js
fidivrl
add
repz
in
iret
pushf
jecxz
mov
fcom
jbe
adc
shrl
lock
inc
repz
xor
adc
pop
and
clc
into
fdivl
adc
fcoml
push
push
sub
adc
pop
dec
or
cltd
ror
mov
jg
push
loopne
fadds
jo
jno
js
mov
fsubrp
jle
xor
xchg
xorb
sub
lea
es
std
push
mov
call
add
jle
and
jo
shll
and
shrb
fisubl
es
pop
jg
xor
lret
sub
gs
mov
fs
mov
inc
sti
cmp
push
jns
jnp
and
jl
sub
in
xchg
push
add
shrl
lcall
roll
inc
adc
inc
ss
pop
fdivrs
repz
or
inc
dec
fstpl
sbbb
dec
sub
inc
or
dec
jb
cmpsl
pop
aas
fidivl
and
lret
sbb
adc
js
mov
icebp
add
cli
pop
stos
ljmp
mov
addl
dec
fildl
das
jae
adc
add
fisttpll
cmp
fidivl
adc
dec
rorb
mov
add
pop
add
je
in
adc
pop
pop
cmp
mov
mov
cmp
outsl
addr16
sub
loopne
ret
mov
cmp
jo
nop
in
jp
mov
bound
lods
clc
push
and
or
dec
push
arpl
sbb
je
pop
popa
and
test
js
mov
arpl
seto
mov
lcall
pushf
or
movsl
cmc
push
gs
push
sahf
mov
call
jg
add
sti
je
outsb
xor
insb
lahf
sbb
aad
mov
push
test
std
sbb
mov
or
mov
jnp
scas
add
int3
sub
icebp
inc
jae
inc
sub
ss
out
or
lahf
and
fdivrl
and
dec
les
leave
xchg
insl
sub
push
push
ret
popfw
mov
cmp
dec
mov
repz
daa
cltd
mov
popa
xchg
lods
aas
or
mov
or
and
push
ficoms
stos
adc
in
std
xchg
adc
movsb
sbb
lret
adc
cs
sbb
xlat
enter
sub
scas
push
outsb
aam
fs
fiaddl
mov
test
test
sub
test
call
jmp
inc
out
popl
inc
sbb
sarb
mov
mov
cltd
xchg
test
pop
add
lret
mov
xor
sar
loope
adc
mov
aad
inc
inc
icebp
dec
sti
dec
xchg
and
cwtl
dec
mov
cmp
stos
dec
cmpsb
add
and
into
sbb
pusha
ljmp
sarl
nop
push
ljmp
mov
add
loop
push
lcall
repz
outsl
adcl
fdivl
dec
pop
cmp
ret
ja
jmp
pop
ds
pop
sbb
int3
pop
jle
dec
xor
daa
pop
xchg
pop
push
or
test
icebp
sub
mov
or
xor
movsl
aaa
pop
lahf
pushf
repz
jno
sbb
ljmp
add
repnz
fmull
shrb
stos
lods
rcll
mov
nop
dec
subb
in
std
inc
cwtl
lods
jo
lret
gs
aas
out
mov
fsubrs
dec
and
mov
sbb
push
add
jae,pt
mov
aam
fidivs
dec
cmp
mov
test
xor
cmpsl
inc
mov
mov
aad
mov
jp
inc
push
pop
jns
stos
inc
les
aas
jb
loope
jl
mov
pop
cmp
jmp
dec
leave
add
call
test
push
int3
mov
jo
inc
aam
ljmp
xchg
outsb
inc
pusha
mov
mov
fadds
push
xor
jl
data16
and
inc
inc
cmp
pop
divl
dec
lret
mov
scas
xor
je
and
pop
mov
sbbl
dec
lods
sub
or
jae
hlt
xorl
mov
xor
test
ret
add
imul
xor
mov
push
cld
dec
es
add
add
jle
xchg
rol
pop
dec
lods
push
jb
mov
cltd
divb
das
orb
popa
test
rclb
mov
mov
into
sbb
adc
nop
jge
fistpll
es
pop
mov
cmpsl
shl
xchg
loopne
inc
in
enter
xor
jno
daa
cmp
pop
and
adc
push
and
outsb
fwait
inc
xchg
call
xchg
sub
jmp
ret
inc
mov
xor
out
inc
xor
inc
pusha
sub
push
jle
dec
ljmp
or
dec
fs
sbb
mov
pop
cli
clc
jmp
dec
pop
arpl
bound
sbb
loope
aad
inc
add
mov
jae
pop
clc
xchg
lods
jle
sub
popa
inc
mov
mov
fsubrp
filds
and
jno
adc
fcmovu
xchg
jno
ss
push
or
shr
xchg
cmp
sti
dec
mov
push
cs
cli
in
mov
and
and
inc
push
cmpsb
jecxz
dec
xor
mov
pop
xchg
mov
js
sbb
dec
add
lahf
inc
inc
std
xchg
movsb
xchg
data16
arpl
sbb
movsl
inc
xchg
aad
outsl
xchg
lret
in
ds
cmp
shrl
inc
fldl2e
out
ror
test
xchg
stc
push
call
leave
jae
incl
sub
jbe
xchg
movsl
out
push
mov
jp
jle
ss
jns
cltd
adc
dec
stos
jns
sbb
add
xchg
pop
mov
call
xor
cmp
lea
jbe
mov
push
xlat
sub
mov
or
idivl
arpl
fwait
add
jno
pop
push
dec
push
jnp
insb
pop
and
xor
in
jl
dec
nop
fimull
lret
ror
or
jmp
lret
cmp
add
mov
jb
mov
rcll
imul
cld
lock
xchg
push
dec
shlb
lcall
mov
out
xchg
nop
mov
iret
into
add
xadd
inc
add
insb
lea
out
fistps
subl
or
sub
clc
insb
and
cmpsb
push
pop
cwtl
cmp
aad
jbe
imul
sahf
fs
out
out
stos
imul
pop
aaa
test
das
jp
push
lret
mov
jbe
rsqrtps
and
jmp
loope
adc
in
aad
ret
mov
add
push
out
cld
sti
sahf
mov
xor
outsb
sub
leave
lods
and
cli
enter
call
or
stc
push
pop
xor
ret
lea
sbb
jns
out
divl
mov
mov
add
mov
sbb
ja
movsl
enter
pop
data16
ja
ret
jmp
push
rorl
xchg
popa
int3
lahf
fdivl
inc
mov
dec
lahf
add
dec
sub
data16
dec
adcb
inc
sub
ss
pop
mov
cmp
movsb
xorb
pushf
xor
fiaddl
ja
mov
fucomp
mov
cmc
idivb
xor
mov
lret
test
je
sbb
insb
sub
cmpsl
dec
enter
pop
xlat
mov
ds
xor
pop
adc
dec
pop
not
fstl
xchg
jmp
mov
negl
jmp
movb
and
test
mov
pushf
pop
xchg
sub
or
jle
nop
mov
push
add
cwtl
scas
inc
add
test
lods
push
and
xchg
js
xchg
pusha
pop
add
rorl
mov
cmp
js
sbb
neg
mov
mov
xchg
pop
or
push
inc
mov
inc
dec
jne
xor
daa
leave
xor
xchg
std
popa
andl
inc
mov
sbb
rolb
jge
sbb
xchg
gs
into
pop
loope
push
movsl
dec
dec
dec
mov
sarb
addl
add
mov
dec
mov
cmc
int3
pop
xor
inc
aas
xrelease
hlt
lock
fidivrl
jbe
jo
nop
sahf
and
cmpsl
push
adc
lock
sub
clc
scas
mov
xchg
xchg
add
or
insl
hlt
mov
out
mov
fwait
test
xor
pop
les
cmc
stos
jecxz
jl
xor
fwait
lret
xchg
xor
std
mov
pop
inc
divb
repz
shll
xchg
pop
imul
or
nop
dec
sbb
sbb
fucomp
scas
lock
dec
iret
pop
add
sbbb
mov
jmp
push
flds
notb
sti
sub
out
orb
pop
pop
jae
test
sbbl
iret
cltd
pop
mov
sti
pop
cwtl
adc
cmpsl
out
je
add
scas
xchg
add
iret
daa
in
pop
push
xchg
in
xchg
lock
or
jl
fbld
fistpl
cmp
xchg
sarb
jne
out
add
xchg
into
mov
es
shlb
adc
and
fidivrs
jecxz
or
xchg
pop
ret
mov
sbb
sbb
cwtl
push
hlt
mov
fucom
int3
or
scas
dec
in
rcr
stos
cmp
xor
mov
adc
sub
jnp
repz
inc
aad
mov
rcr
test
sub
sbb
jae
add
jge
pop
ret
repnz
cmp
sbb
or
ds
inc
aad
xlat
test
fbstp
std
fnstsw
push
sub
xchg
xor
cwtl
mov
leave
nop
mov
jns
cmpsb
add
dec
lret
out
mov
pop
mov
clc
hlt
outsb
popf
and
mov
pop
insl
daa
inc
jno
dec
test
adc
stc
aad
adc
int3
lods
arpl
iret
in
jg
cmpl
in
mov
xchg
xor
jns
call
fsts
dec
scas
lahf
out
lret
cmp
sub
scas
inc
outsl
mov
xor
inc
cmp
out
jle
out
lcallw
mov
add
fcompl
mov
iret
mov
xchg
aas
sbb
mov
xchg
fst
cmpsl
sbb
je
loop
in
insb
sbb
sbb
popa
pushf
mov
jl
ja
xor
ss
inc
aaa
cmp
mov
inc
shr
mov
in
bound
outsb
sti
push
pop
in
xchg
aaa
or
pop
jae
mov
jo
lret
test
fdivrl
loope
mov
mov
test
inc
dec
xchg
cmp
sahf
mov
nop
push
push
js
push
mov
test
pop
pop
pop
jl
loope
rcrl
mov
movsb
add
cmp
mov
mov
test
test
popf
push
cmp
add
pop
andl
or
mov
aaa
je
sub
cwtl
repnz
insl
dec
and
jae
ret
cmc
inc
out
scas
test
mov
mov
add
or
call
rcrb
dec
mov
imul
rolb
scas
fwait
sub
inc
sarb
lea
mov
andl
push
aaa
sbb
pop
jb
sti
outsl
mov
sbb
mov
ret
mov
movsb
jno
inc
mov
int3
ljmp
and
add
test
xchg
jge
ljmp
shll
imul
idivb
cmpsl
cmp
imul
sbb
adc
adc
stc
ficompl
adc
jae
xchg
adc
dec
inc
adc
data16
in
aaa
mov
repnz
dec
cmpsb
fdivp
scas
mov
aam
mov
lahf
stos
adc
jne
daa
cmp
dec
xchg
inc
fs
in
lcall
jecxz
mov
movsb
jae
and
jb
lret
sub
push
adcl
cmp
xchg
fsubl
ficoms
rclb
pop
inc
lahf
add
mov
add
sti
sbb
add
push
into
mov
out
mov
jl
mov
adc
js
fadd
sbb
and
xor
fdivrl
rclb
xchg
xor
pushf
xchg
loope
ds
loope
inc
dec
stos
ja
nop
sub
daa
pop
inc
iret
int
pop
clc
cwtl
shrl
or
ret
test
xchg
mov
lcall
into
roll
xlat
shrb
fcmovne
add
mov
sub
lret
mov
aam
cmc
xchg
in
mov
test
imul
xchg
les
push
fdivrs
outsb
inc
fldenv
push
pusha
push
and
jae
fwait
and
je
pop
ret
xlat
dec
cli
xchg
ljmp
xor
mov
push
aas
nop
insb
les
test
popa
mov
jmp
in
loopne
mov
test
xchg
bound
lahf
inc
lock
lret
stc
add
ficomps
enter
in
jmp
xchg
ss
inc
lods
jno
add
pop
jp
into
lock
lods
xor
movsb
sbb
jae
pop
mov
adc
pop
adc
cmpl
add
lea
cmp
lahf
loopne
adc
stc
outsl
jle
int
lahf
loopne
out
and
in
dec
pop
outsb
popa
sbb
arpl
in
lods
mov
add
push
and
dec
ja
mov
mov
mov
inc
and
or
mov
aad
sbb
push
mov
lea
add
lods
sbb
cmp
jp
or
jns
cmc
push
push
xor
sub
aam
push
jp
fdiv
mov
test
arpl
ret
pop
cmpsl
fadds
incl
cltd
xor
mov
jae
das
jnp
sti
push
mov
mov
jge
or
cmp
mov
pop
aas
jno
push
rol
ds
pusha
xlat
xor
jl
cmpsl
jg
sti
sub
mov
pop
repz
imul
and
sbb
out
mov
cmp
fimuls
or
or
ds
pop
mov
mov
cmp
rolb
sbb
lahf
daa
repnz
sub
and
rcrl
cmp
xchg
add
stos
sub
ja
gs
push
sti
xchg
lock
aam
insb
in
cmp
push
adc
fimull
sbbb
xor
adc
aad
add
mov
jmp
repnz
lods
and
sbb
sub
stos
movsl
lret
cld
jbe
mov
xlat
popf
cmp
mov
jo
mov
cltd
imul
push
fwait
andb
hlt
pop
insl
push
cmp
outsl
mov
outsb
int3
pop
push
test
notb
fcoml
sahf
mov
pop
mov
sub
repz
popa
push
add
add
xchg
std
mov
inc
inc
pop
daa
pop
xor
dec
pop
ja
mov
pop
adc
stos
sbb
test
push
sub
xchg
xchg
frstor
les
sbb
repnz
jl
xchg
daa
or
dec
pushf
xchg
xor
xchg
push
dec
mov
inc
push
js
or
or
es
add
push
add
imul
dec
in
insl
in
dec
lret
jae
lret
das
pop
imulb
loop
shlb
iret
and
gs
push
jmp
cli
lret
pusha
pusha
push
add
sbb
mov
scas
push
inc
int3
cli
mov
xchg
or
stc
out
cltd
loopne
dec
jg
push
xchg
xchg
ret
push
idiv
cmp
inc
lods
andl
or
push
cli
sub
or
push
aad
xchg
ja
jg
test
dec
rol
and
mov
xlat
cwtl
les
xchg
out
jecxz
dec
rcll
stc
push
jp
aam
inc
mov
rolb
notb
mov
push
xchg
push
cmc
xchg
insl
sbb
xlat
cmpsl
mov
mov
sub
and
mov
js
lods
push
xor
ret
imul
pop
sub
lret
jbe
jge
jl
push
in
ss
pushf
lds
push
in
pop
add
inc
test
in
lcall
xchg
out
push
push
test
pop
and
xchg
rcll
sti
loopne
imul
loopne
fwait
mov
jg
or
jns
in
stos
pop
jae
mov
insb
popa
std
mov
push
fisubs
jb
dec
leave
add
adc
cmp
sub
or
aaa
icebp
ja
or
push
data16
push
sbb
jo
add
xchg
imul
cmpl
mov
insl
loope
dec
xlat
scas
testl
arpl
lds
stos
xchg
pop
or
arpl
iret
cmc
lahf
pop
and
dec
jns
push
mov
add
test
repnz
out
loop
les
xor
push
mov
mov
sbb
fdivrs
movsb
mov
jns
into
cltd
inc
push
rorl
in
or
test
ljmp
sbb
scas
sti
or
or
fwait
and
push
jae
jno
stos
dec
stc
jae
dec
xchg
adc
push
dec
ret
stos
test
sub
jmp
shll
and
add
in
or
inc
mov
int3
test
xchg
test
xor
pop
cmp
in
rcrb
in
sbb
pop
jno
sbb
testl
into
icebp
cmc
sbb
les
pop
xchg
leave
sahf
mov
aaa
rcll
xlat
std
ja
push
jg
loope
or
data16
jecxz
pop
in
std
nop
sbb
popf
cmp
push
mov
inc
and
and
xor
push
js
out
pushf
mov
xlat
cmp
sub
jne
mov
jmp
call
dec
push
sub
jae
push
in
pop
leave
into
jno
sbb
es
push
shlb
insl
adcb
dec
add
int
enter
push
inc
decb
test
or
jo
outsb
cmp
jmp
icebp
xorl
or
lcall
push
aam
sti
push
aas
fildl
imul
sub
insl
dec
xor
sbb
in
or
ret
fwait
daa
sti
test
xchg
into
jo
push
loopne
lds
test
nop
xchg
dec
and
sbb
jno
nop
leave
mov
aaa
shll
mov
push
xor
dec
test
sub
loop
outsb
sbb
xor
iret
cltd
mov
push
xor
ficoms
dec
les
cwtl
jbe
ds
add
in
sbb
adc
adc
pop
mov
ss
lods
out
inc
sub
mov
pop
lods
cmp
ja
jmp
push
in
insb
fisubrs
imul
xor
hlt
pop
orb
push
enter
adc
cmpsl
nop
dec
into
jge
in
das
cs
outsl
jnp
jle
in
sbb
lock
das
xor
xchg
and
test
cmp
popa
aas
mov
cltd
out
call
jecxz
dec
add
in
addr16
jge
mov
sar
sbb
stos
popa
mov
mov
add
xchg
xor
jge,pn
xor
inc
and
inc
mov
cmp
push
and
ja
sbb
adc
cmp
mov
mov
cmpsb
adc
fmuls
fsubrs
xchg
stos
data16
cmpsl
shlb
lods
push
cld
mov
xor
imul
jne
repz
sbb
jp
fs
sti
dec
add
test
enter
push
fildl
xchg
cld
xchg
and
xchg
dec
into
insl
cmp
cmpsb
sbb
cmp
jge
pop
dec
or
push
cltd
in
sbb
aaa
inc
pop
sbb
cld
dec
inc
cmp
pop
push
add
outsb
sub
pushl
fildll
add
push
push
frstor
test
ja
cld
xorl
enter
faddp
dec
stc
addb
cltd
mov
scas
dec
into
dec
jle
out
sahf
icebp
mov
mov
add
lods
add
dec
mov
out
push
lds
ja
pop
cmpsb
in
clc
stc
adc
in
mov
pop
push
enter
mov
test
movsb
add
jmp
dec
daa
mov
dec
or
cli
xchg
cmpsb
mov
stos
adc
mov
inc
lods
cmp
sbb
aam
or
mov
jl
pop
lea
jno
mov
xlat
out
std
jmp
mov
cmp
popf
jno
mov
sbb
push
or
or
xchg
icebp
xchg
jbe
inc
cmp
into
imul
repz
xor
aam
stos
adc
inc
inc
scas
movsb
cld
push
and
sub
js
inc
loop
scas
negl
mov
xor
daa
push
pop
push
out
imul
inc
aam
and
dec
mov
sbb
hlt
cmp
pop
das
xchg
lcall
loope
push
mov
dec
adc
mov
sub
mov
xchg
push
loop
aaa
loopne
mov
sub
nop
push
cwtl
out
pop
sub
cmp
jbe
das
ficoml
test
shlb
arpl
sahf
subb
and
push
cmpsb
sbb
out
push
in
adc
push
pop
aas
cmc
and
mov
stos
dec
arpl
int3
jmp
popf
push
rcr
sub
addr16
sbb
adc
sbb
cltd
push
stc
iret
imul
andb
out
loopne
pop
dec
xor
clc
leave
js
mov
imul
dec
insb
rolb
addr16
push
fwait
out
add
pop
push
adc
xlat
cmp
add
loopne
dec
mov
push
and
stos
sub
aam
sub
xchg
sub
dec
mov
pusha
mov
fsub
add
xchg
mov
xchg
shlb
mov
idivb
mov
scas
mov
scas
mov
lds
fs
rcr
nopl
sbbb
push
xchg
wbinvd
mov
xchg
lahf
mov
lcall
jbe
or
aaa
js
lea
shl
mov
mov
or
lock
jge
mov
push
add
xor
pop
jg
xor
outsb
in
xchg
sbb
cmp
adc
pop
stos
popa
popf
jne
pop
mov
push
in
mov
test
test
fmuls
sbb
push
and
mov
push
pop
mov
jle
xchg
pop
mov
faddp
lods
hlt
jno
movsl
ret
cmpsl
xlat
insl
push
inc
jecxz
inc
mov
in
stos
cmpsl
addr16
add
nop
mov
xchg
scas
sahf
insl
xchg
inc
push
mov
xor
fs
test
or
imul
adc
hlt
lods
inc
push
lds
mov
mov
jbe
or
outsl
dec
inc
out
inc
or
cwtl
jb
push
out
adc
jnp
fcoml
mov
std
jp
push
aaa
data16
repz
repz
jno
leave
mov
xor
cltd
pop
mov
push
dec
mov
sbb
xchg
fildl
rorl
mov
rolb
xchg
or
or
iret
jle
add
add
xorl
mov
inc
enter
lret
adc
jmp
into
cmp
loopne
adc
leave
jecxz
popf
mov
lds
xlat
into
pop
push
xlat
ret
ljmp
sub
arpl
xlat
movsb
popf
cmp
jecxz
call
unpcklps
xchg
push
arpl
test
clc
sbb
lods
hlt
mov
aad
add
paddusw
lret
push
popf
shr
cmp
rcrl
mov
dec
jmp
test
dec
xchg
call
pop
push
add
and
push
fisttpll
daa
mov
out
xchg
cmp
push
pop
inc
ficoml
mov
enter
xchg
roll
sbb
loopne
jmp
add
jl
jp
push
ja
fmull
and
das
repnz
mov
outsb
ret
shlb
cwtl
pusha
ds
jo
pop
outsl
lret
cld
sbb
mov
fistpll
rcl
mov
out
push
jae
in
loop
test
fstpt
pop
pop
jne
cmp
push
pop
jns
loope
pop
scas
mov
idivl
les
or
mov
mov
popa
cmc
jnp
jg
int
sbb
in
pushf
or
mov
js
cmpsb
and
gs
push
mov
xor
dec
dec
dec
in
and
xchg
inc
inc
out
push
or
lfs
or
repz
insb
jno
or
data16
out
movsb
jecxz
es
inc
adc
in
movsb
lret
fisubs
mov
mov
repnz
jno
cli
cmc
mulb
std
push
sub
movsl
pushf
gs
xor
add
icebp
sub
clc
es
inc
lret
dec
mov
hlt
mov
bound
sub
movsb
ljmp
jne
cmpsb
jl
test
adc
xor
cmp
cltd
fldenv
cmpsl
mov
inc
hlt
push
add
stos
push
sub
mov
popf
xor
dec
jp
loopne
mov
and
and
or
pop
fst
je
ljmp
nop
sub
mov
xchg
sub
mov
mov
iret
out
and
or
xchg
ret
gs
ficomps
sub
ljmp
sbb
push
outsb
pop
jnp
inc
dec
shrl
pop
cmpsb
add
shl
sahf
and
jle
fs
fiaddl
popf
rolb
out
out
xchg
adc
mov
sub
repz
out
fstl
aam
mov
js
pop
dec
das
repz
sub
ret
cmpsl
iret
fnstenv
adc
stos
and
outsb
aam
sti
mov
jb
lcall
xor
jns
or
and
push
dec
out
jle
xchg
lods
into
dec
in
imul
jl
mov
or
pop
and
jp
fisubrs
mov
mov
adcl
push
test
cmp
stos
mov
and
pop
mov
sar
nop
mov
sbb
outsl
mul
bound
xor
cs
fnstcw
test
mov
jp
cmp
enter
divl
repnz
jmp
rolb
lds
inc
shll
inc
mov
xor
loop
jmp
xchg
cmp
out
mov
xchg
shlb
lods
out
jmp
push
insb
mov
leave
inc
sub
push
jecxz
daa
jno
or
enter
mov
and
push
inc
push
mov
sti
ja
imul
or
and
jo
ss
dec
test
pop
rorb
cmp
or
out
in
or
dec
xchg
xor
fmull
out
mov
sar
mov
pushf
addr16
lock
jp
add
testl
xchg
mov
xor
aad
and
ret
fcom
sub
pop
mov
aam
scas
out
fiaddl
pop
adc
clc
and
push
mov
inc
adc
dec
and
push
jecxz
adc
and
icebp
mov
popf
daa
xchg
and
lds
push
push
fildll
fistpll
imul
inc
adc
mov
mov
xorl
data16
sub
cmpsb
icebp
jne
or
adc
sbb
cmc
push
jge
das
xor
pop
or
pop
inc
jb
fldl
je
sub
scas
or
sahf
sti
jbe
adc
pop
pop
jge
dec
xor
jge
pop
pop
push
sbb
loopne
inc
fimuls
ss
and
ficoms
dec
js
nop
jb
and
fabs
pop
mov
jae
xchg
lahf
mov
dec
xchg
jne
popf
cmp
sbb
mov
sub
cli
xor
and
pop
pusha
push
leave
imul
push
pop
add
pop
xchg
xorb
xor
mov
or
popf
lods
pop
outsb
jne
mov
add
xor
inc
fs
lock
in
jmp
lea
enter
cltd
inc
mov
lcall
mov
hlt
orb
mov
shrl
fcomi
dec
ret
enter
loopne
mov
movsb
clc
sub
nop
pop
jns
inc
stc
jge
je
js
repz
popa
jg
daa
mov
negb
enter
daa
xchg
or
mov
inc
xchg
xchg
fistpl
cmc
mov
mov
mov
incb
movb
xchg
push
sahf
outsl
and
fcmovne
cwtl
aaa
jns
test
xchg
test
mov
cmp
lahf
dec
pushf
mov
loopne
bound
cmp
nop
bound
sti
adc
sub
loopne
jle
cmp
jecxz
repz
and
test
shrb
loop
shlb
jno
dec
ljmp
lds
outsb
test
dec
xor
bound
sti
xorb
vunpcklps
xlat
cmp
cmp
sti
xchg
insl
push
lret
sbb
pop
sub
adc
and
pusha
xchg
jmp
mov
shll
out
and
adc
loope
push
push
cwtl
inc
sub
pop
jmp
icebp
mov
adc
test
out
orl
cmp
xor
clc
fnsave
jmp
lret
in
sbb
scas
rclb
sbbl
push
sbb
aad
mov
or
mov
call
xlat
in
in
pop
xchg
cmc
jbe
jge
fmuls
sbb
jo
add
dec
pop
enter
xor
shrl
lahf
fwait
mov
mov
xchg
fwait
dec
imul
adc
loopne
mov
fisubs
pop
mov
dec
mov
les
repz
or
daa
push
sub
lock
divl
icebp
and
loope
sub
cli
fst
movsb
push
sub
stos
es
cmp
dec
or
lret
adc
mov
data16
ficoms
jo
xor
subl
call
call
mov
mov
push
jns
aam
sbb
aam
jge
in
mov
test
sbb
aaa
cmp
stc
insl
xchg
cmpsb
loope
les
xchg
dec
push
cmp
jl
cmp
stos
sbb
cmpsl
imul
and
inc
fcom
int3
sahf
out
dec
int
sbb
cmp
sbb
cmpb
scas
loopne
decb
add
jns
shll
pop
stos
sub
and
test
fnstcw
or
mov
mov
iret
add
mov
sbb
jb
jae
mov
jmp
lret
loop
cmp
fists
jo
daa
push
or
lods
shlb
xor
inc
lds
add
xchg
cmp
mov
pop
dec
mov
ja
add
ljmp
sub
sub
inc
xchg
mov
lahf
mov
jo
mov
mov
or
lods
dec
pop
nop
inc
loopne
fcoml
lcallw
mov
daa
out
ror
popf
xchg
movsl
leave
adc
nop
and
addl
clc
sbb
fs
dec
jo
stos
lahf
sub
add
mov
aaa
das
lock
adc
cmp
inc
fadds
adc
cwtl
gs
fxtract
and
aaa
divb
lahf
fimull
jl
flds
ret
mov
sub
and
ret
adc
in
sti
loopne
ficompl
sbb
xchg
add
lret
sub
xchg
lock
mov
pop
sub
loopne
ss
loope
mov
mov
cltd
xchg
mov
imul
lahf
movsl
jno
incl
inc
int
dec
lret
push
into
add
rorb
imul
mov
jo
fwait
lahf
dec
aaa
cmp
jns
jp
add
dec
mov
sub
in
mov
aaa
mov
or
jns
xchg
mov
rclb
inc
cltd
dec
inc
inc
insb
jne
divb
vrcpss
pop
jle
mov
sarl
jmp
cmp
jle
and
adc
repnz
popf
loopne
inc
mov
add
add
sub
adc
push
mov
and
and
sti
xor
aaa
add
jle
xchg
mov
in
mov
mov
test
ss
inc
sub
xchg
fwait
int
cmp
cmp
sbb
lock
jmp
add
jb
pushf
push
xorb
add
and
push
pop
xchg
les
addr16
xorl
mov
mov
subb
pushf
fsubs
jl
lods
sub
mov
imul
sti
mov
adc
jbe
and
mov
icebp
xorl
push
das
aas
jae
mov
cmc
dec
or
pop
mov
fs
lods
mov
or
jbe
lock
loope
inc
jo
mov
loop
adc
sbb
les
ja
xor
xchg
fisttps
pop
leave
xlat
inc
insl
and
mov
fcmovbe
ljmp
mov
mov
pop
pop
push
mull
shufps
out
mov
jb
inc
mov
insl
mov
push
ja
into
sbb
adc
sub
adc
repz
cmpsb
mov
lock
cmp
mov
add
xlat
les
pop
xor
icebp
jp
pop
xor
jnp
mov
in
pop
mov
inc
scas
aam
outsl
mov
and
sub
push
push
icebp
sbb
dec
or
push
xor
insl
mov
mov
inc
cmp
jne
mov
popf
xchg
shlb
cmpsb
add
mov
cmp
jg
shll
pop
adc
inc
push
insb
xchg
push
cmp
cmp
push
push
lods
hlt
sbb
and
mov
cmp
dec
mov
cmp
sub
push
outsb
pop
xchg
int
pop
dec
push
in
mov
jge
xchg
push
dec
mov
mov
xchg
push
mov
arpl
nop
sub
lods
dec
call
sti
pushl
jecxz
js
mov
jmp
repnz
mov
insl
xor
mov
jge
les
dec
xorb
dec
jne
out
sub
mov
and
add
not
inc
fists
push
pop
stc
push
divb
mov
lret
test
hlt
mov
int3
pop
mov
stc
fcomp
inc
inc
outsb
aas
jae
xchg
sub
push
push
out
push
adc
aas
cmpsl
stos
cld
cmp
sub
cltd
int
mov
xor
test
movsl
and
lds
dec
addb
in
jbe
pop
insb
in
ja
add
ret
pmaddwd
movsl
bound
fnstsw
sbb
push
pop
cltd
sti
cmp
sbbb
adc
xchg
daa
mov
cs
add
in
clc
pushl
out
xor
mov
movsb
add
sub
pop
popa
xchg
insb
sub
subl
xorl
pop
in
arpl
inc
andl
or
and
lods
or
or
in
jmp
adc
leave
out
in
decl
cld
push
xor
push
popf
mov
ljmp
and
inc
inc
in
mul
jo
xor
lods
cli
xlat
mov
adc
stc
test
leave
es
jns
push
push
ja
ds
or
inc
cwtl
xchg
leave
outsb
xlat
les
mov
cmp
iret
iret
adc
mov
cmp
sbb
dec
xchg
out
fwait
add
or
flds
mov
mov
in
out
jg
cmp
add
test
mov
insl
and
fiadds
and
mov
pusha
inc
xor
xlat
add
cwtl
cmp
add
enter
into
fwait
or
out
xor
fmul
cmp
mov
mov
subb
repz
mov
ret
popf
int3
adc
popf
arpl
and
and
dec
mov
sub
jg
mov
scas
dec
sarl
jmp
rclb
xor
lock
jecxz
push
and
xlat
dec
pop
dec
es
cmp
adc
add
daa
dec
clc
mov
shll
mov
in
lods
mov
xchg
mov
mov
bound
sub
xor
xchg
insl
cld
sbb
movsl
nop
lret
dec
fcomi
repnz
xor
or
cmpsl
ret
sar
xor
sbb
jns
fstpl
rclb
mov
cltd
lock
lods
test
jb
mov
pop
xor
mov
gs
sbb
sbb
mov
cli
xor
and
loop
inc
test
dec
and
xor
out
lret
fdivr
fsubr
adc
loop
and
mov
add
push
or
pop
lahf
scas
mov
mov
pop
jl
dec
mov
or
add
cmp
lds
push
dec
xor
add
std
or
in
popf
in
mov
lcall
addr16
cmp
xchg
ljmp
pop
and
or
cli
jb
jns
aad
xchg
cmp
sbb
add
jns
cmp
push
cli
xor
je
mov
cmp
add
or
mov
out
stos
mov
mov
ss
shlb
lods
fidivrs
fldcw
sub
cmp
repz
out
push
repnz
sub
daa
movsb
pop
andl
or
cmpsb
popf
arpl
imul
or
jp
mov
or
push
fisubrs
aas
mov
push
mov
dec
pop
jno
scas
inc
in
in
imulb
lahf
pop
sub
cmp
xor
loop
test
adc
push
mov
adc
cmc
or
jge
lret
jecxz
cmp
cmp
insl
pop
xor
out
pop
outsl
sbb
jle
inc
mov
xchg
or
test
fildll
add
scas
adc
pop
fcmovne
es
or
into
test
pop
jnp
pop
sub
or
dec
in
stos
cmpsb
ret
push
or
int
and
sbb
mov
and
cwtl
lods
fistps
sub
cmc
xor
fcomps
inc
rcr
repz
push
sub
out
lcall
popf
cli
pop
gs
lret
adc
jno
dec
and
div
adc
jne
jns
loope
test
xchg
xor
jo
inc
decb
icebp
cmp
push
pop
push
sub
jmp
insl
insl
xchg
pop
adc
test
xchg
sub
lret
add
das
pop
cwtl
gs
xchg
fnstenv
sbb
inc
ffreep
jecxz
pop
daa
inc
push
rolb
int3
int3
fidivrs
pop
clc
xchg
in
arpl
cmp
jmp
sbb
and
push
mov
leave
fnstenv
mov
arpl
and
add
mov
lods
and
pop
in
xor
dec
pop
incb
scas
add
dec
push
cld
bound
cmp
imul
ja
ffree
pop
in
or
rolb
leave
ds
test
lods
inc
xor
xor
xorl
aas
pop
shr
ret
pushw
inc
das
test
fmuls
and
imul
sub
stc
add
cltd
leave
jb
pop
pop
mov
out
xor
push
in
push
jle
inc
xchg
stc
or
add
jne
mov
ffree
and
mov
in
xchg
flds
lods
mov
inc
mov
xchg
nop
mov
iret
out
sbb
in
inc
push
in
aaa
ja
adc
sarl
ljmp
jmp
pop
pop
aas
negb
mov
jno
stc
ja
jg
das
mov
test
gs
sub
sub
call
inc
sub
and
add
sahf
adc
xor
fistpll
or
mov
mov
addr16
lods
pop
inc
xchg
popf
dec
nop
or
and
or
insl
cmp
loop
mov
jecxz
xchg
addr16
pusha
enter
es
cld
loopne
push
rorb
aaa
mov
outsl
jnp
xchg
pop
lods
pop
pushf
cmp
mov
xchg
test
arpl
adc
popa
and
ret
jae
xor
or
pop
cmp
js
insb
xor
adc
stc
pop
mov
cmp
shll
out
sub
cmpsl
daa
mov
push
sti
or
and
push
pop
lods
dec
jb
in
sbb
stos
dec
pusha
std
fwait
xor
rcrl
dec
pop
adc
jl
data16
pop
jno
dec
aad
push
mov
xor
xchg
xor
pop
sub
stc
push
xor
jae
dec
xor
int3
push
push
pop
push
lahf
mov
mov
fs
fs
push
cmc
add
outsb
mov
jo
push
add
pop
lret
jge
idivl
add
or
push
addr16
mov
mov
fnsave
pop
jnp
andl
cmp
pop
adc
push
fidivs
adc
jp
pop
push
test
sub
jns
adc
enter
outsb
mov
inc
shll
jp
fnstenv
mov
test
pop
and
mov
out
dec
hlt
xchg
and
movsb
aaa
scas
sbb
add
jmp
out
out
leave
daa
mov
outsl
mov
mov
mov
popf
xchg
dec
mov
push
and
mov
dec
push
shrl
dec
stos
fwait
and
or
add
cmp
push
push
out
test
xchg
js
loop
ret
add
pop
lret
dec
pop
cmpsb
adc
sti
fcoml
mov
cmp
cmpsl
or
push
inc
lea
cmc
daa
pusha
shll
out
fmul
jne
popa
in
adc
std
loop
iret
inc
cld
jecxz
fidivl
jns,pn
mov
mov
ss
or
pop
cmc
sbb
orb
add
mov
outsb
sub
dec
shll
jne
gs
pop
insb
inc
add
adc
xchg
mov
inc
bound
and
rcll
mov
lea
pushf
lcall
adc
fsubl
or
push
push
inc
lret
ret
xchg
inc
jg
subl
cmp
enter
xor
sbb
push
jg
cmpsl
push
hlt
cmpsl
stc
aas
out
and
fwait
mov
push
mov
xor
mov
lods
xchg
sub
adc
imul
jo
pop
test
imul
or
inc
jl
xor
movsb
adc
arpl
xlat
mov
aam
add
and
shr
pop
inc
sbb
or
xchg
ja
add
pop
xchg
pop
xor
xchg
popa
xor
xchg
test
cmp
lods
into
jbe
jle
push
push
xor
cwtl
fwait
jae
mov
sub
dec
or
adc
fcompl
stos
and
dec
xchg
pop
les
xor
ja
adc
cmp
mov
sahf
xor
mov
les
ret
sti
out
mov
mov
mov
and
or
lret
xchg
mov
subb
ss
rolb
mov
clc
in
xchg
movsb
into
mov
jmp
jmp
bound
mov
faddl
mov
add
dec
call
dec
notb
gs
jnp
fisttps
xor
sub
push
enter
dec
loopne
add
dec
xchg
pop
push
mov
push
inc
xchg
outsl
arpl
mov
adc
cmp
or
add
dec
filds
pop
addr16
inc
or
dec
mov
cltd
fsts
pusha
dec
mov
stos
cmp
int3
mov
mov
cmpsb
in
jmp
enter
repnz
jge
dec
pop
mov
push
or
icebp
mov
xor
hlt
sbb
jno
xchg
add
out
fsubrl
xchg
hlt
jmp
ljmp
cmp
cmovo
push
adc
lcall
rcll
test
xor
jle
adc
bound
cmp
xor
in
out
mov
and
lahf
out
cltd
aam
and
aaa
adc
roll
pop
test
out
or
jge
jp
leave
mov
sub
push
movq
std
mov
addl
xor
push
popa
fiaddl
xchg
fs
push
shll
xchg
out
pusha
mov
fcmove
dec
or
xchg
mov
mul
jne
rorl
mov
push
std
push
sbb
mov
scas
stos
je
adc
sub
pop
xor
in
jmp
lret
sbbb
mov
cmp
sub
aaa
in
jnp
sbbl
mov
jmp
cs
cmp
and
dec
push
and
nop
jae
push
push
leave
cmpsb
int
jle
pusha
cs
cs
call
mov
or
mov
cwtl
in
inc
mov
or
test
rcrb
test
or
call
and
cmpsl
adc
js
jle
cmc
and
clc
jno
jl
push
movsl
jg
in
fsqrt
pop
fwait
out
iret
sbb
fadd
pop
scas
adc
ss
sbbb
in
out
jbe
mov
xorb
mov
popf
int3
loope
jg
imul
fisubl
cli
add
mov
inc
add
test
pop
add
jne
dec
fiadds
lret
mov
decl
jmp
sbb
mov
jns
fists
jge
in
lahf
xchg
cmp
iret
inc
push
jmp
mov
jmp
xchg
push
xorb
ja
jo
pop
nop
out
rcrb
xchg
loopne
jg
push
ret
sti
andl
or
cmp
into
push
mov
mov
push
and
out
shrb
pop
daa
xchg
push
lcall
pop
pop
fwait
aam
pop
test
and
loopne
incl
fisttpl
jecxz
push
push
xchg
mov
push
dec
xor
test
mov
pop
inc
out
hlt
hlt
dec
jno
cmp
jno
loop
sub
push
or
push
fmuls
sub
inc
jp
jmp
mov
sti
and
rorl
push
sbb
jmp
popf
mulb
xchg
add
or
jb
mov
sarl
addr16
or
sbb
gs
adc
imul
popf
cmc
adc
cwtl
stos
ljmp
outsl
cmpb
inc
aas
cmp
push
pop
jl
out
lcall
add
sub
and
or
insl
pop
push
fsubl
adc
es
push
mov
pop
outsl
dec
adc
sahf
cmc
push
inc
pushf
inc
cmpsb
push
dec
mov
add
clc
jp
push
fwait
or
fs
shl
nop
mov
bound
ljmp
or
shlb
mov
dec
popf
rcr
scas
out
out
mov
repz
into
cmpsb
insb
ljmp
pop
and
push
aaa
cmpsb
test
pop
cwtl
mov
xor
and
jo
dec
sbb
or
popf
or
push
cld
call
lock
pop
popf
call
jge
aam
into
dec
pop
push
xor
or
and
out
jecxz
shrb
ds
jnp
test
lret
sbb
in
es
xorl
pop
movsb
bound
je
xor
xor
push
test
xor
or
and
or
mov
dec
mov
ret
fcompl
mov
dec
inc
clc
pop
aam
incb
adc
das
sbb
ljmp
mov
repnz
cmp
push
or
fcomps
mov
fisubrl
int3
push
bswap
dec
stc
xlat
xor
mov
scas
mov
and
xor
cmp
pushw
jb
jl
sti
adc
push
jb
xchg
movsl
mov
pop
mov
pop
rcll
jl
pushf
cmpb
insl
iret
add
repz
push
jbe
push
rclb
adc
xor
pop
cmp
mov
add
inc
mov
push
jo
pop
imull
test
int
outsl
scas
adc
mov
and
ret
idivb
insl
adc
sbb
lock
scas
iret
inc
les
out
out
jae
push
mov
jl
jmp
addr16
cmp
inc
jge
ss
outsl
test
addb
inc
enter
sub
loop
mov
loop
mov
pop
xor
call
add
push
fcomps
cs
sub
outsb
jnp
or
push
or
push
cmp
je
dec
mov
jne
icebp
ja
lret
or
cmp
in
cmp
dec
mov
mov
xchg
enter
pop
mov
pop
jg
or
cs
imul
stos
sub
out
adc
dec
xchg
into
jno
mov
out
push
lea
in
or
out
mov
dec
sarb
out
gs
lea
push
mov
mov
lea
fsubl
or
cmc
jns
call
mov
in
insl
mov
inc
pop
call
test
cmc
push
mov
cmp
jno
rcr
jne
adc
add
sar
cwtl
cmp
movsl
xchg
xchg
adc
jns
mov
sub
xor
inc
jg
sub
pop
jle
mull
xchg
dec
pop
mov
inc
or
mov
and
std
and
rep
adc
iret
imul
xchg
adc
sub
dec
sbb
adc
mov
inc
ja
mov
xchg
xchg
cmp
sub
cli
add
adc
rorb
subb
adc
mov
repnz
push
add
push
lods
pop
std
mov
std
mov
aaa
int3
sbb
pusha
adcb
jbe
dec
xchg
fs
je
and
insb
jl
dec
push
test
dec
mov
and
test
push
dec
pusha
jno
mov
pushf
aas
scas
push
mov
push
ret
hlt
mov
sub
repz
push
add
jo
out
mov
inc
add
mov
push
cmp
xchg
cmc
adc
sbb
adc
out
dec
lods
xor
fistps
rol
lcall
repz
push
sarl
clc
adc
cmp
mov
inc
popf
stc
test
ja
or
inc
push
js
dec
out
push
bound
shrl
mov
jno
movsl
and
mov
lret
iret
adc
jecxz
idivl
lcall
lret
das
jnp
cltd
pop
les
test
test
loope
sub
sub
add
sti
push
cmp
test
scas
clc
xchg
xor
in
stos
adc
cmc
dec
fwait
jb
imul
js
sbb
xor
aas
mov
jmp
fcomp
dec
daa
jmp
enter
jp
cmp
and
mov
std
in
push
lcall
and
ret
insl
cmp
stos
repz
push
or
mov
and
pop
sub
daa
dec
inc
shlb
push
cmpb
mov
push
orl
orl
movsb
sbb
stos
push
add
sub
fcomps
sub
int3
int3
mov
mov
popl
fwait
mov
dec
fdivr
mov
inc
clc
inc
outsb
mov
movsb
push
in
and
shrl
dec
idivl
movsb
outsl
dec
lds
sub
scas
sbb
repz
ljmp
mov
jmp
lret
xchg
ret
fdivl
or
sbb
iret
fisubl
out
std
movsl
data16
and
jns
xchg
pop
pop
jno
mov
jge
cltd
mov
push
fldenv
cmp
cmp
mov
pop
pusha
pop
std
insb
stc
addr16
add
cmp
out
jg
sub
aas
movsl
push
addr16
mov
sub
ljmp
dec
xchg
xchg
pusha
xor
add
popl
mov
add
mov
dec
mov
test
imul
clc
cwtl
adc
and
jnp
inc
out
rcpps
and
jmp
pusha
ret
loopne
push
sahf
ljmp
imul
adcb
or
int
pushf
ret
sub
enter
icebp
test
mov
jno
fisubs
lret
jle
adc
jno
ds
imul
sbb
push
inc
lods
cmp
rcll
test
rcll
jbe
push
andl
or
mov
sub
add
mov
mov
mov
xor
cli
cmp
push
ja
ljmp
sbb
pushf
scas
aas
mov
cmpl
xorb
aam
jo
push
lret
or
popa
xor
test
arpl
loopne
cmpsl
ret
jns
in
jmp
push
xor
mov
imulb
xorl
inc
jmp
pop
xchg
mov
in
sbbl
mov
pop
fmulp
mov
inc
sahf
cltd
jbe
cld
mov
ljmp
adc
imul
dec
inc
sbb
adcb
imul
sub
fstl
aam
mov
cld
and
dec
push
sahf
shrl
adc
insl
cmp
ret
loop
sbb
cmp
xlat
cmp
jb
mov
or
jb
xchg
jno
lret
lret
clc
sub
fbld
dec
sub
in
xor
cmc
test
negl
enter
xchg
push
mov
sbb
adc
imul
int
mov
mov
xor
mov
mov
shrb
jmp
jb
fadds
jmp
sub
xchg
out
add
cld
ja
popf
mov
fstpt
pop
cmp
lds
sbb
mov
xchg
lods
shll
xchg
sub
dec
in
and
outsl
imul
jbe
sbb
xchg
ljmp
sbb
ds
cld
sbb
fisttpl
dec
mov
push
rdpmc
cld
dec
fimuls
popa
aam
pop
lret
pop
movsl
test
sub
enter
loope
jle
rolb
call
mov
pop
call
scas
inc
inc
lock
sbb
bound
loopne
lods
les
test
jg
cmp
jl
and
mov
test
mov
xchg
jle
rclb
aas
cmc
xchg
jo
sbb
test
jnp
jns
in
mov
mov
cmpsl
jg
int
cmp
repnz
cmp
jae
mov
dec
jnp
add
or
xchg
jne
cwtl
mov
adc
cmc
xor
push
out
in
enter
xchg
or
or
scas
shll
in
inc
fidivl
into
pop
adcb
test
mov
xchg
jb
clc
out
cmp
inc
aad
mov
popf
repnz
or
jg
jmp
adc
cmp
or
mov
pop
cmp
xchg
int
pop
xchg
jl
dec
das
lret
lods
test
rol
cmp
fstl
inc
pushf
add
clc
adc
mov
pushf
dec
stos
mov
aam
insl
mov
sub
dec
mov
add
hlt
xchg
loope
adc
repz
inc
cmp
iret
mov
stc
in
lds
xorl
pop
lock
mov
cmp
mov
je
iret
cmp
movsb
fnstcw
cmp
jno
mov
out
push
fmull
out
dec
in
test
rcll
mov
lahf
addb
loop
mov
dec
mov
push
dec
aaa
fsubl
mov
repnz
push
imul
or
loop
sub
inc
call
scas
adc
mov
adc
in
pop
enter
pusha
daa
push
mov
cmp
inc
adc
pushf
dec
in
adc
dec
fstpl
add
xchg
mov
fwait
cmpsl
or
mov
cmp
outsb
pop
mov
dec
adc
cmp
fsubr
pop
push
scas
cltd
scas
lock
and
mov
and
in
mov
out
xor
inc
mov
and
push
out
cmp
or
mov
adc
jno
and
mov
cmp
cmp
clc
sub
inc
sub
cmp
jl
push
sub
jnp
push
int3
adc
sbb
inc
dec
lods
and
nop
dec
push
cltd
adc
mov
dec
std
mov
pop
shrl
icebp
pop
cmp
sub
fsubrs
sbb
lods
pop
inc
out
mov
jp
or
leave
lods
clc
outsb
cltd
push
nop
out
push
repnz
push
xor
jmp
pop
lret
stc
add
out
lea
test
mov
cmp
data16
daa
mov
sbb
lret
cmpsl
ret
sbb
fisubs
std
shlb
ret
jae
mov
aad
loope
xor
hlt
push
and
xchg
mov
popa
rdmsr
jmp
bound
das
fcmove
aaa
or
sub
das
pop
jno
in
lea
clc
sub
xor
loopne
cmp
pop
in
push
xchg
ret
sbb
xor
fnsave
std
add
stc
jecxz
jno
dec
loope
std
or
cmp
jb
iret
inc
daa
inc
sub
ljmp
jecxz
dec
inc
scas
mov
fsubrs
dec
xchg
sbb
mov
inc
fsub
inc
in
shrb
lahf
and
mov
mov
dec
pop
rcll
push
in
movsl
ss
sub
shlb
xrstor
mov
jecxz
int
imul
aaa
mov
out
and
pop
mov
loope
cmpl
adc
xlat
adc
or
pop
add
jge
mov
fcmove
out
sub
in
xor
xchg
mov
xchg
inc
inc
fldenv
imul
and
adcb
outsb
cmc
adc
imul
loopne
adc
pushl
sahf
mov
mov
mov
enter
sbb
cmovb
lods
push
ret
or
xor
shlb
outsl
inc
fdivrl
mov
sub
xchg
inc
add
cmp
std
lods
cmpsl
sub
jle
out
inc
sbb
and
sarl
frstor
adc
jbe
jp
cltd
and
sti
sbb
movsb
mov
popa
test
mov
mov
lret
ret
xchg
and
mov
pushl
test
bnd
lock
inc
mov
lret
inc
or
or
lds
push
inc
pop
add
adc
add
imul
sub
mov
dec
sbb
fstpt
aad
mov
aaa
cmp
stos
popa
test
stos
push
mov
jno
pop
mov
insl
fdivr
push
inc
pusha
inc
scas
mov
dec
pop
pop
hlt
dec
out
jae
xlat
nop
xchg
cmp
test
hlt
test
shrb
inc
int
loop
in
rcrl
pop
push
xor
in
xchg
ret
add
bound
arpl
lahf
stos
or
addl
fsubr
fmuls
stos
incb
pop
repnz
pop
dec
ret
adc
push
repz
adc
call
push
cld
test
jnp
add
cmpsb
clc
in
jg
pusha
pop
data16
and
add
clc
pusha
xor
jmp
sbb
adcb
jne
xchg
hlt
jg
and
inc
inc
shrb
mov
inc
les
xchg
cmpsb
in
iret
dec
xor
xchg
mov
lcall
notl
jae
sbb
test
in
cltd
jecxz
push
dec
or
aam
in
shll
pop
fs
std
cmc
lds
out
sub
int
add
jl
rclb
jg
out
test
pop
jg
je
sbb
repz
stc
mov
xlat
ds
dec
scas
fs
and
ljmp
dec
adc
data16
sbb
mov
fistl
filds
sbb
xchg
das
push
pusha
test
inc
mov
inc
js
and
mov
jle
adc
cltd
cwtl
or
pop
and
mov
cld
pop
test
andb
sbb
xlat
rcr
rcrb
out
sub
loopne
div
or
and
loope
cmp
outsb
jno
lods
popf
in
or
out
adc
mov
popf
and
jne
pushf
dec
sbbb
or
cmp
pop
cmp
push
xor
imulb
jo
cmp
xchg
push
mov
in
push
sahf
push
add
pop
test
push
mov
inc
jge
pushf
pusha
or
imul
add
pop
fst
arpl
pop
insl
push
jnp
mov
push
pop
inc
pop
push
cwtl
lret
xchg
fsubl
dec
xlat
jae
leave
sub
lock
dec
fcompl
mov
inc
dec
aad
inc
jge
mov
push
cmpsb
add
jp
stos
dec
lret
jbe
insl
sbb
int
test
cs
sahf
mov
pusha
aam
repnz
mov
mov
sbb
mov
xchg
adc
pop
lds
mov
mov
jb
mov
in
rolb
dec
push
jno
mov
push
pop
aam
shlb
adc
mov
xchg
cmp
inc
cmp
cmp
lcall
sub
clc
jbe
je
shll
xor
jns
mov
jb
or
clc
cmpsb
jmp
jb
sahf
mov
xlat
loop
xchg
or
xorb
jnp
sbb
add
rcr
out
push
daa
mov
leave
jmp
leave
test
bound
lcall
shlb
testl
sub
cmp
rcrb
or
jbe
pusha
mov
push
push
add
ret
daa
inc
xor
ret
movsb
or
addr16
ss
xchg
pop
mov
roll
nop
aaa
pop
nop
inc
int3
lea
addr16
xchg
nop
jae
ds
mov
xlat
test
hlt
mov
mov
xchg
cs
dec
jo
jp
adc
or
adc
mov
mov
fwait
xchg
push
mov
dec
fstpt
sbbl
push
pop
inc
icebp
push
ds
fdivrl
iret
lcall
jno
xor
adc
repz
outsb
or
sbb
sbb
mov
aad
daa
imul
jp
push
nop
outsb
ss
cmp
dec
fwait
repz
sub
pop
jmp
inc
mov
orb
jnp
ret
jne
mov
sub
cmp
xchg
inc
aam
mov
ljmp
mov
dec
stos
icebp
mov
jge
mov
or
int3
mov
xor
inc
adc
inc
inc
outsb
cs
mov
bound
sar
lods
mov
sub
cmp
enter
fdivs
xchg
mov
fiadds
sbb
call
cs
in
pusha
loop
int3
cmc
mov
mov
add
pusha
shrl
mov
pop
loope
rcrl
lahf
lcall
sbb
not
neg
cmpsl
pop
stos
cs
mov
jl
add
mov
and
push
mov
push
dec
aam
ss
jg
sub
mov
imul
lahf
xchg
ret
xor
enter
call
xor
test
sarb
into
inc
js
sub
xor
jmp
or
fists
jno
cltd
add
lcall
movsb
into
iret
lahf
insl
jge
loop
add
ja
dec
inc
ja
lds
sti
data16
sarl
cmc
lahf
push
dec
icebp
inc
push
jo
out
xor
das
fldenv
in
push
mov
jle
jmp
aaa
and
ret
std
js
xchg
xor
leave
shll
jmp
and
xchg
call
pushf
icebp
cmpsl
cmpsl
add
scas
and
sbb
add
add
xor
push
in
xchg
cmp
cwtl
add
sbb
std
dec
sub
test
adc
add
adc
mov
nop
jp
jno
repnz
lods
addr16
jno
aas
and
mov
shll
ja
sti
mov
test
cs
jnp
jns
sti
shlb
jns
fs
mov
dec
and
mov
adc
mul
sub
cmc
mov
mov
xchg
lcall
fstl
and
bound
mov
inc
jecxz
push
or
fwait
mov
mov
mov
jnp
rcl
push
mov
popa
int3
cld
push
and
jmp
or
pop
jge
sub
out
inc
jge
mov
lods
shr
xbegin
icebp
push
aad
fisubl
fsubl
xchg
mov
lcall
sub
cli
sbb
out
shrb
mov
rolb
movsb
lods
add
nop
pop
mov
je
mov
jne
adc
dec
xlat
and
nop
enter
loope
lret
dec
jecxz
fs
mov
mov
ja
push
popa
xor
inc
jb,pn
and
inc
sbb
sti
mov
cld
lret
in
xchg
lret
jecxz
sar
mov
stos
sarb
jecxz
push
ffree
mov
pop
jno
jl
lea
outsl
lret
fwait
inc
and
push
imul
shrb
xchg
sub
outsb
das
dec
mov
fists
push
loope
push
jo
lods
outsl
mov
and
jbe
aad
dec
shlb
lret
imul
out
mov
in
lahf
lds
mov
test
xor
icebp
fimull
inc
and
arpl
stos
test
or
hlt
je
ja
or
leave
xchg
xchg
push
fldcw
add
push
div
cli
add
and
in
aas
xchg
fmul
push
test
and
popf
test
or
dec
dec
cmp
and
js
jb
inc
mov
jge
and
and
mov
stos
push
mov
adc
and
push
jbe
shl
xchg
je
push
inc
clc
sbb
add
test
into
pop
push
fisubrs
jp
xor
jmp
jmp
jge
push
orl
pop
cmp
xor
scas
fists
mov
std
mov
dec
inc
push
push
aaa
adc
xrelease
mov
adc
lcall
xchg
push
fimuls
jnp
push
lret
nop
or
inc
pop
pop
inc
and
iret
ss
int3
sahf
pop
aaa
pop
dec
hlt
bound
push
bnd
mov
aam
xchg
popf
rorb
cmp
or
dec
aaa
pushw
es
sahf
aad
imul
fs
cmp
jo
cmp
inc
xchg
cwtl
xchg
mov
add
inc
roll
hlt
xor
xorl
xchg
es
push
fwait
fwait
ljmp
ret
or
fwait
sub
adc
movsl
sbb
push
dec
and
xorb
in
out
xchg
dec
stos
data16
xchg
mov
jg
pop
pop
jmp
and
sahf
xchg
sbb
push
dec
jle
gs
les
bound
cmp
pushf
sbb
jnp
add
and
clc
hlt
imul
stos
aas
and
into
cwtl
or
and
aam
daa
cmpl
out
iret
fildl
cmpsb
push
out
mov
mov
mov
fnstcw
sbb
sbb
add
sbb
loop
test
shrb
add
jge
mov
mov
popf
and
xlat
push
sbb
data16
inc
push
pop
ss
xchg
mov
adc
leave
jmp
push
int3
insl
scas
lret
ret
out
fnsave
cs
cli
fidivl
or
outsb
fisubl
adc
push
push
cld
mov
push
out
push
and
mov
pop
xchg
cmp
cmp
int3
xor
leave
sbb
sbb
mov
or
mov
xor
repz
sbb
jbe
arpl
ljmp
mov
xchg
addb
cmc
pop
cs
sti
adc
movsb
mov
lods
mov
gs
lahf
ret
aam
js
lea
dec
movb
and
cli
imul
xchg
inc
pop
cmp
subb
ja
mov
and
out
fwait
pop
add
adc
ljmp
lods
push
movsb
push
xchg
popf
xor
insl
pushf
call
jl
cmc
add
cmp
fwait
fsubr
outsl
mov
mov
mov
shll
mov
jb
dec
push
push
inc
jno
loopne
pop
jne
pusha
mov
ficoml
and
mov
jg
testb
cmp
aas
movl
xchg
fisttpl
movsb
mov
dec
or
jne
scas
decl
sbb
mov
jp
ds
enter
jns
mov
dec
inc
adc
mov
mov
pop
outsl
mov
test
fdivs
jl
push
shll
dec
jmp
xchg
mov
cli
movsl
dec
les
repnz
or
sub
and
sbb
stc
jmp
fs
push
inc
lea
ljmp
sahf
lods
mov
lret
mov
popa
in
or
mov
pop
mov
push
push
test
lahf
out
mov
sub
dec
shrl
push
jl
cmp
flds
dec
bound
inc
and
in
imulb
pop
push
xchg
lcall
jne
fwait
sub
mov
int
pop
mull
cld
inc
jae
or
push
cld
mov
repz
fiaddl
xchg
push
leave
repz
scas
and
push
push
pusha
notl
je
sub
std
clc
push
jl
test
add
orb
imull
in
or
adc
mov
push
repnz
sub
arpl
sub
adc
jl
jbe
cmc
jmp
adc
inc
push
shll
pop
mov
lret
add
fcmovnu
mov
scas
mov
mov
jbe
in
or
pop
out
rcr
cmpsb
inc
pop
aad
or
ss
mov
scas
repz
pop
add
xchg
cmpsb
jbe
nop
mov
xchg
cmp
dec
sahf
mov
mov
and
mov
rorl
call
test
mov
inc
test
pop
jle
movsl
in
fdivr
out
ss
gs
insb
mov
imul
fimull
pushf
mov
mov
xchg
mov
insl
stos
imul
pop
popa
fnsave
push
outsl
dec
das
mov
jns
pop
ja
pop
and
cmpsl
iret
mov
fnsave
or
out
mov
shlb
jp
xchg
popf
das
popf
or
aaa
out
push
adc
addl
sub
dec
pop
outsb
inc
jo
into
pop
es
sahf
dec
or
add
mov
sarl
push
xchg
add
mov
stos
mov
xchg
mov
mov
rcl
xchg
cmp
andl
jg
fnsave
out
sub
out
sahf
jg
push
inc
jne
bound
out
xchg
lock
inc
push
push
sti
into
out
add
into
out
push
iret
and
or
lea
in
pop
insb
xchg
jno
lock
aad
xchg
push
push
fsubs
cmpsl
cs
lock
cmpsb
push
lret
xchg
lcall
ret
mov
cmp
mov
pop
rclb
and
mov
mov
jo
lret
inc
pushf
lahf
inc
push
in
in
stos
test
je
inc
lods
stos
mov
test
jmp
pop
jne
pushl
fneni(8087
inc
cmp
pop
scas
inc
adc
sub
repnz
loop
adc
outsl
fiaddl
push
lods
test
les
in
popa
mov
stc
push
mov
inc
sbb
adc
adc
cltd
cmp
loopne
sub
and
stos
lahf
inc
out
arpl
lret
xchg
jmp
sahf
test
xor
jmp
adc
xchg
in
cmp
addl
cmp
addl
jbe
pop
stos
movsb
cmp
xor
xor
imull
mov
jecxz
pop
out
mov
insl
sub
push
mov
and
dec
sti
xchg
xchg
inc
fisubrs
inc
mov
fwait
cmpl
lret
fnsave
fs
mov
movsb
adc
mov
pop
sub
lds
sarl
inc
or
jbe
or
in
stos
mov
cmp
outsb
test
aad
lds
cmp
in
jl
test
cmc
outsl
pop
sub
outsb
fwait
jecxz
sub
cwtl
push
les
sbb
je
mov
ds
dec
pop
xchg
jp
pop
pop
fcoms
mov
sbb
sub
xchg
mov
faddl
mov
popa
nop
roll
sub
aaa
sbb
sbb
cmp
mov
xchg
or
loope
fucomp
cmp
jne
test
inc
inc
movsb
js
std
mov
lret
pop
nop
into
or
and
cs
sti
jo
sbb
loop
mov
leave
mov
jns
popf
jns
mov
xchg
and
adc
ljmp
int
pop
cs
fstl
mov
jmp
cltd
cs
loope
loopne
or
cmp
mov
xchg
fsubp
mov
sub
mov
inc
xor
ret
sarb
mov
in
loope
jg
lret
and
adc
nop
pop
aas
hlt
test
pop
mov
in
dec
xor
jne
dec
scas
mov
push
popf
cmp
jmp
xchg
loop
lods
cld
inc
xchg
insb
andl
inc
sbb
insl
mov
pop
stos
cmc
push
xorl
aaa
cmp
xchg
or
and
push
jns
xchg
or
pop
cli
pop
or
outsb
nopl
int
jno
pop
out
jmp
mov
enter
add
pop
push
dec
dec
addl
inc
roll
negb
jecxz
jns
sub
mov
sub
push
into
push
pop
jecxz
dec
test
mov
xchg
xor
xchg
imul
mov
jno
filds
stos
mov
stos
test
lds
mov
inc
sub
sbb
inc
aas
sbb
jmp
mov
mov
inc
mov
xchg
out
scas
jb
out
clc
aam
sub
mov
jns
lcall
adc
sub
pusha
push
and
xchg
pop
mov
xchg
add
xchg
push
mov
loope
mov
mov
and
mov
jp
shr
js
rcll
rorl
add
add
cmpsb
rolb
lret
std
cs
pop
fwait
cmp
adc
cmp
in
sahf
in
xchg
aas
xor
xchg
xchg
sbb
mov
cwtl
inc
je
jg
jb
add
xchg
cld
push
mov
jmp
push
fs
push
cmp
adc
outsl
push
add
or
xor
jmp
test
xorb
bound
leave
xchg
aad
fnsave
sbb
outsb
sahf
mov
addl
pop
adc
dec
movsb
jg
and
push
lea
adcb
push
rcl
inc
cmp
out
int
loope
inc
mov
add
jb
les
sbb
add
cs
pop
add
pop
xor
fwait
sbb
std
inc
or
test
mov
jecxz
sub
pop
mov
or
cmp
xor
jle
test
lret
das
xchg
decl
sbb
pop
push
pop
jl
dec
shrb
jo
mov
stos
popa
sub
push
popa
pop
aad
lcall
cmpsl
scas
addb
push
jl
pop
in
jne
or
outsl
loop
jle
or
dec
outsl
dec
cs
shll
ss
sub
xchg
jns
pop
gs
push
add
sbb
add
push
pop
xchg
mov
xchg
inc
push
cmpsl
sbb
imul
rcrb
pop
cmp
sub
repnz
das
add
sti
mov
and
stos
xor
pop
pop
jg
js
xor
sbb
add
test
lret
subl
int3
mov
cmpsl
cmp
fdiv
fsubs
gs
repnz
jbe
push
jns
xor
cmc
or
and
out
jg
fisubrl
xchg
out
adc
ds
mov
icebp
push
adc
fwait
jo
dec
gs
fnstcw
push
pop
sub
add
sahf
sbb
daa
imul
add
sbb
push
jnp
sbb
lock
fnstenv
push
mov
imul
loop
and
dec
mov
jno
cmp
adc
mov
stos
pop
repnz
lcall
cmp
inc
xlat
test
out
cmpsl
icebp
arpl
test
inc
inc
push
inc
push
mov
pop
scas
dec
sbb
std
adc
stos
pop
cmpsb
xchg
jb
jp
mov
dec
out
in
mov
js
mov
xlat
rcrl
daa
or
sub
ja
insl
fbld
jb
lock
cmc
mov
cmp
negl
mov
mul
ret
ret
xor
inc
push
adc
mov
rclb
jecxz
adc
popf
loope
add
sti
orl
movsl
push
inc
xchg
std
pop
int3
in
mov
xor
out
xchg
adc
dec
dec
xchg
add
jmp
nop
push
push
or
clc
or
mov
xor
pushf
and
or
fidivrs
mov
inc
or
xchg
jmp
dec
cmp
neg
or
shr
lahf
lods
mov
cmpsl
enter
int
xchg
adc
stos
cmp
jo
sub
and
pop
or
mov
mov
inc
mov
jecxz
sbb
je
jl
pop
mov
cmc
aad
je
mov
add
test
adc
pop
lcall
ja
aaa
in
test
loope
jns
push
xchg
int3
out
cltd
sub
xlat
fs
xor
dec
xor
inc
scas
cld
leave
test
dec
out
call
mul
ja
and
and
inc
add
divb
mov
int
sub
or
rorl
imul
hlt
enter
lock
xor
push
mov
in
repz
mov
add
repnz
iret
pop
xor
sub
xchg
pop
ret
out
ret
ss
cmp
adc
nop
dec
mov
push
pop
mov
xor
pop
cmp
jno
test
dec
xlat
into
xor
adc
rol
out
jne
call
movsb
add
lods
fwait
inc
popa
sbb
mov
inc
cmp
jmp
and
xor
fsubl
xchg
sti
ja
jbe
leave
ret
mov
sbb
xor
js
jns
in
dec
div
xchg
shrl
pop
ret
mov
inc
stc
push
idiv
lods
out
adcl
xchg
mov
ret
adcb
les
dec
popa
ret
lahf
movsl
nop
dec
push
shr
lcall
rcr
xor
pop
inc
mov
mov
mov
ret
addr16
aas
repz
sbb
loop
mov
push
test
push
jbe
test
push
adc
cld
lds
dec
out
lods
lea
or
or
hlt
pop
das
jmp
fcompl
pop
push
push
mov
xlat
xor
push
rcrb
add
push
addr16
loopne
mov
iret
std
add
mov
adc
fs
dec
jmp
sbb
into
and
xchg
aaa
cld
ds
and
adc
or
in
push
jl
push
mov
jo
and
ss
mov
xchg
and
outsl
add
dec
in
cmpsb
mov
push
jg
pop
pop
push
push
push
xlat
fistps
enter
movsb
add
sub
push
xchg
aas
fnstenv
jns
fisttps
jmp
sub
imul
pop
mov
subl
test
outsl
sbb
les
das
out
push
ret
inc
arpl
fiadds
inc
dec
filds
inc
xchg
cld
jecxz
rcrb
sbb
sbb
orl
jnp
sub
xor
mov
testl
enter
js
cmp
and
rcrl
nop
int
or
cltd
inc
pusha
mov
loope
push
shl
xor
mov
cmp
cmp
addb
insl
int3
adc
sub
push
aam
sbb
les
and
mov
movsb
jge
xsaves
cmpsb
stc
mov
xorl
iret
jo
scas
mov
les
out
and
jmp
ret
dec
stc
shl
push
jo
jmp
add
lret
push
mov
lahf
inc
cmp
pop
out
push
mov
iret
xlat
divl
sbb
rcr
dec
inc
loop
dec
fcmovu
mov
mov
xor
into
scas
or
fbstp
cwtl
comiss
loopne
mov
mov
js
xchg
in
fldt
cmpb
add
dec
push
push
dec
mov
je
cmp
adc
xchg
cmp
out
fdivl
cmp
inc
daa
sbb
jae
jo
shll
sbb
and
xchg
sub
cli
and
dec
ret
in
shlb
mov
addr16
je
jae
dec
in
mov
cwtl
popl
iret
out
nop
lods
mov
lahf
sbb
add
test
and
xor
add
sub
jnp
fsubs
xor
sti
inc
cmp
fs
insl
jbe
xchg
sbbb
pop
loopne
cli
lret
arpl
or
cmc
imul
xor
cmp
lret
sbb
jne
sbb
pop
mov
push
stos
mov
pushf
dec
stc
rolb
hlt
das
pop
sub
roll
cmp
pop
cmp
adc
out
sbb
inc
sbb
or
adc
mov
in
add
push
push
in
shlb
das
lds
aam
dec
inc
mov
sub
fdivs
push
popf
outsb
dec
cld
xchg
and
daa
sbb
cmpsb
jle
es
addl
mov
inc
mov
fistpl
or
xchg
or
mov
pusha
cld
inc
and
es
sbb
or
jg
pusha
cltd
lea
test
dec
or
sbb
jg
cltd
mov
mov
xor
dec
lret
pop
sub
loope
or
mov
or
and
inc
xchg
inc
sahf
mov
call
xchg
xchg
fcmovnu
lcall
ds
mov
imul
dec
sbb
ficompl
mov
insl
stos
rcrb
or
push
out
adc
dec
lods
cmc
adcl
cmp
xchg
sub
cwtl
fiadds
mov
mov
aas
cmp
mov
ret
xor
mov
add
jle,pt
mov
push
movsl
mov
or
out
fdivrs
stos
cmc
cltd
ja
xor
leave
lods
xchg
shlb
dec
cmpl
and
dec
cmp
nop
js
xchg
mov
roll
out
sub
dec
cmp
add
js
xchg
lret
fbld
xchg
mov
dec
scas
and
push
inc
pop
fisttpl
test
xor
xchg
lods
sub
mov
loopne
pop
push
sub
jmp
icebp
aas
lahf
in
jne
nop
push
push
in
xor
mov
and
jp
popa
push
and
pushl
mov
xchg
cmp
pushf
or
adc
imulb
pop
cli
leave
adc
mov
push
ds
mov
call
xlat
js
mov
scas
fldl
and
cmpl
ljmp
xchg
push
xor
sub
pop
inc
test
int
popa
bound
lds
scas
dec
cmpsl
lret
lods
mov
cld
insl
jecxz
arpl
mov
imul
sub
out
add
cmpsb
add
push
mov
sub
add
or
xchg
xlat
fscale
add
and
jg
outsl
sbb
inc
add
or
cmp
idivl
fwait
sti
scas
xor
push
lret
sub
into
and
in
cmp
shll
pop
pop
pusha
and
and
call
and
jge
inc
push
popf
in
add
repz
pop
ret
repz
jmp
xchg
pop
cmpsl
sub
ljmp
ljmp
repz
in
test
addr16
addr16
enter
stos
shlb
sub
popf
dec
mov
add
jle
bound
lock
mov
lret
add
rcr
dec
lahf
fstps
jne
or
sub
pop
filds
xor
sahf
push
data16
mov
push
sbb
ret
inc
loopne
pop
jnp
mov
cmp
add
in
push
in
xor
popf
rcrw
icebp
or
test
sarb
test
loopne
xchg
icebp
pop
pop
mov
pop
sbb
xlat
push
pop
sub
fbld
cmp
cmp
xchg
or
int
out
add
and
es
lahf
icebp
and
and
mov
jmp
push
iret
aad
sti
adc
lcall
enter
jo
aas
inc
jb
and
cmpsb
pushf
mov
cmp
gs
pop
xchg
rorb
mov
dec
xor
jge
cmp
lcall
imul
imulb
out
sti
and
sbbb
aad
pop
insl
xchg
stos
mov
jmp
xor
fstps
mov
sar
mov
cmpsb
push
xor
popa
mov
cwtl
push
jno
out
sub
push
or
inc
in
cwtl
xchg
lret
push
add
fdivrl
imul
syscall
scas
dec
cmp
jae
or
or
insl
jns
push
dec
into
ljmp
cmp
ljmp
xchg
push
xchg
aam
cld
adc
inc
adc
add
repz
aas
ja
xor
push
pop
inc
icebp
inc
arpl
aad
repz
in
push
pushf
sub
sub
xor
xchg
enter
dec
stos
sub
pop
mov
dec
sti
loop
pop
jmp
in
and
or
lea
bound
mov
mov
pop
cmp
mov
stos
mov
mov
aad
push
inc
dec
push
mov
mov
ret
xchg
cmp
dec
xchg
mov
roll
fisubrs
jb
enter
inc
mov
cmpb
mov
aam
pop
adc
int3
shll
xor
jae
push
fdivp
xchg
das
or
out
cmp
addr16
int3
add
test
aad
sub
cmpb
and
add
inc
sbb
test
jne
dec
les
sub
mov
adc
push
das
add
mov
push
mov
adc
les
mov
sub
inc
xchg
sti
push
js
cmp
cmp
fwait
movsl
or
imul
xchg
or
push
out
pop
mov
jle
and
rorl
jne
jae
andb
pop
mov
jl
mov
roll
dec
testb
cwtl
mov
test
and
push
mov
lret
inc
pop
outsb
sbb
xchg
push
jmp
in
xlat
mov
leave
imul
imull
and
pop
subb
dec
repnz
in
cmp
ret
in
dec
aad
mov
or
leave
sarb
pop
mov
inc
shrl
sub
mov
aaa
xor
push
sub
adc
jno
mov
shll
outsb
xchg
ljmp
enter
mov
repnz
dec
and
jecxz
pop
adc
arpl
jl
xorl
mov
push
faddl
test
loop
lret
pop
dec
push
xlat
es
jmp
fcomp
cs
adc
pop
cmpsb
dec
daa
sahf
pop
outsl
lret
xchg
adc
fidivrl
test
jbe
mov
int
cmp
out
int3
pop
daa
jnp
loopne
push
stos
or
add
jl
push
cmp
and
scas
cmp
fiaddl
mov
push
jecxz
lock
mov
add
push
scas
mov
push
pop
loopne
enter
shlb
nop
sarl
mov
push
mov
js
push
mov
pop
popf
jns
and
imul
add
or
xor
or
mov
int3
sbb
cmp
es
gs
add
ja
repnz
dec
push
mov
or
sbb
add
movsb
mov
push
pop
cmp
add
xor
push
pop
daa
dec
mov
insb
mov
dec
repnz
mov
int
int
xchg
cmpsb
data16
out
mov
js
mov
fbld
cmp
and
or
push
inc
push
rorl
add
xchg
ljmp
cmp
jo
js
mov
hlt
ficomps
mov
insl
dec
shrb
sbbb
sbb
out
arpl
add
stos
js
repz
or
jbe
pop
lret
dec
imulb
pop
inc
inc
sti
adc
cmpb
outsl
xchg
xchg
pop
cmp
test
dec
out
push
in
pushf
dec
ret
sub
push
divl
adcl
cmpsl
xchg
test
cltd
cltd
orb
sahf
cmpsl
xor
fistl
and
sub
adc
dec
stos
push
repz
push
test
dec
nop
movsl
shrl
push
lods
pop
push
arpl
dec
jge
mov
pop
jae
lods
cwtl
cmp
js
cmc
xchg
pop
xchg
mov
xor
xor
mov
popf
movsl
add
jb
imul
jecxz
mov
lods
jecxz
and
xchg
test
add
fildl
or
repnz
xor
jno
xor
xchg
or
ret
mov
sti
test
jo
jmp
cmp
out
bound
movsl
jnp
stc
rolb
pop
cmp
loopne
repnz
mov
sbb
jg
mov
ss
xor
icebp
int3
jecxz
faddl
sbb
negb
sub
nop
fwait
repnz
sub
mov
ss
iret
incb
inc
and
lock
xor
pop
in
in
lcall
popf
fwait
inc
les
ret
popa
cwtl
ret
mov
cwtl
xor
push
stos
jp
add
ffreep
jg
fxch
mov
pop
push
lods
push
fiaddl
xchg
gs
sti
inc
hlt
cld
insl
jnp
adc
xchg
xchg
mov
jg
repnz
sub
mov
in
jmp
xchg
push
mov
rcrl
popa
cltd
cld
shr
aam
inc
enter
ljmp
enter
mov
and
jmp
shl
add
pushf
inc
push
arpl
loopne
mov
js
nop
pop
mov
test
push
test
sar
add
repz
insb
push
mov
adcl
and
push
mov
dec
inc
aam
pop
pop
mov
pusha
mov
add
js
movl
add
fs
dec
or
sbb
mov
dec
sbb
imul
inc
outsb
or
mov
jns
imul
je
inc
sub
hlt
cli
ret
lods
xchg
cmc
sbb
push
movsb
les
adc
jle
out
ret
pop
dec
pop
jg
push
pop
rclb
xlat
ss
lcall
mov
adc
or
pop
mov
cmp
pop
scas
sbb
aam
cmovae
dec
repz
pop
mov
aam
add
or
fstp
dec
das
arpl
icebp
in
or
ljmp
mov
mov
movsl
ja
jle
or
inc
and
pop
mov
add
jp
test
push
popa
std
inc
push
xchg
dec
sub
add
xor
out
jg
out
dec
fbld
adcb
sub
imul
repz
jp
lahf
scas
jns
rcll
xchg
xchg
sbb
adc
jno
jg
movsl
scas
add
sub
cmp
jecxz
xor
jb
lods
jo
sti
cmpsb
in
shlb
adc
add
dec
push
xadd
jo
xchg
in
nop
or
mov
adc
fwait
xor
cmp
lret
daa
cwtl
fldenv
adc
pop
mov
insl
jns
dec
cmp
inc
movsb
pop
pop
pop
ret
mov
popa
int
dec
fsubl
jl
aaa
xor
dec
sarl
and
xchg
or
daa
popa
mov
packsswb
leave
fwait
adc
aad
jnp
arpl
inc
pop
mov
jl
lcall
mov
int3
cmpsl
mov
movsb
cmp
cmp
dec
xlat
shll
cli
push
mov
mov
lret
mov
jae
lret
cmp
cld
push
pop
sbbb
pop
sti
pop
mov
mov
jl
inc
cli
test
arpl
out
xchg
and
xor
xor
sub
mov
pushf
movsb
xchg
jae
and
popa
pusha
xchg
ljmp
rclb
es
sbb
pushf
ja
daa
lods
pop
out
jns
dec
push
out
das
cld
popa
or
pop
insb
in
jg
inc
push
cld
cmpsb
sbb
and
push
fisttpl
xchg
popa
adc
push
ret
movsl
dec
push
push
fucom
outsl
xor
popa
and
push
sbb
leave
gs
push
jbe
insb
jae
pop
xchg
scas
sarl
loopne
je
cmpsb
add
fnstsw
lcall
out
adc
ljmp
ret
xor
daa
dec
pop
sub
inc
adc
fsubs
nop
mov
rclb
xorb
sub
push
jb
lret
les
and
stos
clc
fcmove
mov
push
pop
outsb
mov
bound
sub
loop
add
jne
cmp
mov
push
mov
into
jmp
or
popf
loope
cltd
cmp
push
sub
sar
outsl
insb
aam
mov
cmpsl
mov
sub
out
stos
dec
or
mov
xlat
subb
sbb
jl
pop
or
push
call
mov
out
add
loopne
push
adc
fists
mov
mov
out
mov
xchg
mov
add
adc
std
and
testl
cmp
jbe
adc
push
sbb
rclb
dec
lret
jno
out
inc
sub
adc
bound
mov
xchg
adc
pop
mov
lahf
xor
sbb
iret
xor
sbb
stos
mov
cmp
dec
mov
xchg
in
aas
inc
inc
push
jno
incb
sub
sbb
and
cld
sub
dec
sbb
jne
mov
ret
mov
dec
inc
and
jo
cs
hlt
data16
xchg
mov
arpl
mov
insl
shl
addr16
jo
xor
jle
gs
or
add
rorb
lods
je
loopne
cmp
xchg
mov
jl
loope
maskmovq
negl
sub
pushf
and
rcr
fdivp
sub
jl
adc
mov
adc
loopne
test
or
js
leave
lahf
ss
insb
add
mov
lret
sub
sbb
sub
lret
fs
dec
outsb
repz
sub
jae
scas
mov
push
or
sbb
stos
in
jno
push
pushf
fwait
insl
lret
roll
dec
add
movsb
mov
mov
sbb
add
add
stos
insl
mov
insb
mov
sahf
mov
pop
ds
bound
push
lock
or
cld
xchg
ret
jo
inc
hlt
lcall
jmp
xchg
frstor
cmp
int3
outsb
mov
and
out
and
movsb
nop
xchg
out
push
sbb
dec
fmuls
mov
push
push
imul
shll
mov
cmp
push
aas
push
mov
pop
push
aaa
push
mov
pushf
dec
ret
dec
cs
lds
lret
ja
dec
or
sbb
fiadds
push
sti
aas
int
out
mov
test
cmovge
pop
outsl
inc
push
xor
push
outsb
xchg
subb
ficoms
jns
mov
ss
cmp
add
push
ljmp
lahf
dec
inc
jo
or
push
sbb
xchg
mov
popl
pop
add
movsb
andb
aam
in
loopne
test
xchg
mov
dec
push
push
inc
leave
jae
xor
cmp
push
insl
or
mov
add
xor
dec
jno
mov
sub
xor
cs
mov
ret
hlt
mov
xchg
xchg
inc
jns
sub
lret
int3
stc
xchg
mov
jge
fidivrs
jl
jo
mov
and
call
dec
cs
lahf
not
inc
ret
xor
aad
xor
cld
test
jno
aaa
sbb
xchg
outsb
push
ljmp
push
xchg
xchg
fucomp
mov
add
sbb
or
jae
aaa
mov
dec
jns
outsl
scas
pop
cmpsl
add
jb
push
mov
or
and
push
mov
push
push
daa
sahf
dec
jbe
loop
mov
sub
mov
add
or
dec
test
push
adc
add
xor
pop
mov
xchg
nop
fbld
push
std
lahf
lret
sub
ljmp
imul
mov
sbb
popf
push
addl
mov
scas
stc
push
ret
cs
nop
test
mov
xchg
pop
jb
cmp
adc
jns
fdivl
lcall
or
sbbl
imul
loope
rolb
mov
pop
mov
in
mov
mov
stc
xchg
jae
push
push
adc
xchg
in
mov
cmp
jg
push
mov
movsl
mov
addr16
jle
jg
jg
imul
dec
dec
sbb
js
pusha
aam
adc
inc
icebp
push
or
xor
jmp
jg
lods
rorb
sub
jmp
push
icebp
xchg
adc
js
ljmp
aaa
cmc
bswap
insb
data16
pop
pop
and
jle
adc
fwait
jle
insl
sahf
jmp
mov
in
mov
mov
ds
lea
ret
pop
or
lea
int
data16
add
int3
jbe
sbb
xchg
pop
mov
dec
jo
jmp
mov
sbb
repz
jno
loop
jne
mov
sbb
sbb
add
leave
mov
loopne
mov
lds
loop
inc
es
cmp
push
shlb
mov
xor
aaa
sub
test
aaa
test
push
iret
add
clc
cmp
enter
jne
ret
adc
fwait
pop
adc
jnp
pop
les
int
push
jecxz
stc
pop
jne
imul
mov
lahf
jb
int
inc
inc
xchg
add
outsb
lahf
cmpsl
inc
inc
aas
jb
aas
lahf
sti
sbb
or
pop
imul
insb
jge
lahf
pop
lea
aaa
inc
xor
xor
inc
daa
mov
pusha
into
sbb
out
sbb
xor
pop
aaa
vpslld
pop
testl
aaa
mov
pop
call
jns
lods
mov
dec
pop
mov
mov
pop
aad
sub
jl
sub
jecxz
mov
inc
and
popf
insl
je
rcr
negl
outsb
cmp
call
or
adc
aam
pushf
cmc
pop
mov
jne
push
xchg
outsl
pop
and
sbb
push
sbb
sbb
iret
mov
add
sub
outsl
aaa
addb
jns
fcompl
sub
popf
jge
imul
mov
outsl
ja
imul
mov
cs
push
lahf
or
xor
mov
pop
movsb
ss
nop
sub
sub
sbb
insl
cmp
mov
add
scas
je
push
call
mov
mov
mov
and
arpl
sbb
movsb
xor
mov
adc
sti
lgs
pop
sbb
add
cmp
xor
mov
ror
add
xor
leave
fsubl
fwait
sbb
imul
sub
aam
loopne
push
ja
filds
imul
shrl
arpl
sahf
mov
pop
fcomps
push
aaa
mov
aad
mov
mov
test
cmp
xchg
imul
stos
icebp
mov
lock
pop
leave
ret
pop
loop
sub
fwait
jmp
divb
rcrb
aam
pop
add
aad
pop
aas
inc
inc
movsl
jns
or
lds
push
lds
cmp
cld
dec
stos
pop
es
push
call
xchg
dec
mov
dec
push
cmp
mov
sub
pop
aam
sub
repnz
add
scas
data16
mov
loope
dec
xchg
xchg
pop
pop
lods
iret
cmp
test
pop
mov
aad
jp
ljmp
leave
mov
adc
sbb
or
mov
cli
jns
rcrl
cld
sbb
and
push
dec
sarl
sbb
dec
aad
lock
cmpl
jge
leave
inc
inc
bound
fs
ret
test
jb
fs
scas
fs
mov
roll
mov
outsb
loop
dec
jl
xor
pop
jl
mov
mov
push
xchg
frstor
icebp
xor
pushfw
jne
adc
aaa
lcall
dec
push
lods
fwait
bound
xor
movsb
inc
addr16
add
and
loope
gs
add
leave
push
and
fst
cmp
jecxz
jmp
out
sub
mov
popf
ror
xor
in
iret
mov
jb
test
mov
adc
xlat
adc
arpl
test
pop
pop
sar
sbb
lock
jae
iret
mov
push
decb
dec
pusha
adc
fs
inc
sbb
lock
insb
call
stos
stos
ljmp
add
rep
xor
stc
cmp
testl
cmp
lock
std
out
and
imul
xchg
lods
pushf
in
roll
movsl
dec
or
dec
add
imul
mov
cs
adc
dec
jp
sbb
std
jge
mov
sub
dec
call
dec
es
gs
push
test
pop
push
aam
stos
mov
aam
adc
cmp
stos
push
andl
shlb
or
fistpl
pushf
mov
stos
icebp
and
subl
ret
and
cltd
jge
xor
in
mov
sub
jo
xor
sbb
fsts
cmc
sbb
daa
jg
xchg
jmp
jp
leave
ds
inc
and
xor
or
inc
in
jnp
pop
sub
fucomp
adc
scas
inc
jno
mov
dec
int3
pop
lahf
jae
popa
jl
or
add
jne
imul
dec
loopne
lock
jmp
adc
arpl
sarl
dec
pop
call
jbe
cmp
pop
enter
scas
push
mov
dec
jg
pop
mov
xor
das
cmpsl
pop
xor
test
or
mov
inc
push
in
out
adc
aas
or
rclb
dec
xor
xor
imul
and
shll
enter
xchg
popa
jecxz
aam
push
imul
imul
inc
shlb
ds
mov
mov
mov
dec
sahf
shrl
dec
lods
lcall
dec
sub
es
orb
lahf
mov
add
cmp
dec
inc
in
nop
loope
scas
lahf
inc
int3
mov
std
xchg
xchg
inc
leave
or
and
inc
jmp
or
and
pop
test
sub
out
in
or
ret
fstpt
mov
lods
pop
inc
mov
mov
mov
fsubl
or
or
mov
pop
xor
mov
xchg
push
adc
or
jae
test
daa
adc
jo
xchg
xchg
dec
es
imul
mov
add
fidivl
test
lcall
pusha
xchg
pop
inc
dec
xor
in
les
jbe
les
inc
lcall
push
das
test
pop
fstpl
push
pop
ret
cltd
stc
xchg
sbb
sbb
jmp
ss
rclb
repnz
dec
mov
mov
ret
in
cmp
sub
cmp
sti
add
cmp
pop
loope
mov
pop
and
test
fistpl
cmp
outsl
mov
hlt
negl
push
jne
mov
jge
out
imulb
pop
aam
xchg
dec
inc
test
test
addr16
movsb
xchg
cld
mov
call
nop
fnsave
test
cli
mov
notl
dec
pop
in
xchg
dec
mov
cmpsb
ja
push
or
dec
leave
aas
pusha
ror
stos
cmpsl
push
sub
addr16
cmp
xchg
mov
pop
ror
xor
fbstp
jge
mov
xchg
xchg
mov
test
in
imul
xor
out
call
xor
and
sti
mov
xor
jno
mov
pop
inc
adc
add
sub
pusha
mov
xor
insb
int3
jbe
sbb
or
insb
stc
es
jb
mov
inc
aaa
in
int3
mov
cmpsb
in
add
jbe
inc
mov
stc
frstor
mov
repnz
mov
sahf
lahf
frstor
cmp
out
push
das
mov
scas
aam
cmp
ret
mov
outsb
imul
dec
mov
fistpll
sub
sti
lcall
pop
stos
push
stos
cld
xchg
xor
sub
mov
je
cmp
mov
lods
push
loopne
and
sbb
mov
cltd
pop
cmp
xchg
push
and
sar
cmp
dec
fstl
test
loopne
push
lahf
fists
in
cmc
cmpsb
jge
adc
clc
add
cli
movsb
mov
xchg
inc
jae,pn
push
dec
fcmovb
call
into
sbb
inc
repz
add
xor
pop
popa
mov
sbb
ret
mov
in
add
lea
iret
jg
mov
rorl
push
mov
inc
push
xlat
popa
dec
loop
pop
cld
or
add
jno
add
mov
pop
sbb
push
pushf
out
inc
jns
xchg
xchg
and
in
push
test
mov
cwtl
mov
cmp
cmc
std
mov
cmp
filds
cmp
and
sub
mov
into
lds
inc
push
scas
stos
hlt
xor
ds
lret
adc
mov
ja
dec
mov
and
fwait
jne
stos
repz
pop
xorl
sbb
repnz
cld
mov
jg
fcmovb
sarl
dec
cmp
fwait
pop
cmp
inc
mov
call
jno
das
mov
lcall
setb
cs
out
push
lret
xchg
std
shr
sbb
inc
aam
cmp
cmpsl
adc
sahf
leave
lahf
pand
cmp
jns
mov
sbb
push
add
and
mov
or
int
outsl
bound
mov
push
cltd
fistpll
test
idivb
jne
and
pushf
cli
je
sbb
pop
sahf
or
xor
xchg
rcrb
out
xchg
pop
push
xchg
add
ficompl
mov
mov
mov
add
xchg
shll
hlt
push
data16
lahf
lret
add
push
cwtl
imul
aas
clc
mov
je
push
mov
sbb
sti
dec
pop
mov
adc
or
and
in
fwait
dec
lock
add
cwtl
dec
stc
daa
rclb
and
or
sub
scas
xchg
pop
pop
adc
xchg
or
std
lret
addr16
das
jnp
inc
and
xchg
pop
daa
std
or
add
je
inc
mov
xor
sbb
jo,pn
or
push
xchg
testb
adc
mov
lods
mov
cmpsb
xchg
dec
iret
add
xor
pop
jne
pop
sub
xchg
inc
adc
mov
push
mov
sub
sub
push
jnp
mov
add
add
mov
push
push
pushf
pop
mov
xchg
sbb
decb
imul
test
push
pop
jecxz
cmp
das
pop
and
cmp
add
popa
xor
dec
jecxz
or
adc
call
pop
fisttpl
repz
bound
mov
and
or
push
inc
pop
cmpsw
push
dec
adc
jg
push
test
or
pop
repnz
xchg
in
add
add
loope
xor
fnsave
orb
outsb
movsb
std
gs
fwait
cmpsl
dec
push
jb
mov
es
add
mov
inc
addb
fs
cwtl
shll
xor
adc
push
sarb
je
mov
shl
push
mov
dec
pop
adc
push
sub
mov
jo
add
adc
pop
jge
mov
dec
js
sbbb
ret
jns
xor
in
dec
pop
or
push
push
out
sub
mov
cmp
cli
daa
std
or
xchg
enter
lret
adc
lret
mov
cltd
xchg
cmp
add
sub
add
js
jno
clc
add
xchg
repz
js
lea
mov
popa
mov
test
inc
out
in
repnz
dec
sub
adc
mov
sbb
clc
sub
push
inc
cmpsb
sti
jae
push
cmp
push
cmp
mov
test
push
popa
or
mov
add
sti
inc
mov
mov
push
mov
pop
inc
out
jo
adc
push
int3
int
add
adcb
mov
out
test
clc
or
and
popf
add
in
adc
mov
rolb
out
lock
out
test
sbb
sahf
int3
leave
test
test
dec
aaa
aas
bound
and
add
adc
out
cld
enter
xchg
pusha
movsl
imul
push
xchg
sub
fidivrs
sub
push
push
push
loopne
adc
mov
xchg
or
fmul
jne
fcomip
xchg
cmp
or
mov
or
push
xchg
adcl
in
pushl
mov
add
sbb
dec
imull
sub
std
xor
mov
xchg
cmpsl
inc
add
xchg
out
push
mov
sub
repnz
imul
sub
sti
stc
dec
iret
push
cmp
add
and
bts
repnz
adc
scas
ja
jmp
fdivl
push
mov
mov
mov
int3
mov
in
push
aam
push
add
push
mov
mov
inc
xchg
test
lahf
orl
mov
popf
sub
or
stc
push
dec
rcrl
scas
xchg
sub
mov
add
mov
mov
push
cmp
push
imul
add
ss
cmpsb
lods
and
popf
mov
lcall
bound
stc
xor
loopne
xor
fldenv
inc
lods
mov
xor
mov
xchg
loope
add
mov
aad
adc
and
lcall
cmpsb
shll
stos
dec
pop
test
dec
xchg
jg
enter
sbb
insb
push
push
rcll
mov
lods
imulb
adc
enter
pop
jmp
sbb
mov
popa
icebp
xchg
movaps
in
mov
test
adc
test
xor
dec
xchg
shrb
mov
xchg
mov
adc
inc
out
aad
jg
xchg
movl
or
mov
in
ret
iret
jnp
pop
cmp
loop
loope
pop
dec
test
hlt
xchg
add
lcall
mov
cli
push
inc
jle
dec
lods
out
jae
imull
ljmp
xchg
jae
xchg
pop
pop
test
pop
mov
and
xor
mov
in
scas
jno
fcmovne
aam
ds
mov
shrl
cmp
mov
aad
adc
xchg
inc
ficoms
insl
or
inc
mov
mov
aad
push
out
pop
pop
rorb
pop
sub
sti
test
mov
outsb
push
push
lret
fs
mov
ret
xorl
cmpsl
stos
sbb
cwtl
add
xchg
mov
sbb
call
sub
mov
cld
mov
xlat
mov
aas
add
int
cmc
and
mov
dec
mov
or
in
sub
or
lahf
lret
cs
stc
aaa
mov
mov
shrl
xchg
dec
test
decb
mov
push
and
test
xor
sbb
test
pop
push
jle
gs
jns
mov
or
insb
jl
and
adc
mov
jge
gs
notb
insb
cwtl
xor
pop
cs
xchg
loop
adc
mov
dec
leave
cmp
and
insb
or
inc
loopne
mov
push
loopne
ja
sbb
fcomip
and
shll
and
adc
sahf
fsubrl
fdivrl
sub
xor
jno
mov
sub
jle
loop
subb
jo
push
fwait
test
pushf
imul
push
or
pop
imul
mov
jecxz
push
push
sub
pop
pop
dec
jp
ja
xchg
lahf
xchg
in
loop
into
push
lret
bound
push
ja
or
pop
cmp
fdivrs
addr16
jmp
adc
mov
cmp
roll
mull
iret
test
pop
ja
pop
mov
pushf
or
push
imul
push
gs
dec
loope
fsubs
repz
out
mov
adc
xor
aad
push
test
cltd
pop
cli
fsubrs
jl
mov
loop
push
and
movl
cmp
test
mov
out
dec
sub
mov
rol
push
jmp
xchg
cmp
hlt
popa
pop
and
push
adc
sbb
icebp
mov
cltd
mov
stc
or
fwait
dec
pushf
call
test
hlt
daa
and
xchg
jp
and
lahf
imul
test
rcrb
lea
add
aam
push
mov
and
ret
iret
in
xor
mov
push
mov
push
and
ret
repnz
popf
xor
jns
mov
push
dec
in
push
out
test
dec
arpl
add
xlat
cs
push
sbb
xor
fdivs
int3
stos
xor
mov
call
gs
sub
lea
mov
fdiv
dec
jl
push
call
lcall
mov
adc
xor
push
push
xchg
sub
fadds
and
push
lock
jno
mov
fdivrp
pop
mov
stc
sbb
and
shr
shll
sub
hlt
add
xchg
or
inc
fidivs
loope
rclb
mov
test
leave
in
sub
jmp
mov
aas
cmp
push
ds
fsubl
or
data16
or
dec
popf
pushf
xchg
cmc
jae
pop
ret
push
mov
sbb
adc
imul
pusha
jb
imul
adc
push
pop
ss
xchg
das
andl
je
pop
cltd
sbb
lcall
mov
stos
sbbl
cli
movsl
mov
incl
fistps
mov
jmp
or
jbe
inc
or
daa
pop
adc
hlt
cmpsb
xchg
jno
dec
or
scas
bound
xor
jne
ret
in
out
cld
pop
and
test
mov
repz
jmp
sbb
hlt
pop
xor
pop
fwait
mov
jae
scas
mov
cmp
dec
mov
mov
jae
adc
mov
pop
sbb
push
push
cmp
cs
sub
fimull
xchg
jp
push
loope
adc
js
inc
cmpsb
push
pop
mov
xchg
sti
js
mov
push
out
insl
inc
repz
jg
sbb
inc
fidivs
std
scas
shll
mov
mov
mov
inc
push
cwtl
jnp
dec
xchg
int3
xchg
sbb
cmp
orl
xchg
rclb
stos
xchg
add
xlat
out
loopne
jecxz
sbb
xchg
mov
test
inc
push
outsl
dec
push
xor
and
mov
idiv
sub
cwtl
fimull
out
xchg
popf
enter
mov
dec
mov
outsb
jle
stc
insb
rcrb
inc
xchg
pop
push
cmp
lods
shll
lods
xor
outsb
push
jns
xlat
push
lcall
lea
sub
stc
mov
sahf
daa
imul
dec
sub
push
lret
js
int
add
mov
sub
out
and
orb
mov
nop
xchg
pop
enter
cmpsb
or
sbb
adc
mov
gs
outsb
inc
mov
fstpt
loope
nop
scas
sub
inc
inc
cmpb
cli
xchg
es
jmp
int
xor
cltd
pushf
adc
mov
dec
push
mov
mov
cmp
adc
leave
pop
add
and
bound
dec
cmp
arpl
add
pop
and
dec
xor
adc
ljmp
sbb
pop
or
jnp
sbbb
push
lcall
out
or
xor
fwait
lcall
aam
mov
and
mov
icebp
mov
lret
or
neg
cmpsb
ss
jbe
pop
sahf
ss
add
and
notb
and
inc
xchg
add
inc
sbb
xor
inc
pop
dec
sbb
pusha
push
mov
jge
imul
ljmp
pop
jb
mov
and
mov
mov
mov
mov
push
push
push
pusha
or
and
and
adc
push
pushf
inc
dec
mov
jno
mov
cmpsl
cltd
sub
enter
xchg
lret
pop
stc
testl
add
repz
mov
inc
xchg
xorl
xchg
jno
push
sub
mov
jmp
cld
push
pop
inc
std
cmp
push
sbb
cmp
dec
lods
or
mov
xorl
jg
test
movsb
fwait
cmp
mov
cmp
out
pop
push
lds
lds
pop
xor
test
xor
mov
imul
les
xchg
cltd
or
loop
mov
scas
mov
jle
sub
jge
push
xor
lcall
mov
lds
out
dec
cmp
or
dec
sahf
xchg
add
shl
mov
test
nop
mov
cmp
or
sbb
pop
add
jmp
sub
mov
jo
ljmp
xchg
sub
pop
push
push
fs
test
mov
mov
jecxz
mov
addb
inc
sub
inc
stc
jb
call
iret
dec
mov
pop
cmp
sahf
pushf
add
lods
es
testb
inc
inc
sarl
jp
dec
out
push
jno
pushf
inc
shll
push
push
and
imul
push
xchg
std
out
pop
push
jmp
cld
mov
fidivrl
fistpl
loopne
adc
mov
jno
imul
lds
dec
add
jecxz
popl
fstps
sbb
outsb
xchg
movl
dec
sub
dec
enter
add
out
in
fdivl
lcall
inc
movsl
ss
sbb
ljmp
out
mov
dec
les
mov
or
pop
data16
ret
test
gs
or
jg
movsb
sub
dec
out
sbb
mov
xchg
cmp
mov
into
adc
lahf
dec
mov
sub
mov
sahf
mov
push
dec
cmc
test
push
push
pop
push
shrl
test
ljmp
mov
and
jp
repnz
sbb
push
mov
mov
imul
jne
iret
lock
xchg
mov
cmp
mov
add
rcrb
sbb
inc
add
pop
push
jmp
mov
dec
into
lock
mov
mov
jmp
cmp
pushf
fs
mov
pop
jnp
sbb
adc
mov
pushl
adcl
test
data16
adc
lods
ret
ret
mov
pop
subb
mov
icebp
shrl
mov
rcll
inc
pop
enter
les
test
inc
loope
mov
int3
mov
imul
jecxz
cmpsl
xchg
mov
cmpsb
std
cmp
bound
pop
addr16
outsl
fstl
dec
int
inc
aad
loope
mov
leave
push
sbbl
arpl
hlt
and
mov
loop
and
jmp
gs
sbb
cmp
mov
fsubs
fcoms
popa
or
std
das
sub
xor
pop
daa
shrl
dec
imul
and
push
xor
mov
jle
leave
loop
mov
pop
sub
cs
arpl
mov
rol
xchg
scas
push
dec
mov
cmpsl
orb
jge
lret
push
loope
and
dec
pop
push
push
imul
sahf
popa
xor
daa
ret
lahf
xchg
or
mov
sbb
test
vmovshdup
and
ret
or
mov
and
mov
ret
xlat
fnsave
jg
push
cmpsb
xchg
xchg
adc
movsb
outsb
cmp
stc
fsts
mov
pop
sub
or
or
xchg
push
stos
mov
cmp
enter
ds
jle
push
pusha
jl
mov
loope
movsb
sub
fdivrs
cmc
jge
pop
adc
call
mov
xchg
cmpsl
mov
and
xchg
sbb
enter
lahf
dec
inc
dec
mov
pusha
pushf
mov
mov
enter
push
mov
and
push
push
mov
rcrl
dec
push
fidivrs
xchg
testb
cmp
pop
push
popf
jo
in
pop
add
xlat
mov
stos
jo
fwait
xchg
jp
jmp
xor
fwait
adc
ficompl
movsb
les
adc
aad
inc
inc
mov
sub
cmpl
mov
mov
inc
sbb
js
rcll
inc
int
test
xchg
test
mov
sub
sbb
rcrb
dec
cmp
xlat
test
mov
dec
out
out
cmp
scas
inc
or
movsl
pop
xor
dec
fnsave
sbb
pusha
or
ds
jg
rorl
jbe
or
sti
ds
sub
adc
xchg
push
jg
push
add
loop
ret
cmc
adc
enter
add
cwtl
aam
sbb
mov
push
or
les
ss
fstps
or
push
mov
bound
mov
jbe
xor
mov
imul
cmp
xchg
icebp
xchg
sarl
adcb
out
daa
or
push
add
loopne
repnz
fldl
loope
add
pop
sub
inc
sub
lret
xor
call
cld
inc
popa
testl
mov
aaa
push
or
or
mov
aam
lcall
insb
xchg
repnz
popf
adc
cmp
adc
sbb
inc
xor
sbb
xchg
xchg
push
sbb
fbld
jno
inc
cmp
arpl
ror
loop
cmpsb
jge
mov
add
mov
jae
cmp
inc
adc
adc
mov
xbegin
in
xorb
xlat
test
mov
and
jle
movsb
out
mov
adc
mov
aaa
add
scas
xor
jnp
call
testl
ljmp
adc
arpl
jne
jp
lods
mov
jne
jmp
jl
and
jge
mov
outsb
fidivl
das
stos
rcll
cmp
insb
sub
jae
lods
adc
adc
lds
inc
dec
mov
inc
mov
fs
mov
or
fs
ret
test
pop
sbb
lret
subl
imul
movsb
mov
outsl
sub
inc
push
fnstsw
push
and
stos
loope
std
sbb
adc
or
cmp
jle
pop
or
mov
in
loope
aam
cmpsl
and
aas
mov
push
hlt
xchg
pop
mov
xor
pop
hlt
clc
mov
dec
aad
repnz
mov
cmpsb
or
enter
aad
xchg
mov
ret
xor
cmp
pop
orl
lds
int
lds
cmc
inc
aaa
cmp
add
rcrb
jns
adc
movl
scas
mov
push
cmp
mov
repz
hlt
xchg
sub
xor
mulps
lret
push
shrl
enter
sbb
sahf
mov
popf
out
int3
in
mov
dec
sub
fstl
pop
or
adc
push
add
dec
cmp
mov
insl
adc
and
cmp
push
mov
insb
cmc
adc
pop
mov
push
in
cwtl
cwtl
mov
js
nop
mov
les
enter
pop
jbe
jnp
push
sbb
inc
into
aad
sub
mov
adc
or
stos
addr16
scas
in
xchg
lret
add
push
std
sub
push
dec
push
cmp
inc
cli
hlt
add
shlb
inc
ror
mov
aaa
rcrb
inc
and
inc
or
adc
sbb
mov
xchg
xor
repz
adc
push
int3
hlt
xchg
jnp
adc
mov
cmp
inc
testb
mov
je
push
pop
pop
fcomi
or
inc
shll
les
push
fucomp
inc
xchg
push
cmc
pop
lods
test
orl
aad
les
mov
add
mov
test
sbb
das
inc
imull
xchg
stc
out
pop
and
loop
aad
add
lea
cmp
je
mov
sbb
sbbl
mov
andl
mov
dec
xchg
add
in
and
lods
jb
dec
call
pop
ret
and
jne
sub
cwtl
cwtl
imul
mov
adc
lods
in
ja
repnz
mov
aad
push
push
mov
inc
ret
mov
xlat
adc
xor
or
push
sub
pop
jmp
dec
dec
or
mov
addr16
ds
repnz
xorb
frstor
inc
cmpsl
das
inc
inc
movb
sbb
cmp
fiaddl
ret
or
mov
iret
jmp
scas
jne
add
arpl
inc
shr
sbb
test
lret
lods
ret
adc
mov
cmc
shrl
popf
sub
add
push
or
xor
dec
add
cmpsb
daa
dec
and
jno
cmpsb
cld
scas
xor
loop
sbb
mov
popa
dec
leave
sarb
aad
adc
add
cmpsl
push
cwtl
call
arpl
aas
mov
xchg
mov
aam
adc
push
popf
outsb
xchg
or
dec
sbb
sbb
sbb
pop
jnp
addr16
jecxz
cmpb
mov
stc
jl
mov
mov
imul
and
loopne
xchg
fisttps
sbb
das
mov
repz
mov
std
cmp
or
sti
inc
ret
push
stc
lea
pop
rcr
pop
jle
in
sub
inc
call
and
or
sub
lahf
flds
jb
stos
repz
cltd
sub
fbstp
into
jecxz
push
mov
mov
enter
mov
jns
enter
xchg
jmp
repz
lods
pop
outsb
jmp
inc
es
inc
jo
ja
mov
insb
inc
inc
pop
addl
fmulp
sub
and
push
sub
lcall
ret
icebp
outsl
cli
push
fists
mov
orl
add
add
test
movsb
cmpsb
xor
mov
or
call
ljmp
add
jno
test
xchg
movsb
out
sbb
sbb
jns
mov
mov
xchg
jp
imul
dec
in
xor
cmp
cwtl
xor
pop
pop
int3
ret
and
push
xchg
out
push
adc
je
push
lds
pop
adc
sub
mov
adc
or
inc
pop
std
push
and
jne
rcrl
push
addl
adc
cmp
pop
scas
add
sub
jae
sub
mov
add
sbb
mov
jl
push
xchg
movsl
xor
cs
inc
push
mov
fs
or
stos
add
in
std
jmp
pop
mov
pop
cmpsl
outsb
movsl
ljmp
repz
stos
mov
dec
mov
jns
push
fdivrs
jb
jns
sub
out
test
and
add
ret
cmp
inc
sbb
cmpsb
fcomi
cwtl
inc
pop
cwtl
inc
dec
repnz
mov
aad
scas
sbb
jg
inc
xor
mov
pop
int3
mov
inc
mov
aaa
ret
movsl
pusha
out
sub
aad
push
stc
dec
cmp
push
rcrb
sbb
cmp
popf
sub
sub
sub
jle
loopne
xchg
fsubrs
insb
fstps
cmc
outsb
inc
adc
and
sbb
aaa
gs
sbb
and
rcll
xchg
sub
push
fcomip
or
sub
iret
shrb
out
aas
cs
xorb
popa
arpl
pop
cmp
push
push
fimull
ljmp
pop
lods
imul
js
repz
pop
and
add
addr16
fildll
ret
aaa
inc
cwtl
imul
add
incl
sbb
xlat
mov
dec
fidivl
mov
sub
lock
loope
test
ds
mov
repz
js
iret
rep
ljmp
lcall
jb
push
aaa
fstp
fildll
es
clc
adc
xchg
loopne
in
test
stc
lahf
sbb
jge
insb
adc
iret
lret
nop
ds
cmp
xor
sub
loopne
sub
scas
dec
inc
pop
xor
aaa
adc
hlt
cli
xor
jns
sub
cld
cmp
push
call
fsubrs
popa
adc
out
pop
mov
fadds
mov
xor
ljmp
mov
inc
fisubrs
nop
jecxz
adc
cmp
sub
jg
jo
cmp
shr
loop
lret
shll
frstor
ret
lods
mov
mov
negb
mov
or
pop
icebp
xchg
jbe
mov
leave
cmpsb
dec
push
pop
sub
jnp
outsb
mov
xchg
into
iret
setp
sub
jno
mov
add
mov
cli
add
jbe
cmp
adc
mov
pop
inc
mov
sti
mov
sar
dec
mov
pushf
testl
sbb
scas
and
push
sub
mov
or
cmp
sub
xchg
xchg
movsl
test
repz
mov
fwait
dec
in
fisttpl
ds
pop
fbld
dec
adc
into
sub
fisttpl
mov
cmpsl
enter
xor
mov
xrelease
cmp
jno
pop
jb
lret
sub
mov
mov
addb
sub
xor
mov
cmpsb
jae
adc
loopne
inc
loop
divl
test
xchg
sub
jge
icebp
sahf
sub
cltd
or
call
js
repz
mov
shrb
push
mov
pop
or
push
cltd
ljmp
jle
jl
rcl
fistps
rolb
scas
jmp
or
or
mov
dec
xchg
je
jecxz
jle
add
mov
mov
insl
jg
loope
jae
pop
daa
mov
leave
sbbb
adc
out
in
push
xor
test
sub
sub
fbstp
unpckhps
jne
hlt
adc
push
notl
inc
xor
fmuls
std
fisttpl
rcrb
dec
shl
mov
out
jne
out
jo
pop
jbe
shrl
fcompl
cmpsl
mov
and
pop
dec
jo
fildl
jae
xchg
popa
icebp
and
out
jl
clc
cltd
aas
jp
daa
cmp
adcb
ss
adc
dec
sbb
cltd
jg
pusha
in
xchg
sub
mov
pop
stos
jecxz
lret
and
ret
jno
ret
dec
call
xor
xor
cmp
lods
push
div
repz
icebp
push
out
and
lds
xchg
mov
fstl
sahf
xchg
lea
aaa
loope
das
rorl
jl
in
ss
aam
aam
fadds
push
push
psubd
adc
sub
imulb
fstpt
mov
mov
imul
ret
cmp
xchg
lods
leave
lret
das
push
cmp
cmp
push
repnz
sub
sub
dec
fldcw
jmp
cs
lcall
icebp
or
lahf
jae
xchg
adc
inc
sub
lahf
imull
inc
push
adc
fnstcw
bound
lods
or
ds
xorb
addb
cwtl
stos
or
fcoms
dec
ja
xor
out
dec
pop
aaa
push
iret
pop
push
sub
cmp
fbstp
loopne
jp
mov
inc
ret
jecxz
out
jle
inc
adc
or
sub
cmpb
out
popl
clc
push
mov
push
lods
repnz
mov
stc
jp
clc
out
inc
outsb
pop
and
fs
inc
sub
sahf
xor
fidivl
push
inc
pop
adc
cmp
sub
jno
lahf
and
push
cmpb
jae
std
arpl
dec
sbb
push
mov
test
and
sbb
mov
sbb
pop
js
sub
dec
xchg
mov
pop
test
xchg
dec
aad
dec
push
push
sti
mov
sbb
push
push
imul
mov
pop
inc
xor
cmp
cmp
mov
cmp
dec
roll
lret
outsl
mov
or
test
mov
jecxz
pop
movsl
lahf
add
test
xor
imul
and
or
xchg
cmp
sbb
or
out
jbe
subl
decb
push
jecxz
dec
xor
xor
pop
dec
sti
dec
inc
xor
es
or
adc
mov
mov
mov
inc
fimuls
sub
rclb
and
jne
hlt
mov
push
jmp
test
mov
pop
inc
std
into
xchg
and
mov
dec
cmp
xchg
xchg
enter
ljmp
mov
fimuls
adc
mov
pop
cmp
or
popf
xor
jmp
xchg
in
xchg
mov
mov
push
xlat
and
into
mov
jle
lret
aaa
imul
push
sti
loopne
addr16
outsl
inc
or
cmovle
xchg
out
shlb
pop
test
fcmovnu
jns
cmp
dec
xchg
push
push
jb
push
jbe
push
cltd
addr16
fstpl
xor
out
popa
sub
es
cltd
jmp
test
adc
push
push
aas
inc
jo
xchg
vmptrst
jl
insl
mov
mov
mov
fwait
mov
cmpsb
or
mov
jae
loope
sub
sub
fstps
fs
inc
mov
outsl
pop
out
or
lods
xor
push
dec
pop
fbstp
cmpsl
xor
je
sarb
sbb
out
movsl
jp
imul
daa
push
jbe
js
fdivrl
out
popf
arpl
cli
loopnew
hlt
rol
mov
adc
les
fwait
and
imul
dec
inc
cld
mov
in
mov
stc
int3
int3
loopne
pushf
pop
pop
cmp
cli
movb
movsl
ss
int3
pusha
lea
sti
mov
pop
mov
mov
ret
stos
in
out
push
mov
and
mov
sub
xchg
jecxz
sub
scas
callw
jmp
testb
jnp
lods
jmp
add
xor
cmpsb
out
mov
mov
loopne
lret
dec
in
enter
jae
sahf
push
cmp
in
or
push
mov
test
mov
ja
fcompl
mov
mov
lret
mov
imul
stos
leave
out
lods
mov
mov
mov
xchg
xchg
sub
jge
adc
movsl
cmp
dec
cmp
jl
andl
in
push
cmc
movups
inc
iret
clc
push
rclb
mov
outsb
lcall
pop
ds
cltd
repnz
daa
mov
cltd
push
int3
push
sub
out
aaa
and
out
js
mov
lds
dec
mov
pusha
jno
into
mov
mov
jmp
shrl
mov
dec
cmc
push
dec
loop
adc
jne
or
test
sbb
jge
add
adc
jne
test
sbb
sbb
add
jae
pop
add
cmp
add
stos
inc
jbe
fs
dec
and
iret
mov
jecxz
pop
adc
or
pop
insb
adc
and
scas
nop
popf
call
xchg
sub
ljmp
mov
xchg
add
mov
pop
jnp
lret
push
in
mov
and
ret
insb
push
loop
arpl
xchg
ficompl
mov
cli
jmp
ljmp
call
pop
and
adc
jmp
sub
and
adc
sbb
sbb
add
xor
pop
xchg
xchg
adc
repz
scas
mov
movsb
in
lahf
pop
gs
mov
fisttpl
lods
add
loopne
jmp
cmp
ljmp
adc
mov
and
fsubrs
dec
mov
inc
or
sahf
mov
sbbb
mov
adc
iret
and
stc
loop
std
and
sub
push
lret
sbb
decl
ffree
mov
imul
lret
sub
imull
imul
rorb
repnz
add
ds
mov
dec
insb
nop
fwait
sbbb
jnp
aaa
pop
mov
addr16
mov
test
jmp
mov
enter
xchg
push
arpl
stos
pop
jmp
push
add
int3
mov
jnp
out
or
mov
jae,pt
or
mov
and
pop
xor
add
adc
dec
inc
push
movsl
inc
pop
cmp
ds
sti
inc
jl
mov
out
js
mov
and
scas
insl
in
mov
and
cmpsb
xchg
push
xchg
out
fwait
add
aaa
aad
repz
mov
adc
ljmp
push
or
dec
jmp
xchg
push
push
add
mov
cwtl
mov
push
push
or
adc
and
fistpl
push
gs
jle
mov
lock
add
lods
add
lods
dec
ss
mov
push
enter
mov
inc
and
sub
xor
cltd
mov
pop
inc
jmp
in
lds
daa
mov
imul
test
cmp
push
mov
iret
mov
sti
fisubs
aam
std
dec
es
dec
popf
test
inc
fldl
mov
pop
mov
xchg
fidivrs
lret
gs
aaa
mov
mov
dec
jns
mov
mov
jge
lret
mov
in
add
dec
gs
or
push
imul
push
sub
jno
int3
jle
push
xor
aas
ret
rol
jae
lods
sbb
hlt
rol
movsb
mov
mov
xor
add
aas
aas
repnz
ja
jmp
fmul
mov
adc
pop
stos
fnsave
loopne
test
icebp
sarb
mov
xor
jge
dec
cmpb
adc
xchg
imul
pop
dec
cld
or
mov
xor
push
repnz
test
test
mov
adc
stc
mov
xchg
mov
cmpsb
test
pop
xor
movsb
cld
xchg
push
loopne
cmpl
pop
or
cmpsb
enter
mov
add
mov
cmp
jge
cmpsb
push
cli
fbld
icebp
mov
mov
or
inc
fcomi
pop
lock
jle
cmpsb
mov
mov
imul
xchg
mov
jmp
fs
fdivrs
loope
dec
js,pn
stos
push
and
iret
fstpl
rol
lret
nop
pop
fidivl
das
lods
adc
scas
loopne
popf
sub
inc
jg
and
add
and
jno
dec
cmpsl
push
add
pop
ja
xor
sbb
stos
icebp
jns
sti
cwtl
xchg
shrb
leave
push
mov
mov
push
sub
lret
and
out
out
scas
mov
imul
cld
sbb
adc
addr16
mov
jno
cmc
lret
in
pushf
mov
sbb
mov
ljmp
imul
push
enter
aas
lcall
fs
pusha
sbb
sti
cwtl
jge
fisubl
cmpb
stos
bnd
sarb
mov
sbb
push
cs
es
into
or
mov
scas
into
rorb
insl
in
inc
sbb
stc
adc
lds
cmc
scas
divl
pop
sbb
xor
fwait
jle
andl
fldl
mov
mov
hlt
xorb
jno
and
mov
dec
adcw
pop
cmpb
sahf
push
into
test
mov
arpl
lret
push
pop
mov
mov
add
scas
cs
mov
xor
pop
jle
pop
out
push
mov
iret
ljmp
mov
dec
push
lock
push
cs
filds
mov
stc
stos
jle
jl
popf
and
mov
lcall
pop
push
cmpsb
aad
mov
cmp
js
xor
jno
sub
test
frstor
mov
sahf
testb
push
and
adc
adc
stos
pop
pushf
cmp
add
je
sbb
mov
leave
aaa
push
ja
adc
push
fldcw
stos
xor
mov
aas
cltd
popa
dec
dec
cmpsb
insb
and
jge
iret
mov
xchg
lret
js
jb
bound
sarl
xchg
pop
sbb
push
xor
dec
sbb
repz
mov
xchg
in
xor
dec
imul
inc
or
fidivrs
push
aaa
sbbl
dec
fwait
lret
pop
or
aad
jmp
orl
xchg
lds
inc
ljmp
sbb
hlt
jnp
sbb
iret
add
sbb
fcoms
sbbl
push
sub
fs
cltd
nop
fucomip
xorl
sbb
mov
mov
xor
mov
test
or
dec
fs
cmpsb
dec
push
lahf
out
aam
adc
cli
loopne
lods
xchg
pop
insb
jb
cmpb
add
jmp
mov
js
pop
fwait
mov
jo
push
outsb
scas
push
sahf
xor
jne
jecxz
mov
and
fidivl
lods
imul
outsl
push
enter
ficomps
sahf
daa
int3
sbb
call
xor
cmp
cmp
mov
mov
and
inc
dec
imul
inc
sbb
mov
dec
int3
sbbl
in
pop
add
mov
or
add
jae
mov
and
out
push
xchg
push
mov
wrmsr
push
mov
mov
ds
outsl
ss
pop
outsb
inc
xchg
lcall
sarb
lahf
dec
icebp
rcrb
push
mov
pop
cwtl
shlb
pop
cmp
pop
xchg
cmpsl
sbb
push
fucom
inc
movsl
lcall
call
and
dec
jnp
shrl
inc
sbb
mull
xor
jnp
mov
test
pop
testb
je
mov
jnp
in
or
pusha
fdivrp
lods
sti
sub
lahf
movsb
stos
call
shl
xor
stos
es
push
andl
sub
push
jnp
push
not
xchg
test
out
or
mov
add
leave
lcall
xchg
jnp
lcall
sbb
xchg
movl
cld
or
sub
data16
jb
pushf
jb
faddl
popa
or
ss
loope
outsl
jg
jne
adc
inc
ret
adc
inc
int
lret
inc
neg
and
jl
mov
fidivl
jg
mov
repz
cmp
and
cmpsb
in
cmpsb
orl
out
pop
pusha
mov
mov
test
cwtl
inc
jg
push
fnstsw
mov
mov
fnsave
shll
je
loop
pop
out
loopne
push
mov
xchg
sub
addr16
fcomps
sub
mov
mov
sub
lds
and
push
loop
inc
mov
lret
movsb
int3
xacquire
sub
lds
popa
cmp
mov
inc
pusha
xor
pop
into
daa
into
scas
sahf
inc
fs
stos
popa
in
mov
adcl
loope
fisttpll
shlb
mov
roll
cmp
xor
ds
fadds
into
out
rorl
movsb
cwtl
dec
inc
rclb
inc
hlt
lock
xchg
xor
xchg
xlat
mul
inc
scas
cmpsb
scas
cmp
jge
pop
icebp
ss
lret
push
out
mov
popf
std
out
mov
inc
pop
cmpb
aaa
pop
cmc
nop
jae
aas
mov
bnd
mov
imul
cli
dec
mov
int
mov
pop
sti
xchg
lods
imul
cmp
inc
and
or
ror
dec
loope
cmp
ret
ljmp
push
push
or
cli
sbb
sbb
pop
and
int3
into
jnp
xlat
or
insl
adc
jb
jge
inc
inc
aaa
hlt
cmp
push
pop
orl
lock
xchg
cmp
loope
scas
ljmp
push
jns
sub
push
push
pop
jb
cwtl
cmpsl
pushf
sub
or
push
push
add
xlat
and
call
mov
jne
push
fnstenv
ret
out
and
stos
sub
push
cmp
or
lea
enter
mov
cmp
imul
stc
and
imul
mov
cmp
jo
mov
mov
or
sarb
rcrl
imulb
and
and
add
addr16
testb
ret
push
xlat
adc
jbe
je
ljmp
pop
popf
inc
fcomps
cmp
call
or
in
aas
fucomp
xchg
loopne
ljmp
ds
cmp
and
jg
inc
jl
sub
dec
pop
movsb
cmpl
jle
arpl
jmp
adc
or
cmpsl
jae
into
int
lods
aas
fstpl
push
jo
xchg
inc
cld
inc
lea
sbb
movsl
add
sub
subl
xor
in
jg
pop
outsb
jnp
dec
mov
jb
xor
imul
xor
mov
jb
cmp
in
loop
pusha
sub
adc
pusha
mov
inc
mov
pop
push
test
mov
adc
iret
adc
and
push
jbe
jmp
sbb
cmp
sbb
xor
inc
and
jno
mov
pop
test
bound
xchg
movsl
cmp
lret
push
jb
jbe
ja
xchg
adc
sti
adcl
pop
enter
dec
jns
sub
insl
clc
shrb
insb
push
paddw
fists
inc
pop
leave
repz
fcmovb
popa
jl
std
ds
repz
lods
dec
push
dec
mov
loope
cltd
sbb
mov
fwait
cli
mov
lea
scas
scas
or
xchg
push
push
fs
inc
inc
adc
dec
imul
ljmp
setp
imul
ds
repz
rorb
jne
ror
mov
pop
fs
loopne
push
dec
lds
enter
lret
and
fdivrs
fdivr
xchg
mov
loop
test
rolb
cltd
push
fs
xchg
inc
sub
mov
rorb
movsb
ret
push
dec
fistpl
int
bound
and
aas
out
in
in
adc
push
jns
out
mov
mov
xor
shrl
imul
outsb
xlat
adc
jmp
sti
cmp
repz
int3
subb
inc
loopne
cltd
inc
jp
cmc
sbb
push
aaa
push
es
pop
jp
xchg
fisttpl
shrb
icebp
fwait
sbb
xchg
and
sub
push
cmp
test
dec
and
shrb
addr16
pusha
xchg
mov
mov
sbb
xchg
dec
xlat
push
fstp
inc
clc
mov
popa
pop
dec
sbb
sbb
out
mov
xchg
push
sarb
sbb
mov
mov
and
jae
adc
jge
and
xor
adc
xchg
mov
loopne
and
push
jge
inc
iret
mov
stos
inc
fimuls
es
mov
dec
icebp
jno
xchg
sbb
mov
cmp
add
inc
ljmp
je
cs
mov
sub
lret
cwtl
pop
xchg
mov
cld
fcmovnu
inc
jae
negl
cmovns
jne
inc
lahf
fbld
cmp
stos
and
inc
mov
idivl
adc
cmp
mov
js
leave
xchg
jmp
mov
push
mov
test
push
pop
push
jne
stos
mov
dec
outsb
push
mov
sub
int
pop
add
cli
cmp
adcb
mov
dec
mov
scas
icebp
mov
mov
xchg
mov
adc
or
dec
aam
mov
sbb
pop
or
push
lret
push
mov
fimull
mov
subl
out
lret
and
push
std
or
dec
or
xchg
fidivrl
repz
or
ja
hlt
pop
adc
lods
loop
in
clc
push
jns
xor
sbb
xor
inc
cld
push
xor
scas
les
mov
jmp
lods
int3
movsl
dec
sbb
fbstp
add
fstpt
mov
jb
cld
mov
inc
dec
sub
jno
notb
movsl
pop
xchg
mov
inc
push
lods
mov
and
pop
stos
cs
pusha
xlat
push
cmp
imul
sbb
push
push
aas
clc
adc
xchg
nop
notb
cs
add
xchg
mov
sub
loop
loopne
popa
data16
push
hlt
stc
mov
sahf
loop
xchg
cwtl
ret
jmp
xchg
arpl
pop
pop
jl
std
lret
cmp
sub
int
mov
xchg
loopne
ljmp
sub
cmp
fstpl
stos
lret
xchg
inc
sbb
cmpb
inc
add
loop
hlt
sub
mov
mov
in
in
dec
or
shl
xchg
push
dec
mov
xor
out
mov
stos
push
jmp
out
imull
in
jae
dec
cmc
pop
imul
pop
mov
sub
lods
jns
sti
cmc
in
adc
sbb
jnp
out
add
jne
sub
dec
adc
pushf
pop
inc
movsl
jp
jo
inc
or
pusha
aad
cmpl
out
inc
xor
or
arpl
fadd
mov
in
xor
or
aam
in
mov
jl
or
ret
out
mov
mov
stc
addl
ljmp
js
jp
and
mov
es
in
lahf
jns
xchg
jg
enter
add
mov
sub
mov
in
mov
pop
sub
push
test
push
jecxz
and
mov
cmp
popf
cmp
stos
pop
cmpsl
jae
fidivrs
jb
lock
aam
lods
xor
pop
and
dec
pop
in
push
cmp
sbb
data16
int3
stos
jns
outsl
int3
pop
mov
arpl
mov
out
repz
adc
test
pop
adc
jns
jge
movsl
gs
add
adc
test
adc
data16
lret
insl
sti
sub
push
jl
dec
jns
cld
loopne
jg
and
push
inc
divb
dec
idivl
cs
mov
arpl
sbb
ss
cli
jecxz
sahf
cmp
pop
enter
push
lds
jmp
mov
int
cmp
imul
clc
sub
loopne
inc
jns
stc
jle
adc
jb
pop
jb
mov
mov
push
aas
dec
xorl
cmp
push
sub
pop
push
jmp
aas
xor
jmp
dec
mov
popa
sbb
cld
xor
sbb
jp
push
sub
test
popf
xor
fstp
js
test
sub
cli
sbb
dec
insb
push
mov
sub
scas
adc
inc
xchg
inc
imul
sbb
testb
call
adc
mov
out
lea
loopne
das
push
addr16
les
cmp
pop
shr
jg
adc
aas
dec
int
insb
addb
hlt
aad
push
es
repz
aad
loope
and
mov
lods
std
mov
jae
int3
jae
clc
ja
loop
sbb
pop
xchg
mov
js
cmp
mov
leave
sbb
pop
ljmp
mov
psubusb
inc
imul
fldenv
rcl
mov
sahf
jno
test
pusha
fwait
test
push
dec
mov
inc
shrb
adc
dec
in
jne
jnp
push
push
sahf
data16
mov
clc
shl
sub
out
in
inc
dec
adc
nop
mov
push
rolb
test
xlat
clc
sub
and
out
adc
inc
int
and
mov
mov
and
gs
mov
subb
xor
or
add
mov
sti
lahf
dec
add
arpl
mov
and
jno
push
mov
in
movsl
cli
mov
jl
mov
push
sbb
movsb
push
add
mov
shll
adc
mov
pop
je
jne
or
inc
add
mov
sub
js
test
fdivr
sbb
inc
or
fs
pop
jae
stos
shlb
imul
cld
cmp
popa
jg
fildl
into
add
hlt
mov
inc
cmpsb
insb
nop
jns
sbbb
mov
push
mov
mov
jecxz
push
jmp
movsl
jg
sbb
es
popf
daa
in
mov
inc
add
cmp
push
enter
das
xchg
or
add
pop
xchg
aaa
xchg
xchg
call
sub
jle
in
into
movsl
xor
rol
adc
sti
faddl
out
sub
rorb
js
or
cltd
mov
xlat
xlat
push
clc
out
cmp
mov
test
in
add
xchg
scas
notb
mov
xchg
dec
sub
cmp
jnp
test
icebp
xchg
pusha
popf
sahf
in
negl
xor
fmuls
cmp
xor
and
jno
imul
push
add
into
jb
push
ret
out
fcmovbe
bound
or
add
adc
sbb
pop
mov
js
push
xor
gs
ss
call
loope
pusha
and
outsb
je
mull
lods
adc
nop
pop
push
jmp
mov
add
xlat
dec
scas
fs
push
out
test
adc
mov
sbb
dec
aaa
fdivrl
add
push
dec
mov
inc
fiadds
fisubl
inc
mov
or
dec
gs
dec
imulb
leave
sub
dec
or
mov
out
pop
leave
add
xchg
imulb
clc
xchg
test
sbb
cld
or
jecxz
sbb
cmp
mov
pop
jg
or
jo
xchg
mov
fisttps
mov
mov
in
nop
pop
adc
sarb
sbb
in
mov
push
xlat
dec
push
cmp
fists
daa
shld
mov
xchg
mov
xor
cmp
xlat
dec
shr
mov
lock
lcall
test
xorl
mov
pmuludq
es
inc
mov
sub
jne
sbb
add
pushf
adc
dec
test
push
ret
sub
jp
adc
add
pop
ss
mov
int3
lock
aad
out
sahf
negl
pusha
cmpsb
jo
rolb
adc
ret
cmp
push
outsb
sub
inc
jge
hlt
shl
imul
xor
lds
inc
mov
adc
insb
addr16
jae
cmpb
inc
mov
leave
inc
sbb
pop
test
sub
inc
xor
pop
jnp
aad
and
sub
or
rcrb
jo
inc
cmp
adc
clc
test
je
cmp
out
rcll
and
or
loope
dec
insb
inc
pop
xlat
or
lret
add
pop
ret
xchg
inc
data16
lcall
mov
test
cld
nop
call
scas
xor
inc
movsb
inc
pop
out
fcoml
fxch
fbstp
and
cmp
es
push
mov
clc
fsubr
repnz
mov
test
mov
jo
mov
inc
pop
and
add
inc
hlt
pop
sbb
add
xor
sub
sbb
add
sub
jns
sbbb
inc
pop
mov
inc
aad
mov
and
sarl
int3
in
pop
repz
enter
xor
mov
iret
xchg
mov
into
aad
repz
cmpsb
in
scas
cmp
push
mov
push
enter
jmp
or
xor
dec
jg
aas
andl
das
jge
xchg
imul
std
inc
adc
inc
or
mov
lret
and
sarb
cld
pop
mov
stos
and
scas
push
mov
pop
and
pop
lahf
push
fldcw
icebp
cmp
jge
inc
inc
push
movsl
std
jmp
cmp
mov
lret
push
mulb
xor
outsl
pop
addl
jge
push
imul
popa
or
addr16
imul
xor
add
aaa
pop
push
aad
xor
dec
cwtl
fcmovnbe
mov
lds
daa
sub
mov
sub
pop
pop
sub
xchg
fisttpll
imul
pop
imul
fucomi
das
lds
fdivs
xor
xchg
add
popa
adc
mov
jnp
xchg
jl,pn
push
push
xchg
out
sbb
add
pop
in
stc
mov
jnp
repz
sub
into
out
jl
push
fsubrl
fsubrs
call
add
dec
addr16
xchg
dec
inc
int3
pop
push
pusha
outsl
out
adc
jo
or
fmul
stc
rol
repnz
aaa
add
subb
out
out
cmp
mov
mov
fldcw
inc
mov
stc
je
pop
test
or
jne
iret
inc
pop
out
pusha
sbb
jnp
icebp
repz
into
sahf
into
sbb
and
pop
cmp
push
dec
or
or
jmp
sbb
push
xchg
fcmovb
movsb
test
inc
pop
arpl
mov
add
fcos
cmovnp
mov
popa
mov
lea
cmp
mov
fdivrs
mov
adc
dec
inc
ret
out
fwait
add
dec
mov
fildll
adc
test
dec
jne
outsb
jnp
sti
sbb
jmp
inc
mov
pop
negl
into
xor
shl
adc
mov
roll
jmp
stos
sub
xor
fcompl
pop
pushw
icebp
or
das
lahf
bound
jb
not
xchg
pop
push
out
jmp
inc
and
dec
cld
inc
dec
xorb
scas
scas
inc
push
out
mov
dec
rclb
popa
dec
add
call
or
lds
out
sub
stc
jbe
cs
jg
xchg
cmp
xchg
push
jg
dec
and
movsl
pop
int3
fisubs
frstor
popa
fisubrl
loope
xchg
jnp
mov
mov
xor
and
lods
popf
sarl
leave
mov
ficomps
int
mov
shrl
xchg
or
xchg
inc
dec
lock
dec
mov
inc
xor
lret
out
shlb
and
push
pushf
bound
mov
sti
arpl
adc
and
ret
clc
testl
or
fidivrl
xchg
sub
mov
add
js
and
repnz
je
mov
xchg
ret
cmpsw
inc
in
or
sahf
and
fisttps
pop
cmpsb
jecxz
ds
mov
and
push
lea
and
pop
cmp
incl
rcll
mov
cmp
hlt
addr16
xor
push
imul
fsts
mov
ror
xor
lret
pop
aad
rol
cmp
test
mov
mov
stos
mov
inc
and
lods
pop
or
xchg
mov
push
push
jbe
mov
mov
mov
xchg
lret
mov
sub
movsl
aam
int3
fsubr
mov
or
jge
ja
cmpsb
das
and
aam
dec
add
or
pop
cmpsb
arpl
pop
aad
dec
inc
fwait
adc
pop
mov
inc
mov
fistps
call
fisttps
fs
sbb
idivl
cmpsb
add
xchg
adc
pop
into
mov
xor
add
cmp
pushf
xlat
inc
sti
sti
sbb
push
outsl
mov
sbb
inc
sub
test
and
cli
sub
dec
add
push
add
rorb
gs
shlb
mov
sub
shl
pushf
pop
jbe
sub
lods
mov
jmp
cs
jno
xor
xor
ret
int3
stos
push
lock
add
pop
and
jl
jmp
xchg
sbb
mov
js
test
cmpsb
fstpt
stos
jmp
xor
mov
pop
mov
test
mov
mov
out
outsb
fwait
lahf
mov
lods
mov
out
sarb
bound
repz
mov
int
ss
pushf
arpl
and
sbb
jl
loopne
inc
push
das
movsl
jp
cmp
out
outsb
jne
cmp
test
add
inc
jno
jle
incb
bound
and
mov
inc
movsl
lea
lds
inc
mov
clc
cmp
cmp
cmp
rcrl
cmp
out
dec
dec
cmp
mov
ret
fildl
push
dec
xor
jmp
jo
outsb
sbb
lods
push
mov
xchg
icebp
gs
sbb
repz
dec
addb
mov
dec
aad
test
pop
sbb
lods
cmpsb
shr
jg
cli
rclb
test
cmp
xor
dec
inc
mov
fstl
scas
jge
push
daa
icebp
lds
ffree
cwtl
hlt
cmp
incl
add
ss
popa
cmp
insl
cmpsb
sahf
dec
xchg
lret
dec
shlb
lret
cs
hlt
outsl
cmovle
sbb
aad
fstpt
test
and
mov
pop
lcall
xor
xor
dec
sahf
aas
pusha
inc
icebp
xchg
pop
or
cmpsb
dec
push
imul
rcr
arpl
jae
shl
mov
cmp
notb
sub
mov
pop
push
enter
inc
add
jmp
cmp
mov
movsb
mov
jg
mov
inc
cwtl
mov
sahf
cli
add
out
mov
aad
in
dec
or
sub
addr16
inc
cltd
jnp
mov
es
xlat
mov
lods
imul
adc
setb
add
cmp
daa
test
ret
add
into
mov
jne
lret
test
sbb
insl
aad
gs
jb
stos
push
xchg
push
push
es
bound
mov
mov
loop
cmp
int3
and
fcoml
imul
mov
and
sub
dec
insb
cwtl
add
adc
add
pop
cmp
jge
shrb
cli
add
dec
icebp
mov
xchg
jl
cmp
fdivr
sbb
repz
repnz
pushf
rclb
and
ljmp
ljmp
or
mov
add
sub
out
adc
adc
nop
xchg
lods
mov
scas
push
xchg
sub
xor
imul
imul
in
jne
pop
xor
inc
leave
mov
adc
repnz
cmpsl
push
cmpsl
ja
adc
jb
lret
mov
xor
mov
inc
sbb
movsb
lret
inc
clc
push
data16
js
xor
scas
lds
js
bound
or
jl
sub
sbb
cmp
jmp
or
out
cmp
cmpsl
lcall
mov
aas
in
addr16
push
add
push
aaa
and
xchg
ja
imul
or
dec
ljmp
or
mov
lods
cmp
cmpsb
cmp
pusha
mov
mov
cld
test
or
test
in
jle
pop
lods
fs
jmp
popa
push
sub
sbbb
pop
lcall
mov
lret
out
push
sbb
or
out
inc
sbb
lods
pop
andl
fcompl
aas
jae
in
sub
popf
or
and
scas
and
add
pop
or
and
xchg
test
aas
and
lcall
dec
dec
mov
dec
and
xor
inc
hlt
pop
adc
sbb
xchg
push
fnstenv
imul
jge
jg
cmc
lcall
fmull
pop
xchg
int
jbe
jnp
repz
jns
jmp
cmp
mov
shll
jl
addr16
cwtl
xor
ljmp
sub
fdivrl
aam
lcall
in
inc
dec
ja
dec
jecxz
pop
xchg
daa
pop
adc
add
sbb
out
shlb
leave
ficompl
inc
mov
sbb
gs
mov
test
outsl
jne
rol
mov
sub
mov
add
popl
pop
push
sub
aas
jl
jl
dec
aaa
pop
and
fbstp
xchg
add
aad
cmpsl
jb
pop
push
dec
pop
cmp
lcall
xchg
outsb
xchg
fiadds
inc
gs
imul
dec
cltd
test
notl
ja
sub
js
jo
int
dec
mov
or
lahf
cmc
mov
call
jmp
repnz
pop
adc
add
jmp
sub
sbb
lret
sbb
shll
mov
jp
cmp
movsl
cmp
xor
xchg
mov
add
mov
cmpl
push
xchg
mov
sarl
jmp
inc
movsl
or
adc
gs
in
or
mov
fsts
inc
mov
ret
fisubl
xor
jno
imul
orb
mov
bound
iret
out
inc
loope
adc
in
sbb
jecxz,pn
fsubp
pop
addl
aas
xchg
mov
adcb
xchg
cmovns
out
add
jmp
orb
dec
cmpsb
jge
cmp
jne
mov
test
xlat
and
popf
rorl
mov
and
mov
dec
fildl
fldenv
cmp
fmuls
push
or
xchg
insb
dec
inc
ret
adc
sub
not
lret
add
fsubrl
adc
add
bound
jns
cs
pushl
add
adc
push
pop
nop
jo
test
mov
inc
arpl
and
out
and
adc
stos
test
sbb
popf
mov
push
ret
jecxz
or
push
adc
lcall
out
into
int3
test
popf
dec
int
xchg
dec
ss
xor
ret
inc
ds
ja
pop
dec
xor
in
bound
icebp
pop
ret
push
mov
fucomip
sub
popa
out
fwait
dec
test
jo
leave
popf
pop
jno
imul
xchg
push
ficomps
rcrb
push
aad
lea
xor
sbb
std
sbb
js
outsb
jae
mov
jle
jl
lahf
add
into
lea
je
xchg
jmp
dec
cmp
bound
jno
ficomps
ror
sub
cmpsl
xor
vpaddusw
mov
xchg
lock
adc
sbb
sub
sub
push
mov
jge
mov
dec
add
and
fimuls
mov
psrlq
out
mov
sub
pop
sub
lea
mov
and
fstpl
sbb
xor
test
push
divl
sub
mov
adc
dec
nop
cwtl
mov
xchg
out
decb
xchg
push
mov
sub
lds
je
push
sub
pop
ret
fnstcw
fldt
jl
push
pop
mov
loop
push
push
sarb
leave
mov
xor
into
lret
cld
ret
dec
adc
jo
das
mov
icebp
mov
aad
sbb
out
lds
and
lahf
xchg
bound
pop
ret
inc
cmpsb
jae
or
int
inc
repnz
sub
push
sarb
mov
ja
push
hlt
jle
lods
mov
std
scas
ja
push
stc
mov
sub
lcall
mov
push
rorl
push
lods
lds
dec
mov
push
test
jle
xchg
scas
cli
roll
sarb
jmp
xchg
jo
pop
mov
mov
popa
and
mov
int3
aad
daa
xchg
pusha
adc
sbb
pop
adc
dec
push
iret
mov
pushf
mov
mov
or
add
push
call
stos
mov
xchg
mov
mov
shrb
cmpsb
stos
add
aaa
call
enter
or
push
cmp
cmp
inc
popl
inc
cmpsb
mov
andb
shlb
push
pop
jmp
push
in
lods
ljmp
repz
cli
sub
call
nop
push
mov
cli
test
cmp
scas
xchg
adc
loop
xor
xor
fistpll
repnz
lret
pop
dec
adc
adc
fdivrs
repnz
cli
jl
aam
movsl
lock
push
pop
call
lcall
mov
data16
aas
int3
addr16
nop
in
pop
pop
movsb
lods
cmp
fiadds
pop
and
dec
or
cmpsl
mov
cli
orl
leave
rorl
mov
mov
push
loop
out
sbb
push
arpl
add
ficoms
cli
rclb
scas
xor
mov
xchg
push
out
inc
xchg
push
lock
repnz
movsl
lahf
addr16
cmp
or
mov
incb
imul
ret
sbb
cmp
subl
xchg
out
ja
jb
push
mov
fnsave
xor
mov
int
pop
fnsave
jnp
sbb
pop
mov
inc
fidivl
mov
pushf
cmpsl
sahf
cmpl
xchg
pushf
pop
aas
sub
xor
out
cmp
xor
xchg
xchg
call
roll
xor
ror
outsl
cmp
cmp
push
pop
dec
stos
lods
jbe
xorb
jnp
jl
sti
push
and
inc
push
jp
mull
mov
imul
jg
pop
ja
sahf
bound
pop
pushf
add
adc
aaa
iret
fisttpl
mov
push
inc
mov
testl
mov
xchg
imul
mov
or
nop
ja
mov
fnsave
pop
sbb
data16
call
into
add
js
mov
movsl
fmuls
dec
pop
test
add
mov
fsubrl
rcrl
inc
xor
loope
subps
test
sub
aam
cmpsb
das
sub
outsb
sahf
scas
imul
cmc
lret
fimuls
scas
adcl
dec
lock
daa
add
add
idivb
cmp
mov
mov
add
call
cltd
ds
jecxz
call
jecxz
pop
xchg
scas
int3
push
outsl
pop
push
pushf
orl
jle
xchg
and
fildl
nop
add
pushf
cwtl
jae
xchg
jne
adc
push
enter
stos
xorb
pop
fisttpll
jecxz
lds
lahf
pop
loop
sub
stc
xor
xchg
movsl
or
idiv
sbbb
jge
lods
sbbl
out
out
add
jle
mulb
dec
movups
dec
pop
sub
popa
nop
adc
or
dec
jle
inc
inc
mov
jno
repz
xchg
mov
test
mov
inc
jmp
sbb
cmc
mov
push
lock
lock
iret
mov
push
lcall
jl
mov
dec
ljmp
in
or
push
mov
int3
add
xchg
add
xchg
hlt
cmpsb
frstor
pop
int3
pop
lds
loop
sbb
out
cld
dec
shll
out
das
and
adc
sti
adc
shll
xchg
push
int3
popf
repnz
rorb
addr16
insl
mov
mov
pushf
sti
test
js
cs
ds
pusha
loop
jmp
mov
cmc
loope
or
dec
roll
mov
mov
shlb
fwait
enter
add
and
scas
adc
test
repnz
push
jbe
aad
aam
jb
fs
and
pop
mov
cmp
sbb
cltd
xor
cs
mov
inc
mov
pusha
shlb
xchg
sbb
mov
jns
popa
roll
pop
pusha
ja
and
or
sbb
test
push
mov
jno
inc
push
loope
mov
dec
lds
in
inc
ret
mov
decb
jl
sbb
rorb
xchg
inc
jle
sub
mov
aam
xchg
test
sbbl
jne
cwtl
dec
ficoml
sub
mov
sbb
adc
xchg
or
adc
or
cli
jp
push
inc
dec
cld
or
adc
cmc
mov
fiaddl
mov
add
push
mov
lret
cmp
xchg
scas
inc
int
shrl
push
stos
fwait
int3
bound
aaa
dec
and
dec
les
inc
pusha
aaa
mov
inc
lods
arpl
daa
jp
fmuls
js
int3
cs
andb
pop
fs
incb
mov
mov
ds
mov
adc
and
lock
iret
cli
xor
and
outsb
adc
jl
std
mov
js,pt
hlt
add
andl
push
cmp
fnstcw
push
xchg
cmc
and
sbb
lret
adc
int
adc
push
bound
and
cmpsl
lret
rcl
xchg
in
and
out
jno
ds
arpl
cmc
jb
jp
xor
xchg
adc
aaa
cmp
pop
sub
inc
jo
jns
es
testb
fcoms
jmp
jg
cmp
scas
push
mov
mov
adc
mov
aas
pop
addb
sbb
aam
out
sub
icebp
or
jge
push
sahf
dec
inc
fdivrl
stc
sub
loopne
sub
xchg
fldcw
xor
jge
jns
scas
xchg
xor
enter
cmp
out
lret
dec
popa
test
lods
mov
adc
je
std
mov
gs
push
pop
mov
push
into
sbb
mov
or
sbb
push
pop
aaa
push
int
cmp
mov
lods
add
lret
or
cmp
cmp
push
mov
mov
adc
add
cmc
xchg
int
xchg
fisttpl
cmp
xchg
aas
das
and
mov
mov
xlat
inc
fs
push
mov
jl
rcl
arpl
cwtl
rorb
sub
push
pop
xor
loop
and
adc
scas
int
dec
loopne
or
scas
jmp
mov
ret
xchg
mov
push
mov
xchg
cmp
jbe
inc
shrl
cmpsl
fcoml
jno
lcall
sti
test
push
clc
dec
je
jo
xchg
mov
pushf
inc
aaa
bnd
mov
dec
or
dec
andb
or
jo
xchg
repz
fstps
fstpt
out
adc
aad
mov
jns
push
sahf
jp
fidivl
adc
scas
pop
mov
xor
lods
push
pop
dec
mov
cmp
sbb
rcrl
mov
addr16
xor
adc
rcr
push
sub
adc
or
jne
jns
aam
push
mov
sahf
addr16
pop
jae
subb
cmp
in
sub
ret
pop
xchg
pop
jmp
fdivl
sub
pusha
lcall
clc
mov
fnstsw
mov
and
mov
out
push
jae
lcall
loopne
out
pop
test
js
sub
mov
hlt
rolb
arpl
mov
bound
pop
push
ja
test
and
pop
movsb
mov
push
loop
inc
iret
mov
popa
rorl
pop
sub
xor
test
adc
movsb
or
fdivs
ret
cmp
xor
adc
daa
jg
das
int3
dec
push
mov
xor
movsb
andb
pop
xchg
fiadds
mov
repnz
addl
push
lds
xchg
out
outsb
push
mov
jp
sub
dec
in
fidivrl
xchg
aam
mov
xchg
jg
pop
push
and
jb
movsl
mov
js
xchg
sub
icebp
aad
fistps
scas
and
and
sbb
inc
fwait
mov
jle
dec
jbe
es
sub
xor
in
repz
daa
iret
les
scas
in
cmpsb
mov
movsl
andb
pop
or
push
hlt
orl
jne
push
cltd
fsts
in
sub
cmp
sub
inc
fdivrl
xchg
mov
mov
cwtl
lea
sub
sbb
es
jo
orb
push
mov
cli
hlt
jnp
pop
inc
data16
mov
mov
adc
pop
imul
stc
pusha
out
or
adcb
shrl
push
sbb
push
movsl
out
sbb
xor
and
pop
jle
test
cmp
subl
clc
leave
and
sbb
mov
pop
fcomps
popf
jp
sbb
adc
xchg
or
jge
dec
sub
aam
add
insl
mov
mov
xor
mov
out
inc
cmpsb
testb
jmp
push
mov
jnp
das
outsl
lret
ret
add
leave
into
jae
inc
add
imul
or
and
push
jae
jl
push
and
mov
in
faddl
inc
mov
xor
cmp
ffreep
shll
push
test
jno
add
mov
add
push
adc
mov
arpl
push
or
popf
xchg
xor
pop
push
and
jno
cmpsl
jg
or
fs
loopne
inc
xor
cmp
in
pushf
mov
ds
lods
fwait
cmp
jae
pushf
in
xorl
xchg
jge
cmp
lret
faddl
inc
xor
rolb
shlb
ret
subb
add
mov
cmpsl
cmp
dec
pop
jge
mov
sti
fstpl
bswap
imul
cmp
mov
sbb
sub
imul
sub
or
in
in
pop
jmp
addl
adc
mov
mov
insb
xor
lret
jl
sub
in
jl
xchg
mov
jae
add
mov
rclb
and
pop
cwtl
cmp
arpl
xor
sub
add
sub
sub
jae
fistpl
adc
jno
dec
xor
dec
lods
jmp
cltd
mov
std
popf
dec
div
arpl
sub
push
stc
in
push
sti
pop
loope
pminub
pushf
int3
shlb
lock
iret
xor
xchg
aam
in
cld
outsb
cmp
xchg
mov
pusha
cmp
imul
jecxz
jns
dec
stc
mov
jnp
adc
xchg
mov
imull
sub
hlt
pop
fldenv
push
mov
out
rcll
xchg
inc
and
mov
dec
fbld
mov
push
push
pop
xchg
xor
lds
cwtl
push
xchg
fnstcw
fdivp
inc
or
test
in
rolb
mov
loopne
inc
inc
ss
adc
sbb
imul
push
daa
in
jp
and
sbb
xchg
lods
ret
addr16
cmpsl
push
fcmovnu
mov
and
adc
or
aam
mov
xorb
pop
movsl
xchg
cmpsb
cmp
orb
push
adc
sbb
mov
xchg
shll
inc
mov
je
push
xchg
rcr
push
fdiv
adc
movsl
aam
jp
nop
test
xchg
es
sub
fisttpl
jp
lds
push
into
mov
mov
inc
or
xlat
in
add
mov
jmp
sti
push
xchg
mov
call
sub
das
sbb
div
pop
in
test
xchg
or
sub
cmp
push
dec
or
cmp
xchg
gs
movsl
cmovbe
mov
mov
jl
ret
dec
mov
jp
add
sub
iret
shlb
sti
aaa
mov
jne
imul
mov
rorl
pop
leave
scas
jno
rcrl
arpl
pop
pop
jmp
cmp
jno
jmp
into
mov
mov
stc
mov
test
stos
int
fnop
xor
ss
xor
sub
xchg
out
jne
mov
cmp
arpl
dec
inc
cmp
and
push
pop
sarb
inc
push
mov
aad
scas
xchg
dec
pop
sub
inc
ss
sub
std
adc
outsb
adc
or
mov
pop
push
insb
stos
shlb
fsubs
xorl
sub
fimuls
ret
and
sarb
adc
lret
sbb
push
add
imul
mov
jo
loop
movsl
shl
ret
xchg
add
lods
sub
xchg
idivb
andl
dec
ret
pop
cmp
cwtl
jb
fwait
and
stos
add
dec
sarl
push
xchg
and
daa
adc
cmc
or
sub
push
jo
scas
xor
add
aam
hlt
xor
outsb
in
mov
lds
inc
lahf
xchg
add
jo
mov
mov
lahf
test
lahf
jl
inc
mov
cmp
mov
and
lcall
jmp
jbe
push
scas
stos
sarb
movsb
pushf
or
push
mov
in
addr16
pop
sbb
mov
andb
pop
hlt
stc
outsl
jge
xor
lock
mov
nop
int
sbb
lds
adc
dec
sbb
std
ficoml
jl
inc
into
lock
mov
mov
imul
notb
add
fildl
movsl
into
jle
sahf
or
out
mov
lods
ficompl
popf
cmp
dec
rcll
sub
addr16
in
push
adc
pop
pushf
fsubrs
insl
mov
sahf
cld
inc
jne
stos
icebp
testb
insl
cmp
xor
mov
cmp
cld
loopne
xor
push
and
sbb
sbb
sbb
rcll
sbb
lods
or
jne
dec
ss
repz
pextrw
push
xor
jbe
inc
clc
dec
push
popa
fcmovu
ja
shrb
daa
xchg
and
xchg
aas
mov
test
sub
mov
dec
cs
mov
xor
iret
aaa
int3
inc
je
mov
xchg
sbb
leave
sub
or
loope
inc
mov
xor
jb
repz
out
cmc
mov
stc
adc
and
repz
mov
imul
out
mov
push
or
mov
xchg
cmpsl
hlt
call
cmp
fldl
or
daa
hlt
leave
sub
mov
inc
loopne
or
add
cmp
xchg
bound
inc
mov
iret
cwtl
dec
jmp
pop
and
or
cmp
pop
jno
es
jnp
and
xchg
and
adc
mov
out
stc
lret
and
cmpsl
add
shll
ficoms
or
in
xchg
sbb
pop
sub
lock
sub
and
jb
push
out
lods
mov
das
mov
pusha
pop
push
add
fcmovnbe
jp
dec
idiv
pop
mov
xchg
mov
pushf
sahf
clc
or
pop
jmp
pushf
lcall
fimuls
icebp
mov
xchg
push
sbb
aas
xchg
inc
push
and
fdivp
xchg
rorl
nop
add
xchg
pop
mov
or
cmc
sbb
enter
lret
dec
pop
add
pop
xor
dec
ffreep
jns
dec
lahf
sbb
ljmp
or
cmp
jno
push
mov
push
and
sarb
fucom
sub
std
aad
cmc
xchg
mov
adc
sub
stos
add
push
scas
dec
push
jnp
xchg
sub
or
pop
jno
push
pushf
repz
cmpsb
pop
sub
in
push
cmp
adc
ss
mov
mov
shll
xchg
in
cmp
xor
and
push
mov
movsl
and
xchg
aam
repz
add
dec
sbb
sub
sbb
movsl
mov
inc
push
repz
push
aas
cmpsb
xchg
cld
mov
cmp
cwtl
push
mov
xchg
add
inc
or
test
cs
xor
pop
push
clc
push
jnp
daa
fwait
dec
bswap
shlb
stc
cltd
pop
fisubl
mov
lods
in
scas
push
lods
fisubrl
sub
lret
jns
pop
push
sbb
add
xchg
sbb
loope
leave
ds
enter
ss
or
sbb
adc
scas
mov
mov
mov
cmpsl
cmp
in
cmp
cmp
stos
outsl
dec
sub
iret
add
pop
dec
repnz
add
push
fcoml
and
sbb
jle
inc
das
adc
pusha
or
adc
in
test
xor
adc
pop
jno
xor
mov
inc
xchg
sbb
cwtl
jbe
fimuls
xorl
aam
dec
cltd
imul
mov
push
mov
add
push
movsb
icebp
cmp
fdivrp
inc
fwait
mov
mov
add
fidivl
pop
adc
xchg
jecxz
es
out
inc
mov
xchg
call
adc
dec
jae
ja
mov
or
ror
insl
inc
ret
ljmp
test
lret
pop
or
insl
icebp
inc
dec
sbb
sub
sbb
mov
sbb
push
dec
inc
jnp
xchg
push
call
push
outsl
lcall
in
add
js
sarb
inc
movsl
testb
ss
jmp
dec
enter
mov
sub
and
lds
lods
inc
cmc
sbbb
ljmp
scas
add
add
cmpsb
fwait
lcall
xor
and
imul
mov
adc
inc
insb
add
fwait
cld
and
loope
pusha
andl
sub
cmp
inc
push
outsb
inc
push
add
daa
mov
mov
ds
sub
pop
pop
mov
and
mov
cld
insb
inc
lret
bound
aam
push
jp
dec
adc
xor
ja
xchg
movsl
cmp
movsl
cmp
mov
pop
cmpl
xchg
imul
mov
push
push
mov
and
lods
mov
pop
notb
jns
lods
push
pop
jle
fbld
fildll
out
jo
imul
out
fadd
rcrl
insb
lahf
push
ror
orb
mov
pop
dec
sbb
xor
mov
jecxz
test
cmp
jo
nop
shlb
clc
nop
dec
outsb
and
xlat
cmp
add
in
in
add
mov
cwtl
data16
sbb
int
repnz
out
imul
mov
js
stos
adc
cmpsb
cmp
je
adcl
outsb
jecxz
cmp
sub
repz
scas
repnz
push
stc
cmp
sbbb
clc
mov
mull
dec
mov
ss
cmp
lods
cmpsl
add
dec
insb
stos
into
pop
inc
mov
xor
stos
out
pcmpgtd
mov
jno
ja
sbbb
cmp
aam
andb
and
xor
push
cmp
test
int3
cld
js
mov
out
in
cmp
jae
xchg
jae
sub
inc
xchg
mov
sub
pop
xchg
or
lock
fnstcw
sub
loopne
xchg
push
push
push
shrb
sub
dec
jb
cmc
jns
cmpsl
adc
adc
xchg
dec
mov
js
out
xchg
add
mov
scas
mov
pop
mov
repz
aam
mov
adc
aas
and
cmpb
lahf
imul
push
push
mov
decb
or
lods
movsl
mov
and
push
push
test
sbb
push
test
in
ret
inc
lcall
fadd
adc
mov
and
je
add
add
mov
mov
mov
loop
hlt
ror
out
stos
rcrb
sub
fcmovnb
xchg
add
test
adc
mov
jle
popf
adc
das
out
sbb
pushf
or
push
ficompl
out
ja
loope
mov
xchg
sub
add
movsl
daa
inc
ljmp
shll
xchg
adc
jne
adcb
inc
sbb
aad
cld
es
xor
push
push
push
std
out
and
push
sub
pop
leave
pusha
dec
mov
cltd
pop
mov
mov
jns
daa
sub
xor
aam
daa
push
popf
andl
push
xchg
lret
ljmp
outsl
xchg
sbb
aad
rcll
into
mov
adc
push
jmp
lods
push
in
dec
fcom
pop
add
lret
test
addr16
sub
add
fwait
scas
call
mov
mov
push
int
ret
add
insb
mov
jae
leave
cmp
fsubr
push
pop
in
sbb
mov
iret
cmpl
xor
push
out
inc
aam
push
jle
or
mov
das
outsb
mov
sahf
mov
sbb
and
push
xchg
cmp
pop
ja
pmulhw
cmpsb
mov
inc
mov
pop
into
mov
add
pushf
sbb
cmp
jae
lea
jbe
xor
scas
rclb
add
cltd
jns
jno
cwtl
nop
push
jo
shll
adc
dec
in
adc
lret
je
sahf
sti
js
xor
mov
insb
push
pop
stos
xor
pushl
iret
sub
mov
test
or
loop
lcall
jmp
sbb
jg
and
cwtl
push
dec
inc
test
ror
or
addr16
inc
and
push
popf
inc
gs
sub
idivl
jge
xor
lahf
ss
and
adc
jge
push
and
test
pop
dec
pop
mov
imul
inc
pop
dec
xor
insl
sahf
cmpsl
out
mov
xchg
jge
nop
xor
out
add
dec
les
jno
adc
inc
xchg
add
mov
mov
ds
out
and
xor
mov
clc
adc
data16
lods
xchg
or
bound
aaa
jb
das
cltd
loop
mov
add
aad
xor
push
dec
loope
push
add
sbb
enter
out
mov
add
add
jmp
cwtl
out
jae
int3
mov
es
mov
jmp
lahf
inc
adc
cmp
js
xchg
sbb
adc
outsb
enter
pop
dec
pop
jno
fimuls
cmpsl
jo
aaa
push
inc
cmp
jl
push
stc
mov
add
loop
adc
dec
pushf
popf
clc
or
rcll
test
movsl
jnp
fcoml
inc
xor
cmpsw
mov
adc
loop
jb
out
pop
leave
mov
pop
cwtl
rol
cmpb
sbbb
out
rorl
cmp
add
mov
pop
test
xchg
das
outsl
or
ror
jno
sbb
aas
sbb
test
jne
pop
int3
aad
lods
dec
pushf
sub
cmp
scas
push
dec
mov
jmp
adcb
xor
and
stos
mov
sbb
fcmovnu
mov
jno
pop
aas
inc
cs
cmc
into
dec
and
pop
mul
fucomip
jbe
mov
sbb
inc
xor
xor
cmp
cmpsl
cmpsl
fsubrl
call
mov
xchg
shll
int3
leave
xor
mov
dec
mov
and
fdivs
mov
jge
inc
out
xchg
rorb
rol
push
mov
loopne
jb
stc
data16
dec
sub
dec
std
sarl
rolb
sub
xchg
xor
movsb
or
inc
sub
mov
inc
in
xchg
inc
jns
out
je
jbe
mov
push
cmpsl
shl
out
popa
stos
nop
mov
fisttpl
adc
mov
outsb
aad
dec
xor
push
popa
in
mov
rclb
pop
add
movsb
jmp
sub
ja
inc
xlat
out
push
mov
imull
test
filds
mov
add
cmpsl
mov
cmp
xlat
into
mov
aas
xchg
stos
repnz
add
lods
ret
jae
mov
sub
jae
or
in
je
cld
jo
add
lcall
or
push
shlb
es
jl
shlb
cmp
rcll
mov
and
adc
pop
push
mov
mov
adc
movl
xchg
in
xor
pushf
scas
xlat
scas
mov
aam
mov
orl
imul
xchg
sbbb
repnz
adc
push
out
test
pop
add
xchg
sahf
pop
std
mov
xchg
into
mov
cwtl
inc
sbb
ret
ret
imul
cmp
dec
adc
aas
scas
call
sub
or
insl
add
jle
rcl
rcrb
fstpt
or
sub
and
shll
lret
push
enter
lret
sub
cmpsl
pop
sub
lcall
das
mov
jmp
sub
adc
dec
sbb
cmpsb
mov
mul
pop
xchg
cmp
test
mov
or
stos
dec
cmp
addr16
xor
xor
sarl
pop
cmp
xor
aam
cli
lods
jl
push
sbb
lret
or
pop
sbb
lds
lea
add
lret
jmp
mov
inc
and
push
dec
or
clc
or
sub
and
pop
and
mov
shrb
outsb
sbb
int
sahf
je
adc
mov
push
cmpsb
and
mov
dec
mov
dec
pop
mov
mov
pop
iret
add
idivl
xor
adc
jecxz
cmp
xchg
cs
pop
lret
and
inc
int
fisttpl
or
sub
inc
lods
xchg
mov
ja
imul
cmpsl
sbb
cmp
pop
jle
cmp
aas
adc
jb
test
bound
adc
mov
push
cmp
ret
dec
aas
push
mov
sarl
fdivrp
movsl
fsts
in
ret
std
mov
out
pop
cmp
sub
jne
cld
outsb
inc
js
xchg
and
pop
sbb
sub
outsb
test
enter
or
push
xor
xorb
push
cli
dec
jnp
dec
popa
dec
leave
jne
je
mov
das
inc
mov
lret
lock
std
dec
popa
test
jecxz
ljmp
cmpsb
xchg
xchg
das
push
cmc
dec
mov
add
mov
out
sarl
sub
dec
mov
mov
les
popf
out
dec
cld
xchg
mov
and
cmp
jmp
cltd
inc
push
jmp
iret
sbb
das
in
mov
lods
or
sbbl
jmp
and
loopne
push
ss
jnp
mov
adc
add
lods
pop
idivl
inc
adc
scas
xor
mov
adcb
repz
dec
cmp
call
pop
mov
sub
mov
in
into
sbb
xor
lock
repnz
pop
or
loop
xchg
mov
fldl
aas
loope
ret
dec
mov
aad
lods
inc
nop
in
dec
test
mov
test
das
fwait
clc
lds
ror
adc
adc
negl
mov
icebp
outsl
and
pop
mov
mov
sbb
pop
and
pop
mov
pushf
outsl
adc
movsb
mov
adc
movsb
lret
fistl
shr
and
jp
jae
loop
cmp
testb
clc
ficoml
xchg
popf
inc
mull
cmp
jno
add
test
jmp
inc
ds
enter
loope
sti
imul
fidivl
push
bound
popl
adc
mov
dec
subl
mov
inc
xchg
lods
movsb
push
xchg
ds
lods
mov
ja
lret
sbb
roll
mov
clc
or
inc
xchg
bound
cmp
jae
mov
stos
inc
inc
cld
jne
popl
mov
or
xor
dec
movsb
addr16
pop
add
mov
out
out
ljmp
sub
mov
pop
pusha
hlt
aad
xor
fisubs
mov
fnstenv
nop
push
sarl
shlb
and
orb
mov
inc
lret
add
ret
pop
or
test
mov
idiv
sahf
fcomp
jge
shlb
ljmp
mov
imul
push
cltd
or
dec
mov
test
adc
and
push
lea
lock
testb
dec
or
or
dec
jne
jb
inc
xchg
pop
push
jbe
add
test
jnp
jle
loop
xchg
int3
and
xchg
je
fs
lock
das
inc
outsl
lods
add
gs
jg
or
push
mov
sbb
sar
mov
inc
cmpsb
outsb
ja
mov
gs
pop
xor
adc
es
std
cmovl
cmp
push
stos
mov
mov
loop
xlat
dec
pop
fisttpl
subl
mov
movsb
loop
jge
lcall
jg
mov
sub
xchg
ja
and
jecxz
or
add
xchg
push
imul
ja
cmp
mov
xlat
or
imul
mov
inc
pop
mov
rcrb
movsb
dec
dec
xchg
fwait
lcall
inc
movsb
lods
lret
sbb
cld
out
mov
jmp
inc
push
jno
sbb
sub
ret
testb
cld
pop
rorb
cmp
test
jg
dec
into
sub
bound
adc
out
xorb
insb
adc
aaa
sub
ret
pusha
adc
in
mov
mov
dec
and
lret
stos
je
lahf
data16
ret
lock
sub
push
mov
sub
mov
ja
mov
hlt
mov
jmp
into
pop
stc
sbb
mov
sub
call
arpl
cmp
lret
xlat
incl
push
mov
jb
push
fstps
ret
fwait
add
lret
shl
inc
arpl
int
adc
loope
ss
pop
jg
mov
loope
inc
frstor
jp
insb
push
jmp
cmp
dec
push
mov
inc
mov
mov
jg
add
dec
imul
mov
cmpsl
push
ficomps
and
inc
ret
cmpsb
mov
rclb
fwait
pop
out
dec
popf
sbb
subb
subl
mov
mov
xchg
jle
enter
pop
int
xor
or
mov
cs
and
jo
push
lea
fisttpl
pushf
cmp
dec
and
nop
dec
sub
loope
jae
dec
lahf
dec
sub
add
inc
jl
xchg
aas
mov
mov
mov
inc
push
fwait
lods
add
stos
push
sbb
flds
adc
mov
fidivrs
fistpl
fcmove
push
add
or
dec
scas
rolb
xchg
stc
es
shrl
dec
popa
lret
fiaddl
jle
xor
add
subb
or
out
dec
shl
inc
icebp
pop
adc
in
jle
dec
scas
shr
sbb
cmpsl
gs
jp
xlat
xchg
jne
or
nop
pusha
sahf
inc
leave
div
or
push
adc
and
mov
lea
fdiv
daa
push
mov
mov
cmp
popf
ret
stos
xor
test
movsb
lcall
mov
std
mov
stos
dec
sbb
mov
mov
repz
aaa
addr16
sbb
add
les
xor
sub
in
xor
and
adc
aam
aas
mov
mov
push
jno
in
sub
adcb
or
stos
pop
ret
in
dec
inc
and
repnz
mov
sbb
sbb
inc
xchg
cmp
add
test
mov
iret
in
dec
adc
mov
mov
fists
jnp,pt
aaa
push
ss
or
lcall
jbe
xchg
adc
adc
xor
bnd
es
dec
sbb
jnp
jecxz
mov
insl
insb
aas
xchg
add
mov
mov
iret
lods
mov
fidivrl
gs
inc
xor
aas
sub
add
stc
mov
push
jmp
cmp
jbe
mov
mov
dec
dec
or
push
xor
jecxz
and
push
ret
cmp
jge
out
imulb
or
lcall
fs
push
add
pusha
cmpsl
cli
imul
push
lret
addr16
xchg
daa
inc
cs
js
arpl
and
add
cld
mov
jp
out
into
fs
adc
jbe
test
jmp
jle
cld
cmp
mov
out
ss
and
outsb
mov
cmp
dec
cli
scas
jge
sbb
cmp
or
leave
sub
or
xor
dec
add
lods
scas
lret
outsb
and
pop
xor
mov
jo
and
push
adc
sub
arpl
mov
cmpsl
aad
mov
sub
test
mov
addb
out
dec
scas
dec
leave
xchg
add
in
and
mov
or
mov
pop
je
inc
orl
jns
push
sub
ja
xor
fadds
inc
in
adc
rolb
mov
lods
jne
adc
xor
inc
jno
or
enter
cs
insl
lods
cmp
in
andb
mov
lret
loopne
jge
imul
aas
mov
mov
mov
aam
fsubl
js
xchg
xor
pop
int
jb
mov
popf
mov
out
xlat
sub
imul
push
cld
push
iret
push
and
mov
cwtl
inc
imul
out
fs
sub
repnz
sub
outsb
mov
push
shlb
or
xchg
push
cld
xchg
adc
jmp
fldt
mov
sub
lcall
sbb
rolb
push
out
xor
xchg
pop
jns
pop
aaa
xor
sub
inc
movsb
test
mov
cwtl
cmpsb
mov
ja
pusha
es
imulb
add
jae
xchg
js
push
lock
std
xchg
insb
mov
cltd
lahf
pop
int
mov
cmp
ret
adc
arpl
cwtl
daa
fwait
xchg
mov
fsincos
clc
lahf
push
sub
jnp
test
pop
push
cli
mov
adc
cmp
xchg
loopne
jp
nop
pushl
scas
imul
leave
rolb
out
imul
push
fcompl
or
ds
jne
arpl
jmp
xor
and
movsb
testb
xchg
xor
push
les
imulb
push
mov
test
es
mov
push
data16
adcl
pop
loope
cmp
fs
lds
fdivl
into
and
adc
ljmp
sbb
dec
adc
or
mov
and
lahf
out
jae
mov
push
inc
stos
adc
fwait
es
lahf
adc
add
mov
and
sbb
and
inc
shrl
xchg
les
and
lods
inc
popa
insl
test
mov
lcall
xchg
add
into
dec
stos
xor
sbb
xor
or
inc
loopne
jmp
aad
mov
jne
dec
mov
xchg
or
test
xchg
lea
repnz
mov
shl
cli
repnz
fcompl
hlt
jle
fcmovu
adc
xbegin
jno
scas
cmp
adc
cmc
mov
xor
daa
or
xor
jmp
mov
adc
inc
int
mov
ss
or
and
push
lea
cmp
inc
imul
stos
mov
shr
sbb
push
imul
aas
lret
inc
push
xor
cmp
fwait
in
jbe
mov
sub
dec
lock
and
jns
mul
shrb
popf
inc
fisubl
jmp
or
lahf
daa
imul
cwtl
xlat
test
das
fldt
dec
push
arpl
cmc
ljmp
in
mov
gs
jb
dec
add
cmp
ja
or
xlat
int
divl
insl
in
pop
pop
pop
jbe
repz
loopne
loope
jae
jle
in
cmpsb
push
xchg
sbb
push
sub
aas
test
jo
mov
or
dec
push
jns
call
dec
push
hlt
mov
push
jb
mov
or
mov
xchg
addl
cmp
sti
jae
cmp
andl
sub
das
lea
je
xchg
jle
and
inc
jge
in
xlat
fwait
rcll
aas
add
sbb
imul
dec
repz
inc
jae
xor
xorl
les
jle
adc
dec
popf
sbb
add
js
mov
sbb
ja
pop
movsl
test
cli
cld
jp
fdiv
aad
jns
lret
push
inc
cmpsb
ljmp
dec
divb
arpl
enter
add
icebp
mov
inc
or
into
movsl
fmull
cltd
lea
emms
pop
push
jg
cmp
and
adc
jb
in
and
mov
in
nop
inc
loope
ret
inc
sub
sbb
pop
fdivs
scas
jne
fucomi
sbb
out
add
xor
daa
jle
inc
iret
sub
inc
aam
int
scas
cwtl
xchg
xor
js
ja
jno
mov
xor
xor
pop
ds
shrl
adc
pop
fstps
lods
fisubl
pop
imul
jp
aaa
xchg
frstor
shrb
sbb
cwtl
rol
xor
jg
mulb
hlt
sub
mov
dec
mov
cmp
outsl
aas
mov
mov
js
inc
sbb
sbb
pause
cmpsb
lock
sti
sbb
adc
je
ret
mov
cmpsl
outsl
imul
jmp
enter
xchg
push
push
repz
inc
add
ljmp
cmp
xchg
ret
push
ret
mov
sbb
movlhps
inc
sbb
xor
loopne
not
pop
inc
mov
adc
jp
and
and
sbb
shlb
idivb
dec
mov
pop
sub
mov
scas
arpl
mov
outsb
mov
sub
icebp
cmp
mov
xchg
ret
aad
or
cld
mov
int3
mov
jl,pn
loopne
notl
add
lahf
loope
lds
das
cmp
mov
addb
ret
xor
sbb
add
stos
in
icebp
arpl
mov
pop
xorb
and
fcoml
jge
xchg
push
fistpll
add
ljmp
icebp
scas
loop
nop
ret
into
call
jle
push
fisubl
call
roll
mov
pop
inc
xchg
cwtl
xor
out
adc
fs
or
imul
pop
sbb
push
or
push
adc
sbb
movsl
mov
cli
sbb
mov
mov
cwtl
int3
jns
sbb
aam
ret
divb
push
jnp,pt
sahf
sub
sub
lcall
push
mov
ja
imul
ror
push
arpl
dec
mov
cli
mov
ja
in
pop
stc
pop
mov
jnp
cmp
mov
mov
push
sbb
cs
dec
icebp
int3
jns
sti
xor
out
push
test
add
sub
mov
xchg
fldenv
mov
loopne
test
loope
mov
jg
fstp
mov
adc
cmpsb
push
push
ds
imul
mov
adc
negl
stos
mov
sbb
mov
and
xor
cmp
cwtl
sbb
test
xlat
clc
xchg
jnp
and
dec
and
idivb
test
cmp
sub
pop
arpl
test
mov
push
or
scas
and
insb
cli
or
mov
mov
int
inc
dec
mov
xchg
imul
xchg
pusha
aad
or
cwtl
mov
push
imul
int
pop
or
add
mov
test
sbb
notl
dec
cmp
xor
lods
je
push
or
jle
rcll
inc
sub
lock
lock
mov
mov
les
jl
repnz
inc
fwait
outsb
mov
mov
lods
rclb
xor
inc
arpl
leave
sbb
das
pop
xor
out
mov
adc
push
mov
mov
cmpsl
push
jl
xchg
hlt
jmp
jne
or
jne
mov
hlt
mov
lods
push
je
and
rorb
cli
xchg
inc
lock
sarl
jae
inc
pop
aas
lret
nop
sub
repnz
test
bound
cld
fdivs
pop
out
jbe
loope
push
int
sti
push
andb
xchg
jnp
sbb
aaa
inc
test
dec
xor
adc
mov
mov
inc
jle
mov
movsl
rorb
ret
cmp
sub
xor
mov
fnsave
mov
cli
jne
or
sbbb
add
or
repz
cltd
dec
add
je
add
mov
sub
bound
mov
or
in
imul
clc
ljmp
pop
or
jb
out
and
push
mov
aam
lods
mov
xlat
or
add
scas
cmp
dec
pusha
push
popf
xchg
cmp
ret
xchg
mov
inc
data16
jle
pop
sub
out
es
fwait
mov
mov
aas
repz
pop
inc
ja
fwait
jo
cli
or
rolb
sahf
or
jno
aam
in
pop
mov
mov
cmp
push
movsl
repz
inc
imul
sub
or
and
mov
cwtl
xchg
dec
rclb
pop
imull
push
jp
movsl
jns
ficoms
add
and
and
into
out
test
stc
mov
arpl
bound
aaa
adc
movsb
lea
dec
sub
adc
shl
push
mov
fmuls
stos
pop
and
das
jg
adc
arpl
scas
das
dec
fs
je
inc
fimull
pop
dec
pop
popa
and
jns
xchg
and
sub
mov
aam
mov
das
mov
jo
aam
pop
mov
xchg
xchg
cmp
mov
idiv
add
addr16
mov
rolb
adc
xchg
mov
mov
xor
cmp
jne
pop
out
pusha
sub
outsb
cltd
jp
cli
jo
jnp
out
mov
popa
xchg
sarb
lods
std
jle
dec
sbb
icebp
dec
into
sub
and
dec
lds
or
jmp
lcall
xor
cmp
cmpsl
in
mov
mov
pusha
fcompl
cmp
add
xchg
or
cmc
enter
mov
push
repnz
cmp
sti
fidivrs
cmpsl
in
imul
rcrl
add
inc
lods
or
xchg
jp
add
shl
sbb
jns
adc
out
cmp
scas
aas
mov
xor
adc
add
sub
push
xor
xor
push
iret
shll
jecxz
fistl
sub
cltd
dec
push
push
add
daa
adc
outsl
add
loopne
repz
adc
inc
das
fnstsw
insb
adc
mov
and
and
cmp
mov
dec
into
arpl
jmp
xchg
loope
xchg
inc
or
mov
dec
mov
lods
cwtl
movsb
jns
cmc
push
pop
pop
or
add
mov
adc
clc
addr16
pop
dec
sub
xor
jbe
mov
sar
adcb
out
test
ljmp
fists
inc
push
pushf
fcoms
xor
sarl
or
mov
xchg
sbb
mov
stc
or
add
icebp
insl
push
ss
pusha
into
daa
and
mov
les
rclb
adc
push
jmp
and
push
or
sbb
out
push
add
pop
test
outsl
jb
cltd
lea
dec
shlb
push
xchg
test
dec
inc
out
and
xlat
loopne
out
dec
xchg
shll
dec
jbe
adc
fwait
aas
adc
sbb
shlb
pop
mov
adc
mov
add
push
jae
xor
mov
pop
cmp
push
aam
outsb
mov
aaa
hlt
int3
and
test
xchg
pop
stos
movsb
push
enter
fsubp
jbe
icebp
or
loop
pop
mov
sbb
jecxz
lcall
xchg
and
adc
jo
ret
flds
dec
incl
or
sub
add
cld
shrl
adcl
fnstsw
aad
pop
mov
lret
push
mov
lods
scas
and
dec
dec
fmuls
pop
fnstcw
into
or
in
andl
mov
outsl
daa
inc
cs
negl
xchg
pop
sti
jl
sbb
imul
dec
inc
cmp
inc
adc
jo
jns
les
out
pushf
arpl
pop
mov
fdivp
adc
ljmp
ss
add
jbe
popf
gs
adc
aaa
lret
mov
jbe
mov
sbb
icebp
test
cmpsb
dec
imulb
push
dec
lcall
movsl
stc
add
lock
mov
mov
dec
in
xorl
daa
push
sbb
faddl
call
mov
test
mov
mov
cmp
icebp
sbb
push
sbb
push
scas
je
jnp
pop
sbb
xor
cltd
jo
jnp
pushf
xchg
enter
jo
js
pop
cmc
fisubrs
scas
in
mov
pop
add
negl
fwait
lahf
jmp
xor
stos
mov
mov
cmp
lods
and
pop
push
lds
sub
cli
add
pop
pop
stos
bound
pop
xchg
dec
add
mov
xchg
push
sarl
xchg
xchg
cwtl
nop
fldt
mov
push
push
out
push
in
adc
mov
nop
and
aad
push
lret
cmp
push
sahf
dec
or
pop
adc
insl
mov
dec
xlat
pop
lcall
xchg
andl
ja
sbb
push
and
sbb
dec
js
sbb
clc
dec
filds
lret
cmp
and
or
aam
and
subb
cmc
dec
push
inc
std
ljmp
xor
xchg
push
jns
adc
and
lea
dec
sub
jl
inc
push
setbe
movsl
lret
cmp
cld
and
movsl
cmp
adc
xchg
xchg
cltd
cmp
cmp
mov
cmpsb
imul
jnp
jmp
loopne
pop
push
mov
add
mov
mov
loop
mov
pop
pop
push
sti
fs
fsubrs
popf
orb
bound
ficomps
mov
ljmp
lods
push
cmp
out
movsb
pop
negb
out
nop
mov
lods
sub
std
adc
pop
jge
dec
aad
loop
sbb
and
iret
scas
adc
or
jmp
sub
push
enter
cltd
xchg
and
in
lcall
sub
call
mov
pop
popf
popa
roll
dec
fstps
sub
add
imul
add
stos
int
pop
cltd
ja
cmp
test
adc
push
inc
add
daa
jae
xor
ss
xchg
push
mov
pop
data16
inc
push
add
mov
fs
sti
fsts
inc
lahf
imul
pop
popa
push
xor
mov
mov
xchg
adc
and
fbstp
inc
cld
push
js
mov
push
scas
lea
in
repz
dec
in
xor
xchg
dec
sbb
mov
imul
mov
push
lea
sub
mov
jl
leave
data16
adc
outsb
sub
fistps
movsb
cmp
lods
sub
popf
clc
add
fpatan
xchg
xor
lret
cmc
movsl
sbb
adc
popa
cmp
xchg
push
xor
test
pop
xor
ja
lods
leave
sbb
push
stos
out
js
jns
mov
inc
loop
in
pop
repz
push
sbbl
popa
sbb
pop
pop
dec
fcomi
test
push
push
push
pop
insw
data16
fstpl
arpl
out
mov
js
sahf
jle
dec
jp
mov
xchg
hlt
movb
shlb
jecxz
das
dec
in
adc
adc
xchg
sub
lods
fwait
sbb
xor
sbb
lea
in
xchg
cld
out
std
mov
or
repz
fs
fnstsw
push
lahf
or
inc
insb
add
fildll
mov
jne
insb
cmp
out
inc
cmp
push
popa
cmpsb
sbb
jl
jnp
sahf
and
jmp
and
push
jmp
scas
mul
in
jle
into
push
jp
pop
shlb
mov
jge
fidivrs
sahf
mov
scas
mul
adc
pop
xchg
pop
push
outsb
test
std
arpl
jns
shrl
add
jo
adc
xor
cwtl
xchg
jecxz
sbb
cs
imul
xchg
repnz
pop
call
pop
into
imulb
mov
pop
xor
add
dec
or
jmp
add
jne
cld
mov
lret
movsl
adc
cmp
push
inc
push
loope
rcr
sti
movsb
mov
repz
xchg
sarl
lock
pop
cmp
sub
fs
repz
push
xchg
mov
inc
arpl
dec
mov
mov
mov
iret
adc
fwait
cmc
outsb
adc
cmp
es
stos
enter
popl
cli
inc
out
push
mov
ror
int
ja
push
in
cmp
mov
add
sub
dec
fdivrs
jmp
sub
in
hlt
mov
popf
push
cmp
out
lcall
fstpt
xor
imul
loope
inc
sbb
inc
iret
test
pushf
mov
jae
imul
sti
outsb
inc
test
insl
and
mov
test
mov
incl
xchg
lods
inc
and
jno
dec
into
addb
inc
adc
repz
dec
data16
sbb
sbb
xchg
sbb
rclb
test
jg
iret
jne
cmp
xchg
inc
stc
fs
and
test
and
lods
mov
pop
enter
sub
jg
les
movsb
pushf
call
ja
dec
xchg
mov
rolb
icebp
mov
popf
mov
push
xchg
sbb
push
cs
nop
test
lcall
int
imul
push
out
inc
cld
sahf
mov
insl
leave
addb
arpl
add
popa
mov
push
inc
ljmp
mov
call
int
push
lret
in
push
or
sbb
stos
and
scas
pop
or
inc
jecxz
xchg
pop
mov
mov
push
pop
inc
pop
fcoms
in
ret
cld
pop
xlat
pop
lcall
lret
xchg
cmp
cmp
sbb
jmp
dec
inc
pop
adc
pop
inc
movsl
pop
add
cmpb
jne
pusha
mov
lea
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
popa
xor
ret
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
