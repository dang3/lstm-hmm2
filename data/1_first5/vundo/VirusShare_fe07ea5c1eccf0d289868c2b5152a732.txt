jb
add
dec
add
outsb
add
dec
add
add
insb
add
add
je
add
add
jb
popa
add
add
outsb
add
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
popa
add
add
outsb
add
add
je
imul
push
add
je
insb
add
add
dec
add
je
push
add
popa
add
imul
add
add
add
jne
je
je
outsl
add
inc
add
add
jb
outsb
add
je
add
popa
add
add
add
outsb
add
outsl
add
imul
outsl
add
add
add
dec
add
data16
push
add
js
je
add
add
inc
add
je
je
outsl
add
dec
add
add
je
add
inc
add
je
je
outsl
add
inc
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
dec
add
insb
add
add
je
add
dec
add
popa
add
je
imul
push
add
je
insb
add
push
add
js
je
add
inc
add
je
je
outsl
add
push
add
js
je
add
add
inc
add
popa
add
push
add
js
je
add
add
inc
add
je
je
outsl
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
inc
add
arpl
add
add
add
imul
add
je
push
add
js
je
add
dec
add
insb
add
add
je
add
inc
add
jo
push
add
jb
imul
add
popa
add
add
add
add
outsb
add
pop
sub
pusha
fidivrl
out
xchg
xor
popf
insl
fldl
add
add
add
or
add
add
add
add
add
mov
add
push
add
add
add
add
add
arpl
inc
add
push
add
add
mov
xor
in
gs
add
add
rolb
add
add
add
insl
add
leave
add
bound
lret
add
bound
push
add
add
in
inc
add
add
jl
jne
xchg
add
add
add
add
add
add
js
add
add
add
inc
add
leave
add
dec
add
bound
leave
add
add
add
cld
add
add
add
inc
add
add
add
add
testl
add
add
add
add
and
mov
bound
dec
add
add
push
add
pop
add
bound
leave
add
add
add
add
arpl
xchg
add
adc
sub
add
add
aad
sub
add
es
add
add
add
add
or
pushf
add
mov
push
add
add
leave
add
cmp
inc
pop
imul
xchg
leave
add
add
mov
leave
add
popa
add
xlat
add
bound
addb
add
add
mov
bound
dec
add
add
mov
or
pop
add
add
add
add
dec
add
add
sub
add
add
adc
add
or
add
dec
add
add
bound
pop
add
daa
add
leave
add
add
add
add
or
add
add
add
add
inc
add
add
push
add
add
dec
add
add
add
cmp
jno
inc
add
add
add
jecxz
xor
add
add
bound
pop
add
aad
jno
xchg
leave
add
add
add
add
add
add
add
add
add
pop
add
ds
add
add
add
add
add
add
leave
add
mov
add
xlat
add
add
add
add
call
add
add
sbb
dec
add
push
add
lock
or
in
inc
add
add
add
add
add
outsb
add
add
leave
add
add
add
add
add
add
es
test
in
add
add
or
add
jnp
jecxz
add
bound
pop
add
add
add
aaa
add
add
bound
and
jo
pop
add
dec
add
add
inc
add
add
dec
add
in
add
jo
add
add
add
add
add
add
add
lcall
add
add
add
add
outsb
add
add
cmpsl
add
leave
add
add
add
add
leave
add
add
and
bound
loope
sbb
push
add
add
cmp
leave
add
add
leave
add
cmp
sub
add
add
cmp
mov
add
add
add
and
add
add
mov
add
add
add
add
add
add
add
call
add
add
bound
jno
gs
add
add
pop
add
or
mov
add
add
mov
fldenv
xlat
nop
and
pop
insl
lods
inc
sti
pop
ja
inc
mov
cmp
fmull
in
pop
bound
adc
mov
imul
fisubrl
sub
ret
cmpsl
repz
xchg
dec
js
adc
pop
push
dec
sbb
fs
outsb
out
popa
push
pop
xchg
cmp
xor
dec
pop
rcl
jecxz
jp
push
pop
inc
pop
sbb
sahf
or
ret
std
incb
stos
mov
fldt
inc
and
push
icebp
add
xchg
sub
mov
in
int
ds
add
sbb
mov
js
out
add
aas
jno
decb
movsl
ficoms
mov
movsb
xchg
out
fisubrl
arpl
sub
dec
fsts
nop
loope
dec
test
test
add
cmp
xchg
in
pop
cmp
inc
testb
fcoms
inc
repz
shrl
push
call
pushf
loope
shlb
loopne
ja
imul
aaa
sarb
cwtl
imul
mov
sti
aam
pop
cs
sub
dec
repnz
dec
bound
pop
push
pop
jecxz
push
outsb
xchg
mov
and
cmpsb
mov
add
aam
inc
cmp
push
jecxz
repz
mov
mov
ljmp
aas
inc
cli
pop
cmpsb
dec
sbb
sbb
test
repz
jecxz
es
outsb
sub
repz
jmp
sbb
lcall
loopne
cmp
mov
fcoml
mov
cltd
add
fsub
xchg
xlat
sbb
jmp
into
sbbb
int
mulb
and
movsb
cld
sub
mov
xor
testb
lds
dec
mov
rolb
mov
movsl
subb
push
jb,pt
or
push
mov
inc
imul
or
shrb
cmp
jne
cs
hlt
je
xor
mov
dec
xchg
lahf
enter
rol
rcrl
call
das
jmp
jle
mov
mov
cmpsl
and
aas
jns
xchg
xor
lea
cmp
rcl
das
mov
ds
stos
mov
loope
movsl
jge
add
shll
out
or
aaa
mov
movsb
sbb
mov
lea
loope
out
push
and
scas
mov
add
in
pop
add
lret
mov
and
sub
cwtl
mov
sbb
aad
aaa
inc
cmpsl
int
mov
imul
popa
dec
and
pusha
decl
out
aaa
adc
pusha
leave
stos
nop
cli
jg
cmc
gs
cwtl
mov
xor
push
fnstcw
fidivrl
mov
pop
add
add
add
add
rolb
add
add
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
push
mov
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
push
call
mov
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
loopne
lock
rcl
insl
xchg
out
cmpsl
lcall
ja
push
and
xor
add
adc
loopne
lock
cmpsl
mov
addb
ja
dec
push
push
loopne
xor
add
adc
loopne
lock
pop
shlb
orb
push
sub
push
and
jne
jle
mov
xchg
mov
dec
mov
push
add
mov
mov
push
clc
adc
test
jnp
pushf
mov
sub
mov
jle
insl
push
mov
xor
push
mov
clc
scas
sahf
movsl
daa
sub
dec
or
int3
pusha
data16
inc
inc
nop
test
rcll
shl
out
imull
mov
xchg
loop
xchg
mov
xor
cmp
imul
adc
and
das
sub
xchg
mov
add
imul
sub
and
adc
add
inc
inc
or
xor
daa
mov
dec
mov
jge
imul
shlb
mov
xchg
filds
push
imul
xor
add
adc
test
add
repnz
shlb
adc
xor
pusha
xor
jae
jle
mov
mov
in
out
ret
push
and
inc
adc
pop
aaa
insb
bound
test
mov
addb
ja
inc
push
push
and
xor
add
adc
loopne
lock
cmpsl
mov
addb
ja
inc
push
push
and
xor
add
adc
loopne
aad
pop
mov
adc
sti
push
pop
mov
sbb
sub
in
icebp
dec
fldln2
or
test
aaa
sbb
subb
pop
xchg
mov
cmp
add
xchg
and
iret
loopne
fdivr
dec
adc
jp
add
dec
push
nop
lret
sbb
insb
inc
jecxz
sbb
xorl
dec
lods
dec
pusha
adc
sbb
mov
lea
scas
inc
cwtl
mov
loop
fidivl
sahf
jbe
jne
inc
inc
out
dec
sbb
roll
xchg
mov
jmp
xchg
mov
pop
sbb
mov
or
cmp
add
adc
mov
cmpsb
dec
fs
andb
pop
out
dec
stc
fcomi
add
scas
jg
outsb
xor
pop
and
cwtl
iret
popa
dec
cmp
xchg
into
ds
cmp
into
mov
ja
or
xorb
in
xchg
enter
or
pop
push
xor
loope
push
loop
mov
sbb
jne
pop
jge
inc
cmp
push
fsubrl
mov
xchg
repnz
sarb
popf
dec
roll
xor
pop
test
mov
jecxz
insb
mov
enter
add
inc
call
scas
jecxz
lcall
adc
sub
mov
mov
out
movsl
cld
push
stos
pop
push
lea
je
or
cmc
xchg
pop
push
mov
or
fidivs
imul
repnz
pop
dec
and
fmuls
sub
das
out
addr16
cmp
mov
jp
testl
add
inc
test
mov
mov
int
jle
xor
test
ja
repz
fistps
aam
sbb
flds
stos
out
push
aam
jmp
xchg
jns
aaa
in
inc
adc
pop
add
mov
xor
and
iret
pop
leave
les
mov
pushf
enter
jg
push
rorb
fs
inc
jg
sub
pop
pop
jo
sbb
sbb
lock
xchg
movl
fwait
cs
cli
fisubrs
push
mov
aad
in
lds
add
mov
std
pop
in
lcall
cwtl
ljmp
lods
dec
push
out
movsb
lea
xor
dec
mov
insl
rcrl
ljmp
clc
repnz
add
jmp
or
xor
out
scas
add
jne
push
loopne
mov
pop
repz
mov
das
stos
mov
enter
pop
nop
mov
dec
mov
mov
xchg
or
jle
ds
dec
push
imul
hlt
and
add
pop
ffree
pusha
fcompl
psrld
mov
fpatan
mov
cmpsb
mov
jnp
adc
xchg
or
cmp
ret
enter
dec
int3
fst
jp
in
pop
or
jns
cwtl
jo
mov
sbb
and
xchg
cmpb
popf
clc
inc
mov
mov
jae
push
pop
inc
sti
int
inc
je
sub
push
outsl
cmc
roll
jg
mov
shrb
pop
int3
pop
add
push
adc
jl
sbb
pop
or
sbbb
mov
ljmp
pop
icebp
syscall
jns
std
in
negl
inc
jl
in
hlt
stos
andl
jmp
jno
call
cmp
and
sahf
jae
das
jmp
sub
in
decb
and
jmp
test
jecxz
stc
mov
push
pop
sbb
adc
inc
jne
sbb
jne
sahf
arpl
repz
adc
xor
pop
push
xor
es
loop
add
mov
mov
and
xchg
aaa
cmpl
jge
rorl
test
cmp
push
cmp
addr16
xor
or
jae
jmp
popa
daa
push
mov
test
in
jno
push
adc
cmp
push
mov
iret
or
bound
cmpsl
out
loop
in
call
xchg
xchg
inc
inc
cmp
cmc
inc
pop
mov
dec
imul
jb
inc
mov
lret
addr16
pop
add
and
sbb
arpl
lahf
aaa
mov
pop
je
cmp
mov
popf
sbb
push
stos
and
lret
repnz
pop
jmp
push
push
fbld
je
jns
push
mov
imul
dec
adc
xor
es
push
sbb
add
push
sub
stos
jbe
imul
mov
adc
xchg
lock
int3
jbe
mov
lret
cltd
and
dec
xchg
xor
jmp
cvtps2pd
pop
ds
mov
lock
lahf
jp
push
mov
repnz
loopne
sub
addr16
int
outsb
scas
mov
imul
dec
insl
lret
aaa
cmp
mov
fcmovb
scas
ss
fstl
jge
fnsave
test
popa
adcb
icebp
pushf
mov
sub
cmp
push
add
gs
inc
rorb
fildll
mov
lret
xor
or
adc
lret
clc
xchg
fidivrl
xor
shr
stos
out
fs
mov
cmp
jne
mov
pop
dec
int3
sbb
sub
xor
mov
lds
jl
or
stos
add
mov
pop
std
pop
inc
add
mov
xor
jbe
mov
and
jg
fisubl
arpl
out
mov
loopne
mov
mov
dec
inc
cwtl
dec
or
popfw
lods
out
xor
test
mov
daa
imul
enter
ja
test
call
pop
push
rcl
pop
ret
in
loop
sbb
cli
fmulp
or
adcb
xor
push
lock
jnp
jnp
inc
fistps
and
xchg
xchg
xchg
je
xor
lret
push
cld
imul
test
adc
lock
fdivrl
sub
imul
jl
ja
pxor
push
inc
jne
xor
popf
cs
fadds
add
cli
scas
push
repnz
leave
sbb
bound
call
pop
mov
dec
jl
jne
mov
outsl
push
add
lret
stos
mov
mov
mov
mov
jl
xlat
lcall
imul
andl
repnz
push
std
jmp
ror
push
or
dec
xchg
push
add
dec
sub
jns
sbbl
jbe
test
pop
or
push
std
sub
xchg
outsb
sbb
jae
aam
xor
dec
mov
pop
cs
dec
jmp
dec
stos
push
shlb
dec
push
lcall
adc
sbb
push
pushl
push
outsb
data16
push
sbb
loope
in
lcall
imul
mov
insl
xchg
gs
cltd
je
sub
lds
push
xchg
mov
movsl
mov
in
ret
xlat
or
push
stos
cmpsl
es
stos
dec
adc
movsl
call
ljmp
divl
push
popa
or
cmc
push
inc
sub
ja
inc
insb
cld
push
sti
aas
dec
adc
add
jb
int
into
dec
fisttps
mov
mov
inc
enter
dec
aaa
gs
sub
mov
and
ds
and
push
stos
inc
stos
aaa
iret
inc
push
test
and
mov
shrl
scas
jnp
in
js
aas
xchg
popf
push
xchg
fwait
jbe
gs
test
bswap
lcall
repz
xor
adc
jns
in
jle
mov
mov
popf
dec
push
nop
fidivrs
shll
pop
aad
or
iret
jo
pop
and
loop
lret
cltd
mov
sub
sub
jl
jge
clc
mov
push
faddl
dec
jbe
add
push
fisubs
aaa
push
ret
movsb
jmp
aam
push
stos
xlat
rolb
xor
repnz
jae
inc
jge
cmp
pop
cmp
mov
mov
loopne
aam
div
adc
fcmovb
cwtl
and
jns
jg
bnd
in
or
mov
nop
add
jbe
cwtl
cmp
xchg
mov
sub
je
shll
loop
insl
inc
dec
stc
push
pop
mov
inc
push
xchg
movsl
sahf
cmc
mov
negl
inc
pop
adc
sar
cmpb
push
lcall
scas
fiadds
int3
out
mov
pop
test
add
jns
andb
shlb
loope
add
stos
xchg
fadds
int
pop
rol
xchg
fwait
arpl
imul
jge
inc
or
push
clc
xor
pop
mov
ret
jno
push
mov
xchg
imul
daa
sti
cmp
mov
les
add
adc
pop
outsl
stos
and
and
push
xchg
or
cmpl
xchg
aas
inc
xchg
sub
imul
ficomps
xor
lret
mov
jb
out
push
push
jle
jbe
imul
addr16
and
popf
sti
notl
insb
cmpsl
in
stc
mov
lea
cs
sahf
dec
shrb
out
or
xchg
daa
mov
mov
jl
loope
xchg
test
sbb
xchg
lods
dec
stc
add
sbb
test
lock
into
lock
cmp
hlt
pop
mov
sbb
test
mov
test
pop
outsl
mov
mov
rorb
daa
test
jecxz,pn
sub
pop
jne
out
adc
jns
fidivrs
lock
mov
fstl
jmp
int
inc
sbbl
jg
fldl
ret
jo
outsb
xchg
xchg
cwtl
sbb
jp
or
popa
or
add
mov
ss
or
ret
inc
std
out
adc
mov
imull
inc
lods
ljmp
hlt
outsl
jnp
aaa
xor
fsubrs
call
decl
xor
add
bound
out
or
inc
movsb
xchg
shrl
into
inc
sti
xor
push
mov
cwtl
js,pn
adc
pop
pop
inc
push
aaa
imul
dec
and
not
inc
movsl
inc
mov
hlt
in
mov
mov
sbb
lret
cmp
pusha
mov
aad
cwtl
xor
mov
call
outsl
leave
inc
push
pop
lock
pop
mov
lds
lea
cwtl
sbb
push
or
and
cli
inc
aas
sbb
add
addr16
test
fisubrl
cs
std
loop
popf
mov
mulb
jnp
cmpsl
bound
push
movsl
cmp
lret
push
das
addl
add
fldcw
imul
and
jo
adcb
adc
repnz
push
fwait
jns
fnstsw
jnp
cld
lcall
repnz
or
cmp
add
xorb
jle
cmovs
xchg
lret
jmp
mov
lret
lret
adc
dec
jne
cmp
mov
sbb
in
int
mov
dec
fistl
add
adc
out
rol
iret
push
pop
jmp
iret
into
pop
ss
sbb
xchg
or
ljmp
add
pop
or
adc
cmp
mov
cmp
insl
jno
outsl
dec
xchg
mov
dec
jg
mov
mov
fcmovb
fsts
jge
gs
jae
insl
pushf
int
cmpsb
and
lock
add
jmp
sub
shlb
sub
push
mov
adcb
push
dec
ja
repnz
aaa
mov
sbb
pop
lret
mov
push
in
aam
add
mov
pop
repnz
push
pushf
fdivl
mov
hlt
movsl
cli
mov
pop
xchg
pop
dec
xor
in
mov
xor
push
inc
or
push
and
fdivl
pop
stos
add
jle
inc
in
jp
xchg
aad
frstor
aaa
pop
adc
fisttps
test
imul
pop
divb
xor
jns
mov
test
xchg
js
inc
add
xchg
push
mov
ja
or
das
das
enter
in
popf
lea
push
jp
xorl
outsl
cmpsl
mov
or
lods
jl
fstpl
aad
xchg
sbb
add
outsl
jge
mov
adc
int3
jno
push
dec
inc
test
adc
jmp
cmp
mov
cwtl
roll
pop
test
sti
or
bound
push
mov
daa
fisubs
xchg
pusha
push
cld
mov
jns
inc
in
movsl
xor
and
adc
ret
sbb
push
popa
adc
fisubs
movsl
sahf
mov
mov
addl
test
xor
sbb
roll
mov
pop
dec
sub
lock
cmpsb
cli
or
sbb
hlt
cli
stc
repnz
jge
push
and
arpl
cmp
in
fisubrs
xchg
mov
sub
mov
lret
nop
add
dec
xchg
jb
add
mov
mov
jae
movsl
mov
pop
ret
cltd
lock
mov
xchg
sbb
in
sahf
std
mov
push
sub
daa
gs
push
lods
dec
pop
adc
loopne
mov
fwait
jno
and
jbe
lret
inc
sbb
pop
cmp
fcompl
loop
pop
jmp
int3
jne
rcl
iret
icebp
dec
lea
stos
or
pop
or
mov
mov
push
jns
jbe
mov
jnp
jo
jno
inc
xor
sub
pop
and
fmull
gs
ret
inc
lahf
int3
scas
lret
jb
call
sbb
sti
ficompl
imul
pop
sbb
shrl
jle
outsl
sti
push
scas
or
jp,pn
fld
or
sahf
jmp
mov
stc
notl
pushf
fidivl
add
mov
sub
pusha
add
pushf
jecxz
testb
mov
movsb
push
dec
push
adc
std
sbb
sahf
xchg
sti
adc
mov
jne
cmp
jp
es
dec
repz
mov
pushf
sub
outsl
adc
and
lock
sub
mov
aas
cmc
pop
in
push
pushf
and
mov
sbb
and
aam
loop
fwait
add
jle,pt
decb
cmp
shrb
push
jbe
dec
jl
dec
mov
repnz
mov
xchg
test
xchg
or
cmp
mov
call
rclb
pop
jl
lock
and
mov
push
roll
pop
push
std
sub
lret
dec
fimuls
je
push
movsl
std
push
repz
fsts
push
lcall
insb
push
daa
xor
sub
mov
xor
xchg
aaa
jno
pop
adcb
and
push
mov
gs
insb
push
ljmp
popa
arpl
or
add
inc
push
nop
js
andl
and
aad
jnp
nop
sub
stc
cmp
pusha
xor
in
scas
cwtl
filds
adc
mov
loope
or
gs
aaa
std
loope
out
pop
dec
cs
xor
push
pop
pop
fnstenv
cmp
ss
sbb
in
cmpsb
test
pop
fmul
dec
int
dec
les
lods
lds
add
xchg
mov
cltd
daa
xchg
dec
fs
movsl
rclb
psubd
pop
testb
ja
ret
adc
or
movsl
ljmp
clc
add
mov
pop
mov
rcl
mov
icebp
mov
loop
loop
nop
mov
jnp
iret
xor
mov
pcmpgtw
pop
mov
pop
test
movsl
inc
sub
call
punpckhbw
or
cmpsl
leave
rorb
mov
hlt
dec
mov
adc
rcrb
pop
jle
js
jp
out
in
fmuls
and
fists
pop
sub
movb
adc
out
stos
sar
mov
mov
pop
push
xchg
push
icebp
push
lods
xchg
cmp
xchg
inc
mov
orb
mov
daa
jb
inc
mov
inc
add
fprem1
sbb
sbb
mov
cmp
mov
push
call
dec
popl
stos
loopne
outsb
xchg
outsb
add
fiadds
cld
and
mov
iret
ss
bound
out
mov
dec
insl
nop
xor
int3
pop
test
rolb
dec
imull
jo
mov
push
call
std
shlb
out
xchg
add
test
add
xchg
ret
in
movsl
add
mov
cli
out
sub
ret
pop
push
std
fwait
test
push
adc
sahf
add
std
mov
cmp
cmp
cmp
faddl
outsl
ds
jecxz
into
mov
lea
icebp
sub
or
sub
pop
js
push
neg
xor
lods
clc
cmp
mov
cmp
fwait
mov
es
rcll
jo
outsb
pop
imul
shrb
push
cmpsb
jmp
sbb
cmp
aam
lea
push
sub
or
xor
lcall
xor
hlt
scas
stos
cli
daa
aad
xchg
movsb
repnz
int
loopne
fnsave
inc
insb
mov
mov
out
mov
push
outsb
jbe
cmp
pusha
xlat
ret
jl
cmp
and
push
push
jp
mov
std
jecxz
stos
sbb
mov
jbe
push
imul
adc
mul
testl
mov
sub
test
and
mov
fisttps
push
adc
std
inc
lds
js
jnp
mov
inc
cmpsb
dec
mov
popf
ja
or
pop
out
fwait
xor
xchg
mov
mov
je,pn
rorl
das
dec
sub
les
mov
inc
lret
dec
jg
repnz
imul
or
mov
xchg
cld
xchg
insb
dec
sub
mov
mov
fs
lock
pop
mov
movsl
sbb
jno
dec
mov
jnp
lret
cmc
adc
mov
lahf
xchg
or
or
cmp
gs
or
xchg
dec
lret
in
jno
inc
mov
clc
cmpsl
mov
out
push
cli
jmp
pop
pop
dec
enter
gs
ficoml
adcb
movsl
xchg
inc
sbb
adc
mov
cli
push
aas
inc
daa
sbb
popf
cld
or
xchg
popl
xor
les
divb
aam
mov
push
push
iret
mov
aam
shrl
lahf
scas
fstpt
lcall
movsb
orl
lods
mov
lcall
loopne
cld
arpl
or
pop
mov
mov
sbb
fwait
lret
stos
out
inc
mov
cmp
mov
cmp
popa
cld
xor
sarl
pop
jmp
fcoms
sub
pop
rorl
and
add
mov
repnz
mul
inc
iret
andl
fisttps
inc
inc
fucom
inc
inc
xchg
inc
adc
ss
xchg
xchg
lcall
addr16
popa
int
dec
fwait
leave
outsb
adc
inc
jo
mov
repz
inc
repnz
ss
lods
sub
mov
sub
cmpsl
lock
int
daa
sti
mov
and
dec
or
mov
mov
arpl
mov
pop
shll
xor
or
sub
mov
jns
in
addl
enter
push
mov
or
pop
pop
jae
push
push
int3
mov
mov
into
mov
sbb
movsb
mov
push
lret
rclb
shll
add
cmp
icebp
stos
cs
mov
and
mov
cmovle
xchg
jnp
add
or
jp
add
pop
adc
xchg
movsb
fistpl
ret
cmc
add
inc
push
mov
xchg
sbbb
push
shll
lret
dec
test
mov
repnz
fstl
add
xor
icebp
push
pop
pop
push
test
xchg
mov
dec
in
orl
fisubrs
je
lret
sub
imul
ss
daa
popa
iret
mov
adc
and
xor
pop
xchg
scas
dec
adc
data16
sbb
repz
push
mov
sub
push
dec
sbb
sbb
inc
pop
jo
sub
xlat
enter
js
andb
loope,pt
dec
push
xchg
mov
push
adc
int3
out
sbb
and
int
add
push
or
test
fdivl
mov
call
xchg
xchg
rcll
cmp
pop
inc
ds
cmpsl
mov
fidivrs
mov
sarl
iret
sbb
sbbl
pop
outsl
lock
sahf
xlat
cmp
xchg
lret
xor
pop
cmp
sbb
sub
pop
xor
jne
in
mov
ret
jl
lock
and
jne
aad
clc
pop
orb
xor
lcall
pop
in
xor
mov
xorb
or
inc
sbb
popf
sti
add
icebp
ss
pusha
pop
push
cvtps2pi
shlb
mov
icebp
push
rcrl
dec
mov
jle
std
pusha
sub
mov
sahf
mov
out
lcall
push
js
jnp
ljmp
cmpsl
mov
addb
ja
inc
push
push
and
xor
add
adc
loopne
lock
cmpsl
mov
addb
ja
inc
push
push
and
xor
add
adc
loopne
jo
inc
shll
cmpsl
mov
addb
jae
inc
push
pop
and
xor
add
adc
loopne
lock
and
xchg
mov
pop
nop
push
pusha
cwtl
jo
ljmp
dec
jo
pusha
outsl
push
mov
jb
bound
inc
xchg
sarl
rcrb
cmp
cs
dec
adc
outsb
mov
sahf
jb
bound
xor
and
repnz
xchg
cmp
pop
mov
mov
xchg
bound
xor
and
rorb
loope
adcb
xchg
add
sub
sbb
adc
ret
jb
or
sbb
or
jmp
cmp
pop
xchg
in
mov
cmpsl
lahf
out
adc
lret
icebp
dec
loopne
jle
rol
addb
sahf
xrelease
popf
sub
inc
inc
shl
clc
fnstsw
insb
push
xlat
push
loop
rcll
xor
cmp
gs
mov
gs
jp
std
into
imul
loopne
rcrl
fisttpl
sub
or
popa
notl
lret
and
shl
lret
imul
outsb
jno
ljmp
mov
out
xor
add
mov
jbe
sarl
xchg
cltd
inc
mov
bound
xor
and
rorb
ret
aaa
loop
xchg
push
addb
mov
in
xor
and
ja
insl
mov
mov
sub
pop
xlat
add
adc
notl
frstor
shll
dec
nop
ja
addr16
mov
dec
loop
gs
fisttpl
enter
inc
sahf
xor
pop
sti
push
std
add
xor
and
rorb
ret
loop,pn
xchg
dec
sbbb
mov
sahf
jb
bound
xor
and
rorb
ret
loop,pn
xchg
dec
sbbb
mov
out
sub
xor
xchg
cmp
addr16
mov
pop
sbb
xchg
mov
shl
fidivrl
lds
testb
jae
xor
insb
and
push
imul
sub
adc
lods
arpl
sbb
data16
dec
xor
shrb
inc
lock
aaa
out
add
mov
xlat
mov
in
pop
xor
and
jne
pop
in
lcall
aas
dec
pusha
sbb
or
pop
add
push
cmc
gs
in
inc
test
cs
push
in
cmpsb
mov
and
mov
stc
push
loop
pushl
inc
mov
jb
lret
dec
inc
sahf
lods
popa
xchg
mov
hlt
scas
inc
fst
insb
jne
rol
fldl
xchg
test
jbe
pop
cs
and
add
pushl
pop
push
scas
jle
out
xor
push
sub
mov
ljmp
add
dec
cmp
cmp
testl
mov
in
dec
and
scas
push
cmp
testl
movsb
xchg
arpl
adc
sub
loop
fwait
jae
js
test
xchg
fildl
mov
lods
inc
inc
movsb
xchg
dec
and
mov
add
sub
xchg
mov
repz
inc
data16
mov
lds
add
add
cmpsb
mov
loop
call
add
push
pop
sub
into
sbb
pop
mov
rorl
sub
insb
icebp
cmp
and
mov
adc
pop
or
insb
sbb
shrb
inc
out
fsubrs
daa
sub
lret
xor
add
push
adc
mov
incl
dec
mov
and
pop
jge
cli
or
fistps
xchg
ficoms
xchg
mov
icebp
iret
sub
pop
sbb
cmpsb
aaa
pop
pop
orb
adc
sti
out
jb
xchg
fidivrl
sti
roll
icebp
mov
sbb
out
mov
mov
mov
out
enter
xlat
imul
call
nop
das
mov
mov
mov
shlb
adc
sub
inc
test
dec
or
or
sarl
scas
sbb
dec
xor
xchg
inc
xor
push
adc
into
iret
gs
mov
pop
jb
cmp
les
fsubl
arpl
adc
test
scas
jo
out
movsl
les
in
rcl
daa
xchg
xchg
int
pop
jb
mov
lahf
test
push
cmp
xchg
and
dec
push
pop
sub
and
xchg
test
es
std
jbe
cltd
jb
mov
lods
xchg
add
fbstp
js
mov
inc
movsb
jge
nop
inc
icebp
mov
mov
out
outsb
repz
push
ficoml
mov
rcrl
arpl
and
xchg
mov
xor
mov
aaa
jg
fnstcw
test
add
push
sbb
popf
pop
ljmp
ret
in
lret
int3
cmp
or
push
xchg
call
xor
dec
inc
imul
cmpl
cmc
cbtw
and
dec
mov
jmp
jecxz
mov
imul
push
js
jno
test
inc
xchg
xor
repnz
mov
fcomip
imul
dec
sub
pop
mov
std
xchg
gs
les
stos
and
rcl
adc
nop
mov
repz
or
jl
shll
push
push
mov
jge
jns
jb
movb
add
jb
push
sti
push
or
mov
or
lods
and
pop
mov
or
pop
fildll
test
jno
out
in
movsb
ret
dec
outsl
push
mov
int3
test
xor
jns
in
xor
inc
cmp
fidivs
lods
aaa
rcl
les
jp
xchg
cltd
cmp
in
push
hlt
sahf
push
cltd
popf
inc
repz
mov
sub
mov
popa
xor
cmpsl
xorb
lock
xchg
popf
out
adc
ljmp
je
add
push
les
sbb
orl
pop
scas
add
lds
addb
jmp
cmpsb
into
stos
fcmovne
sarb
sub
dec
push
mov
push
cmp
and
sti
int3
test
rclb
jo
dec
notl
and
sbb
bnd
mov
leave
shr
imulb
ljmp
ret
add
and
stc
mov
xchg
push
cld
bnd
push
arpl
mov
pop
jo
sahf
sbb
add
jno
and
sti
repz
cld
call
rol
daa
adc
stos
es
enter
push
dec
push
stos
sub
filds
movb
sarl
insb
adc
aad
pop
dec
pusha
mov
xor
and
pop
adc
pop
popa
and
mov
shl
sub
sbbb
or
movl
adc
lods
mov
or
and
out
adc
incb
pop
loope
cmp
cmpsb
shll
rol
in
stc
pop
sbb
jbe
mov
das
push
xlat
or
call
mov
andl
popf
repnz
jne
aas
cmp
imul
add
and
dec
or
jg
popa
pop
fists
jmp
or
add
mov
cli
mov
insl
popa
dec
mov
daa
dec
filds
iret
sub
test
out
sbb
pop
test
mov
imul
div
ds
outsl
sti
sub
test
stc
stos
nop
orl
lds
popl
dec
orb
mov
mov
mov
xchg
cmpsl
mov
imul
push
adc
ljmp
pop
stos
xchg
pop
sub
sbb
xor
jno
pop
inc
cwtl
adc
sbb
scas
cmp
popf
jno
fdivr
lds
scas
stc
xchg
jne
xchg
sbb
pop
cwtl
in
cwtl
add
dec
mov
movsb
mov
and
push
rorl
push
in
push
cld
push
xchg
inc
outsb
pop
pop
cld
loope
jnp
cmp
ds
shrl
in
jge
pop
mov
lock
dec
adc
push
adc
es
sub
testb
cmp
xchg
je
inc
jg
jle
test
mov
jno
mov
sbb
cs
nop
xchg
mov
mov
mov
pop
mov
lds
xor
cmp
cltd
sub
xchg
js
dec
xchg
adc
cltd
cmpsb
dec
jmp
imul
loope
js
xchg
xor
bswap
push
xlat
add
jge
fisubs
xchg
adc
lods
or
add
or
loopne
adc
jns
add
jne
fdivr
adc
inc
mov
xchg
in
movsb
aas
dec
nop
mov
mov
hlt
repz
sub
in
adc
mov
mov
mov
add
xchg
mov
fsubrp
rcll
jle
insb
push
test
adc
dec
ljmp
fstpl
call
or
std
scas
aas
cld
sbb
int3
mov
sahf
stos
aaa
and
sub
fcoml
ret
or
cmp
cld
sbb
lock
nop
cwtl
dec
sahf
adc
arpl
sub
pop
lcall
or
test
xchg
xchg
mov
mov
loop
stc
cmpsb
dec
mov
in
inc
fcompl
jmp
and
cmp
jmp
and
push
push
ja
outsl
sbbb
sar
jo
cmp
mov
in
sbb
cmp
sbb
out
sbb
cwtl
add
mov
int
loopew
mov
pop
jl
fbld
cs
repnz
fs
in
dec
cmp
shll
sti
xchg
inc
pop
loope
gs
sbb
repz
or
jns
jmp
int
fwait
add
test
sub
incb
sub
cmp
jp
repz
sahf
jmp
sub
cmovs
ljmp
or
pop
pop
mov
add
stos
jle
pop
out
or
adc
outsl
mov
fcmovnb
andb
dec
lods
cmp
or
in
add
popf
mov
je
cmp
xchg
mov
sub
lret
inc
in
add
mov
push
push
out
loopne
movsl
insb
fmul
imul
pop
inc
xor
andl
aad
mov
out
cwtl
jg
dec
jp
sub
xor
notl
mov
mov
cld
rclb
outsb
jg
sbb
jns
ss
push
mov
jecxz
bound
mov
lret
jecxz
ds
xchg
lods
cs
mov
mov
adc
push
clc
les
fnsave
mov
add
jns
mov
sub
imul
adc
jno
out
ret
push
in
mov
or
int3
jp
lock
in
mov
inc
in
fsub
ss
adc
push
push
adc
sbbl
cwtl
pop
fbstp
mov
push
packuswb
movsb
out
cltd
inc
jg
dec
push
testl
inc
jae
sahf
lret
jae
enter
xchg
popf
push
mov
negl
fcoml
lcall
sub
test
and
add
leave
and
lock
adc
cmp
mov
jmp
pushf
mov
inc
data16
add
push
jg
addl
xor
push
lods
pop
add
insl
leave
sub
mov
outsl
negl
pop
aam
sub
aaa
xor
push
fs
sahf
into
cmp
lds
and
fdivs
sub
cs
cmc
push
sub
add
sbb
imul
stc
fsts
xchg
sbb
mov
jmp
clc
sbb
cwtl
sbb
jae
sbb
fadds
sub
push
xor
or
shr
lret
cltd
lds
mov
mov
sub
or
or
mov
xlat
push
push
sbb
mov
cltd
out
pop
push
outsb
lret
xor
es
iret
xchg
outsl
out
and
lods
adc
add
sub
cmp
xlat
sbb
mov
push
and
inc
rorl
add
jnp
sbb
mov
ss
sub
pop
lds
lods
testl
cmpsl
ljmp
aam
inc
or
pop
pop
repnz
sub
push
xlat
das
scas
or
sub
xchg
repz
ljmp
mov
jg
cmpsl
mov
xchg
loop
inc
mov
inc
call
mov
imul
and
out
call
ret
test
ja
and
xchg
dec
push
push
adc
cld
dec
xor
mov
xor
in
out
mov
or
add
icebp
test
movsl
daa
mov
ljmp
lahf
sub
aad
ret
lods
or
inc
xchg
test
outsl
rol
mov
fisubrs
sub
cmp
sbb
fs
bound
jp
inc
mov
lret
sbb
inc
fs
lret
xchg
xor
movsl
scas
mov
int3
outsl
push
jg
outsb
and
push
mov
lods
push
push
sub
sbb
push
jnp
jns
sbb
mov
cli
mov
loope
outsl
icebp
pusha
dec
inc
adc
ds
pop
xchg
cmc
mov
adc
push
xor
adc
fists
pop
pop
popa
sahf
jno
fdivrl
loope
jns
movsb
xchg
xchg
bound
push
pop
mov
mov
or
test
idiv
or
push
dec
adc
dec
and
aam
adc
sahf
cmp
das
push
inc
sub
lret
cltd
fadds
imul
mov
sbb
imul
rcrb
pop
mov
jge
into
popa
mov
mov
int
loopne
jae
dec
xor
sub
mov
test
fstpl
xchg
push
push
inc
in
jmp
das
dec
jno
mov
stos
lds
fs
jbe
orl
cmc
mov
fwait
ret
inc
ret
cli
dec
jns
fcom
aaa
mov
inc
push
push
mov
leave
xchg
dec
icebp
pop
arpl
testb
and
pop
bound
iret
add
outsb
flds
cmp
cld
sbb
hlt
adc
xor
fldt
cmp
in
outsb
sub
cmpsl
push
arpl
mov
loope
xchg
insl
insl
mov
inc
sub
cli
loope
xor
clc
and
das
cmp
repnz
outsl
mov
adc
out
jo
xor
pop
jo
mov
and
xor
adc
cld
nop
adc
aas
push
and
or
scas
mov
adc
dec
adc
sub
inc
inc
lret
cmpsl
stos
ret
pop
cli
scas
ljmp
inc
and
xorl
xchg
fsubl
xchg
ret
in
mov
and
or
insl
leave
xor
push
add
test
pusha
cmpsl
cwtl
or
xlat
xchg
push
jae
scas
leave
gs
pop
je
fwait
push
or
lcall
push
lahf
rclb
jnp
sub
imulb
push
and
push
inc
call
bound
push
imul
or
clc
bound
loope
mov
sub
cmpsb
cmpsl
mov
leave
popf
jmp
pop
inc
cmp
lret
ljmp
push
sub
mov
in
mov
pop
jnp
pop
mov
inc
insb
xchg
repz
test
cmpl
inc
negb
outsl
pop
cmpsl
sahf
jne
clc
into
inc
jp
xor
fsubrs
pop
adc
push
jmp
fcomp
sbb
shll
lret
xchg
inc
into
cld
les
test
scas
orb
insl
jle
mov
popf
inc
mov
sub
insb
cmc
lcall
jl
add
mov
lods
lahf
aad
cmp
cmp
call
mov
push
test
pop
mov
jl
jno
ret
xchg
int
insb
addr16
sub
or
xchg
in
or
jmp
mov
ss
push
out
mov
data16
not
fs
lcall
jmp
mov
adc
shr
xlat
xchg
mov
lods
pop
add
aad
lock
cmp
adc
loop
and
popf
adc
push
cmp
jb
mov
nop
movsb
fdivl
xchg
cmpb
or
pushf
push
ss
sub
cmp
sub
sti
icebp
leave
cmpsb
pop
pop
rcrl
push
cmp
dec
xchg
loop
jo
sbb
dec
push
loopne
add
dec
orl
es
mov
inc
mov
shl
jbe
dec
icebp
popa
fwait
dec
addr16
fnstenv
dec
repnz
cmpl
jecxz
fbld
mov
lods
cmp
cld
sbb
sub
sar
divl
fnstenv
dec
inc
and
adc
mov
movsb
add
divl
popa
aaa
mov
xor
xchg
cld
into
xor
out
cli
add
push
cli
sub
inc
in
repz
dec
cmp
and
xor
popa
movsl
fldt
sub
dec
sbb
xchg
pop
mov
lds
loope
jmp
test
and
std
clc
lahf
ds
lahf
inc
imul
adc
cmp
xor
lock
test
push
mov
dec
xor
xchg
inc
adc
mov
push
inc
mov
rolb
insl
add
pop
out
adc
or
mov
cmp
adc
insl
lods
dec
inc
xor
jae
sbb
outsl
pop
std
loop
jecxz
fisubrs
lret
push
in
mov
adc
inc
aas
mov
fstl
test
je
lcall
les
ret
inc
mov
imul
push
ljmp
inc
roll
jl
cmp
inc
cmc
loop
jo
aaa
pop
xlat
xor
das
xor
xchg
inc
fwait
add
fcoml
mov
jmp
sbb
xchg
pop
pop
adc
clc
std
and
jb
sti
and
das
or
movsb
mov
add
shrb
pushf
xor
xor
push
xchg
or
pop
rcrl
dec
mov
pop
jl
adc
std
mov
aad
xor
mov
out
arpl
mov
push
fwait
ja
adc
dec
or
xchg
push
ja
or
cld
nop
add
sti
out
dec
and
insl
jns
cmpsb
push
xor
pop
dec
scas
sub
mov
imul
test
push
xchg
inc
mov
out
lret
pop
mov
xor
mov
pop
adcb
xchg
mov
inc
repz
dec
scas
push
out
inc
out
bnd
mov
pop
movsl
rol
jo
dec
cmp
or
and
xor
and
mov
data16
in
dec
push
ljmp
ljmp
xchg
mov
rorl
ljmp
aad
mov
mov
jnp
dec
mov
sub
lods
addr16
sub
fnstcw
or
andl
xchg
push
and
in
xor
mov
add
cmpsl
sub
je
rorl
jmp
mov
leave
pop
mov
cmpsl
into
mov
mov
mov
add
cmpsl
ja
out
cmpsl
xor
and
cltd
ja
mov
cmpsl
loope
mov
cmp
pop
shrb
and
cmp
inc
and
sub
jecxz,pt
inc
ret
mov
cwtl
push
in
aad
push
cmp
in
mov
adcl
das
rcr
sbb
sbb
notb
in
add
mov
das
mov
cltd
mov
cmp
mov
add
mov
lock
pop
maskmovq
imul
stos
push
dec
cmpb
scas
mov
std
dec
aam
mov
lods
adc
loope
mov
aas
sarl
cmp
push
push
in
sbb
mov
and
or
pop
dec
xchg
mov
mov
add
adc
dec
dec
pop
or
cmp
imul
push
jge
sbb
add
jle
pop
mov
xchg
popf
add
gs
aas
insl
or
push
fisubl
adc
fwait
out
aad
outsl
lea
xchg
jo
mov
test
inc
dec
das
lret
mov
test
aaa
or
adc
add
sbb
jp
sahf
jae
mov
pop
add
jnp
test
jp
inc
push
sub
fchs
stos
push
fucomi
mov
jno
xchg
push
add
loope
mov
dec
adc
add
lcall
and
pop
dec
cs
movsb
into
jo
xchg
stc
cmp
sarb
fildll
sub
lret
or
ds
in
cli
xchg
jb
in
sub
shrl
or
sbb
dec
roll
or
mov
mov
decb
insb
inc
int3
mov
cwtl
xchg
inc
gs
data16
add
sbb
pop
and
mov
jmp
jle
cmpsl
gs
cmpsb
daa
mov
adc
mov
push
fidivrl
cmpsl
montmul
cmpsb
inc
push
lods
fwait
jg
sub
xor
jmp
cmp
scas
adc
call
cmc
add
add
xor
je
or
pop
mov
or
pop
cmpsb
notb
push
imul
dec
sub
ret
pop
lahf
fldenv
out
mov
inc
arpl
sub
clc
mov
mov
rcll
mov
xchg
out
push
iret
jecxz
sub
xor
movsl
pop
cmpsl
pop
pop
xchg
adc
enter
xchg
push
lods
dec
cmp
fdivrs
mov
fistpll
cltd
jecxz
mov
lret
cld
xor
test
mov
lock
lods
jecxz
ficoml
or
stos
arpl
mov
xchg
or
repz
pop
jae
mov
jmp
lock
std
bound
dec
imul
cmp
pop
push
xor
mov
add
sub
sub
dec
xchg
movsb
add
xchg
pop
adc
jg
push
mov
iret
jne,pt
sbb
jo
mov
mov
pushf
sbb
call
or
cli
mov
movsl
call
lahf
in
fiaddl
inc
xchg
fs
adc
call
xchg
outsb
cmp
xor
pop
test
mov
call
clc
xchg
movsl
sbb
out
lcall
mov
cmpl
mov
jl
mov
cmpsl
sahf
dec
scas
bound
xor
and
rorb
ret
loop,pn
xchg
dec
sbbb
mov
sahf
jb
bound
xor
and
rorb
ret
loop,pn
xchg
dec
sbbb
mov
sahf
jb
bound
xor
and
rorl
ret
jecxz,pn
xchg
dec
sbbb
mov
lcall
add
mov
mov
mov
loop,pn
in
or
dec
adc
push
mov
sub
mov
andl
andl
andl
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
mov
lea
push
movl
movb
movl
movb
movl
movb
movb
movl
call
leave
ret
jnp
imul
ret
outsl
inc
shrl
push
xchg
cli
jmp
fildl
push
mov
add
repnz
ret
cmp
or
jmp
jmp
fildl
push
mov
inc
mov
bound
repnz
push
shlb
sahf
xor
loop
enter
mov
mov
jbe
adc
loop
pushf
pop
mov
xchg
sub
ficompl
adc
push
adcb
inc
inc
mov
jecxz
cwtl
imull
mov
sahf
sarb
ret
sub
icebp
fwait
add
jecxz
imull
icebp
scas
mov
out
adc
jecxz
inc
fistpll
ret
jp
jnp
xchg
shrb
les
or
popf
ljmp
and
inc
sub
out
xchg
stos
push
les
sti
xchg
sti
xor
push
inc
jno
xor
in
xchg
and
call
call
bound
cmpsb
mov
clc
int
add
add
dec
fsubrs
cmp
loop
repz
push
rcrb
mov
add
repnz
fstl
or
sti
and
aaa
test
scas
cmp
inc
out
adc
or
push
int
sbbl
pop
mov
daa
mov
in
arpl
jns
mov
mov
xchg
and
sbb
jmp
fildl
push
mov
add
repnz
ret
cmp
or
fildl
push
mov
add
and
push
cmp
mov
iret
inc
xchg
sarl
inc
lahf
mov
and
or
sub
xor
gs
pop
out
popf
sbb
scas
inc
idivb
xchg
cmc
adc
adcl
or
movl
pop
push
cmp
xor
rcrb
sub
xchg
sti
inc
out
popf
orl
lcall
dec
jb
add
pop
call
outsl
lds
xchg
ret
das
mov
ljmp
add
stos
test
out
addl
sti
lret
int3
fisubrl
and
pop
push
cwtl
int
mov
jnp
es
xor
loope
les
mov
inc
xor
repnz
out
adc
fnstcw
adc
idivl
stos
pushf
aas
outsb
lods
pop
lods
daa
js
mov
mov
pushf
jmp
insl
jecxz
xchg
aad
add
loopne
pop
sbb
out
mov
stos
cld
hlt
add
cltd
and
xchg
mov
stos
ret
hlt
pop
xchg
bound
dec
andb
mov
sub
stos
outsl
inc
dec
idivb
fcoms
sbb
clc
roll
or
ljmp
or
push
fsubs
rorb
clc
cmp
lea
mov
cli
sub
mov
cs
mov
push
int
test
test
repz
or
aad
lods
fwait
pop
das
fwait
shll
mov
mov
push
test
out
mov
fisttpl
or
movsl
shrl
add
mov
mov
cld
inc
mov
leave
popf
out
pop
enter
sbb
jmp
test
mov
push
dec
shlb
push
imul
sub
call
outsl
xchg
clc
enter
inc
push
les
push
mov
xchg
sbbb
repz
outsb
fmull
es
out
or
cmp
scas
fwait
cli
jne
pop
xchg
fistpll
fcomip
xchg
call
xor
mov
and
xchg
fs
sahf
ljmp
stos
scas
dec
cmc
test
lea
fistps
push
add
push
mov
dec
push
outsb
arpl
pop
movsb
or
sub
dec
add
mov
xor
icebp
addl
rcl
and
rorl
inc
imul
mov
cmc
mov
jecxz
xor
push
shll
xlat
jmp
dec
xchg
mov
push
scas
repnz
jnp
repz
rcr
in
rol
push
add
scas
incl
and
mov
fwait
fwait
cmp
clc
sub
pop
sti
pop
lret
pop
add
enter
arpl
dec
incb
adc
ss
test
mov
loop
xchg
fstps
shl
dec
adc
mov
jae
cmpsl
ret
sub
push
push
mov
adc
fstl
sub
sub
aaa
shl
xor
jo
xor
mov
xor
xchg
push
mov
lret
aaa
dec
or
add
mov
mov
gs
inc
dec
aad
mov
std
inc
gs
pop
lahf
int3
mov
fmull
jp
into
inc
ret
pop
out
xor
adc
rolb
adc
into
sbb
outsb
or
and
fs
fwait
pop
mov
jno
jle
fbld
inc
and
push
stc
mov
aad
xchg
ret
push
rolb
dec
fsts
ret
xor
lret
pop
push
xorl
cmp
js
push
in
inc
movsb
dec
jno
cmp
dec
leave
fidivl
outsb
adc
fistps
push
fcom
or
inc
scas
jecxz
loope
sub
aas
xchg
mov
adc
jmp
std
stc
aaa
mov
push
leave
clc
cmp
data16
sub
mov
jp
push
clc
cmpsb
adc
rolb
aas
mov
mov
jbe
mov
test
rcrl
adc
pop
ret
push
inc
mov
lcall
mov
adc
fs
cmp
jo
sub
mov
xor
add
add
rolb
aaa
out
jns
or
pop
lea
adcb
cmc
icebp
movsl
or
add
insb
lods
xor
fsub
pop
xchg
xchg
out
jb
nop
jno
jne
dec
cmp
nop
adc
jno
or
jo
adc
pop
mull
pop
ret
loopne
incl
ds
movsb
adc
and
pop
cmp
jmp
dec
call
pop
xchg
push
test
jbe
mov
jl
and
pop
push
and
jl
mov
das
lock
pop
repz
adc
mov
cld
shrb
lods
js
mov
mov
test
mov
pop
scas
test
sbb
lret
les
jg
xchg
sahf
or
or
xor
mov
jle
push
mov
pop
xchg
add
push
or
loop
lret
inc
pop
out
in
adc
in
or
sbb
loopne
inc
je
add
lea
jb
jne
cld
adc
cmp
jle
sbb
inc
sbb
dec
test
push
inc
jno
ret
inc
stos
repz
ds
fdivrs
decb
adc
ret
lock
xchg
and
dec
push
pushl
pusha
adc
lret
xorl
inc
xor
jnp
xor
sahf
fldt
push
push
sub
rol
mov
push
mov
xchg
lds
lahf
hlt
lret
or
cmp
mov
adc
sbb
dec
mov
sub
out
lea
push
pusha
repz
cmp
mov
decb
gs
mov
cmp
pop
shll
jb
mov
in
lahf
and
fwait
jp
adc
hlt
bound
xchg
nop
icebp
fcmovbe
cmp
mov
adc
lds
and
push
in
idiv
popf
loop
dec
dec
fwait
xor
and
std
rcrl
push
or
outsb
cmp
push
pop
nop
jne
push
xlat
fucomp
rcl
rcrb
cwtl
jo
dec
fimuls
repnz
add
mov
xchg
mov
xorb
mov
aam
fwait
daa
int
add
xchg
and
ret
ja
scas
fcmovne
sub
imulb
test
sbb
adc
daa
ret
add
xchg
scas
mov
dec
icebp
stc
idivb
lret
js
repnz
xchg
mov
shlb
mov
es
pusha
in
loop
outsl
mov
xor
mov
push
mov
cltd
inc
popf
loope
xor
mov
inc
enter
lea
pop
inc
mov
push
mov
push
pop
mov
js
push
out
ljmp
xor
lcall
movsl
mov
cmp
and
mov
jle
cli
ficoml
in
mov
into
repz
fs
daa
dec
test
aaa
lds
shll
cli
xchg
test
mov
cli
sbb
insl
fstpl
mov
test
in
sub
xchg
fisttpl
cltd
lahf
push
and
stc
popf
mov
fistpll
pop
bound
and
pushf
js
cwtl
fsubr
lds
and
je
push
sub
push
mull
imul
fldenv
rcrl
mov
push
sub
and
out
jmp
mov
mov
mov
fcompl
pop
sbb
ficompl
sbb
loope
jbe
call
mov
fs
arpl
lds
pop
out
jg
push
xchg
scas
lret
sti
fnstenv
inc
cltd
sbb
or
push
lods
shrb
fidivrs
cmpl
pop
ds
sbb
ljmp
roll
and
bt
bound
push
lahf
ret
lret
scas
adc
es
loope
xor
push
adc
sbb
icebp
pop
add
pop
mov
frstor
mov
shlb
inc
iret
xchg
fisubrs
repnz
popf
movsl
aaa
punpckldq
pop
xor
idivb
fdivrs
push
aaa
into
sbb
and
out
popa
mov
add
test
cmp
inc
je
mov
test
inc
fdivr
pop
sub
addr16
jl
shll
and
sahf
test
mov
pop
enter
hlt
sbb
mov
ret
imul
jl
pop
dec
lret
lock
inc
xchg
or
outsl
js
xchg
jmp
dec
imul
dec
sti
push
push
xor
lcall
mov
mov
add
push
dec
hlt
addr16
and
insb
das
mov
sbb
push
mov
cmpsl
and
mov
cltd
leave
inc
test
mov
das
in
fists
dec
adc
xor
add
sub
add
ljmp
push
je
repz
jns
pusha
repz
cltd
in
sbb
filds
pop
mov
in
and
add
lahf
lahf
dec
imul
stc
dec
mov
xlat
mov
hlt
sub
inc
dec
sub
xor
ljmp
rorl
test
call
stos
pop
push
gs
jmp
adc
clc
test
fistpl
icebp
fucomip
ljmp
sbb
test
mov
movsb
adc
iret
push
mov
jnp
cmp
bound
bound
mov
andl
dec
sub
pop
outsl
inc
ss
mov
lcall
insb
out
imul
mov
add
push
mov
out
rorl
fimull
dec
xor
jae
std
xor
fldenv
or
outsb
stos
mov
cmp
out
jnp
mov
adc
test
push
cmp
clc
das
mov
jns
dec
ret
lea
imul
int3
push
dec
in
repnz
jle
in
dec
roll
mov
orb
in
in
pop
xor
push
movsb
leave
movl
hlt
cmp
add
out
icebp
push
pop
mov
or
or
mov
les
cmpsl
cmp
int3
fdivrl
adc
jnp
push
lock
fnstenv
cld
pop
insb
xor
jne
adc
mov
push
mov
mov
pusha
cmp
pop
enter
lea
lods
dec
clc
sbb
bound
addb
push
or
push
fcmove
stos
cld
arpl
push
add
addr16
jns
jae
std
lock
dec
pushf
je
or
je
cltd
adc
jb
or
xor
mov
aam
out
adc
push
clc
mov
mov
add
mov
and
cld
mov
test
jge
push
pop
scas
inc
js
pop
cmp
sbb
fs
inc
inc
sub
xchg
insl
jns
mov
inc
pop
icebp
fdivr
sbbl
les
in
rcl
lret
daa
addr16
enter
push
jae
jg
push
cmc
cmp
ficomps
and
xchg
adc
sub
in
xchg
std
jp
bound
mov
fimuls
lods
jo
or
test
add
test
ja
movsl
inc
mov
jge
mov
jb
sbb
add
mov
or
dec
xchg
aam
xor
dec
and
sbbb
inc
pop
daa
jns
cwtl
imul
inc
rcrb
dec
mov
pop
or
fsubrl
lahf
fiadds
je
and
and
jmp
sub
jg
xchg
mov
dec
jmp
shrb
inc
inc
jecxz
mov
add
jns
and
into
mov
jecxz
pop
xor
xchg
sbb
mov
cmc
popf
jnp
jne
xor
outsl
sbb
adc
jg
cmpb
inc
mov
sub
xchg
fdiv
rolb
pop
scas
jae
pop
ja
pop
pop
xchg
icebp
jae
scas
add
imul
aaa
and
int3
ret
lret
inc
adc
dec
and
xchg
test
adc
dec
mov
fs
or
pop
out
or
jmp
and
lahf
scas
adc
push
in
js
cmp
lahf
fistpll
xlat
inc
jp
sub
lock
mov
inc
loope
sbb
fildl
das
or
and
pop
jno
inc
out
dec
mov
pop
add
lea
jns
jle
inc
in
mov
sti
mov
add
ljmp
mov
scas
mov
clc
inc
jmp
cmpsb
es
call
or
mov
fdivrl
lahf
outsb
jp
data16
std
pop
push
mov
negb
out
pop
cmp
arpl
fwait
pop
dec
fcoml
push
sahf
xchg
scas
push
mov
hlt
repz
addr16
dec
xchg
add
out
xchg
pop
cld
fldt
lods
mov
mov
sbb
dec
xchg
xchg
in
cmc
adcl
jae
cmp
mov
fists
shll
xchg
dec
daa
ss
cld
xchg
xor
sbb
jo
xchg
and
push
nop
add
xor
cli
and
jae
sar
or
sub
cmp
adc
mov
xchg
loop
sbb
cld
into
jbe
ljmp
adc
mul
sub
mov
jmp
adc
pop
das
mov
dec
cwtl
jb
xchg
or
lret
push
or
xor
les
lret
int3
test
inc
bound
das
arpl
sbb
in
sub
sbb
xchg
lods
mov
and
iret
push
xor
mov
inc
enter
outsb
push
push
iret
xchg
sbb
sbb
jecxz
push
and
mov
push
mov
mov
pop
mov
jmp
jge
jne
in
add
divl
dec
push
outsb
xor
jnp
aas
inc
fs
mov
and
daa
add
roll
je
in
sbb
push
or
fbld
xorb
ror
lods
dec
daa
outsl
mov
xchg
test
in
call
cltd
jge
imul
jo
insb
sti
cmpl
ficoml
mov
fadds
mov
xor
ljmp
lcall
xchg
rorl
mov
leave
sub
xor
or
lea
pop
pop
push
add
fwait
pop
std
xor
add
fcoml
loope
shl
or
jle
jmp
cmp
cmp
jae
jnp
xor
mov
push
lahf
add
icebp
out
or
imul
scas
jbe
sbbl
cmpsb
mov
ljmp
dec
fdivrl
jo
push
mov
or
lds
in
inc
push
jg
rcrb
mov
mov
imul
fsts
rolb
into
aas
out
dec
xlat
adc
push
imul
sbb
outsl
add
in
lret
insl
or
stc
jp
and
gs
sbb
and
shlb
fidivrl
mov
xchg
jo
dec
dec
dec
jmp
and
xchg
js
into
push
pop
pop
add
pop
loopne
jle
mov
cli
fwait
mov
xor
sbb
add
cli
jne
loop
in
jl
cli
mov
mov
pushf
xor
mov
or
dec
imul
test
insl
push
in
push
sbb
cmp
mov
nop
mull
or
cmp
push
lret
mov
push
cmp
stos
adc
xor
lock
push
jecxz
inc
cmp
bnd
repnz
mov
push
stc
inc
insb
jmp
std
xchg
cs
into
call
add
sbb
dec
add
pop
test
cmp
add
mov
mov
pusha
inc
jbe
outsl
sarb
data16
push
xor
adc
lods
stos
xchg
push
mov
mov
in
lds
add
sbb
push
mov
lock
imul
push
pop
repnz
add
divl
pop
nop
gs
loope
cmp
push
cmc
sarb
std
addl
push
mov
jl
dec
cwtl
xorb
fcomps
cmp
pop
in
into
into
pop
mov
divb
sub
cmpsl
enter
cmpb
fiadds
or
into
jno,pn
jmp
sub
pop
push
out
push
lcall
adc
sub
dec
xor
shll
mov
repnz
add
mov
aaa
or
fs
cmp
pop
adc
xlat
loope
bound
adc
inc
mov
js
ljmp
mov
push
push
sti
sahf
stos
int3
into
mov
xor
ss
imul
pop
btc
sub
cwtl
pusha
mov
mov
mov
or
cmp
aaa
mov
or
in
sub
sub
mov
std
jno
jo
cs
lret
inc
inc
jb
je
push
pusha
sahf
jmp
or
or
and
pop
mov
gs
pop
xor
jae
inc
or
adc
test
icebp
mov
cmc
xchg
insl
aaa
cmp
rcll
bound
in
in
lods
rorl
inc
hlt
or
inc
sarl
cltd
scas
sbb
jno
xchg
jnp
sbb
leave
xor
sbb
add
or
and
sbbl
mov
pushf
jae
lea
aaa
jmp
pop
scas
repnz
iret
js
push
pop
dec
popa
in
das
out
add
dec
mov
mov
orl
sub
adc
sub
shlb
jnp
pop
ss
sti
mov
lahf
inc
mov
inc
pushf
fs
fildll
jo
je
es
dec
add
stc
or
lahf
or
mov
scas
je
xor
xor
popf
std
ds
fstpl
add
nop
loop
lods
and
das
push
lcall
lcall
dec
sub
adc
cld
add
xor
add
mov
andl
repnz
loop
mov
inc
dec
mov
jae
or
js
bound
mov
in
pop
mulw
sahf
sahf
mov
sub
data16
push
scas
dec
loopne
lods
xor
insl
push
cmpsl
inc
aas
or
push
mov
xor
sub
ret
sub
cmpsl
iret
push
cwtl
mov
mov
stc
jo
shrb
inc
mov
sbb
inc
sub
dec
mov
lea
sti
das
mov
xor
push
ret
inc
inc
movsb
arpl
mov
lds
in
xchg
adc
fwait
pop
pop
push
bound
or
maskmovq
testl
das
mov
outsl
enter
adc
sbb
fs
push
or
sub
fcoms
push
sub
jno
mov
cmp
orb
outsl
inc
mov
add
cmpsb
outsb
sub
dec
sub
sub
imulb
and
jno
scas
sbb
mov
pop
push
inc
js
rolb
xchg
in
andl
jae
xchg
fisttpl
jmp
test
fnsave
loopne
ja
nop
sbb
push
lea
insl
xchg
pop
loop
movsb
xchg
sbb
loop
jl
xor
insl
andl
lret
gs
fdivrs
xchg
nop
dec
mov
and
mov
inc
or
mov
pop
leave
aad
insb
minps
stos
mov
movaps
mov
sub
pop
lods
arpl
imul
outsl
push
lock
loope
xbegin
pop
pop
xor
cmp
adc
out
icebp
cmpb
lea
push
rcr
mov
and
or
adc
rcrl
mov
repnz
fldl
mov
rcrb
xor
and
out
icebp
push
inc
pop
add
bnd
cli
ret
les
jb
cltd
mov
or
cmp
mov
js
cmp
ljmp
mov
lret
pop
mov
or
xor
sbb
negl
dec
daa
cltd
nop
sbb
mov
imull
add
adc
and
std
xchg
pop
popf
aam
inc
sub
fsubrl
je
imul
sbb
fstpt
xor
out
shl
and
loope
lds
sbb
xchg
lods
dec
loop
scas
add
mov
sti
cmp
ljmp
dec
mov
je
outsb
lret
sbb
testb
dec
jne
or
add
test
sbb
mov
sbb
rcrl
fisubl
loope
add
adc
cwtl
fdivl
ds
xchg
sti
and
xor
push
sub
imul
adc
scas
lock
mov
jle
sbb
pusha
loope
pop
dec
mov
mov
into
dec
stos
sahf
hlt
inc
lahf
jbe
shrl
mov
andl
test
scas
cmp
inc
test
cmp
out
les
das
add
jnp
sub
aam
jb
jo
xchg
call
std
add
mov
lods
fildll
dec
push
fisttpl
pop
and
popa
aad
pop
arpl
mov
rclb
add
cld
jns
in
dec
loopne
push
scas
dec
sarb
mov
or
fildl
push
mov
add
repnz
ret
cmp
or
fildl
push
mov
add
mov
cmp
or
fildl
push
mov
and
repnz
ret
cmp
mov
jno
lret
and
fs
je
fnstsw
into
sub
sbb
or
jp
dec
adc
scas
stos
jle
outsb
mov
cli
push
ljmp
into
sub
jp
push
pop
scas
xor
dec
stos
pop
lcall
fisubrl
lret
cmp
insb
sbb
or
pop
scas
dec
cmp
or
jne
jl
push
jb
mov
andb
xchg
lcall
rcrl
jge
and
repnz
mov
sub
jle
imul
push
and
into
cmp
xchg
out
loope
push
and
fcmovbe
fwait
and
mov
mov
or
jb
ljmp
dec
daa
imul
fimull
out
dec
ljmp
cmpsb
push
sbb
add
mov
inc
dec
push
cli
push
nop
push
cli
push
adc
shrb
lret
and
jp
dec
jae
xor
out
sub
fisubl
xor
mov
adc
jnp
mov
insl
stos
dec
stc
mull
lahf
xchg
cli
pop
mov
test
cwtl
sub
sbb
or
imulb
pop
or
mov
pop
mov
add
or
mov
mov
xchg
or
pop
loopne
lret
push
pop
ret
sbb
insb
mov
dec
test
jg
or
push
jmp
dec
xor
cs
sbb
jle
push
out
addr16
popa
jmp
mov
mov
mov
outsl
int
mov
pop
scas
dec
pop
mov
outsb
mov
cli
push
ljmp
into
sub
sbb
or
pop
scas
dec
pop
mov
outsb
mov
cli
push
ljmp
push
enter
sbb
pusha
cmp
outsb
and
dec
mov
call
xchg
fbstp
mov
inc
ret
int3
popf
adc
mov
orl
int
addr16
addl
mov
add
mov
adc
fisttps
lods
mov
adc
and
or
adcb
mov
pop
ds
fwait
xor
push
adc
mov
sbb
jmp
sub
xor
cli
clc
bound
mov
xchg
sub
fimuls
xchg
push
xlat
fildll
aas
in
aam
in
push
pop
and
xor
ss
bound
inc
inc
int
repnz
inc
int
pop
add
loopne
pop
call
rolb
or
lret
pop
sti
push
inc
or
sbb
notb
sbb
push
add
or
jns
push
call
xor
xchg
clc
cli
cmp
sarb
js
dec
xor
out
je
fcmovne
adc
mov
xor
pop
adc
loopne
xchg
push
jecxz
rcrl
leave
jl
or
in
lcall
sbb
pop
lcall
sti
mov
mov
mov
dec
mov
jg
mov
in
lods
xchg
jge
rcrl
jbe
xchg
xchg
pop
jecxz
adc
mov
punpcklbw
popf
sub
ljmp
push
adc
ret
mov
shlb
or
sti
int
adc
out
out
mov
aas
add
imul
int3
out
lcall
dec
mov
push
adc
and
ret
cmp
roll
dec
popf
cmp
xor
adc
push
outsl
lock
je
lret
sub
or
daa
aad
into
enter
adc
ret
pop
pusha
insb
mov
out
imul
sar
and
xor
push
imul
ja
or
imul
out
cli
sti
hlt
stos
and
in
popa
nop
aad
js
push
daa
outsb
mov
or
adc
faddl
pushf
or
je
sbb
sub
pop
pop
fbld
les
data16
jge
dec
inc
adc
sbb
sbb
sbb
pop
jb
out
pop
cmpsl
cwtl
stos
mov
pop
mov
cld
loopne
flds
inc
out
sub
movsb
mov
xchg
insl
and
jo
sub
js
mov
cmpsl
out
pusha
bound
push
jecxz
das
xchg
arpl
cmp
jmp
xchg
sbb
rolb
fistpl
pop
fbld
in
fiaddl
xchg
push
mov
aaa
cli
sub
adc
mov
or
gs
push
test
push
aas
out
jb
sub
sbb
ret
pop
popf
adc
fsubs
and
add
sub
sbb
cs
sbb
inc
out
sub
lods
dec
mov
mov
pop
fisttpll
movaps
xor
xchg
movsl
je
adc
mov
mov
cli
les
lahf
aaa
les
jbe
sarb
push
dec
and
sub
cmp
mov
or
into
inc
jmp
jmp
push
mov
xchg
std
je
jno
popa
je
mov
cmp
in
or
push
sbb
jg
insb
jbe
ss
pop
dec
scas
cmp
jmp
lret
jge
ds
adc
out
enter
pop
aaa
gs
popf
xor
mov
push
dec
adc
and
fs
cld
stc
add
push
pop
pop
inc
fistl
mov
int
bound
mov
fxch
dec
cs
out
sbb
and
fnsave
rcll
fisttpll
pop
aam
daa
jae
pop
jo
cli
cmc
cltd
sbb
fs
aam
mov
xchg
outsl
mov
jns
inc
dec
adc
js
imul
mov
add
sbb
call
ljmp
shrb
push
imul
sti
test
mov
gs
pop
ror
insl
mov
and
mov
lock
mov
loop,pn
ss
sub
add
aam
pop
xchg
popa
out
jns
pop
dec
sbb
out
lret
sub
jp
ss
dec
sbb
insl
add
aam
add
sbb
xchg
sti
cmpsb
cmpsb
addr16
mov
push
clc
lods
mov
push
sbb
xchg
insl
adc
mov
adc
cmp
xor
push
insl
sub
push
push
loopne
aaa
sahf
stos
bound
outsl
inc
pop
add
aas
es
mov
cmp
pop
movsl
sbb
repz
and
loopne
fcompl
fisttpll
lock
std
js
jecxz
pop
xor
mov
mov
adc
mov
sbb
sub
imul
fldt
in
cwtl
cmc
enter
push
es
cmp
shl
push
ljmp
ficoml
xor
scas
mull
pop
or
test
dec
push
mov
inc
nop
inc
out
pusha
movsb
pop
add
push
lret
shl
push
pop
sub
movsl
jae
cmp
popa
pushf
mov
sbbl
stc
sub
pop
adc
pop
loopne
cli
inc
inc
pop
stc
into
push
cmpsl
hlt
mov
push
sbb
mov
cmp
data16
mov
ds
nop
push
dec
pop
int3
inc
adc
sub
xchg
xor
lds
xor
imul
mov
xchg
repnz
jl
sbb
and
and
lock
rcrb
ret
cli
lods
or
in
fs
adc
sub
push
xchg
push
nop
fisttps
pop
sarb
sbb
pop
popf
mov
mulb
cmpsl
pop
and
xor
mov
out
orl
mov
testl
arpl
pop
int3
dec
fwait
cmp
jge
jge
ret
dec
adc
xchg
jo
adc
fwait
imul
pop
int3
sahf
jno
imul
jl
addr16
loopne
ret
push
jp
ds
enter
arpl
sahf
dec
pop
sub
jmp
sti
xchg
or
sub
adc
in
push
push
mov
cmp
sub
test
aad
loop
loopne
lahf
pop
aam
gs
sub
outsb
mov
aas
test
test
sub
icebp
fwait
push
push
or
xlat
pop
inc
rep
mov
roll
mov
xorb
sbb
fstps
ljmp
std
xchg
push
lds
inc
add
cmp
mov
aas
ror
imul
or
push
push
or
push
mov
xor
xor
sub
mov
cmc
xor
push
mov
in
pop
push
push
or
push
arpl
lahf
jb
cmc
mov
sahf
inc
inc
fstl
stos
pop
and
hlt
add
int3
pushf
bound
xchg
adc
sarb
xchg
cmpb
jbe
push
loop
in
cmpsb
sub
and
xor
imull
sti
ds
fdivl
sbb
mov
cmpsl
pushf
cmp
sbb
adc
popf
mov
sub
xchg
ja
add
push
sub
pop
dec
and
mull
sarb
adc
and
stos
clc
movsbl
fnstcw
sbb
jb
cmc
mov
repz
or
fmuls
jl
fbld
jae
out
adc
mov
mov
aaa
inc
outsb
loop
cmp
xor
out
adc
neg
movsb
subb
jp
sub
in
loope
mov
pop
lahf
sub
xor
lods
imul
iret
loop
int
jne
push
push
xlat
mov
cmp
add
popf
pop
xchg
daa
call
sbb
or
cmpsl
fcom
add
adc
xchg
jo
imul
xchg
mov
iret
pop
xor
xchg
cmc
lret
mov
aad
xchg
pop
scas
push
leave
jle
aam
fcompp
cmc
clc
xor
sub
fistl
sbb
shl
sbb
ja
mov
addr16
fcoms
ja
shrl
pop
out
ja
pop
inc
hlt
popa
pop
xchg
cmp
or
orb
inc
fimuls
add
or
jle
mov
ret
fmuls
stos
pop
inc
nop
outsl
lods
std
push
lods
xchg
cmp
stos
push
jns
ja
jne
fidivrl
fcomps
mov
add
aas
mov
push
rcrl
pop
les
add
lret
inc
out
into
jg
jl
sub
inc
cmp
or
push
xor
lods
pop
adcl
test
push
push
paddb
sahf
fsubp
jne
cmp
push
popa
mov
aaa
imul
pop
test
xlat
adc
mov
pushf
xor
sbb
mov
in
cmp
fiaddl
pop
int3
stos
inc
arpl
loop
xchg
arpl
jp
cmove
sub
pop
neg
xor
fstl
inc
sbb
and
push
cli
pop
mov
shll
lcall
movsb
mov
jp
and
iret
mov
dec
jl
in
rolb
xor
sbb
js
das
mov
mov
xor
fadd
or
sbb
sbb
or
push
arpl
lret
mov
addr16
lret
jnp
ficompl
or
mov
cli
adc
sub
xchg
dec
mov
mov
cmp
and
fidivl
push
data16
mov
out
pop
mov
pop
xlat
test
int3
jo
and
dec
shrb
push
cmp
xor
cmp
ret
xor
xor
xor
aaa
pushf
and
or
sbb
ss
icebp
test
enter
push
xchg
and
call
or
mov
fiaddl
bound
ljmp
mov
inc
jge
mov
imul
rorb
mov
adc
xchg
cmpb
push
ret
and
cmpsl
test
mov
sbb
push
hlt
mov
sub
shll
out
je
mov
outsb
cmpsb
shr
add
mov
cmp
dec
repz
testb
cmp
sti
xor
out
cmp
sbb
aam
pusha
rolb
shlb
inc
divps
push
or
test
mov
push
fisubl
imul
xor
cli
sub
add
xor
shrb
xchg
orb
push
dec
clc
call
push
pop
sub
sbb
cmc
jmp
pop
test
cmp
popa
mov
jo
xor
shlb
push
cltd
xlat
loopne
out
or
scas
data16
aad
cmp
rcl
dec
hlt
rcrl
lods
pop
aam
and
add
add
sub
stc
mov
push
push
popa
push
xor
cmp
ret
std
ficomps
mov
out
xchg
and
xchg
or
je
and
fsubl
xchg
arpl
hlt
pop
xor
inc
push
mov
movsb
or
and
and
fdiv
adc
xchg
pop
aas
xchg
cmp
mov
outsb
jne
push
xor
adcl
cli
dec
xor
xor
repz
clc
test
xlat
int3
xchg
cmc
inc
cwtl
xchg
xor
xor
fsubr
in
mulb
shlb
sti
fs
dec
out
mov
enter
les
mov
cmp
sahf
pcmpeqw
pusha
gs
add
das
ds
outsl
push
xor
lock
loop
pop
sbb
lods
lcall
subl
push
inc
outsl
push
mov
stos
add
imul
xchg
out
insb
adc
movsb
dec
sbbl
pop
sub
cmpsl
cmp
imul
cmp
xchg
xchg
xchg
out
dec
jb
fdiv
mov
data16
loope
mov
stos
icebp
adc
jb
hlt
mov
add
xor
lds
jne
mov
nop
movsb
adc
jle
jmp
repnz
ja
ror
and
mov
inc
jg
sbb
ret
push
add
mov
push
stos
dec
jo
sbb
xor
das
mov
xchg
fisubs
cld
adc
lds
inc
push
mov
or
push
xor
mov
test
xchg
xchg
jo
inc
test
cltd
pop
lret
push
and
jp
adc
insb
xchg
ficoms
mulb
mull
dec
sbbb
inc
pop
fucomip
ja
mov
jecxz
sbb
outsl
js
xchg
or
stos
push
xor
repz
cmp
aam
fcomip
lea
ja
jb
sub
fs
sub
scas
sbb
andl
scas
pop
in
pop
cmc
or
mov
jl
sub
es
mov
jecxz
pop
test
cmp
add
pop
push
add
test
push
lock
sti
add
push
pop
jp
lock
pop
or
xchg
jecxz
or
mov
mov
fldlg2
lret
mov
add
or
mov
pop
jbe
pop
decb
push
mov
es
lcall
jle
jp
pop
in
lods
adc
sbb
pushf
ror
dec
and
repnz
loope
nop
dec
mov
retw
or
mov
pop
ds
fwait
sbb
test
adc
mov
adc
add
xchg
ret
mov
push
mov
lock
mov
mov
orb
das
and
test
jg
cs
sbbb
sti
mov
fldenv
dec
adc
sbb
mov
inc
add
push
or
nop
add
cmp
stos
xchg
dec
push
add
dec
pushf
lret
sub
popf
push
or
cmp
sub
insl
inc
jno
popa
inc
xlat
loopne
xrelease
in
mov
cs
xor
pop
mov
mov
test
imul
adc
dec
push
xlat
mov
mov
pop
std
dec
es
mov
mov
sub
jns
add
push
stos
dec
jge
add
sbb
das
js
fsubr
imul
in
daa
jne
xchg
mov
popa
xchg
es
jp
cltd
call
aad
jge
out
sarl
xlat
mov
push
mov
push
daa
add
jl
fstpl
mov
xchg
and
inc
lds
adc
inc
sub
dec
xor
inc
movsb
inc
and
rcl
jge
adc
cmc
test
mov
mov
and
loop
lahf
dec
sub
inc
jge
or
jbe
das
jg
mov
cltd
add
rcr
cmpsb
inc
add
lret
inc
jne
mov
inc
mov
in
out
or
outsl
add
js
pop
mov
iret
imul
out
test
fildll
sub
ret
or
xchg
aas
pusha
push
rcll
xorl
loop
xor
iret
sbb
cmc
std
aaa
inc
pop
xor
and
clc
test
das
and
clc
test
aas
pushf
jne
fsts
aad
mov
pop
or
push
stc
sbb
cltd
loope
or
lcall
mov
adc
cltd
xor
popa
lcall
inc
fsubl
sub
cmpl
div
xor
push
jmp
and
sub
ss
dec
pop
push
in
xchg
out
idivl
rclb
ret
imul
fs
cmp
in
and
fistps
sbb
shr
outsb
loope
ss
sbbl
xchg
xor
xor
sbb
cwtl
icebp
insl
pop
js
push
inc
add
lahf
orb
popa
inc
and
out
xor
jg
or
cs
addl
push
inc
call
loop
ds
xor
inc
test
cmp
jbe
xchg
and
xchg
cld
addr16
add
test
inc
dec
lcall
nop
cmp
mov
lcall
pusha
aaa
push
jbe
sbb
into
push
push
sub
hlt
cmc
jmp
dec
sbb
xor
cwtl
outsb
pop
shrl
fcompl
jmp
cmp
enter
pop
std
add
jp
or
push
mov
es
mov
popl
jbe
push
jne
inc
in
sub
call
mov
loop
cltd
and
xor
cltd
ljmp
jg
jge
out
sbb
rolb
lods
inc
fmull
xlat
pop
hlt
fisttps
adc
dec
mov
inc
adc
sahf
int3
out
mov
outsl
mov
add
inc
pusha
push
mov
imul
les
push
or
push
jg
cmpsl
cltd
mov
pop
sub
imul
cmp
and
xchg
sub
ja
xchg
popf
pushf
ds
test
scas
cmp
enter
ret
and
jg
add
xor
daa
outsl
test
clc
cmp
xchg
cld
loopne
cmp
mov
or
scas
shr
mov
loop,pn
dec
out
fldcw
jo
dec
sbb
sub
push
out
xchg
mov
lcall
cmpsl
imul
dec
nop
cmp
mov
push
iret
shr
std
repz
adc
inc
outsl
fstpt
mov
or
pop
sarb
movb
sti
cmpsb
sahf
sbb
mov
test
pop
addb
std
inc
fisttpl
jnp
or
xor
leave
pop
addl
jge
inc
cmpsb
pop
inc
mov
xor
popa
xchg
loope
sub
ret
int3
insb
and
xchg
dec
and
cmovns
arpl
ja
pop
daa
mov
jae
cmpsb
dec
push
aad
xor
out
sbb
ljmp
lods
fistpl
in
add
jns
xlat
in
daa
xor
or
or
pushf
jmp
xchg
lcall
shll
mov
sti
lock
push
lret
or
dec
out
sbb
pushf
movsl
icebp
mov
aam
cli
mov
add
fsubrs
sbb
negb
mov
mov
lods
sub
mov
push
lock
push
pop
jo
jo
cwtl
sbb
icebp
out
les
cs
pop
cmp
outsl
shll
mov
xchg
mov
outsb
adc
mov
jle
adc
into
xor
mov
movsb
dec
push
jo
mov
rcrb
cld
enter
jne
inc
add
mov
call
imul
inc
rorb
gs
mov
mov
in
mov
out
call
scas
jno
imul
mov
mov
xchg
outsb
bound
sub
add
adc
clc
adc
sub
fidivs
push
pop
repz
sti
js
ja
adc
mov
loop
or
pop
lods
pop
adc
add
clc
lret
stos
cmp
dec
cmc
mov
add
lahf
fmulp
je
outsl
rorl
add
pop
xor
daa
pop
je
fwait
add
mov
jne
inc
call
pop
pop
test
xchg
mov
mov
mov
repz
pop
in
pop
lock
xor
inc
sub
inc
push
aas
int
or
sbb
movsl
shlb
and
call
and
xchg
fsubp
rcrl
clc
and
sbb
lds
xchg
ja
cs
mov
rcl
ljmp
stos
sbb
jmp
cmp
imul
push
lret
notb
xchg
js
push
xor
outsb
add
stos
xchg
cmp
lahf
mov
popf
dec
stos
pop
fstpl
push
adc
rclb
jbe
mov
in
sbb
and
loop
mov
cmp
sbb
shlb
xor
adc
repnz
jmp
xchg
inc
shrb
mov
inc
aaa
js
dec
or
cmc
imul
push
fidivs
insl
or
dec
out
push
into
and
nop
push
scas
inc
leave
mov
ficoms
ja
shrl
ret
in
dec
insb
int
lods
sarb
ss
or
sub
mov
add
fsub
jmp
inc
jecxz
sar
addb
xor
decb
popa
test
aaa
mov
jp
in
hlt
lods
jb
sbb
loope
xchg
and
push
inc
sub
pop
mull
movsl
fcmove
and
adc
sbb
adc
mov
mov
add
dec
mov
jae
push
mov
ret
idivl
mov
in
ret
mov
fyl2xp1
cmp
push
ret
mov
out
pop
pop
scas
or
and
outsl
push
xor
inc
inc
mov
icebp
push
pop
insb
sub
and
jae
pop
dec
rcl
scas
loop
xlat
push
mov
add
mov
xchg
je
or
pop
push
dec
adc
pop
arpl
rol
out
push
repz
clc
jb
xorb
out
dec
and
and
dec
and
add
xchg
aad
adc
mov
jp
push
pop
scas
dec
pop
mov
outsb
mov
cli
push
ljmp
into
sub
sbb
or
pop
scas
dec
pop
mov
outsb
mov
cli
push
ljmp
sub
jp
push
pop
outsb
dec
pop
mov
outsb
mov
cli
push
ljmp
xchg
sub
sahf
push
pop
cs
pop
mov
outsb
std
imul
xor
in
sbb
pop
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
push
or
sbb
imul
dec
bound
add
jp
xor
nop
sti
stos
jmp
sahf
lret
mov
mov
or
jnp
imul
dec
or
push
pop
mov
jmp
fwait
scas
out
fidivrl
or
sbb
sub
pop
pop
push
jp
mov
aam
mov
xchg
fmuls
aas
jns
pop
nop
lock
mov
imul
data16
icebp
pusha
icebp
inc
inc
into
scas
adc
sbb
inc
inc
loop
dec
pop
hlt
xlat
adc
scas
lock
lcall
push
ficompl
cmpl
sbb
jnp
jmp
xchg
pop
jp
dec
mov
mov
add
adc
out
addr16
ss
xchg
clts
aas
ds
sbb
pop
cmp
lcall
adc
push
fimull
cli
fmulp
mov
test
stos
aaa
in
mov
sbb
popl
mov
jmp
ficomps
ficoms
or
xchg
into
xor
loopne
repz
jmp
push
fisttpl
add
jnp
pop
cmp
dec
dec
pop
cmp
jp
mov
and
xchg
fidivrl
or
jnp
or
dec
push
mov
stc
mov
repnz
in
lahf
pop
retw
jbe
bound
pop
push
cmp
mov
sahf
int
call
into
dec
js
or
inc
pop
js
pop
cmp
jp
mov
lcall
mov
mov
or
jnp
imul
dec
or
push
jp
mov
lcall
mov
mov
or
std
push
mov
xor
push
mov
xchg
loopne
inc
push
inc
mov
inc
lret
shl
dec
lret
dec
js
cli
add
lcall
popa
dec
inc
fs
mov
push
inc
mov
and
clc
loop
loop
cmp
lret
mov
icebp
cmp
mov
loop
sub
stc
std
insb
lea
mov
clc
hlt
ret
ds
adc
ret
ja
fwait
imul
cmpb
call
fnsetpm(287
push
inc
dec
cmp
out
mov
scas
lret
push
ja
mov
cld
pop
sbb
xor
fcoml
lods
jle
xchg
in
pop
add
push
int
sahf
push
mov
cmp
mov
pop
mov
dec
in
mov
shll
mov
lods
add
xor
fwait
pop
lret
cmpsl
outsl
xor
jae
stc
inc
and
jle
mov
movsb
ss
ljmp
repz
addb
add
sbb
mov
add
xchg
arpl
adc
adc
dec
icebp
ljmp
pop
shrl
paddd
sbb
ja
cmp
mov
lds
mov
add
add
pop
int
mov
pop
mov
sbb
testl
out
in
pop
add
xor
push
cwtl
or
sahf
mov
out
inc
push
lods
mov
fstpl
cwtl
cwtl
sbb
push
cmp
mov
and
fbld
popa
out
je
imul
ljmp
int3
mov
mov
adc
shlb
jns
dec
inc
popw
icebp
push
addr16
xor
pop
test
cld
mov
push
out
outsl
cmpsb
jp
ja
sbb
dec
add
lret
jle
fidivs
lea
jbe
push
push
push
cli
inc
ret
push
out
cmp
or
lock
add
rclb
or
and
inc
mov
mov
inc
add
pop
push
adcb
jg
stc
int3
dec
sbb
test
nop
dec
xchg
cmc
pop
or
push
xor
sti
mov
test
decb
es
test
in
test
mov
idivb
jge
pop
inc
jmp
inc
mov
lods
xor
leave
in
cmc
data16
js
sbb
push
cmp
inc
aam
sbb
subl
cwtl
in
cmp
loopw
and
negb
popa
ficompl
outsl
fwait
jo
fiadds
sub
cli
xor
shlb
imul
insb
dec
push
push
leave
xchg
mov
and
aam
addr16
and
test
rcrl
xchg
mov
dec
jmp
shll
jo
mov
add
and
jl
cltd
inc
lds
call
push
daa
jmp
jbe
or
cmp
fwait
fwait
lahf
mov
push
cld
xchg
or
outsb
gs
sbb
fistpl
lcall
cmc
add
rcrl
je
aaa
mov
movlps
jle
xchg
stos
jb
cmp
daa
pop
outsl
mov
lret
ficompl
jp
push
sub
mov
add
dec
int
push
dec
lods
loopne
add
imul
stc
add
loopne
out
jbe
rorb
dec
leave
push
ja
pushf
mov
insl
rcrl
int
dec
adc
or
sbb
out
xor
cwtl
je
jl
pop
mov
pop
add
enter
jae
fdivrl
icebp
shl
add
test
sbb
mov
jmp
add
sub
in
je
cli
dec
jns
inc
xchg
les
outsl
xchg
ret
mov
dec
jmp
fidivs
es
inc
pop
push
mov
pop
mov
es
jnp
stos
ljmp
xchg
sub
shlb
sbb
jb
stc
ret
les
iret
push
fiadds
ret
lahf
pushf
xor
or
bound
imul
jmp
idiv
push
jbe
sbb
pop
mov
arpl
nop
adc
mov
ret
sbb
inc
sahf
stc
cmc
aam
mov
loopne
std
xchg
mov
lock
cmp
lret
jmp
push
mov
adc
sbb
cld
sbbb
pop
repz
adc
sub
add
test
in
call
in
in
outsl
pusha
repz
scas
sbb
push
mov
mov
or
jl
fwait
mov
sbb
mov
sub
push
adc
roll
cmp
xchg
or
lret
mov
andb
sbb
lock
dec
cmp
insl
test
aas
les
pop
lds
cs
aas
inc
sbb
xchg
cmp
mov
mov
jmp
cmp
push
xchg
cmp
inc
sub
out
and
sbbb
lock
pushf
add
aam
mov
testb
jae
lret
adc
repnz
fisubs
ds
outsl
dec
pop
das
add
push
jbe
sbb
sub
leave
shll
or
int
movb
push
sbb
lahf
push
push
lahf
push
xor
or
arpl
mov
leave
int3
jecxz
ret
jnp
push
sbb
add
pushf
das
js
cmc
in
mov
cmpsl
idivb
mov
cwtl
cmp
das
adc
xor
call
cwtl
hlt
pop
movsb
shlb
xchg
mov
test
jbe
xchg
jge
xchg
pop
lea
pop
sub
inc
out
ljmp
mov
loopne
jbe
push
test
dec
xchg
dec
pushf
cmpsb
ljmp
je
pushf
in
jecxz
cwtl
mov
and
test
jecxz
jo
mov
mov
jmp
or
call
xor
fdivl
cmp
call
leave
lcall
or
sbbb
lods
out
sub
xor
pop
cmp
jge
nop
adc
int3
inc
sbb
xchg
insb
rolb
jbe
int
lods
lock
cmp
mov
add
fs
add
inc
push
lahf
lret
inc
aad
mov
pop
inc
cmp
jbe
dec
mov
mov
jg
push
cmpl
ret
popa
es
and
xchg
mov
lret
xchg
add
sub
inc
cld
push
and
shlb
fisttpll
cmpsb
leave
out
mov
inc
push
test
into
mov
and
outsb
bound
pop
ja
ret
das
insb
lcall
mov
mov
add
xchg
adc
je
pop
std
xchg
xchg
jmp
scas
pop
scas
mov
leave
mov
pop
rcll
call
pushl
xchg
into
std
jmp
add
call
test
mov
in
cmpsl
dec
bound
mov
adc
mov
push
cltd
cld
push
mull
xchg
push
adc
adc
mov
cmp
mov
fwait
pushl
adc
pop
jp
pop
in
imul
jl
mov
js
ror
pop
cmp
push
enter
call
mov
sbbl
fcompl
jae
push
mov
pop
dec
jle
lret
bound
push
and
pop
sti
cmp
fisttpll
xor
or
lds
in
xor
adc
cmpsb
xchg
xor
int
rolb
xchg
in
cwtl
outsl
mov
adc
out
pop
adc
xchg
mov
mov
mov
xlat
push
and
push
test
jno
push
js
leave
xor
addr16
inc
int3
mov
pop
cmp
cltd
dec
test
out
rol
sub
lods
push
enter
cmc
ljmp
xchg
lds
mov
dec
lcall
std
sub
and
push
cmp
mov
jmp
mov
clc
ss
ds
in
push
cltd
mov
das
movsl
sbbl
mov
outsl
xor
in
sahf
lahf
add
push
push
pusha
mov
das
or
insl
loop
mov
xchg
mov
pushf
fisttps
dec
jmp
aam
repnz
jge
inc
subb
negb
jnp
add
adc
repnz
lret
in
test
adc
mov
lret
subb
aam
xchg
mov
sub
bnd
xchg
push
faddl
rclb
xchg
lahf
std
mov
loope
adc
or
xor
repnz
pop
das
and
cmp
int3
popa
sub
int
xor
fcomp
mov
insl
ljmp
popf
fcmovb
test
push
or
or
xor
push
xchg
xor
xor
cmp
mov
aam
jp
out
add
sub
mov
cmp
or
xchg
mov
inc
adc
js
mov
std
sub
cltd
aaa
xchg
lcall
xchg
adc
pop
addl
imul
adc
fs
push
push
inc
xlat
and
hlt
rclb
jo,pt
js
pop
imul
cmp
aas
mov
xor
iret
xor
negl
repz
pop
xlat
lods
ficoml
xchg
ss
movsb
aad
sub
xchg
inc
xchg
adc
or
push
and
add
ja
les
loop
mov
or
jp
lret
xor
shl
ss
or
xor
jae
inc
test
sbb
loopne
cmpsb
xchg
ss
fdivrl
xchg
cmp
fcmovbe
push
jne
sti
mov
stc
cmc
sbb
cmp
test
adc
outsl
lea
out
mov
cmovbe
jmp
push
xor
fldcw
out
push
mov
cmp
jecxz
dec
mov
sahf
cmp
mov
mov
or
fs
dec
adc
adc
lock
insl
fildll
adc
es
inc
push
aas
and
icebp
sbb
sarb
fists
rolb
mov
enter
and
cmp
sub
mov
mov
mov
mov
and
or
loop
mov
push
and
mov
fidivrs
sbb
addr16
jmp
lcall
sub
jecxz
adc
stos
roll
pop
lahf
and
out
pop
xchg
mov
or
imul
into
pop
fstpt
push
ljmp
dec
daa
out
jbe
inc
push
hlt
fcomps
adc
mov
cmp
aaa
cli
loope
mov
and
lea
sub
idivb
cmp
sub
and
jmp
in
stos
pop
aaa
mov
sub
dec
sahf
jmp
ffreep
aas
mov
jns
push
inc
mov
cmp
and
iret
iret
ljmp
xchg
sub
sub
adc
pop
jp
dec
push
out
sbb
push
hlt
cmc
inc
mov
mov
data16
mov
mov
fidivrs
lea
sbb
mov
mov
fiadds
imul
rclb
sbb
xor
imul
sub
or
or
movsl
into
dec
inc
add
mov
int
repz
xchg
mov
fists
mov
lret
inc
xor
and
sbb
fmull
les
pop
or
insl
out
push
xor
jmp
fwait
loop
sbb
outsb
das
dec
hlt
or
push
push
das
mov
dec
pop
rcrb
push
outsb
ljmp
mov
pop
mov
sti
out
dec
shll
cmp
mov
push
fcmovnb
mov
loope
nop
leave
pop
lret
out
mov
mov
call
aaa
sbb
sahf
pop
bound
ja
iret
push
mov
aad
call
mov
aaa
dec
mov
dec
mov
js
sti
jl
ret
add
mov
icebp
push
dec
inc
aad
and
movsl
add
test
ja
and
mov
sarl
xor
dec
and
cmpsb
sub
rcll
push
push
lea
mov
pop
jmp
stos
outsb
push
and
sbb
testl
es
pop
and
clc
and
negl
mov
imul
push
or
mov
and
stos
mov
fwait
out
repnz
dec
into
xchg
mov
inc
sub
mov
fildll
scas
sbb
jmp
les
or
mov
cmp
nop
mov
push
xchg
repnz
in
gs
leave
lds
es
scas
or
addr16
adc
mov
mov
les
in
xor
sarl
and
jge
fs
ret
in
enter
push
mov
data16
sub
mov
fstl
loop
mov
mull
cmp
mov
mov
fsubl
shrb
push
mov
inc
fs
cli
imul
cmp
pop
cmpsl
adc
mov
repz
cli
rcrl
js
les
jge
cmp
in
pextrw
sub
xorl
imul
rorb
dec
in
orb
jmp
xchg
xor
xchg
xlat
inc
cmp
cmpsb
in
pop
mov
rorb
mov
fsubr
mov
rolb
dec
setg
fwait
not
cmp
mov
test
xor
dec
push
cmpsb
mov
imul
mov
loope
mov
das
sub
scas
pop
pop
push
pop
add
jp
jnp
push
inc
hlt
jl
lret
cmpsl
enter
movsb
push
cmp
push
sub
add
rcll
aaa
adc
dec
popa
int
push
mov
stos
arpl
sub
mov
aad
mov
cwtl
sar
sbb
daa
adc
pop
and
addr16
ljmp
loop
jle
lods
or
dec
daa
and
paddd
jl
aad
ss
in
data16
lret
xor
cmp
mov
push
inc
mov
xchg
jbe
jns
push
cltd
jg
lock
imul
and
dec
movsl
sbb
fs
push
pop
jp
pushf
psubsw
scas
cmp
add
scas
ret
push
adc
js
mov
pop
pop
inc
push
and
out
pop
rcr
stos
and
lret
out
and
fs
aad
sbb
cmp
lahf
sbb
pop
dec
mov
adc
sbb
pop
and
pop
mov
loopne
js
adc
adc
divl
sahf
dec
iret
insl
stos
cmp
out
les
fistps
enter
cltd
cmc
mov
loop
int3
aad
mov
dec
add
pop
mov
mov
and
jb
pushf
lcall
mov
imul
daa
jnp
or
and
or
ljmp
or
mov
rorb
enter
outsb
push
mov
inc
in
sub
mov
pop
cmp
dec
cli
bswap
mov
push
pop
adcl
mov
push
int3
adc
movsb
sub
shl
leave
pop
cmpsb
cwtl
cmp
leave
fwait
mov
pusha
xchg
ljmp
sahf
push
cltd
mov
scas
inc
inc
mov
push
jle
hlt
shll
add
in
stos
xorl
cs
xor
pushl
pop
add
cmpsl
pop
les
sti
out
mov
fsubl
push
push
mov
imul
pop
test
test
bnd
in
mov
pop
mov
scas
inc
fwait
mov
mov
push
faddl
jecxz
addr16
jmp
cmp
sub
cmovg
mov
or
dec
adc
inc
dec
das
aam
mov
jne
add
jg
dec
mov
insb
mov
imul
sub
adc
loop
cld
out
push
mov
lcall
test
pop
mov
jae
addl
xchg
fnstenv
mov
jl
cmp
mov
iret
test
sbbl
xchg
and
je
xchg
pop
xor
mov
lods
repz
aas
pop
orb
nop
inc
fwait
loop
daa
xchg
dec
in
push
pop
incl
jmp
aam
pushf
subb
mov
sub
and
clc
pushf
xlat
mov
popf
cmp
inc
hlt
aaa
dec
xchg
push
fcmovnbe
fdivl
dec
inc
addr16
insb
adc
ljmp
xchg
or
xchg
adc
sub
loopne
test
ret
or
adc
imull
popf
jmp
pop
adc
ficoml
pop
jecxz
cwtl
push
inc
out
and
sub
mov
mov
arpl
fildl
cmc
pop
mov
clc
or
shr
pop
and
jns
loope
jle
mov
jge
adc
mov
push
cmc
push
push
and
mov
mov
arpl
repz
xchg
and
cmpsb
jns
mov
int
pop
add
or
dec
inc
cld
test
lret
in
xor
add
stos
and
aas
pop
out
pop
sub
mov
jecxz
call
daa
push
xor
fmulp
hlt
cmpsl
movsl
push
mul
sbb
pop
mov
push
or
shll
stos
add
mov
nop
xor
fdivs
lcall
pop
mov
out
sub
push
sbb
int3
ljmp
push
xchg
jb
mov
int3
mov
mov
cmp
mov
xor
gs
or
icebp
daa
imul
insl
xchg
dec
add
popa
arpl
nop
sub
out
mov
idivl
dec
notl
pusha
jp
mov
out
push
movsl
push
mov
orl
shr
xchg
sbb
stc
mov
pushf
lret
push
push
sub
xchg
pusha
sub
mov
inc
or
test
test
cmp
push
xor
mov
or
xchg
or
sbb
arpl
jbe
sbb
lahf
dec
movsb
es
andb
incb
enter
mov
dec
pop
fs
add
cmp
jnp
adc
ja
js
shrb
inc
mov
out
ret
addr16
stos
popf
imul
mov
xchg
mov
mov
in
outsb
jnp
xor
ret
enter
inc
jo
call
lock
repz
fwait
repnz
lcall
pop
sti
aam
dec
xchg
mov
arpl
stos
dec
daa
and
jl
adc
popa
and
outsl
or
inc
xchg
add
sti
cltd
push
push
pop
xchg
pop
lods
jp
cld
loope
into
mov
lret
fidivrs
jo
dec
insb
rcrb
mov
push
xor
ljmp
rcl
hlt
aaa
out
mov
or
push
mov
xchg
sub
jg
xchg
loopne
push
adc
mov
dec
mov
add
jmp
out
and
aad
testb
sbb
push
pop
inc
adc
iret
or
addr16
pusha
xchg
fs
cli
lret
cmp
xlat
push
mov
dec
add
push
dec
jmp
fiadds
popa
jecxz
jb
cmc
lock
fcmovnb
dec
cmp
dec
nop
movsb
loope
dec
push
mov
fistl
aas
xorb
inc
callw
leave
pop
xlat
ds
pushf
popf
inc
mov
pop
lcall
out
mull
and
lods
mov
and
loopne
sbb
in
and
testb
push
and
cmp
mov
popf
or
setl
push
xchg
loope
or
push
daa
dec
add
das
rol
lods
sbb
shlb
sbb
dec
and
jno
data16
jecxz
xchg
adc
rorb
popa
jge
mov
cmpsl
divb
rorl
sarb
lret
lds
and
les
add
cwtl
ds
push
in
adc
xchg
sbb
sahf
es
rclb
jno
cmp
jg
jmp
sbb
add
dec
sbb
insl
test
add
movsl
xchg
ljmp
sbb
adc
xchg
and
outsb
mov
negb
adc
add
aam
cbtw
or
icebp
push
ja
cld
test
mov
fistps
rorb
shl
es
mov
icebp
mov
push
mov
idivb
push
in
add
add
test
mov
or
lock
std
sbb
sub
shrl
mov
mov
movsb
testl
or
push
adc
mov
inc
mov
add
cmp
popfw
and
std
aad
fwait
mov
insb
pop
fsts
scas
insl
ret
andl
pop
rorb
mov
cs
or
js
jge
jnp
lret
pushf
lea
mov
sti
pop
leave
jns
fstpt
or
pop
mov
lahf
xchg
jl
sbb
movsl
mov
mov
jle
fbstp
pop
orl
dec
mov
pop
loop
push
push
sub
pop
fidivrl
mov
sub
sbb
out
mov
mov
adc
mov
scas
mov
je
imul
ja
mov
inc
insb
sub
scas
or
mov
pop
scas
js
mov
aad
xchg
mov
xchg
aam
xchg
inc
shll
loopne
jp
inc
sub
sbb
pop
cmp
jp
mov
lcall
mov
mov
or
jnp
imul
dec
or
push
jp
mov
lcall
mov
mov
or
imul
cmp
dec
cvtps2pd
push
jp
mov
lcall
xchg
fidivrl
or
repz
sbb
pop
cmp
mov
push
stos
jmp
in
inc
add
push
mov
sub
cmpl
mov
je
cmp
je
push
lea
push
push
movb
call
call
mov
xor
xor
call
mov
xor
call
mov
mov
lea
push
call
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
pop
pop
test
jne
mov
not
mov
movb
or
mov
leave
ret
jo
cmp
jne
or
out
adc
and
push
mov
pusha
cmp
mov
mov
dec
lock
loopne
adc
and
xor
nop
lret
pusha
xor
add
push
call
mov
out
out
and
adc
pusha
pop
nop
cmp
inc
les
aas
xchg
jns
mov
mov
jbe
sahf
mov
aad
sub
mov
or
or
test
mov
nop
inc
call
push
aad
adc
cmpsl
outsl
cmp
inc
out
fadd
and
jnp
pop
test
test
inc
rcr
movsl
adc
mov
sub
xchg
nop
dec
lock
add
inc
sar
mov
fildll
test
or
test
popa
push
dec
outsb
inc
cmp
mov
loope
popf
inc
add
cmp
int
jo
lahf
lret
pusha
inc
mov
imul
icebp
and
adc
jne
fwait
xor
add
xor
ljmp
mov
dec
jmp
mov
cmp
dec
loop
lret
add
cmc
pop
subb
mov
dec
pushf
aaa
fidivrs
js
gs
dec
xchg
mov
subb
movsl
push
mov
pop
mov
inc
out
arpl
sbb
add
outsl
rcrl
aad
mov
pop
loopne
adc
and
push
cli
inc
lret
pusha
sub
sbb
dec
lock
loopne
adc
and
push
cli
inc
lret
pusha
sub
jb
inc
in
in
dec
stc
push
lahf
inc
mov
ss
adc
addr16
daa
jmp
imul
aam
movsb
or
inc
and
shl
ror
sub
sbb
jmp
pop
das
mov
push
into
inc
cs
mov
sahf
fidivl
lods
imul
movsl
cmpsb
fmull
cs
outsl
jns
sahf
popf
popa
mov
mov
insl
sbb
mov
stos
sbb
xor
sub
orl
dec
aad
imul
mov
in
xchg
ret
pop
mov
jg
lret
cmp
push
jmp
js
sub
pop
repz
adcb
add
in
inc
sub
cld
lock
or
test
aad
les
push
cwtl
mov
sbb
cmp
or
push
sub
cmp
jns
lret
repnz
sub
ds
in
xchg
sub
mov
addr16
xchg
xor
imul
jecxz
ja
cmpsb
sbb
mov
in
jne
mov
jge
stos
pop
mov
xchg
jns
cmp
rcrb
lret
fnstsw
push
xchg
rcll
add
xor
daa
sub
mov
gs
loop
and
daa
and
je
adc
lret
dec
inc
push
icebp
mov
xor
sub
xor
cmp
jns
movsb
in
mov
cmc
pop
int
insl
rcrb
int
pop
xchg
inc
mov
mov
sbb
cmpl
push
cmp
addr16
and
sbb
std
js
ret
xchg
mov
pop
push
mov
fists
outsl
pop
cwtl
stos
jae
inc
mov
and
xor
push
aaa
pop
sub
nop
sub
jp
cmp
xor
cmp
dec
push
sahf
sbb
ja
and
mulb
xorl
aaa
jecxz
adc
xchg
cmp
sbb
divl
scas
pop
int
sub
sub
fcoms
test
cmp
jecxz
jnp
dec
pop
jo
pop
insl
repz
pop
hlt
add
mov
adc
jle
xchg
pop
imulb
cmp
pop
dec
shl
dec
stos
xor
adc
insb
push
fnstenv
mov
push
fiadds
sahf
cmp
je
ss
push
das
cmpsb
out
or
idivb
std
sbb
mov
dec
int
cmp
mov
xlat
popa
pusha
mov
pop
xor
or
rclb
xchg
xchg
fists
dec
push
mov
lret
jge
fwait
lods
out
repnz
and
push
int
dec
aad
cmp
in
sbb
xchg
bound
dec
sbb
lods
and
xor
add
mov
addl
xor
pop
clc
test
dec
mov
jbe
fsubrl
mov
push
jno
mov
add
and
mov
dec
mov
add
mov
ret
ret
repnz
mov
mov
ja
sbb
call
pusha
js
pop
inc
or
outsb
in
movsb
jge
cmp
push
push
push
dec
test
adcb
sub
xchg
mov
mov
adc
rcrb
jae
jo
pop
cwtl
out
addl
addb
and
ds
mov
inc
out
cwtl
shrl
mov
mov
cld
xor
fs
sbb
out
mov
pusha
stc
leave
iret
mov
arpl
addr16
inc
xorb
cmpsb
dec
or
shll
mov
cltd
mov
addb
pusha
xchg
push
and
mov
add
ss
cltd
cmp
insb
mov
loope
fildll
xor
sahf
dec
push
mov
jmp
xor
stos
push
jg
jge
js
loopne
lods
jle
sbb
push
mov
jle
mov
fwait
mov
outsl
add
push
out
mov
lds
scas
repz
push
cld
idivl
xchg
dec
call
int3
stos
inc
add
jns
dec
pop
push
push
xor
outsl
test
xchg
cmp
jne
arpl
out
or
into
xchg
or
lret
dec
scas
jnp
pop
add
imul
movsl
mov
fdivl
jae
adc
mov
sub
inc
xor
mov
sub
dec
adc
inc
imul
jns
dec
cmp
rorl
aaa
inc
xchg
or
fs
clc
mov
adc
pop
push
je
add
mov
add
call
imul
push
ret
dec
sbb
jns
inc
mov
movsl
es
cmp
jge
jmp
jo
mov
sbb
pop
add
stos
fisttpl
je
jg
push
mov
and
inc
imul
dec
insb
mov
aaa
xlat
mov
lea
pop
dec
push
out
popa
mov
xchg
cltd
jb
sub
xlat
test
dec
xchg
leave
out
dec
rep
mov
cs
ret
imul
fdivs
add
mov
rcr
mov
divb
aaa
popf
dec
add
test
cmc
cltd
push
repnz
adc
aad
sub
sahf
loop
fisubs
out
xor
leave
add
adc
pop
movzwl
mov
cmp
jl
dec
outsl
or
mov
cwtl
adc
lret
stos
in
sub
adc
push
mov
scas
mov
shll
mov
fisubrl
sub
lea
add
aaa
jmp
push
daa
mov
sub
dec
pop
lea
movsl
das
mov
cmp
lods
in
test
jg
ret
mov
lahf
cmp
rorl
out
out
sub
push
mov
out
jmp
or
out
jne
sbb
sbb
loopne
dec
das
loopne
stc
jge
xchg
dec
test
sub
iret
daa
jge
sub
xchg
dec
enter
mov
jecxz
push
icebp
js
adc
insl
popf
in
mov
fidivs
xor
adc
adc
add
dec
or
mov
mov
or
sbb
jp
sbb
and
stos
fs
pop
ss
sbb
das
inc
push
xor
lret
jno
cwtl
or
xchg
into
sbb
adc
iret
je
iret
dec
je
cmpsl
addr16
popa
and
mov
daa
int3
shl
in
inc
cmp
push
out
pop
inc
mov
rorl
xchg
xor
cmp
jle
icebp
ds
cld
imul
xchg
jno
jns
hlt
les
jecxz
or
jo
leave
inc
push
fcmovnb
test
mov
lods
pop
mov
mov
xchg
xchg
mov
fwait
add
jae
push
push
cs
and
push
cmpsl
adc
sub
lcall
loope
movsl
and
popf
pop
stos
pop
pop
inc
loopne
in
ret
scas
sbb
sbb
dec
ljmp
fisttpll
xchg
imul
leave
push
aas
shrb
jmp
out
cltd
sub
cmp
ret
mov
fnsave
push
sbb
xor
mov
int3
les
mov
shlb
popf
mov
xchg
call
cmp
sub
iret
or
movsb
icebp
adc
enter
xor
mov
shr
ret
push
adc
js
jb
fdivs
dec
pop
sub
dec
xor
fiadds
add
mov
lds
lret
push
cli
pusha
add
jns
loope
dec
mov
lods
test
subb
call
int
jp
mov
inc
in
dec
push
or
xchg
xchg
pop
js
ss
orb
adc
adc
jns
jnp
sbb
sub
fwait
mov
lock
mov
sub
repz
test
insb
cmpl
pop
jno
lcall
or
fisubrl
std
jae
sbb
push
test
in
popa
jmp
pop
nop
cmp
aad
or
sbb
aam
jg
add
add
scas
testl
inc
dec
add
out
ss
aad
es
xor
or
cmp
adc
mov
popf
inc
out
fistps
fnstenv
add
push
jb
xorb
mov
fsubp
fiadds
ret
dec
dec
jns
rcr
or
fdivs
jmp
pop
push
pop
pop
fldln2
aaa
cltd
sbb
add
inc
mov
mov
nop
lock
hlt
popa
out
scas
and
mov
push
and
gs
adc
adc
iret
imul
in
cmpsb
ja
movsb
repz
andl
ljmp
fldenv
insb
push
xchg
or
xor
rcrl
mov
pop
ljmp
shlb
arpl
fwait
pop
fisubs
mov
push
lret
stc
fadds
sub
push
out
add
inc
sub
pxor
mov
fcomps
scas
adc
ret
mov
sti
mov
add
or
lods
in
insl
movsl
cli
push
repz
xlat
or
repnz
xchg
ret
fimuls
or
mov
xlat
push
dec
sbb
orl
push
inc
loopne
push
arpl
das
fbstp
adc
in
test
sub
mov
xlat
fildll
jle
imul
sbbl
mov
decb
pop
pop
sbb
enter
ss
or
outsl
push
mov
test
in
xor
mov
aaa
or
sarb
stos
scas
xchg
negl
lret
les
scas
dec
sbb
pop
adc
add
sahf
mov
pop
aam
xor
ja
xor
data16
xchg
in
sub
lods
call
cmc
inc
subl
lock
add
mov
push
sbb
daa
scas
stos
adc
fsubrs
sahf
push
push
mov
mov
sarl
mov
mov
mov
push
push
jge,pn
dec
xor
stos
or
push
pop
cmp
int3
in
jns
outsl
adc
mov
xor
je
ds
lret
push
sahf
and
into
aam
xor
jb
loop
jns
push
push
inc
std
movl
scas
jbe
pushf
or
mov
cmp
add
mov
shl
loopne
push
push
sub
cwtl
in
sub
jno
clc
push
xchg
pop
pop
hlt
pop
popf
insb
sbb
inc
inc
fdivl
mov
xlat
sub
fs
add
in
pop
mov
iret
jle
fstpt
adc
js
jl
mov
jmp
cmp
sbb
sbb
add
aas
daa
std
dec
add
jnp
jo
das
test
jns
imul
xchg
jl
add
inc
or
lock
subb
cmp
push
sub
mov
mov
push
pop
rorl
push
into
pushf
mov
popa
dec
out
adc
sbb
pop
insl
push
in
outsl
xchg
sbb
adc
mov
mov
testb
xchg
sahf
cmpsl
test
pop
cmpsb
adc
fwait
mov
jp
push
pop
sbb
fdivrs
and
mov
jecxz
out
lock
aam
mov
mov
lds
stos
xchg
push
cmp
jge
fcmovnbe
out
fcmovnbe
mov
bswap
xchg
push
lahf
lds
je
adc
or
push
sub
dec
pop
push
lahf
pop
lea
mov
mov
sub
test
or
sbb
inc
insb
push
fmuls
adc
outsl
leave
js
daa
sub
fldenv
aad
push
xchg
rcll
adc
fs
mov
sub
int3
push
add
xor
xor
pop
ficomps
mov
push
data16
mov
mov
mov
sahf
loop
fisubl
jecxz
adc
std
int3
cmc
scas
in
stos
loope
mov
je
and
inc
repnz
push
and
jno
xor
int3
dec
xor
aaa
push
movaps
shll
push
nop
popf
pop
sbb
jecxz
pop
popf
mov
std
dec
inc
push
stos
imul
add
int
add
repnz
fmuls
sahf
mov
leave
jae
inc
shl
or
lret
neg
shlb
jno
adc
adc
pop
sbbl
test
rclb
imul
pop
cmp
push
ror
sub
xchg
popa
rol
mov
xchg
jl
adc
pop
or
out
je
aad
les
cmp
js
sbb
int
jle
sbbb
or
lods
push
adc
ja
sbb
in
mov
inc
dec
mov
xchg
mov
dec
adc
mov
cmp
ss
cmc
sub
xor
or
inc
ret
jbe
push
adc
mov
int
ds
pop
xchg
mov
imul
inc
pop
push
mov
cmp
imulb
ja
rcr
mov
sbb
push
mov
pop
mov
pop
rcll
mov
xchg
cmp
push
mov
lock
cmpsl
lock
mov
pop
mov
ds
ja
sub
decl
mov
stos
sbbl
sahf
or
and
mov
clc
in
cli
cmp
test
movsb
movsl
mov
testb
add
fiadds
testb
pusha
out
mov
mov
popa
cs
xchg
adc
cwtl
into
movsl
dec
mov
cmpsb
andl
nop
and
push
aas
popf
lcall
xor
mov
dec
insl
aam
lea
add
inc
imul
divb
repz
push
mov
out
push
inc
sbb
outsl
mov
push
mov
stos
rcrl
repz
and
mov
fidivs
jbe
mov
sub
stc
xlat
testb
dec
xchg
les
inc
mov
out
jb
xchg
cmp
and
movsb
adc
cltd
lret
dec
psubsw
pusha
xchg
mov
leave
shll
ret
daa
fists
mov
add
cmc
cmp
cmc
movsl
mov
sub
pop
pop
adc
pusha
icebp
xchg
mov
push
shl
dec
add
jo
cs
push
push
pop
mov
jge
rcrb
loope
cli
dec
mov
inc
and
push
fidivl
fcmovnbe
mov
pop
scas
test
xor
lods
jle
test
push
sbb
fisttps
mov
mov
pop
jo
or
test
rcrl
lcall
repnz
pop
jb
enter
cmp
mul
dec
jo
dec
mov
xlat
inc
lock
adc
sub
cmp
mov
xor
cmp
stos
jne
mov
stc
dec
mov
pop
xchg
out
dec
dec
out
mov
xchg
in
jle
ds
mov
cmpb
scas
cmc
cs
cmp
jo
cmp
popa
dec
stc
sub
inc
and
push
lds
fwait
inc
or
inc
mov
xor
inc
pop
insl
push
or
push
sbbb
out
sbb
in
lds
in
enter
dec
mov
inc
aas
or
orb
mov
ja
add
out
ss
xadd
xchg
loop
adcb
das
out
pop
mul
daa
and
lea
imull
adc
int
pop
fwait
repz
mov
repnz
sbb
test
adc
cmp
shll
and
mov
xchg
repnz
outsb
inc
push
push
cmp
mov
jbe
inc
int3
xor
cmp
xchg
rcl
out
jne
sub
xchg
addb
push
in
sbb
int3
pop
mov
jge
push
shl
pop
shlb
sbb
fadd
loope
cmpsb
pop
lock
cmp
sub
push
push
pushl
xorl
push
out
scas
ss
mov
inc
into
add
test
dec
fcmovne
outsb
imul
jp
xchg
xor
add
sbb
pop
cmp
daa
fwait
enter
adc
pop
es
inc
scas
out
negl
hlt
popa
into
das
pop
jne
pop
sbb
mov
fcomps
push
mov
and
inc
mov
xor
push
pop
int3
bound
sbb
xchg
addr16
cld
sbb
or
es
ja
adc
or
jg
stos
stos
imul
xchg
or
bound
or
mov
inc
adc
pop
lea
push
daa
push
cmp
aas
xor
add
fstpt
imul
dec
adc
add
or
lods
and
inc
lret
xchg
sbb
ds
pop
push
adc
adc
addr16
in
test
out
cli
movsb
test
aaa
or
mov
sbb
ret
xchg
jno
ds
adc
xchg
test
jno
icebp
mov
cmpb
call
jmp
cmpb
push
add
dec
sub
cmp
jg
pusha
shll
or
hlt
jo
shrl
cld
inc
aam
sbb
fsubrl
jno
test
aad
pusha
pop
mov
call
outsl
adc
add
adc
clc
inc
lods
push
push
lcall
leave
or
push
mov
pop
push
and
mov
ljmp
aam
lock
aad
adc
int
mov
push
inc
jmp
loope
test
cmc
jb
xlat
cld
rclb
jp
cmc
or
xlat
bound
or
sbb
cmp
les
mov
stos
push
jmp
pop
jg
and
cmp
cmp
pop
push
mov
push
addr16
mov
lcall
sbb
fst
mov
shlb
aad
xchg
pop
push
cmpsl
inc
jl
jns
sbb
inc
es
in
push
push
dec
cld
test
loopne
mov
jg
xchg
dec
outsl
dec
outsb
cs
in
push
mov
sbb
sub
cwtl
andl
inc
dec
fwait
and
sarb
jno
loopne
adc
cmp
in
xchg
adc
jg
mull
cmp
jo
mov
add
pusha
and
stos
sub
cltd
fiaddl
push
ja
stos
in
pop
in
movl
jmp
repz
adc
enter
lcall
cmpsl
cld
and
cmp
or
inc
sbb
loop
repz
test
into
jmp
outsl
shll
inc
pop
mov
push
outsl
pop
popf
lret
mov
jge
or
sbb
xchg
push
sub
test
sbb
inc
xchg
xor
scas
call
push
gs
xchg
pop
cmp
mov
imul
inc
sete
popa
push
mov
repnz
mov
test
stos
ret
cmpl
lcall
inc
std
push
popf
push
and
and
mov
push
cmp
dec
popf
jbe
addr16
arpl
addr16
das
and
xchg
cmp
lret
rorl
aas
push
fsts
cmpsb
fstl
jb
add
pand
sub
addr16
loop
push
call
mov
mov
ret
icebp
stc
add
pushf
adc
jno
dec
dec
shll
popa
call
pop
pop
jns
je
push
xchg
push
inc
fistpl
and
xor
rolb
mov
inc
and
mov
inc
int3
push
movl
and
sbb
lea
dec
or
jecxz
cmp
pushf
in
lcall
test
ds
ret
mov
push
inc
loop
leave
inc
sahf
jb
fldcw
xchg
xor
scas
fldcw
jl
lock
cmp
insb
insl
gs
or
push
cmc
cwtl
sub
clc
cwtl
movsb
hlt
insb
and
xor
xchg
pop
cmp
adcl
shll
xchg
and
mov
adc
loope
hlt
mov
call
add
jns
or
xchg
push
push
pop
inc
mov
gs
sbb
gs
fdivrs
mov
icebp
sub
and
scas
push
stos
jp
fstps
or
mov
aam
mov
mov
pop
cmp
push
aad
cwtl
hlt
jnp
movsb
mov
inc
es
roll
movsb
jno
ret
movsb
mov
sub
inc
xchg
and
push
cld
fxch
shlb
cli
push
cltd
stos
mov
mov
ds
dec
pushf
xchg
out
fidivrl
ret
mov
sbb
loop
pop
push
es
mov
out
sub
test
or
add
and
clc
pop
dec
dec
sbb
jmp
and
pop
mov
insl
mov
mov
ds
sarb
sbb
adc
xchg
sbb
adc
fwait
sub
sub
pop
cmp
dec
loopne
pusha
call
outsb
mov
mov
stos
stos
lret
dec
dec
lret
test
add
adc
les
fnstenv
xchg
inc
pop
push
adc
sbbl
in
ficoms
add
mov
fnstenv
xchg
dec
push
add
inc
cmp
or
cmp
pop
push
and
xchg
dec
mov
pop
jnp
jns
inc
xchg
js
hlt
daa
shrl
loop
int3
pop
push
inc
addb
sbb
dec
lock
loopne
adc
and
push
cli
inc
lret
pusha
sub
sbb
dec
lock
loopne
adc
and
push
cli
inc
lret
pusha
sub
sbb
dec
lock
loopne
adc
and
push
incb
jno
pusha
push
nop
push
cmpb
mov
lret
loopne
adc
and
lcall
and
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
jmp
lea
push
pushl
call
lea
push
pushl
call
jmp
call
push
mov
call
xor
leave
ret
arpl
jae
inc
push
push
sub
push
jbe
jecxz
repz
ret
rcl
mov
adcl
inc
inc
push
push
and
xor
add
adc
jecxz
repz
rcl
mov
adcl
inc
inc
push
push
and
xor
add
adc
jecxz
repz
mov
std
ror
icebp
rcl
int
std
xchg
sub
pop
xor
and
mov
call
cmpsb
or
addb
rcrl
imul
mov
fisubrs
pmulhw
adc
ret
push
rcrb
cmp
jbe
movsl
mov
mov
jecxz
cltd
or
add
push
xchg
es
jb
xor
and
and
ljmp
dec
cmp
fninit
cmpl
pushf
incb
scas
cwtl
and
int3
add
adc
cmpsb
pslld
aas
pop
loopne
imul
pushf
out
mov
mov
fucomi
repnz
enter
sbb
loop
xchg
rcrl
xchg
sti
xchg
cmp
inc
push
push
and
xor
add
adc
jecxz
repz
ret
rcl
mov
adcl
es
jp
data16
arpl
lods
mov
lret
mulb
add
adc
add
inc
pop
sbb
xchg
xchg
mov
icebp
notb
pop
sub
push
daa
and
xor
add
adc
jecxz
repz
ret
rcl
mov
adcl
inc
inc
push
push
and
xor
add
adc
jecxz
repz
ret
rcl
mov
adcl
clc
mov
cmp
int
jbe
pop
rolb
or
jno
and
enter
insl
xchg
mov
movsl
inc
adc
mov
fwait
dec
lret
popa
cmc
pop
in
lahf
call
andb
and
lahf
mov
xor
sub
pop
and
das
pop
adc
daa
mov
adc
stos
sahf
lods
shll
mov
movsl
adc
stc
cmp
or
cmp
dec
imul
mov
clc
xor
adc
insl
pop
mov
push
cwtl
push
mov
xchg
push
jb
jb
leave
xor
dec
loope
pop
push
inc
pop
fldt
das
aas
and
std
fstps
cmp
pop
icebp
ss
mov
sbb
outsl
jmp
es
sbbb
dec
cmovne
xchg
adc
cwtl
xchg
inc
mov
sti
adc
cltd
inc
sub
push
nop
jle
cmpsl
mov
jmp
xchg
scas
mov
data16
leave
ja
pusha
lret
mov
mov
lea
dec
xlat
daa
movsb
mov
aas
es
mov
mov
shr
fdiv
loope
in
push
xchg
inc
jns
inc
test
inc
out
jbe
mov
addr16
das
hlt
pop
hlt
scas
outsl
cmp
std
mov
stc
ja
mov
jmp
inc
int
xchg
cli
cld
test
or
add
add
adc
popf
jmp
mov
shrb
loopne
insl
adc
in
ret
addr16
and
aad
jecxz
add
cmp
lret
icebp
cmp
add
sub
inc
shlb
mov
add
sbb
jb
add
daa
or
mov
cmp
fs
call
sbb
jl
pop
sbb
out
adc
fimull
jecxz
jle
mov
idiv
leave
in
jnp
out
jg
popf
dec
stos
mov
ds
add
and
xor
enter
push
aad
jo
lret
ljmp
jg
call
int
test
fsub
mov
test
popl
cmp
sub
data16
fsubrl
sbb
nop
pop
imull
sub
out
es
aam
push
mov
movsl
ds
nop
icebp
rcr
iret
enter
sub
rcrb
loop
outsl
mov
aaa
xchg
sub
mov
cli
or
xor
lret
push
in
push
mov
cmc
test
mov
iret
push
inc
repnz
inc
dec
jae
iret
movsb
jbe
lods
adc
std
aad
lock
push
shrl
sbb
nop
cld
add
lcall
xor
pop
lods
shl
popa
xor
cmp
xor
mov
jle
ficoms
dec
out
mov
fdivl
or
test
xor
adc
inc
inc
popf
push
loope
push
test
das
out
jmp
and
push
xor
mov
inc
xchg
scas
pop
mov
popf
in
jle
in
adc
int3
inc
add
scas
xor
push
xchg
fldt
xor
mov
mov
es
sbb
orl
repz
ds
repz
cmp
and
or
out
imul
adc
cmp
add
lret
test
pop
ret
js
imull
jmp
add
xchg
jae
and
cmpsb
adc
das
adcl
mov
push
psrad
leave
xchg
sub
out
or
dec
je
lock
ror
xchg
push
and
cmp
repnz
add
xchg
jle
mov
inc
pusha
add
add
xchg
cs
push
ja
adc
jo
xchg
mov
xor
bound
jae
jae
fs
cmpsb
repnz
jae
shll
and
mov
inc
mov
dec
adc
addl
fdecstp
jg
std
jmp
jmp
in
insb
mov
scas
or
es
xor
jne
mov
mov
lods
xchg
jae
popa
pop
mov
mov
add
loop
push
mov
inc
ds
shlb
dec
repnz
xchg
xchg
in
ficompl
xchg
dec
mov
push
add
icebp
in
or
out
dec
mov
pushl
into
aam
dec
pusha
pop
xor
iret
xor
sar
enter
cmp
shll
pop
not
fsubrs
sub
fcoml
sti
dec
jnp
jae
inc
fadds
jle
xlat
mov
repnz
imul
or
daa
push
mov
lret
fwait
ss
ljmp
cmp
jnp
inc
mov
fimull
mov
cmp
sbb
jl
daa
add
xor
outsl
sarb
mov
popa
bound
jne,pn
sub
push
movb
cwtl
addb
aaa
movsl
addr16
fs
jle
pushf
xor
rorl
mov
out
iret
popl
xchg
faddl
loop
stc
mov
ret
or
xchg
ja
mov
sahf
cld
into
mov
iret
loop
jle
mov
fiaddl
fisubrs
add
adc
cmp
mov
or
push
mov
dec
xchg
mov
or
add
popa
mov
nop
adc
xchg
jecxz
mov
fdivs
bound
dec
pop
sbb
push
les
bound
adc
xchg
push
xchg
arpl
nop
xchg
cmp
test
jno
add
arpl
mov
ljmp
call
int
xor
lods
stos
rdtsc
pop
sbb
mov
mov
pop
xorb
test
out
mov
data16
dec
hlt
fists
cmp
jae
lahf
mov
rorl
stc
lret
mov
or
pop
js
lcall
fdivr
outsb
rcl
pop
xchg
cli
aaa
dec
lcall
ja
leave
add
push
sbb
add
jecxz
dec
jb
mov
jg
pop
push
xchg
cld
or
mov
cmpsb
imul
sbb
test
mov
add
xor
push
dec
repz
ja
sub
sbb
filds
lret
cmpsl
or
mov
fsts
call
divps
out
fld1
xchg
call
sbb
std
je
adc
cmp
mov
mov
movsl
inc
imul
cs
push
mov
fiaddl
leave
movsb
iret
lds
xchg
outsl
loope
mov
loope
mov
cmpsl
nop
add
dec
jno
aam
hlt
fisubl
mov
scas
int3
push
push
lock
jo
shl
lds
fimuls
jecxz
mov
mov
or
add
mov
cmp
cwtl
pop
bound
dec
push
scas
fld
pop
sbb
clc
inc
push
push
fwait
aas
push
inc
or
mov
fucom
scas
inc
push
or
jo
fisubrs
outsl
fnstsw
rol
and
jne
ja
dec
pop
bnd
inc
dec
sub
stos
arpl
sbb
pusha
mov
sbb
mov
push
push
sub
sbb
dec
andb
push
or
sub
cmp
push
xchg
jo
jbe
jge
dec
flds
scas
loope
jo
repz
xchg
add
cmp
call
or
jno
inc
aas
lret
lds
mov
add
push
pusha
mov
fdivp
sub
jns
verw
and
outsl
out
jg
shrb
test
int3
add
lea
jne
insl
add
cld
xor
fildl
in
fldl
movsb
push
out
push
push
dec
sub
pop
in
test
xchg
enter
mov
cmpsb
aaa
xchg
scas
sbbb
push
popa
loop
pop
in
and
xchg
cmpb
xchg
or
sbb
sub
addl
and
jae
faddl
dec
mov
insb
push
jb
jns
push
sbbb
sbb
mov
jp
dec
out
bnd
and
out
inc
sbb
cmp
dec
and
mov
cmp
sahf
push
xchg
pop
mov
cmp
imul
push
rorl
stc
js
ret
xor
pop
push
xchg
dec
add
outsl
pop
scas
fdecstp
pop
cmp
and
mov
loop
push
movl
repz
in
lret
dec
adc
hlt
inc
inc
inc
inc
int3
loop
mov
xorl
pop
sub
mov
inc
ror
jns
cwtl
xor
xchg
jg
sub
ljmp
or
mov
das
pop
push
mov
pop
mov
mov
test
push
repnz
jp
popw
xchg
cmp
mov
add
int
xor
clc
notl
mov
adc
hlt
aas
rcrl
or
movsb
lods
aad
sbb
into
int3
jecxz,pn
leave
stc
sub
scas
das
mov
mov
adc
push
dec
mov
std
sub
ret
and
cmp
ret
xchg
lahf
roll
xchg
scas
mov
lahf
daa
mov
mov
pop
and
cmp
imul
cmpsb
pop
pushf
push
adc
sub
popa
lods
pop
inc
add
jno
inc
into
lret
ffreep
js
lock
out
out
xchg
dec
aad
fidivrs
xor
loopne
pop
cld
mov
push
shrl
aaa
inc
jmp
mov
jg
adc
shl
or
add
cwtl
inc
sub
push
pop
push
pusha
inc
mov
insb
mov
push
mov
rolb
adc
ljmp
test
clc
xlat
cmpsl
scas
fsub
inc
aaa
xchg
shlb
pop
ljmp
xchg
add
push
popa
or
mov
mov
adc
jns
cs
or
or
fwait
xchg
dec
push
shl
es
test
jle
push
pop
xchg
sbb
adcb
adc
fnstcw
fisubs
jo
cmp
jnp
push
jl
sbb
fbstp
fmuls
ljmp
pop
push
roll
out
jge
jns
xor
int3
leave
jo
sbb
xchg
jno
mov
stc
fldenv
and
sbb
clc
and
push
inc
mov
cld
mov
lret
int
jp
mov
push
mov
lea
jbe
push
push
rclb
sbb
xchg
mov
cmp
lods
push
adc
pop
fcompl
sub
push
rorb
ffreep
insl
xchg
pusha
push
pop
lcall
fwait
cli
fldcw
xchg
cmp
iret
arpl
arpl
jg
mov
mov
and
out
sarb
lea
sbb
dec
jae
dec
add
jge
jne
push
jbe
jg
filds
add
push
xor
xor
enter
out
repz
pop
outsl
pop
push
lods
loope
and
rolb
les
mov
es
sbb
imul
cli
or
sbb
cmpsb
outsb
out
daa
pop
jns
sbb
adc
dec
into
dec
iret
pop
leave
mov
outsl
cmp
xchg
popf
in
leave
fisubl
push
mov
stos
je
leave
daa
mov
js
repz
sub
pop
push
ror
adc
mov
hlt
iret
lret
push
pop
xchg
mov
sti
pushl
scas
cmp
in
inc
adc
cs
pop
cmp
push
mov
lods
jecxz
mov
adc
push
pop
dec
xchg
pop
loopne
arpl
subb
cltd
repnz
sarl
enter
das
add
pushf
add
mov
mov
or
rcr
and
push
push
hlt
jge
push
mov
insl
push
mov
inc
add
xor
cmp
or
or
movsl
and
sbb
inc
into
lock
ljmp
adcb
or
inc
ficomps
lcall
push
inc
pop
mov
rol
in
and
mov
mov
iret
mov
movsb
jecxz
xchg
pop
sub
mov
xor
popa
jnp
sbb
loop
in
xor
movsb
push
rorl
push
push
lds
addr16
adc
negb
sti
jb
or
int3
xlat
jae
xorl
mov
xor
mov
loopne
mov
insl
test
int
stc
mov
rorb
dec
sub
xchg
scas
andl
jg
adc
sar
loopne
negb
pop
popl
adc
stc
or
adc
mov
jmp
fcmovu
mov
sub
jp
xchg
arpl
or
mov
jns
popa
stc
sub
test
dec
dec
fstpl
jo
imulb
fsubrl
cwtl
out
add
push
into
lret
cmp
and
gs
mov
cmp
mov
fimull
lea
pop
and
sub
inc
cli
aas
add
cltd
mov
mov
stos
stos
shll
cmp
idiv
and
lahf
data16
stc
sub
inc
and
pop
cmpsl
bound
cwtl
add
ror
add
les
push
push
and
inc
ret
sbb
push
jle
mov
inc
sub
in
roll
xchg
sti
mov
mov
dec
push
cmc
dec
shl
inc
inc
push
and
enter
cmpb
cltd
and
inc
mov
out
and
lock
pushf
inc
dec
cmp
pop
add
xor
jle
cmp
shlb
pop
mov
mov
xchg
fcomps
jg
nop
jmp
cli
hlt
loop
mov
outsl
ja
mov
mov
pop
int
aam
xor
xor
es
mov
push
pop
lret
insb
pushf
xchg
sbb
in
or
jbe
stc
daa
repz
jl
shl
inc
mov
repnz
call
in
aam
movsb
subl
and
jp
sbb
adc
shlb
cmp
xchg
pop
lret
xor
mov
scas
adc
jb
int
sub
fisttps
pop
pop
jne
sbb
xorl
xor
sbb
lret
shll
inc
lods
enter
push
test
je
xchg
push
jbe
cwtl
insl
out
lahf
hlt
and
dec
jecxz
dec
push
shrb
sub
scas
int3
xchg
rcrl
mov
sbb
and
mov
mov
fdivl
rorl
repz
or
insb
std
push
fstps
jge
sti
arpl
divb
fldt
divl
repnz
insl
xchg
inc
test
dec
in
mov
lods
inc
dec
mov
call
adc
fldenv
jle
sub
xor
jle
sbb
add
jo
pushf
xchg
daa
dec
dec
mov
cmp
sub
add
xchg
scas
inc
jecxz
int3
gs
mov
mov
ret
sub
cmp
bnd
fisubs
jno
xorl
mov
fimuls
push
mov
out
lods
inc
cmp
mov
lea
clc
ficompl
inc
mov
sahf
xor
orb
ds
stos
rolb
adc
push
popl
or
sahf
mov
ficoms
pop
cld
dec
or
lret
and
rorb
cmpsl
sub
cmp
lret
das
movsl
int3
ficomps
cmp
pushf
mov
icebp
cmp
frstor
fcmovb
push
add
cmp
out
movsb
scas
add
pusha
in
xlat
fwait
xchg
or
lods
lahf
mov
add
test
addb
xlat
gs
sbb
cwtl
mov
sub
rcrb
out
cmpsb
jmp
xlat
aaa
jle
mov
scas
dec
shll
pop
clc
stos
cmp
mov
inc
mov
call
das
jne
and
movswl
cmpsl
and
ds
inc
pushf
xchg
std
lods
pop
xchg
jbe
push
aad
test
fs
stos
fadds
pop
mov
mov
jbe
sub
jmp
sbb
pop
push
pop
aad
fdivr
fisubrl
insl
inc
jecxz
mov
adcb
mov
mov
push
cs
sbb
leave
shll
adc
sahf
hlt
xor
sbb
jnp
popf
fisttps
push
lock
das
mov
lret
clc
add
or
test
addr16
mov
add
jne
xor
arpl
mov
es
lock
adc
lea
sahf
mov
test
and
lret
pop
mov
stos
faddp
xchg
xchg
inc
dec
mov
std
ret
pushf
jae
pop
jmp
inc
scas
pop
ds
shlb
imul
cmp
sub
inc
inc
movb
loope
lret
daa
or
sbb
divb
jecxz
dec
cmpsb
stos
or
cld
fwait
inc
fldcw
fcoml
ret
sub
mov
adc
cwtl
daa
lcall
dec
add
popa
clc
xchg
xchg
loopne
sbb
dec
or
scas
dec
cltd
sub
cmp
test
mov
adc
xor
sbb
sbb
and
and
mov
enter
mov
inc
mov
outsb
or
xor
adc
outsb
jge
outsl
aaa
jmp
or
add
fs
loope
repz
std
pop
pop
push
andl
fcomi
cs
xchg
insb
fdivrp
mov
sub
adc
push
sub
test
mov
inc
jle
pop
and
test
fists
pop
sub
lds
mov
cmp
loope
cmp
ja
scas
out
add
pop
xchg
mov
rcll
sub
xor
js
popf
cmpsl
bound
hlt
mov
mov
cmc
add
arpl
mov
mov
sub
push
test
jcxz
xor
ror
pop
test
in
stos
or
adc
jns
cmp
push
std
js
sub
fldenv
dec
dec
push
push
bound
cmc
mull
in
stos
jb
imul
adc
jg
push
mov
test
mov
sahf
mov
cmp
xor
popf
mov
mov
add
xlat
popf
jle
and
orl
push
pop
aaa
jmp
jno
xchg
mov
int
in
xor
lods
jae
mov
mov
movl
push
fadd
popf
bound
ljmp
jg
movsl
sub
js
pop
cmpsb
add
and
aas
insl
pop
jbe
mov
cmp
std
das
punpcklbw
xchg
addr16
stos
dec
push
js
adc
nop
out
xchg
or
out
loop
inc
and
repz
pushf
popf
adc
popf
push
dec
arpl
and
jb
pop
shlb
inc
mov
jb
jl
mov
inc
aas
mov
cli
fdivrp
int
insl
gs
pushf
fnstsw
adc
sbb
jae
insb
loop
sbb
int
int
adc
push
cmp
mov
and
loopne
mov
js
fisttps
sub
push
xchg
or
push
pushf
mov
sbb
dec
inc
out
out
sub
outsl
loopne
lods
and
adc
jns
mov
adc
arpl
stc
cld
cwtl
xchg
loopne
adc
pop
in
xchg
sbb
incb
popa
clc
jno
mov
lea
or
push
int
stos
xor
aam
cmp
ret
jb
pop
or
and
cmp
pop
pushf
mov
repnz
test
or
xchg
xchg
pushf
push
int3
ja
pop
fnsave
cmp
aaa
jno
push
inc
aad
nop
pop
movsb
xor
decb
and
daa
test
iret
lcall
rol
stc
mov
jecxz
cmp
out
xor
jo
lret
or
jne
ja
push
inc
arpl
punpckldq
sub
push
jo
xor
jno
pop
add
les
xor
popf
sub
das
add
leave
test
and
lcall
push
mov
cmp
gs
push
pop
push
pop
popf
cld
lret
mov
jnp
pop
movhps
jecxz
dec
mov
mov
fdivr
stc
jp
inc
sub
push
jne
mov
test
mov
inc
push
xor
jns
mov
cmp
and
xchg
push
push
repz
in
xchg
cmp
ficompl
sbb
lahf
mov
rorl
or
cwtl
imul
cmp
fwait
cmp
jg
sub
test
test
shll
iret
push
data16
xchg
ss
sbb
cmpsl
int
lret
cmp
decl
pop
bound
cmpsb
aam
push
test
cmp
jno
jno
shlb
add
imul
add
stos
mov
clc
in
xchg
adc
sub
xor
mov
les
push
or
adc
dec
aad
pop
lods
sbb
sti
cmp
cmc
mov
cmpsb
jge
popa
jnp
jge
and
dec
je
hlt
scas
mov
push
xchg
jle
dec
call
push
addl
jecxz
cmp
sahf
cmp
mov
push
push
mov
stos
sub
xor
popf
pop
fnstenv
sbb
push
pop
js
pop
or
leavew
xchg
mov
mov
popa
not
popa
xchg
popa
mov
jle
mov
mov
js
dec
aaa
test
xchg
mov
dec
scas
sbb
jae
inc
push
push
and
xor
add
adc
jecxz
repz
ret
rcl
mov
adcl
inc
inc
push
push
and
xor
add
adc
jecxz
repz
ret
rcl
mov
adcl
inc
inc
push
push
and
xor
add
adc
jecxz
repz
ret
rcl
mov
adcl
inc
inc
push
push
and
xor
jecxz
repz
imul
cmp
insb
insb
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
xchg
rclb
ret
xor
clc
cli
jb
add
xchg
inc
mov
adc
xchg
xor
and
rclb
ret
xor
inc
xchg
push
andb
mov
ret
jb
adc
add
jo
and
rclb
ret
xor
inc
xchg
push
andb
mov
ret
push
xlat
bound
inc
popf
and
adc
leave
push
jb
cltd
push
xchg
dec
lods
daa
jecxz
into
aad
mov
test
sbb
call
mov
aas
out
aas
addr16
jae
mov
shrb
pop
fcoms
repnz
dec
subb
lahf
jl
adc
popa
int
stos
vmovddup
ds
inc
xchg
jle
cmpb
mov
js
std
repnz
scas
pushl
in
cmp
stos
xchg
pop
xchg
bound
out
repnz
addr16
scas
cli
inc
adc
mov
mov
jge
inc
inc
xlat
bound
arpl
repz
adc
and
xor
inc
xchg
push
andb
mov
mov
adc
add
xor
dec
jbe
push
ret
jl
add
aaa
andb
and
int
and
jae
jno
xor
rclb
nop
daa
fidivl
out
lds
mov
ficoml
xlat
or
mov
in
jb
fwait
cmp
inc
lcall
bound
xchg
inc
mov
adc
add
xor
and
rclb
ret
xor
inc
xchg
push
andb
mov
mov
adc
add
xor
and
rclb
mov
pop
jo
xchg
xchg
pop
jbe
scas
shll
adc
subl
pop
adc
pop
mov
or
loop
loop
dec
test
rcr
shr
push
dec
mov
aas
mov
pop
or
out
mov
jb
xchg
int
inc
test
adc
loop
xchg
inc
xchg
loopne
mov
dec
cmp
aaa
inc
sub
cmp
repz
cmp
cs
out
out
add
rorl
cmpsb
jns
push
mov
imulb
gs
gs
out
enter
or
jge
lret
inc
and
mov
lock
inc
loope
ja
sub
js
sbb
iret
popa
adc
push
and
add
pop
pop
sahf
push
pop
cmp
mov
xor
add
push
push
adc
dec
dec
inc
add
dec
mov
cmp
test
or
jmp
fadds
cmpsb
cs
lods
je
ds
xor
cmp
in
pop
and
jecxz
cltd
enter
and
cwtl
xchg
pop
lret
push
add
mov
lahf
out
adc
xchg
outsb
adc
jge
rorl
mov
cmp
shld
out
jp
inc
inc
out
pop
sub
mov
rorl
sti
bound
leave
mov
aaa
sub
mov
jge
dec
inc
inc
ret
fidivs
push
adc
and
xchg
mov
fbstp
fiaddl
jp
mov
lret
cs
jo
xchg
ja
insb
pop
push
repz
sub
orl
mov
and
xor
mov
pop
push
cwtl
mov
fcomps
push
fadds
sti
mov
lcall
xor
xor
int
stc
or
pop
or
insb
mov
and
xor
jecxz
rorb
aam
xor
rcr
out
imul
pop
xchg
xchg
xchg
imul
out
inc
imul
sbb
lcall
inc
mov
loop
cmpl
mov
ljmp
inc
or
repz
or
ja
jns
lock
sbb
lods
in
mov
sub
loope
out
dec
xor
nop
adc
xchg
int
pop
or
jmp
cmc
addr16
push
sub
mov
inc
add
aas
in
cmp
aad
mov
add
inc
clc
inc
jmp
daa
popa
xor
fs
pop
push
fwait
pop
cmpsl
pop
xor
sbb
and
xchg
or
adc
dec
aaa
pop
lea
loop
mov
dec
push
movsl
mov
mov
jle
cmp
adc
shrl
fs
or
in
xlat
xor
sbb
pop
sub
mov
roll
in
add
xchg
or
push
inc
cmp
or
push
cmp
test
pusha
leave
testb
or
push
xchg
in
sti
sub
mov
xchg
add
movsb
movsl
mov
lret
push
dec
loop
sub
enter
cs
xor
cli
out
pop
cmp
gs
cmp
enter
mov
dec
or
ficoms
sub
pop
leave
data16
adc
out
jle
mov
adc
add
fucomp
daa
cmpsb
nop
dec
rorl
jo
xchg
cli
js
adc
das
push
dec
adc
call
imul
shlb
xchg
adc
subb
add
shrl
or
and
dec
mov
fimuls
xchg
adc
add
gs
mov
jmp
mov
push
push
and
jb
jae
ret
mov
cmp
xor
dec
cmp
nop
sub
jle
std
push
stos
aad
insl
jae
jns
insb
test
outsb
dec
push
lret
ror
pusha
jecxz
jae
out
adc
mov
sub
icebp
or
jns
cmp
jmp
mov
aad
aad
incb
test
jb
mov
aam
adc
scas
pop
and
sub
adc
mov
and
loopne
jns
sub
enter
mov
ret
jne
mov
inc
popa
aas
sarl
sti
fiadds
and
inc
and
std
outsb
sbb
push
andb
dec
pusha
rcrb
pusha
das
pusha
cltd
cmp
push
sbb
mov
xchg
add
mov
pop
xchg
jge
loopne
inc
mov
push
cld
inc
dec
push
inc
mov
xchg
rcl
mov
mov
rcrb
jbe
in
push
sub
dec
xchg
jle
inc
mull
pop
jge
cmpb
jmp
adc
and
popf
jmp
push
jo
xor
jp
or
stos
adc
mov
mov
push
fwait
das
lods
outsl
mov
jecxz
hlt
sbb
push
mov
outsl
sub
outsb
insb
popa
or
mov
or
cmp
add
cmp
test
add
test
shrb
cmp
imul
aam
jmp
push
ljmp
jo
push
sbb
fs
lea
cmp
mov
dec
scas
jl
mov
sbb
mov
mov
pop
pop
dec
mov
lock
lods
scas
xor
jb
test
out
xchg
les
and
rcrb
cmp
roll
jnp
shr
mov
cmpsb
add
imul
pop
pop
nop
test
push
pop
int
add
mov
jmp
repz
push
xchg
push
stc
negb
adc
and
inc
das
nop
jne
jo
pop
jg
fwait
inc
jl
insl
cld
and
push
outsb
loopne
mov
xchg
mov
xchg
inc
jecxz
lods
outsb
pusha
xor
add
pop
out
sbb
push
mov
xor
or
xchg
mov
clc
iret
push
jp
rolb
cmp
sbb
mov
imul
lods
adcl
inc
std
push
cltd
add
fwait
pop
adc
xchg
jle
fstps
in
popa
cmp
jmp
mov
or
js
int3
cs
imul
cmp
outsb
lret
testb
mov
pop
fisttpl
mov
pop
dec
shlb
xchg
fcoms
mov
cmpsl
lret
rcl
mov
push
negb
xor
cli
push
scas
scas
int3
ficoms
decl
add
cmpsb
push
and
fwait
push
pop
sub
les
adc
les
mov
pop
sbb
shlb
rcrb
lods
nop
cld
lahf
mov
and
jge
and
inc
xor
testl
in
dec
movsl
sub
sub
imul
dec
push
dec
stos
push
dec
shll
pop
cmpsl
pop
lret
xchg
addb
data16
iret
bnd
aas
iret
ret
pop
or
popf
adc
inc
stc
mov
add
jb
es
push
push
dec
aas
push
rorl
fnstenv
mov
sbb
mov
lds
and
mov
pusha
sbb
jnp
jo
enter
popa
ljmp
add
xchg
movsl
mov
jmp
adc
jmp
mov
mov
jge
movsl
push
mov
or
cmp
fadds
jecxz
ss
rcrl
jp
push
xor
pop
push
adc
xchg
fsubl
sbb
push
mov
pop
adc
mov
sbb
cmpsl
xor
ret
push
jbe
in
dec
jp
fdivrl
mov
push
and
xchg
push
mov
inc
sbb
sub
mov
adc
mov
icebp
and
mov
out
mov
or
lret
dec
mov
sbb
lock
sar
clc
mov
into
gs
xchg
sub
shrl
andl
jl
inc
enter
dec
cltd
ja
subl
jmp
pushf
add
mov
and
mov
cld
pop
popf
mov
cmp
and
icebp
sub
ja
es
mov
add
pop
addb
mov
mov
xchg
cli
out
lret
lods
adc
adc
mov
sbb
cli
or
fisubrl
lods
out
jmp
fwait
pop
inc
lret
testl
in
mov
clc
push
xor
adc
test
pop
add
mov
imul
imul
inc
jb
mov
stos
xor
and
xor
out
xchg
lahf
mov
dec
icebp
mov
mov
push
mov
shr
sub
cmp
cmc
sti
dec
push
ret
sub
test
fdivrp
insb
push
and
ss
sbb
sub
subb
in
add
and
enter
dec
loop
jmp
xchg
loopne
rorb
sbb
inc
imul
imul
sahf
lds
lods
inc
jmp
lret
ljmp
sar
scas
xchg
or
jno
movsl
mov
sub
jp
pop
clc
rorl
mov
popf
sarb
xchg
movsl
icebp
std
movsb
repnz
in
xchg
int3
iret
cmp
into
icebp
lea
jmp
out
sub
daa
movsb
or
and
sbb
std
aaa
xor
cmp
jbe
mov
stos
xor
int3
daa
sahf
add
dec
lahf
test
jnp
ffree
ss
movsl
mov
push
mov
mov
jl
dec
xor
sti
lret
add
push
rclb
push
in
xor
add
dec
xor
jns
fsts
and
push
ret
call
mov
xrelease
jecxz
mov
sbb
enter
xchg
and
loopne
fsubrl
lcall
push
loop
scas
shll
pop
arpl
sarl
xchg
or
mov
pusha
mov
test
mov
mov
enter
or
dec
cmp
mov
aad
push
xchg
push
shl
add
and
hlt
mov
fwait
xor
sahf
pop
and
sub
push
inc
sbb
or
fsts
pop
push
int3
gs
test
out
aaa
dec
mov
bswap
adc
inc
mov
ja
xchg
dec
or
cmp
pop
jo
insb
fwait
push
dec
scas
xchg
mov
mov
ror
imul
inc
fwait
out
mov
mov
jmp
addr16
mov
les
gs
xlat
push
cmpsb
rolb
and
aas
inc
and
cltd
aam
sub
cmp
pop
add
cmpb
movsl
addr16
xchg
cmp
cs
test
sub
loopne
sbb
out
js
into
lcall
shlb
push
xor
fisttpl
jbe
clc
in
mov
pop
imul
add
ja
jb
push
ja
inc
fcomps
lods
fwait
inc
mov
inc
sar
int
or
popf
popf
adc
mov
loope
arpl
dec
aaa
mov
mov
test
ds
push
sbb
shrb
sbb
pop
movb
mov
jno
push
mov
jmp
ljmp
mov
sub
pusha
ret
das
dec
sbbb
adc
sub
mov
mov
ds
imul
addl
pop
mov
clc
adc
pop
add
leave
inc
sub
jns
inc
and
negl
inc
cli
hlt
sbb
add
icebp
in
iret
loope
xor
out
dec
out
pop
dec
stos
xor
int
mov
jo
imul
push
xchg
in
mov
xor
data16
inc
inc
mov
sub
inc
in
jge
jmp
dec
notb
add
jae
bound
out
jecxz
mov
loopne
arpl
jmp
ret
and
jae
sub
push
cld
cld
mov
rorb
cltd
pop
inc
adc
ljmp
lcall
pop
add
jecxz
out
dec
pop
cmp
mov
fs
ror
cltd
mov
and
adc
inc
pop
or
in
iret
dec
daa
in
push
lret
adcb
into
and
mov
cmpsb
jle
add
popf
jo
pop
mov
in
pop
add
pop
jno
mov
push
cld
push
sbb
nop
or
das
and
fldl
mov
dec
pop
xchg
cmp
shl
xchg
adc
movsb
xchg
push
das
lahf
pop
repz
jecxz
mov
outsb
cwtl
aaa
icebp
shrl
cmp
nop
lods
lea
xchg
sub
icebp
loopne
lret
pushw
mov
sarl
pop
push
lahf
xchg
outsb
or
xchg
adc
mov
mov
push
jnp
and
dec
xor
mov
sbb
aaa
mov
ss
dec
out
xor
xchg
adc
insb
cmp
or
inc
addr16
jae
mov
add
ret
stc
testl
fwait
ds
jne
sahf
dec
subb
mov
adc
fldenv
cmpl
sti
repz
mov
pop
out
mov
es
push
xor
enter
sahf
iret
mov
sbb
imul
call
outsb
je
cmp
xchg
subl
out
std
push
sbb
jb
leave
sub
clc
adc
test
inc
xlat
push
add
es
adc
xor
pop
in
rcl
movsb
sbb
pop
lods
mov
f2xm1
fwait
movsl
inc
mov
or
imul
lods
or
push
inc
mov
push
imull
test
sub
push
mov
enter
inc
jbe
mov
aaa
xchg
add
mov
fldenv
out
mov
stc
or
test
xchg
lea
loop
inc
or
jle
in
jge
mov
lcall
cmp
pop
xchg
dec
mov
xor
cwtl
jp
adc
mov
or
or
jns
in
and
fildll
icebp
inc
bound
data16
aam
pop
lods
jo
sub
insb
add
sbb
xchg
push
pop
add
loope
jg
push
fnstcw
adc
leave
scas
or
aad
lret
fcoml
push
pop
sbb
jbe
and
dec
sbb
inc
jge
aam
cltd
int3
ret
or
mov
mov
or
push
loope
jge
mov
imul
in
das
stos
cmp
jbe
cmp
cmpsl
xchg
fnstsw
fwait
push
int3
in
mov
and
xchg
faddl
sub
lret
loope
jg
hlt
into
mov
out
mov
ret
std
lds
sbb
jbe
out
fimuls
mov
jbe
into
mov
push
mov
pop
aad
repnz
sub
inc
lea
into
xor
or
jmp
cmp
repnz
pop
sub
lcall
int
lahf
jb
lea
into
dec
addr16
cltd
in
dec
jne
jne
cmpsb
hlt
mov
hlt
adc
jbe
pop
in
ret
lahf
outsb
jb
in
adc
inc
rorb
les
ret
jno
xchg
aam
out
xor
jle
dec
mov
loopne
jnp
cwtl
mov
adc
rcrb
adc
jp
into
fcoml
jge
icebp
adc
adc
movsl
and
pop
out
jmp
pop
or
subl
aad
mov
cwtl
shl
fsubrp
mov
push
test
rclb
mov
pusha
fdivl
test
fcoml
mov
jbe
imul
cmp
inc
inc
push
push
popa
xchg
xorb
stc
fwait
aad
movsb
add
stos
dec
push
rcrb
pop
push
popa
test
dec
mov
stos
popa
mov
hlt
mov
pop
mov
insl
ja
fwait
in
inc
cli
cs
aas
mov
pop
inc
pop
xchg
adcb
push
cwtl
out
iret
inc
imul
cmpsl
dec
sub
inc
lahf
ret
push
cmp
pop
fsubp
rorl
ffreep
cmp
adc
cwtl
pushf
daa
rorb
mov
add
notb
in
jmp
sbb
fidivl
jo
lea
mov
xchg
pusha
push
push
mov
sub
and
mov
in
movq
scas
pop
out
adc
jne
test
pusha
dec
cmp
clc
int
dec
decb
sub
sahf
hlt
shlb
mov
adc
popa
aas
adc
inc
icebp
jns
pop
sub
sarl
dec
sarl
jns
fcoml
lea
mov
dec
jmp
fisttpl
dec
inc
arpl
lret
lret
call
ljmp
pop
sahf
mov
mov
in
stos
dec
push
cwtl
push
aad
movsb
cs
clc
repz
mov
cmp
fcmovbe
fs
adc
sahf
jg
and
inc
inc
stc
lahf
loop
jnp
jge
adc
rcrl
pop
add
cwtl
add
insl
call
pop
adc
in
dec
dec
fistl
fs
add
sub
rol
xchg
add
adc
dec
cmp
fsubl
pop
sub
les
into
lret
bswap
int3
jno
test
cmpsb
dec
and
dec
pop
imul
and
frstor
push
movsb
bndldx
and
fs
xchg
ret
mov
or
mov
adc
nop
jecxz
add
add
repz
das
jbe
test
mov
arpl
add
int
addr16
dec
ljmp
cld
push
cmc
loopne
jae
movsl
push
adc
push
shll
cmp
push
inc
cmp
xor
mov
cmpsl
mov
pop
jo
mov
and
jno
mov
xor
sub
mov
movsl
cmp
mov
or
movsb
js
dec
daa
push
inc
nop
xorb
dec
or
cld
stos
pop
dec
stos
xlat
cli
inc
imul
dec
sbb
mov
jo
push
cmp
xor
in
loopne
mov
out
cltd
loopne
lahf
xchg
mov
mov
jne
leave
and
ret
jb
jecxz
vpunpckldq
inc
clc
pushf
push
sbb
add
test
mov
test
xchg
inc
adc
addr16
push
xchg
xchg
push
pop
mov
and
js
popf
popf
mov
lods
leave
xchg
sbb
pop
xchg
sub
cltd
call
popa
pop
jp
rolb
or
shlb
jg
test
push
fisubl
push
or
xchg
pushf
fstl
xlat
test
or
or
mov
xchg
jbe
stos
jg
lret
pop
inc
add
mov
aam
ret
pop
push
rcrl
and
mov
fisubl
lds
sub
out
mov
sbb
or
xor
bound
fcmovne
jbe
mov
push
inc
lods
jecxz
or
stc
nop
ja
je
int
inc
aad
cmp
xchg
jl
jae,pn
push
aaa
pop
fstl
mov
jbe
xchg
fcoms
aas
add
scas
stc
pop
xchg
sub
daa
mov
pusha
insl
out
xor
xchg
mov
sub
mov
movmskps
dec
jmp
jp
jbe
daa
sbb
jnp
push
push
lods
push
jp
dec
in
rclb
ret
and
rcr
inc
clc
lods
inc
lods
imul
outsb
shll
xchg
loope
aas
test
pop
jno
sub
xor
test
jp
icebp
xchg
jno
xchg
jb
fldln2
adc
shlb
ja
out
pop
mov
lret
push
jnp
jae
cwtl
xor
imul
push
sbb
sub
xchg
inc
out
outsl
adc
arpl
and
xor
push
add
das
lock
scas
cmp
xor
mov
fdivp
pop
mull
bound
jbe
dec
sub
ljmp
dec
inc
movsb
add
imul
movl
adcl
aas
outsb
les
push
cmp
pop
add
pop
shr
movb
stos
xchg
sub
add
mov
lahf
mov
bswap
adc
lea
insb
and
in
mov
cli
and
mov
xchg
inc
and
sbb
sub
mov
sub
pop
or
shl
and
xchg
les
sub
add
mov
movsb
clc
jns
movsb
push
xor
cwtl
jb
sbb
lcall
shrb
jbe
mov
bound
fdiv
loopne
push
adc
mov
sti
sub
pop
test
mov
pop
pop
xlat
push
outsl
popf
cs
dec
push
jle
outsl
dec
addr16
sarb
dec
cmp
inc
and
ud1
jnp
sbb
std
mov
or
lcall
fs
xor
xchg
xor
in
outsl
pop
sbb
or
mov
insl
push
aad
in
clc
test
in
jg
sub
fs
lods
pop
sub
neg
pop
jle
xchg
mov
imul
aad
lods
std
loop
sahf
rcll
mov
fdivl
mov
dec
push
jp
fistps
jne
mov
lcall
lds
arpl
jmp
mov
mov
es
aaa
mov
dec
mov
icebp
mov
lds
push
out
mov
movsl
call
mov
jns
es
addr16
popa
or
jl
adc
rol
aas
arpl
in
into
xlat
jmp
jns
sub
daa
jg
or
mov
ret
xor
inc
xchg
push
andb
mov
mov
adc
add
xor
and
rclb
ret
xor
inc
xchg
push
andb
mov
mov
adc
add
xor
and
rclb
inc
and
loop
xchg
push
add
jb
adc
inc
mov
adc
add
xor
and
rclb
ret
xor
inc
xchg
push
andb
mov
or
adc
sbb
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
hlt
add
mov
add
mov
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
das
cmc
add
sbb
add
adc
add
or
add
add
add
cld
hlt
add
hlt
hlt
add
in
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
cmc
add
push
cmc
add
pop
cmc
add
jo
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
call
testb
xor
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
test
add
mov
add
xchg
testb
pushf
testb
movsb
testb
lods
testb
mov
add
testb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
loopne
add
call
testb
or
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
shl
add
testl
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
clc
add
jl
add
je
add
insb
clc
add
fs
add
pop
clc
add
push
clc
add
dec
clc
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
test
add
mov
add
mov
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
dec
stc
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
in
add
in
stc
add
hlt
stc
add
cld
stc
add
add
add
or
add
adc
add
daa
cli
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
inc
cli
add
dec
cli
add
pop
cli
add
insb
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
