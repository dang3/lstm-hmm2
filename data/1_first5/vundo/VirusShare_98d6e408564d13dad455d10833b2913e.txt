incb
add
add
dec
lcall
in
inc
lcall
lcall
rcl
aam
xchg
lret
dec
inc
aad
aad
mov
repnz
outsb
push
add
fadds
out
xlat
nop
scas
jmp
add
mov
xchg
fbstp
cltd
pop
das
add
pop
loope
add
insl
jle
cmc
adc
push
add
or
dec
adcb
dec
mov
lcall
add
and
mov
xor
mov
incl
loope
imul
and
pop
adc
out
sub
push
add
cmp
cli
pop
or
mov
out
push
in
dec
mov
add
out
add
in
je
and
daa
psrlw
cs
fdivrs
cmp
fdiv
movups
add
dec
mov
cmp
push
test
adcb
lods
ret
xor
rorb
xor
lcall
sbb
lcall
rorl
sbb
inc
popa
arpl
xchg
xor
xchg
mov
pop
int
xor
out
sub
push
xor
mov
movl
xchg
sub
xchg
fisttpl
jmp
daa
dec
shll
dec
imul
movsl
into
add
ljmp
out
pop
pop
je
push
inc
lcall
xchg
cmp
or
imul
adc
add
or
jae
mov
loope
call
out
imul
data16
mov
adc
adc
jle
inc
dec
roll
mov
xchg
pop
andl
add
xchg
sbb
pop
pop
mov
or
add
pop
sub
inc
or
sysenter
int
fdivs
add
adc
test
xor
or
int
movsb
mov
rcl
and
or
sbb
xor
nop
int
pop
sbb
jl
jle
dec
lcall
dec
mov
bound
fs
and
outsl
xchg
fdivrs
ja
imul
jns
cmpsb
sbb
lods
rolb
or
cmp
push
sub
xchg
push
imul
mov
in
sub
xchg
sub
shrl
xchg
lret
fstpt
xchg
xor
pop
out
shrl
xor
inc
jb
addl
cmp
jg
ss
xchg
fwait
ss
mov
jne
jnp
in
idivl
cmovno
jg
xchg
fisttpl
jb
dec
inc
inc
hlt
inc
in
and
jg
inc
insb
inc
divps
leave
arpl
dec
aas
int
gs
mov
dec
das
lcall
mov
fcoml
mov
or
in
jns
jns
jns
notb
outsb
jge
sub
test
mov
cs
xchg
das
add
and
jo
inc
add
xchg
xchg
xchg
xor
and
xchg
xchg
xchg
xchg
push
loopne
lods
xchg
xchg
xchg
xchg
test
and
adc
pop
add
les
cld
dec
inc
nop
adc
adc
jae
fs
fadds
out
cmp
adc
fs
iret
xchg
xchg
mov
clc
adc
adc
mov
mov
fldenv
adc
hlt
roll
iret
fcoms
pop
adc
or
inc
inc
inc
lock
mov
sbb
sub
mov
pop
xor
repnz
adc
add
adc
adc
xchg
xchg
je
in
push
add
jmp
cld
decl
mov
push
sbb
sbb
mov
mov
hlt
add
arpl
js
jp
insb
fs
sbb
jno
and
jo
enter
push
clc
outsl
std
addb
test
insl
inc
sbb
mov
incl
or
inc
fistps
cwtl
fwait
pop
mov
setne
in
adc
adc
push
inc
xor
or
or
insl
inc
ljmp
inc
lock
mov
dec
ja
pop
jmp
insl
test
mov
add
lret
test
pop
cmpsb
imul
add
pop
enter
pop
int3
imul
jb
xchg
setl
cwtl
adc
std
add
or
push
mov
pop
dec
aas
in
add
cmp
mov
popa
scas
cld
or
and
mov
xchg
sbb
cmovp
push
mov
jle
mov
sbb
xor
mov
repz
cmp
movsl
int3
out
sbb
mov
add
in
sti
subl
lds
aad
cmp
pop
enter
jb
push
enter
call
mov
ds
mov
push
in
and
sbb
add
arpl
in
dec
add
aas
or
sbb
add
fsubl
push
and
out
add
push
or
arpl
aam
mov
and
addb
sub
mov
sub
sbb
xchg
cld
ljmp
jle
lret
xchg
dec
iret
and
jnp
add
lret
xchg
add
add
mov
cmp
es
dec
test
lahf
sbbb
into
imul
jecxz
mov
cmovne
std
dec
loopne
fisttps
call
xchg
in
xchg
daa
pop
xchg
add
add
jmp
sbb
dec
dec
xorl
cmp
mov
mov
add
mov
in
aas
enter
outsl
xchg
ficoms
mov
sub
xchg
pusha
jnp
sahf
sbb
mov
cld
incl
pop
fdivl
es
mov
push
and
add
xchg
push
xchg
sub
adc
or
push
pop
cltd
ss
jo
sarb
cmp
sbb
pop
pop
pop
pop
push
nop
mov
ds
roll
xchg
cmp
lret
xor
aaa
adcl
clc
jg
in
sub
or
dec
jae
ret
sub
or
jnp
mov
jno
aam
dec
aam
aaa
xlat
xor
cmp
add
adc
or
jne
xor
or
in
push
data16
fsubrs
mov
jg
test
add
bound
daa
cmpl
loopne
dec
cmp
add
sub
pop
in
or
daa
inc
or
jle
daa
inc
xor
or
add
sbb
enter
or
and
dec
imul
inc
push
add
sbb
daa
pop
lsl
repnz
push
leave
orl
add
and
add
sbb
ja
pop
jb
push
stc
daa
pusha
pop
insb
xor
and
jbe
pop
in
iret
hlt
sub
sub
sbb
mov
fcoml
add
insb
arpl
and
adcb
add
jb
sub
insb
add
mov
lods
outsl
mov
jo
mov
lret
dec
xor
cmp
xor
inc
punpckldq
pushf
pushf
insb
xor
cld
xchg
lret
dec
ja
xor
add
add
add
repnz
push
xor
pop
out
ss
or
cmp
and
pop
dec
cmp
xor
dec
dec
incl
xor
pop
mov
pusha
push
inc
dec
push
enter
xor
addr16
nop
das
popw
aas
dec
pop
xor
dec
mov
ja
xor
enter
cwtl
addr16
cmp
cmpb
ss
sbb
push
xchg
orl
dec
mov
push
xor
clc
int3
addr16
dec
push
and
pop
push
nop
xchg
pop
pusha
int3
aaa
lret
sbb
cmp
xor
add
nop
xor
dec
push
sub
mov
in
or
repnz
nop
pop
xor
pop
xor
pop
adc
add
add
outsl
nop
jp
jbe
xor
cmp
sbbl
int
daa
sbb
lret
lock
xor
fstps
cmpsl
call
fmull
sub
inc
lock
pop
dec
adc
mov
sbb
cmp
dec
push
push
aam
pop
and
andl
or
add
cmp
add
jecxz
test
and
mov
dec
jl
orl
jae
shlb
cmp
or
jo
mov
andb
cmp
push
dec
inc
cmp
jl
jecxz
test
push
rolb
and
mov
xchg
ds
jae
add
flds
lods
ja,pt
push
jb
xchg
pushf
rcrl
add
fs
das
daa
pusha
or
adc
clc
ltr
mov
or
imul
arpl
insb
push
outsl
inc
popa
add
aaa
add
and
loopne
or
sbb
in
je
pop
add
cmp
flds
lret
pop
outsl
xchg
or
test
rclb
ret
and
fcoms
and
js
lods
imul
addb
leave
in
xor
cmp
mov
cmp
add
xor
cmp
andb
sahf
sbb
sahf
aas
cmp
inc
hlt
gs
dec
adc
cmp
and
inc
or
repnz
in
pushf
inc
sbb
pop
inc
add
dec
jae
in
sub
add
push
dec
add
inc
data16
sbbb
push
sbb
cwtl
das
push
fmuls
daa
popw
insb
popw
addr16
dec
xor
pop
dec
inc
daa
test
xor
orb
rcll
mov
in
in
inc
popw
mov
orl
add
add
arpl
scas
inc
push
inc
and
inc
xor
push
push
dec
inc
das
sbb
cwtl
mov
roll
and
outsl
adc
flds
fistpll
outsl
mov
and
nop
out
xchg
sbb
pusha
sbb
xchg
pop
jb
dec
and
fs
sets
daa
sub
or
in
xchg
cmpsl
or
int3
lret
je
sbb
inc
jo,pt
cmp
sahf
sbb
dec
lods
cmpsl
pop
mov
pop
jo
les
mov
aam
fsubs
pop
rolb
dec
inc
fs
nop
daa
and
inc
test
enter
cld
fs
int3
into
addb
dec
inc
gs
dec
push
and
dec
jl
and
enter
push
dec
enter
cmp
push
push
cmpl
lahf
or
int3
daa
inc
flds
in
jg
cmp
ja
test
push
add
lods
dec
dec
or
pop
adc
arpl
or
add
and
inc
jbe
xchg
lock
and
xchg
pop
inc
push
nop
mov
loopne
dec
and
and
das
mov
pusha
sbbb
enter
inc
movsb
cmp
popa
dec
int3
or
mov
les
test
dec
mov
mov
xor
dec
push
and
scas
in
sti
cmp
rolb
enter
cmp
nop
inc
mov
or
inc
push
fs
clc
clc
push
add
arpl
repnz
in
push
dec
push
lock
fcoms
imul
sub
xchg
dec
push
xor
enter
das
push
lods
cmp
lcall
push
pop
dec
leave
sub
xchg
add
in
or
add
push
push
imul
xchg
xor
push
pusha
nop
push
std
mov
imul
push
inc
or
add
adc
enter
and
dec
outsl
sub
and
mov
call
rcll
push
loope
cmpsl
fwait
add
push
add
outsl
repnz
and
daa
sbb
jecxz
pop
lret
and
and
sbb
adc
nop
push
dec
adc
jo
mov
lods
scas
pusha
rcr
cmp
inc
pop
adc
add
and
sbb
js
pop
aaa
xchg
add
and
movsb
roll
daa
out
les
mov
or
dec
mov
imul
cmovl
jns
add
pop
hlt
imul
pop
or
test
lahf
call
dec
aam
addps
add
movsb
cmp
pop
inc
xorb
pop
cmp
or
test
adc
or
push
cmpsl
outsl
xchg
sbb
leave
inc
and
xchg
or
ror
push
fs
test
rorb
inc
xor
and
test
dec
and
push
test
pop
mov
push
add
ret
jecxz
mov
out
xchg
fmuls
inc
mov
andb
loopne
rorl
push
pop
add
pop
mov
in
popa
inc
jae
mov
add
arpl
aaa
into
scas
mov
pusha
jecxz
addb
xchg
add
pop
jb
sbb
in
inc
push
call
fs
jl
jo
cmp
pop
nop
lock
sbb
add
enter
clc
jae
dec
push
sbb
pop
outsb
int3
cmp
and
cld
add
inc
pushf
cmp
jb
push
das
aaa
enter
cmp
rolb
fsubrs
insl
ja
aaa
mov
mov
push
mov
jb
rcrb
xor
sbb
mov
xchg
mov
negb
sahf
pop
inc
add
xor
add
aaa
jne
inc
outsl
xor
jo
and
je
inc
xor
inc
ss
add
data16
in
mov
js
insb
aaa
arpl
js
jbe
jbe
jp
inc
adc
xor
dec
xor
fucomip
pushl
cmp
dec
aaa
push
xor
push
dec
pop
je
pop
inc
jne
dec
xor
inc
xor
cmp
gs
ss
jae
jbe
js
push
imul
insb
xor
xor
aas
incl
jg
xor
jae
dec
aaa
outsl
xor
jae
inc
pop
push
pop
dec
dec
dec
fsubrs
mov
inc
xor
inc
aaa
jb
inc
je
test
inc
add
inc
mov
xchg
mov
jnp
out
add
dec
pushl
sbb
std
adc
iret
cmp
adc
cli
cmp
pop
cmpsb
mov
dec
push
ret
decl
add
push
or
dec
lods
xor
sbb
jbe
xor
pop
imul
pop
xor
pop
aaa
dec
pop
add
cmp
push
jg
cmp
sub
jno
inc
cmp
jne
outsb
je
and
decb
and
je
outsb
addr16
fs
sbb
imul
std
outsl
jo
xor
xor
inc
ss
dec
cmpsb
dec
xchg
mov
aas
mov
test
sub
inc
mull
sti
and
cmp
sbb
lcall
push
xor
push
xor
arpl
push
imul
push
jp
in
push
xor
imul
push
xor
outsl
pop
aaa
pop
outsb
jg
outsb
push
xor
push
sub
push
xor
jbe
pop
jp
mov
arpl
push
xorl
js
push
push
imul
ret
push
xor
adc
inc
cmp
jno
ret
pop
bound
dec
xor
xor
add
inc
xor
fs
shll
jns
fbstp
push
xor
push
xor
push
aaa
addr16
test
inc
pop
xor
jbe
pushl
pop
xor
jno
insl
xor
xor
fisubrs
xor
jg
pop
dec
outsl
popa
rol
test
or
sbb
push
dec
jbe
aas
xor
insl
mov
pop
push
adc
inc
push
ret
inc
insl
inc
dec
dec
pop
pop
jbe
popa
inc
jb
mov
sti
gs
je
rcpps
mov
push
loope
aaa
push
cmp
push
xor
xor
mov
pop
dec
ss
dec
jae
insb
je
push
sti
arpl
bound
inc
inc
aad
filds
or
cltd
inc
cwtl
test
push
loopne
jl
std
pop
mov
outsb
incl
inc
nop
mov
sahf
dec
and
jmp
cmpsl
mov
pop
sub
push
jno
pop
or
xor
pop
ss
sub
nop
dec
xor
push
inc
inc
xchg
add
dec
cmp
adc
das
cld
imul
push
xor
cmpsl
je
icebp
shrb
push
xor
lahf
xor
addr16
insl
jmp
push
addr16
dec
xor
push
fmuls
dec
daa
pop
cmp
push
addr16
adc
push
arpl
rdpmc
xchg
ss
cmp
xor
pop
insl
fildll
popa
ja
std
push
xor
xor
push
aaa
inc
decl
xchg
push
das
push
push
xor
ss
mov
dec
xor
aaa
dec
cmpsl
adc
insl
xchg
xchg
insl
xor
out
int
pusha
push
add
das
adcb
push
adcl
decl
xchg
cmp
pop
dec
xchg
or
adc
das
fistps
mov
and
mov
and
arpl
sub
lods
dec
test
cmp
or
inc
xor
push
pop
test
inc
push
xor
fcomp
outsl
dec
leave
inc
dec
inc
jge
dec
fstps
inc
cmp
lods
mov
outsb
push
xor
xor
jle
pop
jbe
dec
jne
dec
dec
push
inc
xor
inc
xor
cmc
xchg
xor
xor
push
inc
fstps
outsl
in
sub
ss
inc
imul
and
jp
jae
gs
dec
xor
xor
sub
std
jb
jns
dec
arpl
dec
lahf
xor
out
test
jnp
dec
outsb
out
sbb
cmp
jg
scas
sub
sub
fs
cmc
xor
pop
outsl
pop
fdivs
imul
cmpb
sbb
sbb
popa
jae
push
jno
je
push
xor
mov
mov
cld
pop
xor
call
pop
mov
insb
popf
dec
mov
out
xor
add
push
repnz
testb
cs
add
add
mov
movsl
jg
mov
ret
mov
push
data16
mov
cmp
jne
push
imul
or
pop
xor
outsl
sbb
push
lds
shll
stos
and
pop
pop
push
xor
lea
ss
and
push
test
push
push
push
in
xor
lea
xorl
xor
cmp
lods
dec
add
or
imul
fnsave
xchg
arpl
insb
mov
fldt
arpl
push
jae
insl
stos
dec
and
je
xchg
and
inc
xorl
pop
clc
xchg
inc
xlat
dec
das
cltd
je
rcrl
pop
subl
xor
push
pop
add
add
cld
call
stos
sbb
dec
xchg
leave
cld
xor
inc
shlb
orl
mov
dec
hlt
call
and
ffree
and
pop
arpl
pop
movsl
mov
xor
dec
scas
addr16
outsl
inc
pop
sub
popa
sbb
clc
movsl
or
inc
pcmpeqd
pop
inc
xor
insl
pop
ss
insl
xor
xor
inc
xor
adc
or
mov
inc
or
inc
popa
fistpl
je
xor
lods
shrl
rclb
mov
push
mov
mov
pop
push
xor
pop
mov
lods
movb
shrl
out
xchg
xchg
testl
aaa
adc
or
mov
rcrb
dec
mov
subl
xor
cmpl
pop
test
jg
daa
cmp
arpl
add
inc
jmp
daa
sbb
ds
movsl
adcl
shll
lods
int
xor
call
jmp
dec
subl
push
cmc
decl
mov
cmc
dec
xchg
add
push
cltd
shrl
jne
lret
inc
test
popa
xor
push
fisubl
add
sbb
insb
cmp
js
xchg
sbb
adc
jo
lods
xor
fimull
test
ss
xor
push
inc
xor
dec
pop
mov
out
scas
divl
jne
fisttpl
push
inc
adc
pop
imul
adc
push
imul
jne
push
or
test
xor
inc
adc
lea
jecxz
or
mov
push
imul
dec
jno
cmp
xchg
ss
xor
loope
add
dec
fucom
fimull
cmp
push
sub
xor
mov
jp
mov
pushf
add
pop
cltd
jb
jne
mov
imul
and
xchg
push
imul
mov
into
mov
js
inc
test
cmp
jae
pop
jbe
jg
dec
xchg
imul
xor
dec
xor
push
jae
outsb
adc
mov
pop
leave
stos
pop
xor
mov
dec
pop
push
mov
add
jbe
push
movsb
imul
and
mov
jo
inc
aaa
add
push
dec
xor
test
insl
dec
mov
jno
inc
lods
movsl
test
scas
lret
push
rorb
adc
popa
test
mov
movsl
lods
push
dec
or
jo
push
pop
jbe
jecxz
push
jmp
rep
ss
stos
fadd
push
mov
and
xor
cmpsb
imul
sbb
or
sub
xchg
jecxz
mov
ja
inc
cld
decl
fsts
js
mov
fwait
dec
stos
lds
push
and
mov
jae
mov
dec
aaa
fdivr
call
enter
in
mov
push
dec
dec
dec
push
das
icebp
or
jns
je
cmp
ss
das
xor
fs
insb
pop
xor
push
dec
sbb
mov
dec
insb
xor
lds
add
or
adc
jo
data16
int3
inc
inc
into
push
sub
dec
pop
sub
sbb
fldenv
or
loopne
loopne
sbb
sbb
clc
clc
sti
lahf
sbb
sub
mov
gs
aam
pop
jb
adc
bound
jb
fucomp
stos
sbb
jno
fnstsw
cmp
or
je
jmp
push
mov
pushf
rorb
mov
inc
ja
inc
push
dec
inc
push
dec
dec
inc
pop
inc
jns
jne
movsl
incb
movsl
stos
test
push
push
push
push
jmp
pop
dec
fdivs
imul
push
dec
add
push
push
jno
inc
push
dec
inc
xchg
pop
sub
dec
dec
inc
inc
push
ja
dec
dec
push
jmp
aas
dec
dec
dec
pop
inc
dec
xchg
push
outsl
dec
jno
inc
inc
push
pop
ljmp
push
jo
dec
inc
jns
push
inc
in
dec
push
jns
out
and
pop
dec
push
inc
dec
jb
push
push
inc
dec
push
jb
scas
inc
mov
jl
repz
out
xchg
cli
pop
dec
outsb
imul
jo
imul
jne
test
jo
inc
push
inc
dec
push
fs
std
jg
jecxz
je
jb
inc
inc
inc
dec
dec
push
dec
fs
inc
das
fistpll
pop
cmovl
flds
push
ja
inc
push
popf
push
xor
inc
add
cmpsl
push
xor
shll
addb
add
push
imul
add
cmp
or
fiaddl
or
jp
add
enter
cmc
sbb
cwtl
sbb
arpl
add
xor
in
les
mov
push
sbb
adc
xor
pop
popa
jbe
dec
xor
adc
mov
mov
push
pop
cmp
xor
popa
aad
popa
outsw
add
pop
adc
sbb
dec
sbb
sbbl
adc
push
js
add
xlat
push
sub
ljmp
je
nop
xchg
arpl
clc
imul
imul
dec
popa
push
pop
leave
orl
push
je
inc
jb
inc
ja
insl
insl
incb
jmp
jns
gs
jne
or
leave
in
adcl
pop
mov
xchg
sbb
push
jo
mov
sbb
inc
jns
fwait
mov
addl
xchg
jno
mov
insb
push
inc
mov
inc
int3
jo
jb
cmpl
lret
js
enter
pushl
test
cmc
push
sub
test
outsl
shll
dec
xor
jns
in
push
sbb
nop
sbb
and
xor
cmp
aas
xchg
in
push
or
jp
outsb
mov
xor
std
add
phaddsw
adc
mov
shll
leave
aaa
sub
jp
cmpb
cmp
sti
int3
fnsave
add
xor
ss
xchg
hlt
and
movsb
leave
push
jnp
xor
inc
xchg
xchg
incb
add
add
xchg
imul
ja
rorb
gs
shll
add
and
dec
cmpsb
sti
and
and
int
pop
adc
insl
xor
inc
fdivp
push
add
imul
in
push
dec
push
mov
push
scas
sti
inc
add
add
aad
sbb
rcrb
cltd
pusha
insb
lcall
add
mov
add
data16
mov
lods
jne
dec
call
mov
add
imul
sub
adc
leave
es
rolb
call
pop
in
add
sbb
or
imul
lcall
xor
imul
imul
imul
cmpsb
imul
or
lcall
je
dec
addr16
add
sbb
add
xor
and
jp
adc
sub
jne
xor
adc
or
repz
xchg
lahf
xor
xor
sbb
jae
ret
je
inc
fs
outsl
jmp
jmp
sarl
je
jb
sarl
xor
pop
leave
dec
mov
btc
leave
mov
std
arpl
cwtl
dec
jp
aaa
popa
add
mulb
fildll
insb
das
dec
outsl
cmc
mul
pop
xor
mov
aaa
ss
xor
ss
cmp
sbb
das
sti
jns
xor
test
add
jnp
mov
into
sahf
add
outsl
add
mov
push
push
testb
add
cmp
pop
adc
rcrl
or
imul
cmpsb
xchg
xor
jbe
mov
dec
lret
gs
add
push
int3
adc
mov
pop
subb
cmp
pop
cwtl
pusha
or
inc
js
pop
idivl
cmpsl
add
jbe
repnz
add
outsb
adc
push
jmp
inc
je
sarl
imul
sub
add
stos
cmp
xlat
dec
js
push
pop
popa
repz
cmp
outsl
xlat
shll
jnp
cmp
jno
sahf
jmp
inc
insl
xchg
ja
cmp
aaa
lahf
jnp
aaa
arpl
arpl
imul
adc
or
fld
adc
test
jno
pop
dec
push
sbb
and
sti
adc
xor
test
cmp
daa
out
push
xchg
loope
pop
and
data16
nop
outsl
or
aaa
xchg
cmp
add
getsec
adc
sbb
into
xchg
pushf
icebp
cmp
xor
xor
dec
iret
adc
ret
xchg
scas
inc
jbe
mov
xor
test
fcmovnu
xor
pushf
pop
xor
pop
pusha
xlat
or
or
ja
xor
test
jns
or
cmp
lret
fildll
adc
inc
mov
mov
xor
mov
inc
xor
push
and
filds
inc
dec
adc
xor
pop
dec
xor
push
mov
lret
adc
dec
cmp
mov
push
xor
mov
or
jnp
pop
cmp
pop
scas
pop
xor
and
pop
js
popf
dec
pop
popa
add
or
addr16
int
or
in
dec
inc
mov
pop
cltd
nop
inc
push
cmp
xor
enter
xor
adc
ret
xor
and
dec
mov
add
sbb
or
int
xchg
shlb
nop
leave
push
loope
cmp
dec
fcoms
ss
and
addr16
pop
mov
or
mov
into
sbb
xor
mov
pop
pop
pop
mov
pop
xor
mov
dec
nop
push
and
cltd
dec
es
add
xor
add
iret
leave
mull
push
cmp
out
jb
cmp
daa
das
cmp
or
aaa
mov
outsl
xchg
das
or
or
ja
ss
xorl
addr16
cltd
sub
pop
inc
and
inc
xor
xlat
les
mov
inc
sub
ljmp
int3
ficoms
fwait
in
jo
pop
adc
adc
sbb
xor
sbb
xor
stos
sub
comiss
sub
pop
xor
je
adc
or
pop
add
mov
out
xor
jge
daa
pop
xor
xor
and
mov
and
cmpsl
aaa
cmp
pop
aaa
or
lods
add
adc
or
or
push
jmp
lret
xor
push
enter
mov
lret
dec
dec
pop
das
pop
sub
pop
cmp
add
lcall
jbe
aad
xor
lcall
xor
arpl
loope
xchg
push
and
out
xor
jmp
jmp
xor
xor
or
sub
pop
pop
gs
es
pop
aaa
xor
das
bound
cmpsl
pop
dec
xor
mov
int
je
scas
popf
cmc
test
cmp
inc
loope
mov
pop
stos
sbb
js
arpl
push
decl
pop
push
jecxz
pop
sbb
dec
aaa
add
lcall
movsl
adc
xchg
mov
movsl
mov
mov
outsl
pop
das
xor
es
mov
jns
xor
xor
movsl
dec
mov
jno
pop
aaa
ja
sbb
pop
ja
data16
mov
nop
mov
cmc
xchg
mov
push
addr16
lds
pop
xor
xchg
adc
xor
sbb
or
jg
cmp
pop
jg
jl
and
lahf
pop
dec
jbe
sub
mov
fs
ret
in
cmpl
xor
jecxz
sub
adc
or
adc
pop
inc
inc
push
dec
mov
cmp
mov
fs
jmp
ja
js
ljmp
mov
jne
ret
mov
push
adc
xchg
or
cmpl
out
sbb
loopne
xor
test
sbb
bndstx
mov
shr
cmp
jae
fwait
lds
mov
xchg
jno
stos
leave
mov
outsb
inc
xor
cwtl
dec
popa
sbb
popa
das
pusha
add
lcall
shrl
push
lea
jne
in
js
fnsave
jne
adc
xor
inc
xchg
dec
mov
daa
pop
in
aaa
bound
cvtps2pd
pusha
aas
fnstenv
pop
inc
jb
jae
or
imul
jb
push
outsb
insb
outsl
arpl
dec
or
mov
dec
xor
mov
or
mov
add
fs
adc
outsl
mov
sahf
in
jne
fs
inc
outsl
outsb
xchg
jb
arpl
mov
fcompl
xchg
test
sti
push
jnp,pt
mov
popf
imul
and
jbe
je
addb
or
adc
cs
loop
insl
jo
add
mull
outsl
lock
xor
mov
sbb
in
inc
gs
aas
bound
adc
jmp
inc
push
sub
cmpsl
cld
mov
push
repnz
jecxz
bound
or
cmpsb
outsl
fldcw
bound
loope
fcoms
add
js
xchg
mov
push
mov
inc
outsl
outsl
adc
fdivrs
insb
insb
inc
mov
imul
nop
movsb
scas
cmp
imul
mov
roll
mov
and
fs
pop
daa
loopne
pop
jp
cmp
lcall
jae
out
or
push
add
fs
xchg
js
jns
outsb
imul
test
imul
icebp
jae
or
push
mov
xchg
popa
jg
test
fwait
xor
xchg
xor
xchg
pusha
push
mov
push
insb
testb
cmp
and
pop
adc
push
jbe
xchg
jmp
repnz
cmp
inc
mov
ss
push
movsl
adc
inc
xchg
lea
sub
shll
jnp
xorb
lret
jae
adc
pop
add
sub
loop
pop
and
sub
sub
xor
data16
vpshaw
lds
in
xor
orb
inc
cmpl
xlat
adc
jnp
xchg
aam
inc
jo
fsubl
lret
imul
push
or
adc
dec
out
ficomps
outsb
mov
mov
add
adc
add
rorl
sbb
add
xor
push
dec
add
movsl
in
icebp
test
jg
pop
enter
xor
popl
push
popa
scas
adc
cmp
dec
in
or
ss
xor
inc
pop
xor
sbb
xor
rolb
jnp
popl
cmpsb
nop
xchg
xor
scas
and
sbb
scas
scas
test
pop
cmp
cmp
fsubs
and
test
cmp
cmp
jl
dec
scas
in
xor
orl
dec
and
xlat
xor
pop
and
xor
add
out
jno
test
test
jb
scas
xor
sbb
scas
and
xchg
adc
xchg
jno
aas
xor
xor
scas
xor
ss
out
jbe
cmp
and
inc
xor
cmp
or
add
cmpl
add
pushf
lods
movsb
fstps
aas
pop
ss
aas
sbb
mov
aaa
jecxz
push
sub
aaa
pop
mov
sub
xor
xor
mov
das
nop
or
xor
pop
dec
iret
aas
xor
xor
sbb
adc
push
les
movhps
jl
jnp
pop
add
lret
lret
aaa
push
sbb
jo
cmc
rorb
das
cmp
push
or
into
orb
jmp
xor
stos
out
and
xchg
dec
dec
push
fucom
aaa
push
dec
lahf
popa
pop
dec
mov
adc
adc
out
xor
adc
stos
or
lods
sbb
cmp
bound
mov
mov
cmp
dec
or
aaa
xor
aaa
sbb
imul
push
fwait
xor
aam
xor
insl
inc
sub
pop
aaa
rclb
outsb
sbb
add
aad
adcl
lret
push
or
push
int3
aas
mov
pusha
das
push
ss
fmuls
aaa
scas
xor
leave
inc
xor
cmc
dec
and
inc
push
mov
jne
and
pop
ret
mov
xor
rdpmc
pushl
xchg
cltd
inc
xor
add
xlat
pop
inc
pop
inc
aaa
inc
cmpsl
lret
sbb
xchg
sti
push
cmpsb
sti
loop
leave
sbb
shll
inc
mov
lcall
dec
xchg
dec
add
popf
sbb
test
xor
jecxz
arpl
sub
scas
jmp
jb
inc
xor
jge
mov
adc
imul
mov
xor
cmp
icebp
add
cmp
push
inc
popf
mov
cmp
data16
jne
in
mov
popa
sbb
aaa
push
insl
int
xor
jne
test
addr16
push
cmp
test
mov
mov
push
inc
push
sti
lret
or
cmp
xor
test
push
das
jecxz
in
and
mov
out
bound
pusha
nop
loop
jecxz
add
pushf
sbb
imul
lds
jo
ret
stos
sahf
pop
add
inc
add
ret
or
jbe
gs
in
pop
imull
pop
inc
adc
test
push
pop
push
bound
and
mov
repz
jp
jbe
jo
jne
repz
loopne
cmp
daa
push
mov
inc
imul
in
in
xchg
pop
ss
mov
fwait
cmp
jno
insb
add
loope
push
fsubs
outsl
and
testb
add
outsl
xor
adc
xor
xor
push
jns
sbb
gs
sbb
add
ret
pop
out
ret
jb
mov
add
sysexit
push
ret
xor
mov
add
outsl
xor
iret
cmp
add
or
outsl
movsl
outsl
and
xor
fisttps
mov
iret
add
add
jae
add
rolb
out
sbb
rcrb
fists
or
push
test
add
xor
mov
push
fistpll
filds
in
aad
popa
filds
inc
fsubrs
imul
xor
mov
cmp
ljmp
popa
lock
xchg
or
add
out
and
loope
enter
cmpsl
mov
pop
fildll
add
fsubrs
or
add
xor
ffreep
cwtl
in
jno
popa
ja
movq
pop
aaa
xlat
adc
test
imul
aaa
lods
fldenv
scas
jmp
imul
add
ja
fiadds
in
or
cmpsb
fisttpl
cmpsl
and
in
mov
jne
ss
jbe
pop
rorb
insl
push
int
inc
cmc
jo
jns
lahf
es
into
and
jb
addr16
sub
mov
aaa
pop
cmp
mov
jae
mov
aas
js
add
xchg
addr16
dec
or
sbb
xor
repnz
push
fstp
js
and
dec
push
dec
rorl
mov
movsl
mov
sti
xor
clc
push
sbb
push
dec
mov
rcl
aaa
pop
xor
push
or
inc
add
pop
dec
outsl
cmp
or
out
inc
shrb
xor
add
or
xchg
addr16
or
inc
aaa
xchg
push
xor
sbb
outsl
xor
push
pop
sub
cmp
cmc
pop
mov
outsl
and
mov
xchg
fistps
and
ret
fmulp
outsl
aas
outsl
ss
lods
xchg
and
mov
or
push
xor
add
or
scas
inc
pop
orl
mov
outsl
test
movl
fldcw
addr16
and
xor
outsl
and
outsl
cmp
push
rorb
outsl
cmp
inc
and
or
popa
sbb
cmp
pusha
mov
fbstp
xchg
ds
jbe
dec
xor
xchg
cmp
inc
dec
pop
test
or
and
cmp
xor
in
sbb
scas
dec
xchg
pop
leave
pop
mov
inc
inc
pop
inc
pop
ja
call
mov
adc
jne
insl
imul
xlat
pop
inc
ss
mov
sbb
imul
xchg
adc
and
xor
adc
and
out
pop
and
and
test
daa
ja
or
add
aaa
out
inc
pop
and
loopne
sub
lds
sbb
push
inc
mov
inc
mov
sbb
loope
xchg
cmp
outsl
push
sbb
mov
xlat
sbb
mov
adc
lea
xor
pop
add
jno
or
imul
dec
mov
and
ljmp
push
insb
adc
dec
mov
push
xchg
inc
inc
jae
xor
call
or
jo
popa
test
cmp
jg
mov
stos
xchg
lcall
ja
jbe
pusha
shrl
add
pop
shlb
mov
inc
sub
imul
addr16
adc
cmc
dec
lea
jl
push
adc
out
adc
pop
pop
imul
sbb
mov
adc
pop
and
cltd
mov
push
jno
aaa
push
pop
xor
dec
fstps
lds
insl
push
jno
ss
adc
jo
dec
test
mov
fisttpll
ss
push
cmp
pop
popa
sbb
push
push
cmp
ja
fldl
or
xor
fbstp
fwait
dec
xor
adc
scas
jp
push
xor
xor
add
xor
dec
sub
mov
and
sbb
mov
xchg
cmp
fcmovnbe
sub
nop
add
mov
jmp
jl
jb
fwait
sbb
mov
push
push
insl
arpl
and
lods
push
inc
out
cmp
daa
dec
sysret
add
ja
je
cmc
xchg
inc
pop
add
das
ficompl
popa
ss
adc
dec
jbe
and
mov
xor
inc
cmp
push
cmpl
inc
das
mov
ss
jo
inc
xor
rolb
push
adc
popa
xorl
push
inc
mov
jg
push
aad
test
shll
pop
xor
inc
fstl
daa
enter
daa
jbe
pop
dec
ja
sbb
xor
lret
add
and
inc
jge
lret
aaa
sbb
inc
pusha
lds
pop
jp
fwait
or
sbb
xchg
inc
pop
cmp
add
popf
cmp
push
adc
lods
cwtl
pop
or
jns
movsb
push
cmp
mov
xor
jge
jge
addr16
or
dec
loopne
dec
push
lds
jae
jno
add
xor
or
mov
push
add
or
les
inc
adc
imul
rcll
popa
inc
push
add
mov
jmp
subb
cmp
je
or
scas
jne
dec
adc
jmp
sub
inc
adc
mov
inc
mov
pusha
cmovl
ret
pop
rorl
pop
shrl
ja
aaa
cmp
cwtl
outsb
xor
outsb
stc
add
jno
xor
inc
cmp
mov
xor
xor
mov
imul
js
add
daa
jbe
rolb
add
addr16
out
add
jae
cmpsb
dec
jns
push
push
adc
pop
popa
rorl
add
xor
andb
ja
outsl
push
dec
ret
pop
cmp
mov
pusha
cmpsl
jmp
pop
sbb
sbb
push
dec
out
and
adc
mov
pop
adc
aas
xor
outsb
mov
ss
cmpsl
xchg
shrb
cmp
jo
dec
mov
cmp
dec
cmp
pop
pusha
std
xor
sti
cmp
orl
and
xchg
adc
mov
add
cmp
fildl
sbb
das
sbb
addr16
mov
jo
arpl
dec
add
push
mov
lret
sbb
xor
aas
jae
xor
or
lret
loop
cmp
ljmp
and
fs
push
and
popf
aas
xor
ljmp
xor
aaa
sbb
push
and
xor
sbb
sbb
sbb
mov
pop
ret
sbb
mov
ret
mov
ss
outsb
push
aam
das
push
js
icebp
or
adc
xor
shll
std
mov
aad
add
xor
xchg
xor
mov
aaa
jno
fsubrl
inc
fwait
push
lock
xchg
xor
jo
push
rcrl
sbb
mov
imul
xor
orl
psubsb
add
dec
test
mov
inc
xor
sbb
mov
xor
push
add
add
xor
dec
mov
push
enter
scas
rorb
sar
add
pop
sub
fmuls
popw
sti
pop
xchg
adc
pop
and
pop
aas
fwait
xor
sti
xchg
mov
lods
cmp
inc
sbb
lods
xor
mov
dec
push
mov
push
ret
imul
pop
xchg
cmp
imul
int
inc
inc
mov
inc
mov
xchg
xor
nop
xchg
nop
adc
or
lds
mov
xchg
xlat
lods
mov
mov
popf
xor
pop
ss
xlat
mov
sub
inc
xchg
add
or
test
and
mov
lret
mov
roll
lret
or
or
lahf
popa
xchg
inc
pusha
shll
mov
jae
sbbb
xor
fcomp
imul
enter
ss
leave
adc
and
cmp
add
push
lret
pop
mov
pop
cmp
jb
add
and
xor
xor
cmp
push
cltd
and
and
cmp
or
cmp
xor
cmp
mov
xchg
mov
pop
and
cmp
mov
xor
aaa
pop
cmp
enter
outsl
xor
pop
outsl
nop
and
add
dec
xchg
roll
cmp
xor
xchg
add
loopne
scas
mov
inc
and
push
add
mov
sub
lds
pop
adc
scas
jb
jo
pop
aaa
xor
rcll
cltd
jg
mov
insl
sbb
pop
jne
xorps
and
inc
dec
insb
popl
lcall
cmp
inc
jne
xchg
mov
cmp
jne
cwtl
aas
jnp
dec
scas
fcomps
stos
not
dec
loope
test
int3
aaa
or
loopne
insl
iret
xor
dec
and
mov
xor
pop
lds
rolb
aaa
arpl
shlb
daa
or
adc
xor
add
mov
jg
sbb
test
fbstp
sbb
pop
das
inc
adc
cmpsb
lcall
mov
add
jnp
cmp
ror
out
xor
dec
jne
sbb
fwait
dec
addr16
xor
ja
push
addr16
rol
xor
add
push
imul
sbbl
dec
or
jae
repz
cmpsl
in
lock
ja
xchg
cmpsb
cltd
push
push
jp
add
mov
xlat
adc
cmp
lods
add
dec
jecxz
mov
or
and
pop
std
jecxz
pusha
sbb
xlat
sub
das
xor
adc
loop
xor
jo
add
leave
sub
iret
lock
inc
adc
insb
push
cmpl
aaa
cmp
aam
mov
mov
scas
test
test
push
ljmp
arpl
add
test
das
js
cwtl
mov
jb
xchg
cmp
jnp
bound
push
mov
push
sahf
call
xor
dec
add
jno
jne
push
xor
xchg
test
xor
sahf
jg
xchg
aaa
test
fsubs
adc
push
xchg
dec
popa
gs
cmp
push
cmpsl
dec
sbb
rcll
mov
scas
xchg
xor
cmpsl
popl
addr16
dec
push
imul
shll
xor
push
add
loope
jmp
and
or
imul
push
aaa
jmp
lea
je
lcall
or
pop
mov
sub
fwait
sub
jnp
inc
adc
dec
cmp
or
sbb
loope
shrb
and
mov
and
aaa
dec
sbb
or
daa
xor
push
mov
bound
xor
fcoml
std
imul
inc
push
sbb
mov
insb
js
jl
and
shlb
and
jne
xor
mov
enter
inc
adc
xor
jb
xchg
in
adc
add
pusha
dec
js
cmp
cmpsb
cmp
aas
aas
pop
js
pop
rcr
push
sbb
into
mov
fs
fmulp
pop
pop
mov
divl
nop
push
sbb
ss
mov
mov
icebp
sbb
mov
stos
in
roll
pop
or
sub
push
sbb
stos
push
mov
pop
xor
addr16
or
cwtl
mov
fnstenv
ss
dec
daa
stos
dec
shl
into
sub
dec
dec
outsl
xchg
popf
push
mov
popf
push
fisttpl
stc
dec
aam
and
cmp
add
inc
adc
imul
aas
add
out
push
icebp
or
dec
cmp
dec
xchg
xchg
ja
inc
cmc
mov
enter
iret
inc
loopne
xchg
dec
jne
push
fwait
mov
jns
xor
dec
xchg
mov
in
sub
xor
popa
pop
xor
push
inc
movsl
ror
adc
inc
inc
inc
sub
stos
jmp
inc
jge
in
adc
cmp
insl
ja
daa
jmp
push
xor
or
lahf
cmp
outsl
jne
inc
xor
shrb
daa
jnp
mov
jo
cmc
dec
scas
add
inc
add
cmp
mov
xor
mov
mov
jne
inc
inc
pop
push
add
xor
flds
flds
psrlq
adc
out
cmp
and
jecxz
movl
shll
jecxz
leave
push
or
xor
mov
xor
add
push
nop
sbb
and
xor
pop
or
sahf
add
xchg
mov
inc
in
aaa
add
sti
sahf
cmp
fldt
dec
test
add
sbb
cwtl
mov
fwait
in
in
and
cmp
xor
mov
aaa
cmp
jae
outsl
xor
pushf
sbb
imul
arpl
sub
push
inc
adc
inc
push
test
paddusw
iret
pop
inc
xchg
nop
dec
es
mov
sbb
xor
inc
fsubs
cmp
and
pop
aas
faddl
lds
xchg
push
xchg
xchg
xchg
test
xchg
mov
shlb
xor
les
es
repz
into
xor
addr16
jnp
sub
pop
pop
cmp
in
popf
js
jns
lahf
xor
nop
xchg
or
faddl
mov
xor
mov
pop
cmp
popa
daa
sbb
or
push
or
aad
jmp
ja
dec
xchg
sub
insl
xor
nop
enter
pop
gs
sub
sbb
add
cmp
xchg
inc
xchg
lea
dec
jmp
ja
dec
cwtl
shrb
and
jmp
ja
dec
in
lods
push
mov
adcb
imul
andb
sub
xchg
rcrb
inc
repz
mov
test
adc
inc
cmpsl
mov
rcrb
cmp
inc
psignw
inc
lret
mov
adc
lret
push
xchg
adcb
cmp
inc
push
xor
jmp
imul
mov
ss
or
sbb
mov
lea
add
loop
push
mov
lret
mov
sbb
aaa
js
push
icebp
mov
or
push
mov
fwait
adc
add
sub
aaa
icebp
inc
popa
dec
sarl
sarb
jge
inc
mov
inc
insb
test
inc
xor
lock
pop
addl
xchg
push
out
fwait
push
dec
mov
movntq
or
lods
adc
inc
mov
mov
adc
sti
and
inc
std
xor
inc
orl
loopne
jno
add
inc
lock
sub
pop
xlat
xchg
lds
cmp
or
xor
iret
inc
mov
loope
cmp
xchg
pop
insb
mov
xorl
faddp
loope
cmpsl
sub
aaa
loope
mov
adc
cmp
sub
inc
cmp
roll
cmpsl
je
sarb
push
pop
lock
push
js
or
mov
popf
jmp
xchg
cmp
mov
and
xchg
mov
aad
cmc
and
jo
xor
xor
cmp
addl
ds
sbb
testl
sbb
pop
mov
outsl
push
xchg
push
cmpsl
idivl
jge
aas
sub
push
xchg
dec
int
dec
fistpl
and
mov
jae
fnstenv
jae
sbb
jno
mov
mov
inc
add
movl
int
mov
add
xor
fnstsw
inc
movl
std
sbbl
jge
push
sti
cwtl
mov
aad
iret
cmp
jl
shll
inc
xor
xor
xor
inc
mov
xlat
movsb
neg
sbb
sbb
jno
xor
out
mov
jnp
addr16
and
cmp
xor
add
pop
mov
das
ss
mov
jmp
aas
sbb
shlb
icebp
icebp
push
adcl
xchg
mov
adc
dec
mov
jmp
pop
xchg
xor
cli
cmp
aaa
stos
loopne
xchg
daa
jmp
movsb
gs
jge
inc
punpcklwd
cmp
push
xor
sub
les
push
adc
std
dec
sbb
and
sbb
dec
push
insl
jl
jne
pop
int
fimuls
es
mov
jmp
daa
xchg
fildll
idiv
addr16
fiadds
jns
xchg
pop
rcrb
inc
insb
loope
mov
xor
rorl
sbb
addr16
cmp
js
rcrl
xchg
xchg
xchg
inc
filds
sti
or
int3
into
dec
xor
aaa
xchg
sbb
pop
fwait
repz
daa
mov
fisttpll
inc
inc
cmp
adc
or
cmp
lods
mov
aaa
sub
movsb
xchg
or
fidivs
or
sbb
lret
xor
out
jg
or
push
pop
cmp
xchg
mov
sbb
xchg
inc
aaa
popa
ret
popa
scas
push
or
rorl
cmp
jl
fisubrs
xchg
loope
mov
sub
sub
and
gs
ret
jnp
fstps
data16
in
ret
popa
fldcw
mov
nop
test
out
xor
xor
cmp
sbb
xor
ror
imul
dec
adc
ficomps
fwait
cmpsl
push
shrb
dec
pushf
sbb
js
lcall
leave
cmp
int3
cmp
fstps
das
insl
mov
cwtl
les
das
dec
out
mov
popa
dec
ret
ret
fidivs
fwait
jo
mov
lods
inc
jae
push
out
popf
xchg
xchg
cmp
js
jg
inc
outsl
ret
fistl
cmpsb
mov
or
loope
js
aad
xor
xor
es
dec
xchg
xor
test
fwait
lds
pop
jmp
iret
shll
add
sbb
dec
adc
add
xchg
lret
fidivrs
push
imul
jns
dec
cmpsl
aaa
lret
test
dec
and
aaa
or
pop
mov
ja
xor
jecxz
jno
jmp
push
cmp
fisttps
dec
aas
xor
fisubs
add
lock
fwait
int
out
cmp
stc
pop
daa
xor
pop
mov
add
leave
loopne
add
les
mov
mov
fwait
push
out
and
idivl
popa
pop
xor
stos
and
lock
inc
jp
icebp
push
or
push
shll
std
push
movsl
pop
add
in
push
bound
mov
or
shlb
or
inc
out
push
xchg
leave
xor
popfw
cmp
xor
imul
mov
js
les
jmp
jnp
push
fstenv
data16
pusha
subb
mov
mov
ret
lods
cmp
and
add
outsl
xor
out
loope
xchg
sbb
sub
pop
popa
dec
repz
gs
in
adc
scas
pop
cmp
mov
adc
testb
xor
mov
out
pop
shll
push
js
flds
mov
mov
das
jno
movsb
push
mov
mov
push
mov
cmpsb
loope
mov
pusha
xor
test
cmc
mov
mov
mov
popl
fisubrs
xadd
stos
aaa
mov
mov
xor
fincstp
push
xchg
btc
or
aad
pop
fisubs
in
xchg
fimuls
mov
out
or
aas
inc
xorl
addl
xor
dec
ret
mov
outsl
fnsave
mov
gs
adc
cmp
aad
lret
mov
pusha
inc
inc
jp
jno
ret
imul
dec
mov
pop
iret
inc
inc
outsl
add
aaa
std
outsl
or
jecxz
popa
push
out
je
xor
mov
ja
inc
cmpsl
popa
lock
int
out
dec
aas
or
rcll
loop
pop
cmpsl
xchg
xchg
icebp
es
es
cmp
int3
pusha
ret
frstor
and
push
ror
movsb
sbb
mov
scas
ret
adc
adc
addr16
push
test
fimuls
cmpl
cmp
xor
mov
cmpsl
negl
sbbl
popf
mov
shrl
neg
imul
mov
cmpsl
loope
jne
add
inc
add
ret
mov
sbb
xchg
xchg
pop
int3
cmp
sbb
orb
fbld
add
rcrb
or
lods
and
fwait
lret
imul
add
jecxz
dec
jp
mov
add
roll
push
mov
pop
mov
xor
icebp
int3
cwtl
xor
xchg
sbb
sbb
cwtl
push
or
fsts
and
aaa
imul
ja
xor
movsb
popa
sbb
sbb
testl
lahf
xchg
cwtl
push
xchg
fucomp
xor
pop
fisubs
adc
adc
inc
jg
sub
adc
sub
sbb
inc
sbb
lds
bound
dec
cmc
cmp
fisttps
je
cmp
xchg
int3
jae
or
xor
mov
mov
pop
jae
sbb
pop
or
dec
cmp
in
jbe
sbb
fidivrs
or
stos
add
xor
push
inc
cmc
in
int
and
mov
fistl
xor
test
mov
outsl
neg
xor
xchg
jge
or
popa
ret
fnstcw
es
das
xchg
in
lcall
sub
aam
ja
push
jne
lock
xchg
pusha
cltd
pop
cmp
stos
pusha
addr16
push
daa
xchg
mov
mov
cmp
cwtl
xor
ja
sub
jno
repz
out
insb
inc
icebp
repz
mov
mov
cwtl
je
in
and
or
gs
fisubs
outsl
shl
xor
or
aas
rcl
imul
mov
mov
pop
xchg
dec
out
out
icebp
fidivs
in
mov
loope
lods
js
negl
ret
add
xor
fstp
inc
mov
sub
and
int
lock
ret
ja
inc
mov
shlb
sbb
mov
lcall
fiadds
push
pop
dec
and
cmc
leave
loope
push
xor
xchg
add
std
inc
das
scas
or
or
rcrl
fwait
int
push
stos
inc
outsl
or
mov
shlb
inc
outsl
testb
dec
aaa
dec
jp
cwtl
inc
mov
mov
imul
push
add
aas
icebp
sbb
inc
dec
inc
pushl
xor
jecxz
inc
leave
ficomps
push
mov
inc
int3
call
lret
movl
mov
cwtl
icebp
pop
sub
dec
leave
push
xor
or
je
lods
xchg
xor
addr16
jg
xor
fildll
hlt
faddp
imul
leave
loop
lret
jecxz
idivl
dec
mov
loop
arpl
mov
std
push
inc
or
pop
cmp
sbb
insl
sti
jo
aaa
sub
lock
rcrl
mov
fnstcw
fwait
jno
add
leave
loopne
popf
sbb
and
mov
lds
xchg
int
mov
dec
das
lcall
ret
test
call
xchg
lods
mov
xor
push
mov
sbb
out
imul
in
popf
sbb
jae
and
mov
ljmp
popf
mov
data16
push
int
jae
mov
ret
xor
cmp
cmpsl
mov
push
sbb
loopne
mov
pop
sub
jp
in
jmp
test
lods
push
adc
inc
int3
bound
outsl
push
popa
jae
das
cmp
pop
or
inc
xchg
dec
jp
loop
mov
sbb
leave
xchg
fsts
fiadds
stc
int
js
ret
pop
daa
sbb
arpl
xchg
leave
dec
inc
xchg
jmp
fisttpl
xchg
loopne
js
jae
cmp
and
dec
fnstsw
push
xor
arpl
movsb
ret
popa
icebp
aaa
or
dec
or
lret
mov
push
mov
ret
incl
push
setp
outsl
add
js
pop
test
mov
xor
pop
pop
pusha
ss
jne
test
imul
jnp
jns
mov
sbb
xor
pop
sbb
xchg
rorl
pop
inc
leave
mov
push
and
dec
inc
out
inc
or
dec
pop
lea
cwtl
int
inc
push
xchg
sbb
xor
jbe
icebp
mov
add
shl
adc
push
adc
lea
pop
lock
mov
lods
push
adc
test
push
lds
cmp
aaa
jge
imul
imul
stos
push
int3
jp
push
fwait
sbb
lcall
push
outsl
add
mov
arpl
cmp
iret
popf
add
repz
add
rcrl
sbb
and
inc
adc
jmp
cmpsl
xchg
outsl
sbb
inc
movq
dec
loop
pop
add
sbb
push
repz
inc
cmp
jmp
aam
push
pushf
imul
mov
popa
lcall
ret
test
dec
in
mov
sub
icebp
xorb
movsb
xchg
aad
aad
imul
xor
mov
jnp
loope
ljmp
push
xchg
data16
cmpsl
xchg
lods
mov
xor
or
setns
jae
dec
push
cmpsl
aad
mov
and
mov
popa
negb
movsl
les
push
inc
adc
cwtl
lret
xchg
xor
ja
stc
popf
stos
or
jp
jnp
loope
xchg
sub
xchg
jno
add
mov
data16
js
pop
fwait
icebp
rol
mov
insl
dec
das
xor
jae
popf
nop/reserved
outsl
inc
sbb
ja
sub
jecxz
loope
mov
xlat
cmp
gs
mov
and
fimuls
stos
negl
rorl
int3
cmp
fwait
rorl
cmp
test
jecxz
ss
test
dec
jno
cmp
inc
xchg
jp
das
daa
fildll
int3
bound
xchg
cmp
add
xor
sbbl
popf
aaa
jecxz
ss
popf
bound
mov
aaa
orl
pusha
inc
mov
inc
adc
cmp
lods
or
xchg
mov
mov
outsl
in
inc
mov
sbb
and
inc
sbb
int3
bound
rcll
mov
jnp
and
push
mov
pop
frstor
jno
push
decl
adc
lock
testl
jmp
pusha
ss
dec
mov
inc
xchg
inc
lret
adcb
dec
js
fxch
xor
sbb
jnp
lahf
roll
add
xor
iret
xor
jg
inc
popf
cwtl
lock
icebp
fwait
mov
popw
lcall
jmp
rcrl
mov
movl
jp
loop
pop
test
rcrl
int
aad
mov
sbb
pop
mov
sbb
mov
xor
pop
xor
or
xor
jae
sub
cmp
add
popf
das
js
xchg
jle
repz
mov
push
mov
inc
arpl
orb
imul
or
pop
orl
in
out
fisubs
mov
dec
stos
ret
jne
jne
mov
arpl
ja
xchg
sarb
fildl
fisubrs
add
cmp
addl
daa
push
outsl
addl
fwait
ror
and
je
dec
push
aas
filds
add
mov
sub
fwait
push
pop
xor
jnp
dec
lret
cmc
int
flds
mov
aaa
pushaw
inc
cmp
dec
aaa
mov
lahf
jmp
inc
xchg
cwtl
aam
test
dec
pop
ljmp
sbb
cmc
or
adc
addr16
and
aad
icebp
test
jmp
data16
xchg
cmp
inc
pop
ss
adc
mov
lock
outsl
sub
xor
js
push
add
rdpmc
cwtl
add
or
inc
cmpsl
ja
jnp
or
xor
add
jmp
daa
mov
les
cmpsl
mov
andl
js
popl
xor
out
pop
lret
jg
aad
ret
in
test
stos
into
popa
lods
aaa
outsl
pop
int
outsl
xchg
dec
or
mov
xchg
push
xchg
xor
aas
sbb
mov
adc
inc
or
test
cwtl
les
movsb
and
pop
inc
xor
lock
ficoms
pop
xor
gs
ficomps
mov
xchg
xlat
dec
add
add
ja
lods
les
int
adc
adc
push
int3
cwtl
jge
stos
cmpsl
fstpl
mov
xor
aam
scas
and
and
aam
dec
dec
xor
int3
pop
push
mov
and
mov
xor
imul
push
mov
or
pop
inc
out
dec
cwtl
int
lds
mov
dec
jne
push
xor
mov
das
mov
ret
or
jmp
or
fisttpll
xlat
movsb
and
xor
inc
mov
sub
mov
icebp
xor
out
pop
inc
and
les
and
dec
lcall
and
pop
xor
test
js
lret
outsl
jmp
or
jo
pop
jg
mov
lds
pop
and
ljmp
jp
cmp
xchg
movsb
mov
and
movzwl
cmc
dec
icebp
dec
xchg
inc
movsl
xor
test
mov
jnp
loop
shll
sbb
and
adc
pop
loope
pop
outsl
add
scas
dec
int
xor
mov
mov
mov
jne
cmp
or
pop
push
push
aam
adc
sub
adcl
mov
cmpsl
inc
scas
inc
dec
jp
xlat
xchg
xor
pop
pop
ljmp
or
sbb
adc
jne
js
notl
adc
dec
call
addr16
sbbb
lret
mov
sbb
data16
mov
xchg
mov
test
das
loop
data16
sbb
add
push
jge
imul
pusha
loope
cmp
dec
aaa
jae
sarl
adc
push
mov
iret
adc
dec
cwtl
push
ds
iret
push
dec
mov
sub
jnp
fisubrs
ret
sarb
jno
sbb
dec
cwtl
adc
jmp
leave
cmp
lahf
stos
and
pop
iret
mov
cmp
orb
xchg
int3
dec
xor
cwtl
adc
inc
cltd
jmp
outsl
or
or
adc
jmp
insl
in
shrl
sbb
cltd
repz
out
cmp
lods
xchg
push
lahf
pop
dec
xor
cmp
sbb
fnsave
bswap
push
mov
js
es
lahf
jg
add
cwtl
pop
pop
or
dec
adc
push
push
mov
shll
push
daa
cwtl
popf
xchg
mov
neg
add
xchg
jne
ja
inc
in
sub
adc
jae
xchg
inc
lea
or
popa
inc
mull
imul
inc
inc
dec
sarl
cmpsl
dec
mov
mov
adc
out
ret
push
out
cmc
roll
xor
jno
movsb
fwait
aam
adc
mov
test
cmp
adc
outsl
add
loope
and
cmp
xchg
push
or
push
pop
xlat
pop
mov
adc
xor
mov
mov
push
mov
mov
xchg
sbb
xchg
xor
push
leave
call
add
lea
js
ret
jnp
adc
mov
movsb
mov
mov
mov
dec
aaa
xchg
sbb
int3
pusha
imul
jns
cwtl
rorl
push
jecxz
roll
call
push
pop
add
dec
sbb
mov
xchg
dec
cmp
push
mov
or
shrl
push
fwait
add
add
jo
shlb
xor
fcmovnu
jge
rolb
cmp
imul
testl
test
lods
int
int3
push
icebp
ficomps
mov
xor
xor
insl
xchg
cmp
inc
test
xor
in
adc
daa
or
iret
xor
cwtl
add
or
mov
leave
mov
ja
lea
outsl
jbe
mov
jecxz
pop
inc
and
dec
pop
mov
shll
loope
xor
mov
inc
loopne
or
psubw
int3
es
int3
xlat
aad
dec
lcall
mov
xor
test
in
xor
mov
xchg
mov
pop
lds
les
jmp
mov
sub
xor
pushl
cwtl
add
loopne
in
xor
inc
push
add
fwait
jo
int
movsl
in
movsl
mov
flds
mov
loop
sub
cmp
or
pop
popf
outsb
shr
sbb
push
jne
iret
shll
mov
mov
pop
test
cmp
sub
sub
dec
mov
imul
pop
shl
andb
popa
inc
dec
out
lock
repz
cmc
dec
sbb
mov
xor
add
mov
dec
lcall
inc
js
xchg
adc
pop
sbb
mov
in
sub
xor
dec
cwtl
xor
push
dec
insl
sarl
or
lcall
xor
rolb
and
mov
lds
mov
mov
shlb
jmp
xchg
iret
jnp
aaa
xor
out
xchg
xchg
inc
idivl
mov
sub
xchg
push
mov
fists
arpl
add
xor
cwtl
aad
lahf
lret
sub
add
sub
mov
xchg
daa
or
es
loop
aas
jge
out
test
mov
test
jmp
mov
leave
in
mov
adc
jno
stc
inc
ficomps
imul
fiadds
addb
xor
xor
adc
sub
inc
pop
loope
sbb
popf
mov
filds
jno
dec
bound
iret
xchg
lds
or
and
adc
sub
adc
mov
pop
pushf
xor
xor
xchg
movsb
pop
xchg
cltd
mov
or
movsl
es
lcall
mov
cmpsl
fistpll
inc
mov
and
shll
xchg
and
mov
xor
mov
jno
jmp
and
stos
add
push
xchg
mov
pop
cmp
xor
dec
stos
xchg
cwtl
dec
sub
cwtl
xor
pop
imul
push
and
push
jecxz
add
loopne
add
arpl
xchg
lahf
je
push
int
xchg
pextrw
ss
js
call
mov
push
push
cmc
arpl
push
jle
jno
mov
sub
mov
roll
mov
aas
xlat
call
cmp
data16
push
leave
out
pop
mov
icebp
and
inc
std
mov
aas
add
in
push
dec
sbb
inc
sbb
fs
xor
push
leave
loop
das
shrl
dec
mov
popa
lock
or
popf
cmc
int
xor
dec
icebp
es
push
xor
sti
pop
adc
jp
ret
sbb
cmp
adc
cmp
scas
sbb
sub
xchg
sarb
adc
or
int
fldln2
movl
imul
jnp
mov
dec
scas
inc
out
int
ret
mov
push
mov
inc
adc
adc
in
jnp
or
adc
add
xchg
addb
xchg
sub
pop
lock
pop
push
cltd
stos
cmp
push
cmpsb
insb
out
sub
xchg
mov
popa
sub
lds
fists
mov
rclb
cmp
cmp
push
lds
adc
inc
add
inc
dec
das
fwait
mov
testl
mov
stos
data16
sbb
mov
xor
es
jp
out
push
pop
imul
and
jno
dec
lcall
fwait
loope
shll
add
sahf
es
xchg
xor
out
leave
and
je
cld
push
adc
or
push
loopne
dec
lcall
movsb
pop
xor
inc
jecxz
add
ret
fwait
imul
aad
and
outsl
ss
mov
add
cmp
mov
and
jno
popf
aaa
pop
push
movsb
ljmp
sbb
js
and
scas
cmp
and
mov
xor
aaa
dec
sbb
lret
addr16
mov
rorl
add
xor
lock
shrl
xor
shl
cmpsl
xor
out
or
add
pop
rcll
inc
adc
jge
std
jns
push
pushf
fisubrs
lds
into
shll
add
adc
adc
mov
sbb
jmp
jge
push
outsl
or
test
xor
test
jnp
adc
dec
jae
or
rolb
arpl
push
push
add
in
sbb
cwtl
lret
int
aaa
pop
dec
cwtl
mov
ljmp
sbb
test
addr16
sbb
xor
rorl
jmp
outsl
inc
mov
hlt
add
andb
sbb
dec
cltd
leave
cmc
dec
sbb
fiadds
stc
pop
pop
lds
pop
push
mov
test
movsl
iret
cwtl
push
outsl
push
xchg
aam
xor
sub
andl
mov
enter
movsb
pop
movsl
jge
xor
cmpsl
stos
xlat
fwait
hlt
inc
repz
jns
xor
out
add
dec
jmp
mov
sub
adc
daa
cwtl
roll
or
outsl
mov
lock
icebp
cmp
lret
mov
cmp
cmp
inc
xor
sbb
in
mov
push
push
ljmp
test
jg
mov
mov
inc
mov
aaa
adcl
fs
das
int
insb
ja
jg
testl
add
push
adc
add
push
mov
adc
flds
sub
dec
stc
loope
cwtl
aad
mov
movsl
inc
sbb
out
xchg
lea
mov
inc
jmp
mov
add
mov
outsl
pushl
pop
xchg
push
cmp
sbb
imul
ficomps
push
mov
push
mov
adc
movl
pop
add
push
adc
jnp
jp
imul
fnstenv
sbb
addb
adcb
jnp
xor
xorl
xor
dec
mov
push
mov
data16
in
jno
int
es
addb
jbe
push
sarb
cmovne
inc
mov
push
iret
jae
ret
pop
xchg
scas
xchg
push
xor
xor
stc
leave
push
loopne
mov
mov
int3
call
inc
out
xchg
movsb
mull
adc
inc
xor
add
test
in
fwait
adc
xor
outsl
push
rorl
das
add
mov
popa
shll
jl
xor
pop
xor
orl
cmpb
jns
in
lock
sbb
add
xor
cmp
xlat
add
adc
pop
xchg
mov
inc
daa
int
push
inc
das
jmp
movaps
cmc
dec
inc
and
xor
sbb
jecxz
cmp
xchg
push
cltd
mov
icebp
sbb
or
sub
inc
jnp
imul
sbb
inc
dec
mov
popa
add
mull
int3
addb
pushl
and
adc
js
xor
js
divl
inc
push
int
aam
dec
adc
js
popa
sbb
jecxz
xor
jg
or
movsb
xchg
popf
or
push
sarb
dec
adc
lahf
cmp
pop
hlt
xchg
jecxz
pop
test
jnp
movsb
es
mov
repz
pop
adc
in
popa
cmp
ficomps
mov
mov
inc
int3
and
xor
jmp
xchg
cmpsl
lea
icebp
cmp
das
push
sbb
icebp
lcall
aaa
ret
lahf
inc
daa
or
pusha
inc
pop
jno
gs
es
mov
xlat
xchg
push
dec
clc
roll
adc
in
dec
loope
fistpll
aad
mov
dec
dec
ljmp
sbbb
fbld
js
cmp
sbbb
sbb
xor
fbld
mov
subl
rorb
push
icebp
ficomps
mov
dec
shrb
xor
cmc
push
outsl
adc
sbb
mov
cwtl
add
adc
lcall
mov
cmpsl
or
add
cmp
dec
pop
cwtl
shlb
mov
data16
or
jecxz
jp
pop
leave
adcl
add
xchg
adc
lcall
dec
mov
pop
xlat
xor
cmp
xor
icebp
push
icebp
pop
dec
xorl
es
mov
cmc
es
xlat
cmp
orb
xlat
sub
inc
jmp
shll
js,pn
es
or
adc
or
inc
pop
xor
aaa
sub
mov
pop
movsl
mov
xor
adc
cmc
pop
mov
pushl
mov
mov
dec
ljmp
dec
sub
mov
icebp
andb
test
incl
sbb
lods
mov
cwtl
icebp
orl
xor
lods
or
mov
cmp
mov
sti
je
bound
pop
arpl
sarl
mov
or
fldcw
adc
stc
add
sub
pop
cltd
jmp
es
xor
gs
jg
popf
fwait
jno
adc
aaa
mov
aaa
push
or
sbb
and
jmp
xchg
add
and
loope
or
in
adc
mov
or
sbb
addr16
test
adc
stc
cmp
jmp
shld
inc
add
adc
icebp
es
mov
je
cmpsl
inc
xor
aad
inc
mov
cmp
or
inc
aad
dec
lcall
add
mov
ljmp
and
pushl
xor
fwait
push
mov
mov
add
mov
jmp
jno
or
push
out
ja
popa
int3
js
inc
pop
mov
inc
jp
loop
out
pushl
cmp
xor
xchg
or
push
sti
sbb
sub
and
ret
ljmp
and
fistl
mov
ret
test
sub
adc
jnp
js
sbb
in
mov
xchg
jg
sub
nop
stos
pop
xchg
or
pop
dec
pusha
jbe
jmp
sti
fisttpll
and
pop
inc
int
add
daa
cmp
xor
dec
ja
shrb
xchg
dec
fwait
ret
fwait
icebp
and
adc
sbbl
arpl
loope
xchg
aaa
and
outsl
push
out
mov
xor
jecxz
in
popa
lds
fidivs
push
cwtl
icebp
es
adc
mov
xor
dec
xchg
fisttpl
stc
aaa
or
inc
adc
shrd
push
adc
fimuls
add
or
sub
cmc
dec
pop
push
fst
mov
mov
or
sbb
jp
xor
fldl
ret
addl
mov
inc
in
xchg
jmp
adc
sub
imul
xor
and
shlb
and
add
xor
fstps
fwait
popf
scas
fs
leave
cmp
or
nop
mov
adc
inc
fwait
inc
daa
lcall
xor
jg
inc
xor
int
jno
push
outsl
fcmovnbe
sbbl
mov
jmp
int3
adc
pushf
cmp
test
and
xor
es
cmovne
stos
jmp
mov
imul
fisubs
or
jecxz
idiv
dec
dec
push
les
jmp
andb
mov
add
xchg
push
mov
adc
lds
inc
dec
pusha
pop
mov
gs
push
nop
mov
sub
movsb
and
inc
or
sbb
lods
pop
jno
mov
int
xor
dec
jmp
lods
add
ret
lods
jg
loopne
call
cwtl
adc
or
cmp
aaa
sbb
sub
rcrl
add
test
fisubrs
data16
les
xchg
lcall
rorl
out
inc
and
std
iret
or
data16
div
lds
or
inc
out
aaa
lods
mov
mov
sti
pushf
push
mov
test
ja
and
mov
cmp
jecxz
mov
sarb
ret
jnp
lods
and
fwait
adc
test
stc
std
mov
das
pop
mov
xor
aaa
mov
in
add
loopne
addl
cltd
pop
cmp
int
cmp
pop
mov
imul
mov
jecxz
test
test
out
addl
in
bound
outsl
ss
test
int
mov
xor
lods
sbb
adc
test
int
xchg
pop
adc
jp
sub
mov
adc
lcall
aaa
cmpl
inc
movsl
dec
lcall
lcall
or
ret
inc
in
inc
adc
daa
jecxz
add
outsl
nop
sub
xor
adc
out
cmp
adc
lds
and
jp
in
xor
push
mov
jecxz
popa
push
rorb
aam
mov
fcomip
jp
loop
xlat
and
adc
and
pop
dec
pop
sub
xor
add
jmp
repz
xchg
add
xchg
pop
imul
sub
sbb
mov
jge
iret
fiadds
fst
sub
push
xchg
popf
pusha
movsb
inc
fistpll
das
sti
movsl
ret
pop
adc
test
int
push
int
aaa
ret
pop
in
or
fwait
mov
lods
pop
add
fistpll
xchg
jne
aas
addr16
fwait
ror
insl
add
push
cmp
push
mov
mov
mov
and
imul
leave
adc
adc
mov
fldl
inc
sub
xchg
fidivrs
mov
mov
pop
pop
aaa
xchg
xchg
fistps
mov
add
adc
add
dec
mov
xchg
neg
pop
jmp
mov
ja
popa
or
repz
or
pop
sub
sub
lcall
dec
dec
adcb
test
iret
inc
popfw
push
out
pop
subl
and
cmp
push
adc
cmp
test
xchg
mov
iret
addr16
sub
dec
mov
jp
aas
add
out
pop
ret
loope
int3
cmp
test
in
jno
jp
cmp
int
pop
les
loope
jmp
or
xor
aaa
dec
jge
rolb
aaa
or
cwtl
push
xor
aas
aaa
fwait
hlt
sbbb
xor
dec
insl
mov
data16
aad
xor
or
rolb
psubsb
sub
inc
adc
adc
cmpsl
ja
pop
mov
shr
outsl
mov
add
inc
jnp
mov
lds
insl
mov
push
pushf
adc
xchg
movsb
bound
mov
es
jns
fld
in
stc
out
popa
push
jae
mov
pop
jmp
xlat
fwait
add
aaa
ret
mov
addl
fimuls
loope
add
movsl
scas
das
cwtl
hlt
push
mov
cmp
pop
dec
dec
das
xor
pop
push
sbb
imul
pop
lods
fisubrs
mov
rorb
adc
outsl
dec
adc
sbbb
js
dec
iret
adc
es
stos
mov
cwtl
rcr
imul
mov
dec
add
pop
push
mov
or
pop
es
inc
and
xchg
push
outsl
jbe
mov
fistpl
jne
pop
js
xchg
add
push
dec
test
fstpt
out
pop
cltd
jns
es
aaa
inc
aaa
in
sbb
icebp
fisubs
fst
add
shll
inc
inc
test
int
add
add
aaa
arpl
sub
xchg
adc
movsb
fisubs
mov
jns
sbb
pop
lds
iret
adc
sbb
stc
call
jecxz
xchg
testb
xor
xor
roll
out
sbb
shlb
mov
inc
out
or
xchg
imul
or
psllq
inc
xchg
cwtl
adc
arpl
jge
es
popf
jecxz
or
adc
or
add
cmpsl
rcr
xchg
fwait
add
add
fnstsw
test
ljmp
mov
inc
das
jge
xor
adc
push
inc
popa
push
jmp
mov
in
or
dec
cwtl
add
test
xor
and
pusha
xchg
mov
xorl
mov
add
fimuls
popa
sub
out
lds
add
ja
xor
xchg
cmp
jnp
scas
push
mov
fs
mov
mov
dec
ljmp
loop
test
mov
aam
adcl
mov
nop
mov
popa
pop
pop
add
loopne
and
js
xor
daa
cwtl
push
adc
mov
add
adc
dec
cltd
dec
out
xor
loope
roll
adc
add
cmc
xorb
cmp
xorl
ljmp
push
sub
lods
out
mov
dec
cwtl
and
xchg
dec
js
inc
inc
push
lds
cmc
pop
shrb
push
es
push
mov
mov
xlat
test
lahf
rcll
pop
mov
mov
shll
push
arpl
es
out
aad
orb
fxch
aas
xchg
xor
xor
dec
insl
call
jmp
mov
add
mov
rcrl
mov
xor
rcrl
and
adc
cwtl
add
sub
push
xor
jno
daa
testl
xchg
pop
andl
daa
jp
xor
mov
jmp
imul
js
and
in
adc
cmp
imul
mov
mov
imul
inc
icebp
or
sub
adc
scas
iret
xchg
aaa
test
gs
cmp
jge
cmp
push
inc
xlat
or
cwtl
and
push
mov
sub
js
inc
addl
push
ret
fstps
xor
jmp
add
ret
ja
lds
imul
sbb
cwtl
aad
int
dec
orl
fsts
lock
mov
add
sub
dec
imull
andb
jns
push
cmc
data16
outsl
pop
rcr
sub
inc
dec
mov
xchg
testl
mov
add
push
cmp
js
js
mov
imul
andl
add
push
les
arpl
push
dec
stos
xlat
imul
popf
fisubs
sbb
int
pop
fxch
loope
push
dec
cmp
xor
mov
push
mov
lods
repz
jp
mov
xchg
sti
inc
test
out
emms
push
fldcw
mov
xchg
rcrl
mov
out
jge
call
jmp
cwtl
xor
mov
insl
testl
jmp
or
jg
add
movsb
xor
data16
sbb
cmc
add
aaa
push
das
stos
mov
mov
lcall
or
jmp
testl
arpl
test
xor
sbb
fisttpl
pop
and
daa
inc
mov
iret
adc
dec
cmp
push
xchg
repz
push
xchg
inc
fwait
lea
data16
or
mov
sub
outsl
or
dec
in
popa
adc
push
mull
mov
ss
dec
mov
xor
shl
push
dec
push
call
fcomip
shr
mov
popf
xchg
xor
cmpsl
insl
cmp
int
mov
inc
in
imul
rorl
es
aad
mov
fldcw
icebp
and
and
aaa
mov
jge
scas
das
js
jnp
das
mov
push
scas
mov
loope
repz
shll
inc
mov
fwait
iret
push
fisubs
sub
xor
add
sbb
and
pop
addl
cmp
push
out
aad
sqrtps
xchg
lahf
dec
xchg
cmp
add
int
int
jmp
and
icebp
add
ss
dec
cwtl
add
add
imul
das
pop
lahf
jae
test
popf
lret
mov
popa
rcl
sbb
int
scas
mov
or
in
mov
xor
aam
jne
adc
mov
out
mov
lds
xor
push
xlat
sbb
or
push
inc
xchg
pop
or
and
xor
push
sbb
cmp
call
lds
mov
push
fldcw
or
xchg
xchg
jmp
and
inc
mov
cmpsl
push
xchg
adc
leave
inc
xor
jne
add
hlt
fsts
xor
cmp
sub
pop
add
stc
mov
stos
sbbb
xchg
ror
add
outsl
xor
repnz
inc
add
dec
outsl
dec
jae
fimuls
outsb
out
cmpl
imul
daa
adc
js
push
icebp
or
mov
or
add
sub
push
lret
or
cwtl
add
xor
cmpsl
movsb
ret
mov
jno
adc
aaa
mov
sbb
mov
inc
cmpsl
jmp
push
inc
ja
dec
or
insl
or
or
push
adc
xchg
xchg
movsl
xlat
int3
loopne
bound
les
push
add
test
rorb
adc
cwtl
add
mov
loop
dec
pop
fwait
jl
out
imul
push
hlt
mov
dec
inc
stos
xchg
out
int
pop
mov
mov
test
mov
out
test
fwait
shll
lods
fisubs
inc
mov
and
dec
sbb
jnp
sbb
jae
jnp
test
pop
jns
out
adc
testl
mov
subl
data16
fld
fwait
std
lret
add
cmp
test
cmp
and
mov
fnstcw
push
jp
gs
add
push
jmp
adc
jae
xor
aaa
sbb
xor
rolb
loopne
cwtl
rcll
out
rcrb
es
xor
out
add
pop
inc
dec
bound
popa
mov
or
add
mov
xchg
das
fstps
push
mov
icebp
es
add
sbb
or
mov
sets
subl
icebp
jge
push
scas
cmpsl
xor
sbb
and
mov
rorb
adcl
cmpb
mov
adc
addl
shll
or
stos
ret
popa
push
imul
stc
sub
mov
sub
aaa
add
in
pop
lea
in
lods
idivl
imul
ret
add
push
mov
and
push
fldcw
dec
aas
sbb
or
push
cmp
sub
pop
push
mov
dec
jno
mov
adc
sbb
dec
bound
pop
imul
cmp
push
popa
sbb
jg
adc
xchg
js
bound
or
mov
stos
dec
inc
xchg
lcall
mov
mov
sub
adc
lds
jne
xchg
mov
das
xor
inc
dec
loopne
mov
xchg
ss
dec
shll
lds
xor
js
dec
inc
xchg
mov
outsl
pop
notl
sub
rorb
inc
ret
and
lods
and
imul
xchg
js
sub
or
int3
push
adc
sub
sub
test
add
in
xorl
lcall
fsubp
int
icebp
pop
or
and
mull
adc
jnp
mov
xchg
jmp
aas
or
fwait
orl
and
xchg
push
xor
inc
in
dec
roll
ficomps
rcrl
jns
push
add
xor
push
dec
das
leave
int
sbb
and
inc
popf
sub
cmpsl
hlt
push
xor
add
xor
cmp
ret
int3
call
mov
es
fistps
lcall
pop
lret
stos
xor
add
sbb
adc
xchg
pop
cltd
and
jg
dec
add
cmp
cmpsl
pop
sbb
pop
cltd
roll
push
sbbb
jecxz
and
or
fistpl
aad
cwtl
int
cmp
cwtl
xor
xchg
dec
dec
bound
push
shlb
dec
pop
call
jne
or
test
jne
fistps
xor
jp
lea
xor
xor
int
nop
test
and
xlat
lods
dec
shrb
imul
andl
and
inc
and
pop
mov
pusha
movb
arpl
loope
jnp
fwait
mov
addr16
cmp
add
lds
aad
lahf
test
jo
xor
cmc
and
and
jno
lea
jnp
mov
fsts
loopne
xchg
xchg
sub
pop
shlb
outsl
dec
stos
adc
sub
repz
mov
inc
sub
adc
cwtl
mov
ficomps
and
ljmp
add
dec
shr
fs
fisubs
sbb
jnp
test
negl
xor
ret
aas
add
dec
adc
loopne
cmp
mov
in
and
inc
mov
nop
mov
and
fwait
jno
popl
arpl
mov
loope
sbb
jge
pop
xor
push
test
adc
push
xor
push
xchg
add
mov
mov
shll
or
add
push
pop
mov
mov
lcall
test
arpl
andl
mov
data16
fisubs
mov
aas
ja
es
and
push
cwtl
hlt
lds
call
arpl
sub
ja
mov
xor
mov
or
icebp
xchg
idiv
jae
xor
daa
xchg
lds
mov
jno
mov
pop
cmp
adc
sbb
insl
cmp
aas
imul
pusha
rcrb
jp
or
js
sub
movsb
push
jecxz
push
and
or
out
inc
xchg
xor
xor
out
push
pop
mov
pusha
imul
adc
adc
pop
lea
in
xor
adc
cmp
bound
xchg
push
cmc
ja
loopne
cmc
sub
mov
cmovns
arpl
pcmpeqw
and
xor
psubsb
sub
in
movsb
outsl
push
dec
ja
dec
inc
add
jno
call
dec
sarb
dec
std
sbb
pop
mov
add
ficomps
mov
and
push
xor
adcl
inc
mov
mov
rcrb
add
mov
outsl
fistps
subl
sbb
mov
int3
ljmp
es
movl
test
adc
inc
xchg
movsb
lcall
mov
out
xchg
cmp
cmpsl
aaa
bound
inc
adc
test
and
testl
xor
xor
insl
in
xchg
cwtl
shll
test
shll
mov
ljmp
jp
stc
insl
pop
aas
mov
mov
or
sarl
imul
or
jnp
arpl
imul
push
movsl
sti
test
or
mov
lahf
jae
sbb
dec
inc
mov
out
xor
testl
mov
cmp
mov
mov
pop
mul
xor
sub
jmp
out
fistpll
xchg
lds
lcall
iret
or
inc
adc
sbb
mov
push
mov
push
int3
outsl
bswap
rorb
fidivrs
leave
lods
and
ret
adc
pop
mov
mov
adc
outsl
bound
aad
mov
push
psubq
mov
sbb
push
mov
mov
lcall
ja
inc
xchg
pop
sub
insb
or
daa
cmp
mov
fidivrs
xchg
or
leave
mov
sbbb
xorl
inc
adc
cmpsl
push
dec
and
arpl
or
push
cmp
push
int3
pop
xchg
jecxz
and
sub
ss
push
sbb
stos
es
mov
test
xchg
lcall
push
outsl
sbb
pop
adc
cmpl
xchg
sub
xor
leave
daa
das
xor
and
js
js
testl
dec
scas
and
dec
inc
or
and
lahf
or
pop
dec
leave
addr16
sub
mov
cmovne
daa
mov
dec
xor
inc
dec
xor
shll
inc
jmp
jg
cmp
cmp
sbb
mov
cmpsl
fwait
xchg
xchg
sbb
in
jecxz
cmpsl
ret
and
xor
pop
push
gs
rorb
lods
loop
scas
ffree
aad
xor
inc
dec
lcall
js
cmp
dec
adc
testb
stos
lcall
inc
add
aaa
jmp
stc
xor
popw
sbb
xor
jae
sbb
jne
hlt
es
cmp
xchg
xchg
jns
ret
int3
cmp
lods
inc
jae
gs
mov
xorl
jg
add
add
jns
adc
pop
cwtl
inc
sub
push
inc
test
scas
fistpll
pop
xor
jge
js
test
in
ljmp
adc
or
adc
fidivrs
push
sub
pop
xor
pop
xchg
dec
push
ret
or
mov
xchg
pop
dec
lcall
xor
jnp
xor
sbb
mov
mov
mov
cmp
xlat
or
mov
sub
xor
dec
es
jge
or
cmc
arpl
ret
jg
and
out
adc
inc
jg
loope
xor
sbb
xor
add
adc
cwtl
stos
xor
movsb
fmulp
inc
fildl
popa
ss
lret
jmp
lds
test
pop
pop
out
pop
data16
dec
imul
loope
aaa
pushfw
sub
xchg
pusha
push
xor
dec
inc
mov
inc
adc
leave
mov
jge
fnstcw
int3
pusha
mov
je
and
add
mov
mov
flds
adc
int3
xchg
aad
xor
jnp
push
sub
sarb
add
fwait
int
inc
outsl
subl
out
adcb
and
mov
jecxz
adc
ficomps
insl
pop
arpl
xor
fisubs
add
jno
test
jnp
pop
popf
inc
push
push
ret
test
lds
adc
std
aas
sbb
xchg
sbb
aaa
mov
lcall
or
daa
int
icebp
inc
imul
adc
int3
cmp
fisttpll
dec
std
pop
sarl
outsl
adc
popa
adc
inc
ret
mov
xchg
stc
or
or
imul
pop
int
and
sti
outsl
sub
dec
inc
mov
loopne
jp
sbb
xchg
mov
fisubrs
adc
xorb
pop
xchg
std
test
fwait
mov
xor
sbb
jnp
add
xchg
test
cwtl
dec
pop
das
push
dec
js
inc
icebp
mov
fnstsw
je
jae
aas
inc
out
inc
push
rolb
addr16
int
pop
or
dec
lock
xlat
loopne
or
and
adc
mov
test
jmp
inc
lea
std
insb
add
xlat
push
int3
cmp
jne
push
out
xor
push
into
xchg
ret
aaa
dec
rorl
push
cltd
inc
and
xor
aaa
mov
loop
xorl
mov
mov
xlat
xor
dec
push
out
mov
adc
pop
push
mov
dec
popf
addl
fyl2xp1
mov
andb
rorl
mov
dec
shl
aam
add
pusha
push
stc
push
orb
or
mov
push
adc
icebp
das
xchg
scas
int
dec
aam
insl
mov
xchg
shll
jnp
dec
lds
in
sbb
xchg
jae
or
call
fldcw
xor
fwait
lds
mov
test
or
add
mov
pop
je
xor
jo
mov
dec
xor
or
hlt
test
inc
je
icebp
cmp
sub
daa
mov
push
and
cmp
das
pop
jp
mov
arpl
out
inc
push
iret
shll
cmc
dec
outsl
aaa
cltd
test
sti
in
add
les
ja
in
mov
arpl
cmp
ret
cmc
fisubs
xor
pop
dec
jp
push
lret
lea
popa
add
aaa
mov
cmp
xchg
xor
or
xor
adc
inc
sub
int3
jp
test
xor
popa
add
xchg
inc
push
pop
mov
xor
cmp
hlt
inc
mov
movsb
push
leave
lcall
fisubs
push
or
lds
sub
inc
lcall
js
or
fldl
push
int
add
xchg
sbb
add
stos
in
xchg
stc
cwtl
dec
pop
or
and
dec
cmp
bound
push
add
rcrb
rcrb
push
insb
inc
lcall
bound
outsl
mov
js
pop
iret
cmpsl
int
pushf
pusha
push
das
adc
push
fwait
hlt
xchg
mov
xor
cmpb
es
cmp
das
xor
jmp
dec
jo
pop
out
leave
or
popa
inc
ja
inc
mov
lds
xchg
push
cmc
add
or
fwait
and
add
mov
jo
fxch
mov
fwait
lock
jo
lcall
xor
sub
leave
lcall
mov
dec
movhps
out
jne
xchg
setp
mov
add
add
in
push
push
pushf
adc
fiadds
adc
xor
inc
jae
jp
sbb
lcall
or
mov
mov
hlt
cwtl
pop
rcr
scas
push
dec
lcall
call
aaa
jecxz
pop
imul
jno
sub
ss
lods
or
repnz
movl
push
das
aas
pop
mov
inc
movsb
lcall
stos
fidivs
and
test
push
jns
aas
andb
test
sbb
mov
sub
jmp
aad
or
sub
jl
inc
add
mov
aad
ret
sbbb
das
xor
shll
mov
roll
adc
movsb
ret
sub
xchg
out
adc
xor
stc
test
xchg
andb
mov
add
lock
sbb
js
jno
shll
or
dec
push
push
mov
xlat
or
jp
inc
and
sbb
aas
in
es
xchg
mov
test
mov
cmp
inc
fwait
or
lcall
data16
arpl
dec
xor
pusha
sbb
pushf
pop
add
adc
lcall
loop
and
lods
pop
test
mov
xor
xor
dec
dec
enter
cmp
xor
aad
and
dec
cmp
insb
lds
mov
xor
dec
lock
mov
mov
dec
mov
inc
das
dec
inc
popf
aam
xor
push
int
inc
jno
xlat
add
inc
outsl
mov
jl
jg
lret
insb
ret
mov
subl
imul
roll
dec
dec
pop
movsl
mov
idivl
inc
aad
inc
cmp
xor
je
lods
xor
insb
inc
mov
dec
lods
add
rclb
jns
push
pop
xor
ljmp
xchg
addr16
inc
xlat
sub
or
sbb
xchg
or
rolb
sbb
js
js
dec
scas
in
int
or
push
leave
loop
xchg
pop
lock
inc
xor
insl
addr16
int
adc
ja
aad
jno
pop
outsl
lds
cmp
insl
or
dec
xor
jae
dec
hlt
fiadds
jne
aad
cmp
aaa
fwait
xor
wrmsr
outsl
jge
ret
and
jmp
imul
or
pusha
push
aad
sbb
movl
jg
jg
popa
lods
cwtl
out
inc
cmp
jns
movsb
bound
out
ljmp
jo
cmp
mov
shrl
test
aas
push
push
mov
pop
pop
xorb
xchg
ret
jno
dec
add
jge
mov
push
add
pop
adc
call
xchg
and
leave
push
insl
test
add
or
sbbl
lcall
push
xchg
add
adc
outsl
push
mov
stc
rcll
and
dec
xchg
lods
or
sbb
adc
inc
xchg
icebp
mov
mov
sub
push
cmp
push
adc
mov
inc
sti
jnp
push
xor
cwtl
xor
push
and
leave
fimuls
adc
lcall
dec
aad
dec
or
jmp
and
lds
jg
mov
inc
mov
lea
movsl
dec
lcall
or
cwtl
jns
aas
jno
push
adc
fwait
adc
shlb
shrl
fwait
out
xor
dec
addb
or
inc
cmc
mov
cmp
ja
xor
data16
out
pop
jg
or
jae
dec
loopne
call
nop
xor
push
imul
inc
mulw
pop
inc
ret
fsts
test
jecxz
int
shll
push
xchg
add
inc
add
fstps
and
test
int3
cmpsl
jnp
outsl
adc
dec
mov
pop
push
and
inc
xchg
pop
testl
mov
dec
icebp
xorb
sbb
outsl
inc
mov
jp
jmp
fwait
add
sbb
adc
jg
cwtl
mov
fwait
mov
sbb
pushf
xchg
push
cmp
nop
xchg
fildl
and
movsl
subl
inc
adc
outsl
mov
xlat
in
int
add
popf
aad
shll
out
cmp
movsb
xlat
jnp
sub
andl
jne
mov
mov
and
dec
dec
out
mov
jmp
arpl
xor
rolb
testl
pop
lea
data16
pop
mov
repz
xor
or
std
mov
lahf
inc
int
sbbb
outsl
inc
adc
jecxz
roll
scas
leave
fnstcw
lcall
ss
jg
mov
sbb
dec
aam
pop
or
sbb
shll
adc
xor
orb
sub
popf
add
jp
mov
popa
pop
cltd
das
and
test
int
test
popa
sbb
push
sarb
xor
inc
xchg
dec
lds
pop
les
inc
test
cmpsb
jnp
mov
xlat
fwait
xor
out
inc
cmpsl
or
cwtl
xor
inc
test
adc
jecxz
es
or
rorb
pop
lcall
inc
outsl
ret
out
sbb
jae
out
int
mov
push
data16
es
jmp
fisubrs
mov
daa
inc
sub
mov
outsl
adc
daa
adc
movb
mov
push
das
lret
insl
pop
insl
adc
xor
jecxz
popa
adc
popf
mov
jp
popf
inc
push
mov
je
lds
negl
adc
out
popa
and
cmp
pop
test
ret
filds
dec
adc
add
adc
cwtl
push
xor
xor
das
arpl
mov
mov
fidivrs
mov
stos
inc
test
mov
inc
cmp
dec
jno
cmc
lods
inc
icebp
cwtl
int
jne
popf
je
mov
pop
xor
mov
cltd
fbstp
lods
cmp
xchg
div
ss
out
xor
es
lods
dec
adc
sbb
ret
xor
repz
es
add
fbstp
mov
or
jnp
mov
aas
push
daa
ret
add
sbb
sbbl
or
pop
jp
mull
and
sbb
cmp
push
sub
or
jnp
or
or
rdtsc
loope
mov
mov
mov
jmp
ss
jg
movsl
xor
or
pop
inc
mov
out
js
lcall
inc
or
mov
xor
aaa
pop
rorl
rclb
and
mov
mov
neg
or
or
aas
push
inc
xchg
aas
rorb
mov
dec
cmpsl
or
xchg
roll
xchg
int3
mov
call
xor
adc
lea
es
adcb
inc
ficomps
arpl
and
and
or
leave
ret
jno
mull
add
flds
fisubs
movsb
xchg
mov
lds
xor
mov
repz
dec
pop
cwtl
push
and
pop
mov
int3
es
lea
xor
mov
jns
adc
ja
adc
sbb
push
xor
add
and
push
pop
cmp
and
inc
mov
mov
dec
mov
int
push
popf
add
es
aaa
aaa
loopne
pop
icebp
push
popa
std
cmp
or
test
xor
lcall
mov
mov
xor
inc
lds
mov
mov
mov
aam
mov
outsl
lock
jno
xchg
lcall
pop
push
imul
mov
xor
or
pop
scas
imul
js
jmp
pop
rorl
cwtl
hlt
data16
adc
sbb
mov
jae
dec
push
icebp
mov
movsl
scas
in
fwait
hlt
xchg
inc
das
inc
pop
outsl
mov
popf
dec
xor
inc
ret
adc
rorl
or
add
sub
pushfw
xchg
xor
sbb
data16
add
icebp
lcall
adc
xor
push
xchg
push
xor
inc
mov
mov
mov
push
stc
mov
xor
adcb
add
dec
stos
pop
cmp
push
sub
pop
add
pop
adc
push
pop
xchg
adc
add
lret
loope
test
xchg
sbb
movsb
xchg
xchg
jg
xorb
dec
outsl
xchg
mov
pop
addr16
inc
rcll
sbb
push
xor
sbb
dec
addb
icebp
mov
mov
xchg
imul
cmp
mov
aaa
sub
mov
xor
fimuls
mov
dec
rcrl
mov
inc
pop
insb
enter
aaa
jnp
jnp
ljmp
mov
adc
lcall
add
xchg
fwait
xor
inc
add
sub
incl
add
jne
xchg
pop
inc
cwtl
xor
stos
int
adc
mov
insb
pop
xchg
scas
in
je
dec
lds
scas
cmp
and
inc
inc
imul
ret
movsb
dec
fstl
test
sbb
xor
or
push
sub
adc
add
andl
inc
int3
daa
mov
clc
xchg
mov
push
int
dec
mov
lods
jne
pushf
loop
daa
dec
jge
fbld
push
roll
inc
loop
cmp
sarl
out
jno
stos
es
adc
in
cmp
xchg
sti
outsl
pop
adc
lcall
xchg
mov
mov
mov
add
icebp
pop
or
or
mov
ret
pop
adc
loope
xor
or
cwtl
xorl
add
dec
pop
leave
pop
sti
add
aaa
arpl
jmp
icebp
data16
mov
jmp
push
int
inc
mov
scas
test
cltd
and
add
ret
mov
jne
test
add
inc
test
aad
rcrl
or
jecxz
adc
inc
mov
iret
lds
shrl
add
cmp
flds
push
icebp
cmpl
xchg
das
xlat
lods
lcall
adc
adc
test
adc
cmc
es
xor
sbb
mov
cmp
push
push
dec
sbb
lcall
add
jg
lahf
stos
fiadds
aaa
and
aaa
jg
push
xlat
movsb
flds
adc
es
jp
and
add
dec
test
cmp
gs
pop
mov
push
iret
inc
shll
rolb
pop
mov
mov
cmp
dec
dec
pop
and
sub
loope
ret
int
sub
leave
out
iret
and
imul
inc
sub
jecxz
les
out
out
add
cs
loopne
jnp
mov
xchg
sub
mov
xor
cmp
or
jge
push
daa
cwtl
movsl
push
cmp
or
int3
loopne
dec
cmp
jne
popa
adc
lods
ljmp
fwait
out
or
loope
inc
add
or
aad
add
push
dec
mov
dec
mov
lds
outsl
push
out
push
stc
jge
dec
inc
xor
roll
xor
movsb
test
addr16
lahf
xor
pop
outsl
xor
xchg
in
xor
or
adc
xor
sbbl
dec
adc
lds
dec
int3
and
scas
pushf
push
ret
mov
sti
fwait
les
loopne
js
xlat
cmp
mov
lahf
add
rcrl
xlat
inc
pop
and
mov
cmp
lds
in
lea
ljmp
sahf
lcall
stos
sbb
mov
lret
add
lock
stc
jne
sub
mov
jnp
mov
sbb
sbb
lret
pop
xchg
cmp
jns
stc
movsb
aaa
test
pop
outsl
rorb
xor
and
lock
pop
and
shrl
cwtl
rcll
or
testb
inc
and
lds
push
lock
pop
repz
lods
aaa
addl
xlat
xor
mov
lods
pop
xor
pop
mov
push
outsl
movq
push
pop
add
pusha
testb
daa
in
insl
adc
ret
pop
or
dec
loopne
mov
xor
stos
adc
loop
mov
lock
int3
jmp
adc
insl
adc
cmpb
insl
rcrl
out
dec
mov
pop
pop
xchg
mov
xor
sti
push
mov
xchg
mov
aas
mov
xchg
ljmp
or
sub
in
jmp
int3
cwtl
ja
mov
jge
fisttps
sub
mov
sub
xchg
movsb
pop
int3
push
lods
lcall
test
mov
xor
dec
xchg
lds
and
mov
dec
cmp
dec
js
push
popa
pop
jg
arpl
inc
push
add
ja
int3
push
iret
or
push
test
sub
inc
mov
inc
dec
popf
mov
pop
gs
add
cmp
inc
aas
and
mov
icebp
js
jae
xchg
or
xor
xchg
jg
shll
cmp
mov
cmp
mov
xor
ret
arpl
ljmp
mov
and
inc
int3
push
inc
imul
and
push
aas
int
loop
loope
jno
pop
mov
gs
cmp
test
push
je
jmp
fmuls
mov
rorb
lea
cmp
xor
push
aam
ret
xchg
jecxz
add
push
test
aaa
popa
sub
dec
outsl
cmp
sarl
movsl
xor
xchg
test
mov
packsswb
inc
out
nop
movsb
movsl
xor
sbb
shlb
mov
rcll
add
sbb
inc
ja
mov
jnp
or
add
outsl
push
mov
sub
std
dec
xchg
and
sbb
popa
roll
cmpsl
in
cmp
jns
mov
or
lods
adcb
lahf
xchg
loopne
fidivs
push
iret
push
mov
pop
rorl
loopne
sets
orl
fistl
testl
hlt
and
or
sub
popf
es
xor
add
gs
ficomps
inc
mov
js
jp
cmp
add
shll
pop
test
rcrb
adc
shlb
imul
adc
dec
cwtl
xor
xor
div
adc
push
or
pop
add
repz
int3
ficoms
andb
out
cwtl
cmc
dec
cmc
iret
cltd
aas
rorl
or
dec
sti
pop
pop
cmp
pusha
adc
pop
and
dec
jo
add
iret
inc
and
xchg
imul
jne
pop
es
mov
xor
push
and
mov
lods
inc
sbb
sub
jns
and
test
rcll
mov
es
sbbl
cwtl
jne
xchg
dec
sbbb
xor
mull
add
pop
or
ret
int3
daa
mov
dec
xor
push
cmp
out
sbb
cmp
cwtl
pop
push
sbb
pusha
xor
sarl
push
inc
mov
xor
mov
dec
addb
arpl
adc
outsl
or
stos
jns
xlat
imul
xlat
leave
pop
outsl
inc
les
jp
jecxz
pop
jecxz
bound
push
stos
jne
rorb
ret
js
sbb
rcrl
cmp
adc
call
iret
mov
push
sub
mov
and
ja
inc
cmp
xor
mov
icebp
pop
xchg
addr16
pop
jge
in
dec
out
xor
sbb
es
cmpl
xor
push
outsl
or
loop
mov
movsl
iret
jne
push
xchg
rcll
add
adc
imul
adc
push
or
xor
xor
movl
mov
and
ja
cmp
xchg
and
push
xor
ja
fstl
pop
push
lock
mov
mov
fisubs
cmp
sbb
jecxz
jno
arpl
dec
and
xor
inc
loope
cmp
mov
xchg
sbb
xor
mov
jmp
stc
cmp
fs
dec
xor
xor
jae
xor
inc
mov
shll
imul
sbbl
jnp
lcall
leave
push
in
sub
xchg
add
mov
push
std
roll
jmp
sti
inc
dec
jp
movsl
cmp
iret
push
mov
mov
inc
das
aad
orb
jmp
or
ret
pop
arpl
and
add
sti
roll
mov
cmc
mov
movsb
sbb
dec
jmp
fiadds
andl
inc
adc
dec
and
xchg
scas
jnp
iret
leave
test
mov
add
lods
lods
push
fisubrs
or
jns
push
popf
push
xor
add
mov
xor
mov
dec
int3
and
inc
dec
jmp
pop
hlt
es
pop
jnp
xchg
dec
pop
push
xchg
fiadds
negl
sub
add
xchg
inc
les
lds
sub
adc
stos
push
es
mov
push
fldt
pop
cmc
push
lock
aaa
mov
and
sbb
sbb
jnp
and
int3
jne
xor
mov
sub
jnp
jnp
mov
std
adc
xor
xchg
in
inc
add
cmp
es
xor
lcall
js
add
jnp
ja
mov
stos
or
lcall
xor
xchg
push
rcrl
jg
or
adc
ret
and
xor
mov
roll
inc
or
cmp
and
push
outsl
push
adc
data16
cmc
imul
jne
scas
sbb
mov
scas
popa
adc
orb
loope
in
dec
andb
out
mov
mov
and
adc
pop
popf
sti
jmp
iret
dec
inc
iret
mov
mov
popf
iret
inc
insl
xor
cwtl
xor
mov
inc
mov
add
mov
pushf
jne
mov
in
gs
mov
xchg
leave
mov
aad
mov
test
push
sbb
cwtl
je
shrl
or
sbb
push
je
fldcw
pop
adc
jae
imul
pop
xchg
cs
add
xor
xor
sbb
leave
dec
pusha
pop
inc
add
jecxz
and
adc
xlat
push
mov
cmc
daa
lds
or
dec
fwait
push
int3
sub
pop
push
lcall
inc
in
iret
pop
outsl
ret
dec
cltd
imul
jmp
push
add
imul
out
xor
xor
lds
cmc
sbb
popf
scas
pop
aam
cmp
add
or
lods
mov
sbb
pop
cmc
adc
mov
add
add
out
dec
ret
fwait
je
aad
cmp
xchg
test
shlb
outsl
or
out
dec
cmpsl
pop
add
xchg
inc
insl
adc
mov
jnp
cmp
sbb
sarb
in
insl
mov
fisttpl
add
push
aaa
jge
push
xor
cmp
js
addr16
das
jmp
fstpt
jp
lcall
inc
adc
xor
dec
inc
inc
scas
cmc
outsl
movb
lds
cmp
mov
inc
dec
sbb
outsl
aad
jne
test
add
out
xchg
fwait
xchg
push
xchg
inc
rolb
movsl
add
repz
mov
repnz
popl
jae
cmp
int3
mov
dec
jp
mov
sub
dec
lcall
xchg
push
adc
fwait
inc
jne
mov
imul
inc
push
data16
roll
and
sub
push
outsl
mov
mov
jne
mov
mov
dec
xchg
lds
cwtl
rorb
push
les
test
cwtl
push
or
xorb
xor
ret
sbbb
aaa
cmc
fisttpll
insl
loope
nop
dec
inc
xor
push
add
sbbl
adc
stos
mov
cmp
inc
or
jno
mov
xor
mov
cmp
push
xchg
pop
add
ja
dec
lcall
cwtl
int
xor
imul
pop
sub
cmc
mov
fwait
ret
les
and
mov
sti
mov
mov
cmp
cmp
cwtl
sub
imul
cmp
imul
xor
rcrl
jnp
add
add
add
and
xor
pop
inc
mov
inc
or
pop
sbb
mov
arpl
cmp
dec
push
outsl
xor
xlat
inc
xor
and
filds
and
jl
xor
push
sarl
cmp
sub
pop
lock
mov
and
lea
xor
jmp
in
or
or
pop
xchg
int
subl
xor
test
mov
pop
xor
cltd
inc
mov
imul
mov
mov
test
add
gs
lock
loop
mov
icebp
js
mov
daa
xchg
push
mov
mov
nop
and
lcall
imul
stos
pop
jns
inc
mov
fnsave
and
cwtl
hlt
mov
rcll
xor
xlat
out
test
inc
jns
cwtl
lds
test
jns
inc
mov
es
inc
and
add
aaa
fwait
hlt
es
fwait
jno
xlat
push
dec
mov
add
or
call
sub
mov
daa
add
mov
mov
jnp
mov
lea
xlat
and
jnp
test
and
inc
jne
push
int3
dec
push
fwait
mov
xchg
and
adc
adcb
xor
cwtl
push
arpl
jg
push
outsl
push
out
mov
adc
das
inc
fidivrs
sub
mov
inc
stos
xchg
lea
inc
pop
dec
push
cmp
push
outsl
or
push
pop
hlt
data16
adcl
rorb
shll
adc
and
mov
xor
inc
arpl
dec
leave
addr16
pop
shll
dec
and
leave
fldt
adc
jae
xchg
icebp
fiadds
mov
and
data16
pop
data16
lcall
int3
or
or
jns
push
xor
js
pop
sub
inc
les
pusha
push
scas
mov
inc
and
mov
xchg
xchg
lcall
sbbb
imul
mov
data16
mov
inc
lcall
lea
or
cmc
and
divl
pop
outsl
xchg
sub
push
xchg
push
sub
int
adc
movsl
cwtl
push
int3
ljmp
idivl
sar
rcrl
mov
xchg
and
ret
push
mov
es
sub
testl
fstpl
and
dec
adc
inc
xchg
popf
cmpsl
fisubrs
stos
add
sub
lret
sbb
cmp
jge
lcall
mov
pop
jecxz
nop
or
mov
or
xor
adc
and
inc
sti
fimuls
cwtl
int
imul
mov
add
dec
cmp
adc
mull
add
mov
add
or
js
rorl
inc
or
xchg
aad
loopne
xor
sbb
sbb
loop
xchg
xchg
jno
popa
cmp
push
pushf
xor
inc
mov
add
out
int
loope
aad
add
mov
dec
sub
dec
adc
xor
or
pop
cmp
lcall
rclb
push
inc
jno
mov
jnp
push
xor
adc
int
mov
inc
dec
ret
jge
mov
dec
lret
adc
jl
cmpsl
dec
jns
pop
aam
mov
js
sbb
mov
loope
test
xor
sbb
jno
outsl
xchg
adc
add
xlat
cmp
stos
adc
imul
lds
mov
inc
or
adc
ljmp
and
jns
cmp
push
or
xchg
inc
jmp
es
fimuls
test
lds
outsl
push
int
aaa
jmp
pop
stc
or
sub
mov
xor
or
test
add
stos
loopne
daa
daa
sub
add
cwtl
xor
push
stos
dec
ss
push
adc
push
inc
fwait
test
sub
call
es
sub
xor
push
mov
fwait
cmp
out
pop
popf
cltd
lds
lahf
lods
add
dec
call
sbbb
cmpsl
fstps
mov
fldcw
testl
xor
dec
test
int3
addr16
sub
cmp
xor
sub
push
pop
out
pusha
adc
pop
fwait
arpl
inc
orb
mov
in
xlat
fwait
add
std
lahf
jge
add
aad
popa
sub
xorl
dec
sbb
adc
popa
inc
xor
outsl
cmp
cmpsl
cwtl
xor
cwtl
mov
mov
stos
sbb
insl
jne
and
inc
inc
mov
inc
sti
pop
mov
ljmp
mov
cwtl
je
mov
movsb
es
dec
aaa
adc
cvtps2pi
pop
xor
inc
pusha
dec
adc
xor
jp
jne
test
stos
aaa
arpl
popf
fldl
sbb
int3
cwtl
stc
das
mov
xchg
mov
or
pop
pushl
loopne
fwait
mov
inc
mov
fldl
cmp
popa
mov
adc
inc
inc
andb
call
iret
push
aad
cmp
xchg
cmp
bound
mov
and
js
add
xor
lahf
push
out
and
stos
stos
sbb
or
dec
lds
sbb
jne
aas
dec
mov
xor
push
repz
ja
adc
dec
fwait
xor
adc
mov
adc
pushf
xchg
inc
xor
pop
or
xchg
inc
es
fwait
inc
mov
out
pop
and
dec
andb
xchg
add
sub
xor
pop
inc
xor
shll
shlb
aaa
jnp
push
lcall
popl
es
mov
push
or
jecxz
lcall
xor
push
ret
sub
mov
lods
cmp
cmp
dec
jp
das
leave
jmp
cmp
dec
sbb
jns
sbb
movups
xchg
pop
inc
imul
adc
rcrb
adc
inc
mov
mov
mov
call
sub
and
imul
adcl
adc
adc
xchg
test
jo
popa
dec
jne
js
mov
jnp
dec
xor
hlt
out
sub
or
push
out
outsl
icebp
xor
xorb
data16
lret
dec
mov
sub
dec
dec
mov
xor
add
sbb
xor
adc
sub
mov
mov
adc
lds
scas
int
shlb
inc
imul
xchg
jnp
andb
dec
add
lret
imul
dec
cmp
and
insl
jns
mov
add
movsb
dec
pop
wbinvd
xor
sbbl
inc
xor
aad
pop
pop
lds
js
sub
je
sub
mov
xchg
push
rcrl
push
outsl
push
adc
lcall
xor
js
or
push
jne
out
int
fwait
sbb
aaa
test
popa
xchg
inc
add
cmp
lds
mov
stc
xor
mov
mov
mov
ret
xor
jno
test
xor
push
out
add
cmp
mulb
sbb
xchg
xchg
add
cmp
lds
es
cmp
dec
js
test
minps
bound
push
ret
adc
fsubp
and
jge
ljmp
mov
roll
and
scas
imul
flds
jg
dec
push
push
out
mov
or
test
rorl
inc
mov
push
les
cmp
xchg
sti
call
btc
shrl
out
loope
inc
dec
adc
lcall
mov
or
insl
test
push
add
pop
aam
lods
js
cmp
jmp
pop
aad
rcrl
push
mov
orb
and
test
pop
push
add
bound
jnp
jno
xor
xor
mov
mov
cmp
imul
lahf
adc
cwtl
dec
loop
xor
nop
lods
arpl
jae
popa
xchg
lock
xor
dec
call
sbb
add
pop
add
cmp
scas
sbb
dec
and
stc
mov
inc
sbb
adc
jge
dec
mov
call
loope
dec
and
lods
cmp
ljmp
cmpb
mov
aaa
ss
xor
and
bound
inc
jge
pop
rorl
push
repz
xchg
movsb
dec
int3
sbb
daa
mov
addl
adc
data16
pop
adcl
xor
les
adc
xchg
inc
rcrl
fnstenv
or
push
es
sbb
rcll
shlb
xchg
jne
lds
stc
popa
push
xor
and
jl
fwait
adc
pop
lds
pop
xor
inc
mov
sub
or
mov
out
mov
fs
xchg
in
andl
mov
outsl
ret
rcl
dec
jp
js
and
insl
hlt
es
arpl
orl
popf
inc
xor
imul
adc
mov
xor
stc
lds
and
xchg
movsl
cwtl
adc
xlat
jecxz
or
add
push
jp
sbb
and
inc
inc
xchg
ret
mov
jmp
jnp
gs
movsb
mov
and
loope
aam
xor
xchg
add
jmp
xor
mov
mov
fisubs
icebp
data16
and
icebp
data16
mov
inc
frstor
jmp
lock
flds
fimuls
jp
ret
psllq
es
push
maxps
aad
and
ljmp
outsl
or
lods
push
inc
xchg
js
fnstenv
push
xor
mov
mov
out
xor
mov
mov
jg
int
push
xor
notl
stc
lods
or
mov
pop
sbbb
cmp
sub
add
adc
int
mov
or
add
rclb
add
in
or
mov
xchg
pop
lret
dec
testb
xor
test
shl
adc
or
add
mov
pop
xchg
adc
mov
loop
lds
inc
jnp
push
push
xchg
jnp
xor
xchg
pop
pop
jne
test
es
push
gs
lods
add
out
cmpsl
lea
mov
rorl
out
push
les
dec
cmp
fwait
xchg
in
imul
cmp
add
inc
das
in
popa
adc
mov
or
cmp
push
add
xor
xchg
mov
or
cmp
popa
add
or
test
std
inc
out
fldcw
mov
ja
xor
sub
ficomps
xlat
mov
push
aad
sbb
int
push
int3
mov
mov
jno
test
sbb
mov
int
xor
jne
lcall
js
xchg
mov
and
jno
jae
data16
rcrl
cmp
outsl
adc
roll
lds
dec
inc
sbb
mov
mov
popa
or
es
jmp
sbb
pop
shll
xor
xor
lret
leave
arpl
xchg
ss
lret
push
fisubs
xchg
movsb
pop
cmc
add
add
stos
or
addr16
mov
js
jno
adc
xchg
aad
in
cpuid
lcall
or
xor
lods
mov
std
add
mov
orl
lret
sbb
ficoms
and
cwtl
mov
shrl
shrl
push
xor
mov
mov
rcll
adc
in
jno
je
mov
inc
hlt
dec
loopne
mov
inc
pop
xchg
xchg
inc
shll
sbb
inc
xorb
cmp
inc
insl
popa
pop
push
fwait
xor
test
call
or
aad
shld
jp
mov
nop
or
int
ja
aaa
and
push
fildl
mov
ret
or
fwait
shll
cmc
adc
push
mov
mov
cmp
xor
or
push
rolb
dec
mov
filds
add
dec
and
icebp
sbb
dec
rcr
stos
sbb
pusha
mov
xor
or
popf
insl
mov
icebp
imul
lcall
sub
ret
cltd
cmc
pop
outsl
add
push
and
mov
add
inc
orb
push
ret
test
lret
jg
push
and
int3
orb
mov
cmp
sub
jne
or
mulb
xor
adc
imul
loopne
sub
adc
dec
daa
lods
or
push
les
int
icebp
in
add
xor
push
xor
add
mov
inc
cmp
jnp
sub
or
rcll
jmp
loope
push
dec
mov
mov
cwtl
iret
fldenv
lcall
shrb
mov
mov
push
jno
mov
int3
dec
ss
push
xor
es
dec
outsl
push
xor
andl
fnstcw
ljmp
xor
sbb
leave
mov
int3
sbbb
out
xor
xor
pop
push
hlt
js
xor
jp
mov
stos
xchg
xor
aaa
test
aad
inc
sti
xor
int
inc
sub
push
iret
inc
pop
mov
mov
sbb
inc
rorl
jae
imul
mov
sub
stc
inc
and
fwait
icebp
and
mov
popa
shll
mov
mov
jne
stos
adc
mov
jg
icebp
push
push
xor
imul
add
outsl
dec
pusha
mov
inc
xor
or
icebp
repz
daa
push
fnsave
xor
and
add
es
in
aaa
ja
loop
bound
cltd
xchg
xor
mov
rcll
adc
and
add
outsl
in
add
xor
aad
push
mov
mov
jmp
push
ret
mov
lock
es
pusha
jge
jae
and
es
pop
inc
push
repz
adc
add
xor
inc
shr
cmp
xchg
xor
jne
pusha
adc
lea
test
jno
push
xchg
push
mov
popa
sub
js
push
add
sub
sub
dec
stc
out
xor
loopne
cmp
mov
loopne
dec
pop
push
fldenv
enter
add
in
scas
pop
xor
xchg
dec
inc
iret
jno
jnp
add
js
dec
stc
mov
mov
iret
ja
or
pop
xor
jnp
addr16
xlat
sbbl
in
int
push
xor
inc
mov
add
data16
xchg
cltd
shrb
shlb
push
xchg
jbe
notb
sbb
inc
fistl
sti
jae
lods
js
push
pop
jge
sbb
and
xor
cmp
insl
and
xor
add
mov
ficomps
jg
dec
pop
add
test
push
add
dec
ljmp
push
add
xor
mov
xchg
xor
sbb
inc
out
call
dec
dec
je
and
xchg
sbbl
adc
sbb
dec
xchg
lret
sbb
xor
xchg
cmp
subb
iret
and
pop
xor
xor
adc
mov
sbb
pop
loope
popf
push
mov
add
lods
ret
movsb
popa
mov
sub
int3
push
mov
lds
push
xchg
and
aaa
mov
out
xchg
jo
pop
cltd
adc
addl
aaa
jbe
push
pop
insl
lret
test
and
pushf
push
icebp
gs
pop
add
dec
int
cmpsb
jmp
fnstcw
cmp
lods
push
shrb
xlat
mov
xor
mov
iret
movsl
mov
push
in
sbbl
cmp
or
ficoms
mov
nop
movsb
mov
pop
push
add
xor
mov
adcb
and
cmp
dec
idivb
sarb
inc
movsb
cmp
jmp
sbb
addr16
inc
repz
mov
ficomps
jns
icebp
shll
cmp
scas
sbb
inc
adc
pop
shr
add
push
cmp
push
mov
pop
je
mov
lcall
orb
jmp
dec
bound
xor
adc
test
sub
stos
cltd
and
adc
cmp
add
push
aaa
sub
push
stos
std
and
xchg
dec
push
daa
xchg
inc
leave
mov
movsl
loope
push
rclb
add
xchg
aas
test
gs
sbb
add
aam
pop
fisubrs
fwait
aaa
push
jg
out
xchg
mov
push
add
cmp
cmp
sti
lds
loopne
inc
xor
push
jne
sbb
adc
pop
inc
adc
shll
bound
inc
sti
and
sbbb
jg
xchg
add
xor
jge
lods
ja
sub
roll
sbb
insb
test
mov
dec
out
mov
pop
adc
pop
sub
adc
mov
mov
jns
and
aaa
xor
sbb
roll
fwait
in
mov
inc
mov
fwait
mov
cwtl
lahf
fisttps
mov
aaa
test
inc
fidivs
addr16
jmp
sti
jnp
mov
mov
push
cmpsl
fldcw
add
inc
xor
es
mov
xlat
xor
out
dec
test
xor
add
push
inc
inc
or
pop
aad
xor
test
int3
add
popa
bound
popf
std
sub
shlb
gs
sub
int
fisubs
cmpsl
aad
pop
lock
lret
dec
inc
xor
xor
mov
sub
jp
cmp
push
aaa
outsl
add
fimuls
inc
inc
jge
mov
xor
adc
sbbl
and
cmpsl
xor
roll
xchg
stos
or
inc
mov
fcomi
push
test
dec
int
or
vdivpd
and
mov
xor
xor
xor
aaa
adc
mull
mov
push
adc
xlat
cmc
sbb
xor
scas
out
nop
and
jnp
jmp
sbb
push
sbb
dec
js
andl
xorl
fistpl
sti
leave
dec
loopne
xor
add
xlat
pop
orb
fwait
fwait
xor
mov
aas
and
sbb
or
mov
xor
pop
xchg
adc
adc
fiadds
popa
fwait
test
inc
mov
fists
jns
andl
sahf
or
lods
shlb
add
js
sbb
push
lds
and
shll
ret
stos
orb
stc
scas
test
jns
movsb
es
sbb
mov
shll
xchg
dec
cltd
aaa
popa
add
dec
fistpll
rorl
mov
inc
jnp
data16
mov
adc
lods
mov
add
sub
aam
in
xchg
cmp
stos
movsl
out
mov
mov
jmp
fldl
pop
std
aaa
or
or
js
pop
data16
or
or
adc
add
ja
sub
divl
pop
jp
push
mov
imul
push
cmp
xchg
xchg
cmp
aad
aas
in
cmpsl
cmp
or
stc
jno
mov
push
and
out
or
xchg
and
mov
adc
sub
jp
xchg
xchg
adc
lcall
mov
adc
pop
outsl
outsl
jbe
jne
xor
xor
xchg
push
data16
mov
and
inc
stos
data16
cwtl
shll
sub
cmp
pop
divl
pop
adc
stos
mov
nop
add
out
cmc
xchg
icebp
and
rcrb
or
cmp
addl
orb
js
or
add
xor
push
ret
rcrl
xor
xor
das
add
call
inc
adc
fwait
xor
hlt
lds
push
scas
add
test
mov
cmp
shr
add
adc
xor
xor
inc
xchg
jge
add
and
out
inc
mov
fisubrs
insl
mov
xor
sub
xor
xchg
xor
cwtl
inc
adc
inc
in
mov
ja
xor
mov
xchg
stc
sub
dec
loop
sbb
loopne
ret
sub
add
add
es
aas
daa
mov
xor
adc
mov
dec
gs
cmp
adc
mov
sarl
inc
and
inc
cmp
sub
pminsw
pop
rolb
add
roll
xchg
lret
inc
sbb
int
outsl
pop
pop
stc
daa
xchg
enter
mov
pop
jg
sub
xor
sbb
dec
sub
flds
xchg
in
pop
xchg
xor
cmp
stos
pop
push
push
out
pusha
inc
outsl
shrb
cmp
sbb
add
xlat
xchg
lods
inc
sbbb
mov
push
inc
inc
loopne
xor
in
data16
dec
xchg
divb
fbld
js
or
adc
push
mov
gs
push
xor
dec
add
push
adc
pop
pop
outsl
ret
jg
dec
stos
pop
dec
mov
aas
xchg
pop
mov
xchg
jp
add
lea
cmpsb
inc
or
pop
mov
sbb
add
sbb
add
inc
xor
adc
xor
pop
pop
inc
dec
shrb
les
arpl
xchg
test
xor
xchg
xchg
xor
std
dec
adc
mov
inc
int3
pop
fnstenv
pop
int3
fisubs
fldcw
mov
xchg
roll
mov
lods
push
sub
arpl
inc
shr
xor
fiadds
aam
les
and
adc
insb
pusha
adc
pop
aad
ja
pop
mov
or
mov
and
shll
jmp
addb
add
out
pusha
jbe
les
jmp
rcrl
pop
or
or
pushf
mov
les
mov
push
aaa
cmp
sbb
fildl
dec
jno
xchg
push
aam
int3
mov
jnp
xor
je
popa
xor
push
adc
sub
lds
shll
outsl
add
pop
mov
movsb
aaa
test
mov
repz
sbb
xor
negb
jo
daa
scas
cmp
push
inc
test
sub
add
jno
mov
dec
stos
bound
fstpl
leave
dec
fldcw
pop
sub
insb
adc
sub
sub
js
xchg
test
js
stos
and
leave
cmc
out
or
dec
mov
xor
dec
mov
iret
xchg
xor
xor
and
mov
imul
test
add
cwtl
les
call
sbbb
pop
sub
dec
or
fs
adc
out
xor
das
or
ret
jno
xor
aam
mov
sbb
xor
inc
and
pop
das
std
lret
or
ret
loopne
dec
push
inc
adc
sub
pop
adcb
mov
sbb
cmpsb
and
arpl
cmp
push
add
sub
add
mov
or
or
push
xchg
lcall
inc
xchg
fbstp
sbb
xor
add
push
arpl
push
and
aas
fsts
dec
inc
dec
jns
inc
adc
jmp
mov
aaa
arpl
ja
xchg
xchg
mov
fnstcw
push
adc
adc
and
iret
jnp
xor
mov
cmp
mov
negl
js
mov
stos
fisttps
hlt
fimuls
scas
jp
popa
adcl
es
int3
mov
adc
adc
jmp
dec
lcall
push
es
adc
xor
out
dec
dec
xor
mov
stc
mov
subw
ret
and
rorl
mov
xor
lea
outsl
subl
dec
mov
inc
rcrl
and
fbstp
adc
cwtl
jnp
dec
addr16
mov
test
in
xchg
xorl
adc
cmc
mov
movsb
jg
inc
mov
mov
xor
in
popf
xchg
lahf
mov
test
mov
pop
dec
lcall
movsb
fdivrp
fwait
xchg
out
mov
pop
aad
fs
push
adc
sbbb
adc
add
flds
add
pop
pop
sbb
jns
xor
outsl
jp
sbb
xor
jnp
adcb
ja
mov
pop
jg
push
dec
mov
sbb
and
js
stos
add
lcall
jp
or
pop
inc
inc
mov
loope
es
add
andl
loope
dec
inc
aas
movsl
lock
iret
adc
push
xlat
les
iret
add
xchg
adc
call
jno
push
xchg
shll
mov
mov
dec
mov
inc
jg
jne
add
add
adcb
insl
scas
imul
and
push
sbb
aam
jno
adcl
mov
out
push
push
aad
cmp
jg
jno
cpuid
jmp
cmp
imul
outsb
sbb
pop
imul
inc
push
cwtl
inc
rclb
inc
sub
sbb
mov
insl
xlat
in
bound
adc
or
lea
add
mov
orb
cwtl
xchg
in
dec
test
dec
int
addr16
imul
imul
xchg
xchg
call
cltd
fwait
lock
xor
mov
rclb
lcall
inc
popf
ljmp
testl
ret
mov
outsl
popfw
and
leave
mov
loopne
or
inc
mov
xor
insb
inc
push
mov
adc
adc
mov
mov
sbb
push
mov
ss
mov
fs
mov
mov
xchg
or
pop
dec
push
cmpsl
inc
fwait
loope
fwait
push
ret
leave
lahf
or
in
inc
jae
mov
push
shr
popf
inc
out
xor
sub
aaa
mov
sbb
andb
dec
aaa
imul
jnp
xchg
mov
mov
mov
push
sub
xor
or
lds
push
mov
shll
mov
jge
push
push
or
and
cmp
xor
mov
jnp
aam
pop
mov
inc
lock
imul
mov
jae
lods
and
out
daa
dec
mov
in
and
jp
add
mov
add
mov
adc
xor
push
xor
subb
loopne
cwtl
push
inc
movsl
addr16
inc
ss
adc
js
sub
and
xchg
sbbb
mov
push
stc
mov
jmp
int3
mov
mov
icebp
shl
test
inc
add
or
data16
mov
insl
mov
mov
mov
ja
sbb
xor
iret
scas
gs
ljmp
js
push
mov
cmp
xor
xor
jmp
adc
arpl
iret
clc
pop
cmc
adcb
and
mov
gs
outsl
sti
rorl
std
and
xor
cwtl
inc
xor
outsl
rolb
notl
pop
int3
xor
movq
xchg
call
dec
inc
xor
aad
push
inc
push
pop
lcall
mov
lea
sbb
add
adc
inc
stc
xor
imul
aas
mov
outsl
pop
adc
mov
xlat
outsl
lds
inc
das
pop
and
movsb
jmp
sub
or
inc
int
add
inc
dec
jmp
add
push
sbb
fisttpll
fwait
wrmsr
mov
or
adc
or
scas
and
fbld
icebp
es
mov
stos
dec
ret
sbbb
push
adc
push
adc
outsl
xlat
mov
mov
cmp
xor
lods
jns
cmp
xor
test
or
data16
xchg
gs
inc
insl
sbb
mov
inc
mulb
lds
mov
pop
cmpsl
push
or
xchg
jg
outsl
inc
xchg
out
repz
in
pop
outsl
adc
notl
sbb
xor
sub
into
xchg
xor
jp
mov
lods
cmp
adc
and
sbb
push
add
shl
xchg
pop
int
outsl
push
gs
sbb
adc
jmp
inc
xor
popf
sbb
in
xor
cmc
mov
add
mov
lea
mov
xor
xchg
xlat
cwtl
cmc
dec
das
inc
scas
lds
add
arpl
xor
lret
pop
aas
addb
stos
or
lds
fildl
or
out
mov
test
gs
psllw
sbb
fwait
xor
or
adc
hlt
mov
pop
sbb
jecxz
out
hlt
sub
mov
sub
cmp
mov
aad
aas
cmp
int3
mov
xor
push
dec
orb
pmullw
xchg
inc
leave
cmp
sbb
mov
push
aad
add
add
adc
je
mov
icebp
fnsave
dec
cltd
ret
add
push
cmpl
int3
and
inc
wrmsr
popa
push
xor
int
lahf
loope
sub
call
mov
outsl
xor
adc
sub
outsl
test
xchg
pop
fwait
cmp
cwtl
dec
inc
xchg
cmp
popf
sub
xchg
xor
leave
xchg
pop
popf
lods
dec
stos
ja
aaa
out
and
jbe
xor
lret
mov
xchg
insl
xchg
jns
add
adc
push
xor
xchg
js
movsb
js
and
lock
outsl
dec
mov
jmp
xchg
cmp
int
rclb
add
xor
push
xchg
xchg
push
or
add
xor
and
cmpsl
cmc
dec
adc
jnp
or
sbbl
int
push
xor
xchg
dec
jne
in
inc
cmpsl
popa
add
and
int3
cmp
leave
jne
aad
out
sub
inc
ret
or
push
add
mov
bound
scas
iret
mov
pop
push
in
mov
decl
xor
mov
jg
jecxz
pop
dec
inc
xchg
movsl
ss
inc
dec
lcall
ljmp
xor
jmp
or
sub
shrl
inc
sbb
or
jecxz
xchg
sbb
es
gs
jge
mov
fwait
mov
or
in
lcall
cmp
pop
imul
adc
sub
add
push
inc
out
mov
ja
out
in
cwtl
lds
jno
das
pop
int3
cmp
rcrl
cmp
sbb
or
mov
or
rorl
shl
jmp
cmp
add
xor
fisubrs
pop
adc
js
mov
jnp
pop
int
jmp
and
xor
inc
adc
inc
inc
cmc
push
out
mov
aaa
dec
int3
push
cmc
xchg
jmp
jae
mov
push
mov
inc
movsb
sbb
add
mov
xor
hlt
dec
outsl
xor
jmp
aaa
jns
dec
adc
ret
pusha
adc
adc
mov
and
jne
loopne
lret
and
xchg
sbb
addr16
orb
xlat
scas
adc
mov
dec
and
inc
xchg
add
imul
push
sbb
aaa
cltd
out
sbb
and
xor
sub
insl
aas
xor
push
adc
pop
ret
cmp
nop
mov
stos
es
shrb
mov
test
pop
test
mulb
lds
fldpi
in
push
cmp
mov
mov
cmp
mov
std
mov
and
xor
sub
mov
dec
lahf
imul
and
dec
sbb
cmp
pop
fwait
inc
mov
and
les
movsb
lea
cwtl
cmc
and
rolb
or
jmp
mov
jmp
mov
fucomip
add
dec
and
xor
adc
add
bound
das
xchg
mov
xor
dec
inc
dec
xchg
cwtl
xor
mov
jns
or
out
lret
cltd
aaa
out
xchg
sub
xor
add
imul
dec
cwtl
add
pop
push
adc
xor
xor
fwait
xor
dec
push
pop
pusha
insl
xlat
inc
popf
data16
sub
leave
data16
inc
mov
shll
repz
fwait
inc
mov
pop
pop
aad
ret
lret
fidivrs
bound
sub
add
add
mov
imull
adc
test
fistps
movsb
out
aas
sbb
aad
cmc
adc
out
daa
xor
and
lcall
es
cmp
lods
lcall
or
dec
mov
mov
add
daa
pusha
xchg
shll
out
int
fwait
out
fwait
shr
pop
lahf
fldl
shrl
lods
dec
xchg
lods
ret
dec
jno
sub
fisubs
dec
adc
cmp
repz
mov
in
pop
add
stc
adc
push
loope
xchg
dec
mov
gs
mov
shlb
cmp
adc
mov
xchg
cwtl
adc
push
mov
int
xor
cwtl
rcrb
push
hlt
orb
addl
and
jne
ja
popa
seta
adc
mov
mov
adc
adc
aad
dec
loop
bound
stc
les
pusha
movsb
lcall
sbb
addr16
xchg
jnp
jne
inc
aam
sub
adc
sbb
test
dec
dec
inc
mov
iret
inc
mov
push
data16
dec
xor
repz
int
cmc
es
lahf
roll
inc
mov
scas
and
sbb
stos
mov
cmp
mov
hlt
and
mov
or
mov
pop
jns
mov
dec
subb
adc
cmc
data16
shlb
ljmp
lcall
add
fidivs
aaa
jge
lods
mov
lahf
sti
js
mov
sbb
adc
test
cmp
inc
fldenv
xchg
sbbl
pop
mov
test
arpl
fwait
inc
or
xor
fidivs
popa
add
les
add
push
cltd
sbb
or
dec
imul
neg
adc
add
fwait
jnp
aad
xor
dec
jno
sub
adc
outsl
mov
add
mov
jnp
xlat
adc
fwait
adc
jmp
xchg
sbb
sub
sbb
sub
insb
or
movsb
aas
jmp
scas
adc
xlat
outsl
rorl
mov
cmp
pop
das
or
ja
push
test
xor
cmp
inc
sti
pop
xor
js
mov
xchg
push
dec
call
orb
outsl
pop
or
shrb
sti
andl
adc
arpl
jg
add
add
sbb
js
pop
repz
jecxz
out
int
add
mov
scas
adc
loope
imul
cmp
roll
mov
stc
adc
cwtl
xor
jae
lock
adc
mov
rcrb
lcall
push
cmc
fimuls
data16
pop
test
das
loope
movsb
cmp
mov
imul
out
push
cmp
test
xchg
inc
xor
loopne
mov
mov
push
xor
les
out
cmp
add
fldl
mov
xchg
mov
sub
inc
dec
pop
push
inc
pop
adc
pop
inc
out
int
mov
jecxz
aas
outsl
adc
mov
int3
bound
xor
or
mov
stos
pop
sti
pop
pop
lcall
imul
or
loop
pop
popa
jno
adc
jmp
or
add
dec
inc
mov
xor
loop
xchg
pop
imul
pop
add
popf
cld
inc
adc
mov
rorl
lods
ret
add
dec
dec
hlt
popa
inc
test
xchg
mov
aad
fwait
cmpsl
or
mov
pop
hlt
cwtl
xor
pop
test
mov
or
andl
xor
mov
test
mov
in
insl
and
add
pop
sub
ljmp
int
push
adc
test
shlb
cmp
sub
sti
xchg
lods
or
xchg
inc
fldt
add
xchg
add
out
outsl
add
das
inc
add
cmp
xor
xchg
pop
cmpsl
loope
outsl
mov
int3
addl
sbb
and
out
lahf
add
cmp
cmp
pop
push
push
adc
les
push
pop
fstl
popl
lcall
adc
imul
and
jecxz
shll
pop
inc
es
xor
pop
push
pushf
pop
or
dec
jmp
xor
inc
inc
mov
xchg
sti
pop
or
shlb
xchg
mov
fisubs
adc
out
sub
mov
shlb
adc
je
or
ret
pop
inc
add
mov
jne
movsb
xchg
das
mov
mov
jne
js
push
mov
cmc
and
push
ror
push
lea
mov
jmp
shl
sbb
sub
popa
adc
enter
divb
sbb
loope
dec
cmp
or
int
icebp
mov
cwtl
dec
xchg
jae
pop
dec
mov
or
fwait
sbb
test
adc
les
icebp
flds
dec
push
xor
fwait
das
into
and
xor
add
xchg
test
xor
flds
pop
nop
mov
cmp
or
popa
dec
insb
idivb
xchg
mov
lret
jns
aad
push
adc
mulw
sbb
xchg
xchg
icebp
in
cmp
mov
out
int
fildl
icebp
data16
jecxz
mov
adc
sti
std
mov
loop
iret
sti
add
fistpll
push
add
xor
mov
pop
jg
int
dec
xor
stos
shll
into
mov
inc
mov
lea
call
pop
sbb
sarb
push
cmc
in
xchg
inc
cmc
or
dec
mov
stc
add
mov
mov
inc
xor
shrl
push
mov
insl
xchg
sbb
daa
ja
add
repz
mov
js
inc
xor
sbb
xor
or
push
cmp
arpl
push
mov
out
sbb
jmp
dec
pop
sub
mov
jmp
out
sub
mov
xor
xor
sub
call
lret
sub
outsl
jne
mov
mov
fbstp
pop
xor
inc
loope
pop
aaa
loope
add
inc
popf
in
ret
lods
inc
adc
mov
xor
negl
add
lzcnt
stos
flds
xchg
pop
mov
jmp
ret
daa
xchg
cmp
fisubs
xchg
leave
and
adc
cwtl
add
and
xor
inc
mov
sub
int
ja
xor
push
int3
add
sub
mov
sub
add
andl
push
stos
and
xor
mov
xchg
dec
sub
xchg
add
xor
push
inc
sbb
inc
jge
adc
pop
shll
dec
jmp
adc
jge
inc
adc
mov
dec
jecxz
cmp
andb
fnstcw
out
jge
inc
aad
rorl
stc
sub
xor
xchg
data16
push
sbb
stos
pop
je
arpl
and
mov
adc
mov
cmc
das
loopne
and
xchg
jo
pop
xor
mov
xor
inc
fisubrs
mov
xor
sub
sub
imul
push
xor
aad
lcall
xor
int
cmc
arpl
js
fisubrs
cmp
lret
inc
aad
test
add
dec
lcall
adc
ja
jne
rorl
add
adc
adc
cmp
xorb
insl
sub
or
imul
lcall
and
or
and
pop
dec
cmp
mov
sbb
xor
inc
gs
stos
inc
mov
add
rcll
mov
in
xor
and
push
pop
shlb
test
pop
xor
cmp
inc
mov
cmp
mov
jnp
out
mov
popa
or
and
es
sbb
popf
shll
dec
call
dec
push
aas
loop
adc
jnp
add
dec
xor
or
xchg
sti
mov
in
push
xchg
dec
loop
or
sbb
sub
in
hlt
fsubp
iret
mov
cltd
sbb
addr16
adc
push
dec
sub
mov
shrl
stc
xor
inc
ror
jmp
cwtl
mov
test
or
stos
xlat
mov
outsl
push
mov
cmc
arpl
lds
rcrb
pop
fstpt
xlat
lea
lret
and
xor
shll
mov
xchg
pushf
int
mov
pop
hlt
pop
in
jo
js
lea
jae
push
jecxz
adc
mov
je
xchg
jp
aas
cmpsl
add
push
out
lret
jp
add
incw
add
jns
fistpll
mov
inc
lock
pop
jmp
ret
mov
adc
jns
iret
xor
pop
xchg
cwtl
xor
inc
scas
adc
push
push
mov
add
jecxz
pop
roll
mov
icebp
push
dec
sub
or
test
adc
shrl
shl
sbb
icebp
add
pop
xor
pop
push
push
cmp
data16
pusha
or
cwtl
xor
jne
push
int3
cwtl
dec
inc
and
mov
sub
js
outsb
adc
sbb
fs
out
movsb
jge
inc
dec
push
jae
addr16
jae
scas
sbb
sbb
pop
pop
outsl
and
xchg
push
je
loop
out
nop
mov
leave
add
stos
push
movsl
xchg
lcall
push
int3
fsubp
pop
add
and
aad
or
sub
shlb
pop
add
add
and
call
out
fnstcw
inc
and
or
and
inc
xchg
xchg
mov
or
sbb
inc
out
push
or
inc
xchg
ljmp
push
xor
leave
inc
xchg
test
cmc
pop
xor
adc
popf
outsl
push
dec
add
ljmp
jp
inc
outsl
and
xor
cmp
xor
or
cwtl
sub
aaa
mov
and
xor
xchg
inc
ja
popa
push
out
insb
inc
sub
xchg
shll
imull
push
dec
test
adc
cmc
xor
pop
scas
sbb
sbb
testl
cmc
aaa
fwait
test
mov
adc
pop
add
pop
push
push
or
inc
mov
inc
dec
mov
xchg
popa
dec
lahf
mov
adc
loop
cltd
jnp
xlat
mov
movsl
jnp
jmp
add
push
mov
or
jne
inc
mov
shl
xor
jnp
movsb
xchg
cmpsl
xchg
pop
das
sbb
cwtl
rcll
mov
sarb
inc
pop
lahf
push
fldt
or
xchg
icebp
int
test
shr
shlb
sbb
sbb
ss
cmp
sbb
daa
and
test
inc
pop
push
pop
imul
push
outsl
inc
xor
inc
int
stc
mov
jmp
loope
sbbl
fimuls
xchg
out
push
inc
les
fwait
inc
xchg
xchg
das
shrb
mov
xchg
int
icebp
test
es
adc
sub
shll
push
add
aas
daa
es
or
cmovae
xchg
sub
and
lods
mov
popf
jae
or
mov
inc
inc
mov
sbb
iret
jecxz
popf
loop
cmpb
ljmp
mov
sbb
xor
scas
lcall
inc
xor
leave
mov
xchg
in
sbb
xor
xchg
dec
repz
push
xor
fxch
push
and
outsl
jp
shlb
cltd
mov
movsb
ret
mov
adcl
stos
lahf
bound
or
dec
and
push
pop
das
imul
dec
xchg
mov
sbb
out
xor
dec
arpl
adc
es
inc
es
sub
fisubs
mov
adc
mov
ret
sub
pushf
pop
mov
popf
notl
ja
mov
addr16
lds
or
inc
inc
xchg
add
xchg
shr
xor
cmp
mov
xor
addr16
inc
les
sub
int
outsl
or
cmpsl
cltd
jecxz
xchg
lcall
mov
int
cwtl
inc
adc
movsl
xchg
loopne
mov
sti
aam
es
mov
push
aaa
cmp
lcall
fists
lcall
outsl
pop
add
jmp
add
andb
das
out
sub
add
dec
jg
cltd
scas
mov
cmp
mov
jno
sub
mov
outsl
and
jmp
push
dec
dec
jne
popa
mov
add
roll
xor
jnp
dec
rcrl
pop
int
mov
mov
js
mov
inc
les
loop
xchg
mov
xor
dec
xor
pop
lahf
ret
mov
adc
xor
mov
pusha
inc
outsl
inc
xchg
xor
lods
xor
inc
xchg
scas
mov
stos
sbb
xor
filds
cltd
divl
dec
and
pop
pop
and
add
sbb
inc
rorl
inc
mov
aaa
jmp
and
popa
push
add
leave
add
cmp
lcall
fwait
aam
adc
sub
xorb
cmp
jae
and
int
mov
das
dec
or
xor
aas
jne
or
jecxz
test
xchg
mov
adc
add
jnp
imul
xchg
inc
out
data16
icebp
pop
xor
push
pop
mov
mov
stos
testl
sbb
dec
xor
icebp
fisubrs
and
dec
add
inc
les
aas
pop
or
aad
push
lods
sub
ljmp
outsl
dec
dec
fwait
sbb
xlat
pop
lea
sub
aas
dec
aad
and
rcll
stos
dec
aad
xchg
dec
jmp
js
add
and
sub
jp
icebp
dec
pop
xor
sbb
das
in
mov
mov
jecxz
pop
push
aad
insb
add
add
cwtl
xchg
lea
xchg
mov
xor
and
add
aaa
and
push
inc
dec
mov
pop
popl
push
int
push
popf
mov
and
sbb
lds
test
add
jnp
arpl
jge
mov
lock
dec
mov
fldenv
lcall
pop
jno
inc
imul
leave
icebp
rcll
xor
inc
inc
xchg
sub
adc
insb
leave
xchg
dec
inc
mov
lock
cmp
dec
addb
pop
cmp
mov
push
mov
divl
pop
mov
adc
xor
mov
shll
ja
insb
adc
clc
mov
xchg
lods
pop
push
jne
inc
dec
sbb
fsts
fldlg2
or
fsubrs
xor
fisttpll
insb
jbe
fisttps
jecxz
or
lret
addr16
add
xchg
xor
fiadds
or
jns
jl
addl
xor
push
xor
xor
pop
pop
cmp
sub
dec
push
dec
push
xchg
or
adcb
and
popa
in
mov
or
stos
test
dec
and
scas
movsl
test
es
pop
cmp
int
popa
xchg
call
gs
in
pop
or
stc
and
cwtl
inc
mov
sti
dec
lds
push
shlb
xor
adcl
addr16
or
addr16
pushf
cmc
data16
inc
sti
cmpsb
scas
pushf
and
or
sub
pop
stos
js
orb
push
pop
dec
jp
dec
daa
adc
lahf
stos
sbb
and
out
es
fwait
lcall
jmp
pop
addr16
sub
xor
inc
sub
shrb
lds
cmp
mov
push
mov
aaa
mov
jge
gs
sbb
and
aad
pop
fisubrs
push
popa
cmp
xor
xor
dec
imul
lods
and
cmp
test
fbld
mov
aas
push
inc
test
lcall
cwtl
dec
sbb
pop
ret
xor
sbb
lcall
lcall
nop
and
pop
insl
and
subb
into
es
test
test
xor
mov
ret
sbb
das
fwait
jbe
mov
sub
and
repz
dec
dec
int3
lahf
sbb
mov
shl
lods
data16
or
add
aad
xchg
lods
insb
pusha
fisttpl
xor
add
cwtl
mov
mov
enter
lidtl
push
enter
and
movsb
push
inc
setb
dec
lcall
add
jne
sub
std
dec
mov
xor
test
hlt
testl
popf
xor
je
jno
mov
lds
xor
flds
cmpsl
scas
mov
cmp
mov
icebp
push
jae
cmp
pop
add
fwait
xlat
das
xor
jb
pop
lods
jp
movsb
adc
cmc
push
xorl
pop
add
push
inc
stos
test
scas
and
fwait
nop
in
adc
in
sub
popa
scas
inc
dec
push
rcll
push
xor
arpl
xor
jp
adc
xorl
mov
add
add
or
dec
sub
and
leave
mull
or
mov
sbb
ss
and
sub
jnp
ret
rcrb
sub
add
cmp
inc
cmp
dec
jbe
xor
cmp
add
and
push
andps
in
add
fwait
pop
test
pop
test
xchg
adcb
lahf
jae
xor
adc
std
xor
and
mov
sbb
cmc
in
push
adc
add
add
nop
xor
mov
movsb
es
movsl
imul
and
arpl
loope
imul
test
xchg
inc
xor
adc
push
notb
mov
mov
test
xor
imul
inc
xor
xchg
sub
sub
insb
or
loope
xor
jns
adc
jns
push
adc
jge
loop
cwtl
xor
rcll
cmp
jecxz
lock
mov
ss
dec
filds
dec
shlb
cmp
test
jge
cltd
xor
xor
inc
ret
xor
sarb
xchg
movb
xor
cmpb
cmp
aaa
adc
dec
shrl
jo
dec
ljmp
imul
mov
dec
jecxz
sbb
lret
jmp
xchg
jl
sub
xor
les
inc
pop
cwtl
adc
jnp
xor
das
or
movsb
movsb
stc
push
cmp
js
push
push
cmp
mov
or
jnp
sarb
dec
stc
push
push
enter
inc
sub
cmp
inc
sub
mov
and
dec
sbb
scas
mov
inc
shlb
popl
shr
adc
scas
xor
leave
inc
xchg
cmp
out
inc
test
mov
inc
push
fnstenv
lds
xchg
sbb
gs
aaa
popa
imul
arpl
popa
jge
xor
ss
gs
mov
jno
xor
or
mov
lods
adcl
dec
mov
sbb
adc
inc
scas
push
adc
xor
push
jmp
mov
mov
pop
mov
cmp
mov
or
adc
movsl
adc
call
rorl
mov
dec
andl
mov
jl
popa
pop
jg
das
popa
push
enter
lea
adc
imul
or
dec
call
test
out
pop
push
add
jp
push
mov
add
xor
cmp
or
dec
sub
jp
out
jmp
xchg
add
xor
add
mov
push
test
dec
cmp
fcoms
xchg
setbe
mov
and
push
lods
or
xchg
popf
mov
and
dec
fimuls
sub
inc
jecxz
cmp
and
dec
pop
jnp
xor
or
add
ret
jae
jnp
mov
mov
shll
or
mov
out
xchg
add
lret
rorb
cmp
pop
add
aaa
dec
sti
add
and
xor
test
inc
pop
negl
sub
mov
dec
mov
add
bt
mov
jb
inc
sub
adc
inc
rcr
dec
sbb
testl
notl
out
mov
lcall
sbb
gs
cmp
pop
mov
adc
test
push
adc
xor
addb
push
inc
cmp
cwtl
and
pop
xchg
int
punpckhdq
sbb
mov
lahf
cs
pushf
adc
repz
mov
sbb
arpl
push
or
adc
sub
in
jmp
adc
jns
sbb
cmp
push
ja
xchg
fistl
stos
push
incl
lahf
pop
ss
xor
sbb
stos
push
inc
inc
stos
jnp
outsb
imul
xor
and
rcrl
mov
je
mov
xchg
jo
cmp
inc
xor
popa
lods
xor
pop
inc
xor
xchg
cmpsb
sbb
push
dec
cwtl
push
xor
jp
roll
sbb
icebp
lds
mov
inc
xor
adc
pop
xor
inc
add
aaa
lea
push
mov
xchg
cmp
mov
test
pop
mov
xchg
inc
je
arpl
bound
outsb
pop
inc
xor
sbb
sti
xchg
inc
out
jmp
int3
cmp
and
lods
inc
nop
or
mov
adc
ja
and
popa
cmp
aas
jb
mov
and
or
lock
lea
and
shrl
sub
inc
pop
xor
mov
lahf
pop
push
xor
add
cmp
pop
pop
inc
lock
cmc
add
sub
lcall
dec
fmuls
dec
xchg
pop
insl
xlat
lods
xor
lods
lcall
xchg
inc
aaa
xor
mov
test
orl
dec
int3
das
roll
adc
cwtl
pop
mov
mov
dec
xor
test
pop
xor
push
test
ss
dec
adc
int3
call
fistpl
mov
mov
mov
inc
std
dec
and
push
inc
and
xor
gs
daa
pop
and
in
dec
test
push
adc
and
xor
mov
aaa
arpl
inc
ret
lahf
aas
lds
inc
testb
pop
pop
call
push
lods
push
xor
and
aaa
xor
and
and
pop
shl
inc
push
xor
inc
or
xorl
je
lret
inc
arpl
cmp
inc
jns
mov
stos
xor
in
xor
xchg
adc
or
imul
inc
addb
push
adc
xor
dec
pusha
arpl
lss
insb
rolb
das
cmp
jo
cwtl
nop
mov
xchg
out
xchg
inc
mov
xor
sub
push
dec
rcrb
xchg
push
pop
mov
cmp
bound
and
adc
add
cmp
insb
push
xchg
xchg
ret
loope
push
mov
mov
dec
mov
out
inc
mov
lods
popa
idivb
lds
pusha
pusha
lds
test
xchg
jns
push
imul
sbb
inc
inc
test
sbb
adc
lcall
ret
mov
mov
jp
retw
xchg
addr16
mov
mov
data16
pop
cmp
shr
pushf
adc
lcall
aaa
mov
pop
inc
outsl
xor
out
xchg
dec
ret
fisubrs
xlat
scas
pop
movsl
xchg
jl
dec
jno
xor
add
nop
popf
and
in
xchg
outsl
or
lcall
aaa
rcll
popa
leave
scas
das
addr16
push
cmp
lret
mov
repz
sarl
jge
inc
cmp
inc
and
pop
inc
int3
mov
mov
scas
mov
dec
mov
jg
add
or
cmp
ret
roll
mov
dec
mov
xchg
pop
push
or
push
inc
inc
and
sbb
add
xor
jno
inc
bswap
xchg
inc
adc
outsl
testb
xor
adcb
ret
sub
lcall
push
int
aad
and
lcall
sub
rolb
pusha
add
inc
inc
dec
add
addl
sbbb
xchg
add
pusha
push
push
and
push
mov
stos
sub
icebp
cmp
stc
or
cs
add
das
inc
sahf
sub
xor
mov
xor
jno
in
push
movsl
dec
xor
dec
inc
add
or
nop
xor
out
xchg
push
imul
lods
in
add
pop
xor
add
js
addr16
pop
xor
mov
xor
and
inc
nop
loop
pop
pop
test
ret
xchg
inc
dec
cs
push
jne
inc
dec
push
in
and
outsl
xchg
test
pop
outsl
xchg
cmovne
dec
jge
add
test
imul
test
pop
push
cltd
or
jnp
test
add
insb
aas
push
pop
mov
filds
mov
les
xor
xor
add
adc
xor
adc
int3
jecxz
cmp
mov
ss
inc
or
mov
cmp
dec
orl
pop
lahf
inc
and
jae
or
mov
pop
and
sti
sub
fistps
pop
arpl
mov
pop
add
cwtl
int
cmovno
fwait
add
mov
mov
popa
lock
inc
adc
stos
push
imul
sub
sub
add
fwait
add
in
mov
push
add
fidivs
out
and
jg
aas
or
or
aaa
mov
pop
mov
scas
add
ret
subl
fsubrs
dec
xor
hlt
pop
daa
pop
pop
cmp
lods
test
ja
mov
mov
pop
pop
inc
mov
fiadds
fists
inc
aaa
xor
ret
negl
test
add
add
jno
pop
or
mov
add
push
aaa
fwait
or
push
stos
inc
popa
sub
pop
xchg
mov
add
sbb
shrl
stc
add
xor
xor
cmp
dec
add
xor
pusha
xor
adc
jne
lret
xor
daa
ja
xchg
lea
loopne
sbb
push
or
pop
aaa
push
ret
xchg
xor
xor
loope
push
push
shll
aaa
push
ret
sti
jne
mov
adc
inc
mov
xchg
xor
lahf
xchg
and
outsl
inc
lret
add
push
push
mov
jnp
mov
xor
das
fldcw
fsubrp
test
xchg
dec
popa
add
insl
xchg
outsl
addr16
test
mov
pop
fs
dec
cmp
push
jae
xchg
mov
shll
pop
add
out
sub
aaa
inc
xor
sub
orl
ret
sub
shll
addl
xchg
out
sbb
fiadds
jnp
ja
push
ret
rorb
flds
aaa
pop
orl
jo
xchg
pop
cmp
mulb
xchg
or
and
enter
add
or
fs
cmp
das
cmpb
dec
testb
pop
cmp
add
or
xor
ss
test
push
ror
cmp
and
cltd
inc
xor
inc
ss
cwtl
lods
xchg
test
jae
sbb
mov
xor
pop
xor
adc
inc
popl
nop
cmpsw
pop
sbb
aaa
iret
sbb
mov
aas
iret
subb
daa
rol
add
or
inc
adc
xchg
or
daa
mov
test
stc
or
je
adc
pop
cmp
addr16
orl
aaa
aaa
test
rclb
xor
test
xlat
xor
daa
pop
aaa
adc
push
mov
or
sub
ss
aaa
addr16
add
imul
aas
movsl
adc
add
or
mov
and
pop
pop
add
pop
aaa
ja
test
fwait
das
dec
jne
mov
or
pop
rorl
popf
pusha
pop
and
add
adc
cmpsl
dec
inc
outsl
push
inc
inc
dec
gs
push
jae
popf
scas
fldenv
les
sbb
sbb
and
adc
inc
cmp
xchg
rdpmc
shrb
inc
daa
sbb
pop
inc
fstpl
imul
into
sub
jnp
dec
outsl
mov
lret
add
jae
nop
xchg
dec
inc
xor
ja
xchg
aad
xor
pop
pop
and
mov
pop
xor
sub
addl
adcb
push
lret
sbbl
add
add
mov
outsl
cmpsl
sbb
nop
gs
xor
in
adc
xor
pusha
mov
adc
push
xor
cs
or
sbb
str
add
add
ret
adc
sub
and
pop
and
add
add
pop
and
xor
sub
xor
xor
aaa
test
push
inc
or
xor
or
scas
arpl
sbb
cmp
xchg
and
add
cltd
enter
orb
nop
push
mov
and
xor
and
xor
movsb
pop
or
sub
pop
pop
xor
add
fwait
adc
fwait
xchg
addr16
orl
xor
rcrl
and
xchg
xor
daa
iret
iret
or
xor
mov
es
sub
xor
pop
and
pop
ja
inc
xchg
mov
cmp
cmp
xor
pop
xor
xor
xor
lock
pop
out
subl
aas
cmp
mov
sbb
aas
aas
mov
xchg
xchg
pop
xor
xor
rorb
dec
xor
and
and
inc
or
dec
or
adc
imul
inc
sub
mov
mov
pusha
test
and
cmp
andb
lods
sub
fcomps
xchg
outsb
xor
daa
aad
dec
push
jmp
daa
push
pop
push
inc
jb
and
pop
inc
je
repnz
arpl
cmp
push
pop
fwait
aas
sbb
xchg
arpl
pop
sbb
mov
test
cmp
push
push
mov
lahf
and
iret
mov
rolb
scas
jne
inc
inc
sub
xchg
rcrb
jae
jb
call
xor
stos
mov
xchg
mov
push
xor
xchg
add
negl
insl
dec
xchg
pop
push
cmc
mov
inc
add
popa
sub
movsl
repz
je
or
ljmp
add
jecxz
or
dec
push
movsb
nop
mov
push
enter
xchg
adc
das
xor
cmp
adc
jns
daa
scas
shrb
xor
xor
mov
add
adc
xchg
mov
addb
adcl
pop
and
xor
sub
adc
das
dec
push
inc
mov
das
add
sbb
setnp
fisttps
lahf
flds
xchg
in
xor
test
or
xchg
xor
roll
dec
or
or
fs
add
add
mov
add
movsb
add
and
or
imul
push
sbb
fisubl
incl
fldcw
pop
and
cs
pop
addb
sbb
rorw
add
add
ret
daa
test
add
add
sbb
in
ds
sub
jbe
add
mov
push
mov
cmpsl
sbb
sub
ss
ds
add
mov
fisttpl
out
add
inc
add
mov
jmp
fwait
add
add
and
shrb
lcall
sub
je
mov
or
loopne
add
and
add
in
orl
pop
or
add
or
out
enter
or
adc
add
int3
mov
xchg
adcb
xor
xchg
add
pandn
sub
test
xorl
jb
arpl
jae
inc
pop
pusha
inc
dec
add
loope
syscall
or
mov
jnp
xor
or
xor
pop
push
add
js
stc
loopne
add
roll
add
and
or
xor
add
inc
pop
roll
movsb
and
adc
mov
add
adcb
cmp
push
or
push
xor
je
or
shrb
pop
je
loopne
add
or
enter
imul
or
adc
gs
and
nop
adc
adc
rcrl
xlat
xor
or
push
push
sbb
xor
movsb
movsb
mov
adc
add
das
add
add
add
adc
and
add
push
add
add
add
dec
mov
es
filds
pop
cmp
jle
adc
cmp
jg
adc
pop
add
aad
pusha
inc
add
sub
repz
dec
sub
add
pop
pop
adc
adc
add
out
lahf
add
inc
and
mov
shll
movsl
addl
add
sub
test
or
sub
xor
or
and
fs
cld
leave
add
scas
and
adc
js
arpl
stos
cmp
pop
pusha
sub
sti
and
mov
and
rcr
mov
sbb
inc
add
filds
in
mov
push
inc
mov
push
pop
flds
fistps
in
cmpsb
sti
iret
sbb
mov
iret
ficoml
adc
and
push
pop
or
adc
inc
shrb
sub
nop
or
mov
cmp
mov
mov
inc
or
pop
aad
push
or
aad
inc
xor
cmp
fnstenv
or
pusha
test
mov
pop
pusha
lods
fld
pop
or
xchg
mov
mov
adc
sub
push
push
adc
loop
add
xchg
cmp
fs
push
add
andl
fs
mov
stos
and
pop
mov
in
arpl
cmp
xchg
lret
mov
or
inc
adc
mov
pop
add
cmp
adc
and
lods
imul
sub
pop
dec
dec
popa
insb
jecxz
test
or
mov
add
adc
mov
icebp
aas
and
dec
call
mov
pop
or
xchg
mov
fmuls
mull
orl
lahf
jns
xchg
add
push
inc
xor
mov
insb
gs
mov
or
push
fs
add
test
leave
jbe
nop
addb
sub
sbb
je
mov
and
pop
rclb
adc
enter
push
push
inc
cli
or
js
stc
movsl
add
add
inc
sysret
mov
mov
aad
push
push
arpl
lods
sub
pusha
div
sbb
dec
push
or
cltd
add
inc
bswap
inc
inc
inc
aas
imul
adc
and
adc
imul
inc
push
jne
aas
xchg
test
add
add
inc
inc
xor
shld
inc
pop
ds
or
test
or
add
sub
push
pop
add
or
arpl
add
inc
cmp
data16
es
std
add
add
aas
or
pop
lret
inc
shll
ss
add
and
cwtl
and
and
adc
adc
pop
push
lret
gs
xor
or
add
pusha
orb
in
fistpll
add
jnp
jb
or
inc
xor
jp
pusha
lods
cmp
and
add
sub
add
push
inc
push
lock
arpl
or
rolb
dec
jecxz
mov
jns
mov
dec
cs
inc
adc
push
inc
push
outsl
add
add
dec
sbb
jae
adc
ret
dec
pop
push
lcall
pop
lret
enter
push
mov
inc
inc
dec
inc
rcll
xchg
inc
mov
rorb
test
jo
mov
adc
sbb
xor
lea
mov
add
movsb
orb
paddq
push
xchg
inc
jb
movsb
into
pop
pop
add
sbb
sbb
jmp
sub
inc
adc
int
add
fisttpl
and
mov
aam
in
pop
je
mov
vmwrite
jle
push
incl
pusha
fadd
inc
enter
push
and
add
jae
cld
das
xor
xchg
xorl
sub
xor
or
and
add
xchg
pop
inc
or
in
push
dec
sbb
daa
and
sub
fnstcw
cwtl
lret
mov
fadds
sbb
inc
inc
cmpsb
movsb
cltd
es
data16
adc
sub
pop
mov
pop
cmp
inc
xor
xchg
or
dec
xor
xchg
add
das
movsb
cltd
in
dec
ja
xor
stos
cmpsb
adc
sub
daa
popf
cmp
and
jne
adc
add
pushf
test
rcr
mov
shll
hlt
or
push
xor
dec
loopne
mov
add
mov
aas
in
xor
xor
sbb
cmp
inc
sahf
cmp
pop
int3
mov
in
repz
add
push
dec
hlt
lret
inc
sarl
push
jbe
in
je
jg
mov
inc
call
leave
and
push
into
push
test
enter
mov
pusha
mov
packsswb
flds
pop
psubusb
lods
mov
pop
inc
inc
adc
sbb
inc
fcompl
hlt
enter
popa
call
xchg
bound
xorl
add
pop
mov
arpl
jp
add
call
cmp
imul
dec
ja
push
imul
mov
dec
pop
inc
inc
push
ja
dec
inc
dec
jno
inc
inc
push
push
push
inc
lahf
aas
dec
push
dec
pop
inc
push
push
dec
push
imul
gs
push
dec
dec
push
add
dec
imul
lcall
push
dec
inc
dec
pop
pop
push
inc
push
je
pop
push
jae
dec
dec
dec
lods
inc
mov
push
dec
ja
jge
mov
xorb
ds
push
push
xchg
dec
inc
ja
push
dec
inc
dec
push
push
dec
dec
jno
dec
pop
cmpb
out
push
dec
shlb
inc
adc
call
pop
pop
inc
dec
inc
xchg
pop
pop
jb
push
fnstsw
inc
jne
pop
popa
pop
dec
imul
dec
pop
push
pop
dec
inc
inc
jno
push
addr16
dec
or
push
mov
decl
dec
inc
push
dec
dec
inc
push
dec
jno
jo
dec
dec
dec
cltd
imulb
in
aam
pop
push
imul
jae
out
inc
inc
fs
pop
dec
ja
aaa
add
int3
add
push
mov
sub
push
es
or
xchg
lahf
lahf
push
pop
outsb
int3
adc
mov
hlt
movl
inc
or
or
sbb
mov
incb
or
push
add
fsubl
jbe
out
lea
xor
mov
push
insb
fnclex
sub
cmpl
jge
push
push
jne
mov
sbb
jmp
andl
cld
fistpll
rolb
pop
ret
inc
push
imul
pop
leave
ret
or
adc
sub
rcrb
addb
mov
or
or
jae,pn
in
lea
mov
movsl
add
fcomps
nop
mov
cld
les
sti
mov
punpckhbw
les
mov
add
adc
cmp
pushw
test
cmpsl
pushf
gs
nop
inc
sbb
jo
hlt
addr16
pop
leave
or
xchg
rorb
in
cmp
sub
push
push
sahf
scas
insb
popa
xor
mov
inc
enter
nop
sbb
in
push
push
imul
aam
dec
xchg
or
nop
imul
orl
sbbb
xchg
or
mov
pop
cwtl
jnp
mov
insb
pop
push
leave
push
pop
or
push
pop
jl
pop
enter
jns
enter
and
sbb
inc
xchg
mov
ds
adc
add
dec
push
pop
cmp
push
jl
mov
push
push
movswl
cmp
data16
pushf
clc
xchg
add
cmp
push
mov
dec
andl
mov
mov
and
sbb
inc
xchg
add
out
and
les
enter
ret
inc
dec
add
or
sub
adc
cmp
into
ficomps
inc
dec
adc
ja
xchg
lret
fcompl
mov
or
mov
shlb
arpl
cs
aaa
mov
add
je
sbb
inc
push
jp
rol
gs
fldenv
test
add
rorb
testl
es
jge
mov
xor
or
enter
cwtl
into
mov
add
adc
xchg
enter
push
adc
lods
adc
push
faddp
add
loope
xchg
ret
aas
and
push
je
fnstenv
loopne
mov
cmp
sahf
in
xchg
add
adc
add
stc
lods
ret
aad
xor
mov
sbb
jo
mov
in
icebp
shlb
sbb
or
test
arpl
negb
and
adc
cmp
mov
aam
add
pusha
mov
leave
adc
adc
mov
ja
mov
decb
add
dec
mov
pusha
pushl
pop
fstp
mov
sub
movl
cmp
mov
jg
jbe
mov
add
or
jg
out
fs
or
pusha
in
dec
cmp
xchg
sbb
ret
adc
inc
push
xor
in
push
add
aas
adc
neg
sbb
inc
add
fdivr
lea
fsts
fdivr
dec
lea
fs
push
sub
mov
inc
in
pop
test
and
cmp
add
lock
mov
mov
cmc
sbb
push
or
or
jmp
into
jbe
loope
rclb
jo
mov
or
and
sti
mov
fdivrs
push
push
adc
dec
mov
shr
and
dec
js
mov
jmp
repz
adc
jmp
push
jae
lods
add
pushf
ret
insl
fcoml
or
xchg
dec
cs
cs
js
mov
insb
push
cmp
xor
dec
cs
cs
cs
add
lods
xor
dec
clc
std
hlt
mov
adc
sub
in
jb
adc
mov
jmp
pop
push
call
cmc
je
fs
mov
sarl
jmp
sbb
in
fwait
add
or
and
hlt
add
or
mov
sbb
pushf
jae
mov
aad
push
fwait
xor
mov
xor
sbb
mov
rcrb
jo
xlat
movb
xchg
or
xor
mov
aam
mov
sbb
test
add
push
or
enter
inc
test
push
cmp
push
aam
fsubs
nop
and
and
cmp
or
inc
cs
mov
mov
dec
jb
scas
xor
insb
cmp
lahf
add
fstpl
add
xor
cmp
fcmovnu
test
fsubl
mov
outsb
stos
mov
inc
es
sub
pop
sbb
daa
mov
sbb
mov
and
and
pushf
mov
jns
fs
dec
cmp
dec
pop
ret
mov
jp
arpl
fistps
lds
xor
cs
lds
in
pop
les
xchg
addr16
inc
mov
mov
icebp
xchg
enter
loope
and
pop
and
fsubl
adc
fmuls
enter
rcrb
les
fisttps
xor
mov
movsb
mov
test
xchg
out
daa
test
or
pusha
cmp
or
jmp
imul
pop
adc
mov
push
fbld
int
sbb
mov
dec
jl
sub
int3
push
fcmovb
test
test
xchg
adc
orl
add
xchg
daa
jl
jo
in
rolb
jb
movsl
cld
ret
insb
movsb
and
push
insl
dec
in
stos
test
xchg
popf
test
adc
mov
push
fmull
in
or
and
adc
gs
mov
adc
jo
xchg
fstpl
in
or
inc
leave
adc
inc
dec
pop
or
mov
cs
call
lods
add
daa
jne
movsl
leave
mov
adc
je
mov
and
or
test
pop
daa
lods
mov
cwtl
adc
mov
int
ffree
pop
xor
and
or
add
mov
dec
imul
adc
popa
inc
rorb
inc
adc
push
sbb
cmp
stos
inc
jecxz
aam
pushl
gs
flds
notb
aam
les
push
mov
out
fmul
and
popa
xlat
in
cmpsb
fcoml
and
les
enter
push
sub
rol
cltd
or
loopne
shl
ret
fisttpll
xor
out
in
es
lods
push
sahf
or
sbb
and
sub
pop
sbb
pop
iret
nop
inc
jb
add
clc
adc
sbb
jg
punpckhbw
ja
rol
lret
bound
out
jbe
jl
xchg
push
mov
pop
or
pop
xchg
popf
js
and
fildl
jns,pn
cmp
xor
sbb
and
or
pop
and
mov
lock
and
mov
mov
and
adcl
or
sbb
inc
dec
push
sbb
adc
xchg
add
incb
add
or
incl
xor
mov
dec
jo
xchg
arpl
test
xlat
mov
pop
xor
push
and
repnz
aaa
insb
pop
mov
add
mov
pop
cmpb
adc
mov
pop
sbb
pushf
add
fcoms
xchg
pop
dec
gs
ja
xor
add
dec
adc
add
daa
shl
push
enter
fsubs
push
out
lea
ljmp
enter
jbe
or
addb
cld
sbb
xorb
push
shll
sahf
add
je
fldenv
or
or
stc
lea
rorl
and
mov
add
cmpsl
addr16
inc
aam
add
mov
fnstsw
movsb
mov
dec
lods
lret
out
xchg
or
aaa
clc
or
sub
shl
inc
or
rolb
inc
cli
cmpsb
nop
add
or
rcrl
pop
enter
jg
nop
pop
das
and
sbb
xor
lcall
hlt
lahf
nop
xchg
and
outsl
jns
stos
xor
mov
fdivs
repz
dec
push
lods
scas
into
mov
dec
push
fs
mov
xor
nop
and
enter
sbb
repnz
rcrl
enter
inc
enter
lods
in
dec
and
mov
xor
pop
mov
es
and
in
cmp
mov
mov
out
cmp
mov
repz
mov
mov
sahf
mov
nop
or
mov
and
in
and
nop
les
movsb
jns
pop
or
int3
les
fnstcw
adc
arpl
imul
mov
add
jo
mov
bound
add
pop
inc
xchg
push
in
and
add
mov
sbb
loopne
mov
sub
enter
and
int3
sub
dec
fstps
sti
cmpsl
add
push
jl
repz
inc
push
and
sbb
imul
enter
push
mov
lods
and
or
test
fcoml
or
mov
and
xor
or
jb
push
jb
and
leave
and
leave
and
xor
lcall
push
sbb
shlb
dec
mov
out
sbb
sbb
test
push
dec
mov
cmp
or
fadds
sbb
add
adc
adc
and
lret
fldcw
push
push
sbbl
push
mov
es
dec
xchg
push
and
sub
mov
pop
and
mov
repz
xor
adc
mov
leave
mov
sbb
sbbb
inc
pop
cmp
inc
push
pop
fdivrl
push
sbb
jns
sbb
cwtl
push
in
push
cwtl
inc
inc
cmp
scas
inc
fadds
jb
jb
fs
sbb
orl
pop
test
pop
or
and
jl
cmp
cmp
xchg
popf
or
mov
adc
mov
inc
push
mov
test
in
or
mov
dec
pop
and
cmp
xor
cmp
inc
jb
pushf
jmp
or
test
sub
adc
and
push
subb
dec
cmpsb
in
inc
or
cmp
sbb
jl
inc
push
in
and
jbe
add
dec
or
jp
orl
test
and
push
xchg
sub
xchg
xchg
or
nop
add
in
in
sbb
nop
pop
and
and
adc
pop
sbb
jb
ss
mov
sbb
orl
pop
test
and
add
sub
push
push
jb
pusha
xchg
adc
dec
scas
enter
mov
shll
mov
aaa
je
jl
dec
push
sbb
pusha
pusha
push
enter
aas
adc
pop
pop
test
push
sbb
jns
jle
pop
enter
jo
adc
jg
rorb
fs
je
fs
test
and
push
js
enter
orl
and
push
nop
add
pusha
mov
nop
mov
push
xchg
and
or
inc
test
sub
adc
sbb
mov
enter
mov
add
xchg
or
nop
mov
adc
or
in
add
mov
mov
sarb
sub
inc
push
or
push
enter
pop
add
and
xor
enter
add
nop
pop
enter
fmull
xor
push
enter
add
inc
sbb
mov
and
and
sub
jb
push
cld
cld
sub
add
enter
enter
xchg
sub
clc
sub
add
xchg
or
sub
and
hlt
hlt
and
pop
fs
add
in
push
lock
enter
jmp
int3
fs
add
in
push
in
in
fldenv
and
mov
sbb
call
call
push
insb
jnp
sbb
and
adc
in
push
enter
leave
sub
test
sbb
adc
inc
push
in
loopne
test
scas
lods
cmp
jns
orl
popl
mov
mov
or
fcom
push
enter
and
inc
and
cmp
sbb
and
add
aam
push
enter
enter
js
add
pop
xor
rcl
in
jb
mov
xchg
sub
xor
int3
inc
scas
inc
push
int3
rolb
mov
mov
nop
clc
enter
nop
stos
in
aas
adc
hlt
hlt
enter
les
les
popa
subb
lock
shl
mov
enter
cmp
pop
add
xor
mov
push
and
pop
enter
mov
sbbl
in
add
pop
and
in
enter
mov
nop
pop
enter
xchg
nop
inc
push
dec
loopne
stos
nop
add
mov
pop
and
nop
and
or
stos
nop
add
lods
lods
adc
ljmp
push
sbb
or
nop
add
mov
loop
sbb
pop
addb
mov
rorb
nop
shlb
xor
push
in
lahf
les
inc
add
and
lds
arpl
mov
into
and
mov
pop
xchg
nop
or
enter
test
adc
xor
into
js
pop
jb
adc
rcrb
pushf
fadd
inc
aam
clc
test
movsb
pop
in
fwait
push
pusha
test
adc
xor
lock
cmp
mov
adc
sbb
lock
mov
test
inc
sub
aam
add
lea
mov
adc
and
inc
test
and
jns
sbb
rolb
fldcw
sbbb
out
jae
push
in
cwtl
pop
lock
fldenv
cld
ret
add
bound
mov
in
in
sub
pop
push
inc
orb
icebp
inc
xor
decb
mov
inc
insb
cmpsb
call
push
xor
mov
sahf
mov
xor
sub
or
pop
adc
cmpsl
sti
push
xor
cmp
push
push
sub
rcrb
fildl
mov
andb
mov
push
cmc
jmp
lock
shl
or
xor
mov
mov
or
add
xchg
jne
cmp
add
stc
push
xor
inc
or
in
or
add
add
into
test
sub
popa
sbb
sbbb
xchg
xchg
pop
sbb
cld
xor
cld
dec
ret
cld
pop
sbb
sbb
mov
insb
sub
jl
mov
push
data16
push
mov
rolb
xchg
jle
xor
or
xor
mov
adc
adc
add
xchg
sub
jbe
cs
ds
jnp
inc
or
iret
lret
cmp
cld
in
in
leave
enter
in
jge
pop
xor
add
sarb
xor
add
les
mov
push
mov
adc
and
pop
out
sbb
or
xchg
pushf
or
mov
and
mov
xchg
push
enter
pushl
mov
sub
add
fs
pop
sub
lea
inc
xchg
test
std
inc
addb
adc
inc
cmpsb
dec
dec
dec
mov
fnstcw
sbbb
mov
mov
or
adc
mov
mov
adc
sbb
in
adc
or
iret
dec
add
repnz
test
mov
fs
adc
inc
lods
inc
and
add
adc
adc
jl
inc
or
xor
rorb
aam
test
std
andl
mov
test
je
arpl
or
xchg
addr16
lahf
insb
jae
mov
add
leave
mov
aam
sub
jl
pop
out
pusha
imul
xor
fs
aad
arpl
fdivr
xor
xor
cmp
fstpt
cmp
mov
sbbl
and
in
mov
call
and
xchg
std
hlt
dec
shr
push
nop
shl
enter
nop
add
push
inc
xor
dec
fmull
call
push
and
call
or
pop
cmp
add
and
add
movsb
cmp
adc
mov
push
adc
into
push
inc
leave
xor
lods
and
cmp
mov
push
xor
fs
cmp
adc
adc
mov
std
sbb
xchg
cwtl
add
test
sbb
pusha
lds
ljmp
xchg
in
add
repz
hlt
adc
xchg
in
stc
movsb
and
adc
adc
and
xor
sbb
ret
inc
or
add
leave
and
xor
and
das
stos
sbb
or
and
and
inc
or
jmp
push
pusha
das
enter
and
sar
leave
gs
or
dec
leave
pop
test
ss
inc
es
loopne
js
insl
enter
imul
inc
xchg
ds
mov
fadd
fildl
or
testl
jne
jmp
sub
je
jl
mov
mov
jge
daa
xchg
xor
mov
mov
xor
add
loope
aam
and
test
ljmp
cs
mov
rcrb
inc
cmpsb
shrb
dec
xor
add
push
push
adc
inc
adc
inc
mov
adc
pushl
xor
or
adc
push
add
inc
xchg
inc
add
add
faddl
in
dec
dec
in
push
push
or
mov
add
cwtd
enter
and
mov
inc
and
divb
push
fcoms
and
aad
aam
and
add
or
mov
in
pop
or
cmp
xor
add
jg
xor
or
dec
repnz
stos
lods
mov
add
je
fwait
mov
mov
push
shrl
cmp
mov
orb
xchg
jb
or
add
jmp
push
push
lods
lods
test
dec
adc
imul
sbb
or
cmpl
mov
pop
push
ds
fs
mov
cmp
push
push
fcoms
jbe
shlb
fdivrs
xor
imul
cmp
dec
test
pop
ret
mov
cmpsb
xor
leave
jge
sbb
or
push
enter
leave
jb
adc
repnz
push
jb
cmp
leave
jae
lods
lods
les
push
repnz
dec
push
jb
ljmp
movsb
movsb
shl
stos
in
mov
xchg
cmp
mov
xchg
xchg
out
pushf
pushf
mov
mov
scas
push
add
out
inc
aaa
add
or
stos
ret
mov
popa
iret
insl
xchg
dec
loope
sbb
je
nop
fnstsw
mov
xchg
pop
aam
xlat
sbb
xchg
push
inc
fcoms
int3
int3
xchg
add
enter
fs
aam
fsubrl
test
xor
pop
lods
and
pop
xchg
cltd
test
mov
in
cwtl
nop
leave
inc
dec
push
cwtl
cwtl
cmp
jns
inc
push
push
dec
cmp
leave
inc
dec
push
nop
nop
out
jns
inc
push
mov
cmp
inc
dec
push
mov
inc
push
or
cmp
leave
inc
dec
push
addb
push
pop
sahf
sbb
and
jg
pop
xchg
aas
pusha
jge
lods
lods
mov
push
daa
xor
and
lods
dec
or
ds
pusha
sbb
cmp
xchg
add
inc
and
jg
mov
dec
enter
es
mov
xor
jo
fisubrl
cmp
xchg
loopne
fisttpll
or
push
jecxz
insb
nop
push
pop
rcrl
mov
mov
inc
mov
addr16
push
cltd
idivl
sub
mov
push
loopne
mov
mov
and
pop
pop
icebp
lcall
mov
popf
mov
add
adc
or
or
test
push
leave
and
push
push
stos
adc
push
clc
enter
push
das
enter
push
pop
leave
orb
dec
dec
shlb
outsl
mov
lret
add
mov
push
fnstenv
xchg
test
addb
enter
sbb
mov
pop
mov
ret
test
rorl
and
inc
inc
movsb
bound
stos
pusha
filds
dec
test
and
pop
inc
inc
cmp
xor
cmpb
enter
push
xor
shlb
or
les
dec
or
push
or
adcl
push
cmp
mov
hlt
sti
imul
es
jmp
or
sub
add
test
pop
addb
sub
repnz
push
pop
movsb
enter
xor
adc
jo
loope
sbb
and
mov
in
fs
pop
sar
inc
dec
xchg
loopne
in
cwtl
mov
imul
mov
fcomp
aam
lods
and
fsubrs
and
loopne
loopne
insb
sub
mov
mov
repnz
mov
mov
mov
enter
jb
enter
lods
out
in
sbb
xchg
test
les
jb
movsb
movsb
movsb
sahf
adc
adc
dec
shrb
mov
fs
push
or
adc
test
lock
and
cmc
enter
cmp
inc
lcall
std
xchg
sub
les
jne
mov
rclb
push
fwait
dec
pushf
nop
pushf
pushf
inc
push
leave
inc
pushf
sets
cwtl
cwtl
mov
push
pop
xchg
and
sbb
nop
nop
mov
mov
push
mov
mov
xchg
mov
popa
pop
test
test
mov
xorb
dec
dec
lods
lods
mov
and
jns
mov
and
fs
js
lahf
pushf
mov
mov
stc
dec
xor
mov
movsl
inc
rclb
pop
xchg
mov
sbb
add
movsb
jecxz
loopne
enter
test
in
add
xchg
shrb
cmc
insb
mov
loope
mov
js
add
leave
rclb
push
jns
mov
movb
sarb
add
sahf
adc
sub
imul
vcomiss
cmp
ja
adc
xor
push
subl
adc
rorb
push
dec
adc
dec
adc
incl
cmp
mov
xor
lods
fs
cmpl
fdivs
mov
int
add
addr16
jb
sbb
enter
sbb
out
movl
xchg
fildl
cmp
sbb
mov
xor
loope
mov
lods
mov
rolb
push
push
loope
inc
pop
push
mov
push
cmp
loopne
mov
sub
cmp
mov
aad
push
loop
rorl
lods
add
and
pop
sub
push
and
mov
popa
les
add
fdiv
orl
pop
sbb
cmp
clc
sbb
push
leave
and
xchg
adc
leave
sub
sbb
dec
push
je
inc
or
inc
or
int3
inc
lcall
mov
add
mov
dec
mov
insb
repnz
jo
or
sbb
mov
mov
jnp
ret
sub
pop
push
sbb
popf
shlb
inc
inc
rolb
fistps
add
sbb
sub
enter
push
test
mov
or
fistpl
insb
add
inc
sahf
in
xor
nop
xor
fiadds
xchg
nop
inc
fdivl
mov
push
jae
push
in
notb
pusha
add
in
and
orb
push
cwtl
cmp
sub
push
dec
adc
push
leave
xchg
xor
jmp
inc
inc
jb
pop
pusha
sub
mov
push
mov
je
je
inc
std
les
mov
aam
mov
ror
leave
mov
daa
mov
adc
les
xchg
sub
cld
sub
push
push
xor
jo
sbb
dec
pop
fadds
nop
mov
mov
push
and
enter
movsb
mov
enter
mov
js
cmp
add
repnz
std
push
dec
rclb
inc
sub
aaa
les
push
push
push
pop
dec
loopne
push
add
adcl
enter
adc
sbb
fmulp
fcomip
or
test
mov
enter
mov
mov
popa
scas
nop
push
loopne
js
filds
jmp
or
in
fsubr
scas
nop
push
enter
mov
and
or
call
sub
adc
and
jo
test
add
inc
testb
add
in
add
push
fs
enter
orb
test
dec
or
adc
fmuls
nop
push
enter
or
test
adc
pop
rorb
scas
nop
push
enter
adc
or
adc
or
dec
pop
call
enter
push
scas
nop
sbb
pop
jl
jns
mov
and
aam
mov
sub
sub
sub
cmp
and
hlt
xor
scas
mov
aaa
push
and
xor
aaa
sti
movsb
cmp
sub
adc
and
nop
push
pop
aas
dec
inc
inc
jb
or
leave
sub
les
sub
inc
sbb
popa
mov
dec
in
repnz
dec
nop
push
enter
xchg
push
test
push
push
adc
push
enter
and
sbb
dec
pop
and
xchg
sub
inc
jl
ret
adc
pop
popa
pop
aam
sti
xchg
popa
or
mov
sub
adc
push
cld
imul
cmp
subl
inc
push
xchg
push
test
jns
mov
sub
adc
jge
nop
push
enter
cmpb
test
repnz
mov
fadds
outsl
xchg
mov
and
or
mov
add
inc
repnz
dec
pop
popa
push
mov
xchg
jns
mov
sub
in
repnz
enter
xor
sbb
cld
mov
inc
bnd
sbb
scas
nop
test
or
enter
xchg
sub
adc
pop
and
clc
mov
mov
jns
mov
inc
jb
addr16
sarb
nop
mov
jns
mov
ret
repnz
mov
enter
hlt
enter
and
or
mov
sub
adc
aam
nop
push
enter
fsub
fnstcw
cld
leave
repnz
mov
push
fadds
ret
and
or
out
adc
call
sub
loopne
pusha
out
push
pop
and
lock
or
dec
hlt
and
push
fadds
clc
inc
pop
and
or
mov
adc
add
add
insb
and
hlt
fsubrl
aaa
scas
nop
push
enter
push
sub
mov
or
or
jnp
sbb
or
mov
mov
pop
and
les
scas
test
mov
mov
mov
inc
bnd
sbb
mov
fistps
and
lock
aaa
and
and
in
shrb
adc
cmpsb
inc
sub
sub
sbb
sbb
nop
xor
xor
or
nop
fcoml
adc
sub
adc
dec
scas
nop
push
in
dec
subl
sbb
flds
mov
aaa
in
repnz
nop
aam
int3
inc
enter
mov
scas
nop
push
les
or
sbb
dec
adc
lods
inc
mov
scas
nop
and
push
mov
push
rclb
adc
js
popa
add
sub
inc
pop
mov
pop
sub
insb
pop
popa
sbb
arpl
adc
and
and
or
or
push
enter
in
inc
pop
and
or
mov
sub
adc
jnp
nop
push
enter
jbe
jle
inc
pop
and
inc
xor
jns
jl
push
adc
and
je
test
nop
data16
or
ret
sbb
inc
and
mov
ret
adcb
adc
mov
loop
inc
add
mov
sub
xchg
xchg
add
jl
mov
push
cmp
arpl
dec
rolb
mov
sub
adc
mov
mov
inc
sahf
mov
or
lcall
les
mov
or
xor
sbb
inc
and
movsb
mov
pusha
or
ret
ficoms
pop
inc
push
inc
push
dec
mov
fs
je
mov
mov
inc
es
sbb
adcl
cmp
and
jb
push
enter
js
xchg
or
adc
orb
pop
das
leave
orb
and
xor
sbb
pop
pop
xchg
xchg
jg
cltd
inc
dec
push
stos
fwait
push
addr16
adc
push
and
mov
pop
mov
and
sbb
jo
push
leave
inc
repnz
add
inc
inc
jb
in
mov
leave
push
leave
imul
xchg
xchg
push
add
leave
sub
xchg
inc
push
and
and
cmp
repnz
in
sub
enter
inc
mov
and
dec
xchg
adc
dec
xchg
inc
mov
pushf
inc
or
mov
xchg
xchg
mov
add
and
dec
xchg
sbb
bound
test
daa
cmp
in
pop
inc
dec
pop
xchg
or
out
and
sub
lahf
inc
adc
xchg
push
mov
lock
fs
and
or
mov
push
or
cmpb
roll
int3
mov
in
xchg
inc
dec
jl
pop
aam
fmul
mov
sbb
inc
fisttpll
mov
pusha
xchg
js
xlat
dec
or
and
mov
and
popa
inc
mov
push
cmp
pushf
or
cmpsl
push
mov
in
je
cmp
xchg
push
push
mov
popa
shrb
mov
pop
adc
dec
fsubl
sub
xchg
pop
adcb
or
inc
and
or
mov
stos
in
mov
repz
mov
and
sbb
mov
daa
xchg
mov
pop
add
push
ret
dec
mov
xchg
xor
add
ljmp
les
inc
inc
bound
fcoms
nop
xchg
sbb
sbb
cmp
stos
addb
jne
xchg
ret
mov
sbb
cltd
push
push
sub
sbb
lahf
lods
jle
mov
fcomps
nop
inc
or
fs
test
shlb
insb
insb
insb
inc
ds
add
push
mov
inc
push
push
stc
movsb
mov
or
add
lahf
dec
xor
pusha
pusha
mov
adc
cmp
jg
add
adc
pushf
dec
adc
jl
mov
movsb
adc
xor
inc
push
push
cwtl
adc
cmp
testb
inc
mov
or
adc
xchg
add
into
daa
xchg
mov
xchg
pop
fbld
lahf
inc
inc
lahf
sub
leave
nop
nop
mov
mov
xchg
xchg
mov
mov
mov
cltd
or
js
push
mov
sub
orl
pop
inc
dec
arpl
add
push
data16
popa
outsb
or
push
mov
inc
jb
out
nop
add
push
je
mov
mov
jmp
imul
and
add
gs
popa
sub
jne
addb
xchg
cmp
xor
xchg
sbbl
adc
dec
inc
push
hlt
xor
imul
adc
or
add
xchg
push
inc
jnp
imul
js
add
imul
mov
cmp
call
dec
push
pop
push
dec
dec
dec
pop
push
das
enter
insl
jo
adc
inc
jns
jne
or
push
rcll
dec
mov
ret
jo
adc
mov
jb
sbb
jne
jbe
mov
jns
je
popaw
arpl
js
jge
mov
ds
push
cmp
movl
mov
or
and
inc
or
jo
xor
push
dec
scas
dec
push
push
hlt
pop
add
pop
add
and
stos
insb
outsl
addr16
enter
lahf
and
and
jl
jns
add
mov
push
je
shll
jle
cmp
lcall
mov
push
push
je
les
push
ret
push
sub
imul
mov
mov
roll
test
mov
lock
jp
lods
mov
sub
pusha
cmp
jo
pop
pop
popa
push
inc
or
add
or
add
add
sbb
dec
loopne
mov
add
add
add
stc
mov
adc
inc
or
add
add
frstor
add
add
imul
adc
outsl
pusha
pop
push
add
mov
sub
pop
clc
pop
fiaddl
je
fs
daa
insb
mov
jno
icebp
js
scas
fadds
adc
inc
pusha
cs
or
cmp
add
jmp
mov
arpl
push
xor
cwtl
ret
loopne
mov
add
jge
cmp
cmp
add
add
add
cmp
add
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
