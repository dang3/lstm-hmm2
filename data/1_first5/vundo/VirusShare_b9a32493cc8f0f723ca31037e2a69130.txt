jne
dec
add
add
insb
add
add
je
add
add
jb
popa
add
add
outsb
add
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
popa
add
add
outsb
add
add
je
imul
push
add
je
insb
add
add
dec
add
je
push
add
popa
add
imul
add
add
add
jne
je
je
outsl
add
inc
add
add
jb
outsb
add
je
add
popa
add
add
add
outsb
add
outsl
add
imul
outsl
add
add
add
dec
add
data16
push
add
js
je
add
add
inc
add
je
je
outsl
add
dec
add
add
je
add
inc
add
je
je
outsl
add
inc
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
dec
add
insb
add
add
je
add
dec
add
popa
add
je
imul
push
add
je
insb
add
push
add
js
je
add
inc
add
je
je
outsl
add
push
add
js
je
add
add
inc
add
popa
add
push
add
js
je
add
add
inc
add
je
je
outsl
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
inc
add
arpl
add
add
add
imul
add
je
push
add
js
je
add
dec
add
insb
add
add
je
add
inc
add
jo
push
add
jb
imul
add
popa
add
add
add
add
outsb
add
arpl
je
imul
and
sbb
jne
inc
sti
inc
repnz
add
or
add
push
or
pop
add
add
xor
cwtl
add
add
movsl
add
pop
add
pop
add
sub
cwtl
add
add
aad
roll
add
add
add
add
add
add
add
add
add
push
add
push
add
add
add
add
add
cwtl
add
mov
add
inc
add
cmp
pop
add
fadds
cwtl
add
add
add
cmp
jb
or
cwtl
add
fadds
sub
inc
add
add
and
add
cwtl
add
roll
push
add
add
aad
xchg
add
xchg
add
add
add
pop
add
add
add
add
add
or
add
add
add
add
popa
add
add
add
dec
add
add
sbb
dec
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
cwtl
add
add
lea
and
addl
cwtl
add
add
add
add
add
add
add
add
add
add
movsl
add
add
add
add
add
mov
add
add
add
hlt
add
data16
add
add
add
add
adc
dec
add
inc
add
add
movsl
add
add
loope
or
aas
add
add
add
add
add
add
cwtl
add
add
add
data16
inc
add
add
add
insl
add
add
add
push
add
pop
add
add
add
add
add
add
cwtl
add
add
add
add
ret
pop
add
test
sbb
add
add
add
add
add
add
add
add
add
add
cwtl
add
add
lea
sbb
jno
cwtl
add
add
roll
xchg
add
inc
add
add
add
push
add
add
add
add
add
add
int
adc
iret
add
add
add
roll
add
cltd
add
add
add
cwtl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
lea
dec
add
add
add
add
add
add
pop
add
imul
add
or
add
add
aas
add
add
push
add
dec
add
add
add
add
add
add
cwtl
add
add
add
add
add
add
add
cmp
cwtl
add
insl
add
add
cwtl
add
add
add
add
add
add
adc
and
cwtl
add
add
add
data16
inc
add
add
add
add
add
add
add
add
add
add
add
imul
int
popa
add
faddl
cwtl
add
add
mov
roll
add
add
add
test
jne
mov
add
add
add
dec
add
aad
popa
add
add
add
add
add
add
jbe
mov
add
add
add
add
scas
rol
stos
xchg
cmp
dec
mov
arpl
cmp
jle
dec
mov
mov
dec
shlb
jb
sub
xor
mov
mov
push
rcrl
xlat
sub
ds
mov
sub
mov
in
dec
fcmovnbe
or
je
inc
cltd
fldt
loopne
pop
jo
jnp
push
jne
std
push
pop
test
ror
xor
add
std
imul
hlt
dec
mov
add
xor
mov
dec
lret
sti
push
and
jg
popa
mov
and
fcomps
out
fdivs
popa
jmp
adc
push
xor
test
mov
test
aas
mov
xor
les
lds
cld
sbb
out
xchg
push
test
test
das
pusha
mov
dec
adc
out
dec
sub
adcb
jle
sbb
ret
movl
scas
fldt
push
mov
cmp
mov
and
or
cltd
movsl
out
cmc
push
clc
sub
repz
dec
ret
les
or
push
data16
mov
jl
popa
sbb
inc
popa
sub
stc
dec
lret
sub
scas
jl
lods
sbb
push
repnz
aad
cmp
push
add
pusha
je
mov
inc
cwtl
jg
aam
mov
xor
push
pop
mov
push
sub
data16
int
xchg
ds
and
pop
stos
add
dec
adc
insl
scas
rsm
call
sbb
push
xor
xlat
xorb
mov
fstps
movsb
mov
popa
std
lret
dec
outsl
add
pop
call
mov
xor
fisubs
aaa
data16
mov
xchg
cmp
push
jl
push
jb
mov
push
mov
add
or
aad
mov
outsb
cmp
mov
insl
test
jbe
lcall
lahf
jle
fldcw
xor
cmp
inc
dec
lods
cli
add
ret
mov
and
insb
xor
and
aaa
shrl
pushf
xor
fistps
ret
xchg
repz
jns
lret
inc
pop
fmul
aas
sbb
sbb
enter
cmp
sub
dec
clc
loope
imul
in
xchg
insb
mov
and
shl
ret
test
int
jp
lods
mov
sahf
cmp
add
mov
ss
out
aaa
fistl
xor
test
std
inc
roll
add
mov
stc
push
int3
loopne
je
js
adc
scas
lds
fdiv
shll
cmp
add
add
add
add
rolb
add
add
push
mov
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
push
call
mov
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
pushl
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
jle
xor
add
adc
jnp
pop
jg
or
cmp
xorb
mov
xor
xor
adc
fs
sbb
sub
inc
scas
int3
mov
loopne
push
cld
in
cmc
pushf
les
pop
sbb
or
jge
insl
sbb
sub
cmp
int3
mov
popf
lret
fdivrs
iret
push
aas
xor
dec
add
jl
sub
sbb
lods
mov
das
dec
test
nop
leave
or
pop
mov
stc
mov
and
ss
mov
cltd
cwtl
pop
mov
in
test
push
jp
add
pushf
push
fisttps
lcall
sbb
adc
or
in
lahf
sub
popa
sbb
nop
xor
and
cmpsl
bound
lret
or
cmp
icebp
xor
mov
push
inc
inc
sbb
xor
xchg
adc
dec
lods
sub
leave
xor
dec
jl
cmp
or
jg
pop
fisttpll
jnp
xchg
jmp
and
aam
in
xor
add
add
outsb
sbb
sub
cmp
int3
lods
fcompl
in
pushf
les
sbb
add
jne
push
push
testb
stc
mov
sub
popa
or
jl
pusha
sbb
inc
adc
xchg
and
aam
dec
or
adc
push
adc
sbb
je
inc
sub
cmp
int3
mov
test
xchg
cld
in
hlt
pushf
les
pop
add
adc
fs
sbb
sub
cmp
int3
mov
test
xchg
cld
in
hlt
pushf
les
xor
cmpl
aad
push
cmpsb
sub
stos
sub
out
loop
gs
lea
push
adc
mov
dec
insl
or
mov
adc
insl
or
mov
imul
and
leave
sbbb
sub
fdiv
mov
sbb
adc
push
movsb
mov
add
adc
decb
adc
jne
icebp
inc
xchg
push
jmp
inc
mov
push
xor
cmp
fsubp
inc
fwait
lods
into
movsb
rcrb
mov
mov
sti
push
mov
mov
sbb
xchg
inc
sbb
insl
imul
arpl
fmul
nop
insb
sbbb
adc
mov
jae
cmc
sbb
mov
mov
and
inc
setne
adc
inc
jle
cmpb
cwtl
stc
popf
adc
lods
call
stc
test
or
push
adc
mov
mov
mull
orl
fidivl
jns
or
xchg
stc
sbb
cwtl
addr16
xor
adc
stc
sbb
ds
repz
jl
push
sbbl
push
jecxz
jb
sarl
shlb
sbb
lods
ja
inc
cmp
and
ret
mov
repnz
adc
test
dec
mov
sbb
mov
insl
stc
stos
jp
mov
jmp
pusha
and
xor
jno
mov
and
and
push
ljmp
mov
pop
pop
add
pop
dec
adc
jnp
scas
and
adc
maskmovq
idivl
cmp
xchg
std
subb
sti
fisubs
sub
cmp
push
adc
mov
aam
mov
unpckhps
mov
fists
inc
jg
mov
ljmp
aas
add
mov
nop
repz
and
xor
gs
int
cld
xor
out
movaps
insb
add
outsb
filds
xor
jg
push
mov
mov
lods
or
lock
mov
add
adc
je
daa
jmp
push
aas
mov
scas
mov
vphadduwq
sub
out
jno
adc
ds
out
xchg
subl
mov
cmp
mov
cmp
fstpl
mov
ficoms
push
or
iret
ret
fwait
mov
mov
cltd
fwait
in
cmp
mov
arpl
ret
push
lods
mov
cmp
jl
enter
mov
mov
and
push
insl
xor
sub
leave
sarl
xor
sub
nop
mov
loopne
loop
mov
rcl
xchg
adc
loope
and
into
mov
enter
pop
movnti
in
in
lds
aam
iret
repz
ljmp
xchg
jo
mov
push
jecxz
sub
adc
jge
jbe
inc
push
mov
pusha
pop
adc
cmp
cwtl
and
xor
icebp
cltd
inc
add
mov
shrb
pusha
cmp
aad
lret
movsl
xor
and
dec
pop
test
mov
xor
adc
dec
stos
cmpsb
popa
cs
push
movsbl
cmc
sbb
movsb
cmp
lds
inc
xchg
push
out
pop
pop
push
sbb
lock
sub
imul
xor
and
rolb
ljmp
enter
lret
jl
int3
xchg
adc
xor
mov
int3
arpl
cmpsl
pop
mov
jbe
out
test
or
repz
jae
jne
add
xchg
push
push
push
jb
or
ss
fidivs
rolb
shll
cltd
loop
bound
sti
jmp
out
mov
lahf
rorb
nop
jmp
add
push
shll
cmpsl
mov
es
mov
jnp
mov
and
mov
jno
cmp
xchg
mov
cmp
add
insb
js
rorb
sub
jne
fxch
pop
add
pusha
addr16
fcmovb
pop
xor
sbb
rcll
sbb
in
sahf
clc
xor
push
adc
sbb
loop
and
sub
dec
je
push
pop
inc
fnstsw
or
jmp
xor
mov
mov
je
mov
clc
lods
jno
addr16
pop
sbb
rclb
aaa
xchg
movsb
jbe
inc
inc
imul
cltd
or
popf
or
sbb
movsb
pop
push
push
fnsave
cmp
pop
mov
loop
jp
cmp
add
xchg
mov
imul
push
inc
mov
aaa
dec
xchg
mov
push
pop
jmp
pop
in
jbe
je
dec
xor
pop
mov
jle
aam
and
cwtl
stos
rep
scas
insl
sbb
sti
inc
inc
mov
jge
xlat
push
xchg
and
fiaddl
pop
subb
inc
aaa
pop
sbbb
push
repnz
lds
popl
lock
leave
sahf
or
xchg
test
addr16
cld
imul
mov
out
xchg
loope
inc
lahf
mov
adc
dec
mul
gs
mov
pop
xor
outsl
mov
xor
inc
test
push
cmp
push
es
iret
outsl
daa
inc
jg
jge
xchg
aas
fidivrs
repz
jmp
rol
mov
jp
bound
dec
repnz
divb
mov
ret
sbb
loop
push
iret
rcrl
xchg
sbb
mov
add
pop
and
imul
push
mov
nop
insb
mov
fucomp
aad
mov
xchg
rcl
subl
inc
pop
cmpsl
das
fistl
add
jbe
mov
push
insb
sbb
in
aas
gs
cld
inc
inc
push
pushl
sarb
mov
pusha
pop
sbb
cld
xchg
mov
cmp
mov
popa
xor
dec
aam
adc
sub
inc
movsl
leave
xor
fwait
divb
xor
std
mov
test
cli
sbb
push
mov
add
pop
pop
movsb
in
popa
cld
sahf
daa
scas
vpsubsb
push
notl
jnp
das
push
pop
pop
pop
inc
mov
xchg
les
std
push
push
mov
jae
mov
mov
lods
cmp
lret
jns
mov
ret
and
in
lret
ljmp
adc
sbb
daa
lds
mov
stc
push
loop
pop
fdivl
filds
jno
jnp
inc
adc
xchg
fisttpl
mov
test
cmpsb
fistpll
jae
xchg
repnz
jecxz
lods
mov
repnz
and
cmpb
cmpsb
jnp
dec
cltd
mov
or
adc
addr16
or
mov
xor
daa
dec
sbb
push
clc
xchg
xor
int3
ds
and
movsb
adc
stos
xor
sbb
mov
call
mov
insl
mov
push
stos
push
jmp
jb
pop
les
dec
jnp
and
or
push
cld
inc
jns
sbb
xchg
dec
punpckhbw
or
setp
ds
and
jno
out
or
outsl
mov
jle
je
shll
push
je
in
cmp
out
cmpsb
pop
lods
sbb
sbb
push
inc
jno
outsl
adc
fnstsw
push
xorb
dec
mov
in
xor
and
popl
cs
or
std
adc
cmp
testb
addr16
sub
cltd
in
mov
aam
inc
sub
mov
push
pop
mov
ljmp
fldl
sub
loope
mov
pop
mov
icebp
rcrb
pop
incb
mov
cmpsb
bound
push
mov
lea
es
std
pop
mov
insl
mov
push
mov
addr16
and
aam
fdivs
sbb
insb
lret
xor
cltd
lock
test
in
lods
xchg
jb
push
or
sbb
xor
outsb
xor
stos
rcll
mov
mov
aaa
pop
cmp
add
dec
aaa
pop
sbb
or
cmp
out
adc
imul
pop
out
adc
shl
jnp
ds
push
in
adc
and
loopne
jge
jmp
enter
enter
pushf
test
inc
inc
sub
push
pop
mov
add
jg
or
lahf
shll
mov
inc
adc
sahf
xor
mov
cs
xchg
push
xor
push
data16
adc
push
jl
loop
ljmp
call
pop
pop
fsubr
mov
or
add
fcmovnb
popf
adc
dec
xchg
push
mov
std
mov
nop
or
int3
out
mov
jge
mov
cmc
xor
or
pushf
stos
ret
ljmp
ljmp
mov
mov
inc
call
ficoms
mov
adc
sbb
aas
out
scas
aad
aam
out
cli
pop
cmpsl
mov
scas
mulb
pop
in
push
inc
mov
notl
inc
sarl
subl
xchg
out
loopne
or
aam
mov
xchg
mov
mov
cld
dec
push
pop
mov
inc
not
popf
popa
inc
pop
out
scas
loopne
sub
bound
jb
mov
test
pop
xchg
adc
scas
adc
call
ret
stos
shll
jmp
cmc
fistpll
popl
shrb
call
or
push
dec
lods
pushf
ficoms
test
cwtl
cmp
pop
fimull
push
gs
pop
cmp
or
cmp
add
xor
shlb
xor
jne
sbbb
pop
scas
scas
cmp
jecxz
in
cmp
xchg
xor
into
dec
xchg
inc
sub
jno
jl
jmp
sahf
dec
adc
mov
cmp
popa
xchg
and
out
clc
jns
mov
xchg
mov
and
adcb
fistl
push
and
dec
mov
cli
fs
dec
push
mov
xor
xchg
mov
out
pop
xor
decb
in
mov
xchg
pop
or
fwait
scas
fists
enter
lret
and
xor
ret
imul
pop
enter
andb
jno
xchg
adc
sbb
xlat
jl
xchg
pop
ja
cwtl
xor
push
movsb
clc
fimull
xor
inc
mov
fwait
into
xchg
push
sbb
push
mov
call
test
cltd
push
out
inc
fisubrl
pusha
dec
test
push
or
sbb
imul
lods
xchg
mov
push
push
fdivs
adc
xchg
and
fimuls
push
sbb
mov
mov
data16
inc
jl
scas
sub
cmp
out
sbb
ret
inc
lock
insb
pusha
lds
jmp
sub
or
popl
lahf
xchg
push
cmpsb
fs
xchg
pushf
xchg
fcompl
outsl
sub
pop
or
cmpsb
dec
aas
fucomi
repnz
fld1
adc
push
pop
adc
add
lret
dec
adc
into
xchg
cmovg
cmc
pop
lock
insl
movsb
mov
inc
ret
filds
aam
dec
xchg
dec
xchg
pop
jbe
jge
ficoml
cs
inc
ret
scas
xor
cwtl
movsl
js
enter
lahf
sub
xchg
adc
cltd
xor
mov
les
std
jle
add
lret
adc
jmp
ds
insl
scas
stc
xchg
jns
repnz
stos
sbb
fs
and
mov
sahf
add
sub
adc
fdivrl
adcb
adc
dec
push
jne
inc
jb
daa
stc
lods
test
test
cltd
mov
dec
mov
aad
out
daa
adc
sti
nop
in
js
mov
pop
xchg
pop
sbb
mov
adc
and
cmpl
cli
adc
jno
jmp
jbe
cmpsl
lcall
pop
call
jg
stc
sahf
adc
insl
sub
rcrl
or
dec
xor
outsb
lds
stos
stc
sub
inc
rorb
in
jbe
sub
pop
xchg
and
dec
xchg
cltd
xchg
adcb
xchg
sbb
inc
add
lret
push
into
lahf
insb
sub
stos
push
cmp
insl
iret
out
mov
inc
adc
flds
push
dec
popa
fiadds
es
clc
dec
out
sbb
push
iret
je
lods
mov
cltd
int3
xchg
push
jge
sarl
scas
mov
fisubrs
mov
aam
movb
sahf
push
sti
ficompl
pop
push
jl
xchg
xchg
movsl
movsb
lret
ljmp
pop
aam
push
fmulp
or
push
fsts
ret
adc
mov
dec
jmp
in
popf
dec
imull
fcmovnb
push
mov
loope
lock
addr16
pop
push
jne
fnsave
inc
ljmp
push
movsl
mov
repz
pop
lock
mov
pop
je
adc
push
into
xor
lds
push
mov
mov
fwait
out
cmpsb
loopne
lret
popa
daa
xor
sub
sub
outsb
inc
outsl
aam
pop
orl
test
das
xchg
stc
xchg
xor
add
mov
inc
add
push
push
push
andl
or
movsl
ret
pop
mov
sbb
push
cltd
jae
ss
repz
cltd
out
daa
shll
enter
push
fs
mov
xor
lock
cmp
mov
add
test
mov
dec
inc
es
push
les
add
cmpl
lret
sbb
push
arpl
dec
lock
mov
ret
ds
out
repz
pop
testb
movsb
in
pop
dec
clc
jle
or
sub
in
in
ljmp
push
jo
or
inc
in
test
inc
dec
pop
fisubrs
imul
int
je
in
push
cmp
fwait
dec
or
jp
fs
loope
scas
inc
cld
daa
adc
push
pop
in
mov
mov
push
stos
aam
mov
pop
jl
roll
jecxz
sbb
insb
mov
add
sub
icebp
outsb
mov
popl
lcall
and
insl
jb
loopne
xor
mov
xchg
clc
and
mov
and
sub
jae
add
push
cltd
lods
xchg
cmp
test
lock
mov
fwait
aaa
or
andb
pop
je
out
adc
mov
lock
push
jmp
push
cmpsb
lods
xor
inc
sbb
fsubrl
push
dec
sbb
imul
dec
push
or
scas
xchg
pop
cmp
or
jl
sarl
dec
fwait
into
xlat
sbb
aam
or
into
out
xor
xchg
jge
in
mov
xorb
add
jo
add
mov
lret
popf
jp
sti
mov
rcll
scas
jle
dec
cmp
sub
mov
mov
popf
inc
inc
cld
arpl
xchg
jmp
jne
adc
and
or
dec
sub
jno
xlat
add
push
sti
pop
jl
add
faddp
aas
jae
testb
into
aas
mov
xor
xorl
daa
loope
int
pop
in
xor
push
push
sub
lret
push
scas
aas
jg
mov
sbbb
pop
jns
movsl
lods
pop
ss
and
dec
f2xm1
mov
xor
cmp
dec
das
mov
push
pushfw
lret
andl
inc
mov
mov
mov
fcmovnu
fists
dec
mov
or
xchg
loope
mov
add
push
pop
fcompl
loop
lea
in
es
adc
dec
mov
cmp
popa
aam
sahf
mov
mov
jle
inc
rclb
jg
roll
mov
js
out
es
jp
pop
loop
xchg
inc
mov
bound
ret
pop
in
pop
lods
icebp
popf
in
xor
sahf
adc
fwait
adc
mov
call
pop
cmp
cld
addr16
xchg
enter
mov
aas
dec
leave
mov
test
test
jnp,pn
pop
add
pop
lock
push
lock
or
push
popa
sbb
mov
jo
sub
or
cli
sbb
adc
add
sub
dec
push
push
andl
xchg
or
sub
test
xor
enter
mov
pop
mov
sub
add
insb
pop
sbbb
sbb
xor
sbb
xor
inc
mov
dec
pushf
fsubrs
ss
inc
test
lds
out
imul
lds
lods
outsb
mov
cmp
ret
or
les
insl
sub
add
addr16
mov
ds
das
lods
int
jns
xor
cmp
push
xor
lods
shlb
pop
jge
insl
arpl
arpl
les
jecxz
cwtl
push
fistpl
popa
pop
and
jno
push
add
leave
jo
in
add
sub
jno
push
push
arpl
cmp
push
ja
adc
sub
repz
xor
fmul
sub
mov
mov
lock
adc
mov
fdivl
mov
mov
das
fimull
jl
pop
add
enter
pop
fldcw
ret
call
adc
gs
mov
arpl
and
icebp
enter
scas
pop
push
inc
adc
xchg
rcll
jg
mov
adc
and
cli
add
dec
cmpsb
lock
push
fcompl
add
loop
test
ljmp
test
sahf
and
xchg
add
jecxz
adc
dec
dec
add
inc
dec
xor
or
xchg
adc
mov
lea
stos
xlat
test
test
sti
std
push
xchg
xor
aaa
mov
imul
sbb
movsb
je
pop
dec
enter
dec
lahf
jl
cmp
outsb
es
adc
sbb
and
sub
inc
ret
arpl
xchg
inc
xchg
mov
add
enter
sub
pop
jg
dec
dec
fmul
adc
adc
jno
pop
and
pop
sbb
sub
xor
out
movsl
enter
xor
push
movsb
in
add
sub
sub
cmp
out
pop
repz
inc
rcll
dec
sub
xchg
push
andb
inc
jg
mov
and
loop
fwait
add
lahf
jecxz
mov
xchg
xchg
mov
shr
sarb
rorb
jle
push
loopne
shrl
and
lods
cwtl
les
stos
adc
jmp
out
cmp
cs
call
inc
test
stos
loop
push
push
les
adc
jg
xor
push
mov
push
mov
fwait
jb
cmpsl
lods
xchg
jno
xchg
dec
ds
mov
femms
jl
fwait
jbe
rclb
adc
fdivrs
lock
push
notl
shl
sub
mov
mov
jo
add
arpl
leave
ret
in
out
mov
sbb
jae
mov
int3
jbe
adc
pop
or
int
xlat
dec
aam
jae
setno
add
inc
adc
fcomps
fdiv
push
and
jae
jle
jl
lcall
scas
xchg
sar
fwait
xor
in
scas
jecxz
mov
jbe
sarl
cmp
push
mov
rorb
stc
stc
sti
add
or
lods
jecxz
cltd
xchg
popa
mov
ret
sub
popf
clc
adc
xor
push
rclb
enter
xor
clc
pop
out
stc
cld
xor
fadds
add
adc
lcall
sbb
push
movsb
sub
pop
pop
cltd
fdivl
add
push
iret
roll
clc
mov
icebp
ret
xor
imull
xchg
outsb
adc
imul
sbb
jb
pop
mov
ja
sbb
mov
movsl
and
fiadds
sbb
push
subl
xchg
out
jl
shlb
ljmp
inc
mov
xchg
mov
addps
rcr
or
mov
add
stos
popf
lea
je
xor
adc
cmpsb
jbe
aas
in
aam
test
sbb
mov
adc
jnp
in
mov
pop
mov
xchg
imul
lods
aaa
cltd
sbb
adc
repz
jmp
jns
push
push
imul
mov
arpl
mov
pop
inc
vorps
loope
jge
mov
push
sbb
xchg
jbe
outsl
aam
es
add
xor
and
nop
dec
sarl
sub
sub
xor
lock
pop
test
lods
jmp
lcall
in
outsl
xchg
or
addr16
dec
dec
sar
cwtl
sub
dec
out
inc
xor
outsl
pop
inc
and
push
aad
out
dec
dec
pop
sahf
fs
lahf
jnp
mov
imul
fisubrl
dec
jne
pop
sbb
rcrl
std
lcall
add
sbb
fdiv
insb
inc
int3
nop
addb
cs
rcl
mov
cmp
movntps
cmc
cmpsl
test
sub
mov
xor
pop
mov
push
mov
inc
mov
or
adc
hlt
xchg
adc
scas
subb
jnp
add
or
and
enter
in
xchg
xchg
stos
jo
add
aas
stos
cmpb
fidivl
out
pop
ret
cmpsb
lods
push
mov
dec
pop
adc
pop
and
jl
or
sbb
sub
cmp
int3
mov
test
xchg
cld
in
hlt
pushf
les
pop
add
adc
fs
sbb
sub
cmp
int3
mov
test
xchg
cld
in
hlt
pushf
les
pop
add
adc
fs
sbb
sub
cmp
int3
mov
sub
cld
in
lock
les
pop
xor
fs
sbb
sub
cmp
int3
dec
jbe
in
xchg
mov
push
sub
jl
insb
or
test
das
jne
or
leave
mov
fsubr
mov
fisttpll
pop
sbb
cmp
sbb
js
lock
int3
in
into
std
scas
int
fisttpll
inc
sbb
xor
add
push
lods
cld
mov
mov
in
out
mov
pop
xor
sub
hlt
pop
in
mov
outsb
jecxz
es
iret
loope
imul
js
mov
js
pop
sbb
dec
jb
jecxz
repz
inc
adc
mov
xor
faddl
repnz
test
cmp
add
adc
testl
lods
cld
in
in
cmp
leave
ljmp
pop
insl
cmp
cmp
push
jnp
mov
jne
or
arpl
pushf
sar
ret
mov
jne
dec
adc
lds
enter
popf
jne
mov
and
aad
cmp
lea
fwait
pop
push
xchg
imul
xchg
std
dec
int3
sahf
fmull
or
cmp
sub
sbb
adc
lds
mov
xchg
lea
jns
popa
cmp
cs
jo
imul
fdivr
test
mov
adc
push
and
cmp
bound
and
mov
mov
mov
jl
insb
outsb
cmp
sub
sbb
or
cld
mov
int3
in
mov
fisttpll
pop
sbb
sub
sbb
or
cld
mov
int3
in
mov
fisttpll
fisttpl
push
mov
out
hlt
sti
mov
mov
and
iret
into
outsb
rsqrtps
pop
loopne
repz
daa
aam
mull
sbb
mov
jl
mov
mov
mov
jecxz
push
add
sbb
lahf
or
ja
jmp
sbb
int
cmp
int
sub
push
jo
das
pop
int
push
mov
inc
mov
xchg
dec
lret
sub
adc
and
inc
mov
ss
pop
and
xchg
fiadds
jnp
nop
ljmp
adc
cmp
jae
and
subl
pop
jb
or
mov
pop
mov
jecxz
sbb
mov
mov
xchg
xchg
adc
sub
stc
fisubs
mov
lahf
xchg
adc
aaa
leave
dec
or
xor
cld
gs
shl
aam
inc
sub
into
inc
and
mov
cld
outsl
stos
mov
xlat
insl
std
fwait
jle
in
adcb
xchg
pop
fldcw
jp
mov
pop
mov
push
ret
arpl
sbb
aaa
mov
mov
test
fcmovne
adcl
pop
mov
sbb
daa
pusha
jbe
mov
aaa
mov
ljmp
fwait
loop
push
inc
icebp
popa
inc
stos
inc
nop
sub
or
add
xchg
lea
mov
pop
mov
push
lahf
mov
or
test
jecxz
cmpsl
leave
or
dec
int
insb
gs
ret
cmp
dec
ret
daa
and
stos
jne
mov
adc
mov
sbb
adc
ret
out
dec
mov
or
es
sub
xchg
inc
mov
nop
xchg
cmp
sub
into
adc
jns
divl
or
out
cwtl
xor
mov
ret
cwtl
in
fsubrp
out
lds
xchg
and
push
fsubl
and
popf
in
ja
jge
cmp
mov
jg
mov
es
cmc
shrb
sub
decb
gs
stos
cmp
or
push
xor
xor
je
jle
mov
pop
sub
dec
pop
jl
mov
and
mov
mov
inc
sbb
leave
push
sbb
mov
mov
jno
cmpsl
into
inc
sub
mov
call
push
pop
jno
pushf
pop
cmp
sti
sub
xchg
inc
stos
and
bound
cmp
leave
jnp
popf
sub
cmp
ret
arpl
xor
sub
add
cmpsb
xor
shr
and
das
inc
xchg
push
mov
cmp
les
insb
cs
ss
lahf
imul
ret
cmpsb
mov
aad
jecxz
daa
scas
mov
shlb
adc
sub
ret
cmpsl
jecxz
insb
loop
mov
rol
push
iret
movsl
xor
jae
adc
pop
push
inc
insb
std
mov
dec
sti
dec
ret
pop
lcall
jns
das
addb
cmc
test
aad
pop
scas
imul
cvtpi2ps
inc
ds
stc
inc
mov
movsl
bound
test
cmpsl
js
inc
jae
ds
push
notl
cld
sbb
nop
cmp
call
scas
pop
xchg
sbb
inc
ret
icebp
inc
jmp
bound
filds
sub
jnp
int
clc
mov
int
xchg
repz
je
mov
jbe
or
adc
popa
std
and
call
std
mov
sub
fnstsw
test
stc
xchg
xorb
mov
neg
pushf
popa
sub
mov
mov
insb
mov
or
ja
jne
loope
xchg
inc
mov
pop
int3
mov
dec
movsl
and
mov
push
add
movsb
data16
xor
and
insl
jl
movsl
out
loop
test
clc
pop
push
loop
jnp
outsb
les
add
fnstcw
cs
inc
mov
push
jecxz
out
mov
leave
jb
push
lret
jo
mov
jmp
mov
dec
mov
jp
jae
push
into
das
mov
add
lahf
and
sub
lret
test
fcomp
and
aaa
xchg
and
inc
pushf
jb
fsts
sub
and
or
adc
xchg
dec
sbb
dec
in
xchg
mov
xchg
loopne
shll
test
repz
jnp
xchg
xorl
lret
int3
adc
and
push
addr16
xchg
cmp
dec
dec
jbe
lea
adc
filds
xor
sub
xchg
gs
outsl
nop
xchg
andl
pop
and
mov
xor
push
dec
pop
pop
sub
std
std
cli
adc
cs
in
mov
and
and
mov
inc
mov
pop
mov
in
pushl
xor
cmp
adc
fcoms
push
arpl
dec
test
mov
xlat
dec
inc
in
jmp
fnstsw
shlb
sub
sbb
insl
sub
cli
xchg
mov
dec
jecxz
jbe
cli
add
dec
ds
xor
sbb
push
cmpsb
je
or
ret
shrl
int
rorl
lea
cmp
jg
inc
ror
mov
divb
pusha
push
adc
pop
js
ret
call
mov
push
daa
jb
mov
mov
mov
mov
shll
imul
je
mov
push
scas
test
jle
sbb
cmpsb
or
shlb
inc
xor
and
pop
pop
xchg
movsl
mov
test
out
stos
dec
pop
adc
arpl
outsb
or
push
sbb
adc
push
sub
xor
mov
mov
nop
fdivl
dec
inc
out
cwtl
push
and
and
iret
jge
pop
out
fdivrl
mov
popa
scas
std
inc
nop
jns
mov
pop
icebp
fbstp
movb
mov
jbe
std
push
push
and
cmp
adc
int3
inc
dec
inc
daa
mov
js
and
test
mov
dec
out
xchg
or
addb
jecxz
dec
push
fisubl
dec
icebp
push
and
jmp
mov
cmp
adc
jl
dec
dec
pop
repnz
adc
pop
orb
loope
cmp
mov
sbb
and
scas
sub
movb
push
push
bound
movsb
xor
mov
dec
call
sub
imul
cmc
mov
xor
movsb
lock
adc
xlat
xor
jl
mov
xchg
lcall
jg
xchg
dec
fsubs
push
pop
mov
pushf
jmp
xchg
sub
sbb
add
xchg
xorl
cmp
inc
mov
fldenv
jnp
add
std
adc
jg
test
cli
outsl
mov
mov
ljmp
fimuls
fwait
mov
push
sti
stos
mov
adc
mov
enter
sub
mov
mov
js
outsb
dec
or
addr16
pop
inc
daa
movsl
push
sahf
js
sbb
sbb
mov
mov
fcompp
jle
push
jmp
jbe
mov
dec
jp
roll
lea
loop
pop
or
mov
dec
mov
insl
ret
jl
pop
jns
call
dec
sbb
or
mov
leave
in
jnp
sub
jne
and
adc
push
shrl
adc
mov
xlat
lahf
inc
iret
je
pop
push
popf
dec
jne
and
repz
lret
out
jbe
cmp
shlb
orb
xorb
movsl
scas
xchg
inc
mov
pop
insb
ljmp
or
jae
aaa
xchg
mov
std
push
movsb
test
and
adc
add
mov
and
pop
or
mull
xor
push
mov
lock
push
movsl
fs
xor
rcrl
mov
in
fsts
and
pusha
out
cltd
or
pusha
dec
ss
push
xor
pop
push
testb
mov
das
add
sbb
gs
lods
adc
jnp
mov
pop
lret
lahf
jmp
pop
dec
push
nop
jecxz
pop
test
popf
jb
fbstp
mov
dec
mov
stc
mov
outsl
push
pop
xchg
xor
les
rclb
dec
stc
dec
push
inc
pusha
adc
fnstsw
mov
mov
ficoms
mov
add
test
add
lods
inc
mov
decl
and
cmp
scas
aad
fnstsw
jb
sub
pushf
xchg
or
loop
cmp
in
pop
rolb
in
push
push
xchg
or
jne
pop
jecxz
lods
je
stos
fisubl
inc
and
inc
scas
jns
and
jnp
faddl
mov
and
or
dec
jp
or
js
sub
push
push
cmpl
cmp
inc
stos
in
or
xchg
xchg
pop
aaa
les
lock
dec
pop
out
in
stc
fistl
or
push
pop
xchg
repnz
std
mov
mov
xorb
dec
repz
xor
add
icebp
testl
movsl
mov
inc
xor
xor
xchg
sub
pop
sbbl
negl
xor
adc
lcall
ffree
shll
fimull
rcrb
add
inc
pop
and
xchg
aas
jle
push
mov
lcall
out
adc
cmp
add
jg
push
xlat
and
inc
jecxz
pop
repnz
fsts
jo
testl
or
and
sub
cmp
test
test
push
add
sub
xor
xchg
lret
icebp
pop
mov
icebp
imul
sbb
nop
cmp
out
inc
pop
jl
pop
inc
repnz
push
outsl
add
popa
repnz
hlt
inc
adc
clc
mov
cli
push
leave
insl
fxtract
mov
push
cmpsb
xchg
fistl
mov
fldl
jno
push
testb
adc
or
addb
pop
aad
sbb
pusha
fcomi
ds
inc
xchg
sub
adc
and
test
mov
daa
cmc
mov
imul
in
sbb
xor
lods
mov
or
out
jecxz
cli
xor
add
mov
fisttps
ficoms
loopne
mov
or
xor
dec
jmp
fiadds
lret
mov
repnz
mov
mov
in
je
push
iret
sub
push
icebp
mov
test
jl
leave
xor
cmpsl
out
lret
outsb
cmpl
mov
cmpsb
scas
jae
sarb
mov
pop
aad
push
addl
jl
mov
push
sbb
es
pop
shrb
in
jo
mov
sub
jnp
ror
lods
les
js
movsb
sub
addr16
xchg
xchg
mov
xchg
hlt
in
or
shll
mov
andb
jg
xor
add
fdivrs
out
or
cmp
shll
pop
enter
inc
jg
in
sahf
aam
lock
cltd
outsb
push
fwait
les
mov
mov
push
pusha
aas
mov
outsb
lahf
inc
fst
dec
aas
test
cwtl
sub
jmp
insb
push
iret
addr16
cwtl
mov
inc
pop
loope,pn
push
test
jl
adc
push
jg
bound
dec
cmpsb
sub
cwtl
in
dec
setne
inc
test
inc
push
and
bound
addr16
in
xchg
scas
push
enter
xchg
shll
aas
loope
xchg
out
cmp
std
push
sbb
xchg
jmp
mov
xchg
mov
lahf
or
mov
faddp
ds
jne
cmpsl
je
das
fildl
or
iret
jl
jne
inc
jl
mov
fistps
pop
bound
push
shll
stos
push
in
mov
and
mov
aad
sub
sbb
jmp
dec
and
xor
xlat
inc
inc
jb
lret
test
leave
dec
icebp
imul
mov
fldenv
movsb
add
pop
dec
mov
sti
andb
sub
fildl
fnstcw
inc
pop
and
movl
mov
dec
cmp
pop
add
repz
mov
loop
xchg
xchg
sbb
push
pop
ficoms
pop
pushf
lock
insl
sub
and
mov
mov
inc
mov
push
data16
inc
stos
js
sahf
lcall
incb
lods
cwtl
psubd
popf
sbb
lret
adc
rorb
cli
ret
lea
in
jle
jbe
mov
add
fldl
sarb
int
lret
xchg
sub
call
popa
mov
inc
sahf
enter
and
mov
push
das
jmp
pop
or
push
aaa
pushf
repnz
in
daa
sbb
in
or
mov
jge
jmp
sub
push
cmp
mov
mov
in
mov
add
aaa
lcall
outsl
ret
xor
push
mov
stc
add
shll
int3
nop
in
imul
push
clc
arpl
repz
aas
loopne
les
shl
mov
push
shlb
lds
add
test
incl
lea
push
push
jb
in
push
push
cli
and
jmp
push
out
adc
mov
pushf
push
iret
lock
and
mov
inc
fildl
dec
jbe
adc
mov
xchg
stos
lret
outsb
aam
sbb
push
testl
aam
mov
adc
and
divl
shr
mov
sub
jne
sti
mov
add
mov
and
pop
pop
cmp
mov
xor
lret
lret
add
cmp
push
mov
mov
jl
adcl
pop
call
add
popa
xchg
jo
inc
add
and
lea
jle
pusha
jo
aaa
inc
mov
adc
stc
andl
out
mov
fbstp
roll
test
cmp
jno
mov
loope
xor
ss
loope
lcall
shll
aad
mov
push
ror
ret
fstpt
adc
jne
push
push
xchg
adc
or
sarl
and
stc
sbb
loopne
fisttps
mov
das
push
js
imul
cmc
mov
mov
scas
inc
xchg
xor
ljmp
subl
es
jae
lahf
pop
jle
mov
sbb
lods
mov
notb
or
pusha
push
lock
mov
xchg
push
fwait
xlat
cmp
adc
sub
lods
les
clc
mov
cld
mov
adc
push
loop
clc
pop
iret
ret
inc
cwtl
jle
jae
dec
ljmp
insl
inc
mov
jne
push
outsb
or
push
xor
dec
inc
ret
add
std
fcmovne
xor
leave
xor
sbb
xor
movsb
mov
pusha
push
dec
sti
popa
push
jmp
pop
jb
stos
out
push
fsubrs
arpl
ja
je
lahf
lods
std
pop
xor
cmp
sbbb
shrl
pop
mov
imul
adc
add
lods
jg
pop
ret
int3
cld
lods
scas
xor
add
clc
mov
ja
popf
jne
and
add
inc
enter
insb
push
out
in
or
push
dec
iret
mov
fists
mov
insl
xor
xor
roll
push
add
orb
adc
xor
daa
in
out
cli
daa
mov
mov
jecxz
lahf
shrl
mov
inc
imul
outsb
mov
les
out
fbstp
mov
shll
test
cmp
std
aam
cmpsb
xor
push
fldenv
fiadds
push
aas
int
sub
bound
cmc
add
cmp
or
loope
and
jle
enter
out
mov
rorl
push
sub
fdivl
mov
sub
adc
pop
orl
mov
or
xlat
inc
push
in
ds
xorb
fadds
movsb
dec
rclb
fisubrl
push
mov
out
jo
jo
call
push
dec
sbb
mov
pusha
loope
sub
xor
sahf
into
xor
push
fucom
push
sub
inc
or
and
in
stos
icebp
or
cli
pop
mov
arpl
sahf
mov
jp
dec
insb
sbb
lock
xor
or
repnz
shll
adc
fnstcw
adc
rclb
in
test
fwait
cmp
push
jnp
frstor
fsubr
pop
jmp
mov
insl
insb
popa
mov
pop
fisttps
or
movsb
xchg
inc
fcompl
scas
jle
pop
xlat
rcll
add
add
pop
mov
ja
cmp
das
fsubs
adc
mov
sahf
add
es
sub
fsubr
adc
xor
push
adc
fwait
mov
lock
push
rcl
mov
sbb
jnp
outsl
adc
clc
loopne
fwait
int3
inc
imull
jl
xor
lahf
outsl
out
cmpsb
stos
mov
mov
cmpsl
mov
insb
shl
dec
xchg
sbb
cmpsl
pop
sub
xchg
aad
mov
mov
xor
in
pusha
dec
inc
xor
aad
outsb
dec
xchg
mov
pcmpgtb
arpl
movsb
dec
shr
pop
repz
idivb
rcrl
iret
pop
fsubr
int
addr16
pop
cmp
xchg
std
pop
out
mov
fidivrl
lods
lret
repz
or
mov
xchg
data16
add
nop
data16
sbb
in
aaa
mov
flds
xor
adc
pusha
mov
push
push
jo
hlt
mov
jmp
shl
sti
and
shlb
lods
jl
push
gs
xchg
sahf
mov
sbb
mov
xchg
xor
add
ret
fdivl
add
cwtl
je
dec
shlb
jl
rcrb
or
js
lahf
jl
icebp
lods
fwait
push
shll
inc
loopne
in
xorb
or
sbb
xor
fsubrp
pop
sbb
xor
sub
addb
jbe
clc
adc
sub
push
bound
mov
stos
cld
jno
test
and
rcrl
xchg
popf
imul
ds
mov
sbb
or
adc
incl
outsb
push
repnz
pop
dec
mov
jecxz
lods
push
je
mov
mov
pop
or
push
js
or
test
shlb
inc
lretw
jo
xlat
adc
inc
and
fdivl
inc
lahf
lret
shr
dec
add
pop
pop
or
lea
push
pop
push
add
and
sbb
data16
cs
cwtl
sahf
mov
adc
dec
inc
jbe
les
mov
mov
cs
data16
cld
push
mov
lods
stc
es
sub
and
notb
xor
fwait
lods
loop
mov
scas
pop
add
or
sub
push
movsb
lea
dec
std
ljmp
add
xchg
dec
and
lea
add
jmp
fcomps
orl
sub
xchg
lods
out
xor
repz
icebp
ds
mov
xlat
pop
outsb
add
popa
mov
fldt
mov
icebp
hlt
movsb
lret
pop
sub
dec
xorl
ret
jne
rcl
push
fwait
pusha
mov
add
outsb
push
xchg
jne
inc
jns
ds
mov
xchg
outsl
ljmp
cmp
push
out
pusha
push
inc
cmp
add
inc
xor
inc
fcoml
fldlg2
or
outsl
adc
aam
jb
add
push
dec
adcb
lcall
pop
ljmp
adc
jle
cwtl
mov
and
popf
add
mov
popa
mov
insb
inc
lea
lds
fdivrs
pop
and
sbbl
or
xchg
lahf
lds
data16
js
sbb
ja
int
mov
fmulp
pop
fcompl
sti
ficoml
hlt
lret
mov
jle
pop
pop
fsubrs
sbb
daa
fiaddl
nop
jle
add
das
and
or
arpl
std
jbe
loopne
xor
xchg
decl
andl
iret
fistps
inc
push
ds
add
lcall
nop
cmpsl
dec
pop
dec
or
imul
push
jmp
and
outsl
in
xor
jecxz
adc
adc
push
loope
gs
dec
jg
push
inc
outsl
mov
arpl
es
sbb
xor
mov
adc
adc
push
test
js
inc
lods
scas
in
push
lea
pushw
loopne
sbb
lock
push
ss
mov
lea
clc
ret
mov
ja
xor
in
orl
mov
dec
fld
cwtl
jae
test
movsb
stos
mov
push
and
xchg
inc
decl
add
sub
mov
repnz
repnz
loope
push
xchg
xchg
xor
loop
pop
das
ljmp
sub
inc
lahf
dec
adc
outsl
lret
dec
add
loopne
and
sub
gs
jne
dec
push
lds
insb
push
pop
sbb
sub
sbb
or
cld
mov
int3
in
mov
fisttpll
pop
sbb
sub
sbb
or
cld
mov
int3
in
mov
fisttpll
pop
sbb
sub
sbb
or
cld
mov
enter
lods
int
fmull
or
sbb
sub
sbb
int3
lods
cld
mov
mov
xor
and
push
mov
sub
mov
andl
andl
andl
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
mov
lea
push
movl
movb
movl
movb
movl
movb
movb
movl
call
leave
ret
ds
mov
cmpsb
int3
fsubr
scas
ret
mov
pop
es
push
cmp
insb
jbe
data16
cld
xchg
mov
cmpsb
int3
mov
out
inc
jl
insb
sbb
push
cmp
sub
sbb
or
cld
push
in
xor
pusha
int3
mov
push
mov
inc
push
push
sub
dec
jbe
sbb
jns
or
cld
cmpsb
cwtl
repnz
subl
in
and
pop
lods
sbb
xchg
push
lds
int
xor
nop
bound
pop
int
sar
xlat
cmpsl
negl
lock
jmp
mov
sbbb
xchg
leave
pop
fmuls
jecxz
or
lret
fcom
mov
in
add
jns
mov
inc
jl
loop
sub
dec
or
sub
fcmovbe
cmp
leave
mov
inc
imul
jns
adc
fldl
mov
jae
pop
or
cmp
aaa
pop
es
rol
inc
fdivs
or
movsl
cld
xchg
mov
lret
mov
pop
mov
jl
insb
out
pop
cmp
pop
sub
sbb
dec
in
lock
repnz
in
xchg
ja
inc
add
aas
push
sub
sahf
and
mov
insl
fwait
mov
repz
mov
cmp
push
or
and
imul
cwtl
test
mov
negb
insb
ss
es
push
cmp
sub
sbb
or
cld
xchg
mov
cmpsb
int3
mov
out
push
jl
insb
ss
es
push
cmp
sub
sbb
or
cld
inc
stc
push
cs
sbb
shl
jnp
mov
flds
sbb
sbb
inc
push
sub
mov
mov
or
mov
insl
push
mov
adc
out
push
cld
mov
popf
add
iret
push
loopne
xchg
dec
push
dec
pop
mov
mov
es
cld
jmp
push
les
jb
adc
xchg
pop
cmp
jb
adc
sti
outsl
cmp
mov
adc
mov
rorl
dec
jbe
jae
iret
inc
fs
xlat
sub
jmp
dec
stc
inc
aaa
std
add
icebp
jne
inc
xchg
popa
pop
add
push
mov
sbb
cwtl
pusha
loopne
xor
adc
popa
testl
testb
dec
mov
mov
aas
push
cmpsl
or
sbb
sbb
xchg
xchg
jmp
mov
cmp
clc
cmp
test
pop
mov
je
or
dec
lods
pop
loop
mov
dec
ds
fstpl
jbe
lea
aaa
stos
mov
jge
inc
insl
xchg
out
sbb
mov
push
in
jae
fildll
push
mov
ljmp
pop
out
add
inc
out
push
and
mov
sbb
jmp
add
adc
test
mov
popa
scas
xchg
call
cmp
push
in
jne
in
xor
xchg
sahf
adc
jmp
jne
mov
loope
fcmovbe
mov
stos
cmp
clc
sahf
aaa
xchg
xor
push
jmp
sub
lds
lock
push
leave
int
das
mov
add
out
int3
imul
in
cld
test
cltd
ljmp
repz
and
cmp
pop
push
push
mov
ljmp
pop
jmp
ja
mov
mov
int3
mov
cmp
loopne
xchg
sbb
pop
add
imul
inc
dec
jns
mov
mov
call
in
test
pushf
and
sub
pop
stc
call
pushf
inc
leave
inc
jg
pushf
ss
mov
cld
test
popl
fsubs
icebp
repnz
ss
popf
sub
cli
sub
xchg
fcomip
mov
leave
inc
leave
out
jbe
test
movsl
sbb
hlt
pushf
jne
pop
inc
popf
dec
aas
xchg
lods
mov
and
or
xlat
push
xor
repnz
push
and
int
jno
or
insl
fs
mov
out
mov
sub
mov
mov
test
loope
push
lea
clc
push
repz
pop
or
sbb
cltd
ljmp
loopne
imul
dec
stc
push
stos
push
mov
aas
je
sbb
dec
mov
and
dec
repz
jne
cmp
jbe
testl
xor
push
lcall
cltd
loopne
popf
outsb
jge
in
adc
inc
and
mov
cli
pop
leave
cmp
jne
or
lds
mov
pop
jbe
push
clc
gs
xor
add
call
ret
notb
lcall
pushf
int
iret
inc
movsb
pop
lods
mov
cmp
arpl
inc
or
push
mov
fucomi
push
jno
xor
add
or
imul
jae
push
jl
ja
imul
adc
mov
add
dec
push
dec
push
mov
mov
push
aad
mov
popf
movsl
out
sub
imulb
das
xor
sahf
or
adc
push
or
jg
mov
mov
cld
pop
loop
mov
sbb
aam
fidivrs
mov
cmp
fs
mov
mov
pop
mov
cmp
imul
xor
inc
sub
sarl
daa
and
dec
xchg
ret
int
iret
pusha
leave
scas
rcrl
push
jecxz
frstor
sbb
jne
lds
ja
data16
sbb
std
sti
decl
inc
movsl
xchg
cmc
arpl
fstpl
iret
sarb
scas
outsl
adc
sbb
mov
aaa
mov
test
push
add
in
leave
repnz
or
lock
lds
mov
inc
mov
jae
dec
inc
mov
stos
dec
icebp
nop
jg
iret
xlat
push
dec
enter
xor
inc
test
es
mov
pop
mov
sub
inc
or
sbb
add
dec
lea
cmc
mov
out
jmp
dec
loop
pop
out
lock
or
xchg
xor
das
addr16
cld
cmc
sti
in
xlat
xchg
test
pop
test
out
test
pushf
pop
ret
psubq
cwtl
stos
mov
dec
int
aad
sbb
or
jmp
dec
jg
or
push
imul
dec
sub
inc
ret
test
out
xchg
idivl
lcall
mov
cmp
or
lds
mov
sub
inc
and
mov
iret
fcoms
cli
and
dec
dec
xchg
mov
stos
bound
int3
std
cmp
mov
inc
dec
xchg
sub
jns
xchg
pop
jae
lret
add
and
movb
xchg
dec
pop
jae
adc
push
scas
dec
or
fucomip
and
fcoml
lods
in
mov
push
repnz
mov
scas
jns
push
push
pop
and
sahf
jge
dec
lret
mov
jb
rorb
shrb
sub
cmpsb
add
fidivs
ss
fcmovnu
js
in
fistl
jnp
add
rcl
cltd
lea
mov
inc
movsb
add
xchg
mov
int3
inc
outsl
adc
mov
lods
adc
addr16
jno
sbb
aam
scas
dec
pop
cs
in
mov
test
xchg
adc
pop
and
ds
nop
mov
popa
jle
lock
outsb
aaa
out
aad
pop
cld
pop
add
js
inc
test
mov
push
jno
fists
push
shl
mov
daa
jnp
dec
fcompl
clc
cmc
mov
in
inc
and
call
fs
insb
mov
in
and
mov
xor
in
jmp
xchg
out
iret
lret
imul
mov
push
mov
mov
push
repnz
mov
inc
mov
lods
cmp
and
sbb
jl
faddp
pop
xor
adc
jge
out
xchg
clc
repz
scas
xchg
sarb
xor
insl
adc
cmpsl
cmpsb
mov
push
cmpsl
cmpsb
dec
push
je
lret
and
sbb
xor
sub
add
fwait
imul
inc
xchg
mov
pop
sar
push
pop
mov
mov
in
lods
or
jno
mov
jae
jmp
xchg
jb
dec
push
in
jbe
stc
and
mov
sbb
mov
or
xchg
jecxz
mov
andb
jno
or
sahf
push
xchg
mov
sbb
arpl
repz
cmp
out
icebp
mov
xchg
test
mov
dec
jb
push
or
lods
fmuls
aaa
add
call
xchg
mov
adc
in
shll
mov
sahf
addr16
and
cmp
jbe
decl
cs
mov
ljmp
bound
push
into
lods
stc
xchg
aas
prefetcht2
icebp
mov
sub
insb
mov
dec
out
lock
loopne
dec
jno
and
xchg
sbb
icebp
aad
mov
aas
lcall
loopne
pop
repz
rorl
lea
enter
or
setns
pop
lods
mov
add
in
xchg
and
adc
push
inc
arpl
cmp
movsb
in
in
inc
mov
inc
shrl
pop
jbe
pop
jge
das
in
fadds
inc
hlt
xchg
push
push
xchg
outsl
mov
sbb
dec
push
jns
test
push
imul
ds
push
push
stos
mov
and
jmp
mov
test
scas
or
cltd
push
popa
xchg
int
int3
mov
lods
push
cmpsb
mov
push
pop
andb
stos
xchg
ret
stc
mov
das
ss
das
xor
ret
in
pop
cmp
scas
jno
insb
and
les
xor
gs
cmp
into
loop
bound
mov
sbb
cmp
push
js
pushf
fcoms
movsb
push
cmpsl
enter
cmpsl
cmc
ja
jge
mov
fcmovb
mov
xchg
dec
lcall
sbbl
mov
adc
mov
and
mov
subl
std
mov
mov
imull
sbb
add
sti
loope
movsb
fidivs
dec
xor
sti
sub
outsl
aad
mov
push
dec
mov
aam
push
xchg
popa
les
xor
xor
pop
mov
adcl
pop
das
pop
lret
shll
mov
repz
mov
push
push
jb
outsb
sarb
inc
test
insb
aad
hlt
cmp
jl
jecxz
ds
or
jecxz
add
mov
jae
mov
insb
xor
mov
movsl
jmp
sbb
inc
cmp
jbe
mov
mov
mov
xchg
sub
pop
and
lret
dec
push
std
jne
pop
push
mov
fs
clc
aaa
jl
mov
std
xor
mov
inc
jge
lds
jg
aam
xor
bound
scas
xchg
scas
xchg
lock
mov
mov
mov
stc
xor
sbb
int
std
jmp
lods
jae
test
pop
dec
imul
ja
pop
mov
into
or
inc
data16
leave
push
pushf
and
in
push
fsubrl
popa
push
cmpb
fistps
mov
cmp
mov
in
push
cmpb
dec
sub
lods
sahf
addr16
int3
adc
push
mov
and
inc
int3
mov
in
pushf
shrl
and
xchg
sarb
xchg
roll
xchg
sbb
jne
insl
in
imul
lahf
cmpsl
add
sub
out
popf
and
cwtl
and
sub
push
outsb
jne
cmc
and
pop
mov
cmc
addr16
pop
mov
shrb
xorb
or
mov
or
aad
or
out
js
and
lret
cmp
in
inc
cmpsl
dec
sub
data16
lret
fdivl
repnz
dec
push
fisttpl
int3
sbb
sbbl
int3
in
aad
dec
lret
enter
sbb
mov
cmp
push
cmp
pop
cs
jge
push
inc
leave
in
adc
push
and
sub
in
push
cmp
sarl
push
mov
stos
add
adc
orl
or
mov
mov
out
add
mov
lock
iret
fmulp
or
xor
xchg
popa
mov
mov
mov
je
les
int3
in
ds
fcoms
push
clc
enter
xchg
inc
or
inc
stos
adc
lods
or
adc
push
outsl
adcb
fbstp
idivl
mov
repz
mov
mov
mov
aam
add
add
stos
adc
pop
aas
push
inc
cmp
jp
mul
adc
test
imul
movsl
not
adc
stc
mov
ss
adc
xchg
mov
pop
sbbl
pusha
xchg
dec
outsb
imulb
fisubl
mov
rcll
scas
cmp
inc
jnp
adc
ja
dec
lock
pop
ss
xlat
dec
out
dec
sub
in
test
fbstp
xor
out
push
js
loope
adc
jb
mov
loop
dec
inc
ret
dec
xor
or
jb
xchg
mov
orb
outsb
jne
jne
sbb
mov
push
push
mov
stc
outsb
xchg
or
jge
loope
es
sbb
adc
sub
mov
jp
sub
dec
push
jno
test
lret
dec
mov
aas
cmp
cmp
mov
mov
movsb
push
adc
and
push
jge
sbb
dec
mov
testl
xchg
nop
rorb
lods
mov
mov
mov
repnz
xchg
push
or
in
shl
and
push
popa
and
pop
cmp
pop
or
mov
icebp
mov
xor
pop
outsb
mov
das
add
xor
data16
notb
fcomp
and
inc
mov
pop
pusha
mov
pop
and
xor
flds
test
sbb
sbb
leave
and
stc
stos
nop
or
add
lods
imul
inc
jns
lea
ja
addr16
int3
dec
pushf
pusha
push
test
sahf
xchg
nop
inc
dec
push
mov
fs
xchg
cmpsl
js
jns,pt
test
pop
insb
test
fildl
pop
xchg
lods
les
dec
cs
ljmp
cmp
ret
sahf
arpl
imul
bound
xor
aad
mov
nop
fcom
jo
repz
lcall
mov
adc
cmpsb
mov
sbb
jae
bnd
insb
daa
mov
push
sub
aas
adc
add
jmp
scas
xchg
sbb
mov
fiadds
dec
sbb
pop
inc
enter
repz
outsl
jae
jo
mov
xchg
pop
imul
inc
call
lret
cld
push
pop
mov
in
shrl
div
jmp
and
sbb
shll
mov
lret
adc
popf
push
pop
popl
fucomip
xor
mov
sbb
xchg
pop
mov
insl
xchg
stc
add
stos
jo
mov
mov
mov
pop
aad
loop
jno
cld
pop
and
xchg
lock
sti
addb
push
and
imul
push
leave
push
mov
sub
rcll
fwait
inc
mov
iret
movsl
pop
jmp
cld
in
xorb
xchg
insl
mov
lcall
loopne
sub
cmp
adc
mov
push
sub
dec
jp
mov
stc
cmp
mov
iret
aad
push
out
push
scas
xor
mov
pop
out
test
test
sbb
inc
gs
stos
add
sbb
leave
push
call
xchg
inc
add
or
dec
les
mov
mov
in
and
ja
xchg
xchg
popa
mov
add
out
int
push
lods
dec
lret
ret
ret
jno
and
dec
negb
dec
scas
mov
sub
daa
sub
lahf
sbb
outsw
xor
push
out
add
fidivrs
cwtl
add
clc
insb
cmp
insb
xor
fs
dec
frstor
xor
push
popf
push
sahf
pop
ret
mov
lock
or
sub
fdivs
shl
pop
cmpsb
jno
hlt
jns
mov
and
aas
add
xor
xrelease
add
in
aaa
push
pop
adc
push
mov
mov
xchg
xlat
jg
out
lods
sbb
flds
movsb
subps
mov
fwait
push
int
push
push
inc
lahf
push
jno
cmp
pop
sbb
mov
xor
gs
cmp
scas
insb
nop
push
cmp
mov
fwait
push
sbb
or
call
popf
adc
pop
push
push
das
xchg
out
ds
mov
sub
sbb
xchg
popa
cli
sbb
mov
stc
push
jns
mov
and
scas
imul
mov
mov
popa
xchg
sbb
pop
mov
jbe
pop
and
into
and
aaa
push
xlat
addr16
mov
and
test
xchg
jbe
adc
pop
lahf
xchg
aaa
cmpsb
iret
mov
xchg
ja
or
test
jno
ret
jmp
mov
scas
in
inc
outsb
lcall
movsl
dec
in
addr16
cmp
call
addr16
pop
aas
cmpsb
in
repz
mov
clc
cmp
ja
popf
or
and
lcall
ja
pop
mov
push
bound
ss
std
sub
int
adc
mov
aam
arpl
gs
out
test
sub
cmpsl
lcall
push
push
mov
lret
sti
popa
pop
jae
addb
inc
xchg
aam
jp
dec
cmp
inc
push
pop
push
adc
out
rorb
mov
xlat
inc
icebp
xchg
sbb
add
mov
enter
mov
sub
add
dec
cmp
dec
idivb
test
adc
xor
movsb
jbe
aaa
int
push
xlat
int
mov
pop
pop
imul
jmp
xchg
pop
loop
fs
push
pop
mov
jnp
mov
lock
push
out
inc
jge
pop
mov
cs
inc
aad
and
push
mov
fdivrp
mov
sbb
cmpsl
cmp
jg
jmp
sarl
push
or
xchg
mov
dec
icebp
stos
popf
sub
gs
scas
std
into
loopne
fiadds
lret
xchg
add
aad
ret
xor
and
ljmp
movsb
jp
xor
out
xchg
push
into
in
cltd
cmp
inc
add
push
pop
mov
cwtl
xchg
lds
push
fnsave
inc
je
out
test
mov
movsl
enter
sub
scas
inc
push
lods
mov
out
push
push
cmp
pop
js
mov
inc
jo
in
xchg
add
cmp
push
and
or
sti
test
jnp
movb
add
popa
mov
push
data16
outsb
int
adc
pop
aam
sub
adc
fadds
jge
pop
inc
cmp
rorb
stos
imul
shl
inc
lods
fimuls
int
test
cmpsb
sub
mov
das
push
push
outsb
mov
cs
fcmovbe
sbb
mov
mov
mov
jge
dec
pminub
dec
xchg
sbb
push
and
scas
icebp
divl
dec
test
inc
push
lret
xor
lahf
sti
movsl
scas
cld
sbb
cmpsb
nop
mov
insb
rcl
std
stc
shlb
mov
cmp
loope
lret
int
pop
ficompl
sbb
xchg
icebp
sbb
xor
mov
fs
xor
push
xchg
add
jmp
add
mov
jl
cmp
push
mov
or
add
test
ret
shl
jne
shlb
int3
addr16
sub
lds
mov
sub
aaa
sub
ss
adcl
adc
sbb
sbb
pop
adc
pop
and
sbb
push
and
cmp
in
pop
mov
inc
scas
pop
sub
jecxz
mov
push
stc
out
scas
dec
dec
or
dec
rcll
jae
xchg
dec
jp
sub
ret
mov
shl
jl
pop
and
or
push
lock
fisttpl
sub
pop
loop
leave
inc
dec
inc
test
sbb
jmp
and
popf
sahf
rorl
loopne
test
jns
and
inc
dec
leave
mov
fwait
outsb
push
test
xchg
push
cmp
inc
fstl
mov
mov
sbb
arpl
pop
scas
icebp
into
scas
xchg
mulb
pop
insl
or
push
lcall
andl
xor
xchg
push
xchg
aad
adc
scas
test
cmp
pop
sti
repnz
jnp
shll
pop
test
mov
fcompl
std
cmpsb
call
dec
mov
iret
mov
xor
repnz
outsb
xor
cmpsl
xchg
push
inc
popf
into
jp
dec
push
jno
imul
push
aas
mov
pop
adc
mov
test
cbtw
mov
pop
sub
js
out
pop
mov
int3
popa
lock
jmp
cmp
mov
push
insb
addb
mov
add
cmp
push
adc
bnd
loope
lea
iret
lods
push
mov
push
add
push
in
lds
push
adc
jecxz,pn
mov
cli
pop
cmp
mov
sub
mov
das
scas
dec
scas
movsb
mov
cmpsl
in
imul
mov
xor
out
fnstsw
or
jne
push
test
notl
inc
lock
mov
xor
js
data16
jbe
dec
cbtw
leave
push
and
orl
and
xchg
cmp
sbbb
out
inc
jl
or
aad
movd
xchg
push
orl
adc
push
cmpsb
dec
push
mov
shrl
pop
pop
cmp
push
fdivr
leave
adc
inc
xchg
xchg
std
push
and
push
xor
shrb
adc
add
adcb
cmp
xchg
fsubrl
jb
xchg
fwait
pushf
out
mov
mov
repz
rol
dec
push
popa
xor
mov
ret
xchg
fisubrl
pop
mov
mov
fdivrs
jb
dec
call
sti
jp
ffree
push
mov
push
push
lea
fsubr
mov
mov
jae
imul
imul
lods
push
mov
cmc
loop
rolb
push
cmp
mov
or
in
fidivrs
mov
push
insb
sarl
mov
fwait
mov
jecxz
add
xorl
js
lods
xor
lods
dec
xor
push
pushf
lea
sub
mov
dec
cmp
test
iret
push
cwtl
mov
sub
iret
test
sbb
lods
negb
insb
ss
es
push
cmp
sub
sbb
or
cld
xchg
mov
cmpsb
int3
mov
out
push
jl
insb
ss
es
push
cmp
sub
sbb
or
clc
test
cmpsb
fsubl
lods
negb
push
insl
aas
pop
and
pop
sub
sbb
or
cld
stos
in
fmull
sub
sbb
jae
cmp
pushf
pop
cmp
mov
rorl
or
out
xlat
incb
jp
mov
dec
ja
outsb
push
jle
push
aaa
sbb
ds
ds
into
neg
out
xlat
inc
mov
mov
inc
outsb
push
jo
push
pop
cs
cs
ds
xlat
gs
out
jg
lds
jns
lahf
push
test
add
or
xor
pusha
jno
jb
imul
out
mov
sahf
sub
mov
enter
out
es
push
lret
pop
stos
notb
pop
dec
jl
notb
mov
pop
sub
sub
lret
push
ja
xchg
aas
adcb
push
in
push
rorl
int
jmp
and
cli
mov
lret
loop
xlat
ds
iret
aaa
into
mull
fidivrl
mov
iret
push
insb
mov
aaa
pop
bound
fsubs
loop
packsswb
loop
lahf
dec
xchg
cwtl
ja
nop
mov
fs
roll
cs
es
ds
test
lock
and
xlat
mov
mov
rorl
adc
dec
fsubrs
pop
addl
pop
out
push
dec
cltd
mov
cmpsl
scas
dec
cmpsl
pop
push
icebp
inc
mov
push
sbb
fbstp
imul
ret
clc
enter
loop
xor
and
pop
jnp
pop
push
push
mov
mov
loop
fcomps
jmp
adc
xor
aas
and
addr16
pop
jbe
insb
stos
mov
xchg
movsb
rcrl
xchg
pop
outsb
push
jle
push
aaa
push
daa
cs
ds
into
neg
out
xlat
inc
mov
mov
outsb
push
jle
push
aaa
push
daa
cs
ds
into
div
xor
jmp
cs
into
and
or
daa
lahf
int3
movsl
cmp
dec
mov
xor
push
aas
cmp
mov
or
mov
mov
mov
pop
cmp
jp
sub
mov
scas
popf
xchg
out
outsl
jmp
push
ss
lret
cmp
ss
dec
push
push
loope
sbb
push
push
fldl
sahf
fwait
cmp
jmp
jnp
fistpll
leave
mov
jae
push
test
pop
es
sbb
ficoml
or
sti
inc
outsb
rol
outsb
pop
dec
dec
cs
xchg
out
nop
cwtl
aas
and
das
and
mov
sbb
std
nop
pop
xor
scas
adc
orl
mov
jo
mov
push
cmpsb
inc
pushf
xor
add
ljmp
add
xor
xor
jb
mov
ljmp
or
lahf
test
aaa
inc
sbb
sarl
adc
andl
adc
jl
insl
add
adcb
sub
lret
mov
in
mov
sbb
enter
into
push
dec
insb
lods
jge,pn
pop
mov
movd
adc
out
aaa
dec
enter
mov
dec
in
push
cld
daa
mov
jns
lret
push
adc
push
push
bswap
jl
and
insb
cmpl
dec
pop
movsb
push
insl
jge
mov
ret
scas
cmp
dec
jb
out
cs
cmp
dec
pop
add
test
mov
popl
popa
adc
fdivrl
jmp
mov
loop
mov
test
mov
aaa
cwtl
ret
mov
jne
xchg
addr16
fs
sbb
mov
iret
mov
push
sbb
mov
or
in
stos
outsb
imul
and
pop
insl
clc
adc
adc
cmp
or
loop
mov
movsb
dec
sahf
jns
sbb
push
lods
sub
jle
incb
sbb
inc
mov
int3
sub
div
jno
sbb
add
sub
pop
inc
adc
jmp
inc
xchg
add
into
sbb
xchg
fucomip
pushf
inc
js
jle
outsb
sbb
mov
xor
sbbl
mov
dec
popa
sarl
sti
sbb
pushf
shrb
dec
fwait
es
xor
lock
loop
fldenv
cmpsl
add
add
cs
aam
lahf
pushf
cmp
dec
loopne
mov
and
fs
sub
fucom
ret
jmp
imul
into
loope
push
fsin
divb
scas
lret
cld
cmp
dec
cld
les
sub
repz
inc
call
loopne
or
push
ds
out
push
and
hlt
push
setb
jbe
xchg
xchg
fdivrs
fildll
pop
sti
dec
dec
rcrb
divb
dec
inc
js
jge
or
or
xor
in
cli
pop
jnp
inc
es
sbb
adc
or
pop
xlat
stos
aas
add
lret
test
sub
cmc
jge
iret
sub
das
mov
inc
notl
adc
aaa
and
or
fstpt
mov
lds
daa
clc
adc
add
daa
xchg
test
xchg
incl
mov
mov
jcxz
jg
mov
xchg
push
fwait
cmp
dec
mov
add
jge
enter
jmp
push
xchg
cmp
add
pop
aad
dec
ret
add
dec
insl
add
mov
cmp
outsl
jns
in
orl
xor
jl
mov
aas
call
ds
cmpsl
in
shll
cmp
es
pop
lret
cmp
aad
mov
loop
in
dec
dec
mov
jno
repnz
in
scas
jb
popf
repz
xchg
or
rorl
mov
clc
add
notl
andl
js
xchg
or
ret
mov
xorb
lods
jae
sub
ret
mov
pop
mov
popf
or
cmp
pusha
sub
jae
fsub
in
ficomps
mov
and
pusha
mov
jo
lods
mov
cli
sti
test
sti
shlb
cs
call
or
pop
xor
insl
in
xchg
out
pop
inc
lcall
int3
lcall
or
mov
xchg
sub
ljmp
add
mov
pop
cmp
lret
dec
push
xlat
jb
xchg
lahf
add
dec
push
loopne
imul
mov
std
and
adc
dec
stos
addb
nop
ret
jns
xor
cmp
jne
ja
push
mov
add
aaa
scas
sbb
jecxz
stc
loope
stos
or
sbb
lods
stos
push
hlt
popf
push
jg
mov
stos
mov
roll
jns
and
jecxz
jmp
cmp
or
push
scas
jle
add
inc
sahf
pop
daa
rcrb
std
and
jb
outsl
lock
popa
repz
mov
test
sbb
push
loop
jle
pusha
lret
sarb
jns
mov
xor
push
lahf
fisubs
loop
xchg
jmp
sbb
ljmp
test
in
xchg
imul
sub
mov
repz
adc
xchg
add
cwtl
mov
ret
add
aas
mov
bnd
dec
xor
jns
fdivl
xchg
outsb
jb
or
mov
aad
bound
inc
popl
push
fsubl
push
add
sub
sub
mov
stos
jp
outsl
fimuls
adc
and
adc
pop
and
fisttpll
mov
sbbl
stc
das
ja
arpl
sub
cmc
xchg
sub
and
dec
repz
out
xchg
lahf
movsb
cltd
jo
mov
pop
iret
pop
cmpsb
push
ficompl
in
sbb
mov
hlt
ret
shll
dec
ds
mov
pop
cs
leave
pop
jle
inc
lods
fs
pop
push
jge
jle
sbb
lahf
adc
out
lea
jp
sbb
push
xlat
push
mov
stos
inc
arpl
push
mov
std
mov
cvttps2pi
sub
or
in
pop
lods
setl
sbb
mov
sti
or
icebp
sub
insl
cli
test
hlt
shlb
cmp
jbe
mov
xor
adc
mov
jbe
out
aaa
arpl
scas
dec
mov
sub
jnp
insb
out
dec
sbb
dec
dec
cmp
mov
xchg
push
push
mull
dec
lahf
jmp
xchg
frstor
mov
jne
mov
push
push
push
orb
or
dec
sub
test
test
pusha
notl
mov
pop
dec
inc
loopne
cmc
xchg
or
into
pop
dec
shrb
outsl
add
jne
test
lods
jno
push
adc
mov
pop
out
mov
mov
sahf
fimuls
push
in
test
or
jo
mov
xchg
insl
jg
or
mov
sub
lcall
xchg
inc
cmpsl
icebp
mov
cli
push
pop
push
cmpsb
loop
sub
hlt
fwait
loopne
mov
lret
sub
xchg
jo
xchg
pusha
cmpsb
push
insl
dec
lret
add
cli
jp
mov
mov
outsb
rcrb
jo
cmp
add
jg
xor
into
jmp
cmp
mov
lret
and
sub
jnp,pn
jne
ds
mov
xchg
lret
jge
adc
sbb
xor
ja
andb
sahf
pop
out
mov
jge
mov
gs
mov
das
xchg
and
sbb
fistpl
add
pop
aad
add
pop
insl
fs
push
dec
sub
push
addr16
xor
lock
and
lret
sub
fbstp
dec
lcall
jp
insl
sub
sub
lock
rcrb
subb
stos
pop
push
adc
and
out
jbe
sub
pop
mov
push
xor
rcr
roll
cmp
xor
or
lahf
cmc
cmp
and
shrl
lods
add
sub
mov
jmp
pusha
subb
addb
rorb
dec
adc
xor
popf
in
adc
lret
inc
dec
rcrl
jg
fsubrl
es
push
sbb
dec
xor
jne
add
mov
adc
loop
or
lahf
insl
call
repnz
jno
pusha
mov
aad
mov
pop
daa
push
or
and
mov
adc
jb
aad
dec
mov
je
cltd
and
push
dec
rcll
rcrb
lock
movsl
jecxz
enter
lods
jns
xor
pushf
add
in
xchg
or
adc
fstpt
daa
xor
test
pop
gs
repnz
mov
xchg
push
arpl
mov
adc
pop
insb
and
push
jno
ds
movsb
imul
dec
divl
fists
repnz
jnp
dec
aam
int3
sbb
push
xlat
cmp
adc
cli
dec
xchg
sbb
cmp
adc
popa
mov
movsl
hlt
xchg
push
leave
jg
xlat
leave
xor
les
or
sahf
negl
les
mov
mov
push
mov
mov
icebp
pop
sub
pop
mov
loope
push
scas
outsl
or
or
xor
test
icebp
or
pop
jl
enter
jno
push
xchg
jo
or
aad
xchg
rcll
inc
inc
xor
add
xor
xor
decb
rcrl
pop
inc
mov
movsb
call
movsl
sahf
loop
sarb
push
aas
adc
push
decl
sub
or
add
fisttps
xchg
pop
popf
dec
dec
and
imul
cmp
adc
cmp
incl
enter
and
clc
cmpsl
pop
pop
int3
sub
sub
xchg
or
add
nop
xchg
and
sub
push
fcom
jmp
movsb
cmp
movsb
jb
hlt
popf
pop
dec
push
adc
cmp
push
bound
sub
das
into
add
mov
jnp
dec
repnz
lods
stos
pop
iret
mov
dec
pushf
dec
cltd
cltd
pop
or
xchg
xchg
xchg
test
jae
sbb
js
arpl
push
and
add
mov
pop
rcll
or
dec
fwait
xchg
inc
pushf
dec
pop
jae
out
cmp
sub
push
imul
inc
shrl
repnz
or
pop
dec
fdiv
xlat
in
inc
lcall
mov
sub
ret
sbb
and
aad
daa
adc
cmp
jle
iret
lret
cmp
addr16
and
mov
cmp
push
sub
cmp
subl
adc
bnd
sub
xor
push
mov
jmp
dec
shr
jno
dec
rorb
fld
int3
outsb
and
movsl
push
jno
subb
cmc
ret
mov
mov
adc
imul
in
outsl
sub
lahf
push
xchg
xchg
inc
jle
ss
cld
push
push
arpl
leave
ss
int
dec
mov
xchg
adc
dec
repnz
sarl
push
movsb
lret
fmull
or
subl
sub
fists
arpl
mov
mov
xor
xchg
out
daa
cld
fs
lret
into
or
dec
enter
les
pop
pop
sbb
out
mov
push
mov
pop
adc
aaa
and
xchg
sub
sub
out
fisttpll
dec
sbb
mov
push
adc
adc
push
inc
xchg
sbb
lret
push
lcall
packssdw
test
adc
jge
fcoms
sub
fwait
mov
int3
push
cmp
lods
aaa
roll
lock
mov
ja
pusha
lahf
test
jbe
or
pusha
adcb
sti
sahf
jo
insl
dec
mov
cmp
mov
mov
xchg
pop
mov
repz
mov
outsb
sarl
rolb
xchg
push
mov
pop
jb
leave
aad
orb
shrb
jecxz
xchg
xor
mov
in
iret
stos
ret
xchg
xor
arpl
mov
fisubl
jmp
push
movq
out
mov
movsb
pop
push
jno
pop
xor
mov
addb
ret
fsubl
insb
clc
push
and
std
mov
push
cmpsb
cmp
and
std
nop
dec
pop
jle
inc
xchg
insl
mov
xlat
leave
mov
pop
xor
int
xchg
push
in
lret
push
aas
aas
mov
je
mov
popa
pop
xchg
sbb
dec
mov
nop
sahf
nop
push
mov
scas
dec
adc
lret
push
movsl
xor
popl
aam
orl
out
nop
mov
mov
push
sub
rorb
mov
xchg
test
xor
aam
testl
pop
cwtl
push
and
aas
push
mov
std
cmp
jl
pop
pusha
or
xchg
mov
mov
cmpsb
jnp
inc
por
xchg
mov
mov
mov
lds
int
sub
je
add
lods
xor
cli
cmpsl
hlt
leave
nop
xchg
jp
dec
mov
mov
or
fbld
call
lock
sti
loopne
sub
inc
mov
jno
test
xlat
enter
jne
mov
out
mov
mov
add
cwtl
dec
rcl
hlt
adcb
inc
addr16
pop
subl
iret
rorl
sub
test
inc
jne
in
mov
ja
or
mov
dec
orb
cmc
dec
int3
scas
fs
addr16
push
fwait
mov
icebp
push
add
movsl
in
pusha
jl
stc
test
sub
jecxz
push
dec
jmp
xchg
cmp
repnz
shrl
pop
jg
jo
movntps
xor
xchg
push
adc
stos
cld
inc
loop
loop
rcrb
scas
or
or
push
test
es
and
jae
mov
or
push
mulb
imulb
cmp
ret
mov
sbb
mov
push
pop
stc
fucomi
pop
sub
or
popf
fidivrl
loope
aam
and
mov
xor
xchg
jmp
cmpsl
mov
jne
mov
mov
pop
lret
jge
cmp
mov
add
pusha
mov
xor
popf
std
test
sub
and
push
repz
shrl
adc
lods
jns
inc
int
hlt
add
sub
cld
sbb
xchg
mov
dec
shlb
scas
xlat
je
kmovw
outsb
dec
cwtl
xchg
jg
jb
or
sub
adc
lcall
in
nop
insl
adc
jbe
insl
ja
test
fstpt
xor
cmp
iret
or
stos
cmp
push
jnp
push
jb
xchg
aad
inc
adc
into
sub
fwait
mov
mov
pop
std
clc
fildl
stos
xor
mov
and
cli
nop
jge
lods
pop
dec
dec
adc
in
js
insb
mov
dec
aam
or
inc
movb
mov
sub
xchg
shlb
inc
sub
push
cmp
xchg
adc
sbb
mov
dec
mov
add
in
or
add
add
subb
arpl
sub
lea
cmp
stos
jns
jmp
xchg
clc
fld
loope
sub
lods
xchg
xor
add
cwtd
and
pop
clc
add
dec
fcmovne
les
dec
out
and
lock
fistpl
fisubl
xchg
pop
dec
dec
stos
dec
in
into
cmc
mov
add
test
loopne
sub
xchg
cwtl
xchg
push
loop
lret
xchg
cmpl
call
pop
jno
js
or
xor
out
hlt
cmp
pushf
add
gs
mov
jle
mov
lahf
add
aam
xchg
fwait
adc
fs
imul
adc
into
not
jmp
inc
into
mov
test
fwait
loop
orl
test
mov
xchg
cmp
outsb
mov
jno
fbstp
movsl
outsb
cmp
mov
rorl
mov
cmp
push
jl
lds
shl
push
sub
mov
addr16
dec
bound
je
mov
xor
lret
mov
insl
stos
mov
mov
outsl
addr16
cmc
icebp
xor
call
cli
dec
in
xchg
xchg
pop
insl
inc
dec
jo
lds
repz
aad
test
pop
jg
mov
pushf
inc
cmpsl
jp
lock
enter
add
push
std
xchg
jnp
xchg
mov
repz
or
rorl
inc
jp
mov
fcmove
lods
and
sahf
ljmp
cmpl
pusha
mov
ret
out
xor
push
scas
cmc
aas
xor
int3
inc
adc
pop
sti
fbstp
add
or
inc
and
push
fcom
leave
dec
jmp
dec
scas
dec
adc
sbb
pop
add
lahf
out
sub
outsb
repz
dec
push
sub
pop
xorb
in
add
iret
lret
cmp
mov
sbbb
jae
cld
std
jns
jp
push
scas
scas
int
xchg
repnz
adc
test
push
jo
daa
in
fcoms
ja
push
and
int3
or
xchg
fsubs
or
cmc
jbe
pop
adc
and
add
stc
mov
je
mov
jl
fisubl
lods
mov
sbbb
inc
jne
clc
mov
mov
pop
inc
sub
notb
adc
add
or
cmp
mov
leave
fnstenv
pop
test
mov
push
mov
push
loope
std
xchg
pushf
xor
in
insb
xchg
loope
pop
adc
pop
sbb
push
and
mov
mov
iret
outsl
sahf
cmp
pop
push
fdiv
test
mov
cmpsb
aaa
loopne
push
and
add
mov
and
scas
dec
sar
cmp
pushf
test
insb
arpl
xor
lret
dec
hlt
pop
push
shll
inc
push
out
pusha
jge
rol
test
mov
idivb
push
aas
inc
out
mov
ds
jp
or
enter
mov
mov
inc
incb
push
lret
loopne
ret
add
add
es
stos
int3
inc
pop
sbb
sub
xor
fwait
xchg
in
mov
adc
inc
icebp
stc
xor
lds
int3
cltd
xor
mov
jmp
imul
push
test
shll
movsb
or
ror
pop
jmp
cwtl
loop
lock
jo
mov
aam
mov
sub
push
ret
sub
pop
mov
xchg
and
xchg
ja
mov
adc
xchg
movsb
add
xor
lock
mov
mov
dec
adc
sahf
inc
lahf
pop
jbe
cmp
mov
insl
icebp
push
out
sbb
jne
push
repnz
scas
push
lods
push
and
adc
and
js
cmp
icebp
mov
adc
jns
es
pop
mov
pop
xchg
fldt
enter
jp
mov
sbb
xchg
loopne
adc
outsb
pushf
inc
pop
lds
pop
test
xchg
sahf
dec
inc
dec
push
push
mov
jne
js
mov
stos
dec
mov
out
pusha
ja
fildll
dec
xchg
insl
add
xorb
pushf
and
mull
xlat
fwait
lret
push
pop
jl
rcrb
add
jl
lret
lret
lret
xlat
and
fsubrl
jns
mov
jb
dec
aad
mov
add
cmpl
sahf
outsb
jmp
incb
sub
adc
xor
rep
imull
sbb
mov
add
loopne
lcall
hlt
mov
mov
jg
push
aad
mov
sub
mov
or
add
scas
mov
mov
loop
outsl
push
sub
adc
sbb
sub
and
sbb
cmp
addr16
mov
adc
int
es
push
test
popf
jg
sbb
mov
fwait
in
lods
cltd
fisubl
mov
mov
enter
jg
or
lret
enter
sbb
popf
mov
shll
or
mov
fidivrs
test
into
inc
inc
mov
sub
push
ret
xor
sub
fs
rcrl
jle
cmp
cltd
push
or
std
outsb
mov
xchg
and
pop
push
pop
movsl
pop
sbb
ret
mov
xchg
stos
pusha
arpl
das
mov
loop
mov
cld
icebp
es
mov
int3
fxch
std
popa
sbb
nop
insl
rcl
inc
mov
cmp
dec
stos
out
fcoms
leave
sarl
imul
lcall
sub
or
ljmp
hlt
sbb
andl
sarb
movsb
mov
daa
and
dec
add
es
mov
sahf
shl
add
pop
fistpll
xchg
dec
int
out
mov
sahf
cmpsl
scas
xchg
mov
outsb
push
jle
push
aaa
push
daa
cs
ds
into
neg
out
xlat
inc
mov
mov
outsb
push
jle
push
aaa
push
daa
cs
ds
into
neg
scas
out
scas
inc
mov
mov
outsb
push
jle
push
aaa
pop
daa
cs
cmp
into
neg
out
xlat
inc
mov
xchg
push
jle
jns
xchg
fcom
call
in
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
sbb
or
cmp
sub
push
xchg
sub
lahf
cmp
or
jns
in
cld
pop
in
dec
sbb
or
cmp
sub
pop
stc
dec
jmp
pushf
cmp
fdivrl
imul
mov
sub
pop
stc
dec
jmp
pushf
xchg
scas
sub
jge
or
cmp
push
mov
mov
inc
fcoms
sbb
xchg
add
int
cmpsl
cmpsl
and
mov
stos
mov
out
repz
call
jbe
jp
push
sbb
mov
roll
inc
sbb
mov
test
loope
mov
or
mov
xor
lods
fldcw
hlt
fnstsw
test
sbb
sub
call
mov
mov
and
loop
inc
pop
out
pop
mov
int3
xchg
add
les
mov
sbb
jbe
clc
insb
cld
or
dec
popf
lds
mov
xchg
add
hlt
push
push
call
jo
mov
fsubrs
sub
or
insb
lahf
scas
cmp
dec
fistpll
sub
pop
stc
dec
jmp
pushf
cmp
fdivrl
imul
outsl
test
cmp
call
pop
iret
jno
dec
pop
sbb
or
js
pop
cltd
insl
sti
cmp
sub
out
inc
jmp
sarl
sub
test
sbb
or
jp
dec
in
sbb
dec
jmp
pushf
cmp
fdivrl
imul
mov
sub
pop
stc
dec
jmp
pushf
cmp
fdivrl
imul
mov
push
into
mov
shlb
loop
daa
mov
stc
fstpl
dec
pop
add
in
aam
lret
dec
add
data16
mov
or
test
or
ret
ja
fidivl
xchg
adc
jle
addr16
cmpsb
loopne
in
rorl
nop
ret
mov
sub
pushf
add
sbb
sarb
cs
ds
xchg
das
jo
pop
sbb
repz
cltd
cmpsb
int3
adc
push
jne
dec
enter
bound
ja
cs
add
pop
pop
xchg
sbb
imul
loopne
sbb
movsl
pop
popa
jl
test
popf
out
or
push
xchg
pop
fwait
mov
hlt
mov
lds
push
inc
xchg
dec
test
xor
jnp
ljmp
sub
push
dec
push
ljmp
ficomps
pop
into
pop
addr16
sub
cltd
push
ret
fdivrl
scas
sbb
dec
ret
cmp
js
sbb
cli
and
test
loopne
mov
jecxz
sub
iret
int
push
movsbl
and
and
rorl
push
sbb
adc
sbb
inc
add
cmpl
js
xchg
inc
arpl
icebp
add
in
lcall
stos
jge
xlat
fildll
loop
adc
ret
inc
das
push
pop
out
push
jb
push
mov
fsubs
repnz
jne
push
inc
jmp
call
hlt
jmp
cmp
push
sbb
dec
shr
sahf
test
xchg
pop
inc
or
mov
js
jl
rclb
testb
cld
adc
dec
repnz
outsl
movl
lock
and
adc
out
out
push
mov
in
pop
in
out
loop
je
pusha
mov
outsb
lods
lahf
xchg
xor
add
loop
fimull
xchg
mov
mov
hlt
jbe
mov
and
push
ljmp
pusha
jbe
mov
out
mov
fcomi
pop
jo
mov
dec
inc
out
repnz
push
mov
mov
adc
fcmovne
inc
in
in
pop
sbb
inc
fmuls
sbb
ret
call
fistps
add
fdivrs
pop
xor
inc
test
sbb
outsl
cmc
stos
sar
push
and
xchg
xchg
add
addr16
mov
or
cmp
outsl
mov
popa
repnz
mov
cmpsb
aam
fbld
adc
imul
sbb
and
inc
pop
jge
data16
xchg
xchg
dec
fs
cmc
mov
cmp
insb
scas
lds
push
xchg
jmp
aad
ljmp
sbb
std
fisubs
xchg
and
sbbl
xlat
mov
sarb
fxch
insl
mov
stos
pop
adc
jne
push
xor
cmpsb
loop
lcall
xchg
into
sub
xchg
add
jnp
add
or
addr16
fisttpl
add
or
mov
mov
add
lds
and
pushf
faddp
inc
xor
or
or
pop
addl
adc
lds
sti
jnp
insl
xor
sub
adc
push
enter
popf
filds
fistps
cld
mov
and
jnp
push
fcomip
add
insb
shlb
mov
mov
js
xchg
mov
mov
sbb
scas
mov
xchg
or
add
xchg
push
aas
dec
sbbl
iret
or
lret
lcall
sub
sbb
or
mov
cmpsb
or
push
jecxz
test
lret
pushf
fs
in
mov
test
leave
add
add
dec
jl
jg
call
lcall
mov
dec
loope
lods
xor
cmp
mov
lods
lods
xor
jo
or
bound
or
lock
mov
xor
mov
rcrb
test
das
mov
push
fiadds
shr
bswap
out
xchg
test
and
xchg
inc
push
fwait
adc
xchg
or
pushf
jle
daa
jmp
popa
ficompl
jecxz
stos
rolb
and
or
push
inc
inc
fs
or
add
lret
mov
pushf
and
pop
jb
mov
fsubrl
pushf
push
cmpsl
pop
cld
pop
jl
jp
cmp
adc
popa
dec
sub
insb
and
mov
insl
in
cli
sub
and
scas
dec
mov
cld
or
pop
rorb
or
cwtl
dec
jmp
and
add
ds
cmc
ror
ret
movsl
iret
mov
das
ss
inc
sub
call
add
insl
insb
xor
mov
or
mov
lahf
iret
shl
inc
jl
sbb
push
ljmp
xorb
jae
dec
repnz
movsl
xchg
sub
pop
sbb
mov
mov
adc
xor
popf
clc
adc
mov
aam
popf
xor
xor
pop
jmp
push
sbb
cmp
jl
mov
add
rcrl
or
test
xchg
lods
fwait
push
or
cmpsb
icebp
lds
mov
inc
cmp
and
fistps
jae
clc
aam
cli
das
jmp
fdivrl
std
sarl
ds
sub
setp
adc
outsl
xchg
mov
stc
hlt
xchg
add
cmp
pop
loop
cli
nop
mov
and
ret
addl
mov
pop
filds
jle
inc
lahf
sub
dec
mov
out
pop
test
pop
xchg
pop
jp
add
or
aas
mov
fidivl
std
sbb
pusha
push
push
cmp
dec
adc
mov
cmc
sub
xchg
imul
jb,pt
cmpsb
out
stos
cmpsl
sbb
xchg
roll
outsb
adc
loop
stos
hlt
ja
pop
mov
js
test
divb
or
push
adc
sbb
mov
mov
cmpsb
and
and
xchg
dec
inc
push
mov
mov
jo
inc
xor
cltd
xor
jle
gs
ja
xor
pop
lahf
add
imul
lds
stos
sub
and
dec
out
mov
je
outsb
lds
out
loopne
popa
mov
stos
repz
and
inc
mov
add
jnp
mov
or
push
fdivs
dec
nop
dec
gs
sub
mov
cmp
push
test
xchg
pop
push
push
cmp
dec
test
sbb
and
or
pop
hlt
cmp
jae
lcall
sbb
nop
ficoml
out
sbb
outsl
inc
cs
inc
ficompl
mov
testl
test
ret
mov
mov
pop
fs
scas
rcll
in
jo
dec
push
xor
dec
mov
sbb
xchg
xchg
daa
add
mov
pop
leave
dec
cmp
int3
cmpsl
pop
cmp
std
xor
hlt
and
out
stos
daa
dec
pop
sbb
xchg
push
mov
loopne
fisubrl
addb
and
xchg
out
sub
add
mov
cwtl
es
sub
xor
mov
rcrl
sub
xchg
ficoml
in
mov
jg
pop
mov
mov
stos
je
jle
xchg
cltd
pop
push
add
mov
stos
push
pop
adc
test
shlb
lcall
inc
fldl
add
push
xor
push
xchg
fnstenv
push
cmp
clc
sub
insl
push
call
enter
sbb
stos
dec
lds
fcoms
movsb
inc
xchg
stos
outsl
cli
or
push
hlt
inc
lea
xlat
fistl
mov
push
xchg
sbb
push
ret
jecxz
repnz
push
pop
das
jo
frstor
popa
adc
int
cmp
js
mov
inc
shrl
fnsave
push
in
mov
mov
mov
das
sti
mov
bound
in
lahf
sarb
xor
aad
outsl
fdivs
cld
push
jae
cmc
outsb
add
fbstp
enter
stos
es
jmp
div
xchg
push
and
pop
pusha
adc
aam
pop
mov
mov
mov
cmpsl
es
jbe
ret
push
inc
icebp
repz
mov
cltd
out
adc
mov
mov
popf
sbb
xchg
push
mov
jns
xchg
xor
sub
cmp
cltd
loopne
mov
and
subl
jle
push
in
icebp
aam
ja
pop
dec
ds
mov
test
jge
insb
stos
push
dec
jnp
stos
leave
and
sub
push
iret
mov
push
and
lcall
in
jo
aas
push
outsb
lret
popf
insb
dec
rorb
add
loop
movsb
add
sar
scas
int3
rorl
addr16
mov
push
out
inc
psubsw
dec
jecxz
xor
mov
adc
or
inc
add
scas
sub
fwait
jp
dec
popa
movsb
mov
sbb
fadds
dec
shrl
fwait
cmp
sub
push
popl
mulb
clc
add
adc
pop
jge
lret
jp
insb
xor
mov
push
or
outsl
adc
adc
mov
cmc
sub
inc
sbb
and
mov
xchg
inc
dec
xchg
shlb
push
cmpsl
or
adc
dec
or
leave
cmpsb
inc
sbb
fwait
clc
jle
xchg
inc
sub
xlat
test
pop
sbb
xchg
inc
add
loopne
jae
aaa
in
outsb
stos
inc
sub
jl
fbstp
dec
mov
bound
sub
mov
sbb
ret
pop
pop
cmc
cmp
add
lods
xor
ror
xor
in
jns
push
cmp
ret
push
iret
inc
push
push
inc
jnp
sub
mov
ficomps
int3
cmc
mov
push
in
inc
fistpl
cwtl
xchg
cmp
outsb
fs
xor
xor
gs
mov
dec
adc
jb
fs
repnz
shr
push
pop
and
push
cmpsl
std
pushl
push
sbb
enter
adc
call
sbb
sub
adc
jno
jge
ljmp
cld
inc
scas
sbb
outsb
out
cmpsl
ljmp
imul
loopne
and
stos
xchg
pusha
insl
outsb
xchg
lds
popf
fists
push
and
sub
sarb
adc
xchg
imul
mov
dec
rcrb
aam
in
fldl
xor
pop
cmpl
mov
scas
sahf
repnz
cmp
sub
dec
inc
repz
inc
das
cld
cwtl
mov
mov
fwait
xchg
jl
sub
lock
popf
roll
pop
inc
mov
push
lods
dec
xchg
mov
and
int
out
dec
mulb
jne
imul
sarl
cmp
movsl
pop
sbb
push
mov
hlt
dec
sbb
imul
jle
push
xchg
jae
call
push
popl
cmpsl
jnp
pop
push
rcll
lcall
int
cmc
fiadds
mov
cmc
stos
iret
cmpb
and
cmpsl
pop
push
or
test
call
xchg
xchg
outsb
mov
in
ja
adcl
bound
jg
test
mov
lcall
aad
cld
insl
pop
mov
int3
jae
pop
bound
xchg
shrl
sbb
cmpsb
jnp
insl
adcb
cmp
cmp
fidivs
xor
jae
out
xor
inc
pop
fwait
mull
mov
and
jns
inc
xchg
jle
mov
subl
add
pop
sub
mov
cli
popa
push
xchg
and
xor
mov
xor
cwtl
or
sbb
push
das
test
mov
mov
fmuls
mov
and
mov
test
push
inc
mov
in
push
dec
jne
sahf
or
xor
fidivs
adc
xor
mov
jo
push
scas
pop
xchg
add
mov
fcompl
scas
push
cmp
jp
ss
add
dec
fsubs
add
mov
lret
loopne
inc
fisubs
fisttpll
jg
or
insb
add
lahf
cmpsb
daa
pop
or
fdivp
or
pop
cmpb
scas
nop
cmpl
popa
testb
fstps
xchg
pop
dec
iret
mov
mov
clc
pop
cmp
cmp
fcoms
sub
push
push
cmp
data16
push
push
dec
sub
xor
fldenv
jp
cld
mov
js
das
mov
cmpsw
mov
add
xchg
ss
inc
pop
sub
movsl
nop
cmp
in
stc
inc
xor
add
leave
lret
lahf
popa
jnp
xchg
add
shlb
push
fisttps
mov
iret
add
sub
inc
push
mov
cmp
fildll
aad
xchg
int3
cmpsl
out
movsl
xor
jnp
jmp
stc
mov
icebp
xor
cmc
stos
pop
pop
addr16
mov
in
sbb
xchg
cwtl
imul
rep
pop
pusha
xchg
sbb
cmp
loop
push
add
dec
sbb
mov
dec
inc
pop
xor
sbb
fnsave
out
xlat
mov
jb
insl
sahf
inc
js
push
repz
in
add
popa
incl
scas
jg
xlat
xchg
cmpsb
mov
xlat
std
in
push
mov
cmc
xchg
inc
or
mov
shll
fs
leave
out
outsb
daa
adc
mov
sbb
xchg
pop
add
repnz
enter
movsb
fisttps
movsl
sub
cmp
adc
and
imul
nop
fisubs
jmp
rcr
add
inc
movsb
mov
push
mov
jmp
cmp
xchg
pop
add
push
lcall
push
lds
imul
stos
jb
cwtl
insb
daa
cltd
insb
pop
or
mov
test
xor
mov
mov
adc
imul
sub
pop
shlb
fldenv
dec
xlat
jb
lret
test
mov
sti
jnp
mov
neg
int3
mov
sbb
xchg
inc
das
in
pusha
in
cmp
movsl
frstor
inc
in
mov
cmp
xchg
out
ret
xchg
mov
scas
fsubr
xchg
sti
cmovb
stc
fiaddl
sbb
sub
ljmp
mov
les
jnp
or
ljmp
xor
jns
inc
push
mov
stos
mov
or
test
push
movsb
daa
jnp
fs
sbb
cwtl
push
mov
pusha
ret
popf
pushl
cwtl
push
lods
sti
add
inc
xchg
lds
cmp
pop
notl
xor
lret
pop
shl
js
xorb
loopne
enter
or
shll
adc
loop
cmp
sbb
push
lcall
dec
sub
xlat
xorl
into
jno
je
js
xchg
stc
cmpsb
pushf
adc
inc
xchg
hlt
sub
cmpl
xchg
sbb
mov
test
dec
pop
xor
xchg
push
sbb
fs
ret
pop
mov
adc
push
pop
push
mov
inc
addr16
mov
mov
push
push
xor
push
sub
dec
push
push
mov
lahf
push
ret
rcrb
test
lahf
jno
adc
cs
jb
cmpsl
lret
push
adc
inc
daa
aad
pop
js
jbe
add
xchg
xor
call
push
mov
lock
int3
jp
sub
adc
jl
scas
xor
cmp
sub
cmc
ret
jbe,pn
or
int
mov
xchg
cwtl
sbb
inc
add
lock
mov
sti
push
aas
jp
lret
or
icebp
jbe
aad
dec
outsl
scas
test
and
shll
adc
push
pop
mov
mov
inc
pop
sti
push
xchg
pop
add
fwait
xor
and
push
scas
lret
and
dec
mov
cmp
cmp
iret
xor
xor
shrl
add
fists
enter
call
sub
clc
testl
je
stos
push
out
jge
or
inc
cmpb
xor
es
imul
je
fistl
inc
mov
mov
xchg
xchg
mov
xor
add
in
adc
movsb
cmpb
scas
jb
ret
jno
pop
push
mov
aaa
arpl
rcl
pop
pop
jb
push
pop
or
inc
xchg
push
hlt
add
sbb
xchg
and
add
jge
aad
stos
lods
in
xchg
sbb
pop
inc
adc
call
push
rcrb
enter
jbe
sbb
inc
sbb
mov
jb
fidivs
pop
rorb
xchg
push
cs
xchg
lock
mov
cmp
jae
mov
pop
sbb
cmpsl
jmp
int3
and
sar
addr16
push
iret
xchg
ficoms
shrl
arpl
pop
pop
xor
mov
int
or
ljmp
xlat
test
xor
cmc
cs
bound
sub
pop
xchg
cmp
mov
call
jo,pn
push
cli
dec
pusha
mov
pop
test
int
pop
bound
rorl
lcall
popf
mov
dec
add
push
cmpsb
enter
and
les
or
out
cwtl
jmp
jnp
call
pushl
or
fbld
out
fsubl
xor
xor
std
cltd
and
pop
and
dec
jae
outsb
adc
jno
jb
jp
test
or
loopne
divl
cmpsl
pop
fdivs
push
out
aaa
ljmp
fwait
mov
cmp
iret
sub
mov
arpl
loopne
test
out
loopne
and
pop
mov
pop
mov
xchg
mov
dec
ja
es
and
mov
mov
pop
stos
sub
jne
push
sti
int
idivb
add
imul
int3
cmp
mov
xor
jmp
mov
cld
jmp
add
loop
insl
mov
movsb
add
out
inc
fs
fcmovu
ja
xchg
jo
cmp
cmp
aas
xchg
mov
dec
push
mov
and
in
sbb
cmp
cltd
jbe
pop
xchg
clc
fs
sbb
push
int3
shll
lds
or
mov
in
movsl
int3
movsl
fst
cmp
lds
in
cli
mov
fs
sbb
add
push
lds
or
es
subb
cld
jns
sub
in
sbb
iret
aaa
adc
fld
aaa
add
jns
pop
xlat
jbe
xchg
scas
inc
inc
mov
lods
insl
in
mov
push
ljmp
pop
add
ss
xor
ljmp
add
cld
lahf
notl
pop
sbb
xchg
aas
int
ljmp
add
push
clc
in
push
popf
and
or
adc
inc
push
xlat
push
je
in
inc
add
decl
out
mov
insb
addr16
jnp
mov
and
sbb
aad
pop
add
push
sarb
or
es
add
add
mov
push
outsl
adc
push
popf
insl
xchg
xor
imul
mov
mov
fwait
test
loope
cltd
inc
add
stos
rorl
sub
sti
inc
cmc
out
cltd
rcrb
push
ss
sub
gs
adc
ss
fwait
inc
xor
adc
je
aaa
pop
or
cs
enter
das
insb
add
test
pushf
out
inc
pop
rolb
xor
xchg
xchg
inc
and
std
cmpsl
lret
cmpl
or
lea
shrl
out
jns
jle
jo
xor
loop
jnp
and
call
jno
sub
icebp
mov
test
and
fistl
fdivs
std
inc
pop
ror
pop
scas
out
pushf
mov
std
pop
pop
mov
sbb
pop
sub
in
push
pop
mov
fnstcw
sets
in
and
jle
mov
nop
pop
fldpi
adc
out
and
sbb
sarl
insb
mov
inc
adc
or
mov
pushf
popf
and
or
fsts
sbb
mov
out
test
es
cmp
jecxz
mov
mov
dec
pop
repz
push
xchg
int
fisubl
rorb
out
lcall
jmp
das
lret
je
cmp
dec
hlt
jno
outsb
jo
rcrb
jge
in
pop
push
lods
mov
rolb
inc
pop
cmp
fidivrl
pusha
arpl
pop
leave
mov
scas
cltd
xchg
out
adc
jge
lea
xchg
cmpsb
out
cmp
in
xchg
lea
in
jecxz
lcall
in
xchg
repnz
ss
xor
jmp
push
and
sahf
xor
sahf
fists
outsl
adc
mov
inc
bound
jb
jae
sahf
and
jle
lahf
push
clc
xchg
sbb
pop
push
cmp
jbe
movsl
cmc
add
jmp
add
faddl
mov
cmp
and
jg
shr
xor
xor
xor
inc
push
push
loopne
mov
pop
hlt
dec
scas
mov
jne
gs
lea
add
dec
jmp
pushf
cmp
fdivrl
imul
mov
sub
pop
stc
dec
jmp
pushf
cmp
fdivrl
imul
mov
sub
pop
stc
dec
imul
sub
int3
imul
mov
sub
pop
stc
dec
jmp
arpl
jae
push
sbb
add
adc
jl
insb
pop
pop
insl
dec
jge
sub
jae
bound
cmp
fdivr
int
mov
mov
insb
pop
pop
insl
dec
jge
or
or
cld
iret
in
fstp
int
std
jl
lods
dec
pushf
lods
mov
pop
jne
fs
sub
sbb
or
cld
cs
out
cwtl
int3
std
mov
sti
loop
and
xor
sbb
div
loop
les
mov
cld
popf
inc
and
jmp
jmp
out
adc
sbb
in
add
cmpsl
icebp
mov
dec
imul
lret
lods
add
sub
ficompl
cmp
mov
pop
sbb
cld
dec
mov
js
popf
rcrl
jl
insb
pop
ss
dec
dec
sbb
or
jno
imul
inc
fsubrp
bound
daa
mov
mov
gs
dec
cmp
inc
mov
std
out
in
adc
lods
lea
inc
xchg
mov
aaa
fdivrp
xchg
pop
or
stos
int3
sbb
and
in
in
fisubs
call
mov
insb
dec
pop
jge
addr16
sub
sbb
or
cld
aad
int3
in
xchg
lods
mov
sbb
insb
and
jae
inc
push
push
cld
movsb
mov
mov
lods
lret
xor
and
jle
das
fs
pop
push
cltd
mov
mov
mov
sar
sbb
cmp
or
or
sub
sbb
or
cld
int
fstp
in
int3
std
mov
lods
mov
pop
insl
dec
jge
or
or
cld
int
fstp
in
int3
std
mov
lods
mov
rorl
xor
lods
leave
pop
ja
xor
push
bnd
cmpsb
cmp
mov
iret
addr16
sahf
jmp
mov
icebp
iret
push
lock
test
outsl
mov
dec
test
dec
hlt
cmc
and
jmp
jle
xor
mov
hlt
xor
andl
mov
jnp
add
jmp
mov
imul
mov
mov
mov
dec
jl
and
dec
iret
cmpl
xchg
rol
repz
aam
shlb
call
or
or
xchg
mov
mov
and
out
jo
or
mov
dec
test
mov
xchg
and
jae
inc
mov
mov
cmpsb
dec
jae
inc
ret
mov
push
or
pushf
pop
testb
xor
and
pushf
and
jne
mov
icebp
mov
sar
cmp
xor
lcall
das
xor
loop
sub
and
mov
test
sbb
dec
je
lds
test
cmp
mov
sub
or
test
mov
ds
push
mov
ret
mov
std
cmp
bound
cmp
sub
sbb
cmpsb
test
test
dec
inc
mov
inc
sbb
nop
data16
dec
mov
pop
jb
int
mov
add
fs
pop
xor
push
push
enter
inc
xor
inc
in
mulb
lahf
insl
fstps
mov
cs
xchg
xlat
arpl
aad
fdivr
mov
cmpsb
mov
aas
jb
je
xlat
cmp
shl
imull
mov
stos
mov
insl
mov
cmpl
jmp
jnp
lds
aam
sub
jnp
dec
mov
jl
pop
mov
je
jmp
jl
clc
dec
adc
enter
cmpsb
hlt
xchg
ss
addw
out
daa
test
push
dec
xor
push
sub
or
push
jae
jp
mov
stc
cwtl
icebp
mov
cmpsl
cli
jno
js
pushf
sub
or
in
daa
or
sub
fdivrp
shl
les
cwtl
push
iret
add
mov
sbb
mov
mov
imul
adc
js
xchg
les
mov
xchg
adc
insb
push
jnp
jp
cmpsb
mov
xor
divb
mov
jle
je
mov
add
mov
dec
adcb
dec
shlb
hlt
xorb
or
sahf
xchg
mov
and
les
pop
or
in
hlt
les
cwtl
dec
mov
push
arpl
push
pop
mov
pop
aam
dec
mov
jge
mov
or
push
jb
ficompl
or
adc
stos
jmp
lahf
insl
lret
mov
xorb
jnp
insl
jecxz
sbb
or
push
in
or
scas
adc
dec
into
cmc
leave
int
mov
arpl
sbb
push
pop
xchg
cltd
aam
xchg
jnp
push
sbb
cmp
rcll
mov
sub
outsl
pop
lahf
fs
mov
hlt
mov
jmp
inc
push
pop
xlat
add
push
push
sub
and
imul
mov
dec
add
imul
cld
popf
imul
xor
rcrb
jo
test
bound
negb
xchg
cmc
or
mov
xor
std
and
imul
call
lods
sbb
jl
aam
mov
mov
je
aad
aad
xor
mov
mov
arpl
int3
rcrl
mov
les
jo
pushf
imul
pushf
fmuls
mov
add
aad
mov
std
enter
sbb
or
ljmp
shr
pushf
es
pop
adc
push
in
sbb
or
jmp
jnp
cli
sbb
hlt
xchg
repnz
mov
stos
add
mov
lcall
push
stos
sub
repz
loopne
push
ret
mov
data16
inc
adc
push
dec
xchg
mov
sbb
adc
mov
fadds
dec
ds
xchg
sub
pop
test
iret
jmp
adc
add
xchg
daa
scas
fcmovnbe
movl
into
das
xor
int
sarb
dec
fs
adc
jl
addr16
dec
mov
andb
scas
dec
dec
fmuls
adc
xchg
or
mov
pop
inc
xor
stos
cmpsb
mov
pop
jno
in
jno
outsl
std
stos
rcrl
jl
js
lcall
addr16
scas
scas
push
lock
jecxz
xchg
pop
cmp
pop
ret
loope
xor
popa
xchg
mov
mov
jbe
xchg
adc
jl
in
jmp
pop
roll
and
aas
fstpt
jmp
dec
push
push
dec
fidivrl
cmp
lock
inc
int
xlat
insl
jle
je
add
adc
sbb
cmpsl
cwtl
repz
dec
mov
inc
sub
sub
mov
inc
push
pop
inc
push
popa
loopne
mov
clc
outsl
out
sbb
jge
sti
mov
sub
xchg
stc
iret
out
jo
stos
xor
and
and
inc
adc
js
test
ror
clc
iret
mov
jmp
xchg
dec
fwait
pop
lret
mov
lds
sbb
mov
sub
xchg
pop
out
jne
jae
xchg
push
mov
in
dec
nop
movsb
mov
inc
sub
mov
je
mov
fucomip
add
mov
push
inc
js
lock
dec
test
mov
push
cmp
add
dec
jg
cmc
cltd
fucomi
int3
arpl
inc
int
inc
cmp
ret
push
cmpb
adc
sbb
in
dec
scas
sbb
dec
mov
pop
enter
jg
out
into
mov
cs
pop
pop
mov
das
mov
xchg
mov
cs
hlt
xchg
ja
mov
movsl
dec
shll
cmpsl
decb
je
aas
add
lahf
ja
mov
mov
lds
cld
or
inc
shl
mov
xchg
arpl
in
das
mov
dec
inc
xchg
push
lods
shrb
xchg
and
divb
icebp
xchg
mov
out
or
dec
and
in
int3
xchg
rcll
mov
sbbl
or
add
fadds
sub
out
xchg
lock
sub
ret
xchg
lahf
ljmp
jecxz
jo
jae
mov
adc
fdivrl
sbb
push
scas
les
lods
cmc
loope
int
lock
xchg
or
dec
adc
or
and
mov
sub
mov
mov
dec
cmp
mov
mov
mov
push
jo
fwait
sub
push
lcall
inc
and
inc
or
ds
js
fdivl
pop
adc
orl
sub
sub
aad
xorb
out
lds
mov
popa
inc
inc
sub
xchg
hlt
jp
jp
lds
and
les
mov
mov
push
outsb
mov
jmp
inc
into
ljmp
nop
mov
hlt
pop
daa
adc
cmp
sub
pop
add
lcall
dec
mov
popf
inc
push
ja
fs
into
enter
adc
out
fdivrl
cld
test
xchg
push
mov
jle
pop
dec
sbb
add
mov
cmp
pop
mov
ss
loopne
setge
gs
inc
loop
add
or
mov
or
lcall
xchg
adcl
shl
int
int3
jne
pop
ja
jge
pop
enter
dec
in
pop
mov
dec
fistps
vpshlw
mulb
fidivs
pushf
fbld
add
int3
clc
lret
dec
sbb
push
mov
outsb
loop
inc
in
fs
lods
mov
inc
dec
fcoml
mov
lcall
out
mov
scas
pop
xchg
lret
mov
fmull
add
iret
inc
adc
dec
pusha
pop
xchg
add
outsb
xchg
mov
into
test
imul
orb
testb
sub
mov
push
push
shlb
or
add
shll
les
jbe
fcomps
cmpsb
fidivs
mov
add
and
call
inc
fsubs
shlb
adc
cmpsl
sub
cmp
fcomps
sub
std
cli
repz
faddl
pop
jae
dec
sbb
sub
inc
mov
cmp
jno
mov
orb
ret
movsl
nop
pop
mov
and
mov
mov
ljmp
aaa
mov
fsubrl
or
loope
adc
loope
xchg
js
filds
insb
or
pop
jno
in
cmp
lahf
stos
icebp
jae
xor
adc
push
xchg
sbbb
xchg
movsb
in
add
or
shll
in
cld
insb
dec
stos
and
cmp
cmp
in
mov
and
xor
loope
lea
pop
sub
shll
in
es
fsubl
mov
cmp
cmp
mov
mov
adc
xor
cmp
fdivrs
orl
push
xchg
sub
addb
xchg
sbb
mov
mov
cmp
dec
jge
loopne
out
scas
rcll
push
hlt
in
inc
push
cmp
rorb
rorl
stos
test
xorb
adc
xchg
push
ret
mov
push
fsub
xor
push
int3
jb
iret
pusha
xorl
xchg
inc
das
in
inc
push
gs
xor
aas
dec
sarb
adc
pop
fisubl
loop
or
pop
out
orl
aas
inc
adc
adc
clc
inc
outsl
cmpsl
ret
sar
sub
repz
mov
fistpl
push
inc
fwait
pushf
cld
cmp
mov
jnp
test
std
inc
add
dec
test
adc
inc
sbb
sbb
adc
cmp
push
js
dec
jns
jle
imul
shlb
sti
push
scas
inc
mov
push
jecxz
enter
sub
ret
and
fldcw
mov
sbb
adc
add
pop
push
test
lock
pop
les
js
lods
in
repnz
popl
test
sub
pushw
add
dec
mov
jle
inc
add
cmp
mov
out
movsb
dec
cwtl
sbb
xor
push
mov
dec
or
fdiv
pop
xor
lock
xor
push
rorl
xchg
or
pop
dec
adc
js
fsubrl
mov
sub
mov
les
popf
add
mov
arpl
jg
cmp
gs
les
sti
inc
decb
jmp
push
xor
fidivrl
mov
std
lret
pop
or
scas
sbb
fisubl
fmulp
cmpsl
mov
pop
adc
pushf
mov
fdivrp
cmpl
aaa
lea
push
push
cli
and
out
mov
xchg
push
fdivrl
push
mov
inc
push
mov
mov
cltd
test
aam
dec
fidivs
hlt
daa
cmp
mov
out
les
jp
xor
dec
cmp
mov
dec
push
xchg
mov
mov
addr16
jb
jns
ret
mov
dec
gs
mov
shlb
lret
stos
add
out
lcall
mov
cmpsb
add
ss
in
outsb
cmp
std
cs
sbb
xchg
inc
mov
cmpsl
sarl
xchg
lea
dec
int
or
inc
je
aad
push
and
mov
nop
mov
jle
cmp
insb
ret
data16
sub
sub
add
in
add
test
dec
hlt
push
loopne
ret
push
cmp
jecxz
ficomps
mov
jl
xchg
imul
add
aaa
mov
inc
mov
xor
mov
cmp
rorl
dec
sbb
push
push
cmp
jge
inc
repnz
sbb
or
push
loopne
ret
ss
jne
rolb
or
jno
shrb
mov
mov
lds
mov
subb
or
push
mov
shll
adc
mov
xor
mov
xchg
push
or
fstpl
pop
ja
mov
jnp
orb
push
adc
test
sbb
or
jl
stos
fldl2t
xchg
push
add
pushf
popa
sub
dec
inc
outsb
fidivrl
out
aaa
sub
dec
addr16
bound
fcoms
mov
adc
inc
repnz
pop
mov
das
mov
rolb
jnp
rorb
call
aam
adc
inc
testl
test
popf
inc
sub
movsb
in
fwait
xchg
push
xchg
push
lock
xor
lock
or
dec
or
inc
jb
les
mov
aam
xor
push
enter
loop
inc
sub
jne
sub
jb
lock
stos
xchg
lock
mov
mov
fnsave
push
cmc
mov
dec
push
shll
out
xor
and
insb
jnp
mov
out
fsub
jge
sti
std
popf
mov
sbb
cmpsl
stc
push
sbb
and
cmc
add
push
dec
cmp
daa
leave
stos
add
cwtl
ss
xchg
in
cmc
mov
cmp
adc
lods
jb
imul
aas
jnp
sub
sub
ficomps
notb
mov
pop
mov
cmp
push
rcll
sbb
push
jecxz
pop
mov
cmp
mov
xchg
adc
inc
ret
mov
xchg
mov
inc
add
cmp
lds
push
jo
mov
cmp
or
or
negl
push
addr16
fcompp
push
adcb
les
jb
jmp
stc
js
sbb
ret
xchg
sub
and
fbld
cmp
scas
imul
push
cmp
popf
lahf
dec
aas
and
adc
mov
cli
dec
dec
sub
lea
loop
inc
mov
jle
out
xchg
shl
cmpsb
stos
and
out
mov
adc
dec
or
xchg
mov
dec
les
jecxz
mov
stos
dec
fiadds
ljmp
insl
aam
out
sub
sbb
not
cmp
inc
mov
loopne
or
mov
es
mov
push
add
xlat
movsb
dec
bt
cmpl
lea
xchg
push
xlat
popf
int3
rcll
push
add
lds
fcmovbe
adc
loop
addr16
adc
xchg
lock
xor
jo
popa
dec
rcrb
jl
roll
and
js
aas
fmuls
dec
mov
andb
insl
outsl
dec
or
imul
or
stos
mov
testb
xlat
cmpsl
push
and
and
int3
cmp
pop
or
sbb
enter
out
je
or
push
cmp
dec
xchg
gs
xchg
adc
jne
inc
ret
push
add
mov
jmp
fdivrs
lcall
xchg
fdivrl
fs
and
movsl
mov
sbb
cld
adcb
dec
lahf
divb
popa
push
insb
out
add
jae
jns
and
pop
jge
imul
orl
fldenv
stos
cs
insl
int
xchg
popf
je
js
pop
add
out
pop
dec
aas
xchg
mov
xlat
imul
push
lea
cltd
ret
jns
mov
daa
std
pop
arpl
adc
pushf
ss
enter
xor
adc
xor
scas
cmp
sbb
shlb
jb
stos
imul
push
enter
mov
test
mov
adc
in
add
xlat
lea
jmp
push
loope
add
push
mov
and
icebp
repnz
jmp
mov
mov
aam
loop
jb
sbb
popa
jo
xchg
mov
jle
call
test
shr
adc
mov
idivl
lahf
divl
push
push
hlt
leave
cmovno
mov
pop
cmp
arpl
subl
dec
cmp
push
jmp
sahf
lock
sbb
test
adc
insb
dec
mov
out
das
mov
sbb
adc
pop
sbb
push
lret
ds
push
imul
dec
loop
pushf
movsl
call
push
sub
jo
mov
pop
scas
push
mov
movsb
mov
lds
mov
fnstenv
inc
pop
sbbb
or
std
dec
lahf
icebp
mov
jge
test
inc
cwtl
ljmp
enter
sbb
xchg
pop
jg
inc
fnstenv
in
jmp
es
or
xchg
dec
lods
dec
add
mov
add
aas
fwait
mov
int
xchg
or
mov
cmpl
xchg
popf
test
jl
xorl
mov
scas
sub
sbb
pop
cmp
or
aas
xchg
les
mov
lds
sub
loop
and
sbb
and
xchg
enter
hlt
lahf
int
lcall
lods
jp
mov
arpl
mov
adc
pop
adc
in
ret
xorb
inc
shrb
jecxz
xchg
ret
mov
rep
inc
mov
push
push
nop
sbb
add
add
sub
stos
or
dec
dec
xchg
and
sbb
cld
cs
inc
jg
and
pop
mov
out
pop
in
fs
jae
add
inc
subb
into
imul
fldt
mov
inc
jle
push
sbb
xlat
incl
jb
addr16
int3
mov
mov
push
push
push
loope
mov
xor
mov
mov
mov
loopne
sub
sti
xchg
and
adc
call
fdiv
push
fbld
xchg
pushl
leave
jbe
scas
mov
pushf
fdivl
mov
and
pop
lods
push
insl
movsb
xchg
pop
jae
loop
cmp
jns
push
fucom
jno
dec
xchg
adc
repz
sub
inc
into
sbb
nop
mov
in
pushf
add
repnz
xchg
sbb
mov
hlt
jle
push
jge
hlt
fs
inc
insl
sahf
mov
out
mov
inc
rcll
mov
dec
sub
addr16
out
cmpsb
sti
mov
ljmp
inc
decb
mov
fidivs
inc
imul
ja
test
jg
inc
mov
inc
arpl
bound
pop
ret
inc
fcomps
mov
mov
adc
hlt
jl
jmp
xchg
xchg
outsl
adc
je
and
inc
push
push
dec
push
xor
adc
inc
ret
std
or
test
scas
inc
insl
cmpsb
ljmp
mov
pand
orl
xchg
mov
sti
out
fdivl
lea
outsb
or
cltd
lea
push
dec
sub
ja
popf
push
aaa
loopne
movsl
mov
mov
sbb
xchg
mov
adc
sub
or
testb
push
add
jae
jmp
xchg
ret
fs
xor
sub
jl
loopne
test
pusha
lea
mov
dec
sbb
add
jb
adc
sbb
test
xor
insb
jmp
add
inc
icebp
fidivrs
sub
sub
pop
repz
and
sahf
in
xor
cltd
out
test
sub
lcall
cmpsl
mov
xchg
push
ficompl
out
or
subl
call
loop
pop
sbb
shrb
fidivrl
enter
sub
dec
test
and
add
push
stos
add
fistpll
negl
or
mulb
dec
movsb
jo
outsl
aad
add
aam
cmpsb
mov
addl
push
nop
lods
push
push
dec
mul
cmp
pushl
jno
fwait
push
or
out
jg
imul
ficoms
push
jbe
into
lds
xchg
jmp
lahf
aas
mov
cld
sbbl
and
popf
int3
cmp
pop
imul
and
sbb
adcb
sub
jne
shll
test
jg
push
gs
fs
scas
jb
xor
and
ljmp
test
sbb
adc
cmc
bound
sbb
imul
popf
cli
push
popa
xor
es
jno
sub
jbe
jo
mov
addl
xor
and
jb
test
pop
add
add
mov
jle
lock
ficompl
adc
or
jle
pinsrw
push
pop
pop
orb
sub
sbb
or
cld
int
fstp
in
int3
std
mov
lods
mov
pop
insl
dec
jge
or
or
cld
int
fstp
in
int3
std
mov
lods
mov
fsubrl
jge
or
mov
fsubr
int3
cld
mov
lods
mov
pop
insl
dec
jge
or
or
cld
int
ja
in
int3
mov
add
cld
inc
push
mov
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
lea
push
pushl
call
lea
push
pushl
call
jmp
call
push
mov
call
xor
leave
ret
inc
jb
bound
jo
add
bound
add
mov
loopne
lock
nop
mov
and
push
bound
jo
add
adc
and
xor
repnz
adc
nop
mov
clc
jb
push
test
push
xor
adc
add
xchg
lods
jmp
loop
hlt
imul
cmc
cs
pusha
add
daa
add
adc
cli
adc
pop
xchg
push
mov
cmp
inc
lods
jb
jb
cmp
iret
and
mov
loop
sbb
jg
int3
stc
mov
bound
test
jg
in
sub
add
xchg
repnz
cmc
aam
cmp
push
cmp
inc
pushf
adc
xor
and
sbb
loop
push
rcrb
jg
nop
inc
mov
mov
popf
inc
lods
in
dec
cld
mov
mov
mul
sub
nop
mov
cli
mov
je
in
mov
jge
test
repz
imul
mov
sbb
bound
jo
in
push
add
repnz
loop
rol
ret
lcall
jb
sbb
or
outsl
jne
push
push
ja
jbe
addb
repnz
in
loopne
out
push
xor
and
jne
aad
gs
xchg
adcb
xlat
pushl
div
sub
cmp
add
and
push
add
and
adc
add
repnz
loopne
lock
nop
mov
inc
jb
bound
jo
add
adc
and
xor
shl
loop
shl
ret
nop
mov
inc
jb
dec
mov
outsl
jmp
loope
mov
push
sub
cli
jno
mov
xchg
sbb
in
xlat
pop
lret
scas
out
dec
pop
mov
sbb
ret
lret
sub
mov
enter
push
js
scas
movsb
mov
movsl
notl
sbb
sub
insl
adc
pop
stos
mov
mov
inc
inc
js
jae
popa
jecxz
aaa
pop
sbbl
inc
jmp
sbb
js
lret
cmp
cli
pop
sub
sub
int3
or
or
sahf
movsl
loope
aad
int
out
add
call
std
push
push
and
icebp
mov
xchg
loope
test
dec
push
jge
scas
std
xchg
push
xor
pop
sti
jecxz
lea
push
outsb
lods
adc
pop
nop
mov
mov
stos
pop
daa
mov
or
sbb
pushf
mov
iret
mov
jae
arpl
popa
fsts
out
sub
push
imul
in
test
fstl
dec
and
ja
mov
jg
les
orb
scas
xchg
push
stos
xor
dec
aad
or
adc
push
cmp
and
sub
in
int3
aas
pop
stos
iret
lods
mov
pop
lea
jb
lods
push
mov
add
rorl
and
rcrb
pop
xor
mov
arpl
mov
adc
call
or
jnp
lea
lcall
lock
aad
pushw
sub
add
mov
jae
xor
popa
aas
mov
xor
clc
sub
push
push
js
xor
movsb
xchg
dec
gs
sahf
mov
std
loope
push
lods
mov
aas
pop
cmpl
lds
xchg
pop
mov
sbb
mov
mov
xchg
imul
pop
and
arpl
lret
inc
xchg
push
jno
pop
in
mov
cmp
rcl
xchg
mov
addl
mov
sbb
ja
test
push
test
fstp
int3
and
jmp
imul
sbb
mov
mov
sub
ds
loope
std
xchg
jg
pusha
ret
fcomi
pop
xchg
and
xchg
push
jno
mov
and
inc
adc
ret
mov
int
jne
repnz
mov
sbb
push
stc
xchg
adc
pushf
std
mov
enter
mov
shlb
fsubs
or
mov
dec
call
fs
xchg
lods
dec
pop
jecxz
mov
add
mov
in
inc
ret
aaa
sub
push
mov
cmp
aas
and
cli
pop
jae
jnp
mov
andb
sbb
push
mov
xchg
mov
mov
cld
cmp
xchg
rorb
dec
xchg
shll
sub
mov
jns
or
xchg
mov
in
les
pusha
les
adc
pop
cmp
cmp
sub
sub
push
cmp
inc
stos
pop
mov
cmp
xor
push
data16
xchg
jge
lods
mov
add
aad
add
fstl
jp
mov
pushf
fdivl
mov
mov
stos
test
leave
push
aas
mov
push
mov
scas
push
lahf
addl
fisttpll
push
pop
outsb
outsb
cld
inc
adc
aaa
out
in
adc
xchg
mov
and
adc
into
rolb
std
jmp
adcb
xchg
leave
inc
add
lcall
xor
cmp
jns
leave
pop
push
arpl
jne
inc
fcompl
call
add
xor
cltd
mov
adc
movsb
ss
xchg
inc
outsl
cld
xor
sbb
std
inc
mov
pop
inc
in
lock
sbb
shr
cli
movsl
and
test
iret
dec
out
fs
cmp
daa
daa
jne
lret
inc
aaa
mov
outsl
mov
or
and
int
fdivr
mov
out
jbe
jmp
and
mov
fs
test
scas
mov
cli
cmpsb
repnz
pop
xor
and
jp
vcvttsd2si
imul
push
xor
sub
ss
or
sbbl
imul
lea
jge
inc
loope
mov
pop
enter
movsb
out
sub
fcompl
dec
shrb
test
in
mov
jnp
xor
outsl
loope
jb
mov
jg
imul
jl
fcomps
cltd
in
lea
ffreep
jmp
inc
imul
leave
inc
inc
mov
cli
pop
int
xchg
aam
sub
inc
in
or
push
nop
add
xlat
mov
js
aad
sub
cmpsb
imul
xor
ss
or
cli
mov
popa
xchg
adc
add
inc
push
adc
in
push
js
sub
jp
lock
add
cwtl
xor
inc
and
inc
aam
pop
cmpb
mov
lcall
xchg
scas
sbb
lahf
fsubs
call
mov
ja
add
jo
xor
push
dec
cmp
out
es
sti
data16
mov
mov
and
insb
xor
rcr
pop
fstpl
sbb
sbb
lahf
and
ret
sbb
sub
lret
dec
fadds
pusha
push
add
shl
xchg
mov
or
fisttps
imul
je
ret
popa
xchg
les
jecxz
pop
repz
jb
movsl
jns
rcl
jne
xchg
add
xor
cmc
inc
rorl
jge
cwtl
inc
out
add
add
pop
fwait
sbb
jbe
leave
stos
lock
inc
xchg
std
xor
mov
out
test
inc
sbb
pop
loopne
push
xchg
cmpsl
mov
jnp
cmpsb
enter
out
mov
or
pop
into
add
mov
dec
push
dec
mov
inc
out
fidivs
mov
jb
stos
in
jnp
mov
ss
fsts
cltd
leave
dec
xchg
loopne
repz
mov
loope
adc
popa
lcall
pusha
mov
inc
xchg
or
mov
gs
dec
inc
mov
push
repnz
fisttpll
mov
cmpsl
add
mov
add
sbb
cltd
es
imulb
sbb
fcoml
shl
mov
popa
dec
insb
repz
decl
adc
push
sbb
mov
hlt
add
jp
push
ljmp
fdivrp
loop
mov
mov
cwtl
pop
lret
cmp
inc
mov
cld
mov
testl
inc
pushf
outsb
lock
nop
jp
cs
pop
sbb
xchg
in
jp
in
fxch
into
dec
jmp
jae
xchg
fisubrs
mov
outsl
les
mov
mov
stc
sub
into
push
lcall
push
shlb
pushf
into
sub
call
sbb
nop
shrl
cmpsl
or
vzeroall
icebp
stos
dec
imul
sub
out
mov
pusha
mov
xor
movl
sti
ljmp
cmp
pop
loop
imul
xchg
add
dec
in
pop
pop
jmp
add
jg
repz
subb
pop
mov
cmp
imul
mov
cli
shrb
cs
test
push
push
xor
ja
push
rorb
push
test
sbb
sbb
loop
lret
inc
out
je
mov
push
incb
mov
clc
sbb
ds
lcall
xchg
ja
mov
mov
dec
into
and
xor
orl
cmp
mov
js
daa
or
outsl
mov
stos
and
inc
dec
cmp
cli
sbb
mov
enter
icebp
f2xm1
fs
out
dec
cld
push
insb
mov
int3
pop
in
jno
and
sub
pop
push
sbb
repnz
push
clc
add
jp
clc
mov
xor
mov
lcall
cmp
jns
test
xor
sarb
jl
mov
sarl
push
mov
xchg
nop
and
inc
inc
jnp
push
adc
cwtl
pop
sub
mov
or
xchg
sbb
inc
push
push
loope
sahf
std
mov
dec
dec
or
fimuls
add
cs
das
ss
cmp
inc
or
dec
jp
and
subl
xchg
sbb
lret
pushf
pop
loopne
fwait
out
enter
push
ds
fimuls
mov
jge
ss
in
call
loope
inc
loope
das
xchg
pop
je
icebp
dec
push
cmp
outsl
lods
icebp
add
and
sub
lods
inc
das
jae
addr16
bound
andb
fcmovnu
fsubrs
jnp
push
mov
inc
call
mov
and
rorl
mov
outsb
pop
and
jp
stos
mov
inc
mov
and
gs
and
mov
pop
push
sti
bswap
add
add
imul
stc
xchg
pop
add
or
adc
ja
sti
imul
outsl
sub
hlt
jno
mov
pop
inc
sbb
adc
lcall
cli
sub
lahf
cmp
jbe
imul
mov
push
popa
sar
gs
roll
mov
cwtl
xchg
rcrb
sub
jns
cmp
negb
je
pop
xchg
xlat
add
jne
dec
in
mov
xlat
in
mov
cmpsb
mov
sub
movsb
cmpsl
lds
fwait
addr16
icebp
and
js
mov
jo
cmp
sbb
jecxz
stc
add
shrl
push
jns
lcall
into
cld
sbb
loopne
cmp
push
adc
fnstcw
xor
xchg
aad
leave
push
xchg
and
push
jmp
adc
test
mov
inc
dec
in
xlat
dec
daa
cwtl
inc
ret
push
daa
lods
std
dec
fisubrl
cwtl
mov
push
xchg
mov
lret
insb
scas
adc
inc
mov
loopne
mov
in
pop
test
push
jnp
pop
std
clc
cmp
add
clc
inc
imul
jmp
repnz
lods
rcr
cmp
lahf
lret
movsl
mov
rol
rcll
fcomi
lods
cmp
xchg
xorb
or
shll
add
dec
pop
ret
bound
mov
ss
xchg
repnz
loopne
adc
xchg
mov
pusha
mov
pop
jle
mov
push
pop
dec
push
mov
out
les
mov
test
lcall
mov
std
loop
faddl
pop
sbb
cmovo
push
and
lock
jmp
repnz
pop
mov
jge
imul
gs
decl
push
out
dec
mov
cmp
pop
adc
add
test
push
jne
mov
push
sbb
call
push
pop
ret
repz
pop
sub
or
mov
cmp
jge
and
xlat
jae
lahf
in
jp
in
leave
test
jno
mov
pop
fadd
test
jg
iret
push
or
fwait
xor
lahf
cmp
stos
nop
movsl
shll
insb
iret
decl
xor
mov
inc
call
mov
jno
cld
pop
pop
faddl
fdivs
push
cmp
mov
jmp
cmp
sbb
repnz
push
arpl
and
push
je
xchg
mov
add
and
jno
push
and
push
push
or
pop
sub
xchg
arpl
sbb
or
loope
jo
imul
insl
loop
jl
adc
jge
stos
addb
in
pop
sub
sub
fidivrs
lods
xchg
or
sbb
mov
enter
imul
sbb
pop
push
pop
cmp
or
push
cli
adc
push
cmp
mov
xchg
mov
sbb
mov
pop
sbb
test
mov
ss
push
mov
adc
jl
cmc
push
loope
add
cmp
jbe
sub
push
mov
std
fnstsw
jno
xchg
nop
out
push
loope
inc
dec
orl
xchg
into
push
shlb
xchg
inc
jle
ret
or
sbb
jb
ficoms
mov
dec
adc
rorb
pop
and
lea
sub
jp
aad
hlt
mov
push
add
js
mov
hlt
ret
inc
add
int3
cwtl
out
cmpsb
adc
or
aam
mov
nop
flds
pop
xchg
jo
and
and
jecxz
sahf
sar
loope
pop
xchg
stos
xchg
jns
add
mov
jbe
adc
xchg
adc
or
push
or
cmc
and
aas
loope
pop
dec
repz
rcrb
or
in
popf
adc
leave
in
mov
adc
shlb
xchg
dec
adc
mov
stos
and
push
lea
xchg
iret
gs
lods
push
pop
or
sub
int
outsb
mov
int
jnp
jecxz
lods
sub
or
mov
ljmp
popa
jae
popf
push
cmp
adc
mov
mov
hlt
in
cmp
mov
lods
xlat
cli
out
out
sbb
jo
sub
pop
xor
push
call
jl
mov
pop
adc
call
push
jp
out
mov
lea
sub
cmp
mov
in
push
jecxz
mov
cmpsl
pop
jmp
aas
daa
push
stos
xor
push
xor
adc
mov
dec
adc
pushf
icebp
mov
lea
sub
in
xchg
paddq
xchg
and
cld
loopne
mov
es
add
gs
push
or
out
cmpsb
or
adc
int
cmc
inc
cld
loope
mov
ja
push
in
sub
cmc
lock
mov
pushf
loopne
loopne
fnstsw
rorb
xor
mov
loope
vxorps
arpl
out
add
inc
or
je
inc
pop
loope
popa
je
shlb
gs
add
pop
or
adc
lea
xchg
insl
mov
es
inc
popa
popf
push
stos
shr
mov
or
or
inc
xchg
popf
clc
or
lcall
mov
mov
lcall
dec
mov
inc
arpl
ja
fstps
cmc
sub
mov
cmpsl
ljmp
int3
fistpl
inc
jmp
in
lods
imul
jb
rorb
loope
loopne
pop
dec
adc
cli
xor
cmp
sub
adc
sbb
pop
mov
les
push
lods
bound
rep
cmp
dec
fs
add
xor
xchg
ljmp
xchg
push
sub
or
mov
sub
push
cmp
sub
fistpl
add
loope
inc
dec
std
fistl
dec
mov
dec
sarb
mov
ljmp
mov
fucomip
stos
mov
jns
lcall
sti
pop
cmp
inc
in
xchg
outsl
cwtl
repz
cltd
stos
ljmp
scas
mov
sub
push
mov
dec
sahf
std
sbb
fs
xchg
ja
jns
mov
pop
jl
popa
adc
or
lods
pop
or
jno
add
in
mov
mov
add
ror
cmp
pop
scas
xchg
ljmp
cmp
shl
push
shrl
sbb
push
cwtl
mov
faddl
xchg
shll
sub
or
icebp
lea
ret
dec
scas
fcomps
pop
jnp
adc
xor
es
xor
cli
aaa
push
and
xor
dec
jns
jnp
pop
mov
cmpb
clc
mov
xchg
xor
aam
call
or
mov
or
stos
inc
sub
fidivs
dec
cmp
push
pushf
loope
cmpsl
add
ja
xchg
das
cli
adc
push
aas
or
insb
jl
xor
cmp
stos
sarb
mov
mov
dec
or
in
loope
out
xchg
cmpsb
sti
mov
inc
pop
mov
sub
cmp
inc
lods
xor
rcr
fisubrs
dec
in
add
out
decl
cmp
adc
push
call
test
adc
stc
add
stos
push
push
mov
or
sub
dec
repnz
test
inc
jnp
std
xlat
and
mov
add
mov
and
mov
scas
inc
jp
lods
pusha
push
or
jl
xor
int3
out
mov
enter
cmp
jb
les
and
fwait
and
mov
sub
dec
daa
rolb
cmp
lret
xchg
lods
cmp
push
push
xor
or
jge
hlt
movsl
dec
xor
cwtl
mov
xor
mov
xchg
mov
add
jle
dec
xchg
andl
jg
in
fwait
adc
add
mov
jp
push
fdiv
mov
add
clc
imul
test
sti
cld
xor
mov
mov
sbb
push
popa
or
das
addb
dec
jle
imul
pop
cmpsl
mov
fcoml
pop
cmc
out
daa
rep
sbb
in
push
aam
pop
mov
xor
mov
push
insl
loopne
js
insb
dec
call
mov
cs
dec
and
add
jle
cltd
fdivl
rorb
sub
fidivs
xchg
lcall
sbb
xchg
fiadds
xchg
lock
inc
sbb
faddl
and
jae
adc
fs
xor
outsl
andb
add
push
push
pop
out
sti
out
dec
subb
rcr
dec
insb
mov
sti
roll
les
mov
sub
subb
add
adc
pop
out
dec
jp
pushf
add
mov
jb
pop
and
inc
out
aas
aaa
sub
repz
repnz
xchg
and
mov
push
shlb
jns
add
in
test
daa
adc
push
jl
outsl
fadds
fnsave
in
mov
jbe
mov
jbe
lods
xor
pop
pop
cwtl
fsubl
adc
shl
mov
std
xor
cmp
call
mov
repz
hlt
jb
filds
cld
repnz
cwtl
inc
add
adc
xlat
fs
jle
fstps
cmc
or
ja
in
pop
and
fistpll
fisttps
out
iret
xchg
push
cmp
dec
cmp
xchg
pop
jmp
jo
xlat
pushf
dec
xchg
sub
outsl
mov
lea
jl
lods
insl
in
xchg
dec
sub
cmc
mov
pop
mov
sub
in
pop
push
push
repz
inc
sub
std
mov
scas
clc
jno
in
adc
or
es
mov
push
or
aaa
xchg
adc
sbb
in
jecxz
pop
fistpll
repz
mov
movsl
sahf
test
mov
pop
push
jp
push
sbb
lahf
cwtl
leave
sti
out
or
dec
mov
push
lret
scas
lret
jmp
or
int
and
aam
adc
and
or
mov
mov
push
xchg
stos
cmp
sbb
mov
lods
lods
cs
adc
adc
add
push
scas
dec
ss
inc
in
mov
fadd
inc
pop
jge
jle
or
sub
xchg
push
xor
pop
call
xlat
repnz
or
mov
mov
cmpsl
inc
sbb
lods
fnsave
sub
pop
loope
and
testl
das
aad
inc
int3
cld
cmp
xchg
xchg
jle
pop
or
stos
jbe
inc
xchg
daa
fisttps
or
adc
sub
jb
cmp
mov
frstor
or
out
pusha
insb
and
outsl
inc
fstl
fcomip
sahf
sbb
add
sub
inc
sub
ja
inc
hlt
sbb
pop
lret
push
aad
aas
fimull
leave
adc
decl
lahf
mov
out
out
mov
jl
pushf
push
cmpsl
cmp
cmpsb
out
and
cwtl
fidivrl
into
sbb
mov
lcall
mov
xchg
fcomip
cmc
fidivrl
push
mov
hlt
loopne
test
pusha
push
cli
push
inc
xor
sbb
cli
mov
push
sti
sbb
es
adc
mov
mov
cmc
daa
in
mov
sbb
fnstsw
adc
adc
in
jns
and
adc
clc
dec
movsb
and
popa
add
sbb
les
or
aas
cmp
mov
jmp
movsl
sub
rorb
add
pushf
test
cmp
repz
sub
outsl
cmc
push
ret
cltd
loope
xchg
add
adc
push
and
mov
outsl
or
pop
out
sub
cli
jno
lods
inc
inc
sbb
test
add
jae
and
xor
xlat
outsb
xchg
ret
lock
mov
aaa
enter
mov
nop
sbb
sub
std
xchg
xlat
mov
mov
mov
jmp
sub
pop
jnp
mov
mov
shll
lods
xchg
fs
adc
mov
fcoml
jecxz
imul
out
xchg
fs
int
bound
push
jo
add
adc
and
xor
shl
loop
shl
ret
nop
mov
inc
jb
bound
jo
add
adc
and
xor
shl
loop
shl
ret
nop
mov
inc
jb
bound
push
jo
nop
xor
and
adc
add
repnz
adc
lock
andb
jb
bound
push
push
inc
add
add
and
mov
shl
dec
dec
shl
mov
cmp
pop
pop
insl
dec
jge
mov
sub
movl
movl
movl
movl
cmpl
jne
pushl
call
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
inc
sahf
push
lret
jbe
or
stos
inc
ficoml
add
or
sub
jp
push
lcall
push
ficoml
lret
ss
sbb
or
je
dec
cmpsb
jp
push
cmp
dec
data16
push
ljmp
sbb
sub
or
sub
or
push
pmaxub
adc
aad
xor
xchg
or
js,pn
rorl
mulb
int
ljmp
iret
xchg
inc
sub
in
imulb
jae
jns
adcl
repnz
scas
jecxz
pop
pop
ss
xor
fdivs
sbb
pushf
aam
test
jbe
add
imull
fdivrs
pop
addr16
lahf
ljmp
inc
cmpsb
test
or
dec
push
mov
cmp
push
cmp
pop
neg
jg
or
xchg
pop
inc
sub
jne
iret
xchg
jp
xchg
xlat
cmp
mov
pop
push
in
mov
mov
xchg
fiadds
sbb
push
stos
data16
jbe
push
ficoml
lret
ss
sbb
mov
xchg
movsb
cmpsb
bound
in
adc
push
pop
cmpsl
inc
ja
xchg
jp
lahf
lcall
push
loop
inc
fsubl
ss
adc
inc
mov
es
fldenv
push
ret
pop
mov
das
jmp
ja
push
xchg
push
lret
ss
imulb
xchg
dec
cmpsb
jp
push
lcall
push
ficoml
lret
ss
imulb
xchg
dec
cmpsb
jp
push
lcall
fdivrl
adc
dec
scas
ss
mov
pop
lods
fbld
jne
decl
popa
lahf
test
mov
dec
push
es
mov
lds
push
sub
adc
jbe
xchg
add
jbe
fwait
dec
stc
ret
shlb
insl
ret
inc
popf
xchg
filds
aad
fstps
cmpsl
or
jnp
xchg
and
lcall
fdivrl
cmp
je
jne
aad
insb
lods
inc
sbb
loopne
clc
mov
ss
scas
jecxz
shll
stos
jnp
aas
cmp
stos
psubusb
push
push
pop
xlat
jo
mov
mov
mov
in
and
adc
mov
jne
dec
dec
push
pop
jnp
lret
ds
push
lea
cmp
xor
clc
les
mov
cwtl
xchg
cwtl
sub
mov
fmull
insb
adc
lock
pop
add
fwait
mov
add
and
loopne
or
xchg
mov
incb
enter
aas
in
dec
and
in
dec
lret
and
or
std
inc
dec
call
add
repz
cmc
jl
or
fimuls
dec
lods
ss
mov
adc
xor
mov
mov
mov
fsubr
sbb
mov
js
outsl
sub
popf
test
orb
pop
clc
movsl
inc
call
enter
and
add
sbbl
lods
inc
lock
push
flds
imul
cmp
aad
jns
stc
xchg
fdivr
add
adc
mov
and
inc
lods
sbb
ljmp
sub
data16
jb
pop
xor
sub
lea
push
inc
test
insb
aam
xor
jl
loopne
test
rcrb
xchg
std
enter
out
aam
mov
xchg
sbb
jg
push
out
loopne
sahf
cmc
and
fwait
sbb
add
outsl
out
arpl
call
arpl
nop
outsl
aam
push
je
dec
stos
aaa
in
xor
dec
push
xor
shl
clc
aas
sbbl
repnz
jle
push
mov
mov
and
cltd
bound
aad
aam
data16
cmp
mov
inc
pop
and
inc
adc
or
jae
adc
in
sbb
fdivs
repnz
xor
leave
mov
cs
sub
mov
or
ret
pop
mov
popl
pushf
mov
cmp
dec
lcall
dec
inc
aas
lods
mov
andl
cltd
cltd
pop
push
inc
sbb
pop
jae
add
sahf
xchg
ljmp
push
push
repz
sar
jbe
sti
pop
cmc
loopne
mov
xchg
or
mov
les
jle
sub
leave
jbe
aas
in
sahf
mov
insb
add
ffree
xchg
lcall
outsb
xchg
inc
testl
or
jecxz
cmp
pop
enter
sbb
stos
rcr
cmp
iret
stos
movswl
es
outsb
mov
and
sub
sub
hlt
lock
xor
sub
mov
adc
rep
pop
xchg
lock
cmp
mov
stc
dec
sub
rcll
xchg
cltd
adc
sar
sbb
pop
or
sahf
xor
and
inc
inc
and
sub
push
or
jne
popa
or
aam
out
andb
cmp
ret
add
jnp
dec
and
sbbl
movsl
jmp
and
xchg
xchg
test
jb
cmpsl
sbb
repz
rcrl
jle
loop
ficoms
outsl
cmp
mov
stos
insl
lcall
ror
pop
mov
rcr
in
add
mov
xchg
sub
mov
push
repz
mov
je
fildll
sti
cmp
push
scas
in
rclb
stc
dec
fmul
mov
mov
jns
mov
jp
fistpl
dec
sbb
pop
orb
jle
jns
shr
ret
mov
ljmp
xor
and
cmp
sub
mov
scas
aad
rclb
cmpb
push
add
jl
ja
and
jno
in
jmp
inc
enter
xor
scas
lret
pop
imul
rclb
adc
repz
xchg
ret
jg
shl
repz
rcrl
add
dec
sub
add
ret
shl
inc
cmp
sete
sbb
pop
adc
lgs
sbb
dec
sbb
sti
add
faddp
jmp
cmp
push
pop
js
xor
testb
or
inc
aam
or
dec
mov
sbb
loop
dec
ljmp
inc
movsl
mov
xchg
mov
add
leave
pushf
sbb
fistpll
dec
mov
xor
mov
sub
jg
push
push
xor
movsb
cmp
mov
cmpsl
jge
push
add
sub
pop
sbb
fsubrs
lret
sbb
add
insb
and
lods
sub
xor
add
outsb
jno
xorb
xlat
push
mov
dec
dec
lock
mov
sub
ds
cmp
imul
sbb
or
sub
jle
jne
mov
mov
jge
scas
movsb
lret
enter
or
pop
inc
add
pcmpgtb
mov
pop
mov
and
mov
pushf
je
inc
imul
fwait
test
push
test
mov
jb
jae
leave
pop
push
or
cmp
and
jae
adc
popf
test
shrl
push
and
mov
jnp
and
add
movsl
mov
gs
cld
stos
scas
pop
test
aam
pop
lahf
data16
sub
pop
push
mov
dec
pop
or
adc
int
dec
dec
push
or
pop
jns
ret
push
pop
outsl
loope
push
sbb
cmp
pop
pushw
dec
fstps
lods
jb
scas
jg
xor
cltd
out
jne
xchg
jo
pop
outsb
xor
adc
mov
and
popa
push
mov
mov
adc
rcrl
mov
cmp
movsl
call
leave
shl
inc
into
cwtl
pop
lock
sbb
jns
push
adc
dec
movsl
scas
aad
and
fisubl
cli
mov
enter
mov
fistl
xchg
push
ds
cmp
add
inc
xor
je
mov
iret
aaa
outsl
lods
das
mov
ja
into
scas
jb
and
fwait
push
push
test
lret
sarl
fstps
int
cld
outsl
and
fidivs
push
icebp
cli
call
push
jmp
adc
out
jp
inc
icebp
mov
and
and
push
test
pop
xor
pop
mov
mov
mov
gs
daa
test
mov
adc
lret
bound
mov
addr16
test
mov
mov
ja
int3
sbb
cmp
mov
cmp
push
mov
push
pop
push
fs
divl
std
daa
inc
fadds
jle
cwtl
mov
push
leave
mov
push
out
cli
ret
cli
stos
jecxz
lret
and
mov
push
and
xchg
lea
xchg
addl
loopne
cli
cld
inc
hlt
add
dec
in
jl
mov
jbe
pushf
popa
ficoms
jle
jmp
inc
insl
mov
les
adc
pop
mov
insl
pop
pop
dec
aas
mov
cltd
out
popa
inc
xchg
mov
das
cmc
rcrl
lods
int3
mov
cmp
sbb
xlat
push
daa
dec
addl
inc
cltd
pop
stos
ds
stc
xchg
jmp
pop
orl
xchg
movsl
jb
add
mov
hlt
cmp
adcl
mov
sub
sub
and
bound
stos
bound
lock
arpl
dec
jecxz
popf
pushf
negb
movsb
addb
loop
shrb
mov
sbb
mov
adc
cmp
fisttpll
fcoms
jmp
cmpsl
cmpsb
pop
jmp
mov
js
subb
outsb
out
mov
jecxz
jae
pop
xchg
mov
mov
test
pushl
sbb
or
jg
add
in
xchg
ljmp
jg
rolb
in
mov
ret
jmp
decb
fs
movsl
mov
mov
js
pop
adc
jecxz
mov
in
stos
lret
push
movb
cmpsb
mov
sbb
dec
icebp
test
mov
in
cmpsl
adc
mov
lds
push
insl
adc
addl
cmp
mov
leave
pop
xchg
lods
out
sub
jb
push
and
cmp
adc
lds
cmp
xchg
sub
mov
mov
cmpsl
addb
scas
adc
dec
xchg
pop
mov
push
in
dec
and
xor
dec
rorb
nop
jge
icebp
loop
arpl
mov
jne
fdivrp
push
cld
out
repz
cmp
adc
outsb
push
adc
enter
test
icebp
sbb
xor
out
cmp
dec
jbe
outsb
idiv
cmpsb
shlb
lds
xchg
xor
mov
pop
movsb
xchg
div
in
js
mov
or
xchg
mov
pop
ret
in
in
add
xchg
rcrb
mov
mov
scas
pop
ret
cmp
inc
inc
mov
fdivr
xchg
sbb
stc
shlb
adc
gs
push
stos
ss
xor
dec
int
inc
dec
adc
jge
test
xor
loopne
iret
xor
js
movsb
xor
jge
mov
and
push
or
push
xor
and
or
xchg
dec
or
lret
enter
cmc
mov
push
pop
pusha
orl
popa
jae
inc
cmpsl
ret
inc
dec
in
add
hlt
mov
mov
dec
dec
add
hlt
int
into
gs
mov
lret
shl
pop
add
call
call
mov
and
dec
loop
add
ds
cld
dec
imul
dec
je
mov
mov
pop
dec
testb
inc
in
pop
and
add
mov
loopne
movsb
sbb
pop
cmpsl
push
dec
gs
cli
inc
xor
xchg
jmp
push
arpl
cmpsl
popf
cmp
lock
je
mov
jnp
fwait
cmpsl
sbb
jecxz
dec
push
sub
std
in
icebp
dec
mov
ds
test
fldcw
je
pop
mov
gs
push
outsb
std
movsl
imul
dec
sub
test
adc
adc
sbb
es
mov
mov
push
ljmp
scas
loope
rorl
test
or
lret
jle
in
xlat
aad
int
shlb
xor
and
dec
jle
cltd
ljmp
into
fcoml
out
popf
jne
dec
out
xchg
leave
mov
stos
js
xchg
xchg
jge
sbb
jp
pop
push
int
iret
push
out
sbb
rolb
sbb
popf
xor
loop
aas
fidivl
aam
mov
bound
les
js
cmp
mov
pop
rolb
mov
sub
push
and
gs
dec
pop
ds
arpl
lock
lret
sarl
ds
jne
iret
cmp
lods
test
xchg
bound
mov
dec
fs
jmp
push
aaa
add
mov
sbb
fidivrs
sahf
pop
in
xchg
aad
pop
pop
mov
jnp
lds
repnz
adc
es
cli
dec
mov
cmp
push
mov
mov
or
inc
lods
mov
jecxz
es
out
and
push
mov
jb
jnp
lods
pop
arpl
cld
push
mov
xchg
adc
jb
nop
inc
popa
adc
mov
inc
add
lret
pop
push
je
mov
pop
sbb
decl
jle
or
ret
add
jmp
into
add
sbb
pop
pop
lret
sti
mov
and
imul
xor
orb
sub
je
iret
notb
jmp
cmp
pop
pop
jmp
mov
push
inc
xchg
bound
dec
loope
mov
cmp
cwtl
stos
rorb
aam
cld
mov
fnstcw
sahf
je
sub
cmp
adc
push
shlb
dec
movsb
lret
adc
sbb
cmp
mov
loopne
leave
or
dec
or
pop
mov
stc
ret
add
push
cld
xchg
shll
mov
pop
xor
ret
rcrl
test
popa
push
pop
es
jp
pop
stos
lock
push
test
mov
mov
and
mov
int
cmp
cli
into
std
cmp
lret
mov
pop
mov
inc
and
cltd
cmp
and
fdivl
pop
mov
scas
scas
outsb
lret
mov
in
lock
int3
and
das
push
jmp
cmp
pop
outsl
fadds
aad
shrb
jecxz
dec
dec
add
sub
cmp
fnsave
imul
insl
jne
xchg
mov
int3
sti
pusha
push
inc
subl
aaa
adc
jge
mov
das
jne
pop
mov
arpl
jmp
ret
lret
cmp
cwtl
punpckldq
sub
mov
lods
jp
mov
sub
test
sbb
or
lea
popf
pop
inc
cmpsb
enter
ds
inc
data16
cmpsb
pop
adcb
mov
lea
int3
daa
cwtl
sbb
in
pop
add
fmul
call
scas
inc
xor
jae
xor
add
cld
pop
stos
shrb
mov
xor
cmp
sub
add
scas
push
adc
sub
orl
mov
cmp
jb
jnp
mov
in
mov
pop
test
nop
push
fdiv
push
je
xor
dec
xchg
imul
divl
out
jbe
mov
adc
pop
mov
mulb
and
push
push
into
nop
cmp
inc
pop
jb
push
or
fcmovu
and
repnz
cli
data16
xchg
in
fldt
and
push
test
int
mov
lret
sbb
test
sbb
out
sbb
movsl
jg
popa
ss
orl
push
push
addr16
xchg
mov
xchg
push
mov
pop
mov
adc
fnsave
fldt
addl
sbbb
fbld
imul
out
dec
sbb
repnz
lret
pop
mov
filds
lfs
in
push
fimuls
cmpsb
into
push
les
sbb
call
das
push
xchg
dec
daa
ret
push
inc
mov
mov
inc
lcall
cmp
int3
fnsave
pop
dec
aad
cmpsb
xlat
imul
adc
loope
mov
lret
mov
sbb
xor
mov
sbb
sbb
sub
fildl
iret
lret
movsb
das
and
arpl
lcall
inc
and
push
movsb
cld
mov
lds
test
inc
mov
test
jl
in
push
adc
xchg
sbb
lods
xchg
xor
popf
movsb
sbb
insb
pop
mov
bound
cmc
cmp
mov
fdivp
cmpsb
xchg
fs
arpl
sbb
or
clc
test
movsb
or
stc
xchg
addb
sub
insb
mov
shlb
aam
gs
sarb
les
or
arpl
push
mov
add
pushl
add
mov
push
dec
shrl
jp
xchg
int
dec
push
orb
mov
stc
mov
mov
sti
lahf
mov
lds
push
mov
mov
pusha
lahf
rclb
mov
ret
xor
insl
adc
pop
mov
push
aas
xor
and
call
cmp
sub
sub
mov
xchg
imulb
mov
cli
jecxz
aas
or
int
mov
and
lret
push
icebp
cmpsb
mov
nop
lcall
enter
imul
test
dec
sub
add
jg
out
inc
sub
mov
mov
xchg
push
xchg
xor
push
popa
xor
sub
addr16
xchg
iret
ss
adc
arpl
push
loopne
arpl
lret
and
inc
cmp
ret
dec
fisubs
ss
xor
aaa
je
adc
scas
stc
pusha
xchg
bound
cwtl
into
sub
lret
out
or
pop
aaa
pop
jo
push
pusha
lret
popf
jo
mov
xlat
mov
mov
dec
sbb
vcvttss2si
jg
mov
lcall
xchg
inc
mov
adc
shlb
imul
sbb
lock
outsb
jg
aaa
pop
mov
outsl
and
outsb
mov
fisubrs
jno
repnz
xchg
out
sarl
jnp
fsubp
inc
mov
insb
pop
push
cld
mov
sbb
jb
jp
and
pushf
mov
xor
jae
fucompp
mov
call
orb
aas
dec
add
je
pop
lds
leave
mov
jecxz
sbb
rep
rclb
mov
cmpsl
movntq
test
lea
push
fwait
cmp
push
pop
or
mov
sarl
pop
jg
stc
daa
or
rcll
fdivl
rcrl
inc
push
into
pop
lea
ret
lea
int3
movsl
mov
stos
push
inc
jg
loop
xor
dec
cmpsl
xchg
cli
dec
mov
push
jp
add
mov
cli
and
cwtl
js
pusha
fistl
mov
out
cmp
icebp
mov
push
push
fcomip
fbld
ror
mov
js
inc
lods
shlb
lret
adc
outsb
in
test
sti
dec
push
mov
sbb
and
imul
dec
js
and
sub
ret
arpl
mov
in
mov
daa
adc
out
dec
aas
xchg
cld
int
stc
mov
jnp
fisubrs
add
xor
aad
jnp
push
shrl
add
jecxz
test
jg
inc
ds
pop
in
mov
sub
daa
ja
cwtl
iret
lds
iret
aam
cs
or
enter
jle
negl
dec
pushf
dec
or
outsl
not
inc
testl
cli
cmp
ds
andb
mov
pop
loopne
popa
jl
push
scas
lahf
cltd
stos
aam
int3
xor
js
xchg
dec
icebp
push
push
lods
mov
pop
shrb
xchg
cmp
lods
pop
pop
sahf
movsb
clc
mov
mov
jb
cs
mov
test
mov
ret
sbb
in
in
xchg
in
jg
mov
add
xchg
add
jle
xor
push
mov
xchg
lret
sbb
inc
pop
dec
pop
in
inc
add
push
jbe
stc
mov
and
lods
sub
pop
notb
popf
fstpl
inc
xor
push
and
fdivrs
loopne
jae
aas
sahf
mov
popf
add
sub
mov
add
sub
sti
dec
js
loope
pop
in
divb
fidivrl
hlt
adc
mov
jnp
stos
sub
or
cld
arpl
daa
or
inc
stos
sub
jno
pushf
addl
jp
mov
arpl
repz
jb,pn
int
sub
roll
imul
xchg
push
out
les
mov
ljmp
adc
sbb
in
pop
and
adc
pminub
es
fimull
popa
das
lea
xchg
das
jo
inc
cmp
xchg
mov
arpl
push
add
xchg
push
xchg
pop
xor
je
push
int3
into
lods
mov
sbb
pusha
ja
bound
mov
in
out
enter
xor
jo
dec
pop
mov
leave
xor
sbb
cmp
push
xor
xchg
test
add
mov
sbb
sub
pop
sfence
mov
mov
jbe
or
arpl
inc
bound
mov
lods
das
lock
xorl
and
lret
jmp
clc
movsl
loope
int3
enter
xor
mov
notb
push
movsl
lcall
and
push
pop
adc
push
dec
addr16
jb
js
js
pusha
push
mov
test
es
fmuls
fsubl
call
mov
pop
jge
cs
sub
fcom
cmpsl
adc
loope
pop
mov
outsl
jo
lods
or
jge
pop
out
jbe
enter
and
arpl
daa
jmp
adc
push
jno
sub
adc
loop
sbb
data16
int
adc
pop
call
or
lods
pushf
lret
std
sub
xchg
adc
cmpl
repz
xchg
or
into
rorb
mov
mov
jmp
xor
in
sub
pop
lea
repnz
or
add
repz
fmull
std
xorps
lock
xchg
out
push
mov
pop
dec
hlt
clc
xor
mov
add
les
sub
or
push
push
hlt
outsl
mov
ficoml
lret
ss
imulb
xchg
dec
cmpsb
jp
push
lcall
push
ficoml
lret
ss
imulb
xchg
dec
cmpsb
jp
push
sahf
push
test
jbe
push
ficoml
mov
sbb
push
out
mulb
xchg
dec
cmpsb
jae
mov
push
outsb
pop
jbe
push
ficoml
lret
ss
in
mov
icebp
and
xor
dec
adc
in
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
shl
add
cld
repz
and
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
lahf
hlt
add
mov
add
test
add
jl
add
je
add
insb
hlt
add
fs
add
pop
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
hlt
add
int3
hlt
add
loopne
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
pop
cmc
add
js
add
mov
inc
add
rorl
jmp
or
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
hlt
cmc
add
cld
cmc
add
add
add
or
add
adc
add
sbb
add
and
add
aaa
testb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
push
testb
pop
testb
push
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
adc
add
cmp
add
pusha
testl
push
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
fcomip
add
int3
testl
add
add
lods
testl
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
clc
testl
add
add
and
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
cwtl
clc
add
mov
clc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
xor
add
cmp
add
inc
stc
add
dec
stc
add
push
stc
add
pop
stc
add
fs
add
ja
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
nop
stc
add
cwtl
stc
add
test
add
mov
inc
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
