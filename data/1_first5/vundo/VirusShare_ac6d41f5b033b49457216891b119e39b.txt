aaa
in
add
pop
add
add
add
mov
scas
cmpl
ror
push
loope
inc
mov
mov
adcl
jb
jno
add
ljmp
test
jo
xor
out
fldenv
and
or
mov
jnp
pushf
xor
pop
test
mov
mov
jns
mov
outsb
nop
xor
in
jne
shlb
mov
out
adc
pop
test
imulb
aaa
aam
inc
cmp
cltd
and
popf
sbb
push
push
push
cmp
rcrb
fcmove
push
sbb
pop
dec
jg
daa
pop
movsb
hlt
dec
decb
or
out
ds
or
jecxz
jg
jae
inc
jmp
int
das
dec
inc
fistpll
push
sbb
aad
aas
ja
into
adc
sub
fcmovnb
sub
gs
minps
rcrb
lds
and
rol
sub
mov
mov
xchg
jo
hlt
dec
pop
bound
notl
mov
loopne
xor
stos
mov
sar
lods
add
test
mov
push
mov
pop
js
xor
mov
int3
aam
cmp
fstps
and
ror
cmpsb
psubsw
rep
mov
test
push
pop
jmp
mov
leave
cmp
sbb
adc
sbb
mov
scas
cmp
std
repz
js
lods
pop
js
enter
test
cli
dec
fwait
int
ret
ret
ja
loop
gs
testb
or
lcall
fidivl
lea
jg
das
jecxz
mov
mov
xor
add
test
add
jmp
xchg
push
enter
cmpsl
iret
jo
dec
mov
xchg
cmpsl
lds
dec
outsl
sub
mov
insb
or
sub
mov
loopne
xor
inc
shrb
ss
repnz
lods
add
pop
inc
add
and
jl
pop
aam
jb
add
lods
and
ss
sbb
sub
jbe
scas
setnp
dec
push
dec
push
jo
jecxz
push
je
arpl
shrl
sbb
xor
nop
arpl
push
mull
xchg
jge
cmp
ja
mov
fwait
mov
int
mov
cmp
daa
pop
mov
sarb
xchg
cmp
push
or
push
rclb
xchg
sbb
cld
mov
stos
shll
shrb
in
xor
xchg
loope
sub
aad
cmpsl
fs
jbe
stos
test
cmp
push
scas
sub
leave
push
call
mov
cli
jg
pop
test
mov
mov
data16
icebp
adc
pop
out
sbb
imul
pop
xor
mov
pop
xchg
mull
fidivrs
lret
les
icebp
jecxz
or
loope
jmp
adc
aad
adc
mov
in
dec
fisttps
and
fimuls
xchg
in
mov
adc
push
push
or
xchg
or
xor
stos
xchg
daa
jecxz
ficoml
adc
aam
dec
out
ljmp
xor
shrb
sub
pop
lret
and
push
lret
data16
ficoml
jnp
xor
popa
cmp
mov
xchg
jb
pop
aam
mov
daa
mov
dec
mov
sti
or
lock
inc
std
dec
dec
lods
add
loopne
leavew
lods
fcompl
mov
stc
cld
loop
jp
out
leave
xchg
xlat
jge
inc
icebp
jge
sti
mov
add
les
test
test
out
inc
test
loope
paddq
push
movsb
mov
add
movsb
cmp
jp
and
in
es
int3
cmp
mov
push
jo
and
pop
inc
les
clc
dec
jp
jns
or
stc
stos
popa
arpl
cmpsb
sub
fstl
sbb
sub
mov
hlt
xor
or
mov
arpl
jg
sub
and
dec
adc
lock
cmpb
addr16
jns
adc
lahf
cmpb
popf
sarl
mov
iret
psubusb
adc
rep
icebp
xchg
das
inc
xlat
lcall
xor
arpl
adc
pop
rolb
mov
mov
out
mov
push
mov
ret
repz
cmpl
imul
jg
ret
test
jp
in
or
pop
pop
xor
cmp
aad
cmp
fists
insb
ficompl
sub
popa
mov
adc
jl
ljmp
shr
out
ret
sbb
dec
out
cmp
orl
sbb
inc
lret
idivb
xchg
xor
in
pop
lahf
mov
cltd
or
sub
mov
add
add
sbb
call
push
out
sbb
add
aas
cwtl
mov
xchg
je
mov
push
push
add
pushf
cmp
jnp
sbb
mov
add
jno
sub
into
jp
xchg
inc
outsb
jae
idivb
add
pop
xchg
jmp
adc
inc
mov
cld
int
xchg
sbb
aam
lods
and
cmp
ja
pop
cltd
aad
ss
mov
sbb
xchg
push
mov
cmp
dec
xchg
jae
cmpsl
lds
fmuls
dec
cmp
adc
lcall
push
cltd
jecxz
jb
add
cmpsl
pop
mov
fcoms
popa
mov
push
movsl
push
pop
jecxz
les
mov
pop
jmp
cmp
dec
sti
ficomps
arpl
das
xchg
fsubrl
mov
imul
adc
mov
cmp
and
xorb
cmpxchg
and
cmp
pop
and
jge
add
scas
sbb
stc
cwtl
ss
pop
xchg
ds
push
loop
test
test
cvtdq2ps
or
aad
xor
mov
jge
push
jg
jo
inc
pop
aad
push
cmp
cmc
je
fmulp
outsl
lock
dec
std
sti
pop
fsubl
mov
loop
xchg
dec
cld
xchg
cltd
cmpsb
mov
comiss
pop
lock
and
push
mov
bound
and
xchg
andl
push
mov
xor
and
jp
outsb
push
or
rol
lret
scas
jl
pop
adc
mov
or
inc
jb
add
stos
ficoml
inc
sbb
push
cmc
dec
jno
or
cmp
daa
call
jg
cmc
add
jge
sub
jge
xor
fistps
mov
add
sahf
or
stc
cwtl
repnz
sbb
ret
jecxz
addl
mov
jmp
dec
popf
jp
cltd
lahf
add
sub
xchg
xlat
rclb
addr16
push
aas
outsl
xor
inc
leave
mov
pop
add
xor
clc
cmc
icebp
xchg
mov
push
pop
popf
adc
sbb
add
mov
mov
cmp
push
or
and
dec
out
push
add
dec
lret
dec
xor
inc
ljmp
into
dec
fldl2e
stos
pop
test
call
imul
sbb
fucompp
iret
mov
mov
jmp
or
out
mov
lahf
shl
icebp
hlt
adc
add
and
pop
mov
push
scas
mov
daa
lahf
jp
pop
aas
setne
scas
leave
sbb
xlat
xorl
mov
mov
lods
mov
aam
xchg
jecxz
gs
sub
sbb
jge
adc
into
icebp
lahf
lret
pop
out
and
sub
xchg
insb
jns
push
mov
cli
mov
push
push
test
add
mov
cmp
jmp
sbb
in
pop
mov
push
popa
das
ffree
cmp
lret
pop
mov
punpcklwd
jns
lahf
add
stos
sbb
enter
rcrl
hlt
sub
nop
loop
xchg
pop
idiv
xchg
sbb
xchg
pop
pop
ret
mov
jle
lret
xchg
andb
lret
mov
push
insl
hlt
mov
push
lock
mov
fs
mov
push
jb
sub
cld
sub
in
scas
xorb
jp
ja
pushf
sti
pushl
cltd
andb
add
jns
inc
divl
jecxz
aaa
jmp
xchg
xor
add
cld
popf
adc
insb
jl
jmp
inc
test
cmp
ret
dec
dec
loopne
or
jecxz
cmc
leave
imul
cwtl
pushf
popf
xor
repnz
sub
cmp
shl
bnd
mov
mov
cmp
inc
push
sbb
idivl
out
insl
mov
or
ljmp
add
mov
repnz
fidivrl
mov
cltd
cmp
int3
rcl
lcall
sub
out
and
jle
dec
add
loop
add
mov
insl
pop
jl
sbb
push
xchg
add
adc
push
add
mov
push
mov
dec
out
out
push
mov
sarb
loope
cvttps2pi
filds
insb
cld
stc
les
int
mov
inc
scas
xchg
mov
pop
mov
or
call
ret
ret
outsb
pop
out
jae
cmp
fsubs
mov
loop
pop
mov
jo
xchg
mov
rcr
fwait
out
adc
mov
and
adc
out
shrb
adc
lcall
xor
mov
clc
es
push
and
cmp
mov
cmpsb
pop
fsubr
lock
mov
sub
rolb
sub
inc
push
cmc
sub
imul
fst
fwait
insb
push
test
sub
cld
jno
sub
or
pop
xchg
out
fistpl
in
jle
cwtl
lock
pop
xor
into
stos
jge
and
cmp
cmc
dec
jecxz
lcall
lret
jnp
and
hlt
outsl
idivl
push
out
data16
mov
push
mov
jne
sti
popf
mov
stc
cmp
movsl
shlb
roll
rcr
pop
hlt
scas
mov
clc
addr16
fisttpl
and
fsts
mov
out
loope
dec
rcll
jbe
mov
cld
and
and
rcl
xchg
scas
xor
jg
or
insl
movsb
ds
jb
fbld
sub
adc
ret
popa
mov
das
in
dec
push
or
xchg
es
push
shrb
jnp
xorl
lea
inc
add
push
jns
sub
mov
cs
mov
loope
sarl
push
std
test
fstp
add
test
mov
lret
rolb
lahf
addb
aaa
or
pop
mov
fwait
pop
ret
dec
icebp
push
pop
loope
test
jge
jecxz
jns
mov
xor
xor
test
jns
pop
int
mov
adc
filds
hlt
lcall
cwtl
out
scas
int3
mov
push
test
sbb
iret
lret
inc
mov
cwtl
sub
mov
je
and
xchg
push
jbe
add
xor
dec
pop
hlt
push
pop
mov
mov
or
stc
call
pop
in
push
sub
insb
fisubl
cmpsl
shll
jg
xchg
pop
andb
clc
arpl
pop
cmpl
xor
fwait
inc
int
js
mov
mov
mov
in
in
jnp
pusha
outsl
adc
inc
shlb
fcomps
and
adc
iret
shll
xor
aam
lahf
call
inc
mov
pop
dec
cmp
das
cmpsl
aas
push
lret
jecxz
orb
cmp
ss
sbb
jmp
mov
xchg
cmp
mov
subl
cmp
sub
insb
add
pop
sti
sti
cmpsl
inc
fcmovu
mov
xchg
mov
sub
aam
xor
push
jb
lods
sti
sub
sbb
les
lods
aam
jecxz
xor
mov
xchg
and
dec
out
add
clc
mov
mov
loope
es
aad
or
test
divl
fdivrl
cmc
mov
arpl
pop
aas
adc
cmp
cmp
arpl
pop
mov
pop
scas
dec
lods
cli
cmp
rol
fidivrl
addr16
les
and
out
mov
push
andl
iret
scas
pop
dec
ret
shll
cmp
cwtd
sub
jge
cltd
inc
sbb
mov
sub
dec
mov
push
sgdtl
insb
mov
movsb
es
jg
stos
dec
xchg
shl
in
jle
xchg
mov
mov
mov
xchg
xchg
hlt
push
add
or
bound
clc
xchg
fsubrs
out
inc
dec
dec
xlat
orb
shrl
xchg
jl
pop
and
leave
push
mov
inc
test
mov
mov
dec
test
push
xor
sbb
dec
mov
jns
sbbl
in
repnz
and
sbb
jbe
pop
test
pop
mov
mov
cwtl
inc
jbe
cli
jbe
xor
out
in
jnp
mov
jns
repnz
mov
shrl
imulb
xchg
cmpsb
pusha
mov
sub
jg
hlt
jge
xchg
xor
push
mov
lods
imul
add
mov
jne
aaa
out
outsb
xchg
lock
mov
pushf
push
inc
cmpsl
jmp
pop
jle
mov
xlat
or
push
stos
xor
add
cld
pop
mov
aam
dec
movsb
inc
rcl
or
jno
imulb
insb
int3
rcr
frstor
cli
imul
mov
inc
mov
push
xor
sbb
into
add
mov
ja
dec
daa
sbb
dec
mov
mov
jnp
stc
pop
pop
inc
push
cmc
jg
jmp
mov
and
fstl
leave
and
in
aas
sbb
cmp
inc
repnz
mov
pop
mov
stc
loopne
ss
or
stos
pop
shll
inc
add
jmp
lret
lret
add
popf
lahf
test
push
icebp
mov
js
push
mov
sub
imul
or
push
mov
std
jnp
ss
mov
adc
mov
push
add
jmp
fidivs
scas
dec
jl
push
mov
popf
divl
inc
sub
dec
into
loope
and
mov
and
stos
jne
fldcw
popa
pusha
xor
mov
lea
scas
jmp
add
jl
adc
fwait
cmpb
and
pop
xorb
or
adc
repnz
ret
test
dec
sti
int
jne
jecxz
mov
xor
in
dec
jle
stc
adc
inc
hlt
sub
shlb
inc
lock
mov
fiadds
jecxz
sbb
xchg
mov
dec
jb
mov
xor
mov
lods
mov
in
inc
inc
cwtl
sahf
mov
out
pop
xor
scas
or
popa
stc
jne
fdivp
sti
push
sbb
cwtl
mov
sbb
mov
mov
ljmp
mov
rol
xchg
out
pusha
xchg
inc
jne
and
cmp
addr16
mov
loop
inc
xor
adc
mov
or
jp
hlt
sar
jno
std
or
aas
test
xchg
stc
aad
imul
loopne
mov
and
adc
out
loopne
sbb
dec
jbe
stc
xrelease
and
stos
cmpl
mov
pop
fildll
scas
lcall
inc
or
insl
xchg
jae
dec
bound
and
push
bound
pusha
out
int
dec
shr
fisubs
test
sar
rcll
xor
adc
ja
add
aad
lods
mov
int
jmp
lcall
jno
sahf
lock
sahf
imul
or
out
rcll
scas
mov
inc
out
push
push
jmp
add
les
fiadds
scas
inc
insb
dec
add
dec
jp
push
and
sub
sahf
xor
push
leave
lahf
jmp
sbb
aaa
push
sar
test
mov
xchg
cmp
cltd
jle
nop
cld
mov
test
shll
add
rorl
mov
loopne
test
arpl
je
ljmp
outsb
jecxz
loop
adc
js
xor
js
and
mov
sahf
aam
repz
inc
pop
icebp
add
fistpll
fwait
jo
xchg
adc
gs
sbb
push
xchg
or
inc
add
inc
iret
fcomp
mov
and
mov
add
shlb
add
mov
pop
mov
dec
int3
adc
push
out
fimuls
roll
fisubl
lods
popf
testb
addr16
shrl
mov
dec
mov
stc
add
jmp
ror
xchg
imul
sub
cli
jo
lahf
mov
nop
loop
fcompl
call
jns
dec
mov
or
and
inc
std
dec
pop
imul
push
xrelease
lods
ljmp
movsb
loopne
sahf
or
xchg
imul
mov
pop
int3
shrb
lcall
outsl
jo
push
je
and
sbbl
sbb
mov
jmp
fidivl
fcmovne
cmpsl
adc
cmp
dec
xchg
and
fists
imul
aas
pop
and
sbb
or
andb
sub
push
jmp
or
fs
pop
mov
test
push
inc
ss
jg
push
lea
subb
bnd
insl
idivb
popa
imul
xchg
loope
lods
std
nop
negb
sbb
sahf
adc
sbb
dec
sarb
pop
cmp
jo
mov
aas
outsl
push
push
xchg
cmpsb
jns
mov
jne
es
xor
in
jbe
or
push
xorl
inc
sub
rorl
pop
les
inc
jecxz
lahf
mov
sub
outsb
push
repnz
xor
test
in
mov
out
je
not
mov
xchg
jl
das
adc
xlat
mov
cmp
jg
call
lea
scas
pop
insl
xor
int
cltd
xchg
adc
pop
lock
in
ds
outsb
push
mov
inc
aas
adc
and
inc
repz
mov
sbb
jno
add
test
je
int3
sti
pop
dec
xchg
cmpsl
or
roll
jecxz
int3
andps
or
pop
mov
fsubrl
je
ret
cmpsl
flds
pop
xor
ret
pop
mov
push
and
fisttpl
cli
adc
je
je
xor
push
mov
decb
mov
add
dec
movsl
mov
xchg
lods
xor
inc
and
xchg
or
in
nop
add
subb
movl
in
mov
jbe
nop
ror
sub
jnp
dec
pop
add
push
push
mov
pop
outsb
or
xchg
or
add
out
imul
xor
or
rolb
lods
mov
push
xor
xchg
clc
js
add
imul
mov
push
or
xlat
inc
pop
lock
test
inc
add
jb
imul
and
push
sahf
mov
popa
aaa
xchg
mov
cmp
pushl
sbb
ja
mov
and
jns
adc
in
mov
mov
mov
adc
push
sub
cs
aad
imul
cmpsb
mov
cmp
mov
mov
fidivrl
adc
mov
stc
adc
lret
adc
push
imul
cld
scas
inc
imul
aad
aas
sbb
mov
jge
orl
jo
into
shll
dec
fsubp
mov
lock
mov
divb
scas
xor
icebp
ret
mov
or
mov
inc
xor
or
neg
pop
roll
adc
lahf
sarl
ret
push
cmp
and
aam
xchg
out
mov
jl
adc
pushf
mov
mov
shll
jns
adc
movsl
lods
sub
sbbl
dec
add
pop
mov
fst
push
push
mov
pminub
pushf
outsb
repnz
sub
dec
rcrb
repnz
out
ret
mov
inc
mov
ret
fwait
mov
shll
jp
xchg
nop
js
cwtl
fsts
adc
lret
and
call
mov
push
insl
scas
jns
dec
push
ret
js
mov
cmc
mov
int3
mov
push
shlb
popa
mov
sbb
push
test
cmpsb
fmull
cli
mov
psllq
mov
iret
adc
xchg
dec
jae
cwtl
adc
test
lods
lds
aad
out
push
movsl
cmc
or
les
xor
jae
mov
add
lea
push
lcall
ret
or
push
popa
dec
adc
test
sub
mov
mov
push
or
xchg
shlb
mov
or
mov
or
xor
mov
lret
cmp
pushf
inc
pop
or
or
movsl
in
cmp
leave
push
in
cs
push
cmp
leave
mov
outsl
adc
or
pop
xor
movsb
adc
mov
movsb
ja
ret
push
sbb
fadd
sub
scas
or
cmp
stos
jnp
mov
mov
mov
fiadds
sub
bound
mov
xlat
mov
inc
cmp
jb
lock
pusha
xor
test
cwtl
arpl
or
push
add
add
and
xor
shrl
push
mov
push
test
adc
jp
dec
outsl
sub
add
out
cmp
jbe
xchg
pop
lods
mov
sahf
or
add
cwtl
mov
add
push
popa
mov
xor
sbbb
movl
aaa
sbb
xor
mov
or
push
sub
and
or
sahf
mov
and
xor
add
in
mov
cmp
dec
mov
fs
pop
push
mov
dec
shrb
cmp
inc
dec
or
mov
adc
mov
mov
adc
xchg
inc
cmp
inc
pop
mov
sbb
inc
clc
and
sbb
sbb
fwait
adc
mov
sar
push
xor
pop
cmp
pop
dec
cmp
aad
and
pusha
jmp
data16
mov
xchg
pop
push
divl
outsl
adcb
or
outsl
fdivr
inc
push
jnp
cwtl
jge
jg
cmp
imul
scas
into
mov
push
and
push
data16
pop
les
inc
jge
xor
xor
test
iret
dec
mov
test
mov
neg
inc
or
imull
movsb
cmp
add
mov
leave
aaa
inc
mov
and
pop
mov
sub
push
ds
xchg
rclb
cmp
in
adc
sub
xchg
pop
xlat
popa
mov
test
stos
dec
mov
lcall
xor
jbe
xchg
outsl
and
xchg
or
jle
icebp
sbb
fistps
fisubl
into
repnz
dec
ret
cmc
push
inc
jl
cmpsb
add
push
pushf
cmp
fucomp
fcoms
stc
sar
jle
xor
add
daa
icebp
mov
push
jmp
ud1
dec
sbb
fidivl
push
xor
ficompl
or
or
sarb
push
ret
into
movsb
das
dec
bound
jo
test
fistl
mov
dec
mov
cs
mov
mov
sbb
dec
shl
daa
mov
insl
dec
fcomi
jecxz
dec
mov
mov
inc
nop
xor
mov
scas
jmp
jnp
loop
jl
lret
add
fdivrs
jno
sbb
add
in
loope
and
pop
mov
dec
mov
inc
scas
sti
add
ljmp
cmpsl
rorb
xchg
je
idivb
jb
aaa
int
add
xor
xchg
cmp
jg
pop
scas
and
or
decl
shll
sub
inc
ljmp
mov
and
rcll
int
xor
add
iret
push
xchg
xchg
pusha
int
cwtl
inc
iret
mov
int3
iret
jp
icebp
or
shll
mov
xchg
add
xor
xchg
mov
cwtl
dec
mov
pop
out
stos
push
inc
mov
int
out
add
mov
cmp
inc
mov
das
and
pushf
adc
mov
mov
and
cmpsb
popa
fbstp
push
aad
or
andb
jno
std
sti
sbb
scas
aad
add
pop
xchg
inc
pop
loope
xchg
add
test
add
or
sub
filds
lcall
les
jae
notb
cmc
aas
pop
insl
roll
loopne
andb
pop
into
pop
movsb
ret
outsl
or
sbb
sbb
sub
mov
pop
loope
iret
xchg
pop
pop
into
int3
mov
mov
mov
loop
arpl
dec
stc
int3
lds
movsb
iret
les
inc
fsubr
cmpsl
test
arpl
jge
inc
cmp
dec
stos
dec
jmp
ds
mov
in
in
push
in
dec
mov
out
das
dec
xchg
xor
aaa
repz
cmp
jmp
mov
sbb
scas
dec
sti
and
push
jmp
movsl
repz
or
xor
maskmovq
push
add
pop
push
mov
outsb
cltd
add
inc
cmp
adc
push
icebp
nop
inc
pop
sbb
sti
aas
aas
push
jb
mov
cmp
jecxz
ljmp
shl
pushf
ret
xchg
lods
add
enter
xchg
xchg
mov
fmuls
movsl
outsl
jo
inc
xchg
pushf
lcall
pop
jge
fbstp
pop
xor
push
pop
movsl
xor
out
adc
in
xor
aas
xor
movsb
adcl
sub
mov
sbb
outsb
inc
pop
xor
xor
jle
push
adc
mov
lds
into
data16
cmp
cld
lods
dec
cmp
cvttps2pi
insl
inc
mov
insb
xchg
loope
insb
xchg
pop
add
mov
cld
stc
dec
jbe
scas
add
mov
test
out
jae
xchg
mov
mov
dec
add
popf
cmpsl
mov
loope
mov
sub
in
dec
dec
pop
rclb
ljmp
mov
mov
add
ret
cmc
xchg
pop
in
mov
and
and
cs
sbbb
mov
jl
jg
adc
mov
jmp
jno
jg
fwait
int3
adcb
fildl
mov
jp
ss
jge
mov
dec
loopne
xchg
or
shrl
dec
cs
pop
dec
scas
in
or
cmp
push
inc
add
mov
cmp
pushf
add
int3
mov
inc
dec
fcoml
mov
test
sbb
mov
cld
push
or
xchg
push
les
dec
or
stos
jmp
xchg
cmp
inc
add
stos
icebp
push
hlt
jmp
sahf
lods
sbb
in
mov
push
xor
out
scas
push
pop
mov
sbb
outsl
mov
sub
test
ficoms
mov
js
cwtl
out
mov
adc
ja
xor
mov
aad
xchg
loope
mov
into
jo
push
in
mov
sbb
leave
aam
add
cwtl
lds
fstl
push
jg
lahf
jle
add
std
popa
xor
xlat
mov
or
push
clc
xchg
mov
popa
shll
mov
cmp
or
pusha
ret
iret
insl
int
xchg
jne
inc
lock
push
imul
sbb
push
adc
addl
imul
cmp
lock
mov
outsb
popa
pop
lret
mov
sbb
pop
stos
jb
dec
inc
pop
andb
aas
rcl
test
ds
imull
lret
push
push
pop
jbe
pop
push
inc
mov
dec
fisubrl
and
cmp
xor
dec
push
repnz
idiv
fldt
lock
out
sbb
cmp
xchg
push
mov
rcll
dec
int
ja
push
js
outsl
mov
jne
adc
mov
dec
ss
fs
sbb
shrl
ret
dec
ds
popa
sahf
sbb
xor
lock
xchg
into
sub
mov
and
and
scas
mov
iret
loopne
out
xor
sbb
stos
mov
ss
mov
int
popf
xor
roll
mov
cmp
mov
fsubs
int
and
inc
movsl
xchg
aaa
xlat
or
jmp
icebp
mov
aam
pop
icebp
dec
sub
or
jecxz
sbb
into
mov
pop
jae
add
xor
adc
mov
sahf
xchg
lcall
or
mov
add
mov
fbstp
test
cmp
dec
daa
orb
pop
lea
fldl
imul
jecxz
sub
inc
pushf
jecxz
sub
mov
xchg
out
negl
out
sub
outsb
cwtl
in
mov
lods
popa
idivb
push
xchg
pop
cmpb
sti
nop
test
and
dec
arpl
and
sahf
repnz
sbb
mov
out
sbb
jnp
aam
jb
lret
mov
scas
pop
ja
jno
lds
shrl
or
das
pusha
or
mov
movsl
jbe
add
fxch
mov
xchg
xchg
popf
dec
movsb
sub
repz
in
outsl
xchg
push
inc
cwtl
jge
mov
add
pushl
cltd
in
aaa
inc
rclb
pop
cmp
pop
push
repz
adc
mov
or
mov
lret
jmp
enter
fistpl
cwtl
dec
cwtl
jmp
call
pop
jge
mov
push
pop
mov
pop
mov
xchg
sbb
enter
sub
jl,pt
icebp
out
mov
daa
jne
jo
or
dec
fsubrs
cltd
jo
enter
arpl
jle
test
insb
mov
push
pop
lods
dec
xor
dec
leave
adc
repnz
shll
lahf
push
xchg
pop
cmpsb
cwtl
adc
sub
pop
sub
rcll
shr
and
cltd
jl
and
ret
sub
and
jne
dec
fcoml
mov
int
ja
rol
adc
mov
iret
pusha
in
or
loopne
es
stos
leave
adc
push
jns
mov
mov
fildl
mov
push
jl
jae
out
and
fisttps
push
adc
push
jbe
cmp
sub
call
mov
sub
out
fwait
sbb
lds
cs
cwtl
mov
mov
mov
sub
es
fwait
xchg
fisttpl
or
les
leave
sahf
dec
mov
das
shr
lahf
inc
add
xchg
mov
and
ret
out
bound
and
insb
arpl
pusha
sbb
fistpll
cmp
clc
xchg
mov
mov
pop
filds
push
push
out
inc
test
jmp
ljmp
pop
adcb
outsb
jb
mov
sbb
sti
inc
dec
insb
xor
out
jbe
lea
insb
stc
add
mov
cltd
hlt
cli
mov
cmp
es
stos
xlat
push
sti
add
add
mov
dec
add
rcll
shrl
cmp
lret
xor
int3
sbb
mov
dec
notb
pop
lods
jge
mov
cld
outsl
movsb
jo
ja
and
scas
add
mov
movsl
imul
stos
add
sarb
push
clc
aaa
cmp
lock
inc
arpl
nop
popf
out
xchg
pop
inc
into
psllq
add
lds
aam
or
ret
ret
xchg
pop
mov
popa
xchg
lcall
es
enter
pushf
out
leave
loop
outsl
cld
sub
xor
inc
clc
in
ds
cmc
xorl
jbe
iret
ror
jo
sbb
adc
push
pop
insl
sahf
test
popf
outsl
jmp
lods
orl
ret
cmp
and
push
push
push
sbb
outsl
stos
xor
add
push
mov
push
mov
jnp
and
addr16
and
out
jno
and
popf
shrb
jmp
shrb
pushf
sub
dec
inc
test
rcrl
mov
cltd
lea
lret
imul
dec
sub
out
shrl
std
addr16
ret
scas
push
fcmovnu
push
enter
rcr
push
mov
lods
jle
es
mov
dec
lock
mov
push
movsl
mov
pop
gs
push
pop
push
fwait
xchg
xorb
insl
imul
movsl
mov
pop
mov
jge
sub
and
mov
addr16
jo
je
mov
int
out
orl
sti
push
and
cs
xchg
dec
and
imul
outsl
ja
pop
mov
sub
fcoml
aaa
inc
xchg
imul
es
movsl
xchg
xor
dec
pop
jecxz
sub
xlat
jg
sbb
xchg
je
xchg
cmp
xor
dec
or
stc
lcall
sbb
mov
jo
pop
repz
mov
dec
sbb
sub
pop
or
outsb
xchg
pop
or
pop
lcall
push
notl
add
jecxz
add
sbb
jno
jl
pusha
sub
adc
je
push
push
jne
stos
xor
aaa
push
inc
mov
int3
fmuls
sbb
or
lock
jmp
push
repz
xchg
orb
cltd
fs
pop
cmp
mov
repnz
push
cwtl
scas
insb
lcall
jle
ja
aad
mov
add
xchg
cmp
inc
adcl
mov
jne
enter
je
mov
push
lret
fcomi
fdiv
mov
pusha
rcrl
jne
iret
test
cmp
test
jmp
push
ja
mov
inc
lea
das
incl
popa
addr16
cmp
jbe
movsl
and
orl
stos
push
cmp
xchg
mov
pop
mov
les
push
jns
loopne
hlt
jae
mov
lock
mov
out
int3
mov
fdivl
jp
push
sub
loop
mov
mov
in
mov
jne
pusha
mov
ljmp
fmul
dec
fstp
cmc
nop
mov
push
mov
out
xchg
cmp
pop
or
insb
dec
mov
aam
leave
xchg
loope
or
mov
push
shll
adc
mov
rcrl
dec
xor
add
idivb
dec
inc
mov
lods
ja
xchg
ljmp
int3
scas
inc
inc
sbbl
out
test
sbb
pop
rorb
inc
adc
lcall
ret
jne
hlt
jb
mov
jl
enter
ds
mov
inc
in
fsubl
lds
fldz
sub
jl
imul
mov
rorb
cmp
xor
lea
dec
cld
jecxz
xor
in
cmp
aas
inc
rorl
test
movsb
notl
adc
xor
pop
xor
lock
xchg
stos
loopne
xchg
fistpll
or
divb
cwtl
loope
mov
jg
inc
aad
push
test
es
test
mov
repz
ja
adc
jge
xchg
push
out
aad
xor
sarb
pop
push
push
std
repnz
dec
sub
rcr
or
packuswb
leave
in
popa
jae
cs
adc
and
or
js
cmpsb
xchg
cmp
or
repz
lret
jno
inc
mov
in
mov
inc
push
sahf
sub
test
cmc
inc
mov
repnz
movsb
xchg
sub
mov
add
lods
test
xchg
fwait
imul
enter
outsl
sbb
cmpsl
jnp
mov
mov
push
sub
cmpb
add
add
sbb
inc
lret
adc
int3
repnz
push
adc
ds
jns
mov
js
sub
push
pop
add
fimull
pop
cmpsl
jl
dec
xor
pop
xlat
inc
sbb
and
sbb
test
imul
stc
or
jns
xlat
dec
and
addr16
popl
push
sub
xorl
adcl
roll
mov
inc
or
push
in
mov
rolb
dec
xor
out
or
cwtl
pusha
push
xchg
stos
and
mov
jnp
sub
imulb
out
fidivs
and
jns
cmp
push
test
sub
inc
lds
adc
cmc
adc
inc
and
scas
js
mov
cmp
rorl
mov
xor
ljmp
cltd
repz
push
mov
push
fs
hlt
addl
int3
or
add
pop
pop
hlt
das
gs
lds
adc
std
mov
pop
in
lea
sbb
pusha
mov
repz
xor
mov
popa
mov
es
iret
hlt
fistpl
mov
mov
pushf
stos
cmp
in
xlat
inc
add
test
mov
clc
lret
mov
mov
sbb
lock
pop
insb
mov
addr16
insb
lock
jne,pt
test
or
xor
mov
xor
jmp
cld
arpl
and
movsl
jmp
fstpt
rolb
daa
xchg
inc
add
and
outsl
mov
sub
mov
lds
sbb
dec
jbe
xor
mov
xor
pusha
insb
jecxz
inc
bnd
add
lock
call
xor
flds
mov
jmp
cmc
cmp
push
lret
movsl
leave
scas
test
mov
dec
cltd
sbb
cmp
sbb
gs
mov
lcall
mov
lods
adc
cmc
stos
adc
loop
rolb
and
push
test
dec
sti
fdivl
sbb
sub
mov
sub
dec
test
ljmp
jg
xchg
orb
cmpsb
push
cmp
syscall
jb
ficompl
popf
adc
iret
adc
mov
adc
ficomps
sbb
and
pop
scas
sub
in
push
sbb
fidivrs
shlb
xor
test
and
aad
repnz
aad
jnp
lret
inc
cmp
mov
cmp
push
jno
movsl
inc
inc
fiadds
pop
adc
scas
mov
call
cld
fstps
daa
adc
in
sbb
cmp
daa
push
cmp
insb
cmp
inc
and
inc
xchg
inc
movsb
push
dec
mov
mov
lret
and
xor
push
cmp
sti
iret
mov
mov
dec
movsb
pushf
aad
ret
push
sbb
jne
lret
cmp
jg
dec
xchg
xlat
in
das
xlat
test
cmc
mov
nop
ficoms
aaa
inc
sbb
pop
sub
pusha
addr16
jbe
or
fwait
inc
push
insl
sbb
mov
push
and
xchg
or
mov
mov
mov
push
repnz
pop
sbb
mov
lds
adc
cld
mov
mov
fwait
jbe
loop
cld
aas
fs
push
pusha
inc
sub
xchg
jl
rclb
adc
daa
add
hlt
enter
clc
imul
pusha
adc
jae
inc
daa
fcompl
enter
and
pop
and
aas
shr
sti
mov
mov
dec
mov
pop
dec
dec
inc
dec
inc
cmpsb
cmp
mov
jno
daa
adc
xchg
mull
jbe
lea
aam
xchg
xor
leave
pop
fidivrs
shll
pop
cmp
ss
pop
shlb
sbb
xor
xor
push
lahf
out
xor
pop
fsubp
adc
mov
cltd
clc
xchg
gs
fstpt
inc
pop
push
push
stos
xor
dec
imul
mov
mov
add
sbb
dec
fs
out
pop
imul
pop
dec
stos
xchg
lea
pop
insl
adc
pop
inc
jbe
lcall
into
lret
xor
ja
xchg
fldl
dec
mov
mov
jnp
push
pop
push
pop
push
sub
lods
sub
popf
lret
decb
mov
push
int
inc
outsl
dec
out
mov
add
pusha
out
das
pop
aam
sub
sub
pop
int
inc
imul
xchg
add
lretw
mov
enter
bsf
ja
mov
stos
dec
pop
sub
cld
insl
ljmp
xor
sarb
adc
fucomip
repnz
in
ljmp
jns
test
mov
sub
adc
loopne
popf
fisubrl
mov
out
shrb
pop
or
xor
sbb
or
and
mov
lea
cmpsb
outsl
ljmp
jle
jbe
inc
mov
out
je
pop
pop
shlb
fsin
xchg
or
xor
mov
mov
xor
inc
pop
mov
jb
insb
cmp
sbb
outsb
lahf
enter
push
xchg
pop
fdivrp
test
cmp
fcoml
mov
mov
ss
mov
fwait
mov
xor
stc
sti
pop
xor
dec
daa
pop
push
gs
sarl
mov
push
repz
cmc
push
hlt
adc
xchg
daa
sub
and
movsl
lock
in
jmp
loope
jp
fisubs
push
ficomps
pop
or
mov
jp
xchg
push
mov
cmp
repnz
sbb
add
test
mov
push
mov
popf
outsl
cmpsb
js
jbe
xor
jne
inc
push
or
push
repz
ficomps
and
inc
ficomps
loopne
sahf
xchg
imul
das
xchg
jl
scas
cltd
sbb
out
cltd
or
push
push
or
cld
scas
inc
inc
or
adc
cmp
dec
daa
jno
es
jle
cmc
or
pop
mov
xchg
pop
fisubs
scas
rclb
sub
cmp
xchg
mov
jbe
mov
pop
fwait
pop
jno
xor
cs
call
mov
push
jp
mov
stos
cli
dec
jno
push
mov
cmp
pop
loop
adc
dec
shrl
jnp
incb
push
add
sbb
add
sub
mov
cmp
lret
cltd
ret
sub
imul
fst
inc
or
fidivrs
fwait
popl
fsubs
fistl
dec
in
stc
cmovns
rclb
pop
mov
pop
cmp
stos
movsl
push
sub
push
or
cmp
xor
mov
fnsave
mov
mov
loope
adc
arpl
lret
or
enter
rcll
repz
fstps
mov
ss
pop
add
mov
inc
xchg
movsl
sub
jns
push
pop
movsb
adc
jno
lds
shlb
jne
iret
cltd
cmc
sti
into
aas
lock
xor
pop
jo
es
or
cmp
dec
test
lods
nop
add
adc
mov
repz
and
add
insl
cmovp
push
les
lcall
pop
inc
test
mov
adc
aas
jnp
jecxz
loop
jbe
repnz
xor
cmp
stos
add
push
inc
adc
outsl
mov
sbb
lods
das
test
in
cmp
scas
jo
pushf
lea
mov
dec
xchg
mov
fiaddl
jg
mov
adc
jno
icebp
cltd
les
loope
sbb
or
mov
or
mov
sub
ja
ret
jnp
das
frstor
mov
icebp
dec
pop
add
adc
xor
mov
mov
inc
add
mov
outsb
sub
pop
hlt
js
ljmp
hlt
sbb
fxch
pop
pop
inc
sarl
movsb
aam
insl
int
dec
movsb
lret
xor
pop
loopne
lock
mov
shlb
shll
pop
aas
popf
add
arpl
or
nop
cmc
outsl
cmpsl
ret
js
repz
add
add
dec
mov
imul
mov
stos
les
jne
inc
sbb
sub
hlt
bound
into
and
test
sbb
js
cld
or
sub
or
cld
sub
ljmp
sub
jbe
loop
push
fstpt
js
mov
loop
add
shr
stos
pop
dec
sahf
out
std
cmc
jg
lcall
out
ficomps
xchg
mov
mov
fistpl
sub
pop
adc
and
and
lahf
inc
adc
outsb
dec
adc
in
fistpll
bound
mov
xor
adc
cmp
repz
jle
fadd
movsb
xor
xorb
or
pop
mov
aaa
adc
mov
adcb
ljmp
adc
movl
inc
sub
mov
mov
sarb
fucomp
sbb
mov
fnstenv
sub
test
xchg
arpl
dec
mov
xchg
loope
sbb
out
daa
imul
sti
jno
dec
movsl
stos
sub
inc
mov
mov
cmc
and
adc
test
adc
mov
dec
clc
subl
mov
lcall
and
sbb
js
xchg
mov
xchg
insb
icebp
xchg
out
dec
xchg
sub
dec
xchg
cwtl
ds
pop
lret
jmp
leave
rorb
push
and
das
sbb
pushf
test
inc
fidivrl
popa
repnz
pop
idivb
stos
mov
or
notb
jo
mov
loopne
lcall
adc
sbb
ja
sti
cmp
inc
inc
cmovs
arpl
cld
lret
push
scas
adc
push
mov
push
les
pop
inc
or
dec
pop
mov
mov
hlt
in
fstp
jmp
inc
fcomi
fcoms
scas
clc
mov
inc
sbb
adc
sti
dec
push
mov
cwtl
lret
imull
cs
call
or
movsb
jb
test
push
jnp
xor
faddp
dec
fsubs
xchg
cmpsb
je
sub
mov
pop
les
loop
fidivrl
in
adc
jl
ficomps
popl
xchg
add
imul
sub
movsl
lea
dec
dec
and
cmpb
mov
or
call
xor
pushf
sub
call
mov
imul
adc
ret
xchg
flds
cli
xlat
sub
cld
in
pop
push
push
int3
add
lret
ds
or
xor
cli
test
dec
push
dec
sti
arpl
mov
outsb
in
jo
pop
add
xchg
in
dec
aaa
mov
mov
movsl
lds
addr16
je
sub
out
fmuls
mov
mov
loop
mov
sti
js
xor
push
push
jmp
dec
mov
pop
ds
jmp
push
fs
or
mov
aaa
daa
xchg
or
popa
mov
inc
ret
test
cmp
lret
scas
cmpsb
adc
mov
xor
sahf
pop
inc
outsl
pop
and
lret
add
stos
inc
inc
adc
mov
jmp
fdivs
adc
xchg
test
out
in
inc
iret
outsl
xchg
daa
mov
lret
loopne
jge
pop
in
enter
cmp
cltd
jmp
rorl
call
cmp
or
jbe
bound
sub
jp
and
mov
loopne
cs
data16
dec
adc
sub
jp
mov
mov
outsl
bnd
dec
dec
adc
arpl
push
pop
adc
clc
cmp
pop
fsubs
dec
ljmp
insb
or
fcomp
jbe
aam
jnp
push
pop
cmp
sub
lods
push
adc
dec
hlt
pop
aaa
cmpsb
dec
test
cmp
push
repnz
xchg
fstpl
xchg
bswap
icebp
sbb
fisttps
or
add
inc
lret
cld
lods
icebp
jno
mov
aaa
mov
xchg
das
inc
fmull
and
sub
scas
inc
leave
xor
add
roll
and
sbb
pop
ret
neg
stos
imul
cmpsb
xor
aam
adc
xor
sub
mov
and
fldenv
mov
enter
fildll
cmp
dec
push
cmp
lret
jmp
lahf
cld
xor
stos
and
addr16
outsl
xchg
xor
arpl
mov
xor
and
std
add
leave
xor
pop
addb
ja
mov
hlt
mov
inc
xor
mov
or
cwtl
imul
mov
movsl
push
hlt
icebp
xchg
and
mov
pop
ffreep
add
xor
rolb
nop
pop
lcall
gs
pop
incb
incb
adc
inc
gs
scas
pop
pushf
sbb
aaa
push
int3
inc
add
jnp
ret
cmp
dec
push
xchg
icebp
testl
loope
cld
fdivr
es
pop
jns
add
pushf
pop
js
jmp
sbb
std
dec
xor
jne
cld
leave
xlat
cmp
das
repz
movsb
or
sbb
aad
jle
mov
cmpb
fcoml
push
iret
ret
pop
out
pop
xor
xchg
orb
mov
adc
cld
dec
sbb
enter
jns
je
out
or
jbe
imul
push
enter
add
jmp
push
xor
test
jo
jne
sbb
addr16
mov
stos
mov
jo
push
loopne
aam
jl
leavew
shll
into
test
jmp
inc
out
adc
pop
cld
inc
inc
outsl
rcrb
adc
pop
hlt
out
cltd
and
xchg
popa
push
sbb
xchg
testb
out
dec
daa
push
outsl
es
sbb
insb
jo
and
xor
mov
pop
loope
popl
mov
mov
into
cmp
ret
divb
mov
sub
ficoms
into
dec
cmpl
jge
sbb
lcall
aam
daa
xchg
cltd
dec
pop
add
pop
out
in
dec
inc
mov
cli
daa
and
jl
jg
stos
sti
pop
cmp
hlt
adc
rcll
push
jecxz
add
mov
test
or
subl
xchg
repz
inc
fbld
cwtl
addr16
arpl
cli
jae
leave
sbb
aam
jg
add
cld
in
and
or
rclb
pop
loope
mov
icebp
push
push
ds
arpl
fs
xchg
sub
insl
dec
dec
je
sub
pushf
mov
in
pusha
std
out
pop
xchg
repz
dec
cmp
xlat
mov
xchg
sub
xchg
cli
mov
popa
and
pop
test
fs
jecxz
adc
mov
dec
jno
mov
xabort
and
popa
repnz
jns
jb
int
inc
lahf
stc
lock
pop
fs
movsl
fldcw
test
ret
lods
mov
notl
test
idivl
popa
addb
cmp
fidivl
jecxz
stos
hlt
cmp
jbe
data16
xor
in
into
je
mov
mov
dec
shlb
scas
and
fisubs
out
xchg
gs
out
jo
nop
cmpsl
mov
sub
and
adc
test
mov
mov
cmp
in
mov
dec
push
mov
lods
push
shll
idivb
push
xlat
cmp
sti
ss
loop
xor
xor
gs
stos
add
cmp
mov
mov
adc
pop
je
adc
pop
lods
jno
out
push
lret
mov
shrb
out
pop
xor
fsubrs
mov
cld
pop
pop
jne
inc
jecxz
push
inc
xchg
mov
jecxz
push
xor
and
push
cmpb
mov
rorl
fcompl
jp
sbb
lock
iret
sub
inc
or
mov
push
sbb
mov
pop
add
es
adc
jp
pop
xchg
mov
and
jae
call
add
xchg
sbb
lcall
pushf
or
mov
int
pop
gs
xor
shrb
hlt
or
or
pop
sbb
xchg
scas
dec
and
mov
pop
shl
mov
jo
xchg
aas
push
mov
in
movsb
adc
enter
pop
rcrl
shlb
out
xchg
imul
lret
dec
ljmp
inc
orl
dec
sub
scas
pop
or
xor
sbb
inc
mov
cmp
in
test
fdivs
fsts
loope
int3
jne
mov
mov
cmp
jnp
pop
hlt
pop
pop
jo
xor
mov
mov
mov
test
xchg
jmp
mov
adc
clc
test
xor
jg
jecxz
aam
or
repnz
arpl
call
inc
push
pusha
add
jo
cmp
stc
push
push
dec
lret
sbb
jbe
cltd
addr16
or
loop
push
jo
stos
fsubr
or
stc
outsl
lea
jp
pop
stc
clc
add
cwtl
fwait
shlb
xchg
das
mov
push
push
call
ds
add
movsl
mov
into
xlat
movsb
int
cld
mov
insb
scas
int3
mov
ja
ds
lods
fwait
inc
sbb
jns
push
mov
inc
add
push
int
ljmp
xlat
push
mov
fldcw
jo
fimull
mov
push
pushl
mov
xor
mov
push
inc
inc
outsl
insl
jo
arpl
dec
sbb
push
push
lahf
dec
repz
popa
aaa
jg
std
incl
jmp
das
add
add
inc
subb
jne
loopne
imul
aam
mov
and
ja
popa
push
sub
imul
cld
lret
icebp
pop
mov
lahf
ljmp
or
push
push
jl
imul
repnz
insb
in
lret
mov
ds
mov
and
add
arpl
push
mov
jbe
push
lds
mov
xorl
repnz
and
xchg
sahf
fstpt
pop
lcall
outsl
push
sub
xchg
sbb
mov
mov
xchg
lea
stc
iret
test
into
jno
lahf
jl
rcl
repz
enter
jmp
jle
lds
fldcw
cld
and
pop
sub
mov
push
xchg
aam
ljmp
sbb
jge
or
sbb
xchg
je
mov
add
pop
cmp
insl
xor
jecxz
mov
std
jl
das
movb
lods
arpl
insl
into
push
and
xchg
bnd
xor
cmp
in
imul
cmp
dec
dec
clc
decl
fisubrs
arpl
jae
decl
adc
add
pushf
push
movb
cmpsb
push
lret
loopne
jbe
jmp
pop
out
cmp
notl
nop
shrl
fnstenv
adc
scas
push
insb
or
lea
mov
mov
movsl
xchg
stos
pusha
roll
cltd
mov
aam
popa
lcall
fcomip
test
outsb
sbb
mov
mov
jns
dec
mov
mov
xchg
pop
lods
or
pop
sub
in
movsb
jns
fs
popf
add
lds
std
aad
lock
cmp
test
or
jns
inc
popa
lods
aas
mov
xchg
xlat
mov
subb
mov
addr16
dec
jecxz
fs
sub
jne
aad
notl
dec
push
sbb
loopne
adc
mov
and
mov
mov
jo
sbb
cmp
mov
mov
dec
jae
xchg
cs
shrl
adc
outsb
ljmp
stos
stc
aaa
mov
cmpsb
pushf
mov
jp
iret
adc
sub
pop
lahf
scas
push
rclb
dec
pop
sbb
pop
negb
xchg
add
addr16
push
cltd
out
cs
xchg
mov
scas
xor
inc
and
mov
mov
movsl
cmp
scas
es
or
push
pop
xchg
cmp
push
sbb
mov
fldl
clc
cltd
bnd
xor
stos
jno
mov
out
sbb
sub
push
clc
cmc
xor
push
push
inc
fcmovu
jge
cmpsl
dec
cli
test
lahf
adc
sbb
fbld
mov
mov
loopne
push
xchg
icebp
fdivl
add
aaa
mov
xor
test
test
mov
ret
adcb
mov
aas
in
imull
push
fstps
rolb
jge
sub
dec
pop
int
lods
daa
and
mov
nop
xchg
ret
jo
mov
clc
fnstenv
and
jo
jbe
shlb
lret
add
sbb
sub
sub
imul
lods
jg
jne
add
dec
sbb
rolb
and
aam
iret
js
in
jge
addl
inc
in
ficomps
lds
mov
icebp
mov
cltd
and
cltd
inc
rcrl
insl
fcmovne
hlt
std
mov
add
jecxz
push
jl
ret
push
jmp
scas
into
mov
inc
ret
cwtl
mov
movsl
mov
hlt
sub
sbb
pop
inc
pop
ss
pop
stos
ret
test
mov
das
pop
std
mov
inc
mov
movsb
inc
in
xchg
mov
mov
pop
repz
push
inc
and
imul
sub
ficoms
pushf
mov
hlt
faddp
pop
push
subl
or
mov
lret
fwait
pop
cmpsl
int3
or
mov
and
and
mov
xor
jnp
das
pop
out
enter
pushf
rclb
sbb
mov
jb
ret
divb
pop
xor
push
aas
mov
sbb
cwtl
out
mov
pop
jne
mov
xchg
cmp
mov
jmp
dec
fistps
aad
mov
fldpi
mov
mov
push
rorb
movsl
sub
xchg
insb
addr16
adc
dec
rolb
cmpsb
push
rcrl
jns
adc
dec
outsb
xlat
jns
or
mov
imul
or
cmpl
int3
outsb
add
pop
out
push
pop
ret
fsubrs
nop
bound
cmpsb
or
icebp
jb
int
mov
mov
ljmp
and
dec
sbb
dec
sub
pop
call
hlt
jne
or
jns
inc
and
fwait
sbb
mov
lret
mov
cwtl
jmp
mov
lea
xchg
fists
aas
retw
pop
dec
pop
sbb
cli
pop
xchg
mov
and
push
lea
mov
cmp
rolb
cmc
or
xchg
push
lods
mov
xchg
mov
into
and
push
fisubs
xchg
inc
adc
outsl
push
rcll
stos
or
dec
popf
mov
jl
arpl
mov
push
dec
jmp
sbb
mov
sbb
jne
insb
add
stc
xchg
pop
imull
gs
pop
push
loope
mov
into
insl
mov
insb
jge
push
push
push
and
mov
push
aad
lret
popl
aaa
popa
jns
push
imul
lcall
sub
pop
xorl
inc
movsb
jg
jl
ss
in
add
sub
mov
xor
enter
mov
scas
and
mov
pop
cltd
imull
jbe
jmp
mov
std
cmp
cmp
gs
inc
lcall
scas
mov
mov
mov
icebp
int3
jae
dec
outsb
jns
ss
fcmovne
pop
in
cmp
stc
test
dec
rorb
cmp
cmp
or
cli
movsb
in
and
pop
xchg
dec
cmp
sub
inc
cltd
in
and
popa
dec
cmp
out
jle
enter
sbb
add
aas
mov
inc
les
gs
cli
pop
and
pop
stos
sbb
pop
pop
fstp
push
rclb
mov
pop
loope
mov
mov
nop
xchg
int
imul
sbb
test
clc
and
xchg
xchg
jno
ret
inc
cmp
jae
fcmovnu
cld
js
xor
out
icebp
cmp
std
push
pop
xor
pop
ret
jp
jbe
adc
in
inc
mov
out
icebp
in
jmp
out
pusha
loope
shll
das
sub
inc
ja
cmp
jne
or
ret
insl
jp
xchg
pushf
add
dec
xchg
shl
sahf
cltd
ficompl
dec
and
push
ficomps
pop
int3
jecxz
cmp
xchg
push
lahf
psllq
xlat
push
pop
nop
and
pushf
sbb
into
mov
rcll
jecxz
cmpb
iret
or
cmpl
add
rcll
faddl
fwait
or
sub
mov
ret
or
or
popl
mov
mov
arpl
push
ret
fs
ficoml
cmp
sbb
push
pop
popf
test
out
mul
ds
add
mov
mov
jae
mov
repz
pop
int
pop
jmp
dec
pushf
ret
lret
adc
loope
insb
ret
xor
stos
outsl
shlb
loope
adc
cmp
scas
lock
mov
pop
loope
fsubl
inc
adc
fs
fstl
mov
jmp
pusha
sbb
ja
push
test
ftst
test
ljmp
adc
insl
sbb
ss
jge
pop
iret
mov
xchg
jns
mov
cmp
pushl
xor
mov
fprem1
xchg
out
jnp
hlt
jmp
dec
dec
push
sbb
addr16
cmp
std
test
xor
fcompp
daa
aam
js
loope
lock
inc
jnp
jecxz
roll
in
cmp
mov
adc
xchg
cmpl
shr
daa
outsb
xchg
pop
testb
jge
sbb
fidivs
lcall
xchg
out
jmp
ja
add
in
lock
and
lret
lds
pop
adc
xchg
adc
cmp
and
out
sub
lcall
push
subl
ds
inc
mov
mov
sbb
out
xchg
cltd
test
test
rol
mov
adc
bound
cli
pop
add
adc
outsb
xchg
in
rclb
add
lods
addr16
dec
cmpsb
push
lret
push
inc
notl
push
push
arpl
out
sbb
aad
int
aaa
jmp
in
clc
sbb
dec
scas
sbb
mov
xchg
shlb
mov
insl
pavgw
repnz
pop
gs
cs
lds
adcb
or
arpl
cld
std
mov
fwait
stos
sub
hlt
scas
sub
inc
mov
push
sub
ds
adc
movsb
mov
imul
in
loopne
mov
inc
shl
int
mov
ljmp
push
fcmovu
push
out
cmpsb
adcb
adc
fstpt
dec
xor
lret
or
inc
leave
xchg
push
add
test
fidivrs
in
or
mov
cs
scas
lret
xchg
aad
cmpsb
add
inc
loope
and
pop
scas
and
dec
fs
lods
jne
fst
push
repz
sub
imul
scas
and
inc
mov
push
mov
cmpsb
xchg
pop
dec
mov
lods
or
push
push
aam
dec
mov
inc
loop
mov
xchg
mov
testl
popa
fidivl
pusha
insb
aad
orb
hlt
in
adc
popf
scas
xchg
xor
mov
mov
mov
sbb
shlb
movsb
sbb
movsl
prefetch
or
cmpsb
rcrl
scas
mov
loop
sbb
scas
sub
ret
out
mov
shll
out
not
jmp
ds
ret
sbb
test
xchg
into
fxch
push
push
loopne
or
dec
clc
pop
sbb
clc
xchg
ret
cmp
dec
mov
testb
push
pop
pop
filds
std
adcl
insl
popa
int
lock
adc
add
mov
mov
frstor
or
inc
mov
mov
aad
and
cmc
jle
cmp
inc
mov
jle
push
dec
sub
shlb
aam
jno
add
fimuls
insb
ficomps
negb
push
inc
xor
call
dec
jnp
xorb
scas
pushl
repnz
sub
neg
jne
lods
jge
stc
sbb
out
mov
stos
inc
cmp
mov
sub
insl
imulb
cmpps
sbb
ret
leave
mov
iret
mov
pop
mov
hlt
icebp
out
jo
lret
fldt
cwtl
test
add
inc
pop
icebp
jne
add
push
adc
xchg
mov
subb
mov
popf
movsb
or
cmpsl
fisttpll
and
fisubl
enter
rolb
lods
gs
negb
stos
mov
xlat
push
or
mov
xchg
sahf
push
xchg
xchg
cmp
out
imul
mov
xchg
ljmp
sahf
fidivrl
mov
mov
arpl
aaa
or
mov
out
sub
sbb
adc
loopne
leave
mov
clc
pop
and
push
int
les
xor
mov
fsubp
ja
jnp
push
dec
data16
sbb
dec
adc
lret
xlat
jno
mov
js
xor
add
inc
xor
leave
inc
cwtl
scas
xor
adc
outsb
add
xor
enter
je
xor
sbb
xlat
orl
popf
sbb
sbb
jae
cmpsb
out
sub
lods
shlb
rcrl
fcmovnb
cmpsl
pusha
push
inc
daa
jle
orl
test
js
arpl
mov
stos
test
and
sub
xchg
mov
push
or
mov
fisttpll
movsb
subb
stos
shlb
lcall
or
call
outsl
pop
stos
mov
and
xchg
or
cmp
pop
xor
fmuls
xor
dec
pop
cmpsl
pop
mov
adc
pop
fs
jns
mov
cmp
cld
test
pop
int3
xor
mov
jae
sbb
add
cltd
je
clc
mov
xorb
into
dec
inc
cli
mov
inc
xchg
das
sub
popa
xor
jne
outsl
xchg
stos
mov
xchg
jnp
dec
jg
cltd
ret
jmp
insl
jge
and
in
aad
scas
dec
xor
mov
adc
popa
scas
mov
in
pop
fxam
cld
movsb
mov
sbb
or
xchg
and
dec
push
jno
mov
fsubp
sti
adcl
int
mov
sub
movsb
mov
enter
sub
in
ret
addr16
ret
mov
dec
daa
adc
movb
push
test
and
cmp
mov
cwtl
add
adc
nop
in
cmp
sahf
daa
fisttps
pop
or
mov
inc
push
add
xchg
imul
push
mov
js
repnz
scas
mov
add
pop
xchg
fisttpll
movsb
dec
jnp
jmp
enter
sub
iret
jmp
test
leave
stc
das
pusha
pop
stos
pop
lea
popa
icebp
inc
mov
mov
rcr
adc
and
mov
clc
add
pmaxub
lcall
popf
jae
mov
in
xor
mov
sarl
jecxz
xor
cs
xchg
xchg
push
mov
add
dec
jae
and
sbb
pop
jbe
rolb
xor
inc
and
int3
mov
inc
testb
dec
shlb
fnstenv
ljmp
or
shrl
cmp
push
insb
push
ret
push
sbb
xor
cld
push
enter
imul
mov
addr16
mov
lcall
int
gs
dec
pop
mov
add
jo
test
cli
add
cld
sbb
or
push
loopne
fnsave
ja
out
mov
ret
fisubrs
hlt
xor
loop
xor
sub
neg
sub
push
jne
lea
add
scas
inc
aad
test
sub
mov
xchg
jge
in
imul
in
sbb
notl
rcrb
lret
inc
out
dec
pop
cmpsb
mov
mov
andl
jmp
mov
mov
sub
aaa
dec
hlt
cmpsl
lock
cltd
or
xchg
mov
jo
arpl
add
lods
mov
or
imul
fsubr
mov
fnstsw
imul
dec
add
xchg
sar
call
fcmovnu
leave
and
mov
fildll
negb
jp
pushf
adc
shl
adc
stos
mov
outsl
push
ljmp
ret
mull
or
call
ss
lock
add
adc
xchg
nop
sub
pop
jge
and
mov
push
inc
insb
inc
popf
sub
lods
add
xchg
aam
pusha
add
add
xor
arpl
jnp
loopne
adc
jnp
enter
mov
js
movsb
jmp
mov
cmp
sbb
test
and
shll
pusha
jnp
in
cmp
repnz
xor
cltd
xchg
dec
leave
push
mov
pop
jb
or
push
adc
push
ss
lfs
addr16
sti
jne
hlt
xor
inc
sbb
scas
je
inc
xlat
popf
cmp
sub
jmp
add
mov
or
push
pop
je
pushf
dec
clc
lahf
dec
xor
mov
cld
and
xchg
xchg
test
mov
pop
or
push
mov
adc
mov
sbb
imul
add
aam
and
xlat
pop
pop
inc
mov
imul
adc
xchg
stos
jl
ja
mov
sahf
pusha
sbb
jp
dec
inc
mov
icebp
pusha
loopne
pop
sub
in
or
int3
jo
lds
mov
dec
and
repz
xchg
jge
push
aam
insl
mov
lods
scas
imul
dec
rcrb
repnz
outsb
les
jnp
add
leave
inc
push
xchg
mov
je
pop
mov
andps
sti
lret
scas
ja
outsl
dec
mov
adc
mov
dec
in
mov
jo
lcall
push
jo
cmp
test
mov
out
loopne
push
popa
mulb
mov
or
shrb
fnstsw
mov
cmp
and
dec
repnz
outsl
cli
jecxz
sbb
add
jge
mov
gs
imul
push
roll
mov
xchg
xchg
pop
dec
or
sub
adc
stos
and
outsb
filds
lea
add
pushf
push
add
loopne
std
add
insb
leave
cmc
pop
shrl
dec
mov
nop
out
insl
lods
popf
fnstenv
or
lret
push
inc
mov
or
shll
mov
mov
call
pop
or
pop
lcall
dec
rcr
inc
loopne
das
je
xor
push
mov
jb
cltd
mov
inc
sub
sbb
sahf
and
sbb
shlb
gs
idivb
in
mov
ds
mov
sub
sti
cmpsl
int3
push
fisttps
cmp
orl
xchg
sbb
xchg
adc
shlb
dec
xor
sbb
push
jnp
sub
pop
rorl
push
mov
lock
inc
aam
rclb
xchg
mov
pop
dec
stos
outsb
test
jbe
in
xor
jb
jecxz
and
outsl
pop
notl
jno
mov
out
inc
popf
xchg
mov
xor
ljmp
dec
fidivrs
in
dec
aam
dec
push
inc
in
daa
mov
sbb
icebp
test
jmp
mov
bnd
mov
or
popf
xor
fsubs
xor
push
push
mov
jo
fnsave
xchg
jp
mov
jbe
sub
cmp
jns
imul
shrl
mov
pop
inc
cltd
jb
sub
sbb
xor
mov
dec
adc
xor
imul
adc
mov
dec
xor
daa
outsb
and
pop
lcall
pop
mov
fiadds
fildll
addr16
das
add
adc
ljmp
dec
into
pushf
add
ljmp
fistl
nop
popf
les
inc
stc
xchg
inc
shrl
outsl
lret
sar
aam
adc
js
dec
cltd
inc
sahf
adc
jmp
loopne
scas
pop
out
and
cld
data16
cmp
test
xchg
sahf
outsb
iret
lret
cmpsl
xchg
jo
fs
imul
cmp
inc
ja
mov
cmp
test
mov
sub
pusha
lahf
sarl
jno
dec
fnop
addr16
int
andl
ret
push
int
into
stc
ds
mov
pop
lock
jnp
inc
dec
js
test
cwtl
lods
aaa
dec
dec
and
inc
mov
jmp
pop
mov
add
test
mov
jle
aam
pushf
push
adc
cmp
and
push
loope,pt
jle
cld
jb
ret
sub
mov
lcall
out
lret
sub
mov
mov
pop
insb
mov
dec
stos
sbb
push
xlat
push
xchg
sbb
xchg
in
xchg
cmp
sub
popl
mov
out
in
sbb
fmull
adcl
pop
stc
test
mov
sbb
pop
xchg
or
inc
cs
stc
pop
shl
ds
pop
cmpsl
push
cmp
mov
push
dec
sub
out
adc
dec
daa
cli
sahf
outsl
aam
or
in
or
imul
push
leave
cmp
test
sahf
scas
js
push
or
push
sbbl
loop
hlt
jns
jne
daa
adc
outsl
test
in
fwait
fisttpll
jl
add
cmpsb
adc
sbb
cwtl
fbstp
dec
mov
daa
xor
fwait
enter
push
out
mov
sub
jo
sub
leave
cmp
mov
lahf
push
popa
into
pop
aad
es
sti
into
ljmp
loopne
test
stc
nop
jne,pn
adc
pusha
pop
fisttpl
rolb
inc
lret
data16
dec
fwait
push
xchg
je
stos
ds
and
les
lret
cmpsb
mov
mov
popf
mov
out
shl
push
mov
sbb
negl
loopne
sahf
or
mov
cltd
cmp
or
push
xor
jns
add
mov
or
cmp
pop
pop
xchg
and
or
loopne
aam
inc
cli
xabort
imul
lods
fildl
and
lret
rcl
into
or
outsl
jae
dec
or
bound
repnz
jo
in
or
out
push
xlat
pop
adc
popf
arpl
pop
test
sub
xor
sbb
jae
outsl
jecxz
and
jmp
sbb
cmp
int3
scas
vpmacsww
scas
adc
mov
or
jmp
xor
hlt
pop
or
cmp
push
xor
outsb
rcrb
lahf
addb
mov
sub
gs
dec
in
icebp
subb
pop
mov
ret
sub
cwtl
and
arpl
pop
cmpsb
arpl
xorw
xchg
aaa
lahf
fsubp
out
out
ds
mov
adc
add
loop
jne
out
mov
adc
lods
out
and
nop
stc
mov
cwtl
xlat
cmp
pop
adc
mov
mov
mov
or
mov
dec
shl
xchg
fsub
inc
mov
cmp
outsl
lret
push
cmp
inc
push
xchg
pop
into
mov
pushf
int3
inc
fldcw
mov
bound
imul
pop
loope
sti
xor
lret
add
outsl
push
ja
cmpsb
daa
add
mov
enter
dec
push
leave
push
adc
insb
mov
xor
ret
adc
in
ljmp
repnz
add
sub
test
lahf
dec
mov
jecxz
mov
ss
mov
daa
push
int
or
daa
inc
mov
lds
pop
and
imul
jmp
leave
out
sub
or
in
push
pop
andl
jo
stc
jl
popa
lods
mov
xchg
stos
jns
in
int3
jmp
adc
xor
xchg
int
into
jmp
jb
xchg
xchg
add
pop
cmp
or
das
lea
sar
dec
cmp
lods
sbb
sub
add
push
xchg
out
mov
inc
inc
jb
mov
in
int
sbb
fs
out
dec
stos
icebp
inc
aaa
lea
push
stos
xor
scas
ucomiss
into
jle
ficoms
inc
rcrl
stos
sub
cmpsb
mov
pop
fdivrl
and
outsl
std
or
xor
mov
cmp
jo
pop
movsb
enter
aam
out
fisttpl
mov
repz
ljmp
inc
gs
sub
fcoms
jae
icebp
jb
adc
or
adc
popf
shr
pop
pop
mov
outsb
leave
jg
mov
hlt
mov
jp
xor
inc
dec
mov
inc
push
in
adc
movsl
cltd
ret
insb
push
cmpsb
jbe
xor
les
jo
jb
insb
pop
cmp
mov
loope
sub
mov
push
scas
xor
cmp
call
ret
cli
sub
ss
or
sub
mov
push
xchg
jecxz
or
insb
dec
add
scas
and
addr16
push
push
inc
aas
sti
popf
shlb
mov
push
jns
cli
adc
sub
mov
repnz
sub
xlat
nop
push
arpl
cs
arpl
pop
xchg
mov
mov
pop
gs
inc
pop
mov
push
aam
not
dec
add
jmp
cmp
cmpsl
ds
xor
out
or
mov
sahf
fs
adc
fs
orl
cltd
mov
add
shll
aas
cmp
cmp
or
xchg
pusha
das
outsb
ss
popf
cmpsl
aam
shll
outsl
dec
test
sub
fstpl
fsts
sbb
rcrl
jg
dec
add
xchg
jecxz
cmpsl
fnsave
lea
xchg
lods
in
sub
stc
sub
scas
icebp
xor
nop
jbe
xor
in
or
enter
mov
push
inc
out
rolb
mov
fld
xchg
xchg
fs
jae
inc
div
rorl
aaa
fistpll
cmp
mov
cwtl
insl
jno
lods
cmpsb
loop
icebp
xchg
fadd
aas
jae
out
aad
mov
jge
jbe
mov
dec
test
or
xchg
xchg
movb
xchg
pop
adc
mov
mov
mov
arpl
daa
xchg
add
into
pop
sahf
push
mov
stos
jb,pn
mov
lret
xor
push
repz
push
inc
adc
and
stos
push
in
les
sbb
mov
daa
dec
push
hlt
cmp
aas
stos
int3
pusha
pop
test
sub
into
stos
leave
data16
push
or
pop
pop
cli
pop
rorl
push
out
sbb
mov
fwait
dec
cltd
ret
imul
cld
push
xchg
in
xor
nop
adc
cmp
dec
repnz
cmpsb
enter
scas
or
jno
ret
jne
shll
jb
mov
into
out
push
ja
mov
pop
push
ja
mov
push
jl
adc
daa
lret
jne
in
dec
stos
in
rorw
repz
and
pop
imul
out
push
fisubrs
mov
jle
in
xchg
ljmp
xchg
mov
roll
push
lret
mov
out
dec
movb
dec
rorb
push
insl
dec
cmp
gs
jb
cmpb
mov
cs
das
int3
das
mov
fwait
aad
dec
xor
sbb
mov
sub
scas
jp
test
sub
adc
pop
fdivl
or
push
push
shll
test
xchg
jae
out
pop
in
es
push
jno
mov
xor
test
sti
mov
lret
stos
mov
xor
adc
lret
iret
and
inc
add
jb
data16
jle
sahf
fstps
mov
lods
add
in
movl
sti
mov
frstor
stos
mov
inc
into
and
push
xor
mulb
jge
mov
and
jmp
jb
mov
sub
jp
sub
cltd
push
sbb
cmpsl
cmp
repz
data16
out
cmpb
icebp
enter
cmp
dec
adc
jp
lds
jbe
push
repz
mov
jp
inc
xor
scas
loopne
sbb
test
ss
sbb
mov
jge
push
cmpsb
add
leave
push
fldenv
int3
xchg
mov
stos
fisttpl
decb
movsl
sarb
adcl
mov
clc
ja
rcrb
test
xchg
mulb
fwait
imul
sbb
pop
inc
pop
sub
lock
add
sub
lods
popa
pop
xchg
push
nop
loop
rcl
pop
les
ds
mov
cmp
out
pop
inc
dec
xlat
outsb
scas
mov
icebp
out
lret
or
mov
cltd
sbb
leave
xchg
mov
mov
sti
sub
aam
inc
div
inc
push
aas
mov
mov
cli
jnp
sti
enter
or
cmp
lret
dec
mov
imul
lea
add
mov
xchg
sbb
loope
sub
mov
scas
xor
cs
in
sub
ljmp
pusha
jne
jno
mov
scas
push
aad
fs
in
cltd
jb
mov
outsb
or
in
mov
lods
inc
xchg
xor
into
push
adc
loope
jns
mov
dec
jno
cld
add
es
and
int
mov
or
mov
fnsave
push
adc
add
mov
fwait
repnz
add
cld
add
es
jns
xchg
dec
add
scas
sub
shlb
addr16
jmp
enter
addb
bound
mov
push
push
xor
stc
test
scas
adc
add
shll
sub
aam
push
xchg
xor
fnstenv
mov
scas
and
xchg
test
mov
dec
data16
ss
sti
test
pop
dec
adc
repz
fcomi
cmp
cmp
pop
lret
jle
dec
push
rcrl
cmp
bound
int3
lods
and
out
cltd
aam
cmc
scas
loopne
loop,pt
dec
xor
xchg
rcr
xor
aad
or
push
or
mov
ss
and
mov
mov
loope
fxch
mov
roll
lret
shl
lds
jecxz
pop
int
cs
xlat
mov
sub
sub
or
fs
cmc
mov
mov
mov
out
ficoms
fwait
cmp
aas
int
movsl
call
adc
hlt
mov
dec
and
aam
xor
hlt
mov
fistps
imul
js
dec
andl
ja
xor
leave
and
jo
xchg
out
fmuls
pop
dec
mov
sub
sub
mov
sub
ficompl
mov
mov
dec
push
xchg
in
cmp
fadd
inc
test
stos
jno
mov
pop
dec
mov
in
insl
pop
sub
and
xchg
adc
cmp
call
pop
dec
inc
jb
inc
shr
xchg
jge
pop
mov
push
insb
or
xchg
gs
xchg
ss
sbb
je
pop
mov
shlb
pop
add
jmp
movsb
insb
pop
mov
and
aad
addb
adc
xlat
add
dec
in
cmp
mov
stc
push
adc
or
aas
sub
enter
pop
mov
xchg
outsb
add
lea
jp
in
cwtl
mov
gs
xor
ret
int3
arpl
jno
xchg
push
xor
fsubs
jge
push
loop
dec
xchg
sbb
and
sti
sub
pop
data16
cmp
fcomps
inc
test
call
data16
out
stos
and
repnz
insb
popf
jl
dec
setl
jbe
rorb
fwait
repnz
push
or
pop
push
push
test
push
arpl
imul
pusha
arpl
int3
shll
fnstcw
mov
jecxz
out
adc
jo
add
sahf
gs
ret
stos
xchg
xor
xor
cwtl
push
pop
jns
icebp
push
pop
xchg
lcall
or
xchg
nop
add
xor
or
dec
jno
xor
ds
movsb
xchg
cmp
lods
pop
pop
lahf
mov
inc
daa
call
movb
dec
mov
repz
push
mov
sub
mov
outsl
or
dec
and
push
mov
dec
lods
mov
and
subb
rcr
jecxz
inc
mov
mov
loop
mov
xor
jl
into
inc
push
gs
fs
orl
ror
jle
lcall
iret
mov
xchg
cs
bswap
int
or
call
and
jne
sub
lock
mov
lcall
sub
xchg
mov
add
ret
dec
pop
aaa
cmp
in
adc
push
jbe
pop
push
loopne
stos
mov
fwait
cmp
cli
stc
testb
xor
testb
stos
jne
xor
aaa
adc
sar
pop
lret
rorl
jne
jae
adc
int
push
mov
mov
add
jo
int
mov
mov
mov
and
adc
in
lcall
fdivl
xchg
sub
jp
jle
in
dec
leave
push
sbb
shlb
mov
or
out
jno
outsl
aam
test
mov
std
or
mov
mov
inc
or
hlt
loop
push
push
pop
cmp
imul
fldt
sbb
xchg
inc
lcall
fidivl
cmp
push
dec
mov
nop
arpl
lds
cmp
push
fs
rclb
stos
jnp
lahf
or
insb
push
pop
iret
push
lock
xchg
sbb
fisubrs
add
inc
sbb
popf
mov
dec
mov
test
fimuls
dec
pop
mov
test
xchg
in
add
add
sub
jl
xchg
daa
sub
jg
lahf
pop
or
jp
lds
xchg
adc
gs
mov
sub
inc
jnp
and
inc
js
adc
fwait
dec
xchg
ds
jne
inc
ss
and
mov
add
pusha
lcall
lea
cld
jb
mov
or
xchg
xchg
mov
adc
push
dec
imul
imul
jmp
clc
mov
icebp
gs
mov
mov
jmp
sbbl
inc
push
repz
sti
mov
or
scas
cmc
div
add
mov
cmp
add
int3
xchg
jb
jae
sub
in
test
in
jmp
inc
movsb
and
insl
cmp
pop
mov
shll
mov
ret
mov
xchg
pop
bound
and
cmp
mov
push
mov
inc
or
mov
rorb
icebp
fcmovnbe
repz
lock
jle
push
out
cmpsb
xchg
repz
and
dec
ds
gs
leave
push
lcall
fidivl
lds
dec
rcr
mov
or
adc
popf
cmp
loope
mov
inc
cs
or
daa
cmp
dec
orl
push
hlt
cmp
xchg
mov
lods
mov
mov
xlat
adc
xlat
xor
hlt
mov
adc
popf
mov
hlt
inc
cmpsb
pop
sbb
cmpsl
mov
adc
or
mov
popa
cltd
call
shlb
test
xor
stc
jnp
or
mov
rorl
mov
into
sbb
sbb
ret
das
popl
or
jg
ss
in
or
mov
int
add
fidivrl
inc
jg
test
push
sub
inc
dec
repz
loopne
sbb
out
or
mov
rclb
enter
pop
pop
test
cmp
mov
jl
repnz
sbb
shrb
push
push
push
aam
jne
cmp
shlb
push
jne
ret
or
test
inc
jo
stc
xchg
push
loope
js
addr16
push
xchg
popa
fs
mov
adc
push
int
push
loop
mov
ss
adc
outsl
and
leave
inc
idivb
mov
mov
jg
sbb
dec
out
jge
repz
addl
fs
sbb
push
mov
mov
scas
push
add
addr16
in
les
mov
scas
add
dec
mov
cmp
test
inc
rolb
imul
dec
aad
icebp
fwait
mov
pop
sahf
in
aad
xor
xor
jp
sbb
aaa
and
pop
pop
aas
ss
push
ljmp
add
jle
orl
sub
xchg
mov
out
cmp
mov
cwtl
xor
mov
or
jb
jp
fwait
int3
push
insl
movsb
mov
jb
shll
jp
std
jge
jp
sarb
and
test
cmc
adc
mov
cmpsb
mov
jp
add
daa
sbbb
fsubrp
push
stos
dec
cld
pop
xchg
jae
dec
cwtl
lods
mov
pop
test
adc
cld
inc
rorb
orl
aaa
clc
lea
test
add
xorb
and
out
adc
aaa
aas
ret
lret
and
cvtdq2ps
adc
repnz
cmpb
and
enter
in
imul
hlt
test
pushf
xchg
pop
mov
add
test
jmp
and
mov
or
xchg
mov
sarl
adcb
sub
sbbl
mov
lcall
jmp
imul
repnz
fcom
jb
test
add
sub
lock
cwtl
push
xlat
movsl
lret
subb
lds
xorl
inc
or
mov
insl
lea
mov
cld
push
adc
jmp
xor
cs
push
push
lods
xor
xor
into
dec
fsubl
xor
data16
push
lret
push
cmc
adc
ljmp
daa
mov
push
ljmp
enter
scas
outsb
fs
cmpsl
stc
les
test
push
bound
cs
cmc
xlat
jne
pop
imul
outsl
fsts
pop
sub
push
adc
divb
hlt
mov
shlb
iret
xor
cli
xor
mov
out
mov
inc
cld
push
push
jmp
mov
cmpsl
pop
inc
mov
iret
pop
jbe
sbb
jne
outsl
push
mov
scas
push
les
rclb
push
iret
mulb
fs
loop
test
cmp
xchg
inc
in
mov
es
cmp
inc
jbe
sub
mov
and
sti
cmp
mov
cld
xor
jg
rcr
xor
and
xchg
mov
adc
mov
jp
dec
add
out
movb
hlt
inc
popf
cmp
mull
or
mov
mov
fwait
jns
mov
outsb
shl
gs
or
sar
mov
sub
mov
push
test
adc
andb
mov
add
jns
clc
mov
xchg
sub
addl
test
pop
fcoms
hlt
jo
sbb
xchg
stos
inc
jbe
xchg
and
sub
repz
adc
cltd
sarb
add
or
stc
mov
inc
fsubrs
mov
mov
divb
out
pop
ret
getsec
ds
dec
dec
mov
sub
xchg
imul
int
sub
mov
shrb
pusha
pop
jecxz
jge
push
mov
add
adc
clc
iret
iret
push
lahf
and
sub
inc
cmp
gs
inc
pop
sarb
test
mov
xlat
pop
cmpsl
stos
adc
les
xlat
repnz
mov
fmull
ja
rcrb
mov
xchg
in
inc
mov
adc
inc
or
mov
push
xchg
pusha
sub
push
or
dec
fcompl
ret
or
and
jno
dec
xor
out
arpl
adc
addr16
jg
aad
fmuls
xchg
mov
xchg
xchg
jne
fisttpl
sub
jl
and
jg
lods
push
mov
push
jmp
adc
adc
mov
ret
cli
push
xor
jb
negl
imul
std
xchg
shlb
lret
jae
je
decb
jle
sub
pop
or
mov
push
mov
sbb
mov
stos
xchg
cmc
mov
pushf
xlat
jecxz
notb
enter
inc
or
mov
flds
ficoms
testl
rcrl
mov
jne
aam
jmp
dec
lret
and
aam
das
mov
lret
xor
jge
mov
movsl
mov
jne
or
lods
lock
mov
mov
mov
lret
std
sub
or
and
movsl
add
lods
das
daa
testl
rclb
mov
mov
gs
jl
aad
cmp
inc
push
aad
sub
arpl
aad
jbe
xor
je
push
call
cmc
inc
into
jle
testl
inc
mov
aam
loope
outsl
add
inc
imul
inc
dec
xchg
mov
dec
lds
cmpsl
insl
insb
xchg
js
push
int3
sbb
xchg
xchg
jbe
or
xor
rcll
jecxz
inc
inc
ds
enter
fdivs
ljmp
or
andl
stos
adcl
imulb
jo
sbb
jg
adc
xor
dec
divb
jne
outsb
push
push
xchg
adc
add
leave
test
int3
mov
into
fcmovne
cmc
test
mov
in
sub
pusha
jl
popa
xchg
xor
pop
jmp
popa
cmp
push
mov
pop
lcall
cwtl
imul
leave
pusha
cwtl
scas
mov
dec
pusha
sub
test
cltd
nop
in
lock
in
test
leave
out
and
pop
add
or
push
shlb
and
adc
push
sub
mov
and
sub
push
dec
in
mov
and
adc
aaa
jnp
dec
mov
aaa
sbb
cmpsl
lods
in
dec
scas
pop
clc
out
test
push
ret
jmp
push
sbb
roll
xor
sub
out
es
lea
movsb
popf
or
jmp
mov
pusha
lock
xor
popa
jge
mov
fidivs
xor
dec
sub
cld
es
xchg
xor
je
inc
popa
add
xlat
add
dec
cltd
bound
gs
pop
je
stos
lret
adc
mov
or
and
lahf
std
stos
jle
xor
ret
scas
push
mov
negl
xor
cwtl
sbb
imul
daa
rcrb
scas
inc
xchg
sub
nop
pusha
icebp
jg
pop
push
leave
ljmp
lahf
pop
lret
sti
sbb
pop
jmp
mov
inc
sub
in
mov
loope
cmpsb
popa
shll
sbb
mov
sti
jae
test
inc
lahf
inc
test
ror
jbe
iret
xor
sbb
jne
mov
xchg
leave
adc
mov
out
pop
cs
sub
shrl
add
sub
pop
jno
xchg
jmp
mov
pop
dec
idivb
add
js
sub
add
shll
popf
std
lcall
adc
pop
mov
jno
add
push
stos
les
cmp
pop
das
mov
add
sub
jmp
xchg
call
mov
xchg
aad
vpermil2pd
dec
jg
dec
in
imul
aas
dec
lcall
pop
fnstenv
loopne
aaa
jecxz
pushf
lret
in
jmp
leave
clc
jecxz
jp
cmpsl
cli
sub
mov
aas
jno
int
mov
aad
jl
and
pop
lds
in
loopne
cld
or
xchg
sub
out
out
fnstenv
gs
mov
stc
sbb
xlat
sbb
ffree
into
addr16
cmp
or
ja
add
add
pop
xchg
fsubrs
lcall
int
in
pop
and
xchg
imul
mov
xlat
fs
jge
inc
mov
enter
mov
dec
xchg
mov
inc
adc
pop
ret
push
sbb
bound
jl
orb
sbb
in
dec
dec
shll
mov
add
in
adc
xchg
cmp
mov
cmp
test
mov
jecxz
ljmp
std
movsb
xor
or
cli
pop
pop
jp
lds
lea
ja
in
push
stc
rorb
or
imul
bound
xlat
lea
xor
jne
loop
adc
cmp
lcall
in
lea
fs
sub
in
data16
ss
adc
cmp
fcomps
push
repz
xchg
sub
mov
cmc
shll
pop
js
outsl
add
aaa
adc
imul
cs
lret
pop
lret
xchg
gs
push
inc
hlt
icebp
ret
jae
cmp
cmp
xor
xor
mov
add
pop
imulb
js
icebp
scas
xchg
leave
adc
mov
test
mov
add
mov
aaa
jbe
mov
mov
out
roll
jmp
lods
roll
negb
fmull
int3
repnz
xor
ss
ss
push
insb
imul
push
daa
mov
stos
fs
jmp
sub
cmpsb
lret
sub
sub
push
mov
nop
stos
add
cmp
mov
or
scas
jg
inc
enter
fwait
rclb
ror
xor
mov
int
outsl
push
sbb
iret
jg
arpl
inc
xchg
out
fs
movsb
push
outsb
add
sub
pop
ret
mov
xchg
mov
push
jne
push
das
jnp
jbe
mov
jbe
xlat
std
rcrl
sbb
fdivrs
adc
mov
mov
push
cmp
call
inc
int3
les
adc
add
pop
aad
and
inc
jg
and
mov
push
mov
mov
cmp
fld
xchg
cs
xor
push
inc
icebp
mov
mov
divb
pushf
test
movsl
push
dec
repnz
add
mov
imul
orl
jno
in
test
cmp
enter
shll
mov
pop
shll
jg
jl
cmpsb
mov
lahf
mov
cmpsb
cwtl
lcall
jge
dec
xchg
lods
mov
gs
xlat
xor
mov
pushf
lret
cmp
jbe
cmp
dec
lods
cmp
sub
test
adc
add
jmp
jg
mov
add
fisubl
adc
inc
mov
cmp
fdivs
fldcw
ds
ds
mov
cld
xchg
jg
insb
jbe
push
andl
fnstenv
adc
push
sbb
das
fistpl
cmp
out
or
testb
pushf
xchg
in
sub
push
popl
aad
sbb
or
lahf
jo
in
sbb
hlt
fsubl
leave
lods
and
rcrl
icebp
subb
hlt
repz
in
adc
out
dec
cmovle
push
loop
test
jne
sbb
icebp
fcmovne
pop
push
cmp
dec
test
adc
mov
das
fdiv
insl
imul
out
push
icebp
sub
push
das
push
push
pop
fucomp
sahf
jp
or
or
mov
mov
adc
adc
adc
fwait
aam
sti
jbe
adc
lahf
inc
inc
and
fadds
push
in
aam
lds
icebp
lret
or
dec
dec
sub
and
ds
mov
or
subl
scas
xchg
lock
gs
inc
cmpsl
jle
adc
sbb
mov
mov
lea
xchg
jg
outsb
mov
fbld
sbb
shll
mov
push
and
push
shrl
mov
jecxz
int3
out
mov
sbb
mov
leave
jb
cli
int
out
jle
push
addr16
dec
fwait
mov
or
in
mov
pop
cmp
and
jbe
cltd
pop
rolb
loop
out
push
sbb
imul
or
mov
fldt
pop
fldt
ds
pop
jge
cltd
pop
push
stos
dec
clc
xchg
js
lds
add
fmull
jle
adc
add
inc
ds
inc
add
xchg
inc
mov
sbb
subb
jae
mov
lock
test
lods
hlt
inc
rcrb
lock
orl
addr16
cmp
enter
mov
inc
adc
jmp
sti
jle
lds
cmp
rep
xor
fbstp
mov
xor
out
pop
mov
mov
out
xlat
mov
das
mov
push
dec
mov
out
mov
jo
push
orb
mov
dec
movsl
cwtl
inc
enter
cmpsb
inc
xchg
push
ds
ljmp
cmpl
and
xor
fnstenv
mov
jae
or
leave
js
or
jecxz
daa
test
jmp
jg
add
mov
add
mov
or
inc
sarl
lods
dec
faddl
enter
mov
dec
fsts
inc
mov
inc
mov
aas
or
push
pop
data16
lds
or
push
push
mov
xlat
arpl
in
lea
insl
xchg
cmpsl
xchg
adc
fistps
scas
iret
mov
mov
cmp
fsubs
cmp
cld
jno
incb
pop
cmpsb
jo
lods
pop
mov
cli
rorl
or
or
add
scas
fildl
sahf
push
cmp
pop
mov
cmp
xor
and
jns
xlat
mov
jae
insl
cmp
sbb
adc
push
in
test
xor
mov
push
cmp
mov
loopne
test
mov
mov
xchg
mov
jg
mov
cmpsl
push
ret
cmp
jb
mov
pop
jo
gs
imul
jmp
jmp
sub
xor
and
pop
sbb
lock
in
inc
cs
or
aad
addb
aad
test
jmp
pop
or
jmp
and
adc
dec
int
out
mov
xchg
jg
mov
xor
inc
add
mov
mov
and
loope
mov
shll
jge
pop
insb
insb
pop
xchg
rorl
xchg
ss
mov
sbb
and
jmp
je
ret
mov
add
cmpsl
aaa
push
cmp
jecxz
loopne
inc
divl
les
gs
dec
push
pop
and
xchg
aad
jno
int
outsl
inc
ja
cld
mov
cwtl
in
pop
inc
in
dec
push
mov
aaa
cmp
sti
in
repnz
push
inc
and
sub
pop
dec
in
inc
xchg
std
roll
roll
sub
aam
pushf
loop
jge
and
xor
sti
scas
int3
add
loope
cmp
sahf
addr16
lods
and
aaa
pop
cmp
lds
outsl
dec
xchg
icebp
mov
rcr
push
imul
sahf
mov
fcmovne
in
ja
push
push
xor
sub
imul
mov
out
mov
pop
stos
rcl
lret
mov
ret
sarb
pop
lods
mov
aam
add
mov
ficoml
cld
fistpll
scas
xchg
pop
pop
adc
aad
cmpsl
out
sbb
sub
inc
and
stos
cltd
test
mov
dec
cmp
aad
xor
push
jp
cmc
outsb
jp
test
cmp
pop
and
aad
sbb
jmp
aad
jp
es
aam
or
sbbb
mov
fistl
lret
mov
hlt
and
pop
out
jmp
fdivrs
cmpsb
cmp
pop
and
pop
pop
or
insl
lret
mov
aaa
loop
xor
scas
in
incb
cs
add
outsb
inc
mov
adcb
adc
jle
fisttpll
hlt
xchg
mov
stos
fadds
aad
ret
xchg
addl
sarb
fbstp
mull
lock
add
rcrb
mov
arpl
and
hlt
clc
push
jnp
sbb
dec
pop
sbb
add
imul
daa
adc
mov
stc
lds
imul
jnp
sbb
inc
and
adc
roll
fbld
inc
dec
and
test
pop
jg
mov
jbe
shll
xor
cmp
mov
and
cs
mov
fcmove
leave
adc
pop
jl
adc
ds
push
jp
mov
rclb
jo
popa
inc
aas
sahf
pop
test
lcall
in
lret
jg
adc
mov
xchg
inc
mov
dec
cs
sti
data16
int
loope
jge
dec
sub
jnp
xor
cmp
cmp
xchg
or
out
test
sub
rorl
dec
xor
lret
sub
cltd
rcll
dec
jnp
pusha
mov
and
adc
mov
push
jecxz
add
mov
movsl
in
inc
sbbl
pop
daa
sub
push
mov
in
lcall
mov
fstps
sar
lcall
sbb
sbb
mov
je
adc
addb
pusha
push
and
xchg
and
test
mov
testb
icebp
mov
ds
dec
mov
dec
popf
loopne
push
adc
mov
push
fisubrl
repz
mov
lfs
test
dec
shrl
dec
xor
lea
adc
int
sub
pop
or
pop
fisttpl
shll
mov
push
cmp
pmuludq
ret
test
popf
jmp
mov
out
adcb
add
outsl
lods
clc
jo
inc
mov
add
cmp
out
mov
fdivr
andb
pop
mov
ficompl
xlat
fidivl
pop
leave
or
test
jns
pop
lret
fs
mov
sbb
or
mov
insl
push
jmp
xor
xchg
xchg
imul
xchg
jmp
ss
fadd
movsb
inc
mov
ja
mov
enter
cmpsl
mov
push
pushf
mov
xchg
xchg
pop
sahf
mov
jns
or
sbb
cmpsb
scas
pop
sbb
dec
sarl
aad
mov
inc
mov
cmp
sti
sbb
inc
pop
pop
jmp
inc
jle
inc
in
stos
ret
stc
xchg
cwtl
adc
rcr
sub
sub
out
inc
adc
jmp
mov
cli
xchg
pop
add
popf
push
inc
in
push
shl
inc
sub
mov
test
pop
lahf
jge
push
push
movsb
mov
jno
pop
mov
jne
imul
scas
mov
cmp
aam
mov
test
add
cld
rclb
pusha
pop
jp
or
lods
cs
mov
out
mov
fcmove
negb
cmp
vmovhpd
stc
das
pusha
ret
add
int
jle
sub
call
sldt
fwait
test
fs
xor
inc
pop
cmpsl
fs
lret
and
cmp
pop
jle
adc
add
jge
int
sub
aad
push
clc
mov
adc
inc
mov
out
frstor
adc
sahf
scas
add
fs
or
adc
adc
test
jge
or
dec
bnd
mov
inc
mov
subl
mov
into
xchg
enter
scas
ret
enter
movsl
into
insb
pop
push
jae
xchg
and
ja
xchg
pop
pop
repnz
pop
mov
xchg
cmp
les
adc
jae
loop
push
mov
mov
les
testl
test
sbb
adc
mov
nop
jnp
loop
sbb
hlt
gs
movsb
inc
fwait
and
mov
sbb
inc
inc
std
movsl
push
add
shll
dec
iret
mov
outsb
inc
rcll
dec
faddp
cmp
mov
add
leave
dec
push
adc
imulb
shrl
cmpsb
test
sub
movsl
or
inc
mov
out
fidivrs
incl
dec
mov
add
jae
outsl
mov
inc
push
mov
cmp
es
xchg
shrb
jmp
adc
fdivr
jg
add
sub
pusha
ret
mov
mov
xchg
fiaddl
push
mov
add
mov
fwait
jne
das
push
mov
aad
add
shl
add
sub
sbb
add
mov
adc
jp
sbb
xor
sahf
cltd
popf
dec
test
shlb
js
dec
fsubs
dec
pusha
sbb
mov
cmpsl
outsb
sub
pop
sub
adc
pop
or
jbe
pop
iret
xor
arpl
mov
dec
sbb
adc
cwtl
dec
mov
sbb
popa
cmc
jl
inc
movsl
cmp
mov
sub
lods
adc
bound
test
ret
iret
mov
xor
out
stos
inc
fwait
cli
sub
rcrb
repz
and
jmp
pop
mov
lods
aas
adc
shr
and
xor
aas
aaa
jl
enter
out
mov
fcoml
cmp
jne
jp
mov
jmp
orl
or
mov
aaa
pusha
fs
repz
cwtl
or
add
pop
jbe
ret
fnstenv
mov
scas
je
sbb
cmp
xor
repz
dec
cmp
push
loopne
or
aad
mov
aaa
in
push
push
inc
dec
lret
dec
in
fdivp
pushf
int3
int
movsl
jno
cmp
sub
repnz
jp
pop
xlat
push
push
jg
lret
mov
lret
cmpsl
mov
and
mov
rcrl
fisttpll
cmp
push
xchg
sub
sub
and
fcmovne
push
js
fdivrs
dec
xor
and
push
xchg
dec
lcall
dec
mov
test
loope
fsubrs
jmp
insb
movsb
inc
xor
ljmp
xor
lods
jo
clc
out
popa
mov
pop
pop
cmpsl
xchg
daa
icebp
push
cmpsb
in
mov
dec
insl
sub
insb
div
push
repz
jge
arpl
rorb
xor
xchg
inc
in
push
jmp
push
aam
add
jle
inc
andb
xchg
fldl
pusha
movsl
mov
js
inc
xchg
sahf
gs
add
xor
rcll
cmp
cmp
in
inc
push
enter
and
test
fistpl
ds
cld
lahf
cmp
sarb
jmp
mov
jb
into
xchg
dec
mov
jl
push
sub
clc
loope
in
lret
arpl
xchg
lret
sarb
inc
adc
lds
mov
jge
dec
enter
movsl
fsubrs
inc
mov
xchg
push
stc
sbbl
push
inc
pop
rolb
lock
mov
mov
rcll
bound
push
fldl2t
cmp
das
out
adc
loopne
fisttpll
mov
xchg
insb
iret
aaa
js
loop
lock
cmp
pop
dec
pop
cmp
or
cmpsb
lods
test
arpl
imul
lret
sarb
cltd
and
xor
popa
pop
mov
aaa
mov
mov
pop
dec
andb
in
xor
mov
cmc
nop
push
xor
push
jge
call
notb
fs
mov
sbbl
mov
clc
shlb
or
xchg
xchg
sbb
adc
xorl
mov
cmpsb
add
rcrb
jmp
inc
cmp
mov
test
mov
push
rol
pop
outsl
mov
lret
lret
add
sbb
cli
in
push
inc
mov
jne
push
jae
repnz
pop
aaa
fstps
fistpl
and
sub
enter
aad
xor
pop
xchg
stos
xor
popa
rcll
mov
push
push
sbb
xor
adc
jne
sahf
cmp
mov
pop
mov
cmp
push
cmp
pushf
jo
jb
lcall
test
inc
jnp
sbb
sbb
inc
clc
shlb
ficompl
mov
or
and
daa
gs
in
xor
into
add
fwait
shrl
inc
push
pop
out
mov
loopne
and
adc
nop
push
or
inc
mov
jbe
xor
out
imul
mov
mov
and
xchg
xor
sub
shlb
and
inc
sub
repnz
and
std
mov
sahf
pop
stc
or
cmp
cmp
subl
mov
aaa
nop
aaa
cld
xor
pop
fdivr
outsl
adc
cmp
jg
mov
mov
jns
pop
adc
mov
test
aam
pop
pop
xor
mov
aas
push
test
in
dec
adcb
cli
xchg
clc
cltd
sbb
iret
ret
inc
movsl
add
das
push
inc
add
and
sahf
iret
pop
sti
sbb
mov
leave
movswl
in
cmp
jno
shll
xchg
lcall
xchg
adc
std
ficoms
cltd
push
push
mov
in
push
jno
cmp
cld
xor
inc
jae
push
dec
and
scas
outsl
lcall
cli
nop
mov
movsb
and
xchg
sub
test
leave
movsb
adc
leave
outsb
movsl
sbb
jecxz
hlt
loop
jnp
int
xor
lcall
inc
out
add
lret
mov
adc
call
idivl
add
lock
sub
jnp
xor
adc
hlt
and
sub
pop
clc
push
dec
jl
idiv
gs
mov
inc
xchg
pop
std
mov
mov
add
pop
scas
movaps
es
outsb
mov
lcall
nop
lret
sub
push
add
movsl
add
in
jl
iret
inc
popa
leave
pop
cltd
sahf
xchg
rolb
inc
sarl
sub
xor
aam
repnz
cmp
icebp
mov
aas
daa
rcrl
sub
testl
jecxz
cmc
lret
and
push
inc
dec
test
and
pushf
mov
xchg
addr16
add
dec
movsb
sti
push
les
les
sub
mov
call
bound
push
mov
ficompl
jle
sub
or
dec
and
je
test
adc
xchg
push
mov
mov
outsb
clc
inc
add
mov
rdtsc
into
mov
in
xlat
mov
loope
mov
xchg
jae
mov
cmp
or
jnp
loop
cmp
sarb
sarl
and
fdiv
int3
xchg
push
iret
jl
pop
xchg
push
in
xchg
aas
pop
xchg
repz
cmp
and
frstor
in
cmp
fisubrs
loop
test
roll
repnz
out
adc
jmp
inc
adc
jae
out
ficoml
mov
sub
and
scas
adc
push
add
or
jbe
xchg
mov
das
cli
inc
dec
push
ds
jmp
fisttpl
iret
push
pop
scas
sbb
mov
lods
cmp
lds
aam
adc
or
and
cmpb
lds
nop
sbbb
mov
mov
stos
xor
xchg
das
and
fsubrl
jns
gs
das
inc
jmp
xlat
pop
icebp
cmpsl
jecxz
jle
mov
lea
pop
jecxz
test
rolb
insb
jmp
xchg
jne
fxch
pop
xchg
xor
mov
add
xchg
mov
pop
push
mov
push
mov
sbb
test
cmp
aas
adc
fidivrl
adc
into
repnz
mov
pusha
cld
daa
or
stos
test
icebp
mov
dec
cld
mov
movsl
xlat
pop
mov
sti
or
jmp
addr16
negl
xor
adc
ret
aas
rorb
mov
fwait
mov
dec
aad
cld
pop
daa
push
or
jne
cmp
and
lock
in
pop
pop
es
dec
xor
movsb
data16
je
ja
rcrb
clc
test
lods
jecxz
lods
stc
ret
xchg
stos
push
lret
subl
add
mov
and
push
cmp
inc
mov
mov
inc
sbb
ret
mov
iret
sbb
ret
test
mov
mull
push
ret
and
xchg
out
jl
outsl
into
ret
in
xchg
iret
pop
add
inc
adc
imul
aam
loope
jg
jo
stos
outsb
rorb
ss
mov
cli
stc
xchg
shrb
in
mov
xchg
repz
xchg
xchg
aam
stc
stos
movsb
jmp
push
add
mov
dec
xlat
xlat
jl
pop
mov
sbb
and
dec
mov
cmp
mov
jge
pop
shrl
fwait
xchg
add
jmp
pop
in
stos
xor
aad
lahf
jb
movsl
push
add
add
push
push
dec
sbb
sbb
push
mov
xor
mov
sbb
sahf
sbb
xor
lret
xchg
jbe
jno,pt
or
dec
sbb
inc
mov
sub
into
movsb
inc
and
mov
sub
jb
mov
xor
js
mov
cltd
les
clc
sub
es
stos
pop
dec
into
aaa
dec
das
and
subl
push
xor
mov
and
add
push
mov
lcall
js
inc
outsb
inc
int
lock
lods
arpl
push
enter
stos
xor
adc
push
out
shlb
or
jg
popw
adc
in
jne
pop
out
jb
sbb
loopne
jg
push
addl
mov
out
sub
gs
enter
scas
sarb
push
sub
in
rcl
push
push
cmc
inc
icebp
ret
pop
mov
jo
pop
flds
int
xchg
arpl
push
mov
adc
filds
dec
scas
lods
iret
push
jnp
mov
cmpsl
sub
gs
cmpsl
mov
imul
sbb
and
push
fisubs
lods
xor
aam
cmpsl
cmp
push
mov
pop
cmpsl
and
or
inc
jge
cmc
sahf
and
addr16
imul
dec
jne
lods
sub
and
and
dec
in
push
sbb
adc
xorb
push
pop
hlt
jne
sahf
and
pushf
push
mov
mov
xchg
xchg
fdivs
mov
jno
push
pop
cwtl
jmp
mov
in
xchg
sahf
outsl
orl
xor
data16
fwait
sahf
bound
dec
idivb
xchg
sbb
ja
mov
movsb
sbb
divl
jae
mov
push
jns
imul
sub
push
dec
mov
gs
repz
icebp
pusha
scas
insl
ljmp
and
shlb
mov
sbb
cmp
repz
cmp
sub
fcmovbe
mov
loop
and
xchg
xchg
xorl
cmp
xchg
fdiv
loopne
in
cmp
pop
mov
mov
push
dec
or
mov
xchg
out
into
orb
scas
xor
negl
lcall
orb
xor
sti
out
and
xchg
fidivrs
mov
lock
add
push
ja
stos
xchg
add
sbbl
sbb
in
imul
adc
mov
sub
and
lahf
das
ret
lods
push
ret
sub
movsb
pop
add
cld
repnz
push
ss
dec
xlat
pop
or
nop
pop
push
pop
sti
movsl
jl
jmp
adc
popf
dec
push
dec
mov
mov
out
xlat
rcrl
pop
jmp
cltd
dec
push
movsl
mov
xchg
aaa
js
dec
aad
ret
or
xor
out
mov
sar
push
xor
idiv
sbb
gs
sbb
mov
pop
ds
shll
mov
xchg
pop
int3
xor
fsts
add
shll
hlt
pop
pusha
sub
push
sbb
pop
shrl
pop
fwait
les
cli
in
addr16
pop
lcall
aam
mov
jno
xor
adc
push
in
sub
dec
pop
out
adcl
pop
inc
imul
add
leave
lret
test
lcall
inc
test
cmp
call
shlb
std
aad
or
imul
jns
push
mov
and
sbb
adc
lcall
mov
sbb
cwtl
xchg
xor
in
sbb
fisubrl
imul
or
mov
cmc
inc
scas
or
lods
cmp
or
lcall
pop
xchg
xchg
scas
rcrb
out
rcrb
and
insl
fwait
xchg
adc
arpl
leave
and
add
mov
mov
mov
xor
adc
jle
sbb
add
pop
add
mov
lret
and
filds
sub
lods
xor
imul
cmpsl
and
push
xchg
xchg
insl
adc
das
push
fdivrs
call
sbb
xlat
jb
mov
idivl
jecxz
sub
fsubl
fisubl
in
jno
lds
adc
sti
pop
out
lds
pusha
outsl
push
jno
das
sbb
cmp
cmp
xor
adc
push
xchg
xor
ss
and
add
roll
xchg
rorl
fcoms
mov
orb
xor
or
outsl
mov
testl
mov
mulb
xor
sbb
mov
jecxz
and
dec
das
ficompl
cld
and
push
xchg
sub
dec
fadd
lds
push
outsb
mov
mov
and
scas
xchg
std
es
mov
xor
lea
arpl
and
fcmovne
add
inc
pop
sbb
or
sbb
into
jge
cmp
mov
pop
sarl
dec
bound
scas
jno
ljmp
int
mov
and
xchg
les
ljmp
icebp
dec
imul
fnsave
add
mov
push
xor
fmull
stos
jo
test
push
mov
pusha
je
nop
and
jae
sub
fmuls
xor
outsl
mov
push
shll
jge
add
loop
sti
push
jbe
dec
std
lods
pop
mov
dec
std
and
cltd
mov
jo
divb
in
sahf
das
lods
fsubs
pop
in
fstps
jb
pop
es
mov
mov
mov
push
test
mov
addb
test
insl
sbb
lahf
mov
dec
adcb
xor
cmpsl
mov
lret
pop
inc
push
lret
divb
cmpsl
pop
movsl
outsb
cmp
jl
jmp
inc
adc
jae
and
mov
insb
push
jbe
iret
push
mov
out
mov
inc
mov
push
lods
push
xor
repz
enter
in
lods
pop
and
les
mov
adc
aas
sbb
xor
adc
fistl
daa
andl
idivl
notb
mov
add
gs
cmp
inc
test
ja
mov
push
mov
or
fistps
push
lods
mov
popf
ret
jmp
mov
sahf
inc
dec
xor
dec
cld
aad
fmulp
clc
jo
push
icebp
mov
into
into
xchg
lods
mov
call
xorl
xor
dec
repnz
jbe
lahf
imul
les
mov
adc
ret
cs
cmp
sbb
rol
enter
iret
jne
fnstenv
outsl
int
mov
mull
jne
dec
lret
fs
mov
pop
sbb
mov
sbb
push
push
push
filds
jo
sbb
xor
enter
sahf
lahf
cwtl
pop
add
and
scas
xor
mov
mov
xchg
xchg
insl
insl
nop
inc
inc
pop
inc
mov
inc
pop
fsubrl
jge
dec
test
xchg
mov
loop
mov
push
cmp
mov
lcall
xlat
cwtl
lret
in
mov
leave
lea
or
pop
mov
xchg
xor
dec
adc
pop
cmp
jno
incb
xchg
cmp
add
or
adc
mov
ss
or
cmp
push
leave
mov
and
add
jl
cwtl
or
add
sti
iret
int
cwtl
xchg
pusha
mov
xchg
inc
jo
movsl
xorb
xchg
sub
pop
push
inc
cmp
mov
sub
sbb
cmpsl
ja
sbb
pop
mov
aas
xchg
stos
int3
imul
xor
push
popf
int
jnp
inc
sub
fstps
cmp
inc
fsubl
inc
add
xor
stos
pop
pop
out
ror
cmpsb
sub
fsubl
inc
lods
adc
ret
xor
roll
data16
mov
nop
bound
sub
lret
sbb
in
or
push
sbbl
add
inc
enter
xchg
cli
in
cwtl
in
push
cwtl
es
mov
or
sbb
push
cmp
and
add
rcll
lret
fucomip
add
cmc
push
push
add
ret
nop
push
test
mov
mov
call
mov
adcb
pop
jb
mov
xorb
jmp
mov
mov
imul
push
mov
shrb
cmp
ja
cmc
mov
dec
xchg
mov
fwait
loope
and
xchg
push
or
scas
mov
lds
cli
cmp
ret
imul
ss
std
inc
mov
adc
lret
ds
aas
ficoml
and
sbb
jmp
stc
data16
or
xlat
or
insb
dec
je
arpl
daa
sub
lcall
jo
popa
add
sti
sahf
insl
repz
mov
lock
lret
pushf
dec
ficompl
sub
test
lcall
jbe
sahf
xchg
cld
mov
aaa
adc
out
mov
jle,pn
jb
cmc
mov
lret
and
out
add
mov
add
fdivr
mov
add
lcall
lods
push
pop
sub
in
das
out
popl
in
push
inc
cmp
test
sbb
pop
mov
lds
mov
int
jmp
movsl
pop
sub
jo
aaa
push
sub
push
xchg
mov
xchg
imul
inc
mov
ds
dec
test
sti
xor
sub
sbb
xchg
js
mov
sbb
push
popf
jge
mov
out
popf
inc
fnop
sbbb
inc
insl
gs
cmp
xorb
test
mov
insl
cmp
jae
ja
and
add
xor
sbb
lods
push
out
and
repnz
jg
orb
fisttps
movl
jp
jle
nop
fdivs
sub
dec
mov
jnp
xor
push
mov
lahf
and
scas
lret
outsb
pop
outsl
lods
dec
repnz
xchg
maskmovq
negl
add
fs
iret
shlb
dec
ret
ret
sub
aas
and
pushf
popf
int3
sub
inc
push
jae
int3
loope
add
sbb
shlb
in
mov
cwtl
jb
popa
stos
stos
mov
aam
pop
dec
idivl
dec
ret
insl
mov
pop
sbb
jns
out
or
sbb
roll
mov
sub
jmp
add
movsl
mov
in
or
dec
cmp
jp
test
sub
sub
int
inc
sub
xor
ret
lcall
inc
xor
add
xchg
popl
adc
pop
faddp
inc
mov
mov
xor
repz
pop
test
mov
add
push
jo
xor
and
out
mov
jne
xchg
lret
and
popl
in
jno
fdivp
out
or
xchg
dec
rorl
xlat
xchg
jl
sbb
xor
int
mov
mov
leave
xor
andl
sub
jecxz
mov
fwait
mov
aaa
add
and
pusha
push
cmc
xchg
xor
sbb
stos
sti
decb
inc
inc
lret
in
dec
mov
pusha
divb
rcr
dec
clc
out
and
imul
fucomip
jmp
jne
mov
pushf
inc
inc
rorb
daa
inc
jmp
xchg
fmuls
xchg
stos
push
fwait
add
idivl
scas
in
lcall
cltd
sub
repnz
xor
hlt
mov
mov
js
or
sbb
and
mov
cmp
xlat
mov
jae
mov
outsb
je
mov
and
and
cltd
sahf
xchg
adc
loop
push
test
popa
adc
std
mov
out
lods
fimuls
sbb
shrd
sub
sub
sbb
adc
fnstenv
sbb
push
mov
inc
aad
add
dec
test
nop
xchg
out
mov
cli
mov
test
mov
and
hlt
fs
pop
pop
xchg
add
dec
rorb
add
inc
jge
push
mov
sbb
jns
jbe
ss
and
add
cmpsb
iret
das
adc
xchg
es
jnp
push
je
or
sub
das
xchg
dec
pushf
int3
int
xchg
adcb
loopne
inc
jae
adc
cld
pushf
into
pop
push
js
cltd
mov
adc
jne
dec
jmp
jbe
gs
mov
popf
dec
lret
imul
sti
sahf
cmp
and
ss
xor
cli
push
icebp
ret
jecxz
mov
in
push
cs
or
sbbb
xchg
jns
test
mov
popf
into
aam
push
enter
clc
ja
pop
int
bound
out
adc
xchg
add
lods
xchg
xchg
pop
ja
and
stc
or
jnp
std
push
lret
and
sub
outsb
aas
jne
mov
push
int
cmp
push
cmpsb
orb
jle
test
pop
adc
ss
out
pop
mov
mulb
int
lret
jmp
sub
push
add
cmpsb
hlt
adc
dec
cld
mov
ljmp
gs
popf
xchg
xor
popa
movsb
sbb
data16
sub
jbe
xchg
sub
add
ret
cmc
loop
cmpsb
scas
sahf
mov
shlb
fs
inc
mov
ror
loopne
cmp
andb
or
inc
mov
clc
add
ljmp
test
mov
push
clc
ficomps
cmp
xlat
push
aam
roll
leave
jno
js
mov
aaa
pop
or
mov
loop
fsubrs
push
sub
cwtl
outsl
adc
push
loop
movsl
inc
movsb
adc
in
scas
je
sub
xchg
inc
ret
and
fcompl
inc
stc
test
cmpsl
aaa
pop
in
fldt
popf
ret
jbe
jle
pop
mov
pop
shll
cmpb
sub
pop
divb
sub
les
jge
or
add
xor
orl
cmp
mov
cs
popa
push
mov
mov
mov
repz
lahf
sti
mov
xchg
call
pop
imul
mov
dec
mov
test
inc
push
mov
repz
into
ret
xor
jp
mov
jecxz
cmc
jo
sub
sahf
fistl
loop
mov
mov
push
sbb
and
stos
inc
cmp
ret
inc
rcl
sub
lcallw
mov
fwait
jle
shrl
sbb
sub
pop
rcr
xor
leave
daa
int
sbb
cltd
pusha
cmp
outsb
ljmp
lds
jo
ss
shlb
sahf
pop
xchg
add
mov
outsb
push
xlat
pop
adc
push
pop
sbb
push
lock
pop
mov
mov
push
das
mov
push
popa
sub
pop
les
je
sbb
push
cmp
test
inc
popa
jbe
jo
pop
lahf
mov
mov
or
jae
clc
shlb
rcr
cmp
jo
addr16
popf
jbe
aas
js
ss
mov
pop
hlt
iret
xor
push
shll
xchg
adc
aas
scas
dec
mov
jecxz
inc
sub
loopne
xchg
push
jbe
icebp
test
loopne
pusha
sub
iret
mov
in
cld
test
je
popa
mov
imul
fldl
pop
and
cmp
loopne
ds
leave
xor
xchg
sar
test
out
sbb
mov
stos
add
push
cld
cmpb
imul
dec
jp
ja
sbb
call
arpl
cmp
and
mov
fistl
fisubrl
add
xor
rcll
jno
mov
inc
leave
and
sbb
adc
xchg
cmp
imul
sti
mov
insl
insb
hlt
xchg
fwait
insb
shrb
js
inc
loope
dec
or
arpl
repz
data16
sti
arpl
push
rcrb
jp
pusha
clc
pop
sub
lret
outsl
adc
jnp
pop
ret
dec
or
sti
stos
insl
mov
xchg
outsb
nop
pop
int3
das
sub
jecxz
sub
sbb
hlt
call
mov
inc
pop
fistpll
push
in
out
lock
pusha
fists
jbe
pop
inc
int
lret
test
stc
mov
dec
sbb
js
int
ja
mov
fiaddl
cmc
push
icebp
xor
imul
mov
aaa
push
cmp
ja
fmull
push
xchg
cmp
push
adc
testl
test
sub
dec
push
outsl
rolb
jl
fldlg2
xchg
das
mov
add
push
mov
pop
mov
mov
ret
add
cmp
pop
ret
jns
xor
push
pop
test
cltd
pop
mov
and
les
or
sbb
xor
xor
cmp
jl
adc
inc
arpl
push
mov
sbb
inc
loopne
jbe
sahf
cmc
fucom
int
push
loope
xchg
jge
jge
dec
es
push
rcl
push
cwtl
xor
adc
cmp
iret
loopne
mov
push
pop
fiadds
pop
shrl
or
pop
test
out
xchg
jl
inc
aad
pop
lods
jg
ds
mov
mov
gs
out
jge
in
mov
mov
stc
lea
mov
xor
lea
mov
push
xchg
jecxz
dec
xor
in
decl
fnsave
inc
push
test
jl
cwtl
and
and
mov
loopne
add
popa
imul
dec
adcl
testl
sbb
or
pop
sub
add
dec
add
push
jmp
pushf
dec
gs
push
and
cmc
fnstsw
xchg
lea
mov
xchg
test
sti
xchg
push
xor
xchg
xor
cmp
jecxz
mov
outsb
or
xchg
sarl
outsl
test
dec
mov
or
scas
stos
jg
andb
or
repz
xchg
les
xchg
add
pop
aad
fs
pop
ret
fnstenv
es
fcomps
xchg
xchg
lahf
push
or
daa
sub
int3
mov
mov
jae
addr16
ss
bound
xchg
mov
ja
mov
cmp
inc
lock
addr16
mov
xor
jo
and
cmpsl
mov
pop
inc
insb
outsl
aaa
popf
mov
xchg
clc
incl
jmp
push
cmp
pop
mov
out
cld
ja
mov
sahf
cltd
xchg
inc
fcoms
mov
pop
in
mov
add
outsb
stc
test
xchg
aas
call
int3
sub
jge
mov
imul
pop
jne
mov
cld
lret
push
push
js
adc
mov
lcall
fistps
repnz
xchg
mov
push
and
aad
imul
cmp
in
cs
sbb
dec
push
pop
shrb
cld
icebp
popf
adc
arpl
icebp
dec
rcrb
jnp
jno
lahf
mov
jae
jle
adcl
push
rol
lcall
dec
sti
ds
lods
push
inc
out
add
sahf
out
xor
fstpt
fincstp
pop
mov
push
add
in
shlb
ljmp
add
pop
inc
and
loopne
repnz
les
inc
orb
xchg
sarl
mov
std
or
xchg
inc
jae
out
add
insl
xchg
mov
xor
inc
int
sub
dec
push
xchg
cwtl
insb
imul
push
in
fisttpll
addr16
jg
and
or
stos
sub
add
pushf
push
pop
sbb
mov
pop
bound
cmp
add
dec
mov
clc
dec
rol
push
lret
jg
loop
out
inc
sub
imul
push
pop
scas
enterw
data16
sbb
mov
lret
xchg
jo
push
sahf
out
cmp
cmc
sahf
out
pop
pop
adc
lods
stos
jne
js
adc
daa
xor
test
cmpsb
aaa
xor
mov
clc
es
mov
stc
sbbl
lret
cli
pop
call
or
and
mov
push
dec
cmc
adc
sbb
push
xorb
pop
sbb
adc
popf
insl
ljmp
or
gs
sbb
popf
pop
jg
push
das
mov
jnp
scas
inc
add
sbb
pop
pop
pop
dec
push
pop
pop
mov
lods
rorl
nop
ret
sarl
cmp
jns
rol
jno
shll
xchg
xor
mov
add
fldcw
test
xor
rcl
fs
int
push
int3
cmpl
cltd
dec
xchg
push
xor
sahf
sbb
push
push
pop
pop
sti
xchg
pop
push
aas
out
mov
mov
bound
fstps
mov
shrb
cwtl
das
js
xor
pushf
pop
xchg
adc
mov
insb
stos
lea
ret
shll
push
movsb
pop
stos
mov
push
sbb
cmp
jg
stos
lods
dec
adc
outsl
loope
repnz
ja
ret
mov
dec
fcoms
repnz
xor
jp
jmp
adc
push
mov
and
rcrb
pop
add
sub
mov
dec
or
mov
mov
jns
and
mov
mov
arpl
adc
and
xchg
add
movsl
push
insl
ror
xchg
out
sahf
in
and
in
cmpsl
nop
mov
mov
ljmp
pop
dec
das
jbe
mov
mov
aam
push
push
in
jge
mov
adcb
ret
jns
sub
sbb
adc
xchg
add
pop
aas
iret
push
fimuls
jp
insb
les
hlt
popa
pop
and
sub
mov
push
dec
scas
mov
aam
test
repz
pop
test
inc
mov
xor
mov
repnz
aaa
out
gs
push
mov
lea
xor
sub
xchg
dec
jge
cmpsb
dec
or
jno
pop
fdivrl
dec
in
mov
and
out
hlt
cmp
movsl
shll
and
pop
xchg
jbe
test
scas
insb
cmpl
sub
loope
or
pop
js
xchg
cmp
subl
mov
cmpsb
mov
mov
mov
pop
inc
es
int
pushf
xchg
bound
mov
push
mov
sub
ret
or
inc
sbb
orb
std
daa
aaa
popf
shrb
or
push
jne
and
dec
pusha
dec
jp
fst
xchg
xor
jmp
nop
jp
out
cmpsb
xacquire
lods
pushf
and
adc
out
jne
sub
repz
jo
sbb
push
push
cmp
inc
insb
clc
xor
mov
cmp
cmp
xor
pop
mov
ror
into
cmp
sbb
dec
in
push
pop
insb
stc
out
mov
push
sarb
std
jb
loop
sti
mov
mov
mov
add
jo
fst
scas
jb
rcll
xchg
addr16
inc
mov
mov
mov
shl
int
jno
cmp
pop
push
pop
sbb
xchg
inc
insl
fnstsw
data16
sti
dec
stc
jmp
sub
loop
lcall
jp
xchg
movsb
inc
jp
sub
jle
jmp
insb
cmp
mov
jecxz
cmp
lds
test
xchg
pop
push
fisubl
lods
stc
push
mov
cli
sub
sub
push
mov
inc
and
xor
fsubr
lcall
cmc
mov
inc
in
jno
popl
xor
mov
ljmp
adc
and
cmp
pop
add
into
xchg
push
sbb
xchg
jo
test
xchg
or
frstor
push
stc
add
dec
dec
imul
dec
in
scas
pop
dec
jb
adc
mov
in
push
push
xchg
fwait
ja
mov
leave
rolb
sub
shlb
test
mov
imul
add
insb
movsl
out
xchg
loopne
sbbl
mov
cmp
push
stos
mov
push
sbb
push
xor
inc
add
test
adc
in
pop
test
cmp
out
fxch
bound
adc
jp
lock
mov
dec
pop
test
outsl
cwtl
je
loopne
loop
cld
sub
cmp
inc
and
pop
test
loopne
add
aaa
loop
add
xor
sbb
stos
dec
pop
shll
mov
jo
nop
push
pusha
pop
inc
outsb
xchg
xor
leave
lods
xchg
and
fdivrs
push
push
push
inc
fiadds
or
inc
mov
imul
cld
xchg
mov
mov
test
mov
xchg
fdivrs
jle
add
scas
jb
push
icebp
cmp
insb
fldcw
orl
or
sbb
jb
es
clc
push
cmc
jns
or
inc
dec
push
ficoms
leave
jle
mov
inc
mov
test
orb
xchg
into
ret
mov
sub
lods
mov
ja
push
xlat
jne
cmpsb
mov
mov
cmp
push
daa
mov
and
adc
dec
cmp
push
js
test
sub
cmp
push
test
pusha
in
out
int
mov
inc
ja
jne
cmp
flds
lcall
sbb
stos
in
inc
data16
dec
in
push
cltd
adc
adc
pop
mov
cmpsb
test
fldl
lret
or
or
xchg
int3
push
push
fidivrs
in
lock
cltd
sub
pop
idiv
insl
xchg
mov
stos
imul
adc
enter
cmpsl
mov
lret
pop
mov
mov
out
or
pop
unpcklps
jnp
jp
mov
and
aam
das
gs
inc
mov
push
mov
rolb
in
jg
add
push
cmp
jns
shlb
or
sbb
mov
or
jg
inc
cli
mov
push
jno
aam
cmp
xor
ret
push
inc
and
lea
into
inc
mov
scas
ffree
pop
in
aas
cmpsl
xchg
mov
jp
cmpsb
sub
cmpsl
sub
add
add
pushf
in
outsb
add
sbb
add
lods
adcb
hlt
cmpsl
bound
in
test
mov
xchg
negb
adc
sbb
jnp
dec
xchg
leave
les
insb
data16
sub
ret
sti
imul
int
lcall
arpl
cmpsb
pop
dec
cmpl
xlat
adc
jp
pop
pop
add
fisubrl
lods
lock
loope
fisubrs
cwtl
scas
sub
into
cmp
xchg
mov
push
fisubl
in
pop
dec
xor
cltd
rcrl
lcall
mov
xchg
add
scas
fsts
aaa
movsl
and
into
inc
jl
call
sbb
hlt
ljmp
imul
xor
adc
and
xchg
daa
adc
jae
mov
xchg
push
jle
clc
les
jb,pt
test
cmp
out
mov
push
xchg
aad
jae
xor
bound
cmp
idivb
mov
and
in
sub
stos
ss
jmp
inc
orb
xchg
gs
push
mov
or
sub
dec
loopne
sahf
sub
pop
rcrl
gs
test
adc
push
adc
les
lods
mov
inc
and
push
push
lret
mov
adc
ja
cmp
lcall
shlb
push
incl
rcl
lds
and
sub
add
pop
sub
xchg
push
xor
xchg
inc
xor
shll
int3
jo
push
insl
jo
and
xor
push
aad
repnz
jbe
sahf
mov
pop
sub
xchg
das
xor
xchg
popa
sbb
pop
adc
nop
pop
out
es
call
xor
stos
mov
arpl
dec
adc
rcll
gs
xor
fdivrp
inc
pop
mov
sbb
xchg
mov
je
dec
lcall
and
cld
data16
loop
cld
dec
sbb
add
sbb
outsl
xor
push
rol
lahf
mov
and
or
leave
ljmp
jmp
xorb
cmp
test
xchg
test
lahf
repz
xchg
lea
push
in
jb
add
dec
add
lock
ja
cwtl
addl
pop
add
xchg
int
stos
and
nop
das
test
nop
mov
lds
xchg
dec
mov
mov
hlt
push
sub
in
gs
and
adc
inc
mov
mov
add
shr
sbb
mov
dec
mov
popf
dec
sbb
xchg
test
add
cmp
pop
cmp
mov
xor
pop
into
sbb
lea
in
mov
js
pop
jle
hlt
push
xor
loope
loope
add
imul
sti
cmp
mov
loop
xlat
test
sub
outsl
lret
xlat
sti
or
pop
inc
ss
lahf
and
mov
mov
cmpsb
and
ss
add
cmpsl
push
sbb
ja
outsl
je
shrb
adc
fcoml
cmp
xchg
jl
mov
stos
aad
inc
adc
stos
add
mov
mov
add
jge
in
ret
movsl
and
push
mov
push
mov
mov
shrl
jns
test
dec
leave
dec
std
push
ljmp
in
mov
mov
pop
popf
mov
ja
inc
es
loope
adcl
adc
loope
insl
push
sbb
test
pushf
add
adc
pop
or
xchg
movsl
pop
fistps
out
mov
pushl
mov
xchg
cmp
insb
pop
notb
add
pop
sub
pop
out
fdivs
ja
out
jecxz
scas
lahf
aas
lods
mov
outsl
pushf
int
sub
cmp
int3
jne
xlat
add
leave
enter
lret
sbb
dec
mov
sar
test
mov
mov
push
lods
add
sub
sti
pop
lret
sbb
xchg
fldl
addl
mov
lcall
and
shrl
sub
insl
aam
cli
dec
inc
jg
outsl
mov
int
pop
push
hlt
push
fistpl
mov
jnp
into
jmp
shlb
xchg
bound
pop
scas
jg
mov
subl
ret
pusha
inc
in
mov
sub
inc
ficomps
mov
xorb
xchg
adc
or
pusha
out
fucompp
repz
or
xor
fildl
sbb
pop
insl
or
mov
frstor
daa
ret
and
xchg
data16
data16
and
cmpsb
pop
testl
push
call
push
mov
mov
into
push
push
cmpsl
gs
cmpsl
dec
xor
xor
maskmovq
lahf
mov
jbe
inc
dec
and
push
push
pop
sti
cmp
arpl
adc
fs
movsl
mulb
xchg
dec
cmp
movsl
cmc
test
jno
jle
cmp
ja
dec
mov
je
test
adc
shl
mov
xchg
mov
cmp
std
rolb
aad
pop
jle
arpl
loopne
inc
cs
out
pop
inc
pop
jmp
adc
cmovne
inc
dec
pusha
mov
dec
mov
cmp
xlat
es
lods
andl
push
test
enter
lock
xor
xchg
mov
shlb
fs
dec
sub
xor
xchg
arpl
shrl
jle
pop
loopne
xchg
inc
call
xchg
enter
stos
sti
add
inc
sti
fistpl
movsb
jg
adc
pop
push
in
bound
lods
hlt
inc
in
fstpl
fistpll
cmpsl
sbb
xorb
dec
icebp
popf
in
adcl
cmc
xor
sub
sub
xlat
jle
data16
scas
rolb
jl
xlat
iret
and
adc
or
mov
movsb
mov
mov
sbb
roll
int3
loop
cmp
jns
pop
xor
cmp
jbe
mov
mov
insb
into
or
fiadds
pop
fsub
dec
jne
daa
inc
cmpb
ljmp
fcomi
sahf
insl
dec
lcall
jo
push
rorb
mov
adc
sub
adc
movsb
shrl
pop
rorb
sbb
mov
fstpt
sbb
xor
and
cmc
xchg
faddl
jp
lods
aad
mov
add
aam
enter
cmp
adc
mov
mov
fs
arpl
jno
repnz
rcl
pop
and
repz
mov
insb
xor
dec
cmp
jbe
mov
ficoms
mov
daa
jns
mov
ds
lods
mov
add
sbbl
adc
clc
dec
jnp
add
cmp
push
out
add
movsb
pop
loope
sbb
pushf
mov
gs
andb
or
pop
cmp
mov
shl
mov
or
adc
xchg
xor
stos
leave
lods
fdivrl
and
push
insb
addl
mov
xchg
jle
xchg
in
insb
ljmp
inc
enter
and
inc
xchg
bound
push
mov
jmp
pusha
add
add
cmp
cltd
lahf
xor
fstpt
sbb
dec
xchg
popa
push
addr16
std
cmp
div
adc
ja
pop
jbe
push
nop
mov
xrelease
fsubrs
mov
jl
push
adc
mov
xor
enter
mov
stc
xor
orb
leave
popf
push
push
sbb
sub
push
gs
push
ja
scas
and
out
dec
mov
sub
mov
xor
push
in
and
mov
push
or
or
addb
jne
push
jmp
sbb
loope
or
test
out
pop
xlat
aaa
push
loopne
sahf
dec
lahf
fmull
dec
cmpsl
mov
ret
loope
popf
mov
xchg
adc
fs
sbb
or
sbb
lods
sbb
repz
dec
sub
pop
scas
sub
call
lret
aad
fnstsw
jbe
out
movsb
std
mov
repz
sub
andb
rorb
and
fdivrp
mov
mov
and
pop
pop
stos
loop
cs
jno
lds
cli
push
hlt
dec
push
loopne
cmpsl
and
mov
pop
je
loop
mov
mov
hlt
ljmp
mov
aam
jp
fidivl
sbbl
imul
mov
ss
rcrb
push
push
mov
cli
cmp
mov
pusha
insl
shll
mov
sbb
adc
loop
mov
fadds
test
stc
cmpsb
and
mov
mov
js
push
sub
std
add
sahf
cmp
mov
sub
out
pop
jp
movsb
sub
sub
adc
pop
mov
xchg
cmc
mov
dec
and
dec
sbb
add
add
mov
sbbb
jb
hlt
jns
sbb
jge
mov
sbb
ss
pop
jecxz
inc
gs
mov
loope
filds
cmp
mov
loope
cs
inc
stos
and
sti
or
and
add
fxch
rcl
lods
imul
test
xchg
dec
lods
cltd
and
xchg
dec
push
pop
das
scas
das
mov
les
out
sbb
fiadds
mov
popl
mov
cmp
add
loopne
xor
add
fiadds
push
std
cltd
adc
jmp
inc
das
les
or
xchg
sbb
xor
dec
test
mov
mov
sbb
fdivl
mov
test
xor
cmp
inc
loope
adc
rcrl
mov
jo
sbb
stos
xor
mov
xor
mov
loopne
lahf
loop
cmpsb
cmp
mov
xchg
test
daa
and
or
sbb
or
flds
xor
adc
jg
xor
push
inc
add
lret
out
repz
inc
jns
shll
jnp
ficompl
aaa
test
sbb
and
leave
cmp
pop
outsl
xchg
mov
push
sub
sti
int
xchg
sub
repnz
das
andl
mov
cli
dec
mov
out
jae
int
jg
std
sbb
loopne
adc
movsb
xchg
test
cwtl
test
pop
sahf
lods
test
xchg
pushf
mov
inc
push
pop
cmpsb
pusha
int3
sbb
cmp
mov
fisubrs
out
scas
mov
out
pusha
into
je
mov
pop
fildl
in
std
xchg
pop
xchg
pop
and
jno
insb
and
decb
xchg
cmp
int
in
enter
pusha
cs
ret
ss
adc
xchg
js
clc
jne
test
cmc
pop
sub
or
rclb
in
leave
dec
cmc
push
sub
jl
fidivrs
adc
cmc
ja
pop
aad
repz
add
movsb
mov
adcb
pop
cmp
jbe
scas
mov
pop
roll
movl
in
and
and
adc
cmp
lret
dec
or
lods
push
push
sarb
adc
dec
imul
push
mov
dec
cld
or
jecxz
in
cli
test
push
movsl
xor
jge
mov
mov
jmp
lahf
fdivl
push
cmpsl
and
bound
mov
mov
cmp
add
dec
pop
adc
pop
jp
xor
das
movl
or
jl
bound
lahf
cmc
out
or
sbb
mov
cmp
mov
into
add
cmc
icebp
in
xchg
daa
cmpsb
pop
shrl
aaa
sbb
jge
add
jbe
mov
jl
sbb
xor
jnp
xchg
lret
leave
jg
pop
or
inc
scas
sub
and
aad
mov
js
aaa
xchg
popf
push
sub
sub
test
imulb
ret
scas
test
mov
sub
stc
or
pushf
stc
or
fistps
leave
movsb
mov
add
inc
mov
ss
pusha
push
dec
cmp
adc
and
push
xor
push
xchg
mov
lcall
jne
jb
sub
ret
ja
std
loope
clc
pop
fidivs
mov
xchg
insb
ret
adc
gs
rorl
pop
dec
cmp
mov
loope
lret
sbb
pop
rcrl
in
sbb
mov
lahf
sbb
sbb
cmp
jp
xlat
loope
leave
xor
or
nop
mov
sub
jo
subl
subl
dec
lock
push
xor
xor
mov
imul
sub
out
push
sbb
adc
in
push
inc
sub
lds
add
jns
push
out
pop
in
mov
dec
sub
cmovns
outsb
cmp
pop
lret
jne
mov
pop
jbe
xchg
mov
xorl
or
hlt
push
popa
lret
sbb
sbb
lcall
add
rorl
inc
sub
add
aaa
add
jo
clc
mov
lahf
iret
dec
and
mov
pusha
fcoms
mov
sahf
int
inc
mov
clc
or
sbb
aam
push
pop
mov
leave
inc
lods
repz
aas
loop
stos
mov
int3
aam
pop
mov
or
xor
push
cmp
dec
data16
push
aad
imul
nop
rol
outsb
jle
loope
mov
pop
sahf
cmp
pop
ret
xor
scas
sub
lds
imul
xchg
imul
mov
sbb
movsb
popa
lcall
cmpsl
pusha
mov
add
mov
mov
roll
sub
cli
xchg
inc
lds
adc
push
andb
mov
jmp
mov
sbb
xor
jp
pop
outsb
in
mov
mov
adc
ret
lds
je
inc
jmp
imul
pop
jl
mov
mov
or
or
mov
es
das
lret
add
xchg
sbb
incb
rorl
dec
arpl
shrb
push
adc
push
bound
subb
push
xchg
movsb
or
mov
xor
or
cmp
ret
bound
arpl
fwait
xchg
or
xor
and
fidivrs
pop
xor
push
shrb
sbb
in
rcrb
jmp
cmc
or
movsb
sub
or
or
fcmove
pop
cmp
ret
gs
call
lock
cmp
inc
insl
push
fnsave
and
sub
stos
jns
pop
xchg
fsubl
jl
inc
push
sub
aas
dec
hlt
cli
mov
pop
mov
test
in
js
push
hlt
xor
lret
aam
aad
mov
mov
test
test
dec
sub
xchg
rcll
push
pop
add
cmpsl
mov
mov
pop
nop
mov
or
popf
imul
or
xor
push
sbb
mov
cld
sbb
cmp
test
mov
fsubs
test
aad
daa
inc
or
arpl
sub
mov
xchg
add
mov
or
mov
dec
inc
mov
insl
jbe
loope
jae
push
pusha
in
inc
outsl
jg
and
movsl
push
xor
movsb
dec
mov
mov
sbb
bound
popf
sti
stos
adc
push
adc
sub
das
fucomp
sbb
dec
in
lock
cs
repnz
in
dec
xor
jg
adc
lcall
push
and
inc
dec
jne
adc
adc
inc
les
test
sti
push
inc
icebp
add
clc
testb
jb
stos
repnz
cmp
decl
mov
jmp
cmc
movsb
leave
push
loopne
data16
shll
cmp
push
loope
into
sbb
iret
jecxz
aas
mov
mov
mov
loop
or
out
push
pushf
sbb
in
popa
push
pop
das
fs
pusha
push
push
imul
stos
inc
sub
icebp
sbb
push
xorb
mov
inc
insb
mov
pop
lods
aad
stc
imul
aam
in
test
or
fisubs
jns
sbb
loop
xchg
dec
or
mov
xor
mov
mov
cmpsb
lahf
fidivrs
cltd
adcl
out
mov
dec
outsl
mov
mov
pop
pop
stos
add
pop
adc
push
lock
mov
lds
out
mov
xchg
lods
adc
outsb
int3
dec
adc
cmpl
push
and
daa
mov
int3
mov
xlat
subl
push
aad
add
mov
enter
lods
lret
xchg
adc
jb
xchg
push
sub
xchg
inc
enter
dec
into
loope
loope
out
pop
inc
mov
repnz
pop
lds
xor
inc
push
dec
sub
idivb
sti
ljmp
aad
mov
inc
test
inc
cmp
imul
iret
mov
cwtl
xchg
rclb
pop
pop
loopne
scas
addr16
test
add
pop
aam
mov
pop
imul
or
mov
lods
and
and
or
xor
jp
mov
or
popa
outsl
mov
fadds
jae
aaa
enter
ja
sbb
nop
pop
lret
es
repnz
pop
in
xchg
push
adc
cmp
jmp
mov
jmp
jno
mov
or
jae
sbb
shrl
out
pusha
scas
jp
adc
xchg
xor
clc
push
adc
insb
ret
jno
imul
repnz
push
paddsw
jb
cwtl
rclb
cld
mov
lea
sbb
cmpl
test
mov
int
push
mov
orl
mov
inc
dec
ss
mov
mov
pop
mov
in
adc
and
adc
repz
pop
divl
and
xchg
or
jmp
jno
inc
xcrypt-ecb
cmpsl
dec
arpl
xor
es
test
dec
mov
sbb
and
sahf
sub
dec
mov
pusha
push
addr16
hlt
rclb
pop
inc
test
outsl
movsl
sbb
xor
add
cmpsl
push
aad
std
pop
pop
cbtw
rcrb
inc
pop
mov
in
lret
into
arpl
mov
fstpt
enter
ljmp
pushf
lds
xor
orl
cltd
setp
cmp
stos
sbb
add
stos
faddl
es
sti
adc
dec
pusha
cmpsb
and
test
pop
sub
rorl
daa
xchg
icebp
aaa
addr16
cwtl
pop
pushf
push
cmp
sbb
cltd
inc
pusha
test
mov
stc
jno
mov
sub
dec
mov
out
dec
adc
pop
inc
sbbb
outsl
adc
or
imul
jmp
stos
sbb
push
fucomi
adc
jmp
iret
dec
sbbl
movsl
subl
cltd
ss
cmp
mov
xor
add
dec
mov
cmp
lods
out
andb
jmp
cmpsb
or
mov
sub
test
mov
or
mov
notl
arpl
jp
sbb
cmp
out
sub
sub
out
cli
mov
inc
add
iret
and
jb
out
fs
pop
push
out
mov
mov
sub
movsb
ficomps
cs
or
and
popf
mov
cli
fstl
ss
push
mov
jmp
bound
sbb
test
mov
push
subl
inc
fistpll
inc
loop
push
rolb
mov
dec
popf
pop
cli
mov
lahf
pushf
aad
push
push
lea
jns
jle
test
xor
push
aad
sub
cmp
imul
std
bound
adc
inc
dec
ds
add
mov
stc
mov
lock
pop
pop
movsb
addr16
xchg
dec
dec
push
jbe
mov
mov
pop
les
stos
xlat
dec
aas
rcl
jg
aad
inc
dec
pop
out
sub
sti
stos
test
add
ret
call
inc
cmp
stos
lret
test
mov
shll
shlb
jmp
addr16
cs
mov
iret
cmp
push
inc
inc
fsub
jp
scas
or
sbb
out
sub
cmpsb
xor
mov
sub
xor
xor
or
sub
sub
or
cli
xor
sub
mov
jno
es
lcall
call
sti
sub
divb
testb
xchg
jg
xchg
inc
mov
cmp
sbb
lret
mov
mov
mov
loope
loopne
jno
push
scas
cmpb
in
rclb
dec
inc
or
xor
mov
dec
stos
jo
daa
and
stos
jbe
cmp
adc
xchg
fldt
mov
xchg
cmp
cmp
add
and
cmpsb
cmp
clc
mov
add
insb
or
rcrb
or
andl
pushf
or
push
push
out
sar
out
xlat
mov
push
xor
insl
add
scas
inc
or
les
in
pop
mov
inc
and
dec
jge
mov
test
sbb
adc
loopne
ret
or
inc
les
ds
fstl
in
adc
scas
mov
adc
in
movsl
sub
lret
jbe
sub
dec
dec
and
xchg
xor
lahf
mov
test
push
cld
arpl
aad
inc
stc
sbb
xchg
stos
cmpsl
xor
cmpsb
sbb
sti
jo
cmp
sbb
dec
sti
add
dec
adc
fisttpl
and
mov
mov
enter
mov
lods
scas
loop
xor
mov
cmc
aas
rolb
push
or
out
ljmp
test
mov
ss
in
mov
sbb
or
out
push
pop
negl
push
jo
jo
movsl
std
popa
lock
and
or
call
scas
cmp
ret
mov
dec
inc
shll
xor
mov
inc
sbb
fcomps
movsl
xchg
std
jo
xor
push
test
dec
push
stos
cmc
icebp
pusha
mov
rclb
movb
aam
xor
pop
test
iret
pop
and
mov
fisttpll
cld
mov
daa
cli
mov
push
mov
jae
ret
js
cmp
out
sbb
adc
out
shlb
into
int3
push
outsb
xchg
pop
dec
in
mov
mov
sub
into
addr16
and
faddl
addr16
cltd
lods
int3
stos
lods
mov
dec
push
fst
sbb
sub
std
jb
outsl
xchg
rcll
stos
mov
xchg
sub
push
clc
xor
aaa
sub
loope
clc
xor
lahf
sbb
in
rcrl
loop
push
fdivr
in
stos
pop
cmp
pop
jmp
pushf
xchg
daa
iret
out
and
movsl
mov
std
mov
adc
sub
inc
lcall
jae
daa
fiadds
imul
pop
dec
inc
adc
xor
iret
jecxz
aaa
mov
subl
subl
insb
das
and
in
mov
adc
addl
dec
out
sbb
out
aas
sbb
aad
sbb
clc
pushf
mulb
pop
add
mov
call
iret
lahf
ror
lret
dec
xchg
mov
cmpsl
push
mov
sahf
push
jb
les
jle
and
adc
mov
cld
icebp
push
pusha
jge
shll
lods
hlt
test
sub
nop
mov
jecxz
enter
int3
fistl
jbe
int
cmp
push
int
mov
mov
xor
fwait
jo
add
fistl
int
movsl
cmp
pop
mov
xor
ljmp
inc
adc
cmp
repnz
jne
mov
mov
dec
cwtl
pop
xchg
mov
sbb
add
xchg
sub
shlb
or
insb
movsb
pop
sahf
cmp
test
andl
inc
int
stos
and
fsubrs
bound
inc
stos
push
loope
or
push
jmp
mov
rclb
xor
dec
mov
push
xchg
fs
sub
sahf
aam
shrl
pop
in
inc
ficoms
pop
repz
pop
jmp
add
xchg
and
in
ret
lret
clc
in
cmp
jb
sub
stc
leave
outsl
xor
jg
rolb
adc
pop
daa
stc
cltd
ss
adc
imul
outsb
test
test
in
mov
daa
adc
dec
or
cmp
push
int3
add
add
xchg
popa
rclb
sub
out
mov
insb
aas
data16
add
inc
clc
clc
inc
pop
lods
sarb
mov
cmpxchg
mov
sub
mov
in
fs
fisubl
aaa
sti
ret
daa
arpl
aad
xchg
fcomi
push
fstps
lock
andl
push
jns
pushf
pop
arpl
cmp
pop
add
jno
lret
cmc
mov
push
push
mov
jmp
push
mov
pop
aam
jb
push
push
lods
mul
or
jecxz
aam
call
roll
jns
dec
outsl
cmp
add
fstpl
mov
xchg
jle
cmp
ja
lods
pop
dec
push
sub
jecxz
gs
ret
sub
dec
insl
mov
out
pop
dec
sti
repz
test
cmp
jae
fcoml
mov
decb
jge
daa
jge
in
inc
dec
xorb
sbb
repnz
push
mov
sbb
mov
xchg
rorl
sarb
aas
les
mov
aam
jge
xchg
fmull
lea
or
popf
lret
xchg
or
add
push
cmc
xchg
data16
jb
jbe
sbb
sti
xchg
aad
add
adc
dec
push
movsl
in
jb
dec
aaa
ljmp
and
pop
xchg
loop
mov
inc
xchg
add
mov
sub
pop
dec
sbb
negb
scas
jnp
mov
popf
cmc
orb
daa
mov
aas
lret
in
xchg
inc
mov
shlb
push
es
decb
or
cmpsl
jne
push
je
sub
push
scas
test
shll
or
mov
movb
dec
inc
xor
flds
ret
je
and
pop
shrl
and
mov
es
aaa
mov
sbb
jge
add
repnz
cli
xchg
cmpsl
mov
pop
aaa
fldenv
mov
add
in
xchg
dec
sar
je
add
cmp
mov
xchg
sbb
iret
pop
inc
sub
in
lret
mov
loopne
lcall
rcrl
xchg
push
lahf
mov
cmp
pushf
and
mov
cmp
xchg
aas
mov
into
mov
xchg
repz
sarl
leave
and
rcll
mov
int
jl
pop
push
std
into
dec
xchg
inc
repz
adc
add
cwtl
ret
xchg
pop
cmp
loope
sub
out
mov
orb
xchg
test
movsl
daa
movsb
scas
nop
fisubs
out
cmp
stos
outsb
inc
mov
dec
mov
sbb
mov
sbb
test
mov
les
rcll
clc
cld
and
adc
aas
leave
fdivrl
mov
xchg
test
stc
lods
mull
andb
fidivl
out
inc
pushf
add
lcall
or
in
shl
jecxz
loop
mov
pop
xchg
pmulhw
and
pop
js
mov
add
push
pusha
cmpsl
fcomip
adc
cltd
jmp
imul
movsl
movb
xor
sub
lds
inc
sub
push
js
xlat
inc
or
rclb
add
orl
data16
jle
cld
andb
pop
call
and
mov
sbb
pushf
inc
sub
mov
mov
sub
movsb
xchg
imul
jl
movsl
add
xor
repz
pop
xchg
loop
out
sbb
rclb
aaa
or
pop
scas
adc
pop
js
adc
test
adc
inc
movsb
fnstenv
pop
push
push
push
idiv
jns
add
jp
jbe
int3
add
clc
cmp
aam
push
inc
repnz
fcoml
pop
pop
pop
fldenv
notb
rcl
xchg
xchg
sub
jmp
sub
xchg
pop
cwtl
xor
repnz
dec
leave
cld
xor
mov
repnz
add
fiadds
faddp
mov
sub
adc
xor
mov
mov
xchg
rclb
add
xrelease
insl
sahf
pop
into
add
loop
aaa
repnz
in
repz
xchg
das
or
and
popa
sarl
mov
push
das
lods
sbb
sahf
sahf
dec
call
add
imul
lcall
push
mov
into
mov
popa
jp
dec
xchg
or
enter
daa
adc
mov
ret
sub
gs
fldcw
mov
in
mov
xor
inc
addb
pop
mov
into
lock
jmp
push
add
arpl
sti
iret
sbb
xchg
scas
push
repnz
mov
in
jo
jb
mov
mov
daa
dec
js
lock
or
in
sub
std
add
cmpsl
jle
and
lahf
stos
xchg
cmp
push
cmp
cmp
lahf
jg
jg
pop
loope
or
push
repz
inc
cld
sub
stos
sbb
jmp
sbb
or
jmp
repz
sbb
push
mov
arpl
fmulp
divb
sub
scas
mov
pop
movsb
cmpsl
jns
dec
add
rcrl
sub
shrl
pushf
icebp
xchg
mov
adc
aaa
cmc
lods
sbb
incb
mov
mov
mov
mov
incb
incl
mov
pop
jae
jl
mov
clc
mov
fcoms
xor
push
test
lods
insl
pop
and
mov
les
ja
sbb
imul
loop
add
cmpsb
push
stc
pop
sbb
xchg
sub
push
sub
rcl
in
pop
mov
sub
lods
mov
sub
adc
test
dec
jns
lret
push
fiadds
pop
lea
inc
or
movsb
pop
mov
mov
or
orb
or
loope
pop
pop
js
adc
mov
xchg
enter
das
mov
mov
xor
dec
outsb
int3
int3
into
movsl
push
in
in
pop
fidivrs
fisubl
sbb
mov
or
adc
push
xchg
cmp
jne
loope
push
jmp
hlt
dec
vpmacsdql
fadd
adc
adc
data16
inc
xor
dec
pop
adc
es
into
sbb
ss
jp
mov
inc
mov
xchg
and
out
ds
mov
or
or
pop
sbb
daa
in
cli
cmp
sbb
or
js
xor
inc
and
outsb
loop
pop
divb
and
mov
out
pop
add
mov
and
sbb
add
movsl
mov
in
scas
mov
sbb
pop
lret
mov
xchg
leave
sub
mov
sbb
repnz
xchg
dec
int
stc
and
js
ljmp
aas
mov
add
sub
mov
iret
push
cmp
pop
xchg
loopne
pusha
ficoms
sub
jge
loop
mov
adc
das
adc
jge
adc
or
int
fs
mov
cli
add
and
outsb
bound
enter
scas
aas
cmp
inc
mov
stc
inc
int
xor
and
imul
adc
sahf
or
popf
mov
rcrb
sub
xchg
add
add
repz
movsl
cmp
sub
rcrb
ret
jnp
xor
push
cmc
and
xor
int3
lock
pusha
pop
pop
fnsave
and
xor
movsb
stc
pop
xor
sti
adc
jno
xlat
adc
pop
loop
mov
call
cmpsb
out
pop
sbb
cmp
pop
jecxz
cmp
inc
mov
push
mov
imul
adc
repnz
jg
mov
inc
pop
jns
shr
xlat
dec
sub
cld
addr16
loop
out
or
or
sahf
outsl
adc
add
push
fidivl
jno
fwait
lea
xor
jo
cld
mov
or
sbb
gs
push
cli
sbb
jge
and
inc
sarb
imul
arpl
mov
imul
call
jno
pushf
sub
inc
adc
xor
pop
dec
sar
push
add
sbb
push
jecxz
cmp
adc
in
sbbl
mov
jmp
jnp
adc
les
jg
cli
pop
sahf
ret
fadds
pop
xchg
mov
xchg
lret
bound
imulb
iret
cld
test
cli
shll
shrb
addr16
xchg
lret
arpl
shlb
pushf
jg
mov
sbb
je
add
mov
movsl
dec
movsl
jnp
fisttpll
movsl
aam
fsincos
int
xchg
xchg
dec
cmp
fstpt
insl
in
mov
push
mov
push
or
mov
es
ret
imul
cs
sahf
ljmp
aam
mov
lods
dec
push
in
test
sub
popa
inc
ljmp
cmpsb
xchg
mov
ljmp
jns
adc
jnp,pt
cmp
sbb
dec
xchg
add
mov
mov
lock
out
pop
inc
aas
dec
enter
cwtl
cli
jbe
insb
dec
dec
dec
out
pop
std
jge
adc
aad
cs
mov
pop
add
mov
push
mov
test
adc
cmp
mov
fistps
pop
aas
flds
loope
ja
mov
push
jb
xchg
push
insl
cmpsb
or
aas
call
ss
sub
cmp
add
add
rol
jnp
test
pop
imul
xlat
int
sbb
inc
std
jmp
mov
push
mov
inc
lea
ljmp
aam
aad
shl
sub
cwtl
mov
imul
mov
jecxz
sub
jle
leave
xor
pusha
out
mov
and
mov
and
mov
push
push
jmp
push
js
sub
addr16
ljmp
pop
into
popa
mov
push
fbld
mov
dec
fwait
push
decb
addr16
or
or
xor
insl
sub
fistps
ljmp
pop
mov
and
add
mov
push
jbe
sarl
stc
pushf
inc
push
sub
hlt
cmc
push
mov
cmc
add
and
push
test
inc
imul
ja
rsm
shlb
dec
xchg
mov
inc
or
bound
negb
fs
mov
outsb
xlat
or
fldcw
inc
nop
shlb
push
xchg
pop
movsb
inc
imull
jno
pop
cli
mov
pop
xchg
loopne
xchg
sbb
xor
push
lret
adc
sub
js
sahf
jle
push
nop
addl
cld
cmpsl
lods
aam
data16
rorb
movsl
mov
add
pusha
decl
jnp
lods
inc
stos
dec
mov
lock
loop
ficomps
push
mov
xchg
adc
mov
or
mov
dec
cmp
jne
lds
mov
das
or
and
es
stos
jae
sub
mov
mov
nop
stc
cli
mov
sbb
mov
scas
cli
sub
push
dec
imul
and
and
out
aam
rcrl
das
xor
js
sub
jb
dec
adc
insl
pop
sbb
adc
sub
fistps
les
push
adc
call
lea
and
push
or
fs
vpsubq
adc
aaa
ljmp
mov
arpl
lock
cmc
insb
dec
xchg
fsubl
fcompl
sahf
cltd
mov
jo
dec
add
ss
jne
into
jno
xor
dec
mov
push
push
xchg
loope
je
jae
test
jg
js
repz
pop
mov
sub
jbe
and
cwtl
and
or
stos
cwtl
dec
mov
sbbl
inc
add
sbb
into
std
imul
out
mov
mull
out
lods
icebp
fsubs
popa
pop
mov
cmp
testb
lret
dec
and
mov
xor
fucom
sti
sbb
push
cmpsl
cmp
sub
out
mov
fcmovbe
and
cmp
dec
jae
sub
fdivl
push
push
shll
add
mov
and
and
adc
inc
or
pop
mov
adc
fidivl
push
and
rorl
popa
test
dec
jno
test
jecxz
pop
movsl
sbb
dec
fscale
stos
mov
inc
cwtl
jp
jp
cs
dec
push
test
add
imul
cmp
inc
pusha
popf
xor
jl
sbb
pop
push
addl
test
xchg
fsubrs
aam
push
sbb
dec
pop
lds
loope
or
mov
enter
stos
test
fwait
mov
movb
inc
out
cmp
movsb
es
add
mov
rol
push
sbb
cld
jnp
pop
jle
cmp
add
and
jp
js
icebp
xchg
sbb
pop
adc
inc
imul
es
stc
dec
push
lods
jbe
popa
cmc
jecxz
mul
add
sbb
popa
enter
pop
fcompl
adc
test
call
sub
lret
pop
je
adc
mov
out
xor
lcall
ja
imul
jg
in
es
outsl
lea
mov
jecxz
push
and
iret
mov
dec
fsubrl
xlat
addr16
push
adc
js
repz
fstl
mov
xor
pop
sbb
jecxz
jmp
inc
data16
jnp
xor
mov
cmp
movsb
jae
add
inc
xchg
jecxz
aam
or
sub
jns
test
add
add
fildll
cltd
push
mov
arpl
mov
mov
push
sahf
cmpsl
in
lret
nop
icebp
iret
rcrl
insb
xor
loope
rcl
or
stc
jmp
aaa
jne
adc
mov
sbb
rcl
rclb
lods
test
inc
mov
mov
fcoml
aaa
scas
and
lahf
lea
xor
shll
lds
or
push
sbb
xchg
lods
cmpb
push
test
adc
mov
into
mov
fldt
and
mov
lret
aaa
mov
lods
rcrb
cld
push
push
add
arpl
and
loope
inc
cmpb
push
jno
adc
xor
mov
lahf
xor
fisttpll
clc
xchg
and
sbb
dec
jbe
adc
sbb
ret
rcrb
scas
out
cmp
mov
and
cmp
data16
mov
mov
loopne
push
push
fisubrs
js
cmpsl
mov
xchg
outsb
mov
add
loope
in
pop
mov
xor
inc
add
mov
stos
lcall
xchg
xor
sub
jne
xchg
imul
lcall
arpl
cmp
pop
ljmp
sub
and
addr16
setg
aad
sbb
xor
movsl
rol
je
jge
xor
add
xor
xchg
dec
pop
cmpsl
jnp
in
add
mov
pop
ficoml
sbb
enter
jp
adc
push
movsl
scas
and
sub
cmp
in
mov
and
add
dec
xor
mov
cmp
xchg
push
aas
out
sbb
clc
mov
inc
push
jg
or
inc
mov
js
xor
cld
inc
jg
ret
je
xor
mov
or
hlt
in
xor
stos
mov
shll
mov
pop
mov
popl
addr16
mov
cwtl
repnz
fidivl
inc
and
inc
pushf
loopne
lret
cmp
nop
pop
movsb
in
stc
pop
aaa
aad
mov
xor
aam
sahf
inc
out
outsb
xchg
dec
cli
lods
push
cmpsb
push
mov
add
xchg
scas
cmc
push
add
lock
or
cli
push
test
movsl
mov
jmp
push
xor
les
xchg
test
aas
movsl
mov
mov
cmpsl
push
fwait
sbb
xor
mov
sti
fcmovnbe
push
in
xchg
cmp
aaa
cmp
inc
xchg
es
and
push
and
dec
aas
hlt
jo
push
add
data16
dec
add
insl
mov
xlat
aad
push
js
and
mov
lods
xor
add
mov
jge
lret
sub
mov
insb
pop
aad
lret
aad
popa
scas
lods
inc
fadd
das
hlt
stc
cmp
jnp
adc
inc
mov
cmpsl
imul
ret
lods
adc
imul
sbb
pop
scas
xor
sub
stos
cmpsb
fwait
shrl
jmp
imul
pushf
pop
mov
dec
inc
outsb
mov
sbb
add
test
mov
mov
lret
mov
mov
loop
mov
dec
iret
les
inc
push
and
addl
cmp
je
sbbb
sbb
pusha
jne
and
mov
in
subl
mov
sub
filds
mov
jno
sbb
inc
je
mov
jns
sti
xor
repz
insb
mov
add
in
ret
add
iret
jb
jnp
fstl
mov
cmp
pop
inc
and
hlt
xlat
jb
mov
lods
into
mov
fsubs
cwtl
jl
je
movsb
loopne
rorl
loopne
sub
add
lock
push
test
xor
mov
sahf
shll
ret
lcall
push
int3
and
inc
divb
inc
cmpsb
fbld
icebp
fdivl
xchg
mov
or
test
xchg
push
iret
pushf
cmpsl
sub
insb
pop
jb
xchg
xorl
xlat
lock
mov
push
jecxz
sbb
sbb
scas
push
mov
sub
cli
sbb
cmpsb
push
xchg
gs
inc
pop
stos
out
in
add
loop
push
cld
cs
ljmp
sbb
cmpsb
inc
mov
int
pop
lods
mov
push
sub
inc
sbb
mov
repz
cmpsb
dec
clc
pop
jmp
je
pushf
out
sahf
jle
sbb
loope
fnstenv
pop
xchg
sub
dec
lret
inc
jl
aaa
xor
sub
cmpsb
in
fwait
inc
xchg
repnz
or
fucom
idivb
call
ret
rcrl
in
and
dec
or
adc
xchg
pop
outsb
jno
inc
or
inc
pop
pop
mov
scas
repnz
test
pop
or
push
aad
mov
clc
mul
and
or
jmp
ja
nop
xlat
pop
pop
fcoml
outsl
mov
and
pop
lds
aam
les
and
pusha
push
xor
inc
hlt
push
xchg
popa
or
jmp
aaa
and
inc
cmp
loopne
inc
imul
xchg
lcall
cli
movsl
pusha
das
pushf
lret
fwait
dec
xchg
xchg
jb
cmp
push
and
or
and
dec
inc
cmp
movsb
lahf
pop
push
loope
jle
or
sub
scas
xchg
mov
push
in
mov
fwait
adc
test
inc
je
cmp
out
or
mov
mov
cmpsl
fidivl
xchg
out
mov
cmp
jno
scas
push
add
mov
sub
sub
pop
adc
mov
jg
jmp
mov
aas
fmul
pop
pop
mov
movb
push
std
mov
pop
jne
int3
inc
xchg
adc
incl
lret
jns
push
mov
aas
scas
daa
enter
mov
jno
jo
mov
lret
incb
mov
sub
outsl
push
jne
mov
push
xor
ss
or
and
jle
jo
movsl
xor
push
adc
cli
inc
push
push
pop
addl
es
mov
movsl
and
pop
push
add
les
je
xchg
mov
jo
ficoml
jnp
mov
cld
xchg
mov
rorb
jnp
push
xchg
jl
jne
push
ds
ds
inc
jecxz
xchg
dec
mov
pusha
mov
mov
lcall
mov
bound
loope
jg
data16
mov
ss
lds
in
sbb
jb
ja
xor
adcl
mov
cmp
xor
xlat
sub
out
roll
sbbb
dec
outsb
push
xchg
mov
testb
arpl
inc
mov
inc
addb
daa
je
rcrl
xorl
loop
daa
jecxz
jbe
fldl
es
jl
imul
pop
pop
nop
stos
jge
sbb
adc
imul
jb
sub
clc
loop
and
cmp
and
or
push
add
adc
push
dec
mov
sbb
mov
and
adc
inc
xchg
decb
dec
xchg
or
mov
stc
shr
inc
pop
sarl
mov
loopne
push
or
cmp
add
and
xor
leave
sbb
int3
and
sub
stos
lock
adc
stos
push
shrb
push
jne
xchg
in
outsl
popf
and
cmp
dec
inc
adc
ret
inc
lock
xorb
aad
shl
pop
enter
push
dec
mov
adc
push
adc
ss
add
int3
push
rol
xchg
ret
xchg
lds
mov
pop
insl
jmp
pop
das
shl
mov
repnz
cmp
inc
fmuls
dec
jecxz
push
rolb
jo
ss
fiadds
movsl
ficoml
jo
pop
mov
bound
mov
ret
test
loopne
sub
sbb
mov
lods
and
add
push
dec
lcall
cmp
es
loop,pn
mov
lcall
inc
test
cmc
mov
stos
mov
or
mov
xor
cmp
push
ja
ja
dec
jnp
imul
xchg
add
lret
sahf
sbb
and
dec
and
push
pusha
push
add
push
mov
adc
xchg
cs
mov
mov
cwtl
rcr
mov
dec
je
xchg
rcrb
or
inc
shlb
aad
cwtl
mov
test
and
fnstsw
repnz
push
cs
mov
xchg
ja
outsb
outsl
mov
les
movsl
icebp
jnp
mov
mov
jne
inc
mov
xor
fcompl
dec
mov
insl
dec
pushf
jno
dec
enter
lds
adc
jbe
out
inc
leave
arpl
mov
shlb
in
iret
jmp
in
aaa
popl
in
lret
loope
addr16
inc
cmpsb
and
into
repnz
cmc
cmp
decl
inc
or
fisttpll
rorb
xor
sbb
jecxz
push
fimuls
or
fs
cs
aas
arpl
mov
jae
sub
dec
popa
fildl
mov
cwtl
mov
iret
xchg
mov
mov
out
cmpsl
imul
pop
fwait
hlt
mov
movsb
jecxz
mov
xchg
into
out
xchg
pop
pop
xor
outsb
mov
out
mov
sbb
lret
cmpsb
inc
jnp
icebp
cwtl
ljmp
cmc
mov
xlat
insb
fstl
inc
xchg
push
xchg
push
mov
subl
xchg
in
or
mov
or
mov
mov
fwait
inc
or
sbb
pop
mov
cmp
aaa
add
lock
pop
push
pop
int3
jae
stc
push
shr
and
in
push
das
sub
mov
sub
inc
jg
mov
cmp
mov
sbb
repnz
inc
xor
jp
xchg
out
dec
paddd
adc
pop
dec
pop
inc
xchg
and
div
lods
ss
mov
fninit
xchg
and
and
test
push
mov
or
movsb
sahf
pop
nop
ja
mov
or
cltd
mov
xchg
insb
jp
xlat
insb
mov
and
test
jecxz
mov
push
push
insb
push
lret
loop
fdivrl
cwtl
ss
xchg
sahf
stos
sbb
sub
rcl
stc
repnz
daa
adc
inc
push
inc
popf
pop
adc
adc
and
cmp
bound
loopne
pop
cmp
daa
mov
je
addr16
fsubs
lock
xchg
jge
sub
imul
flds
js
add
mov
add
pushf
rolb
add
add
enter
add
add
adc
add
add
add
ljmp
add
adc
add
and
add
add
add
mov
rolb
add
jb
gs
xor
cs
insb
add
add
add
dec
outsl
popa
fs
imul
add
add
inc
gs
jb
arpl
fs
jae
add
add
add
push
imul
insb
insb
outsl
arpl
add
add
jb
jne
insb
inc
jb
add
add
imul
insb
add
add
add
gs
je
inc
outsl
insl
jo
je
bound
inc
add
icebp
out
add
mov
clc
lods
sub
xchg
sub
pop
sub
rolb
sbb
add
or
dec
add
xor
pop
or
in
jb
jne
cmp
or
dec
stc
cmp
addr16
add
rolb
pop
push
mov
push
inc
fcmovbe
jecxz
xor
jge
cli
add
mov
add
mov
loopne
dec
dec
push
jne
add
inc
or
pop
pop
ror
jge
push
call
sbb
xor
mov
push
jecxz
rep
aaa
mov
push
test
pop
enter
jne
pusha
push
or
mov
add
loop
or
pushl
sub
lock
cmp
sbb
xor
pop
pop
pop
leave
ret
jb
and
adcb
loope
add
or
xchg
jae
and
orb
xor
or
loopne
xchg
ds
out
or
or
cmpl
jo
test
sub
xor
sub
cltd
subl
dec
aam
jmp
inc
fmull
add
inc
add
imul
add
pop
lea
lods
or
insb
lahf
in
inc
lock
push
call
or
sub
hlt
shll
nop
push
push
jne
and
addr16
mov
and
xchg
cmpsb
inc
pop
jne
sbb
inc
out
mov
or
repz
fadds
decl
int
xchg
adc
mov
fmuls
adc
je,pt
sub
jae
sbb
jmp
jo
and
xchg
test
jne
ss
into
adc
sub
lock
pushf
outsb
sub
xor
lock
adc
in
and
add
mov
cmp
cmpsb
or
inc
jmp
xor
pop
insl
sti
add
mov
cmp
push
mov
rol
ljmp
push
cmpsb
iret
lea
xchg
mov
lods
incb
mov
xor
pop
push
xor
or
wrmsr
dec
js
xor
mov
push
nop
xchg
jmp
sub
inc
mov
ror
shr
repz
fcmovnu
or
push
push
lea
push
push
rol
adc
subl
mov
clc
xor
lcall
cmpsb
push
ret
mov
movsb
mov
mov
push
inc
push
jae
inc
push
mov
jmp
loopne
xchg
push
aas
inc
push
adc
jnp
leave
movsb
hlt
add
popf
rorl
mov
pop
or
mov
lea
or
jmp
cwtl
sub
popf
jno
sub
jo
lods
adc
repnz
adcb
jmp
adc
xor
dec
jp
in
nop
mov
xchg
pop
repnz
dec
out
jne
out
pushl
push
add
sbb
push
loope
sti
and
sbb
adc
fcmovb
outsb
and
repnz
pop
jecxz
and
insl
add
or
jmp
lods
and
add
adc
adc
popa
adc
mov
les
sub
jmp
in
test
leave
or
es
shl
int
push
sti
fcoms
and
add
idivl
andb
sbb
xor
xchg
jmp
repz
mov
insb
movsb
cs
mov
sbb
add
cli
xchg
ljmp
out
incb
mov
and
outsl
addr16
sbb
out
insl
add
jb
js
std
sub
cmp
push
adc
outsb
dec
xchg
mov
mov
and
shlb
mov
jne
sub
out
nop
jo
fimull
mov
shl
lret
stc
es
adc
add
ret
jge
pop
sti
popa
add
mov
adc
add
call
jno
push
sub
jne
lea
mov
and
or
jge
dec
test
adc
dec
adcl
mov
adc
jb
inc
aad
dec
data16
or
jl
add
sahf
push
and
inc
mov
es
adc
clc
push
push
jno
hlt
add
fidivs
and
sub
add
mov
pop
dec
hlt
mov
inc
xchg
mov
inc
sahf
mov
push
sbb
mov
sbb
subb
xor
inc
ret
lcall
out
jne
mov
inc
add
cltd
push
pop
divl
cmp
pop
jl
push
mov
push
xchg
cltd
mul
jge
mov
in
movsb
daa
or
xchg
add
add
push
call
xchg
push
mov
cld
lea
ds
ror
xorl
or
call
addb
or
pop
mov
cmp
push
dec
rcll
jo
push
or
sub
xchg
add
adc
cmp
or
sbb
cld
or
add
xor
fisubs
add
ja
add
add
sbb
or
jnp
ret
sbb
push
adc
in
inc
or
or
addl
or
xor
and
push
mov
sbbl
lea
inc
cld
orl
add
lock
rclb
sbb
and
mov
lods
stos
nop
add
add
jae
test
out
push
xor
and
aam
repz
out
pop
sbb
das
lea
push
xor
lcall
ret
call
xor
mov
sbb
inc
xchg
stos
xchg
push
inc
pop
xchg
aaa
and
mov
dec
mulb
add
mov
sub
or
inc
add
push
dec
loope
test
xor
movsb
test
or
cmp
or
je
jnp
xchg
stos
sbb
lea
mov
test
or
loope
jnp
push
sbb
mov
aas
pop
mov
sbb
cmp
inc
mov
aas
shr
sub
or
stos
mov
mov
inc
or
aaa
ficoms
and
sbb
mov
add
test
popa
and
mov
or
nop
xchg
add
rcrb
push
sbb
sbb
adc
cmp
pop
pop
pop
pop
ret
xor
adc
cld
dec
mov
sub
loopne
push
add
lret
push
call
mov
ret
rorl
push
xor
add
sti
scas
rol
push
fs
xor
orl
add
in
jmp
push
xor
scas
leave
jo
test
xor
addr16
sbbb
ret
je
cli
ja
cmp
rsqrtps
repz
sub
rol
lods
icebp
fninit
fisubrl
loope
or
pop
in
mov
decb
js
mov
fists
filds
add
in
push
test
mov
and
sti
clc
shr
or
incb
add
pop
dec
jecxz
shr
push
mov
nop
jae
shll
pop
adc
add
orb
hlt
test
pop
add
push
loop
push
sbb
pop
cmp
or
and
xor
mov
movzwl
test
jge
fbld
leave
or
cld
pop
inc
pop
adc
testb
cmp
jge
leave
push
inc
jno
xor
push
adc
sub
cmovp
enter
arpl
cmp
mov
dec
pop
or
rclb
xchg
push
mov
add
movb
cwtl
inc
jmp
and
pop
mov
xor
xor
popw
pop
jmp
pop
push
test
cmp
in
add
jbe
push
sarl
mov
or
push
stos
out
shlb
not
daa
fcoml
mov
mov
fs
loopne
ret
push
jge
sub
dec
clc
shll
add
movsl
pusha
sub
ljmp
jnp
push
addr16
movsb
push
mov
nopl
pop
pop
pop
insl
cmp
cmp
ret
xorb
mov
pushf
inc
lcall
push
push
xchg
xchg
mov
test
push
mov
sbb
outsb
orl
ret
mov
pop
das
and
inc
sub
hlt
pop
push
dec
or
das
aaa
push
push
in
push
in
in
shlb
leave
mov
inc
ljmp
std
mov
popa
jmp
pop
xor
cmp
jne
adc
jmp
fidivrl
inc
loop
add
out
out
sti
test
pushf
pushf
fimull
mov
or
and
nop
popf
add
fwait
push
rcrb
orb
mov
push
je
and
or
mov
push
dec
or
ror
jle
test
and
push
push
push
push
es
or
dec
sbb
adc
lds
mov
insl
jae
lret
lods
lret
in
sbb
or
subl
test
testb
xchg
out
bound
xchg
out
mov
aas
dec
inc
pop
test
ret
xor
jmp
dec
arpl
jmp
mov
ficoml
test
jmp
testb
mov
jle
mov
jg
cmp
and
jmp
push
add
iretw
adcl
mov
and
imul
mov
in
xchg
push
sub
mov
lods
popf
and
push
outsl
jnp
repz
xor
icebp
mov
shr
nop
adc
dec
dec
or
or
repz
popa
imul
insl
dec
sub
adc
sbb
add
mov
jl
sbb
shr
pusha
jae
xor
jbe
fldt
and
add
add
rorl
push
out
in
mov
mov
jp
and
nop
xor
iret
imul
mov
js
push
adc
mov
inc
jo
insb
imul
outsb
and
push
fdivr
push
adc
ljmp
add
out
mov
in
fs
fistpl
adc
jae
lret
insb
out
outsb
addr16
bound
mov
imul
xor
popa
outsb
insb
and
xor
daa
popf
arpl
ss
jne
fwait
cmp
xor
dec
js
popa
jnp
push
inc
outsl
js
emms
je
arpl
data16
adc
cmp
or
je
movsb
dec
dec
roll
push
fs
rorb
loop
sbb
je
cmc
inc
les
pop
jl
imul
jle
sub
fs
mov
int3
cmp
or
mov
cmp
dec
xor
jp
dec
pushf
lea
movsl
sbb
add
je
and
jl
sub
mov
xor
movsb
mov
call
jae
xor
call
jae
xor
call
jae
mov
inc
mov
call
adc
jae
jne
stos
jmp
call
sub
jne
call
jmp
lods
shr
je
adc
jmp
xchg
dec
shl
lods
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
xchg
mov
mov
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
sub
mov
popa
ret
add
add
add
inc
push
add
dec
or
add
faddl
add
rolb
add
add
add
add
adc
add
adc
add
mov
lea
mov
mov
mov
movb
add
sub
mov
xor
ret
mov
popl
add
push
push
push
push
push
push
lea
mov
push
mov
push
push
pushl
push
mov
add
mov
call
pop
mov
push
push
mov
mov
add
mov
mov
mov
add
mov
mov
add
mov
add
lea
push
push
push
call
pop
pop
add
mov
push
mov
mov
add
sub
mov
mov
mov
call
mov
mov
mov
pop
jmp
add
push
push
push
call
mov
pop
pop
pop
pop
pop
pop
jmp
