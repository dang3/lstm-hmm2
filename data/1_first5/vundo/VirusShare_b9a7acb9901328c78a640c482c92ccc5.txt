jb
add
dec
add
outsb
add
dec
add
add
insb
add
add
je
add
add
jb
popa
add
add
outsb
add
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
popa
add
add
outsb
add
add
je
imul
push
add
je
insb
add
add
dec
add
je
push
add
popa
add
imul
add
add
add
jne
je
je
outsl
add
inc
add
add
jb
outsb
add
je
add
popa
add
add
add
outsb
add
outsl
add
imul
outsl
add
add
add
dec
add
data16
push
add
js
je
add
add
inc
add
je
je
outsl
add
dec
add
add
je
add
inc
add
je
je
outsl
add
inc
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
dec
add
insb
add
add
je
add
dec
add
popa
add
je
imul
push
add
je
insb
add
push
add
js
je
add
inc
add
je
je
outsl
add
push
add
js
je
add
add
inc
add
popa
add
push
add
js
je
add
add
inc
add
je
je
outsl
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
inc
add
arpl
add
add
add
imul
add
je
push
add
js
je
add
dec
add
insb
add
add
je
add
inc
add
jo
push
add
jb
imul
add
popa
add
add
add
add
outsb
add
mov
jbe
roll
and
sbb
lods
hlt
xor
or
add
cmpsl
add
add
push
dec
add
stos
add
pop
add
add
add
push
add
sbb
add
push
add
jo
push
add
je
inc
add
xor
add
mov
add
add
add
add
add
push
add
add
add
adc
dec
add
add
jl
push
add
add
add
add
sbb
inc
add
add
add
add
add
mov
add
add
add
add
fldl
in
add
add
mov
add
xor
add
push
add
add
add
add
add
sbb
inc
add
add
mov
add
add
add
mov
add
add
add
add
add
popf
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
jb
sbb
ret
add
add
sahf
add
add
add
add
add
mov
add
add
add
add
add
add
push
imul
add
add
int
loop
mov
add
sbb
out
sbb
add
add
add
mov
add
add
push
roll
jecxz
mov
add
in
add
add
add
inc
add
pop
add
add
add
xchg
add
add
jge
in
add
add
add
add
add
add
add
dec
add
clc
add
add
lods
add
add
pop
jns
xchg
add
sbb
sahf
add
add
in
add
sbb
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
int
cmp
mov
add
jo
lods
add
add
add
add
add
add
add
add
imul
cltd
add
pop
add
roll
add
mov
add
add
jae
xor
and
xor
xor
add
cmpsb
add
dec
add
add
add
add
add
clc
add
add
add
add
add
add
jae
xor
push
add
add
add
add
add
add
add
add
add
sbb
push
add
mov
add
cmp
add
add
add
add
add
les
sbb
rolb
mov
jecxz
sbb
jb
jae
add
lods
add
add
sbb
sbb
mov
sub
add
add
add
sbb
push
add
mov
sbb
in
add
add
mov
add
add
add
add
add
add
add
in
add
push
add
sbb
mov
out
or
add
add
add
aas
add
and
add
push
pop
add
fadds
add
movsb
add
add
add
add
add
in
add
sbb
daa
add
add
add
mov
add
sbb
lcall
fstpt
mov
adc
les
mull
subb
into
and
pop
or
test
jno
xor
dec
push
loop
arpl
leave
dec
xchg
mov
rorb
sbb
cmp
mov
pop
roll
divb
aas
sbb
xor
aas
iret
mov
inc
insb
call
xor
cwtl
xor
pop
incl
mov
cli
cmp
sbb
and
int3
fildl
mov
sbb
mov
fs
cmp
lea
pop
mov
loopne
push
faddl
loopne
push
sub
imul
xchg
push
mov
sub
movsl
lds
pushf
rol
icebp
pop
mov
jo
mov
ja
jmp
lds
jb
in
xor
mov
push
data16
loope
cli
sbb
js
js
cmp
dec
mov
fldcw
jo
cmpsl
mov
mov
xor
cmpb
fidivs
inc
or
test
and
mov
pop
inc
repnz
push
jb
xchg
lea
arpl
xchg
mov
mov
repnz
dec
enter
push
fstps
repnz
and
hlt
push
sub
sub
ret
dec
rcl
pop
mov
mov
shr
mov
cmp
or
aam
sbb
mov
adc
mov
mov
xchg
adc
mull
mov
xor
out
insb
sbb
scas
mov
and
subl
push
mov
pop
cwtl
rol
inc
inc
xchg
mov
stc
outsl
loop
fstl
mov
mov
dec
and
adc
xchg
fdivr
outsl
in
aas
imul
lods
inc
or
sub
scas
shrb
adc
incb
pusha
jmp
aas
or
lret
sbb
jge
test
adc
push
mov
daa
aam
rorb
in
iret
and
cmpsl
stos
jns
jmp
and
cmp
int3
add
jnp
out
push
cmp
and
cmp
rcrb
pop
xor
nop
cmpsb
mov
cltd
sub
adc
dec
push
xchg
gs
int
outsl
push
lods
push
ficomps
insl
xor
jge
sbb
aad
adc
insl
sub
push
pop
add
enter
mov
fwait
sub
in
sahf
test
mov
mov
xchg
lds
out
stos
stc
shrl
mov
out
movsb
cs
jle
xor
negl
xor
out
xchg
mov
jns
mov
add
add
add
add
add
add
add
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
push
mov
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
push
call
mov
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
mov
pop
test
mov
jb
inc
hlt
aas
or
sbb
sub
cmp
dec
pop
adc
jns
mov
pop
test
psubusw
jmp
ret
sbb
sub
cmp
dec
std
pop
popf
imul
mov
pop
jmp
iret
cmp
pop
xchg
pop
mov
sub
sub
adc
std
add
das
test
mov
add
jb
rcll
cld
les
adc
push
ds
gs
data16
inc
das
leave
jg
in
adc
xor
push
out
pop
sarl
sub
shl
xor
pop
lock
cmpsb
bound
test
ljmp
mov
mov
pop
stc
mov
enter
sbb
repnz
fcmove
sbb
sub
inc
or
iret
stc
push
daa
jb
or
adc
movsb
pop
mov
sbb
jns
mov
popa
sub
test
dec
cs
mov
adc
lods
cmpsl
or
lods
jnp
dec
pop
cltd
dec
test
psubusw
jmp
iret
sbb
sub
cmp
dec
xchg
pop
xchg
jns
in
dec
cli
sub
lods
or
jge
jns
jl
pop
jmp
lcall
or
jmp
in
ss
adc
mov
mov
mov
enter
dec
cltd
pop
out
or
cmp
stc
aas
or
sbb
sub
cmp
dec
pop
lahf
imul
mov
pop
jmp
iret
sbb
sub
cmp
dec
pop
lahf
imul
jge
test
repnz
sub
enter
mov
and
adc
nop
rorl
punpcklwd
push
mov
and
sbb
or
jle
cmp
mov
xor
pushf
push
or
add
and
lods
jle
cmp
popf
inc
jmp
jp
outsb
pop
inc
and
in
imul
xlat
or
jno
popa
cmpsb
pop
mov
push
shlb
dec
mov
in
ljmp
outsb
sub
push
mov
and
jns
sbb
jb
dec
xchg
cwtl
shll
sub
inc
shrl
jle
sub
jmp
cmp
xchg
in
daa
lds
lcall
mov
add
pop
je
jne
ljmp
adc
dec
jnp
negl
xor
jg
cltd
push
and
push
fimuls
dec
push
test
insl
jge
mov
lahf
and
stc
js
pop
es
push
mov
pop
jmp
hlt
stc
mov
stos
inc
call
sahf
movsl
shll
jge
adc
inc
cmp
lret
insl
xor
sahf
aam
mov
cmp
xor
fldenv
cmc
add
jb
enter
out
adc
ds
add
push
outsb
mov
fisubrl
jge
pop
ret
mov
and
mov
scas
or
mov
pushf
ja
imul
into
ds
cmp
shrb
add
into
cld
in
jb
mov
fsubrs
int
xor
xor
je
or
and
mov
fistl
pop
mov
add
push
mov
cmp
stc
or
mov
xchg
sahf
and
mov
push
fs
lods
xchg
mov
gs
add
in
xchg
mov
inc
les
push
cs
aad
inc
aad
or
mov
das
pusha
pop
fdiv
mov
addl
lea
mov
mov
fstpt
outsb
add
fmull
incl
std
pop
into
ja
clc
pop
mov
pushf
cmpl
lret
adc
jmp
js
ss
mov
fstpt
clc
dec
leave
rorb
cmp
pop
lods
mov
and
in
push
outsb
xchg
ret
outsl
mov
mov
jecxz
js
lret
lret
cmc
or
push
xchg
sbb
sbb
dec
cld
jmp
fsts
cmp
push
cli
ret
in
mov
mov
dec
xchg
adc
dec
test
or
aas
sub
jecxz
dec
pusha
rolb
rol
imul
out
in
test
mov
loop
ror
xor
cmp
add
jg
cmp
daa
ret
xchg
adc
jnp
mov
loop
jno
lret
lahf
mov
jb
add
mov
or
sbb
lock
inc
stos
daa
and
push
push
icebp
lea
dec
repz
sbb
inc
pop
sbb
push
adc
mov
sub
xlat
dec
push
lahf
cli
iret
jecxz
outsb
sahf
bt
loope
sahf
call
jl
xchg
notl
inc
int3
mov
pop
out
test
jle
in
sbb
dec
cmc
add
jb
jmp
pop
cmpsl
loopne
leave
lods
xlat
fldenv
cltd
sub
fildl
dec
mov
lods
ja
stos
int3
sbb
sub
sub
adc
xor
rcrb
mov
lahf
roll
inc
or
dec
adc
cmp
arpl
add
xchg
push
decl
jg
dec
xor
gs
inc
lods
sub
mov
fsts
ja
or
push
add
push
mov
ljmp
cs
in
adc
jmp
dec
test
stos
lahf
adc
mov
shll
roll
pop
mov
test
repnz
add
pusha
push
test
shll
andl
icebp
xor
in
es
lahf
sarb
sub
out
dec
sub
jp
lahf
gs
cs
outsb
cmp
aas
or
scas
adc
inc
sbb
lret
add
movsb
loopne
push
stos
insl
out
push
sbb
xor
arpl
inc
mov
sbbb
jbe
popf
dec
repz
enter
pop
sahf
ss
nop
jmp
mov
in
pop
nop
or
mov
std
cmc
inc
repz
enter
dec
das
or
mov
inc
das
imul
sbbl
fistpl
ret
loope
push
incb
push
xor
stc
pop
lahf
das
mov
popa
dec
adc
sbb
mov
push
dec
pushf
mov
push
mov
insb
or
or
adc
or
adc
pop
mov
outsl
inc
xor
add
shll
in
pop
flds
test
xlat
aad
hlt
xchg
mov
and
add
pusha
lret
adc
ljmp
cmp
insb
jmp
repz
shlb
inc
out
or
daa
add
cmp
mov
pop
mov
fnsave
cwtl
push
jle
movsl
ljmp
ret
jge
sub
or
lods
lds
or
movsl
add
call
sbb
mov
pop
jbe
sahf
xchg
out
jecxz
or
jmp
bound
add
pop
add
dec
mov
lretw
push
mov
nop
mov
xchg
std
aaa
xchg
push
cmc
fs
xchg
or
xchg
into
adc
add
les
je
or
test
jl
and
repnz
rcll
dec
cltd
mov
pop
mov
js
out
xchg
loope
lcall
mov
and
movsl
mov
iret
jbe
mov
test
movsb
fildl
mov
cmpsl
test
adc
pop
mov
sub
adc
scas
inc
pop
and
and
cmpsl
push
jae
mov
xor
shl
sub
push
mov
jne
fwait
lock
jmp
pop
insl
dec
xor
mov
insb
imul
roll
dec
in
test
mov
adc
add
fwait
stc
mov
jnp
call
aaa
xorb
pop
lret
push
cmp
out
sub
or
xchg
jne
xchg
or
and
inc
jmp
cmc
les
lds
mov
lcall
xchg
dec
loope
sub
inc
xchg
sub
je
mov
sbb
leave
pop
or
sbb
push
insl
cmp
lds
stos
aam
add
dec
adc
filds
cmp
push
daa
lcall
mov
std
mov
mov
pop
testb
ljmp
shll
mov
sub
cmp
dec
sbb
outsl
push
call
sbb
mov
fwait
sahf
and
mov
cmp
lock
dec
xchg
sub
dec
cli
hlt
dec
adcb
into
mov
in
fstpl
and
cmp
pop
or
sub
push
sub
adc
inc
jp
or
icebp
pop
test
insl
jge
jae
jecxz,pt
pusha
test
pusha
mov
fistps
and
cmpsl
pop
cmpsb
int3
push
pop
add
add
sub
mov
xor
in
xchg
js
add
mov
cmp
mov
jecxz
sahf
push
xchg
sub
je
cmp
jmp
je
test
cmc
out
adc
jp
movsl
aas
scas
xor
jae
sub
inc
mov
je
sub
add
fwait
inc
jnp
push
popf
mov
jo
cmp
push
xchg
push
js
out
jbe
dec
mov
and
loop
push
push
cwtl
xchg
mov
mov
jns
jle
sub
mov
les
les
cmp
mov
pop
mov
lcall
not
sub
sbb
js
test
repnz
jp
dec
cmp
lock
push
nop
cmp
cwtl
scas
push
xlat
xor
mov
jb
call
cmp
push
ret
add
loopne
adc
sbb
mov
cmp
pop
jecxz
hlt
push
mov
test
in
popf
push
aad
mov
mov
aaa
aaa
jae
pop
mov
shrb
in
out
mov
int
jg
mov
mov
insb
test
push
or
mov
mov
push
pop
pop
sub
mov
add
xchg
pop
jmp
adc
pop
xchg
test
sub
pusha
adc
pop
scas
gs
and
movsb
jle
inc
mov
mov
clc
xchg
add
xor
cltd
inc
pop
fprem
popf
inc
sub
cs
out
or
sahf
jnp
pop
hlt
push
jbe
outsl
sbb
popf
and
xor
movsl
orl
sahf
pushf
mov
ljmp
push
fwait
shlb
jbe
cmpb
lods
iret
dec
in
stc
or
push
jge
scas
mov
sub
jb
add
repz
and
arpl
xchg
mov
data16
out
ss
idivb
mov
ss
sub
into
mov
movsb
or
jg
lods
inc
dec
add
adcl
sub
aaa
cmp
fisubrl
sti
push
cmp
pop
mov
xor
mov
aam
gs
stc
leave
loopne
inc
mov
out
inc
movsl
fdivrp
jmp
cmc
adc
or
aam
xor
les
jmp
dec
js
xor
push
dec
call
lret
push
cltd
adc
dec
mov
test
insb
and
xchg
out
cli
jle
mov
out
and
nop
movsb
adc
andl
in
jne
test
shrb
push
xor
mov
xor
or
inc
mov
lea
out
scas
in
lahf
jb
cld
notl
mov
popa
dec
mov
sti
push
ds
adc
arpl
add
arpl
pop
and
and
cmp
fwait
sbb
adcl
aam
dec
lods
pop
push
push
xchg
sub
scas
add
fmull
gs
sbb
or
adc
cmp
lea
lock
test
subb
mov
movsl
mov
dec
test
insl
mov
add
or
les
aas
xor
int
rclb
leave
pop
fisttpl
dec
dec
into
lcall
mov
mov
pop
scas
xchg
mov
pop
bound
gs
sbb
xor
ret
adcl
push
mulb
mov
push
pop
xchg
dec
pop
push
cmc
xchg
pop
xor
sbb
jmp
mov
adc
int
push
xchg
jl
clc
mov
repnz
loop
stc
push
fwait
dec
stc
outsl
mov
or
je
in
add
mov
sbb
or
cmp
and
sub
xor
jp
mov
jge
sti
xchg
in
jb
fdivrl
cmp
cmp
inc
xchg
cmp
sbb
lcall
fidivrs
xchg
jp
lds
add
clc
test
test
enter
pop
test
call
cmp
movsb
or
mov
mov
pusha
pop
or
push
mov
inc
cmp
out
repz
pop
mov
and
mov
pop
pop
add
das
mov
cli
push
sbb
dec
dec
push
cmp
int3
jo
mov
add
pusha
lcall
push
mov
inc
push
sub
fisubs
cmp
add
jle
dec
push
cmp
loop
dec
cmpsl
inc
cmpsl
jae
push
daa
inc
lahf
xor
jl
sub
out
sub
cmpsb
mov
mov
imul
scas
jb
icebp
ficomps
mov
mulb
aam
popa
adc
pop
mov
sub
cs
clc
enter
jae
out
clc
iret
sbb
xor
sub
sbb
xchg
add
js
add
popa
and
lds
pop
loop
mov
cltd
mov
fs
or
orl
xor
les
icebp
jns
call
sarl
inc
imul
out
mov
mov
push
or
les
pushf
iret
xlat
daa
mov
sbb
xor
js
and
icebp
lahf
pop
pop
fwait
jl
stos
ja
mov
adcl
cmp
and
ljmp
les
mov
shlb
and
push
pushf
push
test
lods
fisttpl
fcoms
xorl
add
mov
flds
push
outsb
push
adc
enter
std
test
out
xor
repnz
js
dec
mov
loop
inc
mov
nop
inc
push
dec
lret
push
mov
xor
mov
cli
lret
es
sbb
dec
incb
aas
xchg
sub
pusha
sbb
sbb
call
inc
jge
and
fistl
dec
sbb
inc
jg
aas
add
mov
or
mov
ds
push
pushf
and
mov
mov
fisubrs
cmp
rcrl
nop
sbb
cmpsl
and
jge,pn
lret
xor
cmp
xor
das
dec
inc
pop
lods
mov
sarb
sbbl
int3
int3
rorb
add
ljmp
or
mov
leave
movsl
fisubrs
xchg
adc
sub
push
sub
add
sub
imull
cmp
cmp
pop
inc
xchg
mov
sbb
in
insb
es
jnp
in
add
cmp
dec
dec
loopne
das
mov
fs
pop
fsts
mov
adc
ficoml
dec
inc
aas
push
adc
test
scas
add
jge
push
cs
sub
push
mov
adc
cltd
pushf
mov
pop
int3
push
push
and
mov
xchg
adc
dec
sbb
rep
adc
adc
movsl
mov
xor
sub
pop
shl
das
notl
add
popf
cmp
aam
adc
je
jmp
sbb
pop
pop
ficompl
ret
mov
dec
sub
sbb
cld
imul
jb
xchg
data16
fst
rolb
mov
mov
cmp
push
xor
cli
movsb
out
push
lret
pop
xchg
in
and
sbb
enter
jnp
jge
dec
pop
xor
ds
sbb
sbb
shlb
fdivrs
frstor
std
sub
popf
ja
test
cmp
addr16
cmp
jp
bound
mov
mov
ljmp
sti
push
inc
add
and
mov
scas
stos
or
out
es
dec
sbb
lock
add
loop
repnz
pushf
push
pop
and
fisttpl
or
push
dec
inc
sbb
lods
ss
add
es
push
test
inc
xor
mov
std
jo
dec
scas
out
mov
dec
add
data16
xor
inc
jl
sbb
cmpsb
xor
les
push
pop
sar
dec
xor
push
push
xchg
sub
sbb
or
sub
scas
shl
dec
add
cmp
jns
stc
test
push
sub
jp
mov
inc
iret
aam
adc
mov
mov
int3
cmp
aam
fdivs
jl
subb
xor
mov
mov
test
stc
loopne
int
and
gs
mov
testb
pop
mov
mov
int3
fs
cmpb
push
pop
add
xor
lods
sub
loope
sub
pop
cmovge
imul
leave
cwtl
mov
push
mov
mov
push
ficompl
popa
or
stos
cltd
repnz
ds
mov
sahf
fcmove
decl
out
ljmp
xor
pop
pushf
sarl
sti
imull
mov
xchg
outsb
mov
aas
push
push
enter
hlt
jmp
dec
jnp
in
mov
in
xor
xchg
pusha
in
int3
cmp
push
push
ljmp
xor
fdivr
adc
lret
shll
add
xchg
imul
repnz
mov
mov
pop
fs
gs
adc
sub
and
mov
enter
pusha
lock
cmp
mov
cmp
push
ret
dec
xchg
mov
and
jmp
push
cmpsb
inc
movb
lods
mov
xor
sub
pop
sbb
xchg
mov
push
fs
cmp
mov
shl
push
pop
sbb
jb
aam
stos
popf
cmp
and
push
clc
jl
xchg
jns
hlt
ss
std
mov
mov
jno
rorl
jge
xor
mov
hlt
stos
int3
or
sbb
pop
mov
mov
fidivrl
jnp
lcall
xchg
icebp
filds
jbe
mov
xor
lock
lds
and
fs
dec
xchg
sti
cmp
movsb
mov
movsl
stos
ds
and
stos
andl
pop
lods
scas
or
loope
decb
add
lret
into
fcmovb
lcall
loop
test
jne
and
xchg
mov
pop
xchg
mov
mov
inc
jecxz
pop
iret
mov
add
icebp
sti
sbb
setge
cmpsl
insl
xchg
hlt
pop
mov
xor
inc
xchg
mov
les
mov
mov
icebp
mov
jl
pop
fildll
pop
jns
bound
movsl
mov
cli
jnp
mov
popa
add
or
mov
mov
and
or
inc
fs
mov
jecxz
fbld
cmp
mov
test
or
test
js
sub
ret
out
fwait
mov
mov
xchg
mov
vpsubb
cmove
into
shr
adc
cmp
lret
cmp
xchg
orl
inc
lret
bound
or
lret
mov
add
test
shr
in
mov
mov
lods
pop
sub
jnp
mov
push
mov
mov
or
jns
add
add
jnp
loop
inc
dec
lds
popa
rcrb
xor
in
in
jecxz
bound
pop
mov
aam
ss
push
sub
fwait
stos
sbb
test
and
mov
inc
lods
pop
jne
rcll
adc
icebp
fimuls
ret
and
push
or
push
jmp
push
andl
imul
dec
sub
lret
pop
mov
mov
xchg
xchg
icebp
test
subl
xor
dec
aaa
jno
xchg
sub
or
push
adc
mov
jne
ds
xchg
xchg
sbb
adc
push
gs
fs
ffreep
packsswb
mov
push
leave
fistpl
sub
jle
lods
sbb
mov
movsl
and
mov
aam
mov
cli
into
push
mov
dec
js
mov
mov
mov
cwtl
ret
test
in
sbb
lcall
js
pusha
ljmp
testl
hlt
out
lret
inc
mov
or
sahf
aas
xchg
dec
repnz
xchg
hlt
aam
xchg
out
fldl
in
icebp
adcl
mov
cmpb
dec
mov
inc
and
int3
mov
xchg
loop
stos
and
xlat
mov
add
cltd
test
jbe
loopne
sbb
scas
inc
cli
mov
mov
mov
jge
rcl
and
arpl
in
xchg
inc
inc
add
xor
push
ret
cmp
jle
push
stos
and
xchg
arpl
dec
mov
sub
jl
pop
rcrl
repnz
mov
mov
bound
jge
inc
ret
fidivl
or
into
lods
fisubrl
jno
jmp
dec
cltd
push
dec
mov
ret
cmp
sbb
push
test
mov
xchg
or
push
mov
jecxz
cld
sbb
xchg
or
scas
sub
inc
movsl
adc
xchg
inc
enter
fldcw
sahf
out
push
fdivrs
out
ja
ja
add
adc
adc
push
jbe
cli
mov
push
mov
jns
lret
das
imul
dec
mov
jle
or
hlt
xchg
xchg
pop
mov
add
sbb
pop
mov
mov
and
inc
pushf
and
sub
jmp
dec
xor
mov
dec
mov
rcll
cld
mov
dec
ds
jbe
pop
repz
test
ret
sahf
movntq
sahf
cltd
dec
pop
rclb
jge
test
cmpsl
lahf
aaa
sub
cmp
or
dec
loop
mov
test
xchg
mov
cmpsl
test
xchg
testb
xchg
nop
lods
inc
ja
loopne
nop
lock
mov
mov
inc
xor
imul
xchg
fdivr
lods
out
push
mov
pushf
jns
xchg
das
adc
pop
fcmovnu
mov
test
and
jae
push
pushl
xor
aam
jp
mov
pop
loopne
add
insb
nop
xlat
mov
scas
add
int3
xchg
outsb
sub
stos
xchg
in
leave
jmp
enter
lock
cmp
and
sbb
movsb
jmp
cmc
sbb
mov
bnd
arpl
xchg
lods
sbb
outsl
mov
pop
jmp
iret
sbb
sub
cmp
dec
pop
lahf
imul
mov
pop
jmp
iret
sbb
sub
cmp
dec
pop
lahf
imul
mov
pop
jmp
iret
sbb
sub
cmp
dec
pop
lahf
push
dec
cltd
pop
test
psubusw
imul
out
sub
mov
pop
shl
xchg
rolb
pop
adc
add
insl
push
adc
sbb
lea
mov
out
pop
and
and
add
jb
bound
ja
add
mov
cmpsl
repnz
shl
ret
pop
cmp
or
sbb
imul
dec
ja
addr16
test
leave
fstl
stos
nop
inc
pop
and
fs
inc
jp
sahf
test
je
bound
pop
jnp
in
outsb
in
xchg
mov
or
and
pop
scas
pop
adc
stos
mov
popf
lret
mov
jnp
pop
js
dec
mov
mov
ds
dec
mov
pop
and
pop
in
loopne
sbb
inc
lods
pop
movsb
mov
pop
xchg
mov
pop
or
jp
sub
lcall
push
push
ja
mov
imul
xchg
jno
and
mov
xchg
subb
rcl
dec
enter
fsubl
addr16
dec
andb
lahf
cmp
rorb
adc
das
iret
sbb
int3
mov
imul
insl
ret
xor
repnz
xor
ret
pop
and
adc
adc
inc
push
ja
stos
xchg
mov
cmpsl
ljmp
mov
ja
data16
adc
xor
das
adc
out
sahf
loopne
in
xlat
sahf
mov
cmpsl
xorb
and
jg
inc
push
adc
add
and
dec
mov
mov
cmc
xchg
mov
push
mov
push
adc
add
bound
ja
addr16
mov
cmpsl
repnz
loop
shl
ret
pop
and
adc
add
jb
bound
ja
addr16
mov
cmpsl
repnz
loop
shl
ret
pop
loope
dec
pop
push
pop
mov
dec
xchg
pop
push
mov
int
cs
or
mov
mov
xchg
mov
popa
jl
and
rcll
popf
insb
cmp
dec
sbb
xor
mov
ljmp
out
lods
das
add
dec
inc
xchg
sub
mov
loope
sarb
push
cmpsb
in
fs
xorl
push
push
jne
sub
lock
push
fildl
sbb
mov
movsl
scas
or
stos
js
cmp
mov
filds
mov
lds
dec
pop
mov
stc
cld
inc
in
aas
aam
stos
imul
rcl
movsb
outsb
fcmovnbe
cld
dec
bound
mov
popa
mov
out
orl
inc
into
mov
sbb
xor
mov
scas
stos
ja
outsb
adc
fld1
nop
repnz
in
push
jmp
cmp
and
sub
inc
testl
xchg
pop
push
std
xchg
cmp
rorl
adc
fldl
push
or
mov
xchg
xor
in
mov
leave
mov
aad
push
mov
sub
mov
add
mov
xlat
or
mov
dec
pop
scas
and
dec
in
shrl
stos
shrl
jl
subl
sahf
clc
jl
daa
rclb
aas
out
or
xchg
push
push
xchg
dec
fcompl
pushl
mov
push
xchg
ret
fldcw
dec
cmp
dec
xor
lea
popa
lret
mov
into
xchg
fcmovbe
cmp
rorl
dec
fsubl
sub
aad
out
in
dec
or
je
test
rorb
lods
pop
xor
mov
mov
sbb
arpl
cmp
push
ss
xchg
pop
dec
cmp
sbb
cltd
mov
dec
jb
fdivr
xchg
vrndscalesd
in
mov
orl
mov
or
push
mov
insb
jl
into
inc
add
aad
fsub
jno
dec
push
push
orb
negb
pop
stos
xor
pop
popf
jge
adc
loopne
cmp
imul
bound
aaa
mov
into
pop
xor
mov
les
test
xchg
ficomps
cmp
sahf
mov
aas
divb
pusha
repz
push
mov
adc
inc
fadd
and
jl
or
push
add
sub
lret
xor
insl
fidivs
jns
call
cmc
add
dec
push
and
mov
pop
subl
cmp
repz
movsb
jae
inc
pop
inc
arpl
xlat
lds
es
in
adc
inc
imul
lret
sbb
fisttps
cmp
testb
mov
pusha
out
out
roll
ret
mov
dec
inc
jo
sub
cld
lods
push
xchg
ljmp
and
mov
cmp
push
sbb
jecxz
jnp
xor
mov
std
ljmp
sbb
ret
xchg
aas
and
mov
cmpsb
sbb
or
push
addr16
loope
xchg
add
lods
sahf
inc
xchg
and
bound
icebp
mov
repnz
mov
test
xchg
testl
aam
daa
leave
cmp
add
xchg
xchg
push
loope
sbb
test
mov
xchg
pop
fwait
fwait
or
sbbb
jo
jge
push
jecxz
test
sarb
add
jmp
sub
fistl
xchg
test
sub
push
cmp
stos
lock
sub
cs
xrelease
gs
xchg
bound
add
xchg
jg
cmp
jnp
xor
test
rorl
ret
adc
es
xchg
cmp
push
in
stos
fists
mov
cwtl
std
out
ret
xchg
ja
cmpsl
divb
pop
pop
movsl
xor
es
jmp
xor
je
out
sbb
inc
mov
cmp
lahf
ja
xchg
mov
lds
mov
add
sbb
adc
mov
mov
fimuls
lcall
loope
mov
je
cmc
lock
stos
mov
xchg
pop
sub
pop
xor
mov
sub
scas
and
daa
insl
pop
and
jnp
and
clc
cmpsb
cmpsl
es
dec
cmpsb
xchg
adc
testb
lret
popf
jle
bound
or
lods
out
ret
cld
sub
mov
out
and
pop
mov
pop
jae
addr16
test
dec
jp
sbb
cmpsl
imul
or
mov
fdiv
jmp
sub
cmp
shll
sub
outsl
and
ret
lods
or
jb
xchg
xchg
inc
mov
adc
mov
testb
ds
or
out
push
aas
jnp
imul
dec
insl
and
clc
jecxz
movsb
xchg
and
icebp
push
pop
mov
out
push
cmp
jle
pop
pop
ja
insl
cmp
adcl
or
mov
mov
fldl
scas
push
cmpsb
and
push
mov
adc
into
mov
and
mov
fdivs
jb
mov
cmp
ss
arpl
sbb
and
test
pop
xor
adc
fbld
nop
popa
mov
dec
or
or
repnz
sub
mov
sub
enter
dec
add
lea
out
push
sbbl
je
mov
decb
mov
push
adc
xchg
sbb
or
out
aaa
adc
mov
fildl
and
subl
push
cmpsb
clc
push
push
sub
pop
push
or
sbb
test
adc
dec
ljmp
and
test
or
cmp
sti
enterw
cs
call
imul
outsb
jge
pcmpgtd
sbb
dec
adc
mov
mov
icebp
sbb
out
push
cvtpi2ps
jg
sub
ljmp
mull
fildl
push
mov
or
dec
adc
xor
pop
movsl
inc
ds
arpl
in
jle
ja
cli
int3
push
rclb
inc
xor
cltd
pop
lcall
ss
xor
adc
xchg
mov
inc
push
dec
jo
dec
and
push
mov
in
push
test
aas
sarb
adc
std
add
mov
pop
dec
aam
rorl
inc
in
mov
outsl
fidivrl
push
inc
stc
jo
cmp
daa
sarb
test
mov
leave
iret
push
pop
mov
or
into
sahf
lahf
jae
pop
add
pop
push
sbb
cmc
inc
shl
cwtl
fdivr
jmp
and
and
iret
in
inc
subb
int
dec
mov
ret
mov
push
dec
in
or
xchg
hlt
push
push
lea
fwait
pop
stos
inc
hlt
movsb
dec
out
xchg
in
cmpsb
push
ds
push
out
fsubs
jo
mov
dec
jg
dec
mov
xor
jl
or
mov
test
push
sbbb
andb
xor
xchg
push
sub
imul
cmpsb
adcb
jecxz
mov
dec
test
pushf
sahf
cmp
jbe
clc
fcmovnbe
sub
dec
lcall
pushf
mov
dec
test
subb
mov
jecxz
mov
push
mov
cli
leave
mov
mov
popa
xchg
pop
or
movsb
xchg
fninit
mov
jb
add
xchg
invd
inc
jmp
insl
xchg
leave
into
lods
pop
out
pop
mov
inc
or
inc
hlt
pop
insl
icebp
scas
fisubrl
les
gs
insb
xchg
add
cmp
leave
ljmp
pusha
lock
inc
push
xchg
push
lock
or
pop
popa
loop
sarb
jg
test
lds
sbb
pushf
push
lds
mov
push
rcll
clc
push
xchg
cmp
loop
arpl
lods
std
pusha
stos
test
das
sub
xchg
std
mov
popf
adc
call
pushf
adc
sbb
push
fistpl
push
sub
pop
inc
popa
mov
and
or
ss
pop
and
xchg
fldl2t
cmp
sub
pop
and
ss
jmp
ja
movsb
sbb
and
outsl
or
xchg
int3
adc
insb
dec
pop
xchg
jnp
mov
inc
mulb
loope
sbbl
pop
lahf
scas
std
adc
jb
xchg
std
pop
dec
mov
daa
orb
stos
pusha
mov
xor
andl
mov
dec
shlb
xlat
xchg
scas
shll
bound
iret
inc
test
lcall
push
sub
popa
sbb
sub
test
fwait
arpl
dec
sub
cmp
rclb
loope
cmp
out
xchg
mov
mov
ds
fists
xchg
mov
sahf
lcall
aad
cli
adc
jle
xlat
mov
popa
xor
mov
xor
add
cld
jmp
aam
jae
adcb
xor
adc
dec
cmpsl
pop
mov
mov
loopne
jecxz
and
mov
and
data16
cld
xor
lods
test
sbb
fisubl
pop
in
pop
sub
mov
jne
insl
or
mov
in
push
sahf
outsl
lods
shll
or
pop
xchg
pop
mov
enter
cmpsb
fwait
sub
mov
sub
in
dec
dec
mov
pop
jnp
push
movsl
cmpsl
sahf
and
and
mov
mov
ret
cmpsl
xchg
jnp
repz
outsl
int3
add
sahf
inc
pop
out
rcl
movsb
test
or
add
push
push
ds
cltd
sbb
inc
mov
jg
icebp
and
lods
cs
mov
mov
pop
mov
push
rcr
ret
xchg
sahf
aad
mov
mov
jmp
mov
add
movsl
push
dec
hlt
push
pop
roll
popl
pop
push
in
ds
push
out
sub
sub
call
cmp
dec
lret
and
cli
xorl
pop
aaa
mov
dec
sbb
mov
ffreep
es
xor
inc
pushl
in
packuswb
repz
and
jecxz
jmp
sti
out
dec
loope
repnz
lock
mov
and
or
or
in
hlt
pushf
fidivl
and
mov
jmp
fs
hlt
xor
ret
sub
xor
dec
int3
push
xor
pop
push
rcll
push
pop
adc
into
movsl
push
in
add
adc
dec
adc
sbb
inc
rorb
lds
fwait
xchg
jle
out
test
jnp
cmpsl
xor
loope
out
add
cmp
into
in
dec
jmp
push
jle
out
enter
inc
cmp
daa
lret
pop
mov
xchg
insb
dec
sub
outsl
mov
push
test
std
jae
ljmp
adc
pop
pop
mov
push
mov
popa
pop
jbe
cld
inc
fst
xorl
cmp
je
jecxz
and
inc
mov
pop
into
sti
inc
ficomps
xchg
mov
push
out
add
int3
xchg
iret
mov
jne
lock
sub
pop
clc
inc
xor
bnd
call
and
jp
lods
push
repnz
sbb
inc
sarl
push
xor
fadds
push
outsb
xchg
mov
daa
sbb
mov
rcll
adc
fdivrs
mov
adc
xchg
lahf
mov
sbb
mov
push
in
inc
js
dec
fistps
je
xchg
or
int3
fsubrs
out
je
mov
jmp
fstpt
and
pusha
add
aam
test
xchg
fsubs
inc
push
ret
shll
mov
pushl
and
enter
sub
sub
jns
xor
mov
das
dec
xchg
imulb
xchg
mov
test
movsb
bnd
and
imul
lea
and
or
jecxz
nop
push
pop
push
ds
inc
xchg
testl
int3
push
pop
movsl
lret
in
pop
int3
std
out
xor
stos
lods
xor
push
push
dec
test
test
sub
loope
clc
nop
cmc
fs
jp
push
stc
and
or
arpl
cs
xlat
into
xlat
iret
fists
fisttpl
into
icebp
pop
int
rol
test
push
cltd
adc
and
fmul
data16
adc
ljmp
and
or
lods
cmp
lcall
cmc
mov
jne
das
std
mov
adc
and
or
pop
in
xor
mov
call
dec
sub
mov
movsb
lahf
insb
mov
pusha
shll
repz
imul
out
sbb
insl
ret
sub
xchg
adc
repz
fcmove
lret
mov
fnsetpm(287
out
scas
cld
push
clc
stos
in
lods
fadds
test
inc
cmpsb
sbbb
xlat
mov
movaps
push
mov
mov
pop
mov
ljmp
mov
inc
adc
sub
std
xor
xor
gs
out
sbb
hlt
jne
cltd
mov
adc
inc
add
dec
ficoml
pop
mov
sbb
adc
push
sahf
inc
fimull
es
push
jecxz
mov
addl
enter
lea
xor
cltd
lret
not
sub
gs
ja
jmp
arpl
int3
call
es
mov
pusha
sbb
push
loope
add
and
rclb
xor
or
in
test
aam
jbe
rclb
jo
xor
mov
movsl
aad
push
stc
addb
test
push
sti
loop
inc
hlt
pop
int
mov
and
mov
adc
push
pop
mov
xor
shrl
aad
ficoml
sub
orl
mov
call
mov
sub
push
popa
rorl
loopne
sbb
out
add
insb
mov
dec
sti
inc
sub
cs
and
dec
jle
ret
push
push
dec
adc
cwtl
lahf
or
repnz
xchg
xchg
add
fcmovne
repnz
and
movsb
cld
ss
xchg
mov
dec
cmpsl
rep
inc
scas
and
cli
sbb
mov
and
into
mov
call
cmp
insb
xor
int
mov
mov
jp
mov
dec
sub
sbb
lock
imul
cmp
outsb
lods
pop
cmp
inc
stos
icebp
lea
stc
or
jmp
sbb
rcll
mov
and
xchg
ficoml
aas
nop
adc
mov
fnstenv
loope
lea
or
das
dec
mov
or
mov
jae
in
enter
sub
outsb
xor
addb
jno
and
inc
cmp
xchg
push
outsb
out
sbb
cs
and
imul
pop
mov
inc
out
sub
pop
sbb
addr16
pop
les
sar
ja
mov
push
imul
lahf
cmp
out
das
push
stos
and
fsubrs
jno
inc
inc
idivl
inc
and
sbb
mov
pop
mov
stc
test
andb
dec
hlt
test
imul
jge
mov
ret
das
mov
adc
bound
sub
pop
hlt
ja
add
in
scas
jge
outsl
push
movsb
add
dec
in
cmp
add
sbb
cmp
jb
add
mov
nop
adc
mov
ja
or
leave
cmpsb
imul
add
cmp
mov
jecxz
or
dec
dec
jo
addr16
aad
insb
xchg
stos
push
xor
data16
pop
shl
jo
cld
in
mov
leave
in
push
pop
push
cmpsl
mov
clc
jg
sub
mov
cwtl
jae
rolb
cs
xchg
das
sbb
sub
fisttps
into
insb
lods
pop
jp
rcrl
inc
push
out
mov
dec
push
sub
push
mov
inc
push
rcrl
push
and
addr16
inc
leave
jecxz
scas
imul
aad
mov
push
pop
jg
xchg
xchg
test
adcl
sub
idiv
xor
fwait
out
lds
cmp
fcomps
ja
push
enter
push
popf
sub
imul
push
cmpsl
in
add
mov
add
mov
loope
movsl
movsb
test
dec
jg
mov
cmp
adc
movsl
sub
ret
push
js
add
mov
aad
mov
jnp
aad
enter
sahf
mov
fadds
inc
sub
dec
add
xlat
rorl
add
dec
clc
mov
cld
fmull
in
inc
dec
outsl
loope
jae
lret
je
movsl
xchg
pop
cwtl
fs
out
and
fsubrp
xor
xlat
mov
mov
faddl
xchg
xor
xor
movsb
and
hlt
imul
pop
pop
lcall
cmp
sub
xor
xchg
pop
subl
out
sbb
dec
jge
inc
aas
in
loopne
cmp
sbb
mov
sub
push
out
ret
ds
jp
jne
lcall
sbb
inc
insl
mov
pop
loope
pop
fistps
sub
test
enter
inc
lahf
gs
lret
cld
stos
repz
jecxz
xor
rorl
xor
mov
sarb
ljmp
mov
mov
fldenv
or
mov
mov
mov
jmp
movsb
cmp
in
jne
push
sbb
lock
fst
lods
insl
push
sub
sub
cld
mov
lock
fdivr
arpl
pop
cltd
dec
outsl
enter
mov
sbb
mov
inc
mov
cs
test
mov
out
loope
pop
push
xor
dec
in
mov
ja
mov
pop
lcall
test
dec
in
inc
xchg
das
mov
jo
sub
test
mov
jp
out
jo
out
rorl
test
popa
mov
pop
sbb
and
xchg
push
pop
push
pop
or
ds
push
outsb
sbb
dec
cmp
lahf
push
aam
dec
jo
sub
xlat
notl
leave
mov
push
pop
or
cmpb
inc
or
jae
dec
imul
or
in
xor
mov
mov
or
ljmp
or
adc
lahf
xor
daa
push
out
leave
xor
push
sbb
cmp
push
cwtl
sbb
out
das
adc
rorl
pop
mov
stos
xor
lods
outsl
imul
mov
das
xchg
pop
add
mov
dec
sbb
or
pop
loope
and
aam
inc
pop
pop
mov
jg
pop
and
mov
filds
popf
frstor
insl
arpl
mov
xchg
or
xor
fidivrs
lret
mov
cld
outsb
outsl
leave
push
mov
out
outsl
das
lret
xor
lds
fstpt
aad
cmp
mov
loope
out
stc
cmp
add
and
sahf
sbb
movsb
mull
sbb
aam
nop
add
xor
push
cmpsb
jns
test
cmpb
int3
inc
dec
pushl
gs
aaa
inc
aas
dec
xchg
je
pop
sub
shll
adc
xchg
bswap
mov
mov
dec
std
icebp
jg
test
test
adc
loopne
es
repnz
stos
fnstcw
xchg
int
pop
ds
test
jmp
dec
jg
xchg
jmp
sbb
sub
adc
outsb
imul
xchg
pop
mov
fs
cmc
shll
popa
imul
aas
inc
cmp
ljmp
shrl
test
or
jecxz
sarl
into
clc
mov
dec
add
xchg
hlt
mov
outsb
pop
inc
cmpsl
leave
lret
hlt
cmc
jae
leave
loopne
xor
out
mov
int
cli
in
xchg
push
add
pop
addr16
aam
jmp
sbb
ljmp
rcll
jne
das
fsubr
mov
data16
scas
jmp
pop
xor
fstl
or
fnstenv
sub
jge
mov
pop
mov
iret
pop
and
mov
push
je
mov
sti
fsubrl
mov
insb
scas
fnstcw
xor
mov
mov
pop
rorl
ja
mov
mov
ret
bound
int3
push
pop
sub
fwait
insb
repnz
pop
pop
xchg
inc
mov
xchg
adc
loope
int3
fs
outsl
ficoml
jge
inc
test
mov
loopne
int3
test
stos
arpl
negb
mov
and
ret
inc
sbb
mov
mov
cmc
xor
xchg
add
hlt
sub
hlt
dec
popa
pop
aaa
dec
aas
sbb
cld
orb
dec
into
nop
stos
mov
sahf
daa
mov
xor
cwtl
daa
or
aad
sub
xor
or
pop
out
add
jb
bound
ja
addr16
mov
cmpsl
repnz
loop
shl
ret
pop
and
adc
add
jb
bound
ja
addr16
mov
cmpsl
repnz
loop
shl
ret
pop
and
adc
add
jb
bound
ja
addr16
mov
cmpsl
repnz
out
shl
repz
pop
push
pop
and
add
jb
bound
ja
cmpsl
dec
xchg
pop
sub
test
cmp
mov
sub
mov
andl
andl
andl
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
mov
lea
push
movl
movb
movl
movb
movl
movb
movb
movl
call
leave
ret
pop
pop
cmpxchg
subb
xchg
sarl
lahf
and
adc
pusha
iret
jo
push
out
push
pop
mov
das
nop
pop
loopne
lock
outsl
rcrb
and
mov
pop
mov
das
mov
dec
call
lahf
ret
lods
or
jne
adc
and
push
inc
mov
inc
sbb
pop
xchg
adc
stos
inc
mov
fwait
mov
or
test
arpl
shrb
dec
push
orl
fadds
push
adc
in
and
dec
pop
pop
aaa
cmp
pop
hlt
aam
cmp
hlt
mov
cmp
movsl
fcomi
mov
jo
jo
mov
cmpxchg
das
mov
cli
cwtl
outsl
das
adc
iret
inc
loopne
out
and
jl
fidivrl
loopne
out
push
fistpll
jo
rorb
nop
sub
ja
fnstenv
cmp
adc
out
scas
loop
lock
cld
andb
cli
outsl
pop
enter
inc
adc
inc
add
shll
das
mov
dec
lock
outsl
leave
lahf
cmp
or
js
incl
xor
lds
push
addl
sbb
dec
mov
or
test
mov
lock
xchg
pop
xchg
or
pop
movsb
cmp
push
mov
adc
xor
push
loope
in
mov
jg
outsl
rcrb
add
jo
inc
out
push
pop
mov
das
nop
pop
loopne
lock
outsl
rcrb
add
jo
inc
out
push
pop
mov
add
and
inc
scas
icebp
mov
push
out
sub
sub
xorb
sti
mov
pop
push
and
enter
mov
inc
pop
outsb
cmp
xchg
setnp
movsl
cmp
cmp
mov
jb
jns
jae
jge
ja
jns
sbb
addr16
lea
fxch
je
pop
rorb
stc
in
push
mov
xor
push
push
xor
add
fcompl
xor
mov
add
sbb
cld
sub
fisttpl
cmp
jecxz
out
xlat
xchg
aam
test
and
outsb
sub
dec
pop
test
flds
addr16
mov
fucomip
sub
sbbl
inc
and
mov
frstor
cmpsl
mov
outsl
push
popf
outsb
lods
xor
xor
cmc
xchg
push
adc
mov
movsb
dec
int3
mov
out
cmpsb
push
insb
adc
in
ds
or
jae
dec
loopne
add
xchg
mov
xor
fsubrl
sbb
inc
int3
xchg
sbb
and
rcll
scas
dec
sbb
mov
stos
sub
aas
jle
push
lods
add
push
xchg
jmp
cwtl
inc
ljmp
stc
pop
test
in
lea
mov
jge
mov
mov
mov
cli
xlat
jnp
xchg
pusha
mov
push
xor
and
mov
pop
fdiv
fstl
mov
adc
mov
or
lahf
imul
icebp
neg
mov
inc
sub
cmp
lds
and
xchg
fs
in
icebp
jae
movsb
jbe
xchg
aaa
add
leave
les
lret
je
and
adc
arpl
jno
popf
mov
xchg
lods
andl
inc
cmp
lahf
adc
mov
aad
js
push
fucomp
std
gs
add
inc
sub
in
adc
call
mov
jge
xor
ja
cli
cli
leave
test
sahf
or
mov
adc
mov
call
push
cmp
xorl
sub
rorl
xchg
pop
lea
nop
mov
mov
cmp
pusha
pop
inc
cmp
xor
push
scas
pop
scas
cmp
xchg
imul
mov
stc
notl
add
repz
xchg
jg
sbb
xchg
jnp
mov
mov
movsl
push
pusha
mov
mov
ja
arpl
data16
mov
je
shlb
pmulhw
lock
rcll
add
cmp
insb
addr16
dec
mov
jno
fcompl
pop
xchg
pop
clc
cltd
cmp
neg
adc
shll
popf
scas
or
push
enter
mov
vrcpps
sti
adc
inc
les
xor
mov
and
lret
out
mov
ret
test
mov
movsl
lea
shll
pop
jmp
scas
xchg
outsl
insl
mov
and
call
out
out
adc
xor
test
xchg
xchg
sbb
xlat
or
pusha
leave
outsl
notl
aad
cmp
push
stos
adc
push
mov
ret
push
pop
movsl
adc
mov
lds
repnz
loope
aas
outsl
out
xchg
sub
adc
rorl
call
xor
minps
fists
dec
cs
cs
jb
jo
sbb
mov
sub
bound
loop
stos
stos
enter
outsb
push
sbbb
push
imul
push
sub
lds
out
inc
push
mov
fs
lahf
test
mov
js
dec
out
jecxz
out
mov
pop
mov
cmpsb
mov
gs
add
insl
xor
cmp
hlt
mov
sbb
testb
xchg
xor
pop
hlt
in
and
xor
mov
adc
lea
ret
mov
fildll
sub
cmp
pop
lock
mov
sub
mov
mov
dec
pop
std
or
popf
lds
sahf
jmp
ret
add
in
or
inc
js
leave
and
loope
test
jp
js
imul
adc
addr16
adc
insl
mov
lock
pop
pusha
mov
mov
lds
add
sbb
es
xchg
add
xchg
adc
or
cmp
add
fsubrl
xor
mov
pop
adc
add
mov
lret
cli
or
lods
sti
gs
add
ja
lds
jnp
sub
scas
inc
mov
sub
fs
shrl
and
popa
ljmp
xlat
dec
dec
out
lods
cmc
sbb
test
imul
xchg
outsl
adc
sub
adc
nop
enter
push
incl
in
mov
cmp
cmp
xor
fdivrl
xchg
mov
imul
pop
ds
scas
and
xor
call
stc
lret
jp
jle
pop
scas
jmp
lret
lret
inc
inc
cmp
push
inc
cmp
fbstp
push
ret
pop
mov
or
mov
xchg
jno
addr16
dec
pop
xchg
jb
mov
jmp
inc
sub
inc
cld
pop
xchg
je
outsl
in
fisubs
dec
xchg
push
and
arpl
jno
sub
pop
lret
out
push
mov
add
jae
cmpsb
stc
cmc
inc
int3
rcrb
lods
vpmulhuw
loope
cli
xchg
dec
mov
add
mov
push
sub
popf
imul
gs
push
fisubrs
mov
dec
mov
ljmp
pop
dec
imull
ljmp
xchg
and
mov
jp
in
mov
pop
sti
ja
pop
bound
cmp
ret
or
mov
icebp
sahf
out
test
dec
les
fs
pop
xor
adc
bound
inc
push
dec
into
ds
dec
arpl
dec
pop
clc
xor
cmp
dec
sahf
dec
lods
and
mov
xchg
sub
stc
mov
adc
mov
adc
arpl
sti
mov
jbe
fisubrl
inc
mov
mov
pop
rcl
test
sahf
adc
sarb
nop
jecxz
or
mov
ja
or
inc
jae
sahf
pop
or
inc
xchg
out
adc
int3
mov
addb
inc
imul
cmp
xor
or
adc
mov
xchg
in
ret
xchg
fwait
scas
xorl
jb
add
in
lret
pop
xchg
ljmp
xchg
divb
jno
dec
out
lahf
sbb
sbb
cld
sarl
stc
mov
outsl
out
and
adc
test
ss
inc
into
shlb
rorb
divl
outsl
and
mov
in
bnd
shlb
mov
into
mov
gs
sahf
jl
jno
mov
cmpsl
js
js
cmpsl
test
mov
adcl
lcall
mov
test
es
mov
mov
shl
adc
inc
test
fucomip
das
imul
and
sbb
xchg
cwtl
icebp
jb
xchg
cmp
out
insl
cmp
inc
sbb
mov
imul
movsl
mov
lea
and
js
adc
mov
xchg
cli
enter
xor
in
lods
or
enter
or
ljmp
loope
cmc
outsl
sbb
adc
lods
fbstp
std
shl
cmpsb
mov
xchg
arpl
and
lea
outsl
in
sti
mov
cld
mov
lods
cmp
addl
jp
outsb
ss
cmp
sahf
jo
pusha
adc
push
or
ja
dec
jne
mov
push
cmp
in
lahf
mov
fucomp
add
xchg
sbb
or
cltd
jae
repnz
mov
dec
push
adc
push
pop
mov
std
adc
inc
and
in
fdivl
clc
mov
add
fcom
adc
int
cmc
jo
sbb
aaa
nop
xadd
loope
nop
pop
inc
sub
test
pop
cmp
push
gs
add
push
mov
aaa
mov
in
push
mov
std
and
cmpsb
xchg
fxch
pop
jmp
jmp
inc
cmp
xorb
sarl
movsb
into
out
popf
scas
push
dec
loop
push
dec
ret
pop
ds
rcl
xchg
fmuls
fdiv
add
push
mov
push
jmp
adc
lcall
ret
push
jp
stc
addb
in
cwtl
mov
test
fwait
mov
add
lret
movsl
inc
xchg
cmpsb
push
jnp
dec
insb
fisttpll
mov
push
or
xchg
call
mov
test
cmp
pusha
push
aas
mov
mov
repnz
jp
jbe
mov
sbb
cmp
cmc
mov
add
adc
adc
cmp
pop
or
jb
je
dec
pop
jb
lret
js
shrl
adc
dec
dec
or
movhlps
stos
pop
jl
mov
push
jecxz
sbb
cmp
data16
pop
and
outsb
inc
lret
fiaddl
loopne
inc
int3
xchg
mov
in
dec
outsb
out
mov
out
xchg
xor
cmp
sub
xchg
cmc
push
std
lds
and
add
lds
rclb
xchg
jg
pushf
cmc
pusha
hlt
push
insb
pop
mov
and
testb
mov
or
add
cld
stc
movsb
inc
dec
sahf
jbe
jp
out
xchg
idivb
repz
fimuls
divl
and
fildll
mull
dec
dec
mov
adc
lods
mov
push
lcall
movsl
sti
fs
add
cmp
mov
mov
adc
int3
add
and
push
pop
push
inc
stos
jns
fiaddl
inc
xlat
or
mov
pop
and
cmp
lods
sbb
mov
movsl
lret
jmp
cmpsb
push
pop
dec
sti
xchg
xchg
rcrb
dec
loopne
pop
and
repnz
rol
lds
out
push
or
cmp
inc
nop
push
push
push
ret
mov
mov
popf
sbb
push
jo
sbb
jae
adc
sbb
sbb
shrl
mov
cmp
ret
pop
and
insl
and
sub
mov
push
ds
cmpsl
adc
mov
or
xlat
ljmp
mov
idivl
push
fidivl
pop
arpl
shrl
ret
insl
xchg
mov
or
daa
js
imul
int3
dec
and
mov
es
dec
jno
mov
and
push
adc
int3
jecxz
cmp
hlt
stc
mov
jmp
mov
fsts
mov
jp
and
dec
mov
mov
std
fucom
mov
xchg
push
jne
push
pop
cs
cmp
dec
cmp
cmp
xor
lods
cmp
xor
adc
add
test
fsubrs
adc
scas
mov
sbb
pop
jp
jg
stos
sub
xchg
jne
jae
push
loop
imul
pop
or
push
jge
or
xchg
sar
mov
cmp
das
mov
in
popa
pop
lahf
enter
dec
xchg
jge
dec
xor
mov
adc
mov
negl
push
mov
mov
flds
mov
std
pop
inc
xor
xchg
xchg
mov
inc
dec
aam
test
add
shll
in
call
pop
inc
inc
shll
xchg
pop
or
enter
shlb
aas
cld
pop
out
jle
sbbl
inc
push
sbb
push
repz
dec
in
dec
inc
or
jp
das
xchg
nop
sahf
loopne
pop
pop
sub
dec
and
or
sbb
inc
repz
push
push
mov
push
insb
fstpt
or
xchg
test
std
dec
test
leave
xchg
stos
ljmp
sub
add
pop
dec
and
jne
cs
or
push
sub
push
loop
in
mov
sbb
dec
inc
cmpsl
aas
inc
xor
int
jmp
ss
test
mov
sbb
adc
out
lock
inc
repnz
pop
hlt
ds
fsubl
lret
pop
sbb
mov
sbb
cmp
es
loop
std
xchg
xor
dec
test
push
add
add
xchg
test
dec
sbb
bound
imul
fldl
mov
sub
xchg
xor
or
rorb
repz
cld
push
out
out
push
cli
jmp
je
lahf
sub
negl
in
push
jb
sti
aas
or
rorl
stos
int3
imul
in
push
mov
cmp
sahf
outsb
sti
mov
enter
inc
data16
loopne
mov
psllq
std
and
cmpsb
xlat
dec
imul
mov
pop
sbb
add
sbb
shll
cli
fstpt
xchg
push
add
stos
mull
ret
incb
jbe
test
in
les
out
and
fwait
jecxz
stc
nop
and
sbb
add
in
movsb
insb
ljmp
sbb
sub
cmp
lds
repz
sub
mov
dec
sti
cmc
test
mov
popa
adc
xor
call
mov
xchg
jge
sub
mov
ljmp
push
xchg
addb
fcoml
sarl
inc
dec
jl
bound
jne
mov
sbb
inc
repnz
mov
inc
cmpsb
mov
arpl
and
out
sbb
shlb
jp
dec
and
adc
mov
push
xchg
sub
mov
shlb
xor
sub
sbb
pop
cwtl
sub
mov
cmp
cmp
std
cmpsl
sub
mov
scas
sbb
leave
xchg
adcl
gs
pop
pop
inc
cmc
leave
pop
mov
cs
pusha
fmulp
add
push
outsl
in
icebp
mov
jge
bound
push
loop
outsl
lcall
hlt
inc
sbb
xchg
sub
or
pop
mov
pop
rcrb
add
add
pop
jnp
cmp
adc
add
xor
sarb
mov
lods
aam
inc
int
out
mov
jmp
imul
fstpl
test
adcl
mov
inc
xor
dec
out
fstps
and
jae
mov
mov
mov
mov
xor
jl
and
nop
mov
push
cmc
icebp
stos
icebp
ss
loop
adc
stos
movsl
lret
adc
push
out
pop
mov
mov
lret
dec
adc
lock
mov
sbb
test
mov
mov
push
jne
shrb
addr16
inc
popa
out
outsl
dec
hlt
mov
decl
pop
aam
out
int
dec
mov
mov
xor
push
out
in
mov
sub
addr16
cwtl
hlt
sbb
aaa
jmp
mov
cmpsb
adc
add
jge,pn
xor
movq
rcll
test
leave
shrb
mov
mov
hlt
dec
sti
add
fsubl
xlat
icebp
pushw
xchg
pusha
outsb
push
fists
pop
sbb
mov
inc
jmp
mov
inc
rorl
jo
and
jo
je
cmp
mov
mov
andl
rorb
add
ss
orb
push
or
dec
scas
mov
push
in
push
into
std
cmp
add
jp
inc
mov
jne
add
sub
pop
cli
sub
mov
pop
mov
sbb
fistpll
add
ljmp
outsb
mov
loope
push
fs
mov
jge
jbe
or
outsb
xchg
lock
int3
mov
pop
or
cmp
fidivrs
jl
push
sub
sti
cmpsl
data16
mov
loop
sbb
pop
sarl
lods
xchg
jmp
bound
cmp
xor
push
iret
aam
imul
fincstp
cwtl
aad
test
lret
cs
cltd
stos
push
nop
dec
cmp
cmp
cmp
and
xor
imul
xor
iret
in
mov
icebp
adc
pop
inc
aad
mov
pop
loopne
andb
xchg
mov
jo
imul
outsl
xor
dec
jl
sub
mov
loopne
sarl
jp
xor
or
ret
mov
mov
push
mov
pop
mov
dec
shrl
mov
cmc
xchg
push
add
pushf
repz
mov
jle
adc
xchg
mov
int
shll
push
std
rolb
mov
repz
int3
push
inc
adc
dec
jg
pop
pop
add
rcr
mov
mov
xor
cmpsb
outsl
xorl
push
mov
lds
adc
stc
adc
neg
dec
xlat
shll
jae
loopne
flds
mov
mov
popf
mov
icebp
aaa
push
loop
test
add
xchg
insl
mov
pop
dec
lcall
lret
popf
add
xor
adcl
lock
data16
pop
cli
mov
imul
xor
icebp
jbe
insl
and
loopne
xor
leave
and
movb
cmc
fcomp
popa
jae
iret
imul
loope
hlt
test
cltd
add
in
pusha
out
mov
sbb
imul
mov
sahf
sub
test
push
mov
push
and
inc
into
or
push
mov
mov
in
mov
subl
sub
cmpsl
ret
test
ja
repz
popa
cmc
adc
int
divl
lods
clc
leave
es
xor
rcrl
mov
mov
popl
jbe
sbb
mov
mov
xchg
inc
push
cmc
dec
sti
dec
or
and
adc
bound
cs
sbb
inc
cltd
mov
sub
mov
fwait
xor
push
ja
divl
or
inc
scas
xchg
int3
pop
mov
out
sbb
in
aam
cli
push
rcrl
and
add
fnstcw
imul
or
or
jns
sahf
jg
add
das
out
ja
ljmp
mov
scas
xchg
in
or
and
push
sahf
and
bound
pop
repnz
sbb
sub
mov
mov
xor
cmpsb
xchg
shrb
rcrl
sbb
ret
lea
cli
mov
mov
insb
pop
pop
add
movsl
adc
push
fistpl
push
clc
push
out
and
shll
lods
and
cwtl
sbb
loop
gs
jge
and
adc
out
xchg
adc
aaa
ljmp
push
in
sub
addl
cmp
push
inc
add
sub
push
dec
lods
sbb
fbstp
adc
push
sbb
leave
pusha
rcrb
push
dec
ret
addr16
mov
jge
flds
push
push
ljmp
out
and
sbb
aam
xchg
stos
arpl
in
sub
inc
or
or
js
or
xchg
cmp
sub
fstl
dec
jo
push
inc
add
pop
jne
cltd
sti
push
cmp
cs
inc
jnp
arpl
adc
and
mov
or
pop
les
mov
bound
das
and
mov
mov
jne
sub
pop
adcl
mov
daa
mov
sub
sub
add
jne
nop
jmp
sahf
push
pop
fisttpll
xor
incb
xlat
rolb
or
sahf
je
in
lea
adc
push
pop
adc
mov
mov
repnz
js
out
fstl
jns
lret
fidivs
and
adc
adc
mov
lahf
xchg
xlat
dec
icebp
add
cmp
lret
push
pop
mov
xor
mov
xor
repz
in
ret
in
inc
stc
fistpl
lods
dec
and
fwait
pop
test
cltd
cli
push
xchg
test
les
pop
inc
into
jge
sarl
sub
xor
mov
cmp
rolb
insb
xchg
mov
cmp
dec
mov
push
dec
in
data16
mov
jae
dec
inc
ret
aam
lock
sub
sub
lods
test
cmp
sarb
cmp
push
out
inc
jo
lds
insb
rorb
sbb
testl
pop
adc
arpl
add
sti
fimuls
sbb
ljmp
fldt
movl
es
xor
pop
gs
mov
add
dec
in
test
xchg
mov
cmp
ret
jb
ret
sbb
imul
pop
jmp
ljmp
insl
xlat
adc
pop
mov
sbb
cmp
out
add
add
dec
adc
int
js
jg
js
mov
sub
imul
cs
div
mov
outsl
das
nop
pop
loopne
lock
outsl
rcrb
add
jo
inc
out
push
pop
mov
das
nop
pop
loopne
lock
outsl
rcrb
add
jo
inc
out
push
pop
mov
das
nop
fnstsw
dec
lock
out
rcrb
add
jo
inc
out
push
pop
mov
das
nop
pop
loopne
lock
outsl
rcrb
add
mov
mov
mov
adc
dec
sbb
sub
js
push
sub
jp
push
pop
call
lret
sub
js
push
sub
jp
push
pop
call
stos
dec
incb
mov
mov
push
lret
mov
jne
pop
cwtl
mov
adc
and
mov
sarl
sub
adc
dec
jl
cmc
repnz
dec
xchg
repz
push
or
push
es
mov
lods
pop
cmpsl
pop
push
jns
xchg
fwait
pusha
bound
cmp
and
neg
mov
sbb
push
pop
inc
ja
sti
shrl
and
mov
fdivrs
push
aad
mov
popa
sbb
mov
push
fisubl
and
cld
aad
lahf
nop
cmc
arpl
jg
dec
jmp
std
sub
dec
aad
dec
push
cwtl
and
mov
jl
repz
or
pop
das
arpl
rorb
sub
cmp
or
jp
push
pop
call
stos
cmp
dec
ljmp
loope
fnsave
arpl
test
ficomps
inc
int3
cmp
fdivrs
fwait
cmp
sub
sbb
js
xor
jge
or
jns
insl
in
cltd
sbb
or
in
jns
jb
outsl
fdivrs
push
pop
call
stos
cmp
dec
ljmp
mov
mov
jp
push
pop
call
stos
cmp
dec
ljmp
sub
dec
add
cld
mov
jecxz
loope
dec
fimull
movsl
in
mov
ja
jne
mov
jb
mov
and
js
scas
ficompl
pop
push
fwait
mov
adc
ja
cmp
mov
and
outsb
cmpsl
orl
scas
loope
lds
les
push
sbb
push
psubusb
sub
xor
or
enter
outsl
inc
push
out
mov
mov
or
cmp
jo
xchg
fwait
cmpsb
enter
mov
inc
stc
dec
ret
cwtl
fisubrl
push
inc
push
shl
mov
fistpl
mov
inc
cli
xchg
test
cmpb
sub
mov
orb
es
stc
cli
lret
loope
inc
insl
aam
sbb
jnp
xchg
add
fisttpll
popf
fsubrs
ljmp
push
push
and
mov
push
xchg
call
lock
sbb
std
icebp
es
mov
incl
sbb
stc
leave
xor
jb
dec
mov
cmp
push
insl
inc
xchg
fs
cmc
mov
shlb
fnstenv
xor
pushaw
xor
xor
pop
daa
mov
outsb
fisubl
jae
sub
mov
adc
dec
shlb
lods
cmp
xor
xor
in
mov
xor
xchg
ffreep
push
xor
out
push
mov
pop
aaa
mov
and
xor
mov
shlb
xorl
ljmp
ss
movsb
mov
add
inc
mov
aad
in
push
inc
push
or
jecxz
imul
inc
jp
xlat
adc
arpl
repnz
ljmp
adc
mov
mov
cwtl
andb
xor
arpl
mov
fucom
sti
faddl
popf
xchg
push
iret
or
mov
mov
fidivl
int3
xchg
fidivl
dec
sbb
sub
push
ret
ljmp
ljmp
xchg
inc
pop
and
mov
push
addr16
movsl
in
fists
lahf
out
clc
xchg
ds
pop
inc
ljmp
out
mov
into
mov
pop
add
ljmp
sahf
add
pop
movsl
insb
jo
cmpsb
jns
pop
adc
push
mov
mov
clc
adc
jne
loope
fs
es
adc
adc
das
sub
inc
and
cs
jg
xor
mov
leave
xor
in
pop
rcll
mov
andb
mov
inc
repnz
mov
andl
int
les
cli
stos
mov
xor
sub
loope
pusha
inc
scas
adc
cmp
jno
es
cmpsl
adc
dec
dec
add
push
adc
test
setnp
negb
daa
xchg
fiaddl
fistpl
cmpsb
addr16
ds
faddl
mov
lahf
stc
mov
popa
jmp
ret
imul
in
sub
xor
adc
mull
jne
aad
js
xor
or
xor
out
jae
xor
cli
lcall
adc
sbb
sbb
repz
push
add
imul
roll
test
outsl
and
sbb
cltd
adc
xchg
push
cmp
cs
pop
imul
mov
faddl
fs
inc
inc
and
pusha
in
in
testb
fsub
fisubrl
cwtl
pusha
lret
out
or
or
cwtl
outsb
inc
mov
rorl
test
je
rolb
cmp
xchg
add
sub
inc
push
inc
loopne
mov
jmp
add
das
pop
loopne
repz
shl
pop
and
mov
sbb
pop
cmp
sub
sets
lahf
testl
push
div
push
push
adc
mov
cs
scas
aam
or
inc
mov
arpl
inc
mov
xor
sbb
sbb
cwtl
xchg
sbb
adc
push
add
mov
lret
mov
cmc
repnz
daa
xor
or
or
shll
nop
jg
lahf
xchg
out
lret
push
push
or
mov
inc
add
mov
jge
add
xor
ret
inc
mov
and
cmc
sub
dec
ss
movd
inc
repnz
xchg
mov
push
lret
mov
cmpsl
pusha
jge
loopne
mov
pop
add
pusha
paddw
cmc
xchg
iret
repnz
jae
in
loopne
add
fisttpll
sbbb
mov
aad
inc
test
pop
push
daa
jecxz
addl
test
cmovns
loope
push
movsl
dec
pop
test
xchg
dec
add
jl
inc
fadds
mov
pop
mov
xchg
inc
sti
push
inc
sub
ret
sub
jns
or
aam
inc
push
stos
in
pop
mov
inc
pop
addr16
jmp
fdivrl
stos
push
lcall
xchg
xlat
dec
movl
xchg
jg
mov
sub
rcl
pop
pop
push
cmp
mov
ret
push
xchg
inc
jmp
sub
cltd
inc
mov
insl
jne
ucomiss
popa
mov
shrl
aam
or
mov
jns
ss
into
std
out
jle
std
insb
inc
lret
ret
mov
push
sub
notl
xchg
and
inc
mov
ljmp
xchg
jne
cmpsb
sbb
jle
mov
mov
out
insb
mov
fsubl
getsec
or
adc
xchg
sarl
shll
call
mov
push
push
mov
jge
jo
cld
cmp
mov
mov
movsl
out
loope
and
inc
mov
les
sub
movsl
filds
scas
mov
xchg
and
jle
inc
or
lock
ss
xchg
out
add
cwtl
test
outsb
xchg
add
cmp
insl
pop
sub
jo
mov
push
mulb
ret
and
cmp
in
pop
push
bound
adcl
insl
cmpsb
xor
lcall
sbb
bound
and
lock
push
cmp
lret
sbb
mov
loope
fadd
lcall
sub
inc
push
ds
jns
sarb
jmp
xchg
xchg
or
fsubr
enter
mov
push
outsb
or
mul
fisubrl
js
cli
xor
dec
daa
andl
clc
and
pop
inc
in
pop
clc
pusha
popl
arpl
cmpsl
rcll
lret
jg
aaa
jge
shll
fiaddl
insl
andb
xchg
sbb
push
std
sub
mov
mov
mov
push
pop
mov
jg
shlb
fcmovne
ss
mov
psadbw
cmp
popa
cmp
cwtl
andb
enter
fdivl
and
mov
mov
mov
in
out
popa
xor
gs
lahf
repz
out
mov
mov
insb
lcall
inc
xorb
mov
xchg
xor
dec
arpl
xchg
scas
mov
mov
push
mov
jg
or
mov
jle
popl
or
xor
mov
aad
pop
push
out
lock
sti
cmp
jle
pop
push
push
mov
xor
jp
jl
fbld
lret
ljmp
data16
int3
add
fadds
mov
negb
pop
add
iret
inc
jno
jns
fldcw
out
pop
popa
orl
and
aas
xor
lock
aam
into
inc
aas
jo
mov
rclb
es
ret
bsr
call
push
cmpsb
pushl
sbb
mov
imul
pusha
aad
je
das
xor
js
jmp
and
into
jmp
idivb
inc
add
lods
mov
xchg
into
and
loope
jp
xor
inc
test
pop
cmp
cwtl
hlt
loope
xchg
xchg
jmp
mov
movsb
inc
jle
jmp
sub
data16
or
lock
repz
push
add
inc
leave
push
out
sbb
xchg
sub
xchg
xlat
mov
test
mov
xor
fsubp
sbb
or
adc
arpl
mov
inc
fs
pop
out
sarb
repnz
mov
pop
enter
cmp
mov
lods
mov
test
orb
mulb
aad
mov
test
not
and
lds
inc
fs
outsl
push
nop
inc
testl
scas
loope
rorb
out
xchg
sbb
add
arpl
dec
cld
sub
cli
leave
popf
std
aaa
inc
jge
jg
outsl
arpl
popf
cmp
or
add
and
mov
sbb
add
in
decb
push
fldln2
aad
dec
pop
in
pop
iret
outsb
fwait
xchg
inc
add
add
mov
jge
mov
cltd
dec
in
mov
xor
mov
mov
mov
les
inc
cmp
rep
mov
andb
insl
mov
and
dec
aaa
test
or
push
cli
mov
dec
pusha
and
xchg
jbe
out
sahf
sarl
xor
test
and
cld
pop
sti
imull
xchg
ds
mov
out
cmp
sbb
mov
mov
adc
jmp
lods
shl
push
push
add
jb
in
xchg
data16
xor
jns
dec
imul
hlt
mov
xchg
jb
cmp
loopne
pop
scas
movsb
dec
scas
cmpb
fs
mov
int
or
jns
mov
pop
xor
sub
mov
mov
fnsave
lret
dec
bound
imul
fisubl
je
mov
pop
scas
mov
hlt
icebp
mov
mov
lcall
sub
xchg
lods
enter
daa
aad
push
pop
rorb
lret
call
imul
icebp
mov
sbb
adc
dec
mov
cmp
push
aad
pop
cmc
cmp
push
sub
cmpsb
cmp
and
loope
xor
notb
inc
sub
cmpsb
mov
mov
mov
and
xorb
sahf
lods
push
jb
int3
les
push
mov
push
or
push
bound
insb
popf
int3
mov
movl
shr
jae
pop
jnp
shr
adc
add
sub
inc
mov
adc
sbb
shrl
add
loop
data16
shll
and
shl
dec
jecxz
adc
cmp
mov
stos
lea
cmp
rorl
aad
push
fnstenv
rclb
addps
mov
dec
push
push
fdivrs
sbb
inc
test
int
push
mov
jbe
xchg
test
adc
dec
pop
and
mov
outsb
fisubl
repnz
aam
mov
lret
sahf
in
cmp
cwtl
push
mov
icebp
stos
test
push
outsl
pop
mov
mov
scas
lock
pop
jbe
sbb
mov
mov
and
test
out
nop
jg
sub
outsb
lret
lret
push
repz
dec
sub
xor
loope
aaa
push
ret
loopne
pop
and
adc
aam
mov
push
mov
out
mov
lods
popf
xor
out
cltd
dec
cmp
sub
stos
leave
repnz
enter
cs
lret
add
sbb
out
mov
mov
popa
pop
and
xchg
push
insl
fldl
cmp
mov
jle
cmp
aaa
inc
pop
lds
jge
lods
test
movsb
adc
test
ljmp
fucomp
je
push
adc
test
push
fcomp
fsubrl
cmc
and
in
jnp
pop
push
mov
lcall
inc
in
xchg
cltd
daa
mov
lret
mov
or
aad
xchg
clc
scas
cmp
es
addb
cmpsl
sbb
test
and
dec
or
xchg
lods
or
inc
or
mov
repz
mov
sub
jle
into
mov
into
repnz
loop
sahf
and
jb
add
xor
bound
xchg
pop
call
xor
inc
mov
sbb
mov
les
bound
push
pop
or
pop
adc
lea
push
aaa
xchg
mov
or
and
fmuls
in
orl
iret
je
push
sbb
imul
push
jg
js
repz
jl
aaa
pop
adc
mov
popf
adc
and
pusha
loope
jnp
xchg
xor
ss
out
adc
mov
aaa
stos
dec
repz
inc
lcall
icebp
jg
dec
sub
pop
mov
icebp
mov
jae
stos
lods
xor
sub
inc
ljmp
and
and
dec
shrb
and
cwtl
inc
xor
dec
ljmp
in
dec
std
orb
jnp
push
fwait
decl
pushf
mov
clc
mov
xor
adc
xchg
or
cld
push
lods
fwait
push
idivl
mov
stos
sbb
das
mov
sbb
push
cmp
pusha
mov
push
jne
loop
inc
mov
inc
loopne
mov
cmp
in
clc
adc
divl
stos
les
xchg
mov
iret
add
pop
sahf
cmpsb
and
clc
test
sbb
nop
mov
std
sub
cmpsl
push
jns
insb
rol
add
adc
call
ret
xchg
push
push
inc
stos
rcrl
xor
je
shrb
push
out
inc
rcl
dec
mov
out
and
data16
rolb
cmpsl
jmp
jge
jae
cli
xor
or
mov
or
and
or
pop
pop
icebp
cwtl
sbb
dec
movsl
lcall
adc
jnp
jns
test
and
repnz
mov
push
cmp
ljmp
pop
test
fsts
out
inc
xor
lock
out
loope
jp
sti
xchg
ret
pusha
xchg
adc
rcrl
add
xor
shl
jne
icebp
or
jns
icebp
and
clc
loop
je
lret
or
mov
fisubl
bound
pushf
sub
add
xor
repz
xor
icebp
pop
sub
add
test
fistl
cmp
xor
add
add
stos
push
inc
adc
popa
outsl
push
lcall
imul
loopne
cmp
mov
pop
popa
inc
cld
stos
add
mul
xchg
cltd
pusha
in
dec
adc
fwait
mov
push
xchg
add
jmp
pop
sub
mov
mov
addb
orl
sbb
jb
lret
push
push
inc
aad
push
or
mov
xorb
int
mov
adc
lcall
inc
insl
mov
insl
fdivl
repnz
push
mov
push
enter
lods
adc
jnp
jae
daa
pushf
dec
out
fidivrs
sub
push
pop
push
sub
ja
pop
call
sbb
xor
test
fisttpl
sub
add
cwtl
outsb
movsl
test
iret
or
jo
cmp
sub
xor
iret
adc
pop
daa
push
movsb
rorl
mov
pop
add
test
loope
jp
lods
outsl
mov
repnz
add
fstpl
and
cmpsl
and
sti
mov
sbb
xor
jl
stc
in
shrl
ds
add
or
or
mov
in
aad
jmp
mov
pop
push
pop
into
jp
and
add
mov
es
xchg
es
in
aaa
loopne
xchg
xchg
lcall
mov
into
test
push
push
mov
sbb
movsb
insb
ficoml
pop
scas
out
add
push
jmp
pop
xchg
das
out
sub
dec
popa
mov
icebp
and
cmp
mov
insl
movsb
stc
test
pop
jbe
je
mov
sub
shr
xchg
ja
outsl
jl
push
dec
cwtl
push
xchg
add
lret
sbb
stos
mov
mov
aaa
popf
imul
mov
js
fnstcw
les
add
lcall
int3
lea
sbb
stos
mov
mov
int3
inc
fadds
push
movsl
repnz
or
pop
icebp
jg
inc
mov
or
or
sub
fisttpll
add
invd
jg
dec
cltd
daa
xor
xchg
xchg
rcrl
and
in
dec
fidivrs
fnsetpm(287
lods
jmp
or
adc
jle
pop
and
sub
test
pop
imul
inc
fmulp
xor
int3
sarb
loop
testb
xor
popa
jns
pop
push
movsl
stos
or
ds
aaa
test
int3
in
pop
sub
mov
mov
mov
cmpsl
jmp
es
dec
cmpsb
sti
adc
ror
in
mov
imull
ja
test
pop
decb
scas
sub
mov
aam
jecxz
or
es
dec
inc
pop
xorb
mov
adc
call
cmp
xlat
jp
add
fcoms
push
inc
movsl
pop
loopne
test
movb
mov
jle
lds
cli
lret
and
xchg
pop
fucom
daa
mov
imul
loopne
in
faddl
enter
fimuls
outsl
int
pop
sbb
mov
shlb
pusha
lock
lods
xchg
into
inc
in
dec
lods
mov
in
ja
xor
lods
jl
cwtl
js
out
stos
sbbb
push
and
inc
adc
xchg
sbb
and
shlb
mov
pusha
pop
cmc
mov
fdivr
sahf
jne
stos
shrl
in
testb
xchg
push
inc
dec
std
test
add
loop
inc
gs
std
adc
leave
fs
push
lds
adc
lcall
addr16
mov
push
test
xchg
xlat
dec
insb
sbb
clc
and
dec
pop
mov
scas
xchg
push
lret
and
popa
sub
or
jecxz
mov
push
inc
pop
mov
repnz
jle
add
push
push
mov
xchg
jae
adc
lcall
pop
dec
aam
popf
ja
mov
jg
icebp
pop
sti
mov
mov
and
fdivrl
mov
mov
pushf
dec
fcompl
fnstenv
cmp
orb
dec
repnz
int3
cmp
leave
add
addr16
iret
fadd
leave
enter
jbe
fiadds
out
and
inc
sbb
pop
dec
jb
in
fs
jmp
ror
ds
pop
addr16
andb
hlt
js
sbb
cli
mov
imul
cmc
sbb
inc
fs
pop
push
mov
cmp
fsubrl
ja
loope
mov
out
pop
pop
mov
leave
sarl
call
jmp
imul
jle
cmp
fsubl
dec
fwait
lea
aas
and
mov
lods
out
pop
add
arpl
mov
fs
pop
push
or
cmpsb
insl
jo
cmp
cmp
test
mov
test
out
insl
pop
in
mov
push
pop
rorb
stc
sbb
pop
aaa
iret
cmpsb
out
sbb
pushf
adc
or
iret
dec
neg
jle
inc
push
clc
int3
es
lods
xchg
stos
pop
ja
insb
std
pop
dec
mov
les
jg
test
xchg
test
enter
ja
idiv
add
mov
arpl
fwait
pop
cmpsb
adc
mov
addl
and
fldcw
fists
je
stos
sbb
jg
sbb
inc
int
fildl
ror
mov
mov
pop
sbb
repnz
inc
jecxz
add
sbb
leave
dec
inc
sahf
outsl
dec
jg
popf
push
dec
mov
jecxz
addr16
sti
out
ds
mov
push
call
bound
pop
imul
and
add
notb
push
jge
dec
add
mov
xchg
sbb
shrb
inc
sarl
xor
gs
int
sbb
repz
xlat
outsl
cwtl
cmc
or
jge
cmp
dec
call
rorb
sub
stos
lods
xchg
cmp
inc
jp
mov
dec
les
mov
mov
jg
cmp
cld
mov
and
outsl
enter
popa
push
jge
push
aaa
addr16
fwait
cmpsl
push
mov
inc
adc
cmp
scas
arpl
leave
mov
pop
pop
add
std
popf
cmp
shr
ljmp
lock
bound
loope
sbb
dec
insb
imul
lret
pop
mov
add
lock
xchg
xor
test
mov
ror
pop
dec
bound
out
and
fistps
xchg
into
outsb
jns
prefetch
jae
or
leave
mov
popf
sbbl
mov
pushf
sbbb
cwtl
xorl
mov
fwait
sbbb
xchg
adc
sahf
ss
adc
dec
shr
adc
out
out
std
in
andl
adc
or
icebp
adc
sub
sbb
push
pop
call
stos
cmp
dec
ljmp
mov
mov
jp
push
pop
call
stos
cmp
dec
ljmp
mov
fdivrs
ljmp
or
pop
cli
dec
ljmp
mov
mov
jp
push
pop
call
add
jb
adc
push
mov
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
inc
adc
xor
sbb
cmp
and
rcll
loope
adc
xor
push
adc
and
xor
aam
aam
in
cli
mov
movsb
icebp
mov
pop
adc
jl
insb
and
jno
popa
fstl
mov
test
jecxz
sub
pop
add
push
jno
inc
in
repz
lods
test
sbb
enter
adc
mov
in
jle
movsb
or
aam
test
movsb
icebp
dec
mov
adc
daa
pop
nop
shrl
sub
call
push
pop
inc
push
inc
and
sti
repnz
lahf
dec
outsb
aad
shll
xchg
aas
das
sti
mov
adc
fsts
popa
xchg
lods
sti
imul
adc
in
add
jl
xchg
rcrl
pop
lods
xchg
mov
and
mov
push
push
mov
jns
and
sbbb
dec
movsb
mov
rol
xchg
movsb
icebp
mov
lea
dec
add
and
push
add
and
sub
cmp
rorl
sub
add
ja
jb
imul
mov
aad
xchg
icebp
movsb
mov
scas
sub
or
push
sbb
xchg
mov
in
mov
test
rorb
or
inc
dec
jg
inc
and
xor
les
hlt
mov
movsb
icebp
mov
inc
adc
xor
push
adc
and
xor
les
hlt
mov
movsb
icebp
mov
inc
adc
fcmovnu
pop
jecxz
and
ljmp
bound
push
cmp
lock
cmp
gs
or
mov
sbb
sbbl
aam
mov
outsl
leave
sbb
scas
lahf
or
fimuls
into
out
mov
xchg
hlt
push
test
xchg
add
mov
lds
leave
pop
and
rorl
inc
jp
fiadds
dec
mov
or
pop
test
cld
outsl
into
mov
sub
inc
jno
sti
push
jmp
stos
cwtl
jb
cmc
fnstsw
aaa
or
or
jne
xchg
pop
sub
mov
sbbb
pushf
stos
cmc
jno
push
mov
pop
push
sub
jp
jbe
shll
push
or
cld
cwtl
movsb
xor
out
lods
dec
test
jmp
fs
cmp
mov
subl
stc
sbb
push
lret
in
xchg
adc
lahf
outsb
notl
xchg
xchg
xchg
ljmp
gs
lods
pop
cmp
rcrb
loopne
dec
jecxz
push
mov
or
movsb
testl
or
gs
pusha
add
or
iret
inc
pop
mov
into
mov
xchg
popf
pop
inc
dec
pusha
mov
js
enter
dec
mov
sti
push
mov
mov
mov
scas
jno
dec
adcl
iret
ljmp
dec
jns
pusha
xlat
jp
stos
sub
push
add
jmp
test
push
cmp
stos
lock
xchg
mov
cmp
in
int
cmp
sub
mov
xor
outsl
js
mov
orb
popf
jp
jl
repz
adc
jo
mov
aad
loope
adc
repnz
push
and
jecxz
arpl
shll
out
repnz
test
ror
dec
adc
mov
call
ret
lahf
jg
mov
sbb
repnz
into
add
popf
adc
in
and
xor
pop
js
pop
loop
repz
xchg
inc
popf
dec
fidivrl
xchg
cmpsb
lods
add
jns
mov
add
aaa
push
push
jl
jmp
pushf
xchg
cmpb
mull
mov
push
cwtl
ret
mov
mov
inc
push
push
lods
fstpl
dec
jno
add
dec
xchg
insl
imul
filds
mov
or
pushf
test
ja
lret
adc
iret
lods
mov
inc
mov
stos
mov
fnstsw
insl
mov
xor
sbb
sub
insl
movsb
sub
mov
dec
sub
jno
jecxz
shll
je
mov
fildll
mov
push
enter
pop
frstor
fstl
xor
xor
nop
pop
scas
pop
jns
scas
imul
out
pop
sbb
add
xlat
fwait
test
mov
movsb
xor
or
add
cmpsl
cmc
dec
lcall
leave
inc
into
inc
and
gs
push
lods
pop
or
push
dec
cwtl
scas
and
movsl
popf
add
sbb
ljmp
xor
and
repz
sub
adc
cmp
aas
rorl
mov
ss
sub
push
mov
call
mov
cwtl
xchg
push
sub
push
jmp
scas
lds
ret
push
xor
cmp
mov
pusha
cmp
outsb
shr
xchg
mov
push
jle
stc
es
not
fiaddl
xor
aam
push
in
repnz
insb
and
fwait
xor
adc
cli
aas
mov
std
popa
push
roll
mov
test
xchg
out
and
inc
imul
inc
imul
int
mov
jno
in
jne
mov
imul
aas
or
push
xchg
popa
call
ret
xchg
orl
ret
inc
xchg
push
jle
test
push
pop
mov
add
mov
inc
imul
mov
xchg
xor
imul
mov
call
js
xchg
les
mov
sbb
sbb
push
fwait
cld
aas
push
imul
rol
lret
sbb
xchg
ds
out
aas
and
testl
sub
lods
sbb
lret
cmp
in
mov
adc
pop
mov
in
mov
jecxz
push
out
pop
test
pushf
lret
cli
popf
pushf
cs
xor
outsl
sbb
das
xchg
ss
std
adc
es
jge
mov
insl
sbb
jnp
mov
sbb
les
dec
shlb
xor
sub
jne
mov
fistpll
leave
mov
addr16
or
sbb
xchg
fbstp
cld
pop
xor
es
dec
test
cmp
dec
loopne
in
push
jne
das
stc
pushf
cmpsb
out
or
adc
jae
inc
pop
sub
inc
jg
outsl
push
or
jecxz
xor
loopne
push
scas
cmp
das
xor
inc
jl
ljmp
or
jp
loop
test
outsb
jnp
cmp
je
repnz
xchg
or
mov
jg
sbb
loop
xor
mov
mov
inc
mov
loop
pop
in
xchg
in
adc
cld
stos
push
dec
rclb
xchg
push
fdivs
rcrl
in
xchg
inc
fistpl
or
lock
cmp
jbe
nop
subl
fimull
aam
dec
push
xchg
pop
jmp
cmp
cld
adc
add
sub
mov
or
jnp
push
scas
jle
in
pop
xor
xchg
pop
mov
hlt
cltd
add
in
imul
adc
jmp
fwait
cld
push
jns
or
scas
add
xchg
test
xchg
jb
test
dec
add
jg
cmpsb
adc
mov
and
lock
or
mov
ret
inc
arpl
imul
cmpb
xchg
test
mov
aad
jo
mov
add
or
push
sbb
fnstcw
dec
mov
jae
inc
mov
clc
cmpsl
fnstcw
cmp
cmpsl
subb
bound
arpl
fidivs
scas
push
call
aaa
sbb
push
mov
aam
sahf
and
xor
or
cld
push
add
cmpsb
outsb
int3
xchg
lock
or
pop
xlat
pop
mov
insb
idivl
inc
sbb
push
or
and
cmp
or
dec
test
jmp
insl
xchg
push
sub
shlb
insb
push
aad
mov
sub
mov
enter
pop
inc
xor
push
divps
rorl
or
mov
pop
out
jmp
dec
lock
mov
imul
sbb
push
test
xchg
test
cli
inc
xorb
cmp
add
notb
enter
xor
dec
outsb
loope
mov
pop
jns
ja
inc
loope
iretw
push
lret
dec
mov
push
mov
mov
in
pop
add
not
and
add
es
call
xor
jbe
into
mov
aaa
jo
lds
adcb
scas
in
iret
push
ds
stos
push
and
mov
push
popa
dec
inc
in
and
rcll
push
and
cli
add
pop
sar
rorl
dec
stc
iret
js
cmp
rcll
cmc
addl
sahf
loopne
sub
mov
cmp
stos
ret
sbb
jp
lea
inc
dec
and
push
sub
mov
outsl
xchg
shrl
inc
push
cmp
xchg
out
mull
and
xchg
je
aas
mov
push
ljmp
pop
pop
sub
mov
mov
repz
xor
add
pop
daa
mov
cwtl
mov
push
jb
inc
or
mov
adc
movsl
push
js
jg
and
fcmovne
and
cwtl
or
pushf
in
popa
loop
stc
jle
xorl
jb
sbb
out
sub
rclb
mov
sub
adc
xlat
ja
push
push
jecxz
or
pop
aam
inc
clc
xchg
adc
in
sbb
xor
movsl
pop
xor
icebp
push
sbb
clc
pop
loop
mov
fs
jbe
inc
iret
lret
ss
add
add
pushf
data16
push
sti
pushf
fsubs
mov
pop
jbe
sub
jle
call
es
mov
pushl
imul
inc
fisubrs
jno
je
dec
xor
mov
stos
dec
pop
cmp
scas
stos
push
add
ja
mov
sbb
js
push
testb
sbb
xchg
sahf
jo
aaa
rcll
or
mov
add
cwtl
inc
nop
inc
jg
filds
mov
arpl
inc
in
and
add
out
icebp
in
lret
in
lock
inc
jp
xor
fcoml
dec
cmp
cli
mov
popf
rcrl
repz
xchg
fisttps
mov
add
lods
or
lahf
das
adc
jae
mov
add
sub
add
out
adc
pop
negl
cltd
dec
sub
pop
shl
pop
jne
jmp
xor
pop
mov
push
inc
inc
out
js
cmp
in
or
mov
xchg
insb
les
addr16
mov
mov
lea
mov
sbb
lahf
or
lock
xor
sar
jae
out
orl
inc
mov
sahf
test
pop
js
mov
mov
xchg
push
outsl
sar
aam
into
fists
or
sbb
jecxz
lock
xchg
fwait
popa
lea
stc
movsl
mov
in
shl
dec
nop
andl
or
cmpsb
mov
add
jecxz
mov
repnz
inc
rcrb
xchg
fisubs
jle
js
mov
add
mov
cmp
dec
popa
pop
push
rorb
insl
sbb
xchg
int
andl
out
lods
mov
dec
ja
sbb
stos
push
cmpb
mov
mov
or
jecxz
test
aas
jnp
mov
mov
pop
pushf
fwait
mov
in
cld
and
dec
fdivrs
xor
dec
mov
push
push
cmpb
cmpb
xor
ljmp
cmp
mov
insb
dec
ss
sti
push
pushf
popf
pop
movsl
ljmp
adc
xchg
mov
pop
fucom
out
add
push
dec
in
icebp
cli
cli
es
pop
addr16
jecxz
addb
arpl
andb
aaa
mov
in
add
icebp
jg
movsb
testl
repz
imul
xchg
mov
pop
adc
and
jp
sbbb
or
rcrb
jbe
jae
sbb
mov
cmp
or
loope
into
dec
inc
subb
xchg
mov
mov
dec
rclb
notb
adc
cmp
and
cmp
lcall
sti
push
std
mov
push
mov
xchg
rcr
scas
jae
outsb
lret
pop
sub
jl
cmp
out
jp
or
je
repz
test
mov
aas
push
mov
in
pop
bound
lods
cmp
xor
jbe
lea
xchg
loope
mov
cmp
hlt
add
dec
add
cmp
mov
sbb
into
sbb
aaa
inc
add
mov
arpl
aas
dec
imull
imul
in
sahf
cmp
mov
enter
jno
mov
mov
cmp
stos
movsb
xor
sub
dec
dec
dec
aam
push
push
and
clc
daa
pop
jne
mov
in
cwtl
jl
ret
add
xchg
repnz
not
add
push
bound
mov
stc
es
pop
or
push
sub
mov
mov
push
inc
cmp
sub
sub
aas
and
inc
sbb
adc
sbb
jge
adc
flds
mov
mov
add
mov
loope
pop
aad
jg
fidivrl
lds
fldt
scas
cs
mov
jg
and
mov
lods
bound
in
std
and
cli
insb
xchg
imul
shlb
loopne
cmp
repnz
sbb
popf
jmp
clc
clc
pop
mov
cmp
mov
dec
ret
cltd
or
pop
scas
mov
sahf
pop
push
mov
cwtl
mov
sbb
jbe
cmpsb
add
xlat
in
imul
ja
cmp
fwait
shrl
ret
jl
inc
outsl
fiadds
cmp
inc
push
arpl
adc
xchg
jae
ds
dec
es
test
sbb
ret
push
pushf
mov
lods
aaa
pop
cmpsb
stos
in
sbb
push
movsb
int
jg
xchg
int
insl
ror
into
scas
mov
ret
lds
hlt
and
movl
in
outsl
call
xchg
pop
js
cltd
popa
aad
mov
pop
push
or
add
cmpsl
sbb
sub
mov
call
inc
fisttps
fwait
push
xchg
xor
fnstenv
lock
sbb
add
sbb
xor
loopne
and
push
ss
mov
push
es
dec
and
xor
iret
sub
jge
lahf
cmp
scas
cmp
ja
jg
jp
popf
or
inc
jnp
sbbb
iret
sub
cltd
shll
fldl
mov
enter
out
mov
ret
push
stos
lock
xchg
addr16
movsb
scas
cs
add
decb
mov
bswap
hlt
adc
xlat
add
adc
repnz
mov
in
lea
inc
add
xchg
shrl
cmp
fs
dec
lods
mov
push
jae
rcrl
movsb
sbb
ljmp
into
adc
cmp
out
dec
cmp
cmp
inc
sbb
inc
lahf
adc
aad
mov
pop
fcmovbe
push
add
mov
lods
xchg
pop
pop
cld
outsl
mov
clc
adc
dec
xchg
daa
push
dec
mov
xchg
pop
fistpl
mov
repz
test
ljmp
into
ljmp
ret
xchg
push
lret
lahf
fldl
pop
mov
fs
adc
and
mov
mov
pop
mov
movsb
ret
imul
mov
lods
jae
lods
sbb
xchg
inc
dec
adc
inc
pop
mov
sar
mov
sub
and
dec
lret
sbb
pop
mov
pop
mov
cltd
nop
push
or
rorl
inc
filds
lahf
push
pop
mov
pop
aam
jl
push
xor
sbbl
popf
js
adc
dec
pop
push
iret
mov
mov
popf
xchg
dec
adc
inc
jle
lcall
sub
out
popa
mov
cld
xorl
dec
sbb
scas
popa
cld
add
or
fcoms
mov
test
pusha
stos
fwait
jnp
js
add
cmp
sbb
adc
pushf
lods
lods
xor
add
repz
sahf
data16
nop
int
jp
test
xor
popf
jl
loope
gs
aas
jb
stos
aaa
push
xor
cmpsl
mov
adc
sti
insb
mov
fwait
mov
pop
sbb
mov
inc
enter
xchg
inc
dec
cmp
adc
das
mov
add
sub
jae
sub
test
ss
dec
mov
or
push
in
loop
push
dec
push
pop
inc
pop
pusha
jg
daa
popa
sub
jo
sbb
push
test
sub
xor
pop
roll
daa
aad
into
lret
xor
dec
mov
jb
mov
push
outsb
sbbl
movsb
sbb
dec
cwtl
jp
int
adc
jmp
popf
lock
xor
aad
mov
mov
cmp
mov
das
cmp
mov
out
fstpl
add
inc
sbb
inc
popa
xchg
xlat
mov
cmpsb
jnp
jne
ret
cld
repnz
popf
imul
outsb
add
pop
jns
sbb
enter
xor
cmpsl
movsl
push
and
scas
sbb
sbb
loope
inc
iret
push
xchg
sub
adc
cmc
neg
lock
jne
push
rcl
and
mov
lahf
jge
pop
cmpsl
das
rclb
cmp
insb
sbb
inc
leave
xchg
arpl
loope
mov
jbe
sbbl
div
shlb
ljmp
ret
ret
fs
add
and
icebp
jb
pop
sbb
or
in
ficomps
in
inc
inc
imul
mov
movsl
out
cmp
js
or
loop
aaa
adc
nop
std
loope
fmuls
jle
xchg
sbb
test
loope
push
loop
stc
repz
ss
je
fucomip
imul
pop
or
xor
iret
lods
xor
repz
cmp
lahf
stos
orb
push
sti
daa
inc
push
mov
fsubrl
in
mov
scas
mov
call
repz
or
mov
push
jb
and
scas
loopne
ror
mov
or
pop
js
add
fbstp
mov
jns
ret
out
popf
into
inc
hlt
cli
push
testl
push
fs
and
fsubrs
popf
mul
loope
loope
push
iret
gs
push
cmp
sahf
push
mov
mov
inc
mov
cmpb
fiaddl
add
add
aad
insl
pop
jb
push
ja
movsl
cmp
lods
jbe
iret
icebp
shrb
mov
out
lret
out
jge
lea
sub
push
adc
and
stc
pop
lahf
ss
and
cmp
cmpsl
sbb
and
push
jbe
push
jb
sub
ds
rcll
test
hlt
ds
xorb
outsb
cmp
push
adc
xor
dec
sarl
pop
int3
dec
lret
es
mov
add
cmp
push
or
push
cmp
inc
jp
or
in
inc
scas
out
and
aaa
xchg
nop
and
sbb
or
loopne
push
adc
stos
sahf
daa
jb
std
xchg
int3
mulb
sub
lods
call
pop
shr
frstpm(287
cmp
cmpsl
test
test
and
adc
mov
jge
push
mov
sarb
int3
ds
sbbb
insl
movsl
adc
pusha
ss
xchg
into
pop
or
push
pop
inc
mov
mov
loop
jns
scas
adc
add
or
or
pop
and
mov
xlat
push
or
and
xchg
je
addl
push
adc
stos
pop
and
push
in
jbe
scas
pop
jae
je
sub
lds
inc
ret
movl
inc
inc
pop
pop
sub
mov
ret
jge
mov
inc
mov
data16
xor
jle
and
and
add
scas
sbb
xor
arpl
mov
out
lret
sub
xor
shll
in
imul
pusha
cmp
in
xchg
jg
push
shrb
repnz
dec
mov
pop
pop
sti
repz
jne
lahf
or
imul
or
ja
je
sar
test
stos
ret
dec
bound
mov
dec
sub
sbbl
shl
dec
daa
adc
inc
lds
nop
jo
js
and
dec
lods
mov
mov
mov
inc
sub
mov
mov
push
jecxz
lock
mov
negl
fs
lock
jne
fists
stos
xor
dec
clc
sbbl
mov
lea
add
mov
iret
inc
mov
ljmp
mov
xchg
cltd
lret
sti
sub
ss
test
loopne
push
in
mov
roll
jecxz
nop
sbb
xlat
push
cld
das
cmp
arpl
pop
add
sbb
mov
mov
cmpsb
aaa
test
fcomp
je
rolb
lret
cmp
inc
add
xlat
das
call
and
fidivrl
pop
mov
nop
insl
jno
cmp
adc
arpl
mov
stc
or
pop
inc
std
push
inc
pop
sub
pop
add
lods
cmp
test
cmp
jle
mov
es
mov
cli
adc
gs
das
mov
outsb
loopne
gs
sub
add
dec
push
iret
into
and
xor
repz
insb
pop
mov
mov
insb
cli
push
hlt
ja
stc
jl
push
push
sbb
cmp
arpl
fst
ljmp
inc
popl
cmpsb
jmp
in
pop
xor
xchg
cmc
sub
sub
mov
loopne
xchg
or
repz
pusha
cli
sbb
enter
shlb
inc
sub
dec
xor
mov
loope
dec
dec
mov
inc
dec
or
push
cmpsl
cld
enter
iret
stc
shr
iret
into
push
xor
or
or
rclb
jbe
xor
orl
adc
mov
mov
dec
cmp
jbe
or
shlb
mov
mov
mov
add
or
fisttps
popf
mov
arpl
call
push
ret
mov
sbbl
std
and
sub
sub
and
adc
and
xor
les
hlt
mov
movsb
icebp
mov
inc
adc
xor
push
adc
and
xor
les
hlt
mov
movsb
icebp
mov
inc
adc
xor
push
adc
and
xor
les
hlt
mov
movsb
icebp
mov
inc
adc
xor
push
adc
movsb
jno
popa
cmp
hlt
repz
sbb
pop
push
dec
push
push
mov
sub
cmpl
mov
je
cmp
je
push
lea
push
push
movb
call
call
mov
xor
xor
call
mov
xor
call
mov
mov
lea
push
call
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
pop
pop
test
jne
mov
not
mov
movb
or
mov
leave
ret
in
lds
mov
in
icebp
pusha
movsl
hlt
push
in
aad
les
adc
test
push
cmc
inc
in
xchg
and
adc
add
hlt
push
in
mov
les
jp
add
je
lds
out
test
add
hlt
mov
es
mov
insb
mov
jmp
add
fs
sbb
add
out
test
out
xor
and
aam
scas
add
jns
cmc
jno
xorl
jne
adc
pushf
xor
test
aam
rcrb
lret
xor
scas
mov
hlt
fdivs
or
shll
in
pop
xor
or
hlt
dec
add
in
and
push
adc
cli
test
mov
rcrb
fdivl
add
pushf
push
xchg
push
test
int3
add
and
fimull
rcr
shr
push
in
cmc
ret
push
xor
rclb
xchg
xor
fs
xor
and
adc
add
hlt
shl
adc
les
xchg
xor
and
cmp
inc
ljmp
push
add
jp
jno
je
inc
sub
or
push
cli
inc
mov
fstpt
xor
add
inc
xlat
dec
les
add
xchg
and
adc
add
hlt
push
in
aam
les
adc
test
push
cmc
inc
in
xchg
and
adc
add
hlt
push
in
aam
les
adc
test
fsts
leave
inc
or
xchg
lock
jmp
dec
jae
out
adc
test
cmp
cmc
push
je
xor
adc
sbb
cmp
cmp
scas
bnd
xchg
sar
ljmp
rcll
inc
out
jge
xchg
or
inc
push
fistpl
mov
lock
adc
loope
fucomi
fs
bound
fisttpl
adc
sub
or
jo
outsb
imul
stos
sub
inc
jmp
inc
andl
cmp
sub
pop
mov
xor
jns
mov
gs
dec
pop
and
sti
sbb
or
or
pop
ja
inc
pop
cmp
cmc
nop
mul
pusha
jg
shrl
stos
clc
inc
push
xlat
addr16
xchg
es
ret
dec
mulb
movsb
add
jbe
jle
cmp
dec
in
lock
imul
push
jg
push
mov
push
jns
outsl
xorl
pop
les
js
repz
sub
arpl
addr16
xchg
mov
ror
rcr
mov
std
add
jns
jl
loope
add
loopne
xor
rorb
lock
ljmp
and
jg
xchg
jmp
test
add
mov
decl
add
add
ret
and
jne
mov
pop
iret
jle
out
ret
in
sub
dec
mov
lods
insl
icebp
outsb
mov
or
mov
cmpsl
mov
push
add
leave
popf
out
xchg
jl
scas
inc
stos
and
sbb
push
arpl
xchg
idiv
mov
or
push
inc
addb
pop
dec
mov
shr
mov
sub
dec
popa
aam
jb
fcmove
push
pop
pop
inc
mov
pushf
push
out
roll
add
jp
cmp
out
pop
add
cs
mov
je
fdivrs
mov
pushf
je
andl
leave
in
ret
xchg
cmp
inc
je
pop
mov
pop
fisubrl
mov
adc
add
push
dec
in
insb
fnstcw
mov
mov
mov
das
or
lods
loope
roll
jb
add
jmp
push
jl
rcrb
mov
adc
mov
out
out
sbb
ljmp
fdivrp
inc
inc
mov
imul
dec
pop
les
cltd
or
les
test
and
cwtl
pop
push
arpl
in
mov
ja
in
je
dec
push
jle
xor
stos
outsb
pop
les
test
aam
data16
out
sbb
sbb
jo
xlat
cmpsb
cwtl
jae
mov
push
push
jns
into
add
andl
in
rcrl
xchg
mov
pop
mov
pop
popf
add
pop
rclb
mov
dec
scas
insl
and
mov
cmc
add
sbb
fmull
xor
outsb
stc
aam
add
or
lea
ret
jno
push
addl
test
xchg
xor
in
mov
cld
sub
mov
mov
sbb
aam
dec
ret
fdivrs
movl
jmp
movsl
test
dec
xchg
add
push
cmp
cmp
test
jmp
mov
pop
jle
dec
inc
xor
orl
sysexit
fstpl
mov
lods
pushf
cbtw
dec
js
xor
sbb
and
mov
jb
pop
scas
outsb
mov
popf
enter
clc
lahf
push
jae
notb
out
cwtl
aaa
add
fidivrs
in
pop
aas
idivb
push
and
mov
js
mov
in
xchg
sbb
pop
mov
pop
mov
in
adcl
push
sub
data16
sbb
lea
mov
xor
push
out
rolb
aas
popa
in
fistpl
sbb
ds
ret
or
push
xor
push
popf
mov
sbb
push
xlat
pop
fs
pop
sti
stos
mov
xchg
and
dec
leave
pop
or
or
sub
test
mov
pushf
or
dec
mov
lods
js
jl
dec
cld
rcll
mov
inc
xor
pop
cmpb
push
mov
adc
jne
test
pop
mov
jne
pop
pop
aam
shrb
sar
inc
jb
pavgw
cwtl
dec
fdivs
xchg
add
out
cli
and
imul
push
add
xchg
xor
dec
jecxz
xchg
cltd
lret
mov
test
add
repnz
jno
adc
mov
inc
repz
scas
add
lahf
mov
pop
dec
int3
pop
movsl
test
xchg
cmp
popa
pushf
aaa
into
ljmp
fdivrl
sbb
sbb
inc
pop
xchg
dec
aas
lds
or
sarb
dec
push
jns
sub
in
out
inc
inc
push
bound
mov
jmp
repz
inc
adc
stc
push
xchg
pop
and
xlat
sbb
mov
ret
insb
stos
sarl
aaa
cli
cld
lahf
lds
cmc
adc
lods
outsl
or
add
cmp
mov
adc
into
test
adc
jno
js
jae
pop
jns
add
test
xchg
or
jbe
mov
add
les
pop
hlt
test
xor
or
into
out
gs
stc
and
sti
sbb
jo
imulb
pushf
mov
jp
and
jle
je
and
les
into
mov
inc
xlat
mov
pushf
mov
jmp
mov
out
in
mov
mov
clc
out
mov
stc
outsb
xor
sarl
push
call
push
nop
in
or
fistps
inc
dec
out
push
daa
lods
pushf
and
ret
push
inc
dec
and
std
lret
mov
pop
adc
pop
ds
cmpsl
aad
cmpsb
fistpl
dec
sbb
incl
lock
stos
dec
cmp
pop
dec
add
mov
mov
adc
jecxz
jo
mulb
sub
mov
scas
popa
mov
push
and
dec
cmpsb
lcall
inc
lea
ljmp
pop
adc
pop
wrmsr
pop
mov
xchg
mov
sub
adc
mov
push
sbb
push
adc
sti
push
daa
pop
testl
mov
dec
ss
jb
or
sbb
mov
jns
adc
ss
dec
rorb
lds
inc
out
dec
inc
leave
dec
dec
or
bound
jg
push
aas
xchg
and
pop
ds
dec
pop
aad
pop
xchg
shr
arpl
dec
mov
cmp
cmpsb
xchg
test
adc
add
stos
out
and
push
inc
jmp
orl
lahf
imul
sbb
ret
cmp
sbb
test
push
push
mov
out
mov
bound
mov
shll
cmp
fistl
movsb
rolb
call
mov
xchg
inc
jae
mov
adc
es
mov
pop
adc
mov
sti
and
repz
adc
addr16
mov
pop
jl
aad
pusha
insb
nop
ljmp
popf
mov
xor
fwait
ds
sbb
aas
or
dec
jns
xlat
dec
add
subb
and
outsl
jo
push
outsl
pop
sbb
shrl
pop
cmp
rclb
pop
imul
dec
xchg
cmc
jl
mov
out
jmp
xchg
sbb
sbb
jmp
dec
cmpsl
mov
add
xchg
out
lods
xchg
les
cbtw
sub
mov
inc
mov
xchg
lods
roll
test
ss
loop
orl
push
popf
fldenv
insb
scas
lcall
and
pop
push
cmpl
gs
in
and
inc
mov
das
in
push
cli
gs
test
cmp
insl
jo
test
sub
mov
shlb
data16
xchg
inc
fstpl
push
sbb
icebp
add
push
repnz
xchg
lods
jle
push
xchg
rcr
push
addl
ret
and
std
xorb
xchg
dec
jmp
popa
mov
and
popl
adc
mov
arpl
sbb
xor
and
add
popf
flds
cmc
enter
inc
lahf
push
xor
push
inc
mov
push
and
pop
stc
in
into
aas
shll
fmull
cmp
je
and
xor
aas
mov
pushf
pop
mov
jge
test
lsl
or
repnz
or
add
xor
push
lahf
pop
shll
ds
adc
out
insb
fisttpl
movsb
lods
mov
mov
and
pop
and
jmp
and
out
je
sbb
insl
sahf
mov
lods
andb
sbbl
pop
fdivr
or
test
xchg
loopne
and
in
jmp
movsl
dec
pop
rolb
xchg
enter
dec
stc
push
push
aad
lods
mov
mov
cltd
dec
jno
jge
sarl
sbb
or
mov
mov
inc
idiv
loopne
call
cmp
jmp
lcall
and
jbe
icebp
inc
fstpt
fisttps
shlb
imul
or
imull
mov
mov
cmc
mov
lret
xchg
cmp
jo
mov
mov
xlat
add
dec
lds
push
mov
push
dec
or
add
movsb
inc
cwtl
sbb
cmp
sub
ds
pop
xchg
outsl
mov
aam
jno
mov
cmp
data16
xor
sub
fidivs
push
rol
xchg
hlt
adc
mov
ret
gs
sbb
or
loop
xor
inc
pop
in
xchg
out
jl
mov
pop
mov
scas
das
clc
cmpsb
in
xchg
dec
aas
fsubs
outsb
stos
bound
jecxz
repz
loopne
test
arpl
js
pop
jb
mov
sbb
jg
xor
dec
inc
sub
sti
outsb
cmpsb
inc
ret
fnstsw
or
hlt
cmp
out
lcall
xlat
add
rolb
cmp
lods
or
and
gs
gs
sbb
push
add
movsl
mov
stos
fcmovnu
enter
xchg
dec
pop
insl
aad
push
or
or
sahf
sarb
loop
push
jns
hlt
scas
cltd
scas
aam
jl
cmp
scas
mov
jbe
cmp
jne
sub
and
lahf
leave
mov
sub
test
scas
cmp
dec
pop
fiadds
push
lret
pop
mov
popf
mov
sub
mov
push
or
test
cwtl
repnz
mov
push
inc
inc
loope
and
push
and
or
mov
mov
icebp
pop
xchg
mov
sbb
mov
mov
jo
gs
or
popa
push
gs
sbb
add
stc
ja
fbld
jmp
xchg
lcall
jge
mov
out
jl
xchg
cmpb
sahf
inc
in
mov
pop
jp
sbb
gs
or
mov
lods
mov
xor
xchg
push
sbb
inc
mov
jge
pop
loop
sub
lcall
roll
sub
push
sub
push
sbb
neg
dec
roll
xor
out
jne
dec
add
jno
sub
and
mov
fidivl
icebp
in
and
jnp
sbb
xchg
inc
mov
pop
stc
push
push
xchg
stc
sarl
out
out
fcoms
insb
jnp
mul
movsb
in
sub
jb
mov
mov
xchg
mov
sub
rol
mov
xchg
cwtl
inc
cmpsl
mov
mov
dec
into
cmp
add
jae
mov
repz
movsb
rcrl
and
sub
push
icebp
repz
mov
and
sub
cld
pop
repz
sbb
xor
insl
lds
pop
les
jbe
sbb
adc
cmpsb
jno
in
daa
adc
mov
data16
inc
mov
or
or
mov
dec
pushf
lcall
sti
ja
lcall
dec
daa
push
enter
push
sub
int
jp
outsl
ret
aad
pop
inc
roll
inc
and
stc
ds
movsb
fimuls
add
cli
adc
shll
mov
add
push
mov
cmpl
sbb
mov
inc
movsb
xchg
push
aas
icebp
dec
imulb
gs
mov
repz
fwait
scas
push
out
push
pop
sub
movb
les
bound
xor
outsl
out
inc
out
cmp
stos
push
addb
xor
xor
arpl
or
mov
into
inc
xchg
push
dec
jnp
jl
push
cs
cmp
dec
aam
or
sub
lahf
repz
pop
xor
sti
test
mov
xor
lcall
push
cmp
jecxz
insl
idiv
fldl
js
xchg
hlt
lahf
mov
bound
sbb
inc
mov
mov
sbb
add
inc
stos
shlb
mov
push
add
data16
inc
mov
arpl
imul
cmp
negl
in
sar
mov
pop
jl
dec
in
pop
dec
test
or
loop
push
pop
mov
adc
shl
cwtl
and
dec
mov
push
loope
ret
fidivl
pop
push
pushf
arpl
cmc
jnp
mov
mov
mov
test
push
std
nop
addr16
scas
sbb
mov
je
test
test
sbb
test
and
dec
jmp
push
push
pop
scas
sbb
sub
mov
gs
add
push
test
fdivs
jle
int
and
and
inc
jae
jae
rcr
push
bound
pusha
lcall
mov
jo
or
in
aam
inc
jg
inc
lcall
sub
sbb
shrl
push
addb
cli
je
jbe
adcb
lock
nop
shrb
aam
jmp
push
lahf
jge
lcall
mov
or
cmp
xor
out
sbb
nop
pop
test
cmp
cmc
xchg
inc
mov
sbb
xchg
ret
mov
xor
aad
outsb
xchg
add
mov
fwait
and
pop
jbe
add
fbld
inc
mov
cmp
xchg
push
cmc
and
jle
fs
shrb
jbe
int3
imul
pushf
cmc
test
cmpsb
sbbb
xor
cld
xor
fisubs
sbbb
and
shrl
push
lods
cmp
stc
and
xchg
cmc
popf
clc
shll
xor
xor
pop
adc
or
insl
xlat
add
hlt
cmova
dec
xlat
jo
dec
or
xor
movsb
in
movsb
data16
aam
test
cs
jmp
lods
pusha
fldcw
mov
popa
es
pusha
lds
add
mov
adc
mov
clc
push
addr16
xor
mov
mov
js
mov
mov
in
cmp
sbb
lea
mov
shll
xor
cmpb
in
cwtl
rorl
dec
shr
ret
jmp
adc
dec
cmpb
cmp
lea
push
bound
cmp
or
das
dec
outsb
jo
or
sub
mov
ret
or
loope
or
fimull
aaa
les
rolb
push
iret
ja
orb
loopne
mov
cmpsb
jae
dec
hlt
xchg
in
pop
adc
mov
pop
gs
in
pop
pop
loopne
out
outsb
aaa
push
jg
sbb
lret
jns
cmc
ret
sbb
les
jg
ret
cmp
jecxz
jae
mov
stos
cli
imul
cmp
push
ret
mov
cmpsl
and
inc
or
dec
ret
insb
sub
xlat
sbb
sbb
push
ss
imul
andb
test
push
mov
dec
loop
icebp
imul
jmp
push
stc
int3
dec
sbb
adc
jp
cmp
loopne
fdivl
pop
xor
inc
loopne
jb
arpl
sbb
and
scas
sbb
xor
sahf
mov
adc
aas
cmc
cmc
mov
lret
xchg
in
mov
jo
fcos
outsl
jp
jno
add
out
lock
mov
inc
or
ja
lods
pop
sbb
mov
mov
fcompl
sub
ret
push
pop
xor
stc
push
arpl
push
in
cmp
sbb
daa
inc
xor
mov
push
pop
sub
sub
pop
jne
cmpsb
cli
push
paddusw
das
dec
ds
and
fnstsw
sub
adc
sbb
dec
lock
lock
cmp
mov
in
jl
mov
cmp
xchg
out
xor
test
or
int3
fucomp
loop
js
mov
inc
popf
sbb
in
inc
insl
ljmp
mov
xchg
adc
cmp
mov
test
cmp
and
adc
je
cld
movsb
scas
jge
cmpsl
nop
sub
and
mov
in
fwait
and
xor
xchg
lahf
add
movsl
test
in
or
shlb
rcrl
sbb
xchg
or
and
subl
inc
cwtl
outsb
dec
jno,pn
ret
jl
enter
adc
cmpsb
push
and
nop
sub
dec
mov
scas
pminub
xchg
jbe
xor
fsubrs
loope
scas
xchg
mov
jl
sub
jmp
or
loope
push
cmc
dec
cmp
jge
in
mov
and
movsb
dec
into
push
fnstcw
mulb
xchg
mov
imul
imul
or
ret
push
xchg
sub
stos
in
mov
cmc
jecxz
and
dec
popf
std
shrl
jns
repz
inc
adc
dec
dec
icebp
mov
xor
scas
cwtl
push
repz
loopne
shll
repnz
aaa
enter
clc
nop
cmp
les
movb
mov
hlt
in
inc
sti
dec
mov
jb
xor
xor
lea
outsl
cmp
xor
push
and
mov
xor
push
addr16
push
nop
enter
call
in
xchg
test
imul
jl
ds
insb
add
int
adc
ds
push
jl
pop
or
xchg
lock
sub
sbb
mov
add
mov
dec
in
push
mov
repz
andb
daa
ds
pop
adc
push
add
sbb
incl
xchg
xlat
pop
insl
xor
mov
push
ljmp
insb
inc
aaa
insl
inc
cs
shrb
mov
ret
in
adc
cmp
xor
mov
sti
dec
mov
jnp
and
fstl
das
in
pushf
loopne
mov
es
in
aam
fnsave
je
sub
xchg
or
inc
and
pop
out
jnp
ret
adc
testb
dec
jae
mov
es
aad
leave
dec
mov
jbe
sub
add
mov
jns
out
inc
ret
int3
cwtl
dec
outsb
pop
inc
les
adc
add
popf
mov
sbb
enter
bound
test
sarb
jns
push
add
sbb
mov
pop
scas
adcl
data16
pop
push
xlat
fnstenv
test
mov
cmpsl
inc
es
xchg
add
cmp
test
dec
lret
gs
adc
jno
and
cmp
in
repz
stos
lods
outsb
ficomps
loopne
mov
lret
loope
aas
sbb
cli
xlat
adc
jg
aam
test
inc
pop
inc
fwait
or
cs
sub
in
lea
mov
in
shlb
jecxz
jmp
mov
xchg
jmp
filds
push
cs
leave
punpcklwd
jmp
test
lods
addr16
adc
sub
pop
pop
jp
arpl
dec
incl
js
cs
jmp
sti
xchg
incl
outsl
add
push
stos
mull
shlb
leave
andb
pushf
push
es
into
or
in
sub
enter
jo
in
pop
cmp
in
add
mov
and
xchg
shl
xor
mov
mov
loop
sbb
or
cmpsl
or
lret
jnp
jae
mov
sub
mov
mov
push
mov
inc
in
xchg
sub
cli
call
pop
sbb
sbb
not
cld
les
lahf
mov
push
cmp
movsl
pop
stos
repz
clc
dec
fiadds
addr16
sub
cmp
xor
adc
fwait
lcall
mov
aam
push
out
out
mov
ret
daa
in
mov
imul
test
inc
inc
mov
xchg
das
movsl
jb
mov
add
pop
mov
call
xor
inc
add
es
imul
add
jns
dec
inc
and
pop
adc
push
scas
jne
cli
arpl
and
popa
fisttps
loop
pop
lea
push
add
orl
fsub
cmp
sub
je
pop
sbb
dec
adc
das
in
popf
mov
insl
push
pop
sbb
in
aaa
and
scas
cmp
or
in
xor
mov
mov
addr16
scas
and
inc
in
xchg
and
adc
add
hlt
push
in
aam
les
adc
test
push
cmc
inc
in
xchg
and
adc
add
hlt
push
in
aam
les
adc
test
push
lea
xchg
and
adc
add
hlt
in
aam
les
adc
test
push
cmc
inc
in
xchg
and
adc
add
hlt
stos
in
jle
les
ret
popf
sub
imul
ficoml
in
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
jmp
lea
push
pushl
call
lea
push
pushl
call
jmp
call
push
mov
call
xor
leave
ret
sti
cli
push
ljmp
pop
mov
jp
push
pop
push
dec
jae
pushw
sbb
mov
fiaddl
stos
lcall
cmp
dec
jbe
add
push
sbb
insb
cli
es
scas
stos
cli
lcall
jo
addr16
push
push
xor
sahf
sarb
mov
imul
cmp
ja
mov
lret
sysexit
cmpsb
inc
sbb
xchg
inc
xorb
in
dec
repz
mull
out
mov
xchg
sub
xchg
and
mov
clc
mov
in
or
add
rcr
idivl
fisubl
dec
jne
push
movsb
stc
mov
imul
addr16
push
imul
push
xchg
gs
idivb
jbe
jmp
repnz
push
sbb
pop
xor
adc
and
push
push
aas
bswap
test
jnp
pop
push
dec
repz
adc
push
or
lret
mov
mov
jp
push
pop
sbb
cmp
push
sbb
dec
les
call
jmp
jmp
add
addr16
push
or
cwtl
add
mov
dec
popf
lahf
filds
mov
aas
addr16
jae
push
add
outsl
pop
les
mov
lcall
push
pop
push
dec
jbe
data16
inc
or
fiaddl
stos
lcall
push
pop
push
dec
jbe
data16
inc
or
sub
sbb
add
dec
cli
mov
mov
pop
mov
lcall
add
and
cmp
jns
jmp
jb
shr
ficoms
mov
rcll
jl
gs
clc
sub
mov
sarb
test
loopne
mov
xchg
pop
mov
lcall
inc
test
inc
test
mov
outsb
lock
sub
andb
jne
daa
nop
cmpsb
loopne
stc
cwtl
mov
dec
imull
popa
js
imul
adc
ja
xor
loopne
inc
mov
push
fdivrs
mov
mov
pusha
nop
xor
mov
mov
pop
orl
aam
fstps
xlat
in
sub
mov
xor
sbb
pop
daa
xor
test
mov
mov
fsubr
mov
movsb
sub
or
cmp
rcrl
xchg
pop
scas
and
push
and
push
inc
call
push
adcl
jge
add
xor
mov
shrb
pop
out
jo
out
mov
mov
push
xchg
clc
mov
mov
mov
cld
fs
daa
jno
xor
adc
sub
cltd
jmp
xor
loope
sti
icebp
jge
addr16
movsl
xchg
xor
int
int3
push
fsubrp
cmp
leave
xor
ficoml
jge
rorb
in
repz
outsl
xchg
pop
or
pop
in
and
stc
outsl
jg
scas
int
push
cmp
mov
in
cltd
divb
scas
jne
mov
movsb
pop
xor
or
mov
dec
out
lahf
mov
and
adc
pminub
aam
mov
push
repnz
mov
sbb
dec
stc
mov
push
xor
xlat
sub
inc
push
daa
mov
icebp
ja
in
les
outsl
rcll
mov
imul
sti
cmp
jp
and
or
pop
xchg
cld
iret
fcoml
add
dec
push
popf
lods
xor
mov
push
in
imul
push
das
es
ljmp
nop
andb
mov
arpl
xor
data16
mov
xchg
mov
movsb
pop
lret
jae
xor
push
or
push
lcall
arpl
out
jmp
cmpl
stc
cmp
cmpsb
mov
pop
pop
sub
or
inc
adc
das
ds
jne
adc
and
xchg
jle
rolb
jne
call
lds
mov
stos
fildll
lahf
push
pop
repnz
mov
push
mov
mov
addl
aam
add
sub
rcrb
cltd
out
pop
stos
xor
mov
rorb
push
ret
jb
repz
int
cwtl
dec
test
push
insb
lahf
xchg
inc
sbb
cmp
insb
sbb
lods
cmp
out
push
and
ret
insl
jae
mull
psubsb
jnp
jne
jg
out
inc
inc
sti
into
jne
jns
sub
adc
cltd
adc
mov
mov
inc
xlat
pop
add
mov
repz
dec
rcrl
imul
pop
and
dec
push
push
scas
sarl
mov
jecxz
fwait
push
adc
jecxz
add
mov
mull
lahf
lahf
mov
inc
mov
cmp
pushf
xor
test
mov
push
cmp
mov
xor
dec
sub
sub
lcall
sbb
mov
mov
push
outsb
aaa
pop
shlb
pop
int
adc
sub
adc
icebp
xor
dec
lcall
mov
mov
pop
jb
xchg
sahf
mov
jnp
inc
or
cwtl
mov
repz
mov
mov
mov
xchg
es
cli
xor
mov
pop
pop
xor
inc
jle
pop
decl
xchg
rcll
lea
dec
dec
cmp
mov
or
cld
mov
repnz
mov
xchg
xchg
fadd
repz
dec
dec
std
jae
es
push
imul
pop
cld
fiaddl
xor
mov
les
call
sarb
and
sub
pop
mov
or
xchg
mov
sarl
and
mov
push
xor
mov
mov
pop
call
inc
xor
sbb
cltd
pop
scas
in
ja
pop
std
pop
jno
popf
inc
dec
mov
out
push
mul
push
fnstenv
lcall
or
repnz
cmpsl
int3
ds
shll
ss
xor
hlt
add
outsb
inc
faddl
lcall
pop
ret
push
shll
test
inc
mov
push
mov
pop
fimull
or
sub
add
ss
in
aam
jne
push
lea
in
out
mov
ljmp
je
or
mov
loopne
add
pop
cmp
in
xchg
push
sub
lods
fcoml
cmp
scas
pop
cmpb
pop
dec
xor
imul
fisubl
pop
sarb
inc
mov
faddl
stos
ret
mov
mov
inc
imul
adc
adc
sbb
cmp
outsl
out
mov
insl
add
jns
add
push
xchg
xchg
mov
sbb
pop
test
sbb
pop
and
out
inc
mov
sbb
xchg
and
dec
test
scas
lods
in
mov
inc
inc
xor
mov
mov
or
jae
add
out
cmpsl
mov
adc
stos
dec
or
pop
int
jmp
rcl
mov
pop
fimuls
dec
addl
bnd
hlt
insl
pop
jmp
pop
ss
push
add
daa
cmpsb
lods
mov
mov
xchg
ss
pop
clc
bound
inc
pop
mov
jmp
daa
push
or
jmp
imul
pop
fs
inc
popa
jl
dec
loope
addb
dec
sub
ljmp
adc
out
test
imul
inc
mov
pop
pusha
sbb
pop
xchg
fcmovnb
repnz
xor
xchg
jmp
int3
arpl
pop
movsb
mov
jae
imul
dec
imul
mov
mov
cmp
push
lret
cmp
or
and
cmp
and
cmc
cltd
sub
stc
xchg
xchg
sub
mov
aam
repz
movsb
pop
cmp
ret
hlt
xor
cmp
dec
xor
cmp
das
pop
jle
cld
icebp
out
push
inc
sti
and
cmp
fsubrp
inc
cmp
cmp
subb
xchg
cmpsb
andl
mov
repnz
push
or
fwait
mul
add
sub
std
popf
sbbb
or
push
sub
lret
out
xlat
mov
sbb
stos
test
add
fbstp
hlt
xor
in
mov
nop
lods
adc
sti
push
mov
rclb
or
inc
pop
jno,pn
popa
inc
or
movsl
pushw
outsb
fwait
sar
icebp
adc
push
sbb
xchg
cld
xor
xchg
mov
or
dec
shll
dec
sbb
bound
jae
dec
pop
js
add
into
orl
sbb
pop
rcrl
lret
adc
mov
mov
mov
in
in
les
nop
mov
or
pop
stos
cmp
mov
sub
daa
jecxz
ret
sbb
xchg
int3
pop
jg
adc
stos
in
outsl
pop
jno
and
fwait
pop
movsb
ss
xchg
je
xchg
add
cmp
ret
push
rcl
xchg
fisubrl
cmpsl
mov
cmp
mov
pusha
dec
mov
ds
xor
dec
roll
enter
mov
or
mov
outsb
scas
pop
inc
xorb
shl
dec
and
lods
adc
rcrb
jge
sbbl
sub
ja
mov
rcrb
add
rorb
aam
jo
imul
add
test
outsl
pop
pushf
mov
xchg
add
add
xchg
jno
stc
popa
mov
in
dec
mov
pop
xchg
aaa
mov
dec
shlb
arpl
sarl
or
push
xchg
rcrl
into
scas
push
and
mov
pop
test
fs
scas
jne
mov
clc
bound
add
push
or
pop
mov
fldcw
adcl
mov
inc
dec
and
inc
out
jnp
mov
mov
add
cmp
push
test
jnp
aad
ss
ljmp
xor
insb
or
jae
in
jo
loop
cmpsl
std
test
sbb
jb
pop
push
jg
loope
jg
inc
push
flds
fsubp
jmp
jle
int
sub
mov
addb
mov
stos
jo
data16
cmp
cwtl
lret
xchg
inc
push
push
jae
rol
cmpsb
repnz
mov
out
idiv
sarb
mov
in
cmp
dec
pusha
pop
out
scas
mov
push
fiadds
sub
es
cmp
sub
sti
rcrl
fdivrl
xor
flds
cld
inc
adc
lret
mov
inc
mov
aas
lods
inc
in
int3
fsubs
inc
xor
stos
adc
fmull
xchg
fcmove
push
fcompl
hlt
fsubrp
push
mov
jb
inc
shll
rcrb
mov
cmp
aam
jge
das
dec
nop
pop
jl
pop
fstpl
sbb
mov
pushf
out
js
lds
sarb
push
sub
push
loope
mov
sub
pushf
inc
sbb
sub
pushf
mov
cmp
pop
mov
rcrb
lock
repnz
mov
mov
repz
adc
push
sar
mov
lahf
clc
fadds
cltd
sbb
sub
out
mov
jmp
mov
push
jmp
clc
imul
pop
jae
data16
movsb
jbe
iret
sarl
aaa
adc
sbb
push
imul
call
cmpsl
pop
insl
ljmp
fcoml
in
pop
sbb
dec
cmp
scas
cmp
inc
out
or
push
xchg
cmp
xchg
inc
pop
stos
adc
fwait
cli
jns
sbb
push
in
fs
sbb
sbb
xor
testb
push
pushf
mov
stc
out
push
test
pop
adc
icebp
int3
and
pop
inc
sbb
push
mov
test
pop
sti
int3
dec
or
push
adc
pop
pusha
adcb
jl
fcmove
test
xchg
jmp
les
or
es
vmread
mov
test
push
das
mov
pop
dec
loop
mov
call
cld
and
dec
adc
loopne
rcll
mov
es
adc
loopne
leave
aam
movsb
les
das
jp
stc
xor
mov
aas
lods
sbb
andl
jne
add
add
mov
push
inc
int3
shlb
jns
daa
ret
adcl
mov
negb
xor
imul
mov
das
xchg
stc
mov
mov
xor
gs
and
cmp
ret
fsubs
mov
push
or
aas
dec
test
mov
adc
cli
out
push
and
mov
push
mov
ret
push
push
sub
push
jecxz
leave
sbb
cmp
call
mov
cmp
dec
cmpsl
inc
cltd
mulb
push
aaa
mov
or
xchg
and
jge
sub
stc
and
test
cld
mov
pop
popf
jae
cli
sahf
jl
loopne
lock
int
cmc
jle
jl
inc
pop
loope
dec
cmp
inc
mov
pop
inc
pop
sbb
cmp
xchg
sbb
mov
xchg
adc
xor
popf
mov
adc
sti
ljmp
cmpsl
inc
outsb
dec
loope
clc
out
stos
mov
cmp
aam
push
addr16
fstps
call
jnp
cmpsl
out
scas
leave
sbb
sbb
inc
loop
cmpsl
adc
rcr
cmp
jae
je
jae
mov
push
push
sub
loop
insl
xor
adc
mov
sarl
clc
sub
out
mov
insl
outsl
insl
adc
cwtl
pop
testl
jno
inc
xor
xor
sub
shll
mov
inc
fisubrl
dec
rcrl
aas
xor
pusha
paddd
nopl
pop
cmp
repnz
daa
jae
sarl
sbb
popa
mov
xchg
xchg
mov
jns,pt
push
push
cmpsl
rep
xor
loope
enter
cmc
mov
subb
adc
xchg
je
add
xor
lods
dec
sahf
lret
inc
sets
mov
cmp
outsl
mov
shrl
xor
pop
repnz
mov
das
lds
mov
imul
stc
outsl
jne
es
xorb
dec
cli
xor
repz
pop
lods
movsl
dec
jp
in
pop
adc
mov
jns
lods
mov
aas
aaa
imul
or
lods
rol
mov
scas
adc
pop
fstps
jmp
add
cmpsb
fs
xchg
and
div
jo
aam
shl
sub
sti
fwait
lock
pop
pop
int3
ja
repnz
cmp
shlb
jns
add
pop
push
inc
in
cmpsl
mov
out
test
push
jp
dec
push
xor
pop
dec
mov
loop
loope
jbe
add
pop
into
pop
xor
push
push
mov
test
lea
or
add
pop
gs
imul
cmp
xchg
int3
sub
ja
jg
call
hlt
xor
cmpsb
lahf
push
pop
fisubl
mov
data16
dec
nop
outsl
lock
dec
movsb
mov
movsl
aad
jb
mov
cwtl
iret
jecxz
sub
mov
lock
push
in
fs
jne
inc
push
insb
decb
int3
cli
mov
adc
pop
jno
fnstcw
jb
mov
jmp
mov
push
mov
inc
push
mov
mulb
sbb
jae
hlt
test
ljmp
leave
pop
sub
loop
dec
daa
out
dec
jbe
movsl
push
rcll
xor
sti
dec
lcall
or
jbe
xor
hlt
pop
inc
push
jns
add
int3
or
and
mov
hlt
inc
cltd
lret
iret
xor
pop
xchg
cs
mov
insb
ret
pop
cs
pop
and
insl
inc
xchg
repz
sbb
pop
push
xor
das
mov
sbb
pop
aam
fmul
lahf
push
in
sbb
sbb
push
inc
rol
dec
xchg
push
sbb
ret
sbb
dec
insb
mov
push
adcl
rorl
pop
fdivs
lock
lods
scas
jae
pop
mov
cmp
jno
mov
push
movsl
adc
or
mov
ror
cmp
cmp
in
xor
lock
repnz
test
dec
repnz
jnp,pn
mul
insl
jp
push
cli
jmp
and
fcoms
cmp
jae
popa
lcall
mov
aam
jnp
stos
sbb
das
xchg
push
fdivr
mov
push
scas
in
jb
push
sub
in
pop
add
movsb
and
mov
or
sbb
rcrb
cmpsl
sub
icebp
mov
fcoml
mov
lea
imulb
mov
and
dec
cmp
jecxz
xchg
ss
mov
adc
xor
out
cwtl
xchg
insl
jnp
pop
out
xchg
stos
leave
js
cmpsb
jne
cwtl
out
insb
mov
loopne
jnp
cmpl
inc
js
faddp
jecxz
pop
lea
lret
aaa
call
out
push
and
cmp
shll
dec
repnz
orb
and
jmp
hlt
or
and
push
jl
hlt
out
data16
testb
cmp
sub
fisubl
and
int
push
and
jmp
jns
pop
dec
sbb
adc
loop
fldt
aas
xor
adc
sub
xchg
mov
sub
jno
sbb
rol
push
aaa
ret
add
mov
rcll
scas
cmp
mov
sub
jmp
jmp
rolb
fnstsw
sbb
mov
sub
and
mov
shl
andb
stos
dec
mov
xchg
loope
daa
test
lcall
call
cmp
nop
and
cltd
adc
enter
add
pop
repnz
and
jecxz
xor
pop
mov
add
fldl
push
imul
into
mov
ret
jno
sub
sub
clc
es
push
loope
sub
pop
mov
sti
xchg
dec
dec
push
loopne
mov
xor
pop
stos
dec
or
addr16
idivb
sahf
pop
sub
arpl
add
cmp
mov
sahf
cmp
inc
jb
push
rolb
je
sub
inc
push
ljmp
and
rorl
adc
or
bound
aad
and
stc
mov
mov
leave
mov
mov
loop
pusha
or
or
cmpsl
push
in
adc
loop
dec
scas
scas
push
lock
mov
jmp
lret
fnstcw
adc
out
pop
subb
push
mov
inc
jp
push
push
scas
inc
sub
xchg
into
jmp
lods
scas
sbb
xchg
sbb
or
sbb
out
push
repnz
mov
in
pop
cs
adc
pop
jo
mov
xor
pusha
movl
and
jle
in
mov
adc
pusha
test
in
sbb
push
mov
xchg
push
test
and
cmp
ds
jl
jne
rorb
dec
push
jnp
push
sbb
rcrb
nop
bound
adc
cmc
jne
popa
test
cld
insb
jg
cmp
cmp
pop
push
insl
pop
sbb
and
cmp
gs
xchg
jge
in
pop
lret
ljmp
add
dec
icebp
xchg
fisubl
int
cmovno
insb
sub
pop
icebp
push
cmpb
inc
lret
cld
mov
xchg
in
cmpsl
outsb
jg
out
jmp
mov
and
ljmp
jmp
cmpsb
mov
std
repz
dec
stc
lock
dec
fisubs
dec
cs
sbb
rcll
movsb
pushl
lea
test
mov
xor
and
jbe
sub
insb
adc
orb
mov
or
xchg
lahf
lahf
cmp
xchg
mov
sarb
call
test
and
lret
xor
sub
incb
jb
pop
and
and
mov
xor
or
push
clc
jbe
push
aaa
icebp
repnz
pushf
cmp
mov
cltd
push
dec
mov
pop
cmpsb
aas
stos
call
jg
xor
xorb
dec
mov
fsub
je
add
add
cld
fcomp
arpl
pop
mov
subb
aad
xchg
xchg
xchg
sub
jns
push
fistps
or
fisubrs
or
xchg
inc
xchg
add
js
dec
xor
cmp
push
and
push
mov
shl
int
jnp
inc
popa
xlat
jecxz
mov
and
xlat
out
push
sarb
jnp
bound
or
in
push
mov
xchg
adc
inc
push
add
cmp
sbb
xchg
mov
cmpsl
push
jge
jae
jge
leave
lahf
js
sub
lcall
cwtl
xchg
test
nop
sbb
outsb
js
cmpsl
xchg
cmp
popf
fst
sbb
scas
and
inc
notl
push
jecxz
aas
movsl
or
sbb
lea
or
sbb
jae
clc
pop
and
shlb
sbb
lock
and
imul
sbb
xchg
and
xor
inc
and
ds
pand
outsb
and
xor
fwait
aas
shl
add
sub
fisttps
pop
rorb
cmp
pusha
or
mov
xchg
xor
imul
xchg
lret
xchg
nop
ss
jne
popf
mov
popa
sbb
push
enter
cwtl
jmp
inc
inc
adcl
lds
aam
inc
inc
daa
pop
addl
pop
in
out
in
adc
push
jecxz
jno
lds
sarb
xchg
sub
mov
pop
jb
and
mov
insl
aam
pop
sar
add
das
push
mov
test
mov
sbb
or
sbb
ljmp
push
ret
mov
adc
jle
sbb
int
les
jecxz
imul
dec
lcall
inc
xchg
mov
xor
push
inc
sub
and
ffreep
xor
mov
xor
lahf
sub
cmp
mov
or
or
roll
clc
rclb
and
sahf
jno
int
sub
xor
sub
pop
add
mov
push
cmpsb
test
daa
pushf
fs
mov
in
fstpl
mov
cwtl
mov
fmuls
bnd
daa
add
sub
jns
data16
inc
mov
jg
iret
jns
mov
lcall
lcall
push
pop
push
dec
jbe
data16
inc
or
fiaddl
stos
lcall
push
pop
push
dec
jbe
data16
inc
or
fiaddl
stos
fwait
mov
jp
imul
add
cmp
push
sbb
scas
cli
mov
push
fisubrl
sub
sbb
ss
sarb
aad
in
cmc
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
sub
cmc
sbb
imul
cltd
add
leave
and
cmp
imul
mov
inc
adc
fnstcw
daa
pushl
sub
xor
test
adc
outsb
mov
imul
andl
cwtl
add
inc
cmp
clc
jb
xor
xchg
sub
sub
gs
out
jl
repnz
and
jbe
leave
cli
cld
dec
cmpsb
and
inc
nop
pusha
nop
push
jecxz
dec
test
subb
push
test
adc
sbb
mov
sbb
xchg
dec
pop
mov
pop
loope
mov
and
xor
out
pop
sbb
movsl
gs
out
imul
in
fstpl
dec
in
or
jp
jl
pop
cmp
jmp
mov
ss
movsl
sbbl
jge
sbb
in
jns
dec
adc
subl
movsl
dec
aad
pop
pop
shll
push
xchg
lea
int3
sti
adc
cmp
push
inc
ljmp
ja
jnp
dec
mov
mov
xchg
jp
jne
cmp
sub
loopne
and
pop
int3
fisttpl
stc
dec
lods
je
test
cmpsb
jne
and
mov
inc
test
jne
add
leave
xor
cmp
or
sbb
dec
mov
inc
test
jne
add
leave
xor
outsl
daa
je
testl
es
fmull
shrb
aas
sbb
push
in
loope
stc
pop
aam
mov
xlat
push
les
cmp
mov
adc
into
xchg
jo
je
daa
in
mov
add
rcrl
fisubrs
mov
cmp
fnstenv
jle
fldl
into
jno
add
xorl
cmc
loopne
loop
jb
push
mov
aad
sub
cmp
sahf
dec
mov
pusha
dec
int3
xlat
mov
pusha
or
mov
sub
xor
xor
xor
pop
cli
leave
mov
xor
fnsave
neg
lods
test
mov
in
iret
fsubl
mov
dec
jae
xchg
outsb
mov
push
fildl
or
jbe
xor
pop
or
mov
sub
pushf
mov
iret
adc
ss
jecxz
pop
cmp
xchg
and
mov
imul
mov
pop
arpl
loopne
test
rcrb
testb
pop
in
loop
and
filds
rcll
mov
dec
testl
cmp
and
cmp
es
sbb
jp
and
sub
jmp
sbb
inc
or
lods
hlt
mov
lods
int
es
jb
push
cmpsb
inc
jnp
popf
xchg
sarb
mov
or
dec
ds
mov
dec
adc
adc
incb
das
daa
jle
inc
shrb
sub
mov
out
mov
mov
stos
testb
lcall
sub
xor
inc
push
mov
cmp
fisubl
xchg
sbb
filds
mov
dec
cwtl
adc
mov
and
decb
push
mov
sbb
cli
adc
xchg
mov
xor
scas
sahf
mov
ficoms
mov
outsb
push
aas
icebp
jmp
pop
popa
jbe
mov
jl
ds
sub
sahf
in
and
pusha
mov
mov
adcl
rcrb
push
add
xchg
dec
insl
out
jge
jle
mov
jmp
cli
push
jp
repnz
mov
mov
repz
sub
mov
out
cld
addr16
xchg
cmpsb
mov
out
jecxz
dec
xor
pop
and
cmpl
sahf
pop
mov
ja
stos
add
sub
mov
and
leave
out
push
outsb
out
sbb
mov
mov
jge
test
sti
and
lods
mov
adc
ljmp
sahf
aad
testb
xor
je
pop
or
mov
xchg
pop
sub
cmp
inc
add
dec
jp
sbb
xchg
repnz
ljmp
and
shll
sub
sub
inc
inc
dec
stos
iret
loop
andl
lods
xchg
jno
loopne
adc
cmpb
sub
inc
mov
adc
test
pop
mov
pop
movsb
aaa
lds
bound
gs
mov
push
and
adc
fmuls
fwait
jns
sub
ja
cmc
flds
add
dec
sub
test
jne
mov
xor
pop
sub
xor
rcr
cs
push
xchg
fnstenv
incb
dec
jne
gs
cli
cmp
sbb
int
outsb
mov
ja
push
lret
ret
insl
jne
fs
je
setnp
test
scas
jg
addr16
mov
mov
loopne
in
out
fcomps
int3
push
mov
mov
pop
fdivrl
imul
test
adc
jg
mov
lea
dec
xchg
ds
jecxz
sub
push
xchg
jb
pushf
adc
and
loope
filds
push
imul
mov
lods
add
pop
scas
mov
push
jp
cmp
pushf
or
stos
mov
nop
jne
pop
movsb
sbbl
jp
imul
mov
or
sarl
inc
subl
test
adc
mov
sub
jg
lds
data16
insb
aad
pop
sbb
xchg
or
push
shll
out
out
pop
mov
add
loopne
cmp
mov
mov
inc
mov
rol
mov
sub
xor
pushl
popa
adc
push
xchg
lock
jl
mov
jmp
inc
xor
cmp
mov
jecxz
cld
fsubrl
push
jg
cmpsl
dec
inc
insl
push
xor
push
mov
xchg
inc
or
inc
jmp
and
dec
sbb
insl
pop
push
jg
mov
push
jecxz
dec
stc
pop
add
dec
mov
int
sbb
repnz
loopne
cs
push
xchg
pop
mov
fisubl
mov
ds
and
ret
mov
sub
jmp
movl
or
iret
adcb
xor
sbb
push
shl
arpl
int3
rcl
push
dec
xor
std
sbb
sbb
or
xor
sub
ret
int
pop
arpl
sbb
mov
add
jle
shlb
xor
lret
popf
sbb
sbb
stos
jb
daa
shll
mov
sbb
mov
and
or
mov
in
add
fistps
jecxz
vpavgw
ficoml
jb
mov
fists
ret
pop
bound
and
rclb
jecxz
fldt
lret
pusha
sbb
dec
in
mov
out
xor
mov
cwtl
xchg
cwtl
test
test
and
mov
xor
pop
dec
mov
sbb
pop
dec
xchg
pop
adc
cmp
mov
rcll
dec
sbb
mov
bound
test
cmc
mov
call
push
adc
jns
cmp
sbb
cmp
cwtl
mov
mov
mov
inc
lods
adc
orb
or
test
pop
xor
lea
sbb
mov
and
ret
jo
push
movsb
lods
mov
add
arpl
loope
jl
cli
loop
jbe
ja
mov
cli
cmpsl
stos
out
xchg
lods
push
popf
and
leave
lahf
cmc
cld
xor
testb
push
sbb
xchg
mov
das
jb
aaa
and
mov
loopne
mov
rclb
sbb
mov
lods
dec
jae
fidivl
jae
pop
insl
testb
loop
mov
popf
pop
aad
push
sbb
xchg
pop
aam
push
push
lods
pop
aam
lcall
faddl
push
fcmovu
fbstp
xchg
push
inc
or
imul
inc
cmp
jmp
adc
inc
xchg
jp
pusha
mov
sbb
or
test
cmp
ss
mov
push
dec
pop
out
das
and
and
mov
clc
xor
mov
sbb
push
dec
sbbl
std
inc
mov
imul
cmp
mov
and
into
mov
mov
and
pop
pop
mov
jecxz
mov
inc
jb
or
lock
dec
dec
adc
push
ds
dec
sbb
mov
push
xchg
add
mov
push
lock
addr16
cmpl
es
cmc
int
sahf
jnp
jae
sbb
sub
imul
adc
xchg
jnp
int3
popf
clc
or
imul
aad
mov
mov
imul
add
xor
and
jne
cli
dec
inc
xor
sahf
fcoml
mov
jmp
ljmp
and
or
jecxz
add
mov
shll
nop
insb
add
mov
push
dec
sub
out
sbb
jno
xor
bound
repnz
test
sbb
sub
mov
imul
daa
sbb
divb
incb
out
ret
lret
ljmp
cmp
add
add
xchg
and
imul
stc
push
sbb
mov
imul
jae
push
fmul
xchg
xor
mov
push
in
adc
add
repz
jmp
clc
lods
sub
add
ljmp
push
andb
rorb
mov
mov
movsl
adc
dec
or
push
ret
rcrb
addr16
inc
test
jp
dec
les
jae
mov
jns
and
push
push
adc
cmpsl
in
lods
daa
adc
aaa
xchg
mov
sbb
out
ds
mov
push
fwait
mov
inc
mov
arpl
inc
out
xor
mov
ljmp
popf
lods
push
ljmp
dec
pop
cltd
lret
or
das
xchg
fistps
xchg
insb
ljmp
sbb
pusha
xchg
adc
mov
cld
adc
inc
out
ret
sub
sub
out
cwtl
jb
mov
rcl
jg
or
leave
rorl
shr
mov
xor
mov
mov
jp
test
lcall
and
lods
out
jecxz
xchg
lea
sbb
lcall
test
add
negb
es
jbe
jae
cmp
mov
add
sub
aas
add
ljmp
and
data16
jo
mov
outsl
pop
and
mov
daa
les
ds
jecxz
cwtl
shlb
mov
adcl
mov
movsl
jge
pop
mov
lods
test
pop
mov
sub
fbstp
lods
gs
pop
aam
mov
add
cmp
call
cmpsb
push
xor
in
mov
sbb
dec
mov
mov
xchg
lds
or
in
arpl
push
jno
sub
ret
add
es
movsl
cld
test
push
add
sbbb
sub
mov
ret
mov
pop
sbb
sarb
mov
sub
push
into
hlt
popw
out
lods
lahf
scas
popf
in
lods
xlat
bnd
sbb
sbb
pop
mov
fdivs
adc
dec
dec
sub
mov
jb
mov
or
mov
mov
aad
mov
adc
inc
xor
mov
push
mov
fs
mov
imul
mov
testb
cmp
mov
push
xchg
adc
mov
test
in
psubusw
int
aam
lret
pop
pop
sub
dec
jp
mov
sub
cld
aad
or
icebp
pop
mov
lahf
cmp
jge
popa
push
pop
mov
stos
fsubs
rcll
fwait
xchg
or
decb
xor
and
cmp
js
loop
mov
mov
cld
jne
mov
cld
dec
ja
cmpsb
pop
push
into
add
pusha
lea
pusha
and
inc
mul
or
xor
repz
mov
jl
in
ret
nop
hlt
inc
jb
ss
orb
mov
cmpsb
incl
jle
inc
in
aad
je
movsb
pushf
std
inc
push
insl
cwtl
ret
sub
xchg
sub
dec
inc
add
loop
pop
inc
addr16
push
aas
mov
repz
cmp
negl
xor
sbb
jne
jne
mov
movsb
pop
mov
fldl
outsl
in
cmpb
pop
and
mov
idiv
lock
and
gs
mov
jge
into
or
push
sub
out
push
inc
xchg
fs
dec
and
out
arpl
mov
out
mov
inc
jmp
ja
icebp
dec
push
les
test
call
addl
jnp
pop
int
push
adc
pop
sbb
dec
hlt
or
into
cli
repz
mov
push
xor
push
sub
mov
jae
jnp
or
pushf
insl
push
xchg
data16
mov
stos
xchg
mov
adc
mov
lds
cmp
lea
cmp
addr16
shrb
jmp
adcl
rclb
dec
mov
xchg
jp
pop
pushf
add
mov
lods
test
or
sbb
je
adc
xchg
pop
xchg
aad
mov
add
jae
mov
mov
xchg
adc
sub
xchg
jge
pop
jg
lods
sbbl
adc
call
test
pop
xor
and
jl
pop
mov
pushf
popa
test
mov
mov
xchg
pop
or
adc
scas
cmp
sbb
test
mov
repz
pop
out
loop
mov
xlat
sbb
aas
imulb
add
js
inc
into
sub
pop
movsb
iret
xlat
cmp
mov
cmc
jns
loopne
inc
aaa
enter
int
dec
adc
lods
shll
jno
jns
mov
sbb
in
push
out
cmp
mov
inc
push
adc
sti
lock
sub
outsb
fldcw
jmp
sub
cmp
inc
add
test
sub
mov
out
add
popa
test
roll
in
jne
lods
or
mov
xor
stos
fnstenv
decl
jo
stos
ficoms
xchg
xor
xchg
mov
jbe
in
clc
sub
jo
sbb
jmp
bound
test
mov
push
mov
pop
out
sub
push
xor
test
xchg
push
sahf
or
mov
test
lock
cmpsl
cmc
daa
adc
mov
dec
jmp
in
add
fstps
jae
cmp
jp
mov
jne
xor
add
xor
flds
jecxz
jg
movsb
sbb
inc
popa
das
mov
add
ja
pop
cld
adc
sbb
add
fsubl
mov
rorb
pop
pusha
stc
mov
clc
push
dec
xor
mov
daa
mov
lock
daa
popa
fisubrl
sahf
pop
sub
mov
cmp
repnz
adcl
shl
xchg
insl
imul
xor
mov
push
cmpsb
outsb
out
xchg
jl
xor
popl
mov
mov
xchg
push
andl
and
sbbl
fistps
in
pop
xchg
xor
in
imul
push
jmp
outsb
xchg
mov
xor
movsb
inc
sub
cld
xchg
shl
cmpb
loop
sti
and
cltd
jge
fucompp
shl
lret
xchg
ja
stos
out
cmp
lahf
inc
fstpl
push
rorl
mov
jge
cmpsb
movsl
out
inc
aam
out
xchg
adc
in
and
adc
push
cmp
xor
xlat
xchg
xchg
pop
scas
scas
xor
mov
scas
test
add
or
stc
cmp
jg
mov
or
pop
fisubl
xchg
mov
jg
cs
or
mov
cmpsb
pop
sbb
sbb
xor
ret
into
cmpsl
push
cmc
aas
cmp
pop
sarb
lret
or
add
push
add
in
or
and
jo
lahf
in
fs
jl
addr16
pop
adc
call
add
mov
adc
mov
sub
jo
sub
fnstsw
scas
inc
pop
push
push
rolb
mov
sbb
adc
jne
in
orl
inc
xor
dec
insb
fildll
and
addb
inc
jno
adcb
sub
inc
outsl
movsl
sbb
jl
mov
or
mov
loopne
test
in
jae
lret
popf
fdivs
xchg
mov
aad
pop
psrlw
mov
mov
js
pop
pop
cmpsl
add
inc
mov
imul
jecxz
stos
xchg
int3
in
adc
in
inc
insl
cmc
das
mov
pop
dec
push
sbbb
mov
mov
jb
push
dec
imul
in
shrl
xchg
js
xchg
jns
scas
push
or
lcall
jp
jb
testl
lret
jmp
xor
mov
push
int3
je
or
fimuls
cmp
data16
divb
inc
pop
push
jecxz
pop
or
and
dec
pop
loopne
in
adc
sbb
inc
xor
rorb
sti
jg
jmp
mov
leave
jae
inc
cmp
orl
mov
ficompl
pop
stc
xor
mov
mov
int3
xor
stos
xchg
adc
add
push
push
ds
mov
test
rol
and
stos
sbb
jbe
test
dec
and
pushf
fdivs
out
orb
sbb
dec
stos
cmc
jl
je
scas
fistps
mov
inc
aam
lcall
cwtl
lods
and
mov
sub
jmp
adc
dec
add
dec
cltd
jecxz
int3
fisubs
adc
movsl
adc
mov
aaa
xchg
das
add
xchg
and
add
ret
jge
rcrb
or
fcoml
loop
mov
into
inc
iret
add
and
inc
sbb
lret
mov
jecxz
add
enter
in
cmp
jb
or
or
jmp
dec
loop
cmpsl
mov
test
icebp
rolb
sub
jmp
inc
push
rorb
mov
mov
xor
jae
push
xor
pusha
mov
inc
test
mov
aam
add
ror
loop
dec
fcmovnb
adc
pop
fcomp
sbb
pop
inc
dec
fwait
adc
fdivrl
xchg
jnp
int3
sahf
xchg
sbb
inc
shl
lock
jg
cld
adc
sbb
xor
jmp
idivl
or
mov
pop
lcall
xorb
push
lret
adc
and
pop
test
int3
call
mov
or
std
loop
arpl
fldcw
pop
mov
pusha
xor
sahf
push
mov
xchg
mov
cmp
or
sub
mov
and
dec
imul
into
das
mov
or
and
mov
mov
insb
enter
repnz
cmpsl
xchg
mov
shrd
xchg
cs
mov
shrb
sub
pop
and
cmp
int
push
fildl
rol
mov
dec
ja
push
xchg
sbb
sub
aad
cld
adc
mov
push
mov
mov
pop
xor
movsl
inc
mov
pop
pop
dec
mov
and
rol
jne
ds
int
xor
inc
cmpsl
std
sub
push
xor
cltd
mov
xchg
add
enter
enter
and
mov
in
ja
xchg
push
mov
rcl
lds
xchg
jne
xor
jmp
dec
xlat
clc
add
orb
pusha
adc
cmp
xlat
xchg
icebp
pop
stos
lock
test
cmpl
sbb
imul
lahf
or
loop
sub
jae
xor
hlt
inc
inc
lret
or
jge
lret
or
dec
sub
jo
nop
sbb
push
aas
fstps
sub
jmp
out
add
cli
and
push
and
mov
dec
jo
sbb
add
fdivr
imul
fwait
loope
and
push
jge
mov
fs
js
xor
xor
sbb
out
adc
repz
rorb
ret
sbb
mov
js
or
sub
cs
push
out
or
dec
add
sub
sarl
mov
in
leave
addb
test
mov
inc
int3
out
xor
push
push
leave
shlb
cltd
pop
jo
pop
mov
prefetchnta
cmp
fwait
jo
icebp
or
cs
jne
repnz
lock
arpl
xchg
xchg
roll
pop
jg
add
xor
or
adcb
or
das
adc
scas
and
repnz
in
sbb
arpl
push
lock
push
xchg
test
rorl
xor
arpl
push
push
push
jg
lahf
adc
cmp
adc
scas
insl
push
xor
cmp
xor
mov
fldl
jo
jae
xchg
test
stos
cmp
jge
mov
lods
cmpsl
test
jns
cmpsb
fdivp
scas
lds
dec
or
lock
leave
cmp
filds
pop
inc
adc
cwtl
je
xchg
lahf
mov
jns
cmp
push
add
jo
fsubl
imul
and
dec
mov
jg
leave
and
lock
std
or
arpl
xor
lahf
clc
mov
and
sarl
arpl
or
push
jo
inc
fs
aam
testl
pop
ja
cmpsb
mov
hlt
shrb
mov
rolb
in
cmp
sub
mov
pop
push
lock
rcll
cmp
fdivrs
clc
test
pushf
repnz
jno
ret
inc
mov
cmp
lret
imul
mov
lods
mov
or
insb
sub
mov
mov
cmp
ljmp
shl
mov
in
in
lock
cwtl
sub
xlat
dec
sub
xchg
add
shrl
lods
iret
notb
pop
inc
cmpsb
outsb
jne
hlt
push
jl
test
daa
sub
adc
sbb
ds
loope
mov
dec
inc
adc
inc
push
xor
repnz
sbb
pop
add
adc
mov
imul
mov
add
leave
xor
cmp
or
sbb
dec
mov
inc
test
jne
add
leave
xor
aaa
test
cmc
sbb
movsl
dec
jne
inc
test
mov
add
rcr
ror
mov
mov
imul
adc
mov
jb
popf
sbb
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
hlt
add
mov
add
mov
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
das
cmc
add
sbb
add
adc
add
or
add
add
add
cld
hlt
add
hlt
hlt
add
in
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
cmc
add
push
cmc
add
pop
cmc
add
jo
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
call
testb
xor
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
test
add
mov
add
xchg
testb
pushf
testb
movsb
testb
lods
testb
mov
add
testb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
loopne
add
call
testb
or
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
shl
add
testl
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
clc
add
jl
add
je
add
insb
clc
add
fs
add
pop
clc
add
push
clc
add
dec
clc
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
test
add
mov
add
mov
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
dec
stc
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
in
add
in
stc
add
hlt
stc
add
cld
stc
add
add
add
or
add
adc
add
daa
cli
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
inc
cli
add
dec
cli
add
pop
cli
add
insb
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
