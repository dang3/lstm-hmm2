aas
movl
add
cmpsl
add
xchg
xor
add
movl
add
movl
add
xor
add
subl
pop
sbbl
xor
jmp
push
popl
push
xor
mov
mov
mov
lods
mov
pop
jmp
stos
mov
lcall
mov
or
jbe
pop
push
ja
pop
scas
in
out
mov
pop
jge
out
in
mov
pop
jns
aas
mov
xlat
outsl
cmc
daa
jbe
andb
add
xor
je
dec
push
mov
ret
push
mov
add
push
push
push
push
mov
push
and
mov
popl
mov
jb
call
mov
out
add
test
js
lock
sbb
pop
lods
orb
daa
icebp
and
dec
test
icebp
sbb
iret
test
gs
jnp
test
xlat
pop
repz
aas
mov
push
jb
push
sbb
dec
xlat
popl
mov
add
pushl
mov
add
add
push
popl
mov
add
push
popl
xor
lea
mov
add
mov
push
popl
xor
rol
xor
sbbl
jne
push
mov
addw
addw
sbbl
pop
inc
cmpb
jne
cmp
je
push
mov
or
popl
mov
inc
cmp
jb
mov
add
movzwl
mov
add
subw
jb
call
or
call
arpl
sub
sbb
lds
push
sbb
cli
dec
sub
sub
jb
out
jmp
daa
setle
jge
jnp
jb
lock
jbe
insb
inc
sub
popf
jns
xchg
mov
mov
pop
shlb
sub
cmp
mov
pop
and
imul
loope
pop
adc
ret
imul
mov
popl
mov
add
jmp
jo
mov
jmp
sub
xchg
pushf
xlat
cmp
test
es
add
sub
insb
and
xlat
xor
pop
sub
bswap
pop
jmp
shlb
or
mov
dec
mov
mov
lret
test
mov
sbb
sbb
test
jp
popf
lret
gs
sub
iret
int
fs
mov
adc
mov
cmp
insl
into
jne
repnz
sbb
cmp
push
xor
ret
jbe
cmp
jae
pushl
pushl
push
lea
add
shr
mov
sub
xchg
addl
pushl
popl
pushl
call
call
pop
pop
and
jl
push
mov
subl
orl
movw
subb
pop
pop
pop
leave
ret
call
test
jne
jmp
lods
lea
lcall
sbbl
jp
mov
fimuls
filds
mov
js
imul
movsl
jmp
push
cmp
adc
hlt
jle
cmp
lock
xchg
arpl
gs
xchg
test
adc
fiadds
test
mov
sbbl
daa
add
add
jb
je
shll
lcall
mov
and
inc
inc
lea
xchg
inc
cmpsb
push
bound
mov
fsubr
call
mov
sub
xchg
addl
push
call
sbbw
jno
call
rorl
cmp
push
xchg
pop
std
imul
lret
xchg
das
rol
mov
jne
and
dec
push
data16
inc
add
insb
mov
mov
adc
lret
mov
imul
xor
icebp
jmp
inc
nop
test
insl
mov
insl
or
adc
push
xor
mov
xor
xchg
mov
pusha
call
mov
push
not
mov
ror
mov
mov
not
not
mov
xor
xchg
addl
jmp
and
call
xchg
sub
dec
rcll
xchg
jne
mov
cmpsb
loopne
fwait
repnz
inc
or
ja
cld
pushf
in
pop
test
add
jmp
adc
mov
dec
ss
mov
lret
inc
add
and
fwait
or
enter
xor
cmp
gs
es
cmp
adc
in
inc
mov
push
sbb
add
pop
ljmp
xchg
ja
daa
hlt
xchg
lods
push
call
cmpl
jne
jmp
jmp
popa
pusha
call
mov
push
shr
ror
mov
add
xchg
pushl
popl
jb
call
repz
or
rcll
enter
cmpsb
sbb
in
cmp
mov
pop
xchg
out
enter
popa
mov
jle
inc
adc
loope
shlb
adc
outsb
ret
jecxz
loopne
test
sbb
aas
rcrl
stos
gs
aas
popa
xchg
adc
add
push
call
mov
mov
xor
xor
rol
inc
dec
jne
jmp
push
jb
pop
xor
xor
ss
sbb
movsb
cs
or
filds
push
rcll
push
add
aam
xchg
push
and
dec
ljmp
jno
sbb
adc
sub
lea
leave
clc
out
rorl
jmp
aam
adc
jge
cli
loopne
mov
shl
inc
pop
mov
jns
and
ds
cmp
je
cmp
jne
popa
shl
push
xor
push
call
int3
jmp
push
popl
popa
shl
push
xor
push
orl
js
push
mov
orw
addl
andw
pop
call
push
mov
push
jmp
push
popl
pop
mov
push
push
push
mov
mov
push
popl
jae
call
jp
lock
sub
syscall
mov
cli
inc
loop
movb
mov
aaa
pop
mov
rcr
sub
mov
adcb
hlt
movsb
inc
incl
int3
inc
pop
leave
adc
xor
xchg
sbb
jg
mov
loope
mov
push
push
leave
popl
rep
pop
pop
push
push
shr
mov
xor
pop
push
xor
jmp
sub
mov
add
sub
mov
add
jmp
into
mov
lret
cmp
negb
test
ja
int
or
or
call
push
or
pop
out
scas
rclb
xor
or
cmp
push
add
pop
inc
add
fildll
aad
sub
xchg
prefetch
or
sub
jp
ret
or
push
lcall
rorb
test
incl
mov
shr
shl
mov
jmp
push
popl
sub
mov
cmp
jne
mov
add
cmpw
jne
ret
call
xchg
data16
orb
mov
popa
stos
enter
cmp
into
clc
cld
mov
or
dec
and
rorb
mov
inc
cmp
aaa
shll
lock
lods
cmpsb
pop
cmp
dec
fisttpl
fadd
xchg
test
sbb
add
mov
fidivrl
sbb
movsb
and
inc
fisubrs
setbe
add
sbb
in
pop
and
push
pop
pop
mov
and
mov
shlb
in
mov
pop
add
adc
mov
lea
je
insb
push
imul
sub
jp
pop
inc
es
dec
aaa
pop
or
shlb
les
mov
jl
mov
pop
or
loopne
stc
insb
or
or
imul
out
int3
pop
dec
ja
test
sub
stc
ljmp
nop
mov
and
sbb
movsl
data16
jp
aaa
mov
jmp
adcl
xchg
mov
outsl
add
xor
cmp
xchg
push
test
das
popa
inc
sbb
sub
int3
add
jge
fwait
outsb
insb
mov
lahf
pop
sub
add
aam
jg
scas
sub
cwtl
data16
movsl
pop
ret
data16
ja
iret
dec
xchg
data16
push
test
xor
mov
xor
leave
jbe
push
jl
jnp
outsl
xor
shrb
and
test
aaa
sbb
dec
iret
imul
dec
jp
mov
and
adc
daa
dec
fdiv
repz
out
gs
mov
mov
inc
push
cwtl
in
xchg
xchg
addr16
mov
repnz
push
loope
daa
into
in
xchg
fisubl
sahf
dec
sbb
mov
popa
fstpl
pop
mov
lcall
ret
sub
es
notl
adc
pushw
and
sahf
cmp
fidivs
ja
loope
in
stos
xor
jl
dec
data16
sub
xchg
insl
push
dec
sar
leave
push
scas
sbb
sbb
mov
les
fwait
jl
jo
imul
cmpsl
outsl
test
mov
jae
or
pop
xchg
inc
jo
sahf
dec
adc
mov
cmp
sahf
dec
les
jg
pop
cld
aas
sti
sbb
daa
and
cmpsl
call
xchg
xorb
sub
jno
push
inc
inc
jmp
dec
lods
into
add
jge
or
popa
iret
ds
lds
xchg
dec
push
push
nop
scas
loopne
repz
and
sbb
pop
fcmove
cmp
mov
sub
xchg
sbb
dec
add
icebp
cld
insb
jne
xor
sub
imul
and
iret
testl
push
icebp
test
mov
inc
jne
pop
cmp
sarl
xor
nop
mov
test
mov
jns
mov
test
pop
and
out
lahf
jp
mov
and
jge
cmpsl
loop
mov
and
push
test
mov
cmp
mov
inc
mov
popl
dec
test
sub
mov
jb
bound
sbb
jo
stos
xchg
mov
sahf
dec
xchg
out
lret
add
or
mov
cmpsl
adc
popa
push
rorb
pusha
flds
push
mov
and
dec
test
mov
push
push
xchg
data16
inc
dec
pop
dec
fcompl
test
testl
jno
xor
mov
dec
xchg
dec
outsb
movsl
sub
mov
mov
popa
iret
dec
inc
outsb
jno
push
mov
pop
and
int
mov
xchg
and
mov
cmp
ljmp
rolb
add
jge
shrb
cli
xor
nop
or
inc
xchg
mov
imul
das
lcall
jmp
pop
sub
pop
iret
or
inc
out
stc
or
outsl
int3
sub
cmp
movsl
aad
push
fists
mov
test
mov
jno
stos
add
das
mov
insb
xchg
adc
sbb
sahf
dec
xchg
dec
xor
jmp
inc
fdivp
push
dec
dec
hlt
aad
mov
sbb
call
xchg
push
xchg
outsl
adc
sub
mov
dec
xor
jecxz
push
xchg
mov
sahf
rclb
mov
dec
xchg
mov
jmp
dec
jp
mov
and
xlat
dec
test
pop
das
jg
fwait
jle
ftst
and
scas
movsl
cmpsb
fnsave
fs
mov
mov
les
and
je
xor
pop
ljmp
ja
data16
mov
adc
push
adc
xchg
xor
cmp
inc
push
ret
add
mov
aaa
jg
or
scas
testb
xchg
mov
jne
scas
dec
xchg
mov
inc
cmp
outsl
push
push
fcoml
push
fistpl
cmp
mov
dec
daa
mov
lds
cmpsb
movsl
movsb
push
scas
in
mov
dec
mov
xorb
addl
mov
inc
inc
divl
dec
popf
jle
jmp
cmpsl
sbb
aam
inc
or
popa
xchg
dec
mov
dec
mov
adcl
pop
sub
xchg
xor
loope
pop
cli
mov
sub
push
pushf
mov
test
ret
or
jne
lret
dec
xchg
cmpsw
insb
sub
add
aas
and
xor
inc
adc
sarl
lahf
insb
adc
sub
push
xor
movsb
jns
rcrb
sub
loop
fwait
jb
push
cmpsl
adc
ret
andb
inc
lock
inc
mov
and
pop
adc
addr16
cmpsl
mov
mov
andl
inc
jne
sahf
addr16
sahf
hlt
imul
push
and
and
movsl
and
push
aaa
stos
inc
push
inc
icebp
xor
jg
pop
jns
cmp
push
std
sahf
dec
xchg
jle
pusha
fwait
pop
popf
sub
adc
jp
jae
jge
mov
pusha
jbe
into
xchg
data16
inc
jmp
dec
ds
roll
sub
add
mov
repz
imul
xchg
data16
std
ljmp
daa
push
lock
pop
mov
and
xchg
mov
bnd
jp
xchg
jo
xor
and
or
pop
jbe
aam
dec
xchg
data16
mov
jae
les
lret
sub
add
data16
mov
aam
insl
int
dec
push
adc
lods
or
cmpsb
dec
xchg
icebp
jae
fs
sub
cmp
sahf
dec
in
ja
mov
push
insb
sbb
mov
and
cli
loopne
xchg
pop
add
divl
sub
scas
ret
cwtl
ss
jno
or
int3
jne
jae
out
or
mov
add
add
jmp
dec
aam
xchg
xor
mov
loope
mov
movsl
bound
mov
xor
clc
adc
incb
mov
clc
dec
jmp
push
std
cwtl
mov
ret
xor
shl
popa
xchg
cwtd
jle
jmp
in
sub
loope
std
inc
mov
mov
nop
adc
lcall
hlt
dec
mov
jmp
ds
pop
mov
and
pop
and
shrl
movsl
adcb
add
or
shlb
into
loope
inc
sub
adc
xchg
cmp
add
push
sahf
dec
jmp
jg
ud0
lret
in
add
sbb
rolb
aaa
push
ja
xchg
lds
mov
test
das
les
dec
ljmp
xor
jo
dec
pop
pop
loope
inc
int3
rorl
mov
out
pop
mov
out
ss
mov
dec
jbe
inc
fidivl
pop
or
dec
xchg
cld
fstps
lcall
sbb
cs
mov
in
mov
lds
cmp
or
xor
les
sub
xlat
push
push
insl
outsl
push
cwtl
push
push
xchg
aam
arpl
or
roll
adc
loope
mov
cwtl
add
rolb
mov
mov
or
scas
in
sub
pop
hlt
movsb
les
cmp
jnp
mov
and
movsb
fwait
pusha
mov
ds
xchg
aad
add
dec
sbb
dec
test
je
aam
fdivrl
dec
push
mov
add
jmp
imul
and
aaa
mov
mov
ficomps
and
cld
dec
jb
in
sbb
adc
mov
icebp
ja
mov
mov
das
sbb
jno
mov
out
adc
pop
jne
jno
mov
mov
icebp
int
arpl
pop
sbbl
les
bound
mov
mov
testb
popa
and
xchg
data16
addr16
cmp
fdivrs
adc
xor
xchg
wbinvd
jno
jle
shrb
cmpsl
jnp
jns
in
loope
scas
mov
in
lods
lds
lret
jecxz
adc
push
int
push
xor
xor
xor
pop
test
adc
push
popf
aas
mov
nop
popf
aas
mov
jl
jae
cwtl
sbb
lods
sbb
push
iret
xchg
push
dec
or
xchg
pop
push
pusha
add
testb
lods
ret
les
loop
movl
pop
aam
dec
xchg
data16
fcoml
cs
mov
lock
sub
lods
icebp
stos
dec
stc
movsl
in
inc
mov
mov
xchg
adc
mov
jle
mov
and
aam
dec
xchg
data16
popf
push
movsl
push
fsts
sti
adc
jecxz
jmp
mov
push
pop
adc
mull
mov
pop
mov
sub
dec
xchg
data16
push
lahf
mov
icebp
mov
or
mov
pop
mov
andl
fmulp
scas
imul
sti
sahf
dec
nop
fsubrl
loope
cwtl
stos
cmp
sahf
cmp
mov
cmp
push
mov
movsb
pop
xor
push
xchg
popw
mov
xchg
mov
push
test
mov
ljmp
cmpb
push
or
lcall
mov
enter
xor
scas
sbb
pushf
push
add
push
test
lret
mov
mov
pushf
aam
push
leave
mov
inc
and
pop
rclb
xchg
xchg
jno
loop
push
and
fs
mov
and
sahf
dec
loope
fistpl
sub
xor
or
int3
hlt
stc
negb
iret
cmp
addb
sahf
into
inc
push
shll
dec
cmp
pop
pop
push
fisubs
dec
or
mulb
mov
jl
push
insl
inc
mov
addr16
sub
push
jmp
sti
dec
xor
and
push
or
imul
or
cmpl
mov
sbb
pop
cmp
ffreep
or
adc
call
push
adcb
xor
sub
insl
hlt
xor
and
cmp
mov
dec
shll
sub
jae
sarb
hlt
xor
in
ss
mov
ljmp
jns
push
stos
adc
aas
add
lods
add
orl
lods
dec
xchg
icebp
add
imul
add
call
pop
repnz
mov
xchg
repz
pop
sub
cwtl
jg
arpl
cmp
sbb
mov
repnz
push
sub
cmpsb
cmp
xor
xor
pop
ficomps
cmpsl
add
lahf
dec
outsl
xor
jp
fmuls
pop
arpl
mov
mov
cmp
mov
in
das
faddp
imul
call
int
testb
jbe
jmp
mov
out
pop
mov
xchg
data16
mov
fwait
out
test
pusha
aad
pop
mov
leave
lock
mov
adc
jno
inc
hlt
jl
popf
dec
daa
jmp
jmp
test
loop
push
movsb
loope
pmaxub
cmc
mov
sbb
pop
leave
jno
mov
or
xlat
call
jne
shll
out
adc
add
rorb
fs
or
cmp
mov
fildll
pop
and
add
das
stos
fs
jmp
xchg
stos
mov
ret
lea
sahf
or
pop
pop
mov
scas
push
sub
fisttpll
or
lods
xor
fcmovnb
xchg
jns
addr16
push
leave
je
push
cmc
test
adcl
inc
lods
dec
xchg
push
hlt
lret
push
adcb
cmp
add
std
add
test
push
or
mov
mov
inc
mov
xchg
jbe
loopne
jmp
lods
jl
push
lcall
loope
call
cmp
data16
or
das
xchg
cli
sahf
mov
pusha
int3
mov
aas
testl
testb
lods
xchg
xchg
pop
inc
ss
inc
jmp
dec
out
mov
xor
and
jl
fwait
in
mov
adc
jge
sbb
jne
sub
fisubl
pop
adcl
std
mov
add
fisttps
mov
jne
mov
mov
lret
push
pop
mov
test
leave
xlat
mov
xlat
xchg
data16
xchg
aaa
mov
iret
into
pop
cwtl
adc
mov
sti
repz
sbb
in
insb
aad
popa
leave
xchg
add
cmp
insb
mov
mov
rcrb
sub
ss
sub
xchg
pop
add
cmp
adc
mov
ss
mov
pushl
jmp
es
push
lret
pop
fimull
pop
and
sbb
adc
xchg
sarl
stos
in
test
mov
adc
shlb
push
jo
dec
sub
cmp
ds
iret
or
or
mov
lcall
imull
adc
pop
lahf
test
les
cmp
shlb
je
sahf
mov
jnp
mov
cmp
sbb
xchg
dec
rcrl
outsb
adc
jns
arpl
insb
imul
lahf
add
cwtl
lcall
pushf
js
xchg
mov
imul
xchg
mov
and
pusha
or
pop
shl
es
sti
mov
mov
cltd
leave
jmp
inc
addr16
and
inc
int3
dec
lret
in
dec
inc
jl
xchg
data16
cmp
sub
sub
mov
test
cmpsl
aaa
movsb
sbb
mov
test
int
adc
add
or
xor
rcrb
jp
lds
sub
xor
test
lret
movsb
adc
movsl
mov
aas
in
mov
adc
jg
mov
mov
movsl
std
gs
loop
ret
mov
and
and
mov
jmp
jae
mov
test
adc
stos
and
push
push
call
pop
sti
lcallw
mov
insl
loope
pusha
pushf
out
pusha
fldcw
sbb
je
inc
cmp
mov
cltd
jae
iret
jp
mov
xorb
sub
inc
pop
lock
jbe
jns
push
adc
push
cmp
sahf
dec
pop
ja
pop
inc
jmp
dec
bound
pop
and
dec
cmpsb
xor
insb
mov
test
dec
mov
call
ret
sbb
push
loop
cli
and
mov
pop
negl
mov
sbb
mov
inc
pop
xchg
dec
int
mov
int3
inc
add
je
cs
andb
cltd
shl
pop
jl
movsb
mov
das
push
add
push
mov
xchg
xor
cmpsb
and
out
rcrl
outsb
xlat
bound
sbb
sahf
dec
xchg
push
iret
xor
cmpsb
lret
sti
cmpsl
jae
icebp
xchg
and
loope
icebp
bound
mov
int
pop
cmp
push
jbe
pusha
and
sahf
fcom
jbe
push
sub
xchg
aaa
mov
xor
add
adc
data16
inc
mov
mov
inc
sahf
push
sahf
mov
cmp
into
aad
xor
mov
emms
mov
sub
cmp
lahf
lds
scas
inc
lahf
cmp
cmp
sbb
or
stos
repnz
mov
inc
mov
dec
mov
mov
and
lods
sarb
kmovb
mov
and
fcmovnb
in
adc
bound
into
mov
std
mov
shrb
jl
xchg
pop
js
leave
lcall
lods
pusha
mov
shrb
mov
lods
lock
xor
das
push
inc
enter
sbb
xchg
xor
jmp
int
dec
fistpl
push
rcll
mov
or
les
jl
mov
xor
cwtl
dec
push
test
mov
and
push
out
ret
imul
sbb
pop
loope
or
add
inc
push
or
pop
and
dec
jmp
mov
jo
mov
nop
dec
xor
scas
sub
mov
cmp
jp
pop
add
mov
test
data16
or
sbb
cmp
inc
jp
sub
xor
dec
xchg
cmpsw
and
jmp
pop
and
rorl
and
sub
mov
mov
pop
xor
pop
and
mov
xchg
pushw
xlat
scas
or
mov
decl
mov
mov
cltd
xchg
or
test
jbe
loope
jp
fdivs
add
popa
lcall
push
shrb
pop
mov
insl
pushf
sub
in
mov
adc
call
xchg
dec
ret
pop
and
aam
incb
jge
jne
fs
mov
push
pop
repnz
fmuls
or
mov
test
cpuid
pop
pushf
movsb
sub
inc
mov
push
jmp
jb
cld
sarb
pop
fdivl
xor
or
cmp
test
int
push
mov
lret
arpl
sbb
or
adc
inc
jge
ljmp
sbb
xchg
in
in
mov
andl
daa
aad
xchg
data16
in
std
stos
jl
jmp
xor
imulb
popa
fstpt
lret
pop
xor
and
mov
in
mov
cmpl
scas
inc
jp
and
mov
in
mov
xchg
data16
lahf
in
pop
rorl
stc
push
testl
mov
jns
push
mov
pop
and
sub
mov
insl
adc
add
xchg
int3
mov
jmp
rorb
jmp
movsl
sbb
xchg
inc
xchg
lret
jns
cmpsb
not
inc
dec
inc
xor
sbb
adc
sbb
ret
roll
repnz
pop
pop
xor
sub
cmp
adc
xchg
data16
pop
xor
push
sub
lea
add
psrlq
imul
and
cmp
inc
shll
mov
sahf
jnp
in
aaa
mov
or
jo
rorb
jmp
cli
rol
sub
clc
cwtl
add
ljmp
fistl
in
fdivp
lret
call
jmp
adc
aam
dec
xchg
cwtd
jb
jmp
jns
add
push
bound
mov
push
push
sbb
data16
pop
into
cmpsl
mov
fsub
jb
push
pop
jmp
test
xchg
je
mov
xor
jecxz
jp
cmp
inc
fidivrs
fisubs
enter
push
jp
fsubl
cmp
repz
lea
clc
pop
inc
dec
cld
push
push
jae
inc
dec
jmp
dec
jb
mov
sub
dec
je
push
cltd
stos
sbb
xor
scas
mov
and
daa
cmp
test
mov
xlat
xchg
data16
xchg
notl
imul
cmp
sahf
cmp
stos
scas
cmp
repz
pop
sarb
push
repnz
xchg
pop
das
rorb
push
scas
dec
mov
push
xor
and
lds
pop
data16
jge
das
dec
jge
sbb
mov
mov
sti
sub
addl
stc
xchg
mov
jbe
js
scas
out
jns
adc
push
dec
pop
ja
shlb
ljmp
scas
jl
mov
stc
lret
nop
rclb
cs
lret
imul
adc
movsl
mov
inc
mov
jp
xlat
cwtl
mov
cs
cmpsb
pop
arpl
jmp
fdivrs
std
ja
jmp
imul
and
sub
inc
mov
test
lds
aas
adc
push
cmp
sahf
popf
jns
lret
pop
and
rorl
data16
faddl
sub
push
mov
ret
cmc
mov
int
popf
mov
mov
out
inc
inc
jbe
aas
inc
and
pop
jecxz
adc
orb
cmp
shll
mov
mov
fdivrs
xlat
sbb
jno
ljmp
lcall
pop
and
ljmp
cmp
shl
dec
loop
jle
mov
adc
or
pop
xor
insb
shll
or
push
push
loope
xor
outsb
pusha
add
les
or
pop
xorl
scas
ljmp
ds
mov
mov
sahf
dec
xchg
into
or
insb
and
fs
cmpsl
imull
jnp
dec
int
test
data16
jae
icebp
out
negl
movsl
loopne
mov
popa
dec
jecxz
push
xchg
mov
push
aas
jmp
dec
pop
ja
shlb
ljmp
dec
or
jle
adc
rol
in
sub
movsl
divl
stc
inc
sahf
mov
xor
sub
ss
andb
setle
xchg
ljmp
pop
mov
out
fwait
repz
cld
outsb
cltd
mov
jl
enter
dec
xor
sbb
fwait
jle
das
ftst
cld
test
inc
repz
pushw
fldcw
xchg
stos
outsl
push
lahf
outsb
bound
mov
jle
mov
dec
out
sbb
loopne
xor
stos
stos
ret
add
sahf
fbstp
stc
cli
xchg
and
insb
xorl
mov
in
mov
sub
jne
jmp
sub
mov
push
mov
cmp
cmpsb
int
sbb
jmp
push
sub
lcall
sub
adc
loop
fwait
js
cwtl
fstpl
cmpb
pop
adc
mov
pop
adc
push
andb
or
fcmovbe
bound
sub
scas
adc
fstpl
xor
insl
stc
data16
and
adc
and
data16
jo
rorl
add
test
movsb
sbb
or
add
mov
inc
in
sub
mov
push
ret
mov
mov
subl
mov
addr16
jne
scas
pop
mov
fdivrp
repnz
cmp
pop
jns
dec
xlat
pop
and
es
lods
in
or
sarb
orb
cltd
aam
xor
jecxz
or
aas
pop
xchg
pushw
and
cmp
stos
pop
push
xlat
pop
and
mov
mov
loop
lds
mov
adc
clc
dec
inc
popf
dec
rcll
scas
cmpsb
dec
out
pushf
dec
inc
dec
call
fdivrl
jmp
loope
inc
mov
cltd
mov
jmp
and
lea
cmp
jle
pop
and
insb
pop
dec
cwtl
push
lahf
popf
lahf
mov
iret
push
test
push
adc
mov
loop
out
fldenv
mov
mov
imul
je
jmp
lret
std
test
jns
and
jno
arpl
icebp
fadds
jae
jbe
jmp
gs
cmp
data16
push
fsts
adc
or
sbb
sbb
mov
mov
scas
dec
cmpsb
ss
data16
xchg
pop
push
shll
addr16
iret
or
push
jbe
pop
jl
ljmp
and
mov
cmpsb
jg
sub
mov
or
in
push
frstor
cmc
push
inc
jmp
insb
add
jo
mov
daa
push
sti
sahf
dec
xchg
jg
xor
leave
lahf
insb
addr16
xchg
ja
jge
daa
mov
out
and
xchg
scas
dec
push
rcrb
dec
push
or
adcb
cmovns
daa
fstps
shrb
mov
mov
mov
movb
or
jmp
dec
sbb
loope
mov
sbb
inc
pop
dec
xchg
loopne
cmp
hlt
mov
mov
mov
push
in
lahf
rorl
jae
mov
xchg
mov
jb
mov
fstpl
test
sbb
jge
or
inc
sub
cltd
imul
ss
data16
bound
icebp
aam
push
xlat
cmpsb
inc
cmc
mov
cmc
dec
out
cs
in
outsb
ret
dec
cmp
out
aam
push
test
inc
cld
or
jb
imul
jne
adc
adc
dec
inc
push
mov
mov
aam
mov
adc
sub
xchg
lods
inc
outsw
cmp
aam
dec
xchg
push
push
and
fs
pop
dec
push
jnp
or
push
adc
mov
mov
cmp
stos
popa
das
add
ljmp
jmp
dec
sbb
mov
xchg
cltd
dec
repnz
and
xchg
scas
push
adc
xchg
mov
negl
outsb
jo
add
push
hlt
xor
pop
imul
add
mov
cmpsb
nop
enter
and
mov
sub
test
push
fstps
sbb
stos
xor
cmp
lret
mov
int3
icebp
pop
xchg
cmp
mov
mov
arpl
jb
jp
filds
das
adc
loop
in
cwtl
cmpl
add
out
idivl
dec
mov
inc
pop
sbb
lea
or
sbb
cmp
push
cmpsl
jmp
test
jo
xor
shlb
mov
scas
xlat
xchg
data16
lock
sub
inc
aam
lea
adc
add
js
adc
inc
xchg
cmpsb
data16
xchg
idivl
mov
and
dec
jl
in
lods
xlat
xor
das
mov
jne
sbb
pop
into
dec
jae
inc
in
xchg
adc
aam
cmp
sahf
popf
jp
mov
and
aad
sahf
movsl
pop
shl
imulb
cmp
mov
mov
xchg
mov
jb
adc
scas
jae
nop
cmp
jae
cld
lret
js
data16
ss
dec
fs
and
fwait
jo
ret
xor
loopne
shr
pop
pop
stos
sub
and
mov
pop
and
pop
mov
mov
and
lods
rcl
data16
or
mov
fadds
mov
mov
or
dec
data16
adc
mov
subl
adc
or
scas
jns
mov
fs
and
xchg
data16
sahf
dec
xchg
jmp
scas
pop
push
mov
scas
dec
xchg
data16
je
pop
pop
pop
std
xor
inc
pop
or
jo
pop
jmp
jb
test
sahf
dec
jl
popa
or
fcmovb
sarl
popf
mov
clc
xor
adc
push
jae
icebp
cltd
popf
mov
aam
cmp
jle
jbe
jmp
test
xchg
pushw
and
sahf
ss
addr16
cmpsl
jecxz
pop
push
xchg
mov
and
fimuls
cwtd
jp
jmp
repnz
dec
popf
xlat
mov
add
in
jmp
mov
push
jmp
sahf
dec
xchg
jmp
fisttpl
pushw
and
sahf
or
pop
nop
cs
js
lds
add
lock
testl
cltd
add
inc
mov
push
repnz
stos
sub
rorl
jmp
dec
dec
imul
xchg
data16
add
rclb
ljmp
xor
sahf
xor
mov
push
jle
cmc
addr16
fisttps
movsb
and
adc
push
jl
mov
loop
adc
pop
loopne
xchg
sub
pusha
xor
cld
in
scas
xor
xchg
xor
sub
sub
ljmp
ljmp
fsubl
jae
xchg
fnstenv
xchg
lret
cltd
sub
popf
pop
cmovo
test
xor
shrl
ljmp
xchg
sbbb
pop
jae
shrb
repz
adc
jmp
dec
shrl
jl
imul
imul
aaa
rcrl
inc
shlb
int3
mov
xchg
pop
mov
pop
push
dec
std
cmpsb
pop
sub
xchg
data16
push
ret
fimuls
dec
stos
out
mov
cmpsb
sbb
adc
mov
push
pusha
mov
mov
in
call
jp
mov
and
flds
push
sub
dec
xchg
add
fisubs
ja
cmp
inc
xchg
aam
add
js
out
mov
jmp
ss
mov
les
inc
sbb
inc
test
lods
mov
mov
mov
hlt
dec
vandps
rcpps
in
jo
addr16
pop
cmp
adc
dec
dec
call
test
mov
es
mov
movsl
bound
arpl
shrb
push
nop
sahf
mov
pop
pushf
cmpsb
sub
jge
mov
and
iret
inc
mov
xor
sti
addl
pop
jnp
out
lahf
jns
rcrb
out
adc
ds
xor
mov
jecxz
in
imul
sbbl
or
jae
jbe
mov
jno
mov
enter
insb
mov
pop
je
and
data16
js
xor
stc
inc
xor
mov
cltd
xor
cmp
mov
mov
repnz
cmp
mov
jmp
adc
push
stos
xchg
mov
rcr
cmp
sbb
push
xchg
iret
push
cmp
mov
icebp
mov
jp
xor
or
insb
xor
sbb
mov
dec
pop
cmp
aad
das
aas
addr16
pusha
int3
imul
cli
icebp
sub
and
out
fidivl
popf
xor
pop
dec
pushl
lahf
lea
pop
les
jecxz
push
sti
sahf
dec
xchg
imul
xchg
pop
pusha
sbb
jmp
mov
and
mov
xchg
data16
das
pop
dec
inc
shlb
and
or
cmp
out
ss
mov
push
dec
mov
jmp
dec
addr16
imul
iret
aad
inc
or
xchg
sbb
pop
lahf
pop
scas
popf
out
inc
mov
mov
bnd
ljmp
fsubp
ljmp
and
fcomps
adc
cmp
xchg
mov
mov
push
cmp
shrl
subb
mov
scas
movsl
lods
sahf
pop
xchg
cwtd
andb
xchg
ss
mov
ljmp
daa
xor
test
out
xor
mov
xchg
scas
pusha
cmpsb
sarb
fwait
mov
adc
in
mov
andb
sub
repz
cmp
pop
dec
cmpsb
xor
dec
and
push
and
mov
add
fs
pop
xchg
data16
jbe
test
imul
jl
jp
mov
xchg
data16
aam
mov
mov
out
mov
mov
call
lea
sahf
sti
mov
push
mov
pop
xor
jl
stos
inc
jecxz
std
jb
lds
iret
aad
sbb
out
insl
adc
jne
push
mov
adc
dec
xchg
data16
scas
shl
and
and
gs
mov
dec
mov
es
sahf
mov
mov
int
outsb
arpl
push
data16
lret
mov
cltd
xchg
int
inc
pop
jl
aas
int
fisttpl
jp
rcl
jno
in
cwtl
mov
int
ds
cmp
dec
inc
mov
cmp
filds
mov
push
pop
sub
daa
sbb
testl
dec
or
add
xchg
push
xchg
push
leave
push
test
arpl
mov
pop
rcr
aad
pop
and
pop
and
lock
jmp
mov
xchg
adc
shll
mov
sub
dec
lods
mov
jle
mov
lods
and
in
and
mov
adc
mov
add
out
push
push
xlat
xchg
test
lret
call
mov
xorb
xchg
icebp
add
jns
data16
mov
mov
stos
dec
fst
insl
xchg
mov
or
shll
cmp
push
jns
mov
push
xlat
ret
psubusb
pop
rorl
mov
xchg
mov
inc
roll
out
hlt
scas
adc
int
int
addr16
loop
adc
js
adc
jns
repnz
push
adc
sub
and
int3
xchg
push
sarl
fldenv
inc
iret
cli
adc
cmc
or
xor
inc
jne
xchg
or
push
cmp
dec
jo
shl
int
int
xor
cmp
sti
push
out
cltd
fldcw
xchg
popa
scas
inc
scas
push
imul
out
cwtl
xchg
addr16
and
cld
mov
jmp
popa
vxorps
xchg
ja
ss
mov
lea
cld
shll
psubusw
js
jle
lods
rolb
scas
pop
mov
imull
and
inc
push
stc
mov
pop
jnp
ret
test
test
jle
sbb
or
sbbb
testb
mov
gs
lods
rcll
push
movsl
test
dec
aas
sbb
xor
sub
rcr
mov
mov
sbb
pop
dec
pop
cvtpi2ps
xchg
mov
sahf
in
cwtl
js
dec
add
fisttpl
cmpsl
jae
or
cmpb
and
jb
push
or
fdivrl
sub
jnp
mov
and
mov
mov
sub
mov
push
rorl
push
pop
mov
jbe
pop
sbb
fwait
je
add
mov
dec
dec
jne
mov
inc
dec
lcall
push
xchg
data16
or
pop
pop
adc
outsb
pop
push
sbb
cltd
je
jmp
out
aaa
sub
and
cltd
aad
jb
adc
enter
xchg
cltd
icebp
scas
pop
lcall
jg
inc
push
push
cmpsb
sbb
and
jae
in
or
pop
lcall
rcll
xchg
std
mov
cmp
sbb
test
or
insl
sahf
mov
call
test
mov
dec
push
mov
push
sahf
fsts
movsl
jle
xor
aad
dec
xchg
popw
bound
sbb
data16
out
aad
cmp
jno
push
pop
xor
xor
je
xchg
outsl
xchg
jmp
pop
and
stc
stos
jp
mov
and
sub
out
int
movsl
add
cmp
mov
imul
pop
out
pop
mov
jmp
mov
scas
xlat
mov
push
pop
or
inc
push
fs
sub
pop
add
dec
std
pop
cmpb
in
dec
cmp
pop
mov
xchg
test
scas
fmuls
outsl
cmp
xor
mov
mov
jb
sti
lods
fstl
sub
jp
inc
pop
sub
bnd
push
rolb
andb
test
into
and
xchg
jmp
adc
cmp
test
cmpl
jnp
aaa
test
mov
mov
adc
mov
cltd
sti
pop
inc
inc
andb
scas
mov
adc
jbe
pop
push
mov
out
mull
push
mov
jmp
dec
mov
and
xor
lea
jnp
cwtl
cmp
shr
add
in
gs
popf
insl
mov
and
out
push
jl
xorl
scas
adc
push
in
lods
xlat
inc
pop
fistps
nop
divl
pushf
sbb
enter
jae
add
pusha
aaa
mov
mov
ficoms
andnps
js
andb
or
loop
jns
mov
xlat
sbb
adc
repz
movsb
jp
mov
and
xor
std
mov
xchg
scas
sbb
inc
pop
and
mov
fsts
pop
out
popa
push
cmpsb
push
and
sbb
sbb
inc
jnp
mov
and
int3
mov
aam
int3
xor
sbb
jecxz
push
lea
outsb
dec
push
loope
push
mov
mov
and
mov
xor
mov
inc
adc
popf
dec
jnp
mov
and
or
iret
repnz
adc
loopne
push
inc
inc
cli
cs
xchg
ljmp
into
add
sbb
push
aam
repz
and
pop
jl
stos
in
pop
cmp
dec
xchg
xor
jo
dec
xchg
cmp
subl
push
cmp
insl
push
sub
das
fcmove
ret
sbb
out
jno
push
push
xchg
cmp
jp
ss
out
insb
dec
push
mov
test
sbb
xor
sbb
hlt
pusha
and
inc
push
mov
loope
outsb
mov
jg
or
in
ret
dec
adc
dec
test
mov
stos
data16
pop
cs
jge
xchg
icebp
or
scas
sbb
lds
and
push
sbb
ret
xchg
data16
push
sub
daa
mov
scas
and
int3
and
and
sti
jecxz
adc
ds
shl
or
outsl
push
arpl
cmp
rorl
sub
jb
addb
dec
notl
sub
and
dec
jae
mov
jns
jg
test
xchg
mov
sbb
and
push
xor
icebp
jecxz
jae
mov
in
jecxz
pop
xchg
sbb
je
cmp
jno
xchg
mov
inc
cmp
sahf
dec
data16
int3
push
lcall
popf
orl
adc
add
jo
pop
adc
aam
dec
xchg
data16
ljmp
sbbl
mov
pop
and
sarb
push
pop
inc
rcll
pop
shl
cmc
sbb
inc
jnp
dec
call
mov
dec
jns
lods
pop
and
pop
pop
adc
push
mov
pop
int3
cli
xchg
jbe
jno
cmp
add
js
std
cld
mov
into
sub
pop
lret
sbb
popl
shl
push
mov
mov
add
das
lcall
aad
addl
mov
je
mov
mov
or
mov
push
aad
mov
ss
mov
sub
pop
mov
push
popf
mov
jmp
jno
data16
mov
jmp
jno
imul
dec
xchg
jle
or
add
adc
std
and
sub
test
sahf
dec
xchg
icebp
std
dec
push
mov
dec
sbb
sub
icebp
sbb
loop
mov
and
ja
aad
mov
test
push
pop
cmp
call
mov
and
fs
xchg
gs
dec
push
push
mov
test
jmp
loop
xchg
jmp
mov
cmp
shrl
xchg
cltd
nop
and
sahf
les
popa
inc
pop
les
pop
adc
cmp
mov
shrl
or
call
out
adc
mov
mov
pop
add
mov
mov
xor
xchg
in
cmpsb
ret
jmp
int3
pop
sbb
and
jne
ror
out
jecxz
adc
push
insb
les
lcall
std
inc
repnz
pop
sbb
adc
out
inc
mov
sub
je
push
adc
cmp
loopne
and
cmp
dec
lods
fidivrs
cmpsl
stos
movsl
adc
push
leave
inc
test
ficomps
imul
adc
xor
and
jbe
push
sub
sahf
cmp
cmp
xor
inc
pop
lods
adc
shl
and
mov
adc
dec
push
int
in
into
imul
cld
popf
xchg
adcl
ror
aam
dec
push
lcall
xchg
and
cmc
xchg
jge
lods
or
fwait
cmp
jecxz
outsb
pop
mov
cmp
lods
rorb
scas
pop
push
and
pop
and
stc
add
icebp
test
jecxz
outsl
test
aad
ret
ret
stos
mov
jae
ret
shl
out
push
xchg
data16
pop
out
dec
jnp
mov
and
lea
mov
sub
xchg
mov
mov
and
mov
and
and
jne
adc
push
cwtl
pop
pop
jmp
rcll
xor
daa
jmp
shll
dec
in
push
rcr
cmpsb
mov
inc
fdiv
mov
push
clc
push
pushf
mov
xor
xchg
mov
mov
clc
or
mov
loop
in
mov
mul
jno
xchg
sbb
sbb
dec
mov
sahf
lret
pop
repnz
lods
shlb
cltd
popa
stos
jb
cmp
or
jg
adcl
push
pop
int
in
aaa
aaa
xchg
mov
dec
cmp
outsb
and
mov
mov
repz
adc
in
cmc
xchg
fildl
pop
ret
es
cmpsl
scas
mov
dec
jnp
mov
and
xchg
jle
pop
and
xchg
adc
insl
fstpl
aam
outsb
cmp
or
dec
lret
pop
and
inc
mov
gs
imull
dec
ljmp
mov
inc
mov
push
scas
clc
inc
inc
jmp
dec
mov
mov
xchg
bound
outsb
pop
sub
inc
std
cmc
mov
sbb
ficoms
adc
lods
jle
xchg
daa
scas
mov
xchg
data16
jp
xor
jne
adc
shll
movd
int3
xor
lods
push
mov
cmp
inc
mov
stos
sub
push
js
cmp
jmp
cmp
addr16
mov
dec
or
jg
mov
jne
sbb
nop
mov
pop
mov
mov
lock
mov
es
mov
jb
mov
movsl
jmp
mov
dec
shl
scas
pop
sub
sahf
pop
adc
pop
and
pop
dec
adc
pop
xor
dec
xchg
data16
nop
scas
sub
test
inc
adc
cmp
push
lea
push
scas
mov
movsb
leave
mov
dec
psubsw
push
sub
shlb
add
xchg
mov
push
mov
mov
mov
and
mov
adc
mov
cwtl
lock
scas
push
idivl
int3
cld
test
test
fidivrs
leave
pop
sub
repz
cmp
jp
cs
loopne
inc
add
ss
inc
pop
mov
stos
jns
outsl
repz
inc
es
jns
push
adc
gs
notl
daa
mov
dec
jp
mov
and
cmp
push
xor
push
shld
inc
sub
push
aas
aaa
jnp
fwait
adcl
mov
lcall
jae
shl
dec
sub
imul
cld
popf
xchg
adcl
push
jae
lcall
int
mov
sti
lds
int
dec
into
sbb
test
mov
dec
sbb
mov
cli
sbb
push
sti
loop
movsl
sbb
ret
lahf
push
push
in
mov
testb
sahf
dec
jl
cli
loope
xchg
pop
lret
mov
add
or
xchg
xor
and
pop
push
call
xchg
data16
in
or
cmp
add
test
in
fadds
pop
push
inc
push
orb
dec
data16
in
pop
das
scas
jecxz
data16
jl
js
mov
stos
adc
sahf
dec
xlat
push
scas
mov
aaa
or
adc
aam
sub
mov
sub
xchg
fdivrl
mov
mov
sti
mov
bswap
jo
mov
jecxz
push
push
gs
das
into
pop
jnp
sub
fsubrs
or
or
ficomps
cwtl
mulb
push
xor
sbb
rcrl
insb
add
fwait
cmpsb
lock
lret
lret
push
bound
cmpsl
jmp
out
sub
fildl
je
nop
lret
aam
popa
xor
lcall
jmp
xchg
adcl
push
add
dec
fucomp
fwait
ljmp
mov
lods
lcall
ret
movsl
in
cmp
sub
lock
fistpl
xorb
and
fdivrs
push
je
sarl
and
fs
mov
inc
add
cmp
mov
ffreep
fsincos
rolb
rolb
fs
jp
mov
pop
pop
ljmp
pop
mov
adc
push
and
or
movsb
adc
and
mov
repnz
mov
jle
mov
push
cld
xor
pop
pop
pop
push
lret
cmp
shll
jb
jmp
pop
jne
imul
push
ljmp
cmpsl
xor
xor
jo
inc
and
jns
popl
inc
je
outsb
lods
xchg
adc
adc
sti
dec
mulps
push
xchg
stc
dec
pop
push
repnz
xchg
mov
mov
add
lcall
sub
js
dec
mov
ret
mov
mov
scas
push
es
pop
or
lea
in
pop
inc
inc
sub
adc
push
notb
sbb
lods
pushf
mov
or
add
cltd
icebp
jnp
pop
subl
mov
out
mov
or
addr16
aam
dec
sub
int3
xchg
sbb
jne
push
cmp
dec
pop
les
stos
fstl
fidivrl
mov
or
sub
sub
sbb
into
lcall
sub
push
adc
xchg
mov
pop
inc
roll
fildl
fldlg2
fidivs
je
out
fsts
nop
mov
sahf
aad
pop
mov
mov
notb
add
cmpsb
das
fsubr
xchg
inc
lods
adc
push
out
inc
les
test
in
mov
pop
sbb
stc
mov
outsb
inc
xor
loopne
mov
jge
lods
out
ret
add
and
jecxz
js
or
insb
sarl
or
sbb
bound
ret
je
dec
lds
fwait
orb
and
and
pop
pop
adc
test
jg
xchg
dec
adc
sub
push
in
cld
fsts
mov
std
xchg
jne
push
cmp
xor
cltd
sub
enter
jo
and
hlt
push
or
xchg
scas
sbb
xor
pop
sbb
into
fcmovne
mov
mov
xlat
int3
xchg
sub
jg
aam
cli
stos
movsl
outsb
adc
push
sub
sahf
pop
push
or
pop
mov
jmp
ss
data16
insb
jg
sbb
cmp
sbb
pop
jo
data16
sbb
scas
xor
mov
hlt
loope
mov
into
add
lods
add
lods
push
roll
fidivs
sub
adc
call
xchg
data16
sbb
add
dec
fnstenv
scas
std
sahf
push
add
in
adc
mov
mov
adc
mov
js
pop
sub
mov
dec
je
aam
hlt
and
and
in
xor
dec
aas
add
scas
cs
in
daa
lods
mov
lock
int3
mov
jl
mov
leave
sbb
dec
xchg
shlb
jp
mov
and
add
in
in
pop
jg
push
push
mov
test
scas
mov
cld
pop
and
mov
jmp
ret
lea
gs
mov
fnstcw
aas
mov
sbb
jge
rcr
xorb
insl
pop
mov
sahf
mov
jno
mov
mov
sbb
mov
inc
pop
call
cmovs
push
inc
sub
and
push
or
jp
sbb
mov
push
push
mov
clc
pop
ret
cmp
dec
and
cmp
sbb
jbe
lahf
aam
add
.byte
.byte
