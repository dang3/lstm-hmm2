xor
mov
mov
test
cld
cld
cld
cld
cld
lea
cld
cld
cld
cld
cld
cld
mov
cld
cld
cld
cld
jne
jmp
nop
nop
nop
nop
nop
nop
push
mov
xor
mov
inc
mov
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
inc
mov
rol
or
ror
mov
sub
xchg
mov
xchg
andl
nop
push
mov
xor
xchg
and
xchg
mov
xchg
jmp
test
cld
cld
cld
cld
cld
pop
cld
cld
cld
cld
cld
je
jmp
push
add
xor
shl
shr
rol
add
shr
mov
add
or
rol
dec
test
jne
pop
push
and
mov
or
or
sub
pop
add
call
push
xchg
call
nop
test
cld
cld
cld
cld
cld
pop
cld
cld
cld
cld
jmp
push
and
pop
add
add
and
mov
or
add
and
add
rep
cld
cld
cld
cld
cld
cld
cld
pushl
shr
rol
pop
push
xor
ror
rol
xor
mov
pop
add
ror
or
and
mov
sub
mov
add
xchg
jmp
xor
mov
cmpl
cld
sete
cld
cld
cld
cld
cld
cld
cld
and
cld
cld
cld
cld
cld
cld
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
xchg
sub
mov
sub
push
pop
cmpl
mov
je
lea
cld
cld
cld
cld
push
cld
pushl
xchg
movl
push
pop
jmp
mov
xchg
jmp
jmp
nop
nop
nop
nop
nop
nop
push
xchg
sub
ror
sub
mov
push
mov
push
xchg
jmp
nop
push
push
pop
xor
mov
sub
mov
rol
add
rol
rol
mov
jmp
call
push
pop
jmp
pushl
mov
sub
and
rol
ror
push
or
add
shl
mov
push
sub
or
sub
pop
add
or
dec
test
jne
pop
pop
call
jmp
pop
cld
cld
cld
cld
cld
cld
jmp
nop
nop
nop
nop
push
mov
jmp
lea
cld
cld
cld
cld
inc
push
pop
push
xchg
jmp
test
cld
cld
cld
cld
cld
pop
cld
cld
cld
cld
cld
cld
jne
jmp
dec
mov
jmp
nop
push
mov
call
mov
mov
addr16
mov
mov
mov
xchg
shr
mov
jmp
xor
rol
add
inc
sub
mov
movzbl
cld
cld
cld
cld
cld
cld
cld
inc
mov
mov
xchg
jmp
nop
push
mov
jmp
push
mov
push
mov
push
mov
push
mov
test
cld
cld
cld
cld
cld
cld
cld
jne
shl
xor
dec
or
sub
pop
jmp
lea
cld
cld
cld
cld
cld
jmp
nop
nop
nop
nop
nop
nop
nop
nop
push
xchg
mov
rol
sub
push
add
mov
dec
dec
shl
shl
mov
add
dec
and
dec
test
jne
pop
lea
mov
call
push
nop
call
xchg
jmp
nop
nop
nop
nop
nop
push
addr16
rol
mov
push
mov
jmp
jne
orl
xchg
lea
cld
cld
cld
cld
push
nop
push
xchg
jmp
nop
push
mov
xor
add
shl
rol
mov
push
cld
push
xchg
push
addr16
push
xchg
pushl
addr16
call
mov
mov
jmp
call
xchg
lea
cld
cld
cld
cld
call
cld
test
cld
cld
cld
cld
cld
jne
shr
xor
add
or
add
mov
xor
xor
or
dec
xor
pop
ret
cld
cld
cld
cld
nop
nop
nop
nop
nop
push
addr16
jmp
mov
xchg
mov
cld
jmp
nop
nop
nop
nop
nop
push
push
pop
shr
rol
mov
and
xchg
sub
cld
pushl
ror
sub
add
or
mov
pop
push
xchg
push
mov
push
push
pop
push
mov
jmp
and
ror
push
xor
add
sub
or
rol
mov
or
mov
dec
test
jne
pop
lea
mov
call
test
cld
cld
cld
cld
je
lea
cld
cld
cld
cld
cld
cld
cld
push
xchg
pushl
xchg
and
mov
push
shl
dec
sub
push
or
pop
sub
sub
dec
test
jne
pop
lea
call
jmp
mov
cld
cld
cld
cld
cld
cld
call
mov
or
mov
mov
add
or
or
pop
jmp
ret
cld
cld
cld
cld
inc
add
sub
pop
xor
pop
ret
cld
cld
cld
cld
cld
cld
cld
nop
nop
nop
nop
nop
push
cld
call
mov
mov
mov
mov
mov
mov
mov
and
mov
add
inc
sub
mov
pushl
rol
push
add
mov
dec
mov
shr
sub
xor
mov
add
and
add
rol
mov
xor
dec
test
jne
pop
pop
call
push
mov
call
xchg
jmp
add
xchg
push
nop
jmp
mov
xchg
mov
xchg
mov
mov
or
shl
mov
push
xor
shl
mov
sub
add
dec
shr
dec
test
jne
pop
push
and
pop
mov
call
push
nop
call
addr16
test
cld
cld
cld
cld
cld
jmp
cmpl
mov
jne
push
nop
lea
cld
cld
cld
cld
cld
push
push
pop
jmp
cmpl
cld
je
push
xchg
rol
rol
mov
sub
xchg
shr
cld
cld
cld
cld
cld
cld
test
cld
cld
cld
cld
cld
cld
jmp
call
mov
sub
dec
add
xor
sub
mov
shr
mov
inc
mov
add
mov
movzwl
cld
cld
cld
cld
cld
cld
cld
push
xchg
or
dec
or
and
pop
jmp
or
sub
and
mov
sub
pop
sub
sub
xor
pop
jmp
nop
mov
mov
andl
mov
push
mov
add
addr16
rol
or
or
mov
add
sub
xor
mov
push
mov
push
xchg
xor
or
sub
xor
or
mov
jmp
add
pop
jmp
jle
rol
sub
mov
jmp
push
xchg
push
push
pop
jmp
nop
add
mov
addr16
movl
mov
inc
shl
mov
xor
add
sub
shr
xor
mov
shr
cld
cld
cld
cld
cld
cld
cld
add
xchg
and
mov
mov
xchg
ret
cld
cld
cld
cld
cld
nop
nop
nop
nop
nop
mov
nop
add
mov
add
mov
add
push
pop
test
cld
cld
cld
cld
cld
cld
cld
mov
cld
cld
cld
cld
cld
jmp
cmp
nop
mov
cld
cld
cld
cld
cld
cld
cld
mov
cld
cld
cld
cld
cld
cld
lea
cld
cld
cld
cld
cld
cld
jmp
lea
cld
cld
cld
cld
cld
call
push
pop
test
cld
cld
cld
cld
je
call
addr16
test
cld
cld
cld
cld
cld
cld
cld
je
call
mov
jmp
neg
cld
cld
cld
cld
cld
cld
cld
sbb
cld
cld
cld
cld
cld
not
cld
cld
cld
cld
cld
and
cld
cld
cld
cld
cld
leave
cld
cld
cld
cld
cld
cld
cld
ret
cld
cld
cld
cld
cld
cld
xor
cld
cld
cld
cld
leave
cld
cld
cld
cld
cld
cld
cld
ret
cld
cld
cld
cld
cld
nop
nop
nop
nop
nop
call
nop
test
cld
cld
cld
cld
pop
cld
cld
cld
cld
cld
cld
jne
or
xchg
test
cld
cld
cld
cld
cld
jne
xor
mov
jmp
jmp
shll
into
jmp
test
cld
cld
cld
cld
cld
cld
cld
jne
xor
xchg
jmp
jmp
repnz
pushl
xchg
pushl
nop
call
mov
leave
cld
cld
cld
cld
cld
cld
ret
cld
cld
cld
cld
cld
nop
nop
nop
nop
nop
push
mov
rol
inc
mov
call
mov
xor
or
pop
jmp
push
xchg
shl
or
shl
shr
mov
call
addr16
movl
push
pop
push
cld
pushl
xchg
call
push
pop
sub
shl
xor
shl
or
pop
jmp
and
shl
mov
push
mov
call
cld
push
xchg
jmp
jle
mov
addr16
movzwl
cld
cld
cld
cld
cld
cld
jmp
mov
cld
cld
cld
cld
cld
cld
cld
mov
cld
cld
cld
cld
jbe
add
mov
jmp
jmp
nop
cld
cld
cld
cld
cld
nop
cld
cld
cld
cld
cld
cld
nop
cld
cld
cld
cld
cld
cld
jmp
test
cld
cld
cld
cld
cld
je
push
xchg
xor
xchg
sub
shr
add
pop
lea
cld
cld
cld
cld
cld
jmp
mov
orl
cld
mov
xchg
test
cld
cld
cld
cld
je
jmp
lods
jecxz
jne
or
cld
test
cld
cld
cld
cld
cld
jmp
sub
call
cld
dec
mov
lea
cld
cld
cld
cld
cld
jne
test
cld
cld
cld
cld
cld
cld
mov
cld
cld
cld
cld
cld
cld
jmp
mov
nop
sub
mov
movsbl
cld
cld
cld
cld
cld
rol
cld
cld
cld
cld
cld
cld
xor
mov
jmp
jne
xor
cld
or
mov
xor
xor
shl
pop
ret
cld
cld
cld
cld
push
addr16
and
and
mov
sub
sub
mov
call
push
pop
jmp
pushl
addr16
push
addr16
pushl
mov
push
xchg
call
xchg
rol
pop
ret
cld
cld
cld
cld
nop
nop
nop
nop
nop
and
mov
xor
shr
pop
ret
cld
cld
cld
cld
nop
nop
nop
nop
nop
add
and
or
dec
mov
pop
add
inc
and
mov
sub
shr
shl
inc
add
pop
push
and
or
mov
shl
pop
add
xor
mov
rorl
cld
cld
cld
cld
cld
add
mov
dec
cld
cld
cld
cld
cld
cld
jmp
mov
inc
rol
mov
and
nop
cmp
nop
jne
and
nop
add
nop
add
xchg
jmp
fmulp
adc
xor
inc
and
shl
pop
mov
mov
mov
xchg
add
add
sub
mov
add
xchg
mov
mov
sub
mov
xor
sub
mov
jmp
adc
dec
call
xchg
cmpb
addr16
jmp
jo
adc
xor
leave
and
sub
rol
and
mov
mov
inc
xchg
inc
xchg
decl
cld
cld
cld
cld
cld
cld
jne
add
cld
jmp
inc
xor
sub
inc
xor
mov
rep
cld
cld
cld
cld
cld
cld
add
nop
jmp
je
cmpb
push
pop
je
jmp
je
and
inc
and
mov
sub
mov
mov
mov
jmp
incl
addr16
and
inc
mov
mov
addr16
test
cld
cld
cld
cld
cld
cld
cld
mov
cld
cld
cld
cld
cld
cld
jne
jmp
stos
mov
stos
xor
into
mov
into
xor
pop
jmp
xchg
nop
nop
nop
nop
nop
jne
rol
ror
sub
add
pop
ret
cld
cld
cld
cld
cld
cld
nop
nop
nop
nop
nop
dec
or
shr
shr
add
mov
jmp
cmpl
mov
jne
sub
sub
inc
mov
rol
pop
add
add
mov
mov
xchg
add
xchg
or
dec
ror
xor
pop
jmp
movzwl
cld
cld
cld
cld
cld
incl
cld
add
nop
cmp
nop
mov
cld
cld
cld
cld
cld
cld
cld
jmp
and
and
add
jmp
and
add
add
inc
mov
mov
pusha
cld
cld
cld
cld
jmp
movb
cld
incl
mov
jmp
or
mov
movzbl
cld
cld
cld
cld
incl
xchg
jmp
cmp
mov
je
incl
mov
inc
mov
cmp
xchg
jmp
mov
shl
xor
shr
pop
leave
cld
cld
cld
cld
cld
ret
cld
cld
cld
cld
cld
nop
nop
nop
nop
nop
jl
or
and
add
inc
sub
mov
pushl
dec
add
add
and
pop
rol
mov
and
mov
add
mov
mov
cld
xor
and
or
mov
jmp
fcoms
sti
and
add
xor
or
mov
push
addr16
jmp
mov
mov
nop
cltd
cld
cld
cld
cld
and
push
pop
add
mov
xor
mov
jmp
call
mov
add
cld
mov
movb
xchg
movl
xchg
call
mov
popa
cld
cld
cld
cld
cld
cld
cld
jmp
push
pop
jmp
xor
cld
inc
mov
sub
mov
and
xchg
inc
mov
inc
mov
shr
cld
cld
cld
cld
cld
je
jmp
jl
xor
nop
jmp
jmp
shr
cld
cld
cld
cld
cld
sar
cld
cld
cld
cld
test
cld
cld
cld
cld
cld
mov
cld
cld
cld
cld
cld
cld
lea
cld
cld
cld
cld
cld
cld
jle
mov
cld
test
cld
cld
cld
cld
jle
jmp
pusha
cld
cld
cld
cld
cld
cld
cld
call
mov
popa
cld
cld
cld
cld
cld
cld
jmp
mov
ret
cld
cld
cld
cld
cld
cld
nop
nop
nop
nop
nop
test
cld
cld
cld
cld
cld
je
jmp
xor
roll
cld
movzwl
cld
cld
cld
cld
cld
cld
mov
addr16
add
xchg
sub
pop
sub
mov
xor
mov
pop
or
mov
add
or
or
pop
leave
cld
cld
cld
cld
cld
cld
ret
cld
cld
cld
cld
nop
nop
nop
nop
nop
and
or
or
shl
mov
mov
mov
jmp
repz
push
xor
xor
rol
xor
mov
sub
mov
dec
mov
and
mov
sub
xchg
mov
cld
incl
mov
dec
nop
nop
nop
nop
nop
nop
mov
cld
cld
cld
cld
jne
jmp
cmp
adc
sub
mov
decl
cld
cld
cld
cld
cld
nop
nop
nop
nop
nop
jne
sub
inc
add
sub
ror
mov
jmp
out
bnd
mov
xchg
mov
cld
jmp
call
push
pop
jmp
cmp
fisttpll
sub
xchg
decl
cld
cld
cld
cld
cld
cld
jne
jmp
xor
jae
idiv
cld
cld
cld
jne
cmp
xchg
jne
jmp
fcoms
xchg
test
cld
cld
cld
cld
mov
cld
cld
cld
cld
cld
cld
cld
jle
and
mov
jmp
jmp
call
call
push
pop
test
cld
cld
cld
cld
cld
je
xor
rol
mov
rol
mov
sub
mov
jmp
gs
add
xchg
add
mov
dec
cld
cld
cld
cld
cld
cld
cld
jmp
sahf
stos
cmp
in
mov
xchg
incl
addr16
dec
xchg
mov
cld
cld
cld
cld
cld
cld
cld
jne
jmp
mov
jne
test
cld
cld
cld
cld
cld
cld
mov
cld
cld
cld
cld
cld
cld
cld
jle
ror
cld
cld
cld
cld
xor
cld
add
cld
jmp
nop
fst
jmp
sub
push
pop
jmp
dec
addr16
dec
nop
jmp
cld
pop
testl
test
ljmp
push
pop
pushl
xchg
call
xchg
rol
inc
sub
inc
mov
ror
or
mov
jmp
dec
add
push
jnp
and
sbb
pop
and
addr16
call
addr16
mov
xchg
push
shl
sub
add
inc
and
mov
rol
shr
or
and
and
add
sub
shl
dec
test
jne
pop
mov
or
mov
xor
mov
call
push
push
pop
call
cld
test
cld
cld
cld
cld
cld
cld
cld
pop
cld
cld
cld
cld
cld
jne
jmp
out
imul
or
cld
cld
cld
cld
cld
jmp
sbb
mov
cld
add
xor
mov
jmp
shl
cld
cld
cld
cld
cld
cld
cld
nop
nop
nop
nop
nop
add
mov
incl
cld
lea
cld
cld
cld
cld
cld
cld
cld
and
mov
shr
xor
mov
nop
nop
nop
nop
nop
call
xchg
cmp
push
pop
jb
inc
xchg
cmp
nop
jmp
adc
xchg
pushl
sub
or
pop
nop
nop
nop
nop
nop
rep
cld
cld
cld
cld
cld
cld
cld
pushl
xchg
call
mov
jmp
jp
pop
jb
inc
mov
cmp
addr16
jae
inc
push
pop
inc
mov
test
cld
cld
cld
cld
cld
jmp
jnp
popf
push
mov
call
xchg
jmp
mov
mov
test
icebp
in
dec
sbb
shr
sub
mov
or
mov
or
mov
sub
xchg
mov
mov
incl
xchg
dec
nop
mov
cld
cld
cld
cld
cld
jmp
mov
jo
xor
and
mov
cld
test
cld
cld
cld
cld
cld
je
push
mov
pop
add
sub
rol
mov
add
xchg
jmp
fsubrs
decl
xor
push
pop
jmp
hlt
stos
adc
xor
cld
jmp
push
aad
mov
jmp
sub
sub
mov
xor
ror
mov
mov
addr16
incl
mov
jmp
jmp
add
add
loope
or
fcmovnbe
jmp
cld
cld
jmp
xor
xchg
mov
addr16
nop
nop
nop
nop
nop
xor
cld
cmpl
mov
je
or
and
inc
or
xor
mov
mov
and
or
rol
rol
pop
sub
nop
xor
rol
pop
leave
cld
cld
cld
cld
cld
cld
cld
ret
cld
cld
cld
cld
cld
cld
cld
nop
nop
nop
nop
nop
test
cld
cld
cld
cld
lea
cld
cld
cld
cld
cld
nop
nop
nop
nop
nop
jle
mov
xchg
movzwl
cld
cld
cld
cld
dec
or
mov
nop
nop
nop
nop
nop
and
nop
cmp
mov
jne
and
push
pop
add
xchg
nop
nop
nop
nop
nop
add
mov
add
xchg
ror
mov
inc
add
mov
mov
add
inc
push
pop
inc
xchg
nop
nop
nop
nop
nop
decl
cld
cld
cld
cld
cld
cld
cld
jne
add
xchg
cmpl
mov
jne
nop
nop
nop
nop
nop
call
addr16
mov
xchg
mov
addr16
mov
addr16
mov
dec
add
mov
nop
nop
nop
nop
nop
push
add
xor
ror
and
add
or
dec
mov
shr
mov
dec
test
jne
pop
sub
xor
shl
and
inc
mov
call
push
xchg
call
xchg
test
cld
cld
cld
cld
nop
nop
nop
nop
nop
pop
cld
cld
cld
cld
cld
cld
jne
nop
nop
nop
nop
nop
or
xchg
push
cld
xor
sub
or
sub
mov
nop
nop
nop
nop
nop
call
nop
sub
or
add
pop
push
xchg
mov
mov
call
xchg
mov
xchg
shr
and
mov
nop
nop
nop
nop
nop
ror
inc
or
mov
test
cld
cld
cld
cld
cld
pop
cld
cld
cld
cld
cld
cld
cld
je
dec
and
add
mov
nop
nop
nop
nop
nop
add
mov
jmp
add
or
add
mov
add
nop
push
push
pop
call
addr16
cmp
cld
mov
cld
cld
cld
cld
cld
nop
nop
nop
nop
nop
je
nop
nop
nop
nop
nop
and
shl
add
dec
mov
nop
nop
nop
nop
nop
test
cld
cld
cld
cld
cld
cld
cld
jne
mov
and
or
or
mov
pushl
xor
pop
add
mov
add
addr16
add
xchg
jmp
nop
nop
nop
nop
nop
jns
movzwl
cld
cld
cld
cld
cld
cld
jmp
mov
dec
sub
mov
add
mov
add
xchg
push
addr16
nop
nop
nop
nop
nop
pushl
nop
call
mov
mov
mov
add
mov
add
mov
xor
add
and
mov
mov
test
cld
cld
cld
cld
cld
cld
cld
jne
nop
nop
nop
nop
nop
add
xchg
cmpl
xchg
jne
call
mov
mov
xchg
add
inc
mov
mov
and
add
mov
mov
addr16
cmp
xchg
nop
nop
nop
nop
nop
jne
pushl
xor
add
rol
pop
add
addr16
shr
inc
mov
inc
pop
mov
push
pop
pushl
or
and
shr
rol
rol
pop
nop
nop
nop
nop
nop
add
xchg
or
shr
and
pop
dec
ror
sub
pop
mov
dec
inc
mov
shl
pop
ret
cld
cld
cld
cld
cld
cld
nop
nop
nop
nop
nop
stos
rolb
aad
lods
cmpsb
mov
out
push
stc
pop
out
mov
fwait
nop
xchg
pop
jnp
mov
xor
pop
scas
jbe
xchg
jecxz
push
scas
nop
sbb
pop
sahf
pop
mov
lock
push
push
jmp
inc
imul
test
xchg
mov
mov
push
in
imul
jo
dec
adc
fsubrl
aad
add
movsl
lahf
ja
mov
lcall
dec
lds
test
add
sub
or
push
push
std
aam
sbb
test
shlb
into
int
sbbl
pop
mov
subb
push
dec
mov
mov
adc
arpl
jmp
inc
mov
negb
jecxz
xchg
popf
push
and
jbe
mov
sbb
ja
stos
add
inc
pop
loope
sbb
dec
sti
pop
push
jb
pop
dec
gs
test
cmp
xorl
inc
mov
inc
sbb
xchg
adcb
fwait
ret
das
scas
and
lock
push
push
jbe
xchg
out
inc
xchg
sbb
cli
addr16
test
or
shrd
mov
or
push
dec
mov
add
ljmp
dec
ret
shll
and
dec
inc
scas
es
cmc
pop
mov
xlat
addr16
movsl
test
aam
pop
push
call
testb
int
jle
dec
inc
sbb
sbb
jns
cwtl
leave
stos
jae
adc
pop
bound
fdivrp
or
xchg
sub
inc
jl
or
inc
jp
cld
adc
ljmp
jecxz
cmp
or
mov
mov
mov
mov
or
or
fcomps
push
adc
orl
inc
jae
xchg
stos
testb
dec
jns
jae
int
add
rcr
bound
cwtl
inc
pop
push
xor
lea
pop
add
ja
insb
add
jge
lds
pushl
out
pushf
cmp
cmp
rorl
pop
sti
aaa
rcl
cmp
mov
xor
mov
sbb
loopne
leave
jmp
pop
lret
lahf
and
inc
jmp
sbb
xchg
inc
ljmp
cmp
and
lea
adc
mov
mov
mov
loope
xor
pop
fldcw
sbb
loope
mov
pop
mov
imulb
fs
mov
sub
xor
cmp
sbb
fsubrl
repz
push
jg
jbe
add
int
daa
popf
dec
pop
mov
adc
aas
inc
push
std
loop
aaa
arpl
sbb
popa
out
xchg
cmp
add
in
mov
jg
mov
push
mov
pop
aam
pop
imul
cmp
aam
jo
ret
dec
ret
popa
cmp
mov
inc
pop
push
lret
mov
cmp
out
or
sub
mov
lods
fdivp
jl
sar
out
cmc
mov
in
mov
cmpb
add
sbb
pop
data16
jle
or
sbb
pushf
imul
lds
sahf
cmpl
adc
adc
push
mov
dec
stos
shll
nop
mov
js
mov
mov
pop
sub
sarb
dec
xor
gs
inc
adc
in
mov
xlat
push
mov
inc
std
lahf
cmp
inc
jecxz
adc
cmp
cli
or
mov
fwait
adc
test
xchg
adc
pop
testl
roll
dec
imul
or
add
pop
mov
lcall
mov
arpl
outsb
sub
pop
jnp
or
mov
jle
push
and
sbb
pop
insl
pop
movsb
or
mov
push
es
outsb
mov
adcl
ret
pop
loope
cmp
popf
mov
push
pushf
cwtl
jmp
lahf
mov
out
mov
gs
test
or
inc
cmp
lret
jbe
sbb
xchg
pop
in
and
sbb
xor
mov
inc
inc
pop
dec
pop
pushf
cli
frstor
add
loopne
mov
sahf
ret
sub
ljmp
cld
aam
cmpsb
repnz
jo
dec
xchg
push
test
mov
aaa
jae
jg
shll
xchg
inc
dec
mov
add
add
fimuls
xchg
nop
lods
addr16
mov
dec
jo
jb
inc
add
sub
sbb
mov
mov
xchg
cmp
sbb
scas
jb
add
aas
jp
sub
dec
jnp
scas
movb
lcall
cmpsl
out
jge
loope
stos
mov
out
dec
jg
jecxz
adc
pop
jecxz
xchg
je
add
push
aaa
dec
loop
scas
bound
arpl
sub
sbb
and
jp
lock
fs
cmp
imul
sbb
divl
push
fldenv
or
cmp
outsl
mov
lea
dec
divl
inc
inc
push
pop
into
clc
movsl
das
scas
xlat
mov
mov
icebp
and
mov
pop
add
jecxz
fisubl
push
test
xchg
ljmp
lds
pop
pusha
cmpsb
scas
fidivrs
andl
push
mov
stos
dec
insl
adc
dec
xlat
ret
cmp
mov
xchg
testl
sub
push
shr
sbb
jne
or
gs
pushf
iret
data16
cmp
lahf
jns
jnp
out
repnz
rclb
aaa
dec
jecxz
aas
mov
pop
and
inc
lcall
test
jmp
rcl
pop
aad
fcmovu
adc
mov
sub
pop
lods
inc
and
cmp
jbe
test
jae
int3
icebp
lahf
cmpsb
inc
movsb
add
jns
hlt
int
inc
out
scas
inc
pop
mov
sbb
sub
mov
dec
mov
cmp
mov
mov
cld
fisubl
inc
sbb
rcrl
xchg
or
and
add
cmc
push
fnstcw
lret
ficomps
xchg
dec
daa
xor
outsb
ljmp
daa
insb
sub
cltd
or
jge
adc
adc
jne
add
divb
ljmp
sbb
sti
mov
movsl
adc
and
insb
xchg
cmp
jb
push
pop
and
mov
ja
stc
xor
daa
mov
jno
pop
cmp
lret
aad
arpl
or
xor
inc
push
mov
cmp
icebp
pop
aas
orb
jne
cli
xchg
lahf
jbe
pusha
jo
push
jb
mov
mov
and
mov
fldcw
repnz
xchg
enter
pop
das
test
insl
outsl
xchg
stos
lods
fs
stos
aaa
call
arpl
cmp
jecxz
mov
inc
cs
add
mov
push
push
enter
mov
loopne
xorb
lods
clc
cli
adc
mov
testb
ficomps
ss
insl
int3
test
adc
mov
rorl
add
je
dec
dec
sarb
pop
inc
aad
in
aas
aas
sar
and
bound
sub
loopne
xchg
lret
ret
lret
jne
and
mov
mov
shll
mov
mov
fildll
xor
xchg
or
jnp
comiss
js,pn
nop
cmc
icebp
xor
add
fldl
dec
push
ds
mov
inc
nop
shrl
mov
xor
fs
jl
mov
inc
mov
sub
mov
movsb
imul
outsl
enter
mov
add
iret
pop
imull
jp
test
outsb
outsl
bound
int3
xor
sbbb
mov
out
mov
mov
and
mov
push
mov
daa
lods
push
push
sbbb
sahf
jmp
adc
repnz
pop
mov
push
push
out
sub
or
cmp
adc
cwtl
shll
push
rcll
in
jl
and
lcall
and
fimull
test
mov
jmp
js
mov
inc
pop
push
mov
movsb
in
lret
or
inc
pushf
repz
leave
inc
dec
imul
sub
pop
push
movsb
shrl
ret
cmp
mov
lods
add
mov
iret
push
adc
jae
xchg
and
test
push
arpl
mov
cmp
pop
push
test
inc
ret
dec
push
push
call
test
mov
ja
pop
adc
arpl
mov
daa
repz
hlt
dec
push
repz
insb
dec
adc
les
subl
test
xchg
push
inc
iret
lret
jg
lret
mov
rorl
push
dec
or
jle
jp
les
push
push
inc
adc
mov
nop
push
pop
ljmp
or
pcmpgtd
xchg
mov
and
scas
ds
dec
add
fs
inc
mov
cli
adc
dec
hlt
aas
lret
fdivr
mov
dec
mov
mov
ds
fwait
pop
mov
jge
in
sub
adc
aas
loope
leave
nop
das
test
mov
repz
inc
jne
cmp
ljmp
jo
mov
or
jle
test
int
mov
xchg
addr16
sbb
push
mov
push
movsl
inc
mov
lds
jg
add
mov
fbld
in
test
outsb
cld
xor
xlat
and
cmp
jmp
test
add
push
lret
lret
mov
out
push
cltd
in
pushf
in
mov
pop
pop
pop
jno
mov
lods
fwait
jnp
push
cltd
leave
rclb
and
cmp
xor
mov
jae
fs
sub
mov
adc
and
add
lds
pop
jnp
dec
xchg
aam
mov
gs
roll
mov
or
in
adc
std
sti
xchg
arpl
sahf
movb
xchg
stos
mov
jns
lret
std
mov
sbb
arpl
mov
jp
mov
sbb
mov
jne
fstps
mov
lret
cmp
push
sbb
cmp
jb
subl
rcrb
sbb
push
rorl
sbb
andl
test
push
xor
xor
mov
cltd
ret
mov
fcmovbe
das
push
daa
mov
and
xor
or
mov
testb
negb
in
mov
jno
loopne
dec
sahf
xchg
push
nop
push
insl
xchg
icebp
adc
mov
gs
out
repnz
.byte
xor
fisttpl
sub
xor
mov
lock
add
or
inc
incl
sub
pop
and
icebp
sbb
out
xchg
iret
mov
mov
fstpt
loop
lret
cmpsb
inc
sbb
clc
xchg
aad
nop
mov
popw
mov
rolb
mov
fsubs
xor
xchg
cltd
out
dec
and
push
sub
xor
dec
or
add
ds
xor
sbb
ss
jg
or
out
jns
repz
or
enter
mov
testl
movsb
or
xchg
fptan
mov
ret
iret
cmpsl
adc
mov
jg
cmpsl
jp
sbbb
pushf
or
dec
cmp
mov
xchg
pusha
dec
loop
push
pop
rclb
add
iret
lret
or
sub
fs
sbb
sub
sbb
test
xor
test
xorl
daa
int3
xlat
lock
movsl
rorb
daa
and
dec
in
sub
rcll
in
pop
xchg
mov
and
ficoml
aas
push
les
out
jl
push
push
loopne
out
mov
push
xchg
mov
test
jecxz
pop
sti
repz
out
xchg
dec
testl
vpcmpgtw
mov
stc
mov
xchg
imul
ds
popa
push
dec
adc
dec
cmp
cmc
mov
add
add
outsb
fwait
add
add
or
fwait
xchg
jmp
lret
jle
out
xor
roll
sub
push
filds
les
cmc
dec
adc
or
push
pop
cmp
push
mov
cltd
in
mov
js
pushf
and
pop
rorl
aas
mov
mov
adc
popa
outsb
cmp
push
jle
fs
frstor
les
and
sub
jle
dec
testb
sti
imull
or
push
dec
push
popa
or
cli
push
xchg
insl
lcall
mov
arpl
push
stos
adc
orb
mov
xor
je
lret
mov
xchg
or
imul
adc
shll
stos
pop
xchg
mov
dec
jle
insb
in
pusha
pop
sahf
pop
das
jmp
push
outsb
rol
cmpsb
std
xchg
stos
mov
mov
cli
pop
js
adc
jnp
mov
lods
push
jg
test
push
jae
mov
jno
push
xchg
int3
cmp
movsb
mov
icebp
dec
out
sbb
loopne
inc
rcrb
imul
xchg
fs
insl
xor
or
jns
lea
sub
cwtl
imul
xchg
mov
in
call
xchg
and
add
popa
repz
in
jmp
ljmp
stos
jb
ror
ss
ret
mul
addl
xor
push
sbb
int3
aam
loop
das
shlb
push
dec
mov
jecxz
add
mov
test
fwait
mov
inc
outsb
or
add
jp
mov
push
xchg
js
mov
jnp
arpl
out
andl
xor
pop
call
xchg
cs
inc
pushf
push
xchg
adc
mov
repz
pop
add
test
icebp
jp
cmp
sbb
pushf
mov
mov
mov
in
cmp
fbld
sbb
lds
xor
mov
mov
sbb
lret
nop
pop
fs
jmp
sbb
fbld
les
sbb
mov
cmpl
jmp
jns
xchg
xorl
stos
pop
and
sub
add
mov
pusha
or
adc
jl
lret
sbb
aam
push
add
hlt
cvttps2pi
xor
push
fsubrs
cmpsb
and
cmp
mov
insb
or
aam
jmp
stos
cli
inc
push
gs
sahf
inc
xchg
jp
mov
lock
jbe
jl
pop
inc
jge
cwtl
std
loope
shll
inc
les
loope
mov
int3
je
xlat
jae,pn
xor
jecxz
repnz
jbe
sub
fcmovbe
sti
and
sbb
adc
js
fnstcw
cmp
sub
cmp
adc
andb
mov
in
pop
je
xor
push
lods
mov
or
push
sub
and
inc
dec
sbb
loopne
rorb
mov
es
sub
jmp
jnp
push
cwtl
lea
or
jmp
test
leave
adc
add
popa
jns
jle
and
mov
add
sbb
out
daa
xchg
add
scas
mov
push
jo
aad
lret
pop
sarb
dec
dec
xchg
out
inc
add
rorl
fdivl
push
mov
jne
hlt
pop
aas
adc
scas
push
popf
and
daa
mov
shlb
test
iret
mov
push
adc
scas
aad
mov
fstpt
stos
jae
mov
jmp
xchg
cmp
pop
jns
xchg
mov
es
xor
cmp
jge
push
mov
and
xlat
push
mov
mov
push
test
roll
movsl
mov
add
mov
mov
fildll
sbb
roll
jle
iret
cmp
mov
xchg
xor
cwtl
jbe
mov
jns
sub
aad
cmp
js
jae
in
or
xor
pop
shll
test
mov
push
fcoml
pusha
push
pop
xchg
jp
mov
andl
cltd
jl
std
jae
out
lcall
sub
pop
mov
or
loop
lods
cmpsl
incl
mov
out
lahf
xchg
das
push
mov
add
ret
and
fwait
mov
xchg
stos
outsb
jp
aam
xor
xchg
es
inc
movsb
lods
inc
sbb
jb
add
pop
arpl
scas
rorl
dec
daa
mov
rolb
mov
lea
dec
in
add
pushl
stos
in
mov
montmul
cmpsb
test
xlat
and
fcoml
fisttpl
scas
dec
sub
insl
shlb
cmpsb
sti
sti
adcb
sub
aad
mov
sub
addr16
movsl
sti
pusha
ljmp
push
xor
ret
jo
xor
jle
and
loop
mov
pop
cli
repz
popf
cmp
sub
xchg
sub
dec
in
jbe
cmpsb
movsb
push
adc
xchg
pop
sbb
push
lret
imul
lcallw
and
adc
push
outsb
or
cmpsb
leave
insb
jg
cmpsl
enter
in
out
stc
popf
sub
adc
jge
adc
jge
sti
pop
sub
push
scas
xchg
mov
nop
push
and
arpl
fldl
jbe
dec
ret
xchg
in
movsb
call
jne
xor
add
jbe
hlt
nop
in
out
ret
icebp
test
mov
int3
int3
sbb
sahf
enter
bound
xor
fidivrl
pop
loopne
andl
push
pop
pop
sub
movsl
stos
push
inc
cmp
cmp
aaa
mov
rclb
aas
lea
mov
sub
ficompl
xchg
int3
insb
iret
in
outsb
sub
loope
aaa
frstor
and
inc
movsb
xchg
arpl
insb
cmpsl
jmp
popf
lahf
or
int
rol
call
out
xchg
mov
and
push
cs
fcomps
jbe
adc
pop
jmp
shr
addb
adc
and
popf
inc
sbb
mov
lods
jg
pop
and
adc
mov
sbb
adc
lea
cli
ljmp
mov
rcll
orb
mov
cmp
cmp
fldcw
xchg
addr16
pusha
jmp
loopne
mov
dec
rorb
test
gs
xchg
movsl
sub
inc
pop
fdivl
std
hlt
inc
fwait
add
out
mov
xchg
xor
jo
mov
test
fs
cld
and
insb
dec
dec
cltd
shll
sbbb
pop
cmp
lds
push
je
icebp
xchg
outsl
xchg
iret
and
pop
int
push
outsl
mov
or
repz
pop
dec
scas
cmp
sbb
push
leave
testl
push
inc
xor
mov
mov
data16
ret
jmp
scas
push
ds
fldenv
xor
inc
movsl
stos
add
adc
aad
pop
push
push
fcmove
dec
xor
ja
sarl
xchg
and
mov
pop
xchg
movsb
in
push
in
popf
mov
push
movd
mov
pop
cmp
dec
aad
pop
jp
ret
or
jg
cmpsb
rcrl
decl
and
pop
into
lock
mov
sbb
push
mov
xchg
shl
mov
push
sbb
stc
push
popa
hlt
xor
movsb
fistpl
stos
out
pusha
and
xchg
xchg
pushf
push
sub
jmp
dec
lock
mov
aam
popf
retw
std
xlat
mov
repnz
aas
lea
cltd
adc
sbb
pop
mov
mov
lock
push
jl
xor
or
cld
loop
push
mov
data16
push
jae
cld
stos
lcall
and
mov
xchg
lret
push
loope
ss
mov
scas
fsubrl
jl
jmp
push
dec
pop
adc
sub
stos
sti
add
push
insb
xor
push
inc
jbe
mov
pop
aad
pop
imul
xlat
pop
inc
test
out
cwtl
push
pop
mov
int3
popf
sbb
stos
mov
push
pop
push
dec
pop
or
std
add
push
lock
dec
sub
xor
jmp
ror
sub
inc
jbe
dec
or
loopne
jbe
push
push
mov
nop
orb
mov
out
int3
loop
xchg
ja
stos
xchg
jl,pn
cmc
cmp
push
inc
mov
js
sub
lods
fs
cwtl
dec
sbb
push
sbb
add
test
enter
sub
jb
inc
jns,pt
mov
xor
inc
push
std
xor
push
add
xor
mov
sahf
push
sub
mov
add
inc
lods
lret
nop
or
in
scas
repnz
ljmp
xchg
push
out
xor
int
into
lds
scas
negl
mov
lds
test
adc
mov
sti
imul
or
sbb
sub
subl
push
dec
popf
in
mov
add
mov
inc
inc
pop
inc
scas
test
lods
sbb
cmp
dec
jnp
pushf
test
push
call
adc
pop
dec
orb
lea
cmp
loope
scas
out
movsl
les
in
dec
xor
add
xchg
or
push
inc
jo
sub
roll
lea
lods
pop
xchg
mov
mov
mov
jns
sbb
add
popa
nop
sub
shrl
sbb
pop
arpl
fidivrs
int3
sub
sbb
push
and
into
xchg
inc
or
xchg
add
cwtl
adc
sub
cmp
mov
push
out
test
test
insl
adc
add
cmpsb
mov
lea
sbb
test
shlb
jns
cmpsl
enter
push
clc
scas
jp
into
xor
pop
je
mov
rorl
cmp
loopne
fidivs
inc
mov
orb
lods
lret
lods
cmp
nop
addr16
xor
pop
sbb
sub
sub
push
sub
sub
jo
pop
icebp
mov
outsb
into
mov
aad
ds
loop
or
jg
mov
mov
cmp
pop
dec
jmp
adc
or
pop
pop
stc
test
xlat
and
cmp
sbb
mov
xor
mov
mov
mov
addr16
in
inc
mov
fwait
aaa
pop
out
xchg
mov
cmpsb
pusha
add
xchg
push
inc
xor
aam
fcomi
dec
jns
outsl
sbb
jmp
adc
sub
xor
xor
cld
dec
xchg
jge
cmp
mov
popa
push
daa
sbbl
ja
mov
jnp
cld
push
jno
sub
add
add
or
pop
test
mov
inc
xor
repnz
mov
stos
jmp
imul
stc
dec
insb
shlb
loop
add
dec
xor
and
rorl
lock
mov
push
sbb
inc
aas
das
pop
scas
dec
jecxz
out
loop
or
adc
mov
imul
daa
sub
mov
enter
jns
int3
rclb
sub
cmp
test
outsb
dec
mov
xor
repz
loop
test
dec
sbb
sbb
mov
sbbb
es
add
adc
fucomi
sbb
fstpl
mov
cmpsb
sbb
jae
sub
insb
adc
fadds
cmp
xchg
lret
and
inc
and
sub
xchg
repz
idiv
or
mov
push
fprem1
add
in
dec
lret
inc
or
mov
shlb
in
xor
mov
jmp
out
daa
rorb
or
out
ss
mov
xor
pop
int3
leave
ficompl
out
sbb
xor
cmc
sub
sub
in
sub
pop
jle
in
int3
mov
aam
cmpsb
mov
jmp
es
dec
je
sub
insl
adc
jecxz
xor
xchg
lahf
movlhps
mov
bound
inc
outsl
in
push
sahf
testb
inc
sub
push
outsl
shl
sbb
inc
sbb
loope
xchg
xchg
pop
stos
sarb
inc
shl
movsb
ljmp
out
and
pop
pop
push
sti
adc
push
mov
cmp
out
int3
out
mov
pop
inc
pop
and
mov
dec
mov
fcmovb
cmp
loop
sahf
and
scas
or
pusha
mov
fiadds
ss
sarb
shrl
insl
out
cs
xchg
mov
aam
mov
add
aaa
pop
sbb
sbb
rcll
push
int3
dec
fidivl
sub
in
cmp
enter
adc
add
inc
icebp
xchg
or
cltd
lds
inc
mov
pop
cmpsb
inc
xorl
lea
scas
mov
pop
mov
arpl
pushf
sub
cmp
xchg
out
ret
insl
dec
dec
dec
lock
xchg
sub
loopne
xor
cmp
das
jmp
mov
inc
push
mov
shlb
jb
sub
orl
adc
in
pop
add
aad
cmp
xchg
inc
mov
push
jmp
inc
mov
sbb
xchg
sbb
mov
cmp
and
sub
pop
fsub
inc
pop
addr16
pop
loop
push
test
jecxz
int
iret
rcrb
cmp
pop
cmp
cmpsb
std
jnp
add
call
mov
and
ret
or
sbb
mov
and
jmp
lahf
lahf
or
jo
cwtl
sub
fdivrl
xchg
xchg
cmpsl
and
adc
shl
outsl
dec
fldt
sarb
cmp
cltd
sti
sub
sub
ret
cs
test
cmp
and
popa
inc
ror
and
stc
mov
aaa
add
dec
int
jo
ds
push
inc
hlt
pop
sbb
cmpsb
or
mov
clc
fildll
stos
cmp
out
pusha
dec
jb
pop
sbbl
les
or
shr
lret
stc
mov
rcrl
xchg
pop
adc
mov
add
jno
jb
dec
xor
mov
cmp
and
pop
fistl
cwtl
add
and
mov
popa
loope
out
fiadds
loope
dec
ret
in
xchg
call
jmp
aas
daa
ret
testb
dec
and
stos
mov
aas
jg
test
arpl
pushf
int
jne
fsincos
aad
add
pop
rolb
mov
adc
cmp
dec
jle
sub
stos
movsl
dec
jecxz
subb
popf
pop
sahf
sub
push
imulb
test
sbb
fiaddl
sub
fs
aaa
sub
test
scas
cmp
ficoms
imul
sbb
xor
xchg
cmpsl
mov
xchg
push
mov
stos
cmc
test
pop
hlt
xchg
cmpsb
enter
repz
shrl
shl
inc
xlat
push
xor
movsl
mov
or
push
pop
mov
jb
pop
enter
flds
sub
scas
scas
mov
daa
push
push
xchg
cld
cmpsl
push
push
stc
aas
test
imul
lock
mov
sbb
push
imul
push
inc
insl
scas
pop
into
std
push
cltd
sti
out
push
mov
pop
cli
sbb
pop
bound
mov
pop
int
lds
xor
xchg
icebp
xor
loopne
lahf
push
add
sub
lret
add
psadbw
dec
mov
scas
loopne
mov
push
loope
push
fstpl
sahf
pop
mov
push
rclb
pushf
dec
inc
inc
inc
or
pushf
jmp
icebp
rcrl
cmp
jo
mov
mov
add
sarb
push
mov
mov
sub
lret
or
mov
in
addl
sub
pop
jno
jnp
sarb
call
mov
incb
out
dec
dec
jbe
xchg
jnp
push
pop
mov
ss
dec
adc
sub
imul
mov
adc
ja
iret
pop
mov
fidivrl
test
jecxz
mov
test
into
sahf
insb
or
roll
push
subl
cmp
sbb
popf
push
push
cmc
mov
icebp
adc
push
xlat
inc
cmp
les
lret
push
ret
aad
mov
sbb
jno
movsl
mov
call
hlt
jb
dec
decl
lods
dec
test
sbb
mov
in
pop
arpl
dec
adc
loope
dec
add
mov
sbb
cli
movsl
lret
imul
jg
out
mov
rol
sahf
into
push
xchg
add
sub
ss
mov
lahf
bound
and
lock
or
loopne
or
inc
xor
inc
cmc
mov
sub
add
div
notb
es
data16
pop
mov
cwtl
mov
aam
bound
test
lea
sti
xor
loop
movl
lahf
sub
inc
cmp
fildl
mov
mov
pop
mov
bnd
and
cmpsb
scas
rol
push
xchg
cli
xchg
xchg
jp
faddl
mov
jne
push
mov
add
push
shl
shrb
loop
push
push
std
adc
hlt
xor
test
mov
stos
inc
daa
xchg
xor
lods
aad
pop
add
sbb
xor
jg
or
inc
sti
dec
cwtl
adc
hlt
and
jb
in
jg
mov
daa
cmpsl
sub
mov
fsts
mov
pusha
or
andl
lcall
divl
lahf
ja
sbb
xchg
cmp
xlat
pcmpeqd
push
mov
fldt
dec
fisttpl
mov
adc
or
xor
enter
xor
negl
add
mov
test
add
inc
in
xor
sarl
pop
xor
es
jle
xlat
cmp
stos
mov
xchg
mov
lods
xchg
mov
cmp
shlb
lock
push
icebp
iret
outsl
sbb
ret
cmpsb
in
test
insb
ret
mov
dec
negl
cmp
loope
dec
sub
arpl
add
sub
sbb
es
das
stos
out
lret
mov
or
jl
insl
sub
fsubrs
shl
les
mov
mov
scas
out
pop
imul
jb
mov
repz
xor
pop
lahf
idivl
mov
jl
jne
int
xchg
fcos
jp
push
js
sbb
pushf
mov
jg
push
adc
sbb
std
or
inc
jle
les
ss
lret
jo
pop
inc
std
push
cli
jmp
test
std
fdivs
jp
pop
mov
aaa
and
dec
ljmp
pusha
ret
cmp
loope
shll
xchg
pop
stos
hlt
mov
sahf
mov
jbe
call
pop
mov
xchg
add
xor
leave
or
adc
sti
jmp
xor
push
and
pop
mov
inc
pop
mov
out
rclb
push
insl
test
push
jae
test
cmpsl
mov
pushf
mov
xchg
push
call
je
jg
jno
js
pop
jge
dec
xor
mov
sub
mov
dec
pop
mov
jae
jae
pop
les
xchg
jo
mov
stos
scas
mov
mov
push
xor
lcall
cmpb
cmp
or
dec
into
jmp
iret
cmp
mulps
pop
ret
add
inc
es
cmp
and
aas
jle
jne
test
adc
jo
loop
jo
pop
ljmp
jg
jbe
pop
sbb
mov
or
fcmovnu
cmpsb
pusha
adc
fiadds
stos
inc
and
ljmp
jnp
scas
imul
mov
inc
sbbb
loop
pop
jnp
imulb
cli
mov
bound
mov
call
cmc
xchg
andb
fistl
pop
push
mov
in
or
hlt
jge
out
and
shll
add
pop
jbe
mov
xor
xor
fimull
addl
das
mov
or
lock
add
in
mov
lds
pushf
mov
ljmp
adc
andb
rcll
jno
mov
outsl
mov
xchg
xchg
out
sub
scas
cmp
and
jno
push
pop
loopne
inc
xchg
testl
mov
jecxz
clc
jns
addr16
fnstsw
ror
cmp
or
xchg
adc
pop
fadds
mov
and
add
push
mov
les
jmp
mov
fisubl
rcrb
dec
popa
add
cmp
leave
mov
sub
mov
sahf
or
mov
repnz
daa
in
dec
roll
sbb
fdivrp
lods
mov
xor
or
es
mov
add
add
daa
loope
mov
out
xor
inc
push
and
js
mov
jns
dec
int
lret
sub
xor
and
scas
nop
insl
mov
jns
cmpsb
xchg
mov
icebp
and
cmp
inc
out
jno
pop
pushf
push
mov
stos
sbb
jp
es
aaa
imul
push
mov
adc
sahf
inc
sbb
push
push
mov
insl
rorb
mov
jmp
push
shlb
push
and
xchg
or
addr16
xchg
xchg
mov
decb
ja
aas
push
xchg
outsl
pop
inc
call
outsl
push
test
int3
fidivs
cwtl
mov
cli
daa
sbb
pop
jp
pop
call
push
cmp
and
std
mov
mov
or
sbb
cmc
mov
movsl
test
sbb
cli
jne
jo
notb
les
mov
mov
xchg
xor
rcll
mov
xor
repz
mov
shrb
xlat
imul
js
pop
lock
xchg
filds
push
jae
shrl
jl
mov
inc
inc
mov
adc
sbb
cmp
stos
movsb
add
arpl
xor
jo
jg
int3
addb
mov
test
cld
adc
in
aam
stc
pop
cli
jne
add
fstpt
es
std
cmp
jno
and
xchg
dec
mov
mov
lahf
push
daa
inc
movsb
inc
mov
sahf
mov
xchg
mov
jne
and
fsubr
fndisi(8087
lahf
lock
mov
jl
mull
ss
or
mov
pop
sbb
mov
mov
ljmp
jae
data16
popa
iret
mov
pop
int3
and
pusha
sub
ljmp
jg
data16
push
adc
pusha
xor
or
and
jmp
divb
inc
jno
sbb
insl
mov
clc
scas
xor
or
cwtl
fbld
or
and
xchg
or
mov
add
cltd
cmp
pusha
inc
cmc
push
dec
imul
inc
clc
movl
dec
adc
imul
fucom
out
or
pop
pop
dec
out
ret
adc
cmpsl
testl
cli
dec
icebp
xor
sti
aam
xor
lods
fisubs
fdiv
mov
lods
ja
in
xor
fidivs
call
ljmp
fists
mov
insb
lahf
push
mov
in
xchg
lcall
cmp
insb
je
cmp
fldl
shr
mov
icebp
jmp
movsl
xchg
jecxz
popa
sbb
repnz
imul
movsl
stos
rcr
pop
xchg
imul
cwtl
cmp
pop
mov
xchg
jb
rcrb
arpl
sub
xorl
jnp
add
jmp
sub
xor
out
xchg
add
cmpsl
repz
icebp
mov
addr16
xchg
inc
mov
out
inc
xor
cmc
xchg
ret
ret
daa
aaa
sub
in
std
das
pop
leave
xchg
divb
incb
pop
rorl
xchg
add
cld
pusha
pop
xchg
jle
add
jle
cmp
shlb
outsb
mov
dec
xor
pop
fstl
repz
into
mov
lcall
xor
cmc
ja
popl
cs
xchg
lret
dec
mov
cmp
push
jbe
inc
add
hlt
scas
mov
cmpl
lret
incb
jnp
mov
or
add
jo
or
aam
stos
add
xor
and
daa
dec
pop
mov
out
add
pop
dec
popa
xchg
mov
mov
insb
ret
and
or
std
gs
stos
es
aas
mov
ss
mov
pusha
push
cs
xor
mov
cmpsl
ret
adc
adc
mov
js
insl
dec
push
aad
push
sub
enter
cld
insl
js
pop
fs
adc
xor
les
jle
lret
sbb
ret
dec
fldt
mov
orb
dec
inc
mov
pop
jo
loopne
jecxz
adcl
add
movsb
jno
es
mov
mov
bswap
cmp
cs
aam
popa
push
dec
out
scas
jbe
mov
ljmp
mov
and
cmpsb
std
cltd
sti
pop
fnstsw
cmp
adc
inc
mov
pop
int
and
xchg
movsb
sbbb
outsb
out
cmp
and
mov
pusha
aad
fninit
sti
mov
mov
xor
mov
roll
cmc
inc
pop
jmp
flds
into
sti
or
mov
stc
test
dec
inc
sti
cmpsb
push
xor
cli
repnz
inc
lret
negb
push
mov
adc
in
adc
movsl
rcrl
push
cli
cmpsl
lahf
mov
xor
ret
mov
jge
and
sahf
cmp
lcall
sub
movsb
not
lcall
push
mov
xlat
cwtl
mov
shrl
lock
adc
add
ljmp
jp
test
xorl
adc
mov
jle
aaa
push
adc
mov
dec
jns
mov
loopne
jg
cltd
jns
ss
dec
dec
bound
cld
xchg
sub
mov
and
and
aam
and
lods
push
pop
lock
mov
les
sbb
pop
push
daa
stos
pop
scas
out
dec
bound
mov
rcl
dec
loope
cmc
je
sub
aad
add
ljmp
sub
jns
shll
les
jae
jecxz
hlt
dec
dec
dec
mov
xor
sbb
mov
lret
insl
inc
jnp
add
mov
cs
mov
mov
xchg
fbld
mov
fisubrs
fs
add
jb
adc
nop
mov
rep
lcall
sub
dec
rcrl
mov
jp
push
dec
adc
test
out
xchg
jp
pop
test
stos
ret
mov
push
inc
test
fldl
xor
aad
aas
jae
xchg
adc
stos
scas
pop
pop
aad
pop
shl
add
out
insl
push
ja
adc
stc
lret
push
dec
imul
cmpsl
int
lock
out
nop
xchg
or
dec
cmp
push
scas
dec
sbb
js
dec
push
cltd
rcrb
push
add
fsubs
je
or
push
fwait
inc
cmp
insb
mov
xchg
lret
shlb
jb
das
ret
repnz
mov
mov
test
subb
jns
push
call
sar
into
jb
sub
int3
xor
jo
mov
lret
mov
hlt
rcrb
ret
mov
into
loope
aaa
test
les
mov
xchg
hlt
nop
mov
sarb
test
pop
and
mov
jecxz
mov
nop
aas
jbe
push
fwait
inc
es
xlat
mov
push
or
dec
in
loop
inc
je
in
cmp
xor
inc
lea
div
icebp
pop
lea
lea
cli
mov
stc
dec
push
pop
pop
loopne
xor
stos
xor
push
imul
mov
cmp
pusha
mov
push
sbb
enter
jp
sub
test
and
xchg
sub
orb
push
jns
mov
nop
cmp
push
mov
sbb
and
mov
mov
negb
sub
xor
mov
sbb
shrb
mov
fwait
xchg
rorl
popa
mov
sub
cmp
xor
ds
xor
outsb
adc
ret
dec
mov
subl
shlb
imul
push
imul
push
insl
das
lahf
xlat
mov
out
xor
jo
lods
aas
push
and
mov
mov
in
sahf
jno
int3
sarb
cmp
pop
in
inc
popa
xlat
jge
xchg
xchg
ss
lock
rcrl
imul
arpl
in
sub
hlt
add
in
imul
pop
mov
repnz
stos
cmp
mov
mov
jbe
aaa
lods
xchg
std
or
push
sub
insb
pop
jl
sarb
in
push
xchg
xlat
pop
repz
mov
daa
mov
jl
fimuls
add
add
xchg
icebp
sub
clc
mov
jae
and
mov
jg
xchg
push
fwait
aas
or
jge
cmp
and
push
aas
call
daa
jle
pop
sti
sbbb
in
loop
movsl
adc
out
or
lret
sub
jae
test
lock
mov
into
int
sub
push
inc
lds
test
leave
xor
in
loopne
cmpsb
enter
out
clc
xor
adc
xchg
sbbb
clc
fs
push
or
in
hlt
aad
jp
sti
repz
adc
mov
mov
push
in
stos
into
aam
pop
xchg
out
pop
aaa
cmc
add
subl
shrb
xor
movsl
je
and
movsb
call
xchg
or
dec
xlat
dec
je,pt
cli
mov
cwtl
sarb
rorl
xchg
sbb
ficoms
sub
xor
mov
hlt
lahf
cmc
jecxz
pop
pop
jp
pop
push
inc
or
mov
ja
xchg
shrl
mov
cvtdq2ps
add
cmpsl
in
sti
jb
aaa
push
push
jecxz
jl
sbb
rol
or
sbb
fdivl
fistpl
arpl
aad
fsubs
inc
repz
xchg
outsb
adc
sub
and
in
sahf
je
into
scas
fldcw
fadds
adc
cmpsl
cld
aas
test
xchg
lret
adc
mov
xor
or
mov
js
divb
or
cmc
sahf
jbe
divl
cmp
lret
int
fldl
pop
ja
push
rcrb
push
cs
outsb
mov
addr16
arpl
mov
xchg
roll
cmpsb
test
fdivrs
sub
fists
add
mov
inc
inc
mov
je
push
lahf
ja
ja
in
decb
out
or
push
mov
sti
inc
sbbb
test
mov
pushf
jmp
jecxz
pop
mov
cmc
lods
rorl
push
add
cltd
roll
sub
xchg
dec
insb
inc
gs
orb
inc
jb
loope
dec
adc
mov
xor
int
clc
fcompl
outsb
lea
ja
bound
add
jp
mov
jl
jmp
pop
push
inc
xchg
push
fistps
test
faddl
aaa
in
fiaddl
sbb
es
hlt
dec
push
sbb
sahf
sub
and
sbbb
mov
pop
pusha
fst
fs
sbb
sbb
adc
xlat
push
push
fistpl
dec
dec
sub
add
sub
xor
rolb
sti
jns
pusha
and
les
pop
stos
mov
pusha
sbb
push
sbb
push
sbb
jg
sahf
sbb
adcl
fcoml
mov
adc
xchg
into
inc
jp
xor
fiadds
push
into
out
loope
cmp
fdivr
and
mov
cltd
pop
xchg
xchg
mov
inc
and
nop
insb
and
pop
mulps
lret
mov
and
arpl
jp
outsb
movsb
dec
int
xor
popf
in
fldl
pop
jle
add
jns
add
cmp
rol
pusha
inc
and
mov
add
idiv
mov
scas
test
mov
mov
mov
adc
arpl
hlt
loopne
loopne
jae
sbb
mov
push
leave
popa
xor
cmp
ja
or
jp
cmp
bound
xor
stc
ljmp
daa
hlt
or
js
push
jge
xchg
adc
jle
push
mov
mov
inc
repnz
mov
rcrl
sbb
sarl
cmp
es
pop
or
dec
hlt
andb
dec
push
shrl
insl
aaa
dec
xor
testb
xchg
or
ss
pop
cwtl
sbb
in
in
pop
adc
push
mov
outsl
sbb
jl
bound
xor
ficomps
mov
mov
daa
sub
add
jns
xchg
xchg
jno
sbb
mov
cmp
cld
pop
rcrb
push
sbb
mov
inc
loop
pop
in
dec
mov
in
ds
js
in
mov
jg
jno
fs
fsts
in
xchg
pop
pop
int3
mov
orb
sub
pop
inc
xchg
cmp
and
lcall
cmp
and
and
insb
adc
mov
mov
and
mov
mov
out
mov
push
loope
call
xor
gs
jae
jb
bound
dec
or
mov
mov
test
lds
cmp
mov
dec
cmp
push
push
lea
das
mov
cmp
dec
insl
popa
mov
cmpsl
xor
mov
int
out
mov
lret
sbb
imul
hlt
loope
outsl
hlt
stos
jae
xchg
mov
mov
aas
mov
xchg
inc
xor
je
insl
push
adc
stos
mov
out
popf
loope
shlb
cli
xor
mov
mov
cmc
outsb
jl
cmpsb
rcll
and
stc
mov
inc
insb
lret
stc
sub
sub
sub
femms
jge
jb
add
xor
mov
dec
lret
andb
aas
scas
pop
cs
jnp
sbb
mov
add
mov
cltd
daa
sbb
aam
jp
pop
ror
sub
movsl
std
mov
cld
jo
stc
inc
nop
lret
icebp
push
sbb
pop
jns
sbb
or
pop
dec
lods
arpl
test
rcl
and
add
cld
sub
push
adc
data16
ret
loope
outsl
dec
enter
cmpb
aaa
push
enter
cmp
push
cmp
mov
inc
jae
mov
pop
aad
jnp
lahf
fs
xor
mov
inc
push
push
fdivs
add
sbb
xor
mov
scas
dec
mull
daa
lahf
mov
push
add
and
adcb
inc
shlb
xor
rcrl
into
bound
push
out
mov
cmp
loope
pop
sbb
into
mov
jg
adc
out
lods
adc
cmpl
jo
push
imul
cli
out
sub
xorb
lret
mov
inc
cmp
mov
clc
push
dec
orb
and
insl
push
fwait
mov
jecxz
insl
cmc
push
sahf
and
mov
lret
pop
test
jbe
pop
test
test
dec
scas
mov
xor
popf
add
pop
es
movsb
add
push
mov
jp
mov
cwtl
arpl
mov
and
add
inc
push
mov
fsubl
arpl
ret
shlb
test
fstpl
sbb
xchg
add
popf
push
in
pop
cmp
push
sahf
mov
fcmovb
mov
add
adc
aam
adc
mov
mov
push
sbb
pop
int3
lods
jbe
mov
cmp
in
sub
inc
sub
je
test
cli
stos
push
and
imul
jmp
stc
orb
in
mov
and
mov
loopne
push
mov
in
adc
ret
cmp
leave
pop
mov
es
lds
bound
sar
mov
testb
push
xchg
les
rol
setp
push
stos
into
sub
pop
sahf
call
mov
jmp
lahf
sbb
xchg
in
xchg
test
insl
divl
push
test
xor
fistps
sahf
mov
negb
sub
in
sbbl
mov
in
clc
leave
push
stc
ror
jmp
sbb
mov
lahf
xlat
xchg
dec
xchg
jg
push
cld
and
test
repnz
push
push
adc
sbb
push
dec
enter
xchg
mov
int
int3
pop
lods
test
and
inc
pop
fldl
and
clc
adc
push
cmp
push
ret
pusha
mov
cs
in
xor
repz
xchg
push
imul
jnp
mov
push
lds
outsb
pop
push
sub
inc
mov
stos
jg
fists
cltd
imul
in
ja
xor
lock
or
lret
jo
xchg
mov
push
jb
add
cltd
andb
shrl
xor
cmpsb
sti
lds
dec
in
pop
xor
insb
mov
into
shrl
sbb
dec
lds
mov
cli
sbb
adc
les
notb
rorb
aaa
pop
jnp
paddsw
xchg
jae
adc
out
mov
jge
je
xor
or
xchg
in
lock
notl
loop
je
dec
pop
cmc
sbbb
push
or
out
repz
dec
add
and
sub
or
ss
xchg
sbb
lcall
or
xchg
andl
xchg
stos
dec
aam
inc
xchg
mov
xlat
jg
and
xor
fmuls
jns
push
pop
push
in
mov
inc
sub
insb
cmovg
or
adc
test
ljmp
rorb
dec
ret
jno
adc
adc
add
sub
xorb
data16
xor
add
jns
jne
pusha
xor
fimull
pop
pop
incb
xor
add
or
inc
pop
jmp
mov
imul
adc
out
outsl
jge
or
dec
movsl
fnstcw
test
lods
cltd
dec
jns
xchg
cmp
push
popf
pop
test
das
and
jbe
push
mov
push
add
push
cli
sbb
loopnew
inc
movsl
jnp
int3
or
mov
aas
sub
test
outsb
sub
ss
or
pushf
sub
dec
add
hlt
sbb
inc
jmp
in
pop
xor
or
and
in
pop
add
xor
aas
jnp
fsub
cwtl
into
xlat
jno
movsb
fwait
lret
fcmovu
divl
nop
sbb
adc
call
nop
movsb
data16
in
and
out
jg
out
add
dec
sahf
or
mov
out
or
int
outsb
fisubrs
and
repz
in
jp
ret
fadds
jmp
addb
movsb
adc
add
lods
sbb
mov
je
rclb
xlat
xor
test
and
jbe
mov
sbb
in
jno
negl
mov
cmp
mov
adc
push
adc
adc
lods
xchg
jecxz
pop
sbb
outsb
pop
jns
ljmp
icebp
mov
push
dec
cmpsl
inc
lea
add
jnp
fimuls
jne
push
sbbb
dec
fwait
mov
sbb
dec
cltd
inc
lods
lods
in
jo
push
mov
and
nop
negl
incl
scas
std
mov
xchg
jmp
movsb
jecxz
cmpb
inc
lods
jge
nop
mov
cmpsb
daa
and
jbe
daa
lret
and
into
fwait
cmp
jno
sub
outsl
sbb
jo
pop
shlb
and
imul
and
xor
scas
push
xlat
and
push
push
lret
cmp
shrl
fcoms
nop
jo
sbb
dec
sub
cwtl
jns
adc
pop
mov
mov
adc
xor
test
mov
pop
movsb
in
push
fs
fcoms
xchg
test
inc
hlt
ds
xor
aad
add
jns
mov
and
add
adc
js
into
into
push
mov
les
idivl
xchg
dec
push
lret
fmuls
xchg
mov
imul
pop
mov
push
int
push
xor
xchg
insb
xlat
orb
add
loop
stos
rorb
add
mov
sbb
add
and
ds
jecxz
sbb
jne
inc
adc
pushf
ljmp
pusha
mov
xlat
mov
add
scas
mov
mov
call
nop
xchg
add
sahf
cltd
mov
stc
test
ja
mov
stos
mov
jmp
fisubs
ja
xor
sti
aas
pop
hlt
out
into
in
popf
push
cmp
inc
cmp
sbb
or
es
dec
test
in
ja
fwait
jo
cmp
ret
inc
pushf
enter
sbb
lock
fidivrs
xchg
and
arpl
mov
sbb
add
aaa
enter
sarb
sahf
enter
rorl
shrb
jecxz
repz
lret
cmpsl
jno
div
sub
rcrb
movsb
icebp
rcrl
dec
sub
mov
or
stc
clc
out
adc
iret
cmp
cmp
sbb
nop
adc
and
mov
into
lea
inc
xorb
push
jno
jnp
or
xor
inc
jp
clc
pop
push
push
mov
hlt
sbb
jbe
cs
dec
cmp
mov
and
leave
ret
fucomip
jg
push
flds
mov
out
mov
add
add
push
das
outsl
insb
js
xor
test
or
loopne
test
aad
mov
fisubl
and
push
xchg
jns
mov
lods
cmpsl
lds
mov
pushf
pop
int3
lahf
ds
leave
sbb
nop
xchg
pop
in
nop
pop
outsb
sub
pop
cmp
push
imull
mov
loope
dec
inc
inc
jns
push
lret
push
or
cli
fwait
and
dec
inc
and
xchg
dec
aam
hlt
adc
push
inc
dec
cli
dec
rcl
add
xor
push
bound
jno
pop
imul
pop
dec
push
pop
inc
mov
xchg
mov
cmpb
movsb
pop
dec
sbb
pop
out
lods
popa
insl
std
xchg
icebp
pop
dec
add
mov
cmp
xchg
imul
js
iret
aaa
dec
popa
rclb
adc
pop
cmc
add
das
mov
testl
ret
or
mov
pop
add
scas
dec
cs
mov
jl
adc
lret
cltd
add
ljmp
sbb
mov
bound
adc
xchg
cli
in
in
add
push
push
cmc
ljmp
add
out
cmp
mov
dec
jle
shlb
ficoml
sbb
mov
add
jg
dec
loope
add
sub
sub
insl
add
lds
cmp
add
fucomp
xchg
jecxz
or
std
lods
insb
inc
test
scas
shlb
icebp
push
adc
xchg
xor
andb
inc
xor
push
cmpsl
iret
mov
adc
cmpsl
adc
xor
sbb
iret
out
enter
xor
mov
movsb
jo
jle
notl
cwtl
imul
and
outsb
push
nop
dec
push
push
sbb
es
rorb
stos
call
arpl
or
or
pop
dec
fsubrp
popf
in
push
loope
nop
inc
adc
and
popf
push
ret
jp
sbb
mov
push
fidivrs
xchg
sub
loop
mov
xchg
mov
sub
out
not
outsl
test
xchg
into
mov
call
imul
cmc
xor
loope
mov
sarl
pop
sbb
mov
enter
push
mov
fs
inc
cwtl
testl
test
cmp
lods
imull
ficomps
xor
cmp
pusha
into
pminsw
push
sti
xchg
dec
or
sbb
loope
adc
aad
mov
sub
loop
lret
stos
loop
pop
sbb
test
sbbb
jae
sub
lods
fwait
push
jb
jb
pop
pushf
sti
mov
gs
jns
jb,pt
cwtl
out
inc
push
movsl
repz
test
aaa
stos
sbb
or
sbb
cltd
rorb
push
lahf
inc
jl
push
xor
cmpb
sbb
sbb
xchg
push
fisubrs
xor
dec
mov
cmpl
sbb
cmp
jle
or
mov
inc
xchg
repz
pop
pop
lret
xchg
fstp
lahf
in
jb
lcall
xchg
push
loope
jecxz
insb
in
test
and
jl
dec
mov
pop
outsl
or
mov
enter
pop
scas
lds
jnp
pusha
mov
in
sbb
fstl
xchg
repnz
mov
pushw
fstpl
ljmp
in
or
xor
sbb
ret
stos
mov
popa
ret
mov
aad
push
lods
dec
nop
push
dec
xlat
or
das
gs
mov
out
adc
and
add
push
fcomps
mov
mov
scas
loop
adc
mov
xchg
pop
aas
pop
xchg
inc
mov
jno
push
jge
cmp
pop
or
sbb
mov
mov
sbb
mov
dec
inc
cmp
mov
mov
sbb
add
lea
mov
call
stc
mov
mov
push
pop
push
stc
adc
imul
das
lock
inc
sub
dec
push
xchg
and
call
bound
xchg
push
repnz
shlb
rcl
jle
jne
aaa
mov
add
lock
xor
sbbl
repnz
mov
sub
movb
daa
insb
mov
sbb
call
jno
pop
dec
int
cmp
sar
pop
cmp
out
fstpl
adc
mov
push
decl
std
das
ds
lcall
in
mov
mov
outsl
cltd
jp
cmc
cmp
push
pop
cmp
mov
fs
jp
sub
aaa
pop
cs
and
adc
dec
inc
das
or
shl
stc
aam
xchg
or
bound
pop
mov
cld
pop
addr16
cmp
fsts
scas
negl
inc
push
dec
repz
sbb
jae
mov
into
outsl
dec
aad
sbb
adc
cmp
inc
lahf
popa
pop
dec
fs
sbb
cltd
push
or
push
into
xchg
xor
sub
das
es
popa
add
clc
or
push
add
push
subb
outsb
arpl
out
mov
test
inc
es
pop
cs
fwait
negb
pusha
sbb
cld
mov
sub
mov
jo
stos
pop
adc
and
xchg
mov
fwait
pop
cli
loopne
jge
or
pop
cmp
add
cli
lea
movlps
add
sbbl
in
out
stos
adc
cmp
outsb
aaa
mov
ljmp
pop
repnz
cmpsl
testb
arpl
je
lods
pop
ror
adcb
add
insb
aaa
xor
pop
and
push
dec
jnp
jne
outsl
cmp
gs
pop
pop
pop
push
bound
push
jle
js
jb
insb
aaa
xor
pop
pop
push
inc
xor
pop
and
push
dec
jnp
jne
outsl
cmp
push
pop
pop
pop
dec
mov
sub
pop
mov
