ror
shl
mov
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
nop
xor
xchg
jmp
mov
mov
jmp
jmp
jmp
mov
inc
add
and
rol
mov
and
xchg
sub
xchg
mov
addr16
andl
nop
push
nop
xor
addr16
and
addr16
jmp
xor
addr16
push
mov
push
addr16
push
mov
push
mov
push
push
pop
jmp
mov
addr16
mov
nop
mov
xchg
sub
sub
dec
rol
inc
mov
jmp
push
xchg
push
mov
push
xchg
push
shr
add
pop
push
xchg
call
nop
jmp
mov
pushl
shr
ror
mov
pop
dec
or
and
add
pushl
xor
xor
and
sub
pop
rep
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
mov
shl
shl
mov
and
and
add
jmp
or
sub
or
mov
add
addr16
movzwl
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
push
mov
xor
mov
xor
and
sub
pop
cmp
push
pop
jmp
je
jmp
jmp
jmp
jmp
push
mov
add
mov
push
xchg
push
xchg
xor
xchg
jmp
jmp
jmp
jmp
push
addr16
xor
mov
jmp
and
xor
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
cmpsb
incl
add
inc
shl
mov
mov
xchg
jmp
call
xchg
leave
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
push
xchg
inc
mov
sub
xchg
push
addr16
jmp
mov
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
into
decl
push
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jne
jmp
mov
nop
lea
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
inc
xchg
push
nop
mov
xchg
jmp
push
nop
push
mov
call
nop
jmp
jmp
jmp
jmp
jmp
mov
or
shr
ror
add
mov
sub
xchg
push
addr16
jmp
lea
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
push
or
adc
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jne
or
inc
dec
mov
movzbl
jmp
jmp
jmp
jmp
jmp
jmp
jmp
nop
mov
mov
mov
nop
movl
addr16
jmp
mov
and
or
mov
mov
push
mov
and
and
mov
jmp
jmp
jmp
nop
push
mov
jmp
push
mov
push
mov
push
mov
pushl
nop
call
addr16
jmp
andl
nop
push
xchg
add
nop
or
sub
add
mov
add
and
and
mov
jmp
iret
movsl
and
jmp
push
xchg
call
mov
mov
mov
mov
xchg
mov
mov
and
mov
call
mov
jmp
jne
call
nop
jmp
add
nop
jmp
jmp
jmp
push
xchg
call
nop
mov
xchg
mov
nop
mov
xchg
dec
mov
jmp
push
mov
push
xchg
shr
mov
mov
mov
add
mov
add
xchg
jmp
jmp
jmp
jmp
jmp
xchg
cmpl
xchg
jne
push
xchg
jmp
mov
push
pop
inc
add
inc
mov
and
mov
jmp
jmp
jmp
jmp
jmp
push
mov
rol
mov
inc
shr
mov
push
mov
call
addr16
jmp
mov
jmp
jmp
jmp
jmp
mov
shr
mov
or
or
mov
push
nop
jmp
call
push
pop
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
xchg
add
add
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jne
orl
nop
lea
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
push
xchg
push
mov
pushl
addr16
pushl
xchg
jmp
jmp
jmp
jmp
jmp
xchg
rol
xor
mov
sub
mov
ror
and
add
push
xchg
push
mov
jmp
int
push
mov
call
xchg
mov
nop
mov
nop
mov
mov
or
shr
inc
shl
sub
mov
push
mov
call
mov
xor
pop
jmp
push
mov
push
xchg
add
xchg
push
mov
call
mov
rol
mov
add
add
add
shl
and
add
mov
jmp
push
nop
nop
nop
nop
pop
push
mov
push
addr16
jmp
inc
xchg
call
nop
lea
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
call
mov
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jne
rol
mov
shr
sub
pop
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
dec
hlt
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
push
xchg
movb
nop
movb
nop
movb
xchg
movb
xchg
movb
mov
jmp
push
nop
push
xchg
push
mov
push
xchg
xor
mov
push
sub
mov
push
rol
rol
and
mov
add
add
dec
rol
xor
add
dec
test
jne
pop
pop
call
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
mov
pushl
rorb
add
rclb
stos
push
pop
or
or
shr
mov
call
addr16
rol
pop
pushl
xchg
jmp
jne
or
mov
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
addb
add
std
adc
jmp
jmp
jmp
mov
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
call
mov
dec
nop
mov
xor
sub
mov
or
pop
jmp
inc
xchg
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
int3
add
add
test
add
add
shlb
inc
add
add
shll
push
pop
sub
mov
jmp
jmp
jmp
ror
dec
or
mov
and
sub
mov
shr
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
add
mov
and
mov
mov
mov
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
mov
mov
lea
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
call
push
pop
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
adc
add
cmp
mov
sti
pop
rol
xor
rol
mov
rol
pop
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
call
push
pop
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
je
call
xchg
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
movb
mov
movb
push
pop
movb
nop
movb
addr16
movb
nop
movb
xchg
jmp
push
mov
pushl
mov
push
mov
call
addr16
and
or
shl
pop
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
push
xchg
mov
pop
rol
add
sub
shl
or
mov
sub
mov
mov
or
pop
pushl
add
or
or
pop
xor
mov
rorl
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
add
rol
sub
or
rol
add
mov
sub
xchg
add
nop
cmpl
push
pop
je
push
mov
or
add
rol
mov
sub
nop
jmp
mov
jmp
jmp
jmp
jmp
jmp
jmp
jmp
mov
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
push
add
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
pop
hlt
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jne
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
xchg
add
add
mov
jmp
jmp
push
mov
xor
mov
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
addb
add
out
ja
fwait
adc
out
sbb
sub
xor
xor
xor
mov
mov
mov
mov
xchg
jmp
call
mov
movl
xchg
push
xchg
pushl
nop
call
xchg
or
mov
sub
add
xor
pop
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
rolb
dec
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jne
mov
xor
sub
pop
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
shr
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
shr
push
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
lea
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jle
mov
mov
movzwl
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
inc
rol
mov
and
mov
jmp
inc
mov
add
mov
ror
or
mov
jmp
add
shl
shr
xor
pop
add
pop
ror
and
pop
mov
rol
shr
add
mov
pop
call
xchg
jmp
add
xchg
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
xor
xor
xor
sub
mov
pop
lea
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
push
nop
jmp
call
mov
rol
xor
rol
mov
push
mov
call
xchg
xor
mov
mov
movl
addr16
call
mov
add
add
shr
sub
add
pop
nop
nop
nop
nop
nop
add
shl
rol
shr
add
mov
call
xchg
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
je
jmp
sub
mov
call
mov
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
add
jmp
cmp
xchg
jne
and
nop
add
mov
add
push
pop
add
xchg
jmp
nop
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
cmp
add
rclb
jmp
jmp
jmp
jmp
jmp
test
sbb
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
push
xchg
xor
nop
xor
sub
pop
jmp
mov
jmp
jmp
jmp
jmp
jmp
jmp
jle
sub
mov
mov
mov
andl
xchg
add
mov
mov
xchg
jmp
movb
xchg
movb
xchg
movb
push
pop
movb
nop
movb
xchg
movb
mov
movb
mov
movb
xchg
movb
xchg
jmp
cmpb
xchg
je
nop
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
and
rol
and
add
nop
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
lea
jmp
jmp
jmp
jmp
jmp
jmp
jmp
call
xchg
dec
xchg
lea
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jne
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
mov
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
je
shr
xor
xor
sub
mov
jmp
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
je
mov
mov
jmp
movb
mov
movb
xchg
call
mov
jmp
lea
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
xor
mov
inc
mov
push
mov
push
nop
mov
xchg
jmp
or
xchg
cmp
push
pop
jne
mov
mov
dec
dec
sub
pop
xor
mov
sub
rol
mov
pop
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
inc
das
inc
mov
sub
inc
or
and
shr
mov
jmp
lock
dec
and
or
mov
inc
push
pop
inc
xchg
decl
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jne
add
mov
cmpl
xchg
jne
jmp
loop
or
pop
lock
incl
xor
pop
add
shr
xor
pop
sub
inc
sub
xor
add
pop
jmp
addr16
jmp
jmp
jmp
sub
pop
dec
mov
mov
mov
mov
add
xchg
shl
add
dec
and
add
pop
push
popl
xor
mov
inc
shr
pop
leave
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jne
xchg
jmp
dec
mov
jmp
sub
nop
mov
mov
mov
xchg
jmp
movb
mov
incl
xchg
jmp
or
mov
jmp
and
mov
movsbl
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
movb
and
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
lock
incl
xchg
sub
xor
mov
mov
mov
xchg
jmp
iret
stos
mov
rol
mov
push
addr16
call
xchg
sub
xor
shr
or
shr
mov
movl
mov
call
mov
and
mov
jmp
aam
movb
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jne
jmp
jmp
jmp
jmp
jmp
jmp
jmp
adc
add
movl
addr16
call
push
pop
movl
push
pop
push
xchg
add
shl
mov
jmp
mov
mov
call
mov
cmpl
xchg
je
cmpl
mov
je
cmpl
mov
jne
add
mov
and
mov
jmp
add
xor
mov
jmp
pusha
jmp
jmp
jmp
jmp
jmp
jmp
jmp
sub
inc
or
dec
mov
mov
push
nop
call
xchg
add
mov
push
popl
movb
mov
movl
mov
jmp
movzbl
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
inc
and
xchg
xor
push
pop
nop
nop
nop
nop
nop
inc
mov
add
rol
mov
and
mov
inc
xchg
jmp
jne
shl
and
xor
or
mov
cmp
xchg
je
incl
xchg
sub
shl
xor
mov
cmp
xchg
jl
jmp
call
addr16
jmp
jmp
xor
mov
inc
add
sub
and
shl
pop
add
or
shr
pop
leave
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
xor
shr
mov
or
xor
or
or
mov
rep
jmp
jmp
jmp
jmp
jmp
jmp
jmp
sbb
movzwl
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
and
add
call
nop
popa
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
and
xchg
nop
nop
nop
nop
nop
pusha
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
call
xchg
popa
jmp
jmp
jmp
jmp
jmp
jmp
jmp
and
xchg
call
mov
call
nop
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
inc
addr16
shr
jmp
jmp
jmp
jmp
jmp
jmp
jmp
je
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
je
xor
mov
and
mov
and
mov
sub
nop
jmp
xor
xchg
jmp
jmp
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
add
jmp
incl
nop
add
xchg
cmp
nop
nop
nop
nop
nop
nop
mov
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jl
xor
mov
dec
mov
shl
sub
shl
and
add
pushl
or
or
pop
xor
shl
sub
mov
mov
add
add
xchg
mov
addr16
jmp
mov
xchg
jmp
rol
or
mov
mov
movzwl
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
add
xchg
add
nop
or
and
pop
xor
pop
or
mov
shl
add
rol
pop
leave
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
nop
call
mov
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
je
push
mov
jmp
daa
xor
lret
add
mov
cltd
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
js
nop
inc
incl
xchg
jmp
test
jmp
xor
mov
and
mov
sub
rol
pop
and
rol
add
pop
and
pop
leave
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
loop
xchg
add
addr16
xor
nop
jmp
push
lret
mov
mov
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jne
jmp
imul
or
jmp
jmp
jmp
jmp
jmp
sar
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jge
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
lea
jmp
jmp
jmp
jmp
jmp
jmp
jmp
dec
mov
pop
add
add
mov
mov
nop
jmp
call
mov
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
add
add
leave
jmp
in
divl
add
mov
xchg
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jne
lea
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
call
mov
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
je
and
shl
xor
shr
mov
nop
nop
nop
nop
nop
sub
addr16
and
dec
or
or
mov
mov
xchg
incl
mov
dec
mov
mov
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
add
add
mov
add
dec
mov
mov
nop
sub
xchg
sub
xchg
decl
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
call
ror
and
ror
mov
mov
push
pop
nop
nop
nop
nop
nop
sub
mov
decl
jmp
jmp
jmp
jmp
jmp
jmp
jne
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
mov
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jle
or
dec
mov
jmp
inc
iret
dec
jmp
jmp
sub
nop
add
mov
dec
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
jmp
mov
mov
jmp
dec
xchg
dec
mov
or
and
add
shl
mov
movzbl
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
loopne
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
shll
incl
push
pop
jmp
les
por
jmp
jmp
jmp
jmp
jmp
jmp
jmp
lret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
mov
fs
jns
lea
jmp
jmp
jmp
jmp
jmp
jmp
jmp
nop
nop
nop
nop
nop
shr
and
or
ror
dec
mov
call
nop
cmp
xchg
jb
inc
xchg
cmp
xchg
jb
inc
addr16
cmp
push
pop
jmp
ror
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
xor
mov
add
nop
dec
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jne
push
mov
pushl
push
pop
call
nop
nop
nop
nop
nop
nop
xor
sub
or
or
and
mov
mov
nop
call
mov
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
add
add
mov
xchg
xor
and
ror
mov
call
nop
jmp
dec
pop
cmp
cmpl
add
jmp
dec
das
mov
xchg
call
xchg
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jne
orl
mov
jmp
divl
inc
xchg
inc
nop
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
or
or
xor
mov
and
or
xor
mov
jmp
inc
pop
std
and
mov
sub
mov
pushl
inc
shl
sub
xor
pop
rep
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jne
xchg
call
push
pop
push
addr16
call
push
pop
jmp
or
mov
xchg
incl
xchg
dec
mov
mov
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jne
mov
addr16
jmp
xchg
rol
sub
mov
mov
nop
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
je
pushl
mov
rol
xor
pop
and
mov
or
add
or
mov
jmp
out
or
notb
addb
add
popa
or
xor
add
xor
mov
nop
nop
nop
nop
nop
inc
xor
dec
and
mov
jmp
loop
sub
ret
nop
nop
nop
nop
nop
sub
nop
jmp
rol
shr
mov
or
add
mov
sub
xchg
jmp
es
adc
inc
and
mov
incl
addr16
mov
push
pop
xor
nop
cmpl
nop
je
ror
mov
sub
mov
mov
pop
jmp
shr
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
leave
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
js
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jle
mov
addr16
movzwl
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
and
ror
and
or
shr
mov
and
mov
jmp
lods
jp
sub
mov
and
pop
mov
and
and
mov
mov
and
shr
add
pop
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
cmp
xchg
jne
nop
nop
nop
nop
nop
and
mov
nop
nop
nop
nop
nop
add
xchg
add
mov
add
mov
push
mov
xor
sub
pop
add
add
inc
xchg
nop
nop
nop
nop
nop
inc
xchg
decl
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
incl
inc
add
cmpl
addr16
jne
call
push
pop
nop
nop
nop
nop
nop
mov
mov
mov
mov
mov
xchg
inc
or
mov
nop
nop
nop
nop
nop
call
xchg
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jne
or
addr16
push
xchg
shl
mov
xor
mov
call
xchg
push
nop
nop
nop
nop
nop
nop
mov
mov
call
mov
mov
push
pop
dec
and
sub
and
mov
nop
nop
nop
nop
nop
add
inc
and
xor
mov
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
nop
nop
nop
nop
pop
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
add
pushl
inc
pop
add
nop
jmp
and
shl
or
sub
and
mov
add
addr16
nop
nop
nop
nop
nop
push
xchg
nop
nop
nop
nop
nop
call
nop
cmp
mov
mov
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
add
add
xlat
mov
mov
nop
nop
nop
nop
nop
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jne
xor
xor
mov
pushl
or
and
shl
and
pop
nop
nop
nop
nop
nop
add
xor
mov
add
xchg
add
mov
jmp
jns
nop
nop
nop
nop
nop
movzwl
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
and
xor
mov
mov
and
add
add
nop
add
xchg
push
nop
pushl
xchg
call
nop
mov
xchg
nop
nop
nop
nop
nop
add
nop
add
xchg
nop
nop
nop
nop
nop
ror
mov
nop
nop
nop
nop
nop
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jne
add
mov
cmpl
nop
jne
call
xchg
mov
nop
nop
nop
nop
nop
nop
and
shl
add
shl
and
mov
sub
mov
add
and
inc
inc
ror
add
pop
or
pop
rol
mov
and
pop
mov
addr16
cmp
nop
jne
mov
shl
mov
mov
nop
nop
nop
nop
nop
add
mov
mov
nop
add
add
mov
add
mov
leave
jmp
jmp
jmp
jmp
jmp
jmp
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
inc
and
ret
cmp
and
xchg
sub
adc
cmp
cmp
fdivrs
nop
pop
outsb
dec
add
aam
cmc
mov
daa
test
pop
jecxz
insl
pop
jo
in
inc
pusha
add
movb
jo
jmp
jmp
clc
out
ljmp
sbbb
data16
jo
jnp
pushf
pop
xchg
mov
xlat
fsubl
test
stc
mov
xchg
aas
or
adc
sbb
fmull
xchg
sub
xchg
loop
mov
shl
xor
xchg
push
aam
jl
test
add
xor
adcb
lret
sbb
js
jbe
mov
cmp
cmc
sub
adc
and
sbb
sti
xor
mov
out
sbb
sti
rolb
les
push
repz
add
test
mov
mov
test
xchg
and
mov
ss
pop
mov
sub
inc
leave
mov
data16
pushf
xor
push
pop
jae
mov
sbb
add
out
jl
in
mov
loope
repnz
push
xor
adc
stc
pusha
jb
pop
xor
mov
outsb
aas
iret
jae
aad
push
iret
push
scas
fdivl
out
scas
lcall
les
cltd
lret
or
inc
shll
adc
daa
xchg
cli
jp
mov
dec
mov
outsb
in
imull
dec
das
pop
sub
sub
rcll
xor
and
sahf
jg
jns
loopne
mov
inc
mov
test
cld
mov
mov
int3
out
icebp
mov
jg
jp
int3
xchg
dec
fsts
cltd
test
lret
sahf
sahf
cli
out
push
jne
mov
sbb
adc
jb
xor
pop
sub
lods
jmp
fwait
xor
lahf
jb
sbb
lret
ftst
out
pop
lock
cltd
inc
push
mov
test
orl
and
loop
repz
sti
pop
lods
mov
fidivrl
popa
rorl
mov
push
pop
xchg
out
xlat
cmp
add
jg
push
dec
mov
std
out
aad
pop
scas
cmp
push
std
mov
mov
lret
popf
inc
pop
xor
cli
push
dec
xor
mov
pop
mov
into
xchg
push
jge
es
add
fists
jmp
pusha
les
push
xchg
pop
mov
cmp
cmpsb
and
inc
jl
sbb
cs
mov
fstl
test
fs
out
xchg
adc
mov
and
mov
adc
rcl
addr16
clc
jecxz
rorl
or
ret
mov
push
mov
inc
lahf
xchg
lea
scas
aad
negb
ds
push
mov
aad
clc
sub
mov
lret
dec
mov
jno
dec
popf
or
sbb
xchg
xor
test
xchg
jl
xchg
xchg
inc
sub
cmpb
les
mov
popf
jmp
ljmp
add
es
loopne
mov
mov
dec
imul
or
dec
cmp
and
sahf
cs
adc
sbb
add
xchg
arpl
mov
sbb
sub
lret
jmp
push
out
cmpsl
into
cli
outsl
pop
fs
fwait
or
in
sbb
sub
inc
out
xchg
out
std
inc
popa
add
mov
stos
add
and
cmc
ret
sbbb
mov
push
xchg
loopne
outsl
mov
sub
xchg
mov
sub
sub
test
cld
clc
push
insb
mov
pop
add
push
mov
push
mov
push
jb
test
mov
stos
mov
pop
mov
push
mov
in
lahf
pop
mov
fldl
mov
cltd
pop
cmp
icebp
push
enter
xchg
je
aad
movsb
mov
or
fsubr
mov
fdivs
add
iret
push
test
jmp
insl
mov
bound
ss
adc
je
and
jbe
iret
scas
stos
sbb
sbb
insb
lods
mov
jle
mov
loop
pop
pop
mov
nop
cwtl
repnz
inc
jb
cwtl
shlb
lret
jns
sub
rcll
or
cmp
or
sbb
setg
test
mov
mov
gs
pusha
sti
xor
and
add
mov
cmpsb
and
je
dec
pop
ss
movsl
aam
adc
dec
xor
dec
pusha
das
sarb
lahf
ret
and
xor
fldt
idiv
cmpsb
push
addl
je
dec
or
and
nop
movsl
mov
repnz
dec
mov
push
aam
aad
and
sub
subb
inc
inc
and
inc
mov
mov
repz
add
pop
mov
test
inc
lret
mov
xor
stc
jne
adc
dec
push
in
jb
mov
stos
testb
lods
xchg
lods
inc
mov
cmp
loope
or
scas
fisubrl
sub
lods
aaa
mov
subb
or
test
mov
ret
pop
ds
inc
mov
ljmp
mov
cmpsl
adc
pop
jb
and
jo
jle
mov
jb
cli
jle
mov
and
sbb
arpl
aam
testb
call
shl
scas
movsl
xor
cmp
pop
ss
dec
mov
jns
or
jle
xchg
movsl
or
inc
ss
les
ds
push
hlt
je
xchg
inc
jmp
jle
jnp
adc
dec
pop
out
cld
mov
dec
pop
jl
or
shl
aaa
sahf
adc
mov
push
out
jnp
add
jmp
jbe
aam
or
inc
cld
ret
inc
jb
jno
sbb
jle
jns
sub
test
or
mov
pop
bound
stos
or
gs
les
xor
cmp
or
jg
insb
inc
in
outsb
jae
iret
enter
lahf
mov
outsb
and
pop
inc
pop
push
negl
inc
pop
jns
push
or
imul
icebp
shll
jl
or
mov
push
sub
je
in
mov
nop
adc
je
lea
int
xchg
dec
pop
sti
arpl
mov
lods
les
lahf
fistps
cmp
dec
testb
test
push
jo
mov
push
pop
lea
mov
add
insl
stc
in
aaa
stc
repz
mov
popf
and
push
mov
mov
push
dec
cmpsb
dec
xchg
stc
add
cli
and
cld
pop
or
js
add
sub
lret
lret
sahf
in
mov
dec
aam
jne
out
call
pop
or
fmull
rcl
push
repnz
cld
ror
cmpsb
or
pop
xchg
fsubrl
popa
mov
push
jns
dec
outsl
push
incb
hlt
lock
iret
std
mov
xor
test
dec
pop
sbb
pop
sahf
fcmovu
jnp
pop
mov
or
jle
sbb
pop
mov
mov
pop
or
notb
sbb
push
punpckhwd
sbb
cwtl
mov
jp
ret
cmc
mov
mov
bound
xor
pop
mov
adc
mov
and
mov
sbb
mov
jmp
enter
subl
stos
push
imul
mov
xchg
hlt
nop
and
xor
clc
jecxz
jae
mov
xchg
jae
aad
fs
ds
pop
cmc
mov
sbb
jo
fcoms
pop
xchg
sub
xchg
push
nop
jae
sbb
pop
ds
pusha
and
inc
and
mov
enter
pusha
sbb
cltd
push
hlt
dec
scas
mov
mov
ss
xor
cmp
mov
mov
loopne
sahf
jle
gs
cmc
dec
pop
jno
push
insl
stos
ds
pushf
fists
or
xchg
mov
mov
jae
xor
ja
ljmp
sbb
push
lods
in
xlat
imul
pop
adc
cmc
mov
into
cmpsl
xor
cwtl
or
jle
mov
inc
dec
xorl
sbb
pop
mov
fnsave
pop
dec
stos
dec
stos
dec
out
adc
inc
loop
mov
mov
cmp
sbb
cwtl
push
stos
xor
iret
adc
ja
in
sub
mov
mov
imul
sub
jne
push
push
lock
insl
inc
mov
nop
sub
cmp
lret
jne
push
into
push
xorb
or
enter
outsb
ja
mov
fiaddl
sub
xchg
fmul
je
fcmovne
inc
sbb
rcl
addr16
sarb
popa
jecxz
dec
mov
pushf
jb
jno
xor
in
push
mov
or
cmp
sub
mov
mov
push
adc
mov
or
arpl
movsl
sub
xchg
inc
push
xchg
in
mov
or
inc
clc
fldl
das
and
leave
or
xor
mov
dec
dec
sti
mov
pop
data16
divl
in
lahf
cmc
andb
sub
imull
xchg
pop
nop
ljmp
cmp
lock
xor
leave
sub
cltd
out
lods
cwtl
test
mov
dec
cmp
and
jno
jg
rclb
cmp
xor
nop
in
fdivrl
ret
loope
mov
mov
loope
jbe
xor
or
mov
hlt
pop
and
cmp
jno
mov
add
jecxz
outsl
mov
push
cmpsl
cmpsl
xor
lock
pusha
ret
test
lret
fnstenv
jg
mov
std
je
lret
xchg
cmc
pop
and
pop
sbb
aad
out
pop
cs
movsb
push
inc
lods
inc
pop
lods
mov
push
lods
jg
data16
jno
push
hlt
mov
dec
lret
fnstenv
js
xor
cmp
dec
cld
imul
xchg
lock
mov
cld
xchg
retw
xchg
jne
lret
cld
pop
inc
cmovnp
ss
xchg
lahf
fwait
xchg
outsb
lds
jl
std
test
fwait
push
sbb
sarl
imul
jo
ret
gs
rorl
rcl
push
inc
or
and
pop
pop
sub
mov
dec
jae
adc
push
mov
mov
loop
push
jle
pop
outsb
and
mov
je
jo
into
js
pop
rcl
and
mov
mov
mov
inc
or
insb
in
call
pop
ss
hlt
pop
out
pop
shlb
mov
fbstp
into
jno
icebp
cmp
cmc
test
or
ret
pushf
sub
fidivrs
mov
adc
push
aad
outsb
sahf
xchg
cwtl
aaa
pop
push
insb
and
inc
mov
dec
mov
push
add
test
icebp
lods
outsl
jno
and
clc
pop
fbstp
and
pop
mov
mov
inc
add
or
pusha
dec
xor
popf
mov
insl
bts
mov
add
adc
aad
clc
mov
pop
imul
adc
xor
in
ljmp
mov
sbb
cmp
sub
jl
mov
pushf
or
loopne
inc
sahf
fldt
xor
adcl
rolb
into
daa
pop
out
push
xor
push
mov
push
mov
jl
mov
adc
in
push
add
and
xchg
std
lcall
daa
xor
mov
js
mov
ret
popf
push
ljmp
dec
ja
sbb
test
cmp
roll
rolb
dec
les
mov
cs
js
jns
iret
adc
imul
cmp
cmpb
and
mov
mov
js
shrl
push
adc
or
cmpsl
mov
dec
inc
cli
cmp
insb
insb
xor
mov
cmpl
in
cmp
fwait
sbb
xchg
fisubl
stc
jle
adc
cmp
cmpsl
push
sbbl
cwtl
or
push
mov
div
mov
mov
push
fidivl
dec
mov
shl
mov
inc
cmpsb
xor
sahf
push
adcb
mov
ss
icebp
adc
scas
pop
mov
lret
aad
mov
iret
imul
data16
xor
push
stos
into
lods
adc
xor
dec
mov
xchg
ret
lods
mov
dec
test
pop
add
fisubs
pushf
mov
add
sbb
jb
dec
sub
mov
mov
jb
sahf
cmp
jmp
nop
aad
pop
jmp
jge
jno
arpl
fsubl
into
fidivs
shlb
mov
dec
pop
cmp
pusha
adc
cmp
out
and
xacquire
ret
jbe
xor
ljmp
shll
push
pop
jo
imul
out
aad
scas
out
xor
push
call
movsl
mov
push
clc
jae
stc
adc
fs
inc
push
add
scas
push
addb
iret
ljmp
pop
les
mov
and
mov
or
rolb
rolb
outsb
je
jecxz
cmp
bound
and
jno
jbe
add
pop
mov
dec
scas
and
inc
test
stos
push
stc
push
push
pop
sahf
sbb
fcoms
out
lcall
fldt
aas
or
rcrl
dec
out
dec
test
out
ret
pop
aad
xchg
sub
xchg
adc
and
loop,pn
or
jl
and
jmp
mov
push
sbb
js
imul
adc
pop
and
pop
push
stos
adc
das
ficoms
stc
cld
stos
test
mov
dec
xor
push
mov
aaa
push
mov
loopne
popa
movsl
dec
cmpsl
scas
std
aas
cmp
xchg
aaa
mov
rcrb
inc
repz
cmp
fidivs
sub
mov
cwtl
pop
fwait
push
jno
inc
mov
mov
scas
cmp
inc
jl
es
cli
jne
je
push
xchg
inc
mov
loopne
inc
aas
push
loop
mov
call
jmp
mov
mov
fninit
sub
popl
imul
imul
mov
jae
mov
add
cmp
clc
sbb
add
fidivs
in
bound
mov
int
adc
adc
add
out
scas
sbb
out
push
test
push
sbb
pop
int3
xor
xchg
sti
in
mov
jo
push
lret
add
jbe
es
inc
cld
in
inc
arpl
test
jg
cmp
test
lcall
pop
into
pop
mov
and
push
or
jl
shl
pop
decl
inc
bound
in
adc
push
jo
or
mov
es
adc
mov
jl
mov
jnp
sub
or
imul
scas
mov
sub
cmp
js
pop
xchg
cmp
jp
or
jns
mov
lcall
mov
aad
ljmp
loope
sbb
pop
dec
stc
inc
sbb
mov
adc
outsl
adc
call
sub
mov
add
hlt
into
adc
dec
sahf
divb
hlt
push
mov
je
add
dec
mov
test
mov
xchg
sbb
sub
dec
mov
and
mov
das
xor
xor
clc
inc
or
pop
mov
jmp
fstpt
inc
out
xchg
mov
fisttps
xorl
cmp
adc
lea
mov
movsb
pushf
loop
mov
arpl
out
cmp
fldt
xor
popf
out
mov
or
gs
test
pop
imul
and
cmpsb
loop
adc
sti
push
jns
fstpl
leave
and
lret
rcl
or
faddl
mov
and
popf
mov
gs
sub
jl
push
dec
enter
or
mov
mov
cmpsb
in
testl
push
adc
popa
fiaddl
cmp
jns
loope
mov
inc
cs
lods
mov
cmpsb
icebp
lcall
jge
mov
in
sub
sub
ds
push
and
ja
movsl
jg
ret
mov
testl
pop
test
push
lods
lock
add
outsb
test
and
bound
mov
and
adc
stos
int
icebp
std
popa
aam
jo
pop
call
cs
fsubrl
iret
mov
sub
andl
or
jnp
js
pop
sbb
pop
ficoml
cmpb
push
mov
mov
mov
or
mov
fwait
xchg
or
daa
cmp
mov
sub
dec
in
fisttps
and
test
sbb
pusha
dec
mov
int3
mov
jns
lods
jge
jle
imul
fwait
pop
cmp
dec
mov
pop
out
mov
mov
leave
sahf
ljmp
xchg
stc
mov
mov
inc
lcall
inc
push
cli
shl
test
mov
dec
xor
pusha
mov
bound
imul
andb
je
fwait
jl
jmp
inc
mov
fcoms
into
jg
movsl
les
push
jae
scas
dec
mov
test
push
sbb
xchg
arpl
pop
inc
loopne
push
jns
aad
lcall
test
push
and
ud1
xchg
fsubrs
sbbl
fnstcw
fadd
stos
out
push
fstp
stc
push
js
outsb
stos
xor
mov
int3
cmp
idivl
into
cld
cmp
clc
cli
xor
dec
pop
xor
sbb
cld
push
jno
cmp
lods
push
dec
outsl
sub
push
rorb
push
jne
cmpsb
and
lock
dec
push
adc
xchg
scas
push
mov
pop
jle
fistl
jp
les
iret
push
out
cmp
push
xchg
jl
mov
rcrb
jle
jmp
ljmp
xchg
into
packssdw
data16
loope
mov
xorb
subb
xor
and
sub
aad
sbb
scas
in
in
inc
and
mov
inc
lock
jl
cmp
mov
mov
jns
aas
and
pmaxsw
das
cmp
inc
or
ljmp
icebp
jne
xchg
call
lret
pop
es
out
xlat
hlt
gs
cltd
testb
sbb
mov
sarl
push
jle
lret
mov
push
ret
push
xchg
xchg
out
arpl
add
mov
or
pop
inc
aas
pop
pop
xchg
pop
loopne
les
xchg
mulb
inc
mov
mov
sbb
sbb
jge
push
repnz
xor
cmp
xchg
xchg
aaa
mov
pop
mov
xchg
stc
jmp
pop
xlat
or
mov
sbb
bound
fstl
cwtl
ds
lods
test
and
jl
inc
sbb
xor
jge
push
inc
stos
mov
jge
cmpsl
cmp
mov
push
sub
mov
iret
mov
pushf
in
mov
push
mov
xchg
push
add
jae
sbbb
daa
push
pop
push
cld
jp
cmp
mov
push
inc
mov
fdivs
shrb
add
sbb
push
push
inc
dec
xchg
mov
mov
cli
dec
pop
adc
inc
push
push
cli
sbb
mov
hlt
mov
pop
xchg
jecxz
movsl
dec
cmp
and
faddl
hlt
dec
andl
bound
add
sub
rorb
push
fwait
xor
mov
cmp
in
and
pop
fisubrl
sbb
sti
xor
pop
fcoms
call
inc
cmpsb
out
xchg
in
in
cmp
cmp
xor
xor
test
icebp
test
cmc
xor
add
cmp
sub
ljmp
mov
pushf
add
aas
mov
add
popa
shr
outsl
sub
pop
inc
sub
sub
sub
inc
push
inc
add
jne
xor
mov
mov
fcom
inc
in
inc
ret
out
cmp
icebp
push
xor
cmpsl
lcall
and
push
sti
ss
insb
xchg
xchg
rcrl
insb
jp
mov
addr16
xchg
dec
loop
aas
popf
sahf
je
shrb
movsb
stc
and
arpl
xor
testl
fcompl
mov
inc
scas
push
aad
cmp
out
bound
xchg
jne
or
add
in
icebp
xor
cmp
loope
addl
inc
sub
std
rol
jne
adc
dec
and
dec
sbb
push
cwtl
mov
js
test
leave
and
or
sarb
or
rcrl
push
in
push
popf
daa
addr16
mov
sub
pop
jo
xchg
add
addr16
pop
lds
push
shll
out
dec
ds
int
xchg
scas
shll
pop
pop
sbb
add
sbb
lret
daa
mov
dec
cli
aam
push
sub
shll
leave
cld
repz
lods
mov
pusha
xchg
test
daa
jo
stos
cmc
cmpsb
push
out
icebp
or
test
repz
fcoml
push
cmp
sti
jp
lret
push
js
push
repz
push
cmp
cmp
lods
sub
aaa
sbb
bound
in
rolb
xchg
loopne
mov
jo
sbb
out
shll
data16
gs
aaa
or
test
mov
loope
or
xor
pushl
sub
fisubrl
lahf
ficompl
xchg
cmp
in
aas
pusha
jl
ja
aas
jo
mov
les
xchg
adc
jne
xor
jecxz
xor
push
xchg
data16
jno
mov
aam
test
imul
cli
push
test
add
add
mov
fs
fdivrl
scas
pop
sbb
and
mov
pop
fsubr
ss
cld
adc
cmpsb
test
rorl
ret
mov
push
add
push
rolb
stos
jbe
addl
aad
filds
cs
inc
popa
mov
adc
fcoml
mov
daa
jmp
test
mov
or
adc
idivb
sub
dec
xchg
inc
js
loopne
mov
inc
and
and
lods
jecxz
xor
aad
sbb
add
addr16
bound
fisttpll
je
sbb
add
shll
xchg
andl
scas
rolb
call
push
sbb
insb
bound
xchg
call
ds
addb
jnp
stos
lcall
inc
xchg
sub
pop
outsl
lret
push
mov
push
jns
push
js
sub
dec
push
inc
stc
push
xchg
push
stos
adc
repnz
imul
sbb
xchg
ss
aaa
pop
stc
inc
mov
popf
sub
xor
dec
ljmp
jnp
xchg
push
sbb
dec
mov
call
dec
movsb
adc
mov
dec
push
rcrl
jae
sub
adcb
dec
scas
mov
scas
out
cmp
into
adc
xor
mov
jmp
repnz
popa
incl
sub
inc
stos
xor
mov
sub
ficompl
arpl
in
xchg
in
xor
sbb
fidivl
xlat
push
add
pop
xchg
jno
movsb
outsl
bound
lods
arpl
or
lahf
fstpt
fs
mov
mov
movsb
and
aas
pop
add
or
pop
fnstcw
jae
rorb
pushf
xor
pop
fwait
dec
cmp
scas
les
je
fdivs
imul
mov
mov
bswap
cmp
addb
add
sahf
jnp
xor
hlt
enter
fdivs
fbld
adc
or
scas
add
ss
dec
test
cli
inc
stos
bound
adc
push
outsb
test
test
adc
repz
out
or
mov
mov
mov
mov
mov
ds
pop
jl
cmp
add
jno
int3
daa
and
push
addb
jge
fwait
das
loope
out
jl
pop
pop
call
mov
jae
sub
popf
pop
xlat
xchg
fldcw
cwtl
xchg
fnsetpm(287
rcrl
sahf
xor
jg
or
fldenv
outsb
xor
mov
rorl
ds
or
push
cmp
int3
out
or
jge
pop
push
sbb
fs
add
mov
mov
mov
add
notb
ret
out
stos
dec
in
ss
inc
sbb
lods
jecxz
or
leave
xchg
in
ljmp
int3
push
sbb
aam
test
in
nop
mov
xor
jns
mov
mov
out
add
add
outsl
movsb
jle
and
test
mov
mov
or
pop
cwtl
test
inc
in
mov
fwait
or
in
pushf
pop
xor
push
mov
jp
mov
push
or
or
in
dec
xlat
or
cmp
cmp
mov
adc
push
and
xor
shrl
sbb
lcall
frstor
xchg
adc
pop
push
cltd
nop
sub
enter
fcompl
mov
jmp
bound
push
pop
and
dec
rorl
inc
push
pop
gs
cltd
adc
pop
jne
inc
sarl
add
or
push
xor
lods
xchg
dec
jae
xchg
jl
fstp
jnp
bound
lcall
movsb
out
lock
jb
xor
shll
out
sbb
inc
ds
sub
dec
sbb
sbb
cli
je
dec
jne
dec
fsubrs
inc
loope
js
xchg
dec
sub
cmpsl
bound
pop
arpl
sbb
cli
jbe
lods
shll
xchg
inc
jl
mov
xor
dec
push
mov
dec
outsb
jle
cmp
or
ja
inc
data16
mov
inc
push
sbb
js
cltd
inc
or
popa
sahf
sbb
sub
xor
mov
fwait
bound
repz
xchg
pop
js
lcall
xlat
clc
xchg
sti
inc
mov
jbe
jno
lahf
flds
fdivr
xchg
pop
popf
jecxz
mov
aaa
dec
mov
ss
or
stos
inc
jnp
decl
mov
mov
das
roll
insl
mov
mov
or
dec
mov
jg
mov
or
out
cmp
jno
js
push
loop
jg
push
enter
roll
repnz
inc
adc
in
dec
push
inc
movsb
lret
dec
in
sub
sub
lcall
xor
call
loopne
dec
cmpsl
mov
pop
and
fcmovb
test
aas
stos
pop
xchg
add
add
insb
notl
iret
jp
cwtl
sub
pop
cwtl
bndstx
sub
lds
in
pop
int
ds
or
inc
and
pop
cmp
pop
incb
jne
pusha
dec
stos
mov
inc
pop
cltd
cli
clc
jmp
aad
outsl
and
push
push
outsl
aad
les
jne
mov
out
jns
sbb
movsl
pop
sub
push
mov
in
loope
xor
lret
sbb
clc
push
lods
lods
lcall
pop
pop
sbb
push
fsubrs
dec
call
orb
gs
sub
jo
add
mov
cld
lea
or
stc
andb
ret
mov
aad
inc
or
pop
sarl
jp
cmp
scas
xchg
sbb
mov
push
imul
cmp
and
inc
dec
lods
aas
add
sbb
or
adc
xchg
pop
sub
jnp
jnp
cld
jmp
sub
je
pushf
sub
int3
lds
or
push
push
mov
addr16
push
out
dec
js
sti
and
popa
sbb
cli
xchg
push
dec
aas
cmp
sub
daa
icebp
mov
push
sbb
fcmove
scas
mov
jmp
pop
ret
add
inc
lock
stos
mov
push
mov
in
push
scas
out
ret
cld
jb
arpl
sbb
rolb
mov
pop
push
and
mov
or
xchg
outsb
lea
pusha
movb
iret
mov
add
fwait
dec
call
push
inc
inc
mov
out
add
out
xchg
ljmp
and
notl
out
cmp
xor
mov
orl
iret
rcll
sbb
icebp
push
repz
sbb
mov
fistpll
aad
xchg
push
push
sub
sbb
das
and
stos
and
aaa
xlat
add
loope
testl
mov
sub
mov
sbb
imul
mov
xchg
sub
cmp
mov
lret
cs
pop
sub
push
ret
xchg
cmpl
stc
adc
nop
xor
inc
adc
jle
movl
xor
pushf
jecxz
push
js
xor
xor
test
int3
push
hlt
or
adc
xchg
cmp
sarl
mov
cmp
xchg
fcmovnbe
xchg
or
fistl
lods
neg
fisubl
dec
sub
jge
lock
pop
scas
inc
cwtl
cmc
jbe
cmp
ds
lea
pusha
push
push
into
insl
movsb
mov
aam
testb
jmp
movsb
jg
jns
stc
xor
adc
pop
jecxz
dec
outsb
loopne
test
jecxz
cltd
std
inc
pop
xchg
popa
cmp
mov
cmc
push
orb
ret
and
jecxz
xorl
jns
pop
xor
mov
sub
ret
out
and
pop
setns
push
popa
les
aas
imul
xchg
clc
adc
push
and
movsb
or
xchg
and
cltd
pop
xchg
push
adc
movsb
cmpsb
add
outsb
out
mov
in
pop
arpl
lods
mov
out
dec
push
lock
dec
sbb
sbb
popf
sbb
stos
add
repnz
xor
cwtl
pop
pop
sarl
dec
push
sbb
addr16
or
adc
stos
pop
lea
inc
mov
lds
int3
loope
in
sub
lods
in
out
push
test
nop
inc
das
bound
cmp
repnz
popf
push
aaa
je
daa
pop
in
in
clc
fisubrl
loop
loopne
cmp
mov
out
cmpl
dec
xor
lock
mov
mov
pushf
cmp
dec
mov
sub
add
mov
cwtl
xchg
loope
es
loop
and
daa
sarb
fsub
imul
pop
jo
iret
xchg
in
imul
mov
loopne
and
stos
mov
mov
cmp
cmp
sbb
mov
cs
sti
mov
jecxz
imulb
insb
mov
stos
in
adc
push
mov
clc
cmp
jo
adc
aaa
sub
add
xor
mov
adc
in
lea
aas
jle
fdivrl
fists
getsec
dec
push
pop
jecxz
xor
int
push
sub
jnp
and
mov
je
add
arpl
in
and
in
sbbb
pop
pop
lods
imul
xor
inc
xor
lcall
dec
mov
adc
fisttpl
push
loop
iret
std
jl
xor
push
nop
jmp
mov
sub
test
xor
cld
or
add
adcb
mov
outsb
iret
fisubs
xchg
push
push
add
fiaddl
mov
mov
or
or
lahf
cs
xchg
mov
outsb
adc
cmp
cwtl
addr16
aas
or
pop
in
sbb
aas
dec
xchg
xchg
adc
scas
nop
mov
adcb
les
imul
sti
inc
adc
mov
aaa
xor
clc
jno
fldcw
test
enter
pop
out
ret
insb
les
ljmp
mov
cmp
pop
aas
xor
lahf
mov
xor
add
dec
int3
in
addr16
loop
mov
fldcw
test
push
mov
ja
mov
or
fildll
xchg
lds
jo
test
call
test
sub
shll
sub
pop
sub
xchg
sbb
shlb
pop
sbb
test
stc
xchg
add
repz
add
js
popa
sub
sti
pop
out
add
and
mov
mov
ja
repz
idivl
outsl
ret
loopne
js
sbb
xor
sub
mov
push
or
frstor
xchg
push
idivb
pop
push
cmpsl
mov
in
lahf
jge
jns
imul
roll
jg
xor
push
mov
pop
cmp
mov
cmp
or
adc
add
in
popa
sub
or
es
add
mov
leave
out
gs
call
es
out
out
inc
push
mov
mov
outsb
in
pop
jne
ffree
sub
in
loopne
test
dec
fiadds
std
pop
lcall
cmpl
int
mov
mov
cwtl
jge
std
outsl
sbb
dec
pop
cwtl
sbb
decl
pusha
lds
push
andb
sahf
test
push
jns
pop
xor
inc
xchg
divl
ja
xor
dec
dec
sub
bound
dec
lds
and
jp
int
push
add
lret
sbb
popf
fsubrl
cwtl
in
and
mov
fcomps
sub
push
inc
or
sub
imul
mov
inc
sahf
sbb
test
dec
ss
inc
fdivr
icebp
push
sub
movsb
or
push
imul
pop
or
iret
pop
jl
stc
mov
push
aad
fnstcw
jne
jg
cld
int
loop
inc
lcall
pop
scas
lods
mov
xchg
js
jne
or
aas
cltd
cmpsl
sbb
lahf
daa
add
call
cli
dec
lock
xchg
pop
insb
or
arpl
std
lcall
sbb
lret
imul
pop
mov
push
and
jg
test
mov
mov
movsl
cs
lcall
sub
mov
push
test
sbb
rolb
cmp
lahf
pushf
loopne
sub
test
fisttpll
test
mov
and
xor
pop
ds
sub
fdivl
scas
fisubl
pop
lret
in
xchg
or
lcall
cmpl
test
dec
fiadds
sub
or
jne
jb
and
movsl
incb
mov
inc
mov
or
movl
shrl
pop
mov
out
dec
pop
and
adc
pop
subb
pop
pop
cmp
xchg
or
jp
vmovaps
and
push
sbb
ljmp
loope
and
dec
pop
pop
push
mov
pop
enter
insb
test
or
and
or
mov
je
cmpsl
fldl
sti
mov
cli
leave
cmp
lret
dec
addr16
jne
dec
es
in
jecxz
mov
jg
nop
sbb
mov
mov
fcomps
inc
add
xchg
cltd
mov
sbb
lahf
cwtl
sub
mov
ss
loop
add
fcompl
loopne
loop
jnp
jo
das
or
sbb
iret
out
in
cltd
xor
in
mov
dec
ljmp
dec
mov
jmp
ljmp
xlat
jmp
pushf
cwtl
push
push
adc
test
andb
sbb
out
fcmovbe
sub
jb
jo
mov
cs
adc
inc
xchg
es
and
xor
xchg
fcompl
pop
inc
dec
xlat
push
iret
pop
sti
add
aam
shll
hlt
mov
pop
jmp
jno
lock
in
addl
test
sbb
into
in
subl
pop
pop
lods
shrl
js
and
pusha
in
outsb
outsb
addr16
push
push
popl
and
out
scas
fidivl
mov
movzbl
xchg
xchg
xlat
and
lea
mov
xchg
inc
mov
and
adc
loope
es
adcb
jl
cld
je
push
jmp
add
fiadds
sub
xor
aam
fs
xchg
sarb
sahf
xchg
test
test
sarb
in
adc
loope
pop
inc
into
inc
repnz
push
xor
dec
icebp
pop
in
push
push
push
xchg
data16
cltd
data16
enter
jge
loop
xchg
xor
test
jnp
ret
pop
andl
inc
pop
xchg
or
jae
mov
scas
leave
lret
or
jp
imul
test
insl
sbb
or
cli
bound
xchg
and
sti
push
imul
xlat
fisubs
fldenv
mov
ret
add
sbb
jne
std
cmp
inc
fisubrl
mov
lret
push
rolb
hlt
push
out
pop
push
dec
cwtl
xor
shlb
cmp
into
cmp
mov
test
and
faddl
mov
dec
filds
les
lods
mov
gs
jo
ds
mov
dec
or
gs
add
xor
jle
fsubrl
in
pop
push
sbb
daa
rcl
xchg
les
mov
mulb
jle
xchg
negl
mov
xchg
mov
jg
push
mov
and
cmp
add
hlt
mov
lds
sub
adc
jg
or
sbb
fidivl
stc
fdivp
ds
xchg
cli
dec
mov
cmp
xorb
adc
adc
aaa
xor
out
sti
cmp
inc
popf
mov
dec
or
stos
vunpckhpd
fsubs
adc
jge
push
es
xor
xchg
leave
pop
jle
and
andl
movsl
dec
sub
push
mov
data16
jnp
sbb
inc
dec
mov
push
push
mov
inc
add
add
int3
jecxz
push
lahf
mov
sbb
test
mov
jne
cld
mov
push
dec
enter
add
pop
xchg
ljmp
mov
mov
je
adc
outsl
sbb
aad
push
jnp
sub
xor
aaa
mov
ret
lds
lock
lret
in
mov
subl
push
stos
outsl
jae
xchg
pop
ficompl
pop
inc
add
pop
sbb
scas
xchg
pop
mov
or
rolb
mov
jne
and
lds
adc
enter
xchg
xor
stc
outsb
shll
jle
insb
popl
ljmp
imul
fdivs
aas
je
incl
outsl
or
push
movsb
in
cs
push
lret
in
sbb
lret
data16
sub
fucomi
lock
insb
mov
cmp
mov
stos
hlt
jmp
mov
mov
jmp
arpl
rcrb
stos
inc
or
pop
fwait
lods
push
sub
cmp
sbb
int3
push
xchg
fistpl
xchg
adcb
push
sub
ss
or
jmp
fcmovnu
test
add
dec
cwtl
mov
test
fwait
xchg
mov
cld
xor
sarl
pop
cmp
jp
xchg
sbb
jg
sub
movsb
lods
dec
jo
mov
out
mov
xor
lea
jge
loope
sub
enter
pop
aam
mov
xchg
mov
insb
scas
hlt
sbb
push
test
jbe
jne
mov
mov
iret
data16
out
fidivl
and
call
adcl
in
lods
fmuls
jns
or
pop
cmpsl
mov
fisttpll
inc
jg
push
icebp
call
jecxz
repnz
push
inc
in
add
mov
xchg
shll
test
xlat
inc
fstl
pop
fs
cltd
aam
inc
insb
jae
push
hlt
xlat
movsb
cmp
lods
mov
mov
stc
sub
fs
pushf
fldcw
imul
lods
push
cli
push
frstor
jno
cwtl
lret
movsb
xor
sub
sbb
mov
popf
arpl
fiaddl
stc
les
sbb
push
movl
and
cmp
jne
jp
adc
int3
adcl
cli
lret
outsb
lret
cmp
repnz
rcll
stc
xchg
add
mov
xchg
cmp
out
int
sub
and
xor
lds
leave
adc
fldenv
mov
into
mov
dec
mov
das
mov
and
je
mov
or
clc
or
mov
mov
cmp
cmpsl
test
push
imul
xor
push
lahf
sub
xchg
fidivrs
push
pop
loop
ja
cmp
mov
dec
pop
shlb
mov
mov
int3
fdivrp
add
push
outsb
add
or
xchg
jg
xchg
or
adc
push
jbe
xlat
rorl
mov
cmp
push
pop
push
xor
and
push
es
cmpsl
pop
mov
push
jno
lods
gs
cmp
or
mov
mov
pusha
ret
repnz
test
xor
adc
cmp
cli
ss
adc
popl
sub
push
clc
xor
jae
shlb
out
pop
test
lcall
inc
rcl
lds
jl
cmpl
jne
ficoms
pop
into
imul
pop
loope
and
das
in
cmp
mov
and
les
stos
sbb
aaa
rol
cs
ss
leave
in
out
shrb
mov
mov
jmp
xlat
add
or
or
sub
or
inc
fnstcw
sub
mov
ret
pushf
fwait
and
sbb
popf
js
push
and
sbb
cmp
sbb
or
cmp
add
iret
jnp
fcomi
sub
jge
iret
ret
mov
jne
loope
xchg
addr16
xlat
mov
mov
ret
xor
cli
aaa
xor
mov
stc
movsl
mov
outsl
pop
mov
fwait
and
lods
movsl
mov
fmul
xchg
adc
clc
pushf
mov
loopne
aam
or
ljmp
sahf
cld
sti
push
rorb
icebp
imul
jbe
fbld
loop
inc
xchg
lea
ljmp
fwait
cmp
les
cmp
stc
adc
sbb
mov
out
movsl
outsb
sub
xchg
popf
ds
loope
data16
dec
inc
insl
push
push
mov
pop
xchg
stos
pop
in
sbb
stos
adc
jmp
aam
mov
mov
in
xchg
inc
pop
sbb
call
jg
outsl
out
mov
cmc
in
fdivs
add
pop
int
mov
dec
mov
push
pop
icebp
lods
mov
xor
aad
mov
in
push
xor
ret
lret
int
stos
xchg
stos
lods
fstps
and
cmpb
or
push
cmc
lea
mov
inc
xchg
imul
pop
or
mov
in
les
addl
fcompl
push
adc
cld
ja
sbb
vminpd
push
sbbb
mov
out
pop
popl
adc
xchg
xchg
mov
mov
pop
movsl
or
lods
pop
jle
sub
sbbl
cmp
push
mov
in
stos
or
sbb
push
mov
dec
mov
add
cmp
fstps
xor
mov
mov
imul
fs
lea
or
xchg
jbe
push
mov
rorb
cmc
add
pushf
xlat
add
imul
or
aas
fsubrs
adcl
pop
mov
sbb
repz
sahf
push
push
subb
jge
push
sub
xchg
mov
adc
fwait
push
push
jge
cmp
lcall
and
add
mov
aaa
pop
mov
xlat
outsb
dec
add
es
push
pop
mov
out
inc
ret
and
sbbl
fwait
cld
hlt
or
pop
les
jnp
subl
lcall
enter
mov
mov
scas
mov
bndldx
mov
xor
call
ss
out
sub
inc
lea
dec
or
mov
shlb
mov
shll
push
jo
iret
pop
lock
push
mov
add
cmp
and
mov
cmp
adc
xor
out
insl
dec
xchg
call
mov
xor
or
sahf
scas
add
aam
fcoml
bound
fldl
add
push
cmp
mov
ret
mov
jbe
fcomip
dec
jle
fdivs
nop
cmp
out
sbbl
or
mov
arpl
mov
leave
out
je
dec
scas
dec
stos
stos
push
dec
inc
or
lret
shll
ds
mov
cmpsl
mov
push
pop
push
lock
dec
jecxz
loop
adc
inc
mov
divb
xor
cmc
cmp
gs
sbb
in
hlt
mov
mov
cmpsb
cwtl
out
dec
xchg
call
sbb
imul
lea
mov
gs
lret
pushf
neg
subl
gs
lods
sbb
movsb
add
fwait
cmp
dec
xchg
pop
inc
dec
stc
cmp
lock
xchg
push
andl
xor
push
aam
push
mov
jbe
xchg
leave
or
loope
sub
repz
scas
mov
faddl
imul
arpl
dec
fstpt
xchg
aam
mov
call
xchg
pop
stc
mov
addr16
popa
xor
sub
pop
sbb
pusha
mov
loope
dec
cmpsl
jp
jmp
jns
and
shll
and
pusha
int
addb
icebp
in
jb
push
hlt
dec
adc
push
xchg
push
or
jo
jg
mov
mov
cmp
add
scas
mov
xchg
push
testl
sarl
cmc
mov
mov
inc
inc
aam
cmpl
out
pop
push
sub
pop
sbb
hlt
adcb
sahf
adcl
mov
pop
push
nop
cmpl
cld
and
movsb
adc
cmp
in
sbb
or
icebp
lods
sti
xchg
aas
jg
cwtl
xor
fcomps
pop
bound
push
dec
ja
dec
dec
out
inc
xchg
xor
dec
pop
push
cltd
negl
dec
in
pop
lds
push
push
and
sub
in
adc
stos
and
and
stos
fbld
add
cld
loopne
out
data16
lods
add
cmpsb
popa
out
ja
js
rclb
aas
mov
or
mov
enter
mov
dec
mov
or
int3
mov
jmp
call
int
mov
repz
and
outsl
pusha
mov
sub
fprem1
in
test
inc
cltd
mov
sub
jo
pop
mov
aad
jnp
jnp
add
sbb
push
push
movlps
cmp
pop
and
pop
mov
rclb
sti
aas
sti
and
imull
mov
or
ss
jge
dec
push
mov
push
in
loop
dec
push
inc
xorb
cwtl
mov
repz
cmp
into
scas
int3
outsl
mov
insb
loop
fstl
jns
adc
dec
push
fs
pop
pop
ja
pop
xor
or
xor
repnz
push
mov
popl
push
fmulp
cs
or
dec
jecxz
jmp
std
and
or
call
xor
cli
pop
cmp
ljmp
popa
negb
sar
mull
adc
push
inc
cld
daa
dec
jg
and
push
outsl
nop
jle
push
pop
fstpt
or
mov
je
fisubrl
fsubl
lds
mull
mov
das
adc
inc
pop
aam
shrl
push
jns
bound
stos
lret
mov
ja
dec
mov
dec
dec
or
pop
adc
idiv
sbb
test
lds
gs
push
add
jmp
dec
jmp
mov
daa
xchg
jmp
xchg
std
push
mov
cwtl
xorl
pop
rorl
cmp
or
pop
pop
shl
out
mov
inc
cmp
out
push
stos
xor
add
jbe
mov
pop
je
sub
push
inc
fsubs
inc
shll
addr16
mov
cmp
sub
push
jae
xchg
or
mov
scas
sub
in
sbb
mov
dec
mov
out
psllq
lret
mov
out
call
je
mov
sbb
dec
sub
pop
stos
xor
test
fcoml
xchg
insb
mov
jecxz
push
daa
sub
push
orb
addr16
adc
add
adc
jb
int
imul
add
cs
jne
xchg
in
pop
outsl
or
jbe
and
clc
in
pop
cld
inc
ljmp
pop
mul
lock
test
mov
call
lock
add
inc
cmpsb
mov
cmpsb
mov
int
lock
lock
sub
leave
pop
rol
scas
subb
mov
mov
cmpsb
jbe
cmp
das
sub
shrb
pop
cmp
leave
mov
and
iret
jg
fs
cmp
in
mov
rol
lods
mov
mov
mov
lcall
iret
cmpsb
ss
inc
insl
bound
gs
ja
mov
jmp
xchg
xchg
jecxz
lcall
pusha
cltd
jecxz
cmc
lods
mov
rcrl
or
pop
pop
jno
fadds
ja
mov
push
lret
push
cld
neg
outsb
sbb
push
test
pop
in
xchg
rolb
xor
mov
dec
jg
or
rcrb
mov
test
fwait
je
jnp
leave
mov
pop
jl
test
mov
adc
or
out
aad
push
fsubs
sub
loop
fidivrl
mov
or
push
xor
mov
mov
dec
hlt
icebp
out
negl
lahf
aaa
int
jp
stos
aas
and
sbb
aam
repz
xchg
pusha
repnz
in
insl
and
fstps
repz
xchg
pop
loop
aad
inc
pop
and
lea
jl
into
or
add
pop
popa
pop
inc
addr16
cwtl
rcr
sbb
push
gs
lea
add
insl
out
stos
push
mov
push
testb
ljmp
cltd
adc
stos
scas
pop
xor
das
loop
iret
and
push
jecxz
dec
sub
fldenv
pop
mov
movsl
add
arpl
pop
jne
loopne
add
fimull
mov
pop
xchg
aaa
clc
mov
int3
mov
adc
push
jl
push
sahf
dec
jmp
xchg
lods
add
pop
leave
xchg
xlat
jge
pop
dec
lahf
dec
sub
aaa
adc
cltd
mov
testl
std
inc
lods
ficoms
xchg
aas
into
pop
sbb
dec
scas
xchg
into
dec
cwtl
insl
mov
sub
pop
aam
mov
lcall
icebp
arpl
inc
and
js
push
push
dec
inc
in
sbb
push
pop
xor
sub
mov
dec
push
lahf
scas
mov
ror
in
inc
leave
jne
out
push
sbb
push
jns
dec
aad
xor
xor
aas
sub
jmp
test
das
pusha
sti
and
pop
add
insl
arpl
push
jmp
jns
aam
addr16
mov
sub
pop
in
push
sbb
mov
les
fsubl
leave
es
xchg
subl
sbb
mov
xor
cwtl
loopne
push
inc
daa
fcomps
out
sbb
xor
sub
and
adc
cld
je
movsl
xchg
xchg
ret
xor
push
ficomps
cs
es
mov
pop
pop
cmp
jle
out
mulb
stos
in
push
in
inc
jl
fsts
adcb
call
int3
test
and
pushf
inc
pop
lock
mov
xchg
in
lret
sar
fldt
fsts
clc
sub
adc
cmp
nop
adc
xchg
dec
mov
div
cmp
out
dec
adc
xchg
enter
std
fstpl
enter
push
subb
loop
lea
inc
xor
icebp
pop
int
jnp
lds
icebp
sbb
jb
addr16
jbe
xchg
aas
cmp
jae
ja
loope
sbb
shl
ret
mov
jl
pop
adc
enter
cmp
repnz
sahf
insl
icebp
xchg
fisubl
into
out
xchg
shrl
rorb
mov
jl
int3
add
push
pop
pop
push
das
pop
cmpsl
jmp
sbb
faddl
in
cli
repnz
loope
pop
ljmp
sub
add
sbb
popa
sub
pop
push
jle,pn
pop
inc
loopne
fimull
jbe
cmpsl
call
es
sub
cmp
std
sub
inc
jns
mov
mov
sbb
aas
bsr
rcll
andb
jmp
and
mov
mov
ret
push
jo
hlt
sub
push
sahf
jne
add
adc
enter
cwtl
xchg
xchg
jns
and
daa
xor
je
insl
or
in
cwtl
jnp
mov
stos
add
je
lods
mov
inc
test
cli
push
inc
mov
inc
xchg
je
cmp
hlt
xor
fwait
or
push
scas
mull
movl
pop
aad
into
dec
repnz
pop
inc
insb
cmpsl
in
jb
movsl
fisttpll
push
cmp
pop
imul
jns
jg
inc
mov
sti
stc
icebp
sbb
mov
outsb
ror
mov
pop
mov
mov
jge
mov
dec
stc
stos
lahf
or
sbb
pop
cmp
inc
hlt
jmp
mov
and
mov
and
jo
cmp
inc
xchg
in
hlt
loopne
lret
call
enter
les
subl
adc
idivl
add
inc
sub
call
adc
mov
sbb
pop
pop
jp
iret
jb
test
push
stos
pop
mov
jmp
in
lahf
popf
xlat
mov
int
push
lret
mov
data16
adc
xchg
xchg
int
outsb
je
scas
jne
stc
cwtl
inc
jle
testb
call
in
mov
cmpsl
pop
stc
and
pop
xchg
shlb
mov
cmpsl
incl
outsl
lret
into
xor
dec
in
jns
mov
adc
dec
scas
dec
bound
icebp
out
bound
add
sbb
movsb
cld
pop
xor
pop
pop
test
fldenv
or
mov
loopne
or
jno
fnstenv
xor
into
outsb
pop
xor
in
fcomps
out
call
dec
fmull
cmp
cmp
jae
jo
cmpsl
xchg
pushf
cs
xor
lods
cmp
in
push
push
aam
sub
out
push
mov
ffree
loope
lods
fisubrl
clc
xor
mov
mov
xor
xchg
insl
test
jge
sbb
pop
mov
loope
clc
popa
pop
aad
dec
adc
jb
stos
jle
shl
jno
or
ficompl
aam
mov
cmp
inc
setbe
mov
int3
cld
pusha
sahf
insb
ja
jg
movsb
jge
shll
mov
sbb
in
hlt
out
jge
repz
popa
ja
or
sub
sbb
push
push
aam
fsubs
sahf
lock
orb
test
rol
or
stc
lods
sbb
fidivl
sub
repnz
xchg
xchg
scas
stos
jle
call
test
nop
sbb
dec
clc
mov
mov
insb
dec
xor
xchg
lahf
mov
lds
xchg
or
xchg
push
fistl
jno
jp
mov
ffreep
aaa
bound
push
imul
mov
fld
and
popf
mov
sub
mov
ret
outsb
xor
enter
mov
mov
jmp
sub
call
inc
lods
fcomps
cmp
out
fistpll
fcomps
cmpsb
push
pop
mov
ljmp
mov
push
mov
pop
and
and
outsl
ret
ja
or
and
mov
popa
jnp
lret
test
and
push
test
les
push
xor
fisttpll
jmp
fwait
mov
pop
outsl
push
cltd
hlt
and
push
push
popf
aas
inc
mov
sbb
ret
add
push
adc
push
rorb
add
data16
sbb
test
mov
pushf
dec
shll
and
cmp
push
addr16
outsl
mov
fists
or
out
mov
cli
or
push
arpl
cli
sbb
sub
dec
std
aad
inc
push
jbe
fimuls
jp
cmp
jbe
shl
cmp
push
idivl
sub
mov
xor
or
fsts
cmp
popa
mov
cmp
not
inc
pop
push
ret
or
daa
lock
inc
xchg
mov
iret
mov
xchg
je
pop
cwtl
es
cmc
cmpsl
dec
sbbl
xor
pop
or
cwtl
iret
sbbl
mov
jmp
adc
ret
movsb
mov
jno
clc
adcb
mov
and
cwtl
mov
repnz
inc
jle
lods
sbb
lods
push
and
pop
dec
sti
mov
add
bswap
xlat
mov
stos
push
push
and
aam
loop
popw
jne
cmpsl
les
sub
and
or
or
imul
or
in
adc
dec
jmp
cwtl
push
xchg
xchg
repz
popa
push
lock
hlt
mov
out
cli
jno
frstor
test
popf
sub
shr
add
loopne
test
popa
fdivr
into
leave
push
fsts
inc
repnz
imul
add
adc
aad
mov
scas
pushf
mov
jns
jl
pop
andl
cmpsb
xor
dec
pop
je
xor
or
ja
sbb
subl
pop
add
or
test
repnz
bound
testl
cmc
sub
xchg
xorl
loop
sahf
fisttpll
es
mov
fiaddl
ja
jo
iret
cmc
rolb
pop
rcrl
mov
arpl
cmp
cmc
popf
mov
lods
cmc
in
mov
adc
outsb
push
lret
mov
xchg
stos
adc
push
enter
stos
fs
fldt
nop
in
movsl
add
movsl
mov
fs
loop
cmp
mov
cli
lret
push
nop
sbb
jge
add
aad
fstps
and
lea
dec
adc
fldenv
add
xchg
ss
mov
mov
mov
outsl
aad
test
sbb
dec
lahf
shr
enter
jo
or
push
in
jmp
addr16
sub
in
jg
in
fisttpll
out
push
fstpl
repz
lcall
cwtl
mov
mov
jmp
fldenv
ret
addr16
add
add
dec
fs
mov
and
inc
xchg
sub
decb
mulb
xor
popa
div
notb
repz
add
insb
sbb
addr16
jmp
aam
movsb
mov
push
mov
insl
push
dec
mov
mov
invd
push
cmp
outsl
out
mov
std
xchg
xchg
sbb
and
jno
dec
cs
call
adc
xlat
aad
pop
or
or
fidivrl
aam
or
jg
jp
pushf
mov
mov
cli
xchg
out
cwtl
mov
pop
adc
mov
inc
daa
roll
or
test
add
loopne
or
xchg
adc
mov
sahf
pusha
pop
cli
dec
test
adcb
adc
fcompl
xchg
or
inc
sub
testb
or
sar
shll
roll
out
pushf
rcrl
nop
nop
in
into
sbb
jbe
jl
cmp
xchg
sub
inc
or
mov
movsl
mov
push
cmp
jle
mov
xor
and
jnp
fstps
jbe
aam
jle
in
jns
imul
iret
enter
pop
and
in
out
add
and
sub
cs
jb
sbb
inc
dec
stos
imul
aaa
aam
pop
and
push
movsl
mov
add
xchg
in
push
shlb
inc
dec
stos
push
mov
mov
mov
jno
mov
imul
ret
mov
xchg
jl
inc
jmp
adc
pop
xchg
push
and
mov
or
pop
xor
xchg
add
lcall
mov
sub
xchg
std
xchg
push
hlt
test
enter
inc
iret
mov
cmpsl
in
popa
icebp
icebp
adc
add
mov
shr
data16
cmpsl
and
and
and
shl
notb
jge
mov
enter
cmp
cmp
jae
lods
push
leave
icebp
stc
adc
sub
xor
aaa
sub
cmc
test
fidivrl
cmpsb
cwtl
adc
loope
and
dec
fidivl
push
test
test
notb
data16
fstps
xchg
xor
mov
divl
cli
push
stos
pop
movsb
inc
push
bound
xor
aad
mov
rolb
xchg
dec
cmp
xchg
pop
sbb
sbb
leave
push
insl
sub
cmpsl
lcall
stos
cltd
sbb
or
inc
sub
cmp
movsb
aaa
test
push
dec
test
and
test
jno
stos
adc
mov
sub
sub
xor
cmp
push
hlt
out
loop
adc
mov
mov
fdivs
mov
sbb
inc
hlt
in
insb
pop
stc
mov
cmp
add
rclb
sub
jmp
popf
mov
sbb
fstpl
xlat
aas
xor
nop
mov
adc
inc
xchg
xor
cmp
push
push
pop
push
js
adc
aad
sahf
inc
addl
pop
ret
testl
adc
inc
lds
sti
and
cmp
sbb
push
icebp
pushf
adcb
cmp
rorl
cmp
fistl
ret
mov
xchg
and
mov
fldenv
pusha
stos
jae
sub
lds
jne
adc
lret
lcall
mov
cmpsb
jg
sub
int
orb
dec
cmp
mulb
jnp,pn
daa
xchg
inc
mov
mov
lods
sub
aas
mov
or
ljmp
in
pusha
mov
xor
inc
and
cld
mov
out
cmc
cmc
rolb
clc
xchg
cmp
dec
subl
mov
lds
jno
inc
lcall
fisubl
mov
xchg
test
push
push
xchg
and
popa
lds
xchg
test
cmp
lahf
das
xchg
mov
push
mov
jno
pop
push
dec
add
mov
add
lea
or
stos
or
mov
add
test
mov
arpl
stos
call
or
push
adc
jg
inc
mov
jge
add
scas
rorb
out
dec
sub
test
xchg
push
mov
pop
aas
clc
dec
mov
sbb
inc
mov
jle
fcmovu
pop
leave
sbb
sbb
fwait
add
fadds
xchg
push
in
inc
mov
loop
aaa
outsl
adc
push
mov
inc
scas
mov
adc
cmpsb
fistl
vcvtsd2ss
cmp
xchg
add
mov
push
cmp
enter
and
xchg
jb
or
jno
sub
push
fstpl
addl
div
sbb
fimull
insb
adc
mov
inc
ret
jle
pop
pop
cs
xlat
iret
fistpl
cmp
add
lock
add
adc
insb
and
pop
jecxz
inc
mov
jnp
push
pop
subl
xchg
push
jo
dec
nop
sahf
mov
jo
jns
mov
add
and
insl
push
push
dec
fldenv
inc
add
push
mov
mov
sub
int
push
mov
mov
loop
repz
adc
inc
push
int
push
jne
fstpl
insl
xchg
scas
push
add
dec
fisubrl
js
clc
fbld
leave
cmp
aad
ret
xor
insw
imul
and
lods
xor
outsl
leave
mov
push
mov
call
sub
and
lea
mov
sub
repz
jo
cwtl
rol
sahf
mov
push
sarl
pop
push
sahf
aas
std
adc
fstps
mov
loop
faddl
xorb
cmpsb
cmp
scas
fldenv
push
and
xor
into
dec
fldz
test
pop
xor
loop
lcall
xor
fistpl
icebp
inc
inc
push
je
mov
jo
xchg
lahf
and
adc
mov
nop
jecxz
mov
rcr
add
adc
das
fldcw
clc
aam
loope
cli
rorl
push
cli
mov
iret
jae
idiv
call
lea
cmp
out
gs
out
lcall
dec
mov
hlt
push
sub
pushf
cmpl
lahf
mov
gs
jnp
push
das
fwait
pop
popf
leave
lahf
idivb
stc
mov
mov
scas
hlt
sbb
stc
sarl
in
xchg
mov
mov
mov
push
dec
mov
sbb
rcll
add
push
in
jmp
jmp
sbb
cmp
stos
ss
and
xor
int3
xor
fidivs
icebp
aam
dec
add
jne
lock
sub
inc
mov
inc
repz
imul
out
jb
inc
pop
push
pop
push
sbb
testb
xor
jo
arpl
xor
mov
subl
repz
inc
sahf
sub
iret
je
std
fistps
jns
mov
aaa
push
rolb
or
dec
fs
sub
cli
dec
call
mov
dec
mov
fdivl
push
lcall
jecxz
inc
inc
dec
int
push
push
push
mov
mov
lea
dec
bound
push
mov
popa
add
pushf
lret
fistpl
cmp
movsb
inc
sar
inc
xchg
lds
jp
mov
and
divb
neg
insl
mov
daa
cmpsb
repnz
push
add
mov
pop
mov
inc
add
pusha
std
jb
inc
rcll
pusha
add
cltd
xor
std
ds
sbb
stos
les
add
das
or
inc
mov
xor
xchg
out
or
cmp
cli
mov
iret
adc
in
lret
mov
jae
sbb
sbb
aad
rcl
mov
rcr
push
fstpt
lcall
ds
lods
scas
test
jecxz
je
jp
out
hlt
dec
ljmp
fsubs
out
fnstcw
out
xchg
pop
scas
lret
sbbl
cmpsb
out
pop
sbb
cwtl
or
jns
xchg
lahf
pop
sarb
das
jmp
mov
ret
adc
xchg
repnz
repz
jnp
test
movsl
test
mov
leave
sbb
inc
movsb
jmp
push
in
mov
out
jno
out
aaa
cmp
xor
loope
cmp
pop
sub
push
inc
imul
push
std
andl
dec
cmc
insb
scas
push
cmpsb
mov
popa
insl
stos
sti
xor
pop
or
mov
sbb
rclb
sbb
cltd
jl
inc
inc
xchg
inc
inc
sahf
xchg
shl
pusha
pop
leave
xlat
add
mov
dec
adc
push
mov
jp
mov
test
cmc
mov
lahf
loope
and
mov
bnd
pop
stos
lcall
inc
jae
lahf
mov
faddl
inc
popa
mov
jmp
fs
push
int
mov
insb
sub
imul
and
mov
push
or
cli
mov
test
mov
jle
mull
fstpt
dec
enter
adc
icebp
int3
xor
rorl
inc
notl
or
in
pop
cmp
test
cmp
in
into
lock
cs
jmp
cld
into
outsl
mov
mov
cwtl
sbb
das
popf
mov
mov
sub
int
negl
and
inc
mov
mov
sbb
add
adc
rcll
out
je
push
xchg
jb
and
xchg
mov
mov
mov
popf
add
cmp
andl
inc
icebp
sbb
hlt
jns
dec
cmpxchg
xchg
sti
pop
outsb
je
inc
push
popa
int3
jge
ret
and
rcrl
int
xchg
imul
sbb
adc
imul
push
dec
mov
dec
push
or
jp
lds
mov
mov
fnstsw
push
hlt
adc
mov
xchg
xor
dec
mov
inc
int3
add
adc
sahf
mov
loope
adc
xchg
stc
sub
mov
pop
iret
cli
xchg
in
loope
inc
pop
mov
std
mov
fadd
and
push
arpl
outsl
cmp
notb
mov
ljmp
je
cli
insl
xchg
rcl
jbe
jle
xchg
adc
jno
mov
mov
test
aad
and
xor
imul
mov
sub
mov
jecxz
outsl
jne
jecxz
xor
sti
arpl
inc
cmp
xor
adc
lds
add
cltd
xorb
mov
insl
stos
mov
hlt
inc
hlt
loopne
or
ljmp
xlat
insl
outsl
fcomi
add
mov
pop
or
jnp
xchg
insb
enter
jg
jno
sub
in
cmp
dec
ljmp
push
cli
out
and
imul
hlt
adc
and
fidivrs
xor
stos
out
adc
subb
sub
and
daa
push
dec
bound
adc
icebp
je
arpl
jmp
lcall
jl
and
jg
cmp
scas
mov
pop
jle
fistps
sbb
outsb
adc
xor
sbb
dec
addr16
wrmsr
or
jns
adc
inc
mov
out
mov
jbe
stc
lea
xor
andb
adc
rcrb
dec
mov
pusha
fs
lcall
push
mov
dec
leave
ss
mov
adc
push
dec
outsl
xchg
cmpsl
lret
outsb
gs
cld
sahf
push
adc
jb
fwait
repz
inc
xchg
in
push
pop
cmp
pop
faddp
sbb
mov
or
mov
addr16
pop
jb
xchg
cltd
shll
mov
dec
or
jne
rcr
cmp
mov
out
int3
xor
loop
iret
mov
sbb
inc
in
bound
outsl
cmp
xor
clc
bound
add
cltd
lods
pusha
sbb
ret
cmpl
repz
mov
cwtl
mov
cmp
loope
dec
sub
jbe
jmp
test
leave
loopne
mov
inc
jl
leave
cli
shr
and
jae
jne
cwtl
or
and
rep
sbb
pop
fxch
sarl
add
jo
xlat
stc
roll
in
aaa
cltd
jecxz
add
jl
mov
sbb
ficompl
mov
rorb
add
lcall
notb
pop
xor
movsb
mov
int
jp
or
ret
repnz
mov
push
inc
into
pop
pop
or
xchg
push
das
test
arpl
mov
ret
mov
movsb
dec
sub
mov
out
pop
and
inc
sub
add
addr16
mov
mov
mov
jecxz
daa
gs
jb
mov
xchg
les
mov
mov
add
pop
push
rcl
adc
xor
mov
rorl
xor
int3
lods
pusha
cwtl
sahf
xor
pop
jae
add
je
imul
jnp
xchg
xchg
out
inc
add
stos
and
mov
mov
fdivs
push
mov
out
pop
in
fdivrs
out
inc
cmp
mov
negb
lock
subl
fcoms
cld
movsl
pusha
insb
inc
mov
dec
pop
enter
jnp
mov
adc
or
ret
push
sarb
dec
popa
sti
push
jg
popa
outsl
cmpsb
cmp
es
movzbl
movsl
or
hlt
sbbb
add
jb
push
cmp
sbb
push
pop
pop
push
jle
fldenv
cmp
push
jb
rep
push
jecxz
push
loope
add
fwait
rol
cmpsb
sbb
pop
lret
nop
xor
imul
adc
ror
cmp
mov
xor
rclb
pop
push
stos
repnz
out
or
movsb
mov
mov
fstpl
add
pop
fs
ss
adc
mov
pop
ret
andb
ds
add
in
mov
xor
loop
test
xor
movsl
pusha
xlat
or
aas
add
das
ds
jmp
bound
out
jo
int
push
dec
jae
mov
sub
or
mov
adcb
rcrb
into
out
rorl
push
adc
pusha
xor
lcall
xor
push
push
jmp
mov
push
push
push
xor
jl
mov
jmp
in
xlat
mov
sarl
in
jg
inc
push
pop
cmp
cli
and
jmp
xor
cmc
mov
xor
lods
push
shrl
inc
jle
mov
mov
push
jg
push
jb
inc
imul
out
out
outsl
scas
dec
ljmp
ljmp
inc
and
lods
jp
ret
and
push
cmp
aam
mov
outsb
dec
xchg
fmul
stos
arpl
enter
add
and
mov
lods
adc
inc
mov
and
cs
jmp
insl
dec
inc
and
pop
or
mov
push
mov
mov
cmp
push
push
jg
dec
pop
test
insb
cmp
clc
mov
or
stc
pusha
xsaveopt
xchg
insl
andb
in
lds
mov
push
sbb
cmp
inc
pop
adc
push
jmp
fidivl
adc
into
fsubl
sbb
cli
sbb
inc
into
cmpsb
fbld
push
stos
imulb
sub
cltd
jb
cmc
sub
xchg
loopne
ja
jnp
repz
dec
testl
stos
cmc
cmp
lea
lcall
cmp
jg
and
lods
jb
sti
mov
xor
or
or
sub
xchg
mov
inc
xorl
icebp
int3
negb
lcall
pop
cwtl
sahf
lods
ret
inc
lret
dec
pop
jns
xor
sub
in
cmp
test
lds
int
or
insl
icebp
hlt
negl
pop
xchg
mov
pop
xchg
out
sub
add
push
lea
mov
movsl
sub
sbb
add
adc
adc
mov
negb
inc
fnstenv
icebp
cmpsb
xor
scas
cmpl
dec
sub
call
push
sti
adc
daa
mov
mov
lret
out
data16
jns
fidivrs
fwait
sbbl
mov
cmp
int3
into
xor
scas
mov
adc
loopne
dec
sbb
movsb
or
stos
and
sbb
lea
xor
ljmp
les
mov
add
pop
test
ret
push
outsl
pop
cli
je
inc
pop
mov
aad
inc
jge
lret
sbb
push
mov
gs
pop
aaa
sbb
sub
push
mov
cld
and
repnz
in
push
cmp
or
and
pop
xchg
shrl
pop
sub
push
adc
out
nop
shrl
test
fbstp
mov
rorl
lcall
jecxz
fadd
pop
cmp
pop
cmp
pusha
mov
dec
aas
add
mov
inc
mov
cld
cvtps2pd
push
daa
adc
cli
in
add
bound
xchg
and
test
js
cmc
sbb
scas
xor
jae
cli
in
inc
scas
mov
xchg
jae
add
std
sbb
dec
cmpb
adc
jle
mov
sbb
repnz
enter
cmp
clc
fs
dec
cs
shrl
ss
shlb
movsl
mov
and
movsl
int3
cmp
fnstcw
xor
sbb
xlat
xchg
in
mov
mov
sub
mov
inc
icebp
inc
pop
inc
or
insl
rcr
xchg
enter
dec
insb
cwtl
add
sub
xlat
sahf
insl
stos
pop
lea
or
push
pop
fdivl
or
faddp
aas
outsb
xchg
int
pop
movsb
adc
pop
sbb
push
testl
ret
ret
ja
icebp
mov
and
sub
sub
sbb
pop
imul
shl
insb
cld
cmp
imul
xor
shll
insl
inc
cltd
divb
cld
or
and
imul
cmp
je
push
cltd
loope
push
push
xor
ret
jae
pop
inc
or
int
mov
pop
out
jbe
mov
sub
dec
xor
nop
sub
inc
and
ja
cmp
jns
jns
insb
test
fisttps
xlat
sbbb
lea
push
xchg
stos
pop
gs
test
out
test
jle
xchg
lret
std
leave
push
push
call
cltd
sti
ds
out
stc
sub
pop
cmp
jne
pusha
xchg
or
sub
adc
jmp
mov
mov
sbbl
fiadds
dec
adc
sbb
out
dec
inc
xor
mov
cmp
and
nop
mov
and
mov
out
testb
inc
aas
pop
mov
int
aaa
cli
mov
pushf
xlat
jecxz
push
dec
call
in
xchg
call
sub
iret
daa
add
push
mov
xchg
cmp
js
dec
lods
mov
and
push
fidivrl
outsl
mov
add
or
shlb
insl
lods
mov
dec
xchg
xor
nop
xchg
mov
test
and
out
lea
into
adc
dec
int3
mov
xor
cmpsb
popa
and
in
mov
xchg
dec
push
cmc
dec
dec
or
cwtl
jo
cmp
add
fbld
mov
mov
dec
push
repz
in
test
stos
shr
cmpsl
mov
sarl
pop
mov
mov
es
loopne
outsl
movsl
adcl
and
push
sub
scas
xor
push
dec
outsl
sahf
out
leave
lret
adc
jmp
mov
cmc
xor
dec
adc
adc
push
pop
lahf
jbe
cmp
mov
push
mov
cwtl
hlt
popf
pop
add
cmpsl
flds
push
shll
in
add
push
mov
or
and
iret
outsl
scas
and
mov
les
adc
int3
aaa
inc
popl
rorl
adc
xchg
loopne
repnz
push
mov
or
incb
xor
mov
shrb
xor
loopne
mov
loopne
loope
fwait
pop
adc
cli
fcomps
or
sub
lahf
enter
adc
or
js
fcomps
cmp
adc
push
lods
iret
dec
mov
rol
push
jnp
xchg
and
and
outsl
cmp
jl
pop
jle
call
sbb
hlt
adc
pushf
lods
or
dec
mov
fcmovnu
cmpsb
stc
mov
fadd
aas
loopne
and
lcall
xor
xchg
jns
xor
jle
jp
mov
pop
xorb
jg
adc
in
and
push
sbb
fcompl
adc
fldenv
lods
xor
sbb
mov
xchg
adc
test
in
in
fsubp
stos
roll
jno
cwtl
shrl
xchg
lret
mov
xor
mov
cs
stc
push
icebp
arpl
loop
mov
push
repnz
lods
sbb
mov
mov
stos
push
stos
inc
clc
rorb
or
vpsadbw
dec
test
push
enter
enter
rolb
in
xchg
sbb
mov
jmp
pusha
fsubr
dec
jmp
sahf
mov
mov
jp
ret
pop
call
pusha
and
in
lret
addb
fdivs
mov
jno
mov
cmp
scas
test
push
or
or
sub
sub
mov
insb
xchg
sbb
xchg
lds
jns
pop
ljmp
adc
xor
insl
scas
adc
repz
sbb
pop
lods
es
adc
adc
fcmovnb
shll
sti
mov
or
xor
dec
dec
arpl
inc
sub
lahf
pop
pop
push
push
ret
fstpl
jnp
jmp
cmp
adc
push
mov
lods
mov
cmp
fcom
ja
popf
loopne
mov
adc
sbb
inc
iret
add
inc
sbb
js
mov
and
cwtl
jecxz
arpl
xchg
fisubs
push
add
divl
aad
arpl
jl
bound
and
popf
mov
xlat
jmp
jns
cld
andb
pop
in
iret
out
negl
addr16
cld
dec
sub
loop
mov
inc
cmp
cwtl
ret
lods
sub
je
fdiv
repnz
cmp
bound
mov
and
popa
cmc
cmc
scas
or
cmp
repnz
sub
add
mov
jnp
loop
icebp
mov
cmp
sbb
lahf
xchg
xor
sbb
rorl
sub
pop
xor
adc
push
adc
push
lahf
je
decb
jmp
les
xor
into
push
sbb
dec
enter
lahf
add
rcl
fstl
dec
pop
ror
xchg
add
xlat
js
out
int3
pusha
mov
out
insb
inc
add
fcmovu
insl
andb
faddp
hlt
jg
sarl
add
add
adc
fs
fwait
insb
mov
or
mov
fisubs
loope
add
pop
inc
mov
push
cli
insl
mov
inc
push
das
jecxz
or
int
push
push
jb
out
fdiv
and
xchg
in
jae
lret
mov
movsl
movsb
mov
push
push
mov
push
clc
mov
jne
and
xlat
dec
mov
lods
xchg
lcall
mov
shl
pusha
ret
pop
ds
mov
movsbl
mov
and
std
sbb
scas
sbb
dec
mov
inc
sbb
mov
sbb
jg
fdiv
mov
sbb
lods
stc
popa
into
decb
orl
lcall
add
dec
xchg
insl
sar
pop
xchg
cmp
mov
jno
in
jno
push
push
lds
sbb
sbb
xchg
dec
lcall
ret
pop
mov
pmaxub
mov
les
aas
add
pop
into
imul
xchg
push
pop
and
sub
or
cmpsl
push
mov
es
jno
js
pop
inc
or
xor
lods
cmp
inc
rclb
jge
jecxz
push
in
cmp
int3
cmc
jp
pop
push
fadd
fistpll
scas
push
fnstsw
movsl
iret
dec
cmp
les
rolb
add
mov
cmpsb
in
imul
mov
cmc
and
pop
mov
or
cld
push
or
mov
out
mov
movsb
insb
movsl
popf
popf
fs
sarb
add
push
pop
cs
mov
mov
lock
fimuls
cmp
mov
cwtl
add
push
xor
scas
ret
add
ds
inc
sbbl
mov
xchg
fwait
loopne
lret
add
lock
fs
imul
or
sbb
imul
inc
fsubr
xor
push
inc
es
and
xor
mov
aam
push
inc
mov
dec
inc
lret
sub
push
cwtl
xchg
mov
or
ss
gs
mov
movlps
cmpsl
mov
xor
cmp
xchg
cmpb
push
mov
pop
push
shll
xlat
addr16
push
lods
jecxz
push
je
cld
jns
jmp
mov
adc
add
bound
cli
mov
dec
cli
adc
xor
adc
xor
push
rorb
sub
or
mov
in
sub
jnp
pop
mov
outsb
push
pop
sub
mov
jae
mov
xor
test
cs
ss
fucomp
adc
inc
lahf
mov
add
ljmp
jo
dec
lods
icebp
enter
leave
icebp
adc
gs
punpckhdq
inc
dec
ret
rcrl
and
mov
jg
pop
or
cmp
dec
mov
call
xchg
xchg
xchg
mov
int
sbb
xchg
jnp
cmpsl
dec
or
mov
fucomp
mov
scas
lret
repnz
loopne
push
mov
pop
in
sub
stos
mov
add
fistps
mov
cmp
xchg
adc
clc
sbb
loopne
daa
loop
push
xor
jne
fisubl
scas
enter
cltd
ret
mov
nop
out
lods
sahf
sub
mov
pop
ss
loope
outsl
or
or
and
sbb
push
es
dec
daa
mov
lods
repz
xor
fstpl
stc
mov
bound
lds
xchg
adc
loope
sub
sahf
ret
pop
push
cltd
push
or
mov
jecxz
insl
es
rolb
mov
jno
loopne
out
neg
hlt
ljmp
jg
cltd
lods
mov
sti
testl
fnstcw
ret
pop
loopne
adc
dec
adc
cmp
and
sbb
push
ficomps
jnp
mov
cmpb
push
pop
dec
xchg
mov
jb
insb
jp
fldl
stos
stc
mov
leave
lds
aam
xor
adc
cmpsb
std
nop
sti
mov
jbe
iret
push
mov
inc
jae
mov
std
dec
dec
or
jp
clc
mov
insb
push
mov
test
cmp
arpl
stos
stos
dec
mov
repnz
push
mov
fidivl
cmpsl
or
stc
into
cli
sbb
mov
cmc
stos
sub
subl
test
or
sbb
add
xor
and
fstps
sbb
subps
add
ret
pop
cmp
xor
xor
mov
mov
arpl
mov
lret
xorl
fidivrs
pop
jo
pop
or
push
outsl
or
je
call
mov
inc
enter
stc
lock
out
cmp
insl
adc
mov
in
inc
xchg
push
lods
ret
xchg
lcall
lock
scas
cmp
loopne
lret
xor
jbe
loopne
mov
mov
cmovnp
xchg
outsb
bound
insl
orb
loope
gs
and
fsubs
out
imul
bound
test
sahf
repnz
jns
sbb
xor
xchg
incl
aaa
test
jmp
cwtl
outsb
pop
xor
pop
pop
imul
pop
fstpl
or
jecxz
sahf
xchg
popa
xor
cmp
push
fnstsw
das
ret
cmp
lcall
loopne
sti
ss
mov
das
dec
rol
xlat
push
aas
pop
fdiv
lods
cmpsb
shlb
out
adc
test
jp
mov
and
adc
adc
out
in
stos
mov
lock
pusha
je
mov
mov
incb
jo
lret
mov
std
pop
jb
or
ds
mov
mov
xchg
lret
inc
jae
add
je
jno
in
mov
jnp
leave
cmpl
mov
test
imul
test
nop
lods
mov
jecxz
cmp
orl
pop
xchg
pop
scas
cmp
inc
jp
daa
sbb
hlt
mov
mov
insl
mov
adcb
les
in
mov
cld
lcall
cmp
mull
cmpsb
jb
out
mov
xlat
mov
xor
daa
inc
xor
mov
dec
and
and
hlt
push
xchg
lahf
xchg
push
les
repnz
mov
insb
jae
mov
pop
xor
fcoms
imul
dec
lahf
cmp
sub
nop
stos
xchg
fisubs
shl
pop
cmp
cmp
xchg
je
mov
push
test
dec
repnz
cmp
arpl
push
mov
xchg
fs
test
ds
fisubrl
mov
loopne
and
leave
mov
stc
adc
pop
fimuls
push
setbe
scas
add
mov
add
cmp
and
add
adc
test
push
inc
push
push
outsl
mov
inc
inc
mov
xchg
xor
dec
or
adcl
jge
out
push
inc
xchg
aam
mov
ficomps
dec
adc
xor
inc
shrb
xor
mov
int
arpl
pop
push
iret
dec
and
push
mov
out
nop
lods
sbb
jmp
ja
fdivrp
testl
mov
pushf
add
shl
fadd
ffree
shlb
cmp
popf
int3
jge
xor
inc
xchg
jne
stc
mov
outsl
aas
stos
dec
jge
sbb
mov
mov
sbb
mov
and
stos
das
pop
mov
xor
into
fnstsw
inc
cmpsb
aad
pop
push
mov
or
pop
xchg
cmp
rolb
addb
jl
mov
pushf
loopne
cmpsb
cmp
add
scas
mov
lcall
add
cmc
sar
push
or
dec
mov
xchg
push
aad
cltd
sub
cmpsl
cmp
mov
andb
movsl
inc
ret
xchg
pop
add
leave
xchg
ljmp
fwait
int
cmp
test
sub
pop
pop
inc
je
ret
clc
in
or
mov
cmpsl
sarb
dec
sti
add
test
andl
aad
std
scas
iret
test
sbb
lods
mov
out
aad
mov
imul
out
sbb
mov
push
leave
aad
leave
push
filds
xchg
stc
iret
adc
sbbb
mov
dec
nop
xor
inc
mov
insb
ficomps
push
ss
movsb
rorl
inc
andb
mov
pop
icebp
ds
add
add
push
xchg
push
inc
dec
inc
jo
jmp
popa
sbb
loopne
loope
stos
shlb
jnp
jo
add
xorb
inc
adc
pusha
arpl
adc
dec
xchg
lea
adc
add
dec
jnp
arpl
bsf
jae
pop
xlat
test
or
dec
adc
jnp
jl
and
in
stos
mov
or
xlat
jle
dec
ficoml
mov
subl
int
mov
insl
jmp
xlat
and
sbb
leave
int
sbb
lods
out
lods
repnz
mov
add
loop
sub
pop
push
push
push
sub
push
push
imul
push
andb
or
dec
push
jnp
rorb
shl
subb
daa
mov
enter
roll
inc
mov
imul
mov
push
mov
mov
sub
cmp
sbb
lods
roll
leave
incb
push
sbb
add
push
push
add
adc
fwait
pushf
les
ss
xchg
int
push
sub
iret
mulb
std
xchg
xor
xchg
ds
ja
and
mov
mov
mov
pop
xchg
push
popf
shrb
pop
or
push
data16
mov
rclb
out
ljmp
pop
xlat
pop
jne
cmc
jp
pusha
lock
cmp
pop
out
call
out
cmc
mov
pop
adc
nop
mov
out
pop
mov
jmp
pop
xlat
daa
mov
ljmp
adc
xchg
sar
outsb
mov
mov
fdivs
mov
lods
jle
js
or
push
adc
sbb
mov
push
fidivl
xor
mov
cmp
and
or
test
adc
cmpsb
xchg
fdivl
mov
mov
lds
ja
dec
push
daa
loope
aas
xchg
add
xchg
cmp
popa
push
pop
ds
sahf
pop
loopne
mov
push
lock
sub
insl
pusha
pop
jb
pop
into
cmp
es
sub
mov
fwait
into
mov
inc
or
cltd
and
and
cmpsl
lcall
lock
mov
push
cmp
inc
inc
add
or
enter
mov
xorl
movsb
dec
pop
inc
loopne
cmp
sarb
push
mov
imul
push
mov
inc
add
inc
ds
jne
inc
mov
outsl
fists
jle
insb
std
inc
sbb
es
mov
dec
xor
jl
stos
jns
cli
imul
cmp
push
mov
clc
popf
fst
cmpsb
das
ficoml
push
mov
mov
xchg
jbe
xor
add
sub
cmp
xor
xchg
mov
leave
cmp
xor
loope
dec
out
insl
stos
push
sub
dec
lds
cmpsb
jne
into
or
jnp
rorb
into
jle
push
pop
inc
push
leave
sti
test
adc
outsl
adc
add
ds
rcr
ja
cvttps2pi
ljmp
mov
mov
dec
adcb
lcall
push
stc
sbb
xchg
std
and
sbb
cmpsl
push
add
addl
js
push
pop
adc
or
es
inc
adc
xchg
push
sub
mov
stos
jno
push
inc
cwtl
xor
jmp
push
inc
dec
aad
gs
mov
push
lock
mov
pop
movsb
je
adc
mov
mov
sub
pop
scas
ds
clc
cwtl
mov
adc
mov
hlt
sbb
dec
jmp
outsl
add
add
xorb
xchg
cmpsl
mov
ficomps
imul
xchg
and
lcall
or
imul
xchg
or
dec
mov
mov
in
dec
test
xor
pop
cmp
ss
js
mov
mov
jge
leave
shlb
ret
inc
mov
bsf
add
cli
push
mov
mov
rorl
cmpsb
jb
mov
rcll
cwtl
insb
pushf
mov
repz
aaa
mov
test
mov
aaa
sti
movsl
into
cwtl
pop
mov
mov
dec
or
repz
mov
pop
iret
pusha
or
add
insb
int3
outsl
mov
ss
icebp
dec
push
push
adc
add
cmpsl
mov
jl
mov
or
adc
js
sub
int
cmp
loop
dec
fcmovnb
xorl
addr16
or
popa
sbb
push
scas
cmp
pop
sbb
pop
pop
pop
aam
nop
mov
lock
and
mov
popf
xchg
mov
cmp
jo
repz
xchg
jecxz
adc
cmp
ja
or
jmp
loope
mov
mov
int
out
mov
push
ds
lahf
cld
test
daa
test
out
repz
jns
jecxz
pusha
ja
jno
enter
jl
mov
add
jmp
push
xchg
jge
std
mov
inc
nopl
js
in
orl
pop
stos
push
sbb
fs
adc
jns
rclb
mov
lods
mov
mov
and
loope
cmp
xchg
mov
mov
sar
pop
inc
mov
imul
jge
pop
cmp
mov
xchg
dec
lahf
inc
loope
stc
add
xor
mov
push
mov
jecxz
out
push
out
ret
jnp
add
xchg
cmp
out
les
sti
push
scas
pusha
cmp
push
in
lret
das
mov
sbb
mov
pop
out
inc
xor
mov
cs
jle
idivl
lea
xchg
stos
lret
lock
mov
popa
ja
leave
sbb
xchg
sbb
aad
mov
jl
movsb
sahf
in
cmpsb
loop
outsl
sbb
bound
adc
ret
movsb
mov
jle
std
repz
pop
xadd
add
fs
cmp
jp
lahf
cli
cwtl
pusha
adc
xchg
mov
test
lahf
push
cmc
jae
sbbl
xorl
push
shrl
lods
outsl
lock
in
jns
sub
dec
jns
dec
rcr
mov
push
les
mov
stc
xchg
scas
outsb
xchg
inc
clc
jne
or
jecxz
lock
or
xlat
push
inc
dec
xchg
repz
mov
jge
xor
xor
stos
pushf
sbb
jne
orb
lret
add
mov
dec
sub
xor
adc
rcll
out
mov
in
ficoms
dec
neg
mov
push
xchg
adcb
sbb
push
cli
dec
pop
movl
mov
add
int3
or
xor
pop
mov
les
mov
pop
popa
mov
or
or
mov
fbstp
movsl
aam
inc
out
cmp
cmp
sbb
or
add
stc
mov
cmp
ds
aad
loope
aam
loop
imul
push
int3
fs
push
and
ljmp
sub
jecxz
or
std
mov
aam
xchg
mov
hlt
push
das
popa
fucomp
ds
ret
ja
test
jbe
arpl
and
test
sbb
das
mov
xchg
popa
sti
mov
xchg
jno
gs
out
xchg
adc
add
rorb
aaa
test
cmpsl
loope
xchg
stos
mov
ret
sub
ror
add
cmp
sbb
cmp
lods
add
jns
and
test
leave
fidivrl
stos
lret
iret
xchg
mov
push
lea
fnsave
inc
clc
fs
gs
in
xor
mov
js
ret
decl
inc
out
jl
inc
jecxz
mov
ljmp
xor
jb
test
pop
das
imul
or
test
lahf
test
and
das
imul
inc
and
mov
adc
pop
sbb
insb
pmaddwd
cmp
into
pop
pusha
push
icebp
nop
mov
dec
push
jmp
stos
stos
dec
push
aam
and
jne
inc
inc
cmp
pop
push
jge
daa
add
adc
xlat
xor
aaa
ret
xchg
cmpsl
incl
push
mov
daa
xlat
push
idivl
push
pusha
jbe
mov
cmc
cmp
stc
sbb
mov
inc
mov
adc
inc
mov
mov
add
mov
pop
mov
jbe
sbb
js
cwtl
push
loop
inc
popf
jecxz
ljmp
mov
lahf
dec
jp
adc
inc
movsb
mov
cltd
lods
jecxz
pusha
pop
dec
pop
orl
nop
sbb
test
lret
push
mov
int3
dec
or
push
lea
sti
hlt
or
dec
mov
stos
jl
and
xlat
jle
pop
stc
dec
inc
dec
data16
cmp
test
fisubs
lods
jecxz
mov
dec
pop
mov
lahf
mov
ret
out
sahf
pop
enter
jnp
or
and
and
sti
ret
lret
cmp
das
inc
daa
adc
mov
dec
jmp
fs
sbb
fistl
lods
lods
xor
sub
push
mov
add
xchg
ja
add
aam
mov
cmpsl
pop
sub
adc
cmp
int
ret
cwtl
cmpsl
repz
mov
aam
add
ljmp
cmp
dec
dec
xlat
xchg
jp
sbb
cmp
movsl
outsl
push
xchg
int3
shll
pop
mov
stos
or
xchg
aaa
mov
stos
xchg
add
mov
jae
or
jg
imull
sbb
sbb
sub
mov
pop
mov
pop
xchg
jne
bound
nop
pushf
mov
cltd
jge
cmpsl
adc
mov
mov
push
and
test
mov
sbb
cmc
scas
push
dec
pusha
push
add
jo
test
add
mov
or
cmpsb
lock
mov
dec
arpl
mov
int
adc
mov
jnp
add
or
dec
add
cld
dec
in
sahf
int3
icebp
sarl
xor
inc
fidivl
dec
add
movsb
pop
mov
ljmp
cmp
xchg
mov
pop
sub
repz
xchg
inc
les
jno
jp
cmpsb
notl
xor
sahf
inc
test
pop
repnz
dec
jp
cmpsl
roll
mov
cmp
push
dec
xorb
or
adc
jmp
jge
sbb
adc
jp
jp
sti
mov
test
ret
or
dec
outsl
jno
dec
jns
xchg
out
fsubrs
lea
jo
fwait
inc
or
in
sub
aas
enter
in
xor
icebp
adc
pop
lahf
fiaddl
lcall
xlat
xchg
shrb
mov
test
and
aad
pop
push
jg
mov
out
and
jmp
mov
mov
sbb
nop
push
mov
xchg
arpl
in
xchg
fucomi
inc
and
stc
jno
jmp
or
int3
and
sub
call
push
fstl
cmp
stc
mov
ss
push
xor
and
inc
jne
inc
cs
push
outsl
loope
mov
mov
add
push
push
mov
sub
push
aaa
xor
push
xchg
sbb
sub
and
adc
jbe
aad
inc
jae
jg
fwait
xor
pop
cmp
int
sbb
mov
inc
xor
lcall
mull
mov
and
mov
jns
int3
mov
pop
nop
push
pop
xchg
stos
xor
notb
inc
mov
aaa
jno
daa
sarl
pop
jo
push
lcall
mov
fidivl
jae
std
js
sub
mov
clc
adc
pop
lods
mov
jnp
daa
stos
stos
cmc
rcl
xchg
ffree
stc
mov
popf
push
ljmp
jl
or
mov
loopne
sbb
inc
inc
outsb
push
jns
push
xlat
outsl
push
cmp
inc
shll
pop
popf
xchg
and
xor
jbe
jns
pop
mov
fisubs
and
daa
sahf
and
popa
pop
push
fwait
jmp
mov
push
test
int
xchg
int
outsl
jmp
js
gs
inc
mov
jg
mov
add
pop
inc
pop
mov
cmp
mov
push
sahf
mov
test
in
add
cmpsb
ljmp
mov
cmp
sub
cmp
push
rcrl
sarb
fldl
mov
fs
adc
icebp
imul
xor
jmp
adc
mov
bound
pop
sub
bound
push
xor
cmpsl
xor
cmp
cmc
fucomip
aaa
push
cmp
add
jne
push
lods
lea
fadds
rorl
testb
or
add
in
mov
mov
mov
inc
and
sub
sarb
daa
push
stos
inc
sbb
dec
or
lcall
xor
sbb
push
aam
movsb
dec
pop
pop
sbb
mov
into
push
xor
mov
sub
insb
lcall
and
inc
pop
insb
icebp
xchg
idivw
and
popw
mov
mov
and
test
shl
mov
rclb
cmp
clc
pop
mov
and
in
sub
fs
outsb
dec
jmp
test
cmpsb
mov
hlt
inc
push
jp
mov
xor
jle
cli
rcrb
shr
jg
sub
cli
fists
jne
inc
xchg
and
push
cs
je
sub
lods
jnp
or
inc
test
mov
jle
push
xor
sbb
loopne
sub
jae
test
lock
mov
jnp
sbb
movsl
and
and
cs
pop
movsb
mov
or
rorl
sbb
sbb
jo
pop
shr
cltd
mov
pop
mov
inc
pop
movsl
add
xchg
cmp
shrb
pop
jl
popa
jo
in
cwtl
out
pushl
cwtl
cmp
out
imul
in
xorb
pusha
out
xor
and
mov
out
dec
cmpsl
ret
lea
jmp
jp
xchg
sub
push
int3
cld
mov
cmp
out
imul
cmp
js
push
popf
lods
clc
sub
fisttps
mov
mov
mov
add
das
inc
or
xor
adc
add
inc
jae
dec
or
jae
xchg
mov
xchg
cwtl
xchg
test
sarb
ret
in
cmc
add
cli
lcall
les
gs
push
jbe
lcall
inc
popf
mov
int
mov
jecxz
je
push
gs
pop
jns
xor
mov
or
mov
insb
ffreep
mov
lea
mov
jecxz
mov
sub
dec
or
fidivrs
fiaddl
mov
push
scas
outsb
cmp
xchg
sbb
ret
mov
addr16
iret
pop
sahf
clc
or
int
and
loopne
cmp
les
sbb
xor
mov
mov
test
aas
sub
xor
ljmp
xor
int
sbb
xchg
or
mov
pushf
cltd
stos
cld
dec
lods
ret
int
xor
xor
jl
xchg
pop
ret
sbb
adc
mov
dec
in
mov
shrb
mov
pop
mov
pop
cmp
pop
in
lea
mov
fldt
loop
shll
and
and
ja
push
sbb
sbb
insb
sub
dec
jmp
les
pop
sbb
or
xor
fwait
push
pop
push
aam
sbb
pop
and
add
nop
dec
pushf
aam
sbbl
sub
inc
jae
sbb
stos
push
xchg
mov
fidivl
mov
stos
mov
jns
pop
dec
adc
mov
sub
push
dec
movsl
mov
cmp
lahf
dec
sbb
fmull
and
loop
cmp
sub
lods
test
xor
pop
xor
stc
cs
jo
lock
jmp
nop
in
cltd
roll
xchg
int3
mov
mov
xorb
fimull
xchg
inc
ljmp
lcall
hlt
pop
mov
sub
xor
inc
mov
mov
jg
movsl
xchg
loope
enter
in
push
bound
adc
cmc
nop
lret
cmp
sbbl
pop
addr16
push
mov
inc
xchg
jno
insl
lea
push
mov
popl
mov
lret
add
lock
push
ja
rorl
jp
jg
pop
dec
rcrl
pop
enter
shrb
cwtl
mov
push
loopne
test
inc
out
add
cmp
jbe
and
outsb
inc
mov
fwait
sub
add
xor
mov
insb
mov
lcall
pop
dec
pop
lret
mov
repz
mov
push
or
in
outsb
and
cmp
movsb
fnsave
sbb
mov
pop
jge
inc
push
fnstcw
subb
movsl
scas
inc
loope
and
or
pop
mov
jnp
xor
push
push
je
mov
fadds
dec
mov
pop
cmpl
std
cwtl
std
mov
movsl
jbe
dec
jo
pop
xor
sub
movhps
xlat
push
stos
lods
mov
fwait
jnp
movsb
mov
fwait
jmp
jecxz
inc
cmpsb
and
jo
dec
pop
cmpsb
mov
sub
mov
rorl
mov
in
ljmp
cmpsb
or
xchg
sahf
push
sub
push
jae
fstps
cmp
cwtl
jnp
jne
mov
gs
dec
jmp
pop
dec
xchg
jl
and
mov
push
mov
mov
mov
stos
sbb
push
inc
push
repz
ljmp
pop
and
sbbb
add
nop
push
loop
push
aaa
imul
popf
popf
test
add
les
fs
and
or
add
sbb
dec
xor
loopne
les
jbe
mov
adcl
pop
out
dec
mov
xchg
sub
dec
or
and
jle
pop
mov
insl
inc
push
fstpt
ja
lret
lahf
push
ljmp
mov
cmpl
push
fistpl
clc
in
mov
jbe
imul
aaa
out
mov
ljmp
lock
add
cmpb
ficompl
jnp
into
xchg
testl
bound
fsubrl
jne
movsb
or
add
mov
pop
fimuls
push
loop
cmp
repz
jge
cmpl
clc
lock
lods
lds
mul
out
mov
or
fs
dec
lea
ss
dec
jl
imul
enter
stc
push
and
imul
cld
or
xor
inc
aas
aad
or
in
xchg
sbb
mov
mov
in
mov
iret
sbb
fucomip
data16
mov
xchg
push
or
mov
std
or
adc
mov
push
mov
outsb
or
xchg
pop
adc
rcll
outsb
mov
cmpsb
mov
je
fistpll
jl
sbb
dec
add
add
mov
mov
cmc
push
sti
les
xor
xor
pushf
sbb
lds
sbb
and
push
add
push
repz
mov
sub
inc
sbb
sti
cmpsb
shlb
test
sahf
shrl
sbb
rolb
jbe
test
xchg
iret
mov
hlt
mov
dec
xchg
dec
enter
sbb
jle
and
pop
sub
repnz
adcb
sbb
inc
popa
push
cltd
cli
divl
in
mov
jb
xor
lods
lds
mov
cmp
xchg
int
loope
cmpsb
int
subl
call
aad
inc
jmp
loope
mov
add
adcl
dec
cld
into
inc
sbb
jp
pop
imul
dec
shl
inc
das
jmp
or
pop
mov
mov
fidivl
xor
in
xchg
cmp
mov
jmp
lret
pop
adc
xchg
outsb
rorl
arpl
sahf
mov
or
mov
ja
out
adc
bound
mov
mov
inc
sub
fisubs
stos
inc
push
and
jmp
imul
inc
dec
loop
xchg
or
setne
int3
dec
loopne
notl
fstl
pop
or
sub
jno
and
lahf
sub
divl
fimull
sbb
and
scas
fabs
sub
mov
insb
xchg
jo
ss
in
js
jle
mov
cmp
lea
cli
sub
xlat
loopne
pushf
cmpl
ret
inc
out
xchg
shl
iret
inc
sti
sub
pop
into
mov
je
fmuls
sub
fisttpl
lahf
lret
dec
jp
sub
out
jbe
fnstsw
bound
out
lock
int3
and
push
lret
pop
pop
mov
jg
jno
jns
mov
push
push
jl
arpl
loopne
repnz
push
lds
push
xchg
adc
dec
les
pusha
adc
lock
sbb
mov
into
fistps
addr16
daa
push
or
outsl
loope
shrl
mov
imul
jl
stos
pop
push
pop
pop
sti
push
out
lock
dec
xchg
sti
cld
fdivp
jmp
xchg
movsl
mov
outsb
shl
push
push
mov
fdivrl
inc
loopne
frstor
jle
and
mov
sub
jne
and
and
mov
mov
lods
mov
dec
lea
andb
mov
xchg
pushf
fistpll
sub
scas
xor
mulb
fcoms
mov
sbb
shlb
mov
inc
lds
icebp
mov
mov
cmc
cs
inc
sbb
pop
aad
pop
mov
sbb
sti
rcr
ljmp
in
inc
sub
aaa
jnp
das
mov
inc
mov
xlat
push
rcrl
pop
fmul
cli
sub
mov
mov
cmp
insl
in
fdivrs
add
xor
stc
sub
sbb
enter
or
repz
dec
and
pop
imul
imul
lods
push
dec
out
dec
add
jl
xchg
sbbb
insl
jnp
xchg
xchg
ds
xchg
dec
xor
test
into
xchg
cmc
in
pop
sbb
mov
dec
lea
xchg
mov
mov
dec
push
sbb
add
bound
cmpsl
stos
cmp
mov
dec
gs
pop
adc
xlat
and
orl
sub
sarb
cmp
sub
lock
rorl
jbe
leave
das
sbbb
and
ja
dec
je
andb
cltd
add
push
and
and
jecxz
sub
roll
lahf
push
rcrb
data16
mov
cli
stos
cmpsb
add
push
adc
mov
fistpll
imul
mov
das
xor
xchg
dec
push
push
je
loope
mov
push
ret
ret
jb
jns
rcll
push
sub
ret
inc
out
aas
aam
mov
add
pop
inc
test
popa
into
inc
jp
mov
jmp
mov
add
aaa
out
mov
hlt
ret
sbb
push
and
pop
imul
mov
jb
dec
sbb
ror
sub
mov
dec
mov
mov
or
mov
sub
outsl
or
add
jecxz
or
negb
sbb
pop
sub
or
movsb
mov
jp
stc
xlat
aad
push
adc
adcb
cwtl
mov
enter
jne
mov
jns
xor
jno
adc
xorl
push
mov
pop
je
dec
enter
notb
xchg
add
dec
dec
xlat
mov
mov
daa
xchg
inc
dec
iret
test
jae
or
cmpsl
dec
mov
pop
and
jae
pop
in
pop
adc
stos
push
mov
int3
les
jl
in
imul
cmp
dec
sahf
ret
inc
pop
ljmp
jne
movsb
fistl
out
dec
sub
mov
xor
and
dec
test
mov
gs
push
mov
inc
daa
aad
jns
pop
pushf
adc
sbb
jl
ret
outsl
in
push
fnstenv
jge
jno
adc
insb
out
mov
jp
adcl
in
stc
ret
jne
or
shll
cld
push
or
imul
stc
xorb
xchg
clc
out
xchg
insb
rol
mov
xchg
incb
jbe
xchg
jns
call
insb
mov
mov
cmc
push
add
loop
ret
mov
xor
or
popa
xor
ja
mov
int3
push
inc
sub
sub
cmc
movsl
push
mov
xchg
and
out
lcall
sub
mov
mov
mov
mov
idiv
sub
movb
lcall
out
adc
push
stc
add
sub
je
push
dec
out
dec
or
into
sub
add
outsb
pop
loop
dec
and
aad
call
pop
cltd
adc
lcall
push
sbb
push
pusha
xchg
dec
mov
test
enter
cmpsl
sti
popf
mov
pop
inc
push
and
orl
xchg
push
outsl
xchg
inc
sub
outsl
in
fists
push
add
stos
fsubr
fucom
in
fsubl
outsb
aam
dec
jns
incb
cmp
xchg
fmull
adc
xchg
std
pop
cld
sub
rcll
mov
adc
test
xchg
add
xchg
xchg
add
mov
pop
pop
and
or
fildll
or
dec
xchg
ss
push
pop
push
adc
ss
fsubrl
and
es
cmp
insb
cmp
lgdtl
pop
mov
out
inc
lods
fwait
fs
out
pop
jp
push
jp
push
push
adc
mov
xor
dec
jnp
sub
push
xorl
or
push
repnz
jo
rcrl
sub
pushf
pop
mov
pop
push
idivb
fidivs
repnz
jmp
in
rorl
andl
call
xor
adcb
int
jo
or
in
xchg
addr16
sahf
out
cmp
adc
push
mov
daa
push
sub
daa
jl
insl
cld
loop
enter
dec
loope
loopne
stos
push
pop
adc
mov
sub
enter
imul
mov
test
enter
dec
stos
clc
imul
loope
mov
dec
cmp
gs
shl
aas
std
sbb
mov
inc
arpl
out
adc
lds
jg
jb
sub
clc
push
dec
cld
cmp
imul
jp
push
add
outsb
inc
mov
cmpsl
lcall
notl
out
loope
stc
out
roll
push
in
sbb
sub
roll
jl
out
pop
inc
xchg
push
cltd
jecxz
aaa
cmpsl
cmovl
bnd
xor
mov
movsl
dec
testl
pop
mov
shl
and
mov
pop
scas
mov
clc
jg
in
into
shll
pop
inc
icebp
movsb
xor
dec
and
imul
jg
mov
lea
mov
les
cli
or
or
in
inc
cmp
push
and
push
mov
loope
insb
push
jns
xchg
jno
add
sbb
sub
sbb
test
das
adc
mov
iret
stc
xchg
or
dec
push
cmpsb
mov
mov
xchg
int3
aaa
xor
shrl
mov
shl
dec
pop
inc
inc
sbb
push
cmpsl
xor
mov
lcall
push
push
sbb
fdivrp
xor
mov
or
dec
jb
and
sbb
es
sbb
orl
out
push
lahf
or
test
cmpsb
ret
or
or
jmp
push
cmp
and
inc
jmp
sub
pusha
push
cmp
test
add
jne
mov
sub
std
popf
mov
fwait
iret
scas
das
not
data16
cmc
or
xchg
sbb
jge
inc
ljmp
inc
push
movsb
fimuls
ljmp
pop
sahf
sub
loope
or
push
lahf
or
add
add
sarl
ret
roll
testb
rcrb
sbb
or
sbb
fisubs
imul
sbb
and
and
aam
xor
xor
push
out
inc
ds
movsb
pop
je
aaa
iret
imul
test
imulb
jbe
or
je
and
cmpsb
ja
jge
imul
adc
subb
icebp
and
mov
mov
dec
cmp
out
xorb
sub
dec
faddl
jle
dec
cmp
pop
rcr
je
sub
int
cli
ret
repnz
lahf
xor
fwait
mov
sbb
sbb
imul
imul
cmp
adc
push
aad
inc
cltd
push
inc
jae
pop
xlat
xchg
mov
cmpsb
jae
pusha
scas
cltd
ds
push
lds
lds
pop
js
je
sub
jnp
jae
jno
movsl
insl
nop
push
movsb
addr16
sbb
cmp
lods
adc
test
ret
sbb
mov
call
sub
lcall
shr
add
sbb
jecxz
insb
scas
push
imul
in
adc
dec
js
mov
mov
sbb
sbb
mov
xor
pop
out
dec
std
mov
or
inc
or
dec
sbb
cmp
mov
aam
mov
fwait
gs
push
fwait
mov
stos
pop
aam
or
out
divps
mov
aas
mov
je
imulb
mov
mov
mov
push
data16
adc
sbb
or
into
pop
or
pop
lahf
aas
cltd
or
cltd
iret
daa
or
test
movsl
mov
or
push
or
ja
lcall
sub
rorb
add
cmp
test
aam
mov
inc
jb
push
xchg
xor
lret
fwait
repz
in
pop
push
jle
push
movsl
mov
das
out
lahf
sbb
sbbl
addr16
int
popf
pop
insb
jb
cmp
jle
cmp
sub
ret
jmp
add
push
cmp
fldt
insb
xchg
push
mov
sub
data16
cmpsl
subb
jae
out
adc
aad
push
lret
lea
inc
pusha
lcall
dec
out
ficompl
push
cltd
mov
lahf
clc
cmp
insb
nop
add
stos
testb
in
or
rcrb
insl
fadd
xlat
cmp
rcr
cli
jae
jl
arpl
data16
addr16
xchg
ss
xor
rolb
cmp
mulb
in
pop
ret
out
lds
repnz
js
push
jg
fwait
divb
es
roll
outsb
pop
mov
lds
idiv
insl
jecxz
enter
push
or
cmp
adc
and
inc
xchg
ror
mov
fstpl
sete
cmpsb
dec
repz
ljmp
push
mov
nop
out
cltd
insl
outsl
lods
icebp
pushf
jg
mov
xor
mov
adc
mov
xchg
in
fstpl
jp
dec
lahf
test
fistpl
xchg
and
sbb
cmp
mov
or
mov
pusha
mov
mov
pop
add
mov
jecxz
pusha
aad
mov
insl
jbe
aad
int
hlt
in
out
std
bound
dec
lret
mov
mov
pop
dec
cmpsb
call
cmc
mov
inc
aaa
mov
lock
add
dec
push
push
shll
lret
lds
in
mov
fistpl
mov
lret
inc
sub
insb
dec
iret
push
insl
cmp
inc
sti
mov
push
outsl
xor
and
inc
mov
repnz
jo
and
jbe
xchg
jp
loop
shl
ss
arpl
pop
mov
push
repnz
mov
and
popa
fwait
adc
inc
fdivrs
sub
sub
mov
xor
inc
pop
or
data16
test
js
sti
mov
imul
adc
mov
sub
sub
pop
push
aas
mov
sbb
nop
test
ret
in
pop
fwait
jp
popl
sub
add
outsl
insl
sbb
sbb
scas
rolb
pop
push
jbe
add
insl
outsl
add
scas
daa
sub
push
mov
xchg
push
popa
jge
xor
inc
jno
mov
pop
stc
xor
cmc
jbe
jecxz
mov
pusha
dec
int
add
movsl
mov
adc
test
dec
ja
int3
fistpll
sahf
mov
add
pop
jb
xorb
fisttpl
call
wrmsr
out
and
popf
leave
fwait
xchg
icebp
adc
sbb
lcall
xlat
and
call
mov
mov
adc
sbb
sbb
in
or
jle
cmc
test
test
scas
loope
les
aas
mov
shlb
out
fincstp
shll
outsb
xchg
mov
mov
daa
pop
xchg
loop
lods
pop
shrb
sbb
mov
test
sbbb
je
fs
mov
aam
jmp
hlt
popa
add
or
xchg
lahf
ret
jno
dec
adc
xchg
adc
jecxz
inc
inc
adc
jno
xor
jmp
pop
lcall
lret
out
sub
lahf
ljmp
mov
mov
mul
pop
mov
fisubs
ja
decb
inc
cmp
add
lds
cmpsl
mov
cmpsb
adc
add
in
scas
repnz
dec
dec
push
inc
or
std
dec
add
ret
or
mov
push
test
pop
aam
xchg
lods
loopne
sar
jno
jg
lret
push
and
dec
out
pop
mov
mov
rorl
mov
cwtl
cmp
cmpsl
add
xor
cmp
dec
mov
adc
xor
data16
cld
push
xchg
dec
sahf
aam
sbb
and
out
adc
insl
mov
lret
pusha
sbb
push
bound
ret
or
gs
mov
int
mov
xchg
mov
jle
add
arpl
inc
sub
mov
sbb
ja
xor
jb
add
inc
inc
lds
xchg
fldenv
mov
popa
lahf
es
pop
adc
jecxz
push
xor
jno
cld
and
cmp
pop
std
insb
ja
xchg
out
aam
outsl
mov
dec
dec
sbb
ja
or
inc
out
lea
pop
xchg
inc
lret
or
jecxz
cmp
lods
js
std
pop
dec
mov
fsubrl
jne
or
jecxz
inc
push
in
or
rcl
pop
cwtl
or
fsubl
cmc
pushl
xchg
fs
outsb
mov
pop
xchg
inc
andl
or
or
loope
int
mov
mov
ds
repz
and
out
mov
cs
ret
imul
fstpt
pop
ret
and
ret
xor
push
and
dec
adc
adc
xor
push
sahf
lods
and
daa
bound
sub
jno
test
rcrl
fdiv
adc
adc
dec
js
xchg
and
das
fisttpll
pop
xchg
data16
push
pop
pop
dec
cld
dec
push
inc
aam
daa
int
jecxz
sub
mov
mov
jbe
iret
jbe
push
cmp
mov
out
outsb
mov
mov
fs
shrb
mov
or
popl
std
xor
out
jecxz
mov
test
push
sbb
outsl
and
jg
xor
xchg
into
mov
popf
sbb
push
int3
add
adc
adc
cmp
xchg
xchg
adc
push
inc
test
dec
imul
xor
stos
dec
shll
push
xlat
pop
xchg
fs
fisttps
fistps
or
fdiv
mov
or
jnp
sbb
outsb
iret
cli
xor
or
js
dec
mov
shlw
sub
test
in
icebp
lock
stc
xor
push
sahf
mov
test
sub
sub
mov
les
notb
cmp
popf
stos
fmuls
nop
in
enter
inc
pop
dec
push
jnp
adc
jecxz
dec
jmp
out
mov
mov
in
cli
dec
subl
pop
cmp
mov
push
int
inc
fimull
jp
popl
dec
xchg
addb
xor
fsubl
mov
and
bound
or
and
and
addr16
mov
mov
push
add
divl
cli
jns
inc
push
mov
xchg
outsb
inc
pop
adc
or
mov
scas
les
pop
pop
call
mov
inc
xchg
stos
inc
push
and
pop
fsubr
mov
xchg
sub
jecxz
mov
aas
aaa
xchg
in
subb
andb
je
pop
cmp
push
inc
xchg
add
cmc
jmp
jae
fcomps
outsl
repz
mov
test
jo
and
imul
mov
mov
rorb
js
mov
ret
push
pop
popf
fistpl
fdivl
and
out
add
pushf
gs
adc
mov
mov
xchg
jg
adc
jnp
test
jge
sub
cmpb
dec
cmpl
and
pop
push
jnp
in
fcmovnbe
inc
addr16
insb
lods
loop
mov
cld
add
shl
push
mov
std
jae
mov
or
hlt
rcr
arpl
lods
cwtl
xchg
icebp
mov
inc
inc
sub
jp
push
push
stos
lods
add
push
sbb
mov
fs
dec
adc
mov
testb
jnp
pop
cwtl
inc
dec
adc
test
and
pop
sarl
lods
imul
std
and
les
pop
es
lods
push
repz
xor
out
mov
pop
sbb
pop
fsubrl
lock
in
sub
nop
sbb
mov
push
push
cmp
and
stos
mov
div
aaa
xor
sbbl
lret
inc
movsb
test
jno
xor
push
mov
push
lods
inc
dec
mov
add
les
or
pop
sbb
jne
add
sbb
pop
mov
inc
les
dec
xor
xor
in
imul
cmp
mov
xor
data16
pusha
inc
push
repnz
jp
pop
cmpb
test
sbb
dec
mov
xchg
and
rcrl
addl
pop
adc
and
aad
or
xor
push
dec
cmp
movsl
out
jp
insl
inc
mul
dec
mov
into
xchg
xor
add
fwait
pop
cmpb
ss
dec
nop
dec
arpl
scas
scas
cmc
mov
movsl
shrb
dec
mov
enter
and
cld
test
inc
ret
roll
pop
decl
jmp
ficoms
rclb
lods
xlat
xchg
dec
or
add
dec
lret
aam
mov
xor
inc
or
pop
fdivrs
cmp
mov
dec
inc
fwait
dec
pop
mov
paddw
pop
mov
jp
push
test
and
popf
clc
pop
push
mov
mov
jmp
outsb
out
call
sbb
lcall
sub
add
inc
push
add
mov
in
xchg
jns
adc
inc
pop
sbb
in
and
insb
fisttpll
jnp
mov
loope
sbb
and
xchg
into
xchg
cli
lods
sbb
es
sbb
shlb
test
lods
mov
test
notl
lea
call
pop
frstpm(287
adc
idivl
std
adc
insb
in
push
add
push
dec
shlb
push
insb
out
or
in
lret
scas
xorb
mov
rsqrtss
sub
or
and
ret
or
mov
jmp
lea
sbb
sub
mov
fcompl
fwait
shl
cmpsb
pop
ret
dec
cs
jmp
daa
insl
repz
xchg
adc
int
jb
out
jo
push
xlat
in
loope
fadds
in
sbb
mov
lret
lret
mov
cld
and
es
stos
imul
cmp
clc
sub
ljmp
fs
pushf
leave
out
add
or
cli
fs
pop
cli
jmp
mov
jnp
xor
jne
cmp
jl
dec
and
xor
stos
and
dec
movsb
adc
sarb
adc
mov
xlat
loopne
incl
adc
into
cmp
popa
std
xor
decb
imulb
loopne
xor
stc
and
lods
repnz
jmp
inc
cmp
out
jno
cltd
ja
xchg
pop
mov
add
repnz
mov
jo
test
mov
push
cmp
dec
add
test
imul
rcrl
scas
pop
pop
sar
pusha
ret
cmp
push
inc
in
dec
xchg
jecxz
outsl
jbe
stos
lret
cmp
dec
inc
push
jg
cwtl
jno
repnz
hlt
dec
lahf
inc
jg
cwtl
mov
lcall
push
mov
cmp
pop
jge
xor
push
in
xor
xchg
push
mov
inc
mov
bound
inc
mov
aam
pop
ror
xor
pop
adc
nop
clc
mov
cmpsl
in
clc
dec
ds
movsl
sbb
movsb
xor
mov
jns
dec
aas
pusha
sub
push
fwait
negb
jecxz
icebp
push
addb
mov
shr
pop
jmp
jp
pusha
ret
aad
inc
mov
push
xchg
std
pop
inc
shll
cmp
push
ljmp
int3
daa
mov
pop
in
pop
dec
dec
and
sub
jmp
pop
pop
rclb
cmpl
fs
lahf
xchg
mov
clc
adc
mov
stos
or
loopne
xchg
leave
fldt
pusha
scas
sub
out
sub
rolb
cli
xor
cmp
xchg
add
test
sub
test
lock
mov
jnp
mov
push
das
and
mov
std
lahf
pop
lds
xchg
mov
in
mov
test
sbb
fidivrl
jnp
xchg
jb
ret
adc
inc
dec
aad
aad
jno
cmc
mov
xchg
sub
loopne
rol
ljmp
int3
pushf
repnz
dec
fisubrl
mov
enter
in
pop
push
lods
jo
mov
pop
scas
add
out
cmpsl
or
ljmp
lea
outsl
or
pop
loopne
cli
pop
je
push
lcall
sbbb
insl
adc
insb
out
rolb
out
into
sti
scas
xlat
aad
sbb
xlat
in
push
loop
mov
inc
push
movsl
outsb
xor
cmp
xchg
inc
mov
or
cmp
sub
cltd
scas
in
mov
xchg
out
aaa
adcl
xor
shlb
scas
dec
sub
mov
or
mov
inc
aaa
cmpsl
push
add
sbb
jbe
mov
sahf
stos
inc
xchg
pushf
adc
or
test
xor
fists
cmpsb
je
and
cmp
lods
inc
mov
pop
lahf
jl
mov
mov
dec
jle
movsb
int
rcrl
in
xchg
orl
lcall
les
push
xchg
inc
mov
inc
cmp
mov
andb
cmpsl
and
inc
dec
test
gs
ljmp
push
bound
sahf
mov
fwait
mov
fsubrl
push
xchg
mov
mov
xor
hlt
jo
aam
lcall
fcmovu
lret
repnz
roll
mov
int
xor
jmp
daa
andb
bound
push
arpl
scas
das
mov
adc
in
iret
mov
loopne
repz
mov
idivl
mov
adc
or
and
orb
sbbl
push
movsl
sbb
jbe
movl
mov
jb
fwait
mov
xor
aas
dec
shlb
sahf
aad
outsl
ja
push
arpl
pop
outsl
aaa
mov
mov
in
mov
xchg
push
add
imul
xchg
mov
mov
fnstsw
cli
fisubrs
sbb
shll
scas
adc
jne
ja
and
scas
mov
mov
arpl
mov
ljmp
and
sub
jb
or
mov
cli
idivb
call
jp
and
mov
mov
andl
pop
adc
sbb
push
das
shll
jp
test
jecxz
xchg
xlat
out
push
aas
fwait
pushf
cmpsl
xchg
push
inc
ret
xchg
mov
mov
int
mov
or
inc
mov
fldt
mov
xchg
int
sarb
xchg
decb
xor
cmp
pusha
push
les
sti
xchg
inc
out
xorb
ss
mov
inc
jne
test
aam
lahf
mov
cli
les
fdivrl
loope
inc
xchg
dec
adc
dec
xchg
lods
mov
pop
push
cmp
out
sbb
imul
insl
rcl
test
daa
mov
out
push
inc
jl
in
jnp
push
lahf
mov
lcall
cli
fmul
bound
std
mov
pop
mul
lret
iret
mov
stos
sub
pop
das
fisttpl
mov
dec
bound
lahf
cmp
rol
xor
test
pop
add
and
aad
icebp
bound
mov
ja
mov
popf
jno
and
jmp
arpl
mov
fidivrl
fwait
jnp,pt
xor
jbe
cmpsl
mov
inc
lret
sahf
adc
mov
add
push
arpl
mov
adc
jbe
inc
pop
push
adc
loope
dec
xchg
mov
inc
or
ds
mov
lea
data16
mov
in
repnz
andb
jg
add
push
les
imul
push
or
cmpsb
dec
dec
pop
fs
in
push
imulb
xchg
lahf
insl
push
pop
lds
rcr
mov
or
subb
push
pop
pusha
test
lods
iret
stc
daa
lods
in
test
sub
sub
call
push
shll
test
or
cli
lock
sub
dec
fcompl
inc
sub
movsl
test
sbb
std
jbe
aaa
adc
jae
cmp
stos
xor
cs
sub
cli
mov
adcb
movsl
fadds
sub
jge
jae
lds
cmpsl
mov
ljmp
push
mov
jo
in
repnz
mov
outsb
int
cmp
jb
stos
xchg
fdivp
fsubrs
stos
ret
sbbl
add
mov
adc
mov
cmc
mov
mov
cmp
stos
adc
ss
dec
scas
scas
sbb
ljmp
addr16
arpl
push
push
cmp
jns
or
xorb
xor
cmp
mov
or
xchg
mov
int3
inc
stos
mov
cmpsl
mov
mov
mov
lods
add
add
daa
push
xor
jno
outsb
xor
movl
sbb
jno
pop
dec
lods
test
stos
stos
jne
lods
or
lcall
stos
je
lahf
rorl
out
ja
cmpsb
jecxz
push
sbb
jno
loope
into
addb
mov
daa
inc
int3
mov
cli
pop
cmp
and
mov
gs
inc
mov
mov
imul
dec
mov
cmp
mov
mov
inc
dec
pminub
or
lods
cmp
push
push
xor
dec
cltd
aaa
out
cmp
mov
jle
bnd
lods
idivb
or
pop
dec
fnstenv
push
sub
pop
mov
xchg
mov
gs
jbe
into
lret
add
sub
sub
pushf
and
lret
cmpsb
flds
icebp
imul
ret
mov
dec
mov
cld
out
xor
dec
pop
inc
out
xchg
xchg
xor
jb
mov
lcall
cmp
popf
xor
aam
dec
xor
xchg
mov
enter
ja
gs
sbb
jle
into
lea
sub
psubw
sub
or
cmp
jae
test
rsqrtps
jbe
or
ficoms
in
aas
adc
movsb
inc
or
mov
imul
lcall
test
mov
sbb
rcrb
push
cmp
or
adc
dec
pop
cmpsb
imul
outsb
cmpl
rolb
lret
insb
push
cmp
and
notl
cmp
adc
or
and
add
lock
scas
push
div
out
lock
out
int3
fnsave
ljmp
std
jmp
fisubrs
push
push
xor
lock
jge
ja
push
dec
cli
data16
int3
jne
adc
arpl
stos
adc
inc
icebp
pop
xor
mov
add
pop
mov
jb
test
xlat
mov
dec
mov
or
sbb
int
pop
mov
jmp
mov
roll
loope
lea
adc
lret
stos
mov
adcb
xchg
nop
add
mov
add
lds
pop
insl
movsl
sbb
lods
lret
push
clc
jo
and
inc
pop
fldl
mov
mov
and
lea
pop
xor
pop
adc
add
aam
cs
pop
mov
pop
push
clc
loopne
addr16
push
and
sub
int
jle
pop
loop
xchg
add
cmp
push
add
xchg
push
shlb
call
outsb
sbb
loope
mov
std
push
js
pop
mov
jne
mov
pop
push
movsl
lret
xor
add
movsl
lea
int
xor
or
loopne
clc
push
push
or
xor
mov
int
cwtl
mov
dec
add
call
jecxz
lret
leave
mov
jp
jle
cmpsl
dec
fbstp
sbb
in
ss
cs
ret
jae
outsl
fiadds
popa
outsb
mov
or
shlb
lret
pop
inc
pop
push
pop
adc
pop
aas
push
push
sbb
mov
dec
push
cmc
test
jge
movsl
and
sub
pushf
xchg
pushf
into
adc
mov
hlt
mov
cltd
lret
imul
fmull
aas
xchg
adc
int3
iret
pavgw
sbb
or
push
mov
mov
call
cli
jmp
sub
inc
outsb
mov
mov
or
into
xchg
data16
ja
inc
push
cmp
aad
outsl
sub
push
mulb
pop
stos
inc
jo
shll
aaa
mov
fldl2e
mov
dec
repnz
sub
jl
mov
mov
int3
lahf
add
mov
dec
push
ss
dec
out
cmp
inc
or
adc
mov
sub
or
fs
pop
mov
mov
popf
and
xchg
cmp
mov
fs
xor
xchg
ret
dec
jmp
out
mov
push
jg
clc
sbb
inc
dec
scas
imulb
sbb
testl
fldl
push
ret
mov
xor
imul
cmp
xor
fidivl
fisubs
cs
lods
js
dec
jno
lods
push
gs
es
cmp
jecxz
loopne
adcb
cmp
jae
mov
lock
mov
adc
cmp
sub
aas
fstp
in
cmp
lcall
pushf
insb
mov
mov
addr16
push
data16
les
pop
test
icebp
sub
fisubs
lret
jb
cmp
repz
imul
push
cmp
and
sbb
shlb
adc
in
fldt
dec
cmp
mov
in
dec
xchg
adc
ljmp
loope
leave
lret
cmp
in
lret
xchg
and
push
push
pop
lock
movsl
cwtl
loop
sbb
sub
lods
out
js
add
bound
leave
jno
add
jae
jg
add
fs
pop
lds
movsl
mov
cmp
cli
pop
adc
lock
pop
je
test
insb
push
aad
cmp
adc
pop
xlat
pop
ret
adc
xor
ss
xchg
pop
dec
into
jge
rcrb
enter
and
xchg
aad
inc
outsb
dec
sub
lcall
cmpb
mov
push
movsb
jno
pop
repz
sub
dec
or
mov
pop
mov
and
pop
sub
jne
mov
outsb
ficomps
xchg
iret
rol
inc
in
dec
mov
pop
cmp
ja
sbb
add
add
scas
mov
xor
dec
or
lods
mov
bnd
mov
lret
push
call
cli
xor
xchg
lods
xor
pop
jg
pop
pusha
outsl
sbb
mov
lahf
aas
dec
aad
adc
lcall
cld
sbb
out
nop
pusha
popf
inc
push
mov
mov
pop
and
fmul
inc
rcr
dec
and
or
out
mov
jge
jae
push
out
mov
and
sub
popa
mov
inc
sub
dec
or
addr16
jge
adc
lds
repz
scas
cli
or
ss
xchg
fwait
int3
cmp
dec
je
imul
repz
lea
xchg
shll
mov
pop
sub
adc
loope
movsl
sub
repz
sbb
pushf
or
mov
mov
ror
push
stc
xchg
xchg
jmp
jmp
cld
mov
sbb
or
and
clc
in
dec
inc
adc
into
pop
lret
inc
fbld
push
arpl
mov
lock
pop
and
loop
inc
cmp
jecxz
xor
idivb
roll
pop
icebp
sub
shrl
jb
jbe
and
fistpl
inc
push
sahf
arpl
sbb
cmp
sub
imul
cmp
clc
and
pop
xor
sbb
fldcw
or
adc
cmp
fsubl
sbb
pop
movsl
pop
and
notl
xchg
dec
imul
xor
int3
inc
movsb
into
test
out
imull
pop
clc
mov
pushf
xor
or
mov
mov
mov
fisubl
push
jg
pop
enter
ja
inc
std
hlt
cli
pusha
int
xchg
cmp
dec
loopew
add
in
add
andb
mov
inc
mov
ss
cltd
mov
daa
mov
lods
xchg
add
jb
lcall
pop
cltd
sarb
xchg
scas
cltd
ja
mov
dec
lret
mov
mov
lods
jb
jo
cmp
stos
fsubp
aas
in
fs
aam
ja
push
dec
daa
rcrl
dec
pop
mov
cmp
inc
fwait
jle
ja
shll
cmp
pushf
pop
clc
mov
jns
cs
pop
call
test
mov
add
jp
mov
lret
or
ficomps
dec
lcall
dec
lret
inc
aad
jno
dec
int3
arpl
out
mov
inc
in
adc
out
ror
sti
pop
cs
jg
test
mov
cmpsb
js
cld
sahf
aam
and
test
xorl
stos
jg
dec
add
jecxz
std
fwait
daa
sub
out
push
inc
loopne
loopne
xor
pop
jnp
or
pop
cmpsl
xchg
adc
push
and
lds
loope
mov
les
dec
cmp
ljmp
shl
ss
es
testb
data16
movsb
dec
pop
add
dec
ds
push
fimuls
in
inc
call
insb
cld
inc
jnp
push
mov
ja
jge
test
les
push
call
scas
sahf
adc
aad
lock
scas
int3
sbb
leave
lret
add
call
pop
cmc
mov
xor
xor
lahf
sbb
iret
and
pusha
lods
stos
in
or
mov
test
xlat
sbb
call
test
pushf
and
lods
scas
add
dec
dec
mov
cmp
movsb
fwait
push
cmp
jns
pusha
stos
jmp
adc
cmpsb
sbb
cltd
mov
dec
jle
negb
xor
fldenv
xor
arpl
xlat
mov
cmp
xchg
je
dec
add
mov
stos
lret
in
ficompl
and
cmpsb
xchg
ja
jl
sbb
add
dec
out
mov
or
test
movsl
lahf
cmp
into
xchg
or
sar
jle
mov
xchg
dec
mov
out
scas
inc
or
leave
pushf
lcall
in
dec
lea
sti
imul
test
fdivrp
and
pop
xchg
mov
lods
jmp
add
leave
dec
jns
outsb
xchg
in
ret
dec
jnp
arpl
clc
pop
ror
cmp
sti
jge
sbb
push
add
bound
adc
inc
mov
cmp
fidivrl
rcr
mov
sti
pop
xor
outsl
sahf
aas
pop
fsubl
mov
sbb
testl
xchg
and
fcompl
subb
xchg
imul
mov
xchg
dec
sbb
in
icebp
mov
jg
daa
imul
fwait
lock
lret
cmp
fcomps
stc
lret
adcb
mov
pop
mov
adc
jecxz
jns
inc
lods
lea
cvttps2pi
pushf
mov
cmpsb
push
out
jbe
mov
push
fdivrp
imul
fisubl
mov
dec
negb
or
les
or
pop
jp
std
sbb
sbb
insb
push
movsb
stos
ljmp
push
sar
call
add
jns
and
sub
xchg
mov
not
ja
pop
or
mov
imul
leave
mov
jle
mov
cmpsb
sub
mov
mov
dec
subl
or
xchg
imul
jp
or
mov
insl
xchg
mov
xlat
sbb
push
dec
insb
insb
gs
iret
push
cli
sbb
mov
clc
or
test
mov
cmp
in
mov
cmp
mov
stos
xchg
ljmp
bound
fstpt
addr16
sbb
or
ret
dec
inc
and
sub
push
xor
leave
ds
add
push
or
cmp
in
leave
lock
xchg
lea
mov
lods
xchg
pop
xorb
and
push
lcall
add
int3
ds
or
lret
dec
movsb
in
pop
clc
cld
push
lock
xlat
push
sbb
dec
imul
and
out
ss
in
stos
xchg
cmpsb
mov
xchg
or
fs
les
add
test
sbb
lock
xor
inc
test
jmp
mov
test
jbe
arpl
cmp
inc
addl
rcrb
mov
adc
pop
push
aad
cmp
js
loop
mov
mov
fcmove
sbb
mov
pop
mov
insl
or
jne
fisubl
adc
or
pop
in
add
push
xor
push
notl
int
push
rcrb
dec
mov
sub
mov
fistps
divb
jns
mov
add
sbb
adc
out
out
and
out
out
add
lds
xchg
mov
mov
enter
out
pop
or
and
out
popa
arpl
mov
test
cmc
xor
cwtl
xor
add
movsl
das
adc
adc
dec
jbe
inc
sahf
cwtl
mov
xor
test
es
in
shr
pop
loop
mov
pop
mov
xor
movb
mov
leave
int3
lahf
repz
lock
mov
pop
or
sub
fstps
adc
mov
rcr
and
xchg
icebp
sub
lahf
xchg
and
insl
or
sub
dec
or
pop
sarb
and
inc
jecxz
and
movsl
test
cmp
mov
dec
and
sbb
fcomps
imul
loop
pop
fsubrl
leave
mov
frstpm(287
dec
orb
cmpsb
das
cmpsb
mull
jae
rorb
push
or
and
dec
mov
sub
aas
and
jo
or
sbb
lcall
enter
or
push
test
outsb
mov
jnp
dec
dec
test
sub
rcrb
or
lock
dec
xchg
pusha
inc
ret
xchg
dec
lret
xchg
xor
mov
out
int3
jl
xchg
sti
divl
fs
sub
xchg
test
mov
test
jmp
andl
mov
outsb
push
shrb
mov
pop
push
inc
adc
cmpsl
add
pop
xor
sti
imulb
fnop
dec
and
push
decl
pop
xor
push
mov
add
fs
xchg
pop
lods
mov
push
popf
mov
sbb
sub
adc
xchg
mov
loopne
addr16
mov
repz
xchg
ffree
xor
rcll
je
roll
data16
mov
ds
xchg
push
sti
roll
sub
push
sub
sbb
fdivrl
sub
adc
sub
nop
cmp
scas
data16
inc
ljmp
adc
jnp
dec
out
inc
pop
jp
and
arpl
scas
fnstcw
nop
pusha
or
pop
dec
or
jnp
pop
push
imulb
pop
adc
rorl
sub
jg
insl
mov
inc
leave
jns
and
das
fdiv
addb
mov
mov
daa
mov
xor
jmp
mov
int3
in
xchg
xchg
mov
xchg
push
arpl
mov
sarb
stc
push
daa
push
jle
xchg
pop
addr16
pop
pop
xchg
inc
bound
movsl
or
mov
sahf
mov
int
loope
movsl
int
push
leave
fbstp
xchg
into
shlb
ljmp
sahf
push
dec
mov
mov
mov
mov
mov
xchg
inc
jne
scas
out
mov
scas
inc
mov
push
xchg
icebp
jge
pop
add
lods
xor
shrb
insl
push
pop
pop
out
andb
movsl
sti
mov
test
clc
dec
dec
add
mov
mov
and
lods
arpl
xchg
icebp
aaa
dec
sbb
dec
pop
sbb
mov
dec
inc
pop
nop
pop
loope
sub
xchg
push
push
outsb
push
pop
js
decl
stc
mov
sbb
jl
mov
aad
cmp
mov
and
shrb
call
adc
ror
fstl
dec
bound
je
test
and
loop
inc
pop
mov
sbb
adc
cmp
pop
inc
ret
jnp
inc
arpl
nop
int
ret
clc
lds
add
xorb
push
or
add
mov
jmp
push
clc
sub
repnz
imul
hlt
mov
imul
outsl
adc
jle
adc
jae
aaa
call
dec
and
test
in
cmp
dec
pop
or
fcmovu
and
mov
rcrl
jno
jne
jbe
xor
pop
loopne
ljmp
out
mov
push
out
out
dec
dec
popf
push
repnz
decl
fsubrl
movsb
cmpsl
xor
clc
loope
or
cmovge
jnp
pop
idivl
ret
mov
mov
fcmovne
dec
xor
int
sub
dec
cmpsl
out
jge
mov
lock
push
pop
sbb
in
imul
mov
into
lcall
sub
jae
fdivrs
or
subl
enter
movsl
push
cmp
add
call
sbb
in
test
mov
clc
fnstenv
jb
std
and
mov
repnz
in
jbe
lret
imul
pop
fldt
movsb
rorl
imul
jp
dec
loopne
mov
cld
xchg
xlat
insl
sub
movsb
xor
sub
sbb
mov
lcall
out
sbb
popa
jl
jno
push
adc
iret
fst
shll
dec
daa
pop
inc
popf
pop
scas
scas
push
cmpsl
ss
ja
int3
sbb
adc
stos
movsl
inc
scas
fnstsw
add
leave
ss
jo
mov
mov
xlat
add
gs
sub
xor
mov
imul
dec
in
push
movsl
hlt
adc
lret
clc
inc
adc
mov
sbb
mov
sub
ret
or
mov
sti
jmp
movsb
jb
xchg
popa
pop
scas
pop
inc
xorl
insb
or
ret
shlb
fldenv
xor
xchg
fstps
bound
sbb
push
mov
fldl
flds
gs
mov
lock
mov
lods
shll
jnp
dec
add
adc
out
and
sub
xchg
movsb
mov
hlt
xchg
cs
and
je
xchg
adc
rcll
pop
jo
pop
movb
jae
fldl
das
jp
jne
add
test
es
push
in
xchg
sub
mov
sbb
test
xor
mov
pop
pop
xor
std
fistpl
push
add
sbb
cmpsb
mov
inc
jnp
sbbl
lcall
adc
sbb
cmp
xchg
mov
roll
jg
es
xor
xor
xor
inc
or
xchg
in
sub
das
jg
ds
popf
and
push
es
popa
arpl
sub
push
aad
fisubl
pop
inc
jae
mov
xsha256
cmpsb
adc
jb
add
pop
push
push
addr16
xor
ss
xor
int3
stc
push
popf
int
mov
mov
loopne
lock
je
pop
cmp
call
mov
fstpl
sub
lcall
sub
jg
fmul
test
pop
sbb
mov
xchg
jb
stos
pushf
mov
out
xchg
cmp
ja
movsb
cmp
loope
mov
addr16
mov
loope
xchg
rcll
popf
xlat
icebp
xchg
dec
js
enter
arpl
inc
mov
shlb
mov
sbb
mov
jg
xchg
hlt
cmpl
push
das
and
lea
pop
inc
cmp
pop
and
dec
call
sbb
sbb
sub
pushf
jno
xor
xchg
mov
pop
loopne
mov
pop
imul
lds
push
scas
stos
test
pop
jmp
fdivrs
add
imul
jno
add
stos
xchg
mov
cmp
shll
jle
test
lea
lret
icebp
inc
data16
test
mov
add
xchg
pop
jae
inc
push
adc
push
dec
jb
adcb
leave
add
addr16
and
shrl
sub
ret
arpl
imul
or
and
add
inc
clc
shl
jp
insb
mov
js
mov
imull
or
nop
aam
addl
and
xlat
cltd
xchg
push
xor
retw
dec
fnstcw
fsubrl
dec
mov
jns
and
mov
pop
scas
into
jg
sbb
mov
jle
push
aad
mov
mov
push
push
mov
inc
popw
mov
add
ss
cmpsb
ljmp
cli
out
ja
adc
xchg
adc
imull
jg
xor
inc
into
es
xchg
and
inc
popa
pop
cmp
fwait
sub
stc
push
jle
push
jge
push
shll
cmp
push
sbb
shr
mov
iret
pushw
or
jae
adc
fnsave
ja
sub
inc
fcoms
bound
mov
insl
cmp
aam
or
aas
sub
call
sub
push
push
cmc
xchg
jnp
mov
ljmp
outsl
or
pop
xchg
xor
cmp
fstpt
mov
into
inc
push
pusha
mov
fisubl
mov
add
movsb
cmp
stos
nop
jb
add
xlat
daa
mov
clc
leave
lock
jne
xchg
push
ds
imul
inc
push
sub
xchg
sub
mov
fistps
pushw
dec
mov
icebp
jnp
fimuls
and
mov
inc
push
jge
jo
mov
xor
dec
icebp
adc
mov
shrw
mov
daa
push
dec
flds
fisubs
xchg
pushf
mov
loop
mov
sti
mov
mov
xor
push
mov
pop
or
jmp
lea
xchg
sbb
fdivrl
outsl
pusha
shl
stos
jb
adc
mov
sar
mov
fdivrs
mov
imul
jmp
or
sbb
pop
test
data16
mov
xor
dec
sbb
stos
sahf
dec
insb
inc
pop
out
push
fistps
jmp
cltd
pusha
dec
push
js
ret
addr16
in
fiadds
pop
subl
push
add
jcxz
test
bound
or
nop
mov
push
inc
xor
add
mov
fiaddl
pushl
stos
jmp
mov
imul
loope
pop
mov
cmc
mov
mov
test
ljmp
cmp
adc
xor
jge
inc
fsubrs
fstpt
cmpsb
mov
ljmp
shlb
sbbb
out
pinsrw
xchg
dec
loopne
dec
push
mov
mov
mov
mov
inc
mov
andb
mov
mov
dec
leave
movsl
sub
cld
inc
test
fwait
cmpsl
dec
and
shrl
push
movsb
jp
out
xor
xor
stos
ficoms
shrl
mov
stos
dec
imul
or
int3
xchg
adc
adc
pop
sbb
int
cmp
testb
rcrb
dec
nop
test
pop
jp
jge,pt
sti
cld
xchg
add
addr16
or
cltd
fwait
in
ljmp
fucomip
int3
ret
outsb
or
roll
test
sub
int
mov
add
and
cmp
mov
das
jo
jbe
jmp
xchg
mov
inc
pop
add
dec
push
mov
je
cli
movsl
cmp
cmp
mov
mov
jae
push
les
sub
mov
jl
sub
movsl
leave
cmpsb
lahf
outsl
insl
cmovbe
inc
mov
xlat
popf
loopne
cmp
pop
ds
lock
dec
xchg
pop
cwtl
push
aas
xchg
fcmovnb
std
lods
mov
xor
stos
push
mov
sub
and
in
cmp
inc
sbb
fisubs
lret
into
jae
xor
out
loopne
subl
xor
mov
adc
jo
lea
enter
xchg
movb
clc
mov
addr16
stos
jmp
push
outsb
xor
xchg
xchg
icebp
out
addr16
insb
filds
adc
adc
push
cltd
mov
scas
mov
jns
sbb
cmp
test
or
cmp
pushf
in
xchg
jne
push
orb
or
and
outsl
adc
cmc
pushf
add
mov
add
mov
mov
add
push
sbb
pop
sbbl
cmp
out
imul
insl
xchg
cmp
xchg
add
or
cmp
inc
mov
sbb
push
pop
and
es
sahf
xchg
jl
cmc
mov
lret
dec
xor
or
fwait
jmp
cmpsb
cmp
push
adcb
lret
cwtl
mov
dec
lea
repz
sti
cmpsb
data16
je
pop
popa
xor
and
outsb
mov
push
iret
fstps
test
jns
shrb
lds
jecxz
adc
push
arpl
rorb
lret
imul
cmp
jecxz
mov
adcl
fdivl
cmc
xor
dec
repnz
int
cmp
push
push
es
or
lcall
dec
mov
inc
mov
or
jmp
pop
lret
loopne
xor
dec
lret
in
sti
fiaddl
loope
fstpt
std
aas
mov
ret
xchg
xor
mov
mov
mov
push
das
jle
lock
mov
or
call
xchg
sti
rcl
sbb
push
or
and
mov
aas
in
xor
push
popa
fdivs
fsts
sub
sbb
dec
cmp
hlt
clc
sub
xor
add
enter
mov
pop
popf
mov
cwtl
int3
dec
cwtl
loopne
gs
push
mov
mov
aas
mov
jb
test
jge
or
ljmp
rep
insb
popa
push
enter
cmp
sub
sub
bound
sub
iret
mov
xchg
test
lock
mulb
jns
mov
sub
mov
mov
or
pop
push
sbb
ljmp
into
add
mov
mov
mov
loopne
inc
or
jae
jmp
xlat
sbb
pop
mov
and
fildll
pusha
les
insl
jge
arpl
and
inc
outsl
shrl
inc
jmp
xor
stc
in
inc
rcrb
push
in
and
mov
xor
inc
xor
mov
xchg
enter
repz
es
imulb
sub
sbb
lret
adc
mov
rcrl
xor
jmp
mov
insb
inc
cmp
sub
add
pop
cld
test
mov
fidivl
nop
lds
scas
push
mov
in
pusha
mov
lcall
push
hlt
xor
rcr
scas
cwtl
sti
imul
fdivrp
add
adc
push
iret
push
dec
push
daa
gs
mov
pop
mov
fidivrs
xchg
lods
test
cmp
cli
in
jle
je
andb
adc
or
enter
pop
cs
fs
gs
mov
adc
out
idivl
cld
xchg
arpl
jo
xor
jae
xor
fcmovnu
add
in
ds
cmp
nop
add
sbb
push
push
ss
xchg
sahf
subb
xchg
mov
jae
shll
cmp
jg
push
fs
adc
pop
scas
cmpsl
cli
cmp
into
xchg
std
push
in
and
bswap
adc
pop
data16
and
mov
pop
enter
adc
movsl
popa
lods
ja
push
mov
sahf
ja
pop
adc
add
mov
add
sbbb
mov
inc
push
js
cmp
iret
mov
adc
mov
and
jp
sbb
ror
cwtl
pop
push
sub
fidivrs
icebp
sahf
dec
das
and
lock
mov
dec
sbb
popa
cltd
jecxz
adc
sub
jle
mov
mov
push
jb
jae
pop
xchg
outsb
dec
or
stos
incb
sbb
jmp
into
or
mulb
lret
sar
aad
jne
push
jg
and
loopne
jg
sahf
outsb
mov
adc
mov
add
and
pop
ror
and
ret
dec
dec
sbb
rclb
aas
icebp
sub
pop
pop
xlat
stos
pop
push
sarb
mov
mov
test
push
ret
js
cmp
in
out
pop
mov
inc
stos
push
cmc
pop
repz
sahf
pop
and
imul
lods
sub
or
mov
test
and
call
fldcw
sbb
movsb
dec
pop
les
js
in
lret
xlat
popa
rolb
ret
adc
xor
sub
sbb
add
stos
mov
and
aaa
fistpll
xchg
push
stos
sbb
jecxz
fidivrs
xchg
cmp
ss
add
dec
dec
loop
jb
adc
hlt
push
in
scas
lcall
arpl
rcrl
enter
rcl
dec
test
xchg
lahf
or
arpl
loope
pop
pop
mov
xor
xchg
push
addb
dec
fdiv
dec
sub
cmp
mov
and
aam
jmp
mov
jne
mov
mov
and
jo
xchg
cmp
push
cmp
lcall
adc
dec
xchg
dec
cmp
insb
push
sbb
mov
ret
popf
jb
cld
mov
or
leave
stos
add
pop
movsl
loop
push
push
jecxz
loop
lods
push
jg
jmp
mov
mov
cli
fdivrl
mov
pop
and
and
pop
jnp
and
jle
xchg
fs
das
imul
shlb
push
repnz
sub
mov
repz
mov
imul
cli
das
jecxz
imul
sti
pushf
mov
out
sub
pushw
scas
mov
push
mov
xchg
add
loope
sbbl
cli
dec
add
addr16
shlb
or
jae
xor
adc
pop
flds
bnd
into
cmc
loope
orl
jo
dec
pop
mov
out
push
out
add
cs
xorb
es
in
push
lahf
mov
popa
inc
adc
pop
call
push
rcll
sub
mov
out
and
loopne
inc
lock
mov
inc
lea
js
and
stos
or
leave
lea
dec
mov
repz
dec
mov
pop
sub
loope
cmpl
or
lds
jge
clc
mov
mov
jo
cmp
mov
xchg
cltd
andb
push
repz
out
sub
insl
xchg
ja
inc
movsb
jge
dec
mov
add
jae
mov
aad
jne
adc
test
mov
lcall
into
or
sub
stos
sbb
add
and
fwait
adc
scas
cmp
jg
mov
stos
hlt
pop
pop
sbb
push
mov
scas
dec
sbb
dec
addr16
xor
and
loopne
xchg
sbb
stos
cmp
dec
subps
xor
adc
aad
mov
hlt
fdivr
stos
sahf
rcrb
dec
movsb
mov
data16
push
adc
jnp
and
testb
jl
popaw
ds
mov
nop
xchg
mov
test
cs
sti
xchg
mov
out
ljmp
dec
or
scas
popf
push
int3
cmpsl
or
push
mov
inc
xor
lods
xchg
scas
jb
push
ja
sub
sub
mov
call
aad
jne
roll
jg
push
xchg
fisttps
dec
mov
cli
mov
stc
pop
push
data16
xchg
add
clc
xlat
scas
pop
mov
pop
dec
roll
mov
imul
fbstp
mov
imull
adc
ja
push
pushf
sar
leave
and
leave
push
andb
add
mov
mov
mov
cmp
mov
adcl
pop
scas
sbb
rclb
xchg
arpl
bound
xchg
pop
or
sub
jmp
sbb
dec
popa
inc
imul
add
add
cli
adc
jg
imul
lret
mov
jbe
and
fiaddl
jo
sub
mov
cmp
xchg
xchg
int
test
sbb
test
in
sbb
mov
outsl
mov
out
inc
xor
sbb
mov
nop
jne
jl
fs
cmc
mov
mov
pop
fsts
js
sub
mov
stos
and
sub
sub
popa
pop
jge
inc
push
pop
fcomps
jae
sub
ret
adc
test
pop
cmpsb
testb
inc
nop
cmp
loope
jo
and
add
pop
xchg
mov
jle
ds
or
cmp
dec
or
aad
jnp
dec
dec
data16
push
sub
out
gs
and
xlat
insb
xor
jae
xorb
stos
push
out
mov
rcrl
add
pop
loope
ret
cmp
popf
sbb
lret
mov
imul
jle
push
fidivl
cmpsl
cld
flds
inc
push
in
imul
adc
int
pop
stos
insl
push
cli
les
push
pop
adc
xlat
sbb
cmc
jp
es
dec
adc
inc
in
jle
sub
out
mov
test
bound
popf
dec
dec
cmc
stc
test
jbe
ror
addr16
notl
int
test
pop
fistl
dec
in
pop
dec
call
outsb
lds
insb
sub
jle
mov
das
insb
aaa
mov
std
lods
imul
and
out
cs
mov
push
cli
xchg
sti
xchg
out
sub
adc
or
push
xchg
dec
mov
insb
in
fsubr
sti
mov
mov
std
nop
hlt
cmp
insl
sub
daa
outsl
dec
std
jge
js
cli
ljmp
icebp
subb
cmp
mov
das
stc
xchg
outsl
mov
mov
cvtpi2ps
cmp
test
and
divl
bound
push
xchg
imul
push
nop
fistps
scas
cmpsb
jb
mov
sbb
pop
dec
sbbl
xchg
das
int3
loopne
fidivrs
pop
jne
dec
or
push
jnp
dec
insb
dec
lds
jl
xchg
cs
jge
xchg
xor
add
push
fwait
cmp
add
jo
dec
sbb
pop
mov
and
cmpsl
jae
aam
mov
rcll
and
mov
les
pop
inc
xchg
push
adc
nop
movsl
aaa
call
push
adc
sbbl
es
cmpsb
pop
or
nop
jne
je
and
pop
dec
xchg
sbb
aad
shr
mov
clc
sbb
add
xor
shlb
aad
aam
bound
mov
stc
xchg
imul
cmp
inc
push
pop
test
loopne
mov
lret
stos
pop
test
enter
ret
cmc
xorb
adcb
sub
mov
hlt
push
cmpb
jbe
shl
aad
andb
repz
mov
rcl
dec
mov
adc
and
jecxz
add
xchg
mov
pop
sbb
cmp
call
mov
daa
and
mov
cld
mov
jae
dec
popf
je
sarb
cmovae
mov
jne
dec
cwtl
mov
jb
mov
dec
stc
jns
dec
pop
frstor
xchg
aam
adc
into
jne
jge
jle
test
stos
lds
lods
clc
out
add
and
stos
cld
pop
imull
pop
push
mov
stos
mov
fnstsw
xchg
xchg
mov
daa
stc
mov
repnz
push
fidivrl
jne
and
cmpsb
or
cli
jle
cmp
movsl
nop
ss
mov
cmp
loop
xchg
clc
or
xchg
inc
mov
xor
out
ja
imul
je
dec
and
loope
xor
cmp
push
ljmp
xchg
and
mov
cs
mov
pop
pusha
mov
lock
cmpsl
stos
movsl
jle
aas
idiv
fstp
clc
xchg
test
or
xor
in
xor
mov
push
rorl
cmp
push
out
add
enter
jp
push
mov
sbb
xor
fcoms
test
inc
mov
mov
mov
iret
insl
cmp
nop
jl
nop
mov
inc
cli
mov
adc
icebp
cs
jp
fs
popf
pop
push
imul
push
cld
or
cmpxchg
leave
not
mov
jns
icebp
push
movl
bound
push
dec
fistpl
bound
scas
dec
push
jne
stc
lock
loop
or
sub
jne
sub
lret
jle
call
inc
scas
lods
ror
das
and
pop
fistl
jno
rcr
or
cmp
dec
jle
inc
mov
ljmp
or
std
xchg
and
cs
sbb
xchg
js
mov
aam
xchg
sti
push
mov
lcall
jecxz
sbb
shl
dec
push
sbb
sbb
and
cld
or
add
int3
cmpsl
ja
loope
fnstcw
inc
out
movsl
adc
and
add
nop
dec
cmc
xor
push
arpl
repz
xor
adc
int3
fisttps
lds
pop
test
mov
nop
pop
fsubp
roll
ds
lret
ret
push
push
insl
sub
out
xchg
pop
sbb
lcall
or
inc
mov
mov
loopne
jmp
into
dec
ret
enter
sub
imul
in
jb
ljmp
jbe
dec
ss
int3
stos
cli
pusha
in
adc
pusha
or
je
mov
xor
push
outsb
ja
jge
repz
pop
ret
push
jbe
inc
or
or
rorb
cmp
dec
dec
sbb
inc
jp
sbb
mov
push
divl
in
dec
push
jle
push
dec
sbb
push
pusha
scas
inc
lods
into
mov
pushf
lea
xchg
push
xor
jae
adc
mov
leave
xchg
mov
icebp
xor
mov
mov
mov
cmp
mov
sub
dec
xchg
mov
push
insl
pop
mov
scas
ss
out
pusha
rol
sbb
imul
add
lcall
pop
jo
outsb
mov
and
adc
je
inc
in
daa
test
lahf
in
sarl
imull
outsb
repnz
cmp
adc
sbb
cwtl
scas
test
jle
push
xchg
mov
sbbl
jg
jecxz
call
sti
imul
xchg
cltd
mov
movsb
push
notl
mov
and
cli
jmp
cli
int
sbb
xor
or
or
mov
stc
out
push
mov
xchg
cmpl
loop
mov
mov
test
or
out
loopne
out
lods
mov
mov
jp
or
popl
incl
lahf
insb
in
jnp
adc
and
das
push
inc
dec
adc
inc
sbb
add
or
das
mov
adc
movsb
inc
andb
xchg
scas
faddl
xchg
push
pop
pand
nop
in
cmp
fwait
pop
jl
adc
xchg
scas
jns
stc
rcr
adc
lds
dec
jae
add
jae
lcall
and
push
jns
push
cli
ljmp
adc
daa
sub
push
adc
cli
mov
outsl
jns
and
and
pop
dec
mov
lahf
pop
lods
pop
scas
inc
mov
add
fstps
fs
mov
inc
arpl
and
jecxz
js
loop
in
bound
into
jae
nop
push
ja
push
popa
loop
jbe
mov
movsl
out
jecxz
xchg
arpl
push
sub
xchg
and
xor
repnz
pop
rcr
and
repz
push
insb
call
lahf
xchg
inc
mov
or
sbb
push
xor
lock
mov
mov
mov
shll
mov
jnp
shlb
clc
xchg
mov
inc
lods
outsl
fdivrl
aad
xchg
ja
inc
sub
sbb
add
sub
sarl
mov
adc
pop
mov
cmp
fisubl
push
test
rcl
xor
add
mov
mov
je
aad
out
sar
mov
pop
lods
mov
or
xchg
and
mov
xor
inc
xchg
mov
lds
xchg
lods
sbb
dec
add
xor
aad
mov
inc
jl
addr16
pop
std
push
mov
aad
or
xchg
xor
insb
mov
mov
std
mov
lcall
arpl
cmpsl
test
insl
insb
mov
lcall
jns
std
jno
leave
mov
call
outsb
dec
bnd
add
es
inc
movsl
adc
insl
hlt
in
push
mov
push
subl
repz
scas
ds
shr
cmp
bound
cld
xor
call
out
add
inc
data16
pop
shll
jmp
leave
lock
sub
dec
push
pop
lods
add
sbb
iret
jle
push
jle
xor
outsl
aas
call
dec
divl
int3
push
jne
int3
sub
mov
xchg
cmpsb
inc
pop
and
out
mov
push
andps
pop
jle
dec
add
mov
aas
cmp
or
push
int3
xchg
jb
scas
jp
pop
sbb
mov
xchg
sub
adc
or
ficoms
cmc
adc
sahf
cmc
jns
arpl
fwait
pop
mov
push
or
xor
sbb
lds
hlt
xor
xchg
shr
push
stos
push
lret
xor
addr16
mov
or
or
pop
imul
add
aas
es
inc
inc
int
push
xchg
lock
sub
jb
mov
stos
aas
mov
add
fbstp
cld
test
stos
sti
lods
ss
inc
lock
loope
pop
fucomi
jb
or
dec
data16
jns
mov
out
clc
xchg
xor
xor
lods
sbb
popf
aam
stc
and
push
pop
lods
inc
jg
fistpll
mov
mov
shl
scas
shl
dec
ja
xor
cmp
xor
lcall
sub
into
xor
dec
cmc
push
movsl
clc
mov
mov
rcll
mov
aaa
movsl
sti
sbb
shrl
stc
sbb
push
cld
sub
pop
les
popa
and
popf
ja
mov
ret
mov
scas
xlat
int3
fs
inc
xor
pop
test
fidivrl
mov
mov
in
sub
inc
outsl
inc
push
or
pop
ffreep
sub
shr
mov
jne
out
mov
sar
jp
int3
mov
shll
aam
out
ljmp
cmc
std
insl
lods
push
ss
movsb
and
je
ret
aam
cmp
test
imul
xchg
push
shl
xor
dec
sbb
jno
loopne
in
xor
mov
ret
jb
cmp
pop
cltd
fldt
imul
int3
lret
push
hlt
fwait
mov
cmc
mov
xor
jbe
or
or
stc
test
mov
inc
rclb
mov
jno
adc
nop
sti
scas
test
lock
cltd
sub
xor
enter
push
loop
push
mov
enter
mov
jecxz
lods
inc
and
lcall
xlat
or
lods
sub
adc
ds
dec
clc
mov
in
cmp
adc
mov
inc
imul
mov
in
mov
pop
add
int3
cmp
pushf
cmc
push
add
aad
xchg
xchg
ret
jnp,pn
jecxz
add
lock
fimuls
cmp
sub
push
lcall
aad
dec
aam
mov
jo
icebp
data16
loope
sbb
mov
inc
outsl
jmp
ficompl
cmpsb
mov
lds
and
push
pop
mov
xchg
sahf
jg
ss
pusha
imul
bound
sbb
and
lret
jg
cmp
mov
jp
mov
rcl
jg
mov
out
ljmp
or
cmp
stc
je
and
fistps
jae
les
and
notb
into
pop
enter
mov
mov
lea
jl
fwait
jns
xor
lock
into
mov
ret
sub
cmp
notb
jle
mov
mov
hlt
pop
and
sbb
cmpsb
cmpsl
xlat
jns
mov
push
mov
int3
dec
xor
lret
shrl
xchg
pop
popa
in
mov
les
sbbl
xorl
adc
inc
push
sbbl
test
lret
std
out
es
cmp
fcmovnu
int
fisttpll
testb
subb
lea
call
mov
sahf
pop
ds
gs
sub
sbb
daa
inc
outsb
insl
xchg
add
inc
stos
arpl
or
and
push
pop
cmp
lods
pop
das
fistl
mov
xor
jns
stos
stos
and
inc
adc
pop
push
insl
xlat
sahf
mov
cld
ds
stos
aaa
data16
add
cmpsl
inc
sub
cmp
int
addr16
fcomp
mov
pop
xor
xchg
sub
shl
ja
das
inc
shl
pop
jp
imul
cmp
leave
xor
test
cmpsb
fmuls
xor
or
dec
cmp
adc
shrl
pusha
and
mov
push
lcall
das
mov
fs
fwait
loope
fbstp
icebp
insl
dec
push
or
std
pmullw
inc
std
mov
cmpsl
jmp
sub
pop
testb
sahf
push
iret
push
call
xor
pusha
scas
sub
jg
xor
inc
xlat
mov
mov
or
roll
sub
mov
xchg
aas
jbe
loope
xchg
dec
push
cmpb
js
pop
nop
inc
jge
mov
mov
mov
mov
fmulp
xor
les
cmp
mov
mov
neg
cltd
mov
in
or
xchg
inc
cmp
mov
jmp
inc
push
pop
or
adc
jno
daa
sub
test
mov
dec
xchg
jns
mov
rcll
mov
pop
ror
mov
add
sbb
jb
fs
mov
loopne
push
pop
sti
mov
adc
add
xor
push
dec
adcb
inc
pop
ss
out
mov
leave
lahf
adc
mov
jmp
pop
pop
jle
xor
xchg
push
clc
jp
push
xor
add
mov
mov
pushf
push
call
mov
pop
mov
jmp
popf
and
push
push
lods
sbbb
pop
push
lods
or
mov
push
jmp
bnd
pop
mov
mov
and
int
pop
or
fdivrs
stc
movsl
jae
push
fistl
inc
cmp
insb
cmp
or
cmp
mov
pop
xor
inc
mov
xor
test
outsb
pop
bnd
cmp
dec
inc
data16
dec
ja
int3
shll
sub
sbb
test
and
xlat
lahf
sahf
les
xchg
clc
adc
push
movsl
or
lds
test
ss
adc
xchg
call
repnz
ljmp
jno
test
push
stos
lret
imul
stc
cmp
scas
or
cld
sbb
mov
aam
mov
clc
dec
mov
repz
push
inc
ret
shll
leave
sub
or
arpl
hlt
mov
insl
sub
popa
data16
inc
sbb
outsl
jb
fs
jg
jo
adc
ljmp
imul
aad
inc
add
lods
mov
mov
push
mov
xor
roll
cli
jmp
test
fdivp
movsb
xchg
sbb
imulb
mov
fsubrs
xchg
sbb
mov
add
sahf
mov
lea
inc
aas
lret
mov
push
fdivrl
call
dec
enter
repnz
inc
gs
inc
jnp
xor
cwtl
or
pop
jmp
jg
jbe
inc
lds
cli
arpl
jne
ja
rol
add
adc
jg
mov
sbb
add
jb
fstpl
and
js
notb
clc
mov
cld
mov
mov
inc
ds
sbb
sub
cmp
pop
jno
mov
or
cmp
mov
jbe
sti
push
inc
icebp
mov
pushf
dec
mov
jmp
subb
push
push
mov
mov
loope
jg
dec
jbe
add
lods
arpl
sub
jp
out
dec
outsl
inc
push
outsl
sub
jle
mov
mov
in
adc
nop
sub
out
pop
and
dec
gs
sub
sub
test
lcall
icebp
roll
repz
push
outsb
mov
pop
aaa
jae
inc
mov
pop
hlt
sub
inc
mov
repz
cmp
jae
dec
test
push
lods
or
iret
rcl
adc
fndisi(8087
jl,pt
loope
pop
jae
add
jbe
push
loopne
aad
or
cltd
shll
scas
pop
cmp
sub
out
mov
and
ljmp
xchg
or
jg
push
dec
cmp
or
push
add
and
cwtl
push
fstps
xor
xchg
repnz
mov
mov
mov
jmp
mov
sub
xlat
loopne
xlat
aam
aaa
push
xor
cmp
mov
fisubs
lea
add
jae
inc
es
lret
dec
or
sbbl
mov
and
dec
mov
lods
jge
bound
pop
scas
pushf
sub
fbstp
adc
mov
push
dec
dec
add
ja
xchg
lds
fildl
cmp
xor
pop
lea
mov
scas
test
outsb
or
int
inc
dec
push
cmc
loopne
jne
xchg
stos
insl
inc
aas
jns
sbb
xchg
push
xchg
mov
xchg
stc
idivl
shrl
lahf
xorl
jb
dec
push
lea
aam
lcall
sbb
mov
push
pop
int
call
hlt
data16
mov
repnz
xchg
movsl
inc
cmp
sub
das
push
stos
pop
in
sub
or
mov
out
and
sahf
mov
inc
mov
ret
sbb
call
and
lea
jmp
icebp
cmp
sub
cmp
bound
mov
add
repnz
push
std
push
or
in
in
lds
jnp
js
pushf
divl
sbb
sti
sti
insb
jp
lahf
mov
sbb
or
mov
push
ret
ret
dec
movsb
imul
mov
add
sub
inc
fmul
mov
stos
xchg
lea
xor
icebp
inc
in
pusha
fsub
xchg
mov
subb
test
repz
loopne
adc
cld
mov
rcrl
xor
testl
mov
das
jge
inc
cs
cmpsb
aaa
xchg
movsl
pushl
in
xor
addr16
xor
jns
test
push
test
mov
je
lcall
mov
mov
or
sub
and
mov
jne,pt
sub
mov
inc
and
call
jnp
std
xchg
mov
mov
or
jb
lahf
stc
push
popa
sbb
ds
leave
sub
jg
leave
out
jbe
test
out
adc
adc
xor
mov
stos
scas
enter
sbb
adc
and
lahf
inc
hlt
push
andb
pop
pusha
mov
in
mov
inc
aad
icebp
push
sahf
jl
dec
jno
mov
mov
xor
jb
std
or
fwait
mov
adc
test
xor
mov
stos
lahf
mov
in
xchg
push
cmpsl
fisttpl
and
push
jns
and
xor
rclb
fcomi
loop
lock
loop
iret
rcll
je
loop
out
jb
ret
pop
sbb
and
xorb
outsb
mov
hlt
out
lahf
mov
and
movsw
pop
in
fwait
adc
mul
loop
icebp
std
out
mov
movsb
xchg
nop
add
notl
xchg
mov
aaa
dec
sarb
and
push
sbb
or
sbb
jb
enter
add
icebp
and
push
mov
gs
cli
xor
stos
repnz
test
lret
and
enter
out
mov
fimull
mov
clc
je
into
daa
mov
outsb
loop
pushf
inc
mov
inc
mov
sbb
cltd
mov
cmp
inc
stc
ds
and
stos
sbb
mov
out
iret
inc
pop
popf
push
inc
mov
bound
adc
cld
mov
push
xor
ss
lds
bound
mov
jno
jo
leave
div
clc
pusha
mov
xchg
add
loopne
push
daa
add
out
xchg
pop
in
cmpsl
movsb
mov
call
fsubl
push
clc
sbb
mov
movsb
je
mov
leave
mov
push
jae
inc
xchg
push
int
mov
popf
mov
sahf
cmp
mov
fmuls
out
test
mov
mov
mov
sub
in
sub
or
stc
and
int
inc
pop
clc
jb
mov
hlt
mov
insb
jns
mov
pop
pop
sbb
insb
testl
dec
jl
dec
sbb
mul
dec
rorl
shrl
dec
sub
fstl
lea
dec
sbb
mov
dec
pop
jo
cltd
inc
add
pop
cmp
jp
cmp
ds
push
or
lret
mov
mov
fwait
adcl
fldt
inc
mov
shlb
jmp
mov
mov
lods
cmp
clc
sbb
push
xchg
jb
mov
pop
dec
xor
fsincos
xor
mov
int3
js
std
outsl
dec
fcoms
sbb
sbb
sub
fdivrl
mov
out
into
aaa
sarb
pop
xor
mov
fldcw
xor
adc
push
push
xchg
push
mov
jp
or
cmp
and
sub
fstpt
mov
scas
test
js
call
repz
int
jb,pn
or
ja
lret
cmp
inc
aad
movsb
lret
cmp
ja
and
ret
mov
shr
imul
testl
je
bound
out
mov
daa
stos
in
scas
js
mov
and
js
lcall
sub
sbb
cli
pop
loopne
repz
mov
mov
psubq
test
arpl
add
adc
movsl
rorb
sbb
fists
hlt
fidivs
sbb
iret
push
lcall
loope
test
mov
push
adc
outsb
icebp
xchg
test
sub
test
ror
pop
add
and
and
cli
dec
lock
push
inc
adc
aas
sbb
jecxz
testl
mov
xchg
loope
out
stos
mov
cmp
fsubr
add
xchg
xor
and
lret
xchg
cld
das
add
dec
arpl
mov
rolb
setno
stos
mov
mov
push
xchg
loop
push
leave
divl
mov
pop
fsubrs
mov
sub
mov
bound
ret
or
pop
dec
fdivr
or
icebp
jbe
and
ret
incl
icebp
push
movsl
cs
es
out
outsb
lds
les
push
xlat
or
sbb
stc
and
adc
cmp
dec
call
rcrb
das
testb
data16
test
sbb
daa
pop
mov
and
xchg
out
jne
out
int
adc
addb
mov
sub
jl
mov
stos
fstpt
into
and
repz
jp
sti
repnz
insb
out
outsb
or
movsb
repz
pop
imulb
clc
nop
insb
pop
stos
sbb
fld
lret
xchg
mov
sbb
lods
push
fs
bound
and
fwait
lds
movsb
and
jg
ds
or
jl
lods
pop
mov
mov
cmp
lea
jo
inc
mov
mov
sbb
push
sub
inc
sahf
pushf
insl
jb
sub
scas
push
outsl
mov
and
aas
xor
leave
scas
and
ret
rcrb
inc
xchg
mov
adc
es
jge
ss
mov
cmp
add
int3
mov
mov
jns
pop
outsb
pop
fs
fstl
sub
fcmovnbe
dec
sub
cs
dec
and
push
mov
repz
adc
pusha
mov
lods
aad
push
ds
or
sub
in
and
add
stos
and
pop
psubb
lods
mov
adc
xchg
cmp
insl
mov
mov
lods
pop
add
ja
repz
ret
cmp
out
lods
popa
jo
push
imul
out
clc
adc
call
loopne
mov
js
lret
lods
in
mov
dec
lods
cmp
jne
aas
je
or
cltd
cmp
repnz
push
jb
xor
mov
push
add
je
mov
jp
mov
std
xor
sub
scas
mov
psubsb
sbb
divl
and
data16
or
mov
in
push
adc
rolb
imull
dec
sbb
cmpsl
lds
js
adc
jecxz
dec
adc
daa
add
lds
repnz
enter
int3
mov
int
mov
or
cmp
cmc
jns
mov
sub
adc
in
jmp
imul
inc
add
out
es
bnd
loope
mov
das
fimull
dec
movaps
dec
mov
pop
sbb
jge
xor
sbb
icebp
push
cmpsl
ret
iret
loopne
mov
jb
cltd
cmp
mov
mov
jae
add
push
subl
cmp
mov
push
flds
int
ret
out
push
je
call
inc
inc
pop
mov
jnp
popf
jmp
xor
xchg
push
pop
in
mov
pop
sahf
mov
fcmovne
sub
pop
xchg
pop
mov
or
inc
cmp
or
faddl
mov
pop
gs
inc
in
das
insl
or
add
aas
push
push
mov
add
sub
dec
jb
es
stos
out
lahf
js
fucomp
xor
push
xchg
dec
idivl
dec
sub
in
jb
sub
sub
es
pop
ror
xor
or
je
mov
into
rolb
xlat
inc
iret
test
ret
dec
mov
and
jg
inc
sub
inc
sti
xchg
ffreep
andl
fwait
data16
push
ja
outsl
mov
rcr
mov
call
scas
lods
lods
xchg
xor
addr16
je
inc
jo
out
xor
xor
fsubs
or
ret
and
loopne
jns
push
sbb
fbstp
jnp
pushf
nop
addr16
test
adc
mov
cmp
aaa
inc
cmp
inc
sub
dec
das
adc
ja
clc
or
movsb
fisttpl
mov
xchg
cs
das
les
xchg
pop
push
sub
mov
mov
insb
fwait
push
flds
dec
call
test
roll
adc
sbb
adc
sbb
pop
mov
add
xor
inc
daa
in
push
inc
imul
mov
push
ljmp
adc
pop
ljmp
jmp
cmpsl
in
and
adc
inc
dec
sbb
lds
dec
pusha
push
mov
packuswb
mov
int3
sub
outsb
scas
dec
or
lahf
ficoms
mov
mov
add
dec
xchg
push
inc
shr
paddsw
std
in
xor
jmp
clc
stos
inc
push
adc
cli
cmp
pop
xchg
popa
sbb
add
pop
push
aam
sbb
pop
cmp
nop
adc
f2xm1
xchg
add
jle
ror
movsl
mov
in
adc
sbb
outsb
mov
ficompl
sbb
xchg
in
push
cmc
int3
shrl
and
xchg
jge
sbb
sbb
xor
ds
mov
or
sub
mov
cmpsl
sbb
int3
xchg
scas
sub
xor
push
dec
pop
cmp
lret
mov
sbb
inc
leave
out
jnp
int
or
mov
pop
jmp
bound
jns
loop
scas
ja
cmp
leave
and
jl
scas
enter
mov
and
popa
outsb
cli
std
pop
ja
ss
lds
test
nop
lea
cs
jmp
imulb
adc
xchg
mov
rcr
jo
push
pop
rcr
shlb
js
xor
mov
mov
js
mov
xchg
cmp
and
push
and
sbb
mov
xchg
sbb
pop
jo
out
push
invd
sbb
dec
enter
dec
mov
sbb
sbb
lock
xchg
dec
pushf
je
pop
loop
adc
xchg
pop
push
or
ss
inc
outsl
xor
jo
call
lahf
cmp
xchg
xor
dec
daa
mov
jae
sub
mov
shlb
outsl
fldt
sbb
test
test
fbld
fsubr
add
aas
mov
pop
aad
ljmp
jno
xchg
sti
jmp
sub
cmp
push
aam
cmp
mov
test
pop
movsl
mov
mov
jo
cwtl
xor
pop
sbb
ret
sub
inc
xchg
xor
cmp
lret
sbb
int3
sub
pop
lods
in
mov
mov
cs
daa
gs
xorb
cli
sbb
shlb
into
jnp
cs
shrl
adc
cmp
pop
out
mov
mov
inc
sahf
dec
pop
faddl
xchg
cld
push
xchg
xchg
push
lcall
and
mov
fstpl
rcrl
movsl
xchg
in
xor
arpl
xchg
xorl
push
dec
mov
push
xchg
xchg
push
add
pop
adc
xchg
jns
sahf
adc
inc
xorl
sub
iret
imul
xchg
inc
movsb
dec
mov
js
lea
mov
xchg
jmp
pop
shlb
push
cmp
into
dec
mov
shll
sbb
pop
in
popa
aad
mov
push
dec
inc
sbb
js
cmpsl
xorl
or
adc
dec
in
mov
call
cmc
push
icebp
aaa
xchg
scas
orb
fcomp
jno
push
into
jne
test
mov
pop
adc
sbb
ljmp
jecxz
rcrl
loop
sbb
ljmp
sub
or
scas
xchg
into
xor
pop
mov
cli
sbb
frstor
insb
and
push
mov
adc
pop
xor
test
imul
outsb
rcrl
sbbb
and
dec
fnsave
stc
mov
test
ret
xchg
cmp
pop
lret
xor
iret
or
cmpsl
xchg
negb
push
lds
addr16
imul
in
push
pop
data16
mov
mov
inc
incl
pop
jp
push
pop
adc
sbb
negb
jg
and
pop
mov
js
ficoml
aaa
lahf
inc
jg
ss
push
mov
fbld
adcl
int3
inc
fs
add
adc
pop
sbb
inc
js
add
lahf
fsubs
test
cmp
loopne
lcall
sub
mov
cmc
cmc
aaa
sub
inc
movsl
notl
outsb
js
add
popf
imul
repnz
dec
sub
ds
cmp
fs
mov
and
mov
inc
mov
test
jle
add
sar
mov
xchg
fwait
cmpsl
or
cwtl
lret
hlt
and
mov
jns
push
and
mov
push
lods
mov
rcr
cmp
fdiv
je
test
pop
xchg
inc
in
xor
stos
jns
push
ss
adc
mov
pop
sbb
dec
or
mov
sub
inc
push
jb
xchg
scas
inc
pushf
xor
subl
sub
stc
xor
xor
push
addr16
mov
scas
cwtl
repz
pop
xchg
pop
mov
rolb
pushf
fstpt
repz
and
hlt
sar
jl
les
cli
sub
popf
sbb
sbb
push
adc
enter
mov
or
prefetchnta
in
mov
sub
mov
mov
jp
sub
cmpsb
in
push
and
dec
inc
lret
filds
cmp
loopne
aaa
fdivs
aas
ljmp
in
dec
jns
test
jecxz
or
jg
lahf
mov
mov
xor
movsl
cmp
sahf
xor
jne
and
data16
int3
push
pop
adc
shl
xlat
mov
mov
int
xor
push
dec
dec
adc
in
push
mov
inc
sti
fwait
ja
dec
int3
lret
xor
icebp
jbe
leave
adc
int3
jno
jae
sbb
enter
addr16
xlat
mov
and
inc
movsb
sbb
mov
ljmp
sbb
add
mov
add
mov
add
mov
mov
fstl
push
enter
jg
out
test
test
jp
mov
add
xchg
cmp
out
push
mov
lcall
sub
negl
push
jl
jbe
test
rcll
and
out
cwtl
sub
pop
inc
ret
push
mov
dec
pushf
je
data16
out
cmp
ret
push
xor
jae
insb
push
push
stos
jl
jae
xor
insl
ss
iret
jbe
inc
in
scas
sbb
aam
fwait
jbe
call
insl
pusha
lock
fsub
lahf
or
or
or
std
and
cmp
test
push
mov
pop
xchg
pop
mov
mov
outsl
jge
jmp
bswap
sub
push
outsb
mov
adc
scas
push
pusha
adc
pop
xchg
pop
sub
enter
popa
push
scas
and
imul
xor
mov
out
inc
xor
jnp
jge
lods
ljmp
cmp
pop
inc
or
push
xchg
xor
mov
dec
test
xlat
add
test
jo,pt
sub
jno
xchg
mov
sbb
out
icebp
jnp
inc
xchg
jns
fnsave
mov
and
and
sub
mov
cmpsl
addr16
cmp
sbb
fwait
sub
ds
xchg
xor
mov
lret
js
jno
dec
ja
imul
subb
fisubs
dec
push
and
mov
rclb
dec
xchg
out
aaa
jp
pavgw
fs
xor
loop
outsl
push
stc
lahf
in
cmp
jno
fdivl
movsb
xchg
inc
mov
sub
xor
inc
or
cli
inc
mov
and
dec
inc
mov
add
out
add
jmp
nop
fmull
cli
mov
mov
lret
mov
test
call
pop
fxch
jle
push
cmpsl
push
mov
cmp
pop
shr
and
sub
mov
cmc
and
gs
jp
cld
mov
xor
cmp
jae
mov
sbb
xchg
adc
cmc
jmp
jl
jb
test
test
dec
xchg
movsb
and
outsb
xchg
fiadds
jp
add
inc
and
jo
bound
dec
sti
jb
int3
pop
mov
faddl
dec
jbe
xchg
add
adc
clc
int
or
xchg
loope
sub
jp
lcall
in
pop
inc
in
lds
test
inc
fimuls
call
dec
pop
mov
in
or
out
imul
ss
dec
jbe
xor
mov
adc
lds
movsl
or
xor
out
sub
push
sub
stos
sahf
and
sti
mov
fidivl
adc
mov
cmp
shrd
int3
jns
lret
inc
mov
xorl
fcmovb
jbe
cld
popa
or
aad
loopne
xor
shld
mov
faddl
fsubl
mov
dec
xchg
push
jle
cli
iret
dec
jb
adc
xchg
push
stos
cmp
popf
jmp
addl
push
dec
cmp
jo
sahf
or
pop
pop
repnz
sbb
sub
out
lret
adc
test
xor
or
mov
inc
fstpt
sti
pop
cmp
add
mov
dec
negl
shr
out
xchg
xchg
das
jmp
mov
addr16
push
mov
bound
sbb
jb
xor
sarl
in
cmpsl
je
pop
jle
push
sub
or
adc
jecxz
xor
mov
sbb
jnp
mov
repnz
xchg
xchg
cmp
sub
sbb
pop
mov
push
rcrl
xor
adc
pop
pusha
loope
pop
mov
push
adc
cmp
aam
ret
stos
cmp
pop
repnz
sub
xor
repnz
sbb
xchg
xor
push
test
data16
adc
cmp
cwtl
sbb
loop
xchg
xor
loope
add
fxch
cmp
adc
inc
sub
rcll
push
cltd
add
jmp
sub
cli
push
out
jle
pusha
push
push
pop
inc
mov
inc
adc
cmpsb
cli
aam
jne
mov
fs
aas
xor
jbe
in
out
sub
in
out
and
je
and
adc
mul
iret
xlat
sbb
bound
sbb
and
out
pop
stos
inc
scas
push
sbbb
push
jne
mov
xchg
test
shrb
out
pop
bound
bound
add
jno
fistps
loopne
ss
dec
inc
fidivrl
int3
xchg
dec
nop
add
mov
or
out
jecxz
shlb
sarl
pop
hlt
mov
jle
mov
shrb
jmp
push
sbb
dec
dec
inc
mov
push
mov
rorl
mov
mov
lods
divl
ss
sti
jl
mov
jp
pushf
sub
add
jbe
push
pop
pop
out
aam
pop
jb
sbb
mov
mov
test
lods
add
in
dec
inc
add
movsl
inc
aas
adc
add
push
dec
or
stos
outsl
mov
xchg
psraw
cmp
sub
jnp
imulb
je
loope
aam
daa
bts
push
sub
add
inc
cmp
loop
dec
and
mov
in
add
sbb
cmpsb
push
ja
xor
loop
cltd
xor
xchg
stc
jp
jle
fucomi
loop
and
xchg
rorb
outsb
jg
loopne
lods
pop
inc
iret
ss
sbbl
cmc
stc
das
cld
push
add
out
fmull
jns
outsl
fcoms
mov
scas
ficompl
mov
mov
daa
lods
movsb
and
fwait
cmp
mov
cmp
cmp
stos
adc
popa
cmp
pop
pop
ret
pop
mov
ljmp
fiaddl
rclb
sahf
push
push
adc
cmp
pop
pop
xor
add
ljmp
xlat
cmp
sub
mov
mov
adc
adc
mov
or
int3
decl
dec
jmp
imul
sti
xchg
mov
push
in
test
or
outsb
lods
in
jle
gs
shrl
in
pop
add
cltd
insl
mov
das
loope
ss
add
jbe
jae
jge
dec
xchg
neg
int3
insb
mov
xor
sub
mov
sbb
pop
push
or
lods
mov
lea
mov
les
push
dec
repz
mov
out
pushf
stos
cmpsl
stc
add
push
adc
loopne
sub
ljmp
cli
xchg
jb
testb
das
xchg
lods
push
ret
xlat
adc
rcl
pop
cltd
fidivrl
mov
pop
movl
dec
cmp
idivb
mov
cmpsb
push
lret
pop
sar
dec
pushf
insb
push
stos
ljmp
aaa
test
fs
nop
clc
push
cld
xchg
jno
in
test
cmp
imul
jne
jp
adc
sub
mov
or
stos
push
nop
xor
fstpl
push
inc
loope
cmpsb
pusha
cltd
sub
jnp
mov
xor
xor
negb
jns
aam
cmp
scas
or
pop
lahf
sub
sbbl
cltd
lahf
dec
daa
mov
push
or
sub
cltd
cmpsb
push
mov
mul
test
jmp
outsl
in
ds
or
call
dec
rorb
cmp
jno
in
push
mov
pmulhw
or
ret
sub
sub
imul
xchg
lea
sti
daa
mov
je
mov
popf
push
and
xchg
inc
and
sub
nop
fcompl
test
push
jp
js
in
ja
loop
into
xchg
sbb
aaa
mov
mov
push
xor
push
movhps
fildl
xor
movsl
cmp
pop
cmp
xor
aam
mov
xchg
jge
adc
lret
xchg
je
pop
je
add
adc
cwtl
rcr
push
mov
and
xor
push
adc
insl
inc
out
sbb
test
fistpll
dec
repz
or
jle
fs
das
sbb
loopne
lret
out
sbb
push
inc
mov
pop
sub
dec
mov
test
test
push
fnstenv
movsl
dec
int3
mov
ds
pop
shlb
or
and
cmp
lcall
inc
sub
in
sahf
pop
push
repnz
xor
push
aaa
cmp
pop
and
dec
pop
clc
insb
test
sbb
sahf
sub
out
mov
mov
daa
mov
jo
push
faddl
mov
pop
push
stc
movsl
iret
ret
jnp
cmpsb
mov
cmpsb
and
repnz
in
dec
fistpl
cli
jmp
jl
xchg
ljmp
repnz
test
jle
xor
insb
sub
orb
call
js
daa
mov
lods
imull
fcoml
mov
scas
mov
mov
mov
sub
fcoms
data16
int
lock
xor
pushf
mov
bound
cli
cmp
pop
test
xor
bsf
push
jb
jnp
mov
push
pop
sti
lock
pop
lahf
xchg
push
dec
sbb
insb
or
mov
popa
push
pop
int3
imull
mov
and
pop
fldenv
xor
mov
adc
stos
cmp
xor
push
lods
cmpsl
ds
movsb
sub
movsb
sahf
lods
icebp
and
jle
in
jne
push
stos
push
arpl
pop
mov
or
lods
stos
and
mov
lret
sar
fstpl
bound
jecxz
insb
inc
aam
pop
push
xor
stos
sbb
loopne
pop
dec
and
sub
xchg
push
mov
leave
mov
sbb
push
call
push
ljmp
sub
adc
repnz
dec
inc
and
fwait
movl
inc
shlb
xchg
lcall
repz
jns
pop
sub
push
or
cld
or
inc
pushf
les
and
mov
jmp
out
test
test
jne
mov
xchg
and
adcl
sbb
std
cmp
adcl
iret
inc
dec
push
xchg
push
notb
and
jns
cmpsl
cmpb
cmp
add
sub
push
iret
scas
xor
jl
push
insl
cmp
lcall
xor
cmp
pop
mov
call
inc
lcall
aam
movsl
sub
pop
cmp
lcall
mov
int3
in
loop
and
nop
and
icebp
pop
movsl
imul
mulb
adc
test
xor
rclb
pop
add
mov
fs
mov
scas
jge
ss
stos
xor
pop
xchg
in
fdivr
pop
push
sbb
ja
cmc
adc
cs
lea
push
inc
jo
push
int3
xchg
scas
inc
dec
mov
loop
sub
mov
in
jbe
mov
lsl
add
or
stos
dec
aam
imul
and
xchg
xor
sub
pop
idivb
mov
sbb
dec
push
push
dec
ja
pop
stos
fiadds
inc
pop
cs
mov
push
pop
das
lea
jl
int3
enter
push
or
inc
xchg
jno
mov
mov
inc
lahf
arpl
push
insb
or
sbb
or
addr16
mov
or
fs
push
sbb
inc
mov
push
dec
test
mov
sub
cmp
sbb
and
mov
sahf
inc
or
mov
mov
test
rcrb
ljmp
jne
ja
inc
stos
cltd
cmp
jmp
out
push
mov
cmpsb
iret
and
sub
or
pop
push
repz
fidivl
mov
cmp
pop
inc
mov
sub
cmp
ljmp
jp
negb
or
fwait
mov
xor
mov
loope
jnp
bound
mov
test
fidivrl
jnp
adc
jb
jb
xchg
test
cltd
sbb
scas
hlt
pop
arpl
jae
xor
dec
and
jno
and
test
cmp
ror
inc
aad
call
or
xchg
push
dec
jno
xor
inc
insb
test
rcrb
out
insb
mov
xlat
mov
xor
sub
mov
xlat
inc
mov
mov
xchg
testb
push
mov
xchg
fildll
cmp
mov
imul
xchg
lahf
xchg
mov
or
bound
das
pop
js
mov
shll
sbb
mov
cmp
xor
cmpb
adc
test
dec
mov
push
mov
cmpsl
mov
dec
push
mov
xor
jmp
cmpsl
mov
xchg
xchg
pop
or
ljmp
cld
mov
sub
leave
subb
cmp
jne
ss
cltd
inc
test
push
push
lock
mov
fisubrl
xchg
cltd
lret
dec
aam
mov
pop
mov
xchg
cld
sub
mov
xor
loop
sbb
add
fldenv
mov
popf
push
lea
xor
jb
xchg
mov
sbb
xchg
cmp
call
push
push
int
stc
movsl
fdivr
mov
sbb
xchg
stos
pushf
scas
loopne
sub
mov
sbb
sub
into
adc
push
mov
stos
xor
add
xchg
in
inc
add
push
call
jns
repz
popf
inc
repnz
inc
outsl
mov
ljmp
pop
and
scas
jge
dec
push
loope
ficoml
jle
xor
sbb
mov
fsubrp
cmc
lahf
lret
push
mov
adc
mov
mov
dec
and
addl
sbb
shrb
mov
fidivs
cs
lcall
subl
xlat
xchg
fildl
popf
jmp
dec
in
scas
adc
and
insb
push
in
or
fsubr
outsl
nop
int3
pop
push
test
test
lock
mov
and
push
pop
inc
loope
out
scas
aam
pop
xor
ds
push
imul
sub
fsub
dec
and
cmp
jnp
outsb
xor
add
dec
sbbl
jb
push
cwtl
dec
mov
cmp
xchg
pmulhuw
loop
and
scas
xor
inc
xor
lcall
test
popf
push
mov
call
outsl
mov
mov
add
mov
mov
subl
rcll
das
imul
mull
push
mov
cmp
sbb
xlat
ror
repz
mov
int3
xor
out
inc
ss
mov
aas
cmp
imul
in
popf
xor
xor
push
dec
sub
sarb
popf
xor
pop
or
popf
lcall
sub
shr
into
into
nop
inc
mov
repnz
loope
pop
inc
shrb
push
fiadds
mov
repnz
es
daa
cs
bound
mov
pop
pop
loope
or
ror
clc
dec
push
lock
pusha
movb
sub
mov
outsl
mov
mov
cmp
sbb
mov
out
outsl
inc
fnstcw
sbb
mov
mov
ficompl
mov
pop
or
je
mov
mov
xor
xchg
test
mov
pop
lret
inc
add
xchg
pop
push
add
mov
insb
test
das
test
jnp
inc
enter
xchg
fisttpl
mov
mov
enter
scas
xchg
cmpl
xor
xlat
dec
pop
lahf
movsl
jns
insl
xchg
xchg
push
int3
fsubs
dec
sub
mov
push
mov
cltd
pop
std
push
aaa
ret
mov
int3
int
aaa
fsubl
mov
mov
mov
dec
jbe
frstor
jmp
sbb
mov
jl
mov
mov
enter
and
push
jl
cltd
jle
shll
mov
inc
jns
stos
push
push
adc
daa
push
aas
lea
nop
mov
xchg
outsb
es
sub
out
jo
push
sub
add
sub
sti
mov
in
adc
and
cmp
lahf
jecxz
push
imul
gs
cmp
xchg
subl
or
push
and
xchg
sub
mov
or
sbb
mov
jl
jecxz
stos
mov
dec
lock
hlt
xor
adc
clc
pop
pop
cmp
inc
fdivrp
pcmpeqb
mov
add
sub
mov
jl
out
incl
inc
inc
aas
lds
enterw
jl
ss
mov
mov
push
mov
dec
fsubl
pop
jae
es
xor
imulb
orl
mov
or
jns
dec
and
int3
sub
xchg
mov
out
jne
pop
clc
cmpsl
mov
jo
jne
cmp
mov
add
push
xlat
sbb
mov
pop
cmc
xchg
pop
lods
mov
or
imul
push
jo
in
jns
pop
inc
fisttps
cmp
outsb
push
mov
popf
xchg
lods
jno
out
xlat
pusha
pop
xor
xchg
fyl2x
pushf
jae
lret
mov
loope
mov
sub
das
outsb
and
dec
enter
push
push
bound
ja
pop
mov
mov
mov
mov
xlat
aas
adc
shl
scas
mov
test
loopne
mov
and
mov
fiadds
pop
js
test
scas
dec
arpl
insb
sub
dec
xchg
pop
aaa
xchg
pushf
dec
shll
cmpsl
ja
insb
test
jb
lods
xchg
addr16
adc
mov
xchg
ret
rcl
outsl
outsb
pop
jo
or
stos
jp
adc
stos
xchg
clc
sub
test
pop
push
mov
jecxz
loopne
push
and
mov
cltd
rcrl
gs
dec
mov
outsb
aam
xor
push
mov
sbb
and
fs
mov
test
xchg
mov
fxch
ss
shrl
and
mov
sbb
outsl
ret
jo
shll
and
aam
add
xchg
cltd
loopne
jne
pcmpgtb
xchg
in
ret
rcl
movsl
xor
xchg
aas
add
push
test
adcb
cmp
jle
mov
add
mov
push
mov
call
das
mov
outsb
addl
push
imulb
mov
inc
aam
sub
cmp
mov
xor
fisubs
adc
push
adc
je
and
sbb
arpl
test
jne
cwtl
inc
and
cld
dec
pop
int
xor
xchg
jno
pop
popa
in
sub
pop
and
lods
xchg
pop
das
and
dec
scas
inc
push
icebp
fcoms
test
outsl
or
mov
movsb
nop
mov
fmuls
cmp
rcrl
outsl
mov
push
xchg
jg
pushl
sbb
int3
jmp
adc
mov
adc
dec
fisubs
pop
cmp
divl
mov
xchg
and
jge
xor
lcall
dec
inc
dec
jmp
or
pop
mov
clc
shl
cmpsl
les
je
fstps
inc
scas
mov
adc
loope
xchg
mov
mov
add
mov
jmp
das
sub
dec
das
mov
jmp
jp
dec
pop
arpl
aas
jmp
sahf
mov
repnz
je
mov
xchg
dec
and
jecxz
popf
pop
push
pop
dec
and
lea
sahf
or
cmp
fstpl
ret
push
imul
and
push
sub
adc
sbb
stos
daa
hlt
cs
call
mov
dec
icebp
add
lcall
mov
push
lahf
test
jecxz
push
xchg
cmc
ficoms
sbb
fisubl
fisttpl
push
ss
adc
push
cmpsb
pop
mov
imul
or
or
jecxz
cmpsl
iret
xor
test
mov
ret
xchg
cmp
lret
popf
cs
mov
adc
mov
xchg
xchg
hlt
ja
adc
lahf
mov
inc
nop
mov
sbb
add
mov
gs
adc
push
lret
sub
subl
dec
mov
test
add
imul
pop
xor
push
sub
out
cwtl
pop
cmp
aam
ljmp
mov
test
pop
cmp
cltd
js
das
jne
inc
ds
lret
mov
add
fcoml
dec
in
jg
popf
inc
dec
xor
and
arpl
test
push
add
dec
push
arpl
mov
add
xorl
ds
dec
dec
xor
fidivrs
inc
push
adc
das
mov
jmp
lods
enter
add
enter
aad
int3
dec
sbb
bound
pop
daa
push
loopne
add
and
cmp
stos
xor
hlt
cmp
and
out
movsl
mov
cmc
push
into
push
adc
cwtl
fiadds
dec
in
and
outsb
bound
xchg
mov
lret
inc
dec
jl
pushl
std
int3
sti
rorb
sbb
lcall
out
pop
cmp
stos
outsb
fucomp
pushf
pusha
pop
xor
mov
xor
icebp
repz
push
add
sarl
out
insl
es
mov
jle
cs
push
cli
test
divb
leave
test
xchg
add
sub
pushf
rcrb
adc
xchg
loop
xor
inc
fiadds
mov
data16
loopne
sar
imul
stos
inc
push
jns
jge
mov
xor
lahf
jmp
sub
adc
mov
subl
cmp
sbb
adc
cmp
mov
int3
cld
mov
jb
add
inc
arpl
and
lahf
in
inc
dec
subl
xchg
jo
stos
jle
inc
popa
or
fcmovnu
fwait
mov
inc
loop
xor
inc
mov
pusha
pop
sub
test
outsb
cmp
inc
addr16
and
leave
ret
lret
cmc
push
pmullw
into
sbb
mov
stos
ljmp
cwtl
loop
icebp
sbb
repz
mov
jne
pop
mov
mov
xor
insl
mov
aaa
popa
lods
rorb
es
pop
xor
sbbl
sub
repnz
dec
and
mov
lea
mov
adc
inc
imul
mov
mov
cmp
xlat
in
jnp
add
sub
aad
or
daa
icebp
mov
mov
pop
sbb
jle
dec
idivl
mov
aad
mov
xlat
ljmp
call
sahf
inc
stos
call
lret
enter
pop
add
cmc
imul
out
shll
mov
scas
and
adc
and
or
cmp
stc
mov
fistl
mov
dec
add
inc
fs
int3
cmp
int3
mov
push
mov
cmpsb
mov
push
add
lcall
clc
cmp
jg
shll
punpcklbw
nop
push
cmp
int3
and
mov
cmpsb
lock
dec
cmp
in
enter
icebp
push
inc
insb
pop
jg
repz
outsl
xlat
push
push
cmp
push
cmpsl
adc
sbb
jo
mulb
in
bound
xchg
adc
push
test
add
iret
gs
iret
and
add
mov
mov
jg
roll
pop
imul
cld
addl
scas
or
adc
cmp
aam
push
xchg
jmp
xor
js
roll
dec
in
rcr
mov
scas
std
push
sahf
mov
pop
or
sbb
lds
cmp
je
mov
imul
jle
popf
push
xchg
add
mov
sahf
dec
daa
dec
outsb
cmp
fcomp
or
dec
in
out
ss
add
dec
fnstsw
jle
cwtl
xor
frstor
push
xchg
fsubs
ss
out
push
daa
imul
mov
sub
sbb
inc
jl
cld
sbb
mov
ficoms
nop
dec
fst
mov
push
xorb
pop
sbb
sub
push
repz
cli
add
cmp
cmp
or
fnstsw
jg
aas
int
jmp
fldcw
xlat
rorl
outsb
into
jnp
clc
and
movd
loopne
xchg
dec
sub
adc
push
lret
mov
repz
div
push
cli
pop
push
add
adcl
aad
mov
mov
sub
andb
mov
movsb
das
cmp
test
decl
jp
cmp
jnp
gs
mov
xor
lods
lret
and
pop
sbbb
jp
dec
or
add
push
test
cmp
scas
arpl
mov
sarb
jb
sub
mov
mov
fwait
popa
jecxz
mov
mov
lods
pushf
fisttpll
cmc
les
push
and
fwait
je
or
pusha
jo
inc
adc
jmp
dec
ljmp
aas
and
aam
call
xlat
insb
lds
insb
and
mov
or
inc
mov
pop
sarl
lahf
int3
mov
aad
mov
cmp
lods
inc
iret
pushl
mov
scas
mov
mov
cmp
pop
imul
mov
fmull
mov
out
and
mov
fisubrs
mov
jns
js
mov
fistpll
js
je
outsl
movsb
adc
mov
mov
adc
xor
add
inc
ss
fcmovb
negl
jne
inc
jle
jnp
xchg
inc
inc
mov
js
or
xchg
dec
cmp
bound
outsl
xor
and
mov
addl
xchg
cmp
xor
std
mov
pop
mov
popf
xchg
adc
stc
xor
scas
sbbl
insb
mov
cmpsb
cwtl
sti
sub
nop
pop
and
cli
ds
pop
outsl
scas
adc
sbb
sub
pop
scas
movsl
ja
xchg
lahf
mov
mov
push
test
push
jno
and
test
pop
aam
pusha
cld
out
add
or
lret
fstpl
mov
popa
test
sti
insl
and
int
fidivrs
sub
jmp
daa
into
mov
das
fsub
cld
jmp
sub
dec
mov
jae
pushf
sbb
push
jge
rcrb
push
sahf
es
loope
mov
dec
dec
pop
jo
fidivrs
inc
inc
inc
div
xchg
cmp
cmp
sub
push
iret
ds
notl
adc
or
sub
adc
lahf
xor
mov
mov
push
mov
lds
add
sbb
sbb
rclb
lds
aas
push
imul
popa
mov
or
ljmp
or
inc
xor
push
pop
xor
repz
mov
in
jle
jns
or
sbb
sub
sbb
iret
psadbw
popf
and
jg
outsb
xor
clc
fs
xchg
pushf
pminub
cmp
xchg
test
mov
scas
dec
les
call
pop
mov
pop
cwtl
int
fdiv
fs
shl
mov
dec
arpl
cld
rolb
pop
shll
push
ljmp
ret
push
inc
imul
mov
rol
imul
pop
pop
mov
mov
test
jnp
sub
out
loope
dec
movsl
sub
pop
adc
jbe
imul
outsb
inc
dec
stc
ret
sub
mov
sbb
nop
nop
cld
mov
sub
in
xor
ret
adc
aad
in
subb
insl
pop
sub
jbe
sub
aam
sar
sub
in
sbb
insb
subb
lods
lcall
lods
aad
jle
lret
or
mov
sbb
push
nop
push
xchg
pop
idivb
in
fldcw
outsl
out
dec
jnp
mov
push
loopne
push
push
cwtl
dec
jle
cmpb
mov
sahf
ds
mov
into
mov
mov
push
cli
xor
sbb
call
pop
pop
mov
adc
cmpsb
gs
nop
stc
sbb
cmc
iret
and
ja
mov
movsb
ret
ja
mov
adc
movsl
rcrb
dec
imul
stos
mov
mov
xchg
inc
stos
sti
cmpsb
ljmp
ret
fcmovbe
clc
inc
mov
mov
lock
xchg
rep
mov
inc
mov
mov
leave
cmpsb
sarb
ss
cmp
cltd
iret
jmp
loop
jne
mov
pop
sub
cmc
fcmovb
mov
jl
test
fs
hlt
insb
test
push
mov
mov
push
push
pop
scas
jno
jno
pop
aaa
das
inc
cmpsl
inc
jmp
xlat
lods
addl
mov
mov
repz
inc
ja
jo
cmp
cmp
test
insl
xorb
imul
popa
jae
or
mov
jmp
cmp
or
fs
iret
fsubrs
insl
xchg
mov
mov
sbb
push
xor
cmp
out
shl
call
mov
jbe
cmp
enter
lock
cld
push
ficoms
adc
cmp
xchg
repz
add
mov
push
xor
fst
aas
in
xor
add
xchg
ja
cli
fsubrl
inc
loopne
jecxz
das
imul
lret
loopne
clc
rorb
cmp
cmc
in
in
sbb
into
mov
dec
cmp
fildl
jmp
shlb
inc
add
out
test
popa
jbe
out
aas
in
arpl
jno
jo
xor
push
add
insb
fwait
push
inc
sub
and
jg
in
inc
movb
pop
pop
or
in
fsubrs
add
pop
cwtl
divl
mov
iret
aad
cmpsl
adcb
icebp
roll
push
lods
lods
xchg
mov
mov
cmp
sbb
stos
lahf
xchg
fwait
inc
adc
mov
stc
jno
xchg
movsb
cmc
dec
push
imul
mov
push
push
int3
mov
pop
pop
push
in
nop
mov
jmp
fidivrl
dec
and
cmp
sub
lret
jge
cmpsb
leave
fdivs
aas
xchg
jnp
loopne
cmp
inc
pop
pop
xor
and
cmp
mov
xchg
pop
test
dec
sub
scas
lods
adc
lock
jp
js
cmp
mov
pop
aad
nop
in
jge
cmc
sub
cltd
jo
lahf
arpl
xor
mov
cmpsb
out
sti
adc
pop
lock
imul
pop
scas
popf
jmp
dec
lcall
and
je
shrl
push
daa
fldenv
frstor
sahf
push
insl
or
inc
mov
mov
mov
test
clc
movsb
add
in
push
xor
add
fs
andb
inc
mov
ficoms
pop
pop
data16
clc
jae
xchg
lret
mov
out
sub
daa
int
aam
ret
pushf
xchg
add
stos
popa
cmpsl
ret
add
add
sti
scas
xor
nop
mov
push
call
outsl
mov
push
jecxz
std
rcrb
adc
pop
data16
test
push
in
out
and
mov
add
mov
dec
add
shl
mov
sti
inc
cli
jae
pop
dec
call
or
shll
and
sti
clc
lcall
test
sahf
cmpsl
inc
xchg
aaa
sub
mov
scas
jns
xchg
pop
adc
jle
pop
or
dec
mov
add
jnp
cmp
adc
adc
dec
cmp
sub
sahf
aaa
scas
xchg
stc
mov
and
sub
filds
xchg
lods
cmp
pop
je
push
daa
out
mov
inc
cmc
or
push
xchg
clc
fwait
adc
xor
sbb
rcll
cmp
and
lock
cmp
and
jns
push
lret
iret
pop
sub
xchg
pop
lods
test
ret
std
xor
dec
mov
jns
push
mov
or
and
and
adc
or
das
std
lods
mov
push
imul
dec
or
xor
mov
fs
bound
and
mov
test
cmpsl
sahf
es
pop
out
inc
scas
inc
cmp
out
xchg
icebp
stos
pop
loope
lea
dec
int
cmp
insb
xor
push
xor
xchg
inc
inc
fwait
push
scas
pop
sahf
stc
fisubl
call
xchg
ds
jne
and
in
sbb
stos
ret
mov
stc
clc
mov
xchg
mov
lret
je
adc
jns
orl
mov
sbb
in
xchg
and
mov
dec
subl
mov
mov
cmpsl
adc
xor
inc
js
pushf
ss
lods
daa
mov
stc
outsb
scas
clc
aaa
xchg
imul
fwait
mov
sub
popa
dec
add
es
hlt
cmpsb
out
les
cmp
or
push
xchg
iret
adc
jae
pop
fisubl
test
xor
pop
sub
popf
pop
mov
push
xor
and
negb
cmp
out
jne
mov
xor
daa
cmpsl
mov
aaa
test
mov
cmp
sub
sahf
mov
std
sbb
jb
mov
push
lea
out
ror
insl
sbb
das
data16
mov
addr16
outsl
mov
or
lea
aas
or
in
push
xor
jo
add
jmp
pop
jbe
stc
flds
xchg
ljmp
push
sub
mov
adc
nop
out
lret
icebp
dec
loop
jbe
shl
in
andl
cli
pop
ficompl
xchg
or
shll
jns
fcmovnu
jae
pop
stos
inc
and
das
push
sti
lock
roll
add
movsb
xchg
sub
daa
pop
push
cmp
mov
sub
out
mov
sbb
jno
add
jecxz
scas
imul
dec
pop
mov
push
cmp
cmc
add
sub
and
cmp
xor
mov
and
ljmp
mov
sbb
and
ss
mov
xchg
daa
lods
mov
std
push
fildl
xchg
push
addb
std
in
pop
jg
lods
inc
pushf
and
imul
sbb
rorl
mov
mov
add
add
push
popf
stos
xor
pop
scas
jge
sub
loope
dec
jp
jo
push
lods
sahf
sub
out
out
sbb
rol
stos
movsl
mov
cld
cmpsb
mov
scas
ss
lock
ljmp
mov
xlat
std
pop
mov
adc
sub
jae
andl
out
fnstenv
push
test
mov
data16
dec
int
ljmp
fbstp
dec
sub
or
cmpsl
sbb
add
mov
insl
cmp
sti
adc
dec
ss
push
pop
in
push
imul
push
setle
je
adc
cmpsl
fmuls
and
lock
pop
mov
andl
sub
cmp
adc
fdivp
ffree
pushf
xchg
shrb
in
jp
add
sub
aaa
das
fwait
aam
in
clc
aam
mov
or
aas
push
add
iret
cmc
add
addr16
test
sbb
aam
cli
or
cld
dec
aaa
fcmovu
sahf
dec
cmp
imulb
fidivs
cmp
int3
lea
cmp
test
cmp
into
aam
in
aad
add
xor
fidivrl
mov
lahf
test
dec
and
jg
in
xor
in
gs
dec
bound
insl
test
psubd
aaa
push
and
mov
ret
shll
shrl
movsb
push
out
outsb
gs
cmpsb
mov
fsubrs
stos
pop
test
mov
test
psubq
mov
and
dec
inc
xorl
icebp
hlt
inc
cmpl
pushf
xchg
or
lea
push
xchg
loope
test
movsl
push
mov
loope
add
inc
inc
icebp
sar
jl
aad
jl
insb
mov
jnp
cmp
movsl
sarl
add
outsl
iret
aas
push
sbb
push
xor
pop
xor
cmc
pop
lea
imul
mov
cmp
add
dec
mov
and
in
inc
shrl
aas
ficoms
sub
mov
aad
inc
jae
push
cmp
cmc
pushf
ret
jl
cmp
sbb
inc
push
pavgb
add
cmp
xor
pop
xor
sub
sub
or
or
data16
push
add
and
rolb
sahf
scas
jecxz
into
testb
in
cmp
clc
leave
cmp
cs
sbb
adc
xor
fdivl
and
loope
mov
jp
mov
stos
cli
xchg
dec
pop
dec
sub
inc
xchg
pop
loope
dec
cmp
xchg
je
push
mov
push
add
test
and
rcll
jmp
jp
int3
ja
or
fdivp
adc
sub
cmp
or
sbb
lds
out
mov
cs
insb
pushf
sub
ss
cs
leave
test
mov
pop
jecxz
xchg
dec
aas
add
int
add
and
xor
fildl
cli
inc
push
or
mov
aas
cmp
int3
imul
je
mov
cmp
adc
frstor
and
xor
sub
xor
pop
inc
mov
sub
out
imul
test
fnsave
lds
fmull
out
pop
push
ja
ja
inc
and
inc
inc
push
cmp
repz
movsl
dec
mov
xchg
mov
jmp
sub
arpl
into
push
fisttps
xor
arpl
jge
pop
cmc
popf
rclb
insl
inc
test
xchg
lock
lcall
jge,pt
xchg
adc
add
xorl
in
sub
call
inc
fadd
es
sbb
cmp
mov
scas
movb
and
jo
pop
lods
lea
cmpsl
hlt
add
and
dec
addr16
xchg
cwtl
xchg
mov
pop
cmp
mov
sbb
aad
jbe
out
cmp
or
jbe
dec
test
cmp
lea
out
and
xor
adc
movsb
movsl
sub
popf
adc
inc
dec
and
sahf
out
push
xchg
lret
mov
push
push
add
dec
xchg
pop
cmp
ror
push
inc
nop
arpl
or
fs
jp
divb
push
adc
inc
iret
leave
jp
mov
cmp
mov
or
insb
mov
lock
push
aaa
mov
pop
push
xchg
push
ret
mov
xchg
adc
jecxz
loope
push
xchg
lea
pop
mov
dec
adc
inc
add
mov
sub
jle
push
dec
dec
fsubrl
mov
xchg
push
jg
jp
push
sub
loop
cmp
fcoms
fs
pop
je
fiaddl
cs
stos
sub
xchg
inc
mov
pop
push
movsl
out
xlat
aad
pop
pop
sbb
daa
pop
push
out
or
cmc
cmp
push
add
or
inc
pop
jae
out
inc
out
push
push
dec
dec
pop
push
pop
mov
movsb
mov
stc
gs
sbb
add
xchg
jp
push
push
cmp
xor
loope
jnp
cld
mov
and
adc
xchg
and
sarl
or
jecxz
jno
out
ds
xor
mov
out
xor
inc
mov
std
insb
data16
gs
inc
hlt
insl
push
dec
in
and
rcl
push
and
push
push
cmp
icebp
or
push
add
loopne
dec
ds
inc
test
pop
sub
pop
jae
aam
mov
je
pop
cmc
dec
cmpsl
js
out
sub
int3
pop
push
inc
cmp
and
aam
nop
add
xchg
inc
andl
push
sbb
cmpsl
loop
adcl
shll
push
cwtl
sub
mov
mov
roll
add
mov
cmp
xor
ret
mov
test
push
imul
or
and
nop
mov
add
movsb
fs
aaa
rorl
mov
in
ds
xor
mov
mov
sub
xor
loop
mov
pop
cmpsl
stos
dec
pop
push
add
sbb
dec
cld
sahf
pop
cmp
fld
xchg
pop
sub
sub
mov
xlat
jecxz
jnp
sbb
push
scas
fnstcw
cld
push
dec
lret
pop
cmp
imul
xor
mov
cmp
pop
mov
add
enter
sbb
xchg
pop
jle
shlb
dec
divl
insb
mov
inc
push
iret
xchg
pop
jge
mov
and
mov
rolb
test
ret
push
cs
jo
xor
and
mov
test
pop
fldl
outsb
and
inc
push
push
aad
or
jbe
lds
adc
xchg
in
mul
lret
xor
and
adc
pop
shrl
sbb
inc
insb
jmp
ss
mov
stos
add
into
dec
js
mov
les
jnp
xchg
pop
jo
lret
and
mov
scas
test
jmp
jp
push
mov
cmp
sarl
adc
addr16
sbb
lods
loop
mov
push
xlat
push
mov
pop
lea
in
cld
push
data16
shr
push
xor
scas
outsb
mov
push
xchg
addb
push
ja
popa
xchg
stos
pushf
jne
pop
adc
cmpsl
lods
aaa
adc
dec
cmpsb
repnz
lods
sub
scas
scas
pop
rcll
hlt
adc
push
push
jmp
cli
mov
and
je
jbe
or
popf
sbb
xchg
inc
jmp
stc
xchg
ja
outsb
push
adc
negb
aas
ljmp
addr16
xchg
or
faddl
push
and
mov
add
rcll
sbb
pop
popf
lea
mov
dec
mov
xchg
lcall
mov
ds
hlt
sub
int
movsb
cld
enter
sbb
inc
dec
add
cltd
push
int3
adc
popa
xchg
popf
aam
jne
movsb
add
fmuls
pop
fdivl
iret
jns
int3
imul
mov
jb
cmpsb
dec
fcmovb
in
jmp
inc
std
fistl
lahf
sbb
insb
jmp
movsb
jae
cs
jmp
adc
mov
mov
movsb
aas
inc
pop
mov
add
inc
xchg
mov
pop
cs
int3
nop
hlt
pop
or
mov
orl
cmc
xor
aas
mov
or
pop
lds
mov
cmpsl
mov
xchg
add
dec
xor
cmp
adc
sbb
ds
inc
mov
cmc
sbb
mov
fdivrl
cmp
data16
and
cmp
mov
xorl
gs
lahf
jmp
pop
cs
sbb
mov
cwtl
or
xor
cmp
popa
inc
filds
je
xchg
or
adc
adc
in
out
test
in
pop
fs
push
orb
inc
xchg
sar
inc
or
mov
jge
addr16
popa
pop
or
scas
pop
mov
insl
clc
jmp
data16
cmpsb
dec
mov
test
clc
int
rol
jno
bound
incl
mov
jle
pushf
xchg
cwtl
mov
daa
outsb
and
jge
in
rcrl
cmp
addr16
mov
cmpsb
testl
out
insb
push
pop
jp
popa
jp
pop
jbe
int
jle
shlb
addr16
dec
mov
sub
sub
dec
test
and
lea
in
jb
pushf
sbb
pop
jecxz
sbb
mov
mov
xor
cmc
pop
scas
sbb
cli
sub
xorl
fadds
sub
and
ds
or
push
mov
pop
mov
ljmp
dec
xchg
sub
dec
mov
or
jae
gs
sbb
loopne
dec
lds
mov
dec
xchg
push
mov
negl
punpckhbw
gs
mov
adc
hlt
add
mov
cmpsb
push
sar
ja
xchg
fld
bsr
xor
mov
or
loopne
mov
pop
sbb
fadds
scas
inc
jle
mov
inc
pusha
xor
stos
fs
rcll
ret
scas
mov
pusha
in
xor
jg
jns
mov
imul
add
enter
dec
out
rolb
jle
mov
push
jae
pop
sbb
movsl
lea
cmp
pop
cmp
push
push
les
jle
adc
lods
or
xchg
js
cwtl
mov
sub
lcall
lds
int
fiaddl
negb
dec
jl
xchg
mov
fadd
lods
add
ja
cmp
movsl
cmp
jnp
mov
ja
incl
add
or
mov
std
ret
mov
mov
daa
movsl
movsl
ja
mov
shr
inc
fs
lcall
pushl
jns
mov
dec
push
nop
mov
mov
sti
mov
xchg
jb
loop
ret
lret
push
add
shlb
cmp
sarb
add
addl
fs
pop
int3
and
xchg
test
stc
aad
push
lret
shrl
add
or
mov
test
adc
daa
jbe
stos
dec
dec
inc
bound
sub
cmpb
inc
mull
push
sbb
clc
xchg
or
insb
inc
out
loopne
push
push
sbb
ret
ljmp
addr16
dec
mov
jle
cmp
sub
xchg
mov
mov
fwait
rolb
clc
enter
inc
test
jae
xlat
lret
lods
sti
mov
lods
mov
popa
and
xchg
movsl
cltd
adc
jbe
and
fidivrl
jecxz
hlt
jo
gs
xor
push
cld
or
bound
cmp
mov
stos
jns
rcl
push
movsb
cmc
push
hlt
aaa
inc
pop
or
cwtl
hlt
movsl
ret
mov
mov
icebp
out
mov
push
mov
pop
out
sbb
cwtl
jne
pop
mov
loope
inc
push
call
xor
repz
jmp
inc
xchg
mov
sub
mov
xchg
and
adc
sar
ret
aaa
mulb
mov
daa
cmp
pop
push
inc
push
jl
test
mov
icebp
inc
xchg
sahf
xor
popf
push
mov
loopne
inc
outsl
insb
iret
xor
lahf
mov
inc
adc
cmp
pop
jbe
nop
mov
ret
cmpsb
add
jae
cmp
dec
mov
imul
flds
movsb
cli
out
sbb
jo
mov
js
fisubs
fisttpll
and
jne
push
fcomp
mov
xchg
dec
xchg
adc
pop
push
dec
dec
out
push
sub
jg
lods
sahf
mov
call
cmpsl
add
push
lcall
push
fnsave
data16
in
and
push
idivl
cltd
or
lahf
sbb
or
mov
pop
cltd
mov
cmpl
dec
stos
je
push
adc
inc
lret
iret
in
push
aam
cmpsl
sbb
mov
arpl
push
push
fidivs
out
popa
inc
cltd
sti
cmc
cltd
mov
or
pop
es
fidivrs
cld
ljmp
lods
testb
xchg
dec
aas
xchg
jae
or
dec
add
jbe
not
push
insb
enter
incb
mov
loop
in
add
and
sub
push
cmp
sub
adc
adc
pop
jle
cs
jge
or
push
nop
stos
arpl
int3
pushf
ds
add
cmp
mov
pop
cmp
hlt
out
sbb
pop
sarb
push
pop
imull
push
mov
clc
into
adc
bound
or
dec
xchg
fdivrl
jbe
outsl
in
cmc
stos
outsb
nop
add
fs
jl
push
xor
adc
cmp
jbe
jecxz
xor
jg
sbb
xchg
or
push
lock
inc
adc
inc
testl
fcoml
pop
mov
enter
sbb
xchg
mov
or
jecxz
push
idivb
xchg
inc
xchg
call
lcall
cmc
xchg
xchg
fcom
inc
add
sbb
cmc
mov
subl
jle
lret
xor
jno
inc
jl
jae
inc
into
stos
inc
pop
fimull
jns
popa
rcrb
jl
sub
mov
call
insl
mov
push
fstpl
gs
shl
push
int
insl
adc
mov
test
lcall
adc
dec
push
sahf
jecxz
sbb
sti
push
mov
fwait
scas
and
cltd
jmp
xchg
rolb
ret
mov
push
sub
lret
mov
ds
and
inc
sarb
push
push
cltd
xchg
mov
ret
xchg
lret
loopne
pop
popf
xor
add
std
popa
add
out
pop
insb
icebp
jmp
mov
mov
pushf
xor
lock
push
sub
xor
mov
mov
jne
iret
arpl
lods
xchg
push
out
pop
mov
shll
xor
push
cmpsl
adc
test
mov
dec
je
jae
test
adc
fnstcw
repnz
push
dec
movsb
bound
adc
orb
cltd
cmp
sbb
hlt
repnz
add
into
pop
cmc
out
jnp
cmp
aad
call
inc
lret
in
clc
loope
adc
movsb
insb
sti
shl
mov
shll
ja
test
rorb
jbe
aad
mov
int
jbe
cld
outsl
out
negl
pop
outsl
std
adc
xor
mov
popa
nop
cld
dec
arpl
pop
inc
adc
cmp
mov
test
pusha
mov
cltd
std
fmull
int3
loop
jmp
sub
xor
cmp
cmp
rcl
push
or
mov
lret
lds
push
sbb
adc
mov
iret
xor
push
dec
mov
sub
in
insl
aad
mov
test
mov
xchg
adc
daa
inc
imul
pop
aaa
imul
pop
push
orb
popw
pop
loop
shll
fimull
cmc
in
insl
dec
orb
aaa
cmc
xchg
mov
stos
cmp
jns
test
aaa
sub
sub
jo
jne
in
mov
popf
mov
xchg
loop
pop
cwtl
popf
sub
inc
arpl
dec
popa
cmpsb
and
in
dec
mov
cmpsb
cmp
sub
inc
in
cmpsl
movsb
push
fstps
fmuls
gs
add
imul
jmp
iret
movsb
xchg
cmpsb
and
loopne
sahf
sbb
adc
int
iret
push
inc
ret
adc
mov
in
hlt
scas
adc
in
mov
iret
test
popa
cmpsb
pop
inc
sub
cltd
mov
add
mov
mov
adc
and
cltd
and
jae
cs
mov
pop
adc
cli
testl
pop
test
adc
push
popf
mov
test
fiaddl
sti
daa
pop
or
cld
push
loope
imul
cmp
sbb
mov
push
mov
bound
cltd
mov
faddl
lods
jl
mov
loop,pn
push
roll
pop
xlat
bound
jl
adc
push
fsts
es
xchg
add
push
mov
mov
out
bound
mov
mov
inc
inc
mov
add
xor
or
mov
fwait
jg
jno
negb
inc
std
es
pop
add
push
sub
push
daa
mov
andl
lret
enter
inc
sub
jae
sahf
out
sbb
stos
lahf
rcrb
leave
xor
sarl
jmp
je
mov
sti
add
mov
dec
stc
mov
adc
sub
cwtl
sti
add
aam
inc
bound
mov
xchg
mov
jg
xchg
or
int
or
and
adc
orl
icebp
cs
divl
dec
xor
scas
xchg
test
ss
push
imulb
ds
mov
ljmp
mov
xchg
push
syscall
jnp
jge
mov
cwtl
test
push
insb
sbb
sub
and
dec
sub
or
xor
push
xor
cmp
mov
cmp
pusha
lret
mov
sahf
sbb
jl
add
jae
andb
in
cmp
inc
dec
decl
mov
repz
inc
out
std
scas
sbb
aam
test
xlat
js
cmp
adc
ds
jmp
push
mov
mov
add
sub
push
sbb
jg
imul
xchg
mov
cld
cmp
dec
std
les
in
jno
fisubrl
push
mov
aaa
add
fcoms
movsl
cmp
shll
es
cmp
jl
testl
shll
push
mov
js
in
sahf
stos
in
or
cs
mov
sbb
mov
fs
cmpsl
dec
int3
sbb
or
cmp
dec
jmp
mov
sbb
sub
aad
inc
jp
inc
ret
push
out
xor
cmp
push
mov
push
push
xchg
pop
arpl
lds
jno
xcrypt-ctr
cmpsl
fldl
mov
adc
lret
mov
int
dec
lea
pushf
dec
lahf
xor
xchg
fadds
add
fcoms
mov
std
add
stos
aas
jnp
sub
mov
ficompl
push
mov
stos
test
jp
shrl
xor
push
push
sbb
loop
bound
xchg
cmpsl
fwait
out
pop
cli
add
clc
dec
test
fsts
add
sub
imul
sbb
adcl
imulb
lret
addr16
jge
gs
sarb
imul
fistps
mov
lea
jno
pop
push
jns
in
enter
xchg
mov
stos
mov
mov
add
mov
mov
mov
sbbl
fsubs
imul
and
or
mov
ret
addr16
xchg
lret
adc
mov
sbb
jns
and
sbb
xor
fildll
adc
xchg
out
rcl
cmp
insl
clc
test
dec
sbbb
sub
sbb
inc
cmp
int3
xor
jne
sub
subl
in
sub
shl
adc
add
cvtps2pd
std
dec
cs
into
rcl
mov
mov
nop
sbb
popa
push
inc
and
in
inc
stos
pop
gs
dec
iret
sbb
test
cmpsl
scas
adc
sbb
mov
and
dec
test
adc
sahf
sbb
sbb
mov
in
or
iret
stc
into
pop
xchg
pmulhw
loope
sub
mov
outsb
jmp
inc
mov
out
lcall
pop
inc
es
rcr
out
sbb
sti
mov
arpl
inc
xor
in
daa
sub
in
push
jae
fstpt
xchg
lds
adc
sub
jne
jg
jge
jnp
xor
jmp
repz
es
mov
xor
jg
jb
sbb
or
add
sub
jg
dec
imul
sahf
mov
mov
leave
xchg
push
cltd
mov
inc
out
rolb
pop
or
inc
mov
in
adc
pop
outsb
cmp
rorl
test
push
jp
push
xor
pop
jb
dec
lock
loop
jp
pop
mov
pop
inc
int
xchg
loop
movsl
in
inc
push
call
cmpl
sub
and
jl
pop
sarl
in
jle
sbb
pop
inc
cmpsb
test
jbe
xlat
repnz
dec
sbb
les
jecxz
movsl
sub
sbb
imul
repz
rclb
inc
outsl
push
lahf
outsl
shr
push
xorl
js
ret
xor
imul
xchg
ds
rcll
rorl
faddl
pop
int
adc
pop
rclb
fidivs
gs
pop
dec
push
outsl
dec
xchg
leave
in
rcrl
bound
fnsave
jle
clc
stos
roll
cwtl
psubsb
xor
cmp
mov
testb
xor
fbld
cltd
inc
mov
jo
cmpsb
jge
push
lods
cli
popf
mov
fldt
fsts
add
out
imul
outsl
and
pop
xchg
cwtl
pop
mov
pushf
push
ds
icebp
leave
and
movsl
imul
loope
aam
cmp
sahf
ret
cmp
mov
mov
mov
adc
push
test
push
xchg
sahf
sti
pop
push
mov
mov
cmpsl
xor
aam
gs
mov
xor
push
gs
rcrl
push
adc
cmp
add
pop
sbb
xchg
repnz
jbe
ja
test
mov
aas
test
or
