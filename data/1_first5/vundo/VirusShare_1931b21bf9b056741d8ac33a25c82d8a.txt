sub
rol
shr
or
add
mov
or
or
xor
mov
mov
push
lea
mov
xor
or
mov
jmp
xor
and
mov
jmp
call
jmp
mov
jmp
add
add
add
call
es
push
call
call
call
nop
pop
xorl
push
jmp
dec
subl
call
push
jmp
call
pop
dec
subl
jmp
sub
test
jne
or
and
add
sub
or
mov
movzbl
add
mov
jmp
push
jmp
xorl
push
jmp
dec
push
ret
push
int3
call
push
int3
xorl
push
push
jmp
call
call
call
push
xorl
jmp
and
sub
mov
dec
and
mov
push
push
or
or
dec
rol
ror
mov
mov
jmp
mov
mov
mov
add
add
mov
and
shl
rol
add
mov
add
add
jmp
push
shl
or
shl
mov
sub
shr
test
jmp
push
call
rol
and
ror
xor
xor
mov
jmp
mov
push
mov
shl
mov
push
mov
mov
movl
movl
call
jmp
cmpw
je
jmp
lea
and
or
mov
sub
cmpw
jmp
jne
cmpb
jmp
fwait
cmp
pop
sbb
add
add
aad
add
shl
mov
mov
or
add
mov
test
jne
dec
and
mov
inc
mov
mov
or
mov
jmp
lea
push
call
test
jne
push
call
add
ret
add
add
add
test
add
nop
nop
jmp
mulb
je
sbb
rclb
mov
sub
jmp
mov
xor
or
dec
xor
mov
nop
push
nop
jmp
and
jmp
add
add
add
push
rol
xor
ror
mov
sub
test
jne
push
jmp
push
nop
call
xorl
jmp
lea
jle
mov
or
xor
rol
mov
nop
nop
nop
nop
nop
jmp
lea
nop
movzwl
xor
mov
and
cmp
jne
jmp
add
test
jne
mov
mov
pop
ret
add
add
add
mov
add
movzwl
push
jmp
add
add
add
call
jae
or
xor
mov
sub
mov
push
push
push
jmp
pop
add
add
mov
call
cmpl
jmp
test
jne
push
jmp
push
inc
push
dec
subl
pushl
call
pushl
ret
add
sub
sub
sub
mov
jmp
jmp
pushl
call
add
pusha
mov
call
popa
jmp
jmp
test
jne
movzbl
add
mov
lea
and
shl
mov
shr
and
jmp
ret
mov
xor
test
je
movsbl
rol
add
xor
jmp
movl
jle
add
jmp
mov
ror
dec
mov
mov
rol
add
mov
jmp
add
add
add
add
add
push
add
push
push
mov
and
mov
mov
sub
jmp
push
jmp
call
call
subl
call
ret
add
add
add
adc
ror
and
or
mov
push
push
jmp
xor
mov
add
add
push
mov
mov
mov
jmp
mov
ret
add
add
add
add
jecxz
ret
sbb
jecxz
cwtl
addb
add
add
mov
flds
test
add
inc
add
add
push
add
mov
jmp
cmpl
lea
je
push
jmp
lea
ror
or
mov
sub
dec
mov
shr
and
lea
add
add
rol
shr
mov
add
sub
test
jmp
add
add
add
add
int
in
aaa
jge
or
shr
mov
sub
push
push
jmp
movzwl
movzwl
add
rol
sub
mov
lea
sub
test
mov
mov
jmp
movl
mov
jne
xor
ret
jmp
lea
addl
call
mov
shl
mov
add
mov
inc
mov
jmp
lea
mov
mov
add
test
je
jmp
add
add
jmp
add
add
push
shl
or
dec
mov
jmp
jne
dec
mov
movzbl
add
mov
lea
ror
mov
shr
and
jmp
jne
sub
shr
add
add
mov
mov
xor
and
cmp
sete
mov
ret
add
add
add
mov
add
jmp
rol
sub
xor
mov
mov
add
jne
add
jmp
test
jne
jmp
sbb
rolb
call
lea
cltd
and
add
sar
jmp
add
ret
rol
mov
mov
mov
mov
rol
mov
jmp
add
test
je
sub
mov
sub
test
mov
jmp
mov
test
jne
cmp
je
jmp
jmp
mov
lea
push
push
jmp
pop
mov
pop
ret
jmp
add
add
sub
movb
movb
movb
call
cmp
push
jae
call
jmp
call
mov
add
mov
jmp
call
ret
add
add
add
add
cld
call
enter
add
add
add
push
jmp
jmp
int3
nop
inc
call
pop
addl
push
jmp
push
nop
push
xorl
push
jmp
int3
int3
addl
call
test
je
add
ret
nop
nop
nop
nop
nop
mov
and
jmp
add
add
add
add
les
jmp
sub
mov
push
mov
movl
jmp
push
push
call
jmp
push
push
lea
and
ror
mov
add
jmp
add
add
jmp
add
add
mov
sub
xor
mov
xor
and
or
mov
sub
inc
shr
rol
mov
jmp
test
jle
inc
inc
mov
rol
mov
jmp
test
jne
add
ret
nop
nop
nop
nop
nop
xor
rol
shr
and
xor
mov
push
jmp
call
call
xorl
call
mov
add
mov
jmp
jne
movzbl
add
or
dec
mov
jmp
add
cmp
jl
pop
xor
pop
inc
mov
ror
and
xor
mov
pop
jmp
rep
movzwl
or
mov
add
add
sub
jmp
add
add
sub
jne
add
cmpl
jne
pop
pop
jmp
call
add
mov
mov
xor
mov
add
test
jne
add
jmp
test
jle
dec
rol
shr
inc
mov
sub
nop
nop
nop
nop
nop
sub
sub
mov
jne
sub
sub
jne
test
mov
jmp
add
and
or
xor
mov
lea
push
push
jmp
call
call
addl
push
push
call
push
jmp
push
push
push
push
int3
xorl
jmp
mov
mov
sub
and
rol
mov
shr
and
add
test
mov
je
jmp
xchg
xchg
ret
add
and
dec
mov
movzwl
shr
mov
mov
or
sub
mov
jmp
jae
lds
mov
mov
jl
add
mov
xor
mov
jmp
cmpl
jne
pop
pop
pop
mov
pop
ret
add
add
add
inc
and
and
xor
mov
inc
mov
sub
test
jne
movzbl
add
mov
lea
sub
dec
xor
or
mov
jmp
mov
pop
add
pop
or
xor
add
add
sub
mov
pop
ret
add
add
add
mov
jmp
mov
pushf
pop
mov
pop
ret
mov
ret
add
add
add
add
add
xchg
adc
mov
call
push
jmp
xorl
mov
call
push
jmp
call
dec
call
push
push
int3
dec
subl
mov
call
jmp
imul
rolb
or
push
mov
push
jmp
xchg
xor
or
inc
rol
add
mov
sub
add
add
inc
mov
add
add
sub
jne
jmp
daa
or
push
jmp
call
dec
dec
dec
subl
jmp
stos
aaa
sub
test
inc
inc
and
add
add
or
or
xor
mov
sub
test
jne
movzbl
jmp
cmp
cld
mov
add
mov
call
add
rol
mov
jmp
sarb
into
jle
ror
shr
rol
or
mov
lea
push
and
or
or
rol
mov
jmp
mov
call
add
mov
jmp
cmp
add
lea
mov
shl
sub
dec
mov
shr
and
jmp
call
push
jmp
call
ret
xorl
jmp
movb
movb
movb
call
cmp
jmp
push
jno
mov
pop
and
mov
xor
add
sub
jne
jmp
push
jae
call
push
jmp
ret
push
dec
addl
push
jmp
dec
dec
nop
push
xorl
call
jmp
mov
add
rolb
lea
jne
test
mov
jmp
fcoms
or
call
int3
call
nop
addl
push
call
or
add
or
mov
call
sub
mov
call
movl
jmp
test
add
mov
pop
ret
add
add
add
jmp
push
int3
addl
call
lea
push
call
test
jmp
fdivl
je
rol
mov
sub
mov
mov
jmp
xchg
in
lea
call
jmp
fisubs
jmp
jmp
mov
and
xor
and
mov
or
and
add
add
mov
mov
mov
mov
cmp
jne
mov
jmp
mov
call
push
add
add
adc
push
jmp
call
call
push
push
jmp
dec
addl
nop
nop
nop
nop
nop
push
jmp
jmp
nop
nop
ret
push
pop
subl
call
test
je
add
jmp
ds
xchg
movb
add
jmp
movzbl
jmp
add
dec
add
pop
mov
mov
pop
mov
jmp
shll
shr
and
add
xor
mov
mov
jmp
popa
jecxz
pop
or
rol
add
or
ror
mov
pop
ret
add
add
add
pop
pop
mov
pop
and
dec
and
or
mov
pop
ret
add
add
add
add
mov
mov
je
test
nop
nop
nop
nop
nop
je
add
sub
mov
sub
add
sub
mov
mov
jne
sub
xor
ror
sub
rol
mov
nop
nop
nop
nop
nop
mov
mov
movl
jmp
nop
nop
nop
nop
nop
movl
mov
movl
jmp
nop
nop
nop
nop
nop
lea
call
cmpl
jne
cmp
jne
call
test
mov
nop
nop
nop
nop
nop
je
nop
nop
nop
nop
nop
add
or
add
add
mov
sub
add
sub
mov
mov
jne
mov
jmp
nop
nop
nop
nop
nop
sub
jmp
sub
nop
nop
nop
nop
nop
shl
mov
movzbl
shl
add
add
lea
or
add
dec
and
mov
mov
nop
nop
nop
nop
nop
call
cmp
jb
nop
nop
nop
nop
nop
add
cmp
jb
nop
nop
nop
nop
nop
add
cmp
jae
add
nop
nop
nop
nop
nop
test
mov
nop
nop
nop
nop
nop
je
nop
nop
nop
nop
nop
lea
shr
sub
or
or
shl
mov
sub
mov
mov
add
sub
jne
nop
nop
nop
nop
nop
mov
mov
sub
sub
mov
add
mov
mov
inc
mov
mov
mov
mov
movl
jmp
mov
nop
nop
nop
nop
nop
mov
add
nop
nop
nop
nop
nop
add
nop
nop
nop
nop
nop
mov
movl
mov
cmpl
je
pop
and
or
mov
sub
nop
nop
nop
nop
nop
pop
pop
inc
mov
mov
pop
ret
add
push
popa
add
inc
popa
add
es
add
xor
add
add
add
pusha
add
out
pusha
add
add
add
add
add
pusha
add
push
popa
add
inc
popa
add
es
add
xor
add
add
add
pusha
add
out
pusha
add
add
add
add
add
pusha
add
add
add
add
inc
insb
outsl
jae
inc
jb
jbe
jb
or
dec
jo
outsb
inc
jb
jbe
jb
add
add
push
popa
je
push
gs
outsl
jbe
inc
popa
arpl
insb
popa
jae
inc
add
imul
push
gs
outsl
jbe
inc
jb
jae
add
add
je
inc
imul
inc
outsl
insl
jo
outsb
outsb
je
add
push
add
gs
je
inc
imul
js
je
jb
arpl
jae
mov
je
push
add
filds
inc
gs
imul
je
adc
add
add
add
add
xor
add
add
add
xchg
fwait
add
add
sbb
add
add
add
aaa
out
das
cmp
cmp
add
adc
cwtl
aaa
add
jecxz
mov
loopne
inc
cmp
cmp
xor
xor
xor
cmp
dec
xor
aas
aas
mov
mov
cmp
jmp
stos
xor
xor
xor
aaa
xchg
cmp
xor
bound
imul
aaa
in
mov
add
add
xor
xchg
xor
xor
data16
out
xor
xor
add
add
add
and
scas
push
nop
dec
icebp
icebp
mov
fstpt
or
cltd
and
or
fidivs
mov
pop
jge
cmp
cld
xchg
cmc
inc
cmp
or
scas
xor
lcall
adc
negb
dec
adc
inc
inc
data16
xor
mulb
xchg
popf
loope
pop
fidivl
jb
dec
sub
jle
cltd
aad
xorb
addr16
mov
fmull
dec
popa
ljmp
popa
int
push
popf
pushf
push
jb
out
lock
ja
xlat
call
leave
adc
xor
hlt
aad
lahf
aam
pop
jle
iret
xor
hlt
int3
iret
rcll
jne
fstps
sub
xchg
push
add
popa
lea
cmp
sbbb
jo
fisubl
mov
imul
push
das
addr16
rclb
jbe
push
mov
mov
push
inc
rcr
sub
or
lds
cmp
jbe
rol
leave
int
aam
push
and
mov
push
adc
rorl
das
icebp
adc
fwait
loope
jle
test
cmpsl
xchg
mov
mov
rcll
cmp
rcr
insb
mov
xor
movsl
loop
fwait
mov
cmp
inc
mov
js
arpl
insl
ds
loopne
adc
cmp
insl
push
jecxz
sub
ret
inc
pop
test
adc
sbb
popa
leave
vcvttsd2si
repz
mov
mov
mov
js
dec
sarb
inc
inc
sub
cmpsl
push
xchg
xchg
stos
pop
push
cmc
lret
lahf
mov
dec
push
cltd
int
or
cmpsb
push
xor
lret
mov
add
add
lods
iret
aad
lret
fcomps
daa
pop
inc
jl
sar
mov
cmpsb
xchg
dec
sub
pusha
fidivs
jmp
lahf
in
lahf
adc
dec
shll
add
das
mov
jae
inc
inc
mov
iret
shll
gs
sub
pop
lods
mov
leave
shrb
or
fistpl
mov
adc
push
shl
jno
dec
js
xchg
sub
dec
aaa
mov
cmc
filds
movsl
idivb
imul
adc
outsb
cmp
hlt
pop
bound
mul
xchg
xor
ret
mov
xor
out
jne
add
sahf
push
adc
enter
sub
mov
int
sahf
fiadds
lcall
push
pop
mov
sub
mov
dec
xor
pusha
cmp
fiadds
cwtl
inc
mov
sub
das
jae
push
jle
sbb
add
inc
and
sub
mov
push
fdivrl
xchg
xor
movsb
nop
aad
push
cld
xorb
pop
imul
and
jge
ljmp
mov
cli
mov
jne
fcoml
pop
inc
pop
andl
add
lods
sbb
imull
mov
push
mov
pop
or
pop
fsubr
ja
jmp
imul
or
filds
mov
aad
movsb
mov
sub
adc
aam
adc
sbb
pusha
lret
pop
das
inc
push
sub
test
int3
or
dec
addb
aad
mov
and
cmp
test
out
mov
test
adc
mov
in
data16
repz
mov
sub
push
add
nop
or
push
sbb
aaa
ds
push
jb
repnz
int3
or
jp
in
push
xchg
adc
push
add
mov
cmp
fistpll
pop
inc
fnstsw
cmpsb
popa
sbb
js
dec
ja
sbb
push
push
inc
les
pavgw
add
pushl
mov
mov
and
add
std
lea
imul
mov
aas
clc
repnz
lods
rol
add
testb
mov
dec
xor
into
std
lret
out
gs
les
fisubrs
ss
mov
test
ss
insb
fiadds
addr16
push
in
test
push
mov
repz
cmpsl
jge
cmp
in
cmp
mov
cmovp
sub
or
repz
repnz
or
testb
jnp
mov
pop
mov
cmp
fs
inc
movsb
add
ret
xchg
xchg
mov
insb
mov
push
icebp
pusha
dec
or
loopne
mov
cmp
cmp
push
xchg
lcall
add
inc
jno
aas
and
test
dec
loopne
ss
fs
mov
push
fucom
aad
adc
or
xchg
stos
xlat
push
es
shrb
std
sub
pop
mov
sti
call
pop
adc
adc
add
dec
test
and
stos
adc
mov
fsts
inc
push
fisubrs
inc
xor
fidivl
or
popa
xor
ja
lcall
loope
stc
add
mov
xchg
