mov
and
dec
add
add
or
push
add
rolb
pop
jo
cmp
add
rolb
or
add
xor
dec
pop
adc
jmp
or
add
or
mov
pop
rolb
add
add
add
add
or
push
add
add
add
add
or
rolb
xor
lock
jo
enter
push
add
add
add
add
iret
add
add
rolb
push
add
add
push
add
les
add
pop
add
add
add
add
push
add
rolb
or
stos
or
add
inc
add
push
jo
insb
or
nop
add
or
pusha
or
add
and
fadds
add
out
or
add
push
pusha
add
add
mov
xor
and
add
mov
add
pusha
add
add
mov
add
mov
add
or
add
push
add
adc
enter
sbb
xor
pop
add
add
add
pusha
add
or
add
jo
les
nop
add
lock
add
add
add
pusha
add
or
add
or
add
or
add
push
inc
add
add
pop
push
rolb
lsl
add
addl
test
add
or
add
test
add
int3
push
add
sbb
add
cli
or
add
add
add
jo
mov
addb
add
add
add
lahf
add
add
add
add
push
mov
add
push
addb
add
add
lock
add
add
or
add
or
mov
pusha
add
nop
add
add
push
add
add
wrmsr
add
or
rolb
add
add
repnz
add
push
mov
add
or
add
add
add
push
inc
add
mov
add
or
jecxz
push
add
or
add
add
add
add
add
addb
or
add
add
add
or
add
add
add
add
addb
or
add
lock
add
add
in
movb
mov
mov
mov
mov
push
popl
call
push
popl
cmp
jne
movw
movb
ret
movw
push
popl
push
or
push
movb
mov
addw
pusha
andw
or
call
and
push
popl
mov
movb
push
popl
push
sbbl
push
popl
xorl
movl
addw
addl
push
popl
push
push
popl
subl
call
subb
cmpl
jne
push
popl
sbbb
call
push
popl
ret
andb
jmp
xorl
push
popl
xor
orb
mov
movl
shl
movl
sbbw
mov
or
shl
push
popl
orl
mov
push
popl
cmp
jne
push
popl
push
popl
mov
push
popl
sub
sbbb
sbbb
call
and
popa
push
popl
addw
pusha
movb
call
push
popl
push
popl
mov
orw
sub
push
push
popl
xorl
push
popl
push
popl
addl
sbbb
push
push
popl
subw
call
andl
sbbl
push
sbbl
sub
xorl
xorl
addl
push
popl
orl
pop
sbbl
cmp
jne
push
popl
sbbl
ret
push
popl
popa
sbbl
call
subw
andb
push
push
popl
xorl
push
popl
addl
xorl
push
sbbb
call
push
popl
push
popl
push
push
push
lea
shl
dec
xor
mov
xor
pop
push
popl
mov
push
popl
shl
sbbw
push
subw
push
popl
xor
andb
push
popl
push
push
popl
call
sub
push
push
popl
mov
sbbb
xor
push
movl
push
popl
jmp
sbbw
orl
pop
movb
push
popl
mov
sbbb
push
xorl
push
popl
push
add
push
addw
push
popl
mov
push
popl
mov
sub
rep
orw
pop
push
popl
push
popl
pop
push
push
mov
xor
pop
push
mov
add
xchg
orl
xorw
xor
xorl
sbbw
jmp
sub
sub
push
popl
push
popl
mov
movl
subw
sub
sbbw
sub
push
popl
xorl
mov
andw
sub
subl
or
jne
push
popl
add
xorl
jmp
push
popl
push
popl
mov
push
popl
orb
shr
push
popl
push
popl
shl
sbbl
mov
push
popl
add
orw
jmp
andw
sub
orb
mov
push
popl
add
add
push
popl
cmp
jne
push
popl
push
popl
mov
orb
add
xor
mov
subl
add
andl
movb
cmp
jne
mov
ret
push
popl
xorb
push
xor
xor
mov
pushl
and
push
popl
pop
push
popl
lea
push
popl
andb
or
addw
mov
push
popl
mov
andl
sbbb
lods
push
popl
mov
sub
subl
pop
or
push
popl
ret
push
popl
orl
push
movb
mov
mov
orb
push
popl
add
push
popl
push
subl
subb
push
andl
push
subw
push
push
popl
or
push
push
popl
mov
xorb
add
mov
movl
add
mov
pushl
or
push
popl
mov
subw
add
and
sbbl
add
push
popl
addw
mov
sbbl
add
sbbl
push
popl
xor
push
popl
orb
lea
push
popl
mov
sbbw
add
orb
mov
andl
push
popl
xor
movl
or
rol
orb
xor
movl
inc
orb
xorl
cmpb
jne
push
popl
push
popl
cmp
je
push
popl
inc
push
popl
cmp
jb
addw
mov
xorl
add
sbbw
push
popl
movzwl
movl
andb
mov
orw
xorw
add
andw
mov
subb
add
xor
pop
andl
cmp
jbe
movb
subw
cmp
jae
sub
pushl
addw
pushl
xorb
movw
push
push
popl
xorl
push
popl
addl
subb
orb
pushl
subb
andl
call
andl
push
popl
call
andl
pop
push
popl
pop
andl
pop
push
popl
movb
pop
push
popl
pop
add
leave
xor
ret
xorl
xorw
call
aas
sub
mov
pop
pop
mov
add
pop
push
adc
and
or
mov
enter
jno
mov
jne
in
inc
popf
inc
xor
push
pop
dec
push
outsb
shl
mov
aas
push
pop
into
loope
or
out
dec
inc
adc
int
rorb
jmp
jle
je
movsb
mov
pop
daa
jb
fwait
call
dec
mov
mov
push
fxch
scas
xor
cmp
add
fldl
xchg
xor
rorl
xor
mov
add
les
push
push
in
ljmp
out
clc
mov
push
les
out
frstor
mov
or
sbb
jae
jecxz
cmp
call
mov
lret
sbb
push
pop
fildl
rorl
dec
rcrl
call
rdmsr
dec
call
push
dec
call
test
pop
xchg
cmp
in
loopne
cmpsl
push
cmp
mov
xchg
adc
mov
fwait
std
mov
cmove
mov
pop
clc
jl
loopne
inc
mov
push
xorb
cmpsl
inc
fs
out
repnz
scas
add
mov
out
stc
lods
fisubrs
in
fcmovne
lcall
pushf
or
and
lods
sub
xlat
movsl
daa
pushf
cmp
inc
inc
test
xchg
sti
psubsw
mov
and
push
icebp
xchg
rcr
mov
je
insl
rorl
decl
loop
mov
lea
sub
and
and
sub
aaa
or
mov
cld
fnstsw
jge
and
dec
mov
sbb
je
popa
sbb
or
lahf
cwtl
mov
mov
ret
into
jae
insb
sbb
sbb
mov
sbb
sub
or
clc
xchg
mov
mov
push
mov
push
or
ljmp
sbb
lcall
ljmp
dec
dec
push
icebp
fistps
cld
pop
and
or
aas
dec
sbb
and
lods
cmpsl
inc
pop
cmc
jno
mov
pop
les
adc
mov
dec
imul
or
or
sub
in
dec
xchg
call
xor
mov
mov
mov
push
xchg
mov
lret
xchg
pushf
add
cmovae
divb
lods
sarb
mov
clc
call
fists
fbstp
rorb
enter
jne
and
push
jmp
icebp
lcall
push
icebp
fbld
frstor
or
and
and
lods
cmpsl
dec
pop
out
jae
pop
inc
loopne
sub
jo
fwait
push
or
bound
jmp
stc
jnp
sbb
pop
sub
dec
sub
adc
in
rorl
dec
xor
test
data16
cmc
or
mov
cwtl
ret
or
xor
lcall
and
ja
or
xchg
push
adc
in
dec
scas
push
sbb
and
lock
fwait
and
mov
loopne
mov
adc
xlat
xor
test
movhlps
addl
lret
sahf
sbb
adc
mov
jmp
aas
dec
sub
imul
mov
dec
fisttps
test
scas
bound
or
lock
mov
push
push
dec
xor
test
aam
or
sbbl
push
insl
or
mov
dec
add
lods
jp
mov
inc
fwait
ret
lret
je
pop
and
lcall
mov
inc
inc
test
imulb
in
add
inc
daa
out
or
add
dec
call
sbb
adc
or
cmp
mov
cmpsl
push
or
dec
call
mov
shrl
jle
push
mov
pop
xchg
fiaddl
in
and
push
cmp
shll
jo
icebp
or
pop
jecxz
push
jb
fwait
scas
in
fs
inc
adc
adc
idivl
lds
lcall
lods
mov
inc
xor
mov
dec
aas
push
pop
insl
xor
shll
jns
lock
pushf
pop
out
call
es
lea
lahf
cmpsb
xchg
test
mov
loop
call
jmp
mov
lahf
ja
add
pop
pop
subl
shrb
clc
dec
clc
xor
pop
xchg
xor
insb
push
andl
xchg
negl
nop
mov
cmpsl
jae
mov
sbb
test
leave
mov
loopne
ja
inc
jb
dec
call
in
dec
or
lea
loopne
or
ljmp
inc
sbbl
or
cmpsl
pushf
ret
iret
mov
dec
repnz
orl
mov
xchg
or
xor
mov
dec
enter
int
es
inc
jbe
jno
dec
call
lcall
inc
or
jo
leave
outsl
cs
pushf
and
ficoml
call
int
outsb
fdivrs
add
pop
arpl
scas
inc
jo
or
test
or
push
mov
stos
lcall
and
inc
jbe
mov
mov
jb
rcr
sahf
imul
mov
mov
mov
fistpl
rcll
andl
mov
shll
or
lea
insl
mov
sbb
mov
bound
out
ret
sbb
mov
mov
cmc
pop
gs
or
adc
loope
cmp
cmp
mov
adc
jl
adc
cmpsb
add
add
push
stos
pop
sbb
aam
rorb
divb
mov
rcll
cli
or
adc
jb
adc
xchg
xchg
mov
mov
iret
pop
push
fbld
rcrb
fwait
dec
inc
inc
test
jecxz
add
add
lcall
stc
cmp
inc
push
xchg
ljmp
add
out
cld
pop
inc
sbbl
cmp
loope
mov
into
aad
call
cld
add
mov
push
dec
dec
xor
jecxz
pushf
imul
mov
add
mov
dec
outsl
push
or
ljmp
jp
lcall
push
sbb
lret
dec
pop
arpl
into
or
in
mov
mov
adc
inc
sub
xor
popa
ret
das
in
jae
and
add
lcall
scas
xchg
mov
sbb
push
outsb
dec
xor
or
cmpsb
rol
and
loope
jp
jne
or
sbb
adc
inc
mov
or
mov
or
push
inc
jb
cmp
shll
aam
jp
loopne
sub
cmc
jbe
mov
sub
mov
cld
imul
mov
sub
out
je
lea
ds
inc
push
in
jae
adc
jecxz
repnz
adc
pusha
lock
lret
popf
hlt
mov
stos
mov
dec
call
dec
imul
les
jl
jne
fwait
jmp
jb
jg
cli
std
xor
and
mov
das
or
out
loop
pop
inc
sahf
inc
ja,pn
movsb
sub
add
or
push
xlat
repz
adc
adc
inc
inc
adc
or
adc
xchg
dec
pop
xchg
pop
jne
out
icebp
sahf
movsl
pextrw
inc
push
scas
lcall
cmp
jecxz
imull
pop
in
fldlg2
push
sbb
lahf
and
mov
imul
jl
add
xchg
rcll
hlt
or
mov
xchg
mov
outsb
inc
and
jl
sbb
xchg
call
mov
dec
call
mov
fildll
jmp
in
fwait
out
pop
pushf
aaa
adc
lcall
mov
movsl
icebp
pop
clc
pop
mov
insb
push
add
xchg
mov
xchg
mov
test
adc
ret
jp
repz
gs
push
je
inc
add
mov
test
dec
lcall
push
out
dec
movsl
fs
lahf
inc
push
loopne
push
cmp
gs
lcall
popa
inc
jmp
mov
sub
xchg
scas
cmp
inc
stos
fnsave
shrb
inc
push
subl
mov
popf
cmp
ja
inc
test
aas
add
push
add
inc
daa
out
pushf
cmp
inc
inc
test
xchg
loopne
add
cmpl
push
rorl
lcall
fwait
mov
std
int3
or
pop
pop
shr
mov
insl
insb
inc
imul
hlt
pushf
je,pt
js
dec
xor
mov
mov
leave
mov
shrl
inc
pop
in
or
rorb
cmpl
ja
ret
ficoms
jge
movsb
mov
xchg
ds
mov
fdivrs
dec
xor
xchg
mov
or
inc
lahf
cwtl
cld
pusha
inc
or
outsb
pop
sbb
rcrl
inc
mov
xchg
in
push
icebp
fucomip
dec
mov
add
mov
and
lods
cmpsl
test
xchg
and
adc
outsl
mov
mov
mov
ljmp
lret
pop
add
loope
mov
cltd
push
xchg
call
imul
jecxz
ret
and
fiadds
in
dec
mov
dec
inc
rcrl
pop
and
push
jnp
push
jb
fwait
scas
mov
and
fdivrp
mov
das
mov
jnp
ja
xor
pop
out
sub
push
push
shl
mov
add
mov
test
mov
pop
ljmp
or
rorb
adc
pusha
scas
adc
aad
sbb
add
mov
popa
adc
or
jp
jo
mov
lcall
dec
stos
push
in
movsb
lods
mov
shll
mov
mov
push
leave
cld
pop
pop
xchg
mov
notb
ss
mov
cld
cltd
push
mov
repz
mov
ds
adc
adc
xlat
cmp
cltd
cmp
ds
lcall
mov
fs
imul
push
lcall
add
mov
pop
jg
jp
jne
pushf
loopne
mov
ljmp
lods
xchg
or
lcall
int3
xor
push
ljmp
pushf
mov
sub
sub
pop
jge
push
in
fndisi(8087
add
sbb
or
and
lods
sub
rcl
mov
push
mov
and
xchg
push
call
cwtl
inc
mov
inc
xchg
mov
shll
xchg
dec
add
cli
push
add
mov
out
imul
test
adcl
pop
pop
mov
pop
add
and
dec
je
sbb
ljmp
daa
enter
sahf
dec
insb
mov
dec
push
pop
pop
movsl
xchg
div
pop
movsb
cmp
cld
push
leave
ds
push
stos
leave
outsl
fcompl
iret
ret
clc
cld
test
iret
mov
xor
iret
push
enter
rorl
jb
push
jne
movsl
roll
or
lods
add
xor
aam
cmpb
push
sub
je
or
test
mov
or
adc
lds
cli
shlb
push
mull
movsl
cmp
push
xchg
call
mov
sbb
popa
lsl
addr16
jp
ret
leave
push
into
lods
stc
push
adc
frstor
je
jne
or
fnsave
das
xchg
mov
mov
arpl
or
stc
sub
add
fistpll
stos
fidivrs
sbb
and
negl
outsb
dec
xor
sub
lret
push
jbe
insb
idivl
cmpl
adc
clc
jle
push
leave
dec
call
ds
xchg
pushf
sbb
shlb
xchg
xchg
sub
gs
xchg
pop
mov
jle
clc
pop
lods
imul
xor
cmp
ss
sbb
adc
outsb
add
and
mov
mov
int
pop
out
js
dec
ja
mov
jno
lret
xor
mov
pop
icebp
je
in
dec
call
scas
mov
pop
jb
xchg
jp
jne
fwait
ljmp
xchg
mov
sub
xchg
dec
dec
popa
ficompl
adc
pop
or
hlt
stos
add
mov
stc
adc
jnp
rcrl
inc
pop
xorl
rcl
mov
sbb
stos
pop
in
rolb
adc
rcll
or
popa
xchg
sarb
je
jecxz
decb
dec
xor
stos
dec
mov
dec
cmp
cld
aas
fstpt
and
mov
mov
push
test
pop
ja
enter
cmpsl
outsl
xchg
faddl
mov
rclb
cmc
jb
stos
adc
mov
pop
aas
jmp
cmp
jbe
test
adc
daa
lret
jl
or
ss
jne
fmul
and
adc
out
lods
add
cs
push
xorl
push
sbb
xor
cmp
rolb
fwait
and
jle
repz
xchg
and
jnp
in
je
inc
inc
pop
sub
lods
in
mov
sbb
mov
or
orb
mov
jle
or
mov
adc
pop
es
imul
mov
push
xor
pop
xor
xchg
and
cmpsl
sti
cmpsb
push
loop
je
mov
mov
stos
loop
cltd
cmp
add
adc
jecxz
stos
xor
les
sbb
fidivs
scas
sti
mov
dec
ja
jb
lcall
wbinvd
mov
outsb
rclb
add
add
ds
movsb
cmp
call
and
lret
and
incb
adc
fnstsw
xchg
sbb
cmp
xchg
sub
sarb
cli
xor
mov
mov
cs
mov
inc
sub
or
pop
sbb
push
pop
in
mov
fwait
mov
idiv
mov
jge
xlat
inc
sub
pop
sbb
push
into
loope
fdivrs
faddp
mov
mov
ss
jns
jo
or
lods
push
fistpl
adc
das
mov
fwait
loop
mov
mov
jno
adc
into
or
mov
mov
or
push
sbb
int
stc
xor
rorb
shl
add
add
or
ljmp
lret
es
frstor
mov
aas
addr16
pop
adc
flds
aas
push
dec
pop
sarl
mov
add
orb
rcll
push
pop
ljmp
ljmp
cmp
inc
inc
test
imul
and
add
push
cltd
aaa
gs
mov
dec
fidivs
pop
out
loope
roll
sub
test
mov
mov
mov
mov
jecxz
pop
adc
ds
dec
dec
xlat
xor
xor
push
jmp
xlat
out
idivb
fistl
call
das
mov
push
xchg
decl
ret
or
test
shll
pop
cmp
or
mov
sub
cwtl
cmp
dec
sub
shl
stos
jb
cltd
xchg
loopne
adc
ds
hlt
mov
adc
fldlg2
jecxz
xor
icebp
ja
inc
in
sbb
jae
jecxz
push
pcmpgtd
hlt
cmpsb
inc
push
cmp
sub
insb
stos
or
ret
add
mov
adc
sbb
es
xor
mov
cmp
lcall
add
test
test
lods
fwait
cmpsl
cmp
fistpll
mov
pop
lock
or
and
lods
cmpsl
cmp
pop
lret
xor
xor
sub
adc
jnp
popa
popf
mov
stc
test
cmp
mov
stos
adc
incl
inc
cs
sbb
xchg
add
inc
dec
mov
cld
sbb
pop
ja
fisttps
xchg
dec
mov
imul
shlb
clc
lods
mov
xchg
xor
adcl
pop
inc
test
pop
xchg
insb
mov
aas
imul
or
adc
stc
ja
mov
call
dec
call
iret
lock
pop
xchg
fucomp
xor
in
je
js
pop
leave
pop
inc
cmp
dec
lret
addr16
inc
cmp
jne
jge
mov
mov
mov
jl
cli
pop
icebp
mov
movsl
dec
xor
repz
mov
pop
and
fidivrs
inc
mov
mov
mov
aaa
ret
inc
mov
adc
call
je
jne
scas
bound
int
xchg
sbb
insl
xchg
sbb
in
test
cmp
mov
clc
imul
stos
dec
jb
fwait
scas
mov
xor
fwait
and
inc
jne
mov
push
call
mov
cmpsl
aas
std
int3
or
push
jmp
subb
inc
push
jae
xchg
stos
pop
jb
pushf
mov
std
int3
or
and
je
jmp
jae
dec
call
push
and
stos
jae
jecxz
and
dec
dec
popf
hlt
mov
jbe
int3
ljmp
hlt
mov
bound
out
mov
sbb
inc
mov
add
adc
or
add
jae
gs
das
add
jecxz
jg
adcl
and
xchg
test
xchg
fs
rorl
out
repz
adcb
shll
adc
sbb
subl
mov
and
movsl
in
je
cmpsb
roll
mov
add
xchg
loop
mov
ja
movsl
nop
mov
jg
addl
mov
mov
cmp
call
loope
cli
call
push
pop
jge
mov
xor
push
mov
lods
mov
shrl
lret
mov
addr16
sbbl
and
push
inc
nop
jmp
xorb
cwtl
cmp
add
jg
adcl
and
jmp
pushf
rorb
shll
ljmp
mov
push
sbb
mov
add
scas
adc
sbb
or
sysenter
stos
subl
push
aam
out
add
out
movsb
nop
mov
loopne
sbb
mov
mov
rolb
fwait
and
jne
pop
inc
jmp
rorl
sbb
lret
je
adc
loop
lock
push
dec
or
and
mov
inc
pop
cld
in
jb
inc
ficompl
fnstenv
jecxz
in
adc
cli
pop
lods
lret
xchg
hlt
mov
lret
mov
aas
push
mov
pop
sti
jg
into
bound
iret
pusha
aas
cli
loopne
push
outsb
mov
dec
in
and
ret
pop
add
cmp
jno
and
ljmp
ret
jp
lahf
leave
mov
mov
aad
mov
movsb
inc
jle
push
insb
mov
and
fcoml
out
adc
dec
call
in
push
adcb
and
popf
or
and
idivb
fisubl
add
insb
adc
cmpl
in
and
jns
out
dec
call
or
xchg
lock
daa
cmc
int3
and
mov
insb
test
int
cmp
mov
lods
mov
test
push
xor
adc
mov
mov
cmp
outsb
add
add
sti
es
mov
imul
scas
dec
cmc
jne
sub
pop
xor
mov
test
push
push
iret
icebp
pop
xchg
mov
dec
jp
jp
dec
pushf
and
sub
fsts
dec
scas
test
mov
rorb
fdiv
mov
jmp
jns
nop
mov
out
dec
fnstenv
in
sahf
jbe
mov
push
mov
mov
xchg
jo
jl
xor
lcall
aad
jmp
jg
mov
imul
or
push
div
mov
mov
cmp
or
lcall
das
mov
lcall
pop
xchg
std
push
adc
ljmp
mov
adc
lock
cld
pop
pop
or
push
fwait
and
lods
sub
and
mov
sarb
and
fsts
xchg
aaa
inc
xorb
jle
jae
xchg
xor
adc
or
xchg
ljmp
lahf
aaa
lcall
shlb
addr16
add
es
or
orb
and
jp
into
fcomps
lret
xor
inc
subl
push
add
bound
or
pop
xchg
jl
sub
and
jecxz
enter
mov
cmp
aaa
ds
push
ljmp
pop
aas
mov
adc
pop
lcall
incl
and
rcrb
sbb
mov
repz
mov
lcall
cwtl
imul
cmp
mov
int3
pop
daa
mov
dec
leave
in
int
mov
push
or
adcb
sbb
jb
pop
mov
add
xchg
movsl
nop
aad
dec
cld
and
jnp
add
hlt
insb
sbb
negl
sbbl
mov
loope
call
sub
sbb
jae
jecxz
dec
enter
call
cmpsb
inc
mov
sbb
into
fcomps
mov
call
push
pushf
push
ret
sub
xor
mov
cli
je
mov
enter
mov
ljmp
jecxz
adc
or
mov
adc
adc
cmp
cmp
jne
jae
push
inc
lahf
shrl
rolb
inc
imul
push
xchg
call
in
cli
mov
jmp
in
or
cmp
insl
jns
xchg
mov
or
inc
xchg
xlat
adc
ret
into
xorb
pop
jmp
jnp
jb
popa
call
push
testb
mov
push
loop
loope
roll
xchg
scas
test
or
ljmp
jmp
xchg
xchg
xlat
insb
andl
adc
or
mov
mov
pop
daa
mov
xor
sub
out
cld
lcall
inc
sub
pop
mov
or
mov
mov
loop
pop
arpl
or
mov
xchg
jno
adc
or
add
shrb
cmove
pop
or
lods
pop
jb
lret
fwait
and
xor
scas
ss
mov
mov
je
inc
movsl
and
sbb
inc
mov
mov
fscale
mov
mov
mov
and
cltd
pop
insl
les
cmp
inc
inc
test
xchg
mov
inc
and
rclb
mov
cld
jg
lret
fcoml
adc
add
mov
jg
jo
or
pop
inc
adc
sarl
icebp
jnp
rcl
jae
ljmp
push
aad
ds
mov
aam
dec
inc
ret
and
shl
mov
rorb
sbb
int
sub
call
aam
setns
dec
shrb
inc
push
es
sbb
and
jbe
std
cmp
cmpl
add
idivb
fcomps
mov
pop
repz
int3
loope
les
loopne
pop
out
idivl
enter
mov
call
nop
arpl
jns
xchg
mov
cmp
adc
cmpsb
xchg
xchg
adc
sbb
lret
dec
pop
pop
xchg
les
dec
sbb
adc
inc
movsl
loop
adc
testb
add
fistps
xchg
push
notb
fs
xchg
scas
test
cld
ja
sbb
cmp
push
sahf
loop
pop
and
mov
std
int3
or
int3
add
sbb
lcall
inc
inc
test
mov
inc
and
sub
stos
or
push
mov
mov
inc
scas
jmp
jle
nop
das
or
dec
dec
shll
ljmp
aam
sbbl
or
xchg
push
jne
pop
filds
push
dec
inc
add
push
fldcw
rclb
mov
ss
dec
sub
aad
dec
js
adc
or
jp
pop
mov
leave
mov
sbb
mov
shrl
dec
mov
out
cmp
dec
or
repz
or
xchg
mov
lcall
ja
mov
insl
xchg
aas
add
ja
xchg
test
xchg
rcll
shll
ds
mov
fcomps
popa
adc
or
jne
call
scas
mov
and
pop
mov
sbb
int3
or
clc
pop
or
mov
dec
cmp
cmp
dec
add
pop
xchg
inc
push
or
ljmp
lcall
loop
and
mov
shrl
aam
lds
jl
jne
pushf
out
shrd
add
bound
or
and
adc
push
push
shll
push
sbb
mov
and
inc
je
cmp
jl
rcr
int
nopl
stos
push
into
cld
aas
lock
popf
mov
add
test
push
or
mov
adc
ret
pop
mov
mov
cmp
mov
outsb
imul
cwtl
adc
mov
sbb
sti
mov
imul
mov
sbb
cmpl
call
jo
sahf
or
test
or
xor
fwait
js
mov
push
sub
subl
mov
rcrl
push
dec
mov
dec
or
add
pop
cli
ja
incl
push
stc
sbb
je
xchg
sub
mov
pop
lds
inc
jmp
add
push
or
ljmp
inc
sbbl
int3
cmp
mov
dec
jo
in
push
pushf
push
out
out
dec
pop
adc
inc
mov
pop
or
rolb
fwait
and
inc
roll
inc
xchg
and
scas
mov
int3
inc
dec
int3
stos
add
jle
imul
xchg
pop
insl
fistps
dec
cmp
cmp
repnz
xorl
xor
pop
sub
push
or
ljmp
inc
or
or
push
push
or
xchg
mov
dec
arpl
sub
in
and
ja
xchg
and
jecxz
repz
imul
pop
mov
rcrl
add
fistpl
repnz
or
mov
mov
movsl
dec
movsl
sub
adc
inc
mov
and
jno
mov
and
mov
mov
rol
imul
mov
adc
xor
fucomi
popa
dec
testl
sub
lcall
push
pop
test
cmpsl
mov
add
nop
adcl
es
fwait
fs
inc
test
mov
xlat
jns
scas
inc
and
xchg
mov
add
push
cmp
xchg
pop
pop
movsb
mov
dec
gs
lea
cmp
out
test
dec
movsb
rorb
push
icebp
fildll
adc
das
pop
cld
pop
lock
xchg
push
and
lods
cmpsl
jae
stos
and
lea
sbb
adc
out
lcall
or
adc
or
loope
dec
imul
or
pop
test
repnz
std
leave
jo
aam
mov
xor
mov
mov
cmp
xchg
stc
and
call
bound
xchg
in
mov
or
add
fdivs
dec
sub
loop
mov
pop
rcr
xchg
aad
test
sub
lods
dec
or
inc
jmp
xchg
jae
sbb
sub
andl
mov
mov
and
fistl
je
pop
sbb
addr16
imul
ret
nopl
stos
add
sahf
call
fbld
idivl
mull
testb
dec
adc
clc
jle
loopne
pop
add
insb
sbb
mull
pushf
sbb
dec
sbb
stc
jg
ficoml
ficompl
mov
rorb
loopne
push
sbb
xchg
popf
or
inc
cs
push
int3
push
aas
gs
push
mov
add
xor
mov
in
inc
test
and
xor
mov
int
rorl
out
imul
leave
adc
rolb
jle
leave
mov
cmp
jbe
bnd
daa
lods
test
pop
rclb
insb
sahf
rorl
popf
mov
xor
call
sti
jns
int
mov
xor
mov
xor
mov
leave
adc
imul
cmp
sub
sahf
jne
stc
hlt
popf
frstor
sbb
mov
xlat
imul
jge
into
cmp
pop
inc
push
xor
mov
std
mov
scas
push
push
dec
xor
inc
in
jge
lcall
cmp
movaps
loope
sub
adcb
fistps
test
cli
and
lcall
or
adcb
sbb
jl
jmp
cmpl
jecxz
dec
push
sbb
hlt
mov
dec
dec
loopne
popa
add
and
ljmp
dec
or
push
or
mov
and
mov
sub
pop
and
mov
insl
sub
lahf
imul
mov
cmpl
push
jns
mov
popa
and
xchg
cmc
shlb
jmp
lock
and
or
add
and
or
mov
iret
mov
dec
pop
in
or
ds
int
aad
leave
int
and
mov
lret
mov
cltd
cmp
inc
inc
test
pushf
pushf
call
and
daa
aam
push
into
ljmp
xor
or
xor
repnz
addr16
and
cli
pop
sahf
xchg
cld
fwait
std
pop
mov
pop
sti
aam
xchg
jge
or
pop
out
adc
inc
and
inc
insb
push
jne
int
xchg
sub
jge
and
iret
jecxz
sbb
or
mov
dec
push
adc
xor
aas
push
jmp
shrb
or
adc
push
cmp
pop
ret
mov
dec
dec
jb
and
sub
arpl
sahf
jmp
xchg
cli
pop
divb
dec
call
jne
mov
dec
dec
aam
out
daa
jmp
sub
dec
enter
jmp
mov
or
lea
sub
jle
adc
xchg
andl
cmp
or
mov
dec
es
xchg
sub
cmp
jns
dec
push
shll
jmp
jae
dec
call
fldl
and
push
xchg
cld
xor
movsl
ljmp
add
sbb
jmp
or
mov
push
pop
xchg
xor
inc
xchg
inc
xor
dec
mov
push
gs
xor
jl
adc
xchg
cmp
jne
pushf
jmp
jo
or
loope
ljmp
in
movsb
aaa
inc
pop
test
icebp
inc
inc
lcall
push
ja
das
mov
lahf
sub
aas
mov
sub
sub
jbe
std
add
mov
mov
cltd
test
jb
lcall
mov
mov
sub
enter
orb
stc
out
adc
hlt
out
imul
mov
push
sbb
push
aaa
rorb
fwait
and
in
or
fsubp
mov
addb
lahf
jp
mov
dec
lret
pop
jmp
into
repz
imul
mov
cmp
roll
cmp
push
or
lahf
dec
leave
jno
mov
lret
add
dec
insb
repz
addl
and
fmul
aam
jmp
enter
jo
movsb
and
mov
and
jb
in
ret
jne
mov
dec
dec
fdivs
lock
cmpsb
sbb
jnp
push
mov
cwtl
cmp
xchg
xor
lcall
xor
mov
xor
dec
xlat
xor
adc
and
push
jb
imul
call
mov
xchg
sbb
mov
jp
jne
pushf
in
in
jae
pop
jl
cmp
xchg
lea
or
sbb
test
test
mov
in
or
push
jns
aas
call
push
or
push
data16
cli
inc
or
and
lods
sub
mov
lret
push
push
or
hlt
xor
sahf
enter
aas
pop
add
mov
xor
imul
scas
int
adc
movaps
std
mov
mov
cmc
dec
repz
rcll
repnz
inc
mov
add
cwtl
cmp
das
test
push
cmpsl
jb
test
and
rcll
hlt
or
and
daa
rcrl
call
dec
roll
shlb
stos
jecxz
push
lcall
out
push
push
mov
lret
pop
popf
pop
mov
and
leave
mov
mov
ffreep
push
xchg
jmp
jmp
sbb
xchg
mov
mov
push
add
add
clc
jae
dec
mov
aas
jmp
inc
mov
dec
mov
add
pop
xchg
cmpsl
cmp
inc
jmp
push
inc
or
clc
and
cmp
pop
daa
push
and
enter
lret
xor
sbb
sub
jno
out
or
fcompl
mov
jp
adc
rcrl
jecxz
dec
mov
inc
sti
fldcw
pop
inc
addr16
popf
jae
out
mov
fs
pop
jl
push
testb
push
or
ljmp
inc
call
es
fwait
and
and
adc
lcall
xor
lock
pop
cmc
jge
inc
rclw
imull
js
push
ret
and
inc
test
jmp
test
xor
jb
add
mov
out
mov
lret
mov
or
mov
insb
loope
inc
pop
dec
xchg
mov
lds
inc
punpckldq
call
pop
dec
inc
or
cmp
mov
and
add
dec
add
mov
inc
lock
sub
inc
in
push
sub
inc
ror
sub
aad
cmp
movaps
fisubl
add
mov
xchg
cmp
mov
repz
int
dec
call
jmp
popf
adc
adc
ja
pop
adc
cmp
aad
fcomps
inc
mov
fwait
mov
sbb
or
xor
adc
mov
fs
leave
rcr
jae
adc
aaa
jb
loope
dec
out
mov
leave
pop
and
jne
or
data16
repz
fmuls
negb
lods
repz
lds
inc
mov
xor
lock
mov
int3
call
jp
xor
sub
stos
adc
mov
mov
push
jmp
jnp
mov
in
je
ror
jge
pop
adc
fwait
and
fisttpl
xchg
dec
mov
imul
rcll
hlt
mov
or
orl
pushf
je,pt
jbe
inc
ret
xlat
mov
pop
mov
add
inc
pop
jmp
dec
jo
mov
divb
jo
fidivs
pushf
jecxz
cmc
clc
test
or
jbe
inc
mov
xchg
popa
in
and
and
popa
rolb
adc
ret
aad
test
mulb
or
mov
dec
xor
loopne
mov
dec
imul
xchg
mov
jmp
jmp
inc
jnp
loopne
mov
add
jnp
cmp
ds
jae
sbb
dec
das
push
jbe
push
push
sahf
stc
and
sahf
iret
mov
and
lret
gs
fisttpll
aam
rorb
xchg
imul
cli
or
xlat
push
adc
ljmp
out
mov
lret
fwait
and
mov
lahf
xchg
subb
rclb
inc
mov
mov
jmp
cmp
dec
xor
ror
lea
ret
addl
dec
pop
aas
ljmp
std
cmp
rcrb
mov
stc
xor
jae
pxor
or
adc
mov
rep
repz
pop
movsl
adc
ficompl
pop
rolb
loope
into
push
inc
jbe
dec
dec
xor
les
fdivrl
mov
in
or
fisubl
and
lods
sub
mov
mov
push
in
fldt
cld
pop
add
or
lock
inc
iret
and
lods
sub
in
add
in
and
ja
xchg
and
fwait
jo
inc
test
adc
iret
inc
sub
mov
and
lcall
testb
xor
pop
sub
ss
decl
jne,pn
xchg
jno
jo
pop
cmpl
inc
xchg
ret
cmp
loop
daa
out
cmp
push
outsb
dec
xor
sub
jo
adc
inc
call
cs
fcomps
fwait
jns
inc
test
ja
out
jae
xlat
inc
sub
iret
sbb
sub
push
cmpsb
std
push
hlt
mov
mov
xor
xchg
rorl
test
sbb
or
and
aaa
jae,pt
sub
add
jnp
push
loope
push
mov
mov
lahf
cmpsb
jmp
repnz
xlat
sbb
ds
leave
jmp
fistps
imul
jne
fs
xor
cs
xchg
xor
std
fs
adc
sbb
jbe
loop
mov
roll
iret
cmp
dec
sub
lret
ja
pop
pop
in
adc
outsb
add
pusha
xor
repnz
or
and
and
pop
insb
cmc
cmp
sbbl
add
idivb
pop
or
mov
or
movsb
and
mov
jl
pop
sbb
outsl
jne
movsl
roll
repnz
jo
xchg
push
rorl
shrb
sbb
insb
lcall
sbbl
and
repz
sti
cmpb
fnclex
mov
sbb
rclb
out
ljmp
cmp
sub
jmp
lcall
add
repnz
dec
shlb
out
or
dec
psubsb
mov
push
iret
int3
fwait
imul
xchg
mov
cli
repz
jg
mov
dec
pushf
jecxz
into
fstl
or
sahf
ljmp
into
ret
aaa
aam
adc
pop
out
fs
xor
pushf
mov
mov
sbb
mov
call
jne
dec
xor
in
xchg
cltd
pushf
jmp
lcall
pop
leave
mov
loope
imul
call
jmp
pop
pop
in
pop
push
lcall
cmp
dec
jb
cwtl
jl
mov
dec
call
mov
sbb
lret
dec
pop
add
loope
inc
into
pop
aas
mov
pop
out
mov
pop
mov
dec
popf
cld
inc
ret
sahf
mov
push
jns
xchg
mov
and
and
cmpsl
cwtl
int
int3
jp
movsb
sar
cmpsl
cmp
xchg
mov
jnp
testl
aas
mov
loope
int3
cmpsb
sub
in
loopne
push
pusha
mov
ret
out
andl
fwait
jecxz
mov
mov
lods
jmp
mov
push
pop
jbe
popf
scas
fildll
fidivrs
lcall
cmpsb
mov
mov
imul
or
cld
rolb
pop
add
lret
cltd
ds
sbb
lret
dec
pop
movsb
xchg
adc
xchg
mov
fs
repz
es
or
out
test
or
dec
mov
or
dec
sub
xor
loope
shl
pop
adcl
cmpsb
test
inc
movsb
shr
mov
lret
dec
cmp
js
xchg
sub
mov
int3
in
cmp
dec
andl
nop
es
leave
jno
adc
fldz
xor
lcall
mov
stos
stos
mov
sub
lds
outsb
popa
xchg
imul
mov
pop
aas
test
sar
ret
add
dec
lods
inc
pop
testl
into
jb
fwait
mov
lods
jp
xchg
popa
lsl
mov
inc
adc
jno
adc
cmpsb
ds
out
jb
imul
and
push
mov
aas
cmpsl
dec
push
sub
and
mov
cmp
dec
sub
jne
sbb
sti
jae
xchg
inc
pop
jmp
inc
jo
lock
lahf
out
and
jmp
leave
into
nop
add
lret
cld
cmp
inc
or
pop
call
aad
imul
or
and
stos
loop
or
stos
cmpsl
imul
jbe
inc
rcll
in
push
mov
lret
pop
mov
mov
insb
inc
pop
es
ficoml
sub
or
dec
or
sub
iret
mov
dec
shl
or
adc
add
rcrl
out
hlt
and
or
jge
lret
mov
inc
lea
adc
inc
mov
sub
cli
inc
xor
arpl
in
mov
xchg
fsubr
jo
into
jo
pushl
pusha
sub
les
lret
imul
scas
inc
cmp
dec
push
rorb
pop
cli
js
test
lods
subl
mov
sbb
adc
arpl
mov
stos
andb
movsl
xchg
xchg
mov
test
jb
out
cli
jg
dec
fisttpll
sub
sbb
inc
mov
xor
or
nop
cli
mov
cwtl
or
call
loopne
lock
jne
push
pop
jecxz
push
push
adc
ret
iret
fldt
sub
pop
xor
push
cmp
aaa
pop
cld
pop
and
mov
lods
cmpsl
jae
mov
cmpsb
int
subl
mov
inc
sbb
movsl
fcoml
mov
sub
mov
out
ljmp
addr16
imul
mov
sbb
sbbl
and
jp
push
and
xchg
std
int3
or
lcall
or
enter
mov
dec
cmp
pop
xchg
mov
dec
dec
dec
push
jecxz
pushf
dec
out
out
sahf
jae
jmp
mov
add
movsl
outsl
mov
addr16
mov
inc
movsb
cmp
xchg
lret
cmp
mov
xchg
dec
xor
jb
movsb
xor
addr16
adc
or
mov
cwtl
xor
mov
lret
lret
fwait
and
incb
or
xchg
dec
sbb
xor
addl
push
and
test
cli
add
push
dec
xor
es
adc
inc
ss
icebp
mov
ss
ljmp
jae
cmpsl
jno
dec
inc
sub
dec
mov
mov
jecxz
popa
xchg
cmp
or
stos
mov
lcall
rsqrtps
dec
aad
adc
scas
jns
adc
mov
icebp
imul
das
push
mov
xor
pop
xchg
ljmp
sub
fwait
and
and
jne
or
mov
pop
xorl
mov
adc
aas
imul
das
inc
push
jl
xchg
mov
inc
adc
jne,pt
arpl
mov
mov
sbb
out
or
leave
mov
aam
or
je
mov
sbb
jae
jecxz
and
or
adc
lret
movsl
hlt
mov
sbb
rorl
xchg
imul
shlb
testb
bound
into
mov
dec
shl
xchg
and
dec
pop
int
lds
or
inc
push
loope
add
call
push
push
fwait
push
inc
inc
test
test
cmpsl
inc
and
xchg
push
call
lcall
cmpsl
jge
sub
sbb
adc
cmpsb
cwtl
push
xchg
or
outsb
add
clc
mov
mov
add
mov
outsl
mov
into
clc
lds
popf
fistpl
sub
aam
sbb
mov
mov
rolb
fwait
and
repz
shrl
aaa
int3
scas
add
xor
out
mov
lods
cld
in
jb
mov
sbb
test
lret
lret
xchg
hlt
mov
stos
mov
dec
call
mov
xor
add
inc
lods
jne
xchg
out
je
faddp
insb
sub
test
mov
xlat
pop
mov
lcall
cmp
int
arpl
adc
aas
mov
stos
mov
scas
jns
jmp
cltd
add
add
and
xchg
mov
and
cmp
dec
xor
add
mov
jecxz
xchg
ret
sarl
lea
xlat
mov
jl
jb
imul
push
xchg
jecxz
xlat
push
sub
inc
push
ja
dec
sbb
out
push
push
mov
leave
mov
mov
out
sbbl
xchg
ja
popa
xor
lcall
sbb
out
cmp
test
dec
fdivs
lock
and
int
cmpb
push
inc
add
jge
mov
rorb
scas
mov
sub
adc
or
jg
jb
shlb
cmp
lcall
jmp
addr16
frstor
add
sbb
xchg
adc
dec
add
idivb
pop
sahf
clc
push
sbb
sbb
mov
add
pop
inc
jmp
push
fstpl
sahf
mov
in
iret
xor
pop
and
mov
push
insb
sbb
pop
cmp
push
stc
pop
les
insl
fidivs
out
in
inc
stos
add
arpl
lcall
lahf
cmpsb
movsb
xor
std
int3
or
jecxz
call
jmp
adcl
dec
call
fisttps
xchg
dec
into
ss
shlb
clc
movsb
ret
int
add
dec
call
push
in
rolb
fwait
and
daa
xchg
sbb
xchg
and
jecxz
int
loop
dec
xor
push
xchg
jecxz
mov
mov
rorl
push
sbb
and
fwait
and
mov
xchg
fucom
ret
jne
mov
jge
and
imul
or
cmp
xor
into
scas
leave
insb
sub
loopne
stos
cmpsb
push
mov
dec
mov
loopne
inc
pop
jnp
dec
nop
jp
xchg
imul
dec
push
shll
cmp
mov
sbb
fistps
pop
std
adc
sahf
test
and
add
push
dec
dec
xor
mov
xor
and
insl
xor
inc
imul
pop
mov
rorb
lods
pop
sahf
dec
addr16
and
jmp
xorb
mov
add
test
rorb
call
push
inc
ljmp
lahf
aas
mov
inc
inc
test
dec
xor
xlat
inc
sub
mov
lcall
dec
imul
xor
rorb
push
sbb
add
fwait
and
cmp
dec
ds
xchg
daa
jne
add
push
nop
out
lret
lods
add
aaa
in
insb
incl
dec
call
or
xchg
fwait
dec
jp
jne
pushf
loopne
enter
or
mov
dec
add
mov
sbb
dec
xor
icebp
mov
or
pop
or
xchg
xchg
mov
pop
dec
or
sbb
xchg
data16
and
inc
jg
clc
pop
xchg
arpl
lds
andl
mov
dec
into
pop
jmp
std
mov
shrl
inc
lock
js
fstpl
int3
and
xchg
fdivs
lods
jo
jmp
out
jecxz
es
scas
and
or
je
push
mov
adc
outsl
sub
test
cmpsl
jbe
jbe
mov
cltd
stos
out
push
xor
push
pop
mov
xor
lcall
inc
jns
arpl
sub
xchg
jecxz
int3
pop
pop
push
stos
cmp
loop
imul
rcrl
xchg
rorb
pop
nop
mov
lahf
mov
dec
push
test
pushf
push
out
out
int3
lods
add
movsb
stos
mov
shll
mov
fdivrl
xor
cmp
loop
out
mov
dec
mov
prefetch
fildl
and
sbb
add
in
inc
sahf
mov
cmp
push
and
or
aam
jo
fsubr
mov
jmp
nop
incl
lret
sub
pop
jb
dec
call
and
fists
stos
xorb
mov
aad
incl
inc
dec
popf
mov
dec
call
jne
movsl
roll
pop
int3
lods
add
and
mov
jbe
or
xchg
adc
jne
fwait
in
xrelease
or
xchg
popf
sbb
loope
fsubs
or
lret
popa
adc
pop
les
cli
test
and
inc
jb
std
iret
into
imulb
mov
inc
inc
test
cltd
popf
sbb
add
jl
push
sbb
fildl
fwait
and
out
mov
loopne
mov
scas
fidivrs
adc
ljmp
push
incl
shll
jmp
cmpb
ret
adc
mov
hlt
mov
sbb
shlb
mov
dec
dec
jge
cmp
cld
push
test
stos
add
cltd
lock
mov
lods
mov
pop
and
je
ja
and
lods
sub
ja
dec
mov
push
mov
lret
call
insl
inc
pop
lock
mov
add
pop
stos
xchg
imull
sbb
adc
mov
or
cmp
adc
fiadds
mov
inc
mov
call
mov
pushf
lret
mov
fidivrl
out
push
iret
xor
and
push
dec
sbb
lock
xchg
rorb
in
fs
fsubrl
jnp
psadbw
sub
pop
sub
pop
bnd
test
daa
lret
int3
jo
xchg
jne
push
pop
andl
nop
imul
out
pop
leave
outsl
cs
and
pushf
std
int3
or
loopne
leave
jmp
hlt
ror
sbb
mov
dec
or
icebp
xchg
rcr
add
pop
push
xchg
add
push
mov
outsb
ret
or
out
pop
outsl
xchg
xor
enter
mov
cmp
loope
cmp
and
xchg
lods
xlat
scas
cs
mov
mov
mov
subb
jle
jb
arpl
push
mov
xchg
call
into
adcl
call
cwtl
dec
rorl
cwtl
lcall
lcall
or
mov
cwtl
call
in
jmp
psubd
rclb
ljmp
iret
pop
sahf
xchg
push
cltd
xchg
out
push
sbb
lret
dec
pop
push
xchg
sbb
push
push
inc
imul
cmc
push
sti
inc
cld
rcrl
dec
shll
fadds
jb
fwait
mov
in
cmp
jns
xchg
mov
and
inc
jne
push
push
push
dec
xor
sub
scas
clc
fwait
and
adc
inc
addl
sbb
add
in
xchg
dec
cmc
into
pop
aas
xchg
dec
arpl
rorl
out
stc
pop
inc
pop
jo
or
xchg
test
rcll
xor
jne
stos
gs
push
sub
adc
ret
roll
add
cmp
mov
mov
pop
cmc
mov
sbb
adc
push
jo
or
lahf
xor
jo
je
mov
inc
fwait
inc
xor
pop
lods
shrb
push
test
lret
popf
cmp
pop
inc
inc
test
mov
scas
sbb
movl
addr16
xor
mov
lahf
adc
adc
mov
sti
push
push
inc
mov
aam
ds
insb
adc
mov
mov
adc
imul
mov
jmp
or
lret
jp
jo
cld
lret
cmpsl
rolb
leave
adc
mov
dec
call
jne
cmpsl
roll
jmp
xor
inc
mov
leave
jno
int3
scas
sub
mov
mov
mov
jo
ds
or
jns
push
loop
je
mov
cwtl
xlat
iret
sub
jbe
cltd
push
movsb
out
lcall
push
sbb
add
fcmovbe
pop
fwait
and
inc
ljmp
jne
mov
pop
lret
inc
dec
push
xor
enter
adc
lahf
scas
into
lods
and
pushf
fwait
jb
dec
call
fs
mov
push
jno
andl
mov
mov
lret
fwait
and
incb
sti
pop
inc
jno
push
mov
dec
jo
or
xchg
pusha
sbb
inc
ret
push
add
sbb
pop
pop
mov
ret
xor
push
xchg
cmc
ja
fimull
xchg
dec
mov
pop
and
rorl
repz
push
out
fmull
mov
std
xchg
adcl
inc
pop
stc
je
insl
rorl
decl
es
jl
xor
pop
add
xor
jmp
or
std
sti
mov
xchg
inc
cmp
nop
data16
pop
nop
mov
mov
add
gs
xchg
dec
aad
cmp
into
mov
add
enter
lods
sub
dec
xchg
xchg
hlt
andl
adc
or
xchg
mov
and
addb
cmp
mov
call
js
sub
in
adc
xchg
in
jle
inc
rcll
xor
inc
inc
inc
popa
out
js
cmpsb
mov
cmc
jae
cltd
pop
pop
pop
or
xchg
lcall
es
fists
les
xor
dec
call
test
mov
mov
mov
std
inc
lods
add
fdivrp
or
push
roll
jmp
into
pop
push
inc
add
add
add
inc
push
shrl
dec
mov
pop
or
repz
adcb
pop
mov
rolb
and
xor
xchg
aam
adc
ljmp
iret
pop
es
mov
aam
push
repnz
sbb
adc
sbbl
test
jecxz
lods
pop
mov
jge
lret
mov
out
mov
or
inc
cmpsl
ss
fildl
ja
fdivr
mov
pop
push
inc
mov
push
data16
test
loope
mov
rorl
in
mov
enter
and
lret
add
into
sbb
or
jnp
cmp
or
mov
dec
inc
jmp
jle
xchg
test
ret
sub
cli
inc
stos
push
push
jmp
jne
cs
sub
dec
cmp
insl
xchg
xchg
jne
aaa
sub
sub
sbb
adc
inc
movsl
mov
fsts
push
jne
xor
jbe
xchg
loopne
mov
jb
imul
jns
xchg
mov
mov
pop
cmp
adc
repnz
lock
pop
cmc
lods
daa
sahf
roll
push
push
shll
lea
dec
insb
ret
jns
xor
mov
and
xchg
pop
cmp
or
xchg
xchg
lods
add
stos
fdivrp
sahf
inc
ss
cmc
aam
out
xchg
jecxz
or
mov
inc
lods
add
dec
out
sti
jae
std
popf
sbb
jmp
repnz
enter
sub
pop
cld
leave
pop
into
mov
dec
push
xchg
ret
movsb
pushf
dec
out
out
dec
ret
ja
inc
sub
mov
dec
ja
lods
aam
cmp
mov
insb
inc
pop
sub
fdivrs
and
add
pusha
inc
jmp
addl
cs
or
bound
adc
mov
cmpsl
xchg
jmp
pushf
cmp
inc
inc
test
lret
stos
icebp
lea
mov
and
negb
das
call
cmp
xchg
cmp
mov
pushf
in
ja
xchg
xchg
repz
inc
jno
and
sbb
inc
xchg
inc
xor
mov
lods
mov
std
mov
dec
call
jne
cmpsb
roll
inc
cmpsl
jl
imul
or
aas
push
mov
sub
and
enter
lret
xor
out
negl
pop
mov
xchg
mov
xchg
mov
push
cmp
dec
das
mov
push
cmp
test
xchg
lods
lret
loop
pusha
mov
mov
rol
jp
or
pop
rorl
pop
xor
push
out
faddl
cld
pop
cmc
insb
or
out
sub
mov
fwait
and
orb
xchg
and
imul
mov
add
dec
jmp
jne
xchg
es
lds
mov
imul
or
sub
pushf
sbb
mov
aas
push
sbb
clc
and
test
or
adc
rclb
jmp
je
stos
mov
cltd
mov
inc
push
in
jae
dec
sti
sbb
pop
push
or
and
scas
lret
popf
hlt
mov
mov
xchg
jecxz
mov
in
lock
inc
mov
sub
jmp
sbb
stc
inc
lods
cltd
rolb
fwait
and
mov
out
jmp
jnp
mov
or
das
sbb
loopne
fmulp
insb
sub
lock
xchg
xchg
insl
xchg
dec
ret
imul
rcrl
cmc
sbb
dec
insb
sbb
xchg
push
mov
and
jnp
dec
loopne
cmp
fwait
and
lret
push
and
jne
fwait
in
dec
mov
fsubl
push
mov
add
or
gs
popf
sbb
popa
adc
add
add
outsl
push
push
gs
sub
adc
enter
test
es
inc
add
mov
vmread
xchg
clc
les
cs
push
aad
out
sarl
dec
iret
pop
es
in
inc
pop
sbb
mov
repz
and
mov
jns
lahf
sub
adc
dec
roll
pop
call
jbe
jl
leave
jmp
cltd
cmp
inc
inc
test
add
inc
and
iret
mov
xlat
repnz
repz
or
and
lods
sub
sbb
mov
mov
arpl
imul
rorb
repz
mov
lcall
adcl
mov
add
xlat
stc
into
aam
js
or
cmpsl
sarl
cmp
jl
push
fimuls
inc
imul
xor
iret
dec
out
icebp
dec
sar
xor
stc
and
jl
aas
pop
ss
push
pop
mov
inc
push
mov
and
cld
in
ror
aaa
rorb
ret
cmp
adc
std
inc
jno
jmp
lods
cmpsb
pop
es
test
icebp
mov
sbb
lahf
and
mov
xchg
rcll
stc
or
movsb
pop
pop
aas
fimuls
dec
roll
xchg
pop
cli
ljmp
jge
popf
test
push
call
mov
testb
fldt
dec
dec
xor
ret
out
lods
in
cltd
imul
mov
xchg
decb
jo
push
repz
mov
xchg
push
shrb
inc
mov
push
stos
jae
sarl
mov
mov
mov
int3
test
xchg
nop
xchg
sub
and
mov
jae
or
xchg
jnp
loope
aam
adc
je
sbb
xchg
jecxz
jl
or
xlat
in
ror
hlt
mov
push
fcompl
mov
inc
and
pushf
rolb
jne
fwait
jecxz
xorb
leave
or
sarl
lcall
cmc
dec
pop
pop
jmp
xchg
ret
rcll
sti
nop
scas
sub
daa
sub
xchg
jge
cs
test
sbbl
and
je
and
daa
jne
ljmp
xlat
xor
dec
je
and
pop
hlt
ljmp
les
inc
inc
test
pop
arpl
add
inc
daa
out
mov
push
sbb
jne
and
lret
pop
push
xchg
sbb
ljmp
dec
mov
jno
cmp
in
push
pushf
pushl
scas
cmp
pop
pop
cmp
xlat
dec
arpl
out
xchg
xchg
push
jmp
and
sub
in
xor
jecxz
enter
jae,pt
notb
aas
lods
scas
add
lahf
mov
or
adc
push
cmp
sub
out
lcall
out
rcll
cmc
or
and
in
je
int3
xor
loop
lret
loop
push
insb
dec
call
push
rcrl
leave
jae
jecxz
sub
adc
jg
xchg
hlt
mov
sbb
lret
pop
mov
jl
leave
fcmove
and
pop
stos
xlat
fcmove
and
lods
std
int3
or
xchg
pop
test
adc
push
jno
bound
nop
rorb
push
and
sti
mov
xchg
dec
rcr
jmp
and
mov
movsb
sub
cli
cmp
pop
hlt
xor
popa
call
xchg
adc
or
pop
rcr
add
xchg
ret
int
stos
and
adc
lock
cmp
in
xchg
jecxz
stc
push
inc
mul
outsl
dec
lret
mov
movsl
inc
roll
jnp
mov
rorb
sbb
sahf
cs
jae,pn
ljmp
orb
sub
out
and
fisubl
add
cs
repnz
adcl
jns
push
sarl
or
dec
xchg
mov
mov
out
adc
or
adc
fdivrl
xlat
sbb
dec
out
leave
insb
sub
dec
push
mov
mov
out
sbb
call
or
notb
jmp
inc
sub
out
pop
imul
stc
xlat
call
fsubl
jns
xchg
lods
test
jg
dec
es
inc
outsl
or
mov
mov
sbb
in
push
pushf
call
lock
sbb
adc
mov
and
jb
pop
adcb
lea
push
into
pop
mov
mov
lods
scas
add
lret
jne
cmpsl
jnp
das
into
dec
out
jmp
xor
pop
sbb
mov
into
lods
sub
fs
dec
jae
stc
jae
insb
sarl
cmpsb
jmp
sti
inc
mov
mov
mov
repnz
xchg
inc
jne
insb
aam
jecxz
pushf
mov
das
mov
fwait
stos
and
xchg
testb
xor
rolb
out
inc
lret
add
in
mov
and
movsl
and
mov
sub
stos
mov
mov
xor
dec
hlt
lret
test
dec
into
aam
in
add
fbld
add
sub
dec
arpl
repz
outsb
cli
fwait
xor
inc
or
or
push
fwait
scas
cmp
xor
jno
lcall
mov
jg
jbe
lret
test
dec
call
sbb
lods
jns
jg
unpckhps
dec
imulb
lcall
sub
into
je
cmp
adc
pushf
call
ret
inc
pushw
jge
ja
cmp
push
dec
pop
or
outsb
scas
cltd
in
jl
lcall
lock
xchg
dec
sub
sub
loope
dec
shrl
dec
shr
ffreep
sbb
pop
cli
movsb
das
adc
sbb
adc
mov
aam
insb
xor
jmp
into
push
xchg
fnstenv
xchg
fnstcw
std
sti
xchg
ret
and
push
jg,pn
mov
stc
jle
addr16
lcall
pushl
pop
cmp
add
add
or
fstpl
rclb
xor
cmc
fld
add
mov
push
out
sahf
ds
pop
call
in
jns
dec
mov
decb
out
jl
push
sbb
push
std
test
and
lret
sub
cmp
mov
jecxz
roll
jle
addr16
sbb
pop
sub
pop
mov
aad
add
jb
mov
test
inc
push
or
sbb
inc
repnz
pop
jp
lret
clc
ljmp
jbe
ftst
mov
in
je
and
lcallw
xor
or
pop
or
pop
mov
dec
pop
and
ret
add
cs
test
pop
loope
mov
xor
sti
lcall
lcall
adc
insl
push
movsl
ljmp
jnp
subl
cmpsl
cltd
jb
fwait
mov
loopne
popa
push
movups
in
insl
mov
mov
outsl
gs
test
dec
aad
dec
call
mov
sahf
movsl
mov
mov
jecxz
jmp
setno
es
and
repz
ficoms
fimull
cld
pop
sti
fwait
or
and
lods
sub
mov
lret
dec
out
lock
mov
decl
imul
sub
jno
push
test
out
es
jmp
inc
mov
rorb
sarl
pushf
jmp
jl
mov
sub
inc
insb
mull
add
pop
insb
jns
and
adc
cmp
out
push
movsl
ljmp
xor
cmp
js
je
sbb
adc
movsb
dec
pop
out
enter
pop
inc
pop
rcll
or
fnstenv
jb
lcall
out
cmp
bswap
xor
xor
mov
pop
dec
jo
test
rcrb
fsubl
lcall
sbb
int3
test
xchg
xor
inc
adc
scas
cld
and
loopne
and
into
fsub
jg
or
mov
dec
stos
sbb
push
mov
shll
iret
jg
push
fnstenv
ljmp
sub
lcall
sbb
and
outsl
test
add
and
dec
or
pop
xchg
mov
add
movsl
mov
rcll
xchg
fcoml
andb
dec
call
stos
ret
cli
rcrl
cmc
or
imul
mov
out
adc
sbb
adc
addr16
cmc
bound
sub
xchg
or
sbb
adc
cmpsb
cmp
sbb
mov
pop
mov
cld
movsb
ret
cmpsb
outsb
add
ficompl
mov
lret
in
out
xchg
jecxz
dec
mov
je
imul
sbb
xlat
pusha
pop
lret
movsl
hlt
mov
sub
sbb
es
jno
lret
xchg
hlt
mov
out
mov
call
movsb
adc
sti
mov
dec
cltd
mov
sbb
push
push
lock
xchg
icebp
lcall
test
or
insb
add
addl
adcb
fwait
cmp
inc
inc
test
fisubrs
add
push
jae
mov
lods
ds
mov
rorb
fdivl
lock
mov
dec
dec
aad
in
xor
cwtl
popa
mov
arpl
mov
mov
sbb
popa
into
and
xlat
dec
arpl
in
pop
sub
decl
add
and
inc
adc
je,pt
stos
lahf
mov
enter
aad
test
je
lcall
aas
repnz
mov
dec
jmp
xchg
imul
or
mov
adc
mov
and
adc
inc
shrl
and
push
sub
sbb
addl
jns
fmul
dec
out
xchg
xor
rorb
push
sbb
xor
and
or
mov
sub
leave
push
leavew
outsl
cs
loopne
stos
cmpsb
xor
fs
addr16
insl
popf
xchg
push
push
sti
push
inc
test
mov
mov
or
mov
jp
xchg
mov
mov
test
ret
add
jae
xor
inc
sbb
inc
outsl
mov
shrl
sub
xor
mov
into
test
pop
jo
mov
sahf
sbb
adc
sbb
int3
pop
aas
jmp
pop
or
mov
test
sbb
es
dec
sub
jmp
or
jns
popa
pop
syscall
mov
outsl
xchg
sub
mov
xor
pop
sub
pop
outsl
mov
inc
insb
jecxz
xchg
sub
aad
hlt
and
jp
fcom
pop
lock
mov
and
movsl
sbb
adc
lahf
movsl
xor
xchg
or
mov
fdiv
xchg
jb
fwait
mov
mov
mov
adc
pop
dec
xor
pusha
lret
filds
das
dec
sub
call
xor
pop
pop
imul
jae
sbb
aad
xchg
insl
jne
adc
cld
cmpsl
ret
call
xor
mov
jb
les
pusha
jno
adc
je
aam
bound
and
std
int3
or
add
mov
int
lcall
dec
call
or
xchg
das
jne
pop
add
push
adc
in
adc
inc
mov
sub
mov
mov
and
jns
jl
fs
add
jbe
in
adc
adc
out
sub
pop
test
lret
nop
cmp
jg
pop
test
rorb
xor
push
negl
jae
xchg
test
sub
mov
mov
jnp
jecxz
roll
test
or
dec
leave
pop
stos
xlat
rorl
push
jmp
out
mov
add
movsl
and
mov
push
pop
mov
testl
lcall
dec
xchg
jno
mov
movsl
xor
pushf
jmp
fwait
sub
fadd
repnz
dec
shll
ljmp
adc
dec
sub
test
xlat
dec
jg
pop
pop
in
bound
xor
test
sub
sub
lcall
rcll
lods
imul
shlb
clc
mov
call
mov
mov
adcl
and
inc
mov
or
cmp
jg
lahf
or
mov
je
jle
leave
jno
lret
mov
mov
lcall
rorl
rcrb
mov
sub
das
in
movsb
mov
push
and
fwait
xchg
fnstenv
mov
fstl
adc
add
adc
cmp
push
mov
mov
fmulp
ja
in
jns
inc
sahf
inc
sub
push
mov
add
mov
mov
call
mov
mov
sub
data16
jg
or
loope
mov
pop
xchg
cmpsl
jne
jl
push
aas
ja
lahf
dec
xor
adc
jp
push
ret
subl
imul
test
mov
mov
and
mov
or
and
lods
sub
movsl
je
rorb
dec
mov
ficoml
call
out
outsb
cli
and
sti
dec
inc
mov
mov
test
mov
pop
xor
mov
pushf
in
mov
lcall
add
int3
and
inc
jae
jo
cmp
jns
pop
rcl
loopne
sbb
lret
sub
rorb
loopne
and
outsl
or
rcll
repz
pop
push
or
ljmp
dec
jnp
or
call
and
mov
lret
repnz
dec
call
jne
cmpsb
rorl
mov
in
jo
adc
push
call
pop
jne
inc
push
pop
and
rcr
add
pop
scas
xchg
call
adc
inc
pop
shll
inc
push
jbe
jo
das
jns
xor
jne
inc
fwait
loope
mov
into
insl
sub
push
mov
ror
jp
sti
test
outsb
lahf
cmpsb
and
rorl
pushf
and
faddl
and
cmpsl
xchg
mov
pushf
jmp
outsl
daa
xchg
pop
jne
pop
add
call
sbb
lods
mov
cmp
inc
cltd
inc
sub
push
mov
push
pop
dec
out
in
dec
in
mov
push
in
fisubl
cld
pop
jecxz
or
and
lods
sub
dec
insb
sarl
out
inc
add
pop
sbb
aas
hlt
add
fstps
pop
cmp
mov
sbb
sbb
add
xchg
jns
xchg
mov
mov
rolb
push
loop
sub
roll
lock
mov
push
mov
mov
mov
push
lods
cmpsb
cmp
shll
inc
jmp
or
popl
adc
int
rorb
jmp
jp
xchg
cwtl
pop
pop
mov
inc
pop
dec
push
or
ljmp
jo
into
pop
sbb
mov
shll
dec
mov
out
mov
pop
cmc
movsb
inc
xchg
push
insb
inc
xchg
and
faddl
sbb
xchg
cltd
or
mov
inc
mov
push
enter
pop
jno
lret
out
and
xchg
xchg
add
fwait
loope
mov
jno
enter
jp
pushf
inc
mov
and
push
cmp
lock
mov
cmp
push
movsl
cwtl
pop
xor
mov
cmp
mov
mov
and
fwait
mov
in
dec
push
xor
sti
add
mov
cltd
cmpsl
pop
in
and
inc
insl
jae
add
clc
dec
in
fwait
imul
mov
cmp
std
cmp
jne
fildll
mov
inc
out
cmc
jecxz
mov
jl
push
in
fimull
cld
pop
sbb
mov
int
js
lods
sub
pop
adc
lcall
lcall
movsl
roll
call
dec
roll
mov
fnstenv
mov
dec
xchg
addr16
andl
mov
push
add
mov
mov
rcrb
push
inc
push
push
ljmp
dec
mov
mov
lahf
ds
inc
inc
test
incl
inc
sub
pusha
aam
or
mov
outsl
call
mov
mov
inc
jg
mov
push
push
jmp
mov
in
out
clc
mov
fisttpl
xchg
dec
stos
imul
rclb
hlt
jg
fcoml
in
mov
xchg
mov
rorb
xor
stos
dec
roll
adc
or
int
int3
stos
pop
xchg
movsl
adc
and
jge
pop
fcoml
popf
dec
call
jecxz
dec
fisubrs
test
out
jp
pop
push
xlat
das
mov
mov
xchg
inc
aas
adcl
inc
in
mov
sub
outsl
jp
fst
xchg
jmp
fsubl
repz
std
int3
or
das
xchg
out
cli
pop
stos
jmp
frstor
lret
xor
jb
dec
call
loope
dec
mov
mov
dec
roll
lret
ret
sbb
repnz
fwait
call
insl
int
jmp
xorb
loopne
mov
cwtl
dec
roll
xor
clc
sub
or
jb
pop
sbb
into
mov
dec
and
xchg
and
sbb
popf
or
adc
in
int
or
pop
jl
jbe
xchg
jb
mov
jmp
push
into
jg
add
mov
movsl
inc
mov
cltd
int
daa
jb
jne
or
or
xchg
xchg
addl
push
sbb
mov
mov
mov
std
mov
out
jl
or
xchg
ret
into
add
fdivr
adc
inc
push
add
aam
fwait
pusha
inc
inc
test
add
xchg
call
bnd
mov
xchg
jecxz
loop
adc
inc
lea
sbb
cmpl
xchg
mov
xor
gs
shll
pop
xchg
fadds
jmp
dec
mov
mov
sbb
cld
es
jnp
nop
mov
adcb
rcrl
jmp
xchg
sbb
ja
fistl
call
fsubl
sbb
adc
or
icebp
ror
dec
mov
pop
roll
and
ret
cmp
dec
sub
gs
pop
pop
out
add
pusha
popf
jae
adc
jns
mov
sub
pop
sub
mov
jp
jne
or
lods
call
add
pop
inc
adc
xchg
xchg
jbe
lret
stc
push
xor
sbb
dec
lock
fisubl
mov
stos
and
mov
aad
push
out
jbe
aam
jp
mov
sub
js
out
jmp
andb
stos
daa
enter
shl
lret
hlt
mov
loopne
cmp
lcall
jne
or
mov
dec
adc
stos
mov
sahf
sub
pop
add
sbbl
mov
mov
loop
lods
sbb
mov
xchg
sbb
lret
stc
in
clc
or
mov
dec
pop
fiadds
push
inc
jmp
dec
fisttpl
dec
roll
lods
mov
sub
loop
or
xchg
into
push
push
jns
mov
push
rcrb
jae
inc
mov
xchg
test
inc
dec
popa
jecxz
cmp
pop
ljmp
xor
add
push
jno
hlt
icebp
mov
pop
dec
js
pop
jne
test
es
adc
jl
mov
in
je
int3
stos
movsl
dec
cmpsl
les
dec
lret
pop
hlt
je
inc
lods
pop
mov
insl
fwait
lret
sub
push
mov
insb
inc
pop
in
bt
call
loop
or
dec
call
loopne
aas
pop
imul
mov
jae
mov
stos
adc
js
dec
xchg
leave
out
out
mov
mov
in
cwtl
jns
xchg
mov
and
jmp
lods
pushf
add
cmpsb
dec
cli
add
lock
mov
inc
call
inc
xor
pop
xchg
stos
add
dec
lret
pop
sbb
out
frstor
mov
mov
int3
dec
out
push
add
fwait
xor
loopne
cld
in
test
adc
cmp
ljmp
push
insl
cmp
mov
jmp
xchg
dec
mov
in
iret
icebp
popa
pop
xchg
jg
adc
ficomps
out
lods
ret
into
popa
mov
ljmp
repnz
push
inc
sub
repnz
xchg
rorb
fucom
adc
jge
or
lea
sub
adc
add
call
dec
jge
adc
fsubrp
sarb
sbb
insb
and
pop
and
pop
test
in
mov
pop
xor
ljmp
or
lcall
dec
