add
add
jne
dec
add
add
insb
add
add
je
add
add
jb
popa
add
add
outsb
add
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
popa
add
add
outsb
add
add
je
imul
push
add
je
insb
add
add
dec
add
je
push
add
popa
add
imul
add
add
add
jne
je
je
outsl
add
inc
add
add
jb
outsb
add
je
add
popa
add
add
add
outsb
add
outsl
add
imul
outsl
add
add
add
dec
add
data16
push
add
js
je
add
add
inc
add
je
je
outsl
add
dec
add
add
je
add
inc
add
je
je
outsl
add
inc
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
dec
add
insb
add
add
je
add
dec
add
popa
add
je
imul
push
add
je
insb
add
push
add
js
je
add
inc
add
je
je
outsl
add
push
add
js
je
add
add
inc
add
popa
add
push
add
js
je
add
add
inc
add
je
je
outsl
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
inc
add
arpl
add
add
add
imul
add
je
push
add
js
je
add
dec
add
insb
add
add
je
add
inc
add
jo
push
add
jb
imul
add
popa
add
add
add
add
outsb
add
arpl
lahf
gs
movsl
add
mov
add
or
add
pop
add
or
add
add
add
add
add
add
repz
add
add
add
add
add
add
add
add
add
jb
dec
add
add
add
pusha
add
pusha
add
add
enter
cmp
add
add
add
add
add
adc
dec
add
sahf
add
add
adc
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
adc
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
dec
add
add
add
add
add
add
add
sbb
jae
outsl
add
add
add
add
add
add
add
pusha
add
add
add
add
add
add
sbb
add
add
add
add
mov
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
lods
add
dec
add
add
add
add
fiaddl
inc
add
and
add
sbb
xchg
add
add
mov
mov
mov
dec
add
add
dec
add
add
add
add
add
popl
outsb
add
add
xor
add
add
cmp
sub
sbb
dec
add
push
add
add
jle
testl
loop
jnp
jg
addl
outsl
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
mov
dec
add
dec
add
add
inc
add
add
dec
add
add
add
add
add
add
add
push
add
add
add
sbb
add
add
add
add
add
add
add
xor
dec
add
add
add
add
add
add
dec
add
add
add
and
call
push
dec
add
add
add
add
incl
mov
dec
add
add
add
add
push
add
add
add
adc
dec
add
add
add
push
add
add
sbb
dec
add
add
add
add
dec
add
xchg
add
add
add
add
mov
add
add
dec
add
add
add
arpl
sub
add
cmpsl
add
add
add
add
add
pusha
add
dec
add
add
add
add
dec
add
add
mov
add
push
lea
add
dec
add
lea
mov
add
add
add
add
add
bound
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
out
mov
in
jno
xchg
popa
jae
push
cmp
lahf
and
andl
mov
push
enter
xchg
adc
mov
loopne
daa
mov
xchg
cmp
inc
cmp
je
jne
adc
adc
jnp
fcmovne
mov
dec
xor
ret
push
mov
fadds
push
insl
lret
push
cwtl
inc
testl
xor
mov
jg
fxch
dec
addb
lret
cmc
mov
jbe
in
test
cli
ds
jb
mov
inc
test
lds
sub
cli
scas
add
push
pop
js
and
mov
lea
fidivs
int3
mov
mov
or
fadds
int3
dec
mov
in
loopne
xchg
xchg
outsl
push
test
adc
cltd
in
out
fs
sbb
ret
xor
xor
pop
stc
xor
popa
and
adc
xor
sub
push
stc
arpl
dec
lcall
pop
adc
jecxz
xor
jno
sbb
subl
in
adc
lods
cmpsl
or
and
fildl
fbld
stos
dec
fdivp
pop
lds
cmp
xor
pushf
push
mov
outsl
and
ss
lock
sub
fadd
aad
lret
push
movsl
ret
icebp
mov
mov
stos
or
mov
jge
movsl
adc
pop
cmp
outsl
scas
mov
popf
mov
jle
sbb
mov
mov
mov
adc
xor
adc
mov
popa
xchg
xor
repz
pop
xor
and
sub
mov
xchg
fildll
sub
cmp
xchg
sarb
xor
mov
adc
aaa
pop
jno
cs
ret
or
fists
pop
adc
push
pop
mov
rorb
cmpsb
in
pop
pop
jne
sub
jge
inc
inc
add
sub
outsb
and
outsl
add
jno
mov
sub
mov
adc
pop
fldlg2
in
sbb
jo
outsl
popa
jne
and
jb
fidivs
push
dec
ret
jle
jo
popa
add
test
jle
fmulp
iret
xchg
nop
testl
aaa
test
stc
sub
jp
jbe
lods
dec
lret
fcmovb
test
addb
inc
call
mov
mov
push
inc
loopne
cwtl
pop
add
in
sbb
sbb
mov
mov
xor
decl
icebp
mov
mov
rol
clc
lea
add
add
add
add
rolb
add
add
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
push
mov
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
push
call
mov
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
pushl
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
shrb
scas
shll
imul
bswap
aas
in
out
xchg
dec
test
outsl
movsl
xchg
push
popl
jne
fists
out
and
adc
das
in
imulb
push
jg
outsl
movsl
inc
dec
cmovne
insl
imul
pop
aas
pop
ss
pop
orb
aam
jmp
jecxz
movsl
ficoms
sub
add
out
push
cli
mov
sti
stos
in
in
pop
or
xor
movsb
mov
jle
mov
xchg
or
add
std
es
sahf
xor
aam
imul
in
in
adc
sar
mov
call
mov
inc
mov
leave
pop
push
lock
mov
dec
xor
ret
push
fidivs
in
fimull
test
adc
dec
jp
aas
nop
iret
sbb
movsb
inc
mov
and
cmpsl
and
pop
pop
sub
lods
std
dec
or
mov
pop
sbb
movsl
inc
jne
scas
push
das
aaa
in
movhps
loopne,pt
cmc
fcmovb
dec
lock
mov
push
push
mov
adc
push
cmp
int
fucom
in
xor
aas
lea
jg
or
in
xor
inc
sti
je
fs
mov
dec
jle
dec
mov
ss
and
or
pop
inc
clc
add
scas
aaa
xchg
push
pushf
dec
daa
lods
dec
movsb
pop
addl
or
cs
mov
adc
xor
pextrw
aas
cmc
das
in
xchg
dec
test
outsl
movsl
lahf
push
popl
jne
fists
out
and
aas
cmc
das
in
xchg
dec
test
outsl
movsl
lahf
push
dec
ret
lock
sub
xor
shll
mov
sbb
or
or
lcall
sbb
lcall
add
dec
cmp
int3
jge
rorb
testl
out
cmp
fcmove
pop
out
ja
push
jp
xchg
push
call
push
or
ficomps
ret
leave
push
mov
ja
mov
sbb
or
xor
pusha
cmp
shrl
xchg
arpl
flds
jnp
negb
mov
dec
sbb
push
hlt
lds
fwait
cmp
and
out
loopne
std
xor
mov
leave
int3
jo
add
dec
xchg
pop
fmuls
or
add
and
ds
arpl
xor
jg
xchg
push
adc
adc
in
lea
das
scas
test
aad
cwtl
and
fisttpl
inc
sub
xchg
jo
pop
aas
or
cmp
mov
adc
cmpl
cmp
test
dec
sbb
bound
xchg
jle
leave
idivl
push
lock
xchg
ret
sbb
jae
scas
nop
test
xorb
mov
iret
push
nop
es
pushl
mov
sub
popa
xchg
je
lret
aam
add
fstpt
mov
jecxz
lods
stos
or
test
fadds
push
notl
in
hlt
daa
mov
pop
lds
leave
imul
les
in
mov
add
ljmp
inc
and
mov
mov
in
lret
test
inc
mov
add
push
shl
jns
sub
cmp
adc
push
movsl
cli
jns
insb
fdivrs
cmp
movb
in
mov
stos
sbb
mov
xchg
dec
int
mov
inc
imul
and
add
in
pop
sbb
dec
mov
inc
push
js
iret
jecxz
mov
lock
push
out
inc
xor
lods
push
xchg
test
movb
lock
imul
push
rorb
es
fsubrp
sub
cwtl
shl
movsl
pusha
mov
out
jbe
xchg
and
lahf
pushf
and
addb
je
and
mov
mov
jbe
mov
push
mulb
ret
ficompl
std
mov
or
pop
sbb
dec
bound
cmp
xor
lods
shlb
push
inc
daa
xor
xor
ljmp
jno
out
xchg
jo
lret
out
pop
jbe
test
bound
jle
cmpsb
pop
xchg
cs
mov
sub
subb
js
decb
sub
xor
or
fnstenv
ret
adc
push
sarb
push
cmc
jmp
sar
cmp
notl
cmpsb
fldt
sbb
sbb
dec
mov
cmc
sub
push
adc
pusha
xorb
test
xor
ljmp
in
add
test
inc
jecxz
lds
add
sti
leave
add
pop
cs
sub
cltd
shll
dec
xchg
mov
adc
imul
dec
ficoml
pop
sub
mov
xor
pusha
dec
dec
aaa
loope
adc
scas
les
mov
rolb
ljmp
call
sbb
ljmp
fwait
leave
imulb
mov
adc
sbb
xor
rclb
cmp
sub
int
sahf
sub
mov
iret
push
sbb
movsb
xchg
xor
lds
pusha
pop
cmp
jge
mov
jmp
fistpl
push
loop
add
in
dec
jecxz
jb
popl
add
fcmovu
or
mov
push
jb
sub
push
and
fiaddl
int
lahf
insl
stos
sbb
popf
xor
mov
pop
xchg
lret
sbb
mov
stc
fcmovne
jg
mov
sahf
dec
insl
rcll
mov
mov
es
cmp
iret
push
dec
repnz
pop
hlt
adcb
and
shrb
mov
arpl
add
iret
xor
cmp
mov
jns
push
mulb
xchg
and
hlt
xchg
jb,pt
popf
clc
fsubrs
push
jl
mov
rcl
fs
test
adc
dec
mov
xor
pop
xchg
test
and
inc
and
cmp
mov
xchg
in
pushf
mov
add
rolb
in
jbe
mov
add
out
test
icebp
mov
test
mov
inc
mov
sub
lock
arpl
mov
cwtl
push
ss
adc
lods
add
cmp
sbb
ljmp
adc
mov
push
fimuls
fwait
or
rolb
out
roll
jle
inc
notl
test
mov
cmp
xchg
out
and
xor
cmc
pop
push
inc
dec
dec
es
mov
scas
mov
pop
or
fdivrp
pop
rorb
divl
out
adc
jo
mov
push
jl
mov
subl
jns
and
ljmp
mov
loopne
cmp
or
or
add
icebp
pop
xor
mov
cmp
rcrl
mov
cmpb
jg
xchg
test
lret
and
sub
out
xchg
dec
cmpsb
inc
fmuls
jne
fdivl
int3
add
cmpsl
popa
dec
sub
ret
inc
aam
pop
aaa
push
lret
call
pop
inc
dec
lret
dec
push
push
jl
jp
pop
jae
mov
mov
adc
nop
push
mov
loope
adc
das
stc
insb
out
mov
mov
xchg
xchg
cmc
subb
mov
rcl
call
fwait
push
ljmp
sub
test
arpl
mov
movsl
sub
xor
lods
std
fcoml
add
lea
lods
pop
push
fsubrs
lock
addr16
add
inc
push
roll
sub
jae
mov
push
sub
add
xchg
das
subb
out
mov
adcl
je
shl
lds
gs
push
pop
inc
xor
inc
sbb
mov
mov
fildl
jbe
mov
je
mov
aaa
scas
js
icebp
lret
ja
iret
jp
iret
pop
movsl
pop
movsb
pusha
mov
mov
jl
xor
roll
in
inc
mov
or
xor
xchg
mov
and
loopne
stos
sbb
rclb
push
sub
int
out
mov
mov
add
jp
lret
andl
jge
subb
jno
cmp
sub
fcomp
xchg
clc
or
cmp
xor
cs
jno
repnz
xchg
shl
fwait
int3
jl
sub
repz
pop
decl
sahf
add
inc
mov
mov
cmpsl
fs
mov
jae
daa
sbb
mov
pop
cmp
ds
fisubs
mov
or
out
add
in
inc
cld
adc
adc
arpl
sub
in
sbb
xchg
mov
scas
loop
sbb
hlt
popf
in
push
xor
int
push
mov
faddl
pop
xor
mov
jle
xor
loope
test
and
and
jle
je
pop
popa
lock
jle
cmp
and
les
jle
int3
cmp
mov
jp
mov
mov
push
subb
stos
pop
inc
inc
arpl
jns
inc
fiaddl
cmc
xchg
pop
mov
add
pop
dec
pop
call
fs
in
les
mov
pop
into
adc
adc
outsl
filds
cld
xchg
add
gs
scas
pop
adc
sbb
imul
sbb
dec
sub
and
pushf
mov
xchg
sahf
in
mov
sbb
rol
lea
and
jne
daa
mov
scas
lea
inc
and
movsb
push
jl
add
pusha
into
clc
stos
dec
sbb
cltd
sub
scas
das
lcall
int3
clc
add
cwtl
dec
movaps
xor
xchg
adcb
mov
dec
gs
movsb
jb
rorb
dec
xor
test
fsin
iret
loop
mov
cmp
cli
mov
lods
dec
sbb
mov
int3
outsl
jns
push
adc
jecxz
dec
mov
sub
in
and
pusha
sub
out
push
adc
adc
subb
add
ret
jnp
rcll
cmp
xor
test
test
push
pop
movb
adc
mov
pop
or
inc
push
xchg
inc
filds
xor
cli
das
xchg
adc
xchg
mov
js
jle
xor
mov
lahf
push
sbb
in
xchg
xor
lock
mov
xchg
rol
loope
xor
push
movsl
cwtl
std
mov
pop
mov
fs
rcll
jbe
sti
cli
mov
inc
loope
push
cmpsl
jle
xor
scas
stc
cmpsl
in
jno
xchg
repz
ret
int
and
not
cs
inc
lcall
out
js
jne
lods
mov
inc
dec
adc
add
inc
push
jb
ljmp
pop
and
out
rorl
mov
push
dec
inc
mov
sub
xchg
add
xchg
push
xlat
mov
adc
jae
inc
js
push
lret
outsb
sub
xchg
pop
je
xchg
lret
inc
mov
or
nop
inc
incl
sub
mov
xlat
mov
js
cli
mov
sbb
sbb
and
pop
xor
mov
mov
sub
lret
shlb
ficomps
div
mov
enter
or
pusha
mov
jle
loop
rorb
andb
out
mov
popf
push
push
or
insl
or
and
imul
lcall
movsb
fldenv
je
les
mov
jae
jnp
push
pop
mov
xchg
push
fisubs
stc
arpl
int3
test
mov
sbb
insl
sti
add
repnz
out
fwait
or
push
mulb
adc
fidivs
cmp
push
sti
aad
rorl
and
lret
lods
scas
sbb
push
jecxz
pop
mov
scas
push
fsubl
or
xchg
xchg
jge
ja
ljmp
ja
cmpsl
clc
cmc
sub
mov
add
xchg
mov
inc
lods
lahf
ss
mov
jbe
xor
int3
fsts
iret
mov
pop
je
cmpsl
daa
pop
mov
pop
and
fisubrs
xchg
paddw
dec
mov
dec
fcoml
out
jecxz
dec
xchg
lea
push
mov
sbb
out
pushf
dec
jmp
cmp
add
cli
add
push
mov
sbb
cmpsb
je
scas
adc
sbb
xchg
xor
adc
roll
jnp
dec
aas
cmpsb
xor
pusha
push
inc
mov
mov
jo
movsb
sub
push
jmp
testl
pop
jg
push
and
mov
cmp
les
ret
lock
add
pop
lock
cmp
mov
bound
and
repnz
test
sub
mov
sub
xchg
mov
mov
jns
adc
lods
jae
aaa
stos
push
xchg
je
mov
mov
jae
sub
in
rorb
adc
cmc
pop
sahf
xor
enter
xor
ret
loop
lods
add
push
adc
dec
xor
insb
dec
scas
mov
repnz
lods
dec
iret
sbb
and
js
shr
gs
mov
sub
imul
ljmp
mov
mov
mov
mov
xchg
mov
or
and
addr16
or
jmp
aas
popa
dec
add
dec
xor
mov
mov
fisubrs
repz
repnz
jg
out
pop
sub
push
adc
das
mov
icebp
fistpll
or
in
mov
sub
pop
pusha
enter
aad
sbb
cld
fistpl
push
sub
loopne
imull
add
ret
mov
ret
arpl
je
and
cld
sub
jae
mov
push
inc
add
or
and
adc
mov
push
pop
call
add
mov
mov
push
xor
mov
jbe
xor
push
pop
xchg
insb
lods
shl
jmp
sub
push
cmc
mov
dec
push
in
std
popf
mov
sub
frstpm(287
pop
jae
push
insb
xchg
vmread
icebp
outsl
iret
aaa
jle
notl
pop
pop
into
push
cmc
test
mov
mov
or
jecxz
iret
pop
mov
add
jecxz
lcall
sbb
jg
dec
into
push
int3
fxtract
xchg
mov
jno
cmp
gs
aas
mov
adc
cwtl
xchg
and
mov
mov
mov
fdiv
sbb
sti
jle
out
lods
mov
fmuls
sub
popa
call
int
push
mov
xor
xchg
lret
ret
inc
test
out
es
rcrb
data16
outsl
scas
mov
push
hlt
sbb
push
mov
addr16
jecxz
movsb
inc
mov
cwtl
subb
stos
mov
ffree
ss
push
dec
dec
push
movsl
test
xchg
aam
and
pop
lods
pop
sub
push
inc
popf
xchg
mov
and
cmpsl
scas
adc
das
jmp
loop
jmp
jecxz
es
mov
xchg
push
fisubrl
shl
popl
or
pop
rol
xlat
push
push
leave
enter
les
pop
fs
js
cwtl
sbb
lret
mov
xor
mov
notl
test
addb
bound
arpl
add
repz
cmp
ret
xor
lock
xchg
cld
mov
les
inc
xchg
call
mov
cs
add
and
in
ror
or
jge
mov
pop
bound
or
mov
or
jge
add
scas
sbb
sub
pop
push
shl
ret
bound
mov
push
mov
push
push
mov
or
call
cmp
sbb
adc
jl
cmp
pushf
ds
xor
pop
jle
addr16
sarl
mov
xor
cmp
cli
and
pop
xor
fwait
data16
mov
push
or
in
jp
push
sub
and
inc
or
mov
imul
or
test
adc
mov
cmp
push
clc
jb
cmp
repnz
shlb
daa
inc
in
add
xchg
dec
mov
xor
dec
push
xchg
les
push
pop
sbb
mov
jbe
subb
push
cmpsb
push
es
pop
iret
jmp
aam
sub
cmpsl
add
test
cltd
fdiv
int
jecxz
mov
or
mov
pop
loop
jle
clc
rcl
dec
xchg
pop
mov
add
loop
lods
jle
xchg
outsl
jae
cmpl
scas
shll
lea
xchg
cmp
int
and
xor
insb
fsubrs
repz
loop
movsl
cmp
jle
aad
sbb
ds
jge
ja
xor
insb
popf
jae
outsl
iret
jbe
inc
mov
and
fldcw
push
mov
sub
addr16
jno
stos
xchg
arpl
xchg
mov
sub
outsb
stos
jecxz
test
mov
ss
leave
inc
fldcw
sub
mov
push
fstpt
testb
cmovb
shrb
xor
add
cmc
mov
insb
cmp
fildll
sahf
dec
push
add
dec
sbb
sub
mov
scas
ljmp
icebp
inc
inc
les
fs
and
add
leave
nop
adc
fcoml
stos
int3
xor
mov
push
rcrb
push
jge
mov
sarl
jae
pop
popa
xorl
ss
cmp
mov
dec
xchg
mov
jl
pop
sarl
xor
insl
xor
out
jg
lret
loopne
xchg
inc
xchg
popw
adc
push
loope
and
gs
add
loop
sub
mov
adc
test
std
test
and
xor
repnz
sbb
lock
dec
xchg
sbbl
mulb
lahf
cmpsb
adc
or
push
cltd
insl
push
pop
mov
and
jmp
leave
xchg
xor
add
stos
pop
lahf
idiv
cmp
sub
jp
push
mov
adc
movsb
mov
add
dec
pop
and
pop
mov
loope
rcrl
add
adc
jmp
fcmovbe
pop
mov
add
int
cld
mov
sbb
mov
fxch
mov
lcall
movsb
movsb
sbbb
mov
adc
jecxz
mov
subl
jmp
daa
in
push
in
dec
sahf
notl
aaa
inc
rcrb
je
jnp
out
rorl
nop
xchg
inc
or
fisttpll
inc
pop
cmp
push
inc
xlat
lds
cmp
daa
dec
adc
loop
cmp
dec
jnp
dec
or
xchg
cltd
xor
sarb
sarl
pop
sub
pop
sub
mov
xlat
xor
mov
lods
xchg
aas
xor
ja
fdivrs
jbe
lds
or
aad
lock
cmc
jo
imul
rcrb
arpl
add
test
out
adc
pop
in
aad
jae
adc
xchg
xchg
iret
lods
aad
xor
adc
js
js
call
or
int
int
fsubrl
sbb
cwtl
dec
mov
les
push
sbb
loopne
xor
clc
stc
xchg
lcall
lahf
push
inc
orb
xlat
loop
int
cmc
mov
xor
mov
pop
pop
push
mov
fs
sub
dec
hlt
andb
and
inc
pop
mov
cmp
into
in
mov
inc
adc
xorl
out
lcall
gs
sbb
adc
add
push
push
adc
pop
mov
pop
add
pop
testb
adc
xchg
inc
adc
mov
sub
cld
sbb
inc
fdiv
add
setp
fadds
dec
and
xor
jmp
jg
cld
mov
movsl
and
fs
ljmp
xorl
lcall
ja
jmp
test
dec
insl
sbb
aad
xlat
adcl
popf
jecxz
imul
push
or
lds
rorb
jnp
test
icebp
into
jp
fdivl
shll
lods
push
push
dec
jb
sub
icebp
mov
sub
in
loop
inc
and
call
jmp
push
iret
dec
push
cmpsl
aad
jo
orl
out
mov
into
xchg
cmpsb
dec
test
dec
cwtl
inc
rdmsr
mov
sbb
repz
push
xchg
je
sbb
leave
mov
push
js,pt
fwait
xchg
addr16
call
jae
cmc
in
out
cs
mov
stos
and
adc
ja
pop
push
dec
stos
or
pushf
or
lea
mov
lahf
popa
std
fs
mov
xchg
movsb
sub
lods
bound
inc
mov
subb
gs
aam
ja
push
mov
mov
push
dec
add
and
in
repnz
fmul
lcall
js
and
mov
outsb
rcr
xchg
lods
test
loopne
pusha
flds
sbb
lea
and
sbb
jecxz
mov
or
push
or
mov
dec
mov
xchg
push
xlat
shlb
rcr
mov
loope
call
cli
rolb
pcmpgtw
push
loope
mov
movl
push
inc
cmpsb
ficompl
out
test
pop
iret
pop
mov
paddusw
imul
stc
inc
es
adc
subb
mov
pop
mov
or
scas
push
mov
jbe
or
adc
cmovo
pop
les
sbb
arpl
cmpsl
pop
push
mov
ja
dec
andl
xor
xorb
mov
adc
rclb
jle
or
push
clc
or
mov
cmp
int3
sub
jp
out
subb
adc
jne
push
mov
xorl
pop
mov
popa
sti
mov
int3
rclb
cs
add
sub
cld
xlat
adc
inc
xchg
cmp
pop
orl
ds
or
mov
fstl
inc
aam
sub
mov
pop
cs
mov
push
loopne
push
push
adcl
ret
movsl
mov
cmp
ror
jno
cli
dec
push
mov
aad
xor
xor
add
mov
sub
ljmp
or
inc
pusha
repz
fs
adc
fucomi
or
lock
aas
pop
enter
jmp
mov
push
dec
jae
jmp
aam
movsb
adc
mov
mov
mov
sub
fdivrl
adc
dec
pop
stos
jno,pn
jecxz
data16
shrl
dec
jmp
rolb
lcall
pushl
pextrw
aas
cmc
das
in
xchg
dec
test
outsl
movsl
lahf
push
popl
jne
fists
out
and
aas
cmc
das
in
xchg
dec
test
outsl
movsl
lahf
push
mov
jne
ficoms
out
and
ss
sub
pop
xchg
push
test
pop
movsl
xchg
inc
aaa
jne
fists
outsl
and
xchg
cmc
das
xchg
sub
nop
pop
int
dec
daa
jge
insl
pop
cmpsl
jbe
inc
pop
cmp
fisttpll
int
cld
xchg
in
xchg
lods
pop
aaa
dec
daa
jl
insl
pop
sbb
push
sub
cmpsl
pushf
xchg
in
xchg
xlat
lods
pop
aaa
dec
daa
jge
insl
pop
sbb
push
sub
test
in
popf
mov
mov
jnp
push
xor
xchg
int
mov
push
push
inc
pop
xor
pop
repnz
mov
xchg
ljmp
aaa
or
mov
add
mov
pop
int
cmpsl
xor
push
jb
mov
push
xchg
fsubs
dec
out
lds
sbb
xchg
fnsave
adc
or
ds
call
xor
adcl
pop
sub
pop
cld
push
add
pop
lods
mov
mov
cs
add
inc
mov
mov
xchg
movsb
in
cmp
dec
xor
test
fucomp
into
and
pusha
js
out
mov
xlat
lods
cmp
aaa
dec
daa
jge
insl
pop
sbb
push
sub
cmpsl
std
xchg
in
xchg
xlat
lods
subl
push
and
xor
jp
dec
xor
les
mov
add
dec
or
fs
imul
shlb
aad
xchg
jno
mov
xchg
sub
je
jb
jg
inc
or
inc
fnsave
in
xchg
xlat
lods
pop
aaa
dec
daa
jge
insl
pop
sbb
push
sub
cmpsl
std
xchg
in
xchg
xlat
lods
pop
aaa
dec
js
shrb
scas
test
cld
pop
mov
mov
mull
jns
lea
lret
xchg
and
lret
rcrl
jbe
xor
dec
xchg
add
and
push
pop
xor
jp
testl
or
mov
xchg
not
inc
push
push
cmp
andl
lcall
xchg
insl
or
fucomp
sub
scas
mov
dec
fisttpll
call
inc
dec
repz
icebp
std
subl
mov
sub
stc
scas
popa
std
pushf
cmp
and
jp
or
movsl
add
lcall
push
insl
cli
mov
daa
jg
dec
jae
jb
lods
cmp
cmp
jns
inc
fdivrl
or
mov
mov
in
cmp
out
jecxz
sub
add
jno
mov
in
imul
fadds
cmp
pop
imul
lret
aad
outsl
ret
mov
outsb
stos
fsubrl
ret
bound
mov
iret
popa
jo
sbb
fld
cmp
iret
jge
psrlw
pusha
ret
fadd
div
sub
cltd
std
dec
inc
cmpsl
xor
es
pop
xchg
pop
xor
inc
mov
mov
mov
fwait
mov
and
xchg
pop
in
and
push
jbe
into
fst
lahf
movsl
fs
bound
pop
inc
mov
xchg
shll
in
xchg
push
aad
mov
or
outsl
pushf
add
xchg
mov
jp
stos
cs
icebp
mov
push
cld
pop
inc
lods
mov
aam
cltd
jg
rcrb
stc
jp
xchg
aaa
popa
mov
scas
jae
add
pop
frstor
mov
cmp
xor
out
or
sub
into
adc
gs
push
ret
int
ret
into
cld
mov
cmp
ret
inc
rolb
shl
mov
mov
sbb
dec
xchg
outsb
lret
mov
or
jmp
and
aaa
lret
add
je
mov
jb
lahf
pushf
mov
xchg
inc
cmp
jmp
insl
stc
or
sbb
jno
fdivl
out
push
add
push
fimuls
push
fdivrl
aas
sbb
ret
cld
aam
or
and
mov
pop
popa
xchg
push
movsb
sbb
ja
sub
cwtl
inc
rcrl
inc
push
dec
inc
test
ljmp
sahf
dec
sub
and
sbb
popa
dec
adc
subl
add
lods
add
lahf
in
cmpsl
inc
cmp
mov
dec
mov
enter
lret
inc
dec
pop
dec
pop
push
das
insl
mov
test
pop
cmovno
sbb
pop
mov
or
jmp
cmp
and
out
int
cmp
sbb
xor
and
pusha
push
stc
fsubrl
or
pop
cmp
stos
add
mov
xchg
mov
stc
les
sbb
fcoms
iret
call
movsl
jp
pop
outsl
stc
jecxz
or
out
cmp
add
add
or
pop
lret
xchg
iret
repnz
xchg
xor
in
inc
test
adc
mov
jo
out
std
sbb
pushf
dec
popa
mov
arpl
popf
jge
sub
sub
rcrl
fstpl
mov
mov
dec
ficoml
and
add
shll
pop
insb
jg
mov
jecxz
pop
test
pop
push
sub
jmp
and
enter
cli
sub
outsl
out
push
stos
pusha
inc
out
scas
push
nop
mov
daa
mov
add
inc
shll
and
arpl
and
dec
mov
mov
ljmp
fstpt
les
mov
add
bnd
repnz
bound
data16
mov
adc
test
dec
popf
cmp
ljmp
mov
adc
lods
std
iret
call
jae
mov
cmp
cmp
mov
clc
shll
push
daa
pushf
dec
cli
fiadds
loope
jmp
test
nop
incl
cmpsb
push
mov
fidivrs
stc
jnp
ja
popa
test
and
subl
out
fs
test
sub
pushf
fisubrl
dec
bound
into
mov
and
addl
cmpsb
mov
xchg
push
mov
les
subl
mull
pop
jbe
stos
cmp
jbe
imul
dec
cmp
pop
adc
out
push
scas
cltd
rolb
sbb
mov
lods
pop
mov
jg
icebp
cmp
jbe
sbb
add
inc
cld
mov
std
test
hlt
shl
jmp
lods
rorl
andl
imull
mov
push
stc
pop
movsl
mov
mov
outsb
adc
jo
sbb
or
daa
xlat
shr
aam
mov
cmp
mov
mov
and
fs
insb
popa
out
int
jle
in
or
imul
outsl
ss
jecxz
hlt
sbb
or
popf
mov
push
sub
push
jnp
and
push
ret
js
sub
sub
ljmp
xor
movhlps
mov
cmc
pop
sbb
stc
shlb
push
insl
fucomi
pop
xor
stos
arpl
ret
dec
mov
leave
xchg
mov
lcall
jge
stos
adcb
or
mov
dec
scas
xor
xchg
cmpsb
jnp
sahf
cmpsl
or
test
jno
mov
jns
mov
xchg
sub
cmc
dec
or
in
dec
in
add
xor
xor
pop
fisubrl
dec
divb
es
and
addr16
and
fimull
subb
inc
je
orb
jl
xchg
and
shl
dec
aaa
adcb
push
int
out
in
mov
cmp
adc
inc
jae
cld
sub
or
leave
mov
jne
and
xchg
sbb
push
repz
lcall
fisubrl
jge
outsb
mov
movsl
ret
mov
add
mov
cmc
xor
push
adc
inc
jl
push
push
mov
int
fsubrl
nop
das
data16
js
cltd
mov
cmp
sbb
mov
xor
in
rorb
imul
fcmovnu
in
ficoml
mov
js
pop
pop
inc
push
cmp
and
xor
push
pop
imul
mov
call
xchg
sub
xor
adc
decl
and
sub
xchg
xor
ds
das
icebp
aas
loopne
jbe
js
jne
mov
loope
adc
jmp
dec
jl
je
out
cmp
sbb
int3
mov
cmp
sbb
xor
inc
sarl
dec
cmc
lods
mov
aad
push
repz
mov
adc
test
cmp
cmp
subb
mov
inc
daa
jo
jbe
cld
bound
data16
es
jmp
xor
mov
sub
jo
cmpsb
dec
fwait
pop
mul
lods
sub
subl
in
icebp
scas
je
mov
xchg
stos
pop
repz
jge
push
arpl
roll
inc
lock
push
inc
es
dec
jno
dec
sub
mov
aam
and
mov
negl
cmp
dec
leave
mov
pop
inc
lods
decb
test
out
repz
loop
jge
jmp
out
outsb
leave
dec
sub
ror
or
or
shll
jl
jns
mov
sqrtps
jbe
testb
jno
dec
pop
andb
clc
jecxz
or
fadd
xor
push
pusha
cmp
and
loopne
lcall
or
repz
dec
test
lahf
or
mov
push
jbe
push
lea
js
xor
adc
add
in
jae
push
pop
or
cltd
add
pop
xchg
divb
mov
int3
rol
test
and
inc
rcll
push
aas
mov
lret
or
mov
pop
sub
scas
bound
mov
in
mov
repz
nop
xor
push
notb
test
jmp
mov
jno
sub
out
das
pushf
sub
aam
test
call
lcall
pop
mov
xor
push
bound
in
mov
rolb
cmpsb
pop
mov
movsb
jb
inc
cmp
pusha
push
andl
cmc
or
les
xchg
das
fistpl
fcoml
adc
sbb
adc
lret
andb
outsl
push
bound
lret
or
pop
in
lret
ljmp
lahf
mov
repnz
ret
inc
adc
clc
cs
adc
xor
out
movsb
adc
dec
shl
jmp
mov
mov
out
neg
pop
fstpl
imul
push
js
aad
jbe
mov
mov
test
test
cmc
push
mov
outsb
sbb
movl
cltd
pusha
aam
push
adc
or
jb
xor
sahf
add
cwtl
add
add
mov
inc
and
in
inc
sub
pop
lcall
loopne
cltd
js
push
xchg
jg
pop
adc
ret
cli
fdivrs
outsb
scas
ja
rcll
bound
jns
rolb
cmp
lds
movsb
add
bound
nop
movsb
cmp
or
ret
outsb
test
adcl
js
shlb
xor
fwait
mov
scas
xchg
sbb
lea
ror
and
fidivs
inc
imul
fldenv
and
inc
mul
mov
add
leave
jecxz
out
repnz
and
pusha
dec
js
xlat
pop
jne
int
add
les
xchg
pop
xor
dec
cmpxchg8b
mov
fcompl
jmp
or
jl
int3
adc
inc
repz
push
jns
in
sub
shl
cltd
in
cmp
popa
mov
lret
adc
stos
adc
fs
nop
sub
jb
xchg
mov
adc
lret
jnp
push
popa
pop
xchg
or
sbb
xchg
call
dec
or
mov
pop
lock
fs
jbe
push
iret
pusha
lea
mov
xchg
dec
gs
inc
jg
add
sbb
jg
sub
popa
push
aam
jno
mov
jb
sub
jge
push
push
xor
push
push
test
data16
dec
cs
cltd
push
in
sbb
insl
or
ret
push
mov
sbb
mov
stc
pop
divb
mov
mov
and
rcrb
pop
popa
push
lcall
testb
push
xchg
push
and
rorl
xchg
fdivs
lds
dec
dec
int3
out
add
mov
cltd
or
das
pusha
xor
fdiv
fnstenv
sbb
sbb
pop
jge
in
cltd
jge,pn
stos
mov
xrelease
in
in
cwtl
orb
and
loopne
aad
jmp
loope
in
repnz
cld
sysexit
out
mov
loopne,pt
pushf
push
in
shl
jae
xor
mov
dec
inc
sub
das
in
rcl
imul
xchg
dec
sbb
rcll
mov
mov
test
jnp
add
dec
add
addr16
lods
push
xchg
push
dec
jmp
int
pop
icebp
adc
subb
popa
sub
imul
push
pop
push
push
jns
leave
mov
mov
jbe
mov
sub
in
sbb
dec
popf
cmp
pop
xchg
dec
dec
add
aam
mov
fwait
add
out
aad
leave
jl
cwtl
xor
test
ss
bound
xchg
jnp
loop
daa
cltd
xor
fsub
leave
ret
pop
sub
in
testb
jmp
int3
mov
daa
push
fisubrs
loop
jmp
loop
aad
or
push
in
jo
sbb
pop
mov
push
mov
leave
dec
cltd
sbb
dec
bound
jge
mov
loope,pt
adc
xchg
scas
sbb
add
xchg
sbb
sbb
cmp
ja
push
push
insl
jecxz
pop
adc
repz
hlt
adc
mov
stos
or
popa
fstpt
fwait
adc
data16
inc
cmp
xchg
xchg
aaa
mov
xchg
pushf
fsubl
inc
out
xor
nop
adc
rorl
repnz
sub
dec
inc
daa
dec
popf
scas
push
fidivrl
into
in
test
pop
bound
test
mov
jae
adc
or
jmp
out
icebp
dec
push
arpl
mov
out
setno
cltd
aam
outsb
repnz
xchg
out
dec
std
mov
movsl
out
in
data16
std
xchg
dec
ss
test
aad
aas
loopne
inc
mov
mov
imul
mov
xor
mov
lods
test
test
fmulp
aam
or
test
add
out
or
xor
int3
dec
ret
in
mov
mov
outsb
call
pop
mov
les
pusha
xchg
pusha
mov
push
dec
dec
jl
dec
stos
out
sahf
rcr
movsl
inc
mov
repnz
cmp
jge
xorb
movups
pop
fwait
ja
pop
jnp
xor
adc
shlb
mov
stc
xor
xchg
pop
or
cmp
adc
enter
jnp
fdivr
push
or
push
inc
pop
xorb
cmp
mov
or
lds
push
fsubr
push
dec
lock
mov
mov
xlat
or
push
rcll
jge
add
push
divl
mov
lods
out
add
jg
js
pop
in
es
push
cmc
xchg
sub
lahf
loop
adc
push
jno
xchg
sub
scas
mov
aad
pop
or
fmul
mov
and
int
add
cmpsb
dec
fwait
sahf
and
leave
out
lret
in
shrl
mov
lcall
pop
inc
fistpll
add
fs
xchg
lods
dec
sahf
daa
xchg
imul
push
dec
add
dec
add
or
cwtl
fs
scas
dec
inc
andb
jb
mov
mov
shl
int
jae
push
pushf
testb
clc
add
ret
ffreep
clc
sub
cmp
sbb
xchg
test
xor
sbb
out
cmp
mov
repnz
sahf
cmc
subb
mov
xchg
pop
mov
mov
sbb
push
repz
pop
mov
add
pop
ficompl
js
dec
push
jp
jbe
ss
test
mov
andnps
mov
sub
push
and
mov
in
lods
jo
and
sti
sub
cmc
xchg
shlb
jno
les
sbb
ljmp
or
adc
mov
sub
outsl
stos
nop
aas
dec
pop
jo
and
ret
arpl
push
and
sahf
popf
mov
hlt
test
sub
and
fwait
and
pop
pop
xchg
cmp
sub
fistl
shlb
lock
jne
loopne
or
pop
enter
mov
mov
sahf
push
ds
cld
jno
testb
push
ror
negb
mov
or
es
icebp
adc
adc
aas
lret
or
into
or
mov
jg
mov
fs
lods
je
pop
mov
iret
gs
inc
adc
stos
stos
test
imul
loopne
aaa
cmpsb
data16
jb
push
mov
fs
cmc
xor
push
scas
xor
pop
jae
mov
xchg
jmp
lea
out
lret
or
dec
shl
mov
add
movsb
mov
ljmp
aad
shlb
fs
int
sbb
xor
std
sbb
jns
adcl
outsl
stc
add
jno
mov
xor
lea
sub
jb
orb
loope
gs
add
push
clc
fucomip
cmpsl
cli
jae
icebp
je
add
jge
jp
dec
pop
jmp
xorb
pop
or
pop
mov
in
ss
test
and
mov
push
insl
rcrl
hlt
add
or
inc
jmp
xchg
mov
adc
sub
and
pop
adc
and
sub
jmp
or
mov
xchg
punpckldq
lods
fsubrl
addr16
lea
mov
inc
lods
add
out
adc
xchg
mov
cmc
popf
sub
xchg
cmp
cld
imul
pop
repz
stc
test
loopne
sub
add
fs
sbb
sbbb
inc
icebp
lods
mov
fnstenv
and
cmpsb
inc
imul
jge
jl
insl
out
stc
sbbb
jp
nop
mov
daa
jp
frstor
imul
push
jl
mov
push
xchg
push
xchg
es
jno
inc
lcall
into
or
ja
jg
lret
pop
dec
mov
mov
testb
xchg
sub
xor
movsl
jae
imulb
xchg
in
add
mov
leave
sbb
cmpsb
lds
cmp
repz
or
aad
in
in
cmp
in
stos
inc
fdiv
add
or
stos
push
dec
jnp
mov
loope
push
aas
test
push
pop
repnz
into
nop
xchg
cltd
sbb
mov
lds
jmp
loopne
push
push
into
aam
in
pop
cs
lock
movsb
sub
lahf
js
cwtl
cwtl
add
in
push
pusha
aaa
jae
mov
push
sbb
jns
js
rolb
notb
pusha
cmp
jne
in
in
mov
outsl
jae
sarw
and
inc
jg
repz
inc
mov
lea
mov
jb
push
stos
inc
add
in
dec
outsl
lods
push
inc
lock
repz
int3
jp
outsb
bndstx
push
jecxz
dec
jb
rcll
arpl
inc
lods
in
xchg
shll
jecxz
or
imul
not
mov
into
adc
imull
cwtl
lcall
jb
hlt
inc
stos
or
loope
pop
cmpsb
nop
or
icebp
cwtl
fidivs
jmp
lods
cmpb
pop
test
pop
lret
pop
cmp
orl
inc
nop
rcr
ror
dec
jo
jmp
sahf
clc
mov
shrl
pop
adc
lret
xor
out
pushf
adc
xor
xchg
xor
mov
jb
divl
jg
addr16
int
dec
inc
add
test
xor
jb
into
lahf
add
std
jecxz
test
orl
push
rcll
sbb
addr16
sub
or
bound
fwait
imul
or
pop
mov
popa
data16
testl
sub
ds
testl
sbb
push
insb
add
mov
pop
pop
push
jmp
pushf
iret
push
sub
pop
or
fldcw
test
mov
push
inc
aam
and
xor
es
jle
nop
out
test
shlb
leave
xchg
xor
inc
bndstx
jo
in
mov
or
mov
add
push
lcall
adc
int
push
cmp
mov
sbb
jbe
sbb
into
mov
lret
std
fmuls
shl
mov
fstps
into
mov
jmp
fistpll
jmp
imul
clc
push
sub
or
lds
add
clc
test
lea
pop
jg
das
je
cmp
sbb
aad
int3
fdivr
iret
lods
inc
pop
push
mov
or
repz
shrb
cmp
mov
daa
cwtl
jnp
pop
mov
pop
or
adc
mov
or
insb
insb
fidivs
stos
ja
icebp
ljmp
subb
sbb
sbb
lods
stos
lods
call
adc
int
xchg
aaa
or
pop
mov
movsl
or
mov
js
add
fcoml
dec
rorl
sbb
arpl
inc
mov
push
jg
shll
addr16
lock
ret
fldcw
ss
stos
pop
mov
lock
aam
add
push
push
lcall
out
or
add
sbb
rcrl
cmp
imul
adcb
adc
dec
out
push
and
es
and
fimuls
into
cmp
jbe
add
mov
cmp
movsb
adc
xchg
lcall
mov
in
loope
mov
divl
inc
sbb
in
push
mov
mov
ret
das
test
adcl
push
in
out
xchg
insl
mov
xchg
mov
cltd
flds
loope
faddl
out
cltd
gs
mov
push
cmp
mov
imull
or
outsb
into
push
push
sbb
xchg
iret
test
jle
jl
pop
dec
lods
sub
push
inc
pop
mov
jmp
pusha
pop
push
xchg
jns
enter
jp
cltd
xor
daa
lea
outsl
pop
insl
pop
sbb
push
sub
cmpsl
std
xchg
in
xchg
xlat
lods
pop
aaa
dec
daa
jge
insl
pop
sbb
push
sub
cmpsl
std
xchg
in
xchg
xlat
lods
pop
aaa
dec
daa
jge
insl
pop
sbb
push
sub
cmpsl
std
xchg
in
xchg
xlat
lods
pop
aaa
dec
daa
jl
insl
pop
sbb
push
sub
or
ljmp
cmp
in
sub
mov
andl
andl
andl
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
mov
lea
push
movl
movb
movl
movb
movl
movb
movb
movl
call
leave
ret
cmpsb
test
mov
jge
mov
xor
adc
xor
and
inc
gs
jne
test
mov
in
andl
and
jbe
inc
gs
jne
pushf
mov
xchg
test
std
out
es
cmp
or
sbb
leave
mov
cmc
shl
cmpsb
or
sub
pop
into
and
in
mov
push
or
test
pop
jae
sbb
int3
mov
es
and
sar
sbb
mov
lret
arpl
inc
xchg
test
pop
sbb
ljmp
cmp
stc
dec
jl
loopne
in
and
xor
out
cmp
es
fidivl
mov
inc
lcall
in
pop
scas
rcrl
mov
ss
lret
fstpl
inc
cmpsb
ss
lock
jp
loope
pop
jbe
push
dec
aaa
jo
in
movsl
jbe
pop
jg
ficoml
pop
insl
ja
inc
addr16
xchg
mov
xchg
aad
in
in
es
push
sub
pop
jbe
inc
jg
je
test
out
shl
mov
mov
nop
addr16
adc
add
pop
push
add
add
movsl
in
cld
repz
xchg
movl
push
aaa
add
push
add
test
xchg
out
rcll
in
cmc
es
push
xor
inc
gs
jne
test
mov
in
cmc
es
push
xor
inc
gs
jne
test
xchg
dec
outsb
push
stc
add
push
stos
mov
ds
ja
dec
ss
xchg
pop
stos
adc
rcrl
in
dec
out
push
lret
aas
cmp
lods
sub
dec
mov
mov
inc
imul
shl
jnp
repz
mov
ret
mov
iret
fwait
dec
push
dec
xchg
pop
jle
aam
leave
in
cltd
jo
scas
fwait
mov
ja
or
test
or
je
pop
or
push
loope
orb
sbb
aas
ret
adc
pop
add
or
xchg
ret
fnstsw
mov
xchg
jne
cltd
adc
out
mov
inc
ucomiss
cs
clc
add
adc
cld
int
adc
pop
test
push
mov
lods
or
divl
push
dec
insb
xor
test
je
xor
jo
icebp
aaa
and
das
mov
dec
out
jnp
push
jno
inc
xchg
add
lods
lahf
ret
rclb
cld
or
mov
lds
popf
xchg
jg
or
push
xor
or
lret
inc
jns
ret
rorb
push
mov
push
cmp
dec
enter
out
push
sbb
aas
dec
es
roll
iret
cli
popf
test
or
sarb
or
clc
sub
add
add
movsl
cmp
je
out
cli
ret
add
and
pushfw
js
mov
js
mov
inc
idiv
and
xor
fsubrs
xor
xor
mov
lret
sbb
mull
add
or
push
jmp
and
or
inc
std
and
cmp
shrb
rorb
mov
and
push
imul
or
mov
std
cmp
cmp
xchg
mov
push
pop
ret
mov
mov
push
das
std
je
mov
sbb
cmp
cwtl
ficoml
stos
sbb
scas
cmp
push
test
negb
test
popw
jp
or
pop
in
das
stos
adc
pop
dec
mov
pop
dec
daa
cwtl
lcall
add
lahf
jo
jb
loopne
push
cmc
jge
lahf
mov
test
idivl
xor
popw
imul
loop
push
int3
mov
into
rorb
arpl
pop
clc
lds
adc
jne
mov
mov
adc
push
addr16
mov
push
xchg
cld
xchg
jae
popf
movsl
pop
and
pop
sti
and
mov
subb
jns
or
imul
clc
mov
sbb
and
xchg
add
test
adc
pop
cmp
out
fadds
push
dec
rorb
repz
xor
adc
xor
nop
inc
xor
xor
cmc
pushf
sub
cwtl
sahf
jo
cmpsb
in
jecxz
out
push
pop
outsl
xor
pop
icebp
pop
cmpsb
mov
int3
fstl
aam
sbb
or
xchg
xor
mov
mov
ja
pop
les
cmc
stos
ret
in
enter
or
dec
dec
cwtl
frstor
scas
sub
into
cmp
mov
dec
in
mov
mov
push
push
bound
push
test
outsl
cwtl
pop
in
incb
js
mov
imul
push
adc
xabort
sbb
adc
lods
cmc
jo
shlb
lea
pop
test
packssdw
xchg
lcall
adc
daa
cli
mov
mov
idiv
out
stos
sbb
cmp
pop
mov
jbe
adc
pop
pop
jne
sub
sbb
adc
jns
jnp
cmpsb
jnp
imul
mov
popa
cs
arpl
xor
cmp
inc
jns
dec
fidivl
lahf
daa
sub
inc
mov
lcall
mov
insl
xchg
jae
and
outsb
push
stos
aam
pop
daa
in
loopne
daa
cmp
mov
pop
lret
mov
or
test
add
aaa
jo
mov
mov
std
push
outsb
xor
add
pop
push
rcl
mov
imul
fisttps
sbbl
decl
dec
cmp
pop
hlt
jbe
jb
mov
fdivs
pushl
cmc
jecxz
ss
mov
cmp
scas
jl
cmp
mov
jns
and
out
scas
pop
pop
enter
cmp
ss
and
cwtl
sbb
mov
loop
add
mov
cs
pop
ret
push
test
sub
adc
pop
xor
aam
jnp
addr16
jmp
in
xlat
sub
insb
jl
enter
push
lods
ss
jns
jbe
xchg
fwait
sar
sarl
add
rorb
dec
out
sub
idivb
cmpsl
mov
pop
jo
movsb
outsb
or
push
call
mov
xchg
imul
push
sbb
sub
xchg
and
movsl
add
cli
cmp
fidivl
dec
ds
out
daa
xor
ds
ljmp
icebp
mov
jns
jecxz
fsubs
sbb
push
jns
pop
add
dec
ds
fdivrp
je
insl
cwtl
bound
outsl
inc
cmc
inc
xor
cltd
mov
rcrl
pop
ja
inc
mov
mov
lea
pop
stos
xor
adc
and
adc
insb
data16
mov
or
jno
xchg
mov
in
xorb
jno
es
rclb
pop
xchg
inc
inc
adc
fcompl
arpl
cld
movsb
mov
fsubl
add
aad
push
jecxz
mov
push
push
push
ficomps
stos
fbstp
mov
mov
cmp
jle
je
into
lds
lcall
inc
in
sub
std
movb
add
sbb
mov
mov
psrad
jnp
repz
lret
push
mov
gs
or
xchg
iret
test
or
push
rcl
movsl
ret
pop
fs
shlb
mov
mov
mov
mov
mov
add
lea
aad
push
mov
stc
outsb
xchg
sub
mov
ljmp
nop
pop
imul
inc
jp
mov
aaa
clc
jle
cli
pushf
testl
fwait
mov
xor
xor
add
or
pop
add
mov
lcall
scas
sahf
movsb
mov
movsl
adc
movsb
mov
leave
mov
fnstsw
jge
sbb
lcall
imul
cmc
mov
jbe
cli
mov
sbb
fwait
popl
cmpl
sbb
add
pop
jmp
lahf
mov
testl
jae
mov
mov
xor
push
push
outsb
data16
ja
cmp
mov
pushf
sub
ds
inc
lods
pop
loopne
ficomps
in
and
push
push
pop
adc
mov
fisttpl
test
jbe
mov
dec
in
xor
sbb
out
jecxz
imul
mov
nop
pop
out
test
and
push
loope
aad
jmp
push
leave
mov
jbe
sar
pop
imul
fs
sahf
mov
dec
adc
rorl
xchg
inc
test
or
mov
cltd
inc
xchg
push
inc
loop
notl
pop
sub
imul
nop
lret
xchg
pop
or
and
add
jp
sbb
sub
and
filds
pop
xor
mull
or
and
movsb
outsb
xor
mov
ret
pop
sti
sbb
addb
pop
ja
mov
cwtl
cmp
repnz
lcall
mov
and
ret
in
sahf
call
aad
inc
add
mov
push
cmp
cmp
lock
mov
mov
sub
xor
jp
test
push
in
inc
faddl
enter
scas
outsb
push
cmp
std
lods
cmp
mov
rcl
xchg
mov
nop
dec
jp
or
cwtl
int3
cmpsl
inc
fcmovbe
ret
daa
inc
fstpt
nop
popf
inc
fists
xor
jae
dec
jb
idiv
pop
mov
test
ljmp
mov
and
notl
imul
sti
daa
jno
jg
ds
in
lock
sbb
xchg
mov
or
sar
adc
hlt
in
rcll
ljmp
ds
pop
mov
mov
lahf
popa
push
shr
push
lcall
dec
aas
xor
jbe
cmp
mov
and
inc
cltd
add
repz
daa
cmp
cmpsl
enter
sbb
jb
aas
cs
and
xor
es
insl
mov
mov
push
pop
push
cld
pop
or
psubusb
fmulp
mov
lock
sub
lods
and
mov
addl
loopne
aas
jge
adc
adc
jno
gs
sub
mov
leave
mov
es
inc
es
adc
lahf
dec
lods
and
into
jo
pop
xchg
dec
push
xchg
mov
movsb
add
arpl
fdivrs
inc
inc
mov
or
jb
push
mov
mov
jae
aas
aad
outsl
cmpsb
aaa
jge
xchg
cltd
push
dec
mov
jns
std
mov
lods
xchg
dec
push
and
add
jecxz
lods
adc
mov
sub
cmp
enter
xchg
in
stc
lcall
inc
loop
inc
mov
mov
mov
sub
popa
or
mov
sbb
dec
shrl
sahf
shl
pop
popa
mov
inc
add
imul
cmp
jns
xchg
pop
ds
adc
or
aad
xor
bound
add
xchg
out
pop
stos
push
stos
xchg
xor
mov
lahf
sub
lods
jb
in
lds
cmp
adc
inc
std
pop
test
jle
lcall
mov
dec
jl
add
fcmovbe
fs
test
pushf
nop
bound
cwtl
xchg
daa
arpl
out
fisubl
aaa
mov
jmp
cmp
dec
movsl
dec
inc
add
js
mov
mov
push
pop
gs
loopne
into
jg
jl
iret
icebp
mov
mov
xchg
aas
ret
incl
jl
out
cmp
pop
in
outsb
dec
adc
mov
mov
loope
jae
vpcmpgtw
je
fwait
cmp
aas
xor
and
inc
xchg
mov
in
imull
mov
sbb
xor
and
cs
sbb
or
pop
mov
movsb
jle
sub
jmp
jmp
mov
mov
gs
faddp
xchg
xchg
inc
cmc
into
sti
test
or
cmp
rcrl
add
repz
dec
add
repnz
cltd
mov
push
cld
pusha
add
imul
js
mov
mov
test
and
pop
and
sbb
add
mov
add
icebp
adc
rorl
add
jns
pop
cmp
incb
popf
xor
in
fldt
adc
negl
mov
les
xor
fidivs
add
mov
jnp
or
add
mov
mov
es
xchg
xchg
bound
scas
jae
xor
out
repz
enter
cmp
xchg
inc
stc
jmp
lahf
and
lahf
sbb
xchg
push
lea
adc
cmpsl
sbb
popf
mov
mov
imul
sub
jge
and
aam
add
mov
xor
jmp
xchg
popf
popa
mov
int3
push
cwtl
pop
nop
sub
adc
ds
cvtps2pd
out
cmp
psubusb
lods
pop
sub
cld
out
jbe
adc
add
adc
mull
add
push
pusha
dec
shlb
jle
pop
sub
jp
cld
popa
push
mov
sub
movsb
jmp
shrl
mov
stos
test
arpl
into
subl
add
pop
cmp
imul
rolb
push
xorl
sbb
mov
sbb
add
mov
sub
vpackssdw
mov
andb
test
ja
push
fcmovnbe
inc
cmc
enter
leave
pop
pop
les
pop
mov
in
lock
cli
jns
xchg
sub
movsb
pop
jmp
divb
dec
add
movsb
pop
pop
fsts
jns
testl
cmp
and
std
out
push
int
sbb
aad
dec
push
and
adc
xchg
jmp
and
es
ds
xor
sub
je
cmpl
std
lahf
popf
filds
mov
mov
jl
arpl
cld
loopne
in
and
cmpb
jmp
cmp
orb
lock
mov
into
inc
mov
enter
in
fidivs
xor
cwtl
out
negl
push
sti
xchg
push
outsl
lods
cmc
cmpb
pop
jns
test
pop
pop
mov
hlt
pop
inc
jnp
mov
mov
sub
cld
fsub
sahf
dec
xor
flds
test
dec
push
push
adc
shll
mov
into
jns
rcrl
cmpsl
pop
ja
sub
clc
mov
cmp
mov
push
push
mov
dec
and
sbb
ja
add
loop
cmpsb
inc
fdivrl
scas
xchg
jge
dec
push
popfw
movsl
out
lret
and
xchg
inc
adc
jle
jge
push
cmp
orb
adc
loope
negl
dec
mov
pusha
test
dec
ds
pop
aas
mov
leave
stc
mov
mov
and
pop
mov
repz
jae
test
aad
mov
and
cmp
jb
rorl
scas
cmp
pop
jo
les
inc
inc
push
mov
aam
fidivrs
mov
popa
and
jmp
jns
sbb
xchg
pop
pop
cli
aam
jo
xor
mov
pop
pop
loop
pop
xchg
xchg
push
mov
faddl
cld
outsb
pop
scas
stos
sbb
lods
imul
xor
les
sahf
mov
pop
out
pop
mov
add
sub
call
movsb
sub
xchg
sarb
aam
push
mov
addr16
lods
lret
mov
mov
fimuls
xlat
movsb
cmp
mov
mov
ss
jbe
icebp
add
and
xchg
inc
fiaddl
rclb
add
pop
loope
pop
aas
dec
test
lret
fistps
lret
dec
ds
mov
fiaddl
test
lods
jno
jg
mov
or
dec
mov
es
mov
cmc
int
imul
dec
in
mov
loopne
adc
mov
jne
daa
cs
and
in
adc
jbe
imul
and
jae
add
leave
adc
mov
dec
sarb
ss
ret
cmc
pop
cwtl
inc
inc
mov
int
pop
mov
xor
push
mov
inc
stos
pop
pop
dec
mov
or
dec
xor
pusha
and
and
adc
shrl
inc
push
dec
addl
adc
rorl
in
mov
in
icebp
xor
xor
pushf
imul
xor
cmp
xchg
or
adc
push
pusha
or
repnz
ss
sbb
int3
inc
sub
dec
lret
dec
pop
adc
xor
sub
cld
fnstcw
mov
sub
jbe
cmc
imul
ljmp
stos
cld
and
mov
nop
aad
mov
inc
imul
add
jbe
cld
or
cld
daa
in
add
lock
out
cltd
fnstsw
pop
lods
push
cld
loopne
cmp
xchg
in
cltd
pop
pop
mov
jecxz
iret
inc
in
das
inc
gs
js
fldl
stc
out
mov
cmpsl
push
jnp
mov
xchg
lock
mov
dec
xchg
dec
xor
je
adc
cmc
test
and
pop
xchg
sti
jecxz
out
imul
addr16
pop
sarl
pop
mov
mov
sub
outsl
movsb
scas
shld
push
dec
je
xor
mov
shll
xchg
jp
jl
or
xchg
xchg
inc
pop
dec
jae
pushf
dec
sti
hlt
mov
scas
adc
push
xlat
in
inc
push
sbb
mov
popf
data16
pop
pop
mov
push
je
sahf
addl
fsubs
call
jecxz
test
lods
or
mov
and
fs
inc
test
sbb
jno
lods
ret
mov
push
scas
imul
rol
leave
and
pop
xor
dec
imul
adc
cld
push
dec
fcomps
mov
jmp
or
push
or
ljmp
dec
xor
jle
rdmsr
nop
incb
insl
pop
xlat
popf
sbb
ljmp
or
sbb
imul
outsl
pop
mov
stos
aad
imul
lea
int3
fistpl
aam
xchg
jmp
dec
cmp
scas
pop
test
cmp
mov
outsb
out
cmp
push
pusha
cmpsb
sarl
and
out
lods
jno
out
xchg
add
pop
or
add
inc
adc
jmp
xchg
inc
pusha
ss
shr
jg
movsb
xchg
pop
rcl
es
mov
sbb
fstps
pop
in
adc
stos
mov
lcall
pop
push
gs
jl
xchg
jmp
mov
jb,pn
arpl
add
scas
enter
pop
das
insb
in
cmp
outsb
jnp
mov
mov
cmp
cmp
add
ds
lea
lods
cs
dec
cwtl
adc
loope
fs
cli
gs
movsl
xor
mov
jg
pxor
jbe
repz
mov
adc
inc
mov
fwait
lods
xor
insb
sub
pop
cwtl
fidivrs
pop
dec
orb
mov
or
mov
leave
mov
sti
in
stos
cmpsb
imul
mov
jge
xchg
outsl
ljmp
push
fwait
aas
and
ret
ret
ja
or
dec
in
out
xchg
mov
fcmovnb
cwtl
daa
xchg
jecxz
es
into
scas
pusha
call
ljmp
je
repz
inc
test
aas
lahf
pop
cmovl
scas
xchg
stos
imul
sbbl
pop
jmp
and
outsl
pusha
jg
jbe
dec
jbe
test
stos
movsb
mov
add
insb
push
ret
adc
add
jecxz
loope
push
push
ljmp
std
cltd
lret
shrb
mov
cli
or
fs
ds
jb
in
jns
test
or
jmp
pop
subb
jo
jnp
cmp
loopne
mov
lds
stos
bound
inc
addr16
subb
ffree
clc
andb
repz
xor
jb
out
lcall
sbb
push
push
repz
add
jl
fidivrs
push
sub
stos
jo
pushf
pop
dec
pop
fldcw
iret
dec
outsl
push
push
shr
cmp
mov
sbb
je
test
shr
or
aam
fwait
adcb
enter
cmp
cmp
sarl
mov
mov
sub
pop
xor
scas
gs
iret
loopne
stos
push
jae
repnz
test
xor
push
inc
in
mov
aad
push
into
lret
sbb
ret
sub
scas
adc
or
dec
and
in
rcrl
add
xor
in
lret
adc
repz
test
cmp
loopne
xchg
rclb
rclb
mov
pop
dec
xchg
subb
jo
mov
adc
pop
xchg
push
test
sub
pushf
xchg
outsb
and
xchg
xor
inc
aas
adc
fsubl
test
xchg
addr16
cmp
jmp
push
jne
pusha
or
jecxz
out
cwtl
je
leave
out
sub
jno
paddd
aaa
sar
leave
hlt
out
jmp
vmovapd
mov
xor
aaa
sub
pushf
pop
fwait
cmp
les
outsb
test
mov
imul
sub
fdivs
xchg
sbb
or
out
scas
cmp
test
mov
mov
repnz
inc
and
call
pop
mov
push
inc
xor
arpl
push
and
and
mov
add
subb
pop
xchg
or
lret
xchg
addr16
inc
dec
inc
dec
dec
lret
mov
inc
stos
dec
pop
adc
adc
xor
and
jmp
cs
mov
mov
push
shll
add
or
sub
cmp
in
sub
stos
jle
cld
or
mov
cmp
dec
xchg
test
nop
out
xchg
xchg
fildl
adc
mov
ja
and
adc
mov
and
mov
inc
push
push
pusha
xchg
out
xor
arpl
fcmove
dec
shr
fwait
sub
jp
cmp
nop
xchg
mov
mov
or
out
or
adc
bound
arpl
dec
xchg
or
scas
lcall
out
pop
inc
mov
mov
pop
jl
dec
je
stc
lock
dec
mov
pop
push
test
xchg
pop
movsl
xchg
mov
in
cmc
es
push
xor
inc
gs
jne
test
mov
in
cmc
es
push
xor
inc
gs
jne
test
mov
in
cmc
es
push
xor
jbe
inc
popa
push
jno
xorl
aad
in
xor
lods
and
sub
push
rcrb
loop
repnz
es
int3
dec
mov
sahf
bound
adc
out
xor
ret
push
loop
repnz
mov
mov
bound
adc
and
push
loop
repnz
mov
es
push
lret
add
pop
popf
push
mov
loop
sahf
outsl
dec
mov
mov
and
popf
xchg
jmp
mov
inc
or
jae
ss
pop
pop
sahf
mov
int
mov
mov
scas
lea
std
mov
mov
or
flds
xchg
inc
jae
popa
bound
inc
push
iret
outsl
push
inc
adc
ja
sbb
popf
mov
repnz
dec
xchg
loope
or
push
sbb
std
movsb
push
and
out
xor
add
xchg
dec
and
std
stos
jb
leave
out
movd
in
and
xor
cwtl
sub
movl
mov
adc
mov
lahf
sbb
mov
push
push
rcrb
loop
repnz
mov
mov
bound
adc
and
xor
mov
push
andb
pop
and
ljmp
adc
cmpsl
push
mov
xchg
sahf
dec
addb
cmp
sbb
jle
testb
pusha
iret
jb
add
inc
scas
cmpsl
inc
rorb
inc
sahf
pop
into
dec
xchg
pop
mov
mov
bound
adc
and
xor
ret
push
loop
repnz
mov
mov
bound
adc
and
xor
ret
push
jg
fnstsw
and
adc
xlat
std
push
inc
nop
dec
outsl
icebp
push
fadd
sbb
dec
pop
lret
or
repnz
jne
xchg
sub
adc
ret
jno
into
das
subl
adc
pop
rorb
mov
xchg
test
mov
lret
push
add
mov
call
push
mov
jmp
lods
adc
cmp
push
ja
jle
lea
cmpl
adc
fildll
daa
xor
jp
xor
sbb
add
add
xor
jl
lea
add
fiadds
sbb
or
dec
and
push
dec
dec
fistl
jno
icebp
jecxz
push
out
leave
jns
mov
mov
scas
push
xchg
push
nop
xor
add
sub
outsl
out
inc
roll
nop
in
xchg
adc
arpl
popf
xlat
adc
ss
push
mov
cltd
pop
sbb
jo
mov
lds
add
and
bound
adc
push
loope
pop
mull
push
add
and
push
mov
mov
pop
dec
cli
inc
adc
outsb
ret
and
loopne
insl
pusha
push
dec
mov
pop
ljmp
cmp
js
cltd
out
pop
pop
lahf
sub
dec
fcomps
xchg
prefetchw
or
mov
push
xchg
imul
and
sti
pop
or
mov
shll
shll
mov
push
int3
push
insb
add
xchg
jmp
sbb
popa
mov
sti
cltd
mov
in
xchg
push
lcall
call
into
inc
mov
je
sub
jg
fildl
xchg
aad
cwtl
leave
jb
in
loope
push
sti
hlt
out
mov
out
sub
xchg
cld
ret
add
pop
lret
fildl
arpl
mov
inc
lods
stos
test
lods
dec
or
or
jnp
imul
sub
adc
pushf
or
lcall
out
fcompl
or
jmp
mov
xor
in
lea
pop
lods
scas
or
sbb
mov
je
cmp
or
cmp
arpl
push
xor
xchg
int3
cltd
mov
mov
js
xlat
cmp
mov
jnp
sub
sarb
stos
adc
aas
pushf
fnsave
cmp
dec
int
or
or
cmovle
test
scas
das
push
loopne
pushf
xchg
inc
jo
sbb
push
mov
jge
dec
lahf
inc
mov
adc
rcrl
or
lret
dec
xchg
xlat
sub
in
xor
loop
mov
inc
pop
nop
out
pop
adc
sbb
inc
cmp
jns
cmp
inc
cld
adc
mov
pop
imul
and
loop
arpl
aam
xor
mov
mov
mov
mov
jge
fldenv
add
aam
jle
ja
shlb
rcrl
dec
cltd
push
jle
pop
mov
push
adc
in
gs
clc
or
fidivrs
cmp
sub
mov
fsubl
and
xor
adc
addb
mov
aam
push
push
jg
data16
inc
mov
jns
push
cmp
nop
fcomps
clc
xchg
stc
jno
push
inc
lret
aam
adcb
nop
push
jns
mov
add
mov
or
test
inc
add
pusha
cwtl
leave
arpl
mov
lret
stos
push
mov
add
stos
push
inc
xchg
sub
gs
cmp
rolb
out
xor
mov
cltd
test
sub
cltd
push
add
jo
nop
pusha
sbb
sahf
and
movsb
fldl
xchg
pop
scas
ss
idivb
adc
sbb
cmp
sbb
or
daa
add
push
shrb
mov
mov
jmp
cmp
lret
clc
in
ret
cmpsl
cmp
or
lret
cmpsl
inc
pop
hlt
xchg
dec
xchg
xor
jecxz
out
loope
pop
and
or
push
push
fdivrl
decb
faddl
test
pop
shlb
sub
sbb
ds
or
jl
in
cmp
ret
cmpsb
roll
mov
xchg
repnz
add
mov
jae
xor
fadds
inc
jl
rcrb
xchg
dec
add
subl
jp
int3
ljmp
ds
sbbb
cmp
sub
push
daa
pop
mov
mov
jge
daa
leave
pop
mov
xor
adc
insl
data16
xor
jl
fists
mov
aam
mov
and
test
popf
fs
mov
xchg
xor
popa
mov
pop
mov
dec
cli
lcall
mov
adc
push
push
add
je
jmp
push
popaw
push
and
mov
lcall
pushf
fcompl
dec
shlb
sahf
sahf
not
jno
push
jle
jp
aas
jnp
sub
popa
mov
jg
cmp
movsb
lret
mov
adc
and
movsl
fcoms
and
pop
pop
shlb
cmp
add
adc
push
ret
int
rcll
sti
and
stc
int
pop
push
in
jb
mov
xor
aaa
in
and
sbb
inc
or
push
mov
popf
mov
jbe
lahf
fldl
pop
divl
addr16
out
clc
and
jno
js
xor
pop
sbb
cltd
xchg
cmc
xchg
xor
cmpsl
cs
mov
outsb
cli
movsb
push
test
test
push
pop
loopne
xor
xchg
add
sub
addr16
sub
cmc
arpl
mov
and
cmpsl
gs
push
pop
pop
xchg
sub
gs
rorb
clc
imul
xchg
add
sahf
pop
pop
sbb
imul
dec
sbb
inc
pushf
jne
je
jl
xlat
test
jp
shrl
test
lret
test
adc
insl
lock
adc
xchg
cld
clc
mov
mov
push
mov
ja
push
add
test
outsb
jmp
mov
je
or
adc
cmp
ja
pop
jbe
add
shll
jns
getsec
aas
jae
jmp
push
testb
cmp
sbb
jle
mov
push
xchg
jne
pop
push
std
or
lea
mov
push
jg
jle
arpl
out
mov
jmp
inc
aas
out
sub
or
push
jne
in
sub
mov
scas
repnz
jnp
neg
push
sbb
out
stc
sub
out
inc
inc
ss
sarb
jle
cltd
ja
testb
and
sub
je
imull
lcall
fs
aad
xchg
and
jge
dec
mov
add
mov
mov
mov
add
stos
in
andl
jg
push
and
jmp
roll
jnp
inc
data16
or
mov
xlat
out
gs
les
cmp
shll
mov
mov
cwtl
sbb
insl
fisubl
loop
fnstenv
loopne
mov
out
ds
mov
idivl
daa
insl
aas
dec
leave
outsb
push
adc
cmovae
test
mov
loop
adc
xchg
es
adc
lcall
ss
pop
xchg
pop
sbb
adc
inc
hlt
ficoml
cmp
outsb
out
inc
pop
mov
sub
cltd
fstpl
in
roll
mov
shl
jmp
cmpsl
loopne
mov
aaa
jbe
or
in
pop
mov
jb
mov
imul
in
test
fwait
lret
call
ret
rcll
xor
jbe
lock
mov
xchg
mov
test
xor
lods
rol
int
sub
push
test
pop
dec
and
daa
xor
jmp
mov
std
jb
mov
rorb
out
jnp
das
xor
cmc
je
jns
or
cli
push
lcall
lods
jo
mov
lret
push
pop
push
dec
stos
mov
cmp
lock
push
xlat
xchg
outsl
outsb
aam
aam
jno
jo
fbld
push
cmp
mov
out
pop
xor
sub
negb
mov
movsb
hlt
ds
jns
push
rclb
clc
mov
jae
xchg
inc
add
shl
in
lds
and
ds
call
fisubl
add
jl
xlat
popa
fmul
jb
or
addb
shrl
repnz
mov
xchg
cmpsl
insl
inc
add
call
dec
fdivrs
and
push
jl
mov
lock
hlt
and
imul
add
xchg
shll
xlat
sbb
popf
out
jle
icebp
jbe,pt
push
movsl
fbstp
lock
lret
scas
rorb
mov
in
xchg
and
mov
int
mov
pop
lahf
push
out
gs
xor
outsl
test
fcomps
ss
sbb
jnp
xor
icebp
push
add
stc
psubw
inc
sti
dec
pop
out
in
rol
jmp
data16
mov
gs
test
in
jl
push
adc
mov
pop
cmp
fadds
inc
or
repz
sbb
in
jo
int
fisubrs
ret
cs
cmc
in
js
fnsave
rcl
jae
mov
addps
add
fwait
xchg
test
cs
inc
test
dec
xchg
insb
add
mov
push
imul
cmpsl
rclb
nop
jbe
cld
sub
pushf
jnp
sti
dec
les
icebp
cltd
and
dec
mov
call
sub
test
fwait
inc
xor
mov
outsl
or
mov
add
outsl
inc
pop
sbbl
cltd
xchg
and
sbb
cmpl
add
ja
add
and
dec
andb
fnstcw
pop
jae
sbb
subb
dec
insb
imul
clc
ja
dec
cmpsb
adc
push
and
mov
es
xor
xchg
in
mov
das
cs
jecxz
fcoms
addb
jno
sub
cs
cmc
in
jmp
mov
push
mov
ljmp
dec
xor
loop
lods
aaa
jne
pop
aad
or
aad
ret
dec
jge
inc
cwtl
adc
adc
mov
sbb
push
mov
int
call
rorb
jo
xor
lock
inc
pop
mov
xlat
fwait
adc
sti
sbb
mov
stos
sub
adc
into
mov
xlat
stos
rolb
in
mov
sub
dec
push
cmpsl
push
mov
cmpsb
ret
push
lds
cmpl
xchg
inc
cmpsl
push
sub
cmpsl
xor
push
ss
mov
jbe
repz
cli
push
clc
fdivl
cmp
mov
jbe
or
pop
push
pop
sbb
inc
fildl
insl
push
call
inc
stc
jnp
in
out
xlat
rorl
in
mov
jle
jbe
adc
pop
ja
xor
cmp
and
dec
stc
mov
nop
hlt
sahf
xor
mov
fisubrl
nop
adcl
in
ljmp
mov
enter
in
outsb
syscall
sti
leave
xchg
mov
or
out
hlt
call
lods
and
outsl
movl
je
mov
push
mov
xchg
adc
loopne
jns
lahf
xor
call
sarl
push
sbb
inc
imul
inc
adc
sbb
sbb
fstl
xchg
push
ret
and
movsl
cwtl
xchg
mov
jmp
xor
lock
test
jo
test
jl
popf
sbb
jne
push
clc
adc
mov
push
mov
aad
xor
inc
fmull
mov
je
test
ret
cli
ss
inc
sub
sbb
and
push
dec
cld
call
mov
js
popf
adc
or
add
rcr
sub
out
mov
mov
les
lock
sbb
and
add
dec
pop
xor
in
ljmp
xor
cmp
or
pop
in
mov
loop
dec
mov
icebp
dec
imul
stos
and
mov
add
xor
sub
mov
sarl
inc
lods
add
sub
xchg
inc
lcall
pop
pop
sub
cmp
or
adc
pop
mull
xor
jo
mov
mov
sub
sbbl
pop
jnp
push
adc
aaa
cli
push
dec
mov
fucomp
and
fadds
in
dec
daa
insl
xchg
add
jbe
xchg
dec
rcrl
dec
roll
and
jmp
jmp
pop
sbb
je
in
mov
int3
jg
aaa
mov
pop
jmp
lret
mov
mov
cli
rol
jno
and
or
or
dec
inc
movsl
outsl
inc
test
dec
inc
shlb
lahf
push
inc
sub
adc
out
icebp
cmp
pop
push
adc
sti
fdivl
imull
inc
icebp
xchg
inc
stc
jl
fsubrp
adc
test
sbb
and
cmp
pop
pusha
sub
aad
loope
jge
jae
sahf
out
xchg
cmp
in
cmp
xchg
push
fstpt
or
out
inc
pop
pop
imul
add
lret
test
mov
mov
xchg
cli
and
stos
adc
add
fwait
dec
out
adc
jo
xchg
subb
out
outsl
rorl
movsl
popa
loop
rcll
or
mov
and
cmpsl
pop
outsb
rolb
rcrl
adc
subl
mov
nop
ss
lods
dec
xlat
out
addr16
dec
mov
pop
mul
mov
xor
push
push
or
call
out
iret
cmp
in
sbb
imul
out
mov
insl
mov
dec
and
add
pop
adc
push
inc
xchg
mov
cmp
call
dec
mov
pop
js
lods
and
rcrl
inc
ds
sbbl
int
data16
inc
gs
jmp
mov
cs
mov
xchg
dec
push
mov
sub
sub
xchg
aad
sbb
nop
pop
lock
icebp
xchg
jp
testl
ss
pop
mov
sbbl
test
outsb
lods
nop
jle
addr16
dec
lea
inc
push
lods
es
xchg
cld
pusha
mov
cmp
movsl
fildll
clc
fwait
jnp
and
sahf
mov
pop
pop
loope
idivb
mov
push
xchg
push
xor
xchg
jnp
inc
pop
dec
sbb
inc
shlb
loop
out
pop
stos
es
xchg
jb
adc
ljmp
xchg
jl
pop
sahf
dec
push
sbb
push
add
xlat
pop
pop
push
lcall
xor
mov
mov
inc
adc
aas
cmc
jl
in
sahf
into
push
mov
insb
jecxz
sbb
add
imul
cmp
inc
mov
scas
out
out
jbe
leave
in
jno
xchg
adc
shr
insb
outsl
imul
or
mov
add
inc
ror
das
es
and
push
jp
sub
fisttps
sub
adc
lret
adc
stos
idivl
sbb
cmp
mov
cmp
outsb
or
adc
fwait
outsl
aaa
cmpl
xchg
xchg
cld
mov
and
pop
mov
sarl
call
test
sub
pop
mov
leave
jecxz
test
or
test
imul
jmp
and
adc
fistpll
jge
cmp
inc
mov
repz
sbb
sarl
inc
jp
dec
test
cld
in
hlt
mov
movsb
sahf
jmp
or
push
pop
aam
sbb
rorb
push
and
and
or
scas
mov
sbb
adc
in
ljmp
or
ljmp
add
mov
in
inc
aad
adc
add
stos
jge
je
jno
sti
arpl
mov
dec
sub
xchg
xchg
in
or
js
fdivrl
pop
mov
push
movsl
pop
outsb
in
dec
push
sub
fdivl
loope
mov
iret
repz
xchg
sub
mov
xchg
pop
cmpsb
inc
popa
lret
or
cs
adc
popf
jg
jne
aam
repnz
inc
icebp
rcrl
or
push
insb
mov
jecxz
addr16
inc
mov
lahf
pusha
push
jle
push
imul
sub
push
lcall
jno
pusha
cmpb
cmp
sub
cmp
pop
cmc
mov
xor
mov
push
mov
lds
out
mov
adc
pop
repz
push
dec
sub
insb
xlat
gs
aam
pop
add
mov
adc
mov
dec
sti
jne
pushf
jmp
mov
sbb
ss
aad
cld
jne
dec
pop
mov
mov
repnz
pushf
lds
push
pop
divl
xor
pop
mov
xorl
rorb
inc
mov
loopne,pt
inc
add
push
inc
jo
iret
xchg
inc
es
inc
dec
roll
jg
xchg
xchg
stc
mov
scas
mov
pop
loop
dec
leave
push
je
jmp
xor
ss
je
call
outsl
addl
js
or
add
pand
cmp
cmpsl
imul
call
out
shlb
rolb
xlat
or
filds
pop
adc
mov
jg
shr
xorb
mov
scas
or
fcomp
inc
mov
dec
insb
xchg
inc
mov
push
sub
int
push
fsts
mov
fcmovne
movsb
inc
data16
cmp
xchg
lcall
adc
mov
inc
out
jp
add
in
sub
stc
push
mov
into
movsb
repnz
dec
pop
sti
in
je
and
xchg
and
push
in
jno
mov
mov
movsb
data16
and
stc
pop
iret
fwait
mov
cmp
js
rorl
pop
out
dec
inc
test
adc
iret
inc
jb
xor
loop
cwtl
pop
iret
mov
xor
ret
not
shrl
int3
lea
loopne
shlb
dec
and
ficoms
test
sub
pop
cltd
iret
inc
sbb
sbb
or
jg
mov
mov
stc
inc
mov
push
lods
and
jmp
notl
push
into
ja
or
mov
out
pop
pusha
inc
lds
vmread
sbb
lahf
lcall
nop
mov
and
imul
dec
xchg
pusha
arpl
cmc
sub
stos
xor
lcall
int
inc
sti
insb
out
xchg
inc
in
push
cltd
ds
jbe
jae
mov
mov
mov
mov
cmp
pop
jne,pt
loopne
shrb
jmp
faddl
int3
mov
cmc
std
stos
xchg
mov
repz
rcll
fdivl
push
sbb
imul
inc
repz
fldt
hlt
aam
mov
jno
mov
pop
popa
iret
xchg
dec
lret
les
mov
push
pop
into
dec
loop
jno
lods
dec
push
scas
mov
int
sub
jecxz
push
sbb
aam
ret
mov
xlat
jp
add
xor
sub
movsl
pushl
sti
scas
push
mov
fildl
and
mov
pop
test
negb
pusha
and
pop
outsl
ret
lahf
mov
mov
cld
push
loope
in
imul
fdivrs
cmpsl
out
xchg
inc
sub
or
jae
fwait
leave
fimuls
pop
test
push
pop
into
stos
pop
in
xor
jmp
push
in
mov
inc
sub
mov
hlt
rorb
jge
push
xchg
xchg
aaa
sub
repnz
mov
jle
inc
out
lods
or
mov
mov
sbb
jmp
cwtl
inc
fmull
loopne
inc
mov
cwtl
loop
jnp
into
jmp
movsl
adc
jae
ficoml
or
dec
rorb
cmp
pusha
mov
cli
lret
jge
xchg
lds
daa
add
stos
add
xchg
jecxz
jne
sahf
jo
push
movsl
cmp
or
cmp
sub
cmp
out
pushl
in
popf
lock
mov
push
mov
es
and
scas
xor
lcall
andb
dec
mov
cmp
cmp
push
jp
mov
arpl
mov
push
scas
mov
lds
out
mov
lahf
push
jg
inc
xor
mov
call
inc
dec
inc
aas
out
sub
test
popa
addr16
sbb
push
jp
jge
mov
pop
push
inc
popf
jb
hlt
add
sbb
test
aas
mov
popa
popa
stos
sahf
insb
popa
mov
xchg
pop
dec
or
stos
roll
in
loopne
shlb
orb
mov
mov
bound
adc
and
xor
ret
push
loop
repnz
mov
mov
bound
adc
and
xor
ret
sahf
bound
xchg
fisubs
push
push
sahf
bound
adc
and
xor
ret
push
loop
repnz
mov
mov
enter
jb
bound
push
adc
push
mov
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
mov
insb
mov
lea
or
sbb
or
xlat
sbb
or
jp
push
pop
lods
dec
mov
lcall
sbb
sub
adc
int3
sub
sbb
or
jp
imul
stos
lcall
ljmp
int3
or
push
outsl
mov
sbb
sbb
and
into
or
sbb
cmc
add
std
repnz
add
adc
loope
mov
or
lahf
sbb
cli
sbb
xchg
shll
ret
xchg
cmpsl
and
adc
lods
sub
daa
sbb
inc
and
add
scas
loopne
in
fcoml
int3
or
popl
jnp
loope
fnstcw
jnp
dec
lea
lea
adc
mov
dec
cmpsl
cmp
adc
std
sub
rol
lcall
add
in
inc
sarb
and
sub
ljmp
mov
mov
roll
out
jle
fidivrl
ljmp
fstps
shrb
cli
or
sbb
sub
scas
cmp
sub
or
jp
push
pop
mov
mov
dec
leave
xor
add
adc
pop
dec
jnp
dec
lods
imul
repz
fdivrs
aad
or
sbb
pop
lret
adc
inc
cmovs
or
ret
setl
leave
and
fnstsw
stos
mov
mov
sub
cmp
int3
sub
sbb
or
jp
push
pop
lods
dec
mov
lcall
sbb
sub
cmp
int3
sub
sbb
or
jp
push
pop
lods
dec
mov
pop
adc
xchg
sub
cmp
je
es
inc
push
fs
cmp
xchg
inc
fcmovbe
sti
mov
outsb
sbb
push
mov
cmp
imul
dec
dec
sbb
sbb
inc
stc
or
fldcw
pop
gs
adc
iret
imul
add
into
arpl
test
ret
or
add
lahf
push
gs
stc
in
cld
iret
daa
out
repz
insb
lods
arpl
lods
or
enter
mov
pushf
mov
xor
mov
mov
cmp
add
fnsave
aas
cmp
cmpsb
cmp
jmp
lahf
xor
mov
lock
test
push
mov
or
push
dec
lock
je
fs
sbb
test
or
jg
dec
rorl
sub
clc
adc
xor
lods
mov
testl
adc
popa
jbe
push
imul
test
movlps
int
push
loop
pusha
jno
call
cmp
out
fadds
inc
xchg
and
mov
in
test
insb
or
test
sub
sahf
scas
sar
enter
lock
fiadds
push
repnz
arpl
adc
in
mov
add
mov
outsl
leave
aam
imul
jl
sbb
int3
sahf
stc
neg
mov
fstp
cmp
out
mov
mov
xchg
push
mov
and
icebp
jle
xchg
xor
push
cmpsb
inc
jnp
notb
inc
mov
jp
push
stos
mov
mov
mov
xor
jecxz
push
inc
xor
mov
divl
imul
jmp
sub
pop
rol
addr16
cmp
mov
mov
sub
pop
xlat
cli
sbb
inc
mov
fldl
stos
or
call
sahf
and
insb
dec
arpl
int
lahf
adc
iret
xor
in
jno
in
push
iret
cmp
mov
inc
sbb
sub
sarl
inc
fiaddl
push
nop
lods
add
sahf
cltd
dec
sbb
jmp
repnz
inc
mov
mov
movsb
add
and
lcall
rorb
inc
sbb
outsb
adc
movsl
popa
ret
js
mov
sahf
cmpsb
pop
pop
mov
push
movsl
inc
fcmovb
icebp
and
xchg
jg
mov
ljmp
test
push
lods
mov
mov
xchg
idivb
pop
outsl
neg
stos
stos
shl
push
sbb
inc
and
adc
mov
incb
fcom
or
jmp
aaa
lcall
jmp
jns
imul
arpl
mov
in
test
or
or
sbb
or
sbb
cli
push
adc
mov
aad
push
repz
ds
movsl
jb
and
add
cmc
mov
jnp
mov
xlat
mov
xor
aam
inc
fiadds
pop
cmp
je
jmp
aam
movsl
cmp
in
inc
cli
into
pop
cmp
xor
mov
inc
int
popf
fcoms
cmpsb
pop
pop
inc
xorb
pusha
fs
push
scas
inc
in
arpl
add
and
rcrl
aas
xor
mov
dec
push
lcall
arpl
xchg
inc
aam
add
in
dec
and
mov
mov
mov
inc
jecxz
xor
add
add
ret
icebp
jge
and
rorb
push
addr16
jbe
add
sbb
aaa
inc
xor
lret
mov
mov
jecxz
sbbb
dec
in
roll
cmp
gs
cmp
sbb
mov
test
imul
mov
loopne
or
xchg
or
cmp
mov
xor
arpl
and
lahf
test
data16
pop
rol
lds
in
in
or
xchg
call
movsl
lds
mov
mov
out
cmp
xchg
std
push
not
frstor
mov
sub
jno
xor
adc
sub
or
cmpsl
xlat
in
dec
add
cmp
push
push
xor
cmp
mov
xor
sbb
xchg
jb
sbb
sub
cmp
mov
inc
ret
insb
and
bound
cli
rcrl
addr16
sbb
jbe
pop
cltd
rolb
mov
mov
fs
aad
movsb
or
lock
idivb
ss
xchg
push
stc
cmpsb
les
das
les
adc
out
cmpsl
mov
sbb
addr16
cld
sbb
es
cmp
push
jbe
rcrl
adc
or
shrd
ljmp
jle
push
push
adc
dec
dec
outsb
pop
pop
mov
shl
in
jbe
in
xor
push
mov
pop
test
scas
jmp
sub
jp
xrstor
ss
mov
jmp
pop
xchg
popf
dec
mov
gs
xor
sbb
stc
mov
mov
push
in
pusha
adc
mov
fs
mov
cmp
cli
jecxz
jns
loop
fimuls
ret
rorl
xchg
loopne
xor
mov
and
rolb
test
dec
or
fcmovnbe
dec
hlt
int3
push
lds
fldenv
push
fsubp
lock
rolb
gs
mov
scas
and
mov
cwtl
xor
dec
xchg
xor
jne
ret
pop
sbb
test
and
dec
mov
pop
lret
in
xchg
mov
inc
les
mov
or
cmpb
aas
add
push
pusha
fadds
inc
jns
in
add
add
pop
mov
data16
inc
xchg
pop
cltd
cmpb
xor
iret
push
int3
jg
cmp
mov
lcall
jge
inc
aas
mov
xor
fs
xor
mov
scas
cs
and
cmp
aaa
lret
dec
or
scas
pop
dec
enter
lods
xchg
arpl
arpl
das
fisubrs
add
add
jecxz
mov
push
fstps
loopne
and
sbb
mov
fdivs
add
sarb
xchg
push
nop
ret
push
push
push
sub
lock
orl
stos
js
xchg
cwtl
in
stos
fsts
out
dec
sbb
mov
mov
sbb
mov
das
push
sbb
shrb
movsb
inc
xchg
insb
mov
cs
je
leave
xchg
mov
in
and
cmp
or
lret
push
jns
mov
out
mov
adc
mov
xor
hlt
inc
adc
push
push
cli
subl
enter
inc
fisubl
movsl
jno
ss
bound
js
pop
rcll
dec
mov
push
push
mov
mov
loope
mov
jmp
sbb
in
jle
add
add
es
test
shll
loop
mov
mov
stos
pushf
int
push
adc
stos
xchg
jo
repz
dec
jmp
imul
sbb
dec
sbb
jno
call
mov
test
inc
pop
aaa
adc
sbb
in
pop
sbb
and
mov
xchg
int
adc
dec
pop
sbb
pop
mov
pop
cmp
push
inc
testl
dec
mov
enter
pushf
repnz
adc
xchg
addb
and
xchg
and
mov
ja
sub
popa
ljmp
jmp
inc
das
mov
aad
jmp
out
or
jne
in
sub
xchg
ret
cmc
pxor
data16
leave
fwait
add
cmp
adc
dec
and
repnz
leave
sub
jl
scas
mov
stos
xchg
xchg
lret
sbb
jge
jo
stos
push
or
insb
jbe
sub
dec
dec
jp
pop
fldenv
lahf
mov
ljmp
fstpt
fisttpl
bound
xor
add
mov
sbb
push
lret
xchg
xchg
cmpl
roll
mov
sub
inc
ret
test
push
into
in
lahf
mov
adc
cs
jge
stc
sub
adc
repz
outsb
dec
int3
push
mov
call
mov
or
andl
dec
inc
sub
aam
outsl
aaa
popa
into
or
sub
push
adc
add
push
mov
sbb
push
lret
pop
test
mov
pop
adc
nop
je
enter
scas
negb
in
mov
inc
adc
adc
stos
sbb
aas
jg
ss
insb
jns
jbe
pop
sub
fs
add
scas
loop
cwtl
pop
ja
mov
jge
mov
clc
mov
ss
in
cli
adc
sbb
xor
push
orb
scas
aam
pushf
mov
xchg
adc
fistpl
es
inc
test
push
ret
aas
outsl
scas
idivb
outsl
cli
inc
idivl
fildll
mov
dec
push
aas
aam
fsts
mov
in
inc
cmpsb
mov
in
sbb
adc
mov
push
je
sbbl
inc
jl
xchg
add
mov
imul
cmpsb
sub
jl
sub
repnz
sti
shll
mov
pop
out
out
pop
loop
mov
jb
xor
stos
es
daa
fs
adc
mov
outsl
out
fcomip
pushw
push
cld
cmp
and
cmp
xchg
push
movsl
lret
adc
cld
lahf
cld
outsl
cmpsb
xlat
or
adc
mov
out
pushf
mov
movsl
cmpl
add
sti
repnz
sub
or
dec
lcall
out
pop
cld
movzbl
or
pop
inc
dec
mov
std
movsb
mov
lret
cmp
mov
fidivrl
and
js
dec
xchg
xor
arpl
xor
mov
pop
cwtl
dec
leave
sbb
add
incb
ret
fmul
pop
lret
pop
shll
push
xchg
les
pop
or
sbb
xor
das
and
sub
xor
out
mov
test
mov
test
and
stc
cmp
loope
aad
adc
adc
mov
aas
cmp
add
mov
xchg
outsb
lret
and
pop
fmull
stc
pop
cltd
pop
dec
jl
sub
push
ss
pop
push
dec
cmpsb
das
cmp
sbbl
int3
das
xchg
dec
mov
test
fsubs
ret
mov
movsl
push
push
loopne
mov
sbb
inc
stos
sub
lds
inc
mov
mov
sbb
pop
lret
sub
ss
es
sbb
inc
cmp
push
pop
lahf
jg
es
loop
shl
jp
repnz
addb
jle
pop
cltd
push
mov
xchg
fnstcw
shll
xchg
pusha
pop
push
sbb
jnp
pop
and
js
sbb
roll
cmp
dec
push
mov
pushf
push
aas
adc
stc
pop
out
fiaddl
data16
leave
stc
pop
ss
aas
scas
xor
dec
cmc
enter
or
adc
iret
add
int3
and
popa
add
sub
pop
push
cmpsl
les
repz
aas
fiadds
das
int
out
mov
sbb
lret
out
and
in
fndisi(8087
mov
mov
and
push
leave
cmp
cmpsb
jae
adc
xchg
inc
sbb
jmp
and
pop
popf
mov
psubw
adc
cmpsb
xor
jecxz
xchg
push
mov
and
ret
push
adc
ret
adc
push
std
jg
push
jo
into
cmpsb
mov
xlat
aaa
sub
jno
outsl
arpl
hlt
cld
pop
cmp
xor
call
pop
xchg
xor
or
sub
add
out
xor
push
clc
lods
xor
scas
scas
jbe
sub
push
pusha
mov
and
fnstcw
sahf
lds
orl
cmp
data16
in
ret
or
inc
lock
fstps
push
test
out
adc
xchg
add
cmp
push
push
out
lods
mov
pop
or
inc
cmc
addr16
adc
jle
dec
inc
stos
mov
sbb
mov
sbb
loope
dec
xlat
push
cmp
sub
aas
pop
lods
and
aaa
mov
xchg
dec
in
push
jnp
sbb
sbb
mov
test
out
test
data16
inc
pop
pcmpgtb
mov
fidivl
xchg
push
sbb
pop
icebp
loope
xor
lret
mov
pop
sahf
dec
push
mov
adc
lds
dec
je
xlat
xor
cmp
mov
faddl
in
pop
std
mov
rorb
sbb
mov
cmpsb
lods
adc
mov
bound
mov
in
cmpsb
rcll
arpl
jp
push
pop
loop
xchg
sub
mov
dec
and
push
add
lcall
dec
mov
pop
fwait
shll
push
stc
outsb
sub
or
sarb
outsb
mov
dec
jecxz
push
test
movsl
in
pop
cld
ret
je
mov
xchg
or
adc
repz
push
insb
ret
inc
sub
cmp
add
xor
mov
sbb
mov
call
fdivrl
bnd
loope
mov
add
pop
cli
jbe
and
sbb
cli
movsb
daa
repnz
les
dec
mov
and
inc
imul
xchg
lret
fwait
adc
in
jne
sbb
push
les
into
xorb
mov
inc
imul
dec
sbb
loopne
add
imul
leave
stos
inc
sbb
pop
sub
bound
repz
out
add
out
jg
xchg
nop
bound
scas
add
inc
cmpsl
cmpsb
cmp
loope
xchg
pop
fsubr
cmp
mov
dec
lds
stc
mov
flds
data16
scas
sub
and
int
stos
imulb
rol
mov
loope
ret
pop
popf
std
jbe
test
call
sbb
and
pop
mov
lret
add
lods
jg
sub
mov
pop
xchg
and
mov
xchg
les
push
lds
in
fwait
rol
cmc
mov
xchg
xchg
and
pop
jle
lret
nop
xchg
sbb
adc
cmc
aaa
ja
test
scas
addr16
nopl
and
cmp
xorl
push
sub
mov
xchg
xor
int
jl
mov
xchg
and
cmp
jb
mov
inc
dec
mov
jge
sti
jl
sahf
xor
test
outsb
pop
jl
popa
outsb
jne
movsb
jnp
push
lahf
and
repz
and
pop
loop
mov
mov
pop
pop
pop
jle
xorl
arpl
fwait
nop
inc
pop
inc
lcall
pushl
xor
or
xchg
aaa
rcrl
add
pusha
testl
clc
add
test
test
pop
xor
js
lods
shlb
in
les
add
inc
jmp
out
ret
adc
xor
and
shlb
scas
push
mov
pop
pop
ds
push
cmpsb
mov
popf
jbe
mov
mov
dec
mov
mov
sub
or
adc
pop
lret
mov
notb
inc
and
sahf
jle
lods
mov
sub
in
jmp
out
leave
push
lahf
pop
mov
fdiv
xchg
lods
test
jle
int
inc
lahf
dec
mov
test
dec
aad
imul
inc
out
jns
jns
sbb
push
sub
cmp
aam
mov
push
ss
lock
stos
test
test
mov
cmc
movsb
pop
lcall
inc
shrb
lcall
insb
or
rcr
and
sbb
mov
imul
idivl
inc
mov
xchg
arpl
aad
xor
adc
pop
mov
mov
cmpsl
fldt
cmpsl
jnp
pop
dec
pop
mov
jae
mov
aam
inc
in
jl
mov
xor
stc
cwtl
cmpsb
or
icebp
std
cmp
rcl
push
adc
push
mov
loope
adc
sbb
dec
xor
repnz
jo
lock
sbb
int3
pop
lods
addr16
shr
roll
add
rorb
jmp
loopne
jbe
xor
sbb
sbb
add
imul
insl
repnz
sub
test
mov
scas
cmp
jne
imul
outsb
xchg
cwtl
cmp
sbb
insb
test
mov
scas
inc
rcrl
lods
movsb
push
pop
lds
ljmp
cmpsb
pop
xchg
pavgw
int3
subb
mov
fistl
mov
in
adc
lcall
mov
ss
sub
cmpsb
stos
push
cmp
pop
mov
pop
xchg
fildll
mov
xor
sbb
push
in
inc
mov
hlt
xorb
mov
lds
out
sbb
and
mov
cs
push
pop
xchg
cmp
jg
iret
and
mov
adc
jo
loopne
mov
jecxz
jbe
or
sbb
mov
sbb
fdivs
pop
mov
sbb
clc
fisubrs
cmc
dec
cmpsl
jns
call
cwtl
pusha
lcall
jo
jne
and
adc
xchg
pop
cmp
add
and
ret
clc
into
popf
dec
adc
push
int3
inc
jecxz
outsb
or
hlt
out
into
pop
lahf
popf
or
pop
xchg
test
and
xlat
or
and
cmp
cmpsb
cmpsl
je
orl
adc
push
jmp
and
test
test
inc
xor
out
push
shll
ret
imul
ss
inc
xchg
outsb
mov
dec
xor
xchg
xchg
mov
mov
jns
mov
shl
cmp
into
fs
es
xchg
lods
pop
add
shrl
dec
fsubrl
test
test
jbe
sarb
leave
ljmp
test
mov
mov
add
mov
stos
lret
xor
imul
jge
mull
movsb
hlt
rorl
or
dec
repnz
jl
aam
repnz
fxtract
fdivr
aad
and
jge
push
jno,pt
test
repnz
xchg
jle
xchg
dec
mov
xchg
sub
clc
lods
xchg
leave
mov
call
data16
addr16
test
inc
sub
pop
ljmp
pop
hlt
aam
into
cmp
jp
daa
addl
push
roll
or
lret
pop
sub
js
xlat
stc
jp
mov
pushf
dec
les
aam
inc
es
repz
mov
push
daa
adc
lods
jp
xchg
test
sub
sbb
shlb
mov
movl
push
pop
and
lock
gs
adc
nop
dec
push
loop
outsl
push
fiaddl
push
sbb
cmp
dec
add
and
mov
popa
sub
and
adc
mov
popf
pop
jmp
outsl
inc
daa
leave
mov
jnp
xchg
xchg
cmc
add
aam
in
lret
xchg
test
ret
fcoms
jnp
lods
mov
cs
cld
inc
loopne
push
inc
and
fcoms
rorl
push
stc
pop
or
inc
aas
sbb
xchg
mov
pop
fs
lret
int3
dec
inc
rcrb
push
fnstsw
shlb
shrb
ss
sahf
cli
push
pushf
inc
mov
add
xor
sbb
xorl
mov
mov
scas
push
pop
add
adc
cmc
ljmp
jg
adc
gs
in
ds
push
insl
out
mov
add
ljmp
mov
sahf
add
pop
cli
and
and
inc
mov
cmpsb
test
inc
jge
scas
xchg
jp
rcrb
lret
jns
push
xor
rcr
fcompl
out
xor
lcall
leave
das
pop
fcompl
in
mov
mov
jae
mov
test
lods
jns
stc
enter
addl
or
iret
sbb
push
add
outsb
dec
dec
and
rcll
push
jnp
rcrb
popa
test
pop
inc
aam
mov
mov
xor
cmp
cld
out
imul
pop
adc
pushf
sub
ss
dec
stc
cld
sub
sbb
aam
notb
adc
cltd
in
lahf
inc
lahf
imul
xchg
shlb
jo
mov
fdivs
mov
sbb
sbb
sub
lods
sub
ja
jg
jmp
stos
aas
mov
mov
push
mov
dec
aad
outsb
mov
fucompp
addr16
jecxz
xchg
and
or
mov
arpl
pop
mov
xchg
jg
xorl
inc
push
dec
mov
jge
xor
jge
or
jbe
lret
insb
or
mov
testl
dec
xchg
stos
leave
pop
rol
push
mov
int
repz
dec
dec
hlt
jmp
and
pop
mov
pop
movsl
imul
cmp
int3
sub
sbb
or
jp
push
pop
lods
dec
mov
lcall
sbb
sub
cmp
int3
sub
sbb
or
jp
push
pop
lods
dec
mov
lcall
ja
sub
cmp
int
fcomps
in
or
jp
push
pop
movsl
dec
pop
mov
mov
sbb
lods
dec
cld
lds
aad
mov
or
mov
mov
sub
cmpl
mov
je
cmp
je
push
lea
push
push
movb
call
call
mov
xor
xor
call
mov
xor
call
mov
mov
lea
push
call
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
pop
pop
test
jne
mov
not
mov
movb
or
mov
leave
ret
add
xor
inc
int3
and
gs
xor
shll
loope
icebp
roll
mov
inc
adc
popa
xor
add
popa
and
add
mov
sub
icebp
mov
shl
push
mov
jmp
sub
in
mov
leave
mov
mov
mov
inc
pop
aas
and
and
ss
lcall
mov
mov
jge
sbb
in
out
in
lret
mov
add
in
in
popa
cld
jae
in
andl
lea
mov
push
push
push
jnp
pop
mov
sub
inc
mov
mov
mov
shll
int
fldl
mov
fidivl
cmpb
andl
dec
icebp
loop
push
sbb
add
lods
hlt
mov
sub
xor
es
icebp
test
rcll
incb
iret
dec
mov
popa
inc
int
rcll
dec
addb
pop
inc
inc
mov
movsl
add
adc
xlat
mov
inc
or
xlat
icebp
cmpl
push
and
jne,pn
jle
dec
jno
addl
mov
rorb
adc
push
push
sub
and
ret
xchg
sarl
fisubrl
jge
inc
xor
adc
adc
jno
add
mov
roll
mov
inc
adc
popa
xor
add
popa
and
add
mov
roll
mov
inc
mov
jecxz
icebp
pop
mov
cmpsb
in
fdivrl
xchg
sub
rclb
stos
fisttps
xor
repz
xchg
clc
adc
jp
sti
lds
addr16
mov
lret
lcall
je
xor
cmp
lret
adcb
es
cli
jo
push
xorb
mov
or
pushf
shll
movsl
adc
stos
es
shlb
sbb
cmc
fs
in
enter
jg
fdivs
mov
iret
xor
jecxz
xchg
xchg
out
daa
fwait
fs
es
in
or
jge
stc
add
ljmp
and
xchg
adcl
not
dec
fimuls
and
add
push
mov
pop
push
xor
shl
jp
mov
pop
loopne
nop
arpl
inc
lahf
and
push
add
scas
ljmp
sbb
inc
dec
cli
mulb
xor
in
sbb
mov
add
dec
inc
and
out
in
scas
inc
cli
mov
mov
cwtl
inc
push
divb
ds
sbb
jp
test
mov
andl
mov
addr16
aad
pop
inc
jnp
cmpl
movsl
cwtl
jb
or
push
sub
ja
scas
jg
mov
cmpsb
sub
or
pop
lods
popa
jecxz
mov
sub
call
xlat
xchg
dec
jmp
in
hlt
lods
pop
test
push
push
lea
xchg
aaa
jp
scas
cmc
es
lret
clc
imul
xchg
lea
mov
xchg
fldl
sbb
repz
xor
push
sbb
repnz
popf
jle
pop
mov
sub
or
loope
aas
cld
fiadds
iret
loope
or
pusha
cmp
in
loopne
imul
mov
gs
dec
popa
inc
mov
or
inc
in
xor
mov
cs
hlt
packssdw
sub
sbb
daa
cmc
mov
xchg
ss
aaa
mov
cli
adc
pusha
pop
ss
pop
or
push
cmp
push
cmpsb
aaa
cwtl
data16
iret
push
pop
iret
xchg
into
in
push
popl
divb
xchg
fs
push
dec
and
jecxz
push
adc
pop
sub
fsubr
aas
scas
dec
lret
mov
int3
adc
repnz
pop
lock
das
js
pop
add
mov
ficompl
out
mov
aad
lods
sarb
push
push
inc
sti
in
inc
jecxz
mov
mov
cltd
adc
hlt
mov
test
jp
inc
jg
push
xor
pop
loopne
sbb
imul
cmpsb
sub
push
xor
xchg
cmp
push
add
adc
cmp
andl
sbb
xchg
std
fldenv
imul
dec
ljmp
js
add
mov
outsb
cmp
mov
push
mov
ficoms
push
xchg
fcomps
jo
fs
fcmove
aaa
cs
cmp
das
jl
int
add
gs
gs
rclb
jae
sahf
sub
sub
add
insl
fcmovb
sub
push
sti
es
xchg
add
outsl
dec
test
dec
mov
mov
clc
push
popf
xor
cmp
rcll
push
and
jbe
mov
enter
pop
pop
xchg
stc
ljmp
add
push
aad
cmc
cltd
stos
lret
cmp
sub
xor
jecxz
adc
fidivrs
sahf
aad
cmp
les
xor
int3
jmp
inc
int
shlb
mov
lret
mov
aas
jge
cld
stos
cld
outsb
lods
aaa
jmp
inc
pop
or
and
sub
or
jmp
test
stc
in
lcall
lret
push
call
push
in
scas
jne
xchg
fwait
loop
unpcklps
ds
cli
pop
push
out
xor
add
or
vaddps
ret
std
or
in
pop
jne
mov
add
mov
pop
inc
mov
and
xor
ds
mov
inc
repz
xlat
sarl
push
outsl
rolb
or
dec
fnstcw
xor
and
dec
cmp
call
or
rol
insl
jb
lret
rclb
sbb
or
mov
test
mov
jnp
pushf
call
lds
adc
ret
inc
lods
mov
aam
imul
leave
sahf
and
pushf
ror
sub
rcrl
lods
dec
leave
movsb
dec
or
ljmp
ret
push
pop
adc
xor
mov
sub
scas
push
jae
test
cli
mov
cmp
cmp
push
xor
out
sub
in
dec
mov
or
sarb
jmp
movsb
andl
dec
lds
mov
push
scas
sbb
cmp
icebp
leave
and
arpl
lea
push
mov
or
sarb
pop
fsubrl
pusha
mov
mov
rolb
pop
imul
aam
ja
rcll
cmpb
out
filds
psubusw
sub
sbb
call
loope
outsl
inc
dec
pop
icebp
sub
es
gs
sub
mov
mov
cs
rcr
adc
sub
mov
inc
xor
xchg
mov
and
or
jae
sbb
out
in
lock
lret
iret
leave
icebp
ret
rcrl
fildl
fwait
je
xchg
aaa
mov
aam
mov
subl
jns
sub
lret
or
adc
dec
xor
mov
lcall
add
inc
jmp
dec
out
in
stos
add
imulb
les
pop
fisubl
scas
insb
mov
jns
push
mov
out
jno
repz
shlb
jg
sub
fsubrl
mov
mov
or
in
or
mov
adc
pop
mov
outsl
je
xchg
pop
ljmp
adc
pop
pop
push
add
mov
pop
or
outsb
mov
mov
loope
lods
xor
aad
aam
sbb
je
repnz
lret
ds
rcll
jecxz
xchg
mov
fnstenv
test
mov
mov
fidivs
js
adc
mov
sbb
scas
jg
mov
sbb
push
gs
mov
xor
push
mov
mov
xchg
jmp
in
push
inc
mov
pushf
jecxz
int3
or
loope
cmp
pop
testb
jns
mov
xor
inc
outsl
push
cmp
or
adc
aad
out
xchg
call
cli
jecxz
das
add
push
adcb
leave
lret
ljmp
pop
lock
add
mov
push
xlat
sar
push
adc
nop
inc
lret
adc
push
xchg
aam
frndint
cld
dec
adc
mov
fcoml
fnstsw
std
sbb
and
sub
lock
pushf
loop
and
lock
enter
and
mov
lcall
mov
mov
mov
enter
mov
or
sbb
into
mov
sub
or
push
stos
pop
xchg
cmp
in
xlat
push
clc
jp
add
andb
aam
bound
test
lds
imul
add
dec
into
adc
mov
add
or
cmpsl
lods
mov
jns
push
adc
cltd
je
je
jp
or
mov
clc
stos
add
jl
arpl
hlt
lret
in
xor
sub
lahf
aad
mov
sarb
into
inc
cs
dec
inc
inc
adc
cmp
mov
cwtl
cmp
mov
pop
add
xchg
jl
shl
nop
in
xchg
ret
inc
lret
scas
pop
aas
cmc
xchg
or
dec
scas
mov
loope
fcmovb
jae
push
int
xor
cmp
cmp
cmp
stc
sahf
cwtl
lahf
aaa
js
and
and
shlb
xchg
mov
adc
sub
and
lahf
es
mov
lock
lods
js
xchg
scas
sub
lret
out
movsb
xchg
gs
inc
sbb
mov
add
imul
nop
rcrb
in
fidivl
add
ss
mov
mov
push
fwait
outsl
and
fisttpll
push
jle
mov
mov
movsl
jg
jns
dec
push
loope
mov
jl
mov
add
xor
in
push
push
add
fdivr
pop
push
imul
add
inc
fs
pop
int
je
and
cmp
insl
sbb
sti
ret
pop
ret
test
jl
mov
jae
xor
pop
mulb
ret
dec
jmp
fidivrs
cmp
jmp
std
xchg
test
fwait
push
rolb
inc
setb
subb
push
add
cmp
dec
popa
jecxz
xor
mov
leave
sub
enter
add
add
ret
jle
pop
repnz
pop
ss
adc
cltd
movsl
pop
popa
dec
adc
mov
out
pushf
jp
popf
es
jg
fisttpll
cwtl
cmp
push
adc
jge
jmp
jge
enter
dec
addr16
es
adc
outsl
data16
dec
add
pop
mov
dec
adc
xchg
xor
ljmp
jmp
iret
jae
call
mov
fistpll
ret
test
inc
push
popa
adc
out
out
cwtl
out
xchg
push
mov
mov
lahf
mov
popf
jmp
xchg
jb
mov
mov
adcb
pop
mov
ret
js
imul
outsb
rclb
mov
pop
pop
pop
insb
inc
loop
movsl
int3
dec
fcomps
lds
mov
fsubrl
push
or
pop
mov
shl
addr16
movsb
movsb
push
ds
sahf
pushf
icebp
jnp
sbb
cmp
aaa
mov
push
sub
fisttpll
cld
sub
out
jmp
imul
jbe
mov
jg
push
lea
jno
test
sti
aam
jmp
sub
jge
mov
mov
xchg
ret
roll
push
push
inc
fldenv
lea
mov
stos
pop
aad
or
xor
mov
cmp
xor
lods
jbe
push
leave
mov
scas
lea
mov
push
enter
jge
iret
das
mov
push
mov
jp
mov
push
mov
loop
push
pop
aad
inc
out
mov
int3
mov
cmp
out
shr
loope
xor
leave
icebp
mov
dec
push
out
orl
mov
mov
push
jo
or
push
cld
ljmp
xchg
jnp
outsl
cmp
and
dec
sub
mov
mov
xchg
ds
adc
fmuls
mov
push
mov
adcb
mov
cmp
cmc
loope
filds
or
aas
xchg
fimull
ror
int
mov
pop
or
roll
aad
xchg
pop
mov
xchg
cmp
sarb
jg
std
idivb
inc
jne
inc
pop
mov
push
lods
cmp
jmp
rcrb
inc
inc
xchg
gs
pop
ror
xchg
sahf
call
sub
inc
mov
mov
push
icebp
loop
pop
inc
int
pop
addr16
cmp
push
pop
xor
inc
mov
adcb
iret
push
sti
lock
mov
cmp
pop
mulb
nop
and
sub
sbb
lret
mov
inc
mov
dec
insb
dec
xlat
pop
dec
push
xchg
cmp
stos
lds
fsubrs
gs
xchg
inc
jl
pop
push
pop
xchg
mov
insl
pop
insl
fldenv
pop
cmc
pushf
adc
rorl
loope
cmc
and
sub
aad
mov
mov
icebp
jns
addr16
repnz
xchg
or
imul
push
fnstcw
sub
push
sbb
lods
movsb
dec
add
enter
fldl
imul
imul
paddq
scas
fsubr
sbb
push
pop
mov
mov
icebp
or
mov
divl
or
sbbb
sub
filds
push
call
rcll
inc
lods
mov
pusha
lahf
sub
jo
push
cmp
imul
cmpsb
mov
test
test
mov
xlat
imul
cmc
jae
inc
inc
and
scas
sbb
clc
shrl
or
imul
and
xchg
daa
rorl
jbe
out
clc
pop
or
testl
mov
stc
push
hlt
add
popa
push
jmp
mov
iret
bound
or
into
dec
push
jno
and
inc
cmpsl
mov
out
orl
mov
fdivs
mov
xor
push
pop
andb
js
add
jns
mov
rcr
dec
in
rol
fidivs
push
push
shll
and
shlb
out
or
inc
insl
fwait
es
push
xchg
rorl
movsl
maskmovq
negl
pop
dec
sub
push
mov
aam
mov
jns
mov
in
out
xor
or
xor
jmp
int3
fwait
adc
mov
fnsave
icebp
addr16
in
pop
jbe
aam
mov
cmpsl
cld
stos
insl
cli
test
ret
adc
cmp
xor
btsl
sahf
mov
push
sub
aas
hlt
lea
add
aas
notb
js
test
shrl
imul
dec
jg
insl
fidivrl
mov
mov
inc
fisubs
lahf
push
shrl
clc
jbe
scas
mov
cmp
dec
sub
mov
and
xor
cmp
cwtl
dec
clc
mov
fdivr
addr16
or
test
xor
mov
fdivs
xchg
pusha
scas
test
cmp
cmp
daa
mov
cmp
jecxz
sub
ja
push
mov
fcomps
pop
add
popl
out
sbb
sub
outsb
mov
cmp
imul
mov
jno
scas
fwait
dec
outsb
adc
dec
lret
fwait
sbb
cmc
stos
loop
lahf
cmp
jge
js
sub
es
mov
loopne
xchg
pop
cmp
adc
sub
rcrb
lds
in
inc
xchg
daa
fsubrl
inc
mov
jns
aam
xchg
fsubl
sub
mov
push
add
xchg
enter
dec
sub
sub
hlt
push
lret
adc
mov
stos
arpl
mov
jne
es
jp
and
cs
fdivrs
push
or
lds
cltd
jg
jle
lret
dec
push
loop
push
add
mov
cmpl
leave
xor
js
jle
mov
jecxz
fsubr
daa
mov
daa
int
outsb
clc
pop
xchg
or
sahf
and
xchg
inc
sbb
ds
pop
lret
lds
movsl
gs
fs
je
fdivs
jle
iret
jg
int3
scas
lds
notl
rcll
push
push
mov
xor
adc
ss
icebp
push
sahf
inc
mov
inc
jne
out
aam
sbb
lea
xchg
sarb
es
inc
les
inc
shr
lods
xlat
sub
sub
in
test
mov
mov
dec
lds
leave
inc
lock
xchg
jae
pop
scas
lea
inc
outsb
or
pop
es
jns
fisttpll
stos
inc
xor
add
rorb
sub
and
outsl
inc
xor
add
inc
jle
dec
mov
lock
adc
out
cwtl
jp
mov
movsb
shrb
mov
xor
or
cmp
ss
lea
xor
sbb
lret
ror
mov
cld
lret
imul
lock
and
scas
dec
out
loopne
add
dec
pop
mov
fs
sbb
in
push
shlb
pop
mov
inc
fmuls
push
sub
shll
lret
loopne
mov
stos
add
test
nop
mov
push
mov
push
add
xchg
fdivs
leave
ds
cmc
pop
ja
mov
aam
jmp
and
out
sbb
lahf
cmp
adc
mov
lahf
cmpb
jp
js
mov
repz
jl
iret
movsl
sub
and
ret
cli
inc
idivb
and
cmpsb
mov
pop
pop
inc
paddsb
sub
mov
sub
cmp
push
push
mov
add
clc
xchg
push
mov
xor
lret
aas
lods
sub
mov
inc
dec
or
faddl
sbb
inc
mov
mov
bound
aam
arpl
sub
lahf
ret
jno
jae
sbb
ficoml
sub
adc
cld
in
mov
mov
mov
cltd
pop
inc
inc
cmp
jno
mov
xlat
adc
test
and
or
jmp
outsb
lahf
call
shll
mov
xor
or
mov
mov
pop
lea
adc
pop
add
fimull
xor
scas
repz
xchg
sbb
cmp
js
xchg
orl
in
mov
adc
jg
dec
es
addl
mov
mov
inc
mov
int3
and
mov
jo
sub
cmp
adc
out
scas
movsb
adc
stos
pop
aad
push
movsl
mov
cmp
xchg
xchg
mov
push
xchg
xor
mov
ljmp
and
js
outsl
lock
nop
push
and
pop
fldenv
mov
dec
pop
sub
mov
enter
mov
pop
test
cmp
sbb
jle
daa
mov
fwait
int3
inc
fdivrl
jmp
scas
in
push
mov
mov
add
repz
xchg
sub
das
push
in
ds
ret
jo
cmp
jae
out
mov
sub
sahf
negl
shrl
cmp
mov
dec
fsubrl
pusha
mov
sub
cmp
inc
movb
outsb
and
xchg
jmp
out
jmp
or
sub
cld
ss
in
lods
sarl
jne
and
addr16
test
fstps
push
in
xor
and
inc
inc
adc
inc
fcoml
pop
ret
xchg
sarl
repz
inc
and
test
mov
and
icebp
inc
adc
fcmovnb
js
jp
dec
or
push
push
mov
jmp
dec
dec
je
xchg
movsl
push
sbb
inc
mov
mov
fsubs
pop
jbe
in
in
mov
das
mov
adcl
test
test
pop
jge
daa
sahf
add
stos
and
pop
mov
into
ja
iret
mov
adc
and
jmp
cmp
push
adc
jnp
inc
aam
movsb
fnstcw
lcall
xlat
test
mov
sub
sub
stos
into
std
push
push
jg
sbb
sub
mov
ja
xchg
and
fistpll
inc
xor
inc
in
fsubr
stos
lods
imul
add
addl
popf
popf
mov
shll
xchg
cmp
push
data16
cmpb
lea
aas
push
jge
push
mov
push
pop
decl
gs
out
lret
mov
and
jle
mov
xor
push
ja
movsb
jmp
push
mov
fs
cmp
in
test
jmp
insb
inc
pop
sub
xor
out
and
dec
iret
or
push
xor
ss
inc
popa
pushf
push
sarb
mov
call
in
push
test
cmp
ja
adc
enter
dec
mov
cmp
adc
sbb
dec
fildll
adc
out
lods
inc
sub
push
cli
cli
les
lcall
shll
or
out
xchg
or
xor
cmp
sub
add
push
xlat
xchg
pusha
xchg
popa
mov
arpl
xchg
test
popf
mov
rclb
std
cmpsb
cmpsb
cmp
dec
jmp
icebp
xor
xchg
clc
adc
dec
andb
mov
xlat
inc
fnsave
cmc
push
pop
mov
or
aam
call
jne
mov
out
fisubrl
sub
jbe
cmp
in
inc
jns
cmpsb
fwait
outsl
jle
cmp
ret
push
andl
shlb
push
inc
dec
mov
mov
ja
mov
mov
loop
popf
test
lods
mov
lea
sub
hlt
add
and
shrb
inc
aas
leave
jns
sbb
pop
jns
mov
inc
cmova
loopne
dec
mov
inc
cltd
jle
push
ret
orl
aam
roll
xor
fsubl
rol
sbb
push
inc
scas
loope
sbb
nop
mov
nop
sar
push
in
leave
lods
ljmp
adc
mov
jns
lock
int
dec
xlat
jecxz
jl
mov
push
push
sbb
js
push
sub
jle
sub
movb
loope
fwait
xchg
movsb
insl
fs
dec
js
mov
xlat
decl
in
int
fs
negb
pop
popf
int3
into
mov
mov
cmp
es
xor
inc
sbb
rorl
mov
lcall
or
inc
add
popa
and
add
mov
roll
mov
inc
adc
popa
xor
add
popa
and
add
mov
roll
mov
inc
and
inc
sbb
jno
add
popa
and
rcll
mov
roll
mov
inc
dec
push
jnp
adc
add
popa
mov
outsb
jnp
loope
xchg
pop
push
dec
push
mov
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
jmp
lea
push
pushl
call
lea
push
pushl
call
jmp
call
push
mov
call
xor
leave
ret
adc
pop
and
inc
pop
dec
push
jmp
jmp
fwait
in
adc
pop
and
sub
or
fldt
stos
cmc
fwait
in
or
sbb
sub
cmp
insl
sbb
mov
cmpsb
mov
stos
aad
stos
iret
test
jnp
pop
xor
std
inc
ljmp
jle
cmp
std
pushf
fnstsw
inc
xchg
jae
sub
cltd
mov
ret
inc
aam
pop
lock
inc
lods
mov
pop
lret
aad
cmc
fwait
sbb
outsb
stc
mov
xchg
insb
shll
cmp
fisubrs
or
mov
in
adc
adc
pop
stos
cmp
repnz
push
enter
and
gs
inc
out
xchg
mov
cmp
cmp
xchg
pop
xchg
mov
push
clc
sub
lcall
jb
fidivrl
stos
lock
sub
add
cli
enter
nop
inc
xchg
pop
cmc
mov
mov
jnp
imul
push
sub
jl
mov
popf
jmp
fstpt
out
fwait
in
jns
pusha
mov
es
and
jle
jnp
xchg
jmp
movsl
aad
mov
out
jp
and
push
sbb
pop
inc
add
mov
in
aad
scas
les
sub
pop
das
dec
aas
sbb
sbb
xchg
sti
test
mov
movsl
lret
aad
lds
adc
pop
and
sub
or
stos
cmc
fwait
in
adc
test
xor
pop
jne
pop
mov
mov
cld
lcall
outsl
fistl
mov
loop
jmp
jbe
outsb
lcall
mov
lahf
repz
cmp
test
out
push
sub
loope
push
jle
mov
imul
cs
adc
in
and
push
sarl
subl
push
bound
lock
mov
lret
mov
fwait
add
js
cmp
or
xor
rcrb
aad
enter
inc
mov
rorl
jl
fcomps
or
enter
xchg
cmpb
pop
cli
mov
mov
hlt
lods
push
xor
cmp
in
push
sbb
into
xorb
shlb
mov
jo
mov
jae
add
push
aas
shll
das
sarb
jp
push
jecxz
pop
repz
dec
rolb
sbb
lahf
loope
in
xchg
mov
sub
ja
call
jecxz
cmp
arpl
test
pop
cmpsb
mov
popf
xchg
jb
enter
pop
scas
pop
ss
jg
push
xchg
add
in
lret
lods
push
xor
add
jmp
decb
aas
mov
sahf
std
loope
push
cmp
fucom
clc
mov
lods
adc
fimull
jo
andl
inc
pop
popf
adc
jbe
sbb
jae
aaa
inc
hlt
add
leave
cld
ja
pop
es
adc
cs
cs
sub
add
mov
push
mov
pop
pop
sti
lods
movsb
push
mov
xlat
adc
movsb
cmp
dec
push
inc
out
das
xchg
add
fwait
xchg
out
sbb
xor
shrl
cwtl
insl
test
int
icebp
hlt
hlt
add
pushf
ss
cmp
out
mov
xor
outsb
in
mov
fcomp
adc
std
aad
ret
mov
mov
mov
xor
or
jns
adc
cmpsl
ja
pop
mov
shll
shll
xlat
xchg
cmp
nop
sar
jb
imul
stos
lea
push
clc
jp
mov
pop
arpl
out
fld
in
and
int3
js
xchg
popf
jne
jnp
push
sbb
insl
sarl
add
cmc
mov
jp
inc
popa
aaa
or
ja
in
call
push
ja
cmp
in
aas
sub
push
dec
insb
imul
pop
test
outsb
or
push
aaa
loop
pop
cmp
xor
inc
adc
add
incl
xlat
or
fsubs
dec
arpl
push
test
dec
sub
sbb
and
in
push
loopne
mov
pushf
idivl
cmpb
test
les
mov
sbb
jg
sub
mov
pop
and
loop
inc
cmp
sti
cmpsb
and
data16
nop
xlat
xor
aaa
fstpt
repz
xchg
sarb
rcl
jmp
adc
test
or
dec
jae
adc
mov
ja
mov
leave
push
xlat
pop
inc
jecxz
negb
jge
clc
xor
cltd
mov
mov
icebp
pop
in
aaa
sbb
cmp
push
xchg
fcoml
jmp
imull
in
and
lods
stc
pusha
stos
cli
outsb
arpl
and
add
jno
iret
pmulhuw
fsub
xor
scas
cmc
nop
push
mov
popa
orl
dec
jbe
inc
or
mov
stos
test
adc
dec
insb
fldl
fisttpl
sbb
pop
mov
mov
push
and
or
fadds
xchg
jge
cli
mov
sti
adc
loope
test
xlat
pop
dec
imul
imul
clc
sbbl
xlat
ret
shl
xchg
insb
push
arpl
fwait
jbe
xor
outsb
ss
cli
xchg
xchg
test
lret
enter
or
pop
and
shrb
int
clc
inc
aas
movsb
push
test
sub
inc
pop
add
scas
cmp
sub
mov
push
push
outsl
inc
fdivr
pushf
dec
sahf
sbb
cmpsl
and
lahf
cmp
test
cwtl
sub
inc
sbb
mov
mov
inc
xchg
xor
gs
pop
out
insl
push
and
sbb
lods
xor
cmp
xchg
movsl
sbb
jp
lods
mov
sbb
cltd
cmpsl
add
mov
loope
mov
xor
lods
ret
and
scas
dec
les
dec
inc
ja
cmpsb
daa
adcl
mov
pushf
inc
aas
sbb
test
push
in
repz
adc
xchg
aad
das
xor
roll
mov
lret
outsl
outsb
cmpsb
stos
or
mov
bound
loopne
fsubrl
into
push
sub
ds
fsubrl
pop
jnp
shrb
movsb
jg
dec
push
icebp
ret
std
hlt
dec
scas
jb
xchg
cli
pop
sbb
jnp
mov
lock
jp
bnd
dec
sub
test
enter
scas
call
dec
inc
mov
sub
stos
out
cmp
outsl
fcoml
insb
lahf
or
fisttpll
sub
push
inc
nop
mov
lods
movsb
sub
lcall
cli
jno
ljmp
ljmp
mov
testl
jno
mov
pushf
mov
mov
jecxz
push
pop
xor
dec
pop
push
mov
jae
sbbb
mov
jl
les
add
push
es
aad
jne
insb
jle
outsb
icebp
das
sbb
pop
mov
rol
and
push
call
and
pop
loope
add
mov
ds
stos
subb
in
insb
or
inc
fldenv
out
test
pop
mov
movsl
add
inc
insl
popa
xchg
sub
outsl
ss
inc
shlb
stos
sti
mov
pop
movsb
cltd
push
fisttpl
sub
push
cmp
imul
mov
rcll
and
ret
lods
xor
cmpsb
dec
outsl
xor
sbb
jne
lds
sti
insb
test
leave
lcall
dec
xchg
pusha
ja
bound
dec
sti
jg
xchg
lret
imull
sub
lret
mov
fistps
mov
xchg
rcrb
ret
lds
fldcw
xchg
or
sbb
daa
or
and
jo
fsts
add
mov
push
cmp
loop
lret
cwtl
repz
adcb
loope
mov
scas
cltd
cmc
idivl
pushf
fucomp
stos
test
jp
inc
insb
in
push
xor
mov
or
add
cmp
das
inc
mov
cmp
hlt
mov
mov
aaa
das
mov
xchg
in
mov
jecxz
pop
adc
cltd
sbb
push
cmpsb
aam
imul
jl
xor
inc
push
in
mov
jg
push
pop
cli
mov
pop
xchg
sub
les
jno
outsl
or
mov
or
mov
xchg
xchg
push
sahf
pop
jge,pt
pop
std
sub
jp
jle
mov
sub
jo
data16
and
loopne
movsb
cmp
mov
outsb
popa
and
push
lret
sbb
mov
out
add
jbe
pop
sbb
stc
and
repz
jns
je
sahf
mov
mov
addb
dec
push
ret
pop
adc
scas
xchg
sahf
pushf
and
mov
and
add
test
inc
pop
cld
cmp
pop
sub
int3
push
testb
in
insb
sub
repnz
mov
inc
jnp
daa
mov
mov
jle
mov
fwait
pusha
inc
dec
jecxz
clc
stos
sarl
jns
cmpsl
loopne
insl
in
fsubp
mov
xchg
pop
pop
push
fdivl
fisttpll
pusha
mov
mov
sbb
loop
insl
inc
push
fisubrl
add
add
inc
lods
xor
xor
and
xor
ss
cmp
or
push
dec
jne,pt
pop
sub
mov
push
xor
cmp
pop
shrl
pop
lcall
daa
arpl
lods
stc
xchg
mov
call
xchg
clc
test
mov
jge
pushf
cs
sbb
mov
sub
hlt
jne
mov
int3
fsubp
test
dec
inc
stos
dec
jae
push
jg
push
xor
and
sti
mov
enter
and
mov
les
xor
repnz
xchg
xchg
in
sbb
xchg
jle
ror
shlb
mov
js
cmpb
jecxz
lret
adc
adc
pop
data16
cmp
imul
cmp
mov
mov
jae
call
dec
pop
ljmp
scas
or
mov
mov
gs
push
cmp
outsl
loopnew
mov
js
ljmp
fdivrp
sbb
mov
lds
cld
test
mov
mov
add
inc
pusha
jae
lret
sub
fcoms
xchg
mov
jecxz
mov
mov
xchg
lds
fidivrl
leave
scas
mov
lret
iret
test
mov
mov
test
ss
pop
inc
out
out
xchg
dec
xchg
dec
pop
cmpsb
inc
cltd
lds
cmpb
sub
cmp
pop
cld
in
inc
push
sbb
mov
jns
out
mov
xor
stos
push
push
loopne
jmp
jo
jb
sub
cmpsb
push
jge
inc
mov
loope
inc
insb
into
push
mov
out
cltd
inc
cmc
xchg
xchg
rcl
aas
cmc
adc
in
cmp
lcall
stos
pop
rclb
mov
out
cli
aas
loop
dec
cltd
shrl
in
sti
jmp
sbb
push
xor
or
or
cmp
mov
shl
or
ds
pop
dec
mov
jge
inc
push
push
test
jge
mov
cmp
fsub
mov
or
js,pt
fcomps
pushf
ds
push
mov
inc
les
cmp
xor
mov
clc
mov
or
xchg
mov
movsl
cli
imul
out
enter
jo
mov
jb
mov
mov
mov
lock
adc
sar
movsl
test
out
sbb
mov
pusha
fisubrs
push
mov
push
lea
pop
sti
mov
mov
xchg
mov
lea
lock
add
xchg
out
and
add
sub
push
mov
hlt
jmp
xchg
das
pushf
mov
arpl
test
xorb
sub
xor
repz
pop
jbe,pn
cmp
sbb
inc
ja
sub
sub
pop
ftst
jg
sbb
mov
out
or
ss
fists
test
inc
xor
imul
dec
adc
fwait
js
push
add
negl
in
xchg
fcmovnbe
test
push
aaa
dec
gs
ljmp
cmp
lret
sbb
xchg
or
fimull
cmp
inc
adc
stc
add
cmp
cmp
lret
rcrb
loopne
xchg
cwtl
in
cmp
out
rcrb
cs
mov
test
mov
inc
dec
add
sub
add
flds
popa
push
mov
sub
cmp
xchg
cmp
les
imul
add
xchg
fcompl
jmp
and
stos
pop
sub
cld
lret
movsl
nop
bound
movsb
sbb
in
mov
push
jl
push
jae
das
jp
call
mov
mov
xor
stc
jb
jnp
push
fsubl
inc
jge
call
mov
sbb
cmp
int
call
and
xor
mov
dec
insb
push
mov
fmull
sub
les
daa
out
mov
lret
mov
out
imul
pop
sub
xorb
call
outsb
pop
out
orl
adc
es
xchg
lods
ja
mov
repz
or
jg
pop
addr16
xor
push
inc
mov
pop
jp
fnsave
dec
push
dec
fcompl
inc
daa
int
fldl
loopne
nop
and
xchg
fwait
inc
adc
jmp
push
push
jbe
sbb
shlb
add
cmp
jle
xor
pop
push
lret
mov
cmpsl
inc
push
pop
sahf
mov
mov
imul
stos
jb
jne,pn
cli
mov
sbb
call
mov
lret
je
mov
push
imul
jnp
mov
scas
jl
pop
sub
mov
sqrtps
imul
push
or
xor
icebp
addr16
jge
add
mov
sbbl
jle
movsb
out
ret
mov
movsb
std
lds
cmpl
loope
orl
add
lret
mov
lahf
mov
int
repz
in
push
pop
mov
sbb
mov
out
mov
xchg
sti
xor
mov
or
pop
roll
inc
outsl
dec
hlt
inc
fidivs
and
inc
int3
pusha
sbb
out
sbb
lahf
out
mov
xchg
fisttps
dec
je
jp
cld
xchg
or
xor
fcmove
gs
stc
test
cmpsl
in
pop
dec
mov
or
sub
addl
sub
gs
xor
int
data16
xor
inc
jge
mov
cmpsl
mull
jl
repz
cmpsb
push
mov
clc
popf
lea
rolb
xchg
mov
mov
pushf
xchg
mov
imul
fnclex
inc
dec
lahf
push
xchg
dec
pop
pop
push
pop
and
inc
gs
push
out
or
in
iret
cmpb
out
sbb
lods
fldcw
les
lds
lock
arpl
and
pushf
jne
inc
push
sub
notl
mov
cs
arpl
insl
mov
dec
pop
push
mov
adc
jecxz
xchg
pusha
jb
out
leave
push
and
xorb
xor
lods
push
cmp
incl
cwtl
mov
jnp
push
je
std
jl
mov
jbe
xchg
cmp
orb
mov
xchg
filds
cmpsl
inc
cld
mov
xchg
repnz
ret
jno
cmpsl
push
or
ljmp
subb
sub
mov
jmp
xor
push
rcll
icebp
xchg
incl
mov
dec
xor
jmp
das
inc
mov
jns
and
pop
sarb
shl
sub
sti
jecxz
lret
sbb
leave
jle
dec
pop
out
stc
xchg
add
fstl
sbb
lea
out
addb
cmp
jno
or
lock
and
ret
outsb
xchg
xchg
xor
test
fcompl
psubusb
rorb
paddusw
aaa
cmp
sub
fstpt
ror
mov
mov
test
movsl
outsb
cli
jg
cld
int
mov
lret
stc
and
stos
pop
int3
or
test
f2xm1
sub
mov
pop
pop
add
dec
icebp
int3
jne
aas
cli
sub
or
jns
repnz
out
js
xchg
shrb
mov
or
iret
sub
and
or
jl
cwtl
push
jl
mov
mov
test
fistpll
or
cld
jae
xchg
imulb
xchg
sbb
dec
pop
into
repnz
jmp
fsubs
call
loope
stos
push
imul
mov
mov
push
jg
mov
mov
ss
faddl
jne
orb
fnsetpm(287
lods
fs
pop
pop
mov
arpl
and
and
nop
andb
xchg
scas
add
sbb
ss
xor
push
mov
add
lret
int
js
xor
cmp
fcmovu
loop
dec
jge
hlt
xor
in
and
cmpsl
push
mov
mov
mov
xchg
rolb
ret
lods
sbb
rorl
dec
sub
jae
add
enter
rol
push
gs
std
push
mov
aam
xor
out
ja
out
mov
cs
dec
pushf
in
mov
mov
ret
ret
scas
nop
addr16
dec
mov
insb
in
and
movb
sahf
jl
xor
xchg
in
jns
xor
aam
testl
insl
jb
inc
loop
mov
pop
push
in
iret
lds
jp
xor
add
pop
dec
lret
or
negb
ret
scas
push
das
hlt
hlt
cmpsb
sbb
xor
mov
sbb
cmp
add
inc
fisttpll
mov
mov
jbe
mov
mov
push
pop
test
inc
sbb
xor
push
into
pop
aad
mov
add
dec
vsubpd
add
adc
sbb
lods
aam
dec
inc
imul
scas
daa
inc
sti
stc
inc
and
mov
int3
dec
mov
sbb
int
cltd
sahf
sbb
arpl
into
das
push
mov
dec
mov
fildl
sub
xchg
or
out
imul
lods
pop
out
pop
out
push
cmp
int
sub
jmp
shll
push
repz
add
cltd
add
mov
out
sbb
sbb
fwait
ds
sar
int
lcall
pop
stc
fwait
jnp
push
cmp
sub
sbb
and
mov
ret
imul
jge
fs
lret
loope
mov
out
or
es
mov
xlat
pushf
loopne
lret
or
mov
xchg
scas
stos
jnp
or
lcall
fnsave
cmpsb
stos
dec
loope
mov
scas
pop
out
inc
xor
pop
adc
movq
outsl
daa
aas
nop
push
pop
cmp
mov
imul
mov
lea
push
inc
loopne,pn
adc
mov
imul
push
out
notl
mov
aam
cld
lea
and
dec
sahf
into
and
int
mov
mov
add
nop
icebp
jle
jne
add
jle
xchg
arpl
gs
cmp
std
xlat
jnp
jne
sti
add
pushf
fcmovbe
jmp
jno
outsl
or
in
jae
add
das
inc
sbb
jl
mov
cmc
mov
dec
inc
cmpsb
daa
fistpl
mov
icebp
fstps
sub
mov
pusha
fmull
hlt
jo
jl
dec
test
int
pusha
mov
xchg
dec
outsl
ret
push
lock
rolb
dec
mov
aam
and
aad
lahf
in
mov
and
into
aas
sub
in
jno
into
jns
mov
icebp
push
or
add
sub
lret
dec
out
popa
mov
jbe
jns
pop
repnz
dec
repz
cmp
sub
inc
xchg
int
icebp
xlat
jae
xchg
xchg
gs
lods
jae
rcrb
pop
cmp
mov
andb
xchg
clc
pop
or
or
push
lret
mov
imulb
jmp
add
imul
mov
jecxz
mov
in
movsl
pop
sbb
cmp
loopne
jbe
fwait
data16
mov
pop
sbbl
sbb
xchg
inc
aaa
sti
sub
pop
lds
lock
dec
clc
sub
mov
mov
mov
frstor
cmp
or
lcall
ret
fnstenv
roll
enter
dec
push
pop
mov
fs
jmp
popa
sub
test
add
test
mov
dec
es
sbb
adc
mov
mov
mov
test
mov
fldcw
shll
movsl
sbb
negl
adc
dec
imul
mov
in
inc
icebp
cmp
inc
sbb
pop
ja
repnz
add
xor
mov
jae
shll
mov
divb
insb
cmp
jne
push
dec
test
mov
dec
xchg
cs
and
mov
jbe
insl
xor
inc
sbb
xor
out
fisttps
pop
adc
adc
xchg
sub
xor
in
dec
lret
push
loopne
mov
push
xchg
loopne
and
xchg
ret
nop
in
andl
pop
fcompl
jbe
push
mov
mov
push
jbe
test
fsub
mov
mov
sbb
lods
ficompl
push
xor
mov
sbb
outsb
or
jecxz
sbb
pop
cmpsl
out
mov
mov
hlt
sbb
jmp
movsl
hlt
inc
jnp
push
dec
push
cmp
xchg
push
repnz
imul
ror
cmc
mov
mov
mov
lods
xchg
cld
jnp
test
leave
jns
sub
fisubrs
loop
dec
and
mov
xchg
mov
ds
xchg
add
in
rcrl
ret
outsl
enter
push
cmp
jo
jno
push
stos
cld
mov
mov
add
clc
fidivrl
cltd
xlat
mov
dec
jle
daa
aas
push
fstpt
sub
movsl
pusha
add
sarb
shlb
cs
dec
cmc
jo
arpl
push
rclb
add
lds
cmp
mov
sahf
inc
xor
scas
inc
sbbl
dec
xor
pop
sub
adc
jbe
jecxz
xor
cmp
sub
mov
fldcw
push
inc
stc
rorb
mov
jg
ror
jo
movsb
les
pop
and
sub
or
stos
cmc
fwait
in
adc
pop
and
sub
or
stos
cmc
fwait
in
adc
pop
and
sub
or
stos
cmc
fwait
out
adc
pop
and
stos
cmc
fwait
in
push
jp
pop
push
or
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
ds
je
inc
fcoms
hlt
inc
lret
and
jnp
mov
pop
hlt
dec
movsb
cmp
sub
je
je
push
enter
test
cwtl
adc
out
js
push
movsb
push
mov
test
xchg
or
insl
call
cmp
cwtl
add
test
mov
jg
jbe
jnp
mov
mov
enter
lods
aaa
adc
add
fwait
or
or
jge
cmp
stc
pusha
inc
test
mov
fldl
cmp
sub
cmp
loope
sbb
pop
jmp
mov
into
push
xor
fucom
cs
xchg
add
sbb
icebp
sub
popf
push
mov
mov
fistps
in
repnz
rolb
mov
les
jge
test
inc
je
hlt
and
add
in
xchg
and
cmpsl
aam
push
imul
test
gs
in
aas
int
imul
pop
cmp
movsb
clc
je
inc
fadds
xor
cs
cwtl
or
push
mov
sbb
test
inc
fstpl
push
fidivrs
nop
add
imul
popa
icebp
inc
fs
je
and
pop
in
icebp
push
in
out
hlt
adc
push
sub
dec
xchg
addr16
stos
push
lods
pop
xchg
xor
add
adc
in
hlt
push
movsb
cmp
fs
je
inc
fcoms
mov
adc
in
hlt
push
movsb
cmp
fs
mov
sbb
int3
sub
out
mov
inc
cmp
popf
and
jae
stos
and
daa
jo
mov
loope
fldcw
es
push
jne
push
and
mov
cmp
and
iret
sbb
insl
add
rolb
sub
inc
jae
adc
lods
int
icebp
fsubs
leave
inc
sub
sub
push
roll
add
xor
pop
hlt
cs
loop,pt
mov
ljmp
push
mov
test
adc
sub
push
sub
jle
xlat
js
mov
ret
jle
pop
xor
xchg
movsl
test
jle
jnp
mov
enter
rclb
push
pop
pop
jg
pop
shll
push
shld
cli
and
out
jb
sub
cmpsb
sub
dec
jae
loope
sbb
loop
push
xor
insl
pop
sbb
and
jb
sub
lock
js
icebp
test
sub
out
ljmp
xlat
cmc
sbb
cmp
inc
jmp
sbb
sub
mov
lock
scas
or
lock
adc
xor
out
addr16
and
mov
pop
and
adc
add
int3
lret
xchg
cmp
divl
mov
add
mov
dec
sub
sahf
pop
jmp
in
cltd
xor
fwait
or
insb
ljmp
sub
xor
rorl
push
sbb
adc
pop
cmc
loope
push
jae
jl
jne
or
xor
out
rclb
jmp
jns
dec
pusha
adc
les
and
cli
ret
xchg
xchg
fs
jns
xor
add
sub
mov
or
jmp
xchg
inc
js
insl
in
insb
imul
sub
ja
aas
cli
and
xor
cmp
pop
mov
jmp
into
or
dec
lock
add
cmp
cmp
cwtl
in
add
dec
jle
inc
adc
cli
out
and
jbe
xorl
lods
mov
mov
add
nop
pop
cli
lcall
inc
lods
lret
lret
movsl
inc
lods
adc
pusha
cmpsl
nop
cmp
dec
loope
inc
pop
xor
rorl
pop
fildll
decb
add
add
sub
sahf
mov
add
mov
cli
stos
pushf
ja
dec
jecxz
jo
cmpsb
push
dec
fdivr
imul
mov
pusha
and
sbb
hlt
inc
test
addr16
push
adc
call
bound
cwtl
or
and
stos
mov
mov
jl
divps
xor
jb
jge
jbe
movsb
push
cld
push
xorb
mov
arpl
cs
xchg
out
loop
or
jmp
mov
lock
sbb
test
jp
dec
rolb
pushf
push
push
repz
scas
sahf
cmpsb
cmpsl
pop
mov
in
lock
mov
sub
mov
and
arpl
or
gs
xor
sub
outsb
ficoms
mov
dec
dec
mov
inc
adc
adc
mov
addr16
or
enter
lahf
test
xchg
xlat
out
and
ror
cmp
popa
iret
xchg
lea
orl
pop
dec
in
sub
inc
xchg
jle
push
xor
mov
cmc
loop
mov
stos
pop
jae
push
sub
imulb
or
inc
test
flds
ret
xorl
lahf
imul
test
adc
pop
adc
es
adc
scas
pop
ror
hlt
xor
jmp
mov
pop
lods
mov
outsl
popf
mov
add
div
or
imul
adc
insl
fdivrs
sti
add
dec
dec
leave
enter
pop
mov
in
dec
pusha
dec
pop
mov
dec
push
cmp
cs
push
aam
adc
sbb
mov
out
nop
aad
jle,pt
das
cltd
adc
mov
je
or
push
mov
xor
cmp
test
or
jns
mov
data16
loop
sbb
mov
movsl
pop
mov
clc
lds
mov
gs
iret
jns
cwtl
cmp
xchg
cmp
xchg
repnz
xor
int
stos
shlb
mov
adc
inc
int
mov
push
xchg
adc
cmp
jnp
gs
cs
repz
in
xchg
xchg
aaa
mov
or
loop
cwtl
cwtl
in
in
mov
imul
lea
mov
mov
mov
or
or
fistpll
and
dec
aad
and
xchg
and
jge
mov
popa
testl
xchg
lds
stc
adc
sbb
sub
mov
cmp
adc
loopne
je
mov
je
in
sti
sbb
lds
shlb
inc
cs
in
rcrb
lret
jge
xor
or
outsl
inc
shlb
ss
cltd
cmp
aas
mov
stc
shrb
enter
pusha
ret
fldl
dec
push
inc
push
inc
leave
js
outsb
add
pop
js
add
dec
mov
pop
daa
ror
adc
in
int3
jno
and
test
mov
cwtl
mov
cs
jno
sub
std
inc
jecxz
pop
sub
inc
mov
enter
jns
and
js
xlat
into
in
jno
seta
mov
popf
lret
sub
fistpl
lcall
icebp
insb
jo
fiadds
in
int3
or
inc
sub
and
mov
add
iret
jle
pop
push
popa
xchg
push
icebp
iret
mov
push
in
mov
mov
inc
pop
pop
mov
push
inc
test
enter
repz
sahf
lods
scas
fs
jle
negl
scas
out
cmp
fsub
in
addr16
les
dec
into
cmc
popa
dec
mov
pushf
mov
out
mov
sahf
jnp,pn
mov
ljmp
push
shrb
pusha
mov
mov
jg
loopne
mov
jo
mov
out
cmp
leave
call
mov
imul
pusha
push
pushf
fnstenv
and
leave
gs
je
or
shlb
into
dec
jb
pusha
or
rorb
sub
stos
xchg
nop
mov
daa
mov
xchg
js
lods
add
mov
adc
push
ja
sub
lahf
ss
icebp
sbb
sub
add
in
fsubrs
adc
push
lds
inc
mov
out
cmpsl
jmp
lea
and
sbb
test
clc
cs
rclb
xor
mov
jmp
add
mov
or
cwtl
cmp
ror
xchg
xchg
push
add
gs
sub
mov
fimull
inc
pmulhuw
sbb
push
xchg
dec
fisubl
cmp
mov
sbb
jp
fwait
rcll
inc
cmpsb
jle
xor
push
lods
stos
mov
call
mov
scas
andb
add
es
adc
insl
lds
outsl
add
inc
adc
push
mov
mov
mov
cld
movsb
push
mov
loope
push
xor
in
adc
subb
xchg
je
xchg
loope
sub
xlat
mov
int
sarb
xor
sbb
loope
mov
or
sarb
sub
xchg
aam
jmp
sbb
and
cmp
lea
push
mov
popf
aam
mov
fmuls
ror
fucomip
mov
fsubs
push
stos
mov
outsl
dec
into
or
dec
or
mov
movsl
shlb
sub
insb
bound
cwtl
xchg
mov
aas
sbb
sub
lret
push
mov
push
cmpsb
mov
lods
ljmp
add
int3
mov
inc
bound
loop
xchg
jb
adc
xor
push
aam
shl
pop
pop
pop
mov
lcall
mov
xchg
xchg
dec
cmp
out
mov
cmpb
xor
mov
xchg
add
jecxz
push
popa
add
or
pop
jg
out
cmpsl
cwtl
psraw
inc
adc
fcoml
xor
push
inc
xchg
mov
push
sub
pop
add
mov
jmp
push
cmp
pop
and
sub
lea
repz
adc
xor
jb
fucomp
mov
outsb
inc
xchg
push
mov
std
ficoml
mov
push
jge
rcrb
jp
add
push
call
jne
pop
or
dec
adc
imul
cltd
cmpsl
pusha
jmp
adc
inc
icebp
jle
arpl
cmp
add
pop
cwtl
and
lahf
out
scas
stos
mov
test
jg
loop
adc
sub
or
stos
push
cld
movsl
movsb
pop
push
aad
aam
inc
cli
les
inc
divb
xchg
mov
out
jecxz
mov
jbe
stos
jle
in
arpl
jmp
fs
sbb
stos
mov
sbb
cmp
test
cmpsl
outsl
pop
insb
enter
ret
cmc
jnp
inc
test
pushf
xor
sub
adc
inc
mov
lret
sub
fstpl
loope
das
sub
outsb
test
mov
lods
sbb
scas
sbb
xchg
jno
popf
call
pop
js
into
sub
xchg
cmp
add
jmp
hlt
and
jg
enter
dec
push
push
jbe
test
xor
jno
sub
mov
ret
pop
jne
or
mov
hlt
cmpsl
roll
mov
std
add
xchg
enter
addb
dec
negb
jp
imul
daa
lock
cmpsb
ljmp
call
aam
out
push
arpl
lea
mov
in
cmp
insl
mov
xor
cmp
mov
jo
mov
gs
sbb
inc
sub
inc
cld
mov
hlt
out
aas
xlat
scas
pop
stc
fwait
dec
adc
jae
lock
negb
adc
outsb
sub
dec
sarb
pusha
mov
aaa
lret
stc
sub
adc
and
mov
rcrb
loope
or
jg
daa
dec
inc
lret
lret
in
cmp
js
adc
fisubrs
pop
cmp
adc
mulb
pop
xor
sub
push
loopne
jge
sahf
popf
es
and
cmp
lahf
cs
mov
out
mov
js
cmc
xchg
xor
data16
or
ja
xor
fs
ss
daa
pop
sub
aam
cli
xchg
cmp
sbb
mov
movq
mov
adcl
sbb
lock
test
mov
shrb
cmpsb
adc
fs
ss
inc
xchg
call
dec
insl
mov
inc
imul
and
lcall
xor
xchg
mov
mov
daa
xor
in
inc
xchg
repz
faddl
pushw
test
lret
sbb
mov
sbb
jns
and
sub
sub
sub
cltd
in
jecxz
aaa
cmpl
sahf
cmp
pop
cmc
cmp
bound
sub
pop
pop
jg
rorl
adc
adc
xchg
lea
leave
daa
push
xor
mov
stos
dec
iret
xor
lcall
pop
stos
repz
int
mov
or
mov
addb
addl
enter
outsb
popf
int3
out
in
ftst
into
or
enter
shlb
pop
sbb
shrb
inc
push
aaa
loop
jmp
cli
cmp
push
out
cmp
vandps
xchg
push
and
fldenv
scas
and
mov
fstpt
mov
out
out
push
arpl
add
lahf
push
out
pop
addl
mov
sbb
or
arpl
insb
and
push
push
and
cmpb
and
leave
loopne
fldl
inc
inc
or
call
cmp
sbb
jge
pop
ss
in
xor
jne
cs
in
arpl
popa
movsb
push
jl
idivb
dec
mov
sbb
lock
lahf
sbb
lea
lret
enter
jns
inc
outsb
outsl
mov
add
push
mov
push
mov
insl
je
movsb
imul
in
mov
and
jne
ror
mov
imul
mov
dec
adc
pushf
push
or
add
dec
mov
aas
lret
xchg
xlat
pop
sbb
in
inc
aas
fs
xchg
inc
cltd
xchg
addr16
jmp
jno
or
dec
call
ljmp
cmp
imul
xchg
jecxz
lds
decl
imul
je
mov
push
fs
dec
mov
mov
pop
mov
sarb
lods
cmpsb
cld
mov
push
imul
loopne
dec
cmpsb
cmp
in
or
pop
pop
cld
hlt
sbb
lods
cmpsl
xor
sbbl
push
orb
js
mov
adc
xchg
xor
add
fldt
icebp
xchg
out
scas
mov
shlb
jp
jae
ret
xchg
xor
fimull
push
fdivrs
aas
and
sub
fwait
adc
and
lods
pop
shl
sbb
xchg
into
mov
icebp
sub
adc
cli
mov
hlt
imul
jae
push
shlb
outsb
or
jmp
sahf
sub
int
test
jp
mov
push
addl
jns
ja
push
call
push
lea
sub
test
adc
mov
fisttps
into
lcall
movsb
shrl
imul
jo
mov
jmp
aad
pop
popa
adc
sbb
movsb
inc
add
aaa
aad
outsl
xchg
jg
imul
dec
rolb
sahf
or
orl
mov
out
cmp
inc
jmp
lds
push
and
lods
mov
mov
mov
sbb
dec
shlb
rol
jno
int3
pop
push
pop
jmp
in
mov
clc
add
dec
or
into
in
ljmp
scas
sbb
push
or
dec
pop
push
lea
aas
inc
mov
je
mov
dec
lods
or
lods
sbb
jmp
and
inc
or
divl
insl
inc
mov
sub
push
fidivs
out
mov
loope
adc
cmp
repz
icebp
das
fisttpll
jmp
es
loopne
mov
fldt
cmovo
sarl
inc
cld
aad
stos
hlt
sub
std
pop
std
mov
pop
outsl
repnz
and
ja
cwtl
push
imul
movsb
sbb
xor
out
out
jmp
in
ret
cwtl
shl
jmp
jns
lock
rcr
jae
jp
cmp
add
stos
jmp
or
dec
in
and
imul
jb
stc
outsl
pop
mov
dec
aaa
pop
in
sub
lret
jge
jns
cli
push
adc
movsb
dec
out
mov
fmuls
loopne
test
or
xor
mov
mov
dec
insb
xchg
add
jo
jecxz
xor
jle
xlat
in
pop
in
mov
add
idivb
inc
push
loope
enter
xchg
xor
or
add
imul
mov
xchg
sub
pop
pop
imul
cmp
push
lds
mov
imul
subb
movsb
xor
inc
sbb
push
xchg
testl
xlat
sub
insb
inc
lret
adc
ficoml
ljmp
scas
fidivrl
arpl
sub
sub
jmp
dec
shll
add
xlat
out
xchg
pop
pop
loopne
fisubl
mov
push
xchg
je
xor
fisubrs
aad
out
pop
mov
sub
inc
movsb
push
dec
leave
inc
jmp
pop
ljmp
and
mov
xor
fwait
orb
shrb
rcl
test
pop
xor
xor
stc
xchg
xor
or
jb
int3
lods
iret
sub
lcall
popf
push
push
dec
das
fstps
aas
sub
xor
jbe
adc
pusha
jne
or
jecxz
and
push
pushl
lret
pop
xchg
aad
and
jmp
daa
mov
popf
or
jge
hlt
shlb
xchg
or
stos
dec
inc
and
in
rcr
jns
in
fwait
mov
push
ficompl
cmp
scas
or
xchg
cmpb
dec
js
fwait
push
jmp
in
std
ds
push
cmp
lea
push
clc
pop
and
jmp
pop
repz
xchg
push
imul
add
pop
loopne
movsl
and
ds
push
dec
mov
lret
sti
cld
jo
outsb
push
shl
cli
inc
and
das
pop
aad
dec
push
test
cmp
pop
fucom
lds
jns
into
call
xor
dec
xor
gs
xor
xor
and
shlb
inc
std
push
movsb
into
jp
xchg
bound
mov
push
mov
je
in
int3
je
push
fisttpl
pushf
sub
cwtl
sub
test
in
in
rcrb
das
jns
xchg
jge
pop
test
fmull
aam
pop
push
sahf
test
aas
mov
adc
xor
mov
add
and
xchg
aam
adc
scas
mov
and
ja
mov
mov
add
filds
xchg
sbb
inc
cmp
mov
push
hlt
xor
aaa
and
push
mov
jp
lret
repnz
jg
lock
scas
lods
inc
xchg
pop
inc
sub
popf
mov
push
data16
jno
fisttpll
inc
mov
rolb
push
push
dec
les
inc
push
or
pop
nop
xchg
dec
inc
sbb
movsl
add
insb
pop
lods
out
jg
std
jo
push
mov
ljmp
xorl
or
fnstsw
rol
xor
push
inc
ss
push
pop
enter
lock
mov
xchg
mov
repnz
dec
out
add
xor
sub
sub
xchg
or
shlb
mov
inc
push
push
add
sub
mov
mov
push
into
cwtl
cmc
dec
or
mov
adc
mov
sbb
aam
and
jne
lods
sbb
ret
stos
push
jnp
add
sub
fwait
jg
add
cmp
scas
xorl
dec
out
clc
and
cmpsb
and
mov
fsubrl
pop
mov
xor
lock
pop
stos
mov
adc
add
inc
xor
mov
xlat
or
aam
testl
fs
xchg
push
adc
repnz
sub
inc
imul
xor
sbb
mov
into
or
in
aam
loop,pt
mov
in
fdiv
xchg
add
int3
jecxz
shl
push
in
aam
insb
jl
push
and
cmp
jo
in
fistl
xor
add
outsb
loopne
push
cwtl
das
jmp
jp
jbe
jp
ds
lcall
cmp
int3
mov
push
pop
lea
imul
jg
testl
jge
jge
inc
pop
and
and
addr16
lods
mov
popa
and
cmpsb
ror
out
shlb
push
and
sub
leave
jno
scas
movsb
jae
sub
fimuls
or
and
mov
push
xlat
or
mov
mov
dec
sti
mov
adc
cld
push
lock
pop
inc
daa
or
sbb
mov
adc
mov
mov
pop
cwtl
ret
les
xor
scas
cmc
inc
mov
nop
dec
addb
sbb
mov
lods
pop
pusha
adc
lock
mov
cmpsb
dec
repnz
mov
test
mov
jo
mov
jle
inc
rorl
scas
push
mull
mov
ds
lret
and
cmp
push
push
aaa
mov
jecxz
stc
pop
mov
filds
das
cwtl
loop
lock
out
fcompl
rcrl
mov
push
mov
dec
adc
rcll
cld
mov
out
test
stc
addb
fs
lretw
cmpsl
cmp
push
mov
jge
hlt
pusha
cmp
xor
xor
sub
aam
in
xor
or
std
push
xchg
test
xchg
dec
jmp
sti
pushf
test
push
and
mov
stos
jle
jbe
shlb
imul
cmp
enter
nop
roll
inc
sbb
rolb
test
jmp
push
mov
inc
sub
push
dec
movsl
and
cmp
mov
imul
lods
xchg
jmp
lret
add
and
in
repz
add
mov
xor
inc
cmp
call
and
xor
add
adc
in
hlt
push
movsb
cmp
fs
je
inc
fcoms
mov
adc
in
hlt
push
movsb
cmp
fs
je
inc
fcoms
mov
adc
in
hlt
push
movsb
cmp
or
inc
call
and
xor
test
or
outsb
pop
aam
shll
imul
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
hlt
add
mov
add
mov
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
das
cmc
add
sbb
add
adc
add
or
add
add
add
cld
hlt
add
hlt
hlt
add
in
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
cmc
add
push
cmc
add
pop
cmc
add
jo
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
call
testb
xor
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
test
add
mov
add
xchg
testb
pushf
testb
movsb
testb
lods
testb
mov
add
testb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
loopne
add
call
testb
or
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
shl
add
testl
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
clc
add
jl
add
je
add
insb
clc
add
fs
add
pop
clc
add
push
clc
add
dec
clc
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
test
add
mov
add
mov
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
dec
stc
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
in
add
in
stc
add
hlt
stc
add
cld
stc
add
add
add
or
add
adc
add
daa
cli
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
inc
cli
add
dec
cli
add
pop
cli
add
insb
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
