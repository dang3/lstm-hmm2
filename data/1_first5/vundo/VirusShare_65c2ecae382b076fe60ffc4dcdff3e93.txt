sarb
call
add
add
bound
mov
pushl
sub
pushl
dec
jmp
dec
add
jmp
push
and
ljmp
inc
sub
add
jmp
incl
bound
je
iret
jmp
mov
jmp
ljmp
call
leave
add
jmp
out
aas
inc
mov
mov
jmp
sub
dec
insb
add
inc
mov
incl
sub
jmp
push
push
or
add
call
add
inc
jmp
mov
leave
inc
mov
jmp
ret
xor
sub
dec
dec
add
push
decl
movl
push
ss
mov
push
add
int
outsb
xchg
rorb
add
cmp
repz
cmp
jmp
dec
mov
push
sti
jmp
mov
push
insb
inc
inc
mov
inc
pop
mov
clc
pop
mov
or
sbb
mov
fwait
or
insb
stos
or
push
repnz
push
add
add
cld
call
jmp
insb
outsb
ds
add
shl
negb
fs
outsb
mov
mov
imul
push
add
lcall
inc
push
dec
mov
inc
mov
mov
mov
outsb
mov
xor
icebp
lcall
dec
push
insl
and
addr16
outsl
dec
push
dec
dec
add
mov
lcall
je
outsb
outsl
lock
push
mov
decb
and
inc
push
dec
jmp
dec
inc
pop
push
pop
jo
fistpll
mov
dec
out
gs
call
mov
outsb
in
roll
pop
dec
ja
jmp
in
ss
dec
push
xor
xor
mov
mov
xor
xlat
xor
cld
sub
rcr
add
loop
jmp
jne
outsl
fcomi
sub
inc
xor
js
cmp
mov
pushl
add
sub
inc
pop
push
adc
inc
dec
push
mov
inc
clc
loope
pushf
jno
aaa
cmp
jmp
jbe
mov
leave
outsb
gs
clc
jae
pop
sub
repz
inc
add
mov
mov
gs
cmp
je
inc
sti
loope
mov
sti
scas
jmp
dec
xchg
push
inc
arpl
je
add
dec
mov
pop
mov
dec
outsl
add
aaa
mov
clc
fdivr
gs
dec
jo
jmp
mov
or
ljmp
std
insb
jo
data16
inc
mov
xor
popa
mov
outsb
add
push
imul
dec
xchg
mov
push
fabs
mov
xor
mov
dec
push
mov
mov
sub
sub
arpl
repz
sbb
lds
push
push
ja
mov
push
and
mov
inc
adc
xchg
push
es
xor
add
dec
dec
sbb
push
cmp
mov
mov
aam
or
xor
mov
cli
ja
repnz
push
push
jmp
jnp
adc
jno
xor
and
ror
aaa
add
mov
xchg
dec
lcall
fstpt
inc
imul
mov
ret
bound
dec
push
jbe
roll
icebp
inc
cli
dec
insl
outsl
cmp
inc
hlt
mov
pop
sub
pop
dec
xor
aas
and
repz
js
call
ret
dec
daa
insl
outsb
js
push
dec
aaa
outsl
mov
add
lahf
push
sub
dec
cmp
add
inc
shrl
inc
dec
xor
loop
jo
dec
ret
daa
ret
push
dec
popa
clc
orb
push
push
dec
pop
add
ds
out
in
jmp
imul
fists
enter
or
cmp
mov
lret
adc
ss
aas
incb
out
je
xor
add
or
mov
inc
sub
push
push
jl
std
add
add
ss
std
test
push
push
cltd
mov
push
mov
jnp
lret
mov
mov
add
ljmp
mov
dec
sbbb
sarb
aaa
xor
adc
adc
xchg
inc
mov
add
add
push
adc
inc
jmp
jle
mov
inc
mov
movl
add
inc
jmp
flds
push
fimuls
jmp
mov
and
clc
pop
xor
jnp
sahf
and
icebp
test
push
sub
pushf
ss
aaa
loopne
lea
dec
add
inc
mov
jmp
adc
fs
dec
mov
inc
push
dec
mov
ret
scas
scas
push
cwtl
inc
clc
xor
clc
jge
ret
xor
push
jns
aaa
mov
inc
pop
mov
out
ja
out
rol
push
lret
jmp
jl
push
dec
sbb
js
ljmp
push
stc
mov
xor
dec
push
cmp
pop
jo
jne
cmp
sti
pop
iret
mov
dec
inc
sti
pop
and
pop
jbe
push
inc
insl
dec
jmp
mov
imul
insl
inc
mov
jmp
arpl
shr
cmp
jno
cli
mov
push
mov
xor
outsb
mov
pop
test
nop
mov
jl
hlt
push
jo
lds
sbb
repnz
fs
mov
outsb
stos
sbb
es
mov
mov
shrl
data16
mov
les
out
ret
sub
ds
lfs
sahf
stos
lods
mov
jb
push
decb
dec
mov
cs
es
cld
testb
subl
mov
scas
gs
je
jmp
dec
lret
adc
inc
sbb
pop
jae
in
divl
inc
mov
inc
mov
jmp
andl
dec
add
inc
pop
mov
dec
mov
sbb
inc
mov
sbb
dec
sbb
sub
stc
add
pop
mov
ss
mov
xor
and
push
push
and
insl
in
mov
movsl
pop
and
dec
gs
pop
and
dec
sub
xor
in
mov
pop
popa
fnstenv
and
sub
add
idivb
sub
repnz
xor
stos
lods
loope
push
pop
mov
mov
movsb
jnp
add
lcall
fmuls
arpl
in
lret
mov
and
xchg
mov
call
or
mov
push
mov
pop
ror
dec
shr
mov
enter
mov
shlb
loope
mov
jnp
and
lret
jnp
enter
mov
mov
adc
hlt
loope
fadds
mov
add
push
jo
mov
lds
in
sub
xor
jge
jbe
cs
and
leave
add
insb
leave
mov
fcom
bound
mov
insl
dec
enter
jl
dec
aaa
cmp
adc
out
mov
shll
scas
xchg
movhps
add
sub
aad
xlat
sub
bound
push
sahf
inc
mov
in
bound
fiadds
mov
inc
and
mov
sub
mov
test
jbe
sidtl
cmpsl
out
cmp
add
jnp
xchg
adc
push
sub
mov
pop
mov
orb
inc
dec
pop
mov
repnz
cmp
xchg
sbb
mov
dec
or
xchg
nop
out
cmp
mov
xchg
cmpsl
aaa
les
or
lds
mov
sbb
and
ret
jne
fcoms
push
call
lock
mov
adc
imul
sub
cmpl
sub
mov
scas
inc
add
mov
andl
jno
mov
movsb
cmpsl
pop
cmpl
mov
mov
aad
xchg
inc
jg
cwtl
mov
cltd
xor
sbb
ret
inc
pop
and
repnz
cmp
bswap
rcrl
jmp
loopne
or
outsl
xor
xchg
and
insl
mov
and
and
push
push
or
dec
sbb
inc
mov
push
sbb
ret
add
pusha
jge
sub
jb
stos
in
adc
sbb
pop
imul
adcl
std
jnp
call
in
scas
mov
lcall
sub
add
es
sbb
subl
dec
adc
xchg
add
imull
arpl
shr
movsb
test
das
je
roll
push
pop
imul
add
insb
addb
sbb
pop
in
adc
pop
call
push
daa
xchg
loop
outsb
scas
cs
cmp
mov
cltd
nop
or
mov
stos
xchg
fiaddl
mov
pop
gs
xchg
inc
adc
roll
fwait
or
adc
xor
and
fcoms
shrl
rcl
push
adc
popa
sub
dec
and
or
or
jnp
lahf
inc
xor
sahf
rcrl
imul
push
bound
push
imul
sbb
filds
mov
icebp
nop
imul
and
pop
jecxz
cmp
cwtl
and
mov
mov
and
nop
sbb
mov
or
xor
das
mov
xorl
sbb
push
mov
cltd
pop
mov
hlt
js
xchg
pushf
dec
adc
or
push
sbb
lods
repz
int
cmp
cmpsb
cmp
mov
cmp
inc
das
stc
sbb
push
xor
call
leave
jb
lock
loope
das
ja
add
add
push
pop
jge
adc
adc
int
cwtl
xor
rcr
pop
inc
outsb
inc
insb
sub
add
or
adc
jno
sbb
rcrb
pop
sahf
add
inc
jmp
xchg
add
and
cmp
xor
rolb
mov
mov
dec
jmp
ss
adcl
jge
outsl
or
jno
addr16
push
cmpl
xchg
lods
sub
xor
pop
enter
dec
mov
es
inc
enter
in
int
push
mov
mov
cmpl
add
pop
xchg
fmull
sbb
xchg
inc
cwtl
cmovnp
insl
movsb
adcb
add
imul
rcll
sbb
sbb
sub
cmp
test
mov
scas
or
mov
ret
add
bnd
fadds
iret
inc
inc
ja
aam
dec
xchg
push
int3
xchg
stos
add
xor
in
dec
rorb
jne
dec
jp
icebp
adc
in
ljmp
sub
ret
push
imul
in
push
inc
xor
add
and
inc
add
cmp
xchg
mov
jne
mov
xchg
aaa
xchg
and
push
clc
iret
jnp
dec
push
sbb
pop
pop
mov
fisubl
add
or
insl
cli
jge
mov
sbb
stos
pop
es
and
pshufw
stos
jmp
icebp
mov
mov
les
jo
add
push
adc
add
push
lea
jns
or
les
test
fadd
add
xchg
cmp
pop
and
inc
sbb
inc
cmp
imul
fs
fstps
mov
xchg
fbstp
lods
push
lods
inc
test
sub
add
adc
jns
pop
push
mov
in
jp
push
nop
fisttpl
push
jne
jb
lds
inc
rcll
lds
mov
xor
jmp
add
dec
add
xchg
sub
push
adc
add
sbb
cmpsl
lods
cs
xor
neg
pop
popf
mov
dec
cmp
dec
sbb
push
jnp
inc
test
aas
call
movsl
mov
add
sbb
jle
clc
adc
add
sub
add
sbb
filds
aam
inc
pop
or
jge
inc
fdivs
in
sub
mov
andb
cmp
inc
mov
mov
lods
frstor
lea
xor
imul
push
dec
cmp
sbb
push
rcl
cmp
xchg
inc
popf
xor
and
push
lds
push
ja
add
lea
xchg
xor
ret
jp
mov
push
dec
scas
test
push
mov
push
out
roll
add
paddsw
push
pop
xor
pop
add
push
insl
mov
pop
in
loope
fstpl
outsl
pop
adc
loopne
cmp
cmp
push
jle
out
and
cmp
ret
or
arpl
outsb
pop
andb
xchg
in
lcall
fcoms
jmp
mov
xor
scas
push
lea
sti
push
sub
push
addb
inc
lods
and
inc
or
mov
and
sti
inc
adc
push
push
test
dec
sarl
xchg
or
mov
adcb
jno
push
and
xor
xchg
ds
jle
cli
inc
shrb
ljmp
mov
add
sti
inc
jmp
add
shll
xchg
mov
push
jno
dec
or
lods
cwtl
inc
mov
test
inc
mov
mov
les
add
mov
inc
insl
and
stos
sbb
ja
loope
test
lds
loope
pusha
adcb
xor
rclb
cmp
andb
and
or
sahf
cmpl
sub
mov
sbb
sahf
addl
repnz
rcrl
pushf
push
daa
dec
adc
sub
dec
mov
push
cmp
dec
and
mov
arpl
repnz
or
xchg
sbb
mov
pop
add
bound
and
sbb
jmp
cmp
push
inc
cmpsb
jmp
mov
add
sbb
aad
lret
cli
push
test
icebp
jno
or
or
or
or
imul
inc
setge
mov
cmp
push
shl
push
push
sbbl
inc
stc
outsl
xchg
jb
push
and
and
push
sarb
sbb
mov
enter
and
jbe
mov
rol
addr16
jae
mov
lea
sbb
dec
push
xlat
jne
inc
jecxz
push
push
popa
inc
push
jmp
add
divb
fcmovnu
inc
cmp
add
pop
loope
or
iret
bound
xor
sub
xor
add
push
loopne
dec
xor
sub
mov
pop
pop
fbstp
cmp
pop
jg
rclb
add
mov
inc
mov
fsubrl
sbb
inc
jge
adc
add
adc
inc
or
sbb
adc
or
jae
popa
add
pop
push
pop
lcall
adc
rcll
pop
xor
mov
adc
test
xorb
and
sahf
adc
jo
hlt
pushf
mov
dec
mov
sub
pop
mov
lds
push
out
push
or
mov
sub
scas
faddl
or
mov
sub
xor
lock
fnstcw
in
push
mov
imul
push
lods
stos
loope
xchg
loop
fwait
bsf
nop
dec
lcall
sbb
pop
mov
adc
xchg
leave
adc
push
and
inc
pop
in
or
lcall
dec
mov
pop
add
xor
adc
jne
mov
xchg
gs
adc
jo
pop
add
xchg
xor
add
inc
ret
rolb
xchg
xchg
addl
push
adc
inc
adc
pop
ret
pop
xchg
add
arpl
mov
add
and
pushf
cmp
dec
sarb
sbb
out
pop
lcall
call
add
dec
dec
test
js
ss
adc
int
jmp
dec
lcall
or
stc
add
insl
mov
or
insl
cwtl
push
je
xchg
pop
jge
lcall
or
mov
test
rcrb
or
mov
dec
mov
leave
pop
dec
pop
mov
iret
xchg
pusha
push
imul
inc
mov
mov
inc
sub
add
xchg
inc
stos
mov
adc
pop
jle
add
test
cwtl
jno
sub
mov
adc
xchg
or
bound
pop
cmp
sub
inc
pop
out
outsl
je
mov
and
jno
push
mov
movsl
mov
add
pop
or
add
les
add
test
out
jns
outsl
ljmp
mov
push
pop
das
mov
push
out
lcall
loopne
sbb
pop
mov
dec
ljmp
imul
jg
pop
xor
xchg
imul
mov
xchg
mov
arpl
inc
push
inc
stc
xchg
pop
add
or
adc
shrb
xor
mov
mov
lahf
cmpsb
add
sub
add
pusha
cs
inc
cld
aaa
adc
gs
outsl
arpl
mov
cmpsb
mov
rorb
repnz
icebp
push
mov
sbb
or
add
mov
cli
adc
and
inc
fwait
mov
adc
adc
cmp
push
dec
es
adc
jo
and
dec
and
ret
enter
outsb
and
xchg
in
mov
call
fmul
jns
mov
iret
adc
mov
and
pop
jno
ret
dec
flds
sbb
cmc
inc
pop
icebp
push
call
shll
imul
stc
and
loopne
push
mov
adc
jne
sbb
shr
aad
push
mov
mov
push
sub
jg
mov
lods
cmp
fnsave
or
dec
orb
mov
shll
xor
arpl
xchg
jbe
insb
adc
decb
jae
mov
xor
es
add
insb
loopne
sub
jl
jecxz
bound
cli
pop
push
inc
cmpsl
dec
and
add
jno
dec
ja
popa
pushl
repz
and
ja
or
xor
add
dec
hlt
imul
jmp
dec
xor
insl
lret
push
mov
sar
adc
lods
repz
mov
xchg
shrl
lahf
movsb
scas
adc
fcomp
xchg
push
lret
dec
and
das
mov
pushf
jo
mov
ss
in
jns
mov
push
and
es
sbb
xchg
mov
in
popa
adc
dec
stos
ss
cmp
xchg
dec
pop
leave
jmp
aam
push
xor
xchg
pop
test
push
lock
jno
push
repnz
adc
je
adc
cld
inc
cmc
push
xchg
mov
push
add
pop
xchg
lcall
je
fstps
mov
push
cmp
and
add
lock
adc
push
repnz
lods
leave
cs
dec
addr16
xor
inc
cltd
push
add
jo
push
pop
mov
lods
mov
mov
mov
insl
cltd
lret
aam
and
cmpsb
dec
cmp
test
out
cld
dec
dec
sbb
cld
jb
inc
xchg
add
pop
and
stc
cmpsl
cmp
je
outsb
adc
jl
inc
imul
push
aaa
neg
or
mov
and
push
les
push
test
add
dec
sub
fst
mov
mov
les
push
pop
add
sbb
inc
cmp
xchg
roll
mov
jns
incl
out
call
push
xor
xor
dec
enter
fidivrl
inc
or
cmpsb
sbb
pop
nop
popa
dec
mov
stos
fadds
prefetch
or
jae
cmp
and
xor
adc
cmp
leave
add
data16
lds
repnz
in
fdivrs
inc
es
lds
into
sub
arpl
pop
andb
jg
aas
pop
sub
mov
es
mov
imul
mov
cmp
ljmp
hlt
fs
mov
jbe
fwait
jae
adc
pop
jno
xchg
mov
pop
icebp
std
mov
jne
in
or
mov
xor
incl
repz
fimuls
imul
adc
fistps
out
push
jo
jb,pn
cmc
incl
pop
cmp
push
adc
daa
jbe
aam
lds
arpl
jb
push
gs
sbb
lahf
in
movsl
add
add
sub
push
jecxz
call
jp
mov
adc
pop
xor
xor
dec
loopne
mov
inc
push
repnz
in
orb
dec
push
dec
sub
jmp
popf
sub
rcrb
aas
aad
leave
push
xchg
xchg
fisttps
mov
mov
push
xchg
es
xor
jg
sub
cmc
mov
add
or
and
cmp
push
mov
add
movb
adc
push
and
cmp
pmaddwd
jmp
test
je
out
sahf
cmp
incl
mov
adc
andl
pop
mov
cmp
pop
decl
test
mov
clc
lcall
ljmp
add
gs
cmc
orb
cmp
je
data16
jecxz
shl
pop
or
mov
call
aas
pop
inc
and
add
cmp
bound
incl
xlat
inc
push
adc
aas
push
leave
bound
or
or
jg
lds
dec
dec
inc
in
pop
lock
xchg
jl
inc
pop
pop
pop
xor
cmp
jecxz
jne
jo
sarl
jne
mov
adc
fsubl
loopne
das
es
or
mov
imul
fstl
sti
cmp
adc
pop
call
xchg
and
ret
jge
pop
sbb
in
pop
dec
cld
call
out
orl
pop
ljmp
lea
add
mov
outsl
inc
inc
out
add
call
pop
pusha
dec
leave
sbb
push
xor
call
imul
sbb
and
mov
push
inc
sahf
and
aam
les
push
add
testl
mov
add
jge
and
ljmp
je
iret
sub
mov
adc
sbb
lods
dec
jmp
stc
pop
dec
adc
pop
sar
lock
shrl
fldenv
pop
fimuls
scas
andl
leave
and
faddp
mov
lods
adc
and
mov
arpl
adcb
mov
inc
jae
pusha
or
inc
cmpsl
pop
movsb
xchg
dec
mov
pop
js
mov
je
and
pop
fadd
incl
ret
call
inc
and
dec
mov
inc
push
and
sarl
out
add
sbb
push
and
fstps
cmpsb
jecxz
shrl
clc
in
pushf
mov
test
pop
les
sti
js
push
loop
and
int3
lcall
insl
rolb
aas
inc
add
and
repnz
inc
dec
push
call
jo
pop
and
leave
inc
add
sysenter
add
aas
push
xchg
cmc
cwtl
push
je
popf
sub
dec
xchg
mov
or
call
jno
lea
inc
je
jle
inc
leave
or
mov
push
ljmp
inc
clc
ja
add
or
adc
and
incl
je
mov
dec
push
in
adc
loope
or
incl
pop
cmc
xchg
mov
test
push
int
add
xor
cmpsb
test
push
fwait
adc
adc
das
nop
stos
aas
mov
mov
jl
addb
xchg
adc
mov
inc
jmp
mov
push
jmp
push
push
aam
inc
mov
clc
lahf
mov
push
das
add
std
rcrl
sbb
jns
jne
pop
mov
fs
inc
xchg
pusha
testl
push
push
ss
mov
push
mov
inc
xor
or
jne
cltd
adc
test
shll
das
test
mov
and
icebp
pushl
pop
xchg
push
inc
push
xchg
add
incl
push
jmp
pop
mov
or
repz
and
cld
stos
or
cs
fcom
fildll
and
pushf
sbb
aas
jns
dec
incb
and
adc
inc
dec
sbb
adc
mov
jne
addr16
push
jecxz
pop
mov
test
mov
cmp
jl
inc
repnz
fldl
sbb
mov
dec
loopne
lcall
jo
ret
sub
cmpsb
push
cmc
ret
aas
pop
imul
cmp
adc
pop
mov
mov
jmp
xchg
ljmp
clc
xor
or
and
xchg
arpl
sbb
pushf
mulb
jecxz
pop
xor
fstpt
ret
clc
aas
push
inc
call
sub
stc
out
loop
sbb
ret
pop
dec
int
in
repnz
je
adc
cmp
xchg
xchg
pop
adc
jp
and
in
inc
cld
mov
jae
jmp
sub
ret
mov
mov
cld
jmp
out
cmp
xor
or
xor
inc
adc
cs
decl
dec
adc
dec
jne
jo
scas
out
loop
lahf
sbb
jmp
mov
mov
jne
inc
pop
or
bnd
stos
pop
adc
pop
fs
and
xor
jne
add
xchg
jmp
rcrb
stc
incl
adc
cmp
push
pop
dec
rep
lahf
add
call
xorl
add
mov
imul
aad
sahf
dec
or
ja
stos
add
insb
or
inc
les
lahf
shl
add
jle
sub
mov
xchg
fildl
cmpl
std
lahf
xchg
pop
gs
mov
xchg
and
jmp
scas
sbb
es
xchg
lcall
sti
mov
mov
cwtl
xor
out
and
cwtl
lea
insl
sbb
sub
or
call
std
push
inc
push
jl
jbe
adc
adcb
add
jp
inc
pop
or
inc
or
call
insb
and
fs
pop
call
jmp
inc
stc
call
pop
out
imul
test
pop
in
sub
mov
dec
and
setno
popf
mov
call
ret
xor
adc
adc
cld
sub
xchg
int3
push
movl
xor
and
andb
aas
sub
and
aas
inc
add
call
movsb
lret
mov
icebp
mov
inc
or
and
call
push
inc
std
or
jl
push
pusha
jp
dec
dec
shr
add
std
push
xchg
and
insb
das
insb
xlat
add
cvtps2pd
imul
outsl
inc
stos
loopne
icebp
dec
and
pushl
lock
adc
js
ss
push
inc
aaa
cmc
ljmp
dec
lea
mov
adc
add
push
adc
ret
lock
adc
and
pop
adc
rolb
gs
test
fstps
cld
ret
push
add
push
clc
inc
adc
sub
inc
jecxz
pushf
test
and
cmova
mov
and
or
push
mov
mov
in
incb
push
push
loope
mov
sarl
lahf
pop
fs
mov
sahf
pop
scas
cmpsb
push
add
lea
lock
outsb
je
jbe
incl
adc
inc
xchg
mov
add
ljmp
or
push
cmpsl
push
adc
or
and
inc
or
mov
ljmp
mov
push
pop
jmp
testl
insb
and
pop
xor
pop
cmpsb
call
mov
and
dec
or
dec
jle
dec
and
fwait
and
and
sbb
dec
dec
fwait
xlat
or
rcll
sbb
push
xor
xor
in
dec
aas
shr
xchg
mull
test
aam
aas
sub
dec
mov
mov
jns
add
or
mov
nop
mov
inc
arpl
mov
push
push
daa
adc
adc
mov
or
dec
stos
ja
stc
inc
dec
cmp
and
add
mov
push
jmp
xor
add
mov
add
sub
xchg
jne
dec
adc
and
xchg
shlb
inc
fcmovu
aas
mov
or
lahf
inc
add
push
xor
repnz
cmp
das
int
daa
insl
aas
sub
jmp
push
cmpsl
push
fs
push
decl
into
or
std
loop
fdivr
scas
sub
rorl
adc
sbb
xchg
incl
dec
loop
adc
mov
or
and
sub
jmp
pop
sub
cwtl
mov
add
mov
xchg
jl
mov
iret
mov
push
ja
mov
das
inc
add
lret
iret
add
cmovns
incl
mov
aam
inc
inc
in
das
jbe
jge
xchg
clc
cmp
movsb
xchg
cmp
sbb
xchg
xor
and
mov
sbbb
xor
jl
lock
dec
stos
sbb
xlat
clc
call
xor
push
sub
inc
mov
or
adc
test
aaa
loope
add
test
sbb
and
xchg
dec
jae
sub
mov
std
pop
bnd
shlb
push
add
cmp
inc
arpl
sahf
add
sbb
or
std
adc
sbb
mov
movsl
or
test
outsl
inc
cmpsb
fiaddl
je
xchg
ret
dec
pop
dec
decb
inc
cmp
ljmp
enter
jg
cmp
mov
pop
div
push
jb
hlt
daa
adc
arpl
xor
or
mov
xchg
mov
inc
push
rorb
das
push
add
outsb
es
inc
lcall
popl
pop
or
inc
xor
mov
push
add
sbb
je
pop
call
repz
js
xchg
pop
xchg
sbb
add
pop
or
or
cmp
mov
aam
sub
decl
call
pop
rorb
xchg
call
xchg
enter
adc
and
adc
lcall
testb
adc
clc
mov
mov
and
push
cld
jg
and
mov
movl
inc
add
jmp
and
adc
inc
mov
int
sbb
dec
sub
push
cmpl
mov
pop
sub
sbb
pusha
test
cs
add
and
std
incl
decb
nopl
in
fstl
bound
mov
xchg
jle
cmp
mov
add
call
lea
test
push
lea
adc
fiadds
jle
fistpll
cs
mov
testb
add
mov
inc
jecxz
push
or
cmp
scas
mov
popf
lcall
adcl
enter
mov
int3
sarb
and
add
sbb
and
popf
push
pslld
mov
add
mov
jne
std
mov
inc
imul
pop
adc
push
push
push
dec
cld
das
xor
xor
xor
push
pop
out
xor
bound
pop
pop
add
inc
cmp
mov
aad
test
sbb
push
nop
lahf
loop
adc
incb
inc
jae
clc
push
pop
dec
xchg
decl
test
xchg
daa
popf
stos
dec
cmc
call
inc
lock
les
adc
inc
mov
out
lret
in
idiv
inc
incl
cmc
dec
movsl
cmp
arpl
cmp
mov
push
jb
rolb
dec
call
xchg
inc
mov
sub
ret
fwait
adc
hlt
inc
mov
decl
hlt
movsl
xchg
and
rcrl
jle
nop
push
rclb
sub
and
sub
mov
inc
adc
insb
dec
leave
stos
mov
divb
std
xchg
cld
mov
lods
ficompl
insl
sub
loope
orl
mov
stc
mov
je
push
lahf
cs
mov
outsl
xchg
push
loop
int3
mov
add
call
jecxz
mov
jb
insl
negl
xchg
call
adc
dec
or
enter
bound
movsl
jne
push
aaa
hlt
pop
incl
dec
loope
push
repnz
rclb
testl
outsl
scas
dec
rorl
dec
in
or
repz
xchg
dec
call
pop
mov
jo
loope
ds
inc
sub
jge
sahf
xchg
psraw
sub
add
call
push
or
test
inc
arpl
or
hlt
fwait
push
test
and
call
mov
test
lock
inc
pop
mov
cld
cmp
mov
outsb
nop
inc
ljmp
jmp
sahf
hlt
mov
in
ljmp
jns
nop
xlat
cmpl
loope
cmp
inc
adc
pop
movb
pusha
mov
pop
movsb
stc
jg
push
add
outsb
cmc
inc
adc
mov
mov
jnp
adc
add
inc
xchg
cld
inc
or
sbb
cmp
jg
ret
push
or
mov
inc
add
lock
jg
in
jns
orb
inc
adc
push
or
sub
jne
sub
popa
movsb
mov
in
int3
mov
dec
or
rorb
sar
dec
sbb
mov
lock
pushf
clc
push
nop
dec
xchg
push
add
add
cmp
pop
or
pop
cmpsl
jmp
in
or
dec
clc
out
out
hlt
fildl
lahf
repz
add
std
aas
je
cmp
or
pop
mov
insb
cld
lret
lock
pop
xor
cmp
lods
mov
cmp
pusha
cld
dec
push
xchg
movsl
mov
push
or
cmpb
iret
jmp
decl
adc
mov
push
push
into
adc
decb
shrb
scas
jmp
xorb
dec
push
adc
imul
call
call
cmp
call
das
push
add
call
outsl
jmp
and
dec
pop
mov
sbb
push
pop
cmpsl
mov
imulb
nop
fcoml
stc
in
xchg
pop
xor
arpl
shll
jnp
push
or
fldcw
inc
mov
idivl
lahf
sbb
or
ljmp
sub
mov
add
enter
cltd
mov
inc
sbb
adc
test
push
xchg
mov
cmp
dec
lea
mov
nop
mov
xor
pop
mov
add
bound
xchg
cld
dec
in
call
dec
cmpsl
popf
ljmp
pop
xor
rorb
jp
call
xorl
out
lret
push
mov
repz
sbb
fs
movsb
cmp
call
adc
repz
testb
sub
mov
mov
inc
mov
cmp
push
add
xchg
dec
orl
xchg
push
push
lret
sub
cmpsl
mov
aad
lea
les
std
xor
mov
imul
jg
sahf
adc
or
add
push
or
mov
in
jg
or
mov
mov
mov
mov
push
adc
fcomip
mov
pop
lret
ljmp
or
pop
xchg
sbb
xor
inc
or
pop
jl
clc
mov
xor
dec
shll
fldl2e
jecxz
jne
incl
mov
mov
pop
add
call
cli
sbb
inc
jne
pop
sub
stos
mov
test
dec
test
jle
fsubl
call
test
and
dec
push
push
lods
ret
cmpl
mov
in
test
or
test
daa
adc
fildl
xor
mov
fmull
cwtl
push
xchg
dec
cmp
cmp
lock
pop
mov
sbb
lods
mov
pusha
mov
call
pop
sub
repnz
push
push
inc
adc
in
xlat
add
or
aas
fisubs
xor
repnz
ja
leave
xchg
clc
clc
test
pushw
aas
outsb
push
ss
jo
decl
data16
aas
adc
maxps
pop
adc
dec
push
add
xor
dec
jp
or
push
or
lock
and
scas
sbb
add
int3
jb
dec
hlt
inc
mov
add
xchg
sbb
lods
add
je
movsl
adc
or
in
stos
or
push
lock
iret
cld
inc
add
lret
mov
cli
incl
fcmove
sbb
push
cli
jmp
push
add
cmp
test
sub
aas
mov
mov
je
lcall
das
je
jno
and
inc
mov
fiaddl
add
enter
jl
mov
adc
or
mov
pop
cmpsl
mov
loopne
daa
jge
cli
daa
mov
inc
and
pop
dec
or
sbb
add
adc
mov
mov
adc
in
push
pop
icebp
int
out
push
mov
push
adc
mov
aas
mov
adc
pop
sti
and
test
arpl
pop
mov
add
jg
dec
call
dec
adc
adc
stc
subl
pop
inc
mov
rolb
mov
mov
test
and
iret
ret
pop
sub
or
mov
or
mov
push
je
nop
mov
pop
and
aas
sahf
test
inc
pop
je
mov
test
xchg
xchg
out
or
sub
dec
enter
call
jg
mov
push
and
hlt
jae
inc
aad
pop
mov
and
jmp
rolb
mov
add
xor
xchg
pop
push
mov
adc
jecxz
or
add
pop
sbb
push
incb
or
xchg
das
lcall
test
das
cs
pop
pop
sub
mov
cmp
mov
call
aas
mov
daa
cmp
filds
mov
jle
jle
loope
mov
dec
pop
cld
inc
movsl
push
sub
rolb
and
daa
jl
sbb
or
xchg
or
mov
out
jge
adc
add
sub
push
or
jmp
add
cltd
ret
lcall
push
mov
push
aaa
push
rclb
inc
in
punpckhbw
or
jg
jo
xlat
push
or
push
shl
lds
push
mov
inc
and
mov
or
aaa
add
pop
shl
cmpsl
out
clc
jecxz
jp
mov
pop
bnd
addr16
nop
out
dec
data16
cld
aas
inc
in
inc
cmp
dec
pop
pop
xor
xchg
cmp
push
add
xchg
add
call
insl
push
jecxz
mov
ret
incl
sub
daa
clc
mov
jmp
adc
jecxz
inc
int
les
dec
push
push
xchg
call
push
pop
in
in
mov
test
sub
aas
mov
and
dec
jmp
jbe
inc
adc
xchg
ret
aad
fs
stos
test
bound
cmp
pop
dec
imul
sub
or
test
adc
jmp
bound
lock
sti
lods
or
xchg
stc
push
stc
push
mov
cmpl
push
xlat
add
out
cli
call
dec
lahf
cmp
pop
xorl
inc
ljmp
andb
add
sbb
call
xor
sbb
andl
push
sub
dec
mov
mov
sub
jmp
leave
cmp
call
mov
push
rcl
or
pop
incl
cmc
sub
in
or
and
jae
and
mov
mov
nop
loopne
push
aam
cmpsb
outsb
xor
mov
loopne
push
imul
jmp
xchg
or
les
adc
push
aas
add
mov
inc
lock
fadds
outsb
arpl
int
and
inc
ljmp
incl
and
adc
gs
stc
and
inc
pop
int3
rol
setne
mov
ss
sub
pusha
pusha
pusha
dec
xchg
push
pop
jmp
xor
test
lea
inc
std
push
cltd
mov
mov
push
leave
int3
xor
dec
stos
cld
adc
call
decb
adc
xchg
jmp
js
adc
jg
pop
add
enter
rorb
jo
ds
lahf
inc
in
jne
mov
loopne
decl
popf
or
add
push
hlt
push
mov
inc
cmpxchg
jp
das
in
dec
inc
lret
or
xor
mov
imul
test
outsb
fimuls
push
mov
sbb
scas
mov
insb
movsb
outsl
sbb
test
lods
mov
or
out
push
in
mov
xchg
adc
sub
xor
cmp
mov
adc
add
shll
push
aad
and
mov
push
adc
mov
fcoml
incb
and
push
xchg
jl
ds
std
sub
hlt
test
xchg
xchg
mov
test
ss
pop
xlat
out
addl
pop
and
call
cmpsl
xor
and
mov
dec
mov
push
test
lcall
repnz
dec
add
adc
loope
and
pusha
dec
or
dec
imul
pop
adc
jmp
add
mov
pop
sub
dec
xor
ret
mov
xor
xchg
adc
bound
fwait
call
adc
dec
and
mov
pop
stos
outsb
clc
icebp
je
or
add
cmovae
incl
rcll
pop
xchg
cmp
decl
leave
sbb
aas
pop
mov
mov
cld
loope
push
mov
and
stos
add
leave
sbb
sbb
jmp
nop
lcall
adc
rdtsc
cmc
subl
out
sub
xchg
and
sub
cwtl
icebp
pop
inc
daa
lret
les
hlt
scas
js
das
adc
popf
mov
stos
pop
mov
nop
add
adc
dec
dec
bound
icebp
mov
cmpl
and
sbb
adc
add
pop
enter
dec
adc
fst
xchg
push
cmpb
push
fndisi(8087
call
nop
inc
dec
adc
sti
jne
pop
repnz
inc
hlt
hlt
jg
stos
adc
aas
jecxz
adc
mov
jmp
mov
aam
sti
adc
ss
inc
adcl
iret
daa
and
pop
stc
mov
repz
and
xor
xchg
jg
movsb
movsb
jbe
mov
aas
and
test
or
pop
es
mov
inc
mov
push
push
and
xlat
pop
in
push
jp
sbb
mov
ljmp
pop
or
js
add
xchg
pop
mov
mov
ljmp
nop
cmp
cltd
xchg
lcall
enter
cmp
aam
and
jns
lret
cmp
xor
ja
movsb
jg
push
push
push
add
inc
lcall
ja
push
cmpsb
xchg
clc
adc
push
loop
pop
adc
inc
sbb
call
insl
cmp
adc
and
adc
jg
jle
inc
adc
cmp
pop
clc
pop
xchg
in
pop
outsb
push
mov
cmp
sub
mov
or
dec
or
pop
inc
jns
push
dec
subb
andb
adc
lret
mov
es
xchg
inc
frstor
mov
xchg
inc
add
jge
je
mov
jbe
addr16
push
popf
fisubrl
idivl
xor
fs
inc
push
cmp
fsubs
cld
cmp
les
dec
jecxz
imul
aas
inc
popf
mov
or
mov
adcl
addb
cmc
dec
cmpsb
stos
xchg
sbb
mov
jl
lea
adc
and
pushl
or
aad
sbb
xor
mov
mov
push
cld
aas
adc
imul
movsl
sub
mov
dec
test
pcmpgtb
ret
mov
decb
insb
mov
sbbb
push
sub
or
xor
lea
or
push
or
adc
sbb
aaa
pushf
push
jmp
mov
push
add
xchg
std
xchg
scas
loopne
xor
adc
push
ja
dec
cmp
pop
xchg
sub
sub
jmp
sbbb
cld
mov
mov
aaa
mov
add
or
jno
push
repnz
imul
pop
pop
cmp
xchg
jl
movsb
add
mov
sahf
adc
xor
loop
dec
and
sub
stc
incl
fisttpl
sub
cmp
inc
inc
add
call
cmpsl
cli
ds
add
add
inc
std
adc
push
jle
cmp
aam
sub
dec
push
and
jae
xlat
stc
aad
in
push
out
xor
clc
cld
push
and
inc
sar
sub
or
adc
decl
jmp
mov
xchg
aad
push
sub
popf
push
cmp
mov
or
aas
pushf
pop
loopne
mov
fdivrp
ljmp
dec
jnp
inc
call
jg
in
sub
inc
aas
ret
cmp
lea
inc
xchg
sarl
ret
xor
aas
pop
inc
fmuls
and
xchg
aas
and
test
in
adc
dec
jg
fstpt
xor
push
pop
aad
stc
call
xorl
and
lods
dec
inc
add
repz
inc
sub
cmpsl
cmp
std
repz
aam
mov
sar
push
or
rolb
mov
add
shl
add
cmp
sub
add
aas
inc
xor
popf
dec
adc
lea
inc
jecxz
ja
cmpsl
lock
mov
jmp
xor
xlat
jmp
adc
in
inc
xchg
repz
test
outsl
mov
hlt
iret
add
mov
inc
gs
popf
mov
adc
lahf
and
xor
call
and
cmpsl
cltd
clc
rolb
icebp
inc
iret
repnz
lret
inc
gs
inc
adc
shl
lock
and
xlat
cmc
loop
cwtl
and
call
repnz
orb
adc
mov
inc
in
je
inc
in
call
int
in
jle
aam
bound
inc
insl
sub
sub
sub
repnz
call
clc
dec
test
test
jecxz
mov
mov
pop
cmp
dec
dec
lods
jmp
rcrb
nop
pop
ja
xor
inc
push
or
or
out
mov
and
adc
cli
jae
push
or
fistps
scas
popf
inc
pop
adc
cli
and
push
pop
sti
call
mov
xor
add
sub
addr16
jecxz
pushf
jl
inc
jg
and
jo
call
enter
and
and
js
jne
incl
lcall
push
adc
call
jg
pop
pop
or
or
dec
mov
fdivrp
scas
or
mov
orl
mov
pop
ret
subl
test
adc
xor
inc
les
mov
push
push
add
call
stc
push
lret
jg
jae
sti
mov
std
push
pop
xchg
out
mov
cmp
leave
pushl
pop
in
fwait
lds
mov
js
movsb
pop
mov
fdivp
imul
or
mov
cmp
jo
xchg
testl
sub
popf
sub
mov
pop
add
int3
xchg
add
gs
das
data16
adc
mov
stc
or
in
addb
push
mov
pusha
hlt
jg
das
shl
jne
sar
cmp
lock
repz
add
mov
push
push
sbb
mov
sub
cmp
mov
mov
xchg
push
outsb
cmp
cmp
dec
hlt
inc
jg
cmpsl
cmc
jecxz
aaa
verw
pop
in
cmp
fs
mov
mov
stc
add
sub
or
loopne
sbb
shrl
fisubl
or
cmp
or
add
push
xchg
sub
sbb
mov
adc
pop
dec
call
mov
or
or
or
cmp
jg
loopne
sub
dec
push
lods
loopne
jg
aas
push
pop
adc
and
fidivl
and
cmp
cli
shll
int
push
pop
sarb
or
mov
and
pop
xor
mov
pop
fwait
or
mov
test
dec
jne
pop
mov
test
mov
cltd
fs
decl
lret
dec
pop
cmp
je
cmp
cmc
adc
pop
push
inc
inc
roll
adc
sub
lock
aam
mov
in
or
cmp
xchg
and
add
imul
test
enter
sbb
jg
xchg
push
mov
fwait
decl
push
add
cld
xchg
push
push
idiv
fiadds
mov
xor
call
insb
loopne
cpuid
addr16
jbe
mov
clc
push
popa
std
imul
sub
pop
mov
stc
loopne
pop
jo
icebp
data16
ljmp
jl
or
and
addl
inc
cmpsl
dec
add
push
cmp
pushf
fidivrl
ss
adc
sbb
int3
add
add
lea
push
push
jl
cmp
and
insl
cmp
nop
mov
xlat
call
es
push
adc
fdiv
test
mov
lcall
jo
push
ret
mov
aas
jno
imul
stos
sub
inc
dec
fadd
decl
sti
dec
xor
aad
or
jg
jmp
lock
dec
cmpsl
sbb
mov
setae
mov
aas
loopne
shl
lahf
xchg
adc
pop
dec
xor
dec
repnz
sarb
lcall
inc
or
call
cmp
pop
clc
push
inc
out
rcrb
inc
jmp
mov
mov
dec
adc
mov
ljmp
pop
nop
pop
push
and
das
test
jl
inc
xor
or
call
addl
xchg
shl
xor
sub
fsts
inc
call
daa
lods
push
sbb
add
jg
mov
sub
mov
or
mov
daa
ret
jno
cmp
jg
repnz
in
add
enter
push
adc
pop
dec
repnz
test
sar
jns
scas
lret
test
mov
pop
pop
cmp
cmp
add
rolb
pop
and
push
js
mov
or
loopne
inc
jl
add
adc
shll
leave
incl
daa
cmpsb
stos
pusha
jno
popf
or
or
fnsave
sbb
in
cmp
int3
xor
xor
mov
stos
and
pop
arpl
iret
incl
push
ret
aad
std
bswap
les
xor
add
imul
push
push
add
pushf
ret
lcall
push
sub
enter
add
out
push
and
or
xor
call
and
test
xchg
jns
push
add
inc
pop
repnz
in
push
push
sar
and
mov
orl
std
or
shrb
mov
inc
mov
rcr
xor
mov
sbb
aas
test
lds
mov
movsb
mov
adc
add
xor
xchg
rol
cmpsb
out
cmovne
add
sub
aas
dec
jne
sub
pop
add
pop
test
mov
decl
or
xchg
enter
call
mov
shll
or
loope
jl
mov
and
cltd
aaa
cmp
mov
mov
mov
inc
or
rorl
movsl
add
pop
pop
in
xchg
push
clc
dec
sarl
jnp
test
dec
jmp
stc
jg
jmp
movsb
inc
mov
ss
ret
dec
lods
sbb
adc
mov
dec
clc
mov
pop
cltd
mov
dec
stos
ss
pop
sbb
adc
mov
ss
adcb
icebp
mov
xchg
dec
jnp
xchg
or
pop
inc
push
dec
or
test
loope
dec
test
data16
pop
adc
cmp
mov
jle
ret
cmp
mov
add
or
jbe
shrl
lfs
push
hlt
pop
aad
mov
inc
pop
scas
sub
sahf
in
enter
or
or
add
nop
aaa
pop
or
mov
push
or
sub
mov
fwait
xlat
fnstenv
xor
icebp
inc
bnd
lea
mov
lds
inc
dec
lods
sub
push
fdivr
inc
mov
push
lock
mov
add
ret
and
ljmp
sub
sbb
or
push
aas
push
adc
sahf
sahf
adc
dec
cmp
icebp
andb
ja
dec
rclb
loop
orl
lea
ds
jbe
xchg
and
jns
popa
ljmp
inc
xorb
xchg
popa
call
scas
xchg
xchg
les
roll
std
inc
sbbb
test
jo
lds
mov
les
adc
ret
mov
pushl
cmp
sub
loopne
scas
push
adc
shrb
stos
cmp
inc
and
les
push
adc
call
mov
adc
or
and
pusha
dec
pop
stos
subl
cmpl
dec
push
mov
lcall
push
cld
sub
das
inc
adc
cld
fs
dec
sub
lea
mov
cmp
or
sbb
outsl
xor
cld
aas
inc
insl
cmp
imul
add
lahf
sub
xorl
inc
cmp
dec
add
push
mov
push
inc
mov
inc
or
imul
ljmp
jne
outsb
cli
xor
inc
mov
test
loopne
add
fisttpll
dec
jg
push
js
xor
adc
addr16
add
mov
jno
push
decb
and
inc
inc
std
adc
adc
imul
push
mov
push
lret
sbb
dec
pusha
or
pushl
dec
xor
push
jecxz
pop
repnz
adc
xchg
shlb
and
or
ret
enter
xor
or
sbb
sub
popa
scas
xchg
cmp
cmp
mov
rorl
lcall
inc
test
call
mov
inc
push
shl
xor
ficoms
pop
mov
sarb
inc
outsl
cwtl
jb
add
pop
cld
ljmp
add
push
imul
outsl
aam
pop
dec
int
stc
xor
outsb
lret
push
dec
cld
nop
mov
xor
jno
fisttps
test
scas
data16
jecxz
push
dec
daa
adc
sbb
inc
rcll
incl
cmp
push
clc
incl
pop
add
in
insl
adc
pop
int3
sbb
nop
bound
add
cmp
inc
loopne
testb
jmp
add
xchg
lret
cmpsb
xor
dec
loope
insb
icebp
mov
mov
mov
xchg
and
int3
jl
mov
imul
cmpsl
cmp
push
sbb
push
sahf
insb
cmp
sub
addr16
xchg
lods
mov
add
cld
clc
out
mov
mov
jle
jne
add
lcall
xchg
lahf
mov
std
xchg
aaa
aaa
jno
push
bswap
call
lods
cld
mov
ret
cld
lret
mov
jp
lahf
dec
cmpl
aas
testb
xor
dec
push
mov
adc
adc
adc
gs
mov
dec
loope
insb
aaa
mov
fisttps
cmp
cmp
test
xchg
out
xchg
sub
call
lods
repz
fdiv
fdivp
in
repz
fistl
stc
lock
xchg
pusha
cmp
fstpl
pop
mov
loop
ret
stc
pop
leave
jecxz
fldcw
xchg
ds
stc
aam
in
in
stc
stc
cli
cmp
push
rcrb
pushf
out
leave
xchg
xchg
lcall
and
mov
lret
cmp
sub
bound
jle
jle
jle
out
sbbb
xor
push
rcrl
roll
call
cli
sbb
cmp
push
call
pop
rcrb
xchg
dec
clc
jg
call
xchg
hlt
cwtl
clc
mov
jmp
and
sbb
incl
aas
cld
push
add
or
iret
or
addl
xchg
and
or
scas
movsb
mov
int
jbe
js
jp
jl
jle
aas
adc
fstpl
sahf
lahf
gs
fistpl
bound
cmp
leave
dec
rcll
pop
inc
xlat
clc
loopne
repz
hlt
cmpsl
jmp
iret
leave
bswap
dec
sti
cmp
repnz
or
jecxz
mov
push
dec
std
fs
push
call
inc
popf
inc
sbb
jbe
std
pop
push
fwait
ds
insb
sbb
ret
repz
cmp
sbb
mov
and
jmp
cmpsl
std
and
xor
mov
cmp
repnz
adc
and
leave
mov
jl
jle
pop
add
call
xchg
testb
insb
daa
xchg
inc
stos
lahf
xchg
loopne
jmp
sub
cmp
leave
ret
cmp
or
in
mov
shll
cmp
mov
std
shlb
in
pop
daa
jge
xlat
pop
outsb
dec
xor
inc
imul
inc
js
jp
jl
jle
std
pushf
mov
cmp
iret
and
push
out
adc
leave
lret
repnz
xchg
in
loopne
push
xor
and
or
jns
movsb
cld
rclb
xor
data16
push
loope
cld
jl
jle
inc
cmp
fs
mov
pushf
cmc
mov
lock
jmp
test
dec
ret
push
shll
cmp
cmpl
adc
add
inc
flds
jle
loope
jmp
xchg
js
jp
aas
dec
subl
insl
pop
inc
js
cld
jg
push
cmp
and
out
movsb
mov
jmp
or
sbb
je
cmp
lods
addr16
dec
lock
hlt
pop
clc
insl
cld
jns
lahf
call
xorl
fstps
mov
stos
mov
negl
aas
inc
lods
and
nop
enter
adc
pop
dec
outsb
nop
iret
cmpsb
enter
in
push
fldcw
loop
jne
jmp
adc
call
in
mov
cmp
cmp
int
dec
mov
loopne
sub
inc
clc
lahf
test
dec
orb
xchg
pop
das
rolb
movsb
adc
loope
cs
cwtl
pop
in
bound
add
mov
jecxz
ds
push
xchg
testb
ljmp
xchg
sbbl
mov
cltd
cld
jmp
jg
inc
xchg
cmp
ss
test
mov
leave
rcl
jecxz
jge
cli
incl
sbbl
mov
fcmovb
add
mov
test
adc
adc
negb
movsl
sbb
and
aaa
iret
sub
sub
adc
mov
insb
jle
pop
nop
leave
xchg
cmpsl
sahf
mov
xor
sbb
xchg
jl
ret
mov
arpl
inc
add
stos
ss
mov
pop
add
mov
test
ret
cli
and
inc
cld
les
ss
xchg
mov
ja
inc
push
fisubrl
iret
xor
xor
sbbl
mov
and
jg
nop
mov
pusha
ja
popf
ret
ret
xor
test
dec
and
pusha
xchg
add
xchg
sbb
clc
xchg
add
fdivrl
mov
aaa
test
movb
jo
movsb
das
mov
or
adc
or
fs
or
cltd
test
and
xor
push
insl
jns
adc
mov
and
add
or
xorl
cmp
icebp
cmp
shlb
cmp
sbb
ret
xchg
pop
leave
dec
dec
adc
jmp
dec
mov
add
and
divb
sub
mov
and
pop
mov
das
jnp
adc
inc
or
mov
arpl
push
mov
mov
mov
inc
imul
lahf
or
or
repz
or
inc
adc
and
inc
mov
in
je
sub
and
lods
loopne
xor
adc
or
inc
cmpsl
inc
lods
rolb
stc
orb
add
inc
insl
outsl
test
sub
mov
or
dec
rorb
mov
cltd
fiaddl
rolb
in
in
mov
test
mov
inc
xor
push
mov
fwait
cmpsl
and
push
jne
daa
test
inc
dec
bound
dec
lods
sbb
push
push
dec
les
cmpsl
dec
loope
imul
mov
cmp
dec
je
push
je
out
push
push
mov
stos
add
cwtl
loopne
push
insl
loop
add
iret
ret
inc
ss
popa
or
and
cmp
mov
jo
cmpb
mov
subb
pop
sbb
iret
or
sub
and
and
jns
cmp
xor
test
jbe
xor
ret
outsl
cmp
mov
subl
inc
movsl
mov
aam
inc
jb
fnstcw
movsl
mov
dec
adc
inc
pop
icebp
or
in
inc
mov
popa
sub
xchg
and
xchg
mov
insb
or
dec
jnp
and
sbb
cs
leave
cltd
inc
popf
cmp
test
stos
jno
sub
addr16
loopne
enter
mov
aas
sbb
add
dec
stc
loop
xchg
jl
mov
or
dec
mov
and
xorb
sti
sub
or
ja,pt
hlt
stos
push
adc
or
inc
test
lods
pop
jmp
cmp
or
sub
push
test
test
mov
sbb
loop
jns
test
or
sbb
add
add
push
adc
nop
mov
push
addl
dec
std
and
dec
xor
pop
and
fwait
mov
push
or
xor
ret
shll
fadd
and
repnz
out
stos
std
insb
lods
xchg
add
inc
adc
cmp
lea
xchg
dec
jno
push
enter
xchg
dec
pushf
mov
xchg
push
lock
add
mov
or
inc
add
sub
dec
lcall
and
fwait
add
xchg
mov
call
dec
out
loopne
movsl
add
mov
mov
or
inc
add
imul
push
mov
or
fsubrs
jecxz
es
test
aaa
sbb
test
adc
pop
mov
inc
and
es
imul
inc
mov
inc
pop
aas
mov
dec
aam
mov
xchg
push
push
test
xchg
je
inc
frstor
or
inc
in
mov
jmp
adc
test
push
cmp
add
add
push
mov
dec
dec
nop
and
dec
jp
pop
les
addr16
inc
xchg
mov
imul
loopne
enter
adcl
loopne
dec
loop
dec
iret
shll
push
rcll
or
and
adc
inc
and
fnsave
popf
xor
outsb
inc
and
add
stos
in
dec
dec
adc
pop
jne
nop
adcl
xchg
mov
mov
mov
dec
bound
adc
xor
or
xchg
pop
mov
shrb
bound
sub
fistl
imul
loopne
lods
mov
xor
push
test
insl
arpl
or
and
push
sbb
mov
sbb
xor
inc
pop
xchg
and
in
stos
add
fsubl
add
push
test
cmp
xchg
xchg
notb
pop
pop
pusha
cmp
mov
add
pop
xchg
adc
add
mov
and
push
adc
inc
dec
cmp
popa
mov
add
loopne
inc
arpl
add
push
adc
lret
adcb
pop
sub
push
adc
mov
sub
filds
stc
pop
adc
pop
mov
movsl
mov
test
mov
popf
or
sbb
pop
add
bound
nop
cmp
mov
les
pop
insb
leave
outsl
adc
or
arpl
ss
pop
sarb
cmp
push
jmp
mov
lret
dec
push
mov
push
dec
adc
cmp
and
aas
nop
scas
and
inc
adc
jo
jb
fnstcw
cwtl
sbbb
xor
or
fmuls
sub
in
and
inc
rclb
pop
xor
in
mull
aam
mov
mov
sbb
xor
scas
mov
and
xchg
sbb
push
mov
xchg
stos
leave
inc
inc
shlb
in
mov
lea
lcall
or
jnp
adc
cmp
loopne
pop
movsl
cmc
vmovss
or
push
imul
int3
aam
or
imul
into
nop
or
push
xor
fs
je
push
test
push
inc
ret
dec
mov
test
jns
test
cmp
test
mov
inc
xor
ret
mov
jns
inc
mov
jno
sbb
add
mov
ss
repnz
xorl
jecxz
and
jp
mov
fisttpll
int
popa
mov
adc
sbb
xor
lds
loope
mov
dec
jae
mov
mov
xlat
insl
push
and
mov
pop
add
add
loop
loopne
add
cmpsl
test
xchg
mov
jno
mov
ret
das
mov
jno
adc
sti
mov
dec
lods
cmp
rcrl
and
addl
push
mov
dec
testb
cmp
push
nop
and
xor
pop
xor
adc
aaa
xchg
test
push
or
mov
mov
test
movsb
cmp
xchg
xor
push
jg
add
push
test
imul
pushf
or
or
inc
rolb
les
ret
mov
call
sbb
adc
pop
cmpsl
imul
push
push
jns
dec
shrb
loope
inc
dec
lds
add
data16
mov
push
adc
pop
sbbb
stc
adc
mov
mov
movsb
xor
mov
rclb
fdivrs
sbbb
push
ss
dec
or
adc
insl
mov
jno
mov
xor
mov
sub
or
ljmp
mov
jae
inc
xchg
and
push
andb
pop
xor
pop
ret
mov
adc
test
sbb
dec
leave
push
enter
dec
sbb
dec
pop
ljmp
jno
mov
mov
in
bound
mov
or
js
add
sub
cmp
test
jecxz
sub
mov
fstl
daa
pop
nop
mov
mov
lret
mov
mov
leave
push
xchg
nop
inc
mov
adc
mov
cmp
push
sub
mov
repz
mov
mov
lds
aad
cwtl
mov
inc
adc
pop
shlb
mov
out
mov
addb
mov
test
xchg
or
jb
loopne
and
adc
mov
ret
dec
mov
mov
addb
or
sub
loop
xchg
in
push
sbb
mov
xor
call
lcall
pop
mov
dec
inc
inc
add
add
in
inc
jne
cmpsl
icebp
push
push
inc
rclb
iret
shlb
mov
sbb
in
add
ffree
adc
or
imul
adc
cmpsl
dec
add
jge
and
sbb
repnz
push
andl
pop
jecxz
jne
and
cmp
mov
or
pop
lea
push
sbb
adc
mov
push
enter
sbb
mov
cmp
addb
insl
add
adc
popa
add
xchg
test
mov
mov
xchg
nop
sbbb
push
cmp
cmp
mov
jmp
lret
xchg
mov
test
add
cmpsb
add
push
leave
int3
xchg
mov
outsb
adc
xchg
xor
jb
push
dec
pop
dec
add
push
sbb
adcl
pop
xor
loopne
mov
or
hlt
jno
mov
dec
cs
add
jne
sbb
gs
xchg
subl
stos
add
adc
sub
stos
mov
pop
cltd
xor
daa
xchg
fsincos
lea
sub
sbbl
ja
clc
bound
jmp
mov
jmp
ss
sub
cs
xor
or
and
loop
lret
rorb
stos
out
mov
xor
and
add
or
mov
or
cmp
addb
sub
push
mov
dec
and
rolb
xchg
mov
inc
sbb
test
imul
or
mov
out
cmp
lea
push
jno
cmc
cmp
mov
or
repnz
mov
jecxz
sbb
leave
scas
mov
add
inc
mov
xor
pop
and
cli
loopne
add
fldcw
addb
mov
mov
jne
scas
out
shrl
popa
xchg
or
mov
dec
pop
test
enter
add
cli
mov
pop
jbe
pusha
mov
mov
sbb
add
jo
sti
inc
inc
and
inc
lcall
push
fisttps
inc
popl
dec
stos
jecxz
and
mov
stos
test
inc
sbb
mov
xchg
cwtl
test
add
add
cmc
add
add
lar
push
out
sbb
and
inc
imul
lock
xchg
clc
subl
sub
or
inc
jo
pop
and
cmp
and
repnz
and
add
loope
add
and
and
dec
nop
inc
imul
rorb
lcall
mov
das
iret
add
test
ja
sti
mov
mov
adc
test
mov
sbb
add
xchg
addb
adc
push
jae
push
add
pop
test
movb
test
pop
cmp
xchg
sti
jbe
adc
mov
add
and
pusha
orb
les
xchg
xchg
xor
imulb
cmc
push
inc
dec
stos
push
mov
std
insl
adc
dec
pushf
mov
adc
dec
cwtl
xorb
add
pusha
rolb
jecxz
sbb
xchg
sub
jne
ret
mov
mov
push
je
add
lods
add
test
call
sub
insl
add
ret
jmp
call
loop
mov
es
push
or
inc
dec
jne
jae
xchg
je
push
out
pop
movb
dec
insl
push
adc
inc
popf
cmp
push
add
sbb
xchg
roll
mov
pop
and
sbb
lahf
addr16
les
in
mov
mov
or
mov
imul
imul
inc
push
loop
mov
pop
pop
add
icebp
shl
add
ret
xor
xchg
push
pusha
add
and
or
or
ret
xchg
cmp
jno
or
or
or
sub
xor
or
add
daa
and
mov
or
imulb
pop
dec
mov
mov
and
ret
jb
push
or
mov
add
adc
add
mov
push
pop
xor
loope
jge
mov
adc
das
dec
jmp
mov
adc
jb
adc
aam
xchg
push
jecxz
mov
lea
stos
and
les
js
and
loopne
fwait
fs
repz
adc
add
inc
adc
icebp
inc
adc
xchg
cmpl
pop
jl
jo
outsl
xor
lcall
or
inc
mov
or
sbb
sub
mov
xchg
mov
adc
inc
addr16
pop
xor
jge
mov
push
in
push
add
inc
ja
or
dec
push
pop
mov
imul
inc
dec
les
jns
jge
stos
outsb
add
sub
add
xchg
pushf
test
sub
mov
dec
test
pop
adc
push
or
sahf
dec
sub
add
sbb
dec
ffree
push
xchg
fldt
test
add
les
outsl
out
dec
rorl
inc
popf
lods
data16
inc
pop
and
push
repnz
lret
cmp
jo
dec
daa
adc
or
mov
leave
mov
pop
and
into
add
add
and
hlt
jg
sub
jno
mov
or
cltd
rclb
push
ljmp
add
and
mov
movsl
in
add
das
sub
push
enter
xchg
xor
jne
addl
adc
pop
mov
mov
rolb
xchg
and
into
push
cmpsb
and
stos
arpl
or
cmpsb
call
add
inc
add
or
sbb
cmp
mov
push
xlat
jp
mov
cltd
cld
and
mov
sub
push
adc
mov
xor
cmp
mov
popa
lcall
sub
xchg
pop
add
outsb
lret
sbb
std
pop
jne
sub
mov
call
test
addb
and
mov
bound
push
or
dec
loope
jns
insl
test
orb
push
test
jno
rclb
aad
aad
or
orb
or
inc
xor
mov
and
mov
mov
push
repnz
es
mov
les
add
lcall
mov
stos
push
pusha
stos
das
test
add
jb
bound
and
push
add
les
loopne
ja
push
sub
adc
push
and
jecxz
xchg
inc
push
mov
mov
sbbb
or
sbb
imul
push
mov
scas
xchg
out
mov
gs
mov
add
or
sbb
shlb
ss
enter
xor
mov
or
loopne
and
dec
test
repz
fs
and
popl
adc
xor
and
clc
pop
push
dec
sbb
orl
js
inc
sub
mull
nop
mov
add
mov
sbb
xor
loope
ror
dec
sbbl
test
cs
adc
adc
loopne
test
sbb
push
add
mov
inc
inc
je
jnp
fstpt
or
jne
sub
arpl
roll
popa
sub
lock
xchg
adc
stos
icebp
fisttpl
stos
adc
lahf
sbb
mov
pop
push
pop
mov
add
mov
inc
sbb
sub
imulb
add
jne
in
add
mov
shlb
outsl
mov
stos
sub
or
mov
mov
lcall
std
insl
imul
or
or
push
fs
in
mov
xor
bswap
jge
rorb
es
cs
call
je
and
adc
add
rolb
jl
xlat
mov
xchg
or
daa
xchg
add
and
or
add
add
andb
lret
rclb
mov
cmp
inc
ss
les
lea
lcall
mov
xor
cwtl
andl
fs
sbb
inc
jo
addr16
movsbl
shlb
pop
aam
sub
adc
psraw
test
and
mov
mov
incl
dec
lcall
mov
and
cmp
adc
inc
adc
xlat
in
icebp
add
out
dec
cmp
xchg
cltd
shrb
test
pop
lds
xchg
push
jp
repnz
xor
mov
mov
fadds
out
inc
mov
push
loopne
sbb
test
imul
xor
nop
pop
pushf
dec
int3
shlb
adc
test
stos
loopne
xchg
cmp
inc
adc
je
pop
and
push
inc
les
push
clc
test
daa
push
lea
aad
pop
arpl
mov
push
mov
mov
jne
add
and
dec
ljmp
call
sahf
xorl
sub
mov
sub
movl
mov
dec
push
aad
test
dec
dec
and
inc
orb
adc
popa
aaa
in
aaa
and
add
lods
aas
mov
cmp
lahf
iret
push
sbb
jge
lcall
sbb
pop
push
bound
jmp
dec
sub
and
adc
or
sbbl
adc
pop
and
jno
and
mov
cmp
test
pusha
xlat
xchg
jb
addb
pop
iret
sub
in
rorb
andb
xchg
fnstcw
mov
pop
lea
shll
push
mov
inc
in
and
mov
aam
sub
outsl
icebp
test
jo
mov
adc
lock
test
adc
test
pushf
inc
adc
xchg
xor
mov
and
xor
adc
popa
or
mov
mov
mov
rcl
dec
out
or
or
dec
adc
cmpsb
push
out
push
shlb
inc
aad
adc
push
or
dec
pop
aam
xchg
jg
pop
les
fistpll
sub
push
jnp
lcall
inc
and
cli
hlt
enter
inc
xchg
push
and
fwait
and
adcl
sub
add
pop
and
loopne
push
sbb
dec
xor
insl
bound
adc
push
pop
cs
jns
in
rorb
lcall
icebp
inc
jmp
mov
adc
rolb
aad
test
ror
icebp
mov
fst
aaa
dec
mov
cs
mov
ljmp
sbb
cmp
cwtl
cwtl
mov
pop
aad
inc
add
in
add
jo
mov
mov
mov
jno
or
xchg
movsl
das
sbb
cmp
xchg
xor
in
xchg
push
and
pop
or
roll
mov
or
xchg
adc
mov
or
std
int3
loopne
cmp
adc
shrl
jno
mov
les
inc
adc
push
mov
jmp
inc
movsl
jo
dec
cmp
cmpsb
jg
xchg
xchg
sbb
or
nop
dec
add
sub
mov
mov
iret
adc
les
pop
cmp
cmpsb
add
jno
aaa
mov
insl
jne
dec
push
adc
outsl
pop
xchg
movsb
mov
add
xor
jl
adc
or
mov
mov
call
inc
xchg
push
mov
pop
cmpl
je
or
xor
imul
adc
pop
mov
add
pushf
pop
xor
or
mov
bound
stc
and
lock
xchg
and
add
sbb
sub
lcall
int3
adc
andb
cmpsl
pop
aad
inc
aam
add
call
call
push
jne
or
sbb
sbb
mov
xchg
push
dec
add
mov
and
push
popa
subb
sbb
es
out
and
sbbl
scas
test
les
mov
pop
and
mov
add
push
adc
and
lahf
sahf
int3
rclb
jae
mov
sahf
pop
inc
jno
jno
dec
xor
mov
data16
inc
mov
nop
dec
push
and
mov
sbb
imul
push
or
or
pop
sbb
cs
fs
add
lds
imul
or
and
add
mov
mov
lret
xor
or
sbb
xor
test
push
or
mov
adc
mov
dec
loope
rcll
push
adc
add
push
cltd
dec
mov
clc
adc
adcl
mov
ret
pop
adc
or
push
and
cmp
adc
sbb
inc
sub
insb
cmp
sub
loopne
inc
inc
adc
push
adc
adc
aaa
jo
insl
jbe
add
push
push
sahf
leave
cmpsb
push
xor
add
add
and
dec
in
dec
push
sub
lds
mov
inc
xchg
ss
add
sbb
cmp
nop
out
add
cmp
andb
add
adc
inc
dec
cwtl
dec
jecxz
stos
movsb
xor
or
jne
popa
mov
push
adc
adc
popa
addb
jno
and
cmpsb
or
xor
add
mov
jg
inc
sub
addl
enter
imul
adc
xchg
shlb
stos
fnstenv
pop
mov
push
lds
inc
cmc
dec
and
aad
pop
adc
dec
mov
dec
pushf
repnz
and
cmp
pop
sub
push
movsb
or
test
pop
mov
cmc
add
or
adc
xlat
adc
shlb
int
xchg
sbb
jns
push
repnz
push
push
add
and
cwtl
xor
mov
je
push
add
xor
mov
stos
add
xor
add
inc
xor
fldenv
fildll
xchg
sub
orb
icebp
sbb
add
dec
inc
jne
cwtl
loop
pop
pop
add
movsl
inc
lds
and
jg
pop
xchg
sbb
out
popa
or
pop
inc
mov
inc
popf
cmc
inc
leave
inc
sub
xchg
adcb
orl
cmpsb
push
cmp
sbb
sub
xor
icebp
xlat
into
movsb
stc
mov
or
je
xorb
flds
scas
sbbb
jne
das
cmp
push
mov
mov
dec
add
bts
mov
lods
icebp
push
adc
cmp
out
rorb
xchg
inc
les
cltd
dec
repz
adc
dec
imul
daa
pop
rorl
les
mov
xchg
xor
inc
test
add
push
popa
testl
sti
loopne
dec
add
push
movsl
clc
or
pop
push
sbb
ret
cs
aam
orl
nop
xchg
or
inc
or
push
mov
add
sub
push
int
pop
adc
jb
inc
lds
imull
or
push
xchg
mov
jno
xor
xchg
adc
inc
nop
sub
jae
aam
or
fcompl
push
and
ret
das
sub
push
inc
dec
adc
add
daa
mov
cs
sbb
add
push
or
push
dec
push
push
sub
fsubl
sbb
push
stos
xor
jl
subb
and
push
rcl
xor
repnz
cmpsb
and
ljmp
push
dec
inc
jns
jmp
mov
dec
in
mov
pop
pop
sub
sbb
or
pushf
inc
test
lcall
inc
cmp
add
adc
dec
lea
nop
std
push
inc
bound
push
sbb
jecxz
and
adc
mov
rorl
dec
adc
push
pusha
and
and
loope
imul
push
test
mov
adc
push
ffreep
adc
jecxz
mov
imul
add
pop
es
cs
mov
stos
fdiv
pop
mov
sbb
adc
stc
cltd
mov
jnp
xchg
xor
cwtl
push
es
imul
dec
sbb
mov
int3
loopne
add
mov
pop
add
or
test
xchg
and
xchg
pop
cmpsb
movups
call
cli
mov
repz
mov
repz
push
push
inc
cmp
mov
dec
and
xor
test
fcomps
push
pushf
rclb
add
and
inc
leave
subb
dec
inc
out
aam
lods
test
sbbl
andb
dec
mov
lds
sub
stos
ja
push
sbb
sub
jnp
jbe
repnz
cwtl
das
jns
test
test
pop
shlb
mov
sub
subl
adc
pop
clc
mov
mov
daa
push
add
dec
sbb
and
or
cmpsb
jne
andl
sub
ds
dec
xor
adc
mov
jmp
test
mov
sbb
mov
subb
add
or
test
test
mov
scas
mov
adc
adc
bound
adc
or
icebp
adc
test
cmpsb
bound
inc
and
mov
mov
mov
jae
idivb
sub
hlt
scas
push
inc
adc
inc
sbb
dec
add
pop
rcll
notl
cmc
xor
and
bound
fisttpll
fistl
pop
and
mov
in
nop
or
cmpsl
add
loopne
jne
loopne
rorl
popf
adc
add
mov
adc
adc
ljmp
adc
push
roll
push
cmp
lock
add
cmpsb
push
sub
inc
test
test
test
lcall
and
mov
add
rcrl
xor
cwtl
sub
sub
rolb
xor
fwait
cmp
lcall
mov
cmp
nop
add
push
aas
daa
push
ljmp
add
add
or
subb
xlat
test
sub
mov
mov
xchg
aaa
and
inc
xchg
dec
pop
pop
fdivl
outsl
push
or
test
test
jno
mov
ja
movsb
push
test
jge
xor
xor
inc
mov
movsl
lret
push
mov
sbb
jge
inc
test
adc
or
add
repz
or
sbbb
sbb
jo
mov
inc
pop
stc
aam
shlb
mov
add
arpl
pop
test
pop
xchg
sbb
ljmp
daa
mov
lret
shll
dec
ljmp
adc
push
and
rcrl
mov
daa
loope
and
rclb
add
jmp
fadds
add
mov
movsl
je
arpl
or
adc
jne
and
xchg
dec
push
mov
adc
aad
pop
adc
xchg
jo
add
adc
ret
dec
test
push
loop,pn
pop
shll
sbb
dec
repnz
jne
add
push
in
lcall
push
loope
push
pop
mov
mov
mov
nop
jae
push
shrb
ffree
test
cmp
add
daa
push
ret
cmp
add
je
xchg
orl
dec
pusha
inc
and
inc
add
sbb
push
rcll
push
xorl
mov
sbb
jns
aad
nop
out
sbb
adc
jb
sbb
xchg
jo
frstor
es
xchg
sub
or
push
adc
cwtl
je
mov
mov
lods
call
inc
sbb
inc
leave
jbe
rolb
jecxz
inc
add
and
push
popa
jnp
dec
inc
add
aam
mov
mov
add
test
stos
and
loopne
out
xor
adc
shll
adc
stos
sub
adc
sub
das
aas
into
test
sbb
int
mov
push
inc
add
add
scas
repz
orl
pop
inc
je
jmp
jb
jge
dec
sahf
or
cmp
sbb
mov
or
jge
xchg
xchg
ret
mov
adc
out
xorl
jecxz
scas
and
mov
mov
bound
ret
test
add
or
jne
cmp
jbe
adcb
popf
mov
sbbl
push
ret
or
jo
cs
ret
sub
loope
stos
or
and
pusha
test
and
mov
sbb
in
or
pop
push
add
add
adc
stos
popf
mov
add
movsl
popf
dec
mov
test
rorl
cmp
and
xchg
mov
sbbb
adc
push
stos
add
pop
pop
imul
adc
sub
lds
int3
mov
inc
push
cmpsw
or
mov
inc
pop
adc
test
inc
mov
nop
cmp
outsl
or
sbb
inc
or
inc
test
aas
aas
ljmp
rclb
jmp
inc
xor
leave
mov
sbbl
sbb
cwtl
stos
inc
mov
arpl
pusha
jae
or
repnz
test
sub
pop
push
ljmp
cmpsb
inc
or
stos
xlat
mov
insl
sbbb
mov
roll
sbb
and
icebp
cld
subb
je
adc
add
test
fcoml
add
push
sbb
xchg
adc
xor
sub
mov
pushf
mov
sub
xor
movsl
or
andl
xchg
mov
in
dec
sbb
inc
rclb
jmp
dec
das
and
es
adc
xor
je
inc
popf
pop
and
xchg
test
repz
mov
push
inc
pop
push
rclb
dec
and
add
insl
or
jae
stc
fs
mov
xor
add
inc
mov
pop
inc
lds
xor
push
xor
sub
cmpsl
lcall
andnps
sbb
cmp
inc
pop
jno
cmp
adc
lea
jb
push
mov
adc
stc
inc
sbb
xor
or
sub
and
dec
repz
push
leave
cmp
mov
add
add
mov
push
or
xchg
push
fwait
nop
and
pop
inc
icebp
lea
xchg
xchg
repnz
add
pop
mov
rolb
or
test
loop
and
sub
mov
xor
add
cmp
imul
adc
inc
call
jae
dec
add
and
push
sub
sbb
stc
adcl
adc
mov
pop
inc
mov
rorl
xor
mov
xchg
mov
ss
xor
xchg
mov
mov
pop
add
stos
lret
lea
xor
sub
sub
inc
fs
jb
push
or
and
push
sbb
push
xchg
int
adc
xor
or
xorl
dec
or
xchg
xor
push
cs
sub
les
xor
push
call
inc
lret
add
cwtl
sub
rcrl
and
ret
xor
shlb
fwait
xlat
pop
add
xor
inc
or
push
or
inc
aad
out
cmp
sbb
scas
inc
xor
inc
out
ja
test
dec
test
nop
cmp
push
jg
adc
push
pop
pop
sbb
mov
sbb
nop
sub
test
dec
sbb
add
pop
mov
out
add
inc
pop
adc
push
aam
test
inc
add
aam
inc
mov
pusha
mov
syscall
mov
mov
or
fs
push
inc
sub
imul
or
dec
mov
pop
push
push
repnz
sub
cld
lret
inc
mov
mov
adc
test
stos
loopne
xor
dec
bound
jae
inc
or
inc
mov
ss
or
push
lahf
and
addb
and
and
cmp
mov
repz
pop
push
add
mov
pop
mov
xor
add
int
cmp
orb
sub
mov
pop
xor
xlat
and
xchg
out
int3
cmpsl
and
and
and
imul
add
cmp
lds
xchg
xchg
icebp
subl
mov
sub
inc
movsb
or
dec
add
inc
lds
push
and
leave
inc
popa
sbb
push
inc
fstps
iret
pop
xor
mov
xor
mov
add
loopne
xlat
cmp
outsl
test
outsl
or
dec
push
jmp
dec
add
cwtl
push
and
mov
add
aad
mov
rol
aad
add
sbb
lods
xchg
stc
adcb
and
adcl
inc
or
in
mov
stos
outsb
push
cmp
xchg
adcl
push
stc
shll
fisttpll
sbb
sbb
add
adc
sub
add
cmpl
xor
xchg
or
inc
sub
mov
add
stos
cmc
xor
cmpsl
dec
adcb
cmp
scas
pop
and
jnp
adc
les
pop
and
testl
aas
mov
int
and
popf
mov
fbld
and
outsb
mov
ja
pop
push
xchg
add
mov
test
push
push
lcall
pop
or
imul
pop
sbb
inc
sahf
out
out
mov
or
les
cmpsb
pop
adc
cmpsb
mov
cmp
movb
sbb
jne
xor
push
mov
adcl
xor
sub
sbb
or
jno
nop
add
or
push
mov
push
enter
mov
sub
rolb
arpl
addr16
and
and
or
inc
sbb
cld
out
push
stos
xchg
fsubp
push
cmpsb
inc
sahf
cmp
fs
xchg
hlt
cmovg
pop
xor
pop
loope
mov
mov
add
adc
test
and
cltd
sbb
push
scas
cmp
push
pop
mov
dec
and
push
icebp
inc
mov
sub
xor
je
fimuls
jno
sub
and
aam
stc
or
call
pop
xor
adcb
rcl
add
add
jo
pop
push
stos
push
add
or
jne
xchg
or
push
sbb
add
loopne
cmp
lea
mov
shlb
xor
inc
add
inc
int
sbb
mov
sub
shll
push
adc
jnp
and
jne
xchg
cmp
mov
inc
pop
je
inc
xor
mov
mov
out
push
mov
gs
and
push
pop
lods
or
push
jne
mov
repz
rolb
out
movsb
dec
les
test
add
test
or
pusha
in
dec
adc
add
push
insl
lahf
xor
test
cmp
push
rolb
push
cmp
rorl
xor
lds
aas
cmpsl
inc
aad
cmp
adc
adcb
pop
adc
cmp
cwtl
mov
or
lods
int
lods
test
pushf
adc
ja
add
adcl
push
adc
xchg
pop
push
mov
inc
sub
add
inc
cmp
xchg
sbb
add
or
xchg
add
shrl
test
je
mov
xchg
push
sbb
repz
adc
enter
push
xchg
xor
inc
sub
test
add
lds
pop
and
inc
jns
insl
xor
pop
add
add
mov
cld
dec
adc
dec
or
mov
jmp
or
arpl
cmc
repnz
arpl
add
inc
insl
addb
push
leave
adc
mov
or
add
add
movsb
sbbb
sub
xor
ss
inc
leave
outsl
mov
mov
and
mov
push
stos
fisttps
ret
sub
and
xor
loopne
mov
sbb
inc
dec
xor
mov
js
xor
pop
rcll
rcrl
adc
inc
mov
mov
and
aam
popa
add
xor
lcall
xabort
ret
add
rorl
sarb
lods
cmp
sbbl
ret
and
jo
push
jno
dec
pop
xor
pop
inc
sbb
add
ret
jo
aaa
adc
sbb
jge
dec
rolb
aad
pop
ret
outsb
mov
mov
mov
or
add
add
or
mov
inc
xlat
mov
and
shr
xchg
imul
add
pop
cmp
jo
xor
mov
in
les
jg
jmp
pop
movsb
dec
xchg
jns
andl
adc
inc
repnz
imul
sub
sbb
adc
xrelease
cmp
out
dec
das
sbb
or
andb
cmovge
adc
cwtl
orb
pop
mov
stc
enter
dec
es
adcb
xchg
ret
inc
and
and
mov
stos
aaa
add
and
leave
dec
and
mov
jo
pushf
imul
lahf
pushf
xor
test
sub
push
rcll
jmp
insl
or
xlat
test
mov
pop
sub
leave
enter
mov
sub
and
and
addb
dec
mov
and
inc
xchg
cmpsl
add
ret
stc
or
add
dec
mov
jecxz
add
imul
sub
or
and
inc
or
call
test
sbb
sbb
pop
sub
pop
dec
adc
xor
sbb
aam
inc
pop
fisttpl
inc
rclb
dec
xorl
mov
fs
call
push
lea
test
ret
ja
adc
add
sbb
jl
subb
sub
arpl
and
jecxz
mov
sbb
cltd
pop
push
push
mov
xchg
push
add
adc
cwtl
adc
les
in
push
mov
mov
lea
insb
mov
aas
mov
sub
cs
dec
sub
mov
aad
or
xor
andl
pop
repz
dec
and
orl
frstor
dec
pop
mov
dec
dec
xor
or
lds
fsubs
push
or
fs
pusha
sbb
jmp
outsb
jecxz
xchg
mov
test
sbb
push
inc
and
or
xor
aaa
pop
sbb
cmpsb
mov
inc
insb
add
outsb
cmpl
mov
hlt
cmp
jmp
sbb
sub
js
mov
add
dec
arpl
fisttps
mov
stos
push
test
cwtl
dec
outsl
push
adc
dec
and
and
mov
sbb
shrb
jecxz
and
adc
push
and
push
sbb
aam
fld
or
jbe
leave
adc
pusha
jno
push
dec
sahf
pusha
cld
sbb
mov
orl
or
cmp
xor
cmp
pop
xchg
xor
in
seto
or
xor
arpl
dec
add
popa
andl
or
movsl
push
aam
push
sub
inc
sub
cmpsl
movsl
stos
adc
and
pop
add
adc
mov
pop
ja
or
sbb
leave
push
xorb
mov
or
lea
test
bound
pop
std
add
movsl
arpl
xor
dec
jb
jmp
mov
fs
mov
sub
dec
aam
and
adc
or
fwait
test
stos
xor
jecxz
dec
popa
push
mov
add
cltd
push
adc
xor
inc
sbb
fnstsw
mov
testl
leave
popf
cmp
test
add
mov
sti
jo
adc
push
or
sbb
mov
call
pop
lcall
adc
push
push
cmove
test
iret
add
pop
dec
sahf
addr16
lcall
pop
cmp
add
mov
inc
incl
call
scas
mov
ret
adc
inc
loopne
xor
icebp
xorb
cltd
je
adc
and
dec
pop
inc
jbe
pusha
push
cmpsb
stos
dec
mov
lea
adc
push
cmp
loope
add
test
and
or
push
repnz
inc
pop
leave
movsl
cmp
sbb
stos
push
jmp
adc
test
or
loopne
mov
adc
xor
movsb
xor
mov
jae
in
mov
subb
push
popa
das
xor
je
dec
cmp
mov
xchg
mov
dec
xor
cmpsb
mov
out
adc
add
add
and
mov
adc
lret
jmp
jnp
les
dec
jne
jo
popl
ror
push
bound
xor
movsb
mov
lahf
test
inc
and
cmp
enter
mov
scas
cmp
cwtl
add
add
push
dec
fldcw
inc
lds
cltd
xchg
jge
sbb
mov
int3
sub
mov
inc
call
inc
and
adc
and
aad
insb
xor
rorb
lea
sbb
imul
mov
adcl
adcb
lret
or
and
cmp
movsl
xchg
jo
ja
or
add
mov
jp
leave
push
adc
dec
mov
leave
pushf
shlb
or
inc
or
std
push
mov
push
adc
int
loop
pop
lds
add
aam
xor
sub
pusha
or
subl
packuswb
add
cmpsb
loopne
adc
sbb
dec
push
inc
jae
sbb
push
sbb
push
push
ret
cltd
int
adcl
stos
popf
test
mov
imul
loop
adc
add
stc
pop
mov
add
sbb
add
adc
notb
inc
xor
add
dec
sbb
sub
push
pusha
addb
dec
add
cmpsb
aas
jg
mov
ss
insl
xchg
cmp
icebp
push
jo
push
mov
pop
in
test
jno
les
repz
pusha
test
mov
inc
in
mov
and
push
xchg
cmpsl
cmc
mov
inc
xor
test
adc
je
sbb
or
xchg
xchg
inc
inc
out
add
cmp
mov
push
insb
test
adc
es
inc
lahf
out
mov
and
cmpsl
mov
jg
mov
mov
push
mov
mov
addr16
lea
mov
sar
mov
jo
in
mov
jge
xor
inc
in
ss
je
mov
cltd
pusha
push
mov
push
xchg
cmp
test
xlat
add
popa
sub
xchg
mov
nop
xchg
or
xlat
pop
xchg
inc
push
jno
pushw
pop
sub
xchg
jg
or
sbb
pop
inc
test
pop
stos
sub
stos
xor
push
sub
xor
and
or
das
pushf
xor
adc
sahf
mov
mov
mov
mov
xchg
adc
jle
and
push
push
enter
test
push
mov
or
jl
sub
test
int3
rcrb
cmc
jb
add
pop
lock
adc
sbb
xorb
mov
adc
fs
inc
dec
pusha
add
dec
out
insl
pop
or
adc
mov
adcb
or
adc
mov
push
adc
add
mov
aad
push
push
or
jle
sbb
or
pop
push
insb
inc
cli
push
lret
inc
pop
xor
stc
shlb
inc
enter
gs
push
adc
sub
dec
outsb
push
mov
inc
aam
loopne
imul
es
in
leave
xchg
enter
inc
pushf
addb
je
cmp
inc
xor
pop
inc
or
ja
sub
push
jno
iret
lods
sub
xchg
lods
dec
add
pop
mov
popl
mov
orb
fs
test
push
dec
inc
dec
push
ljmp
or
subl
nop
push
pop
adc
mov
adc
add
xchg
cld
dec
icebp
or
or
push
out
jne
push
dec
cmpsb
cltd
mov
add
inc
xor
lea
mov
mov
sbb
cmc
push
or
inc
mov
test
stos
icebp
movsl
or
mov
test
push
pop
or
adc
or
das
mov
sbbb
jecxz
pop
popa
jecxz
inc
rorl
fstl
pop
or
push
out
inc
pushf
and
subl
and
cmp
inc
andnps
addb
inc
pop
ret
mov
test
loopne
jno
pop
fistpl
cmpsb
sub
cwtl
mov
and
push
aam
and
and
insb
push
lods
or
push
push
sub
cmpsl
add
dec
adc
adc
fildl
lcall
movsb
xor
aad
dec
mov
jb
cmc
xor
mov
cs
les
mov
dec
add
int
pop
lret
or
mov
orl
push
add
or
movsl
adc
or
xchg
jo
mov
cmpsl
test
add
adc
or
repnz
or
jmp
mov
sbb
jmp
inc
sbb
leave
cwtl
mov
mov
jecxz
fldl
pop
sub
and
adc
jnp
inc
pop
xchg
pop
enter
call
rcrl
add
sbb
mov
push
inc
push
inc
ret
or
cmp
xchg
or
or
mov
and
pop
pop
and
pop
adc
rclb
lcall
or
xchg
jmp
jae
or
or
push
or
mov
rclb
dec
add
or
out
mov
or
and
fistl
jmp
sbb
mov
sub
shrb
loopne
sbb
adc
and
and
push
sub
inc
add
loope
mov
les
or
add
cmpsb
inc
push
adc
bound
lcall
adc
xchg
sbbl
push
mov
mov
add
inc
pop
test
push
push
sbb
pop
popf
jae
scas
inc
push
mov
sti
cwtl
scas
mov
adc
adc
mov
or
and
and
push
addb
mov
call
jmp
xchg
sbb
add
leave
inc
pop
jmp
nop
rorb
loope
push
popa
call
inc
dec
std
aam
sub
jmp
adc
adc
jns
and
add
adc
or
cmp
push
add
push
push
jns
mov
ret
xor
push
or
push
xor
add
add
push
les
mov
xchg
cmp
push
jg
inc
inc
andl
sub
pusha
mov
and
sbb
jae
add
adc
jge
dec
xor
stos
add
push
and
xor
aad
and
loopne
mov
and
push
inc
xchg
dec
or
gs
sub
push
cmp
sub
in
dec
jae
add
mov
mov
mov
sub
sbb
add
adc
clc
add
push
or
mov
aas
add
mov
xor
adc
inc
sar
loope
test
or
fidivrs
mov
dec
pop
push
popa
aad
orl
inc
or
lret
jp
popa
mov
pop
mov
sub
xor
add
movaps
mov
pop
and
xor
mov
rclb
adc
and
cmp
pop
sub
mov
or
jecxz
dec
call
test
not
push
int3
rolb
daa
orl
jle
addr16
rcr
adc
jne
test
inc
add
stc
test
sbbl
mov
bound
push
subl
sbb
stc
and
fimuls
inc
shlb
xor
enter
adc
clc
mov
js
add
jmp
fcomip
xchg
dec
push
or
test
sub
or
ret
xchg
xchg
add
add
jo
bound
and
pusha
and
inc
adc
lret
leave
add
and
adc
les
add
sub
or
cmpsb
add
mov
dec
add
sbb
jle
and
and
dec
xor
xor
mov
call
cmp
fs
jne
rclb
cmpsb
and
jns
iret
push
xor
jne
cmc
push
mov
cmp
mov
js
sub
leave
push
add
or
sub
arpl
test
daa
mov
mov
je
adc
pop
adc
pop
rorb
int
mov
sub
in
scas
cld
push
lcall
mov
cmpsb
pop
call
mov
and
mov
and
daa
pop
lods
add
or
pop
xchg
mov
adc
roll
push
mov
adc
popa
push
push
nop
adc
pushf
scas
xor
xor
pop
sbb
sarb
subb
push
stc
js
mov
inc
aad
es
in
jbe
add
inc
push
lret
xor
inc
dec
movb
dec
mov
lcall
es
out
aas
add
mov
and
dec
mov
mov
test
dec
call
sub
ret
filds
adc
adc
mov
dec
shrl
push
or
xor
pop
aad
and
xor
dec
icebp
and
rcll
pop
daa
mov
cmp
popf
add
push
adc
inc
sub
inc
cwtl
test
ret
push
xchg
and
jmp
sbb
and
mov
or
or
dec
popa
or
les
test
push
hlt
and
mov
dec
mov
stos
add
adc
fstpl
adc
mov
lods
adcl
add
dec
dec
jp
sub
pop
cmp
je
mov
movsb
sub
nop
add
daa
or
in
push
xchg
or
ret
mov
push
icebp
jnp
aam
pop
sub
movsl
lock
repnz
pushw
sbbl
adc
nop
mov
orb
loopne
fdivs
add
int3
nop
pop
and
inc
imul
xchg
outsl
pminsw
test
and
aam
and
les
inc
in
push
mov
mov
fisttpll
cmp
mov
mov
bound
push
or
movsb
mov
cmp
outsl
adc
insl
mov
mov
jns
hlt
add
mov
insl
xchg
inc
rolb
movb
dec
push
aaa
pminsw
andb
nop
inc
lea
jae
mov
mov
rorb
cmc
arpl
js
add
les
xlat
add
adc
sbbb
push
xor
das
xchg
mov
or
dec
push
scas
popa
push
gs
outsl
addl
lea
mov
inc
in
push
or
xorl
xchg
add
gs
adcb
test
adc
cmpsl
test
or
add
loope
inc
dec
xchg
jae
or
and
mov
add
sbb
outsl
cmp
cmp
jne
orl
sub
movsb
and
sbb
sub
adc
mov
mov
add
pop
jmp
or
push
ret
in
mov
cmp
loopne
cmpsb
popf
xchg
rcll
push
xor
loopne
scas
add
sub
mov
or
adc
cmc
jb
imul
mov
inc
loope
xorl
pop
rolb
xchg
ret
out
xchg
cmp
dec
mov
andb
jno
xchg
test
mov
pop
test
fistpl
mov
xor
addl
outsl
test
adc
mov
dec
jns
xchg
movsb
es
xchg
xor
jecxz
stos
xor
outsl
dec
aam
push
xchg
rcl
leave
mov
pop
adc
xor
jo
in
push
push
xor
stos
or
sbb
add
or
push
sbb
pop
ja
and
cmc
stos
mov
push
ret
push
mov
pusha
mov
add
lea
adc
rorl
mov
xor
xor
movsl
subb
test
adc
jne
add
loope
mov
xor
mov
inc
inc
dec
sub
xorl
adc
and
adc
xchg
ret
ret
add
xchg
dec
pop
test
xchg
shlb
sarl
xchg
int
test
cwtl
rclb
les
cmp
lock
repnz
sub
inc
lcall
or
mov
dec
inc
add
call
push
mov
dec
cmp
mov
es
sub
test
sbb
add
test
xor
mov
mov
in
inc
push
cwtl
lds
leave
mov
inc
orb
loopne
stc
or
push
add
out
lcall
mov
ret
test
inc
cwtl
or
les
push
xor
sbb
mov
shl
inc
mov
subl
dec
inc
gs
dec
xchg
pop
mov
and
imul
inc
repnz
push
add
mov
add
xorl
jnp
adc
adc
add
push
adc
test
or
lcall
and
dec
mov
or
orl
cmpsb
sub
test
and
xchg
adc
stc
or
scas
mov
xchg
xchg
ljmp
mov
lea
and
mov
loopne
sti
jae
push
or
push
loopne
add
and
inc
sbb
pushf
pop
mov
stos
or
mov
mov
fbld
dec
cs
or
std
sbb
jo
iret
xor
sbb
adc
sbb
test
mov
push
dec
sbb
inc
push
stos
repnz
stos
fwait
inc
or
push
or
push
sub
xor
adc
add
inc
int
pop
sub
inc
push
push
and
dec
pop
inc
shrl
xor
push
loopne
mov
mov
ss
mov
lea
push
push
adc
push
jno
in
inc
add
add
xchg
jo
rep
rol
in
jae
pop
les
and
fs
cli
rcrl
inc
adc
out
add
adc
sub
imul
dec
mov
cmpsl
jne
and
mov
rcll
push
sbb
lahf
mov
add
popa
push
push
jo
pop
xor
andb
and
leave
testl
xchg
cltd
scas
sbb
adc
mov
in
lds
push
test
jne
xor
repz
and
sbb
dec
ljmp
inc
std
jg
add
pusha
xchg
inc
stc
dec
dec
push
gs
or
orb
xor
mov
and
inc
or
sub
fwait
push
and
loopne
mov
pop
int3
test
cmpsl
jo
xchg
jno
je
sbb
xor
jb
xchg
adc
and
xchg
dec
jae
xor
push
xchg
sbb
add
xchg
rolb
stos
push
sbb
call
or
mov
xchg
push
mov
push
sub
test
adc
dec
call
mov
lcall
orb
fsubl
inc
xor
scas
push
cs
pop
and
out
push
faddl
or
rclb
or
addb
push
and
xor
mov
inc
ret
mov
addb
imul
stos
pusha
sbb
jmp
inc
pop
add
leave
repz
push
jb
mov
leave
push
repnz
xor
ljmp
add
movsb
lods
cmp
lock
movsb
shrb
int3
imul
sub
inc
mov
push
frstor
mov
or
cmp
ret
cmp
inc
adc
xchg
pop
rorl
imul
mov
dec
adc
jb
adc
out
movsb
xor
movsl
jne
and
mov
lea
add
movsl
add
loop
push
mov
scas
jmp
mov
mov
pop
and
or
enter
inc
jns
inc
mov
sub
ret
lea
stc
mov
loop
aaa
cmp
dec
sbb
and
sbb
xchg
out
inc
or
imul
das
outsb
and
adc
bound
add
out
rorl
add
lret
lahf
lcall
sub
repz
pop
xor
sub
mov
fcompl
push
test
push
inc
mov
inc
dec
test
jmp
pop
add
aas
add
jne
pop
mov
cmpsb
pop
lea
mov
xor
sbb
cltd
jle
sbb
push
adc
mov
sbb
sub
sti
leave
dec
adc
xchg
xchg
rcl
or
and
xor
lods
cs
mov
add
rclb
sbb
cmp
add
dec
jl
ret
test
mov
cmp
or
push
call
inc
jb
inc
and
cmpsl
stc
es
loopne
adc
push
xor
mov
test
in
cmp
lahf
je
xchg
lods
shl
lock
rclb
xor
jo
addl
lds
test
pop
fwait
jb
add
aam
mov
repnz
out
int
outsb
inc
inc
addr16
adc
ret
lcall
push
imul
xchg
push
inc
or
test
iret
push
repz
mov
push
jb
push
or
mov
adc
jno
adc
pop
test
ret
xchg
movsl
xchg
push
xor
popf
and
or
mov
movsb
xor
or
cmp
pop
roll
faddl
push
jno
mov
dec
xor
leave
out
jae
sub
dec
les
xor
jns
test
sbb
pop
mov
mov
es
adc
flds
or
push
jne
xor
jmp
or
adc
movsb
mov
rcrl
push
lret
hlt
mov
jns
mov
jo
aaa
xor
pop
popa
imul
jo
dec
mov
push
push
cmc
mov
dec
xchg
and
ret
popa
pusha
push
pop
xchg
add
inc
adc
dec
adcl
iret
scas
mov
shl
jno
jno
int3
xor
xor
jne
xor
xor
adc
aad
xor
daa
xor
adc
les
sbb
jmp
je
adc
pop
add
inc
and
push
dec
pop
xor
inc
enter
adc
stos
mov
and
inc
mov
sbb
add
gs
movl
adc
xor
or
or
das
xchg
add
loopne
ret
fldl
orb
dec
sbb
add
orb
call
sbb
add
inc
aam
pop
xchg
out
mov
arpl
mov
push
shlb
add
or
imul
repnz
mov
clc
adc
mov
sub
dec
lds
and
sbb
mov
adc
xor
cmp
rcrb
and
adc
jmp
pop
nop
xor
ret
rclb
push
ljmp
mov
and
int
inc
pop
dec
add
mov
outsl
mov
inc
aas
loop
in
mov
or
and
xor
sub
out
jle
adc
aaa
les
outsb
or
adc
jmp
jp
bound
gs
leave
das
rolb
sbb
mov
inc
stos
or
ljmp
sbbl
rcrl
jl
push
jne
xchg
sub
rorb
subb
push
push
les
add
inc
sub
dec
stc
outsl
stos
fcoml
outsb
enter
ficompl
push
mov
ficoml
arpl
orb
cmp
aad
aad
xor
xchg
sbb
cmpsb
fmuls
stos
inc
mov
push
or
aad
inc
test
jg
dec
popa
mov
mov
push
jge
punpckhbw
mov
aas
adc
mov
or
inc
sbb
cmp
lock
outsb
cwtl
or
xor
lahf
push
lds
iret
fcmovbe
or
test
mov
pop
jno
popf
and
stos
sub
xor
cmp
fs
jo
incl
mov
or
out
adc
mov
push
jecxz
in
xor
jne
jns
iret
mov
mov
in
cmp
sbb
xor
xlat
sub
in
ja
sub
dec
push
or
dec
pop
push
or
pop
and
cmp
jne
sti
lret
xor
or
cmp
subl
jecxz
or
mov
fidivrs
dec
sbb
faddl
xlat
inc
int3
sbb
pop
rcl
or
inc
outsl
mov
push
add
or
pop
in
dec
inc
roll
fs
int3
sbb
and
or
cmp
inc
mov
and
pusha
fld
sub
add
inc
adc
xchg
pop
inc
pushf
les
iret
or
addl
mov
ja
filds
scas
loop
sub
rolb
test
add
add
stos
push
add
adc
jmp
mov
xor
nop
jno
dec
dec
imul
and
or
dec
push
ds
and
add
inc
sub
or
movsb
subb
sbb
cmpsb
and
inc
cwtl
lods
and
outsl
dec
lret
subb
mov
loop
cmpsl
sub
cli
jo
and
xor
mov
lock
adc
sar
mov
loopne
pusha
sbb
jb
push
pusha
subb
jne
leave
testb
ss
dec
loopne
pop
jbe
mov
movsb
xor
add
jno
bound
mov
fbld
and
adc
mov
shrl
add
js
ret
push
xor
inc
pop
adc
lcall
lods
pop
insl
inc
int
jb,pn
sbb
dec
dec
sahf
and
pushf
xchg
xchg
mov
mov
movsl
sub
mov
rclb
leave
int3
shlb
scas
iret
aad
fimuls
adc
iret
mov
data16
mov
jne
mov
daa
rclb
mov
andl
or
xchg
movsl
and
push
cmc
pop
mov
mov
mov
shll
cmp
mov
xlat
pusha
rolb
push
sub
sbb
adc
cmp
lahf
fsincos
aam
pusha
xor
mov
in
lret
arpl
nop
rolb
push
cmp
sbb
test
out
lods
cmp
test
in
rorb
and
mov
fwait
add
mov
aam
or
dec
add
pop
cmp
push
sub
inc
add
sub
fldenv
push
xchg
xor
mov
cmp
adc
lea
ret
jl
and
xchg
je
fs
cwtl
and
ret
or
sbb
push
jecxz
je
insb
or
dec
mull
out
xchg
adc
aam
jle
gs
push
adc
sub
neg
cmp
push
xor
mov
or
popa
sbb
sub
sqrtps
sub
or
subl
cmc
and
sub
push
xor
sbb
adc
pop
daa
stc
xchg
mov
aad
loopne
das
mov
push
xchg
mov
dec
aaa
test
aam
inc
or
mov
fucomp
xor
inc
xchg
xor
add
sbb
stc
lods
outsl
jmp
cmpl
test
arpl
cmpsb
je
xchg
stos
orb
add
inc
inc
mov
stc
push
sub
test
stos
orl
mov
mov
push
pop
add
loopne
or
mov
or
xor
and
aaa
loop
jl
and
and
add
fadd
fs
loope
sbb
inc
data16
aam
lea
nop
mov
test
jns
andb
add
sub
aaa
daa
adc
inc
xchg
mov
add
lret
dec
sarb
fwait
sub
jae
insl
outsl
mov
cmp
cmp
and
out
xor
add
cwtl
fcmovne
lcall
add
push
scas
push
push
inc
ss
xor
cmp
mov
or
cld
push
rolb
xor
mov
ljmp
and
cmp
call
insl
add
add
insb
push
cwtl
add
or
or
xor
loop
aaa
sbb
push
pop
add
push
or
jge
pop
adc
mov
int
rcll
xchg
rcpps
cmp
insb
pop
and
push
sahf
arpl
mov
das
inc
dec
movsl
and
pop
xor
lahf
pop
push
jl
les
xchg
xor
pop
aaa
add
mov
inc
callw
mov
insl
loopne
cmp
loope
loop
xchg
mov
shlb
pop
rclb
daa
inc
cs
dec
xor
imul
popf
or
rclb
cmp
xchg
sub
cmp
out
fidivrl
popa
sub
test
insb
mov
cmp
stos
movb
movsl
mov
test
mov
in
mov
jbe
mov
add
xchg
aam
pop
leave
jle
lds
popa
adc
adc
or
movsl
jmp
add
or
and
inc
ss
int3
rorb
xor
add
xchg
xlat
mov
add
xchg
add
sbb
sbb
ja
pop
scas
and
or
adc
loopne
inc
mov
les
clc
sbb
dec
les
dec
xchg
push
pop
or
mov
aad
pop
push
shlb
push
xor
and
lret
or
mov
mov
loop
imul
mov
rcl
mov
cmp
adc
adc
adc
jb
cmp
test
aad
and
loopne
or
adc
mov
test
shlb
and
adc
fidivrs
bound
push
test
mov
mov
sub
shl
loop
rorb
stos
insl
addr16
mov
inc
dec
xchg
movsb
adc
pop
jo
mov
xor
dec
rcll
xor
lahf
push
lods
loopne
jmp
repz
or
or
icebp
or
stos
cmpsb
push
xchg
dec
mov
scas
jp
push
mov
testl
or
icebp
and
cmp
sub
movl
sub
jge
adc
iret
push
inc
cwtl
sbb
mov
dec
rcr
jnp
orl
mov
les
aam
or
cmpsb
in
unpckhps
lea
or
loope
sub
mov
lahf
test
mov
add
xor
das
jo
pop
push
mov
adc
aam
push
push
add
outsb
outsl
movsb
leave
mov
nop
mov
int3
mov
adc
and
push
ret
stc
and
inc
out
rol
xchg
ss
and
jnp
mov
xor
xor
fsubrs
iret
aam
adc
add
addr16
and
ds
xchg
mov
ret
inc
lods
dec
aas
aad
sbb
rcll
enter
mov
push
dec
outsb
das
and
icebp
lock
add
add
out
and
inc
orl
inc
repnz
pushf
addb
jbe
dec
mov
outsb
cmp
movsl
inc
xor
xchg
jne
mov
mov
dec
aaa
push
cmpsb
pop
aas
lea
test
push
and
push
sub
push
sbb
cmc
orb
adc
pop
push
mov
jp
pop
and
rolb
popf
xchg
sub
and
mov
xchg
sbb
sbb
shlb
add
xor
xchg
jne
cmc
add
inc
xchg
and
mov
inc
push
mov
add
shll
lcall
jb
mov
sub
xchg
xadd
pop
and
mov
rcl
push
pushf
push
push
or
scas
mov
add
jns
mov
je
inc
bound
or
je
and
mov
push
fisttpl
loopne
jo
push
ret
push
mov
adc
sbb
arpl
sbb
repnz
add
jo
test
cmp
cmc
out
sbb
sbb
mov
leave
push
das
cmp
addr16
or
sti
dec
sub
add
pop
and
jne
adc
je
outsl
mov
fidivs
xor
fistl
das
sbb
adc
push
push
adc
clc
rolb
push
adc
outsl
mov
jecxz
cmp
adc
dec
sbbb
jbe
sub
shll
jp
push
jmp
loop
out
push
imul
sub
adc
call
cmc
push
mov
pop
hlt
mov
push
push
inc
lea
outsb
push
dec
push
outsb
jne
add
xchg
and
mov
idivb
xchg
daa
cmp
aam
or
jbe
jo
lret
jae
pop
int
hlt
cmpsl
es
adc
sbb
jmp
data16
insl
dec
or
fcoml
loop
sbb
inc
shll
cmpb
push
inc
sbb
sbb
and
bound
and
adc
mov
popf
rcrb
call
or
add
iret
cmpsb
mov
jmp
ret
inc
pusha
lea
rolb
orl
mov
mov
adc
and
and
fsubrl
shlb
add
mov
push
jle
inc
push
sbb
aam
push
add
inc
pop
and
and
xchg
call
pop
movsb
cs
stos
mov
mov
push
pop
xor
ljmp
sub
add
add
push
inc
inc
cwtl
test
subb
jg
scas
cwtl
mov
into
test
push
push
roll
lret
test
cmp
mov
dec
jmp
les
test
sub
enter
or
mov
shrb
add
cmpsl
enter
or
mov
cmpsl
in
adc
push
shlb
mov
sub
inc
inc
inc
xchg
js
jns
jb
aam
mov
cmc
adc
clc
lds
mov
dec
cwtl
movsb
xchg
pop
js
cmp
scas
mov
pop
cld
xor
repnz
mov
adc
test
add
cmp
sub
push
xchg
xor
addr16
and
xor
pusha
push
adc
mov
es
dec
popf
les
pop
arpl
jae
dec
jne
xchg
or
stos
loop
enter
dec
insb
pop
mov
xor
daa
add
xchg
xchg
dec
pop
push
lds
push
sub
push
pop
out
outsl
push
lds
aam
inc
sbb
ret
mov
cmp
shlb
push
mov
mov
add
mov
cmp
mov
mov
adc
ret
aam
push
add
dec
bound
add
stos
mov
mov
or
sub
add
out
push
jecxz
mov
mov
jle
push
mov
or
dec
int3
addb
cmc
add
inc
lds
test
test
jle
mov
or
jge
mov
pop
aaa
xor
shlb
jbe
loop,pn
dec
and
iret
push
incb
adc
push
or
sbb
mov
mov
shlb
fbstp
cmp
xchg
lock
scas
sahf
dec
mov
sbb
ret
loope
mov
jmp
mov
loope
jmp
loop
adc
std
mov
xor
icebp
add
add
adc
pop
or
call
clc
daa
es
dec
push
push
les
jle
test
pop
push
les
adc
dec
add
adc
sbb
add
popf
jno
imul
inc
add
pop
or
paddb
aam
mov
sbb
mov
imul
ds
and
jae
icebp
jo
orl
jo
xor
lock
sti
add
popf
ja
rorl
fnsave
cmp
sbb
mov
inc
dec
arpl
mov
ret
cmpsb
and
mov
pushf
or
adc
je
mov
push
aam
imul
push
stos
orl
inc
jmp
pop
cmp
test
and
lock
add
pushf
inc
xor
push
and
ficoml
inc
jne
xchg
shlb
lcall
orb
enter
js
jae
inc
sbb
cmp
mov
xchg
popf
gs
inc
jb
xchg
shlb
mov
pop
fisubrs
mov
adc
lods
mov
sbb
and
push
mov
mov
dec
cli
pushl
or
je
call
and
iret
push
test
push
arpl
imul
adc
loope
or
push
mov
movsb
mov
jl
or
push
push
or
test
mov
and
imul
cmp
inc
adc
and
std
adc
inc
mov
negl
les
or
shr
sub
rolb
arpl
hlt
cmp
js
add
rclb
push
mov
push
jl
pop
jecxz
add
jl
popa
sbbb
mov
or
push
xor
mov
sbb
push
aam
mov
and
mov
das
mov
daa
mov
jge
add
jnp
inc
jge
pop
mull
loop
cmp
xchg
mov
push
mov
imul
xor
int
pop
push
test
aam
push
or
jmp
je
aas
pop
sbb
in
call
aad
sbb
pop
push
sarb
inc
cmp
pop
loop
out
imul
push
pop
cmp
push
jecxz
adc
mov
push
loopne
or
inc
stos
or
mov
pusha
push
out
sub
gs
filds
dec
mov
push
sbb
inc
popa
xorb
adc
or
pop
jne
xor
add
mov
jp
xor
fld
daa
dec
adc
jno
test
iret
call
or
adc
sbb
loopne
test
inc
cmp
je
jne
adc
pop
cmp
xchg
or
and
jmp
push
cmp
inc
xchg
add
adc
fisttps
hlt
cmpl
addb
xchg
push
rolb
cmpsl
es
cmpsb
push
addb
hlt
rclb
and
xchg
sbb
call
in
sub
add
or
and
xor
and
add
addr16
jl
pop
inc
negb
push
or
cmp
cmp
xorl
sbb
sbb
xchg
inc
pop
add
insl
sub
insb
xchg
stos
shl
pop
andb
mov
mov
out
mov
mov
idivl
push
dec
pusha
mov
push
not
mov
cmp
sti
mov
adc
inc
fimull
mov
jecxz
imul
and
subb
cmpsl
hlt
cmpl
dec
fstpl
ja
mov
adc
mov
pop
enter
inc
roll
add
cs
cmp
sbbl
sbb
decb
push
or
mov
jb
clc
dec
or
sbb
outsl
mov
ljmp
sub
test
fs
test
clc
adc
jg
push
jne
sbb
fmull
repnz
and
inc
in
arpl
push
in
mov
xor
imul
push
xor
push
inc
mov
xor
movsb
and
icebp
pop
jmp
push
or
imul
ret
out
and
pop
and
out
or
push
inc
xchg
push
mov
filds
lock
jne
shl
jg
insl
enter
dec
orb
mov
and
and
sub
addb
shrl
inc
sub
loop
cwtl
xchg
rclb
push
mov
xchg
or
loop
sbb
adc
ror
aam
mov
rol
push
stos
movsl
cltd
mov
push
pop
or
and
push
jae
cltd
je
pop
jnp
cmp
jp
fwait
adc
or
push
mov
mov
jnp
daa
cmp
inc
das
sahf
in
adc
push
push
cmpsl
mov
in
push
xchg
pushf
mov
cmp
mov
aaa
loopne
xor
add
mov
call
sbb
dec
js
movsl
xchg
mov
outsb
push
ja
dec
leave
xor
xchg
xchg
scas
sub
enter
scas
sub
push
lret
repz
sbb
mov
cld
sub
adc
dec
mov
push
mov
mov
add
jne
clc
sub
adc
and
lock
dec
mov
pop
sbb
xchg
cmpsb
sub
push
pop
mov
mov
sahf
push
mov
or
in
and
inc
aam
out
add
and
les
mov
bound
jbe
mov
pop
inc
lret
aam
cmp
and
jae
cmp
loop
dec
lea
movb
mov
adc
jnp
mov
test
cvttps2pi
pop
je
loopne
pop
leave
lcall
mov
pop
aad
leave
and
push
add
adc
xor
and
add
mov
fsubrs
iret
inc
jae
xchg
pop
push
add
or
mov
adc
loopne
push
adc
cmp
inc
or
xor
jb
and
adc
cmc
or
jns
xchg
enter
adc
ds
das
xchg
add
push
sub
xchg
or
addr16
cwtl
in
icebp
arpl
lea
xchg
das
insl
or
cmp
add
cmp
dec
pop
and
jns
add
mov
fsubr
push
call
cwtl
cmpsb
mov
cmpsb
sub
sbb
call
scas
jno
mov
aad
xchg
pop
add
push
iret
sbbb
adc
sbb
test
sub
cmp
jnp
dec
adc
pop
outsb
loope
inc
add
int
xchg
and
sbbb
pushf
inc
mov
test
pop
fs
jae
add
popf
and
clc
rorb
aam
daa
test
nop
test
ret
adc
ffree
addl
mov
rol
cmp
xchg
clc
cmc
aaa
mov
sub
out
pop
jge
cmp
cmp
push
add
icebp
inc
lea
rcr
inc
jle
and
mov
mov
sub
mov
mov
enter
jge
jnp
xchg
mov
jmp
mov
lock
sbbl
sbb
and
xchg
xchg
dec
or
mov
in
fnstenv
ret
jo
jl
loopne
sbb
inc
adc
mov
mov
rorb
das
cmpsb
jb,pn
dec
dec
int3
mov
adc
in
movsb
shr
cld
jb
mov
xor
shlb
inc
add
jp
or
xchg
ret
or
arpl
sbb
mov
cwtl
loope
shll
pusha
clc
dec
jo
pop
sbb
or
mov
sbb
pop
push
cmp
mov
push
js
aam
push
inc
add
mov
push
shl
rcrb
jns
call
sub
xor
pop
push
repz
mov
add
lret
loop
push
xchg
mov
or
jne
cmp
or
dec
adc
add
fldl
cmpl
xchg
lds
adc
jno
leave
out
mov
add
or
pop
cmc
cwtl
bound
jmp
adc
in
scas
sub
pop
das
loop
sub
test
and
ja
lahf
or
nop
insb
cs
jp
mov
ja
dec
test
xor
mov
ss
repnz
test
into
inc
dec
pop
std
inc
adc
jb
xor
or
mov
test
push
sub
add
jnp
sub
push
pusha
adc
mov
cmp
imul
or
rclb
xchg
push
add
and
lcall
mov
sbb
dec
mov
mov
subl
push
ljmp
adc
mov
in
and
jge
or
jb
jg
add
je
xchg
ljmp
pop
daa
mov
push
dec
adc
arpl
xchg
loope,pn
shr
adcb
in
aaa
mov
mov
inc
arpl
xchg
clc
mov
push
enter
dec
dec
lods
rorb
pop
xor
mov
mov
fists
shlb
jp
inc
sbbb
clc
in
push
push
rcl
cmpsl
dec
adc
mov
sbb
jo
adc
sub
pushf
add
add
xor
leave
add
repz
jle
jmp
scas
mov
push
imul
pop
ret
push
movsb
pop
pop
xchg
xchg
push
cmp
dec
add
rclb
jne
data16
loopne
rorl
add
and
xchg
xor
adcb
mov
icebp
popfw
cmp
push
xor
mov
mov
pop
cmp
bt
rolb
pop
out
inc
insl
addl
pause
jl
adc
and
inc
je
pop
pusha
add
scas
jbe
jl
push
insl
fdivs
push
mov
les
shll
test
sub
popa
mov
add
jl
or
pop
les
or
add
dec
cmpsb
add
xchg
orb
loopne
lods
pop
jo
aam
lret
cwtl
loopne
sbb
mov
jg
test
add
or
cmp
sbb
dec
jmp
fdivs
jle
add
lret
pop
call
and
push
push
sub
mov
sbbb
lret
mov
add
dec
incb
es
xchg
int
adc
sbb
dec
sbb
sbb
loope
push
fisubl
cmc
push
call
sarl
scas
fsubrl
in
inc
jo
in
les
inc
out
or
lock
mov
es
imul
or
adc
dec
jp
in
adc
mov
and
xorl
lock
pop
sbb
ljmp
jp
lea
pop
push
jo
cwtl
aaa
adc
shl
and
xchg
fs
out
push
and
movsb
push
and
pop
loop
lea
mov
mov
sbb
adc
hlt
cld
add
dec
pop
add
pop
sbb
mov
jae
pop
cmp
lock
xor
or
add
and
pop
and
push
xchg
mov
mov
icebp
je
add
inc
rcl
loopne
adc
mov
mov
add
dec
mov
push
or
and
jb
add
dec
and
insb
mov
roll
fs
outsl
add
ret
inc
outsb
jg
andl
andb
and
mov
pushf
test
sub
add
or
dec
xor
add
or
fisubrs
iret
push
call
add
sar
lret
addl
and
xor
push
xor
xor
mov
dec
repnz
pop
push
push
or
repnz
adc
or
popa
gs
adc
sbb
dec
push
jl
dec
push
inc
clc
cmp
fsts
adc
ljmp
and
mov
imul
and
sahf
pop
cwtl
pop
movsl
adc
add
test
pop
or
dec
lods
or
sub
stos
jno
xchg
in
icebp
test
sub
stc
sbb
nop
and
call
jmp
ret
cs
dec
push
jnp
pop
stos
mov
popf
les
jne
dec
or
bnd
sahf
negb
or
into
outsl
xchg
cltd
cmp
inc
and
ja
sbb
mov
sub
fstpl
sub
jle
and
lcall
sbb
mov
xlat
mov
aad
mov
sbb
push
mov
push
out
mov
cmp
rcl
movsb
imul
push
push
inc
mov
mov
jbe
loope
popa
rcl
imul
or
sarb
sahf
icebp
jns
pop
clc
icebp
jle
fsubrl
adc
sub
jno
push
adc
xchg
and
call
xor
dec
sub
add
and
add
jnp
add
add
insb
inc
jge
in
mov
pop
mov
push
rclb
es
pop
xchg
cwtl
inc
aas
push
mov
jecxz
xor
add
outsl
xchg
sahf
mov
push
cmc
sbb
mov
dec
daa
retw
jns
add
or
loop
flds
inc
jmp
adc
push
sbb
push
xchg
sbb
mov
inc
pop
daa
nop
mov
rorl
add
cmpsb
daa
mov
inc
inc
cmp
mov
mov
or
pop
xchg
inc
xchg
jmp
pop
movsbl
mov
add
push
data16
sub
inc
mov
adcb
dec
and
jbe
and
sahf
cmp
dec
cmp
or
xchg
jo
or
shrb
stos
mov
sahf
and
ds
test
adc
adc
and
pop
sbb
mov
orl
imul
push
mov
xlat
adc
dec
pop
call
stc
ret
push
mov
shll
fwait
pop
daa
rcll
test
mov
out
data16
sub
nop
scas
das
cwtl
or
test
cmp
daa
nop
dec
add
or
add
adc
jmp
clc
xlat
pop
mov
iret
lock
mov
mov
das
push
xlat
jne
int
add
imul
incb
jno
inc
xchg
sbb
shrl
mov
in
repz
and
jmp
aas
push
leave
roll
imul
dec
sub
lret
jge
ret
adc
das
or
jg
in
cmp
or
inc
insl
add
pusha
adcb
or
roll
or
es
dec
clc
adcb
movsl
mov
pop
add
mov
pop
jo
cmpsb
mov
or
ja
aas
mov
lods
notb
inc
test
inc
sub
out
orb
les
dec
loopne
je
or
inc
pop
cwtl
dec
mov
movsl
fdivrs
sub
mov
add
mov
dec
mov
pop
jno
ret
mov
inc
insb
cld
test
cmp
or
add
xchg
lret
inc
pop
push
cmpsl
sub
cs
or
sub
mov
iret
cli
pusha
sub
je
outsl
aad
or
adc
add
pop
xchg
push
pop
popa
hlt
les
add
pop
dec
cmpsl
add
mov
scas
and
div
out
or
or
jae
push
pop
call
inc
sbb
jecxz
movsb
popa
or
xchg
popl
push
popa
xor
ss
and
arpl
stc
lock
or
jns
jmp
push
add
out
sbb
pop
push
pop
xlat
cli
jno
push
pop
pop
fimuls
adc
sbb
inc
sbb
in
adc
orl
push
dec
fs
mov
sub
sub
add
jo
dec
iret
push
mov
mov
nop
cmpsl
test
jne
add
je
int3
adc
jne
test
iret
or
jne
sti
movsl
push
in
cs
pushf
fistl
xchg
pushf
rcrb
test
fs
mov
loope
add
adc
lret
loope
jmp
movsb
dec
lcall
std
mov
push
in
and
xorl
daa
daa
stos
or
push
sbb
and
es
add
xor
xor
xor
mov
mov
inc
jl
inc
push
mov
sbb
cmp
sub
stc
cli
push
jo
or
in
cltd
jno
fstpl
push
inc
js
push
jg
cmc
mov
fldcw
addr16
inc
fwait
out
and
cmpsb
divb
cld
lock
mov
subl
adc
adc
pop
mov
dec
dec
inc
xchg
mov
in
push
pop
cmp
lcall
subl
ret
sub
push
push
sbb
add
jp
outsb
xchg
pop
loope
and
pop
call
xchg
push
inc
mov
and
in
out
movl
std
and
or
push
jmp
add
subb
ret
adc
sbb
push
xor
bound
xchg
mov
jae
push
adc
and
mov
sub
push
xor
int
mov
daa
adc
push
and
pushf
paddq
shll
push
dec
and
gs
out
sbb
sub
and
ss
cs
mov
das
add
mov
bound
push
push
lcall
sub
loope
andb
or
jecxz
pop
push
in
inc
cltd
inc
clc
sbb
push
mov
jb
call
and
sbb
daa
xor
orl
test
shll
rorl
pop
sub
gs
sub
push
mov
cmp
push
jl
pop
pop
pusha
aad
inc
push
pop
push
or
mov
adc
out
mov
stc
arpl
dec
xchg
xchg
sbb
jp
outsb
mov
xchg
pop
xor
push
inc
pop
xor
push
mov
cmc
stos
xor
scas
daa
pop
jb
test
mov
icebp
xchg
inc
lea
or
js
xor
jle
pop
adc
daa
inc
or
sbb
or
push
sbb
dec
add
xor
jg
fnsave
mov
nop
out
adcb
sub
sub
mov
aas
mov
jle
insl
and
pop
xchg
rorb
rclb
mov
add
cmovne
outsb
pop
sub
and
les
or
mov
dec
mov
add
test
lds
mov
sub
mov
cltd
add
ss
fld1
inc
push
call
mov
loope
rcl
mov
push
clc
and
int
cmp
loope
or
imul
inc
sbb
sbb
mov
addb
pop
repnz
ret
insb
cmp
add
inc
out
and
xchg
jge
loopne
cmp
lahf
or
add
test
inc
out
rclb
inc
add
jecxz
xchg
push
lret
inc
dec
mov
arpl
and
je
mov
jmp
jmp
adc
test
mov
insl
orb
sbb
insl
cld
and
fstpt
in
aam
pushf
push
xchg
cmp
clc
pop
in
insb
hlt
insb
cmpsb
mov
movsl
inc
popf
orb
sbb
pop
and
pop
aad
xchg
test
xlat
sub
add
lods
dec
fldl
and
xchg
add
je
add
xor
or
pop
rorl
lcall
add
or
lods
sub
mov
adc
sub
mov
outsl
push
loope
imul
adc
aaa
pop
sbb
lods
sub
or
ret
mov
je
and
addb
arpl
daa
sub
addb
loope
imul
and
nop
arpl
outsl
cwtl
scas
nop
dec
and
push
jbe
stos
pop
add
jmp
add
and
mov
cltd
les
cmp
add
xchg
test
lret
mov
and
add
lret
inc
or
loop
nop
or
lea
cltd
test
ret
cmc
jno
pop
add
hlt
pop
dec
mov
lret
ljmp
test
fstp
das
mov
in
test
push
test
pop
scas
mov
out
fwait
je
pop
xor
rcll
mov
push
dec
xchg
jl
and
movsb
dec
fisttps
dec
ds
or
test
sti
dec
or
xchg
stos
adc
test
pop
jp
jae
cmp
das
test
or
xchg
enter
and
test
mov
and
mov
pop
mov
decl
loop
mov
stc
lods
fld
inc
mov
les
sub
pop
call
test
dec
mov
pop
sti
push
lret
lcall
jle
xlat
jl
add
cmc
subb
add
pop
xchg
pop
scas
adc
pop
push
and
inc
add
sbb
or
mov
jns
fsts
inc
add
pop
mov
push
or
push
adc
out
mov
or
add
xor
lahf
inc
or
sub
push
push
mov
test
push
call
and
and
inc
loop
leave
push
jle
dec
jle
add
mov
popf
popa
sbb
jl
jp
jge
mov
sbbl
cmpl
scas
mov
or
dec
inc
or
rcl
imul
enter
rclb
das
add
jno
sbb
and
add
adc
inc
insl
int
pop
xchg
lcall
adc
inc
xor
pushf
push
push
les
bound
test
sbb
mov
loop
stc
dec
mov
lds
dec
sarl
push
cmp
loopne
pop
pop
adc
je
add
sub
mov
inc
les
and
daa
and
mov
test
nop
jo
add
pushf
ret
push
fcoms
mov
popf
sub
adc
jne
popl
mov
push
mov
jae
mov
adc
xorb
cmp
cmp
ret
fnstenv
cmpsb
outsb
push
and
mov
push
movsl
mov
push
pop
inc
dec
and
sub
sarl
adc
pop
stos
aam
and
mov
bound
adc
add
mov
mov
or
pop
mov
mov
mov
adc
xor
add
leave
jp
imul
xor
xor
mov
add
dec
mov
push
mov
sbb
add
pop
mov
stos
flds
or
xlat
mov
add
mov
mov
loopne
add
ret
or
adc
sub
jl
daa
and
imul
mov
cmp
inc
hlt
test
int3
or
mov
xor
add
pop
lea
cmp
mov
pop
sbb
or
or
adcb
jne
sti
xchg
ficoml
push
lds
stos
sub
inc
inc
cmp
and
sbb
rclb
and
outsb
sbb
add
loop
movb
stos
or
insb
jecxz
loope
and
int
push
adc
loope
les
js
into
and
inc
mov
pop
push
movsl
dec
and
xorb
mov
roll
outsl
jecxz
jmp
orb
shll
fisubrs
test
inc
iret
daa
ret
lea
repnz
aas
and
sbb
testb
push
cs
jno
mov
imul
mov
inc
sub
aad
mov
cwtl
sub
in
mov
or
in
push
or
push
rolb
and
xchg
push
jmp
sub
repz
adcl
mov
repnz
pusha
mov
pop
jp
inc
cmpsb
push
xchg
and
dec
sub
sbb
mov
sub
pop
call
mov
or
jno
adc
jp
push
imul
xlat
inc
push
xor
pop
pop
mov
ficoml
je
pusha
cmpsb
add
cmpsb
sub
sbb
mov
add
test
and
xor
loopne
mov
aam
push
sub
imul
xor
push
adc
int3
add
dec
mov
out
mov
mov
inc
shlb
lret
ds
xchg
jno
cmp
in
mov
and
add
jno
and
adc
or
jmp
push
adc
pop
fisttpl
push
scas
or
or
imul
frndint
add
cmp
ds
add
aaa
jo
fdivrs
into
add
push
or
sub
add
or
jno
xor
jmp
jbe
pop
mov
rcrl
mov
rdmsr
xchg
push
sarl
sub
pop
es
pop
or
lea
mov
scas
inc
adc
jmp
dec
mov
outsb
dec
pop
or
lock
adc
mov
add
in
les
mov
fwait
cmp
cmp
xor
cmpsb
test
cmpb
mov
dec
sbb
sub
mov
mov
popf
mov
leave
xor
adc
call
add
mov
out
adc
jnp
or
cs
add
sbb
add
shl
add
sub
push
pop
stos
mov
xchg
orl
push
in
push
inc
jmp
cmp
popf
sub
and
cmpl
mov
popf
pop
adc
shrb
add
mov
xchg
lcall
push
adc
ret
add
jo
xlat
dec
push
xchg
fldl
mov
or
loop
xorl
sub
add
mov
mov
push
xor
mov
sub
scas
inc
push
push
xor
adc
or
sbb
shll
and
jmp
pop
adc
dec
xor
cld
inc
es
mov
lods
aaa
test
mov
pop
sub
sahf
int
ja
ljmp
pop
enter
mov
add
popa
sub
dec
fwait
loop
and
xor
adc
andb
loopne
cmp
es
mov
in
mov
add
jno
sub
sbb
icebp
mov
and
mov
or
aaa
xor
mov
rcl
xchg
inc
js
mov
stos
addr16
fidivrl
js
pop
rol
mov
and
lret
mov
outsb
arpl
mov
enter
dec
add
lods
mov
dec
and
mov
ret
adc
mov
inc
lea
add
inc
xor
adc
test
xor
or
push
push
into
jne
or
cmp
stos
xorl
divl
test
shrb
push
movsb
addl
and
shrb
lcall
mov
mov
rolb
push
mov
leave
clc
push
add
jnp
adcb
daa
jne
cmp
mov
cwtl
mov
dec
sub
add
mov
aad
cmp
xchg
push
iret
popf
inc
mov
fcomps
mov
xor
nop
orl
jae
orb
xor
daa
push
leave
imul
adc
addb
daa
cwtl
lea
add
cltd
insb
jne
cmp
pop
insl
cltd
pop
xor
sbb
jne
pop
jmp
stos
and
jo
scas
jp
imull
lds
sub
clc
outsb
jge
push
inc
cmp
mov
inc
jecxz
lahf
aas
or
test
gs
enter
jecxz
adc
scas
test
sub
jp
mov
mov
or
push
inc
lret
push
lods
adc
pop
sub
mov
add
dec
cmpsb
jns
scas
sbb
pop
cmc
dec
and
inc
lret
pop
mov
add
push
les
lds
movsl
sbb
mov
or
roll
sbb
shll
shlb
stc
or
jne
mov
add
fwait
testb
mov
push
test
push
xor
xlat
sub
cmp
xchg
inc
loop
dec
jns
and
pop
mov
push
mov
ljmp
mov
lds
sbb
and
mov
dec
jae
mov
repnz
sbb
lret
and
stc
ss
or
lock
call
xlat
xchg
or
adc
adc
mov
push
stc
inc
pop
lds
pop
cmc
sbb
add
stc
mov
out
fadds
shrl
jp
pop
movb
cld
ficompl
add
and
jbe
fcmovb
add
mov
adc
adc
add
sbb
xchg
jp
push
and
ja
out
pop
aaa
shlb
sub
cli
inc
mov
sub
pop
xorl
mov
stc
je
mov
push
shl
adc
xchg
xor
inc
sub
in
mov
cltd
pop
dec
sub
sbb
mov
push
repz
mov
popa
or
push
jmp
dec
sahf
addr16
lods
lods
shrl
adc
bound
cli
lea
jne
mov
in
mov
mov
dec
xchg
aaa
aam
leave
in
jne
ljmp
les
mov
xchg
push
pop
jns
js
push
or
inc
push
sbb
pop
hlt
push
in
lahf
call
or
inc
xchg
xlat
addl
sub
enter
xor
test
int3
lret
pop
sbb
enter
adc
adc
cs
push
xor
andb
rsqrtps
pop
xchg
add
imul
pop
andl
and
icebp
mov
dec
repz
je
inc
repnz
adcl
rorb
movsb
iret
subb
andb
and
addl
inc
push
cmp
or
add
xchg
xor
test
adc
jmp
pop
xor
mov
jle
pop
inc
dec
jg
xor
ret
push
test
mov
cmp
insb
rclb
je
sub
jge
scas
sub
push
and
xor
sbb
mov
popa
stos
lcall
sub
jns
sub
clc
cmc
adc
jae
stos
xor
nop
cmpsb
xor
js
xor
out
stos
je
and
sbb
ficoml
inc
jmp
add
dec
xlat
mov
aaa
shll
inc
sbb
ret
mov
or
cmp
stc
sbb
test
mov
data16
inc
ja
cmp
sub
jle
loopne
mov
push
aad
or
popa
lock
sub
cmp
dec
mov
add
pop
adc
xchg
lahf
cmc
xchg
movsb
mov
mov
mov
je
xor
or
adc
cmp
cs
adc
push
or
or
xor
xchg
and
je
mov
and
jecxz
ret
popf
jle
in
or
test
sbb
lret
movb
cltd
les
mov
add
jae
and
jmp
xchg
clc
jmp
dec
arpl
test
fstpt
xchg
aas
pushf
aas
add
dec
enter
shll
dec
sub
daa
imul
xor
mov
adc
movsb
into
sti
bound
bound
mov
dec
add
pop
daa
mov
nop
push
sahf
test
sub
push
adc
push
push
and
inc
mov
in
fs
xor
test
cmp
lea
mov
loopne
and
xchg
clc
mov
jno
inc
mov
xchg
int
in
or
rcll
scas
mov
aam
mov
or
movsl
sbb
stc
jmp
xchg
nop
push
lret
les
pop
ret
jns
test
add
mov
push
in
mov
arpl
movsl
xchg
es
repnz
iret
jno
arpl
fildll
dec
cmpsl
sbb
inc
arpl
sub
fchs
jg
jl
add
sbb
sub
repnz
jne
lea
je
fs
roll
push
jno
imul
test
sub
mov
xchg
pop
ds
inc
or
mov
dec
and
cmp
cld
lea
in
movsl
add
cmp
push
push
push
add
popa
push
neg
push
adc
aad
mov
fldenv
adc
jl
cwtl
movsb
paddsb
jno
jo
mov
and
aam
insb
or
flds
adc
mov
or
pushf
movsb
test
cmp
sbb
lret
jne
push
aas
push
lcall
cmpl
out
sub
outsl
out
aam
mov
xchg
push
je
sbb
dec
add
add
xchg
shr
sub
mov
leave
pop
addl
dec
push
ret
add
mov
orb
mov
sarb
xor
pop
jae
ljmp
sub
adc
cmp
push
dec
leave
decb
lea
sbb
add
mov
xor
mov
add
pop
xor
dec
add
pop
and
loop
pop
pop
cwtl
stc
pop
inc
adc
hlt
or
adc
lods
dec
popa
loopne
jno
nop
dec
mov
sub
adcl
popa
add
pop
int
inc
frstor
cwtl
jne
fs
jecxz
add
cmpsb
sub
adc
cmp
add
dec
mov
add
int
sub
pop
cmp
jns
dec
mov
sub
outsl
adc
rclb
adc
pop
inc
adc
xchg
addr16
das
xor
int
dec
dec
sbb
leave
sub
xchg
mov
push
pusha
adc
cmp
repz
sub
add
inc
and
inc
movsl
add
dec
xor
add
mov
or
jno
in
xchg
pop
ret
cmp
dec
sbb
test
push
jnp
and
nop
lret
in
pop
push
jne
inc
out
push
inc
jmp
or
mov
fstl
and
inc
push
sub
es
xchg
test
ljmp
inc
jb
inc
adc
xchg
push
pusha
and
in
rcrb
in
lods
sahf
lea
xchg
or
insb
shll
lods
outsl
jge
sbb
add
movsl
mov
mov
xor
popa
push
scas
adc
add
dec
jp
out
xorl
and
in
mov
push
mov
test
jne
stos
stos
dec
aam
and
sub
andl
dec
imul
inc
cmp
inc
adc
repnz
shll
inc
or
loopne
addl
outsl
je
adc
shrl
rolb
add
dec
mov
rclb
je
stos
xchg
cmpsb
es
jge
xchg
dec
sub
sbb
aaa
vpsubsb
call
inc
add
outsl
cld
inc
push
push
xor
aam
sbb
mov
jle
sbbl
inc
js
mulb
sahf
mov
mov
loop
add
dec
movsb
inc
stos
inc
jecxz
dec
and
cltd
mov
pop
xor
orl
cmpsl
push
xor
fcomps
cmp
push
arpl
hlt
pop
and
mov
push
jae
push
push
addl
xchg
ret
or
ja
push
test
pop
mov
sub
jno
test
cmp
and
lds
jecxz
iret
adc
cwtl
ljmp
inc
jp
cmp
mov
test
lcall
adc
lds
int
popa
or
push
mov
in
add
stc
mov
inc
imul
pop
mov
call
adcb
or
pop
push
bound
add
add
rolb
pop
push
jmp
inc
push
fisubrl
inc
jb
js
add
fs
cmp
pop
int
mov
ja
mov
or
test
icebp
or
cmpsl
mov
stos
dec
cmpsl
jmp
mov
scas
in
leave
int
or
orb
inc
jnp
sub
add
inc
test
sbb
stc
dec
sub
or
jmp
pushf
add
in
rcrb
or
stc
add
xor
popl
dec
loop
jle
and
scas
sbb
lret
daa
sbb
movsb
or
cmpsb
add
inc
rclb
pop
pop
pop
leave
imul
cmovns
in
test
nop
pop
pop
imul
jp
fisttpll
loopne
in
mov
or
sub
pop
xchg
or
popa
jmp
dec
int3
dec
aam
adc
inc
mov
stc
rclb
mov
mul
imul
popf
adc
pop
insb
dec
imul
enter
inc
call
sub
pop
roll
adc
mov
xor
rcrb
cmpsb
and
daa
pop
mov
ds
pop
xor
adc
pop
cmpsl
xor
sub
xchg
dec
adc
jns
xchg
test
sbb
stc
xchg
push
repnz
leave
dec
aad
call
or
add
sub
pop
imul
ja
inc
mov
inc
sahf
jl
and
xchg
xor
mov
negb
xchg
and
jmp
sub
aas
in
sbb
xlat
les
dec
cwtl
xor
adc
testb
push
xor
je
lea
jno
inc
mov
and
inc
add
push
inc
ret
pop
testl
movsl
dec
or
sti
inc
iret
push
pop
in
shll
cmpb
std
adc
ljmp
add
adc
push
xchg
xchg
rclb
cmp
insl
nop
xchg
cmpsb
or
leave
push
and
aaa
std
mov
stos
mov
mov
enter
push
mov
add
or
es
and
and
sbb
pop
xchg
sbb
addb
push
push
in
cmp
leave
xor
add
or
pushf
mov
sub
push
xchg
scas
or
imul
lods
and
or
sub
jl
cmp
sahf
or
pusha
push
inc
jmp
cmp
or
les
jle
sldt
enter
addl
dec
add
js
dec
push
repz
jmp
nop
arpl
enter
imul
or
pop
or
xchg
dec
mov
push
arpl
repnz
xor
or
push
dec
fdiv
adc
jbe
js
inc
sub
jmp
mov
add
sbb
or
stc
pop
adc
arpl
mov
inc
pop
ret
push
or
rclb
sub
movsb
sub
popf
sbb
adc
push
adc
mov
pop
add
and
out
inc
and
cmpl
testl
ret
mov
inc
and
mov
sbb
xchg
push
cmp
dec
add
popl
test
into
inc
mov
in
imul
inc
mov
mov
cmc
push
adc
mov
or
inc
mov
pop
push
xchg
mov
or
sub
orl
inc
inc
pop
add
jb
jo
adc
in
iret
mov
incl
mov
xorl
cmpsl
mov
fs
sbb
mov
mov
push
inc
jecxz
mov
mov
add
fsubrs
or
into
mov
dec
pop
xchg
dec
dec
inc
loope
xchg
mov
and
rcll
mov
lea
xor
shl
sbb
or
fildl
xchg
or
mov
icebp
out
das
xchg
insb
inc
call
adc
or
or
test
and
sub
psubusw
mov
pop
rorb
mov
or
inc
mov
popa
sbb
add
push
les
or
and
xchg
in
xchg
cmpsb
pusha
xor
inc
add
push
adc
mov
gs
xor
lods
sti
mov
aam
or
das
imul
movsl
or
jmp
enter
xor
dec
je
arpl
rorb
pop
adc
inc
sbb
xor
test
inc
pop
mov
jns
mov
xor
pop
adc
inc
out
inc
lcall
adc
add
add
dec
sbb
inc
sub
dec
sbb
xor
cmp
subl
xor
and
in
dec
inc
int
sbb
jl
sub
dec
dec
inc
add
jne
sub
mov
lret
xchg
mov
dec
repnz
daa
mov
mov
push
and
sub
pop
xor
ljmp
aam
in
in
stos
add
nop
add
adc
dec
cmp
adc
test
pop
and
xchg
imul
pop
jo
push
adc
adc
cmp
cmpsb
push
inc
or
ljmp
push
jae
repnz
add
inc
fstl
pop
add
xchg
mov
or
lods
stos
lahf
mov
mov
es
nop
cmp
inc
inc
sbb
aas
adc
jo
lahf
dec
add
sub
dec
dec
roll
and
and
inc
and
pop
dec
movsl
cmpb
sbb
addl
and
adc
xor
dec
dec
add
or
or
xchg
pop
dec
or
pusha
and
pop
lea
or
subl
loopne
cmpsl
adc
and
push
and
jb
push
popf
test
lds
mov
jmp
and
arpl
inc
xorl
or
jo
cs
sbb
add
sbb
cmp
inc
int
inc
repnz
add
inc
sub
aam
fwait
cmp
aaa
cmp
nop
out
sub
push
xchg
push
movsb
pop
mov
repz
sti
sub
push
inc
mov
jns
xchg
and
popf
bound
adc
mov
clc
and
mov
adc
jno
xchg
xchg
jno
les
movsl
mov
push
les
push
mov
push
jne
push
mov
imul
inc
jnp
pop
push
lds
dec
inc
mov
jo
sbb
lds
arpl
push
cld
sub
cmp
mov
dec
and
adc
and
mov
daa
pop
sahf
adc
and
in
and
shrb
mov
hlt
and
jge
pop
push
aad
cmp
andb
or
push
jbe
cmp
push
sub
pop
add
aam
or
push
push
xchg
xor
sbb
daa
add
mov
inc
lods
inc
lods
movsb
stos
shlb
jns
inc
js
repnz
push
or
mov
lcall
sbb
in
shlb
mov
orl
fildll
sub
scas
adc
lods
add
call
push
jns
xor
je
lcall
adc
lods
call
test
add
test
inc
push
mov
mov
pop
les
arpl
adc
xchg
loope
pop
xor
mov
bound
xor
les
pop
jne
sub
std
and
dec
push
dec
outsl
sbb
aad
cmp
sub
ret
gs
dec
shlb
or
int
push
pop
adc
movsb
or
adc
sbb
pop
push
loopne
icebp
rcrl
sarl
dec
add
or
sbb
jmp
sub
xor
xchg
ret
and
push
inc
mov
mov
push
lret
call
popa
sbb
sbb
sub
sbb
or
adc
scas
jo
aaa
fistl
cmp
ss
push
lcall
jno
xchg
inc
sub
insl
fildl
sbb
xor
sub
test
or
or
dec
xor
dec
sbb
push
dec
outsb
adc
jb
test
push
fcompl
add
jp
pop
dec
add
mov
cwtl
sub
sub
cmp
daa
or
mov
fnstsw
and
xor
cmp
adc
jo
add
dec
pop
dec
in
xor
mov
cltd
outsl
inc
sbb
roll
subb
push
inc
dec
insb
sahf
movsb
imul
lea
nop
scas
nop
sub
inc
arpl
xor
stc
cmp
adc
in
cmp
aad
jne
outsl
add
adc
and
repz
mov
xor
int
in
mov
dec
dec
adc
mov
bound
or
pop
mov
sbb
test
shrl
rclb
push
inc
loope
mov
cmp
add
dec
pop
inc
mov
rolb
add
dec
mov
sbb
cmpsb
cs
call
in
inc
push
or
pop
or
rorb
add
push
fldt
inc
pop
or
or
xorb
pop
sbb
mov
push
shll
bound
inc
or
mov
add
test
mov
mov
test
and
cs
adc
mov
hlt
sbb
mov
xchg
cwtl
jecxz
call
cmpsl
add
fwait
and
inc
loopne
adc
push
or
jmp
adc
icebp
or
or
mov
popa
jno
inc
adc
sar
arpl
std
subl
or
inc
adc
and
inc
mov
xor
cmp
jo
pop
pop
dec
inc
es
popf
jmp
mov
lods
inc
push
xor
sub
mov
stos
mov
pusha
or
std
push
add
andl
dec
repz
push
add
pop
mov
mov
std
add
dec
sbb
mov
add
je
jge
sbb
push
bound
push
add
lahf
and
jp
pop
sbb
adc
and
sub
inc
mov
loope
fisttps
jae
into
mov
and
cltd
dec
xchg
scas
cs
add
loope
lret
or
outsb
dec
xchg
ficoms
out
adc
je
jno
sbb
call
mov
cmp
test
add
sub
imul
popa
add
xor
sbb
mov
jl
push
test
sbb
repz
push
stc
adc
mov
lea
xor
fwait
repnz
xor
xor
lea
nop
aaa
inc
in
xorb
or
in
mov
or
xor
dec
addr16
mov
test
pop
jmp
sbb
nop
inc
add
mov
scas
jge
add
fxch
jmp
lea
or
lahf
mov
inc
cmp
dec
xor
cli
aad
and
cs
dec
fwait
bound
push
int
cmp
cltd
add
cmp
jmp
and
inc
shrl
in
stos
push
ljmp
lcall
stos
push
adc
jb
xor
adc
addr16
sbb
mov
ret
pusha
xchg
jo
pop
test
dec
pop
inc
dec
mov
dec
pop
fimuls
ljmp
repz
pop
jge
pop
inc
jno
jne
pop
xor
pop
mov
nop
push
aam
decl
pushf
test
jmp
repnz
push
push
or
shr
or
xor
addl
and
jbe
xor
mov
and
enter
pop
and
in
pusha
subb
sahf
mov
sarb
sbb
push
hlt
loope
add
mov
dec
sbb
pusha
pop
sub
pop
test
add
pop
dec
in
jle
add
push
jae
xchg
push
push
xor
adc
add
lea
in
or
pop
jno
add
inc
shlb
adc
adc
jno
pop
jno
dec
push
int
inc
xchg
popa
jae
orl
or
pop
enter
push
je
cmpsb
push
stos
sub
arpl
or
sahf
dec
sbb
cltd
roll
mov
and
adc
test
pop
sub
mov
push
xor
add
push
dec
ret
lahf
out
rol
add
test
lds
jns
dec
sub
cmpsb
shll
iret
loop
push
cmpl
jmp
inc
or
sub
movsb
and
mov
sbb
add
and
fistl
mov
insl
jnp
adc
pop
push
mov
lods
stos
mov
inc
push
or
pop
and
adc
cmp
stos
lea
popf
fldcw
test
test
sbb
aaa
xor
int
and
or
imull
adc
mov
mov
jl
adc
xor
les
dec
in
push
leave
ds
sub
sbb
dec
stc
cmpsb
mov
orl
or
loopne
scas
adc
add
and
loopne
je
xor
jmp
test
orl
push
xchg
dec
cmpsb
in
sub
pusha
stos
inc
lcall
mov
push
xor
out
or
shll
xor
push
in
dec
sahf
test
sar
mov
ret
lds
test
adc
pusha
or
sub
xor
xchg
mov
or
andl
add
mov
mulb
or
jmp
and
xchg
pop
popa
cmpsl
cld
pop
add
add
jne
ja
adc
addr16
and
sub
dec
push
adc
dec
cmc
inc
xor
push
pusha
add
adc
nop
pushf
cmp
addr16
cmp
add
dec
pop
mov
sub
fadd
mov
inc
inc
sbb
ret
addb
call
and
mov
dec
mull
cltd
mov
sarb
subb
or
leave
outsb
pop
and
push
fldt
mov
xlat
adc
xchg
mov
dec
das
mov
dec
sbb
inc
mov
mov
scas
dec
sar
mov
sar
loope
sbb
mov
or
mov
call
jge
lods
sub
xchg
das
add
cmp
mov
jne
jb
jle
fdivrl
lods
mov
add
mov
sub
outsb
stos
jl
ret
adc
xlat
cmpsl
lcall
inc
jb
dec
xchg
sbb
add
adc
or
icebp
mov
cwtl
push
sub
fs
or
jge
pop
sbb
push
pop
sbb
push
add
inc
ret
daa
or
mov
and
pusha
pop
adc
ljmp
repnz
mov
addb
mov
inc
pop
lds
mov
ret
je
movsl
test
mov
rorb
xor
inc
mov
lcall
push
mov
sbb
pop
repz
movsl
jns
pop
lcall
inc
and
or
jmp
mov
add
jp
orl
lret
xor
push
rcll
mov
push
js
sar
aam
sub
inc
add
rclb
xor
xchg
jnp
cmc
pop
scas
es
scas
dec
roll
and
inc
xorl
push
or
leave
xchg
or
sbb
stc
aam
push
adc
mov
lds
adc
add
popf
pushf
adc
jns
push
add
pop
mov
push
mov
add
jnp
addb
aaa
dec
cld
jg
push
call
js
push
outsl
adc
xchg
das
sbb
fdivrs
imul
cltd
mov
sub
jo
fstps
cmp
push
test
cwtl
mov
or
in
mov
paddw
sub
pop
rclb
and
icebp
cmpl
mov
test
pusha
adcb
or
pop
pop
lds
lds
jno
xchg
shrb
mov
push
jne
inc
mov
nop
dec
mov
cmp
xor
fucomp
imul
pop
js
add
dec
dec
and
xor
cmp
or
mov
mov
mov
pop
lret
push
imul
cmp
add
loopne
adc
push
sub
xor
or
mov
and
jb
adc
and
and
adc
aam
out
mov
int
fadds
and
jge
and
js
mov
dec
roll
or
jbe
push
aas
xlat
push
jmp
pop
xchg
dec
dec
adc
mov
and
sub
arpl
scas
jno
mov
mov
add
xor
mov
add
jns
andl
loopne
add
scas
shll
push
arpl
mov
das
lcall
push
mov
pushf
popf
sbbb
pop
adc
jecxz
dec
dec
xor
inc
fs
and
leave
mov
push
xor
push
in
mov
sub
pop
jno
or
insb
stc
pop
and
lock
test
pop
adc
addr16
jno
pusha
rorb
icebp
leave
mov
lods
scas
ret
ljmp
mov
test
inc
fmull
shll
gs
loope
aas
dec
loopne
mov
sbb
push
pop
pop
sbb
data16
shll
roll
add
pop
add
pop
cli
pop
jne
push
ljmp
rolb
inc
sub
inc
fdivrl
adc
xchg
xchg
scas
test
test
cmp
pusha
rcll
test
andb
inc
imul
add
and
or
add
mov
xchg
xor
les
xor
push
js
insb
mov
push
xchg
testl
enter
pop
cmp
fcmovnb
inc
mov
adc
and
sub
mov
and
icebp
imul
stos
add
xchg
inc
and
pop
or
jo
xor
test
push
and
pushf
notl
lods
subl
or
ja
or
jae
dec
cmp
stc
push
shlb
xchg
adc
cmp
push
loopne
xchg
lods
sub
adc
sbb
pop
aas
inc
std
fisttpll
adc
cmp
dec
push
mov
adc
mov
pop
test
orb
sub
test
dec
push
push
sub
sbb
out
add
loop
dec
and
sbb
std
jno
xor
pop
add
xchg
ret
test
cs
xor
loopne
in
push
scas
lcall
jmp
xor
push
mov
shrb
xlat
jne
mov
fadds
notb
and
push
stos
andl
ror
and
push
add
xor
mov
sub
hlt
sbb
in
mov
insl
sbb
mov
scas
mov
sub
and
inc
and
inc
pop
push
cmp
aas
add
test
call
push
imul
mov
push
lret
cmp
push
push
mov
lds
enter
loopne
jmp
sbb
cmc
lods
add
cmp
lock
mov
sub
or
and
and
pop
xchg
loopne
mov
or
mov
or
mov
repz
mov
sub
add
loopne
adc
push
push
push
push
pop
clc
insl
movsb
sbb
stos
orb
sub
fstpt
xorb
loop
jl
and
mov
or
pop
rolb
les
mov
inc
cs
mov
push
inc
sbb
movsl
push
dec
shrl
xor
sbb
adc
and
add
cmp
lods
or
xchg
stos
rorl
rol
inc
rcl
cmp
xchg
scas
mov
or
and
mov
or
push
adc
xor
bound
daa
xor
int3
inc
pop
popf
adc
dec
and
and
addb
dec
xorl
outsl
sub
push
gs
and
es
stos
mov
sbb
sbb
jnp
jmp
orl
mov
mov
xor
add
adc
sbb
test
mov
cli
mov
adc
xor
pushf
aad
inc
inc
je
rolb
testb
xor
sub
jmp
sbb
sbb
push
loop
insl
nop
mov
jbe
add
outsb
into
jmp
pusha
or
or
int3
clc
mov
test
popa
push
pop
add
sbb
ret
push
cs
mov
dec
mov
mov
sbb
xor
bound
sbbl
sbb
orb
xor
imul
dec
cltd
mov
dec
clc
leave
push
aaa
pop
mov
mov
clc
ret
jbe
test
adc
ret
mov
pop
pop
enter
roll
jo
xorb
lcall
dec
mov
pop
sub
xor
sbb
xchg
rclb
or
pop
rorb
cmova
add
push
lods
dec
and
push
dec
jge
mov
lock
repz
fadd
push
and
push
in
inc
push
mov
sbb
and
push
dec
inc
sbb
lea
add
adc
stos
xorl
or
test
xchg
or
xchg
daa
cmpl
push
sbb
imul
sub
dec
mov
xor
jae
cltd
push
xchg
addl
js
inc
add
xor
mov
sub
adc
push
push
lret
jbe
imul
or
push
sbb
test
xchg
push
push
xor
xor
sbb
add
daa
mov
stc
mov
sub
pop
xor
and
enter
inc
pop
push
ffree
rcrb
push
push
call
mov
adc
mov
sbb
or
cmp
dec
xchg
or
xor
add
mov
mov
nop
cmpsb
fistl
mov
outsl
mov
mov
mov
sub
leave
cmp
aas
push
je
xor
cmp
fstpl
lds
xchg
pop
aad
int3
sbb
popa
mov
adc
jg
test
es
or
std
mov
fucomi
sahf
adc
dec
add
pop
ja
fistps
lock
or
enter
pop
xchg
popa
aam
call
pop
out
cmp
jle
mov
fistpll
fcmovu
idiv
and
sbb
push
add
xor
pop
sbb
iret
sti
mov
cli
adc
call
adc
jmp
shufps
jnp
or
inc
adc
mov
jo
or
sbb
jle
xchg
sbb
xor
rcrb
std
scas
fimull
push
cmc
icebp
cwtl
into
jbe
mov
inc
in
popa
pop
dec
dec
jne
push
sbb
lahf
test
adc
lret
and
sub
and
ficomps
test
dec
push
adcl
push
lahf
mov
adc
sub
mov
and
orl
sub
adc
add
push
push
mov
notb
xchg
cmp
xchg
xchg
mov
jmp
ljmp
shrl
iret
mulb
popa
popa
iret
hlt
push
sahf
out
pushf
pop
sbb
adc
adc
xchg
cmpsl
repnz
or
push
fimuls
inc
mov
or
adc
shrb
fisttpll
iret
adc
push
jns
jmp
jmp
repnz
sahf
lret
in
enter
xchg
out
int
popa
adcl
lds
in
mov
xlat
rol
dec
in
rcl
icebp
call
inc
cld
imul
cli
or
push
clc
stc
loopne
or
iret
jbe
xchg
xchg
jg
fisubl
adc
es
popa
movsl
pop
ljmp
mov
std
adc
jne
jbe
pop
jle
xchg
sub
mov
ja
les
jmp
pop
xor
mov
out
mov
adc
fisubs
ljmp
sbb
cmp
pop
jge
mov
jmp
or
imul
ljmp
dec
mov
push
fs
mov
popf
fidivs
jp
mov
add
lret
xor
jle
cs
mov
repz
xchg
push
inc
xchg
jo
popf
fildl
hlt
sahf
jbe
xchg
push
inc
out
pmaxub
adc
jp
jbe
nop
pop
ret
jp
ret
sbb
mov
imulb
jle
cld
pop
inc
lahf
pusha
fdiv
pop
sti
dec
mov
mov
pop
xchg
jb
push
jle
xchg
pop
fidivs
or
fwait
add
mov
out
dec
jbe
jp
pop
and
imull
and
push
jne
push
and
mov
dec
jbe
add
mov
jne
inc
rclb
add
into
outsb
mov
fistl
push
stos
ret
or
adc
xchg
adc
mov
sub
adc
push
adc
mov
xchg
jae
sub
jb
mov
xor
mov
fisubrs
jg
pop
adc
data16
lahf
mov
es
repz
adc
lds
int
dec
mov
push
sub
mov
into
xchg
out
jbe
pop
iret
into
cmc
jno
imul
emms
mov
lds
adc
popf
mov
loopne
cltd
adc
fwait
pop
pushf
ja
aam
sbb
aad
pop
jne
iret
mov
sbb
dec
adc
ror
jbe
fsubrl
mov
pop
xchg
and
and
sbb
sub
push
outsl
xchg
out
ss
scas
outsl
js
sub
cwtl
adc
les
std
fwait
pushf
divb
imul
fwait
lock
call
rcll
push
adc
cmp
sahf
fiadds
mov
sbb
insl
fcoms
pop
sbb
sub
inc
outsb
push
scas
ficomps
jbe
daa
daa
pop
mov
repz
loopne
test
lock
pop
idivb
xchg
push
hlt
inc
pop
inc
rcrb
hlt
insb
mov
test
sahf
add
push
jb
sahf
pop
sub
test
push
pop
xchg
push
pushf
add
mov
mov
pop
lret
adc
int
leave
mov
aam
ret
dec
or
xor
add
stos
jp
movsl
xor
filds
pop
mov
mov
lahf
fnstsw
jbe
out
sbb
jbe
popf
adc
xchg
adc
rol
cmp
sbbb
cwtl
popa
jle
dec
cmp
aaa
push
jmp
push
and
xchg
ficomps
fistpl
stos
sub
test
bound
xchg
or
xchg
mov
into
jbe
pushf
mov
pop
xor
jmp
mov
push
push
cmp
mov
in
mov
xchg
inc
jmp
fimull
inc
repnz
xlat
jmp
in
adc
es
scas
stos
pushf
adc
fldenv
jne
mov
push
sti
adc
dec
insl
mov
cwtl
add
clc
pop
mov
jns
xchg
clc
pop
jbe
imul
popf
movsl
jb
mov
mov
pushf
mov
sahf
lcall
fnstsw
jecxz
cli
adc
xchg
cli
ja
inc
sub
xchg
bound
pop
jmp
fwait
cmpsb
imul
xchg
mov
ds
cwtl
adc
inc
mov
jle
adc
inc
rclb
int3
scas
add
adc
js
mov
lods
pop
lods
popa
movsl
dec
jmp
stos
adc
mov
nop
adc
cmp
ja
xchg
cltd
clc
xor
in
xchg
or
jmp
mov
popf
popf
data16
js
fwait
adc
add
sbb
sbb
push
les
cmp
rcl
insb
mov
xor
fnsave
ficomps
loopne
xor
mov
decl
scas
fcoms
inc
call
xchg
rcrl
pushf
popf
aad
adc
mov
push
xchg
push
inc
xor
arpl
add
mov
jmp
popa
dec
inc
lcall
outsb
pusha
das
fisttpll
ret
mov
sahf
rclb
add
mov
mov
sub
add
arpl
mov
adc
xor
lcall
cld
push
xchg
insb
cmp
shll
pop
xchg
pop
xchg
lods
rorl
insl
cmp
or
or
insl
sub
sub
hlt
xchg
xor
inc
jmp
adc
fs
xor
mov
ficoms
xchg
dec
jmp
jns
jle
dec
jle
stos
scas
inc
xchg
xor
clc
ljmp
xchg
lods
dec
imul
lcall
mov
jge
cmpsl
add
leave
jmp
pop
and
push
inc
lods
inc
adc
inc
sub
pcmpeqd
mov
or
and
push
out
mov
jns
fstps
add
dec
popf
iret
pushf
push
cmp
xchg
jbe
cwtl
sub
mov
or
push
leave
inc
sbb
xor
push
add
inc
jmp
adc
push
leave
movsb
lahf
jbe
fwait
dec
ja
add
lods
xor
dec
jbe
sbb
lea
push
lahf
xchg
or
test
inc
xor
imul
stos
mov
sahf
fs
cmp
xchg
xor
mov
loope
cmp
sbb
fwait
stos
dec
filds
insw
pop
pop
sub
stos
or
and
daa
outsb
leave
inc
add
insl
cmp
rcrb
pushf
dec
mov
scas
xchg
inc
sbb
adc
inc
sub
sub
fcoms
rcr
pop
jecxz
xor
jbe
mov
mov
popf
or
jl
xchg
sbb
adc
xor
jle
mov
mov
push
dec
cmp
aaa
outsb
mov
outsb
xchg
lods
push
adc
in
aaa
or
sub
ja
inc
jp
inc
and
jne
adc
out
inc
push
sub
sahf
xchg
xchg
lahf
adc
add
inc
add
cld
incb
aas
std
push
std
add
pop
sti
lret
mov
add
es
es
cmp
jl
imul
outsb
jnp
idivl
aas
cs
jge
mov
jg
push
aas
aas
xchg
fistpl
decl
inc
outsb
pop
jg
xchg
jbe
ds
cmc
mov
jl
aaa
lahf
cmp
pop
lock
pushl
cmc
push
xchg
mov
das
iret
push
incl
ret
add
dec
sti
not
pop
dec
pop
mov
notl
mov
lahf
cmc
outsl
ret
add
in
pop
xlat
iret
js
pop
out
jbe
insl
mov
jg
mov
mov
and
mov
adc
out
mov
ljmp
push
sub
sti
mov
sbb
mov
nop
pusha
stc
push
push
push
cmc
xchg
mov
jnp
mov
push
in
js
aaa
idivl
aaa
jns
or
in
js
mov
xchg
lea
xchg
jg
call
push
mov
mov
xlat
dec
sti
mov
lods
aas
aaa
cmpsl
push
xchg
cmpsl
mov
jo
pop
out
clts
sbb
decl
das
ds
mov
daa
je
arpl
pop
jnp
xchg
xlat
loope
lods
fmuls
push
out
inc
jno
loope
xlat
div
xchg
jg
call
xchg
dec
or
in
scas
mov
or
push
outsl
mov
jo
or
rcl
int3
jg
les
push
cmp
out
icebp
mov
jmp
call
out
add
pop
mov
fwait
jno
arpl
push
movsl
xor
adc
fwait
mov
adc
pop
scas
cltd
les
inc
cmp
mov
mov
arpl
push
sbb
scas
adc
or
mov
jmp
sbb
sub
or
cli
sub
mov
cvtdq2ps
outsl
dec
loop
pop
xchg
adc
into
shlb
leave
repz
ret
aaa
mov
lods
xchg
out
mov
sbb
cmp
ficompl
jnp
repnz
adc
push
xchg
sub
fwait
ficompl
push
adc
mov
sub
int
out
int3
insl
out
mov
jge
test
ljmp
lret
jecxz
test
movsl
mov
dec
jmp
mov
mov
jg
jno
sti
jle,pt
mov
mov
sahf
arpl
sbb
push
push
and
mov
mov
pop
adc
ljmp
push
gs
outsl
outsb
jae
insb
gs
outsl
fs
gs
jo
outsl
arpl
jg
dec
popa
insl
gs
imul
inc
push
je
je
inc
ljmp
inc
imul
imul
dec
popa
jae
inc
std
divb
outsl
jb
push
jns
pop
inc
insb
jne
push
dec
data16
mov
sub
pop
insb
outsl
outsb
push
push
jl
stc
xlat
outsb
xlat
fimull
jo
push
je
bound
push
js
jge
insl
sti
inc
outsb
jbe
mov
push
fisubrl
jae
push
mov
push
lods
es
jae
dec
push
xorb
js
inc
add
insb
inc
test
xor
ss
js,pn
gs
lds
gs
inc
js
add
gs
push
inc
fs
cmp
bound
arpl
jb
cwtl
mov
in
idivl
popa
jb
jnp
jns
insl
push
imul
scas
adc
push
sbb
mov
push
push
push
stos
popa
es
dec
lcall
add
sub
mov
jo
jg
fiaddl
jb
outsb
adc
xor
push
andb
out
dec
outsb
data16
or
mov
xchg
cs
and
fnstenv
fs
push
insb
pushw
xorb
outsb
scas
outsl
sub
cmp
mov
jb
push
jbe
mov
jle
mov
and
popaw
jne
je
lock
movsb
adc
dec
or
popa
addr16
push
and
jne
adc
jo
out
les
in
sub
dec
out
inc
add
jmp
int
rorl
gs
sub
mov
dec
bnd
cs
mov
jb
pop
sbb
push
dec
xchg
push
sub
sbb
push
hlt
inc
pop
movsb
imul
xor
push
mov
xor
es
xor
sbb
cmp
inc
and
xor
push
push
insl
add
inc
outsl
outsl
stos
adc
and
pop
inc
jbe
sbb
sbb
loopne
push
sub
test
cmp
roll
mov
adc
jo
std
dec
sub
push
outsb
adc
lret
ficompl
lcall
dec
inc
push
je
insb
subl
fsubrl
outsl
sbb
pusha
push
push
sub
adcl
pushf
popa
jmp
xlat
psubq
arpl
retw
and
push
mov
cmp
out
gs
or
jo
loopne
pop
cmp
dec
pushf
fs
outsb
xor
pop
pop
not
xor
pop
push
jae
push
in
or
into
xor
in
sbb
mov
pusha
push
shlb
cld
push
enter
sbb
shrl
sbb
xorl
ja
inc
cwtl
push
je
mov
jo
push
pop
cmp
jns
inc
inc
sub
mov
add
mov
adc
rorl
pusha
pop
jae
cld
loopne
or
push
jp
orl
add
xchg
mov
and
bnd
sub
jle
imul
jbe
adc
bound
fimull
data16
pop
mov
jo
outsl
push
fs
xor
lods
inc
pusha
or
push
outsl
mov
dec
popa
jo
loopne
not
jae
movsl
jge
or
aas
add
mov
dec
dec
dec
dec
push
pushf
gs
dec
inc
jns
xor
jns
sbb
mov
mov
loopne
pop
pusha
gs
cmpsb
je
movlps
cld
outsl
jns
outsb
dec
gs
push
inc
dec
cltd
out
adc
stc
push
jae
loop
cmp
popa
or
rolb
sti
push
sub
movsl
sub
xor
gs
aam
test
adc
test
mov
rolb
push
inc
add
repz
cld
pop
add
pusha
inc
jne
add
add
add
add
adc
gs
and
and
divb
in
add
pop
add
add
add
push
cmp
int
fwait
add
pop
push
imul
insl
or
sub
or
sbb
xor
mov
pushf
push
stos
or
add
adc
jge
lret
je
notb
adc
and
jge
inc
or
test
fs
xor
cmp
inc
cs
push
xchg
xor
into
popf
add
cmp
sbb
push
aad
push
vprotq
sub
inc
xlat
jge
stc
mov
or
add
adc
sbb
add
add
add
add
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
